
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//genl_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404d90 <.init>:
  404d90:	stp	x29, x30, [sp, #-16]!
  404d94:	mov	x29, sp
  404d98:	bl	4053c0 <_start@@Base+0x50>
  404d9c:	ldp	x29, x30, [sp], #16
  404da0:	ret

Disassembly of section .plt:

0000000000404db0 <memcpy@plt-0x20>:
  404db0:	stp	x16, x30, [sp, #-16]!
  404db4:	adrp	x16, 41e000 <_IO_stdin_used@@Base+0x11180>
  404db8:	ldr	x17, [x16, #4088]
  404dbc:	add	x16, x16, #0xff8
  404dc0:	br	x17
  404dc4:	nop
  404dc8:	nop
  404dcc:	nop

0000000000404dd0 <memcpy@plt>:
  404dd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16]
  404dd8:	add	x16, x16, #0x0
  404ddc:	br	x17

0000000000404de0 <recvmsg@plt>:
  404de0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #8]
  404de8:	add	x16, x16, #0x8
  404dec:	br	x17

0000000000404df0 <strtoul@plt>:
  404df0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #16]
  404df8:	add	x16, x16, #0x10
  404dfc:	br	x17

0000000000404e00 <strlen@plt>:
  404e00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #24]
  404e08:	add	x16, x16, #0x18
  404e0c:	br	x17

0000000000404e10 <fputs@plt>:
  404e10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #32]
  404e18:	add	x16, x16, #0x20
  404e1c:	br	x17

0000000000404e20 <exit@plt>:
  404e20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #40]
  404e28:	add	x16, x16, #0x28
  404e2c:	br	x17

0000000000404e30 <perror@plt>:
  404e30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #48]
  404e38:	add	x16, x16, #0x30
  404e3c:	br	x17

0000000000404e40 <__cmsg_nxthdr@plt>:
  404e40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #56]
  404e48:	add	x16, x16, #0x38
  404e4c:	br	x17

0000000000404e50 <strtoll@plt>:
  404e50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #64]
  404e58:	add	x16, x16, #0x40
  404e5c:	br	x17

0000000000404e60 <strtod@plt>:
  404e60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #72]
  404e68:	add	x16, x16, #0x48
  404e6c:	br	x17

0000000000404e70 <geteuid@plt>:
  404e70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #80]
  404e78:	add	x16, x16, #0x50
  404e7c:	br	x17

0000000000404e80 <sethostent@plt>:
  404e80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #88]
  404e88:	add	x16, x16, #0x58
  404e8c:	br	x17

0000000000404e90 <bind@plt>:
  404e90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #96]
  404e98:	add	x16, x16, #0x60
  404e9c:	br	x17

0000000000404ea0 <ftell@plt>:
  404ea0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #104]
  404ea8:	add	x16, x16, #0x68
  404eac:	br	x17

0000000000404eb0 <sprintf@plt>:
  404eb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #112]
  404eb8:	add	x16, x16, #0x70
  404ebc:	br	x17

0000000000404ec0 <getuid@plt>:
  404ec0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #120]
  404ec8:	add	x16, x16, #0x78
  404ecc:	br	x17

0000000000404ed0 <putc@plt>:
  404ed0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #128]
  404ed8:	add	x16, x16, #0x80
  404edc:	br	x17

0000000000404ee0 <strftime@plt>:
  404ee0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #136]
  404ee8:	add	x16, x16, #0x88
  404eec:	br	x17

0000000000404ef0 <fputc@plt>:
  404ef0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #144]
  404ef8:	add	x16, x16, #0x90
  404efc:	br	x17

0000000000404f00 <dlopen@plt>:
  404f00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #152]
  404f08:	add	x16, x16, #0x98
  404f0c:	br	x17

0000000000404f10 <snprintf@plt>:
  404f10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #160]
  404f18:	add	x16, x16, #0xa0
  404f1c:	br	x17

0000000000404f20 <fileno@plt>:
  404f20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #168]
  404f28:	add	x16, x16, #0xa8
  404f2c:	br	x17

0000000000404f30 <localtime@plt>:
  404f30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #176]
  404f38:	add	x16, x16, #0xb0
  404f3c:	br	x17

0000000000404f40 <fclose@plt>:
  404f40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #184]
  404f48:	add	x16, x16, #0xb8
  404f4c:	br	x17

0000000000404f50 <atoi@plt>:
  404f50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #192]
  404f58:	add	x16, x16, #0xc0
  404f5c:	br	x17

0000000000404f60 <time@plt>:
  404f60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #200]
  404f68:	add	x16, x16, #0xc8
  404f6c:	br	x17

0000000000404f70 <malloc@plt>:
  404f70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #208]
  404f78:	add	x16, x16, #0xd0
  404f7c:	br	x17

0000000000404f80 <setsockopt@plt>:
  404f80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #216]
  404f88:	add	x16, x16, #0xd8
  404f8c:	br	x17

0000000000404f90 <dlsym@plt>:
  404f90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #224]
  404f98:	add	x16, x16, #0xe0
  404f9c:	br	x17

0000000000404fa0 <__isoc99_fscanf@plt>:
  404fa0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #232]
  404fa8:	add	x16, x16, #0xe8
  404fac:	br	x17

0000000000404fb0 <__libc_start_main@plt>:
  404fb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #240]
  404fb8:	add	x16, x16, #0xf0
  404fbc:	br	x17

0000000000404fc0 <strcat@plt>:
  404fc0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #248]
  404fc8:	add	x16, x16, #0xf8
  404fcc:	br	x17

0000000000404fd0 <if_indextoname@plt>:
  404fd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #256]
  404fd8:	add	x16, x16, #0x100
  404fdc:	br	x17

0000000000404fe0 <memset@plt>:
  404fe0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #264]
  404fe8:	add	x16, x16, #0x108
  404fec:	br	x17

0000000000404ff0 <gettimeofday@plt>:
  404ff0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #272]
  404ff8:	add	x16, x16, #0x110
  404ffc:	br	x17

0000000000405000 <sendmsg@plt>:
  405000:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #280]
  405008:	add	x16, x16, #0x118
  40500c:	br	x17

0000000000405010 <calloc@plt>:
  405010:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #288]
  405018:	add	x16, x16, #0x120
  40501c:	br	x17

0000000000405020 <cap_get_flag@plt>:
  405020:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #296]
  405028:	add	x16, x16, #0x128
  40502c:	br	x17

0000000000405030 <bcmp@plt>:
  405030:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #304]
  405038:	add	x16, x16, #0x130
  40503c:	br	x17

0000000000405040 <strcasecmp@plt>:
  405040:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #312]
  405048:	add	x16, x16, #0x138
  40504c:	br	x17

0000000000405050 <realloc@plt>:
  405050:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #320]
  405058:	add	x16, x16, #0x140
  40505c:	br	x17

0000000000405060 <cap_set_proc@plt>:
  405060:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #328]
  405068:	add	x16, x16, #0x148
  40506c:	br	x17

0000000000405070 <strdup@plt>:
  405070:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #336]
  405078:	add	x16, x16, #0x150
  40507c:	br	x17

0000000000405080 <strerror@plt>:
  405080:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #344]
  405088:	add	x16, x16, #0x158
  40508c:	br	x17

0000000000405090 <close@plt>:
  405090:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #352]
  405098:	add	x16, x16, #0x160
  40509c:	br	x17

00000000004050a0 <strrchr@plt>:
  4050a0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #360]
  4050a8:	add	x16, x16, #0x168
  4050ac:	br	x17

00000000004050b0 <recv@plt>:
  4050b0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #368]
  4050b8:	add	x16, x16, #0x170
  4050bc:	br	x17

00000000004050c0 <__gmon_start__@plt>:
  4050c0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #376]
  4050c8:	add	x16, x16, #0x178
  4050cc:	br	x17

00000000004050d0 <abort@plt>:
  4050d0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #384]
  4050d8:	add	x16, x16, #0x180
  4050dc:	br	x17

00000000004050e0 <feof@plt>:
  4050e0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #392]
  4050e8:	add	x16, x16, #0x188
  4050ec:	br	x17

00000000004050f0 <strcmp@plt>:
  4050f0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #400]
  4050f8:	add	x16, x16, #0x190
  4050fc:	br	x17

0000000000405100 <__ctype_b_loc@plt>:
  405100:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #408]
  405108:	add	x16, x16, #0x198
  40510c:	br	x17

0000000000405110 <strtol@plt>:
  405110:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #416]
  405118:	add	x16, x16, #0x1a0
  40511c:	br	x17

0000000000405120 <cap_get_proc@plt>:
  405120:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #424]
  405128:	add	x16, x16, #0x1a8
  40512c:	br	x17

0000000000405130 <fread@plt>:
  405130:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #432]
  405138:	add	x16, x16, #0x1b0
  40513c:	br	x17

0000000000405140 <getline@plt>:
  405140:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #440]
  405148:	add	x16, x16, #0x1b8
  40514c:	br	x17

0000000000405150 <gethostbyaddr@plt>:
  405150:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #448]
  405158:	add	x16, x16, #0x1c0
  40515c:	br	x17

0000000000405160 <free@plt>:
  405160:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #456]
  405168:	add	x16, x16, #0x1c8
  40516c:	br	x17

0000000000405170 <inet_pton@plt>:
  405170:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #464]
  405178:	add	x16, x16, #0x1d0
  40517c:	br	x17

0000000000405180 <send@plt>:
  405180:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #472]
  405188:	add	x16, x16, #0x1d8
  40518c:	br	x17

0000000000405190 <strspn@plt>:
  405190:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405194:	ldr	x17, [x16, #480]
  405198:	add	x16, x16, #0x1e0
  40519c:	br	x17

00000000004051a0 <strchr@plt>:
  4051a0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051a4:	ldr	x17, [x16, #488]
  4051a8:	add	x16, x16, #0x1e8
  4051ac:	br	x17

00000000004051b0 <strtoull@plt>:
  4051b0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051b4:	ldr	x17, [x16, #496]
  4051b8:	add	x16, x16, #0x1f0
  4051bc:	br	x17

00000000004051c0 <fwrite@plt>:
  4051c0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051c4:	ldr	x17, [x16, #504]
  4051c8:	add	x16, x16, #0x1f8
  4051cc:	br	x17

00000000004051d0 <socket@plt>:
  4051d0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051d4:	ldr	x17, [x16, #512]
  4051d8:	add	x16, x16, #0x200
  4051dc:	br	x17

00000000004051e0 <fflush@plt>:
  4051e0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051e4:	ldr	x17, [x16, #520]
  4051e8:	add	x16, x16, #0x208
  4051ec:	br	x17

00000000004051f0 <strcpy@plt>:
  4051f0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051f4:	ldr	x17, [x16, #528]
  4051f8:	add	x16, x16, #0x210
  4051fc:	br	x17

0000000000405200 <fopen64@plt>:
  405200:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405204:	ldr	x17, [x16, #536]
  405208:	add	x16, x16, #0x218
  40520c:	br	x17

0000000000405210 <cap_clear@plt>:
  405210:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405214:	ldr	x17, [x16, #544]
  405218:	add	x16, x16, #0x220
  40521c:	br	x17

0000000000405220 <isatty@plt>:
  405220:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405224:	ldr	x17, [x16, #552]
  405228:	add	x16, x16, #0x228
  40522c:	br	x17

0000000000405230 <sysconf@plt>:
  405230:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405234:	ldr	x17, [x16, #560]
  405238:	add	x16, x16, #0x230
  40523c:	br	x17

0000000000405240 <asctime@plt>:
  405240:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405244:	ldr	x17, [x16, #568]
  405248:	add	x16, x16, #0x238
  40524c:	br	x17

0000000000405250 <cap_free@plt>:
  405250:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405254:	ldr	x17, [x16, #576]
  405258:	add	x16, x16, #0x240
  40525c:	br	x17

0000000000405260 <if_nametoindex@plt>:
  405260:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405264:	ldr	x17, [x16, #584]
  405268:	add	x16, x16, #0x248
  40526c:	br	x17

0000000000405270 <strchrnul@plt>:
  405270:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405274:	ldr	x17, [x16, #592]
  405278:	add	x16, x16, #0x250
  40527c:	br	x17

0000000000405280 <strstr@plt>:
  405280:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405284:	ldr	x17, [x16, #600]
  405288:	add	x16, x16, #0x258
  40528c:	br	x17

0000000000405290 <__isoc99_sscanf@plt>:
  405290:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405294:	ldr	x17, [x16, #608]
  405298:	add	x16, x16, #0x260
  40529c:	br	x17

00000000004052a0 <strncpy@plt>:
  4052a0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052a4:	ldr	x17, [x16, #616]
  4052a8:	add	x16, x16, #0x268
  4052ac:	br	x17

00000000004052b0 <strcspn@plt>:
  4052b0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052b4:	ldr	x17, [x16, #624]
  4052b8:	add	x16, x16, #0x270
  4052bc:	br	x17

00000000004052c0 <vfprintf@plt>:
  4052c0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052c4:	ldr	x17, [x16, #632]
  4052c8:	add	x16, x16, #0x278
  4052cc:	br	x17

00000000004052d0 <printf@plt>:
  4052d0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052d4:	ldr	x17, [x16, #640]
  4052d8:	add	x16, x16, #0x280
  4052dc:	br	x17

00000000004052e0 <__assert_fail@plt>:
  4052e0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052e4:	ldr	x17, [x16, #648]
  4052e8:	add	x16, x16, #0x288
  4052ec:	br	x17

00000000004052f0 <__errno_location@plt>:
  4052f0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052f4:	ldr	x17, [x16, #656]
  4052f8:	add	x16, x16, #0x290
  4052fc:	br	x17

0000000000405300 <getenv@plt>:
  405300:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405304:	ldr	x17, [x16, #664]
  405308:	add	x16, x16, #0x298
  40530c:	br	x17

0000000000405310 <putchar@plt>:
  405310:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405314:	ldr	x17, [x16, #672]
  405318:	add	x16, x16, #0x2a0
  40531c:	br	x17

0000000000405320 <getsockname@plt>:
  405320:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405324:	ldr	x17, [x16, #680]
  405328:	add	x16, x16, #0x2a8
  40532c:	br	x17

0000000000405330 <fprintf@plt>:
  405330:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405334:	ldr	x17, [x16, #688]
  405338:	add	x16, x16, #0x2b0
  40533c:	br	x17

0000000000405340 <fgets@plt>:
  405340:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405344:	ldr	x17, [x16, #696]
  405348:	add	x16, x16, #0x2b8
  40534c:	br	x17

0000000000405350 <inet_ntop@plt>:
  405350:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405354:	ldr	x17, [x16, #704]
  405358:	add	x16, x16, #0x2c0
  40535c:	br	x17

0000000000405360 <ferror@plt>:
  405360:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405364:	ldr	x17, [x16, #712]
  405368:	add	x16, x16, #0x2c8
  40536c:	br	x17

Disassembly of section .text:

0000000000405370 <_start@@Base>:
  405370:	mov	x29, #0x0                   	// #0
  405374:	mov	x30, #0x0                   	// #0
  405378:	mov	x5, x0
  40537c:	ldr	x1, [sp]
  405380:	add	x2, sp, #0x8
  405384:	mov	x6, sp
  405388:	movz	x0, #0x0, lsl #48
  40538c:	movk	x0, #0x0, lsl #32
  405390:	movk	x0, #0x40, lsl #16
  405394:	movk	x0, #0x547c
  405398:	movz	x3, #0x0, lsl #48
  40539c:	movk	x3, #0x0, lsl #32
  4053a0:	movk	x3, #0x40, lsl #16
  4053a4:	movk	x3, #0xcde8
  4053a8:	movz	x4, #0x0, lsl #48
  4053ac:	movk	x4, #0x0, lsl #32
  4053b0:	movk	x4, #0x40, lsl #16
  4053b4:	movk	x4, #0xce68
  4053b8:	bl	404fb0 <__libc_start_main@plt>
  4053bc:	bl	4050d0 <abort@plt>
  4053c0:	adrp	x0, 41e000 <_IO_stdin_used@@Base+0x11180>
  4053c4:	ldr	x0, [x0, #4040]
  4053c8:	cbz	x0, 4053d0 <_start@@Base+0x60>
  4053cc:	b	4050c0 <__gmon_start__@plt>
  4053d0:	ret
  4053d4:	nop
  4053d8:	adrp	x0, 41f000 <memcpy@GLIBC_2.17>
  4053dc:	add	x0, x0, #0x318
  4053e0:	adrp	x1, 41f000 <memcpy@GLIBC_2.17>
  4053e4:	add	x1, x1, #0x318
  4053e8:	cmp	x1, x0
  4053ec:	b.eq	405404 <_start@@Base+0x94>  // b.none
  4053f0:	adrp	x1, 40c000 <rtnl_listen@@Base+0x18>
  4053f4:	ldr	x1, [x1, #3720]
  4053f8:	cbz	x1, 405404 <_start@@Base+0x94>
  4053fc:	mov	x16, x1
  405400:	br	x16
  405404:	ret
  405408:	adrp	x0, 41f000 <memcpy@GLIBC_2.17>
  40540c:	add	x0, x0, #0x318
  405410:	adrp	x1, 41f000 <memcpy@GLIBC_2.17>
  405414:	add	x1, x1, #0x318
  405418:	sub	x1, x1, x0
  40541c:	lsr	x2, x1, #63
  405420:	add	x1, x2, x1, asr #3
  405424:	cmp	xzr, x1, asr #1
  405428:	asr	x1, x1, #1
  40542c:	b.eq	405444 <_start@@Base+0xd4>  // b.none
  405430:	adrp	x2, 40c000 <rtnl_listen@@Base+0x18>
  405434:	ldr	x2, [x2, #3728]
  405438:	cbz	x2, 405444 <_start@@Base+0xd4>
  40543c:	mov	x16, x2
  405440:	br	x16
  405444:	ret
  405448:	stp	x29, x30, [sp, #-32]!
  40544c:	mov	x29, sp
  405450:	str	x19, [sp, #16]
  405454:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  405458:	ldrb	w0, [x19, #808]
  40545c:	cbnz	w0, 40546c <_start@@Base+0xfc>
  405460:	bl	4053d8 <_start@@Base+0x68>
  405464:	mov	w0, #0x1                   	// #1
  405468:	strb	w0, [x19, #808]
  40546c:	ldr	x19, [sp, #16]
  405470:	ldp	x29, x30, [sp], #32
  405474:	ret
  405478:	b	405408 <_start@@Base+0x98>

000000000040547c <main@@Base>:
  40547c:	sub	sp, sp, #0x170
  405480:	cmp	w0, #0x2
  405484:	stp	x29, x30, [sp, #272]
  405488:	stp	x28, x27, [sp, #288]
  40548c:	stp	x26, x25, [sp, #304]
  405490:	stp	x24, x23, [sp, #320]
  405494:	stp	x22, x21, [sp, #336]
  405498:	stp	x20, x19, [sp, #352]
  40549c:	add	x29, sp, #0x110
  4054a0:	b.lt	405564 <main@@Base+0xe8>  // b.tstop
  4054a4:	adrp	x22, 40c000 <rtnl_listen@@Base+0x18>
  4054a8:	adrp	x26, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4054ac:	adrp	x23, 40c000 <rtnl_listen@@Base+0x18>
  4054b0:	adrp	x24, 40c000 <rtnl_listen@@Base+0x18>
  4054b4:	adrp	x27, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4054b8:	adrp	x25, 40c000 <rtnl_listen@@Base+0x18>
  4054bc:	adrp	x28, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4054c0:	sub	w20, w0, #0x1
  4054c4:	add	x19, x1, #0x8
  4054c8:	add	x22, x22, #0xe98
  4054cc:	add	x26, x26, #0xd8c
  4054d0:	add	x23, x23, #0xe9f
  4054d4:	add	x24, x24, #0xeab
  4054d8:	add	x27, x27, #0xd88
  4054dc:	add	x25, x25, #0xeb4
  4054e0:	add	x28, x28, #0xd90
  4054e4:	ldr	x21, [x19]
  4054e8:	ldrb	w8, [x21]
  4054ec:	cmp	w8, #0x2d
  4054f0:	b.ne	405568 <main@@Base+0xec>  // b.any
  4054f4:	mov	x0, x21
  4054f8:	mov	x1, x22
  4054fc:	bl	4073ac <matches@@Base>
  405500:	mov	x8, x26
  405504:	tbz	w0, #0, 405544 <main@@Base+0xc8>
  405508:	ldr	x0, [x19]
  40550c:	mov	x1, x23
  405510:	bl	4073ac <matches@@Base>
  405514:	mov	x8, x26
  405518:	tbz	w0, #0, 405544 <main@@Base+0xc8>
  40551c:	ldr	x0, [x19]
  405520:	mov	x1, x24
  405524:	bl	4073ac <matches@@Base>
  405528:	mov	x8, x27
  40552c:	tbz	w0, #0, 405544 <main@@Base+0xc8>
  405530:	ldr	x0, [x19]
  405534:	mov	x1, x25
  405538:	bl	4073ac <matches@@Base>
  40553c:	mov	x8, x28
  405540:	tbnz	w0, #0, 405680 <main@@Base+0x204>
  405544:	ldr	w9, [x8]
  405548:	add	w10, w20, #0x1
  40554c:	sub	w20, w20, #0x1
  405550:	cmp	w10, #0x2
  405554:	add	w9, w9, #0x1
  405558:	add	x19, x19, #0x8
  40555c:	str	w9, [x8]
  405560:	b.gt	4054e4 <main@@Base+0x68>
  405564:	bl	4056fc <main@@Base+0x280>
  405568:	adrp	x23, 41f000 <memcpy@GLIBC_2.17>
  40556c:	ldr	x22, [x23, #816]
  405570:	cbz	x22, 40558c <main@@Base+0x110>
  405574:	add	x0, x22, #0x8
  405578:	mov	x1, x21
  40557c:	bl	4050f0 <strcmp@plt>
  405580:	cbz	w0, 40564c <main@@Base+0x1d0>
  405584:	ldr	x22, [x22]
  405588:	cbnz	x22, 405574 <main@@Base+0xf8>
  40558c:	adrp	x2, 40c000 <rtnl_listen@@Base+0x18>
  405590:	add	x2, x2, #0xfb5
  405594:	add	x0, sp, #0x8
  405598:	mov	w1, #0x100                 	// #256
  40559c:	mov	x3, x21
  4055a0:	bl	404f10 <snprintf@plt>
  4055a4:	add	x0, sp, #0x8
  4055a8:	mov	w1, #0x1                   	// #1
  4055ac:	bl	404f00 <dlopen@plt>
  4055b0:	mov	x22, x0
  4055b4:	cbnz	x0, 4055dc <main@@Base+0x160>
  4055b8:	adrp	x24, 41f000 <memcpy@GLIBC_2.17>
  4055bc:	ldr	x22, [x24, #824]
  4055c0:	cbnz	x22, 4055dc <main@@Base+0x160>
  4055c4:	mov	w1, #0x1                   	// #1
  4055c8:	mov	x0, xzr
  4055cc:	bl	404f00 <dlopen@plt>
  4055d0:	mov	x22, x0
  4055d4:	str	x0, [x24, #824]
  4055d8:	cbz	x0, 405608 <main@@Base+0x18c>
  4055dc:	adrp	x2, 40c000 <rtnl_listen@@Base+0x18>
  4055e0:	add	x2, x2, #0xfbb
  4055e4:	add	x0, sp, #0x8
  4055e8:	mov	w1, #0x100                 	// #256
  4055ec:	mov	x3, x21
  4055f0:	bl	404f10 <snprintf@plt>
  4055f4:	add	x1, sp, #0x8
  4055f8:	mov	x0, x22
  4055fc:	bl	404f90 <dlsym@plt>
  405600:	mov	x22, x0
  405604:	cbnz	x0, 405640 <main@@Base+0x1c4>
  405608:	mov	w0, #0x1                   	// #1
  40560c:	mov	w1, #0x28                  	// #40
  405610:	bl	405010 <calloc@plt>
  405614:	cbz	x0, 4056dc <main@@Base+0x260>
  405618:	mov	x22, x0
  40561c:	add	x0, x0, #0x8
  405620:	mov	w2, #0xf                   	// #15
  405624:	mov	x1, x21
  405628:	bl	4052a0 <strncpy@plt>
  40562c:	adrp	x8, 405000 <sendmsg@plt>
  405630:	adrp	x9, 405000 <sendmsg@plt>
  405634:	add	x8, x8, #0x728
  405638:	add	x9, x9, #0x768
  40563c:	stp	x8, x9, [x22, #24]
  405640:	ldr	x8, [x23, #816]
  405644:	str	x8, [x22]
  405648:	str	x22, [x23, #816]
  40564c:	ldr	x8, [x22, #24]
  405650:	mov	x0, x22
  405654:	mov	w1, w20
  405658:	mov	x2, x19
  40565c:	blr	x8
  405660:	ldp	x20, x19, [sp, #352]
  405664:	ldp	x22, x21, [sp, #336]
  405668:	ldp	x24, x23, [sp, #320]
  40566c:	ldp	x26, x25, [sp, #304]
  405670:	ldp	x28, x27, [sp, #288]
  405674:	ldp	x29, x30, [sp, #272]
  405678:	add	sp, sp, #0x170
  40567c:	ret
  405680:	ldr	x0, [x19]
  405684:	adrp	x1, 40c000 <rtnl_listen@@Base+0x18>
  405688:	add	x1, x1, #0xeb9
  40568c:	bl	4073ac <matches@@Base>
  405690:	tbz	w0, #0, 4056c0 <main@@Base+0x244>
  405694:	ldr	x0, [x19]
  405698:	adrp	x1, 40c000 <rtnl_listen@@Base+0x18>
  40569c:	add	x1, x1, #0xedf
  4056a0:	bl	4073ac <matches@@Base>
  4056a4:	tbz	w0, #0, 405564 <main@@Base+0xe8>
  4056a8:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4056ac:	ldr	x0, [x8, #792]
  4056b0:	ldr	x2, [x19]
  4056b4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x18>
  4056b8:	add	x1, x1, #0xee5
  4056bc:	b	4056f0 <main@@Base+0x274>
  4056c0:	adrp	x0, 40c000 <rtnl_listen@@Base+0x18>
  4056c4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4056c8:	add	x0, x0, #0xec2
  4056cc:	add	x1, x1, #0x12
  4056d0:	bl	4052d0 <printf@plt>
  4056d4:	mov	w0, wzr
  4056d8:	bl	404e20 <exit@plt>
  4056dc:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4056e0:	ldr	x0, [x8, #792]
  4056e4:	ldr	x2, [x19]
  4056e8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x18>
  4056ec:	add	x1, x1, #0xf10
  4056f0:	bl	405330 <fprintf@plt>
  4056f4:	mov	w0, #0xffffffff            	// #-1
  4056f8:	bl	404e20 <exit@plt>
  4056fc:	stp	x29, x30, [sp, #-16]!
  405700:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405704:	ldr	x3, [x8, #792]
  405708:	adrp	x0, 40c000 <rtnl_listen@@Base+0x18>
  40570c:	add	x0, x0, #0xf1d
  405710:	mov	w1, #0x97                  	// #151
  405714:	mov	w2, #0x1                   	// #1
  405718:	mov	x29, sp
  40571c:	bl	4051c0 <fwrite@plt>
  405720:	mov	w0, #0xffffffff            	// #-1
  405724:	bl	404e20 <exit@plt>
  405728:	cbnz	w1, 405734 <main@@Base+0x2b8>
  40572c:	mov	w0, wzr
  405730:	ret
  405734:	stp	x29, x30, [sp, #-16]!
  405738:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  40573c:	ldr	x8, [x8, #792]
  405740:	ldr	x3, [x2]
  405744:	adrp	x1, 40c000 <rtnl_listen@@Base+0x18>
  405748:	add	x2, x0, #0x8
  40574c:	add	x1, x1, #0xfc8
  405750:	mov	x0, x8
  405754:	mov	x29, sp
  405758:	bl	405330 <fprintf@plt>
  40575c:	mov	w0, #0xffffffff            	// #-1
  405760:	ldp	x29, x30, [sp], #16
  405764:	ret
  405768:	stp	x29, x30, [sp, #-16]!
  40576c:	adrp	x0, 40c000 <rtnl_listen@@Base+0x18>
  405770:	mov	x3, x1
  405774:	add	x0, x0, #0xffc
  405778:	mov	w1, #0x15                  	// #21
  40577c:	mov	w2, #0x1                   	// #1
  405780:	mov	x29, sp
  405784:	bl	4051c0 <fwrite@plt>
  405788:	mov	w0, wzr
  40578c:	ldp	x29, x30, [sp], #16
  405790:	ret
  405794:	sub	sp, sp, #0x60
  405798:	cmp	w1, #0x1
  40579c:	stp	x29, x30, [sp, #64]
  4057a0:	stp	x20, x19, [sp, #80]
  4057a4:	add	x29, sp, #0x40
  4057a8:	b.le	405884 <main@@Base+0x408>
  4057ac:	ldr	x0, [x2, #8]
  4057b0:	mov	w20, w1
  4057b4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4057b8:	add	x1, x1, #0x32
  4057bc:	mov	x19, x2
  4057c0:	bl	4073ac <matches@@Base>
  4057c4:	tbz	w0, #0, 405828 <main@@Base+0x3ac>
  4057c8:	ldr	x0, [x19, #8]
  4057cc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4057d0:	add	x1, x1, #0x3a
  4057d4:	bl	4073ac <matches@@Base>
  4057d8:	tbz	w0, #0, 405868 <main@@Base+0x3ec>
  4057dc:	ldr	x0, [x19, #8]
  4057e0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4057e4:	add	x1, x1, #0x3e
  4057e8:	bl	4073ac <matches@@Base>
  4057ec:	tbz	w0, #0, 405818 <main@@Base+0x39c>
  4057f0:	ldr	x0, [x19, #8]
  4057f4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4057f8:	add	x1, x1, #0x43
  4057fc:	bl	4073ac <matches@@Base>
  405800:	tbz	w0, #0, 405818 <main@@Base+0x39c>
  405804:	ldr	x0, [x19, #8]
  405808:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40580c:	add	x1, x1, #0x48
  405810:	bl	4073ac <matches@@Base>
  405814:	tbnz	w0, #0, 4058c0 <main@@Base+0x444>
  405818:	sub	w1, w20, #0x2
  40581c:	add	x2, x19, #0x10
  405820:	mov	w0, wzr
  405824:	b	405874 <main@@Base+0x3f8>
  405828:	add	x0, sp, #0x8
  40582c:	mov	w1, #0x8000                	// #32768
  405830:	mov	w2, #0x10                  	// #16
  405834:	bl	40ad24 <rtnl_open_byproto@@Base>
  405838:	tbnz	w0, #31, 40589c <main@@Base+0x420>
  40583c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405840:	ldr	x2, [x8, #800]
  405844:	adrp	x1, 405000 <sendmsg@plt>
  405848:	add	x1, x1, #0xb78
  40584c:	add	x0, sp, #0x8
  405850:	bl	40bfe8 <rtnl_listen@@Base>
  405854:	asr	w0, w0, #31
  405858:	ldp	x20, x19, [sp, #80]
  40585c:	ldp	x29, x30, [sp, #64]
  405860:	add	sp, sp, #0x60
  405864:	ret
  405868:	sub	w1, w20, #0x2
  40586c:	add	x2, x19, #0x10
  405870:	mov	w0, #0x3                   	// #3
  405874:	ldp	x20, x19, [sp, #80]
  405878:	ldp	x29, x30, [sp, #64]
  40587c:	add	sp, sp, #0x60
  405880:	b	405914 <main@@Base+0x498>
  405884:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405888:	ldr	x3, [x8, #792]
  40588c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405890:	add	x0, x0, #0x19
  405894:	mov	w1, #0x18                  	// #24
  405898:	b	4058b0 <main@@Base+0x434>
  40589c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4058a0:	ldr	x3, [x8, #792]
  4058a4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4058a8:	add	x0, x0, #0x7c
  4058ac:	mov	w1, #0x22                  	// #34
  4058b0:	mov	w2, #0x1                   	// #1
  4058b4:	bl	4051c0 <fwrite@plt>
  4058b8:	mov	w0, #0xffffffff            	// #-1
  4058bc:	b	405858 <main@@Base+0x3dc>
  4058c0:	ldr	x0, [x19, #8]
  4058c4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x18>
  4058c8:	add	x1, x1, #0xee0
  4058cc:	bl	4073ac <matches@@Base>
  4058d0:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4058d4:	ldr	x3, [x8, #792]
  4058d8:	tbz	w0, #0, 4058f4 <main@@Base+0x478>
  4058dc:	ldr	x2, [x19, #8]
  4058e0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4058e4:	add	x1, x1, #0x4c
  4058e8:	mov	x0, x3
  4058ec:	bl	405330 <fprintf@plt>
  4058f0:	b	4058b8 <main@@Base+0x43c>
  4058f4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4058f8:	add	x0, x0, #0x2d8
  4058fc:	mov	w1, #0x9f                  	// #159
  405900:	b	4058b0 <main@@Base+0x434>
  405904:	mov	x2, x1
  405908:	mov	x1, x0
  40590c:	mov	x0, xzr
  405910:	b	405b78 <main@@Base+0x6fc>
  405914:	stp	x29, x30, [sp, #-48]!
  405918:	stp	x28, x21, [sp, #16]
  40591c:	stp	x20, x19, [sp, #32]
  405920:	mov	x29, sp
  405924:	sub	sp, sp, #0x1, lsl #12
  405928:	sub	sp, sp, #0x70
  40592c:	add	x8, sp, #0x10
  405930:	mov	x19, x2
  405934:	mov	w20, w1
  405938:	mov	w21, w0
  40593c:	add	x0, x8, #0x8
  405940:	mov	w2, #0x100c                	// #4108
  405944:	mov	w1, wzr
  405948:	bl	404fe0 <memset@plt>
  40594c:	mov	x8, #0x14                  	// #20
  405950:	movk	x8, #0x10, lsl #32
  405954:	movk	x8, #0x5, lsl #48
  405958:	mov	w9, #0x3                   	// #3
  40595c:	sub	x0, x29, #0x38
  405960:	mov	w2, #0x10                  	// #16
  405964:	mov	w1, wzr
  405968:	stp	xzr, x8, [sp, #8]
  40596c:	strb	w9, [sp, #32]
  405970:	bl	40ad24 <rtnl_open_byproto@@Base>
  405974:	tbnz	w0, #31, 405b54 <main@@Base+0x6d8>
  405978:	cbz	w21, 4059e0 <main@@Base+0x564>
  40597c:	cmp	w21, #0x3
  405980:	b.ne	405a88 <main@@Base+0x60c>  // b.any
  405984:	cmp	w20, #0x2
  405988:	b.ne	405ab8 <main@@Base+0x63c>  // b.any
  40598c:	ldr	x0, [x19]
  405990:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  405994:	add	x1, x1, #0x73d
  405998:	bl	4073ac <matches@@Base>
  40599c:	tbz	w0, #0, 405a2c <main@@Base+0x5b0>
  4059a0:	ldr	x0, [x19]
  4059a4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4059a8:	add	x1, x1, #0x7f0
  4059ac:	bl	4073ac <matches@@Base>
  4059b0:	tbnz	w0, #0, 405b1c <main@@Base+0x6a0>
  4059b4:	ldr	x1, [x19, #8]
  4059b8:	sub	x0, x29, #0x48
  4059bc:	mov	w2, wzr
  4059c0:	bl	4065ec <get_u16@@Base>
  4059c4:	cbnz	w0, 405b30 <main@@Base+0x6b4>
  4059c8:	add	x0, sp, #0x10
  4059cc:	sub	x3, x29, #0x48
  4059d0:	mov	w1, #0x80                  	// #128
  4059d4:	mov	w2, #0x1                   	// #1
  4059d8:	mov	w4, #0x2                   	// #2
  4059dc:	b	405a58 <main@@Base+0x5dc>
  4059e0:	ldur	w8, [x29, #-28]
  4059e4:	mov	w9, #0x301                 	// #769
  4059e8:	sub	x0, x29, #0x38
  4059ec:	add	x1, sp, #0x10
  4059f0:	add	w8, w8, #0x1
  4059f4:	mov	w2, #0x14                  	// #20
  4059f8:	strh	w9, [sp, #22]
  4059fc:	stp	w8, w8, [x29, #-28]
  405a00:	str	w8, [sp, #24]
  405a04:	bl	40b5e4 <rtnl_send@@Base>
  405a08:	tbnz	w0, #31, 405adc <main@@Base+0x660>
  405a0c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405a10:	ldr	x2, [x8, #800]
  405a14:	adrp	x1, 405000 <sendmsg@plt>
  405a18:	add	x1, x1, #0x904
  405a1c:	sub	x0, x29, #0x38
  405a20:	mov	w3, wzr
  405a24:	bl	40b824 <rtnl_dump_filter_nc@@Base>
  405a28:	b	405a88 <main@@Base+0x60c>
  405a2c:	ldr	x1, [x19, #8]
  405a30:	sub	x0, x29, #0x48
  405a34:	mov	w2, #0x10                  	// #16
  405a38:	bl	408580 <strlcpy@@Base>
  405a3c:	sub	x0, x29, #0x48
  405a40:	bl	404e00 <strlen@plt>
  405a44:	add	w4, w0, #0x1
  405a48:	add	x0, sp, #0x10
  405a4c:	sub	x3, x29, #0x48
  405a50:	mov	w1, #0x80                  	// #128
  405a54:	mov	w2, #0x2                   	// #2
  405a58:	bl	40c428 <addattr_l@@Base>
  405a5c:	sub	x0, x29, #0x38
  405a60:	add	x1, sp, #0x10
  405a64:	add	x2, sp, #0x8
  405a68:	bl	40bb64 <rtnl_talk@@Base>
  405a6c:	tbnz	w0, #31, 405aec <main@@Base+0x670>
  405a70:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405a74:	ldr	x1, [sp, #8]
  405a78:	ldr	x2, [x8, #800]
  405a7c:	mov	x0, xzr
  405a80:	bl	405b78 <main@@Base+0x6fc>
  405a84:	tbnz	w0, #31, 405b04 <main@@Base+0x688>
  405a88:	mov	w19, wzr
  405a8c:	ldr	x0, [sp, #8]
  405a90:	bl	405160 <free@plt>
  405a94:	sub	x0, x29, #0x38
  405a98:	bl	40acf4 <rtnl_close@@Base>
  405a9c:	mov	w0, w19
  405aa0:	add	sp, sp, #0x1, lsl #12
  405aa4:	add	sp, sp, #0x70
  405aa8:	ldp	x20, x19, [sp, #32]
  405aac:	ldp	x28, x21, [sp, #16]
  405ab0:	ldp	x29, x30, [sp], #48
  405ab4:	ret
  405ab8:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405abc:	ldr	x3, [x8, #792]
  405ac0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405ac4:	add	x0, x0, #0x259
  405ac8:	mov	w1, #0x17                  	// #23
  405acc:	mov	w2, #0x1                   	// #1
  405ad0:	bl	4051c0 <fwrite@plt>
  405ad4:	mov	w19, #0xffffffff            	// #-1
  405ad8:	b	405a9c <main@@Base+0x620>
  405adc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405ae0:	add	x0, x0, #0x2bb
  405ae4:	bl	404e30 <perror@plt>
  405ae8:	b	405b4c <main@@Base+0x6d0>
  405aec:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405af0:	ldr	x3, [x8, #792]
  405af4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405af8:	add	x0, x0, #0x28d
  405afc:	mov	w1, #0x1c                  	// #28
  405b00:	b	405b44 <main@@Base+0x6c8>
  405b04:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405b08:	ldr	x3, [x8, #792]
  405b0c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405b10:	add	x0, x0, #0x2aa
  405b14:	mov	w1, #0x10                  	// #16
  405b18:	b	405b44 <main@@Base+0x6c8>
  405b1c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405b20:	ldr	x3, [x8, #792]
  405b24:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405b28:	add	x0, x0, #0x27f
  405b2c:	b	405b40 <main@@Base+0x6c4>
  405b30:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405b34:	ldr	x3, [x8, #792]
  405b38:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405b3c:	add	x0, x0, #0x271
  405b40:	mov	w1, #0xd                   	// #13
  405b44:	mov	w2, #0x1                   	// #1
  405b48:	bl	4051c0 <fwrite@plt>
  405b4c:	mov	w19, #0xffffffff            	// #-1
  405b50:	b	405a8c <main@@Base+0x610>
  405b54:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405b58:	ldr	x3, [x8, #792]
  405b5c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405b60:	add	x0, x0, #0x235
  405b64:	mov	w1, #0x23                  	// #35
  405b68:	mov	w2, #0x1                   	// #1
  405b6c:	bl	4051c0 <fwrite@plt>
  405b70:	mov	w0, #0x1                   	// #1
  405b74:	bl	404e20 <exit@plt>
  405b78:	stp	x29, x30, [sp, #-96]!
  405b7c:	stp	x28, x27, [sp, #16]
  405b80:	stp	x26, x25, [sp, #32]
  405b84:	stp	x24, x23, [sp, #48]
  405b88:	stp	x22, x21, [sp, #64]
  405b8c:	stp	x20, x19, [sp, #80]
  405b90:	mov	x29, sp
  405b94:	sub	sp, sp, #0x870
  405b98:	ldrh	w3, [x1, #4]
  405b9c:	ldr	w8, [x1]
  405ba0:	cmp	w3, #0x10
  405ba4:	b.ne	405f68 <main@@Base+0xaec>  // b.any
  405ba8:	mov	x19, x2
  405bac:	ldrb	w2, [x1, #16]
  405bb0:	cmp	w2, #0x8
  405bb4:	b.hi	405f84 <main@@Base+0xb08>  // b.pmore
  405bb8:	mov	w9, #0x1                   	// #1
  405bbc:	lsl	w9, w9, w2
  405bc0:	mov	w10, #0x18e                 	// #398
  405bc4:	tst	w9, w10
  405bc8:	b.eq	405f84 <main@@Base+0xb08>  // b.none
  405bcc:	subs	w3, w8, #0x14
  405bd0:	b.mi	405f9c <main@@Base+0xb20>  // b.first
  405bd4:	add	x2, x1, #0x14
  405bd8:	sub	x0, x29, #0x60
  405bdc:	mov	w1, #0x7                   	// #7
  405be0:	bl	40ca90 <parse_rtattr@@Base>
  405be4:	ldur	x8, [x29, #-80]
  405be8:	cbz	x8, 405c00 <main@@Base+0x784>
  405bec:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  405bf0:	add	x2, x8, #0x4
  405bf4:	add	x1, x1, #0x117
  405bf8:	mov	x0, x19
  405bfc:	bl	405330 <fprintf@plt>
  405c00:	ldur	x8, [x29, #-88]
  405c04:	cbz	x8, 405c1c <main@@Base+0x7a0>
  405c08:	ldrh	w2, [x8, #4]
  405c0c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  405c10:	add	x1, x1, #0x122
  405c14:	mov	x0, x19
  405c18:	bl	405330 <fprintf@plt>
  405c1c:	ldur	x20, [x29, #-72]
  405c20:	cbz	x20, 405c40 <main@@Base+0x7c4>
  405c24:	ldr	w2, [x20, #4]
  405c28:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  405c2c:	add	x1, x1, #0x12d
  405c30:	mov	x0, x19
  405c34:	bl	405330 <fprintf@plt>
  405c38:	ldr	w27, [x20, #4]
  405c3c:	b	405c44 <main@@Base+0x7c8>
  405c40:	mov	w27, #0x1                   	// #1
  405c44:	ldur	x8, [x29, #-64]
  405c48:	cbz	x8, 405c60 <main@@Base+0x7e4>
  405c4c:	ldr	w2, [x8, #4]
  405c50:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  405c54:	add	x1, x1, #0x13d
  405c58:	mov	x0, x19
  405c5c:	bl	405330 <fprintf@plt>
  405c60:	ldur	x8, [x29, #-56]
  405c64:	cbz	x8, 405c7c <main@@Base+0x800>
  405c68:	ldr	w2, [x8, #4]
  405c6c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  405c70:	add	x1, x1, #0x14f
  405c74:	mov	x0, x19
  405c78:	bl	405330 <fprintf@plt>
  405c7c:	mov	w0, #0xa                   	// #10
  405c80:	mov	x1, x19
  405c84:	bl	404ef0 <fputc@plt>
  405c88:	ldur	x2, [x29, #-48]
  405c8c:	cbz	x2, 405e40 <main@@Base+0x9c4>
  405c90:	ldrh	w8, [x2], #4
  405c94:	add	x0, sp, #0x8
  405c98:	mov	w1, #0x100                 	// #256
  405c9c:	add	x28, sp, #0x8
  405ca0:	sub	w3, w8, #0x4
  405ca4:	bl	40ca90 <parse_rtattr@@Base>
  405ca8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405cac:	add	x0, x0, #0x161
  405cb0:	mov	w1, #0x16                  	// #22
  405cb4:	mov	w2, #0x1                   	// #1
  405cb8:	mov	x3, x19
  405cbc:	bl	4051c0 <fwrite@plt>
  405cc0:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x180>
  405cc4:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x180>
  405cc8:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x180>
  405ccc:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x180>
  405cd0:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x180>
  405cd4:	mov	x20, xzr
  405cd8:	add	x21, x21, #0x178
  405cdc:	add	x22, x22, #0x180
  405ce0:	add	x23, x23, #0x1cc
  405ce4:	add	x24, x24, #0x1e6
  405ce8:	add	x25, x25, #0x1c2
  405cec:	ldr	x8, [x28, x20, lsl #3]
  405cf0:	cbz	x8, 405dcc <main@@Base+0x950>
  405cf4:	mov	x0, x19
  405cf8:	mov	x1, x21
  405cfc:	mov	w2, w20
  405d00:	bl	405330 <fprintf@plt>
  405d04:	ldr	x2, [x28, x20, lsl #3]
  405d08:	cbz	x2, 405dac <main@@Base+0x930>
  405d0c:	ldrh	w8, [x2], #4
  405d10:	sub	x0, x29, #0x20
  405d14:	mov	w1, #0x2                   	// #2
  405d18:	sub	w3, w8, #0x4
  405d1c:	bl	40ca90 <parse_rtattr@@Base>
  405d20:	ldur	x8, [x29, #-24]
  405d24:	cbz	x8, 405d38 <main@@Base+0x8bc>
  405d28:	ldr	w2, [x8, #4]
  405d2c:	mov	x0, x19
  405d30:	mov	x1, x25
  405d34:	bl	405330 <fprintf@plt>
  405d38:	cmp	w27, #0x2
  405d3c:	b.cc	405dc0 <main@@Base+0x944>  // b.lo, b.ul, b.last
  405d40:	ldur	x8, [x29, #-16]
  405d44:	cbz	x8, 405dc0 <main@@Base+0x944>
  405d48:	ldr	w26, [x8, #4]
  405d4c:	mov	x0, x19
  405d50:	mov	x1, x23
  405d54:	mov	w2, w26
  405d58:	bl	405330 <fprintf@plt>
  405d5c:	cbz	w26, 405d9c <main@@Base+0x920>
  405d60:	mov	w1, #0x3                   	// #3
  405d64:	mov	w2, #0x1                   	// #1
  405d68:	mov	x0, x24
  405d6c:	mov	x3, x19
  405d70:	bl	4051c0 <fwrite@plt>
  405d74:	tbnz	w26, #0, 405ddc <main@@Base+0x960>
  405d78:	tbnz	w26, #1, 405df8 <main@@Base+0x97c>
  405d7c:	tbnz	w26, #2, 405e14 <main@@Base+0x998>
  405d80:	tbz	w26, #3, 405d9c <main@@Base+0x920>
  405d84:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405d88:	mov	w1, #0xb                   	// #11
  405d8c:	mov	w2, #0x1                   	// #1
  405d90:	add	x0, x0, #0x21e
  405d94:	mov	x3, x19
  405d98:	bl	4051c0 <fwrite@plt>
  405d9c:	mov	w0, #0xa                   	// #10
  405da0:	mov	x1, x19
  405da4:	bl	404ef0 <fputc@plt>
  405da8:	b	405dc0 <main@@Base+0x944>
  405dac:	mov	w1, #0x17                  	// #23
  405db0:	mov	w2, #0x1                   	// #1
  405db4:	mov	x0, x22
  405db8:	mov	x3, x19
  405dbc:	bl	4051c0 <fwrite@plt>
  405dc0:	mov	w0, #0xa                   	// #10
  405dc4:	mov	x1, x19
  405dc8:	bl	404ef0 <fputc@plt>
  405dcc:	add	x20, x20, #0x1
  405dd0:	cmp	x20, #0x100
  405dd4:	b.ne	405cec <main@@Base+0x870>  // b.any
  405dd8:	b	405e34 <main@@Base+0x9b8>
  405ddc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405de0:	mov	w1, #0x1b                  	// #27
  405de4:	mov	w2, #0x1                   	// #1
  405de8:	add	x0, x0, #0x1ea
  405dec:	mov	x3, x19
  405df0:	bl	4051c0 <fwrite@plt>
  405df4:	tbz	w26, #1, 405d7c <main@@Base+0x900>
  405df8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405dfc:	mov	w1, #0xa                   	// #10
  405e00:	mov	w2, #0x1                   	// #1
  405e04:	add	x0, x0, #0x206
  405e08:	mov	x3, x19
  405e0c:	bl	4051c0 <fwrite@plt>
  405e10:	tbz	w26, #2, 405d80 <main@@Base+0x904>
  405e14:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405e18:	mov	w1, #0xc                   	// #12
  405e1c:	mov	w2, #0x1                   	// #1
  405e20:	add	x0, x0, #0x211
  405e24:	mov	x3, x19
  405e28:	bl	4051c0 <fwrite@plt>
  405e2c:	tbnz	w26, #3, 405d84 <main@@Base+0x908>
  405e30:	b	405d9c <main@@Base+0x920>
  405e34:	mov	w0, #0xa                   	// #10
  405e38:	mov	x1, x19
  405e3c:	bl	404ef0 <fputc@plt>
  405e40:	ldur	x2, [x29, #-40]
  405e44:	cbz	x2, 405f3c <main@@Base+0xac0>
  405e48:	ldrh	w8, [x2], #4
  405e4c:	add	x0, sp, #0x8
  405e50:	mov	w1, #0x100                 	// #256
  405e54:	add	x25, sp, #0x8
  405e58:	sub	w3, w8, #0x4
  405e5c:	bl	40ca90 <parse_rtattr@@Base>
  405e60:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  405e64:	add	x0, x0, #0x198
  405e68:	mov	w1, #0x13                  	// #19
  405e6c:	mov	w2, #0x1                   	// #1
  405e70:	mov	x3, x19
  405e74:	bl	4051c0 <fwrite@plt>
  405e78:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x180>
  405e7c:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x180>
  405e80:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x180>
  405e84:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x180>
  405e88:	mov	x20, xzr
  405e8c:	add	x21, x21, #0x178
  405e90:	add	x22, x22, #0x1ac
  405e94:	add	x23, x23, #0x22a
  405e98:	add	x24, x24, #0x1c2
  405e9c:	ldr	x8, [x25, x20, lsl #3]
  405ea0:	cbz	x8, 405f24 <main@@Base+0xaa8>
  405ea4:	mov	x0, x19
  405ea8:	mov	x1, x21
  405eac:	mov	w2, w20
  405eb0:	bl	405330 <fprintf@plt>
  405eb4:	ldr	x2, [x25, x20, lsl #3]
  405eb8:	cbz	x2, 405f04 <main@@Base+0xa88>
  405ebc:	ldrh	w8, [x2], #4
  405ec0:	sub	x0, x29, #0x20
  405ec4:	mov	w1, #0x2                   	// #2
  405ec8:	sub	w3, w8, #0x4
  405ecc:	bl	40ca90 <parse_rtattr@@Base>
  405ed0:	ldur	x8, [x29, #-16]
  405ed4:	cbz	x8, 405ee8 <main@@Base+0xa6c>
  405ed8:	ldr	w2, [x8, #4]
  405edc:	mov	x0, x19
  405ee0:	mov	x1, x24
  405ee4:	bl	405330 <fprintf@plt>
  405ee8:	ldur	x8, [x29, #-24]
  405eec:	cbz	x8, 405f18 <main@@Base+0xa9c>
  405ef0:	add	x2, x8, #0x4
  405ef4:	mov	x0, x19
  405ef8:	mov	x1, x23
  405efc:	bl	405330 <fprintf@plt>
  405f00:	b	405f18 <main@@Base+0xa9c>
  405f04:	mov	w1, #0x15                  	// #21
  405f08:	mov	w2, #0x1                   	// #1
  405f0c:	mov	x0, x22
  405f10:	mov	x3, x19
  405f14:	bl	4051c0 <fwrite@plt>
  405f18:	mov	w0, #0xa                   	// #10
  405f1c:	mov	x1, x19
  405f20:	bl	404ef0 <fputc@plt>
  405f24:	add	x20, x20, #0x1
  405f28:	cmp	x20, #0x100
  405f2c:	b.ne	405e9c <main@@Base+0xa20>  // b.any
  405f30:	mov	w0, #0xa                   	// #10
  405f34:	mov	x1, x19
  405f38:	bl	404ef0 <fputc@plt>
  405f3c:	mov	x0, x19
  405f40:	bl	4051e0 <fflush@plt>
  405f44:	mov	w0, wzr
  405f48:	add	sp, sp, #0x870
  405f4c:	ldp	x20, x19, [sp, #80]
  405f50:	ldp	x22, x21, [sp, #64]
  405f54:	ldp	x24, x23, [sp, #48]
  405f58:	ldp	x26, x25, [sp, #32]
  405f5c:	ldp	x28, x27, [sp, #16]
  405f60:	ldp	x29, x30, [sp], #96
  405f64:	ret
  405f68:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  405f6c:	ldr	x0, [x9, #792]
  405f70:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  405f74:	add	x1, x1, #0x9f
  405f78:	mov	w2, w8
  405f7c:	bl	405330 <fprintf@plt>
  405f80:	b	405f44 <main@@Base+0xac8>
  405f84:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405f88:	ldr	x0, [x8, #792]
  405f8c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  405f90:	add	x1, x1, #0xd7
  405f94:	bl	405330 <fprintf@plt>
  405f98:	b	405f44 <main@@Base+0xac8>
  405f9c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405fa0:	ldr	x0, [x8, #792]
  405fa4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  405fa8:	add	x1, x1, #0xf6
  405fac:	mov	w2, w3
  405fb0:	bl	405330 <fprintf@plt>
  405fb4:	mov	w0, #0xffffffff            	// #-1
  405fb8:	b	405f48 <main@@Base+0xacc>

0000000000405fbc <read_prop@@Base>:
  405fbc:	sub	sp, sp, #0x110
  405fc0:	stp	x20, x19, [sp, #256]
  405fc4:	mov	x19, x2
  405fc8:	mov	x20, x1
  405fcc:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  405fd0:	mov	x3, x0
  405fd4:	add	x2, x2, #0x3a6
  405fd8:	add	x0, sp, #0x60
  405fdc:	mov	w1, #0x80                  	// #128
  405fe0:	mov	x4, x20
  405fe4:	stp	x29, x30, [sp, #224]
  405fe8:	stp	x28, x21, [sp, #240]
  405fec:	add	x29, sp, #0xe0
  405ff0:	bl	404f10 <snprintf@plt>
  405ff4:	cmp	w0, #0x1
  405ff8:	b.lt	4060a4 <read_prop@@Base+0xe8>  // b.tstop
  405ffc:	cmp	w0, #0x80
  406000:	b.cs	4060a4 <read_prop@@Base+0xe8>  // b.hs, b.nlast
  406004:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406008:	add	x1, x1, #0x9e9
  40600c:	add	x0, sp, #0x60
  406010:	bl	405200 <fopen64@plt>
  406014:	cbz	x0, 4060c8 <read_prop@@Base+0x10c>
  406018:	mov	x21, x0
  40601c:	add	x0, sp, #0x10
  406020:	mov	w1, #0x50                  	// #80
  406024:	mov	x2, x21
  406028:	bl	405340 <fgets@plt>
  40602c:	cbz	x0, 4060fc <read_prop@@Base+0x140>
  406030:	add	x0, sp, #0x10
  406034:	mov	w1, #0xa                   	// #10
  406038:	add	x20, sp, #0x10
  40603c:	bl	4051a0 <strchr@plt>
  406040:	cbz	x0, 406048 <read_prop@@Base+0x8c>
  406044:	strb	wzr, [x0]
  406048:	mov	x0, x21
  40604c:	bl	404f40 <fclose@plt>
  406050:	add	x0, sp, #0x10
  406054:	add	x1, sp, #0x8
  406058:	mov	w2, wzr
  40605c:	bl	405110 <strtol@plt>
  406060:	ldr	x8, [sp, #8]
  406064:	cmp	x20, x8
  406068:	b.eq	406128 <read_prop@@Base+0x16c>  // b.none
  40606c:	ldrb	w8, [x8]
  406070:	cbnz	w8, 406128 <read_prop@@Base+0x16c>
  406074:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
  406078:	add	x8, x0, x8
  40607c:	mov	x20, x0
  406080:	cmp	x8, #0x1
  406084:	b.hi	406098 <read_prop@@Base+0xdc>  // b.pmore
  406088:	bl	4052f0 <__errno_location@plt>
  40608c:	ldr	w8, [x0]
  406090:	cmp	w8, #0x22
  406094:	b.eq	406148 <read_prop@@Base+0x18c>  // b.none
  406098:	mov	w0, wzr
  40609c:	str	x20, [x19]
  4060a0:	b	406194 <read_prop@@Base+0x1d8>
  4060a4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4060a8:	ldr	x8, [x8, #3992]
  4060ac:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4060b0:	add	x0, x0, #0x3bb
  4060b4:	mov	w1, #0x26                  	// #38
  4060b8:	ldr	x3, [x8]
  4060bc:	mov	w2, #0x1                   	// #1
  4060c0:	bl	4051c0 <fwrite@plt>
  4060c4:	b	406190 <read_prop@@Base+0x1d4>
  4060c8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4060cc:	ldr	x8, [x8, #3992]
  4060d0:	ldr	x19, [x8]
  4060d4:	bl	4052f0 <__errno_location@plt>
  4060d8:	ldr	w0, [x0]
  4060dc:	bl	405080 <strerror@plt>
  4060e0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4060e4:	mov	x3, x0
  4060e8:	add	x1, x1, #0x3e2
  4060ec:	add	x2, sp, #0x60
  4060f0:	mov	x0, x19
  4060f4:	bl	405330 <fprintf@plt>
  4060f8:	b	406190 <read_prop@@Base+0x1d4>
  4060fc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  406100:	ldr	x8, [x8, #3992]
  406104:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406108:	add	x1, x1, #0x3f0
  40610c:	add	x3, sp, #0x60
  406110:	ldr	x0, [x8]
  406114:	mov	x2, x20
  406118:	bl	405330 <fprintf@plt>
  40611c:	mov	x0, x21
  406120:	bl	404f40 <fclose@plt>
  406124:	b	406174 <read_prop@@Base+0x1b8>
  406128:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40612c:	ldr	x8, [x8, #3992]
  406130:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406134:	add	x1, x1, #0x41f
  406138:	add	x2, sp, #0x10
  40613c:	ldr	x0, [x8]
  406140:	add	x3, sp, #0x60
  406144:	b	406170 <read_prop@@Base+0x1b4>
  406148:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40614c:	ldr	x8, [x8, #3992]
  406150:	mov	w0, #0x22                  	// #34
  406154:	ldr	x19, [x8]
  406158:	bl	405080 <strerror@plt>
  40615c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406160:	mov	x3, x0
  406164:	add	x1, x1, #0x446
  406168:	add	x2, sp, #0x60
  40616c:	mov	x0, x19
  406170:	bl	405330 <fprintf@plt>
  406174:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  406178:	ldr	x8, [x8, #3992]
  40617c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406180:	add	x1, x1, #0x454
  406184:	add	x2, sp, #0x60
  406188:	ldr	x0, [x8]
  40618c:	bl	405330 <fprintf@plt>
  406190:	mov	w0, #0xffffffff            	// #-1
  406194:	ldp	x20, x19, [sp, #256]
  406198:	ldp	x28, x21, [sp, #240]
  40619c:	ldp	x29, x30, [sp, #224]
  4061a0:	add	sp, sp, #0x110
  4061a4:	ret

00000000004061a8 <get_hex@@Base>:
  4061a8:	sub	w8, w0, #0x41
  4061ac:	and	w8, w8, #0xff
  4061b0:	cmp	w8, #0x6
  4061b4:	and	w8, w0, #0xff
  4061b8:	b.cs	4061c4 <get_hex@@Base+0x1c>  // b.hs, b.nlast
  4061bc:	mov	w9, #0xffffffc9            	// #-55
  4061c0:	b	4061d8 <get_hex@@Base+0x30>
  4061c4:	sub	w9, w0, #0x61
  4061c8:	and	w9, w9, #0xff
  4061cc:	cmp	w9, #0x6
  4061d0:	b.cs	4061e0 <get_hex@@Base+0x38>  // b.hs, b.nlast
  4061d4:	mov	w9, #0xffffffa9            	// #-87
  4061d8:	add	w0, w9, w8
  4061dc:	ret
  4061e0:	sub	w9, w0, #0x30
  4061e4:	and	w9, w9, #0xff
  4061e8:	sub	w8, w8, #0x30
  4061ec:	cmp	w9, #0xa
  4061f0:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
  4061f4:	ret

00000000004061f8 <get_integer@@Base>:
  4061f8:	sub	sp, sp, #0x30
  4061fc:	stp	x29, x30, [sp, #16]
  406200:	stp	x20, x19, [sp, #32]
  406204:	add	x29, sp, #0x10
  406208:	cbz	x1, 406248 <get_integer@@Base+0x50>
  40620c:	ldrb	w8, [x1]
  406210:	mov	x20, x1
  406214:	cbz	w8, 406248 <get_integer@@Base+0x50>
  406218:	mov	x19, x0
  40621c:	add	x1, sp, #0x8
  406220:	mov	x0, x20
  406224:	bl	405110 <strtol@plt>
  406228:	ldr	x9, [sp, #8]
  40622c:	mov	x8, x0
  406230:	mov	w0, #0xffffffff            	// #-1
  406234:	cbz	x9, 40624c <get_integer@@Base+0x54>
  406238:	cmp	x9, x20
  40623c:	b.eq	40624c <get_integer@@Base+0x54>  // b.none
  406240:	ldrb	w9, [x9]
  406244:	cbz	w9, 40625c <get_integer@@Base+0x64>
  406248:	mov	w0, #0xffffffff            	// #-1
  40624c:	ldp	x20, x19, [sp, #32]
  406250:	ldp	x29, x30, [sp, #16]
  406254:	add	sp, sp, #0x30
  406258:	ret
  40625c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  406260:	add	x9, x8, x9
  406264:	cmp	x9, #0x2
  406268:	mov	w0, #0xffffffff            	// #-1
  40626c:	b.cc	40624c <get_integer@@Base+0x54>  // b.lo, b.ul, b.last
  406270:	mov	w9, #0x80000000            	// #-2147483648
  406274:	add	x9, x8, x9
  406278:	lsr	x9, x9, #32
  40627c:	cbnz	x9, 40624c <get_integer@@Base+0x54>
  406280:	mov	w0, wzr
  406284:	str	w8, [x19]
  406288:	b	40624c <get_integer@@Base+0x54>

000000000040628c <mask2bits@@Base>:
  40628c:	rev	w8, w0
  406290:	neg	w9, w8
  406294:	bics	wzr, w9, w8
  406298:	b.eq	4062a4 <mask2bits@@Base+0x18>  // b.none
  40629c:	mov	w0, #0xffffffff            	// #-1
  4062a0:	ret
  4062a4:	cbz	w0, 4062b8 <mask2bits@@Base+0x2c>
  4062a8:	mov	w0, wzr
  4062ac:	lsl	w8, w8, #1
  4062b0:	add	w0, w0, #0x1
  4062b4:	cbnz	w8, 4062ac <mask2bits@@Base+0x20>
  4062b8:	ret

00000000004062bc <get_unsigned@@Base>:
  4062bc:	sub	sp, sp, #0x30
  4062c0:	stp	x29, x30, [sp, #16]
  4062c4:	stp	x20, x19, [sp, #32]
  4062c8:	add	x29, sp, #0x10
  4062cc:	cbz	x1, 406324 <get_unsigned@@Base+0x68>
  4062d0:	ldrb	w8, [x1]
  4062d4:	mov	x20, x1
  4062d8:	cbz	w8, 406324 <get_unsigned@@Base+0x68>
  4062dc:	mov	x19, x0
  4062e0:	add	x1, sp, #0x8
  4062e4:	mov	x0, x20
  4062e8:	bl	404df0 <strtoul@plt>
  4062ec:	ldr	x9, [sp, #8]
  4062f0:	mov	x8, x0
  4062f4:	mov	w0, #0xffffffff            	// #-1
  4062f8:	cbz	x9, 406328 <get_unsigned@@Base+0x6c>
  4062fc:	cmp	x9, x20
  406300:	b.eq	406328 <get_unsigned@@Base+0x6c>  // b.none
  406304:	ldrb	w9, [x9]
  406308:	mov	w0, #0xffffffff            	// #-1
  40630c:	cbnz	w9, 406328 <get_unsigned@@Base+0x6c>
  406310:	lsr	x9, x8, #32
  406314:	cbnz	x9, 406328 <get_unsigned@@Base+0x6c>
  406318:	mov	w0, wzr
  40631c:	str	w8, [x19]
  406320:	b	406328 <get_unsigned@@Base+0x6c>
  406324:	mov	w0, #0xffffffff            	// #-1
  406328:	ldp	x20, x19, [sp, #32]
  40632c:	ldp	x29, x30, [sp, #16]
  406330:	add	sp, sp, #0x30
  406334:	ret

0000000000406338 <get_time_rtt@@Base>:
  406338:	sub	sp, sp, #0x50
  40633c:	stp	x22, x21, [sp, #48]
  406340:	mov	x22, x1
  406344:	stp	x20, x19, [sp, #64]
  406348:	mov	x19, x0
  40634c:	mov	w1, #0x2e                  	// #46
  406350:	mov	x0, x22
  406354:	str	d8, [sp, #16]
  406358:	stp	x29, x30, [sp, #24]
  40635c:	str	x23, [sp, #40]
  406360:	add	x29, sp, #0x10
  406364:	mov	x21, x2
  406368:	bl	4051a0 <strchr@plt>
  40636c:	add	x1, sp, #0x8
  406370:	cbz	x0, 4063c8 <get_time_rtt@@Base+0x90>
  406374:	mov	x0, x22
  406378:	bl	404e60 <strtod@plt>
  40637c:	fcmp	d0, #0.0
  406380:	b.mi	40649c <get_time_rtt@@Base+0x164>  // b.first
  406384:	ldr	x20, [sp, #8]
  406388:	mov	w0, #0xffffffff            	// #-1
  40638c:	cbz	x20, 4064cc <get_time_rtt@@Base+0x194>
  406390:	cmp	x20, x22
  406394:	b.eq	4064cc <get_time_rtt@@Base+0x194>  // b.none
  406398:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  40639c:	mov	v8.16b, v0.16b
  4063a0:	fmov	d0, x8
  4063a4:	fcmp	d8, d0
  4063a8:	b.ne	406408 <get_time_rtt@@Base+0xd0>  // b.any
  4063ac:	bl	4052f0 <__errno_location@plt>
  4063b0:	ldr	w8, [x0]
  4063b4:	cmp	w8, #0x22
  4063b8:	b.eq	40649c <get_time_rtt@@Base+0x164>  // b.none
  4063bc:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  4063c0:	fmov	d8, x8
  4063c4:	b	406408 <get_time_rtt@@Base+0xd0>
  4063c8:	mov	x0, x22
  4063cc:	mov	w2, wzr
  4063d0:	bl	404df0 <strtoul@plt>
  4063d4:	ldr	x20, [sp, #8]
  4063d8:	mov	x23, x0
  4063dc:	mov	w0, #0xffffffff            	// #-1
  4063e0:	cbz	x20, 4064cc <get_time_rtt@@Base+0x194>
  4063e4:	cmp	x20, x22
  4063e8:	b.eq	4064cc <get_time_rtt@@Base+0x194>  // b.none
  4063ec:	cmn	x23, #0x1
  4063f0:	b.ne	406404 <get_time_rtt@@Base+0xcc>  // b.any
  4063f4:	bl	4052f0 <__errno_location@plt>
  4063f8:	ldr	w8, [x0]
  4063fc:	cmp	w8, #0x22
  406400:	b.eq	40649c <get_time_rtt@@Base+0x164>  // b.none
  406404:	ucvtf	d8, x23
  406408:	cmp	x20, x22
  40640c:	b.eq	40649c <get_time_rtt@@Base+0x164>  // b.none
  406410:	mov	w8, #0x1                   	// #1
  406414:	str	w8, [x21]
  406418:	ldrb	w8, [x20]
  40641c:	cbz	w8, 4064b0 <get_time_rtt@@Base+0x178>
  406420:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406424:	add	x1, x1, #0x452
  406428:	mov	x0, x20
  40642c:	str	wzr, [x21]
  406430:	bl	405040 <strcasecmp@plt>
  406434:	cbz	w0, 4064a4 <get_time_rtt@@Base+0x16c>
  406438:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40643c:	add	x1, x1, #0x469
  406440:	mov	x0, x20
  406444:	bl	405040 <strcasecmp@plt>
  406448:	cbz	w0, 4064a4 <get_time_rtt@@Base+0x16c>
  40644c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406450:	add	x1, x1, #0x46e
  406454:	mov	x0, x20
  406458:	bl	405040 <strcasecmp@plt>
  40645c:	cbz	w0, 4064a4 <get_time_rtt@@Base+0x16c>
  406460:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406464:	add	x1, x1, #0x7fd
  406468:	mov	x0, x20
  40646c:	bl	405040 <strcasecmp@plt>
  406470:	cbz	w0, 4064b0 <get_time_rtt@@Base+0x178>
  406474:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406478:	add	x1, x1, #0x468
  40647c:	mov	x0, x20
  406480:	bl	405040 <strcasecmp@plt>
  406484:	cbz	w0, 4064b0 <get_time_rtt@@Base+0x178>
  406488:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40648c:	add	x1, x1, #0x46d
  406490:	mov	x0, x20
  406494:	bl	405040 <strcasecmp@plt>
  406498:	cbz	w0, 4064b0 <get_time_rtt@@Base+0x178>
  40649c:	mov	w0, #0xffffffff            	// #-1
  4064a0:	b	4064cc <get_time_rtt@@Base+0x194>
  4064a4:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  4064a8:	ldr	d0, [x8, #888]
  4064ac:	fmul	d8, d8, d0
  4064b0:	fcvtzu	w8, d8
  4064b4:	ucvtf	d0, w8
  4064b8:	fcmp	d8, d0
  4064bc:	cset	w9, gt
  4064c0:	mov	w0, wzr
  4064c4:	add	w8, w9, w8
  4064c8:	str	w8, [x19]
  4064cc:	ldp	x20, x19, [sp, #64]
  4064d0:	ldp	x22, x21, [sp, #48]
  4064d4:	ldr	x23, [sp, #40]
  4064d8:	ldp	x29, x30, [sp, #24]
  4064dc:	ldr	d8, [sp, #16]
  4064e0:	add	sp, sp, #0x50
  4064e4:	ret

00000000004064e8 <get_u64@@Base>:
  4064e8:	stp	x29, x30, [sp, #-48]!
  4064ec:	str	x21, [sp, #16]
  4064f0:	stp	x20, x19, [sp, #32]
  4064f4:	mov	x29, sp
  4064f8:	cbz	x1, 406538 <get_u64@@Base+0x50>
  4064fc:	ldrb	w8, [x1]
  406500:	mov	x21, x1
  406504:	cbz	w8, 406538 <get_u64@@Base+0x50>
  406508:	mov	x19, x0
  40650c:	add	x1, x29, #0x18
  406510:	mov	x0, x21
  406514:	bl	4051b0 <strtoull@plt>
  406518:	ldr	x8, [x29, #24]
  40651c:	mov	x20, x0
  406520:	mov	w0, #0xffffffff            	// #-1
  406524:	cbz	x8, 40653c <get_u64@@Base+0x54>
  406528:	cmp	x8, x21
  40652c:	b.eq	40653c <get_u64@@Base+0x54>  // b.none
  406530:	ldrb	w8, [x8]
  406534:	cbz	w8, 40654c <get_u64@@Base+0x64>
  406538:	mov	w0, #0xffffffff            	// #-1
  40653c:	ldp	x20, x19, [sp, #32]
  406540:	ldr	x21, [sp, #16]
  406544:	ldp	x29, x30, [sp], #48
  406548:	ret
  40654c:	cmn	x20, #0x1
  406550:	b.ne	406564 <get_u64@@Base+0x7c>  // b.any
  406554:	bl	4052f0 <__errno_location@plt>
  406558:	ldr	w8, [x0]
  40655c:	cmp	w8, #0x22
  406560:	b.eq	406538 <get_u64@@Base+0x50>  // b.none
  406564:	mov	w0, wzr
  406568:	str	x20, [x19]
  40656c:	b	40653c <get_u64@@Base+0x54>

0000000000406570 <get_u32@@Base>:
  406570:	sub	sp, sp, #0x30
  406574:	stp	x29, x30, [sp, #16]
  406578:	stp	x20, x19, [sp, #32]
  40657c:	add	x29, sp, #0x10
  406580:	cbz	x1, 4065d8 <get_u32@@Base+0x68>
  406584:	ldrb	w8, [x1]
  406588:	mov	x20, x1
  40658c:	cbz	w8, 4065d8 <get_u32@@Base+0x68>
  406590:	mov	x19, x0
  406594:	add	x1, sp, #0x8
  406598:	mov	x0, x20
  40659c:	bl	404df0 <strtoul@plt>
  4065a0:	ldr	x9, [sp, #8]
  4065a4:	mov	x8, x0
  4065a8:	mov	w0, #0xffffffff            	// #-1
  4065ac:	cbz	x9, 4065dc <get_u32@@Base+0x6c>
  4065b0:	cmp	x9, x20
  4065b4:	b.eq	4065dc <get_u32@@Base+0x6c>  // b.none
  4065b8:	ldrb	w9, [x9]
  4065bc:	mov	w0, #0xffffffff            	// #-1
  4065c0:	cbnz	w9, 4065dc <get_u32@@Base+0x6c>
  4065c4:	lsr	x9, x8, #32
  4065c8:	cbnz	x9, 4065dc <get_u32@@Base+0x6c>
  4065cc:	mov	w0, wzr
  4065d0:	str	w8, [x19]
  4065d4:	b	4065dc <get_u32@@Base+0x6c>
  4065d8:	mov	w0, #0xffffffff            	// #-1
  4065dc:	ldp	x20, x19, [sp, #32]
  4065e0:	ldp	x29, x30, [sp, #16]
  4065e4:	add	sp, sp, #0x30
  4065e8:	ret

00000000004065ec <get_u16@@Base>:
  4065ec:	sub	sp, sp, #0x30
  4065f0:	stp	x29, x30, [sp, #16]
  4065f4:	stp	x20, x19, [sp, #32]
  4065f8:	add	x29, sp, #0x10
  4065fc:	cbz	x1, 406654 <get_u16@@Base+0x68>
  406600:	ldrb	w8, [x1]
  406604:	mov	x20, x1
  406608:	cbz	w8, 406654 <get_u16@@Base+0x68>
  40660c:	mov	x19, x0
  406610:	add	x1, sp, #0x8
  406614:	mov	x0, x20
  406618:	bl	404df0 <strtoul@plt>
  40661c:	ldr	x9, [sp, #8]
  406620:	mov	x8, x0
  406624:	mov	w0, #0xffffffff            	// #-1
  406628:	cbz	x9, 406658 <get_u16@@Base+0x6c>
  40662c:	cmp	x9, x20
  406630:	b.eq	406658 <get_u16@@Base+0x6c>  // b.none
  406634:	ldrb	w9, [x9]
  406638:	mov	w0, #0xffffffff            	// #-1
  40663c:	cbnz	w9, 406658 <get_u16@@Base+0x6c>
  406640:	lsr	x9, x8, #16
  406644:	cbnz	x9, 406658 <get_u16@@Base+0x6c>
  406648:	mov	w0, wzr
  40664c:	strh	w8, [x19]
  406650:	b	406658 <get_u16@@Base+0x6c>
  406654:	mov	w0, #0xffffffff            	// #-1
  406658:	ldp	x20, x19, [sp, #32]
  40665c:	ldp	x29, x30, [sp, #16]
  406660:	add	sp, sp, #0x30
  406664:	ret

0000000000406668 <get_u8@@Base>:
  406668:	sub	sp, sp, #0x30
  40666c:	stp	x29, x30, [sp, #16]
  406670:	stp	x20, x19, [sp, #32]
  406674:	add	x29, sp, #0x10
  406678:	cbz	x1, 4066d0 <get_u8@@Base+0x68>
  40667c:	ldrb	w8, [x1]
  406680:	mov	x20, x1
  406684:	cbz	w8, 4066d0 <get_u8@@Base+0x68>
  406688:	mov	x19, x0
  40668c:	add	x1, sp, #0x8
  406690:	mov	x0, x20
  406694:	bl	404df0 <strtoul@plt>
  406698:	ldr	x9, [sp, #8]
  40669c:	mov	x8, x0
  4066a0:	mov	w0, #0xffffffff            	// #-1
  4066a4:	cbz	x9, 4066d4 <get_u8@@Base+0x6c>
  4066a8:	cmp	x9, x20
  4066ac:	b.eq	4066d4 <get_u8@@Base+0x6c>  // b.none
  4066b0:	ldrb	w9, [x9]
  4066b4:	mov	w0, #0xffffffff            	// #-1
  4066b8:	cbnz	w9, 4066d4 <get_u8@@Base+0x6c>
  4066bc:	cmp	x8, #0xff
  4066c0:	b.hi	4066d4 <get_u8@@Base+0x6c>  // b.pmore
  4066c4:	mov	w0, wzr
  4066c8:	strb	w8, [x19]
  4066cc:	b	4066d4 <get_u8@@Base+0x6c>
  4066d0:	mov	w0, #0xffffffff            	// #-1
  4066d4:	ldp	x20, x19, [sp, #32]
  4066d8:	ldp	x29, x30, [sp, #16]
  4066dc:	add	sp, sp, #0x30
  4066e0:	ret

00000000004066e4 <get_s64@@Base>:
  4066e4:	sub	sp, sp, #0x40
  4066e8:	stp	x29, x30, [sp, #16]
  4066ec:	stp	x22, x21, [sp, #32]
  4066f0:	stp	x20, x19, [sp, #48]
  4066f4:	add	x29, sp, #0x10
  4066f8:	mov	w22, w2
  4066fc:	mov	x21, x1
  406700:	mov	x19, x0
  406704:	bl	4052f0 <__errno_location@plt>
  406708:	str	wzr, [x0]
  40670c:	cbz	x21, 40674c <get_s64@@Base+0x68>
  406710:	ldrb	w8, [x21]
  406714:	cbz	w8, 40674c <get_s64@@Base+0x68>
  406718:	mov	x20, x0
  40671c:	add	x1, sp, #0x8
  406720:	mov	x0, x21
  406724:	mov	w2, w22
  406728:	bl	404e50 <strtoll@plt>
  40672c:	ldr	x9, [sp, #8]
  406730:	mov	x8, x0
  406734:	mov	w0, #0xffffffff            	// #-1
  406738:	cbz	x9, 406750 <get_s64@@Base+0x6c>
  40673c:	cmp	x9, x21
  406740:	b.eq	406750 <get_s64@@Base+0x6c>  // b.none
  406744:	ldrb	w9, [x9]
  406748:	cbz	w9, 406764 <get_s64@@Base+0x80>
  40674c:	mov	w0, #0xffffffff            	// #-1
  406750:	ldp	x20, x19, [sp, #48]
  406754:	ldp	x22, x21, [sp, #32]
  406758:	ldp	x29, x30, [sp, #16]
  40675c:	add	sp, sp, #0x40
  406760:	ret
  406764:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  406768:	add	x9, x8, x9
  40676c:	cmp	x9, #0x1
  406770:	b.hi	406780 <get_s64@@Base+0x9c>  // b.pmore
  406774:	ldr	w9, [x20]
  406778:	cmp	w9, #0x22
  40677c:	b.eq	40674c <get_s64@@Base+0x68>  // b.none
  406780:	mov	w0, wzr
  406784:	str	x8, [x19]
  406788:	b	406750 <get_s64@@Base+0x6c>

000000000040678c <get_s32@@Base>:
  40678c:	stp	x29, x30, [sp, #-48]!
  406790:	str	x21, [sp, #16]
  406794:	stp	x20, x19, [sp, #32]
  406798:	mov	x29, sp
  40679c:	mov	w21, w2
  4067a0:	mov	x20, x1
  4067a4:	mov	x19, x0
  4067a8:	bl	4052f0 <__errno_location@plt>
  4067ac:	str	wzr, [x0]
  4067b0:	cbz	x20, 4067ec <get_s32@@Base+0x60>
  4067b4:	ldrb	w8, [x20]
  4067b8:	cbz	w8, 4067ec <get_s32@@Base+0x60>
  4067bc:	add	x1, x29, #0x18
  4067c0:	mov	x0, x20
  4067c4:	mov	w2, w21
  4067c8:	bl	405110 <strtol@plt>
  4067cc:	ldr	x9, [x29, #24]
  4067d0:	mov	x8, x0
  4067d4:	mov	w0, #0xffffffff            	// #-1
  4067d8:	cbz	x9, 4067f0 <get_s32@@Base+0x64>
  4067dc:	cmp	x9, x20
  4067e0:	b.eq	4067f0 <get_s32@@Base+0x64>  // b.none
  4067e4:	ldrb	w9, [x9]
  4067e8:	cbz	w9, 406800 <get_s32@@Base+0x74>
  4067ec:	mov	w0, #0xffffffff            	// #-1
  4067f0:	ldp	x20, x19, [sp, #32]
  4067f4:	ldr	x21, [sp, #16]
  4067f8:	ldp	x29, x30, [sp], #48
  4067fc:	ret
  406800:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  406804:	add	x9, x8, x9
  406808:	cmp	x9, #0x2
  40680c:	mov	w0, #0xffffffff            	// #-1
  406810:	b.cc	4067f0 <get_s32@@Base+0x64>  // b.lo, b.ul, b.last
  406814:	mov	w9, #0x80000000            	// #-2147483648
  406818:	add	x9, x8, x9
  40681c:	lsr	x9, x9, #32
  406820:	cbnz	x9, 4067f0 <get_s32@@Base+0x64>
  406824:	mov	w0, wzr
  406828:	str	w8, [x19]
  40682c:	b	4067f0 <get_s32@@Base+0x64>

0000000000406830 <get_be64@@Base>:
  406830:	stp	x29, x30, [sp, #-32]!
  406834:	mov	x29, sp
  406838:	str	x19, [sp, #16]
  40683c:	mov	x19, x0
  406840:	add	x0, x29, #0x18
  406844:	bl	4064e8 <get_u64@@Base>
  406848:	cbnz	w0, 406860 <get_be64@@Base+0x30>
  40684c:	ldp	w8, w9, [x29, #24]
  406850:	rev	w8, w8
  406854:	rev	w9, w9
  406858:	bfi	x9, x8, #32, #32
  40685c:	str	x9, [x19]
  406860:	ldr	x19, [sp, #16]
  406864:	ldp	x29, x30, [sp], #32
  406868:	ret

000000000040686c <get_be32@@Base>:
  40686c:	stp	x29, x30, [sp, #-32]!
  406870:	mov	x29, sp
  406874:	str	x19, [sp, #16]
  406878:	mov	x19, x0
  40687c:	add	x0, x29, #0x1c
  406880:	bl	406570 <get_u32@@Base>
  406884:	cbnz	w0, 406894 <get_be32@@Base+0x28>
  406888:	ldr	w8, [x29, #28]
  40688c:	rev	w8, w8
  406890:	str	w8, [x19]
  406894:	ldr	x19, [sp, #16]
  406898:	ldp	x29, x30, [sp], #32
  40689c:	ret

00000000004068a0 <get_be16@@Base>:
  4068a0:	stp	x29, x30, [sp, #-32]!
  4068a4:	mov	x29, sp
  4068a8:	str	x19, [sp, #16]
  4068ac:	mov	x19, x0
  4068b0:	add	x0, x29, #0x1c
  4068b4:	bl	4065ec <get_u16@@Base>
  4068b8:	cbnz	w0, 4068cc <get_be16@@Base+0x2c>
  4068bc:	ldrh	w8, [x29, #28]
  4068c0:	rev	w8, w8
  4068c4:	lsr	w8, w8, #16
  4068c8:	strh	w8, [x19]
  4068cc:	ldr	x19, [sp, #16]
  4068d0:	ldp	x29, x30, [sp], #32
  4068d4:	ret

00000000004068d8 <get_addr64@@Base>:
  4068d8:	sub	sp, sp, #0x40
  4068dc:	stp	x20, x19, [sp, #48]
  4068e0:	mov	x20, x1
  4068e4:	mov	x19, x0
  4068e8:	mov	x1, sp
  4068ec:	mov	w2, #0x10                  	// #16
  4068f0:	mov	x0, x20
  4068f4:	stp	x29, x30, [sp, #16]
  4068f8:	stp	x22, x21, [sp, #32]
  4068fc:	add	x29, sp, #0x10
  406900:	bl	404df0 <strtoul@plt>
  406904:	lsr	x8, x0, #16
  406908:	cbnz	x8, 406970 <get_addr64@@Base+0x98>
  40690c:	ldr	x8, [sp]
  406910:	cmp	x8, x20
  406914:	b.eq	406970 <get_addr64@@Base+0x98>  // b.none
  406918:	mov	x21, xzr
  40691c:	add	x22, sp, #0x8
  406920:	rev	w9, w0
  406924:	lsr	w9, w9, #16
  406928:	strh	w9, [x22, x21]
  40692c:	ldrb	w9, [x8]
  406930:	cbz	w9, 406988 <get_addr64@@Base+0xb0>
  406934:	cmp	x21, #0x6
  406938:	b.eq	406970 <get_addr64@@Base+0x98>  // b.none
  40693c:	cmp	w9, #0x3a
  406940:	b.ne	406970 <get_addr64@@Base+0x98>  // b.any
  406944:	add	x20, x8, #0x1
  406948:	mov	x1, sp
  40694c:	mov	w2, #0x10                  	// #16
  406950:	mov	x0, x20
  406954:	bl	404df0 <strtoul@plt>
  406958:	lsr	x8, x0, #16
  40695c:	cbnz	x8, 406970 <get_addr64@@Base+0x98>
  406960:	ldr	x8, [sp]
  406964:	add	x21, x21, #0x2
  406968:	cmp	x8, x20
  40696c:	b.ne	406920 <get_addr64@@Base+0x48>  // b.any
  406970:	mov	w0, #0xffffffff            	// #-1
  406974:	ldp	x20, x19, [sp, #48]
  406978:	ldp	x22, x21, [sp, #32]
  40697c:	ldp	x29, x30, [sp, #16]
  406980:	add	sp, sp, #0x40
  406984:	ret
  406988:	ldr	x8, [sp, #8]
  40698c:	mov	w0, #0x1                   	// #1
  406990:	str	x8, [x19]
  406994:	b	406974 <get_addr64@@Base+0x9c>

0000000000406998 <get_addr_1@@Base>:
  406998:	sub	sp, sp, #0x40
  40699c:	stp	x22, x21, [sp, #32]
  4069a0:	stp	x20, x19, [sp, #48]
  4069a4:	mov	w21, w2
  4069a8:	mov	x20, x1
  4069ac:	mov	w2, #0x108                 	// #264
  4069b0:	mov	w1, wzr
  4069b4:	stp	x29, x30, [sp, #16]
  4069b8:	add	x29, sp, #0x10
  4069bc:	mov	x19, x0
  4069c0:	bl	404fe0 <memset@plt>
  4069c4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4069c8:	add	x1, x1, #0x7d9
  4069cc:	mov	x0, x20
  4069d0:	bl	4050f0 <strcmp@plt>
  4069d4:	cbz	w0, 406a50 <get_addr_1@@Base+0xb8>
  4069d8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4069dc:	add	x1, x1, #0x7e1
  4069e0:	mov	x0, x20
  4069e4:	bl	4050f0 <strcmp@plt>
  4069e8:	cbz	w0, 406a34 <get_addr_1@@Base+0x9c>
  4069ec:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4069f0:	add	x1, x1, #0x7e5
  4069f4:	mov	x0, x20
  4069f8:	bl	4050f0 <strcmp@plt>
  4069fc:	cbz	w0, 406a34 <get_addr_1@@Base+0x9c>
  406a00:	cmp	w21, #0x11
  406a04:	b.ne	406a94 <get_addr_1@@Base+0xfc>  // b.any
  406a08:	add	x0, x19, #0x8
  406a0c:	mov	w1, #0x100                 	// #256
  406a10:	mov	x2, x20
  406a14:	bl	4094fc <ll_addr_a2n@@Base>
  406a18:	tbnz	w0, #31, 406a5c <get_addr_1@@Base+0xc4>
  406a1c:	mov	w8, #0x11                  	// #17
  406a20:	lsl	w9, w0, #3
  406a24:	strh	w0, [x19, #2]
  406a28:	strh	w8, [x19, #6]
  406a2c:	strh	w9, [x19, #4]
  406a30:	b	406b78 <get_addr_1@@Base+0x1e0>
  406a34:	orr	w8, w21, #0x10
  406a38:	cmp	w8, #0x1c
  406a3c:	b.eq	406a5c <get_addr_1@@Base+0xc4>  // b.none
  406a40:	strh	w21, [x19, #6]
  406a44:	mov	w8, #0xfffe0000            	// #-131072
  406a48:	stur	w8, [x19, #2]
  406a4c:	b	406b78 <get_addr_1@@Base+0x1e0>
  406a50:	orr	w8, w21, #0x10
  406a54:	cmp	w8, #0x1c
  406a58:	b.ne	406a64 <get_addr_1@@Base+0xcc>  // b.any
  406a5c:	mov	w0, #0xffffffff            	// #-1
  406a60:	b	406b84 <get_addr_1@@Base+0x1ec>
  406a64:	and	w8, w21, #0xffff
  406a68:	cmp	w8, #0x9
  406a6c:	strh	w21, [x19, #6]
  406a70:	b.le	406ad8 <get_addr_1@@Base+0x140>
  406a74:	cmp	w8, #0xa
  406a78:	b.eq	406b50 <get_addr_1@@Base+0x1b8>  // b.none
  406a7c:	cmp	w8, #0xc
  406a80:	b.eq	406a8c <get_addr_1@@Base+0xf4>  // b.none
  406a84:	cmp	w8, #0x1c
  406a88:	b.ne	406b60 <get_addr_1@@Base+0x1c8>  // b.any
  406a8c:	mov	w8, #0x2                   	// #2
  406a90:	b	406b64 <get_addr_1@@Base+0x1cc>
  406a94:	mov	w1, #0x3a                  	// #58
  406a98:	mov	x0, x20
  406a9c:	bl	4051a0 <strchr@plt>
  406aa0:	cbz	x0, 406af0 <get_addr_1@@Base+0x158>
  406aa4:	mov	w8, #0xa                   	// #10
  406aa8:	cmp	w21, #0xa
  406aac:	strh	w8, [x19, #6]
  406ab0:	b.eq	406ab8 <get_addr_1@@Base+0x120>  // b.none
  406ab4:	cbnz	w21, 406a5c <get_addr_1@@Base+0xc4>
  406ab8:	add	x2, x19, #0x8
  406abc:	mov	w0, #0xa                   	// #10
  406ac0:	mov	x1, x20
  406ac4:	bl	405170 <inet_pton@plt>
  406ac8:	cmp	w0, #0x1
  406acc:	b.lt	406a5c <get_addr_1@@Base+0xc4>  // b.tstop
  406ad0:	mov	w8, #0xffff0010            	// #-65520
  406ad4:	b	406a48 <get_addr_1@@Base+0xb0>
  406ad8:	cmp	w8, #0x2
  406adc:	b.eq	406b58 <get_addr_1@@Base+0x1c0>  // b.none
  406ae0:	cmp	w8, #0x4
  406ae4:	b.ne	406b60 <get_addr_1@@Base+0x1c8>  // b.any
  406ae8:	mov	w8, #0xa                   	// #10
  406aec:	b	406b64 <get_addr_1@@Base+0x1cc>
  406af0:	cmp	w21, #0x1c
  406af4:	b.ne	406b98 <get_addr_1@@Base+0x200>  // b.any
  406af8:	add	x21, x19, #0x8
  406afc:	mov	w8, #0x1c                  	// #28
  406b00:	mov	w0, #0x1c                  	// #28
  406b04:	mov	w3, #0x100                 	// #256
  406b08:	mov	x1, x20
  406b0c:	mov	x2, x21
  406b10:	strh	w8, [x19, #6]
  406b14:	bl	40a2c4 <mpls_pton@@Base>
  406b18:	cmp	w0, #0x1
  406b1c:	b.lt	406a5c <get_addr_1@@Base+0xc4>  // b.tstop
  406b20:	mov	w9, #0x4                   	// #4
  406b24:	mov	x8, xzr
  406b28:	movk	w9, #0x14, lsl #16
  406b2c:	stur	w9, [x19, #2]
  406b30:	cmp	x8, #0x40
  406b34:	b.eq	406b78 <get_addr_1@@Base+0x1e0>  // b.none
  406b38:	ldr	w9, [x21, x8, lsl #2]
  406b3c:	add	x8, x8, #0x1
  406b40:	tbz	w9, #16, 406b30 <get_addr_1@@Base+0x198>
  406b44:	lsl	w8, w8, #2
  406b48:	strh	w8, [x19, #2]
  406b4c:	b	406b78 <get_addr_1@@Base+0x1e0>
  406b50:	mov	w8, #0x10                  	// #16
  406b54:	b	406b64 <get_addr_1@@Base+0x1cc>
  406b58:	mov	w8, #0x4                   	// #4
  406b5c:	b	406b64 <get_addr_1@@Base+0x1cc>
  406b60:	mov	w8, wzr
  406b64:	strh	w8, [x19, #2]
  406b68:	mov	w8, #0xfffe                	// #65534
  406b6c:	mov	w9, #0x1                   	// #1
  406b70:	strh	w8, [x19, #4]
  406b74:	strh	w9, [x19]
  406b78:	mov	x0, x19
  406b7c:	bl	406c28 <get_addr_1@@Base+0x290>
  406b80:	mov	w0, wzr
  406b84:	ldp	x20, x19, [sp, #48]
  406b88:	ldp	x22, x21, [sp, #32]
  406b8c:	ldp	x29, x30, [sp, #16]
  406b90:	add	sp, sp, #0x40
  406b94:	ret
  406b98:	mov	w8, #0x2                   	// #2
  406b9c:	tst	w21, #0xfffffffd
  406ba0:	strh	w8, [x19, #6]
  406ba4:	b.ne	406a5c <get_addr_1@@Base+0xc4>  // b.any
  406ba8:	add	x1, sp, #0x8
  406bac:	mov	x0, x20
  406bb0:	mov	w2, wzr
  406bb4:	bl	404df0 <strtoul@plt>
  406bb8:	cmp	x0, #0xff
  406bbc:	b.hi	406a5c <get_addr_1@@Base+0xc4>  // b.pmore
  406bc0:	ldr	x8, [sp, #8]
  406bc4:	cmp	x8, x20
  406bc8:	b.eq	406a5c <get_addr_1@@Base+0xc4>  // b.none
  406bcc:	mov	x21, xzr
  406bd0:	add	x22, x19, #0x8
  406bd4:	strb	w0, [x22, x21]
  406bd8:	ldrb	w9, [x8]
  406bdc:	cbz	w9, 406c20 <get_addr_1@@Base+0x288>
  406be0:	cmp	x21, #0x3
  406be4:	b.eq	406a5c <get_addr_1@@Base+0xc4>  // b.none
  406be8:	cmp	w9, #0x2e
  406bec:	b.ne	406a5c <get_addr_1@@Base+0xc4>  // b.any
  406bf0:	add	x20, x8, #0x1
  406bf4:	add	x1, sp, #0x8
  406bf8:	mov	x0, x20
  406bfc:	mov	w2, wzr
  406c00:	bl	404df0 <strtoul@plt>
  406c04:	cmp	x0, #0xff
  406c08:	b.hi	406a5c <get_addr_1@@Base+0xc4>  // b.pmore
  406c0c:	ldr	x8, [sp, #8]
  406c10:	add	x21, x21, #0x1
  406c14:	cmp	x8, x20
  406c18:	b.ne	406bd4 <get_addr_1@@Base+0x23c>  // b.any
  406c1c:	b	406a5c <get_addr_1@@Base+0xc4>
  406c20:	mov	w8, #0xffff0004            	// #-65532
  406c24:	b	406a48 <get_addr_1@@Base+0xb0>
  406c28:	ldrh	w8, [x0, #6]
  406c2c:	cmp	w8, #0xa
  406c30:	b.eq	406c58 <get_addr_1@@Base+0x2c0>  // b.none
  406c34:	cmp	w8, #0x2
  406c38:	b.ne	406cac <get_addr_1@@Base+0x314>  // b.any
  406c3c:	ldr	w9, [x0, #8]
  406c40:	cbz	w9, 406ca0 <get_addr_1@@Base+0x308>
  406c44:	ldrh	w8, [x0]
  406c48:	and	w9, w9, #0xf0
  406c4c:	cmp	w9, #0xe0
  406c50:	b.eq	406c70 <get_addr_1@@Base+0x2d8>  // b.none
  406c54:	b	406c98 <get_addr_1@@Base+0x300>
  406c58:	ldr	w9, [x0, #8]
  406c5c:	cbz	w9, 406c7c <get_addr_1@@Base+0x2e4>
  406c60:	ldrh	w8, [x0]
  406c64:	mvn	w9, w9
  406c68:	tst	w9, #0xff
  406c6c:	b.ne	406c98 <get_addr_1@@Base+0x300>  // b.any
  406c70:	mov	w9, #0xa                   	// #10
  406c74:	orr	w8, w8, w9
  406c78:	b	406ca8 <get_addr_1@@Base+0x310>
  406c7c:	ldr	w8, [x0, #12]
  406c80:	cbnz	w8, 406c94 <get_addr_1@@Base+0x2fc>
  406c84:	ldr	w8, [x0, #16]
  406c88:	cbnz	w8, 406c94 <get_addr_1@@Base+0x2fc>
  406c8c:	ldr	w8, [x0, #20]
  406c90:	cbz	w8, 406ca0 <get_addr_1@@Base+0x308>
  406c94:	ldrh	w8, [x0]
  406c98:	orr	w8, w8, #0x2
  406c9c:	b	406ca8 <get_addr_1@@Base+0x310>
  406ca0:	ldrh	w8, [x0]
  406ca4:	orr	w8, w8, #0x6
  406ca8:	strh	w8, [x0]
  406cac:	ret

0000000000406cb0 <af_bit_len@@Base>:
  406cb0:	cmp	w0, #0x9
  406cb4:	b.le	406cd8 <af_bit_len@@Base+0x28>
  406cb8:	cmp	w0, #0xa
  406cbc:	b.eq	406cf0 <af_bit_len@@Base+0x40>  // b.none
  406cc0:	cmp	w0, #0xc
  406cc4:	b.eq	406cf8 <af_bit_len@@Base+0x48>  // b.none
  406cc8:	cmp	w0, #0x1c
  406ccc:	b.ne	406d08 <af_bit_len@@Base+0x58>  // b.any
  406cd0:	mov	w0, #0x14                  	// #20
  406cd4:	ret
  406cd8:	cmp	w0, #0x2
  406cdc:	b.eq	406d00 <af_bit_len@@Base+0x50>  // b.none
  406ce0:	cmp	w0, #0x4
  406ce4:	b.ne	406d08 <af_bit_len@@Base+0x58>  // b.any
  406ce8:	mov	w0, #0x50                  	// #80
  406cec:	ret
  406cf0:	mov	w0, #0x80                  	// #128
  406cf4:	ret
  406cf8:	mov	w0, #0x10                  	// #16
  406cfc:	ret
  406d00:	mov	w0, #0x20                  	// #32
  406d04:	ret
  406d08:	mov	w0, wzr
  406d0c:	ret

0000000000406d10 <get_prefix_1@@Base>:
  406d10:	sub	sp, sp, #0x150
  406d14:	stp	x22, x21, [sp, #304]
  406d18:	mov	x22, x1
  406d1c:	stp	x20, x19, [sp, #320]
  406d20:	mov	x19, x0
  406d24:	mov	w1, #0x2f                  	// #47
  406d28:	mov	x0, x22
  406d2c:	stp	x29, x30, [sp, #272]
  406d30:	stp	x28, x23, [sp, #288]
  406d34:	add	x29, sp, #0x110
  406d38:	mov	w21, w2
  406d3c:	mov	w23, #0x2f                  	// #47
  406d40:	bl	4051a0 <strchr@plt>
  406d44:	mov	x20, x0
  406d48:	cbz	x0, 406d6c <get_prefix_1@@Base+0x5c>
  406d4c:	mov	x0, x19
  406d50:	mov	x1, x22
  406d54:	mov	w2, w21
  406d58:	strb	wzr, [x20]
  406d5c:	bl	406998 <get_addr_1@@Base>
  406d60:	strb	w23, [x20]
  406d64:	cbnz	w0, 406ea4 <get_prefix_1@@Base+0x194>
  406d68:	b	406d80 <get_prefix_1@@Base+0x70>
  406d6c:	mov	x0, x19
  406d70:	mov	x1, x22
  406d74:	mov	w2, w21
  406d78:	bl	406998 <get_addr_1@@Base>
  406d7c:	cbnz	w0, 406ea4 <get_prefix_1@@Base+0x194>
  406d80:	ldrh	w8, [x19, #6]
  406d84:	cmp	w8, #0x9
  406d88:	b.le	406db0 <get_prefix_1@@Base+0xa0>
  406d8c:	cmp	w8, #0xa
  406d90:	b.eq	406dcc <get_prefix_1@@Base+0xbc>  // b.none
  406d94:	cmp	w8, #0xc
  406d98:	b.eq	406dd8 <get_prefix_1@@Base+0xc8>  // b.none
  406d9c:	cmp	w8, #0x1c
  406da0:	b.ne	406e14 <get_prefix_1@@Base+0x104>  // b.any
  406da4:	mov	w21, #0x14                  	// #20
  406da8:	cbnz	x20, 406e1c <get_prefix_1@@Base+0x10c>
  406dac:	b	406dec <get_prefix_1@@Base+0xdc>
  406db0:	cmp	w8, #0x2
  406db4:	b.eq	406de4 <get_prefix_1@@Base+0xd4>  // b.none
  406db8:	cmp	w8, #0x4
  406dbc:	b.ne	406e14 <get_prefix_1@@Base+0x104>  // b.any
  406dc0:	mov	w21, #0x50                  	// #80
  406dc4:	cbnz	x20, 406e1c <get_prefix_1@@Base+0x10c>
  406dc8:	b	406dec <get_prefix_1@@Base+0xdc>
  406dcc:	mov	w21, #0x80                  	// #128
  406dd0:	cbnz	x20, 406e1c <get_prefix_1@@Base+0x10c>
  406dd4:	b	406dec <get_prefix_1@@Base+0xdc>
  406dd8:	mov	w21, #0x10                  	// #16
  406ddc:	cbnz	x20, 406e1c <get_prefix_1@@Base+0x10c>
  406de0:	b	406dec <get_prefix_1@@Base+0xdc>
  406de4:	mov	w21, #0x20                  	// #32
  406de8:	cbnz	x20, 406e1c <get_prefix_1@@Base+0x10c>
  406dec:	ldrsh	w8, [x19, #4]
  406df0:	mov	w9, wzr
  406df4:	cmn	w8, #0x2
  406df8:	csel	w8, wzr, w21, eq  // eq = none
  406dfc:	ldrh	w10, [x19]
  406e00:	mov	w0, wzr
  406e04:	strh	w8, [x19, #4]
  406e08:	orr	w9, w10, w9
  406e0c:	strh	w9, [x19]
  406e10:	b	406ea4 <get_prefix_1@@Base+0x194>
  406e14:	mov	w21, wzr
  406e18:	cbz	x20, 406dec <get_prefix_1@@Base+0xdc>
  406e1c:	ldrsh	w8, [x19, #4]
  406e20:	cmn	w8, #0x2
  406e24:	b.eq	406ea0 <get_prefix_1@@Base+0x190>  // b.none
  406e28:	add	x20, x20, #0x1
  406e2c:	add	x0, sp, #0x4
  406e30:	mov	x1, x20
  406e34:	mov	w2, wzr
  406e38:	bl	4062bc <get_unsigned@@Base>
  406e3c:	cbz	w0, 406e90 <get_prefix_1@@Base+0x180>
  406e40:	add	x0, sp, #0x8
  406e44:	mov	w2, #0x2                   	// #2
  406e48:	mov	x1, x20
  406e4c:	bl	406998 <get_addr_1@@Base>
  406e50:	cbnz	w0, 406ea0 <get_prefix_1@@Base+0x190>
  406e54:	ldrh	w8, [sp, #14]
  406e58:	cmp	w8, #0x2
  406e5c:	b.ne	406ea0 <get_prefix_1@@Base+0x190>  // b.any
  406e60:	ldr	w8, [sp, #16]
  406e64:	rev	w9, w8
  406e68:	neg	w10, w9
  406e6c:	bics	wzr, w10, w9
  406e70:	b.ne	406ea0 <get_prefix_1@@Base+0x190>  // b.any
  406e74:	cbz	w8, 406e88 <get_prefix_1@@Base+0x178>
  406e78:	mov	w8, wzr
  406e7c:	lsl	w9, w9, #1
  406e80:	add	w8, w8, #0x1
  406e84:	cbnz	w9, 406e7c <get_prefix_1@@Base+0x16c>
  406e88:	str	w8, [sp, #4]
  406e8c:	b	406e94 <get_prefix_1@@Base+0x184>
  406e90:	ldr	w8, [sp, #4]
  406e94:	cmp	w8, w21
  406e98:	cset	w9, ls  // ls = plast
  406e9c:	b.ls	406dfc <get_prefix_1@@Base+0xec>  // b.plast
  406ea0:	mov	w0, #0xffffffff            	// #-1
  406ea4:	ldp	x20, x19, [sp, #320]
  406ea8:	ldp	x22, x21, [sp, #304]
  406eac:	ldp	x28, x23, [sp, #288]
  406eb0:	ldp	x29, x30, [sp, #272]
  406eb4:	add	sp, sp, #0x150
  406eb8:	ret

0000000000406ebc <get_addr@@Base>:
  406ebc:	stp	x29, x30, [sp, #-48]!
  406ec0:	str	x21, [sp, #16]
  406ec4:	stp	x20, x19, [sp, #32]
  406ec8:	mov	x29, sp
  406ecc:	mov	w20, w2
  406ed0:	mov	x19, x1
  406ed4:	bl	406998 <get_addr_1@@Base>
  406ed8:	cbnz	w0, 406eec <get_addr@@Base+0x30>
  406edc:	ldp	x20, x19, [sp, #32]
  406ee0:	ldr	x21, [sp, #16]
  406ee4:	ldp	x29, x30, [sp], #48
  406ee8:	ret
  406eec:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  406ef0:	ldr	x8, [x8, #3992]
  406ef4:	mov	w0, w20
  406ef8:	ldr	x21, [x8]
  406efc:	bl	406f20 <get_addr@@Base+0x64>
  406f00:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  406f04:	mov	x2, x0
  406f08:	add	x1, x1, #0x473
  406f0c:	mov	x0, x21
  406f10:	mov	x3, x19
  406f14:	bl	405330 <fprintf@plt>
  406f18:	mov	w0, #0x1                   	// #1
  406f1c:	bl	404e20 <exit@plt>
  406f20:	cbz	w0, 406f28 <get_addr@@Base+0x6c>
  406f24:	b	407794 <family_name@@Base>
  406f28:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  406f2c:	add	x0, x0, #0x7e9
  406f30:	ret

0000000000406f34 <get_addr_rta@@Base>:
  406f34:	stp	x29, x30, [sp, #-16]!
  406f38:	ldrh	w8, [x1], #4
  406f3c:	mov	x29, sp
  406f40:	sub	w8, w8, #0x6
  406f44:	ror	w9, w8, #1
  406f48:	cmp	w9, #0x7
  406f4c:	mov	w8, #0xffffffff            	// #-1
  406f50:	b.hi	407014 <get_addr_rta@@Base+0xe0>  // b.pmore
  406f54:	adrp	x10, 40d000 <_IO_stdin_used@@Base+0x180>
  406f58:	add	x10, x10, #0x390
  406f5c:	adr	x11, 406f6c <get_addr_rta@@Base+0x38>
  406f60:	ldrb	w12, [x10, x9]
  406f64:	add	x11, x11, x12, lsl #2
  406f68:	br	x11
  406f6c:	mov	w8, #0xc                   	// #12
  406f70:	mov	w9, #0x2                   	// #2
  406f74:	strh	w8, [x0, #6]
  406f78:	strh	w9, [x0, #2]
  406f7c:	ldrh	w9, [x1]
  406f80:	strh	w9, [x0, #8]
  406f84:	cbnz	w2, 406ff0 <get_addr_rta@@Base+0xbc>
  406f88:	b	407000 <get_addr_rta@@Base+0xcc>
  406f8c:	mov	w8, #0x2                   	// #2
  406f90:	mov	w9, #0x4                   	// #4
  406f94:	strh	w8, [x0, #6]
  406f98:	strh	w9, [x0, #2]
  406f9c:	ldr	w9, [x1]
  406fa0:	str	w9, [x0, #8]
  406fa4:	cbnz	w2, 406ff0 <get_addr_rta@@Base+0xbc>
  406fa8:	b	407000 <get_addr_rta@@Base+0xcc>
  406fac:	mov	w8, #0x4                   	// #4
  406fb0:	mov	w9, #0xa                   	// #10
  406fb4:	strh	w8, [x0, #6]
  406fb8:	strh	w9, [x0, #2]
  406fbc:	ldrh	w9, [x1, #8]
  406fc0:	ldr	x10, [x1]
  406fc4:	strh	w9, [x0, #16]
  406fc8:	str	x10, [x0, #8]
  406fcc:	cbnz	w2, 406ff0 <get_addr_rta@@Base+0xbc>
  406fd0:	b	407000 <get_addr_rta@@Base+0xcc>
  406fd4:	mov	w8, #0xa                   	// #10
  406fd8:	mov	w9, #0x10                  	// #16
  406fdc:	strh	w8, [x0, #6]
  406fe0:	strh	w9, [x0, #2]
  406fe4:	ldr	q0, [x1]
  406fe8:	stur	q0, [x0, #8]
  406fec:	cbz	w2, 407000 <get_addr_rta@@Base+0xcc>
  406ff0:	cmp	w8, w2
  406ff4:	b.eq	407000 <get_addr_rta@@Base+0xcc>  // b.none
  406ff8:	mov	w8, #0xfffffffe            	// #-2
  406ffc:	b	407014 <get_addr_rta@@Base+0xe0>
  407000:	mov	w8, #0xffff                	// #65535
  407004:	strh	w8, [x0, #4]
  407008:	strh	wzr, [x0]
  40700c:	bl	406c28 <get_addr_1@@Base+0x290>
  407010:	mov	w8, wzr
  407014:	mov	w0, w8
  407018:	ldp	x29, x30, [sp], #16
  40701c:	ret

0000000000407020 <get_prefix@@Base>:
  407020:	stp	x29, x30, [sp, #-48]!
  407024:	stp	x20, x19, [sp, #32]
  407028:	mov	x19, x1
  40702c:	cmp	w2, #0x11
  407030:	str	x21, [sp, #16]
  407034:	mov	x29, sp
  407038:	b.eq	40705c <get_prefix@@Base+0x3c>  // b.none
  40703c:	mov	x1, x19
  407040:	mov	w20, w2
  407044:	bl	406d10 <get_prefix_1@@Base>
  407048:	cbnz	w0, 40707c <get_prefix@@Base+0x5c>
  40704c:	ldp	x20, x19, [sp, #32]
  407050:	ldr	x21, [sp, #16]
  407054:	ldp	x29, x30, [sp], #48
  407058:	ret
  40705c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  407060:	ldr	x8, [x8, #3992]
  407064:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407068:	add	x1, x1, #0x4a4
  40706c:	mov	x2, x19
  407070:	ldr	x0, [x8]
  407074:	bl	405330 <fprintf@plt>
  407078:	b	4070a8 <get_prefix@@Base+0x88>
  40707c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  407080:	ldr	x8, [x8, #3992]
  407084:	mov	w0, w20
  407088:	ldr	x21, [x8]
  40708c:	bl	406f20 <get_addr@@Base+0x64>
  407090:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407094:	mov	x2, x0
  407098:	add	x1, x1, #0x4ec
  40709c:	mov	x0, x21
  4070a0:	mov	x3, x19
  4070a4:	bl	405330 <fprintf@plt>
  4070a8:	mov	w0, #0x1                   	// #1
  4070ac:	bl	404e20 <exit@plt>

00000000004070b0 <get_addr32@@Base>:
  4070b0:	sub	sp, sp, #0x130
  4070b4:	stp	x28, x19, [sp, #288]
  4070b8:	mov	x19, x0
  4070bc:	add	x0, sp, #0x8
  4070c0:	mov	w2, #0x2                   	// #2
  4070c4:	mov	x1, x19
  4070c8:	stp	x29, x30, [sp, #272]
  4070cc:	add	x29, sp, #0x110
  4070d0:	bl	406998 <get_addr_1@@Base>
  4070d4:	cbnz	w0, 4070ec <get_addr32@@Base+0x3c>
  4070d8:	ldr	w0, [sp, #16]
  4070dc:	ldp	x28, x19, [sp, #288]
  4070e0:	ldp	x29, x30, [sp, #272]
  4070e4:	add	sp, sp, #0x130
  4070e8:	ret
  4070ec:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4070f0:	ldr	x8, [x8, #3992]
  4070f4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4070f8:	add	x1, x1, #0x51c
  4070fc:	mov	x2, x19
  407100:	ldr	x0, [x8]
  407104:	bl	405330 <fprintf@plt>
  407108:	mov	w0, #0x1                   	// #1
  40710c:	bl	404e20 <exit@plt>

0000000000407110 <incomplete_command@@Base>:
  407110:	stp	x29, x30, [sp, #-16]!
  407114:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  407118:	ldr	x8, [x8, #3992]
  40711c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  407120:	add	x0, x0, #0x54f
  407124:	mov	w1, #0x30                  	// #48
  407128:	ldr	x3, [x8]
  40712c:	mov	w2, #0x1                   	// #1
  407130:	mov	x29, sp
  407134:	bl	4051c0 <fwrite@plt>
  407138:	mov	w0, #0xffffffff            	// #-1
  40713c:	bl	404e20 <exit@plt>

0000000000407140 <missarg@@Base>:
  407140:	stp	x29, x30, [sp, #-16]!
  407144:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  407148:	ldr	x8, [x8, #3992]
  40714c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407150:	mov	x2, x0
  407154:	add	x1, x1, #0x580
  407158:	ldr	x8, [x8]
  40715c:	mov	x29, sp
  407160:	mov	x0, x8
  407164:	bl	405330 <fprintf@plt>
  407168:	mov	w0, #0xffffffff            	// #-1
  40716c:	bl	404e20 <exit@plt>

0000000000407170 <invarg@@Base>:
  407170:	stp	x29, x30, [sp, #-16]!
  407174:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  407178:	ldr	x8, [x8, #3992]
  40717c:	mov	x2, x1
  407180:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407184:	mov	x3, x0
  407188:	ldr	x8, [x8]
  40718c:	add	x1, x1, #0x5a2
  407190:	mov	x29, sp
  407194:	mov	x0, x8
  407198:	bl	405330 <fprintf@plt>
  40719c:	mov	w0, #0xffffffff            	// #-1
  4071a0:	bl	404e20 <exit@plt>

00000000004071a4 <duparg@@Base>:
  4071a4:	stp	x29, x30, [sp, #-16]!
  4071a8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4071ac:	ldr	x8, [x8, #3992]
  4071b0:	mov	x3, x1
  4071b4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4071b8:	mov	x2, x0
  4071bc:	ldr	x8, [x8]
  4071c0:	add	x1, x1, #0x5c5
  4071c4:	mov	x29, sp
  4071c8:	mov	x0, x8
  4071cc:	bl	405330 <fprintf@plt>
  4071d0:	mov	w0, #0xffffffff            	// #-1
  4071d4:	bl	404e20 <exit@plt>

00000000004071d8 <duparg2@@Base>:
  4071d8:	stp	x29, x30, [sp, #-16]!
  4071dc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4071e0:	ldr	x8, [x8, #3992]
  4071e4:	mov	x3, x1
  4071e8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4071ec:	mov	x2, x0
  4071f0:	ldr	x8, [x8]
  4071f4:	add	x1, x1, #0x5f7
  4071f8:	mov	x29, sp
  4071fc:	mov	x0, x8
  407200:	bl	405330 <fprintf@plt>
  407204:	mov	w0, #0xffffffff            	// #-1
  407208:	bl	404e20 <exit@plt>

000000000040720c <nodev@@Base>:
  40720c:	stp	x29, x30, [sp, #-16]!
  407210:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  407214:	ldr	x8, [x8, #3992]
  407218:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40721c:	mov	x2, x0
  407220:	add	x1, x1, #0x62f
  407224:	ldr	x8, [x8]
  407228:	mov	x29, sp
  40722c:	mov	x0, x8
  407230:	bl	405330 <fprintf@plt>
  407234:	mov	w0, #0xffffffff            	// #-1
  407238:	ldp	x29, x30, [sp], #16
  40723c:	ret

0000000000407240 <check_ifname@@Base>:
  407240:	stp	x29, x30, [sp, #-32]!
  407244:	str	x19, [sp, #16]
  407248:	mov	x29, sp
  40724c:	mov	x19, x0
  407250:	bl	404e00 <strlen@plt>
  407254:	cmp	x0, #0xf
  407258:	b.ls	40726c <check_ifname@@Base+0x2c>  // b.plast
  40725c:	ldr	x19, [sp, #16]
  407260:	mov	w0, #0xffffffff            	// #-1
  407264:	ldp	x29, x30, [sp], #32
  407268:	ret
  40726c:	mov	x0, x19
  407270:	ldr	x19, [sp, #16]
  407274:	ldp	x29, x30, [sp], #32
  407278:	b	40727c <check_ifname@@Base+0x3c>
  40727c:	stp	x29, x30, [sp, #-32]!
  407280:	stp	x20, x19, [sp, #16]
  407284:	ldrb	w20, [x0]
  407288:	mov	x29, sp
  40728c:	cbz	w20, 4072c0 <check_ifname@@Base+0x80>
  407290:	add	x19, x0, #0x1
  407294:	ands	w8, w20, #0xff
  407298:	b.eq	4072d0 <check_ifname@@Base+0x90>  // b.none
  40729c:	cmp	w8, #0x2f
  4072a0:	b.eq	4072c0 <check_ifname@@Base+0x80>  // b.none
  4072a4:	bl	405100 <__ctype_b_loc@plt>
  4072a8:	ldr	x8, [x0]
  4072ac:	and	x9, x20, #0xff
  4072b0:	ldrh	w8, [x8, x9, lsl #1]
  4072b4:	tbnz	w8, #13, 4072c0 <check_ifname@@Base+0x80>
  4072b8:	ldrb	w20, [x19], #1
  4072bc:	b	407294 <check_ifname@@Base+0x54>
  4072c0:	mov	w0, #0xffffffff            	// #-1
  4072c4:	ldp	x20, x19, [sp, #16]
  4072c8:	ldp	x29, x30, [sp], #32
  4072cc:	ret
  4072d0:	mov	w0, wzr
  4072d4:	b	4072c4 <check_ifname@@Base+0x84>

00000000004072d8 <check_altifname@@Base>:
  4072d8:	b	40727c <check_ifname@@Base+0x3c>

00000000004072dc <get_ifname@@Base>:
  4072dc:	stp	x29, x30, [sp, #-32]!
  4072e0:	stp	x20, x19, [sp, #16]
  4072e4:	mov	x20, x0
  4072e8:	mov	x0, x1
  4072ec:	mov	x29, sp
  4072f0:	mov	x19, x1
  4072f4:	bl	404e00 <strlen@plt>
  4072f8:	cmp	x0, #0xf
  4072fc:	b.ls	407308 <get_ifname@@Base+0x2c>  // b.plast
  407300:	mov	w0, #0xffffffff            	// #-1
  407304:	b	407328 <get_ifname@@Base+0x4c>
  407308:	mov	x0, x19
  40730c:	bl	40727c <check_ifname@@Base+0x3c>
  407310:	cbnz	w0, 407328 <get_ifname@@Base+0x4c>
  407314:	mov	w2, #0x10                  	// #16
  407318:	mov	x0, x20
  40731c:	mov	x1, x19
  407320:	bl	4052a0 <strncpy@plt>
  407324:	mov	w0, wzr
  407328:	ldp	x20, x19, [sp, #16]
  40732c:	ldp	x29, x30, [sp], #32
  407330:	ret

0000000000407334 <get_ifname_rta@@Base>:
  407334:	stp	x29, x30, [sp, #-32]!
  407338:	str	x19, [sp, #16]
  40733c:	mov	x29, sp
  407340:	cbz	x1, 40737c <get_ifname_rta@@Base+0x48>
  407344:	add	x19, x1, #0x4
  407348:	mov	x0, x19
  40734c:	bl	404e00 <strlen@plt>
  407350:	cmp	x0, #0xf
  407354:	b.ls	407360 <get_ifname_rta@@Base+0x2c>  // b.plast
  407358:	mov	x0, xzr
  40735c:	b	407370 <get_ifname_rta@@Base+0x3c>
  407360:	mov	x0, x19
  407364:	bl	40727c <check_ifname@@Base+0x3c>
  407368:	cmp	w0, #0x0
  40736c:	csel	x0, x19, xzr, eq  // eq = none
  407370:	ldr	x19, [sp, #16]
  407374:	ldp	x29, x30, [sp], #32
  407378:	ret
  40737c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  407380:	ldr	x8, [x8, #3992]
  407384:	mov	w19, w0
  407388:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40738c:	add	x1, x1, #0x648
  407390:	ldr	x0, [x8]
  407394:	mov	w2, w19
  407398:	bl	405330 <fprintf@plt>
  40739c:	mov	w0, w19
  4073a0:	bl	408df0 <ll_idx_n2a@@Base>
  4073a4:	mov	x19, x0
  4073a8:	b	407348 <get_ifname_rta@@Base+0x14>

00000000004073ac <matches@@Base>:
  4073ac:	ldrb	w9, [x0]
  4073b0:	cbz	w9, 4073f4 <matches@@Base+0x48>
  4073b4:	ldrb	w10, [x1]
  4073b8:	mov	x8, x0
  4073bc:	mov	w0, #0x1                   	// #1
  4073c0:	cbz	w10, 4073f0 <matches@@Base+0x44>
  4073c4:	cmp	w9, w10
  4073c8:	b.ne	4073f0 <matches@@Base+0x44>  // b.any
  4073cc:	add	x8, x8, #0x1
  4073d0:	add	x9, x1, #0x1
  4073d4:	ldrb	w11, [x9], #1
  4073d8:	ldrb	w10, [x8], #1
  4073dc:	cbz	w11, 4073e8 <matches@@Base+0x3c>
  4073e0:	cmp	w10, w11
  4073e4:	b.eq	4073d4 <matches@@Base+0x28>  // b.none
  4073e8:	cmp	w10, #0x0
  4073ec:	cset	w0, ne  // ne = any
  4073f0:	ret
  4073f4:	mov	w0, #0x1                   	// #1
  4073f8:	ret

00000000004073fc <inet_addr_match@@Base>:
  4073fc:	stp	x29, x30, [sp, #-48]!
  407400:	stp	x22, x21, [sp, #16]
  407404:	stp	x20, x19, [sp, #32]
  407408:	mov	w21, w2
  40740c:	mov	x19, x1
  407410:	asr	w22, w2, #5
  407414:	mov	x20, x0
  407418:	mov	x29, sp
  40741c:	cbz	w22, 407440 <inet_addr_match@@Base+0x44>
  407420:	lsl	w8, w22, #2
  407424:	add	x1, x19, #0x8
  407428:	add	x0, x20, #0x8
  40742c:	sxtw	x2, w8
  407430:	bl	405030 <bcmp@plt>
  407434:	cbz	w0, 407440 <inet_addr_match@@Base+0x44>
  407438:	mov	w0, #0xffffffff            	// #-1
  40743c:	b	407480 <inet_addr_match@@Base+0x84>
  407440:	and	w8, w21, #0x1f
  407444:	cbz	w8, 40747c <inet_addr_match@@Base+0x80>
  407448:	add	x9, x20, w22, sxtw #2
  40744c:	add	x10, x19, w22, sxtw #2
  407450:	ldr	w9, [x9, #8]
  407454:	ldr	w10, [x10, #8]
  407458:	neg	w8, w8
  40745c:	mov	w11, #0xffffffff            	// #-1
  407460:	lsl	w8, w11, w8
  407464:	rev	w8, w8
  407468:	eor	w9, w10, w9
  40746c:	tst	w9, w8
  407470:	b.eq	40747c <inet_addr_match@@Base+0x80>  // b.none
  407474:	mov	w0, #0x1                   	// #1
  407478:	b	407480 <inet_addr_match@@Base+0x84>
  40747c:	mov	w0, wzr
  407480:	ldp	x20, x19, [sp, #32]
  407484:	ldp	x22, x21, [sp, #16]
  407488:	ldp	x29, x30, [sp], #48
  40748c:	ret

0000000000407490 <inet_addr_match_rta@@Base>:
  407490:	sub	sp, sp, #0x130
  407494:	stp	x29, x30, [sp, #272]
  407498:	stp	x28, x19, [sp, #288]
  40749c:	add	x29, sp, #0x110
  4074a0:	cbz	x1, 4074d0 <inet_addr_match_rta@@Base+0x40>
  4074a4:	ldrh	w2, [x0, #6]
  4074a8:	mov	x19, x0
  4074ac:	cbz	w2, 4074d0 <inet_addr_match_rta@@Base+0x40>
  4074b0:	ldrsh	w8, [x19, #4]
  4074b4:	cmp	w8, #0x1
  4074b8:	b.lt	4074d0 <inet_addr_match_rta@@Base+0x40>  // b.tstop
  4074bc:	add	x0, sp, #0x8
  4074c0:	bl	406f34 <get_addr_rta@@Base>
  4074c4:	cbz	w0, 4074e4 <inet_addr_match_rta@@Base+0x54>
  4074c8:	mov	w0, #0xffffffff            	// #-1
  4074cc:	b	4074d4 <inet_addr_match_rta@@Base+0x44>
  4074d0:	mov	w0, wzr
  4074d4:	ldp	x28, x19, [sp, #288]
  4074d8:	ldp	x29, x30, [sp, #272]
  4074dc:	add	sp, sp, #0x130
  4074e0:	ret
  4074e4:	ldrsh	w2, [x19, #4]
  4074e8:	add	x0, sp, #0x8
  4074ec:	mov	x1, x19
  4074f0:	bl	4073fc <inet_addr_match@@Base>
  4074f4:	b	4074d4 <inet_addr_match_rta@@Base+0x44>

00000000004074f8 <__get_hz@@Base>:
  4074f8:	stp	x29, x30, [sp, #-64]!
  4074fc:	str	x28, [sp, #16]
  407500:	stp	x22, x21, [sp, #32]
  407504:	stp	x20, x19, [sp, #48]
  407508:	mov	x29, sp
  40750c:	sub	sp, sp, #0x400
  407510:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  407514:	add	x0, x0, #0x674
  407518:	bl	405300 <getenv@plt>
  40751c:	cbz	x0, 407534 <__get_hz@@Base+0x3c>
  407520:	bl	404f50 <atoi@plt>
  407524:	cmp	w0, #0x0
  407528:	mov	w8, #0x64                  	// #100
  40752c:	csel	w19, w8, w0, eq  // eq = none
  407530:	b	4075d8 <__get_hz@@Base+0xe0>
  407534:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  407538:	add	x0, x0, #0x677
  40753c:	bl	405300 <getenv@plt>
  407540:	cbz	x0, 407554 <__get_hz@@Base+0x5c>
  407544:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  407548:	mov	x3, x0
  40754c:	add	x2, x2, #0x451
  407550:	b	407570 <__get_hz@@Base+0x78>
  407554:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  407558:	add	x0, x0, #0x687
  40755c:	bl	405300 <getenv@plt>
  407560:	cbz	x0, 4075f4 <__get_hz@@Base+0xfc>
  407564:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  407568:	mov	x3, x0
  40756c:	add	x2, x2, #0x691
  407570:	mov	x0, sp
  407574:	mov	w1, #0x3ff                 	// #1023
  407578:	bl	404f10 <snprintf@plt>
  40757c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407580:	add	x1, x1, #0x9e9
  407584:	mov	x0, sp
  407588:	bl	405200 <fopen64@plt>
  40758c:	cbz	x0, 4075d4 <__get_hz@@Base+0xdc>
  407590:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407594:	add	x1, x1, #0x6b0
  407598:	add	x2, x29, #0x1c
  40759c:	add	x3, x29, #0x18
  4075a0:	mov	x20, x0
  4075a4:	bl	404fa0 <__isoc99_fscanf@plt>
  4075a8:	ldp	w19, w22, [x29, #24]
  4075ac:	mov	w21, w0
  4075b0:	mov	x0, x20
  4075b4:	bl	404f40 <fclose@plt>
  4075b8:	cmp	w21, #0x2
  4075bc:	b.ne	4075d4 <__get_hz@@Base+0xdc>  // b.any
  4075c0:	mov	w8, #0x4240                	// #16960
  4075c4:	movk	w8, #0xf, lsl #16
  4075c8:	cmp	w22, w8
  4075cc:	b.ne	4075d4 <__get_hz@@Base+0xdc>  // b.any
  4075d0:	cbnz	w19, 4075d8 <__get_hz@@Base+0xe0>
  4075d4:	mov	w19, #0x64                  	// #100
  4075d8:	mov	w0, w19
  4075dc:	add	sp, sp, #0x400
  4075e0:	ldp	x20, x19, [sp, #48]
  4075e4:	ldp	x22, x21, [sp, #32]
  4075e8:	ldr	x28, [sp, #16]
  4075ec:	ldp	x29, x30, [sp], #64
  4075f0:	ret
  4075f4:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  4075f8:	add	x8, x8, #0x69f
  4075fc:	ldr	q0, [x8]
  407600:	strb	wzr, [sp, #16]
  407604:	str	q0, [sp]
  407608:	b	40757c <__get_hz@@Base+0x84>

000000000040760c <__get_user_hz@@Base>:
  40760c:	stp	x29, x30, [sp, #-16]!
  407610:	mov	w0, #0x2                   	// #2
  407614:	mov	x29, sp
  407618:	bl	405230 <sysconf@plt>
  40761c:	ldp	x29, x30, [sp], #16
  407620:	ret

0000000000407624 <rt_addr_n2a_r@@Base>:
  407624:	mov	x8, x2
  407628:	cmp	w0, #0x9
  40762c:	b.le	40764c <rt_addr_n2a_r@@Base+0x28>
  407630:	cmp	w0, #0x1c
  407634:	b.eq	407698 <rt_addr_n2a_r@@Base+0x74>  // b.none
  407638:	cmp	w0, #0x11
  40763c:	b.eq	4076ac <rt_addr_n2a_r@@Base+0x88>  // b.none
  407640:	cmp	w0, #0xa
  407644:	b.eq	40767c <rt_addr_n2a_r@@Base+0x58>  // b.none
  407648:	b	40768c <rt_addr_n2a_r@@Base+0x68>
  40764c:	cmp	w0, #0x2
  407650:	b.eq	40767c <rt_addr_n2a_r@@Base+0x58>  // b.none
  407654:	cmp	w0, #0x7
  407658:	b.ne	40768c <rt_addr_n2a_r@@Base+0x68>  // b.any
  40765c:	ldrh	w9, [x8]
  407660:	cmp	w9, #0xa
  407664:	b.eq	4076b8 <rt_addr_n2a_r@@Base+0x94>  // b.none
  407668:	cmp	w9, #0x2
  40766c:	b.ne	40768c <rt_addr_n2a_r@@Base+0x68>  // b.any
  407670:	add	x1, x8, #0x4
  407674:	mov	w0, #0x2                   	// #2
  407678:	b	407680 <rt_addr_n2a_r@@Base+0x5c>
  40767c:	mov	x1, x8
  407680:	mov	x2, x3
  407684:	mov	w3, w4
  407688:	b	405350 <inet_ntop@plt>
  40768c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  407690:	add	x0, x0, #0x6c3
  407694:	ret
  407698:	sxtw	x9, w4
  40769c:	mov	x1, x8
  4076a0:	mov	x2, x3
  4076a4:	mov	x3, x9
  4076a8:	b	40a1d0 <mpls_ntop@@Base>
  4076ac:	mov	w2, #0xffff                	// #65535
  4076b0:	mov	x0, x8
  4076b4:	b	4093d8 <ll_addr_n2a@@Base>
  4076b8:	add	x1, x8, #0x8
  4076bc:	mov	w0, #0xa                   	// #10
  4076c0:	b	407680 <rt_addr_n2a_r@@Base+0x5c>

00000000004076c4 <rt_addr_n2a@@Base>:
  4076c4:	adrp	x3, 41f000 <memcpy@GLIBC_2.17>
  4076c8:	add	x3, x3, #0x340
  4076cc:	mov	w4, #0x100                 	// #256
  4076d0:	b	407624 <rt_addr_n2a_r@@Base>

00000000004076d4 <read_family@@Base>:
  4076d4:	stp	x29, x30, [sp, #-32]!
  4076d8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4076dc:	add	x1, x1, #0x6c7
  4076e0:	str	x19, [sp, #16]
  4076e4:	mov	x29, sp
  4076e8:	mov	x19, x0
  4076ec:	bl	4050f0 <strcmp@plt>
  4076f0:	cbz	w0, 407764 <read_family@@Base+0x90>
  4076f4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4076f8:	add	x1, x1, #0x6cc
  4076fc:	mov	x0, x19
  407700:	bl	4050f0 <strcmp@plt>
  407704:	cbz	w0, 40776c <read_family@@Base+0x98>
  407708:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40770c:	add	x1, x1, #0xd77
  407710:	mov	x0, x19
  407714:	bl	4050f0 <strcmp@plt>
  407718:	cbz	w0, 407774 <read_family@@Base+0xa0>
  40771c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407720:	add	x1, x1, #0x6d2
  407724:	mov	x0, x19
  407728:	bl	4050f0 <strcmp@plt>
  40772c:	cbz	w0, 40777c <read_family@@Base+0xa8>
  407730:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407734:	add	x1, x1, #0x6d6
  407738:	mov	x0, x19
  40773c:	bl	4050f0 <strcmp@plt>
  407740:	cbz	w0, 407784 <read_family@@Base+0xb0>
  407744:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407748:	add	x1, x1, #0x6db
  40774c:	mov	x0, x19
  407750:	bl	4050f0 <strcmp@plt>
  407754:	cmp	w0, #0x0
  407758:	mov	w8, #0x7                   	// #7
  40775c:	csel	w0, w8, wzr, eq  // eq = none
  407760:	b	407788 <read_family@@Base+0xb4>
  407764:	mov	w0, #0x2                   	// #2
  407768:	b	407788 <read_family@@Base+0xb4>
  40776c:	mov	w0, #0xa                   	// #10
  407770:	b	407788 <read_family@@Base+0xb4>
  407774:	mov	w0, #0x11                  	// #17
  407778:	b	407788 <read_family@@Base+0xb4>
  40777c:	mov	w0, #0x4                   	// #4
  407780:	b	407788 <read_family@@Base+0xb4>
  407784:	mov	w0, #0x1c                  	// #28
  407788:	ldr	x19, [sp, #16]
  40778c:	ldp	x29, x30, [sp], #32
  407790:	ret

0000000000407794 <family_name@@Base>:
  407794:	sub	w8, w0, #0x2
  407798:	cmp	w8, #0x8
  40779c:	b.hi	4077cc <family_name@@Base+0x38>  // b.pmore
  4077a0:	adrp	x9, 40d000 <_IO_stdin_used@@Base+0x180>
  4077a4:	add	x9, x9, #0x398
  4077a8:	adr	x10, 4077c0 <family_name@@Base+0x2c>
  4077ac:	ldrb	w11, [x9, x8]
  4077b0:	add	x10, x10, x11, lsl #2
  4077b4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4077b8:	add	x0, x0, #0x6c7
  4077bc:	br	x10
  4077c0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4077c4:	add	x0, x0, #0x6d2
  4077c8:	ret
  4077cc:	cmp	w0, #0x11
  4077d0:	b.eq	40780c <family_name@@Base+0x78>  // b.none
  4077d4:	cmp	w0, #0x1c
  4077d8:	b.ne	4077e8 <family_name@@Base+0x54>  // b.any
  4077dc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4077e0:	add	x0, x0, #0x6d6
  4077e4:	ret
  4077e8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4077ec:	add	x0, x0, #0x6c3
  4077f0:	ret
  4077f4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4077f8:	add	x0, x0, #0x6db
  4077fc:	ret
  407800:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  407804:	add	x0, x0, #0x6cc
  407808:	ret
  40780c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  407810:	add	x0, x0, #0xd77
  407814:	ret

0000000000407818 <format_host_r@@Base>:
  407818:	sub	sp, sp, #0x70
  40781c:	stp	x29, x30, [sp, #16]
  407820:	stp	x28, x27, [sp, #32]
  407824:	stp	x26, x25, [sp, #48]
  407828:	stp	x24, x23, [sp, #64]
  40782c:	stp	x22, x21, [sp, #80]
  407830:	stp	x20, x19, [sp, #96]
  407834:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  407838:	ldr	x8, [x8, #4064]
  40783c:	mov	x21, x2
  407840:	mov	w23, w1
  407844:	mov	w22, w0
  407848:	ldr	w8, [x8]
  40784c:	add	x29, sp, #0x10
  407850:	cbz	w8, 407a28 <format_host_r@@Base+0x210>
  407854:	cmp	w23, #0x0
  407858:	stur	w4, [x29, #-4]
  40785c:	str	x3, [sp]
  407860:	b.le	407888 <format_host_r@@Base+0x70>
  407864:	cmp	w22, #0xa
  407868:	mov	w8, w23
  40786c:	mov	w24, w22
  407870:	mov	x25, x21
  407874:	b.ne	407900 <format_host_r@@Base+0xe8>  // b.any
  407878:	ldr	w8, [x21]
  40787c:	cbz	w8, 4078d4 <format_host_r@@Base+0xbc>
  407880:	mov	w24, #0xa                   	// #10
  407884:	b	4078e0 <format_host_r@@Base+0xc8>
  407888:	cmp	w22, #0x9
  40788c:	mov	w23, wzr
  407890:	b.le	4078b8 <format_host_r@@Base+0xa0>
  407894:	cmp	w22, #0xa
  407898:	b.eq	4078e8 <format_host_r@@Base+0xd0>  // b.none
  40789c:	cmp	w22, #0x1c
  4078a0:	b.eq	4078ac <format_host_r@@Base+0x94>  // b.none
  4078a4:	cmp	w22, #0xc
  4078a8:	b.ne	407a28 <format_host_r@@Base+0x210>  // b.any
  4078ac:	mov	w23, #0x2                   	// #2
  4078b0:	mov	w8, #0x2                   	// #2
  4078b4:	b	4078f8 <format_host_r@@Base+0xe0>
  4078b8:	cmp	w22, #0x2
  4078bc:	b.eq	4078f0 <format_host_r@@Base+0xd8>  // b.none
  4078c0:	cmp	w22, #0x4
  4078c4:	b.ne	407a28 <format_host_r@@Base+0x210>  // b.any
  4078c8:	mov	w23, #0xa                   	// #10
  4078cc:	mov	w8, #0xa                   	// #10
  4078d0:	b	4078f8 <format_host_r@@Base+0xe0>
  4078d4:	ldr	w8, [x21, #4]
  4078d8:	mov	w24, #0xa                   	// #10
  4078dc:	cbz	w8, 407a54 <format_host_r@@Base+0x23c>
  4078e0:	mov	w8, w23
  4078e4:	b	4078fc <format_host_r@@Base+0xe4>
  4078e8:	mov	w23, #0x10                  	// #16
  4078ec:	b	407878 <format_host_r@@Base+0x60>
  4078f0:	mov	w23, #0x4                   	// #4
  4078f4:	mov	w8, #0x4                   	// #4
  4078f8:	mov	w24, w22
  4078fc:	mov	x25, x21
  407900:	add	x9, x25, w8, uxtw
  407904:	ldur	w9, [x9, #-4]
  407908:	mov	w10, #0xff01                	// #65281
  40790c:	movk	w10, #0xff00, lsl #16
  407910:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  407914:	mul	x10, x9, x10
  407918:	lsr	x10, x10, #40
  40791c:	add	w10, w10, w10, lsl #8
  407920:	sub	w28, w9, w10
  407924:	add	x19, x19, #0x548
  407928:	ldr	x20, [x19, w28, uxtw #3]
  40792c:	mov	w26, w8
  407930:	cbz	x20, 40796c <format_host_r@@Base+0x154>
  407934:	mov	x27, x20
  407938:	ldrh	w8, [x27, #22]
  40793c:	cmp	w24, w8
  407940:	b.ne	407964 <format_host_r@@Base+0x14c>  // b.any
  407944:	ldrh	w8, [x27, #18]
  407948:	cmp	w26, w8
  40794c:	b.ne	407964 <format_host_r@@Base+0x14c>  // b.any
  407950:	add	x0, x27, #0x18
  407954:	mov	x1, x25
  407958:	mov	x2, x26
  40795c:	bl	405030 <bcmp@plt>
  407960:	cbz	w0, 4079f0 <format_host_r@@Base+0x1d8>
  407964:	ldr	x27, [x27]
  407968:	cbnz	x27, 407938 <format_host_r@@Base+0x120>
  40796c:	mov	w0, #0x118                 	// #280
  407970:	bl	404f70 <malloc@plt>
  407974:	cbz	x0, 407a20 <format_host_r@@Base+0x208>
  407978:	mov	x27, x0
  40797c:	strh	w24, [x0, #22]
  407980:	strh	w26, [x0, #18]
  407984:	str	xzr, [x0, #8]
  407988:	add	x0, x0, #0x18
  40798c:	mov	x1, x25
  407990:	mov	x2, x26
  407994:	bl	404dd0 <memcpy@plt>
  407998:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  40799c:	ldr	w9, [x8, #1344]
  4079a0:	str	x20, [x27]
  4079a4:	str	x27, [x19, x28, lsl #3]
  4079a8:	add	w10, w9, #0x1
  4079ac:	str	w10, [x8, #1344]
  4079b0:	cbnz	w9, 4079bc <format_host_r@@Base+0x1a4>
  4079b4:	mov	w0, #0x1                   	// #1
  4079b8:	bl	404e80 <sethostent@plt>
  4079bc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4079c0:	ldr	x8, [x8, #4016]
  4079c4:	ldr	x0, [x8]
  4079c8:	bl	4051e0 <fflush@plt>
  4079cc:	mov	x0, x25
  4079d0:	mov	w1, w26
  4079d4:	mov	w2, w24
  4079d8:	bl	405150 <gethostbyaddr@plt>
  4079dc:	cbz	x0, 4079f0 <format_host_r@@Base+0x1d8>
  4079e0:	ldr	x0, [x0]
  4079e4:	bl	405070 <strdup@plt>
  4079e8:	str	x0, [x27, #8]
  4079ec:	b	4079f4 <format_host_r@@Base+0x1dc>
  4079f0:	ldr	x0, [x27, #8]
  4079f4:	ldur	w4, [x29, #-4]
  4079f8:	ldr	x3, [sp]
  4079fc:	cbz	x0, 407a28 <format_host_r@@Base+0x210>
  407a00:	ldp	x20, x19, [sp, #96]
  407a04:	ldp	x22, x21, [sp, #80]
  407a08:	ldp	x24, x23, [sp, #64]
  407a0c:	ldp	x26, x25, [sp, #48]
  407a10:	ldp	x28, x27, [sp, #32]
  407a14:	ldp	x29, x30, [sp, #16]
  407a18:	add	sp, sp, #0x70
  407a1c:	ret
  407a20:	ldur	w4, [x29, #-4]
  407a24:	ldr	x3, [sp]
  407a28:	mov	w0, w22
  407a2c:	mov	w1, w23
  407a30:	mov	x2, x21
  407a34:	ldp	x20, x19, [sp, #96]
  407a38:	ldp	x22, x21, [sp, #80]
  407a3c:	ldp	x24, x23, [sp, #64]
  407a40:	ldp	x26, x25, [sp, #48]
  407a44:	ldp	x28, x27, [sp, #32]
  407a48:	ldp	x29, x30, [sp, #16]
  407a4c:	add	sp, sp, #0x70
  407a50:	b	407624 <rt_addr_n2a_r@@Base>
  407a54:	ldr	w8, [x21, #8]
  407a58:	add	x9, x21, #0xc
  407a5c:	mov	w10, #0x4                   	// #4
  407a60:	mov	w11, #0x2                   	// #2
  407a64:	cmn	w8, #0x10, lsl #12
  407a68:	csel	w8, w10, w23, eq  // eq = none
  407a6c:	csel	w24, w11, w24, eq  // eq = none
  407a70:	csel	x25, x9, x21, eq  // eq = none
  407a74:	b	407900 <format_host_r@@Base+0xe8>

0000000000407a78 <format_host@@Base>:
  407a78:	adrp	x3, 41f000 <memcpy@GLIBC_2.17>
  407a7c:	add	x3, x3, #0x440
  407a80:	mov	w4, #0x100                 	// #256
  407a84:	b	407818 <format_host_r@@Base>

0000000000407a88 <hexstring_n2a@@Base>:
  407a88:	stp	x29, x30, [sp, #-80]!
  407a8c:	stp	x20, x19, [sp, #64]
  407a90:	mov	x19, x2
  407a94:	cmp	w3, #0x3
  407a98:	str	x25, [sp, #16]
  407a9c:	stp	x24, x23, [sp, #32]
  407aa0:	stp	x22, x21, [sp, #48]
  407aa4:	mov	x29, sp
  407aa8:	b.lt	407afc <hexstring_n2a@@Base+0x74>  // b.tstop
  407aac:	cmp	w1, #0x1
  407ab0:	b.lt	407afc <hexstring_n2a@@Base+0x74>  // b.tstop
  407ab4:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x180>
  407ab8:	mov	w20, w3
  407abc:	mov	x21, x0
  407ac0:	mov	x24, xzr
  407ac4:	mov	w25, w1
  407ac8:	add	x22, x22, #0x841
  407acc:	mov	x23, x19
  407ad0:	ldrb	w2, [x21, x24]
  407ad4:	mov	x0, x23
  407ad8:	mov	x1, x22
  407adc:	bl	404eb0 <sprintf@plt>
  407ae0:	cmp	w20, #0x5
  407ae4:	b.lt	407afc <hexstring_n2a@@Base+0x74>  // b.tstop
  407ae8:	add	x24, x24, #0x1
  407aec:	add	x23, x23, #0x2
  407af0:	cmp	x24, x25
  407af4:	sub	w20, w20, #0x2
  407af8:	b.cc	407ad0 <hexstring_n2a@@Base+0x48>  // b.lo, b.ul, b.last
  407afc:	mov	x0, x19
  407b00:	ldp	x20, x19, [sp, #64]
  407b04:	ldp	x22, x21, [sp, #48]
  407b08:	ldp	x24, x23, [sp, #32]
  407b0c:	ldr	x25, [sp, #16]
  407b10:	ldp	x29, x30, [sp], #80
  407b14:	ret

0000000000407b18 <hexstring_a2n@@Base>:
  407b18:	sub	sp, sp, #0x50
  407b1c:	stp	x29, x30, [sp, #16]
  407b20:	stp	x24, x23, [sp, #32]
  407b24:	stp	x22, x21, [sp, #48]
  407b28:	stp	x20, x19, [sp, #64]
  407b2c:	add	x29, sp, #0x10
  407b30:	mov	x20, x3
  407b34:	mov	w22, w2
  407b38:	mov	x19, x1
  407b3c:	mov	x21, x0
  407b40:	bl	404e00 <strlen@plt>
  407b44:	tbnz	w0, #0, 407bcc <hexstring_a2n@@Base+0xb4>
  407b48:	cbz	w22, 407bd4 <hexstring_a2n@@Base+0xbc>
  407b4c:	mov	x23, xzr
  407b50:	mov	w24, w22
  407b54:	mov	x0, x21
  407b58:	bl	404e00 <strlen@plt>
  407b5c:	cmp	x0, #0x2
  407b60:	b.cc	407bd8 <hexstring_a2n@@Base+0xc0>  // b.lo, b.ul, b.last
  407b64:	add	x0, sp, #0x4
  407b68:	mov	w2, #0x2                   	// #2
  407b6c:	mov	x1, x21
  407b70:	bl	4052a0 <strncpy@plt>
  407b74:	strb	wzr, [sp, #6]
  407b78:	bl	4052f0 <__errno_location@plt>
  407b7c:	mov	x22, x0
  407b80:	str	wzr, [x0]
  407b84:	add	x0, sp, #0x4
  407b88:	add	x1, sp, #0x8
  407b8c:	mov	w2, #0x10                  	// #16
  407b90:	bl	404df0 <strtoul@plt>
  407b94:	ldr	w8, [x22]
  407b98:	cbnz	w8, 407bcc <hexstring_a2n@@Base+0xb4>
  407b9c:	cmp	w0, #0xff
  407ba0:	b.hi	407bcc <hexstring_a2n@@Base+0xb4>  // b.pmore
  407ba4:	ldr	x8, [sp, #8]
  407ba8:	ldrb	w8, [x8]
  407bac:	cbnz	w8, 407bcc <hexstring_a2n@@Base+0xb4>
  407bb0:	strb	w0, [x19, x23]
  407bb4:	add	x23, x23, #0x1
  407bb8:	cmp	x24, x23
  407bbc:	add	x21, x21, #0x2
  407bc0:	b.ne	407b54 <hexstring_a2n@@Base+0x3c>  // b.any
  407bc4:	mov	w23, w24
  407bc8:	b	407bd8 <hexstring_a2n@@Base+0xc0>
  407bcc:	mov	x19, xzr
  407bd0:	b	407be0 <hexstring_a2n@@Base+0xc8>
  407bd4:	mov	w23, wzr
  407bd8:	cbz	x20, 407be0 <hexstring_a2n@@Base+0xc8>
  407bdc:	str	w23, [x20]
  407be0:	mov	x0, x19
  407be4:	ldp	x20, x19, [sp, #64]
  407be8:	ldp	x22, x21, [sp, #48]
  407bec:	ldp	x24, x23, [sp, #32]
  407bf0:	ldp	x29, x30, [sp, #16]
  407bf4:	add	sp, sp, #0x50
  407bf8:	ret

0000000000407bfc <hex2mem@@Base>:
  407bfc:	cmp	w2, #0x1
  407c00:	b.lt	407ca0 <hex2mem@@Base+0xa4>  // b.tstop
  407c04:	mov	w8, w2
  407c08:	add	x9, x0, #0x1
  407c0c:	ldurb	w10, [x9, #-1]
  407c10:	sub	w11, w10, #0x41
  407c14:	cmp	w11, #0x5
  407c18:	b.hi	407c24 <hex2mem@@Base+0x28>  // b.pmore
  407c1c:	sub	w10, w10, #0x37
  407c20:	b	407c44 <hex2mem@@Base+0x48>
  407c24:	sub	w11, w10, #0x61
  407c28:	cmp	w11, #0x5
  407c2c:	b.hi	407c38 <hex2mem@@Base+0x3c>  // b.pmore
  407c30:	sub	w10, w10, #0x57
  407c34:	b	407c44 <hex2mem@@Base+0x48>
  407c38:	sub	w10, w10, #0x30
  407c3c:	cmp	w10, #0x9
  407c40:	b.hi	407ca8 <hex2mem@@Base+0xac>  // b.pmore
  407c44:	tbnz	w10, #31, 407ca8 <hex2mem@@Base+0xac>
  407c48:	lsl	w10, w10, #4
  407c4c:	strb	w10, [x1]
  407c50:	ldrb	w11, [x9]
  407c54:	sub	w12, w11, #0x41
  407c58:	cmp	w12, #0x5
  407c5c:	b.hi	407c68 <hex2mem@@Base+0x6c>  // b.pmore
  407c60:	sub	w11, w11, #0x37
  407c64:	b	407c88 <hex2mem@@Base+0x8c>
  407c68:	sub	w12, w11, #0x61
  407c6c:	cmp	w12, #0x5
  407c70:	b.hi	407c7c <hex2mem@@Base+0x80>  // b.pmore
  407c74:	sub	w11, w11, #0x57
  407c78:	b	407c88 <hex2mem@@Base+0x8c>
  407c7c:	sub	w11, w11, #0x30
  407c80:	cmp	w11, #0x9
  407c84:	b.hi	407ca8 <hex2mem@@Base+0xac>  // b.pmore
  407c88:	tbnz	w11, #31, 407ca8 <hex2mem@@Base+0xac>
  407c8c:	orr	w10, w10, w11
  407c90:	subs	x8, x8, #0x1
  407c94:	strb	w10, [x1], #1
  407c98:	add	x9, x9, #0x2
  407c9c:	b.ne	407c0c <hex2mem@@Base+0x10>  // b.any
  407ca0:	mov	w0, wzr
  407ca4:	ret
  407ca8:	mov	w0, #0xffffffff            	// #-1
  407cac:	ret

0000000000407cb0 <addr64_n2a@@Base>:
  407cb0:	sub	sp, sp, #0x60
  407cb4:	stp	x20, x19, [sp, #80]
  407cb8:	mov	x19, x2
  407cbc:	rev	w8, w0
  407cc0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  407cc4:	adrp	x4, 40d000 <_IO_stdin_used@@Base+0x180>
  407cc8:	mov	x20, x1
  407ccc:	str	x0, [sp, #8]
  407cd0:	lsr	w3, w8, #16
  407cd4:	add	x2, x2, #0x6e4
  407cd8:	add	x4, x4, #0x6e2
  407cdc:	mov	x0, x1
  407ce0:	mov	x1, x19
  407ce4:	stp	x29, x30, [sp, #16]
  407ce8:	stp	x26, x25, [sp, #32]
  407cec:	stp	x24, x23, [sp, #48]
  407cf0:	stp	x22, x21, [sp, #64]
  407cf4:	add	x29, sp, #0x10
  407cf8:	bl	404f10 <snprintf@plt>
  407cfc:	tbnz	w0, #31, 407d6c <addr64_n2a@@Base+0xbc>
  407d00:	add	x8, sp, #0x8
  407d04:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x180>
  407d08:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x180>
  407d0c:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x180>
  407d10:	mov	x24, xzr
  407d14:	mov	x23, xzr
  407d18:	add	x21, x21, #0x6e2
  407d1c:	add	x25, x25, #0x177
  407d20:	orr	x26, x8, #0x2
  407d24:	add	x22, x22, #0x6e4
  407d28:	cmp	x24, #0x6
  407d2c:	add	x23, x23, w0, uxtw
  407d30:	b.eq	407d68 <addr64_n2a@@Base+0xb8>  // b.none
  407d34:	ldrh	w8, [x26, x24]
  407d38:	cmp	x24, #0x4
  407d3c:	csel	x21, x25, x21, eq  // eq = none
  407d40:	add	x0, x20, x23
  407d44:	rev	w8, w8
  407d48:	lsr	w3, w8, #16
  407d4c:	sub	x1, x19, x23
  407d50:	mov	x2, x22
  407d54:	mov	x4, x21
  407d58:	bl	404f10 <snprintf@plt>
  407d5c:	add	x24, x24, #0x2
  407d60:	tbz	w0, #31, 407d28 <addr64_n2a@@Base+0x78>
  407d64:	b	407d6c <addr64_n2a@@Base+0xbc>
  407d68:	mov	w0, w23
  407d6c:	ldp	x20, x19, [sp, #80]
  407d70:	ldp	x22, x21, [sp, #64]
  407d74:	ldp	x24, x23, [sp, #48]
  407d78:	ldp	x26, x25, [sp, #32]
  407d7c:	ldp	x29, x30, [sp, #16]
  407d80:	add	sp, sp, #0x60
  407d84:	ret

0000000000407d88 <print_escape_buf@@Base>:
  407d88:	stp	x29, x30, [sp, #-64]!
  407d8c:	stp	x24, x23, [sp, #16]
  407d90:	stp	x22, x21, [sp, #32]
  407d94:	stp	x20, x19, [sp, #48]
  407d98:	mov	x29, sp
  407d9c:	cbz	x1, 407e0c <print_escape_buf@@Base+0x84>
  407da0:	mov	x19, x2
  407da4:	mov	x20, x1
  407da8:	mov	x21, x0
  407dac:	bl	405100 <__ctype_b_loc@plt>
  407db0:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x180>
  407db4:	mov	x22, x0
  407db8:	add	x23, x23, #0x6e9
  407dbc:	ldrb	w24, [x21]
  407dc0:	cmp	x24, #0x5c
  407dc4:	b.eq	407de4 <print_escape_buf@@Base+0x5c>  // b.none
  407dc8:	ldr	x8, [x22]
  407dcc:	ldrh	w8, [x8, x24, lsl #1]
  407dd0:	tbz	w8, #14, 407de4 <print_escape_buf@@Base+0x5c>
  407dd4:	mov	x0, x19
  407dd8:	mov	w1, w24
  407ddc:	bl	4051a0 <strchr@plt>
  407de0:	cbz	x0, 407e00 <print_escape_buf@@Base+0x78>
  407de4:	mov	x0, x23
  407de8:	mov	w1, w24
  407dec:	bl	4052d0 <printf@plt>
  407df0:	subs	x20, x20, #0x1
  407df4:	add	x21, x21, #0x1
  407df8:	b.ne	407dbc <print_escape_buf@@Base+0x34>  // b.any
  407dfc:	b	407e0c <print_escape_buf@@Base+0x84>
  407e00:	mov	w0, w24
  407e04:	bl	405310 <putchar@plt>
  407e08:	b	407df0 <print_escape_buf@@Base+0x68>
  407e0c:	ldp	x20, x19, [sp, #48]
  407e10:	ldp	x22, x21, [sp, #32]
  407e14:	ldp	x24, x23, [sp, #16]
  407e18:	ldp	x29, x30, [sp], #64
  407e1c:	ret

0000000000407e20 <print_timestamp@@Base>:
  407e20:	sub	sp, sp, #0x60
  407e24:	stp	x29, x30, [sp, #64]
  407e28:	add	x29, sp, #0x40
  407e2c:	stp	x20, x19, [sp, #80]
  407e30:	mov	x19, x0
  407e34:	sub	x0, x29, #0x10
  407e38:	mov	x1, xzr
  407e3c:	bl	404ff0 <gettimeofday@plt>
  407e40:	sub	x0, x29, #0x10
  407e44:	bl	404f30 <localtime@plt>
  407e48:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  407e4c:	ldr	x8, [x8, #4032]
  407e50:	mov	x3, x0
  407e54:	ldr	w8, [x8]
  407e58:	cbz	w8, 407e88 <print_timestamp@@Base+0x68>
  407e5c:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  407e60:	add	x2, x2, #0x6ef
  407e64:	add	x0, sp, #0x8
  407e68:	mov	w1, #0x28                  	// #40
  407e6c:	bl	404ee0 <strftime@plt>
  407e70:	ldur	x3, [x29, #-8]
  407e74:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407e78:	add	x1, x1, #0x701
  407e7c:	add	x2, sp, #0x8
  407e80:	mov	x0, x19
  407e84:	b	407eb4 <print_timestamp@@Base+0x94>
  407e88:	mov	x0, x3
  407e8c:	bl	405240 <asctime@plt>
  407e90:	mov	x20, x0
  407e94:	bl	404e00 <strlen@plt>
  407e98:	add	x8, x0, x20
  407e9c:	sturb	wzr, [x8, #-1]
  407ea0:	ldur	x3, [x29, #-8]
  407ea4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  407ea8:	add	x1, x1, #0x70d
  407eac:	mov	x0, x19
  407eb0:	mov	x2, x20
  407eb4:	bl	405330 <fprintf@plt>
  407eb8:	ldp	x20, x19, [sp, #80]
  407ebc:	ldp	x29, x30, [sp, #64]
  407ec0:	mov	w0, wzr
  407ec4:	add	sp, sp, #0x60
  407ec8:	ret

0000000000407ecc <print_name_and_link@@Base>:
  407ecc:	sub	sp, sp, #0x70
  407ed0:	stp	x29, x30, [sp, #64]
  407ed4:	stp	x22, x21, [sp, #80]
  407ed8:	stp	x20, x19, [sp, #96]
  407edc:	ldr	x8, [x2, #40]
  407ee0:	mov	x20, x1
  407ee4:	mov	x19, x0
  407ee8:	add	x29, sp, #0x40
  407eec:	cbz	x8, 407f4c <print_name_and_link@@Base+0x80>
  407ef0:	ldr	w22, [x8, #4]
  407ef4:	cbz	w22, 407f28 <print_name_and_link@@Base+0x5c>
  407ef8:	ldr	x8, [x2, #296]
  407efc:	cbz	x8, 407f54 <print_name_and_link@@Base+0x88>
  407f00:	bl	409704 <is_json_context@@Base>
  407f04:	tbz	w0, #0, 407fa0 <print_name_and_link@@Base+0xd4>
  407f08:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  407f0c:	add	x2, x2, #0x725
  407f10:	mov	w0, #0x2                   	// #2
  407f14:	mov	w1, #0x6                   	// #6
  407f18:	mov	x3, xzr
  407f1c:	mov	w4, w22
  407f20:	bl	40982c <print_color_int@@Base>
  407f24:	b	407f4c <print_name_and_link@@Base+0x80>
  407f28:	bl	409704 <is_json_context@@Base>
  407f2c:	tbz	w0, #0, 407fb8 <print_name_and_link@@Base+0xec>
  407f30:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  407f34:	add	x2, x2, #0xd77
  407f38:	mov	w0, #0x2                   	// #2
  407f3c:	mov	w1, #0x6                   	// #6
  407f40:	mov	x3, xzr
  407f44:	mov	x4, xzr
  407f48:	bl	409e4c <print_color_null@@Base>
  407f4c:	mov	w22, wzr
  407f50:	b	407fe4 <print_name_and_link@@Base+0x118>
  407f54:	mov	w0, w22
  407f58:	bl	408e2c <ll_index_to_name@@Base>
  407f5c:	mov	x21, x0
  407f60:	bl	409704 <is_json_context@@Base>
  407f64:	tbz	w0, #0, 407f88 <print_name_and_link@@Base+0xbc>
  407f68:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  407f6c:	add	x2, x2, #0xd77
  407f70:	mov	w0, #0x2                   	// #2
  407f74:	mov	w1, #0x6                   	// #6
  407f78:	mov	x3, xzr
  407f7c:	mov	x4, x21
  407f80:	bl	409c14 <print_color_string@@Base>
  407f84:	mov	x21, xzr
  407f88:	mov	w0, w22
  407f8c:	bl	409050 <ll_index_to_flags@@Base>
  407f90:	mvn	w8, w0
  407f94:	and	w22, w8, #0x1
  407f98:	cbnz	x21, 407fc4 <print_name_and_link@@Base+0xf8>
  407f9c:	b	407fe4 <print_name_and_link@@Base+0x118>
  407fa0:	mov	w0, w22
  407fa4:	bl	408df0 <ll_idx_n2a@@Base>
  407fa8:	mov	x21, x0
  407fac:	mov	w22, wzr
  407fb0:	cbnz	x21, 407fc4 <print_name_and_link@@Base+0xf8>
  407fb4:	b	407fe4 <print_name_and_link@@Base+0x118>
  407fb8:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x180>
  407fbc:	mov	w22, wzr
  407fc0:	add	x21, x21, #0x730
  407fc4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  407fc8:	add	x2, x2, #0x735
  407fcc:	mov	x0, sp
  407fd0:	mov	w1, #0x40                  	// #64
  407fd4:	mov	x3, x20
  407fd8:	mov	x4, x21
  407fdc:	bl	404f10 <snprintf@plt>
  407fe0:	mov	x20, sp
  407fe4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  407fe8:	add	x2, x2, #0x73b
  407fec:	mov	w0, #0x4                   	// #4
  407ff0:	mov	w1, wzr
  407ff4:	mov	x3, x19
  407ff8:	mov	x4, x20
  407ffc:	bl	409c14 <print_color_string@@Base>
  408000:	mov	w0, w22
  408004:	ldp	x20, x19, [sp, #96]
  408008:	ldp	x22, x21, [sp, #80]
  40800c:	ldp	x29, x30, [sp, #64]
  408010:	add	sp, sp, #0x70
  408014:	ret

0000000000408018 <getcmdline@@Base>:
  408018:	sub	sp, sp, #0x70
  40801c:	stp	x29, x30, [sp, #16]
  408020:	stp	x28, x27, [sp, #32]
  408024:	stp	x26, x25, [sp, #48]
  408028:	stp	x24, x23, [sp, #64]
  40802c:	stp	x22, x21, [sp, #80]
  408030:	stp	x20, x19, [sp, #96]
  408034:	add	x29, sp, #0x10
  408038:	mov	x21, x2
  40803c:	mov	x19, x1
  408040:	mov	x22, x0
  408044:	bl	405140 <getline@plt>
  408048:	mov	x20, x0
  40804c:	tbnz	x0, #63, 40819c <getcmdline@@Base+0x184>
  408050:	adrp	x28, 41e000 <_IO_stdin_used@@Base+0x11180>
  408054:	ldr	x28, [x28, #4000]
  408058:	mov	w1, #0x23                  	// #35
  40805c:	ldr	w8, [x28]
  408060:	add	w8, w8, #0x1
  408064:	str	w8, [x28]
  408068:	ldr	x23, [x22]
  40806c:	mov	x0, x23
  408070:	bl	4051a0 <strchr@plt>
  408074:	cbz	x0, 408080 <getcmdline@@Base+0x68>
  408078:	strb	wzr, [x0]
  40807c:	ldr	x23, [x22]
  408080:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408084:	add	x1, x1, #0x742
  408088:	mov	x0, x23
  40808c:	bl	405280 <strstr@plt>
  408090:	cbz	x0, 40819c <getcmdline@@Base+0x184>
  408094:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x180>
  408098:	mov	x25, x0
  40809c:	add	x23, x23, #0x742
  4080a0:	add	x0, sp, #0x8
  4080a4:	mov	x1, sp
  4080a8:	mov	x2, x21
  4080ac:	stp	xzr, xzr, [sp]
  4080b0:	bl	405140 <getline@plt>
  4080b4:	mov	x24, x0
  4080b8:	tbnz	x0, #63, 40814c <getcmdline@@Base+0x134>
  4080bc:	ldr	w8, [x28]
  4080c0:	mov	w1, #0x23                  	// #35
  4080c4:	add	w8, w8, #0x1
  4080c8:	str	w8, [x28]
  4080cc:	strb	wzr, [x25]
  4080d0:	ldr	x25, [sp, #8]
  4080d4:	mov	x0, x25
  4080d8:	bl	4051a0 <strchr@plt>
  4080dc:	cbz	x0, 4080e8 <getcmdline@@Base+0xd0>
  4080e0:	strb	wzr, [x0]
  4080e4:	ldr	x25, [sp, #8]
  4080e8:	ldr	x26, [x22]
  4080ec:	mov	x0, x26
  4080f0:	bl	404e00 <strlen@plt>
  4080f4:	mov	x27, x0
  4080f8:	mov	x0, x25
  4080fc:	bl	404e00 <strlen@plt>
  408100:	add	x8, x27, x0
  408104:	add	x1, x8, #0x1
  408108:	mov	x0, x26
  40810c:	str	x1, [x19]
  408110:	bl	405050 <realloc@plt>
  408114:	str	x0, [x22]
  408118:	cbz	x0, 408174 <getcmdline@@Base+0x15c>
  40811c:	ldr	x1, [sp, #8]
  408120:	add	x8, x20, x24
  408124:	sub	x20, x8, #0x2
  408128:	bl	404fc0 <strcat@plt>
  40812c:	ldr	x0, [sp, #8]
  408130:	bl	405160 <free@plt>
  408134:	ldr	x0, [x22]
  408138:	mov	x1, x23
  40813c:	bl	405280 <strstr@plt>
  408140:	mov	x25, x0
  408144:	cbnz	x0, 4080a0 <getcmdline@@Base+0x88>
  408148:	b	40819c <getcmdline@@Base+0x184>
  40814c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  408150:	ldr	x8, [x8, #3992]
  408154:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  408158:	add	x0, x0, #0x745
  40815c:	mov	w1, #0x1a                  	// #26
  408160:	ldr	x3, [x8]
  408164:	mov	w2, #0x1                   	// #1
  408168:	bl	4051c0 <fwrite@plt>
  40816c:	mov	x20, x24
  408170:	b	40819c <getcmdline@@Base+0x184>
  408174:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  408178:	ldr	x8, [x8, #3992]
  40817c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  408180:	add	x0, x0, #0x760
  408184:	mov	w1, #0xe                   	// #14
  408188:	ldr	x3, [x8]
  40818c:	mov	w2, #0x1                   	// #1
  408190:	bl	4051c0 <fwrite@plt>
  408194:	str	xzr, [x19]
  408198:	mov	x20, #0xffffffffffffffff    	// #-1
  40819c:	mov	x0, x20
  4081a0:	ldp	x20, x19, [sp, #96]
  4081a4:	ldp	x22, x21, [sp, #80]
  4081a8:	ldp	x24, x23, [sp, #64]
  4081ac:	ldp	x26, x25, [sp, #48]
  4081b0:	ldp	x28, x27, [sp, #32]
  4081b4:	ldp	x29, x30, [sp, #16]
  4081b8:	add	sp, sp, #0x70
  4081bc:	ret

00000000004081c0 <makeargs@@Base>:
  4081c0:	stp	x29, x30, [sp, #-64]!
  4081c4:	stp	x24, x23, [sp, #16]
  4081c8:	stp	x22, x21, [sp, #32]
  4081cc:	stp	x20, x19, [sp, #48]
  4081d0:	ldrb	w8, [x0]
  4081d4:	mov	x19, x1
  4081d8:	mov	x29, sp
  4081dc:	cbz	w8, 408274 <makeargs@@Base+0xb4>
  4081e0:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x180>
  4081e4:	mov	x22, x0
  4081e8:	mov	w20, wzr
  4081ec:	sub	w23, w2, #0x1
  4081f0:	add	x21, x21, #0x3a1
  4081f4:	mov	x0, x22
  4081f8:	mov	x1, x21
  4081fc:	bl	405190 <strspn@plt>
  408200:	add	x22, x22, x0
  408204:	ldrb	w1, [x22]
  408208:	cbz	w1, 408278 <makeargs@@Base+0xb8>
  40820c:	cmp	w20, w23
  408210:	b.ge	408294 <makeargs@@Base+0xd4>  // b.tcont
  408214:	cmp	w1, #0x27
  408218:	b.eq	408224 <makeargs@@Base+0x64>  // b.none
  40821c:	cmp	w1, #0x22
  408220:	b.ne	40823c <makeargs@@Base+0x7c>  // b.any
  408224:	add	x0, x22, #0x1
  408228:	str	x0, [x19, w20, sxtw #3]
  40822c:	bl	4051a0 <strchr@plt>
  408230:	cbz	x0, 4082ac <makeargs@@Base+0xec>
  408234:	add	w20, w20, #0x1
  408238:	b	408260 <makeargs@@Base+0xa0>
  40823c:	mov	x0, x22
  408240:	mov	x1, x21
  408244:	add	w24, w20, #0x1
  408248:	str	x22, [x19, w20, sxtw #3]
  40824c:	bl	4052b0 <strcspn@plt>
  408250:	add	x0, x22, x0
  408254:	ldrb	w8, [x0]
  408258:	mov	w20, w24
  40825c:	cbz	w8, 408278 <makeargs@@Base+0xb8>
  408260:	mov	x22, x0
  408264:	ldrb	w8, [x22, #1]!
  408268:	strb	wzr, [x0]
  40826c:	cbnz	w8, 4081f4 <makeargs@@Base+0x34>
  408270:	b	408278 <makeargs@@Base+0xb8>
  408274:	mov	w20, wzr
  408278:	str	xzr, [x19, w20, sxtw #3]
  40827c:	mov	w0, w20
  408280:	ldp	x20, x19, [sp, #48]
  408284:	ldp	x22, x21, [sp, #32]
  408288:	ldp	x24, x23, [sp, #16]
  40828c:	ldp	x29, x30, [sp], #64
  408290:	ret
  408294:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  408298:	ldr	x8, [x8, #3992]
  40829c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4082a0:	add	x0, x0, #0x76f
  4082a4:	mov	w1, #0x1e                  	// #30
  4082a8:	b	4082c0 <makeargs@@Base+0x100>
  4082ac:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4082b0:	ldr	x8, [x8, #3992]
  4082b4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4082b8:	add	x0, x0, #0x78e
  4082bc:	mov	w1, #0x1b                  	// #27
  4082c0:	ldr	x3, [x8]
  4082c4:	mov	w2, #0x1                   	// #1
  4082c8:	bl	4051c0 <fwrite@plt>
  4082cc:	mov	w0, #0x1                   	// #1
  4082d0:	bl	404e20 <exit@plt>

00000000004082d4 <print_nlmsg_timestamp@@Base>:
  4082d4:	stp	x29, x30, [sp, #-48]!
  4082d8:	str	x21, [sp, #16]
  4082dc:	stp	x20, x19, [sp, #32]
  4082e0:	ldp	w8, w19, [x1, #16]
  4082e4:	mov	x29, sp
  4082e8:	mov	x20, x0
  4082ec:	add	x0, x29, #0x18
  4082f0:	str	x8, [x29, #24]
  4082f4:	bl	404f30 <localtime@plt>
  4082f8:	bl	405240 <asctime@plt>
  4082fc:	mov	x21, x0
  408300:	bl	404e00 <strlen@plt>
  408304:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408308:	add	x8, x0, x21
  40830c:	add	x1, x1, #0x7aa
  408310:	mov	x0, x20
  408314:	mov	x2, x21
  408318:	mov	x3, x19
  40831c:	sturb	wzr, [x8, #-1]
  408320:	bl	405330 <fprintf@plt>
  408324:	ldp	x20, x19, [sp, #32]
  408328:	ldr	x21, [sp, #16]
  40832c:	ldp	x29, x30, [sp], #48
  408330:	ret

0000000000408334 <int_to_str@@Base>:
  408334:	stp	x29, x30, [sp, #-32]!
  408338:	str	x19, [sp, #16]
  40833c:	mov	x19, x1
  408340:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408344:	mov	w2, w0
  408348:	add	x1, x1, #0x7c0
  40834c:	mov	x0, x19
  408350:	mov	x29, sp
  408354:	bl	404eb0 <sprintf@plt>
  408358:	mov	x0, x19
  40835c:	ldr	x19, [sp, #16]
  408360:	ldp	x29, x30, [sp], #32
  408364:	ret

0000000000408368 <get_guid@@Base>:
  408368:	stp	x29, x30, [sp, #-48]!
  40836c:	stp	x20, x19, [sp, #32]
  408370:	mov	x20, x0
  408374:	mov	x0, x1
  408378:	str	x21, [sp, #16]
  40837c:	mov	x29, sp
  408380:	mov	x19, x1
  408384:	bl	404e00 <strlen@plt>
  408388:	cmp	x0, #0x17
  40838c:	b.ne	40840c <get_guid@@Base+0xa4>  // b.any
  408390:	mov	w8, #0x2                   	// #2
  408394:	ldrb	w9, [x19, x8]
  408398:	cmp	w9, #0x3a
  40839c:	b.ne	40840c <get_guid@@Base+0xa4>  // b.any
  4083a0:	add	x8, x8, #0x3
  4083a4:	cmp	x8, #0x17
  4083a8:	b.ne	408394 <get_guid@@Base+0x2c>  // b.any
  4083ac:	mov	w21, #0x38                  	// #56
  4083b0:	str	xzr, [x20]
  4083b4:	add	x1, x29, #0x18
  4083b8:	mov	w2, #0x10                  	// #16
  4083bc:	mov	x0, x19
  4083c0:	bl	404df0 <strtoul@plt>
  4083c4:	mov	x8, x0
  4083c8:	cmp	x0, #0xff
  4083cc:	mov	w0, #0xffffffff            	// #-1
  4083d0:	b.hi	408410 <get_guid@@Base+0xa8>  // b.pmore
  4083d4:	ldr	x9, [x29, #24]
  4083d8:	add	x10, x19, #0x2
  4083dc:	cmp	x10, x9
  4083e0:	b.ne	408410 <get_guid@@Base+0xa8>  // b.any
  4083e4:	ldr	x9, [x20]
  4083e8:	lsl	x8, x8, x21
  4083ec:	sub	x21, x21, #0x8
  4083f0:	cmn	x21, #0x8
  4083f4:	orr	x8, x9, x8
  4083f8:	add	x19, x19, #0x3
  4083fc:	str	x8, [x20]
  408400:	b.ne	4083b4 <get_guid@@Base+0x4c>  // b.any
  408404:	mov	w0, wzr
  408408:	b	408410 <get_guid@@Base+0xa8>
  40840c:	mov	w0, #0xffffffff            	// #-1
  408410:	ldp	x20, x19, [sp, #32]
  408414:	ldr	x21, [sp, #16]
  408418:	ldp	x29, x30, [sp], #48
  40841c:	ret

0000000000408420 <get_real_family@@Base>:
  408420:	cmp	w0, #0x5
  408424:	mov	w0, w1
  408428:	b.ne	408440 <get_real_family@@Base+0x20>  // b.any
  40842c:	cmp	w0, #0x80
  408430:	b.eq	408444 <get_real_family@@Base+0x24>  // b.none
  408434:	cmp	w0, #0x81
  408438:	b.ne	408440 <get_real_family@@Base+0x20>  // b.any
  40843c:	mov	w0, #0xa                   	// #10
  408440:	ret
  408444:	mov	w0, #0x2                   	// #2
  408448:	ret

000000000040844c <get_rtnl_link_stats_rta@@Base>:
  40844c:	stp	x29, x30, [sp, #-64]!
  408450:	stp	x28, x23, [sp, #16]
  408454:	stp	x22, x21, [sp, #32]
  408458:	stp	x20, x19, [sp, #48]
  40845c:	mov	x29, sp
  408460:	sub	sp, sp, #0x9b0
  408464:	ldr	x23, [x1, #184]
  408468:	mov	x19, x0
  40846c:	cbz	x23, 40847c <get_rtnl_link_stats_rta@@Base+0x30>
  408470:	mov	w20, #0xc0                  	// #192
  408474:	mov	x21, x19
  408478:	b	40848c <get_rtnl_link_stats_rta@@Base+0x40>
  40847c:	ldr	x23, [x1, #56]
  408480:	cbz	x23, 4084fc <get_rtnl_link_stats_rta@@Base+0xb0>
  408484:	sub	x21, x29, #0x60
  408488:	mov	w20, #0x60                  	// #96
  40848c:	ldrh	w8, [x23]
  408490:	sub	x22, x8, #0x4
  408494:	subs	w8, w20, w22
  408498:	b.le	4084b0 <get_rtnl_link_stats_rta@@Base+0x64>
  40849c:	add	x0, x21, x22
  4084a0:	sxtw	x2, w8
  4084a4:	mov	w1, wzr
  4084a8:	bl	404fe0 <memset@plt>
  4084ac:	b	4084b4 <get_rtnl_link_stats_rta@@Base+0x68>
  4084b0:	mov	x22, x20
  4084b4:	add	x1, x23, #0x4
  4084b8:	mov	x0, x21
  4084bc:	mov	x2, x22
  4084c0:	bl	404dd0 <memcpy@plt>
  4084c4:	cmp	x21, x19
  4084c8:	b.eq	4084e0 <get_rtnl_link_stats_rta@@Base+0x94>  // b.none
  4084cc:	add	x8, x21, #0x60
  4084d0:	ldr	w9, [x21], #4
  4084d4:	cmp	x21, x8
  4084d8:	str	x9, [x19], #8
  4084dc:	b.cc	4084d0 <get_rtnl_link_stats_rta@@Base+0x84>  // b.lo, b.ul, b.last
  4084e0:	mov	w0, w20
  4084e4:	add	sp, sp, #0x9b0
  4084e8:	ldp	x20, x19, [sp, #48]
  4084ec:	ldp	x22, x21, [sp, #32]
  4084f0:	ldp	x28, x23, [sp, #16]
  4084f4:	ldp	x29, x30, [sp], #64
  4084f8:	ret
  4084fc:	ldr	x2, [x1, #96]
  408500:	cbz	x2, 408578 <get_rtnl_link_stats_rta@@Base+0x12c>
  408504:	ldrh	w8, [x2], #4
  408508:	add	x0, sp, #0x8
  40850c:	mov	w1, #0x128                 	// #296
  408510:	sub	w3, w8, #0x4
  408514:	bl	40ca90 <parse_rtattr@@Base>
  408518:	ldr	x20, [sp, #32]
  40851c:	cbz	x20, 408570 <get_rtnl_link_stats_rta@@Base+0x124>
  408520:	mov	w2, #0xc0                  	// #192
  408524:	mov	x0, x19
  408528:	mov	w1, wzr
  40852c:	bl	404fe0 <memset@plt>
  408530:	ldur	x8, [x20, #12]
  408534:	str	x8, [x19]
  408538:	ldur	x8, [x20, #20]
  40853c:	str	x8, [x19, #16]
  408540:	ldur	x8, [x20, #44]
  408544:	str	x8, [x19, #8]
  408548:	ldur	x8, [x20, #52]
  40854c:	str	x8, [x19, #24]
  408550:	ldur	x8, [x20, #108]
  408554:	str	x8, [x19, #32]
  408558:	ldur	x8, [x20, #116]
  40855c:	str	x8, [x19, #40]
  408560:	ldur	x8, [x20, #188]
  408564:	str	x8, [x19, #64]
  408568:	ldur	x8, [x20, #252]
  40856c:	str	x8, [x19, #104]
  408570:	mov	w20, #0xc0                  	// #192
  408574:	b	4084e0 <get_rtnl_link_stats_rta@@Base+0x94>
  408578:	mov	w20, #0xffffffff            	// #-1
  40857c:	b	4084e0 <get_rtnl_link_stats_rta@@Base+0x94>

0000000000408580 <strlcpy@@Base>:
  408580:	stp	x29, x30, [sp, #-48]!
  408584:	stp	x20, x19, [sp, #32]
  408588:	mov	x19, x0
  40858c:	mov	x0, x1
  408590:	stp	x22, x21, [sp, #16]
  408594:	mov	x29, sp
  408598:	mov	x22, x2
  40859c:	mov	x21, x1
  4085a0:	bl	404e00 <strlen@plt>
  4085a4:	mov	x20, x0
  4085a8:	cbz	x22, 4085cc <strlcpy@@Base+0x4c>
  4085ac:	sub	x8, x22, #0x1
  4085b0:	cmp	x20, x8
  4085b4:	csel	x22, x20, x8, cc  // cc = lo, ul, last
  4085b8:	mov	x0, x19
  4085bc:	mov	x1, x21
  4085c0:	mov	x2, x22
  4085c4:	bl	404dd0 <memcpy@plt>
  4085c8:	strb	wzr, [x19, x22]
  4085cc:	mov	x0, x20
  4085d0:	ldp	x20, x19, [sp, #32]
  4085d4:	ldp	x22, x21, [sp, #16]
  4085d8:	ldp	x29, x30, [sp], #48
  4085dc:	ret

00000000004085e0 <strlcat@@Base>:
  4085e0:	stp	x29, x30, [sp, #-64]!
  4085e4:	str	x23, [sp, #16]
  4085e8:	stp	x22, x21, [sp, #32]
  4085ec:	stp	x20, x19, [sp, #48]
  4085f0:	mov	x29, sp
  4085f4:	mov	x21, x2
  4085f8:	mov	x20, x1
  4085fc:	mov	x22, x0
  408600:	bl	404e00 <strlen@plt>
  408604:	mov	x19, x0
  408608:	cmp	x0, x21
  40860c:	b.cs	40864c <strlcat@@Base+0x6c>  // b.hs, b.nlast
  408610:	mov	x0, x20
  408614:	sub	x23, x21, x19
  408618:	bl	404e00 <strlen@plt>
  40861c:	mov	x21, x0
  408620:	cbz	x23, 408658 <strlcat@@Base+0x78>
  408624:	sub	x8, x23, #0x1
  408628:	cmp	x21, x8
  40862c:	add	x22, x22, x19
  408630:	csel	x23, x21, x8, cc  // cc = lo, ul, last
  408634:	mov	x0, x22
  408638:	mov	x1, x20
  40863c:	mov	x2, x23
  408640:	bl	404dd0 <memcpy@plt>
  408644:	strb	wzr, [x22, x23]
  408648:	b	408658 <strlcat@@Base+0x78>
  40864c:	mov	x0, x20
  408650:	bl	404e00 <strlen@plt>
  408654:	mov	x21, x0
  408658:	add	x0, x21, x19
  40865c:	ldp	x20, x19, [sp, #48]
  408660:	ldp	x22, x21, [sp, #32]
  408664:	ldr	x23, [sp, #16]
  408668:	ldp	x29, x30, [sp], #64
  40866c:	ret

0000000000408670 <drop_cap@@Base>:
  408670:	stp	x29, x30, [sp, #-32]!
  408674:	str	x19, [sp, #16]
  408678:	mov	x29, sp
  40867c:	bl	404ec0 <getuid@plt>
  408680:	cbz	w0, 4086d4 <drop_cap@@Base+0x64>
  408684:	bl	404e70 <geteuid@plt>
  408688:	cbz	w0, 4086d4 <drop_cap@@Base+0x64>
  40868c:	bl	405120 <cap_get_proc@plt>
  408690:	cbz	x0, 4086e0 <drop_cap@@Base+0x70>
  408694:	add	x3, x29, #0x1c
  408698:	mov	w1, #0xc                   	// #12
  40869c:	mov	w2, #0x2                   	// #2
  4086a0:	mov	x19, x0
  4086a4:	bl	405020 <cap_get_flag@plt>
  4086a8:	cbnz	w0, 4086e0 <drop_cap@@Base+0x70>
  4086ac:	ldr	w8, [x29, #28]
  4086b0:	cbnz	w8, 4086cc <drop_cap@@Base+0x5c>
  4086b4:	mov	x0, x19
  4086b8:	bl	405210 <cap_clear@plt>
  4086bc:	cbnz	w0, 4086e0 <drop_cap@@Base+0x70>
  4086c0:	mov	x0, x19
  4086c4:	bl	405060 <cap_set_proc@plt>
  4086c8:	cbnz	w0, 4086e0 <drop_cap@@Base+0x70>
  4086cc:	mov	x0, x19
  4086d0:	bl	405250 <cap_free@plt>
  4086d4:	ldr	x19, [sp, #16]
  4086d8:	ldp	x29, x30, [sp], #32
  4086dc:	ret
  4086e0:	mov	w0, #0x1                   	// #1
  4086e4:	bl	404e20 <exit@plt>

00000000004086e8 <get_time@@Base>:
  4086e8:	sub	sp, sp, #0x40
  4086ec:	str	x21, [sp, #40]
  4086f0:	mov	x21, x1
  4086f4:	stp	x20, x19, [sp, #48]
  4086f8:	mov	x19, x0
  4086fc:	add	x1, sp, #0x8
  408700:	mov	x0, x21
  408704:	str	d8, [sp, #16]
  408708:	stp	x29, x30, [sp, #24]
  40870c:	add	x29, sp, #0x10
  408710:	bl	404e60 <strtod@plt>
  408714:	ldr	x20, [sp, #8]
  408718:	cmp	x20, x21
  40871c:	b.eq	4087e0 <get_time@@Base+0xf8>  // b.none
  408720:	ldrb	w8, [x20]
  408724:	mov	v8.16b, v0.16b
  408728:	cbz	w8, 4087f4 <get_time@@Base+0x10c>
  40872c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408730:	add	x1, x1, #0x452
  408734:	mov	x0, x20
  408738:	bl	405040 <strcasecmp@plt>
  40873c:	cbz	w0, 4087e8 <get_time@@Base+0x100>
  408740:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408744:	add	x1, x1, #0x469
  408748:	mov	x0, x20
  40874c:	bl	405040 <strcasecmp@plt>
  408750:	cbz	w0, 4087e8 <get_time@@Base+0x100>
  408754:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408758:	add	x1, x1, #0x46e
  40875c:	mov	x0, x20
  408760:	bl	405040 <strcasecmp@plt>
  408764:	cbz	w0, 4087e8 <get_time@@Base+0x100>
  408768:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40876c:	add	x1, x1, #0x7fd
  408770:	mov	x0, x20
  408774:	bl	405040 <strcasecmp@plt>
  408778:	cbz	w0, 408818 <get_time@@Base+0x130>
  40877c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408780:	add	x1, x1, #0x468
  408784:	mov	x0, x20
  408788:	bl	405040 <strcasecmp@plt>
  40878c:	cbz	w0, 408818 <get_time@@Base+0x130>
  408790:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408794:	add	x1, x1, #0x46d
  408798:	mov	x0, x20
  40879c:	bl	405040 <strcasecmp@plt>
  4087a0:	cbz	w0, 408818 <get_time@@Base+0x130>
  4087a4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4087a8:	add	x1, x1, #0x816
  4087ac:	mov	x0, x20
  4087b0:	bl	405040 <strcasecmp@plt>
  4087b4:	cbz	w0, 4087f4 <get_time@@Base+0x10c>
  4087b8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4087bc:	add	x1, x1, #0x7c3
  4087c0:	mov	x0, x20
  4087c4:	bl	405040 <strcasecmp@plt>
  4087c8:	cbz	w0, 4087f4 <get_time@@Base+0x10c>
  4087cc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4087d0:	add	x1, x1, #0x7c8
  4087d4:	mov	x0, x20
  4087d8:	bl	405040 <strcasecmp@plt>
  4087dc:	cbz	w0, 4087f4 <get_time@@Base+0x10c>
  4087e0:	mov	w0, #0xffffffff            	// #-1
  4087e4:	b	408800 <get_time@@Base+0x118>
  4087e8:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  4087ec:	ldr	d0, [x8, #896]
  4087f0:	fmul	d8, d8, d0
  4087f4:	mov	w0, wzr
  4087f8:	fcvtzu	w8, d8
  4087fc:	str	w8, [x19]
  408800:	ldp	x20, x19, [sp, #48]
  408804:	ldr	x21, [sp, #40]
  408808:	ldp	x29, x30, [sp, #24]
  40880c:	ldr	d8, [sp, #16]
  408810:	add	sp, sp, #0x40
  408814:	ret
  408818:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  40881c:	ldr	d0, [x8, #888]
  408820:	b	4087f0 <get_time@@Base+0x108>

0000000000408824 <sprint_time@@Base>:
  408824:	stp	x29, x30, [sp, #-32]!
  408828:	mov	w8, #0x4240                	// #16960
  40882c:	movk	w8, #0xf, lsl #16
  408830:	str	x19, [sp, #16]
  408834:	mov	x19, x1
  408838:	cmp	w0, w8
  40883c:	ucvtf	d0, w0
  408840:	mov	x29, sp
  408844:	b.cc	40885c <sprint_time@@Base+0x38>  // b.lo, b.ul, b.last
  408848:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  40884c:	ldr	d1, [x8, #896]
  408850:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  408854:	add	x2, x2, #0x7f3
  408858:	b	408878 <sprint_time@@Base+0x54>
  40885c:	mov	w3, w0
  408860:	cmp	w0, #0x3e8
  408864:	b.cc	40888c <sprint_time@@Base+0x68>  // b.lo, b.ul, b.last
  408868:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  40886c:	ldr	d1, [x8, #888]
  408870:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  408874:	add	x2, x2, #0x7f9
  408878:	fdiv	d0, d0, d1
  40887c:	mov	w1, #0x3f                  	// #63
  408880:	mov	x0, x19
  408884:	bl	404f10 <snprintf@plt>
  408888:	b	4088a0 <sprint_time@@Base+0x7c>
  40888c:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  408890:	add	x2, x2, #0x800
  408894:	mov	w1, #0x3f                  	// #63
  408898:	mov	x0, x19
  40889c:	bl	404f10 <snprintf@plt>
  4088a0:	mov	x0, x19
  4088a4:	ldr	x19, [sp, #16]
  4088a8:	ldp	x29, x30, [sp], #32
  4088ac:	ret

00000000004088b0 <get_time64@@Base>:
  4088b0:	sub	sp, sp, #0x40
  4088b4:	str	x21, [sp, #40]
  4088b8:	mov	x21, x1
  4088bc:	stp	x20, x19, [sp, #48]
  4088c0:	mov	x19, x0
  4088c4:	add	x1, sp, #0x8
  4088c8:	mov	x0, x21
  4088cc:	str	d8, [sp, #16]
  4088d0:	stp	x29, x30, [sp, #24]
  4088d4:	add	x29, sp, #0x10
  4088d8:	bl	404e60 <strtod@plt>
  4088dc:	ldr	x20, [sp, #8]
  4088e0:	cmp	x20, x21
  4088e4:	b.eq	4089e4 <get_time64@@Base+0x134>  // b.none
  4088e8:	ldrb	w8, [x20]
  4088ec:	mov	v8.16b, v0.16b
  4088f0:	cbz	w8, 4089f8 <get_time64@@Base+0x148>
  4088f4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4088f8:	add	x1, x1, #0x452
  4088fc:	mov	x0, x20
  408900:	bl	405040 <strcasecmp@plt>
  408904:	cbz	w0, 4089ec <get_time64@@Base+0x13c>
  408908:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40890c:	add	x1, x1, #0x469
  408910:	mov	x0, x20
  408914:	bl	405040 <strcasecmp@plt>
  408918:	cbz	w0, 4089ec <get_time64@@Base+0x13c>
  40891c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408920:	add	x1, x1, #0x46e
  408924:	mov	x0, x20
  408928:	bl	405040 <strcasecmp@plt>
  40892c:	cbz	w0, 4089ec <get_time64@@Base+0x13c>
  408930:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408934:	add	x1, x1, #0x7fd
  408938:	mov	x0, x20
  40893c:	bl	405040 <strcasecmp@plt>
  408940:	cbz	w0, 408a1c <get_time64@@Base+0x16c>
  408944:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408948:	add	x1, x1, #0x468
  40894c:	mov	x0, x20
  408950:	bl	405040 <strcasecmp@plt>
  408954:	cbz	w0, 408a1c <get_time64@@Base+0x16c>
  408958:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40895c:	add	x1, x1, #0x46d
  408960:	mov	x0, x20
  408964:	bl	405040 <strcasecmp@plt>
  408968:	cbz	w0, 408a1c <get_time64@@Base+0x16c>
  40896c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408970:	add	x1, x1, #0x816
  408974:	mov	x0, x20
  408978:	bl	405040 <strcasecmp@plt>
  40897c:	cbz	w0, 408a28 <get_time64@@Base+0x178>
  408980:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408984:	add	x1, x1, #0x7c3
  408988:	mov	x0, x20
  40898c:	bl	405040 <strcasecmp@plt>
  408990:	cbz	w0, 408a28 <get_time64@@Base+0x178>
  408994:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  408998:	add	x1, x1, #0x7c8
  40899c:	mov	x0, x20
  4089a0:	bl	405040 <strcasecmp@plt>
  4089a4:	cbz	w0, 408a28 <get_time64@@Base+0x178>
  4089a8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4089ac:	add	x1, x1, #0x81d
  4089b0:	mov	x0, x20
  4089b4:	bl	405040 <strcasecmp@plt>
  4089b8:	cbz	w0, 4089f8 <get_time64@@Base+0x148>
  4089bc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4089c0:	add	x1, x1, #0x7ce
  4089c4:	mov	x0, x20
  4089c8:	bl	405040 <strcasecmp@plt>
  4089cc:	cbz	w0, 4089f8 <get_time64@@Base+0x148>
  4089d0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4089d4:	add	x1, x1, #0x7d3
  4089d8:	mov	x0, x20
  4089dc:	bl	405040 <strcasecmp@plt>
  4089e0:	cbz	w0, 4089f8 <get_time64@@Base+0x148>
  4089e4:	mov	w0, #0xffffffff            	// #-1
  4089e8:	b	408a04 <get_time64@@Base+0x154>
  4089ec:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  4089f0:	ldr	d0, [x8, #904]
  4089f4:	fmul	d8, d8, d0
  4089f8:	mov	w0, wzr
  4089fc:	fcvtzs	x8, d8
  408a00:	str	x8, [x19]
  408a04:	ldp	x20, x19, [sp, #48]
  408a08:	ldr	x21, [sp, #40]
  408a0c:	ldp	x29, x30, [sp, #24]
  408a10:	ldr	d8, [sp, #16]
  408a14:	add	sp, sp, #0x40
  408a18:	ret
  408a1c:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  408a20:	ldr	d0, [x8, #896]
  408a24:	b	4089f4 <get_time64@@Base+0x144>
  408a28:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  408a2c:	ldr	d0, [x8, #888]
  408a30:	b	4089f4 <get_time64@@Base+0x144>

0000000000408a34 <sprint_time64@@Base>:
  408a34:	stp	x29, x30, [sp, #-32]!
  408a38:	mov	w8, #0xca00                	// #51712
  408a3c:	movk	w8, #0x3b9a, lsl #16
  408a40:	str	x19, [sp, #16]
  408a44:	mov	x19, x1
  408a48:	cmp	x0, x8
  408a4c:	scvtf	d0, x0
  408a50:	mov	x29, sp
  408a54:	b.lt	408a6c <sprint_time64@@Base+0x38>  // b.tstop
  408a58:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  408a5c:	ldr	d1, [x8, #904]
  408a60:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  408a64:	add	x2, x2, #0x805
  408a68:	b	408aac <sprint_time64@@Base+0x78>
  408a6c:	mov	w8, #0x4240                	// #16960
  408a70:	movk	w8, #0xf, lsl #16
  408a74:	mov	x3, x0
  408a78:	cmp	x0, x8
  408a7c:	b.lt	408a94 <sprint_time64@@Base+0x60>  // b.tstop
  408a80:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  408a84:	ldr	d1, [x8, #896]
  408a88:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  408a8c:	add	x2, x2, #0x80b
  408a90:	b	408aac <sprint_time64@@Base+0x78>
  408a94:	cmp	x3, #0x3e8
  408a98:	b.lt	408acc <sprint_time64@@Base+0x98>  // b.tstop
  408a9c:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  408aa0:	ldr	d1, [x8, #888]
  408aa4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  408aa8:	add	x2, x2, #0x812
  408aac:	fdiv	d0, d0, d1
  408ab0:	mov	w1, #0x3f                  	// #63
  408ab4:	mov	x0, x19
  408ab8:	bl	404f10 <snprintf@plt>
  408abc:	mov	x0, x19
  408ac0:	ldr	x19, [sp, #16]
  408ac4:	ldp	x29, x30, [sp], #32
  408ac8:	ret
  408acc:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  408ad0:	add	x2, x2, #0x819
  408ad4:	mov	w1, #0x3f                  	// #63
  408ad8:	mov	x0, x19
  408adc:	bl	404f10 <snprintf@plt>
  408ae0:	b	408abc <sprint_time64@@Base+0x88>

0000000000408ae4 <namehash@@Base>:
  408ae4:	ldrb	w8, [x0]
  408ae8:	cbz	w8, 408b08 <namehash@@Base+0x24>
  408aec:	add	x9, x0, #0x1
  408af0:	mov	w0, #0x1505                	// #5381
  408af4:	add	w10, w0, w0, lsl #5
  408af8:	add	w0, w10, w8, uxtb
  408afc:	ldrb	w8, [x9], #1
  408b00:	cbnz	w8, 408af4 <namehash@@Base+0x10>
  408b04:	ret
  408b08:	mov	w0, #0x1505                	// #5381
  408b0c:	ret

0000000000408b10 <ll_remember_index@@Base>:
  408b10:	stp	x29, x30, [sp, #-96]!
  408b14:	str	x28, [sp, #16]
  408b18:	stp	x26, x25, [sp, #32]
  408b1c:	stp	x24, x23, [sp, #48]
  408b20:	stp	x22, x21, [sp, #64]
  408b24:	stp	x20, x19, [sp, #80]
  408b28:	mov	x29, sp
  408b2c:	sub	sp, sp, #0x1b0
  408b30:	ldrh	w8, [x0, #4]
  408b34:	and	w9, w8, #0xfffe
  408b38:	cmp	w9, #0x10
  408b3c:	b.ne	408d80 <ll_remember_index@@Base+0x270>  // b.any
  408b40:	ldr	w9, [x0]
  408b44:	mov	x21, x0
  408b48:	subs	w3, w9, #0x20
  408b4c:	b.cs	408b58 <ll_remember_index@@Base+0x48>  // b.hs, b.nlast
  408b50:	mov	w8, #0xffffffff            	// #-1
  408b54:	b	408d84 <ll_remember_index@@Base+0x274>
  408b58:	ldr	w9, [x21, #20]
  408b5c:	adrp	x11, 41f000 <memcpy@GLIBC_2.17>
  408b60:	add	x11, x11, #0xd78
  408b64:	and	x10, x9, #0x3ff
  408b68:	ldr	x19, [x11, x10, lsl #3]
  408b6c:	cbz	x19, 408b84 <ll_remember_index@@Base+0x74>
  408b70:	ldr	w10, [x19, #36]
  408b74:	cmp	w10, w9
  408b78:	b.eq	408b84 <ll_remember_index@@Base+0x74>  // b.none
  408b7c:	ldr	x19, [x19]
  408b80:	cbnz	x19, 408b70 <ll_remember_index@@Base+0x60>
  408b84:	cmp	w8, #0x11
  408b88:	b.ne	408bc8 <ll_remember_index@@Base+0xb8>  // b.any
  408b8c:	cbz	x19, 408d80 <ll_remember_index@@Base+0x270>
  408b90:	ldr	x20, [x19, #48]
  408b94:	sub	x0, x20, #0x30
  408b98:	cmp	x19, x0
  408b9c:	b.eq	408c48 <ll_remember_index@@Base+0x138>  // b.none
  408ba0:	ldp	x8, x9, [x0, #16]
  408ba4:	ldr	x20, [x20]
  408ba8:	str	x8, [x9]
  408bac:	cbz	x8, 408bb4 <ll_remember_index@@Base+0xa4>
  408bb0:	str	x9, [x8, #8]
  408bb4:	ldp	x9, x8, [x0, #48]
  408bb8:	str	x8, [x9, #8]
  408bbc:	str	x9, [x8]
  408bc0:	bl	405160 <free@plt>
  408bc4:	b	408b94 <ll_remember_index@@Base+0x84>
  408bc8:	add	x2, x21, #0x20
  408bcc:	mov	x0, sp
  408bd0:	mov	w1, #0x35                  	// #53
  408bd4:	mov	w4, #0x8000                	// #32768
  408bd8:	add	x20, x21, #0x10
  408bdc:	bl	40caac <parse_rtattr_flags@@Base>
  408be0:	ldr	x22, [sp, #24]
  408be4:	cbz	x19, 408c74 <ll_remember_index@@Base+0x164>
  408be8:	cbz	x22, 408cbc <ll_remember_index@@Base+0x1ac>
  408bec:	ldr	w8, [x21, #24]
  408bf0:	add	x21, x22, #0x4
  408bf4:	add	x0, x19, #0x40
  408bf8:	mov	x1, x21
  408bfc:	str	w8, [x19, #32]
  408c00:	bl	4050f0 <strcmp@plt>
  408c04:	cbz	w0, 408cbc <ll_remember_index@@Base+0x1ac>
  408c08:	mov	x8, x19
  408c0c:	ldr	x9, [x8, #16]!
  408c10:	ldr	x10, [x8, #8]
  408c14:	str	x9, [x10]
  408c18:	cbz	x9, 408c20 <ll_remember_index@@Base+0x110>
  408c1c:	str	x10, [x9, #8]
  408c20:	ldrb	w9, [x21]
  408c24:	cbz	w9, 408c94 <ll_remember_index@@Base+0x184>
  408c28:	add	x10, x22, #0x5
  408c2c:	mov	w11, #0x1505                	// #5381
  408c30:	add	w11, w11, w11, lsl #5
  408c34:	add	w11, w11, w9, uxtb
  408c38:	ldrb	w9, [x10], #1
  408c3c:	cbnz	w9, 408c30 <ll_remember_index@@Base+0x120>
  408c40:	and	w9, w11, #0x3ff
  408c44:	b	408c98 <ll_remember_index@@Base+0x188>
  408c48:	ldp	x8, x9, [x19, #16]
  408c4c:	str	x8, [x9]
  408c50:	cbz	x8, 408c58 <ll_remember_index@@Base+0x148>
  408c54:	str	x9, [x8, #8]
  408c58:	ldp	x8, x9, [x19]
  408c5c:	str	x8, [x9]
  408c60:	cbz	x8, 408c68 <ll_remember_index@@Base+0x158>
  408c64:	str	x9, [x8, #8]
  408c68:	mov	x0, x19
  408c6c:	bl	405160 <free@plt>
  408c70:	b	408d80 <ll_remember_index@@Base+0x270>
  408c74:	cbz	x22, 408d80 <ll_remember_index@@Base+0x270>
  408c78:	add	x1, x22, #0x4
  408c7c:	mov	x0, x20
  408c80:	mov	x2, xzr
  408c84:	bl	4092c4 <ll_init_map@@Base+0x120>
  408c88:	cbz	x0, 408d80 <ll_remember_index@@Base+0x270>
  408c8c:	mov	x2, sp
  408c90:	b	408d78 <ll_remember_index@@Base+0x268>
  408c94:	mov	w9, #0x105                 	// #261
  408c98:	adrp	x10, 421000 <stdout@@GLIBC_2.17+0x1ce0>
  408c9c:	add	x10, x10, #0xd78
  408ca0:	add	x9, x10, x9, lsl #3
  408ca4:	ldr	x10, [x9]
  408ca8:	str	x10, [x8]
  408cac:	cbz	x10, 408cb4 <ll_remember_index@@Base+0x1a4>
  408cb0:	str	x8, [x10, #8]
  408cb4:	str	x8, [x9]
  408cb8:	str	x9, [x19, #24]
  408cbc:	ldr	x8, [sp, #416]
  408cc0:	cbz	x8, 408da8 <ll_remember_index@@Base+0x298>
  408cc4:	ldrh	w9, [x8]
  408cc8:	ldr	x22, [x19, #48]
  408ccc:	cmp	w9, #0x8
  408cd0:	sub	x21, x22, #0x30
  408cd4:	b.cc	408d68 <ll_remember_index@@Base+0x258>  // b.lo, b.ul, b.last
  408cd8:	add	x23, x8, #0x4
  408cdc:	sub	w24, w9, #0x4
  408ce0:	mov	x25, x21
  408ce4:	ldrh	w26, [x23]
  408ce8:	cmp	w26, #0x4
  408cec:	b.cc	408d68 <ll_remember_index@@Base+0x258>  // b.lo, b.ul, b.last
  408cf0:	cmp	w24, w26
  408cf4:	b.lt	408d68 <ll_remember_index@@Base+0x258>  // b.tstop
  408cf8:	ldrh	w8, [x23, #2]
  408cfc:	cmp	w8, #0x35
  408d00:	b.ne	408d20 <ll_remember_index@@Base+0x210>  // b.any
  408d04:	cbz	x25, 408d68 <ll_remember_index@@Base+0x258>
  408d08:	add	x0, x23, #0x4
  408d0c:	add	x1, x25, #0x40
  408d10:	bl	4050f0 <strcmp@plt>
  408d14:	cbnz	w0, 408d68 <ll_remember_index@@Base+0x258>
  408d18:	ldr	x8, [x25, #48]
  408d1c:	sub	x25, x8, #0x30
  408d20:	add	w8, w26, #0x3
  408d24:	and	x8, x8, #0x1fffc
  408d28:	sub	w24, w24, w8
  408d2c:	cmp	w24, #0x3
  408d30:	add	x23, x23, x8
  408d34:	b.gt	408ce4 <ll_remember_index@@Base+0x1d4>
  408d38:	b	408d68 <ll_remember_index@@Base+0x258>
  408d3c:	ldp	x8, x9, [x21, #16]
  408d40:	ldr	x22, [x22]
  408d44:	str	x8, [x9]
  408d48:	cbz	x8, 408d50 <ll_remember_index@@Base+0x240>
  408d4c:	str	x9, [x8, #8]
  408d50:	ldp	x9, x8, [x21, #48]
  408d54:	mov	x0, x21
  408d58:	str	x8, [x9, #8]
  408d5c:	str	x9, [x8]
  408d60:	bl	405160 <free@plt>
  408d64:	sub	x21, x22, #0x30
  408d68:	cmp	x19, x21
  408d6c:	b.ne	408d3c <ll_remember_index@@Base+0x22c>  // b.any
  408d70:	mov	x2, sp
  408d74:	mov	x0, x19
  408d78:	mov	x1, x20
  408d7c:	bl	409234 <ll_init_map@@Base+0x90>
  408d80:	mov	w8, wzr
  408d84:	mov	w0, w8
  408d88:	add	sp, sp, #0x1b0
  408d8c:	ldp	x20, x19, [sp, #80]
  408d90:	ldp	x22, x21, [sp, #64]
  408d94:	ldp	x24, x23, [sp, #48]
  408d98:	ldp	x26, x25, [sp, #32]
  408d9c:	ldr	x28, [sp, #16]
  408da0:	ldp	x29, x30, [sp], #96
  408da4:	ret
  408da8:	ldr	x20, [x19, #48]
  408dac:	sub	x0, x20, #0x30
  408db0:	cmp	x19, x0
  408db4:	b.eq	408d80 <ll_remember_index@@Base+0x270>  // b.none
  408db8:	ldp	x8, x9, [x0, #16]
  408dbc:	ldr	x20, [x20]
  408dc0:	str	x8, [x9]
  408dc4:	cbz	x8, 408dcc <ll_remember_index@@Base+0x2bc>
  408dc8:	str	x9, [x8, #8]
  408dcc:	ldp	x9, x8, [x0, #48]
  408dd0:	str	x8, [x9, #8]
  408dd4:	str	x9, [x8]
  408dd8:	bl	405160 <free@plt>
  408ddc:	sub	x0, x20, #0x30
  408de0:	cmp	x19, x0
  408de4:	mov	w8, wzr
  408de8:	b.ne	408db8 <ll_remember_index@@Base+0x2a8>  // b.any
  408dec:	b	408d84 <ll_remember_index@@Base+0x274>

0000000000408df0 <ll_idx_n2a@@Base>:
  408df0:	stp	x29, x30, [sp, #-32]!
  408df4:	str	x19, [sp, #16]
  408df8:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  408dfc:	add	x19, x19, #0xd50
  408e00:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  408e04:	mov	w3, w0
  408e08:	add	x2, x2, #0x820
  408e0c:	mov	w1, #0x10                  	// #16
  408e10:	mov	x0, x19
  408e14:	mov	x29, sp
  408e18:	bl	404f10 <snprintf@plt>
  408e1c:	mov	x0, x19
  408e20:	ldr	x19, [sp, #16]
  408e24:	ldp	x29, x30, [sp], #32
  408e28:	ret

0000000000408e2c <ll_index_to_name@@Base>:
  408e2c:	stp	x29, x30, [sp, #-48]!
  408e30:	str	x21, [sp, #16]
  408e34:	stp	x20, x19, [sp, #32]
  408e38:	mov	x29, sp
  408e3c:	cbz	w0, 408ed8 <ll_index_to_name@@Base+0xac>
  408e40:	adrp	x21, 41f000 <memcpy@GLIBC_2.17>
  408e44:	and	w20, w0, #0x3ff
  408e48:	add	x21, x21, #0xd78
  408e4c:	ldr	x8, [x21, w20, uxtw #3]
  408e50:	mov	w19, w0
  408e54:	cbz	x8, 408e6c <ll_index_to_name@@Base+0x40>
  408e58:	ldr	w9, [x8, #36]
  408e5c:	cmp	w9, w19
  408e60:	b.eq	408ee4 <ll_index_to_name@@Base+0xb8>  // b.none
  408e64:	ldr	x8, [x8]
  408e68:	cbnz	x8, 408e58 <ll_index_to_name@@Base+0x2c>
  408e6c:	mov	x0, xzr
  408e70:	mov	w1, w19
  408e74:	bl	408efc <ll_index_to_name@@Base+0xd0>
  408e78:	cmp	w0, w19
  408e7c:	b.ne	408e9c <ll_index_to_name@@Base+0x70>  // b.any
  408e80:	ldr	x8, [x21, x20, lsl #3]
  408e84:	cbz	x8, 408e9c <ll_index_to_name@@Base+0x70>
  408e88:	ldr	w9, [x8, #36]
  408e8c:	cmp	w9, w19
  408e90:	b.eq	408ee4 <ll_index_to_name@@Base+0xb8>  // b.none
  408e94:	ldr	x8, [x8]
  408e98:	cbnz	x8, 408e88 <ll_index_to_name@@Base+0x5c>
  408e9c:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  408ea0:	add	x20, x20, #0xd60
  408ea4:	mov	w0, w19
  408ea8:	mov	x1, x20
  408eac:	bl	404fd0 <if_indextoname@plt>
  408eb0:	cbnz	x0, 408ee8 <ll_index_to_name@@Base+0xbc>
  408eb4:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  408eb8:	add	x20, x20, #0xd60
  408ebc:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  408ec0:	add	x2, x2, #0x820
  408ec4:	mov	w1, #0x10                  	// #16
  408ec8:	mov	x0, x20
  408ecc:	mov	w3, w19
  408ed0:	bl	404f10 <snprintf@plt>
  408ed4:	b	408ee8 <ll_index_to_name@@Base+0xbc>
  408ed8:	adrp	x20, 40d000 <_IO_stdin_used@@Base+0x180>
  408edc:	add	x20, x20, #0x825
  408ee0:	b	408ee8 <ll_index_to_name@@Base+0xbc>
  408ee4:	add	x20, x8, #0x40
  408ee8:	mov	x0, x20
  408eec:	ldp	x20, x19, [sp, #32]
  408ef0:	ldr	x21, [sp, #16]
  408ef4:	ldp	x29, x30, [sp], #48
  408ef8:	ret
  408efc:	stp	x29, x30, [sp, #-48]!
  408f00:	str	x28, [sp, #16]
  408f04:	stp	x20, x19, [sp, #32]
  408f08:	mov	x29, sp
  408f0c:	sub	sp, sp, #0x460
  408f10:	add	x8, sp, #0x40
  408f14:	mov	w20, w1
  408f18:	mov	x19, x0
  408f1c:	add	x0, x8, #0x8
  408f20:	mov	w2, #0x418                 	// #1048
  408f24:	mov	w1, wzr
  408f28:	bl	404fe0 <memset@plt>
  408f2c:	mov	x8, #0x20                  	// #32
  408f30:	movk	x8, #0x12, lsl #32
  408f34:	movk	x8, #0x1, lsl #48
  408f38:	movi	v0.2d, #0x0
  408f3c:	mov	x0, sp
  408f40:	mov	w1, wzr
  408f44:	str	w20, [sp, #84]
  408f48:	str	xzr, [sp, #48]
  408f4c:	str	x8, [sp, #64]
  408f50:	stp	q0, q0, [sp, #16]
  408f54:	str	q0, [sp]
  408f58:	bl	40aec4 <rtnl_open@@Base>
  408f5c:	tbnz	w0, #31, 408fe8 <ll_index_to_name@@Base+0x1bc>
  408f60:	add	x0, sp, #0x40
  408f64:	mov	w1, #0x420                 	// #1056
  408f68:	mov	w2, #0x1d                  	// #29
  408f6c:	mov	w3, #0x9                   	// #9
  408f70:	bl	40c598 <addattr32@@Base>
  408f74:	cbz	x19, 408fb0 <ll_index_to_name@@Base+0x184>
  408f78:	mov	x0, x19
  408f7c:	bl	407240 <check_ifname@@Base>
  408f80:	cmp	w0, #0x0
  408f84:	mov	w8, #0x35                  	// #53
  408f88:	mov	w9, #0x3                   	// #3
  408f8c:	mov	x0, x19
  408f90:	csel	w20, w9, w8, eq  // eq = none
  408f94:	bl	404e00 <strlen@plt>
  408f98:	add	w4, w0, #0x1
  408f9c:	add	x0, sp, #0x40
  408fa0:	mov	w1, #0x420                 	// #1056
  408fa4:	mov	w2, w20
  408fa8:	mov	x3, x19
  408fac:	bl	40c428 <addattr_l@@Base>
  408fb0:	mov	x0, sp
  408fb4:	add	x1, sp, #0x40
  408fb8:	add	x2, x29, #0x18
  408fbc:	bl	40bf50 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  408fc0:	tbnz	w0, #31, 408ff0 <ll_index_to_name@@Base+0x1c4>
  408fc4:	ldr	x0, [x29, #24]
  408fc8:	bl	408b10 <ll_remember_index@@Base>
  408fcc:	ldr	x8, [x29, #24]
  408fd0:	mov	w19, w0
  408fd4:	cbnz	w0, 408fdc <ll_index_to_name@@Base+0x1b0>
  408fd8:	ldr	w19, [x8, #20]
  408fdc:	mov	x0, x8
  408fe0:	bl	405160 <free@plt>
  408fe4:	b	408ff4 <ll_index_to_name@@Base+0x1c8>
  408fe8:	mov	w19, wzr
  408fec:	b	408ffc <ll_index_to_name@@Base+0x1d0>
  408ff0:	mov	w19, wzr
  408ff4:	mov	x0, sp
  408ff8:	bl	40acf4 <rtnl_close@@Base>
  408ffc:	mov	w0, w19
  409000:	add	sp, sp, #0x460
  409004:	ldp	x20, x19, [sp, #32]
  409008:	ldr	x28, [sp, #16]
  40900c:	ldp	x29, x30, [sp], #48
  409010:	ret

0000000000409014 <ll_index_to_type@@Base>:
  409014:	cbz	w0, 409040 <ll_index_to_type@@Base+0x2c>
  409018:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  40901c:	and	w8, w0, #0x3ff
  409020:	add	x9, x9, #0xd78
  409024:	ldr	x8, [x9, w8, uxtw #3]
  409028:	cbz	x8, 409040 <ll_index_to_type@@Base+0x2c>
  40902c:	ldr	w9, [x8, #36]
  409030:	cmp	w9, w0
  409034:	b.eq	409048 <ll_index_to_type@@Base+0x34>  // b.none
  409038:	ldr	x8, [x8]
  40903c:	cbnz	x8, 40902c <ll_index_to_type@@Base+0x18>
  409040:	mov	w0, #0xffffffff            	// #-1
  409044:	ret
  409048:	ldrh	w0, [x8, #40]
  40904c:	ret

0000000000409050 <ll_index_to_flags@@Base>:
  409050:	cbz	w0, 409088 <ll_index_to_flags@@Base+0x38>
  409054:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  409058:	and	w8, w0, #0x3ff
  40905c:	add	x9, x9, #0xd78
  409060:	ldr	x8, [x9, w8, uxtw #3]
  409064:	cbz	x8, 40907c <ll_index_to_flags@@Base+0x2c>
  409068:	ldr	w9, [x8, #36]
  40906c:	cmp	w9, w0
  409070:	b.eq	409084 <ll_index_to_flags@@Base+0x34>  // b.none
  409074:	ldr	x8, [x8]
  409078:	cbnz	x8, 409068 <ll_index_to_flags@@Base+0x18>
  40907c:	mov	w0, #0xffffffff            	// #-1
  409080:	ret
  409084:	ldr	w0, [x8, #32]
  409088:	ret

000000000040908c <ll_name_to_index@@Base>:
  40908c:	sub	sp, sp, #0x30
  409090:	stp	x29, x30, [sp, #16]
  409094:	stp	x20, x19, [sp, #32]
  409098:	add	x29, sp, #0x10
  40909c:	cbz	x0, 40913c <ll_name_to_index@@Base+0xb0>
  4090a0:	ldrb	w8, [x0]
  4090a4:	mov	x19, x0
  4090a8:	cbz	w8, 4090cc <ll_name_to_index@@Base+0x40>
  4090ac:	add	x9, x19, #0x1
  4090b0:	mov	w10, #0x1505                	// #5381
  4090b4:	add	w10, w10, w10, lsl #5
  4090b8:	add	w10, w10, w8, uxtb
  4090bc:	ldrb	w8, [x9], #1
  4090c0:	cbnz	w8, 4090b4 <ll_name_to_index@@Base+0x28>
  4090c4:	and	w8, w10, #0x3ff
  4090c8:	b	4090d0 <ll_name_to_index@@Base+0x44>
  4090cc:	mov	w8, #0x105                 	// #261
  4090d0:	adrp	x9, 421000 <stdout@@GLIBC_2.17+0x1ce0>
  4090d4:	add	x9, x9, #0xd78
  4090d8:	ldr	x20, [x9, x8, lsl #3]
  4090dc:	cbz	x20, 4090f8 <ll_name_to_index@@Base+0x6c>
  4090e0:	add	x0, x20, #0x30
  4090e4:	mov	x1, x19
  4090e8:	bl	4050f0 <strcmp@plt>
  4090ec:	cbz	w0, 409138 <ll_name_to_index@@Base+0xac>
  4090f0:	ldr	x20, [x20]
  4090f4:	cbnz	x20, 4090e0 <ll_name_to_index@@Base+0x54>
  4090f8:	mov	x0, x19
  4090fc:	mov	w1, wzr
  409100:	bl	408efc <ll_index_to_name@@Base+0xd0>
  409104:	cbnz	w0, 40913c <ll_name_to_index@@Base+0xb0>
  409108:	mov	x0, x19
  40910c:	bl	405260 <if_nametoindex@plt>
  409110:	cbnz	w0, 40913c <ll_name_to_index@@Base+0xb0>
  409114:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  409118:	add	x1, x1, #0x820
  40911c:	sub	x2, x29, #0x4
  409120:	mov	x0, x19
  409124:	bl	405290 <__isoc99_sscanf@plt>
  409128:	ldur	w8, [x29, #-4]
  40912c:	cmp	w0, #0x1
  409130:	csel	w0, w8, wzr, eq  // eq = none
  409134:	b	40913c <ll_name_to_index@@Base+0xb0>
  409138:	ldr	w0, [x20, #20]
  40913c:	ldp	x20, x19, [sp, #32]
  409140:	ldp	x29, x30, [sp, #16]
  409144:	add	sp, sp, #0x30
  409148:	ret

000000000040914c <ll_drop_by_index@@Base>:
  40914c:	adrp	x10, 41f000 <memcpy@GLIBC_2.17>
  409150:	and	w9, w0, #0x3ff
  409154:	add	x10, x10, #0xd78
  409158:	mov	w8, w0
  40915c:	ldr	x0, [x10, w9, uxtw #3]
  409160:	cbz	x0, 40917c <ll_drop_by_index@@Base+0x30>
  409164:	ldr	w10, [x0, #36]
  409168:	ldr	x9, [x0]
  40916c:	cmp	w10, w8
  409170:	b.eq	409180 <ll_drop_by_index@@Base+0x34>  // b.none
  409174:	mov	x0, x9
  409178:	cbnz	x9, 409164 <ll_drop_by_index@@Base+0x18>
  40917c:	ret
  409180:	ldr	x8, [x0, #8]
  409184:	str	x9, [x8]
  409188:	cbz	x9, 409190 <ll_drop_by_index@@Base+0x44>
  40918c:	str	x8, [x9, #8]
  409190:	ldp	x8, x9, [x0, #16]
  409194:	str	x8, [x9]
  409198:	cbz	x8, 4091a0 <ll_drop_by_index@@Base+0x54>
  40919c:	str	x9, [x8, #8]
  4091a0:	b	405160 <free@plt>

00000000004091a4 <ll_init_map@@Base>:
  4091a4:	stp	x29, x30, [sp, #-32]!
  4091a8:	stp	x20, x19, [sp, #16]
  4091ac:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  4091b0:	ldrb	w8, [x20, #3440]
  4091b4:	mov	x29, sp
  4091b8:	tbnz	w8, #0, 4091f0 <ll_init_map@@Base+0x4c>
  4091bc:	mov	w1, wzr
  4091c0:	mov	x19, x0
  4091c4:	bl	40b364 <rtnl_linkdump_req@@Base>
  4091c8:	tbnz	w0, #31, 4091fc <ll_init_map@@Base+0x58>
  4091cc:	adrp	x1, 41e000 <_IO_stdin_used@@Base+0x11180>
  4091d0:	ldr	x1, [x1, #4008]
  4091d4:	mov	x0, x19
  4091d8:	mov	x2, xzr
  4091dc:	mov	w3, wzr
  4091e0:	bl	40b824 <rtnl_dump_filter_nc@@Base>
  4091e4:	tbnz	w0, #31, 40920c <ll_init_map@@Base+0x68>
  4091e8:	mov	w8, #0x1                   	// #1
  4091ec:	strb	w8, [x20, #3440]
  4091f0:	ldp	x20, x19, [sp, #16]
  4091f4:	ldp	x29, x30, [sp], #32
  4091f8:	ret
  4091fc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  409200:	add	x0, x0, #0x827
  409204:	bl	404e30 <perror@plt>
  409208:	b	40922c <ll_init_map@@Base+0x88>
  40920c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409210:	ldr	x8, [x8, #3992]
  409214:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  409218:	add	x0, x0, #0x2aa
  40921c:	mov	w1, #0x10                  	// #16
  409220:	ldr	x3, [x8]
  409224:	mov	w2, #0x1                   	// #1
  409228:	bl	4051c0 <fwrite@plt>
  40922c:	mov	w0, #0x1                   	// #1
  409230:	bl	404e20 <exit@plt>
  409234:	stp	x29, x30, [sp, #-48]!
  409238:	stp	x22, x21, [sp, #16]
  40923c:	stp	x20, x19, [sp, #32]
  409240:	ldr	x8, [x2, #416]
  409244:	mov	x29, sp
  409248:	cbz	x8, 4092b4 <ll_init_map@@Base+0x110>
  40924c:	ldrh	w9, [x8]
  409250:	cmp	w9, #0x8
  409254:	b.cc	4092b4 <ll_init_map@@Base+0x110>  // b.lo, b.ul, b.last
  409258:	mov	x19, x1
  40925c:	mov	x20, x0
  409260:	add	x21, x8, #0x4
  409264:	sub	w22, w9, #0x4
  409268:	ldrh	w8, [x21]
  40926c:	cmp	w8, #0x4
  409270:	b.cc	4092b4 <ll_init_map@@Base+0x110>  // b.lo, b.ul, b.last
  409274:	cmp	w22, w8
  409278:	b.lt	4092b4 <ll_init_map@@Base+0x110>  // b.tstop
  40927c:	ldrh	w9, [x21, #2]
  409280:	cmp	w9, #0x35
  409284:	b.ne	40929c <ll_init_map@@Base+0xf8>  // b.any
  409288:	add	x1, x21, #0x4
  40928c:	mov	x0, x19
  409290:	mov	x2, x20
  409294:	bl	4092c4 <ll_init_map@@Base+0x120>
  409298:	ldrh	w8, [x21]
  40929c:	add	w8, w8, #0x3
  4092a0:	and	w8, w8, #0x1fffc
  4092a4:	sub	w22, w22, w8
  4092a8:	cmp	w22, #0x3
  4092ac:	add	x21, x21, x8
  4092b0:	b.gt	409268 <ll_init_map@@Base+0xc4>
  4092b4:	ldp	x20, x19, [sp, #32]
  4092b8:	ldp	x22, x21, [sp, #16]
  4092bc:	ldp	x29, x30, [sp], #48
  4092c0:	ret
  4092c4:	stp	x29, x30, [sp, #-48]!
  4092c8:	stp	x22, x21, [sp, #16]
  4092cc:	mov	x22, x0
  4092d0:	mov	x0, x1
  4092d4:	stp	x20, x19, [sp, #32]
  4092d8:	mov	x29, sp
  4092dc:	mov	x21, x2
  4092e0:	mov	x20, x1
  4092e4:	bl	404e00 <strlen@plt>
  4092e8:	add	x0, x0, #0x41
  4092ec:	bl	404f70 <malloc@plt>
  4092f0:	mov	x19, x0
  4092f4:	cbz	x0, 4093c4 <ll_init_map@@Base+0x220>
  4092f8:	ldr	w8, [x22, #4]
  4092fc:	add	x0, x19, #0x40
  409300:	mov	x1, x20
  409304:	str	w8, [x19, #36]
  409308:	bl	4051f0 <strcpy@plt>
  40930c:	ldrh	w8, [x22, #2]
  409310:	strh	w8, [x19, #40]
  409314:	ldr	w8, [x22, #8]
  409318:	str	w8, [x19, #32]
  40931c:	cbz	x21, 40933c <ll_init_map@@Base+0x198>
  409320:	ldr	x9, [x21, #56]
  409324:	add	x8, x19, #0x30
  409328:	add	x10, x21, #0x30
  40932c:	str	x8, [x21, #56]
  409330:	stp	x10, x9, [x19, #48]
  409334:	str	x8, [x9]
  409338:	b	409370 <ll_init_map@@Base+0x1cc>
  40933c:	ldr	w8, [x22, #4]
  409340:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  409344:	add	x9, x9, #0xd78
  409348:	and	x8, x8, #0x3ff
  40934c:	add	x8, x9, x8, lsl #3
  409350:	ldr	x9, [x8]
  409354:	str	x9, [x19]
  409358:	cbz	x9, 409360 <ll_init_map@@Base+0x1bc>
  40935c:	str	x19, [x9, #8]
  409360:	str	x19, [x8]
  409364:	str	x8, [x19, #8]
  409368:	add	x8, x19, #0x30
  40936c:	stp	x8, x8, [x19, #48]
  409370:	ldrb	w8, [x20]
  409374:	cbz	w8, 409398 <ll_init_map@@Base+0x1f4>
  409378:	add	x9, x20, #0x1
  40937c:	mov	w10, #0x1505                	// #5381
  409380:	add	w10, w10, w10, lsl #5
  409384:	add	w10, w10, w8, uxtb
  409388:	ldrb	w8, [x9], #1
  40938c:	cbnz	w8, 409380 <ll_init_map@@Base+0x1dc>
  409390:	and	w8, w10, #0x3ff
  409394:	b	40939c <ll_init_map@@Base+0x1f8>
  409398:	mov	w8, #0x105                 	// #261
  40939c:	adrp	x9, 421000 <stdout@@GLIBC_2.17+0x1ce0>
  4093a0:	add	x9, x9, #0xd78
  4093a4:	add	x8, x9, x8, lsl #3
  4093a8:	ldr	x10, [x8]
  4093ac:	mov	x9, x19
  4093b0:	str	x10, [x9, #16]!
  4093b4:	cbz	x10, 4093bc <ll_init_map@@Base+0x218>
  4093b8:	str	x9, [x10, #8]
  4093bc:	str	x9, [x8]
  4093c0:	str	x8, [x19, #24]
  4093c4:	mov	x0, x19
  4093c8:	ldp	x20, x19, [sp, #32]
  4093cc:	ldp	x22, x21, [sp, #16]
  4093d0:	ldp	x29, x30, [sp], #48
  4093d4:	ret

00000000004093d8 <ll_addr_n2a@@Base>:
  4093d8:	stp	x29, x30, [sp, #-80]!
  4093dc:	stp	x22, x21, [sp, #48]
  4093e0:	stp	x20, x19, [sp, #64]
  4093e4:	mov	w19, w4
  4093e8:	mov	x20, x3
  4093ec:	mov	w22, w1
  4093f0:	cmp	w1, #0x10
  4093f4:	mov	x21, x0
  4093f8:	stp	x26, x25, [sp, #16]
  4093fc:	stp	x24, x23, [sp, #32]
  409400:	mov	x29, sp
  409404:	b.eq	409438 <ll_addr_n2a@@Base+0x60>  // b.none
  409408:	cmp	w22, #0x4
  40940c:	b.ne	409470 <ll_addr_n2a@@Base+0x98>  // b.any
  409410:	sub	w8, w2, #0x300
  409414:	cmp	w8, #0xa
  409418:	b.hi	409470 <ll_addr_n2a@@Base+0x98>  // b.pmore
  40941c:	mov	w9, #0x1                   	// #1
  409420:	lsl	w8, w9, w8
  409424:	mov	w9, #0x501                 	// #1281
  409428:	tst	w8, w9
  40942c:	b.eq	409470 <ll_addr_n2a@@Base+0x98>  // b.none
  409430:	mov	w0, #0x2                   	// #2
  409434:	b	40944c <ll_addr_n2a@@Base+0x74>
  409438:	cmp	w2, #0x337
  40943c:	b.eq	409448 <ll_addr_n2a@@Base+0x70>  // b.none
  409440:	cmp	w2, #0x301
  409444:	b.ne	409470 <ll_addr_n2a@@Base+0x98>  // b.any
  409448:	mov	w0, #0xa                   	// #10
  40944c:	mov	x1, x21
  409450:	mov	x2, x20
  409454:	mov	w3, w19
  409458:	ldp	x20, x19, [sp, #64]
  40945c:	ldp	x22, x21, [sp, #48]
  409460:	ldp	x24, x23, [sp, #32]
  409464:	ldp	x26, x25, [sp, #16]
  409468:	ldp	x29, x30, [sp], #80
  40946c:	b	405350 <inet_ntop@plt>
  409470:	ldrb	w3, [x21]
  409474:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  409478:	sxtw	x1, w19
  40947c:	add	x2, x2, #0x841
  409480:	mov	x0, x20
  409484:	bl	404f10 <snprintf@plt>
  409488:	cmp	w22, #0x2
  40948c:	b.lt	4094e0 <ll_addr_n2a@@Base+0x108>  // b.tstop
  409490:	cmp	w19, #0x3
  409494:	b.lt	4094e0 <ll_addr_n2a@@Base+0x108>  // b.tstop
  409498:	mov	w23, w22
  40949c:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x180>
  4094a0:	sub	w24, w19, #0x2
  4094a4:	mov	w25, #0x2                   	// #2
  4094a8:	mov	w26, #0x1                   	// #1
  4094ac:	add	x22, x22, #0x840
  4094b0:	ldrb	w3, [x21, x26]
  4094b4:	add	x0, x20, x25
  4094b8:	sxtw	x1, w24
  4094bc:	mov	x2, x22
  4094c0:	bl	404f10 <snprintf@plt>
  4094c4:	add	x26, x26, #0x1
  4094c8:	cmp	x26, x23
  4094cc:	b.cs	4094e0 <ll_addr_n2a@@Base+0x108>  // b.hs, b.nlast
  4094d0:	add	x25, x25, #0x3
  4094d4:	cmp	w25, w19
  4094d8:	sub	w24, w24, #0x3
  4094dc:	b.lt	4094b0 <ll_addr_n2a@@Base+0xd8>  // b.tstop
  4094e0:	mov	x0, x20
  4094e4:	ldp	x20, x19, [sp, #64]
  4094e8:	ldp	x22, x21, [sp, #48]
  4094ec:	ldp	x24, x23, [sp, #32]
  4094f0:	ldp	x26, x25, [sp, #16]
  4094f4:	ldp	x29, x30, [sp], #80
  4094f8:	ret

00000000004094fc <ll_addr_a2n@@Base>:
  4094fc:	sub	sp, sp, #0x160
  409500:	stp	x22, x21, [sp, #320]
  409504:	stp	x20, x19, [sp, #336]
  409508:	mov	w21, w1
  40950c:	mov	x20, x0
  409510:	mov	w1, #0x2e                  	// #46
  409514:	mov	x0, x2
  409518:	stp	x29, x30, [sp, #272]
  40951c:	str	x28, [sp, #288]
  409520:	stp	x24, x23, [sp, #304]
  409524:	add	x29, sp, #0x110
  409528:	mov	x19, x2
  40952c:	bl	4051a0 <strchr@plt>
  409530:	cbz	x0, 409560 <ll_addr_a2n@@Base+0x64>
  409534:	add	x0, sp, #0x8
  409538:	mov	w2, #0x2                   	// #2
  40953c:	mov	x1, x19
  409540:	bl	406998 <get_addr_1@@Base>
  409544:	cbnz	w0, 4095d4 <ll_addr_a2n@@Base+0xd8>
  409548:	cmp	w21, #0x4
  40954c:	b.lt	4095f0 <ll_addr_a2n@@Base+0xf4>  // b.tstop
  409550:	ldr	w8, [sp, #16]
  409554:	mov	w0, #0x4                   	// #4
  409558:	str	w8, [x20]
  40955c:	b	409600 <ll_addr_a2n@@Base+0x104>
  409560:	cmp	w21, #0x1
  409564:	b.lt	4095f8 <ll_addr_a2n@@Base+0xfc>  // b.tstop
  409568:	mov	w24, w21
  40956c:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x180>
  409570:	mov	x23, xzr
  409574:	add	x21, x21, #0x85f
  409578:	mov	w1, #0x3a                  	// #58
  40957c:	mov	x0, x19
  409580:	bl	4051a0 <strchr@plt>
  409584:	mov	x22, x0
  409588:	cbz	x0, 409590 <ll_addr_a2n@@Base+0x94>
  40958c:	strb	wzr, [x22], #1
  409590:	add	x2, sp, #0x8
  409594:	mov	x0, x19
  409598:	mov	x1, x21
  40959c:	bl	405290 <__isoc99_sscanf@plt>
  4095a0:	cmp	w0, #0x1
  4095a4:	b.ne	4095d4 <ll_addr_a2n@@Base+0xd8>  // b.any
  4095a8:	ldr	w8, [sp, #8]
  4095ac:	cmp	w8, #0xff
  4095b0:	b.hi	4095d4 <ll_addr_a2n@@Base+0xd8>  // b.pmore
  4095b4:	strb	w8, [x20, x23]
  4095b8:	cbz	x22, 4095fc <ll_addr_a2n@@Base+0x100>
  4095bc:	add	x23, x23, #0x1
  4095c0:	cmp	x24, x23
  4095c4:	mov	x19, x22
  4095c8:	b.ne	409578 <ll_addr_a2n@@Base+0x7c>  // b.any
  4095cc:	mov	w23, w24
  4095d0:	b	4095fc <ll_addr_a2n@@Base+0x100>
  4095d4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4095d8:	ldr	x8, [x8, #3992]
  4095dc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  4095e0:	add	x1, x1, #0x846
  4095e4:	mov	x2, x19
  4095e8:	ldr	x0, [x8]
  4095ec:	bl	405330 <fprintf@plt>
  4095f0:	mov	w0, #0xffffffff            	// #-1
  4095f4:	b	409600 <ll_addr_a2n@@Base+0x104>
  4095f8:	mov	w23, wzr
  4095fc:	add	w0, w23, #0x1
  409600:	ldp	x20, x19, [sp, #336]
  409604:	ldp	x22, x21, [sp, #320]
  409608:	ldp	x24, x23, [sp, #304]
  40960c:	ldr	x28, [sp, #288]
  409610:	ldp	x29, x30, [sp, #272]
  409614:	add	sp, sp, #0x160
  409618:	ret

000000000040961c <new_json_obj@@Base>:
  40961c:	mov	w1, #0x1                   	// #1
  409620:	b	409624 <new_json_obj@@Base+0x8>
  409624:	stp	x29, x30, [sp, #-32]!
  409628:	stp	x20, x19, [sp, #16]
  40962c:	mov	x29, sp
  409630:	cbz	w0, 409680 <new_json_obj@@Base+0x64>
  409634:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409638:	ldr	x8, [x8, #4016]
  40963c:	mov	w19, w1
  409640:	ldr	x0, [x8]
  409644:	bl	40a3b0 <jsonw_new@@Base>
  409648:	adrp	x20, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  40964c:	str	x0, [x20, #3448]
  409650:	cbz	x0, 40968c <new_json_obj@@Base+0x70>
  409654:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409658:	ldr	x8, [x8, #4056]
  40965c:	ldr	w8, [x8]
  409660:	cbz	w8, 40966c <new_json_obj@@Base+0x50>
  409664:	mov	w1, #0x1                   	// #1
  409668:	bl	40a450 <jsonw_pretty@@Base>
  40966c:	tbz	w19, #0, 409680 <new_json_obj@@Base+0x64>
  409670:	ldr	x0, [x20, #3448]
  409674:	ldp	x20, x19, [sp, #16]
  409678:	ldp	x29, x30, [sp], #32
  40967c:	b	40a7f8 <jsonw_start_array@@Base>
  409680:	ldp	x20, x19, [sp, #16]
  409684:	ldp	x29, x30, [sp], #32
  409688:	ret
  40968c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  409690:	add	x0, x0, #0x881
  409694:	bl	404e30 <perror@plt>
  409698:	mov	w0, #0x1                   	// #1
  40969c:	bl	404e20 <exit@plt>

00000000004096a0 <delete_json_obj@@Base>:
  4096a0:	mov	w0, #0x1                   	// #1
  4096a4:	b	4096a8 <delete_json_obj@@Base+0x8>
  4096a8:	stp	x29, x30, [sp, #-16]!
  4096ac:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4096b0:	ldr	x8, [x8, #3448]
  4096b4:	mov	x29, sp
  4096b8:	cbz	x8, 4096d8 <delete_json_obj@@Base+0x38>
  4096bc:	tbz	w0, #0, 4096c8 <delete_json_obj@@Base+0x28>
  4096c0:	mov	x0, x8
  4096c4:	bl	40a864 <jsonw_end_array@@Base>
  4096c8:	adrp	x0, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4096cc:	add	x0, x0, #0xd78
  4096d0:	ldp	x29, x30, [sp], #16
  4096d4:	b	40a3e4 <jsonw_destroy@@Base>
  4096d8:	ldp	x29, x30, [sp], #16
  4096dc:	ret

00000000004096e0 <new_json_obj_plain@@Base>:
  4096e0:	mov	w1, wzr
  4096e4:	b	409624 <new_json_obj@@Base+0x8>

00000000004096e8 <delete_json_obj_plain@@Base>:
  4096e8:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4096ec:	ldr	x8, [x8, #3448]
  4096f0:	cbz	x8, 409700 <delete_json_obj_plain@@Base+0x18>
  4096f4:	adrp	x0, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4096f8:	add	x0, x0, #0xd78
  4096fc:	b	40a3e4 <jsonw_destroy@@Base>
  409700:	ret

0000000000409704 <is_json_context@@Base>:
  409704:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409708:	ldr	x8, [x8, #3448]
  40970c:	cmp	x8, #0x0
  409710:	cset	w0, ne  // ne = any
  409714:	ret

0000000000409718 <get_json_writer@@Base>:
  409718:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  40971c:	ldr	x0, [x8, #3448]
  409720:	ret

0000000000409724 <open_json_object@@Base>:
  409724:	stp	x29, x30, [sp, #-32]!
  409728:	str	x19, [sp, #16]
  40972c:	adrp	x19, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409730:	ldr	x8, [x19, #3448]
  409734:	mov	x29, sp
  409738:	cbz	x8, 409760 <open_json_object@@Base+0x3c>
  40973c:	mov	x1, x0
  409740:	cbz	x0, 409750 <open_json_object@@Base+0x2c>
  409744:	mov	x0, x8
  409748:	bl	40a45c <jsonw_name@@Base>
  40974c:	ldr	x8, [x19, #3448]
  409750:	ldr	x19, [sp, #16]
  409754:	mov	x0, x8
  409758:	ldp	x29, x30, [sp], #32
  40975c:	b	40a72c <jsonw_start_object@@Base>
  409760:	ldr	x19, [sp, #16]
  409764:	ldp	x29, x30, [sp], #32
  409768:	ret

000000000040976c <close_json_object@@Base>:
  40976c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409770:	ldr	x0, [x8, #3448]
  409774:	cbz	x0, 40977c <close_json_object@@Base+0x10>
  409778:	b	40a77c <jsonw_end_object@@Base>
  40977c:	ret

0000000000409780 <open_json_array@@Base>:
  409780:	stp	x29, x30, [sp, #-32]!
  409784:	str	x19, [sp, #16]
  409788:	adrp	x19, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  40978c:	ldr	x8, [x19, #3448]
  409790:	tst	w0, #0x6
  409794:	mov	x29, sp
  409798:	b.eq	4097c0 <open_json_array@@Base+0x40>  // b.none
  40979c:	cbz	x8, 4097c4 <open_json_array@@Base+0x44>
  4097a0:	cbz	x1, 4097b0 <open_json_array@@Base+0x30>
  4097a4:	mov	x0, x8
  4097a8:	bl	40a45c <jsonw_name@@Base>
  4097ac:	ldr	x8, [x19, #3448]
  4097b0:	ldr	x19, [sp, #16]
  4097b4:	mov	x0, x8
  4097b8:	ldp	x29, x30, [sp], #32
  4097bc:	b	40a7f8 <jsonw_start_array@@Base>
  4097c0:	cbnz	x8, 4097e4 <open_json_array@@Base+0x64>
  4097c4:	mov	w8, #0x5                   	// #5
  4097c8:	tst	w0, w8
  4097cc:	b.eq	4097e4 <open_json_array@@Base+0x64>  // b.none
  4097d0:	ldr	x19, [sp, #16]
  4097d4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  4097d8:	add	x0, x0, #0x451
  4097dc:	ldp	x29, x30, [sp], #32
  4097e0:	b	4052d0 <printf@plt>
  4097e4:	ldr	x19, [sp, #16]
  4097e8:	ldp	x29, x30, [sp], #32
  4097ec:	ret

00000000004097f0 <close_json_array@@Base>:
  4097f0:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4097f4:	ldr	x8, [x8, #3448]
  4097f8:	tst	w0, #0x6
  4097fc:	b.eq	40980c <close_json_array@@Base+0x1c>  // b.none
  409800:	cbz	x8, 409810 <close_json_array@@Base+0x20>
  409804:	mov	x0, x8
  409808:	b	40a864 <jsonw_end_array@@Base>
  40980c:	cbnz	x8, 409828 <close_json_array@@Base+0x38>
  409810:	mov	w8, #0x5                   	// #5
  409814:	tst	w0, w8
  409818:	b.eq	409828 <close_json_array@@Base+0x38>  // b.none
  40981c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  409820:	add	x0, x0, #0x451
  409824:	b	4052d0 <printf@plt>
  409828:	ret

000000000040982c <print_color_int@@Base>:
  40982c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409830:	ldr	x8, [x8, #3448]
  409834:	tst	w0, #0x6
  409838:	b.eq	409854 <print_color_int@@Base+0x28>  // b.none
  40983c:	cbz	x8, 409858 <print_color_int@@Base+0x2c>
  409840:	mov	x0, x8
  409844:	cbz	x2, 409880 <print_color_int@@Base+0x54>
  409848:	mov	x1, x2
  40984c:	mov	w2, w4
  409850:	b	40abd0 <jsonw_int_field@@Base>
  409854:	cbnz	x8, 40987c <print_color_int@@Base+0x50>
  409858:	mov	w8, #0x5                   	// #5
  40985c:	tst	w0, w8
  409860:	b.eq	40987c <print_color_int@@Base+0x50>  // b.none
  409864:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409868:	ldr	x8, [x8, #4016]
  40986c:	mov	x2, x3
  409870:	mov	w3, w4
  409874:	ldr	x0, [x8]
  409878:	b	40a068 <color_fprintf@@Base>
  40987c:	ret
  409880:	mov	w1, w4
  409884:	b	40a994 <jsonw_int@@Base>

0000000000409888 <print_color_s64@@Base>:
  409888:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  40988c:	ldr	x8, [x8, #3448]
  409890:	tst	w0, #0x6
  409894:	b.eq	4098b0 <print_color_s64@@Base+0x28>  // b.none
  409898:	cbz	x8, 4098b4 <print_color_s64@@Base+0x2c>
  40989c:	mov	x0, x8
  4098a0:	cbz	x2, 4098dc <print_color_s64@@Base+0x54>
  4098a4:	mov	x1, x2
  4098a8:	mov	x2, x4
  4098ac:	b	40ac04 <jsonw_s64_field@@Base>
  4098b0:	cbnz	x8, 4098d8 <print_color_s64@@Base+0x50>
  4098b4:	mov	w8, #0x5                   	// #5
  4098b8:	tst	w0, w8
  4098bc:	b.eq	4098d8 <print_color_s64@@Base+0x50>  // b.none
  4098c0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4098c4:	ldr	x8, [x8, #4016]
  4098c8:	mov	x2, x3
  4098cc:	mov	x3, x4
  4098d0:	ldr	x0, [x8]
  4098d4:	b	40a068 <color_fprintf@@Base>
  4098d8:	ret
  4098dc:	mov	x1, x4
  4098e0:	b	40a9a4 <jsonw_s64@@Base>

00000000004098e4 <print_color_hhu@@Base>:
  4098e4:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4098e8:	ldr	x8, [x8, #3448]
  4098ec:	tst	w0, #0x6
  4098f0:	b.eq	40990c <print_color_hhu@@Base+0x28>  // b.none
  4098f4:	cbz	x8, 409910 <print_color_hhu@@Base+0x2c>
  4098f8:	mov	x0, x8
  4098fc:	cbz	x2, 40993c <print_color_hhu@@Base+0x58>
  409900:	mov	x1, x2
  409904:	mov	w2, w4
  409908:	b	40ab00 <jsonw_hhu_field@@Base>
  40990c:	cbnz	x8, 409938 <print_color_hhu@@Base+0x54>
  409910:	mov	w8, #0x5                   	// #5
  409914:	tst	w0, w8
  409918:	b.eq	409938 <print_color_hhu@@Base+0x54>  // b.none
  40991c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409920:	ldr	x8, [x8, #4016]
  409924:	mov	x2, x3
  409928:	ldr	x0, [x8]
  40992c:	and	w8, w4, #0xff
  409930:	mov	w3, w8
  409934:	b	40a068 <color_fprintf@@Base>
  409938:	ret
  40993c:	mov	w1, w4
  409940:	b	40a924 <jsonw_hhu@@Base>

0000000000409944 <print_color_hu@@Base>:
  409944:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409948:	ldr	x8, [x8, #3448]
  40994c:	tst	w0, #0x6
  409950:	b.eq	40996c <print_color_hu@@Base+0x28>  // b.none
  409954:	cbz	x8, 409970 <print_color_hu@@Base+0x2c>
  409958:	mov	x0, x8
  40995c:	cbz	x2, 40999c <print_color_hu@@Base+0x58>
  409960:	mov	x1, x2
  409964:	mov	w2, w4
  409968:	b	40ab34 <jsonw_hu_field@@Base>
  40996c:	cbnz	x8, 409998 <print_color_hu@@Base+0x54>
  409970:	mov	w8, #0x5                   	// #5
  409974:	tst	w0, w8
  409978:	b.eq	409998 <print_color_hu@@Base+0x54>  // b.none
  40997c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409980:	ldr	x8, [x8, #4016]
  409984:	mov	x2, x3
  409988:	ldr	x0, [x8]
  40998c:	and	w8, w4, #0xffff
  409990:	mov	w3, w8
  409994:	b	40a068 <color_fprintf@@Base>
  409998:	ret
  40999c:	mov	w1, w4
  4099a0:	b	40a934 <jsonw_hu@@Base>

00000000004099a4 <print_color_uint@@Base>:
  4099a4:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  4099a8:	ldr	x8, [x8, #3448]
  4099ac:	tst	w0, #0x6
  4099b0:	b.eq	4099cc <print_color_uint@@Base+0x28>  // b.none
  4099b4:	cbz	x8, 4099d0 <print_color_uint@@Base+0x2c>
  4099b8:	mov	x0, x8
  4099bc:	cbz	x2, 4099f8 <print_color_uint@@Base+0x54>
  4099c0:	mov	x1, x2
  4099c4:	mov	w2, w4
  4099c8:	b	40aa64 <jsonw_uint_field@@Base>
  4099cc:	cbnz	x8, 4099f4 <print_color_uint@@Base+0x50>
  4099d0:	mov	w8, #0x5                   	// #5
  4099d4:	tst	w0, w8
  4099d8:	b.eq	4099f4 <print_color_uint@@Base+0x50>  // b.none
  4099dc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  4099e0:	ldr	x8, [x8, #4016]
  4099e4:	mov	x2, x3
  4099e8:	mov	w3, w4
  4099ec:	ldr	x0, [x8]
  4099f0:	b	40a068 <color_fprintf@@Base>
  4099f4:	ret
  4099f8:	mov	w1, w4
  4099fc:	b	40a944 <jsonw_uint@@Base>

0000000000409a00 <print_color_u64@@Base>:
  409a00:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409a04:	ldr	x8, [x8, #3448]
  409a08:	tst	w0, #0x6
  409a0c:	b.eq	409a28 <print_color_u64@@Base+0x28>  // b.none
  409a10:	cbz	x8, 409a2c <print_color_u64@@Base+0x2c>
  409a14:	mov	x0, x8
  409a18:	cbz	x2, 409a54 <print_color_u64@@Base+0x54>
  409a1c:	mov	x1, x2
  409a20:	mov	x2, x4
  409a24:	b	40aa98 <jsonw_u64_field@@Base>
  409a28:	cbnz	x8, 409a50 <print_color_u64@@Base+0x50>
  409a2c:	mov	w8, #0x5                   	// #5
  409a30:	tst	w0, w8
  409a34:	b.eq	409a50 <print_color_u64@@Base+0x50>  // b.none
  409a38:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409a3c:	ldr	x8, [x8, #4016]
  409a40:	mov	x2, x3
  409a44:	mov	x3, x4
  409a48:	ldr	x0, [x8]
  409a4c:	b	40a068 <color_fprintf@@Base>
  409a50:	ret
  409a54:	mov	x1, x4
  409a58:	b	40a954 <jsonw_u64@@Base>

0000000000409a5c <print_color_luint@@Base>:
  409a5c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409a60:	ldr	x8, [x8, #3448]
  409a64:	tst	w0, #0x6
  409a68:	b.eq	409a84 <print_color_luint@@Base+0x28>  // b.none
  409a6c:	cbz	x8, 409a88 <print_color_luint@@Base+0x2c>
  409a70:	mov	x0, x8
  409a74:	cbz	x2, 409ab0 <print_color_luint@@Base+0x54>
  409a78:	mov	x1, x2
  409a7c:	mov	x2, x4
  409a80:	b	40ab68 <jsonw_luint_field@@Base>
  409a84:	cbnz	x8, 409aac <print_color_luint@@Base+0x50>
  409a88:	mov	w8, #0x5                   	// #5
  409a8c:	tst	w0, w8
  409a90:	b.eq	409aac <print_color_luint@@Base+0x50>  // b.none
  409a94:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409a98:	ldr	x8, [x8, #4016]
  409a9c:	mov	x2, x3
  409aa0:	mov	x3, x4
  409aa4:	ldr	x0, [x8]
  409aa8:	b	40a068 <color_fprintf@@Base>
  409aac:	ret
  409ab0:	mov	x1, x4
  409ab4:	b	40a974 <jsonw_luint@@Base>

0000000000409ab8 <print_color_lluint@@Base>:
  409ab8:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409abc:	ldr	x8, [x8, #3448]
  409ac0:	tst	w0, #0x6
  409ac4:	b.eq	409ae0 <print_color_lluint@@Base+0x28>  // b.none
  409ac8:	cbz	x8, 409ae4 <print_color_lluint@@Base+0x2c>
  409acc:	mov	x0, x8
  409ad0:	cbz	x2, 409b0c <print_color_lluint@@Base+0x54>
  409ad4:	mov	x1, x2
  409ad8:	mov	x2, x4
  409adc:	b	40ab9c <jsonw_lluint_field@@Base>
  409ae0:	cbnz	x8, 409b08 <print_color_lluint@@Base+0x50>
  409ae4:	mov	w8, #0x5                   	// #5
  409ae8:	tst	w0, w8
  409aec:	b.eq	409b08 <print_color_lluint@@Base+0x50>  // b.none
  409af0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409af4:	ldr	x8, [x8, #4016]
  409af8:	mov	x2, x3
  409afc:	mov	x3, x4
  409b00:	ldr	x0, [x8]
  409b04:	b	40a068 <color_fprintf@@Base>
  409b08:	ret
  409b0c:	mov	x1, x4
  409b10:	b	40a984 <jsonw_lluint@@Base>

0000000000409b14 <print_color_float@@Base>:
  409b14:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409b18:	ldr	x8, [x8, #3448]
  409b1c:	tst	w0, #0x6
  409b20:	b.eq	409b38 <print_color_float@@Base+0x24>  // b.none
  409b24:	cbz	x8, 409b3c <print_color_float@@Base+0x28>
  409b28:	mov	x0, x8
  409b2c:	cbz	x2, 409b60 <print_color_float@@Base+0x4c>
  409b30:	mov	x1, x2
  409b34:	b	40aa28 <jsonw_float_field@@Base>
  409b38:	cbnz	x8, 409b5c <print_color_float@@Base+0x48>
  409b3c:	mov	w8, #0x5                   	// #5
  409b40:	tst	w0, w8
  409b44:	b.eq	409b5c <print_color_float@@Base+0x48>  // b.none
  409b48:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409b4c:	ldr	x8, [x8, #4016]
  409b50:	mov	x2, x3
  409b54:	ldr	x0, [x8]
  409b58:	b	40a068 <color_fprintf@@Base>
  409b5c:	ret
  409b60:	b	40a918 <jsonw_float@@Base>

0000000000409b64 <print_uint_name_value@@Base>:
  409b64:	sub	sp, sp, #0x60
  409b68:	stp	x20, x19, [sp, #80]
  409b6c:	mov	x20, x0
  409b70:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  409b74:	mov	w19, w1
  409b78:	add	x2, x2, #0x862
  409b7c:	mov	x0, sp
  409b80:	mov	w1, #0x40                  	// #64
  409b84:	mov	x3, x20
  409b88:	stp	x29, x30, [sp, #64]
  409b8c:	add	x29, sp, #0x40
  409b90:	bl	404f10 <snprintf@plt>
  409b94:	mov	x3, sp
  409b98:	mov	w0, #0x4                   	// #4
  409b9c:	mov	w1, #0x6                   	// #6
  409ba0:	mov	x2, x20
  409ba4:	mov	w4, w19
  409ba8:	bl	4099a4 <print_color_uint@@Base>
  409bac:	ldp	x20, x19, [sp, #80]
  409bb0:	ldp	x29, x30, [sp, #64]
  409bb4:	add	sp, sp, #0x60
  409bb8:	ret

0000000000409bbc <print_string_name_value@@Base>:
  409bbc:	sub	sp, sp, #0x60
  409bc0:	stp	x20, x19, [sp, #80]
  409bc4:	mov	x20, x0
  409bc8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  409bcc:	mov	x19, x1
  409bd0:	add	x2, x2, #0x869
  409bd4:	mov	x0, sp
  409bd8:	mov	w1, #0x40                  	// #64
  409bdc:	mov	x3, x20
  409be0:	stp	x29, x30, [sp, #64]
  409be4:	add	x29, sp, #0x40
  409be8:	bl	404f10 <snprintf@plt>
  409bec:	mov	x3, sp
  409bf0:	mov	w0, #0x4                   	// #4
  409bf4:	mov	w1, #0x6                   	// #6
  409bf8:	mov	x2, x20
  409bfc:	mov	x4, x19
  409c00:	bl	409c14 <print_color_string@@Base>
  409c04:	ldp	x20, x19, [sp, #80]
  409c08:	ldp	x29, x30, [sp, #64]
  409c0c:	add	sp, sp, #0x60
  409c10:	ret

0000000000409c14 <print_color_string@@Base>:
  409c14:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409c18:	ldr	x8, [x8, #3448]
  409c1c:	tst	w0, #0x6
  409c20:	b.eq	409c3c <print_color_string@@Base+0x28>  // b.none
  409c24:	cbz	x8, 409c40 <print_color_string@@Base+0x2c>
  409c28:	cbz	x2, 409c68 <print_color_string@@Base+0x54>
  409c2c:	cbnz	x4, 409c68 <print_color_string@@Base+0x54>
  409c30:	mov	x0, x8
  409c34:	mov	x1, x2
  409c38:	b	40a45c <jsonw_name@@Base>
  409c3c:	cbnz	x8, 409c64 <print_color_string@@Base+0x50>
  409c40:	mov	w8, #0x5                   	// #5
  409c44:	tst	w0, w8
  409c48:	b.eq	409c64 <print_color_string@@Base+0x50>  // b.none
  409c4c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409c50:	ldr	x8, [x8, #4016]
  409c54:	mov	x2, x3
  409c58:	mov	x3, x4
  409c5c:	ldr	x0, [x8]
  409c60:	b	40a068 <color_fprintf@@Base>
  409c64:	ret
  409c68:	cbnz	x2, 409c7c <print_color_string@@Base+0x68>
  409c6c:	cbz	x4, 409c7c <print_color_string@@Base+0x68>
  409c70:	mov	x0, x8
  409c74:	mov	x1, x4
  409c78:	b	40a8a8 <jsonw_string@@Base>
  409c7c:	mov	x0, x8
  409c80:	mov	x1, x2
  409c84:	mov	x2, x4
  409c88:	b	40a9b4 <jsonw_string_field@@Base>

0000000000409c8c <print_color_bool@@Base>:
  409c8c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409c90:	ldr	x8, [x8, #3448]
  409c94:	tst	w0, #0x6
  409c98:	b.eq	409cb8 <print_color_bool@@Base+0x2c>  // b.none
  409c9c:	cbz	x8, 409cbc <print_color_bool@@Base+0x30>
  409ca0:	cbz	x2, 409cfc <print_color_bool@@Base+0x70>
  409ca4:	and	w9, w4, #0x1
  409ca8:	mov	x0, x8
  409cac:	mov	x1, x2
  409cb0:	mov	w2, w9
  409cb4:	b	40a9e0 <jsonw_bool_field@@Base>
  409cb8:	cbnz	x8, 409cf8 <print_color_bool@@Base+0x6c>
  409cbc:	mov	w8, #0x5                   	// #5
  409cc0:	tst	w0, w8
  409cc4:	b.eq	409cf8 <print_color_bool@@Base+0x6c>  // b.none
  409cc8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409ccc:	ldr	x8, [x8, #4016]
  409cd0:	adrp	x9, 40d000 <_IO_stdin_used@@Base+0x180>
  409cd4:	add	x9, x9, #0x870
  409cd8:	tst	w4, #0x1
  409cdc:	ldr	x0, [x8]
  409ce0:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  409ce4:	add	x8, x8, #0x875
  409ce8:	csel	x8, x9, x8, ne  // ne = any
  409cec:	mov	x2, x3
  409cf0:	mov	x3, x8
  409cf4:	b	40a068 <color_fprintf@@Base>
  409cf8:	ret
  409cfc:	and	w1, w4, #0x1
  409d00:	mov	x0, x8
  409d04:	b	40a8e8 <jsonw_bool@@Base>

0000000000409d08 <print_color_0xhex@@Base>:
  409d08:	sub	sp, sp, #0x60
  409d0c:	stp	x29, x30, [sp, #64]
  409d10:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409d14:	ldr	x8, [x8, #3448]
  409d18:	tst	w0, #0x6
  409d1c:	str	x19, [sp, #80]
  409d20:	add	x29, sp, #0x40
  409d24:	b.eq	409d64 <print_color_0xhex@@Base+0x5c>  // b.none
  409d28:	cbz	x8, 409d64 <print_color_0xhex@@Base+0x5c>
  409d2c:	mov	x19, x2
  409d30:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  409d34:	add	x2, x2, #0x87b
  409d38:	mov	x0, sp
  409d3c:	mov	w1, #0x40                  	// #64
  409d40:	mov	x3, x4
  409d44:	bl	404f10 <snprintf@plt>
  409d48:	mov	x4, sp
  409d4c:	mov	w0, #0x2                   	// #2
  409d50:	mov	w1, #0x6                   	// #6
  409d54:	mov	x2, x19
  409d58:	mov	x3, xzr
  409d5c:	bl	409c14 <print_color_string@@Base>
  409d60:	b	409d98 <print_color_0xhex@@Base+0x90>
  409d64:	mov	w9, #0x5                   	// #5
  409d68:	tst	w0, w9
  409d6c:	b.eq	409d98 <print_color_0xhex@@Base+0x90>  // b.none
  409d70:	cbnz	x8, 409d98 <print_color_0xhex@@Base+0x90>
  409d74:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409d78:	ldr	x8, [x8, #4016]
  409d7c:	ldr	x19, [sp, #80]
  409d80:	ldp	x29, x30, [sp, #64]
  409d84:	mov	x2, x3
  409d88:	ldr	x0, [x8]
  409d8c:	mov	x3, x4
  409d90:	add	sp, sp, #0x60
  409d94:	b	40a068 <color_fprintf@@Base>
  409d98:	ldr	x19, [sp, #80]
  409d9c:	ldp	x29, x30, [sp, #64]
  409da0:	add	sp, sp, #0x60
  409da4:	ret

0000000000409da8 <print_color_hex@@Base>:
  409da8:	sub	sp, sp, #0x60
  409dac:	stp	x29, x30, [sp, #64]
  409db0:	stp	x20, x19, [sp, #80]
  409db4:	adrp	x20, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409db8:	ldr	x8, [x20, #3448]
  409dbc:	tst	w0, #0x6
  409dc0:	add	x29, sp, #0x40
  409dc4:	b.eq	409e00 <print_color_hex@@Base+0x58>  // b.none
  409dc8:	cbz	x8, 409e00 <print_color_hex@@Base+0x58>
  409dcc:	mov	x19, x2
  409dd0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  409dd4:	add	x2, x2, #0x85f
  409dd8:	mov	x0, sp
  409ddc:	mov	w1, #0x40                  	// #64
  409de0:	mov	w3, w4
  409de4:	bl	404f10 <snprintf@plt>
  409de8:	ldr	x0, [x20, #3448]
  409dec:	cbz	x19, 409e34 <print_color_hex@@Base+0x8c>
  409df0:	mov	x2, sp
  409df4:	mov	x1, x19
  409df8:	bl	40a9b4 <jsonw_string_field@@Base>
  409dfc:	b	409e3c <print_color_hex@@Base+0x94>
  409e00:	mov	w9, #0x5                   	// #5
  409e04:	tst	w0, w9
  409e08:	b.eq	409e3c <print_color_hex@@Base+0x94>  // b.none
  409e0c:	cbnz	x8, 409e3c <print_color_hex@@Base+0x94>
  409e10:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409e14:	ldr	x8, [x8, #4016]
  409e18:	ldp	x20, x19, [sp, #80]
  409e1c:	ldp	x29, x30, [sp, #64]
  409e20:	mov	x2, x3
  409e24:	ldr	x0, [x8]
  409e28:	mov	w3, w4
  409e2c:	add	sp, sp, #0x60
  409e30:	b	40a068 <color_fprintf@@Base>
  409e34:	mov	x1, sp
  409e38:	bl	40a8a8 <jsonw_string@@Base>
  409e3c:	ldp	x20, x19, [sp, #80]
  409e40:	ldp	x29, x30, [sp, #64]
  409e44:	add	sp, sp, #0x60
  409e48:	ret

0000000000409e4c <print_color_null@@Base>:
  409e4c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409e50:	ldr	x8, [x8, #3448]
  409e54:	tst	w0, #0x6
  409e58:	b.eq	409e70 <print_color_null@@Base+0x24>  // b.none
  409e5c:	cbz	x8, 409e74 <print_color_null@@Base+0x28>
  409e60:	mov	x0, x8
  409e64:	cbz	x2, 409e9c <print_color_null@@Base+0x50>
  409e68:	mov	x1, x2
  409e6c:	b	40ac38 <jsonw_null_field@@Base>
  409e70:	cbnz	x8, 409e98 <print_color_null@@Base+0x4c>
  409e74:	mov	w8, #0x5                   	// #5
  409e78:	tst	w0, w8
  409e7c:	b.eq	409e98 <print_color_null@@Base+0x4c>  // b.none
  409e80:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409e84:	ldr	x8, [x8, #4016]
  409e88:	mov	x2, x3
  409e8c:	mov	x3, x4
  409e90:	ldr	x0, [x8]
  409e94:	b	40a068 <color_fprintf@@Base>
  409e98:	ret
  409e9c:	b	40a90c <jsonw_null@@Base>

0000000000409ea0 <print_nl@@Base>:
  409ea0:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409ea4:	ldr	x8, [x8, #3448]
  409ea8:	cbz	x8, 409eb0 <print_nl@@Base+0x10>
  409eac:	ret
  409eb0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409eb4:	ldr	x8, [x8, #4048]
  409eb8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  409ebc:	add	x0, x0, #0x451
  409ec0:	ldr	x1, [x8]
  409ec4:	b	4052d0 <printf@plt>

0000000000409ec8 <check_enable_color@@Base>:
  409ec8:	stp	x29, x30, [sp, #-32]!
  409ecc:	str	x19, [sp, #16]
  409ed0:	mov	w19, wzr
  409ed4:	mov	x29, sp
  409ed8:	cbz	w0, 409f64 <check_enable_color@@Base+0x9c>
  409edc:	cbnz	w1, 409f64 <check_enable_color@@Base+0x9c>
  409ee0:	cmp	w0, #0x2
  409ee4:	b.eq	409f00 <check_enable_color@@Base+0x38>  // b.none
  409ee8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  409eec:	ldr	x8, [x8, #4016]
  409ef0:	ldr	x0, [x8]
  409ef4:	bl	404f20 <fileno@plt>
  409ef8:	bl	405220 <isatty@plt>
  409efc:	cbz	w0, 409f50 <check_enable_color@@Base+0x88>
  409f00:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  409f04:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409f08:	mov	w19, #0x1                   	// #1
  409f0c:	add	x0, x0, #0x8a6
  409f10:	strb	w19, [x8, #3456]
  409f14:	bl	405300 <getenv@plt>
  409f18:	cbz	x0, 409f64 <check_enable_color@@Base+0x9c>
  409f1c:	mov	w1, #0x3b                  	// #59
  409f20:	bl	4050a0 <strrchr@plt>
  409f24:	cbz	x0, 409f60 <check_enable_color@@Base+0x98>
  409f28:	ldrb	w8, [x0, #1]
  409f2c:	sub	w9, w8, #0x30
  409f30:	cmp	w9, #0x7
  409f34:	b.cs	409f58 <check_enable_color@@Base+0x90>  // b.hs, b.nlast
  409f38:	ldrb	w8, [x0, #2]
  409f3c:	mov	w19, #0x1                   	// #1
  409f40:	cbnz	w8, 409f64 <check_enable_color@@Base+0x9c>
  409f44:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  409f48:	strb	w19, [x8, #3460]
  409f4c:	b	409f64 <check_enable_color@@Base+0x9c>
  409f50:	mov	w19, wzr
  409f54:	b	409f64 <check_enable_color@@Base+0x9c>
  409f58:	cmp	w8, #0x38
  409f5c:	b.eq	409f38 <check_enable_color@@Base+0x70>  // b.none
  409f60:	mov	w19, #0x1                   	// #1
  409f64:	mov	w0, w19
  409f68:	ldr	x19, [sp, #16]
  409f6c:	ldp	x29, x30, [sp], #32
  409f70:	ret

0000000000409f74 <matches_color@@Base>:
  409f74:	stp	x29, x30, [sp, #-48]!
  409f78:	str	x21, [sp, #16]
  409f7c:	stp	x20, x19, [sp, #32]
  409f80:	mov	x29, sp
  409f84:	cbz	x1, 409fe8 <matches_color@@Base+0x74>
  409f88:	mov	x19, x1
  409f8c:	mov	x20, x0
  409f90:	bl	404e00 <strlen@plt>
  409f94:	add	x9, x0, #0x10
  409f98:	mov	x8, sp
  409f9c:	and	x9, x9, #0xfffffffffffffff0
  409fa0:	sub	x21, x8, x9
  409fa4:	add	x2, x0, #0x1
  409fa8:	mov	sp, x21
  409fac:	mov	x0, x21
  409fb0:	mov	x1, x20
  409fb4:	bl	404dd0 <memcpy@plt>
  409fb8:	mov	w1, #0x3d                  	// #61
  409fbc:	mov	x0, x21
  409fc0:	bl	405270 <strchrnul@plt>
  409fc4:	ldrb	w8, [x0]
  409fc8:	mov	x20, x0
  409fcc:	cbz	w8, 409fd4 <matches_color@@Base+0x60>
  409fd0:	strb	wzr, [x20], #1
  409fd4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  409fd8:	add	x1, x1, #0x88d
  409fdc:	mov	x0, x21
  409fe0:	bl	4073ac <matches@@Base>
  409fe4:	tbz	w0, #0, 409ff0 <matches_color@@Base+0x7c>
  409fe8:	mov	w0, wzr
  409fec:	b	40a048 <matches_color@@Base+0xd4>
  409ff0:	ldrb	w8, [x20]
  409ff4:	cbz	w8, 40a03c <matches_color@@Base+0xc8>
  409ff8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  409ffc:	add	x1, x1, #0x894
  40a000:	mov	x0, x20
  40a004:	bl	4050f0 <strcmp@plt>
  40a008:	cbz	w0, 40a03c <matches_color@@Base+0xc8>
  40a00c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a010:	add	x1, x1, #0x89b
  40a014:	mov	x0, x20
  40a018:	bl	4050f0 <strcmp@plt>
  40a01c:	cbz	w0, 40a05c <matches_color@@Base+0xe8>
  40a020:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a024:	add	x1, x1, #0x8a0
  40a028:	mov	x0, x20
  40a02c:	bl	4050f0 <strcmp@plt>
  40a030:	cbnz	w0, 409fe8 <matches_color@@Base+0x74>
  40a034:	str	wzr, [x19]
  40a038:	b	40a044 <matches_color@@Base+0xd0>
  40a03c:	mov	w8, #0x2                   	// #2
  40a040:	str	w8, [x19]
  40a044:	mov	w0, #0x1                   	// #1
  40a048:	mov	sp, x29
  40a04c:	ldp	x20, x19, [sp, #32]
  40a050:	ldr	x21, [sp, #16]
  40a054:	ldp	x29, x30, [sp], #48
  40a058:	ret
  40a05c:	mov	w0, #0x1                   	// #1
  40a060:	str	w0, [x19]
  40a064:	b	40a048 <matches_color@@Base+0xd4>

000000000040a068 <color_fprintf@@Base>:
  40a068:	sub	sp, sp, #0x130
  40a06c:	stp	x29, x30, [sp, #240]
  40a070:	add	x29, sp, #0xf0
  40a074:	mov	x8, #0xffffffffffffffd8    	// #-40
  40a078:	mov	x9, sp
  40a07c:	sub	x10, x29, #0x68
  40a080:	stp	x20, x19, [sp, #288]
  40a084:	mov	x20, x2
  40a088:	mov	x19, x0
  40a08c:	movk	x8, #0xff80, lsl #32
  40a090:	add	x11, x29, #0x40
  40a094:	cmp	w1, #0x6
  40a098:	add	x9, x9, #0x80
  40a09c:	add	x10, x10, #0x28
  40a0a0:	str	x28, [sp, #256]
  40a0a4:	stp	x22, x21, [sp, #272]
  40a0a8:	stp	x3, x4, [x29, #-104]
  40a0ac:	stp	x5, x6, [x29, #-88]
  40a0b0:	stur	x7, [x29, #-72]
  40a0b4:	stp	q1, q2, [sp, #16]
  40a0b8:	stp	q3, q4, [sp, #48]
  40a0bc:	str	q0, [sp]
  40a0c0:	stp	q5, q6, [sp, #80]
  40a0c4:	str	q7, [sp, #112]
  40a0c8:	stp	x9, x8, [x29, #-16]
  40a0cc:	stp	x11, x10, [x29, #-32]
  40a0d0:	b.eq	40a160 <color_fprintf@@Base+0xf8>  // b.none
  40a0d4:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  40a0d8:	ldrb	w8, [x8, #3456]
  40a0dc:	cbz	w8, 40a160 <color_fprintf@@Base+0xf8>
  40a0e0:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce0>
  40a0e4:	ldrb	w8, [x8, #3460]
  40a0e8:	adrp	x9, 40d000 <_IO_stdin_used@@Base+0x180>
  40a0ec:	adrp	x10, 40d000 <_IO_stdin_used@@Base+0x180>
  40a0f0:	add	x9, x9, #0x934
  40a0f4:	add	x10, x10, #0x918
  40a0f8:	cmp	w8, #0x0
  40a0fc:	csel	x8, x10, x9, ne  // ne = any
  40a100:	ldr	w8, [x8, w1, uxtw #2]
  40a104:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40a108:	add	x9, x9, #0xd00
  40a10c:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x180>
  40a110:	ldr	x2, [x9, x8, lsl #3]
  40a114:	add	x21, x21, #0x451
  40a118:	mov	x0, x19
  40a11c:	mov	x1, x21
  40a120:	bl	405330 <fprintf@plt>
  40a124:	ldp	q0, q1, [x29, #-32]
  40a128:	mov	w22, w0
  40a12c:	sub	x2, x29, #0x40
  40a130:	mov	x0, x19
  40a134:	mov	x1, x20
  40a138:	stp	q0, q1, [x29, #-64]
  40a13c:	bl	4052c0 <vfprintf@plt>
  40a140:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  40a144:	add	w20, w0, w22
  40a148:	add	x2, x2, #0x912
  40a14c:	mov	x0, x19
  40a150:	mov	x1, x21
  40a154:	bl	405330 <fprintf@plt>
  40a158:	add	w0, w20, w0
  40a15c:	b	40a178 <color_fprintf@@Base+0x110>
  40a160:	ldp	q0, q1, [x29, #-32]
  40a164:	sub	x2, x29, #0x40
  40a168:	mov	x0, x19
  40a16c:	mov	x1, x20
  40a170:	stp	q0, q1, [x29, #-64]
  40a174:	bl	4052c0 <vfprintf@plt>
  40a178:	ldp	x20, x19, [sp, #288]
  40a17c:	ldp	x22, x21, [sp, #272]
  40a180:	ldr	x28, [sp, #256]
  40a184:	ldp	x29, x30, [sp, #240]
  40a188:	add	sp, sp, #0x130
  40a18c:	ret

000000000040a190 <ifa_family_color@@Base>:
  40a190:	and	w8, w0, #0xff
  40a194:	mov	w9, #0x6                   	// #6
  40a198:	mov	w10, #0x3                   	// #3
  40a19c:	cmp	w8, #0xa
  40a1a0:	csel	w9, w10, w9, eq  // eq = none
  40a1a4:	cmp	w8, #0x2
  40a1a8:	csel	w0, w8, w9, eq  // eq = none
  40a1ac:	ret

000000000040a1b0 <oper_state_color@@Base>:
  40a1b0:	and	w8, w0, #0xff
  40a1b4:	mov	w9, #0x5                   	// #5
  40a1b8:	cmp	w8, #0x2
  40a1bc:	cinc	w9, w9, ne  // ne = any
  40a1c0:	cmp	w8, #0x6
  40a1c4:	mov	w8, #0x4                   	// #4
  40a1c8:	csel	w0, w8, w9, eq  // eq = none
  40a1cc:	ret

000000000040a1d0 <mpls_ntop@@Base>:
  40a1d0:	stp	x29, x30, [sp, #-80]!
  40a1d4:	stp	x26, x25, [sp, #16]
  40a1d8:	stp	x24, x23, [sp, #32]
  40a1dc:	stp	x22, x21, [sp, #48]
  40a1e0:	stp	x20, x19, [sp, #64]
  40a1e4:	mov	x29, sp
  40a1e8:	mov	x21, x3
  40a1ec:	mov	x19, x2
  40a1f0:	mov	x22, x1
  40a1f4:	mov	w20, w0
  40a1f8:	bl	4052f0 <__errno_location@plt>
  40a1fc:	cmp	w20, #0x1c
  40a200:	mov	x20, x0
  40a204:	b.ne	40a29c <mpls_ntop@@Base+0xcc>  // b.any
  40a208:	str	wzr, [x20]
  40a20c:	ldr	w8, [x22]
  40a210:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x180>
  40a214:	add	x2, x2, #0x866
  40a218:	mov	x0, x19
  40a21c:	rev	w26, w8
  40a220:	lsr	w3, w26, #12
  40a224:	mov	x1, x21
  40a228:	bl	404f10 <snprintf@plt>
  40a22c:	sxtw	x8, w0
  40a230:	cmp	x8, x21
  40a234:	b.cs	40a294 <mpls_ntop@@Base+0xc4>  // b.hs, b.nlast
  40a238:	add	x24, x22, #0x4
  40a23c:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x180>
  40a240:	add	x22, x22, #0x866
  40a244:	mov	w25, #0x2f                  	// #47
  40a248:	mov	x23, x19
  40a24c:	tbnz	w26, #8, 40a2a8 <mpls_ntop@@Base+0xd8>
  40a250:	subs	x9, x21, x8
  40a254:	add	x23, x23, x8
  40a258:	b.eq	40a268 <mpls_ntop@@Base+0x98>  // b.none
  40a25c:	strb	w25, [x23], #1
  40a260:	sub	x21, x9, #0x1
  40a264:	b	40a26c <mpls_ntop@@Base+0x9c>
  40a268:	mov	x21, xzr
  40a26c:	ldr	w8, [x24], #4
  40a270:	mov	x0, x23
  40a274:	mov	x1, x21
  40a278:	mov	x2, x22
  40a27c:	rev	w26, w8
  40a280:	lsr	w3, w26, #12
  40a284:	bl	404f10 <snprintf@plt>
  40a288:	cmp	x21, w0, sxtw
  40a28c:	sxtw	x8, w0
  40a290:	b.hi	40a24c <mpls_ntop@@Base+0x7c>  // b.pmore
  40a294:	mov	w8, #0xfffffff9            	// #-7
  40a298:	b	40a2a0 <mpls_ntop@@Base+0xd0>
  40a29c:	mov	w8, #0x61                  	// #97
  40a2a0:	mov	x19, xzr
  40a2a4:	str	w8, [x20]
  40a2a8:	mov	x0, x19
  40a2ac:	ldp	x20, x19, [sp, #64]
  40a2b0:	ldp	x22, x21, [sp, #48]
  40a2b4:	ldp	x24, x23, [sp, #32]
  40a2b8:	ldp	x26, x25, [sp, #16]
  40a2bc:	ldp	x29, x30, [sp], #80
  40a2c0:	ret

000000000040a2c4 <mpls_pton@@Base>:
  40a2c4:	sub	sp, sp, #0x40
  40a2c8:	stp	x29, x30, [sp, #16]
  40a2cc:	stp	x22, x21, [sp, #32]
  40a2d0:	stp	x20, x19, [sp, #48]
  40a2d4:	add	x29, sp, #0x10
  40a2d8:	mov	x21, x3
  40a2dc:	mov	x19, x2
  40a2e0:	mov	x20, x1
  40a2e4:	mov	w22, w0
  40a2e8:	bl	4052f0 <__errno_location@plt>
  40a2ec:	cmp	w22, #0x1c
  40a2f0:	b.ne	40a37c <mpls_pton@@Base+0xb8>  // b.any
  40a2f4:	lsr	x21, x21, #2
  40a2f8:	str	wzr, [x0]
  40a2fc:	cbz	w21, 40a354 <mpls_pton@@Base+0x90>
  40a300:	add	x1, sp, #0x8
  40a304:	mov	x0, x20
  40a308:	mov	w2, wzr
  40a30c:	bl	404df0 <strtoul@plt>
  40a310:	mov	x8, x0
  40a314:	lsr	x9, x0, #20
  40a318:	mov	w0, wzr
  40a31c:	cbnz	x9, 40a388 <mpls_pton@@Base+0xc4>
  40a320:	ldr	x9, [sp, #8]
  40a324:	cmp	x9, x20
  40a328:	b.eq	40a388 <mpls_pton@@Base+0xc4>  // b.none
  40a32c:	lsl	w8, w8, #12
  40a330:	rev	w8, w8
  40a334:	str	w8, [x19]
  40a338:	ldrb	w10, [x9]
  40a33c:	cmp	w10, #0x2f
  40a340:	b.ne	40a39c <mpls_pton@@Base+0xd8>  // b.any
  40a344:	add	x20, x9, #0x1
  40a348:	subs	w21, w21, #0x1
  40a34c:	add	x19, x19, #0x4
  40a350:	b.ne	40a300 <mpls_pton@@Base+0x3c>  // b.any
  40a354:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40a358:	ldr	x8, [x8, #3992]
  40a35c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40a360:	add	x0, x0, #0x950
  40a364:	mov	w1, #0x18                  	// #24
  40a368:	ldr	x3, [x8]
  40a36c:	mov	w2, #0x1                   	// #1
  40a370:	bl	4051c0 <fwrite@plt>
  40a374:	mov	w0, wzr
  40a378:	b	40a388 <mpls_pton@@Base+0xc4>
  40a37c:	mov	w8, #0x61                  	// #97
  40a380:	str	w8, [x0]
  40a384:	mov	w0, #0xffffffff            	// #-1
  40a388:	ldp	x20, x19, [sp, #48]
  40a38c:	ldp	x22, x21, [sp, #32]
  40a390:	ldp	x29, x30, [sp, #16]
  40a394:	add	sp, sp, #0x40
  40a398:	ret
  40a39c:	cbnz	w10, 40a374 <mpls_pton@@Base+0xb0>
  40a3a0:	orr	w8, w8, #0x10000
  40a3a4:	str	w8, [x19]
  40a3a8:	mov	w0, #0x1                   	// #1
  40a3ac:	b	40a388 <mpls_pton@@Base+0xc4>

000000000040a3b0 <jsonw_new@@Base>:
  40a3b0:	stp	x29, x30, [sp, #-32]!
  40a3b4:	str	x19, [sp, #16]
  40a3b8:	mov	x19, x0
  40a3bc:	mov	w0, #0x10                  	// #16
  40a3c0:	mov	x29, sp
  40a3c4:	bl	404f70 <malloc@plt>
  40a3c8:	cbz	x0, 40a3d8 <jsonw_new@@Base+0x28>
  40a3cc:	str	x19, [x0]
  40a3d0:	str	wzr, [x0, #8]
  40a3d4:	strh	wzr, [x0, #12]
  40a3d8:	ldr	x19, [sp, #16]
  40a3dc:	ldp	x29, x30, [sp], #32
  40a3e0:	ret

000000000040a3e4 <jsonw_destroy@@Base>:
  40a3e4:	stp	x29, x30, [sp, #-32]!
  40a3e8:	stp	x20, x19, [sp, #16]
  40a3ec:	ldr	x20, [x0]
  40a3f0:	mov	x29, sp
  40a3f4:	ldr	w8, [x20, #8]
  40a3f8:	cbnz	w8, 40a430 <jsonw_destroy@@Base+0x4c>
  40a3fc:	ldr	x1, [x20]
  40a400:	mov	x19, x0
  40a404:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40a408:	add	x0, x0, #0x176
  40a40c:	bl	404e10 <fputs@plt>
  40a410:	ldr	x0, [x20]
  40a414:	bl	4051e0 <fflush@plt>
  40a418:	mov	x0, x20
  40a41c:	bl	405160 <free@plt>
  40a420:	str	xzr, [x19]
  40a424:	ldp	x20, x19, [sp, #16]
  40a428:	ldp	x29, x30, [sp], #32
  40a42c:	ret
  40a430:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40a434:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a438:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x180>
  40a43c:	add	x0, x0, #0x977
  40a440:	add	x1, x1, #0x988
  40a444:	add	x3, x3, #0x996
  40a448:	mov	w2, #0x6e                  	// #110
  40a44c:	bl	4052e0 <__assert_fail@plt>

000000000040a450 <jsonw_pretty@@Base>:
  40a450:	and	w8, w1, #0x1
  40a454:	strb	w8, [x0, #12]
  40a458:	ret

000000000040a45c <jsonw_name@@Base>:
  40a45c:	stp	x29, x30, [sp, #-32]!
  40a460:	stp	x20, x19, [sp, #16]
  40a464:	mov	x19, x0
  40a468:	ldrb	w0, [x0, #13]
  40a46c:	mov	x20, x1
  40a470:	mov	x29, sp
  40a474:	cbz	w0, 40a480 <jsonw_name@@Base+0x24>
  40a478:	ldr	x1, [x19]
  40a47c:	bl	404ed0 <putc@plt>
  40a480:	mov	w8, #0x2c                  	// #44
  40a484:	mov	x0, x19
  40a488:	strb	w8, [x19, #13]
  40a48c:	bl	40a4d4 <jsonw_name@@Base+0x78>
  40a490:	mov	x0, x19
  40a494:	mov	x1, x20
  40a498:	strb	wzr, [x19, #13]
  40a49c:	bl	40a53c <jsonw_name@@Base+0xe0>
  40a4a0:	ldr	x1, [x19]
  40a4a4:	mov	w0, #0x3a                  	// #58
  40a4a8:	bl	404ed0 <putc@plt>
  40a4ac:	ldrb	w8, [x19, #12]
  40a4b0:	cbz	w8, 40a4c8 <jsonw_name@@Base+0x6c>
  40a4b4:	ldr	x1, [x19]
  40a4b8:	ldp	x20, x19, [sp, #16]
  40a4bc:	mov	w0, #0x20                  	// #32
  40a4c0:	ldp	x29, x30, [sp], #32
  40a4c4:	b	404ed0 <putc@plt>
  40a4c8:	ldp	x20, x19, [sp, #16]
  40a4cc:	ldp	x29, x30, [sp], #32
  40a4d0:	ret
  40a4d4:	stp	x29, x30, [sp, #-48]!
  40a4d8:	stp	x20, x19, [sp, #32]
  40a4dc:	ldrb	w8, [x0, #12]
  40a4e0:	str	x21, [sp, #16]
  40a4e4:	mov	x29, sp
  40a4e8:	cbz	w8, 40a52c <jsonw_name@@Base+0xd0>
  40a4ec:	ldr	x1, [x0]
  40a4f0:	mov	x19, x0
  40a4f4:	mov	w0, #0xa                   	// #10
  40a4f8:	bl	404ed0 <putc@plt>
  40a4fc:	ldr	w8, [x19, #8]
  40a500:	cbz	w8, 40a52c <jsonw_name@@Base+0xd0>
  40a504:	adrp	x20, 40d000 <_IO_stdin_used@@Base+0x180>
  40a508:	mov	w21, wzr
  40a50c:	add	x20, x20, #0x9dd
  40a510:	ldr	x1, [x19]
  40a514:	mov	x0, x20
  40a518:	bl	404e10 <fputs@plt>
  40a51c:	ldr	w8, [x19, #8]
  40a520:	add	w21, w21, #0x1
  40a524:	cmp	w21, w8
  40a528:	b.cc	40a510 <jsonw_name@@Base+0xb4>  // b.lo, b.ul, b.last
  40a52c:	ldp	x20, x19, [sp, #32]
  40a530:	ldr	x21, [sp, #16]
  40a534:	ldp	x29, x30, [sp], #48
  40a538:	ret
  40a53c:	stp	x29, x30, [sp, #-96]!
  40a540:	stp	x28, x27, [sp, #16]
  40a544:	stp	x26, x25, [sp, #32]
  40a548:	stp	x24, x23, [sp, #48]
  40a54c:	stp	x22, x21, [sp, #64]
  40a550:	stp	x20, x19, [sp, #80]
  40a554:	ldr	x8, [x0]
  40a558:	mov	x19, x0
  40a55c:	mov	x20, x1
  40a560:	mov	w0, #0x22                  	// #34
  40a564:	mov	x1, x8
  40a568:	mov	x29, sp
  40a56c:	bl	404ed0 <putc@plt>
  40a570:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x180>
  40a574:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x180>
  40a578:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x180>
  40a57c:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x180>
  40a580:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x180>
  40a584:	adrp	x26, 40d000 <_IO_stdin_used@@Base+0x180>
  40a588:	adrp	x27, 40d000 <_IO_stdin_used@@Base+0x180>
  40a58c:	adrp	x28, 40d000 <_IO_stdin_used@@Base+0x180>
  40a590:	add	x21, x21, #0x969
  40a594:	add	x22, x22, #0x9e2
  40a598:	add	x23, x23, #0x9e5
  40a59c:	add	x24, x24, #0x9eb
  40a5a0:	add	x25, x25, #0x9e8
  40a5a4:	add	x26, x26, #0x9f4
  40a5a8:	add	x27, x27, #0x9f7
  40a5ac:	add	x28, x28, #0x9f1
  40a5b0:	ldrb	w0, [x20]
  40a5b4:	cmp	w0, #0x21
  40a5b8:	b.gt	40a5e4 <jsonw_name@@Base+0x188>
  40a5bc:	cmp	w0, #0xd
  40a5c0:	b.hi	40a658 <jsonw_name@@Base+0x1fc>  // b.pmore
  40a5c4:	adr	x8, 40a5d4 <jsonw_name@@Base+0x178>
  40a5c8:	ldrb	w9, [x21, x0]
  40a5cc:	add	x8, x8, x9, lsl #2
  40a5d0:	br	x8
  40a5d4:	ldr	x1, [x19]
  40a5d8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40a5dc:	add	x0, x0, #0x9ee
  40a5e0:	b	40a64c <jsonw_name@@Base+0x1f0>
  40a5e4:	cmp	w0, #0x22
  40a5e8:	b.eq	40a638 <jsonw_name@@Base+0x1dc>  // b.none
  40a5ec:	cmp	w0, #0x27
  40a5f0:	b.eq	40a644 <jsonw_name@@Base+0x1e8>  // b.none
  40a5f4:	cmp	w0, #0x5c
  40a5f8:	b.ne	40a658 <jsonw_name@@Base+0x1fc>  // b.any
  40a5fc:	ldr	x1, [x19]
  40a600:	mov	x0, x28
  40a604:	b	40a64c <jsonw_name@@Base+0x1f0>
  40a608:	ldr	x1, [x19]
  40a60c:	mov	x0, x22
  40a610:	b	40a64c <jsonw_name@@Base+0x1f0>
  40a614:	ldr	x1, [x19]
  40a618:	mov	x0, x23
  40a61c:	b	40a64c <jsonw_name@@Base+0x1f0>
  40a620:	ldr	x1, [x19]
  40a624:	mov	x0, x24
  40a628:	b	40a64c <jsonw_name@@Base+0x1f0>
  40a62c:	ldr	x1, [x19]
  40a630:	mov	x0, x25
  40a634:	b	40a64c <jsonw_name@@Base+0x1f0>
  40a638:	ldr	x1, [x19]
  40a63c:	mov	x0, x26
  40a640:	b	40a64c <jsonw_name@@Base+0x1f0>
  40a644:	ldr	x1, [x19]
  40a648:	mov	x0, x27
  40a64c:	bl	404e10 <fputs@plt>
  40a650:	add	x20, x20, #0x1
  40a654:	b	40a5b0 <jsonw_name@@Base+0x154>
  40a658:	ldr	x1, [x19]
  40a65c:	bl	404ed0 <putc@plt>
  40a660:	b	40a650 <jsonw_name@@Base+0x1f4>
  40a664:	ldr	x1, [x19]
  40a668:	ldp	x20, x19, [sp, #80]
  40a66c:	ldp	x22, x21, [sp, #64]
  40a670:	ldp	x24, x23, [sp, #48]
  40a674:	ldp	x26, x25, [sp, #32]
  40a678:	ldp	x28, x27, [sp, #16]
  40a67c:	mov	w0, #0x22                  	// #34
  40a680:	ldp	x29, x30, [sp], #96
  40a684:	b	404ed0 <putc@plt>

000000000040a688 <jsonw_printf@@Base>:
  40a688:	sub	sp, sp, #0x120
  40a68c:	stp	x29, x30, [sp, #240]
  40a690:	add	x29, sp, #0xf0
  40a694:	mov	x8, #0xffffffffffffffd0    	// #-48
  40a698:	mov	x9, sp
  40a69c:	sub	x10, x29, #0x70
  40a6a0:	movk	x8, #0xff80, lsl #32
  40a6a4:	add	x11, x29, #0x30
  40a6a8:	add	x9, x9, #0x80
  40a6ac:	add	x10, x10, #0x30
  40a6b0:	stp	x20, x19, [sp, #272]
  40a6b4:	stp	x2, x3, [x29, #-112]
  40a6b8:	stp	x4, x5, [x29, #-96]
  40a6bc:	stp	x6, x7, [x29, #-80]
  40a6c0:	stp	q1, q2, [sp, #16]
  40a6c4:	stp	q3, q4, [sp, #48]
  40a6c8:	str	q0, [sp]
  40a6cc:	stp	q5, q6, [sp, #80]
  40a6d0:	str	q7, [sp, #112]
  40a6d4:	stp	x9, x8, [x29, #-16]
  40a6d8:	stp	x11, x10, [x29, #-32]
  40a6dc:	mov	x19, x0
  40a6e0:	ldrb	w0, [x0, #13]
  40a6e4:	mov	x20, x1
  40a6e8:	str	x28, [sp, #256]
  40a6ec:	cbz	w0, 40a6f8 <jsonw_printf@@Base+0x70>
  40a6f0:	ldr	x1, [x19]
  40a6f4:	bl	404ed0 <putc@plt>
  40a6f8:	mov	w8, #0x2c                  	// #44
  40a6fc:	strb	w8, [x19, #13]
  40a700:	ldp	q0, q1, [x29, #-32]
  40a704:	ldr	x0, [x19]
  40a708:	sub	x2, x29, #0x40
  40a70c:	mov	x1, x20
  40a710:	stp	q0, q1, [x29, #-64]
  40a714:	bl	4052c0 <vfprintf@plt>
  40a718:	ldp	x20, x19, [sp, #272]
  40a71c:	ldr	x28, [sp, #256]
  40a720:	ldp	x29, x30, [sp, #240]
  40a724:	add	sp, sp, #0x120
  40a728:	ret

000000000040a72c <jsonw_start_object@@Base>:
  40a72c:	stp	x29, x30, [sp, #-32]!
  40a730:	str	x19, [sp, #16]
  40a734:	mov	x19, x0
  40a738:	ldrb	w0, [x0, #13]
  40a73c:	mov	x29, sp
  40a740:	cbz	w0, 40a74c <jsonw_start_object@@Base+0x20>
  40a744:	ldr	x1, [x19]
  40a748:	bl	404ed0 <putc@plt>
  40a74c:	ldr	x1, [x19]
  40a750:	mov	w8, #0x2c                  	// #44
  40a754:	mov	w0, #0x7b                  	// #123
  40a758:	strb	w8, [x19, #13]
  40a75c:	bl	404ed0 <putc@plt>
  40a760:	ldr	w8, [x19, #8]
  40a764:	strb	wzr, [x19, #13]
  40a768:	add	w8, w8, #0x1
  40a76c:	str	w8, [x19, #8]
  40a770:	ldr	x19, [sp, #16]
  40a774:	ldp	x29, x30, [sp], #32
  40a778:	ret

000000000040a77c <jsonw_end_object@@Base>:
  40a77c:	mov	w1, #0x7d                  	// #125
  40a780:	b	40a784 <jsonw_end_object@@Base+0x8>
  40a784:	stp	x29, x30, [sp, #-32]!
  40a788:	stp	x20, x19, [sp, #16]
  40a78c:	ldr	w8, [x0, #8]
  40a790:	mov	x29, sp
  40a794:	cbz	w8, 40a7d8 <jsonw_end_object@@Base+0x5c>
  40a798:	ldrb	w9, [x0, #13]
  40a79c:	mov	x19, x0
  40a7a0:	mov	w20, w1
  40a7a4:	sub	w8, w8, #0x1
  40a7a8:	str	w8, [x0, #8]
  40a7ac:	cbz	w9, 40a7b8 <jsonw_end_object@@Base+0x3c>
  40a7b0:	mov	x0, x19
  40a7b4:	bl	40a4d4 <jsonw_name@@Base+0x78>
  40a7b8:	ldr	x1, [x19]
  40a7bc:	mov	w0, w20
  40a7c0:	bl	404ed0 <putc@plt>
  40a7c4:	mov	w8, #0x2c                  	// #44
  40a7c8:	strb	w8, [x19, #13]
  40a7cc:	ldp	x20, x19, [sp, #16]
  40a7d0:	ldp	x29, x30, [sp], #32
  40a7d4:	ret
  40a7d8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40a7dc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a7e0:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x180>
  40a7e4:	add	x0, x0, #0x9fa
  40a7e8:	add	x1, x1, #0x988
  40a7ec:	add	x3, x3, #0xa0a
  40a7f0:	mov	w2, #0x85                  	// #133
  40a7f4:	bl	4052e0 <__assert_fail@plt>

000000000040a7f8 <jsonw_start_array@@Base>:
  40a7f8:	stp	x29, x30, [sp, #-32]!
  40a7fc:	str	x19, [sp, #16]
  40a800:	mov	x19, x0
  40a804:	ldrb	w0, [x0, #13]
  40a808:	mov	x29, sp
  40a80c:	cbz	w0, 40a818 <jsonw_start_array@@Base+0x20>
  40a810:	ldr	x1, [x19]
  40a814:	bl	404ed0 <putc@plt>
  40a818:	ldr	x1, [x19]
  40a81c:	mov	w8, #0x2c                  	// #44
  40a820:	mov	w0, #0x5b                  	// #91
  40a824:	strb	w8, [x19, #13]
  40a828:	bl	404ed0 <putc@plt>
  40a82c:	ldr	w8, [x19, #8]
  40a830:	ldrb	w9, [x19, #12]
  40a834:	strb	wzr, [x19, #13]
  40a838:	add	w8, w8, #0x1
  40a83c:	str	w8, [x19, #8]
  40a840:	cbz	w9, 40a858 <jsonw_start_array@@Base+0x60>
  40a844:	ldr	x1, [x19]
  40a848:	ldr	x19, [sp, #16]
  40a84c:	mov	w0, #0x20                  	// #32
  40a850:	ldp	x29, x30, [sp], #32
  40a854:	b	404ed0 <putc@plt>
  40a858:	ldr	x19, [sp, #16]
  40a85c:	ldp	x29, x30, [sp], #32
  40a860:	ret

000000000040a864 <jsonw_end_array@@Base>:
  40a864:	stp	x29, x30, [sp, #-32]!
  40a868:	ldrb	w8, [x0, #12]
  40a86c:	str	x19, [sp, #16]
  40a870:	mov	x19, x0
  40a874:	mov	x29, sp
  40a878:	cbz	w8, 40a890 <jsonw_end_array@@Base+0x2c>
  40a87c:	ldrb	w8, [x19, #13]
  40a880:	cbz	w8, 40a890 <jsonw_end_array@@Base+0x2c>
  40a884:	ldr	x1, [x19]
  40a888:	mov	w0, #0x20                  	// #32
  40a88c:	bl	404ed0 <putc@plt>
  40a890:	strb	wzr, [x19, #13]
  40a894:	mov	x0, x19
  40a898:	ldr	x19, [sp, #16]
  40a89c:	mov	w1, #0x5d                  	// #93
  40a8a0:	ldp	x29, x30, [sp], #32
  40a8a4:	b	40a784 <jsonw_end_object@@Base+0x8>

000000000040a8a8 <jsonw_string@@Base>:
  40a8a8:	stp	x29, x30, [sp, #-32]!
  40a8ac:	stp	x20, x19, [sp, #16]
  40a8b0:	mov	x19, x0
  40a8b4:	ldrb	w0, [x0, #13]
  40a8b8:	mov	x20, x1
  40a8bc:	mov	x29, sp
  40a8c0:	cbz	w0, 40a8cc <jsonw_string@@Base+0x24>
  40a8c4:	ldr	x1, [x19]
  40a8c8:	bl	404ed0 <putc@plt>
  40a8cc:	mov	w8, #0x2c                  	// #44
  40a8d0:	strb	w8, [x19, #13]
  40a8d4:	mov	x0, x19
  40a8d8:	mov	x1, x20
  40a8dc:	ldp	x20, x19, [sp, #16]
  40a8e0:	ldp	x29, x30, [sp], #32
  40a8e4:	b	40a53c <jsonw_name@@Base+0xe0>

000000000040a8e8 <jsonw_bool@@Base>:
  40a8e8:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  40a8ec:	adrp	x9, 40d000 <_IO_stdin_used@@Base+0x180>
  40a8f0:	add	x8, x8, #0x875
  40a8f4:	add	x9, x9, #0x870
  40a8f8:	tst	w1, #0x1
  40a8fc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a900:	csel	x2, x9, x8, ne  // ne = any
  40a904:	add	x1, x1, #0x451
  40a908:	b	40a688 <jsonw_printf@@Base>

000000000040a90c <jsonw_null@@Base>:
  40a90c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a910:	add	x1, x1, #0x9bb
  40a914:	b	40a688 <jsonw_printf@@Base>

000000000040a918 <jsonw_float@@Base>:
  40a918:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a91c:	add	x1, x1, #0x9c0
  40a920:	b	40a688 <jsonw_printf@@Base>

000000000040a924 <jsonw_hhu@@Base>:
  40a924:	and	w2, w1, #0xff
  40a928:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a92c:	add	x1, x1, #0x9c3
  40a930:	b	40a688 <jsonw_printf@@Base>

000000000040a934 <jsonw_hu@@Base>:
  40a934:	and	w2, w1, #0xffff
  40a938:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a93c:	add	x1, x1, #0x9c8
  40a940:	b	40a688 <jsonw_printf@@Base>

000000000040a944 <jsonw_uint@@Base>:
  40a944:	mov	w2, w1
  40a948:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a94c:	add	x1, x1, #0x866
  40a950:	b	40a688 <jsonw_printf@@Base>

000000000040a954 <jsonw_u64@@Base>:
  40a954:	mov	x2, x1
  40a958:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a95c:	add	x1, x1, #0x9cc
  40a960:	b	40a688 <jsonw_printf@@Base>

000000000040a964 <jsonw_xint@@Base>:
  40a964:	mov	x2, x1
  40a968:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a96c:	add	x1, x1, #0x9d0
  40a970:	b	40a688 <jsonw_printf@@Base>

000000000040a974 <jsonw_luint@@Base>:
  40a974:	mov	x2, x1
  40a978:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a97c:	add	x1, x1, #0x9cc
  40a980:	b	40a688 <jsonw_printf@@Base>

000000000040a984 <jsonw_lluint@@Base>:
  40a984:	mov	x2, x1
  40a988:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a98c:	add	x1, x1, #0x9d4
  40a990:	b	40a688 <jsonw_printf@@Base>

000000000040a994 <jsonw_int@@Base>:
  40a994:	mov	w2, w1
  40a998:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a99c:	add	x1, x1, #0x7c0
  40a9a0:	b	40a688 <jsonw_printf@@Base>

000000000040a9a4 <jsonw_s64@@Base>:
  40a9a4:	mov	x2, x1
  40a9a8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40a9ac:	add	x1, x1, #0x9d9
  40a9b0:	b	40a688 <jsonw_printf@@Base>

000000000040a9b4 <jsonw_string_field@@Base>:
  40a9b4:	stp	x29, x30, [sp, #-32]!
  40a9b8:	stp	x20, x19, [sp, #16]
  40a9bc:	mov	x29, sp
  40a9c0:	mov	x19, x2
  40a9c4:	mov	x20, x0
  40a9c8:	bl	40a45c <jsonw_name@@Base>
  40a9cc:	mov	x0, x20
  40a9d0:	mov	x1, x19
  40a9d4:	ldp	x20, x19, [sp, #16]
  40a9d8:	ldp	x29, x30, [sp], #32
  40a9dc:	b	40a8a8 <jsonw_string@@Base>

000000000040a9e0 <jsonw_bool_field@@Base>:
  40a9e0:	stp	x29, x30, [sp, #-32]!
  40a9e4:	stp	x20, x19, [sp, #16]
  40a9e8:	mov	x29, sp
  40a9ec:	mov	w19, w2
  40a9f0:	mov	x20, x0
  40a9f4:	bl	40a45c <jsonw_name@@Base>
  40a9f8:	tst	w19, #0x1
  40a9fc:	mov	x0, x20
  40aa00:	ldp	x20, x19, [sp, #16]
  40aa04:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  40aa08:	adrp	x9, 40d000 <_IO_stdin_used@@Base+0x180>
  40aa0c:	add	x8, x8, #0x875
  40aa10:	add	x9, x9, #0x870
  40aa14:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40aa18:	csel	x2, x9, x8, ne  // ne = any
  40aa1c:	add	x1, x1, #0x451
  40aa20:	ldp	x29, x30, [sp], #32
  40aa24:	b	40a688 <jsonw_printf@@Base>

000000000040aa28 <jsonw_float_field@@Base>:
  40aa28:	str	d8, [sp, #-32]!
  40aa2c:	stp	x29, x30, [sp, #8]
  40aa30:	str	x19, [sp, #24]
  40aa34:	mov	x29, sp
  40aa38:	mov	v8.16b, v0.16b
  40aa3c:	mov	x19, x0
  40aa40:	bl	40a45c <jsonw_name@@Base>
  40aa44:	mov	x0, x19
  40aa48:	ldr	x19, [sp, #24]
  40aa4c:	ldp	x29, x30, [sp, #8]
  40aa50:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40aa54:	add	x1, x1, #0x9c0
  40aa58:	mov	v0.16b, v8.16b
  40aa5c:	ldr	d8, [sp], #32
  40aa60:	b	40a688 <jsonw_printf@@Base>

000000000040aa64 <jsonw_uint_field@@Base>:
  40aa64:	stp	x29, x30, [sp, #-32]!
  40aa68:	stp	x20, x19, [sp, #16]
  40aa6c:	mov	x29, sp
  40aa70:	mov	w19, w2
  40aa74:	mov	x20, x0
  40aa78:	bl	40a45c <jsonw_name@@Base>
  40aa7c:	mov	x0, x20
  40aa80:	mov	w2, w19
  40aa84:	ldp	x20, x19, [sp, #16]
  40aa88:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40aa8c:	add	x1, x1, #0x866
  40aa90:	ldp	x29, x30, [sp], #32
  40aa94:	b	40a688 <jsonw_printf@@Base>

000000000040aa98 <jsonw_u64_field@@Base>:
  40aa98:	stp	x29, x30, [sp, #-32]!
  40aa9c:	stp	x20, x19, [sp, #16]
  40aaa0:	mov	x29, sp
  40aaa4:	mov	x19, x2
  40aaa8:	mov	x20, x0
  40aaac:	bl	40a45c <jsonw_name@@Base>
  40aab0:	mov	x0, x20
  40aab4:	mov	x2, x19
  40aab8:	ldp	x20, x19, [sp, #16]
  40aabc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40aac0:	add	x1, x1, #0x9cc
  40aac4:	ldp	x29, x30, [sp], #32
  40aac8:	b	40a688 <jsonw_printf@@Base>

000000000040aacc <jsonw_xint_field@@Base>:
  40aacc:	stp	x29, x30, [sp, #-32]!
  40aad0:	stp	x20, x19, [sp, #16]
  40aad4:	mov	x29, sp
  40aad8:	mov	x19, x2
  40aadc:	mov	x20, x0
  40aae0:	bl	40a45c <jsonw_name@@Base>
  40aae4:	mov	x0, x20
  40aae8:	mov	x2, x19
  40aaec:	ldp	x20, x19, [sp, #16]
  40aaf0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40aaf4:	add	x1, x1, #0x9d0
  40aaf8:	ldp	x29, x30, [sp], #32
  40aafc:	b	40a688 <jsonw_printf@@Base>

000000000040ab00 <jsonw_hhu_field@@Base>:
  40ab00:	stp	x29, x30, [sp, #-32]!
  40ab04:	stp	x20, x19, [sp, #16]
  40ab08:	mov	x29, sp
  40ab0c:	mov	w19, w2
  40ab10:	mov	x20, x0
  40ab14:	bl	40a45c <jsonw_name@@Base>
  40ab18:	and	w2, w19, #0xff
  40ab1c:	mov	x0, x20
  40ab20:	ldp	x20, x19, [sp, #16]
  40ab24:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40ab28:	add	x1, x1, #0x9c3
  40ab2c:	ldp	x29, x30, [sp], #32
  40ab30:	b	40a688 <jsonw_printf@@Base>

000000000040ab34 <jsonw_hu_field@@Base>:
  40ab34:	stp	x29, x30, [sp, #-32]!
  40ab38:	stp	x20, x19, [sp, #16]
  40ab3c:	mov	x29, sp
  40ab40:	mov	w19, w2
  40ab44:	mov	x20, x0
  40ab48:	bl	40a45c <jsonw_name@@Base>
  40ab4c:	and	w2, w19, #0xffff
  40ab50:	mov	x0, x20
  40ab54:	ldp	x20, x19, [sp, #16]
  40ab58:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40ab5c:	add	x1, x1, #0x9c8
  40ab60:	ldp	x29, x30, [sp], #32
  40ab64:	b	40a688 <jsonw_printf@@Base>

000000000040ab68 <jsonw_luint_field@@Base>:
  40ab68:	stp	x29, x30, [sp, #-32]!
  40ab6c:	stp	x20, x19, [sp, #16]
  40ab70:	mov	x29, sp
  40ab74:	mov	x19, x2
  40ab78:	mov	x20, x0
  40ab7c:	bl	40a45c <jsonw_name@@Base>
  40ab80:	mov	x0, x20
  40ab84:	mov	x2, x19
  40ab88:	ldp	x20, x19, [sp, #16]
  40ab8c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40ab90:	add	x1, x1, #0x9cc
  40ab94:	ldp	x29, x30, [sp], #32
  40ab98:	b	40a688 <jsonw_printf@@Base>

000000000040ab9c <jsonw_lluint_field@@Base>:
  40ab9c:	stp	x29, x30, [sp, #-32]!
  40aba0:	stp	x20, x19, [sp, #16]
  40aba4:	mov	x29, sp
  40aba8:	mov	x19, x2
  40abac:	mov	x20, x0
  40abb0:	bl	40a45c <jsonw_name@@Base>
  40abb4:	mov	x0, x20
  40abb8:	mov	x2, x19
  40abbc:	ldp	x20, x19, [sp, #16]
  40abc0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40abc4:	add	x1, x1, #0x9d4
  40abc8:	ldp	x29, x30, [sp], #32
  40abcc:	b	40a688 <jsonw_printf@@Base>

000000000040abd0 <jsonw_int_field@@Base>:
  40abd0:	stp	x29, x30, [sp, #-32]!
  40abd4:	stp	x20, x19, [sp, #16]
  40abd8:	mov	x29, sp
  40abdc:	mov	w19, w2
  40abe0:	mov	x20, x0
  40abe4:	bl	40a45c <jsonw_name@@Base>
  40abe8:	mov	x0, x20
  40abec:	mov	w2, w19
  40abf0:	ldp	x20, x19, [sp, #16]
  40abf4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40abf8:	add	x1, x1, #0x7c0
  40abfc:	ldp	x29, x30, [sp], #32
  40ac00:	b	40a688 <jsonw_printf@@Base>

000000000040ac04 <jsonw_s64_field@@Base>:
  40ac04:	stp	x29, x30, [sp, #-32]!
  40ac08:	stp	x20, x19, [sp, #16]
  40ac0c:	mov	x29, sp
  40ac10:	mov	x19, x2
  40ac14:	mov	x20, x0
  40ac18:	bl	40a45c <jsonw_name@@Base>
  40ac1c:	mov	x0, x20
  40ac20:	mov	x2, x19
  40ac24:	ldp	x20, x19, [sp, #16]
  40ac28:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40ac2c:	add	x1, x1, #0x9d9
  40ac30:	ldp	x29, x30, [sp], #32
  40ac34:	b	40a688 <jsonw_printf@@Base>

000000000040ac38 <jsonw_null_field@@Base>:
  40ac38:	stp	x29, x30, [sp, #-32]!
  40ac3c:	str	x19, [sp, #16]
  40ac40:	mov	x29, sp
  40ac44:	mov	x19, x0
  40ac48:	bl	40a45c <jsonw_name@@Base>
  40ac4c:	mov	x0, x19
  40ac50:	ldr	x19, [sp, #16]
  40ac54:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40ac58:	add	x1, x1, #0x9bb
  40ac5c:	ldp	x29, x30, [sp], #32
  40ac60:	b	40a688 <jsonw_printf@@Base>

000000000040ac64 <nl_dump_ext_ack@@Base>:
  40ac64:	mov	w0, wzr
  40ac68:	ret

000000000040ac6c <nl_dump_ext_ack_done@@Base>:
  40ac6c:	mov	w0, wzr
  40ac70:	ret

000000000040ac74 <rtnl_set_strict_dump@@Base>:
  40ac74:	stp	x29, x30, [sp, #-32]!
  40ac78:	mov	x29, sp
  40ac7c:	mov	w8, #0x1                   	// #1
  40ac80:	str	w8, [x29, #28]
  40ac84:	str	x19, [sp, #16]
  40ac88:	mov	x19, x0
  40ac8c:	ldr	w0, [x0]
  40ac90:	add	x3, x29, #0x1c
  40ac94:	mov	w1, #0x10e                 	// #270
  40ac98:	mov	w2, #0xc                   	// #12
  40ac9c:	mov	w4, #0x4                   	// #4
  40aca0:	bl	404f80 <setsockopt@plt>
  40aca4:	tbnz	w0, #31, 40acb4 <rtnl_set_strict_dump@@Base+0x40>
  40aca8:	ldr	w8, [x19, #48]
  40acac:	orr	w8, w8, #0x4
  40acb0:	str	w8, [x19, #48]
  40acb4:	ldr	x19, [sp, #16]
  40acb8:	ldp	x29, x30, [sp], #32
  40acbc:	ret

000000000040acc0 <rtnl_add_nl_group@@Base>:
  40acc0:	sub	sp, sp, #0x20
  40acc4:	stp	x29, x30, [sp, #16]
  40acc8:	add	x29, sp, #0x10
  40accc:	stur	w1, [x29, #-4]
  40acd0:	ldr	w0, [x0]
  40acd4:	sub	x3, x29, #0x4
  40acd8:	mov	w1, #0x10e                 	// #270
  40acdc:	mov	w2, #0x1                   	// #1
  40ace0:	mov	w4, #0x4                   	// #4
  40ace4:	bl	404f80 <setsockopt@plt>
  40ace8:	ldp	x29, x30, [sp, #16]
  40acec:	add	sp, sp, #0x20
  40acf0:	ret

000000000040acf4 <rtnl_close@@Base>:
  40acf4:	stp	x29, x30, [sp, #-32]!
  40acf8:	str	x19, [sp, #16]
  40acfc:	mov	x19, x0
  40ad00:	ldr	w0, [x0]
  40ad04:	mov	x29, sp
  40ad08:	tbnz	w0, #31, 40ad18 <rtnl_close@@Base+0x24>
  40ad0c:	bl	405090 <close@plt>
  40ad10:	mov	w8, #0xffffffff            	// #-1
  40ad14:	str	w8, [x19]
  40ad18:	ldr	x19, [sp, #16]
  40ad1c:	ldp	x29, x30, [sp], #32
  40ad20:	ret

000000000040ad24 <rtnl_open_byproto@@Base>:
  40ad24:	sub	sp, sp, #0x40
  40ad28:	stp	x29, x30, [sp, #16]
  40ad2c:	stp	x20, x19, [sp, #48]
  40ad30:	add	x29, sp, #0x10
  40ad34:	mov	w20, w1
  40ad38:	mov	w8, #0x8000                	// #32768
  40ad3c:	mov	w9, #0x1                   	// #1
  40ad40:	movi	v0.2d, #0x0
  40ad44:	mov	w1, #0x3                   	// #3
  40ad48:	str	x21, [sp, #32]
  40ad4c:	mov	x19, x0
  40ad50:	str	w8, [x29, #24]
  40ad54:	stur	w9, [x29, #-4]
  40ad58:	stp	q0, q0, [x0, #16]
  40ad5c:	str	xzr, [x0, #48]
  40ad60:	str	q0, [x0]
  40ad64:	str	w2, [x0, #36]
  40ad68:	mov	w0, #0x10                  	// #16
  40ad6c:	movk	w1, #0x8, lsl #16
  40ad70:	bl	4051d0 <socket@plt>
  40ad74:	str	w0, [x19]
  40ad78:	tbnz	w0, #31, 40ae40 <rtnl_open_byproto@@Base+0x11c>
  40ad7c:	add	x3, x29, #0x18
  40ad80:	mov	w1, #0x1                   	// #1
  40ad84:	mov	w2, #0x7                   	// #7
  40ad88:	mov	w4, #0x4                   	// #4
  40ad8c:	bl	404f80 <setsockopt@plt>
  40ad90:	tbnz	w0, #31, 40ae4c <rtnl_open_byproto@@Base+0x128>
  40ad94:	adrp	x3, 41e000 <_IO_stdin_used@@Base+0x11180>
  40ad98:	ldr	w0, [x19]
  40ad9c:	ldr	x3, [x3, #4024]
  40ada0:	mov	w1, #0x1                   	// #1
  40ada4:	mov	w2, #0x8                   	// #8
  40ada8:	mov	w4, #0x4                   	// #4
  40adac:	bl	404f80 <setsockopt@plt>
  40adb0:	tbnz	w0, #31, 40ae58 <rtnl_open_byproto@@Base+0x134>
  40adb4:	ldr	w0, [x19]
  40adb8:	sub	x3, x29, #0x4
  40adbc:	mov	w1, #0x10e                 	// #270
  40adc0:	mov	w2, #0xb                   	// #11
  40adc4:	mov	w4, #0x4                   	// #4
  40adc8:	bl	404f80 <setsockopt@plt>
  40adcc:	mov	x21, x19
  40add0:	str	xzr, [x21, #4]!
  40add4:	mov	w8, #0x10                  	// #16
  40add8:	strh	w8, [x21]
  40addc:	ldr	w0, [x19]
  40ade0:	mov	w2, #0xc                   	// #12
  40ade4:	mov	x1, x21
  40ade8:	str	w20, [x19, #12]
  40adec:	mov	w20, #0xc                   	// #12
  40adf0:	bl	404e90 <bind@plt>
  40adf4:	tbnz	w0, #31, 40ae64 <rtnl_open_byproto@@Base+0x140>
  40adf8:	str	w20, [x29, #28]
  40adfc:	ldr	w0, [x19]
  40ae00:	add	x2, x29, #0x1c
  40ae04:	mov	x1, x21
  40ae08:	bl	405320 <getsockname@plt>
  40ae0c:	tbnz	w0, #31, 40ae70 <rtnl_open_byproto@@Base+0x14c>
  40ae10:	ldr	w2, [x29, #28]
  40ae14:	cmp	w2, #0xc
  40ae18:	b.ne	40ae80 <rtnl_open_byproto@@Base+0x15c>  // b.any
  40ae1c:	ldrh	w2, [x21]
  40ae20:	cmp	w2, #0x10
  40ae24:	b.ne	40ae94 <rtnl_open_byproto@@Base+0x170>  // b.any
  40ae28:	mov	x0, xzr
  40ae2c:	bl	404f60 <time@plt>
  40ae30:	mov	x8, x0
  40ae34:	mov	w0, wzr
  40ae38:	str	w8, [x19, #28]
  40ae3c:	b	40aeb0 <rtnl_open_byproto@@Base+0x18c>
  40ae40:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40ae44:	add	x0, x0, #0xa2f
  40ae48:	b	40ae78 <rtnl_open_byproto@@Base+0x154>
  40ae4c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40ae50:	add	x0, x0, #0xa4a
  40ae54:	b	40ae78 <rtnl_open_byproto@@Base+0x154>
  40ae58:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40ae5c:	add	x0, x0, #0xa54
  40ae60:	b	40ae78 <rtnl_open_byproto@@Base+0x154>
  40ae64:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40ae68:	add	x0, x0, #0xa5e
  40ae6c:	b	40ae78 <rtnl_open_byproto@@Base+0x154>
  40ae70:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40ae74:	add	x0, x0, #0xa79
  40ae78:	bl	404e30 <perror@plt>
  40ae7c:	b	40aeac <rtnl_open_byproto@@Base+0x188>
  40ae80:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40ae84:	ldr	x8, [x8, #3992]
  40ae88:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40ae8c:	add	x1, x1, #0xa8c
  40ae90:	b	40aea4 <rtnl_open_byproto@@Base+0x180>
  40ae94:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40ae98:	ldr	x8, [x8, #3992]
  40ae9c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40aea0:	add	x1, x1, #0xaa5
  40aea4:	ldr	x0, [x8]
  40aea8:	bl	405330 <fprintf@plt>
  40aeac:	mov	w0, #0xffffffff            	// #-1
  40aeb0:	ldp	x20, x19, [sp, #48]
  40aeb4:	ldr	x21, [sp, #32]
  40aeb8:	ldp	x29, x30, [sp, #16]
  40aebc:	add	sp, sp, #0x40
  40aec0:	ret

000000000040aec4 <rtnl_open@@Base>:
  40aec4:	mov	w2, wzr
  40aec8:	b	40ad24 <rtnl_open_byproto@@Base>

000000000040aecc <rtnl_nexthopdump_req@@Base>:
  40aecc:	sub	sp, sp, #0xd0
  40aed0:	add	x8, sp, #0x8
  40aed4:	str	x21, [sp, #176]
  40aed8:	stp	x20, x19, [sp, #192]
  40aedc:	mov	x20, x2
  40aee0:	mov	w21, w1
  40aee4:	mov	x19, x0
  40aee8:	add	x0, x8, #0xc
  40aeec:	mov	w2, #0x8c                  	// #140
  40aef0:	mov	w1, wzr
  40aef4:	stp	x29, x30, [sp, #160]
  40aef8:	add	x29, sp, #0xa0
  40aefc:	bl	404fe0 <memset@plt>
  40af00:	mov	x8, #0x18                  	// #24
  40af04:	movk	x8, #0x6a, lsl #32
  40af08:	movk	x8, #0x301, lsl #48
  40af0c:	str	x8, [sp, #8]
  40af10:	ldr	w8, [x19, #28]
  40af14:	add	w8, w8, #0x1
  40af18:	stp	w8, w8, [x19, #28]
  40af1c:	str	w8, [sp, #16]
  40af20:	strb	w21, [sp, #24]
  40af24:	cbz	x20, 40af38 <rtnl_nexthopdump_req@@Base+0x6c>
  40af28:	add	x0, sp, #0x8
  40af2c:	mov	w1, #0x98                  	// #152
  40af30:	blr	x20
  40af34:	cbnz	w0, 40af4c <rtnl_nexthopdump_req@@Base+0x80>
  40af38:	ldr	w0, [x19]
  40af3c:	add	x1, sp, #0x8
  40af40:	mov	w2, #0x98                  	// #152
  40af44:	mov	w3, wzr
  40af48:	bl	405180 <send@plt>
  40af4c:	ldp	x20, x19, [sp, #192]
  40af50:	ldr	x21, [sp, #176]
  40af54:	ldp	x29, x30, [sp, #160]
  40af58:	add	sp, sp, #0xd0
  40af5c:	ret

000000000040af60 <rtnl_addrdump_req@@Base>:
  40af60:	sub	sp, sp, #0xd0
  40af64:	add	x8, sp, #0x8
  40af68:	str	x21, [sp, #176]
  40af6c:	stp	x20, x19, [sp, #192]
  40af70:	mov	x20, x2
  40af74:	mov	w21, w1
  40af78:	mov	x19, x0
  40af7c:	add	x0, x8, #0xc
  40af80:	mov	w2, #0x8c                  	// #140
  40af84:	mov	w1, wzr
  40af88:	stp	x29, x30, [sp, #160]
  40af8c:	add	x29, sp, #0xa0
  40af90:	bl	404fe0 <memset@plt>
  40af94:	mov	x8, #0x18                  	// #24
  40af98:	movk	x8, #0x16, lsl #32
  40af9c:	movk	x8, #0x301, lsl #48
  40afa0:	str	x8, [sp, #8]
  40afa4:	ldr	w8, [x19, #28]
  40afa8:	add	w8, w8, #0x1
  40afac:	stp	w8, w8, [x19, #28]
  40afb0:	str	w8, [sp, #16]
  40afb4:	strb	w21, [sp, #24]
  40afb8:	cbz	x20, 40afcc <rtnl_addrdump_req@@Base+0x6c>
  40afbc:	add	x0, sp, #0x8
  40afc0:	mov	w1, #0x98                  	// #152
  40afc4:	blr	x20
  40afc8:	cbnz	w0, 40afe0 <rtnl_addrdump_req@@Base+0x80>
  40afcc:	ldr	w0, [x19]
  40afd0:	add	x1, sp, #0x8
  40afd4:	mov	w2, #0x98                  	// #152
  40afd8:	mov	w3, wzr
  40afdc:	bl	405180 <send@plt>
  40afe0:	ldp	x20, x19, [sp, #192]
  40afe4:	ldr	x21, [sp, #176]
  40afe8:	ldp	x29, x30, [sp, #160]
  40afec:	add	sp, sp, #0xd0
  40aff0:	ret

000000000040aff4 <rtnl_addrlbldump_req@@Base>:
  40aff4:	sub	sp, sp, #0x30
  40aff8:	mov	x8, #0x1c                  	// #28
  40affc:	movk	x8, #0x4a, lsl #32
  40b000:	movk	x8, #0x301, lsl #48
  40b004:	stp	x29, x30, [sp, #32]
  40b008:	str	x8, [sp]
  40b00c:	ldr	w8, [x0, #28]
  40b010:	mov	w2, #0x1c                  	// #28
  40b014:	mov	w3, wzr
  40b018:	add	x29, sp, #0x20
  40b01c:	add	w8, w8, #0x1
  40b020:	stp	w8, w8, [x0, #28]
  40b024:	stp	w8, wzr, [sp, #8]
  40b028:	strb	w1, [sp, #16]
  40b02c:	stur	xzr, [sp, #17]
  40b030:	str	wzr, [sp, #24]
  40b034:	ldr	w0, [x0]
  40b038:	mov	x1, sp
  40b03c:	bl	405180 <send@plt>
  40b040:	ldp	x29, x30, [sp, #32]
  40b044:	add	sp, sp, #0x30
  40b048:	ret

000000000040b04c <rtnl_routedump_req@@Base>:
  40b04c:	sub	sp, sp, #0xd0
  40b050:	mov	x8, sp
  40b054:	str	x21, [sp, #176]
  40b058:	stp	x20, x19, [sp, #192]
  40b05c:	mov	x20, x2
  40b060:	mov	w21, w1
  40b064:	mov	x19, x0
  40b068:	add	x0, x8, #0xc
  40b06c:	mov	w2, #0x90                  	// #144
  40b070:	mov	w1, wzr
  40b074:	stp	x29, x30, [sp, #160]
  40b078:	add	x29, sp, #0xa0
  40b07c:	bl	404fe0 <memset@plt>
  40b080:	mov	x8, #0x1c                  	// #28
  40b084:	movk	x8, #0x1a, lsl #32
  40b088:	movk	x8, #0x301, lsl #48
  40b08c:	str	x8, [sp]
  40b090:	ldr	w8, [x19, #28]
  40b094:	add	w8, w8, #0x1
  40b098:	stp	w8, w8, [x19, #28]
  40b09c:	str	w8, [sp, #8]
  40b0a0:	strb	w21, [sp, #16]
  40b0a4:	cbz	x20, 40b0b8 <rtnl_routedump_req@@Base+0x6c>
  40b0a8:	mov	x0, sp
  40b0ac:	mov	w1, #0x9c                  	// #156
  40b0b0:	blr	x20
  40b0b4:	cbnz	w0, 40b0cc <rtnl_routedump_req@@Base+0x80>
  40b0b8:	ldr	w0, [x19]
  40b0bc:	mov	x1, sp
  40b0c0:	mov	w2, #0x9c                  	// #156
  40b0c4:	mov	w3, wzr
  40b0c8:	bl	405180 <send@plt>
  40b0cc:	ldp	x20, x19, [sp, #192]
  40b0d0:	ldr	x21, [sp, #176]
  40b0d4:	ldp	x29, x30, [sp, #160]
  40b0d8:	add	sp, sp, #0xd0
  40b0dc:	ret

000000000040b0e0 <rtnl_ruledump_req@@Base>:
  40b0e0:	sub	sp, sp, #0x30
  40b0e4:	mov	x8, #0x1c                  	// #28
  40b0e8:	movk	x8, #0x22, lsl #32
  40b0ec:	movk	x8, #0x301, lsl #48
  40b0f0:	stp	x29, x30, [sp, #32]
  40b0f4:	str	x8, [sp]
  40b0f8:	ldr	w8, [x0, #28]
  40b0fc:	mov	w2, #0x1c                  	// #28
  40b100:	mov	w3, wzr
  40b104:	add	x29, sp, #0x20
  40b108:	add	w8, w8, #0x1
  40b10c:	stp	w8, w8, [x0, #28]
  40b110:	stp	w8, wzr, [sp, #8]
  40b114:	strb	w1, [sp, #16]
  40b118:	stur	xzr, [sp, #17]
  40b11c:	str	wzr, [sp, #24]
  40b120:	ldr	w0, [x0]
  40b124:	mov	x1, sp
  40b128:	bl	405180 <send@plt>
  40b12c:	ldp	x29, x30, [sp, #32]
  40b130:	add	sp, sp, #0x30
  40b134:	ret

000000000040b138 <rtnl_neighdump_req@@Base>:
  40b138:	sub	sp, sp, #0x150
  40b13c:	mov	x8, sp
  40b140:	stp	x28, x21, [sp, #304]
  40b144:	stp	x20, x19, [sp, #320]
  40b148:	mov	x20, x2
  40b14c:	mov	w21, w1
  40b150:	mov	x19, x0
  40b154:	add	x0, x8, #0xc
  40b158:	mov	w2, #0x110                 	// #272
  40b15c:	mov	w1, wzr
  40b160:	stp	x29, x30, [sp, #288]
  40b164:	add	x29, sp, #0x120
  40b168:	bl	404fe0 <memset@plt>
  40b16c:	mov	x8, #0x1c                  	// #28
  40b170:	movk	x8, #0x1e, lsl #32
  40b174:	movk	x8, #0x301, lsl #48
  40b178:	str	x8, [sp]
  40b17c:	ldr	w8, [x19, #28]
  40b180:	add	w8, w8, #0x1
  40b184:	stp	w8, w8, [x19, #28]
  40b188:	str	w8, [sp, #8]
  40b18c:	strb	w21, [sp, #16]
  40b190:	cbz	x20, 40b1a4 <rtnl_neighdump_req@@Base+0x6c>
  40b194:	mov	x0, sp
  40b198:	mov	w1, #0x11c                 	// #284
  40b19c:	blr	x20
  40b1a0:	cbnz	w0, 40b1b8 <rtnl_neighdump_req@@Base+0x80>
  40b1a4:	ldr	w0, [x19]
  40b1a8:	mov	x1, sp
  40b1ac:	mov	w2, #0x11c                 	// #284
  40b1b0:	mov	w3, wzr
  40b1b4:	bl	405180 <send@plt>
  40b1b8:	ldp	x20, x19, [sp, #320]
  40b1bc:	ldp	x28, x21, [sp, #304]
  40b1c0:	ldp	x29, x30, [sp, #288]
  40b1c4:	add	sp, sp, #0x150
  40b1c8:	ret

000000000040b1cc <rtnl_neightbldump_req@@Base>:
  40b1cc:	sub	sp, sp, #0x30
  40b1d0:	mov	x8, #0x14                  	// #20
  40b1d4:	movk	x8, #0x42, lsl #32
  40b1d8:	movk	x8, #0x301, lsl #48
  40b1dc:	stp	x29, x30, [sp, #32]
  40b1e0:	str	x8, [sp, #8]
  40b1e4:	ldr	w8, [x0, #28]
  40b1e8:	mov	w2, #0x14                  	// #20
  40b1ec:	mov	w3, wzr
  40b1f0:	add	x29, sp, #0x20
  40b1f4:	add	w8, w8, #0x1
  40b1f8:	stp	w8, w8, [x0, #28]
  40b1fc:	stp	w8, wzr, [sp, #16]
  40b200:	strb	w1, [sp, #24]
  40b204:	strb	wzr, [sp, #25]
  40b208:	strh	wzr, [sp, #26]
  40b20c:	ldr	w0, [x0]
  40b210:	add	x1, sp, #0x8
  40b214:	bl	405180 <send@plt>
  40b218:	ldp	x29, x30, [sp, #32]
  40b21c:	add	sp, sp, #0x30
  40b220:	ret

000000000040b224 <rtnl_mdbdump_req@@Base>:
  40b224:	sub	sp, sp, #0x30
  40b228:	mov	x8, #0x18                  	// #24
  40b22c:	movk	x8, #0x56, lsl #32
  40b230:	movk	x8, #0x301, lsl #48
  40b234:	stp	x29, x30, [sp, #32]
  40b238:	str	x8, [sp, #8]
  40b23c:	ldr	w8, [x0, #28]
  40b240:	mov	w2, #0x18                  	// #24
  40b244:	mov	w3, wzr
  40b248:	add	x29, sp, #0x20
  40b24c:	add	w8, w8, #0x1
  40b250:	stp	w8, w8, [x0, #28]
  40b254:	stp	w8, wzr, [sp, #16]
  40b258:	strb	w1, [sp, #24]
  40b25c:	str	wzr, [sp, #28]
  40b260:	ldr	w0, [x0]
  40b264:	add	x1, sp, #0x8
  40b268:	bl	405180 <send@plt>
  40b26c:	ldp	x29, x30, [sp, #32]
  40b270:	add	sp, sp, #0x30
  40b274:	ret

000000000040b278 <rtnl_netconfdump_req@@Base>:
  40b278:	sub	sp, sp, #0x30
  40b27c:	mov	x8, #0x14                  	// #20
  40b280:	movk	x8, #0x52, lsl #32
  40b284:	movk	x8, #0x301, lsl #48
  40b288:	stp	x29, x30, [sp, #32]
  40b28c:	str	x8, [sp, #8]
  40b290:	ldr	w8, [x0, #28]
  40b294:	mov	w2, #0x14                  	// #20
  40b298:	mov	w3, wzr
  40b29c:	add	x29, sp, #0x20
  40b2a0:	add	w8, w8, #0x1
  40b2a4:	stp	w8, w8, [x0, #28]
  40b2a8:	stp	w8, wzr, [sp, #16]
  40b2ac:	strb	w1, [sp, #24]
  40b2b0:	ldr	w0, [x0]
  40b2b4:	add	x1, sp, #0x8
  40b2b8:	bl	405180 <send@plt>
  40b2bc:	ldp	x29, x30, [sp, #32]
  40b2c0:	add	sp, sp, #0x30
  40b2c4:	ret

000000000040b2c8 <rtnl_nsiddump_req_filter_fn@@Base>:
  40b2c8:	stp	x29, x30, [sp, #-48]!
  40b2cc:	stp	x28, x21, [sp, #16]
  40b2d0:	stp	x20, x19, [sp, #32]
  40b2d4:	mov	x29, sp
  40b2d8:	sub	sp, sp, #0x420
  40b2dc:	add	x8, sp, #0x8
  40b2e0:	mov	x20, x2
  40b2e4:	mov	w21, w1
  40b2e8:	mov	x19, x0
  40b2ec:	add	x0, x8, #0xc
  40b2f0:	mov	w2, #0x408                 	// #1032
  40b2f4:	mov	w1, wzr
  40b2f8:	bl	404fe0 <memset@plt>
  40b2fc:	mov	x8, #0x14                  	// #20
  40b300:	movk	x8, #0x5a, lsl #32
  40b304:	movk	x8, #0x301, lsl #48
  40b308:	str	x8, [sp, #8]
  40b30c:	ldr	w8, [x19, #28]
  40b310:	add	w8, w8, #0x1
  40b314:	stp	w8, w8, [x19, #28]
  40b318:	str	w8, [sp, #16]
  40b31c:	strb	w21, [sp, #24]
  40b320:	cbz	x20, 40b34c <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40b324:	add	x0, sp, #0x8
  40b328:	mov	w1, #0x414                 	// #1044
  40b32c:	blr	x20
  40b330:	cbnz	w0, 40b350 <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40b334:	ldr	w0, [x19]
  40b338:	ldr	w2, [sp, #8]
  40b33c:	add	x1, sp, #0x8
  40b340:	mov	w3, wzr
  40b344:	bl	405180 <send@plt>
  40b348:	b	40b350 <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40b34c:	mov	w0, #0xffffffea            	// #-22
  40b350:	add	sp, sp, #0x420
  40b354:	ldp	x20, x19, [sp, #32]
  40b358:	ldp	x28, x21, [sp, #16]
  40b35c:	ldp	x29, x30, [sp], #48
  40b360:	ret

000000000040b364 <rtnl_linkdump_req@@Base>:
  40b364:	cbz	w1, 40b36c <rtnl_linkdump_req@@Base+0x8>
  40b368:	b	40b3e8 <rtnl_linkdump_req_filter@@Base+0x74>
  40b36c:	mov	w2, #0x1                   	// #1
  40b370:	b	40b374 <rtnl_linkdump_req_filter@@Base>

000000000040b374 <rtnl_linkdump_req_filter@@Base>:
  40b374:	cmp	w1, #0x7
  40b378:	b.eq	40b380 <rtnl_linkdump_req_filter@@Base+0xc>  // b.none
  40b37c:	cbnz	w1, 40b3e4 <rtnl_linkdump_req_filter@@Base+0x70>
  40b380:	sub	sp, sp, #0x40
  40b384:	mov	x8, #0x28                  	// #40
  40b388:	movk	x8, #0x12, lsl #32
  40b38c:	movk	x8, #0x301, lsl #48
  40b390:	stp	x29, x30, [sp, #48]
  40b394:	str	x8, [sp, #8]
  40b398:	ldr	w8, [x0, #28]
  40b39c:	mov	w9, #0x8                   	// #8
  40b3a0:	movk	w9, #0x1d, lsl #16
  40b3a4:	mov	w3, wzr
  40b3a8:	add	w8, w8, #0x1
  40b3ac:	stp	w8, w8, [x0, #28]
  40b3b0:	stp	w8, wzr, [sp, #16]
  40b3b4:	strb	w1, [sp, #24]
  40b3b8:	stur	xzr, [sp, #25]
  40b3bc:	str	xzr, [sp, #32]
  40b3c0:	stp	w9, w2, [sp, #40]
  40b3c4:	ldr	w0, [x0]
  40b3c8:	add	x1, sp, #0x8
  40b3cc:	mov	w2, #0x28                  	// #40
  40b3d0:	add	x29, sp, #0x30
  40b3d4:	bl	405180 <send@plt>
  40b3d8:	ldp	x29, x30, [sp, #48]
  40b3dc:	add	sp, sp, #0x40
  40b3e0:	ret
  40b3e4:	b	40b3e8 <rtnl_linkdump_req_filter@@Base+0x74>
  40b3e8:	sub	sp, sp, #0x30
  40b3ec:	mov	x8, #0x20                  	// #32
  40b3f0:	movk	x8, #0x12, lsl #32
  40b3f4:	movk	x8, #0x301, lsl #48
  40b3f8:	stp	x29, x30, [sp, #32]
  40b3fc:	str	x8, [sp]
  40b400:	ldr	w8, [x0, #28]
  40b404:	mov	w2, #0x20                  	// #32
  40b408:	mov	w3, wzr
  40b40c:	add	x29, sp, #0x20
  40b410:	add	w8, w8, #0x1
  40b414:	stp	w8, w8, [x0, #28]
  40b418:	stp	w8, wzr, [sp, #8]
  40b41c:	strb	w1, [sp, #16]
  40b420:	stur	xzr, [sp, #17]
  40b424:	str	xzr, [sp, #24]
  40b428:	ldr	w0, [x0]
  40b42c:	mov	x1, sp
  40b430:	bl	405180 <send@plt>
  40b434:	ldp	x29, x30, [sp, #32]
  40b438:	add	sp, sp, #0x30
  40b43c:	ret

000000000040b440 <rtnl_linkdump_req_filter_fn@@Base>:
  40b440:	stp	x29, x30, [sp, #-48]!
  40b444:	stp	x28, x21, [sp, #16]
  40b448:	stp	x20, x19, [sp, #32]
  40b44c:	mov	x29, sp
  40b450:	sub	sp, sp, #0x420
  40b454:	mov	x20, x2
  40b458:	mov	w21, w1
  40b45c:	cmp	w1, #0x11
  40b460:	mov	x19, x0
  40b464:	b.eq	40b46c <rtnl_linkdump_req_filter_fn@@Base+0x2c>  // b.none
  40b468:	cbnz	w21, 40b4d0 <rtnl_linkdump_req_filter_fn@@Base+0x90>
  40b46c:	mov	x8, sp
  40b470:	add	x0, x8, #0xc
  40b474:	mov	w2, #0x414                 	// #1044
  40b478:	mov	w1, wzr
  40b47c:	bl	404fe0 <memset@plt>
  40b480:	mov	x8, #0x20                  	// #32
  40b484:	movk	x8, #0x12, lsl #32
  40b488:	movk	x8, #0x301, lsl #48
  40b48c:	str	x8, [sp]
  40b490:	ldr	w8, [x19, #28]
  40b494:	add	w8, w8, #0x1
  40b498:	stp	w8, w8, [x19, #28]
  40b49c:	str	w8, [sp, #8]
  40b4a0:	strb	w21, [sp, #16]
  40b4a4:	cbz	x20, 40b4ec <rtnl_linkdump_req_filter_fn@@Base+0xac>
  40b4a8:	mov	x0, sp
  40b4ac:	mov	w1, #0x420                 	// #1056
  40b4b0:	blr	x20
  40b4b4:	cbnz	w0, 40b4f0 <rtnl_linkdump_req_filter_fn@@Base+0xb0>
  40b4b8:	ldr	w0, [x19]
  40b4bc:	ldr	w2, [sp]
  40b4c0:	mov	x1, sp
  40b4c4:	mov	w3, wzr
  40b4c8:	bl	405180 <send@plt>
  40b4cc:	b	40b4f0 <rtnl_linkdump_req_filter_fn@@Base+0xb0>
  40b4d0:	mov	x0, x19
  40b4d4:	mov	w1, w21
  40b4d8:	add	sp, sp, #0x420
  40b4dc:	ldp	x20, x19, [sp, #32]
  40b4e0:	ldp	x28, x21, [sp, #16]
  40b4e4:	ldp	x29, x30, [sp], #48
  40b4e8:	b	40b3e8 <rtnl_linkdump_req_filter@@Base+0x74>
  40b4ec:	mov	w0, #0xffffffea            	// #-22
  40b4f0:	add	sp, sp, #0x420
  40b4f4:	ldp	x20, x19, [sp, #32]
  40b4f8:	ldp	x28, x21, [sp, #16]
  40b4fc:	ldp	x29, x30, [sp], #48
  40b500:	ret

000000000040b504 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40b504:	sub	sp, sp, #0xc0
  40b508:	mov	x8, sp
  40b50c:	stp	x20, x19, [sp, #176]
  40b510:	mov	x20, x1
  40b514:	mov	x19, x0
  40b518:	add	x0, x8, #0xc
  40b51c:	mov	w2, #0x94                  	// #148
  40b520:	mov	w1, wzr
  40b524:	stp	x29, x30, [sp, #160]
  40b528:	add	x29, sp, #0xa0
  40b52c:	bl	404fe0 <memset@plt>
  40b530:	mov	x8, #0x20                  	// #32
  40b534:	movk	x8, #0x1e, lsl #32
  40b538:	movk	x8, #0x301, lsl #48
  40b53c:	str	x8, [sp]
  40b540:	ldr	w8, [x19, #28]
  40b544:	mov	w9, #0x7                   	// #7
  40b548:	mov	x0, sp
  40b54c:	mov	w1, #0xa0                  	// #160
  40b550:	add	w8, w8, #0x1
  40b554:	stp	w8, w8, [x19, #28]
  40b558:	str	w8, [sp, #8]
  40b55c:	strb	w9, [sp, #16]
  40b560:	blr	x20
  40b564:	cbnz	w0, 40b57c <rtnl_fdb_linkdump_req_filter_fn@@Base+0x78>
  40b568:	ldr	w0, [x19]
  40b56c:	mov	x1, sp
  40b570:	mov	w2, #0xa0                  	// #160
  40b574:	mov	w3, wzr
  40b578:	bl	405180 <send@plt>
  40b57c:	ldp	x20, x19, [sp, #176]
  40b580:	ldp	x29, x30, [sp, #160]
  40b584:	add	sp, sp, #0xc0
  40b588:	ret

000000000040b58c <rtnl_statsdump_req_filter@@Base>:
  40b58c:	sub	sp, sp, #0x30
  40b590:	mov	x8, #0x1c                  	// #28
  40b594:	movk	x8, #0x5e, lsl #32
  40b598:	movk	x8, #0x301, lsl #48
  40b59c:	stp	x29, x30, [sp, #32]
  40b5a0:	stp	xzr, xzr, [sp, #8]
  40b5a4:	str	x8, [sp]
  40b5a8:	ldr	w8, [x0, #28]
  40b5ac:	mov	w3, wzr
  40b5b0:	add	x29, sp, #0x20
  40b5b4:	add	w8, w8, #0x1
  40b5b8:	stp	w8, w8, [x0, #28]
  40b5bc:	stp	w8, wzr, [sp, #8]
  40b5c0:	strb	w1, [sp, #16]
  40b5c4:	str	w2, [sp, #24]
  40b5c8:	ldr	w0, [x0]
  40b5cc:	mov	x1, sp
  40b5d0:	mov	w2, #0x1c                  	// #28
  40b5d4:	bl	405180 <send@plt>
  40b5d8:	ldp	x29, x30, [sp, #32]
  40b5dc:	add	sp, sp, #0x30
  40b5e0:	ret

000000000040b5e4 <rtnl_send@@Base>:
  40b5e4:	stp	x29, x30, [sp, #-16]!
  40b5e8:	ldr	w0, [x0]
  40b5ec:	mov	w3, wzr
  40b5f0:	sxtw	x2, w2
  40b5f4:	mov	x29, sp
  40b5f8:	bl	405180 <send@plt>
  40b5fc:	ldp	x29, x30, [sp], #16
  40b600:	ret

000000000040b604 <rtnl_send_check@@Base>:
  40b604:	stp	x29, x30, [sp, #-32]!
  40b608:	stp	x28, x19, [sp, #16]
  40b60c:	mov	x29, sp
  40b610:	sub	sp, sp, #0x400
  40b614:	mov	x19, x0
  40b618:	ldr	w0, [x0]
  40b61c:	mov	w3, wzr
  40b620:	sxtw	x2, w2
  40b624:	bl	405180 <send@plt>
  40b628:	mov	x8, x0
  40b62c:	tbnz	w8, #31, 40b6c8 <rtnl_send_check@@Base+0xc4>
  40b630:	ldr	w0, [x19]
  40b634:	mov	x1, sp
  40b638:	mov	w2, #0x400                 	// #1024
  40b63c:	mov	w3, #0x42                  	// #66
  40b640:	bl	4050b0 <recv@plt>
  40b644:	tbnz	w0, #31, 40b698 <rtnl_send_check@@Base+0x94>
  40b648:	cmp	w0, #0x10
  40b64c:	b.lt	40b690 <rtnl_send_check@@Base+0x8c>  // b.tstop
  40b650:	mov	x9, sp
  40b654:	ldr	w10, [x9]
  40b658:	mov	w8, wzr
  40b65c:	cmp	w10, #0x10
  40b660:	b.cc	40b6c8 <rtnl_send_check@@Base+0xc4>  // b.lo, b.ul, b.last
  40b664:	cmp	w10, w0
  40b668:	b.hi	40b6c8 <rtnl_send_check@@Base+0xc4>  // b.pmore
  40b66c:	ldrh	w8, [x9, #4]
  40b670:	cmp	w8, #0x2
  40b674:	b.eq	40b6ac <rtnl_send_check@@Base+0xa8>  // b.none
  40b678:	add	w8, w10, #0x3
  40b67c:	and	w8, w8, #0xfffffffc
  40b680:	sub	w0, w0, w8
  40b684:	cmp	w0, #0xf
  40b688:	add	x9, x9, x8
  40b68c:	b.gt	40b654 <rtnl_send_check@@Base+0x50>
  40b690:	mov	w8, wzr
  40b694:	b	40b6c8 <rtnl_send_check@@Base+0xc4>
  40b698:	bl	4052f0 <__errno_location@plt>
  40b69c:	ldr	w8, [x0]
  40b6a0:	cmp	w8, #0xb
  40b6a4:	csetm	w8, ne  // ne = any
  40b6a8:	b	40b6c8 <rtnl_send_check@@Base+0xc4>
  40b6ac:	cmp	w10, #0x23
  40b6b0:	b.ls	40b6dc <rtnl_send_check@@Base+0xd8>  // b.plast
  40b6b4:	ldr	w8, [x9, #16]
  40b6b8:	neg	w19, w8
  40b6bc:	bl	4052f0 <__errno_location@plt>
  40b6c0:	str	w19, [x0]
  40b6c4:	mov	w8, #0xffffffff            	// #-1
  40b6c8:	mov	w0, w8
  40b6cc:	add	sp, sp, #0x400
  40b6d0:	ldp	x28, x19, [sp, #16]
  40b6d4:	ldp	x29, x30, [sp], #32
  40b6d8:	ret
  40b6dc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40b6e0:	ldr	x8, [x8, #3992]
  40b6e4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40b6e8:	add	x0, x0, #0xabe
  40b6ec:	mov	w1, #0x10                  	// #16
  40b6f0:	ldr	x3, [x8]
  40b6f4:	mov	w2, #0x1                   	// #1
  40b6f8:	bl	4051c0 <fwrite@plt>
  40b6fc:	b	40b6c4 <rtnl_send_check@@Base+0xc0>

000000000040b700 <rtnl_dump_request@@Base>:
  40b700:	sub	sp, sp, #0x90
  40b704:	stp	x29, x30, [sp, #128]
  40b708:	add	x29, sp, #0x80
  40b70c:	add	w8, w3, #0x10
  40b710:	mov	w9, #0x301                 	// #769
  40b714:	sturh	w1, [x29, #-12]
  40b718:	adrp	x10, 40d000 <_IO_stdin_used@@Base+0x180>
  40b71c:	stur	w8, [x29, #-16]
  40b720:	sturh	w9, [x29, #-10]
  40b724:	add	x10, x10, #0xdc8
  40b728:	ldr	w8, [x0, #28]
  40b72c:	ldr	x13, [x10]
  40b730:	ldr	w10, [x10, #8]
  40b734:	sub	x11, x29, #0x10
  40b738:	mov	w12, #0x10                  	// #16
  40b73c:	sxtw	x9, w3
  40b740:	add	w8, w8, #0x1
  40b744:	stp	w8, w8, [x0, #28]
  40b748:	stur	x13, [x29, #-32]
  40b74c:	sub	x13, x29, #0x20
  40b750:	stur	w10, [x29, #-24]
  40b754:	mov	w10, #0xc                   	// #12
  40b758:	stp	x11, x12, [sp, #64]
  40b75c:	add	x11, sp, #0x40
  40b760:	stp	x2, x9, [sp, #80]
  40b764:	mov	w9, #0x2                   	// #2
  40b768:	stp	w8, wzr, [x29, #-8]
  40b76c:	str	x13, [sp, #8]
  40b770:	str	w10, [sp, #16]
  40b774:	stp	x11, x9, [sp, #24]
  40b778:	stp	xzr, xzr, [sp, #40]
  40b77c:	str	wzr, [sp, #56]
  40b780:	ldr	w0, [x0]
  40b784:	add	x1, sp, #0x8
  40b788:	mov	w2, wzr
  40b78c:	bl	405000 <sendmsg@plt>
  40b790:	ldp	x29, x30, [sp, #128]
  40b794:	add	sp, sp, #0x90
  40b798:	ret

000000000040b79c <rtnl_dump_request_n@@Base>:
  40b79c:	sub	sp, sp, #0x70
  40b7a0:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  40b7a4:	add	x8, x8, #0xdc8
  40b7a8:	ldr	x9, [x8]
  40b7ac:	ldr	w8, [x8, #8]
  40b7b0:	stp	x29, x30, [sp, #96]
  40b7b4:	add	x29, sp, #0x60
  40b7b8:	stur	x9, [x29, #-16]
  40b7bc:	stur	w8, [x29, #-8]
  40b7c0:	ldr	w8, [x1]
  40b7c4:	sub	x10, x29, #0x10
  40b7c8:	mov	w9, #0xc                   	// #12
  40b7cc:	str	x10, [sp, #8]
  40b7d0:	sub	x10, x29, #0x20
  40b7d4:	str	w9, [sp, #16]
  40b7d8:	mov	w9, #0x1                   	// #1
  40b7dc:	stp	x10, x9, [sp, #24]
  40b7e0:	mov	w9, #0x301                 	// #769
  40b7e4:	stp	xzr, xzr, [sp, #40]
  40b7e8:	str	wzr, [sp, #56]
  40b7ec:	stp	x1, x8, [x29, #-32]
  40b7f0:	strh	w9, [x1, #6]
  40b7f4:	str	wzr, [x1, #12]
  40b7f8:	ldr	w8, [x0, #28]
  40b7fc:	mov	w2, wzr
  40b800:	add	w8, w8, #0x1
  40b804:	stp	w8, w8, [x0, #28]
  40b808:	str	w8, [x1, #8]
  40b80c:	ldr	w0, [x0]
  40b810:	add	x1, sp, #0x8
  40b814:	bl	405000 <sendmsg@plt>
  40b818:	ldp	x29, x30, [sp, #96]
  40b81c:	add	sp, sp, #0x70
  40b820:	ret

000000000040b824 <rtnl_dump_filter_nc@@Base>:
  40b824:	sub	sp, sp, #0xf0
  40b828:	stp	x29, x30, [sp, #144]
  40b82c:	add	x29, sp, #0x90
  40b830:	sub	x8, x29, #0x10
  40b834:	mov	w9, #0xc                   	// #12
  40b838:	str	x8, [sp, #56]
  40b83c:	sub	x8, x29, #0x20
  40b840:	str	w9, [sp, #64]
  40b844:	mov	w9, #0x1                   	// #1
  40b848:	stp	x28, x27, [sp, #160]
  40b84c:	stp	x26, x25, [sp, #176]
  40b850:	stp	x24, x23, [sp, #192]
  40b854:	stp	x22, x21, [sp, #208]
  40b858:	stp	x20, x19, [sp, #224]
  40b85c:	stp	x1, x2, [sp]
  40b860:	strh	w3, [sp, #16]
  40b864:	stp	xzr, xzr, [sp, #32]
  40b868:	str	xzr, [sp, #24]
  40b86c:	stp	xzr, xzr, [sp, #88]
  40b870:	stp	x8, x9, [sp, #72]
  40b874:	str	wzr, [sp, #104]
  40b878:	mov	x19, x0
  40b87c:	ldr	w0, [x0]
  40b880:	mov	x20, x1
  40b884:	add	x1, sp, #0x38
  40b888:	add	x2, sp, #0x30
  40b88c:	bl	40cc5c <__parse_rtattr_nested_compat@@Base+0x6c>
  40b890:	mov	w22, w0
  40b894:	tbnz	w0, #31, 40ba64 <rtnl_dump_filter_nc@@Base+0x240>
  40b898:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x180>
  40b89c:	mov	w27, wzr
  40b8a0:	add	x21, x21, #0xb64
  40b8a4:	ldr	x3, [x19, #40]
  40b8a8:	cbz	x3, 40b8c0 <rtnl_dump_filter_nc@@Base+0x9c>
  40b8ac:	ldr	x0, [sp, #48]
  40b8b0:	add	w8, w22, #0x3
  40b8b4:	and	w2, w8, #0xfffffffc
  40b8b8:	mov	w1, #0x1                   	// #1
  40b8bc:	bl	4051c0 <fwrite@plt>
  40b8c0:	cbz	x20, 40b9b4 <rtnl_dump_filter_nc@@Base+0x190>
  40b8c4:	mov	w26, wzr
  40b8c8:	mov	x28, sp
  40b8cc:	cmp	w22, #0x10
  40b8d0:	b.lt	40b97c <rtnl_dump_filter_nc@@Base+0x158>  // b.tstop
  40b8d4:	ldr	x24, [sp, #48]
  40b8d8:	mov	w23, w22
  40b8dc:	ldr	w8, [x24]
  40b8e0:	cmp	w8, #0x10
  40b8e4:	b.cc	40b980 <rtnl_dump_filter_nc@@Base+0x15c>  // b.lo, b.ul, b.last
  40b8e8:	cmp	w8, w23
  40b8ec:	b.hi	40b980 <rtnl_dump_filter_nc@@Base+0x15c>  // b.pmore
  40b8f0:	ldrh	w9, [x28, #16]
  40b8f4:	ldrh	w10, [x24, #6]
  40b8f8:	bic	w9, w10, w9
  40b8fc:	strh	w9, [x24, #6]
  40b900:	ldur	w10, [x29, #-12]
  40b904:	cbnz	w10, 40b960 <rtnl_dump_filter_nc@@Base+0x13c>
  40b908:	ldr	w10, [x24, #12]
  40b90c:	ldr	w11, [x19, #8]
  40b910:	cmp	w10, w11
  40b914:	b.ne	40b960 <rtnl_dump_filter_nc@@Base+0x13c>  // b.any
  40b918:	ldr	w10, [x24, #8]
  40b91c:	ldr	w11, [x19, #32]
  40b920:	cmp	w10, w11
  40b924:	b.ne	40b960 <rtnl_dump_filter_nc@@Base+0x13c>  // b.any
  40b928:	ldrh	w10, [x24, #4]
  40b92c:	tst	w9, #0x10
  40b930:	csinc	w27, w27, wzr, eq  // eq = none
  40b934:	cmp	w10, #0x2
  40b938:	b.eq	40ba08 <rtnl_dump_filter_nc@@Base+0x1e4>  // b.none
  40b93c:	cmp	w10, #0x3
  40b940:	b.eq	40b98c <rtnl_dump_filter_nc@@Base+0x168>  // b.none
  40b944:	ldr	x9, [x19, #40]
  40b948:	cbnz	x9, 40b960 <rtnl_dump_filter_nc@@Base+0x13c>
  40b94c:	ldp	x8, x1, [x28]
  40b950:	mov	x0, x24
  40b954:	blr	x8
  40b958:	tbnz	w0, #31, 40ba54 <rtnl_dump_filter_nc@@Base+0x230>
  40b95c:	ldr	w8, [x24]
  40b960:	add	w8, w8, #0x3
  40b964:	and	w8, w8, #0xfffffffc
  40b968:	sub	w23, w23, w8
  40b96c:	cmp	w23, #0xf
  40b970:	add	x24, x24, x8
  40b974:	b.gt	40b8dc <rtnl_dump_filter_nc@@Base+0xb8>
  40b978:	b	40b980 <rtnl_dump_filter_nc@@Base+0x15c>
  40b97c:	mov	w23, w22
  40b980:	ldr	x8, [x28, #24]!
  40b984:	cbnz	x8, 40b8cc <rtnl_dump_filter_nc@@Base+0xa8>
  40b988:	b	40b9a4 <rtnl_dump_filter_nc@@Base+0x180>
  40b98c:	cmp	w8, #0x13
  40b990:	b.ls	40ba94 <rtnl_dump_filter_nc@@Base+0x270>  // b.plast
  40b994:	ldr	w24, [x24, #16]
  40b998:	tbnz	w24, #31, 40bad0 <rtnl_dump_filter_nc@@Base+0x2ac>
  40b99c:	mov	w26, #0x1                   	// #1
  40b9a0:	b	40b980 <rtnl_dump_filter_nc@@Base+0x15c>
  40b9a4:	ldr	x0, [sp, #48]
  40b9a8:	bl	405160 <free@plt>
  40b9ac:	cbz	w26, 40b9c0 <rtnl_dump_filter_nc@@Base+0x19c>
  40b9b0:	b	40ba88 <rtnl_dump_filter_nc@@Base+0x264>
  40b9b4:	ldr	x0, [sp, #48]
  40b9b8:	bl	405160 <free@plt>
  40b9bc:	mov	w23, wzr
  40b9c0:	ldrb	w8, [sp, #104]
  40b9c4:	tbnz	w8, #5, 40b9e8 <rtnl_dump_filter_nc@@Base+0x1c4>
  40b9c8:	cbnz	w23, 40bb40 <rtnl_dump_filter_nc@@Base+0x31c>
  40b9cc:	ldr	w0, [x19]
  40b9d0:	add	x1, sp, #0x38
  40b9d4:	add	x2, sp, #0x30
  40b9d8:	bl	40cc5c <__parse_rtattr_nested_compat@@Base+0x6c>
  40b9dc:	mov	w22, w0
  40b9e0:	tbz	w0, #31, 40b8a4 <rtnl_dump_filter_nc@@Base+0x80>
  40b9e4:	b	40ba64 <rtnl_dump_filter_nc@@Base+0x240>
  40b9e8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40b9ec:	ldr	x8, [x8, #3992]
  40b9f0:	mov	w1, #0x12                  	// #18
  40b9f4:	mov	w2, #0x1                   	// #1
  40b9f8:	mov	x0, x21
  40b9fc:	ldr	x3, [x8]
  40ba00:	bl	4051c0 <fwrite@plt>
  40ba04:	b	40b9cc <rtnl_dump_filter_nc@@Base+0x1a8>
  40ba08:	cmp	w8, #0x23
  40ba0c:	b.ls	40baac <rtnl_dump_filter_nc@@Base+0x288>  // b.plast
  40ba10:	ldr	w8, [x24, #16]
  40ba14:	neg	w20, w8
  40ba18:	bl	4052f0 <__errno_location@plt>
  40ba1c:	str	w20, [x0]
  40ba20:	ldr	w8, [x19, #36]
  40ba24:	cmp	w8, #0x4
  40ba28:	b.ne	40ba3c <rtnl_dump_filter_nc@@Base+0x218>  // b.any
  40ba2c:	cmp	w20, #0x2
  40ba30:	b.eq	40ba44 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40ba34:	cmp	w20, #0x5f
  40ba38:	b.eq	40ba44 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40ba3c:	ldrb	w8, [x19, #48]
  40ba40:	tbz	w8, #1, 40bb0c <rtnl_dump_filter_nc@@Base+0x2e8>
  40ba44:	ldr	x0, [sp, #48]
  40ba48:	bl	405160 <free@plt>
  40ba4c:	mov	w22, #0xffffffff            	// #-1
  40ba50:	b	40ba64 <rtnl_dump_filter_nc@@Base+0x240>
  40ba54:	mov	w25, w0
  40ba58:	ldr	x0, [sp, #48]
  40ba5c:	bl	405160 <free@plt>
  40ba60:	mov	w22, w25
  40ba64:	mov	w0, w22
  40ba68:	ldp	x20, x19, [sp, #224]
  40ba6c:	ldp	x22, x21, [sp, #208]
  40ba70:	ldp	x24, x23, [sp, #192]
  40ba74:	ldp	x26, x25, [sp, #176]
  40ba78:	ldp	x28, x27, [sp, #160]
  40ba7c:	ldp	x29, x30, [sp, #144]
  40ba80:	add	sp, sp, #0xf0
  40ba84:	ret
  40ba88:	cbnz	w27, 40bb1c <rtnl_dump_filter_nc@@Base+0x2f8>
  40ba8c:	mov	w22, wzr
  40ba90:	b	40ba64 <rtnl_dump_filter_nc@@Base+0x240>
  40ba94:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40ba98:	ldr	x8, [x8, #3992]
  40ba9c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40baa0:	add	x0, x0, #0xd1c
  40baa4:	mov	w1, #0xf                   	// #15
  40baa8:	b	40bac0 <rtnl_dump_filter_nc@@Base+0x29c>
  40baac:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40bab0:	ldr	x8, [x8, #3992]
  40bab4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40bab8:	add	x0, x0, #0xabe
  40babc:	mov	w1, #0x10                  	// #16
  40bac0:	ldr	x3, [x8]
  40bac4:	mov	w2, #0x1                   	// #1
  40bac8:	bl	4051c0 <fwrite@plt>
  40bacc:	b	40ba44 <rtnl_dump_filter_nc@@Base+0x220>
  40bad0:	neg	w19, w24
  40bad4:	bl	4052f0 <__errno_location@plt>
  40bad8:	cmn	w24, #0x2
  40badc:	str	w19, [x0]
  40bae0:	b.eq	40ba44 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40bae4:	cmp	w19, #0x5f
  40bae8:	b.eq	40ba44 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40baec:	cmp	w19, #0x5a
  40baf0:	b.ne	40bb0c <rtnl_dump_filter_nc@@Base+0x2e8>  // b.any
  40baf4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40baf8:	ldr	x8, [x8, #3992]
  40bafc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40bb00:	add	x0, x0, #0xd2c
  40bb04:	mov	w1, #0x24                  	// #36
  40bb08:	b	40bac0 <rtnl_dump_filter_nc@@Base+0x29c>
  40bb0c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40bb10:	add	x0, x0, #0xd51
  40bb14:	bl	404e30 <perror@plt>
  40bb18:	b	40ba44 <rtnl_dump_filter_nc@@Base+0x220>
  40bb1c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40bb20:	ldr	x8, [x8, #3992]
  40bb24:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40bb28:	add	x0, x0, #0xccc
  40bb2c:	mov	w1, #0x2e                  	// #46
  40bb30:	ldr	x3, [x8]
  40bb34:	mov	w2, #0x1                   	// #1
  40bb38:	bl	4051c0 <fwrite@plt>
  40bb3c:	b	40ba8c <rtnl_dump_filter_nc@@Base+0x268>
  40bb40:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40bb44:	ldr	x8, [x8, #3992]
  40bb48:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40bb4c:	add	x1, x1, #0xb77
  40bb50:	mov	w2, w23
  40bb54:	ldr	x0, [x8]
  40bb58:	bl	405330 <fprintf@plt>
  40bb5c:	mov	w0, #0x1                   	// #1
  40bb60:	bl	404e20 <exit@plt>

000000000040bb64 <rtnl_talk@@Base>:
  40bb64:	sub	sp, sp, #0x20
  40bb68:	stp	x29, x30, [sp, #16]
  40bb6c:	ldr	w8, [x1]
  40bb70:	mov	x3, x2
  40bb74:	mov	w2, #0x1                   	// #1
  40bb78:	mov	w4, #0x1                   	// #1
  40bb7c:	stp	x1, x8, [sp]
  40bb80:	mov	x1, sp
  40bb84:	add	x29, sp, #0x10
  40bb88:	bl	40bba0 <rtnl_talk_iov@@Base+0x8>
  40bb8c:	ldp	x29, x30, [sp, #16]
  40bb90:	add	sp, sp, #0x20
  40bb94:	ret

000000000040bb98 <rtnl_talk_iov@@Base>:
  40bb98:	mov	w4, #0x1                   	// #1
  40bb9c:	b	40bba0 <rtnl_talk_iov@@Base+0x8>
  40bba0:	sub	sp, sp, #0xd0
  40bba4:	stp	x29, x30, [sp, #112]
  40bba8:	add	x29, sp, #0x70
  40bbac:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  40bbb0:	sub	x9, x29, #0x10
  40bbb4:	add	x8, x8, #0xdc8
  40bbb8:	str	x9, [sp, #24]
  40bbbc:	mov	w9, #0xc                   	// #12
  40bbc0:	str	w9, [sp, #32]
  40bbc4:	ldr	x9, [x8]
  40bbc8:	ldr	w8, [x8, #8]
  40bbcc:	stp	x22, x21, [sp, #176]
  40bbd0:	stp	x20, x19, [sp, #192]
  40bbd4:	mov	w22, w4
  40bbd8:	mov	x19, x3
  40bbdc:	mov	x20, x2
  40bbe0:	mov	x21, x0
  40bbe4:	stp	x28, x27, [sp, #128]
  40bbe8:	stp	x26, x25, [sp, #144]
  40bbec:	stp	x24, x23, [sp, #160]
  40bbf0:	stp	x1, x2, [sp, #40]
  40bbf4:	stp	xzr, xzr, [sp, #56]
  40bbf8:	stur	x9, [x29, #-16]
  40bbfc:	stur	w8, [x29, #-8]
  40bc00:	str	wzr, [sp, #72]
  40bc04:	cbz	x2, 40bc40 <rtnl_talk_iov@@Base+0xa8>
  40bc08:	ldr	w27, [x21, #28]
  40bc0c:	mov	x8, x20
  40bc10:	ldr	x9, [x1]
  40bc14:	add	w27, w27, #0x1
  40bc18:	str	w27, [x9, #8]
  40bc1c:	cbnz	x19, 40bc2c <rtnl_talk_iov@@Base+0x94>
  40bc20:	ldrh	w10, [x9, #6]
  40bc24:	orr	w10, w10, #0x4
  40bc28:	strh	w10, [x9, #6]
  40bc2c:	subs	x8, x8, #0x1
  40bc30:	add	x1, x1, #0x10
  40bc34:	b.ne	40bc10 <rtnl_talk_iov@@Base+0x78>  // b.any
  40bc38:	str	w27, [x21, #28]
  40bc3c:	b	40bc44 <rtnl_talk_iov@@Base+0xac>
  40bc40:	mov	w27, wzr
  40bc44:	ldr	w0, [x21]
  40bc48:	add	x1, sp, #0x18
  40bc4c:	mov	w2, wzr
  40bc50:	bl	405000 <sendmsg@plt>
  40bc54:	tbnz	w0, #31, 40bee0 <rtnl_talk_iov@@Base+0x348>
  40bc58:	sub	x8, x29, #0x20
  40bc5c:	mov	w9, #0x1                   	// #1
  40bc60:	stp	x8, x9, [sp, #40]
  40bc64:	ldr	w0, [x21]
  40bc68:	add	x1, sp, #0x18
  40bc6c:	add	x2, sp, #0x10
  40bc70:	bl	40cc5c <__parse_rtattr_nested_compat@@Base+0x6c>
  40bc74:	mov	w25, w0
  40bc78:	tbnz	w0, #31, 40bebc <rtnl_talk_iov@@Base+0x324>
  40bc7c:	adrp	x11, 41e000 <_IO_stdin_used@@Base+0x11180>
  40bc80:	ldr	x11, [x11, #3992]
  40bc84:	mov	w9, w27
  40bc88:	adrp	x13, 40d000 <_IO_stdin_used@@Base+0x180>
  40bc8c:	mov	w24, wzr
  40bc90:	eor	w12, w22, #0x1
  40bc94:	mov	w8, #0x1                   	// #1
  40bc98:	sub	x23, x9, x20
  40bc9c:	add	x13, x13, #0xb64
  40bca0:	mov	w28, w24
  40bca4:	sxtw	x24, w8
  40bca8:	ldr	w2, [sp, #32]
  40bcac:	cmp	w2, #0xc
  40bcb0:	b.ne	40bf24 <rtnl_talk_iov@@Base+0x38c>  // b.any
  40bcb4:	cmp	w25, #0x10
  40bcb8:	b.cc	40be1c <rtnl_talk_iov@@Base+0x284>  // b.lo, b.ul, b.last
  40bcbc:	ldr	x22, [sp, #16]
  40bcc0:	ldr	w26, [x22]
  40bcc4:	cmp	w26, w25
  40bcc8:	b.gt	40be90 <rtnl_talk_iov@@Base+0x2f8>
  40bccc:	sub	w8, w26, #0x10
  40bcd0:	tbnz	w8, #31, 40be90 <rtnl_talk_iov@@Base+0x2f8>
  40bcd4:	ldur	w9, [x29, #-12]
  40bcd8:	cbnz	w9, 40bd40 <rtnl_talk_iov@@Base+0x1a8>
  40bcdc:	ldr	w9, [x22, #12]
  40bce0:	ldr	w10, [x21, #8]
  40bce4:	cmp	w9, w10
  40bce8:	b.ne	40bd40 <rtnl_talk_iov@@Base+0x1a8>  // b.any
  40bcec:	ldr	w9, [x22, #8]
  40bcf0:	cmp	w9, w27
  40bcf4:	b.hi	40bd40 <rtnl_talk_iov@@Base+0x1a8>  // b.pmore
  40bcf8:	cmp	x23, x9
  40bcfc:	b.hi	40bd40 <rtnl_talk_iov@@Base+0x1a8>  // b.pmore
  40bd00:	ldrh	w9, [x22, #4]
  40bd04:	cmp	w9, #0x2
  40bd08:	b.eq	40bd5c <rtnl_talk_iov@@Base+0x1c4>  // b.none
  40bd0c:	cbnz	x19, 40be80 <rtnl_talk_iov@@Base+0x2e8>
  40bd10:	ldr	x3, [x11]
  40bd14:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40bd18:	mov	w1, #0x14                  	// #20
  40bd1c:	mov	w2, #0x1                   	// #1
  40bd20:	add	x0, x0, #0xd99
  40bd24:	str	w12, [sp, #12]
  40bd28:	bl	4051c0 <fwrite@plt>
  40bd2c:	adrp	x11, 41e000 <_IO_stdin_used@@Base+0x11180>
  40bd30:	ldr	w12, [sp, #12]
  40bd34:	ldr	x11, [x11, #3992]
  40bd38:	adrp	x13, 40d000 <_IO_stdin_used@@Base+0x180>
  40bd3c:	add	x13, x13, #0xb64
  40bd40:	add	w8, w26, #0x3
  40bd44:	and	x8, x8, #0xfffffffc
  40bd48:	sub	w25, w25, w8
  40bd4c:	cmp	w25, #0xf
  40bd50:	add	x22, x22, x8
  40bd54:	b.hi	40bcc0 <rtnl_talk_iov@@Base+0x128>  // b.pmore
  40bd58:	b	40be1c <rtnl_talk_iov@@Base+0x284>
  40bd5c:	cmp	w8, #0x13
  40bd60:	b.ls	40bef0 <rtnl_talk_iov@@Base+0x358>  // b.plast
  40bd64:	ldr	w26, [x22, #16]
  40bd68:	str	w12, [sp, #12]
  40bd6c:	cbz	w26, 40bd94 <rtnl_talk_iov@@Base+0x1fc>
  40bd70:	neg	w25, w26
  40bd74:	bl	4052f0 <__errno_location@plt>
  40bd78:	str	w25, [x0]
  40bd7c:	ldr	w8, [x21, #36]
  40bd80:	ldr	w9, [sp, #12]
  40bd84:	cmp	w8, #0x4
  40bd88:	cset	w8, eq  // eq = none
  40bd8c:	orr	w8, w8, w9
  40bd90:	tbz	w8, #0, 40bdec <rtnl_talk_iov@@Base+0x254>
  40bd94:	ldr	x0, [sp, #16]
  40bd98:	cbz	x19, 40bda4 <rtnl_talk_iov@@Base+0x20c>
  40bd9c:	str	x0, [x19]
  40bda0:	b	40bda8 <rtnl_talk_iov@@Base+0x210>
  40bda4:	bl	405160 <free@plt>
  40bda8:	cmp	x24, x20
  40bdac:	b.cs	40bf04 <rtnl_talk_iov@@Base+0x36c>  // b.hs, b.nlast
  40bdb0:	ldr	w0, [x21]
  40bdb4:	add	x1, sp, #0x18
  40bdb8:	add	x2, sp, #0x10
  40bdbc:	bl	40cc5c <__parse_rtattr_nested_compat@@Base+0x6c>
  40bdc0:	adrp	x11, 41e000 <_IO_stdin_used@@Base+0x11180>
  40bdc4:	ldr	x11, [x11, #3992]
  40bdc8:	ldr	w12, [sp, #12]
  40bdcc:	add	x8, x24, #0x1
  40bdd0:	adrp	x13, 40d000 <_IO_stdin_used@@Base+0x180>
  40bdd4:	mov	w25, w0
  40bdd8:	mov	w28, w24
  40bddc:	mov	x24, x8
  40bde0:	add	x13, x13, #0xb64
  40bde4:	tbz	w0, #31, 40bca8 <rtnl_talk_iov@@Base+0x110>
  40bde8:	b	40bebc <rtnl_talk_iov@@Base+0x324>
  40bdec:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40bdf0:	ldr	w8, [x22, #16]
  40bdf4:	ldr	x9, [x9, #3992]
  40bdf8:	neg	w0, w8
  40bdfc:	ldr	x25, [x9]
  40be00:	bl	405080 <strerror@plt>
  40be04:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40be08:	mov	x2, x0
  40be0c:	mov	x0, x25
  40be10:	add	x1, x1, #0xdae
  40be14:	bl	405330 <fprintf@plt>
  40be18:	b	40bd94 <rtnl_talk_iov@@Base+0x1fc>
  40be1c:	ldr	x0, [sp, #16]
  40be20:	mov	x28, x13
  40be24:	mov	w26, w12
  40be28:	mov	x22, x11
  40be2c:	bl	405160 <free@plt>
  40be30:	ldrb	w8, [sp, #72]
  40be34:	tbnz	w8, #5, 40be68 <rtnl_talk_iov@@Base+0x2d0>
  40be38:	cbnz	w25, 40bf10 <rtnl_talk_iov@@Base+0x378>
  40be3c:	ldr	w0, [x21]
  40be40:	add	x1, sp, #0x18
  40be44:	add	x2, sp, #0x10
  40be48:	bl	40cc5c <__parse_rtattr_nested_compat@@Base+0x6c>
  40be4c:	mov	w25, w0
  40be50:	add	x8, x24, #0x1
  40be54:	mov	x11, x22
  40be58:	mov	w12, w26
  40be5c:	mov	x13, x28
  40be60:	tbz	w0, #31, 40bca0 <rtnl_talk_iov@@Base+0x108>
  40be64:	b	40bebc <rtnl_talk_iov@@Base+0x324>
  40be68:	ldr	x3, [x22]
  40be6c:	mov	w1, #0x12                  	// #18
  40be70:	mov	w2, #0x1                   	// #1
  40be74:	mov	x0, x28
  40be78:	bl	4051c0 <fwrite@plt>
  40be7c:	b	40be3c <rtnl_talk_iov@@Base+0x2a4>
  40be80:	ldr	x8, [sp, #16]
  40be84:	mov	w25, wzr
  40be88:	str	x8, [x19]
  40be8c:	b	40bebc <rtnl_talk_iov@@Base+0x324>
  40be90:	ldrb	w8, [sp, #72]
  40be94:	ldr	x3, [x11]
  40be98:	tbz	w8, #5, 40bf34 <rtnl_talk_iov@@Base+0x39c>
  40be9c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40bea0:	add	x0, x0, #0xb33
  40bea4:	mov	w1, #0x12                  	// #18
  40bea8:	mov	w2, #0x1                   	// #1
  40beac:	bl	4051c0 <fwrite@plt>
  40beb0:	ldr	x0, [sp, #16]
  40beb4:	bl	405160 <free@plt>
  40beb8:	mov	w25, #0xffffffff            	// #-1
  40bebc:	mov	w0, w25
  40bec0:	ldp	x20, x19, [sp, #192]
  40bec4:	ldp	x22, x21, [sp, #176]
  40bec8:	ldp	x24, x23, [sp, #160]
  40becc:	ldp	x26, x25, [sp, #144]
  40bed0:	ldp	x28, x27, [sp, #128]
  40bed4:	ldp	x29, x30, [sp, #112]
  40bed8:	add	sp, sp, #0xd0
  40bedc:	ret
  40bee0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40bee4:	add	x0, x0, #0xd63
  40bee8:	bl	404e30 <perror@plt>
  40beec:	b	40beb8 <rtnl_talk_iov@@Base+0x320>
  40bef0:	ldr	x3, [x11]
  40bef4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40bef8:	add	x0, x0, #0xabe
  40befc:	mov	w1, #0x10                  	// #16
  40bf00:	b	40bea8 <rtnl_talk_iov@@Base+0x310>
  40bf04:	cmp	w26, #0x0
  40bf08:	csinv	w25, wzr, w28, eq  // eq = none
  40bf0c:	b	40bebc <rtnl_talk_iov@@Base+0x324>
  40bf10:	ldr	x0, [x22]
  40bf14:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40bf18:	add	x1, x1, #0xb77
  40bf1c:	mov	w2, w25
  40bf20:	b	40bf44 <rtnl_talk_iov@@Base+0x3ac>
  40bf24:	ldr	x0, [x11]
  40bf28:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40bf2c:	add	x1, x1, #0xd7c
  40bf30:	b	40bf44 <rtnl_talk_iov@@Base+0x3ac>
  40bf34:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40bf38:	add	x1, x1, #0xb46
  40bf3c:	mov	x0, x3
  40bf40:	mov	w2, w26
  40bf44:	bl	405330 <fprintf@plt>
  40bf48:	mov	w0, #0x1                   	// #1
  40bf4c:	bl	404e20 <exit@plt>

000000000040bf50 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40bf50:	sub	sp, sp, #0x20
  40bf54:	stp	x29, x30, [sp, #16]
  40bf58:	ldr	w8, [x1]
  40bf5c:	mov	x3, x2
  40bf60:	mov	w2, #0x1                   	// #1
  40bf64:	mov	w4, wzr
  40bf68:	stp	x1, x8, [sp]
  40bf6c:	mov	x1, sp
  40bf70:	add	x29, sp, #0x10
  40bf74:	bl	40bba0 <rtnl_talk_iov@@Base+0x8>
  40bf78:	ldp	x29, x30, [sp, #16]
  40bf7c:	add	sp, sp, #0x20
  40bf80:	ret

000000000040bf84 <rtnl_listen_all_nsid@@Base>:
  40bf84:	stp	x29, x30, [sp, #-32]!
  40bf88:	mov	x29, sp
  40bf8c:	mov	w8, #0x1                   	// #1
  40bf90:	str	w8, [x29, #28]
  40bf94:	str	x19, [sp, #16]
  40bf98:	mov	x19, x0
  40bf9c:	ldr	w0, [x0]
  40bfa0:	add	x3, x29, #0x1c
  40bfa4:	mov	w1, #0x10e                 	// #270
  40bfa8:	mov	w2, #0x8                   	// #8
  40bfac:	mov	w4, #0x4                   	// #4
  40bfb0:	bl	404f80 <setsockopt@plt>
  40bfb4:	tbnz	w0, #31, 40bfd4 <rtnl_listen_all_nsid@@Base+0x50>
  40bfb8:	ldr	w8, [x19, #48]
  40bfbc:	mov	w0, wzr
  40bfc0:	orr	w8, w8, #0x1
  40bfc4:	str	w8, [x19, #48]
  40bfc8:	ldr	x19, [sp, #16]
  40bfcc:	ldp	x29, x30, [sp], #32
  40bfd0:	ret
  40bfd4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40bfd8:	add	x0, x0, #0xacf
  40bfdc:	bl	404e30 <perror@plt>
  40bfe0:	mov	w0, #0xffffffff            	// #-1
  40bfe4:	b	40bfc8 <rtnl_listen_all_nsid@@Base+0x44>

000000000040bfe8 <rtnl_listen@@Base>:
  40bfe8:	stp	x29, x30, [sp, #-96]!
  40bfec:	stp	x28, x27, [sp, #16]
  40bff0:	stp	x26, x25, [sp, #32]
  40bff4:	stp	x24, x23, [sp, #48]
  40bff8:	stp	x22, x21, [sp, #64]
  40bffc:	stp	x20, x19, [sp, #80]
  40c000:	mov	x29, sp
  40c004:	sub	sp, sp, #0x6, lsl #12
  40c008:	sub	sp, sp, #0x70
  40c00c:	sub	x27, x29, #0x60
  40c010:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x180>
  40c014:	sub	x9, x29, #0x18
  40c018:	mov	w10, #0xc                   	// #12
  40c01c:	add	x8, x8, #0xdc8
  40c020:	stur	x9, [x29, #-96]
  40c024:	sub	x9, x29, #0x28
  40c028:	str	w10, [x27, #8]
  40c02c:	mov	w10, #0x1                   	// #1
  40c030:	stp	x9, x10, [x29, #-80]
  40c034:	ldr	x9, [x8]
  40c038:	ldr	w8, [x8, #8]
  40c03c:	stp	xzr, xzr, [x29, #-64]
  40c040:	str	wzr, [x27, #48]
  40c044:	stur	x9, [x29, #-24]
  40c048:	str	w8, [x27, #80]
  40c04c:	ldrb	w8, [x0, #48]
  40c050:	mov	x19, x2
  40c054:	mov	x20, x0
  40c058:	mov	x21, x1
  40c05c:	tbz	w8, #0, 40c06c <rtnl_listen@@Base+0x84>
  40c060:	add	x8, sp, #0x10
  40c064:	mov	w9, #0x2000                	// #8192
  40c068:	stp	x8, x9, [x29, #-64]
  40c06c:	adrp	x28, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c070:	ldr	x28, [x28, #3992]
  40c074:	add	x8, sp, #0x2, lsl #12
  40c078:	add	x8, x8, #0x10
  40c07c:	mov	w22, #0x4000                	// #16384
  40c080:	mov	w23, #0xffffffff            	// #-1
  40c084:	stur	x8, [x29, #-40]
  40c088:	stur	x22, [x29, #-32]
  40c08c:	ldr	w0, [x20]
  40c090:	sub	x1, x29, #0x60
  40c094:	mov	w2, wzr
  40c098:	bl	404de0 <recvmsg@plt>
  40c09c:	mov	x24, x0
  40c0a0:	tbnz	w24, #31, 40c170 <rtnl_listen@@Base+0x188>
  40c0a4:	cbz	w24, 40c220 <rtnl_listen@@Base+0x238>
  40c0a8:	ldr	w2, [x27, #8]
  40c0ac:	cmp	w2, #0xc
  40c0b0:	b.ne	40c234 <rtnl_listen@@Base+0x24c>  // b.any
  40c0b4:	ldrb	w8, [x20, #48]
  40c0b8:	tbz	w8, #0, 40c110 <rtnl_listen@@Base+0x128>
  40c0bc:	ldur	x1, [x29, #-64]
  40c0c0:	str	w23, [sp, #8]
  40c0c4:	cbz	x1, 40c110 <rtnl_listen@@Base+0x128>
  40c0c8:	ldur	x8, [x29, #-56]
  40c0cc:	cmp	x8, #0x10
  40c0d0:	b.cc	40c110 <rtnl_listen@@Base+0x128>  // b.lo, b.ul, b.last
  40c0d4:	ldr	w8, [x1, #8]
  40c0d8:	cmp	w8, #0x10e
  40c0dc:	b.ne	40c100 <rtnl_listen@@Base+0x118>  // b.any
  40c0e0:	ldr	w8, [x1, #12]
  40c0e4:	cmp	w8, #0x8
  40c0e8:	b.ne	40c100 <rtnl_listen@@Base+0x118>  // b.any
  40c0ec:	ldr	x8, [x1]
  40c0f0:	cmp	x8, #0x14
  40c0f4:	b.ne	40c100 <rtnl_listen@@Base+0x118>  // b.any
  40c0f8:	ldr	w8, [x1, #16]
  40c0fc:	str	w8, [sp, #8]
  40c100:	sub	x0, x29, #0x60
  40c104:	bl	404e40 <__cmsg_nxthdr@plt>
  40c108:	mov	x1, x0
  40c10c:	cbnz	x0, 40c0d4 <rtnl_listen@@Base+0xec>
  40c110:	cmp	w24, #0x10
  40c114:	b.cc	40c160 <rtnl_listen@@Base+0x178>  // b.lo, b.ul, b.last
  40c118:	add	x25, sp, #0x2, lsl #12
  40c11c:	add	x25, x25, #0x10
  40c120:	ldr	w26, [x25]
  40c124:	cmp	w26, w24
  40c128:	b.gt	40c1d8 <rtnl_listen@@Base+0x1f0>
  40c12c:	sub	w8, w26, #0x10
  40c130:	tbnz	w8, #31, 40c1d8 <rtnl_listen@@Base+0x1f0>
  40c134:	add	x0, sp, #0x8
  40c138:	mov	x1, x25
  40c13c:	mov	x2, x19
  40c140:	blr	x21
  40c144:	tbnz	w0, #31, 40c1fc <rtnl_listen@@Base+0x214>
  40c148:	add	w8, w26, #0x3
  40c14c:	and	x8, x8, #0xfffffffc
  40c150:	sub	w24, w24, w8
  40c154:	cmp	w24, #0xf
  40c158:	add	x25, x25, x8
  40c15c:	b.hi	40c120 <rtnl_listen@@Base+0x138>  // b.pmore
  40c160:	ldrb	w8, [x27, #48]
  40c164:	tbnz	w8, #5, 40c1bc <rtnl_listen@@Base+0x1d4>
  40c168:	cbz	w24, 40c088 <rtnl_listen@@Base+0xa0>
  40c16c:	b	40c244 <rtnl_listen@@Base+0x25c>
  40c170:	bl	4052f0 <__errno_location@plt>
  40c174:	mov	x24, x0
  40c178:	ldr	w0, [x0]
  40c17c:	cmp	w0, #0x4
  40c180:	b.eq	40c088 <rtnl_listen@@Base+0xa0>  // b.none
  40c184:	cmp	w0, #0xb
  40c188:	b.eq	40c088 <rtnl_listen@@Base+0xa0>  // b.none
  40c18c:	ldr	x25, [x28]
  40c190:	bl	405080 <strerror@plt>
  40c194:	ldr	w3, [x24]
  40c198:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c19c:	mov	x2, x0
  40c1a0:	mov	x0, x25
  40c1a4:	add	x1, x1, #0xae7
  40c1a8:	bl	405330 <fprintf@plt>
  40c1ac:	ldr	w8, [x24]
  40c1b0:	cmp	w8, #0x69
  40c1b4:	b.eq	40c088 <rtnl_listen@@Base+0xa0>  // b.none
  40c1b8:	b	40c1f8 <rtnl_listen@@Base+0x210>
  40c1bc:	ldr	x3, [x28]
  40c1c0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40c1c4:	mov	w1, #0x12                  	// #18
  40c1c8:	mov	w2, #0x1                   	// #1
  40c1cc:	add	x0, x0, #0xb64
  40c1d0:	bl	4051c0 <fwrite@plt>
  40c1d4:	b	40c088 <rtnl_listen@@Base+0xa0>
  40c1d8:	ldrb	w8, [x27, #48]
  40c1dc:	ldr	x3, [x28]
  40c1e0:	tbz	w8, #5, 40c258 <rtnl_listen@@Base+0x270>
  40c1e4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40c1e8:	add	x0, x0, #0xb33
  40c1ec:	mov	w1, #0x12                  	// #18
  40c1f0:	mov	w2, #0x1                   	// #1
  40c1f4:	bl	4051c0 <fwrite@plt>
  40c1f8:	mov	w0, #0xffffffff            	// #-1
  40c1fc:	add	sp, sp, #0x6, lsl #12
  40c200:	add	sp, sp, #0x70
  40c204:	ldp	x20, x19, [sp, #80]
  40c208:	ldp	x22, x21, [sp, #64]
  40c20c:	ldp	x24, x23, [sp, #48]
  40c210:	ldp	x26, x25, [sp, #32]
  40c214:	ldp	x28, x27, [sp, #16]
  40c218:	ldp	x29, x30, [sp], #96
  40c21c:	ret
  40c220:	ldr	x3, [x28]
  40c224:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40c228:	add	x0, x0, #0xb06
  40c22c:	mov	w1, #0xf                   	// #15
  40c230:	b	40c1f0 <rtnl_listen@@Base+0x208>
  40c234:	ldr	x0, [x28]
  40c238:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c23c:	add	x1, x1, #0xb16
  40c240:	b	40c268 <rtnl_listen@@Base+0x280>
  40c244:	ldr	x0, [x28]
  40c248:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c24c:	add	x1, x1, #0xb77
  40c250:	mov	w2, w24
  40c254:	b	40c268 <rtnl_listen@@Base+0x280>
  40c258:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c25c:	add	x1, x1, #0xb46
  40c260:	mov	x0, x3
  40c264:	mov	w2, w26
  40c268:	bl	405330 <fprintf@plt>
  40c26c:	mov	w0, #0x1                   	// #1
  40c270:	bl	404e20 <exit@plt>

000000000040c274 <rtnl_from_file@@Base>:
  40c274:	stp	x29, x30, [sp, #-64]!
  40c278:	stp	x28, x23, [sp, #16]
  40c27c:	stp	x22, x21, [sp, #32]
  40c280:	stp	x20, x19, [sp, #48]
  40c284:	mov	x29, sp
  40c288:	sub	sp, sp, #0x4, lsl #12
  40c28c:	mov	x8, sp
  40c290:	mov	x20, x2
  40c294:	mov	x21, x1
  40c298:	mov	x19, x0
  40c29c:	add	x22, x8, #0x10
  40c2a0:	mov	x0, sp
  40c2a4:	mov	w1, #0x1                   	// #1
  40c2a8:	mov	w2, #0x10                  	// #16
  40c2ac:	mov	x3, x19
  40c2b0:	bl	405130 <fread@plt>
  40c2b4:	cmp	x0, #0x10
  40c2b8:	b.ne	40c33c <rtnl_from_file@@Base+0xc8>  // b.any
  40c2bc:	ldr	w23, [sp]
  40c2c0:	cmp	w23, #0x4, lsl #12
  40c2c4:	b.hi	40c30c <rtnl_from_file@@Base+0x98>  // b.pmore
  40c2c8:	sub	w8, w23, #0x10
  40c2cc:	tbnz	w8, #31, 40c30c <rtnl_from_file@@Base+0x98>
  40c2d0:	sub	w8, w23, #0xd
  40c2d4:	and	w23, w8, #0xfffffffc
  40c2d8:	mov	w1, #0x1                   	// #1
  40c2dc:	mov	x0, x22
  40c2e0:	mov	x2, x23
  40c2e4:	mov	x3, x19
  40c2e8:	bl	405130 <fread@plt>
  40c2ec:	cmp	x0, x23
  40c2f0:	b.ne	40c354 <rtnl_from_file@@Base+0xe0>  // b.any
  40c2f4:	mov	x1, sp
  40c2f8:	mov	x0, xzr
  40c2fc:	mov	x2, x20
  40c300:	blr	x21
  40c304:	tbz	w0, #31, 40c2a0 <rtnl_from_file@@Base+0x2c>
  40c308:	b	40c370 <rtnl_from_file@@Base+0xfc>
  40c30c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c310:	ldr	x8, [x8, #3992]
  40c314:	mov	x0, x19
  40c318:	ldr	x20, [x8]
  40c31c:	bl	404ea0 <ftell@plt>
  40c320:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c324:	mov	x3, x0
  40c328:	add	x1, x1, #0xbc7
  40c32c:	mov	x0, x20
  40c330:	mov	w2, w23
  40c334:	bl	405330 <fprintf@plt>
  40c338:	b	40c36c <rtnl_from_file@@Base+0xf8>
  40c33c:	cbnz	x0, 40c354 <rtnl_from_file@@Base+0xe0>
  40c340:	mov	x0, x19
  40c344:	bl	4050e0 <feof@plt>
  40c348:	cbz	w0, 40c354 <rtnl_from_file@@Base+0xe0>
  40c34c:	mov	w0, wzr
  40c350:	b	40c370 <rtnl_from_file@@Base+0xfc>
  40c354:	mov	x0, x19
  40c358:	bl	405360 <ferror@plt>
  40c35c:	cbnz	w0, 40c388 <rtnl_from_file@@Base+0x114>
  40c360:	mov	x0, x19
  40c364:	bl	4050e0 <feof@plt>
  40c368:	cbnz	w0, 40c398 <rtnl_from_file@@Base+0x124>
  40c36c:	mov	w0, #0xffffffff            	// #-1
  40c370:	add	sp, sp, #0x4, lsl #12
  40c374:	ldp	x20, x19, [sp, #48]
  40c378:	ldp	x22, x21, [sp, #32]
  40c37c:	ldp	x28, x23, [sp, #16]
  40c380:	ldp	x29, x30, [sp], #64
  40c384:	ret
  40c388:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40c38c:	add	x0, x0, #0xb8e
  40c390:	bl	404e30 <perror@plt>
  40c394:	b	40c360 <rtnl_from_file@@Base+0xec>
  40c398:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c39c:	ldr	x8, [x8, #3992]
  40c3a0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40c3a4:	add	x0, x0, #0xba4
  40c3a8:	mov	w1, #0x22                  	// #34
  40c3ac:	ldr	x3, [x8]
  40c3b0:	mov	w2, #0x1                   	// #1
  40c3b4:	bl	4051c0 <fwrite@plt>
  40c3b8:	b	40c36c <rtnl_from_file@@Base+0xf8>

000000000040c3bc <addattr@@Base>:
  40c3bc:	stp	x29, x30, [sp, #-16]!
  40c3c0:	ldr	w9, [x0]
  40c3c4:	mov	x29, sp
  40c3c8:	add	w9, w9, #0x3
  40c3cc:	and	x10, x9, #0xfffffffc
  40c3d0:	add	w9, w10, #0x4
  40c3d4:	cmp	w9, w1
  40c3d8:	b.hi	40c400 <addattr@@Base+0x44>  // b.pmore
  40c3dc:	mov	w8, wzr
  40c3e0:	add	x10, x0, x10
  40c3e4:	mov	w11, #0x4                   	// #4
  40c3e8:	strh	w2, [x10, #2]
  40c3ec:	strh	w11, [x10]
  40c3f0:	str	w9, [x0]
  40c3f4:	mov	w0, w8
  40c3f8:	ldp	x29, x30, [sp], #16
  40c3fc:	ret
  40c400:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c404:	ldr	x9, [x9, #3992]
  40c408:	mov	w8, w1
  40c40c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c410:	add	x1, x1, #0xbea
  40c414:	ldr	x0, [x9]
  40c418:	mov	w2, w8
  40c41c:	bl	405330 <fprintf@plt>
  40c420:	mov	w8, #0xffffffff            	// #-1
  40c424:	b	40c3f4 <addattr@@Base+0x38>

000000000040c428 <addattr_l@@Base>:
  40c428:	stp	x29, x30, [sp, #-32]!
  40c42c:	stp	x20, x19, [sp, #16]
  40c430:	ldr	w9, [x0]
  40c434:	add	w10, w4, #0x7
  40c438:	and	w10, w10, #0xfffffffc
  40c43c:	mov	x29, sp
  40c440:	add	w9, w9, #0x3
  40c444:	and	x9, x9, #0xfffffffc
  40c448:	add	w20, w9, w10
  40c44c:	cmp	w20, w1
  40c450:	b.hi	40c490 <addattr_l@@Base+0x68>  // b.pmore
  40c454:	mov	x19, x0
  40c458:	add	x8, x0, x9
  40c45c:	add	w9, w4, #0x4
  40c460:	strh	w2, [x8, #2]
  40c464:	strh	w9, [x8]
  40c468:	cbz	w4, 40c47c <addattr_l@@Base+0x54>
  40c46c:	sxtw	x2, w4
  40c470:	add	x0, x8, #0x4
  40c474:	mov	x1, x3
  40c478:	bl	404dd0 <memcpy@plt>
  40c47c:	mov	w0, wzr
  40c480:	str	w20, [x19]
  40c484:	ldp	x20, x19, [sp, #16]
  40c488:	ldp	x29, x30, [sp], #32
  40c48c:	ret
  40c490:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c494:	ldr	x9, [x9, #3992]
  40c498:	mov	w8, w1
  40c49c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c4a0:	add	x1, x1, #0xbea
  40c4a4:	ldr	x0, [x9]
  40c4a8:	mov	w2, w8
  40c4ac:	bl	405330 <fprintf@plt>
  40c4b0:	mov	w0, #0xffffffff            	// #-1
  40c4b4:	b	40c484 <addattr_l@@Base+0x5c>

000000000040c4b8 <addattr8@@Base>:
  40c4b8:	stp	x29, x30, [sp, #-16]!
  40c4bc:	ldr	w9, [x0]
  40c4c0:	mov	x29, sp
  40c4c4:	add	w9, w9, #0x3
  40c4c8:	and	x10, x9, #0xfffffffc
  40c4cc:	add	w9, w10, #0x8
  40c4d0:	cmp	w9, w1
  40c4d4:	b.hi	40c500 <addattr8@@Base+0x48>  // b.pmore
  40c4d8:	mov	w8, wzr
  40c4dc:	add	x10, x0, x10
  40c4e0:	mov	w11, #0x5                   	// #5
  40c4e4:	strh	w2, [x10, #2]
  40c4e8:	strh	w11, [x10]
  40c4ec:	strb	w3, [x10, #4]
  40c4f0:	str	w9, [x0]
  40c4f4:	mov	w0, w8
  40c4f8:	ldp	x29, x30, [sp], #16
  40c4fc:	ret
  40c500:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c504:	ldr	x9, [x9, #3992]
  40c508:	mov	w8, w1
  40c50c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c510:	add	x1, x1, #0xbea
  40c514:	ldr	x0, [x9]
  40c518:	mov	w2, w8
  40c51c:	bl	405330 <fprintf@plt>
  40c520:	mov	w8, #0xffffffff            	// #-1
  40c524:	b	40c4f4 <addattr8@@Base+0x3c>

000000000040c528 <addattr16@@Base>:
  40c528:	stp	x29, x30, [sp, #-16]!
  40c52c:	ldr	w9, [x0]
  40c530:	mov	x29, sp
  40c534:	add	w9, w9, #0x3
  40c538:	and	x10, x9, #0xfffffffc
  40c53c:	add	w9, w10, #0x8
  40c540:	cmp	w9, w1
  40c544:	b.hi	40c570 <addattr16@@Base+0x48>  // b.pmore
  40c548:	mov	w8, wzr
  40c54c:	add	x10, x0, x10
  40c550:	mov	w11, #0x6                   	// #6
  40c554:	strh	w2, [x10, #2]
  40c558:	strh	w11, [x10]
  40c55c:	strh	w3, [x10, #4]
  40c560:	str	w9, [x0]
  40c564:	mov	w0, w8
  40c568:	ldp	x29, x30, [sp], #16
  40c56c:	ret
  40c570:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c574:	ldr	x9, [x9, #3992]
  40c578:	mov	w8, w1
  40c57c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c580:	add	x1, x1, #0xbea
  40c584:	ldr	x0, [x9]
  40c588:	mov	w2, w8
  40c58c:	bl	405330 <fprintf@plt>
  40c590:	mov	w8, #0xffffffff            	// #-1
  40c594:	b	40c564 <addattr16@@Base+0x3c>

000000000040c598 <addattr32@@Base>:
  40c598:	stp	x29, x30, [sp, #-16]!
  40c59c:	ldr	w9, [x0]
  40c5a0:	mov	x29, sp
  40c5a4:	add	w9, w9, #0x3
  40c5a8:	and	x10, x9, #0xfffffffc
  40c5ac:	add	w9, w10, #0x8
  40c5b0:	cmp	w9, w1
  40c5b4:	b.hi	40c5e0 <addattr32@@Base+0x48>  // b.pmore
  40c5b8:	mov	w8, wzr
  40c5bc:	add	x10, x0, x10
  40c5c0:	mov	w11, #0x8                   	// #8
  40c5c4:	strh	w2, [x10, #2]
  40c5c8:	strh	w11, [x10]
  40c5cc:	str	w3, [x10, #4]
  40c5d0:	str	w9, [x0]
  40c5d4:	mov	w0, w8
  40c5d8:	ldp	x29, x30, [sp], #16
  40c5dc:	ret
  40c5e0:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c5e4:	ldr	x9, [x9, #3992]
  40c5e8:	mov	w8, w1
  40c5ec:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c5f0:	add	x1, x1, #0xbea
  40c5f4:	ldr	x0, [x9]
  40c5f8:	mov	w2, w8
  40c5fc:	bl	405330 <fprintf@plt>
  40c600:	mov	w8, #0xffffffff            	// #-1
  40c604:	b	40c5d4 <addattr32@@Base+0x3c>

000000000040c608 <addattr64@@Base>:
  40c608:	stp	x29, x30, [sp, #-16]!
  40c60c:	ldr	w9, [x0]
  40c610:	mov	x29, sp
  40c614:	add	w9, w9, #0x3
  40c618:	and	x10, x9, #0xfffffffc
  40c61c:	add	w9, w10, #0xc
  40c620:	cmp	w9, w1
  40c624:	b.hi	40c650 <addattr64@@Base+0x48>  // b.pmore
  40c628:	mov	w8, wzr
  40c62c:	add	x10, x0, x10
  40c630:	mov	w11, #0xc                   	// #12
  40c634:	strh	w2, [x10, #2]
  40c638:	strh	w11, [x10]
  40c63c:	stur	x3, [x10, #4]
  40c640:	str	w9, [x0]
  40c644:	mov	w0, w8
  40c648:	ldp	x29, x30, [sp], #16
  40c64c:	ret
  40c650:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c654:	ldr	x9, [x9, #3992]
  40c658:	mov	w8, w1
  40c65c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c660:	add	x1, x1, #0xbea
  40c664:	ldr	x0, [x9]
  40c668:	mov	w2, w8
  40c66c:	bl	405330 <fprintf@plt>
  40c670:	mov	w8, #0xffffffff            	// #-1
  40c674:	b	40c644 <addattr64@@Base+0x3c>

000000000040c678 <addattrstrz@@Base>:
  40c678:	stp	x29, x30, [sp, #-48]!
  40c67c:	stp	x22, x21, [sp, #16]
  40c680:	mov	x22, x0
  40c684:	mov	x0, x3
  40c688:	stp	x20, x19, [sp, #32]
  40c68c:	mov	x29, sp
  40c690:	mov	x19, x3
  40c694:	mov	w20, w2
  40c698:	mov	w21, w1
  40c69c:	bl	404e00 <strlen@plt>
  40c6a0:	add	w4, w0, #0x1
  40c6a4:	mov	x0, x22
  40c6a8:	mov	w1, w21
  40c6ac:	mov	w2, w20
  40c6b0:	mov	x3, x19
  40c6b4:	ldp	x20, x19, [sp, #32]
  40c6b8:	ldp	x22, x21, [sp, #16]
  40c6bc:	ldp	x29, x30, [sp], #48
  40c6c0:	b	40c428 <addattr_l@@Base>

000000000040c6c4 <addraw_l@@Base>:
  40c6c4:	stp	x29, x30, [sp, #-48]!
  40c6c8:	stp	x20, x19, [sp, #32]
  40c6cc:	ldr	w9, [x0]
  40c6d0:	add	w10, w3, #0x3
  40c6d4:	str	x21, [sp, #16]
  40c6d8:	and	w21, w10, #0xfffffffc
  40c6dc:	add	w9, w9, #0x3
  40c6e0:	and	w9, w9, #0xfffffffc
  40c6e4:	add	w10, w9, w21
  40c6e8:	cmp	w10, w1
  40c6ec:	mov	x29, sp
  40c6f0:	b.hi	40c758 <addraw_l@@Base+0x94>  // b.pmore
  40c6f4:	mov	w20, w3
  40c6f8:	sxtw	x8, w20
  40c6fc:	mov	x19, x0
  40c700:	add	x0, x0, w9, uxtw
  40c704:	mov	x1, x2
  40c708:	mov	x2, x8
  40c70c:	bl	404dd0 <memcpy@plt>
  40c710:	ldr	w8, [x19]
  40c714:	sub	w2, w21, w20
  40c718:	mov	w1, wzr
  40c71c:	add	w8, w8, #0x3
  40c720:	and	w8, w8, #0xfffffffc
  40c724:	add	x8, x19, x8
  40c728:	add	x0, x8, w20, sxtw
  40c72c:	bl	404fe0 <memset@plt>
  40c730:	ldr	w8, [x19]
  40c734:	mov	w0, wzr
  40c738:	add	w8, w8, #0x3
  40c73c:	and	w8, w8, #0xfffffffc
  40c740:	add	w8, w8, w21
  40c744:	str	w8, [x19]
  40c748:	ldp	x20, x19, [sp, #32]
  40c74c:	ldr	x21, [sp, #16]
  40c750:	ldp	x29, x30, [sp], #48
  40c754:	ret
  40c758:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c75c:	ldr	x9, [x9, #3992]
  40c760:	mov	w8, w1
  40c764:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c768:	add	x1, x1, #0xc19
  40c76c:	ldr	x0, [x9]
  40c770:	mov	w2, w8
  40c774:	bl	405330 <fprintf@plt>
  40c778:	mov	w0, #0xffffffff            	// #-1
  40c77c:	b	40c748 <addraw_l@@Base+0x84>

000000000040c780 <addattr_nest@@Base>:
  40c780:	stp	x29, x30, [sp, #-32]!
  40c784:	ldr	w9, [x0]
  40c788:	str	x19, [sp, #16]
  40c78c:	mov	x29, sp
  40c790:	add	w9, w9, #0x3
  40c794:	and	w10, w9, #0xfffffffc
  40c798:	add	w9, w10, #0x4
  40c79c:	cmp	w9, w1
  40c7a0:	add	x19, x0, x10
  40c7a4:	b.hi	40c7c8 <addattr_nest@@Base+0x48>  // b.pmore
  40c7a8:	mov	w8, #0x4                   	// #4
  40c7ac:	strh	w2, [x19, #2]
  40c7b0:	strh	w8, [x19]
  40c7b4:	str	w9, [x0]
  40c7b8:	mov	x0, x19
  40c7bc:	ldr	x19, [sp, #16]
  40c7c0:	ldp	x29, x30, [sp], #32
  40c7c4:	ret
  40c7c8:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c7cc:	ldr	x9, [x9, #3992]
  40c7d0:	mov	w8, w1
  40c7d4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c7d8:	add	x1, x1, #0xbea
  40c7dc:	ldr	x0, [x9]
  40c7e0:	mov	w2, w8
  40c7e4:	bl	405330 <fprintf@plt>
  40c7e8:	b	40c7b8 <addattr_nest@@Base+0x38>

000000000040c7ec <addattr_nest_end@@Base>:
  40c7ec:	ldr	w8, [x0]
  40c7f0:	add	w9, w8, #0x3
  40c7f4:	and	w9, w9, #0xfffc
  40c7f8:	add	w9, w0, w9
  40c7fc:	sub	w9, w9, w1
  40c800:	mov	w0, w8
  40c804:	strh	w9, [x1]
  40c808:	ret

000000000040c80c <addattr_nest_compat@@Base>:
  40c80c:	stp	x29, x30, [sp, #-48]!
  40c810:	stp	x22, x21, [sp, #16]
  40c814:	stp	x20, x19, [sp, #32]
  40c818:	ldr	w8, [x0]
  40c81c:	mov	x29, sp
  40c820:	mov	w19, w2
  40c824:	mov	w20, w1
  40c828:	add	w8, w8, #0x3
  40c82c:	and	w8, w8, #0xfffffffc
  40c830:	mov	x21, x0
  40c834:	add	x22, x0, x8
  40c838:	bl	40c428 <addattr_l@@Base>
  40c83c:	mov	x0, x21
  40c840:	mov	w1, w20
  40c844:	mov	w2, w19
  40c848:	bl	40c780 <addattr_nest@@Base>
  40c84c:	mov	x0, x22
  40c850:	ldp	x20, x19, [sp, #32]
  40c854:	ldp	x22, x21, [sp, #16]
  40c858:	ldp	x29, x30, [sp], #48
  40c85c:	ret

000000000040c860 <addattr_nest_compat_end@@Base>:
  40c860:	ldrh	w9, [x1]
  40c864:	ldr	w8, [x0]
  40c868:	add	w9, w9, #0x3
  40c86c:	add	w10, w8, #0x3
  40c870:	and	x9, x9, #0x1fffc
  40c874:	and	w10, w10, #0xfffffffc
  40c878:	add	x9, x1, x9
  40c87c:	add	w10, w0, w10
  40c880:	sub	w11, w10, w1
  40c884:	sub	w10, w10, w9
  40c888:	mov	w0, w8
  40c88c:	strh	w11, [x1]
  40c890:	strh	w10, [x9]
  40c894:	ret

000000000040c898 <rta_addattr32@@Base>:
  40c898:	stp	x29, x30, [sp, #-16]!
  40c89c:	ldrh	w9, [x0]
  40c8a0:	mov	x29, sp
  40c8a4:	add	w9, w9, #0x3
  40c8a8:	and	x9, x9, #0x1fffc
  40c8ac:	add	w10, w9, #0x8
  40c8b0:	cmp	w10, w1
  40c8b4:	b.hi	40c8ec <rta_addattr32@@Base+0x54>  // b.pmore
  40c8b8:	add	x9, x0, x9
  40c8bc:	mov	w10, #0x8                   	// #8
  40c8c0:	strh	w2, [x9, #2]
  40c8c4:	strh	w10, [x9]
  40c8c8:	str	w3, [x9, #4]
  40c8cc:	ldrh	w9, [x0]
  40c8d0:	mov	w8, wzr
  40c8d4:	add	w9, w9, #0xb
  40c8d8:	and	w9, w9, #0xfffc
  40c8dc:	strh	w9, [x0]
  40c8e0:	mov	w0, w8
  40c8e4:	ldp	x29, x30, [sp], #16
  40c8e8:	ret
  40c8ec:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c8f0:	ldr	x9, [x9, #3992]
  40c8f4:	mov	w8, w1
  40c8f8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c8fc:	add	x1, x1, #0xc47
  40c900:	ldr	x0, [x9]
  40c904:	mov	w2, w8
  40c908:	bl	405330 <fprintf@plt>
  40c90c:	mov	w8, #0xffffffff            	// #-1
  40c910:	b	40c8e0 <rta_addattr32@@Base+0x48>

000000000040c914 <rta_addattr_l@@Base>:
  40c914:	stp	x29, x30, [sp, #-32]!
  40c918:	stp	x20, x19, [sp, #16]
  40c91c:	ldrh	w9, [x0]
  40c920:	add	w10, w4, #0x7
  40c924:	and	w20, w10, #0xfffffffc
  40c928:	mov	x29, sp
  40c92c:	add	w9, w9, #0x3
  40c930:	and	x9, x9, #0x1fffc
  40c934:	add	w10, w9, w20
  40c938:	cmp	w10, w1
  40c93c:	b.hi	40c98c <rta_addattr_l@@Base+0x78>  // b.pmore
  40c940:	mov	x19, x0
  40c944:	add	x8, x0, x9
  40c948:	add	w9, w4, #0x4
  40c94c:	strh	w2, [x8, #2]
  40c950:	strh	w9, [x8]
  40c954:	cbz	w4, 40c968 <rta_addattr_l@@Base+0x54>
  40c958:	sxtw	x2, w4
  40c95c:	add	x0, x8, #0x4
  40c960:	mov	x1, x3
  40c964:	bl	404dd0 <memcpy@plt>
  40c968:	ldrh	w8, [x19]
  40c96c:	mov	w0, wzr
  40c970:	add	w8, w8, #0x3
  40c974:	and	w8, w8, #0xfffc
  40c978:	add	w8, w8, w20
  40c97c:	strh	w8, [x19]
  40c980:	ldp	x20, x19, [sp, #16]
  40c984:	ldp	x29, x30, [sp], #32
  40c988:	ret
  40c98c:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x11180>
  40c990:	ldr	x9, [x9, #3992]
  40c994:	mov	w8, w1
  40c998:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40c99c:	add	x1, x1, #0xc7c
  40c9a0:	ldr	x0, [x9]
  40c9a4:	mov	w2, w8
  40c9a8:	bl	405330 <fprintf@plt>
  40c9ac:	mov	w0, #0xffffffff            	// #-1
  40c9b0:	b	40c980 <rta_addattr_l@@Base+0x6c>

000000000040c9b4 <rta_addattr8@@Base>:
  40c9b4:	sub	sp, sp, #0x20
  40c9b8:	stp	x29, x30, [sp, #16]
  40c9bc:	add	x29, sp, #0x10
  40c9c0:	sturb	w3, [x29, #-4]
  40c9c4:	sub	x3, x29, #0x4
  40c9c8:	mov	w4, #0x1                   	// #1
  40c9cc:	bl	40c914 <rta_addattr_l@@Base>
  40c9d0:	ldp	x29, x30, [sp, #16]
  40c9d4:	add	sp, sp, #0x20
  40c9d8:	ret

000000000040c9dc <rta_addattr16@@Base>:
  40c9dc:	sub	sp, sp, #0x20
  40c9e0:	stp	x29, x30, [sp, #16]
  40c9e4:	add	x29, sp, #0x10
  40c9e8:	sturh	w3, [x29, #-4]
  40c9ec:	sub	x3, x29, #0x4
  40c9f0:	mov	w4, #0x2                   	// #2
  40c9f4:	bl	40c914 <rta_addattr_l@@Base>
  40c9f8:	ldp	x29, x30, [sp, #16]
  40c9fc:	add	sp, sp, #0x20
  40ca00:	ret

000000000040ca04 <rta_addattr64@@Base>:
  40ca04:	sub	sp, sp, #0x20
  40ca08:	str	x3, [sp, #8]
  40ca0c:	add	x3, sp, #0x8
  40ca10:	mov	w4, #0x8                   	// #8
  40ca14:	stp	x29, x30, [sp, #16]
  40ca18:	add	x29, sp, #0x10
  40ca1c:	bl	40c914 <rta_addattr_l@@Base>
  40ca20:	ldp	x29, x30, [sp, #16]
  40ca24:	add	sp, sp, #0x20
  40ca28:	ret

000000000040ca2c <rta_nest@@Base>:
  40ca2c:	stp	x29, x30, [sp, #-32]!
  40ca30:	ldrh	w8, [x0]
  40ca34:	mov	x3, xzr
  40ca38:	mov	w4, wzr
  40ca3c:	str	x19, [sp, #16]
  40ca40:	add	w8, w8, #0x3
  40ca44:	and	x8, x8, #0x1fffc
  40ca48:	mov	x29, sp
  40ca4c:	add	x19, x0, x8
  40ca50:	bl	40c914 <rta_addattr_l@@Base>
  40ca54:	ldrh	w8, [x19, #2]
  40ca58:	mov	x0, x19
  40ca5c:	orr	w8, w8, #0x8000
  40ca60:	strh	w8, [x19, #2]
  40ca64:	ldr	x19, [sp, #16]
  40ca68:	ldp	x29, x30, [sp], #32
  40ca6c:	ret

000000000040ca70 <rta_nest_end@@Base>:
  40ca70:	ldrh	w8, [x0]
  40ca74:	add	w8, w8, #0x3
  40ca78:	and	w8, w8, #0xfffc
  40ca7c:	add	w8, w0, w8
  40ca80:	sub	w8, w8, w1
  40ca84:	strh	w8, [x1]
  40ca88:	ldrh	w0, [x0]
  40ca8c:	ret

000000000040ca90 <parse_rtattr@@Base>:
  40ca90:	stp	x29, x30, [sp, #-16]!
  40ca94:	mov	w4, wzr
  40ca98:	mov	x29, sp
  40ca9c:	bl	40caac <parse_rtattr_flags@@Base>
  40caa0:	mov	w0, wzr
  40caa4:	ldp	x29, x30, [sp], #16
  40caa8:	ret

000000000040caac <parse_rtattr_flags@@Base>:
  40caac:	stp	x29, x30, [sp, #-64]!
  40cab0:	add	w8, w1, #0x1
  40cab4:	stp	x22, x21, [sp, #32]
  40cab8:	stp	x20, x19, [sp, #48]
  40cabc:	mov	x20, x2
  40cac0:	mov	w21, w1
  40cac4:	sbfiz	x2, x8, #3, #32
  40cac8:	mov	w1, wzr
  40cacc:	str	x23, [sp, #16]
  40cad0:	mov	x29, sp
  40cad4:	mov	w23, w4
  40cad8:	mov	w19, w3
  40cadc:	mov	x22, x0
  40cae0:	bl	404fe0 <memset@plt>
  40cae4:	cmp	w19, #0x4
  40cae8:	b.lt	40cb3c <parse_rtattr_flags@@Base+0x90>  // b.tstop
  40caec:	mvn	w8, w23
  40caf0:	ldrh	w3, [x20]
  40caf4:	cmp	x3, #0x4
  40caf8:	b.cc	40cb44 <parse_rtattr_flags@@Base+0x98>  // b.lo, b.ul, b.last
  40cafc:	cmp	w19, w3
  40cb00:	b.lt	40cb44 <parse_rtattr_flags@@Base+0x98>  // b.tstop
  40cb04:	ldrh	w9, [x20, #2]
  40cb08:	and	w9, w9, w8
  40cb0c:	cmp	w21, w9, uxth
  40cb10:	b.lt	40cb24 <parse_rtattr_flags@@Base+0x78>  // b.tstop
  40cb14:	and	x9, x9, #0xffff
  40cb18:	ldr	x10, [x22, x9, lsl #3]
  40cb1c:	cbnz	x10, 40cb24 <parse_rtattr_flags@@Base+0x78>
  40cb20:	str	x20, [x22, x9, lsl #3]
  40cb24:	add	w9, w3, #0x3
  40cb28:	and	x9, x9, #0x1fffc
  40cb2c:	sub	w19, w19, w9
  40cb30:	cmp	w19, #0x3
  40cb34:	add	x20, x20, x9
  40cb38:	b.gt	40caf0 <parse_rtattr_flags@@Base+0x44>
  40cb3c:	cbz	w19, 40cb60 <parse_rtattr_flags@@Base+0xb4>
  40cb40:	ldrh	w3, [x20]
  40cb44:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40cb48:	ldr	x8, [x8, #3992]
  40cb4c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40cb50:	add	x1, x1, #0xcb1
  40cb54:	mov	w2, w19
  40cb58:	ldr	x0, [x8]
  40cb5c:	bl	405330 <fprintf@plt>
  40cb60:	ldp	x20, x19, [sp, #48]
  40cb64:	ldp	x22, x21, [sp, #32]
  40cb68:	ldr	x23, [sp, #16]
  40cb6c:	mov	w0, wzr
  40cb70:	ldp	x29, x30, [sp], #64
  40cb74:	ret

000000000040cb78 <parse_rtattr_one@@Base>:
  40cb78:	stp	x29, x30, [sp, #-16]!
  40cb7c:	cmp	w2, #0x4
  40cb80:	mov	x29, sp
  40cb84:	b.lt	40cbc0 <parse_rtattr_one@@Base+0x48>  // b.tstop
  40cb88:	ldrh	w3, [x1]
  40cb8c:	cmp	x3, #0x4
  40cb90:	b.cc	40cbc8 <parse_rtattr_one@@Base+0x50>  // b.lo, b.ul, b.last
  40cb94:	cmp	w2, w3
  40cb98:	b.lt	40cbc8 <parse_rtattr_one@@Base+0x50>  // b.tstop
  40cb9c:	ldrh	w8, [x1, #2]
  40cba0:	cmp	w8, w0
  40cba4:	b.eq	40cbe4 <parse_rtattr_one@@Base+0x6c>  // b.none
  40cba8:	add	w8, w3, #0x3
  40cbac:	and	x8, x8, #0x1fffc
  40cbb0:	sub	w2, w2, w8
  40cbb4:	cmp	w2, #0x3
  40cbb8:	add	x1, x1, x8
  40cbbc:	b.gt	40cb88 <parse_rtattr_one@@Base+0x10>
  40cbc0:	cbz	w2, 40cbe0 <parse_rtattr_one@@Base+0x68>
  40cbc4:	ldrh	w3, [x1]
  40cbc8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40cbcc:	ldr	x8, [x8, #3992]
  40cbd0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40cbd4:	add	x1, x1, #0xcb1
  40cbd8:	ldr	x0, [x8]
  40cbdc:	bl	405330 <fprintf@plt>
  40cbe0:	mov	x1, xzr
  40cbe4:	mov	x0, x1
  40cbe8:	ldp	x29, x30, [sp], #16
  40cbec:	ret

000000000040cbf0 <__parse_rtattr_nested_compat@@Base>:
  40cbf0:	stp	x29, x30, [sp, #-16]!
  40cbf4:	ldrh	w8, [x2]
  40cbf8:	mov	x29, sp
  40cbfc:	sub	x8, x8, #0x4
  40cc00:	cmp	x8, w3, sxtw
  40cc04:	b.cs	40cc10 <__parse_rtattr_nested_compat@@Base+0x20>  // b.hs, b.nlast
  40cc08:	mov	w0, #0xffffffff            	// #-1
  40cc0c:	b	40cc54 <__parse_rtattr_nested_compat@@Base+0x64>
  40cc10:	add	w9, w3, #0x3
  40cc14:	and	x9, x9, #0xfffffffc
  40cc18:	add	x10, x9, #0x4
  40cc1c:	cmp	x8, x10
  40cc20:	b.cs	40cc38 <__parse_rtattr_nested_compat@@Base+0x48>  // b.hs, b.nlast
  40cc24:	add	w8, w1, #0x1
  40cc28:	sbfiz	x2, x8, #3, #32
  40cc2c:	mov	w1, wzr
  40cc30:	bl	404fe0 <memset@plt>
  40cc34:	b	40cc50 <__parse_rtattr_nested_compat@@Base+0x60>
  40cc38:	add	x8, x2, x9
  40cc3c:	ldrh	w9, [x8, #4]
  40cc40:	add	x2, x8, #0x8
  40cc44:	mov	w4, wzr
  40cc48:	sub	w3, w9, #0x4
  40cc4c:	bl	40caac <parse_rtattr_flags@@Base>
  40cc50:	mov	w0, wzr
  40cc54:	ldp	x29, x30, [sp], #16
  40cc58:	ret
  40cc5c:	stp	x29, x30, [sp, #-64]!
  40cc60:	stp	x24, x23, [sp, #16]
  40cc64:	stp	x22, x21, [sp, #32]
  40cc68:	stp	x20, x19, [sp, #48]
  40cc6c:	ldr	x24, [x1, #16]
  40cc70:	mov	x19, x2
  40cc74:	mov	w2, #0x22                  	// #34
  40cc78:	mov	x29, sp
  40cc7c:	mov	x21, x1
  40cc80:	mov	w22, w0
  40cc84:	stp	xzr, xzr, [x24]
  40cc88:	bl	40cd20 <__parse_rtattr_nested_compat@@Base+0x130>
  40cc8c:	mov	w20, w0
  40cc90:	tbnz	w0, #31, 40cce0 <__parse_rtattr_nested_compat@@Base+0xf0>
  40cc94:	cmp	w20, #0x8, lsl #12
  40cc98:	mov	w8, #0x8000                	// #32768
  40cc9c:	csel	w20, w20, w8, gt
  40cca0:	mov	x0, x20
  40cca4:	bl	404f70 <malloc@plt>
  40cca8:	cbz	x0, 40ccf8 <__parse_rtattr_nested_compat@@Base+0x108>
  40ccac:	mov	x23, x0
  40ccb0:	stp	x0, x20, [x24]
  40ccb4:	mov	w0, w22
  40ccb8:	mov	x1, x21
  40ccbc:	mov	w2, wzr
  40ccc0:	bl	40cd20 <__parse_rtattr_nested_compat@@Base+0x130>
  40ccc4:	mov	w20, w0
  40ccc8:	tbnz	w0, #31, 40ccd8 <__parse_rtattr_nested_compat@@Base+0xe8>
  40cccc:	cbz	x19, 40ccd8 <__parse_rtattr_nested_compat@@Base+0xe8>
  40ccd0:	str	x23, [x19]
  40ccd4:	b	40cce0 <__parse_rtattr_nested_compat@@Base+0xf0>
  40ccd8:	mov	x0, x23
  40ccdc:	bl	405160 <free@plt>
  40cce0:	mov	w0, w20
  40cce4:	ldp	x20, x19, [sp, #48]
  40cce8:	ldp	x22, x21, [sp, #32]
  40ccec:	ldp	x24, x23, [sp, #16]
  40ccf0:	ldp	x29, x30, [sp], #64
  40ccf4:	ret
  40ccf8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40ccfc:	ldr	x8, [x8, #3992]
  40cd00:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40cd04:	add	x0, x0, #0xcfb
  40cd08:	mov	w1, #0x20                  	// #32
  40cd0c:	ldr	x3, [x8]
  40cd10:	mov	w2, #0x1                   	// #1
  40cd14:	bl	4051c0 <fwrite@plt>
  40cd18:	mov	w20, #0xfffffff4            	// #-12
  40cd1c:	b	40cce0 <__parse_rtattr_nested_compat@@Base+0xf0>
  40cd20:	stp	x29, x30, [sp, #-48]!
  40cd24:	stp	x22, x21, [sp, #16]
  40cd28:	stp	x20, x19, [sp, #32]
  40cd2c:	mov	x29, sp
  40cd30:	mov	w20, w2
  40cd34:	mov	x21, x1
  40cd38:	mov	w22, w0
  40cd3c:	bl	404de0 <recvmsg@plt>
  40cd40:	tbnz	w0, #31, 40cd70 <__parse_rtattr_nested_compat@@Base+0x180>
  40cd44:	cbnz	w0, 40cdd4 <__parse_rtattr_nested_compat@@Base+0x1e4>
  40cd48:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40cd4c:	ldr	x8, [x8, #3992]
  40cd50:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x180>
  40cd54:	add	x0, x0, #0xb06
  40cd58:	mov	w1, #0xf                   	// #15
  40cd5c:	ldr	x3, [x8]
  40cd60:	mov	w2, #0x1                   	// #1
  40cd64:	bl	4051c0 <fwrite@plt>
  40cd68:	mov	w0, #0xffffffc3            	// #-61
  40cd6c:	b	40cdd4 <__parse_rtattr_nested_compat@@Base+0x1e4>
  40cd70:	bl	4052f0 <__errno_location@plt>
  40cd74:	mov	x19, x0
  40cd78:	ldr	w0, [x19]
  40cd7c:	cmp	w0, #0xb
  40cd80:	b.eq	40cd8c <__parse_rtattr_nested_compat@@Base+0x19c>  // b.none
  40cd84:	cmp	w0, #0x4
  40cd88:	b.ne	40cda4 <__parse_rtattr_nested_compat@@Base+0x1b4>  // b.any
  40cd8c:	mov	w0, w22
  40cd90:	mov	x1, x21
  40cd94:	mov	w2, w20
  40cd98:	bl	404de0 <recvmsg@plt>
  40cd9c:	tbnz	w0, #31, 40cd78 <__parse_rtattr_nested_compat@@Base+0x188>
  40cda0:	b	40cd44 <__parse_rtattr_nested_compat@@Base+0x154>
  40cda4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x11180>
  40cda8:	ldr	x8, [x8, #3992]
  40cdac:	ldr	x20, [x8]
  40cdb0:	bl	405080 <strerror@plt>
  40cdb4:	ldr	w3, [x19]
  40cdb8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x180>
  40cdbc:	mov	x2, x0
  40cdc0:	add	x1, x1, #0xae7
  40cdc4:	mov	x0, x20
  40cdc8:	bl	405330 <fprintf@plt>
  40cdcc:	ldr	w8, [x19]
  40cdd0:	neg	w0, w8
  40cdd4:	ldp	x20, x19, [sp, #32]
  40cdd8:	ldp	x22, x21, [sp, #16]
  40cddc:	ldp	x29, x30, [sp], #48
  40cde0:	ret
  40cde4:	nop

000000000040cde8 <__libc_csu_init@@Base>:
  40cde8:	stp	x29, x30, [sp, #-64]!
  40cdec:	mov	x29, sp
  40cdf0:	stp	x19, x20, [sp, #16]
  40cdf4:	adrp	x20, 41e000 <_IO_stdin_used@@Base+0x11180>
  40cdf8:	add	x20, x20, #0xcf8
  40cdfc:	stp	x21, x22, [sp, #32]
  40ce00:	adrp	x21, 41e000 <_IO_stdin_used@@Base+0x11180>
  40ce04:	add	x21, x21, #0xcf0
  40ce08:	sub	x20, x20, x21
  40ce0c:	mov	w22, w0
  40ce10:	stp	x23, x24, [sp, #48]
  40ce14:	mov	x23, x1
  40ce18:	mov	x24, x2
  40ce1c:	bl	404d90 <memcpy@plt-0x40>
  40ce20:	cmp	xzr, x20, asr #3
  40ce24:	b.eq	40ce50 <__libc_csu_init@@Base+0x68>  // b.none
  40ce28:	asr	x20, x20, #3
  40ce2c:	mov	x19, #0x0                   	// #0
  40ce30:	ldr	x3, [x21, x19, lsl #3]
  40ce34:	mov	x2, x24
  40ce38:	add	x19, x19, #0x1
  40ce3c:	mov	x1, x23
  40ce40:	mov	w0, w22
  40ce44:	blr	x3
  40ce48:	cmp	x20, x19
  40ce4c:	b.ne	40ce30 <__libc_csu_init@@Base+0x48>  // b.any
  40ce50:	ldp	x19, x20, [sp, #16]
  40ce54:	ldp	x21, x22, [sp, #32]
  40ce58:	ldp	x23, x24, [sp, #48]
  40ce5c:	ldp	x29, x30, [sp], #64
  40ce60:	ret
  40ce64:	nop

000000000040ce68 <__libc_csu_fini@@Base>:
  40ce68:	ret

Disassembly of section .fini:

000000000040ce6c <.fini>:
  40ce6c:	stp	x29, x30, [sp, #-16]!
  40ce70:	mov	x29, sp
  40ce74:	ldp	x29, x30, [sp], #16
  40ce78:	ret
