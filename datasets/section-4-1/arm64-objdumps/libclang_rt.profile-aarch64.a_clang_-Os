In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.profile-aarch64.a_clang_-Os:

GCDAProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <llvm_gcda_start_file>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	str	x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	mov	x20, x1
  24:	mov	x21, x0
  28:	sub	x0, x29, #0x4
  2c:	add	x1, x29, #0x18
  30:	mov	w19, w2
  34:	bl	0 <lprofGetPathPrefix>
  38:	cbz	x0, 74 <llvm_gcda_start_file+0x74>
  3c:	ldr	x24, [x29, #24]
  40:	mov	x23, x0
  44:	mov	x0, x21
  48:	bl	0 <strlen>
  4c:	add	x8, x24, x0
  50:	add	x0, x8, #0x2
  54:	bl	0 <malloc>
  58:	ldur	w4, [x29, #-4]
  5c:	mov	x1, x21
  60:	mov	x2, x23
  64:	mov	x3, x24
  68:	mov	x22, x0
  6c:	bl	0 <lprofApplyPathPrefix>
  70:	b	80 <llvm_gcda_start_file+0x80>
  74:	mov	x0, x21
  78:	bl	0 <strdup>
  7c:	mov	x22, x0
  80:	adrp	x24, 0 <llvm_gcda_start_file>
  84:	adrp	x23, 0 <llvm_gcda_start_file>
  88:	mov	w1, #0x2                   	// #2
  8c:	mov	x0, x22
  90:	str	x22, [x24]
  94:	strb	wzr, [x23]
  98:	bl	0 <open>
  9c:	adrp	x22, 0 <llvm_gcda_start_file>
  a0:	cmn	w0, #0x1
  a4:	str	w0, [x22]
  a8:	b.eq	b8 <llvm_gcda_start_file+0xb8>  // b.none
  ac:	adrp	x21, 0 <llvm_gcda_start_file>
  b0:	add	x21, x21, #0x0
  b4:	b	108 <llvm_gcda_start_file+0x108>
  b8:	ldr	x0, [x24]
  bc:	mov	w8, #0x1                   	// #1
  c0:	mov	w1, #0x42                  	// #66
  c4:	mov	w2, #0x1a4                 	// #420
  c8:	strb	w8, [x23]
  cc:	bl	0 <open>
  d0:	cmn	w0, #0x1
  d4:	str	w0, [x22]
  d8:	b.ne	100 <llvm_gcda_start_file+0x100>  // b.any
  dc:	ldr	x0, [x24]
  e0:	bl	0 <__llvm_profile_recursive_mkdir>
  e4:	ldr	x0, [x24]
  e8:	mov	w1, #0x42                  	// #66
  ec:	mov	w2, #0x1a4                 	// #420
  f0:	bl	0 <open>
  f4:	cmn	w0, #0x1
  f8:	str	w0, [x22]
  fc:	b.eq	264 <llvm_gcda_start_file+0x264>  // b.none
 100:	adrp	x21, 0 <llvm_gcda_start_file>
 104:	add	x21, x21, #0x0
 108:	bl	0 <lprofLockFd>
 10c:	ldr	w0, [x22]
 110:	mov	x1, x21
 114:	bl	0 <fdopen>
 118:	ldrb	w8, [x23]
 11c:	adrp	x21, 0 <llvm_gcda_start_file>
 120:	adrp	x25, 0 <llvm_gcda_start_file>
 124:	adrp	x27, 0 <llvm_gcda_start_file>
 128:	adrp	x26, 0 <llvm_gcda_start_file>
 12c:	str	x0, [x21]
 130:	str	xzr, [x25]
 134:	str	xzr, [x27]
 138:	str	xzr, [x26]
 13c:	tbnz	w8, #0, 1cc <llvm_gcda_start_file+0x1cc>
 140:	mov	w2, #0x2                   	// #2
 144:	mov	x1, xzr
 148:	bl	0 <fseek>
 14c:	ldr	x0, [x21]
 150:	bl	0 <ftell>
 154:	adrp	x8, 0 <llvm_gcda_start_file>
 158:	str	x0, [x8]
 15c:	cbz	x0, 1bc <llvm_gcda_start_file+0x1bc>
 160:	ldr	w4, [x22]
 164:	mov	x1, x0
 168:	mov	w2, #0x3                   	// #3
 16c:	mov	w3, #0x1                   	// #1
 170:	mov	x0, xzr
 174:	mov	x5, xzr
 178:	bl	0 <mmap>
 17c:	cmn	x0, #0x1
 180:	str	x0, [x25]
 184:	b.ne	1e4 <llvm_gcda_start_file+0x1e4>  // b.any
 188:	bl	0 <__errno_location>
 18c:	adrp	x8, 0 <stderr>
 190:	ldr	w0, [x0]
 194:	ldr	x8, [x8]
 198:	ldr	x22, [x24]
 19c:	ldr	x21, [x8]
 1a0:	bl	0 <strerror>
 1a4:	adrp	x1, 0 <llvm_gcda_start_file>
 1a8:	mov	x3, x0
 1ac:	add	x1, x1, #0x0
 1b0:	mov	x0, x21
 1b4:	mov	x2, x22
 1b8:	bl	0 <fprintf>
 1bc:	mov	w8, #0x1                   	// #1
 1c0:	str	xzr, [x25]
 1c4:	strb	w8, [x23]
 1c8:	str	xzr, [x27]
 1cc:	mov	w0, #0x20000               	// #131072
 1d0:	bl	29c <resize_write_buffer>
 1d4:	ldr	x0, [x25]
 1d8:	mov	w2, #0x20000               	// #131072
 1dc:	mov	w1, wzr
 1e0:	bl	0 <memset>
 1e4:	mov	w0, #0x4                   	// #4
 1e8:	bl	29c <resize_write_buffer>
 1ec:	ldr	x8, [x25]
 1f0:	ldr	x9, [x26]
 1f4:	mov	w10, #0x6461                	// #25697
 1f8:	movk	w10, #0x6763, lsl #16
 1fc:	mov	w0, #0x4                   	// #4
 200:	str	w10, [x8, x9]
 204:	add	x8, x9, #0x4
 208:	str	x8, [x26]
 20c:	bl	29c <resize_write_buffer>
 210:	ldr	x8, [x25]
 214:	ldr	x9, [x26]
 218:	ldr	w10, [x20]
 21c:	mov	w0, #0x4                   	// #4
 220:	str	w10, [x8, x9]
 224:	add	x8, x9, #0x4
 228:	str	x8, [x26]
 22c:	bl	29c <resize_write_buffer>
 230:	ldr	x8, [x25]
 234:	ldr	x9, [x26]
 238:	str	w19, [x8, x9]
 23c:	add	x8, x9, #0x4
 240:	str	x8, [x26]
 244:	ldp	x20, x19, [sp, #96]
 248:	ldp	x22, x21, [sp, #80]
 24c:	ldp	x24, x23, [sp, #64]
 250:	ldp	x26, x25, [sp, #48]
 254:	ldr	x27, [sp, #32]
 258:	ldp	x29, x30, [sp, #16]
 25c:	add	sp, sp, #0x70
 260:	ret
 264:	bl	0 <__errno_location>
 268:	adrp	x8, 0 <stderr>
 26c:	ldr	w0, [x0]
 270:	ldr	x8, [x8]
 274:	ldr	x20, [x24]
 278:	ldr	x19, [x8]
 27c:	bl	0 <strerror>
 280:	adrp	x1, 0 <llvm_gcda_start_file>
 284:	mov	x3, x0
 288:	add	x1, x1, #0x0
 28c:	mov	x0, x19
 290:	mov	x2, x20
 294:	bl	0 <fprintf>
 298:	b	244 <llvm_gcda_start_file+0x244>

000000000000029c <resize_write_buffer>:
 29c:	stp	x29, x30, [sp, #-48]!
 2a0:	str	x21, [sp, #16]
 2a4:	stp	x20, x19, [sp, #32]
 2a8:	mov	x29, sp
 2ac:	adrp	x8, 0 <llvm_gcda_start_file>
 2b0:	ldrb	w8, [x8]
 2b4:	cmp	w8, #0x1
 2b8:	b.ne	2fc <resize_write_buffer+0x60>  // b.any
 2bc:	adrp	x8, 0 <llvm_gcda_start_file>
 2c0:	ldr	x8, [x8]
 2c4:	adrp	x20, 0 <llvm_gcda_start_file>
 2c8:	ldr	x9, [x20]
 2cc:	add	x8, x8, x0
 2d0:	cmp	x8, x9
 2d4:	b.ls	2fc <resize_write_buffer+0x60>  // b.plast
 2d8:	adrp	x21, 0 <llvm_gcda_start_file>
 2dc:	ldr	x0, [x21]
 2e0:	mov	w9, #0x1ffff               	// #131071
 2e4:	add	x8, x8, x9
 2e8:	and	x19, x8, #0xfffffffffffe0000
 2ec:	mov	x1, x19
 2f0:	bl	0 <realloc>
 2f4:	str	x0, [x21]
 2f8:	str	x19, [x20]
 2fc:	ldp	x20, x19, [sp, #32]
 300:	ldr	x21, [sp, #16]
 304:	ldp	x29, x30, [sp], #48
 308:	ret

000000000000030c <llvm_gcda_increment_indirect_counter>:
 30c:	ldr	w8, [x0]
 310:	cmn	w8, #0x1
 314:	b.eq	32c <llvm_gcda_increment_indirect_counter+0x20>  // b.none
 318:	ldr	x8, [x1, x8, lsl #3]
 31c:	cbz	x8, 32c <llvm_gcda_increment_indirect_counter+0x20>
 320:	ldr	x9, [x8]
 324:	add	x9, x9, #0x1
 328:	str	x9, [x8]
 32c:	ret

0000000000000330 <llvm_gcda_emit_function>:
 330:	stp	x29, x30, [sp, #-80]!
 334:	stp	x26, x25, [sp, #16]
 338:	stp	x24, x23, [sp, #32]
 33c:	stp	x22, x21, [sp, #48]
 340:	stp	x20, x19, [sp, #64]
 344:	mov	x29, sp
 348:	adrp	x8, 0 <llvm_gcda_start_file>
 34c:	ldr	x8, [x8]
 350:	tst	w3, #0xff
 354:	mov	w9, #0x2                   	// #2
 358:	cinc	w26, w9, ne  // ne = any
 35c:	cbz	x8, 4c8 <llvm_gcda_emit_function+0x198>
 360:	mov	w22, w0
 364:	mov	w0, #0x4                   	// #4
 368:	mov	w20, w4
 36c:	mov	w23, w3
 370:	mov	w21, w2
 374:	mov	x19, x1
 378:	bl	29c <resize_write_buffer>
 37c:	adrp	x25, 0 <llvm_gcda_start_file>
 380:	adrp	x24, 0 <llvm_gcda_start_file>
 384:	ldr	x8, [x25]
 388:	ldr	x9, [x24]
 38c:	mov	w10, #0x1000000             	// #16777216
 390:	str	w10, [x8, x9]
 394:	add	x8, x9, #0x4
 398:	str	x8, [x24]
 39c:	cbz	x19, 3b4 <llvm_gcda_emit_function+0x84>
 3a0:	mov	x0, x19
 3a4:	bl	0 <strlen>
 3a8:	lsr	x8, x0, #2
 3ac:	add	w8, w26, w8
 3b0:	add	w26, w8, #0x2
 3b4:	mov	w0, #0x4                   	// #4
 3b8:	and	w23, w23, #0xff
 3bc:	bl	29c <resize_write_buffer>
 3c0:	ldr	x8, [x25]
 3c4:	ldr	x9, [x24]
 3c8:	mov	w0, #0x4                   	// #4
 3cc:	str	w26, [x8, x9]
 3d0:	add	x8, x9, #0x4
 3d4:	str	x8, [x24]
 3d8:	bl	29c <resize_write_buffer>
 3dc:	ldr	x8, [x25]
 3e0:	ldr	x9, [x24]
 3e4:	mov	w0, #0x4                   	// #4
 3e8:	str	w22, [x8, x9]
 3ec:	add	x8, x9, #0x4
 3f0:	str	x8, [x24]
 3f4:	bl	29c <resize_write_buffer>
 3f8:	ldr	x8, [x25]
 3fc:	ldr	x9, [x24]
 400:	str	w21, [x8, x9]
 404:	add	x8, x9, #0x4
 408:	str	x8, [x24]
 40c:	cbz	w23, 42c <llvm_gcda_emit_function+0xfc>
 410:	mov	w0, #0x4                   	// #4
 414:	bl	29c <resize_write_buffer>
 418:	ldr	x8, [x25]
 41c:	ldr	x9, [x24]
 420:	str	w20, [x8, x9]
 424:	add	x8, x9, #0x4
 428:	str	x8, [x24]
 42c:	cbz	x19, 4c8 <llvm_gcda_emit_function+0x198>
 430:	mov	x0, x19
 434:	bl	0 <strlen>
 438:	lsr	x8, x0, #2
 43c:	mov	w0, #0x4                   	// #4
 440:	add	w20, w8, #0x1
 444:	mov	w21, #0x4                   	// #4
 448:	bl	29c <resize_write_buffer>
 44c:	ldr	x8, [x25]
 450:	ldr	x9, [x24]
 454:	mov	x0, x19
 458:	str	w20, [x8, x9]
 45c:	add	x8, x9, #0x4
 460:	str	x8, [x24]
 464:	bl	0 <strlen>
 468:	mov	x20, x0
 46c:	bl	29c <resize_write_buffer>
 470:	ldr	x8, [x25]
 474:	ldr	x22, [x24]
 478:	mov	x1, x19
 47c:	mov	x2, x20
 480:	add	x0, x8, x22
 484:	bl	0 <memcpy>
 488:	add	x8, x22, x20
 48c:	mov	x0, x19
 490:	str	x8, [x24]
 494:	bl	0 <strlen>
 498:	and	x8, x0, #0x3
 49c:	sub	x19, x21, x8
 4a0:	mov	x0, x19
 4a4:	bl	29c <resize_write_buffer>
 4a8:	ldr	x8, [x25]
 4ac:	ldr	x20, [x24]
 4b0:	mov	w1, wzr
 4b4:	mov	x2, x19
 4b8:	add	x0, x8, x20
 4bc:	bl	0 <memset>
 4c0:	add	x8, x20, x19
 4c4:	str	x8, [x24]
 4c8:	ldp	x20, x19, [sp, #64]
 4cc:	ldp	x22, x21, [sp, #48]
 4d0:	ldp	x24, x23, [sp, #32]
 4d4:	ldp	x26, x25, [sp, #16]
 4d8:	ldp	x29, x30, [sp], #80
 4dc:	ret

00000000000004e0 <llvm_gcda_emit_arcs>:
 4e0:	stp	x29, x30, [sp, #-80]!
 4e4:	stp	x26, x25, [sp, #16]
 4e8:	stp	x24, x23, [sp, #32]
 4ec:	stp	x22, x21, [sp, #48]
 4f0:	stp	x20, x19, [sp, #64]
 4f4:	mov	x29, sp
 4f8:	adrp	x8, 0 <llvm_gcda_start_file>
 4fc:	ldr	x8, [x8]
 500:	cbz	x8, 69c <llvm_gcda_emit_arcs+0x1bc>
 504:	adrp	x22, 0 <llvm_gcda_start_file>
 508:	adrp	x8, 0 <llvm_gcda_start_file>
 50c:	ldrb	w8, [x8]
 510:	ldr	x24, [x22]
 514:	mov	x19, x1
 518:	mov	w20, w0
 51c:	adrp	x23, 0 <llvm_gcda_start_file>
 520:	tbnz	w8, #0, 5c8 <llvm_gcda_emit_arcs+0xe8>
 524:	ldr	x25, [x23]
 528:	mov	w8, wzr
 52c:	mov	w3, wzr
 530:	add	x9, x25, x24
 534:	ldrb	w10, [x9], #1
 538:	lsl	w10, w10, w8
 53c:	add	w8, w8, #0x8
 540:	cmp	w8, #0x20
 544:	orr	w3, w10, w3
 548:	b.ne	534 <llvm_gcda_emit_arcs+0x54>  // b.any
 54c:	add	x8, x24, #0x4
 550:	cmn	w3, #0x1
 554:	str	x8, [x22]
 558:	b.eq	5c8 <llvm_gcda_emit_arcs+0xe8>  // b.none
 55c:	mov	w9, #0x1a10000             	// #27328512
 560:	cmp	w3, w9
 564:	b.ne	6b4 <llvm_gcda_emit_arcs+0x1d4>  // b.any
 568:	ldr	w3, [x25, x8]
 56c:	add	x8, x24, #0x8
 570:	str	x8, [x22]
 574:	cmn	w3, #0x1
 578:	b.eq	6d4 <llvm_gcda_emit_arcs+0x1f4>  // b.none
 57c:	lsr	w8, w3, #1
 580:	cmp	w8, w20
 584:	b.ne	6d4 <llvm_gcda_emit_arcs+0x1f4>  // b.any
 588:	mov	w26, w20
 58c:	lsl	x0, x26, #3
 590:	bl	0 <malloc>
 594:	mov	x21, x0
 598:	cbz	w20, 5cc <llvm_gcda_emit_arcs+0xec>
 59c:	mov	x9, x21
 5a0:	mov	x8, x24
 5a4:	add	x10, x25, x8
 5a8:	ldr	x10, [x10, #8]
 5ac:	subs	x26, x26, #0x1
 5b0:	add	x8, x8, #0x8
 5b4:	str	x10, [x9], #8
 5b8:	b.ne	5a4 <llvm_gcda_emit_arcs+0xc4>  // b.any
 5bc:	add	x8, x8, #0x8
 5c0:	str	x8, [x22]
 5c4:	b	5cc <llvm_gcda_emit_arcs+0xec>
 5c8:	mov	x21, xzr
 5cc:	mov	w0, #0x4                   	// #4
 5d0:	str	x24, [x22]
 5d4:	bl	29c <resize_write_buffer>
 5d8:	ldr	x8, [x23]
 5dc:	ldr	x9, [x22]
 5e0:	mov	w10, #0x1a10000             	// #27328512
 5e4:	mov	w0, #0x4                   	// #4
 5e8:	lsl	w24, w20, #1
 5ec:	str	w10, [x8, x9]
 5f0:	add	x8, x9, #0x4
 5f4:	str	x8, [x22]
 5f8:	bl	29c <resize_write_buffer>
 5fc:	ldr	x8, [x23]
 600:	ldr	x9, [x22]
 604:	str	w24, [x8, x9]
 608:	add	x8, x9, #0x4
 60c:	str	x8, [x22]
 610:	cbz	w20, 680 <llvm_gcda_emit_arcs+0x1a0>
 614:	mov	w20, w20
 618:	mov	x24, x21
 61c:	cbz	x21, 628 <llvm_gcda_emit_arcs+0x148>
 620:	ldr	x8, [x24]
 624:	b	62c <llvm_gcda_emit_arcs+0x14c>
 628:	mov	x8, xzr
 62c:	ldr	x9, [x19]
 630:	mov	w0, #0x4                   	// #4
 634:	add	x25, x9, x8
 638:	str	x25, [x19], #8
 63c:	lsr	x26, x25, #32
 640:	bl	29c <resize_write_buffer>
 644:	ldr	x8, [x23]
 648:	ldr	x9, [x22]
 64c:	mov	w0, #0x4                   	// #4
 650:	str	w25, [x8, x9]
 654:	add	x8, x9, #0x4
 658:	str	x8, [x22]
 65c:	bl	29c <resize_write_buffer>
 660:	ldr	x8, [x23]
 664:	ldr	x9, [x22]
 668:	subs	x20, x20, #0x1
 66c:	add	x24, x24, #0x8
 670:	str	w26, [x8, x9]
 674:	add	x8, x9, #0x4
 678:	str	x8, [x22]
 67c:	b.ne	61c <llvm_gcda_emit_arcs+0x13c>  // b.any
 680:	mov	x0, x21
 684:	ldp	x20, x19, [sp, #64]
 688:	ldp	x22, x21, [sp, #48]
 68c:	ldp	x24, x23, [sp, #32]
 690:	ldp	x26, x25, [sp, #16]
 694:	ldp	x29, x30, [sp], #80
 698:	b	0 <free>
 69c:	ldp	x20, x19, [sp, #64]
 6a0:	ldp	x22, x21, [sp, #48]
 6a4:	ldp	x24, x23, [sp, #32]
 6a8:	ldp	x26, x25, [sp, #16]
 6ac:	ldp	x29, x30, [sp], #80
 6b0:	ret
 6b4:	adrp	x8, 0 <stderr>
 6b8:	ldr	x8, [x8]
 6bc:	adrp	x9, 0 <llvm_gcda_start_file>
 6c0:	ldr	x2, [x9]
 6c4:	adrp	x1, 0 <llvm_gcda_start_file>
 6c8:	ldr	x0, [x8]
 6cc:	add	x1, x1, #0x0
 6d0:	b	6f0 <llvm_gcda_emit_arcs+0x210>
 6d4:	adrp	x8, 0 <stderr>
 6d8:	ldr	x8, [x8]
 6dc:	adrp	x9, 0 <llvm_gcda_start_file>
 6e0:	ldr	x2, [x9]
 6e4:	adrp	x1, 0 <llvm_gcda_start_file>
 6e8:	ldr	x0, [x8]
 6ec:	add	x1, x1, #0x0
 6f0:	ldp	x20, x19, [sp, #64]
 6f4:	ldp	x22, x21, [sp, #48]
 6f8:	ldp	x24, x23, [sp, #32]
 6fc:	ldp	x26, x25, [sp, #16]
 700:	ldp	x29, x30, [sp], #80
 704:	b	0 <fprintf>

0000000000000708 <llvm_gcda_summary_info>:
 708:	stp	x29, x30, [sp, #-48]!
 70c:	stp	x22, x21, [sp, #16]
 710:	stp	x20, x19, [sp, #32]
 714:	mov	x29, sp
 718:	adrp	x8, 0 <llvm_gcda_start_file>
 71c:	ldr	x8, [x8]
 720:	cbz	x8, 8cc <llvm_gcda_summary_info+0x1c4>
 724:	adrp	x19, 0 <llvm_gcda_start_file>
 728:	adrp	x8, 0 <llvm_gcda_start_file>
 72c:	ldrb	w9, [x8]
 730:	ldr	x8, [x19]
 734:	adrp	x21, 0 <llvm_gcda_start_file>
 738:	adrp	x20, 0 <llvm_gcda_start_file>
 73c:	tbnz	w9, #0, 784 <llvm_gcda_summary_info+0x7c>
 740:	ldr	x9, [x21]
 744:	mov	w10, wzr
 748:	mov	w3, wzr
 74c:	add	x11, x9, x8
 750:	ldrb	w12, [x11], #1
 754:	lsl	w12, w12, w10
 758:	add	w10, w10, #0x8
 75c:	cmp	w10, #0x20
 760:	orr	w3, w12, w3
 764:	b.ne	750 <llvm_gcda_summary_info+0x48>  // b.any
 768:	mov	w11, #0xa1000000            	// #-1593835520
 76c:	add	x10, x8, #0x4
 770:	cmp	w3, w11
 774:	str	x10, [x19]
 778:	b.eq	78c <llvm_gcda_summary_info+0x84>  // b.none
 77c:	cmn	w3, #0x1
 780:	b.ne	8dc <llvm_gcda_summary_info+0x1d4>  // b.any
 784:	mov	w22, #0x1                   	// #1
 788:	b	7c0 <llvm_gcda_summary_info+0xb8>
 78c:	ldr	w3, [x9, x10]
 790:	add	x10, x8, #0x8
 794:	str	x10, [x19]
 798:	cmp	w3, #0x9
 79c:	b.ne	8fc <llvm_gcda_summary_info+0x1f4>  // b.any
 7a0:	ldrb	w10, [x20]
 7a4:	add	x9, x8, x9
 7a8:	ldr	w9, [x9, #16]
 7ac:	add	x11, x8, #0x14
 7b0:	mvn	w10, w10
 7b4:	and	w10, w10, #0x1
 7b8:	add	w22, w9, w10
 7bc:	str	x11, [x19]
 7c0:	mov	w0, #0x4                   	// #4
 7c4:	str	x8, [x19]
 7c8:	bl	29c <resize_write_buffer>
 7cc:	ldr	x8, [x21]
 7d0:	ldr	x9, [x19]
 7d4:	mov	w10, #0xa1000000            	// #-1593835520
 7d8:	mov	w0, #0x4                   	// #4
 7dc:	str	w10, [x8, x9]
 7e0:	add	x8, x9, #0x4
 7e4:	str	x8, [x19]
 7e8:	bl	29c <resize_write_buffer>
 7ec:	ldr	x8, [x21]
 7f0:	ldr	x9, [x19]
 7f4:	mov	w10, #0x9                   	// #9
 7f8:	mov	w0, #0x4                   	// #4
 7fc:	str	w10, [x8, x9]
 800:	add	x8, x9, #0x4
 804:	str	x8, [x19]
 808:	bl	29c <resize_write_buffer>
 80c:	ldr	x8, [x21]
 810:	ldr	x9, [x19]
 814:	mov	w0, #0x4                   	// #4
 818:	str	wzr, [x8, x9]
 81c:	add	x8, x9, #0x4
 820:	str	x8, [x19]
 824:	bl	29c <resize_write_buffer>
 828:	ldr	x8, [x21]
 82c:	ldr	x9, [x19]
 830:	mov	w0, #0x4                   	// #4
 834:	str	wzr, [x8, x9]
 838:	add	x8, x9, #0x4
 83c:	str	x8, [x19]
 840:	bl	29c <resize_write_buffer>
 844:	ldr	x8, [x21]
 848:	ldr	x9, [x19]
 84c:	mov	w0, #0x4                   	// #4
 850:	str	w22, [x8, x9]
 854:	add	x8, x9, #0x4
 858:	str	x8, [x19]
 85c:	bl	29c <resize_write_buffer>
 860:	ldr	x9, [x21]
 864:	ldr	x8, [x19]
 868:	mov	w22, #0x6                   	// #6
 86c:	add	x9, x9, x8
 870:	add	x8, x8, #0x4
 874:	mov	w0, #0x4                   	// #4
 878:	str	wzr, [x9]
 87c:	str	x8, [x19]
 880:	bl	29c <resize_write_buffer>
 884:	ldr	x9, [x21]
 888:	ldr	x8, [x19]
 88c:	subs	w22, w22, #0x1
 890:	add	x9, x9, x8
 894:	b.ne	870 <llvm_gcda_summary_info+0x168>  // b.any
 898:	mov	w10, #0xa3000000            	// #-1560281088
 89c:	add	x8, x8, #0x4
 8a0:	mov	w0, #0x4                   	// #4
 8a4:	str	w10, [x9]
 8a8:	str	x8, [x19]
 8ac:	bl	29c <resize_write_buffer>
 8b0:	ldr	x8, [x21]
 8b4:	ldr	x9, [x19]
 8b8:	mov	w10, #0x1                   	// #1
 8bc:	str	wzr, [x8, x9]
 8c0:	add	x8, x9, #0x4
 8c4:	str	x8, [x19]
 8c8:	strb	w10, [x20]
 8cc:	ldp	x20, x19, [sp, #32]
 8d0:	ldp	x22, x21, [sp, #16]
 8d4:	ldp	x29, x30, [sp], #48
 8d8:	ret
 8dc:	adrp	x8, 0 <stderr>
 8e0:	ldr	x8, [x8]
 8e4:	adrp	x9, 0 <llvm_gcda_start_file>
 8e8:	ldr	x2, [x9]
 8ec:	adrp	x1, 0 <llvm_gcda_start_file>
 8f0:	ldr	x0, [x8]
 8f4:	add	x1, x1, #0x0
 8f8:	b	918 <llvm_gcda_summary_info+0x210>
 8fc:	adrp	x8, 0 <stderr>
 900:	ldr	x8, [x8]
 904:	adrp	x9, 0 <llvm_gcda_start_file>
 908:	ldr	x2, [x9]
 90c:	adrp	x1, 0 <llvm_gcda_start_file>
 910:	ldr	x0, [x8]
 914:	add	x1, x1, #0x0
 918:	ldp	x20, x19, [sp, #32]
 91c:	ldp	x22, x21, [sp, #16]
 920:	ldp	x29, x30, [sp], #48
 924:	b	0 <fprintf>

0000000000000928 <llvm_gcda_end_file>:
 928:	stp	x29, x30, [sp, #-64]!
 92c:	stp	x24, x23, [sp, #16]
 930:	stp	x22, x21, [sp, #32]
 934:	stp	x20, x19, [sp, #48]
 938:	mov	x29, sp
 93c:	adrp	x22, 0 <llvm_gcda_start_file>
 940:	ldr	x8, [x22]
 944:	adrp	x21, 0 <llvm_gcda_start_file>
 948:	cbz	x8, 9e8 <llvm_gcda_end_file+0xc0>
 94c:	mov	w0, #0x8                   	// #8
 950:	bl	29c <resize_write_buffer>
 954:	adrp	x23, 0 <llvm_gcda_start_file>
 958:	adrp	x8, 0 <llvm_gcda_start_file>
 95c:	ldr	x0, [x23]
 960:	ldr	x9, [x8]
 964:	adrp	x10, 0 <llvm_gcda_start_file>
 968:	str	xzr, [x0, x9]
 96c:	ldrb	w10, [x10]
 970:	add	x1, x9, #0x8
 974:	str	x1, [x8]
 978:	cmp	w10, #0x1
 97c:	b.ne	998 <llvm_gcda_end_file+0x70>  // b.any
 980:	ldr	x3, [x22]
 984:	mov	w2, #0x1                   	// #1
 988:	bl	0 <fwrite>
 98c:	ldr	x0, [x23]
 990:	bl	0 <free>
 994:	b	9c4 <llvm_gcda_end_file+0x9c>
 998:	adrp	x24, 0 <llvm_gcda_start_file>
 99c:	ldr	x1, [x24]
 9a0:	mov	w2, #0x4                   	// #4
 9a4:	bl	0 <msync>
 9a8:	cmn	w0, #0x1
 9ac:	b.eq	a00 <llvm_gcda_end_file+0xd8>  // b.none
 9b0:	ldr	x0, [x23]
 9b4:	ldr	x1, [x24]
 9b8:	bl	0 <munmap>
 9bc:	str	xzr, [x23]
 9c0:	str	xzr, [x24]
 9c4:	ldr	x0, [x22]
 9c8:	bl	0 <fflush>
 9cc:	adrp	x8, 0 <llvm_gcda_start_file>
 9d0:	ldr	w0, [x8]
 9d4:	bl	0 <lprofUnlockFd>
 9d8:	ldr	x0, [x22]
 9dc:	bl	0 <fclose>
 9e0:	str	xzr, [x22]
 9e4:	str	xzr, [x23]
 9e8:	ldr	x0, [x21]
 9ec:	ldp	x20, x19, [sp, #48]
 9f0:	ldp	x22, x21, [sp, #32]
 9f4:	ldp	x24, x23, [sp, #16]
 9f8:	ldp	x29, x30, [sp], #64
 9fc:	b	0 <free>
 a00:	bl	0 <__errno_location>
 a04:	adrp	x8, 0 <stderr>
 a08:	ldr	w0, [x0]
 a0c:	ldr	x8, [x8]
 a10:	ldr	x20, [x21]
 a14:	ldr	x19, [x8]
 a18:	bl	0 <strerror>
 a1c:	adrp	x1, 0 <llvm_gcda_start_file>
 a20:	mov	x3, x0
 a24:	add	x1, x1, #0x0
 a28:	mov	x0, x19
 a2c:	mov	x2, x20
 a30:	bl	0 <fprintf>
 a34:	b	9b0 <llvm_gcda_end_file+0x88>

0000000000000a38 <llvm_register_writeout_function>:
 a38:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
 a3c:	ldr	x8, [x8]
 a40:	mov	x1, x0
 a44:	mov	x0, x8
 a48:	b	a4c <fn_list_insert>

0000000000000a4c <fn_list_insert>:
 a4c:	stp	x29, x30, [sp, #-32]!
 a50:	stp	x20, x19, [sp, #16]
 a54:	mov	x29, sp
 a58:	mov	x19, x0
 a5c:	mov	w0, #0x18                  	// #24
 a60:	mov	x20, x1
 a64:	bl	0 <malloc>
 a68:	adrp	x8, 0 <llvm_gcda_start_file>
 a6c:	add	x8, x8, #0x0
 a70:	stp	x20, xzr, [x0, #8]
 a74:	str	x8, [x0]
 a78:	mov	x8, x19
 a7c:	ldr	x9, [x8], #8
 a80:	cbz	x9, a94 <fn_list_insert+0x48>
 a84:	ldr	x9, [x8]
 a88:	mov	x19, x8
 a8c:	str	x0, [x9, #16]
 a90:	b	a98 <fn_list_insert+0x4c>
 a94:	str	x0, [x19, #8]
 a98:	str	x0, [x19]
 a9c:	ldp	x20, x19, [sp, #16]
 aa0:	ldp	x29, x30, [sp], #32
 aa4:	ret

0000000000000aa8 <llvm_writeout_files>:
 aa8:	stp	x29, x30, [sp, #-32]!
 aac:	stp	x20, x19, [sp, #16]
 ab0:	mov	x29, sp
 ab4:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
 ab8:	ldr	x8, [x8]
 abc:	ldr	x19, [x8]
 ac0:	cbz	x19, ae8 <llvm_writeout_files+0x40>
 ac4:	adrp	x20, 0 <llvm_gcda_start_file>
 ac8:	add	x20, x20, #0x0
 acc:	ldr	x8, [x19]
 ad0:	cmp	x8, x20
 ad4:	b.ne	ae0 <llvm_writeout_files+0x38>  // b.any
 ad8:	ldr	x8, [x19, #8]
 adc:	blr	x8
 ae0:	ldr	x19, [x19, #16]
 ae4:	cbnz	x19, acc <llvm_writeout_files+0x24>
 ae8:	ldp	x20, x19, [sp, #16]
 aec:	ldp	x29, x30, [sp], #32
 af0:	ret

0000000000000af4 <llvm_delete_writeout_function_list>:
 af4:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
 af8:	ldr	x0, [x0]
 afc:	b	b00 <fn_list_remove>

0000000000000b00 <fn_list_remove>:
 b00:	stp	x29, x30, [sp, #-48]!
 b04:	stp	x22, x21, [sp, #16]
 b08:	stp	x20, x19, [sp, #32]
 b0c:	mov	x29, sp
 b10:	mov	x19, x0
 b14:	ldr	x0, [x0]
 b18:	cbz	x0, b80 <fn_list_remove+0x80>
 b1c:	adrp	x21, 0 <llvm_gcda_start_file>
 b20:	mov	x20, xzr
 b24:	add	x21, x21, #0x0
 b28:	ldr	x8, [x0]
 b2c:	ldr	x22, [x0, #16]
 b30:	cmp	x8, x21
 b34:	b.eq	b40 <fn_list_remove+0x40>  // b.none
 b38:	mov	x20, x0
 b3c:	b	b68 <fn_list_remove+0x68>
 b40:	ldr	x8, [x19]
 b44:	cmp	x0, x8
 b48:	b.ne	b50 <fn_list_remove+0x50>  // b.any
 b4c:	str	x22, [x19]
 b50:	ldr	x8, [x19, #8]
 b54:	cmp	x0, x8
 b58:	b.eq	b74 <fn_list_remove+0x74>  // b.none
 b5c:	cbz	x20, b64 <fn_list_remove+0x64>
 b60:	str	x22, [x20, #16]
 b64:	bl	0 <free>
 b68:	mov	x0, x22
 b6c:	cbnz	x22, b28 <fn_list_remove+0x28>
 b70:	b	b80 <fn_list_remove+0x80>
 b74:	str	x20, [x19, #8]
 b78:	cbnz	x20, b60 <fn_list_remove+0x60>
 b7c:	b	b64 <fn_list_remove+0x64>
 b80:	ldp	x20, x19, [sp, #32]
 b84:	ldp	x22, x21, [sp, #16]
 b88:	ldp	x29, x30, [sp], #48
 b8c:	ret

0000000000000b90 <llvm_register_flush_function>:
 b90:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
 b94:	ldr	x8, [x8]
 b98:	mov	x1, x0
 b9c:	mov	x0, x8
 ba0:	b	a4c <fn_list_insert>

0000000000000ba4 <__gcov_flush>:
 ba4:	stp	x29, x30, [sp, #-32]!
 ba8:	str	x19, [sp, #16]
 bac:	mov	x29, sp
 bb0:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
 bb4:	ldr	x8, [x8]
 bb8:	ldr	x19, [x8]
 bbc:	cbz	x19, bd0 <__gcov_flush+0x2c>
 bc0:	ldr	x8, [x19, #8]
 bc4:	blr	x8
 bc8:	ldr	x19, [x19, #16]
 bcc:	cbnz	x19, bc0 <__gcov_flush+0x1c>
 bd0:	ldr	x19, [sp, #16]
 bd4:	ldp	x29, x30, [sp], #32
 bd8:	ret

0000000000000bdc <llvm_delete_flush_function_list>:
 bdc:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
 be0:	ldr	x0, [x0]
 be4:	b	b00 <fn_list_remove>

0000000000000be8 <llvm_gcov_init>:
 be8:	stp	x29, x30, [sp, #-32]!
 bec:	str	x19, [sp, #16]
 bf0:	mov	x29, sp
 bf4:	mov	x19, x1
 bf8:	cbz	x0, c0c <llvm_gcov_init+0x24>
 bfc:	mov	x1, x0
 c00:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
 c04:	ldr	x0, [x0]
 c08:	bl	a4c <fn_list_insert>
 c0c:	cbz	x19, c20 <llvm_gcov_init+0x38>
 c10:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
 c14:	ldr	x0, [x0]
 c18:	mov	x1, x19
 c1c:	bl	a4c <fn_list_insert>
 c20:	adrp	x8, 0 <llvm_gcda_start_file>
 c24:	ldrb	w9, [x8]
 c28:	tbz	w9, #0, c38 <llvm_gcov_init+0x50>
 c2c:	ldr	x19, [sp, #16]
 c30:	ldp	x29, x30, [sp], #32
 c34:	ret
 c38:	adrp	x0, bdc <llvm_delete_flush_function_list>
 c3c:	mov	w9, #0x1                   	// #1
 c40:	add	x0, x0, #0x0
 c44:	strb	w9, [x8]
 c48:	bl	0 <atexit>
 c4c:	adrp	x0, af4 <llvm_delete_writeout_function_list>
 c50:	add	x0, x0, #0x0
 c54:	bl	0 <atexit>
 c58:	ldr	x19, [sp, #16]
 c5c:	adrp	x0, aa8 <llvm_writeout_files>
 c60:	add	x0, x0, #0x0
 c64:	ldp	x29, x30, [sp], #32
 c68:	b	0 <atexit>

InstrProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_get_magic>:
   0:	mov	x0, #0x7281                	// #29313
   4:	movk	x0, #0x6f66, lsl #16
   8:	movk	x0, #0x7072, lsl #32
   c:	movk	x0, #0xff6c, lsl #48
  10:	ret

0000000000000014 <lprofProfileDumped>:
  14:	adrp	x8, 0 <__llvm_profile_get_magic>
  18:	ldrb	w0, [x8]
  1c:	ret

0000000000000020 <lprofSetProfileDumped>:
  20:	adrp	x8, 0 <__llvm_profile_get_magic>
  24:	mov	w9, #0x1                   	// #1
  28:	strb	w9, [x8]
  2c:	ret

0000000000000030 <__llvm_profile_set_dumped>:
  30:	adrp	x8, 0 <__llvm_profile_get_magic>
  34:	mov	w9, #0x1                   	// #1
  38:	strb	w9, [x8]
  3c:	ret

0000000000000040 <__llvm_profile_get_num_padding_bytes>:
  40:	neg	w8, w0
  44:	and	w0, w8, #0x7
  48:	ret

000000000000004c <__llvm_profile_get_version>:
  4c:	adrp	x8, 0 <__llvm_profile_get_magic>
  50:	ldr	x8, [x8]
  54:	ldr	x0, [x8]
  58:	ret

000000000000005c <__llvm_profile_reset_counters>:
  5c:	stp	x29, x30, [sp, #-32]!
  60:	str	x19, [sp, #16]
  64:	mov	x29, sp
  68:	bl	0 <__llvm_profile_begin_counters>
  6c:	mov	x19, x0
  70:	bl	0 <__llvm_profile_end_counters>
  74:	sub	x2, x0, x19
  78:	mov	x0, x19
  7c:	mov	w1, wzr
  80:	bl	0 <memset>
  84:	bl	0 <__llvm_profile_begin_data>
  88:	mov	x19, x0
  8c:	bl	0 <__llvm_profile_end_data>
  90:	cmp	x19, x0
  94:	b.cs	dc <__llvm_profile_reset_counters+0x80>  // b.hs, b.nlast
  98:	ldr	x8, [x19, #32]
  9c:	cbz	x8, d4 <__llvm_profile_reset_counters+0x78>
  a0:	ldrh	w9, [x19, #44]
  a4:	ldrh	w10, [x19, #46]
  a8:	adds	x9, x9, x10
  ac:	b.eq	d4 <__llvm_profile_reset_counters+0x78>  // b.none
  b0:	mov	x10, xzr
  b4:	ldr	x11, [x8, x10, lsl #3]
  b8:	cbz	x11, c8 <__llvm_profile_reset_counters+0x6c>
  bc:	str	xzr, [x11, #8]
  c0:	ldr	x11, [x11, #16]
  c4:	cbnz	x11, bc <__llvm_profile_reset_counters+0x60>
  c8:	add	w10, w10, #0x1
  cc:	cmp	x9, x10
  d0:	b.hi	b4 <__llvm_profile_reset_counters+0x58>  // b.pmore
  d4:	add	x19, x19, #0x30
  d8:	b	90 <__llvm_profile_reset_counters+0x34>
  dc:	ldr	x19, [sp, #16]
  e0:	adrp	x8, 0 <__llvm_profile_get_magic>
  e4:	strb	wzr, [x8]
  e8:	ldp	x29, x30, [sp], #32
  ec:	ret

InstrProfilingValue.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getValueProfRecordHeaderSize>:
   0:	add	w8, w0, #0xf
   4:	and	w0, w8, #0xfffffff8
   8:	ret

000000000000000c <getValueProfRecordSize>:
   c:	add	w8, w0, #0xf
  10:	and	w8, w8, #0xfffffff8
  14:	add	w0, w8, w1, lsl #4
  18:	ret

000000000000001c <getValueProfRecordValueData>:
  1c:	ldr	w8, [x0, #4]
  20:	add	w8, w8, #0xf
  24:	and	w8, w8, #0xfffffff8
  28:	add	x0, x0, x8
  2c:	ret

0000000000000030 <getValueProfRecordNumValueData>:
  30:	ldr	w9, [x0, #4]
  34:	cbz	w9, 60 <getValueProfRecordNumValueData+0x30>
  38:	mov	x8, x0
  3c:	mov	x10, xzr
  40:	mov	w0, wzr
  44:	add	x8, x8, #0x8
  48:	ldrb	w11, [x8, x10]
  4c:	add	x10, x10, #0x1
  50:	cmp	x10, x9
  54:	add	w0, w0, w11
  58:	b.cc	48 <getValueProfRecordNumValueData+0x18>  // b.lo, b.ul, b.last
  5c:	ret
  60:	mov	w0, wzr
  64:	ret

0000000000000068 <getValueProfRecordNext>:
  68:	ldr	w8, [x0, #4]
  6c:	cbz	w8, 94 <getValueProfRecordNext+0x2c>
  70:	mov	w9, wzr
  74:	add	x10, x0, #0x8
  78:	mov	x11, x8
  7c:	ldrb	w12, [x10], #1
  80:	subs	x11, x11, #0x1
  84:	add	w9, w9, w12
  88:	b.ne	7c <getValueProfRecordNext+0x14>  // b.any
  8c:	lsl	w9, w9, #4
  90:	b	98 <getValueProfRecordNext+0x30>
  94:	mov	w9, wzr
  98:	add	w8, w8, #0xf
  9c:	and	w8, w8, #0xfffffff8
  a0:	add	w8, w9, w8
  a4:	add	x0, x0, x8
  a8:	ret

00000000000000ac <getFirstValueProfRecord>:
  ac:	add	x0, x0, #0x8
  b0:	ret

00000000000000b4 <getValueProfDataSize>:
  b4:	stp	x29, x30, [sp, #-64]!
  b8:	str	x23, [sp, #16]
  bc:	stp	x22, x21, [sp, #32]
  c0:	stp	x20, x19, [sp, #48]
  c4:	mov	x29, sp
  c8:	ldr	x20, [x0]
  cc:	mov	x19, x0
  d0:	mov	w8, wzr
  d4:	mov	w21, #0x8                   	// #8
  d8:	ldr	x9, [x19, #16]
  dc:	mov	x0, x20
  e0:	mov	w1, w8
  e4:	mov	w22, w8
  e8:	blr	x9
  ec:	cbz	w0, 114 <getValueProfDataSize+0x60>
  f0:	ldr	x8, [x19, #24]
  f4:	mov	w23, w0
  f8:	mov	x0, x20
  fc:	mov	w1, w22
 100:	blr	x8
 104:	add	w8, w23, #0xf
 108:	and	w8, w8, #0xfffffff8
 10c:	add	w8, w8, w21
 110:	add	w21, w8, w0, lsl #4
 114:	mov	w8, #0x1                   	// #1
 118:	cbz	w22, d8 <getValueProfDataSize+0x24>
 11c:	mov	w0, w21
 120:	ldp	x20, x19, [sp, #48]
 124:	ldp	x22, x21, [sp, #32]
 128:	ldr	x23, [sp, #16]
 12c:	ldp	x29, x30, [sp], #64
 130:	ret

0000000000000134 <serializeValueProfRecordFrom>:
 134:	stp	x29, x30, [sp, #-80]!
 138:	stp	x26, x25, [sp, #16]
 13c:	stp	x24, x23, [sp, #32]
 140:	stp	x22, x21, [sp, #48]
 144:	stp	x20, x19, [sp, #64]
 148:	mov	x29, sp
 14c:	ldr	x21, [x1]
 150:	stp	w2, w3, [x0]
 154:	cbz	w3, 1bc <serializeValueProfRecordFrom+0x88>
 158:	add	w8, w3, #0xf
 15c:	and	w8, w8, #0xfffffff8
 160:	mov	w19, w2
 164:	mov	x20, x1
 168:	mov	x22, xzr
 16c:	mov	w25, w3
 170:	add	x23, x0, x8
 174:	add	x26, x0, #0x8
 178:	ldr	x8, [x20, #32]
 17c:	mov	x0, x21
 180:	mov	w1, w19
 184:	mov	w2, w22
 188:	blr	x8
 18c:	strb	w0, [x26, x22]
 190:	ldr	x8, [x20, #48]
 194:	mov	w24, w0
 198:	mov	x0, x21
 19c:	mov	x1, x23
 1a0:	mov	w2, w19
 1a4:	mov	w3, w22
 1a8:	blr	x8
 1ac:	add	x22, x22, #0x1
 1b0:	cmp	x25, x22
 1b4:	add	x23, x23, w24, uxtw #4
 1b8:	b.ne	178 <serializeValueProfRecordFrom+0x44>  // b.any
 1bc:	ldp	x20, x19, [sp, #64]
 1c0:	ldp	x22, x21, [sp, #48]
 1c4:	ldp	x24, x23, [sp, #32]
 1c8:	ldp	x26, x25, [sp, #16]
 1cc:	ldp	x29, x30, [sp], #80
 1d0:	ret

00000000000001d4 <serializeValueProfDataFrom>:
 1d4:	stp	x29, x30, [sp, #-48]!
 1d8:	stp	x22, x21, [sp, #16]
 1dc:	stp	x20, x19, [sp, #32]
 1e0:	mov	x29, sp
 1e4:	mov	x19, x0
 1e8:	cbz	x1, 1f8 <serializeValueProfDataFrom+0x24>
 1ec:	ldr	w21, [x1]
 1f0:	mov	x20, x1
 1f4:	b	214 <serializeValueProfDataFrom+0x40>
 1f8:	mov	x0, x19
 1fc:	bl	b4 <getValueProfDataSize>
 200:	ldr	x8, [x19, #56]
 204:	mov	w21, w0
 208:	mov	w0, w0
 20c:	blr	x8
 210:	mov	x20, x0
 214:	str	w21, [x20]
 218:	ldp	x0, x8, [x19]
 21c:	blr	x8
 220:	mov	w21, wzr
 224:	add	x22, x20, #0x8
 228:	str	w0, [x20, #4]
 22c:	ldr	x8, [x19, #16]
 230:	ldr	x0, [x19]
 234:	mov	w1, w21
 238:	blr	x8
 23c:	cbz	w0, 294 <serializeValueProfDataFrom+0xc0>
 240:	mov	w3, w0
 244:	mov	x0, x22
 248:	mov	x1, x19
 24c:	mov	w2, w21
 250:	bl	134 <serializeValueProfRecordFrom>
 254:	ldr	w8, [x22, #4]
 258:	cbz	w8, 280 <serializeValueProfDataFrom+0xac>
 25c:	mov	w9, wzr
 260:	add	x10, x22, #0x8
 264:	mov	x11, x8
 268:	ldrb	w12, [x10], #1
 26c:	subs	x11, x11, #0x1
 270:	add	w9, w9, w12
 274:	b.ne	268 <serializeValueProfDataFrom+0x94>  // b.any
 278:	lsl	w9, w9, #4
 27c:	b	284 <serializeValueProfDataFrom+0xb0>
 280:	mov	w9, wzr
 284:	add	w8, w8, #0xf
 288:	and	w8, w8, #0xfffffff8
 28c:	add	w8, w9, w8
 290:	add	x22, x22, x8
 294:	add	w21, w21, #0x1
 298:	cmp	w21, #0x2
 29c:	b.ne	22c <serializeValueProfDataFrom+0x58>  // b.any
 2a0:	mov	x0, x20
 2a4:	ldp	x20, x19, [sp, #32]
 2a8:	ldp	x22, x21, [sp, #16]
 2ac:	ldp	x29, x30, [sp], #48
 2b0:	ret

00000000000002b4 <lprofSetupValueProfiler>:
 2b4:	stp	x29, x30, [sp, #-16]!
 2b8:	mov	x29, sp
 2bc:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 2c0:	add	x0, x0, #0x0
 2c4:	bl	0 <getenv>
 2c8:	cbz	x0, 2f0 <lprofSetupValueProfiler+0x3c>
 2cc:	ldrb	w8, [x0]
 2d0:	cbz	w8, 2f0 <lprofSetupValueProfiler+0x3c>
 2d4:	bl	0 <atoi>
 2d8:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 2dc:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 2e0:	mov	w10, #0x1                   	// #1
 2e4:	str	w0, [x8]
 2e8:	strb	w10, [x9]
 2ec:	b	2f8 <lprofSetupValueProfiler+0x44>
 2f0:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 2f4:	ldr	w0, [x8]
 2f8:	cmp	w0, #0x100
 2fc:	b.cc	30c <lprofSetupValueProfiler+0x58>  // b.lo, b.ul, b.last
 300:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 304:	mov	w9, #0xff                  	// #255
 308:	str	w9, [x8]
 30c:	ldp	x29, x30, [sp], #16
 310:	ret

0000000000000314 <lprofSetMaxValsPerSite>:
 314:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 318:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 31c:	mov	w10, #0x1                   	// #1
 320:	str	w0, [x8]
 324:	strb	w10, [x9]
 328:	ret

000000000000032c <__llvm_profile_set_num_value_sites>:
 32c:	add	x8, x0, w1, uxtw #1
 330:	strh	w2, [x8, #44]
 334:	ret

0000000000000338 <__llvm_profile_iterate_data>:
 338:	add	x0, x0, #0x30
 33c:	ret

0000000000000340 <__llvm_get_function_addr>:
 340:	ldr	x0, [x0, #24]
 344:	ret

0000000000000348 <__llvm_profile_instrument_target>:
 348:	stp	x29, x30, [sp, #-48]!
 34c:	stp	x22, x21, [sp, #16]
 350:	stp	x20, x19, [sp, #32]
 354:	mov	x29, sp
 358:	cbz	x1, 57c <__llvm_profile_instrument_target+0x234>
 35c:	mov	x21, x1
 360:	ldr	x8, [x21, #32]!
 364:	mov	w20, w2
 368:	mov	x19, x0
 36c:	cbz	x8, 3bc <__llvm_profile_instrument_target+0x74>
 370:	add	x20, x8, w20, uxtw #3
 374:	ldr	x11, [x20]
 378:	cbz	x11, 410 <__llvm_profile_instrument_target+0xc8>
 37c:	mov	w9, wzr
 380:	mov	x8, xzr
 384:	mov	x10, #0xffffffffffffffff    	// #-1
 388:	mov	x22, x11
 38c:	ldr	x11, [x11]
 390:	ldr	x12, [x22, #8]
 394:	cmp	x11, x19
 398:	b.eq	4a0 <__llvm_profile_instrument_target+0x158>  // b.none
 39c:	ldr	x11, [x22, #16]
 3a0:	cmp	x12, x10
 3a4:	csel	x8, x22, x8, cc  // cc = lo, ul, last
 3a8:	csel	x10, x12, x10, cc  // cc = lo, ul, last
 3ac:	add	w9, w9, #0x1
 3b0:	cbnz	x11, 388 <__llvm_profile_instrument_target+0x40>
 3b4:	and	w9, w9, #0xff
 3b8:	b	41c <__llvm_profile_instrument_target+0xd4>
 3bc:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 3c0:	ldrb	w8, [x8]
 3c4:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 3c8:	mov	w10, #0x1                   	// #1
 3cc:	strb	w10, [x9]
 3d0:	tbnz	w8, #0, 3e0 <__llvm_profile_instrument_target+0x98>
 3d4:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 3d8:	mov	w9, #0xff                  	// #255
 3dc:	str	w9, [x8]
 3e0:	ldrh	w8, [x1, #44]
 3e4:	ldrh	w9, [x1, #46]
 3e8:	mov	w1, #0x8                   	// #8
 3ec:	add	x0, x9, x8
 3f0:	bl	0 <calloc>
 3f4:	cbz	x0, 57c <__llvm_profile_instrument_target+0x234>
 3f8:	ldaxr	x8, [x21]
 3fc:	cbnz	x8, 52c <__llvm_profile_instrument_target+0x1e4>
 400:	stlxr	w8, x0, [x21]
 404:	cbnz	w8, 3f8 <__llvm_profile_instrument_target+0xb0>
 408:	ldr	x8, [x21]
 40c:	b	370 <__llvm_profile_instrument_target+0x28>
 410:	mov	x22, xzr
 414:	mov	x8, xzr
 418:	mov	w9, wzr
 41c:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 420:	ldr	w10, [x10]
 424:	cmp	w10, w9
 428:	b.ls	484 <__llvm_profile_instrument_target+0x13c>  // b.plast
 42c:	adrp	x21, 0 <getValueProfRecordHeaderSize>
 430:	ldrb	w8, [x21]
 434:	cmp	w8, #0x1
 438:	b.ne	4cc <__llvm_profile_instrument_target+0x184>  // b.any
 43c:	mov	w0, #0x1                   	// #1
 440:	mov	w1, #0x18                  	// #24
 444:	bl	0 <calloc>
 448:	cbz	x0, 57c <__llvm_profile_instrument_target+0x234>
 44c:	ldr	x8, [x0, #8]
 450:	add	x8, x8, #0x1
 454:	stp	x19, x8, [x0]
 458:	ldr	x8, [x20]
 45c:	cbz	x8, 478 <__llvm_profile_instrument_target+0x130>
 460:	cbz	x22, 4c0 <__llvm_profile_instrument_target+0x178>
 464:	ldr	x8, [x22, #16]!
 468:	cbnz	x8, 4c0 <__llvm_profile_instrument_target+0x178>
 46c:	b	4b4 <__llvm_profile_instrument_target+0x16c>
 470:	stlxr	w8, x0, [x20]
 474:	cbz	w8, 55c <__llvm_profile_instrument_target+0x214>
 478:	ldaxr	x8, [x20]
 47c:	cbz	x8, 470 <__llvm_profile_instrument_target+0x128>
 480:	b	4bc <__llvm_profile_instrument_target+0x174>
 484:	ldr	x9, [x8, #8]
 488:	subs	x9, x9, #0x1
 48c:	b.hi	498 <__llvm_profile_instrument_target+0x150>  // b.pmore
 490:	mov	w9, #0x1                   	// #1
 494:	str	x19, [x8]
 498:	str	x9, [x8, #8]
 49c:	b	57c <__llvm_profile_instrument_target+0x234>
 4a0:	add	x8, x12, #0x1
 4a4:	str	x8, [x22, #8]
 4a8:	b	57c <__llvm_profile_instrument_target+0x234>
 4ac:	stlxr	w8, x0, [x22]
 4b0:	cbz	w8, 55c <__llvm_profile_instrument_target+0x214>
 4b4:	ldaxr	x8, [x22]
 4b8:	cbz	x8, 4ac <__llvm_profile_instrument_target+0x164>
 4bc:	clrex
 4c0:	mov	w8, wzr
 4c4:	tbz	w8, #0, 564 <__llvm_profile_instrument_target+0x21c>
 4c8:	b	57c <__llvm_profile_instrument_target+0x234>
 4cc:	adrp	x8, 0 <CurrentVNode>
 4d0:	ldr	x9, [x8]
 4d4:	adrp	x8, 0 <EndVNode>
 4d8:	ldr	x10, [x8]
 4dc:	add	x9, x9, #0x18
 4e0:	cmp	x9, x10
 4e4:	b.ls	534 <__llvm_profile_instrument_target+0x1ec>  // b.plast
 4e8:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 4ec:	ldr	w9, [x8]
 4f0:	add	w10, w9, #0x1
 4f4:	cmp	w9, #0x9
 4f8:	str	w10, [x8]
 4fc:	b.gt	57c <__llvm_profile_instrument_target+0x234>
 500:	adrp	x8, 0 <stderr>
 504:	ldr	x8, [x8]
 508:	ldp	x20, x19, [sp, #32]
 50c:	ldp	x22, x21, [sp, #16]
 510:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 514:	ldr	x0, [x8]
 518:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 51c:	add	x1, x1, #0x0
 520:	add	x2, x2, #0x0
 524:	ldp	x29, x30, [sp], #48
 528:	b	0 <fprintf>
 52c:	clrex
 530:	b	56c <__llvm_profile_instrument_target+0x224>
 534:	adrp	x9, 0 <CurrentVNode>
 538:	add	x9, x9, #0x0
 53c:	ldaxr	x0, [x9]
 540:	add	x10, x0, #0x18
 544:	stlxr	w11, x10, [x9]
 548:	cbnz	w11, 53c <__llvm_profile_instrument_target+0x1f4>
 54c:	ldr	x8, [x8]
 550:	cmp	x10, x8
 554:	b.ls	448 <__llvm_profile_instrument_target+0x100>  // b.plast
 558:	b	57c <__llvm_profile_instrument_target+0x234>
 55c:	mov	w8, #0x1                   	// #1
 560:	tbnz	w8, #0, 57c <__llvm_profile_instrument_target+0x234>
 564:	ldrb	w8, [x21]
 568:	cbz	w8, 57c <__llvm_profile_instrument_target+0x234>
 56c:	ldp	x20, x19, [sp, #32]
 570:	ldp	x22, x21, [sp, #16]
 574:	ldp	x29, x30, [sp], #48
 578:	b	0 <free>
 57c:	ldp	x20, x19, [sp, #32]
 580:	ldp	x22, x21, [sp, #16]
 584:	ldp	x29, x30, [sp], #48
 588:	ret

000000000000058c <__llvm_profile_instrument_target_value>:
 58c:	stp	x29, x30, [sp, #-64]!
 590:	str	x23, [sp, #16]
 594:	stp	x22, x21, [sp, #32]
 598:	stp	x20, x19, [sp, #48]
 59c:	mov	x29, sp
 5a0:	cbz	x1, 780 <__llvm_profile_instrument_target_value+0x1f4>
 5a4:	mov	x19, x3
 5a8:	cbz	x3, 780 <__llvm_profile_instrument_target_value+0x1f4>
 5ac:	mov	x22, x1
 5b0:	ldr	x8, [x22, #32]!
 5b4:	mov	w21, w2
 5b8:	mov	x20, x0
 5bc:	cbz	x8, 60c <__llvm_profile_instrument_target_value+0x80>
 5c0:	add	x21, x8, w21, uxtw #3
 5c4:	ldr	x11, [x21]
 5c8:	cbz	x11, 660 <__llvm_profile_instrument_target_value+0xd4>
 5cc:	mov	w9, wzr
 5d0:	mov	x8, xzr
 5d4:	mov	x10, #0xffffffffffffffff    	// #-1
 5d8:	mov	x23, x11
 5dc:	ldr	x11, [x11]
 5e0:	ldr	x12, [x23, #8]
 5e4:	cmp	x11, x20
 5e8:	b.eq	6e8 <__llvm_profile_instrument_target_value+0x15c>  // b.none
 5ec:	ldr	x11, [x23, #16]
 5f0:	cmp	x12, x10
 5f4:	csel	x8, x23, x8, cc  // cc = lo, ul, last
 5f8:	csel	x10, x12, x10, cc  // cc = lo, ul, last
 5fc:	add	w9, w9, #0x1
 600:	cbnz	x11, 5d8 <__llvm_profile_instrument_target_value+0x4c>
 604:	and	w9, w9, #0xff
 608:	b	66c <__llvm_profile_instrument_target_value+0xe0>
 60c:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 610:	ldrb	w8, [x8]
 614:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 618:	mov	w10, #0x1                   	// #1
 61c:	strb	w10, [x9]
 620:	tbnz	w8, #0, 630 <__llvm_profile_instrument_target_value+0xa4>
 624:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 628:	mov	w9, #0xff                  	// #255
 62c:	str	w9, [x8]
 630:	ldrh	w8, [x1, #44]
 634:	ldrh	w9, [x1, #46]
 638:	mov	w1, #0x8                   	// #8
 63c:	add	x0, x9, x8
 640:	bl	0 <calloc>
 644:	cbz	x0, 780 <__llvm_profile_instrument_target_value+0x1f4>
 648:	ldaxr	x8, [x22]
 64c:	cbnz	x8, 794 <__llvm_profile_instrument_target_value+0x208>
 650:	stlxr	w8, x0, [x22]
 654:	cbnz	w8, 648 <__llvm_profile_instrument_target_value+0xbc>
 658:	ldr	x8, [x22]
 65c:	b	5c0 <__llvm_profile_instrument_target_value+0x34>
 660:	mov	x23, xzr
 664:	mov	x8, xzr
 668:	mov	w9, wzr
 66c:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 670:	ldr	w10, [x10]
 674:	cmp	w10, w9
 678:	b.ls	6d4 <__llvm_profile_instrument_target_value+0x148>  // b.plast
 67c:	adrp	x22, 0 <getValueProfRecordHeaderSize>
 680:	ldrb	w8, [x22]
 684:	cmp	w8, #0x1
 688:	b.ne	714 <__llvm_profile_instrument_target_value+0x188>  // b.any
 68c:	mov	w0, #0x1                   	// #1
 690:	mov	w1, #0x18                  	// #24
 694:	bl	0 <calloc>
 698:	cbz	x0, 780 <__llvm_profile_instrument_target_value+0x1f4>
 69c:	ldr	x8, [x0, #8]
 6a0:	add	x8, x8, x19
 6a4:	stp	x20, x8, [x0]
 6a8:	ldr	x8, [x21]
 6ac:	cbz	x8, 6c8 <__llvm_profile_instrument_target_value+0x13c>
 6b0:	cbz	x23, 708 <__llvm_profile_instrument_target_value+0x17c>
 6b4:	ldr	x8, [x23, #16]!
 6b8:	cbnz	x8, 708 <__llvm_profile_instrument_target_value+0x17c>
 6bc:	b	6fc <__llvm_profile_instrument_target_value+0x170>
 6c0:	stlxr	w8, x0, [x21]
 6c4:	cbz	w8, 7c4 <__llvm_profile_instrument_target_value+0x238>
 6c8:	ldaxr	x8, [x21]
 6cc:	cbz	x8, 6c0 <__llvm_profile_instrument_target_value+0x134>
 6d0:	b	704 <__llvm_profile_instrument_target_value+0x178>
 6d4:	ldr	x9, [x8, #8]
 6d8:	subs	x9, x9, x19
 6dc:	b.ls	778 <__llvm_profile_instrument_target_value+0x1ec>  // b.plast
 6e0:	mov	x19, x9
 6e4:	b	77c <__llvm_profile_instrument_target_value+0x1f0>
 6e8:	add	x8, x12, x19
 6ec:	str	x8, [x23, #8]
 6f0:	b	780 <__llvm_profile_instrument_target_value+0x1f4>
 6f4:	stlxr	w8, x0, [x23]
 6f8:	cbz	w8, 7c4 <__llvm_profile_instrument_target_value+0x238>
 6fc:	ldaxr	x8, [x23]
 700:	cbz	x8, 6f4 <__llvm_profile_instrument_target_value+0x168>
 704:	clrex
 708:	mov	w8, wzr
 70c:	tbz	w8, #0, 7cc <__llvm_profile_instrument_target_value+0x240>
 710:	b	780 <__llvm_profile_instrument_target_value+0x1f4>
 714:	adrp	x8, 0 <CurrentVNode>
 718:	ldr	x9, [x8]
 71c:	adrp	x8, 0 <EndVNode>
 720:	ldr	x10, [x8]
 724:	add	x9, x9, #0x18
 728:	cmp	x9, x10
 72c:	b.ls	79c <__llvm_profile_instrument_target_value+0x210>  // b.plast
 730:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 734:	ldr	w9, [x8]
 738:	add	w10, w9, #0x1
 73c:	cmp	w9, #0x9
 740:	str	w10, [x8]
 744:	b.gt	780 <__llvm_profile_instrument_target_value+0x1f4>
 748:	adrp	x8, 0 <stderr>
 74c:	ldr	x8, [x8]
 750:	ldp	x20, x19, [sp, #48]
 754:	ldp	x22, x21, [sp, #32]
 758:	ldr	x23, [sp, #16]
 75c:	ldr	x0, [x8]
 760:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 764:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 768:	add	x1, x1, #0x0
 76c:	add	x2, x2, #0x0
 770:	ldp	x29, x30, [sp], #64
 774:	b	0 <fprintf>
 778:	str	x20, [x8]
 77c:	str	x19, [x8, #8]
 780:	ldp	x20, x19, [sp, #48]
 784:	ldp	x22, x21, [sp, #32]
 788:	ldr	x23, [sp, #16]
 78c:	ldp	x29, x30, [sp], #64
 790:	ret
 794:	clrex
 798:	b	7d4 <__llvm_profile_instrument_target_value+0x248>
 79c:	adrp	x9, 0 <CurrentVNode>
 7a0:	add	x9, x9, #0x0
 7a4:	ldaxr	x0, [x9]
 7a8:	add	x10, x0, #0x18
 7ac:	stlxr	w11, x10, [x9]
 7b0:	cbnz	w11, 7a4 <__llvm_profile_instrument_target_value+0x218>
 7b4:	ldr	x8, [x8]
 7b8:	cmp	x10, x8
 7bc:	b.ls	698 <__llvm_profile_instrument_target_value+0x10c>  // b.plast
 7c0:	b	780 <__llvm_profile_instrument_target_value+0x1f4>
 7c4:	mov	w8, #0x1                   	// #1
 7c8:	tbnz	w8, #0, 780 <__llvm_profile_instrument_target_value+0x1f4>
 7cc:	ldrb	w8, [x22]
 7d0:	cbz	w8, 780 <__llvm_profile_instrument_target_value+0x1f4>
 7d4:	ldp	x20, x19, [sp, #48]
 7d8:	ldp	x22, x21, [sp, #32]
 7dc:	ldr	x23, [sp, #16]
 7e0:	ldp	x29, x30, [sp], #64
 7e4:	b	0 <free>

00000000000007e8 <__llvm_profile_instrument_range>:
 7e8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
 7ec:	cmp	x5, x8
 7f0:	b.eq	7fc <__llvm_profile_instrument_range+0x14>  // b.none
 7f4:	cmp	x0, x5
 7f8:	b.ge	808 <__llvm_profile_instrument_range+0x20>  // b.tcont
 7fc:	cmp	x0, x4
 800:	ccmp	x0, x3, #0x8, le
 804:	csinc	x5, x0, x4, ge  // ge = tcont
 808:	mov	x0, x5
 80c:	b	348 <__llvm_profile_instrument_target>

0000000000000810 <lprofGetVPDataReader>:
 810:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 814:	add	x0, x0, #0x0
 818:	ret

000000000000081c <initializeValueProfRuntimeRecord>:
 81c:	mov	x8, x0
 820:	ldr	x11, [x8, #32]
 824:	adrp	x12, 0 <getValueProfRecordHeaderSize>
 828:	mov	x9, xzr
 82c:	mov	w0, wzr
 830:	mov	w10, wzr
 834:	add	x12, x12, #0x0
 838:	adrp	x13, 0 <getValueProfRecordHeaderSize>
 83c:	str	x8, [x12]
 840:	str	x1, [x12, #24]
 844:	add	x14, x8, x9, lsl #1
 848:	ldrh	w14, [x14, #44]
 84c:	cbz	w14, 8bc <initializeValueProfRuntimeRecord+0xa0>
 850:	add	x16, x11, w10, uxtw #3
 854:	cmp	x11, #0x0
 858:	csel	x17, x16, xzr, ne  // ne = any
 85c:	add	x16, x12, x9, lsl #3
 860:	mov	x15, xzr
 864:	str	x17, [x16, #8]!
 868:	cbz	x11, 898 <initializeValueProfRuntimeRecord+0x7c>
 86c:	ldr	x17, [x16]
 870:	ldr	x18, [x17, x15, lsl #3]
 874:	cbz	x18, 898 <initializeValueProfRuntimeRecord+0x7c>
 878:	mov	w17, wzr
 87c:	ldr	x18, [x18, #16]
 880:	add	w17, w17, #0x1
 884:	cbnz	x18, 87c <initializeValueProfRuntimeRecord+0x60>
 888:	cmp	w17, #0xfe
 88c:	b.ls	89c <initializeValueProfRuntimeRecord+0x80>  // b.plast
 890:	mov	w17, #0xff                  	// #255
 894:	b	89c <initializeValueProfRuntimeRecord+0x80>
 898:	mov	w17, wzr
 89c:	ldr	x18, [x13]
 8a0:	ldr	x18, [x18, x9, lsl #3]
 8a4:	strb	w17, [x18, x15]
 8a8:	add	x15, x15, #0x1
 8ac:	cmp	x15, x14
 8b0:	b.ne	868 <initializeValueProfRuntimeRecord+0x4c>  // b.any
 8b4:	add	w0, w0, #0x1
 8b8:	add	w10, w10, w14
 8bc:	add	x9, x9, #0x1
 8c0:	cmp	x9, #0x2
 8c4:	b.ne	844 <initializeValueProfRuntimeRecord+0x28>  // b.any
 8c8:	ret

00000000000008cc <getNumValueDataForSiteWrapper>:
 8cc:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 8d0:	ldr	x8, [x8]
 8d4:	ldr	x8, [x8, w0, uxtw #3]
 8d8:	ldrb	w0, [x8, w1, uxtw]
 8dc:	ret

00000000000008e0 <getValueProfDataSizeWrapper>:
 8e0:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 8e4:	add	x0, x0, #0x0
 8e8:	b	b4 <getValueProfDataSize>

00000000000008ec <getNextNValueData>:
 8ec:	cbz	x3, 8f8 <getNextNValueData+0xc>
 8f0:	cbnz	w4, 910 <getNextNValueData+0x24>
 8f4:	b	928 <getNextNValueData+0x3c>
 8f8:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 8fc:	add	x8, x8, #0x0
 900:	add	x8, x8, w0, uxtw #3
 904:	ldr	x8, [x8, #8]
 908:	ldr	x3, [x8, w1, uxtw #3]
 90c:	cbz	w4, 928 <getNextNValueData+0x3c>
 910:	mov	w8, w4
 914:	ldr	q0, [x3]
 918:	subs	x8, x8, #0x1
 91c:	str	q0, [x2], #16
 920:	ldr	x3, [x3, #16]
 924:	b.ne	914 <getNextNValueData+0x28>  // b.any
 928:	mov	x0, x3
 92c:	ret

0000000000000930 <getNumValueDataForSiteRT>:
 930:	ldr	x8, [x0, #24]
 934:	ldr	x8, [x8, w1, uxtw #3]
 938:	ldrb	w0, [x8, w2, uxtw]
 93c:	ret

0000000000000940 <getNumValueSitesRT>:
 940:	ldr	x8, [x0]
 944:	add	x8, x8, w1, uxtw #1
 948:	ldrh	w0, [x8, #44]
 94c:	ret

0000000000000950 <getNumValueDataRT>:
 950:	ldr	x8, [x0, #24]
 954:	ldr	x8, [x8, w1, uxtw #3]
 958:	cbz	x8, 990 <getNumValueDataRT+0x40>
 95c:	ldr	x9, [x0]
 960:	mov	w10, w1
 964:	add	x9, x9, x10, lsl #1
 968:	ldrh	w9, [x9, #44]
 96c:	cbz	x9, 990 <getNumValueDataRT+0x40>
 970:	mov	x10, xzr
 974:	mov	w0, wzr
 978:	ldrb	w11, [x8, x10]
 97c:	add	x10, x10, #0x1
 980:	cmp	x10, x9
 984:	add	w0, w0, w11
 988:	b.cc	978 <getNumValueDataRT+0x28>  // b.lo, b.ul, b.last
 98c:	ret
 990:	mov	w0, wzr
 994:	ret

InstrProfilingBuffer.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_is_continuous_mode_enabled>:
   0:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
   4:	ldrb	w0, [x8]
   8:	ret

000000000000000c <__llvm_profile_enable_continuous_mode>:
   c:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
  10:	mov	w9, #0x1                   	// #1
  14:	strb	w9, [x8]
  18:	ret

000000000000001c <__llvm_profile_get_size_for_buffer>:
  1c:	stp	x29, x30, [sp, #-64]!
  20:	str	x23, [sp, #16]
  24:	stp	x22, x21, [sp, #32]
  28:	stp	x20, x19, [sp, #48]
  2c:	mov	x29, sp
  30:	bl	0 <__llvm_profile_begin_data>
  34:	mov	x19, x0
  38:	bl	0 <__llvm_profile_end_data>
  3c:	mov	x20, x0
  40:	bl	0 <__llvm_profile_begin_counters>
  44:	mov	x21, x0
  48:	bl	0 <__llvm_profile_end_counters>
  4c:	mov	x22, x0
  50:	bl	0 <__llvm_profile_begin_names>
  54:	mov	x23, x0
  58:	bl	0 <__llvm_profile_end_names>
  5c:	mov	x5, x0
  60:	mov	x0, x19
  64:	mov	x1, x20
  68:	mov	x2, x21
  6c:	mov	x3, x22
  70:	mov	x4, x23
  74:	ldp	x20, x19, [sp, #48]
  78:	ldp	x22, x21, [sp, #32]
  7c:	ldr	x23, [sp, #16]
  80:	ldp	x29, x30, [sp], #64
  84:	b	88 <__llvm_profile_get_size_for_buffer_internal>

0000000000000088 <__llvm_profile_get_size_for_buffer_internal>:
  88:	sub	sp, sp, #0x40
  8c:	stp	x29, x30, [sp, #16]
  90:	str	x21, [sp, #32]
  94:	stp	x20, x19, [sp, #48]
  98:	add	x29, sp, #0x10
  9c:	sub	x8, x1, x0
  a0:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  a4:	movk	x9, #0xaaab
  a8:	add	x8, x8, #0x2f
  ac:	umulh	x8, x8, x9
  b0:	sub	x19, x5, x4
  b4:	sub	x21, x3, x2
  b8:	lsr	x20, x8, #5
  bc:	asr	x1, x21, #3
  c0:	add	x3, x29, #0x18
  c4:	add	x4, sp, #0x8
  c8:	mov	x5, sp
  cc:	mov	x0, x20
  d0:	mov	x2, x19
  d4:	bl	12c <__llvm_profile_get_padding_sizes_for_counters>
  d8:	ldr	x9, [x29, #24]
  dc:	mov	w8, #0x30                  	// #48
  e0:	ldp	x11, x10, [sp]
  e4:	madd	x8, x20, x8, x21
  e8:	add	x8, x8, x19
  ec:	add	x8, x8, x9
  f0:	ldp	x20, x19, [sp, #48]
  f4:	ldr	x21, [sp, #32]
  f8:	ldp	x29, x30, [sp, #16]
  fc:	add	x8, x8, x10
 100:	add	x8, x8, x11
 104:	add	x0, x8, #0x50
 108:	add	sp, sp, #0x40
 10c:	ret

0000000000000110 <__llvm_profile_get_data_size>:
 110:	sub	x8, x1, x0
 114:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 118:	add	x8, x8, #0x2f
 11c:	movk	x9, #0xaaab
 120:	umulh	x8, x8, x9
 124:	lsr	x0, x8, #5
 128:	ret

000000000000012c <__llvm_profile_get_padding_sizes_for_counters>:
 12c:	stp	x29, x30, [sp, #-64]!
 130:	stp	x24, x23, [sp, #16]
 134:	stp	x22, x21, [sp, #32]
 138:	stp	x20, x19, [sp, #48]
 13c:	mov	x29, sp
 140:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
 144:	ldrb	w8, [x8]
 148:	mov	x19, x5
 14c:	mov	x20, x4
 150:	mov	x21, x3
 154:	mov	x22, x2
 158:	tbz	w8, #0, 1c4 <__llvm_profile_get_padding_sizes_for_counters+0x98>
 15c:	mov	x23, x1
 160:	mov	x24, x0
 164:	bl	0 <getpagesize>
 168:	mov	w8, #0x30                  	// #48
 16c:	mul	x8, x24, x8
 170:	mov	w10, w0
 174:	add	x8, x8, #0x50
 178:	lsl	x9, x23, #3
 17c:	udiv	x12, x8, x10
 180:	udiv	x11, x9, x10
 184:	msub	x8, x12, x10, x8
 188:	msub	x9, x11, x10, x9
 18c:	udiv	x11, x22, x10
 190:	cmp	x8, #0x0
 194:	sub	x8, x10, x8
 198:	msub	x11, x11, x10, x22
 19c:	sub	x12, x10, x9
 1a0:	csel	x8, xzr, x8, eq  // eq = none
 1a4:	cmp	x9, #0x0
 1a8:	sub	x10, x10, x11
 1ac:	str	x8, [x21]
 1b0:	csel	x8, xzr, x12, eq  // eq = none
 1b4:	cmp	x11, #0x0
 1b8:	str	x8, [x20]
 1bc:	csel	x8, xzr, x10, eq  // eq = none
 1c0:	b	1d8 <__llvm_profile_get_padding_sizes_for_counters+0xac>
 1c4:	mov	x0, x22
 1c8:	str	xzr, [x21]
 1cc:	str	xzr, [x20]
 1d0:	bl	0 <__llvm_profile_get_num_padding_bytes>
 1d4:	and	x8, x0, #0xff
 1d8:	str	x8, [x19]
 1dc:	ldp	x20, x19, [sp, #48]
 1e0:	ldp	x22, x21, [sp, #32]
 1e4:	ldp	x24, x23, [sp, #16]
 1e8:	ldp	x29, x30, [sp], #64
 1ec:	ret

00000000000001f0 <initBufferWriter>:
 1f0:	adrp	x8, 0 <lprofBufferWriter>
 1f4:	ldr	x8, [x8]
 1f8:	stp	x8, x1, [x0]
 1fc:	ret

0000000000000200 <__llvm_profile_write_buffer>:
 200:	sub	sp, sp, #0x20
 204:	stp	x29, x30, [sp, #16]
 208:	add	x29, sp, #0x10
 20c:	adrp	x8, 0 <lprofBufferWriter>
 210:	ldr	x8, [x8]
 214:	mov	x1, xzr
 218:	mov	w2, wzr
 21c:	stp	x8, x0, [sp]
 220:	mov	x0, sp
 224:	bl	0 <lprofWriteData>
 228:	ldp	x29, x30, [sp, #16]
 22c:	add	sp, sp, #0x20
 230:	ret

0000000000000234 <__llvm_profile_write_buffer_internal>:
 234:	sub	sp, sp, #0x30
 238:	stp	x29, x30, [sp, #32]
 23c:	add	x29, sp, #0x20
 240:	adrp	x8, 0 <lprofBufferWriter>
 244:	ldr	x8, [x8]
 248:	mov	x7, x6
 24c:	mov	x6, x5
 250:	mov	x5, xzr
 254:	stp	x8, x0, [sp, #16]
 258:	add	x0, sp, #0x10
 25c:	str	wzr, [sp]
 260:	bl	0 <lprofWriteDataImpl>
 264:	ldp	x29, x30, [sp, #32]
 268:	add	sp, sp, #0x30
 26c:	ret

InstrProfilingFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_set_file_object>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	w20, w1
      10:	mov	x19, x0
      14:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
      18:	cbnz	w0, 38 <__llvm_profile_set_file_object+0x38>
      1c:	adrp	x8, 0 <__llvm_profile_set_file_object>
      20:	adrp	x9, 0 <__llvm_profile_set_file_object>
      24:	str	x19, [x8]
      28:	str	w20, [x9]
      2c:	ldp	x20, x19, [sp, #16]
      30:	ldp	x29, x30, [sp], #32
      34:	ret
      38:	adrp	x8, 0 <stderr>
      3c:	ldr	x8, [x8]
      40:	mov	x0, x19
      44:	ldr	x20, [x8]
      48:	bl	0 <fileno>
      4c:	mov	w2, w0
      50:	mov	x0, x20
      54:	ldp	x20, x19, [sp, #16]
      58:	adrp	x1, 0 <__llvm_profile_set_file_object>
      5c:	add	x1, x1, #0x0
      60:	ldp	x29, x30, [sp], #32
      64:	b	0 <fprintf>

0000000000000068 <lprofCreateBufferIOInternal>:
      68:	stp	x29, x30, [sp, #-48]!
      6c:	str	x21, [sp, #16]
      70:	stp	x20, x19, [sp, #32]
      74:	mov	x29, sp
      78:	adrp	x9, 0 <free>
      7c:	ldr	x9, [x9]
      80:	mov	w19, w1
      84:	mov	x20, x0
      88:	adrp	x8, 0 <FreeHook>
      8c:	mov	w0, w1
      90:	mov	w1, #0x1                   	// #1
      94:	str	x9, [x8]
      98:	mov	w21, #0x1                   	// #1
      9c:	bl	0 <calloc>
      a0:	adrp	x8, 0 <DynamicBufferIOBuffer>
      a4:	adrp	x9, 0 <VPBufferSize>
      a8:	str	x0, [x8]
      ac:	mov	w0, #0x10                  	// #16
      b0:	mov	w1, #0x1                   	// #1
      b4:	str	w19, [x9]
      b8:	bl	0 <calloc>
      bc:	adrp	x8, 0 <__llvm_profile_set_file_object>
      c0:	add	x8, x8, #0x0
      c4:	stp	x8, x20, [x0]
      c8:	bl	0 <lprofCreateBufferIO>
      cc:	str	w21, [x0, #8]
      d0:	ldp	x20, x19, [sp, #32]
      d4:	ldr	x21, [sp, #16]
      d8:	ldp	x29, x30, [sp], #48
      dc:	ret

00000000000000e0 <__llvm_profile_get_path_prefix>:
      e0:	stp	x29, x30, [sp, #-48]!
      e4:	stp	x22, x21, [sp, #16]
      e8:	stp	x20, x19, [sp, #32]
      ec:	mov	x29, sp
      f0:	adrp	x22, 0 <__llvm_profile_set_file_object>
      f4:	ldr	x19, [x22]
      f8:	cbnz	x19, 1a0 <__llvm_profile_get_path_prefix+0xc0>
      fc:	bl	f5c <getCurFilenameLength>
     100:	add	w8, w0, #0x1
     104:	sxtw	x8, w8
     108:	add	x8, x8, #0xf
     10c:	and	x8, x8, #0xfffffffffffffff0
     110:	mov	x9, sp
     114:	sub	x0, x9, x8
     118:	mov	sp, x0
     11c:	mov	w1, wzr
     120:	bl	1b8 <getCurFilename>
     124:	cbz	x0, 198 <__llvm_profile_get_path_prefix+0xb8>
     128:	mov	x20, x0
     12c:	bl	0 <lprofFindLastDirSeparator>
     130:	cbz	x0, 198 <__llvm_profile_get_path_prefix+0xb8>
     134:	sub	w21, w0, w20
     138:	mov	x8, #0x200000000           	// #8589934592
     13c:	add	x8, x8, x21, lsl #32
     140:	asr	x0, x8, #32
     144:	bl	0 <malloc>
     148:	cbz	x0, 178 <__llvm_profile_get_path_prefix+0x98>
     14c:	lsl	x8, x21, #32
     150:	mov	x9, #0x100000000           	// #4294967296
     154:	add	x8, x8, x9
     158:	asr	x21, x8, #32
     15c:	mov	x1, x20
     160:	mov	x2, x21
     164:	mov	x19, x0
     168:	bl	0 <memcpy>
     16c:	strb	wzr, [x19, x21]
     170:	str	x19, [x22]
     174:	b	1a0 <__llvm_profile_get_path_prefix+0xc0>
     178:	adrp	x8, 0 <stderr>
     17c:	ldr	x8, [x8]
     180:	adrp	x1, 0 <__llvm_profile_set_file_object>
     184:	adrp	x2, 0 <__llvm_profile_set_file_object>
     188:	add	x1, x1, #0x0
     18c:	ldr	x0, [x8]
     190:	add	x2, x2, #0x0
     194:	bl	0 <fprintf>
     198:	adrp	x19, 0 <__llvm_profile_set_file_object>
     19c:	add	x19, x19, #0x0
     1a0:	mov	x0, x19
     1a4:	mov	sp, x29
     1a8:	ldp	x20, x19, [sp, #32]
     1ac:	ldp	x22, x21, [sp, #16]
     1b0:	ldp	x29, x30, [sp], #48
     1b4:	ret

00000000000001b8 <getCurFilename>:
     1b8:	sub	sp, sp, #0x80
     1bc:	stp	x29, x30, [sp, #32]
     1c0:	stp	x28, x27, [sp, #48]
     1c4:	stp	x26, x25, [sp, #64]
     1c8:	stp	x24, x23, [sp, #80]
     1cc:	stp	x22, x21, [sp, #96]
     1d0:	stp	x20, x19, [sp, #112]
     1d4:	add	x29, sp, #0x20
     1d8:	adrp	x21, 0 <__llvm_profile_set_file_object>
     1dc:	ldr	x28, [x21]
     1e0:	cbz	x28, 35c <getCurFilename+0x1a4>
     1e4:	ldrb	w8, [x28]
     1e8:	cbz	w8, 35c <getCurFilename+0x1a4>
     1ec:	adrp	x8, 0 <__llvm_profile_set_file_object>
     1f0:	add	x8, x8, #0x0
     1f4:	ldp	w9, w10, [x8]
     1f8:	ldr	w8, [x8, #8]
     1fc:	mov	x19, x0
     200:	orr	w9, w10, w9
     204:	orr	w8, w9, w8
     208:	cbnz	w8, 218 <getCurFilename+0x60>
     20c:	mov	w20, w1
     210:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     214:	cbz	w0, 38c <getCurFilename+0x1d4>
     218:	adrp	x20, 0 <__llvm_profile_set_file_object>
     21c:	add	x20, x20, #0x0
     220:	mov	x0, x20
     224:	bl	0 <strlen>
     228:	mov	x21, x0
     22c:	add	x0, x20, #0x10
     230:	bl	0 <strlen>
     234:	mov	x22, x0
     238:	mov	w8, wzr
     23c:	mov	w26, wzr
     240:	sxtw	x23, w0
     244:	sxtw	x24, w21
     248:	ldrb	w9, [x28, w8, sxtw]
     24c:	cmp	w9, #0x25
     250:	b.eq	26c <getCurFilename+0xb4>  // b.none
     254:	cbz	w9, 364 <getCurFilename+0x1ac>
     258:	add	w10, w26, #0x1
     25c:	strb	w9, [x19, w26, sxtw]
     260:	mov	w27, w8
     264:	mov	w26, w10
     268:	b	354 <getCurFilename+0x19c>
     26c:	sxtw	x9, w8
     270:	add	x27, x9, #0x1
     274:	ldrb	w9, [x28, x27]
     278:	cmp	w9, #0x68
     27c:	b.eq	2a0 <getCurFilename+0xe8>  // b.none
     280:	cmp	w9, #0x70
     284:	b.ne	2bc <getCurFilename+0x104>  // b.any
     288:	add	x0, x19, w26, sxtw
     28c:	mov	x1, x20
     290:	mov	x2, x24
     294:	bl	0 <memcpy>
     298:	add	w26, w26, w21
     29c:	b	354 <getCurFilename+0x19c>
     2a0:	adrp	x1, 0 <__llvm_profile_set_file_object>
     2a4:	add	x0, x19, w26, sxtw
     2a8:	add	x1, x1, #0x0
     2ac:	mov	x2, x23
     2b0:	bl	0 <memcpy>
     2b4:	add	w26, w26, w22
     2b8:	b	354 <getCurFilename+0x19c>
     2bc:	ldrb	w9, [x28, w27, uxtw]
     2c0:	cmp	w9, #0x6d
     2c4:	b.ne	2d0 <getCurFilename+0x118>  // b.any
     2c8:	mov	w25, w27
     2cc:	b	2f4 <getCurFilename+0x13c>
     2d0:	add	w25, w8, #0x1
     2d4:	sub	w8, w9, #0x30
     2d8:	and	w8, w8, #0xff
     2dc:	cmp	w8, #0x9
     2e0:	b.hi	354 <getCurFilename+0x19c>  // b.pmore
     2e4:	add	w25, w25, #0x1
     2e8:	ldrb	w9, [x28, w25, uxtw]
     2ec:	cmp	w9, #0x6d
     2f0:	b.ne	2d4 <getCurFilename+0x11c>  // b.any
     2f4:	bl	0 <getpid>
     2f8:	adrp	x8, 0 <__llvm_profile_set_file_object>
     2fc:	ldr	w8, [x8]
     300:	udiv	w9, w0, w8
     304:	msub	w27, w9, w8, w0
     308:	bl	0 <lprofGetLoadModuleSignature>
     30c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     310:	mov	x3, x0
     314:	add	x0, sp, #0x4
     318:	mov	w1, #0x19                  	// #25
     31c:	add	x2, x2, #0x0
     320:	mov	w4, w27
     324:	bl	0 <snprintf>
     328:	cmp	w0, #0x18
     32c:	mov	w8, #0xffffffff            	// #-1
     330:	ccmp	w0, w8, #0x4, le
     334:	mov	w8, #0x18                  	// #24
     338:	csel	w27, w8, w0, eq  // eq = none
     33c:	add	x0, x19, w26, sxtw
     340:	sxtw	x2, w27
     344:	add	x1, sp, #0x4
     348:	bl	0 <memcpy>
     34c:	add	w26, w27, w26
     350:	mov	w27, w25
     354:	add	w8, w27, #0x1
     358:	b	248 <getCurFilename+0x90>
     35c:	mov	x19, xzr
     360:	b	368 <getCurFilename+0x1b0>
     364:	strb	wzr, [x19, w26, sxtw]
     368:	mov	x0, x19
     36c:	ldp	x20, x19, [sp, #112]
     370:	ldp	x22, x21, [sp, #96]
     374:	ldp	x24, x23, [sp, #80]
     378:	ldp	x26, x25, [sp, #64]
     37c:	ldp	x28, x27, [sp, #48]
     380:	ldp	x29, x30, [sp, #32]
     384:	add	sp, sp, #0x80
     388:	ret
     38c:	ldr	x21, [x21]
     390:	cbz	w20, 3b8 <getCurFilename+0x200>
     394:	mov	x0, x21
     398:	bl	0 <strlen>
     39c:	mov	x20, x0
     3a0:	sxtw	x2, w0
     3a4:	mov	x0, x19
     3a8:	mov	x1, x21
     3ac:	bl	0 <memcpy>
     3b0:	strb	wzr, [x19, w20, sxtw]
     3b4:	b	368 <getCurFilename+0x1b0>
     3b8:	mov	x19, x21
     3bc:	b	368 <getCurFilename+0x1b0>

00000000000003c0 <__llvm_profile_get_filename>:
     3c0:	stp	x29, x30, [sp, #-32]!
     3c4:	str	x19, [sp, #16]
     3c8:	mov	x29, sp
     3cc:	bl	f5c <getCurFilenameLength>
     3d0:	add	w8, w0, #0x1
     3d4:	sxtw	x0, w8
     3d8:	bl	0 <malloc>
     3dc:	cbz	x0, 408 <__llvm_profile_get_filename+0x48>
     3e0:	mov	w1, #0x1                   	// #1
     3e4:	mov	x19, x0
     3e8:	bl	1b8 <getCurFilename>
     3ec:	adrp	x8, 0 <__llvm_profile_set_file_object>
     3f0:	add	x8, x8, #0x0
     3f4:	cmp	x0, #0x0
     3f8:	csel	x0, x8, x19, eq  // eq = none
     3fc:	ldr	x19, [sp, #16]
     400:	ldp	x29, x30, [sp], #32
     404:	ret
     408:	adrp	x8, 0 <stderr>
     40c:	ldr	x8, [x8]
     410:	adrp	x1, 0 <__llvm_profile_set_file_object>
     414:	adrp	x2, 0 <__llvm_profile_set_file_object>
     418:	add	x1, x1, #0x0
     41c:	ldr	x0, [x8]
     420:	add	x2, x2, #0x0
     424:	bl	0 <fprintf>
     428:	adrp	x0, 0 <__llvm_profile_set_file_object>
     42c:	add	x0, x0, #0x0
     430:	b	3fc <__llvm_profile_get_filename+0x3c>

0000000000000434 <__llvm_profile_initialize_file>:
     434:	stp	x29, x30, [sp, #-32]!
     438:	stp	x20, x19, [sp, #16]
     43c:	mov	x29, sp
     440:	adrp	x19, 0 <__llvm_profile_filename>
     444:	ldr	x19, [x19]
     448:	adrp	x0, 0 <__llvm_profile_set_file_object>
     44c:	add	x0, x0, #0x0
     450:	ldrb	w20, [x19]
     454:	bl	0 <getenv>
     458:	cbz	x0, 470 <__llvm_profile_initialize_file+0x3c>
     45c:	ldrb	w8, [x0]
     460:	cbz	w8, 470 <__llvm_profile_initialize_file+0x3c>
     464:	mov	w1, #0x3                   	// #3
     468:	mov	w2, #0x1                   	// #1
     46c:	b	484 <__llvm_profile_initialize_file+0x50>
     470:	cmp	w20, #0x0
     474:	mov	w8, #0x1                   	// #1
     478:	cinc	w1, w8, ne  // ne = any
     47c:	csel	x0, xzr, x19, eq  // eq = none
     480:	mov	w2, wzr
     484:	ldp	x20, x19, [sp, #16]
     488:	ldp	x29, x30, [sp], #32
     48c:	b	490 <parseAndSetFilename>

0000000000000490 <parseAndSetFilename>:
     490:	stp	x29, x30, [sp, #-96]!
     494:	stp	x28, x27, [sp, #16]
     498:	stp	x26, x25, [sp, #32]
     49c:	stp	x24, x23, [sp, #48]
     4a0:	stp	x22, x21, [sp, #64]
     4a4:	stp	x20, x19, [sp, #80]
     4a8:	mov	x29, sp
     4ac:	adrp	x8, 0 <__llvm_profile_set_file_object>
     4b0:	add	x8, x8, #0x0
     4b4:	ldr	w27, [x8, #180]
     4b8:	cmp	w27, w1
     4bc:	b.ls	4dc <parseAndSetFilename+0x4c>  // b.plast
     4c0:	ldp	x20, x19, [sp, #80]
     4c4:	ldp	x22, x21, [sp, #64]
     4c8:	ldp	x24, x23, [sp, #48]
     4cc:	ldp	x26, x25, [sp, #32]
     4d0:	ldp	x28, x27, [sp, #16]
     4d4:	ldp	x29, x30, [sp], #96
     4d8:	ret
     4dc:	ldr	x19, [x8]
     4e0:	adrp	x8, 0 <__llvm_profile_set_file_object>
     4e4:	add	x8, x8, #0x0
     4e8:	cmp	x0, #0x0
     4ec:	mov	w23, w2
     4f0:	mov	w20, w1
     4f4:	csel	x21, x8, x0, eq  // eq = none
     4f8:	cbz	x19, 50c <parseAndSetFilename+0x7c>
     4fc:	mov	x0, x19
     500:	mov	x1, x21
     504:	bl	0 <strcmp>
     508:	cbz	w0, 6c0 <parseAndSetFilename+0x230>
     50c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     510:	ldr	x8, [x8]
     514:	mov	x0, x19
     518:	cbz	x8, 52c <parseAndSetFilename+0x9c>
     51c:	mov	x0, x8
     520:	bl	0 <free>
     524:	adrp	x8, 0 <__llvm_profile_set_file_object>
     528:	ldr	x0, [x8]
     52c:	cbz	x0, 540 <parseAndSetFilename+0xb0>
     530:	adrp	x8, 0 <__llvm_profile_set_file_object>
     534:	ldr	w8, [x8]
     538:	cbz	w8, 540 <parseAndSetFilename+0xb0>
     53c:	bl	0 <free>
     540:	adrp	x22, 0 <__llvm_profile_set_file_object>
     544:	add	x22, x22, #0x0
     548:	mov	w2, #0xb8                  	// #184
     54c:	mov	x0, x22
     550:	mov	w1, wzr
     554:	bl	0 <memset>
     558:	cbz	w23, 574 <parseAndSetFilename+0xe4>
     55c:	mov	x0, x21
     560:	bl	0 <strdup>
     564:	mov	w8, #0x1                   	// #1
     568:	str	x0, [x22]
     56c:	str	w8, [x22, #8]
     570:	b	57c <parseAndSetFilename+0xec>
     574:	adrp	x8, 0 <__llvm_profile_set_file_object>
     578:	str	x21, [x8]
     57c:	mov	w23, wzr
     580:	mov	w25, wzr
     584:	mov	w26, wzr
     588:	mov	w24, wzr
     58c:	mov	w28, #0xa                   	// #10
     590:	ldrb	w8, [x21, w23, sxtw]
     594:	cmp	w8, #0x25
     598:	b.eq	5ac <parseAndSetFilename+0x11c>  // b.none
     59c:	cbz	w8, 6b0 <parseAndSetFilename+0x220>
     5a0:	mov	w22, w23
     5a4:	add	w23, w22, #0x1
     5a8:	b	590 <parseAndSetFilename+0x100>
     5ac:	sxtw	x8, w23
     5b0:	add	x22, x8, #0x1
     5b4:	ldrb	w8, [x21, x22]
     5b8:	cmp	w8, #0x63
     5bc:	b.eq	5dc <parseAndSetFilename+0x14c>  // b.none
     5c0:	cmp	w8, #0x68
     5c4:	b.eq	5f0 <parseAndSetFilename+0x160>  // b.none
     5c8:	cmp	w8, #0x70
     5cc:	b.ne	5fc <parseAndSetFilename+0x16c>  // b.any
     5d0:	cbz	w26, 664 <parseAndSetFilename+0x1d4>
     5d4:	add	w26, w26, #0x1
     5d8:	b	5a4 <parseAndSetFilename+0x114>
     5dc:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     5e0:	cbnz	w0, 6cc <parseAndSetFilename+0x23c>
     5e4:	bl	0 <__llvm_profile_enable_continuous_mode>
     5e8:	add	w22, w23, #0x2
     5ec:	b	5a4 <parseAndSetFilename+0x114>
     5f0:	cbz	w25, 694 <parseAndSetFilename+0x204>
     5f4:	add	w25, w25, #0x1
     5f8:	b	5a4 <parseAndSetFilename+0x114>
     5fc:	ldrb	w10, [x21, w22, uxtw]
     600:	cmp	w10, #0x6d
     604:	b.ne	614 <parseAndSetFilename+0x184>  // b.any
     608:	mov	w8, w22
     60c:	mov	w9, #0x1                   	// #1
     610:	b	64c <parseAndSetFilename+0x1bc>
     614:	mov	w9, wzr
     618:	add	w8, w23, #0x1
     61c:	sub	w11, w10, #0x30
     620:	and	w11, w11, #0xff
     624:	cmp	w11, #0x9
     628:	b.hi	5a4 <parseAndSetFilename+0x114>  // b.pmore
     62c:	mul	w9, w9, w28
     630:	add	w8, w8, #0x1
     634:	add	w9, w9, w10, uxtb
     638:	ldrb	w10, [x21, w8, uxtw]
     63c:	sub	w9, w9, #0x30
     640:	cmp	w10, #0x6d
     644:	b.ne	61c <parseAndSetFilename+0x18c>  // b.any
     648:	cbz	w9, 60c <parseAndSetFilename+0x17c>
     64c:	cbnz	w24, 6d8 <parseAndSetFilename+0x248>
     650:	adrp	x10, 0 <__llvm_profile_set_file_object>
     654:	mov	w24, #0x1                   	// #1
     658:	mov	w22, w8
     65c:	str	w9, [x10]
     660:	b	5a4 <parseAndSetFilename+0x114>
     664:	bl	0 <getpid>
     668:	sxtw	x3, w0
     66c:	adrp	x0, 0 <__llvm_profile_set_file_object>
     670:	adrp	x2, 0 <__llvm_profile_set_file_object>
     674:	mov	w1, #0x10                  	// #16
     678:	add	x0, x0, #0x0
     67c:	add	x2, x2, #0x0
     680:	bl	0 <snprintf>
     684:	cmp	w0, #0x1
     688:	b.lt	6e4 <parseAndSetFilename+0x254>  // b.tstop
     68c:	mov	w26, #0x1                   	// #1
     690:	b	5a4 <parseAndSetFilename+0x114>
     694:	adrp	x0, 0 <__llvm_profile_set_file_object>
     698:	mov	w1, #0x80                  	// #128
     69c:	add	x0, x0, #0x0
     6a0:	bl	0 <lprofGetHostName>
     6a4:	cbnz	w0, 700 <parseAndSetFilename+0x270>
     6a8:	mov	w25, #0x1                   	// #1
     6ac:	b	5a4 <parseAndSetFilename+0x114>
     6b0:	adrp	x8, 0 <__llvm_profile_set_file_object>
     6b4:	add	x8, x8, #0x0
     6b8:	stp	w26, w25, [x8]
     6bc:	b	75c <parseAndSetFilename+0x2cc>
     6c0:	adrp	x8, 0 <__llvm_profile_set_file_object>
     6c4:	str	w20, [x8]
     6c8:	b	4c0 <parseAndSetFilename+0x30>
     6cc:	adrp	x1, 0 <__llvm_profile_set_file_object>
     6d0:	add	x1, x1, #0x0
     6d4:	b	708 <parseAndSetFilename+0x278>
     6d8:	adrp	x1, 0 <__llvm_profile_set_file_object>
     6dc:	add	x1, x1, #0x0
     6e0:	b	708 <parseAndSetFilename+0x278>
     6e4:	adrp	x22, 0 <__llvm_profile_set_file_object>
     6e8:	adrp	x23, 0 <__llvm_profile_set_file_object>
     6ec:	adrp	x1, 0 <__llvm_profile_set_file_object>
     6f0:	add	x22, x22, #0x0
     6f4:	add	x23, x23, #0x0
     6f8:	add	x1, x1, #0x0
     6fc:	b	718 <parseAndSetFilename+0x288>
     700:	adrp	x1, 0 <__llvm_profile_set_file_object>
     704:	add	x1, x1, #0x0
     708:	adrp	x22, 0 <__llvm_profile_set_file_object>
     70c:	adrp	x23, 0 <__llvm_profile_set_file_object>
     710:	add	x22, x22, #0x0
     714:	add	x23, x23, #0x0
     718:	adrp	x8, 0 <stderr>
     71c:	ldr	x8, [x8]
     720:	mov	x2, x21
     724:	ldr	x0, [x8]
     728:	bl	0 <fprintf>
     72c:	ldr	x0, [x23]
     730:	cbz	x0, 740 <parseAndSetFilename+0x2b0>
     734:	ldr	w8, [x23, #8]
     738:	cbz	w8, 740 <parseAndSetFilename+0x2b0>
     73c:	bl	0 <free>
     740:	add	x0, x23, #0x8
     744:	mov	w2, #0xb0                  	// #176
     748:	mov	w1, wzr
     74c:	bl	0 <memset>
     750:	mov	w8, #0x1                   	// #1
     754:	str	x22, [x23]
     758:	str	w8, [x23, #180]
     75c:	adrp	x0, 0 <__llvm_profile_set_file_object>
     760:	adrp	x8, 0 <__llvm_profile_set_file_object>
     764:	add	x0, x0, #0x0
     768:	str	w20, [x8]
     76c:	bl	0 <getenv>
     770:	cbz	x19, 7a0 <parseAndSetFilename+0x310>
     774:	cbz	x0, 7a4 <parseAndSetFilename+0x314>
     778:	adrp	x8, 0 <stderr>
     77c:	ldr	x8, [x8]
     780:	ldr	x0, [x8]
     784:	sub	w8, w27, #0x1
     788:	cmp	w8, #0x3
     78c:	b.hi	7f4 <parseAndSetFilename+0x364>  // b.pmore
     790:	adrp	x9, 0 <__llvm_profile_set_file_object>
     794:	add	x9, x9, #0x0
     798:	ldr	x3, [x9, w8, sxtw #3]
     79c:	b	7fc <parseAndSetFilename+0x36c>
     7a0:	cbnz	x0, 7c4 <parseAndSetFilename+0x334>
     7a4:	bl	ffc <truncateCurrentFile>
     7a8:	ldp	x20, x19, [sp, #80]
     7ac:	ldp	x22, x21, [sp, #64]
     7b0:	ldp	x24, x23, [sp, #48]
     7b4:	ldp	x26, x25, [sp, #32]
     7b8:	ldp	x28, x27, [sp, #16]
     7bc:	ldp	x29, x30, [sp], #96
     7c0:	b	1098 <initializeProfileForContinuousMode>
     7c4:	adrp	x8, 0 <stderr>
     7c8:	ldr	x8, [x8]
     7cc:	adrp	x9, 0 <__llvm_profile_set_file_object>
     7d0:	ldr	x2, [x9]
     7d4:	ldr	x0, [x8]
     7d8:	sub	w8, w20, #0x1
     7dc:	cmp	w8, #0x3
     7e0:	b.hi	83c <parseAndSetFilename+0x3ac>  // b.pmore
     7e4:	adrp	x9, 0 <__llvm_profile_set_file_object>
     7e8:	add	x9, x9, #0x0
     7ec:	ldr	x3, [x9, w8, sxtw #3]
     7f0:	b	844 <parseAndSetFilename+0x3b4>
     7f4:	adrp	x3, 0 <__llvm_profile_set_file_object>
     7f8:	add	x3, x3, #0x0
     7fc:	adrp	x8, 0 <__llvm_profile_set_file_object>
     800:	ldr	x4, [x8]
     804:	sub	w8, w20, #0x1
     808:	cmp	w8, #0x3
     80c:	b.hi	820 <parseAndSetFilename+0x390>  // b.pmore
     810:	adrp	x9, 0 <__llvm_profile_set_file_object>
     814:	add	x9, x9, #0x0
     818:	ldr	x5, [x9, w8, sxtw #3]
     81c:	b	828 <parseAndSetFilename+0x398>
     820:	adrp	x5, 0 <__llvm_profile_set_file_object>
     824:	add	x5, x5, #0x0
     828:	adrp	x1, 0 <__llvm_profile_set_file_object>
     82c:	add	x1, x1, #0x0
     830:	mov	x2, x19
     834:	bl	0 <fprintf>
     838:	b	7a4 <parseAndSetFilename+0x314>
     83c:	adrp	x3, 0 <__llvm_profile_set_file_object>
     840:	add	x3, x3, #0x0
     844:	adrp	x1, 0 <__llvm_profile_set_file_object>
     848:	add	x1, x1, #0x0
     84c:	bl	0 <fprintf>
     850:	b	7a4 <parseAndSetFilename+0x314>

0000000000000854 <__llvm_profile_set_filename>:
     854:	stp	x29, x30, [sp, #-32]!
     858:	str	x19, [sp, #16]
     85c:	mov	x29, sp
     860:	mov	x19, x0
     864:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     868:	cbz	w0, 878 <__llvm_profile_set_filename+0x24>
     86c:	ldr	x19, [sp, #16]
     870:	ldp	x29, x30, [sp], #32
     874:	ret
     878:	mov	x0, x19
     87c:	ldr	x19, [sp, #16]
     880:	mov	w1, #0x4                   	// #4
     884:	mov	w2, #0x1                   	// #1
     888:	ldp	x29, x30, [sp], #32
     88c:	b	490 <parseAndSetFilename>

0000000000000890 <__llvm_profile_write_file>:
     890:	stp	x29, x30, [sp, #-48]!
     894:	stp	x22, x21, [sp, #16]
     898:	stp	x20, x19, [sp, #32]
     89c:	mov	x29, sp
     8a0:	bl	0 <lprofProfileDumped>
     8a4:	cbnz	w0, 918 <__llvm_profile_write_file+0x88>
     8a8:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     8ac:	cbnz	w0, 918 <__llvm_profile_write_file+0x88>
     8b0:	bl	f5c <getCurFilenameLength>
     8b4:	add	w8, w0, #0x1
     8b8:	sxtw	x8, w8
     8bc:	add	x8, x8, #0xf
     8c0:	and	x8, x8, #0xfffffffffffffff0
     8c4:	mov	x9, sp
     8c8:	sub	x0, x9, x8
     8cc:	mov	sp, x0
     8d0:	mov	w1, wzr
     8d4:	bl	1b8 <getCurFilename>
     8d8:	cbz	x0, 940 <__llvm_profile_write_file+0xb0>
     8dc:	mov	x20, x0
     8e0:	bl	0 <__llvm_profile_get_version>
     8e4:	and	x8, x0, #0xffffffffffffff
     8e8:	cmp	x8, #0x5
     8ec:	b.ne	964 <__llvm_profile_write_file+0xd4>  // b.any
     8f0:	bl	0 <lprofSuspendSigKill>
     8f4:	mov	w21, w0
     8f8:	mov	x0, x20
     8fc:	bl	9dc <writeFile>
     900:	mov	w19, w0
     904:	cbnz	w0, 9a8 <__llvm_profile_write_file+0x118>
     908:	cmp	w21, #0x1
     90c:	b.ne	990 <__llvm_profile_write_file+0x100>  // b.any
     910:	bl	0 <lprofRestoreSigKill>
     914:	b	990 <__llvm_profile_write_file+0x100>
     918:	adrp	x8, 0 <stderr>
     91c:	ldr	x8, [x8]
     920:	adrp	x1, 0 <__llvm_profile_set_file_object>
     924:	adrp	x2, 0 <__llvm_profile_set_file_object>
     928:	add	x1, x1, #0x0
     92c:	ldr	x0, [x8]
     930:	add	x2, x2, #0x0
     934:	bl	0 <fprintf>
     938:	mov	w19, wzr
     93c:	b	990 <__llvm_profile_write_file+0x100>
     940:	adrp	x8, 0 <stderr>
     944:	ldr	x8, [x8]
     948:	adrp	x1, 0 <__llvm_profile_set_file_object>
     94c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     950:	add	x1, x1, #0x0
     954:	ldr	x0, [x8]
     958:	add	x2, x2, #0x0
     95c:	bl	0 <fprintf>
     960:	b	98c <__llvm_profile_write_file+0xfc>
     964:	adrp	x8, 0 <stderr>
     968:	ldr	x8, [x8]
     96c:	ldr	x19, [x8]
     970:	bl	0 <__llvm_profile_get_version>
     974:	adrp	x1, 0 <__llvm_profile_set_file_object>
     978:	mov	x3, x0
     97c:	add	x1, x1, #0x0
     980:	mov	w2, #0x5                   	// #5
     984:	mov	x0, x19
     988:	bl	0 <fprintf>
     98c:	mov	w19, #0xffffffff            	// #-1
     990:	mov	w0, w19
     994:	mov	sp, x29
     998:	ldp	x20, x19, [sp, #32]
     99c:	ldp	x22, x21, [sp, #16]
     9a0:	ldp	x29, x30, [sp], #48
     9a4:	ret
     9a8:	adrp	x8, 0 <stderr>
     9ac:	ldr	x8, [x8]
     9b0:	ldr	x22, [x8]
     9b4:	bl	0 <__errno_location>
     9b8:	ldr	w0, [x0]
     9bc:	bl	0 <strerror>
     9c0:	adrp	x1, 0 <__llvm_profile_set_file_object>
     9c4:	mov	x3, x0
     9c8:	add	x1, x1, #0x0
     9cc:	mov	x0, x22
     9d0:	mov	x2, x20
     9d4:	bl	0 <fprintf>
     9d8:	b	908 <__llvm_profile_write_file+0x78>

00000000000009dc <writeFile>:
     9dc:	sub	sp, sp, #0x70
     9e0:	stp	x29, x30, [sp, #32]
     9e4:	stp	x26, x25, [sp, #48]
     9e8:	stp	x24, x23, [sp, #64]
     9ec:	stp	x22, x21, [sp, #80]
     9f0:	stp	x20, x19, [sp, #96]
     9f4:	add	x29, sp, #0x20
     9f8:	adrp	x8, 0 <VPMergeHook>
     9fc:	adrp	x24, 0 <__llvm_profile_set_file_object>
     a00:	adrp	x25, 0 <__llvm_profile_set_file_object>
     a04:	ldr	x8, [x8]
     a08:	ldr	w9, [x24]
     a0c:	ldr	w10, [x25]
     a10:	adrp	x26, 0 <__llvm_profile_set_file_object>
     a14:	adrp	x11, 0 <lprofMergeValueProfData>
     a18:	ldr	x19, [x26]
     a1c:	ldr	x11, [x11]
     a20:	mov	x20, x0
     a24:	orr	w9, w10, w9
     a28:	str	x11, [x8]
     a2c:	cbz	w9, a40 <writeFile+0x64>
     a30:	cbz	x19, a64 <writeFile+0x88>
     a34:	mov	x0, x19
     a38:	bl	0 <lprofLockFileHandle>
     a3c:	b	a7c <writeFile+0xa0>
     a40:	cbnz	x19, a5c <writeFile+0x80>
     a44:	adrp	x1, 0 <__llvm_profile_set_file_object>
     a48:	add	x1, x1, #0x0
     a4c:	mov	x0, x20
     a50:	bl	0 <fopen>
     a54:	cbz	x0, bcc <writeFile+0x1f0>
     a58:	mov	x19, x0
     a5c:	mov	w21, wzr
     a60:	b	b20 <writeFile+0x144>
     a64:	mov	x0, x20
     a68:	bl	1398 <createProfileDir>
     a6c:	mov	x0, x20
     a70:	bl	0 <lprofOpenFileEx>
     a74:	mov	x19, x0
     a78:	cbz	x0, bcc <writeFile+0x1f0>
     a7c:	add	x1, sp, #0x8
     a80:	mov	x0, x19
     a84:	bl	1464 <getProfileFileSizeForMerging>
     a88:	cmn	w0, #0x1
     a8c:	b.eq	b94 <writeFile+0x1b8>  // b.none
     a90:	ldr	x21, [sp, #8]
     a94:	cbz	x21, af0 <writeFile+0x114>
     a98:	sub	x2, x29, #0x8
     a9c:	mov	x0, x19
     aa0:	mov	x1, x21
     aa4:	bl	15a4 <mmapProfileForMerging>
     aa8:	cmn	w0, #0x1
     aac:	b.eq	b94 <writeFile+0x1b8>  // b.none
     ab0:	ldur	x22, [x29, #-8]
     ab4:	mov	x1, x21
     ab8:	mov	x0, x22
     abc:	bl	0 <__llvm_profile_merge_from_buffer>
     ac0:	mov	x0, x19
     ac4:	bl	0 <fileno>
     ac8:	mov	w23, w0
     acc:	bl	0 <__llvm_profile_get_size_for_buffer>
     ad0:	mov	x1, x0
     ad4:	mov	w0, w23
     ad8:	bl	0 <ftruncate>
     adc:	mov	x0, x22
     ae0:	mov	x1, x21
     ae4:	bl	0 <munmap>
     ae8:	mov	w21, #0x1                   	// #1
     aec:	b	b08 <writeFile+0x12c>
     af0:	mov	x0, x19
     af4:	bl	0 <fileno>
     af8:	mov	x1, xzr
     afc:	bl	0 <ftruncate>
     b00:	cbnz	w0, b94 <writeFile+0x1b8>
     b04:	mov	w21, wzr
     b08:	mov	x0, x19
     b0c:	mov	x1, xzr
     b10:	mov	w2, wzr
     b14:	bl	0 <fseek>
     b18:	cmn	w0, #0x1
     b1c:	b.eq	b94 <writeFile+0x1b8>  // b.none
     b20:	adrp	x9, 0 <free>
     b24:	ldr	x9, [x9]
     b28:	adrp	x8, 0 <FreeHook>
     b2c:	str	x9, [x8]
     b30:	bl	165c <setupIOBuffer>
     b34:	adrp	x8, 0 <__llvm_profile_set_file_object>
     b38:	add	x8, x8, #0x0
     b3c:	stp	x8, x19, [sp, #8]
     b40:	bl	0 <lprofGetVPDataReader>
     b44:	mov	x1, x0
     b48:	add	x0, sp, #0x8
     b4c:	mov	w2, w21
     b50:	bl	0 <lprofWriteData>
     b54:	ldr	x8, [x26]
     b58:	mov	w20, w0
     b5c:	cmp	x19, x8
     b60:	b.eq	b70 <writeFile+0x194>  // b.none
     b64:	mov	x0, x19
     b68:	bl	0 <fclose>
     b6c:	b	bd0 <writeFile+0x1f4>
     b70:	mov	x0, x19
     b74:	bl	0 <fflush>
     b78:	ldr	w8, [x24]
     b7c:	ldr	w9, [x25]
     b80:	orr	w8, w9, w8
     b84:	cbz	w8, bd0 <writeFile+0x1f4>
     b88:	mov	x0, x19
     b8c:	bl	0 <lprofUnlockFileHandle>
     b90:	b	bd0 <writeFile+0x1f4>
     b94:	adrp	x8, 0 <stderr>
     b98:	ldr	x8, [x8]
     b9c:	ldr	x21, [x8]
     ba0:	bl	0 <__errno_location>
     ba4:	ldr	w0, [x0]
     ba8:	bl	0 <strerror>
     bac:	adrp	x1, 0 <__llvm_profile_set_file_object>
     bb0:	mov	x3, x0
     bb4:	add	x1, x1, #0x0
     bb8:	mov	x0, x21
     bbc:	mov	x2, x20
     bc0:	bl	0 <fprintf>
     bc4:	mov	x0, x19
     bc8:	bl	0 <fclose>
     bcc:	mov	w20, #0xffffffff            	// #-1
     bd0:	mov	w0, w20
     bd4:	ldp	x20, x19, [sp, #96]
     bd8:	ldp	x22, x21, [sp, #80]
     bdc:	ldp	x24, x23, [sp, #64]
     be0:	ldp	x26, x25, [sp, #48]
     be4:	ldp	x29, x30, [sp, #32]
     be8:	add	sp, sp, #0x70
     bec:	ret

0000000000000bf0 <__llvm_profile_dump>:
     bf0:	stp	x29, x30, [sp, #-32]!
     bf4:	str	x19, [sp, #16]
     bf8:	mov	x29, sp
     bfc:	adrp	x8, 0 <__llvm_profile_set_file_object>
     c00:	adrp	x9, 0 <__llvm_profile_set_file_object>
     c04:	ldr	w8, [x8]
     c08:	ldr	w9, [x9]
     c0c:	orr	w8, w9, w8
     c10:	cbz	w8, c30 <__llvm_profile_dump+0x40>
     c14:	bl	890 <__llvm_profile_write_file>
     c18:	mov	w19, w0
     c1c:	bl	0 <lprofSetProfileDumped>
     c20:	mov	w0, w19
     c24:	ldr	x19, [sp, #16]
     c28:	ldp	x29, x30, [sp], #32
     c2c:	ret
     c30:	adrp	x8, 0 <stderr>
     c34:	ldr	x8, [x8]
     c38:	adrp	x1, 0 <__llvm_profile_set_file_object>
     c3c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     c40:	add	x1, x1, #0x0
     c44:	ldr	x0, [x8]
     c48:	add	x2, x2, #0x0
     c4c:	bl	0 <fprintf>
     c50:	b	c14 <__llvm_profile_dump+0x24>

0000000000000c54 <__llvm_orderfile_write_file>:
     c54:	stp	x29, x30, [sp, #-48]!
     c58:	stp	x22, x21, [sp, #16]
     c5c:	stp	x20, x19, [sp, #32]
     c60:	mov	x29, sp
     c64:	bl	f5c <getCurFilenameLength>
     c68:	add	w8, w0, #0x7
     c6c:	sxtw	x8, w8
     c70:	add	x8, x8, #0xf
     c74:	and	x8, x8, #0xfffffffffffffff0
     c78:	mov	x9, sp
     c7c:	sub	x20, x9, x8
     c80:	mov	sp, x20
     c84:	mov	w1, #0x1                   	// #1
     c88:	mov	x0, x20
     c8c:	bl	1b8 <getCurFilename>
     c90:	cbz	x0, d44 <__llvm_orderfile_write_file+0xf0>
     c94:	mov	x19, x0
     c98:	bl	0 <strlen>
     c9c:	mov	w9, #0x6f2e                	// #28462
     ca0:	add	x8, x20, w0, sxtw
     ca4:	movk	w9, #0x6472, lsl #16
     ca8:	mov	w10, #0x7265                	// #29285
     cac:	mov	x11, #0x600000000           	// #25769803776
     cb0:	str	w9, [x8]
     cb4:	strh	w10, [x8, #4]
     cb8:	add	x8, x11, x0, lsl #32
     cbc:	asr	x8, x8, #32
     cc0:	strb	wzr, [x20, x8]
     cc4:	bl	0 <__llvm_profile_get_version>
     cc8:	and	x8, x0, #0xffffffffffffff
     ccc:	cmp	x8, #0x5
     cd0:	b.ne	d68 <__llvm_orderfile_write_file+0x114>  // b.any
     cd4:	bl	0 <lprofSuspendSigKill>
     cd8:	adrp	x1, 0 <__llvm_profile_set_file_object>
     cdc:	mov	w20, w0
     ce0:	add	x1, x1, #0x0
     ce4:	mov	x0, x19
     ce8:	bl	0 <fopen>
     cec:	cbz	x0, dac <__llvm_orderfile_write_file+0x158>
     cf0:	adrp	x9, 0 <free>
     cf4:	ldr	x9, [x9]
     cf8:	adrp	x8, 0 <FreeHook>
     cfc:	mov	x21, x0
     d00:	str	x9, [x8]
     d04:	bl	165c <setupIOBuffer>
     d08:	bl	0 <__llvm_profile_begin_orderfile>
     d0c:	mov	w1, #0x4                   	// #4
     d10:	mov	w2, #0x20000               	// #131072
     d14:	mov	x3, x21
     d18:	bl	0 <fwrite_unlocked>
     d1c:	mov	x22, x0
     d20:	mov	x0, x21
     d24:	bl	0 <fclose>
     d28:	cmp	x22, #0x20, lsl #12
     d2c:	b.ne	dd0 <__llvm_orderfile_write_file+0x17c>  // b.any
     d30:	mov	w21, wzr
     d34:	cmp	w20, #0x1
     d38:	b.ne	d94 <__llvm_orderfile_write_file+0x140>  // b.any
     d3c:	bl	0 <lprofRestoreSigKill>
     d40:	b	d94 <__llvm_orderfile_write_file+0x140>
     d44:	adrp	x8, 0 <stderr>
     d48:	ldr	x8, [x8]
     d4c:	adrp	x1, 0 <__llvm_profile_set_file_object>
     d50:	adrp	x2, 0 <__llvm_profile_set_file_object>
     d54:	add	x1, x1, #0x0
     d58:	ldr	x0, [x8]
     d5c:	add	x2, x2, #0x0
     d60:	bl	0 <fprintf>
     d64:	b	d90 <__llvm_orderfile_write_file+0x13c>
     d68:	adrp	x8, 0 <stderr>
     d6c:	ldr	x8, [x8]
     d70:	ldr	x19, [x8]
     d74:	bl	0 <__llvm_profile_get_version>
     d78:	adrp	x1, 0 <__llvm_profile_set_file_object>
     d7c:	mov	x3, x0
     d80:	add	x1, x1, #0x0
     d84:	mov	w2, #0x5                   	// #5
     d88:	mov	x0, x19
     d8c:	bl	0 <fprintf>
     d90:	mov	w21, #0xffffffff            	// #-1
     d94:	mov	w0, w21
     d98:	mov	sp, x29
     d9c:	ldp	x20, x19, [sp, #32]
     da0:	ldp	x22, x21, [sp, #16]
     da4:	ldp	x29, x30, [sp], #48
     da8:	ret
     dac:	adrp	x8, 0 <stderr>
     db0:	ldr	x8, [x8]
     db4:	adrp	x1, 0 <__llvm_profile_set_file_object>
     db8:	add	x1, x1, #0x0
     dbc:	mov	x2, x19
     dc0:	ldr	x0, [x8]
     dc4:	bl	0 <fprintf>
     dc8:	mov	w21, #0xffffffff            	// #-1
     dcc:	b	dd4 <__llvm_orderfile_write_file+0x180>
     dd0:	mov	w21, #0x1                   	// #1
     dd4:	adrp	x8, 0 <stderr>
     dd8:	ldr	x8, [x8]
     ddc:	ldr	x22, [x8]
     de0:	bl	0 <__errno_location>
     de4:	ldr	w0, [x0]
     de8:	bl	0 <strerror>
     dec:	adrp	x1, 0 <__llvm_profile_set_file_object>
     df0:	mov	x3, x0
     df4:	add	x1, x1, #0x0
     df8:	mov	x0, x22
     dfc:	mov	x2, x19
     e00:	bl	0 <fprintf>
     e04:	b	d34 <__llvm_orderfile_write_file+0xe0>

0000000000000e08 <__llvm_orderfile_dump>:
     e08:	b	c54 <__llvm_orderfile_write_file>

0000000000000e0c <__llvm_profile_register_write_file_atexit>:
     e0c:	stp	x29, x30, [sp, #-32]!
     e10:	str	x19, [sp, #16]
     e14:	mov	x29, sp
     e18:	adrp	x19, 0 <__llvm_profile_set_file_object>
     e1c:	ldrb	w8, [x19]
     e20:	tbz	w8, #0, e34 <__llvm_profile_register_write_file_atexit+0x28>
     e24:	ldr	x19, [sp, #16]
     e28:	mov	w0, wzr
     e2c:	ldp	x29, x30, [sp], #32
     e30:	ret
     e34:	bl	0 <lprofSetupValueProfiler>
     e38:	mov	w8, #0x1                   	// #1
     e3c:	strb	w8, [x19]
     e40:	ldr	x19, [sp, #16]
     e44:	adrp	x0, 0 <__llvm_profile_set_file_object>
     e48:	add	x0, x0, #0x0
     e4c:	ldp	x29, x30, [sp], #32
     e50:	b	0 <atexit>

0000000000000e54 <writeFileWithoutReturn>:
     e54:	b	890 <__llvm_profile_write_file>

0000000000000e58 <fileWriter>:
     e58:	sub	sp, sp, #0x60
     e5c:	stp	x29, x30, [sp, #16]
     e60:	stp	x26, x25, [sp, #32]
     e64:	stp	x24, x23, [sp, #48]
     e68:	stp	x22, x21, [sp, #64]
     e6c:	stp	x20, x19, [sp, #80]
     e70:	add	x29, sp, #0x10
     e74:	ldr	x20, [x0, #8]
     e78:	str	xzr, [sp, #8]
     e7c:	cbz	w2, f30 <fileWriter+0xd8>
     e80:	mov	x19, x1
     e84:	mov	x24, xzr
     e88:	mov	w25, w2
     e8c:	mov	w26, #0x8                   	// #8
     e90:	lsl	x8, x24, #5
     e94:	ldr	x0, [x19, x8]
     e98:	cbz	x0, ec8 <fileWriter+0x70>
     e9c:	add	x21, x19, x24, lsl #5
     ea0:	ldp	x1, x2, [x21, #8]
     ea4:	mov	x3, x20
     ea8:	bl	0 <fwrite>
     eac:	ldr	x8, [x21, #16]
     eb0:	cmp	x0, x8
     eb4:	b.ne	f54 <fileWriter+0xfc>  // b.any
     eb8:	add	x24, x24, #0x1
     ebc:	cmp	x24, x25
     ec0:	b.ne	e90 <fileWriter+0x38>  // b.any
     ec4:	b	f30 <fileWriter+0xd8>
     ec8:	add	x8, x19, x24, lsl #5
     ecc:	ldr	w9, [x8, #24]
     ed0:	ldp	x10, x8, [x8, #8]
     ed4:	mul	x21, x8, x10
     ed8:	cbz	w9, f10 <fileWriter+0xb8>
     edc:	cbz	x21, eb8 <fileWriter+0x60>
     ee0:	cmp	x21, #0x8
     ee4:	csel	x23, x21, x26, cc  // cc = lo, ul, last
     ee8:	add	x0, sp, #0x8
     eec:	mov	w1, #0x1                   	// #1
     ef0:	mov	x2, x23
     ef4:	mov	x3, x20
     ef8:	mov	w22, #0x1                   	// #1
     efc:	bl	0 <fwrite>
     f00:	cmp	x0, x23
     f04:	sub	x21, x21, x23
     f08:	b.eq	edc <fileWriter+0x84>  // b.none
     f0c:	b	f34 <fileWriter+0xdc>
     f10:	mov	w2, #0x1                   	// #1
     f14:	mov	x0, x20
     f18:	mov	x1, x21
     f1c:	mov	w22, #0x1                   	// #1
     f20:	bl	0 <fseek>
     f24:	cmn	w0, #0x1
     f28:	b.ne	eb8 <fileWriter+0x60>  // b.any
     f2c:	b	f34 <fileWriter+0xdc>
     f30:	mov	w22, wzr
     f34:	mov	w0, w22
     f38:	ldp	x20, x19, [sp, #80]
     f3c:	ldp	x22, x21, [sp, #64]
     f40:	ldp	x24, x23, [sp, #48]
     f44:	ldp	x26, x25, [sp, #32]
     f48:	ldp	x29, x30, [sp, #16]
     f4c:	add	sp, sp, #0x60
     f50:	ret
     f54:	mov	w22, #0x1                   	// #1
     f58:	b	f34 <fileWriter+0xdc>

0000000000000f5c <getCurFilenameLength>:
     f5c:	stp	x29, x30, [sp, #-64]!
     f60:	str	x23, [sp, #16]
     f64:	stp	x22, x21, [sp, #32]
     f68:	stp	x20, x19, [sp, #48]
     f6c:	mov	x29, sp
     f70:	adrp	x8, 0 <__llvm_profile_set_file_object>
     f74:	ldr	x0, [x8]
     f78:	cbz	x0, fe0 <getCurFilenameLength+0x84>
     f7c:	ldrb	w8, [x0]
     f80:	cbz	w8, fe0 <getCurFilenameLength+0x84>
     f84:	adrp	x8, 0 <__llvm_profile_set_file_object>
     f88:	add	x8, x8, #0x0
     f8c:	ldp	w23, w21, [x8]
     f90:	ldr	w22, [x8, #8]
     f94:	orr	w8, w21, w23
     f98:	orr	w20, w8, w22
     f9c:	bl	0 <strlen>
     fa0:	mov	x19, x0
     fa4:	cbz	w20, fe4 <getCurFilenameLength+0x88>
     fa8:	adrp	x20, 0 <__llvm_profile_set_file_object>
     fac:	add	x20, x20, #0x0
     fb0:	mov	x0, x20
     fb4:	bl	0 <strlen>
     fb8:	sub	w8, w0, #0x2
     fbc:	add	x0, x20, #0x10
     fc0:	madd	w19, w8, w23, w19
     fc4:	bl	0 <strlen>
     fc8:	sub	w8, w0, #0x2
     fcc:	madd	w8, w8, w21, w19
     fd0:	add	w9, w8, #0x18
     fd4:	cmp	w22, #0x0
     fd8:	csel	w19, w8, w9, eq  // eq = none
     fdc:	b	fe4 <getCurFilenameLength+0x88>
     fe0:	mov	w19, wzr
     fe4:	mov	w0, w19
     fe8:	ldp	x20, x19, [sp, #48]
     fec:	ldp	x22, x21, [sp, #32]
     ff0:	ldr	x23, [sp, #16]
     ff4:	ldp	x29, x30, [sp], #64
     ff8:	ret

0000000000000ffc <truncateCurrentFile>:
     ffc:	stp	x29, x30, [sp, #-32]!
    1000:	str	x19, [sp, #16]
    1004:	mov	x29, sp
    1008:	bl	f5c <getCurFilenameLength>
    100c:	add	w8, w0, #0x1
    1010:	sxtw	x8, w8
    1014:	add	x8, x8, #0xf
    1018:	and	x8, x8, #0xfffffffffffffff0
    101c:	mov	x9, sp
    1020:	sub	x0, x9, x8
    1024:	mov	sp, x0
    1028:	mov	w1, wzr
    102c:	bl	1b8 <getCurFilename>
    1030:	cbz	x0, 1088 <truncateCurrentFile+0x8c>
    1034:	mov	x19, x0
    1038:	adrp	x0, 0 <__llvm_profile_set_file_object>
    103c:	add	x0, x0, #0x0
    1040:	bl	0 <getenv>
    1044:	cbnz	x0, 1088 <truncateCurrentFile+0x8c>
    1048:	adrp	x0, 0 <__llvm_profile_set_file_object>
    104c:	add	x0, x0, #0x0
    1050:	mov	w2, #0x1                   	// #1
    1054:	mov	x1, x0
    1058:	bl	0 <setenv>
    105c:	mov	x0, x19
    1060:	bl	1398 <createProfileDir>
    1064:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1068:	ldr	w8, [x8]
    106c:	cbnz	w8, 1088 <truncateCurrentFile+0x8c>
    1070:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1074:	add	x1, x1, #0x0
    1078:	mov	x0, x19
    107c:	bl	0 <fopen>
    1080:	cbz	x0, 1088 <truncateCurrentFile+0x8c>
    1084:	bl	0 <fclose>
    1088:	mov	sp, x29
    108c:	ldr	x19, [sp, #16]
    1090:	ldp	x29, x30, [sp], #32
    1094:	ret

0000000000001098 <initializeProfileForContinuousMode>:
    1098:	stp	x29, x30, [sp, #-96]!
    109c:	str	x27, [sp, #16]
    10a0:	stp	x26, x25, [sp, #32]
    10a4:	stp	x24, x23, [sp, #48]
    10a8:	stp	x22, x21, [sp, #64]
    10ac:	stp	x20, x19, [sp, #80]
    10b0:	mov	x29, sp
    10b4:	sub	sp, sp, #0x20
    10b8:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    10bc:	cbz	w0, 12f8 <initializeProfileForContinuousMode+0x260>
    10c0:	bl	0 <__llvm_profile_begin_data>
    10c4:	mov	x21, x0
    10c8:	bl	0 <__llvm_profile_end_data>
    10cc:	mov	x20, x0
    10d0:	bl	0 <__llvm_profile_begin_counters>
    10d4:	mov	x19, x0
    10d8:	bl	0 <__llvm_profile_end_counters>
    10dc:	mov	x22, x0
    10e0:	bl	0 <__llvm_profile_begin_names>
    10e4:	mov	x23, x0
    10e8:	bl	0 <__llvm_profile_end_names>
    10ec:	mov	x24, x0
    10f0:	mov	x0, x21
    10f4:	mov	x1, x20
    10f8:	bl	0 <__llvm_profile_get_data_size>
    10fc:	mov	x20, x0
    1100:	bl	0 <getpagesize>
    1104:	mov	w25, w0
    1108:	sdiv	x8, x19, x25
    110c:	msub	x8, x8, x25, x19
    1110:	cbnz	x8, 120c <initializeProfileForContinuousMode+0x174>
    1114:	sdiv	x8, x21, x25
    1118:	msub	x8, x8, x25, x21
    111c:	cbnz	x8, 1224 <initializeProfileForContinuousMode+0x18c>
    1120:	bl	f5c <getCurFilenameLength>
    1124:	add	w8, w0, #0x1
    1128:	sxtw	x8, w8
    112c:	add	x8, x8, #0xf
    1130:	and	x8, x8, #0xfffffffffffffff0
    1134:	mov	x9, sp
    1138:	sub	x0, x9, x8
    113c:	mov	sp, x0
    1140:	mov	w1, wzr
    1144:	bl	1b8 <getCurFilename>
    1148:	cbz	x0, 12f8 <initializeProfileForContinuousMode+0x260>
    114c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1150:	adrp	x9, 0 <__llvm_profile_set_file_object>
    1154:	ldr	w8, [x8]
    1158:	ldr	w9, [x9]
    115c:	mov	x26, x0
    1160:	str	wzr, [x29, #28]
    1164:	orr	w8, w9, w8
    1168:	cbz	w8, 11cc <initializeProfileForContinuousMode+0x134>
    116c:	mov	x0, x26
    1170:	bl	0 <lprofOpenFileEx>
    1174:	cbz	x0, 12f0 <initializeProfileForContinuousMode+0x258>
    1178:	mov	w8, #0x1                   	// #1
    117c:	sub	x1, x29, #0x8
    1180:	mov	x21, x0
    1184:	str	w8, [x29, #28]
    1188:	bl	1464 <getProfileFileSizeForMerging>
    118c:	cmn	w0, #0x1
    1190:	b.eq	12e4 <initializeProfileForContinuousMode+0x24c>  // b.none
    1194:	ldur	x25, [x29, #-8]
    1198:	cbz	x25, 1260 <initializeProfileForContinuousMode+0x1c8>
    119c:	sub	x2, x29, #0x10
    11a0:	mov	x0, x21
    11a4:	mov	x1, x25
    11a8:	bl	15a4 <mmapProfileForMerging>
    11ac:	cmn	w0, #0x1
    11b0:	b.eq	12e4 <initializeProfileForContinuousMode+0x24c>  // b.none
    11b4:	ldur	x0, [x29, #-16]
    11b8:	mov	x1, x25
    11bc:	bl	0 <munmap>
    11c0:	cmn	w0, #0x1
    11c4:	b.ne	1270 <initializeProfileForContinuousMode+0x1d8>  // b.any
    11c8:	b	12e4 <initializeProfileForContinuousMode+0x24c>
    11cc:	adrp	x1, 0 <__llvm_profile_set_file_object>
    11d0:	add	x1, x1, #0x0
    11d4:	mov	x0, x26
    11d8:	bl	0 <fopen>
    11dc:	cbz	x0, 12f0 <initializeProfileForContinuousMode+0x258>
    11e0:	mov	x21, x0
    11e4:	bl	0 <ftello>
    11e8:	sdiv	x8, x0, x25
    11ec:	mov	x27, x0
    11f0:	msub	x8, x8, x25, x0
    11f4:	cbnz	x8, 1334 <initializeProfileForContinuousMode+0x29c>
    11f8:	mov	x0, x26
    11fc:	mov	x1, x21
    1200:	bl	13f0 <writeProfileWithFileObject>
    1204:	cbnz	w0, 12f0 <initializeProfileForContinuousMode+0x258>
    1208:	b	1274 <initializeProfileForContinuousMode+0x1dc>
    120c:	adrp	x8, 0 <stderr>
    1210:	ldr	x8, [x8]
    1214:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1218:	add	x1, x1, #0x0
    121c:	mov	x2, x19
    1220:	b	1238 <initializeProfileForContinuousMode+0x1a0>
    1224:	adrp	x8, 0 <stderr>
    1228:	ldr	x8, [x8]
    122c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1230:	add	x1, x1, #0x0
    1234:	mov	x2, x21
    1238:	ldr	x0, [x8]
    123c:	mov	w3, w25
    1240:	mov	sp, x29
    1244:	ldp	x20, x19, [sp, #80]
    1248:	ldp	x22, x21, [sp, #64]
    124c:	ldp	x24, x23, [sp, #48]
    1250:	ldp	x26, x25, [sp, #32]
    1254:	ldr	x27, [sp, #16]
    1258:	ldp	x29, x30, [sp], #96
    125c:	b	0 <fprintf>
    1260:	mov	x0, x26
    1264:	mov	x1, x21
    1268:	bl	13f0 <writeProfileWithFileObject>
    126c:	cbnz	w0, 12e4 <initializeProfileForContinuousMode+0x24c>
    1270:	mov	x27, xzr
    1274:	sub	x25, x22, x19
    1278:	mov	x0, x21
    127c:	sub	x23, x24, x23
    1280:	asr	x24, x25, #3
    1284:	bl	0 <fileno>
    1288:	mov	w22, w0
    128c:	sub	x3, x29, #0x8
    1290:	sub	x4, x29, #0x10
    1294:	sub	x5, x29, #0x18
    1298:	mov	x0, x20
    129c:	mov	x1, x24
    12a0:	mov	x2, x23
    12a4:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
    12a8:	ldp	x8, x9, [x29, #-16]
    12ac:	mov	w10, #0x30                  	// #48
    12b0:	madd	x10, x20, x10, x27
    12b4:	mov	w2, #0x3                   	// #3
    12b8:	add	x23, x8, x25
    12bc:	add	x8, x10, x9
    12c0:	add	x20, x8, #0x50
    12c4:	mov	w3, #0x11                  	// #17
    12c8:	mov	x0, x19
    12cc:	mov	x1, x23
    12d0:	mov	w4, w22
    12d4:	mov	x5, x20
    12d8:	bl	0 <mmap>
    12dc:	cmp	x19, x0
    12e0:	b.ne	1358 <initializeProfileForContinuousMode+0x2c0>  // b.any
    12e4:	add	x0, x29, #0x1c
    12e8:	mov	x1, x21
    12ec:	bl	154c <unlockProfile>
    12f0:	ldr	w2, [x29, #28]
    12f4:	cbnz	w2, 1318 <initializeProfileForContinuousMode+0x280>
    12f8:	mov	sp, x29
    12fc:	ldp	x20, x19, [sp, #80]
    1300:	ldp	x22, x21, [sp, #64]
    1304:	ldp	x24, x23, [sp, #48]
    1308:	ldp	x26, x25, [sp, #32]
    130c:	ldr	x27, [sp, #16]
    1310:	ldp	x29, x30, [sp], #96
    1314:	ret
    1318:	adrp	x8, 0 <stderr>
    131c:	ldr	x8, [x8]
    1320:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1324:	add	x1, x1, #0x0
    1328:	ldr	x0, [x8]
    132c:	bl	0 <fprintf>
    1330:	b	12f8 <initializeProfileForContinuousMode+0x260>
    1334:	adrp	x8, 0 <stderr>
    1338:	ldr	x8, [x8]
    133c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1340:	add	x1, x1, #0x0
    1344:	mov	x2, x27
    1348:	ldr	x0, [x8]
    134c:	mov	w3, w25
    1350:	bl	0 <fprintf>
    1354:	b	12f0 <initializeProfileForContinuousMode+0x258>
    1358:	adrp	x8, 0 <stderr>
    135c:	ldr	x8, [x8]
    1360:	ldr	x24, [x8]
    1364:	bl	0 <__errno_location>
    1368:	ldr	w0, [x0]
    136c:	bl	0 <strerror>
    1370:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1374:	mov	x2, x0
    1378:	add	x1, x1, #0x0
    137c:	mov	x0, x24
    1380:	mov	x3, x19
    1384:	mov	x4, x23
    1388:	mov	w5, w22
    138c:	mov	x6, x20
    1390:	bl	0 <fprintf>
    1394:	b	12e4 <initializeProfileForContinuousMode+0x24c>

0000000000001398 <createProfileDir>:
    1398:	stp	x29, x30, [sp, #-32]!
    139c:	stp	x20, x19, [sp, #16]
    13a0:	mov	x29, sp
    13a4:	mov	x19, x0
    13a8:	bl	0 <strlen>
    13ac:	mov	x20, x0
    13b0:	mov	x0, x19
    13b4:	bl	0 <lprofFindFirstDirSeparator>
    13b8:	cbz	x0, 13e0 <createProfileDir+0x48>
    13bc:	add	x9, x20, #0x10
    13c0:	mov	x8, sp
    13c4:	and	x9, x9, #0xfffffffffffffff0
    13c8:	sub	x0, x8, x9
    13cc:	add	x2, x20, #0x1
    13d0:	mov	sp, x0
    13d4:	mov	x1, x19
    13d8:	bl	0 <strncpy>
    13dc:	bl	0 <__llvm_profile_recursive_mkdir>
    13e0:	mov	sp, x29
    13e4:	ldp	x20, x19, [sp, #16]
    13e8:	ldp	x29, x30, [sp], #32
    13ec:	ret

00000000000013f0 <writeProfileWithFileObject>:
    13f0:	stp	x29, x30, [sp, #-48]!
    13f4:	stp	x22, x21, [sp, #16]
    13f8:	stp	x20, x19, [sp, #32]
    13fc:	mov	x29, sp
    1400:	adrp	x22, 0 <__llvm_profile_set_file_object>
    1404:	mov	x20, x0
    1408:	str	x1, [x22]
    140c:	bl	9dc <writeFile>
    1410:	mov	w19, w0
    1414:	cbnz	w0, 1430 <writeProfileWithFileObject+0x40>
    1418:	str	xzr, [x22]
    141c:	mov	w0, w19
    1420:	ldp	x20, x19, [sp, #32]
    1424:	ldp	x22, x21, [sp, #16]
    1428:	ldp	x29, x30, [sp], #48
    142c:	ret
    1430:	adrp	x8, 0 <stderr>
    1434:	ldr	x8, [x8]
    1438:	ldr	x21, [x8]
    143c:	bl	0 <__errno_location>
    1440:	ldr	w0, [x0]
    1444:	bl	0 <strerror>
    1448:	adrp	x1, 0 <__llvm_profile_set_file_object>
    144c:	mov	x3, x0
    1450:	add	x1, x1, #0x0
    1454:	mov	x0, x21
    1458:	mov	x2, x20
    145c:	bl	0 <fprintf>
    1460:	b	1418 <writeProfileWithFileObject+0x28>

0000000000001464 <getProfileFileSizeForMerging>:
    1464:	stp	x29, x30, [sp, #-32]!
    1468:	stp	x20, x19, [sp, #16]
    146c:	mov	x29, sp
    1470:	mov	x19, x1
    1474:	mov	w2, #0x2                   	// #2
    1478:	mov	x1, xzr
    147c:	mov	x20, x0
    1480:	bl	0 <fseek>
    1484:	cmn	w0, #0x1
    1488:	b.eq	14d0 <getProfileFileSizeForMerging+0x6c>  // b.none
    148c:	mov	x0, x20
    1490:	bl	0 <ftell>
    1494:	str	x0, [x19]
    1498:	mov	x0, x20
    149c:	mov	x1, xzr
    14a0:	mov	w2, wzr
    14a4:	bl	0 <fseek>
    14a8:	cmn	w0, #0x1
    14ac:	b.eq	14f8 <getProfileFileSizeForMerging+0x94>  // b.none
    14b0:	ldr	x8, [x19]
    14b4:	sub	x8, x8, #0x1
    14b8:	cmp	x8, #0x4e
    14bc:	b.ls	1524 <getProfileFileSizeForMerging+0xc0>  // b.plast
    14c0:	mov	w0, wzr
    14c4:	ldp	x20, x19, [sp, #16]
    14c8:	ldp	x29, x30, [sp], #32
    14cc:	ret
    14d0:	adrp	x8, 0 <stderr>
    14d4:	ldr	x8, [x8]
    14d8:	ldr	x19, [x8]
    14dc:	bl	0 <__errno_location>
    14e0:	ldr	w0, [x0]
    14e4:	bl	0 <strerror>
    14e8:	adrp	x1, 0 <__llvm_profile_set_file_object>
    14ec:	mov	x2, x0
    14f0:	add	x1, x1, #0x0
    14f4:	b	151c <getProfileFileSizeForMerging+0xb8>
    14f8:	adrp	x8, 0 <stderr>
    14fc:	ldr	x8, [x8]
    1500:	ldr	x19, [x8]
    1504:	bl	0 <__errno_location>
    1508:	ldr	w0, [x0]
    150c:	bl	0 <strerror>
    1510:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1514:	mov	x2, x0
    1518:	add	x1, x1, #0x0
    151c:	mov	x0, x19
    1520:	b	1540 <getProfileFileSizeForMerging+0xdc>
    1524:	adrp	x8, 0 <stderr>
    1528:	ldr	x8, [x8]
    152c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1530:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1534:	add	x1, x1, #0x0
    1538:	ldr	x0, [x8]
    153c:	add	x2, x2, #0x0
    1540:	bl	0 <fprintf>
    1544:	mov	w0, #0xffffffff            	// #-1
    1548:	b	14c4 <getProfileFileSizeForMerging+0x60>

000000000000154c <unlockProfile>:
    154c:	stp	x29, x30, [sp, #-32]!
    1550:	stp	x20, x19, [sp, #16]
    1554:	mov	x29, sp
    1558:	ldr	w8, [x0]
    155c:	mov	x19, x0
    1560:	mov	x20, x1
    1564:	cbz	w8, 1580 <unlockProfile+0x34>
    1568:	mov	x0, x20
    156c:	bl	0 <lprofUnlockFileHandle>
    1570:	str	wzr, [x19]
    1574:	ldp	x20, x19, [sp, #16]
    1578:	ldp	x29, x30, [sp], #32
    157c:	ret
    1580:	adrp	x8, 0 <stderr>
    1584:	ldr	x8, [x8]
    1588:	adrp	x1, 0 <__llvm_profile_set_file_object>
    158c:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1590:	add	x1, x1, #0x0
    1594:	ldr	x0, [x8]
    1598:	add	x2, x2, #0x0
    159c:	bl	0 <fprintf>
    15a0:	b	1568 <unlockProfile+0x1c>

00000000000015a4 <mmapProfileForMerging>:
    15a4:	stp	x29, x30, [sp, #-32]!
    15a8:	stp	x20, x19, [sp, #16]
    15ac:	mov	x29, sp
    15b0:	mov	x20, x2
    15b4:	mov	x19, x1
    15b8:	bl	0 <fileno>
    15bc:	mov	w4, w0
    15c0:	mov	w2, #0x1                   	// #1
    15c4:	mov	w3, #0x1                   	// #1
    15c8:	mov	x0, xzr
    15cc:	mov	x1, x19
    15d0:	mov	x5, xzr
    15d4:	bl	0 <mmap>
    15d8:	cmn	x0, #0x1
    15dc:	str	x0, [x20]
    15e0:	b.eq	15fc <mmapProfileForMerging+0x58>  // b.none
    15e4:	mov	x1, x19
    15e8:	bl	0 <__llvm_profile_check_compatibility>
    15ec:	cbnz	w0, 1628 <mmapProfileForMerging+0x84>
    15f0:	ldp	x20, x19, [sp, #16]
    15f4:	ldp	x29, x30, [sp], #32
    15f8:	ret
    15fc:	adrp	x8, 0 <stderr>
    1600:	ldr	x8, [x8]
    1604:	ldr	x19, [x8]
    1608:	bl	0 <__errno_location>
    160c:	ldr	w0, [x0]
    1610:	bl	0 <strerror>
    1614:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1618:	mov	x2, x0
    161c:	add	x1, x1, #0x0
    1620:	mov	x0, x19
    1624:	b	1650 <mmapProfileForMerging+0xac>
    1628:	ldr	x0, [x20]
    162c:	mov	x1, x19
    1630:	bl	0 <munmap>
    1634:	adrp	x8, 0 <stderr>
    1638:	ldr	x8, [x8]
    163c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1640:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1644:	add	x1, x1, #0x0
    1648:	ldr	x0, [x8]
    164c:	add	x2, x2, #0x0
    1650:	bl	0 <fprintf>
    1654:	mov	w0, #0xffffffff            	// #-1
    1658:	b	15f0 <mmapProfileForMerging+0x4c>

000000000000165c <setupIOBuffer>:
    165c:	stp	x29, x30, [sp, #-16]!
    1660:	mov	x29, sp
    1664:	adrp	x0, 0 <__llvm_profile_set_file_object>
    1668:	add	x0, x0, #0x0
    166c:	bl	0 <getenv>
    1670:	cbz	x0, 169c <setupIOBuffer+0x40>
    1674:	ldrb	w8, [x0]
    1678:	cbz	w8, 169c <setupIOBuffer+0x40>
    167c:	bl	0 <atoi>
    1680:	adrp	x8, 0 <VPBufferSize>
    1684:	str	w0, [x8]
    1688:	mov	w0, w0
    168c:	mov	w1, #0x1                   	// #1
    1690:	bl	0 <calloc>
    1694:	adrp	x8, 0 <DynamicBufferIOBuffer>
    1698:	str	x0, [x8]
    169c:	ldp	x29, x30, [sp], #16
    16a0:	ret

InstrProfilingMerge.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofGetLoadModuleSignature>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	bl	0 <__llvm_profile_end_counters>
  14:	mov	x19, x0
  18:	bl	0 <__llvm_profile_begin_counters>
  1c:	sub	x21, x19, x0
  20:	bl	0 <__llvm_profile_begin_data>
  24:	mov	x19, x0
  28:	bl	0 <__llvm_profile_end_data>
  2c:	mov	x1, x0
  30:	mov	x0, x19
  34:	bl	0 <__llvm_profile_get_data_size>
  38:	mov	x19, x0
  3c:	bl	0 <__llvm_profile_end_names>
  40:	mov	x20, x0
  44:	bl	0 <__llvm_profile_begin_names>
  48:	sub	w22, w20, w0
  4c:	bl	0 <__llvm_profile_end_vnodes>
  50:	mov	x20, x0
  54:	bl	0 <__llvm_profile_begin_vnodes>
  58:	sub	x8, x20, x0
  5c:	lsr	x20, x8, #3
  60:	bl	0 <__llvm_profile_begin_data>
  64:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  68:	movk	x11, #0xac00
  6c:	lsl	x8, x22, #40
  70:	lsl	x9, x21, #27
  74:	lsl	x10, x19, #20
  78:	mul	x11, x20, x11
  7c:	cbz	x19, 88 <lprofGetLoadModuleSignature+0x88>
  80:	ldr	x12, [x0]
  84:	b	8c <lprofGetLoadModuleSignature+0x8c>
  88:	mov	x12, xzr
  8c:	add	x9, x10, x9
  90:	ldp	x20, x19, [sp, #32]
  94:	ldp	x22, x21, [sp, #16]
  98:	add	x8, x9, x8
  9c:	add	x8, x8, x11
  a0:	add	x0, x8, x12
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret

00000000000000ac <__llvm_profile_check_compatibility>:
  ac:	stp	x29, x30, [sp, #-64]!
  b0:	str	x23, [sp, #16]
  b4:	stp	x22, x21, [sp, #32]
  b8:	stp	x20, x19, [sp, #48]
  bc:	mov	x29, sp
  c0:	cmp	x1, #0x50
  c4:	b.cc	180 <__llvm_profile_check_compatibility+0xd4>  // b.lo, b.ul, b.last
  c8:	ldr	x22, [x0, #16]
  cc:	ldr	x21, [x0]
  d0:	mov	x20, x1
  d4:	mov	x19, x0
  d8:	bl	0 <__llvm_profile_get_magic>
  dc:	cmp	x21, x0
  e0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
  e4:	ldr	x21, [x19, #8]
  e8:	bl	0 <__llvm_profile_get_version>
  ec:	cmp	x21, x0
  f0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
  f4:	ldr	x23, [x19, #16]
  f8:	bl	0 <__llvm_profile_begin_data>
  fc:	mov	x21, x0
 100:	bl	0 <__llvm_profile_end_data>
 104:	mov	x1, x0
 108:	mov	x0, x21
 10c:	bl	0 <__llvm_profile_get_data_size>
 110:	cmp	x23, x0
 114:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 118:	ldr	x23, [x19, #32]
 11c:	bl	0 <__llvm_profile_end_counters>
 120:	mov	x21, x0
 124:	bl	0 <__llvm_profile_begin_counters>
 128:	sub	x8, x21, x0
 12c:	cmp	x23, x8, asr #3
 130:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 134:	ldr	x23, [x19, #48]
 138:	bl	0 <__llvm_profile_end_names>
 13c:	mov	x21, x0
 140:	bl	0 <__llvm_profile_begin_names>
 144:	sub	x8, x21, x0
 148:	cmp	x23, x8
 14c:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 150:	ldr	x8, [x19, #72]
 154:	cmp	x8, #0x1
 158:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 15c:	ldr	x8, [x19, #16]
 160:	ldr	x9, [x19, #48]
 164:	ldr	x10, [x19, #32]
 168:	mov	w11, #0x30                  	// #48
 16c:	madd	x8, x8, x11, x9
 170:	add	x8, x8, x10
 174:	add	x8, x8, #0x50
 178:	cmp	x8, x20
 17c:	b.ls	198 <__llvm_profile_check_compatibility+0xec>  // b.plast
 180:	mov	w0, #0x1                   	// #1
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldr	x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	add	x19, x19, #0x50
 19c:	mov	w8, #0x30                  	// #48
 1a0:	madd	x20, x22, x8, x19
 1a4:	bl	0 <__llvm_profile_begin_data>
 1a8:	cmp	x20, x19
 1ac:	b.ls	1fc <__llvm_profile_check_compatibility+0x150>  // b.plast
 1b0:	mov	x8, x0
 1b4:	ldr	x9, [x19]
 1b8:	ldr	x10, [x8]
 1bc:	cmp	x9, x10
 1c0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1c4:	ldr	x9, [x19, #8]
 1c8:	ldr	x10, [x8, #8]
 1cc:	cmp	x9, x10
 1d0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1d4:	ldr	w9, [x19, #40]
 1d8:	ldr	w10, [x8, #40]
 1dc:	cmp	w9, w10
 1e0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1e4:	add	x19, x19, #0x30
 1e8:	mov	w0, wzr
 1ec:	cmp	x19, x20
 1f0:	add	x8, x8, #0x30
 1f4:	b.cc	1b4 <__llvm_profile_check_compatibility+0x108>  // b.lo, b.ul, b.last
 1f8:	b	184 <__llvm_profile_check_compatibility+0xd8>
 1fc:	mov	w0, wzr
 200:	b	184 <__llvm_profile_check_compatibility+0xd8>

0000000000000204 <__llvm_profile_merge_from_buffer>:
 204:	stp	x29, x30, [sp, #-80]!
 208:	stp	x26, x25, [sp, #16]
 20c:	stp	x24, x23, [sp, #32]
 210:	stp	x22, x21, [sp, #48]
 214:	stp	x20, x19, [sp, #64]
 218:	mov	x29, sp
 21c:	ldr	x21, [x0, #48]
 220:	ldr	x25, [x0, #16]
 224:	ldr	x26, [x0, #32]
 228:	mov	x19, x0
 22c:	add	x23, x0, #0x50
 230:	mov	w8, #0x30                  	// #48
 234:	mov	x0, x21
 238:	madd	x24, x25, x8, x23
 23c:	bl	0 <__llvm_profile_get_num_padding_bytes>
 240:	mov	w22, w0
 244:	bl	0 <__llvm_profile_begin_data>
 248:	cmp	x24, x23
 24c:	b.ls	2fc <__llvm_profile_merge_from_buffer+0xf8>  // b.plast
 250:	add	x8, x24, x26, lsl #3
 254:	mov	w9, #0x30                  	// #48
 258:	add	x8, x8, x21
 25c:	madd	x9, x25, x9, x19
 260:	mov	x20, x0
 264:	add	x21, x8, w22, uxtb
 268:	add	x22, x9, #0x50
 26c:	adrp	x25, 8 <lprofGetLoadModuleSignature+0x8>
 270:	ldr	w8, [x23, #40]
 274:	cbz	w8, 2a8 <__llvm_profile_merge_from_buffer+0xa4>
 278:	ldr	x10, [x23, #16]
 27c:	ldr	x11, [x19, #56]
 280:	ldr	x9, [x20, #16]
 284:	sub	x10, x10, x11
 288:	lsr	x10, x10, #3
 28c:	add	x10, x22, x10, lsl #3
 290:	ldr	x11, [x10], #8
 294:	ldr	x12, [x9]
 298:	subs	x8, x8, #0x1
 29c:	add	x11, x12, x11
 2a0:	str	x11, [x9], #8
 2a4:	b.ne	290 <__llvm_profile_merge_from_buffer+0x8c>  // b.any
 2a8:	ldr	x8, [x25]
 2ac:	cbz	x8, 2ec <__llvm_profile_merge_from_buffer+0xe8>
 2b0:	mov	x10, xzr
 2b4:	mov	w9, wzr
 2b8:	mov	x11, x10
 2bc:	add	x10, x23, x10, lsl #1
 2c0:	ldrh	w10, [x10, #44]
 2c4:	cmp	w10, #0x0
 2c8:	cinc	w9, w9, ne  // ne = any
 2cc:	mov	w10, #0x1                   	// #1
 2d0:	cbz	x11, 2b8 <__llvm_profile_merge_from_buffer+0xb4>
 2d4:	cbz	w9, 2ec <__llvm_profile_merge_from_buffer+0xe8>
 2d8:	mov	x0, x21
 2dc:	mov	x1, x20
 2e0:	blr	x8
 2e4:	ldr	w8, [x21]
 2e8:	add	x21, x21, x8
 2ec:	add	x23, x23, #0x30
 2f0:	cmp	x23, x24
 2f4:	add	x20, x20, #0x30
 2f8:	b.cc	270 <__llvm_profile_merge_from_buffer+0x6c>  // b.lo, b.ul, b.last
 2fc:	ldp	x20, x19, [sp, #64]
 300:	ldp	x22, x21, [sp, #48]
 304:	ldp	x24, x23, [sp, #32]
 308:	ldp	x26, x25, [sp, #16]
 30c:	ldp	x29, x30, [sp], #80
 310:	ret

InstrProfilingMergeFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofMergeValueProfData>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x19, x1
  20:	mov	x20, x0
  24:	bl	0 <getFirstValueProfRecord>
  28:	ldr	w8, [x20, #4]
  2c:	cbz	w8, bc <lprofMergeValueProfData+0xbc>
  30:	mov	x21, x0
  34:	mov	w24, wzr
  38:	mov	w22, wzr
  3c:	mov	x0, x21
  40:	bl	0 <getValueProfRecordValueData>
  44:	ldr	w8, [x21, #4]
  48:	cbz	w8, a0 <lprofMergeValueProfData+0xa0>
  4c:	mov	x23, x0
  50:	mov	x25, xzr
  54:	mov	w26, wzr
  58:	add	x9, x21, x25
  5c:	ldrb	w27, [x9, #8]
  60:	cbz	w27, 90 <lprofMergeValueProfData+0x90>
  64:	add	w28, w26, w27
  68:	add	x8, x23, w26, uxtw #4
  6c:	ldp	x0, x3, [x8]
  70:	mov	x1, x19
  74:	mov	w2, w22
  78:	bl	0 <__llvm_profile_instrument_target_value>
  7c:	subs	w27, w27, #0x1
  80:	add	w26, w26, #0x1
  84:	b.ne	68 <lprofMergeValueProfData+0x68>  // b.any
  88:	ldr	w8, [x21, #4]
  8c:	mov	w26, w28
  90:	add	x25, x25, #0x1
  94:	cmp	x25, w8, uxtw
  98:	add	w22, w22, #0x1
  9c:	b.cc	58 <lprofMergeValueProfData+0x58>  // b.lo, b.ul, b.last
  a0:	mov	x0, x21
  a4:	bl	0 <getValueProfRecordNext>
  a8:	ldr	w8, [x20, #4]
  ac:	add	w24, w24, #0x1
  b0:	mov	x21, x0
  b4:	cmp	w24, w8
  b8:	b.cc	3c <lprofMergeValueProfData+0x3c>  // b.lo, b.ul, b.last
  bc:	ldp	x20, x19, [sp, #80]
  c0:	ldp	x22, x21, [sp, #64]
  c4:	ldp	x24, x23, [sp, #48]
  c8:	ldp	x26, x25, [sp, #32]
  cc:	ldp	x28, x27, [sp, #16]
  d0:	ldp	x29, x30, [sp], #96
  d4:	ret

InstrProfilingNameVar.c.o:     file format elf64-littleaarch64


InstrProfilingWriter.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofBufferWriter>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	w2, 54 <lprofBufferWriter+0x54>
  14:	mov	x19, x0
  18:	mov	w21, w2
  1c:	add	x22, x1, #0x8
  20:	ldp	x8, x9, [x22]
  24:	ldur	x1, [x22, #-8]
  28:	mul	x20, x9, x8
  2c:	cbz	x1, 3c <lprofBufferWriter+0x3c>
  30:	ldr	x0, [x19, #8]
  34:	mov	x2, x20
  38:	bl	0 <memcpy>
  3c:	ldr	x8, [x19, #8]
  40:	subs	x21, x21, #0x1
  44:	add	x22, x22, #0x20
  48:	add	x8, x8, x20
  4c:	str	x8, [x19, #8]
  50:	b.ne	20 <lprofBufferWriter+0x20>  // b.any
  54:	ldp	x20, x19, [sp, #32]
  58:	ldp	x22, x21, [sp, #16]
  5c:	mov	w0, wzr
  60:	ldp	x29, x30, [sp], #48
  64:	ret

0000000000000068 <lprofCreateBufferIO>:
  68:	adrp	x9, 8 <lprofBufferWriter+0x8>
  6c:	ldr	x9, [x9]
  70:	adrp	x10, 10 <lprofBufferWriter+0x10>
  74:	ldr	w10, [x10]
  78:	adrp	x11, 0 <lprofBufferWriter>
  7c:	adrp	x8, 0 <lprofBufferWriter>
  80:	add	x11, x11, #0x0
  84:	cmp	x9, #0x0
  88:	add	x8, x8, #0x0
  8c:	csel	x9, x11, x9, eq  // eq = none
  90:	mov	w11, #0x2000                	// #8192
  94:	str	x0, [x8]
  98:	csel	w10, w11, w10, eq  // eq = none
  9c:	mov	x0, x8
  a0:	str	wzr, [x8, #8]
  a4:	str	x9, [x8, #16]
  a8:	stp	w10, wzr, [x8, #24]
  ac:	ret

00000000000000b0 <lprofDeleteBufferIO>:
  b0:	stp	x29, x30, [sp, #-32]!
  b4:	stp	x20, x19, [sp, #16]
  b8:	mov	x29, sp
  bc:	ldr	w8, [x0, #8]
  c0:	adrp	x19, 0 <lprofBufferWriter>
  c4:	cbz	w8, d4 <lprofDeleteBufferIO+0x24>
  c8:	ldr	x8, [x19]
  cc:	ldr	x0, [x0]
  d0:	blr	x8
  d4:	adrp	x20, 8 <lprofBufferWriter+0x8>
  d8:	ldr	x0, [x20]
  dc:	cbz	x0, f4 <lprofDeleteBufferIO+0x44>
  e0:	ldr	x8, [x19]
  e4:	blr	x8
  e8:	adrp	x8, 10 <lprofBufferWriter+0x10>
  ec:	str	xzr, [x20]
  f0:	str	wzr, [x8]
  f4:	ldp	x20, x19, [sp, #16]
  f8:	ldp	x29, x30, [sp], #32
  fc:	ret

0000000000000100 <lprofBufferIOWrite>:
 100:	sub	sp, sp, #0x60
 104:	stp	x29, x30, [sp, #48]
 108:	str	x21, [sp, #64]
 10c:	stp	x20, x19, [sp, #80]
 110:	add	x29, sp, #0x30
 114:	ldp	w8, w9, [x0, #24]
 118:	mov	x19, x0
 11c:	mov	w20, w2
 120:	mov	x21, x1
 124:	add	w9, w9, w2
 128:	cmp	w9, w8
 12c:	b.ls	140 <lprofBufferIOWrite+0x40>  // b.plast
 130:	mov	x0, x19
 134:	bl	1d8 <lprofBufferIOFlush>
 138:	cbnz	w0, 174 <lprofBufferIOWrite+0x74>
 13c:	ldr	w8, [x19, #24]
 140:	mov	w9, #0x1                   	// #1
 144:	mov	w10, w20
 148:	cmp	w8, w20
 14c:	stp	x21, x9, [sp, #16]
 150:	str	x10, [sp, #32]
 154:	str	wzr, [sp, #40]
 158:	b.cs	17c <lprofBufferIOWrite+0x7c>  // b.hs, b.nlast
 15c:	ldr	x0, [x19]
 160:	add	x1, sp, #0x10
 164:	mov	w2, #0x1                   	// #1
 168:	ldr	x8, [x0]
 16c:	blr	x8
 170:	cbz	w0, 1c0 <lprofBufferIOWrite+0xc0>
 174:	mov	w0, #0xffffffff            	// #-1
 178:	b	1c4 <lprofBufferIOWrite+0xc4>
 17c:	ldr	x8, [x19, #16]
 180:	ldr	w9, [x19, #28]
 184:	mov	x0, sp
 188:	add	x1, x8, x9
 18c:	bl	0 <initBufferWriter>
 190:	ldp	x9, x8, [sp, #24]
 194:	ldr	x1, [sp, #16]
 198:	mul	x20, x8, x9
 19c:	cbz	x1, 1ac <lprofBufferIOWrite+0xac>
 1a0:	ldr	x0, [sp, #8]
 1a4:	mov	x2, x20
 1a8:	bl	0 <memcpy>
 1ac:	ldr	w8, [sp, #8]
 1b0:	ldr	w9, [x19, #16]
 1b4:	add	w8, w8, w20
 1b8:	sub	w8, w8, w9
 1bc:	str	w8, [x19, #28]
 1c0:	mov	w0, wzr
 1c4:	ldp	x20, x19, [sp, #80]
 1c8:	ldr	x21, [sp, #64]
 1cc:	ldp	x29, x30, [sp, #48]
 1d0:	add	sp, sp, #0x60
 1d4:	ret

00000000000001d8 <lprofBufferIOFlush>:
 1d8:	sub	sp, sp, #0x40
 1dc:	stp	x29, x30, [sp, #32]
 1e0:	str	x19, [sp, #48]
 1e4:	add	x29, sp, #0x20
 1e8:	ldr	w8, [x0, #28]
 1ec:	cbz	w8, 228 <lprofBufferIOFlush+0x50>
 1f0:	ldr	x9, [x0, #16]
 1f4:	mov	w10, #0x1                   	// #1
 1f8:	stp	x10, x8, [sp, #8]
 1fc:	str	wzr, [sp, #24]
 200:	str	x9, [sp]
 204:	mov	x19, x0
 208:	ldr	x0, [x0]
 20c:	mov	x1, sp
 210:	mov	w2, #0x1                   	// #1
 214:	ldr	x8, [x0]
 218:	blr	x8
 21c:	cbz	w0, 230 <lprofBufferIOFlush+0x58>
 220:	mov	w0, #0xffffffff            	// #-1
 224:	b	234 <lprofBufferIOFlush+0x5c>
 228:	mov	w0, wzr
 22c:	b	234 <lprofBufferIOFlush+0x5c>
 230:	str	wzr, [x19, #28]
 234:	ldr	x19, [sp, #48]
 238:	ldp	x29, x30, [sp, #32]
 23c:	add	sp, sp, #0x40
 240:	ret

0000000000000244 <lprofWriteData>:
 244:	sub	sp, sp, #0x60
 248:	stp	x29, x30, [sp, #16]
 24c:	stp	x26, x25, [sp, #32]
 250:	stp	x24, x23, [sp, #48]
 254:	stp	x22, x21, [sp, #64]
 258:	stp	x20, x19, [sp, #80]
 25c:	add	x29, sp, #0x10
 260:	mov	w19, w2
 264:	mov	x20, x1
 268:	mov	x21, x0
 26c:	bl	0 <__llvm_profile_begin_data>
 270:	mov	x22, x0
 274:	bl	0 <__llvm_profile_end_data>
 278:	mov	x23, x0
 27c:	bl	0 <__llvm_profile_begin_counters>
 280:	mov	x24, x0
 284:	bl	0 <__llvm_profile_end_counters>
 288:	mov	x25, x0
 28c:	bl	0 <__llvm_profile_begin_names>
 290:	mov	x26, x0
 294:	bl	0 <__llvm_profile_end_names>
 298:	mov	x7, x0
 29c:	mov	x0, x21
 2a0:	mov	x1, x22
 2a4:	mov	x2, x23
 2a8:	mov	x3, x24
 2ac:	mov	x4, x25
 2b0:	mov	x5, x20
 2b4:	mov	x6, x26
 2b8:	str	w19, [sp]
 2bc:	bl	2dc <lprofWriteDataImpl>
 2c0:	ldp	x20, x19, [sp, #80]
 2c4:	ldp	x22, x21, [sp, #64]
 2c8:	ldp	x24, x23, [sp, #48]
 2cc:	ldp	x26, x25, [sp, #32]
 2d0:	ldp	x29, x30, [sp, #16]
 2d4:	add	sp, sp, #0x60
 2d8:	ret

00000000000002dc <lprofWriteDataImpl>:
 2dc:	sub	sp, sp, #0x1b0
 2e0:	stp	x29, x30, [sp, #336]
 2e4:	stp	x28, x27, [sp, #352]
 2e8:	stp	x26, x25, [sp, #368]
 2ec:	stp	x24, x23, [sp, #384]
 2f0:	stp	x22, x21, [sp, #400]
 2f4:	stp	x20, x19, [sp, #416]
 2f8:	add	x29, sp, #0x150
 2fc:	mov	x21, x1
 300:	mov	x22, x0
 304:	mov	x0, x1
 308:	mov	x1, x2
 30c:	mov	x26, x7
 310:	mov	x23, x6
 314:	mov	x19, x5
 318:	mov	x25, x4
 31c:	mov	x24, x3
 320:	mov	x20, x2
 324:	bl	0 <__llvm_profile_get_data_size>
 328:	cbz	x0, 410 <lprofWriteDataImpl+0x134>
 32c:	ldr	w28, [x29, #96]
 330:	sub	x8, x25, x24
 334:	asr	x25, x8, #3
 338:	sub	x26, x26, x23
 33c:	sub	x3, x29, #0x60
 340:	sub	x4, x29, #0x68
 344:	sub	x5, x29, #0x70
 348:	mov	x1, x25
 34c:	mov	x2, x26
 350:	mov	x27, x0
 354:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
 358:	bl	0 <__llvm_profile_get_magic>
 35c:	stur	x0, [x29, #-88]
 360:	bl	0 <__llvm_profile_get_version>
 364:	adrp	x12, 0 <lprofBufferWriter>
 368:	ldp	x9, x8, [x29, #-104]
 36c:	ldr	q0, [x12]
 370:	ldur	x12, [x29, #-112]
 374:	sub	x11, x29, #0x58
 378:	cmp	w28, #0x0
 37c:	str	x11, [sp]
 380:	mov	w11, #0x8                   	// #8
 384:	mov	w10, #0x1                   	// #1
 388:	mov	w13, #0x30                  	// #48
 38c:	stp	x11, x25, [sp, #104]
 390:	csel	x11, x23, xzr, eq  // eq = none
 394:	stp	x0, x27, [x29, #-80]
 398:	stp	x24, x23, [x29, #-32]
 39c:	str	wzr, [sp, #24]
 3a0:	str	wzr, [sp, #56]
 3a4:	str	wzr, [sp, #120]
 3a8:	stp	x10, x26, [sp, #168]
 3ac:	str	wzr, [sp, #184]
 3b0:	stur	x10, [x29, #-16]
 3b4:	str	x21, [sp, #32]
 3b8:	stp	x13, x27, [sp, #40]
 3bc:	stp	xzr, x10, [sp, #64]
 3c0:	str	w10, [sp, #88]
 3c4:	str	x24, [sp, #96]
 3c8:	stp	xzr, x10, [sp, #128]
 3cc:	str	w10, [sp, #152]
 3d0:	stp	xzr, x10, [sp, #192]
 3d4:	str	x11, [sp, #160]
 3d8:	stp	x8, x25, [x29, #-64]
 3dc:	stp	x9, x26, [x29, #-48]
 3e0:	str	x8, [sp, #80]
 3e4:	str	x9, [sp, #144]
 3e8:	str	x12, [sp, #208]
 3ec:	stur	q0, [sp, #8]
 3f0:	str	w10, [sp, #216]
 3f4:	ldr	x8, [x22]
 3f8:	mov	x1, sp
 3fc:	mov	w2, #0x7                   	// #7
 400:	mov	x0, x22
 404:	blr	x8
 408:	cbz	w0, 430 <lprofWriteDataImpl+0x154>
 40c:	mov	w0, #0xffffffff            	// #-1
 410:	ldp	x20, x19, [sp, #416]
 414:	ldp	x22, x21, [sp, #400]
 418:	ldp	x24, x23, [sp, #384]
 41c:	ldp	x26, x25, [sp, #368]
 420:	ldp	x28, x27, [sp, #352]
 424:	ldp	x29, x30, [sp, #336]
 428:	add	sp, sp, #0x1b0
 42c:	ret
 430:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 434:	mov	w8, w0
 438:	mov	w0, wzr
 43c:	cbz	x19, 410 <lprofWriteDataImpl+0x134>
 440:	cbnz	w8, 410 <lprofWriteDataImpl+0x134>
 444:	adrp	x23, 8 <lprofBufferWriter+0x8>
 448:	ldr	x9, [x23]
 44c:	adrp	x24, 10 <lprofBufferWriter+0x10>
 450:	ldr	w11, [x24]
 454:	adrp	x8, 0 <lprofBufferWriter>
 458:	add	x8, x8, #0x0
 45c:	cmp	x9, #0x0
 460:	adrp	x10, 0 <lprofBufferWriter>
 464:	csel	x8, x8, x9, eq  // eq = none
 468:	mov	w9, #0x2000                	// #8192
 46c:	add	x10, x10, #0x0
 470:	csel	w9, w9, w11, eq  // eq = none
 474:	cmp	x21, x20
 478:	str	x22, [x10]
 47c:	str	wzr, [x10, #8]
 480:	str	x8, [x10, #16]
 484:	stp	w9, wzr, [x10, #24]
 488:	b.cs	4a8 <lprofWriteDataImpl+0x1cc>  // b.hs, b.nlast
 48c:	mov	x0, x19
 490:	mov	x1, x21
 494:	bl	4f8 <writeOneValueProfData>
 498:	cbnz	w0, 40c <lprofWriteDataImpl+0x130>
 49c:	add	x21, x21, #0x30
 4a0:	cmp	x21, x20
 4a4:	b.cc	48c <lprofWriteDataImpl+0x1b0>  // b.lo, b.ul, b.last
 4a8:	adrp	x0, 0 <lprofBufferWriter>
 4ac:	add	x0, x0, #0x0
 4b0:	bl	1d8 <lprofBufferIOFlush>
 4b4:	cbnz	w0, 40c <lprofWriteDataImpl+0x130>
 4b8:	adrp	x8, 0 <lprofBufferWriter>
 4bc:	ldr	w8, [x8]
 4c0:	adrp	x19, 0 <lprofBufferWriter>
 4c4:	cbz	w8, 4d8 <lprofWriteDataImpl+0x1fc>
 4c8:	adrp	x9, 0 <lprofBufferWriter>
 4cc:	ldr	x8, [x19]
 4d0:	ldr	x0, [x9]
 4d4:	blr	x8
 4d8:	ldr	x0, [x23]
 4dc:	cbz	x0, 410 <lprofWriteDataImpl+0x134>
 4e0:	ldr	x8, [x19]
 4e4:	blr	x8
 4e8:	mov	w0, wzr
 4ec:	str	xzr, [x23]
 4f0:	str	wzr, [x24]
 4f4:	b	410 <lprofWriteDataImpl+0x134>

00000000000004f8 <writeOneValueProfData>:
 4f8:	stp	x29, x30, [sp, #-96]!
 4fc:	stp	x28, x27, [sp, #16]
 500:	stp	x26, x25, [sp, #32]
 504:	stp	x24, x23, [sp, #48]
 508:	stp	x22, x21, [sp, #64]
 50c:	stp	x20, x19, [sp, #80]
 510:	mov	x29, sp
 514:	sub	sp, sp, #0x30
 518:	mov	x19, x1
 51c:	mov	x20, x0
 520:	mov	x8, xzr
 524:	sub	x22, x29, #0x18
 528:	mov	x23, x8
 52c:	add	x8, x19, x8, lsl #1
 530:	ldrh	w0, [x8, #44]
 534:	cbz	w0, 568 <writeOneValueProfData+0x70>
 538:	ldr	x8, [x20, #8]
 53c:	blr	x8
 540:	sub	w2, w0, #0x8
 544:	add	x8, x2, #0xf
 548:	and	x8, x8, #0x1fffffff0
 54c:	mov	x9, sp
 550:	sub	x21, x9, x8
 554:	mov	sp, x21
 558:	mov	x0, x21
 55c:	mov	w1, wzr
 560:	bl	0 <memset>
 564:	b	56c <writeOneValueProfData+0x74>
 568:	mov	x21, xzr
 56c:	mov	w8, #0x1                   	// #1
 570:	str	x21, [x22, x23, lsl #3]
 574:	cbz	x23, 528 <writeOneValueProfData+0x30>
 578:	ldr	x8, [x20]
 57c:	sub	x1, x29, #0x18
 580:	mov	x0, x19
 584:	blr	x8
 588:	cbz	w0, 5d4 <writeOneValueProfData+0xdc>
 58c:	ldr	x8, [x20, #32]
 590:	mov	w21, w0
 594:	blr	x8
 598:	stp	w0, w21, [x29, #-8]
 59c:	adrp	x0, 0 <lprofBufferWriter>
 5a0:	add	x0, x0, #0x0
 5a4:	sub	x1, x29, #0x8
 5a8:	mov	w2, #0x8                   	// #8
 5ac:	sub	x21, x29, #0x8
 5b0:	bl	100 <lprofBufferIOWrite>
 5b4:	cbnz	w0, 5d0 <writeOneValueProfData+0xd8>
 5b8:	ldr	x8, [x20, #16]
 5bc:	sub	x0, x29, #0x8
 5c0:	blr	x8
 5c4:	add	x8, x21, #0x8
 5c8:	cmp	x0, x8
 5cc:	b.eq	5f4 <writeOneValueProfData+0xfc>  // b.none
 5d0:	mov	w0, #0xffffffff            	// #-1
 5d4:	mov	sp, x29
 5d8:	ldp	x20, x19, [sp, #80]
 5dc:	ldp	x22, x21, [sp, #64]
 5e0:	ldp	x24, x23, [sp, #48]
 5e4:	ldp	x26, x25, [sp, #32]
 5e8:	ldp	x28, x27, [sp, #16]
 5ec:	ldp	x29, x30, [sp], #96
 5f0:	ret
 5f4:	adrp	x22, 0 <lprofBufferWriter>
 5f8:	adrp	x23, 0 <lprofBufferWriter>
 5fc:	mov	x21, xzr
 600:	add	x22, x22, #0x0
 604:	mov	w28, #0x10                  	// #16
 608:	add	x23, x23, #0x0
 60c:	add	x9, x19, x21, lsl #1
 610:	ldrh	w8, [x9, #44]!
 614:	stur	x9, [x29, #-48]
 618:	cbz	w8, 6e0 <writeOneValueProfData+0x1e8>
 61c:	sub	x1, x29, #0x28
 620:	mov	w2, #0x8                   	// #8
 624:	mov	x0, x22
 628:	stp	w21, w8, [x29, #-40]
 62c:	bl	100 <lprofBufferIOWrite>
 630:	cbnz	w0, 5d0 <writeOneValueProfData+0xd8>
 634:	ldur	x9, [x29, #-48]
 638:	ldr	x8, [x20, #8]
 63c:	ldrh	w0, [x9]
 640:	blr	x8
 644:	sub	x8, x29, #0x18
 648:	ldr	x1, [x8, x21, lsl #3]
 64c:	sub	w2, w0, #0x8
 650:	mov	x0, x22
 654:	bl	100 <lprofBufferIOWrite>
 658:	cbnz	w0, 5d0 <writeOneValueProfData+0xd8>
 65c:	ldur	x8, [x29, #-48]
 660:	ldrh	w8, [x8]
 664:	cbz	w8, 6e0 <writeOneValueProfData+0x1e8>
 668:	mov	w24, wzr
 66c:	ldr	x8, [x20, #24]
 670:	mov	w0, w21
 674:	mov	w1, w24
 678:	blr	x8
 67c:	cbz	w0, 6cc <writeOneValueProfData+0x1d4>
 680:	mov	w25, w0
 684:	mov	x26, xzr
 688:	ldr	x8, [x20, #40]
 68c:	cmp	w25, #0x10
 690:	csel	w27, w25, w28, cc  // cc = lo, ul, last
 694:	mov	w0, w21
 698:	mov	w1, w24
 69c:	mov	x2, x23
 6a0:	mov	x3, x26
 6a4:	mov	w4, w27
 6a8:	blr	x8
 6ac:	mov	x26, x0
 6b0:	lsl	w2, w27, #4
 6b4:	mov	x0, x22
 6b8:	mov	x1, x23
 6bc:	bl	100 <lprofBufferIOWrite>
 6c0:	cbnz	w0, 5d0 <writeOneValueProfData+0xd8>
 6c4:	subs	w25, w25, w27
 6c8:	b.ne	688 <writeOneValueProfData+0x190>  // b.any
 6cc:	ldur	x8, [x29, #-48]
 6d0:	add	w24, w24, #0x1
 6d4:	ldrh	w8, [x8]
 6d8:	cmp	w24, w8
 6dc:	b.cc	66c <writeOneValueProfData+0x174>  // b.lo, b.ul, b.last
 6e0:	add	x21, x21, #0x1
 6e4:	cmp	x21, #0x2
 6e8:	mov	w0, wzr
 6ec:	b.ne	60c <writeOneValueProfData+0x114>  // b.any
 6f0:	b	5d4 <writeOneValueProfData+0xdc>

InstrProfilingPlatformDarwin.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformFuchsia.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformLinux.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_begin_data>:
   0:	adrp	x0, 0 <__start___llvm_prf_data>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <__llvm_profile_end_data>:
   c:	adrp	x0, 0 <__stop___llvm_prf_data>
  10:	add	x0, x0, #0x0
  14:	ret

0000000000000018 <__llvm_profile_begin_names>:
  18:	adrp	x0, 0 <__start___llvm_prf_names>
  1c:	add	x0, x0, #0x0
  20:	ret

0000000000000024 <__llvm_profile_end_names>:
  24:	adrp	x0, 0 <__stop___llvm_prf_names>
  28:	add	x0, x0, #0x0
  2c:	ret

0000000000000030 <__llvm_profile_begin_counters>:
  30:	adrp	x0, 0 <__start___llvm_prf_cnts>
  34:	add	x0, x0, #0x0
  38:	ret

000000000000003c <__llvm_profile_end_counters>:
  3c:	adrp	x0, 0 <__stop___llvm_prf_cnts>
  40:	add	x0, x0, #0x0
  44:	ret

0000000000000048 <__llvm_profile_begin_orderfile>:
  48:	adrp	x0, 0 <__start___llvm_orderfile>
  4c:	add	x0, x0, #0x0
  50:	ret

0000000000000054 <__llvm_profile_begin_vnodes>:
  54:	adrp	x0, 0 <__start___llvm_prf_vnds>
  58:	add	x0, x0, #0x0
  5c:	ret

0000000000000060 <__llvm_profile_end_vnodes>:
  60:	adrp	x0, 0 <__stop___llvm_prf_vnds>
  64:	add	x0, x0, #0x0
  68:	ret

InstrProfilingPlatformOther.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformWindows.c.o:     file format elf64-littleaarch64


InstrProfilingRuntime.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_InstrProfilingRuntime.cpp>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__llvm_profile_initialize_file>
   c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
  10:	cbz	w0, 1c <_GLOBAL__sub_I_InstrProfilingRuntime.cpp+0x1c>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	ldp	x29, x30, [sp], #16
  20:	b	0 <__llvm_profile_register_write_file_atexit>

InstrProfilingUtil.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_recursive_mkdir>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x21, 0 <__llvm_profile_recursive_mkdir>
  14:	ldr	x21, [x21]
  18:	mov	x19, x0
  1c:	mov	w20, #0x1                   	// #1
  20:	mov	w22, #0x2f                  	// #47
  24:	ldrb	w8, [x19, x20]
  28:	cmp	w8, #0x2f
  2c:	b.eq	38 <__llvm_profile_recursive_mkdir+0x38>  // b.none
  30:	cbnz	w8, 4c <__llvm_profile_recursive_mkdir+0x4c>
  34:	b	54 <__llvm_profile_recursive_mkdir+0x54>
  38:	strb	wzr, [x19, x20]
  3c:	ldr	w1, [x21]
  40:	mov	x0, x19
  44:	bl	0 <mkdir>
  48:	strb	w22, [x19, x20]
  4c:	add	x20, x20, #0x1
  50:	b	24 <__llvm_profile_recursive_mkdir+0x24>
  54:	ldp	x20, x19, [sp, #32]
  58:	ldp	x22, x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

0000000000000064 <__llvm_profile_get_dir_mode>:
  64:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  68:	ldr	x8, [x8]
  6c:	ldr	w0, [x8]
  70:	ret

0000000000000074 <__llvm_profile_set_dir_mode>:
  74:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  78:	ldr	x8, [x8]
  7c:	str	w0, [x8]
  80:	ret

0000000000000084 <lprofGetHostName>:
  84:	sub	sp, sp, #0x1c0
  88:	stp	x29, x30, [sp, #400]
  8c:	stp	x28, x21, [sp, #416]
  90:	stp	x20, x19, [sp, #432]
  94:	add	x29, sp, #0x190
  98:	mov	x19, x0
  9c:	add	x0, sp, #0x8
  a0:	mov	w20, w1
  a4:	add	x21, sp, #0x8
  a8:	bl	0 <uname>
  ac:	tbnz	w0, #31, c4 <lprofGetHostName+0x40>
  b0:	add	x1, x21, #0x41
  b4:	sxtw	x2, w20
  b8:	mov	x0, x19
  bc:	bl	0 <strncpy>
  c0:	mov	w0, wzr
  c4:	ldp	x20, x19, [sp, #432]
  c8:	ldp	x28, x21, [sp, #416]
  cc:	ldp	x29, x30, [sp, #400]
  d0:	add	sp, sp, #0x1c0
  d4:	ret

00000000000000d8 <lprofLockFd>:
  d8:	sub	sp, sp, #0x40
  dc:	stp	x29, x30, [sp, #32]
  e0:	str	x19, [sp, #48]
  e4:	add	x29, sp, #0x20
  e8:	mov	w19, w0
  ec:	strh	wzr, [sp, #2]
  f0:	stp	xzr, xzr, [sp, #8]
  f4:	bl	0 <getpid>
  f8:	mov	w8, #0x1                   	// #1
  fc:	str	w0, [sp, #24]
 100:	strh	w8, [sp]
 104:	mov	x2, sp
 108:	mov	w1, #0x7                   	// #7
 10c:	mov	w0, w19
 110:	bl	0 <fcntl>
 114:	cmn	w0, #0x1
 118:	b.ne	13c <lprofLockFd+0x64>  // b.any
 11c:	bl	0 <__errno_location>
 120:	ldr	w8, [x0]
 124:	cmp	w8, #0x4
 128:	b.eq	104 <lprofLockFd+0x2c>  // b.none
 12c:	cmp	w8, #0x25
 130:	b.ne	13c <lprofLockFd+0x64>  // b.any
 134:	mov	w0, #0xffffffff            	// #-1
 138:	b	140 <lprofLockFd+0x68>
 13c:	mov	w0, wzr
 140:	ldr	x19, [sp, #48]
 144:	ldp	x29, x30, [sp, #32]
 148:	add	sp, sp, #0x40
 14c:	ret

0000000000000150 <lprofUnlockFd>:
 150:	sub	sp, sp, #0x40
 154:	stp	x29, x30, [sp, #32]
 158:	str	x19, [sp, #48]
 15c:	add	x29, sp, #0x20
 160:	mov	w19, w0
 164:	strh	wzr, [sp, #2]
 168:	stp	xzr, xzr, [sp, #8]
 16c:	bl	0 <getpid>
 170:	mov	w8, #0x2                   	// #2
 174:	str	w0, [sp, #24]
 178:	strh	w8, [sp]
 17c:	mov	x2, sp
 180:	mov	w1, #0x7                   	// #7
 184:	mov	w0, w19
 188:	bl	0 <fcntl>
 18c:	cmn	w0, #0x1
 190:	b.ne	1b4 <lprofUnlockFd+0x64>  // b.any
 194:	bl	0 <__errno_location>
 198:	ldr	w8, [x0]
 19c:	cmp	w8, #0x4
 1a0:	b.eq	17c <lprofUnlockFd+0x2c>  // b.none
 1a4:	cmp	w8, #0x25
 1a8:	b.ne	1b4 <lprofUnlockFd+0x64>  // b.any
 1ac:	mov	w0, #0xffffffff            	// #-1
 1b0:	b	1b8 <lprofUnlockFd+0x68>
 1b4:	mov	w0, wzr
 1b8:	ldr	x19, [sp, #48]
 1bc:	ldp	x29, x30, [sp, #32]
 1c0:	add	sp, sp, #0x40
 1c4:	ret

00000000000001c8 <lprofLockFileHandle>:
 1c8:	stp	x29, x30, [sp, #-16]!
 1cc:	mov	x29, sp
 1d0:	bl	0 <fileno>
 1d4:	ldp	x29, x30, [sp], #16
 1d8:	b	d8 <lprofLockFd>

00000000000001dc <lprofUnlockFileHandle>:
 1dc:	stp	x29, x30, [sp, #-16]!
 1e0:	mov	x29, sp
 1e4:	bl	0 <fileno>
 1e8:	ldp	x29, x30, [sp], #16
 1ec:	b	150 <lprofUnlockFd>

00000000000001f0 <lprofOpenFileEx>:
 1f0:	stp	x29, x30, [sp, #-32]!
 1f4:	str	x19, [sp, #16]
 1f8:	mov	x29, sp
 1fc:	mov	w1, #0x42                  	// #66
 200:	mov	w2, #0x1b6                 	// #438
 204:	bl	0 <open>
 208:	tbnz	w0, #31, 230 <lprofOpenFileEx+0x40>
 20c:	mov	w19, w0
 210:	bl	d8 <lprofLockFd>
 214:	cbnz	w0, 240 <lprofOpenFileEx+0x50>
 218:	mov	w0, w19
 21c:	ldr	x19, [sp, #16]
 220:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 224:	add	x1, x1, #0x0
 228:	ldp	x29, x30, [sp], #32
 22c:	b	0 <fdopen>
 230:	ldr	x19, [sp, #16]
 234:	mov	x0, xzr
 238:	ldp	x29, x30, [sp], #32
 23c:	ret
 240:	adrp	x8, 0 <stderr>
 244:	ldr	x8, [x8]
 248:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 24c:	adrp	x2, 0 <__llvm_profile_recursive_mkdir>
 250:	add	x1, x1, #0x0
 254:	ldr	x0, [x8]
 258:	add	x2, x2, #0x0
 25c:	bl	0 <fprintf>
 260:	b	218 <lprofOpenFileEx+0x28>

0000000000000264 <lprofGetPathPrefix>:
 264:	stp	x29, x30, [sp, #-48]!
 268:	str	x21, [sp, #16]
 26c:	stp	x20, x19, [sp, #32]
 270:	mov	x29, sp
 274:	mov	x21, x0
 278:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 27c:	add	x0, x0, #0x0
 280:	mov	x20, x1
 284:	bl	0 <getenv>
 288:	mov	x19, x0
 28c:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 290:	add	x0, x0, #0x0
 294:	bl	0 <getenv>
 298:	str	xzr, [x20]
 29c:	str	wzr, [x21]
 2a0:	cbz	x19, 2d8 <lprofGetPathPrefix+0x74>
 2a4:	ldrb	w8, [x19]
 2a8:	cbz	w8, 2bc <lprofGetPathPrefix+0x58>
 2ac:	cbz	x0, 2c4 <lprofGetPathPrefix+0x60>
 2b0:	bl	0 <atoi>
 2b4:	bic	w8, w0, w0, asr #31
 2b8:	b	2c8 <lprofGetPathPrefix+0x64>
 2bc:	mov	x19, xzr
 2c0:	b	2d8 <lprofGetPathPrefix+0x74>
 2c4:	mov	w8, wzr
 2c8:	mov	x0, x19
 2cc:	str	w8, [x21]
 2d0:	bl	0 <strlen>
 2d4:	str	x0, [x20]
 2d8:	mov	x0, x19
 2dc:	ldp	x20, x19, [sp, #32]
 2e0:	ldr	x21, [sp, #16]
 2e4:	ldp	x29, x30, [sp], #48
 2e8:	ret

00000000000002ec <lprofApplyPathPrefix>:
 2ec:	stp	x29, x30, [sp, #-48]!
 2f0:	stp	x22, x21, [sp, #16]
 2f4:	stp	x20, x19, [sp, #32]
 2f8:	mov	x29, sp
 2fc:	mov	x20, x3
 300:	mov	x22, x2
 304:	mov	x19, x1
 308:	cmp	w4, #0x1
 30c:	mov	x21, x0
 310:	b.lt	344 <lprofApplyPathPrefix+0x58>  // b.tstop
 314:	mov	w8, wzr
 318:	add	x9, x19, #0x1
 31c:	ldrb	w10, [x9]
 320:	cmp	w10, #0x2f
 324:	b.eq	330 <lprofApplyPathPrefix+0x44>  // b.none
 328:	cbnz	w10, 338 <lprofApplyPathPrefix+0x4c>
 32c:	b	344 <lprofApplyPathPrefix+0x58>
 330:	add	w8, w8, #0x1
 334:	mov	x19, x9
 338:	cmp	w8, w4
 33c:	add	x9, x9, #0x1
 340:	b.lt	31c <lprofApplyPathPrefix+0x30>  // b.tstop
 344:	mov	x0, x21
 348:	mov	x1, x22
 34c:	mov	x2, x20
 350:	bl	0 <memcpy>
 354:	add	x8, x20, x22
 358:	ldurb	w8, [x8, #-1]
 35c:	cmp	w8, #0x2f
 360:	b.eq	374 <lprofApplyPathPrefix+0x88>  // b.none
 364:	add	x8, x20, #0x1
 368:	mov	w9, #0x2f                  	// #47
 36c:	strb	w9, [x21, x20]
 370:	mov	x20, x8
 374:	mov	x0, x19
 378:	add	x20, x21, x20
 37c:	bl	0 <strlen>
 380:	add	x2, x0, #0x1
 384:	mov	x0, x20
 388:	mov	x1, x19
 38c:	ldp	x20, x19, [sp, #32]
 390:	ldp	x22, x21, [sp, #16]
 394:	ldp	x29, x30, [sp], #48
 398:	b	0 <memcpy>

000000000000039c <lprofFindFirstDirSeparator>:
 39c:	mov	w1, #0x2f                  	// #47
 3a0:	b	0 <strchr>

00000000000003a4 <lprofFindLastDirSeparator>:
 3a4:	mov	w1, #0x2f                  	// #47
 3a8:	b	0 <strrchr>

00000000000003ac <lprofSuspendSigKill>:
 3ac:	sub	sp, sp, #0x20
 3b0:	stp	x29, x30, [sp, #16]
 3b4:	add	x29, sp, #0x10
 3b8:	sub	x1, x29, #0x4
 3bc:	mov	w0, #0x2                   	// #2
 3c0:	stur	wzr, [x29, #-4]
 3c4:	bl	0 <prctl>
 3c8:	ldur	w8, [x29, #-4]
 3cc:	cbnz	w0, 3e8 <lprofSuspendSigKill+0x3c>
 3d0:	cmp	w8, #0x9
 3d4:	b.ne	3e8 <lprofSuspendSigKill+0x3c>  // b.any
 3d8:	mov	w0, #0x1                   	// #1
 3dc:	mov	w1, wzr
 3e0:	bl	0 <prctl>
 3e4:	ldur	w8, [x29, #-4]
 3e8:	ldp	x29, x30, [sp, #16]
 3ec:	cmp	w8, #0x9
 3f0:	cset	w0, eq  // eq = none
 3f4:	add	sp, sp, #0x20
 3f8:	ret

00000000000003fc <lprofRestoreSigKill>:
 3fc:	mov	w0, #0x1                   	// #1
 400:	mov	w1, #0x9                   	// #9
 404:	b	0 <prctl>
