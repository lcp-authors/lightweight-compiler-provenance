
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-backlight_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401460 <_init>:
  401460:	stp	x29, x30, [sp, #-16]!
  401464:	mov	x29, sp
  401468:	bl	401810 <call_weak_fn>
  40146c:	ldp	x29, x30, [sp], #16
  401470:	ret

Disassembly of section .plt:

0000000000401480 <.plt>:
  401480:	stp	x16, x30, [sp, #-16]!
  401484:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401488:	ldr	x17, [x16, #3672]
  40148c:	add	x16, x16, #0xe58
  401490:	br	x17
  401494:	nop
  401498:	nop
  40149c:	nop

00000000004014a0 <sd_device_get_property_value@plt>:
  4014a0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4014a4:	ldr	x17, [x16, #3680]
  4014a8:	add	x16, x16, #0xe60
  4014ac:	br	x17

00000000004014b0 <unlink@plt>:
  4014b0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4014b4:	ldr	x17, [x16, #3688]
  4014b8:	add	x16, x16, #0xe68
  4014bc:	br	x17

00000000004014c0 <stpcpy@plt>:
  4014c0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4014c4:	ldr	x17, [x16, #3696]
  4014c8:	add	x16, x16, #0xe70
  4014cc:	br	x17

00000000004014d0 <__libc_start_main@plt>:
  4014d0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4014d4:	ldr	x17, [x16, #3704]
  4014d8:	add	x16, x16, #0xe78
  4014dc:	br	x17

00000000004014e0 <safe_atollu@plt>:
  4014e0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4014e4:	ldr	x17, [x16, #3712]
  4014e8:	add	x16, x16, #0xe80
  4014ec:	br	x17

00000000004014f0 <parse_boolean@plt>:
  4014f0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4014f4:	ldr	x17, [x16, #3720]
  4014f8:	add	x16, x16, #0xe88
  4014fc:	br	x17

0000000000401500 <sd_device_enumerator_new@plt>:
  401500:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401504:	ldr	x17, [x16, #3728]
  401508:	add	x16, x16, #0xe90
  40150c:	br	x17

0000000000401510 <__gmon_start__@plt>:
  401510:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401514:	ldr	x17, [x16, #3736]
  401518:	add	x16, x16, #0xe98
  40151c:	br	x17

0000000000401520 <cescape@plt>:
  401520:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401524:	ldr	x17, [x16, #3744]
  401528:	add	x16, x16, #0xea0
  40152c:	br	x17

0000000000401530 <write_string_file_ts@plt>:
  401530:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401534:	ldr	x17, [x16, #3752]
  401538:	add	x16, x16, #0xea8
  40153c:	br	x17

0000000000401540 <polkit_agent_close@plt>:
  401540:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401544:	ldr	x17, [x16, #3760]
  401548:	add	x16, x16, #0xeb0
  40154c:	br	x17

0000000000401550 <sd_device_enumerator_add_match_subsystem@plt>:
  401550:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401554:	ldr	x17, [x16, #3768]
  401558:	add	x16, x16, #0xeb8
  40155c:	br	x17

0000000000401560 <strnlen@plt>:
  401560:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401564:	ldr	x17, [x16, #3776]
  401568:	add	x16, x16, #0xec0
  40156c:	br	x17

0000000000401570 <sd_device_enumerator_get_device_first@plt>:
  401570:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401574:	ldr	x17, [x16, #3784]
  401578:	add	x16, x16, #0xec8
  40157c:	br	x17

0000000000401580 <sd_device_new_from_subsystem_sysname@plt>:
  401580:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401584:	ldr	x17, [x16, #3792]
  401588:	add	x16, x16, #0xed0
  40158c:	br	x17

0000000000401590 <sd_device_enumerator_unref@plt>:
  401590:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401594:	ldr	x17, [x16, #3800]
  401598:	add	x16, x16, #0xed8
  40159c:	br	x17

00000000004015a0 <memcpy@plt>:
  4015a0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4015a4:	ldr	x17, [x16, #3808]
  4015a8:	add	x16, x16, #0xee0
  4015ac:	br	x17

00000000004015b0 <log_setup_service@plt>:
  4015b0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4015b4:	ldr	x17, [x16, #3816]
  4015b8:	add	x16, x16, #0xee8
  4015bc:	br	x17

00000000004015c0 <sd_device_get_sysname@plt>:
  4015c0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4015c4:	ldr	x17, [x16, #3824]
  4015c8:	add	x16, x16, #0xef0
  4015cc:	br	x17

00000000004015d0 <log_assert_failed_realm@plt>:
  4015d0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4015d4:	ldr	x17, [x16, #3832]
  4015d8:	add	x16, x16, #0xef8
  4015dc:	br	x17

00000000004015e0 <umask@plt>:
  4015e0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4015e4:	ldr	x17, [x16, #3840]
  4015e8:	add	x16, x16, #0xf00
  4015ec:	br	x17

00000000004015f0 <strncmp@plt>:
  4015f0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4015f4:	ldr	x17, [x16, #3848]
  4015f8:	add	x16, x16, #0xf08
  4015fc:	br	x17

0000000000401600 <abort@plt>:
  401600:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401604:	ldr	x17, [x16, #3856]
  401608:	add	x16, x16, #0xf10
  40160c:	br	x17

0000000000401610 <strspn@plt>:
  401610:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401614:	ldr	x17, [x16, #3864]
  401618:	add	x16, x16, #0xf18
  40161c:	br	x17

0000000000401620 <sd_device_get_subsystem@plt>:
  401620:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401624:	ldr	x17, [x16, #3872]
  401628:	add	x16, x16, #0xf20
  40162c:	br	x17

0000000000401630 <log_object_internal@plt>:
  401630:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401634:	ldr	x17, [x16, #3880]
  401638:	add	x16, x16, #0xf28
  40163c:	br	x17

0000000000401640 <read_one_line_file@plt>:
  401640:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401644:	ldr	x17, [x16, #3888]
  401648:	add	x16, x16, #0xf30
  40164c:	br	x17

0000000000401650 <shall_restore_state@plt>:
  401650:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401654:	ldr	x17, [x16, #3896]
  401658:	add	x16, x16, #0xf38
  40165c:	br	x17

0000000000401660 <__stack_chk_fail@plt>:
  401660:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401664:	ldr	x17, [x16, #3904]
  401668:	add	x16, x16, #0xf40
  40166c:	br	x17

0000000000401670 <ask_password_agent_close@plt>:
  401670:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401674:	ldr	x17, [x16, #3912]
  401678:	add	x16, x16, #0xf48
  40167c:	br	x17

0000000000401680 <pager_close@plt>:
  401680:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401684:	ldr	x17, [x16, #3920]
  401688:	add	x16, x16, #0xf50
  40168c:	br	x17

0000000000401690 <sd_device_enumerator_get_device_next@plt>:
  401690:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401694:	ldr	x17, [x16, #3928]
  401698:	add	x16, x16, #0xf58
  40169c:	br	x17

00000000004016a0 <strv_find@plt>:
  4016a0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4016a4:	ldr	x17, [x16, #3936]
  4016a8:	add	x16, x16, #0xf60
  4016ac:	br	x17

00000000004016b0 <safe_atou_full@plt>:
  4016b0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4016b4:	ldr	x17, [x16, #3944]
  4016b8:	add	x16, x16, #0xf68
  4016bc:	br	x17

00000000004016c0 <log_internal_realm@plt>:
  4016c0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4016c4:	ldr	x17, [x16, #3952]
  4016c8:	add	x16, x16, #0xf70
  4016cc:	br	x17

00000000004016d0 <strcmp@plt>:
  4016d0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4016d4:	ldr	x17, [x16, #3960]
  4016d8:	add	x16, x16, #0xf78
  4016dc:	br	x17

00000000004016e0 <strdup@plt>:
  4016e0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4016e4:	ldr	x17, [x16, #3968]
  4016e8:	add	x16, x16, #0xf80
  4016ec:	br	x17

00000000004016f0 <strchr@plt>:
  4016f0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4016f4:	ldr	x17, [x16, #3976]
  4016f8:	add	x16, x16, #0xf88
  4016fc:	br	x17

0000000000401700 <sd_device_get_sysattr_value@plt>:
  401700:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401704:	ldr	x17, [x16, #3984]
  401708:	add	x16, x16, #0xf90
  40170c:	br	x17

0000000000401710 <asprintf@plt>:
  401710:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401714:	ldr	x17, [x16, #3992]
  401718:	add	x16, x16, #0xf98
  40171c:	br	x17

0000000000401720 <sd_device_set_sysattr_value@plt>:
  401720:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401724:	ldr	x17, [x16, #4000]
  401728:	add	x16, x16, #0xfa0
  40172c:	br	x17

0000000000401730 <free@plt>:
  401730:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401734:	ldr	x17, [x16, #4008]
  401738:	add	x16, x16, #0xfa8
  40173c:	br	x17

0000000000401740 <sd_device_unref@plt>:
  401740:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401744:	ldr	x17, [x16, #4016]
  401748:	add	x16, x16, #0xfb0
  40174c:	br	x17

0000000000401750 <mac_selinux_finish@plt>:
  401750:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401754:	ldr	x17, [x16, #4024]
  401758:	add	x16, x16, #0xfb8
  40175c:	br	x17

0000000000401760 <mkdir_p@plt>:
  401760:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401764:	ldr	x17, [x16, #4032]
  401768:	add	x16, x16, #0xfc0
  40176c:	br	x17

0000000000401770 <strlen@plt>:
  401770:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401774:	ldr	x17, [x16, #4040]
  401778:	add	x16, x16, #0xfc8
  40177c:	br	x17

0000000000401780 <log_oom_internal@plt>:
  401780:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401784:	ldr	x17, [x16, #4048]
  401788:	add	x16, x16, #0xfd0
  40178c:	br	x17

0000000000401790 <sd_device_enumerator_allow_uninitialized@plt>:
  401790:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  401794:	ldr	x17, [x16, #4056]
  401798:	add	x16, x16, #0xfd8
  40179c:	br	x17

00000000004017a0 <log_get_max_level_realm@plt>:
  4017a0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4017a4:	ldr	x17, [x16, #4064]
  4017a8:	add	x16, x16, #0xfe0
  4017ac:	br	x17

00000000004017b0 <sd_device_get_parent@plt>:
  4017b0:	adrp	x16, 415000 <__FRAME_END__+0x10270>
  4017b4:	ldr	x17, [x16, #4072]
  4017b8:	add	x16, x16, #0xfe8
  4017bc:	br	x17

Disassembly of section .text:

00000000004017c0 <_start>:
  4017c0:	mov	x29, #0x0                   	// #0
  4017c4:	mov	x30, #0x0                   	// #0
  4017c8:	mov	x5, x0
  4017cc:	ldr	x1, [sp]
  4017d0:	add	x2, sp, #0x8
  4017d4:	mov	x6, sp
  4017d8:	movz	x0, #0x0, lsl #48
  4017dc:	movk	x0, #0x0, lsl #32
  4017e0:	movk	x0, #0x40, lsl #16
  4017e4:	movk	x0, #0x40ac
  4017e8:	movz	x3, #0x0, lsl #48
  4017ec:	movk	x3, #0x0, lsl #32
  4017f0:	movk	x3, #0x40, lsl #16
  4017f4:	movk	x3, #0x4100
  4017f8:	movz	x4, #0x0, lsl #48
  4017fc:	movk	x4, #0x0, lsl #32
  401800:	movk	x4, #0x40, lsl #16
  401804:	movk	x4, #0x4180
  401808:	bl	4014d0 <__libc_start_main@plt>
  40180c:	bl	401600 <abort@plt>

0000000000401810 <call_weak_fn>:
  401810:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  401814:	ldr	x0, [x0, #4088]
  401818:	cbz	x0, 401820 <call_weak_fn+0x10>
  40181c:	b	401510 <__gmon_start__@plt>
  401820:	ret

0000000000401824 <deregister_tm_clones>:
  401824:	stp	x29, x30, [sp, #-32]!
  401828:	mov	x29, sp
  40182c:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  401830:	add	x0, x0, #0x0
  401834:	str	x0, [sp, #24]
  401838:	ldr	x0, [sp, #24]
  40183c:	str	x0, [sp, #24]
  401840:	ldr	x1, [sp, #24]
  401844:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  401848:	add	x0, x0, #0x0
  40184c:	cmp	x1, x0
  401850:	b.eq	40188c <deregister_tm_clones+0x68>  // b.none
  401854:	adrp	x0, 404000 <run+0xecc>
  401858:	add	x0, x0, #0x198
  40185c:	ldr	x0, [x0]
  401860:	str	x0, [sp, #16]
  401864:	ldr	x0, [sp, #16]
  401868:	str	x0, [sp, #16]
  40186c:	ldr	x0, [sp, #16]
  401870:	cmp	x0, #0x0
  401874:	b.eq	401890 <deregister_tm_clones+0x6c>  // b.none
  401878:	ldr	x1, [sp, #16]
  40187c:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  401880:	add	x0, x0, #0x0
  401884:	blr	x1
  401888:	b	401890 <deregister_tm_clones+0x6c>
  40188c:	nop
  401890:	ldp	x29, x30, [sp], #32
  401894:	ret

0000000000401898 <register_tm_clones>:
  401898:	stp	x29, x30, [sp, #-48]!
  40189c:	mov	x29, sp
  4018a0:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  4018a4:	add	x0, x0, #0x0
  4018a8:	str	x0, [sp, #40]
  4018ac:	ldr	x0, [sp, #40]
  4018b0:	str	x0, [sp, #40]
  4018b4:	ldr	x1, [sp, #40]
  4018b8:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  4018bc:	add	x0, x0, #0x0
  4018c0:	sub	x0, x1, x0
  4018c4:	asr	x0, x0, #3
  4018c8:	lsr	x1, x0, #63
  4018cc:	add	x0, x1, x0
  4018d0:	asr	x0, x0, #1
  4018d4:	str	x0, [sp, #32]
  4018d8:	ldr	x0, [sp, #32]
  4018dc:	cmp	x0, #0x0
  4018e0:	b.eq	401920 <register_tm_clones+0x88>  // b.none
  4018e4:	adrp	x0, 404000 <run+0xecc>
  4018e8:	add	x0, x0, #0x1a0
  4018ec:	ldr	x0, [x0]
  4018f0:	str	x0, [sp, #24]
  4018f4:	ldr	x0, [sp, #24]
  4018f8:	str	x0, [sp, #24]
  4018fc:	ldr	x0, [sp, #24]
  401900:	cmp	x0, #0x0
  401904:	b.eq	401924 <register_tm_clones+0x8c>  // b.none
  401908:	ldr	x2, [sp, #24]
  40190c:	ldr	x1, [sp, #32]
  401910:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  401914:	add	x0, x0, #0x0
  401918:	blr	x2
  40191c:	b	401924 <register_tm_clones+0x8c>
  401920:	nop
  401924:	ldp	x29, x30, [sp], #48
  401928:	ret

000000000040192c <__do_global_dtors_aux>:
  40192c:	stp	x29, x30, [sp, #-16]!
  401930:	mov	x29, sp
  401934:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  401938:	add	x0, x0, #0xc
  40193c:	ldrb	w0, [x0]
  401940:	and	x0, x0, #0xff
  401944:	cmp	x0, #0x0
  401948:	b.ne	401964 <__do_global_dtors_aux+0x38>  // b.any
  40194c:	bl	401824 <deregister_tm_clones>
  401950:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  401954:	add	x0, x0, #0xc
  401958:	mov	w1, #0x1                   	// #1
  40195c:	strb	w1, [x0]
  401960:	b	401968 <__do_global_dtors_aux+0x3c>
  401964:	nop
  401968:	ldp	x29, x30, [sp], #16
  40196c:	ret

0000000000401970 <frame_dummy>:
  401970:	stp	x29, x30, [sp, #-16]!
  401974:	mov	x29, sp
  401978:	bl	401898 <register_tm_clones>
  40197c:	nop
  401980:	ldp	x29, x30, [sp], #16
  401984:	ret

0000000000401988 <sd_device_unrefp>:
  401988:	stp	x29, x30, [sp, #-32]!
  40198c:	mov	x29, sp
  401990:	str	x0, [sp, #24]
  401994:	ldr	x0, [sp, #24]
  401998:	ldr	x0, [x0]
  40199c:	cmp	x0, #0x0
  4019a0:	b.eq	4019b0 <sd_device_unrefp+0x28>  // b.none
  4019a4:	ldr	x0, [sp, #24]
  4019a8:	ldr	x0, [x0]
  4019ac:	bl	401740 <sd_device_unref@plt>
  4019b0:	nop
  4019b4:	ldp	x29, x30, [sp], #32
  4019b8:	ret

00000000004019bc <sd_device_enumerator_unrefp>:
  4019bc:	stp	x29, x30, [sp, #-32]!
  4019c0:	mov	x29, sp
  4019c4:	str	x0, [sp, #24]
  4019c8:	ldr	x0, [sp, #24]
  4019cc:	ldr	x0, [x0]
  4019d0:	cmp	x0, #0x0
  4019d4:	b.eq	4019e4 <sd_device_enumerator_unrefp+0x28>  // b.none
  4019d8:	ldr	x0, [sp, #24]
  4019dc:	ldr	x0, [x0]
  4019e0:	bl	401590 <sd_device_enumerator_unref@plt>
  4019e4:	nop
  4019e8:	ldp	x29, x30, [sp], #32
  4019ec:	ret

00000000004019f0 <ALIGN_TO>:
  4019f0:	sub	sp, sp, #0x10
  4019f4:	str	x0, [sp, #8]
  4019f8:	str	x1, [sp]
  4019fc:	ldr	x1, [sp, #8]
  401a00:	ldr	x0, [sp]
  401a04:	add	x0, x1, x0
  401a08:	sub	x1, x0, #0x1
  401a0c:	ldr	x0, [sp]
  401a10:	neg	x0, x0
  401a14:	and	x0, x1, x0
  401a18:	add	sp, sp, #0x10
  401a1c:	ret

0000000000401a20 <freep>:
  401a20:	stp	x29, x30, [sp, #-32]!
  401a24:	mov	x29, sp
  401a28:	str	x0, [sp, #24]
  401a2c:	ldr	x0, [sp, #24]
  401a30:	ldr	x0, [x0]
  401a34:	bl	401730 <free@plt>
  401a38:	nop
  401a3c:	ldp	x29, x30, [sp], #32
  401a40:	ret

0000000000401a44 <size_multiply_overflow>:
  401a44:	sub	sp, sp, #0x10
  401a48:	str	x0, [sp, #8]
  401a4c:	str	x1, [sp]
  401a50:	ldr	x0, [sp]
  401a54:	cmp	x0, #0x0
  401a58:	cset	w0, ne  // ne = any
  401a5c:	and	w0, w0, #0xff
  401a60:	and	x0, x0, #0xff
  401a64:	cmp	x0, #0x0
  401a68:	b.eq	401aac <size_multiply_overflow+0x68>  // b.none
  401a6c:	mov	x2, #0x0                   	// #0
  401a70:	ldr	x1, [sp, #8]
  401a74:	ldr	x0, [sp]
  401a78:	umulh	x0, x1, x0
  401a7c:	cmp	x0, #0x0
  401a80:	b.eq	401a88 <size_multiply_overflow+0x44>  // b.none
  401a84:	mov	x2, #0x1                   	// #1
  401a88:	mov	x0, x2
  401a8c:	cmp	x0, #0x0
  401a90:	cset	w0, ne  // ne = any
  401a94:	and	w0, w0, #0xff
  401a98:	and	x0, x0, #0xff
  401a9c:	cmp	x0, #0x0
  401aa0:	b.eq	401aac <size_multiply_overflow+0x68>  // b.none
  401aa4:	mov	w0, #0x1                   	// #1
  401aa8:	b	401ab0 <size_multiply_overflow+0x6c>
  401aac:	mov	w0, #0x0                   	// #0
  401ab0:	and	w0, w0, #0x1
  401ab4:	and	w0, w0, #0xff
  401ab8:	add	sp, sp, #0x10
  401abc:	ret

0000000000401ac0 <startswith>:
  401ac0:	stp	x29, x30, [sp, #-48]!
  401ac4:	mov	x29, sp
  401ac8:	str	x0, [sp, #24]
  401acc:	str	x1, [sp, #16]
  401ad0:	ldr	x0, [sp, #16]
  401ad4:	bl	401770 <strlen@plt>
  401ad8:	str	x0, [sp, #40]
  401adc:	ldr	x2, [sp, #40]
  401ae0:	ldr	x1, [sp, #16]
  401ae4:	ldr	x0, [sp, #24]
  401ae8:	bl	4015f0 <strncmp@plt>
  401aec:	cmp	w0, #0x0
  401af0:	b.ne	401b04 <startswith+0x44>  // b.any
  401af4:	ldr	x1, [sp, #24]
  401af8:	ldr	x0, [sp, #40]
  401afc:	add	x0, x1, x0
  401b00:	b	401b08 <startswith+0x48>
  401b04:	mov	x0, #0x0                   	// #0
  401b08:	ldp	x29, x30, [sp], #48
  401b0c:	ret

0000000000401b10 <write_string_file>:
  401b10:	stp	x29, x30, [sp, #-48]!
  401b14:	mov	x29, sp
  401b18:	str	x0, [sp, #40]
  401b1c:	str	x1, [sp, #32]
  401b20:	str	w2, [sp, #28]
  401b24:	mov	x3, #0x0                   	// #0
  401b28:	ldr	w2, [sp, #28]
  401b2c:	ldr	x1, [sp, #32]
  401b30:	ldr	x0, [sp, #40]
  401b34:	bl	401530 <write_string_file_ts@plt>
  401b38:	ldp	x29, x30, [sp], #48
  401b3c:	ret

0000000000401b40 <save_argc_argv>:
  401b40:	sub	sp, sp, #0x10
  401b44:	str	w0, [sp, #12]
  401b48:	str	x1, [sp]
  401b4c:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  401b50:	add	x0, x0, #0x8
  401b54:	ldr	w1, [sp, #12]
  401b58:	str	w1, [x0]
  401b5c:	adrp	x0, 416000 <saved_argv@@SD_SHARED>
  401b60:	add	x0, x0, #0x0
  401b64:	ldr	x1, [sp]
  401b68:	str	x1, [x0]
  401b6c:	nop
  401b70:	add	sp, sp, #0x10
  401b74:	ret

0000000000401b78 <static_destruct>:
  401b78:	stp	x29, x30, [sp, #-32]!
  401b7c:	mov	x29, sp
  401b80:	adrp	x0, 404000 <run+0xecc>
  401b84:	add	x0, x0, #0x870
  401b88:	ldr	x0, [x0]
  401b8c:	cmp	x0, #0x0
  401b90:	b.eq	401bf4 <static_destruct+0x7c>  // b.none
  401b94:	adrp	x0, 404000 <run+0xecc>
  401b98:	add	x0, x0, #0x870
  401b9c:	ldr	x0, [x0]
  401ba0:	mov	x1, #0x8                   	// #8
  401ba4:	bl	4019f0 <ALIGN_TO>
  401ba8:	str	x0, [sp, #24]
  401bac:	b	401bd8 <static_destruct+0x60>
  401bb0:	ldr	x0, [sp, #24]
  401bb4:	ldr	x1, [x0, #8]
  401bb8:	ldr	x0, [sp, #24]
  401bbc:	ldr	x0, [x0]
  401bc0:	blr	x1
  401bc4:	ldr	x0, [sp, #24]
  401bc8:	add	x0, x0, #0x10
  401bcc:	mov	x1, #0x8                   	// #8
  401bd0:	bl	4019f0 <ALIGN_TO>
  401bd4:	str	x0, [sp, #24]
  401bd8:	ldr	x1, [sp, #24]
  401bdc:	adrp	x0, 404000 <run+0xecc>
  401be0:	add	x0, x0, #0x878
  401be4:	ldr	x0, [x0]
  401be8:	cmp	x1, x0
  401bec:	b.cc	401bb0 <static_destruct+0x38>  // b.lo, b.ul, b.last
  401bf0:	b	401bf8 <static_destruct+0x80>
  401bf4:	nop
  401bf8:	ldp	x29, x30, [sp], #32
  401bfc:	ret

0000000000401c00 <safe_atou>:
  401c00:	stp	x29, x30, [sp, #-32]!
  401c04:	mov	x29, sp
  401c08:	str	x0, [sp, #24]
  401c0c:	str	x1, [sp, #16]
  401c10:	ldr	x2, [sp, #16]
  401c14:	mov	w1, #0x0                   	// #0
  401c18:	ldr	x0, [sp, #24]
  401c1c:	bl	4016b0 <safe_atou_full@plt>
  401c20:	ldp	x29, x30, [sp], #32
  401c24:	ret

0000000000401c28 <safe_atolu>:
  401c28:	stp	x29, x30, [sp, #-32]!
  401c2c:	mov	x29, sp
  401c30:	str	x0, [sp, #24]
  401c34:	str	x1, [sp, #16]
  401c38:	ldr	x1, [sp, #16]
  401c3c:	ldr	x0, [sp, #24]
  401c40:	bl	4014e0 <safe_atollu@plt>
  401c44:	ldp	x29, x30, [sp], #32
  401c48:	ret

0000000000401c4c <find_pci_or_platform_parent>:
  401c4c:	sub	sp, sp, #0xb0
  401c50:	stp	x29, x30, [sp, #16]
  401c54:	add	x29, sp, #0x10
  401c58:	str	x0, [sp, #40]
  401c5c:	str	x1, [sp, #32]
  401c60:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  401c64:	add	x0, x0, #0xc10
  401c68:	ldr	x1, [x0]
  401c6c:	str	x1, [sp, #168]
  401c70:	mov	x1, #0x0                   	// #0
  401c74:	ldr	x0, [sp, #40]
  401c78:	cmp	x0, #0x0
  401c7c:	cset	w0, eq  // eq = none
  401c80:	and	w0, w0, #0xff
  401c84:	and	x0, x0, #0xff
  401c88:	cmp	x0, #0x0
  401c8c:	b.eq	401cb8 <find_pci_or_platform_parent+0x6c>  // b.none
  401c90:	adrp	x0, 404000 <run+0xecc>
  401c94:	add	x1, x0, #0x203
  401c98:	adrp	x0, 404000 <run+0xecc>
  401c9c:	add	x4, x0, #0x880
  401ca0:	mov	w3, #0x1a                  	// #26
  401ca4:	mov	x2, x1
  401ca8:	adrp	x0, 404000 <run+0xecc>
  401cac:	add	x1, x0, #0x220
  401cb0:	mov	w0, #0x0                   	// #0
  401cb4:	bl	4015d0 <log_assert_failed_realm@plt>
  401cb8:	ldr	x0, [sp, #32]
  401cbc:	cmp	x0, #0x0
  401cc0:	cset	w0, eq  // eq = none
  401cc4:	and	w0, w0, #0xff
  401cc8:	and	x0, x0, #0xff
  401ccc:	cmp	x0, #0x0
  401cd0:	b.eq	401cfc <find_pci_or_platform_parent+0xb0>  // b.none
  401cd4:	adrp	x0, 404000 <run+0xecc>
  401cd8:	add	x1, x0, #0x203
  401cdc:	adrp	x0, 404000 <run+0xecc>
  401ce0:	add	x4, x0, #0x880
  401ce4:	mov	w3, #0x1b                  	// #27
  401ce8:	mov	x2, x1
  401cec:	adrp	x0, 404000 <run+0xecc>
  401cf0:	add	x1, x0, #0x228
  401cf4:	mov	w0, #0x0                   	// #0
  401cf8:	bl	4015d0 <log_assert_failed_realm@plt>
  401cfc:	add	x0, sp, #0x60
  401d00:	mov	x1, x0
  401d04:	ldr	x0, [sp, #40]
  401d08:	bl	4017b0 <sd_device_get_parent@plt>
  401d0c:	str	w0, [sp, #56]
  401d10:	ldr	w0, [sp, #56]
  401d14:	cmp	w0, #0x0
  401d18:	b.ge	401d24 <find_pci_or_platform_parent+0xd8>  // b.tcont
  401d1c:	ldr	w0, [sp, #56]
  401d20:	b	401fe4 <find_pci_or_platform_parent+0x398>
  401d24:	ldr	x0, [sp, #96]
  401d28:	add	x1, sp, #0x48
  401d2c:	bl	401620 <sd_device_get_subsystem@plt>
  401d30:	str	w0, [sp, #56]
  401d34:	ldr	w0, [sp, #56]
  401d38:	cmp	w0, #0x0
  401d3c:	b.ge	401d48 <find_pci_or_platform_parent+0xfc>  // b.tcont
  401d40:	ldr	w0, [sp, #56]
  401d44:	b	401fe4 <find_pci_or_platform_parent+0x398>
  401d48:	ldr	x0, [sp, #96]
  401d4c:	add	x1, sp, #0x50
  401d50:	bl	4015c0 <sd_device_get_sysname@plt>
  401d54:	str	w0, [sp, #56]
  401d58:	ldr	w0, [sp, #56]
  401d5c:	cmp	w0, #0x0
  401d60:	b.ge	401d6c <find_pci_or_platform_parent+0x120>  // b.tcont
  401d64:	ldr	w0, [sp, #56]
  401d68:	b	401fe4 <find_pci_or_platform_parent+0x398>
  401d6c:	ldr	x2, [sp, #72]
  401d70:	adrp	x0, 404000 <run+0xecc>
  401d74:	add	x1, x0, #0x230
  401d78:	mov	x0, x2
  401d7c:	bl	4016d0 <strcmp@plt>
  401d80:	cmp	w0, #0x0
  401d84:	b.ne	401e84 <find_pci_or_platform_parent+0x238>  // b.any
  401d88:	ldr	x2, [sp, #80]
  401d8c:	adrp	x0, 404000 <run+0xecc>
  401d90:	add	x1, x0, #0x238
  401d94:	mov	x0, x2
  401d98:	bl	401ac0 <startswith>
  401d9c:	str	x0, [sp, #128]
  401da0:	ldr	x0, [sp, #128]
  401da4:	cmp	x0, #0x0
  401da8:	b.ne	401db4 <find_pci_or_platform_parent+0x168>  // b.any
  401dac:	mov	w0, #0xffffffc3            	// #-61
  401db0:	b	401fe4 <find_pci_or_platform_parent+0x398>
  401db4:	adrp	x0, 404000 <run+0xecc>
  401db8:	add	x1, x0, #0x240
  401dbc:	ldr	x0, [sp, #128]
  401dc0:	bl	401610 <strspn@plt>
  401dc4:	mov	x1, x0
  401dc8:	ldr	x0, [sp, #128]
  401dcc:	add	x0, x0, x1
  401dd0:	str	x0, [sp, #128]
  401dd4:	ldr	x0, [sp, #128]
  401dd8:	ldrb	w0, [x0]
  401ddc:	cmp	w0, #0x2d
  401de0:	b.ne	401fd8 <find_pci_or_platform_parent+0x38c>  // b.any
  401de4:	ldr	x0, [sp, #128]
  401de8:	str	x0, [sp, #136]
  401dec:	str	xzr, [sp, #112]
  401df0:	adrp	x0, 404000 <run+0xecc>
  401df4:	add	x0, x0, #0x290
  401df8:	add	x2, sp, #0x90
  401dfc:	mov	x3, x0
  401e00:	ldp	x0, x1, [x3]
  401e04:	stp	x0, x1, [x2]
  401e08:	ldr	x0, [x3, #16]
  401e0c:	str	x0, [x2, #16]
  401e10:	add	x0, sp, #0x90
  401e14:	str	x0, [sp, #120]
  401e18:	b	401e4c <find_pci_or_platform_parent+0x200>
  401e1c:	ldr	x0, [sp, #120]
  401e20:	ldr	x0, [x0]
  401e24:	mov	x1, x0
  401e28:	ldr	x0, [sp, #136]
  401e2c:	bl	401ac0 <startswith>
  401e30:	str	x0, [sp, #112]
  401e34:	ldr	x0, [sp, #112]
  401e38:	cmp	x0, #0x0
  401e3c:	b.ne	401e6c <find_pci_or_platform_parent+0x220>  // b.any
  401e40:	ldr	x0, [sp, #120]
  401e44:	add	x0, x0, #0x8
  401e48:	str	x0, [sp, #120]
  401e4c:	ldr	x0, [sp, #120]
  401e50:	cmp	x0, #0x0
  401e54:	b.eq	401e70 <find_pci_or_platform_parent+0x224>  // b.none
  401e58:	ldr	x0, [sp, #120]
  401e5c:	ldr	x0, [x0]
  401e60:	cmp	x0, #0x0
  401e64:	b.ne	401e1c <find_pci_or_platform_parent+0x1d0>  // b.any
  401e68:	b	401e70 <find_pci_or_platform_parent+0x224>
  401e6c:	nop
  401e70:	ldr	x0, [sp, #112]
  401e74:	cmp	x0, #0x0
  401e78:	b.ne	401fd8 <find_pci_or_platform_parent+0x38c>  // b.any
  401e7c:	mov	w0, #0xffffffa1            	// #-95
  401e80:	b	401fe4 <find_pci_or_platform_parent+0x398>
  401e84:	ldr	x2, [sp, #72]
  401e88:	adrp	x0, 404000 <run+0xecc>
  401e8c:	add	x1, x0, #0x250
  401e90:	mov	x0, x2
  401e94:	bl	4016d0 <strcmp@plt>
  401e98:	cmp	w0, #0x0
  401e9c:	b.ne	401fa4 <find_pci_or_platform_parent+0x358>  // b.any
  401ea0:	ldr	x3, [sp, #96]
  401ea4:	add	x0, sp, #0x58
  401ea8:	mov	x2, x0
  401eac:	adrp	x0, 404000 <run+0xecc>
  401eb0:	add	x1, x0, #0x258
  401eb4:	mov	x0, x3
  401eb8:	bl	401700 <sd_device_get_sysattr_value@plt>
  401ebc:	cmp	w0, #0x0
  401ec0:	b.lt	401fa4 <find_pci_or_platform_parent+0x358>  // b.tstop
  401ec4:	str	xzr, [sp, #104]
  401ec8:	ldr	x0, [sp, #88]
  401ecc:	add	x1, sp, #0x68
  401ed0:	bl	401c28 <safe_atolu>
  401ed4:	str	w0, [sp, #56]
  401ed8:	ldr	w0, [sp, #56]
  401edc:	cmp	w0, #0x0
  401ee0:	b.ge	401f84 <find_pci_or_platform_parent+0x338>  // b.tcont
  401ee4:	mov	w0, #0x4                   	// #4
  401ee8:	str	w0, [sp, #60]
  401eec:	ldr	w0, [sp, #56]
  401ef0:	str	w0, [sp, #64]
  401ef4:	str	wzr, [sp, #68]
  401ef8:	ldr	w0, [sp, #68]
  401efc:	bl	4017a0 <log_get_max_level_realm@plt>
  401f00:	mov	w1, w0
  401f04:	ldr	w0, [sp, #60]
  401f08:	and	w0, w0, #0x7
  401f0c:	cmp	w1, w0
  401f10:	b.lt	401f6c <find_pci_or_platform_parent+0x320>  // b.tstop
  401f14:	ldr	w0, [sp, #68]
  401f18:	lsl	w1, w0, #10
  401f1c:	ldr	w0, [sp, #60]
  401f20:	orr	w8, w1, w0
  401f24:	adrp	x0, 404000 <run+0xecc>
  401f28:	add	x1, x0, #0x203
  401f2c:	ldr	x2, [sp, #88]
  401f30:	ldr	x3, [sp, #72]
  401f34:	ldr	x0, [sp, #80]
  401f38:	str	x0, [sp]
  401f3c:	mov	x7, x3
  401f40:	mov	x6, x2
  401f44:	adrp	x0, 404000 <run+0xecc>
  401f48:	add	x5, x0, #0x260
  401f4c:	adrp	x0, 404000 <run+0xecc>
  401f50:	add	x4, x0, #0x8a0
  401f54:	mov	w3, #0x3d                  	// #61
  401f58:	mov	x2, x1
  401f5c:	ldr	w1, [sp, #64]
  401f60:	mov	w0, w8
  401f64:	bl	4016c0 <log_internal_realm@plt>
  401f68:	b	401fe4 <find_pci_or_platform_parent+0x398>
  401f6c:	ldr	w0, [sp, #64]
  401f70:	cmp	w0, #0x0
  401f74:	cneg	w0, w0, lt  // lt = tstop
  401f78:	and	w0, w0, #0xff
  401f7c:	neg	w0, w0
  401f80:	b	401fe4 <find_pci_or_platform_parent+0x398>
  401f84:	ldr	x0, [sp, #104]
  401f88:	cmp	x0, #0x30, lsl #12
  401f8c:	b.ne	401fd4 <find_pci_or_platform_parent+0x388>  // b.any
  401f90:	ldr	x1, [sp, #96]
  401f94:	ldr	x0, [sp, #32]
  401f98:	str	x1, [x0]
  401f9c:	mov	w0, #0x0                   	// #0
  401fa0:	b	401fe4 <find_pci_or_platform_parent+0x398>
  401fa4:	ldr	x2, [sp, #72]
  401fa8:	adrp	x0, 404000 <run+0xecc>
  401fac:	add	x1, x0, #0x1c8
  401fb0:	mov	x0, x2
  401fb4:	bl	4016d0 <strcmp@plt>
  401fb8:	cmp	w0, #0x0
  401fbc:	b.ne	401fd8 <find_pci_or_platform_parent+0x38c>  // b.any
  401fc0:	ldr	x1, [sp, #96]
  401fc4:	ldr	x0, [sp, #32]
  401fc8:	str	x1, [x0]
  401fcc:	mov	w0, #0x0                   	// #0
  401fd0:	b	401fe4 <find_pci_or_platform_parent+0x398>
  401fd4:	nop
  401fd8:	ldr	x0, [sp, #96]
  401fdc:	ldr	x1, [sp, #32]
  401fe0:	bl	401c4c <find_pci_or_platform_parent>
  401fe4:	mov	w1, w0
  401fe8:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  401fec:	add	x0, x0, #0xc10
  401ff0:	ldr	x2, [sp, #168]
  401ff4:	ldr	x0, [x0]
  401ff8:	eor	x0, x2, x0
  401ffc:	cmp	x0, #0x0
  402000:	b.eq	402008 <find_pci_or_platform_parent+0x3bc>  // b.none
  402004:	bl	401660 <__stack_chk_fail@plt>
  402008:	mov	w0, w1
  40200c:	ldp	x29, x30, [sp, #16]
  402010:	add	sp, sp, #0xb0
  402014:	ret

0000000000402018 <same_device>:
  402018:	stp	x29, x30, [sp, #-64]!
  40201c:	mov	x29, sp
  402020:	str	x0, [sp, #24]
  402024:	str	x1, [sp, #16]
  402028:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  40202c:	add	x0, x0, #0xc10
  402030:	ldr	x1, [x0]
  402034:	str	x1, [sp, #56]
  402038:	mov	x1, #0x0                   	// #0
  40203c:	ldr	x0, [sp, #24]
  402040:	cmp	x0, #0x0
  402044:	cset	w0, eq  // eq = none
  402048:	and	w0, w0, #0xff
  40204c:	and	x0, x0, #0xff
  402050:	cmp	x0, #0x0
  402054:	b.eq	402080 <same_device+0x68>  // b.none
  402058:	adrp	x0, 404000 <run+0xecc>
  40205c:	add	x1, x0, #0x203
  402060:	adrp	x0, 404000 <run+0xecc>
  402064:	add	x4, x0, #0x8c0
  402068:	mov	w3, #0x52                  	// #82
  40206c:	mov	x2, x1
  402070:	adrp	x0, 404000 <run+0xecc>
  402074:	add	x1, x0, #0x2a8
  402078:	mov	w0, #0x0                   	// #0
  40207c:	bl	4015d0 <log_assert_failed_realm@plt>
  402080:	ldr	x0, [sp, #16]
  402084:	cmp	x0, #0x0
  402088:	cset	w0, eq  // eq = none
  40208c:	and	w0, w0, #0xff
  402090:	and	x0, x0, #0xff
  402094:	cmp	x0, #0x0
  402098:	b.eq	4020c4 <same_device+0xac>  // b.none
  40209c:	adrp	x0, 404000 <run+0xecc>
  4020a0:	add	x1, x0, #0x203
  4020a4:	adrp	x0, 404000 <run+0xecc>
  4020a8:	add	x4, x0, #0x8c0
  4020ac:	mov	w3, #0x53                  	// #83
  4020b0:	mov	x2, x1
  4020b4:	adrp	x0, 404000 <run+0xecc>
  4020b8:	add	x1, x0, #0x2b0
  4020bc:	mov	w0, #0x0                   	// #0
  4020c0:	bl	4015d0 <log_assert_failed_realm@plt>
  4020c4:	add	x0, sp, #0x28
  4020c8:	mov	x1, x0
  4020cc:	ldr	x0, [sp, #24]
  4020d0:	bl	401620 <sd_device_get_subsystem@plt>
  4020d4:	str	w0, [sp, #36]
  4020d8:	ldr	w0, [sp, #36]
  4020dc:	cmp	w0, #0x0
  4020e0:	b.ge	4020ec <same_device+0xd4>  // b.tcont
  4020e4:	ldr	w0, [sp, #36]
  4020e8:	b	402198 <same_device+0x180>
  4020ec:	add	x0, sp, #0x30
  4020f0:	mov	x1, x0
  4020f4:	ldr	x0, [sp, #16]
  4020f8:	bl	401620 <sd_device_get_subsystem@plt>
  4020fc:	str	w0, [sp, #36]
  402100:	ldr	w0, [sp, #36]
  402104:	cmp	w0, #0x0
  402108:	b.ge	402114 <same_device+0xfc>  // b.tcont
  40210c:	ldr	w0, [sp, #36]
  402110:	b	402198 <same_device+0x180>
  402114:	ldr	x0, [sp, #40]
  402118:	ldr	x1, [sp, #48]
  40211c:	bl	4016d0 <strcmp@plt>
  402120:	cmp	w0, #0x0
  402124:	b.eq	402130 <same_device+0x118>  // b.none
  402128:	mov	w0, #0x0                   	// #0
  40212c:	b	402198 <same_device+0x180>
  402130:	add	x0, sp, #0x28
  402134:	mov	x1, x0
  402138:	ldr	x0, [sp, #24]
  40213c:	bl	4015c0 <sd_device_get_sysname@plt>
  402140:	str	w0, [sp, #36]
  402144:	ldr	w0, [sp, #36]
  402148:	cmp	w0, #0x0
  40214c:	b.ge	402158 <same_device+0x140>  // b.tcont
  402150:	ldr	w0, [sp, #36]
  402154:	b	402198 <same_device+0x180>
  402158:	add	x0, sp, #0x30
  40215c:	mov	x1, x0
  402160:	ldr	x0, [sp, #16]
  402164:	bl	4015c0 <sd_device_get_sysname@plt>
  402168:	str	w0, [sp, #36]
  40216c:	ldr	w0, [sp, #36]
  402170:	cmp	w0, #0x0
  402174:	b.ge	402180 <same_device+0x168>  // b.tcont
  402178:	ldr	w0, [sp, #36]
  40217c:	b	402198 <same_device+0x180>
  402180:	ldr	x0, [sp, #40]
  402184:	ldr	x1, [sp, #48]
  402188:	bl	4016d0 <strcmp@plt>
  40218c:	cmp	w0, #0x0
  402190:	cset	w0, eq  // eq = none
  402194:	and	w0, w0, #0xff
  402198:	mov	w1, w0
  40219c:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  4021a0:	add	x0, x0, #0xc10
  4021a4:	ldr	x2, [sp, #56]
  4021a8:	ldr	x0, [x0]
  4021ac:	eor	x0, x2, x0
  4021b0:	cmp	x0, #0x0
  4021b4:	b.eq	4021bc <same_device+0x1a4>  // b.none
  4021b8:	bl	401660 <__stack_chk_fail@plt>
  4021bc:	mov	w0, w1
  4021c0:	ldp	x29, x30, [sp], #64
  4021c4:	ret

00000000004021c8 <validate_device>:
  4021c8:	stp	x29, x30, [sp, #-192]!
  4021cc:	mov	x29, sp
  4021d0:	str	x19, [sp, #16]
  4021d4:	str	x0, [sp, #40]
  4021d8:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  4021dc:	add	x0, x0, #0xc10
  4021e0:	ldr	x1, [x0]
  4021e4:	str	x1, [sp, #184]
  4021e8:	mov	x1, #0x0                   	// #0
  4021ec:	str	xzr, [sp, #88]
  4021f0:	ldr	x0, [sp, #40]
  4021f4:	cmp	x0, #0x0
  4021f8:	cset	w0, eq  // eq = none
  4021fc:	and	w0, w0, #0xff
  402200:	and	x0, x0, #0xff
  402204:	cmp	x0, #0x0
  402208:	b.eq	402234 <validate_device+0x6c>  // b.none
  40220c:	adrp	x0, 404000 <run+0xecc>
  402210:	add	x1, x0, #0x203
  402214:	adrp	x0, 404000 <run+0xecc>
  402218:	add	x4, x0, #0x8d0
  40221c:	mov	w3, #0x71                  	// #113
  402220:	mov	x2, x1
  402224:	adrp	x0, 404000 <run+0xecc>
  402228:	add	x1, x0, #0x220
  40222c:	mov	w0, #0x0                   	// #0
  402230:	bl	4015d0 <log_assert_failed_realm@plt>
  402234:	add	x0, sp, #0x68
  402238:	mov	x1, x0
  40223c:	ldr	x0, [sp, #40]
  402240:	bl	401620 <sd_device_get_subsystem@plt>
  402244:	str	w0, [sp, #60]
  402248:	ldr	w0, [sp, #60]
  40224c:	cmp	w0, #0x0
  402250:	b.ge	40225c <validate_device+0x94>  // b.tcont
  402254:	ldr	w19, [sp, #60]
  402258:	b	402628 <validate_device+0x460>
  40225c:	ldr	x2, [sp, #104]
  402260:	adrp	x0, 404000 <run+0xecc>
  402264:	add	x1, x0, #0x1e8
  402268:	mov	x0, x2
  40226c:	bl	4016d0 <strcmp@plt>
  402270:	cmp	w0, #0x0
  402274:	b.eq	402280 <validate_device+0xb8>  // b.none
  402278:	mov	w19, #0x1                   	// #1
  40227c:	b	402628 <validate_device+0x460>
  402280:	add	x0, sp, #0x60
  402284:	mov	x2, x0
  402288:	adrp	x0, 404000 <run+0xecc>
  40228c:	add	x1, x0, #0x2b8
  402290:	ldr	x0, [sp, #40]
  402294:	bl	401700 <sd_device_get_sysattr_value@plt>
  402298:	str	w0, [sp, #60]
  40229c:	ldr	w0, [sp, #60]
  4022a0:	cmp	w0, #0x0
  4022a4:	b.ge	4022b0 <validate_device+0xe8>  // b.tcont
  4022a8:	ldr	w19, [sp, #60]
  4022ac:	b	402628 <validate_device+0x460>
  4022b0:	ldr	x2, [sp, #96]
  4022b4:	adrp	x0, 404000 <run+0xecc>
  4022b8:	add	x1, x0, #0x2c0
  4022bc:	mov	x0, x2
  4022c0:	bl	4016d0 <strcmp@plt>
  4022c4:	cmp	w0, #0x0
  4022c8:	b.eq	4022d4 <validate_device+0x10c>  // b.none
  4022cc:	mov	w19, #0x1                   	// #1
  4022d0:	b	402628 <validate_device+0x460>
  4022d4:	add	x0, sp, #0x70
  4022d8:	mov	x1, x0
  4022dc:	ldr	x0, [sp, #40]
  4022e0:	bl	401c4c <find_pci_or_platform_parent>
  4022e4:	str	w0, [sp, #60]
  4022e8:	ldr	w0, [sp, #60]
  4022ec:	cmp	w0, #0x0
  4022f0:	b.ge	4022fc <validate_device+0x134>  // b.tcont
  4022f4:	ldr	w19, [sp, #60]
  4022f8:	b	402628 <validate_device+0x460>
  4022fc:	ldr	x0, [sp, #112]
  402300:	add	x1, sp, #0x68
  402304:	bl	401620 <sd_device_get_subsystem@plt>
  402308:	str	w0, [sp, #60]
  40230c:	ldr	w0, [sp, #60]
  402310:	cmp	w0, #0x0
  402314:	b.ge	402320 <validate_device+0x158>  // b.tcont
  402318:	ldr	w19, [sp, #60]
  40231c:	b	402628 <validate_device+0x460>
  402320:	add	x0, sp, #0x58
  402324:	bl	401500 <sd_device_enumerator_new@plt>
  402328:	str	w0, [sp, #60]
  40232c:	ldr	w0, [sp, #60]
  402330:	cmp	w0, #0x0
  402334:	b.ge	402340 <validate_device+0x178>  // b.tcont
  402338:	ldr	w19, [sp, #60]
  40233c:	b	402628 <validate_device+0x460>
  402340:	ldr	x0, [sp, #88]
  402344:	bl	401790 <sd_device_enumerator_allow_uninitialized@plt>
  402348:	str	w0, [sp, #60]
  40234c:	ldr	w0, [sp, #60]
  402350:	cmp	w0, #0x0
  402354:	b.ge	402360 <validate_device+0x198>  // b.tcont
  402358:	ldr	w19, [sp, #60]
  40235c:	b	402628 <validate_device+0x460>
  402360:	ldr	x3, [sp, #88]
  402364:	mov	w2, #0x1                   	// #1
  402368:	adrp	x0, 404000 <run+0xecc>
  40236c:	add	x1, x0, #0x1e8
  402370:	mov	x0, x3
  402374:	bl	401550 <sd_device_enumerator_add_match_subsystem@plt>
  402378:	str	w0, [sp, #60]
  40237c:	ldr	w0, [sp, #60]
  402380:	cmp	w0, #0x0
  402384:	b.ge	402390 <validate_device+0x1c8>  // b.tcont
  402388:	ldr	w19, [sp, #60]
  40238c:	b	402628 <validate_device+0x460>
  402390:	ldr	x0, [sp, #88]
  402394:	bl	401570 <sd_device_enumerator_get_device_first@plt>
  402398:	str	x0, [sp, #152]
  40239c:	b	402618 <validate_device+0x450>
  4023a0:	ldr	x1, [sp, #152]
  4023a4:	ldr	x0, [sp, #40]
  4023a8:	bl	402018 <same_device>
  4023ac:	cmp	w0, #0x0
  4023b0:	b.gt	4025f0 <validate_device+0x428>
  4023b4:	add	x0, sp, #0x60
  4023b8:	mov	x2, x0
  4023bc:	adrp	x0, 404000 <run+0xecc>
  4023c0:	add	x1, x0, #0x2b8
  4023c4:	ldr	x0, [sp, #152]
  4023c8:	bl	401700 <sd_device_get_sysattr_value@plt>
  4023cc:	cmp	w0, #0x0
  4023d0:	b.lt	4025f8 <validate_device+0x430>  // b.tstop
  4023d4:	adrp	x0, 404000 <run+0xecc>
  4023d8:	add	x0, x0, #0x388
  4023dc:	add	x2, sp, #0xa0
  4023e0:	mov	x3, x0
  4023e4:	ldp	x0, x1, [x3]
  4023e8:	stp	x0, x1, [x2]
  4023ec:	ldr	x0, [x3, #16]
  4023f0:	str	x0, [x2, #16]
  4023f4:	ldr	x1, [sp, #96]
  4023f8:	add	x0, sp, #0xa0
  4023fc:	bl	4016a0 <strv_find@plt>
  402400:	cmp	x0, #0x0
  402404:	b.ne	402410 <validate_device+0x248>  // b.any
  402408:	nop
  40240c:	b	4025f0 <validate_device+0x428>
  402410:	add	x0, sp, #0x80
  402414:	mov	x1, x0
  402418:	ldr	x0, [sp, #152]
  40241c:	bl	401c4c <find_pci_or_platform_parent>
  402420:	cmp	w0, #0x0
  402424:	b.lt	402600 <validate_device+0x438>  // b.tstop
  402428:	ldr	x0, [sp, #112]
  40242c:	ldr	x1, [sp, #128]
  402430:	bl	402018 <same_device>
  402434:	cmp	w0, #0x0
  402438:	b.eq	4024f0 <validate_device+0x328>  // b.none
  40243c:	str	xzr, [sp, #136]
  402440:	str	xzr, [sp, #144]
  402444:	add	x0, sp, #0x88
  402448:	mov	x1, x0
  40244c:	ldr	x0, [sp, #40]
  402450:	bl	4015c0 <sd_device_get_sysname@plt>
  402454:	add	x0, sp, #0x90
  402458:	mov	x1, x0
  40245c:	ldr	x0, [sp, #152]
  402460:	bl	4015c0 <sd_device_get_sysname@plt>
  402464:	mov	w0, #0x7                   	// #7
  402468:	str	w0, [sp, #76]
  40246c:	str	wzr, [sp, #80]
  402470:	str	wzr, [sp, #84]
  402474:	ldr	w0, [sp, #84]
  402478:	bl	4017a0 <log_get_max_level_realm@plt>
  40247c:	mov	w1, w0
  402480:	ldr	w0, [sp, #76]
  402484:	and	w0, w0, #0x7
  402488:	cmp	w1, w0
  40248c:	b.lt	4024e0 <validate_device+0x318>  // b.tstop
  402490:	ldr	w0, [sp, #84]
  402494:	lsl	w1, w0, #10
  402498:	ldr	w0, [sp, #76]
  40249c:	orr	w8, w1, w0
  4024a0:	adrp	x0, 404000 <run+0xecc>
  4024a4:	add	x1, x0, #0x203
  4024a8:	ldr	x0, [sp, #136]
  4024ac:	ldr	x2, [sp, #144]
  4024b0:	mov	x7, x2
  4024b4:	mov	x6, x0
  4024b8:	adrp	x0, 404000 <run+0xecc>
  4024bc:	add	x5, x0, #0x2c8
  4024c0:	adrp	x0, 404000 <run+0xecc>
  4024c4:	add	x4, x0, #0x8e0
  4024c8:	mov	w3, #0xba                  	// #186
  4024cc:	mov	x2, x1
  4024d0:	ldr	w1, [sp, #80]
  4024d4:	mov	w0, w8
  4024d8:	bl	4016c0 <log_internal_realm@plt>
  4024dc:	b	4024e8 <validate_device+0x320>
  4024e0:	ldr	w0, [sp, #80]
  4024e4:	cmp	w0, #0x0
  4024e8:	mov	w19, #0x0                   	// #0
  4024ec:	b	402628 <validate_device+0x460>
  4024f0:	ldr	x0, [sp, #128]
  4024f4:	add	x1, sp, #0x78
  4024f8:	bl	401620 <sd_device_get_subsystem@plt>
  4024fc:	cmp	w0, #0x0
  402500:	b.lt	402608 <validate_device+0x440>  // b.tstop
  402504:	ldr	x2, [sp, #120]
  402508:	adrp	x0, 404000 <run+0xecc>
  40250c:	add	x1, x0, #0x1c8
  402510:	mov	x0, x2
  402514:	bl	4016d0 <strcmp@plt>
  402518:	cmp	w0, #0x0
  40251c:	b.ne	40260c <validate_device+0x444>  // b.any
  402520:	ldr	x2, [sp, #104]
  402524:	adrp	x0, 404000 <run+0xecc>
  402528:	add	x1, x0, #0x250
  40252c:	mov	x0, x2
  402530:	bl	4016d0 <strcmp@plt>
  402534:	cmp	w0, #0x0
  402538:	b.ne	40260c <validate_device+0x444>  // b.any
  40253c:	str	xzr, [sp, #136]
  402540:	str	xzr, [sp, #144]
  402544:	add	x0, sp, #0x88
  402548:	mov	x1, x0
  40254c:	ldr	x0, [sp, #40]
  402550:	bl	4015c0 <sd_device_get_sysname@plt>
  402554:	add	x0, sp, #0x90
  402558:	mov	x1, x0
  40255c:	ldr	x0, [sp, #152]
  402560:	bl	4015c0 <sd_device_get_sysname@plt>
  402564:	mov	w0, #0x7                   	// #7
  402568:	str	w0, [sp, #64]
  40256c:	str	wzr, [sp, #68]
  402570:	str	wzr, [sp, #72]
  402574:	ldr	w0, [sp, #72]
  402578:	bl	4017a0 <log_get_max_level_realm@plt>
  40257c:	mov	w1, w0
  402580:	ldr	w0, [sp, #64]
  402584:	and	w0, w0, #0x7
  402588:	cmp	w1, w0
  40258c:	b.lt	4025e0 <validate_device+0x418>  // b.tstop
  402590:	ldr	w0, [sp, #72]
  402594:	lsl	w1, w0, #10
  402598:	ldr	w0, [sp, #64]
  40259c:	orr	w8, w1, w0
  4025a0:	adrp	x0, 404000 <run+0xecc>
  4025a4:	add	x1, x0, #0x203
  4025a8:	ldr	x0, [sp, #136]
  4025ac:	ldr	x2, [sp, #144]
  4025b0:	mov	x7, x2
  4025b4:	mov	x6, x0
  4025b8:	adrp	x0, 404000 <run+0xecc>
  4025bc:	add	x5, x0, #0x328
  4025c0:	adrp	x0, 404000 <run+0xecc>
  4025c4:	add	x4, x0, #0x8e0
  4025c8:	mov	w3, #0xca                  	// #202
  4025cc:	mov	x2, x1
  4025d0:	ldr	w1, [sp, #68]
  4025d4:	mov	w0, w8
  4025d8:	bl	4016c0 <log_internal_realm@plt>
  4025dc:	b	4025e8 <validate_device+0x420>
  4025e0:	ldr	w0, [sp, #68]
  4025e4:	cmp	w0, #0x0
  4025e8:	mov	w19, #0x0                   	// #0
  4025ec:	b	402628 <validate_device+0x460>
  4025f0:	nop
  4025f4:	b	40260c <validate_device+0x444>
  4025f8:	nop
  4025fc:	b	40260c <validate_device+0x444>
  402600:	nop
  402604:	b	40260c <validate_device+0x444>
  402608:	nop
  40260c:	ldr	x0, [sp, #88]
  402610:	bl	401690 <sd_device_enumerator_get_device_next@plt>
  402614:	str	x0, [sp, #152]
  402618:	ldr	x0, [sp, #152]
  40261c:	cmp	x0, #0x0
  402620:	b.ne	4023a0 <validate_device+0x1d8>  // b.any
  402624:	mov	w19, #0x1                   	// #1
  402628:	add	x0, sp, #0x58
  40262c:	bl	4019bc <sd_device_enumerator_unrefp>
  402630:	mov	w1, w19
  402634:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  402638:	add	x0, x0, #0xc10
  40263c:	ldr	x2, [sp, #184]
  402640:	ldr	x0, [x0]
  402644:	eor	x0, x2, x0
  402648:	cmp	x0, #0x0
  40264c:	b.eq	402654 <validate_device+0x48c>  // b.none
  402650:	bl	401660 <__stack_chk_fail@plt>
  402654:	mov	w0, w1
  402658:	ldr	x19, [sp, #16]
  40265c:	ldp	x29, x30, [sp], #192
  402660:	ret

0000000000402664 <get_max_brightness>:
  402664:	sub	sp, sp, #0x90
  402668:	stp	x29, x30, [sp, #32]
  40266c:	add	x29, sp, #0x20
  402670:	str	x0, [sp, #56]
  402674:	str	x1, [sp, #48]
  402678:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  40267c:	add	x0, x0, #0xc10
  402680:	ldr	x1, [x0]
  402684:	str	x1, [sp, #136]
  402688:	mov	x1, #0x0                   	// #0
  40268c:	ldr	x0, [sp, #56]
  402690:	cmp	x0, #0x0
  402694:	cset	w0, eq  // eq = none
  402698:	and	w0, w0, #0xff
  40269c:	and	x0, x0, #0xff
  4026a0:	cmp	x0, #0x0
  4026a4:	b.eq	4026d0 <get_max_brightness+0x6c>  // b.none
  4026a8:	adrp	x0, 404000 <run+0xecc>
  4026ac:	add	x1, x0, #0x203
  4026b0:	adrp	x0, 404000 <run+0xecc>
  4026b4:	add	x4, x0, #0x8f0
  4026b8:	mov	w3, #0xd8                  	// #216
  4026bc:	mov	x2, x1
  4026c0:	adrp	x0, 404000 <run+0xecc>
  4026c4:	add	x1, x0, #0x220
  4026c8:	mov	w0, #0x0                   	// #0
  4026cc:	bl	4015d0 <log_assert_failed_realm@plt>
  4026d0:	ldr	x0, [sp, #48]
  4026d4:	cmp	x0, #0x0
  4026d8:	cset	w0, eq  // eq = none
  4026dc:	and	w0, w0, #0xff
  4026e0:	and	x0, x0, #0xff
  4026e4:	cmp	x0, #0x0
  4026e8:	b.eq	402714 <get_max_brightness+0xb0>  // b.none
  4026ec:	adrp	x0, 404000 <run+0xecc>
  4026f0:	add	x1, x0, #0x203
  4026f4:	adrp	x0, 404000 <run+0xecc>
  4026f8:	add	x4, x0, #0x8f0
  4026fc:	mov	w3, #0xd9                  	// #217
  402700:	mov	x2, x1
  402704:	adrp	x0, 404000 <run+0xecc>
  402708:	add	x1, x0, #0x228
  40270c:	mov	w0, #0x0                   	// #0
  402710:	bl	4015d0 <log_assert_failed_realm@plt>
  402714:	add	x0, sp, #0x60
  402718:	mov	x2, x0
  40271c:	adrp	x0, 404000 <run+0xecc>
  402720:	add	x1, x0, #0x3a0
  402724:	ldr	x0, [sp, #56]
  402728:	bl	401700 <sd_device_get_sysattr_value@plt>
  40272c:	str	w0, [sp, #68]
  402730:	ldr	w0, [sp, #68]
  402734:	cmp	w0, #0x0
  402738:	b.ge	4027fc <get_max_brightness+0x198>  // b.tcont
  40273c:	str	xzr, [sp, #104]
  402740:	ldr	x0, [sp, #56]
  402744:	str	x0, [sp, #128]
  402748:	mov	w0, #0x4                   	// #4
  40274c:	str	w0, [sp, #88]
  402750:	ldr	w0, [sp, #68]
  402754:	str	w0, [sp, #92]
  402758:	ldr	x0, [sp, #128]
  40275c:	cmp	x0, #0x0
  402760:	b.eq	40279c <get_max_brightness+0x138>  // b.none
  402764:	mov	w0, #0x0                   	// #0
  402768:	bl	4017a0 <log_get_max_level_realm@plt>
  40276c:	mov	w1, w0
  402770:	ldr	w0, [sp, #88]
  402774:	cmp	w0, w1
  402778:	cset	w0, le
  40277c:	and	w0, w0, #0xff
  402780:	and	x0, x0, #0xff
  402784:	cmp	x0, #0x0
  402788:	b.eq	40279c <get_max_brightness+0x138>  // b.none
  40278c:	add	x0, sp, #0x68
  402790:	mov	x1, x0
  402794:	ldr	x0, [sp, #128]
  402798:	bl	4015c0 <sd_device_get_sysname@plt>
  40279c:	adrp	x0, 404000 <run+0xecc>
  4027a0:	add	x2, x0, #0x203
  4027a4:	ldr	x0, [sp, #104]
  4027a8:	cmp	x0, #0x0
  4027ac:	b.eq	4027bc <get_max_brightness+0x158>  // b.none
  4027b0:	adrp	x0, 404000 <run+0xecc>
  4027b4:	add	x0, x0, #0x3b0
  4027b8:	b	4027c0 <get_max_brightness+0x15c>
  4027bc:	mov	x0, #0x0                   	// #0
  4027c0:	ldr	x3, [sp, #104]
  4027c4:	adrp	x1, 404000 <run+0xecc>
  4027c8:	add	x1, x1, #0x3b8
  4027cc:	str	x1, [sp, #8]
  4027d0:	str	xzr, [sp]
  4027d4:	mov	x7, #0x0                   	// #0
  4027d8:	mov	x6, x3
  4027dc:	mov	x5, x0
  4027e0:	adrp	x0, 404000 <run+0xecc>
  4027e4:	add	x4, x0, #0x908
  4027e8:	mov	w3, #0xdd                  	// #221
  4027ec:	ldr	w1, [sp, #92]
  4027f0:	ldr	w0, [sp, #88]
  4027f4:	bl	401630 <log_object_internal@plt>
  4027f8:	b	4029bc <get_max_brightness+0x358>
  4027fc:	ldr	x0, [sp, #96]
  402800:	add	x1, sp, #0x40
  402804:	bl	401c00 <safe_atou>
  402808:	str	w0, [sp, #68]
  40280c:	ldr	w0, [sp, #68]
  402810:	cmp	w0, #0x0
  402814:	b.ge	4028e0 <get_max_brightness+0x27c>  // b.tcont
  402818:	str	xzr, [sp, #104]
  40281c:	ldr	x0, [sp, #56]
  402820:	str	x0, [sp, #120]
  402824:	mov	w0, #0x4                   	// #4
  402828:	str	w0, [sp, #80]
  40282c:	ldr	w0, [sp, #68]
  402830:	str	w0, [sp, #84]
  402834:	ldr	x0, [sp, #120]
  402838:	cmp	x0, #0x0
  40283c:	b.eq	402878 <get_max_brightness+0x214>  // b.none
  402840:	mov	w0, #0x0                   	// #0
  402844:	bl	4017a0 <log_get_max_level_realm@plt>
  402848:	mov	w1, w0
  40284c:	ldr	w0, [sp, #80]
  402850:	cmp	w0, w1
  402854:	cset	w0, le
  402858:	and	w0, w0, #0xff
  40285c:	and	x0, x0, #0xff
  402860:	cmp	x0, #0x0
  402864:	b.eq	402878 <get_max_brightness+0x214>  // b.none
  402868:	add	x0, sp, #0x68
  40286c:	mov	x1, x0
  402870:	ldr	x0, [sp, #120]
  402874:	bl	4015c0 <sd_device_get_sysname@plt>
  402878:	adrp	x0, 404000 <run+0xecc>
  40287c:	add	x2, x0, #0x203
  402880:	ldr	x0, [sp, #104]
  402884:	cmp	x0, #0x0
  402888:	b.eq	402898 <get_max_brightness+0x234>  // b.none
  40288c:	adrp	x0, 404000 <run+0xecc>
  402890:	add	x0, x0, #0x3b0
  402894:	b	40289c <get_max_brightness+0x238>
  402898:	mov	x0, #0x0                   	// #0
  40289c:	ldr	x3, [sp, #104]
  4028a0:	ldr	x1, [sp, #96]
  4028a4:	str	x1, [sp, #16]
  4028a8:	adrp	x1, 404000 <run+0xecc>
  4028ac:	add	x1, x1, #0x3e8
  4028b0:	str	x1, [sp, #8]
  4028b4:	str	xzr, [sp]
  4028b8:	mov	x7, #0x0                   	// #0
  4028bc:	mov	x6, x3
  4028c0:	mov	x5, x0
  4028c4:	adrp	x0, 404000 <run+0xecc>
  4028c8:	add	x4, x0, #0x908
  4028cc:	mov	w3, #0xe1                  	// #225
  4028d0:	ldr	w1, [sp, #84]
  4028d4:	ldr	w0, [sp, #80]
  4028d8:	bl	401630 <log_object_internal@plt>
  4028dc:	b	4029bc <get_max_brightness+0x358>
  4028e0:	ldr	w0, [sp, #64]
  4028e4:	cmp	w0, #0x0
  4028e8:	b.ne	4029ac <get_max_brightness+0x348>  // b.any
  4028ec:	str	xzr, [sp, #104]
  4028f0:	ldr	x0, [sp, #56]
  4028f4:	str	x0, [sp, #112]
  4028f8:	mov	w0, #0x4                   	// #4
  4028fc:	str	w0, [sp, #72]
  402900:	str	wzr, [sp, #76]
  402904:	ldr	x0, [sp, #112]
  402908:	cmp	x0, #0x0
  40290c:	b.eq	402948 <get_max_brightness+0x2e4>  // b.none
  402910:	mov	w0, #0x0                   	// #0
  402914:	bl	4017a0 <log_get_max_level_realm@plt>
  402918:	mov	w1, w0
  40291c:	ldr	w0, [sp, #72]
  402920:	cmp	w0, w1
  402924:	cset	w0, le
  402928:	and	w0, w0, #0xff
  40292c:	and	x0, x0, #0xff
  402930:	cmp	x0, #0x0
  402934:	b.eq	402948 <get_max_brightness+0x2e4>  // b.none
  402938:	add	x0, sp, #0x68
  40293c:	mov	x1, x0
  402940:	ldr	x0, [sp, #112]
  402944:	bl	4015c0 <sd_device_get_sysname@plt>
  402948:	adrp	x0, 404000 <run+0xecc>
  40294c:	add	x2, x0, #0x203
  402950:	ldr	x0, [sp, #104]
  402954:	cmp	x0, #0x0
  402958:	b.eq	402968 <get_max_brightness+0x304>  // b.none
  40295c:	adrp	x0, 404000 <run+0xecc>
  402960:	add	x0, x0, #0x3b0
  402964:	b	40296c <get_max_brightness+0x308>
  402968:	mov	x0, #0x0                   	// #0
  40296c:	ldr	x3, [sp, #104]
  402970:	adrp	x1, 404000 <run+0xecc>
  402974:	add	x1, x1, #0x418
  402978:	str	x1, [sp, #8]
  40297c:	str	xzr, [sp]
  402980:	mov	x7, #0x0                   	// #0
  402984:	mov	x6, x3
  402988:	mov	x5, x0
  40298c:	adrp	x0, 404000 <run+0xecc>
  402990:	add	x4, x0, #0x908
  402994:	mov	w3, #0xe4                  	// #228
  402998:	ldr	w1, [sp, #76]
  40299c:	ldr	w0, [sp, #72]
  4029a0:	bl	401630 <log_object_internal@plt>
  4029a4:	mov	w0, #0xffffffea            	// #-22
  4029a8:	b	4029bc <get_max_brightness+0x358>
  4029ac:	ldr	w1, [sp, #64]
  4029b0:	ldr	x0, [sp, #48]
  4029b4:	str	w1, [x0]
  4029b8:	mov	w0, #0x0                   	// #0
  4029bc:	mov	w1, w0
  4029c0:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  4029c4:	add	x0, x0, #0xc10
  4029c8:	ldr	x2, [sp, #136]
  4029cc:	ldr	x0, [x0]
  4029d0:	eor	x0, x2, x0
  4029d4:	cmp	x0, #0x0
  4029d8:	b.eq	4029e0 <get_max_brightness+0x37c>  // b.none
  4029dc:	bl	401660 <__stack_chk_fail@plt>
  4029e0:	mov	w0, w1
  4029e4:	ldp	x29, x30, [sp, #32]
  4029e8:	add	sp, sp, #0x90
  4029ec:	ret

00000000004029f0 <clamp_brightness>:
  4029f0:	sub	sp, sp, #0xe0
  4029f4:	stp	x29, x30, [sp, #48]
  4029f8:	add	x29, sp, #0x30
  4029fc:	str	x0, [sp, #88]
  402a00:	str	x1, [sp, #80]
  402a04:	str	w2, [sp, #76]
  402a08:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  402a0c:	add	x0, x0, #0xc10
  402a10:	ldr	x1, [x0]
  402a14:	str	x1, [sp, #216]
  402a18:	mov	x1, #0x0                   	// #0
  402a1c:	ldr	x0, [sp, #80]
  402a20:	cmp	x0, #0x0
  402a24:	cset	w0, eq  // eq = none
  402a28:	and	w0, w0, #0xff
  402a2c:	and	x0, x0, #0xff
  402a30:	cmp	x0, #0x0
  402a34:	b.eq	402a60 <clamp_brightness+0x70>  // b.none
  402a38:	adrp	x0, 404000 <run+0xecc>
  402a3c:	add	x1, x0, #0x203
  402a40:	adrp	x0, 404000 <run+0xecc>
  402a44:	add	x4, x0, #0x920
  402a48:	mov	w3, #0xf6                  	// #246
  402a4c:	mov	x2, x1
  402a50:	adrp	x0, 404000 <run+0xecc>
  402a54:	add	x1, x0, #0x448
  402a58:	mov	w0, #0x0                   	// #0
  402a5c:	bl	4015d0 <log_assert_failed_realm@plt>
  402a60:	ldr	x0, [sp, #80]
  402a64:	ldr	x0, [x0]
  402a68:	cmp	x0, #0x0
  402a6c:	cset	w0, eq  // eq = none
  402a70:	and	w0, w0, #0xff
  402a74:	and	x0, x0, #0xff
  402a78:	cmp	x0, #0x0
  402a7c:	b.eq	402aa8 <clamp_brightness+0xb8>  // b.none
  402a80:	adrp	x0, 404000 <run+0xecc>
  402a84:	add	x1, x0, #0x203
  402a88:	adrp	x0, 404000 <run+0xecc>
  402a8c:	add	x4, x0, #0x920
  402a90:	mov	w3, #0xf7                  	// #247
  402a94:	mov	x2, x1
  402a98:	adrp	x0, 404000 <run+0xecc>
  402a9c:	add	x1, x0, #0x450
  402aa0:	mov	w0, #0x0                   	// #0
  402aa4:	bl	4015d0 <log_assert_failed_realm@plt>
  402aa8:	ldr	x0, [sp, #80]
  402aac:	ldr	x0, [x0]
  402ab0:	add	x1, sp, #0x6c
  402ab4:	bl	401c00 <safe_atou>
  402ab8:	str	w0, [sp, #116]
  402abc:	ldr	w0, [sp, #116]
  402ac0:	cmp	w0, #0x0
  402ac4:	b.ge	402b94 <clamp_brightness+0x1a4>  // b.tcont
  402ac8:	str	xzr, [sp, #184]
  402acc:	ldr	x0, [sp, #88]
  402ad0:	str	x0, [sp, #208]
  402ad4:	mov	w0, #0x4                   	// #4
  402ad8:	str	w0, [sp, #160]
  402adc:	ldr	w0, [sp, #116]
  402ae0:	str	w0, [sp, #164]
  402ae4:	ldr	x0, [sp, #208]
  402ae8:	cmp	x0, #0x0
  402aec:	b.eq	402b28 <clamp_brightness+0x138>  // b.none
  402af0:	mov	w0, #0x0                   	// #0
  402af4:	bl	4017a0 <log_get_max_level_realm@plt>
  402af8:	mov	w1, w0
  402afc:	ldr	w0, [sp, #160]
  402b00:	cmp	w0, w1
  402b04:	cset	w0, le
  402b08:	and	w0, w0, #0xff
  402b0c:	and	x0, x0, #0xff
  402b10:	cmp	x0, #0x0
  402b14:	b.eq	402b28 <clamp_brightness+0x138>  // b.none
  402b18:	add	x0, sp, #0xb8
  402b1c:	mov	x1, x0
  402b20:	ldr	x0, [sp, #208]
  402b24:	bl	4015c0 <sd_device_get_sysname@plt>
  402b28:	adrp	x0, 404000 <run+0xecc>
  402b2c:	add	x2, x0, #0x203
  402b30:	ldr	x0, [sp, #184]
  402b34:	cmp	x0, #0x0
  402b38:	b.eq	402b48 <clamp_brightness+0x158>  // b.none
  402b3c:	adrp	x0, 404000 <run+0xecc>
  402b40:	add	x0, x0, #0x3b0
  402b44:	b	402b4c <clamp_brightness+0x15c>
  402b48:	mov	x0, #0x0                   	// #0
  402b4c:	ldr	x3, [sp, #184]
  402b50:	ldr	x1, [sp, #80]
  402b54:	ldr	x1, [x1]
  402b58:	str	x1, [sp, #16]
  402b5c:	adrp	x1, 404000 <run+0xecc>
  402b60:	add	x1, x1, #0x458
  402b64:	str	x1, [sp, #8]
  402b68:	str	xzr, [sp]
  402b6c:	mov	x7, #0x0                   	// #0
  402b70:	mov	x6, x3
  402b74:	mov	x5, x0
  402b78:	adrp	x0, 404000 <run+0xecc>
  402b7c:	add	x4, x0, #0x938
  402b80:	mov	w3, #0xfb                  	// #251
  402b84:	ldr	w1, [sp, #164]
  402b88:	ldr	w0, [sp, #160]
  402b8c:	bl	401630 <log_object_internal@plt>
  402b90:	b	402e8c <clamp_brightness+0x49c>
  402b94:	add	x0, sp, #0xa8
  402b98:	mov	x1, x0
  402b9c:	ldr	x0, [sp, #88]
  402ba0:	bl	401620 <sd_device_get_subsystem@plt>
  402ba4:	str	w0, [sp, #116]
  402ba8:	ldr	w0, [sp, #116]
  402bac:	cmp	w0, #0x0
  402bb0:	b.ge	402c74 <clamp_brightness+0x284>  // b.tcont
  402bb4:	str	xzr, [sp, #184]
  402bb8:	ldr	x0, [sp, #88]
  402bbc:	str	x0, [sp, #200]
  402bc0:	mov	w0, #0x4                   	// #4
  402bc4:	str	w0, [sp, #152]
  402bc8:	ldr	w0, [sp, #116]
  402bcc:	str	w0, [sp, #156]
  402bd0:	ldr	x0, [sp, #200]
  402bd4:	cmp	x0, #0x0
  402bd8:	b.eq	402c14 <clamp_brightness+0x224>  // b.none
  402bdc:	mov	w0, #0x0                   	// #0
  402be0:	bl	4017a0 <log_get_max_level_realm@plt>
  402be4:	mov	w1, w0
  402be8:	ldr	w0, [sp, #152]
  402bec:	cmp	w0, w1
  402bf0:	cset	w0, le
  402bf4:	and	w0, w0, #0xff
  402bf8:	and	x0, x0, #0xff
  402bfc:	cmp	x0, #0x0
  402c00:	b.eq	402c14 <clamp_brightness+0x224>  // b.none
  402c04:	add	x0, sp, #0xb8
  402c08:	mov	x1, x0
  402c0c:	ldr	x0, [sp, #200]
  402c10:	bl	4015c0 <sd_device_get_sysname@plt>
  402c14:	adrp	x0, 404000 <run+0xecc>
  402c18:	add	x2, x0, #0x203
  402c1c:	ldr	x0, [sp, #184]
  402c20:	cmp	x0, #0x0
  402c24:	b.eq	402c34 <clamp_brightness+0x244>  // b.none
  402c28:	adrp	x0, 404000 <run+0xecc>
  402c2c:	add	x0, x0, #0x3b0
  402c30:	b	402c38 <clamp_brightness+0x248>
  402c34:	mov	x0, #0x0                   	// #0
  402c38:	ldr	x3, [sp, #184]
  402c3c:	adrp	x1, 404000 <run+0xecc>
  402c40:	add	x1, x1, #0x480
  402c44:	str	x1, [sp, #8]
  402c48:	str	xzr, [sp]
  402c4c:	mov	x7, #0x0                   	// #0
  402c50:	mov	x6, x3
  402c54:	mov	x5, x0
  402c58:	adrp	x0, 404000 <run+0xecc>
  402c5c:	add	x4, x0, #0x938
  402c60:	mov	w3, #0xff                  	// #255
  402c64:	ldr	w1, [sp, #156]
  402c68:	ldr	w0, [sp, #152]
  402c6c:	bl	401630 <log_object_internal@plt>
  402c70:	b	402e8c <clamp_brightness+0x49c>
  402c74:	ldr	x2, [sp, #168]
  402c78:	adrp	x0, 404000 <run+0xecc>
  402c7c:	add	x1, x0, #0x1e8
  402c80:	mov	x0, x2
  402c84:	bl	4016d0 <strcmp@plt>
  402c88:	cmp	w0, #0x0
  402c8c:	b.ne	402cd0 <clamp_brightness+0x2e0>  // b.any
  402c90:	mov	w0, #0x1                   	// #1
  402c94:	str	w0, [sp, #120]
  402c98:	ldr	w1, [sp, #76]
  402c9c:	mov	w0, #0xcccd                	// #52429
  402ca0:	movk	w0, #0xcccc, lsl #16
  402ca4:	umull	x0, w1, w0
  402ca8:	lsr	x0, x0, #32
  402cac:	lsr	w0, w0, #4
  402cb0:	str	w0, [sp, #124]
  402cb4:	ldr	w0, [sp, #120]
  402cb8:	ldr	w2, [sp, #124]
  402cbc:	ldr	w1, [sp, #124]
  402cc0:	cmp	w2, w0
  402cc4:	csel	w0, w1, w0, cs  // cs = hs, nlast
  402cc8:	str	w0, [sp, #112]
  402ccc:	b	402cd4 <clamp_brightness+0x2e4>
  402cd0:	str	wzr, [sp, #112]
  402cd4:	ldr	w0, [sp, #108]
  402cd8:	str	w0, [sp, #128]
  402cdc:	ldr	w0, [sp, #112]
  402ce0:	str	w0, [sp, #132]
  402ce4:	ldr	w0, [sp, #76]
  402ce8:	str	w0, [sp, #136]
  402cec:	ldr	w1, [sp, #128]
  402cf0:	ldr	w0, [sp, #136]
  402cf4:	cmp	w1, w0
  402cf8:	b.hi	402d14 <clamp_brightness+0x324>  // b.pmore
  402cfc:	ldr	w0, [sp, #132]
  402d00:	ldr	w2, [sp, #128]
  402d04:	ldr	w1, [sp, #128]
  402d08:	cmp	w2, w0
  402d0c:	csel	w0, w1, w0, cs  // cs = hs, nlast
  402d10:	b	402d18 <clamp_brightness+0x328>
  402d14:	ldr	w0, [sp, #136]
  402d18:	str	w0, [sp, #140]
  402d1c:	ldr	w0, [sp, #108]
  402d20:	ldr	w1, [sp, #140]
  402d24:	cmp	w1, w0
  402d28:	b.eq	402e88 <clamp_brightness+0x498>  // b.none
  402d2c:	add	x3, sp, #0xb0
  402d30:	ldr	w2, [sp, #140]
  402d34:	adrp	x0, 404000 <run+0xecc>
  402d38:	add	x1, x0, #0x4a8
  402d3c:	mov	x0, x3
  402d40:	bl	401710 <asprintf@plt>
  402d44:	str	w0, [sp, #116]
  402d48:	ldr	w0, [sp, #116]
  402d4c:	cmp	w0, #0x0
  402d50:	b.ge	402d74 <clamp_brightness+0x384>  // b.tcont
  402d54:	adrp	x0, 404000 <run+0xecc>
  402d58:	add	x1, x0, #0x203
  402d5c:	adrp	x0, 404000 <run+0xecc>
  402d60:	add	x3, x0, #0x938
  402d64:	mov	w2, #0x10c                 	// #268
  402d68:	mov	w0, #0x0                   	// #0
  402d6c:	bl	401780 <log_oom_internal@plt>
  402d70:	b	402e8c <clamp_brightness+0x49c>
  402d74:	str	xzr, [sp, #184]
  402d78:	ldr	x0, [sp, #88]
  402d7c:	str	x0, [sp, #192]
  402d80:	mov	w0, #0x6                   	// #6
  402d84:	str	w0, [sp, #144]
  402d88:	str	wzr, [sp, #148]
  402d8c:	ldr	x0, [sp, #192]
  402d90:	cmp	x0, #0x0
  402d94:	b.eq	402dd0 <clamp_brightness+0x3e0>  // b.none
  402d98:	mov	w0, #0x0                   	// #0
  402d9c:	bl	4017a0 <log_get_max_level_realm@plt>
  402da0:	mov	w1, w0
  402da4:	ldr	w0, [sp, #144]
  402da8:	cmp	w0, w1
  402dac:	cset	w0, le
  402db0:	and	w0, w0, #0xff
  402db4:	and	x0, x0, #0xff
  402db8:	cmp	x0, #0x0
  402dbc:	b.eq	402dd0 <clamp_brightness+0x3e0>  // b.none
  402dc0:	add	x0, sp, #0xb8
  402dc4:	mov	x1, x0
  402dc8:	ldr	x0, [sp, #192]
  402dcc:	bl	4015c0 <sd_device_get_sysname@plt>
  402dd0:	adrp	x0, 404000 <run+0xecc>
  402dd4:	add	x8, x0, #0x203
  402dd8:	ldr	x0, [sp, #184]
  402ddc:	cmp	x0, #0x0
  402de0:	b.eq	402df0 <clamp_brightness+0x400>  // b.none
  402de4:	adrp	x0, 404000 <run+0xecc>
  402de8:	add	x1, x0, #0x3b0
  402dec:	b	402df4 <clamp_brightness+0x404>
  402df0:	mov	x1, #0x0                   	// #0
  402df4:	ldr	x4, [sp, #184]
  402df8:	ldr	x0, [sp, #80]
  402dfc:	ldr	x2, [x0]
  402e00:	ldr	w0, [sp, #108]
  402e04:	ldr	w3, [sp, #140]
  402e08:	cmp	w3, w0
  402e0c:	b.ls	402e1c <clamp_brightness+0x42c>  // b.plast
  402e10:	adrp	x0, 404000 <run+0xecc>
  402e14:	add	x0, x0, #0x4b0
  402e18:	b	402e24 <clamp_brightness+0x434>
  402e1c:	adrp	x0, 404000 <run+0xecc>
  402e20:	add	x0, x0, #0x4c8
  402e24:	ldr	x3, [sp, #176]
  402e28:	str	x3, [sp, #32]
  402e2c:	str	x0, [sp, #24]
  402e30:	str	x2, [sp, #16]
  402e34:	adrp	x0, 404000 <run+0xecc>
  402e38:	add	x0, x0, #0x4e0
  402e3c:	str	x0, [sp, #8]
  402e40:	str	xzr, [sp]
  402e44:	mov	x7, #0x0                   	// #0
  402e48:	mov	x6, x4
  402e4c:	mov	x5, x1
  402e50:	adrp	x0, 404000 <run+0xecc>
  402e54:	add	x4, x0, #0x938
  402e58:	mov	w3, #0x10e                 	// #270
  402e5c:	mov	x2, x8
  402e60:	ldr	w1, [sp, #148]
  402e64:	ldr	w0, [sp, #144]
  402e68:	bl	401630 <log_object_internal@plt>
  402e6c:	ldr	x0, [sp, #80]
  402e70:	ldr	x0, [x0]
  402e74:	bl	401730 <free@plt>
  402e78:	ldr	x1, [sp, #176]
  402e7c:	ldr	x0, [sp, #80]
  402e80:	str	x1, [x0]
  402e84:	str	xzr, [sp, #176]
  402e88:	mov	w0, #0x0                   	// #0
  402e8c:	mov	w1, w0
  402e90:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  402e94:	add	x0, x0, #0xc10
  402e98:	ldr	x2, [sp, #216]
  402e9c:	ldr	x0, [x0]
  402ea0:	eor	x0, x2, x0
  402ea4:	cmp	x0, #0x0
  402ea8:	b.eq	402eb0 <clamp_brightness+0x4c0>  // b.none
  402eac:	bl	401660 <__stack_chk_fail@plt>
  402eb0:	mov	w0, w1
  402eb4:	ldp	x29, x30, [sp, #48]
  402eb8:	add	sp, sp, #0xe0
  402ebc:	ret

0000000000402ec0 <shall_clamp>:
  402ec0:	sub	sp, sp, #0x70
  402ec4:	stp	x29, x30, [sp, #16]
  402ec8:	add	x29, sp, #0x10
  402ecc:	str	x0, [sp, #40]
  402ed0:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  402ed4:	add	x0, x0, #0xc10
  402ed8:	ldr	x1, [x0]
  402edc:	str	x1, [sp, #104]
  402ee0:	mov	x1, #0x0                   	// #0
  402ee4:	ldr	x0, [sp, #40]
  402ee8:	cmp	x0, #0x0
  402eec:	cset	w0, eq  // eq = none
  402ef0:	and	w0, w0, #0xff
  402ef4:	and	x0, x0, #0xff
  402ef8:	cmp	x0, #0x0
  402efc:	b.eq	402f28 <shall_clamp+0x68>  // b.none
  402f00:	adrp	x0, 404000 <run+0xecc>
  402f04:	add	x1, x0, #0x203
  402f08:	adrp	x0, 404000 <run+0xecc>
  402f0c:	add	x4, x0, #0x950
  402f10:	mov	w3, #0x11d                 	// #285
  402f14:	mov	x2, x1
  402f18:	adrp	x0, 404000 <run+0xecc>
  402f1c:	add	x1, x0, #0x500
  402f20:	mov	w0, #0x0                   	// #0
  402f24:	bl	4015d0 <log_assert_failed_realm@plt>
  402f28:	add	x0, sp, #0x48
  402f2c:	mov	x2, x0
  402f30:	adrp	x0, 404000 <run+0xecc>
  402f34:	add	x1, x0, #0x508
  402f38:	ldr	x0, [sp, #40]
  402f3c:	bl	4014a0 <sd_device_get_property_value@plt>
  402f40:	str	w0, [sp, #52]
  402f44:	ldr	w0, [sp, #52]
  402f48:	cmp	w0, #0x0
  402f4c:	b.ge	403014 <shall_clamp+0x154>  // b.tcont
  402f50:	str	xzr, [sp, #80]
  402f54:	ldr	x0, [sp, #40]
  402f58:	str	x0, [sp, #96]
  402f5c:	mov	w0, #0x7                   	// #7
  402f60:	str	w0, [sp, #64]
  402f64:	ldr	w0, [sp, #52]
  402f68:	str	w0, [sp, #68]
  402f6c:	ldr	x0, [sp, #96]
  402f70:	cmp	x0, #0x0
  402f74:	b.eq	402fb0 <shall_clamp+0xf0>  // b.none
  402f78:	mov	w0, #0x0                   	// #0
  402f7c:	bl	4017a0 <log_get_max_level_realm@plt>
  402f80:	mov	w1, w0
  402f84:	ldr	w0, [sp, #64]
  402f88:	cmp	w0, w1
  402f8c:	cset	w0, le
  402f90:	and	w0, w0, #0xff
  402f94:	and	x0, x0, #0xff
  402f98:	cmp	x0, #0x0
  402f9c:	b.eq	402fb0 <shall_clamp+0xf0>  // b.none
  402fa0:	add	x0, sp, #0x50
  402fa4:	mov	x1, x0
  402fa8:	ldr	x0, [sp, #96]
  402fac:	bl	4015c0 <sd_device_get_sysname@plt>
  402fb0:	adrp	x0, 404000 <run+0xecc>
  402fb4:	add	x2, x0, #0x203
  402fb8:	ldr	x0, [sp, #80]
  402fbc:	cmp	x0, #0x0
  402fc0:	b.eq	402fd0 <shall_clamp+0x110>  // b.none
  402fc4:	adrp	x0, 404000 <run+0xecc>
  402fc8:	add	x0, x0, #0x3b0
  402fcc:	b	402fd4 <shall_clamp+0x114>
  402fd0:	mov	x0, #0x0                   	// #0
  402fd4:	ldr	x3, [sp, #80]
  402fd8:	adrp	x1, 404000 <run+0xecc>
  402fdc:	add	x1, x1, #0x520
  402fe0:	str	x1, [sp, #8]
  402fe4:	str	xzr, [sp]
  402fe8:	mov	x7, #0x0                   	// #0
  402fec:	mov	x6, x3
  402ff0:	mov	x5, x0
  402ff4:	adrp	x0, 404000 <run+0xecc>
  402ff8:	add	x4, x0, #0x960
  402ffc:	mov	w3, #0x121                 	// #289
  403000:	ldr	w1, [sp, #68]
  403004:	ldr	w0, [sp, #64]
  403008:	bl	401630 <log_object_internal@plt>
  40300c:	mov	w0, #0x1                   	// #1
  403010:	b	403100 <shall_clamp+0x240>
  403014:	ldr	x0, [sp, #72]
  403018:	bl	4014f0 <parse_boolean@plt>
  40301c:	str	w0, [sp, #52]
  403020:	ldr	w0, [sp, #52]
  403024:	cmp	w0, #0x0
  403028:	b.ge	4030f0 <shall_clamp+0x230>  // b.tcont
  40302c:	str	xzr, [sp, #80]
  403030:	ldr	x0, [sp, #40]
  403034:	str	x0, [sp, #88]
  403038:	mov	w0, #0x7                   	// #7
  40303c:	str	w0, [sp, #56]
  403040:	ldr	w0, [sp, #52]
  403044:	str	w0, [sp, #60]
  403048:	ldr	x0, [sp, #88]
  40304c:	cmp	x0, #0x0
  403050:	b.eq	40308c <shall_clamp+0x1cc>  // b.none
  403054:	mov	w0, #0x0                   	// #0
  403058:	bl	4017a0 <log_get_max_level_realm@plt>
  40305c:	mov	w1, w0
  403060:	ldr	w0, [sp, #56]
  403064:	cmp	w0, w1
  403068:	cset	w0, le
  40306c:	and	w0, w0, #0xff
  403070:	and	x0, x0, #0xff
  403074:	cmp	x0, #0x0
  403078:	b.eq	40308c <shall_clamp+0x1cc>  // b.none
  40307c:	add	x0, sp, #0x50
  403080:	mov	x1, x0
  403084:	ldr	x0, [sp, #88]
  403088:	bl	4015c0 <sd_device_get_sysname@plt>
  40308c:	adrp	x0, 404000 <run+0xecc>
  403090:	add	x2, x0, #0x203
  403094:	ldr	x0, [sp, #80]
  403098:	cmp	x0, #0x0
  40309c:	b.eq	4030ac <shall_clamp+0x1ec>  // b.none
  4030a0:	adrp	x0, 404000 <run+0xecc>
  4030a4:	add	x0, x0, #0x3b0
  4030a8:	b	4030b0 <shall_clamp+0x1f0>
  4030ac:	mov	x0, #0x0                   	// #0
  4030b0:	ldr	x3, [sp, #80]
  4030b4:	adrp	x1, 404000 <run+0xecc>
  4030b8:	add	x1, x1, #0x558
  4030bc:	str	x1, [sp, #8]
  4030c0:	str	xzr, [sp]
  4030c4:	mov	x7, #0x0                   	// #0
  4030c8:	mov	x6, x3
  4030cc:	mov	x5, x0
  4030d0:	adrp	x0, 404000 <run+0xecc>
  4030d4:	add	x4, x0, #0x960
  4030d8:	mov	w3, #0x127                 	// #295
  4030dc:	ldr	w1, [sp, #60]
  4030e0:	ldr	w0, [sp, #56]
  4030e4:	bl	401630 <log_object_internal@plt>
  4030e8:	mov	w0, #0x1                   	// #1
  4030ec:	b	403100 <shall_clamp+0x240>
  4030f0:	ldr	w0, [sp, #52]
  4030f4:	cmp	w0, #0x0
  4030f8:	cset	w0, ne  // ne = any
  4030fc:	and	w0, w0, #0xff
  403100:	mov	w1, w0
  403104:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  403108:	add	x0, x0, #0xc10
  40310c:	ldr	x2, [sp, #104]
  403110:	ldr	x0, [x0]
  403114:	eor	x0, x2, x0
  403118:	cmp	x0, #0x0
  40311c:	b.eq	403124 <shall_clamp+0x264>  // b.none
  403120:	bl	401660 <__stack_chk_fail@plt>
  403124:	mov	w0, w1
  403128:	ldp	x29, x30, [sp, #16]
  40312c:	add	sp, sp, #0x70
  403130:	ret

0000000000403134 <run>:
  403134:	stp	x29, x30, [sp, #-464]!
  403138:	mov	x29, sp
  40313c:	stp	x19, x20, [sp, #16]
  403140:	sub	sp, sp, #0x20
  403144:	str	w0, [x29, #44]
  403148:	str	x1, [x29, #32]
  40314c:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  403150:	add	x0, x0, #0xc10
  403154:	ldr	x1, [x0]
  403158:	str	x1, [x29, #456]
  40315c:	mov	x1, #0x0                   	// #0
  403160:	str	xzr, [x29, #184]
  403164:	str	xzr, [x29, #192]
  403168:	str	xzr, [x29, #200]
  40316c:	str	xzr, [x29, #208]
  403170:	ldr	w0, [x29, #44]
  403174:	cmp	w0, #0x3
  403178:	b.eq	4031f8 <run+0xc4>  // b.none
  40317c:	mov	w0, #0x3                   	// #3
  403180:	str	w0, [x29, #172]
  403184:	str	wzr, [x29, #176]
  403188:	str	wzr, [x29, #180]
  40318c:	ldr	w0, [x29, #180]
  403190:	bl	4017a0 <log_get_max_level_realm@plt>
  403194:	mov	w1, w0
  403198:	ldr	w0, [x29, #172]
  40319c:	and	w0, w0, #0x7
  4031a0:	cmp	w1, w0
  4031a4:	b.lt	4031e8 <run+0xb4>  // b.tstop
  4031a8:	ldr	w0, [x29, #180]
  4031ac:	lsl	w1, w0, #10
  4031b0:	ldr	w0, [x29, #172]
  4031b4:	orr	w6, w1, w0
  4031b8:	adrp	x0, 404000 <run+0xecc>
  4031bc:	add	x1, x0, #0x203
  4031c0:	adrp	x0, 404000 <run+0xecc>
  4031c4:	add	x5, x0, #0x598
  4031c8:	adrp	x0, 404000 <run+0xecc>
  4031cc:	add	x4, x0, #0x970
  4031d0:	mov	w3, #0x136                 	// #310
  4031d4:	mov	x2, x1
  4031d8:	ldr	w1, [x29, #176]
  4031dc:	mov	w0, w6
  4031e0:	bl	4016c0 <log_internal_realm@plt>
  4031e4:	b	4031f0 <run+0xbc>
  4031e8:	ldr	w0, [x29, #176]
  4031ec:	cmp	w0, #0x0
  4031f0:	mov	w19, #0xffffffea            	// #-22
  4031f4:	b	404054 <run+0xf20>
  4031f8:	bl	4015b0 <log_setup_service@plt>
  4031fc:	mov	w0, #0x12                  	// #18
  403200:	bl	4015e0 <umask@plt>
  403204:	mov	w1, #0x1ed                 	// #493
  403208:	adrp	x0, 404000 <run+0xecc>
  40320c:	add	x0, x0, #0x5c0
  403210:	bl	401760 <mkdir_p@plt>
  403214:	str	w0, [x29, #64]
  403218:	ldr	w0, [x29, #64]
  40321c:	cmp	w0, #0x0
  403220:	b.ge	4032b0 <run+0x17c>  // b.tcont
  403224:	mov	w0, #0x3                   	// #3
  403228:	str	w0, [x29, #160]
  40322c:	ldr	w0, [x29, #64]
  403230:	str	w0, [x29, #164]
  403234:	str	wzr, [x29, #168]
  403238:	ldr	w0, [x29, #168]
  40323c:	bl	4017a0 <log_get_max_level_realm@plt>
  403240:	mov	w1, w0
  403244:	ldr	w0, [x29, #160]
  403248:	and	w0, w0, #0x7
  40324c:	cmp	w1, w0
  403250:	b.lt	403298 <run+0x164>  // b.tstop
  403254:	ldr	w0, [x29, #168]
  403258:	lsl	w1, w0, #10
  40325c:	ldr	w0, [x29, #160]
  403260:	orr	w6, w1, w0
  403264:	adrp	x0, 404000 <run+0xecc>
  403268:	add	x1, x0, #0x203
  40326c:	adrp	x0, 404000 <run+0xecc>
  403270:	add	x5, x0, #0x5e0
  403274:	adrp	x0, 404000 <run+0xecc>
  403278:	add	x4, x0, #0x970
  40327c:	mov	w3, #0x140                 	// #320
  403280:	mov	x2, x1
  403284:	ldr	w1, [x29, #164]
  403288:	mov	w0, w6
  40328c:	bl	4016c0 <log_internal_realm@plt>
  403290:	mov	w19, w0
  403294:	b	404054 <run+0xf20>
  403298:	ldr	w0, [x29, #164]
  40329c:	cmp	w0, #0x0
  4032a0:	cneg	w0, w0, lt  // lt = tstop
  4032a4:	and	w0, w0, #0xff
  4032a8:	neg	w19, w0
  4032ac:	b	404054 <run+0xf20>
  4032b0:	ldr	x0, [x29, #32]
  4032b4:	add	x0, x0, #0x10
  4032b8:	ldr	x0, [x0]
  4032bc:	mov	w1, #0x3a                  	// #58
  4032c0:	bl	4016f0 <strchr@plt>
  4032c4:	str	x0, [x29, #304]
  4032c8:	ldr	x0, [x29, #304]
  4032cc:	cmp	x0, #0x0
  4032d0:	b.ne	403350 <run+0x21c>  // b.any
  4032d4:	mov	w0, #0x3                   	// #3
  4032d8:	str	w0, [x29, #148]
  4032dc:	str	wzr, [x29, #152]
  4032e0:	str	wzr, [x29, #156]
  4032e4:	ldr	w0, [x29, #156]
  4032e8:	bl	4017a0 <log_get_max_level_realm@plt>
  4032ec:	mov	w1, w0
  4032f0:	ldr	w0, [x29, #148]
  4032f4:	and	w0, w0, #0x7
  4032f8:	cmp	w1, w0
  4032fc:	b.lt	403340 <run+0x20c>  // b.tstop
  403300:	ldr	w0, [x29, #156]
  403304:	lsl	w1, w0, #10
  403308:	ldr	w0, [x29, #148]
  40330c:	orr	w6, w1, w0
  403310:	adrp	x0, 404000 <run+0xecc>
  403314:	add	x1, x0, #0x203
  403318:	adrp	x0, 404000 <run+0xecc>
  40331c:	add	x5, x0, #0x628
  403320:	adrp	x0, 404000 <run+0xecc>
  403324:	add	x4, x0, #0x970
  403328:	mov	w3, #0x144                 	// #324
  40332c:	mov	x2, x1
  403330:	ldr	w1, [x29, #152]
  403334:	mov	w0, w6
  403338:	bl	4016c0 <log_internal_realm@plt>
  40333c:	b	403348 <run+0x214>
  403340:	ldr	w0, [x29, #152]
  403344:	cmp	w0, #0x0
  403348:	mov	w19, #0xffffffea            	// #-22
  40334c:	b	404054 <run+0xf20>
  403350:	ldr	x0, [x29, #32]
  403354:	ldr	x0, [x0, #16]
  403358:	str	x0, [x29, #312]
  40335c:	ldr	x0, [x29, #32]
  403360:	add	x0, x0, #0x10
  403364:	ldr	x0, [x0]
  403368:	ldr	x1, [x29, #304]
  40336c:	sub	x0, x1, x0
  403370:	mov	x1, x0
  403374:	ldr	x0, [x29, #312]
  403378:	bl	401560 <strnlen@plt>
  40337c:	str	x0, [x29, #320]
  403380:	ldr	x0, [x29, #320]
  403384:	add	x0, x0, #0x1
  403388:	add	x0, x0, #0xf
  40338c:	lsr	x0, x0, #4
  403390:	lsl	x0, x0, #4
  403394:	sub	sp, sp, x0
  403398:	add	x0, sp, #0x20
  40339c:	add	x0, x0, #0xf
  4033a0:	lsr	x0, x0, #4
  4033a4:	lsl	x0, x0, #4
  4033a8:	str	x0, [x29, #328]
  4033ac:	ldr	x1, [x29, #328]
  4033b0:	ldr	x0, [x29, #320]
  4033b4:	add	x0, x1, x0
  4033b8:	strb	wzr, [x0]
  4033bc:	ldr	x2, [x29, #320]
  4033c0:	ldr	x1, [x29, #312]
  4033c4:	ldr	x0, [x29, #328]
  4033c8:	bl	4015a0 <memcpy@plt>
  4033cc:	str	x0, [x29, #336]
  4033d0:	ldr	x0, [x29, #304]
  4033d4:	add	x0, x0, #0x1
  4033d8:	str	x0, [x29, #304]
  4033dc:	adrp	x0, 404000 <run+0xecc>
  4033e0:	add	x0, x0, #0x858
  4033e4:	add	x2, x29, #0x198
  4033e8:	mov	x3, x0
  4033ec:	ldp	x0, x1, [x3]
  4033f0:	stp	x0, x1, [x2]
  4033f4:	ldr	x0, [x3, #16]
  4033f8:	str	x0, [x2, #16]
  4033fc:	add	x0, x29, #0x198
  403400:	ldr	x1, [x29, #336]
  403404:	bl	4016a0 <strv_find@plt>
  403408:	cmp	x0, #0x0
  40340c:	b.ne	403494 <run+0x360>  // b.any
  403410:	mov	w0, #0x3                   	// #3
  403414:	str	w0, [x29, #136]
  403418:	str	wzr, [x29, #140]
  40341c:	str	wzr, [x29, #144]
  403420:	ldr	w0, [x29, #144]
  403424:	bl	4017a0 <log_get_max_level_realm@plt>
  403428:	mov	w1, w0
  40342c:	ldr	w0, [x29, #136]
  403430:	and	w0, w0, #0x7
  403434:	cmp	w1, w0
  403438:	b.lt	403484 <run+0x350>  // b.tstop
  40343c:	ldr	w0, [x29, #144]
  403440:	lsl	w1, w0, #10
  403444:	ldr	w0, [x29, #136]
  403448:	orr	w8, w1, w0
  40344c:	adrp	x0, 404000 <run+0xecc>
  403450:	add	x1, x0, #0x203
  403454:	ldr	x7, [x29, #304]
  403458:	ldr	x6, [x29, #336]
  40345c:	adrp	x0, 404000 <run+0xecc>
  403460:	add	x5, x0, #0x670
  403464:	adrp	x0, 404000 <run+0xecc>
  403468:	add	x4, x0, #0x970
  40346c:	mov	w3, #0x14d                 	// #333
  403470:	mov	x2, x1
  403474:	ldr	w1, [x29, #140]
  403478:	mov	w0, w8
  40347c:	bl	4016c0 <log_internal_realm@plt>
  403480:	b	40348c <run+0x358>
  403484:	ldr	w0, [x29, #140]
  403488:	cmp	w0, #0x0
  40348c:	mov	w19, #0xffffffea            	// #-22
  403490:	b	404054 <run+0xf20>
  403494:	add	x0, x29, #0xb8
  403498:	ldr	x2, [x29, #304]
  40349c:	ldr	x1, [x29, #336]
  4034a0:	bl	401580 <sd_device_new_from_subsystem_sysname@plt>
  4034a4:	str	w0, [x29, #64]
  4034a8:	ldr	w0, [x29, #64]
  4034ac:	cmp	w0, #0x0
  4034b0:	b.ge	403548 <run+0x414>  // b.tcont
  4034b4:	mov	w0, #0x3                   	// #3
  4034b8:	str	w0, [x29, #124]
  4034bc:	ldr	w0, [x29, #64]
  4034c0:	str	w0, [x29, #128]
  4034c4:	str	wzr, [x29, #132]
  4034c8:	ldr	w0, [x29, #132]
  4034cc:	bl	4017a0 <log_get_max_level_realm@plt>
  4034d0:	mov	w1, w0
  4034d4:	ldr	w0, [x29, #124]
  4034d8:	and	w0, w0, #0x7
  4034dc:	cmp	w1, w0
  4034e0:	b.lt	403530 <run+0x3fc>  // b.tstop
  4034e4:	ldr	w0, [x29, #132]
  4034e8:	lsl	w1, w0, #10
  4034ec:	ldr	w0, [x29, #124]
  4034f0:	orr	w8, w1, w0
  4034f4:	adrp	x0, 404000 <run+0xecc>
  4034f8:	add	x1, x0, #0x203
  4034fc:	ldr	x7, [x29, #304]
  403500:	ldr	x6, [x29, #336]
  403504:	adrp	x0, 404000 <run+0xecc>
  403508:	add	x5, x0, #0x698
  40350c:	adrp	x0, 404000 <run+0xecc>
  403510:	add	x4, x0, #0x970
  403514:	mov	w3, #0x153                 	// #339
  403518:	mov	x2, x1
  40351c:	ldr	w1, [x29, #128]
  403520:	mov	w0, w8
  403524:	bl	4016c0 <log_internal_realm@plt>
  403528:	mov	w19, w0
  40352c:	b	404054 <run+0xf20>
  403530:	ldr	w0, [x29, #128]
  403534:	cmp	w0, #0x0
  403538:	cneg	w0, w0, lt  // lt = tstop
  40353c:	and	w0, w0, #0xff
  403540:	neg	w19, w0
  403544:	b	404054 <run+0xf20>
  403548:	ldr	x0, [x29, #184]
  40354c:	add	x1, x29, #0x3c
  403550:	bl	402664 <get_max_brightness>
  403554:	cmp	w0, #0x0
  403558:	b.ge	403564 <run+0x430>  // b.tcont
  40355c:	mov	w19, #0x0                   	// #0
  403560:	b	404054 <run+0xf20>
  403564:	ldr	x0, [x29, #336]
  403568:	bl	401520 <cescape@plt>
  40356c:	str	x0, [x29, #192]
  403570:	ldr	x0, [x29, #192]
  403574:	cmp	x0, #0x0
  403578:	b.ne	4035a0 <run+0x46c>  // b.any
  40357c:	adrp	x0, 404000 <run+0xecc>
  403580:	add	x1, x0, #0x203
  403584:	adrp	x0, 404000 <run+0xecc>
  403588:	add	x3, x0, #0x970
  40358c:	mov	w2, #0x15d                 	// #349
  403590:	mov	w0, #0x0                   	// #0
  403594:	bl	401780 <log_oom_internal@plt>
  403598:	mov	w19, w0
  40359c:	b	404054 <run+0xf20>
  4035a0:	ldr	x0, [x29, #304]
  4035a4:	bl	401520 <cescape@plt>
  4035a8:	str	x0, [x29, #200]
  4035ac:	ldr	x0, [x29, #200]
  4035b0:	cmp	x0, #0x0
  4035b4:	b.ne	4035dc <run+0x4a8>  // b.any
  4035b8:	adrp	x0, 404000 <run+0xecc>
  4035bc:	add	x1, x0, #0x203
  4035c0:	adrp	x0, 404000 <run+0xecc>
  4035c4:	add	x3, x0, #0x970
  4035c8:	mov	w2, #0x161                 	// #353
  4035cc:	mov	w0, #0x0                   	// #0
  4035d0:	bl	401780 <log_oom_internal@plt>
  4035d4:	mov	w19, w0
  4035d8:	b	404054 <run+0xf20>
  4035dc:	ldr	x3, [x29, #184]
  4035e0:	add	x0, x29, #0xd8
  4035e4:	mov	x2, x0
  4035e8:	adrp	x0, 404000 <run+0xecc>
  4035ec:	add	x1, x0, #0x6d0
  4035f0:	mov	x0, x3
  4035f4:	bl	4014a0 <sd_device_get_property_value@plt>
  4035f8:	cmp	w0, #0x0
  4035fc:	b.lt	403808 <run+0x6d4>  // b.tstop
  403600:	ldr	x0, [x29, #216]
  403604:	bl	401520 <cescape@plt>
  403608:	str	x0, [x29, #208]
  40360c:	ldr	x0, [x29, #208]
  403610:	cmp	x0, #0x0
  403614:	b.ne	40363c <run+0x508>  // b.any
  403618:	adrp	x0, 404000 <run+0xecc>
  40361c:	add	x1, x0, #0x203
  403620:	adrp	x0, 404000 <run+0xecc>
  403624:	add	x3, x0, #0x970
  403628:	mov	w2, #0x166                 	// #358
  40362c:	mov	w0, #0x0                   	// #0
  403630:	bl	401780 <log_oom_internal@plt>
  403634:	mov	w19, w0
  403638:	b	404054 <run+0xf20>
  40363c:	adrp	x0, 404000 <run+0xecc>
  403640:	add	x0, x0, #0x6d8
  403644:	str	x0, [x29, #408]
  403648:	ldr	x0, [x29, #208]
  40364c:	str	x0, [x29, #416]
  403650:	adrp	x0, 404000 <run+0xecc>
  403654:	add	x0, x0, #0x6f8
  403658:	str	x0, [x29, #424]
  40365c:	ldr	x0, [x29, #192]
  403660:	str	x0, [x29, #432]
  403664:	adrp	x0, 404000 <run+0xecc>
  403668:	add	x0, x0, #0x6f8
  40366c:	str	x0, [x29, #440]
  403670:	ldr	x0, [x29, #200]
  403674:	str	x0, [x29, #448]
  403678:	str	xzr, [x29, #264]
  40367c:	str	xzr, [x29, #272]
  403680:	b	4036b4 <run+0x580>
  403684:	ldr	x0, [x29, #272]
  403688:	lsl	x0, x0, #3
  40368c:	add	x1, x29, #0x198
  403690:	ldr	x0, [x1, x0]
  403694:	bl	401770 <strlen@plt>
  403698:	mov	x1, x0
  40369c:	ldr	x0, [x29, #264]
  4036a0:	add	x0, x0, x1
  4036a4:	str	x0, [x29, #264]
  4036a8:	ldr	x0, [x29, #272]
  4036ac:	add	x0, x0, #0x1
  4036b0:	str	x0, [x29, #272]
  4036b4:	ldr	x0, [x29, #272]
  4036b8:	cmp	x0, #0x5
  4036bc:	b.hi	4036d8 <run+0x5a4>  // b.pmore
  4036c0:	ldr	x0, [x29, #272]
  4036c4:	lsl	x0, x0, #3
  4036c8:	add	x1, x29, #0x198
  4036cc:	ldr	x0, [x1, x0]
  4036d0:	cmp	x0, #0x0
  4036d4:	b.ne	403684 <run+0x550>  // b.any
  4036d8:	ldr	x0, [x29, #264]
  4036dc:	add	x0, x0, #0x1
  4036e0:	str	x0, [x29, #360]
  4036e4:	ldr	x1, [x29, #360]
  4036e8:	mov	x0, #0x1                   	// #1
  4036ec:	bl	401a44 <size_multiply_overflow>
  4036f0:	and	w0, w0, #0xff
  4036f4:	and	x0, x0, #0xff
  4036f8:	cmp	x0, #0x0
  4036fc:	b.eq	403728 <run+0x5f4>  // b.none
  403700:	adrp	x0, 404000 <run+0xecc>
  403704:	add	x1, x0, #0x203
  403708:	adrp	x0, 404000 <run+0xecc>
  40370c:	add	x4, x0, #0x978
  403710:	mov	w3, #0x168                 	// #360
  403714:	mov	x2, x1
  403718:	adrp	x0, 404000 <run+0xecc>
  40371c:	add	x1, x0, #0x700
  403720:	mov	w0, #0x0                   	// #0
  403724:	bl	4015d0 <log_assert_failed_realm@plt>
  403728:	ldr	x0, [x29, #360]
  40372c:	cmp	x0, #0x400, lsl #12
  403730:	cset	w0, hi  // hi = pmore
  403734:	and	w0, w0, #0xff
  403738:	and	x0, x0, #0xff
  40373c:	cmp	x0, #0x0
  403740:	b.eq	40376c <run+0x638>  // b.none
  403744:	adrp	x0, 404000 <run+0xecc>
  403748:	add	x1, x0, #0x203
  40374c:	adrp	x0, 404000 <run+0xecc>
  403750:	add	x4, x0, #0x978
  403754:	mov	w3, #0x168                 	// #360
  403758:	mov	x2, x1
  40375c:	adrp	x0, 404000 <run+0xecc>
  403760:	add	x1, x0, #0x730
  403764:	mov	w0, #0x0                   	// #0
  403768:	bl	4015d0 <log_assert_failed_realm@plt>
  40376c:	ldr	x0, [x29, #360]
  403770:	add	x0, x0, #0xf
  403774:	lsr	x0, x0, #4
  403778:	lsl	x0, x0, #4
  40377c:	sub	sp, sp, x0
  403780:	add	x0, sp, #0x20
  403784:	add	x0, x0, #0xf
  403788:	lsr	x0, x0, #4
  40378c:	lsl	x0, x0, #4
  403790:	str	x0, [x29, #368]
  403794:	ldr	x0, [x29, #368]
  403798:	str	x0, [x29, #256]
  40379c:	str	xzr, [x29, #272]
  4037a0:	b	4037d0 <run+0x69c>
  4037a4:	ldr	x0, [x29, #272]
  4037a8:	lsl	x0, x0, #3
  4037ac:	add	x1, x29, #0x198
  4037b0:	ldr	x0, [x1, x0]
  4037b4:	mov	x1, x0
  4037b8:	ldr	x0, [x29, #256]
  4037bc:	bl	4014c0 <stpcpy@plt>
  4037c0:	str	x0, [x29, #256]
  4037c4:	ldr	x0, [x29, #272]
  4037c8:	add	x0, x0, #0x1
  4037cc:	str	x0, [x29, #272]
  4037d0:	ldr	x0, [x29, #272]
  4037d4:	cmp	x0, #0x5
  4037d8:	b.hi	4037f4 <run+0x6c0>  // b.pmore
  4037dc:	ldr	x0, [x29, #272]
  4037e0:	lsl	x0, x0, #3
  4037e4:	add	x1, x29, #0x198
  4037e8:	ldr	x0, [x1, x0]
  4037ec:	cmp	x0, #0x0
  4037f0:	b.ne	4037a4 <run+0x670>  // b.any
  4037f4:	ldr	x0, [x29, #256]
  4037f8:	strb	wzr, [x0]
  4037fc:	ldr	x0, [x29, #368]
  403800:	str	x0, [x29, #248]
  403804:	b	4039dc <run+0x8a8>
  403808:	add	x0, x29, #0x1d8
  40380c:	sub	x0, x0, #0x40
  403810:	adrp	x1, 404000 <run+0xecc>
  403814:	add	x1, x1, #0x6d8
  403818:	str	x1, [x0]
  40381c:	ldr	x1, [x29, #192]
  403820:	add	x0, x29, #0x1d8
  403824:	sub	x0, x0, #0x40
  403828:	str	x1, [x0, #8]
  40382c:	add	x0, x29, #0x1d8
  403830:	sub	x0, x0, #0x40
  403834:	adrp	x1, 404000 <run+0xecc>
  403838:	add	x1, x1, #0x6f8
  40383c:	str	x1, [x0, #16]
  403840:	ldr	x1, [x29, #200]
  403844:	add	x0, x29, #0x1d8
  403848:	sub	x0, x0, #0x40
  40384c:	str	x1, [x0, #24]
  403850:	str	xzr, [x29, #288]
  403854:	str	xzr, [x29, #296]
  403858:	b	40388c <run+0x758>
  40385c:	add	x0, x29, #0x1d8
  403860:	sub	x0, x0, #0x40
  403864:	ldr	x1, [x29, #296]
  403868:	ldr	x0, [x0, x1, lsl #3]
  40386c:	bl	401770 <strlen@plt>
  403870:	mov	x1, x0
  403874:	ldr	x0, [x29, #288]
  403878:	add	x0, x0, x1
  40387c:	str	x0, [x29, #288]
  403880:	ldr	x0, [x29, #296]
  403884:	add	x0, x0, #0x1
  403888:	str	x0, [x29, #296]
  40388c:	ldr	x0, [x29, #296]
  403890:	cmp	x0, #0x3
  403894:	b.hi	4038b0 <run+0x77c>  // b.pmore
  403898:	add	x0, x29, #0x1d8
  40389c:	sub	x0, x0, #0x40
  4038a0:	ldr	x1, [x29, #296]
  4038a4:	ldr	x0, [x0, x1, lsl #3]
  4038a8:	cmp	x0, #0x0
  4038ac:	b.ne	40385c <run+0x728>  // b.any
  4038b0:	ldr	x0, [x29, #288]
  4038b4:	add	x0, x0, #0x1
  4038b8:	str	x0, [x29, #344]
  4038bc:	ldr	x1, [x29, #344]
  4038c0:	mov	x0, #0x1                   	// #1
  4038c4:	bl	401a44 <size_multiply_overflow>
  4038c8:	and	w0, w0, #0xff
  4038cc:	and	x0, x0, #0xff
  4038d0:	cmp	x0, #0x0
  4038d4:	b.eq	403900 <run+0x7cc>  // b.none
  4038d8:	adrp	x0, 404000 <run+0xecc>
  4038dc:	add	x1, x0, #0x203
  4038e0:	adrp	x0, 404000 <run+0xecc>
  4038e4:	add	x4, x0, #0x978
  4038e8:	mov	w3, #0x16a                 	// #362
  4038ec:	mov	x2, x1
  4038f0:	adrp	x0, 404000 <run+0xecc>
  4038f4:	add	x1, x0, #0x700
  4038f8:	mov	w0, #0x0                   	// #0
  4038fc:	bl	4015d0 <log_assert_failed_realm@plt>
  403900:	ldr	x0, [x29, #344]
  403904:	cmp	x0, #0x400, lsl #12
  403908:	cset	w0, hi  // hi = pmore
  40390c:	and	w0, w0, #0xff
  403910:	and	x0, x0, #0xff
  403914:	cmp	x0, #0x0
  403918:	b.eq	403944 <run+0x810>  // b.none
  40391c:	adrp	x0, 404000 <run+0xecc>
  403920:	add	x1, x0, #0x203
  403924:	adrp	x0, 404000 <run+0xecc>
  403928:	add	x4, x0, #0x978
  40392c:	mov	w3, #0x16a                 	// #362
  403930:	mov	x2, x1
  403934:	adrp	x0, 404000 <run+0xecc>
  403938:	add	x1, x0, #0x730
  40393c:	mov	w0, #0x0                   	// #0
  403940:	bl	4015d0 <log_assert_failed_realm@plt>
  403944:	ldr	x0, [x29, #344]
  403948:	add	x0, x0, #0xf
  40394c:	lsr	x0, x0, #4
  403950:	lsl	x0, x0, #4
  403954:	sub	sp, sp, x0
  403958:	add	x0, sp, #0x20
  40395c:	add	x0, x0, #0xf
  403960:	lsr	x0, x0, #4
  403964:	lsl	x0, x0, #4
  403968:	str	x0, [x29, #352]
  40396c:	ldr	x0, [x29, #352]
  403970:	str	x0, [x29, #280]
  403974:	str	xzr, [x29, #296]
  403978:	b	4039a8 <run+0x874>
  40397c:	add	x0, x29, #0x1d8
  403980:	sub	x0, x0, #0x40
  403984:	ldr	x1, [x29, #296]
  403988:	ldr	x0, [x0, x1, lsl #3]
  40398c:	mov	x1, x0
  403990:	ldr	x0, [x29, #280]
  403994:	bl	4014c0 <stpcpy@plt>
  403998:	str	x0, [x29, #280]
  40399c:	ldr	x0, [x29, #296]
  4039a0:	add	x0, x0, #0x1
  4039a4:	str	x0, [x29, #296]
  4039a8:	ldr	x0, [x29, #296]
  4039ac:	cmp	x0, #0x3
  4039b0:	b.hi	4039cc <run+0x898>  // b.pmore
  4039b4:	add	x0, x29, #0x1d8
  4039b8:	sub	x0, x0, #0x40
  4039bc:	ldr	x1, [x29, #296]
  4039c0:	ldr	x0, [x0, x1, lsl #3]
  4039c4:	cmp	x0, #0x0
  4039c8:	b.ne	40397c <run+0x848>  // b.any
  4039cc:	ldr	x0, [x29, #280]
  4039d0:	strb	wzr, [x0]
  4039d4:	ldr	x0, [x29, #352]
  4039d8:	str	x0, [x29, #248]
  4039dc:	ldr	x0, [x29, #32]
  4039e0:	add	x0, x0, #0x8
  4039e4:	ldr	x2, [x0]
  4039e8:	adrp	x0, 404000 <run+0xecc>
  4039ec:	add	x1, x0, #0x750
  4039f0:	mov	x0, x2
  4039f4:	bl	4016d0 <strcmp@plt>
  4039f8:	cmp	w0, #0x0
  4039fc:	b.ne	403da0 <run+0xc6c>  // b.any
  403a00:	str	xzr, [x29, #224]
  403a04:	bl	401650 <shall_restore_state@plt>
  403a08:	cmp	w0, #0x0
  403a0c:	b.ne	403a1c <run+0x8e8>  // b.any
  403a10:	mov	w19, #0x0                   	// #0
  403a14:	mov	w20, #0x0                   	// #0
  403a18:	b	403d8c <run+0xc58>
  403a1c:	ldr	x0, [x29, #184]
  403a20:	bl	4021c8 <validate_device>
  403a24:	cmp	w0, #0x0
  403a28:	b.ne	403a38 <run+0x904>  // b.any
  403a2c:	mov	w19, #0x0                   	// #0
  403a30:	mov	w20, #0x0                   	// #0
  403a34:	b	403d8c <run+0xc58>
  403a38:	ldr	x0, [x29, #184]
  403a3c:	bl	402ec0 <shall_clamp>
  403a40:	strb	w0, [x29, #59]
  403a44:	add	x0, x29, #0xe0
  403a48:	mov	x1, x0
  403a4c:	ldr	x0, [x29, #248]
  403a50:	bl	401640 <read_one_line_file@plt>
  403a54:	str	w0, [x29, #64]
  403a58:	strb	wzr, [x29, #58]
  403a5c:	ldr	w0, [x29, #64]
  403a60:	cmn	w0, #0x2
  403a64:	b.eq	403a74 <run+0x940>  // b.none
  403a68:	ldr	w0, [x29, #64]
  403a6c:	cmp	w0, #0x0
  403a70:	b.ne	403a7c <run+0x948>  // b.any
  403a74:	mov	w0, #0x1                   	// #1
  403a78:	strb	w0, [x29, #58]
  403a7c:	nop
  403a80:	ldrb	w0, [x29, #58]
  403a84:	cmp	w0, #0x0
  403a88:	b.eq	403bd8 <run+0xaa4>  // b.none
  403a8c:	ldrb	w0, [x29, #59]
  403a90:	eor	w0, w0, #0x1
  403a94:	and	w0, w0, #0xff
  403a98:	cmp	w0, #0x0
  403a9c:	b.eq	403aa8 <run+0x974>  // b.none
  403aa0:	mov	w19, #0x0                   	// #0
  403aa4:	b	403bd0 <run+0xa9c>
  403aa8:	ldr	x3, [x29, #184]
  403aac:	add	x0, x29, #0xe8
  403ab0:	mov	x2, x0
  403ab4:	adrp	x0, 404000 <run+0xecc>
  403ab8:	add	x1, x0, #0x758
  403abc:	mov	x0, x3
  403ac0:	bl	401700 <sd_device_get_sysattr_value@plt>
  403ac4:	str	w0, [x29, #64]
  403ac8:	ldr	w0, [x29, #64]
  403acc:	cmp	w0, #0x0
  403ad0:	b.ge	403b98 <run+0xa64>  // b.tcont
  403ad4:	str	xzr, [x29, #240]
  403ad8:	ldr	x0, [x29, #184]
  403adc:	str	x0, [x29, #392]
  403ae0:	mov	w0, #0x4                   	// #4
  403ae4:	str	w0, [x29, #108]
  403ae8:	ldr	w0, [x29, #64]
  403aec:	str	w0, [x29, #112]
  403af0:	ldr	x0, [x29, #392]
  403af4:	cmp	x0, #0x0
  403af8:	b.eq	403b34 <run+0xa00>  // b.none
  403afc:	mov	w0, #0x0                   	// #0
  403b00:	bl	4017a0 <log_get_max_level_realm@plt>
  403b04:	mov	w1, w0
  403b08:	ldr	w0, [x29, #108]
  403b0c:	cmp	w0, w1
  403b10:	cset	w0, le
  403b14:	and	w0, w0, #0xff
  403b18:	and	x0, x0, #0xff
  403b1c:	cmp	x0, #0x0
  403b20:	b.eq	403b34 <run+0xa00>  // b.none
  403b24:	add	x0, x29, #0xf0
  403b28:	mov	x1, x0
  403b2c:	ldr	x0, [x29, #392]
  403b30:	bl	4015c0 <sd_device_get_sysname@plt>
  403b34:	adrp	x0, 404000 <run+0xecc>
  403b38:	add	x2, x0, #0x203
  403b3c:	ldr	x0, [x29, #240]
  403b40:	cmp	x0, #0x0
  403b44:	b.eq	403b54 <run+0xa20>  // b.none
  403b48:	adrp	x0, 404000 <run+0xecc>
  403b4c:	add	x0, x0, #0x3b0
  403b50:	b	403b58 <run+0xa24>
  403b54:	mov	x0, #0x0                   	// #0
  403b58:	ldr	x3, [x29, #240]
  403b5c:	adrp	x1, 404000 <run+0xecc>
  403b60:	add	x1, x1, #0x768
  403b64:	str	x1, [sp, #8]
  403b68:	str	xzr, [sp]
  403b6c:	mov	x7, #0x0                   	// #0
  403b70:	mov	x6, x3
  403b74:	mov	x5, x0
  403b78:	adrp	x0, 404000 <run+0xecc>
  403b7c:	add	x4, x0, #0x970
  403b80:	mov	w3, #0x18c                 	// #396
  403b84:	ldr	w1, [x29, #112]
  403b88:	ldr	w0, [x29, #108]
  403b8c:	bl	401630 <log_object_internal@plt>
  403b90:	mov	w19, w0
  403b94:	b	403bd0 <run+0xa9c>
  403b98:	ldr	x0, [x29, #232]
  403b9c:	bl	4016e0 <strdup@plt>
  403ba0:	str	x0, [x29, #224]
  403ba4:	ldr	x0, [x29, #224]
  403ba8:	cmp	x0, #0x0
  403bac:	b.ne	403c78 <run+0xb44>  // b.any
  403bb0:	adrp	x0, 404000 <run+0xecc>
  403bb4:	add	x1, x0, #0x203
  403bb8:	adrp	x0, 404000 <run+0xecc>
  403bbc:	add	x3, x0, #0x970
  403bc0:	mov	w2, #0x190                 	// #400
  403bc4:	mov	w0, #0x0                   	// #0
  403bc8:	bl	401780 <log_oom_internal@plt>
  403bcc:	mov	w19, w0
  403bd0:	mov	w20, #0x0                   	// #0
  403bd4:	b	403d8c <run+0xc58>
  403bd8:	ldr	w0, [x29, #64]
  403bdc:	cmp	w0, #0x0
  403be0:	b.ge	403c78 <run+0xb44>  // b.tcont
  403be4:	mov	w0, #0x3                   	// #3
  403be8:	str	w0, [x29, #96]
  403bec:	ldr	w0, [x29, #64]
  403bf0:	str	w0, [x29, #100]
  403bf4:	str	wzr, [x29, #104]
  403bf8:	ldr	w0, [x29, #104]
  403bfc:	bl	4017a0 <log_get_max_level_realm@plt>
  403c00:	mov	w1, w0
  403c04:	ldr	w0, [x29, #96]
  403c08:	and	w0, w0, #0x7
  403c0c:	cmp	w1, w0
  403c10:	b.lt	403c5c <run+0xb28>  // b.tstop
  403c14:	ldr	w0, [x29, #104]
  403c18:	lsl	w1, w0, #10
  403c1c:	ldr	w0, [x29, #96]
  403c20:	orr	w7, w1, w0
  403c24:	adrp	x0, 404000 <run+0xecc>
  403c28:	add	x1, x0, #0x203
  403c2c:	ldr	x6, [x29, #248]
  403c30:	adrp	x0, 404000 <run+0xecc>
  403c34:	add	x5, x0, #0x798
  403c38:	adrp	x0, 404000 <run+0xecc>
  403c3c:	add	x4, x0, #0x970
  403c40:	mov	w3, #0x192                 	// #402
  403c44:	mov	x2, x1
  403c48:	ldr	w1, [x29, #100]
  403c4c:	mov	w0, w7
  403c50:	bl	4016c0 <log_internal_realm@plt>
  403c54:	mov	w19, w0
  403c58:	b	403c70 <run+0xb3c>
  403c5c:	ldr	w0, [x29, #100]
  403c60:	cmp	w0, #0x0
  403c64:	cneg	w0, w0, lt  // lt = tstop
  403c68:	and	w0, w0, #0xff
  403c6c:	neg	w19, w0
  403c70:	mov	w20, #0x0                   	// #0
  403c74:	b	403d8c <run+0xc58>
  403c78:	ldrb	w0, [x29, #59]
  403c7c:	cmp	w0, #0x0
  403c80:	b.eq	403c94 <run+0xb60>  // b.none
  403c84:	ldr	x0, [x29, #184]
  403c88:	ldr	w2, [x29, #60]
  403c8c:	add	x1, x29, #0xe0
  403c90:	bl	4029f0 <clamp_brightness>
  403c94:	ldr	x3, [x29, #184]
  403c98:	ldr	x0, [x29, #224]
  403c9c:	mov	x2, x0
  403ca0:	adrp	x0, 404000 <run+0xecc>
  403ca4:	add	x1, x0, #0x758
  403ca8:	mov	x0, x3
  403cac:	bl	401720 <sd_device_set_sysattr_value@plt>
  403cb0:	str	w0, [x29, #64]
  403cb4:	ldr	w0, [x29, #64]
  403cb8:	cmp	w0, #0x0
  403cbc:	b.ge	403d88 <run+0xc54>  // b.tcont
  403cc0:	str	xzr, [x29, #240]
  403cc4:	ldr	x0, [x29, #184]
  403cc8:	str	x0, [x29, #400]
  403ccc:	mov	w0, #0x3                   	// #3
  403cd0:	str	w0, [x29, #116]
  403cd4:	ldr	w0, [x29, #64]
  403cd8:	str	w0, [x29, #120]
  403cdc:	ldr	x0, [x29, #400]
  403ce0:	cmp	x0, #0x0
  403ce4:	b.eq	403d20 <run+0xbec>  // b.none
  403ce8:	mov	w0, #0x0                   	// #0
  403cec:	bl	4017a0 <log_get_max_level_realm@plt>
  403cf0:	mov	w1, w0
  403cf4:	ldr	w0, [x29, #116]
  403cf8:	cmp	w0, w1
  403cfc:	cset	w0, le
  403d00:	and	w0, w0, #0xff
  403d04:	and	x0, x0, #0xff
  403d08:	cmp	x0, #0x0
  403d0c:	b.eq	403d20 <run+0xbec>  // b.none
  403d10:	add	x0, x29, #0xf0
  403d14:	mov	x1, x0
  403d18:	ldr	x0, [x29, #400]
  403d1c:	bl	4015c0 <sd_device_get_sysname@plt>
  403d20:	adrp	x0, 404000 <run+0xecc>
  403d24:	add	x2, x0, #0x203
  403d28:	ldr	x0, [x29, #240]
  403d2c:	cmp	x0, #0x0
  403d30:	b.eq	403d40 <run+0xc0c>  // b.none
  403d34:	adrp	x0, 404000 <run+0xecc>
  403d38:	add	x0, x0, #0x3b0
  403d3c:	b	403d44 <run+0xc10>
  403d40:	mov	x0, #0x0                   	// #0
  403d44:	ldr	x3, [x29, #240]
  403d48:	adrp	x1, 404000 <run+0xecc>
  403d4c:	add	x1, x1, #0x7b0
  403d50:	str	x1, [sp, #8]
  403d54:	str	xzr, [sp]
  403d58:	mov	x7, #0x0                   	// #0
  403d5c:	mov	x6, x3
  403d60:	mov	x5, x0
  403d64:	adrp	x0, 404000 <run+0xecc>
  403d68:	add	x4, x0, #0x970
  403d6c:	mov	w3, #0x199                 	// #409
  403d70:	ldr	w1, [x29, #120]
  403d74:	ldr	w0, [x29, #116]
  403d78:	bl	401630 <log_object_internal@plt>
  403d7c:	mov	w19, w0
  403d80:	mov	w20, #0x0                   	// #0
  403d84:	b	403d8c <run+0xc58>
  403d88:	mov	w20, #0x1                   	// #1
  403d8c:	add	x0, x29, #0xe0
  403d90:	bl	401a20 <freep>
  403d94:	cmp	w20, #0x1
  403d98:	b.ne	404054 <run+0xf20>  // b.any
  403d9c:	b	404050 <run+0xf1c>
  403da0:	ldr	x0, [x29, #32]
  403da4:	add	x0, x0, #0x8
  403da8:	ldr	x2, [x0]
  403dac:	adrp	x0, 404000 <run+0xecc>
  403db0:	add	x1, x0, #0x7e8
  403db4:	mov	x0, x2
  403db8:	bl	4016d0 <strcmp@plt>
  403dbc:	cmp	w0, #0x0
  403dc0:	b.ne	403fc4 <run+0xe90>  // b.any
  403dc4:	ldr	x0, [x29, #184]
  403dc8:	bl	4021c8 <validate_device>
  403dcc:	cmp	w0, #0x0
  403dd0:	b.ne	403de4 <run+0xcb0>  // b.any
  403dd4:	ldr	x0, [x29, #248]
  403dd8:	bl	4014b0 <unlink@plt>
  403ddc:	mov	w19, #0x0                   	// #0
  403de0:	b	404054 <run+0xf20>
  403de4:	ldr	x3, [x29, #184]
  403de8:	add	x0, x29, #0xe8
  403dec:	mov	x2, x0
  403df0:	adrp	x0, 404000 <run+0xecc>
  403df4:	add	x1, x0, #0x758
  403df8:	mov	x0, x3
  403dfc:	bl	401700 <sd_device_get_sysattr_value@plt>
  403e00:	str	w0, [x29, #64]
  403e04:	ldr	w0, [x29, #64]
  403e08:	cmp	w0, #0x0
  403e0c:	b.ge	403ed4 <run+0xda0>  // b.tcont
  403e10:	str	xzr, [x29, #240]
  403e14:	ldr	x0, [x29, #184]
  403e18:	str	x0, [x29, #384]
  403e1c:	mov	w0, #0x3                   	// #3
  403e20:	str	w0, [x29, #88]
  403e24:	ldr	w0, [x29, #64]
  403e28:	str	w0, [x29, #92]
  403e2c:	ldr	x0, [x29, #384]
  403e30:	cmp	x0, #0x0
  403e34:	b.eq	403e70 <run+0xd3c>  // b.none
  403e38:	mov	w0, #0x0                   	// #0
  403e3c:	bl	4017a0 <log_get_max_level_realm@plt>
  403e40:	mov	w1, w0
  403e44:	ldr	w0, [x29, #88]
  403e48:	cmp	w0, w1
  403e4c:	cset	w0, le
  403e50:	and	w0, w0, #0xff
  403e54:	and	x0, x0, #0xff
  403e58:	cmp	x0, #0x0
  403e5c:	b.eq	403e70 <run+0xd3c>  // b.none
  403e60:	add	x0, x29, #0xf0
  403e64:	mov	x1, x0
  403e68:	ldr	x0, [x29, #384]
  403e6c:	bl	4015c0 <sd_device_get_sysname@plt>
  403e70:	adrp	x0, 404000 <run+0xecc>
  403e74:	add	x2, x0, #0x203
  403e78:	ldr	x0, [x29, #240]
  403e7c:	cmp	x0, #0x0
  403e80:	b.eq	403e90 <run+0xd5c>  // b.none
  403e84:	adrp	x0, 404000 <run+0xecc>
  403e88:	add	x0, x0, #0x3b0
  403e8c:	b	403e94 <run+0xd60>
  403e90:	mov	x0, #0x0                   	// #0
  403e94:	ldr	x3, [x29, #240]
  403e98:	adrp	x1, 404000 <run+0xecc>
  403e9c:	add	x1, x1, #0x7f0
  403ea0:	str	x1, [sp, #8]
  403ea4:	str	xzr, [sp]
  403ea8:	mov	x7, #0x0                   	// #0
  403eac:	mov	x6, x3
  403eb0:	mov	x5, x0
  403eb4:	adrp	x0, 404000 <run+0xecc>
  403eb8:	add	x4, x0, #0x970
  403ebc:	mov	w3, #0x1a5                 	// #421
  403ec0:	ldr	w1, [x29, #92]
  403ec4:	ldr	w0, [x29, #88]
  403ec8:	bl	401630 <log_object_internal@plt>
  403ecc:	mov	w19, w0
  403ed0:	b	404054 <run+0xf20>
  403ed4:	ldr	x0, [x29, #232]
  403ed8:	mov	w2, #0x1                   	// #1
  403edc:	mov	x1, x0
  403ee0:	ldr	x0, [x29, #248]
  403ee4:	bl	401b10 <write_string_file>
  403ee8:	str	w0, [x29, #64]
  403eec:	ldr	w0, [x29, #64]
  403ef0:	cmp	w0, #0x0
  403ef4:	b.ge	404050 <run+0xf1c>  // b.tcont
  403ef8:	str	xzr, [x29, #240]
  403efc:	ldr	x0, [x29, #184]
  403f00:	str	x0, [x29, #376]
  403f04:	mov	w0, #0x3                   	// #3
  403f08:	str	w0, [x29, #80]
  403f0c:	ldr	w0, [x29, #64]
  403f10:	str	w0, [x29, #84]
  403f14:	ldr	x0, [x29, #376]
  403f18:	cmp	x0, #0x0
  403f1c:	b.eq	403f58 <run+0xe24>  // b.none
  403f20:	mov	w0, #0x0                   	// #0
  403f24:	bl	4017a0 <log_get_max_level_realm@plt>
  403f28:	mov	w1, w0
  403f2c:	ldr	w0, [x29, #80]
  403f30:	cmp	w0, w1
  403f34:	cset	w0, le
  403f38:	and	w0, w0, #0xff
  403f3c:	and	x0, x0, #0xff
  403f40:	cmp	x0, #0x0
  403f44:	b.eq	403f58 <run+0xe24>  // b.none
  403f48:	add	x0, x29, #0xf0
  403f4c:	mov	x1, x0
  403f50:	ldr	x0, [x29, #376]
  403f54:	bl	4015c0 <sd_device_get_sysname@plt>
  403f58:	adrp	x0, 404000 <run+0xecc>
  403f5c:	add	x2, x0, #0x203
  403f60:	ldr	x0, [x29, #240]
  403f64:	cmp	x0, #0x0
  403f68:	b.eq	403f78 <run+0xe44>  // b.none
  403f6c:	adrp	x0, 404000 <run+0xecc>
  403f70:	add	x0, x0, #0x3b0
  403f74:	b	403f7c <run+0xe48>
  403f78:	mov	x0, #0x0                   	// #0
  403f7c:	ldr	x3, [x29, #240]
  403f80:	ldr	x1, [x29, #248]
  403f84:	str	x1, [sp, #16]
  403f88:	adrp	x1, 404000 <run+0xecc>
  403f8c:	add	x1, x1, #0x828
  403f90:	str	x1, [sp, #8]
  403f94:	str	xzr, [sp]
  403f98:	mov	x7, #0x0                   	// #0
  403f9c:	mov	x6, x3
  403fa0:	mov	x5, x0
  403fa4:	adrp	x0, 404000 <run+0xecc>
  403fa8:	add	x4, x0, #0x970
  403fac:	mov	w3, #0x1a9                 	// #425
  403fb0:	ldr	w1, [x29, #84]
  403fb4:	ldr	w0, [x29, #80]
  403fb8:	bl	401630 <log_object_internal@plt>
  403fbc:	mov	w19, w0
  403fc0:	b	404054 <run+0xf20>
  403fc4:	mov	w0, #0x3                   	// #3
  403fc8:	str	w0, [x29, #68]
  403fcc:	str	wzr, [x29, #72]
  403fd0:	str	wzr, [x29, #76]
  403fd4:	ldr	w0, [x29, #76]
  403fd8:	bl	4017a0 <log_get_max_level_realm@plt>
  403fdc:	mov	w1, w0
  403fe0:	ldr	w0, [x29, #68]
  403fe4:	and	w0, w0, #0x7
  403fe8:	cmp	w1, w0
  403fec:	b.lt	404040 <run+0xf0c>  // b.tstop
  403ff0:	ldr	w0, [x29, #76]
  403ff4:	lsl	w1, w0, #10
  403ff8:	ldr	w0, [x29, #68]
  403ffc:	orr	w7, w1, w0
  404000:	adrp	x0, 404000 <run+0xecc>
  404004:	add	x1, x0, #0x203
  404008:	ldr	x0, [x29, #32]
  40400c:	add	x0, x0, #0x8
  404010:	ldr	x0, [x0]
  404014:	mov	x6, x0
  404018:	adrp	x0, 404000 <run+0xecc>
  40401c:	add	x5, x0, #0x840
  404020:	adrp	x0, 404000 <run+0xecc>
  404024:	add	x4, x0, #0x970
  404028:	mov	w3, #0x1ac                 	// #428
  40402c:	mov	x2, x1
  404030:	ldr	w1, [x29, #72]
  404034:	mov	w0, w7
  404038:	bl	4016c0 <log_internal_realm@plt>
  40403c:	b	404048 <run+0xf14>
  404040:	ldr	w0, [x29, #72]
  404044:	cmp	w0, #0x0
  404048:	mov	w19, #0xffffffea            	// #-22
  40404c:	b	404054 <run+0xf20>
  404050:	mov	w19, #0x0                   	// #0
  404054:	add	x0, x29, #0xd0
  404058:	bl	401a20 <freep>
  40405c:	add	x0, x29, #0xc8
  404060:	bl	401a20 <freep>
  404064:	add	x0, x29, #0xc0
  404068:	bl	401a20 <freep>
  40406c:	add	x0, x29, #0xb8
  404070:	bl	401988 <sd_device_unrefp>
  404074:	mov	w1, w19
  404078:	adrp	x0, 415000 <__FRAME_END__+0x10270>
  40407c:	add	x0, x0, #0xc10
  404080:	ldr	x2, [x29, #456]
  404084:	ldr	x0, [x0]
  404088:	eor	x0, x2, x0
  40408c:	cmp	x0, #0x0
  404090:	b.eq	404098 <run+0xf64>  // b.none
  404094:	bl	401660 <__stack_chk_fail@plt>
  404098:	mov	w0, w1
  40409c:	mov	sp, x29
  4040a0:	ldp	x19, x20, [sp, #16]
  4040a4:	ldp	x29, x30, [sp], #464
  4040a8:	ret

00000000004040ac <main>:
  4040ac:	stp	x29, x30, [sp, #-48]!
  4040b0:	mov	x29, sp
  4040b4:	str	w0, [sp, #28]
  4040b8:	str	x1, [sp, #16]
  4040bc:	ldr	x1, [sp, #16]
  4040c0:	ldr	w0, [sp, #28]
  4040c4:	bl	401b40 <save_argc_argv>
  4040c8:	ldr	x1, [sp, #16]
  4040cc:	ldr	w0, [sp, #28]
  4040d0:	bl	403134 <run>
  4040d4:	str	w0, [sp, #44]
  4040d8:	bl	401670 <ask_password_agent_close@plt>
  4040dc:	bl	401540 <polkit_agent_close@plt>
  4040e0:	bl	401680 <pager_close@plt>
  4040e4:	bl	401750 <mac_selinux_finish@plt>
  4040e8:	bl	401b78 <static_destruct>
  4040ec:	ldr	w0, [sp, #44]
  4040f0:	lsr	w0, w0, #31
  4040f4:	ldp	x29, x30, [sp], #48
  4040f8:	ret
  4040fc:	nop

0000000000404100 <__libc_csu_init>:
  404100:	stp	x29, x30, [sp, #-64]!
  404104:	mov	x29, sp
  404108:	stp	x19, x20, [sp, #16]
  40410c:	adrp	x20, 415000 <__FRAME_END__+0x10270>
  404110:	add	x20, x20, #0xc08
  404114:	stp	x21, x22, [sp, #32]
  404118:	adrp	x21, 415000 <__FRAME_END__+0x10270>
  40411c:	add	x21, x21, #0xc00
  404120:	sub	x20, x20, x21
  404124:	mov	w22, w0
  404128:	stp	x23, x24, [sp, #48]
  40412c:	mov	x23, x1
  404130:	mov	x24, x2
  404134:	bl	401460 <_init>
  404138:	cmp	xzr, x20, asr #3
  40413c:	b.eq	404168 <__libc_csu_init+0x68>  // b.none
  404140:	asr	x20, x20, #3
  404144:	mov	x19, #0x0                   	// #0
  404148:	ldr	x3, [x21, x19, lsl #3]
  40414c:	mov	x2, x24
  404150:	add	x19, x19, #0x1
  404154:	mov	x1, x23
  404158:	mov	w0, w22
  40415c:	blr	x3
  404160:	cmp	x20, x19
  404164:	b.ne	404148 <__libc_csu_init+0x48>  // b.any
  404168:	ldp	x19, x20, [sp, #16]
  40416c:	ldp	x21, x22, [sp, #32]
  404170:	ldp	x23, x24, [sp, #48]
  404174:	ldp	x29, x30, [sp], #64
  404178:	ret
  40417c:	nop

0000000000404180 <__libc_csu_fini>:
  404180:	ret

Disassembly of section .fini:

0000000000404184 <_fini>:
  404184:	stp	x29, x30, [sp, #-16]!
  404188:	mov	x29, sp
  40418c:	ldp	x29, x30, [sp], #16
  404190:	ret
