In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMAggressiveInstCombine.a_gcc_-O1:

AggressiveInstCombine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x20, x0
      10:	bl	0 <_ZN4llvm38initializeDominatorTreeWrapperPassPassERNS_12PassRegistryE>
      14:	mov	x0, x20
      18:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
      1c:	mov	x0, #0x50                  	// #80
      20:	bl	0 <_Znwm>
      24:	mov	x19, x0
      28:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      2c:	add	x0, x0, #0x0
      30:	str	x0, [x19]
      34:	mov	x0, #0x21                  	// #33
      38:	str	x0, [x19, #8]
      3c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      40:	add	x0, x0, #0x0
      44:	str	x0, [x19, #16]
      48:	mov	x0, #0x16                  	// #22
      4c:	str	x0, [x19, #24]
      50:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      54:	add	x0, x0, #0x0
      58:	str	x0, [x19, #32]
      5c:	strb	wzr, [x19, #40]
      60:	strb	wzr, [x19, #41]
      64:	strb	wzr, [x19, #42]
      68:	str	xzr, [x19, #48]
      6c:	str	xzr, [x19, #56]
      70:	str	xzr, [x19, #64]
      74:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      78:	add	x0, x0, #0x0
      7c:	str	x0, [x19, #72]
      80:	mov	w2, #0x1                   	// #1
      84:	mov	x1, x19
      88:	mov	x0, x20
      8c:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
      90:	mov	x0, x19
      94:	ldp	x19, x20, [sp, #16]
      98:	ldp	x29, x30, [sp], #32
      9c:	ret

00000000000000a0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassD1Ev>:
      a0:	stp	x29, x30, [sp, #-16]!
      a4:	mov	x29, sp
      a8:	adrp	x1, 0 <_ZTVN4llvm12FunctionPassE>
      ac:	ldr	x1, [x1]
      b0:	add	x1, x1, #0x10
      b4:	str	x1, [x0]
      b8:	bl	0 <_ZN4llvm4PassD2Ev>
      bc:	ldp	x29, x30, [sp], #16
      c0:	ret

00000000000000c4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassD0Ev>:
      c4:	stp	x29, x30, [sp, #-32]!
      c8:	mov	x29, sp
      cc:	str	x19, [sp, #16]
      d0:	mov	x19, x0
      d4:	adrp	x1, 0 <_ZTVN4llvm12FunctionPassE>
      d8:	ldr	x1, [x1]
      dc:	add	x1, x1, #0x10
      e0:	str	x1, [x0]
      e4:	bl	0 <_ZN4llvm4PassD2Ev>
      e8:	mov	x1, #0x20                  	// #32
      ec:	mov	x0, x19
      f0:	bl	0 <_ZdlPvm>
      f4:	ldr	x19, [sp, #16]
      f8:	ldp	x29, x30, [sp], #32
      fc:	ret

0000000000000100 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     100:	stp	x29, x30, [sp, #-32]!
     104:	mov	x29, sp
     108:	stp	x19, x20, [sp, #16]
     10c:	mov	x19, x1
     110:	mov	x0, x1
     114:	bl	0 <_ZN4llvm13AnalysisUsage15setPreservesCFGEv>
     118:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     11c:	ldr	x1, [x1]
     120:	mov	x0, x19
     124:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     128:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass2IDE>
     12c:	ldr	x1, [x1]
     130:	mov	x0, x19
     134:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     138:	add	x20, x19, #0x70
     13c:	ldr	w1, [x19, #120]
     140:	ldr	w0, [x19, #124]
     144:	cmp	w1, w0
     148:	b.cs	240 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x140>  // b.hs, b.nlast
     14c:	ldr	w2, [x19, #120]
     150:	ldr	x1, [x19, #112]
     154:	adrp	x0, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     158:	ldr	x0, [x0]
     15c:	str	x0, [x1, x2, lsl #3]
     160:	ldr	w0, [x19, #120]
     164:	ldr	w2, [x19, #124]
     168:	mov	w1, w0
     16c:	add	x1, x1, #0x1
     170:	cmp	x1, w2, uxtw
     174:	b.hi	258 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x158>  // b.pmore
     178:	add	w0, w0, #0x1
     17c:	str	w0, [x19, #120]
     180:	cmp	w2, w0
     184:	b.ls	278 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x178>  // b.plast
     188:	ldr	w2, [x19, #120]
     18c:	ldr	x1, [x19, #112]
     190:	adrp	x0, 0 <_ZN4llvm18BasicAAWrapperPass2IDE>
     194:	ldr	x0, [x0]
     198:	str	x0, [x1, x2, lsl #3]
     19c:	ldr	w0, [x19, #120]
     1a0:	ldr	w2, [x19, #124]
     1a4:	mov	w1, w0
     1a8:	add	x1, x1, #0x1
     1ac:	cmp	x1, w2, uxtw
     1b0:	b.hi	290 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x190>  // b.pmore
     1b4:	add	w0, w0, #0x1
     1b8:	str	w0, [x19, #120]
     1bc:	cmp	w2, w0
     1c0:	b.ls	2b0 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x1b0>  // b.plast
     1c4:	ldr	w2, [x19, #120]
     1c8:	ldr	x1, [x19, #112]
     1cc:	adrp	x0, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     1d0:	ldr	x0, [x0]
     1d4:	str	x0, [x1, x2, lsl #3]
     1d8:	ldr	w0, [x19, #120]
     1dc:	ldr	w2, [x19, #124]
     1e0:	mov	w1, w0
     1e4:	add	x1, x1, #0x1
     1e8:	cmp	x1, w2, uxtw
     1ec:	b.hi	2c8 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x1c8>  // b.pmore
     1f0:	add	w0, w0, #0x1
     1f4:	str	w0, [x19, #120]
     1f8:	cmp	w2, w0
     1fc:	b.ls	2e8 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x1e8>  // b.plast
     200:	ldr	w2, [x19, #120]
     204:	ldr	x1, [x19, #112]
     208:	adrp	x0, 0 <_ZN4llvm20GlobalsAAWrapperPass2IDE>
     20c:	ldr	x0, [x0]
     210:	str	x0, [x1, x2, lsl #3]
     214:	ldr	w0, [x19, #120]
     218:	mov	w1, w0
     21c:	add	x1, x1, #0x1
     220:	ldr	w2, [x19, #124]
     224:	cmp	x1, x2
     228:	b.hi	300 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x200>  // b.pmore
     22c:	add	w0, w0, #0x1
     230:	str	w0, [x19, #120]
     234:	ldp	x19, x20, [sp, #16]
     238:	ldp	x29, x30, [sp], #32
     23c:	ret
     240:	mov	x3, #0x8                   	// #8
     244:	mov	x2, #0x0                   	// #0
     248:	add	x1, x19, #0x80
     24c:	mov	x0, x20
     250:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     254:	b	14c <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x4c>
     258:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     25c:	add	x3, x3, #0x0
     260:	mov	w2, #0x43                  	// #67
     264:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     268:	add	x1, x1, #0x0
     26c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     270:	add	x0, x0, #0x0
     274:	bl	0 <__assert_fail>
     278:	mov	x3, #0x8                   	// #8
     27c:	mov	x2, #0x0                   	// #0
     280:	add	x1, x19, #0x80
     284:	mov	x0, x20
     288:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     28c:	b	188 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x88>
     290:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     294:	add	x3, x3, #0x0
     298:	mov	w2, #0x43                  	// #67
     29c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     2a0:	add	x1, x1, #0x0
     2a4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     2a8:	add	x0, x0, #0x0
     2ac:	bl	0 <__assert_fail>
     2b0:	mov	x3, #0x8                   	// #8
     2b4:	mov	x2, #0x0                   	// #0
     2b8:	add	x1, x19, #0x80
     2bc:	mov	x0, x20
     2c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     2c4:	b	1c4 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0xc4>
     2c8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     2cc:	add	x3, x3, #0x0
     2d0:	mov	w2, #0x43                  	// #67
     2d4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     2d8:	add	x1, x1, #0x0
     2dc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     2e0:	add	x0, x0, #0x0
     2e4:	bl	0 <__assert_fail>
     2e8:	mov	x3, #0x8                   	// #8
     2ec:	mov	x2, #0x0                   	// #0
     2f0:	add	x1, x19, #0x80
     2f4:	mov	x0, x20
     2f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     2fc:	b	200 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x100>
     300:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     304:	add	x3, x3, #0x0
     308:	mov	w2, #0x43                  	// #67
     30c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     310:	add	x1, x1, #0x0
     314:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     318:	add	x0, x0, #0x0
     31c:	bl	0 <__assert_fail>

0000000000000320 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>:
     320:	stp	x29, x30, [sp, #-48]!
     324:	mov	x29, sp
     328:	str	x0, [sp, #40]
     32c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     330:	add	x0, x0, #0x0
     334:	str	x0, [sp, #24]
     338:	add	x0, sp, #0x28
     33c:	str	x0, [sp, #32]
     340:	adrp	x0, 0 <_ZSt15__once_callable>
     344:	ldr	x1, [x0]
     348:	add	x0, x0, #0x0
     34c:	blr	x1
     350:	mrs	x1, tpidr_el0
     354:	add	x2, sp, #0x18
     358:	str	x2, [x1, x0]
     35c:	adrp	x0, 0 <_ZSt11__once_call>
     360:	ldr	x2, [x0]
     364:	add	x0, x0, #0x0
     368:	blr	x2
     36c:	adrp	x2, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     370:	ldr	x2, [x2]
     374:	str	x2, [x1, x0]
     378:	adrp	x0, 0 <__pthread_key_create>
     37c:	ldr	x0, [x0]
     380:	cbz	x0, 3a8 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE+0x88>
     384:	adrp	x1, 0 <__once_proxy>
     388:	ldr	x1, [x1]
     38c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     390:	add	x0, x0, #0x0
     394:	add	x0, x0, #0x8
     398:	bl	0 <pthread_once>
     39c:	cbnz	w0, 3ac <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE+0x8c>
     3a0:	ldp	x29, x30, [sp], #48
     3a4:	ret
     3a8:	mov	w0, #0xffffffff            	// #-1
     3ac:	bl	0 <_ZSt20__throw_system_errori>

00000000000003b0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassEEEPNS_4PassEv>:
     3b0:	stp	x29, x30, [sp, #-32]!
     3b4:	mov	x29, sp
     3b8:	str	x19, [sp, #16]
     3bc:	mov	x0, #0x20                  	// #32
     3c0:	bl	0 <_Znwm>
     3c4:	mov	x19, x0
     3c8:	str	xzr, [x0, #8]
     3cc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     3d0:	add	x0, x0, #0x0
     3d4:	str	x0, [x19, #16]
     3d8:	mov	w0, #0x2                   	// #2
     3dc:	str	w0, [x19, #24]
     3e0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     3e4:	add	x0, x0, #0x0
     3e8:	add	x0, x0, #0x10
     3ec:	str	x0, [x19]
     3f0:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     3f4:	bl	320 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     3f8:	mov	x0, x19
     3fc:	ldr	x19, [sp, #16]
     400:	ldp	x29, x30, [sp], #32
     404:	ret

0000000000000408 <_ZN4llvm31initializeAggressiveInstCombineERNS_12PassRegistryE>:
     408:	stp	x29, x30, [sp, #-16]!
     40c:	mov	x29, sp
     410:	bl	320 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     414:	ldp	x29, x30, [sp], #16
     418:	ret

000000000000041c <LLVMInitializeAggressiveInstCombiner>:
     41c:	stp	x29, x30, [sp, #-16]!
     420:	mov	x29, sp
     424:	bl	320 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     428:	ldp	x29, x30, [sp], #16
     42c:	ret

0000000000000430 <_ZN4llvm32createAggressiveInstCombinerPassEv>:
     430:	stp	x29, x30, [sp, #-32]!
     434:	mov	x29, sp
     438:	str	x19, [sp, #16]
     43c:	mov	x0, #0x20                  	// #32
     440:	bl	0 <_Znwm>
     444:	mov	x19, x0
     448:	str	xzr, [x0, #8]
     44c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     450:	add	x0, x0, #0x0
     454:	str	x0, [x19, #16]
     458:	mov	w0, #0x2                   	// #2
     45c:	str	w0, [x19, #24]
     460:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     464:	add	x0, x0, #0x0
     468:	add	x0, x0, #0x10
     46c:	str	x0, [x19]
     470:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     474:	bl	320 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     478:	mov	x0, x19
     47c:	ldr	x19, [sp, #16]
     480:	ldp	x29, x30, [sp], #32
     484:	ret

0000000000000488 <LLVMAddAggressiveInstCombinerPass>:
     488:	stp	x29, x30, [sp, #-32]!
     48c:	mov	x29, sp
     490:	stp	x19, x20, [sp, #16]
     494:	mov	x19, x0
     498:	ldr	x0, [x0]
     49c:	ldr	x20, [x0, #16]
     4a0:	bl	430 <_ZN4llvm32createAggressiveInstCombinerPassEv>
     4a4:	mov	x1, x0
     4a8:	mov	x0, x19
     4ac:	blr	x20
     4b0:	ldp	x19, x20, [sp, #16]
     4b4:	ldp	x29, x30, [sp], #32
     4b8:	ret

00000000000004bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>:
     4bc:	stp	x29, x30, [sp, #-128]!
     4c0:	mov	x29, sp
     4c4:	stp	x19, x20, [sp, #16]
     4c8:	mov	x20, x0
     4cc:	mov	x19, x1
     4d0:	ldrb	w0, [x1, #24]
     4d4:	cbz	w0, 55c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xa0>
     4d8:	add	x0, sp, #0x38
     4dc:	str	x0, [sp, #64]
     4e0:	add	x1, sp, #0x40
     4e4:	mov	x0, x20
     4e8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     4ec:	and	w0, w0, #0xff
     4f0:	cbz	w0, 510 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x54>
     4f4:	mov	w0, #0x1                   	// #1
     4f8:	strb	w0, [x19, #25]
     4fc:	mov	x1, x19
     500:	ldr	x0, [sp, #56]
     504:	bl	4bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     508:	and	w0, w0, #0xff
     50c:	b	5c8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x10c>
     510:	add	x0, sp, #0x38
     514:	str	x0, [sp, #80]
     518:	add	x0, sp, #0x30
     51c:	str	x0, [sp, #88]
     520:	add	x1, sp, #0x50
     524:	mov	x0, x20
     528:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     52c:	and	w0, w0, #0xff
     530:	cbz	w0, 580 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xc4>
     534:	mov	x1, x19
     538:	ldr	x0, [sp, #56]
     53c:	bl	4bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     540:	ands	w0, w0, #0xff
     544:	b.eq	5c8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x10c>  // b.none
     548:	mov	x1, x19
     54c:	ldr	x0, [sp, #48]
     550:	bl	4bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     554:	and	w0, w0, #0xff
     558:	b	5c8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x10c>
     55c:	add	x0, sp, #0x38
     560:	str	x0, [sp, #96]
     564:	add	x0, sp, #0x30
     568:	str	x0, [sp, #104]
     56c:	add	x1, sp, #0x60
     570:	mov	x0, x20
     574:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     578:	and	w0, w0, #0xff
     57c:	cbnz	w0, 5d4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x118>
     580:	str	xzr, [sp, #32]
     584:	add	x0, sp, #0x28
     588:	str	x0, [sp, #112]
     58c:	add	x0, sp, #0x20
     590:	str	x0, [sp, #120]
     594:	add	x1, sp, #0x70
     598:	mov	x0, x20
     59c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     5a0:	and	w0, w0, #0xff
     5a4:	cbnz	w0, 5ac <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xf0>
     5a8:	str	x20, [sp, #40]
     5ac:	ldr	x0, [x19]
     5b0:	cbz	x0, 5fc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x140>
     5b4:	ldr	w2, [x19, #16]
     5b8:	ldr	x1, [sp, #32]
     5bc:	mov	w0, #0x0                   	// #0
     5c0:	cmp	x1, w2, uxtw
     5c4:	b.cc	608 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x14c>  // b.lo, b.ul, b.last
     5c8:	ldp	x19, x20, [sp, #16]
     5cc:	ldp	x29, x30, [sp], #128
     5d0:	ret
     5d4:	mov	x1, x19
     5d8:	ldr	x0, [sp, #56]
     5dc:	bl	4bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     5e0:	ands	w0, w0, #0xff
     5e4:	b.eq	5c8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x10c>  // b.none
     5e8:	mov	x1, x19
     5ec:	ldr	x0, [sp, #48]
     5f0:	bl	4bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     5f4:	and	w0, w0, #0xff
     5f8:	b	5c8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x10c>
     5fc:	ldr	x0, [sp, #40]
     600:	str	x0, [x19]
     604:	b	5b4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xf8>
     608:	cmp	w1, w2
     60c:	b.cs	640 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x184>  // b.hs, b.nlast
     610:	mov	x0, #0x1                   	// #1
     614:	lsl	x0, x0, x1
     618:	cmp	w2, #0x40
     61c:	b.hi	660 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1a4>  // b.pmore
     620:	ldr	x1, [x19, #8]
     624:	orr	x0, x1, x0
     628:	str	x0, [x19, #8]
     62c:	ldr	x1, [x19]
     630:	ldr	x0, [sp, #40]
     634:	cmp	x1, x0
     638:	cset	w0, eq  // eq = none
     63c:	b	5c8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x10c>
     640:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     644:	add	x3, x3, #0x0
     648:	mov	w2, #0x59d                 	// #1437
     64c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     650:	add	x1, x1, #0x0
     654:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     658:	add	x0, x0, #0x0
     65c:	bl	0 <__assert_fail>
     660:	lsr	w1, w1, #6
     664:	ldr	x3, [x19, #8]
     668:	ldr	x2, [x3, x1, lsl #3]
     66c:	orr	x0, x2, x0
     670:	str	x0, [x3, x1, lsl #3]
     674:	b	62c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x170>

0000000000000678 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_>:
     678:	stp	x29, x30, [sp, #-288]!
     67c:	mov	x29, sp
     680:	stp	x19, x20, [sp, #16]
     684:	stp	x21, x22, [sp, #32]
     688:	mov	x19, x1
     68c:	mov	x21, x2
     690:	mov	x20, x3
     694:	ldr	x0, [x1]
     698:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     69c:	mov	w0, w0
     6a0:	mov	w2, #0x40                  	// #64
     6a4:	str	w2, [sp, #96]
     6a8:	str	x0, [sp, #88]
     6ac:	add	x1, sp, #0x50
     6b0:	str	x1, [sp, #104]
     6b4:	str	x1, [sp, #216]
     6b8:	str	x1, [sp, #280]
     6bc:	add	x3, sp, #0x38
     6c0:	str	x3, [sp, #144]
     6c4:	add	x3, sp, #0x40
     6c8:	str	x3, [sp, #152]
     6cc:	add	x3, sp, #0x48
     6d0:	str	x3, [sp, #160]
     6d4:	str	w2, [sp, #176]
     6d8:	str	x0, [sp, #168]
     6dc:	str	x1, [sp, #184]
     6e0:	mov	x0, x19
     6e4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     6e8:	ldr	x0, [x19, #8]
     6ec:	cbz	x0, 6f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x80>
     6f0:	ldr	x0, [x0, #8]
     6f4:	cbz	x0, 830 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x1b8>
     6f8:	add	x0, sp, #0x48
     6fc:	str	x0, [sp, #112]
     700:	ldr	w0, [sp, #96]
     704:	str	w0, [sp, #128]
     708:	cmp	w0, #0x40
     70c:	b.hi	964 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x2ec>  // b.pmore
     710:	ldr	x0, [sp, #88]
     714:	str	x0, [sp, #120]
     718:	ldr	x0, [sp, #104]
     71c:	str	x0, [sp, #136]
     720:	add	x0, sp, #0x38
     724:	str	x0, [sp, #240]
     728:	add	x0, sp, #0x40
     72c:	str	x0, [sp, #248]
     730:	ldr	x0, [sp, #112]
     734:	str	x0, [sp, #256]
     738:	ldr	w0, [sp, #128]
     73c:	str	w0, [sp, #272]
     740:	cmp	w0, #0x40
     744:	b.hi	974 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x2fc>  // b.pmore
     748:	ldr	x0, [sp, #120]
     74c:	str	x0, [sp, #264]
     750:	ldr	x0, [sp, #136]
     754:	str	x0, [sp, #280]
     758:	ldp	x0, x1, [sp, #240]
     75c:	stp	x0, x1, [sp, #192]
     760:	ldr	x0, [sp, #256]
     764:	str	x0, [sp, #208]
     768:	ldr	w0, [sp, #272]
     76c:	str	w0, [sp, #224]
     770:	cmp	w0, #0x40
     774:	b.hi	984 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x30c>  // b.pmore
     778:	ldr	x0, [sp, #264]
     77c:	str	x0, [sp, #216]
     780:	ldr	x0, [sp, #280]
     784:	str	x0, [sp, #232]
     788:	ldr	w0, [sp, #272]
     78c:	cmp	w0, #0x40
     790:	b.ls	7a0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x128>  // b.plast
     794:	ldr	x0, [sp, #264]
     798:	cbz	x0, 7a0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x128>
     79c:	bl	0 <_ZdaPv>
     7a0:	ldr	w0, [sp, #128]
     7a4:	cmp	w0, #0x40
     7a8:	b.ls	7b8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x140>  // b.plast
     7ac:	ldr	x0, [sp, #120]
     7b0:	cbz	x0, 7b8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x140>
     7b4:	bl	0 <_ZdaPv>
     7b8:	mov	x0, x19
     7bc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     7c0:	ldr	x0, [x19, #8]
     7c4:	cbz	x0, ad4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x45c>
     7c8:	ldr	x0, [x0, #8]
     7cc:	mov	w22, #0x0                   	// #0
     7d0:	cbz	x0, 994 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x31c>
     7d4:	ldr	w0, [sp, #224]
     7d8:	cmp	w0, #0x40
     7dc:	b.ls	7ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x174>  // b.plast
     7e0:	ldr	x0, [sp, #216]
     7e4:	cbz	x0, 7ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x174>
     7e8:	bl	0 <_ZdaPv>
     7ec:	ldr	w0, [sp, #176]
     7f0:	cmp	w0, #0x40
     7f4:	b.ls	804 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x18c>  // b.plast
     7f8:	ldr	x0, [sp, #168]
     7fc:	cbz	x0, 804 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x18c>
     800:	bl	0 <_ZdaPv>
     804:	ldr	w0, [sp, #96]
     808:	cmp	w0, #0x40
     80c:	b.ls	81c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x1a4>  // b.plast
     810:	ldr	x0, [sp, #88]
     814:	cbz	x0, 81c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x1a4>
     818:	bl	0 <_ZdaPv>
     81c:	mov	w0, w22
     820:	ldp	x19, x20, [sp, #16]
     824:	ldp	x21, x22, [sp, #32]
     828:	ldp	x29, x30, [sp], #288
     82c:	ret
     830:	ldrb	w0, [x19, #16]
     834:	cmp	w0, #0x35
     838:	b.eq	8d8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x260>  // b.none
     83c:	mov	x0, x19
     840:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     844:	mov	x22, x0
     848:	cbz	x0, 6f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x80>
     84c:	ldrh	w0, [x0, #18]
     850:	cmp	w0, #0x1d
     854:	b.ne	6f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x80>  // b.any
     858:	mov	w1, #0x0                   	// #0
     85c:	mov	x0, x22
     860:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     864:	mov	x1, x0
     868:	add	x0, sp, #0x90
     86c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     870:	and	w0, w0, #0xff
     874:	cbz	w0, 898 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x220>
     878:	mov	w1, #0x1                   	// #1
     87c:	mov	x0, x22
     880:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     884:	mov	x1, x0
     888:	add	x0, sp, #0xa0
     88c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     890:	and	w0, w0, #0xff
     894:	cbnz	w0, 934 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x2bc>
     898:	mov	w1, #0x1                   	// #1
     89c:	mov	x0, x22
     8a0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     8a4:	mov	x1, x0
     8a8:	add	x0, sp, #0x90
     8ac:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     8b0:	and	w0, w0, #0xff
     8b4:	cbz	w0, 6f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x80>
     8b8:	mov	w1, #0x0                   	// #0
     8bc:	mov	x0, x22
     8c0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     8c4:	mov	x1, x0
     8c8:	add	x0, sp, #0xa0
     8cc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     8d0:	and	w0, w0, #0xff
     8d4:	b	930 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x2b8>
     8d8:	mov	x0, x19
     8dc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     8e0:	mov	x22, x0
     8e4:	ldur	x1, [x0, #-48]
     8e8:	add	x0, sp, #0x90
     8ec:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     8f0:	and	w0, w0, #0xff
     8f4:	cbz	w0, 90c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x294>
     8f8:	ldur	x1, [x22, #-24]
     8fc:	add	x0, sp, #0xa0
     900:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     904:	and	w0, w0, #0xff
     908:	cbnz	w0, 934 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x2bc>
     90c:	ldur	x1, [x22, #-24]
     910:	add	x0, sp, #0x90
     914:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     918:	and	w0, w0, #0xff
     91c:	cbz	w0, 6f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x80>
     920:	ldur	x1, [x22, #-48]
     924:	add	x0, sp, #0xa0
     928:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     92c:	and	w0, w0, #0xff
     930:	cbz	w0, 6f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x80>
     934:	ldr	x0, [sp, #56]
     938:	ldr	x1, [sp, #72]
     93c:	cmp	x0, x1
     940:	b.ne	6f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x80>  // b.any
     944:	ldr	x1, [sp, #64]
     948:	ldr	x2, [sp, #80]
     94c:	cmp	x1, x2
     950:	b.ne	6f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x80>  // b.any
     954:	str	x0, [x21]
     958:	str	x1, [x20]
     95c:	mov	w22, #0x82                  	// #130
     960:	b	7ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x174>
     964:	add	x1, sp, #0x58
     968:	add	x0, sp, #0x78
     96c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     970:	b	718 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0xa0>
     974:	add	x1, sp, #0x78
     978:	add	x0, sp, #0x108
     97c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     980:	b	750 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0xd8>
     984:	add	x1, sp, #0x108
     988:	add	x0, sp, #0xd8
     98c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     990:	b	780 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x108>
     994:	ldrb	w0, [x19, #16]
     998:	cmp	w0, #0x35
     99c:	b.eq	9c4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x34c>  // b.none
     9a0:	mov	x0, x19
     9a4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     9a8:	mov	x19, x0
     9ac:	cbz	x0, 9bc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x344>
     9b0:	ldrh	w0, [x0, #18]
     9b4:	cmp	w0, #0x1d
     9b8:	b.eq	a54 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x3dc>  // b.none
     9bc:	mov	w22, #0x0                   	// #0
     9c0:	b	7d4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x15c>
     9c4:	mov	x0, x19
     9c8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     9cc:	mov	x19, x0
     9d0:	ldur	x1, [x0, #-48]
     9d4:	add	x0, sp, #0xc0
     9d8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     9dc:	and	w0, w0, #0xff
     9e0:	cbz	w0, 9f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x380>
     9e4:	ldur	x1, [x19, #-24]
     9e8:	add	x0, sp, #0xd0
     9ec:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     9f0:	and	w0, w0, #0xff
     9f4:	cbnz	w0, a20 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x3a8>
     9f8:	ldur	x1, [x19, #-24]
     9fc:	add	x0, sp, #0xc0
     a00:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a04:	and	w0, w0, #0xff
     a08:	cbz	w0, 9bc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x344>
     a0c:	ldur	x1, [x19, #-48]
     a10:	add	x0, sp, #0xd0
     a14:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a18:	and	w0, w0, #0xff
     a1c:	cbz	w0, adc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x464>
     a20:	ldr	x0, [sp, #56]
     a24:	mov	w22, #0x0                   	// #0
     a28:	ldr	x1, [sp, #72]
     a2c:	cmp	x0, x1
     a30:	b.ne	7d4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x15c>  // b.any
     a34:	ldr	x1, [sp, #64]
     a38:	ldr	x2, [sp, #80]
     a3c:	cmp	x1, x2
     a40:	b.ne	7d4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x15c>  // b.any
     a44:	str	x0, [x21]
     a48:	str	x1, [x20]
     a4c:	mov	w22, #0x83                  	// #131
     a50:	b	7d4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x15c>
     a54:	mov	w1, #0x0                   	// #0
     a58:	mov	x0, x19
     a5c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a60:	mov	x1, x0
     a64:	add	x0, sp, #0xc0
     a68:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a6c:	and	w0, w0, #0xff
     a70:	cbz	w0, a94 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x41c>
     a74:	mov	w1, #0x1                   	// #1
     a78:	mov	x0, x19
     a7c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a80:	mov	x1, x0
     a84:	add	x0, sp, #0xd0
     a88:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a8c:	and	w0, w0, #0xff
     a90:	cbnz	w0, a20 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x3a8>
     a94:	mov	w1, #0x1                   	// #1
     a98:	mov	x0, x19
     a9c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     aa0:	mov	x1, x0
     aa4:	add	x0, sp, #0xc0
     aa8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     aac:	and	w0, w0, #0xff
     ab0:	cbz	w0, 9bc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x344>
     ab4:	mov	w1, #0x0                   	// #0
     ab8:	mov	x0, x19
     abc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     ac0:	mov	x1, x0
     ac4:	add	x0, sp, #0xd0
     ac8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     acc:	and	w0, w0, #0xff
     ad0:	b	a1c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x3a4>
     ad4:	mov	w22, #0x0                   	// #0
     ad8:	b	7d4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x15c>
     adc:	mov	w22, #0x0                   	// #0
     ae0:	b	7d4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_+0x15c>

0000000000000ae4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>:
     ae4:	sub	sp, sp, #0x4d0
     ae8:	stp	x29, x30, [sp]
     aec:	mov	x29, sp
     af0:	stp	x19, x20, [sp, #16]
     af4:	stp	x21, x22, [sp, #32]
     af8:	stp	x23, x24, [sp, #48]
     afc:	stp	x25, x26, [sp, #64]
     b00:	mov	x25, x0
     b04:	mov	x19, x1
     b08:	mov	x23, x2
     b0c:	ldr	x0, [x0, #40]
     b10:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
     b14:	str	x19, [sp, #408]
     b18:	str	x0, [sp, #416]
     b1c:	str	x23, [sp, #424]
     b20:	add	x0, sp, #0x198
     b24:	add	x1, x0, #0x28
     b28:	str	x1, [sp, #432]
     b2c:	str	wzr, [sp, #440]
     b30:	mov	w1, #0x4                   	// #4
     b34:	str	w1, [sp, #444]
     b38:	str	xzr, [sp, #480]
     b3c:	str	xzr, [sp, #488]
     b40:	str	wzr, [sp, #512]
     b44:	str	xzr, [sp, #496]
     b48:	str	wzr, [sp, #504]
     b4c:	str	wzr, [sp, #508]
     b50:	str	xzr, [sp, #520]
     b54:	str	xzr, [sp, #528]
     b58:	str	xzr, [sp, #536]
     b5c:	mov	x1, x25
     b60:	bl	0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE>
     b64:	and	w0, w0, #0xff
     b68:	str	w0, [sp, #164]
     b6c:	ldr	x21, [x25, #80]
     b70:	add	x0, x25, #0x48
     b74:	str	x0, [sp, #136]
     b78:	cmp	x21, x0
     b7c:	b.eq	219c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x16b8>  // b.none
     b80:	stp	x27, x28, [sp, #80]
     b84:	str	x21, [sp, #120]
     b88:	str	wzr, [sp, #160]
     b8c:	add	x26, sp, #0x128
     b90:	add	x0, x26, #0x8
     b94:	str	x0, [sp, #96]
     b98:	add	x24, sp, #0x150
     b9c:	add	x0, x24, #0x18
     ba0:	str	x0, [sp, #168]
     ba4:	b	c28 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x144>
     ba8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     bac:	add	x3, x3, #0x0
     bb0:	mov	w2, #0x8b                  	// #139
     bb4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     bb8:	add	x1, x1, #0x0
     bbc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     bc0:	add	x0, x0, #0x0
     bc4:	bl	0 <__assert_fail>
     bc8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     bcc:	add	x3, x3, #0x0
     bd0:	mov	w2, #0x250                 	// #592
     bd4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     bd8:	add	x1, x1, #0x0
     bdc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     be0:	add	x0, x0, #0x0
     be4:	bl	0 <__assert_fail>
     be8:	mov	w7, #0x1                   	// #1
     bec:	mov	x8, #0x0                   	// #0
     bf0:	cmn	x5, #0x8
     bf4:	b.ne	cd0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1ec>  // b.any
     bf8:	ubfiz	x0, x0, #4, #32
     bfc:	add	x2, x1, x0
     c00:	add	x3, x23, #0x18
     c04:	ldr	x4, [x23, #24]
     c08:	mov	x0, x2
     c0c:	cbnz	x2, c88 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1a4>
     c10:	ldr	x0, [sp, #120]
     c14:	ldr	x21, [x0, #8]
     c18:	ldr	x0, [sp, #136]
     c1c:	cmp	x0, x21
     c20:	b.eq	20c8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x15e4>  // b.none
     c24:	str	x21, [sp, #120]
     c28:	ldr	x0, [x21]
     c2c:	tst	w0, #0x4
     c30:	b.ne	ba8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc4>  // b.any
     c34:	ldr	x1, [x23, #32]
     c38:	ldr	w0, [x23, #48]
     c3c:	cbz	w0, bf8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x114>
     c40:	sub	x4, x21, #0x18
     c44:	cmp	x21, #0x8
     c48:	ccmn	x4, #0x8, #0x4, ne  // ne = any
     c4c:	b.eq	bc8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xe4>  // b.none
     c50:	sub	w6, w0, #0x1
     c54:	lsr	w3, w4, #9
     c58:	eor	w3, w3, w4, lsr #4
     c5c:	and	w3, w3, w6
     c60:	lsl	w5, w3, #4
     c64:	add	x2, x1, x5
     c68:	ldr	x5, [x1, x5]
     c6c:	cmp	x4, x5
     c70:	b.ne	be8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x104>  // b.any
     c74:	add	x3, x23, #0x18
     c78:	ldr	x4, [x23, #24]
     c7c:	ubfiz	x0, x0, #4, #32
     c80:	add	x0, x1, x0
     c84:	cbz	x2, d48 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x264>
     c88:	ldr	x1, [x3]
     c8c:	cmp	x1, x4
     c90:	b.ne	d08 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x224>  // b.any
     c94:	add	x1, x23, #0x18
     c98:	cmp	x3, x1
     c9c:	b.ne	d28 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x244>  // b.any
     ca0:	cmp	x2, x0
     ca4:	b.eq	c10 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12c>  // b.none
     ca8:	ldr	x0, [x2, #8]
     cac:	cbz	x0, c10 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12c>
     cb0:	ldr	x19, [x21, #16]!
     cb4:	and	x19, x19, #0xfffffffffffffff8
     cb8:	cmp	x19, x21
     cbc:	b.eq	c10 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12c>  // b.none
     cc0:	str	x19, [sp, #112]
     cc4:	add	x0, sp, #0x470
     cc8:	str	x0, [sp, #152]
     ccc:	b	2014 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1530>
     cd0:	cmp	x8, #0x0
     cd4:	ccmn	x5, #0x10, #0x0, eq  // eq = none
     cd8:	csel	x8, x8, x2, ne  // ne = any
     cdc:	add	w9, w7, #0x1
     ce0:	add	w7, w7, w3
     ce4:	and	w3, w6, w7
     ce8:	and	w7, w6, w7
     cec:	lsl	x5, x7, #4
     cf0:	add	x2, x1, x5
     cf4:	ldr	x5, [x1, x5]
     cf8:	cmp	x4, x5
     cfc:	b.eq	c74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x190>  // b.none
     d00:	mov	w7, w9
     d04:	b	bf0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10c>
     d08:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d0c:	add	x3, x3, #0x0
     d10:	mov	w2, #0x4c7                 	// #1223
     d14:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d18:	add	x1, x1, #0x0
     d1c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d20:	add	x0, x0, #0x0
     d24:	bl	0 <__assert_fail>
     d28:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d2c:	add	x3, x3, #0x0
     d30:	mov	w2, #0x4c9                 	// #1225
     d34:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d38:	add	x1, x1, #0x0
     d3c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d40:	add	x0, x0, #0x0
     d44:	bl	0 <__assert_fail>
     d48:	ldr	x0, [x3]
     d4c:	cmp	x0, x4
     d50:	b.eq	ca8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1c4>  // b.none
     d54:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d58:	add	x3, x3, #0x0
     d5c:	mov	w2, #0x4b9                 	// #1209
     d60:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d64:	add	x1, x1, #0x0
     d68:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d6c:	add	x0, x0, #0x0
     d70:	bl	0 <__assert_fail>
     d74:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d78:	add	x3, x3, #0x0
     d7c:	mov	w2, #0x8b                  	// #139
     d80:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d84:	add	x1, x1, #0x0
     d88:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d8c:	add	x0, x0, #0x0
     d90:	bl	0 <__assert_fail>
     d94:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     d98:	add	x3, x3, #0x0
     d9c:	mov	w2, #0x117                 	// #279
     da0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     da4:	add	x1, x1, #0x0
     da8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     dac:	add	x0, x0, #0x0
     db0:	bl	0 <__assert_fail>
     db4:	mov	w2, #0x0                   	// #0
     db8:	mov	x1, #0x0                   	// #0
     dbc:	ldr	x0, [sp, #96]
     dc0:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
     dc4:	b	2078 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1594>
     dc8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     dcc:	add	x3, x3, #0x0
     dd0:	mov	w2, #0x108                 	// #264
     dd4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     dd8:	add	x1, x1, #0x0
     ddc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     de0:	add	x0, x0, #0x0
     de4:	bl	0 <__assert_fail>
     de8:	ldurb	w0, [x19, #-8]
     dec:	sub	w0, w0, #0x25
     df0:	cmp	w0, #0x11
     df4:	b.hi	10e8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x604>  // b.pmore
     df8:	mov	x1, x26
     dfc:	ldur	x0, [x19, #-72]
     e00:	bl	4bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     e04:	ands	w20, w0, #0xff
     e08:	b.eq	f94 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x4b0>  // b.none
     e0c:	sub	x28, x19, #0x18
     e10:	mov	x0, x28
     e14:	bl	0 <_ZNK4llvm5Value10getContextEv>
     e18:	str	xzr, [sp, #336]
     e1c:	str	x0, [sp, #360]
     e20:	str	xzr, [sp, #368]
     e24:	str	wzr, [sp, #376]
     e28:	strb	wzr, [sp, #380]
     e2c:	mov	w0, #0x2                   	// #2
     e30:	strb	w0, [sp, #381]
     e34:	strb	wzr, [sp, #382]
     e38:	str	xzr, [sp, #384]
     e3c:	str	xzr, [sp, #392]
     e40:	ldr	x0, [x28, #40]
     e44:	str	x0, [sp, #344]
     e48:	str	x19, [sp, #352]
     e4c:	add	x0, x0, #0x28
     e50:	cmp	x19, x0
     e54:	b.eq	1108 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x624>  // b.none
     e58:	ldr	x1, [x19, #24]
     e5c:	str	x1, [sp, #1168]
     e60:	cbz	x1, 22ac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x17c8>
     e64:	mov	x2, #0x2                   	// #2
     e68:	add	x0, sp, #0x490
     e6c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     e70:	ldr	x1, [sp, #336]
     e74:	cbz	x1, e80 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x39c>
     e78:	mov	x0, x24
     e7c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     e80:	ldr	x1, [sp, #1168]
     e84:	str	x1, [sp, #336]
     e88:	cbz	x1, e98 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x3b4>
     e8c:	mov	x2, x24
     e90:	add	x0, sp, #0x490
     e94:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     e98:	ldr	x1, [sp, #96]
     e9c:	ldur	x0, [x19, #-24]
     ea0:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeERKNS_5APIntE>
     ea4:	mov	x22, x0
     ea8:	ldr	x20, [sp, #296]
     eac:	str	xzr, [sp, #1104]
     eb0:	str	xzr, [sp, #1112]
     eb4:	mov	w0, #0x1                   	// #1
     eb8:	strb	w0, [sp, #1120]
     ebc:	strb	w0, [sp, #1121]
     ec0:	cbz	x22, 1128 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x644>
     ec4:	ldrb	w0, [x22, #16]
     ec8:	cmp	w0, #0x10
     ecc:	b.hi	11a8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x6c4>  // b.pmore
     ed0:	cmp	w0, #0xd
     ed4:	b.eq	1148 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x664>  // b.none
     ed8:	cbz	x20, 1188 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x6a4>
     edc:	ldrb	w0, [x20, #16]
     ee0:	cmp	w0, #0x10
     ee4:	b.hi	11a8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x6c4>  // b.pmore
     ee8:	mov	x1, x22
     eec:	mov	x0, x20
     ef0:	bl	0 <_ZN4llvm12ConstantExpr6getAndEPNS_8ConstantES2_>
     ef4:	mov	x20, x0
     ef8:	ldr	w0, [sp, #104]
     efc:	cbz	w0, 12c8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x7e4>
     f00:	str	xzr, [sp, #1080]
     f04:	str	xzr, [sp, #1088]
     f08:	mov	w0, #0x1                   	// #1
     f0c:	strb	w0, [sp, #1096]
     f10:	strb	w0, [sp, #1097]
     f14:	add	x4, sp, #0x438
     f18:	mov	x3, x22
     f1c:	mov	x2, x20
     f20:	mov	w1, #0x20                  	// #32
     f24:	mov	x0, x24
     f28:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     f2c:	mov	x20, x0
     f30:	ldur	x2, [x19, #-24]
     f34:	str	xzr, [sp, #1032]
     f38:	str	xzr, [sp, #1040]
     f3c:	mov	w0, #0x1                   	// #1
     f40:	strb	w0, [sp, #1048]
     f44:	strb	w0, [sp, #1049]
     f48:	ldr	x0, [x20]
     f4c:	cmp	x2, x0
     f50:	b.eq	f74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x490>  // b.none
     f54:	ldrb	w0, [x20, #16]
     f58:	cmp	w0, #0x10
     f5c:	b.hi	21b4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x16d0>  // b.pmore
     f60:	mov	w3, #0x0                   	// #0
     f64:	mov	x1, x20
     f68:	mov	w0, #0x27                  	// #39
     f6c:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
     f70:	mov	x20, x0
     f74:	mov	x1, x20
     f78:	mov	x0, x28
     f7c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     f80:	ldr	x1, [sp, #336]
     f84:	cbz	x1, f90 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x4ac>
     f88:	mov	x0, x24
     f8c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     f90:	mov	w20, #0x1                   	// #1
     f94:	ldr	w0, [sp, #312]
     f98:	cmp	w0, #0x40
     f9c:	b.ls	fac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x4c8>  // b.plast
     fa0:	ldr	x0, [sp, #304]
     fa4:	cbz	x0, fac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x4c8>
     fa8:	bl	0 <_ZdaPv>
     fac:	ldurb	w0, [x19, #-8]
     fb0:	cmp	w0, #0x4f
     fb4:	b.ne	14c8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e4>  // b.any
     fb8:	ldur	w0, [x19, #-4]
     fbc:	ubfx	x0, x0, #0, #28
     fc0:	cmp	w0, #0x2
     fc4:	b.ne	17c0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xcdc>  // b.any
     fc8:	ldur	x0, [x19, #-24]
     fcc:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     fd0:	cbz	w0, 17c8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xce4>
     fd4:	sub	w1, w0, #0x1
     fd8:	tst	w1, w0
     fdc:	b.ne	17d0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xcec>  // b.any
     fe0:	ldurb	w0, [x19, #-1]
     fe4:	tbz	w0, #6, 1338 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x854>
     fe8:	ldur	x0, [x19, #-32]
     fec:	ldr	x1, [x0]
     ff0:	str	x1, [sp, #104]
     ff4:	ldr	x22, [x0, #24]
     ff8:	mov	x3, x26
     ffc:	add	x2, sp, #0x118
    1000:	add	x0, sp, #0xf8
    1004:	bl	678 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_>
    1008:	mov	w28, w0
    100c:	cbz	w0, 101c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x538>
    1010:	ldr	x0, [sp, #280]
    1014:	cmp	x0, x22
    1018:	b.eq	1058 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x574>  // b.none
    101c:	mov	x3, x26
    1020:	add	x2, sp, #0x118
    1024:	mov	x1, x22
    1028:	add	x0, sp, #0xf8
    102c:	bl	678 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_>
    1030:	mov	w28, w0
    1034:	cbz	w0, 17d8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xcf4>
    1038:	mov	w27, #0x0                   	// #0
    103c:	ldr	x0, [sp, #280]
    1040:	ldr	x1, [sp, #104]
    1044:	cmp	x0, x1
    1048:	b.ne	14cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e8>  // b.any
    104c:	sub	w0, w28, #0x82
    1050:	cmp	w0, #0x1
    1054:	b.hi	1340 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x85c>  // b.pmore
    1058:	sub	x0, x19, #0x18
    105c:	str	x0, [sp, #104]
    1060:	ldr	x3, [sp, #280]
    1064:	cmp	x3, x22
    1068:	cset	w2, eq  // eq = none
    106c:	ldurb	w0, [x19, #-1]
    1070:	tbz	w0, #6, 1360 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x87c>
    1074:	ldur	x1, [x19, #-32]
    1078:	ldr	w0, [x19, #32]
    107c:	add	x0, x0, x0, lsl #1
    1080:	lsl	x0, x0, #3
    1084:	add	x0, x0, #0x8
    1088:	cmp	x3, x22
    108c:	cset	x3, ne  // ne = any
    1090:	add	x3, x1, x3, lsl #3
    1094:	ldr	x27, [x3, x0]
    1098:	and	x2, x2, #0xff
    109c:	add	x1, x1, x2, lsl #3
    10a0:	ldr	x0, [x1, x0]
    10a4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    10a8:	ldr	x22, [x19, #16]
    10ac:	add	x1, sp, #0x108
    10b0:	str	x1, [sp, #336]
    10b4:	ldr	x1, [sp, #296]
    10b8:	str	x1, [sp, #344]
    10bc:	str	x22, [sp, #360]
    10c0:	str	x27, [sp, #368]
    10c4:	mov	x1, x24
    10c8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    10cc:	ands	w27, w0, #0xff
    10d0:	b.eq	14cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e8>  // b.none
    10d4:	ldr	w0, [sp, #264]
    10d8:	cmp	w0, #0x20
    10dc:	b.eq	137c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x898>  // b.none
    10e0:	mov	w27, #0x0                   	// #0
    10e4:	b	14cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e8>
    10e8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    10ec:	add	x3, x3, #0x0
    10f0:	mov	w2, #0x108                 	// #264
    10f4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    10f8:	add	x1, x1, #0x0
    10fc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1100:	add	x0, x0, #0x0
    1104:	bl	0 <__assert_fail>
    1108:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    110c:	add	x3, x3, #0x0
    1110:	mov	w2, #0x8e                  	// #142
    1114:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1118:	add	x1, x1, #0x0
    111c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1120:	add	x0, x0, #0x0
    1124:	bl	0 <__assert_fail>
    1128:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    112c:	add	x3, x3, #0x0
    1130:	mov	w2, #0x69                  	// #105
    1134:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1138:	add	x1, x1, #0x0
    113c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1140:	add	x0, x0, #0x0
    1144:	bl	0 <__assert_fail>
    1148:	ldr	w27, [x22, #32]
    114c:	cmp	w27, #0x40
    1150:	b.ls	116c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x688>  // b.plast
    1154:	add	x0, x22, #0x18
    1158:	bl	0 <_ZNK4llvm5APInt25countTrailingOnesSlowCaseEv>
    115c:	cmp	w27, w0
    1160:	cset	w0, eq  // eq = none
    1164:	cbz	w0, ed8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x3f4>
    1168:	b	ef8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x414>
    116c:	neg	w27, w27
    1170:	mov	x0, #0xffffffffffffffff    	// #-1
    1174:	lsr	x27, x0, x27
    1178:	ldr	x0, [x22, #24]
    117c:	cmp	x27, x0
    1180:	cset	w0, eq  // eq = none
    1184:	b	1164 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x680>
    1188:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    118c:	add	x3, x3, #0x0
    1190:	mov	w2, #0x69                  	// #105
    1194:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1198:	add	x1, x1, #0x0
    119c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    11a0:	add	x0, x0, #0x0
    11a4:	bl	0 <__assert_fail>
    11a8:	str	xzr, [sp, #1144]
    11ac:	str	xzr, [sp, #1152]
    11b0:	mov	w0, #0x1                   	// #1
    11b4:	strb	w0, [sp, #1160]
    11b8:	strb	w0, [sp, #1161]
    11bc:	mov	x4, #0x0                   	// #0
    11c0:	add	x3, sp, #0x478
    11c4:	mov	x2, x22
    11c8:	mov	x1, x20
    11cc:	mov	w0, #0x1c                  	// #28
    11d0:	bl	0 <_ZN4llvm14BinaryOperator6CreateENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_>
    11d4:	mov	x20, x0
    11d8:	ldr	x0, [sp, #344]
    11dc:	cbz	x0, 122c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x748>
    11e0:	ldr	x27, [sp, #352]
    11e4:	mov	x1, x20
    11e8:	add	x0, x0, #0x28
    11ec:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    11f0:	add	x0, x20, #0x18
    11f4:	ldr	x2, [x27]
    11f8:	and	x2, x2, #0xfffffffffffffff8
    11fc:	str	x27, [x20, #32]
    1200:	ldr	x1, [x20, #24]
    1204:	and	x1, x1, #0x7
    1208:	orr	x1, x1, x2
    120c:	str	x1, [x20, #24]
    1210:	str	x0, [x2, #8]
    1214:	ldr	x1, [x27]
    1218:	tst	x0, #0x7
    121c:	b.ne	1294 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x7b0>  // b.any
    1220:	and	x1, x1, #0x7
    1224:	orr	x0, x0, x1
    1228:	str	x0, [x27]
    122c:	add	x1, sp, #0x450
    1230:	mov	x0, x20
    1234:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    1238:	ldr	x1, [sp, #336]
    123c:	cbz	x1, ef8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x414>
    1240:	str	x1, [sp, #1176]
    1244:	add	x27, sp, #0x498
    1248:	mov	x2, #0x2                   	// #2
    124c:	str	x27, [sp, #144]
    1250:	mov	x0, x27
    1254:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    1258:	add	x27, x20, #0x30
    125c:	ldr	x0, [sp, #144]
    1260:	cmp	x27, x0
    1264:	b.eq	12b4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x7d0>  // b.none
    1268:	ldr	x1, [x20, #48]
    126c:	cbz	x1, 1278 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x794>
    1270:	mov	x0, x27
    1274:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1278:	ldr	x1, [sp, #1176]
    127c:	str	x1, [x20, #48]
    1280:	cbz	x1, ef8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x414>
    1284:	mov	x2, x27
    1288:	add	x0, sp, #0x498
    128c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    1290:	b	ef8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x414>
    1294:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1298:	add	x3, x3, #0x0
    129c:	mov	w2, #0xb2                  	// #178
    12a0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    12a4:	add	x1, x1, #0x0
    12a8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    12ac:	add	x0, x0, #0x0
    12b0:	bl	0 <__assert_fail>
    12b4:	ldr	x1, [sp, #1176]
    12b8:	cbz	x1, ef8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x414>
    12bc:	add	x0, sp, #0x498
    12c0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    12c4:	b	ef8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x414>
    12c8:	str	xzr, [sp, #1056]
    12cc:	str	xzr, [sp, #1064]
    12d0:	mov	w0, #0x1                   	// #1
    12d4:	strb	w0, [sp, #1072]
    12d8:	strb	w0, [sp, #1073]
    12dc:	ldr	x0, [x20]
    12e0:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
    12e4:	add	x4, sp, #0x420
    12e8:	mov	x3, x0
    12ec:	mov	x2, x20
    12f0:	mov	w1, #0x21                  	// #33
    12f4:	mov	x0, x24
    12f8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    12fc:	mov	x20, x0
    1300:	b	f30 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x44c>
    1304:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1308:	add	x3, x3, #0x0
    130c:	mov	w2, #0xb2                  	// #178
    1310:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1314:	add	x1, x1, #0x0
    1318:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    131c:	add	x0, x0, #0x0
    1320:	bl	0 <__assert_fail>
    1324:	ldr	x1, [sp, #1208]
    1328:	cbz	x1, f74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x490>
    132c:	add	x0, sp, #0x4b8
    1330:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1334:	b	f74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x490>
    1338:	sub	x0, x19, #0x48
    133c:	b	fec <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x508>
    1340:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1344:	add	x3, x3, #0x0
    1348:	mov	w2, #0x73                  	// #115
    134c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1350:	add	x1, x1, #0x0
    1354:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1358:	add	x0, x0, #0x0
    135c:	bl	0 <__assert_fail>
    1360:	ldur	w0, [x19, #-4]
    1364:	and	x4, x0, #0xfffffff
    1368:	ubfiz	x1, x0, #1, #28
    136c:	add	x1, x1, x4
    1370:	ldr	x0, [sp, #104]
    1374:	sub	x1, x0, x1, lsl #3
    1378:	b	1078 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x594>
    137c:	mov	x0, x22
    1380:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    1384:	str	x0, [sp, #144]
    1388:	mov	x0, x22
    138c:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    1390:	str	xzr, [sp, #336]
    1394:	str	x0, [sp, #360]
    1398:	str	xzr, [sp, #368]
    139c:	str	wzr, [sp, #376]
    13a0:	strb	wzr, [sp, #380]
    13a4:	mov	w0, #0x2                   	// #2
    13a8:	strb	w0, [sp, #381]
    13ac:	strb	wzr, [sp, #382]
    13b0:	str	xzr, [sp, #384]
    13b4:	str	xzr, [sp, #392]
    13b8:	str	x22, [sp, #344]
    13bc:	ldr	x0, [sp, #144]
    13c0:	str	x0, [sp, #352]
    13c4:	add	x22, x22, #0x28
    13c8:	cmp	x0, x22
    13cc:	b.eq	1420 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x93c>  // b.none
    13d0:	ldr	x0, [x0]
    13d4:	tst	w0, #0x4
    13d8:	b.ne	14a8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9c4>  // b.any
    13dc:	ldr	x0, [sp, #144]
    13e0:	ldr	x1, [x0, #24]
    13e4:	str	x1, [sp, #1216]
    13e8:	cbz	x1, 22a0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x17bc>
    13ec:	mov	x2, #0x2                   	// #2
    13f0:	add	x0, sp, #0x4c0
    13f4:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    13f8:	ldr	x1, [sp, #336]
    13fc:	cbz	x1, 1408 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x924>
    1400:	mov	x0, x24
    1404:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1408:	ldr	x1, [sp, #1216]
    140c:	str	x1, [sp, #336]
    1410:	cbz	x1, 1420 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x93c>
    1414:	mov	x2, x24
    1418:	add	x0, sp, #0x4c0
    141c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    1420:	ldr	x0, [sp, #104]
    1424:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    1428:	ldur	x1, [x19, #-24]
    142c:	str	x1, [sp, #1024]
    1430:	add	x2, sp, #0x400
    1434:	mov	x3, #0x1                   	// #1
    1438:	mov	w1, w28
    143c:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    1440:	mov	x28, x0
    1444:	ldr	x0, [sp, #280]
    1448:	str	x0, [sp, #1000]
    144c:	str	x0, [sp, #1008]
    1450:	ldr	x0, [sp, #296]
    1454:	str	x0, [sp, #1016]
    1458:	add	x22, sp, #0x3d0
    145c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1460:	add	x1, x1, #0x0
    1464:	mov	x0, x22
    1468:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    146c:	mov	x5, #0x0                   	// #0
    1470:	mov	x4, x22
    1474:	add	x2, sp, #0x3e8
    1478:	mov	x3, #0x3                   	// #3
    147c:	mov	x1, x28
    1480:	mov	x0, x24
    1484:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1488:	mov	x1, x0
    148c:	ldr	x0, [sp, #104]
    1490:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1494:	ldr	x1, [sp, #336]
    1498:	cbz	x1, 14cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e8>
    149c:	mov	x0, x24
    14a0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    14a4:	b	14cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e8>
    14a8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    14ac:	add	x3, x3, #0x0
    14b0:	mov	w2, #0x8b                  	// #139
    14b4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    14b8:	add	x1, x1, #0x0
    14bc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    14c0:	add	x0, x0, #0x0
    14c4:	bl	0 <__assert_fail>
    14c8:	mov	w27, #0x0                   	// #0
    14cc:	orr	w27, w27, w20
    14d0:	ldurb	w0, [x19, #-8]
    14d4:	cmp	w0, #0x32
    14d8:	b.ne	1fe0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x14fc>  // b.any
    14dc:	ldur	x0, [x19, #-24]
    14e0:	ldrb	w2, [x0, #8]
    14e4:	mov	x1, x0
    14e8:	cmp	w2, #0x10
    14ec:	b.eq	17e0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xcfc>  // b.none
    14f0:	ldrb	w1, [x1, #8]
    14f4:	cmp	w1, #0xb
    14f8:	b.ne	20b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x15d4>  // b.any
    14fc:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1500:	mov	w20, w0
    1504:	sub	w0, w0, #0x9
    1508:	cmp	w0, #0x77
    150c:	b.hi	20c0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x15dc>  // b.pmore
    1510:	mov	w22, #0x0                   	// #0
    1514:	tst	x20, #0x7
    1518:	b.ne	1fe4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1500>  // b.any
    151c:	mov	w0, #0x8                   	// #8
    1520:	str	w0, [sp, #968]
    1524:	mov	x0, #0x55                  	// #85
    1528:	str	x0, [sp, #960]
    152c:	add	x8, sp, #0xd8
    1530:	add	x1, sp, #0x3c0
    1534:	mov	w0, w20
    1538:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    153c:	ldr	w0, [sp, #968]
    1540:	cmp	w0, #0x40
    1544:	b.ls	1554 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xa70>  // b.plast
    1548:	ldr	x0, [sp, #960]
    154c:	cbz	x0, 1554 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xa70>
    1550:	bl	0 <_ZdaPv>
    1554:	mov	w0, #0x8                   	// #8
    1558:	str	w0, [sp, #952]
    155c:	mov	x0, #0x33                  	// #51
    1560:	str	x0, [sp, #944]
    1564:	add	x8, sp, #0xe8
    1568:	add	x1, sp, #0x3b0
    156c:	mov	w0, w20
    1570:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    1574:	ldr	w0, [sp, #952]
    1578:	cmp	w0, #0x40
    157c:	b.ls	158c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xaa8>  // b.plast
    1580:	ldr	x0, [sp, #944]
    1584:	cbz	x0, 158c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xaa8>
    1588:	bl	0 <_ZdaPv>
    158c:	mov	w0, #0x8                   	// #8
    1590:	str	w0, [sp, #936]
    1594:	mov	x0, #0xf                   	// #15
    1598:	str	x0, [sp, #928]
    159c:	add	x8, sp, #0xf8
    15a0:	add	x1, sp, #0x3a0
    15a4:	mov	w0, w20
    15a8:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    15ac:	ldr	w0, [sp, #936]
    15b0:	cmp	w0, #0x40
    15b4:	b.ls	15c4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xae0>  // b.plast
    15b8:	ldr	x0, [sp, #928]
    15bc:	cbz	x0, 15c4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xae0>
    15c0:	bl	0 <_ZdaPv>
    15c4:	mov	w0, #0x8                   	// #8
    15c8:	str	w0, [sp, #920]
    15cc:	mov	x0, #0x1                   	// #1
    15d0:	str	x0, [sp, #912]
    15d4:	add	x8, sp, #0x108
    15d8:	add	x1, sp, #0x390
    15dc:	mov	w0, w20
    15e0:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    15e4:	ldr	w0, [sp, #920]
    15e8:	cmp	w0, #0x40
    15ec:	b.ls	15fc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xb18>  // b.plast
    15f0:	ldr	x0, [sp, #912]
    15f4:	cbz	x0, 15fc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xb18>
    15f8:	bl	0 <_ZdaPv>
    15fc:	sub	w1, w20, #0x8
    1600:	str	w20, [sp, #288]
    1604:	cmp	w20, #0x40
    1608:	b.hi	17ec <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xd08>  // b.pmore
    160c:	neg	w20, w20
    1610:	mov	x0, #0xffffffffffffffff    	// #-1
    1614:	lsr	x20, x0, x20
    1618:	and	x20, x20, x1
    161c:	str	x20, [sp, #280]
    1620:	sub	x28, x19, #0x18
    1624:	ldur	w1, [x19, #-4]
    1628:	ubfx	x1, x1, #0, #28
    162c:	cbz	w1, 17fc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xd18>
    1630:	ldurb	w0, [x19, #-1]
    1634:	tbz	w0, #6, 181c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xd38>
    1638:	ldur	x0, [x19, #-32]
    163c:	ldr	x20, [x0]
    1640:	cmp	w1, #0x1
    1644:	b.ls	1830 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xd4c>  // b.plast
    1648:	ldr	x0, [x0, #24]
    164c:	str	x0, [sp, #104]
    1650:	ldr	w1, [sp, #272]
    1654:	str	w1, [sp, #864]
    1658:	cmp	w1, #0x40
    165c:	b.hi	1850 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xd6c>  // b.pmore
    1660:	ldr	x0, [sp, #264]
    1664:	str	x0, [sp, #856]
    1668:	str	wzr, [sp, #864]
    166c:	str	w1, [sp, #880]
    1670:	str	x0, [sp, #872]
    1674:	add	x2, sp, #0xb8
    1678:	str	x2, [sp, #888]
    167c:	str	w1, [sp, #904]
    1680:	str	x0, [sp, #896]
    1684:	add	x1, sp, #0x378
    1688:	mov	x0, x20
    168c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1690:	ands	w22, w0, #0xff
    1694:	b.eq	16f8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc14>  // b.none
    1698:	ldr	w0, [sp, #288]
    169c:	str	w0, [sp, #832]
    16a0:	cmp	w0, #0x40
    16a4:	b.hi	1894 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xdb0>  // b.pmore
    16a8:	ldr	x0, [sp, #280]
    16ac:	str	x0, [sp, #824]
    16b0:	ldr	w0, [sp, #832]
    16b4:	str	wzr, [sp, #832]
    16b8:	str	w0, [sp, #848]
    16bc:	ldr	x0, [sp, #824]
    16c0:	str	x0, [sp, #840]
    16c4:	ldr	x1, [sp, #104]
    16c8:	add	x0, sp, #0x348
    16cc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    16d0:	and	w22, w0, #0xff
    16d4:	ldr	w0, [sp, #848]
    16d8:	cmp	w0, #0x40
    16dc:	b.ls	16ec <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc08>  // b.plast
    16e0:	ldr	x0, [sp, #840]
    16e4:	cbz	x0, 16ec <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc08>
    16e8:	bl	0 <_ZdaPv>
    16ec:	ldr	w0, [sp, #832]
    16f0:	cmp	w0, #0x40
    16f4:	b.hi	18a4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xdc0>  // b.pmore
    16f8:	ldr	w0, [sp, #904]
    16fc:	cmp	w0, #0x40
    1700:	b.ls	1710 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc2c>  // b.plast
    1704:	ldr	x0, [sp, #896]
    1708:	cbz	x0, 1710 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc2c>
    170c:	bl	0 <_ZdaPv>
    1710:	ldr	w0, [sp, #880]
    1714:	cmp	w0, #0x40
    1718:	b.ls	1728 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc44>  // b.plast
    171c:	ldr	x0, [sp, #872]
    1720:	cbz	x0, 1728 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc44>
    1724:	bl	0 <_ZdaPv>
    1728:	ldr	w0, [sp, #864]
    172c:	cmp	w0, #0x40
    1730:	b.ls	1740 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc5c>  // b.plast
    1734:	ldr	x0, [sp, #856]
    1738:	cbz	x0, 1740 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc5c>
    173c:	bl	0 <_ZdaPv>
    1740:	cbnz	w22, 18b4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xdd0>
    1744:	ldr	w0, [sp, #288]
    1748:	cmp	w0, #0x40
    174c:	b.ls	175c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc78>  // b.plast
    1750:	ldr	x0, [sp, #280]
    1754:	cbz	x0, 175c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc78>
    1758:	bl	0 <_ZdaPv>
    175c:	ldr	w0, [sp, #272]
    1760:	cmp	w0, #0x40
    1764:	b.ls	1774 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc90>  // b.plast
    1768:	ldr	x0, [sp, #264]
    176c:	cbz	x0, 1774 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc90>
    1770:	bl	0 <_ZdaPv>
    1774:	ldr	w0, [sp, #256]
    1778:	cmp	w0, #0x40
    177c:	b.ls	178c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xca8>  // b.plast
    1780:	ldr	x0, [sp, #248]
    1784:	cbz	x0, 178c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xca8>
    1788:	bl	0 <_ZdaPv>
    178c:	ldr	w0, [sp, #240]
    1790:	cmp	w0, #0x40
    1794:	b.ls	17a4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xcc0>  // b.plast
    1798:	ldr	x0, [sp, #232]
    179c:	cbz	x0, 17a4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xcc0>
    17a0:	bl	0 <_ZdaPv>
    17a4:	ldr	w0, [sp, #224]
    17a8:	cmp	w0, #0x40
    17ac:	b.ls	1fe4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1500>  // b.plast
    17b0:	ldr	x0, [sp, #216]
    17b4:	cbz	x0, 1fe4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1500>
    17b8:	bl	0 <_ZdaPv>
    17bc:	b	1fe4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1500>
    17c0:	mov	w27, #0x0                   	// #0
    17c4:	b	14cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e8>
    17c8:	mov	w27, #0x0                   	// #0
    17cc:	b	14cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e8>
    17d0:	mov	w27, #0x0                   	// #0
    17d4:	b	14cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e8>
    17d8:	mov	w27, #0x0                   	// #0
    17dc:	b	14cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9e8>
    17e0:	ldr	x1, [x0, #16]
    17e4:	ldr	x1, [x1]
    17e8:	b	14f0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xa0c>
    17ec:	mov	w2, #0x0                   	// #0
    17f0:	add	x0, sp, #0x118
    17f4:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    17f8:	b	1620 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xb3c>
    17fc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1800:	add	x3, x3, #0x0
    1804:	mov	w2, #0xaa                  	// #170
    1808:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    180c:	add	x1, x1, #0x0
    1810:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1814:	add	x0, x0, #0x0
    1818:	bl	0 <__assert_fail>
    181c:	mov	w2, w1
    1820:	ubfiz	x0, x1, #1, #28
    1824:	add	x0, x0, x2
    1828:	sub	x0, x28, x0, lsl #3
    182c:	b	163c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xb58>
    1830:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1834:	add	x3, x3, #0x0
    1838:	mov	w2, #0xaa                  	// #170
    183c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1840:	add	x1, x1, #0x0
    1844:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1848:	add	x0, x0, #0x0
    184c:	bl	0 <__assert_fail>
    1850:	add	x1, sp, #0x108
    1854:	add	x0, sp, #0x358
    1858:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    185c:	ldr	w1, [sp, #864]
    1860:	ldr	x0, [sp, #856]
    1864:	str	wzr, [sp, #864]
    1868:	str	w1, [sp, #880]
    186c:	str	x0, [sp, #872]
    1870:	add	x2, sp, #0xb8
    1874:	str	x2, [sp, #888]
    1878:	str	w1, [sp, #904]
    187c:	cmp	w1, #0x40
    1880:	b.ls	1680 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xb9c>  // b.plast
    1884:	add	x1, sp, #0x368
    1888:	add	x0, sp, #0x380
    188c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1890:	b	1684 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xba0>
    1894:	add	x1, sp, #0x118
    1898:	add	x0, sp, #0x338
    189c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    18a0:	b	16b0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xbcc>
    18a4:	ldr	x0, [sp, #824]
    18a8:	cbz	x0, 16f8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc14>
    18ac:	bl	0 <_ZdaPv>
    18b0:	b	16f8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc14>
    18b4:	ldr	x20, [sp, #184]
    18b8:	add	x0, sp, #0xc0
    18bc:	str	x0, [sp, #800]
    18c0:	str	x0, [sp, #296]
    18c4:	mov	w1, #0x40                  	// #64
    18c8:	str	w1, [sp, #312]
    18cc:	mov	x1, #0x4                   	// #4
    18d0:	str	x1, [sp, #304]
    18d4:	str	x0, [sp, #320]
    18d8:	ldr	w0, [sp, #256]
    18dc:	str	w0, [sp, #776]
    18e0:	cmp	w0, #0x40
    18e4:	b.hi	1c00 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x111c>  // b.pmore
    18e8:	ldr	x0, [sp, #248]
    18ec:	str	x0, [sp, #768]
    18f0:	ldr	w0, [sp, #776]
    18f4:	str	wzr, [sp, #776]
    18f8:	str	w0, [sp, #792]
    18fc:	ldr	x0, [sp, #768]
    1900:	str	x0, [sp, #784]
    1904:	ldr	x0, [sp, #296]
    1908:	str	x0, [sp, #336]
    190c:	ldr	w0, [sp, #312]
    1910:	str	w0, [sp, #352]
    1914:	cmp	w0, #0x40
    1918:	b.hi	1c10 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x112c>  // b.pmore
    191c:	ldr	x0, [sp, #304]
    1920:	str	x0, [sp, #344]
    1924:	ldr	x0, [sp, #320]
    1928:	str	x0, [sp, #360]
    192c:	ldr	w0, [sp, #792]
    1930:	str	w0, [sp, #376]
    1934:	cmp	w0, #0x40
    1938:	b.hi	1c20 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x113c>  // b.pmore
    193c:	ldr	x0, [sp, #784]
    1940:	str	x0, [sp, #368]
    1944:	mov	x1, x24
    1948:	mov	x0, x20
    194c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1950:	and	w20, w0, #0xff
    1954:	ldr	w0, [sp, #376]
    1958:	cmp	w0, #0x40
    195c:	b.ls	196c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xe88>  // b.plast
    1960:	ldr	x0, [sp, #368]
    1964:	cbz	x0, 196c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xe88>
    1968:	bl	0 <_ZdaPv>
    196c:	ldr	w0, [sp, #352]
    1970:	cmp	w0, #0x40
    1974:	b.ls	1984 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xea0>  // b.plast
    1978:	ldr	x0, [sp, #344]
    197c:	cbz	x0, 1984 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xea0>
    1980:	bl	0 <_ZdaPv>
    1984:	ldr	w0, [sp, #792]
    1988:	cmp	w0, #0x40
    198c:	b.ls	199c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xeb8>  // b.plast
    1990:	ldr	x0, [sp, #784]
    1994:	cbz	x0, 199c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xeb8>
    1998:	bl	0 <_ZdaPv>
    199c:	ldr	w0, [sp, #776]
    19a0:	cmp	w0, #0x40
    19a4:	b.ls	19b4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xed0>  // b.plast
    19a8:	ldr	x0, [sp, #768]
    19ac:	cbz	x0, 19b4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xed0>
    19b0:	bl	0 <_ZdaPv>
    19b4:	ldr	w0, [sp, #312]
    19b8:	cmp	w0, #0x40
    19bc:	b.ls	19cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xee8>  // b.plast
    19c0:	ldr	x0, [sp, #304]
    19c4:	cbz	x0, 19cc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xee8>
    19c8:	bl	0 <_ZdaPv>
    19cc:	cbz	w20, 1bf8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1114>
    19d0:	ldr	x20, [sp, #192]
    19d4:	ldr	w0, [sp, #240]
    19d8:	str	w0, [sp, #720]
    19dc:	cmp	w0, #0x40
    19e0:	b.hi	1c30 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x114c>  // b.pmore
    19e4:	ldr	x1, [sp, #232]
    19e8:	str	x1, [sp, #712]
    19ec:	str	wzr, [sp, #720]
    19f0:	str	w0, [sp, #736]
    19f4:	str	x1, [sp, #728]
    19f8:	add	x2, sp, #0xc8
    19fc:	str	x2, [sp, #744]
    1a00:	str	w0, [sp, #760]
    1a04:	str	x1, [sp, #752]
    1a08:	add	x0, sp, #0xc8
    1a0c:	str	x0, [sp, #688]
    1a10:	mov	w0, #0x40                  	// #64
    1a14:	str	w0, [sp, #704]
    1a18:	mov	x0, #0x2                   	// #2
    1a1c:	str	x0, [sp, #696]
    1a20:	ldr	w0, [sp, #240]
    1a24:	str	w0, [sp, #664]
    1a28:	cmp	w0, #0x40
    1a2c:	b.hi	1c74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1190>  // b.pmore
    1a30:	ldr	x0, [sp, #232]
    1a34:	str	x0, [sp, #656]
    1a38:	ldr	w0, [sp, #664]
    1a3c:	str	wzr, [sp, #664]
    1a40:	str	w0, [sp, #680]
    1a44:	ldr	x0, [sp, #656]
    1a48:	str	x0, [sp, #672]
    1a4c:	ldr	x0, [sp, #688]
    1a50:	str	x0, [sp, #296]
    1a54:	ldr	w0, [sp, #704]
    1a58:	str	w0, [sp, #312]
    1a5c:	cmp	w0, #0x40
    1a60:	b.hi	1c84 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x11a0>  // b.pmore
    1a64:	ldr	x0, [sp, #696]
    1a68:	str	x0, [sp, #304]
    1a6c:	ldr	w0, [sp, #680]
    1a70:	str	w0, [sp, #328]
    1a74:	cmp	w0, #0x40
    1a78:	b.hi	1c94 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x11b0>  // b.pmore
    1a7c:	ldr	x0, [sp, #672]
    1a80:	str	x0, [sp, #320]
    1a84:	ldr	x0, [sp, #744]
    1a88:	str	x0, [sp, #336]
    1a8c:	ldr	w0, [sp, #760]
    1a90:	str	w0, [sp, #352]
    1a94:	cmp	w0, #0x40
    1a98:	b.hi	1ca4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x11c0>  // b.pmore
    1a9c:	ldr	x0, [sp, #752]
    1aa0:	str	x0, [sp, #344]
    1aa4:	ldr	x0, [sp, #296]
    1aa8:	str	x0, [sp, #360]
    1aac:	ldr	w0, [sp, #312]
    1ab0:	str	w0, [sp, #376]
    1ab4:	cmp	w0, #0x40
    1ab8:	b.hi	1cb4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x11d0>  // b.pmore
    1abc:	ldr	x0, [sp, #304]
    1ac0:	str	x0, [sp, #368]
    1ac4:	ldr	w0, [sp, #328]
    1ac8:	str	w0, [sp, #392]
    1acc:	cmp	w0, #0x40
    1ad0:	b.hi	1cc4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x11e0>  // b.pmore
    1ad4:	ldr	x0, [sp, #320]
    1ad8:	str	x0, [sp, #384]
    1adc:	mov	x1, x24
    1ae0:	mov	x0, x20
    1ae4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ae8:	and	w20, w0, #0xff
    1aec:	ldr	w0, [sp, #392]
    1af0:	cmp	w0, #0x40
    1af4:	b.ls	1b04 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1020>  // b.plast
    1af8:	ldr	x0, [sp, #384]
    1afc:	cbz	x0, 1b04 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1020>
    1b00:	bl	0 <_ZdaPv>
    1b04:	ldr	w0, [sp, #376]
    1b08:	cmp	w0, #0x40
    1b0c:	b.ls	1b1c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1038>  // b.plast
    1b10:	ldr	x0, [sp, #368]
    1b14:	cbz	x0, 1b1c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1038>
    1b18:	bl	0 <_ZdaPv>
    1b1c:	ldr	w0, [sp, #352]
    1b20:	cmp	w0, #0x40
    1b24:	b.ls	1b34 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1050>  // b.plast
    1b28:	ldr	x0, [sp, #344]
    1b2c:	cbz	x0, 1b34 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1050>
    1b30:	bl	0 <_ZdaPv>
    1b34:	ldr	w0, [sp, #328]
    1b38:	cmp	w0, #0x40
    1b3c:	b.ls	1b4c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1068>  // b.plast
    1b40:	ldr	x0, [sp, #320]
    1b44:	cbz	x0, 1b4c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1068>
    1b48:	bl	0 <_ZdaPv>
    1b4c:	ldr	w0, [sp, #312]
    1b50:	cmp	w0, #0x40
    1b54:	b.ls	1b64 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1080>  // b.plast
    1b58:	ldr	x0, [sp, #304]
    1b5c:	cbz	x0, 1b64 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1080>
    1b60:	bl	0 <_ZdaPv>
    1b64:	ldr	w0, [sp, #680]
    1b68:	cmp	w0, #0x40
    1b6c:	b.ls	1b7c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1098>  // b.plast
    1b70:	ldr	x0, [sp, #672]
    1b74:	cbz	x0, 1b7c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1098>
    1b78:	bl	0 <_ZdaPv>
    1b7c:	ldr	w0, [sp, #664]
    1b80:	cmp	w0, #0x40
    1b84:	b.ls	1b94 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10b0>  // b.plast
    1b88:	ldr	x0, [sp, #656]
    1b8c:	cbz	x0, 1b94 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10b0>
    1b90:	bl	0 <_ZdaPv>
    1b94:	ldr	w0, [sp, #704]
    1b98:	cmp	w0, #0x40
    1b9c:	b.ls	1bac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10c8>  // b.plast
    1ba0:	ldr	x0, [sp, #696]
    1ba4:	cbz	x0, 1bac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10c8>
    1ba8:	bl	0 <_ZdaPv>
    1bac:	ldr	w0, [sp, #760]
    1bb0:	cmp	w0, #0x40
    1bb4:	b.ls	1bc4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10e0>  // b.plast
    1bb8:	ldr	x0, [sp, #752]
    1bbc:	cbz	x0, 1bc4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10e0>
    1bc0:	bl	0 <_ZdaPv>
    1bc4:	ldr	w0, [sp, #736]
    1bc8:	cmp	w0, #0x40
    1bcc:	b.ls	1bdc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10f8>  // b.plast
    1bd0:	ldr	x0, [sp, #728]
    1bd4:	cbz	x0, 1bdc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10f8>
    1bd8:	bl	0 <_ZdaPv>
    1bdc:	ldr	w0, [sp, #720]
    1be0:	cmp	w0, #0x40
    1be4:	b.ls	1bf4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1110>  // b.plast
    1be8:	ldr	x0, [sp, #712]
    1bec:	cbz	x0, 1bf4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1110>
    1bf0:	bl	0 <_ZdaPv>
    1bf4:	cbnz	w20, 1cd4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x11f0>
    1bf8:	mov	w22, #0x0                   	// #0
    1bfc:	b	1744 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc60>
    1c00:	add	x1, sp, #0xf8
    1c04:	add	x0, sp, #0x300
    1c08:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1c0c:	b	18f0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xe0c>
    1c10:	ldr	x1, [sp, #96]
    1c14:	add	x0, x24, #0x8
    1c18:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1c1c:	b	1924 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xe40>
    1c20:	add	x1, sp, #0x310
    1c24:	add	x0, x24, #0x20
    1c28:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1c2c:	b	1944 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xe60>
    1c30:	add	x1, sp, #0xe8
    1c34:	add	x0, sp, #0x2c8
    1c38:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1c3c:	ldr	w0, [sp, #720]
    1c40:	ldr	x1, [sp, #712]
    1c44:	str	wzr, [sp, #720]
    1c48:	str	w0, [sp, #736]
    1c4c:	str	x1, [sp, #728]
    1c50:	add	x2, sp, #0xc8
    1c54:	str	x2, [sp, #744]
    1c58:	str	w0, [sp, #760]
    1c5c:	cmp	w0, #0x40
    1c60:	b.ls	1a04 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xf20>  // b.plast
    1c64:	add	x1, sp, #0x2d8
    1c68:	add	x0, sp, #0x2f0
    1c6c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1c70:	b	1a08 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xf24>
    1c74:	add	x1, sp, #0xe8
    1c78:	add	x0, sp, #0x290
    1c7c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1c80:	b	1a38 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xf54>
    1c84:	add	x1, sp, #0x2b8
    1c88:	ldr	x0, [sp, #96]
    1c8c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1c90:	b	1a6c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xf88>
    1c94:	add	x1, sp, #0x2a0
    1c98:	add	x0, x26, #0x18
    1c9c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1ca0:	b	1a84 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xfa0>
    1ca4:	add	x1, sp, #0x2f0
    1ca8:	add	x0, x24, #0x8
    1cac:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1cb0:	b	1aa4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xfc0>
    1cb4:	ldr	x1, [sp, #96]
    1cb8:	add	x0, x24, #0x20
    1cbc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1cc0:	b	1ac4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xfe0>
    1cc4:	add	x1, x26, #0x18
    1cc8:	add	x0, x24, #0x30
    1ccc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1cd0:	b	1adc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xff8>
    1cd4:	add	x0, sp, #0xd0
    1cd8:	str	x0, [sp, #640]
    1cdc:	str	x26, [sp, #648]
    1ce0:	add	x1, sp, #0x280
    1ce4:	ldr	x0, [sp, #200]
    1ce8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1cec:	and	w0, w0, #0xff
    1cf0:	cbz	w0, 1bf8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1114>
    1cf4:	ldr	x20, [sp, #296]
    1cf8:	ldr	x0, [sp, #208]
    1cfc:	str	x0, [sp, #616]
    1d00:	mov	w0, #0x40                  	// #64
    1d04:	str	w0, [sp, #632]
    1d08:	mov	x0, #0x1                   	// #1
    1d0c:	str	x0, [sp, #624]
    1d10:	ldr	w0, [sp, #224]
    1d14:	str	w0, [sp, #592]
    1d18:	cmp	w0, #0x40
    1d1c:	b.hi	1f00 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x141c>  // b.pmore
    1d20:	ldr	x0, [sp, #216]
    1d24:	str	x0, [sp, #584]
    1d28:	ldr	w0, [sp, #592]
    1d2c:	str	wzr, [sp, #592]
    1d30:	str	w0, [sp, #608]
    1d34:	ldr	x0, [sp, #584]
    1d38:	str	x0, [sp, #600]
    1d3c:	ldr	x0, [sp, #616]
    1d40:	str	x0, [sp, #336]
    1d44:	ldr	w0, [sp, #632]
    1d48:	str	w0, [sp, #352]
    1d4c:	cmp	w0, #0x40
    1d50:	b.hi	1f10 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x142c>  // b.pmore
    1d54:	ldr	x0, [sp, #624]
    1d58:	str	x0, [sp, #344]
    1d5c:	ldr	w0, [sp, #608]
    1d60:	str	w0, [sp, #368]
    1d64:	cmp	w0, #0x40
    1d68:	b.hi	1f20 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x143c>  // b.pmore
    1d6c:	ldr	x0, [sp, #600]
    1d70:	str	x0, [sp, #360]
    1d74:	mov	x1, x24
    1d78:	mov	x0, x20
    1d7c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1d80:	and	w22, w0, #0xff
    1d84:	ldr	w0, [sp, #368]
    1d88:	cmp	w0, #0x40
    1d8c:	b.ls	1d9c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12b8>  // b.plast
    1d90:	ldr	x0, [sp, #360]
    1d94:	cbz	x0, 1d9c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12b8>
    1d98:	bl	0 <_ZdaPv>
    1d9c:	ldr	w0, [sp, #352]
    1da0:	cmp	w0, #0x40
    1da4:	b.ls	1db4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12d0>  // b.plast
    1da8:	ldr	x0, [sp, #344]
    1dac:	cbz	x0, 1db4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12d0>
    1db0:	bl	0 <_ZdaPv>
    1db4:	ldr	w0, [sp, #608]
    1db8:	cmp	w0, #0x40
    1dbc:	b.ls	1dcc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12e8>  // b.plast
    1dc0:	ldr	x0, [sp, #600]
    1dc4:	cbz	x0, 1dcc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12e8>
    1dc8:	bl	0 <_ZdaPv>
    1dcc:	ldr	w0, [sp, #592]
    1dd0:	cmp	w0, #0x40
    1dd4:	b.hi	1f30 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x144c>  // b.pmore
    1dd8:	ldr	w0, [sp, #632]
    1ddc:	cmp	w0, #0x40
    1de0:	b.hi	1f40 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x145c>  // b.pmore
    1de4:	cbz	w22, 1bf8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1114>
    1de8:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    1dec:	ldr	x0, [x0]
    1df0:	ldrb	w0, [x0]
    1df4:	cbnz	w0, 1f50 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x146c>
    1df8:	mov	x0, x28
    1dfc:	bl	0 <_ZNK4llvm5Value10getContextEv>
    1e00:	str	xzr, [sp, #336]
    1e04:	str	x0, [sp, #360]
    1e08:	str	xzr, [sp, #368]
    1e0c:	str	wzr, [sp, #376]
    1e10:	strb	wzr, [sp, #380]
    1e14:	mov	w0, #0x2                   	// #2
    1e18:	strb	w0, [sp, #381]
    1e1c:	strb	wzr, [sp, #382]
    1e20:	str	xzr, [sp, #384]
    1e24:	str	xzr, [sp, #392]
    1e28:	ldr	x0, [x19, #16]
    1e2c:	str	x0, [sp, #344]
    1e30:	str	x19, [sp, #352]
    1e34:	add	x0, x0, #0x28
    1e38:	cmp	x19, x0
    1e3c:	b.eq	1fc0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x14dc>  // b.none
    1e40:	ldr	x1, [x19, #24]
    1e44:	str	x1, [sp, #1224]
    1e48:	cbz	x1, 2294 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x17b0>
    1e4c:	mov	x2, #0x2                   	// #2
    1e50:	add	x0, sp, #0x4c8
    1e54:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    1e58:	ldr	x1, [sp, #336]
    1e5c:	cbz	x1, 1e68 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1384>
    1e60:	mov	x0, x24
    1e64:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1e68:	ldr	x1, [sp, #1224]
    1e6c:	str	x1, [sp, #336]
    1e70:	cbz	x1, 1e80 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x139c>
    1e74:	mov	x2, x24
    1e78:	add	x0, sp, #0x4c8
    1e7c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    1e80:	ldr	x0, [sp, #128]
    1e84:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    1e88:	ldur	x1, [x19, #-24]
    1e8c:	str	x1, [sp, #576]
    1e90:	mov	x19, #0x1                   	// #1
    1e94:	add	x2, sp, #0x240
    1e98:	mov	x3, x19
    1e9c:	mov	w1, #0x27                  	// #39
    1ea0:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    1ea4:	str	x0, [sp, #104]
    1ea8:	ldr	x0, [sp, #208]
    1eac:	str	x0, [sp, #568]
    1eb0:	add	x20, sp, #0x220
    1eb4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1eb8:	add	x1, x1, #0x0
    1ebc:	mov	x0, x20
    1ec0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ec4:	mov	x5, #0x0                   	// #0
    1ec8:	mov	x4, x20
    1ecc:	add	x2, sp, #0x238
    1ed0:	mov	x3, x19
    1ed4:	ldr	x1, [sp, #104]
    1ed8:	mov	x0, x24
    1edc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ee0:	mov	x1, x0
    1ee4:	mov	x0, x28
    1ee8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1eec:	ldr	x1, [sp, #336]
    1ef0:	cbz	x1, 1744 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc60>
    1ef4:	mov	x0, x24
    1ef8:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1efc:	b	1744 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc60>
    1f00:	add	x1, sp, #0xd8
    1f04:	add	x0, sp, #0x248
    1f08:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1f0c:	b	1d28 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1244>
    1f10:	add	x1, sp, #0x270
    1f14:	add	x0, x24, #0x8
    1f18:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1f1c:	b	1d5c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1278>
    1f20:	add	x1, sp, #0x258
    1f24:	ldr	x0, [sp, #168]
    1f28:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1f2c:	b	1d74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1290>
    1f30:	ldr	x0, [sp, #584]
    1f34:	cbz	x0, 1dd8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12f4>
    1f38:	bl	0 <_ZdaPv>
    1f3c:	b	1dd8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12f4>
    1f40:	ldr	x0, [sp, #624]
    1f44:	cbz	x0, 1de4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1300>
    1f48:	bl	0 <_ZdaPv>
    1f4c:	b	1de4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1300>
    1f50:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f54:	add	x0, x0, #0x0
    1f58:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1f5c:	and	w0, w0, #0xff
    1f60:	cbz	w0, 1df8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1314>
    1f64:	bl	0 <_ZN4llvm4dbgsEv>
    1f68:	ldr	x2, [x0, #24]
    1f6c:	ldr	x1, [x0, #16]
    1f70:	sub	x1, x1, x2
    1f74:	cmp	x1, #0x1d
    1f78:	b.ls	1fac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x14c8>  // b.plast
    1f7c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f80:	add	x1, x1, #0x0
    1f84:	ldp	x4, x5, [x1]
    1f88:	stp	x4, x5, [x2]
    1f8c:	ldr	x3, [x1, #16]
    1f90:	str	x3, [x2, #16]
    1f94:	ldur	x1, [x1, #22]
    1f98:	stur	x1, [x2, #22]
    1f9c:	ldr	x1, [x0, #24]
    1fa0:	add	x1, x1, #0x1e
    1fa4:	str	x1, [x0, #24]
    1fa8:	b	1df8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1314>
    1fac:	mov	x2, #0x1e                  	// #30
    1fb0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fb4:	add	x1, x1, #0x0
    1fb8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1fbc:	b	1df8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1314>
    1fc0:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fc4:	add	x3, x3, #0x0
    1fc8:	mov	w2, #0x8e                  	// #142
    1fcc:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fd0:	add	x1, x1, #0x0
    1fd4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fd8:	add	x0, x0, #0x0
    1fdc:	bl	0 <__assert_fail>
    1fe0:	mov	w22, #0x0                   	// #0
    1fe4:	cmp	w22, #0x0
    1fe8:	ldr	w0, [sp, #160]
    1fec:	ccmp	w0, #0x0, #0x0, eq  // eq = none
    1ff0:	cset	w0, ne  // ne = any
    1ff4:	orr	w0, w27, w0
    1ff8:	str	w0, [sp, #160]
    1ffc:	ldr	x0, [sp, #112]
    2000:	ldr	x19, [x0]
    2004:	and	x19, x19, #0xfffffffffffffff8
    2008:	cmp	x21, x19
    200c:	b.eq	c10 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x12c>  // b.none
    2010:	str	x19, [sp, #112]
    2014:	ldr	x0, [x19]
    2018:	tst	w0, #0x4
    201c:	b.ne	d74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x290>  // b.any
    2020:	sub	x20, x19, #0x18
    2024:	str	x20, [sp, #128]
    2028:	ldr	x1, [sp, #152]
    202c:	mov	x0, x20
    2030:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2034:	mov	w22, w0
    2038:	ands	w0, w0, #0xff
    203c:	str	w0, [sp, #104]
    2040:	b.ne	2058 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1574>  // b.any
    2044:	add	x1, sp, #0x468
    2048:	mov	x0, x20
    204c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2050:	ands	w20, w0, #0xff
    2054:	b.eq	fac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x4c8>  // b.none
    2058:	ldur	x0, [x19, #-24]
    205c:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2060:	str	xzr, [sp, #296]
    2064:	str	w0, [sp, #312]
    2068:	cbz	w0, d94 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x2b0>
    206c:	cmp	w0, #0x40
    2070:	b.hi	db4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x2d0>  // b.pmore
    2074:	str	xzr, [sp, #304]
    2078:	strb	w22, [sp, #320]
    207c:	strb	wzr, [sp, #321]
    2080:	ldr	w0, [sp, #104]
    2084:	cbz	w0, de8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x304>
    2088:	ldurb	w0, [x19, #-8]
    208c:	sub	w0, w0, #0x25
    2090:	cmp	w0, #0x11
    2094:	b.hi	dc8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x2e4>  // b.pmore
    2098:	mov	x1, x26
    209c:	ldr	x0, [sp, #128]
    20a0:	bl	4bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
    20a4:	ands	w20, w0, #0xff
    20a8:	b.eq	f94 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x4b0>  // b.none
    20ac:	ldrb	w20, [sp, #321]
    20b0:	cbnz	w20, e0c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x328>
    20b4:	b	f94 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x4b0>
    20b8:	mov	w22, #0x0                   	// #0
    20bc:	b	1fe4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1500>
    20c0:	mov	w22, #0x0                   	// #0
    20c4:	b	1fe4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1500>
    20c8:	ldr	w0, [sp, #160]
    20cc:	cbz	w0, 21a4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x16c0>
    20d0:	ldr	x19, [x25, #80]
    20d4:	cmp	x21, x19
    20d8:	b.eq	21ac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x16c8>  // b.none
    20dc:	ldr	x0, [x19]
    20e0:	tst	w0, #0x4
    20e4:	b.ne	217c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1698>  // b.any
    20e8:	mov	x1, #0x0                   	// #0
    20ec:	sub	x0, x19, #0x18
    20f0:	bl	0 <_ZN4llvm27SimplifyInstructionsInBlockEPNS_10BasicBlockEPKNS_17TargetLibraryInfoE>
    20f4:	ldr	x19, [x19, #8]
    20f8:	cmp	x21, x19
    20fc:	b.ne	20dc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x15f8>  // b.any
    2100:	ldp	x27, x28, [sp, #80]
    2104:	ldr	w0, [sp, #164]
    2108:	ldr	w1, [sp, #160]
    210c:	orr	w19, w0, w1
    2110:	ldr	x0, [sp, #520]
    2114:	cbz	x0, 211c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1638>
    2118:	bl	0 <_ZdlPv>
    211c:	ldr	w1, [sp, #512]
    2120:	cbz	w1, 213c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1658>
    2124:	ldr	x0, [sp, #496]
    2128:	ubfiz	x2, x1, #4, #32
    212c:	add	x2, x0, x2
    2130:	add	x0, x0, #0x10
    2134:	cmp	x2, x0
    2138:	b.ne	2130 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x164c>  // b.any
    213c:	ubfiz	x1, x1, #4, #32
    2140:	ldr	x0, [sp, #496]
    2144:	bl	0 <_ZdlPvm>
    2148:	ldr	x0, [sp, #432]
    214c:	add	x1, sp, #0x1c0
    2150:	cmp	x0, x1
    2154:	b.eq	215c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1678>  // b.none
    2158:	bl	0 <free>
    215c:	mov	w0, w19
    2160:	ldp	x19, x20, [sp, #16]
    2164:	ldp	x21, x22, [sp, #32]
    2168:	ldp	x23, x24, [sp, #48]
    216c:	ldp	x25, x26, [sp, #64]
    2170:	ldp	x29, x30, [sp]
    2174:	add	sp, sp, #0x4d0
    2178:	ret
    217c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2180:	add	x3, x3, #0x0
    2184:	mov	w2, #0x8b                  	// #139
    2188:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    218c:	add	x1, x1, #0x0
    2190:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2194:	add	x0, x0, #0x0
    2198:	bl	0 <__assert_fail>
    219c:	str	wzr, [sp, #160]
    21a0:	b	2104 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1620>
    21a4:	ldp	x27, x28, [sp, #80]
    21a8:	b	2104 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1620>
    21ac:	ldp	x27, x28, [sp, #80]
    21b0:	b	2104 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1620>
    21b4:	str	xzr, [sp, #1184]
    21b8:	str	xzr, [sp, #1192]
    21bc:	mov	w0, #0x1                   	// #1
    21c0:	strb	w0, [sp, #1200]
    21c4:	strb	w0, [sp, #1201]
    21c8:	mov	x4, #0x0                   	// #0
    21cc:	add	x3, sp, #0x4a0
    21d0:	mov	x1, x20
    21d4:	mov	w0, #0x27                  	// #39
    21d8:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    21dc:	mov	x20, x0
    21e0:	ldr	x0, [sp, #344]
    21e4:	cbz	x0, 2234 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1750>
    21e8:	ldr	x22, [sp, #352]
    21ec:	mov	x1, x20
    21f0:	add	x0, x0, #0x28
    21f4:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    21f8:	add	x0, x20, #0x18
    21fc:	ldr	x2, [x22]
    2200:	and	x2, x2, #0xfffffffffffffff8
    2204:	str	x22, [x20, #32]
    2208:	ldr	x1, [x20, #24]
    220c:	and	x1, x1, #0x7
    2210:	orr	x1, x1, x2
    2214:	str	x1, [x20, #24]
    2218:	str	x0, [x2, #8]
    221c:	ldr	x1, [x22]
    2220:	tst	x0, #0x7
    2224:	b.ne	1304 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x820>  // b.any
    2228:	and	x1, x1, #0x7
    222c:	orr	x0, x0, x1
    2230:	str	x0, [x22]
    2234:	add	x1, sp, #0x408
    2238:	mov	x0, x20
    223c:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    2240:	ldr	x1, [sp, #336]
    2244:	cbz	x1, f74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x490>
    2248:	str	x1, [sp, #1208]
    224c:	add	x22, sp, #0x4b8
    2250:	mov	x2, #0x2                   	// #2
    2254:	mov	x0, x22
    2258:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    225c:	add	x27, x20, #0x30
    2260:	cmp	x27, x22
    2264:	b.eq	1324 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x840>  // b.none
    2268:	ldr	x1, [x20, #48]
    226c:	cbz	x1, 2278 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1794>
    2270:	mov	x0, x27
    2274:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2278:	ldr	x1, [sp, #1208]
    227c:	str	x1, [x20, #48]
    2280:	cbz	x1, f74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x490>
    2284:	mov	x2, x27
    2288:	add	x0, sp, #0x4b8
    228c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    2290:	b	f74 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x490>
    2294:	ldr	x0, [sp, #1224]
    2298:	str	x0, [sp, #336]
    229c:	b	1e80 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x139c>
    22a0:	ldr	x0, [sp, #1216]
    22a4:	str	x0, [sp, #336]
    22a8:	b	1420 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x93c>
    22ac:	ldr	x0, [sp, #1168]
    22b0:	str	x0, [sp, #336]
    22b4:	b	e98 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x3b4>

00000000000022b8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE>:
    22b8:	stp	x29, x30, [sp, #-240]!
    22bc:	mov	x29, sp
    22c0:	stp	x19, x20, [sp, #16]
    22c4:	stp	x21, x22, [sp, #32]
    22c8:	stp	x23, x24, [sp, #48]
    22cc:	stp	x25, x26, [sp, #64]
    22d0:	mov	x22, x0
    22d4:	mov	x21, x1
    22d8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    22dc:	mov	x19, x0
    22e0:	str	xzr, [sp, #136]
    22e4:	str	wzr, [sp, #160]
    22e8:	str	xzr, [sp, #144]
    22ec:	str	wzr, [sp, #152]
    22f0:	str	wzr, [sp, #156]
    22f4:	str	xzr, [sp, #168]
    22f8:	str	wzr, [sp, #192]
    22fc:	str	xzr, [sp, #176]
    2300:	str	wzr, [sp, #184]
    2304:	str	wzr, [sp, #188]
    2308:	str	xzr, [sp, #200]
    230c:	str	wzr, [sp, #224]
    2310:	str	xzr, [sp, #208]
    2314:	str	wzr, [sp, #216]
    2318:	str	wzr, [sp, #220]
    231c:	strb	wzr, [sp, #232]
    2320:	add	x8, sp, #0x68
    2324:	add	x2, sp, #0x88
    2328:	mov	x1, x21
    232c:	add	x0, x0, #0x20
    2330:	bl	0 <_ZN4llvm21TargetLibraryAnalysis3runERKNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>
    2334:	add	x23, x19, #0xf0
    2338:	ldrb	w0, [x19, #272]
    233c:	cbz	w0, 24c4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x20c>
    2340:	ldr	x0, [sp, #104]
    2344:	str	x0, [x19, #240]
    2348:	add	x0, x19, #0xf8
    234c:	add	x1, sp, #0x70
    2350:	cmp	x1, x0
    2354:	b.eq	24e8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x230>  // b.none
    2358:	ldr	w20, [sp, #128]
    235c:	str	w20, [x19, #264]
    2360:	add	w0, w20, #0x3f
    2364:	lsr	w2, w0, #6
    2368:	ldr	x1, [x19, #256]
    236c:	lsl	x3, x1, #6
    2370:	cmp	x3, w20, uxtw
    2374:	b.cs	23bc <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x104>  // b.hs, b.nlast
    2378:	cmp	w0, #0x3f
    237c:	b.ls	2478 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1c0>  // b.plast
    2380:	mov	w25, w2
    2384:	ubfiz	x20, x2, #3, #26
    2388:	mov	x0, x20
    238c:	bl	0 <malloc>
    2390:	mov	x24, x0
    2394:	cbz	x0, 249c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1e4>
    2398:	mov	x2, x20
    239c:	ldr	x1, [sp, #112]
    23a0:	mov	x0, x24
    23a4:	bl	0 <memcpy>
    23a8:	ldr	x0, [x19, #248]
    23ac:	bl	0 <free>
    23b0:	str	x24, [x19, #248]
    23b4:	str	x25, [x19, #256]
    23b8:	b	24e8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x230>
    23bc:	cbnz	w20, 23e0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x128>
    23c0:	cbz	x1, 24e8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x230>
    23c4:	mov	x0, #0x0                   	// #0
    23c8:	ldr	x3, [x19, #248]
    23cc:	lsl	x2, x1, #3
    23d0:	mov	w1, #0x0                   	// #0
    23d4:	add	x0, x3, x0, lsl #3
    23d8:	bl	0 <memset>
    23dc:	b	2410 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x158>
    23e0:	mov	x20, x19
    23e4:	ubfiz	x2, x2, #3, #26
    23e8:	ldr	x1, [sp, #112]
    23ec:	ldr	x0, [x20, #248]!
    23f0:	bl	0 <memcpy>
    23f4:	ldr	w0, [x20, #16]
    23f8:	add	w0, w0, #0x3f
    23fc:	lsr	w20, w0, #6
    2400:	ldr	x1, [x19, #256]
    2404:	lsr	w0, w0, #6
    2408:	cmp	x1, x0
    240c:	b.hi	2448 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x190>  // b.pmore
    2410:	ldr	w0, [x19, #264]
    2414:	ands	w1, w0, #0x3f
    2418:	b.eq	24e8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x230>  // b.none
    241c:	mov	x0, #0xffffffffffffffff    	// #-1
    2420:	lsl	x0, x0, x1
    2424:	sub	w20, w20, #0x1
    2428:	ldr	x1, [x19, #256]
    242c:	cmp	x20, x1
    2430:	b.cs	2454 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x19c>  // b.hs, b.nlast
    2434:	ldr	x1, [x19, #248]
    2438:	ldr	x2, [x1, x20, lsl #3]
    243c:	bic	x0, x2, x0
    2440:	str	x0, [x1, x20, lsl #3]
    2444:	b	24e8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x230>
    2448:	subs	x1, x1, x0
    244c:	b.eq	2410 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x158>  // b.none
    2450:	b	23c8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x110>
    2454:	str	x27, [sp, #80]
    2458:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    245c:	add	x3, x3, #0x0
    2460:	mov	w2, #0x1ab                 	// #427
    2464:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2468:	add	x1, x1, #0x0
    246c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2470:	add	x0, x0, #0x0
    2474:	bl	0 <__assert_fail>
    2478:	str	x27, [sp, #80]
    247c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2480:	add	x3, x3, #0x0
    2484:	mov	w2, #0x2dc                 	// #732
    2488:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    248c:	add	x1, x1, #0x0
    2490:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2494:	add	x0, x0, #0x0
    2498:	bl	0 <__assert_fail>
    249c:	cbnz	x20, 24b0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1f8>
    24a0:	mov	x0, #0x1                   	// #1
    24a4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    24a8:	mov	x24, x0
    24ac:	b	2398 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xe0>
    24b0:	mov	w1, #0x1                   	// #1
    24b4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    24b8:	add	x0, x0, #0x0
    24bc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    24c0:	b	2398 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xe0>
    24c4:	ldr	x0, [sp, #104]
    24c8:	str	x0, [x19, #240]
    24cc:	str	xzr, [x19, #248]
    24d0:	str	xzr, [x19, #256]
    24d4:	ldr	w0, [sp, #128]
    24d8:	str	w0, [x19, #264]
    24dc:	cbnz	w0, 2550 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x298>
    24e0:	mov	w0, #0x1                   	// #1
    24e4:	strb	w0, [x19, #272]
    24e8:	ldr	x0, [sp, #112]
    24ec:	bl	0 <free>
    24f0:	ldrb	w0, [x19, #272]
    24f4:	cbz	w0, 25b0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2f8>
    24f8:	ldr	w2, [sp, #224]
    24fc:	cbz	w2, 251c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x264>
    2500:	ldr	x0, [sp, #208]
    2504:	ubfiz	x1, x2, #1, #32
    2508:	add	x2, x1, w2, uxtw
    250c:	add	x2, x0, x2, lsl #3
    2510:	add	x0, x0, #0x18
    2514:	cmp	x2, x0
    2518:	b.ne	2510 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x258>  // b.any
    251c:	ldr	w1, [sp, #224]
    2520:	add	x1, x1, x1, lsl #1
    2524:	lsl	x1, x1, #3
    2528:	ldr	x0, [sp, #208]
    252c:	bl	0 <_ZdlPvm>
    2530:	ldr	w0, [sp, #192]
    2534:	cbz	w0, 263c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x384>
    2538:	str	x27, [sp, #80]
    253c:	ldr	x20, [sp, #176]
    2540:	ubfiz	x0, x0, #5, #32
    2544:	add	x25, x20, x0
    2548:	add	x24, x20, #0x8
    254c:	b	2614 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x35c>
    2550:	add	w0, w0, #0x3f
    2554:	lsr	w20, w0, #6
    2558:	lsl	x25, x20, #3
    255c:	mov	x0, x25
    2560:	bl	0 <malloc>
    2564:	mov	x24, x0
    2568:	cbz	x0, 2588 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2d0>
    256c:	str	x24, [x19, #248]
    2570:	str	x20, [x19, #256]
    2574:	mov	x2, x25
    2578:	ldr	x1, [sp, #112]
    257c:	mov	x0, x24
    2580:	bl	0 <memcpy>
    2584:	b	24e0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x228>
    2588:	cbnz	x25, 259c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2e4>
    258c:	mov	x0, #0x1                   	// #1
    2590:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2594:	mov	x24, x0
    2598:	b	256c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2b4>
    259c:	mov	w1, #0x1                   	// #1
    25a0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    25a4:	add	x0, x0, #0x0
    25a8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    25ac:	b	256c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2b4>
    25b0:	str	x27, [sp, #80]
    25b4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    25b8:	add	x3, x3, #0x0
    25bc:	mov	w2, #0x49                  	// #73
    25c0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    25c4:	add	x1, x1, #0x0
    25c8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    25cc:	add	x0, x0, #0x0
    25d0:	bl	0 <__assert_fail>
    25d4:	mov	x0, x26
    25d8:	bl	0 <_ZdlPv>
    25dc:	cmp	x27, x19
    25e0:	b.eq	2604 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x34c>  // b.none
    25e4:	mov	x26, x19
    25e8:	ldr	x19, [x19]
    25ec:	ldr	x0, [x26, #24]
    25f0:	cbz	x0, 25d4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x31c>
    25f4:	ldr	x1, [x0]
    25f8:	ldr	x1, [x1, #8]
    25fc:	blr	x1
    2600:	b	25d4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x31c>
    2604:	add	x20, x20, #0x20
    2608:	add	x24, x24, #0x20
    260c:	cmp	x25, x20
    2610:	b.eq	2638 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x380>  // b.none
    2614:	ldr	x0, [x20]
    2618:	cmn	x0, #0x10
    261c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2620:	b.eq	2604 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x34c>  // b.none
    2624:	mov	x27, x24
    2628:	ldr	x19, [x24]
    262c:	cmp	x19, x24
    2630:	b.ne	25e4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x32c>  // b.any
    2634:	b	2604 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x34c>
    2638:	ldr	x27, [sp, #80]
    263c:	ldr	w1, [sp, #192]
    2640:	lsl	x1, x1, #5
    2644:	ldr	x0, [sp, #176]
    2648:	bl	0 <_ZdlPvm>
    264c:	ldr	w0, [sp, #160]
    2650:	cbz	w0, 2698 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3e0>
    2654:	ldr	x19, [sp, #144]
    2658:	ubfiz	x0, x0, #4, #32
    265c:	add	x20, x19, x0
    2660:	b	2670 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3b8>
    2664:	add	x19, x19, #0x10
    2668:	cmp	x20, x19
    266c:	b.eq	2698 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3e0>  // b.none
    2670:	ldr	x0, [x19]
    2674:	cmn	x0, #0x10
    2678:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    267c:	b.eq	2664 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3ac>  // b.none
    2680:	ldr	x0, [x19, #8]
    2684:	cbz	x0, 2664 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3ac>
    2688:	ldr	x1, [x0]
    268c:	ldr	x1, [x1, #8]
    2690:	blr	x1
    2694:	b	2664 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3ac>
    2698:	ldr	w1, [sp, #160]
    269c:	lsl	x1, x1, #4
    26a0:	ldr	x0, [sp, #144]
    26a4:	bl	0 <_ZdlPvm>
    26a8:	mov	x0, x22
    26ac:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    26b0:	add	x2, x0, #0x20
    26b4:	mov	x1, x23
    26b8:	mov	x0, x21
    26bc:	bl	ae4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>
    26c0:	ldp	x19, x20, [sp, #16]
    26c4:	ldp	x21, x22, [sp, #32]
    26c8:	ldp	x23, x24, [sp, #48]
    26cc:	ldp	x25, x26, [sp, #64]
    26d0:	ldp	x29, x30, [sp], #240
    26d4:	ret

00000000000026d8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>:
    26d8:	stp	x29, x30, [sp, #-160]!
    26dc:	mov	x29, sp
    26e0:	stp	x19, x20, [sp, #16]
    26e4:	stp	x21, x22, [sp, #32]
    26e8:	ldr	w0, [x2, #24]
    26ec:	cbz	w0, 2888 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1b0>
    26f0:	mov	x20, x8
    26f4:	mov	x21, x1
    26f8:	mov	x19, x2
    26fc:	adrp	x1, 0 <_ZN4llvm21TargetLibraryAnalysis3KeyE>
    2700:	ldr	x1, [x1]
    2704:	cmn	x1, #0x8
    2708:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    270c:	b.eq	2850 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x178>  // b.none
    2710:	ldr	x3, [x2, #8]
    2714:	adrp	x2, 0 <_ZN4llvm21TargetLibraryAnalysis3KeyE>
    2718:	ldr	x2, [x2]
    271c:	sub	w0, w0, #0x1
    2720:	lsr	w1, w2, #9
    2724:	eor	w1, w1, w2, lsr #4
    2728:	and	w1, w1, w0
    272c:	lsl	w4, w1, #4
    2730:	add	x5, x3, x4
    2734:	ldr	x4, [x3, x4]
    2738:	cmp	x4, x2
    273c:	b.ne	2870 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x198>  // b.any
    2740:	mov	x2, x21
    2744:	adrp	x1, 0 <_ZN4llvm21TargetLibraryAnalysis3KeyE>
    2748:	ldr	x1, [x1]
    274c:	mov	x0, x19
    2750:	bl	0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
    2754:	mov	x22, x0
    2758:	ldr	w1, [x19, #24]
    275c:	cbz	w1, 2918 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x240>
    2760:	adrp	x0, 0 <_ZN4llvm21DominatorTreeAnalysis3KeyE>
    2764:	ldr	x0, [x0]
    2768:	cmn	x0, #0x10
    276c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2770:	b.eq	28e0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x208>  // b.none
    2774:	ldr	x0, [x19, #8]
    2778:	adrp	x3, 0 <_ZN4llvm21DominatorTreeAnalysis3KeyE>
    277c:	ldr	x3, [x3]
    2780:	sub	w1, w1, #0x1
    2784:	lsr	w2, w3, #9
    2788:	eor	w2, w2, w3, lsr #4
    278c:	and	w2, w2, w1
    2790:	lsl	w4, w2, #4
    2794:	add	x5, x0, x4
    2798:	ldr	x4, [x0, x4]
    279c:	cmp	x4, x3
    27a0:	b.ne	2900 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x228>  // b.any
    27a4:	mov	x2, x21
    27a8:	adrp	x1, 0 <_ZN4llvm21DominatorTreeAnalysis3KeyE>
    27ac:	ldr	x1, [x1]
    27b0:	mov	x0, x19
    27b4:	bl	0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
    27b8:	add	x2, x0, #0x8
    27bc:	add	x1, x22, #0x8
    27c0:	mov	x0, x21
    27c4:	bl	ae4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>
    27c8:	and	w0, w0, #0xff
    27cc:	cbnz	w0, 2990 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x2b8>
    27d0:	add	x2, x20, #0x28
    27d4:	str	x2, [x20, #8]
    27d8:	str	x2, [x20, #16]
    27dc:	mov	w3, #0x2                   	// #2
    27e0:	str	w3, [x20, #24]
    27e4:	str	wzr, [x20, #32]
    27e8:	add	x1, x20, #0x60
    27ec:	str	xzr, [x20, #56]
    27f0:	str	x1, [x20, #64]
    27f4:	str	x1, [x20, #72]
    27f8:	str	w3, [x20, #80]
    27fc:	str	wzr, [x20, #84]
    2800:	str	wzr, [x20, #88]
    2804:	mov	w0, #0x1                   	// #1
    2808:	str	w0, [x20, #28]
    280c:	adrp	x0, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
    2810:	ldr	x0, [x0]
    2814:	str	x0, [x20, #40]
    2818:	mov	x0, #0x1                   	// #1
    281c:	str	x0, [x20]
    2820:	add	x1, x2, #0x8
    2824:	cmp	x2, x1
    2828:	b.hi	2970 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x298>  // b.pmore
    282c:	b.eq	2d14 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x63c>  // b.none
    2830:	add	x0, x20, #0x28
    2834:	ldr	x2, [x0]
    2838:	cmn	x2, #0x2
    283c:	b.cc	2d14 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x63c>  // b.lo, b.ul, b.last
    2840:	add	x0, x0, #0x8
    2844:	cmp	x1, x0
    2848:	b.ne	2834 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x15c>  // b.any
    284c:	b	2d14 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x63c>
    2850:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2854:	add	x3, x3, #0x0
    2858:	mov	w2, #0x250                 	// #592
    285c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2860:	add	x1, x1, #0x0
    2864:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2868:	add	x0, x0, #0x0
    286c:	bl	0 <__assert_fail>
    2870:	mov	w6, #0x1                   	// #1
    2874:	mov	x7, #0x0                   	// #0
    2878:	adrp	x2, 0 <_ZN4llvm21TargetLibraryAnalysis3KeyE>
    287c:	ldr	x2, [x2]
    2880:	cmn	x4, #0x8
    2884:	b.ne	28a8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1d0>  // b.any
    2888:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    288c:	add	x3, x3, #0x0
    2890:	mov	w2, #0x30a                 	// #778
    2894:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2898:	add	x1, x1, #0x0
    289c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    28a0:	add	x0, x0, #0x0
    28a4:	bl	0 <__assert_fail>
    28a8:	cmp	x7, #0x0
    28ac:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    28b0:	csel	x7, x7, x5, ne  // ne = any
    28b4:	add	w8, w6, #0x1
    28b8:	add	w6, w6, w1
    28bc:	and	w1, w0, w6
    28c0:	and	w6, w0, w6
    28c4:	lsl	x4, x6, #4
    28c8:	add	x5, x3, x4
    28cc:	ldr	x4, [x3, x4]
    28d0:	cmp	x4, x2
    28d4:	b.eq	2740 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x68>  // b.none
    28d8:	mov	w6, w8
    28dc:	b	2880 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1a8>
    28e0:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    28e4:	add	x3, x3, #0x0
    28e8:	mov	w2, #0x250                 	// #592
    28ec:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    28f0:	add	x1, x1, #0x0
    28f4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    28f8:	add	x0, x0, #0x0
    28fc:	bl	0 <__assert_fail>
    2900:	mov	w6, #0x1                   	// #1
    2904:	mov	x7, #0x0                   	// #0
    2908:	adrp	x3, 0 <_ZN4llvm21DominatorTreeAnalysis3KeyE>
    290c:	ldr	x3, [x3]
    2910:	cmn	x4, #0x8
    2914:	b.ne	2938 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x260>  // b.any
    2918:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    291c:	add	x3, x3, #0x0
    2920:	mov	w2, #0x30a                 	// #778
    2924:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2928:	add	x1, x1, #0x0
    292c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2930:	add	x0, x0, #0x0
    2934:	bl	0 <__assert_fail>
    2938:	cmp	x7, #0x0
    293c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    2940:	csel	x7, x7, x5, ne  // ne = any
    2944:	add	w8, w6, #0x1
    2948:	add	w6, w6, w2
    294c:	and	w2, w1, w6
    2950:	and	w6, w1, w6
    2954:	lsl	x4, x6, #4
    2958:	add	x5, x0, x4
    295c:	ldr	x4, [x0, x4]
    2960:	cmp	x4, x3
    2964:	b.eq	27a4 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0xcc>  // b.none
    2968:	mov	w6, w8
    296c:	b	2910 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x238>
    2970:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2974:	add	x3, x3, #0x0
    2978:	mov	w2, #0xf8                  	// #248
    297c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2980:	add	x1, x1, #0x0
    2984:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2988:	add	x0, x0, #0x0
    298c:	bl	0 <__assert_fail>
    2990:	add	x0, sp, #0x58
    2994:	str	x0, [sp, #56]
    2998:	str	x0, [sp, #64]
    299c:	mov	w2, #0x2                   	// #2
    29a0:	str	w2, [sp, #72]
    29a4:	str	wzr, [sp, #80]
    29a8:	str	xzr, [sp, #104]
    29ac:	add	x1, sp, #0x90
    29b0:	str	x1, [sp, #112]
    29b4:	str	x1, [sp, #120]
    29b8:	str	w2, [sp, #128]
    29bc:	str	wzr, [sp, #132]
    29c0:	str	wzr, [sp, #136]
    29c4:	mov	w1, #0x1                   	// #1
    29c8:	str	w1, [sp, #76]
    29cc:	adrp	x1, 0 <_ZN4llvm11CFGAnalyses6SetKeyE>
    29d0:	ldr	x1, [x1]
    29d4:	str	x1, [sp, #88]
    29d8:	mov	x1, #0x1                   	// #1
    29dc:	str	x1, [sp, #48]
    29e0:	adrp	x1, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
    29e4:	ldr	x1, [x1]
    29e8:	add	x2, sp, #0x60
    29ec:	ldr	x3, [x0]
    29f0:	cmp	x3, x1
    29f4:	b.eq	2ae8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x410>  // b.none
    29f8:	add	x0, x0, #0x8
    29fc:	cmp	x0, x2
    2a00:	b.ne	29ec <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x314>  // b.any
    2a04:	mov	x0, #0x0                   	// #0
    2a08:	add	x1, sp, #0x58
    2a0c:	adrp	x3, 0 <_ZN4llvm9AAManager3KeyE>
    2a10:	ldr	x3, [x3]
    2a14:	add	x4, sp, #0x60
    2a18:	ldr	x2, [x1]
    2a1c:	cmp	x2, x3
    2a20:	b.eq	2b80 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x4a8>  // b.none
    2a24:	cmn	x2, #0x2
    2a28:	csel	x0, x0, x1, ne  // ne = any
    2a2c:	add	x1, x1, #0x8
    2a30:	cmp	x1, x4
    2a34:	b.ne	2a18 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x340>  // b.any
    2a38:	cbz	x0, 2b60 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x488>
    2a3c:	adrp	x1, 0 <_ZN4llvm9AAManager3KeyE>
    2a40:	ldr	x1, [x1]
    2a44:	str	x1, [x0]
    2a48:	ldr	w1, [sp, #80]
    2a4c:	sub	w1, w1, #0x1
    2a50:	str	w1, [sp, #80]
    2a54:	ldr	x1, [sp, #48]
    2a58:	add	x1, x1, #0x1
    2a5c:	str	x1, [sp, #48]
    2a60:	ldr	x2, [sp, #64]
    2a64:	ldr	x1, [sp, #56]
    2a68:	cmp	x2, x1
    2a6c:	b.eq	2b94 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x4bc>  // b.none
    2a70:	ldr	w1, [sp, #72]
    2a74:	add	x2, x2, x1, lsl #3
    2a78:	cmp	x2, x0
    2a7c:	b.cc	2b9c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x4c4>  // b.lo, b.ul, b.last
    2a80:	b.eq	2a9c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x3c4>  // b.none
    2a84:	ldr	x1, [x0]
    2a88:	cmn	x1, #0x2
    2a8c:	b.cc	2a9c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x3c4>  // b.lo, b.ul, b.last
    2a90:	add	x0, x0, #0x8
    2a94:	cmp	x2, x0
    2a98:	b.ne	2a84 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x3ac>  // b.any
    2a9c:	ldr	x0, [sp, #112]
    2aa0:	ldr	x1, [sp, #120]
    2aa4:	cmp	x1, x0
    2aa8:	b.eq	2bbc <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x4e4>  // b.none
    2aac:	adrp	x19, 0 <_ZN4llvm9GlobalsAA3KeyE>
    2ab0:	ldr	x19, [x19]
    2ab4:	mov	x1, x19
    2ab8:	add	x0, sp, #0x68
    2abc:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
    2ac0:	ldr	x1, [x0]
    2ac4:	cmp	x1, x19
    2ac8:	b.eq	2c0c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x534>  // b.none
    2acc:	ldr	x2, [sp, #120]
    2ad0:	ldr	x0, [sp, #112]
    2ad4:	cmp	x2, x0
    2ad8:	b.eq	2c00 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x528>  // b.none
    2adc:	ldr	w0, [sp, #128]
    2ae0:	add	x0, x2, x0, lsl #3
    2ae4:	b	2c1c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x544>
    2ae8:	add	x1, sp, #0x60
    2aec:	cmp	x0, x1
    2af0:	b.hi	2b24 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x44c>  // b.pmore
    2af4:	add	x1, sp, #0x60
    2af8:	cmp	x0, x1
    2afc:	b.eq	2a04 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x32c>  // b.none
    2b00:	mov	x2, x1
    2b04:	ldr	x1, [x0]
    2b08:	add	x1, x1, #0x2
    2b0c:	cmp	x1, #0x1
    2b10:	b.hi	2b44 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x46c>  // b.pmore
    2b14:	add	x0, x0, #0x8
    2b18:	cmp	x0, x2
    2b1c:	b.ne	2b04 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x42c>  // b.any
    2b20:	b	2a04 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x32c>
    2b24:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2b28:	add	x3, x3, #0x0
    2b2c:	mov	w2, #0xf8                  	// #248
    2b30:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2b34:	add	x1, x1, #0x0
    2b38:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2b3c:	add	x0, x0, #0x0
    2b40:	bl	0 <__assert_fail>
    2b44:	add	x1, sp, #0x60
    2b48:	cmp	x0, x1
    2b4c:	b.eq	2a04 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x32c>  // b.none
    2b50:	ldr	w2, [sp, #132]
    2b54:	add	x0, sp, #0x90
    2b58:	add	x2, x0, x2, lsl #3
    2b5c:	b	2bec <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x514>
    2b60:	mov	w0, #0x2                   	// #2
    2b64:	str	w0, [sp, #76]
    2b68:	adrp	x0, 0 <_ZN4llvm9AAManager3KeyE>
    2b6c:	ldr	x0, [x0]
    2b70:	str	x0, [sp, #96]
    2b74:	mov	x0, #0x2                   	// #2
    2b78:	str	x0, [sp, #48]
    2b7c:	add	x1, sp, #0x60
    2b80:	ldr	x2, [sp, #64]
    2b84:	ldr	w0, [sp, #76]
    2b88:	add	x2, x2, x0, lsl #3
    2b8c:	mov	x0, x1
    2b90:	b	2a78 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x3a0>
    2b94:	mov	x1, x0
    2b98:	b	2b84 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x4ac>
    2b9c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2ba0:	add	x3, x3, #0x0
    2ba4:	mov	w2, #0xf8                  	// #248
    2ba8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2bac:	add	x1, x1, #0x0
    2bb0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2bb4:	add	x0, x0, #0x0
    2bb8:	bl	0 <__assert_fail>
    2bbc:	ldr	w2, [sp, #132]
    2bc0:	add	x2, x0, x2, lsl #3
    2bc4:	cmp	x0, x2
    2bc8:	b.eq	2bec <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x514>  // b.none
    2bcc:	adrp	x3, 0 <_ZN4llvm9GlobalsAA3KeyE>
    2bd0:	ldr	x3, [x3]
    2bd4:	ldr	x1, [x0]
    2bd8:	cmp	x1, x3
    2bdc:	b.eq	2bf0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x518>  // b.none
    2be0:	add	x0, x0, #0x8
    2be4:	cmp	x2, x0
    2be8:	b.ne	2bd4 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x4fc>  // b.any
    2bec:	mov	x0, x2
    2bf0:	ldr	x3, [sp, #120]
    2bf4:	ldr	w1, [sp, #132]
    2bf8:	add	x1, x3, x1, lsl #3
    2bfc:	b	2c24 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x54c>
    2c00:	ldr	w0, [sp, #132]
    2c04:	add	x0, x2, x0, lsl #3
    2c08:	b	2bf0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x518>
    2c0c:	ldr	x2, [sp, #120]
    2c10:	ldr	x3, [sp, #112]
    2c14:	cmp	x2, x3
    2c18:	b.eq	2bf4 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x51c>  // b.none
    2c1c:	ldr	w1, [sp, #128]
    2c20:	add	x1, x2, x1, lsl #3
    2c24:	cmp	x1, x0
    2c28:	b.eq	2c54 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x57c>  // b.none
    2c2c:	ldr	x2, [x0]
    2c30:	adrp	x1, 0 <_ZN4llvm9GlobalsAA3KeyE>
    2c34:	ldr	x1, [x1]
    2c38:	cmp	x2, x1
    2c3c:	b.ne	2d28 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x650>  // b.any
    2c40:	mov	x1, #0xfffffffffffffffe    	// #-2
    2c44:	str	x1, [x0]
    2c48:	ldr	w0, [sp, #136]
    2c4c:	add	w0, w0, #0x1
    2c50:	str	w0, [sp, #136]
    2c54:	ldr	w1, [sp, #132]
    2c58:	ldr	w0, [sp, #136]
    2c5c:	cmp	w1, w0
    2c60:	b.eq	2d48 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x670>  // b.none
    2c64:	ldr	x1, [sp, #56]
    2c68:	ldr	x0, [sp, #64]
    2c6c:	cmp	x0, x1
    2c70:	b.eq	2e58 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x780>  // b.none
    2c74:	adrp	x1, 0 <_ZN4llvm9GlobalsAA3KeyE>
    2c78:	ldr	x1, [x1]
    2c7c:	add	x0, sp, #0x30
    2c80:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
    2c84:	ldr	x2, [sp, #64]
    2c88:	ldr	x1, [sp, #56]
    2c8c:	cmp	x2, x1
    2c90:	b.eq	2f14 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x83c>  // b.none
    2c94:	ldr	w1, [sp, #72]
    2c98:	add	x2, x2, x1, lsl #3
    2c9c:	cmp	x2, x0
    2ca0:	b.cc	2f1c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x844>  // b.lo, b.ul, b.last
    2ca4:	b.eq	2cc0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x5e8>  // b.none
    2ca8:	ldr	x1, [x0]
    2cac:	cmn	x1, #0x2
    2cb0:	b.cc	2cc0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x5e8>  // b.lo, b.ul, b.last
    2cb4:	add	x0, x0, #0x8
    2cb8:	cmp	x2, x0
    2cbc:	b.ne	2ca8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x5d0>  // b.any
    2cc0:	add	x19, sp, #0x30
    2cc4:	mov	x3, x19
    2cc8:	mov	w2, #0x2                   	// #2
    2ccc:	add	x1, x20, #0x28
    2cd0:	mov	x0, x20
    2cd4:	bl	0 <_ZN4llvm19SmallPtrSetImplBaseC2EPPKvjOS0_>
    2cd8:	add	x3, x19, #0x38
    2cdc:	mov	w2, #0x2                   	// #2
    2ce0:	add	x1, x20, #0x60
    2ce4:	add	x0, x20, #0x38
    2ce8:	bl	0 <_ZN4llvm19SmallPtrSetImplBaseC2EPPKvjOS0_>
    2cec:	ldr	x0, [sp, #120]
    2cf0:	ldr	x1, [sp, #112]
    2cf4:	cmp	x0, x1
    2cf8:	b.eq	2d00 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x628>  // b.none
    2cfc:	bl	0 <free>
    2d00:	ldr	x0, [sp, #64]
    2d04:	ldr	x1, [sp, #56]
    2d08:	cmp	x0, x1
    2d0c:	b.eq	2d14 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x63c>  // b.none
    2d10:	bl	0 <free>
    2d14:	mov	x0, x20
    2d18:	ldp	x19, x20, [sp, #16]
    2d1c:	ldp	x21, x22, [sp, #32]
    2d20:	ldp	x29, x30, [sp], #160
    2d24:	ret
    2d28:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2d2c:	add	x3, x3, #0x0
    2d30:	mov	w2, #0xa7                  	// #167
    2d34:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2d38:	add	x1, x1, #0x0
    2d3c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2d40:	add	x0, x0, #0x0
    2d44:	bl	0 <__assert_fail>
    2d48:	ldr	x4, [sp, #64]
    2d4c:	ldr	x0, [sp, #56]
    2d50:	cmp	x4, x0
    2d54:	b.eq	2d94 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x6bc>  // b.none
    2d58:	adrp	x19, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
    2d5c:	ldr	x19, [x19]
    2d60:	mov	x1, x19
    2d64:	add	x0, sp, #0x30
    2d68:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
    2d6c:	ldr	x1, [x0]
    2d70:	cmp	x1, x19
    2d74:	b.eq	2de8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x710>  // b.none
    2d78:	ldr	x1, [sp, #64]
    2d7c:	ldr	x0, [sp, #56]
    2d80:	cmp	x1, x0
    2d84:	b.eq	2ddc <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x704>  // b.none
    2d88:	ldr	w0, [sp, #72]
    2d8c:	add	x0, x1, x0, lsl #3
    2d90:	b	2df8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x720>
    2d94:	ldr	w5, [sp, #76]
    2d98:	lsl	x5, x5, #3
    2d9c:	add	x3, x0, x5
    2da0:	cmp	x0, x3
    2da4:	b.eq	2dc8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x6f0>  // b.none
    2da8:	adrp	x2, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
    2dac:	ldr	x2, [x2]
    2db0:	ldr	x1, [x0]
    2db4:	cmp	x1, x2
    2db8:	b.eq	2dcc <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x6f4>  // b.none
    2dbc:	add	x0, x0, #0x8
    2dc0:	cmp	x3, x0
    2dc4:	b.ne	2db0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x6d8>  // b.any
    2dc8:	add	x0, x4, x5
    2dcc:	ldr	x3, [sp, #64]
    2dd0:	ldr	w2, [sp, #76]
    2dd4:	add	x2, x3, x2, lsl #3
    2dd8:	b	2e00 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x728>
    2ddc:	ldr	w0, [sp, #76]
    2de0:	add	x0, x1, x0, lsl #3
    2de4:	b	2dcc <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x6f4>
    2de8:	ldr	x1, [sp, #64]
    2dec:	ldr	x3, [sp, #56]
    2df0:	cmp	x1, x3
    2df4:	b.eq	2dd0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x6f8>  // b.none
    2df8:	ldr	w2, [sp, #72]
    2dfc:	add	x2, x1, x2, lsl #3
    2e00:	cmp	x2, x0
    2e04:	b.cc	2e2c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x754>  // b.lo, b.ul, b.last
    2e08:	b.eq	2c64 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x58c>  // b.none
    2e0c:	ldr	x1, [x0]
    2e10:	add	x1, x1, #0x2
    2e14:	cmp	x1, #0x1
    2e18:	b.hi	2e4c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x774>  // b.pmore
    2e1c:	add	x0, x0, #0x8
    2e20:	cmp	x2, x0
    2e24:	b.ne	2e0c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x734>  // b.any
    2e28:	b	2c64 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x58c>
    2e2c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2e30:	add	x3, x3, #0x0
    2e34:	mov	w2, #0xf8                  	// #248
    2e38:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2e3c:	add	x1, x1, #0x0
    2e40:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2e44:	add	x0, x0, #0x0
    2e48:	bl	0 <__assert_fail>
    2e4c:	cmp	x0, x2
    2e50:	b.ne	2cc0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x5e8>  // b.any
    2e54:	b	2c64 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x58c>
    2e58:	ldr	w5, [sp, #76]
    2e5c:	add	x4, x1, w5, uxtw #3
    2e60:	cmp	x1, x4
    2e64:	b.eq	2ed4 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x7fc>  // b.none
    2e68:	mov	x0, #0x0                   	// #0
    2e6c:	adrp	x3, 0 <_ZN4llvm9GlobalsAA3KeyE>
    2e70:	ldr	x3, [x3]
    2e74:	ldr	x2, [x1]
    2e78:	cmp	x2, x3
    2e7c:	b.eq	2ec0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x7e8>  // b.none
    2e80:	cmn	x2, #0x2
    2e84:	csel	x0, x0, x1, ne  // ne = any
    2e88:	add	x1, x1, #0x8
    2e8c:	cmp	x4, x1
    2e90:	b.ne	2e74 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x79c>  // b.any
    2e94:	cbz	x0, 2ed4 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x7fc>
    2e98:	adrp	x1, 0 <_ZN4llvm9GlobalsAA3KeyE>
    2e9c:	ldr	x1, [x1]
    2ea0:	str	x1, [x0]
    2ea4:	ldr	w1, [sp, #80]
    2ea8:	sub	w1, w1, #0x1
    2eac:	str	w1, [sp, #80]
    2eb0:	ldr	x1, [sp, #48]
    2eb4:	add	x1, x1, #0x1
    2eb8:	str	x1, [sp, #48]
    2ebc:	b	2c84 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x5ac>
    2ec0:	ldr	x2, [sp, #64]
    2ec4:	ldr	w0, [sp, #76]
    2ec8:	add	x2, x2, x0, lsl #3
    2ecc:	mov	x0, x1
    2ed0:	b	2c9c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x5c4>
    2ed4:	ldr	w0, [sp, #72]
    2ed8:	cmp	w5, w0
    2edc:	b.cs	2c74 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x59c>  // b.hs, b.nlast
    2ee0:	add	w5, w5, #0x1
    2ee4:	str	w5, [sp, #76]
    2ee8:	adrp	x0, 0 <_ZN4llvm9GlobalsAA3KeyE>
    2eec:	ldr	x0, [x0]
    2ef0:	str	x0, [x4]
    2ef4:	ldr	x0, [sp, #48]
    2ef8:	add	x0, x0, #0x1
    2efc:	str	x0, [sp, #48]
    2f00:	ldr	w0, [sp, #76]
    2f04:	sub	w0, w0, #0x1
    2f08:	ldr	x1, [sp, #56]
    2f0c:	add	x0, x1, x0, lsl #3
    2f10:	b	2c84 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x5ac>
    2f14:	mov	x1, x0
    2f18:	b	2ec4 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x7ec>
    2f1c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2f20:	add	x3, x3, #0x0
    2f24:	mov	w2, #0xf8                  	// #248
    2f28:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2f2c:	add	x1, x1, #0x0
    2f30:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2f34:	add	x0, x0, #0x0
    2f38:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_4_FUNEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_4_FUNEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x1, tpidr_el0
  1c:	ldr	x0, [x1, x0]
  20:	ldr	x2, [x0, #8]
  24:	ldr	x1, [x0]
  28:	ldr	x0, [x2]
  2c:	blr	x1
  30:	ldp	x29, x30, [sp], #16
  34:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	str	xzr, [x0]
   4:	str	xzr, [x0, #8]
   8:	mov	w2, #0x1                   	// #1
   c:	strb	w2, [x0, #16]
  10:	strb	w2, [x0, #17]
  14:	ldrb	w2, [x1]
  18:	cbz	w2, 28 <_ZN4llvm5TwineC1EPKc+0x28>
  1c:	str	x1, [x0]
  20:	mov	w1, #0x3                   	// #3
  24:	strb	w1, [x0, #16]
  28:	ret

Disassembly of section .text._ZNK4llvm12ConstantExpr10getOperandEj:

0000000000000000 <_ZNK4llvm12ConstantExpr10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	ubfx	x2, x2, #0, #28
  10:	cmp	w1, w2
  14:	b.cs	44 <_ZNK4llvm12ConstantExpr10getOperandEj+0x44>  // b.hs, b.nlast
  18:	mov	w1, w1
  1c:	mov	w2, w2
  20:	sub	x1, x1, x2
  24:	add	x1, x1, x1, lsl #1
  28:	ldr	x0, [x0, x1, lsl #3]
  2c:	cbz	x0, 3c <_ZNK4llvm12ConstantExpr10getOperandEj+0x3c>
  30:	ldrb	w1, [x0, #16]
  34:	cmp	w1, #0x10
  38:	b.hi	64 <_ZNK4llvm12ConstantExpr10getOperandEj+0x64>  // b.pmore
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x4fa                 	// #1274
  50:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  54:	add	x1, x1, #0x0
  58:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  5c:	add	x0, x0, #0x0
  60:	bl	0 <__assert_fail>
  64:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  74:	add	x1, x1, #0x0
  78:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  7c:	add	x0, x0, #0x0
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	cbz	x0, 34 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x34>
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	ldrb	w0, [x0, #16]
  1c:	cmp	w0, #0x1a
  20:	b.eq	400 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x400>  // b.none
  24:	mov	w0, #0x0                   	// #0
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x29, x30, [sp], #80
  30:	ret
  34:	stp	x19, x20, [sp, #16]
  38:	stp	x21, x22, [sp, #32]
  3c:	stp	x23, x24, [sp, #48]
  40:	str	x25, [sp, #64]
  44:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
  54:	add	x1, x1, #0x0
  58:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
  5c:	add	x0, x0, #0x0
  60:	bl	0 <__assert_fail>
  64:	stp	x21, x22, [sp, #32]
  68:	ldur	x21, [x19, #-72]
  6c:	cbz	x21, 98 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x98>
  70:	ldrb	w0, [x21, #16]
  74:	cmp	w0, #0x4d
  78:	b.ne	8c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x8c>  // b.any
  7c:	ldur	x0, [x21, #-48]
  80:	ldr	x1, [x20, #8]
  84:	cmp	x1, x0
  88:	b.eq	c0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0xc0>  // b.none
  8c:	mov	w0, #0x0                   	// #0
  90:	ldp	x21, x22, [sp, #32]
  94:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x28>
  98:	stp	x23, x24, [sp, #48]
  9c:	str	x25, [sp, #64]
  a0:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x69                  	// #105
  ac:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
  b0:	add	x1, x1, #0x0
  b4:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
  b8:	add	x0, x0, #0x0
  bc:	bl	0 <__assert_fail>
  c0:	ldur	x22, [x21, #-24]
  c4:	cbz	x22, f0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0xf0>
  c8:	stp	x23, x24, [sp, #48]
  cc:	ldrb	w0, [x22, #16]
  d0:	cmp	w0, #0xd
  d4:	b.eq	3d8 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x3d8>  // b.none
  d8:	ldr	x1, [x22]
  dc:	ldrb	w1, [x1, #8]
  e0:	cmp	w1, #0x10
  e4:	b.eq	128 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x128>  // b.none
  e8:	ldp	x23, x24, [sp, #48]
  ec:	b	8c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x8c>
  f0:	stp	x23, x24, [sp, #48]
  f4:	str	x25, [sp, #64]
  f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 108:	add	x1, x1, #0x0
 10c:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <__assert_fail>
 118:	ldr	x0, [x22, #24]
 11c:	cmp	x0, #0x0
 120:	cset	w23, eq  // eq = none
 124:	b	3f4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x3f4>
 128:	cmp	w0, #0x10
 12c:	b.hi	17c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x17c>  // b.pmore
 130:	mov	w1, #0x0                   	// #0
 134:	mov	x0, x22
 138:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
 13c:	cbz	x0, 3d0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x3d0>
 140:	ldrb	w1, [x0, #16]
 144:	cmp	w1, #0xd
 148:	b.eq	184 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x184>  // b.none
 14c:	str	x25, [sp, #64]
 150:	ldr	x0, [x22]
 154:	cbz	x0, 1b4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x1b4>
 158:	ldrb	w1, [x0, #8]
 15c:	cmp	w1, #0x10
 160:	b.ne	1d4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x1d4>  // b.any
 164:	ldr	x0, [x0, #32]
 168:	mov	w25, w0
 16c:	cbz	w0, 1f4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x1f4>
 170:	mov	w23, #0x0                   	// #0
 174:	mov	w24, #0x0                   	// #0
 178:	b	3a0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x3a0>
 17c:	ldp	x23, x24, [sp, #48]
 180:	b	8c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x8c>
 184:	ldr	w22, [x0, #32]
 188:	cmp	w22, #0x40
 18c:	b.ls	1a4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x1a4>  // b.plast
 190:	add	x0, x0, #0x18
 194:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 198:	cmp	w22, w0
 19c:	cset	w23, eq  // eq = none
 1a0:	b	3f4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x3f4>
 1a4:	ldr	x0, [x0, #24]
 1a8:	cmp	x0, #0x0
 1ac:	cset	w23, eq  // eq = none
 1b0:	b	3f4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x3f4>
 1b4:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x69                  	// #105
 1c0:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 1c4:	add	x1, x1, #0x0
 1c8:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 1cc:	add	x0, x0, #0x0
 1d0:	bl	0 <__assert_fail>
 1d4:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x108                 	// #264
 1e0:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 1e4:	add	x1, x1, #0x0
 1e8:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 1ec:	add	x0, x0, #0x0
 1f0:	bl	0 <__assert_fail>
 1f4:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 1f8:	add	x3, x3, #0x0
 1fc:	mov	w2, #0xeb                  	// #235
 200:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 204:	add	x1, x1, #0x0
 208:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 20c:	add	x0, x0, #0x0
 210:	bl	0 <__assert_fail>
 214:	ldr	x0, [x0, #24]
 218:	cmp	x0, #0x0
 21c:	cset	w23, eq  // eq = none
 220:	b	390 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x390>
 224:	ldr	x25, [sp, #64]
 228:	b	3f4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x3f4>
 22c:	ldr	x1, [x20]
 230:	ldrh	w0, [x21, #18]
 234:	and	w0, w0, #0xffff7fff
 238:	str	w0, [x1]
 23c:	ldur	x0, [x19, #-24]
 240:	cbz	x0, 338 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x338>
 244:	ldrb	w1, [x0, #16]
 248:	cmp	w1, #0x12
 24c:	b.ne	26c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x26c>  // b.any
 250:	ldr	x1, [x20, #24]
 254:	cmp	x1, x0
 258:	b.eq	290 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x290>  // b.none
 25c:	mov	w0, #0x0                   	// #0
 260:	ldp	x21, x22, [sp, #32]
 264:	ldp	x23, x24, [sp, #48]
 268:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x28>
 26c:	str	x25, [sp, #64]
 270:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 274:	add	x3, x3, #0x0
 278:	mov	w2, #0x134                 	// #308
 27c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 280:	add	x1, x1, #0x0
 284:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 288:	add	x0, x0, #0x0
 28c:	bl	0 <__assert_fail>
 290:	ldr	w0, [x19, #20]
 294:	ubfx	x0, x0, #0, #28
 298:	cmp	w0, #0x3
 29c:	b.ne	2cc <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x2cc>  // b.any
 2a0:	ldur	x0, [x19, #-48]
 2a4:	cbz	x0, 314 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x314>
 2a8:	ldrb	w1, [x0, #16]
 2ac:	cmp	w1, #0x12
 2b0:	b.ne	2f0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x2f0>  // b.any
 2b4:	ldr	x1, [x20, #32]
 2b8:	cmp	x1, x0
 2bc:	cset	w0, eq  // eq = none
 2c0:	ldp	x21, x22, [sp, #32]
 2c4:	ldp	x23, x24, [sp, #48]
 2c8:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x28>
 2cc:	str	x25, [sp, #64]
 2d0:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 2d4:	add	x3, x3, #0x0
 2d8:	mov	w2, #0xc03                 	// #3075
 2dc:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 2e0:	add	x1, x1, #0x0
 2e4:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 2e8:	add	x0, x0, #0x0
 2ec:	bl	0 <__assert_fail>
 2f0:	str	x25, [sp, #64]
 2f4:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 2f8:	add	x3, x3, #0x0
 2fc:	mov	w2, #0x134                 	// #308
 300:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 304:	add	x1, x1, #0x0
 308:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 30c:	add	x0, x0, #0x0
 310:	bl	0 <__assert_fail>
 314:	str	x25, [sp, #64]
 318:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 31c:	add	x3, x3, #0x0
 320:	mov	w2, #0x69                  	// #105
 324:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 328:	add	x1, x1, #0x0
 32c:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 330:	add	x0, x0, #0x0
 334:	bl	0 <__assert_fail>
 338:	str	x25, [sp, #64]
 33c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 340:	add	x3, x3, #0x0
 344:	mov	w2, #0x69                  	// #105
 348:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 34c:	add	x1, x1, #0x0
 350:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_>
 354:	add	x0, x0, #0x0
 358:	bl	0 <__assert_fail>
 35c:	ldp	x23, x24, [sp, #48]
 360:	ldr	x25, [sp, #64]
 364:	b	8c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x8c>
 368:	ldp	x23, x24, [sp, #48]
 36c:	ldr	x25, [sp, #64]
 370:	b	8c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x8c>
 374:	ldr	w23, [x0, #32]
 378:	cmp	w23, #0x40
 37c:	b.ls	214 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x214>  // b.plast
 380:	add	x0, x0, #0x18
 384:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 388:	cmp	w23, w0
 38c:	cset	w23, eq  // eq = none
 390:	cbz	w23, 368 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x368>
 394:	add	w24, w24, #0x1
 398:	cmp	w25, w24
 39c:	b.eq	224 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x224>  // b.none
 3a0:	mov	w1, w24
 3a4:	mov	x0, x22
 3a8:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
 3ac:	cbz	x0, 35c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x35c>
 3b0:	ldrb	w1, [x0, #16]
 3b4:	cmp	w1, #0x9
 3b8:	b.eq	394 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x394>  // b.none
 3bc:	cmp	w1, #0xd
 3c0:	b.eq	374 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x374>  // b.none
 3c4:	ldp	x23, x24, [sp, #48]
 3c8:	ldr	x25, [sp, #64]
 3cc:	b	8c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x8c>
 3d0:	str	x25, [sp, #64]
 3d4:	b	150 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x150>
 3d8:	ldr	w23, [x22, #32]
 3dc:	cmp	w23, #0x40
 3e0:	b.ls	118 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x118>  // b.plast
 3e4:	add	x0, x22, #0x18
 3e8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 3ec:	cmp	w23, w0
 3f0:	cset	w23, eq  // eq = none
 3f4:	cbnz	w23, 22c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x22c>
 3f8:	ldp	x23, x24, [sp, #48]
 3fc:	b	8c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x8c>
 400:	ldr	w0, [x19, #20]
 404:	ubfx	x0, x0, #0, #28
 408:	cmp	w0, #0x3
 40c:	b.eq	64 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x64>  // b.none
 410:	mov	w0, #0x0                   	// #0
 414:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESD_EEEEbPT_RKT0_+0x28>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x22, x0
  20:	mov	x24, x1
  24:	str	x4, [sp, #120]
  28:	ldr	x0, [x1]
  2c:	ldrb	w1, [x0, #8]
  30:	cmp	w1, #0xf
  34:	b.ne	1f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1f0>  // b.any
  38:	mov	x28, x2
  3c:	mov	x21, x3
  40:	mov	x27, x5
  44:	ldr	x0, [x0, #16]
  48:	ldr	x25, [x0]
  4c:	cbz	x25, 210 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x210>
  50:	ldrb	w0, [x25, #8]
  54:	cmp	w0, #0xc
  58:	b.ne	230 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x230>  // b.any
  5c:	str	xzr, [sp, #144]
  60:	str	xzr, [sp, #152]
  64:	mov	w0, #0x1                   	// #1
  68:	strb	w0, [sp, #160]
  6c:	strb	w0, [sp, #161]
  70:	ldr	x20, [x22, #48]
  74:	ldr	x26, [x22, #56]
  78:	lsl	x23, x26, #3
  7c:	sub	x23, x23, x26
  80:	add	x23, x20, x23, lsl #3
  84:	cmp	x23, x20
  88:	b.eq	42c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x42c>  // b.none
  8c:	mov	x2, x20
  90:	mov	w3, #0x0                   	// #0
  94:	ldr	x0, [x2, #40]
  98:	ldr	x1, [x2, #32]
  9c:	sub	x0, x0, x1
  a0:	asr	x0, x0, #3
  a4:	add	w3, w3, w0
  a8:	add	x2, x2, #0x38
  ac:	cmp	x23, x2
  b0:	b.ne	94 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x94>  // b.any
  b4:	add	w1, w21, #0x1
  b8:	lsl	w2, w26, #4
  bc:	add	w1, w1, w3
  c0:	mov	x0, #0x48                  	// #72
  c4:	bl	0 <_ZN4llvm4UsernwEmjj>
  c8:	mov	x19, x0
  cc:	str	x21, [sp, #112]
  d0:	str	x20, [sp, #96]
  d4:	str	x26, [sp, #104]
  d8:	mov	x26, x0
  dc:	ldr	x0, [x25, #16]
  e0:	ldr	x1, [x0]
  e4:	mov	x5, x20
  e8:	mov	w0, #0x0                   	// #0
  ec:	ldr	x2, [x20, #40]
  f0:	ldr	x3, [x20, #32]
  f4:	sub	x2, x2, x3
  f8:	asr	x2, x2, #3
  fc:	add	w0, w0, w2
 100:	add	x20, x20, #0x38
 104:	cmp	x23, x20
 108:	b.ne	ec <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0xec>  // b.any
 10c:	add	x0, x21, w0, uxtw
 110:	add	x0, x0, x0, lsl #1
 114:	mov	x3, #0xffffffffffffffe8    	// #-24
 118:	sub	x3, x3, x0, lsl #3
 11c:	add	x3, x26, x3
 120:	mov	w4, #0x0                   	// #0
 124:	ldr	x0, [x5, #40]
 128:	ldr	x2, [x5, #32]
 12c:	sub	x0, x0, x2
 130:	asr	x0, x0, #3
 134:	add	w4, w4, w0
 138:	add	x5, x5, #0x38
 13c:	cmp	x23, x5
 140:	b.ne	124 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x124>  // b.any
 144:	add	w4, w4, w21
 148:	mov	x5, #0x0                   	// #0
 14c:	add	w4, w4, #0x1
 150:	mov	w2, #0x38                  	// #56
 154:	mov	x0, x26
 158:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 15c:	str	xzr, [x19, #56]
 160:	add	x7, sp, #0x90
 164:	ldr	x5, [sp, #96]
 168:	ldr	x6, [sp, #104]
 16c:	mov	x3, x28
 170:	ldr	x4, [sp, #112]
 174:	mov	x2, x24
 178:	mov	x1, x25
 17c:	mov	x0, x19
 180:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 184:	ldrb	w0, [x22, #44]
 188:	cbnz	w0, 250 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x250>
 18c:	ldrb	w1, [x19, #16]
 190:	sub	w2, w1, #0x18
 194:	cmp	w1, #0x17
 198:	b.ls	41c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x41c>  // b.plast
 19c:	cmp	w2, #0x39
 1a0:	b.hi	368 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x368>  // b.pmore
 1a4:	mov	x0, #0x1                   	// #1
 1a8:	lsl	x0, x0, x2
 1ac:	mov	x1, #0x5000                	// #20480
 1b0:	movk	x1, #0x125, lsl #16
 1b4:	movk	x1, #0x40, lsl #48
 1b8:	tst	x0, x1
 1bc:	b.ne	344 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x344>  // b.any
 1c0:	tst	x0, #0x380000000000000
 1c4:	b.eq	368 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x368>  // b.none
 1c8:	ldr	x0, [x19]
 1cc:	cbnz	x0, 31c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x31c>
 1d0:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 1d4:	add	x3, x3, #0x0
 1d8:	mov	w2, #0x69                  	// #105
 1dc:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 1e0:	add	x1, x1, #0x0
 1e4:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 1e8:	add	x0, x0, #0x0
 1ec:	bl	0 <__assert_fail>
 1f0:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 1f4:	add	x3, x3, #0x0
 1f8:	mov	w2, #0x17e                 	// #382
 1fc:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 200:	add	x1, x1, #0x0
 204:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 208:	add	x0, x0, #0x0
 20c:	bl	0 <__assert_fail>
 210:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 214:	add	x3, x3, #0x0
 218:	mov	w2, #0x69                  	// #105
 21c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 220:	add	x1, x1, #0x0
 224:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 228:	add	x0, x0, #0x0
 22c:	bl	0 <__assert_fail>
 230:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 234:	add	x3, x3, #0x0
 238:	mov	w2, #0x108                 	// #264
 23c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 240:	add	x1, x1, #0x0
 244:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 248:	add	x0, x0, #0x0
 24c:	bl	0 <__assert_fail>
 250:	mov	w2, #0x39                  	// #57
 254:	mov	w1, #0xffffffff            	// #-1
 258:	add	x0, x19, #0x38
 25c:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
 260:	and	w0, w0, #0xff
 264:	cbnz	w0, 18c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x18c>
 268:	mov	w1, #0x39                  	// #57
 26c:	mov	x0, x26
 270:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>
 274:	and	w0, w0, #0xff
 278:	cbnz	w0, 18c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x18c>
 27c:	ldr	x0, [x19, #56]
 280:	str	x0, [sp, #136]
 284:	mov	x0, x26
 288:	bl	0 <_ZNK4llvm5Value10getContextEv>
 28c:	mov	w3, #0x39                  	// #57
 290:	mov	w2, #0xffffffff            	// #-1
 294:	mov	x1, x0
 298:	add	x0, sp, #0x88
 29c:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
 2a0:	str	x0, [sp, #136]
 2a4:	str	x0, [x19, #56]
 2a8:	b	18c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x18c>
 2ac:	ldr	x0, [x0, #16]
 2b0:	ldr	x0, [x0]
 2b4:	b	330 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x330>
 2b8:	ldr	x27, [x22, #32]
 2bc:	cbz	x27, 35c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x35c>
 2c0:	b	34c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x34c>
 2c4:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 2c8:	add	x3, x3, #0x0
 2cc:	mov	w2, #0xb2                  	// #178
 2d0:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 2d4:	add	x1, x1, #0x0
 2d8:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 2dc:	add	x0, x0, #0x0
 2e0:	bl	0 <__assert_fail>
 2e4:	ldr	x1, [sp, #168]
 2e8:	cbz	x1, 2f4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2f4>
 2ec:	add	x0, sp, #0xa8
 2f0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 2f4:	mov	x0, x19
 2f8:	ldp	x19, x20, [sp, #16]
 2fc:	ldp	x21, x22, [sp, #32]
 300:	ldp	x23, x24, [sp, #48]
 304:	ldp	x25, x26, [sp, #64]
 308:	ldp	x27, x28, [sp, #80]
 30c:	ldp	x29, x30, [sp], #176
 310:	ret
 314:	ldr	x0, [x0, #24]
 318:	cbz	x0, 1d0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1d0>
 31c:	ldrb	w1, [x0, #8]
 320:	cmp	w1, #0xe
 324:	b.eq	314 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x314>  // b.none
 328:	cmp	w1, #0x10
 32c:	b.eq	2ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2ac>  // b.none
 330:	ldrb	w0, [x0, #8]
 334:	sub	w0, w0, #0x1
 338:	and	w0, w0, #0xff
 33c:	cmp	w0, #0x5
 340:	b.hi	368 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x368>  // b.pmore
 344:	ldr	w20, [x22, #40]
 348:	cbz	x27, 2b8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2b8>
 34c:	mov	x2, x27
 350:	mov	w1, #0x3                   	// #3
 354:	mov	x0, x19
 358:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 35c:	mov	w1, w20
 360:	mov	x0, x19
 364:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
 368:	ldr	x0, [x22, #8]
 36c:	cbz	x0, 3bc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x3bc>
 370:	ldr	x20, [x22, #16]
 374:	mov	x1, x19
 378:	add	x0, x0, #0x28
 37c:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
 380:	add	x1, x19, #0x18
 384:	ldr	x2, [x20]
 388:	and	x2, x2, #0xfffffffffffffff8
 38c:	str	x20, [x19, #32]
 390:	ldr	x0, [x19, #24]
 394:	and	x0, x0, #0x7
 398:	orr	x0, x0, x2
 39c:	str	x0, [x19, #24]
 3a0:	str	x1, [x2, #8]
 3a4:	ldr	x0, [x20]
 3a8:	tst	x1, #0x7
 3ac:	b.ne	2c4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2c4>  // b.any
 3b0:	and	x0, x0, #0x7
 3b4:	orr	x1, x1, x0
 3b8:	str	x1, [x20]
 3bc:	ldr	x1, [sp, #120]
 3c0:	mov	x0, x26
 3c4:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
 3c8:	ldr	x1, [x22]
 3cc:	cbz	x1, 2f4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2f4>
 3d0:	str	x1, [sp, #168]
 3d4:	add	x20, sp, #0xa8
 3d8:	mov	x2, #0x2                   	// #2
 3dc:	mov	x0, x20
 3e0:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
 3e4:	add	x21, x19, #0x30
 3e8:	cmp	x21, x20
 3ec:	b.eq	2e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2e4>  // b.none
 3f0:	ldr	x1, [x19, #48]
 3f4:	cbz	x1, 400 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x400>
 3f8:	mov	x0, x21
 3fc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 400:	ldr	x1, [sp, #168]
 404:	str	x1, [x19, #48]
 408:	cbz	x1, 2f4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2f4>
 40c:	mov	x2, x21
 410:	add	x0, sp, #0xa8
 414:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
 418:	b	2f4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2f4>
 41c:	cmp	w1, #0x5
 420:	b.ne	368 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x368>  // b.any
 424:	ldrh	w2, [x19, #18]
 428:	b	19c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x19c>
 42c:	lsl	w2, w26, #4
 430:	add	w1, w3, #0x1
 434:	mov	x0, #0x48                  	// #72
 438:	bl	0 <_ZN4llvm4UsernwEmjj>
 43c:	mov	x19, x0
 440:	str	x21, [sp, #112]
 444:	str	x20, [sp, #96]
 448:	str	x26, [sp, #104]
 44c:	mov	x26, x0
 450:	ldr	x0, [x25, #16]
 454:	ldr	x1, [x0]
 458:	add	x3, x21, x21, lsl #1
 45c:	mov	x0, #0xffffffffffffffe8    	// #-24
 460:	sub	x3, x0, x3, lsl #3
 464:	add	x3, x19, x3
 468:	mov	w4, #0x0                   	// #0
 46c:	b	144 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x144>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x34
  1c:	b.eq	38 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	118 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0x118>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x0, [x19, #-48]
  3c:	cbz	x0, 60 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0x60>
  40:	ldr	x1, [x1]
  44:	str	x0, [x1]
  48:	ldur	x0, [x19, #-24]
  4c:	cbz	x0, 80 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0x80>
  50:	ldr	x1, [x20, #8]
  54:	str	x0, [x1]
  58:	mov	w0, #0x1                   	// #1
  5c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
  60:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x69                  	// #105
  6c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x69                  	// #105
  8c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	mov	w1, #0x0                   	// #0
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  ac:	cbz	x0, d8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0xd8>
  b0:	ldr	x1, [x20]
  b4:	str	x0, [x1]
  b8:	mov	w1, #0x1                   	// #1
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  c4:	cbz	x0, f8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0xf8>
  c8:	ldr	x1, [x20, #8]
  cc:	str	x0, [x1]
  d0:	mov	w0, #0x1                   	// #1
  d4:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
  d8:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x69                  	// #105
  e4:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  e8:	add	x1, x1, #0x0
  ec:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
 108:	add	x1, x1, #0x0
 10c:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <__assert_fail>
 118:	ldrh	w0, [x19, #18]
 11c:	cmp	w0, #0x1c
 120:	b.eq	a0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0xa0>  // b.none
 124:	mov	w0, #0x0                   	// #0
 128:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x35
  1c:	b.eq	38 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	118 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0x118>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x0, [x19, #-48]
  3c:	cbz	x0, 60 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0x60>
  40:	ldr	x1, [x1]
  44:	str	x0, [x1]
  48:	ldur	x0, [x19, #-24]
  4c:	cbz	x0, 80 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0x80>
  50:	ldr	x1, [x20, #8]
  54:	str	x0, [x1]
  58:	mov	w0, #0x1                   	// #1
  5c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0x2c>
  60:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x69                  	// #105
  6c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x69                  	// #105
  8c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	mov	w1, #0x0                   	// #0
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  ac:	cbz	x0, d8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0xd8>
  b0:	ldr	x1, [x20]
  b4:	str	x0, [x1]
  b8:	mov	w1, #0x1                   	// #1
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  c4:	cbz	x0, f8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0xf8>
  c8:	ldr	x1, [x20, #8]
  cc:	str	x0, [x1]
  d0:	mov	w0, #0x1                   	// #1
  d4:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0x2c>
  d8:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x69                  	// #105
  e4:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  e8:	add	x1, x1, #0x0
  ec:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
 108:	add	x1, x1, #0x0
 10c:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <__assert_fail>
 118:	ldrh	w0, [x19, #18]
 11c:	cmp	w0, #0x1d
 120:	b.eq	a0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0xa0>  // b.none
 124:	mov	w0, #0x0                   	// #0
 128:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj29ELb0EEEEEbPT_RKT0_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x32
  1c:	b.eq	38 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	24c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x24c>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldur	x0, [x19, #-48]
  3c:	cbz	x0, 64 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x64>
  40:	ldr	x1, [x1]
  44:	str	x0, [x1]
  48:	ldur	x19, [x19, #-24]
  4c:	cbz	x19, 88 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x88>
  50:	ldrb	w0, [x19, #16]
  54:	cmp	w0, #0xd
  58:	b.eq	18c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x18c>  // b.none
  5c:	mov	w0, #0x0                   	// #0
  60:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x2c>
  64:	stp	x21, x22, [sp, #32]
  68:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x69                  	// #105
  74:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  78:	add	x1, x1, #0x0
  7c:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  80:	add	x0, x0, #0x0
  84:	bl	0 <__assert_fail>
  88:	stp	x21, x22, [sp, #32]
  8c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  9c:	add	x1, x1, #0x0
  a0:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <__assert_fail>
  ac:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x657                 	// #1623
  b8:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  bc:	add	x1, x1, #0x0
  c0:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  c4:	add	x0, x0, #0x0
  c8:	bl	0 <__assert_fail>
  cc:	mov	w0, #0x0                   	// #0
  d0:	ldp	x21, x22, [sp, #32]
  d4:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x2c>
  d8:	mov	w1, #0x0                   	// #0
  dc:	mov	x0, x19
  e0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  e4:	cbz	x0, 118 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x118>
  e8:	ldr	x1, [x20]
  ec:	str	x0, [x1]
  f0:	mov	w1, #0x1                   	// #1
  f4:	mov	x0, x19
  f8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
  fc:	mov	x19, x0
 100:	cbz	x0, 13c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x13c>
 104:	ldrb	w0, [x0, #16]
 108:	cmp	w0, #0xd
 10c:	b.eq	1ec <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x1ec>  // b.none
 110:	mov	w0, #0x0                   	// #0
 114:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x2c>
 118:	stp	x21, x22, [sp, #32]
 11c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
 12c:	add	x1, x1, #0x0
 130:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
 134:	add	x0, x0, #0x0
 138:	bl	0 <__assert_fail>
 13c:	stp	x21, x22, [sp, #32]
 140:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x69                  	// #105
 14c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
 150:	add	x1, x1, #0x0
 154:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
 158:	add	x0, x0, #0x0
 15c:	bl	0 <__assert_fail>
 160:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
 164:	add	x3, x3, #0x0
 168:	mov	w2, #0x657                 	// #1623
 16c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
 170:	add	x1, x1, #0x0
 174:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_>
 178:	add	x0, x0, #0x0
 17c:	bl	0 <__assert_fail>
 180:	mov	w0, #0x0                   	// #0
 184:	ldp	x21, x22, [sp, #32]
 188:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x2c>
 18c:	stp	x21, x22, [sp, #32]
 190:	add	x22, x19, #0x18
 194:	ldr	w21, [x22, #8]
 198:	cmp	w21, #0x40
 19c:	b.ls	260 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x260>  // b.plast
 1a0:	mov	x0, x22
 1a4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 1a8:	sub	w0, w21, w0
 1ac:	cmp	w0, #0x40
 1b0:	b.hi	cc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0xcc>  // b.pmore
 1b4:	ldr	x20, [x20, #8]
 1b8:	cmp	w21, #0x40
 1bc:	b.ls	264 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x264>  // b.plast
 1c0:	mov	x0, x22
 1c4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 1c8:	sub	w21, w21, w0
 1cc:	cmp	w21, #0x40
 1d0:	b.hi	ac <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0xac>  // b.pmore
 1d4:	ldr	x0, [x19, #24]
 1d8:	ldr	x0, [x0]
 1dc:	str	x0, [x20]
 1e0:	mov	w0, #0x1                   	// #1
 1e4:	ldp	x21, x22, [sp, #32]
 1e8:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x2c>
 1ec:	stp	x21, x22, [sp, #32]
 1f0:	add	x22, x19, #0x18
 1f4:	ldr	w21, [x22, #8]
 1f8:	cmp	w21, #0x40
 1fc:	b.ls	26c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x26c>  // b.plast
 200:	mov	x0, x22
 204:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 208:	sub	w0, w21, w0
 20c:	cmp	w0, #0x40
 210:	b.hi	180 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x180>  // b.pmore
 214:	ldr	x20, [x20, #8]
 218:	cmp	w21, #0x40
 21c:	b.ls	270 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x270>  // b.plast
 220:	mov	x0, x22
 224:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 228:	sub	w21, w21, w0
 22c:	cmp	w21, #0x40
 230:	b.hi	160 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x160>  // b.pmore
 234:	ldr	x0, [x19, #24]
 238:	ldr	x0, [x0]
 23c:	str	x0, [x20]
 240:	mov	w0, #0x1                   	// #1
 244:	ldp	x21, x22, [sp, #32]
 248:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x2c>
 24c:	ldrh	w0, [x19, #18]
 250:	cmp	w0, #0x1a
 254:	b.eq	d8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0xd8>  // b.none
 258:	mov	w0, #0x0                   	// #0
 25c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x2c>
 260:	ldr	x20, [x20, #8]
 264:	ldr	x0, [x19, #24]
 268:	b	1dc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x1dc>
 26c:	ldr	x20, [x20, #8]
 270:	ldr	x0, [x19, #24]
 274:	b	23c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_20bind_const_intval_tyELj26ELb0EEEEEbPT_RKT0_+0x23c>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x27
  1c:	b.eq	38 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	118 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0x118>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x0, [x19, #-48]
  3c:	cbz	x0, 60 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0x60>
  40:	ldr	x1, [x1]
  44:	str	x0, [x1]
  48:	ldur	x0, [x19, #-24]
  4c:	cbz	x0, 80 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0x80>
  50:	ldr	x1, [x20, #8]
  54:	str	x0, [x1]
  58:	mov	w0, #0x1                   	// #1
  5c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0x2c>
  60:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x69                  	// #105
  6c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x69                  	// #105
  8c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	mov	w1, #0x0                   	// #0
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  ac:	cbz	x0, d8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0xd8>
  b0:	ldr	x1, [x20]
  b4:	str	x0, [x1]
  b8:	mov	w1, #0x1                   	// #1
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  c4:	cbz	x0, f8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0xf8>
  c8:	ldr	x1, [x20, #8]
  cc:	str	x0, [x1]
  d0:	mov	w0, #0x1                   	// #1
  d4:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0x2c>
  d8:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x69                  	// #105
  e4:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  e8:	add	x1, x1, #0x0
  ec:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
 108:	add	x1, x1, #0x0
 10c:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <__assert_fail>
 118:	ldrh	w0, [x19, #18]
 11c:	cmp	w0, #0xf
 120:	b.eq	a0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0xa0>  // b.none
 124:	mov	w0, #0x0                   	// #0
 128:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EES5_Lj15ELb0EEEEEbPT_RKT0_+0x2c>

Disassembly of section .text._ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v:

0000000000000000 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0, #8]
   c:	cbz	x1, 60 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v+0x60>
  10:	ldr	x0, [x1]
  14:	ldr	x2, [x1, #8]
  18:	cmp	x0, x2
  1c:	b.eq	40 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v+0x40>  // b.none
  20:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass2IDE>
  24:	ldr	x1, [x1]
  28:	ldr	x3, [x0]
  2c:	cmp	x3, x1
  30:	b.eq	80 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v+0x80>  // b.none
  34:	add	x0, x0, #0x10
  38:	cmp	x2, x0
  3c:	b.ne	28 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v+0x28>  // b.any
  40:	adrp	x3, 0 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v>
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0xe9                  	// #233
  4c:	adrp	x1, 0 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v>
  50:	add	x1, x1, #0x0
  54:	adrp	x0, 0 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v>
  58:	add	x0, x0, #0x0
  5c:	bl	0 <__assert_fail>
  60:	adrp	x3, 0 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0xdd                  	// #221
  6c:	adrp	x1, 0 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	ldr	x0, [x0, #8]
  84:	cbz	x0, 40 <_ZNK4llvm4Pass11getAnalysisINS_28TargetLibraryInfoWrapperPassEEERT_v+0x40>
  88:	ldr	x1, [x0]
  8c:	ldr	x2, [x1, #96]
  90:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass2IDE>
  94:	ldr	x1, [x1]
  98:	blr	x2
  9c:	ldp	x29, x30, [sp], #16
  a0:	ret

Disassembly of section .text._ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v:

0000000000000000 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0, #8]
   c:	cbz	x1, 60 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v+0x60>
  10:	ldr	x0, [x1]
  14:	ldr	x2, [x1, #8]
  18:	cmp	x0, x2
  1c:	b.eq	40 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v+0x40>  // b.none
  20:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
  24:	ldr	x1, [x1]
  28:	ldr	x3, [x0]
  2c:	cmp	x3, x1
  30:	b.eq	80 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v+0x80>  // b.none
  34:	add	x0, x0, #0x10
  38:	cmp	x2, x0
  3c:	b.ne	28 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v+0x28>  // b.any
  40:	adrp	x3, 0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0xe9                  	// #233
  4c:	adrp	x1, 0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  50:	add	x1, x1, #0x0
  54:	adrp	x0, 0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  58:	add	x0, x0, #0x0
  5c:	bl	0 <__assert_fail>
  60:	adrp	x3, 0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0xdd                  	// #221
  6c:	adrp	x1, 0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	ldr	x0, [x0, #8]
  84:	cbz	x0, 40 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v+0x40>
  88:	ldr	x1, [x0]
  8c:	ldr	x2, [x1, #96]
  90:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
  94:	ldr	x1, [x1]
  98:	blr	x2
  9c:	ldp	x29, x30, [sp], #16
  a0:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	cbz	x2, 80 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x80>
  10:	stp	x19, x20, [sp, #32]
  14:	stp	x21, x22, [sp, #48]
  18:	stp	x23, x24, [sp, #64]
  1c:	mov	x22, x0
  20:	mov	w23, w1
  24:	mov	x20, x2
  28:	mov	x21, x3
  2c:	mov	x24, x4
  30:	ldrb	w0, [x2, #16]
  34:	cmp	w0, #0x10
  38:	b.hi	b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xb0>  // b.pmore
  3c:	cbz	x3, 344 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x344>
  40:	ldrb	w0, [x21, #16]
  44:	cmp	w0, #0x10
  48:	b.hi	100 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x100>  // b.pmore
  4c:	mov	w3, #0x0                   	// #0
  50:	mov	x2, x21
  54:	mov	x1, x20
  58:	mov	w0, w23
  5c:	bl	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
  60:	mov	x19, x0
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #32]
  6c:	ldp	x21, x22, [sp, #48]
  70:	ldp	x23, x24, [sp, #64]
  74:	ldp	x29, x30, [sp, #16]
  78:	add	sp, sp, #0x80
  7c:	ret
  80:	stp	x19, x20, [sp, #32]
  84:	stp	x21, x22, [sp, #48]
  88:	stp	x23, x24, [sp, #64]
  8c:	stp	x25, x26, [sp, #80]
  90:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x69                  	// #105
  9c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  a0:	add	x1, x1, #0x0
  a4:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  a8:	add	x0, x0, #0x0
  ac:	bl	0 <__assert_fail>
  b0:	stp	x25, x26, [sp, #80]
  b4:	str	xzr, [sp, #96]
  b8:	str	xzr, [sp, #104]
  bc:	mov	w0, #0x1                   	// #1
  c0:	strb	w0, [sp, #112]
  c4:	strb	w0, [sp, #113]
  c8:	mov	w1, #0x2                   	// #2
  cc:	mov	x0, #0x38                  	// #56
  d0:	bl	0 <_ZN4llvm4UsernwEmj>
  d4:	mov	x19, x0
  d8:	mov	x25, x0
  dc:	ldr	x26, [x20]
  e0:	cbz	x26, 108 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x108>
  e4:	ldrb	w0, [x26, #8]
  e8:	cmp	w0, #0x10
  ec:	b.eq	1ec <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x1ec>  // b.none
  f0:	ldr	x0, [x26]
  f4:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
  f8:	mov	x1, x0
  fc:	b	21c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x21c>
 100:	stp	x25, x26, [sp, #80]
 104:	b	b4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xb4>
 108:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x69                  	// #105
 114:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 118:	add	x1, x1, #0x0
 11c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 120:	add	x0, x0, #0x0
 124:	bl	0 <__assert_fail>
 128:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x220                 	// #544
 134:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 138:	add	x1, x1, #0x0
 13c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 140:	add	x0, x0, #0x0
 144:	bl	0 <__assert_fail>
 148:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x488                 	// #1160
 154:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 158:	add	x1, x1, #0x0
 15c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 160:	add	x0, x0, #0x0
 164:	bl	0 <__assert_fail>
 168:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x48a                 	// #1162
 174:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 178:	add	x1, x1, #0x0
 17c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 180:	add	x0, x0, #0x0
 184:	bl	0 <__assert_fail>
 188:	ldr	x0, [x0, #16]
 18c:	ldr	x0, [x0]
 190:	b	278 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x278>
 194:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 198:	add	x3, x3, #0x0
 19c:	mov	w2, #0x48d                 	// #1165
 1a0:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 1a4:	add	x1, x1, #0x0
 1a8:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 1ac:	add	x0, x0, #0x0
 1b0:	bl	0 <__assert_fail>
 1b4:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0xb2                  	// #178
 1c0:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 1c4:	add	x1, x1, #0x0
 1c8:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 1cc:	add	x0, x0, #0x0
 1d0:	bl	0 <__assert_fail>
 1d4:	ldr	x1, [sp, #120]
 1d8:	cbz	x1, 378 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x378>
 1dc:	add	x0, sp, #0x78
 1e0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 1e4:	ldp	x25, x26, [sp, #80]
 1e8:	b	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x64>
 1ec:	ldr	x0, [x26]
 1f0:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
 1f4:	ldr	x2, [x26, #32]
 1f8:	mov	x1, #0xffffffff            	// #4294967295
 1fc:	cmp	x2, x1
 200:	b.hi	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x128>  // b.pmore
 204:	ldrb	w3, [x26, #40]
 208:	mov	x1, #0x0                   	// #0
 20c:	bfxil	x1, x2, #0, #32
 210:	bfi	x1, x3, #32, #8
 214:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
 218:	mov	x1, x0
 21c:	str	xzr, [sp]
 220:	mov	x7, #0x0                   	// #0
 224:	add	x6, sp, #0x60
 228:	mov	x5, x21
 22c:	mov	x4, x20
 230:	mov	w3, w23
 234:	mov	w2, #0x35                  	// #53
 238:	mov	x0, x25
 23c:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
 240:	ldrh	w0, [x19, #18]
 244:	and	w0, w0, #0xffff7fff
 248:	sub	w0, w0, #0x20
 24c:	cmp	w0, #0x9
 250:	b.hi	148 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x148>  // b.pmore
 254:	ldur	x0, [x19, #-48]
 258:	ldr	x0, [x0]
 25c:	ldur	x1, [x19, #-24]
 260:	ldr	x1, [x1]
 264:	cmp	x0, x1
 268:	b.ne	168 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x168>  // b.any
 26c:	ldrb	w1, [x0, #8]
 270:	cmp	w1, #0x10
 274:	b.eq	188 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x188>  // b.none
 278:	ldrb	w0, [x0, #8]
 27c:	and	w0, w0, #0xfffffffb
 280:	and	w0, w0, #0xff
 284:	cmp	w0, #0xb
 288:	b.ne	194 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x194>  // b.any
 28c:	ldr	x0, [x22, #8]
 290:	cbz	x0, 2e0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x2e0>
 294:	ldr	x20, [x22, #16]
 298:	mov	x1, x19
 29c:	add	x0, x0, #0x28
 2a0:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
 2a4:	add	x0, x19, #0x18
 2a8:	ldr	x2, [x20]
 2ac:	and	x2, x2, #0xfffffffffffffff8
 2b0:	str	x20, [x19, #32]
 2b4:	ldr	x1, [x19, #24]
 2b8:	and	x1, x1, #0x7
 2bc:	orr	x1, x1, x2
 2c0:	str	x1, [x19, #24]
 2c4:	str	x0, [x2, #8]
 2c8:	ldr	x1, [x20]
 2cc:	tst	x0, #0x7
 2d0:	b.ne	1b4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x1b4>  // b.any
 2d4:	and	x1, x1, #0x7
 2d8:	orr	x0, x0, x1
 2dc:	str	x0, [x20]
 2e0:	mov	x1, x24
 2e4:	mov	x0, x25
 2e8:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
 2ec:	ldr	x1, [x22]
 2f0:	cbz	x1, 368 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x368>
 2f4:	str	x1, [sp, #120]
 2f8:	add	x20, sp, #0x78
 2fc:	mov	x2, #0x2                   	// #2
 300:	mov	x0, x20
 304:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
 308:	add	x21, x19, #0x30
 30c:	cmp	x21, x20
 310:	b.eq	1d4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x1d4>  // b.none
 314:	ldr	x1, [x19, #48]
 318:	cbz	x1, 324 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x324>
 31c:	mov	x0, x21
 320:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 324:	ldr	x1, [sp, #120]
 328:	str	x1, [x19, #48]
 32c:	cbz	x1, 370 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x370>
 330:	mov	x2, x21
 334:	add	x0, sp, #0x78
 338:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
 33c:	ldp	x25, x26, [sp, #80]
 340:	b	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x64>
 344:	stp	x25, x26, [sp, #80]
 348:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 34c:	add	x3, x3, #0x0
 350:	mov	w2, #0x69                  	// #105
 354:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 358:	add	x1, x1, #0x0
 35c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
 360:	add	x0, x0, #0x0
 364:	bl	0 <__assert_fail>
 368:	ldp	x25, x26, [sp, #80]
 36c:	b	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x64>
 370:	ldp	x25, x26, [sp, #80]
 374:	b	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x64>
 378:	ldp	x25, x26, [sp, #80]
 37c:	b	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x64>

Disassembly of section .text._ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	cbz	x1, 48 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x48>
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	ldrb	w1, [x1, #16]
  1c:	cmp	w1, #0xd
  20:	b.eq	70 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x70>  // b.none
  24:	ldr	x0, [x19]
  28:	ldrb	w0, [x0, #8]
  2c:	cmp	w0, #0x10
  30:	b.eq	e0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xe0>  // b.none
  34:	mov	w19, #0x0                   	// #0
  38:	mov	w0, w19
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x29, x30, [sp], #80
  44:	ret
  48:	stp	x19, x20, [sp, #16]
  4c:	str	x21, [sp, #32]
  50:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x69                  	// #105
  5c:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
  60:	add	x1, x1, #0x0
  64:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <__assert_fail>
  70:	str	x21, [sp, #32]
  74:	add	x21, x19, #0x18
  78:	ldr	w0, [x21, #8]
  7c:	ldr	w1, [x20, #8]
  80:	cmp	w0, w1
  84:	b.eq	118 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x118>  // b.none
  88:	b.ls	184 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x184>  // b.plast
  8c:	add	x8, sp, #0x40
  90:	mov	w1, w0
  94:	mov	x0, x20
  98:	bl	0 <_ZNK4llvm5APInt4zextEj>
  9c:	ldr	w0, [x19, #32]
  a0:	ldr	w20, [sp, #72]
  a4:	cmp	w0, w20
  a8:	b.ne	150 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x150>  // b.any
  ac:	cmp	w0, #0x40
  b0:	b.ls	170 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x170>  // b.plast
  b4:	add	x1, sp, #0x40
  b8:	mov	x0, x21
  bc:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
  c0:	and	w19, w0, #0xff
  c4:	cmp	w20, #0x40
  c8:	b.ls	20c <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x20c>  // b.plast
  cc:	ldr	x0, [sp, #64]
  d0:	cbz	x0, 214 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x214>
  d4:	bl	0 <_ZdaPv>
  d8:	ldr	x21, [sp, #32]
  dc:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
  e0:	cmp	w1, #0x10
  e4:	b.hi	110 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x110>  // b.pmore
  e8:	mov	w1, #0x0                   	// #0
  ec:	mov	x0, x19
  f0:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  f4:	mov	x19, x0
  f8:	cbz	x0, 38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
  fc:	ldrb	w0, [x19, #16]
 100:	cmp	w0, #0xd
 104:	b.eq	204 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x204>  // b.none
 108:	mov	w19, #0x0                   	// #0
 10c:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 110:	mov	w19, #0x0                   	// #0
 114:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 118:	cmp	w0, #0x40
 11c:	b.ls	138 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x138>  // b.plast
 120:	mov	x1, x20
 124:	mov	x0, x21
 128:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 12c:	and	w19, w0, #0xff
 130:	ldr	x21, [sp, #32]
 134:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 138:	ldr	x1, [x19, #24]
 13c:	ldr	x0, [x20]
 140:	cmp	x1, x0
 144:	cset	w19, eq  // eq = none
 148:	ldr	x21, [sp, #32]
 14c:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 150:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x47f                 	// #1151
 15c:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 160:	add	x1, x1, #0x0
 164:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 168:	add	x0, x0, #0x0
 16c:	bl	0 <__assert_fail>
 170:	ldr	x1, [x19, #24]
 174:	ldr	x0, [sp, #64]
 178:	cmp	x1, x0
 17c:	cset	w19, eq  // eq = none
 180:	b	c4 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xc4>
 184:	add	x8, sp, #0x30
 188:	mov	x0, x21
 18c:	bl	0 <_ZNK4llvm5APInt4zextEj>
 190:	ldr	w0, [sp, #56]
 194:	ldr	w1, [x20, #8]
 198:	cmp	w0, w1
 19c:	b.ne	1cc <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x1cc>  // b.any
 1a0:	cmp	w0, #0x40
 1a4:	b.ls	1ec <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x1ec>  // b.plast
 1a8:	mov	x1, x20
 1ac:	add	x0, sp, #0x30
 1b0:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 1b4:	and	w19, w0, #0xff
 1b8:	ldr	x0, [sp, #48]
 1bc:	cbz	x0, 21c <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x21c>
 1c0:	bl	0 <_ZdaPv>
 1c4:	ldr	x21, [sp, #32]
 1c8:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 1cc:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0x47f                 	// #1151
 1d8:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1dc:	add	x1, x1, #0x0
 1e0:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1e4:	add	x0, x0, #0x0
 1e8:	bl	0 <__assert_fail>
 1ec:	ldr	x0, [x20]
 1f0:	ldr	x1, [sp, #48]
 1f4:	cmp	x1, x0
 1f8:	cset	w19, eq  // eq = none
 1fc:	ldr	x21, [sp, #32]
 200:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 204:	str	x21, [sp, #32]
 208:	b	74 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x74>
 20c:	ldr	x21, [sp, #32]
 210:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 214:	ldr	x21, [sp, #32]
 218:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 21c:	ldr	x21, [sp, #32]
 220:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>

Disassembly of section .text._ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 40 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>
   c:	ldrb	w1, [x0, #16]
  10:	sub	w1, w1, #0x25
  14:	and	w1, w1, #0xff
  18:	cmp	w1, #0x11
  1c:	b.ls	60 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x60>  // b.plast
  20:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	add	x3, x3, #0x0
  28:	mov	w2, #0x108                 	// #264
  2c:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x1, x1, #0x0
  34:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <__assert_fail>
  40:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x69                  	// #105
  4c:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  50:	add	x1, x1, #0x0
  54:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  58:	add	x0, x0, #0x0
  5c:	bl	0 <__assert_fail>
  60:	ldp	x29, x30, [sp], #16
  64:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x31
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  20:	mov	w0, #0x0                   	// #0
  24:	cmp	w1, #0x5
  28:	b.eq	118 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0x118>  // b.none
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x0, [x19, #-48]
  3c:	cbz	x0, 60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0x60>
  40:	ldr	x1, [x20]
  44:	str	x0, [x1]
  48:	ldur	x0, [x19, #-24]
  4c:	cbz	x0, 80 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0x80>
  50:	ldr	x1, [x20, #8]
  54:	str	x0, [x1]
  58:	mov	w0, #0x1                   	// #1
  5c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0x2c>
  60:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x69                  	// #105
  6c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x69                  	// #105
  8c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	mov	w1, #0x0                   	// #0
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  ac:	cbz	x0, d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0xd8>
  b0:	ldr	x1, [x20]
  b4:	str	x0, [x1]
  b8:	mov	w1, #0x1                   	// #1
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  c4:	cbz	x0, f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0xf8>
  c8:	ldr	x1, [x20, #8]
  cc:	str	x0, [x1]
  d0:	mov	w0, #0x1                   	// #1
  d4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0x2c>
  d8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x69                  	// #105
  e4:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  e8:	add	x1, x1, #0x0
  ec:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
 108:	add	x1, x1, #0x0
 10c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <__assert_fail>
 118:	ldrh	w0, [x19, #18]
 11c:	cmp	w0, #0x19
 120:	b.eq	a0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0xa0>  // b.none
 124:	mov	w0, #0x0                   	// #0
 128:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0x2c>

Disassembly of section .text._ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #16]
   8:	cmp	w1, #0x5
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	add	x3, x3, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	add	x1, x1, #0x0
  30:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  34:	add	x0, x0, #0x0
  38:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x31
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  20:	mov	w0, #0x0                   	// #0
  24:	cmp	w1, #0x5
  28:	b.eq	118 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0x118>  // b.none
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x0, [x19, #-48]
  3c:	cbz	x0, 60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0x60>
  40:	ldr	x1, [x20]
  44:	str	x0, [x1]
  48:	ldur	x0, [x19, #-24]
  4c:	cbz	x0, 80 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0x80>
  50:	ldr	x1, [x20, #8]
  54:	str	x0, [x1]
  58:	mov	w0, #0x1                   	// #1
  5c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  60:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x69                  	// #105
  6c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x69                  	// #105
  8c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	mov	w1, #0x0                   	// #0
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  ac:	cbz	x0, d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0xd8>
  b0:	ldr	x1, [x20]
  b4:	str	x0, [x1]
  b8:	mov	w1, #0x1                   	// #1
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  c4:	cbz	x0, f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0xf8>
  c8:	ldr	x1, [x20, #8]
  cc:	str	x0, [x1]
  d0:	mov	w0, #0x1                   	// #1
  d4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  d8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x69                  	// #105
  e4:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  e8:	add	x1, x1, #0x0
  ec:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
 108:	add	x1, x1, #0x0
 10c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <__assert_fail>
 118:	ldrh	w0, [x19, #18]
 11c:	cmp	w0, #0x19
 120:	b.eq	a0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0xa0>  // b.none
 124:	mov	w0, #0x0                   	// #0
 128:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  20:	mov	w0, #0x0                   	// #0
  24:	cmp	w1, #0x5
  28:	b.eq	118 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0x118>  // b.none
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x0, [x19, #-48]
  3c:	cbz	x0, 60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0x60>
  40:	ldr	x1, [x20]
  44:	str	x0, [x1]
  48:	ldur	x0, [x19, #-24]
  4c:	cbz	x0, 80 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0x80>
  50:	ldr	x1, [x20, #8]
  54:	str	x0, [x1]
  58:	mov	w0, #0x1                   	// #1
  5c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0x2c>
  60:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x69                  	// #105
  6c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x69                  	// #105
  8c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	mov	w1, #0x0                   	// #0
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  ac:	cbz	x0, d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0xd8>
  b0:	ldr	x1, [x20]
  b4:	str	x0, [x1]
  b8:	mov	w1, #0x1                   	// #1
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  c4:	cbz	x0, f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0xf8>
  c8:	ldr	x1, [x20, #8]
  cc:	str	x0, [x1]
  d0:	mov	w0, #0x1                   	// #1
  d4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0x2c>
  d8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x69                  	// #105
  e4:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  e8:	add	x1, x1, #0x0
  ec:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
 108:	add	x1, x1, #0x0
 10c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <__assert_fail>
 118:	ldrh	w0, [x19, #18]
 11c:	cmp	w0, #0x1a
 120:	b.eq	a0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0xa0>  // b.none
 124:	mov	w0, #0x0                   	// #0
 128:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  20:	mov	w0, #0x0                   	// #0
  24:	cmp	w1, #0x5
  28:	b.eq	118 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0x118>  // b.none
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x0, [x19, #-48]
  3c:	cbz	x0, 60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0x60>
  40:	ldr	x1, [x20]
  44:	str	x0, [x1]
  48:	ldur	x0, [x19, #-24]
  4c:	cbz	x0, 80 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0x80>
  50:	ldr	x1, [x20, #8]
  54:	str	x0, [x1]
  58:	mov	w0, #0x1                   	// #1
  5c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  60:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x69                  	// #105
  6c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x69                  	// #105
  8c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	mov	w1, #0x0                   	// #0
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  ac:	cbz	x0, d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0xd8>
  b0:	ldr	x1, [x20]
  b4:	str	x0, [x1]
  b8:	mov	w1, #0x1                   	// #1
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  c4:	cbz	x0, f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0xf8>
  c8:	ldr	x1, [x20, #8]
  cc:	str	x0, [x1]
  d0:	mov	w0, #0x1                   	// #1
  d4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  d8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x69                  	// #105
  e4:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  e8:	add	x1, x1, #0x0
  ec:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
 108:	add	x1, x1, #0x0
 10c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <__assert_fail>
 118:	ldrh	w0, [x19, #18]
 11c:	cmp	w0, #0x1a
 120:	b.eq	a0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0xa0>  // b.none
 124:	mov	w0, #0x0                   	// #0
 128:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	cbz	x1, 38 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x38>
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0xd
  1c:	b.eq	1e8 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x1e8>  // b.none
  20:	ldr	x1, [x1]
  24:	ldrb	w1, [x1, #8]
  28:	cmp	w1, #0x10
  2c:	b.eq	70 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x70>  // b.none
  30:	mov	w20, #0x0                   	// #0
  34:	b	208 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x208>
  38:	stp	x19, x20, [sp, #16]
  3c:	stp	x21, x22, [sp, #32]
  40:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x69                  	// #105
  4c:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  50:	add	x1, x1, #0x0
  54:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  58:	add	x0, x0, #0x0
  5c:	bl	0 <__assert_fail>
  60:	ldr	x0, [x19, #24]
  64:	cmp	x0, #0x1
  68:	cset	w20, eq  // eq = none
  6c:	b	208 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x208>
  70:	mov	w20, #0x0                   	// #0
  74:	cmp	w0, #0x10
  78:	b.hi	208 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x208>  // b.pmore
  7c:	mov	w1, #0x0                   	// #0
  80:	mov	x0, x19
  84:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  88:	cbz	x0, 1e0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x1e0>
  8c:	ldrb	w1, [x0, #16]
  90:	cmp	w1, #0xd
  94:	b.eq	c8 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0xc8>  // b.none
  98:	stp	x21, x22, [sp, #32]
  9c:	ldr	x0, [x19]
  a0:	cbz	x0, fc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0xfc>
  a4:	ldrb	w1, [x0, #8]
  a8:	cmp	w1, #0x10
  ac:	b.ne	11c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x11c>  // b.any
  b0:	ldr	x0, [x0, #32]
  b4:	mov	w22, w0
  b8:	cbz	w0, 13c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x13c>
  bc:	mov	w21, #0x0                   	// #0
  c0:	mov	w20, #0x0                   	// #0
  c4:	b	1b0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x1b0>
  c8:	ldr	w19, [x0, #32]
  cc:	cmp	w19, #0x40
  d0:	b.ls	ec <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0xec>  // b.plast
  d4:	add	x0, x0, #0x18
  d8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  dc:	sub	w19, w19, #0x1
  e0:	cmp	w19, w0
  e4:	cset	w20, eq  // eq = none
  e8:	b	208 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x208>
  ec:	ldr	x0, [x0, #24]
  f0:	cmp	x0, #0x1
  f4:	cset	w20, eq  // eq = none
  f8:	b	208 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x208>
  fc:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
 10c:	add	x1, x1, #0x0
 110:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
 114:	add	x0, x0, #0x0
 118:	bl	0 <__assert_fail>
 11c:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
 12c:	add	x1, x1, #0x0
 130:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
 134:	add	x0, x0, #0x0
 138:	bl	0 <__assert_fail>
 13c:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0xeb                  	// #235
 148:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
 14c:	add	x1, x1, #0x0
 150:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <__assert_fail>
 15c:	ldr	x0, [x0, #24]
 160:	cmp	x0, #0x1
 164:	cset	w20, eq  // eq = none
 168:	b	1a0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x1a0>
 16c:	ldp	x21, x22, [sp, #32]
 170:	b	208 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x208>
 174:	mov	w20, #0x0                   	// #0
 178:	ldp	x21, x22, [sp, #32]
 17c:	b	208 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x208>
 180:	ldr	w20, [x0, #32]
 184:	cmp	w20, #0x40
 188:	b.ls	15c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x15c>  // b.plast
 18c:	add	x0, x0, #0x18
 190:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 194:	sub	w20, w20, #0x1
 198:	cmp	w20, w0
 19c:	cset	w20, eq  // eq = none
 1a0:	cbz	w20, 218 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x218>
 1a4:	add	w21, w21, #0x1
 1a8:	cmp	w21, w22
 1ac:	b.eq	16c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x16c>  // b.none
 1b0:	mov	w1, w21
 1b4:	mov	x0, x19
 1b8:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
 1bc:	cbz	x0, 174 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x174>
 1c0:	ldrb	w1, [x0, #16]
 1c4:	cmp	w1, #0x9
 1c8:	b.eq	1a4 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x1a4>  // b.none
 1cc:	cmp	w1, #0xd
 1d0:	b.eq	180 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x180>  // b.none
 1d4:	mov	w20, #0x0                   	// #0
 1d8:	ldp	x21, x22, [sp, #32]
 1dc:	b	208 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x208>
 1e0:	stp	x21, x22, [sp, #32]
 1e4:	b	9c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x9c>
 1e8:	ldr	w20, [x1, #32]
 1ec:	cmp	w20, #0x40
 1f0:	b.ls	60 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x60>  // b.plast
 1f4:	add	x0, x19, #0x18
 1f8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 1fc:	sub	w20, w20, #0x1
 200:	cmp	w20, w0
 204:	cset	w20, eq  // eq = none
 208:	mov	w0, w20
 20c:	ldp	x19, x20, [sp, #16]
 210:	ldp	x29, x30, [sp], #48
 214:	ret
 218:	ldp	x21, x22, [sp, #32]
 21c:	b	208 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x208>

Disassembly of section .text._ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	cbz	x1, 80 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x80>
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0xd
  1c:	b.eq	1d0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1d0>  // b.none
  20:	ldr	x0, [x1]
  24:	ldrb	w0, [x0, #8]
  28:	mov	w20, #0x0                   	// #0
  2c:	cmp	w0, #0x10
  30:	b.ne	1f0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1f0>  // b.any
  34:	mov	w1, #0x0                   	// #0
  38:	mov	x0, x19
  3c:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  40:	cbz	x0, 50 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x50>
  44:	ldrb	w1, [x0, #16]
  48:	cmp	w1, #0xd
  4c:	b.eq	b8 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  50:	stp	x21, x22, [sp, #32]
  54:	ldr	x0, [x19]
  58:	cbz	x0, ec <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xec>
  5c:	ldrb	w1, [x0, #8]
  60:	cmp	w1, #0x10
  64:	b.ne	10c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x10c>  // b.any
  68:	ldr	x0, [x0, #32]
  6c:	mov	w22, w0
  70:	cbz	w0, 12c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x12c>
  74:	mov	w21, #0x0                   	// #0
  78:	mov	w20, #0x0                   	// #0
  7c:	b	1a0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1a0>
  80:	stp	x19, x20, [sp, #16]
  84:	stp	x21, x22, [sp, #32]
  88:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x69                  	// #105
  94:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  98:	add	x1, x1, #0x0
  9c:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <__assert_fail>
  a8:	ldr	x0, [x19, #24]
  ac:	cmp	x0, #0x1
  b0:	cset	w20, eq  // eq = none
  b4:	b	1f0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1f0>
  b8:	ldr	w19, [x0, #32]
  bc:	cmp	w19, #0x40
  c0:	b.ls	dc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xdc>  // b.plast
  c4:	add	x0, x0, #0x18
  c8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  cc:	sub	w19, w19, #0x1
  d0:	cmp	w19, w0
  d4:	cset	w20, eq  // eq = none
  d8:	b	1f0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1f0>
  dc:	ldr	x0, [x0, #24]
  e0:	cmp	x0, #0x1
  e4:	cset	w20, eq  // eq = none
  e8:	b	1f0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1f0>
  ec:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  fc:	add	x1, x1, #0x0
 100:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 104:	add	x0, x0, #0x0
 108:	bl	0 <__assert_fail>
 10c:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 11c:	add	x1, x1, #0x0
 120:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 124:	add	x0, x0, #0x0
 128:	bl	0 <__assert_fail>
 12c:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0xeb                  	// #235
 138:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 13c:	add	x1, x1, #0x0
 140:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 144:	add	x0, x0, #0x0
 148:	bl	0 <__assert_fail>
 14c:	ldr	x0, [x0, #24]
 150:	cmp	x0, #0x1
 154:	cset	w20, eq  // eq = none
 158:	b	190 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x190>
 15c:	ldp	x21, x22, [sp, #32]
 160:	b	1f0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1f0>
 164:	mov	w20, #0x0                   	// #0
 168:	ldp	x21, x22, [sp, #32]
 16c:	b	1f0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1f0>
 170:	ldr	w20, [x0, #32]
 174:	cmp	w20, #0x40
 178:	b.ls	14c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x14c>  // b.plast
 17c:	add	x0, x0, #0x18
 180:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 184:	sub	w20, w20, #0x1
 188:	cmp	w20, w0
 18c:	cset	w20, eq  // eq = none
 190:	cbz	w20, 200 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x200>
 194:	add	w21, w21, #0x1
 198:	cmp	w21, w22
 19c:	b.eq	15c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x15c>  // b.none
 1a0:	mov	w1, w21
 1a4:	mov	x0, x19
 1a8:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
 1ac:	cbz	x0, 164 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x164>
 1b0:	ldrb	w1, [x0, #16]
 1b4:	cmp	w1, #0x9
 1b8:	b.eq	194 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x194>  // b.none
 1bc:	cmp	w1, #0xd
 1c0:	b.eq	170 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x170>  // b.none
 1c4:	mov	w20, #0x0                   	// #0
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	b	1f0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1f0>
 1d0:	ldr	w20, [x1, #32]
 1d4:	cmp	w20, #0x40
 1d8:	b.ls	a8 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xa8>  // b.plast
 1dc:	add	x0, x19, #0x18
 1e0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 1e4:	sub	w20, w20, #0x1
 1e8:	cmp	w20, w0
 1ec:	cset	w20, eq  // eq = none
 1f0:	mov	w0, w20
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x29, x30, [sp], #48
 1fc:	ret
 200:	ldp	x21, x22, [sp, #32]
 204:	b	1f0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1f0>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x34
  1c:	b.eq	3c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x3c>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	2c8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c8>  // b.none
  28:	mov	w19, #0x0                   	// #0
  2c:	mov	w0, w19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #48
  38:	ret
  3c:	ldur	x0, [x19, #-48]
  40:	cbz	x0, 78 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x78>
  44:	ldr	x1, [x1]
  48:	str	x0, [x1]
  4c:	ldur	x20, [x19, #-24]
  50:	cbz	x20, 9c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x9c>
  54:	ldrb	w0, [x20, #16]
  58:	cmp	w0, #0xd
  5c:	b.eq	2a4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2a4>  // b.none
  60:	ldr	x1, [x20]
  64:	ldrb	w1, [x1, #8]
  68:	cmp	w1, #0x10
  6c:	b.eq	d0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0xd0>  // b.none
  70:	mov	w19, #0x0                   	// #0
  74:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
  78:	stp	x21, x22, [sp, #32]
  7c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x69                  	// #105
  88:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  8c:	add	x1, x1, #0x0
  90:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  94:	add	x0, x0, #0x0
  98:	bl	0 <__assert_fail>
  9c:	stp	x21, x22, [sp, #32]
  a0:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x69                  	// #105
  ac:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  b0:	add	x1, x1, #0x0
  b4:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  b8:	add	x0, x0, #0x0
  bc:	bl	0 <__assert_fail>
  c0:	ldr	x0, [x20, #24]
  c4:	cmp	x0, #0x1
  c8:	cset	w19, eq  // eq = none
  cc:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
  d0:	mov	w19, #0x0                   	// #0
  d4:	cmp	w0, #0x10
  d8:	b.hi	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>  // b.pmore
  dc:	mov	w1, #0x0                   	// #0
  e0:	mov	x0, x20
  e4:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  e8:	cbz	x0, 29c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x29c>
  ec:	ldrb	w1, [x0, #16]
  f0:	cmp	w1, #0xd
  f4:	b.eq	128 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x128>  // b.none
  f8:	stp	x21, x22, [sp, #32]
  fc:	ldr	x0, [x20]
 100:	cbz	x0, 15c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x15c>
 104:	ldrb	w1, [x0, #8]
 108:	cmp	w1, #0x10
 10c:	b.ne	17c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x17c>  // b.any
 110:	ldr	x0, [x0, #32]
 114:	mov	w22, w0
 118:	cbz	w0, 19c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x19c>
 11c:	mov	w19, #0x0                   	// #0
 120:	mov	w21, #0x0                   	// #0
 124:	b	26c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x26c>
 128:	ldr	w19, [x0, #32]
 12c:	cmp	w19, #0x40
 130:	b.ls	14c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x14c>  // b.plast
 134:	add	x0, x0, #0x18
 138:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 13c:	sub	w19, w19, #0x1
 140:	cmp	w19, w0
 144:	cset	w19, eq  // eq = none
 148:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 14c:	ldr	x0, [x0, #24]
 150:	cmp	x0, #0x1
 154:	cset	w19, eq  // eq = none
 158:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 15c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x69                  	// #105
 168:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 16c:	add	x1, x1, #0x0
 170:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 174:	add	x0, x0, #0x0
 178:	bl	0 <__assert_fail>
 17c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x108                 	// #264
 188:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 18c:	add	x1, x1, #0x0
 190:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 194:	add	x0, x0, #0x0
 198:	bl	0 <__assert_fail>
 19c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0xeb                  	// #235
 1a8:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1ac:	add	x1, x1, #0x0
 1b0:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1b4:	add	x0, x0, #0x0
 1b8:	bl	0 <__assert_fail>
 1bc:	ldr	x0, [x0, #24]
 1c0:	cmp	x0, #0x1
 1c4:	cset	w19, eq  // eq = none
 1c8:	b	25c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x25c>
 1cc:	ldp	x21, x22, [sp, #32]
 1d0:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 1d4:	mov	w19, #0x0                   	// #0
 1d8:	ldp	x21, x22, [sp, #32]
 1dc:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 1e0:	mov	w1, #0x0                   	// #0
 1e4:	mov	x0, x19
 1e8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1ec:	cbz	x0, 218 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x218>
 1f0:	ldr	x1, [x20], #8
 1f4:	str	x0, [x1]
 1f8:	mov	w1, #0x1                   	// #1
 1fc:	mov	x0, x19
 200:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 204:	mov	x1, x0
 208:	mov	x0, x20
 20c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 210:	and	w19, w0, #0xff
 214:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 218:	stp	x21, x22, [sp, #32]
 21c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 220:	add	x3, x3, #0x0
 224:	mov	w2, #0x69                  	// #105
 228:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 22c:	add	x1, x1, #0x0
 230:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 234:	add	x0, x0, #0x0
 238:	bl	0 <__assert_fail>
 23c:	ldr	w19, [x0, #32]
 240:	cmp	w19, #0x40
 244:	b.ls	1bc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x1bc>  // b.plast
 248:	add	x0, x0, #0x18
 24c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 250:	sub	w19, w19, #0x1
 254:	cmp	w19, w0
 258:	cset	w19, eq  // eq = none
 25c:	cbz	w19, 2dc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2dc>
 260:	add	w21, w21, #0x1
 264:	cmp	w22, w21
 268:	b.eq	1cc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x1cc>  // b.none
 26c:	mov	w1, w21
 270:	mov	x0, x20
 274:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
 278:	cbz	x0, 1d4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x1d4>
 27c:	ldrb	w1, [x0, #16]
 280:	cmp	w1, #0x9
 284:	b.eq	260 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x260>  // b.none
 288:	cmp	w1, #0xd
 28c:	b.eq	23c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x23c>  // b.none
 290:	mov	w19, #0x0                   	// #0
 294:	ldp	x21, x22, [sp, #32]
 298:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 29c:	stp	x21, x22, [sp, #32]
 2a0:	b	fc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0xfc>
 2a4:	ldr	w19, [x20, #32]
 2a8:	cmp	w19, #0x40
 2ac:	b.ls	c0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0xc0>  // b.plast
 2b0:	add	x0, x20, #0x18
 2b4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 2b8:	sub	w19, w19, #0x1
 2bc:	cmp	w19, w0
 2c0:	cset	w19, eq  // eq = none
 2c4:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 2c8:	ldrh	w0, [x19, #18]
 2cc:	cmp	w0, #0x1c
 2d0:	b.eq	1e0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x1e0>  // b.none
 2d4:	mov	w19, #0x0                   	// #0
 2d8:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 2dc:	ldp	x21, x22, [sp, #32]
 2e0:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	cbz	x1, 48 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x48>
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	ldrb	w0, [x1, #16]
  1c:	cmp	w0, #0xd
  20:	b.eq	70 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x70>  // b.none
  24:	ldr	x0, [x1]
  28:	ldrb	w0, [x0, #8]
  2c:	cmp	w0, #0x10
  30:	b.eq	e0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xe0>  // b.none
  34:	mov	w19, #0x0                   	// #0
  38:	mov	w0, w19
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x29, x30, [sp], #80
  44:	ret
  48:	stp	x19, x20, [sp, #16]
  4c:	str	x21, [sp, #32]
  50:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x69                  	// #105
  5c:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
  60:	add	x1, x1, #0x0
  64:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <__assert_fail>
  70:	str	x21, [sp, #32]
  74:	add	x21, x19, #0x18
  78:	ldr	w0, [x21, #8]
  7c:	ldr	w1, [x20, #8]
  80:	cmp	w0, w1
  84:	b.eq	108 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x108>  // b.none
  88:	b.ls	174 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x174>  // b.plast
  8c:	add	x8, sp, #0x40
  90:	mov	w1, w0
  94:	mov	x0, x20
  98:	bl	0 <_ZNK4llvm5APInt4zextEj>
  9c:	ldr	w0, [x19, #32]
  a0:	ldr	w20, [sp, #72]
  a4:	cmp	w0, w20
  a8:	b.ne	140 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x140>  // b.any
  ac:	cmp	w0, #0x40
  b0:	b.ls	160 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x160>  // b.plast
  b4:	add	x1, sp, #0x40
  b8:	mov	x0, x21
  bc:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
  c0:	and	w19, w0, #0xff
  c4:	cmp	w20, #0x40
  c8:	b.ls	204 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x204>  // b.plast
  cc:	ldr	x0, [sp, #64]
  d0:	cbz	x0, 20c <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x20c>
  d4:	bl	0 <_ZdaPv>
  d8:	ldr	x21, [sp, #32]
  dc:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>
  e0:	mov	w1, #0x0                   	// #0
  e4:	mov	x0, x19
  e8:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  ec:	mov	x19, x0
  f0:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x1f4>
  f4:	ldrb	w0, [x0, #16]
  f8:	cmp	w0, #0xd
  fc:	b.eq	1fc <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x1fc>  // b.none
 100:	mov	w19, #0x0                   	// #0
 104:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>
 108:	cmp	w0, #0x40
 10c:	b.ls	128 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x128>  // b.plast
 110:	mov	x1, x20
 114:	mov	x0, x21
 118:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 11c:	and	w19, w0, #0xff
 120:	ldr	x21, [sp, #32]
 124:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>
 128:	ldr	x1, [x19, #24]
 12c:	ldr	x0, [x20]
 130:	cmp	x1, x0
 134:	cset	w19, eq  // eq = none
 138:	ldr	x21, [sp, #32]
 13c:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>
 140:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x47f                 	// #1151
 14c:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 150:	add	x1, x1, #0x0
 154:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 158:	add	x0, x0, #0x0
 15c:	bl	0 <__assert_fail>
 160:	ldr	x1, [x19, #24]
 164:	ldr	x0, [sp, #64]
 168:	cmp	x1, x0
 16c:	cset	w19, eq  // eq = none
 170:	b	c4 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xc4>
 174:	add	x8, sp, #0x30
 178:	mov	x0, x21
 17c:	bl	0 <_ZNK4llvm5APInt4zextEj>
 180:	ldr	w0, [sp, #56]
 184:	ldr	w1, [x20, #8]
 188:	cmp	w0, w1
 18c:	b.ne	1bc <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x1bc>  // b.any
 190:	cmp	w0, #0x40
 194:	b.ls	1dc <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x1dc>  // b.plast
 198:	mov	x1, x20
 19c:	add	x0, sp, #0x30
 1a0:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 1a4:	and	w19, w0, #0xff
 1a8:	ldr	x0, [sp, #48]
 1ac:	cbz	x0, 214 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x214>
 1b0:	bl	0 <_ZdaPv>
 1b4:	ldr	x21, [sp, #32]
 1b8:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>
 1bc:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x47f                 	// #1151
 1c8:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1cc:	add	x1, x1, #0x0
 1d0:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1d4:	add	x0, x0, #0x0
 1d8:	bl	0 <__assert_fail>
 1dc:	ldr	x0, [x20]
 1e0:	ldr	x1, [sp, #48]
 1e4:	cmp	x1, x0
 1e8:	cset	w19, eq  // eq = none
 1ec:	ldr	x21, [sp, #32]
 1f0:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>
 1f4:	mov	w19, #0x0                   	// #0
 1f8:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>
 1fc:	str	x21, [sp, #32]
 200:	b	74 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x74>
 204:	ldr	x21, [sp, #32]
 208:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>
 20c:	ldr	x21, [sp, #32]
 210:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>
 214:	ldr	x21, [sp, #32]
 218:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x38>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x29
  1c:	b.eq	38 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	d4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_+0xd4>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x1, [x19, #-48]
  3c:	cbz	x1, 5c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_+0x5c>
  40:	mov	x0, x20
  44:	ldr	x2, [x0], #8
  48:	str	x1, [x2]
  4c:	ldur	x1, [x19, #-24]
  50:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  54:	and	w0, w0, #0xff
  58:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_+0x2c>
  5c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x69                  	// #105
  68:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  6c:	add	x1, x1, #0x0
  70:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  74:	add	x0, x0, #0x0
  78:	bl	0 <__assert_fail>
  7c:	mov	w1, #0x0                   	// #0
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  88:	cbz	x0, b4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_+0xb4>
  8c:	ldr	x1, [x20], #8
  90:	str	x0, [x1]
  94:	mov	w1, #0x1                   	// #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  a0:	mov	x1, x0
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  ac:	and	w0, w0, #0xff
  b0:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_+0x2c>
  b4:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	ldrh	w0, [x19, #18]
  d8:	cmp	w0, #0x11
  dc:	b.eq	7c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_+0x7c>  // b.none
  e0:	mov	w0, #0x0                   	// #0
  e4:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS0_7bind_tyIS2_EENS0_15specific_intvalELj17ELb0EEEEEbPT_RKT0_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x34
  1c:	b.eq	38 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	1f0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x1f0>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	str	x21, [sp, #32]
  3c:	ldur	x21, [x19, #-48]
  40:	ldrb	w0, [x21, #16]
  44:	cmp	w0, #0x32
  48:	b.eq	60 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x60>  // b.none
  4c:	cmp	w0, #0x5
  50:	b.eq	1c0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x1c0>  // b.none
  54:	mov	w0, #0x0                   	// #0
  58:	ldr	x21, [sp, #32]
  5c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
  60:	ldur	x1, [x21, #-48]
  64:	ldr	x2, [x20]
  68:	mov	w0, #0x0                   	// #0
  6c:	cmp	x2, x1
  70:	b.eq	7c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x7c>  // b.none
  74:	ldr	x21, [sp, #32]
  78:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
  7c:	ldur	x1, [x21, #-24]
  80:	add	x0, x20, #0x8
  84:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
  88:	and	w0, w0, #0xff
  8c:	cbz	w0, 204 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x204>
  90:	ldur	x1, [x19, #-24]
  94:	add	x0, x20, #0x18
  98:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
  9c:	and	w0, w0, #0xff
  a0:	ldr	x21, [sp, #32]
  a4:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
  a8:	mov	w1, #0x0                   	// #0
  ac:	mov	x0, x21
  b0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
  b4:	mov	x1, x0
  b8:	ldr	x2, [x20]
  bc:	mov	w0, #0x0                   	// #0
  c0:	cmp	x2, x1
  c4:	b.eq	d0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0xd0>  // b.none
  c8:	ldr	x21, [sp, #32]
  cc:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
  d0:	mov	w1, #0x1                   	// #1
  d4:	mov	x0, x21
  d8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
  dc:	mov	x1, x0
  e0:	add	x0, x20, #0x8
  e4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
  e8:	and	w0, w0, #0xff
  ec:	b	8c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x8c>
  f0:	str	x21, [sp, #32]
  f4:	mov	w1, #0x0                   	// #0
  f8:	mov	x0, x19
  fc:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
 100:	mov	x21, x0
 104:	ldrb	w0, [x0, #16]
 108:	cmp	w0, #0x32
 10c:	b.eq	124 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x124>  // b.none
 110:	cmp	w0, #0x5
 114:	b.eq	1d8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x1d8>  // b.none
 118:	mov	w0, #0x0                   	// #0
 11c:	ldr	x21, [sp, #32]
 120:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 124:	ldur	x1, [x21, #-48]
 128:	ldr	x2, [x20]
 12c:	mov	w0, #0x0                   	// #0
 130:	cmp	x2, x1
 134:	b.eq	140 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x140>  // b.none
 138:	ldr	x21, [sp, #32]
 13c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 140:	ldur	x1, [x21, #-24]
 144:	add	x0, x20, #0x8
 148:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
 14c:	and	w0, w0, #0xff
 150:	cbz	w0, 20c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x20c>
 154:	mov	w1, #0x1                   	// #1
 158:	mov	x0, x19
 15c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
 160:	mov	x1, x0
 164:	add	x0, x20, #0x18
 168:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
 16c:	and	w0, w0, #0xff
 170:	ldr	x21, [sp, #32]
 174:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 178:	mov	w1, #0x0                   	// #0
 17c:	mov	x0, x21
 180:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
 184:	mov	x1, x0
 188:	ldr	x2, [x20]
 18c:	mov	w0, #0x0                   	// #0
 190:	cmp	x2, x1
 194:	b.eq	1a0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x1a0>  // b.none
 198:	ldr	x21, [sp, #32]
 19c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 1a0:	mov	w1, #0x1                   	// #1
 1a4:	mov	x0, x21
 1a8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
 1ac:	mov	x1, x0
 1b0:	add	x0, x20, #0x8
 1b4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_>
 1b8:	and	w0, w0, #0xff
 1bc:	b	150 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x150>
 1c0:	ldrh	w0, [x21, #18]
 1c4:	cmp	w0, #0x1a
 1c8:	b.eq	a8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0xa8>  // b.none
 1cc:	mov	w0, #0x0                   	// #0
 1d0:	ldr	x21, [sp, #32]
 1d4:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 1d8:	ldrh	w0, [x21, #18]
 1dc:	cmp	w0, #0x1a
 1e0:	b.eq	178 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x178>  // b.none
 1e4:	mov	w0, #0x0                   	// #0
 1e8:	ldr	x21, [sp, #32]
 1ec:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 1f0:	ldrh	w0, [x19, #18]
 1f4:	cmp	w0, #0x1c
 1f8:	b.eq	f0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0xf0>  // b.none
 1fc:	mov	w0, #0x0                   	// #0
 200:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 204:	ldr	x21, [sp, #32]
 208:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 20c:	ldr	x21, [sp, #32]
 210:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EEEEEbPT_RKT0_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  20:	mov	w0, #0x0                   	// #0
  24:	cmp	w1, #0x5
  28:	b.eq	20c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x20c>  // b.none
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	str	x21, [sp, #32]
  3c:	ldur	x21, [x19, #-48]
  40:	ldrb	w0, [x21, #16]
  44:	cmp	w0, #0x32
  48:	b.eq	60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x60>  // b.none
  4c:	cmp	w0, #0x5
  50:	b.eq	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1dc>  // b.none
  54:	mov	w0, #0x0                   	// #0
  58:	ldr	x21, [sp, #32]
  5c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
  60:	mov	x0, x21
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  68:	mov	x1, x0
  6c:	ldur	x2, [x0, #-48]
  70:	ldr	x0, [x20]
  74:	ldr	x3, [x0]
  78:	mov	w0, #0x0                   	// #0
  7c:	cmp	x3, x2
  80:	b.eq	8c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x8c>  // b.none
  84:	ldr	x21, [sp, #32]
  88:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
  8c:	ldur	x1, [x1, #-24]
  90:	add	x0, x20, #0x8
  94:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  98:	and	w0, w0, #0xff
  9c:	cbz	w0, 220 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x220>
  a0:	ldur	x1, [x19, #-24]
  a4:	add	x0, x20, #0x18
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  ac:	and	w0, w0, #0xff
  b0:	ldr	x21, [sp, #32]
  b4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
  b8:	mov	w1, #0x0                   	// #0
  bc:	mov	x0, x21
  c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  c4:	mov	x1, x0
  c8:	ldr	x0, [x20]
  cc:	ldr	x2, [x0]
  d0:	mov	w0, #0x0                   	// #0
  d4:	cmp	x2, x1
  d8:	b.eq	e4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xe4>  // b.none
  dc:	ldr	x21, [sp, #32]
  e0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
  e4:	mov	w1, #0x1                   	// #1
  e8:	mov	x0, x21
  ec:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  f0:	mov	x1, x0
  f4:	add	x0, x20, #0x8
  f8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  fc:	and	w0, w0, #0xff
 100:	b	9c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x9c>
 104:	str	x21, [sp, #32]
 108:	mov	w1, #0x0                   	// #0
 10c:	mov	x0, x19
 110:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 114:	mov	x21, x0
 118:	ldrb	w0, [x0, #16]
 11c:	cmp	w0, #0x32
 120:	b.eq	138 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x138>  // b.none
 124:	cmp	w0, #0x5
 128:	b.eq	1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1f4>  // b.none
 12c:	mov	w0, #0x0                   	// #0
 130:	ldr	x21, [sp, #32]
 134:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
 138:	ldur	x1, [x21, #-48]
 13c:	ldr	x0, [x20]
 140:	ldr	x2, [x0]
 144:	mov	w0, #0x0                   	// #0
 148:	cmp	x2, x1
 14c:	b.eq	158 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x158>  // b.none
 150:	ldr	x21, [sp, #32]
 154:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
 158:	ldur	x1, [x21, #-24]
 15c:	add	x0, x20, #0x8
 160:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 164:	and	w0, w0, #0xff
 168:	cbz	w0, 228 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x228>
 16c:	mov	w1, #0x1                   	// #1
 170:	mov	x0, x19
 174:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 178:	mov	x1, x0
 17c:	add	x0, x20, #0x18
 180:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 184:	and	w0, w0, #0xff
 188:	ldr	x21, [sp, #32]
 18c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
 190:	mov	w1, #0x0                   	// #0
 194:	mov	x0, x21
 198:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 19c:	mov	x1, x0
 1a0:	ldr	x0, [x20]
 1a4:	ldr	x2, [x0]
 1a8:	mov	w0, #0x0                   	// #0
 1ac:	cmp	x2, x1
 1b0:	b.eq	1bc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1bc>  // b.none
 1b4:	ldr	x21, [sp, #32]
 1b8:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
 1bc:	mov	w1, #0x1                   	// #1
 1c0:	mov	x0, x21
 1c4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1c8:	mov	x1, x0
 1cc:	add	x0, x20, #0x8
 1d0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1d4:	and	w0, w0, #0xff
 1d8:	b	168 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x168>
 1dc:	ldrh	w0, [x21, #18]
 1e0:	cmp	w0, #0x1a
 1e4:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
 1e8:	mov	w0, #0x0                   	// #0
 1ec:	ldr	x21, [sp, #32]
 1f0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
 1f4:	ldrh	w0, [x21, #18]
 1f8:	cmp	w0, #0x1a
 1fc:	b.eq	190 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x190>  // b.none
 200:	mov	w0, #0x0                   	// #0
 204:	ldr	x21, [sp, #32]
 208:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
 20c:	ldrh	w0, [x19, #18]
 210:	cmp	w0, #0x1c
 214:	b.eq	104 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x104>  // b.none
 218:	mov	w0, #0x0                   	// #0
 21c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
 220:	ldr	x21, [sp, #32]
 224:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>
 228:	ldr	x21, [sp, #32]
 22c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  20:	mov	w0, #0x0                   	// #0
  24:	cmp	w1, #0x5
  28:	b.eq	20c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x20c>  // b.none
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	str	x21, [sp, #32]
  3c:	ldur	x21, [x19, #-48]
  40:	ldrb	w0, [x21, #16]
  44:	cmp	w0, #0x32
  48:	b.eq	60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x60>  // b.none
  4c:	cmp	w0, #0x5
  50:	b.eq	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1dc>  // b.none
  54:	mov	w0, #0x0                   	// #0
  58:	ldr	x21, [sp, #32]
  5c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  60:	mov	x0, x21
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  68:	mov	x1, x0
  6c:	ldur	x2, [x0, #-48]
  70:	ldr	x0, [x20]
  74:	ldr	x3, [x0]
  78:	mov	w0, #0x0                   	// #0
  7c:	cmp	x3, x2
  80:	b.eq	8c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x8c>  // b.none
  84:	ldr	x21, [sp, #32]
  88:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  8c:	ldur	x1, [x1, #-24]
  90:	add	x0, x20, #0x8
  94:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  98:	and	w0, w0, #0xff
  9c:	cbz	w0, 220 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x220>
  a0:	ldur	x1, [x19, #-24]
  a4:	add	x0, x20, #0x18
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  ac:	and	w0, w0, #0xff
  b0:	ldr	x21, [sp, #32]
  b4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  b8:	mov	w1, #0x0                   	// #0
  bc:	mov	x0, x21
  c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  c4:	mov	x1, x0
  c8:	ldr	x0, [x20]
  cc:	ldr	x2, [x0]
  d0:	mov	w0, #0x0                   	// #0
  d4:	cmp	x2, x1
  d8:	b.eq	e4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0xe4>  // b.none
  dc:	ldr	x21, [sp, #32]
  e0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  e4:	mov	w1, #0x1                   	// #1
  e8:	mov	x0, x21
  ec:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  f0:	mov	x1, x0
  f4:	add	x0, x20, #0x8
  f8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  fc:	and	w0, w0, #0xff
 100:	b	9c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x9c>
 104:	str	x21, [sp, #32]
 108:	mov	w1, #0x0                   	// #0
 10c:	mov	x0, x19
 110:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 114:	mov	x21, x0
 118:	ldrb	w0, [x0, #16]
 11c:	cmp	w0, #0x32
 120:	b.eq	138 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x138>  // b.none
 124:	cmp	w0, #0x5
 128:	b.eq	1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1f4>  // b.none
 12c:	mov	w0, #0x0                   	// #0
 130:	ldr	x21, [sp, #32]
 134:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
 138:	ldur	x1, [x21, #-48]
 13c:	ldr	x0, [x20]
 140:	ldr	x2, [x0]
 144:	mov	w0, #0x0                   	// #0
 148:	cmp	x2, x1
 14c:	b.eq	158 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x158>  // b.none
 150:	ldr	x21, [sp, #32]
 154:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
 158:	ldur	x1, [x21, #-24]
 15c:	add	x0, x20, #0x8
 160:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 164:	and	w0, w0, #0xff
 168:	cbz	w0, 228 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x228>
 16c:	mov	w1, #0x1                   	// #1
 170:	mov	x0, x19
 174:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 178:	mov	x1, x0
 17c:	add	x0, x20, #0x18
 180:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 184:	and	w0, w0, #0xff
 188:	ldr	x21, [sp, #32]
 18c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
 190:	mov	w1, #0x0                   	// #0
 194:	mov	x0, x21
 198:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 19c:	mov	x1, x0
 1a0:	ldr	x0, [x20]
 1a4:	ldr	x2, [x0]
 1a8:	mov	w0, #0x0                   	// #0
 1ac:	cmp	x2, x1
 1b0:	b.eq	1bc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1bc>  // b.none
 1b4:	ldr	x21, [sp, #32]
 1b8:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
 1bc:	mov	w1, #0x1                   	// #1
 1c0:	mov	x0, x21
 1c4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1c8:	mov	x1, x0
 1cc:	add	x0, x20, #0x8
 1d0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1d4:	and	w0, w0, #0xff
 1d8:	b	168 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x168>
 1dc:	ldrh	w0, [x21, #18]
 1e0:	cmp	w0, #0x1a
 1e4:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
 1e8:	mov	w0, #0x0                   	// #0
 1ec:	ldr	x21, [sp, #32]
 1f0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
 1f4:	ldrh	w0, [x21, #18]
 1f8:	cmp	w0, #0x1a
 1fc:	b.eq	190 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x190>  // b.none
 200:	mov	w0, #0x0                   	// #0
 204:	ldr	x21, [sp, #32]
 208:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
 20c:	ldrh	w0, [x19, #18]
 210:	cmp	w0, #0x1c
 214:	b.eq	104 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x104>  // b.none
 218:	mov	w0, #0x0                   	// #0
 21c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
 220:	ldr	x21, [sp, #32]
 224:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
 228:	ldr	x21, [sp, #32]
 22c:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x19, x1
  18:	ldrb	w1, [x1, #16]
  1c:	cmp	w1, #0x27
  20:	b.eq	44 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0x44>  // b.none
  24:	mov	w20, #0x0                   	// #0
  28:	cmp	w1, #0x5
  2c:	b.eq	e4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0xe4>  // b.none
  30:	mov	w0, w20
  34:	ldp	x19, x20, [sp, #16]
  38:	ldr	x21, [sp, #32]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret
  44:	ldur	x1, [x19, #-48]
  48:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  4c:	ands	w20, w0, #0xff
  50:	b.eq	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0x30>  // b.none
  54:	ldur	x0, [x19, #-24]
  58:	cbz	x0, 68 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0x68>
  5c:	ldr	x1, [x21, #16]
  60:	str	x0, [x1]
  64:	b	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0x30>
  68:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x69                  	// #105
  74:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  78:	add	x1, x1, #0x0
  7c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  80:	add	x0, x0, #0x0
  84:	bl	0 <__assert_fail>
  88:	mov	w1, #0x0                   	// #0
  8c:	mov	x0, x19
  90:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  94:	mov	x1, x0
  98:	mov	x0, x21
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  a0:	ands	w20, w0, #0xff
  a4:	b.eq	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0x30>  // b.none
  a8:	mov	w1, #0x1                   	// #1
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  b4:	cbz	x0, c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0xc4>
  b8:	ldr	x1, [x21, #16]
  bc:	str	x0, [x1]
  c0:	b	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0x30>
  c4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x69                  	// #105
  d0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  d4:	add	x1, x1, #0x0
  d8:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  dc:	add	x0, x0, #0x0
  e0:	bl	0 <__assert_fail>
  e4:	ldrh	w0, [x19, #18]
  e8:	cmp	w0, #0xf
  ec:	b.eq	88 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0x88>  // b.none
  f0:	mov	w20, #0x0                   	// #0
  f4:	b	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0x30>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x19, x1
  18:	ldrb	w1, [x1, #16]
  1c:	cmp	w1, #0x27
  20:	b.eq	44 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0x44>  // b.none
  24:	mov	w20, #0x0                   	// #0
  28:	cmp	w1, #0x5
  2c:	b.eq	e4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0xe4>  // b.none
  30:	mov	w0, w20
  34:	ldp	x19, x20, [sp, #16]
  38:	ldr	x21, [sp, #32]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret
  44:	ldur	x1, [x19, #-48]
  48:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  4c:	ands	w20, w0, #0xff
  50:	b.eq	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0x30>  // b.none
  54:	ldur	x0, [x19, #-24]
  58:	cbz	x0, 68 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0x68>
  5c:	ldr	x1, [x21, #16]
  60:	str	x0, [x1]
  64:	b	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0x30>
  68:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x69                  	// #105
  74:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  78:	add	x1, x1, #0x0
  7c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  80:	add	x0, x0, #0x0
  84:	bl	0 <__assert_fail>
  88:	mov	w1, #0x0                   	// #0
  8c:	mov	x0, x19
  90:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  94:	mov	x1, x0
  98:	mov	x0, x21
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  a0:	ands	w20, w0, #0xff
  a4:	b.eq	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0x30>  // b.none
  a8:	mov	w1, #0x1                   	// #1
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  b4:	cbz	x0, c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0xc4>
  b8:	ldr	x1, [x21, #16]
  bc:	str	x0, [x1]
  c0:	b	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0x30>
  c4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x69                  	// #105
  d0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  d4:	add	x1, x1, #0x0
  d8:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  dc:	add	x0, x0, #0x0
  e0:	bl	0 <__assert_fail>
  e4:	ldrh	w0, [x19, #18]
  e8:	cmp	w0, #0xf
  ec:	b.eq	88 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0x88>  // b.none
  f0:	mov	w20, #0x0                   	// #0
  f4:	b	30 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0x30>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0x32
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xd4>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x1, [x1, #-48]
  3c:	cbz	x1, 5c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x5c>
  40:	mov	x0, x20
  44:	ldr	x2, [x0], #8
  48:	str	x1, [x2]
  4c:	ldur	x1, [x19, #-24]
  50:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  54:	and	w0, w0, #0xff
  58:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x2c>
  5c:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x69                  	// #105
  68:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  6c:	add	x1, x1, #0x0
  70:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  74:	add	x0, x0, #0x0
  78:	bl	0 <__assert_fail>
  7c:	mov	w1, #0x0                   	// #0
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  88:	cbz	x0, b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb4>
  8c:	ldr	x1, [x20], #8
  90:	str	x0, [x1]
  94:	mov	w1, #0x1                   	// #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  a0:	mov	x1, x0
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  ac:	and	w0, w0, #0xff
  b0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x2c>
  b4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	ldrh	w0, [x1, #18]
  d8:	cmp	w0, #0x1a
  dc:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x7c>  // b.none
  e0:	mov	w0, #0x0                   	// #0
  e4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0x32
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xd4>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x1, [x1, #-48]
  3c:	cbz	x1, 5c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x5c>
  40:	mov	x0, x20
  44:	ldr	x2, [x0], #8
  48:	str	x1, [x2]
  4c:	ldur	x1, [x19, #-24]
  50:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  54:	and	w0, w0, #0xff
  58:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  5c:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x69                  	// #105
  68:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  6c:	add	x1, x1, #0x0
  70:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  74:	add	x0, x0, #0x0
  78:	bl	0 <__assert_fail>
  7c:	mov	w1, #0x0                   	// #0
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  88:	cbz	x0, b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb4>
  8c:	ldr	x1, [x20], #8
  90:	str	x0, [x1]
  94:	mov	w1, #0x1                   	// #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  a0:	mov	x1, x0
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  ac:	and	w0, w0, #0xff
  b0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  b4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	ldrh	w0, [x1, #18]
  d8:	cmp	w0, #0x1a
  dc:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x7c>  // b.none
  e0:	mov	w0, #0x0                   	// #0
  e4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0x31
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xd4>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x1, [x1, #-48]
  3c:	cbz	x1, 5c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x5c>
  40:	mov	x0, x20
  44:	ldr	x2, [x0], #8
  48:	str	x1, [x2]
  4c:	ldur	x1, [x19, #-24]
  50:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  54:	and	w0, w0, #0xff
  58:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x2c>
  5c:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x69                  	// #105
  68:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  6c:	add	x1, x1, #0x0
  70:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  74:	add	x0, x0, #0x0
  78:	bl	0 <__assert_fail>
  7c:	mov	w1, #0x0                   	// #0
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  88:	cbz	x0, b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb4>
  8c:	ldr	x1, [x20], #8
  90:	str	x0, [x1]
  94:	mov	w1, #0x1                   	// #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  a0:	mov	x1, x0
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  ac:	and	w0, w0, #0xff
  b0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x2c>
  b4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	ldrh	w0, [x1, #18]
  d8:	cmp	w0, #0x19
  dc:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x7c>  // b.none
  e0:	mov	w0, #0x0                   	// #0
  e4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0x31
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xd4>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x1, [x1, #-48]
  3c:	cbz	x1, 5c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x5c>
  40:	mov	x0, x20
  44:	ldr	x2, [x0], #8
  48:	str	x1, [x2]
  4c:	ldur	x1, [x19, #-24]
  50:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  54:	and	w0, w0, #0xff
  58:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  5c:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x69                  	// #105
  68:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  6c:	add	x1, x1, #0x0
  70:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  74:	add	x0, x0, #0x0
  78:	bl	0 <__assert_fail>
  7c:	mov	w1, #0x0                   	// #0
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  88:	cbz	x0, b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb4>
  8c:	ldr	x1, [x20], #8
  90:	str	x0, [x1]
  94:	mov	w1, #0x1                   	// #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  a0:	mov	x1, x0
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  ac:	and	w0, w0, #0xff
  b0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  b4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	ldrh	w0, [x1, #18]
  d8:	cmp	w0, #0x19
  dc:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x7c>  // b.none
  e0:	mov	w0, #0x0                   	// #0
  e4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>

Disassembly of section .text._ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 40 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>
   c:	ldrb	w1, [x0, #16]
  10:	sub	w1, w1, #0x25
  14:	and	w1, w1, #0xff
  18:	cmp	w1, #0x11
  1c:	b.ls	60 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x60>  // b.plast
  20:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	add	x3, x3, #0x0
  28:	mov	w2, #0x108                 	// #264
  2c:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x1, x1, #0x0
  34:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <__assert_fail>
  40:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x69                  	// #105
  4c:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  50:	add	x1, x1, #0x0
  54:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  58:	add	x0, x0, #0x0
  5c:	bl	0 <__assert_fail>
  60:	ldp	x29, x30, [sp], #16
  64:	ret

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x34
  1c:	b.eq	38 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	2cc <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2cc>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	str	x21, [sp, #32]
  3c:	ldur	x21, [x19, #-48]
  40:	mov	x0, x21
  44:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  48:	ldr	x0, [x21, #8]
  4c:	cbz	x0, 284 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x284>
  50:	ldr	x1, [x0, #8]
  54:	mov	w0, #0x0                   	// #0
  58:	cbz	x1, 64 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x64>
  5c:	ldr	x21, [sp, #32]
  60:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
  64:	ldrb	w0, [x21, #16]
  68:	cmp	w0, #0x35
  6c:	b.eq	84 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x84>  // b.none
  70:	cmp	w0, #0x5
  74:	b.eq	29c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x29c>  // b.none
  78:	mov	w0, #0x0                   	// #0
  7c:	ldr	x21, [sp, #32]
  80:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
  84:	mov	x0, x21
  88:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  8c:	ldur	x1, [x0, #-48]
  90:	cbz	x1, b4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0xb4>
  94:	ldur	x0, [x0, #-24]
  98:	cbz	x0, d4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0xd4>
  9c:	ldur	x1, [x19, #-24]
  a0:	add	x0, x20, #0x2
  a4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  a8:	and	w0, w0, #0xff
  ac:	ldr	x21, [sp, #32]
  b0:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
  b4:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x69                  	// #105
  e0:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  e4:	add	x1, x1, #0x0
  e8:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
  ec:	add	x0, x0, #0x0
  f0:	bl	0 <__assert_fail>
  f4:	mov	w1, #0x0                   	// #0
  f8:	mov	x0, x21
  fc:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 100:	cbz	x0, 134 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x134>
 104:	mov	w1, #0x1                   	// #1
 108:	mov	x0, x21
 10c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 110:	cbnz	x0, 9c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x9c>
 114:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x69                  	// #105
 120:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 124:	add	x1, x1, #0x0
 128:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <__assert_fail>
 134:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x69                  	// #105
 140:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 144:	add	x1, x1, #0x0
 148:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 14c:	add	x0, x0, #0x0
 150:	bl	0 <__assert_fail>
 154:	str	x21, [sp, #32]
 158:	mov	w1, #0x0                   	// #0
 15c:	mov	x0, x19
 160:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 164:	mov	x21, x0
 168:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
 16c:	ldr	x0, [x21, #8]
 170:	cbz	x0, 290 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x290>
 174:	ldr	x1, [x0, #8]
 178:	mov	w0, #0x0                   	// #0
 17c:	cbz	x1, 188 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x188>
 180:	ldr	x21, [sp, #32]
 184:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 188:	ldrb	w0, [x21, #16]
 18c:	cmp	w0, #0x35
 190:	b.eq	1a8 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x1a8>  // b.none
 194:	cmp	w0, #0x5
 198:	b.eq	2b4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2b4>  // b.none
 19c:	mov	w0, #0x0                   	// #0
 1a0:	ldr	x21, [sp, #32]
 1a4:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 1a8:	mov	x0, x21
 1ac:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1b0:	ldur	x1, [x0, #-48]
 1b4:	cbz	x1, 1e4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x1e4>
 1b8:	ldur	x0, [x0, #-24]
 1bc:	cbz	x0, 204 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x204>
 1c0:	mov	w1, #0x1                   	// #1
 1c4:	mov	x0, x19
 1c8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1cc:	mov	x1, x0
 1d0:	add	x0, x20, #0x2
 1d4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1d8:	and	w0, w0, #0xff
 1dc:	ldr	x21, [sp, #32]
 1e0:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 1e4:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1e8:	add	x3, x3, #0x0
 1ec:	mov	w2, #0x69                  	// #105
 1f0:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1f4:	add	x1, x1, #0x0
 1f8:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 1fc:	add	x0, x0, #0x0
 200:	bl	0 <__assert_fail>
 204:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 208:	add	x3, x3, #0x0
 20c:	mov	w2, #0x69                  	// #105
 210:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 214:	add	x1, x1, #0x0
 218:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 21c:	add	x0, x0, #0x0
 220:	bl	0 <__assert_fail>
 224:	mov	w1, #0x0                   	// #0
 228:	mov	x0, x21
 22c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 230:	cbz	x0, 264 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x264>
 234:	mov	w1, #0x1                   	// #1
 238:	mov	x0, x21
 23c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 240:	cbnz	x0, 1c0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x1c0>
 244:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 248:	add	x3, x3, #0x0
 24c:	mov	w2, #0x69                  	// #105
 250:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 254:	add	x1, x1, #0x0
 258:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 25c:	add	x0, x0, #0x0
 260:	bl	0 <__assert_fail>
 264:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 268:	add	x3, x3, #0x0
 26c:	mov	w2, #0x69                  	// #105
 270:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 274:	add	x1, x1, #0x0
 278:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_>
 27c:	add	x0, x0, #0x0
 280:	bl	0 <__assert_fail>
 284:	mov	w0, #0x0                   	// #0
 288:	ldr	x21, [sp, #32]
 28c:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 290:	mov	w0, #0x0                   	// #0
 294:	ldr	x21, [sp, #32]
 298:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 29c:	ldrh	w0, [x21, #18]
 2a0:	cmp	w0, #0x1d
 2a4:	b.eq	f4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0xf4>  // b.none
 2a8:	mov	w0, #0x0                   	// #0
 2ac:	ldr	x21, [sp, #32]
 2b0:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 2b4:	ldrh	w0, [x21, #18]
 2b8:	cmp	w0, #0x1d
 2bc:	b.eq	224 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x224>  // b.none
 2c0:	mov	w0, #0x0                   	// #0
 2c4:	ldr	x21, [sp, #32]
 2c8:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>
 2cc:	ldrh	w0, [x19, #18]
 2d0:	cmp	w0, #0x1c
 2d4:	b.eq	154 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x154>  // b.none
 2d8:	mov	w0, #0x0                   	// #0
 2dc:	b	2c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EEEEEbPT_RKT0_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w0, [x0, #16]
  14:	cmp	w0, #0x34
  18:	b.eq	34 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x34>  // b.none
  1c:	cmp	w0, #0x5
  20:	b.eq	518 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x518>  // b.none
  24:	mov	w0, #0x0                   	// #0
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	ldur	x20, [x19, #-48]
  38:	mov	x0, x20
  3c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  40:	ldr	x0, [x20, #8]
  44:	cbz	x0, 50 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x50>
  48:	ldr	x0, [x0, #8]
  4c:	cbz	x0, dc <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0xdc>
  50:	ldur	x20, [x19, #-24]
  54:	mov	x0, x20
  58:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  5c:	ldr	x0, [x20, #8]
  60:	cbz	x0, 4ec <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x4ec>
  64:	ldr	x1, [x0, #8]
  68:	mov	w0, #0x0                   	// #0
  6c:	cbnz	x1, 28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
  70:	ldrb	w0, [x20, #16]
  74:	cmp	w0, #0x34
  78:	b.eq	1e0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x1e0>  // b.none
  7c:	mov	x0, x20
  80:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
  84:	mov	x20, x0
  88:	cbz	x0, 4f4 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x4f4>
  8c:	ldrh	w1, [x0, #18]
  90:	mov	w0, #0x0                   	// #0
  94:	cmp	w1, #0x1c
  98:	b.ne	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>  // b.any
  9c:	mov	w1, #0x0                   	// #0
  a0:	mov	x0, x20
  a4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
  a8:	cbz	x0, 264 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x264>
  ac:	mov	w1, #0x1                   	// #1
  b0:	mov	x0, x20
  b4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
  b8:	cbnz	x0, 1f8 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x1f8>
  bc:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x69                  	// #105
  c8:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
  cc:	add	x1, x1, #0x0
  d0:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
  d4:	add	x0, x0, #0x0
  d8:	bl	0 <__assert_fail>
  dc:	ldrb	w0, [x20, #16]
  e0:	cmp	w0, #0x34
  e4:	b.eq	13c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x13c>  // b.none
  e8:	cmp	w0, #0x5
  ec:	b.ne	50 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x50>  // b.any
  f0:	ldrh	w0, [x20, #18]
  f4:	cmp	w0, #0x1c
  f8:	b.ne	50 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x50>  // b.any
  fc:	mov	w1, #0x0                   	// #0
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 108:	cbz	x0, 1c0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x1c0>
 10c:	mov	w1, #0x1                   	// #1
 110:	mov	x0, x20
 114:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 118:	cbnz	x0, 154 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x154>
 11c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 12c:	add	x1, x1, #0x0
 130:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 134:	add	x0, x0, #0x0
 138:	bl	0 <__assert_fail>
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 144:	ldur	x1, [x0, #-48]
 148:	cbz	x1, 180 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x180>
 14c:	ldur	x0, [x0, #-24]
 150:	cbz	x0, 1a0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x1a0>
 154:	ldur	x1, [x19, #-24]
 158:	mov	w0, #0x1                   	// #1
 15c:	cbnz	x1, 28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 160:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 164:	add	x3, x3, #0x0
 168:	mov	w2, #0x69                  	// #105
 16c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 170:	add	x1, x1, #0x0
 174:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 178:	add	x0, x0, #0x0
 17c:	bl	0 <__assert_fail>
 180:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x69                  	// #105
 18c:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 190:	add	x1, x1, #0x0
 194:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 198:	add	x0, x0, #0x0
 19c:	bl	0 <__assert_fail>
 1a0:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x69                  	// #105
 1ac:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 1b0:	add	x1, x1, #0x0
 1b4:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 1b8:	add	x0, x0, #0x0
 1bc:	bl	0 <__assert_fail>
 1c0:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x69                  	// #105
 1cc:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 1d0:	add	x1, x1, #0x0
 1d4:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 1d8:	add	x0, x0, #0x0
 1dc:	bl	0 <__assert_fail>
 1e0:	mov	x0, x20
 1e4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 1e8:	ldur	x1, [x0, #-48]
 1ec:	cbz	x1, 224 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x224>
 1f0:	ldur	x0, [x0, #-24]
 1f4:	cbz	x0, 244 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x244>
 1f8:	ldur	x1, [x19, #-48]
 1fc:	mov	w0, #0x1                   	// #1
 200:	cbnz	x1, 28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 204:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 208:	add	x3, x3, #0x0
 20c:	mov	w2, #0x69                  	// #105
 210:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 214:	add	x1, x1, #0x0
 218:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 21c:	add	x0, x0, #0x0
 220:	bl	0 <__assert_fail>
 224:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 228:	add	x3, x3, #0x0
 22c:	mov	w2, #0x69                  	// #105
 230:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 234:	add	x1, x1, #0x0
 238:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 23c:	add	x0, x0, #0x0
 240:	bl	0 <__assert_fail>
 244:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 248:	add	x3, x3, #0x0
 24c:	mov	w2, #0x69                  	// #105
 250:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 254:	add	x1, x1, #0x0
 258:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 25c:	add	x0, x0, #0x0
 260:	bl	0 <__assert_fail>
 264:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 268:	add	x3, x3, #0x0
 26c:	mov	w2, #0x69                  	// #105
 270:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 274:	add	x1, x1, #0x0
 278:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 27c:	add	x0, x0, #0x0
 280:	bl	0 <__assert_fail>
 284:	mov	w1, #0x0                   	// #0
 288:	mov	x0, x19
 28c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 290:	mov	x20, x0
 294:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
 298:	ldr	x0, [x20, #8]
 29c:	cbz	x0, 2a8 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x2a8>
 2a0:	ldr	x0, [x0, #8]
 2a4:	cbz	x0, 2ec <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x2ec>
 2a8:	mov	w1, #0x1                   	// #1
 2ac:	mov	x0, x19
 2b0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 2b4:	mov	x20, x0
 2b8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
 2bc:	ldr	x0, [x20, #8]
 2c0:	cbz	x0, 4fc <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x4fc>
 2c4:	ldr	x1, [x0, #8]
 2c8:	mov	w0, #0x0                   	// #0
 2cc:	cbnz	x1, 28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 2d0:	ldrb	w0, [x20, #16]
 2d4:	cmp	w0, #0x34
 2d8:	b.eq	3fc <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x3fc>  // b.none
 2dc:	cmp	w0, #0x5
 2e0:	b.eq	504 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x504>  // b.none
 2e4:	mov	w0, #0x0                   	// #0
 2e8:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 2ec:	ldrb	w0, [x20, #16]
 2f0:	cmp	w0, #0x34
 2f4:	b.eq	34c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x34c>  // b.none
 2f8:	cmp	w0, #0x5
 2fc:	b.ne	2a8 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x2a8>  // b.any
 300:	ldrh	w0, [x20, #18]
 304:	cmp	w0, #0x1c
 308:	b.ne	2a8 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x2a8>  // b.any
 30c:	mov	w1, #0x0                   	// #0
 310:	mov	x0, x20
 314:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 318:	cbz	x0, 3dc <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x3dc>
 31c:	mov	w1, #0x1                   	// #1
 320:	mov	x0, x20
 324:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 328:	cbnz	x0, 364 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x364>
 32c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 330:	add	x3, x3, #0x0
 334:	mov	w2, #0x69                  	// #105
 338:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 33c:	add	x1, x1, #0x0
 340:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 344:	add	x0, x0, #0x0
 348:	bl	0 <__assert_fail>
 34c:	mov	x0, x20
 350:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 354:	ldur	x1, [x0, #-48]
 358:	cbz	x1, 39c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x39c>
 35c:	ldur	x0, [x0, #-24]
 360:	cbz	x0, 3bc <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x3bc>
 364:	mov	w1, #0x1                   	// #1
 368:	mov	x0, x19
 36c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 370:	mov	x1, x0
 374:	mov	w0, #0x1                   	// #1
 378:	cbnz	x1, 28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 37c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 380:	add	x3, x3, #0x0
 384:	mov	w2, #0x69                  	// #105
 388:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 38c:	add	x1, x1, #0x0
 390:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 394:	add	x0, x0, #0x0
 398:	bl	0 <__assert_fail>
 39c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 3a0:	add	x3, x3, #0x0
 3a4:	mov	w2, #0x69                  	// #105
 3a8:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 3ac:	add	x1, x1, #0x0
 3b0:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 3b4:	add	x0, x0, #0x0
 3b8:	bl	0 <__assert_fail>
 3bc:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 3c0:	add	x3, x3, #0x0
 3c4:	mov	w2, #0x69                  	// #105
 3c8:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 3cc:	add	x1, x1, #0x0
 3d0:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 3d4:	add	x0, x0, #0x0
 3d8:	bl	0 <__assert_fail>
 3dc:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 3e0:	add	x3, x3, #0x0
 3e4:	mov	w2, #0x69                  	// #105
 3e8:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 3ec:	add	x1, x1, #0x0
 3f0:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 3f4:	add	x0, x0, #0x0
 3f8:	bl	0 <__assert_fail>
 3fc:	mov	x0, x20
 400:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 404:	ldur	x1, [x0, #-48]
 408:	cbz	x1, 44c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x44c>
 40c:	ldur	x0, [x0, #-24]
 410:	cbz	x0, 46c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x46c>
 414:	mov	w1, #0x0                   	// #0
 418:	mov	x0, x19
 41c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 420:	mov	x1, x0
 424:	mov	w0, #0x1                   	// #1
 428:	cbnz	x1, 28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 42c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 430:	add	x3, x3, #0x0
 434:	mov	w2, #0x69                  	// #105
 438:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 43c:	add	x1, x1, #0x0
 440:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 444:	add	x0, x0, #0x0
 448:	bl	0 <__assert_fail>
 44c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 450:	add	x3, x3, #0x0
 454:	mov	w2, #0x69                  	// #105
 458:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 45c:	add	x1, x1, #0x0
 460:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 464:	add	x0, x0, #0x0
 468:	bl	0 <__assert_fail>
 46c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 470:	add	x3, x3, #0x0
 474:	mov	w2, #0x69                  	// #105
 478:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 47c:	add	x1, x1, #0x0
 480:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 484:	add	x0, x0, #0x0
 488:	bl	0 <__assert_fail>
 48c:	mov	w1, #0x0                   	// #0
 490:	mov	x0, x20
 494:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 498:	cbz	x0, 4cc <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x4cc>
 49c:	mov	w1, #0x1                   	// #1
 4a0:	mov	x0, x20
 4a4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 4a8:	cbnz	x0, 414 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x414>
 4ac:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 4b0:	add	x3, x3, #0x0
 4b4:	mov	w2, #0x69                  	// #105
 4b8:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 4bc:	add	x1, x1, #0x0
 4c0:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 4c4:	add	x0, x0, #0x0
 4c8:	bl	0 <__assert_fail>
 4cc:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 4d0:	add	x3, x3, #0x0
 4d4:	mov	w2, #0x69                  	// #105
 4d8:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 4dc:	add	x1, x1, #0x0
 4e0:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_>
 4e4:	add	x0, x0, #0x0
 4e8:	bl	0 <__assert_fail>
 4ec:	mov	w0, #0x0                   	// #0
 4f0:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 4f4:	mov	w0, #0x0                   	// #0
 4f8:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 4fc:	mov	w0, #0x0                   	// #0
 500:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 504:	ldrh	w0, [x20, #18]
 508:	cmp	w0, #0x1c
 50c:	b.eq	48c <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x48c>  // b.none
 510:	mov	w0, #0x0                   	// #0
 514:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>
 518:	ldrh	w0, [x19, #18]
 51c:	cmp	w0, #0x1c
 520:	b.eq	284 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x284>  // b.none
 524:	mov	w0, #0x0                   	// #0
 528:	b	28 <_ZN4llvm12PatternMatch5matchINS_11InstructionENS0_14BinaryOp_matchINS0_12OneUse_matchINS3_INS0_11class_matchINS_5ValueEEES7_Lj28ELb0EEEEES7_Lj28ELb1EEEEEbPT_RKT0_+0x28>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0x32
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xd4>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x1, [x1, #-48]
  3c:	cbz	x1, 5c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x5c>
  40:	mov	x0, x20
  44:	ldr	x2, [x0], #8
  48:	str	x1, [x2]
  4c:	ldur	x1, [x19, #-24]
  50:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  54:	and	w0, w0, #0xff
  58:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x2c>
  5c:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x69                  	// #105
  68:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  6c:	add	x1, x1, #0x0
  70:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  74:	add	x0, x0, #0x0
  78:	bl	0 <__assert_fail>
  7c:	mov	w1, #0x0                   	// #0
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  88:	cbz	x0, b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb4>
  8c:	ldr	x1, [x20], #8
  90:	str	x0, [x1]
  94:	mov	w1, #0x1                   	// #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  a0:	mov	x1, x0
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  ac:	and	w0, w0, #0xff
  b0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x2c>
  b4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	ldrh	w0, [x1, #18]
  d8:	cmp	w0, #0x1a
  dc:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x7c>  // b.none
  e0:	mov	w0, #0x0                   	// #0
  e4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0x32
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xd4>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldur	x1, [x1, #-48]
  3c:	cbz	x1, 5c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x5c>
  40:	mov	x0, x20
  44:	ldr	x2, [x0], #8
  48:	str	x1, [x2]
  4c:	ldur	x1, [x19, #-24]
  50:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  54:	and	w0, w0, #0xff
  58:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  5c:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x69                  	// #105
  68:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  6c:	add	x1, x1, #0x0
  70:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  74:	add	x0, x0, #0x0
  78:	bl	0 <__assert_fail>
  7c:	mov	w1, #0x0                   	// #0
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  88:	cbz	x0, b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb4>
  8c:	ldr	x1, [x20], #8
  90:	str	x0, [x1]
  94:	mov	w1, #0x1                   	// #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  a0:	mov	x1, x0
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  ac:	and	w0, w0, #0xff
  b0:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  b4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	ldrh	w0, [x1, #18]
  d8:	cmp	w0, #0x1a
  dc:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x7c>  // b.none
  e0:	mov	w0, #0x0                   	// #0
  e4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x34
  1c:	b.eq	38 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	288 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x288>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	str	x21, [sp, #32]
  3c:	ldur	x21, [x19, #-48]
  40:	ldrb	w0, [x21, #16]
  44:	cmp	w0, #0x25
  48:	b.eq	60 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x60>  // b.none
  4c:	cmp	w0, #0x5
  50:	b.eq	178 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x178>  // b.none
  54:	mov	w0, #0x0                   	// #0
  58:	ldr	x21, [sp, #32]
  5c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
  60:	ldur	x1, [x21, #-48]
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
  6c:	and	w0, w0, #0xff
  70:	cbz	w0, 88 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x88>
  74:	ldur	x0, [x21, #-24]
  78:	ldr	x1, [x20, #24]
  7c:	ldr	x1, [x1]
  80:	cmp	x1, x0
  84:	b.eq	b4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0xb4>  // b.none
  88:	ldur	x1, [x21, #-24]
  8c:	mov	x0, x20
  90:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
  94:	and	w0, w0, #0xff
  98:	cbz	w0, 54 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x54>
  9c:	ldur	x0, [x21, #-48]
  a0:	ldr	x1, [x20, #24]
  a4:	ldr	x1, [x1]
  a8:	cmp	x1, x0
  ac:	cset	w0, eq  // eq = none
  b0:	cbz	w0, 29c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x29c>
  b4:	ldur	x1, [x19, #-24]
  b8:	add	x0, x20, #0x20
  bc:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
  c0:	and	w0, w0, #0xff
  c4:	ldr	x21, [sp, #32]
  c8:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
  cc:	str	x21, [sp, #32]
  d0:	mov	w1, #0x0                   	// #0
  d4:	mov	x0, x19
  d8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
  dc:	mov	x21, x0
  e0:	ldrb	w0, [x0, #16]
  e4:	cmp	w0, #0x25
  e8:	b.eq	100 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x100>  // b.none
  ec:	cmp	w0, #0x5
  f0:	b.eq	200 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x200>  // b.none
  f4:	mov	w0, #0x0                   	// #0
  f8:	ldr	x21, [sp, #32]
  fc:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 100:	ldur	x1, [x21, #-48]
 104:	mov	x0, x20
 108:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 10c:	and	w0, w0, #0xff
 110:	cbz	w0, 128 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x128>
 114:	ldur	x0, [x21, #-24]
 118:	ldr	x1, [x20, #24]
 11c:	ldr	x1, [x1]
 120:	cmp	x1, x0
 124:	b.eq	154 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x154>  // b.none
 128:	ldur	x1, [x21, #-24]
 12c:	mov	x0, x20
 130:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 134:	and	w0, w0, #0xff
 138:	cbz	w0, f4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0xf4>
 13c:	ldur	x0, [x21, #-48]
 140:	ldr	x1, [x20, #24]
 144:	ldr	x1, [x1]
 148:	cmp	x1, x0
 14c:	cset	w0, eq  // eq = none
 150:	cbz	w0, 2a4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x2a4>
 154:	mov	w1, #0x1                   	// #1
 158:	mov	x0, x19
 15c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 160:	mov	x1, x0
 164:	add	x0, x20, #0x20
 168:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 16c:	and	w0, w0, #0xff
 170:	ldr	x21, [sp, #32]
 174:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 178:	ldrh	w0, [x21, #18]
 17c:	cmp	w0, #0xd
 180:	b.ne	54 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x54>  // b.any
 184:	mov	w1, #0x0                   	// #0
 188:	mov	x0, x21
 18c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 190:	mov	x1, x0
 194:	mov	x0, x20
 198:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 19c:	and	w0, w0, #0xff
 1a0:	cbz	w0, 1c0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x1c0>
 1a4:	mov	w1, #0x1                   	// #1
 1a8:	mov	x0, x21
 1ac:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 1b0:	ldr	x1, [x20, #24]
 1b4:	ldr	x1, [x1]
 1b8:	cmp	x1, x0
 1bc:	b.eq	b4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0xb4>  // b.none
 1c0:	mov	w1, #0x1                   	// #1
 1c4:	mov	x0, x21
 1c8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 1cc:	mov	x1, x0
 1d0:	mov	x0, x20
 1d4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 1d8:	and	w0, w0, #0xff
 1dc:	cbz	w0, 54 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x54>
 1e0:	mov	w1, #0x0                   	// #0
 1e4:	mov	x0, x21
 1e8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 1ec:	ldr	x1, [x20, #24]
 1f0:	ldr	x1, [x1]
 1f4:	cmp	x1, x0
 1f8:	cset	w0, eq  // eq = none
 1fc:	b	b0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0xb0>
 200:	ldrh	w0, [x21, #18]
 204:	cmp	w0, #0xd
 208:	b.ne	f4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0xf4>  // b.any
 20c:	mov	w1, #0x0                   	// #0
 210:	mov	x0, x21
 214:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 218:	mov	x1, x0
 21c:	mov	x0, x20
 220:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 224:	and	w0, w0, #0xff
 228:	cbz	w0, 248 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x248>
 22c:	mov	w1, #0x1                   	// #1
 230:	mov	x0, x21
 234:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 238:	ldr	x1, [x20, #24]
 23c:	ldr	x1, [x1]
 240:	cmp	x1, x0
 244:	b.eq	154 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x154>  // b.none
 248:	mov	w1, #0x1                   	// #1
 24c:	mov	x0, x21
 250:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 254:	mov	x1, x0
 258:	mov	x0, x20
 25c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 260:	and	w0, w0, #0xff
 264:	cbz	w0, f4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0xf4>
 268:	mov	w1, #0x0                   	// #0
 26c:	mov	x0, x21
 270:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_>
 274:	ldr	x1, [x20, #24]
 278:	ldr	x1, [x1]
 27c:	cmp	x1, x0
 280:	cset	w0, eq  // eq = none
 284:	b	150 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x150>
 288:	ldrh	w0, [x19, #18]
 28c:	cmp	w0, #0x1c
 290:	b.eq	cc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0xcc>  // b.none
 294:	mov	w0, #0x0                   	// #0
 298:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 29c:	ldr	x21, [sp, #32]
 2a0:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x2c>
 2a4:	ldr	x21, [sp, #32]
 2a8:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS2_EELj13ELb1EEES6_Lj28ELb0EEEEEbPT_RKT0_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  20:	mov	w0, #0x0                   	// #0
  24:	cmp	w1, #0x5
  28:	b.eq	a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xa8>  // b.none
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldr	x0, [x0]
  3c:	ldur	x1, [x19, #-48]
  40:	ldr	x2, [x0]
  44:	mov	w0, #0x0                   	// #0
  48:	cmp	x2, x1
  4c:	b.ne	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>  // b.any
  50:	ldur	x1, [x19, #-24]
  54:	add	x0, x20, #0x8
  58:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  5c:	and	w0, w0, #0xff
  60:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  64:	mov	w1, #0x0                   	// #0
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  70:	mov	x1, x0
  74:	ldr	x0, [x20]
  78:	ldr	x2, [x0]
  7c:	mov	w0, #0x0                   	// #0
  80:	cmp	x2, x1
  84:	b.ne	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>  // b.any
  88:	mov	w1, #0x1                   	// #1
  8c:	mov	x0, x19
  90:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  94:	mov	x1, x0
  98:	add	x0, x20, #0x8
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  a0:	and	w0, w0, #0xff
  a4:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>
  a8:	ldrh	w0, [x19, #18]
  ac:	cmp	w0, #0x1a
  b0:	b.eq	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x64>  // b.none
  b4:	mov	w0, #0x0                   	// #0
  b8:	b	2c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x2c>

Disassembly of section .text._ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_:

0000000000000000 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #16]
  18:	cmp	w0, #0x25
  1c:	b.eq	38 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x38>  // b.none
  20:	cmp	w0, #0x5
  24:	b.eq	52c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x52c>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	stp	x21, x22, [sp, #32]
  3c:	ldur	x21, [x19, #-48]
  40:	ldrb	w0, [x21, #16]
  44:	cmp	w0, #0x34
  48:	b.eq	78 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x78>  // b.none
  4c:	cmp	w0, #0x5
  50:	b.eq	484 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x484>  // b.none
  54:	ldur	x21, [x19, #-24]
  58:	ldrb	w0, [x21, #16]
  5c:	cmp	w0, #0x34
  60:	b.eq	138 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x138>  // b.none
  64:	cmp	w0, #0x5
  68:	b.eq	46c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x46c>  // b.none
  6c:	mov	w0, #0x0                   	// #0
  70:	ldp	x21, x22, [sp, #32]
  74:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
  78:	ldur	x1, [x21, #-48]
  7c:	cbz	x1, c0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0xc0>
  80:	mov	x0, x20
  84:	ldr	x2, [x0], #8
  88:	str	x1, [x2]
  8c:	ldur	x1, [x21, #-24]
  90:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
  94:	and	w0, w0, #0xff
  98:	cbz	w0, 54 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x54>
  9c:	ldur	x21, [x19, #-24]
  a0:	ldrb	w0, [x21, #16]
  a4:	cmp	w0, #0x34
  a8:	b.eq	100 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x100>  // b.none
  ac:	cmp	w0, #0x5
  b0:	b.eq	45c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x45c>  // b.none
  b4:	mov	w0, #0x0                   	// #0
  b8:	ldp	x21, x22, [sp, #32]
  bc:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
  c0:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x69                  	// #105
  cc:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
  d0:	add	x1, x1, #0x0
  d4:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
  d8:	add	x0, x0, #0x0
  dc:	bl	0 <__assert_fail>
  e0:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x69                  	// #105
  ec:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
  f0:	add	x1, x1, #0x0
  f4:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
  f8:	add	x0, x0, #0x0
  fc:	bl	0 <__assert_fail>
 100:	mov	x0, x21
 104:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 108:	mov	x22, x0
 10c:	ldur	x0, [x0, #-48]
 110:	ldrb	w1, [x0, #16]
 114:	cmp	w1, #0x32
 118:	b.eq	174 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x174>  // b.none
 11c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 120:	mov	x21, x0
 124:	cbz	x0, 134 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x134>
 128:	ldrh	w0, [x0, #18]
 12c:	cmp	w0, #0x1a
 130:	b.eq	1bc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x1bc>  // b.none
 134:	ldur	x21, [x19, #-24]
 138:	ldur	x1, [x21, #-48]
 13c:	cbz	x1, 238 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x238>
 140:	mov	x0, x20
 144:	ldr	x2, [x0], #8
 148:	str	x1, [x2]
 14c:	ldur	x1, [x21, #-24]
 150:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 154:	and	w0, w0, #0xff
 158:	cbz	w0, 540 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x540>
 15c:	ldur	x1, [x19, #-48]
 160:	add	x0, x20, #0x18
 164:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 168:	and	w0, w0, #0xff
 16c:	ldp	x21, x22, [sp, #32]
 170:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
 174:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 178:	ldur	x1, [x0, #-48]
 17c:	ldr	x2, [x20, #24]
 180:	ldr	x2, [x2]
 184:	cmp	x2, x1
 188:	b.ne	134 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x134>  // b.any
 18c:	ldur	x1, [x0, #-24]
 190:	add	x0, x20, #0x20
 194:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 198:	and	w0, w0, #0xff
 19c:	cbz	w0, 54 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x54>
 1a0:	ldur	x1, [x22, #-24]
 1a4:	add	x0, x20, #0x30
 1a8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 1ac:	and	w0, w0, #0xff
 1b0:	cbz	w0, 54 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x54>
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
 1bc:	mov	w1, #0x0                   	// #0
 1c0:	mov	x0, x21
 1c4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 1c8:	ldr	x1, [x20, #24]
 1cc:	ldr	x1, [x1]
 1d0:	cmp	x1, x0
 1d4:	b.ne	134 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x134>  // b.any
 1d8:	mov	w1, #0x1                   	// #1
 1dc:	mov	x0, x21
 1e0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 1e4:	mov	x1, x0
 1e8:	add	x0, x20, #0x20
 1ec:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 1f0:	and	w0, w0, #0xff
 1f4:	b	19c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x19c>
 1f8:	mov	w1, #0x0                   	// #0
 1fc:	mov	x0, x21
 200:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 204:	mov	x1, x0
 208:	add	x0, x20, #0x18
 20c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 210:	and	w0, w0, #0xff
 214:	cbz	w0, 54 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x54>
 218:	mov	w1, #0x1                   	// #1
 21c:	mov	x0, x21
 220:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 224:	mov	x1, x0
 228:	add	x0, x20, #0x30
 22c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 230:	and	w0, w0, #0xff
 234:	b	1b0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x1b0>
 238:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 23c:	add	x3, x3, #0x0
 240:	mov	w2, #0x69                  	// #105
 244:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 248:	add	x1, x1, #0x0
 24c:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 250:	add	x0, x0, #0x0
 254:	bl	0 <__assert_fail>
 258:	mov	w1, #0x0                   	// #0
 25c:	mov	x0, x21
 260:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 264:	cbz	x0, 294 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x294>
 268:	mov	x22, x20
 26c:	ldr	x1, [x22], #8
 270:	str	x0, [x1]
 274:	mov	w1, #0x1                   	// #1
 278:	mov	x0, x21
 27c:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 280:	mov	x1, x0
 284:	mov	x0, x22
 288:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 28c:	and	w0, w0, #0xff
 290:	b	158 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x158>
 294:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 298:	add	x3, x3, #0x0
 29c:	mov	w2, #0x69                  	// #105
 2a0:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 2a4:	add	x1, x1, #0x0
 2a8:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 2ac:	add	x0, x0, #0x0
 2b0:	bl	0 <__assert_fail>
 2b4:	stp	x21, x22, [sp, #32]
 2b8:	mov	w1, #0x0                   	// #0
 2bc:	mov	x0, x19
 2c0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 2c4:	mov	x21, x0
 2c8:	ldrb	w0, [x0, #16]
 2cc:	cmp	w0, #0x34
 2d0:	b.eq	30c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x30c>  // b.none
 2d4:	cmp	w0, #0x5
 2d8:	b.eq	4e4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x4e4>  // b.none
 2dc:	mov	w1, #0x1                   	// #1
 2e0:	mov	x0, x19
 2e4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 2e8:	mov	x21, x0
 2ec:	ldrb	w0, [x0, #16]
 2f0:	cmp	w0, #0x34
 2f4:	b.eq	398 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x398>  // b.none
 2f8:	cmp	w0, #0x5
 2fc:	b.eq	4cc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x4cc>  // b.none
 300:	mov	w0, #0x0                   	// #0
 304:	ldp	x21, x22, [sp, #32]
 308:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
 30c:	ldur	x1, [x21, #-48]
 310:	cbz	x1, 358 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x358>
 314:	mov	x0, x20
 318:	ldr	x2, [x0], #8
 31c:	str	x1, [x2]
 320:	ldur	x1, [x21, #-24]
 324:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 328:	and	w0, w0, #0xff
 32c:	cbz	w0, 2dc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2dc>
 330:	mov	w1, #0x1                   	// #1
 334:	mov	x0, x19
 338:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 33c:	mov	x1, x0
 340:	add	x0, x20, #0x18
 344:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 348:	ands	w0, w0, #0xff
 34c:	b.eq	2dc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2dc>  // b.none
 350:	ldp	x21, x22, [sp, #32]
 354:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
 358:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 35c:	add	x3, x3, #0x0
 360:	mov	w2, #0x69                  	// #105
 364:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 368:	add	x1, x1, #0x0
 36c:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 370:	add	x0, x0, #0x0
 374:	bl	0 <__assert_fail>
 378:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 37c:	add	x3, x3, #0x0
 380:	mov	w2, #0x69                  	// #105
 384:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 388:	add	x1, x1, #0x0
 38c:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 390:	add	x0, x0, #0x0
 394:	bl	0 <__assert_fail>
 398:	ldur	x1, [x21, #-48]
 39c:	cbz	x1, 3e0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x3e0>
 3a0:	mov	x0, x20
 3a4:	ldr	x2, [x0], #8
 3a8:	str	x1, [x2]
 3ac:	ldur	x1, [x21, #-24]
 3b0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 3b4:	and	w0, w0, #0xff
 3b8:	cbz	w0, 548 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x548>
 3bc:	mov	w1, #0x0                   	// #0
 3c0:	mov	x0, x19
 3c4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 3c8:	mov	x1, x0
 3cc:	add	x0, x20, #0x18
 3d0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 3d4:	and	w0, w0, #0xff
 3d8:	ldp	x21, x22, [sp, #32]
 3dc:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
 3e0:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 3e4:	add	x3, x3, #0x0
 3e8:	mov	w2, #0x69                  	// #105
 3ec:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 3f0:	add	x1, x1, #0x0
 3f4:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 3f8:	add	x0, x0, #0x0
 3fc:	bl	0 <__assert_fail>
 400:	mov	w1, #0x0                   	// #0
 404:	mov	x0, x21
 408:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 40c:	cbz	x0, 43c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x43c>
 410:	mov	x22, x20
 414:	ldr	x1, [x22], #8
 418:	str	x0, [x1]
 41c:	mov	w1, #0x1                   	// #1
 420:	mov	x0, x21
 424:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 428:	mov	x1, x0
 42c:	mov	x0, x22
 430:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 434:	and	w0, w0, #0xff
 438:	b	3b8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x3b8>
 43c:	adrp	x3, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 440:	add	x3, x3, #0x0
 444:	mov	w2, #0x69                  	// #105
 448:	adrp	x1, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 44c:	add	x1, x1, #0x0
 450:	adrp	x0, 0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 454:	add	x0, x0, #0x0
 458:	bl	0 <__assert_fail>
 45c:	ldrh	w0, [x21, #18]
 460:	cmp	w0, #0x1c
 464:	b.eq	1f8 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x1f8>  // b.none
 468:	ldur	x21, [x19, #-24]
 46c:	ldrh	w0, [x21, #18]
 470:	cmp	w0, #0x1c
 474:	b.eq	258 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x258>  // b.none
 478:	mov	w0, #0x0                   	// #0
 47c:	ldp	x21, x22, [sp, #32]
 480:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
 484:	ldrh	w0, [x21, #18]
 488:	cmp	w0, #0x1c
 48c:	b.ne	54 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x54>  // b.any
 490:	mov	w1, #0x0                   	// #0
 494:	mov	x0, x21
 498:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 49c:	cbz	x0, e0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0xe0>
 4a0:	mov	x22, x20
 4a4:	ldr	x1, [x22], #8
 4a8:	str	x0, [x1]
 4ac:	mov	w1, #0x1                   	// #1
 4b0:	mov	x0, x21
 4b4:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 4b8:	mov	x1, x0
 4bc:	mov	x0, x22
 4c0:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 4c4:	and	w0, w0, #0xff
 4c8:	b	98 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x98>
 4cc:	ldrh	w0, [x21, #18]
 4d0:	cmp	w0, #0x1c
 4d4:	b.eq	400 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x400>  // b.none
 4d8:	mov	w0, #0x0                   	// #0
 4dc:	ldp	x21, x22, [sp, #32]
 4e0:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
 4e4:	ldrh	w0, [x21, #18]
 4e8:	cmp	w0, #0x1c
 4ec:	b.ne	2dc <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2dc>  // b.any
 4f0:	mov	w1, #0x0                   	// #0
 4f4:	mov	x0, x21
 4f8:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 4fc:	cbz	x0, 378 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x378>
 500:	mov	x22, x20
 504:	ldr	x1, [x22], #8
 508:	str	x0, [x1]
 50c:	mov	w1, #0x1                   	// #1
 510:	mov	x0, x21
 514:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 518:	mov	x1, x0
 51c:	mov	x0, x22
 520:	bl	0 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_>
 524:	and	w0, w0, #0xff
 528:	b	32c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x32c>
 52c:	ldrh	w0, [x19, #18]
 530:	cmp	w0, #0xd
 534:	b.eq	2b4 <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2b4>  // b.none
 538:	mov	w0, #0x0                   	// #0
 53c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
 540:	ldp	x21, x22, [sp, #32]
 544:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>
 548:	ldp	x21, x22, [sp, #32]
 54c:	b	2c <_ZN4llvm12PatternMatch5matchINS_5ValueENS0_14BinaryOp_matchINS3_INS0_7bind_tyIS2_EENS0_15specific_intvalELj28ELb0EEENS3_INS3_INS0_14deferredval_tyIS2_EES6_Lj26ELb0EEES6_Lj28ELb0EEELj13ELb1EEEEEbPT_RKT0_+0x2c>

TruncInstCombine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	mov	x29, sp
       8:	cbz	x1, 3c <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x3c>
       c:	mov	x2, x0
      10:	mov	x0, x1
      14:	ldrb	w1, [x1, #8]
      18:	cmp	w1, #0x10
      1c:	b.eq	3c <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x3c>  // b.none
      20:	ldr	x1, [x2]
      24:	cbz	x1, 5c <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x5c>
      28:	ldrb	w2, [x1, #8]
      2c:	cmp	w2, #0x10
      30:	b.eq	7c <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x7c>  // b.none
      34:	ldp	x29, x30, [sp], #16
      38:	ret
      3c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
      40:	add	x3, x3, #0x0
      44:	mov	w2, #0x116                 	// #278
      48:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
      4c:	add	x1, x1, #0x0
      50:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
      54:	add	x0, x0, #0x0
      58:	bl	0 <__assert_fail>
      5c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
      60:	add	x3, x3, #0x0
      64:	mov	w2, #0x69                  	// #105
      68:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
      6c:	add	x1, x1, #0x0
      70:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
      74:	add	x0, x0, #0x0
      78:	bl	0 <__assert_fail>
      7c:	ldr	w1, [x1, #32]
      80:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
      84:	b	34 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x34>

0000000000000088 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE>:
      88:	stp	x29, x30, [sp, #-48]!
      8c:	mov	x29, sp
      90:	stp	x19, x20, [sp, #16]
      94:	mov	x20, x0
      98:	mov	x19, x1
      9c:	ldrb	w0, [x0, #16]
      a0:	sub	w1, w0, #0x18
      a4:	cmp	w1, #0x28
      a8:	b.hi	cc <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x44>  // b.pmore
      ac:	mov	x0, #0x1                   	// #1
      b0:	lsl	x0, x0, x1
      b4:	mov	x1, #0xa000                	// #40960
      b8:	movk	x1, #0x7002, lsl #16
      bc:	tst	x0, x1
      c0:	b.ne	e8 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x60>  // b.any
      c4:	tst	x0, #0x1c000000000
      c8:	b.ne	19c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x114>  // b.any
      cc:	str	x21, [sp, #32]
      d0:	mov	w2, #0x3c                  	// #60
      d4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
      d8:	add	x1, x1, #0x0
      dc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
      e0:	add	x0, x0, #0x0
      e4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
      e8:	str	x21, [sp, #32]
      ec:	ldr	w0, [x20, #20]
      f0:	ubfx	x0, x0, #0, #28
      f4:	cbz	w0, 1a8 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x120>
      f8:	ldrb	w1, [x20, #23]
      fc:	tbz	w1, #6, 1c8 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x140>
     100:	ldur	x0, [x20, #-8]
     104:	ldr	x21, [x0]
     108:	ldr	w1, [x19, #8]
     10c:	ldr	w0, [x19, #12]
     110:	cmp	w1, w0
     114:	b.cs	1dc <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x154>  // b.hs, b.nlast
     118:	ldr	w1, [x19, #8]
     11c:	ldr	x0, [x19]
     120:	str	x21, [x0, x1, lsl #3]
     124:	ldr	w1, [x19, #8]
     128:	ldr	w2, [x19, #12]
     12c:	mov	w0, w1
     130:	add	x0, x0, #0x1
     134:	cmp	x0, w2, uxtw
     138:	b.hi	1f4 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x16c>  // b.pmore
     13c:	add	w1, w1, #0x1
     140:	str	w1, [x19, #8]
     144:	ldr	w0, [x20, #20]
     148:	ubfx	x0, x0, #0, #28
     14c:	cmp	w0, #0x1
     150:	b.ls	214 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x18c>  // b.plast
     154:	ldrb	w3, [x20, #23]
     158:	tbz	w3, #6, 234 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x1ac>
     15c:	ldur	x20, [x20, #-8]
     160:	ldr	x20, [x20, #24]
     164:	cmp	w2, w1
     168:	b.ls	248 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x1c0>  // b.plast
     16c:	ldr	w1, [x19, #8]
     170:	ldr	x0, [x19]
     174:	str	x20, [x0, x1, lsl #3]
     178:	ldr	w0, [x19, #8]
     17c:	mov	w1, w0
     180:	add	x1, x1, #0x1
     184:	ldr	w2, [x19, #12]
     188:	cmp	x1, x2
     18c:	b.hi	260 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x1d8>  // b.pmore
     190:	add	w0, w0, #0x1
     194:	str	w0, [x19, #8]
     198:	ldr	x21, [sp, #32]
     19c:	ldp	x19, x20, [sp, #16]
     1a0:	ldp	x29, x30, [sp], #48
     1a4:	ret
     1a8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     1ac:	add	x3, x3, #0x0
     1b0:	mov	w2, #0xaa                  	// #170
     1b4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     1b8:	add	x1, x1, #0x0
     1bc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     1c0:	add	x0, x0, #0x0
     1c4:	bl	0 <__assert_fail>
     1c8:	mov	w1, w0
     1cc:	ubfiz	x0, x0, #1, #28
     1d0:	add	x0, x0, x1
     1d4:	sub	x0, x20, x0, lsl #3
     1d8:	b	104 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x7c>
     1dc:	mov	x3, #0x8                   	// #8
     1e0:	mov	x2, #0x0                   	// #0
     1e4:	add	x1, x19, #0x10
     1e8:	mov	x0, x19
     1ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     1f0:	b	118 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0x90>
     1f4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     1f8:	add	x3, x3, #0x0
     1fc:	mov	w2, #0x43                  	// #67
     200:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     204:	add	x1, x1, #0x0
     208:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     20c:	add	x0, x0, #0x0
     210:	bl	0 <__assert_fail>
     214:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     218:	add	x3, x3, #0x0
     21c:	mov	w2, #0xaa                  	// #170
     220:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     224:	add	x1, x1, #0x0
     228:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     22c:	add	x0, x0, #0x0
     230:	bl	0 <__assert_fail>
     234:	mov	w3, w0
     238:	ubfiz	x0, x0, #1, #28
     23c:	add	x0, x0, x3
     240:	sub	x20, x20, x0, lsl #3
     244:	b	160 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0xd8>
     248:	mov	x3, #0x8                   	// #8
     24c:	mov	x2, #0x0                   	// #0
     250:	add	x1, x19, #0x10
     254:	mov	x0, x19
     258:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     25c:	b	16c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE+0xe4>
     260:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     264:	add	x3, x3, #0x0
     268:	mov	w2, #0x43                  	// #67
     26c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     270:	add	x1, x1, #0x0
     274:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     278:	add	x0, x0, #0x0
     27c:	bl	0 <__assert_fail>

0000000000000280 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>:
     280:	stp	x29, x30, [sp, #-32]!
     284:	mov	x29, sp
     288:	stp	x19, x20, [sp, #16]
     28c:	mov	x20, x0
     290:	mov	x19, x1
     294:	mov	x1, x2
     298:	mov	x0, x19
     29c:	bl	0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     2a0:	cbz	x19, 2e4 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x64>
     2a4:	mov	x1, x0
     2a8:	ldrb	w0, [x19, #16]
     2ac:	cmp	w0, #0x10
     2b0:	b.hi	430 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x1b0>  // b.pmore
     2b4:	mov	w2, #0x0                   	// #0
     2b8:	mov	x0, x19
     2bc:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     2c0:	mov	x19, x0
     2c4:	ldr	x2, [x20]
     2c8:	ldr	x1, [x20, #8]
     2cc:	bl	0 <_ZN4llvm20ConstantFoldConstantEPKNS_8ConstantERKNS_10DataLayoutEPKNS_17TargetLibraryInfoE>
     2d0:	cmp	x0, #0x0
     2d4:	csel	x0, x0, x19, ne  // ne = any
     2d8:	ldp	x19, x20, [sp, #16]
     2dc:	ldp	x29, x30, [sp], #32
     2e0:	ret
     2e4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     2e8:	add	x3, x3, #0x0
     2ec:	mov	w2, #0x69                  	// #105
     2f0:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     2f4:	add	x1, x1, #0x0
     2f8:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     2fc:	add	x0, x0, #0x0
     300:	bl	0 <__assert_fail>
     304:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     308:	add	x3, x3, #0x0
     30c:	mov	w2, #0x108                 	// #264
     310:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     314:	add	x1, x1, #0x0
     318:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     31c:	add	x0, x0, #0x0
     320:	bl	0 <__assert_fail>
     324:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     328:	add	x3, x3, #0x0
     32c:	mov	w2, #0x250                 	// #592
     330:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     334:	add	x1, x1, #0x0
     338:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     33c:	add	x0, x0, #0x0
     340:	bl	0 <__assert_fail>
     344:	mov	w6, #0x1                   	// #1
     348:	mov	x7, #0x0                   	// #0
     34c:	cmn	x4, #0x8
     350:	b.ne	370 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xf0>  // b.any
     354:	ubfiz	x0, x0, #4, #32
     358:	add	x2, x1, x0
     35c:	add	x3, x20, #0x50
     360:	ldr	x4, [x20, #80]
     364:	mov	x0, x2
     368:	cbnz	x2, 488 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x208>
     36c:	b	4a8 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x228>
     370:	cmp	x7, #0x0
     374:	ccmn	x4, #0x10, #0x0, eq  // eq = none
     378:	csel	x7, x7, x2, ne  // ne = any
     37c:	add	w8, w6, #0x1
     380:	add	w6, w3, w6
     384:	and	w3, w5, w6
     388:	and	w6, w5, w6
     38c:	lsl	x4, x6, #4
     390:	add	x2, x1, x4
     394:	ldr	x4, [x1, x4]
     398:	cmp	x19, x4
     39c:	b.eq	474 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x1f4>  // b.none
     3a0:	mov	w6, w8
     3a4:	b	34c <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xcc>
     3a8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     3ac:	add	x3, x3, #0x0
     3b0:	mov	w2, #0x4c0                 	// #1216
     3b4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     3b8:	add	x1, x1, #0x0
     3bc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     3c0:	add	x0, x0, #0x0
     3c4:	bl	0 <__assert_fail>
     3c8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     3cc:	add	x3, x3, #0x0
     3d0:	mov	w2, #0x4c2                 	// #1218
     3d4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     3d8:	add	x1, x1, #0x0
     3dc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     3e0:	add	x0, x0, #0x0
     3e4:	bl	0 <__assert_fail>
     3e8:	ldr	x0, [x20, #80]
     3ec:	cmp	x4, x0
     3f0:	b.ne	410 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x190>  // b.any
     3f4:	ldr	w0, [x2, #8]
     3f8:	ldr	x1, [x20, #112]
     3fc:	add	x0, x0, x0, lsl #1
     400:	add	x0, x1, x0, lsl #3
     404:	ldr	x0, [x0, #16]
     408:	cbnz	x0, 2d8 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x58>
     40c:	b	4a8 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x228>
     410:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     414:	add	x3, x3, #0x0
     418:	mov	w2, #0x4b9                 	// #1209
     41c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     420:	add	x1, x1, #0x0
     424:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     428:	add	x0, x0, #0x0
     42c:	bl	0 <__assert_fail>
     430:	cmp	w0, #0x17
     434:	b.ls	304 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x84>  // b.plast
     438:	ldr	x1, [x20, #88]
     43c:	ldr	w0, [x20, #104]
     440:	cbz	w0, 354 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xd4>
     444:	cmn	x19, #0x10
     448:	ccmn	x19, #0x8, #0x4, ne  // ne = any
     44c:	b.eq	324 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xa4>  // b.none
     450:	sub	w5, w0, #0x1
     454:	lsr	w3, w19, #9
     458:	eor	w3, w3, w19, lsr #4
     45c:	and	w3, w3, w5
     460:	lsl	w4, w3, #4
     464:	add	x2, x1, x4
     468:	ldr	x4, [x1, x4]
     46c:	cmp	x19, x4
     470:	b.ne	344 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xc4>  // b.any
     474:	add	x3, x20, #0x50
     478:	ldr	x4, [x20, #80]
     47c:	ubfiz	x0, x0, #4, #32
     480:	add	x0, x1, x0
     484:	cbz	x2, 3e8 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x168>
     488:	ldr	x1, [x3]
     48c:	cmp	x1, x4
     490:	b.ne	3a8 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x128>  // b.any
     494:	add	x1, x20, #0x50
     498:	cmp	x3, x1
     49c:	b.ne	3c8 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x148>  // b.any
     4a0:	cmp	x2, x0
     4a4:	b.ne	3f4 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x174>  // b.any
     4a8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     4ac:	add	x3, x3, #0x0
     4b0:	mov	w2, #0x128                 	// #296
     4b4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     4b8:	add	x1, x1, #0x0
     4bc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     4c0:	add	x0, x0, #0x0
     4c4:	bl	0 <__assert_fail>

00000000000004c8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE>:
     4c8:	stp	x29, x30, [sp, #-400]!
     4cc:	mov	x29, sp
     4d0:	stp	x19, x20, [sp, #16]
     4d4:	stp	x21, x22, [sp, #32]
     4d8:	stp	x23, x24, [sp, #48]
     4dc:	stp	x25, x26, [sp, #64]
     4e0:	mov	x24, x0
     4e4:	mov	x25, x1
     4e8:	ldr	x21, [x0, #112]
     4ec:	ldr	x0, [x0, #120]
     4f0:	str	x0, [sp, #104]
     4f4:	cmp	x21, x0
     4f8:	b.eq	bac <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6e4>  // b.none
     4fc:	stp	x27, x28, [sp, #80]
     500:	add	x0, sp, #0x120
     504:	str	x0, [sp, #112]
     508:	add	x0, sp, #0x90
     50c:	str	x0, [sp, #96]
     510:	mov	x27, #0xa000                	// #40960
     514:	movk	x27, #0x7002, lsl #16
     518:	add	x0, sp, #0x88
     51c:	str	x0, [sp, #120]
     520:	mov	x26, #0x5000                	// #20480
     524:	movk	x26, #0x125, lsl #16
     528:	movk	x26, #0x40, lsl #48
     52c:	b	878 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3b0>
     530:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     534:	add	x3, x3, #0x0
     538:	mov	w2, #0x131                 	// #305
     53c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     540:	add	x1, x1, #0x0
     544:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     548:	add	x0, x0, #0x0
     54c:	bl	0 <__assert_fail>
     550:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     554:	add	x3, x3, #0x0
     558:	mov	w2, #0x8e                  	// #142
     55c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     560:	add	x1, x1, #0x0
     564:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     568:	add	x0, x0, #0x0
     56c:	bl	0 <__assert_fail>
     570:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     574:	add	x3, x3, #0x0
     578:	mov	w2, #0xaa                  	// #170
     57c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     580:	add	x1, x1, #0x0
     584:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     588:	add	x0, x0, #0x0
     58c:	bl	0 <__assert_fail>
     590:	mov	w0, w2
     594:	ubfiz	x2, x2, #1, #28
     598:	add	x2, x2, x0
     59c:	sub	x2, x19, x2, lsl #3
     5a0:	b	968 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4a0>
     5a4:	ldrb	w0, [x19, #16]
     5a8:	cmp	w0, #0x3e
     5ac:	b.eq	5c8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x100>  // b.none
     5b0:	str	x20, [x28, #16]
     5b4:	ldr	x1, [sp, #144]
     5b8:	cbz	x1, 868 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3a0>
     5bc:	ldr	x0, [sp, #96]
     5c0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     5c4:	b	868 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3a0>
     5c8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     5cc:	add	x3, x3, #0x0
     5d0:	mov	w2, #0x13f                 	// #319
     5d4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     5d8:	add	x1, x1, #0x0
     5dc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     5e0:	add	x0, x0, #0x0
     5e4:	bl	0 <__assert_fail>
     5e8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     5ec:	add	x3, x3, #0x0
     5f0:	mov	w2, #0xb2                  	// #178
     5f4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     5f8:	add	x1, x1, #0x0
     5fc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     600:	add	x0, x0, #0x0
     604:	bl	0 <__assert_fail>
     608:	ldr	x1, [sp, #320]
     60c:	cbz	x1, 9b8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4f0>
     610:	add	x0, sp, #0x140
     614:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     618:	b	9b8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4f0>
     61c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     620:	add	x3, x3, #0x0
     624:	mov	w2, #0x69                  	// #105
     628:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     62c:	add	x1, x1, #0x0
     630:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     634:	add	x0, x0, #0x0
     638:	bl	0 <__assert_fail>
     63c:	cmp	x0, x3
     640:	b.cc	684 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1bc>  // b.lo, b.ul, b.last
     644:	cmp	x0, x2
     648:	b.cs	6a4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1dc>  // b.hs, b.nlast
     64c:	add	x1, x0, #0x8
     650:	cmp	x1, x2
     654:	b.eq	660 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x198>  // b.none
     658:	sub	x2, x2, x1
     65c:	bl	0 <memmove>
     660:	ldr	w0, [x24, #32]
     664:	mov	w1, w0
     668:	sub	x1, x1, #0x1
     66c:	ldr	w2, [x24, #36]
     670:	cmp	x1, x2
     674:	b.hi	6c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1fc>  // b.pmore
     678:	sub	w0, w0, #0x1
     67c:	str	w0, [x24, #32]
     680:	b	9f0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x528>
     684:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     688:	add	x3, x3, #0x0
     68c:	mov	w2, #0x1b6                 	// #438
     690:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     694:	add	x1, x1, #0x0
     698:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     69c:	add	x0, x0, #0x0
     6a0:	bl	0 <__assert_fail>
     6a4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     6a8:	add	x3, x3, #0x0
     6ac:	mov	w2, #0x1b7                 	// #439
     6b0:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     6b4:	add	x1, x1, #0x0
     6b8:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     6bc:	add	x0, x0, #0x0
     6c0:	bl	0 <__assert_fail>
     6c4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     6c8:	add	x3, x3, #0x0
     6cc:	mov	w2, #0x43                  	// #67
     6d0:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     6d4:	add	x1, x1, #0x0
     6d8:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     6dc:	add	x0, x0, #0x0
     6e0:	bl	0 <__assert_fail>
     6e4:	cbz	x20, 730 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x268>
     6e8:	ldrb	w0, [x20, #16]
     6ec:	cmp	w0, #0x3e
     6f0:	b.ne	9f0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x528>  // b.any
     6f4:	ldr	w0, [x24, #36]
     6f8:	cmp	w0, w1
     6fc:	b.ls	750 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x288>  // b.plast
     700:	ldr	w1, [x24, #32]
     704:	ldr	x0, [x24, #24]
     708:	str	x20, [x0, x1, lsl #3]
     70c:	ldr	w0, [x24, #32]
     710:	mov	w1, w0
     714:	add	x1, x1, #0x1
     718:	ldr	w2, [x24, #36]
     71c:	cmp	x1, x2
     720:	b.hi	768 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2a0>  // b.pmore
     724:	add	w0, w0, #0x1
     728:	str	w0, [x24, #32]
     72c:	b	9f0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x528>
     730:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     734:	add	x3, x3, #0x0
     738:	mov	w2, #0x69                  	// #105
     73c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     740:	add	x1, x1, #0x0
     744:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     748:	add	x0, x0, #0x0
     74c:	bl	0 <__assert_fail>
     750:	mov	x3, #0x8                   	// #8
     754:	mov	x2, #0x0                   	// #0
     758:	add	x1, x24, #0x28
     75c:	mov	x0, x19
     760:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     764:	b	700 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x238>
     768:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     76c:	add	x3, x3, #0x0
     770:	mov	w2, #0x43                  	// #67
     774:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     778:	add	x1, x1, #0x0
     77c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     780:	add	x0, x0, #0x0
     784:	bl	0 <__assert_fail>
     788:	ldr	w0, [x19, #20]
     78c:	ubfx	x0, x0, #0, #28
     790:	cbz	w0, 9f8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x530>
     794:	ldrb	w1, [x19, #23]
     798:	tbz	w1, #6, a18 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x550>
     79c:	ldur	x0, [x19, #-8]
     7a0:	mov	x2, x25
     7a4:	ldr	x1, [x0]
     7a8:	mov	x0, x24
     7ac:	bl	280 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     7b0:	mov	x23, x0
     7b4:	ldr	w0, [x19, #20]
     7b8:	ubfx	x0, x0, #0, #28
     7bc:	cmp	w0, #0x1
     7c0:	b.ls	a2c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x564>  // b.plast
     7c4:	ldrb	w1, [x19, #23]
     7c8:	tbz	w1, #6, a4c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x584>
     7cc:	ldur	x19, [x19, #-8]
     7d0:	mov	x2, x25
     7d4:	ldr	x1, [x19, #24]
     7d8:	mov	x0, x24
     7dc:	bl	280 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     7e0:	mov	x19, x0
     7e4:	str	xzr, [sp, #240]
     7e8:	str	xzr, [sp, #248]
     7ec:	mov	w0, #0x1                   	// #1
     7f0:	strb	w0, [sp, #256]
     7f4:	strb	w0, [sp, #257]
     7f8:	cbz	x23, a60 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x598>
     7fc:	ldrb	w0, [x23, #16]
     800:	cmp	w0, #0x10
     804:	csel	x20, x20, x23, hi  // hi = pmore
     808:	cbz	x19, a80 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x5b8>
     80c:	ldrb	w0, [x19, #16]
     810:	cmp	w0, #0x10
     814:	b.hi	aa0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x5d8>  // b.pmore
     818:	cbz	x20, aa0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x5d8>
     81c:	mov	x4, #0x0                   	// #0
     820:	mov	w3, #0x0                   	// #0
     824:	mov	x2, x19
     828:	mov	x1, x20
     82c:	mov	w0, w22
     830:	bl	0 <_ZN4llvm12ConstantExpr3getEjPNS_8ConstantES2_jPNS_4TypeE>
     834:	mov	x20, x0
     838:	cbz	x0, aa0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x5d8>
     83c:	str	x20, [x28, #16]
     840:	ldrb	w0, [x20, #16]
     844:	cmp	w0, #0x17
     848:	b.ls	858 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x390>  // b.plast
     84c:	ldr	x1, [sp, #136]
     850:	mov	x0, x20
     854:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     858:	ldr	x1, [sp, #144]
     85c:	cbz	x1, 868 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3a0>
     860:	ldr	x0, [sp, #96]
     864:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     868:	add	x21, x21, #0x18
     86c:	ldr	x0, [sp, #104]
     870:	cmp	x0, x21
     874:	b.eq	ba8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6e0>  // b.none
     878:	mov	x28, x21
     87c:	ldr	x19, [x21]
     880:	str	x19, [sp, #136]
     884:	ldr	x20, [x21, #16]
     888:	cbnz	x20, 530 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x68>
     88c:	mov	x0, x19
     890:	bl	0 <_ZNK4llvm5Value10getContextEv>
     894:	str	xzr, [sp, #144]
     898:	str	x0, [sp, #168]
     89c:	str	xzr, [sp, #176]
     8a0:	str	wzr, [sp, #184]
     8a4:	strb	wzr, [sp, #188]
     8a8:	mov	w0, #0x2                   	// #2
     8ac:	strb	w0, [sp, #189]
     8b0:	strb	wzr, [sp, #190]
     8b4:	str	xzr, [sp, #192]
     8b8:	str	xzr, [sp, #200]
     8bc:	ldr	x0, [x19, #40]
     8c0:	str	x0, [sp, #152]
     8c4:	add	x1, x19, #0x18
     8c8:	str	x1, [sp, #160]
     8cc:	add	x0, x0, #0x28
     8d0:	cmp	x1, x0
     8d4:	b.eq	550 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x88>  // b.none
     8d8:	ldr	x1, [x19, #48]
     8dc:	str	x1, [sp, #288]
     8e0:	cbz	x1, 10c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xbfc>
     8e4:	mov	x2, #0x2                   	// #2
     8e8:	ldr	x0, [sp, #112]
     8ec:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     8f0:	ldr	x1, [sp, #144]
     8f4:	cbz	x1, 900 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x438>
     8f8:	ldr	x0, [sp, #96]
     8fc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     900:	ldr	x1, [sp, #288]
     904:	str	x1, [sp, #144]
     908:	cbz	x1, 918 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x450>
     90c:	ldr	x2, [sp, #96]
     910:	ldr	x0, [sp, #112]
     914:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     918:	ldrb	w22, [x19, #16]
     91c:	sub	w22, w22, #0x18
     920:	cmp	w22, #0x28
     924:	b.hi	b90 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6c8>  // b.pmore
     928:	mov	x0, #0x1                   	// #1
     92c:	lsl	x0, x0, x22
     930:	tst	x0, x27
     934:	b.ne	788 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2c0>  // b.any
     938:	tst	x0, #0x1c000000000
     93c:	b.eq	b90 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6c8>  // b.none
     940:	mov	x1, x25
     944:	mov	x0, x19
     948:	bl	0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     94c:	mov	x1, x0
     950:	ldr	w2, [x19, #20]
     954:	ubfx	x2, x2, #0, #28
     958:	cbz	w2, 570 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa8>
     95c:	ldrb	w0, [x19, #23]
     960:	tbz	w0, #6, 590 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xc8>
     964:	ldur	x2, [x19, #-8]
     968:	ldr	x20, [x2]
     96c:	ldr	x0, [x20]
     970:	cmp	x1, x0
     974:	b.eq	5a4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xdc>  // b.none
     978:	str	xzr, [sp, #216]
     97c:	str	xzr, [sp, #224]
     980:	mov	w0, #0x1                   	// #1
     984:	strb	w0, [sp, #232]
     988:	strb	w0, [sp, #233]
     98c:	ldr	x0, [x20]
     990:	cmp	x1, x0
     994:	b.eq	fb4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xaec>  // b.none
     998:	cmp	w22, #0x28
     99c:	cset	w2, eq  // eq = none
     9a0:	ldrb	w0, [x20, #16]
     9a4:	cmp	w0, #0x10
     9a8:	b.hi	fdc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb14>  // b.pmore
     9ac:	mov	x0, x20
     9b0:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     9b4:	mov	x20, x0
     9b8:	add	x19, x24, #0x18
     9bc:	ldr	x1, [sp, #120]
     9c0:	mov	x0, x19
     9c4:	bl	0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     9c8:	ldr	x3, [x24, #24]
     9cc:	ldr	w1, [x24, #32]
     9d0:	add	x2, x3, w1, uxtw #3
     9d4:	cmp	x2, x0
     9d8:	b.eq	6e4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x21c>  // b.none
     9dc:	cbz	x20, 61c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x154>
     9e0:	ldrb	w1, [x20, #16]
     9e4:	cmp	w1, #0x3e
     9e8:	b.ne	63c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x174>  // b.any
     9ec:	str	x20, [x0]
     9f0:	str	x20, [x28, #16]
     9f4:	b	840 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x378>
     9f8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     9fc:	add	x3, x3, #0x0
     a00:	mov	w2, #0xaa                  	// #170
     a04:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a08:	add	x1, x1, #0x0
     a0c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a10:	add	x0, x0, #0x0
     a14:	bl	0 <__assert_fail>
     a18:	mov	w1, w0
     a1c:	ubfiz	x0, x0, #1, #28
     a20:	add	x0, x0, x1
     a24:	sub	x0, x19, x0, lsl #3
     a28:	b	7a0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2d8>
     a2c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a30:	add	x3, x3, #0x0
     a34:	mov	w2, #0xaa                  	// #170
     a38:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a3c:	add	x1, x1, #0x0
     a40:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a44:	add	x0, x0, #0x0
     a48:	bl	0 <__assert_fail>
     a4c:	mov	w1, w0
     a50:	ubfiz	x0, x0, #1, #28
     a54:	add	x0, x0, x1
     a58:	sub	x19, x19, x0, lsl #3
     a5c:	b	7d0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x308>
     a60:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a64:	add	x3, x3, #0x0
     a68:	mov	w2, #0x69                  	// #105
     a6c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a70:	add	x1, x1, #0x0
     a74:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a78:	add	x0, x0, #0x0
     a7c:	bl	0 <__assert_fail>
     a80:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a84:	add	x3, x3, #0x0
     a88:	mov	w2, #0x69                  	// #105
     a8c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a90:	add	x1, x1, #0x0
     a94:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     a98:	add	x0, x0, #0x0
     a9c:	bl	0 <__assert_fail>
     aa0:	str	xzr, [sp, #328]
     aa4:	str	xzr, [sp, #336]
     aa8:	mov	w0, #0x1                   	// #1
     aac:	strb	w0, [sp, #344]
     ab0:	strb	w0, [sp, #345]
     ab4:	mov	x4, #0x0                   	// #0
     ab8:	add	x3, sp, #0x148
     abc:	mov	x2, x19
     ac0:	mov	x1, x23
     ac4:	mov	w0, w22
     ac8:	bl	0 <_ZN4llvm14BinaryOperator6CreateENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_>
     acc:	mov	x20, x0
     ad0:	cbz	x0, b30 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x668>
     ad4:	mov	x22, x0
     ad8:	ldrb	w0, [x0, #16]
     adc:	sub	w1, w0, #0x18
     ae0:	cmp	w0, #0x17
     ae4:	b.ls	fa4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xadc>  // b.plast
     ae8:	cmp	w1, #0x39
     aec:	b.hi	ef0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa28>  // b.pmore
     af0:	mov	x0, #0x1                   	// #1
     af4:	lsl	x0, x0, x1
     af8:	tst	x0, x26
     afc:	b.ne	ecc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa04>  // b.any
     b00:	tst	x0, #0x380000000000000
     b04:	b.eq	ef0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa28>  // b.none
     b08:	ldr	x0, [x20]
     b0c:	cbnz	x0, ea4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9dc>
     b10:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b14:	add	x3, x3, #0x0
     b18:	mov	w2, #0x69                  	// #105
     b1c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b20:	add	x1, x1, #0x0
     b24:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b28:	add	x0, x0, #0x0
     b2c:	bl	0 <__assert_fail>
     b30:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b34:	add	x3, x3, #0x0
     b38:	mov	w2, #0x69                  	// #105
     b3c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b40:	add	x1, x1, #0x0
     b44:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b48:	add	x0, x0, #0x0
     b4c:	bl	0 <__assert_fail>
     b50:	ldr	x0, [x0, #16]
     b54:	ldr	x0, [x0]
     b58:	b	eb8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9f0>
     b5c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b60:	add	x3, x3, #0x0
     b64:	mov	w2, #0xb2                  	// #178
     b68:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b6c:	add	x1, x1, #0x0
     b70:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b74:	add	x0, x0, #0x0
     b78:	bl	0 <__assert_fail>
     b7c:	ldr	x1, [sp, #352]
     b80:	cbz	x1, 83c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x374>
     b84:	add	x0, sp, #0x160
     b88:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     b8c:	b	83c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x374>
     b90:	mov	w2, #0x163                 	// #355
     b94:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     b98:	add	x1, x1, #0x0
     b9c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     ba0:	add	x0, x0, #0x0
     ba4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     ba8:	ldp	x27, x28, [sp, #80]
     bac:	ldr	x0, [x24, #72]
     bb0:	mov	x2, x25
     bb4:	ldur	x1, [x0, #-24]
     bb8:	mov	x0, x24
     bbc:	bl	280 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     bc0:	mov	x19, x0
     bc4:	ldr	x20, [x24, #72]
     bc8:	ldr	x21, [x20]
     bcc:	ldr	x0, [x0]
     bd0:	cmp	x0, x21
     bd4:	b.eq	cd0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x808>  // b.none
     bd8:	mov	x0, x20
     bdc:	bl	0 <_ZNK4llvm5Value10getContextEv>
     be0:	str	xzr, [sp, #144]
     be4:	str	x0, [sp, #168]
     be8:	str	xzr, [sp, #176]
     bec:	str	wzr, [sp, #184]
     bf0:	strb	wzr, [sp, #188]
     bf4:	mov	w0, #0x2                   	// #2
     bf8:	strb	w0, [sp, #189]
     bfc:	strb	wzr, [sp, #190]
     c00:	str	xzr, [sp, #192]
     c04:	str	xzr, [sp, #200]
     c08:	ldr	x0, [x20, #40]
     c0c:	str	x0, [sp, #152]
     c10:	add	x1, x20, #0x18
     c14:	str	x1, [sp, #160]
     c18:	add	x0, x0, #0x28
     c1c:	cmp	x1, x0
     c20:	b.eq	d0c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x844>  // b.none
     c24:	ldr	x1, [x20, #48]
     c28:	str	x1, [sp, #384]
     c2c:	cbz	x1, 10b8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xbf0>
     c30:	mov	x2, #0x2                   	// #2
     c34:	add	x0, sp, #0x180
     c38:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     c3c:	ldr	x1, [sp, #144]
     c40:	cbz	x1, c4c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x784>
     c44:	add	x0, sp, #0x90
     c48:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     c4c:	ldr	x1, [sp, #384]
     c50:	str	x1, [sp, #144]
     c54:	cbz	x1, c64 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x79c>
     c58:	add	x2, sp, #0x90
     c5c:	add	x0, sp, #0x180
     c60:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     c64:	str	xzr, [sp, #264]
     c68:	str	xzr, [sp, #272]
     c6c:	mov	w0, #0x1                   	// #1
     c70:	strb	w0, [sp, #280]
     c74:	strb	w0, [sp, #281]
     c78:	ldr	x0, [x19]
     c7c:	cmp	x21, x0
     c80:	b.eq	ca8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7e0>  // b.none
     c84:	ldrb	w0, [x19, #16]
     c88:	cmp	w0, #0x10
     c8c:	b.hi	db8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8f0>  // b.pmore
     c90:	mov	w2, #0x0                   	// #0
     c94:	mov	x1, x21
     c98:	mov	x0, x19
     c9c:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     ca0:	mov	x19, x0
     ca4:	cbz	x19, d68 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8a0>
     ca8:	ldrb	w0, [x19, #16]
     cac:	cmp	w0, #0x17
     cb0:	b.ls	cc0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7f8>  // b.plast
     cb4:	ldr	x1, [x24, #72]
     cb8:	mov	x0, x19
     cbc:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     cc0:	ldr	x1, [sp, #144]
     cc4:	cbz	x1, cd0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x808>
     cc8:	add	x0, sp, #0x90
     ccc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     cd0:	mov	x1, x19
     cd4:	ldr	x0, [x24, #72]
     cd8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     cdc:	ldr	x0, [x24, #72]
     ce0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     ce4:	ldr	x19, [x24, #120]
     ce8:	ldr	x21, [x24, #112]
     cec:	cmp	x21, x19
     cf0:	b.ne	d98 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8d0>  // b.any
     cf4:	ldp	x19, x20, [sp, #16]
     cf8:	ldp	x21, x22, [sp, #32]
     cfc:	ldp	x23, x24, [sp, #48]
     d00:	ldp	x25, x26, [sp, #64]
     d04:	ldp	x29, x30, [sp], #400
     d08:	ret
     d0c:	stp	x27, x28, [sp, #80]
     d10:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     d14:	add	x3, x3, #0x0
     d18:	mov	w2, #0x8e                  	// #142
     d1c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     d20:	add	x1, x1, #0x0
     d24:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     d28:	add	x0, x0, #0x0
     d2c:	bl	0 <__assert_fail>
     d30:	stp	x27, x28, [sp, #80]
     d34:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     d38:	add	x3, x3, #0x0
     d3c:	mov	w2, #0xb2                  	// #178
     d40:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     d44:	add	x1, x1, #0x0
     d48:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     d4c:	add	x0, x0, #0x0
     d50:	bl	0 <__assert_fail>
     d54:	ldr	x1, [sp, #392]
     d58:	cbz	x1, ca4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7dc>
     d5c:	add	x0, sp, #0x188
     d60:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     d64:	b	ca4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7dc>
     d68:	stp	x27, x28, [sp, #80]
     d6c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     d70:	add	x3, x3, #0x0
     d74:	mov	w2, #0x69                  	// #105
     d78:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     d7c:	add	x1, x1, #0x0
     d80:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     d84:	add	x0, x0, #0x0
     d88:	bl	0 <__assert_fail>
     d8c:	sub	x19, x19, #0x18
     d90:	cmp	x21, x19
     d94:	b.eq	cf4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x82c>  // b.none
     d98:	ldur	x20, [x19, #-24]
     d9c:	mov	x0, x20
     da0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     da4:	ldr	x0, [x20, #8]
     da8:	cbnz	x0, d8c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8c4>
     dac:	ldur	x0, [x19, #-24]
     db0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     db4:	b	d8c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8c4>
     db8:	str	xzr, [sp, #360]
     dbc:	str	xzr, [sp, #368]
     dc0:	mov	w0, #0x1                   	// #1
     dc4:	strb	w0, [sp, #376]
     dc8:	strb	w0, [sp, #377]
     dcc:	mov	x4, #0x0                   	// #0
     dd0:	add	x3, sp, #0x168
     dd4:	mov	w2, #0x0                   	// #0
     dd8:	mov	x1, x21
     ddc:	mov	x0, x19
     de0:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
     de4:	mov	x19, x0
     de8:	ldr	x0, [sp, #152]
     dec:	cbz	x0, e3c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x974>
     df0:	ldr	x20, [sp, #160]
     df4:	mov	x1, x19
     df8:	add	x0, x0, #0x28
     dfc:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     e00:	add	x0, x19, #0x18
     e04:	ldr	x2, [x20]
     e08:	and	x2, x2, #0xfffffffffffffff8
     e0c:	str	x20, [x19, #32]
     e10:	ldr	x1, [x19, #24]
     e14:	and	x1, x1, #0x7
     e18:	orr	x1, x1, x2
     e1c:	str	x1, [x19, #24]
     e20:	str	x0, [x2, #8]
     e24:	ldr	x1, [x20]
     e28:	tst	x0, #0x7
     e2c:	b.ne	d30 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x868>  // b.any
     e30:	and	x1, x1, #0x7
     e34:	orr	x0, x0, x1
     e38:	str	x0, [x20]
     e3c:	add	x1, sp, #0x108
     e40:	mov	x0, x19
     e44:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     e48:	ldr	x1, [sp, #144]
     e4c:	cbz	x1, ca4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7dc>
     e50:	str	x1, [sp, #392]
     e54:	add	x20, sp, #0x188
     e58:	mov	x2, #0x2                   	// #2
     e5c:	mov	x0, x20
     e60:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     e64:	add	x21, x19, #0x30
     e68:	cmp	x21, x20
     e6c:	b.eq	d54 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x88c>  // b.none
     e70:	ldr	x1, [x19, #48]
     e74:	cbz	x1, e80 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9b8>
     e78:	mov	x0, x21
     e7c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     e80:	ldr	x1, [sp, #392]
     e84:	str	x1, [x19, #48]
     e88:	cbz	x1, ca4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7dc>
     e8c:	mov	x2, x21
     e90:	add	x0, sp, #0x188
     e94:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     e98:	b	ca4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7dc>
     e9c:	ldr	x0, [x0, #24]
     ea0:	cbz	x0, b10 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x648>
     ea4:	ldrb	w1, [x0, #8]
     ea8:	cmp	w1, #0xe
     eac:	b.eq	e9c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9d4>  // b.none
     eb0:	cmp	w1, #0x10
     eb4:	b.eq	b50 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x688>  // b.none
     eb8:	ldrb	w0, [x0, #8]
     ebc:	sub	w0, w0, #0x1
     ec0:	and	w0, w0, #0xff
     ec4:	cmp	w0, #0x5
     ec8:	b.hi	ef0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa28>  // b.pmore
     ecc:	ldr	w19, [sp, #184]
     ed0:	ldr	x2, [sp, #176]
     ed4:	cbz	x2, ee4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa1c>
     ed8:	mov	w1, #0x3                   	// #3
     edc:	mov	x0, x20
     ee0:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
     ee4:	mov	w1, w19
     ee8:	mov	x0, x20
     eec:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
     ef0:	ldr	x0, [sp, #152]
     ef4:	cbz	x0, f44 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa7c>
     ef8:	ldr	x19, [sp, #160]
     efc:	mov	x1, x20
     f00:	add	x0, x0, #0x28
     f04:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     f08:	add	x0, x20, #0x18
     f0c:	ldr	x2, [x19]
     f10:	and	x2, x2, #0xfffffffffffffff8
     f14:	str	x19, [x20, #32]
     f18:	ldr	x1, [x20, #24]
     f1c:	and	x1, x1, #0x7
     f20:	orr	x1, x1, x2
     f24:	str	x1, [x20, #24]
     f28:	str	x0, [x2, #8]
     f2c:	ldr	x1, [x19]
     f30:	tst	x0, #0x7
     f34:	b.ne	b5c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x694>  // b.any
     f38:	and	x1, x1, #0x7
     f3c:	orr	x0, x0, x1
     f40:	str	x0, [x19]
     f44:	add	x1, sp, #0xf0
     f48:	mov	x0, x22
     f4c:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     f50:	ldr	x1, [sp, #144]
     f54:	cbz	x1, 83c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x374>
     f58:	str	x1, [sp, #352]
     f5c:	add	x19, sp, #0x160
     f60:	mov	x2, #0x2                   	// #2
     f64:	mov	x0, x19
     f68:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     f6c:	add	x22, x20, #0x30
     f70:	cmp	x22, x19
     f74:	b.eq	b7c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6b4>  // b.none
     f78:	ldr	x1, [x20, #48]
     f7c:	cbz	x1, f88 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xac0>
     f80:	mov	x0, x22
     f84:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     f88:	ldr	x1, [sp, #352]
     f8c:	str	x1, [x20, #48]
     f90:	cbz	x1, 83c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x374>
     f94:	mov	x2, x22
     f98:	add	x0, sp, #0x160
     f9c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     fa0:	b	83c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x374>
     fa4:	cmp	w0, #0x5
     fa8:	b.ne	ef0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa28>  // b.any
     fac:	ldrh	w1, [x20, #18]
     fb0:	b	ae8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x620>
     fb4:	add	x19, x24, #0x18
     fb8:	ldr	x1, [sp, #120]
     fbc:	mov	x0, x19
     fc0:	bl	0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     fc4:	ldr	x3, [x24, #24]
     fc8:	ldr	w1, [x24, #32]
     fcc:	add	x2, x3, w1, uxtw #3
     fd0:	cmp	x2, x0
     fd4:	b.ne	9e0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x518>  // b.any
     fd8:	b	6e8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x220>
     fdc:	str	xzr, [sp, #296]
     fe0:	str	xzr, [sp, #304]
     fe4:	mov	w0, #0x1                   	// #1
     fe8:	strb	w0, [sp, #312]
     fec:	strb	w0, [sp, #313]
     ff0:	mov	x4, #0x0                   	// #0
     ff4:	add	x3, sp, #0x128
     ff8:	mov	x0, x20
     ffc:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
    1000:	mov	x20, x0
    1004:	ldr	x0, [sp, #152]
    1008:	cbz	x0, 1058 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb90>
    100c:	ldr	x19, [sp, #160]
    1010:	mov	x1, x20
    1014:	add	x0, x0, #0x28
    1018:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    101c:	add	x0, x20, #0x18
    1020:	ldr	x2, [x19]
    1024:	and	x2, x2, #0xfffffffffffffff8
    1028:	str	x19, [x20, #32]
    102c:	ldr	x1, [x20, #24]
    1030:	and	x1, x1, #0x7
    1034:	orr	x1, x1, x2
    1038:	str	x1, [x20, #24]
    103c:	str	x0, [x2, #8]
    1040:	ldr	x1, [x19]
    1044:	tst	x0, #0x7
    1048:	b.ne	5e8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x120>  // b.any
    104c:	and	x1, x1, #0x7
    1050:	orr	x0, x0, x1
    1054:	str	x0, [x19]
    1058:	add	x1, sp, #0xd8
    105c:	mov	x0, x20
    1060:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    1064:	ldr	x1, [sp, #144]
    1068:	cbz	x1, 9b8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4f0>
    106c:	str	x1, [sp, #320]
    1070:	add	x19, sp, #0x140
    1074:	mov	x2, #0x2                   	// #2
    1078:	mov	x0, x19
    107c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    1080:	add	x22, x20, #0x30
    1084:	cmp	x22, x19
    1088:	b.eq	608 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x140>  // b.none
    108c:	ldr	x1, [x20, #48]
    1090:	cbz	x1, 109c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xbd4>
    1094:	mov	x0, x22
    1098:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    109c:	ldr	x1, [sp, #320]
    10a0:	str	x1, [x20, #48]
    10a4:	cbz	x1, 9b8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4f0>
    10a8:	mov	x2, x22
    10ac:	add	x0, sp, #0x140
    10b0:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    10b4:	b	9b8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4f0>
    10b8:	ldr	x0, [sp, #384]
    10bc:	str	x0, [sp, #144]
    10c0:	b	c64 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x79c>
    10c4:	ldr	x0, [sp, #288]
    10c8:	str	x0, [sp, #144]
    10cc:	b	918 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x450>

00000000000010d0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv>:
    10d0:	stp	x29, x30, [sp, #-320]!
    10d4:	mov	x29, sp
    10d8:	stp	x19, x20, [sp, #16]
    10dc:	mov	x20, x0
    10e0:	add	x0, sp, #0xe8
    10e4:	str	x0, [sp, #216]
    10e8:	str	wzr, [sp, #224]
    10ec:	mov	w0, #0x8                   	// #8
    10f0:	str	w0, [sp, #228]
    10f4:	add	x1, sp, #0x98
    10f8:	str	x1, [sp, #136]
    10fc:	str	wzr, [sp, #144]
    1100:	str	w0, [sp, #148]
    1104:	ldr	x0, [x20, #80]
    1108:	add	x0, x0, #0x1
    110c:	str	x0, [x20, #80]
    1110:	ldr	w3, [x20, #96]
    1114:	cbnz	w3, 1120 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x50>
    1118:	ldr	w0, [x20, #100]
    111c:	cbz	w0, 1db4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xce4>
    1120:	ldr	w2, [x20, #104]
    1124:	lsl	w0, w3, #2
    1128:	cmp	w0, #0x40
    112c:	mov	w1, #0x40                  	// #64
    1130:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1134:	cmp	w2, w0
    1138:	b.hi	11e0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x110>  // b.pmore
    113c:	ldr	x0, [x20, #88]
    1140:	ubfiz	x1, x2, #4, #32
    1144:	add	x1, x0, x1
    1148:	cmp	x0, x1
    114c:	b.eq	1160 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x90>  // b.none
    1150:	mov	x2, #0xfffffffffffffff8    	// #-8
    1154:	str	x2, [x0], #16
    1158:	cmp	x1, x0
    115c:	b.ne	1154 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x84>  // b.any
    1160:	str	wzr, [x20, #96]
    1164:	str	wzr, [x20, #100]
    1168:	ldr	x0, [x20, #112]
    116c:	ldr	x1, [x20, #120]
    1170:	cmp	x1, x0
    1174:	b.eq	117c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xac>  // b.none
    1178:	str	x0, [x20, #120]
    117c:	ldr	x0, [x20, #72]
    1180:	ldur	x19, [x0, #-24]
    1184:	ldr	w1, [sp, #224]
    1188:	ldr	w0, [sp, #228]
    118c:	cmp	w1, w0
    1190:	b.cs	1290 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1c0>  // b.hs, b.nlast
    1194:	ldr	w1, [sp, #224]
    1198:	ldr	x0, [sp, #216]
    119c:	str	x19, [x0, x1, lsl #3]
    11a0:	ldr	w1, [sp, #224]
    11a4:	mov	w0, w1
    11a8:	add	x0, x0, #0x1
    11ac:	ldr	w2, [sp, #228]
    11b0:	cmp	x0, x2
    11b4:	b.hi	12a8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1d8>  // b.pmore
    11b8:	add	w1, w1, #0x1
    11bc:	str	w1, [sp, #224]
    11c0:	cbz	w1, 12d8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x208>
    11c4:	stp	x21, x22, [sp, #32]
    11c8:	stp	x23, x24, [sp, #48]
    11cc:	add	x21, sp, #0x68
    11d0:	add	x23, x21, #0x10
    11d4:	add	x22, sp, #0xd8
    11d8:	add	x24, x22, #0x10
    11dc:	b	1330 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x260>
    11e0:	ldr	x0, [x20, #88]
    11e4:	ubfiz	x1, x2, #4, #32
    11e8:	add	x5, x0, x1
    11ec:	mov	x4, x0
    11f0:	add	x4, x4, #0x10
    11f4:	cmp	x5, x4
    11f8:	b.ne	11f0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x120>  // b.any
    11fc:	cbz	w3, 1dd0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd00>
    1200:	subs	w3, w3, #0x1
    1204:	b.eq	1de8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd18>  // b.none
    1208:	clz	w3, w3
    120c:	mov	w19, #0x21                  	// #33
    1210:	sub	w3, w19, w3
    1214:	mov	w19, #0x1                   	// #1
    1218:	lsl	w19, w19, w3
    121c:	cmp	w19, #0x40
    1220:	mov	w3, #0x40                  	// #64
    1224:	csel	w19, w19, w3, ge  // ge = tcont
    1228:	cmp	w2, w19
    122c:	b.ne	1dec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd1c>  // b.any
    1230:	str	wzr, [x20, #96]
    1234:	str	wzr, [x20, #100]
    1238:	sub	w1, w19, #0x1
    123c:	tst	w1, w19
    1240:	b.ne	1260 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x190>  // b.any
    1244:	ubfiz	x1, x19, #4, #32
    1248:	add	x1, x0, x1
    124c:	mov	x2, #0xfffffffffffffff8    	// #-8
    1250:	str	x2, [x0], #16
    1254:	cmp	x1, x0
    1258:	b.ne	1250 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x180>  // b.any
    125c:	b	1168 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x98>
    1260:	stp	x21, x22, [sp, #32]
    1264:	stp	x23, x24, [sp, #48]
    1268:	stp	x25, x26, [sp, #64]
    126c:	str	x27, [sp, #80]
    1270:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1274:	add	x3, x3, #0x0
    1278:	mov	w2, #0x15b                 	// #347
    127c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1280:	add	x1, x1, #0x0
    1284:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1288:	add	x0, x0, #0x0
    128c:	bl	0 <__assert_fail>
    1290:	add	x0, sp, #0xd8
    1294:	mov	x3, #0x8                   	// #8
    1298:	mov	x2, #0x0                   	// #0
    129c:	add	x1, x0, #0x10
    12a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    12a4:	b	1194 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xc4>
    12a8:	stp	x21, x22, [sp, #32]
    12ac:	stp	x23, x24, [sp, #48]
    12b0:	stp	x25, x26, [sp, #64]
    12b4:	str	x27, [sp, #80]
    12b8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    12bc:	add	x3, x3, #0x0
    12c0:	mov	w2, #0x43                  	// #67
    12c4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    12c8:	add	x1, x1, #0x0
    12cc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    12d0:	add	x0, x0, #0x0
    12d4:	bl	0 <__assert_fail>
    12d8:	mov	w19, #0x1                   	// #1
    12dc:	b	146c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x39c>
    12e0:	ldp	x25, x26, [sp, #64]
    12e4:	b	1328 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x258>
    12e8:	stp	x25, x26, [sp, #64]
    12ec:	str	x27, [sp, #80]
    12f0:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    12f4:	add	x3, x3, #0x0
    12f8:	mov	w2, #0x69                  	// #105
    12fc:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1300:	add	x1, x1, #0x0
    1304:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1308:	add	x0, x0, #0x0
    130c:	bl	0 <__assert_fail>
    1310:	sub	x3, x3, #0x1
    1314:	ldr	w0, [sp, #228]
    1318:	cmp	x3, x0
    131c:	b.hi	1438 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x368>  // b.pmore
    1320:	sub	w1, w1, #0x1
    1324:	str	w1, [sp, #224]
    1328:	ldr	w1, [sp, #224]
    132c:	cbz	w1, 1c84 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xbb4>
    1330:	mov	w3, w1
    1334:	ldr	x0, [sp, #216]
    1338:	add	x0, x0, w1, uxtw #3
    133c:	ldur	x19, [x0, #-8]
    1340:	cbz	x19, 12e8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x218>
    1344:	ldrb	w0, [x19, #16]
    1348:	cmp	w0, #0x10
    134c:	b.ls	1310 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x240>  // b.plast
    1350:	cmp	w0, #0x17
    1354:	b.ls	1460 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x390>  // b.plast
    1358:	ldr	w5, [sp, #144]
    135c:	cbnz	w5, 14a4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x3d4>
    1360:	ldr	x2, [x20, #88]
    1364:	ldr	w0, [x20, #104]
    1368:	cbz	w0, 1aac <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9dc>
    136c:	cmn	x19, #0x10
    1370:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    1374:	b.eq	1a74 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9a4>  // b.none
    1378:	sub	w8, w0, #0x1
    137c:	lsr	w4, w19, #9
    1380:	eor	w4, w4, w19, lsr #4
    1384:	and	w4, w4, w8
    1388:	lsl	w7, w4, #4
    138c:	add	x6, x2, x7
    1390:	ldr	x7, [x2, x7]
    1394:	cmp	x19, x7
    1398:	b.ne	1a9c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9cc>  // b.any
    139c:	ldr	x4, [x20, #80]
    13a0:	ubfiz	x0, x0, #4, #32
    13a4:	add	x0, x2, x0
    13a8:	cbz	x6, 1b24 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa54>
    13ac:	ldr	x2, [x20, #80]
    13b0:	cmp	x2, x4
    13b4:	b.ne	1afc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa2c>  // b.any
    13b8:	cmp	x0, x6
    13bc:	b.ne	1b24 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa54>  // b.any
    13c0:	ldr	w0, [sp, #148]
    13c4:	cmp	w5, w0
    13c8:	b.cs	1b68 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa98>  // b.hs, b.nlast
    13cc:	ldr	w1, [sp, #144]
    13d0:	ldr	x0, [sp, #136]
    13d4:	str	x19, [x0, x1, lsl #3]
    13d8:	ldr	w0, [sp, #144]
    13dc:	mov	w1, w0
    13e0:	add	x1, x1, #0x1
    13e4:	ldr	w2, [sp, #148]
    13e8:	cmp	x1, x2
    13ec:	b.hi	1b80 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xab0>  // b.pmore
    13f0:	add	w0, w0, #0x1
    13f4:	str	w0, [sp, #144]
    13f8:	ldrb	w1, [x19, #16]
    13fc:	sub	w0, w1, #0x18
    1400:	cmp	w0, #0x28
    1404:	b.hi	1c94 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xbc4>  // b.pmore
    1408:	mov	x1, #0x1                   	// #1
    140c:	lsl	x1, x1, x0
    1410:	mov	x0, #0xa000                	// #40960
    1414:	movk	x0, #0x7002, lsl #16
    1418:	tst	x1, x0
    141c:	b.ne	1ba8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xad8>  // b.any
    1420:	tst	x1, #0x1c000000000
    1424:	b.ne	1328 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x258>  // b.any
    1428:	mov	w19, #0x0                   	// #0
    142c:	ldp	x21, x22, [sp, #32]
    1430:	ldp	x23, x24, [sp, #48]
    1434:	b	146c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x39c>
    1438:	stp	x25, x26, [sp, #64]
    143c:	str	x27, [sp, #80]
    1440:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1444:	add	x3, x3, #0x0
    1448:	mov	w2, #0x43                  	// #67
    144c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1450:	add	x1, x1, #0x0
    1454:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1458:	add	x0, x0, #0x0
    145c:	bl	0 <__assert_fail>
    1460:	mov	w19, #0x0                   	// #0
    1464:	ldp	x21, x22, [sp, #32]
    1468:	ldp	x23, x24, [sp, #48]
    146c:	ldr	x0, [sp, #136]
    1470:	add	x1, sp, #0x98
    1474:	cmp	x0, x1
    1478:	b.eq	1480 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x3b0>  // b.none
    147c:	bl	0 <free>
    1480:	ldr	x0, [sp, #216]
    1484:	add	x1, sp, #0xe8
    1488:	cmp	x0, x1
    148c:	b.eq	1494 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x3c4>  // b.none
    1490:	bl	0 <free>
    1494:	mov	w0, w19
    1498:	ldp	x19, x20, [sp, #16]
    149c:	ldp	x29, x30, [sp], #320
    14a0:	ret
    14a4:	mov	w2, w5
    14a8:	ldr	x0, [sp, #136]
    14ac:	add	x0, x0, w5, uxtw #3
    14b0:	ldur	x0, [x0, #-8]
    14b4:	cmp	x19, x0
    14b8:	b.ne	1360 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x290>  // b.any
    14bc:	stp	x25, x26, [sp, #64]
    14c0:	str	x27, [sp, #80]
    14c4:	sub	x3, x3, #0x1
    14c8:	ldr	w0, [sp, #228]
    14cc:	cmp	x3, x0
    14d0:	b.hi	154c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x47c>  // b.pmore
    14d4:	sub	w1, w1, #0x1
    14d8:	str	w1, [sp, #224]
    14dc:	sub	x2, x2, #0x1
    14e0:	ldr	w0, [sp, #148]
    14e4:	cmp	x2, x0
    14e8:	b.hi	156c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x49c>  // b.pmore
    14ec:	sub	w5, w5, #0x1
    14f0:	str	w5, [sp, #144]
    14f4:	str	x19, [sp, #296]
    14f8:	str	wzr, [sp, #304]
    14fc:	str	wzr, [sp, #308]
    1500:	str	xzr, [sp, #312]
    1504:	ldr	x27, [x20, #88]
    1508:	ldr	w26, [x20, #104]
    150c:	cbz	w26, 1e9c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xdcc>
    1510:	cmn	x19, #0x10
    1514:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    1518:	b.eq	158c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x4bc>  // b.none
    151c:	sub	w2, w26, #0x1
    1520:	lsr	w0, w19, #9
    1524:	eor	w0, w0, w19, lsr #4
    1528:	and	w0, w0, w2
    152c:	lsl	w1, w0, #4
    1530:	add	x3, x27, x1
    1534:	ldr	x1, [x27, x1]
    1538:	cmp	x19, x1
    153c:	b.ne	15ac <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x4dc>  // b.any
    1540:	ldp	x25, x26, [sp, #64]
    1544:	ldr	x27, [sp, #80]
    1548:	b	1328 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x258>
    154c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1550:	add	x3, x3, #0x0
    1554:	mov	w2, #0x43                  	// #67
    1558:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    155c:	add	x1, x1, #0x0
    1560:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1564:	add	x0, x0, #0x0
    1568:	bl	0 <__assert_fail>
    156c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1570:	add	x3, x3, #0x0
    1574:	mov	w2, #0x43                  	// #67
    1578:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    157c:	add	x1, x1, #0x0
    1580:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1584:	add	x0, x0, #0x0
    1588:	bl	0 <__assert_fail>
    158c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1590:	add	x3, x3, #0x0
    1594:	mov	w2, #0x250                 	// #592
    1598:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    159c:	add	x1, x1, #0x0
    15a0:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    15a4:	add	x0, x0, #0x0
    15a8:	bl	0 <__assert_fail>
    15ac:	mov	w4, #0x1                   	// #1
    15b0:	mov	x25, #0x0                   	// #0
    15b4:	cmn	x1, #0x8
    15b8:	b.ne	166c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x59c>  // b.any
    15bc:	cmp	x25, #0x0
    15c0:	csel	x25, x25, x3, ne  // ne = any
    15c4:	ldr	x0, [x20, #80]
    15c8:	add	x0, x0, #0x1
    15cc:	str	x0, [x20, #80]
    15d0:	ldr	w0, [x20, #96]
    15d4:	add	w1, w0, #0x1
    15d8:	add	w0, w26, w26, lsl #1
    15dc:	cmp	w0, w1, lsl #2
    15e0:	b.ls	1ea8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xdd8>  // b.plast
    15e4:	ldr	w0, [x20, #100]
    15e8:	sub	w0, w26, w0
    15ec:	sub	w0, w0, w1
    15f0:	cmp	w0, w26, lsr #3
    15f4:	b.ls	1838 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x768>  // b.plast
    15f8:	cbz	x25, 1a54 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x984>
    15fc:	add	x1, x20, #0x50
    1600:	ldr	w0, [x20, #96]
    1604:	add	w0, w0, #0x1
    1608:	str	w0, [x20, #96]
    160c:	ldr	x0, [x25]
    1610:	cmn	x0, #0x8
    1614:	b.eq	1624 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x554>  // b.none
    1618:	ldr	w0, [x1, #20]
    161c:	sub	w0, w0, #0x1
    1620:	str	w0, [x1, #20]
    1624:	str	x19, [x25]
    1628:	str	wzr, [x25, #8]
    162c:	add	x19, x20, #0x70
    1630:	add	x1, sp, #0x128
    1634:	mov	x0, x19
    1638:	bl	0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    163c:	ldr	x0, [x20, #120]
    1640:	ldr	x1, [x20, #112]
    1644:	sub	x0, x0, x1
    1648:	asr	x0, x0, #3
    164c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1650:	movk	x1, #0xaaab
    1654:	mul	x0, x0, x1
    1658:	sub	w0, w0, #0x1
    165c:	str	w0, [x25, #8]
    1660:	ldp	x25, x26, [sp, #64]
    1664:	ldr	x27, [sp, #80]
    1668:	b	1328 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x258>
    166c:	cmp	x25, #0x0
    1670:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    1674:	csel	x25, x25, x3, ne  // ne = any
    1678:	add	w5, w4, #0x1
    167c:	add	w4, w0, w4
    1680:	and	w0, w2, w4
    1684:	and	w4, w2, w4
    1688:	lsl	x1, x4, #4
    168c:	add	x3, x27, x1
    1690:	ldr	x1, [x27, x1]
    1694:	cmp	x19, x1
    1698:	b.ne	16a8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x5d8>  // b.any
    169c:	ldp	x25, x26, [sp, #64]
    16a0:	ldr	x27, [sp, #80]
    16a4:	b	1328 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x258>
    16a8:	mov	w4, w5
    16ac:	b	15b4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x4e4>
    16b0:	str	wzr, [x25, #16]
    16b4:	str	wzr, [x25, #20]
    16b8:	ldr	w1, [x25, #24]
    16bc:	sub	w2, w1, #0x1
    16c0:	tst	w2, w1
    16c4:	b.ne	16ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x61c>  // b.any
    16c8:	ubfiz	x1, x1, #4, #32
    16cc:	add	x1, x0, x1
    16d0:	cmp	x0, x1
    16d4:	b.eq	1788 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6b8>  // b.none
    16d8:	mov	x2, #0xfffffffffffffff8    	// #-8
    16dc:	str	x2, [x0], #16
    16e0:	cmp	x1, x0
    16e4:	b.ne	16dc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x60c>  // b.any
    16e8:	b	1788 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6b8>
    16ec:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    16f0:	add	x3, x3, #0x0
    16f4:	mov	w2, #0x15b                 	// #347
    16f8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    16fc:	add	x1, x1, #0x0
    1700:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1704:	add	x0, x0, #0x0
    1708:	bl	0 <__assert_fail>
    170c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1710:	add	x3, x3, #0x0
    1714:	mov	w2, #0x15b                 	// #347
    1718:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    171c:	add	x1, x1, #0x0
    1720:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1724:	add	x0, x0, #0x0
    1728:	bl	0 <__assert_fail>
    172c:	mov	w9, w11
    1730:	mov	x5, #0x0                   	// #0
    1734:	cmn	x8, #0x8
    1738:	b.ne	1748 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x678>  // b.any
    173c:	cmp	x5, #0x0
    1740:	csel	x5, x5, x10, ne  // ne = any
    1744:	b	1ca8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xbd8>
    1748:	cmp	x5, #0x0
    174c:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    1750:	csel	x5, x5, x10, ne  // ne = any
    1754:	add	w12, w9, #0x1
    1758:	add	w8, w9, w4
    175c:	and	w4, w3, w8
    1760:	and	w8, w3, w8
    1764:	lsl	x9, x8, #4
    1768:	add	x10, x7, x8, lsl #4
    176c:	ldr	x8, [x7, x9]
    1770:	cmp	x2, x8
    1774:	b.eq	1d0c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xc3c>  // b.none
    1778:	mov	w9, w12
    177c:	b	1734 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x664>
    1780:	mov	x0, x27
    1784:	bl	0 <_ZdlPvm>
    1788:	ldr	w2, [x20, #104]
    178c:	cbz	w2, 1a54 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x984>
    1790:	cmn	x19, #0x10
    1794:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    1798:	b.eq	17e0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x710>  // b.none
    179c:	ldr	x5, [x20, #88]
    17a0:	sub	w2, w2, #0x1
    17a4:	lsr	w1, w19, #9
    17a8:	eor	w1, w1, w19, lsr #4
    17ac:	and	w1, w1, w2
    17b0:	lsl	w0, w1, #4
    17b4:	add	x25, x5, x0
    17b8:	ldr	x4, [x5, x0]
    17bc:	cmp	x19, x4
    17c0:	b.eq	15fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x52c>  // b.none
    17c4:	mov	w0, #0x1                   	// #1
    17c8:	mov	x3, #0x0                   	// #0
    17cc:	cmn	x4, #0x8
    17d0:	b.ne	1800 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x730>  // b.any
    17d4:	cbz	x3, 15f8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x528>
    17d8:	mov	x25, x3
    17dc:	b	15fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x52c>
    17e0:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    17e4:	add	x3, x3, #0x0
    17e8:	mov	w2, #0x250                 	// #592
    17ec:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    17f0:	add	x1, x1, #0x0
    17f4:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    17f8:	add	x0, x0, #0x0
    17fc:	bl	0 <__assert_fail>
    1800:	cmp	x3, #0x0
    1804:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    1808:	csel	x3, x3, x25, ne  // ne = any
    180c:	add	w6, w0, #0x1
    1810:	add	w25, w1, w0
    1814:	and	w1, w2, w25
    1818:	and	w25, w2, w25
    181c:	lsl	x0, x25, #4
    1820:	add	x25, x5, x25, lsl #4
    1824:	ldr	x4, [x5, x0]
    1828:	cmp	x19, x4
    182c:	b.eq	15fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x52c>  // b.none
    1830:	mov	w0, w6
    1834:	b	17cc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6fc>
    1838:	sub	w0, w26, #0x1
    183c:	orr	x0, x0, x0, lsr #1
    1840:	orr	x0, x0, x0, lsr #2
    1844:	orr	x0, x0, x0, lsr #4
    1848:	orr	x0, x0, x0, lsr #8
    184c:	orr	x0, x0, x0, lsr #16
    1850:	add	x0, x0, #0x1
    1854:	cmp	w0, #0x40
    1858:	mov	w1, #0x40                  	// #64
    185c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1860:	add	x25, x20, #0x50
    1864:	str	w0, [x25, #24]
    1868:	ubfiz	x0, x0, #4, #32
    186c:	bl	0 <_Znwm>
    1870:	str	x0, [x25, #8]
    1874:	cbz	x27, 18cc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x7fc>
    1878:	ubfiz	x1, x26, #4, #32
    187c:	add	x6, x27, x1
    1880:	str	wzr, [x20, #96]
    1884:	str	wzr, [x20, #100]
    1888:	ldr	w2, [x20, #104]
    188c:	sub	w3, w2, #0x1
    1890:	tst	w3, w2
    1894:	b.ne	1928 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x858>  // b.any
    1898:	ubfiz	x2, x2, #4, #32
    189c:	add	x2, x0, x2
    18a0:	mov	x3, #0xfffffffffffffff8    	// #-8
    18a4:	cmp	x0, x2
    18a8:	b.eq	18b8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x7e8>  // b.none
    18ac:	str	x3, [x0], #16
    18b0:	cmp	x2, x0
    18b4:	b.ne	18ac <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x7dc>  // b.any
    18b8:	cmp	x27, x6
    18bc:	b.eq	199c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8cc>  // b.none
    18c0:	mov	x0, x27
    18c4:	mov	w11, #0x1                   	// #1
    18c8:	b	1d54 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xc84>
    18cc:	str	wzr, [x25, #16]
    18d0:	str	wzr, [x25, #20]
    18d4:	ldr	w1, [x25, #24]
    18d8:	sub	w2, w1, #0x1
    18dc:	tst	w2, w1
    18e0:	b.ne	1908 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x838>  // b.any
    18e4:	ubfiz	x1, x1, #4, #32
    18e8:	add	x1, x0, x1
    18ec:	cmp	x0, x1
    18f0:	b.eq	19a4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8d4>  // b.none
    18f4:	mov	x2, #0xfffffffffffffff8    	// #-8
    18f8:	str	x2, [x0], #16
    18fc:	cmp	x1, x0
    1900:	b.ne	18f8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x828>  // b.any
    1904:	b	19a4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8d4>
    1908:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    190c:	add	x3, x3, #0x0
    1910:	mov	w2, #0x15b                 	// #347
    1914:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1918:	add	x1, x1, #0x0
    191c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1920:	add	x0, x0, #0x0
    1924:	bl	0 <__assert_fail>
    1928:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    192c:	add	x3, x3, #0x0
    1930:	mov	w2, #0x15b                 	// #347
    1934:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1938:	add	x1, x1, #0x0
    193c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1940:	add	x0, x0, #0x0
    1944:	bl	0 <__assert_fail>
    1948:	mov	w9, w11
    194c:	mov	x5, #0x0                   	// #0
    1950:	cmn	x8, #0x8
    1954:	b.ne	1964 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x894>  // b.any
    1958:	cmp	x5, #0x0
    195c:	csel	x5, x5, x10, ne  // ne = any
    1960:	b	1d30 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xc60>
    1964:	cmp	x5, #0x0
    1968:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    196c:	csel	x5, x5, x10, ne  // ne = any
    1970:	add	w12, w9, #0x1
    1974:	add	w8, w9, w4
    1978:	and	w4, w3, w8
    197c:	and	w8, w3, w8
    1980:	lsl	x9, x8, #4
    1984:	add	x10, x7, x8, lsl #4
    1988:	ldr	x8, [x7, x9]
    198c:	cmp	x2, x8
    1990:	b.eq	1d94 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xcc4>  // b.none
    1994:	mov	w9, w12
    1998:	b	1950 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x880>
    199c:	mov	x0, x27
    19a0:	bl	0 <_ZdlPvm>
    19a4:	ldr	w2, [x20, #104]
    19a8:	cbz	w2, 1a54 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x984>
    19ac:	cmn	x19, #0x10
    19b0:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    19b4:	b.eq	19fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x92c>  // b.none
    19b8:	ldr	x5, [x20, #88]
    19bc:	sub	w2, w2, #0x1
    19c0:	lsr	w1, w19, #9
    19c4:	eor	w1, w1, w19, lsr #4
    19c8:	and	w1, w1, w2
    19cc:	lsl	w0, w1, #4
    19d0:	add	x25, x5, x0
    19d4:	ldr	x4, [x5, x0]
    19d8:	cmp	x19, x4
    19dc:	b.eq	15fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x52c>  // b.none
    19e0:	mov	w0, #0x1                   	// #1
    19e4:	mov	x3, #0x0                   	// #0
    19e8:	cmn	x4, #0x8
    19ec:	b.ne	1a1c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x94c>  // b.any
    19f0:	cbz	x3, 15f8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x528>
    19f4:	mov	x25, x3
    19f8:	b	15fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x52c>
    19fc:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1a00:	add	x3, x3, #0x0
    1a04:	mov	w2, #0x250                 	// #592
    1a08:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1a0c:	add	x1, x1, #0x0
    1a10:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1a14:	add	x0, x0, #0x0
    1a18:	bl	0 <__assert_fail>
    1a1c:	cmp	x3, #0x0
    1a20:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    1a24:	csel	x3, x3, x25, ne  // ne = any
    1a28:	add	w6, w0, #0x1
    1a2c:	add	w25, w1, w0
    1a30:	and	w1, w2, w25
    1a34:	and	w25, w2, w25
    1a38:	lsl	x0, x25, #4
    1a3c:	add	x25, x5, x25, lsl #4
    1a40:	ldr	x4, [x5, x0]
    1a44:	cmp	x19, x4
    1a48:	b.eq	15fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x52c>  // b.none
    1a4c:	mov	w0, w6
    1a50:	b	19e8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x918>
    1a54:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1a58:	add	x3, x3, #0x0
    1a5c:	mov	w2, #0x22f                 	// #559
    1a60:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1a64:	add	x1, x1, #0x0
    1a68:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1a6c:	add	x0, x0, #0x0
    1a70:	bl	0 <__assert_fail>
    1a74:	stp	x25, x26, [sp, #64]
    1a78:	str	x27, [sp, #80]
    1a7c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1a80:	add	x3, x3, #0x0
    1a84:	mov	w2, #0x250                 	// #592
    1a88:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1a8c:	add	x1, x1, #0x0
    1a90:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1a94:	add	x0, x0, #0x0
    1a98:	bl	0 <__assert_fail>
    1a9c:	mov	w9, #0x1                   	// #1
    1aa0:	mov	x10, #0x0                   	// #0
    1aa4:	cmn	x7, #0x8
    1aa8:	b.ne	1ac4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9f4>  // b.any
    1aac:	ubfiz	x0, x0, #4, #32
    1ab0:	add	x6, x2, x0
    1ab4:	ldr	x4, [x20, #80]
    1ab8:	mov	x0, x6
    1abc:	cbnz	x6, 13ac <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2dc>
    1ac0:	b	13b8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2e8>
    1ac4:	cmp	x10, #0x0
    1ac8:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    1acc:	csel	x10, x10, x6, ne  // ne = any
    1ad0:	add	w11, w9, #0x1
    1ad4:	add	w9, w9, w4
    1ad8:	and	w4, w8, w9
    1adc:	and	w9, w8, w9
    1ae0:	lsl	x7, x9, #4
    1ae4:	add	x6, x2, x7
    1ae8:	ldr	x7, [x2, x7]
    1aec:	cmp	x19, x7
    1af0:	b.eq	139c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2cc>  // b.none
    1af4:	mov	w9, w11
    1af8:	b	1aa4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9d4>
    1afc:	stp	x25, x26, [sp, #64]
    1b00:	str	x27, [sp, #80]
    1b04:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1b08:	add	x3, x3, #0x0
    1b0c:	mov	w2, #0x4c0                 	// #1216
    1b10:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1b14:	add	x1, x1, #0x0
    1b18:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1b1c:	add	x0, x0, #0x0
    1b20:	bl	0 <__assert_fail>
    1b24:	sub	x3, x3, #0x1
    1b28:	ldr	w0, [sp, #228]
    1b2c:	cmp	x3, x0
    1b30:	b.hi	1b40 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa70>  // b.pmore
    1b34:	sub	w1, w1, #0x1
    1b38:	str	w1, [sp, #224]
    1b3c:	b	1328 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x258>
    1b40:	stp	x25, x26, [sp, #64]
    1b44:	str	x27, [sp, #80]
    1b48:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1b4c:	add	x3, x3, #0x0
    1b50:	mov	w2, #0x43                  	// #67
    1b54:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1b58:	add	x1, x1, #0x0
    1b5c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1b60:	add	x0, x0, #0x0
    1b64:	bl	0 <__assert_fail>
    1b68:	add	x0, sp, #0x88
    1b6c:	mov	x3, #0x8                   	// #8
    1b70:	mov	x2, #0x0                   	// #0
    1b74:	add	x1, x0, #0x10
    1b78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1b7c:	b	13cc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2fc>
    1b80:	stp	x25, x26, [sp, #64]
    1b84:	str	x27, [sp, #80]
    1b88:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1b8c:	add	x3, x3, #0x0
    1b90:	mov	w2, #0x43                  	// #67
    1b94:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1b98:	add	x1, x1, #0x0
    1b9c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1ba0:	add	x0, x0, #0x0
    1ba4:	bl	0 <__assert_fail>
    1ba8:	stp	x25, x26, [sp, #64]
    1bac:	str	x23, [sp, #104]
    1bb0:	str	wzr, [sp, #112]
    1bb4:	mov	w0, #0x2                   	// #2
    1bb8:	str	w0, [sp, #116]
    1bbc:	mov	x1, x21
    1bc0:	mov	x0, x19
    1bc4:	bl	88 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE>
    1bc8:	ldr	x19, [sp, #104]
    1bcc:	ldr	w25, [sp, #112]
    1bd0:	add	x25, x19, x25, lsl #3
    1bd4:	cmp	x25, x19
    1bd8:	b.eq	1c34 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb64>  // b.none
    1bdc:	str	x27, [sp, #80]
    1be0:	mov	x26, #0x8                   	// #8
    1be4:	ldr	x27, [x19]
    1be8:	ldr	w1, [sp, #224]
    1bec:	ldr	w0, [sp, #228]
    1bf0:	cmp	w1, w0
    1bf4:	b.cs	1c4c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb7c>  // b.hs, b.nlast
    1bf8:	ldr	w1, [sp, #224]
    1bfc:	ldr	x0, [sp, #216]
    1c00:	str	x27, [x0, x1, lsl #3]
    1c04:	ldr	w1, [sp, #224]
    1c08:	mov	w0, w1
    1c0c:	add	x0, x0, #0x1
    1c10:	ldr	w2, [sp, #228]
    1c14:	cmp	x0, x2
    1c18:	b.hi	1c64 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb94>  // b.pmore
    1c1c:	add	w1, w1, #0x1
    1c20:	str	w1, [sp, #224]
    1c24:	add	x19, x19, #0x8
    1c28:	cmp	x25, x19
    1c2c:	b.ne	1be4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb14>  // b.any
    1c30:	ldr	x27, [sp, #80]
    1c34:	ldr	x0, [sp, #104]
    1c38:	cmp	x0, x23
    1c3c:	b.eq	12e0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x210>  // b.none
    1c40:	bl	0 <free>
    1c44:	ldp	x25, x26, [sp, #64]
    1c48:	b	1328 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x258>
    1c4c:	mov	x3, x26
    1c50:	mov	x2, #0x0                   	// #0
    1c54:	mov	x1, x24
    1c58:	mov	x0, x22
    1c5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1c60:	b	1bf8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb28>
    1c64:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1c68:	add	x3, x3, #0x0
    1c6c:	mov	w2, #0x43                  	// #67
    1c70:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1c74:	add	x1, x1, #0x0
    1c78:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1c7c:	add	x0, x0, #0x0
    1c80:	bl	0 <__assert_fail>
    1c84:	mov	w19, #0x1                   	// #1
    1c88:	ldp	x21, x22, [sp, #32]
    1c8c:	ldp	x23, x24, [sp, #48]
    1c90:	b	146c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x39c>
    1c94:	mov	w19, #0x0                   	// #0
    1c98:	ldp	x21, x22, [sp, #32]
    1c9c:	ldp	x23, x24, [sp, #48]
    1ca0:	b	146c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x39c>
    1ca4:	mov	x5, #0x0                   	// #0
    1ca8:	str	x2, [x5]
    1cac:	ldr	w2, [x0, #8]
    1cb0:	str	w2, [x5, #8]
    1cb4:	ldr	w2, [x20, #96]
    1cb8:	add	w2, w2, #0x1
    1cbc:	str	w2, [x20, #96]
    1cc0:	add	x0, x0, #0x10
    1cc4:	cmp	x6, x0
    1cc8:	b.eq	1780 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6b0>  // b.none
    1ccc:	ldr	x2, [x0]
    1cd0:	cmn	x2, #0x8
    1cd4:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    1cd8:	b.eq	1cc0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xbf0>  // b.none
    1cdc:	ldr	w3, [x20, #104]
    1ce0:	cbz	w3, 1ca4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xbd4>
    1ce4:	ldr	x7, [x20, #88]
    1ce8:	sub	w3, w3, #0x1
    1cec:	lsr	w4, w2, #9
    1cf0:	eor	w4, w4, w2, lsr #4
    1cf4:	and	w4, w4, w3
    1cf8:	lsl	w5, w4, #4
    1cfc:	add	x10, x7, x5
    1d00:	ldr	x8, [x7, x5]
    1d04:	cmp	x2, x8
    1d08:	b.ne	172c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x65c>  // b.any
    1d0c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1d10:	add	x3, x3, #0x0
    1d14:	mov	w2, #0x17a                 	// #378
    1d18:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1d1c:	add	x1, x1, #0x0
    1d20:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1d24:	add	x0, x0, #0x0
    1d28:	bl	0 <__assert_fail>
    1d2c:	mov	x5, #0x0                   	// #0
    1d30:	str	x2, [x5]
    1d34:	ldr	w2, [x0, #8]
    1d38:	str	w2, [x5, #8]
    1d3c:	ldr	w2, [x20, #96]
    1d40:	add	w2, w2, #0x1
    1d44:	str	w2, [x20, #96]
    1d48:	add	x0, x0, #0x10
    1d4c:	cmp	x6, x0
    1d50:	b.eq	199c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8cc>  // b.none
    1d54:	ldr	x2, [x0]
    1d58:	cmn	x2, #0x10
    1d5c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    1d60:	b.eq	1d48 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xc78>  // b.none
    1d64:	ldr	w3, [x20, #104]
    1d68:	cbz	w3, 1d2c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xc5c>
    1d6c:	ldr	x7, [x20, #88]
    1d70:	sub	w3, w3, #0x1
    1d74:	lsr	w4, w2, #9
    1d78:	eor	w4, w4, w2, lsr #4
    1d7c:	and	w4, w4, w3
    1d80:	lsl	w5, w4, #4
    1d84:	add	x10, x7, x5
    1d88:	ldr	x8, [x7, x5]
    1d8c:	cmp	x2, x8
    1d90:	b.ne	1948 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x878>  // b.any
    1d94:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1d98:	add	x3, x3, #0x0
    1d9c:	mov	w2, #0x17a                 	// #378
    1da0:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1da4:	add	x1, x1, #0x0
    1da8:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1dac:	add	x0, x0, #0x0
    1db0:	bl	0 <__assert_fail>
    1db4:	ldr	x0, [x20, #112]
    1db8:	ldr	x1, [x20, #120]
    1dbc:	cmp	x0, x1
    1dc0:	b.ne	1178 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa8>  // b.any
    1dc4:	ldr	x0, [x20, #72]
    1dc8:	ldur	x19, [x0, #-24]
    1dcc:	b	1194 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xc4>
    1dd0:	bl	0 <_ZdlPvm>
    1dd4:	str	wzr, [x20, #104]
    1dd8:	str	xzr, [x20, #88]
    1ddc:	str	wzr, [x20, #96]
    1de0:	str	wzr, [x20, #100]
    1de4:	b	1168 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x98>
    1de8:	mov	w19, #0x40                  	// #64
    1dec:	bl	0 <_ZdlPvm>
    1df0:	lsl	w0, w19, #2
    1df4:	mov	w1, #0xaaab                	// #43691
    1df8:	movk	w1, #0xaaaa, lsl #16
    1dfc:	umull	x0, w0, w1
    1e00:	lsr	x0, x0, #33
    1e04:	add	w0, w0, #0x1
    1e08:	orr	x0, x0, x0, lsr #1
    1e0c:	orr	x0, x0, x0, lsr #2
    1e10:	orr	x0, x0, x0, lsr #4
    1e14:	orr	x0, x0, x0, lsr #8
    1e18:	orr	x0, x0, x0, lsr #16
    1e1c:	add	x0, x0, #0x1
    1e20:	str	w0, [x20, #104]
    1e24:	lsl	x0, x0, #4
    1e28:	bl	0 <_Znwm>
    1e2c:	str	x0, [x20, #88]
    1e30:	str	wzr, [x20, #96]
    1e34:	str	wzr, [x20, #100]
    1e38:	ldr	w1, [x20, #104]
    1e3c:	sub	w2, w1, #0x1
    1e40:	tst	w2, w1
    1e44:	b.ne	1e6c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd9c>  // b.any
    1e48:	ubfiz	x1, x1, #4, #32
    1e4c:	add	x1, x0, x1
    1e50:	cmp	x0, x1
    1e54:	b.eq	1168 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x98>  // b.none
    1e58:	mov	x2, #0xfffffffffffffff8    	// #-8
    1e5c:	str	x2, [x0], #16
    1e60:	cmp	x1, x0
    1e64:	b.ne	1e5c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd8c>  // b.any
    1e68:	b	1168 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x98>
    1e6c:	stp	x21, x22, [sp, #32]
    1e70:	stp	x23, x24, [sp, #48]
    1e74:	stp	x25, x26, [sp, #64]
    1e78:	str	x27, [sp, #80]
    1e7c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1e80:	add	x3, x3, #0x0
    1e84:	mov	w2, #0x15b                 	// #347
    1e88:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1e8c:	add	x1, x1, #0x0
    1e90:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1e94:	add	x0, x0, #0x0
    1e98:	bl	0 <__assert_fail>
    1e9c:	ldr	x0, [x20, #80]
    1ea0:	add	x0, x0, #0x1
    1ea4:	str	x0, [x20, #80]
    1ea8:	lsl	w0, w26, #1
    1eac:	sub	w0, w0, #0x1
    1eb0:	orr	x0, x0, x0, lsr #1
    1eb4:	orr	x0, x0, x0, lsr #2
    1eb8:	orr	x0, x0, x0, lsr #4
    1ebc:	orr	x0, x0, x0, lsr #8
    1ec0:	orr	x0, x0, x0, lsr #16
    1ec4:	add	x0, x0, #0x1
    1ec8:	cmp	w0, #0x40
    1ecc:	mov	w1, #0x40                  	// #64
    1ed0:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1ed4:	add	x25, x20, #0x50
    1ed8:	str	w0, [x25, #24]
    1edc:	ubfiz	x0, x0, #4, #32
    1ee0:	bl	0 <_Znwm>
    1ee4:	str	x0, [x25, #8]
    1ee8:	cbz	x27, 16b0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x5e0>
    1eec:	ubfiz	x1, x26, #4, #32
    1ef0:	add	x6, x27, x1
    1ef4:	str	wzr, [x20, #96]
    1ef8:	str	wzr, [x20, #100]
    1efc:	ldr	w2, [x20, #104]
    1f00:	sub	w3, w2, #0x1
    1f04:	tst	w3, w2
    1f08:	b.ne	170c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x63c>  // b.any
    1f0c:	ubfiz	x2, x2, #4, #32
    1f10:	add	x2, x0, x2
    1f14:	mov	x3, #0xfffffffffffffff8    	// #-8
    1f18:	cmp	x0, x2
    1f1c:	b.eq	1f2c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xe5c>  // b.none
    1f20:	str	x3, [x0], #16
    1f24:	cmp	x2, x0
    1f28:	b.ne	1f20 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xe50>  // b.any
    1f2c:	cmp	x27, x6
    1f30:	b.eq	1780 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6b0>  // b.none
    1f34:	mov	x0, x27
    1f38:	mov	w11, #0x1                   	// #1
    1f3c:	b	1ccc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xbfc>

0000000000001f40 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>:
    1f40:	stp	x29, x30, [sp, #-432]!
    1f44:	mov	x29, sp
    1f48:	stp	x19, x20, [sp, #16]
    1f4c:	stp	x27, x28, [sp, #80]
    1f50:	mov	x28, x0
    1f54:	add	x0, sp, #0x138
    1f58:	str	x0, [sp, #296]
    1f5c:	str	wzr, [sp, #304]
    1f60:	mov	w0, #0x8                   	// #8
    1f64:	str	w0, [sp, #308]
    1f68:	add	x1, sp, #0xe8
    1f6c:	str	x1, [sp, #216]
    1f70:	str	wzr, [sp, #224]
    1f74:	str	w0, [sp, #228]
    1f78:	ldr	x0, [x28, #72]
    1f7c:	ldur	x19, [x0, #-24]
    1f80:	str	x19, [sp, #120]
    1f84:	str	x19, [sp, #160]
    1f88:	ldr	x0, [x0]
    1f8c:	str	x0, [sp, #128]
    1f90:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1f94:	str	w0, [sp, #168]
    1f98:	ldrb	w0, [x19, #16]
    1f9c:	cmp	w0, #0x10
    1fa0:	b.hi	1fb8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x78>  // b.pmore
    1fa4:	ldr	w0, [sp, #168]
    1fa8:	ldp	x19, x20, [sp, #16]
    1fac:	ldp	x27, x28, [sp, #80]
    1fb0:	ldp	x29, x30, [sp], #432
    1fb4:	ret
    1fb8:	ldr	x0, [x19]
    1fbc:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1fc0:	str	w0, [sp, #172]
    1fc4:	str	x19, [sp, #312]
    1fc8:	mov	w0, #0x1                   	// #1
    1fcc:	str	w0, [sp, #304]
    1fd0:	add	x0, x28, #0x50
    1fd4:	str	x0, [sp, #152]
    1fd8:	ldrb	w0, [x19, #16]
    1fdc:	cmp	w0, #0x17
    1fe0:	b.ls	2038 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf8>  // b.plast
    1fe4:	ldr	x0, [sp, #120]
    1fe8:	str	x0, [sp, #376]
    1fec:	add	x1, sp, #0x178
    1ff0:	ldr	x0, [sp, #152]
    1ff4:	bl	0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    1ff8:	ldr	w1, [sp, #168]
    1ffc:	str	w1, [x0]
    2000:	ldr	w0, [sp, #304]
    2004:	cbz	w0, 2fc0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1080>
    2008:	stp	x21, x22, [sp, #32]
    200c:	stp	x23, x24, [sp, #48]
    2010:	stp	x25, x26, [sp, #64]
    2014:	add	x1, sp, #0xb8
    2018:	str	x1, [sp, #112]
    201c:	add	x1, sp, #0xc8
    2020:	str	x1, [sp, #96]
    2024:	add	x1, sp, #0x128
    2028:	str	x1, [sp, #136]
    202c:	add	x1, sp, #0x138
    2030:	str	x1, [sp, #144]
    2034:	b	20a4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x164>
    2038:	stp	x21, x22, [sp, #32]
    203c:	stp	x23, x24, [sp, #48]
    2040:	stp	x25, x26, [sp, #64]
    2044:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2048:	add	x3, x3, #0x0
    204c:	mov	w2, #0x108                 	// #264
    2050:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2054:	add	x1, x1, #0x0
    2058:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    205c:	add	x0, x0, #0x0
    2060:	bl	0 <__assert_fail>
    2064:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2068:	add	x3, x3, #0x0
    206c:	mov	w2, #0x69                  	// #105
    2070:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2074:	add	x1, x1, #0x0
    2078:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    207c:	add	x0, x0, #0x0
    2080:	bl	0 <__assert_fail>
    2084:	sub	x2, x2, #0x1
    2088:	ldr	w1, [sp, #308]
    208c:	cmp	x2, x1
    2090:	b.hi	21c8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x288>  // b.pmore
    2094:	sub	w0, w0, #0x1
    2098:	str	w0, [sp, #304]
    209c:	ldr	w0, [sp, #304]
    20a0:	cbz	w0, 2fb4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1074>
    20a4:	mov	w2, w0
    20a8:	ldr	x1, [sp, #296]
    20ac:	add	x1, x1, w0, uxtw #3
    20b0:	ldur	x19, [x1, #-8]
    20b4:	cbz	x19, 2064 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x124>
    20b8:	ldrb	w1, [x19, #16]
    20bc:	cmp	w1, #0x10
    20c0:	b.ls	2084 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x144>  // b.plast
    20c4:	cmp	w1, #0x17
    20c8:	b.ls	21e8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2a8>  // b.plast
    20cc:	ldr	x22, [x28, #88]
    20d0:	ldr	w21, [x28, #104]
    20d4:	cbz	w21, 356c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x162c>
    20d8:	cmn	x19, #0x10
    20dc:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    20e0:	b.eq	2208 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2c8>  // b.none
    20e4:	sub	w2, w21, #0x1
    20e8:	lsr	w0, w19, #9
    20ec:	eor	w0, w0, w19, lsr #4
    20f0:	and	w0, w0, w2
    20f4:	lsl	w1, w0, #4
    20f8:	add	x20, x22, x1
    20fc:	ldr	x1, [x22, x1]
    2100:	cmp	x19, x1
    2104:	b.ne	2228 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2e8>  // b.any
    2108:	ldr	w20, [x20, #8]
    210c:	add	x20, x20, x20, lsl #1
    2110:	ldr	x0, [x28, #112]
    2114:	add	x20, x0, x20, lsl #3
    2118:	ldr	x0, [sp, #96]
    211c:	str	x0, [sp, #184]
    2120:	str	wzr, [sp, #192]
    2124:	mov	w0, #0x2                   	// #2
    2128:	str	w0, [sp, #196]
    212c:	ldr	x1, [sp, #112]
    2130:	mov	x0, x19
    2134:	bl	88 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE>
    2138:	ldr	w0, [sp, #224]
    213c:	cbz	w0, 2158 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x218>
    2140:	mov	w2, w0
    2144:	ldr	x1, [sp, #216]
    2148:	add	x1, x1, w0, uxtw #3
    214c:	ldur	x1, [x1, #-8]
    2150:	cmp	x19, x1
    2154:	b.eq	26ec <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x7ac>  // b.none
    2158:	ldr	w1, [sp, #228]
    215c:	cmp	w0, w1
    2160:	b.cs	2784 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x844>  // b.hs, b.nlast
    2164:	ldr	w1, [sp, #224]
    2168:	ldr	x0, [sp, #216]
    216c:	str	x19, [x0, x1, lsl #3]
    2170:	ldr	w0, [sp, #224]
    2174:	mov	w1, w0
    2178:	add	x1, x1, #0x1
    217c:	ldr	w2, [sp, #228]
    2180:	cmp	x1, x2
    2184:	b.hi	279c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x85c>  // b.pmore
    2188:	add	w0, w0, #0x1
    218c:	str	w0, [sp, #224]
    2190:	ldr	w25, [x20, #8]
    2194:	ldr	w0, [x20, #12]
    2198:	cmp	w0, w25
    219c:	csel	w0, w0, w25, cs  // cs = hs, nlast
    21a0:	str	w0, [x20, #12]
    21a4:	ldr	x20, [sp, #184]
    21a8:	ldr	w23, [sp, #192]
    21ac:	add	x23, x20, x23, lsl #3
    21b0:	cmp	x23, x20
    21b4:	b.eq	2f9c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x105c>  // b.none
    21b8:	mov	w27, #0x0                   	// #0
    21bc:	add	x0, sp, #0x198
    21c0:	str	x0, [sp, #104]
    21c4:	b	2a84 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb44>
    21c8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    21cc:	add	x3, x3, #0x0
    21d0:	mov	w2, #0x43                  	// #67
    21d4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    21d8:	add	x1, x1, #0x0
    21dc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    21e0:	add	x0, x0, #0x0
    21e4:	bl	0 <__assert_fail>
    21e8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    21ec:	add	x3, x3, #0x0
    21f0:	mov	w2, #0x108                 	// #264
    21f4:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    21f8:	add	x1, x1, #0x0
    21fc:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2200:	add	x0, x0, #0x0
    2204:	bl	0 <__assert_fail>
    2208:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    220c:	add	x3, x3, #0x0
    2210:	mov	w2, #0x250                 	// #592
    2214:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2218:	add	x1, x1, #0x0
    221c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2220:	add	x0, x0, #0x0
    2224:	bl	0 <__assert_fail>
    2228:	mov	w4, #0x1                   	// #1
    222c:	mov	x3, #0x0                   	// #0
    2230:	cmn	x1, #0x8
    2234:	b.ne	22f0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3b0>  // b.any
    2238:	cmp	x3, #0x0
    223c:	csel	x20, x20, x3, eq  // eq = none
    2240:	ldr	x0, [x28, #80]
    2244:	add	x0, x0, #0x1
    2248:	str	x0, [x28, #80]
    224c:	ldr	w0, [x28, #96]
    2250:	add	w1, w0, #0x1
    2254:	add	w0, w21, w21, lsl #1
    2258:	cmp	w0, w1, lsl #2
    225c:	b.ls	3578 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1638>  // b.plast
    2260:	ldr	w0, [x28, #100]
    2264:	sub	w0, w21, w0
    2268:	sub	w0, w0, w1
    226c:	cmp	w0, w21, lsr #3
    2270:	b.ls	24b0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x570>  // b.plast
    2274:	cbz	x20, 26cc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x78c>
    2278:	add	x1, x28, #0x50
    227c:	ldr	w0, [x28, #96]
    2280:	add	w0, w0, #0x1
    2284:	str	w0, [x28, #96]
    2288:	ldr	x0, [x20]
    228c:	cmn	x0, #0x8
    2290:	b.eq	22a0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x360>  // b.none
    2294:	ldr	w0, [x1, #20]
    2298:	sub	w0, w0, #0x1
    229c:	str	w0, [x1, #20]
    22a0:	str	x19, [x20]
    22a4:	str	wzr, [x20, #8]
    22a8:	str	x19, [sp, #384]
    22ac:	str	wzr, [sp, #392]
    22b0:	str	wzr, [sp, #396]
    22b4:	str	xzr, [sp, #400]
    22b8:	add	x21, x28, #0x70
    22bc:	add	x1, sp, #0x180
    22c0:	mov	x0, x21
    22c4:	bl	0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    22c8:	ldr	x0, [x21, #8]
    22cc:	ldr	x1, [x28, #112]
    22d0:	sub	x0, x0, x1
    22d4:	asr	x0, x0, #3
    22d8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    22dc:	movk	x1, #0xaaab
    22e0:	mul	x0, x0, x1
    22e4:	sub	w0, w0, #0x1
    22e8:	str	w0, [x20, #8]
    22ec:	b	2108 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1c8>
    22f0:	cmp	x3, #0x0
    22f4:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    22f8:	csel	x3, x3, x20, ne  // ne = any
    22fc:	add	w5, w4, #0x1
    2300:	add	w4, w0, w4
    2304:	and	w0, w2, w4
    2308:	and	w4, w2, w4
    230c:	lsl	x1, x4, #4
    2310:	add	x20, x22, x1
    2314:	ldr	x1, [x22, x1]
    2318:	cmp	x19, x1
    231c:	b.eq	2108 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1c8>  // b.none
    2320:	mov	w4, w5
    2324:	b	2230 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2f0>
    2328:	str	wzr, [x20, #16]
    232c:	str	wzr, [x20, #20]
    2330:	ldr	w1, [x20, #24]
    2334:	sub	w2, w1, #0x1
    2338:	tst	w2, w1
    233c:	b.ne	2364 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x424>  // b.any
    2340:	ubfiz	x1, x1, #4, #32
    2344:	add	x1, x0, x1
    2348:	cmp	x0, x1
    234c:	b.eq	2400 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4c0>  // b.none
    2350:	mov	x2, #0xfffffffffffffff8    	// #-8
    2354:	str	x2, [x0], #16
    2358:	cmp	x1, x0
    235c:	b.ne	2354 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x414>  // b.any
    2360:	b	2400 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4c0>
    2364:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2368:	add	x3, x3, #0x0
    236c:	mov	w2, #0x15b                 	// #347
    2370:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2374:	add	x1, x1, #0x0
    2378:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    237c:	add	x0, x0, #0x0
    2380:	bl	0 <__assert_fail>
    2384:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2388:	add	x3, x3, #0x0
    238c:	mov	w2, #0x15b                 	// #347
    2390:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2394:	add	x1, x1, #0x0
    2398:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    239c:	add	x0, x0, #0x0
    23a0:	bl	0 <__assert_fail>
    23a4:	mov	w10, w11
    23a8:	mov	x6, #0x0                   	// #0
    23ac:	cmn	x8, #0x8
    23b0:	b.ne	23c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x480>  // b.any
    23b4:	cmp	x6, #0x0
    23b8:	csel	x6, x6, x9, ne  // ne = any
    23bc:	b	3380 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1440>
    23c0:	cmp	x6, #0x0
    23c4:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    23c8:	csel	x6, x6, x9, ne  // ne = any
    23cc:	add	w12, w10, #0x1
    23d0:	add	w10, w10, w4
    23d4:	and	w4, w3, w10
    23d8:	and	w10, w3, w10
    23dc:	lsl	x8, x10, #4
    23e0:	add	x9, x7, x8
    23e4:	ldr	x8, [x7, x8]
    23e8:	cmp	x2, x8
    23ec:	b.eq	33e4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x14a4>  // b.none
    23f0:	mov	w10, w12
    23f4:	b	23ac <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x46c>
    23f8:	mov	x0, x22
    23fc:	bl	0 <_ZdlPvm>
    2400:	ldr	w0, [x28, #104]
    2404:	cbz	w0, 26cc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x78c>
    2408:	cmn	x19, #0x8
    240c:	ccmn	x19, #0x10, #0x4, ne  // ne = any
    2410:	b.eq	2458 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x518>  // b.none
    2414:	ldr	x3, [x28, #88]
    2418:	sub	w1, w0, #0x1
    241c:	lsr	w0, w19, #9
    2420:	eor	w0, w0, w19, lsr #4
    2424:	and	w0, w0, w1
    2428:	lsl	w2, w0, #4
    242c:	add	x20, x3, x2
    2430:	ldr	x4, [x3, x2]
    2434:	cmp	x19, x4
    2438:	b.eq	2278 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x338>  // b.none
    243c:	mov	w2, #0x1                   	// #1
    2440:	mov	x5, #0x0                   	// #0
    2444:	cmn	x4, #0x8
    2448:	b.ne	2478 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x538>  // b.any
    244c:	cbz	x5, 2274 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x334>
    2450:	mov	x20, x5
    2454:	b	2278 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x338>
    2458:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    245c:	add	x3, x3, #0x0
    2460:	mov	w2, #0x250                 	// #592
    2464:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2468:	add	x1, x1, #0x0
    246c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2470:	add	x0, x0, #0x0
    2474:	bl	0 <__assert_fail>
    2478:	cmp	x5, #0x0
    247c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    2480:	csel	x5, x5, x20, ne  // ne = any
    2484:	add	w6, w2, #0x1
    2488:	add	w2, w0, w2
    248c:	and	w0, w1, w2
    2490:	and	w2, w1, w2
    2494:	lsl	x2, x2, #4
    2498:	add	x20, x3, x2
    249c:	ldr	x4, [x3, x2]
    24a0:	cmp	x19, x4
    24a4:	b.eq	2278 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x338>  // b.none
    24a8:	mov	w2, w6
    24ac:	b	2444 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x504>
    24b0:	sub	w0, w21, #0x1
    24b4:	orr	x0, x0, x0, lsr #1
    24b8:	orr	x0, x0, x0, lsr #2
    24bc:	orr	x0, x0, x0, lsr #4
    24c0:	orr	x0, x0, x0, lsr #8
    24c4:	orr	x0, x0, x0, lsr #16
    24c8:	add	x0, x0, #0x1
    24cc:	cmp	w0, #0x40
    24d0:	mov	w1, #0x40                  	// #64
    24d4:	csel	w0, w0, w1, cs  // cs = hs, nlast
    24d8:	add	x20, x28, #0x50
    24dc:	str	w0, [x20, #24]
    24e0:	ubfiz	x0, x0, #4, #32
    24e4:	bl	0 <_Znwm>
    24e8:	str	x0, [x20, #8]
    24ec:	cbz	x22, 2544 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x604>
    24f0:	ubfiz	x1, x21, #4, #32
    24f4:	add	x5, x22, x1
    24f8:	str	wzr, [x28, #96]
    24fc:	str	wzr, [x28, #100]
    2500:	ldr	w2, [x28, #104]
    2504:	sub	w3, w2, #0x1
    2508:	tst	w3, w2
    250c:	b.ne	25a0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x660>  // b.any
    2510:	ubfiz	x2, x2, #4, #32
    2514:	add	x2, x0, x2
    2518:	mov	x3, #0xfffffffffffffff8    	// #-8
    251c:	cmp	x0, x2
    2520:	b.eq	2530 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5f0>  // b.none
    2524:	str	x3, [x0], #16
    2528:	cmp	x2, x0
    252c:	b.ne	2524 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5e4>  // b.any
    2530:	cmp	x22, x5
    2534:	b.eq	2614 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6d4>  // b.none
    2538:	mov	x0, x22
    253c:	mov	w11, #0x1                   	// #1
    2540:	b	342c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x14ec>
    2544:	str	wzr, [x20, #16]
    2548:	str	wzr, [x20, #20]
    254c:	ldr	w1, [x20, #24]
    2550:	sub	w2, w1, #0x1
    2554:	tst	w2, w1
    2558:	b.ne	2580 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x640>  // b.any
    255c:	ubfiz	x1, x1, #4, #32
    2560:	add	x1, x0, x1
    2564:	cmp	x0, x1
    2568:	b.eq	261c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6dc>  // b.none
    256c:	mov	x2, #0xfffffffffffffff8    	// #-8
    2570:	str	x2, [x0], #16
    2574:	cmp	x1, x0
    2578:	b.ne	2570 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x630>  // b.any
    257c:	b	261c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6dc>
    2580:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2584:	add	x3, x3, #0x0
    2588:	mov	w2, #0x15b                 	// #347
    258c:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2590:	add	x1, x1, #0x0
    2594:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2598:	add	x0, x0, #0x0
    259c:	bl	0 <__assert_fail>
    25a0:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    25a4:	add	x3, x3, #0x0
    25a8:	mov	w2, #0x15b                 	// #347
    25ac:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    25b0:	add	x1, x1, #0x0
    25b4:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    25b8:	add	x0, x0, #0x0
    25bc:	bl	0 <__assert_fail>
    25c0:	mov	w10, w11
    25c4:	mov	x6, #0x0                   	// #0
    25c8:	cmn	x8, #0x8
    25cc:	b.ne	25dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x69c>  // b.any
    25d0:	cmp	x6, #0x0
    25d4:	csel	x6, x6, x9, ne  // ne = any
    25d8:	b	3408 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x14c8>
    25dc:	cmp	x6, #0x0
    25e0:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    25e4:	csel	x6, x6, x9, ne  // ne = any
    25e8:	add	w12, w10, #0x1
    25ec:	add	w10, w10, w4
    25f0:	and	w4, w3, w10
    25f4:	and	w10, w3, w10
    25f8:	lsl	x8, x10, #4
    25fc:	add	x9, x7, x8
    2600:	ldr	x8, [x7, x8]
    2604:	cmp	x2, x8
    2608:	b.eq	346c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x152c>  // b.none
    260c:	mov	w10, w12
    2610:	b	25c8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x688>
    2614:	mov	x0, x22
    2618:	bl	0 <_ZdlPvm>
    261c:	ldr	w0, [x28, #104]
    2620:	cbz	w0, 26cc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x78c>
    2624:	cmn	x19, #0x10
    2628:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    262c:	b.eq	2674 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x734>  // b.none
    2630:	ldr	x4, [x28, #88]
    2634:	sub	w0, w0, #0x1
    2638:	lsr	w1, w19, #9
    263c:	eor	w1, w1, w19, lsr #4
    2640:	and	w1, w1, w0
    2644:	lsl	w2, w1, #4
    2648:	add	x20, x4, x2
    264c:	ldr	x3, [x4, x2]
    2650:	cmp	x19, x3
    2654:	b.eq	2278 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x338>  // b.none
    2658:	mov	w2, #0x1                   	// #1
    265c:	mov	x5, #0x0                   	// #0
    2660:	cmn	x3, #0x8
    2664:	b.ne	2694 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x754>  // b.any
    2668:	cbz	x5, 2274 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x334>
    266c:	mov	x20, x5
    2670:	b	2278 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x338>
    2674:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2678:	add	x3, x3, #0x0
    267c:	mov	w2, #0x250                 	// #592
    2680:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2684:	add	x1, x1, #0x0
    2688:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    268c:	add	x0, x0, #0x0
    2690:	bl	0 <__assert_fail>
    2694:	cmp	x5, #0x0
    2698:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    269c:	csel	x5, x5, x20, ne  // ne = any
    26a0:	add	w6, w2, #0x1
    26a4:	add	w2, w1, w2
    26a8:	and	w1, w0, w2
    26ac:	and	w2, w0, w2
    26b0:	lsl	x2, x2, #4
    26b4:	add	x20, x4, x2
    26b8:	ldr	x3, [x4, x2]
    26bc:	cmp	x19, x3
    26c0:	b.eq	2278 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x338>  // b.none
    26c4:	mov	w2, w6
    26c8:	b	2660 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x720>
    26cc:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    26d0:	add	x3, x3, #0x0
    26d4:	mov	w2, #0x22f                 	// #559
    26d8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    26dc:	add	x1, x1, #0x0
    26e0:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    26e4:	add	x0, x0, #0x0
    26e8:	bl	0 <__assert_fail>
    26ec:	ldr	w1, [sp, #304]
    26f0:	mov	w3, w1
    26f4:	sub	x3, x3, #0x1
    26f8:	ldr	w4, [sp, #308]
    26fc:	cmp	x3, x4
    2700:	b.hi	2744 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x804>  // b.pmore
    2704:	sub	w1, w1, #0x1
    2708:	str	w1, [sp, #304]
    270c:	sub	x2, x2, #0x1
    2710:	ldr	w1, [sp, #228]
    2714:	cmp	x2, x1
    2718:	b.hi	2764 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x824>  // b.pmore
    271c:	sub	w0, w0, #0x1
    2720:	str	w0, [sp, #224]
    2724:	ldr	x19, [sp, #184]
    2728:	ldr	w21, [sp, #192]
    272c:	add	x21, x19, x21, lsl #3
    2730:	cmp	x21, x19
    2734:	b.eq	2824 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8e4>  // b.none
    2738:	add	x22, sp, #0xb0
    273c:	ldr	x23, [sp, #152]
    2740:	b	27e8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8a8>
    2744:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2748:	add	x3, x3, #0x0
    274c:	mov	w2, #0x43                  	// #67
    2750:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2754:	add	x1, x1, #0x0
    2758:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    275c:	add	x0, x0, #0x0
    2760:	bl	0 <__assert_fail>
    2764:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2768:	add	x3, x3, #0x0
    276c:	mov	w2, #0x43                  	// #67
    2770:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2774:	add	x1, x1, #0x0
    2778:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    277c:	add	x0, x0, #0x0
    2780:	bl	0 <__assert_fail>
    2784:	add	x0, sp, #0xd8
    2788:	mov	x3, #0x8                   	// #8
    278c:	mov	x2, #0x0                   	// #0
    2790:	add	x1, x0, #0x10
    2794:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2798:	b	2164 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x224>
    279c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    27a0:	add	x3, x3, #0x0
    27a4:	mov	w2, #0x43                  	// #67
    27a8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    27ac:	add	x1, x1, #0x0
    27b0:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    27b4:	add	x0, x0, #0x0
    27b8:	bl	0 <__assert_fail>
    27bc:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    27c0:	add	x3, x3, #0x0
    27c4:	mov	w2, #0x69                  	// #105
    27c8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    27cc:	add	x1, x1, #0x0
    27d0:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    27d4:	add	x0, x0, #0x0
    27d8:	bl	0 <__assert_fail>
    27dc:	add	x19, x19, #0x8
    27e0:	cmp	x21, x19
    27e4:	b.eq	2824 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8e4>  // b.none
    27e8:	ldr	x0, [x19]
    27ec:	cbz	x0, 27bc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x87c>
    27f0:	ldrb	w1, [x0, #16]
    27f4:	cmp	w1, #0x17
    27f8:	b.ls	27dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x89c>  // b.plast
    27fc:	str	x0, [sp, #176]
    2800:	mov	x1, x22
    2804:	mov	x0, x23
    2808:	bl	0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    280c:	ldr	w1, [x0, #4]
    2810:	ldr	w0, [x20, #12]
    2814:	cmp	w0, w1
    2818:	csel	w0, w0, w1, cs  // cs = hs, nlast
    281c:	str	w0, [x20, #12]
    2820:	b	27dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x89c>
    2824:	ldr	x0, [sp, #184]
    2828:	ldr	x1, [sp, #96]
    282c:	cmp	x0, x1
    2830:	b.eq	209c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x15c>  // b.none
    2834:	bl	0 <free>
    2838:	b	209c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x15c>
    283c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2840:	add	x3, x3, #0x0
    2844:	mov	w2, #0x69                  	// #105
    2848:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    284c:	add	x1, x1, #0x0
    2850:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2854:	add	x0, x0, #0x0
    2858:	bl	0 <__assert_fail>
    285c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2860:	add	x3, x3, #0x0
    2864:	mov	w2, #0x250                 	// #592
    2868:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    286c:	add	x1, x1, #0x0
    2870:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2874:	add	x0, x0, #0x0
    2878:	bl	0 <__assert_fail>
    287c:	mov	w5, #0x1                   	// #1
    2880:	mov	x6, #0x0                   	// #0
    2884:	cmn	x3, #0x8
    2888:	b.ne	28ac <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x96c>  // b.any
    288c:	ubfiz	x22, x0, #4, #32
    2890:	add	x2, x21, x22
    2894:	ldr	x1, [x28, #80]
    2898:	mov	x24, x2
    289c:	mov	x3, x1
    28a0:	cbnz	x2, 2ae8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xba8>
    28a4:	mov	w1, w27
    28a8:	b	2b00 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xbc0>
    28ac:	cmp	x6, #0x0
    28b0:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    28b4:	csel	x6, x6, x2, ne  // ne = any
    28b8:	add	w7, w5, #0x1
    28bc:	add	w5, w5, w1
    28c0:	and	w1, w4, w5
    28c4:	and	w3, w4, w5
    28c8:	lsl	x3, x3, #4
    28cc:	add	x2, x21, x3
    28d0:	ldr	x3, [x21, x3]
    28d4:	cmp	x19, x3
    28d8:	b.eq	2ad4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb94>  // b.none
    28dc:	mov	w5, w7
    28e0:	b	2884 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x944>
    28e4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    28e8:	add	x3, x3, #0x0
    28ec:	mov	w2, #0x4c0                 	// #1216
    28f0:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    28f4:	add	x1, x1, #0x0
    28f8:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    28fc:	add	x0, x0, #0x0
    2900:	bl	0 <__assert_fail>
    2904:	ldr	x4, [x28, #80]
    2908:	cmp	x1, x4
    290c:	b.ne	2928 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x9e8>  // b.any
    2910:	ldr	w1, [x2, #8]
    2914:	ldr	x2, [x28, #112]
    2918:	add	x1, x1, x1, lsl #1
    291c:	add	x1, x2, x1, lsl #3
    2920:	ldr	w1, [x1, #8]
    2924:	b	2b00 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xbc0>
    2928:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    292c:	add	x3, x3, #0x0
    2930:	mov	w2, #0x4b9                 	// #1209
    2934:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2938:	add	x1, x1, #0x0
    293c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2940:	add	x0, x0, #0x0
    2944:	bl	0 <__assert_fail>
    2948:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    294c:	add	x3, x3, #0x0
    2950:	mov	w2, #0x250                 	// #592
    2954:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2958:	add	x1, x1, #0x0
    295c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2960:	add	x0, x0, #0x0
    2964:	bl	0 <__assert_fail>
    2968:	mov	w6, #0x1                   	// #1
    296c:	mov	x5, #0x0                   	// #0
    2970:	cmn	x2, #0x8
    2974:	b.ne	2b68 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc28>  // b.any
    2978:	cmp	x5, #0x0
    297c:	csel	x26, x26, x5, eq  // eq = none
    2980:	add	x3, x3, #0x1
    2984:	str	x3, [x28, #80]
    2988:	ldr	w1, [x28, #96]
    298c:	add	w2, w1, #0x1
    2990:	add	w1, w0, w0, lsl #1
    2994:	cmp	w1, w2, lsl #2
    2998:	b.ls	34dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x159c>  // b.plast
    299c:	ldr	w1, [x28, #100]
    29a0:	sub	w1, w0, w1
    29a4:	sub	w1, w1, w2
    29a8:	cmp	w1, w0, lsr #3
    29ac:	b.ls	2d2c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xdec>  // b.plast
    29b0:	cbz	x26, 2f44 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1004>
    29b4:	add	x1, x28, #0x50
    29b8:	ldr	w0, [x28, #96]
    29bc:	add	w0, w0, #0x1
    29c0:	str	w0, [x28, #96]
    29c4:	ldr	x0, [x26]
    29c8:	cmn	x0, #0x8
    29cc:	b.eq	29dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa9c>  // b.none
    29d0:	ldr	w0, [x1, #20]
    29d4:	sub	w0, w0, #0x1
    29d8:	str	w0, [x1, #20]
    29dc:	str	x19, [x26]
    29e0:	str	wzr, [x26, #8]
    29e4:	str	x19, [sp, #408]
    29e8:	str	w27, [sp, #416]
    29ec:	str	w27, [sp, #420]
    29f0:	str	xzr, [sp, #424]
    29f4:	add	x21, x28, #0x70
    29f8:	ldr	x1, [sp, #104]
    29fc:	mov	x0, x21
    2a00:	bl	0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2a04:	ldr	x0, [x28, #120]
    2a08:	ldr	x1, [x28, #112]
    2a0c:	sub	x0, x0, x1
    2a10:	asr	x0, x0, #3
    2a14:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2a18:	movk	x1, #0xaaab
    2a1c:	mul	x0, x0, x1
    2a20:	sub	w0, w0, #0x1
    2a24:	str	w0, [x26, #8]
    2a28:	ldr	w0, [x26, #8]
    2a2c:	ldr	x1, [x28, #112]
    2a30:	add	x0, x0, x0, lsl #1
    2a34:	add	x0, x1, x0, lsl #3
    2a38:	str	w25, [x0, #8]
    2a3c:	ldr	w1, [sp, #304]
    2a40:	ldr	w0, [sp, #308]
    2a44:	cmp	w1, w0
    2a48:	b.cs	2f64 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1024>  // b.hs, b.nlast
    2a4c:	ldr	w1, [sp, #304]
    2a50:	ldr	x0, [sp, #296]
    2a54:	str	x19, [x0, x1, lsl #3]
    2a58:	ldr	w0, [sp, #304]
    2a5c:	mov	w1, w0
    2a60:	add	x1, x1, #0x1
    2a64:	ldr	w2, [sp, #308]
    2a68:	cmp	x1, x2
    2a6c:	b.hi	2f7c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x103c>  // b.pmore
    2a70:	add	w0, w0, #0x1
    2a74:	str	w0, [sp, #304]
    2a78:	add	x20, x20, #0x8
    2a7c:	cmp	x23, x20
    2a80:	b.eq	2f9c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x105c>  // b.none
    2a84:	ldr	x19, [x20]
    2a88:	cbz	x19, 283c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8fc>
    2a8c:	ldrb	w0, [x19, #16]
    2a90:	cmp	w0, #0x17
    2a94:	b.ls	2a78 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb38>  // b.plast
    2a98:	ldr	x21, [x28, #88]
    2a9c:	ldr	w0, [x28, #104]
    2aa0:	cbz	w0, 288c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x94c>
    2aa4:	cmn	x19, #0x8
    2aa8:	ccmn	x19, #0x10, #0x4, ne  // ne = any
    2aac:	b.eq	285c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x91c>  // b.none
    2ab0:	sub	w4, w0, #0x1
    2ab4:	lsr	w1, w19, #9
    2ab8:	eor	w1, w1, w19, lsr #4
    2abc:	and	w1, w1, w4
    2ac0:	lsl	w3, w1, #4
    2ac4:	add	x2, x21, x3
    2ac8:	ldr	x3, [x21, x3]
    2acc:	cmp	x19, x3
    2ad0:	b.ne	287c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x93c>  // b.any
    2ad4:	ldr	x1, [x28, #80]
    2ad8:	ubfiz	x22, x0, #4, #32
    2adc:	add	x24, x21, x22
    2ae0:	mov	x3, x1
    2ae4:	cbz	x2, 2904 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x9c4>
    2ae8:	ldr	x4, [x28, #80]
    2aec:	cmp	x4, x1
    2af0:	b.ne	28e4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x9a4>  // b.any
    2af4:	mov	w1, w27
    2af8:	cmp	x24, x2
    2afc:	b.ne	2910 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x9d0>  // b.any
    2b00:	cmp	w25, w1
    2b04:	b.ls	2a78 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb38>  // b.plast
    2b08:	cbz	w0, 34d4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1594>
    2b0c:	cmn	x19, #0x10
    2b10:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    2b14:	b.eq	2948 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa08>  // b.none
    2b18:	sub	w4, w0, #0x1
    2b1c:	lsr	w1, w19, #9
    2b20:	eor	w1, w1, w19, lsr #4
    2b24:	and	w1, w1, w4
    2b28:	lsl	w2, w1, #4
    2b2c:	add	x26, x21, x2
    2b30:	ldr	x2, [x21, x2]
    2b34:	cmp	x19, x2
    2b38:	b.ne	2968 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa28>  // b.any
    2b3c:	ldr	x0, [x28, #80]
    2b40:	cmp	x3, x0
    2b44:	b.eq	2a28 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xae8>  // b.none
    2b48:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2b4c:	add	x3, x3, #0x0
    2b50:	mov	w2, #0x4b9                 	// #1209
    2b54:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2b58:	add	x1, x1, #0x0
    2b5c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2b60:	add	x0, x0, #0x0
    2b64:	bl	0 <__assert_fail>
    2b68:	cmp	x5, #0x0
    2b6c:	ccmn	x2, #0x10, #0x0, eq  // eq = none
    2b70:	csel	x5, x5, x26, ne  // ne = any
    2b74:	add	w7, w6, #0x1
    2b78:	add	w6, w6, w1
    2b7c:	and	w1, w4, w6
    2b80:	and	w6, w4, w6
    2b84:	lsl	x2, x6, #4
    2b88:	add	x26, x21, x2
    2b8c:	ldr	x2, [x21, x2]
    2b90:	cmp	x19, x2
    2b94:	b.eq	2b3c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xbfc>  // b.none
    2b98:	mov	w6, w7
    2b9c:	b	2970 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa30>
    2ba0:	str	wzr, [x26, #16]
    2ba4:	str	wzr, [x26, #20]
    2ba8:	ldr	w1, [x26, #24]
    2bac:	sub	w2, w1, #0x1
    2bb0:	tst	w2, w1
    2bb4:	b.ne	2bdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc9c>  // b.any
    2bb8:	ubfiz	x1, x1, #4, #32
    2bbc:	add	x1, x0, x1
    2bc0:	cmp	x0, x1
    2bc4:	b.eq	2c7c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd3c>  // b.none
    2bc8:	mov	x2, #0xfffffffffffffff8    	// #-8
    2bcc:	str	x2, [x0], #16
    2bd0:	cmp	x1, x0
    2bd4:	b.ne	2bcc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc8c>  // b.any
    2bd8:	b	2c7c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd3c>
    2bdc:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2be0:	add	x3, x3, #0x0
    2be4:	mov	w2, #0x15b                 	// #347
    2be8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2bec:	add	x1, x1, #0x0
    2bf0:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2bf4:	add	x0, x0, #0x0
    2bf8:	bl	0 <__assert_fail>
    2bfc:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2c00:	add	x3, x3, #0x0
    2c04:	mov	w2, #0x15b                 	// #347
    2c08:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2c0c:	add	x1, x1, #0x0
    2c10:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2c14:	add	x0, x0, #0x0
    2c18:	bl	0 <__assert_fail>
    2c1c:	mov	w8, w9
    2c20:	mov	x4, #0x0                   	// #0
    2c24:	cmn	x6, #0x8
    2c28:	b.ne	2c38 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xcf8>  // b.any
    2c2c:	cmp	x4, #0x0
    2c30:	csel	x4, x4, x7, ne  // ne = any
    2c34:	b	3270 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1330>
    2c38:	cmp	x4, #0x0
    2c3c:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    2c40:	csel	x4, x4, x7, ne  // ne = any
    2c44:	add	w10, w8, #0x1
    2c48:	add	w8, w3, w8
    2c4c:	and	w3, w2, w8
    2c50:	and	w8, w2, w8
    2c54:	lsl	x6, x8, #4
    2c58:	add	x7, x5, x6
    2c5c:	ldr	x6, [x5, x6]
    2c60:	cmp	x1, x6
    2c64:	b.eq	32d4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1394>  // b.none
    2c68:	mov	w8, w10
    2c6c:	b	2c24 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xce4>
    2c70:	mov	x1, x22
    2c74:	mov	x0, x21
    2c78:	bl	0 <_ZdlPvm>
    2c7c:	ldr	w0, [x28, #104]
    2c80:	cbz	w0, 2f44 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1004>
    2c84:	cmn	x19, #0x10
    2c88:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    2c8c:	b.eq	2cd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd94>  // b.none
    2c90:	ldr	x2, [x28, #88]
    2c94:	sub	w0, w0, #0x1
    2c98:	lsr	w1, w19, #9
    2c9c:	eor	w1, w1, w19, lsr #4
    2ca0:	and	w1, w1, w0
    2ca4:	lsl	w3, w1, #4
    2ca8:	add	x26, x2, x3
    2cac:	ldr	x3, [x2, x3]
    2cb0:	cmp	x19, x3
    2cb4:	b.eq	29b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa74>  // b.none
    2cb8:	mov	w4, #0x1                   	// #1
    2cbc:	mov	x5, #0x0                   	// #0
    2cc0:	cmn	x3, #0x8
    2cc4:	b.ne	2cf4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xdb4>  // b.any
    2cc8:	cbz	x5, 29b0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa70>
    2ccc:	mov	x26, x5
    2cd0:	b	29b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa74>
    2cd4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2cd8:	add	x3, x3, #0x0
    2cdc:	mov	w2, #0x250                 	// #592
    2ce0:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2ce4:	add	x1, x1, #0x0
    2ce8:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2cec:	add	x0, x0, #0x0
    2cf0:	bl	0 <__assert_fail>
    2cf4:	cmp	x5, #0x0
    2cf8:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    2cfc:	csel	x5, x5, x26, ne  // ne = any
    2d00:	add	w6, w4, #0x1
    2d04:	add	w4, w1, w4
    2d08:	and	w1, w0, w4
    2d0c:	and	w4, w0, w4
    2d10:	lsl	x3, x4, #4
    2d14:	add	x26, x2, x3
    2d18:	ldr	x3, [x2, x3]
    2d1c:	cmp	x19, x3
    2d20:	b.eq	29b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa74>  // b.none
    2d24:	mov	w4, w6
    2d28:	b	2cc0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd80>
    2d2c:	sub	w0, w0, #0x1
    2d30:	orr	x0, x0, x0, lsr #1
    2d34:	orr	x0, x0, x0, lsr #2
    2d38:	orr	x0, x0, x0, lsr #4
    2d3c:	orr	x0, x0, x0, lsr #8
    2d40:	orr	x0, x0, x0, lsr #16
    2d44:	add	x0, x0, #0x1
    2d48:	cmp	w0, #0x40
    2d4c:	mov	w1, #0x40                  	// #64
    2d50:	csel	w0, w0, w1, cs  // cs = hs, nlast
    2d54:	add	x26, x28, #0x50
    2d58:	str	w0, [x26, #24]
    2d5c:	ubfiz	x0, x0, #4, #32
    2d60:	bl	0 <_Znwm>
    2d64:	str	x0, [x26, #8]
    2d68:	cbz	x21, 2db8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe78>
    2d6c:	str	wzr, [x28, #96]
    2d70:	str	wzr, [x28, #100]
    2d74:	ldr	w1, [x28, #104]
    2d78:	sub	w2, w1, #0x1
    2d7c:	tst	w2, w1
    2d80:	b.ne	2e14 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xed4>  // b.any
    2d84:	ubfiz	x1, x1, #4, #32
    2d88:	add	x1, x0, x1
    2d8c:	mov	x2, #0xfffffffffffffff8    	// #-8
    2d90:	cmp	x0, x1
    2d94:	b.eq	2da4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe64>  // b.none
    2d98:	str	x2, [x0], #16
    2d9c:	cmp	x1, x0
    2da0:	b.ne	2d98 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe58>  // b.any
    2da4:	cmp	x21, x24
    2da8:	b.eq	2e88 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf48>  // b.none
    2dac:	mov	x0, x21
    2db0:	mov	w9, #0x1                   	// #1
    2db4:	b	331c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x13dc>
    2db8:	str	wzr, [x26, #16]
    2dbc:	str	wzr, [x26, #20]
    2dc0:	ldr	w1, [x26, #24]
    2dc4:	sub	w2, w1, #0x1
    2dc8:	tst	w2, w1
    2dcc:	b.ne	2df4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xeb4>  // b.any
    2dd0:	ubfiz	x1, x1, #4, #32
    2dd4:	add	x1, x0, x1
    2dd8:	cmp	x0, x1
    2ddc:	b.eq	2e94 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf54>  // b.none
    2de0:	mov	x2, #0xfffffffffffffff8    	// #-8
    2de4:	str	x2, [x0], #16
    2de8:	cmp	x1, x0
    2dec:	b.ne	2de4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xea4>  // b.any
    2df0:	b	2e94 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf54>
    2df4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2df8:	add	x3, x3, #0x0
    2dfc:	mov	w2, #0x15b                 	// #347
    2e00:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2e04:	add	x1, x1, #0x0
    2e08:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2e0c:	add	x0, x0, #0x0
    2e10:	bl	0 <__assert_fail>
    2e14:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2e18:	add	x3, x3, #0x0
    2e1c:	mov	w2, #0x15b                 	// #347
    2e20:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2e24:	add	x1, x1, #0x0
    2e28:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2e2c:	add	x0, x0, #0x0
    2e30:	bl	0 <__assert_fail>
    2e34:	mov	w8, w9
    2e38:	mov	x4, #0x0                   	// #0
    2e3c:	cmn	x6, #0x8
    2e40:	b.ne	2e50 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf10>  // b.any
    2e44:	cmp	x4, #0x0
    2e48:	csel	x4, x4, x7, ne  // ne = any
    2e4c:	b	32f8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x13b8>
    2e50:	cmp	x4, #0x0
    2e54:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    2e58:	csel	x4, x4, x7, ne  // ne = any
    2e5c:	add	w10, w8, #0x1
    2e60:	add	w8, w3, w8
    2e64:	and	w3, w2, w8
    2e68:	and	w8, w2, w8
    2e6c:	lsl	x6, x8, #4
    2e70:	add	x7, x5, x6
    2e74:	ldr	x6, [x5, x6]
    2e78:	cmp	x1, x6
    2e7c:	b.eq	335c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x141c>  // b.none
    2e80:	mov	w8, w10
    2e84:	b	2e3c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xefc>
    2e88:	mov	x1, x22
    2e8c:	mov	x0, x21
    2e90:	bl	0 <_ZdlPvm>
    2e94:	ldr	w0, [x28, #104]
    2e98:	cbz	w0, 2f44 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1004>
    2e9c:	cmn	x19, #0x10
    2ea0:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    2ea4:	b.eq	2eec <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xfac>  // b.none
    2ea8:	ldr	x2, [x28, #88]
    2eac:	sub	w0, w0, #0x1
    2eb0:	lsr	w1, w19, #9
    2eb4:	eor	w1, w1, w19, lsr #4
    2eb8:	and	w1, w1, w0
    2ebc:	lsl	w3, w1, #4
    2ec0:	add	x26, x2, x3
    2ec4:	ldr	x3, [x2, x3]
    2ec8:	cmp	x19, x3
    2ecc:	b.eq	29b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa74>  // b.none
    2ed0:	mov	w4, #0x1                   	// #1
    2ed4:	mov	x5, #0x0                   	// #0
    2ed8:	cmn	x3, #0x8
    2edc:	b.ne	2f0c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xfcc>  // b.any
    2ee0:	cbz	x5, 29b0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa70>
    2ee4:	mov	x26, x5
    2ee8:	b	29b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa74>
    2eec:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2ef0:	add	x3, x3, #0x0
    2ef4:	mov	w2, #0x250                 	// #592
    2ef8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2efc:	add	x1, x1, #0x0
    2f00:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2f04:	add	x0, x0, #0x0
    2f08:	bl	0 <__assert_fail>
    2f0c:	cmp	x5, #0x0
    2f10:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    2f14:	csel	x5, x5, x26, ne  // ne = any
    2f18:	add	w6, w4, #0x1
    2f1c:	add	w4, w4, w1
    2f20:	and	w1, w0, w4
    2f24:	and	w4, w0, w4
    2f28:	lsl	x3, x4, #4
    2f2c:	add	x26, x2, x3
    2f30:	ldr	x3, [x2, x3]
    2f34:	cmp	x19, x3
    2f38:	b.eq	29b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa74>  // b.none
    2f3c:	mov	w4, w6
    2f40:	b	2ed8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf98>
    2f44:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2f48:	add	x3, x3, #0x0
    2f4c:	mov	w2, #0x22f                 	// #559
    2f50:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2f54:	add	x1, x1, #0x0
    2f58:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2f5c:	add	x0, x0, #0x0
    2f60:	bl	0 <__assert_fail>
    2f64:	mov	x3, #0x8                   	// #8
    2f68:	mov	x2, #0x0                   	// #0
    2f6c:	ldr	x1, [sp, #144]
    2f70:	ldr	x0, [sp, #136]
    2f74:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2f78:	b	2a4c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb0c>
    2f7c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2f80:	add	x3, x3, #0x0
    2f84:	mov	w2, #0x43                  	// #67
    2f88:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2f8c:	add	x1, x1, #0x0
    2f90:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    2f94:	add	x0, x0, #0x0
    2f98:	bl	0 <__assert_fail>
    2f9c:	ldr	x0, [sp, #184]
    2fa0:	ldr	x1, [sp, #96]
    2fa4:	cmp	x0, x1
    2fa8:	b.eq	209c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x15c>  // b.none
    2fac:	bl	0 <free>
    2fb0:	b	209c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x15c>
    2fb4:	ldp	x21, x22, [sp, #32]
    2fb8:	ldp	x23, x24, [sp, #48]
    2fbc:	ldp	x25, x26, [sp, #64]
    2fc0:	ldr	x0, [sp, #120]
    2fc4:	ldrb	w0, [x0, #16]
    2fc8:	cmp	w0, #0x17
    2fcc:	b.ls	306c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x112c>  // b.plast
    2fd0:	ldr	x1, [x28, #88]
    2fd4:	ldr	w0, [x28, #104]
    2fd8:	cbz	w0, 30d4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1194>
    2fdc:	ldr	x2, [sp, #120]
    2fe0:	cmn	x2, #0x10
    2fe4:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    2fe8:	b.eq	3098 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1158>  // b.none
    2fec:	sub	w5, w0, #0x1
    2ff0:	ldr	x6, [sp, #120]
    2ff4:	lsr	w2, w6, #9
    2ff8:	eor	w2, w2, w6, lsr #4
    2ffc:	and	w2, w2, w5
    3000:	lsl	w4, w2, #4
    3004:	add	x3, x1, x4
    3008:	ldr	x4, [x1, x4]
    300c:	cmp	x6, x4
    3010:	b.ne	30c4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1184>  // b.any
    3014:	ldr	x2, [x28, #80]
    3018:	ubfiz	x0, x0, #4, #32
    301c:	add	x0, x1, x0
    3020:	cbz	x3, 3154 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1214>
    3024:	ldr	x1, [x28, #80]
    3028:	cmp	x1, x2
    302c:	b.ne	3128 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11e8>  // b.any
    3030:	cmp	x3, x0
    3034:	b.ne	3160 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1220>  // b.any
    3038:	ldr	w0, [sp, #168]
    303c:	cbz	w0, 3224 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x12e4>
    3040:	stp	x21, x22, [sp, #32]
    3044:	stp	x23, x24, [sp, #48]
    3048:	stp	x25, x26, [sp, #64]
    304c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3050:	add	x3, x3, #0x0
    3054:	mov	w2, #0xca                  	// #202
    3058:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    305c:	add	x1, x1, #0x0
    3060:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3064:	add	x0, x0, #0x0
    3068:	bl	0 <__assert_fail>
    306c:	stp	x21, x22, [sp, #32]
    3070:	stp	x23, x24, [sp, #48]
    3074:	stp	x25, x26, [sp, #64]
    3078:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    307c:	add	x3, x3, #0x0
    3080:	mov	w2, #0x108                 	// #264
    3084:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3088:	add	x1, x1, #0x0
    308c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3090:	add	x0, x0, #0x0
    3094:	bl	0 <__assert_fail>
    3098:	stp	x21, x22, [sp, #32]
    309c:	stp	x23, x24, [sp, #48]
    30a0:	stp	x25, x26, [sp, #64]
    30a4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    30a8:	add	x3, x3, #0x0
    30ac:	mov	w2, #0x250                 	// #592
    30b0:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    30b4:	add	x1, x1, #0x0
    30b8:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    30bc:	add	x0, x0, #0x0
    30c0:	bl	0 <__assert_fail>
    30c4:	mov	w6, #0x1                   	// #1
    30c8:	mov	x7, #0x0                   	// #0
    30cc:	cmn	x4, #0x8
    30d0:	b.ne	30ec <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11ac>  // b.any
    30d4:	ubfiz	x0, x0, #4, #32
    30d8:	add	x3, x1, x0
    30dc:	ldr	x2, [x28, #80]
    30e0:	mov	x0, x3
    30e4:	cbnz	x3, 3024 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10e4>
    30e8:	b	3038 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10f8>
    30ec:	cmp	x7, #0x0
    30f0:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    30f4:	csel	x7, x7, x3, ne  // ne = any
    30f8:	add	w8, w6, #0x1
    30fc:	add	w6, w2, w6
    3100:	and	w2, w5, w6
    3104:	and	w6, w5, w6
    3108:	lsl	x4, x6, #4
    310c:	add	x3, x1, x4
    3110:	ldr	x4, [x1, x4]
    3114:	ldr	x6, [sp, #160]
    3118:	cmp	x6, x4
    311c:	b.eq	3014 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10d4>  // b.none
    3120:	mov	w6, w8
    3124:	b	30cc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x118c>
    3128:	stp	x21, x22, [sp, #32]
    312c:	stp	x23, x24, [sp, #48]
    3130:	stp	x25, x26, [sp, #64]
    3134:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3138:	add	x3, x3, #0x0
    313c:	mov	w2, #0x4c0                 	// #1216
    3140:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3144:	add	x1, x1, #0x0
    3148:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    314c:	add	x0, x0, #0x0
    3150:	bl	0 <__assert_fail>
    3154:	ldr	x0, [x28, #80]
    3158:	cmp	x2, x0
    315c:	b.ne	31ec <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x12ac>  // b.any
    3160:	ldr	w0, [x3, #8]
    3164:	ldr	x1, [x28, #112]
    3168:	add	x0, x0, x0, lsl #1
    316c:	add	x0, x1, x0, lsl #3
    3170:	ldr	w2, [x0, #12]
    3174:	ldr	w0, [sp, #168]
    3178:	cmp	w0, w2
    317c:	b.hi	3040 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1100>  // b.pmore
    3180:	ldr	w0, [sp, #168]
    3184:	cmp	w0, w2
    3188:	b.cs	3218 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x12d8>  // b.hs, b.nlast
    318c:	ldr	x1, [sp, #128]
    3190:	ldrb	w0, [x1, #8]
    3194:	ldr	w19, [sp, #172]
    3198:	str	w19, [sp, #168]
    319c:	cmp	w0, #0x10
    31a0:	b.eq	31c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1280>  // b.none
    31a4:	ldr	x1, [x1]
    31a8:	ldr	x0, [x28, #8]
    31ac:	bl	0 <_ZNK4llvm10DataLayout23getSmallestLegalIntTypeERNS_11LLVMContextEj>
    31b0:	str	w19, [sp, #168]
    31b4:	cbz	x0, 31c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1280>
    31b8:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    31bc:	str	w0, [sp, #168]
    31c0:	ldr	x0, [sp, #216]
    31c4:	add	x1, sp, #0xe8
    31c8:	cmp	x0, x1
    31cc:	b.eq	31d4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1294>  // b.none
    31d0:	bl	0 <free>
    31d4:	ldr	x0, [sp, #296]
    31d8:	add	x1, sp, #0x138
    31dc:	cmp	x0, x1
    31e0:	b.eq	1fa4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x64>  // b.none
    31e4:	bl	0 <free>
    31e8:	b	1fa4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x64>
    31ec:	stp	x21, x22, [sp, #32]
    31f0:	stp	x23, x24, [sp, #48]
    31f4:	stp	x25, x26, [sp, #64]
    31f8:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    31fc:	add	x3, x3, #0x0
    3200:	mov	w2, #0x4b9                 	// #1209
    3204:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3208:	add	x1, x1, #0x0
    320c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3210:	add	x0, x0, #0x0
    3214:	bl	0 <__assert_fail>
    3218:	str	w2, [sp, #168]
    321c:	cmp	w2, #0x1
    3220:	b.eq	31c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1280>  // b.none
    3224:	ldr	x1, [x28, #8]
    3228:	ldr	x0, [x1, #32]
    322c:	ldr	w2, [x1, #40]
    3230:	add	x2, x0, x2
    3234:	cmp	x0, x2
    3238:	b.eq	3264 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1324>  // b.none
    323c:	mov	x1, x0
    3240:	ldr	w4, [sp, #172]
    3244:	ldrb	w3, [x1]
    3248:	cmp	w4, w3
    324c:	b.eq	348c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x154c>  // b.none
    3250:	add	x1, x1, #0x1
    3254:	cmp	x2, x1
    3258:	b.ne	3244 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1304>  // b.any
    325c:	mov	w3, #0x0                   	// #0
    3260:	b	3490 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1550>
    3264:	mov	w3, #0x0                   	// #0
    3268:	b	34ac <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x156c>
    326c:	mov	x4, #0x0                   	// #0
    3270:	str	x1, [x4]
    3274:	ldr	w1, [x0, #8]
    3278:	str	w1, [x4, #8]
    327c:	ldr	w1, [x28, #96]
    3280:	add	w1, w1, #0x1
    3284:	str	w1, [x28, #96]
    3288:	add	x0, x0, #0x10
    328c:	cmp	x24, x0
    3290:	b.eq	2c70 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd30>  // b.none
    3294:	ldr	x1, [x0]
    3298:	cmn	x1, #0x10
    329c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    32a0:	b.eq	3288 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1348>  // b.none
    32a4:	ldr	w2, [x28, #104]
    32a8:	cbz	w2, 326c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x132c>
    32ac:	ldr	x5, [x28, #88]
    32b0:	sub	w2, w2, #0x1
    32b4:	lsr	w3, w1, #9
    32b8:	eor	w3, w3, w1, lsr #4
    32bc:	and	w3, w3, w2
    32c0:	lsl	w4, w3, #4
    32c4:	add	x7, x5, x4
    32c8:	ldr	x6, [x5, x4]
    32cc:	cmp	x1, x6
    32d0:	b.ne	2c1c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xcdc>  // b.any
    32d4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    32d8:	add	x3, x3, #0x0
    32dc:	mov	w2, #0x17a                 	// #378
    32e0:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    32e4:	add	x1, x1, #0x0
    32e8:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    32ec:	add	x0, x0, #0x0
    32f0:	bl	0 <__assert_fail>
    32f4:	mov	x4, #0x0                   	// #0
    32f8:	str	x1, [x4]
    32fc:	ldr	w1, [x0, #8]
    3300:	str	w1, [x4, #8]
    3304:	ldr	w1, [x28, #96]
    3308:	add	w1, w1, #0x1
    330c:	str	w1, [x28, #96]
    3310:	add	x0, x0, #0x10
    3314:	cmp	x24, x0
    3318:	b.eq	2e88 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf48>  // b.none
    331c:	ldr	x1, [x0]
    3320:	cmn	x1, #0x10
    3324:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    3328:	b.eq	3310 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x13d0>  // b.none
    332c:	ldr	w2, [x28, #104]
    3330:	cbz	w2, 32f4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x13b4>
    3334:	ldr	x5, [x28, #88]
    3338:	sub	w2, w2, #0x1
    333c:	lsr	w3, w1, #9
    3340:	eor	w3, w3, w1, lsr #4
    3344:	and	w3, w3, w2
    3348:	lsl	w4, w3, #4
    334c:	add	x7, x5, x4
    3350:	ldr	x6, [x5, x4]
    3354:	cmp	x6, x1
    3358:	b.ne	2e34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xef4>  // b.any
    335c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3360:	add	x3, x3, #0x0
    3364:	mov	w2, #0x17a                 	// #378
    3368:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    336c:	add	x1, x1, #0x0
    3370:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3374:	add	x0, x0, #0x0
    3378:	bl	0 <__assert_fail>
    337c:	mov	x6, #0x0                   	// #0
    3380:	str	x2, [x6]
    3384:	ldr	w2, [x0, #8]
    3388:	str	w2, [x6, #8]
    338c:	ldr	w2, [x28, #96]
    3390:	add	w2, w2, #0x1
    3394:	str	w2, [x28, #96]
    3398:	add	x0, x0, #0x10
    339c:	cmp	x5, x0
    33a0:	b.eq	23f8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4b8>  // b.none
    33a4:	ldr	x2, [x0]
    33a8:	cmn	x2, #0x8
    33ac:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    33b0:	b.eq	3398 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1458>  // b.none
    33b4:	ldr	w3, [x28, #104]
    33b8:	cbz	w3, 337c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x143c>
    33bc:	ldr	x7, [x28, #88]
    33c0:	sub	w3, w3, #0x1
    33c4:	lsr	w4, w2, #9
    33c8:	eor	w4, w4, w2, lsr #4
    33cc:	and	w4, w4, w3
    33d0:	lsl	w6, w4, #4
    33d4:	add	x9, x7, x6
    33d8:	ldr	x8, [x7, x6]
    33dc:	cmp	x2, x8
    33e0:	b.ne	23a4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x464>  // b.any
    33e4:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    33e8:	add	x3, x3, #0x0
    33ec:	mov	w2, #0x17a                 	// #378
    33f0:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    33f4:	add	x1, x1, #0x0
    33f8:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    33fc:	add	x0, x0, #0x0
    3400:	bl	0 <__assert_fail>
    3404:	mov	x6, #0x0                   	// #0
    3408:	str	x2, [x6]
    340c:	ldr	w2, [x0, #8]
    3410:	str	w2, [x6, #8]
    3414:	ldr	w2, [x28, #96]
    3418:	add	w2, w2, #0x1
    341c:	str	w2, [x28, #96]
    3420:	add	x0, x0, #0x10
    3424:	cmp	x5, x0
    3428:	b.eq	2614 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6d4>  // b.none
    342c:	ldr	x2, [x0]
    3430:	cmn	x2, #0x10
    3434:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    3438:	b.eq	3420 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x14e0>  // b.none
    343c:	ldr	w3, [x28, #104]
    3440:	cbz	w3, 3404 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x14c4>
    3444:	ldr	x7, [x28, #88]
    3448:	sub	w3, w3, #0x1
    344c:	lsr	w4, w2, #9
    3450:	eor	w4, w4, w2, lsr #4
    3454:	and	w4, w4, w3
    3458:	lsl	w6, w4, #4
    345c:	add	x9, x7, x6
    3460:	ldr	x8, [x7, x6]
    3464:	cmp	x8, x2
    3468:	b.ne	25c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x680>  // b.any
    346c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3470:	add	x3, x3, #0x0
    3474:	mov	w2, #0x17a                 	// #378
    3478:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    347c:	add	x1, x1, #0x0
    3480:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3484:	add	x0, x0, #0x0
    3488:	bl	0 <__assert_fail>
    348c:	mov	w3, #0x1                   	// #1
    3490:	ldr	w4, [sp, #168]
    3494:	ldrb	w1, [x0]
    3498:	cmp	w4, w1
    349c:	b.eq	31c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1280>  // b.none
    34a0:	add	x0, x0, #0x1
    34a4:	cmp	x2, x0
    34a8:	b.ne	3494 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1554>  // b.any
    34ac:	ldr	x0, [sp, #128]
    34b0:	ldrb	w0, [x0, #8]
    34b4:	cmp	w0, #0x10
    34b8:	b.eq	31c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1280>  // b.none
    34bc:	cmp	w3, #0x0
    34c0:	ldr	w0, [sp, #168]
    34c4:	ldr	w1, [sp, #172]
    34c8:	csel	w0, w0, w1, eq  // eq = none
    34cc:	str	w0, [sp, #168]
    34d0:	b	31c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1280>
    34d4:	add	x3, x3, #0x1
    34d8:	str	x3, [x28, #80]
    34dc:	lsl	w0, w0, #1
    34e0:	sub	w0, w0, #0x1
    34e4:	orr	x0, x0, x0, lsr #1
    34e8:	orr	x0, x0, x0, lsr #2
    34ec:	orr	x0, x0, x0, lsr #4
    34f0:	orr	x0, x0, x0, lsr #8
    34f4:	orr	x0, x0, x0, lsr #16
    34f8:	add	x0, x0, #0x1
    34fc:	cmp	w0, #0x40
    3500:	mov	w1, #0x40                  	// #64
    3504:	csel	w0, w0, w1, cs  // cs = hs, nlast
    3508:	add	x26, x28, #0x50
    350c:	str	w0, [x26, #24]
    3510:	ubfiz	x0, x0, #4, #32
    3514:	bl	0 <_Znwm>
    3518:	str	x0, [x26, #8]
    351c:	cbz	x21, 2ba0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc60>
    3520:	str	wzr, [x28, #96]
    3524:	str	wzr, [x28, #100]
    3528:	ldr	w1, [x28, #104]
    352c:	sub	w2, w1, #0x1
    3530:	tst	w2, w1
    3534:	b.ne	2bfc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xcbc>  // b.any
    3538:	ubfiz	x1, x1, #4, #32
    353c:	add	x1, x0, x1
    3540:	mov	x2, #0xfffffffffffffff8    	// #-8
    3544:	cmp	x0, x1
    3548:	b.eq	3558 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1618>  // b.none
    354c:	str	x2, [x0], #16
    3550:	cmp	x1, x0
    3554:	b.ne	354c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x160c>  // b.any
    3558:	cmp	x21, x24
    355c:	b.eq	2c70 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd30>  // b.none
    3560:	mov	x0, x21
    3564:	mov	w9, #0x1                   	// #1
    3568:	b	3294 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1354>
    356c:	ldr	x0, [x28, #80]
    3570:	add	x0, x0, #0x1
    3574:	str	x0, [x28, #80]
    3578:	lsl	w0, w21, #1
    357c:	sub	w0, w0, #0x1
    3580:	orr	x0, x0, x0, lsr #1
    3584:	orr	x0, x0, x0, lsr #2
    3588:	orr	x0, x0, x0, lsr #4
    358c:	orr	x0, x0, x0, lsr #8
    3590:	orr	x0, x0, x0, lsr #16
    3594:	add	x0, x0, #0x1
    3598:	cmp	w0, #0x40
    359c:	mov	w1, #0x40                  	// #64
    35a0:	csel	w0, w0, w1, cs  // cs = hs, nlast
    35a4:	add	x20, x28, #0x50
    35a8:	str	w0, [x20, #24]
    35ac:	ubfiz	x0, x0, #4, #32
    35b0:	bl	0 <_Znwm>
    35b4:	str	x0, [x20, #8]
    35b8:	cbz	x22, 2328 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3e8>
    35bc:	ubfiz	x1, x21, #4, #32
    35c0:	add	x5, x22, x1
    35c4:	str	wzr, [x28, #96]
    35c8:	str	wzr, [x28, #100]
    35cc:	ldr	w2, [x28, #104]
    35d0:	sub	w3, w2, #0x1
    35d4:	tst	w3, w2
    35d8:	b.ne	2384 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x444>  // b.any
    35dc:	ubfiz	x2, x2, #4, #32
    35e0:	add	x2, x0, x2
    35e4:	mov	x3, #0xfffffffffffffff8    	// #-8
    35e8:	cmp	x0, x2
    35ec:	b.eq	35fc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x16bc>  // b.none
    35f0:	str	x3, [x0], #16
    35f4:	cmp	x2, x0
    35f8:	b.ne	35f0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x16b0>  // b.any
    35fc:	cmp	x22, x5
    3600:	b.eq	23f8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4b8>  // b.none
    3604:	mov	x0, x22
    3608:	mov	w11, #0x1                   	// #1
    360c:	b	33a4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1464>

0000000000003610 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv>:
    3610:	stp	x29, x30, [sp, #-96]!
    3614:	mov	x29, sp
    3618:	stp	x19, x20, [sp, #16]
    361c:	mov	x20, x0
    3620:	bl	10d0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv>
    3624:	and	w0, w0, #0xff
    3628:	cbz	w0, 3910 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x300>
    362c:	stp	x21, x22, [sp, #32]
    3630:	stp	x23, x24, [sp, #48]
    3634:	stp	x25, x26, [sp, #64]
    3638:	ldr	x24, [x20, #112]
    363c:	ldr	x26, [x20, #120]
    3640:	cmp	x24, x26
    3644:	b.eq	3930 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x320>  // b.none
    3648:	str	x27, [sp, #80]
    364c:	mov	w22, #0x0                   	// #0
    3650:	mov	w27, #0x1                   	// #1
    3654:	b	3874 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x264>
    3658:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    365c:	add	x3, x3, #0x0
    3660:	mov	w2, #0x69                  	// #105
    3664:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3668:	add	x1, x1, #0x0
    366c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3670:	add	x0, x0, #0x0
    3674:	bl	0 <__assert_fail>
    3678:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    367c:	add	x3, x3, #0x0
    3680:	mov	w2, #0x250                 	// #592
    3684:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3688:	add	x1, x1, #0x0
    368c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3690:	add	x0, x0, #0x0
    3694:	bl	0 <__assert_fail>
    3698:	mov	w7, w27
    369c:	mov	x8, #0x0                   	// #0
    36a0:	cmn	x5, #0x8
    36a4:	b.ne	36c4 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xb4>  // b.any
    36a8:	ubfiz	x1, x1, #4, #32
    36ac:	add	x4, x2, x1
    36b0:	add	x0, x20, #0x50
    36b4:	ldr	x3, [x20, #80]
    36b8:	mov	x1, x4
    36bc:	cbnz	x4, 3804 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x1f4>
    36c0:	b	381c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x20c>
    36c4:	cmp	x8, #0x0
    36c8:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    36cc:	csel	x8, x8, x4, ne  // ne = any
    36d0:	add	w9, w7, #0x1
    36d4:	add	w7, w7, w3
    36d8:	and	w3, w6, w7
    36dc:	and	w7, w6, w7
    36e0:	lsl	x5, x7, #4
    36e4:	add	x4, x2, x5
    36e8:	ldr	x5, [x2, x5]
    36ec:	cmp	x0, x5
    36f0:	b.eq	37f0 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x1e0>  // b.none
    36f4:	mov	w7, w9
    36f8:	b	36a0 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x90>
    36fc:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3700:	add	x3, x3, #0x0
    3704:	mov	w2, #0x4c0                 	// #1216
    3708:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    370c:	add	x1, x1, #0x0
    3710:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3714:	add	x0, x0, #0x0
    3718:	bl	0 <__assert_fail>
    371c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3720:	add	x3, x3, #0x0
    3724:	mov	w2, #0x4c2                 	// #1218
    3728:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    372c:	add	x1, x1, #0x0
    3730:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3734:	add	x0, x0, #0x0
    3738:	bl	0 <__assert_fail>
    373c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3740:	add	x3, x3, #0x0
    3744:	mov	w2, #0xaa                  	// #170
    3748:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    374c:	add	x1, x1, #0x0
    3750:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3754:	add	x0, x0, #0x0
    3758:	bl	0 <__assert_fail>
    375c:	mov	w1, w0
    3760:	ubfiz	x0, x0, #1, #28
    3764:	add	x0, x0, x1
    3768:	sub	x0, x25, x0, lsl #3
    376c:	ldr	x0, [x0]
    3770:	ldr	x0, [x0]
    3774:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    3778:	cmp	w22, #0x0
    377c:	ccmp	w0, w22, #0x4, ne  // ne = any
    3780:	b.ne	3848 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x238>  // b.any
    3784:	mov	w22, w0
    3788:	ldr	x19, [x19, #8]
    378c:	cbz	x19, 3868 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x258>
    3790:	mov	x0, x19
    3794:	bl	0 <_ZNK4llvm3Use7getUserEv>
    3798:	cbz	x0, 3658 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x48>
    379c:	ldrb	w1, [x0, #16]
    37a0:	cmp	w1, #0x17
    37a4:	b.ls	3788 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x178>  // b.plast
    37a8:	ldr	x1, [x20, #72]
    37ac:	cmp	x1, x0
    37b0:	b.eq	3788 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x178>  // b.none
    37b4:	ldr	x2, [x20, #88]
    37b8:	ldr	w1, [x20, #104]
    37bc:	cbz	w1, 36a8 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x98>
    37c0:	cmn	x0, #0x10
    37c4:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    37c8:	b.eq	3678 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x68>  // b.none
    37cc:	sub	w6, w1, #0x1
    37d0:	lsr	w3, w0, #9
    37d4:	eor	w3, w3, w0, lsr #4
    37d8:	and	w3, w3, w6
    37dc:	lsl	w5, w3, #4
    37e0:	add	x4, x2, x5
    37e4:	ldr	x5, [x2, x5]
    37e8:	cmp	x0, x5
    37ec:	b.ne	3698 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x88>  // b.any
    37f0:	add	x0, x20, #0x50
    37f4:	ldr	x3, [x20, #80]
    37f8:	ubfiz	x1, x1, #4, #32
    37fc:	add	x1, x2, x1
    3800:	cbz	x4, 3788 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x178>
    3804:	ldr	x2, [x0]
    3808:	cmp	x2, x3
    380c:	b.ne	36fc <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xec>  // b.any
    3810:	add	x2, x20, #0x50
    3814:	cmp	x0, x2
    3818:	b.ne	371c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x10c>  // b.any
    381c:	cmp	x4, x1
    3820:	b.ne	3788 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x178>  // b.any
    3824:	cmp	w23, #0x1
    3828:	b.hi	3848 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x238>  // b.pmore
    382c:	ldr	w0, [x21, #20]
    3830:	ubfx	x0, x0, #0, #28
    3834:	cbz	w0, 373c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x12c>
    3838:	ldrb	w1, [x21, #23]
    383c:	tbz	w1, #6, 375c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x14c>
    3840:	ldur	x0, [x21, #-8]
    3844:	b	376c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>
    3848:	mov	x0, #0x0                   	// #0
    384c:	ldp	x21, x22, [sp, #32]
    3850:	ldp	x23, x24, [sp, #48]
    3854:	ldp	x25, x26, [sp, #64]
    3858:	ldr	x27, [sp, #80]
    385c:	ldp	x19, x20, [sp, #16]
    3860:	ldp	x29, x30, [sp], #96
    3864:	ret
    3868:	add	x24, x24, #0x18
    386c:	cmp	x26, x24
    3870:	b.eq	38b4 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x2a4>  // b.none
    3874:	ldr	x21, [x24]
    3878:	mov	x25, x21
    387c:	mov	x0, x21
    3880:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3884:	ldr	x0, [x21, #8]
    3888:	cbz	x0, 3894 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x284>
    388c:	ldr	x0, [x0, #8]
    3890:	cbz	x0, 3868 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x258>
    3894:	ldrb	w23, [x21, #16]
    3898:	sub	w23, w23, #0x3f
    389c:	and	w23, w23, #0xff
    38a0:	mov	x0, x21
    38a4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    38a8:	ldr	x19, [x21, #8]
    38ac:	cbnz	x19, 3790 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x180>
    38b0:	b	3868 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x258>
    38b4:	ldr	x0, [x20, #72]
    38b8:	ldur	x0, [x0, #-24]
    38bc:	ldr	x0, [x0]
    38c0:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    38c4:	mov	w21, w0
    38c8:	mov	x0, x20
    38cc:	bl	1f40 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>
    38d0:	mov	w19, w0
    38d4:	cmp	w21, w0
    38d8:	b.ls	3918 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x308>  // b.plast
    38dc:	cmp	w22, #0x0
    38e0:	mov	x0, #0x0                   	// #0
    38e4:	ccmp	w22, w19, #0x4, ne  // ne = any
    38e8:	b.ne	396c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x35c>  // b.any
    38ec:	ldr	x27, [sp, #80]
    38f0:	ldr	x0, [x20, #72]
    38f4:	bl	0 <_ZNK4llvm5Value10getContextEv>
    38f8:	mov	w1, w19
    38fc:	bl	0 <_ZN4llvm11IntegerType3getERNS_11LLVMContextEj>
    3900:	ldp	x21, x22, [sp, #32]
    3904:	ldp	x23, x24, [sp, #48]
    3908:	ldp	x25, x26, [sp, #64]
    390c:	b	385c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x24c>
    3910:	mov	x0, #0x0                   	// #0
    3914:	b	385c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x24c>
    3918:	mov	x0, #0x0                   	// #0
    391c:	ldp	x21, x22, [sp, #32]
    3920:	ldp	x23, x24, [sp, #48]
    3924:	ldp	x25, x26, [sp, #64]
    3928:	ldr	x27, [sp, #80]
    392c:	b	385c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x24c>
    3930:	ldr	x0, [x20, #72]
    3934:	ldur	x0, [x0, #-24]
    3938:	ldr	x0, [x0]
    393c:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    3940:	mov	w21, w0
    3944:	mov	x0, x20
    3948:	bl	1f40 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>
    394c:	mov	w19, w0
    3950:	cmp	w21, w0
    3954:	b.hi	38f0 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x2e0>  // b.pmore
    3958:	mov	x0, #0x0                   	// #0
    395c:	ldp	x21, x22, [sp, #32]
    3960:	ldp	x23, x24, [sp, #48]
    3964:	ldp	x25, x26, [sp, #64]
    3968:	b	385c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x24c>
    396c:	ldp	x21, x22, [sp, #32]
    3970:	ldp	x23, x24, [sp, #48]
    3974:	ldp	x25, x26, [sp, #64]
    3978:	ldr	x27, [sp, #80]
    397c:	b	385c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x24c>

0000000000003980 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE>:
    3980:	stp	x29, x30, [sp, #-80]!
    3984:	mov	x29, sp
    3988:	stp	x19, x20, [sp, #16]
    398c:	stp	x21, x22, [sp, #32]
    3990:	stp	x23, x24, [sp, #48]
    3994:	mov	x19, x0
    3998:	ldr	x21, [x1, #80]
    399c:	add	x23, x1, #0x48
    39a0:	cmp	x23, x21
    39a4:	b.eq	3bd0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x250>  // b.none
    39a8:	stp	x25, x26, [sp, #64]
    39ac:	mov	x26, #0x8                   	// #8
    39b0:	add	x25, x0, #0x28
    39b4:	add	x24, x0, #0x18
    39b8:	b	3a30 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xb0>
    39bc:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    39c0:	add	x3, x3, #0x0
    39c4:	mov	w2, #0x8b                  	// #139
    39c8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    39cc:	add	x1, x1, #0x0
    39d0:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    39d4:	add	x0, x0, #0x0
    39d8:	bl	0 <__assert_fail>
    39dc:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    39e0:	add	x3, x3, #0x0
    39e4:	mov	w2, #0x250                 	// #592
    39e8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    39ec:	add	x1, x1, #0x0
    39f0:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    39f4:	add	x0, x0, #0x0
    39f8:	bl	0 <__assert_fail>
    39fc:	mov	w8, #0x1                   	// #1
    3a00:	mov	x9, #0x0                   	// #0
    3a04:	cmn	x6, #0x8
    3a08:	b.ne	3ad0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x150>  // b.any
    3a0c:	ubfiz	x1, x1, #4, #32
    3a10:	add	x3, x2, x1
    3a14:	add	x4, x0, #0x18
    3a18:	ldr	x5, [x0, #24]
    3a1c:	mov	x1, x3
    3a20:	cbnz	x3, 3a94 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x114>
    3a24:	ldr	x21, [x21, #8]
    3a28:	cmp	x23, x21
    3a2c:	b.eq	3bcc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x24c>  // b.none
    3a30:	ldr	x0, [x21]
    3a34:	tst	w0, #0x4
    3a38:	b.ne	39bc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x3c>  // b.any
    3a3c:	ldr	x0, [x19, #16]
    3a40:	ldr	x2, [x0, #32]
    3a44:	ldr	w1, [x0, #48]
    3a48:	cbz	w1, 3a0c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x8c>
    3a4c:	sub	x5, x21, #0x18
    3a50:	cmp	x21, #0x8
    3a54:	ccmn	x5, #0x8, #0x4, ne  // ne = any
    3a58:	b.eq	39dc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x5c>  // b.none
    3a5c:	sub	w7, w1, #0x1
    3a60:	lsr	w4, w5, #9
    3a64:	eor	w4, w4, w5, lsr #4
    3a68:	and	w4, w4, w7
    3a6c:	lsl	w6, w4, #4
    3a70:	add	x3, x2, x6
    3a74:	ldr	x6, [x2, x6]
    3a78:	cmp	x5, x6
    3a7c:	b.ne	39fc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x7c>  // b.any
    3a80:	add	x4, x0, #0x18
    3a84:	ldr	x5, [x0, #24]
    3a88:	ubfiz	x1, x1, #4, #32
    3a8c:	add	x1, x2, x1
    3a90:	cbz	x3, 3b48 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1c8>
    3a94:	ldr	x2, [x4]
    3a98:	cmp	x2, x5
    3a9c:	b.ne	3b08 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x188>  // b.any
    3aa0:	add	x0, x0, #0x18
    3aa4:	cmp	x4, x0
    3aa8:	b.ne	3b28 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1a8>  // b.any
    3aac:	cmp	x1, x3
    3ab0:	b.eq	3a24 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xa4>  // b.none
    3ab4:	ldr	x0, [x3, #8]
    3ab8:	cbz	x0, 3a24 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xa4>
    3abc:	ldr	x20, [x21, #24]
    3ac0:	add	x22, x21, #0x10
    3ac4:	cmp	x22, x20
    3ac8:	b.ne	3d64 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x3e4>  // b.any
    3acc:	b	3a24 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xa4>
    3ad0:	cmp	x9, #0x0
    3ad4:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    3ad8:	csel	x9, x9, x3, ne  // ne = any
    3adc:	add	w10, w8, #0x1
    3ae0:	add	w8, w4, w8
    3ae4:	and	w4, w7, w8
    3ae8:	and	w8, w7, w8
    3aec:	lsl	x6, x8, #4
    3af0:	add	x3, x2, x6
    3af4:	ldr	x6, [x2, x6]
    3af8:	cmp	x5, x6
    3afc:	b.eq	3a80 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x100>  // b.none
    3b00:	mov	w8, w10
    3b04:	b	3a04 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x84>
    3b08:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b0c:	add	x3, x3, #0x0
    3b10:	mov	w2, #0x4c7                 	// #1223
    3b14:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b18:	add	x1, x1, #0x0
    3b1c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b20:	add	x0, x0, #0x0
    3b24:	bl	0 <__assert_fail>
    3b28:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b2c:	add	x3, x3, #0x0
    3b30:	mov	w2, #0x4c9                 	// #1225
    3b34:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b38:	add	x1, x1, #0x0
    3b3c:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b40:	add	x0, x0, #0x0
    3b44:	bl	0 <__assert_fail>
    3b48:	ldr	x0, [x4]
    3b4c:	cmp	x0, x5
    3b50:	b.eq	3ab4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x134>  // b.none
    3b54:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b58:	add	x3, x3, #0x0
    3b5c:	mov	w2, #0x4b9                 	// #1209
    3b60:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b64:	add	x1, x1, #0x0
    3b68:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b6c:	add	x0, x0, #0x0
    3b70:	bl	0 <__assert_fail>
    3b74:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b78:	add	x3, x3, #0x0
    3b7c:	mov	w2, #0x8b                  	// #139
    3b80:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b84:	add	x1, x1, #0x0
    3b88:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3b8c:	add	x0, x0, #0x0
    3b90:	bl	0 <__assert_fail>
    3b94:	mov	x3, x26
    3b98:	mov	x2, #0x0                   	// #0
    3b9c:	mov	x1, x25
    3ba0:	mov	x0, x24
    3ba4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3ba8:	b	3d28 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x3a8>
    3bac:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3bb0:	add	x3, x3, #0x0
    3bb4:	mov	w2, #0x43                  	// #67
    3bb8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3bbc:	add	x1, x1, #0x0
    3bc0:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3bc4:	add	x0, x0, #0x0
    3bc8:	bl	0 <__assert_fail>
    3bcc:	ldp	x25, x26, [sp, #64]
    3bd0:	mov	w22, #0x0                   	// #0
    3bd4:	adrp	x20, 0 <_ZN4llvm9DebugFlagE>
    3bd8:	ldr	x20, [x20]
    3bdc:	adrp	x21, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3be0:	add	x21, x21, #0x0
    3be4:	mov	w23, #0xa                   	// #10
    3be8:	ldr	w0, [x19, #32]
    3bec:	cbz	w0, 3d80 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x400>
    3bf0:	mov	w1, w0
    3bf4:	ldr	x2, [x19, #24]
    3bf8:	add	x2, x2, w0, uxtw #3
    3bfc:	ldur	x2, [x2, #-8]
    3c00:	sub	x1, x1, #0x1
    3c04:	ldr	w3, [x19, #36]
    3c08:	cmp	x1, x3
    3c0c:	b.hi	3c48 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2c8>  // b.pmore
    3c10:	sub	w0, w0, #0x1
    3c14:	str	w0, [x19, #32]
    3c18:	str	x2, [x19, #72]
    3c1c:	mov	x0, x19
    3c20:	bl	3610 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv>
    3c24:	mov	x24, x0
    3c28:	cbz	x0, 3be8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x268>
    3c2c:	ldrb	w0, [x20]
    3c30:	cbnz	w0, 3c6c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2ec>
    3c34:	mov	x1, x24
    3c38:	mov	x0, x19
    3c3c:	bl	4c8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE>
    3c40:	mov	w22, #0x1                   	// #1
    3c44:	b	3be8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x268>
    3c48:	stp	x25, x26, [sp, #64]
    3c4c:	adrp	x3, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3c50:	add	x3, x3, #0x0
    3c54:	mov	w2, #0x43                  	// #67
    3c58:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3c5c:	add	x1, x1, #0x0
    3c60:	adrp	x0, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3c64:	add	x0, x0, #0x0
    3c68:	bl	0 <__assert_fail>
    3c6c:	mov	x0, x21
    3c70:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    3c74:	and	w0, w0, #0xff
    3c78:	cbz	w0, 3c34 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2b4>
    3c7c:	bl	0 <_ZN4llvm4dbgsEv>
    3c80:	ldr	x1, [x0, #24]
    3c84:	ldr	x2, [x0, #16]
    3c88:	sub	x2, x2, x1
    3c8c:	cmp	x2, #0x43
    3c90:	b.ls	3cd4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x354>  // b.plast
    3c94:	adrp	x2, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3c98:	add	x2, x2, #0x0
    3c9c:	ldp	x4, x5, [x2]
    3ca0:	stp	x4, x5, [x1]
    3ca4:	ldp	x4, x5, [x2, #16]
    3ca8:	stp	x4, x5, [x1, #16]
    3cac:	ldp	x4, x5, [x2, #32]
    3cb0:	stp	x4, x5, [x1, #32]
    3cb4:	ldp	x4, x5, [x2, #48]
    3cb8:	stp	x4, x5, [x1, #48]
    3cbc:	ldr	w2, [x2, #64]
    3cc0:	str	w2, [x1, #64]
    3cc4:	ldr	x1, [x0, #24]
    3cc8:	add	x1, x1, #0x44
    3ccc:	str	x1, [x0, #24]
    3cd0:	b	3ce4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x364>
    3cd4:	mov	x2, #0x44                  	// #68
    3cd8:	adrp	x1, 0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
    3cdc:	add	x1, x1, #0x0
    3ce0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3ce4:	ldr	x1, [x19, #72]
    3ce8:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    3cec:	ldr	x1, [x0, #24]
    3cf0:	ldr	x2, [x0, #16]
    3cf4:	cmp	x1, x2
    3cf8:	b.cs	3d0c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x38c>  // b.hs, b.nlast
    3cfc:	add	x2, x1, #0x1
    3d00:	str	x2, [x0, #24]
    3d04:	strb	w23, [x1]
    3d08:	b	3c34 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2b4>
    3d0c:	mov	w1, w23
    3d10:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3d14:	b	3c34 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2b4>
    3d18:	ldr	w1, [x19, #32]
    3d1c:	ldr	w0, [x19, #36]
    3d20:	cmp	w1, w0
    3d24:	b.cs	3b94 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x214>  // b.hs, b.nlast
    3d28:	ldr	w1, [x19, #32]
    3d2c:	ldr	x0, [x19, #24]
    3d30:	sub	x2, x20, #0x18
    3d34:	str	x2, [x0, x1, lsl #3]
    3d38:	ldr	w0, [x19, #32]
    3d3c:	mov	w1, w0
    3d40:	add	x1, x1, #0x1
    3d44:	ldr	w2, [x19, #36]
    3d48:	cmp	x1, x2
    3d4c:	b.hi	3bac <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x22c>  // b.pmore
    3d50:	add	w0, w0, #0x1
    3d54:	str	w0, [x19, #32]
    3d58:	ldr	x20, [x20, #8]
    3d5c:	cmp	x22, x20
    3d60:	b.eq	3a24 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xa4>  // b.none
    3d64:	ldr	x0, [x20]
    3d68:	tst	w0, #0x4
    3d6c:	b.ne	3b74 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1f4>  // b.any
    3d70:	ldurb	w0, [x20, #-8]
    3d74:	cmp	w0, #0x3e
    3d78:	b.ne	3d58 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x3d8>  // b.any
    3d7c:	b	3d18 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x398>
    3d80:	mov	w0, w22
    3d84:	ldp	x19, x20, [sp, #16]
    3d88:	ldp	x21, x22, [sp, #32]
    3d8c:	ldp	x23, x24, [sp, #48]
    3d90:	ldp	x29, x30, [sp], #80
    3d94:	ret

Disassembly of section .text._ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_:

0000000000000000 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_>:
   0:	ldr	x4, [x0]
   4:	ldr	w0, [x0, #8]
   8:	lsl	x6, x0, #3
   c:	lsr	x3, x0, #2
  10:	cmp	xzr, x0, lsr #2
  14:	b.eq	a0 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0xa0>  // b.none
  18:	ldr	x2, [x1]
  1c:	add	x3, x4, x3, lsl #5
  20:	mov	x0, x4
  24:	ldr	x5, [x0]
  28:	cmp	x5, x2
  2c:	b.eq	8c <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x8c>  // b.none
  30:	ldr	x5, [x0, #8]
  34:	cmp	x2, x5
  38:	b.eq	88 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x88>  // b.none
  3c:	ldr	x5, [x0, #16]
  40:	cmp	x2, x5
  44:	b.eq	90 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x90>  // b.none
  48:	ldr	x5, [x0, #24]
  4c:	cmp	x2, x5
  50:	b.eq	98 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x98>  // b.none
  54:	add	x0, x0, #0x20
  58:	cmp	x0, x3
  5c:	b.ne	24 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x24>  // b.any
  60:	mov	x2, x0
  64:	add	x0, x4, x6
  68:	sub	x3, x0, x2
  6c:	cmp	x3, #0x10
  70:	b.eq	bc <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0xbc>  // b.none
  74:	cmp	x3, #0x18
  78:	b.eq	a8 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0xa8>  // b.none
  7c:	cmp	x3, #0x8
  80:	b.ne	8c <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x8c>  // b.any
  84:	b	d0 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0xd0>
  88:	add	x0, x0, #0x8
  8c:	ret
  90:	add	x0, x0, #0x10
  94:	b	8c <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x8c>
  98:	add	x0, x0, #0x18
  9c:	b	8c <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x8c>
  a0:	mov	x2, x4
  a4:	b	64 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x64>
  a8:	ldr	x4, [x2]
  ac:	ldr	x3, [x1]
  b0:	cmp	x4, x3
  b4:	b.eq	e4 <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0xe4>  // b.none
  b8:	add	x2, x2, #0x8
  bc:	ldr	x4, [x2]
  c0:	ldr	x3, [x1]
  c4:	cmp	x4, x3
  c8:	b.eq	ec <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0xec>  // b.none
  cc:	add	x2, x2, #0x8
  d0:	ldr	x3, [x2]
  d4:	ldr	x1, [x1]
  d8:	cmp	x3, x1
  dc:	csel	x0, x0, x2, ne  // ne = any
  e0:	b	8c <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x8c>
  e4:	mov	x0, x2
  e8:	b	8c <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x8c>
  ec:	mov	x0, x2
  f0:	b	8c <_ZN4llvm4findIRNS_11SmallVectorIPNS_9TruncInstELj4EEEPNS_11InstructionEEEDTcl9adl_beginfp_EEOT_RKT0_+0x8c>

Disassembly of section .text._ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x22, x0
  20:	mov	x19, x1
  24:	mov	x25, x1
  28:	ldr	x20, [x0, #8]
  2c:	ldr	x24, [x0]
  30:	sub	x0, x20, x24
  34:	asr	x0, x0, #3
  38:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  3c:	movk	x1, #0xaaab
  40:	mul	x0, x0, x1
  44:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  48:	movk	x1, #0x555, lsl #48
  4c:	cmp	x0, x1
  50:	b.eq	1a8 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x1a8>  // b.none
  54:	mov	x26, x2
  58:	cmp	x0, #0x0
  5c:	csinc	x1, x0, xzr, ne  // ne = any
  60:	adds	x0, x1, x0
  64:	b.cs	1bc <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x1bc>  // b.hs, b.nlast
  68:	mov	x21, #0x5555555555555555    	// #6148914691236517205
  6c:	movk	x21, #0x555, lsl #48
  70:	cmp	x0, x21
  74:	csel	x21, x0, x21, ls  // ls = plast
  78:	sub	x27, x19, x24
  7c:	mov	x23, #0x0                   	// #0
  80:	cbz	x0, 94 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x94>
  84:	add	x0, x21, x21, lsl #1
  88:	lsl	x0, x0, #3
  8c:	bl	0 <_Znwm>
  90:	mov	x23, x0
  94:	add	x0, x23, x27
  98:	ldp	x2, x3, [x26]
  9c:	stp	x2, x3, [x0]
  a0:	ldr	x1, [x26, #16]
  a4:	str	x1, [x0, #16]
  a8:	cmp	x19, x24
  ac:	b.eq	1b4 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x1b4>  // b.none
  b0:	mov	x3, x23
  b4:	mov	x2, x24
  b8:	ldp	x0, x1, [x2]
  bc:	stp	x0, x1, [x3]
  c0:	ldr	x0, [x2, #16]
  c4:	str	x0, [x3, #16]
  c8:	add	x2, x2, #0x18
  cc:	add	x3, x3, #0x18
  d0:	cmp	x25, x2
  d4:	b.ne	b8 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0xb8>  // b.any
  d8:	sub	x25, x19, #0x18
  dc:	sub	x25, x25, x24
  e0:	lsr	x25, x25, #3
  e4:	mov	x0, #0xaaab                	// #43691
  e8:	movk	x0, #0xaaaa, lsl #16
  ec:	movk	x0, #0xaaaa, lsl #32
  f0:	movk	x0, #0xaaa, lsl #48
  f4:	mul	x25, x25, x0
  f8:	and	x25, x25, #0x1fffffffffffffff
  fc:	add	x25, x25, #0x1
 100:	add	x25, x25, x25, lsl #1
 104:	add	x25, x23, x25, lsl #3
 108:	add	x25, x25, #0x18
 10c:	cmp	x19, x20
 110:	b.eq	16c <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x16c>  // b.none
 114:	mov	x2, x19
 118:	mov	x3, x25
 11c:	ldp	x0, x1, [x2]
 120:	stp	x0, x1, [x3]
 124:	ldr	x0, [x2, #16]
 128:	str	x0, [x3, #16]
 12c:	add	x2, x2, #0x18
 130:	add	x3, x3, #0x18
 134:	cmp	x2, x20
 138:	b.ne	11c <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x11c>  // b.any
 13c:	sub	x0, x20, x19
 140:	sub	x0, x0, #0x18
 144:	lsr	x0, x0, #3
 148:	mov	x1, #0xaaab                	// #43691
 14c:	movk	x1, #0xaaaa, lsl #16
 150:	movk	x1, #0xaaaa, lsl #32
 154:	movk	x1, #0xaaa, lsl #48
 158:	mul	x0, x0, x1
 15c:	and	x0, x0, #0x1fffffffffffffff
 160:	add	x0, x0, #0x1
 164:	add	x0, x0, x0, lsl #1
 168:	add	x25, x25, x0, lsl #3
 16c:	cbz	x24, 178 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x178>
 170:	mov	x0, x24
 174:	bl	0 <_ZdlPv>
 178:	str	x23, [x22]
 17c:	str	x25, [x22, #8]
 180:	add	x21, x21, x21, lsl #1
 184:	add	x23, x23, x21, lsl #3
 188:	str	x23, [x22, #16]
 18c:	ldp	x19, x20, [sp, #16]
 190:	ldp	x21, x22, [sp, #32]
 194:	ldp	x23, x24, [sp, #48]
 198:	ldp	x25, x26, [sp, #64]
 19c:	ldr	x27, [sp, #80]
 1a0:	ldp	x29, x30, [sp], #96
 1a4:	ret
 1a8:	adrp	x0, 0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_>
 1ac:	add	x0, x0, #0x0
 1b0:	bl	0 <_ZSt20__throw_length_errorPKc>
 1b4:	mov	x25, x23
 1b8:	b	108 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x108>
 1bc:	sub	x27, x19, x24
 1c0:	mov	x21, #0x5555555555555555    	// #6148914691236517205
 1c4:	movk	x21, #0x555, lsl #48
 1c8:	b	84 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x84>

Disassembly of section .text._ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	34 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_+0x34>  // b.none
  14:	ldp	x4, x5, [x2]
  18:	stp	x4, x5, [x1]
  1c:	ldr	x2, [x2, #16]
  20:	str	x2, [x1, #16]
  24:	ldr	x1, [x0, #8]
  28:	add	x1, x1, #0x18
  2c:	str	x1, [x0, #8]
  30:	ret
  34:	stp	x29, x30, [sp, #-16]!
  38:	mov	x29, sp
  3c:	bl	0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_>
  40:	ldp	x29, x30, [sp], #16
  44:	ret

Disassembly of section .text._ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_:

0000000000000000 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x19, x0
  18:	mov	x21, x1
  1c:	ldr	x20, [x1]
  20:	ldr	x24, [x0, #8]
  24:	ldr	w23, [x0, #24]
  28:	cbz	w23, 674 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x674>
  2c:	cmn	x20, #0x10
  30:	ccmn	x20, #0x8, #0x4, ne  // ne = any
  34:	b.eq	84 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x84>  // b.none
  38:	sub	w2, w23, #0x1
  3c:	lsr	w0, w20, #9
  40:	eor	w0, w0, w20, lsr #4
  44:	and	w0, w0, w2
  48:	lsl	w1, w0, #4
  4c:	add	x22, x24, x1
  50:	ldr	x1, [x24, x1]
  54:	cmp	x20, x1
  58:	b.ne	a4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xa4>  // b.any
  5c:	ldr	w0, [x22, #8]
  60:	add	x0, x0, x0, lsl #1
  64:	ldr	x1, [x19, #32]
  68:	add	x0, x1, x0, lsl #3
  6c:	add	x0, x0, #0x8
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x21, x22, [sp, #32]
  78:	ldp	x23, x24, [sp, #48]
  7c:	ldp	x29, x30, [sp], #96
  80:	ret
  84:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x250                 	// #592
  90:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
  94:	add	x1, x1, #0x0
  98:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
  9c:	add	x0, x0, #0x0
  a0:	bl	0 <__assert_fail>
  a4:	mov	w4, #0x1                   	// #1
  a8:	mov	x3, #0x0                   	// #0
  ac:	cmn	x1, #0x8
  b0:	b.ne	16c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x16c>  // b.any
  b4:	cmp	x3, #0x0
  b8:	csel	x22, x22, x3, eq  // eq = none
  bc:	ldr	x0, [x19]
  c0:	add	x0, x0, #0x1
  c4:	str	x0, [x19]
  c8:	ldr	w0, [x19, #16]
  cc:	add	w1, w0, #0x1
  d0:	add	w0, w23, w23, lsl #1
  d4:	cmp	w0, w1, lsl #2
  d8:	b.ls	680 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x680>  // b.plast
  dc:	ldr	w0, [x19, #20]
  e0:	sub	w0, w23, w0
  e4:	sub	w0, w0, w1
  e8:	cmp	w0, w23, lsr #3
  ec:	b.ls	32c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x32c>  // b.plast
  f0:	cbz	x22, 544 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x544>
  f4:	ldr	w0, [x19, #16]
  f8:	add	w0, w0, #0x1
  fc:	str	w0, [x19, #16]
 100:	ldr	x0, [x22]
 104:	cmn	x0, #0x8
 108:	b.eq	118 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x118>  // b.none
 10c:	ldr	w0, [x19, #20]
 110:	sub	w0, w0, #0x1
 114:	str	w0, [x19, #20]
 118:	str	x20, [x22]
 11c:	str	wzr, [x22, #8]
 120:	ldr	x0, [x21]
 124:	str	x0, [sp, #72]
 128:	str	wzr, [sp, #80]
 12c:	str	wzr, [sp, #84]
 130:	str	xzr, [sp, #88]
 134:	add	x20, x19, #0x20
 138:	add	x1, sp, #0x48
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 144:	ldr	x0, [x19, #40]
 148:	ldr	x1, [x19, #32]
 14c:	sub	x0, x0, x1
 150:	asr	x0, x0, #3
 154:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 158:	movk	x1, #0xaaab
 15c:	mul	x0, x0, x1
 160:	sub	w0, w0, #0x1
 164:	str	w0, [x22, #8]
 168:	b	5c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5c>
 16c:	cmp	x3, #0x0
 170:	ccmn	x1, #0x10, #0x0, eq  // eq = none
 174:	csel	x3, x3, x22, ne  // ne = any
 178:	add	w5, w4, #0x1
 17c:	add	w4, w0, w4
 180:	and	w0, w2, w4
 184:	and	w4, w2, w4
 188:	lsl	x1, x4, #4
 18c:	add	x22, x24, x1
 190:	ldr	x1, [x24, x1]
 194:	cmp	x20, x1
 198:	b.eq	5c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5c>  // b.none
 19c:	mov	w4, w5
 1a0:	b	ac <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xac>
 1a4:	str	wzr, [x19, #16]
 1a8:	str	wzr, [x19, #20]
 1ac:	ldr	w1, [x19, #24]
 1b0:	sub	w2, w1, #0x1
 1b4:	tst	w2, w1
 1b8:	b.ne	1e0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1e0>  // b.any
 1bc:	ubfiz	x1, x1, #4, #32
 1c0:	add	x1, x0, x1
 1c4:	cmp	x0, x1
 1c8:	b.eq	27c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x27c>  // b.none
 1cc:	mov	x2, #0xfffffffffffffff8    	// #-8
 1d0:	str	x2, [x0], #16
 1d4:	cmp	x1, x0
 1d8:	b.ne	1d0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1d0>  // b.any
 1dc:	b	27c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x27c>
 1e0:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 1e4:	add	x3, x3, #0x0
 1e8:	mov	w2, #0x15b                 	// #347
 1ec:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 1f0:	add	x1, x1, #0x0
 1f4:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 1f8:	add	x0, x0, #0x0
 1fc:	bl	0 <__assert_fail>
 200:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 204:	add	x3, x3, #0x0
 208:	mov	w2, #0x15b                 	// #347
 20c:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 210:	add	x1, x1, #0x0
 214:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 218:	add	x0, x0, #0x0
 21c:	bl	0 <__assert_fail>
 220:	mov	w11, w10
 224:	mov	x6, #0x0                   	// #0
 228:	cmn	x8, #0x8
 22c:	b.ne	23c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x23c>  // b.any
 230:	cmp	x6, #0x0
 234:	csel	x6, x6, x9, ne  // ne = any
 238:	b	568 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x568>
 23c:	cmp	x6, #0x0
 240:	ccmn	x8, #0x10, #0x0, eq  // eq = none
 244:	csel	x6, x6, x9, ne  // ne = any
 248:	add	w12, w11, #0x1
 24c:	add	w11, w11, w4
 250:	and	w4, w3, w11
 254:	and	w11, w3, w11
 258:	lsl	x8, x11, #4
 25c:	add	x9, x7, x8
 260:	ldr	x8, [x7, x8]
 264:	cmp	x2, x8
 268:	b.eq	5cc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5cc>  // b.none
 26c:	mov	w11, w12
 270:	b	228 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x228>
 274:	mov	x0, x24
 278:	bl	0 <_ZdlPvm>
 27c:	ldr	w0, [x19, #24]
 280:	cbz	w0, 544 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x544>
 284:	cmn	x20, #0x10
 288:	ccmn	x20, #0x8, #0x4, ne  // ne = any
 28c:	b.eq	2d4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2d4>  // b.none
 290:	ldr	x2, [x19, #8]
 294:	sub	w0, w0, #0x1
 298:	lsr	w1, w20, #9
 29c:	eor	w1, w1, w20, lsr #4
 2a0:	and	w1, w1, w0
 2a4:	lsl	w3, w1, #4
 2a8:	add	x22, x2, x3
 2ac:	ldr	x3, [x2, x3]
 2b0:	cmp	x20, x3
 2b4:	b.eq	f4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf4>  // b.none
 2b8:	mov	w4, #0x1                   	// #1
 2bc:	mov	x5, #0x0                   	// #0
 2c0:	cmn	x3, #0x8
 2c4:	b.ne	2f4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2f4>  // b.any
 2c8:	cbz	x5, f0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf0>
 2cc:	mov	x22, x5
 2d0:	b	f4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf4>
 2d4:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 2d8:	add	x3, x3, #0x0
 2dc:	mov	w2, #0x250                 	// #592
 2e0:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 2e4:	add	x1, x1, #0x0
 2e8:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 2ec:	add	x0, x0, #0x0
 2f0:	bl	0 <__assert_fail>
 2f4:	cmp	x5, #0x0
 2f8:	ccmn	x3, #0x10, #0x0, eq  // eq = none
 2fc:	csel	x5, x5, x22, ne  // ne = any
 300:	add	w6, w4, #0x1
 304:	add	w22, w4, w1
 308:	and	w1, w0, w22
 30c:	and	w22, w0, w22
 310:	lsl	x3, x22, #4
 314:	add	x22, x2, x22, lsl #4
 318:	ldr	x3, [x2, x3]
 31c:	cmp	x20, x3
 320:	b.eq	f4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf4>  // b.none
 324:	mov	w4, w6
 328:	b	2c0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2c0>
 32c:	sub	w0, w23, #0x1
 330:	orr	x0, x0, x0, lsr #1
 334:	orr	x0, x0, x0, lsr #2
 338:	orr	x0, x0, x0, lsr #4
 33c:	orr	x0, x0, x0, lsr #8
 340:	orr	x0, x0, x0, lsr #16
 344:	add	x0, x0, #0x1
 348:	cmp	w0, #0x40
 34c:	mov	w1, #0x40                  	// #64
 350:	csel	w0, w0, w1, cs  // cs = hs, nlast
 354:	str	w0, [x19, #24]
 358:	ubfiz	x0, x0, #4, #32
 35c:	bl	0 <_Znwm>
 360:	str	x0, [x19, #8]
 364:	cbz	x24, 3bc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3bc>
 368:	ubfiz	x1, x23, #4, #32
 36c:	add	x5, x24, x1
 370:	str	wzr, [x19, #16]
 374:	str	wzr, [x19, #20]
 378:	ldr	w2, [x19, #24]
 37c:	sub	w3, w2, #0x1
 380:	tst	w3, w2
 384:	b.ne	418 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x418>  // b.any
 388:	ubfiz	x2, x2, #4, #32
 38c:	add	x2, x0, x2
 390:	mov	x3, #0xfffffffffffffff8    	// #-8
 394:	cmp	x0, x2
 398:	b.eq	3a8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3a8>  // b.none
 39c:	str	x3, [x0], #16
 3a0:	cmp	x2, x0
 3a4:	b.ne	39c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x39c>  // b.any
 3a8:	cmp	x24, x5
 3ac:	b.eq	48c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x48c>  // b.none
 3b0:	mov	x0, x24
 3b4:	mov	w10, #0x1                   	// #1
 3b8:	b	614 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x614>
 3bc:	str	wzr, [x19, #16]
 3c0:	str	wzr, [x19, #20]
 3c4:	ldr	w1, [x19, #24]
 3c8:	sub	w2, w1, #0x1
 3cc:	tst	w2, w1
 3d0:	b.ne	3f8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3f8>  // b.any
 3d4:	ubfiz	x1, x1, #4, #32
 3d8:	add	x1, x0, x1
 3dc:	cmp	x0, x1
 3e0:	b.eq	494 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x494>  // b.none
 3e4:	mov	x2, #0xfffffffffffffff8    	// #-8
 3e8:	str	x2, [x0], #16
 3ec:	cmp	x1, x0
 3f0:	b.ne	3e8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3e8>  // b.any
 3f4:	b	494 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x494>
 3f8:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 3fc:	add	x3, x3, #0x0
 400:	mov	w2, #0x15b                 	// #347
 404:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 408:	add	x1, x1, #0x0
 40c:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 410:	add	x0, x0, #0x0
 414:	bl	0 <__assert_fail>
 418:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 41c:	add	x3, x3, #0x0
 420:	mov	w2, #0x15b                 	// #347
 424:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 428:	add	x1, x1, #0x0
 42c:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 430:	add	x0, x0, #0x0
 434:	bl	0 <__assert_fail>
 438:	mov	w11, w10
 43c:	mov	x6, #0x0                   	// #0
 440:	cmn	x8, #0x8
 444:	b.ne	454 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x454>  // b.any
 448:	cmp	x6, #0x0
 44c:	csel	x6, x6, x9, ne  // ne = any
 450:	b	5f0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5f0>
 454:	cmp	x6, #0x0
 458:	ccmn	x8, #0x10, #0x0, eq  // eq = none
 45c:	csel	x6, x6, x9, ne  // ne = any
 460:	add	w12, w11, #0x1
 464:	add	w11, w4, w11
 468:	and	w4, w3, w11
 46c:	and	w11, w3, w11
 470:	lsl	x8, x11, #4
 474:	add	x9, x7, x8
 478:	ldr	x8, [x7, x8]
 47c:	cmp	x2, x8
 480:	b.eq	654 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x654>  // b.none
 484:	mov	w11, w12
 488:	b	440 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x440>
 48c:	mov	x0, x24
 490:	bl	0 <_ZdlPvm>
 494:	ldr	w0, [x19, #24]
 498:	cbz	w0, 544 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x544>
 49c:	cmn	x20, #0x10
 4a0:	ccmn	x20, #0x8, #0x4, ne  // ne = any
 4a4:	b.eq	4ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x4ec>  // b.none
 4a8:	ldr	x2, [x19, #8]
 4ac:	sub	w0, w0, #0x1
 4b0:	lsr	w1, w20, #9
 4b4:	eor	w1, w1, w20, lsr #4
 4b8:	and	w1, w1, w0
 4bc:	lsl	w3, w1, #4
 4c0:	add	x22, x2, x3
 4c4:	ldr	x3, [x2, x3]
 4c8:	cmp	x20, x3
 4cc:	b.eq	f4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf4>  // b.none
 4d0:	mov	w4, #0x1                   	// #1
 4d4:	mov	x5, #0x0                   	// #0
 4d8:	cmn	x3, #0x8
 4dc:	b.ne	50c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x50c>  // b.any
 4e0:	cbz	x5, f0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf0>
 4e4:	mov	x22, x5
 4e8:	b	f4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf4>
 4ec:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 4f0:	add	x3, x3, #0x0
 4f4:	mov	w2, #0x250                 	// #592
 4f8:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 4fc:	add	x1, x1, #0x0
 500:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 504:	add	x0, x0, #0x0
 508:	bl	0 <__assert_fail>
 50c:	cmp	x5, #0x0
 510:	ccmn	x3, #0x10, #0x0, eq  // eq = none
 514:	csel	x5, x5, x22, ne  // ne = any
 518:	add	w6, w4, #0x1
 51c:	add	w22, w1, w4
 520:	and	w1, w0, w22
 524:	and	w22, w0, w22
 528:	lsl	x3, x22, #4
 52c:	add	x22, x2, x22, lsl #4
 530:	ldr	x3, [x2, x3]
 534:	cmp	x20, x3
 538:	b.eq	f4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf4>  // b.none
 53c:	mov	w4, w6
 540:	b	4d8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x4d8>
 544:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 548:	add	x3, x3, #0x0
 54c:	mov	w2, #0x22f                 	// #559
 550:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 554:	add	x1, x1, #0x0
 558:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 55c:	add	x0, x0, #0x0
 560:	bl	0 <__assert_fail>
 564:	mov	x6, #0x0                   	// #0
 568:	str	x2, [x6]
 56c:	ldr	w2, [x0, #8]
 570:	str	w2, [x6, #8]
 574:	ldr	w2, [x19, #16]
 578:	add	w2, w2, #0x1
 57c:	str	w2, [x19, #16]
 580:	add	x0, x0, #0x10
 584:	cmp	x5, x0
 588:	b.eq	274 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x274>  // b.none
 58c:	ldr	x2, [x0]
 590:	cmn	x2, #0x10
 594:	ccmn	x2, #0x8, #0x4, ne  // ne = any
 598:	b.eq	580 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x580>  // b.none
 59c:	ldr	w3, [x19, #24]
 5a0:	cbz	w3, 564 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x564>
 5a4:	ldr	x7, [x19, #8]
 5a8:	sub	w3, w3, #0x1
 5ac:	lsr	w4, w2, #9
 5b0:	eor	w4, w4, w2, lsr #4
 5b4:	and	w4, w4, w3
 5b8:	lsl	w6, w4, #4
 5bc:	add	x9, x7, x6
 5c0:	ldr	x8, [x7, x6]
 5c4:	cmp	x2, x8
 5c8:	b.ne	220 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x220>  // b.any
 5cc:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 5d0:	add	x3, x3, #0x0
 5d4:	mov	w2, #0x17a                 	// #378
 5d8:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 5dc:	add	x1, x1, #0x0
 5e0:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 5e4:	add	x0, x0, #0x0
 5e8:	bl	0 <__assert_fail>
 5ec:	mov	x6, #0x0                   	// #0
 5f0:	str	x2, [x6]
 5f4:	ldr	w2, [x0, #8]
 5f8:	str	w2, [x6, #8]
 5fc:	ldr	w2, [x19, #16]
 600:	add	w2, w2, #0x1
 604:	str	w2, [x19, #16]
 608:	add	x0, x0, #0x10
 60c:	cmp	x5, x0
 610:	b.eq	48c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x48c>  // b.none
 614:	ldr	x2, [x0]
 618:	cmn	x2, #0x10
 61c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
 620:	b.eq	608 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x608>  // b.none
 624:	ldr	w3, [x19, #24]
 628:	cbz	w3, 5ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5ec>
 62c:	ldr	x7, [x19, #8]
 630:	sub	w3, w3, #0x1
 634:	lsr	w4, w2, #9
 638:	eor	w4, w4, w2, lsr #4
 63c:	and	w4, w4, w3
 640:	lsl	w6, w4, #4
 644:	add	x9, x7, x6
 648:	ldr	x8, [x7, x6]
 64c:	cmp	x8, x2
 650:	b.ne	438 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x438>  // b.any
 654:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 658:	add	x3, x3, #0x0
 65c:	mov	w2, #0x17a                 	// #378
 660:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 664:	add	x1, x1, #0x0
 668:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 66c:	add	x0, x0, #0x0
 670:	bl	0 <__assert_fail>
 674:	ldr	x0, [x0]
 678:	add	x0, x0, #0x1
 67c:	str	x0, [x19]
 680:	lsl	w0, w23, #1
 684:	sub	w0, w0, #0x1
 688:	orr	x0, x0, x0, lsr #1
 68c:	orr	x0, x0, x0, lsr #2
 690:	orr	x0, x0, x0, lsr #4
 694:	orr	x0, x0, x0, lsr #8
 698:	orr	x0, x0, x0, lsr #16
 69c:	add	x0, x0, #0x1
 6a0:	cmp	w0, #0x40
 6a4:	mov	w1, #0x40                  	// #64
 6a8:	csel	w0, w0, w1, cs  // cs = hs, nlast
 6ac:	str	w0, [x19, #24]
 6b0:	ubfiz	x0, x0, #4, #32
 6b4:	bl	0 <_Znwm>
 6b8:	str	x0, [x19, #8]
 6bc:	cbz	x24, 1a4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1a4>
 6c0:	ubfiz	x1, x23, #4, #32
 6c4:	add	x5, x24, x1
 6c8:	str	wzr, [x19, #16]
 6cc:	str	wzr, [x19, #20]
 6d0:	ldr	w2, [x19, #24]
 6d4:	sub	w3, w2, #0x1
 6d8:	tst	w3, w2
 6dc:	b.ne	200 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x200>  // b.any
 6e0:	ubfiz	x2, x2, #4, #32
 6e4:	add	x2, x0, x2
 6e8:	mov	x3, #0xfffffffffffffff8    	// #-8
 6ec:	cmp	x0, x2
 6f0:	b.eq	700 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x700>  // b.none
 6f4:	str	x3, [x0], #16
 6f8:	cmp	x2, x0
 6fc:	b.ne	6f4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x6f4>  // b.any
 700:	cmp	x24, x5
 704:	b.eq	274 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x274>  // b.none
 708:	mov	x0, x24
 70c:	mov	w10, #0x1                   	// #1
 710:	b	58c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x58c>
