
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//30-systemd-environment-d-generator_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400a08 <_init>:
  400a08:	stp	x29, x30, [sp, #-16]!
  400a0c:	mov	x29, sp
  400a10:	bl	400bd0 <call_weak_fn>
  400a14:	ldp	x29, x30, [sp], #16
  400a18:	ret

Disassembly of section .plt:

0000000000400a20 <__libc_start_main@plt-0x20>:
  400a20:	stp	x16, x30, [sp, #-16]!
  400a24:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400a28:	ldr	x17, [x16, #3928]
  400a2c:	add	x16, x16, #0xf58
  400a30:	br	x17
  400a34:	nop
  400a38:	nop
  400a3c:	nop

0000000000400a40 <__libc_start_main@plt>:
  400a40:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400a44:	ldr	x17, [x16, #3936]
  400a48:	add	x16, x16, #0xf60
  400a4c:	br	x17

0000000000400a50 <abort@plt>:
  400a50:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400a54:	ldr	x17, [x16, #3944]
  400a58:	add	x16, x16, #0xf68
  400a5c:	br	x17

0000000000400a60 <__gmon_start__@plt>:
  400a60:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400a64:	ldr	x17, [x16, #3952]
  400a68:	add	x16, x16, #0xf70
  400a6c:	br	x17

0000000000400a70 <log_parse_environment_realm@plt>:
  400a70:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400a74:	ldr	x17, [x16, #3960]
  400a78:	add	x16, x16, #0xf78
  400a7c:	br	x17

0000000000400a80 <log_open@plt>:
  400a80:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400a84:	ldr	x17, [x16, #3968]
  400a88:	add	x16, x16, #0xf80
  400a8c:	br	x17

0000000000400a90 <log_get_max_level_realm@plt>:
  400a90:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400a94:	ldr	x17, [x16, #3976]
  400a98:	add	x16, x16, #0xf88
  400a9c:	br	x17

0000000000400aa0 <log_internal_realm@plt>:
  400aa0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400aa4:	ldr	x17, [x16, #3984]
  400aa8:	add	x16, x16, #0xf90
  400aac:	br	x17

0000000000400ab0 <strv_new_internal@plt>:
  400ab0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400ab4:	ldr	x17, [x16, #3992]
  400ab8:	add	x16, x16, #0xf98
  400abc:	br	x17

0000000000400ac0 <sd_path_home@plt>:
  400ac0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400ac4:	ldr	x17, [x16, #4000]
  400ac8:	add	x16, x16, #0xfa0
  400acc:	br	x17

0000000000400ad0 <strv_extend_front@plt>:
  400ad0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400ad4:	ldr	x17, [x16, #4008]
  400ad8:	add	x16, x16, #0xfa8
  400adc:	br	x17

0000000000400ae0 <free@plt>:
  400ae0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400ae4:	ldr	x17, [x16, #4016]
  400ae8:	add	x16, x16, #0xfb0
  400aec:	br	x17

0000000000400af0 <strv_free@plt>:
  400af0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400af4:	ldr	x17, [x16, #4024]
  400af8:	add	x16, x16, #0xfb8
  400afc:	br	x17

0000000000400b00 <conf_files_list_strv@plt>:
  400b00:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400b04:	ldr	x17, [x16, #4032]
  400b08:	add	x16, x16, #0xfc0
  400b0c:	br	x17

0000000000400b10 <merge_env_file@plt>:
  400b10:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400b14:	ldr	x17, [x16, #4040]
  400b18:	add	x16, x16, #0xfc8
  400b1c:	br	x17

0000000000400b20 <strchr@plt>:
  400b20:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400b24:	ldr	x17, [x16, #4048]
  400b28:	add	x16, x16, #0xfd0
  400b2c:	br	x17

0000000000400b30 <shell_maybe_quote@plt>:
  400b30:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400b34:	ldr	x17, [x16, #4056]
  400b38:	add	x16, x16, #0xfd8
  400b3c:	br	x17

0000000000400b40 <printf@plt>:
  400b40:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400b44:	ldr	x17, [x16, #4064]
  400b48:	add	x16, x16, #0xfe0
  400b4c:	br	x17

0000000000400b50 <log_oom_internal@plt>:
  400b50:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400b54:	ldr	x17, [x16, #4072]
  400b58:	add	x16, x16, #0xfe8
  400b5c:	br	x17

0000000000400b60 <strv_join_prefix@plt>:
  400b60:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400b64:	ldr	x17, [x16, #4080]
  400b68:	add	x16, x16, #0xff0
  400b6c:	br	x17

0000000000400b70 <log_assert_failed_realm@plt>:
  400b70:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd0>
  400b74:	ldr	x17, [x16, #4088]
  400b78:	add	x16, x16, #0xff8
  400b7c:	br	x17

Disassembly of section .text:

0000000000400b80 <_start>:
  400b80:	mov	x29, #0x0                   	// #0
  400b84:	mov	x30, #0x0                   	// #0
  400b88:	mov	x5, x0
  400b8c:	ldr	x1, [sp]
  400b90:	add	x2, sp, #0x8
  400b94:	mov	x6, sp
  400b98:	movz	x0, #0x0, lsl #48
  400b9c:	movk	x0, #0x0, lsl #32
  400ba0:	movk	x0, #0x40, lsl #16
  400ba4:	movk	x0, #0xcac
  400ba8:	movz	x3, #0x0, lsl #48
  400bac:	movk	x3, #0x0, lsl #32
  400bb0:	movk	x3, #0x40, lsl #16
  400bb4:	movk	x3, #0x1018
  400bb8:	movz	x4, #0x0, lsl #48
  400bbc:	movk	x4, #0x0, lsl #32
  400bc0:	movk	x4, #0x40, lsl #16
  400bc4:	movk	x4, #0x1098
  400bc8:	bl	400a40 <__libc_start_main@plt>
  400bcc:	bl	400a50 <abort@plt>

0000000000400bd0 <call_weak_fn>:
  400bd0:	adrp	x0, 41f000 <__FRAME_END__+0x1dcd0>
  400bd4:	ldr	x0, [x0, #3904]
  400bd8:	cbz	x0, 400be0 <call_weak_fn+0x10>
  400bdc:	b	400a60 <__gmon_start__@plt>
  400be0:	ret

0000000000400be4 <deregister_tm_clones>:
  400be4:	adrp	x0, 420000 <completed.8445>
  400be8:	add	x1, x0, #0x0
  400bec:	adrp	x0, 420000 <completed.8445>
  400bf0:	add	x0, x0, #0x0
  400bf4:	cmp	x1, x0
  400bf8:	b.eq	400c24 <deregister_tm_clones+0x40>  // b.none
  400bfc:	sub	sp, sp, #0x10
  400c00:	adrp	x1, 401000 <main+0x354>
  400c04:	ldr	x1, [x1, #176]
  400c08:	str	x1, [sp, #8]
  400c0c:	cbz	x1, 400c1c <deregister_tm_clones+0x38>
  400c10:	mov	x16, x1
  400c14:	add	sp, sp, #0x10
  400c18:	br	x16
  400c1c:	add	sp, sp, #0x10
  400c20:	ret
  400c24:	ret

0000000000400c28 <register_tm_clones>:
  400c28:	adrp	x0, 420000 <completed.8445>
  400c2c:	add	x1, x0, #0x0
  400c30:	adrp	x0, 420000 <completed.8445>
  400c34:	add	x0, x0, #0x0
  400c38:	sub	x1, x1, x0
  400c3c:	mov	x2, #0x2                   	// #2
  400c40:	asr	x1, x1, #3
  400c44:	sdiv	x1, x1, x2
  400c48:	cbz	x1, 400c74 <register_tm_clones+0x4c>
  400c4c:	sub	sp, sp, #0x10
  400c50:	adrp	x2, 401000 <main+0x354>
  400c54:	ldr	x2, [x2, #184]
  400c58:	str	x2, [sp, #8]
  400c5c:	cbz	x2, 400c6c <register_tm_clones+0x44>
  400c60:	mov	x16, x2
  400c64:	add	sp, sp, #0x10
  400c68:	br	x16
  400c6c:	add	sp, sp, #0x10
  400c70:	ret
  400c74:	ret

0000000000400c78 <__do_global_dtors_aux>:
  400c78:	stp	x29, x30, [sp, #-32]!
  400c7c:	mov	x29, sp
  400c80:	str	x19, [sp, #16]
  400c84:	adrp	x19, 420000 <completed.8445>
  400c88:	ldrb	w0, [x19]
  400c8c:	cbnz	w0, 400c9c <__do_global_dtors_aux+0x24>
  400c90:	bl	400be4 <deregister_tm_clones>
  400c94:	mov	w0, #0x1                   	// #1
  400c98:	strb	w0, [x19]
  400c9c:	ldr	x19, [sp, #16]
  400ca0:	ldp	x29, x30, [sp], #32
  400ca4:	ret

0000000000400ca8 <frame_dummy>:
  400ca8:	b	400c28 <register_tm_clones>

0000000000400cac <main>:
  400cac:	sub	sp, sp, #0x60
  400cb0:	stp	x20, x19, [sp, #80]
  400cb4:	mov	w19, w0
  400cb8:	mov	w0, wzr
  400cbc:	stp	x29, x30, [sp, #32]
  400cc0:	stp	x24, x23, [sp, #48]
  400cc4:	stp	x22, x21, [sp, #64]
  400cc8:	add	x29, sp, #0x20
  400ccc:	bl	400a70 <log_parse_environment_realm@plt>
  400cd0:	bl	400a80 <log_open@plt>
  400cd4:	cmp	w19, #0x2
  400cd8:	b.lt	400d1c <main+0x70>  // b.tstop
  400cdc:	mov	w0, wzr
  400ce0:	bl	400a90 <log_get_max_level_realm@plt>
  400ce4:	cmp	w0, #0x3
  400ce8:	b.lt	400d14 <main+0x68>  // b.tstop
  400cec:	adrp	x2, 401000 <main+0x354>
  400cf0:	adrp	x4, 401000 <main+0x354>
  400cf4:	adrp	x5, 401000 <main+0x354>
  400cf8:	add	x2, x2, #0xc3
  400cfc:	add	x4, x4, #0xf9
  400d00:	add	x5, x5, #0xfe
  400d04:	mov	w0, #0x3                   	// #3
  400d08:	mov	w3, #0x5a                  	// #90
  400d0c:	mov	w1, wzr
  400d10:	bl	400aa0 <log_internal_realm@plt>
  400d14:	mov	w0, #0x1                   	// #1
  400d18:	b	400f74 <main+0x2c8>
  400d1c:	adrp	x0, 401000 <main+0x354>
  400d20:	adrp	x1, 401000 <main+0x354>
  400d24:	adrp	x2, 401000 <main+0x354>
  400d28:	adrp	x3, 401000 <main+0x354>
  400d2c:	add	x0, x0, #0x187
  400d30:	add	x1, x1, #0x19a
  400d34:	add	x2, x2, #0x1ad
  400d38:	add	x3, x3, #0x1ca
  400d3c:	mov	x4, xzr
  400d40:	mov	x5, xzr
  400d44:	stp	xzr, xzr, [sp]
  400d48:	str	xzr, [sp, #16]
  400d4c:	bl	400ab0 <strv_new_internal@plt>
  400d50:	stur	x0, [x29, #-8]
  400d54:	cbz	x0, 400dac <main+0x100>
  400d58:	adrp	x1, 401000 <main+0x354>
  400d5c:	add	x1, x1, #0x1e1
  400d60:	add	x2, sp, #0x10
  400d64:	mov	w0, #0x14                  	// #20
  400d68:	bl	400ac0 <sd_path_home@plt>
  400d6c:	tbnz	w0, #31, 400da0 <main+0xf4>
  400d70:	ldr	x1, [sp, #16]
  400d74:	sub	x0, x29, #0x8
  400d78:	bl	400ad0 <strv_extend_front@plt>
  400d7c:	tbnz	w0, #31, 400da0 <main+0xf4>
  400d80:	mov	w0, wzr
  400d84:	bl	400a90 <log_get_max_level_realm@plt>
  400d88:	cmp	w0, #0x7
  400d8c:	b.ge	400f8c <main+0x2e0>  // b.tcont
  400d90:	ldur	x19, [x29, #-8]
  400d94:	mov	w20, wzr
  400d98:	stur	xzr, [x29, #-8]
  400d9c:	b	400db4 <main+0x108>
  400da0:	mov	w20, w0
  400da4:	mov	x19, xzr
  400da8:	b	400db4 <main+0x108>
  400dac:	mov	x19, xzr
  400db0:	mov	w20, #0xfffffff4            	// #-12
  400db4:	ldr	x0, [sp, #16]
  400db8:	bl	400ae0 <free@plt>
  400dbc:	ldur	x0, [x29, #-8]
  400dc0:	cbz	x0, 400dc8 <main+0x11c>
  400dc4:	bl	400af0 <strv_free@plt>
  400dc8:	tbnz	w20, #31, 400f10 <main+0x264>
  400dcc:	adrp	x1, 401000 <main+0x354>
  400dd0:	add	x1, x1, #0x140
  400dd4:	add	x0, sp, #0x8
  400dd8:	mov	x2, xzr
  400ddc:	mov	w3, wzr
  400de0:	mov	x4, x19
  400de4:	bl	400b00 <conf_files_list_strv@plt>
  400de8:	tbnz	w0, #31, 400f0c <main+0x260>
  400dec:	ldr	x8, [sp, #8]
  400df0:	cbz	x8, 400e6c <main+0x1c0>
  400df4:	ldr	x23, [x8]
  400df8:	cbz	x23, 400e6c <main+0x1c0>
  400dfc:	adrp	x20, 401000 <main+0x354>
  400e00:	adrp	x21, 401000 <main+0x354>
  400e04:	adrp	x22, 401000 <main+0x354>
  400e08:	add	x24, x8, #0x8
  400e0c:	add	x20, x20, #0xc3
  400e10:	add	x21, x21, #0x146
  400e14:	add	x22, x22, #0x155
  400e18:	mov	w0, wzr
  400e1c:	bl	400a90 <log_get_max_level_realm@plt>
  400e20:	cmp	w0, #0x7
  400e24:	b.lt	400e4c <main+0x1a0>  // b.tstop
  400e28:	mov	w0, #0x7                   	// #7
  400e2c:	mov	w3, #0x3b                  	// #59
  400e30:	mov	w1, wzr
  400e34:	mov	x2, x20
  400e38:	mov	x4, x21
  400e3c:	mov	x5, x22
  400e40:	mov	x6, x23
  400e44:	bl	400aa0 <log_internal_realm@plt>
  400e48:	ldur	x23, [x24, #-8]
  400e4c:	mov	x0, sp
  400e50:	mov	x1, xzr
  400e54:	mov	x2, x23
  400e58:	bl	400b10 <merge_env_file@plt>
  400e5c:	cmn	w0, #0xc
  400e60:	b.eq	400ee4 <main+0x238>  // b.none
  400e64:	ldr	x23, [x24], #8
  400e68:	cbnz	x23, 400e18 <main+0x16c>
  400e6c:	ldr	x0, [sp]
  400e70:	cbz	x0, 400edc <main+0x230>
  400e74:	ldr	x8, [x0]
  400e78:	cbz	x8, 400eec <main+0x240>
  400e7c:	adrp	x20, 401000 <main+0x354>
  400e80:	add	x23, x0, #0x8
  400e84:	add	x20, x20, #0x17e
  400e88:	mov	w1, #0x3d                  	// #61
  400e8c:	mov	x0, x8
  400e90:	bl	400b20 <strchr@plt>
  400e94:	cbz	x0, 400ff8 <main+0x34c>
  400e98:	mov	x21, x0
  400e9c:	add	x0, x0, #0x1
  400ea0:	mov	w1, #0x1                   	// #1
  400ea4:	bl	400b30 <shell_maybe_quote@plt>
  400ea8:	cbz	x0, 400ef4 <main+0x248>
  400eac:	ldur	x2, [x23, #-8]
  400eb0:	mov	x22, x0
  400eb4:	mov	x0, x20
  400eb8:	mov	x3, x22
  400ebc:	sub	w1, w21, w2
  400ec0:	bl	400b40 <printf@plt>
  400ec4:	mov	x0, x22
  400ec8:	bl	400ae0 <free@plt>
  400ecc:	ldr	x8, [x23], #8
  400ed0:	cbnz	x8, 400e88 <main+0x1dc>
  400ed4:	mov	w20, wzr
  400ed8:	b	400f10 <main+0x264>
  400edc:	mov	w20, wzr
  400ee0:	b	400f1c <main+0x270>
  400ee4:	mov	w20, #0xfffffff4            	// #-12
  400ee8:	b	400f10 <main+0x264>
  400eec:	mov	w20, wzr
  400ef0:	b	400f18 <main+0x26c>
  400ef4:	adrp	x1, 401000 <main+0x354>
  400ef8:	adrp	x3, 401000 <main+0x354>
  400efc:	add	x1, x1, #0xc3
  400f00:	add	x3, x3, #0x146
  400f04:	mov	w2, #0x4b                  	// #75
  400f08:	bl	400b50 <log_oom_internal@plt>
  400f0c:	mov	w20, w0
  400f10:	ldr	x0, [sp]
  400f14:	cbz	x0, 400f1c <main+0x270>
  400f18:	bl	400af0 <strv_free@plt>
  400f1c:	ldr	x0, [sp, #8]
  400f20:	cbz	x0, 400f28 <main+0x27c>
  400f24:	bl	400af0 <strv_free@plt>
  400f28:	cbz	x19, 400f34 <main+0x288>
  400f2c:	mov	x0, x19
  400f30:	bl	400af0 <strv_free@plt>
  400f34:	tbz	w20, #31, 400f70 <main+0x2c4>
  400f38:	mov	w0, wzr
  400f3c:	bl	400a90 <log_get_max_level_realm@plt>
  400f40:	cmp	w0, #0x3
  400f44:	b.lt	400f70 <main+0x2c4>  // b.tstop
  400f48:	adrp	x2, 401000 <main+0x354>
  400f4c:	adrp	x4, 401000 <main+0x354>
  400f50:	adrp	x5, 401000 <main+0x354>
  400f54:	add	x2, x2, #0xc3
  400f58:	add	x4, x4, #0xf9
  400f5c:	add	x5, x5, #0x11f
  400f60:	mov	w0, #0x3                   	// #3
  400f64:	mov	w3, #0x60                  	// #96
  400f68:	mov	w1, w20
  400f6c:	bl	400aa0 <log_internal_realm@plt>
  400f70:	lsr	w0, w20, #31
  400f74:	ldp	x20, x19, [sp, #80]
  400f78:	ldp	x22, x21, [sp, #64]
  400f7c:	ldp	x24, x23, [sp, #48]
  400f80:	ldp	x29, x30, [sp, #32]
  400f84:	add	sp, sp, #0x60
  400f88:	ret
  400f8c:	ldur	x0, [x29, #-8]
  400f90:	adrp	x1, 401000 <main+0x354>
  400f94:	add	x1, x1, #0x1ef
  400f98:	mov	x2, xzr
  400f9c:	bl	400b60 <strv_join_prefix@plt>
  400fa0:	mov	x19, x0
  400fa4:	mov	w0, wzr
  400fa8:	bl	400a90 <log_get_max_level_realm@plt>
  400fac:	cmp	w0, #0x7
  400fb0:	b.lt	400fec <main+0x340>  // b.tstop
  400fb4:	adrp	x8, 401000 <main+0x354>
  400fb8:	add	x8, x8, #0x243
  400fbc:	cmp	x19, #0x0
  400fc0:	adrp	x2, 401000 <main+0x354>
  400fc4:	adrp	x4, 401000 <main+0x354>
  400fc8:	adrp	x5, 401000 <main+0x354>
  400fcc:	csel	x6, x8, x19, eq  // eq = none
  400fd0:	add	x2, x2, #0xc3
  400fd4:	add	x4, x4, #0x1f2
  400fd8:	add	x5, x5, #0x203
  400fdc:	mov	w0, #0x7                   	// #7
  400fe0:	mov	w3, #0x23                  	// #35
  400fe4:	mov	w1, wzr
  400fe8:	bl	400aa0 <log_internal_realm@plt>
  400fec:	mov	x0, x19
  400ff0:	bl	400ae0 <free@plt>
  400ff4:	b	400d90 <main+0xe4>
  400ff8:	adrp	x1, 401000 <main+0x354>
  400ffc:	adrp	x2, 401000 <main+0x354>
  401000:	adrp	x4, 401000 <main+0x354>
  401004:	add	x1, x1, #0x163
  401008:	add	x2, x2, #0xc3
  40100c:	add	x4, x4, #0x165
  401010:	mov	w3, #0x47                  	// #71
  401014:	bl	400b70 <log_assert_failed_realm@plt>

0000000000401018 <__libc_csu_init>:
  401018:	stp	x29, x30, [sp, #-64]!
  40101c:	mov	x29, sp
  401020:	stp	x19, x20, [sp, #16]
  401024:	adrp	x20, 41f000 <__FRAME_END__+0x1dcd0>
  401028:	add	x20, x20, #0xd18
  40102c:	stp	x21, x22, [sp, #32]
  401030:	adrp	x21, 41f000 <__FRAME_END__+0x1dcd0>
  401034:	add	x21, x21, #0xd10
  401038:	sub	x20, x20, x21
  40103c:	mov	w22, w0
  401040:	stp	x23, x24, [sp, #48]
  401044:	mov	x23, x1
  401048:	mov	x24, x2
  40104c:	bl	400a08 <_init>
  401050:	cmp	xzr, x20, asr #3
  401054:	b.eq	401080 <__libc_csu_init+0x68>  // b.none
  401058:	asr	x20, x20, #3
  40105c:	mov	x19, #0x0                   	// #0
  401060:	ldr	x3, [x21, x19, lsl #3]
  401064:	mov	x2, x24
  401068:	add	x19, x19, #0x1
  40106c:	mov	x1, x23
  401070:	mov	w0, w22
  401074:	blr	x3
  401078:	cmp	x20, x19
  40107c:	b.ne	401060 <__libc_csu_init+0x48>  // b.any
  401080:	ldp	x19, x20, [sp, #16]
  401084:	ldp	x21, x22, [sp, #32]
  401088:	ldp	x23, x24, [sp, #48]
  40108c:	ldp	x29, x30, [sp], #64
  401090:	ret
  401094:	nop

0000000000401098 <__libc_csu_fini>:
  401098:	ret

Disassembly of section .fini:

000000000040109c <_fini>:
  40109c:	stp	x29, x30, [sp, #-16]!
  4010a0:	mov	x29, sp
  4010a4:	ldp	x29, x30, [sp], #16
  4010a8:	ret
