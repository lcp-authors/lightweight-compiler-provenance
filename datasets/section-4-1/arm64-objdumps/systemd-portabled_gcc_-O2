
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-portabled_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404198 <_init>:
  404198:	stp	x29, x30, [sp, #-16]!
  40419c:	mov	x29, sp
  4041a0:	bl	4053e4 <call_weak_fn>
  4041a4:	ldp	x29, x30, [sp], #16
  4041a8:	ret

Disassembly of section .plt:

00000000004041b0 <.plt>:
  4041b0:	stp	x16, x30, [sp, #-16]!
  4041b4:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4041b8:	ldr	x17, [x16, #2552]
  4041bc:	add	x16, x16, #0x9f8
  4041c0:	br	x17
  4041c4:	nop
  4041c8:	nop
  4041cc:	nop

00000000004041d0 <image_unref@plt>:
  4041d0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4041d4:	ldr	x17, [x16, #2560]
  4041d8:	add	x16, x16, #0xa00
  4041dc:	br	x17

00000000004041e0 <safe_fclose@plt>:
  4041e0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4041e4:	ldr	x17, [x16, #2568]
  4041e8:	add	x16, x16, #0xa08
  4041ec:	br	x17

00000000004041f0 <sd_bus_message_read_strv@plt>:
  4041f0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4041f4:	ldr	x17, [x16, #2576]
  4041f8:	add	x16, x16, #0xa10
  4041fc:	br	x17

0000000000404200 <read_line_full@plt>:
  404200:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404204:	ldr	x17, [x16, #2584]
  404208:	add	x16, x16, #0xa18
  40420c:	br	x17

0000000000404210 <bus_error_message@plt>:
  404210:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404214:	ldr	x17, [x16, #2592]
  404218:	add	x16, x16, #0xa20
  40421c:	br	x17

0000000000404220 <unit_dbus_path_from_name@plt>:
  404220:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404224:	ldr	x17, [x16, #2600]
  404228:	add	x16, x16, #0xa28
  40422c:	br	x17

0000000000404230 <sd_bus_message_new_method_call@plt>:
  404230:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404234:	ldr	x17, [x16, #2608]
  404238:	add	x16, x16, #0xa30
  40423c:	br	x17

0000000000404240 <image_in_search_path@plt>:
  404240:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404244:	ldr	x17, [x16, #2616]
  404248:	add	x16, x16, #0xa38
  40424c:	br	x17

0000000000404250 <sd_bus_error_is_set@plt>:
  404250:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404254:	ldr	x17, [x16, #2624]
  404258:	add	x16, x16, #0xa40
  40425c:	br	x17

0000000000404260 <unlink@plt>:
  404260:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404264:	ldr	x17, [x16, #2632]
  404268:	add	x16, x16, #0xa48
  40426c:	br	x17

0000000000404270 <openat64@plt>:
  404270:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404274:	ldr	x17, [x16, #2640]
  404278:	add	x16, x16, #0xa50
  40427c:	br	x17

0000000000404280 <internal_hashmap_free@plt>:
  404280:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404284:	ldr	x17, [x16, #2648]
  404288:	add	x16, x16, #0xa58
  40428c:	br	x17

0000000000404290 <image_find@plt>:
  404290:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404294:	ldr	x17, [x16, #2656]
  404298:	add	x16, x16, #0xa60
  40429c:	br	x17

00000000004042a0 <sd_bus_reply_method_return@plt>:
  4042a0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4042a4:	ldr	x17, [x16, #2664]
  4042a8:	add	x16, x16, #0xa68
  4042ac:	br	x17

00000000004042b0 <strcspn@plt>:
  4042b0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4042b4:	ldr	x17, [x16, #2672]
  4042b8:	add	x16, x16, #0xa70
  4042bc:	br	x17

00000000004042c0 <internal_set_ensure_allocated@plt>:
  4042c0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4042c4:	ldr	x17, [x16, #2680]
  4042c8:	add	x16, x16, #0xa78
  4042cc:	br	x17

00000000004042d0 <fchmod@plt>:
  4042d0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4042d4:	ldr	x17, [x16, #2688]
  4042d8:	add	x16, x16, #0xa80
  4042dc:	br	x17

00000000004042e0 <stpcpy@plt>:
  4042e0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4042e4:	ldr	x17, [x16, #2696]
  4042e8:	add	x16, x16, #0xa88
  4042ec:	br	x17

00000000004042f0 <sd_event_add_child@plt>:
  4042f0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4042f4:	ldr	x17, [x16, #2704]
  4042f8:	add	x16, x16, #0xa90
  4042fc:	br	x17

0000000000404300 <__libc_start_main@plt>:
  404300:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404304:	ldr	x17, [x16, #2712]
  404308:	add	x16, x16, #0xa98
  40430c:	br	x17

0000000000404310 <sd_event_set_watchdog@plt>:
  404310:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404314:	ldr	x17, [x16, #2720]
  404318:	add	x16, x16, #0xaa0
  40431c:	br	x17

0000000000404320 <fdopen@plt>:
  404320:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404324:	ldr	x17, [x16, #2728]
  404328:	add	x16, x16, #0xaa8
  40432c:	br	x17

0000000000404330 <lookup_paths_free@plt>:
  404330:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404334:	ldr	x17, [x16, #2736]
  404338:	add	x16, x16, #0xab0
  40433c:	br	x17

0000000000404340 <sd_bus_message_unref@plt>:
  404340:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404344:	ldr	x17, [x16, #2744]
  404348:	add	x16, x16, #0xab8
  40434c:	br	x17

0000000000404350 <sd_bus_message_enter_container@plt>:
  404350:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404354:	ldr	x17, [x16, #2752]
  404358:	add	x16, x16, #0xac0
  40435c:	br	x17

0000000000404360 <sd_bus_request_name_async@plt>:
  404360:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404364:	ldr	x17, [x16, #2760]
  404368:	add	x16, x16, #0xac8
  40436c:	br	x17

0000000000404370 <open_tmpfile_linkable@plt>:
  404370:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404374:	ldr	x17, [x16, #2768]
  404378:	add	x16, x16, #0xad0
  40437c:	br	x17

0000000000404380 <copy_file_atomic_full@plt>:
  404380:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404384:	ldr	x17, [x16, #2776]
  404388:	add	x16, x16, #0xad8
  40438c:	br	x17

0000000000404390 <__gmon_start__@plt>:
  404390:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404394:	ldr	x17, [x16, #2784]
  404398:	add	x16, x16, #0xae0
  40439c:	br	x17

00000000004043a0 <sd_bus_error_set_errnof@plt>:
  4043a0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4043a4:	ldr	x17, [x16, #2792]
  4043a8:	add	x16, x16, #0xae8
  4043ac:	br	x17

00000000004043b0 <write_string_file_ts@plt>:
  4043b0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4043b4:	ldr	x17, [x16, #2800]
  4043b8:	add	x16, x16, #0xaf0
  4043bc:	br	x17

00000000004043c0 <polkit_agent_close@plt>:
  4043c0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4043c4:	ldr	x17, [x16, #2808]
  4043c8:	add	x16, x16, #0xaf8
  4043cc:	br	x17

00000000004043d0 <qsort@plt>:
  4043d0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4043d4:	ldr	x17, [x16, #2816]
  4043d8:	add	x16, x16, #0xb00
  4043dc:	br	x17

00000000004043e0 <sd_event_default@plt>:
  4043e0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4043e4:	ldr	x17, [x16, #2824]
  4043e8:	add	x16, x16, #0xb08
  4043ec:	br	x17

00000000004043f0 <bus_event_loop_with_idle@plt>:
  4043f0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4043f4:	ldr	x17, [x16, #2832]
  4043f8:	add	x16, x16, #0xb10
  4043fc:	br	x17

0000000000404400 <strnlen@plt>:
  404400:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404404:	ldr	x17, [x16, #2840]
  404408:	add	x16, x16, #0xb18
  40440c:	br	x17

0000000000404410 <sd_bus_message_new_method_return@plt>:
  404410:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404414:	ldr	x17, [x16, #2848]
  404418:	add	x16, x16, #0xb20
  40441c:	br	x17

0000000000404420 <hidden_or_backup_file@plt>:
  404420:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404424:	ldr	x17, [x16, #2856]
  404428:	add	x16, x16, #0xb28
  40442c:	br	x17

0000000000404430 <bus_verify_polkit_async_registry_free@plt>:
  404430:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404434:	ldr	x17, [x16, #2864]
  404438:	add	x16, x16, #0xb30
  40443c:	br	x17

0000000000404440 <sd_bus_message_open_container@plt>:
  404440:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404444:	ldr	x17, [x16, #2872]
  404448:	add	x16, x16, #0xb38
  40444c:	br	x17

0000000000404450 <reallocarray@plt>:
  404450:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404454:	ldr	x17, [x16, #2880]
  404458:	add	x16, x16, #0xb40
  40445c:	br	x17

0000000000404460 <sd_bus_message_append_array@plt>:
  404460:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404464:	ldr	x17, [x16, #2888]
  404468:	add	x16, x16, #0xb48
  40446c:	br	x17

0000000000404470 <getpid_cached@plt>:
  404470:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404474:	ldr	x17, [x16, #2896]
  404478:	add	x16, x16, #0xb50
  40447c:	br	x17

0000000000404480 <fd_duplicate_data_fd@plt>:
  404480:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404484:	ldr	x17, [x16, #2904]
  404488:	add	x16, x16, #0xb58
  40448c:	br	x17

0000000000404490 <memcpy@plt>:
  404490:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404494:	ldr	x17, [x16, #2912]
  404498:	add	x16, x16, #0xb60
  40449c:	br	x17

00000000004044a0 <loop_device_unref@plt>:
  4044a0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4044a4:	ldr	x17, [x16, #2920]
  4044a8:	add	x16, x16, #0xb68
  4044ac:	br	x17

00000000004044b0 <dirent_ensure_type@plt>:
  4044b0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4044b4:	ldr	x17, [x16, #2928]
  4044b8:	add	x16, x16, #0xb70
  4044bc:	br	x17

00000000004044c0 <image_type_to_string@plt>:
  4044c0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4044c4:	ldr	x17, [x16, #2936]
  4044c8:	add	x16, x16, #0xb78
  4044cc:	br	x17

00000000004044d0 <sd_event_source_unref@plt>:
  4044d0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4044d4:	ldr	x17, [x16, #2944]
  4044d8:	add	x16, x16, #0xb80
  4044dc:	br	x17

00000000004044e0 <symlink@plt>:
  4044e0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4044e4:	ldr	x17, [x16, #2952]
  4044e8:	add	x16, x16, #0xb88
  4044ec:	br	x17

00000000004044f0 <last_path_component@plt>:
  4044f0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4044f4:	ldr	x17, [x16, #2960]
  4044f8:	add	x16, x16, #0xb90
  4044fc:	br	x17

0000000000404500 <sd_bus_message_append@plt>:
  404500:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404504:	ldr	x17, [x16, #2968]
  404508:	add	x16, x16, #0xb98
  40450c:	br	x17

0000000000404510 <log_setup_service@plt>:
  404510:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404514:	ldr	x17, [x16, #2976]
  404518:	add	x16, x16, #0xba0
  40451c:	br	x17

0000000000404520 <strjoin_real@plt>:
  404520:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404524:	ldr	x17, [x16, #2984]
  404528:	add	x16, x16, #0xba8
  40452c:	br	x17

0000000000404530 <safe_close@plt>:
  404530:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404534:	ldr	x17, [x16, #2992]
  404538:	add	x16, x16, #0xbb0
  40453c:	br	x17

0000000000404540 <image_read_only@plt>:
  404540:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404544:	ldr	x17, [x16, #3000]
  404548:	add	x16, x16, #0xbb8
  40454c:	br	x17

0000000000404550 <safe_close_pair@plt>:
  404550:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404554:	ldr	x17, [x16, #3008]
  404558:	add	x16, x16, #0xbc0
  40455c:	br	x17

0000000000404560 <sd_bus_message_get_bus@plt>:
  404560:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404564:	ldr	x17, [x16, #3016]
  404568:	add	x16, x16, #0xbc8
  40456c:	br	x17

0000000000404570 <strrchr@plt>:
  404570:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404574:	ldr	x17, [x16, #3024]
  404578:	add	x16, x16, #0xbd0
  40457c:	br	x17

0000000000404580 <dirfd@plt>:
  404580:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404584:	ldr	x17, [x16, #3032]
  404588:	add	x16, x16, #0xbd8
  40458c:	br	x17

0000000000404590 <sd_bus_reply_method_errorf@plt>:
  404590:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404594:	ldr	x17, [x16, #3040]
  404598:	add	x16, x16, #0xbe0
  40459c:	br	x17

00000000004045a0 <sigkill_wait@plt>:
  4045a0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4045a4:	ldr	x17, [x16, #3048]
  4045a8:	add	x16, x16, #0xbe8
  4045ac:	br	x17

00000000004045b0 <loop_device_make_by_path@plt>:
  4045b0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4045b4:	ldr	x17, [x16, #3056]
  4045b8:	add	x16, x16, #0xbf0
  4045bc:	br	x17

00000000004045c0 <log_assert_failed_realm@plt>:
  4045c0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4045c4:	ldr	x17, [x16, #3064]
  4045c8:	add	x16, x16, #0xbf8
  4045cc:	br	x17

00000000004045d0 <sd_bus_message_read@plt>:
  4045d0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4045d4:	ldr	x17, [x16, #3072]
  4045d8:	add	x16, x16, #0xc00
  4045dc:	br	x17

00000000004045e0 <faccessat@plt>:
  4045e0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4045e4:	ldr	x17, [x16, #3080]
  4045e8:	add	x16, x16, #0xc08
  4045ec:	br	x17

00000000004045f0 <readdir64@plt>:
  4045f0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4045f4:	ldr	x17, [x16, #3088]
  4045f8:	add	x16, x16, #0xc10
  4045fc:	br	x17

0000000000404600 <sigkill_waitp@plt>:
  404600:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404604:	ldr	x17, [x16, #3096]
  404608:	add	x16, x16, #0xc18
  40460c:	br	x17

0000000000404610 <_exit@plt>:
  404610:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404614:	ldr	x17, [x16, #3104]
  404618:	add	x16, x16, #0xc20
  40461c:	br	x17

0000000000404620 <log_assert_failed_unreachable_realm@plt>:
  404620:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404624:	ldr	x17, [x16, #3112]
  404628:	add	x16, x16, #0xc28
  40462c:	br	x17

0000000000404630 <link_tmpfile@plt>:
  404630:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404634:	ldr	x17, [x16, #3120]
  404638:	add	x16, x16, #0xc30
  40463c:	br	x17

0000000000404640 <sd_event_source_set_enabled@plt>:
  404640:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404644:	ldr	x17, [x16, #3128]
  404648:	add	x16, x16, #0xc38
  40464c:	br	x17

0000000000404650 <umask@plt>:
  404650:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404654:	ldr	x17, [x16, #3136]
  404658:	add	x16, x16, #0xc40
  40465c:	br	x17

0000000000404660 <sd_bus_attach_event@plt>:
  404660:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404664:	ldr	x17, [x16, #3144]
  404668:	add	x16, x16, #0xc48
  40466c:	br	x17

0000000000404670 <path_is_absolute@plt>:
  404670:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404674:	ldr	x17, [x16, #3152]
  404678:	add	x16, x16, #0xc50
  40467c:	br	x17

0000000000404680 <image_ref@plt>:
  404680:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404684:	ldr	x17, [x16, #3160]
  404688:	add	x16, x16, #0xc58
  40468c:	br	x17

0000000000404690 <closedir@plt>:
  404690:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404694:	ldr	x17, [x16, #3168]
  404698:	add	x16, x16, #0xc60
  40469c:	br	x17

00000000004046a0 <sd_bus_set_exit_on_disconnect@plt>:
  4046a0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4046a4:	ldr	x17, [x16, #3176]
  4046a8:	add	x16, x16, #0xc68
  4046ac:	br	x17

00000000004046b0 <strncmp@plt>:
  4046b0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4046b4:	ldr	x17, [x16, #3184]
  4046b8:	add	x16, x16, #0xc70
  4046bc:	br	x17

00000000004046c0 <path_is_normalized@plt>:
  4046c0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4046c4:	ldr	x17, [x16, #3192]
  4046c8:	add	x16, x16, #0xc78
  4046cc:	br	x17

00000000004046d0 <image_find_harder@plt>:
  4046d0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4046d4:	ldr	x17, [x16, #3200]
  4046d8:	add	x16, x16, #0xc80
  4046dc:	br	x17

00000000004046e0 <sigprocmask_many@plt>:
  4046e0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4046e4:	ldr	x17, [x16, #3208]
  4046e8:	add	x16, x16, #0xc88
  4046ec:	br	x17

00000000004046f0 <abort@plt>:
  4046f0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4046f4:	ldr	x17, [x16, #3216]
  4046f8:	add	x16, x16, #0xc90
  4046fc:	br	x17

0000000000404700 <greedy_realloc@plt>:
  404700:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404704:	ldr	x17, [x16, #3224]
  404708:	add	x16, x16, #0xc98
  40470c:	br	x17

0000000000404710 <set_iterate@plt>:
  404710:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404714:	ldr	x17, [x16, #3232]
  404718:	add	x16, x16, #0xca0
  40471c:	br	x17

0000000000404720 <unlink_noerrno@plt>:
  404720:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404724:	ldr	x17, [x16, #3240]
  404728:	add	x16, x16, #0xca8
  40472c:	br	x17

0000000000404730 <unit_file_lookup_state@plt>:
  404730:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404734:	ldr	x17, [x16, #3248]
  404738:	add	x16, x16, #0xcb0
  40473c:	br	x17

0000000000404740 <strspn@plt>:
  404740:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404744:	ldr	x17, [x16, #3256]
  404748:	add	x16, x16, #0xcb8
  40474c:	br	x17

0000000000404750 <internal_hashmap_get@plt>:
  404750:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404754:	ldr	x17, [x16, #3264]
  404758:	add	x16, x16, #0xcc0
  40475c:	br	x17

0000000000404760 <rmdir@plt>:
  404760:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404764:	ldr	x17, [x16, #3272]
  404768:	add	x16, x16, #0xcc8
  40476c:	br	x17

0000000000404770 <__errno_location@plt>:
  404770:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404774:	ldr	x17, [x16, #3280]
  404778:	add	x16, x16, #0xcd0
  40477c:	br	x17

0000000000404780 <strv_free@plt>:
  404780:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404784:	ldr	x17, [x16, #3288]
  404788:	add	x16, x16, #0xcd8
  40478c:	br	x17

0000000000404790 <wait_for_terminate_and_check@plt>:
  404790:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404794:	ldr	x17, [x16, #3296]
  404798:	add	x16, x16, #0xce0
  40479c:	br	x17

00000000004047a0 <unit_file_state_to_string@plt>:
  4047a0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4047a4:	ldr	x17, [x16, #3304]
  4047a8:	add	x16, x16, #0xce8
  4047ac:	br	x17

00000000004047b0 <sd_event_add_defer@plt>:
  4047b0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4047b4:	ldr	x17, [x16, #3312]
  4047b8:	add	x16, x16, #0xcf0
  4047bc:	br	x17

00000000004047c0 <read@plt>:
  4047c0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4047c4:	ldr	x17, [x16, #3320]
  4047c8:	add	x16, x16, #0xcf8
  4047cc:	br	x17

00000000004047d0 <image_name_is_valid@plt>:
  4047d0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4047d4:	ldr	x17, [x16, #3328]
  4047d8:	add	x16, x16, #0xd00
  4047dc:	br	x17

00000000004047e0 <sigprocmask@plt>:
  4047e0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4047e4:	ldr	x17, [x16, #3336]
  4047e8:	add	x16, x16, #0xd08
  4047ec:	br	x17

00000000004047f0 <internal_set_new@plt>:
  4047f0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4047f4:	ldr	x17, [x16, #3344]
  4047f8:	add	x16, x16, #0xd10
  4047fc:	br	x17

0000000000404800 <sd_event_source_set_priority@plt>:
  404800:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404804:	ldr	x17, [x16, #3352]
  404808:	add	x16, x16, #0xd18
  40480c:	br	x17

0000000000404810 <sd_bus_add_object_vtable@plt>:
  404810:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404814:	ldr	x17, [x16, #3360]
  404818:	add	x16, x16, #0xd20
  40481c:	br	x17

0000000000404820 <strextend_with_separator@plt>:
  404820:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404824:	ldr	x17, [x16, #3368]
  404828:	add	x16, x16, #0xd28
  40482c:	br	x17

0000000000404830 <__lxstat64@plt>:
  404830:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404834:	ldr	x17, [x16, #3376]
  404838:	add	x16, x16, #0xd30
  40483c:	br	x17

0000000000404840 <strndup@plt>:
  404840:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404844:	ldr	x17, [x16, #3384]
  404848:	add	x16, x16, #0xd38
  40484c:	br	x17

0000000000404850 <sd_bus_get_current_message@plt>:
  404850:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404854:	ldr	x17, [x16, #3392]
  404858:	add	x16, x16, #0xd40
  40485c:	br	x17

0000000000404860 <sd_bus_error_setf@plt>:
  404860:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404864:	ldr	x17, [x16, #3400]
  404868:	add	x16, x16, #0xd48
  40486c:	br	x17

0000000000404870 <internal_hashmap_new@plt>:
  404870:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404874:	ldr	x17, [x16, #3408]
  404878:	add	x16, x16, #0xd50
  40487c:	br	x17

0000000000404880 <__stack_chk_fail@plt>:
  404880:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404884:	ldr	x17, [x16, #3416]
  404888:	add	x16, x16, #0xd58
  40488c:	br	x17

0000000000404890 <sd_bus_send@plt>:
  404890:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404894:	ldr	x17, [x16, #3424]
  404898:	add	x16, x16, #0xd60
  40489c:	br	x17

00000000004048a0 <conf_files_list_nulstr@plt>:
  4048a0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4048a4:	ldr	x17, [x16, #3432]
  4048a8:	add	x16, x16, #0xd68
  4048ac:	br	x17

00000000004048b0 <basename@plt>:
  4048b0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4048b4:	ldr	x17, [x16, #3440]
  4048b8:	add	x16, x16, #0xd70
  4048bc:	br	x17

00000000004048c0 <write@plt>:
  4048c0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4048c4:	ldr	x17, [x16, #3448]
  4048c8:	add	x16, x16, #0xd78
  4048cc:	br	x17

00000000004048d0 <path_join_internal@plt>:
  4048d0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4048d4:	ldr	x17, [x16, #3456]
  4048d8:	add	x16, x16, #0xd80
  4048dc:	br	x17

00000000004048e0 <socketpair@plt>:
  4048e0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4048e4:	ldr	x17, [x16, #3464]
  4048e8:	add	x16, x16, #0xd88
  4048ec:	br	x17

00000000004048f0 <btrfs_qgroup_set_limit@plt>:
  4048f0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4048f4:	ldr	x17, [x16, #3472]
  4048f8:	add	x16, x16, #0xd90
  4048fc:	br	x17

0000000000404900 <ask_password_agent_close@plt>:
  404900:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404904:	ldr	x17, [x16, #3480]
  404908:	add	x16, x16, #0xd98
  40490c:	br	x17

0000000000404910 <pager_close@plt>:
  404910:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404914:	ldr	x17, [x16, #3488]
  404918:	add	x16, x16, #0xda0
  40491c:	br	x17

0000000000404920 <set_put_strdup@plt>:
  404920:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404924:	ldr	x17, [x16, #3496]
  404928:	add	x16, x16, #0xda8
  40492c:	br	x17

0000000000404930 <chase_symlinks_and_opendir@plt>:
  404930:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404934:	ldr	x17, [x16, #3504]
  404938:	add	x16, x16, #0xdb0
  40493c:	br	x17

0000000000404940 <memcmp@plt>:
  404940:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404944:	ldr	x17, [x16, #3512]
  404948:	add	x16, x16, #0xdb8
  40494c:	br	x17

0000000000404950 <sd_bus_error_free@plt>:
  404950:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404954:	ldr	x17, [x16, #3520]
  404958:	add	x16, x16, #0xdc0
  40495c:	br	x17

0000000000404960 <cmsg_close_all@plt>:
  404960:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404964:	ldr	x17, [x16, #3528]
  404968:	add	x16, x16, #0xdc8
  40496c:	br	x17

0000000000404970 <sd_bus_call@plt>:
  404970:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404974:	ldr	x17, [x16, #3536]
  404978:	add	x16, x16, #0xdd0
  40497c:	br	x17

0000000000404980 <strv_find@plt>:
  404980:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404984:	ldr	x17, [x16, #3544]
  404988:	add	x16, x16, #0xdd8
  40498c:	br	x17

0000000000404990 <sd_notify@plt>:
  404990:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404994:	ldr	x17, [x16, #3552]
  404998:	add	x16, x16, #0xde0
  40499c:	br	x17

00000000004049a0 <malloc@plt>:
  4049a0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4049a4:	ldr	x17, [x16, #3560]
  4049a8:	add	x16, x16, #0xde8
  4049ac:	br	x17

00000000004049b0 <lookup_paths_init@plt>:
  4049b0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4049b4:	ldr	x17, [x16, #3568]
  4049b8:	add	x16, x16, #0xdf0
  4049bc:	br	x17

00000000004049c0 <internal_hashmap_size@plt>:
  4049c0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4049c4:	ldr	x17, [x16, #3576]
  4049c8:	add	x16, x16, #0xdf8
  4049cc:	br	x17

00000000004049d0 <log_internal_realm@plt>:
  4049d0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4049d4:	ldr	x17, [x16, #3584]
  4049d8:	add	x16, x16, #0xe00
  4049dc:	br	x17

00000000004049e0 <mkdtemp_malloc@plt>:
  4049e0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4049e4:	ldr	x17, [x16, #3592]
  4049e8:	add	x16, x16, #0xe08
  4049ec:	br	x17

00000000004049f0 <sd_bus_default_system@plt>:
  4049f0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  4049f4:	ldr	x17, [x16, #3600]
  4049f8:	add	x16, x16, #0xe10
  4049fc:	br	x17

0000000000404a00 <sd_bus_flush_close_unref@plt>:
  404a00:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a04:	ldr	x17, [x16, #3608]
  404a08:	add	x16, x16, #0xe18
  404a0c:	br	x17

0000000000404a10 <pipe2@plt>:
  404a10:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a14:	ldr	x17, [x16, #3616]
  404a18:	add	x16, x16, #0xe20
  404a1c:	br	x17

0000000000404a20 <string_hash_func@plt>:
  404a20:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a24:	ldr	x17, [x16, #3624]
  404a28:	add	x16, x16, #0xe28
  404a2c:	br	x17

0000000000404a30 <sd_bus_path_encode@plt>:
  404a30:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a34:	ldr	x17, [x16, #3632]
  404a38:	add	x16, x16, #0xe30
  404a3c:	br	x17

0000000000404a40 <dissect_image@plt>:
  404a40:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a44:	ldr	x17, [x16, #3640]
  404a48:	add	x16, x16, #0xe38
  404a4c:	br	x17

0000000000404a50 <sd_bus_add_fallback_vtable@plt>:
  404a50:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a54:	ldr	x17, [x16, #3648]
  404a58:	add	x16, x16, #0xe40
  404a5c:	br	x17

0000000000404a60 <internal_hashmap_clear@plt>:
  404a60:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a64:	ldr	x17, [x16, #3656]
  404a68:	add	x16, x16, #0xe48
  404a6c:	br	x17

0000000000404a70 <hashmap_put@plt>:
  404a70:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a74:	ldr	x17, [x16, #3664]
  404a78:	add	x16, x16, #0xe50
  404a7c:	br	x17

0000000000404a80 <sd_bus_path_decode@plt>:
  404a80:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a84:	ldr	x17, [x16, #3672]
  404a88:	add	x16, x16, #0xe58
  404a8c:	br	x17

0000000000404a90 <bus_property_get_bool@plt>:
  404a90:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404a94:	ldr	x17, [x16, #3680]
  404a98:	add	x16, x16, #0xe60
  404a9c:	br	x17

0000000000404aa0 <sigchld_code_to_string@plt>:
  404aa0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404aa4:	ldr	x17, [x16, #3688]
  404aa8:	add	x16, x16, #0xe68
  404aac:	br	x17

0000000000404ab0 <endswith@plt>:
  404ab0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404ab4:	ldr	x17, [x16, #3696]
  404ab8:	add	x16, x16, #0xe70
  404abc:	br	x17

0000000000404ac0 <sd_bus_reply_method_error@plt>:
  404ac0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404ac4:	ldr	x17, [x16, #3704]
  404ac8:	add	x16, x16, #0xe78
  404acc:	br	x17

0000000000404ad0 <path_simplify@plt>:
  404ad0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404ad4:	ldr	x17, [x16, #3712]
  404ad8:	add	x16, x16, #0xe80
  404adc:	br	x17

0000000000404ae0 <strcmp@plt>:
  404ae0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404ae4:	ldr	x17, [x16, #3720]
  404ae8:	add	x16, x16, #0xe88
  404aec:	br	x17

0000000000404af0 <dissected_image_mount@plt>:
  404af0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404af4:	ldr	x17, [x16, #3728]
  404af8:	add	x16, x16, #0xe90
  404afc:	br	x17

0000000000404b00 <sd_bus_get_property_string@plt>:
  404b00:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b04:	ldr	x17, [x16, #3736]
  404b08:	add	x16, x16, #0xe98
  404b0c:	br	x17

0000000000404b10 <recvmsg@plt>:
  404b10:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b14:	ldr	x17, [x16, #3744]
  404b18:	add	x16, x16, #0xea0
  404b1c:	br	x17

0000000000404b20 <dissected_image_unref@plt>:
  404b20:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b24:	ldr	x17, [x16, #3752]
  404b28:	add	x16, x16, #0xea8
  404b2c:	br	x17

0000000000404b30 <opendir@plt>:
  404b30:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b34:	ldr	x17, [x16, #3760]
  404b38:	add	x16, x16, #0xeb0
  404b3c:	br	x17

0000000000404b40 <internal_hashmap_iterate@plt>:
  404b40:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b44:	ldr	x17, [x16, #3768]
  404b48:	add	x16, x16, #0xeb8
  404b4c:	br	x17

0000000000404b50 <strdup@plt>:
  404b50:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b54:	ldr	x17, [x16, #3776]
  404b58:	add	x16, x16, #0xec0
  404b5c:	br	x17

0000000000404b60 <calloc@plt>:
  404b60:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b64:	ldr	x17, [x16, #3784]
  404b68:	add	x16, x16, #0xec8
  404b6c:	br	x17

0000000000404b70 <safe_fork_full@plt>:
  404b70:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b74:	ldr	x17, [x16, #3792]
  404b78:	add	x16, x16, #0xed0
  404b7c:	br	x17

0000000000404b80 <read_full_stream_full@plt>:
  404b80:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b84:	ldr	x17, [x16, #3800]
  404b88:	add	x16, x16, #0xed8
  404b8c:	br	x17

0000000000404b90 <strchr@plt>:
  404b90:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404b94:	ldr	x17, [x16, #3808]
  404b98:	add	x16, x16, #0xee0
  404b9c:	br	x17

0000000000404ba0 <btrfs_subvol_get_subtree_quota_fd@plt>:
  404ba0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404ba4:	ldr	x17, [x16, #3816]
  404ba8:	add	x16, x16, #0xee8
  404bac:	br	x17

0000000000404bb0 <sd_bus_message_append_strv@plt>:
  404bb0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404bb4:	ldr	x17, [x16, #3824]
  404bb8:	add	x16, x16, #0xef0
  404bbc:	br	x17

0000000000404bc0 <mkdir@plt>:
  404bc0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404bc4:	ldr	x17, [x16, #3832]
  404bc8:	add	x16, x16, #0xef8
  404bcc:	br	x17

0000000000404bd0 <btrfs_subvol_set_subtree_quota_limit@plt>:
  404bd0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404bd4:	ldr	x17, [x16, #3840]
  404bd8:	add	x16, x16, #0xf00
  404bdc:	br	x17

0000000000404be0 <bus_reply_pair_array@plt>:
  404be0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404be4:	ldr	x17, [x16, #3848]
  404be8:	add	x16, x16, #0xf08
  404bec:	br	x17

0000000000404bf0 <sd_bus_add_node_enumerator@plt>:
  404bf0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404bf4:	ldr	x17, [x16, #3856]
  404bf8:	add	x16, x16, #0xf10
  404bfc:	br	x17

0000000000404c00 <unlinkat@plt>:
  404c00:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c04:	ldr	x17, [x16, #3864]
  404c08:	add	x16, x16, #0xf18
  404c0c:	br	x17

0000000000404c10 <free@plt>:
  404c10:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c14:	ldr	x17, [x16, #3872]
  404c18:	add	x16, x16, #0xf20
  404c1c:	br	x17

0000000000404c20 <image_set_limit@plt>:
  404c20:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c24:	ldr	x17, [x16, #3880]
  404c28:	add	x16, x16, #0xf28
  404c2c:	br	x17

0000000000404c30 <copy_bytes_full@plt>:
  404c30:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c34:	ldr	x17, [x16, #3888]
  404c38:	add	x16, x16, #0xf30
  404c3c:	br	x17

0000000000404c40 <open_os_release@plt>:
  404c40:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c44:	ldr	x17, [x16, #3896]
  404c48:	add	x16, x16, #0xf38
  404c4c:	br	x17

0000000000404c50 <sendmsg@plt>:
  404c50:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c54:	ldr	x17, [x16, #3904]
  404c58:	add	x16, x16, #0xf40
  404c5c:	br	x17

0000000000404c60 <internal_hashmap_ensure_allocated@plt>:
  404c60:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c64:	ldr	x17, [x16, #3912]
  404c68:	add	x16, x16, #0xf48
  404c6c:	br	x17

0000000000404c70 <image_from_path@plt>:
  404c70:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c74:	ldr	x17, [x16, #3920]
  404c78:	add	x16, x16, #0xf50
  404c7c:	br	x17

0000000000404c80 <fdopen_unlocked@plt>:
  404c80:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c84:	ldr	x17, [x16, #3928]
  404c88:	add	x16, x16, #0xf58
  404c8c:	br	x17

0000000000404c90 <image_remove@plt>:
  404c90:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404c94:	ldr	x17, [x16, #3936]
  404c98:	add	x16, x16, #0xf60
  404c9c:	br	x17

0000000000404ca0 <sd_event_unref@plt>:
  404ca0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404ca4:	ldr	x17, [x16, #3944]
  404ca8:	add	x16, x16, #0xf68
  404cac:	br	x17

0000000000404cb0 <mac_selinux_finish@plt>:
  404cb0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404cb4:	ldr	x17, [x16, #3952]
  404cb8:	add	x16, x16, #0xf70
  404cbc:	br	x17

0000000000404cc0 <image_read_metadata@plt>:
  404cc0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404cc4:	ldr	x17, [x16, #3960]
  404cc8:	add	x16, x16, #0xf78
  404ccc:	br	x17

0000000000404cd0 <image_discover@plt>:
  404cd0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404cd4:	ldr	x17, [x16, #3968]
  404cd8:	add	x16, x16, #0xf80
  404cdc:	br	x17

0000000000404ce0 <unit_file_exists@plt>:
  404ce0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404ce4:	ldr	x17, [x16, #3976]
  404ce8:	add	x16, x16, #0xf88
  404cec:	br	x17

0000000000404cf0 <sd_event_add_signal@plt>:
  404cf0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404cf4:	ldr	x17, [x16, #3984]
  404cf8:	add	x16, x16, #0xf90
  404cfc:	br	x17

0000000000404d00 <open64@plt>:
  404d00:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d04:	ldr	x17, [x16, #3992]
  404d08:	add	x16, x16, #0xf98
  404d0c:	br	x17

0000000000404d10 <sd_bus_error_set_errno@plt>:
  404d10:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d14:	ldr	x17, [x16, #4000]
  404d18:	add	x16, x16, #0xfa0
  404d1c:	br	x17

0000000000404d20 <set_put@plt>:
  404d20:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d24:	ldr	x17, [x16, #4008]
  404d28:	add	x16, x16, #0xfa8
  404d2c:	br	x17

0000000000404d30 <strlen@plt>:
  404d30:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d34:	ldr	x17, [x16, #4016]
  404d38:	add	x16, x16, #0xfb0
  404d3c:	br	x17

0000000000404d40 <mkdir_parents@plt>:
  404d40:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d44:	ldr	x17, [x16, #4024]
  404d48:	add	x16, x16, #0xfb8
  404d4c:	br	x17

0000000000404d50 <sd_bus_message_ref@plt>:
  404d50:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d54:	ldr	x17, [x16, #4032]
  404d58:	add	x16, x16, #0xfc0
  404d5c:	br	x17

0000000000404d60 <bus_verify_polkit_async@plt>:
  404d60:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d64:	ldr	x17, [x16, #4040]
  404d68:	add	x16, x16, #0xfc8
  404d6c:	br	x17

0000000000404d70 <unit_name_is_valid@plt>:
  404d70:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d74:	ldr	x17, [x16, #4048]
  404d78:	add	x16, x16, #0xfd0
  404d7c:	br	x17

0000000000404d80 <special_glyph@plt>:
  404d80:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d84:	ldr	x17, [x16, #4056]
  404d88:	add	x16, x16, #0xfd8
  404d8c:	br	x17

0000000000404d90 <log_get_max_level_realm@plt>:
  404d90:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404d94:	ldr	x17, [x16, #4064]
  404d98:	add	x16, x16, #0xfe0
  404d9c:	br	x17

0000000000404da0 <sd_bus_message_close_container@plt>:
  404da0:	adrp	x16, 420000 <__FRAME_END__+0xfb68>
  404da4:	ldr	x17, [x16, #4072]
  404da8:	add	x16, x16, #0xfe8
  404dac:	br	x17

Disassembly of section .text:

0000000000404db0 <main>:
  404db0:	stp	x29, x30, [sp, #-48]!
  404db4:	adrp	x2, 421000 <saved_argv@@SD_SHARED>
  404db8:	adrp	x3, 421000 <saved_argv@@SD_SHARED>
  404dbc:	mov	x29, sp
  404dc0:	str	w0, [x2, #8]
  404dc4:	str	x1, [x3]
  404dc8:	stp	x19, x20, [sp, #16]
  404dcc:	mov	w20, w0
  404dd0:	str	x21, [sp, #32]
  404dd4:	bl	404510 <log_setup_service@plt>
  404dd8:	mov	w0, #0x12                  	// #18
  404ddc:	bl	404650 <umask@plt>
  404de0:	cmp	w20, #0x1
  404de4:	b.eq	404e8c <main+0xdc>  // b.none
  404de8:	mov	w0, #0x0                   	// #0
  404dec:	mov	w20, #0xffffffea            	// #-22
  404df0:	bl	404d90 <log_get_max_level_realm@plt>
  404df4:	cmp	w0, #0x2
  404df8:	b.gt	404e58 <main+0xa8>
  404dfc:	bl	404900 <ask_password_agent_close@plt>
  404e00:	bl	4043c0 <polkit_agent_close@plt>
  404e04:	bl	404910 <pager_close@plt>
  404e08:	bl	404cb0 <mac_selinux_finish@plt>
  404e0c:	adrp	x0, 40f000 <__func__.9810+0xa0>
  404e10:	ldr	x19, [x0, #616]
  404e14:	cbz	x19, 404e44 <main+0x94>
  404e18:	adrp	x0, 40f000 <__func__.9810+0xa0>
  404e1c:	add	x19, x19, #0x7
  404e20:	and	x19, x19, #0xfffffffffffffff8
  404e24:	ldr	x21, [x0, #624]
  404e28:	cmp	x19, x21
  404e2c:	b.cs	404e44 <main+0x94>  // b.hs, b.nlast
  404e30:	ldp	x0, x1, [x19]
  404e34:	add	x19, x19, #0x10
  404e38:	blr	x1
  404e3c:	cmp	x19, x21
  404e40:	b.cc	404e30 <main+0x80>  // b.lo, b.ul, b.last
  404e44:	lsr	w0, w20, #31
  404e48:	ldp	x19, x20, [sp, #16]
  404e4c:	ldr	x21, [sp, #32]
  404e50:	ldp	x29, x30, [sp], #48
  404e54:	ret
  404e58:	mov	w1, #0x16                  	// #22
  404e5c:	adrp	x5, 40e000 <manager_vtable+0x108>
  404e60:	movk	w1, #0x4000, lsl #16
  404e64:	add	x5, x5, #0xf90
  404e68:	adrp	x4, 40f000 <__func__.9810+0xa0>
  404e6c:	adrp	x2, 40e000 <manager_vtable+0x108>
  404e70:	add	x4, x4, #0x2c0
  404e74:	add	x2, x2, #0xf73
  404e78:	mov	w3, #0x8a                  	// #138
  404e7c:	mov	w0, #0x3                   	// #3
  404e80:	bl	4049d0 <log_internal_realm@plt>
  404e84:	mov	w20, w0
  404e88:	b	404dfc <main+0x4c>
  404e8c:	mov	w5, #0xffffffff            	// #-1
  404e90:	mov	w4, #0x2                   	// #2
  404e94:	mov	w3, #0xf                   	// #15
  404e98:	mov	w2, #0x11                  	// #17
  404e9c:	mov	x1, #0x0                   	// #0
  404ea0:	mov	w0, #0x0                   	// #0
  404ea4:	bl	4046e0 <sigprocmask_many@plt>
  404ea8:	tbnz	w0, #31, 40517c <main+0x3cc>
  404eac:	mov	x1, #0x38                  	// #56
  404eb0:	mov	x0, #0x1                   	// #1
  404eb4:	bl	404b60 <calloc@plt>
  404eb8:	mov	x21, x0
  404ebc:	cbz	x0, 40538c <main+0x5dc>
  404ec0:	bl	4043e0 <sd_event_default@plt>
  404ec4:	mov	w19, w0
  404ec8:	tbnz	w0, #31, 4050ac <main+0x2fc>
  404ecc:	ldr	x0, [x21]
  404ed0:	mov	x4, #0x0                   	// #0
  404ed4:	mov	x3, #0x0                   	// #0
  404ed8:	mov	w2, #0x2                   	// #2
  404edc:	mov	x1, #0x0                   	// #0
  404ee0:	bl	404cf0 <sd_event_add_signal@plt>
  404ee4:	mov	w19, w0
  404ee8:	tbnz	w0, #31, 4050ac <main+0x2fc>
  404eec:	ldr	x0, [x21]
  404ef0:	mov	x4, #0x0                   	// #0
  404ef4:	mov	x3, #0x0                   	// #0
  404ef8:	mov	w2, #0xf                   	// #15
  404efc:	mov	x1, #0x0                   	// #0
  404f00:	bl	404cf0 <sd_event_add_signal@plt>
  404f04:	mov	w19, w0
  404f08:	tbnz	w0, #31, 4050ac <main+0x2fc>
  404f0c:	ldr	x0, [x21]
  404f10:	mov	w1, w20
  404f14:	bl	404310 <sd_event_set_watchdog@plt>
  404f18:	ldr	x0, [x21, #8]
  404f1c:	cbnz	x0, 405234 <main+0x484>
  404f20:	add	x0, x21, #0x8
  404f24:	bl	4049f0 <sd_bus_default_system@plt>
  404f28:	mov	w19, w0
  404f2c:	tbnz	w0, #31, 405100 <main+0x350>
  404f30:	ldr	x0, [x21, #8]
  404f34:	mov	x5, x21
  404f38:	adrp	x4, 40d000 <_fini+0x91c>
  404f3c:	adrp	x3, 40f000 <__func__.9810+0xa0>
  404f40:	add	x4, x4, #0xef8
  404f44:	add	x3, x3, #0x58
  404f48:	adrp	x2, 40f000 <__func__.9810+0xa0>
  404f4c:	mov	x1, #0x0                   	// #0
  404f50:	add	x2, x2, #0x80
  404f54:	bl	404810 <sd_bus_add_object_vtable@plt>
  404f58:	mov	w19, w0
  404f5c:	tbnz	w0, #31, 4050d4 <main+0x324>
  404f60:	ldr	x0, [x21, #8]
  404f64:	adrp	x20, 40e000 <manager_vtable+0x108>
  404f68:	add	x20, x20, #0x2f8
  404f6c:	mov	x6, x21
  404f70:	mov	x2, x20
  404f74:	adrp	x5, 40b000 <bus_image_common_get_metadata+0x130>
  404f78:	adrp	x4, 40e000 <manager_vtable+0x108>
  404f7c:	add	x5, x5, #0xab8
  404f80:	add	x4, x4, #0x900
  404f84:	adrp	x3, 40f000 <__func__.9810+0xa0>
  404f88:	mov	x1, #0x0                   	// #0
  404f8c:	add	x3, x3, #0xc8
  404f90:	bl	404a50 <sd_bus_add_fallback_vtable@plt>
  404f94:	mov	w19, w0
  404f98:	tbnz	w0, #31, 4051f4 <main+0x444>
  404f9c:	ldr	x0, [x21, #8]
  404fa0:	mov	x2, x20
  404fa4:	mov	x4, x21
  404fa8:	adrp	x3, 40b000 <bus_image_common_get_metadata+0x130>
  404fac:	mov	x1, #0x0                   	// #0
  404fb0:	add	x3, x3, #0xc40
  404fb4:	bl	404bf0 <sd_bus_add_node_enumerator@plt>
  404fb8:	mov	w19, w0
  404fbc:	tbnz	w0, #31, 4052b8 <main+0x508>
  404fc0:	ldr	x0, [x21, #8]
  404fc4:	adrp	x20, 40f000 <__func__.9810+0xa0>
  404fc8:	add	x20, x20, #0x138
  404fcc:	mov	x5, #0x0                   	// #0
  404fd0:	mov	x2, x20
  404fd4:	mov	x4, #0x0                   	// #0
  404fd8:	mov	x3, #0x0                   	// #0
  404fdc:	mov	x1, #0x0                   	// #0
  404fe0:	bl	404360 <sd_bus_request_name_async@plt>
  404fe4:	mov	w19, w0
  404fe8:	tbnz	w0, #31, 4052dc <main+0x52c>
  404fec:	ldp	x1, x0, [x21]
  404ff0:	mov	w2, #0x0                   	// #0
  404ff4:	bl	404660 <sd_bus_attach_event@plt>
  404ff8:	mov	w19, w0
  404ffc:	tbnz	w0, #31, 40531c <main+0x56c>
  405000:	ldr	x0, [x21, #8]
  405004:	mov	w1, #0x1                   	// #1
  405008:	bl	4046a0 <sd_bus_set_exit_on_disconnect@plt>
  40500c:	mov	w0, #0x0                   	// #0
  405010:	bl	404d90 <log_get_max_level_realm@plt>
  405014:	cmp	w0, #0x6
  405018:	b.le	40504c <main+0x29c>
  40501c:	bl	404470 <getpid_cached@plt>
  405020:	mov	w6, w0
  405024:	adrp	x5, 40f000 <__func__.9810+0xa0>
  405028:	adrp	x4, 40f000 <__func__.9810+0xa0>
  40502c:	adrp	x2, 40e000 <manager_vtable+0x108>
  405030:	add	x5, x5, #0x1c8
  405034:	add	x4, x4, #0x2c0
  405038:	add	x2, x2, #0xf73
  40503c:	mov	w3, #0x96                  	// #150
  405040:	mov	w1, #0x0                   	// #0
  405044:	mov	w0, #0x7                   	// #7
  405048:	bl	4049d0 <log_internal_realm@plt>
  40504c:	adrp	x1, 40f000 <__func__.9810+0xa0>
  405050:	mov	w0, #0x0                   	// #0
  405054:	add	x1, x1, #0x218
  405058:	bl	404990 <sd_notify@plt>
  40505c:	ldp	x0, x1, [x21]
  405060:	mov	x3, #0xc380                	// #50048
  405064:	mov	x2, x20
  405068:	mov	x5, x21
  40506c:	movk	x3, #0x1c9, lsl #16
  405070:	adrp	x4, 40c000 <manager_image_cache_discover+0x50>
  405074:	add	x4, x4, #0x5d0
  405078:	bl	4043f0 <bus_event_loop_with_idle@plt>
  40507c:	mov	w20, w0
  405080:	adrp	x1, 40f000 <__func__.9810+0xa0>
  405084:	add	x1, x1, #0x240
  405088:	mov	w0, #0x0                   	// #0
  40508c:	bl	404990 <sd_notify@plt>
  405090:	mov	w0, #0x0                   	// #0
  405094:	bl	404d90 <log_get_max_level_realm@plt>
  405098:	cmp	w0, #0x6
  40509c:	b.gt	4051c0 <main+0x410>
  4050a0:	mov	x0, x21
  4050a4:	bl	40c5e0 <manager_unref>
  4050a8:	b	404dfc <main+0x4c>
  4050ac:	mov	x0, x21
  4050b0:	bl	40c5e0 <manager_unref>
  4050b4:	mov	w0, #0x0                   	// #0
  4050b8:	bl	404d90 <log_get_max_level_realm@plt>
  4050bc:	cmp	w0, #0x2
  4050c0:	b.gt	40514c <main+0x39c>
  4050c4:	neg	w20, w19
  4050c8:	and	w20, w20, #0xff
  4050cc:	neg	w20, w20
  4050d0:	b	404dfc <main+0x4c>
  4050d4:	mov	w0, #0x0                   	// #0
  4050d8:	bl	404d90 <log_get_max_level_realm@plt>
  4050dc:	cmp	w0, #0x2
  4050e0:	b.gt	405288 <main+0x4d8>
  4050e4:	neg	w19, w19
  4050e8:	and	w19, w19, #0xff
  4050ec:	neg	w19, w19
  4050f0:	cbnz	w19, 4051a0 <main+0x3f0>
  4050f4:	adrp	x20, 40f000 <__func__.9810+0xa0>
  4050f8:	add	x20, x20, #0x138
  4050fc:	b	40504c <main+0x29c>
  405100:	mov	w0, #0x0                   	// #0
  405104:	bl	404d90 <log_get_max_level_realm@plt>
  405108:	cmp	w0, #0x2
  40510c:	b.le	4050e4 <main+0x334>
  405110:	mov	w1, w19
  405114:	adrp	x5, 40f000 <__func__.9810+0xa0>
  405118:	adrp	x4, 40f000 <__func__.9810+0xa0>
  40511c:	add	x5, x5, #0x30
  405120:	add	x4, x4, #0x2a8
  405124:	adrp	x2, 40e000 <manager_vtable+0x108>
  405128:	mov	w3, #0x49                  	// #73
  40512c:	add	x2, x2, #0xf73
  405130:	mov	w0, #0x3                   	// #3
  405134:	bl	4049d0 <log_internal_realm@plt>
  405138:	mov	w19, w0
  40513c:	tbnz	w19, #31, 4051a0 <main+0x3f0>
  405140:	adrp	x20, 40f000 <__func__.9810+0xa0>
  405144:	add	x20, x20, #0x138
  405148:	b	40500c <main+0x25c>
  40514c:	mov	w1, w19
  405150:	adrp	x5, 40f000 <__func__.9810+0xa0>
  405154:	adrp	x4, 40f000 <__func__.9810+0xa0>
  405158:	add	x5, x5, #0x0
  40515c:	add	x4, x4, #0x2c0
  405160:	adrp	x2, 40e000 <manager_vtable+0x108>
  405164:	mov	w3, #0x90                  	// #144
  405168:	add	x2, x2, #0xf73
  40516c:	mov	w0, #0x3                   	// #3
  405170:	bl	4049d0 <log_internal_realm@plt>
  405174:	mov	w20, w0
  405178:	b	404dfc <main+0x4c>
  40517c:	adrp	x4, 40f000 <__func__.9810+0xa0>
  405180:	adrp	x1, 40e000 <manager_vtable+0x108>
  405184:	adrp	x2, 40e000 <manager_vtable+0x108>
  405188:	add	x4, x4, #0x2a0
  40518c:	add	x1, x1, #0xfb8
  405190:	add	x2, x2, #0xf73
  405194:	mov	w3, #0x8c                  	// #140
  405198:	mov	w0, #0x0                   	// #0
  40519c:	bl	4045c0 <log_assert_failed_realm@plt>
  4051a0:	mov	w0, #0x0                   	// #0
  4051a4:	bl	404d90 <log_get_max_level_realm@plt>
  4051a8:	cmp	w0, #0x2
  4051ac:	b.gt	405258 <main+0x4a8>
  4051b0:	neg	w20, w19
  4051b4:	and	w20, w20, #0xff
  4051b8:	neg	w20, w20
  4051bc:	b	4050a0 <main+0x2f0>
  4051c0:	bl	404470 <getpid_cached@plt>
  4051c4:	mov	w6, w0
  4051c8:	adrp	x5, 40f000 <__func__.9810+0xa0>
  4051cc:	adrp	x4, 40f000 <__func__.9810+0xa0>
  4051d0:	add	x5, x5, #0x1f0
  4051d4:	add	x4, x4, #0x2c0
  4051d8:	adrp	x2, 40e000 <manager_vtable+0x108>
  4051dc:	mov	w3, #0xa0                  	// #160
  4051e0:	add	x2, x2, #0xf73
  4051e4:	mov	w1, #0x0                   	// #0
  4051e8:	mov	w0, #0x7                   	// #7
  4051ec:	bl	4049d0 <log_internal_realm@plt>
  4051f0:	b	4050a0 <main+0x2f0>
  4051f4:	mov	w0, #0x0                   	// #0
  4051f8:	bl	404d90 <log_get_max_level_realm@plt>
  4051fc:	cmp	w0, #0x2
  405200:	b.le	4050e4 <main+0x334>
  405204:	mov	w1, w19
  405208:	adrp	x5, 40f000 <__func__.9810+0xa0>
  40520c:	adrp	x4, 40f000 <__func__.9810+0xa0>
  405210:	add	x5, x5, #0xe8
  405214:	add	x4, x4, #0x2a8
  405218:	adrp	x2, 40e000 <manager_vtable+0x108>
  40521c:	mov	w3, #0x51                  	// #81
  405220:	add	x2, x2, #0xf73
  405224:	mov	w0, #0x3                   	// #3
  405228:	bl	4049d0 <log_internal_realm@plt>
  40522c:	mov	w19, w0
  405230:	b	40513c <main+0x38c>
  405234:	adrp	x4, 40f000 <__func__.9810+0xa0>
  405238:	adrp	x1, 40f000 <__func__.9810+0xa0>
  40523c:	adrp	x2, 40e000 <manager_vtable+0x108>
  405240:	add	x4, x4, #0x288
  405244:	add	x1, x1, #0x28
  405248:	add	x2, x2, #0xf73
  40524c:	mov	w3, #0x45                  	// #69
  405250:	mov	w0, #0x0                   	// #0
  405254:	bl	4045c0 <log_assert_failed_realm@plt>
  405258:	mov	w1, w19
  40525c:	adrp	x5, 40f000 <__func__.9810+0xa0>
  405260:	adrp	x4, 40f000 <__func__.9810+0xa0>
  405264:	add	x5, x5, #0x1a0
  405268:	add	x4, x4, #0x2c0
  40526c:	adrp	x2, 40e000 <manager_vtable+0x108>
  405270:	mov	w3, #0x94                  	// #148
  405274:	add	x2, x2, #0xf73
  405278:	mov	w0, #0x3                   	// #3
  40527c:	bl	4049d0 <log_internal_realm@plt>
  405280:	mov	w20, w0
  405284:	b	4050a0 <main+0x2f0>
  405288:	mov	w1, w19
  40528c:	adrp	x5, 40f000 <__func__.9810+0xa0>
  405290:	adrp	x4, 40f000 <__func__.9810+0xa0>
  405294:	add	x5, x5, #0xa0
  405298:	add	x4, x4, #0x2a8
  40529c:	adrp	x2, 40e000 <manager_vtable+0x108>
  4052a0:	mov	w3, #0x4d                  	// #77
  4052a4:	add	x2, x2, #0xf73
  4052a8:	mov	w0, #0x3                   	// #3
  4052ac:	bl	4049d0 <log_internal_realm@plt>
  4052b0:	mov	w19, w0
  4052b4:	b	40513c <main+0x38c>
  4052b8:	mov	w0, #0x0                   	// #0
  4052bc:	bl	404d90 <log_get_max_level_realm@plt>
  4052c0:	cmp	w0, #0x2
  4052c4:	b.gt	40535c <main+0x5ac>
  4052c8:	neg	w19, w19
  4052cc:	and	w19, w19, #0xff
  4052d0:	neg	w19, w19
  4052d4:	cbz	w19, 405140 <main+0x390>
  4052d8:	b	4051b0 <main+0x400>
  4052dc:	mov	w0, #0x0                   	// #0
  4052e0:	bl	404d90 <log_get_max_level_realm@plt>
  4052e4:	cmp	w0, #0x2
  4052e8:	b.le	4052c8 <main+0x518>
  4052ec:	mov	w1, w19
  4052f0:	adrp	x5, 40f000 <__func__.9810+0xa0>
  4052f4:	adrp	x4, 40f000 <__func__.9810+0xa0>
  4052f8:	add	x5, x5, #0x158
  4052fc:	add	x4, x4, #0x2a8
  405300:	adrp	x2, 40e000 <manager_vtable+0x108>
  405304:	mov	w3, #0x59                  	// #89
  405308:	add	x2, x2, #0xf73
  40530c:	mov	w0, #0x3                   	// #3
  405310:	bl	4049d0 <log_internal_realm@plt>
  405314:	mov	w19, w0
  405318:	b	40513c <main+0x38c>
  40531c:	mov	w0, #0x0                   	// #0
  405320:	bl	404d90 <log_get_max_level_realm@plt>
  405324:	cmp	w0, #0x2
  405328:	b.le	4052c8 <main+0x518>
  40532c:	mov	w1, w19
  405330:	adrp	x5, 40f000 <__func__.9810+0xa0>
  405334:	adrp	x4, 40f000 <__func__.9810+0xa0>
  405338:	add	x5, x5, #0x178
  40533c:	add	x4, x4, #0x2a8
  405340:	adrp	x2, 40e000 <manager_vtable+0x108>
  405344:	mov	w3, #0x5d                  	// #93
  405348:	add	x2, x2, #0xf73
  40534c:	mov	w0, #0x3                   	// #3
  405350:	bl	4049d0 <log_internal_realm@plt>
  405354:	mov	w19, w0
  405358:	b	40513c <main+0x38c>
  40535c:	mov	w1, w19
  405360:	adrp	x5, 40f000 <__func__.9810+0xa0>
  405364:	adrp	x4, 40f000 <__func__.9810+0xa0>
  405368:	add	x5, x5, #0x110
  40536c:	add	x4, x4, #0x2a8
  405370:	adrp	x2, 40e000 <manager_vtable+0x108>
  405374:	mov	w3, #0x55                  	// #85
  405378:	add	x2, x2, #0xf73
  40537c:	mov	w0, #0x3                   	// #3
  405380:	bl	4049d0 <log_internal_realm@plt>
  405384:	mov	w19, w0
  405388:	b	40513c <main+0x38c>
  40538c:	mov	w19, #0xfffffff4            	// #-12
  405390:	b	4050b4 <main+0x304>

0000000000405394 <_start>:
  405394:	mov	x29, #0x0                   	// #0
  405398:	mov	x30, #0x0                   	// #0
  40539c:	mov	x5, x0
  4053a0:	ldr	x1, [sp]
  4053a4:	add	x2, sp, #0x8
  4053a8:	mov	x6, sp
  4053ac:	movz	x0, #0x0, lsl #48
  4053b0:	movk	x0, #0x0, lsl #32
  4053b4:	movk	x0, #0x40, lsl #16
  4053b8:	movk	x0, #0x4db0
  4053bc:	movz	x3, #0x0, lsl #48
  4053c0:	movk	x3, #0x0, lsl #32
  4053c4:	movk	x3, #0x40, lsl #16
  4053c8:	movk	x3, #0xc660
  4053cc:	movz	x4, #0x0, lsl #48
  4053d0:	movk	x4, #0x0, lsl #32
  4053d4:	movk	x4, #0x40, lsl #16
  4053d8:	movk	x4, #0xc6e0
  4053dc:	bl	404300 <__libc_start_main@plt>
  4053e0:	bl	4046f0 <abort@plt>

00000000004053e4 <call_weak_fn>:
  4053e4:	adrp	x0, 420000 <__FRAME_END__+0xfb68>
  4053e8:	ldr	x0, [x0, #4088]
  4053ec:	cbz	x0, 4053f4 <call_weak_fn+0x10>
  4053f0:	b	404390 <__gmon_start__@plt>
  4053f4:	ret

00000000004053f8 <deregister_tm_clones>:
  4053f8:	adrp	x0, 421000 <saved_argv@@SD_SHARED>
  4053fc:	add	x0, x0, #0x0
  405400:	adrp	x1, 421000 <saved_argv@@SD_SHARED>
  405404:	add	x1, x1, #0x0
  405408:	cmp	x1, x0
  40540c:	b.eq	405424 <deregister_tm_clones+0x2c>  // b.none
  405410:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405414:	ldr	x1, [x1, #1784]
  405418:	cbz	x1, 405424 <deregister_tm_clones+0x2c>
  40541c:	mov	x16, x1
  405420:	br	x16
  405424:	ret

0000000000405428 <register_tm_clones>:
  405428:	adrp	x0, 421000 <saved_argv@@SD_SHARED>
  40542c:	add	x0, x0, #0x0
  405430:	adrp	x1, 421000 <saved_argv@@SD_SHARED>
  405434:	add	x1, x1, #0x0
  405438:	sub	x1, x1, x0
  40543c:	lsr	x2, x1, #63
  405440:	add	x1, x2, x1, asr #3
  405444:	cmp	xzr, x1, asr #1
  405448:	asr	x1, x1, #1
  40544c:	b.eq	405464 <register_tm_clones+0x3c>  // b.none
  405450:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405454:	ldr	x2, [x2, #1792]
  405458:	cbz	x2, 405464 <register_tm_clones+0x3c>
  40545c:	mov	x16, x2
  405460:	br	x16
  405464:	ret

0000000000405468 <__do_global_dtors_aux>:
  405468:	stp	x29, x30, [sp, #-32]!
  40546c:	mov	x29, sp
  405470:	str	x19, [sp, #16]
  405474:	adrp	x19, 421000 <saved_argv@@SD_SHARED>
  405478:	ldrb	w0, [x19, #12]
  40547c:	cbnz	w0, 40548c <__do_global_dtors_aux+0x24>
  405480:	bl	4053f8 <deregister_tm_clones>
  405484:	mov	w0, #0x1                   	// #1
  405488:	strb	w0, [x19, #12]
  40548c:	ldr	x19, [sp, #16]
  405490:	ldp	x29, x30, [sp], #32
  405494:	ret

0000000000405498 <frame_dummy>:
  405498:	b	405428 <register_tm_clones>
  40549c:	nop

00000000004054a0 <compare_metadata>:
  4054a0:	ldr	x0, [x0]
  4054a4:	ldr	x1, [x1]
  4054a8:	add	x0, x0, #0x10
  4054ac:	add	x1, x1, #0x10
  4054b0:	b	404ae0 <strcmp@plt>
  4054b4:	nop

00000000004054b8 <send_item>:
  4054b8:	stp	x29, x30, [sp, #-176]!
  4054bc:	mov	x4, #0x1                   	// #1
  4054c0:	mov	x29, sp
  4054c4:	stp	x19, x20, [sp, #16]
  4054c8:	adrp	x19, 420000 <__FRAME_END__+0xfb68>
  4054cc:	add	x19, x19, #0x738
  4054d0:	ldr	x3, [x19]
  4054d4:	str	x3, [sp, #168]
  4054d8:	mov	x3, #0x0                   	// #0
  4054dc:	add	x5, sp, #0x48
  4054e0:	add	x3, sp, #0x90
  4054e4:	stp	x21, x22, [sp, #32]
  4054e8:	mov	x22, #0x18                  	// #24
  4054ec:	stp	x23, x24, [sp, #48]
  4054f0:	mov	w20, w0
  4054f4:	stp	xzr, xzr, [sp, #88]
  4054f8:	stp	x5, x4, [sp, #104]
  4054fc:	stp	x3, x22, [sp, #120]
  405500:	str	xzr, [sp, #136]
  405504:	stp	xzr, xzr, [sp, #144]
  405508:	str	xzr, [sp, #160]
  40550c:	tbnz	w0, #31, 4055bc <send_item+0x104>
  405510:	mov	w0, w2
  405514:	tbnz	w2, #31, 4055e0 <send_item+0x128>
  405518:	mov	x23, x1
  40551c:	bl	404480 <fd_duplicate_data_fd@plt>
  405520:	mov	w21, w0
  405524:	tbnz	w0, #31, 4055b4 <send_item+0xfc>
  405528:	ldr	x0, [sp, #128]
  40552c:	cmp	x0, #0xf
  405530:	b.ls	405608 <send_item+0x150>  // b.plast
  405534:	ldr	x1, [sp, #120]
  405538:	mov	x3, #0x14                  	// #20
  40553c:	mov	x2, #0x100000001           	// #4294967297
  405540:	mov	x0, x23
  405544:	mov	w24, #0x0                   	// #0
  405548:	stp	x3, x2, [x1]
  40554c:	str	w21, [x1, #16]
  405550:	str	x22, [sp, #128]
  405554:	bl	404d30 <strlen@plt>
  405558:	mov	x3, x0
  40555c:	add	x1, sp, #0x58
  405560:	mov	w0, w20
  405564:	mov	w2, #0x4000                	// #16384
  405568:	stp	x23, x3, [sp, #72]
  40556c:	bl	404c50 <sendmsg@plt>
  405570:	tbnz	x0, #63, 4055a4 <send_item+0xec>
  405574:	mov	w0, w21
  405578:	bl	404530 <safe_close@plt>
  40557c:	ldr	x1, [sp, #168]
  405580:	ldr	x0, [x19]
  405584:	eor	x0, x1, x0
  405588:	cbnz	x0, 405604 <send_item+0x14c>
  40558c:	mov	w0, w24
  405590:	ldp	x19, x20, [sp, #16]
  405594:	ldp	x21, x22, [sp, #32]
  405598:	ldp	x23, x24, [sp, #48]
  40559c:	ldp	x29, x30, [sp], #176
  4055a0:	ret
  4055a4:	bl	404770 <__errno_location@plt>
  4055a8:	ldr	w24, [x0]
  4055ac:	neg	w24, w24
  4055b0:	b	405574 <send_item+0xbc>
  4055b4:	mov	w24, w0
  4055b8:	b	405574 <send_item+0xbc>
  4055bc:	adrp	x4, 40d000 <_fini+0x91c>
  4055c0:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4055c4:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4055c8:	add	x4, x4, #0x6f0
  4055cc:	add	x1, x1, #0x820
  4055d0:	add	x2, x2, #0x803
  4055d4:	mov	w3, #0x8e                  	// #142
  4055d8:	mov	w0, #0x0                   	// #0
  4055dc:	bl	4045c0 <log_assert_failed_realm@plt>
  4055e0:	adrp	x4, 40d000 <_fini+0x91c>
  4055e4:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4055e8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4055ec:	add	x4, x4, #0x6f0
  4055f0:	add	x1, x1, #0x830
  4055f4:	add	x2, x2, #0x803
  4055f8:	mov	w3, #0x90                  	// #144
  4055fc:	mov	w0, #0x0                   	// #0
  405600:	bl	4045c0 <log_assert_failed_realm@plt>
  405604:	bl	404880 <__stack_chk_fail@plt>
  405608:	mov	x0, #0x0                   	// #0
  40560c:	str	wzr, [x0, #8]
  405610:	brk	#0x3e8
  405614:	nop

0000000000405618 <portable_metadata_new>:
  405618:	stp	x29, x30, [sp, #-48]!
  40561c:	mov	x29, sp
  405620:	stp	x19, x20, [sp, #16]
  405624:	stp	x21, x22, [sp, #32]
  405628:	mov	w21, w1
  40562c:	mov	x22, x0
  405630:	bl	404d30 <strlen@plt>
  405634:	mov	x20, x0
  405638:	add	x1, x20, #0x11
  40563c:	mov	x0, #0x1                   	// #1
  405640:	bl	404b60 <calloc@plt>
  405644:	mov	x19, x0
  405648:	cbz	x0, 405660 <portable_metadata_new+0x48>
  40564c:	add	x2, x20, #0x1
  405650:	mov	x1, x22
  405654:	add	x0, x0, #0x10
  405658:	bl	404490 <memcpy@plt>
  40565c:	str	w21, [x19]
  405660:	mov	x0, x19
  405664:	ldp	x19, x20, [sp, #16]
  405668:	ldp	x21, x22, [sp, #32]
  40566c:	ldp	x29, x30, [sp], #48
  405670:	ret
  405674:	nop

0000000000405678 <unit_file_is_active>:
  405678:	stp	x29, x30, [sp, #-128]!
  40567c:	mov	x29, sp
  405680:	stp	x19, x20, [sp, #16]
  405684:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  405688:	add	x20, x20, #0x738
  40568c:	ldr	x3, [x20]
  405690:	str	x3, [x29, #120]
  405694:	mov	x3, #0x0                   	// #0
  405698:	stp	x21, x22, [sp, #32]
  40569c:	stp	x23, x24, [sp, #48]
  4056a0:	stp	x25, x26, [sp, #64]
  4056a4:	cbz	x0, 405934 <unit_file_is_active+0x2bc>
  4056a8:	mov	x22, x1
  4056ac:	mov	x23, x0
  4056b0:	mov	x21, x2
  4056b4:	mov	x0, x22
  4056b8:	mov	w1, #0x5                   	// #5
  4056bc:	bl	404d70 <unit_name_is_valid@plt>
  4056c0:	tst	w0, #0xff
  4056c4:	b.ne	4058b0 <unit_file_is_active+0x238>  // b.any
  4056c8:	mov	x0, x22
  4056cc:	mov	w1, #0x2                   	// #2
  4056d0:	bl	404d70 <unit_name_is_valid@plt>
  4056d4:	tst	w0, #0xff
  4056d8:	b.eq	405a08 <unit_file_is_active+0x390>  // b.none
  4056dc:	add	x1, x29, #0x50
  4056e0:	mov	x0, x23
  4056e4:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4056e8:	adrp	x4, 40c000 <manager_image_cache_discover+0x50>
  4056ec:	add	x5, x5, #0x8b0
  4056f0:	add	x4, x4, #0x8c8
  4056f4:	adrp	x3, 40c000 <manager_image_cache_discover+0x50>
  4056f8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4056fc:	add	x3, x3, #0x8f0
  405700:	add	x2, x2, #0x868
  405704:	stp	xzr, xzr, [x29, #80]
  405708:	bl	404230 <sd_bus_message_new_method_call@plt>
  40570c:	mov	w19, w0
  405710:	tbnz	w0, #31, 405868 <unit_file_is_active+0x1f0>
  405714:	ldr	x0, [x29, #80]
  405718:	adrp	x1, 40d000 <_fini+0x91c>
  40571c:	add	x1, x1, #0x9a0
  405720:	bl	404bb0 <sd_bus_message_append_strv@plt>
  405724:	mov	w19, w0
  405728:	tbnz	w0, #31, 405868 <unit_file_is_active+0x1f0>
  40572c:	mov	x0, x22
  405730:	mov	w1, #0x40                  	// #64
  405734:	bl	404b90 <strchr@plt>
  405738:	cbz	x0, 4059e8 <unit_file_is_active+0x370>
  40573c:	add	x25, x0, #0x1
  405740:	mov	x0, x22
  405744:	sub	x1, x25, x22
  405748:	bl	404400 <strnlen@plt>
  40574c:	mov	x2, x0
  405750:	add	x0, x0, #0x10
  405754:	and	x0, x0, #0xfffffffffffffff0
  405758:	mov	x1, x22
  40575c:	sub	sp, sp, x0
  405760:	add	x26, x29, #0x60
  405764:	mov	x0, sp
  405768:	mov	x22, #0x0                   	// #0
  40576c:	mov	x19, #0x0                   	// #0
  405770:	strb	wzr, [x0, x2]
  405774:	bl	404490 <memcpy@plt>
  405778:	mov	x24, x0
  40577c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405780:	add	x1, x1, #0x918
  405784:	stp	x1, x25, [x29, #104]
  405788:	bl	404d30 <strlen@plt>
  40578c:	add	x22, x22, #0x1
  405790:	add	x19, x19, x0
  405794:	cmp	x22, #0x3
  405798:	b.eq	4057a8 <unit_file_is_active+0x130>  // b.none
  40579c:	ldr	x0, [x26, x22, lsl #3]
  4057a0:	cbnz	x0, 405788 <unit_file_is_active+0x110>
  4057a4:	nop
  4057a8:	add	x0, x19, #0x1
  4057ac:	cmp	x0, #0x400, lsl #12
  4057b0:	b.hi	405960 <unit_file_is_active+0x2e8>  // b.pmore
  4057b4:	add	x19, x19, #0x10
  4057b8:	add	x25, x29, #0x60
  4057bc:	and	x19, x19, #0xfffffffffffffff0
  4057c0:	mov	x22, #0x0                   	// #0
  4057c4:	sub	sp, sp, x19
  4057c8:	mov	x19, sp
  4057cc:	mov	x0, x19
  4057d0:	mov	x1, x24
  4057d4:	add	x22, x22, #0x1
  4057d8:	bl	4042e0 <stpcpy@plt>
  4057dc:	cmp	x22, #0x3
  4057e0:	b.eq	4057f0 <unit_file_is_active+0x178>  // b.none
  4057e4:	ldr	x24, [x25, x22, lsl #3]
  4057e8:	cbnz	x24, 4057d0 <unit_file_is_active+0x158>
  4057ec:	nop
  4057f0:	ldr	x0, [x29, #80]
  4057f4:	mov	x1, x25
  4057f8:	stp	x19, xzr, [x29, #96]
  4057fc:	bl	404bb0 <sd_bus_message_append_strv@plt>
  405800:	mov	w19, w0
  405804:	tbnz	w0, #31, 405868 <unit_file_is_active+0x1f0>
  405808:	ldr	x1, [x29, #80]
  40580c:	mov	x0, x23
  405810:	add	x4, x29, #0x58
  405814:	mov	x3, x21
  405818:	mov	x2, #0x0                   	// #0
  40581c:	bl	404970 <sd_bus_call@plt>
  405820:	mov	w19, w0
  405824:	tbnz	w0, #31, 405984 <unit_file_is_active+0x30c>
  405828:	ldr	x0, [x29, #88]
  40582c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405830:	mov	w1, #0x61                  	// #97
  405834:	add	x2, x2, #0x960
  405838:	bl	404350 <sd_bus_message_enter_container@plt>
  40583c:	mov	w19, w0
  405840:	tbnz	w0, #31, 405868 <unit_file_is_active+0x1f0>
  405844:	ldr	x0, [x29, #88]
  405848:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40584c:	mov	w1, #0x72                  	// #114
  405850:	add	x2, x2, #0x970
  405854:	bl	404350 <sd_bus_message_enter_container@plt>
  405858:	cmp	w0, #0x0
  40585c:	cset	w19, gt
  405860:	cmp	w0, #0x0
  405864:	csel	w19, w19, w0, ge  // ge = tcont
  405868:	ldr	x0, [x29, #88]
  40586c:	cbz	x0, 405874 <unit_file_is_active+0x1fc>
  405870:	bl	404340 <sd_bus_message_unref@plt>
  405874:	ldr	x0, [x29, #80]
  405878:	cbz	x0, 405880 <unit_file_is_active+0x208>
  40587c:	bl	404340 <sd_bus_message_unref@plt>
  405880:	ldr	x1, [x29, #120]
  405884:	ldr	x0, [x20]
  405888:	eor	x0, x1, x0
  40588c:	cbnz	x0, 405a50 <unit_file_is_active+0x3d8>
  405890:	mov	sp, x29
  405894:	mov	w0, w19
  405898:	ldp	x19, x20, [sp, #16]
  40589c:	ldp	x21, x22, [sp, #32]
  4058a0:	ldp	x23, x24, [sp, #48]
  4058a4:	ldp	x25, x26, [sp, #64]
  4058a8:	ldp	x29, x30, [sp], #128
  4058ac:	ret
  4058b0:	mov	x0, x22
  4058b4:	str	xzr, [x29, #88]
  4058b8:	bl	404220 <unit_dbus_path_from_name@plt>
  4058bc:	mov	x22, x0
  4058c0:	cbz	x0, 405928 <unit_file_is_active+0x2b0>
  4058c4:	mov	x0, x23
  4058c8:	add	x6, x29, #0x58
  4058cc:	mov	x5, x21
  4058d0:	mov	x2, x22
  4058d4:	adrp	x4, 40c000 <manager_image_cache_discover+0x50>
  4058d8:	adrp	x3, 40c000 <manager_image_cache_discover+0x50>
  4058dc:	add	x4, x4, #0x838
  4058e0:	add	x3, x3, #0x848
  4058e4:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4058e8:	add	x1, x1, #0x868
  4058ec:	bl	404b00 <sd_bus_get_property_string@plt>
  4058f0:	mov	w19, w0
  4058f4:	tbnz	w0, #31, 40593c <unit_file_is_active+0x2c4>
  4058f8:	ldr	x21, [x29, #88]
  4058fc:	adrp	x0, 40d000 <_fini+0x91c>
  405900:	add	x0, x0, #0x9a0
  405904:	mov	x1, x21
  405908:	bl	404980 <strv_find@plt>
  40590c:	cmp	x0, #0x0
  405910:	cset	w19, ne  // ne = any
  405914:	mov	x0, x21
  405918:	bl	404c10 <free@plt>
  40591c:	mov	x0, x22
  405920:	bl	404c10 <free@plt>
  405924:	b	405880 <unit_file_is_active+0x208>
  405928:	mov	w19, #0xfffffff4            	// #-12
  40592c:	ldr	x21, [x29, #88]
  405930:	b	405914 <unit_file_is_active+0x29c>
  405934:	mov	w19, #0x0                   	// #0
  405938:	b	405880 <unit_file_is_active+0x208>
  40593c:	mov	w0, #0x0                   	// #0
  405940:	bl	404d90 <log_get_max_level_realm@plt>
  405944:	cmp	w0, #0x6
  405948:	b.gt	4059a4 <unit_file_is_active+0x32c>
  40594c:	neg	w19, w19
  405950:	and	w19, w19, #0xff
  405954:	neg	w19, w19
  405958:	ldr	x21, [x29, #88]
  40595c:	b	405914 <unit_file_is_active+0x29c>
  405960:	adrp	x4, 40d000 <_fini+0x91c>
  405964:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405968:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40596c:	add	x4, x4, #0x758
  405970:	add	x1, x1, #0x920
  405974:	add	x2, x2, #0x803
  405978:	mov	w3, #0x23e                 	// #574
  40597c:	mov	w0, #0x0                   	// #0
  405980:	bl	4045c0 <log_assert_failed_realm@plt>
  405984:	mov	w0, #0x0                   	// #0
  405988:	bl	404d90 <log_get_max_level_realm@plt>
  40598c:	cmp	w0, #0x6
  405990:	b.gt	405a10 <unit_file_is_active+0x398>
  405994:	neg	w19, w19
  405998:	and	w19, w19, #0xff
  40599c:	neg	w19, w19
  4059a0:	b	405868 <unit_file_is_active+0x1f0>
  4059a4:	mov	w1, w19
  4059a8:	mov	x0, x21
  4059ac:	bl	404210 <bus_error_message@plt>
  4059b0:	mov	x6, x0
  4059b4:	mov	w1, w19
  4059b8:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4059bc:	adrp	x4, 40d000 <_fini+0x91c>
  4059c0:	add	x5, x5, #0x888
  4059c4:	add	x4, x4, #0x8e0
  4059c8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4059cc:	mov	w3, #0x222                 	// #546
  4059d0:	add	x2, x2, #0x803
  4059d4:	mov	w0, #0x7                   	// #7
  4059d8:	bl	4049d0 <log_internal_realm@plt>
  4059dc:	mov	w19, w0
  4059e0:	ldr	x21, [x29, #88]
  4059e4:	b	405914 <unit_file_is_active+0x29c>
  4059e8:	adrp	x4, 40d000 <_fini+0x91c>
  4059ec:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4059f0:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4059f4:	add	x4, x4, #0x758
  4059f8:	add	x1, x1, #0x910
  4059fc:	add	x2, x2, #0x803
  405a00:	mov	w3, #0x23b                 	// #571
  405a04:	bl	4045c0 <log_assert_failed_realm@plt>
  405a08:	mov	w19, #0xffffffea            	// #-22
  405a0c:	b	405880 <unit_file_is_active+0x208>
  405a10:	mov	w1, w19
  405a14:	mov	x0, x21
  405a18:	bl	404210 <bus_error_message@plt>
  405a1c:	mov	x6, x0
  405a20:	mov	w1, w19
  405a24:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  405a28:	adrp	x4, 40d000 <_fini+0x91c>
  405a2c:	add	x5, x5, #0x940
  405a30:	add	x4, x4, #0x8e0
  405a34:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405a38:	mov	w3, #0x246                 	// #582
  405a3c:	add	x2, x2, #0x803
  405a40:	mov	w0, #0x7                   	// #7
  405a44:	bl	4049d0 <log_internal_realm@plt>
  405a48:	mov	w19, w0
  405a4c:	b	405868 <unit_file_is_active+0x1f0>
  405a50:	bl	404880 <__stack_chk_fail@plt>
  405a54:	nop

0000000000405a58 <portable_changes_add>:
  405a58:	stp	x29, x30, [sp, #-80]!
  405a5c:	mov	x29, sp
  405a60:	stp	x19, x20, [sp, #16]
  405a64:	stp	x21, x22, [sp, #32]
  405a68:	cbz	x3, 405b48 <portable_changes_add+0xf0>
  405a6c:	cmp	x0, #0x0
  405a70:	mov	x21, x1
  405a74:	cset	w1, eq  // eq = none
  405a78:	cmp	x21, #0x0
  405a7c:	mov	x19, x0
  405a80:	cset	w0, eq  // eq = none
  405a84:	cmp	w1, w0
  405a88:	b.ne	405b74 <portable_changes_add+0x11c>  // b.any
  405a8c:	str	x25, [sp, #64]
  405a90:	mov	w25, #0x0                   	// #0
  405a94:	cbz	x19, 405b28 <portable_changes_add+0xd0>
  405a98:	stp	x23, x24, [sp, #48]
  405a9c:	mov	x22, x3
  405aa0:	mov	w23, w2
  405aa4:	ldr	x0, [x19]
  405aa8:	mov	x20, x4
  405aac:	ldr	x1, [x21]
  405ab0:	mov	x2, #0x18                  	// #24
  405ab4:	add	x1, x1, #0x1
  405ab8:	bl	404450 <reallocarray@plt>
  405abc:	mov	x24, x0
  405ac0:	cbz	x0, 405ba0 <portable_changes_add+0x148>
  405ac4:	str	x24, [x19]
  405ac8:	mov	x0, x22
  405acc:	bl	404b50 <strdup@plt>
  405ad0:	mov	x19, x0
  405ad4:	cbz	x0, 405ba0 <portable_changes_add+0x148>
  405ad8:	mov	w1, #0x0                   	// #0
  405adc:	bl	404ad0 <path_simplify@plt>
  405ae0:	cbz	x20, 405afc <portable_changes_add+0xa4>
  405ae4:	mov	x0, x20
  405ae8:	bl	404b50 <strdup@plt>
  405aec:	mov	x20, x0
  405af0:	cbz	x0, 405bb0 <portable_changes_add+0x158>
  405af4:	mov	w1, #0x0                   	// #0
  405af8:	bl	404ad0 <path_simplify@plt>
  405afc:	ldr	x1, [x21]
  405b00:	mov	w25, #0x0                   	// #0
  405b04:	add	x0, x1, #0x1
  405b08:	str	x0, [x21]
  405b0c:	add	x1, x1, x1, lsl #1
  405b10:	lsl	x1, x1, #3
  405b14:	add	x0, x24, x1
  405b18:	str	w23, [x24, x1]
  405b1c:	stp	x19, x20, [x0, #8]
  405b20:	mov	x19, #0x0                   	// #0
  405b24:	ldp	x23, x24, [sp, #48]
  405b28:	mov	x0, x19
  405b2c:	bl	404c10 <free@plt>
  405b30:	mov	w0, w25
  405b34:	ldp	x19, x20, [sp, #16]
  405b38:	ldp	x21, x22, [sp, #32]
  405b3c:	ldr	x25, [sp, #64]
  405b40:	ldp	x29, x30, [sp], #80
  405b44:	ret
  405b48:	adrp	x4, 40d000 <_fini+0x91c>
  405b4c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405b50:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405b54:	add	x4, x4, #0x770
  405b58:	add	x1, x1, #0xc00
  405b5c:	add	x2, x2, #0x803
  405b60:	mov	w3, #0x260                 	// #608
  405b64:	mov	w0, #0x0                   	// #0
  405b68:	stp	x23, x24, [sp, #48]
  405b6c:	str	x25, [sp, #64]
  405b70:	bl	4045c0 <log_assert_failed_realm@plt>
  405b74:	adrp	x4, 40d000 <_fini+0x91c>
  405b78:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405b7c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405b80:	add	x4, x4, #0x770
  405b84:	add	x1, x1, #0x980
  405b88:	add	x2, x2, #0x803
  405b8c:	mov	w3, #0x261                 	// #609
  405b90:	mov	w0, #0x0                   	// #0
  405b94:	stp	x23, x24, [sp, #48]
  405b98:	str	x25, [sp, #64]
  405b9c:	bl	4045c0 <log_assert_failed_realm@plt>
  405ba0:	mov	x19, #0x0                   	// #0
  405ba4:	mov	w25, #0xfffffff4            	// #-12
  405ba8:	ldp	x23, x24, [sp, #48]
  405bac:	b	405b28 <portable_changes_add+0xd0>
  405bb0:	mov	w25, #0xfffffff4            	// #-12
  405bb4:	ldp	x23, x24, [sp, #48]
  405bb8:	b	405b28 <portable_changes_add+0xd0>
  405bbc:	nop

0000000000405bc0 <attached_path>:
  405bc0:	tst	x1, #0x4
  405bc4:	ldp	x1, x0, [x0, #24]
  405bc8:	csel	x0, x0, x1, ne  // ne = any
  405bcc:	cbz	x0, 405bd4 <attached_path+0x14>
  405bd0:	ret
  405bd4:	stp	x29, x30, [sp, #-16]!
  405bd8:	adrp	x4, 40d000 <_fini+0x91c>
  405bdc:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405be0:	mov	x29, sp
  405be4:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405be8:	add	x4, x4, #0x7d8
  405bec:	add	x1, x1, #0x998
  405bf0:	add	x2, x2, #0x803
  405bf4:	mov	w3, #0x332                 	// #818
  405bf8:	bl	4045c0 <log_assert_failed_realm@plt>
  405bfc:	nop

0000000000405c00 <image_symlink>:
  405c00:	stp	x29, x30, [sp, #-32]!
  405c04:	mov	x29, sp
  405c08:	stp	x19, x20, [sp, #16]
  405c0c:	cbz	x0, 405c5c <image_symlink+0x5c>
  405c10:	mov	w19, w1
  405c14:	mov	x20, x2
  405c18:	bl	4044f0 <last_path_component@plt>
  405c1c:	mov	x1, x0
  405c20:	tst	x19, #0x4
  405c24:	adrp	x3, 40c000 <manager_image_cache_discover+0x50>
  405c28:	add	x3, x3, #0x9a0
  405c2c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405c30:	add	x2, x2, #0x9b0
  405c34:	csel	x0, x3, x2, ne  // ne = any
  405c38:	mov	x2, #0x0                   	// #0
  405c3c:	bl	404520 <strjoin_real@plt>
  405c40:	mov	x1, x0
  405c44:	cbz	x0, 405c7c <image_symlink+0x7c>
  405c48:	mov	w0, #0x0                   	// #0
  405c4c:	str	x1, [x20]
  405c50:	ldp	x19, x20, [sp, #16]
  405c54:	ldp	x29, x30, [sp], #32
  405c58:	ret
  405c5c:	adrp	x4, 40d000 <_fini+0x91c>
  405c60:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405c64:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405c68:	add	x4, x4, #0x800
  405c6c:	add	x1, x1, #0x9c0
  405c70:	add	x2, x2, #0x803
  405c74:	mov	w3, #0x399                 	// #921
  405c78:	bl	4045c0 <log_assert_failed_realm@plt>
  405c7c:	mov	w0, #0xfffffff4            	// #-12
  405c80:	b	405c50 <image_symlink+0x50>
  405c84:	nop

0000000000405c88 <portable_metadata_unref.part.0>:
  405c88:	stp	x29, x30, [sp, #-32]!
  405c8c:	mov	x29, sp
  405c90:	str	x19, [sp, #16]
  405c94:	mov	x19, x0
  405c98:	ldr	w0, [x0]
  405c9c:	bl	404530 <safe_close@plt>
  405ca0:	ldr	x0, [x19, #8]
  405ca4:	bl	404c10 <free@plt>
  405ca8:	mov	x0, x19
  405cac:	ldr	x19, [sp, #16]
  405cb0:	ldp	x29, x30, [sp], #32
  405cb4:	b	404c10 <free@plt>

0000000000405cb8 <__unique_prefix_static_free_wrapper4>:
  405cb8:	cbz	x0, 405cc0 <__unique_prefix_static_free_wrapper4+0x8>
  405cbc:	b	405c88 <portable_metadata_unref.part.0>
  405cc0:	ret
  405cc4:	nop

0000000000405cc8 <portable_changes_add_with_prefix.constprop.0>:
  405cc8:	stp	x29, x30, [sp, #-96]!
  405ccc:	mov	x29, sp
  405cd0:	stp	x23, x24, [sp, #48]
  405cd4:	adrp	x24, 420000 <__FRAME_END__+0xfb68>
  405cd8:	add	x24, x24, #0x738
  405cdc:	ldr	x4, [x24]
  405ce0:	str	x4, [x29, #88]
  405ce4:	mov	x4, #0x0                   	// #0
  405ce8:	stp	x19, x20, [sp, #16]
  405cec:	stp	x21, x22, [sp, #32]
  405cf0:	stp	x25, x26, [sp, #64]
  405cf4:	cbz	x3, 405e34 <portable_changes_add_with_prefix.constprop.0+0x16c>
  405cf8:	cmp	x0, #0x0
  405cfc:	mov	x22, x1
  405d00:	cset	w1, eq  // eq = none
  405d04:	cmp	x22, #0x0
  405d08:	mov	x20, x0
  405d0c:	cset	w0, eq  // eq = none
  405d10:	cmp	w1, w0
  405d14:	b.ne	405e58 <portable_changes_add_with_prefix.constprop.0+0x190>  // b.any
  405d18:	cbz	x20, 405e1c <portable_changes_add_with_prefix.constprop.0+0x154>
  405d1c:	mov	x21, x2
  405d20:	mov	x19, x3
  405d24:	cbz	x2, 405dd8 <portable_changes_add_with_prefix.constprop.0+0x110>
  405d28:	ldrb	w25, [x3]
  405d2c:	cmp	w25, #0x2f
  405d30:	b.eq	405d3c <portable_changes_add_with_prefix.constprop.0+0x74>  // b.none
  405d34:	b	405d48 <portable_changes_add_with_prefix.constprop.0+0x80>
  405d38:	add	x19, x19, #0x1
  405d3c:	ldrb	w3, [x19, #1]
  405d40:	cmp	w3, #0x2f
  405d44:	b.eq	405d38 <portable_changes_add_with_prefix.constprop.0+0x70>  // b.none
  405d48:	ldrb	w0, [x21]
  405d4c:	cbz	w0, 405dd8 <portable_changes_add_with_prefix.constprop.0+0x110>
  405d50:	mov	x0, x21
  405d54:	bl	404d30 <strlen@plt>
  405d58:	mov	x23, x0
  405d5c:	mov	x0, x19
  405d60:	bl	404d30 <strlen@plt>
  405d64:	add	x1, x23, x0
  405d68:	mov	x26, x0
  405d6c:	add	x0, x1, #0x2
  405d70:	cmp	x0, #0x400, lsl #12
  405d74:	b.hi	405e7c <portable_changes_add_with_prefix.constprop.0+0x1b4>  // b.pmore
  405d78:	add	x3, x1, #0x11
  405d7c:	mov	x1, x21
  405d80:	and	x3, x3, #0xfffffffffffffff0
  405d84:	sub	sp, sp, x3
  405d88:	mov	x21, sp
  405d8c:	mov	x0, x21
  405d90:	bl	4042e0 <stpcpy@plt>
  405d94:	cmp	x21, x0
  405d98:	b.cc	405dac <portable_changes_add_with_prefix.constprop.0+0xe4>  // b.lo, b.ul, b.last
  405d9c:	b	405db8 <portable_changes_add_with_prefix.constprop.0+0xf0>
  405da0:	sub	x0, x0, #0x1
  405da4:	cmp	x21, x0
  405da8:	b.eq	405e24 <portable_changes_add_with_prefix.constprop.0+0x15c>  // b.none
  405dac:	ldurb	w1, [x0, #-1]
  405db0:	cmp	w1, #0x2f
  405db4:	b.eq	405da0 <portable_changes_add_with_prefix.constprop.0+0xd8>  // b.none
  405db8:	cmp	w25, #0x2f
  405dbc:	b.eq	405dc8 <portable_changes_add_with_prefix.constprop.0+0x100>  // b.none
  405dc0:	mov	w1, #0x2f                  	// #47
  405dc4:	strb	w1, [x0], #1
  405dc8:	mov	x1, x19
  405dcc:	add	x2, x26, #0x1
  405dd0:	mov	x19, x21
  405dd4:	bl	404490 <memcpy@plt>
  405dd8:	mov	x3, x19
  405ddc:	mov	x1, x22
  405de0:	mov	x0, x20
  405de4:	mov	x4, #0x0                   	// #0
  405de8:	mov	w2, #0x2                   	// #2
  405dec:	bl	405a58 <portable_changes_add>
  405df0:	ldr	x2, [x29, #88]
  405df4:	ldr	x1, [x24]
  405df8:	eor	x1, x2, x1
  405dfc:	cbnz	x1, 405ea0 <portable_changes_add_with_prefix.constprop.0+0x1d8>
  405e00:	mov	sp, x29
  405e04:	ldp	x19, x20, [sp, #16]
  405e08:	ldp	x21, x22, [sp, #32]
  405e0c:	ldp	x23, x24, [sp, #48]
  405e10:	ldp	x25, x26, [sp, #64]
  405e14:	ldp	x29, x30, [sp], #96
  405e18:	ret
  405e1c:	mov	w0, #0x0                   	// #0
  405e20:	b	405df0 <portable_changes_add_with_prefix.constprop.0+0x128>
  405e24:	mov	x0, x21
  405e28:	cmp	w25, #0x2f
  405e2c:	b.ne	405dc0 <portable_changes_add_with_prefix.constprop.0+0xf8>  // b.any
  405e30:	b	405dc8 <portable_changes_add_with_prefix.constprop.0+0x100>
  405e34:	adrp	x4, 40d000 <_fini+0x91c>
  405e38:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405e3c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405e40:	add	x4, x4, #0x788
  405e44:	add	x1, x1, #0xc00
  405e48:	add	x2, x2, #0x803
  405e4c:	mov	w3, #0x28a                 	// #650
  405e50:	mov	w0, #0x0                   	// #0
  405e54:	bl	4045c0 <log_assert_failed_realm@plt>
  405e58:	adrp	x4, 40d000 <_fini+0x91c>
  405e5c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405e60:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405e64:	add	x4, x4, #0x788
  405e68:	add	x1, x1, #0x980
  405e6c:	add	x2, x2, #0x803
  405e70:	mov	w3, #0x28b                 	// #651
  405e74:	mov	w0, #0x0                   	// #0
  405e78:	bl	4045c0 <log_assert_failed_realm@plt>
  405e7c:	adrp	x4, 40d000 <_fini+0x91c>
  405e80:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  405e84:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  405e88:	add	x4, x4, #0x788
  405e8c:	add	x1, x1, #0x920
  405e90:	add	x2, x2, #0x803
  405e94:	mov	w3, #0x291                 	// #657
  405e98:	mov	w0, #0x0                   	// #0
  405e9c:	bl	4045c0 <log_assert_failed_realm@plt>
  405ea0:	bl	404880 <__stack_chk_fail@plt>
  405ea4:	nop

0000000000405ea8 <extract_now>:
  405ea8:	stp	x29, x30, [sp, #-336]!
  405eac:	adrp	x5, 420000 <__FRAME_END__+0xfb68>
  405eb0:	add	x5, x5, #0x738
  405eb4:	mov	x29, sp
  405eb8:	stp	x19, x20, [sp, #16]
  405ebc:	stp	x23, x24, [sp, #48]
  405ec0:	stp	x25, x26, [sp, #64]
  405ec4:	ldr	x6, [x5]
  405ec8:	str	x6, [sp, #328]
  405ecc:	mov	x6, #0x0                   	// #0
  405ed0:	str	w2, [sp, #100]
  405ed4:	stp	x5, x3, [sp, #120]
  405ed8:	mov	w5, #0xffffffff            	// #-1
  405edc:	str	x4, [sp, #136]
  405ee0:	str	w5, [sp, #148]
  405ee4:	str	xzr, [sp, #152]
  405ee8:	stp	xzr, xzr, [sp, #176]
  405eec:	stp	xzr, xzr, [sp, #192]
  405ef0:	stp	xzr, xzr, [sp, #208]
  405ef4:	stp	xzr, xzr, [sp, #224]
  405ef8:	stp	xzr, xzr, [sp, #240]
  405efc:	stp	xzr, xzr, [sp, #256]
  405f00:	str	xzr, [sp, #272]
  405f04:	cbz	x0, 406468 <extract_now+0x5c0>
  405f08:	mov	x23, x1
  405f0c:	mov	x26, x0
  405f10:	add	x2, sp, #0x94
  405f14:	add	x1, sp, #0x98
  405f18:	bl	404c40 <open_os_release@plt>
  405f1c:	mov	w19, w0
  405f20:	tbnz	w0, #31, 4062fc <extract_now+0x454>
  405f24:	ldr	w0, [sp, #100]
  405f28:	tbz	w0, #31, 406240 <extract_now+0x398>
  405f2c:	ldr	x0, [sp, #128]
  405f30:	cbz	x0, 40630c <extract_now+0x464>
  405f34:	ldr	w1, [sp, #148]
  405f38:	adrp	x0, 40c000 <manager_image_cache_discover+0x50>
  405f3c:	add	x0, x0, #0xa00
  405f40:	bl	405618 <portable_metadata_new>
  405f44:	str	x0, [sp, #112]
  405f48:	mov	x2, x0
  405f4c:	cbz	x0, 4065dc <extract_now+0x734>
  405f50:	ldr	x0, [sp, #152]
  405f54:	mov	w1, #0xffffffff            	// #-1
  405f58:	str	x0, [x2, #8]
  405f5c:	str	w1, [sp, #148]
  405f60:	str	xzr, [sp, #152]
  405f64:	mov	x3, x26
  405f68:	add	x0, sp, #0xb0
  405f6c:	mov	w2, #0x4                   	// #4
  405f70:	mov	w1, #0x0                   	// #0
  405f74:	bl	4049b0 <lookup_paths_init@plt>
  405f78:	mov	w19, w0
  405f7c:	tbnz	w0, #31, 40632c <extract_now+0x484>
  405f80:	adrp	x0, 40d000 <_fini+0x91c>
  405f84:	add	x0, x0, #0x9f0
  405f88:	bl	404870 <internal_hashmap_new@plt>
  405f8c:	mov	x25, x0
  405f90:	cbz	x0, 4065f0 <extract_now+0x748>
  405f94:	ldr	x24, [sp, #176]
  405f98:	cbz	x24, 4063a4 <extract_now+0x4fc>
  405f9c:	stp	x21, x22, [sp, #32]
  405fa0:	adrp	x22, 40d000 <_fini+0x91c>
  405fa4:	add	x22, x22, #0x678
  405fa8:	stp	x27, x28, [sp, #80]
  405fac:	b	405fd8 <extract_now+0x130>
  405fb0:	mov	w0, #0x0                   	// #0
  405fb4:	bl	404d90 <log_get_max_level_realm@plt>
  405fb8:	cmp	w0, #0x6
  405fbc:	b.gt	406290 <extract_now+0x3e8>
  405fc0:	ldr	x0, [sp, #168]
  405fc4:	cbz	x0, 405fcc <extract_now+0x124>
  405fc8:	bl	404690 <closedir@plt>
  405fcc:	ldr	x0, [sp, #160]
  405fd0:	add	x24, x24, #0x8
  405fd4:	bl	404c10 <free@plt>
  405fd8:	ldr	x0, [x24]
  405fdc:	cbz	x0, 40639c <extract_now+0x4f4>
  405fe0:	stp	xzr, xzr, [sp, #160]
  405fe4:	add	x4, sp, #0xa8
  405fe8:	add	x3, sp, #0xa0
  405fec:	ldr	x0, [x24]
  405ff0:	mov	x1, x26
  405ff4:	mov	w2, #0x0                   	// #0
  405ff8:	bl	404930 <chase_symlinks_and_opendir@plt>
  405ffc:	mov	w19, w0
  406000:	tbnz	w0, #31, 405fb0 <extract_now+0x108>
  406004:	bl	404770 <__errno_location@plt>
  406008:	mov	x21, x0
  40600c:	ldr	x0, [sp, #168]
  406010:	str	wzr, [x21]
  406014:	bl	4045f0 <readdir64@plt>
  406018:	mov	x20, x0
  40601c:	adrp	x0, 40c000 <manager_image_cache_discover+0x50>
  406020:	add	x0, x0, #0xab0
  406024:	str	x0, [sp, #104]
  406028:	cbz	x20, 406128 <extract_now+0x280>
  40602c:	nop
  406030:	add	x19, x20, #0x13
  406034:	mov	x0, x19
  406038:	bl	404420 <hidden_or_backup_file@plt>
  40603c:	tst	w0, #0xff
  406040:	b.ne	406114 <extract_now+0x26c>  // b.any
  406044:	mov	x0, x19
  406048:	mov	w1, #0x7                   	// #7
  40604c:	bl	404d70 <unit_name_is_valid@plt>
  406050:	tst	w0, #0xff
  406054:	b.eq	406108 <extract_now+0x260>  // b.none
  406058:	mov	w1, #0x2e                  	// #46
  40605c:	mov	x0, x19
  406060:	bl	404570 <strrchr@plt>
  406064:	mov	x1, x0
  406068:	cbz	x0, 406108 <extract_now+0x260>
  40606c:	add	x8, sp, #0x200
  406070:	add	x0, sp, #0x118
  406074:	ldp	x4, x5, [x22]
  406078:	ldp	x6, x7, [x22, #16]
  40607c:	stp	x4, x5, [x8, #-232]
  406080:	add	x4, sp, #0x230
  406084:	ldp	x2, x3, [x22, #32]
  406088:	stp	x6, x7, [x8, #-216]
  40608c:	stp	x2, x3, [x4, #-248]
  406090:	bl	404980 <strv_find@plt>
  406094:	cbz	x0, 406108 <extract_now+0x260>
  406098:	cbz	x23, 4060f8 <extract_now+0x250>
  40609c:	ldr	x27, [x23]
  4060a0:	cbz	x27, 4060f8 <extract_now+0x250>
  4060a4:	mov	x28, x23
  4060a8:	b	4060c4 <extract_now+0x21c>
  4060ac:	sub	w0, w0, #0x1
  4060b0:	and	w0, w0, #0xff
  4060b4:	cmp	w0, #0x2b
  4060b8:	b.hi	4060f8 <extract_now+0x250>  // b.pmore
  4060bc:	ldr	x27, [x28, #8]!
  4060c0:	cbz	x27, 406108 <extract_now+0x260>
  4060c4:	mov	x0, x27
  4060c8:	bl	404d30 <strlen@plt>
  4060cc:	mov	x1, x27
  4060d0:	mov	x27, x0
  4060d4:	mov	x2, x27
  4060d8:	mov	x0, x19
  4060dc:	bl	4046b0 <strncmp@plt>
  4060e0:	cbnz	w0, 4060bc <extract_now+0x214>
  4060e4:	ldrb	w0, [x19, x27]
  4060e8:	cmp	w0, #0x2e
  4060ec:	b.ls	4060ac <extract_now+0x204>  // b.plast
  4060f0:	cmp	w0, #0x40
  4060f4:	b.ne	4060bc <extract_now+0x214>  // b.any
  4060f8:	mov	x1, x19
  4060fc:	mov	x0, x25
  406100:	bl	404750 <internal_hashmap_get@plt>
  406104:	cbz	x0, 406194 <extract_now+0x2ec>
  406108:	mov	w28, #0xffffffff            	// #-1
  40610c:	mov	w0, w28
  406110:	bl	404530 <safe_close@plt>
  406114:	ldr	x0, [sp, #168]
  406118:	str	wzr, [x21]
  40611c:	bl	4045f0 <readdir64@plt>
  406120:	mov	x20, x0
  406124:	cbnz	x0, 406030 <extract_now+0x188>
  406128:	ldr	w20, [x21]
  40612c:	cmp	w20, #0x0
  406130:	b.le	405fc0 <extract_now+0x118>
  406134:	mov	w0, #0x0                   	// #0
  406138:	bl	404d90 <log_get_max_level_realm@plt>
  40613c:	and	w2, w20, #0xff
  406140:	cmp	w0, #0x6
  406144:	neg	w19, w2
  406148:	b.gt	4065ac <extract_now+0x704>
  40614c:	ldr	x0, [sp, #168]
  406150:	cbz	x0, 406158 <extract_now+0x2b0>
  406154:	bl	404690 <closedir@plt>
  406158:	ldr	x0, [sp, #160]
  40615c:	bl	404c10 <free@plt>
  406160:	ldp	x21, x22, [sp, #32]
  406164:	ldp	x27, x28, [sp, #80]
  406168:	ldr	x0, [sp, #152]
  40616c:	bl	404c10 <free@plt>
  406170:	ldr	w0, [sp, #148]
  406174:	bl	404530 <safe_close@plt>
  406178:	add	x0, sp, #0xb0
  40617c:	bl	404330 <lookup_paths_free@plt>
  406180:	ldr	x0, [sp, #112]
  406184:	cbz	x0, 406420 <extract_now+0x578>
  406188:	ldr	x0, [sp, #112]
  40618c:	bl	405c88 <portable_metadata_unref.part.0>
  406190:	b	406420 <extract_now+0x578>
  406194:	ldr	x0, [sp, #168]
  406198:	mov	x1, x20
  40619c:	mov	w28, #0xffffffff            	// #-1
  4061a0:	bl	4044b0 <dirent_ensure_type@plt>
  4061a4:	ldrb	w0, [x20, #18]
  4061a8:	and	w0, w0, #0xfffffffd
  4061ac:	and	w0, w0, #0xff
  4061b0:	cmp	w0, #0x8
  4061b4:	b.ne	40610c <extract_now+0x264>  // b.any
  4061b8:	ldr	x0, [sp, #168]
  4061bc:	bl	404580 <dirfd@plt>
  4061c0:	mov	x1, x19
  4061c4:	mov	w2, #0x80000               	// #524288
  4061c8:	bl	404270 <openat64@plt>
  4061cc:	mov	w28, w0
  4061d0:	tbnz	w0, #31, 4062c0 <extract_now+0x418>
  4061d4:	ldr	w0, [sp, #100]
  4061d8:	tbnz	w0, #31, 4061f0 <extract_now+0x348>
  4061dc:	mov	w2, w28
  4061e0:	mov	x1, x19
  4061e4:	bl	4054b8 <send_item>
  4061e8:	mov	w20, w0
  4061ec:	tbnz	w0, #31, 40651c <extract_now+0x674>
  4061f0:	mov	w1, w28
  4061f4:	mov	x0, x19
  4061f8:	bl	405618 <portable_metadata_new>
  4061fc:	mov	x20, x0
  406200:	cbz	x0, 40650c <extract_now+0x664>
  406204:	ldr	x0, [sp, #160]
  406208:	mov	x1, x19
  40620c:	mov	x2, #0xffffffffffffffff    	// #-1
  406210:	bl	4048d0 <path_join_internal@plt>
  406214:	str	x0, [x20, #8]
  406218:	cbz	x0, 4064d4 <extract_now+0x62c>
  40621c:	mov	x2, x20
  406220:	add	x1, x20, #0x10
  406224:	mov	x0, x25
  406228:	bl	404a70 <hashmap_put@plt>
  40622c:	mov	w19, w0
  406230:	tbnz	w0, #31, 4064ec <extract_now+0x644>
  406234:	mov	w0, #0xffffffff            	// #-1
  406238:	bl	404530 <safe_close@plt>
  40623c:	b	406114 <extract_now+0x26c>
  406240:	ldr	w2, [sp, #148]
  406244:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  406248:	add	x1, x1, #0xa00
  40624c:	bl	4054b8 <send_item>
  406250:	mov	w19, w0
  406254:	tbz	w0, #31, 405f2c <extract_now+0x84>
  406258:	mov	w0, #0x0                   	// #0
  40625c:	bl	404d90 <log_get_max_level_realm@plt>
  406260:	cmp	w0, #0x6
  406264:	b.gt	4064a4 <extract_now+0x5fc>
  406268:	neg	w19, w19
  40626c:	and	w19, w19, #0xff
  406270:	neg	w19, w19
  406274:	ldr	x0, [sp, #152]
  406278:	bl	404c10 <free@plt>
  40627c:	ldr	w0, [sp, #148]
  406280:	bl	404530 <safe_close@plt>
  406284:	add	x0, sp, #0xb0
  406288:	bl	404330 <lookup_paths_free@plt>
  40628c:	b	406370 <extract_now+0x4c8>
  406290:	ldr	x6, [x24]
  406294:	mov	w1, w19
  406298:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  40629c:	adrp	x4, 40d000 <_fini+0x91c>
  4062a0:	add	x5, x5, #0xa60
  4062a4:	add	x4, x4, #0x8b0
  4062a8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4062ac:	mov	w3, #0x122                 	// #290
  4062b0:	add	x2, x2, #0x803
  4062b4:	mov	w0, #0x7                   	// #7
  4062b8:	bl	4049d0 <log_internal_realm@plt>
  4062bc:	b	405fc0 <extract_now+0x118>
  4062c0:	mov	w0, #0x0                   	// #0
  4062c4:	bl	404d90 <log_get_max_level_realm@plt>
  4062c8:	cmp	w0, #0x6
  4062cc:	b.le	40610c <extract_now+0x264>
  4062d0:	ldr	w1, [x21]
  4062d4:	mov	x6, x19
  4062d8:	ldr	x5, [sp, #104]
  4062dc:	adrp	x4, 40d000 <_fini+0x91c>
  4062e0:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4062e4:	add	x4, x4, #0x8b0
  4062e8:	add	x2, x2, #0x803
  4062ec:	mov	w3, #0x13a                 	// #314
  4062f0:	mov	w0, #0x7                   	// #7
  4062f4:	bl	4049d0 <log_internal_realm@plt>
  4062f8:	b	40610c <extract_now+0x264>
  4062fc:	mov	w0, #0x0                   	// #0
  406300:	bl	404d90 <log_get_max_level_realm@plt>
  406304:	cmp	w0, #0x6
  406308:	b.gt	4063d8 <extract_now+0x530>
  40630c:	mov	x3, x26
  406310:	add	x0, sp, #0xb0
  406314:	mov	w2, #0x4                   	// #4
  406318:	mov	w1, #0x0                   	// #0
  40631c:	str	xzr, [sp, #112]
  406320:	bl	4049b0 <lookup_paths_init@plt>
  406324:	mov	w19, w0
  406328:	tbz	w0, #31, 405f80 <extract_now+0xd8>
  40632c:	mov	w0, #0x0                   	// #0
  406330:	bl	404d90 <log_get_max_level_realm@plt>
  406334:	cmp	w0, #0x6
  406338:	b.gt	406434 <extract_now+0x58c>
  40633c:	neg	w19, w19
  406340:	and	w19, w19, #0xff
  406344:	ldr	x0, [sp, #152]
  406348:	neg	w19, w19
  40634c:	bl	404c10 <free@plt>
  406350:	ldr	w0, [sp, #148]
  406354:	bl	404530 <safe_close@plt>
  406358:	add	x0, sp, #0xb0
  40635c:	bl	404330 <lookup_paths_free@plt>
  406360:	ldr	x0, [sp, #112]
  406364:	cbz	x0, 406370 <extract_now+0x4c8>
  406368:	ldr	x0, [sp, #112]
  40636c:	bl	405c88 <portable_metadata_unref.part.0>
  406370:	ldr	x0, [sp, #120]
  406374:	ldr	x1, [sp, #328]
  406378:	ldr	x0, [x0]
  40637c:	eor	x0, x1, x0
  406380:	cbnz	x0, 4065e4 <extract_now+0x73c>
  406384:	mov	w0, w19
  406388:	ldp	x19, x20, [sp, #16]
  40638c:	ldp	x23, x24, [sp, #48]
  406390:	ldp	x25, x26, [sp, #64]
  406394:	ldp	x29, x30, [sp], #336
  406398:	ret
  40639c:	ldp	x21, x22, [sp, #32]
  4063a0:	ldp	x27, x28, [sp, #80]
  4063a4:	ldr	x1, [sp, #128]
  4063a8:	ldr	x0, [sp, #152]
  4063ac:	cbz	x1, 406494 <extract_now+0x5ec>
  4063b0:	ldr	x1, [sp, #128]
  4063b4:	ldr	x2, [sp, #112]
  4063b8:	str	xzr, [sp, #112]
  4063bc:	str	x2, [x1]
  4063c0:	ldr	x1, [sp, #136]
  4063c4:	cbz	x1, 406408 <extract_now+0x560>
  4063c8:	ldr	x1, [sp, #136]
  4063cc:	mov	w19, #0x0                   	// #0
  4063d0:	str	x25, [x1]
  4063d4:	b	40634c <extract_now+0x4a4>
  4063d8:	mov	w1, w19
  4063dc:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4063e0:	adrp	x4, 40d000 <_fini+0x91c>
  4063e4:	add	x5, x5, #0x9d0
  4063e8:	add	x4, x4, #0x8b0
  4063ec:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4063f0:	mov	w3, #0xfe                  	// #254
  4063f4:	add	x2, x2, #0x803
  4063f8:	mov	w0, #0x7                   	// #7
  4063fc:	str	xzr, [sp, #112]
  406400:	bl	4049d0 <log_internal_realm@plt>
  406404:	b	405f64 <extract_now+0xbc>
  406408:	bl	404c10 <free@plt>
  40640c:	mov	w19, #0x0                   	// #0
  406410:	ldr	w0, [sp, #148]
  406414:	bl	404530 <safe_close@plt>
  406418:	add	x0, sp, #0xb0
  40641c:	bl	404330 <lookup_paths_free@plt>
  406420:	mov	x0, x25
  406424:	mov	x2, #0x0                   	// #0
  406428:	mov	x1, #0x0                   	// #0
  40642c:	bl	404280 <internal_hashmap_free@plt>
  406430:	b	406370 <extract_now+0x4c8>
  406434:	mov	w1, w19
  406438:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  40643c:	adrp	x4, 40d000 <_fini+0x91c>
  406440:	add	x5, x5, #0xa38
  406444:	add	x4, x4, #0x8b0
  406448:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40644c:	mov	w3, #0x115                 	// #277
  406450:	add	x2, x2, #0x803
  406454:	mov	w0, #0x7                   	// #7
  406458:	bl	4049d0 <log_internal_realm@plt>
  40645c:	mov	w19, w0
  406460:	ldr	x0, [sp, #152]
  406464:	b	40634c <extract_now+0x4a4>
  406468:	adrp	x4, 40d000 <_fini+0x91c>
  40646c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  406470:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406474:	add	x4, x4, #0x710
  406478:	add	x1, x1, #0x998
  40647c:	add	x2, x2, #0x803
  406480:	mov	w3, #0xf9                  	// #249
  406484:	mov	w0, #0x0                   	// #0
  406488:	stp	x21, x22, [sp, #32]
  40648c:	stp	x27, x28, [sp, #80]
  406490:	bl	4045c0 <log_assert_failed_realm@plt>
  406494:	ldr	x1, [sp, #136]
  406498:	cbnz	x1, 4063c8 <extract_now+0x520>
  40649c:	mov	w19, #0x0                   	// #0
  4064a0:	b	40616c <extract_now+0x2c4>
  4064a4:	mov	w1, w19
  4064a8:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4064ac:	adrp	x4, 40d000 <_fini+0x91c>
  4064b0:	add	x5, x5, #0xa10
  4064b4:	add	x4, x4, #0x8b0
  4064b8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4064bc:	mov	w3, #0x103                 	// #259
  4064c0:	add	x2, x2, #0x803
  4064c4:	mov	w0, #0x7                   	// #7
  4064c8:	bl	4049d0 <log_internal_realm@plt>
  4064cc:	mov	w19, w0
  4064d0:	b	406274 <extract_now+0x3cc>
  4064d4:	mov	w19, #0xfffffff4            	// #-12
  4064d8:	mov	w0, #0xffffffff            	// #-1
  4064dc:	bl	404530 <safe_close@plt>
  4064e0:	mov	x0, x20
  4064e4:	bl	405c88 <portable_metadata_unref.part.0>
  4064e8:	b	40614c <extract_now+0x2a4>
  4064ec:	mov	w0, #0x0                   	// #0
  4064f0:	bl	404d90 <log_get_max_level_realm@plt>
  4064f4:	cmp	w0, #0x6
  4064f8:	b.gt	406544 <extract_now+0x69c>
  4064fc:	neg	w19, w19
  406500:	and	w19, w19, #0xff
  406504:	neg	w19, w19
  406508:	b	4064d8 <extract_now+0x630>
  40650c:	mov	w0, w28
  406510:	mov	w19, #0xfffffff4            	// #-12
  406514:	bl	404530 <safe_close@plt>
  406518:	b	40614c <extract_now+0x2a4>
  40651c:	mov	w0, #0x0                   	// #0
  406520:	bl	404d90 <log_get_max_level_realm@plt>
  406524:	cmp	w0, #0x6
  406528:	b.gt	406574 <extract_now+0x6cc>
  40652c:	neg	w19, w20
  406530:	mov	w0, w28
  406534:	and	w19, w19, #0xff
  406538:	neg	w19, w19
  40653c:	bl	404530 <safe_close@plt>
  406540:	b	40614c <extract_now+0x2a4>
  406544:	mov	w1, w19
  406548:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  40654c:	adrp	x4, 40d000 <_fini+0x91c>
  406550:	add	x5, x5, #0xb10
  406554:	add	x4, x4, #0x8b0
  406558:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40655c:	mov	w3, #0x14f                 	// #335
  406560:	add	x2, x2, #0x803
  406564:	mov	w0, #0x7                   	// #7
  406568:	bl	4049d0 <log_internal_realm@plt>
  40656c:	mov	w19, w0
  406570:	b	4064d8 <extract_now+0x630>
  406574:	mov	w1, w20
  406578:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  40657c:	adrp	x4, 40d000 <_fini+0x91c>
  406580:	add	x5, x5, #0xae0
  406584:	add	x4, x4, #0x8b0
  406588:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40658c:	add	x2, x2, #0x803
  406590:	mov	w3, #0x141                 	// #321
  406594:	mov	w0, #0x7                   	// #7
  406598:	bl	4049d0 <log_internal_realm@plt>
  40659c:	mov	w19, w0
  4065a0:	mov	w0, w28
  4065a4:	bl	404530 <safe_close@plt>
  4065a8:	b	40614c <extract_now+0x2a4>
  4065ac:	mov	w1, w20
  4065b0:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4065b4:	adrp	x4, 40d000 <_fini+0x91c>
  4065b8:	add	x5, x5, #0xa90
  4065bc:	add	x4, x4, #0x8b0
  4065c0:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4065c4:	mov	w3, #0x126                 	// #294
  4065c8:	add	x2, x2, #0x803
  4065cc:	mov	w0, #0x7                   	// #7
  4065d0:	bl	4049d0 <log_internal_realm@plt>
  4065d4:	mov	w19, w0
  4065d8:	b	40614c <extract_now+0x2a4>
  4065dc:	mov	w19, #0xfffffff4            	// #-12
  4065e0:	b	406274 <extract_now+0x3cc>
  4065e4:	stp	x21, x22, [sp, #32]
  4065e8:	stp	x27, x28, [sp, #80]
  4065ec:	bl	404880 <__stack_chk_fail@plt>
  4065f0:	mov	w19, #0xfffffff4            	// #-12
  4065f4:	ldr	x0, [sp, #152]
  4065f8:	b	40634c <extract_now+0x4a4>
  4065fc:	nop

0000000000406600 <test_chroot_dropin>:
  406600:	stp	x29, x30, [sp, #-112]!
  406604:	mov	x29, sp
  406608:	stp	x19, x20, [sp, #16]
  40660c:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  406610:	add	x20, x20, #0x738
  406614:	ldr	x5, [x20]
  406618:	str	x5, [x29, #104]
  40661c:	mov	x5, #0x0                   	// #0
  406620:	stp	x21, x22, [sp, #32]
  406624:	stp	x23, x24, [sp, #48]
  406628:	stp	x25, x26, [sp, #64]
  40662c:	stp	xzr, xzr, [x29, #88]
  406630:	cbz	x0, 4068bc <test_chroot_dropin+0x2bc>
  406634:	mov	x24, x1
  406638:	cbz	x1, 4068e0 <test_chroot_dropin+0x2e0>
  40663c:	mov	x19, x0
  406640:	mov	x21, x2
  406644:	mov	x22, x3
  406648:	mov	x23, x4
  40664c:	mov	x0, x2
  406650:	bl	404d30 <strlen@plt>
  406654:	add	x1, x0, #0x14
  406658:	cmp	x1, #0x400, lsl #12
  40665c:	b.hi	406904 <test_chroot_dropin+0x304>  // b.pmore
  406660:	add	x5, x0, #0x23
  406664:	mov	x1, x21
  406668:	and	x5, x5, #0xfffffffffffffff0
  40666c:	sub	sp, sp, x5
  406670:	mov	x21, sp
  406674:	mov	x0, x21
  406678:	bl	4042e0 <stpcpy@plt>
  40667c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406680:	add	x2, x2, #0xb38
  406684:	mov	x1, x0
  406688:	mov	x0, x19
  40668c:	ldp	x4, x5, [x2]
  406690:	stp	x4, x5, [x1]
  406694:	ldr	w2, [x2, #16]
  406698:	str	w2, [x1, #16]
  40669c:	bl	404580 <dirfd@plt>
  4066a0:	mov	x1, x21
  4066a4:	mov	w2, #0x80000               	// #524288
  4066a8:	bl	404270 <openat64@plt>
  4066ac:	mov	w25, w0
  4066b0:	tbz	w0, #31, 406738 <test_chroot_dropin+0x138>
  4066b4:	bl	404770 <__errno_location@plt>
  4066b8:	ldr	w19, [x0]
  4066bc:	cmp	w19, #0x2
  4066c0:	b.eq	4068b0 <test_chroot_dropin+0x2b0>  // b.none
  4066c4:	mov	w0, #0x0                   	// #0
  4066c8:	bl	404d90 <log_get_max_level_realm@plt>
  4066cc:	cmp	w0, #0x6
  4066d0:	b.gt	406870 <test_chroot_dropin+0x270>
  4066d4:	cmp	w19, #0x0
  4066d8:	mov	x24, #0x0                   	// #0
  4066dc:	cneg	w19, w19, lt  // lt = tstop
  4066e0:	and	w19, w19, #0xff
  4066e4:	neg	w19, w19
  4066e8:	mov	w0, w25
  4066ec:	bl	404530 <safe_close@plt>
  4066f0:	ldr	x0, [x29, #96]
  4066f4:	bl	4041e0 <safe_fclose@plt>
  4066f8:	mov	x0, x24
  4066fc:	bl	404c10 <free@plt>
  406700:	ldr	x0, [x29, #88]
  406704:	bl	404c10 <free@plt>
  406708:	ldr	x1, [x29, #104]
  40670c:	ldr	x0, [x20]
  406710:	eor	x0, x1, x0
  406714:	cbnz	x0, 406a1c <test_chroot_dropin+0x41c>
  406718:	mov	sp, x29
  40671c:	mov	w0, w19
  406720:	ldp	x19, x20, [sp, #16]
  406724:	ldp	x21, x22, [sp, #32]
  406728:	ldp	x23, x24, [sp, #48]
  40672c:	ldp	x25, x26, [sp, #64]
  406730:	ldp	x29, x30, [sp], #112
  406734:	ret
  406738:	add	x2, x29, #0x60
  40673c:	adrp	x1, 40f000 <__func__.9810+0xa0>
  406740:	add	x1, x1, #0x78
  406744:	bl	404c80 <fdopen_unlocked@plt>
  406748:	mov	w19, w0
  40674c:	tbnz	w0, #31, 40684c <test_chroot_dropin+0x24c>
  406750:	ldr	x0, [x29, #96]
  406754:	add	x3, x29, #0x58
  406758:	mov	w2, #0x0                   	// #0
  40675c:	mov	x1, #0x100000              	// #1048576
  406760:	bl	404200 <read_line_full@plt>
  406764:	mov	w19, w0
  406768:	tbnz	w0, #31, 406930 <test_chroot_dropin+0x330>
  40676c:	ldr	x21, [x29, #88]
  406770:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  406774:	mov	x2, #0x1d                  	// #29
  406778:	add	x1, x1, #0xbb8
  40677c:	mov	x0, x21
  406780:	bl	4046b0 <strncmp@plt>
  406784:	mov	w19, w0
  406788:	cbnz	w0, 4068ac <test_chroot_dropin+0x2ac>
  40678c:	add	x21, x21, #0x1d
  406790:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  406794:	mov	x0, x21
  406798:	add	x1, x1, #0xbd8
  40679c:	mov	w25, #0xffffffff            	// #-1
  4067a0:	bl	404ab0 <endswith@plt>
  4067a4:	mov	x24, x0
  4067a8:	cbz	x0, 4066e8 <test_chroot_dropin+0xe8>
  4067ac:	sub	x1, x0, x21
  4067b0:	mov	x0, x21
  4067b4:	bl	404840 <strndup@plt>
  4067b8:	mov	x24, x0
  4067bc:	cbz	x0, 406a20 <test_chroot_dropin+0x420>
  4067c0:	cbz	x22, 406928 <test_chroot_dropin+0x328>
  4067c4:	bl	4044f0 <last_path_component@plt>
  4067c8:	mov	x25, x0
  4067cc:	mov	x0, x22
  4067d0:	bl	4047d0 <image_name_is_valid@plt>
  4067d4:	tst	w0, #0xff
  4067d8:	b.eq	4069cc <test_chroot_dropin+0x3cc>  // b.none
  4067dc:	mov	x0, x22
  4067e0:	bl	404d30 <strlen@plt>
  4067e4:	mov	x21, x0
  4067e8:	mov	x1, x22
  4067ec:	mov	x0, x25
  4067f0:	mov	x2, x21
  4067f4:	bl	4046b0 <strncmp@plt>
  4067f8:	cbnz	w0, 406838 <test_chroot_dropin+0x238>
  4067fc:	add	x21, x25, x21
  406800:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  406804:	mov	x0, x21
  406808:	add	x1, x1, #0xbe8
  40680c:	bl	404740 <strspn@plt>
  406810:	mov	w19, #0x1                   	// #1
  406814:	ldrb	w0, [x21, x0]
  406818:	cbz	w0, 406838 <test_chroot_dropin+0x238>
  40681c:	mov	x0, x21
  406820:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  406824:	add	x1, x1, #0xbf0
  406828:	bl	404ae0 <strcmp@plt>
  40682c:	cmp	w0, #0x0
  406830:	cset	w19, eq  // eq = none
  406834:	nop
  406838:	mov	w25, #0xffffffff            	// #-1
  40683c:	cbz	x23, 4066e8 <test_chroot_dropin+0xe8>
  406840:	str	x24, [x23]
  406844:	mov	x24, #0x0                   	// #0
  406848:	b	4066e8 <test_chroot_dropin+0xe8>
  40684c:	mov	w0, #0x0                   	// #0
  406850:	bl	404d90 <log_get_max_level_realm@plt>
  406854:	cmp	w0, #0x6
  406858:	b.gt	406958 <test_chroot_dropin+0x358>
  40685c:	neg	w19, w19
  406860:	mov	x24, #0x0                   	// #0
  406864:	and	w19, w19, #0xff
  406868:	neg	w19, w19
  40686c:	b	4066e8 <test_chroot_dropin+0xe8>
  406870:	mov	x6, x24
  406874:	mov	w1, w19
  406878:	mov	x7, x21
  40687c:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  406880:	adrp	x4, 40d000 <_fini+0x91c>
  406884:	add	x5, x5, #0xb50
  406888:	add	x4, x4, #0x958
  40688c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406890:	mov	w3, #0x442                 	// #1090
  406894:	add	x2, x2, #0x803
  406898:	mov	w0, #0x7                   	// #7
  40689c:	mov	x24, #0x0                   	// #0
  4068a0:	bl	4049d0 <log_internal_realm@plt>
  4068a4:	mov	w19, w0
  4068a8:	b	4066e8 <test_chroot_dropin+0xe8>
  4068ac:	mov	w25, #0xffffffff            	// #-1
  4068b0:	mov	x24, #0x0                   	// #0
  4068b4:	mov	w19, #0x0                   	// #0
  4068b8:	b	4066e8 <test_chroot_dropin+0xe8>
  4068bc:	adrp	x4, 40d000 <_fini+0x91c>
  4068c0:	adrp	x1, 40e000 <manager_vtable+0x108>
  4068c4:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4068c8:	add	x4, x4, #0x838
  4068cc:	add	x1, x1, #0x608
  4068d0:	add	x2, x2, #0x803
  4068d4:	mov	w3, #0x436                 	// #1078
  4068d8:	mov	w0, #0x0                   	// #0
  4068dc:	bl	4045c0 <log_assert_failed_realm@plt>
  4068e0:	adrp	x4, 40d000 <_fini+0x91c>
  4068e4:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4068e8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4068ec:	add	x4, x4, #0x838
  4068f0:	add	x1, x1, #0x998
  4068f4:	add	x2, x2, #0x803
  4068f8:	mov	w3, #0x437                 	// #1079
  4068fc:	mov	w0, #0x0                   	// #0
  406900:	bl	4045c0 <log_assert_failed_realm@plt>
  406904:	adrp	x4, 40d000 <_fini+0x91c>
  406908:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40690c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406910:	add	x4, x4, #0x838
  406914:	add	x1, x1, #0x920
  406918:	add	x2, x2, #0x803
  40691c:	mov	w3, #0x43c                 	// #1084
  406920:	mov	w0, #0x0                   	// #0
  406924:	bl	4045c0 <log_assert_failed_realm@plt>
  406928:	mov	w19, #0x1                   	// #1
  40692c:	b	406838 <test_chroot_dropin+0x238>
  406930:	mov	w0, #0x0                   	// #0
  406934:	bl	404d90 <log_get_max_level_realm@plt>
  406938:	cmp	w0, #0x6
  40693c:	b.gt	40698c <test_chroot_dropin+0x38c>
  406940:	neg	w19, w19
  406944:	mov	w25, #0xffffffff            	// #-1
  406948:	and	w19, w19, #0xff
  40694c:	mov	x24, #0x0                   	// #0
  406950:	neg	w19, w19
  406954:	b	4066e8 <test_chroot_dropin+0xe8>
  406958:	mov	w1, w19
  40695c:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  406960:	adrp	x4, 40d000 <_fini+0x91c>
  406964:	add	x5, x5, #0xb70
  406968:	add	x4, x4, #0x958
  40696c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406970:	mov	w3, #0x447                 	// #1095
  406974:	add	x2, x2, #0x803
  406978:	mov	w0, #0x7                   	// #7
  40697c:	mov	x24, #0x0                   	// #0
  406980:	bl	4049d0 <log_internal_realm@plt>
  406984:	mov	w19, w0
  406988:	b	4066e8 <test_chroot_dropin+0xe8>
  40698c:	mov	x6, x24
  406990:	mov	w1, w19
  406994:	mov	x7, x21
  406998:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  40699c:	adrp	x4, 40d000 <_fini+0x91c>
  4069a0:	add	x5, x5, #0xb98
  4069a4:	add	x4, x4, #0x958
  4069a8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4069ac:	mov	w3, #0x44c                 	// #1100
  4069b0:	add	x2, x2, #0x803
  4069b4:	mov	w0, #0x7                   	// #7
  4069b8:	mov	w25, #0xffffffff            	// #-1
  4069bc:	bl	4049d0 <log_internal_realm@plt>
  4069c0:	mov	x24, #0x0                   	// #0
  4069c4:	mov	w19, w0
  4069c8:	b	4066e8 <test_chroot_dropin+0xe8>
  4069cc:	adrp	x21, 40c000 <manager_image_cache_discover+0x50>
  4069d0:	add	x21, x21, #0xbe8
  4069d4:	mov	x1, x21
  4069d8:	mov	x0, x25
  4069dc:	bl	4042b0 <strcspn@plt>
  4069e0:	mov	x26, x0
  4069e4:	mov	x0, x22
  4069e8:	bl	4044f0 <last_path_component@plt>
  4069ec:	mov	x1, x21
  4069f0:	mov	x21, x0
  4069f4:	bl	4042b0 <strcspn@plt>
  4069f8:	cmp	x26, x0
  4069fc:	b.ne	406838 <test_chroot_dropin+0x238>  // b.any
  406a00:	mov	x2, x26
  406a04:	mov	x1, x21
  406a08:	mov	x0, x25
  406a0c:	bl	404940 <memcmp@plt>
  406a10:	cmp	w0, #0x0
  406a14:	cset	w19, eq  // eq = none
  406a18:	b	406838 <test_chroot_dropin+0x238>
  406a1c:	bl	404880 <__stack_chk_fail@plt>
  406a20:	mov	w19, #0xfffffff4            	// #-12
  406a24:	b	4066e8 <test_chroot_dropin+0xe8>

0000000000406a28 <portable_get_state_internal>:
  406a28:	stp	x29, x30, [sp, #-256]!
  406a2c:	mov	x29, sp
  406a30:	stp	x23, x24, [sp, #48]
  406a34:	adrp	x24, 420000 <__FRAME_END__+0xfb68>
  406a38:	add	x24, x24, #0x738
  406a3c:	ldr	x5, [x24]
  406a40:	str	x5, [sp, #248]
  406a44:	mov	x5, #0x0                   	// #0
  406a48:	stp	x19, x20, [sp, #16]
  406a4c:	stp	x0, x4, [sp, #96]
  406a50:	str	x3, [sp, #112]
  406a54:	stp	xzr, xzr, [sp, #144]
  406a58:	stp	xzr, xzr, [sp, #160]
  406a5c:	stp	xzr, xzr, [sp, #176]
  406a60:	stp	xzr, xzr, [sp, #192]
  406a64:	stp	xzr, xzr, [sp, #208]
  406a68:	stp	xzr, xzr, [sp, #224]
  406a6c:	str	xzr, [sp, #240]
  406a70:	cbz	x1, 406d70 <portable_get_state_internal+0x348>
  406a74:	add	x0, sp, #0x90
  406a78:	mov	x3, #0x0                   	// #0
  406a7c:	stp	x25, x26, [sp, #64]
  406a80:	mov	x25, x1
  406a84:	mov	w26, w2
  406a88:	mov	w1, #0x0                   	// #0
  406a8c:	mov	w2, #0x4                   	// #4
  406a90:	bl	4049b0 <lookup_paths_init@plt>
  406a94:	mov	w19, w0
  406a98:	tbnz	w0, #31, 406c44 <portable_get_state_internal+0x21c>
  406a9c:	mov	w1, w26
  406aa0:	add	x0, sp, #0x90
  406aa4:	stp	x21, x22, [sp, #32]
  406aa8:	stp	x27, x28, [sp, #80]
  406aac:	bl	405bc0 <attached_path>
  406ab0:	mov	x28, x0
  406ab4:	bl	404b30 <opendir@plt>
  406ab8:	mov	x21, x0
  406abc:	cbz	x0, 406c88 <portable_get_state_internal+0x260>
  406ac0:	adrp	x0, 420000 <__FRAME_END__+0xfb68>
  406ac4:	add	x0, x0, #0x760
  406ac8:	bl	4047f0 <internal_set_new@plt>
  406acc:	mov	x23, x0
  406ad0:	cbz	x0, 406e50 <portable_get_state_internal+0x428>
  406ad4:	bl	404770 <__errno_location@plt>
  406ad8:	mov	x22, x0
  406adc:	mov	x0, x21
  406ae0:	stp	wzr, wzr, [sp, #120]
  406ae4:	str	wzr, [x22]
  406ae8:	bl	4045f0 <readdir64@plt>
  406aec:	mov	x19, x0
  406af0:	cbnz	x0, 406b0c <portable_get_state_internal+0xe4>
  406af4:	b	406d00 <portable_get_state_internal+0x2d8>
  406af8:	str	wzr, [x22]
  406afc:	mov	x0, x21
  406b00:	bl	4045f0 <readdir64@plt>
  406b04:	mov	x19, x0
  406b08:	cbz	x0, 406cc4 <portable_get_state_internal+0x29c>
  406b0c:	add	x27, x19, #0x13
  406b10:	mov	x0, x27
  406b14:	bl	404420 <hidden_or_backup_file@plt>
  406b18:	tst	w0, #0xff
  406b1c:	b.ne	406af8 <portable_get_state_internal+0xd0>  // b.any
  406b20:	mov	x0, x27
  406b24:	mov	w1, #0x7                   	// #7
  406b28:	bl	404d70 <unit_name_is_valid@plt>
  406b2c:	ands	w20, w0, #0xff
  406b30:	b.eq	406af8 <portable_get_state_internal+0xd0>  // b.none
  406b34:	mov	x1, x27
  406b38:	mov	x0, x23
  406b3c:	bl	404750 <internal_hashmap_get@plt>
  406b40:	cbnz	x0, 406af8 <portable_get_state_internal+0xd0>
  406b44:	mov	x1, x19
  406b48:	mov	x0, x21
  406b4c:	bl	4044b0 <dirent_ensure_type@plt>
  406b50:	ldrb	w0, [x19, #18]
  406b54:	and	w0, w0, #0xfffffffd
  406b58:	and	w0, w0, #0xff
  406b5c:	cmp	w0, #0x8
  406b60:	b.ne	406af8 <portable_get_state_internal+0xd0>  // b.any
  406b64:	mov	x3, x25
  406b68:	mov	x2, x27
  406b6c:	mov	x1, x28
  406b70:	mov	x0, x21
  406b74:	mov	x4, #0x0                   	// #0
  406b78:	bl	406600 <test_chroot_dropin>
  406b7c:	mov	w19, w0
  406b80:	cmp	w0, #0x0
  406b84:	b.lt	406c20 <portable_get_state_internal+0x1f8>  // b.tstop
  406b88:	b.eq	406af8 <portable_get_state_internal+0xd0>  // b.none
  406b8c:	add	x3, sp, #0x8c
  406b90:	mov	x2, x27
  406b94:	add	x1, sp, #0x90
  406b98:	mov	w0, #0x0                   	// #0
  406b9c:	bl	404730 <unit_file_lookup_state@plt>
  406ba0:	mov	w19, w0
  406ba4:	tbnz	w0, #31, 406e0c <portable_get_state_internal+0x3e4>
  406ba8:	ldr	w0, [sp, #140]
  406bac:	cmp	w0, #0x3
  406bb0:	b.le	406c74 <portable_get_state_internal+0x24c>
  406bb4:	sub	w0, w0, #0x6
  406bb8:	cmp	w0, #0x2
  406bbc:	ldr	w0, [sp, #120]
  406bc0:	csel	w0, w0, w20, cc  // cc = lo, ul, last
  406bc4:	str	w0, [sp, #120]
  406bc8:	ldp	x0, x2, [sp, #96]
  406bcc:	mov	x1, x27
  406bd0:	bl	405678 <unit_file_is_active>
  406bd4:	mov	w19, w0
  406bd8:	cmp	w0, #0x0
  406bdc:	b.lt	406c20 <portable_get_state_internal+0x1f8>  // b.tstop
  406be0:	ldr	w0, [sp, #124]
  406be4:	mov	x1, x27
  406be8:	csel	w0, w0, w20, eq  // eq = none
  406bec:	str	w0, [sp, #124]
  406bf0:	mov	x0, x23
  406bf4:	bl	404920 <set_put_strdup@plt>
  406bf8:	mov	w19, w0
  406bfc:	tbz	w0, #31, 406af8 <portable_get_state_internal+0xd0>
  406c00:	mov	w0, #0x0                   	// #0
  406c04:	bl	404d90 <log_get_max_level_realm@plt>
  406c08:	cmp	w0, #0x6
  406c0c:	b.gt	406e68 <portable_get_state_internal+0x440>
  406c10:	neg	w19, w19
  406c14:	and	w19, w19, #0xff
  406c18:	neg	w19, w19
  406c1c:	nop
  406c20:	mov	x0, x21
  406c24:	bl	404690 <closedir@plt>
  406c28:	mov	x0, x23
  406c2c:	adrp	x1, 404000 <_init-0x198>
  406c30:	mov	x2, #0x0                   	// #0
  406c34:	add	x1, x1, #0xc10
  406c38:	bl	404280 <internal_hashmap_free@plt>
  406c3c:	ldp	x21, x22, [sp, #32]
  406c40:	ldp	x27, x28, [sp, #80]
  406c44:	add	x0, sp, #0x90
  406c48:	bl	404330 <lookup_paths_free@plt>
  406c4c:	ldr	x1, [sp, #248]
  406c50:	ldr	x0, [x24]
  406c54:	eor	x0, x1, x0
  406c58:	cbnz	x0, 406e9c <portable_get_state_internal+0x474>
  406c5c:	mov	w0, w19
  406c60:	ldp	x19, x20, [sp, #16]
  406c64:	ldp	x23, x24, [sp, #48]
  406c68:	ldp	x25, x26, [sp, #64]
  406c6c:	ldp	x29, x30, [sp], #256
  406c70:	ret
  406c74:	cmp	w0, #0x1
  406c78:	ldr	w0, [sp, #120]
  406c7c:	csel	w0, w0, w20, gt
  406c80:	str	w0, [sp, #120]
  406c84:	b	406bc8 <portable_get_state_internal+0x1a0>
  406c88:	bl	404770 <__errno_location@plt>
  406c8c:	ldr	w19, [x0]
  406c90:	cmp	w19, #0x2
  406c94:	b.eq	406d58 <portable_get_state_internal+0x330>  // b.none
  406c98:	mov	w0, #0x0                   	// #0
  406c9c:	bl	404d90 <log_get_max_level_realm@plt>
  406ca0:	cmp	w0, #0x6
  406ca4:	b.gt	406dd0 <portable_get_state_internal+0x3a8>
  406ca8:	cmp	w19, #0x0
  406cac:	cneg	w19, w19, lt  // lt = tstop
  406cb0:	and	w19, w19, #0xff
  406cb4:	neg	w19, w19
  406cb8:	ldp	x21, x22, [sp, #32]
  406cbc:	ldp	x27, x28, [sp, #80]
  406cc0:	b	406c44 <portable_get_state_internal+0x21c>
  406cc4:	ldr	w20, [x22]
  406cc8:	cmp	w20, #0x0
  406ccc:	b.gt	406d0c <portable_get_state_internal+0x2e4>
  406cd0:	ldr	w0, [sp, #124]
  406cd4:	cbz	w0, 406da0 <portable_get_state_internal+0x378>
  406cd8:	mov	x0, x23
  406cdc:	bl	4049c0 <internal_hashmap_size@plt>
  406ce0:	mov	w1, #0x5                   	// #5
  406ce4:	cbz	w0, 406cf0 <portable_get_state_internal+0x2c8>
  406ce8:	ubfx	x26, x26, #2, #1
  406cec:	add	w1, w26, w1
  406cf0:	ldr	x0, [sp, #112]
  406cf4:	mov	w19, #0x0                   	// #0
  406cf8:	str	w1, [x0]
  406cfc:	b	406c20 <portable_get_state_internal+0x1f8>
  406d00:	ldr	w20, [x22]
  406d04:	cmp	w20, #0x0
  406d08:	b.le	406db4 <portable_get_state_internal+0x38c>
  406d0c:	and	w19, w20, #0xff
  406d10:	mov	w0, #0x0                   	// #0
  406d14:	neg	w19, w19
  406d18:	bl	404d90 <log_get_max_level_realm@plt>
  406d1c:	cmp	w0, #0x6
  406d20:	b.le	406c20 <portable_get_state_internal+0x1f8>
  406d24:	mov	x6, x28
  406d28:	mov	w1, w20
  406d2c:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  406d30:	adrp	x4, 40d000 <_fini+0x91c>
  406d34:	add	x5, x5, #0xc30
  406d38:	add	x4, x4, #0x980
  406d3c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406d40:	mov	w3, #0x53e                 	// #1342
  406d44:	add	x2, x2, #0x803
  406d48:	mov	w0, #0x7                   	// #7
  406d4c:	bl	4049d0 <log_internal_realm@plt>
  406d50:	mov	w19, w0
  406d54:	b	406c20 <portable_get_state_internal+0x1f8>
  406d58:	ldr	x0, [sp, #112]
  406d5c:	mov	w19, #0x0                   	// #0
  406d60:	str	wzr, [x0]
  406d64:	ldp	x21, x22, [sp, #32]
  406d68:	ldp	x27, x28, [sp, #80]
  406d6c:	b	406c44 <portable_get_state_internal+0x21c>
  406d70:	adrp	x4, 40d000 <_fini+0x91c>
  406d74:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  406d78:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406d7c:	add	x4, x4, #0x860
  406d80:	add	x1, x1, #0xbf8
  406d84:	add	x2, x2, #0x803
  406d88:	mov	w3, #0x526                 	// #1318
  406d8c:	mov	w0, #0x0                   	// #0
  406d90:	stp	x21, x22, [sp, #32]
  406d94:	stp	x25, x26, [sp, #64]
  406d98:	stp	x27, x28, [sp, #80]
  406d9c:	bl	4045c0 <log_assert_failed_realm@plt>
  406da0:	ldr	w0, [sp, #120]
  406da4:	cbz	w0, 406db4 <portable_get_state_internal+0x38c>
  406da8:	ubfx	x26, x26, #2, #1
  406dac:	add	w1, w26, #0x3
  406db0:	b	406cf0 <portable_get_state_internal+0x2c8>
  406db4:	mov	x0, x23
  406db8:	bl	4049c0 <internal_hashmap_size@plt>
  406dbc:	mov	w1, #0x0                   	// #0
  406dc0:	cbz	w0, 406cf0 <portable_get_state_internal+0x2c8>
  406dc4:	ubfx	x26, x26, #2, #1
  406dc8:	add	w1, w26, #0x1
  406dcc:	b	406cf0 <portable_get_state_internal+0x2c8>
  406dd0:	mov	x6, x28
  406dd4:	mov	w1, w19
  406dd8:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  406ddc:	adrp	x4, 40d000 <_fini+0x91c>
  406de0:	add	x5, x5, #0xc08
  406de4:	add	x4, x4, #0x980
  406de8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406dec:	mov	w3, #0x537                 	// #1335
  406df0:	add	x2, x2, #0x803
  406df4:	mov	w0, #0x7                   	// #7
  406df8:	bl	4049d0 <log_internal_realm@plt>
  406dfc:	mov	w19, w0
  406e00:	ldp	x21, x22, [sp, #32]
  406e04:	ldp	x27, x28, [sp, #80]
  406e08:	b	406c44 <portable_get_state_internal+0x21c>
  406e0c:	mov	w0, #0x0                   	// #0
  406e10:	bl	404d90 <log_get_max_level_realm@plt>
  406e14:	cmp	w0, #0x6
  406e18:	b.le	406c10 <portable_get_state_internal+0x1e8>
  406e1c:	mov	w1, w19
  406e20:	mov	x6, x27
  406e24:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  406e28:	adrp	x4, 40d000 <_fini+0x91c>
  406e2c:	add	x5, x5, #0xc58
  406e30:	add	x4, x4, #0x980
  406e34:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406e38:	mov	w3, #0x554                 	// #1364
  406e3c:	add	x2, x2, #0x803
  406e40:	mov	w0, #0x7                   	// #7
  406e44:	bl	4049d0 <log_internal_realm@plt>
  406e48:	mov	w19, w0
  406e4c:	b	406c20 <portable_get_state_internal+0x1f8>
  406e50:	mov	x0, x21
  406e54:	mov	w19, #0xfffffff4            	// #-12
  406e58:	bl	404690 <closedir@plt>
  406e5c:	ldp	x21, x22, [sp, #32]
  406e60:	ldp	x27, x28, [sp, #80]
  406e64:	b	406c44 <portable_get_state_internal+0x21c>
  406e68:	mov	w1, w19
  406e6c:	mov	x6, x27
  406e70:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  406e74:	adrp	x4, 40d000 <_fini+0x91c>
  406e78:	add	x5, x5, #0xc88
  406e7c:	add	x4, x4, #0x980
  406e80:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  406e84:	mov	w3, #0x560                 	// #1376
  406e88:	add	x2, x2, #0x803
  406e8c:	mov	w0, #0x7                   	// #7
  406e90:	bl	4049d0 <log_internal_realm@plt>
  406e94:	mov	w19, w0
  406e98:	b	406c20 <portable_get_state_internal+0x1f8>
  406e9c:	stp	x21, x22, [sp, #32]
  406ea0:	stp	x27, x28, [sp, #80]
  406ea4:	bl	404880 <__stack_chk_fail@plt>

0000000000406ea8 <attach_unit_file>:
  406ea8:	stp	x29, x30, [sp, #-160]!
  406eac:	mov	x29, sp
  406eb0:	stp	x19, x20, [sp, #16]
  406eb4:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  406eb8:	add	x20, x20, #0x738
  406ebc:	ldr	x8, [x20]
  406ec0:	str	x8, [x29, #152]
  406ec4:	mov	x8, #0x0                   	// #0
  406ec8:	stp	x21, x22, [sp, #32]
  406ecc:	stp	x23, x24, [sp, #48]
  406ed0:	stp	x25, x26, [sp, #64]
  406ed4:	stp	x27, x28, [sp, #80]
  406ed8:	sub	sp, sp, #0x20
  406edc:	str	w2, [x29, #128]
  406ee0:	str	x6, [x29, #136]
  406ee4:	cbz	x1, 407384 <attach_unit_file+0x4dc>
  406ee8:	mov	x19, x3
  406eec:	cbz	x3, 4073a8 <attach_unit_file+0x500>
  406ef0:	mov	x21, x1
  406ef4:	ldrb	w1, [x3, #16]
  406ef8:	cbz	w1, 4070bc <attach_unit_file+0x214>
  406efc:	cmp	w1, #0x2f
  406f00:	b.eq	4070bc <attach_unit_file+0x214>  // b.none
  406f04:	mov	w1, w5
  406f08:	mov	x26, x4
  406f0c:	mov	w23, w5
  406f10:	mov	x25, x7
  406f14:	bl	405bc0 <attached_path>
  406f18:	mov	x22, x0
  406f1c:	mov	w1, #0x1ed                 	// #493
  406f20:	bl	404d40 <mkdir_parents@plt>
  406f24:	mov	x0, x22
  406f28:	mov	w1, #0x1ed                 	// #493
  406f2c:	bl	404bc0 <mkdir@plt>
  406f30:	tbz	w0, #31, 406f7c <attach_unit_file+0xd4>
  406f34:	bl	404770 <__errno_location@plt>
  406f38:	ldr	w0, [x0]
  406f3c:	cmp	w0, #0x11
  406f40:	b.eq	406f94 <attach_unit_file+0xec>  // b.none
  406f44:	neg	w21, w0
  406f48:	ldr	x1, [x29, #152]
  406f4c:	ldr	x0, [x20]
  406f50:	eor	x0, x1, x0
  406f54:	cbnz	x0, 407a5c <attach_unit_file+0xbb4>
  406f58:	mov	sp, x29
  406f5c:	mov	w0, w21
  406f60:	ldp	x19, x20, [sp, #16]
  406f64:	ldp	x21, x22, [sp, #32]
  406f68:	ldp	x23, x24, [sp, #48]
  406f6c:	ldp	x25, x26, [sp, #64]
  406f70:	ldp	x27, x28, [sp, #80]
  406f74:	ldp	x29, x30, [sp], #160
  406f78:	ret
  406f7c:	ldr	x0, [x29, #136]
  406f80:	mov	x3, x22
  406f84:	mov	x1, x25
  406f88:	mov	x4, #0x0                   	// #0
  406f8c:	mov	w2, #0x4                   	// #4
  406f90:	bl	405a58 <portable_changes_add>
  406f94:	add	x0, x19, #0x10
  406f98:	ldrb	w28, [x19, #16]
  406f9c:	str	x0, [x29, #120]
  406fa0:	mov	x24, x0
  406fa4:	cmp	w28, #0x2f
  406fa8:	b.eq	406fb4 <attach_unit_file+0x10c>  // b.none
  406fac:	b	406fc0 <attach_unit_file+0x118>
  406fb0:	add	x24, x24, #0x1
  406fb4:	ldrb	w0, [x24, #1]
  406fb8:	cmp	w0, #0x2f
  406fbc:	b.eq	406fb0 <attach_unit_file+0x108>  // b.none
  406fc0:	ldrb	w0, [x22]
  406fc4:	cbz	w0, 407058 <attach_unit_file+0x1b0>
  406fc8:	mov	x0, x22
  406fcc:	bl	404d30 <strlen@plt>
  406fd0:	mov	x27, x0
  406fd4:	mov	x0, x24
  406fd8:	bl	404d30 <strlen@plt>
  406fdc:	add	x1, x27, x0
  406fe0:	mov	x2, x0
  406fe4:	add	x0, x1, #0x2
  406fe8:	cmp	x0, #0x400, lsl #12
  406fec:	b.hi	40744c <attach_unit_file+0x5a4>  // b.pmore
  406ff0:	add	x3, x1, #0x11
  406ff4:	mov	x1, x22
  406ff8:	and	x3, x3, #0xfffffffffffffff0
  406ffc:	str	x2, [x29, #112]
  407000:	sub	sp, sp, x3
  407004:	add	x27, sp, #0x20
  407008:	mov	x0, x27
  40700c:	bl	4042e0 <stpcpy@plt>
  407010:	cmp	x27, x0
  407014:	ldr	x2, [x29, #112]
  407018:	b.cc	40702c <attach_unit_file+0x184>  // b.lo, b.ul, b.last
  40701c:	b	407038 <attach_unit_file+0x190>
  407020:	sub	x0, x0, #0x1
  407024:	cmp	x27, x0
  407028:	b.eq	407374 <attach_unit_file+0x4cc>  // b.none
  40702c:	ldurb	w1, [x0, #-1]
  407030:	cmp	w1, #0x2f
  407034:	b.eq	407020 <attach_unit_file+0x178>  // b.none
  407038:	cmp	w28, #0x2f
  40703c:	b.eq	407048 <attach_unit_file+0x1a0>  // b.none
  407040:	mov	w1, #0x2f                  	// #47
  407044:	strb	w1, [x0], #1
  407048:	mov	x1, x24
  40704c:	add	x2, x2, #0x1
  407050:	mov	x24, x27
  407054:	bl	404490 <memcpy@plt>
  407058:	mov	x0, x24
  40705c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  407060:	mov	x2, #0x0                   	// #0
  407064:	add	x1, x1, #0xcf0
  407068:	bl	404520 <strjoin_real@plt>
  40706c:	mov	x27, x0
  407070:	cbz	x0, 40736c <attach_unit_file+0x4c4>
  407074:	mov	w1, #0x1ed                 	// #493
  407078:	bl	404bc0 <mkdir@plt>
  40707c:	tbz	w0, #31, 4070e0 <attach_unit_file+0x238>
  407080:	bl	404770 <__errno_location@plt>
  407084:	ldr	w1, [x0]
  407088:	mov	x28, x0
  40708c:	cmp	w1, #0x11
  407090:	b.eq	4070f8 <attach_unit_file+0x250>  // b.none
  407094:	neg	w21, w1
  407098:	mov	x0, x27
  40709c:	str	w1, [x29, #136]
  4070a0:	bl	404760 <rmdir@plt>
  4070a4:	mov	x0, x27
  4070a8:	bl	404c10 <free@plt>
  4070ac:	ldr	w1, [x29, #136]
  4070b0:	tbnz	w1, #31, 406f48 <attach_unit_file+0xa0>
  4070b4:	str	w1, [x28]
  4070b8:	b	406f48 <attach_unit_file+0xa0>
  4070bc:	adrp	x4, 40d000 <_fini+0x91c>
  4070c0:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4070c4:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4070c8:	add	x4, x4, #0x7e8
  4070cc:	add	x1, x1, #0xcd0
  4070d0:	add	x2, x2, #0x803
  4070d4:	mov	w3, #0x348                 	// #840
  4070d8:	mov	w0, #0x0                   	// #0
  4070dc:	bl	4045c0 <log_assert_failed_realm@plt>
  4070e0:	ldr	x0, [x29, #136]
  4070e4:	mov	x3, x27
  4070e8:	mov	x1, x25
  4070ec:	mov	x4, #0x0                   	// #0
  4070f0:	mov	w2, #0x4                   	// #4
  4070f4:	bl	405a58 <portable_changes_add>
  4070f8:	mov	x0, x27
  4070fc:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  407100:	mov	x2, #0xffffffffffffffff    	// #-1
  407104:	add	x1, x1, #0xf30
  407108:	str	xzr, [x29, #144]
  40710c:	bl	4048d0 <path_join_internal@plt>
  407110:	mov	x28, x0
  407114:	cbz	x0, 4078a4 <attach_unit_file+0x9fc>
  407118:	mov	x1, x21
  40711c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407120:	adrp	x0, 40c000 <manager_image_cache_discover+0x50>
  407124:	add	x2, x2, #0xcf8
  407128:	add	x0, x0, #0xbb8
  40712c:	mov	x3, #0x0                   	// #0
  407130:	bl	404520 <strjoin_real@plt>
  407134:	str	x0, [x29, #112]
  407138:	str	x0, [x29, #144]
  40713c:	cbz	x0, 40789c <attach_unit_file+0x9f4>
  407140:	ldr	x0, [x29, #120]
  407144:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  407148:	add	x1, x1, #0x708
  40714c:	bl	404ab0 <endswith@plt>
  407150:	ldr	x2, [x29, #112]
  407154:	cbz	x0, 4071d8 <attach_unit_file+0x330>
  407158:	ldr	w0, [x29, #128]
  40715c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  407160:	adrp	x3, 40c000 <manager_image_cache_discover+0x50>
  407164:	add	x1, x1, #0xcc0
  407168:	cmp	w0, #0x2
  40716c:	add	x3, x3, #0xcb0
  407170:	csel	x3, x3, x1, cc  // cc = lo, ul, last
  407174:	mov	x0, x21
  407178:	str	x3, [x29, #112]
  40717c:	bl	4048b0 <basename@plt>
  407180:	mov	x6, x0
  407184:	mov	x0, x21
  407188:	str	x6, [x29, #128]
  40718c:	bl	4048b0 <basename@plt>
  407190:	str	xzr, [sp, #16]
  407194:	ldr	x3, [x29, #112]
  407198:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40719c:	ldr	x6, [x29, #128]
  4071a0:	add	x1, x1, #0xd58
  4071a4:	stp	x0, x1, [sp]
  4071a8:	adrp	x7, 40c000 <manager_image_cache_discover+0x50>
  4071ac:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4071b0:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4071b4:	mov	x4, x21
  4071b8:	add	x7, x7, #0xd10
  4071bc:	add	x5, x5, #0xd30
  4071c0:	add	x2, x2, #0xd48
  4071c4:	add	x0, x29, #0x90
  4071c8:	mov	x1, #0x0                   	// #0
  4071cc:	bl	404820 <strextend_with_separator@plt>
  4071d0:	cbz	x0, 40789c <attach_unit_file+0x9f4>
  4071d4:	ldr	x2, [x29, #144]
  4071d8:	mov	x1, x2
  4071dc:	mov	x0, x28
  4071e0:	mov	x3, #0x0                   	// #0
  4071e4:	mov	w2, #0x3                   	// #3
  4071e8:	bl	4043b0 <write_string_file_ts@plt>
  4071ec:	mov	w21, w0
  4071f0:	tbnz	w0, #31, 4073cc <attach_unit_file+0x524>
  4071f4:	ldr	x0, [x29, #136]
  4071f8:	mov	x3, x28
  4071fc:	mov	x1, x25
  407200:	mov	x4, #0x0                   	// #0
  407204:	mov	w2, #0x3                   	// #3
  407208:	bl	405a58 <portable_changes_add>
  40720c:	ldr	x0, [x29, #144]
  407210:	bl	404c10 <free@plt>
  407214:	cbz	x26, 407410 <attach_unit_file+0x568>
  407218:	ldr	x0, [x29, #120]
  40721c:	mov	w1, #0x2e                  	// #46
  407220:	bl	404570 <strrchr@plt>
  407224:	cbz	x0, 407824 <attach_unit_file+0x97c>
  407228:	add	x0, x0, #0x1
  40722c:	adrp	x21, 40d000 <_fini+0x91c>
  407230:	add	x21, x21, #0xa48
  407234:	str	x0, [x29, #120]
  407238:	adrp	x0, 40c000 <manager_image_cache_discover+0x50>
  40723c:	add	x0, x0, #0xda0
  407240:	str	x0, [x29, #112]
  407244:	adrp	x0, 40c000 <manager_image_cache_discover+0x50>
  407248:	add	x0, x0, #0xbe8
  40724c:	str	x0, [x29, #104]
  407250:	ldp	x1, x5, [x29, #104]
  407254:	mov	x2, x26
  407258:	ldr	x4, [x29, #120]
  40725c:	mov	x0, x21
  407260:	mov	x6, #0x0                   	// #0
  407264:	mov	x3, x1
  407268:	bl	404520 <strjoin_real@plt>
  40726c:	mov	x9, x0
  407270:	cbz	x0, 407710 <attach_unit_file+0x868>
  407274:	mov	x1, x0
  407278:	mov	w3, #0x100                 	// #256
  40727c:	mov	w2, #0x0                   	// #0
  407280:	mov	w0, #0xffffff9c            	// #-100
  407284:	str	x9, [x29, #128]
  407288:	bl	4045e0 <faccessat@plt>
  40728c:	ldr	x9, [x29, #128]
  407290:	tbz	w0, #31, 40752c <attach_unit_file+0x684>
  407294:	bl	404770 <__errno_location@plt>
  407298:	ldr	w1, [x0]
  40729c:	mov	x2, x0
  4072a0:	cmp	w1, #0x2
  4072a4:	ldr	x9, [x29, #128]
  4072a8:	b.ne	40763c <attach_unit_file+0x794>  // b.any
  4072ac:	mov	x0, x9
  4072b0:	str	x2, [x29, #128]
  4072b4:	bl	404c10 <free@plt>
  4072b8:	mov	x0, x21
  4072bc:	bl	404d30 <strlen@plt>
  4072c0:	add	x0, x0, #0x1
  4072c4:	add	x21, x21, x0
  4072c8:	ldr	x2, [x29, #128]
  4072cc:	ldrb	w0, [x21]
  4072d0:	cbnz	w0, 407250 <attach_unit_file+0x3a8>
  4072d4:	mov	w0, #0x0                   	// #0
  4072d8:	str	x2, [x29, #128]
  4072dc:	bl	404d90 <log_get_max_level_realm@plt>
  4072e0:	cmp	w0, #0x6
  4072e4:	ldr	x2, [x29, #128]
  4072e8:	b.le	407410 <attach_unit_file+0x568>
  4072ec:	ldr	w1, [x2]
  4072f0:	mov	x6, x26
  4072f4:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4072f8:	adrp	x4, 40d000 <_fini+0x91c>
  4072fc:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407300:	add	x5, x5, #0xdd0
  407304:	add	x4, x4, #0x910
  407308:	add	x2, x2, #0x803
  40730c:	mov	w3, #0x30a                 	// #778
  407310:	mov	w0, #0x7                   	// #7
  407314:	mov	x26, #0x0                   	// #0
  407318:	bl	4049d0 <log_internal_realm@plt>
  40731c:	tbz	w23, #1, 407470 <attach_unit_file+0x5c8>
  407320:	ldr	x0, [x19, #8]
  407324:	cbz	x0, 407470 <attach_unit_file+0x5c8>
  407328:	mov	x1, x24
  40732c:	bl	4044e0 <symlink@plt>
  407330:	tbnz	w0, #31, 407728 <attach_unit_file+0x880>
  407334:	ldr	x4, [x19, #8]
  407338:	mov	x3, x24
  40733c:	ldr	x0, [x29, #136]
  407340:	mov	x1, x25
  407344:	mov	w2, #0x1                   	// #1
  407348:	bl	405a58 <portable_changes_add>
  40734c:	mov	x0, x28
  407350:	bl	404c10 <free@plt>
  407354:	mov	x0, x26
  407358:	bl	404c10 <free@plt>
  40735c:	mov	x0, x27
  407360:	mov	w21, #0x0                   	// #0
  407364:	bl	404c10 <free@plt>
  407368:	b	406f48 <attach_unit_file+0xa0>
  40736c:	mov	w21, #0xfffffff4            	// #-12
  407370:	b	406f48 <attach_unit_file+0xa0>
  407374:	mov	x0, x27
  407378:	cmp	w28, #0x2f
  40737c:	b.ne	407040 <attach_unit_file+0x198>  // b.any
  407380:	b	407048 <attach_unit_file+0x1a0>
  407384:	adrp	x4, 40d000 <_fini+0x91c>
  407388:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40738c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407390:	add	x4, x4, #0x7e8
  407394:	add	x1, x1, #0x9c0
  407398:	add	x2, x2, #0x803
  40739c:	mov	w3, #0x346                 	// #838
  4073a0:	mov	w0, #0x0                   	// #0
  4073a4:	bl	4045c0 <log_assert_failed_realm@plt>
  4073a8:	adrp	x4, 40d000 <_fini+0x91c>
  4073ac:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4073b0:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4073b4:	add	x4, x4, #0x7e8
  4073b8:	add	x1, x1, #0xec8
  4073bc:	add	x2, x2, #0x803
  4073c0:	mov	w3, #0x347                 	// #839
  4073c4:	mov	w0, #0x0                   	// #0
  4073c8:	bl	4045c0 <log_assert_failed_realm@plt>
  4073cc:	mov	w0, #0x0                   	// #0
  4073d0:	bl	404d90 <log_get_max_level_realm@plt>
  4073d4:	cmp	w0, #0x6
  4073d8:	b.gt	407418 <attach_unit_file+0x570>
  4073dc:	neg	w21, w21
  4073e0:	and	w21, w21, #0xff
  4073e4:	neg	w21, w21
  4073e8:	mov	x0, x28
  4073ec:	bl	404c10 <free@plt>
  4073f0:	ldr	x0, [x29, #144]
  4073f4:	mov	x28, #0x0                   	// #0
  4073f8:	bl	404c10 <free@plt>
  4073fc:	tbz	w21, #31, 407214 <attach_unit_file+0x36c>
  407400:	bl	404770 <__errno_location@plt>
  407404:	ldr	w1, [x0]
  407408:	mov	x28, x0
  40740c:	b	407098 <attach_unit_file+0x1f0>
  407410:	mov	x26, #0x0                   	// #0
  407414:	b	40731c <attach_unit_file+0x474>
  407418:	mov	w1, w21
  40741c:	mov	x6, x28
  407420:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  407424:	adrp	x4, 40d000 <_fini+0x91c>
  407428:	add	x5, x5, #0xd60
  40742c:	add	x4, x4, #0x8f8
  407430:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407434:	mov	w3, #0x2cc                 	// #716
  407438:	add	x2, x2, #0x803
  40743c:	mov	w0, #0x7                   	// #7
  407440:	bl	4049d0 <log_internal_realm@plt>
  407444:	mov	w21, w0
  407448:	b	4073e8 <attach_unit_file+0x540>
  40744c:	adrp	x4, 40d000 <_fini+0x91c>
  407450:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  407454:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407458:	add	x4, x4, #0x7e8
  40745c:	add	x1, x1, #0x920
  407460:	add	x2, x2, #0x803
  407464:	mov	w3, #0x353                 	// #851
  407468:	mov	w0, #0x0                   	// #0
  40746c:	bl	4045c0 <log_assert_failed_realm@plt>
  407470:	mov	w1, #0x1                   	// #1
  407474:	mov	x0, x22
  407478:	add	x2, x29, #0x90
  40747c:	movk	w1, #0x8, lsl #16
  407480:	str	xzr, [x29, #144]
  407484:	bl	404370 <open_tmpfile_linkable@plt>
  407488:	mov	w22, w0
  40748c:	tbnz	w0, #31, 4075b0 <attach_unit_file+0x708>
  407490:	mov	w1, w0
  407494:	ldr	w0, [x19]
  407498:	mov	x7, #0x0                   	// #0
  40749c:	mov	x6, #0x0                   	// #0
  4074a0:	mov	x5, #0x0                   	// #0
  4074a4:	mov	x4, #0x0                   	// #0
  4074a8:	mov	w3, #0x1                   	// #1
  4074ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4074b0:	bl	404c30 <copy_bytes_full@plt>
  4074b4:	mov	w21, w0
  4074b8:	tbnz	w0, #31, 407758 <attach_unit_file+0x8b0>
  4074bc:	mov	w0, w22
  4074c0:	mov	w1, #0x1a4                 	// #420
  4074c4:	bl	4042d0 <fchmod@plt>
  4074c8:	tbnz	w0, #31, 4077f4 <attach_unit_file+0x94c>
  4074cc:	ldr	x1, [x29, #144]
  4074d0:	mov	x2, x24
  4074d4:	mov	w0, w22
  4074d8:	bl	404630 <link_tmpfile@plt>
  4074dc:	mov	w21, w0
  4074e0:	tbnz	w0, #31, 4078c0 <attach_unit_file+0xa18>
  4074e4:	ldr	x0, [x29, #144]
  4074e8:	bl	404c10 <free@plt>
  4074ec:	str	xzr, [x29, #144]
  4074f0:	ldr	x4, [x19, #8]
  4074f4:	mov	x3, x24
  4074f8:	ldr	x0, [x29, #136]
  4074fc:	mov	x1, x25
  407500:	mov	w2, #0x0                   	// #0
  407504:	bl	405a58 <portable_changes_add>
  407508:	mov	w0, w22
  40750c:	bl	404530 <safe_close@plt>
  407510:	ldr	x19, [x29, #144]
  407514:	cbz	x19, 40734c <attach_unit_file+0x4a4>
  407518:	mov	x0, x19
  40751c:	bl	404720 <unlink_noerrno@plt>
  407520:	mov	x0, x19
  407524:	bl	404c10 <free@plt>
  407528:	b	40734c <attach_unit_file+0x4a4>
  40752c:	mov	x0, x27
  407530:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  407534:	mov	x2, #0xffffffffffffffff    	// #-1
  407538:	add	x1, x1, #0xe08
  40753c:	str	x9, [x29, #128]
  407540:	bl	4048d0 <path_join_internal@plt>
  407544:	mov	x26, x0
  407548:	ldr	x9, [x29, #128]
  40754c:	cbz	x0, 407a4c <attach_unit_file+0xba4>
  407550:	tbz	w23, #0, 4076e0 <attach_unit_file+0x838>
  407554:	mov	x1, x0
  407558:	mov	x7, #0x0                   	// #0
  40755c:	mov	x0, x9
  407560:	mov	x6, #0x0                   	// #0
  407564:	mov	w5, #0x1                   	// #1
  407568:	mov	w4, #0x0                   	// #0
  40756c:	mov	w3, #0x0                   	// #0
  407570:	mov	w2, #0x1a4                 	// #420
  407574:	bl	404380 <copy_file_atomic_full@plt>
  407578:	mov	w21, w0
  40757c:	ldr	x9, [x29, #128]
  407580:	tbnz	w0, #31, 407878 <attach_unit_file+0x9d0>
  407584:	mov	x4, x9
  407588:	mov	x3, x26
  40758c:	mov	x1, x25
  407590:	mov	w2, #0x0                   	// #0
  407594:	str	x9, [x29, #128]
  407598:	ldr	x0, [x29, #136]
  40759c:	bl	405a58 <portable_changes_add>
  4075a0:	ldr	x9, [x29, #128]
  4075a4:	mov	x0, x9
  4075a8:	bl	404c10 <free@plt>
  4075ac:	b	40731c <attach_unit_file+0x474>
  4075b0:	mov	w0, #0x0                   	// #0
  4075b4:	bl	404d90 <log_get_max_level_realm@plt>
  4075b8:	mov	w21, w0
  4075bc:	bl	404770 <__errno_location@plt>
  4075c0:	cmp	w21, #0x6
  4075c4:	mov	x19, x0
  4075c8:	b.gt	4077c0 <attach_unit_file+0x918>
  4075cc:	neg	w21, w22
  4075d0:	and	w21, w21, #0xff
  4075d4:	neg	w21, w21
  4075d8:	mov	w0, w22
  4075dc:	bl	404530 <safe_close@plt>
  4075e0:	ldr	x22, [x29, #144]
  4075e4:	cbz	x22, 4075f8 <attach_unit_file+0x750>
  4075e8:	mov	x0, x22
  4075ec:	bl	404720 <unlink_noerrno@plt>
  4075f0:	mov	x0, x22
  4075f4:	bl	404c10 <free@plt>
  4075f8:	ldr	w22, [x19]
  4075fc:	mov	x0, x27
  407600:	bl	404760 <rmdir@plt>
  407604:	mov	x0, x27
  407608:	bl	404c10 <free@plt>
  40760c:	tbz	w22, #31, 407a44 <attach_unit_file+0xb9c>
  407610:	cbz	x26, 407624 <attach_unit_file+0x77c>
  407614:	mov	x0, x26
  407618:	bl	404720 <unlink_noerrno@plt>
  40761c:	mov	x0, x26
  407620:	bl	404c10 <free@plt>
  407624:	cbz	x28, 406f48 <attach_unit_file+0xa0>
  407628:	mov	x0, x28
  40762c:	bl	404720 <unlink_noerrno@plt>
  407630:	mov	x0, x28
  407634:	bl	404c10 <free@plt>
  407638:	b	406f48 <attach_unit_file+0xa0>
  40763c:	mov	x0, x9
  407640:	str	w1, [x29, #128]
  407644:	bl	404c10 <free@plt>
  407648:	ldr	w1, [x29, #128]
  40764c:	mov	x9, #0x0                   	// #0
  407650:	cmp	w1, #0x0
  407654:	b.le	40752c <attach_unit_file+0x684>
  407658:	str	w1, [x29, #120]
  40765c:	bl	404770 <__errno_location@plt>
  407660:	mov	x2, x0
  407664:	mov	w0, #0x0                   	// #0
  407668:	str	x2, [x29, #128]
  40766c:	bl	404d90 <log_get_max_level_realm@plt>
  407670:	ldr	x2, [x29, #128]
  407674:	ldr	w1, [x29, #120]
  407678:	ldr	w21, [x2]
  40767c:	cmp	w1, #0x2
  407680:	b.eq	4072d4 <attach_unit_file+0x42c>  // b.none
  407684:	cmp	w0, #0x6
  407688:	b.gt	407784 <attach_unit_file+0x8dc>
  40768c:	cmp	w21, #0x0
  407690:	mov	x9, #0x0                   	// #0
  407694:	cneg	w21, w21, lt  // lt = tstop
  407698:	mov	x26, #0x0                   	// #0
  40769c:	and	w21, w21, #0xff
  4076a0:	neg	w21, w21
  4076a4:	mov	x0, x9
  4076a8:	bl	404c10 <free@plt>
  4076ac:	mov	x0, x26
  4076b0:	bl	404c10 <free@plt>
  4076b4:	tbz	w21, #31, 407410 <attach_unit_file+0x568>
  4076b8:	bl	404770 <__errno_location@plt>
  4076bc:	mov	x19, x0
  4076c0:	mov	x0, x27
  4076c4:	ldr	w22, [x19]
  4076c8:	bl	404760 <rmdir@plt>
  4076cc:	mov	x0, x27
  4076d0:	bl	404c10 <free@plt>
  4076d4:	tbnz	w22, #31, 407624 <attach_unit_file+0x77c>
  4076d8:	str	w22, [x19]
  4076dc:	b	407624 <attach_unit_file+0x77c>
  4076e0:	mov	x1, x0
  4076e4:	mov	x0, x9
  4076e8:	str	x9, [x29, #128]
  4076ec:	bl	4044e0 <symlink@plt>
  4076f0:	ldr	x9, [x29, #128]
  4076f4:	tbnz	w0, #31, 407844 <attach_unit_file+0x99c>
  4076f8:	mov	x4, x9
  4076fc:	mov	x3, x26
  407700:	mov	x1, x25
  407704:	mov	w2, #0x1                   	// #1
  407708:	str	x9, [x29, #128]
  40770c:	b	407598 <attach_unit_file+0x6f0>
  407710:	bl	404770 <__errno_location@plt>
  407714:	mov	x1, x0
  407718:	mov	w0, #0x0                   	// #0
  40771c:	ldr	w21, [x1]
  407720:	bl	404d90 <log_get_max_level_realm@plt>
  407724:	b	407684 <attach_unit_file+0x7dc>
  407728:	bl	404770 <__errno_location@plt>
  40772c:	mov	x19, x0
  407730:	mov	w0, #0x0                   	// #0
  407734:	bl	404d90 <log_get_max_level_realm@plt>
  407738:	cmp	w0, #0x6
  40773c:	ldr	w22, [x19]
  407740:	b.gt	407944 <attach_unit_file+0xa9c>
  407744:	cmp	w22, #0x0
  407748:	cneg	w21, w22, lt  // lt = tstop
  40774c:	and	w21, w21, #0xff
  407750:	neg	w21, w21
  407754:	b	4075fc <attach_unit_file+0x754>
  407758:	mov	w0, #0x0                   	// #0
  40775c:	bl	404d90 <log_get_max_level_realm@plt>
  407760:	mov	w23, w0
  407764:	bl	404770 <__errno_location@plt>
  407768:	cmp	w23, #0x6
  40776c:	mov	x19, x0
  407770:	b.gt	407910 <attach_unit_file+0xa68>
  407774:	neg	w21, w21
  407778:	and	w21, w21, #0xff
  40777c:	neg	w21, w21
  407780:	b	4075d8 <attach_unit_file+0x730>
  407784:	mov	x6, x26
  407788:	mov	w1, w21
  40778c:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  407790:	adrp	x4, 40d000 <_fini+0x91c>
  407794:	add	x5, x5, #0xda8
  407798:	add	x4, x4, #0x910
  40779c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4077a0:	mov	w3, #0x308                 	// #776
  4077a4:	add	x2, x2, #0x803
  4077a8:	mov	w0, #0x7                   	// #7
  4077ac:	bl	4049d0 <log_internal_realm@plt>
  4077b0:	mov	x26, #0x0                   	// #0
  4077b4:	mov	w21, w0
  4077b8:	mov	x9, #0x0                   	// #0
  4077bc:	b	4076a4 <attach_unit_file+0x7fc>
  4077c0:	mov	x6, x24
  4077c4:	mov	w1, w22
  4077c8:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4077cc:	adrp	x4, 40d000 <_fini+0x91c>
  4077d0:	add	x5, x5, #0xe80
  4077d4:	add	x4, x4, #0x928
  4077d8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4077dc:	mov	w3, #0x377                 	// #887
  4077e0:	add	x2, x2, #0x803
  4077e4:	mov	w0, #0x7                   	// #7
  4077e8:	bl	4049d0 <log_internal_realm@plt>
  4077ec:	mov	w21, w0
  4077f0:	b	4075d8 <attach_unit_file+0x730>
  4077f4:	bl	404770 <__errno_location@plt>
  4077f8:	mov	x19, x0
  4077fc:	mov	w0, #0x0                   	// #0
  407800:	bl	404d90 <log_get_max_level_realm@plt>
  407804:	cmp	w0, #0x6
  407808:	ldr	w1, [x19]
  40780c:	b.gt	40797c <attach_unit_file+0xad4>
  407810:	cmp	w1, #0x0
  407814:	cneg	w1, w1, lt  // lt = tstop
  407818:	and	w21, w1, #0xff
  40781c:	neg	w21, w21
  407820:	b	4075d8 <attach_unit_file+0x730>
  407824:	adrp	x4, 40d000 <_fini+0x91c>
  407828:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40782c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407830:	add	x4, x4, #0x7c8
  407834:	add	x1, x1, #0xd80
  407838:	add	x2, x2, #0x803
  40783c:	mov	w3, #0x2dc                 	// #732
  407840:	bl	4045c0 <log_assert_failed_realm@plt>
  407844:	bl	404770 <__errno_location@plt>
  407848:	mov	x1, x0
  40784c:	mov	w0, #0x0                   	// #0
  407850:	ldr	w21, [x1]
  407854:	bl	404d90 <log_get_max_level_realm@plt>
  407858:	cmp	w0, #0x6
  40785c:	ldr	x9, [x29, #128]
  407860:	b.gt	4079ac <attach_unit_file+0xb04>
  407864:	cmp	w21, #0x0
  407868:	cneg	w21, w21, lt  // lt = tstop
  40786c:	and	w21, w21, #0xff
  407870:	neg	w21, w21
  407874:	b	4076a4 <attach_unit_file+0x7fc>
  407878:	mov	w0, #0x0                   	// #0
  40787c:	bl	404d90 <log_get_max_level_realm@plt>
  407880:	cmp	w0, #0x6
  407884:	ldr	x9, [x29, #128]
  407888:	b.gt	4079f8 <attach_unit_file+0xb50>
  40788c:	neg	w21, w21
  407890:	and	w21, w21, #0xff
  407894:	neg	w21, w21
  407898:	b	4076a4 <attach_unit_file+0x7fc>
  40789c:	mov	x0, x28
  4078a0:	bl	404c10 <free@plt>
  4078a4:	ldr	x0, [x29, #144]
  4078a8:	mov	w21, #0xfffffff4            	// #-12
  4078ac:	bl	404c10 <free@plt>
  4078b0:	bl	404770 <__errno_location@plt>
  4078b4:	ldr	w1, [x0]
  4078b8:	mov	x28, x0
  4078bc:	b	407098 <attach_unit_file+0x1f0>
  4078c0:	mov	w0, #0x0                   	// #0
  4078c4:	bl	404d90 <log_get_max_level_realm@plt>
  4078c8:	mov	w23, w0
  4078cc:	bl	404770 <__errno_location@plt>
  4078d0:	cmp	w23, #0x6
  4078d4:	mov	x19, x0
  4078d8:	b.le	407774 <attach_unit_file+0x8cc>
  4078dc:	mov	w1, w21
  4078e0:	mov	x6, x24
  4078e4:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4078e8:	adrp	x4, 40d000 <_fini+0x91c>
  4078ec:	add	x5, x5, #0xf08
  4078f0:	add	x4, x4, #0x928
  4078f4:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4078f8:	mov	w3, #0x382                 	// #898
  4078fc:	add	x2, x2, #0x803
  407900:	mov	w0, #0x7                   	// #7
  407904:	bl	4049d0 <log_internal_realm@plt>
  407908:	mov	w21, w0
  40790c:	b	4075d8 <attach_unit_file+0x730>
  407910:	mov	w1, w21
  407914:	mov	x6, x24
  407918:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  40791c:	adrp	x4, 40d000 <_fini+0x91c>
  407920:	add	x5, x5, #0xea8
  407924:	add	x4, x4, #0x928
  407928:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40792c:	mov	w3, #0x37b                 	// #891
  407930:	add	x2, x2, #0x803
  407934:	mov	w0, #0x7                   	// #7
  407938:	bl	4049d0 <log_internal_realm@plt>
  40793c:	mov	w21, w0
  407940:	b	4075d8 <attach_unit_file+0x730>
  407944:	mov	w1, w22
  407948:	mov	x6, x24
  40794c:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  407950:	adrp	x4, 40d000 <_fini+0x91c>
  407954:	add	x5, x5, #0xe58
  407958:	add	x4, x4, #0x928
  40795c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407960:	mov	w3, #0x36d                 	// #877
  407964:	add	x2, x2, #0x803
  407968:	mov	w0, #0x7                   	// #7
  40796c:	bl	4049d0 <log_internal_realm@plt>
  407970:	ldr	w22, [x19]
  407974:	mov	w21, w0
  407978:	b	4075fc <attach_unit_file+0x754>
  40797c:	mov	x6, x24
  407980:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  407984:	adrp	x4, 40d000 <_fini+0x91c>
  407988:	add	x5, x5, #0xed0
  40798c:	add	x4, x4, #0x928
  407990:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407994:	mov	w3, #0x37e                 	// #894
  407998:	add	x2, x2, #0x803
  40799c:	mov	w0, #0x7                   	// #7
  4079a0:	bl	4049d0 <log_internal_realm@plt>
  4079a4:	mov	w21, w0
  4079a8:	b	4075d8 <attach_unit_file+0x730>
  4079ac:	mov	w0, #0x7                   	// #7
  4079b0:	bl	404d80 <special_glyph@plt>
  4079b4:	ldr	x9, [x29, #128]
  4079b8:	str	x26, [sp]
  4079bc:	mov	x7, x0
  4079c0:	mov	w1, w21
  4079c4:	mov	x6, x9
  4079c8:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4079cc:	adrp	x4, 40d000 <_fini+0x91c>
  4079d0:	add	x5, x5, #0xe38
  4079d4:	add	x4, x4, #0x910
  4079d8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4079dc:	mov	w3, #0x31d                 	// #797
  4079e0:	add	x2, x2, #0x803
  4079e4:	mov	w0, #0x7                   	// #7
  4079e8:	bl	4049d0 <log_internal_realm@plt>
  4079ec:	mov	w21, w0
  4079f0:	ldr	x9, [x29, #128]
  4079f4:	b	4076a4 <attach_unit_file+0x7fc>
  4079f8:	mov	w0, #0x7                   	// #7
  4079fc:	bl	404d80 <special_glyph@plt>
  407a00:	ldr	x9, [x29, #128]
  407a04:	str	x26, [sp]
  407a08:	mov	x7, x0
  407a0c:	mov	w1, w21
  407a10:	mov	x6, x9
  407a14:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  407a18:	adrp	x4, 40d000 <_fini+0x91c>
  407a1c:	add	x5, x5, #0xe18
  407a20:	add	x4, x4, #0x910
  407a24:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407a28:	mov	w3, #0x316                 	// #790
  407a2c:	add	x2, x2, #0x803
  407a30:	mov	w0, #0x7                   	// #7
  407a34:	bl	4049d0 <log_internal_realm@plt>
  407a38:	mov	w21, w0
  407a3c:	ldr	x9, [x29, #128]
  407a40:	b	4076a4 <attach_unit_file+0x7fc>
  407a44:	str	w22, [x19]
  407a48:	b	407610 <attach_unit_file+0x768>
  407a4c:	mov	x0, x9
  407a50:	mov	w21, #0xfffffff4            	// #-12
  407a54:	bl	404c10 <free@plt>
  407a58:	b	4076b8 <attach_unit_file+0x810>
  407a5c:	bl	404880 <__stack_chk_fail@plt>

0000000000407a60 <portable_extract_by_path>:
  407a60:	mov	x12, #0x1220                	// #4640
  407a64:	sub	sp, sp, x12
  407a68:	stp	x29, x30, [sp]
  407a6c:	mov	x29, sp
  407a70:	stp	x19, x20, [sp, #16]
  407a74:	adrp	x19, 420000 <__FRAME_END__+0xfb68>
  407a78:	add	x19, x19, #0x738
  407a7c:	ldr	x5, [x19]
  407a80:	str	x5, [sp, #4632]
  407a84:	mov	x5, #0x0                   	// #0
  407a88:	stp	x21, x22, [sp, #32]
  407a8c:	stp	x23, x24, [sp, #48]
  407a90:	stp	xzr, xzr, [sp, #128]
  407a94:	str	xzr, [sp, #144]
  407a98:	cbz	x0, 407ea4 <portable_extract_by_path+0x444>
  407a9c:	mov	x24, x1
  407aa0:	mov	x22, x2
  407aa4:	mov	x23, x3
  407aa8:	mov	x21, x4
  407aac:	mov	x20, x0
  407ab0:	add	x2, sp, #0x90
  407ab4:	mov	w1, #0x0                   	// #0
  407ab8:	stp	x27, x28, [sp, #80]
  407abc:	bl	4045b0 <loop_device_make_by_path@plt>
  407ac0:	mov	w27, w0
  407ac4:	cmn	w0, #0x15
  407ac8:	b.eq	407e14 <portable_extract_by_path+0x3b4>  // b.none
  407acc:	tbnz	w0, #31, 407dec <portable_extract_by_path+0x38c>
  407ad0:	mov	x4, #0xffffffffffffffff    	// #-1
  407ad4:	add	x1, sp, #0x110
  407ad8:	mov	w3, w4
  407adc:	mov	w2, #0x11                  	// #17
  407ae0:	mov	w0, #0x0                   	// #0
  407ae4:	stp	x25, x26, [sp, #64]
  407ae8:	str	wzr, [sp, #124]
  407aec:	stp	xzr, xzr, [sp, #152]
  407af0:	str	x4, [sp, #240]
  407af4:	bl	4046e0 <sigprocmask_many@plt>
  407af8:	tbnz	w0, #31, 408058 <portable_extract_by_path+0x5f8>
  407afc:	ldp	x6, x7, [sp, #272]
  407b00:	stp	x6, x7, [sp, #400]
  407b04:	add	x1, sp, #0xa0
  407b08:	ldp	x4, x5, [sp, #288]
  407b0c:	stp	x4, x5, [sp, #416]
  407b10:	adrp	x0, 40c000 <manager_image_cache_discover+0x50>
  407b14:	ldp	x2, x3, [sp, #304]
  407b18:	stp	x2, x3, [sp, #432]
  407b1c:	add	x0, x0, #0xfa0
  407b20:	ldp	x8, x9, [sp, #320]
  407b24:	stp	x8, x9, [sp, #448]
  407b28:	ldp	x6, x7, [sp, #336]
  407b2c:	stp	x6, x7, [sp, #464]
  407b30:	ldp	x4, x5, [sp, #352]
  407b34:	stp	x4, x5, [sp, #480]
  407b38:	ldp	x2, x3, [sp, #368]
  407b3c:	stp	x2, x3, [sp, #496]
  407b40:	ldp	x8, x9, [sp, #384]
  407b44:	add	x2, sp, #0x200
  407b48:	stp	x8, x9, [x2]
  407b4c:	bl	4049e0 <mkdtemp_malloc@plt>
  407b50:	mov	w25, w0
  407b54:	tbnz	w0, #31, 407e7c <portable_extract_by_path+0x41c>
  407b58:	ldr	x0, [sp, #144]
  407b5c:	add	x4, sp, #0x98
  407b60:	mov	w3, #0x23                  	// #35
  407b64:	mov	x2, #0x0                   	// #0
  407b68:	mov	x1, #0x0                   	// #0
  407b6c:	ldr	w0, [x0]
  407b70:	bl	404a40 <dissect_image@plt>
  407b74:	mov	w27, w0
  407b78:	cmn	w0, #0x41
  407b7c:	b.eq	407f60 <portable_extract_by_path+0x500>  // b.none
  407b80:	cmn	w0, #0x63
  407b84:	b.eq	40807c <portable_extract_by_path+0x61c>  // b.none
  407b88:	cmn	w0, #0x4c
  407b8c:	b.eq	4080d0 <portable_extract_by_path+0x670>  // b.none
  407b90:	cmn	w0, #0x6
  407b94:	b.eq	408118 <portable_extract_by_path+0x6b8>  // b.none
  407b98:	cmn	w0, #0x5d
  407b9c:	b.eq	4081ec <portable_extract_by_path+0x78c>  // b.none
  407ba0:	tbnz	w0, #31, 407d28 <portable_extract_by_path+0x2c8>
  407ba4:	mov	w1, #0x5                   	// #5
  407ba8:	add	x3, sp, #0xf0
  407bac:	movk	w1, #0x8, lsl #16
  407bb0:	mov	w2, #0x0                   	// #0
  407bb4:	mov	w0, #0x1                   	// #1
  407bb8:	bl	4048e0 <socketpair@plt>
  407bbc:	tbnz	w0, #31, 407f00 <portable_extract_by_path+0x4a0>
  407bc0:	adrp	x26, 40d000 <_fini+0x91c>
  407bc4:	add	x26, x26, #0x190
  407bc8:	add	x4, sp, #0x7c
  407bcc:	mov	x0, x26
  407bd0:	mov	w3, #0x1a5                 	// #421
  407bd4:	mov	x2, #0x0                   	// #0
  407bd8:	mov	x1, #0x0                   	// #0
  407bdc:	bl	404b70 <safe_fork_full@plt>
  407be0:	mov	w27, w0
  407be4:	cmp	w0, #0x0
  407be8:	b.lt	407d28 <portable_extract_by_path+0x2c8>  // b.tstop
  407bec:	b.eq	4083c8 <portable_extract_by_path+0x968>  // b.none
  407bf0:	ldr	w0, [sp, #244]
  407bf4:	bl	404530 <safe_close@plt>
  407bf8:	mov	w1, w0
  407bfc:	adrp	x0, 40d000 <_fini+0x91c>
  407c00:	add	x0, x0, #0x9f0
  407c04:	str	w1, [sp, #244]
  407c08:	bl	404870 <internal_hashmap_new@plt>
  407c0c:	str	x0, [sp, #128]
  407c10:	cbz	x0, 407fb0 <portable_extract_by_path+0x550>
  407c14:	mov	x3, #0x1001                	// #4097
  407c18:	ldr	w0, [sp, #240]
  407c1c:	add	x27, sp, #0x210
  407c20:	stp	x27, x3, [sp, #168]
  407c24:	adrp	x3, 40c000 <manager_image_cache_discover+0x50>
  407c28:	add	x3, x3, #0xa00
  407c2c:	mov	x2, #0x1                   	// #1
  407c30:	mov	x1, #0x18                  	// #24
  407c34:	mov	x28, #0x100000001           	// #4294967297
  407c38:	str	x3, [sp, #104]
  407c3c:	add	x3, sp, #0xa8
  407c40:	stp	xzr, xzr, [sp, #184]
  407c44:	str	x3, [sp, #200]
  407c48:	str	x2, [sp, #208]
  407c4c:	add	x2, sp, #0xf8
  407c50:	str	x2, [sp, #216]
  407c54:	stp	x1, xzr, [sp, #224]
  407c58:	stp	xzr, xzr, [sp, #248]
  407c5c:	str	xzr, [sp, #264]
  407c60:	tbnz	w0, #31, 408230 <portable_extract_by_path+0x7d0>
  407c64:	add	x1, sp, #0xb8
  407c68:	mov	w2, #0x40000000            	// #1073741824
  407c6c:	bl	404b10 <recvmsg@plt>
  407c70:	mov	x3, x0
  407c74:	tbnz	x0, #63, 408138 <portable_extract_by_path+0x6d8>
  407c78:	ldr	x0, [sp, #224]
  407c7c:	cmp	x0, #0xf
  407c80:	b.ls	407cd8 <portable_extract_by_path+0x278>  // b.plast
  407c84:	ldr	x1, [sp, #216]
  407c88:	add	x0, x1, x0
  407c8c:	cbz	x1, 407cd8 <portable_extract_by_path+0x278>
  407c90:	ldp	x2, x4, [x1]
  407c94:	cmp	x4, x28
  407c98:	b.eq	408274 <portable_extract_by_path+0x814>  // b.none
  407c9c:	cmp	x2, #0xf
  407ca0:	b.ls	407cd8 <portable_extract_by_path+0x278>  // b.plast
  407ca4:	add	x2, x2, #0x7
  407ca8:	and	x2, x2, #0xfffffffffffffff8
  407cac:	add	x1, x1, x2
  407cb0:	add	x2, x1, #0x10
  407cb4:	cmp	x0, x2
  407cb8:	b.cc	407cd8 <portable_extract_by_path+0x278>  // b.lo, b.ul, b.last
  407cbc:	ldr	x2, [x1]
  407cc0:	add	x2, x2, #0x7
  407cc4:	and	x2, x2, #0xfffffffffffffff8
  407cc8:	add	x2, x1, x2
  407ccc:	cmp	x0, x2
  407cd0:	b.cs	407c8c <portable_extract_by_path+0x22c>  // b.hs, b.nlast
  407cd4:	nop
  407cd8:	mov	w25, #0xffffffff            	// #-1
  407cdc:	mov	x0, x27
  407ce0:	strb	wzr, [x27, x3]
  407ce4:	bl	404b50 <strdup@plt>
  407ce8:	mov	x24, x0
  407cec:	cbz	x0, 408414 <portable_extract_by_path+0x9b4>
  407cf0:	mov	w0, #0xffffffff            	// #-1
  407cf4:	bl	404530 <safe_close@plt>
  407cf8:	ldrb	w0, [x24]
  407cfc:	cbnz	w0, 407fb8 <portable_extract_by_path+0x558>
  407d00:	tbnz	w25, #31, 40815c <portable_extract_by_path+0x6fc>
  407d04:	mov	w0, #0x0                   	// #0
  407d08:	bl	404d90 <log_get_max_level_realm@plt>
  407d0c:	cmp	w0, #0x6
  407d10:	b.gt	408284 <portable_extract_by_path+0x824>
  407d14:	mov	w0, w25
  407d18:	bl	404530 <safe_close@plt>
  407d1c:	mov	x0, x24
  407d20:	mov	w27, #0xffffffea            	// #-22
  407d24:	bl	404c10 <free@plt>
  407d28:	add	x1, sp, #0x110
  407d2c:	mov	x2, #0x0                   	// #0
  407d30:	mov	w0, #0x2                   	// #2
  407d34:	bl	4047e0 <sigprocmask@plt>
  407d38:	tbnz	w0, #31, 40809c <portable_extract_by_path+0x63c>
  407d3c:	add	x0, sp, #0x7c
  407d40:	bl	404600 <sigkill_waitp@plt>
  407d44:	add	x0, sp, #0xf0
  407d48:	bl	404550 <safe_close_pair@plt>
  407d4c:	ldr	x20, [sp, #160]
  407d50:	cbz	x20, 407d78 <portable_extract_by_path+0x318>
  407d54:	bl	404770 <__errno_location@plt>
  407d58:	mov	x21, x0
  407d5c:	mov	x0, x20
  407d60:	ldr	w22, [x21]
  407d64:	bl	404760 <rmdir@plt>
  407d68:	mov	x0, x20
  407d6c:	bl	404c10 <free@plt>
  407d70:	tbnz	w22, #31, 407d78 <portable_extract_by_path+0x318>
  407d74:	str	w22, [x21]
  407d78:	ldr	x0, [sp, #152]
  407d7c:	cbz	x0, 407e9c <portable_extract_by_path+0x43c>
  407d80:	bl	404b20 <dissected_image_unref@plt>
  407d84:	ldr	x0, [sp, #144]
  407d88:	ldp	x25, x26, [sp, #64]
  407d8c:	cbz	x0, 407d94 <portable_extract_by_path+0x334>
  407d90:	bl	4044a0 <loop_device_unref@plt>
  407d94:	ldr	x24, [sp, #136]
  407d98:	cbz	x24, 407da4 <portable_extract_by_path+0x344>
  407d9c:	mov	x0, x24
  407da0:	bl	405c88 <portable_metadata_unref.part.0>
  407da4:	ldr	x0, [sp, #128]
  407da8:	cbz	x0, 407db8 <portable_extract_by_path+0x358>
  407dac:	mov	x2, #0x0                   	// #0
  407db0:	mov	x1, #0x0                   	// #0
  407db4:	bl	404280 <internal_hashmap_free@plt>
  407db8:	ldr	x1, [sp, #4632]
  407dbc:	ldr	x0, [x19]
  407dc0:	eor	x0, x1, x0
  407dc4:	cbnz	x0, 40836c <portable_extract_by_path+0x90c>
  407dc8:	mov	w0, w27
  407dcc:	mov	x12, #0x1220                	// #4640
  407dd0:	ldp	x29, x30, [sp]
  407dd4:	ldp	x19, x20, [sp, #16]
  407dd8:	ldp	x21, x22, [sp, #32]
  407ddc:	ldp	x23, x24, [sp, #48]
  407de0:	ldp	x27, x28, [sp, #80]
  407de4:	add	sp, sp, x12
  407de8:	ret
  407dec:	mov	w0, #0x0                   	// #0
  407df0:	bl	404d90 <log_get_max_level_realm@plt>
  407df4:	cmp	w0, #0x6
  407df8:	b.gt	407ed0 <portable_extract_by_path+0x470>
  407dfc:	neg	w27, w27
  407e00:	and	w0, w27, #0xff
  407e04:	neg	w27, w0
  407e08:	ldr	x0, [sp, #144]
  407e0c:	cbnz	x0, 407d90 <portable_extract_by_path+0x330>
  407e10:	b	407d94 <portable_extract_by_path+0x334>
  407e14:	mov	x1, x24
  407e18:	add	x4, sp, #0x80
  407e1c:	add	x3, sp, #0x88
  407e20:	mov	x0, x20
  407e24:	mov	w2, #0xffffffff            	// #-1
  407e28:	bl	405ea8 <extract_now>
  407e2c:	mov	w27, w0
  407e30:	tbnz	w0, #31, 407e08 <portable_extract_by_path+0x3a8>
  407e34:	ldr	x24, [sp, #136]
  407e38:	cbz	x24, 40820c <portable_extract_by_path+0x7ac>
  407e3c:	stp	x25, x26, [sp, #64]
  407e40:	ldr	x25, [sp, #128]
  407e44:	mov	x0, x25
  407e48:	bl	4049c0 <internal_hashmap_size@plt>
  407e4c:	cbz	w0, 4080f0 <portable_extract_by_path+0x690>
  407e50:	cbz	x23, 407e5c <portable_extract_by_path+0x3fc>
  407e54:	str	x25, [x23]
  407e58:	str	xzr, [sp, #128]
  407e5c:	ldr	x0, [sp, #144]
  407e60:	cbz	x22, 4080c0 <portable_extract_by_path+0x660>
  407e64:	str	x24, [x22]
  407e68:	mov	w27, #0x0                   	// #0
  407e6c:	str	xzr, [sp, #136]
  407e70:	ldp	x25, x26, [sp, #64]
  407e74:	cbnz	x0, 407d90 <portable_extract_by_path+0x330>
  407e78:	b	407da4 <portable_extract_by_path+0x344>
  407e7c:	mov	w0, #0x0                   	// #0
  407e80:	bl	404d90 <log_get_max_level_realm@plt>
  407e84:	cmp	w0, #0x6
  407e88:	b.gt	407f30 <portable_extract_by_path+0x4d0>
  407e8c:	neg	w0, w25
  407e90:	and	w0, w0, #0xff
  407e94:	neg	w27, w0
  407e98:	b	407d28 <portable_extract_by_path+0x2c8>
  407e9c:	ldp	x25, x26, [sp, #64]
  407ea0:	b	407e08 <portable_extract_by_path+0x3a8>
  407ea4:	adrp	x4, 40d000 <_fini+0x91c>
  407ea8:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  407eac:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407eb0:	add	x4, x4, #0x720
  407eb4:	add	x1, x1, #0xc00
  407eb8:	add	x2, x2, #0x803
  407ebc:	mov	w3, #0x168                 	// #360
  407ec0:	mov	w0, #0x0                   	// #0
  407ec4:	stp	x25, x26, [sp, #64]
  407ec8:	stp	x27, x28, [sp, #80]
  407ecc:	bl	4045c0 <log_assert_failed_realm@plt>
  407ed0:	mov	w1, w27
  407ed4:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  407ed8:	adrp	x4, 40d000 <_fini+0x91c>
  407edc:	add	x5, x5, #0xf48
  407ee0:	add	x4, x4, #0x8c0
  407ee4:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407ee8:	mov	w3, #0x174                 	// #372
  407eec:	add	x2, x2, #0x803
  407ef0:	mov	w0, #0x7                   	// #7
  407ef4:	bl	4049d0 <log_internal_realm@plt>
  407ef8:	mov	w27, w0
  407efc:	b	407e08 <portable_extract_by_path+0x3a8>
  407f00:	bl	404770 <__errno_location@plt>
  407f04:	mov	x1, x0
  407f08:	mov	w0, #0x0                   	// #0
  407f0c:	ldr	w20, [x1]
  407f10:	bl	404d90 <log_get_max_level_realm@plt>
  407f14:	cmp	w0, #0x6
  407f18:	b.gt	407f80 <portable_extract_by_path+0x520>
  407f1c:	cmp	w20, #0x0
  407f20:	cneg	w20, w20, lt  // lt = tstop
  407f24:	and	w0, w20, #0xff
  407f28:	neg	w27, w0
  407f2c:	b	407d28 <portable_extract_by_path+0x2c8>
  407f30:	mov	w1, w25
  407f34:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  407f38:	adrp	x4, 40d000 <_fini+0x91c>
  407f3c:	add	x5, x5, #0xfb8
  407f40:	add	x4, x4, #0x8c0
  407f44:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407f48:	mov	w3, #0x182                 	// #386
  407f4c:	add	x2, x2, #0x803
  407f50:	mov	w0, #0x7                   	// #7
  407f54:	bl	4049d0 <log_internal_realm@plt>
  407f58:	mov	w27, w0
  407f5c:	b	407d28 <portable_extract_by_path+0x2c8>
  407f60:	mov	x3, x20
  407f64:	mov	x0, x21
  407f68:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407f6c:	adrp	x1, 40d000 <_fini+0x91c>
  407f70:	add	x2, x2, #0xfe8
  407f74:	add	x1, x1, #0x30
  407f78:	bl	404860 <sd_bus_error_setf@plt>
  407f7c:	b	407d28 <portable_extract_by_path+0x2c8>
  407f80:	mov	w1, w20
  407f84:	adrp	x5, 40d000 <_fini+0x91c>
  407f88:	adrp	x4, 40d000 <_fini+0x91c>
  407f8c:	add	x5, x5, #0x160
  407f90:	add	x4, x4, #0x8c0
  407f94:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  407f98:	mov	w3, #0x193                 	// #403
  407f9c:	add	x2, x2, #0x803
  407fa0:	mov	w0, #0x7                   	// #7
  407fa4:	bl	4049d0 <log_internal_realm@plt>
  407fa8:	mov	w27, w0
  407fac:	b	407d28 <portable_extract_by_path+0x2c8>
  407fb0:	mov	w27, #0xfffffff4            	// #-12
  407fb4:	b	407d28 <portable_extract_by_path+0x2c8>
  407fb8:	tbnz	w25, #31, 407d04 <portable_extract_by_path+0x2a4>
  407fbc:	mov	w1, w25
  407fc0:	mov	x0, x24
  407fc4:	bl	405618 <portable_metadata_new>
  407fc8:	mov	x6, x0
  407fcc:	cbz	x0, 4083b0 <portable_extract_by_path+0x950>
  407fd0:	mov	x1, x0
  407fd4:	ldrb	w0, [x1, #16]!
  407fd8:	cbz	w0, 408030 <portable_extract_by_path+0x5d0>
  407fdc:	cmp	w0, #0x2f
  407fe0:	b.eq	408030 <portable_extract_by_path+0x5d0>  // b.none
  407fe4:	ldr	x0, [sp, #128]
  407fe8:	mov	x2, x6
  407fec:	str	x6, [sp, #96]
  407ff0:	bl	404a70 <hashmap_put@plt>
  407ff4:	mov	w25, w0
  407ff8:	tbnz	w0, #31, 4082c4 <portable_extract_by_path+0x864>
  407ffc:	mov	w0, #0xffffffff            	// #-1
  408000:	bl	404530 <safe_close@plt>
  408004:	mov	x0, x24
  408008:	bl	404c10 <free@plt>
  40800c:	mov	x3, #0x1001                	// #4097
  408010:	ldr	w0, [sp, #240]
  408014:	mov	x2, #0x1                   	// #1
  408018:	mov	x1, #0x18                  	// #24
  40801c:	stp	x27, x3, [sp, #168]
  408020:	add	x3, sp, #0xa8
  408024:	stp	xzr, xzr, [sp, #184]
  408028:	str	x3, [sp, #200]
  40802c:	b	407c48 <portable_extract_by_path+0x1e8>
  408030:	mov	x0, x1
  408034:	str	x6, [sp, #96]
  408038:	ldr	x1, [sp, #104]
  40803c:	bl	404ae0 <strcmp@plt>
  408040:	ldr	x6, [sp, #96]
  408044:	cbnz	w0, 408460 <portable_extract_by_path+0xa00>
  408048:	ldr	x1, [sp, #136]
  40804c:	cbnz	x1, 408254 <portable_extract_by_path+0x7f4>
  408050:	str	x6, [sp, #136]
  408054:	b	407ffc <portable_extract_by_path+0x59c>
  408058:	adrp	x4, 40d000 <_fini+0x91c>
  40805c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  408060:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  408064:	add	x4, x4, #0x720
  408068:	add	x1, x1, #0xf70
  40806c:	add	x2, x2, #0x803
  408070:	mov	w3, #0x17e                 	// #382
  408074:	mov	w0, #0x0                   	// #0
  408078:	bl	4045c0 <log_assert_failed_realm@plt>
  40807c:	mov	x3, x20
  408080:	mov	x0, x21
  408084:	adrp	x2, 40d000 <_fini+0x91c>
  408088:	adrp	x1, 40d000 <_fini+0x91c>
  40808c:	add	x2, x2, #0x58
  408090:	add	x1, x1, #0x30
  408094:	bl	404860 <sd_bus_error_setf@plt>
  408098:	b	407d28 <portable_extract_by_path+0x2c8>
  40809c:	adrp	x4, 40d000 <_fini+0x91c>
  4080a0:	adrp	x1, 40d000 <_fini+0x91c>
  4080a4:	adrp	x2, 40d000 <_fini+0x91c>
  4080a8:	add	x4, x4, #0x6a8
  4080ac:	add	x1, x1, #0x290
  4080b0:	add	x2, x2, #0x273
  4080b4:	mov	w3, #0x18                  	// #24
  4080b8:	mov	w0, #0x0                   	// #0
  4080bc:	bl	4045c0 <log_assert_failed_realm@plt>
  4080c0:	mov	w27, #0x0                   	// #0
  4080c4:	ldp	x25, x26, [sp, #64]
  4080c8:	cbnz	x0, 407d90 <portable_extract_by_path+0x330>
  4080cc:	b	407d9c <portable_extract_by_path+0x33c>
  4080d0:	mov	x3, x20
  4080d4:	mov	x0, x21
  4080d8:	adrp	x2, 40d000 <_fini+0x91c>
  4080dc:	adrp	x1, 40d000 <_fini+0x91c>
  4080e0:	add	x2, x2, #0x98
  4080e4:	add	x1, x1, #0x30
  4080e8:	bl	404860 <sd_bus_error_setf@plt>
  4080ec:	b	407d28 <portable_extract_by_path+0x2c8>
  4080f0:	mov	x3, x20
  4080f4:	mov	x0, x21
  4080f8:	adrp	x2, 40d000 <_fini+0x91c>
  4080fc:	adrp	x1, 40d000 <_fini+0x91c>
  408100:	add	x2, x2, #0x2e8
  408104:	add	x1, x1, #0x30
  408108:	bl	404860 <sd_bus_error_setf@plt>
  40810c:	mov	w27, w0
  408110:	ldp	x25, x26, [sp, #64]
  408114:	b	407e08 <portable_extract_by_path+0x3a8>
  408118:	mov	x3, x20
  40811c:	mov	x0, x21
  408120:	adrp	x2, 40d000 <_fini+0x91c>
  408124:	adrp	x1, 40d000 <_fini+0x91c>
  408128:	add	x2, x2, #0xd0
  40812c:	add	x1, x1, #0x30
  408130:	bl	404860 <sd_bus_error_setf@plt>
  408134:	b	407d28 <portable_extract_by_path+0x2c8>
  408138:	bl	404770 <__errno_location@plt>
  40813c:	mov	x1, x0
  408140:	mov	w0, #0xffffffff            	// #-1
  408144:	ldr	w24, [x1]
  408148:	bl	404530 <safe_close@plt>
  40814c:	cmp	w24, #0x0
  408150:	b.gt	408308 <portable_extract_by_path+0x8a8>
  408154:	mov	w25, #0xffffffff            	// #-1
  408158:	mov	x24, #0x0                   	// #0
  40815c:	mov	w0, w25
  408160:	bl	404530 <safe_close@plt>
  408164:	mov	x0, x24
  408168:	bl	404c10 <free@plt>
  40816c:	ldr	w1, [sp, #124]
  408170:	mov	x0, x26
  408174:	mov	w2, #0x0                   	// #0
  408178:	bl	404790 <wait_for_terminate_and_check@plt>
  40817c:	mov	w27, w0
  408180:	tbnz	w0, #31, 407d28 <portable_extract_by_path+0x2c8>
  408184:	add	x1, sp, #0x110
  408188:	mov	x2, #0x0                   	// #0
  40818c:	mov	w0, #0x2                   	// #2
  408190:	str	wzr, [sp, #124]
  408194:	bl	4047e0 <sigprocmask@plt>
  408198:	tbnz	w0, #31, 40809c <portable_extract_by_path+0x63c>
  40819c:	add	x0, sp, #0x7c
  4081a0:	bl	404600 <sigkill_waitp@plt>
  4081a4:	add	x0, sp, #0xf0
  4081a8:	bl	404550 <safe_close_pair@plt>
  4081ac:	ldr	x25, [sp, #160]
  4081b0:	cbz	x25, 4081d8 <portable_extract_by_path+0x778>
  4081b4:	bl	404770 <__errno_location@plt>
  4081b8:	mov	x24, x0
  4081bc:	mov	x0, x25
  4081c0:	ldr	w26, [x24]
  4081c4:	bl	404760 <rmdir@plt>
  4081c8:	mov	x0, x25
  4081cc:	bl	404c10 <free@plt>
  4081d0:	tbnz	w26, #31, 4081d8 <portable_extract_by_path+0x778>
  4081d4:	str	w26, [x24]
  4081d8:	ldr	x0, [sp, #152]
  4081dc:	cbz	x0, 408374 <portable_extract_by_path+0x914>
  4081e0:	bl	404b20 <dissected_image_unref@plt>
  4081e4:	ldp	x25, x26, [sp, #64]
  4081e8:	b	407e34 <portable_extract_by_path+0x3d4>
  4081ec:	mov	x3, x20
  4081f0:	mov	x0, x21
  4081f4:	adrp	x2, 40d000 <_fini+0x91c>
  4081f8:	adrp	x1, 40d000 <_fini+0x91c>
  4081fc:	add	x2, x2, #0x100
  408200:	add	x1, x1, #0x30
  408204:	bl	404860 <sd_bus_error_setf@plt>
  408208:	b	407d28 <portable_extract_by_path+0x2c8>
  40820c:	mov	x3, x20
  408210:	mov	x0, x21
  408214:	adrp	x2, 40d000 <_fini+0x91c>
  408218:	adrp	x1, 40d000 <_fini+0x91c>
  40821c:	add	x2, x2, #0x2b8
  408220:	add	x1, x1, #0x30
  408224:	bl	404860 <sd_bus_error_setf@plt>
  408228:	mov	w27, w0
  40822c:	b	407e08 <portable_extract_by_path+0x3a8>
  408230:	adrp	x4, 40d000 <_fini+0x91c>
  408234:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  408238:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40823c:	add	x4, x4, #0x700
  408240:	add	x1, x1, #0x820
  408244:	add	x2, x2, #0x803
  408248:	mov	w3, #0xbb                  	// #187
  40824c:	mov	w0, #0x0                   	// #0
  408250:	bl	4045c0 <log_assert_failed_realm@plt>
  408254:	adrp	x4, 40d000 <_fini+0x91c>
  408258:	adrp	x1, 40d000 <_fini+0x91c>
  40825c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  408260:	add	x4, x4, #0x720
  408264:	add	x1, x1, #0x238
  408268:	add	x2, x2, #0x803
  40826c:	mov	w3, #0x1d2                 	// #466
  408270:	bl	4045c0 <log_assert_failed_realm@plt>
  408274:	cmp	x2, #0x14
  408278:	b.ne	408484 <portable_extract_by_path+0xa24>  // b.any
  40827c:	ldr	w25, [x1, #16]
  408280:	b	407cdc <portable_extract_by_path+0x27c>
  408284:	adrp	x5, 40d000 <_fini+0x91c>
  408288:	adrp	x4, 40d000 <_fini+0x91c>
  40828c:	add	x5, x5, #0x1e8
  408290:	add	x4, x4, #0x8c0
  408294:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  408298:	add	x2, x2, #0x803
  40829c:	mov	w3, #0x1bc                 	// #444
  4082a0:	mov	w1, #0x0                   	// #0
  4082a4:	mov	w0, #0x7                   	// #7
  4082a8:	bl	4049d0 <log_internal_realm@plt>
  4082ac:	mov	w0, w25
  4082b0:	bl	404530 <safe_close@plt>
  4082b4:	mov	x0, x24
  4082b8:	mov	w27, #0xffffffea            	// #-22
  4082bc:	bl	404c10 <free@plt>
  4082c0:	b	407d28 <portable_extract_by_path+0x2c8>
  4082c4:	mov	w0, #0x0                   	// #0
  4082c8:	bl	404d90 <log_get_max_level_realm@plt>
  4082cc:	cmp	w0, #0x6
  4082d0:	ldr	x6, [sp, #96]
  4082d4:	b.gt	40837c <portable_extract_by_path+0x91c>
  4082d8:	neg	w27, w25
  4082dc:	and	w27, w27, #0xff
  4082e0:	neg	w27, w27
  4082e4:	mov	w0, #0xffffffff            	// #-1
  4082e8:	str	x6, [sp, #96]
  4082ec:	bl	404530 <safe_close@plt>
  4082f0:	mov	x0, x24
  4082f4:	bl	404c10 <free@plt>
  4082f8:	ldr	x6, [sp, #96]
  4082fc:	mov	x0, x6
  408300:	bl	405c88 <portable_metadata_unref.part.0>
  408304:	b	407d28 <portable_extract_by_path+0x2c8>
  408308:	neg	w24, w24
  40830c:	mov	w0, #0x0                   	// #0
  408310:	bl	404d90 <log_get_max_level_realm@plt>
  408314:	cmp	w0, #0x6
  408318:	b.gt	408334 <portable_extract_by_path+0x8d4>
  40831c:	neg	w24, w24
  408320:	mov	w0, #0xffffffff            	// #-1
  408324:	and	w27, w24, #0xff
  408328:	neg	w27, w27
  40832c:	bl	404530 <safe_close@plt>
  408330:	b	407d28 <portable_extract_by_path+0x2c8>
  408334:	mov	w1, w24
  408338:	adrp	x5, 40d000 <_fini+0x91c>
  40833c:	adrp	x4, 40d000 <_fini+0x91c>
  408340:	add	x5, x5, #0x1c8
  408344:	add	x4, x4, #0x8c0
  408348:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40834c:	add	x2, x2, #0x803
  408350:	mov	w3, #0x1b4                 	// #436
  408354:	mov	w0, #0x7                   	// #7
  408358:	bl	4049d0 <log_internal_realm@plt>
  40835c:	mov	w27, w0
  408360:	mov	w0, #0xffffffff            	// #-1
  408364:	bl	404530 <safe_close@plt>
  408368:	b	407d28 <portable_extract_by_path+0x2c8>
  40836c:	stp	x25, x26, [sp, #64]
  408370:	bl	404880 <__stack_chk_fail@plt>
  408374:	ldp	x25, x26, [sp, #64]
  408378:	b	407e34 <portable_extract_by_path+0x3d4>
  40837c:	mov	w1, w25
  408380:	adrp	x5, 40d000 <_fini+0x91c>
  408384:	adrp	x4, 40d000 <_fini+0x91c>
  408388:	add	x5, x5, #0x208
  40838c:	add	x4, x4, #0x8c0
  408390:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  408394:	mov	w3, #0x1cc                 	// #460
  408398:	add	x2, x2, #0x803
  40839c:	mov	w0, #0x7                   	// #7
  4083a0:	bl	4049d0 <log_internal_realm@plt>
  4083a4:	mov	w27, w0
  4083a8:	ldr	x6, [sp, #96]
  4083ac:	b	4082e4 <portable_extract_by_path+0x884>
  4083b0:	mov	w0, w25
  4083b4:	bl	404530 <safe_close@plt>
  4083b8:	mov	x0, x24
  4083bc:	mov	w27, #0xfffffff4            	// #-12
  4083c0:	bl	404c10 <free@plt>
  4083c4:	b	407d28 <portable_extract_by_path+0x2c8>
  4083c8:	ldr	w0, [sp, #240]
  4083cc:	bl	404530 <safe_close@plt>
  4083d0:	mov	w4, w0
  4083d4:	ldp	x0, x1, [sp, #152]
  4083d8:	mov	w3, #0x101                 	// #257
  4083dc:	mov	w2, #0xffffffff            	// #-1
  4083e0:	str	w4, [sp, #240]
  4083e4:	bl	404af0 <dissected_image_mount@plt>
  4083e8:	mov	w19, w0
  4083ec:	tbnz	w0, #31, 408424 <portable_extract_by_path+0x9c4>
  4083f0:	ldr	w2, [sp, #244]
  4083f4:	mov	x1, x24
  4083f8:	ldr	x0, [sp, #160]
  4083fc:	mov	x4, #0x0                   	// #0
  408400:	mov	x3, #0x0                   	// #0
  408404:	bl	405ea8 <extract_now>
  408408:	mov	w19, w0
  40840c:	lsr	w0, w19, #31
  408410:	bl	404610 <_exit@plt>
  408414:	mov	w0, w25
  408418:	mov	w24, #0xfffffff4            	// #-12
  40841c:	bl	404530 <safe_close@plt>
  408420:	b	40830c <portable_extract_by_path+0x8ac>
  408424:	mov	w0, #0x0                   	// #0
  408428:	bl	404d90 <log_get_max_level_realm@plt>
  40842c:	cmp	w0, #0x6
  408430:	b.le	40840c <portable_extract_by_path+0x9ac>
  408434:	mov	w1, w19
  408438:	adrp	x5, 40d000 <_fini+0x91c>
  40843c:	adrp	x4, 40d000 <_fini+0x91c>
  408440:	add	x5, x5, #0x1a0
  408444:	add	x4, x4, #0x8c0
  408448:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40844c:	mov	w3, #0x19d                 	// #413
  408450:	add	x2, x2, #0x803
  408454:	mov	w0, #0x7                   	// #7
  408458:	bl	4049d0 <log_internal_realm@plt>
  40845c:	b	40840c <portable_extract_by_path+0x9ac>
  408460:	adrp	x4, 40d000 <_fini+0x91c>
  408464:	adrp	x1, 40d000 <_fini+0x91c>
  408468:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40846c:	add	x4, x4, #0x720
  408470:	add	x1, x1, #0x248
  408474:	add	x2, x2, #0x803
  408478:	mov	w3, #0x1d5                 	// #469
  40847c:	mov	w0, #0x0                   	// #0
  408480:	bl	404620 <log_assert_failed_unreachable_realm@plt>
  408484:	add	x0, sp, #0xb8
  408488:	bl	404960 <cmsg_close_all@plt>
  40848c:	mov	w24, #0xfffffffb            	// #-5
  408490:	mov	w0, #0xffffffff            	// #-1
  408494:	bl	404530 <safe_close@plt>
  408498:	b	40830c <portable_extract_by_path+0x8ac>
  40849c:	nop

00000000004084a0 <portable_metadata_unref>:
  4084a0:	cbz	x0, 4084bc <portable_metadata_unref+0x1c>
  4084a4:	stp	x29, x30, [sp, #-16]!
  4084a8:	mov	x29, sp
  4084ac:	bl	405c88 <portable_metadata_unref.part.0>
  4084b0:	mov	x0, #0x0                   	// #0
  4084b4:	ldp	x29, x30, [sp], #16
  4084b8:	ret
  4084bc:	mov	x0, #0x0                   	// #0
  4084c0:	ret
  4084c4:	nop

00000000004084c8 <portable_metadata_hashmap_to_sorted_array>:
  4084c8:	stp	x29, x30, [sp, #-96]!
  4084cc:	mov	x29, sp
  4084d0:	stp	x23, x24, [sp, #48]
  4084d4:	adrp	x23, 420000 <__FRAME_END__+0xfb68>
  4084d8:	add	x23, x23, #0x738
  4084dc:	mov	x24, x1
  4084e0:	ldr	x1, [x23]
  4084e4:	str	x1, [sp, #88]
  4084e8:	mov	x1, #0x0                   	// #0
  4084ec:	stp	x19, x20, [sp, #16]
  4084f0:	mov	x20, x0
  4084f4:	bl	4049c0 <internal_hashmap_size@plt>
  4084f8:	ubfiz	x0, x0, #3, #32
  4084fc:	cmp	x0, #0x0
  408500:	csinc	x0, x0, xzr, ne  // ne = any
  408504:	bl	4049a0 <malloc@plt>
  408508:	cbz	x0, 4085dc <portable_metadata_hashmap_to_sorted_array+0x114>
  40850c:	stp	x21, x22, [sp, #32]
  408510:	mov	x22, x0
  408514:	sub	x21, x22, #0x8
  408518:	mov	w0, #0xfffffffe            	// #-2
  40851c:	mov	x19, #0x0                   	// #0
  408520:	str	w0, [sp, #72]
  408524:	str	xzr, [sp, #80]
  408528:	b	408538 <portable_metadata_hashmap_to_sorted_array+0x70>
  40852c:	add	x19, x19, #0x1
  408530:	ldr	x2, [sp, #64]
  408534:	str	x2, [x21, x19, lsl #3]
  408538:	add	x2, sp, #0x40
  40853c:	add	x1, sp, #0x48
  408540:	mov	x0, x20
  408544:	mov	x3, #0x0                   	// #0
  408548:	bl	404b40 <internal_hashmap_iterate@plt>
  40854c:	tst	w0, #0xff
  408550:	b.ne	40852c <portable_metadata_hashmap_to_sorted_array+0x64>  // b.any
  408554:	mov	x0, x20
  408558:	bl	4049c0 <internal_hashmap_size@plt>
  40855c:	cmp	x19, w0, uxtw
  408560:	b.ne	4085b0 <portable_metadata_hashmap_to_sorted_array+0xe8>  // b.any
  408564:	cmp	x19, #0x1
  408568:	b.ls	408584 <portable_metadata_hashmap_to_sorted_array+0xbc>  // b.plast
  40856c:	adrp	x3, 405000 <main+0x250>
  408570:	mov	x1, x19
  408574:	add	x3, x3, #0x4a0
  408578:	mov	x0, x22
  40857c:	mov	x2, #0x8                   	// #8
  408580:	bl	4043d0 <qsort@plt>
  408584:	str	x22, [x24]
  408588:	mov	w0, #0x0                   	// #0
  40858c:	ldp	x21, x22, [sp, #32]
  408590:	ldr	x2, [sp, #88]
  408594:	ldr	x1, [x23]
  408598:	eor	x1, x2, x1
  40859c:	cbnz	x1, 4085d4 <portable_metadata_hashmap_to_sorted_array+0x10c>
  4085a0:	ldp	x19, x20, [sp, #16]
  4085a4:	ldp	x23, x24, [sp, #48]
  4085a8:	ldp	x29, x30, [sp], #96
  4085ac:	ret
  4085b0:	adrp	x4, 40d000 <_fini+0x91c>
  4085b4:	adrp	x1, 40d000 <_fini+0x91c>
  4085b8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4085bc:	add	x4, x4, #0x6c0
  4085c0:	add	x1, x1, #0x328
  4085c4:	add	x2, x2, #0x803
  4085c8:	mov	w3, #0x73                  	// #115
  4085cc:	mov	w0, #0x0                   	// #0
  4085d0:	bl	4045c0 <log_assert_failed_realm@plt>
  4085d4:	stp	x21, x22, [sp, #32]
  4085d8:	bl	404880 <__stack_chk_fail@plt>
  4085dc:	mov	w0, #0xfffffff4            	// #-12
  4085e0:	b	408590 <portable_metadata_hashmap_to_sorted_array+0xc8>
  4085e4:	nop

00000000004085e8 <portable_extract>:
  4085e8:	stp	x29, x30, [sp, #-80]!
  4085ec:	mov	x29, sp
  4085f0:	stp	x19, x20, [sp, #16]
  4085f4:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  4085f8:	add	x20, x20, #0x738
  4085fc:	ldr	x5, [x20]
  408600:	str	x5, [sp, #72]
  408604:	mov	x5, #0x0                   	// #0
  408608:	stp	x21, x22, [sp, #32]
  40860c:	stp	x23, x24, [sp, #48]
  408610:	str	xzr, [sp, #64]
  408614:	cbz	x0, 408694 <portable_extract+0xac>
  408618:	mov	x21, x1
  40861c:	mov	x22, x2
  408620:	mov	x1, x0
  408624:	mov	x23, x3
  408628:	mov	x24, x4
  40862c:	add	x2, sp, #0x40
  408630:	mov	w0, #0x1                   	// #1
  408634:	bl	4046d0 <image_find_harder@plt>
  408638:	mov	w19, w0
  40863c:	tbnz	w0, #31, 408660 <portable_extract+0x78>
  408640:	ldr	x0, [sp, #64]
  408644:	mov	x4, x24
  408648:	mov	x3, x23
  40864c:	mov	x2, x22
  408650:	mov	x1, x21
  408654:	ldr	x0, [x0, #16]
  408658:	bl	407a60 <portable_extract_by_path>
  40865c:	mov	w19, w0
  408660:	ldr	x0, [sp, #64]
  408664:	cbz	x0, 40866c <portable_extract+0x84>
  408668:	bl	4041d0 <image_unref@plt>
  40866c:	ldr	x1, [sp, #72]
  408670:	ldr	x0, [x20]
  408674:	eor	x0, x1, x0
  408678:	cbnz	x0, 4086b4 <portable_extract+0xcc>
  40867c:	mov	w0, w19
  408680:	ldp	x19, x20, [sp, #16]
  408684:	ldp	x21, x22, [sp, #32]
  408688:	ldp	x23, x24, [sp, #48]
  40868c:	ldp	x29, x30, [sp], #80
  408690:	ret
  408694:	adrp	x4, 40d000 <_fini+0x91c>
  408698:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40869c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4086a0:	add	x4, x4, #0x740
  4086a4:	add	x1, x1, #0xbf8
  4086a8:	add	x2, x2, #0x803
  4086ac:	mov	w3, #0x1f7                 	// #503
  4086b0:	bl	4045c0 <log_assert_failed_realm@plt>
  4086b4:	bl	404880 <__stack_chk_fail@plt>

00000000004086b8 <portable_changes_free>:
  4086b8:	stp	x29, x30, [sp, #-48]!
  4086bc:	cmp	x0, #0x0
  4086c0:	ccmp	x1, #0x0, #0x4, eq  // eq = none
  4086c4:	mov	x29, sp
  4086c8:	b.ne	408718 <portable_changes_free+0x60>  // b.any
  4086cc:	str	x21, [sp, #32]
  4086d0:	mov	x21, x0
  4086d4:	cbz	x1, 408708 <portable_changes_free+0x50>
  4086d8:	add	x1, x1, x1, lsl #1
  4086dc:	stp	x19, x20, [sp, #16]
  4086e0:	mov	x19, x0
  4086e4:	add	x20, x0, x1, lsl #3
  4086e8:	ldr	x0, [x19, #8]
  4086ec:	add	x19, x19, #0x18
  4086f0:	bl	404c10 <free@plt>
  4086f4:	ldur	x0, [x19, #-8]
  4086f8:	bl	404c10 <free@plt>
  4086fc:	cmp	x19, x20
  408700:	b.ne	4086e8 <portable_changes_free+0x30>  // b.any
  408704:	ldp	x19, x20, [sp, #16]
  408708:	mov	x0, x21
  40870c:	ldr	x21, [sp, #32]
  408710:	ldp	x29, x30, [sp], #48
  408714:	b	404c10 <free@plt>
  408718:	adrp	x4, 40d000 <_fini+0x91c>
  40871c:	adrp	x1, 40d000 <_fini+0x91c>
  408720:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  408724:	add	x4, x4, #0x7b0
  408728:	add	x1, x1, #0x348
  40872c:	add	x2, x2, #0x803
  408730:	mov	w3, #0x29d                 	// #669
  408734:	mov	w0, #0x0                   	// #0
  408738:	stp	x19, x20, [sp, #16]
  40873c:	str	x21, [sp, #32]
  408740:	bl	4045c0 <log_assert_failed_realm@plt>
  408744:	nop

0000000000408748 <portable_attach>:
  408748:	sub	sp, sp, #0x110
  40874c:	stp	x29, x30, [sp, #16]
  408750:	add	x29, sp, #0x10
  408754:	stp	x21, x22, [sp, #48]
  408758:	adrp	x22, 420000 <__FRAME_END__+0xfb68>
  40875c:	add	x22, x22, #0x738
  408760:	ldr	x8, [x22]
  408764:	str	x8, [sp, #264]
  408768:	mov	x8, #0x0                   	// #0
  40876c:	stp	x19, x20, [sp, #32]
  408770:	stp	x23, x24, [sp, #64]
  408774:	stp	x25, x26, [sp, #80]
  408778:	str	x27, [sp, #96]
  40877c:	stp	xzr, xzr, [sp, #112]
  408780:	stp	xzr, xzr, [sp, #160]
  408784:	stp	xzr, xzr, [sp, #176]
  408788:	stp	xzr, xzr, [sp, #192]
  40878c:	stp	xzr, xzr, [sp, #208]
  408790:	stp	xzr, xzr, [sp, #224]
  408794:	stp	xzr, xzr, [sp, #240]
  408798:	str	xzr, [sp, #256]
  40879c:	cbz	x1, 4089cc <portable_attach+0x284>
  4087a0:	mov	x21, x0
  4087a4:	mov	x27, x2
  4087a8:	mov	x26, x3
  4087ac:	mov	w23, w4
  4087b0:	mov	x24, x5
  4087b4:	mov	x25, x6
  4087b8:	mov	x20, x7
  4087bc:	add	x2, sp, #0x78
  4087c0:	mov	w0, #0x1                   	// #1
  4087c4:	bl	4046d0 <image_find_harder@plt>
  4087c8:	mov	w19, w0
  4087cc:	tbnz	w0, #31, 4089bc <portable_attach+0x274>
  4087d0:	ldr	x0, [sp, #120]
  4087d4:	mov	x1, x27
  4087d8:	mov	x4, x20
  4087dc:	add	x3, sp, #0x70
  4087e0:	mov	x2, #0x0                   	// #0
  4087e4:	add	x27, sp, #0xa0
  4087e8:	ldr	x0, [x0, #16]
  4087ec:	bl	407a60 <portable_extract_by_path>
  4087f0:	mov	w19, w0
  4087f4:	tbnz	w0, #31, 408960 <portable_attach+0x218>
  4087f8:	mov	x0, x27
  4087fc:	mov	x3, #0x0                   	// #0
  408800:	mov	w2, #0x4                   	// #4
  408804:	mov	w1, #0x0                   	// #0
  408808:	bl	4049b0 <lookup_paths_init@plt>
  40880c:	mov	w19, w0
  408810:	tbnz	w0, #31, 408960 <portable_attach+0x218>
  408814:	mov	w0, #0xfffffffe            	// #-2
  408818:	str	w0, [sp, #144]
  40881c:	str	xzr, [sp, #152]
  408820:	b	408868 <portable_attach+0x120>
  408824:	ldr	x2, [sp, #128]
  408828:	mov	x1, x27
  40882c:	mov	w0, #0x0                   	// #0
  408830:	add	x2, x2, #0x10
  408834:	bl	404ce0 <unit_file_exists@plt>
  408838:	cmp	w0, #0x0
  40883c:	b.lt	4089f0 <portable_attach+0x2a8>  // b.tstop
  408840:	ldr	x1, [sp, #128]
  408844:	add	x1, x1, #0x10
  408848:	b.ne	408a14 <portable_attach+0x2cc>  // b.any
  40884c:	mov	x2, x20
  408850:	mov	x0, x21
  408854:	bl	405678 <unit_file_is_active>
  408858:	mov	w19, w0
  40885c:	cmp	w0, #0x0
  408860:	b.lt	408960 <portable_attach+0x218>  // b.tstop
  408864:	b.ne	408a38 <portable_attach+0x2f0>  // b.any
  408868:	ldr	x0, [sp, #112]
  40886c:	add	x2, sp, #0x80
  408870:	add	x1, sp, #0x90
  408874:	mov	x3, #0x0                   	// #0
  408878:	bl	404b40 <internal_hashmap_iterate@plt>
  40887c:	tst	w0, #0xff
  408880:	b.ne	408824 <portable_attach+0xdc>  // b.any
  408884:	mov	w0, #0xfffffffe            	// #-2
  408888:	str	w0, [sp, #144]
  40888c:	str	xzr, [sp, #152]
  408890:	b	4088c0 <portable_attach+0x178>
  408894:	ldr	w2, [x0, #4]
  408898:	mov	x7, x25
  40889c:	ldr	x1, [x0, #16]
  4088a0:	mov	x6, x24
  4088a4:	ldr	x3, [sp, #128]
  4088a8:	mov	w5, w23
  4088ac:	mov	x4, x26
  4088b0:	mov	x0, x27
  4088b4:	bl	406ea8 <attach_unit_file>
  4088b8:	mov	w19, w0
  4088bc:	tbnz	w0, #31, 408960 <portable_attach+0x218>
  4088c0:	ldr	x0, [sp, #112]
  4088c4:	add	x2, sp, #0x80
  4088c8:	add	x1, sp, #0x90
  4088cc:	mov	x3, #0x0                   	// #0
  4088d0:	bl	404b40 <internal_hashmap_iterate@plt>
  4088d4:	tst	w0, #0xff
  4088d8:	ldr	x0, [sp, #120]
  4088dc:	b.ne	408894 <portable_attach+0x14c>  // b.any
  4088e0:	ldr	x19, [x0, #16]
  4088e4:	str	xzr, [sp, #136]
  4088e8:	cbz	x19, 408b00 <portable_attach+0x3b8>
  4088ec:	mov	x1, x19
  4088f0:	mov	w0, #0x1                   	// #1
  4088f4:	bl	404240 <image_in_search_path@plt>
  4088f8:	tst	w0, #0xff
  4088fc:	b.ne	40894c <portable_attach+0x204>  // b.any
  408900:	mov	w1, w23
  408904:	add	x2, sp, #0x88
  408908:	mov	x0, x19
  40890c:	bl	405c00 <image_symlink>
  408910:	mov	w20, w0
  408914:	tbnz	w0, #31, 408a60 <portable_attach+0x318>
  408918:	ldr	x0, [sp, #136]
  40891c:	mov	w1, #0x1ed                 	// #493
  408920:	bl	404d40 <mkdir_parents@plt>
  408924:	ldr	x1, [sp, #136]
  408928:	mov	x0, x19
  40892c:	bl	4044e0 <symlink@plt>
  408930:	tbnz	w0, #31, 408aa0 <portable_attach+0x358>
  408934:	ldr	x3, [sp, #136]
  408938:	mov	x4, x19
  40893c:	mov	x1, x25
  408940:	mov	x0, x24
  408944:	mov	w2, #0x1                   	// #1
  408948:	bl	405a58 <portable_changes_add>
  40894c:	ldr	x20, [sp, #136]
  408950:	mov	x0, x20
  408954:	mov	w19, #0x0                   	// #0
  408958:	bl	404c10 <free@plt>
  40895c:	nop
  408960:	ldr	x0, [sp, #120]
  408964:	cbz	x0, 40896c <portable_attach+0x224>
  408968:	bl	4041d0 <image_unref@plt>
  40896c:	mov	x0, x27
  408970:	bl	404330 <lookup_paths_free@plt>
  408974:	ldr	x0, [sp, #112]
  408978:	cbz	x0, 408988 <portable_attach+0x240>
  40897c:	mov	x2, #0x0                   	// #0
  408980:	mov	x1, #0x0                   	// #0
  408984:	bl	404280 <internal_hashmap_free@plt>
  408988:	ldr	x1, [sp, #264]
  40898c:	ldr	x0, [x22]
  408990:	eor	x0, x1, x0
  408994:	cbnz	x0, 408b24 <portable_attach+0x3dc>
  408998:	mov	w0, w19
  40899c:	ldp	x29, x30, [sp, #16]
  4089a0:	ldp	x19, x20, [sp, #32]
  4089a4:	ldp	x21, x22, [sp, #48]
  4089a8:	ldp	x23, x24, [sp, #64]
  4089ac:	ldp	x25, x26, [sp, #80]
  4089b0:	ldr	x27, [sp, #96]
  4089b4:	add	sp, sp, #0x110
  4089b8:	ret
  4089bc:	ldr	x0, [sp, #120]
  4089c0:	add	x27, sp, #0xa0
  4089c4:	cbnz	x0, 408968 <portable_attach+0x220>
  4089c8:	b	40896c <portable_attach+0x224>
  4089cc:	adrp	x4, 40d000 <_fini+0x91c>
  4089d0:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4089d4:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4089d8:	add	x4, x4, #0x828
  4089dc:	add	x1, x1, #0xbf8
  4089e0:	add	x2, x2, #0x803
  4089e4:	mov	w3, #0x3da                 	// #986
  4089e8:	mov	w0, #0x0                   	// #0
  4089ec:	bl	4045c0 <log_assert_failed_realm@plt>
  4089f0:	ldr	x3, [sp, #128]
  4089f4:	mov	w1, w0
  4089f8:	adrp	x2, 40d000 <_fini+0x91c>
  4089fc:	mov	x0, x20
  408a00:	add	x2, x2, #0x368
  408a04:	add	x3, x3, #0x10
  408a08:	bl	4043a0 <sd_bus_error_set_errnof@plt>
  408a0c:	mov	w19, w0
  408a10:	b	408960 <portable_attach+0x218>
  408a14:	mov	x3, x1
  408a18:	mov	x0, x20
  408a1c:	adrp	x2, 40d000 <_fini+0x91c>
  408a20:	adrp	x1, 40d000 <_fini+0x91c>
  408a24:	add	x2, x2, #0x3a8
  408a28:	add	x1, x1, #0x3e0
  408a2c:	bl	404860 <sd_bus_error_setf@plt>
  408a30:	mov	w19, w0
  408a34:	b	408960 <portable_attach+0x218>
  408a38:	ldr	x3, [sp, #128]
  408a3c:	mov	x0, x20
  408a40:	adrp	x2, 40d000 <_fini+0x91c>
  408a44:	adrp	x1, 40d000 <_fini+0x91c>
  408a48:	add	x2, x2, #0x408
  408a4c:	add	x1, x1, #0x3e0
  408a50:	add	x3, x3, #0x10
  408a54:	bl	404860 <sd_bus_error_setf@plt>
  408a58:	mov	w19, w0
  408a5c:	b	408960 <portable_attach+0x218>
  408a60:	mov	w0, #0x0                   	// #0
  408a64:	bl	404d90 <log_get_max_level_realm@plt>
  408a68:	cmp	w0, #0x6
  408a6c:	b.le	40894c <portable_attach+0x204>
  408a70:	mov	w1, w20
  408a74:	adrp	x5, 40d000 <_fini+0x91c>
  408a78:	adrp	x4, 40d000 <_fini+0x91c>
  408a7c:	add	x5, x5, #0x438
  408a80:	add	x4, x4, #0x940
  408a84:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  408a88:	mov	w3, #0x3be                 	// #958
  408a8c:	add	x2, x2, #0x803
  408a90:	mov	w0, #0x7                   	// #7
  408a94:	bl	4049d0 <log_internal_realm@plt>
  408a98:	ldr	x20, [sp, #136]
  408a9c:	b	408950 <portable_attach+0x208>
  408aa0:	mov	w0, #0x0                   	// #0
  408aa4:	bl	404d90 <log_get_max_level_realm@plt>
  408aa8:	cmp	w0, #0x6
  408aac:	ldr	x20, [sp, #136]
  408ab0:	b.le	408950 <portable_attach+0x208>
  408ab4:	bl	404770 <__errno_location@plt>
  408ab8:	mov	x21, x0
  408abc:	mov	w0, #0x7                   	// #7
  408ac0:	bl	404d80 <special_glyph@plt>
  408ac4:	str	x20, [sp]
  408ac8:	mov	x7, x0
  408acc:	mov	x6, x19
  408ad0:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  408ad4:	ldr	w1, [x21]
  408ad8:	add	x5, x5, #0xe38
  408adc:	adrp	x4, 40d000 <_fini+0x91c>
  408ae0:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  408ae4:	add	x4, x4, #0x940
  408ae8:	add	x2, x2, #0x803
  408aec:	mov	w3, #0x3c3                 	// #963
  408af0:	mov	w0, #0x7                   	// #7
  408af4:	bl	4049d0 <log_internal_realm@plt>
  408af8:	ldr	x20, [sp, #136]
  408afc:	b	408950 <portable_attach+0x208>
  408b00:	adrp	x4, 40d000 <_fini+0x91c>
  408b04:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  408b08:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  408b0c:	add	x4, x4, #0x810
  408b10:	add	x1, x1, #0x9c0
  408b14:	add	x2, x2, #0x803
  408b18:	mov	w3, #0x3b4                 	// #948
  408b1c:	mov	w0, #0x0                   	// #0
  408b20:	bl	4045c0 <log_assert_failed_realm@plt>
  408b24:	bl	404880 <__stack_chk_fail@plt>

0000000000408b28 <portable_detach>:
  408b28:	stp	x29, x30, [sp, #-416]!
  408b2c:	mov	x29, sp
  408b30:	stp	x23, x24, [sp, #48]
  408b34:	adrp	x23, 420000 <__FRAME_END__+0xfb68>
  408b38:	add	x23, x23, #0x738
  408b3c:	ldr	x6, [x23]
  408b40:	str	x6, [sp, #408]
  408b44:	mov	x6, #0x0                   	// #0
  408b48:	stp	x19, x20, [sp, #16]
  408b4c:	stp	x25, x26, [sp, #64]
  408b50:	str	w2, [sp, #100]
  408b54:	stp	x5, x0, [sp, #104]
  408b58:	str	xzr, [sp, #136]
  408b5c:	stp	xzr, xzr, [sp, #176]
  408b60:	stp	xzr, xzr, [sp, #192]
  408b64:	stp	xzr, xzr, [sp, #208]
  408b68:	stp	xzr, xzr, [sp, #224]
  408b6c:	stp	xzr, xzr, [sp, #240]
  408b70:	stp	xzr, xzr, [sp, #256]
  408b74:	str	xzr, [sp, #272]
  408b78:	cbz	x1, 409044 <portable_detach+0x51c>
  408b7c:	mov	x24, x1
  408b80:	mov	x25, x3
  408b84:	mov	x26, x4
  408b88:	add	x0, sp, #0xb0
  408b8c:	mov	x3, #0x0                   	// #0
  408b90:	mov	w2, #0x4                   	// #4
  408b94:	mov	w1, #0x0                   	// #0
  408b98:	bl	4049b0 <lookup_paths_init@plt>
  408b9c:	mov	w19, w0
  408ba0:	tbnz	w0, #31, 408de0 <portable_detach+0x2b8>
  408ba4:	ldr	w1, [sp, #100]
  408ba8:	add	x0, sp, #0xb0
  408bac:	stp	x21, x22, [sp, #32]
  408bb0:	stp	x27, x28, [sp, #80]
  408bb4:	bl	405bc0 <attached_path>
  408bb8:	mov	x28, x0
  408bbc:	bl	404b30 <opendir@plt>
  408bc0:	mov	x20, x0
  408bc4:	cbz	x0, 408da0 <portable_detach+0x278>
  408bc8:	adrp	x0, 420000 <__FRAME_END__+0xfb68>
  408bcc:	add	x0, x0, #0x760
  408bd0:	bl	4047f0 <internal_set_new@plt>
  408bd4:	mov	x22, x0
  408bd8:	cbz	x0, 40921c <portable_detach+0x6f4>
  408bdc:	adrp	x0, 420000 <__FRAME_END__+0xfb68>
  408be0:	add	x0, x0, #0x740
  408be4:	str	x0, [sp, #120]
  408be8:	bl	4047f0 <internal_set_new@plt>
  408bec:	str	x0, [sp, #136]
  408bf0:	cbz	x0, 409070 <portable_detach+0x548>
  408bf4:	bl	404770 <__errno_location@plt>
  408bf8:	mov	x21, x0
  408bfc:	mov	x0, x20
  408c00:	str	wzr, [x21]
  408c04:	bl	4045f0 <readdir64@plt>
  408c08:	mov	x19, x0
  408c0c:	cbz	x0, 408c68 <portable_detach+0x140>
  408c10:	add	x27, x19, #0x13
  408c14:	mov	x0, x27
  408c18:	bl	404420 <hidden_or_backup_file@plt>
  408c1c:	tst	w0, #0xff
  408c20:	b.ne	408c54 <portable_detach+0x12c>  // b.any
  408c24:	mov	x0, x27
  408c28:	mov	w1, #0x7                   	// #7
  408c2c:	str	xzr, [sp, #160]
  408c30:	bl	404d70 <unit_name_is_valid@plt>
  408c34:	tst	w0, #0xff
  408c38:	b.eq	408f48 <portable_detach+0x420>  // b.none
  408c3c:	mov	x1, x27
  408c40:	mov	x0, x22
  408c44:	bl	404750 <internal_hashmap_get@plt>
  408c48:	cbz	x0, 408e28 <portable_detach+0x300>
  408c4c:	ldr	x0, [sp, #160]
  408c50:	bl	404c10 <free@plt>
  408c54:	str	wzr, [x21]
  408c58:	mov	x0, x20
  408c5c:	bl	4045f0 <readdir64@plt>
  408c60:	mov	x19, x0
  408c64:	cbnz	x0, 408c10 <portable_detach+0xe8>
  408c68:	ldr	w27, [x21]
  408c6c:	cmp	w27, #0x0
  408c70:	b.gt	408f50 <portable_detach+0x428>
  408c74:	mov	x0, x22
  408c78:	bl	4049c0 <internal_hashmap_size@plt>
  408c7c:	cbz	w0, 409144 <portable_detach+0x61c>
  408c80:	mov	w0, #0xfffffffe            	// #-2
  408c84:	adrp	x2, 40d000 <_fini+0x91c>
  408c88:	adrp	x1, 40d000 <_fini+0x91c>
  408c8c:	add	x2, x2, #0x4d8
  408c90:	add	x1, x1, #0x500
  408c94:	mov	w19, #0x0                   	// #0
  408c98:	stp	x1, x2, [sp, #112]
  408c9c:	str	w0, [sp, #160]
  408ca0:	str	xzr, [sp, #168]
  408ca4:	add	x2, sp, #0x90
  408ca8:	add	x1, sp, #0xa0
  408cac:	mov	x0, x22
  408cb0:	bl	404710 <set_iterate@plt>
  408cb4:	tst	w0, #0xff
  408cb8:	b.eq	4092e0 <portable_detach+0x7b8>  // b.none
  408cbc:	mov	x0, x20
  408cc0:	bl	404580 <dirfd@plt>
  408cc4:	ldr	x1, [sp, #144]
  408cc8:	mov	w2, #0x0                   	// #0
  408ccc:	bl	404c00 <unlinkat@plt>
  408cd0:	tbz	w0, #31, 4090d4 <portable_detach+0x5ac>
  408cd4:	mov	w0, #0x0                   	// #0
  408cd8:	bl	404d90 <log_get_max_level_realm@plt>
  408cdc:	ldr	w1, [x21]
  408ce0:	cmp	w0, #0x6
  408ce4:	ldr	x0, [sp, #144]
  408ce8:	b.gt	4091e8 <portable_detach+0x6c0>
  408cec:	cmp	w19, #0x0
  408cf0:	ccmp	w1, #0x2, #0x4, ge  // ge = tcont
  408cf4:	csneg	w19, w19, w1, eq  // eq = none
  408cf8:	adrp	x2, 40d000 <_fini+0x91c>
  408cfc:	adrp	x3, 40d000 <_fini+0x91c>
  408d00:	add	x2, x2, #0x468
  408d04:	add	x3, x3, #0x970
  408d08:	mov	x1, x2
  408d0c:	add	x24, sp, #0x118
  408d10:	str	x3, [sp, #104]
  408d14:	adrp	x3, 40c000 <manager_image_cache_discover+0x50>
  408d18:	add	x3, x3, #0xb38
  408d1c:	str	x2, [sp, #280]
  408d20:	str	x3, [sp, #288]
  408d24:	str	xzr, [sp, #296]
  408d28:	b	408d60 <portable_detach+0x238>
  408d2c:	mov	w0, #0x0                   	// #0
  408d30:	bl	404d90 <log_get_max_level_realm@plt>
  408d34:	ldr	w1, [x21]
  408d38:	cmp	w0, #0x6
  408d3c:	b.gt	409010 <portable_detach+0x4e8>
  408d40:	cmp	w19, #0x0
  408d44:	ccmp	w1, #0x2, #0x4, ge  // ge = tcont
  408d48:	csneg	w19, w19, w1, eq  // eq = none
  408d4c:	mov	x0, x27
  408d50:	bl	404c10 <free@plt>
  408d54:	ldr	x1, [x24, #8]!
  408d58:	ldr	x0, [sp, #144]
  408d5c:	cbz	x1, 409078 <portable_detach+0x550>
  408d60:	mov	x2, #0x0                   	// #0
  408d64:	bl	404520 <strjoin_real@plt>
  408d68:	mov	x27, x0
  408d6c:	cbz	x0, 409070 <portable_detach+0x548>
  408d70:	mov	x0, x20
  408d74:	bl	404580 <dirfd@plt>
  408d78:	mov	x1, x27
  408d7c:	mov	w2, #0x0                   	// #0
  408d80:	bl	404c00 <unlinkat@plt>
  408d84:	tbnz	w0, #31, 408d2c <portable_detach+0x204>
  408d88:	mov	x3, x27
  408d8c:	mov	x2, x28
  408d90:	mov	x1, x26
  408d94:	mov	x0, x25
  408d98:	bl	405cc8 <portable_changes_add_with_prefix.constprop.0>
  408d9c:	b	408d4c <portable_detach+0x224>
  408da0:	bl	404770 <__errno_location@plt>
  408da4:	mov	x1, x0
  408da8:	mov	w0, #0x0                   	// #0
  408dac:	ldr	w19, [x1]
  408db0:	bl	404d90 <log_get_max_level_realm@plt>
  408db4:	cmp	w19, #0x2
  408db8:	b.eq	408fac <portable_detach+0x484>  // b.none
  408dbc:	cmp	w0, #0x6
  408dc0:	b.gt	4090f0 <portable_detach+0x5c8>
  408dc4:	cmp	w19, #0x0
  408dc8:	ldp	x21, x22, [sp, #32]
  408dcc:	cneg	w19, w19, lt  // lt = tstop
  408dd0:	ldp	x27, x28, [sp, #80]
  408dd4:	and	w19, w19, #0xff
  408dd8:	neg	w19, w19
  408ddc:	nop
  408de0:	ldr	x0, [sp, #136]
  408de4:	cbz	x0, 408df8 <portable_detach+0x2d0>
  408de8:	adrp	x1, 404000 <_init-0x198>
  408dec:	mov	x2, #0x0                   	// #0
  408df0:	add	x1, x1, #0xc10
  408df4:	bl	404280 <internal_hashmap_free@plt>
  408df8:	add	x0, sp, #0xb0
  408dfc:	bl	404330 <lookup_paths_free@plt>
  408e00:	ldr	x1, [sp, #408]
  408e04:	ldr	x0, [x23]
  408e08:	eor	x0, x1, x0
  408e0c:	cbnz	x0, 4095a4 <portable_detach+0xa7c>
  408e10:	mov	w0, w19
  408e14:	ldp	x19, x20, [sp, #16]
  408e18:	ldp	x23, x24, [sp, #48]
  408e1c:	ldp	x25, x26, [sp, #64]
  408e20:	ldp	x29, x30, [sp], #416
  408e24:	ret
  408e28:	mov	x1, x19
  408e2c:	mov	x0, x20
  408e30:	bl	4044b0 <dirent_ensure_type@plt>
  408e34:	ldrb	w0, [x19, #18]
  408e38:	and	w0, w0, #0xfffffffd
  408e3c:	and	w0, w0, #0xff
  408e40:	cmp	w0, #0x8
  408e44:	b.ne	408c4c <portable_detach+0x124>  // b.any
  408e48:	add	x4, sp, #0xa0
  408e4c:	mov	x3, x24
  408e50:	mov	x2, x27
  408e54:	mov	x1, x28
  408e58:	mov	x0, x20
  408e5c:	bl	406600 <test_chroot_dropin>
  408e60:	mov	w19, w0
  408e64:	cmp	w0, #0x0
  408e68:	b.lt	40925c <portable_detach+0x734>  // b.tstop
  408e6c:	b.eq	408c4c <portable_detach+0x124>  // b.none
  408e70:	add	x3, sp, #0x98
  408e74:	mov	x2, x27
  408e78:	add	x1, sp, #0xb0
  408e7c:	mov	w0, #0x0                   	// #0
  408e80:	bl	404730 <unit_file_lookup_state@plt>
  408e84:	mov	w19, w0
  408e88:	tbnz	w0, #31, 4094a4 <portable_detach+0x97c>
  408e8c:	ldr	w0, [sp, #152]
  408e90:	cmp	w0, #0x3
  408e94:	b.le	408f0c <portable_detach+0x3e4>
  408e98:	sub	w1, w0, #0x6
  408e9c:	cmp	w1, #0x1
  408ea0:	b.hi	408f14 <portable_detach+0x3ec>  // b.pmore
  408ea4:	ldp	x2, x0, [sp, #104]
  408ea8:	mov	x1, x27
  408eac:	bl	405678 <unit_file_is_active>
  408eb0:	mov	w19, w0
  408eb4:	cmp	w0, #0x0
  408eb8:	b.lt	40925c <portable_detach+0x734>  // b.tstop
  408ebc:	b.ne	40923c <portable_detach+0x714>  // b.any
  408ec0:	mov	x1, x27
  408ec4:	mov	x0, x22
  408ec8:	bl	404920 <set_put_strdup@plt>
  408ecc:	mov	w19, w0
  408ed0:	tbnz	w0, #31, 4094cc <portable_detach+0x9a4>
  408ed4:	ldr	x27, [sp, #160]
  408ed8:	mov	x0, x27
  408edc:	bl	404670 <path_is_absolute@plt>
  408ee0:	tst	w0, #0xff
  408ee4:	b.eq	408f00 <portable_detach+0x3d8>  // b.none
  408ee8:	mov	x1, x27
  408eec:	mov	w0, #0x1                   	// #1
  408ef0:	bl	404240 <image_in_search_path@plt>
  408ef4:	tst	w0, #0xff
  408ef8:	b.eq	409174 <portable_detach+0x64c>  // b.none
  408efc:	ldr	x27, [sp, #160]
  408f00:	mov	x0, x27
  408f04:	bl	404c10 <free@plt>
  408f08:	b	408c54 <portable_detach+0x12c>
  408f0c:	cmp	w0, #0x0
  408f10:	b.gt	408ea4 <portable_detach+0x37c>
  408f14:	bl	4047a0 <unit_file_state_to_string@plt>
  408f18:	mov	x4, x0
  408f1c:	ldr	x0, [sp, #104]
  408f20:	mov	x3, x27
  408f24:	adrp	x2, 40d000 <_fini+0x91c>
  408f28:	adrp	x1, 40d000 <_fini+0x91c>
  408f2c:	add	x2, x2, #0x480
  408f30:	add	x1, x1, #0x3e0
  408f34:	bl	404860 <sd_bus_error_setf@plt>
  408f38:	mov	w19, w0
  408f3c:	ldr	x0, [sp, #160]
  408f40:	bl	404c10 <free@plt>
  408f44:	b	408f68 <portable_detach+0x440>
  408f48:	mov	x0, #0x0                   	// #0
  408f4c:	b	408c50 <portable_detach+0x128>
  408f50:	and	w19, w27, #0xff
  408f54:	mov	w0, #0x0                   	// #0
  408f58:	neg	w19, w19
  408f5c:	bl	404d90 <log_get_max_level_realm@plt>
  408f60:	cmp	w0, #0x6
  408f64:	b.gt	4091b4 <portable_detach+0x68c>
  408f68:	mov	x0, x20
  408f6c:	bl	404690 <closedir@plt>
  408f70:	ldr	x0, [sp, #136]
  408f74:	cbz	x0, 409038 <portable_detach+0x510>
  408f78:	adrp	x20, 404000 <_init-0x198>
  408f7c:	add	x20, x20, #0xc10
  408f80:	mov	x1, x20
  408f84:	mov	x2, #0x0                   	// #0
  408f88:	bl	404280 <internal_hashmap_free@plt>
  408f8c:	cbz	x22, 409230 <portable_detach+0x708>
  408f90:	mov	x0, x22
  408f94:	mov	x1, x20
  408f98:	mov	x2, #0x0                   	// #0
  408f9c:	bl	404280 <internal_hashmap_free@plt>
  408fa0:	ldp	x21, x22, [sp, #32]
  408fa4:	ldp	x27, x28, [sp, #80]
  408fa8:	b	408df8 <portable_detach+0x2d0>
  408fac:	cmp	w0, #0x6
  408fb0:	b.le	40929c <portable_detach+0x774>
  408fb4:	adrp	x19, 40d000 <_fini+0x91c>
  408fb8:	add	x19, x19, #0x608
  408fbc:	mov	x5, x19
  408fc0:	mov	x6, x24
  408fc4:	mov	w3, #0x513                 	// #1299
  408fc8:	mov	w1, #0x0                   	// #0
  408fcc:	adrp	x4, 40d000 <_fini+0x91c>
  408fd0:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  408fd4:	add	x4, x4, #0x970
  408fd8:	add	x2, x2, #0x803
  408fdc:	mov	w0, #0x7                   	// #7
  408fe0:	bl	4049d0 <log_internal_realm@plt>
  408fe4:	ldr	x0, [sp, #104]
  408fe8:	mov	x2, x19
  408fec:	mov	x3, x24
  408ff0:	adrp	x1, 40d000 <_fini+0x91c>
  408ff4:	add	x1, x1, #0x648
  408ff8:	bl	404860 <sd_bus_error_setf@plt>
  408ffc:	mov	w19, w0
  409000:	ldr	x0, [sp, #136]
  409004:	cbz	x0, 409230 <portable_detach+0x708>
  409008:	mov	x22, #0x0                   	// #0
  40900c:	b	408f78 <portable_detach+0x450>
  409010:	ldp	x4, x5, [sp, #104]
  409014:	mov	x7, x27
  409018:	mov	x6, x28
  40901c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  409020:	mov	w3, #0x4d9                 	// #1241
  409024:	add	x2, x2, #0x803
  409028:	mov	w0, #0x7                   	// #7
  40902c:	bl	4049d0 <log_internal_realm@plt>
  409030:	ldr	w1, [x21]
  409034:	b	408d40 <portable_detach+0x218>
  409038:	adrp	x20, 404000 <_init-0x198>
  40903c:	add	x20, x20, #0xc10
  409040:	b	408f90 <portable_detach+0x468>
  409044:	adrp	x4, 40d000 <_fini+0x91c>
  409048:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40904c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  409050:	add	x4, x4, #0x850
  409054:	add	x1, x1, #0xbf8
  409058:	add	x2, x2, #0x803
  40905c:	mov	w3, #0x476                 	// #1142
  409060:	mov	w0, #0x0                   	// #0
  409064:	stp	x21, x22, [sp, #32]
  409068:	stp	x27, x28, [sp, #80]
  40906c:	bl	4045c0 <log_assert_failed_realm@plt>
  409070:	mov	w19, #0xfffffff4            	// #-12
  409074:	b	408f68 <portable_detach+0x440>
  409078:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40907c:	mov	x2, #0x0                   	// #0
  409080:	add	x1, x1, #0xcf0
  409084:	bl	404520 <strjoin_real@plt>
  409088:	mov	x24, x0
  40908c:	cbz	x0, 409070 <portable_detach+0x548>
  409090:	mov	x0, x20
  409094:	bl	404580 <dirfd@plt>
  409098:	mov	x1, x24
  40909c:	mov	w2, #0x200                 	// #512
  4090a0:	bl	404c00 <unlinkat@plt>
  4090a4:	tbz	w0, #31, 40912c <portable_detach+0x604>
  4090a8:	mov	w0, #0x0                   	// #0
  4090ac:	bl	404d90 <log_get_max_level_realm@plt>
  4090b0:	ldr	w1, [x21]
  4090b4:	cmp	w0, #0x6
  4090b8:	b.gt	409268 <portable_detach+0x740>
  4090bc:	cmp	w19, #0x0
  4090c0:	ccmp	w1, #0x2, #0x4, ge  // ge = tcont
  4090c4:	csneg	w19, w19, w1, eq  // eq = none
  4090c8:	mov	x0, x24
  4090cc:	bl	404c10 <free@plt>
  4090d0:	b	408ca4 <portable_detach+0x17c>
  4090d4:	ldr	x3, [sp, #144]
  4090d8:	mov	x2, x28
  4090dc:	mov	x1, x26
  4090e0:	mov	x0, x25
  4090e4:	bl	405cc8 <portable_changes_add_with_prefix.constprop.0>
  4090e8:	ldr	x0, [sp, #144]
  4090ec:	b	408cf8 <portable_detach+0x1d0>
  4090f0:	mov	x6, x28
  4090f4:	mov	w1, w19
  4090f8:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4090fc:	adrp	x4, 40d000 <_fini+0x91c>
  409100:	add	x5, x5, #0xc08
  409104:	add	x4, x4, #0x970
  409108:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  40910c:	mov	w3, #0x483                 	// #1155
  409110:	add	x2, x2, #0x803
  409114:	mov	w0, #0x7                   	// #7
  409118:	bl	4049d0 <log_internal_realm@plt>
  40911c:	mov	w19, w0
  409120:	ldp	x21, x22, [sp, #32]
  409124:	ldp	x27, x28, [sp, #80]
  409128:	b	408de0 <portable_detach+0x2b8>
  40912c:	mov	x3, x24
  409130:	mov	x2, x28
  409134:	mov	x1, x26
  409138:	mov	x0, x25
  40913c:	bl	405cc8 <portable_changes_add_with_prefix.constprop.0>
  409140:	b	4090c8 <portable_detach+0x5a0>
  409144:	bl	404d90 <log_get_max_level_realm@plt>
  409148:	cmp	w0, #0x6
  40914c:	b.gt	4095b0 <portable_detach+0xa88>
  409150:	ldr	x0, [sp, #104]
  409154:	mov	x3, x24
  409158:	adrp	x2, 40d000 <_fini+0x91c>
  40915c:	adrp	x1, 40d000 <_fini+0x91c>
  409160:	add	x2, x2, #0x608
  409164:	add	x1, x1, #0x648
  409168:	bl	404860 <sd_bus_error_setf@plt>
  40916c:	mov	w19, w0
  409170:	b	408f68 <portable_detach+0x440>
  409174:	ldr	x1, [sp, #120]
  409178:	add	x0, sp, #0x88
  40917c:	bl	4042c0 <internal_set_ensure_allocated@plt>
  409180:	mov	w19, w0
  409184:	tbnz	w0, #31, 40925c <portable_detach+0x734>
  409188:	ldr	x0, [sp, #136]
  40918c:	mov	x27, #0x0                   	// #0
  409190:	ldr	x1, [sp, #160]
  409194:	bl	404d20 <set_put@plt>
  409198:	mov	w19, w0
  40919c:	tbz	w0, #31, 408f00 <portable_detach+0x3d8>
  4091a0:	cmn	w0, #0x11
  4091a4:	ldr	x0, [sp, #160]
  4091a8:	mov	x27, x0
  4091ac:	b.eq	408f00 <portable_detach+0x3d8>  // b.none
  4091b0:	b	408f40 <portable_detach+0x418>
  4091b4:	mov	x6, x28
  4091b8:	mov	w1, w27
  4091bc:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4091c0:	adrp	x4, 40d000 <_fini+0x91c>
  4091c4:	add	x5, x5, #0xc30
  4091c8:	add	x4, x4, #0x970
  4091cc:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4091d0:	mov	w3, #0x48e                 	// #1166
  4091d4:	add	x2, x2, #0x803
  4091d8:	mov	w0, #0x7                   	// #7
  4091dc:	bl	4049d0 <log_internal_realm@plt>
  4091e0:	mov	w19, w0
  4091e4:	b	408f68 <portable_detach+0x440>
  4091e8:	ldr	x5, [sp, #120]
  4091ec:	mov	x7, x0
  4091f0:	mov	x6, x28
  4091f4:	adrp	x4, 40d000 <_fini+0x91c>
  4091f8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4091fc:	add	x4, x4, #0x970
  409200:	add	x2, x2, #0x803
  409204:	mov	w3, #0x4ca                 	// #1226
  409208:	mov	w0, #0x7                   	// #7
  40920c:	bl	4049d0 <log_internal_realm@plt>
  409210:	ldr	w1, [x21]
  409214:	ldr	x0, [sp, #144]
  409218:	b	408cec <portable_detach+0x1c4>
  40921c:	mov	x0, x20
  409220:	bl	404690 <closedir@plt>
  409224:	ldr	x0, [sp, #136]
  409228:	mov	w19, #0xfffffff4            	// #-12
  40922c:	cbnz	x0, 4092c4 <portable_detach+0x79c>
  409230:	ldp	x21, x22, [sp, #32]
  409234:	ldp	x27, x28, [sp, #80]
  409238:	b	408df8 <portable_detach+0x2d0>
  40923c:	ldr	x0, [sp, #104]
  409240:	mov	x3, x27
  409244:	adrp	x2, 40d000 <_fini+0x91c>
  409248:	adrp	x1, 40d000 <_fini+0x91c>
  40924c:	add	x2, x2, #0x4b0
  409250:	add	x1, x1, #0x3e0
  409254:	bl	404860 <sd_bus_error_setf@plt>
  409258:	mov	w19, w0
  40925c:	ldr	x0, [sp, #160]
  409260:	bl	404c10 <free@plt>
  409264:	b	408f68 <portable_detach+0x440>
  409268:	mov	x7, x24
  40926c:	mov	x6, x28
  409270:	adrp	x5, 40d000 <_fini+0x91c>
  409274:	adrp	x4, 40d000 <_fini+0x91c>
  409278:	add	x5, x5, #0x520
  40927c:	add	x4, x4, #0x970
  409280:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  409284:	mov	w3, #0x4e6                 	// #1254
  409288:	add	x2, x2, #0x803
  40928c:	mov	w0, #0x7                   	// #7
  409290:	bl	4049d0 <log_internal_realm@plt>
  409294:	ldr	w1, [x21]
  409298:	b	4090bc <portable_detach+0x594>
  40929c:	ldr	x0, [sp, #104]
  4092a0:	mov	x3, x24
  4092a4:	adrp	x2, 40d000 <_fini+0x91c>
  4092a8:	adrp	x1, 40d000 <_fini+0x91c>
  4092ac:	add	x2, x2, #0x608
  4092b0:	add	x1, x1, #0x648
  4092b4:	bl	404860 <sd_bus_error_setf@plt>
  4092b8:	mov	w19, w0
  4092bc:	ldr	x0, [sp, #136]
  4092c0:	cbz	x0, 409230 <portable_detach+0x708>
  4092c4:	adrp	x1, 404000 <_init-0x198>
  4092c8:	mov	x2, #0x0                   	// #0
  4092cc:	add	x1, x1, #0xc10
  4092d0:	bl	404280 <internal_hashmap_free@plt>
  4092d4:	ldp	x21, x22, [sp, #32]
  4092d8:	ldp	x27, x28, [sp, #80]
  4092dc:	b	408df8 <portable_detach+0x2d0>
  4092e0:	adrp	x24, 40d000 <_fini+0x91c>
  4092e4:	add	x24, x24, #0x5e0
  4092e8:	mov	w0, #0xfffffffe            	// #-2
  4092ec:	str	w0, [sp, #160]
  4092f0:	str	xzr, [sp, #168]
  4092f4:	ldr	x0, [sp, #136]
  4092f8:	add	x2, sp, #0x90
  4092fc:	add	x1, sp, #0xa0
  409300:	bl	404710 <set_iterate@plt>
  409304:	tst	w0, #0xff
  409308:	b.eq	40947c <portable_detach+0x954>  // b.none
  40930c:	ldr	w1, [sp, #100]
  409310:	add	x2, sp, #0x98
  409314:	ldr	x0, [sp, #144]
  409318:	str	xzr, [sp, #152]
  40931c:	bl	405c00 <image_symlink>
  409320:	mov	w27, w0
  409324:	tbnz	w0, #31, 4093a4 <portable_detach+0x87c>
  409328:	ldr	x1, [sp, #152]
  40932c:	add	x2, sp, #0x118
  409330:	mov	w0, #0x0                   	// #0
  409334:	bl	404830 <__lxstat64@plt>
  409338:	tbnz	w0, #31, 4093f8 <portable_detach+0x8d0>
  40933c:	ldr	w0, [sp, #296]
  409340:	ldr	x27, [sp, #152]
  409344:	and	w0, w0, #0xf000
  409348:	cmp	w0, #0xa, lsl #12
  40934c:	b.eq	4093c0 <portable_detach+0x898>  // b.none
  409350:	mov	w0, #0x0                   	// #0
  409354:	bl	404d90 <log_get_max_level_realm@plt>
  409358:	cmp	w0, #0x6
  40935c:	b.gt	40936c <portable_detach+0x844>
  409360:	mov	x0, x27
  409364:	bl	404c10 <free@plt>
  409368:	b	4092f4 <portable_detach+0x7cc>
  40936c:	mov	x6, x27
  409370:	adrp	x5, 40d000 <_fini+0x91c>
  409374:	adrp	x4, 40d000 <_fini+0x91c>
  409378:	add	x5, x5, #0x5b8
  40937c:	add	x4, x4, #0x970
  409380:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  409384:	mov	w3, #0x4ff                 	// #1279
  409388:	add	x2, x2, #0x803
  40938c:	mov	w1, #0x0                   	// #0
  409390:	mov	w0, #0x7                   	// #7
  409394:	bl	4049d0 <log_internal_realm@plt>
  409398:	ldr	x27, [sp, #152]
  40939c:	mov	x0, x27
  4093a0:	b	409364 <portable_detach+0x83c>
  4093a4:	mov	w0, #0x0                   	// #0
  4093a8:	bl	404d90 <log_get_max_level_realm@plt>
  4093ac:	cmp	w0, #0x6
  4093b0:	b.gt	409444 <portable_detach+0x91c>
  4093b4:	ldr	x27, [sp, #152]
  4093b8:	mov	x0, x27
  4093bc:	b	409364 <portable_detach+0x83c>
  4093c0:	mov	x0, x27
  4093c4:	bl	404260 <unlink@plt>
  4093c8:	tbz	w0, #31, 409518 <portable_detach+0x9f0>
  4093cc:	mov	w0, #0x0                   	// #0
  4093d0:	bl	404d90 <log_get_max_level_realm@plt>
  4093d4:	ldr	w1, [x21]
  4093d8:	cmp	w0, #0x6
  4093dc:	ldr	x0, [sp, #152]
  4093e0:	b.gt	409574 <portable_detach+0xa4c>
  4093e4:	cmp	w19, #0x0
  4093e8:	ccmp	w1, #0x2, #0x4, ge  // ge = tcont
  4093ec:	csneg	w19, w19, w1, eq  // eq = none
  4093f0:	bl	404c10 <free@plt>
  4093f4:	b	4092f4 <portable_detach+0x7cc>
  4093f8:	mov	w0, #0x0                   	// #0
  4093fc:	bl	404d90 <log_get_max_level_realm@plt>
  409400:	cmp	w0, #0x6
  409404:	ldr	x27, [sp, #152]
  409408:	b.le	409360 <portable_detach+0x838>
  40940c:	ldr	w1, [x21]
  409410:	mov	x6, x27
  409414:	adrp	x5, 40d000 <_fini+0x91c>
  409418:	adrp	x4, 40d000 <_fini+0x91c>
  40941c:	add	x5, x5, #0x590
  409420:	add	x4, x4, #0x970
  409424:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  409428:	mov	w3, #0x4fa                 	// #1274
  40942c:	add	x2, x2, #0x803
  409430:	mov	w0, #0x7                   	// #7
  409434:	bl	4049d0 <log_internal_realm@plt>
  409438:	ldr	x27, [sp, #152]
  40943c:	mov	x0, x27
  409440:	b	409364 <portable_detach+0x83c>
  409444:	ldr	x6, [sp, #144]
  409448:	mov	w1, w27
  40944c:	adrp	x5, 40d000 <_fini+0x91c>
  409450:	adrp	x4, 40d000 <_fini+0x91c>
  409454:	add	x5, x5, #0x550
  409458:	add	x4, x4, #0x970
  40945c:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  409460:	mov	w3, #0x4f5                 	// #1269
  409464:	add	x2, x2, #0x803
  409468:	mov	w0, #0x7                   	// #7
  40946c:	bl	4049d0 <log_internal_realm@plt>
  409470:	ldr	x27, [sp, #152]
  409474:	mov	x0, x27
  409478:	b	409364 <portable_detach+0x83c>
  40947c:	mov	x0, x28
  409480:	bl	404760 <rmdir@plt>
  409484:	tbnz	w0, #31, 408f68 <portable_detach+0x440>
  409488:	mov	x3, x28
  40948c:	mov	x1, x26
  409490:	mov	x0, x25
  409494:	mov	x4, #0x0                   	// #0
  409498:	mov	w2, #0x2                   	// #2
  40949c:	bl	405a58 <portable_changes_add>
  4094a0:	b	408f68 <portable_detach+0x440>
  4094a4:	mov	w0, #0x0                   	// #0
  4094a8:	bl	404d90 <log_get_max_level_realm@plt>
  4094ac:	cmp	w0, #0x6
  4094b0:	b.gt	40953c <portable_detach+0xa14>
  4094b4:	ldr	x0, [sp, #160]
  4094b8:	neg	w19, w19
  4094bc:	and	w19, w19, #0xff
  4094c0:	neg	w19, w19
  4094c4:	bl	404c10 <free@plt>
  4094c8:	b	408f68 <portable_detach+0x440>
  4094cc:	mov	w0, #0x0                   	// #0
  4094d0:	bl	404d90 <log_get_max_level_realm@plt>
  4094d4:	cmp	w0, #0x6
  4094d8:	b.le	4094b4 <portable_detach+0x98c>
  4094dc:	mov	w1, w19
  4094e0:	mov	x6, x27
  4094e4:	mov	w3, #0x4b1                 	// #1201
  4094e8:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  4094ec:	adrp	x4, 40d000 <_fini+0x91c>
  4094f0:	add	x5, x5, #0xc88
  4094f4:	add	x4, x4, #0x970
  4094f8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4094fc:	mov	w0, #0x7                   	// #7
  409500:	add	x2, x2, #0x803
  409504:	bl	4049d0 <log_internal_realm@plt>
  409508:	mov	w19, w0
  40950c:	ldr	x0, [sp, #160]
  409510:	bl	404c10 <free@plt>
  409514:	b	408f68 <portable_detach+0x440>
  409518:	ldr	x3, [sp, #152]
  40951c:	mov	x1, x26
  409520:	mov	x0, x25
  409524:	mov	x4, #0x0                   	// #0
  409528:	mov	w2, #0x2                   	// #2
  40952c:	bl	405a58 <portable_changes_add>
  409530:	ldr	x0, [sp, #152]
  409534:	bl	404c10 <free@plt>
  409538:	b	4092f4 <portable_detach+0x7cc>
  40953c:	mov	w1, w19
  409540:	mov	x6, x27
  409544:	adrp	x5, 40c000 <manager_image_cache_discover+0x50>
  409548:	adrp	x4, 40d000 <_fini+0x91c>
  40954c:	add	x5, x5, #0xc58
  409550:	add	x4, x4, #0x970
  409554:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  409558:	mov	w3, #0x4a5                 	// #1189
  40955c:	add	x2, x2, #0x803
  409560:	mov	w0, #0x7                   	// #7
  409564:	bl	4049d0 <log_internal_realm@plt>
  409568:	mov	w19, w0
  40956c:	ldr	x0, [sp, #160]
  409570:	b	409260 <portable_detach+0x738>
  409574:	mov	x6, x0
  409578:	mov	x5, x24
  40957c:	adrp	x4, 40d000 <_fini+0x91c>
  409580:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  409584:	add	x4, x4, #0x970
  409588:	add	x2, x2, #0x803
  40958c:	mov	w3, #0x504                 	// #1284
  409590:	mov	w0, #0x7                   	// #7
  409594:	bl	4049d0 <log_internal_realm@plt>
  409598:	ldr	w1, [x21]
  40959c:	ldr	x0, [sp, #152]
  4095a0:	b	4093e4 <portable_detach+0x8bc>
  4095a4:	stp	x21, x22, [sp, #32]
  4095a8:	stp	x27, x28, [sp, #80]
  4095ac:	bl	404880 <__stack_chk_fail@plt>
  4095b0:	adrp	x19, 40d000 <_fini+0x91c>
  4095b4:	add	x19, x19, #0x608
  4095b8:	mov	x5, x19
  4095bc:	mov	x6, x24
  4095c0:	mov	w3, #0x513                 	// #1299
  4095c4:	mov	w1, #0x0                   	// #0
  4095c8:	adrp	x4, 40d000 <_fini+0x91c>
  4095cc:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4095d0:	add	x4, x4, #0x970
  4095d4:	add	x2, x2, #0x803
  4095d8:	mov	w0, #0x7                   	// #7
  4095dc:	bl	4049d0 <log_internal_realm@plt>
  4095e0:	ldr	x0, [sp, #104]
  4095e4:	mov	x2, x19
  4095e8:	mov	x3, x24
  4095ec:	adrp	x1, 40d000 <_fini+0x91c>
  4095f0:	add	x1, x1, #0x648
  4095f4:	bl	404860 <sd_bus_error_setf@plt>
  4095f8:	mov	w19, w0
  4095fc:	b	408f68 <portable_detach+0x440>

0000000000409600 <portable_get_state>:
  409600:	stp	x29, x30, [sp, #-80]!
  409604:	mov	x29, sp
  409608:	stp	x19, x20, [sp, #16]
  40960c:	adrp	x19, 420000 <__FRAME_END__+0xfb68>
  409610:	add	x19, x19, #0x738
  409614:	ldr	x5, [x19]
  409618:	str	x5, [sp, #72]
  40961c:	mov	x5, #0x0                   	// #0
  409620:	stp	x21, x22, [sp, #32]
  409624:	stp	x23, x24, [sp, #48]
  409628:	cbz	x1, 4096ac <portable_get_state+0xac>
  40962c:	mov	x20, x3
  409630:	cbz	x3, 4096d0 <portable_get_state+0xd0>
  409634:	mov	w22, w2
  409638:	mov	x24, x0
  40963c:	mov	x21, x1
  409640:	mov	x23, x4
  409644:	and	w2, w2, #0xfffffffb
  409648:	add	x3, sp, #0x44
  40964c:	bl	406a28 <portable_get_state_internal>
  409650:	tbnz	w0, #31, 409664 <portable_get_state+0x64>
  409654:	ldr	w1, [sp, #68]
  409658:	cbz	w1, 409688 <portable_get_state+0x88>
  40965c:	mov	w0, #0x0                   	// #0
  409660:	str	w1, [x20]
  409664:	ldr	x2, [sp, #72]
  409668:	ldr	x1, [x19]
  40966c:	eor	x1, x2, x1
  409670:	cbnz	x1, 4096f4 <portable_get_state+0xf4>
  409674:	ldp	x19, x20, [sp, #16]
  409678:	ldp	x21, x22, [sp, #32]
  40967c:	ldp	x23, x24, [sp, #48]
  409680:	ldp	x29, x30, [sp], #80
  409684:	ret
  409688:	mov	x4, x23
  40968c:	add	x3, sp, #0x44
  409690:	orr	w2, w22, #0x4
  409694:	mov	x1, x21
  409698:	mov	x0, x24
  40969c:	bl	406a28 <portable_get_state_internal>
  4096a0:	tbnz	w0, #31, 409664 <portable_get_state+0x64>
  4096a4:	ldr	w1, [sp, #68]
  4096a8:	b	40965c <portable_get_state+0x5c>
  4096ac:	adrp	x4, 40d000 <_fini+0x91c>
  4096b0:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4096b4:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4096b8:	add	x4, x4, #0x880
  4096bc:	add	x1, x1, #0xbf8
  4096c0:	add	x2, x2, #0x803
  4096c4:	mov	w3, #0x574                 	// #1396
  4096c8:	mov	w0, #0x0                   	// #0
  4096cc:	bl	4045c0 <log_assert_failed_realm@plt>
  4096d0:	adrp	x4, 40d000 <_fini+0x91c>
  4096d4:	adrp	x1, 40d000 <_fini+0x91c>
  4096d8:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  4096dc:	add	x4, x4, #0x880
  4096e0:	add	x1, x1, #0x670
  4096e4:	add	x2, x2, #0x803
  4096e8:	mov	w3, #0x575                 	// #1397
  4096ec:	mov	w0, #0x0                   	// #0
  4096f0:	bl	4045c0 <log_assert_failed_realm@plt>
  4096f4:	bl	404880 <__stack_chk_fail@plt>

00000000004096f8 <portable_get_profiles>:
  4096f8:	cbz	x0, 409714 <portable_get_profiles+0x1c>
  4096fc:	adrp	x4, 40d000 <_fini+0x91c>
  409700:	mov	w3, #0x1c                  	// #28
  409704:	add	x4, x4, #0xa48
  409708:	mov	x2, #0x0                   	// #0
  40970c:	mov	x1, #0x0                   	// #0
  409710:	b	4048a0 <conf_files_list_nulstr@plt>
  409714:	stp	x29, x30, [sp, #-16]!
  409718:	adrp	x4, 40d000 <_fini+0x91c>
  40971c:	adrp	x1, 40d000 <_fini+0x91c>
  409720:	mov	x29, sp
  409724:	adrp	x2, 40c000 <manager_image_cache_discover+0x50>
  409728:	add	x4, x4, #0x898
  40972c:	add	x1, x1, #0x670
  409730:	add	x2, x2, #0x803
  409734:	mov	w3, #0x589                 	// #1417
  409738:	bl	4045c0 <log_assert_failed_realm@plt>
  40973c:	nop

0000000000409740 <portable_change_type_to_string>:
  409740:	cmp	w0, #0x4
  409744:	b.hi	409758 <portable_change_type_to_string+0x18>  // b.pmore
  409748:	adrp	x1, 40d000 <_fini+0x91c>
  40974c:	add	x1, x1, #0x9c8
  409750:	ldr	x0, [x1, w0, sxtw #3]
  409754:	ret
  409758:	mov	x0, #0x0                   	// #0
  40975c:	ret

0000000000409760 <portable_state_to_string>:
  409760:	cmp	w0, #0x6
  409764:	b.hi	409778 <portable_state_to_string+0x18>  // b.pmore
  409768:	adrp	x1, 40d000 <_fini+0x91c>
  40976c:	add	x1, x1, #0xa10
  409770:	ldr	x0, [x1, w0, sxtw #3]
  409774:	ret
  409778:	mov	x0, #0x0                   	// #0
  40977c:	ret

0000000000409780 <redirect_method_to_image>:
  409780:	stp	x29, x30, [sp, #-80]!
  409784:	mov	x29, sp
  409788:	stp	x19, x20, [sp, #16]
  40978c:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  409790:	add	x20, x20, #0x738
  409794:	ldr	x4, [x20]
  409798:	str	x4, [sp, #72]
  40979c:	mov	x4, #0x0                   	// #0
  4097a0:	stp	x21, x22, [sp, #32]
  4097a4:	str	x23, [sp, #48]
  4097a8:	cbz	x0, 409814 <redirect_method_to_image+0x94>
  4097ac:	mov	x19, x1
  4097b0:	cbz	x1, 409838 <redirect_method_to_image+0xb8>
  4097b4:	mov	x21, x0
  4097b8:	mov	x23, x2
  4097bc:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  4097c0:	mov	x22, x3
  4097c4:	add	x2, sp, #0x40
  4097c8:	add	x1, x1, #0x8a8
  4097cc:	mov	x0, x19
  4097d0:	bl	4045d0 <sd_bus_message_read@plt>
  4097d4:	tbnz	w0, #31, 4097f0 <redirect_method_to_image+0x70>
  4097d8:	ldr	x2, [sp, #64]
  4097dc:	mov	x4, x23
  4097e0:	mov	x1, x19
  4097e4:	mov	x0, x21
  4097e8:	mov	x3, #0x0                   	// #0
  4097ec:	blr	x22
  4097f0:	ldr	x2, [sp, #72]
  4097f4:	ldr	x1, [x20]
  4097f8:	eor	x1, x2, x1
  4097fc:	cbnz	x1, 40985c <redirect_method_to_image+0xdc>
  409800:	ldp	x19, x20, [sp, #16]
  409804:	ldp	x21, x22, [sp, #32]
  409808:	ldr	x23, [sp, #48]
  40980c:	ldp	x29, x30, [sp], #80
  409810:	ret
  409814:	adrp	x4, 40d000 <_fini+0x91c>
  409818:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40981c:	adrp	x2, 40d000 <_fini+0x91c>
  409820:	add	x4, x4, #0xe60
  409824:	add	x1, x1, #0xec8
  409828:	add	x2, x2, #0xaf3
  40982c:	mov	w3, #0xd0                  	// #208
  409830:	mov	w0, #0x0                   	// #0
  409834:	bl	4045c0 <log_assert_failed_realm@plt>
  409838:	adrp	x4, 40d000 <_fini+0x91c>
  40983c:	adrp	x1, 40d000 <_fini+0x91c>
  409840:	adrp	x2, 40d000 <_fini+0x91c>
  409844:	add	x4, x4, #0xe60
  409848:	add	x1, x1, #0xb10
  40984c:	add	x2, x2, #0xaf3
  409850:	mov	w3, #0xd1                  	// #209
  409854:	mov	w0, #0x0                   	// #0
  409858:	bl	4045c0 <log_assert_failed_realm@plt>
  40985c:	bl	404880 <__stack_chk_fail@plt>

0000000000409860 <method_set_image_limit>:
  409860:	mov	x3, x0
  409864:	mov	x0, x1
  409868:	mov	x1, x3
  40986c:	adrp	x3, 40b000 <bus_image_common_get_metadata+0x130>
  409870:	add	x3, x3, #0x918
  409874:	b	409780 <redirect_method_to_image>

0000000000409878 <method_mark_image_read_only>:
  409878:	mov	x3, x0
  40987c:	mov	x0, x1
  409880:	mov	x1, x3
  409884:	adrp	x3, 40b000 <bus_image_common_get_metadata+0x130>
  409888:	add	x3, x3, #0x788
  40988c:	b	409780 <redirect_method_to_image>

0000000000409890 <method_remove_image>:
  409890:	mov	x3, x0
  409894:	mov	x0, x1
  409898:	mov	x1, x3
  40989c:	adrp	x3, 40b000 <bus_image_common_get_metadata+0x130>
  4098a0:	add	x3, x3, #0x470
  4098a4:	b	409780 <redirect_method_to_image>

00000000004098a8 <method_attach_image>:
  4098a8:	mov	x3, x0
  4098ac:	mov	x0, x1
  4098b0:	mov	x1, x3
  4098b4:	adrp	x3, 40b000 <bus_image_common_get_metadata+0x130>
  4098b8:	add	x3, x3, #0x1d0
  4098bc:	b	409780 <redirect_method_to_image>

00000000004098c0 <method_get_image_metadata>:
  4098c0:	mov	x3, x0
  4098c4:	mov	x0, x1
  4098c8:	mov	x1, x3
  4098cc:	adrp	x3, 40a000 <property_get_profiles+0x40>
  4098d0:	add	x3, x3, #0xed0
  4098d4:	b	409780 <redirect_method_to_image>

00000000004098d8 <method_get_image_os_release>:
  4098d8:	mov	x3, x0
  4098dc:	mov	x0, x1
  4098e0:	mov	x1, x3
  4098e4:	adrp	x3, 40a000 <property_get_profiles+0x40>
  4098e8:	add	x3, x3, #0xda8
  4098ec:	b	409780 <redirect_method_to_image>

00000000004098f0 <method_set_pool_limit>:
  4098f0:	stp	x29, x30, [sp, #-64]!
  4098f4:	mov	x29, sp
  4098f8:	stp	x19, x20, [sp, #16]
  4098fc:	adrp	x19, 420000 <__FRAME_END__+0xfb68>
  409900:	add	x19, x19, #0x738
  409904:	ldr	x3, [x19]
  409908:	str	x3, [sp, #56]
  40990c:	mov	x3, #0x0                   	// #0
  409910:	stp	x21, x22, [sp, #32]
  409914:	cbz	x0, 409a04 <method_set_pool_limit+0x114>
  409918:	mov	x22, x1
  40991c:	mov	x21, x2
  409920:	adrp	x1, 40d000 <_fini+0x91c>
  409924:	mov	x20, x0
  409928:	add	x2, sp, #0x30
  40992c:	add	x1, x1, #0xca0
  409930:	bl	4045d0 <sd_bus_message_read@plt>
  409934:	tbnz	w0, #31, 4099c8 <method_set_pool_limit+0xd8>
  409938:	ldr	x0, [sp, #48]
  40993c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  409940:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
  409944:	add	x0, x0, x2
  409948:	cmp	x0, x1
  40994c:	b.ls	4099e8 <method_set_pool_limit+0xf8>  // b.plast
  409950:	add	x6, x22, #0x10
  409954:	mov	x7, x21
  409958:	mov	x0, x20
  40995c:	adrp	x2, 40d000 <_fini+0x91c>
  409960:	mov	w5, #0xffffffff            	// #-1
  409964:	add	x2, x2, #0xb30
  409968:	mov	w4, #0x0                   	// #0
  40996c:	mov	x3, #0x0                   	// #0
  409970:	mov	w1, #0x15                  	// #21
  409974:	bl	404d60 <bus_verify_polkit_async@plt>
  409978:	cmp	w0, #0x0
  40997c:	b.lt	4099c8 <method_set_pool_limit+0xd8>  // b.tstop
  409980:	mov	w0, #0x1                   	// #1
  409984:	b.eq	4099c8 <method_set_pool_limit+0xd8>  // b.none
  409988:	ldr	x2, [sp, #48]
  40998c:	adrp	x22, 40d000 <_fini+0x91c>
  409990:	add	x22, x22, #0xb58
  409994:	mov	x1, #0x0                   	// #0
  409998:	mov	x0, x22
  40999c:	bl	4048f0 <btrfs_qgroup_set_limit@plt>
  4099a0:	ldr	x2, [sp, #48]
  4099a4:	mov	x0, x22
  4099a8:	mov	x1, #0x0                   	// #0
  4099ac:	bl	404bd0 <btrfs_subvol_set_subtree_quota_limit@plt>
  4099b0:	cmn	w0, #0x19
  4099b4:	b.eq	409a28 <method_set_pool_limit+0x138>  // b.none
  4099b8:	tbnz	w0, #31, 409a44 <method_set_pool_limit+0x154>
  4099bc:	mov	x0, x20
  4099c0:	mov	x1, #0x0                   	// #0
  4099c4:	bl	4042a0 <sd_bus_reply_method_return@plt>
  4099c8:	ldr	x2, [sp, #56]
  4099cc:	ldr	x1, [x19]
  4099d0:	eor	x1, x2, x1
  4099d4:	cbnz	x1, 409a5c <method_set_pool_limit+0x16c>
  4099d8:	ldp	x19, x20, [sp, #16]
  4099dc:	ldp	x21, x22, [sp, #32]
  4099e0:	ldp	x29, x30, [sp], #64
  4099e4:	ret
  4099e8:	mov	x0, x21
  4099ec:	adrp	x2, 40d000 <_fini+0x91c>
  4099f0:	adrp	x1, 40d000 <_fini+0x91c>
  4099f4:	add	x2, x2, #0xb18
  4099f8:	add	x1, x1, #0x30
  4099fc:	bl	404860 <sd_bus_error_setf@plt>
  409a00:	b	4099c8 <method_set_pool_limit+0xd8>
  409a04:	adrp	x4, 40d000 <_fini+0x91c>
  409a08:	adrp	x1, 40d000 <_fini+0x91c>
  409a0c:	adrp	x2, 40d000 <_fini+0x91c>
  409a10:	add	x4, x4, #0xeb0
  409a14:	add	x1, x1, #0xb10
  409a18:	add	x2, x2, #0xaf3
  409a1c:	mov	w3, #0x140                 	// #320
  409a20:	mov	w0, #0x0                   	// #0
  409a24:	bl	4045c0 <log_assert_failed_realm@plt>
  409a28:	mov	x0, x21
  409a2c:	adrp	x2, 40d000 <_fini+0x91c>
  409a30:	adrp	x1, 40d000 <_fini+0x91c>
  409a34:	add	x2, x2, #0xb70
  409a38:	add	x1, x1, #0xb98
  409a3c:	bl	404860 <sd_bus_error_setf@plt>
  409a40:	b	4099c8 <method_set_pool_limit+0xd8>
  409a44:	mov	w1, w0
  409a48:	adrp	x2, 40d000 <_fini+0x91c>
  409a4c:	mov	x0, x21
  409a50:	add	x2, x2, #0xbc0
  409a54:	bl	4043a0 <sd_bus_error_set_errnof@plt>
  409a58:	b	4099c8 <method_set_pool_limit+0xd8>
  409a5c:	bl	404880 <__stack_chk_fail@plt>

0000000000409a60 <method_list_images>:
  409a60:	sub	sp, sp, #0xc0
  409a64:	stp	x29, x30, [sp, #16]
  409a68:	add	x29, sp, #0x10
  409a6c:	stp	x21, x22, [sp, #48]
  409a70:	adrp	x21, 420000 <__FRAME_END__+0xfb68>
  409a74:	add	x21, x21, #0x738
  409a78:	ldr	x3, [x21]
  409a7c:	str	x3, [sp, #184]
  409a80:	mov	x3, #0x0                   	// #0
  409a84:	stp	x19, x20, [sp, #32]
  409a88:	stp	x23, x24, [sp, #64]
  409a8c:	str	xzr, [sp, #120]
  409a90:	cbz	x0, 409ccc <method_list_images+0x26c>
  409a94:	mov	x19, x1
  409a98:	cbz	x1, 409cf8 <method_list_images+0x298>
  409a9c:	mov	x22, x0
  409aa0:	mov	x23, x2
  409aa4:	adrp	x0, 420000 <__FRAME_END__+0xfb68>
  409aa8:	add	x0, x0, #0x780
  409aac:	bl	404870 <internal_hashmap_new@plt>
  409ab0:	mov	x20, x0
  409ab4:	cbz	x0, 409d44 <method_list_images+0x2e4>
  409ab8:	mov	x0, x19
  409abc:	mov	x2, x23
  409ac0:	mov	x1, x20
  409ac4:	bl	40bfb0 <manager_image_cache_discover>
  409ac8:	mov	w19, w0
  409acc:	tbnz	w0, #31, 409c10 <method_list_images+0x1b0>
  409ad0:	add	x1, sp, #0x78
  409ad4:	mov	x0, x22
  409ad8:	bl	404410 <sd_bus_message_new_method_return@plt>
  409adc:	mov	w19, w0
  409ae0:	tbnz	w0, #31, 409c10 <method_list_images+0x1b0>
  409ae4:	ldr	x0, [sp, #120]
  409ae8:	adrp	x24, 40d000 <_fini+0x91c>
  409aec:	add	x24, x24, #0xbe8
  409af0:	mov	w1, #0x61                  	// #97
  409af4:	mov	x2, x24
  409af8:	bl	404440 <sd_bus_message_open_container@plt>
  409afc:	mov	w19, w0
  409b00:	tbnz	w0, #31, 409c10 <method_list_images+0x1b0>
  409b04:	stp	x25, x26, [sp, #80]
  409b08:	adrp	x25, 40d000 <_fini+0x91c>
  409b0c:	add	x25, x25, #0xbf8
  409b10:	mov	w0, #0xfffffffe            	// #-2
  409b14:	str	x27, [sp, #96]
  409b18:	str	w0, [sp, #144]
  409b1c:	str	xzr, [sp, #152]
  409b20:	add	x2, sp, #0x80
  409b24:	add	x1, sp, #0x90
  409b28:	mov	x0, x20
  409b2c:	mov	x3, #0x0                   	// #0
  409b30:	bl	404b40 <internal_hashmap_iterate@plt>
  409b34:	tst	w0, #0xff
  409b38:	b.eq	409bf4 <method_list_images+0x194>  // b.none
  409b3c:	ldr	x0, [sp, #128]
  409b40:	mov	w2, #0xffffffff            	// #-1
  409b44:	add	x1, sp, #0x88
  409b48:	str	w2, [sp, #116]
  409b4c:	str	xzr, [sp, #136]
  409b50:	stp	xzr, xzr, [sp, #160]
  409b54:	str	wzr, [sp, #176]
  409b58:	bl	40a960 <bus_image_path>
  409b5c:	mov	w19, w0
  409b60:	tbnz	w0, #31, 409cac <method_list_images+0x24c>
  409b64:	mov	x0, x22
  409b68:	bl	404560 <sd_bus_message_get_bus@plt>
  409b6c:	ldr	x1, [sp, #128]
  409b70:	add	x4, sp, #0xa0
  409b74:	add	x3, sp, #0x74
  409b78:	mov	x26, x4
  409b7c:	mov	w2, #0x0                   	// #0
  409b80:	ldr	x1, [x1, #16]
  409b84:	bl	409600 <portable_get_state>
  409b88:	mov	w23, w0
  409b8c:	tbnz	w0, #31, 409c58 <method_list_images+0x1f8>
  409b90:	ldr	x19, [sp, #128]
  409b94:	ldr	w0, [x19, #4]
  409b98:	bl	4044c0 <image_type_to_string@plt>
  409b9c:	mov	x23, x0
  409ba0:	ldr	w0, [sp, #116]
  409ba4:	bl	409760 <portable_state_to_string>
  409ba8:	mov	x9, x0
  409bac:	ldp	x5, x6, [x19, #32]
  409bb0:	mov	x3, x23
  409bb4:	ldrb	w4, [x19, #24]
  409bb8:	mov	x1, x24
  409bbc:	ldr	x2, [x19, #8]
  409bc0:	ldr	x7, [x19, #48]
  409bc4:	ldr	x8, [sp, #136]
  409bc8:	stp	x9, x8, [sp]
  409bcc:	ldr	x27, [sp, #120]
  409bd0:	mov	x0, x27
  409bd4:	bl	404500 <sd_bus_message_append@plt>
  409bd8:	mov	w19, w0
  409bdc:	tbnz	w0, #31, 409cb0 <method_list_images+0x250>
  409be0:	ldr	x0, [sp, #136]
  409be4:	bl	404c10 <free@plt>
  409be8:	add	x0, sp, #0xa0
  409bec:	bl	404950 <sd_bus_error_free@plt>
  409bf0:	b	409b20 <method_list_images+0xc0>
  409bf4:	ldr	x0, [sp, #120]
  409bf8:	bl	404da0 <sd_bus_message_close_container@plt>
  409bfc:	mov	w19, w0
  409c00:	tbz	w0, #31, 409d24 <method_list_images+0x2c4>
  409c04:	ldp	x25, x26, [sp, #80]
  409c08:	ldr	x27, [sp, #96]
  409c0c:	nop
  409c10:	mov	x0, x20
  409c14:	mov	x2, #0x0                   	// #0
  409c18:	mov	x1, #0x0                   	// #0
  409c1c:	bl	404280 <internal_hashmap_free@plt>
  409c20:	ldr	x0, [sp, #120]
  409c24:	cbz	x0, 409c2c <method_list_images+0x1cc>
  409c28:	bl	404340 <sd_bus_message_unref@plt>
  409c2c:	ldr	x1, [sp, #184]
  409c30:	ldr	x0, [x21]
  409c34:	eor	x0, x1, x0
  409c38:	cbnz	x0, 409d4c <method_list_images+0x2ec>
  409c3c:	mov	w0, w19
  409c40:	ldp	x29, x30, [sp, #16]
  409c44:	ldp	x19, x20, [sp, #32]
  409c48:	ldp	x21, x22, [sp, #48]
  409c4c:	ldp	x23, x24, [sp, #64]
  409c50:	add	sp, sp, #0xc0
  409c54:	ret
  409c58:	mov	w0, #0x0                   	// #0
  409c5c:	bl	404d90 <log_get_max_level_realm@plt>
  409c60:	cmp	w0, #0x6
  409c64:	ldr	x19, [sp, #128]
  409c68:	b.le	409b94 <method_list_images+0x134>
  409c6c:	ldr	x19, [x19, #16]
  409c70:	mov	w1, w23
  409c74:	add	x0, sp, #0xa0
  409c78:	bl	404210 <bus_error_message@plt>
  409c7c:	mov	x6, x19
  409c80:	mov	x7, x0
  409c84:	mov	w1, w23
  409c88:	mov	x5, x25
  409c8c:	adrp	x4, 40d000 <_fini+0x91c>
  409c90:	adrp	x2, 40d000 <_fini+0x91c>
  409c94:	add	x4, x4, #0xee0
  409c98:	add	x2, x2, #0xaf3
  409c9c:	mov	w3, #0xb0                  	// #176
  409ca0:	mov	w0, #0x7                   	// #7
  409ca4:	bl	4049d0 <log_internal_realm@plt>
  409ca8:	b	409b90 <method_list_images+0x130>
  409cac:	add	x26, sp, #0xa0
  409cb0:	ldr	x0, [sp, #136]
  409cb4:	bl	404c10 <free@plt>
  409cb8:	mov	x0, x26
  409cbc:	bl	404950 <sd_bus_error_free@plt>
  409cc0:	ldp	x25, x26, [sp, #80]
  409cc4:	ldr	x27, [sp, #96]
  409cc8:	b	409c10 <method_list_images+0x1b0>
  409ccc:	adrp	x4, 40d000 <_fini+0x91c>
  409cd0:	adrp	x1, 40d000 <_fini+0x91c>
  409cd4:	adrp	x2, 40d000 <_fini+0x91c>
  409cd8:	add	x4, x4, #0xe48
  409cdc:	add	x1, x1, #0xb10
  409ce0:	add	x2, x2, #0xaf3
  409ce4:	mov	w3, #0x8d                  	// #141
  409ce8:	mov	w0, #0x0                   	// #0
  409cec:	stp	x25, x26, [sp, #80]
  409cf0:	str	x27, [sp, #96]
  409cf4:	bl	4045c0 <log_assert_failed_realm@plt>
  409cf8:	adrp	x4, 40d000 <_fini+0x91c>
  409cfc:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  409d00:	adrp	x2, 40d000 <_fini+0x91c>
  409d04:	add	x4, x4, #0xe48
  409d08:	add	x1, x1, #0xec8
  409d0c:	add	x2, x2, #0xaf3
  409d10:	mov	w3, #0x8e                  	// #142
  409d14:	mov	w0, #0x0                   	// #0
  409d18:	stp	x25, x26, [sp, #80]
  409d1c:	str	x27, [sp, #96]
  409d20:	bl	4045c0 <log_assert_failed_realm@plt>
  409d24:	ldr	x1, [sp, #120]
  409d28:	mov	x2, #0x0                   	// #0
  409d2c:	mov	x0, #0x0                   	// #0
  409d30:	bl	404890 <sd_bus_send@plt>
  409d34:	mov	w19, w0
  409d38:	ldp	x25, x26, [sp, #80]
  409d3c:	ldr	x27, [sp, #96]
  409d40:	b	409c10 <method_list_images+0x1b0>
  409d44:	mov	w19, #0xfffffff4            	// #-12
  409d48:	b	409c20 <method_list_images+0x1c0>
  409d4c:	stp	x25, x26, [sp, #80]
  409d50:	str	x27, [sp, #96]
  409d54:	bl	404880 <__stack_chk_fail@plt>

0000000000409d58 <method_get_image>:
  409d58:	stp	x29, x30, [sp, #-96]!
  409d5c:	mov	x29, sp
  409d60:	stp	x19, x20, [sp, #16]
  409d64:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  409d68:	add	x20, x20, #0x738
  409d6c:	ldr	x3, [x20]
  409d70:	str	x3, [sp, #88]
  409d74:	mov	x3, #0x0                   	// #0
  409d78:	stp	x21, x22, [sp, #32]
  409d7c:	str	x23, [sp, #48]
  409d80:	str	xzr, [sp, #64]
  409d84:	cbz	x0, 409e38 <method_get_image+0xe0>
  409d88:	mov	x22, x1
  409d8c:	cbz	x1, 409e5c <method_get_image+0x104>
  409d90:	mov	x23, x2
  409d94:	mov	x21, x0
  409d98:	add	x2, sp, #0x48
  409d9c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  409da0:	add	x1, x1, #0x8a8
  409da4:	bl	4045d0 <sd_bus_message_read@plt>
  409da8:	mov	w19, w0
  409dac:	tbnz	w0, #31, 409e08 <method_get_image+0xb0>
  409db0:	ldr	x2, [sp, #72]
  409db4:	mov	x7, x23
  409db8:	mov	x0, x22
  409dbc:	add	x6, sp, #0x50
  409dc0:	mov	x1, x21
  409dc4:	mov	x5, #0x0                   	// #0
  409dc8:	mov	w4, #0x0                   	// #0
  409dcc:	mov	x3, #0x0                   	// #0
  409dd0:	bl	40a9e0 <bus_image_acquire>
  409dd4:	mov	w19, w0
  409dd8:	tbnz	w0, #31, 409e08 <method_get_image+0xb0>
  409ddc:	ldr	x0, [sp, #80]
  409de0:	add	x1, sp, #0x40
  409de4:	bl	40a960 <bus_image_path>
  409de8:	mov	w19, w0
  409dec:	tbnz	w0, #31, 409e08 <method_get_image+0xb0>
  409df0:	ldr	x2, [sp, #64]
  409df4:	mov	x0, x21
  409df8:	adrp	x1, 40d000 <_fini+0x91c>
  409dfc:	add	x1, x1, #0xc28
  409e00:	bl	4042a0 <sd_bus_reply_method_return@plt>
  409e04:	mov	w19, w0
  409e08:	ldr	x0, [sp, #64]
  409e0c:	bl	404c10 <free@plt>
  409e10:	ldr	x1, [sp, #88]
  409e14:	ldr	x0, [x20]
  409e18:	eor	x0, x1, x0
  409e1c:	cbnz	x0, 409e80 <method_get_image+0x128>
  409e20:	mov	w0, w19
  409e24:	ldp	x19, x20, [sp, #16]
  409e28:	ldp	x21, x22, [sp, #32]
  409e2c:	ldr	x23, [sp, #48]
  409e30:	ldp	x29, x30, [sp], #96
  409e34:	ret
  409e38:	adrp	x4, 40d000 <_fini+0x91c>
  409e3c:	adrp	x1, 40d000 <_fini+0x91c>
  409e40:	adrp	x2, 40d000 <_fini+0x91c>
  409e44:	add	x4, x4, #0xe30
  409e48:	add	x1, x1, #0xb10
  409e4c:	add	x2, x2, #0xaf3
  409e50:	mov	w3, #0x73                  	// #115
  409e54:	mov	w0, #0x0                   	// #0
  409e58:	bl	4045c0 <log_assert_failed_realm@plt>
  409e5c:	adrp	x4, 40d000 <_fini+0x91c>
  409e60:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  409e64:	adrp	x2, 40d000 <_fini+0x91c>
  409e68:	add	x4, x4, #0xe30
  409e6c:	add	x1, x1, #0xec8
  409e70:	add	x2, x2, #0xaf3
  409e74:	mov	w3, #0x74                  	// #116
  409e78:	mov	w0, #0x0                   	// #0
  409e7c:	bl	4045c0 <log_assert_failed_realm@plt>
  409e80:	bl	404880 <__stack_chk_fail@plt>
  409e84:	nop

0000000000409e88 <method_get_image_state>:
  409e88:	stp	x29, x30, [sp, #-80]!
  409e8c:	mov	x29, sp
  409e90:	stp	x19, x20, [sp, #16]
  409e94:	adrp	x19, 420000 <__FRAME_END__+0xfb68>
  409e98:	add	x19, x19, #0x738
  409e9c:	ldr	x1, [x19]
  409ea0:	str	x1, [sp, #72]
  409ea4:	mov	x1, #0x0                   	// #0
  409ea8:	stp	x21, x22, [sp, #32]
  409eac:	cbz	x0, 409f28 <method_get_image_state+0xa0>
  409eb0:	adrp	x21, 40c000 <manager_image_cache_discover+0x50>
  409eb4:	add	x21, x21, #0x8a8
  409eb8:	mov	x22, x2
  409ebc:	mov	x20, x0
  409ec0:	mov	x1, x21
  409ec4:	add	x2, sp, #0x40
  409ec8:	bl	4045d0 <sd_bus_message_read@plt>
  409ecc:	tbnz	w0, #31, 409f08 <method_get_image_state+0x80>
  409ed0:	mov	x0, x20
  409ed4:	bl	404560 <sd_bus_message_get_bus@plt>
  409ed8:	ldr	x1, [sp, #64]
  409edc:	mov	x4, x22
  409ee0:	add	x3, sp, #0x3c
  409ee4:	mov	w2, #0x0                   	// #0
  409ee8:	bl	409600 <portable_get_state>
  409eec:	tbnz	w0, #31, 409f08 <method_get_image_state+0x80>
  409ef0:	ldr	w0, [sp, #60]
  409ef4:	bl	409760 <portable_state_to_string>
  409ef8:	mov	x2, x0
  409efc:	mov	x1, x21
  409f00:	mov	x0, x20
  409f04:	bl	4042a0 <sd_bus_reply_method_return@plt>
  409f08:	ldr	x2, [sp, #72]
  409f0c:	ldr	x1, [x19]
  409f10:	eor	x1, x2, x1
  409f14:	cbnz	x1, 409f4c <method_get_image_state+0xc4>
  409f18:	ldp	x19, x20, [sp, #16]
  409f1c:	ldp	x21, x22, [sp, #32]
  409f20:	ldp	x29, x30, [sp], #80
  409f24:	ret
  409f28:	adrp	x4, 40d000 <_fini+0x91c>
  409f2c:	adrp	x1, 40d000 <_fini+0x91c>
  409f30:	adrp	x2, 40d000 <_fini+0x91c>
  409f34:	add	x4, x4, #0xe80
  409f38:	add	x1, x1, #0xb10
  409f3c:	add	x2, x2, #0xaf3
  409f40:	mov	w3, #0xe8                  	// #232
  409f44:	mov	w0, #0x0                   	// #0
  409f48:	bl	4045c0 <log_assert_failed_realm@plt>
  409f4c:	bl	404880 <__stack_chk_fail@plt>

0000000000409f50 <property_get_pool_path>:
  409f50:	stp	x29, x30, [sp, #-16]!
  409f54:	mov	x29, sp
  409f58:	cbz	x0, 409f7c <property_get_pool_path+0x2c>
  409f5c:	cbz	x4, 409f9c <property_get_pool_path+0x4c>
  409f60:	ldp	x29, x30, [sp], #16
  409f64:	mov	x0, x4
  409f68:	adrp	x2, 40d000 <_fini+0x91c>
  409f6c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  409f70:	add	x2, x2, #0xb58
  409f74:	add	x1, x1, #0x8a8
  409f78:	b	404500 <sd_bus_message_append@plt>
  409f7c:	adrp	x4, 40d000 <_fini+0x91c>
  409f80:	adrp	x1, 40d000 <_fini+0x91c>
  409f84:	adrp	x2, 40d000 <_fini+0x91c>
  409f88:	add	x4, x4, #0xdd0
  409f8c:	add	x1, x1, #0xc30
  409f90:	add	x2, x2, #0xaf3
  409f94:	mov	w3, #0x1c                  	// #28
  409f98:	bl	4045c0 <log_assert_failed_realm@plt>
  409f9c:	adrp	x4, 40d000 <_fini+0x91c>
  409fa0:	adrp	x1, 40d000 <_fini+0x91c>
  409fa4:	adrp	x2, 40d000 <_fini+0x91c>
  409fa8:	add	x4, x4, #0xdd0
  409fac:	add	x1, x1, #0xc38
  409fb0:	add	x2, x2, #0xaf3
  409fb4:	mov	w3, #0x1d                  	// #29
  409fb8:	mov	w0, #0x0                   	// #0
  409fbc:	bl	4045c0 <log_assert_failed_realm@plt>

0000000000409fc0 <property_get_profiles>:
  409fc0:	stp	x29, x30, [sp, #-64]!
  409fc4:	mov	x29, sp
  409fc8:	stp	x19, x20, [sp, #16]
  409fcc:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  409fd0:	add	x20, x20, #0x738
  409fd4:	ldr	x1, [x20]
  409fd8:	str	x1, [sp, #56]
  409fdc:	mov	x1, #0x0                   	// #0
  409fe0:	str	x21, [sp, #32]
  409fe4:	str	xzr, [sp, #48]
  409fe8:	cbz	x0, 40a044 <property_get_profiles+0x84>
  409fec:	mov	x21, x4
  409ff0:	cbz	x4, 40a064 <property_get_profiles+0xa4>
  409ff4:	add	x0, sp, #0x30
  409ff8:	bl	4096f8 <portable_get_profiles>
  409ffc:	mov	w19, w0
  40a000:	tbnz	w0, #31, 40a014 <property_get_profiles+0x54>
  40a004:	ldr	x1, [sp, #48]
  40a008:	mov	x0, x21
  40a00c:	bl	404bb0 <sd_bus_message_append_strv@plt>
  40a010:	mov	w19, w0
  40a014:	ldr	x0, [sp, #48]
  40a018:	cbz	x0, 40a020 <property_get_profiles+0x60>
  40a01c:	bl	404780 <strv_free@plt>
  40a020:	ldr	x1, [sp, #56]
  40a024:	ldr	x0, [x20]
  40a028:	eor	x0, x1, x0
  40a02c:	cbnz	x0, 40a088 <property_get_profiles+0xc8>
  40a030:	mov	w0, w19
  40a034:	ldp	x19, x20, [sp, #16]
  40a038:	ldr	x21, [sp, #32]
  40a03c:	ldp	x29, x30, [sp], #64
  40a040:	ret
  40a044:	adrp	x4, 40d000 <_fini+0x91c>
  40a048:	adrp	x1, 40d000 <_fini+0x91c>
  40a04c:	adrp	x2, 40d000 <_fini+0x91c>
  40a050:	add	x4, x4, #0xe18
  40a054:	add	x1, x1, #0xc30
  40a058:	add	x2, x2, #0xaf3
  40a05c:	mov	w3, #0x62                  	// #98
  40a060:	bl	4045c0 <log_assert_failed_realm@plt>
  40a064:	adrp	x4, 40d000 <_fini+0x91c>
  40a068:	adrp	x1, 40d000 <_fini+0x91c>
  40a06c:	adrp	x2, 40d000 <_fini+0x91c>
  40a070:	add	x4, x4, #0xe18
  40a074:	add	x1, x1, #0xc38
  40a078:	add	x2, x2, #0xaf3
  40a07c:	mov	w3, #0x63                  	// #99
  40a080:	mov	w0, #0x0                   	// #0
  40a084:	bl	4045c0 <log_assert_failed_realm@plt>
  40a088:	bl	404880 <__stack_chk_fail@plt>
  40a08c:	nop

000000000040a090 <property_get_pool_limit>:
  40a090:	stp	x29, x30, [sp, #-96]!
  40a094:	mov	x29, sp
  40a098:	stp	x19, x20, [sp, #16]
  40a09c:	adrp	x19, 420000 <__FRAME_END__+0xfb68>
  40a0a0:	add	x19, x19, #0x738
  40a0a4:	ldr	x1, [x19]
  40a0a8:	str	x1, [sp, #88]
  40a0ac:	mov	x1, #0x0                   	// #0
  40a0b0:	stp	x21, x22, [sp, #32]
  40a0b4:	cbz	x0, 40a140 <property_get_pool_limit+0xb0>
  40a0b8:	mov	x20, x4
  40a0bc:	cbz	x4, 40a160 <property_get_pool_limit+0xd0>
  40a0c0:	mov	w1, #0x4000                	// #16384
  40a0c4:	adrp	x0, 40d000 <_fini+0x91c>
  40a0c8:	movk	w1, #0x8, lsl #16
  40a0cc:	add	x0, x0, #0xb58
  40a0d0:	mov	x22, #0xffffffffffffffff    	// #-1
  40a0d4:	bl	404d00 <open64@plt>
  40a0d8:	mov	w21, w0
  40a0dc:	tbz	w0, #31, 40a124 <property_get_pool_limit+0x94>
  40a0e0:	mov	x2, x22
  40a0e4:	adrp	x1, 40d000 <_fini+0x91c>
  40a0e8:	add	x1, x1, #0xca0
  40a0ec:	mov	x0, x20
  40a0f0:	bl	404500 <sd_bus_message_append@plt>
  40a0f4:	mov	w20, w0
  40a0f8:	mov	w0, w21
  40a0fc:	bl	404530 <safe_close@plt>
  40a100:	ldr	x1, [sp, #88]
  40a104:	ldr	x0, [x19]
  40a108:	eor	x0, x1, x0
  40a10c:	cbnz	x0, 40a184 <property_get_pool_limit+0xf4>
  40a110:	mov	w0, w20
  40a114:	ldp	x19, x20, [sp, #16]
  40a118:	ldp	x21, x22, [sp, #32]
  40a11c:	ldp	x29, x30, [sp], #96
  40a120:	ret
  40a124:	mov	x1, #0x0                   	// #0
  40a128:	add	x2, sp, #0x38
  40a12c:	bl	404ba0 <btrfs_subvol_get_subtree_quota_fd@plt>
  40a130:	cmp	w0, #0x0
  40a134:	ldr	x1, [sp, #72]
  40a138:	csel	x22, x1, x22, ge  // ge = tcont
  40a13c:	b	40a0e0 <property_get_pool_limit+0x50>
  40a140:	adrp	x4, 40d000 <_fini+0x91c>
  40a144:	adrp	x1, 40d000 <_fini+0x91c>
  40a148:	adrp	x2, 40d000 <_fini+0x91c>
  40a14c:	add	x4, x4, #0xe00
  40a150:	add	x1, x1, #0xc30
  40a154:	add	x2, x2, #0xaf3
  40a158:	mov	w3, #0x48                  	// #72
  40a15c:	bl	4045c0 <log_assert_failed_realm@plt>
  40a160:	adrp	x4, 40d000 <_fini+0x91c>
  40a164:	adrp	x1, 40d000 <_fini+0x91c>
  40a168:	adrp	x2, 40d000 <_fini+0x91c>
  40a16c:	add	x4, x4, #0xe00
  40a170:	add	x1, x1, #0xc38
  40a174:	add	x2, x2, #0xaf3
  40a178:	mov	w3, #0x49                  	// #73
  40a17c:	mov	w0, #0x0                   	// #0
  40a180:	bl	4045c0 <log_assert_failed_realm@plt>
  40a184:	bl	404880 <__stack_chk_fail@plt>

000000000040a188 <property_get_pool_usage>:
  40a188:	stp	x29, x30, [sp, #-96]!
  40a18c:	mov	x29, sp
  40a190:	stp	x19, x20, [sp, #16]
  40a194:	adrp	x19, 420000 <__FRAME_END__+0xfb68>
  40a198:	add	x19, x19, #0x738
  40a19c:	ldr	x1, [x19]
  40a1a0:	str	x1, [sp, #88]
  40a1a4:	mov	x1, #0x0                   	// #0
  40a1a8:	stp	x21, x22, [sp, #32]
  40a1ac:	cbz	x0, 40a238 <property_get_pool_usage+0xb0>
  40a1b0:	mov	x20, x4
  40a1b4:	cbz	x4, 40a258 <property_get_pool_usage+0xd0>
  40a1b8:	mov	w1, #0x4000                	// #16384
  40a1bc:	adrp	x0, 40d000 <_fini+0x91c>
  40a1c0:	movk	w1, #0x8, lsl #16
  40a1c4:	add	x0, x0, #0xb58
  40a1c8:	mov	x22, #0xffffffffffffffff    	// #-1
  40a1cc:	bl	404d00 <open64@plt>
  40a1d0:	mov	w21, w0
  40a1d4:	tbz	w0, #31, 40a21c <property_get_pool_usage+0x94>
  40a1d8:	mov	x2, x22
  40a1dc:	adrp	x1, 40d000 <_fini+0x91c>
  40a1e0:	add	x1, x1, #0xca0
  40a1e4:	mov	x0, x20
  40a1e8:	bl	404500 <sd_bus_message_append@plt>
  40a1ec:	mov	w20, w0
  40a1f0:	mov	w0, w21
  40a1f4:	bl	404530 <safe_close@plt>
  40a1f8:	ldr	x1, [sp, #88]
  40a1fc:	ldr	x0, [x19]
  40a200:	eor	x0, x1, x0
  40a204:	cbnz	x0, 40a27c <property_get_pool_usage+0xf4>
  40a208:	mov	w0, w20
  40a20c:	ldp	x19, x20, [sp, #16]
  40a210:	ldp	x21, x22, [sp, #32]
  40a214:	ldp	x29, x30, [sp], #96
  40a218:	ret
  40a21c:	mov	x1, #0x0                   	// #0
  40a220:	add	x2, sp, #0x38
  40a224:	bl	404ba0 <btrfs_subvol_get_subtree_quota_fd@plt>
  40a228:	cmp	w0, #0x0
  40a22c:	ldr	x1, [sp, #56]
  40a230:	csel	x22, x1, x22, ge  // ge = tcont
  40a234:	b	40a1d8 <property_get_pool_usage+0x50>
  40a238:	adrp	x4, 40d000 <_fini+0x91c>
  40a23c:	adrp	x1, 40d000 <_fini+0x91c>
  40a240:	adrp	x2, 40d000 <_fini+0x91c>
  40a244:	add	x4, x4, #0xde8
  40a248:	add	x1, x1, #0xc30
  40a24c:	add	x2, x2, #0xaf3
  40a250:	mov	w3, #0x2e                  	// #46
  40a254:	bl	4045c0 <log_assert_failed_realm@plt>
  40a258:	adrp	x4, 40d000 <_fini+0x91c>
  40a25c:	adrp	x1, 40d000 <_fini+0x91c>
  40a260:	adrp	x2, 40d000 <_fini+0x91c>
  40a264:	add	x4, x4, #0xde8
  40a268:	add	x1, x1, #0xc38
  40a26c:	add	x2, x2, #0xaf3
  40a270:	mov	w3, #0x2f                  	// #47
  40a274:	mov	w0, #0x0                   	// #0
  40a278:	bl	4045c0 <log_assert_failed_realm@plt>
  40a27c:	bl	404880 <__stack_chk_fail@plt>

000000000040a280 <reply_portable_changes>:
  40a280:	stp	x29, x30, [sp, #-80]!
  40a284:	mov	x29, sp
  40a288:	stp	x21, x22, [sp, #32]
  40a28c:	adrp	x21, 420000 <__FRAME_END__+0xfb68>
  40a290:	add	x21, x21, #0x738
  40a294:	ldr	x3, [x21]
  40a298:	str	x3, [sp, #72]
  40a29c:	mov	x3, #0x0                   	// #0
  40a2a0:	stp	x19, x20, [sp, #16]
  40a2a4:	stp	x23, x24, [sp, #48]
  40a2a8:	str	xzr, [sp, #64]
  40a2ac:	cbz	x0, 40a39c <reply_portable_changes+0x11c>
  40a2b0:	cmp	x1, #0x0
  40a2b4:	mov	x19, x1
  40a2b8:	mov	x23, x2
  40a2bc:	ccmp	x2, #0x0, #0x4, eq  // eq = none
  40a2c0:	b.ne	40a3bc <reply_portable_changes+0x13c>  // b.any
  40a2c4:	add	x1, sp, #0x40
  40a2c8:	bl	404410 <sd_bus_message_new_method_return@plt>
  40a2cc:	mov	w20, w0
  40a2d0:	tbnz	w0, #31, 40a338 <reply_portable_changes+0xb8>
  40a2d4:	ldr	x0, [sp, #64]
  40a2d8:	adrp	x24, 40d000 <_fini+0x91c>
  40a2dc:	add	x24, x24, #0xc40
  40a2e0:	mov	w1, #0x61                  	// #97
  40a2e4:	mov	x2, x24
  40a2e8:	bl	404440 <sd_bus_message_open_container@plt>
  40a2ec:	mov	w20, w0
  40a2f0:	tbnz	w0, #31, 40a338 <reply_portable_changes+0xb8>
  40a2f4:	cbz	x23, 40a36c <reply_portable_changes+0xec>
  40a2f8:	mov	x22, #0x0                   	// #0
  40a2fc:	b	40a310 <reply_portable_changes+0x90>
  40a300:	add	x22, x22, #0x1
  40a304:	add	x19, x19, #0x18
  40a308:	cmp	x23, x22
  40a30c:	b.eq	40a36c <reply_portable_changes+0xec>  // b.none
  40a310:	ldr	w0, [x19]
  40a314:	bl	409740 <portable_change_type_to_string>
  40a318:	mov	x2, x0
  40a31c:	ldp	x3, x4, [x19, #8]
  40a320:	mov	x1, x24
  40a324:	ldr	x20, [sp, #64]
  40a328:	mov	x0, x20
  40a32c:	bl	404500 <sd_bus_message_append@plt>
  40a330:	mov	w20, w0
  40a334:	tbz	w0, #31, 40a300 <reply_portable_changes+0x80>
  40a338:	ldr	x0, [sp, #64]
  40a33c:	cbz	x0, 40a344 <reply_portable_changes+0xc4>
  40a340:	bl	404340 <sd_bus_message_unref@plt>
  40a344:	ldr	x1, [sp, #72]
  40a348:	ldr	x0, [x21]
  40a34c:	eor	x0, x1, x0
  40a350:	cbnz	x0, 40a3e0 <reply_portable_changes+0x160>
  40a354:	mov	w0, w20
  40a358:	ldp	x19, x20, [sp, #16]
  40a35c:	ldp	x21, x22, [sp, #32]
  40a360:	ldp	x23, x24, [sp, #48]
  40a364:	ldp	x29, x30, [sp], #80
  40a368:	ret
  40a36c:	ldr	x0, [sp, #64]
  40a370:	bl	404da0 <sd_bus_message_close_container@plt>
  40a374:	mov	w20, w0
  40a378:	tbnz	w0, #31, 40a338 <reply_portable_changes+0xb8>
  40a37c:	ldr	x1, [sp, #64]
  40a380:	mov	x2, #0x0                   	// #0
  40a384:	mov	x0, #0x0                   	// #0
  40a388:	bl	404890 <sd_bus_send@plt>
  40a38c:	mov	w20, w0
  40a390:	ldr	x0, [sp, #64]
  40a394:	cbnz	x0, 40a340 <reply_portable_changes+0xc0>
  40a398:	b	40a344 <reply_portable_changes+0xc4>
  40a39c:	adrp	x4, 40d000 <_fini+0x91c>
  40a3a0:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40a3a4:	adrp	x2, 40d000 <_fini+0x91c>
  40a3a8:	add	x4, x4, #0xec8
  40a3ac:	add	x1, x1, #0xec8
  40a3b0:	add	x2, x2, #0xaf3
  40a3b4:	mov	w3, #0x17a                 	// #378
  40a3b8:	bl	4045c0 <log_assert_failed_realm@plt>
  40a3bc:	adrp	x4, 40d000 <_fini+0x91c>
  40a3c0:	adrp	x1, 40d000 <_fini+0x91c>
  40a3c4:	adrp	x2, 40d000 <_fini+0x91c>
  40a3c8:	add	x4, x4, #0xec8
  40a3cc:	add	x1, x1, #0x348
  40a3d0:	add	x2, x2, #0xaf3
  40a3d4:	mov	w3, #0x17b                 	// #379
  40a3d8:	mov	w0, #0x0                   	// #0
  40a3dc:	bl	4045c0 <log_assert_failed_realm@plt>
  40a3e0:	bl	404880 <__stack_chk_fail@plt>
  40a3e4:	nop

000000000040a3e8 <method_detach_image>:
  40a3e8:	stp	x29, x30, [sp, #-112]!
  40a3ec:	mov	x29, sp
  40a3f0:	stp	x19, x20, [sp, #16]
  40a3f4:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  40a3f8:	add	x20, x20, #0x738
  40a3fc:	ldr	x3, [x20]
  40a400:	str	x3, [sp, #104]
  40a404:	mov	x3, #0x0                   	// #0
  40a408:	stp	x21, x22, [sp, #32]
  40a40c:	str	x23, [sp, #48]
  40a410:	stp	xzr, xzr, [sp, #80]
  40a414:	cbz	x0, 40a4f8 <method_detach_image+0x110>
  40a418:	mov	x22, x1
  40a41c:	cbz	x1, 40a51c <method_detach_image+0x134>
  40a420:	mov	x23, x2
  40a424:	mov	x21, x0
  40a428:	add	x3, sp, #0x4c
  40a42c:	add	x2, sp, #0x60
  40a430:	adrp	x1, 40d000 <_fini+0x91c>
  40a434:	add	x1, x1, #0xc48
  40a438:	bl	4045d0 <sd_bus_message_read@plt>
  40a43c:	mov	w19, w0
  40a440:	tbnz	w0, #31, 40a480 <method_detach_image+0x98>
  40a444:	add	x6, x22, #0x10
  40a448:	mov	x7, x23
  40a44c:	mov	x0, x21
  40a450:	adrp	x2, 40d000 <_fini+0x91c>
  40a454:	mov	w5, #0xffffffff            	// #-1
  40a458:	add	x2, x2, #0xc50
  40a45c:	mov	w4, #0x0                   	// #0
  40a460:	mov	x3, #0x0                   	// #0
  40a464:	mov	w1, #0x15                  	// #21
  40a468:	bl	404d60 <bus_verify_polkit_async@plt>
  40a46c:	mov	w19, w0
  40a470:	cmp	w0, #0x0
  40a474:	b.lt	40a480 <method_detach_image+0x98>  // b.tstop
  40a478:	mov	w19, #0x1                   	// #1
  40a47c:	b.ne	40a4a8 <method_detach_image+0xc0>  // b.any
  40a480:	ldr	x1, [sp, #104]
  40a484:	ldr	x0, [x20]
  40a488:	eor	x0, x1, x0
  40a48c:	cbnz	x0, 40a540 <method_detach_image+0x158>
  40a490:	mov	w0, w19
  40a494:	ldp	x19, x20, [sp, #16]
  40a498:	ldp	x21, x22, [sp, #32]
  40a49c:	ldr	x23, [sp, #48]
  40a4a0:	ldp	x29, x30, [sp], #112
  40a4a4:	ret
  40a4a8:	mov	x0, x21
  40a4ac:	bl	404560 <sd_bus_message_get_bus@plt>
  40a4b0:	ldr	w2, [sp, #76]
  40a4b4:	mov	x5, x23
  40a4b8:	ldr	x1, [sp, #96]
  40a4bc:	cmp	w2, #0x0
  40a4c0:	cset	w2, ne  // ne = any
  40a4c4:	add	x4, sp, #0x58
  40a4c8:	add	x3, sp, #0x50
  40a4cc:	lsl	w2, w2, #2
  40a4d0:	bl	408b28 <portable_detach>
  40a4d4:	mov	w19, w0
  40a4d8:	tbnz	w0, #31, 40a4ec <method_detach_image+0x104>
  40a4dc:	ldp	x1, x2, [sp, #80]
  40a4e0:	mov	x0, x21
  40a4e4:	bl	40a280 <reply_portable_changes>
  40a4e8:	mov	w19, w0
  40a4ec:	ldp	x0, x1, [sp, #80]
  40a4f0:	bl	4086b8 <portable_changes_free>
  40a4f4:	b	40a480 <method_detach_image+0x98>
  40a4f8:	adrp	x4, 40d000 <_fini+0x91c>
  40a4fc:	adrp	x1, 40d000 <_fini+0x91c>
  40a500:	adrp	x2, 40d000 <_fini+0x91c>
  40a504:	add	x4, x4, #0xe98
  40a508:	add	x1, x1, #0xb10
  40a50c:	add	x2, x2, #0xaf3
  40a510:	mov	w3, #0x105                 	// #261
  40a514:	mov	w0, #0x0                   	// #0
  40a518:	bl	4045c0 <log_assert_failed_realm@plt>
  40a51c:	adrp	x4, 40d000 <_fini+0x91c>
  40a520:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40a524:	adrp	x2, 40d000 <_fini+0x91c>
  40a528:	add	x4, x4, #0xe98
  40a52c:	add	x1, x1, #0xec8
  40a530:	add	x2, x2, #0xaf3
  40a534:	mov	w3, #0x106                 	// #262
  40a538:	mov	w0, #0x0                   	// #0
  40a53c:	bl	4045c0 <log_assert_failed_realm@plt>
  40a540:	bl	404880 <__stack_chk_fail@plt>
  40a544:	nop

000000000040a548 <append_fd>:
  40a548:	stp	x29, x30, [sp, #-80]!
  40a54c:	mov	x29, sp
  40a550:	stp	x19, x20, [sp, #16]
  40a554:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  40a558:	add	x20, x20, #0x738
  40a55c:	ldr	x2, [x20]
  40a560:	str	x2, [sp, #72]
  40a564:	mov	x2, #0x0                   	// #0
  40a568:	stp	x21, x22, [sp, #32]
  40a56c:	str	xzr, [sp, #56]
  40a570:	cbz	x0, 40a618 <append_fd+0xd0>
  40a574:	mov	x19, x1
  40a578:	cbz	x1, 40a63c <append_fd+0xf4>
  40a57c:	mov	x21, x0
  40a580:	ldr	w0, [x1]
  40a584:	tbnz	w0, #31, 40a660 <append_fd+0x118>
  40a588:	adrp	x1, 40f000 <__func__.9810+0xa0>
  40a58c:	add	x1, x1, #0x78
  40a590:	bl	404320 <fdopen@plt>
  40a594:	mov	x22, x0
  40a598:	cbz	x0, 40a608 <append_fd+0xc0>
  40a59c:	mov	w1, #0xffffffff            	// #-1
  40a5a0:	str	w1, [x19]
  40a5a4:	add	x4, sp, #0x40
  40a5a8:	add	x3, sp, #0x38
  40a5ac:	mov	w2, #0x0                   	// #0
  40a5b0:	mov	x1, #0x0                   	// #0
  40a5b4:	bl	404b80 <read_full_stream_full@plt>
  40a5b8:	mov	w19, w0
  40a5bc:	tbnz	w0, #31, 40a5d4 <append_fd+0x8c>
  40a5c0:	ldp	x2, x3, [sp, #56]
  40a5c4:	mov	x0, x21
  40a5c8:	mov	w1, #0x79                  	// #121
  40a5cc:	bl	404460 <sd_bus_message_append_array@plt>
  40a5d0:	mov	w19, w0
  40a5d4:	ldr	x0, [sp, #56]
  40a5d8:	bl	404c10 <free@plt>
  40a5dc:	mov	x0, x22
  40a5e0:	bl	4041e0 <safe_fclose@plt>
  40a5e4:	ldr	x1, [sp, #72]
  40a5e8:	ldr	x0, [x20]
  40a5ec:	eor	x0, x1, x0
  40a5f0:	cbnz	x0, 40a684 <append_fd+0x13c>
  40a5f4:	mov	w0, w19
  40a5f8:	ldp	x19, x20, [sp, #16]
  40a5fc:	ldp	x21, x22, [sp, #32]
  40a600:	ldp	x29, x30, [sp], #80
  40a604:	ret
  40a608:	bl	404770 <__errno_location@plt>
  40a60c:	ldr	w19, [x0]
  40a610:	neg	w19, w19
  40a614:	b	40a5d4 <append_fd+0x8c>
  40a618:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a61c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40a620:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a624:	add	x4, x4, #0x7c8
  40a628:	add	x1, x1, #0xec8
  40a62c:	add	x2, x2, #0x2b3
  40a630:	mov	w3, #0x4d                  	// #77
  40a634:	mov	w0, #0x0                   	// #0
  40a638:	bl	4045c0 <log_assert_failed_realm@plt>
  40a63c:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a640:	adrp	x1, 40e000 <manager_vtable+0x108>
  40a644:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a648:	add	x4, x4, #0x7c8
  40a64c:	add	x1, x1, #0x608
  40a650:	add	x2, x2, #0x2b3
  40a654:	mov	w3, #0x4e                  	// #78
  40a658:	mov	w0, #0x0                   	// #0
  40a65c:	bl	4045c0 <log_assert_failed_realm@plt>
  40a660:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a664:	adrp	x1, 40e000 <manager_vtable+0x108>
  40a668:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a66c:	add	x4, x4, #0x7c8
  40a670:	add	x1, x1, #0x2d8
  40a674:	add	x2, x2, #0x2b3
  40a678:	mov	w3, #0x4f                  	// #79
  40a67c:	mov	w0, #0x0                   	// #0
  40a680:	bl	4045c0 <log_assert_failed_realm@plt>
  40a684:	bl	404880 <__stack_chk_fail@plt>

000000000040a688 <bus_image_method_detach>:
  40a688:	stp	x29, x30, [sp, #-96]!
  40a68c:	mov	x29, sp
  40a690:	stp	x19, x20, [sp, #16]
  40a694:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  40a698:	add	x20, x20, #0x738
  40a69c:	stp	x21, x22, [sp, #32]
  40a6a0:	mov	x22, x1
  40a6a4:	ldr	x1, [x20]
  40a6a8:	str	x1, [sp, #88]
  40a6ac:	mov	x1, #0x0                   	// #0
  40a6b0:	stp	x23, x24, [sp, #48]
  40a6b4:	stp	xzr, xzr, [sp, #72]
  40a6b8:	ldr	x23, [x22, #128]
  40a6bc:	cbz	x0, 40a798 <bus_image_method_detach+0x110>
  40a6c0:	cbz	x23, 40a7bc <bus_image_method_detach+0x134>
  40a6c4:	mov	x24, x2
  40a6c8:	mov	x21, x0
  40a6cc:	add	x2, sp, #0x44
  40a6d0:	adrp	x1, 40e000 <manager_vtable+0x108>
  40a6d4:	add	x1, x1, #0x2e8
  40a6d8:	bl	4045d0 <sd_bus_message_read@plt>
  40a6dc:	mov	w19, w0
  40a6e0:	tbnz	w0, #31, 40a720 <bus_image_method_detach+0x98>
  40a6e4:	add	x6, x23, #0x10
  40a6e8:	mov	x7, x24
  40a6ec:	mov	x0, x21
  40a6f0:	adrp	x2, 40d000 <_fini+0x91c>
  40a6f4:	mov	w5, #0xffffffff            	// #-1
  40a6f8:	add	x2, x2, #0xc50
  40a6fc:	mov	w4, #0x0                   	// #0
  40a700:	mov	x3, #0x0                   	// #0
  40a704:	mov	w1, #0x15                  	// #21
  40a708:	bl	404d60 <bus_verify_polkit_async@plt>
  40a70c:	mov	w19, w0
  40a710:	cmp	w0, #0x0
  40a714:	b.lt	40a720 <bus_image_method_detach+0x98>  // b.tstop
  40a718:	mov	w19, #0x1                   	// #1
  40a71c:	b.ne	40a748 <bus_image_method_detach+0xc0>  // b.any
  40a720:	ldr	x1, [sp, #88]
  40a724:	ldr	x0, [x20]
  40a728:	eor	x0, x1, x0
  40a72c:	cbnz	x0, 40a7e0 <bus_image_method_detach+0x158>
  40a730:	mov	w0, w19
  40a734:	ldp	x19, x20, [sp, #16]
  40a738:	ldp	x21, x22, [sp, #32]
  40a73c:	ldp	x23, x24, [sp, #48]
  40a740:	ldp	x29, x30, [sp], #96
  40a744:	ret
  40a748:	mov	x0, x21
  40a74c:	bl	404560 <sd_bus_message_get_bus@plt>
  40a750:	ldr	w2, [sp, #68]
  40a754:	mov	x5, x24
  40a758:	ldr	x1, [x22, #16]
  40a75c:	cmp	w2, #0x0
  40a760:	cset	w2, ne  // ne = any
  40a764:	add	x4, sp, #0x50
  40a768:	add	x3, sp, #0x48
  40a76c:	lsl	w2, w2, #2
  40a770:	bl	408b28 <portable_detach>
  40a774:	mov	w19, w0
  40a778:	tbnz	w0, #31, 40a78c <bus_image_method_detach+0x104>
  40a77c:	ldp	x1, x2, [sp, #72]
  40a780:	mov	x0, x21
  40a784:	bl	40a280 <reply_portable_changes>
  40a788:	mov	w19, w0
  40a78c:	ldp	x0, x1, [sp, #72]
  40a790:	bl	4086b8 <portable_changes_free>
  40a794:	b	40a720 <bus_image_method_detach+0x98>
  40a798:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a79c:	adrp	x1, 40d000 <_fini+0x91c>
  40a7a0:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a7a4:	add	x4, x4, #0x830
  40a7a8:	add	x1, x1, #0xb10
  40a7ac:	add	x2, x2, #0x2b3
  40a7b0:	mov	w3, #0x130                 	// #304
  40a7b4:	mov	w0, #0x0                   	// #0
  40a7b8:	bl	4045c0 <log_assert_failed_realm@plt>
  40a7bc:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a7c0:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40a7c4:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a7c8:	add	x4, x4, #0x830
  40a7cc:	add	x1, x1, #0xec8
  40a7d0:	add	x2, x2, #0x2b3
  40a7d4:	mov	w3, #0x132                 	// #306
  40a7d8:	mov	w0, #0x0                   	// #0
  40a7dc:	bl	4045c0 <log_assert_failed_realm@plt>
  40a7e0:	bl	404880 <__stack_chk_fail@plt>
  40a7e4:	nop

000000000040a7e8 <bus_image_method_get_state>:
  40a7e8:	stp	x29, x30, [sp, #-64]!
  40a7ec:	mov	x29, sp
  40a7f0:	stp	x19, x20, [sp, #16]
  40a7f4:	adrp	x19, 420000 <__FRAME_END__+0xfb68>
  40a7f8:	add	x19, x19, #0x738
  40a7fc:	ldr	x3, [x19]
  40a800:	str	x3, [sp, #56]
  40a804:	mov	x3, #0x0                   	// #0
  40a808:	stp	x21, x22, [sp, #32]
  40a80c:	cbz	x0, 40a878 <bus_image_method_get_state+0x90>
  40a810:	mov	x20, x1
  40a814:	cbz	x1, 40a89c <bus_image_method_get_state+0xb4>
  40a818:	mov	x22, x2
  40a81c:	mov	x21, x0
  40a820:	bl	404560 <sd_bus_message_get_bus@plt>
  40a824:	ldr	x1, [x20, #16]
  40a828:	mov	x4, x22
  40a82c:	add	x3, sp, #0x34
  40a830:	mov	w2, #0x0                   	// #0
  40a834:	bl	409600 <portable_get_state>
  40a838:	tbnz	w0, #31, 40a858 <bus_image_method_get_state+0x70>
  40a83c:	ldr	w0, [sp, #52]
  40a840:	bl	409760 <portable_state_to_string>
  40a844:	mov	x2, x0
  40a848:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40a84c:	mov	x0, x21
  40a850:	add	x1, x1, #0x8a8
  40a854:	bl	4042a0 <sd_bus_reply_method_return@plt>
  40a858:	ldr	x2, [sp, #56]
  40a85c:	ldr	x1, [x19]
  40a860:	eor	x1, x2, x1
  40a864:	cbnz	x1, 40a8c0 <bus_image_method_get_state+0xd8>
  40a868:	ldp	x19, x20, [sp, #16]
  40a86c:	ldp	x21, x22, [sp, #32]
  40a870:	ldp	x29, x30, [sp], #64
  40a874:	ret
  40a878:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a87c:	adrp	x1, 40d000 <_fini+0x91c>
  40a880:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a884:	add	x4, x4, #0x7f8
  40a888:	add	x1, x1, #0xb10
  40a88c:	add	x2, x2, #0x2b3
  40a890:	mov	w3, #0xca                  	// #202
  40a894:	mov	w0, #0x0                   	// #0
  40a898:	bl	4045c0 <log_assert_failed_realm@plt>
  40a89c:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a8a0:	adrp	x1, 40e000 <manager_vtable+0x108>
  40a8a4:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a8a8:	add	x4, x4, #0x7f8
  40a8ac:	add	x1, x1, #0x330
  40a8b0:	add	x2, x2, #0x2b3
  40a8b4:	mov	w3, #0xcb                  	// #203
  40a8b8:	mov	w0, #0x0                   	// #0
  40a8bc:	bl	4045c0 <log_assert_failed_realm@plt>
  40a8c0:	bl	404880 <__stack_chk_fail@plt>
  40a8c4:	nop

000000000040a8c8 <property_get_type>:
  40a8c8:	stp	x29, x30, [sp, #-32]!
  40a8cc:	mov	x29, sp
  40a8d0:	str	x19, [sp, #16]
  40a8d4:	cbz	x0, 40a908 <property_get_type+0x40>
  40a8d8:	mov	x19, x4
  40a8dc:	cbz	x4, 40a928 <property_get_type+0x60>
  40a8e0:	cbz	x5, 40a94c <property_get_type+0x84>
  40a8e4:	ldr	w0, [x5]
  40a8e8:	bl	4044c0 <image_type_to_string@plt>
  40a8ec:	mov	x2, x0
  40a8f0:	mov	x0, x19
  40a8f4:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40a8f8:	ldr	x19, [sp, #16]
  40a8fc:	add	x1, x1, #0x8a8
  40a900:	ldp	x29, x30, [sp], #32
  40a904:	b	404500 <sd_bus_message_append@plt>
  40a908:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a90c:	adrp	x1, 40d000 <_fini+0x91c>
  40a910:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a914:	add	x4, x4, #0x790
  40a918:	add	x1, x1, #0xc30
  40a91c:	add	x2, x2, #0x2b3
  40a920:	mov	w3, #0x1a                  	// #26
  40a924:	bl	4045c0 <log_assert_failed_realm@plt>
  40a928:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a92c:	adrp	x1, 40d000 <_fini+0x91c>
  40a930:	add	x4, x4, #0x790
  40a934:	add	x1, x1, #0xc38
  40a938:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a93c:	mov	w3, #0x1a                  	// #26
  40a940:	add	x2, x2, #0x2b3
  40a944:	mov	w0, #0x0                   	// #0
  40a948:	bl	4045c0 <log_assert_failed_realm@plt>
  40a94c:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a950:	adrp	x1, 40e000 <manager_vtable+0x108>
  40a954:	add	x4, x4, #0x790
  40a958:	add	x1, x1, #0x2f0
  40a95c:	b	40a938 <property_get_type+0x70>

000000000040a960 <bus_image_path>:
  40a960:	stp	x29, x30, [sp, #-16]!
  40a964:	mov	x29, sp
  40a968:	cbz	x0, 40a990 <bus_image_path+0x30>
  40a96c:	mov	x2, x1
  40a970:	cbz	x1, 40a9b0 <bus_image_path+0x50>
  40a974:	ldrb	w1, [x0, #120]
  40a978:	tbz	w1, #1, 40a9d4 <bus_image_path+0x74>
  40a97c:	ldp	x29, x30, [sp], #16
  40a980:	ldr	x1, [x0, #8]
  40a984:	adrp	x0, 40e000 <manager_vtable+0x108>
  40a988:	add	x0, x0, #0x2f8
  40a98c:	b	404a30 <sd_bus_path_encode@plt>
  40a990:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a994:	adrp	x1, 40e000 <manager_vtable+0x108>
  40a998:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a99c:	add	x4, x4, #0x8a0
  40a9a0:	add	x1, x1, #0x330
  40a9a4:	add	x2, x2, #0x2b3
  40a9a8:	mov	w3, #0x21e                 	// #542
  40a9ac:	bl	4045c0 <log_assert_failed_realm@plt>
  40a9b0:	adrp	x4, 40e000 <manager_vtable+0x108>
  40a9b4:	adrp	x1, 40d000 <_fini+0x91c>
  40a9b8:	adrp	x2, 40e000 <manager_vtable+0x108>
  40a9bc:	add	x4, x4, #0x8a0
  40a9c0:	add	x1, x1, #0x670
  40a9c4:	add	x2, x2, #0x2b3
  40a9c8:	mov	w3, #0x21f                 	// #543
  40a9cc:	mov	w0, #0x0                   	// #0
  40a9d0:	bl	4045c0 <log_assert_failed_realm@plt>
  40a9d4:	mov	w0, #0xffffffea            	// #-22
  40a9d8:	ldp	x29, x30, [sp], #16
  40a9dc:	ret

000000000040a9e0 <bus_image_acquire>:
  40a9e0:	stp	x29, x30, [sp, #-112]!
  40a9e4:	mov	x29, sp
  40a9e8:	stp	x23, x24, [sp, #48]
  40a9ec:	adrp	x23, 420000 <__FRAME_END__+0xfb68>
  40a9f0:	add	x23, x23, #0x738
  40a9f4:	ldr	x8, [x23]
  40a9f8:	str	x8, [sp, #104]
  40a9fc:	mov	x8, #0x0                   	// #0
  40aa00:	stp	x19, x20, [sp, #16]
  40aa04:	stp	x21, x22, [sp, #32]
  40aa08:	stp	x25, x26, [sp, #64]
  40aa0c:	stp	x27, x28, [sp, #80]
  40aa10:	str	xzr, [sp, #96]
  40aa14:	cbz	x0, 40ab30 <bus_image_acquire+0x150>
  40aa18:	mov	x26, x1
  40aa1c:	cbz	x1, 40ab54 <bus_image_acquire+0x174>
  40aa20:	mov	x24, x0
  40aa24:	mov	x25, x2
  40aa28:	mov	x20, x3
  40aa2c:	orr	x0, x2, x3
  40aa30:	cbz	x0, 40ab78 <bus_image_acquire+0x198>
  40aa34:	mov	w19, w4
  40aa38:	tbnz	w4, #31, 40ab98 <bus_image_acquire+0x1b8>
  40aa3c:	cmp	w4, #0x2
  40aa40:	b.gt	40abbc <bus_image_acquire+0x1dc>
  40aa44:	cmp	x5, #0x0
  40aa48:	mov	x21, x5
  40aa4c:	ccmp	w4, #0x0, #0x4, eq  // eq = none
  40aa50:	b.ne	40abe0 <bus_image_acquire+0x200>  // b.any
  40aa54:	mov	x27, x6
  40aa58:	cbz	x6, 40aaec <bus_image_acquire+0x10c>
  40aa5c:	mov	x22, x7
  40aa60:	cmp	w4, #0x2
  40aa64:	b.eq	40aab0 <bus_image_acquire+0xd0>  // b.none
  40aa68:	cbz	x20, 40ab10 <bus_image_acquire+0x130>
  40aa6c:	ldr	x0, [sp, #96]
  40aa70:	mov	w28, #0x1                   	// #1
  40aa74:	str	x20, [x27]
  40aa78:	cbz	x0, 40aa80 <bus_image_acquire+0xa0>
  40aa7c:	bl	4041d0 <image_unref@plt>
  40aa80:	ldr	x1, [sp, #104]
  40aa84:	ldr	x0, [x23]
  40aa88:	eor	x0, x1, x0
  40aa8c:	cbnz	x0, 40ad7c <bus_image_acquire+0x39c>
  40aa90:	mov	w0, w28
  40aa94:	ldp	x19, x20, [sp, #16]
  40aa98:	ldp	x21, x22, [sp, #32]
  40aa9c:	ldp	x23, x24, [sp, #48]
  40aaa0:	ldp	x25, x26, [sp, #64]
  40aaa4:	ldp	x27, x28, [sp, #80]
  40aaa8:	ldp	x29, x30, [sp], #112
  40aaac:	ret
  40aab0:	add	x6, x24, #0x10
  40aab4:	mov	x2, x21
  40aab8:	mov	x0, x26
  40aabc:	mov	w5, #0xffffffff            	// #-1
  40aac0:	mov	w4, #0x0                   	// #0
  40aac4:	mov	x3, #0x0                   	// #0
  40aac8:	mov	w1, #0x15                  	// #21
  40aacc:	bl	404d60 <bus_verify_polkit_async@plt>
  40aad0:	mov	w28, w0
  40aad4:	cmp	w0, #0x0
  40aad8:	b.lt	40aae4 <bus_image_acquire+0x104>  // b.tstop
  40aadc:	b.ne	40aa68 <bus_image_acquire+0x88>  // b.any
  40aae0:	str	xzr, [x27]
  40aae4:	ldr	x0, [sp, #96]
  40aae8:	b	40aa78 <bus_image_acquire+0x98>
  40aaec:	adrp	x4, 40e000 <manager_vtable+0x108>
  40aaf0:	adrp	x1, 40d000 <_fini+0x91c>
  40aaf4:	adrp	x2, 40e000 <manager_vtable+0x108>
  40aaf8:	add	x4, x4, #0x8b0
  40aafc:	add	x1, x1, #0x670
  40ab00:	add	x2, x2, #0x2b3
  40ab04:	mov	w3, #0x23b                 	// #571
  40ab08:	mov	w0, #0x0                   	// #0
  40ab0c:	bl	4045c0 <log_assert_failed_realm@plt>
  40ab10:	mov	x1, x25
  40ab14:	mov	x0, x24
  40ab18:	bl	40be80 <manager_image_cache_get>
  40ab1c:	cbz	x0, 40ac04 <bus_image_acquire+0x224>
  40ab20:	mov	w28, #0x1                   	// #1
  40ab24:	str	x0, [x27]
  40ab28:	ldr	x0, [sp, #96]
  40ab2c:	b	40aa78 <bus_image_acquire+0x98>
  40ab30:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ab34:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40ab38:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ab3c:	add	x4, x4, #0x8b0
  40ab40:	add	x1, x1, #0xec8
  40ab44:	add	x2, x2, #0x2b3
  40ab48:	mov	w3, #0x235                 	// #565
  40ab4c:	mov	w0, #0x0                   	// #0
  40ab50:	bl	4045c0 <log_assert_failed_realm@plt>
  40ab54:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ab58:	adrp	x1, 40d000 <_fini+0x91c>
  40ab5c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ab60:	add	x4, x4, #0x8b0
  40ab64:	add	x1, x1, #0xb10
  40ab68:	add	x2, x2, #0x2b3
  40ab6c:	mov	w3, #0x236                 	// #566
  40ab70:	mov	w0, #0x0                   	// #0
  40ab74:	bl	4045c0 <log_assert_failed_realm@plt>
  40ab78:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ab7c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40ab80:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ab84:	add	x4, x4, #0x8b0
  40ab88:	add	x1, x1, #0x320
  40ab8c:	add	x2, x2, #0x2b3
  40ab90:	mov	w3, #0x237                 	// #567
  40ab94:	bl	4045c0 <log_assert_failed_realm@plt>
  40ab98:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ab9c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40aba0:	adrp	x2, 40e000 <manager_vtable+0x108>
  40aba4:	add	x4, x4, #0x8b0
  40aba8:	add	x1, x1, #0x338
  40abac:	add	x2, x2, #0x2b3
  40abb0:	mov	w3, #0x238                 	// #568
  40abb4:	mov	w0, #0x0                   	// #0
  40abb8:	bl	4045c0 <log_assert_failed_realm@plt>
  40abbc:	adrp	x4, 40e000 <manager_vtable+0x108>
  40abc0:	adrp	x1, 40e000 <manager_vtable+0x108>
  40abc4:	adrp	x2, 40e000 <manager_vtable+0x108>
  40abc8:	add	x4, x4, #0x8b0
  40abcc:	add	x1, x1, #0x348
  40abd0:	add	x2, x2, #0x2b3
  40abd4:	mov	w3, #0x239                 	// #569
  40abd8:	mov	w0, #0x0                   	// #0
  40abdc:	bl	4045c0 <log_assert_failed_realm@plt>
  40abe0:	adrp	x4, 40e000 <manager_vtable+0x108>
  40abe4:	adrp	x1, 40e000 <manager_vtable+0x108>
  40abe8:	adrp	x2, 40e000 <manager_vtable+0x108>
  40abec:	add	x4, x4, #0x8b0
  40abf0:	add	x1, x1, #0x370
  40abf4:	add	x2, x2, #0x2b3
  40abf8:	mov	w3, #0x23a                 	// #570
  40abfc:	mov	w0, #0x0                   	// #0
  40ac00:	bl	4045c0 <log_assert_failed_realm@plt>
  40ac04:	mov	x0, x25
  40ac08:	bl	4047d0 <image_name_is_valid@plt>
  40ac0c:	tst	w0, #0xff
  40ac10:	b.ne	40ac84 <bus_image_acquire+0x2a4>  // b.any
  40ac14:	cbz	w19, 40acc8 <bus_image_acquire+0x2e8>
  40ac18:	mov	x0, x25
  40ac1c:	bl	404670 <path_is_absolute@plt>
  40ac20:	tst	w0, #0xff
  40ac24:	b.eq	40ad2c <bus_image_acquire+0x34c>  // b.none
  40ac28:	mov	x0, x25
  40ac2c:	bl	4046c0 <path_is_normalized@plt>
  40ac30:	tst	w0, #0xff
  40ac34:	b.eq	40ad54 <bus_image_acquire+0x374>  // b.none
  40ac38:	cmp	w19, #0x1
  40ac3c:	b.eq	40acf0 <bus_image_acquire+0x310>  // b.none
  40ac40:	add	x1, sp, #0x60
  40ac44:	mov	x0, x25
  40ac48:	bl	404c70 <image_from_path@plt>
  40ac4c:	mov	w28, w0
  40ac50:	cmn	w28, #0x7c
  40ac54:	b.eq	40ad80 <bus_image_acquire+0x3a0>  // b.none
  40ac58:	ldr	x0, [sp, #96]
  40ac5c:	tbnz	w28, #31, 40aa78 <bus_image_acquire+0x98>
  40ac60:	mov	x1, x0
  40ac64:	mov	x0, x24
  40ac68:	bl	40beb8 <manager_image_cache_add>
  40ac6c:	mov	w28, w0
  40ac70:	ldr	x0, [sp, #96]
  40ac74:	tbnz	w28, #31, 40aa78 <bus_image_acquire+0x98>
  40ac78:	mov	w28, #0x1                   	// #1
  40ac7c:	str	x0, [x27]
  40ac80:	b	40aa78 <bus_image_acquire+0x98>
  40ac84:	add	x2, sp, #0x60
  40ac88:	mov	x1, x25
  40ac8c:	mov	w0, #0x1                   	// #1
  40ac90:	bl	404290 <image_find@plt>
  40ac94:	mov	w28, w0
  40ac98:	cmn	w0, #0x2
  40ac9c:	b.ne	40ac50 <bus_image_acquire+0x270>  // b.any
  40aca0:	mov	x3, x25
  40aca4:	mov	x0, x22
  40aca8:	adrp	x2, 40e000 <manager_vtable+0x108>
  40acac:	adrp	x1, 40e000 <manager_vtable+0x108>
  40acb0:	add	x2, x2, #0x3a8
  40acb4:	add	x1, x1, #0x3c0
  40acb8:	bl	404860 <sd_bus_error_setf@plt>
  40acbc:	mov	w28, w0
  40acc0:	ldr	x0, [sp, #96]
  40acc4:	b	40aa78 <bus_image_acquire+0x98>
  40acc8:	mov	x3, x25
  40accc:	mov	x0, x22
  40acd0:	adrp	x2, 40e000 <manager_vtable+0x108>
  40acd4:	adrp	x1, 40d000 <_fini+0x91c>
  40acd8:	add	x2, x2, #0x3e8
  40acdc:	add	x1, x1, #0x30
  40ace0:	bl	404860 <sd_bus_error_setf@plt>
  40ace4:	mov	w28, w0
  40ace8:	ldr	x0, [sp, #96]
  40acec:	b	40aa78 <bus_image_acquire+0x98>
  40acf0:	mov	x2, x21
  40acf4:	mov	x0, x26
  40acf8:	mov	x7, x22
  40acfc:	add	x6, x24, #0x10
  40ad00:	mov	w5, #0xffffffff            	// #-1
  40ad04:	mov	w4, #0x0                   	// #0
  40ad08:	mov	x3, #0x0                   	// #0
  40ad0c:	mov	w1, #0x15                  	// #21
  40ad10:	bl	404d60 <bus_verify_polkit_async@plt>
  40ad14:	mov	w28, w0
  40ad18:	cmp	w0, #0x0
  40ad1c:	b.lt	40aae4 <bus_image_acquire+0x104>  // b.tstop
  40ad20:	b.ne	40ac40 <bus_image_acquire+0x260>  // b.any
  40ad24:	str	xzr, [x27]
  40ad28:	b	40aae4 <bus_image_acquire+0x104>
  40ad2c:	mov	x3, x25
  40ad30:	mov	x0, x22
  40ad34:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ad38:	adrp	x1, 40d000 <_fini+0x91c>
  40ad3c:	add	x2, x2, #0x418
  40ad40:	add	x1, x1, #0x30
  40ad44:	bl	404860 <sd_bus_error_setf@plt>
  40ad48:	mov	w28, w0
  40ad4c:	ldr	x0, [sp, #96]
  40ad50:	b	40aa78 <bus_image_acquire+0x98>
  40ad54:	mov	x3, x25
  40ad58:	mov	x0, x22
  40ad5c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ad60:	adrp	x1, 40d000 <_fini+0x91c>
  40ad64:	add	x2, x2, #0x450
  40ad68:	add	x1, x1, #0x30
  40ad6c:	bl	404860 <sd_bus_error_setf@plt>
  40ad70:	mov	w28, w0
  40ad74:	ldr	x0, [sp, #96]
  40ad78:	b	40aa78 <bus_image_acquire+0x98>
  40ad7c:	bl	404880 <__stack_chk_fail@plt>
  40ad80:	mov	x3, x25
  40ad84:	mov	x0, x22
  40ad88:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ad8c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40ad90:	add	x2, x2, #0x478
  40ad94:	add	x1, x1, #0x510
  40ad98:	bl	404860 <sd_bus_error_setf@plt>
  40ad9c:	ldr	x0, [sp, #96]
  40ada0:	b	40aa78 <bus_image_acquire+0x98>
  40ada4:	nop

000000000040ada8 <bus_image_common_get_os_release>:
  40ada8:	stp	x29, x30, [sp, #-48]!
  40adac:	mov	x29, sp
  40adb0:	stp	x19, x20, [sp, #16]
  40adb4:	mov	x19, x1
  40adb8:	orr	x1, x3, x2
  40adbc:	str	x3, [sp, #40]
  40adc0:	cbz	x1, 40ae38 <bus_image_common_get_os_release+0x90>
  40adc4:	cbz	x19, 40ae5c <bus_image_common_get_os_release+0xb4>
  40adc8:	mov	x20, x4
  40adcc:	cbz	x0, 40ae2c <bus_image_common_get_os_release+0x84>
  40add0:	mov	x7, x20
  40add4:	add	x6, sp, #0x28
  40add8:	mov	x1, x19
  40addc:	adrp	x5, 40e000 <manager_vtable+0x108>
  40ade0:	mov	w4, #0x1                   	// #1
  40ade4:	add	x5, x5, #0x538
  40ade8:	bl	40a9e0 <bus_image_acquire>
  40adec:	cmp	w0, #0x0
  40adf0:	b.lt	40ae20 <bus_image_common_get_os_release+0x78>  // b.tstop
  40adf4:	mov	w0, #0x1                   	// #1
  40adf8:	b.eq	40ae20 <bus_image_common_get_os_release+0x78>  // b.none
  40adfc:	ldr	x0, [sp, #40]
  40ae00:	ldrb	w1, [x0, #120]
  40ae04:	tbnz	w1, #0, 40ae14 <bus_image_common_get_os_release+0x6c>
  40ae08:	bl	404cc0 <image_read_metadata@plt>
  40ae0c:	tbnz	w0, #31, 40aea0 <bus_image_common_get_os_release+0xf8>
  40ae10:	ldr	x0, [sp, #40]
  40ae14:	ldr	x1, [x0, #112]
  40ae18:	mov	x0, x19
  40ae1c:	bl	404be0 <bus_reply_pair_array@plt>
  40ae20:	ldp	x19, x20, [sp, #16]
  40ae24:	ldp	x29, x30, [sp], #48
  40ae28:	ret
  40ae2c:	cbz	x3, 40ae80 <bus_image_common_get_os_release+0xd8>
  40ae30:	ldr	x0, [x3, #128]
  40ae34:	b	40add0 <bus_image_common_get_os_release+0x28>
  40ae38:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ae3c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40ae40:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ae44:	add	x4, x4, #0x7a8
  40ae48:	add	x1, x1, #0x320
  40ae4c:	add	x2, x2, #0x2b3
  40ae50:	mov	w3, #0x25                  	// #37
  40ae54:	mov	w0, #0x0                   	// #0
  40ae58:	bl	4045c0 <log_assert_failed_realm@plt>
  40ae5c:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ae60:	adrp	x1, 40d000 <_fini+0x91c>
  40ae64:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ae68:	add	x4, x4, #0x7a8
  40ae6c:	add	x1, x1, #0xb10
  40ae70:	add	x2, x2, #0x2b3
  40ae74:	mov	w3, #0x26                  	// #38
  40ae78:	mov	w0, #0x0                   	// #0
  40ae7c:	bl	4045c0 <log_assert_failed_realm@plt>
  40ae80:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ae84:	adrp	x1, 40e000 <manager_vtable+0x108>
  40ae88:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ae8c:	add	x4, x4, #0x7a8
  40ae90:	add	x1, x1, #0x330
  40ae94:	add	x2, x2, #0x2b3
  40ae98:	mov	w3, #0x29                  	// #41
  40ae9c:	bl	4045c0 <log_assert_failed_realm@plt>
  40aea0:	mov	w1, w0
  40aea4:	adrp	x2, 40e000 <manager_vtable+0x108>
  40aea8:	mov	x0, x20
  40aeac:	add	x2, x2, #0x568
  40aeb0:	bl	4043a0 <sd_bus_error_set_errnof@plt>
  40aeb4:	b	40ae20 <bus_image_common_get_os_release+0x78>

000000000040aeb8 <bus_image_method_get_os_release>:
  40aeb8:	mov	x3, x1
  40aebc:	mov	x4, x2
  40aec0:	mov	x1, x0
  40aec4:	mov	x2, #0x0                   	// #0
  40aec8:	mov	x0, #0x0                   	// #0
  40aecc:	b	40ada8 <bus_image_common_get_os_release>

000000000040aed0 <bus_image_common_get_metadata>:
  40aed0:	stp	x29, x30, [sp, #-128]!
  40aed4:	mov	x29, sp
  40aed8:	stp	x19, x20, [sp, #16]
  40aedc:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  40aee0:	add	x20, x20, #0x738
  40aee4:	ldr	x5, [x20]
  40aee8:	str	x5, [sp, #120]
  40aeec:	mov	x5, #0x0                   	// #0
  40aef0:	stp	x21, x22, [sp, #32]
  40aef4:	mov	x22, x0
  40aef8:	stp	x23, x24, [sp, #48]
  40aefc:	orr	x0, x3, x2
  40af00:	stp	x3, xzr, [sp, #72]
  40af04:	stp	xzr, xzr, [sp, #88]
  40af08:	stp	xzr, xzr, [sp, #104]
  40af0c:	cbz	x0, 40b14c <bus_image_common_get_metadata+0x27c>
  40af10:	mov	x21, x1
  40af14:	cbz	x1, 40b16c <bus_image_common_get_metadata+0x29c>
  40af18:	mov	x23, x2
  40af1c:	mov	x24, x4
  40af20:	cbz	x22, 40b12c <bus_image_common_get_metadata+0x25c>
  40af24:	add	x1, sp, #0x70
  40af28:	mov	x0, x21
  40af2c:	bl	4041f0 <sd_bus_message_read_strv@plt>
  40af30:	mov	w19, w0
  40af34:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40af38:	ldr	x3, [sp, #72]
  40af3c:	mov	x2, x23
  40af40:	mov	x0, x22
  40af44:	mov	x7, x24
  40af48:	add	x6, sp, #0x48
  40af4c:	mov	x1, x21
  40af50:	adrp	x5, 40e000 <manager_vtable+0x108>
  40af54:	mov	w4, #0x1                   	// #1
  40af58:	add	x5, x5, #0x538
  40af5c:	bl	40a9e0 <bus_image_acquire>
  40af60:	mov	w19, w0
  40af64:	cmp	w0, #0x0
  40af68:	b.lt	40b120 <bus_image_common_get_metadata+0x250>  // b.tstop
  40af6c:	mov	w19, #0x1                   	// #1
  40af70:	ldr	x0, [sp, #112]
  40af74:	b.ne	40afdc <bus_image_common_get_metadata+0x10c>  // b.any
  40af78:	cbz	x0, 40af80 <bus_image_common_get_metadata+0xb0>
  40af7c:	bl	404780 <strv_free@plt>
  40af80:	ldr	x0, [sp, #104]
  40af84:	bl	404c10 <free@plt>
  40af88:	ldr	x0, [sp, #96]
  40af8c:	cbz	x0, 40af94 <bus_image_common_get_metadata+0xc4>
  40af90:	bl	404340 <sd_bus_message_unref@plt>
  40af94:	ldr	x0, [sp, #88]
  40af98:	cbz	x0, 40afa8 <bus_image_common_get_metadata+0xd8>
  40af9c:	mov	x2, #0x0                   	// #0
  40afa0:	mov	x1, #0x0                   	// #0
  40afa4:	bl	404280 <internal_hashmap_free@plt>
  40afa8:	ldr	x0, [sp, #80]
  40afac:	cbz	x0, 40afb4 <bus_image_common_get_metadata+0xe4>
  40afb0:	bl	4084a0 <portable_metadata_unref>
  40afb4:	ldr	x1, [sp, #120]
  40afb8:	ldr	x0, [x20]
  40afbc:	eor	x0, x1, x0
  40afc0:	cbnz	x0, 40b1b4 <bus_image_common_get_metadata+0x2e4>
  40afc4:	mov	w0, w19
  40afc8:	ldp	x19, x20, [sp, #16]
  40afcc:	ldp	x21, x22, [sp, #32]
  40afd0:	ldp	x23, x24, [sp, #48]
  40afd4:	ldp	x29, x30, [sp], #128
  40afd8:	ret
  40afdc:	ldr	x5, [sp, #72]
  40afe0:	mov	x1, x0
  40afe4:	mov	x4, x24
  40afe8:	add	x3, sp, #0x58
  40afec:	add	x2, sp, #0x50
  40aff0:	ldr	x0, [x5, #16]
  40aff4:	bl	4085e8 <portable_extract>
  40aff8:	mov	w19, w0
  40affc:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b000:	ldr	x0, [sp, #88]
  40b004:	add	x1, sp, #0x68
  40b008:	bl	4084c8 <portable_metadata_hashmap_to_sorted_array>
  40b00c:	mov	w19, w0
  40b010:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b014:	mov	x0, x21
  40b018:	add	x1, sp, #0x60
  40b01c:	bl	404410 <sd_bus_message_new_method_return@plt>
  40b020:	mov	w19, w0
  40b024:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b028:	ldr	x1, [sp, #72]
  40b02c:	adrp	x21, 40c000 <manager_image_cache_discover+0x50>
  40b030:	ldr	x0, [sp, #96]
  40b034:	add	x21, x21, #0x8a8
  40b038:	ldr	x2, [x1, #16]
  40b03c:	mov	x1, x21
  40b040:	bl	404500 <sd_bus_message_append@plt>
  40b044:	mov	w19, w0
  40b048:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b04c:	ldr	x1, [sp, #80]
  40b050:	ldr	x0, [sp, #96]
  40b054:	bl	40a548 <append_fd>
  40b058:	mov	w19, w0
  40b05c:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b060:	ldr	x0, [sp, #96]
  40b064:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b068:	mov	w1, #0x61                  	// #97
  40b06c:	add	x2, x2, #0x590
  40b070:	adrp	x23, 40e000 <manager_vtable+0x108>
  40b074:	mov	x22, #0x0                   	// #0
  40b078:	bl	404440 <sd_bus_message_open_container@plt>
  40b07c:	add	x23, x23, #0x598
  40b080:	mov	w19, w0
  40b084:	tbz	w0, #31, 40b0e4 <bus_image_common_get_metadata+0x214>
  40b088:	b	40b120 <bus_image_common_get_metadata+0x250>
  40b08c:	mov	x2, x23
  40b090:	mov	w1, #0x65                  	// #101
  40b094:	bl	404440 <sd_bus_message_open_container@plt>
  40b098:	mov	w19, w0
  40b09c:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b0a0:	ldp	x0, x2, [sp, #96]
  40b0a4:	mov	x1, x21
  40b0a8:	ldr	x2, [x2, x22, lsl #3]
  40b0ac:	add	x2, x2, #0x10
  40b0b0:	bl	404500 <sd_bus_message_append@plt>
  40b0b4:	mov	w19, w0
  40b0b8:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b0bc:	ldp	x0, x1, [sp, #96]
  40b0c0:	ldr	x1, [x1, x22, lsl #3]
  40b0c4:	bl	40a548 <append_fd>
  40b0c8:	mov	w19, w0
  40b0cc:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b0d0:	ldr	x0, [sp, #96]
  40b0d4:	bl	404da0 <sd_bus_message_close_container@plt>
  40b0d8:	mov	w19, w0
  40b0dc:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b0e0:	add	x22, x22, #0x1
  40b0e4:	ldr	x0, [sp, #88]
  40b0e8:	bl	4049c0 <internal_hashmap_size@plt>
  40b0ec:	cmp	x22, w0, uxtw
  40b0f0:	ldr	x1, [sp, #96]
  40b0f4:	mov	x0, x1
  40b0f8:	b.cc	40b08c <bus_image_common_get_metadata+0x1bc>  // b.lo, b.ul, b.last
  40b0fc:	bl	404da0 <sd_bus_message_close_container@plt>
  40b100:	mov	w19, w0
  40b104:	tbnz	w0, #31, 40b120 <bus_image_common_get_metadata+0x250>
  40b108:	ldr	x1, [sp, #96]
  40b10c:	mov	x2, #0x0                   	// #0
  40b110:	mov	x0, #0x0                   	// #0
  40b114:	bl	404890 <sd_bus_send@plt>
  40b118:	mov	w19, w0
  40b11c:	nop
  40b120:	ldr	x0, [sp, #112]
  40b124:	cbnz	x0, 40af7c <bus_image_common_get_metadata+0xac>
  40b128:	b	40af80 <bus_image_common_get_metadata+0xb0>
  40b12c:	cbz	x3, 40b190 <bus_image_common_get_metadata+0x2c0>
  40b130:	add	x1, sp, #0x70
  40b134:	mov	x0, x21
  40b138:	ldr	x22, [x3, #128]
  40b13c:	bl	4041f0 <sd_bus_message_read_strv@plt>
  40b140:	mov	w19, w0
  40b144:	tbz	w0, #31, 40af38 <bus_image_common_get_metadata+0x68>
  40b148:	b	40b120 <bus_image_common_get_metadata+0x250>
  40b14c:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b150:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b154:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b158:	add	x4, x4, #0x7d8
  40b15c:	add	x1, x1, #0x320
  40b160:	add	x2, x2, #0x2b3
  40b164:	mov	w3, #0x6d                  	// #109
  40b168:	bl	4045c0 <log_assert_failed_realm@plt>
  40b16c:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b170:	adrp	x1, 40d000 <_fini+0x91c>
  40b174:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b178:	add	x4, x4, #0x7d8
  40b17c:	add	x1, x1, #0xb10
  40b180:	add	x2, x2, #0x2b3
  40b184:	mov	w3, #0x6e                  	// #110
  40b188:	mov	w0, #0x0                   	// #0
  40b18c:	bl	4045c0 <log_assert_failed_realm@plt>
  40b190:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b194:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b198:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b19c:	add	x4, x4, #0x7d8
  40b1a0:	add	x1, x1, #0x330
  40b1a4:	add	x2, x2, #0x2b3
  40b1a8:	mov	w3, #0x71                  	// #113
  40b1ac:	mov	w0, #0x0                   	// #0
  40b1b0:	bl	4045c0 <log_assert_failed_realm@plt>
  40b1b4:	bl	404880 <__stack_chk_fail@plt>

000000000040b1b8 <bus_image_method_get_metadata>:
  40b1b8:	mov	x3, x1
  40b1bc:	mov	x4, x2
  40b1c0:	mov	x1, x0
  40b1c4:	mov	x2, #0x0                   	// #0
  40b1c8:	mov	x0, #0x0                   	// #0
  40b1cc:	b	40aed0 <bus_image_common_get_metadata>

000000000040b1d0 <bus_image_common_attach>:
  40b1d0:	stp	x29, x30, [sp, #-160]!
  40b1d4:	mov	x29, sp
  40b1d8:	stp	x21, x22, [sp, #32]
  40b1dc:	adrp	x21, 420000 <__FRAME_END__+0xfb68>
  40b1e0:	add	x21, x21, #0x738
  40b1e4:	ldr	x5, [x21]
  40b1e8:	str	x5, [sp, #152]
  40b1ec:	mov	x5, #0x0                   	// #0
  40b1f0:	str	x3, [sp, #88]
  40b1f4:	stp	xzr, xzr, [sp, #112]
  40b1f8:	str	xzr, [sp, #144]
  40b1fc:	cbz	x1, 40b3cc <bus_image_common_attach+0x1fc>
  40b200:	stp	x19, x20, [sp, #16]
  40b204:	mov	x22, x0
  40b208:	orr	x0, x3, x2
  40b20c:	stp	x23, x24, [sp, #48]
  40b210:	mov	x24, x2
  40b214:	cbz	x0, 40b3fc <bus_image_common_attach+0x22c>
  40b218:	mov	x20, x1
  40b21c:	mov	x23, x4
  40b220:	cbz	x22, 40b354 <bus_image_common_attach+0x184>
  40b224:	add	x1, sp, #0x70
  40b228:	mov	x0, x20
  40b22c:	bl	4041f0 <sd_bus_message_read_strv@plt>
  40b230:	mov	w19, w0
  40b234:	tbnz	w0, #31, 40b320 <bus_image_common_attach+0x150>
  40b238:	add	x4, sp, #0x88
  40b23c:	add	x3, sp, #0x6c
  40b240:	add	x2, sp, #0x80
  40b244:	mov	x0, x20
  40b248:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b24c:	add	x1, x1, #0x5a0
  40b250:	bl	4045d0 <sd_bus_message_read@plt>
  40b254:	mov	w19, w0
  40b258:	tbnz	w0, #31, 40b320 <bus_image_common_attach+0x150>
  40b25c:	ldr	x19, [sp, #136]
  40b260:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40b264:	add	x1, x1, #0x7e0
  40b268:	str	x25, [sp, #64]
  40b26c:	mov	x0, x19
  40b270:	bl	404ae0 <strcmp@plt>
  40b274:	cbnz	w0, 40b374 <bus_image_common_attach+0x1a4>
  40b278:	mov	w25, #0x2                   	// #2
  40b27c:	ldr	w0, [sp, #108]
  40b280:	orr	w1, w25, #0x4
  40b284:	ldr	x3, [sp, #88]
  40b288:	cmp	w0, #0x0
  40b28c:	csel	w25, w1, w25, ne  // ne = any
  40b290:	mov	x2, x24
  40b294:	mov	x7, x23
  40b298:	add	x6, sp, #0x58
  40b29c:	mov	x0, x22
  40b2a0:	mov	x1, x20
  40b2a4:	adrp	x5, 40d000 <_fini+0x91c>
  40b2a8:	mov	w4, #0x2                   	// #2
  40b2ac:	add	x5, x5, #0xc50
  40b2b0:	bl	40a9e0 <bus_image_acquire>
  40b2b4:	mov	w19, w0
  40b2b8:	cmp	w0, #0x0
  40b2bc:	b.lt	40b3bc <bus_image_common_attach+0x1ec>  // b.tstop
  40b2c0:	mov	w19, #0x1                   	// #1
  40b2c4:	b.eq	40b3bc <bus_image_common_attach+0x1ec>  // b.none
  40b2c8:	mov	x0, x20
  40b2cc:	bl	404560 <sd_bus_message_get_bus@plt>
  40b2d0:	ldr	x1, [sp, #88]
  40b2d4:	mov	x7, x23
  40b2d8:	ldr	x2, [sp, #112]
  40b2dc:	mov	w4, w25
  40b2e0:	ldr	x1, [x1, #16]
  40b2e4:	add	x6, sp, #0x90
  40b2e8:	ldr	x3, [sp, #128]
  40b2ec:	add	x5, sp, #0x78
  40b2f0:	bl	408748 <portable_attach>
  40b2f4:	mov	w19, w0
  40b2f8:	tbnz	w0, #31, 40b310 <bus_image_common_attach+0x140>
  40b2fc:	ldr	x1, [sp, #120]
  40b300:	mov	x0, x20
  40b304:	ldr	x2, [sp, #144]
  40b308:	bl	40a280 <reply_portable_changes>
  40b30c:	mov	w19, w0
  40b310:	ldr	x0, [sp, #120]
  40b314:	ldr	x1, [sp, #144]
  40b318:	bl	4086b8 <portable_changes_free>
  40b31c:	ldr	x25, [sp, #64]
  40b320:	ldr	x0, [sp, #112]
  40b324:	cbz	x0, 40b32c <bus_image_common_attach+0x15c>
  40b328:	bl	404780 <strv_free@plt>
  40b32c:	ldr	x1, [sp, #152]
  40b330:	ldr	x0, [x21]
  40b334:	eor	x0, x1, x0
  40b338:	cbnz	x0, 40b450 <bus_image_common_attach+0x280>
  40b33c:	mov	w0, w19
  40b340:	ldp	x19, x20, [sp, #16]
  40b344:	ldp	x21, x22, [sp, #32]
  40b348:	ldp	x23, x24, [sp, #48]
  40b34c:	ldp	x29, x30, [sp], #160
  40b350:	ret
  40b354:	cbz	x3, 40b428 <bus_image_common_attach+0x258>
  40b358:	add	x1, sp, #0x70
  40b35c:	mov	x0, x20
  40b360:	ldr	x22, [x3, #128]
  40b364:	bl	4041f0 <sd_bus_message_read_strv@plt>
  40b368:	mov	w19, w0
  40b36c:	tbz	w0, #31, 40b238 <bus_image_common_attach+0x68>
  40b370:	b	40b320 <bus_image_common_attach+0x150>
  40b374:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40b378:	mov	x0, x19
  40b37c:	add	x1, x1, #0x7d8
  40b380:	bl	404ae0 <strcmp@plt>
  40b384:	cbz	w0, 40b420 <bus_image_common_attach+0x250>
  40b388:	ldrb	w0, [x19]
  40b38c:	mov	w25, #0x0                   	// #0
  40b390:	cbz	w0, 40b27c <bus_image_common_attach+0xac>
  40b394:	mov	x3, x19
  40b398:	mov	x0, x20
  40b39c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b3a0:	adrp	x1, 40d000 <_fini+0x91c>
  40b3a4:	add	x2, x2, #0x5a8
  40b3a8:	add	x1, x1, #0x30
  40b3ac:	bl	404590 <sd_bus_reply_method_errorf@plt>
  40b3b0:	mov	w19, w0
  40b3b4:	ldr	x25, [sp, #64]
  40b3b8:	b	40b320 <bus_image_common_attach+0x150>
  40b3bc:	ldr	x0, [sp, #112]
  40b3c0:	ldr	x25, [sp, #64]
  40b3c4:	cbnz	x0, 40b328 <bus_image_common_attach+0x158>
  40b3c8:	b	40b32c <bus_image_common_attach+0x15c>
  40b3cc:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b3d0:	adrp	x1, 40d000 <_fini+0x91c>
  40b3d4:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b3d8:	add	x4, x4, #0x818
  40b3dc:	add	x1, x1, #0xb10
  40b3e0:	add	x2, x2, #0x2b3
  40b3e4:	mov	w3, #0xe7                  	// #231
  40b3e8:	mov	w0, #0x0                   	// #0
  40b3ec:	stp	x19, x20, [sp, #16]
  40b3f0:	stp	x23, x24, [sp, #48]
  40b3f4:	str	x25, [sp, #64]
  40b3f8:	bl	4045c0 <log_assert_failed_realm@plt>
  40b3fc:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b400:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b404:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b408:	add	x4, x4, #0x818
  40b40c:	add	x1, x1, #0x320
  40b410:	add	x2, x2, #0x2b3
  40b414:	mov	w3, #0xe8                  	// #232
  40b418:	str	x25, [sp, #64]
  40b41c:	bl	4045c0 <log_assert_failed_realm@plt>
  40b420:	mov	w25, #0x1                   	// #1
  40b424:	b	40b27c <bus_image_common_attach+0xac>
  40b428:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b42c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b430:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b434:	add	x4, x4, #0x818
  40b438:	add	x1, x1, #0x330
  40b43c:	add	x2, x2, #0x2b3
  40b440:	mov	w3, #0xeb                  	// #235
  40b444:	mov	w0, #0x0                   	// #0
  40b448:	str	x25, [sp, #64]
  40b44c:	bl	4045c0 <log_assert_failed_realm@plt>
  40b450:	str	x25, [sp, #64]
  40b454:	bl	404880 <__stack_chk_fail@plt>

000000000040b458 <bus_image_method_attach>:
  40b458:	mov	x3, x1
  40b45c:	mov	x4, x2
  40b460:	mov	x1, x0
  40b464:	mov	x2, #0x0                   	// #0
  40b468:	mov	x0, #0x0                   	// #0
  40b46c:	b	40b1d0 <bus_image_common_attach>

000000000040b470 <bus_image_common_remove>:
  40b470:	stp	x29, x30, [sp, #-128]!
  40b474:	mov	x29, sp
  40b478:	stp	x21, x22, [sp, #32]
  40b47c:	adrp	x21, 420000 <__FRAME_END__+0xfb68>
  40b480:	add	x21, x21, #0x738
  40b484:	ldr	x5, [x21]
  40b488:	str	x5, [sp, #120]
  40b48c:	mov	x5, #0x0                   	// #0
  40b490:	stp	x19, x20, [sp, #16]
  40b494:	mov	x5, #0xffffffffffffffff    	// #-1
  40b498:	stp	x23, x24, [sp, #48]
  40b49c:	str	x25, [sp, #64]
  40b4a0:	str	x3, [sp, #88]
  40b4a4:	str	wzr, [sp, #100]
  40b4a8:	str	x5, [sp, #112]
  40b4ac:	cbz	x1, 40b634 <bus_image_common_remove+0x1c4>
  40b4b0:	mov	x20, x0
  40b4b4:	orr	x0, x3, x2
  40b4b8:	cbz	x0, 40b658 <bus_image_common_remove+0x1e8>
  40b4bc:	mov	x22, x1
  40b4c0:	mov	x23, x4
  40b4c4:	cbz	x20, 40b578 <bus_image_common_remove+0x108>
  40b4c8:	ldr	w0, [x20, #48]
  40b4cc:	cmp	w0, #0x3f
  40b4d0:	b.hi	40b518 <bus_image_common_remove+0xa8>  // b.pmore
  40b4d4:	mov	x7, x23
  40b4d8:	add	x6, sp, #0x58
  40b4dc:	mov	x1, x22
  40b4e0:	mov	x0, x20
  40b4e4:	adrp	x5, 40d000 <_fini+0x91c>
  40b4e8:	mov	w4, #0x2                   	// #2
  40b4ec:	add	x5, x5, #0xb30
  40b4f0:	bl	40a9e0 <bus_image_acquire>
  40b4f4:	str	w0, [sp, #108]
  40b4f8:	mov	w19, w0
  40b4fc:	cmp	w0, #0x0
  40b500:	b.lt	40b628 <bus_image_common_remove+0x1b8>  // b.tstop
  40b504:	b.ne	40b584 <bus_image_common_remove+0x114>  // b.any
  40b508:	add	x24, sp, #0x70
  40b50c:	add	x25, sp, #0x64
  40b510:	mov	w19, #0x1                   	// #1
  40b514:	b	40b53c <bus_image_common_remove+0xcc>
  40b518:	mov	x0, x23
  40b51c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b520:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b524:	add	x2, x2, #0x5c0
  40b528:	add	x1, x1, #0x5e0
  40b52c:	add	x24, sp, #0x70
  40b530:	bl	404860 <sd_bus_error_setf@plt>
  40b534:	add	x25, sp, #0x64
  40b538:	mov	w19, w0
  40b53c:	mov	x0, x25
  40b540:	bl	404600 <sigkill_waitp@plt>
  40b544:	mov	x0, x24
  40b548:	bl	404550 <safe_close_pair@plt>
  40b54c:	ldr	x1, [sp, #120]
  40b550:	ldr	x0, [x21]
  40b554:	eor	x0, x1, x0
  40b558:	cbnz	x0, 40b754 <bus_image_common_remove+0x2e4>
  40b55c:	mov	w0, w19
  40b560:	ldp	x19, x20, [sp, #16]
  40b564:	ldp	x21, x22, [sp, #32]
  40b568:	ldp	x23, x24, [sp, #48]
  40b56c:	ldr	x25, [sp, #64]
  40b570:	ldp	x29, x30, [sp], #128
  40b574:	ret
  40b578:	cbz	x3, 40b6ec <bus_image_common_remove+0x27c>
  40b57c:	ldr	x20, [x3, #128]
  40b580:	b	40b4c8 <bus_image_common_remove+0x58>
  40b584:	mov	x0, x22
  40b588:	bl	404560 <sd_bus_message_get_bus@plt>
  40b58c:	ldr	x1, [sp, #88]
  40b590:	mov	x4, x23
  40b594:	add	x3, sp, #0x68
  40b598:	mov	w2, #0x0                   	// #0
  40b59c:	ldr	x1, [x1, #16]
  40b5a0:	bl	409600 <portable_get_state>
  40b5a4:	str	w0, [sp, #108]
  40b5a8:	mov	w19, w0
  40b5ac:	tbnz	w0, #31, 40b628 <bus_image_common_remove+0x1b8>
  40b5b0:	ldr	w0, [sp, #104]
  40b5b4:	cbnz	w0, 40b6c0 <bus_image_common_remove+0x250>
  40b5b8:	add	x24, sp, #0x70
  40b5bc:	mov	w1, #0x800                 	// #2048
  40b5c0:	mov	x0, x24
  40b5c4:	movk	w1, #0x8, lsl #16
  40b5c8:	bl	404a10 <pipe2@plt>
  40b5cc:	tbnz	w0, #31, 40b710 <bus_image_common_remove+0x2a0>
  40b5d0:	add	x25, sp, #0x64
  40b5d4:	adrp	x0, 40e000 <manager_vtable+0x108>
  40b5d8:	mov	x4, x25
  40b5dc:	add	x0, x0, #0x658
  40b5e0:	mov	w3, #0x1                   	// #1
  40b5e4:	mov	x2, #0x0                   	// #0
  40b5e8:	mov	x1, #0x0                   	// #0
  40b5ec:	bl	404b70 <safe_fork_full@plt>
  40b5f0:	str	w0, [sp, #108]
  40b5f4:	cmp	w0, #0x0
  40b5f8:	b.lt	40b738 <bus_image_common_remove+0x2c8>  // b.tstop
  40b5fc:	b.ne	40b678 <bus_image_common_remove+0x208>  // b.any
  40b600:	ldr	w0, [sp, #112]
  40b604:	bl	404530 <safe_close@plt>
  40b608:	mov	w1, w0
  40b60c:	ldr	x0, [sp, #88]
  40b610:	str	w1, [sp, #112]
  40b614:	bl	404c90 <image_remove@plt>
  40b618:	str	w0, [sp, #108]
  40b61c:	tbnz	w0, #31, 40b758 <bus_image_common_remove+0x2e8>
  40b620:	mov	w0, #0x0                   	// #0
  40b624:	bl	404610 <_exit@plt>
  40b628:	add	x24, sp, #0x70
  40b62c:	add	x25, sp, #0x64
  40b630:	b	40b53c <bus_image_common_remove+0xcc>
  40b634:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b638:	adrp	x1, 40d000 <_fini+0x91c>
  40b63c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b640:	add	x4, x4, #0x848
  40b644:	add	x1, x1, #0xb10
  40b648:	add	x2, x2, #0x2b3
  40b64c:	mov	w3, #0x163                 	// #355
  40b650:	mov	w0, #0x0                   	// #0
  40b654:	bl	4045c0 <log_assert_failed_realm@plt>
  40b658:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b65c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b660:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b664:	add	x4, x4, #0x848
  40b668:	add	x1, x1, #0x320
  40b66c:	add	x2, x2, #0x2b3
  40b670:	mov	w3, #0x164                 	// #356
  40b674:	bl	4045c0 <log_assert_failed_realm@plt>
  40b678:	ldr	w0, [sp, #116]
  40b67c:	bl	404530 <safe_close@plt>
  40b680:	mov	w5, w0
  40b684:	ldr	w1, [sp, #100]
  40b688:	mov	x2, x22
  40b68c:	ldr	w3, [sp, #112]
  40b690:	mov	x0, x20
  40b694:	mov	x4, #0x0                   	// #0
  40b698:	str	w5, [sp, #116]
  40b69c:	bl	40c070 <operation_new>
  40b6a0:	str	w0, [sp, #108]
  40b6a4:	mov	w19, w0
  40b6a8:	tbnz	w0, #31, 40b53c <bus_image_common_remove+0xcc>
  40b6ac:	mov	w0, #0xffffffff            	// #-1
  40b6b0:	mov	w19, #0x1                   	// #1
  40b6b4:	str	wzr, [sp, #100]
  40b6b8:	str	w0, [sp, #112]
  40b6bc:	b	40b53c <bus_image_common_remove+0xcc>
  40b6c0:	ldr	x3, [sp, #88]
  40b6c4:	mov	x0, x23
  40b6c8:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b6cc:	mov	w1, #0x10                  	// #16
  40b6d0:	add	x2, x2, #0x610
  40b6d4:	add	x24, sp, #0x70
  40b6d8:	ldr	x3, [x3, #16]
  40b6dc:	add	x25, sp, #0x64
  40b6e0:	bl	4043a0 <sd_bus_error_set_errnof@plt>
  40b6e4:	mov	w19, w0
  40b6e8:	b	40b53c <bus_image_common_remove+0xcc>
  40b6ec:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b6f0:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b6f4:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b6f8:	add	x4, x4, #0x848
  40b6fc:	add	x1, x1, #0x330
  40b700:	add	x2, x2, #0x2b3
  40b704:	mov	w3, #0x167                 	// #359
  40b708:	mov	w0, #0x0                   	// #0
  40b70c:	bl	4045c0 <log_assert_failed_realm@plt>
  40b710:	bl	404770 <__errno_location@plt>
  40b714:	mov	x1, x0
  40b718:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b71c:	mov	x0, x23
  40b720:	add	x2, x2, #0x638
  40b724:	add	x25, sp, #0x64
  40b728:	ldr	w1, [x1]
  40b72c:	bl	4043a0 <sd_bus_error_set_errnof@plt>
  40b730:	mov	w19, w0
  40b734:	b	40b53c <bus_image_common_remove+0xcc>
  40b738:	mov	w1, w0
  40b73c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b740:	mov	x0, x23
  40b744:	add	x2, x2, #0x668
  40b748:	bl	4043a0 <sd_bus_error_set_errnof@plt>
  40b74c:	mov	w19, w0
  40b750:	b	40b53c <bus_image_common_remove+0xcc>
  40b754:	bl	404880 <__stack_chk_fail@plt>
  40b758:	ldr	w0, [sp, #116]
  40b75c:	add	x1, sp, #0x6c
  40b760:	mov	x2, #0x4                   	// #4
  40b764:	bl	4048c0 <write@plt>
  40b768:	mov	w0, #0x1                   	// #1
  40b76c:	bl	404610 <_exit@plt>

000000000040b770 <bus_image_method_remove>:
  40b770:	mov	x3, x1
  40b774:	mov	x4, x2
  40b778:	mov	x1, x0
  40b77c:	mov	x2, #0x0                   	// #0
  40b780:	mov	x0, #0x0                   	// #0
  40b784:	b	40b470 <bus_image_common_remove>

000000000040b788 <bus_image_common_mark_read_only>:
  40b788:	stp	x29, x30, [sp, #-96]!
  40b78c:	mov	x29, sp
  40b790:	stp	x19, x20, [sp, #16]
  40b794:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  40b798:	add	x20, x20, #0x738
  40b79c:	ldr	x5, [x20]
  40b7a0:	str	x5, [sp, #88]
  40b7a4:	mov	x5, #0x0                   	// #0
  40b7a8:	stp	x21, x22, [sp, #32]
  40b7ac:	str	x23, [sp, #48]
  40b7b0:	str	x3, [sp, #72]
  40b7b4:	cbz	x1, 40b894 <bus_image_common_mark_read_only+0x10c>
  40b7b8:	mov	x21, x0
  40b7bc:	mov	x22, x2
  40b7c0:	orr	x0, x3, x2
  40b7c4:	cbz	x0, 40b8b8 <bus_image_common_mark_read_only+0x130>
  40b7c8:	mov	x19, x1
  40b7cc:	mov	x23, x4
  40b7d0:	cbz	x21, 40b848 <bus_image_common_mark_read_only+0xc0>
  40b7d4:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b7d8:	add	x2, sp, #0x54
  40b7dc:	add	x1, x1, #0x2e8
  40b7e0:	mov	x0, x19
  40b7e4:	bl	4045d0 <sd_bus_message_read@plt>
  40b7e8:	tbnz	w0, #31, 40b824 <bus_image_common_mark_read_only+0x9c>
  40b7ec:	ldr	x3, [sp, #72]
  40b7f0:	mov	x7, x23
  40b7f4:	mov	x2, x22
  40b7f8:	mov	x0, x21
  40b7fc:	add	x6, sp, #0x48
  40b800:	mov	x1, x19
  40b804:	adrp	x5, 40d000 <_fini+0x91c>
  40b808:	mov	w4, #0x2                   	// #2
  40b80c:	add	x5, x5, #0xb30
  40b810:	bl	40a9e0 <bus_image_acquire>
  40b814:	cmp	w0, #0x0
  40b818:	b.lt	40b824 <bus_image_common_mark_read_only+0x9c>  // b.tstop
  40b81c:	mov	w0, #0x1                   	// #1
  40b820:	b.ne	40b86c <bus_image_common_mark_read_only+0xe4>  // b.any
  40b824:	ldr	x2, [sp, #88]
  40b828:	ldr	x1, [x20]
  40b82c:	eor	x1, x2, x1
  40b830:	cbnz	x1, 40b8fc <bus_image_common_mark_read_only+0x174>
  40b834:	ldp	x19, x20, [sp, #16]
  40b838:	ldp	x21, x22, [sp, #32]
  40b83c:	ldr	x23, [sp, #48]
  40b840:	ldp	x29, x30, [sp], #96
  40b844:	ret
  40b848:	cbz	x3, 40b8d8 <bus_image_common_mark_read_only+0x150>
  40b84c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b850:	add	x2, sp, #0x54
  40b854:	add	x1, x1, #0x2e8
  40b858:	mov	x0, x19
  40b85c:	ldr	x21, [x3, #128]
  40b860:	bl	4045d0 <sd_bus_message_read@plt>
  40b864:	tbz	w0, #31, 40b7ec <bus_image_common_mark_read_only+0x64>
  40b868:	b	40b824 <bus_image_common_mark_read_only+0x9c>
  40b86c:	ldr	w1, [sp, #84]
  40b870:	ldr	x0, [sp, #72]
  40b874:	cmp	w1, #0x0
  40b878:	cset	w1, ne  // ne = any
  40b87c:	bl	404540 <image_read_only@plt>
  40b880:	tbnz	w0, #31, 40b824 <bus_image_common_mark_read_only+0x9c>
  40b884:	mov	x0, x19
  40b888:	mov	x1, #0x0                   	// #0
  40b88c:	bl	4042a0 <sd_bus_reply_method_return@plt>
  40b890:	b	40b824 <bus_image_common_mark_read_only+0x9c>
  40b894:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b898:	adrp	x1, 40d000 <_fini+0x91c>
  40b89c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b8a0:	add	x4, x4, #0x860
  40b8a4:	add	x1, x1, #0xb10
  40b8a8:	add	x2, x2, #0x2b3
  40b8ac:	mov	w3, #0x1b2                 	// #434
  40b8b0:	mov	w0, #0x0                   	// #0
  40b8b4:	bl	4045c0 <log_assert_failed_realm@plt>
  40b8b8:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b8bc:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b8c0:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b8c4:	add	x4, x4, #0x860
  40b8c8:	add	x1, x1, #0x320
  40b8cc:	add	x2, x2, #0x2b3
  40b8d0:	mov	w3, #0x1b3                 	// #435
  40b8d4:	bl	4045c0 <log_assert_failed_realm@plt>
  40b8d8:	adrp	x4, 40e000 <manager_vtable+0x108>
  40b8dc:	adrp	x1, 40e000 <manager_vtable+0x108>
  40b8e0:	adrp	x2, 40e000 <manager_vtable+0x108>
  40b8e4:	add	x4, x4, #0x860
  40b8e8:	add	x1, x1, #0x330
  40b8ec:	add	x2, x2, #0x2b3
  40b8f0:	mov	w3, #0x1b6                 	// #438
  40b8f4:	mov	w0, #0x0                   	// #0
  40b8f8:	bl	4045c0 <log_assert_failed_realm@plt>
  40b8fc:	bl	404880 <__stack_chk_fail@plt>

000000000040b900 <bus_image_method_mark_read_only>:
  40b900:	mov	x3, x1
  40b904:	mov	x4, x2
  40b908:	mov	x1, x0
  40b90c:	mov	x2, #0x0                   	// #0
  40b910:	mov	x0, #0x0                   	// #0
  40b914:	b	40b788 <bus_image_common_mark_read_only>

000000000040b918 <bus_image_common_set_limit>:
  40b918:	stp	x29, x30, [sp, #-96]!
  40b91c:	mov	x29, sp
  40b920:	stp	x19, x20, [sp, #16]
  40b924:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  40b928:	add	x20, x20, #0x738
  40b92c:	ldr	x5, [x20]
  40b930:	str	x5, [sp, #88]
  40b934:	mov	x5, #0x0                   	// #0
  40b938:	stp	x21, x22, [sp, #32]
  40b93c:	str	x23, [sp, #48]
  40b940:	str	x3, [sp, #72]
  40b944:	cbz	x1, 40ba34 <bus_image_common_set_limit+0x11c>
  40b948:	mov	x21, x0
  40b94c:	mov	x22, x2
  40b950:	orr	x0, x3, x2
  40b954:	cbz	x0, 40ba58 <bus_image_common_set_limit+0x140>
  40b958:	mov	x19, x1
  40b95c:	mov	x23, x4
  40b960:	cbz	x21, 40b9f0 <bus_image_common_set_limit+0xd8>
  40b964:	adrp	x1, 40d000 <_fini+0x91c>
  40b968:	add	x2, sp, #0x50
  40b96c:	add	x1, x1, #0xca0
  40b970:	mov	x0, x19
  40b974:	bl	4045d0 <sd_bus_message_read@plt>
  40b978:	tbnz	w0, #31, 40b9cc <bus_image_common_set_limit+0xb4>
  40b97c:	ldr	x0, [sp, #80]
  40b980:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  40b984:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
  40b988:	add	x0, x0, x2
  40b98c:	cmp	x0, x1
  40b990:	b.ls	40ba18 <bus_image_common_set_limit+0x100>  // b.plast
  40b994:	ldr	x3, [sp, #72]
  40b998:	mov	x7, x23
  40b99c:	mov	x2, x22
  40b9a0:	mov	x0, x21
  40b9a4:	add	x6, sp, #0x48
  40b9a8:	mov	x1, x19
  40b9ac:	adrp	x5, 40d000 <_fini+0x91c>
  40b9b0:	mov	w4, #0x2                   	// #2
  40b9b4:	add	x5, x5, #0xb30
  40b9b8:	bl	40a9e0 <bus_image_acquire>
  40b9bc:	cmp	w0, #0x0
  40b9c0:	b.lt	40b9cc <bus_image_common_set_limit+0xb4>  // b.tstop
  40b9c4:	mov	w0, #0x1                   	// #1
  40b9c8:	b.ne	40b9fc <bus_image_common_set_limit+0xe4>  // b.any
  40b9cc:	ldr	x2, [sp, #88]
  40b9d0:	ldr	x1, [x20]
  40b9d4:	eor	x1, x2, x1
  40b9d8:	cbnz	x1, 40ba9c <bus_image_common_set_limit+0x184>
  40b9dc:	ldp	x19, x20, [sp, #16]
  40b9e0:	ldp	x21, x22, [sp, #32]
  40b9e4:	ldr	x23, [sp, #48]
  40b9e8:	ldp	x29, x30, [sp], #96
  40b9ec:	ret
  40b9f0:	cbz	x3, 40ba78 <bus_image_common_set_limit+0x160>
  40b9f4:	ldr	x21, [x3, #128]
  40b9f8:	b	40b964 <bus_image_common_set_limit+0x4c>
  40b9fc:	ldp	x0, x1, [sp, #72]
  40ba00:	bl	404c20 <image_set_limit@plt>
  40ba04:	tbnz	w0, #31, 40b9cc <bus_image_common_set_limit+0xb4>
  40ba08:	mov	x0, x19
  40ba0c:	mov	x1, #0x0                   	// #0
  40ba10:	bl	4042a0 <sd_bus_reply_method_return@plt>
  40ba14:	b	40b9cc <bus_image_common_set_limit+0xb4>
  40ba18:	mov	x0, x23
  40ba1c:	adrp	x2, 40d000 <_fini+0x91c>
  40ba20:	adrp	x1, 40d000 <_fini+0x91c>
  40ba24:	add	x2, x2, #0xb18
  40ba28:	add	x1, x1, #0x30
  40ba2c:	bl	404860 <sd_bus_error_setf@plt>
  40ba30:	b	40b9cc <bus_image_common_set_limit+0xb4>
  40ba34:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ba38:	adrp	x1, 40d000 <_fini+0x91c>
  40ba3c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ba40:	add	x4, x4, #0x880
  40ba44:	add	x1, x1, #0xb10
  40ba48:	add	x2, x2, #0x2b3
  40ba4c:	mov	w3, #0x1e0                 	// #480
  40ba50:	mov	w0, #0x0                   	// #0
  40ba54:	bl	4045c0 <log_assert_failed_realm@plt>
  40ba58:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ba5c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40ba60:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ba64:	add	x4, x4, #0x880
  40ba68:	add	x1, x1, #0x320
  40ba6c:	add	x2, x2, #0x2b3
  40ba70:	mov	w3, #0x1e1                 	// #481
  40ba74:	bl	4045c0 <log_assert_failed_realm@plt>
  40ba78:	adrp	x4, 40e000 <manager_vtable+0x108>
  40ba7c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40ba80:	adrp	x2, 40e000 <manager_vtable+0x108>
  40ba84:	add	x4, x4, #0x880
  40ba88:	add	x1, x1, #0x330
  40ba8c:	add	x2, x2, #0x2b3
  40ba90:	mov	w3, #0x1e4                 	// #484
  40ba94:	mov	w0, #0x0                   	// #0
  40ba98:	bl	4045c0 <log_assert_failed_realm@plt>
  40ba9c:	bl	404880 <__stack_chk_fail@plt>

000000000040baa0 <bus_image_method_set_limit>:
  40baa0:	mov	x3, x1
  40baa4:	mov	x4, x2
  40baa8:	mov	x1, x0
  40baac:	mov	x2, #0x0                   	// #0
  40bab0:	mov	x0, #0x0                   	// #0
  40bab4:	b	40b918 <bus_image_common_set_limit>

000000000040bab8 <bus_image_object_find>:
  40bab8:	stp	x29, x30, [sp, #-96]!
  40babc:	mov	x29, sp
  40bac0:	stp	x19, x20, [sp, #16]
  40bac4:	adrp	x19, 420000 <__FRAME_END__+0xfb68>
  40bac8:	add	x19, x19, #0x738
  40bacc:	ldr	x6, [x19]
  40bad0:	str	x6, [sp, #88]
  40bad4:	mov	x6, #0x0                   	// #0
  40bad8:	stp	x21, x22, [sp, #32]
  40badc:	mov	x20, x0
  40bae0:	stp	x23, x24, [sp, #48]
  40bae4:	stp	xzr, xzr, [sp, #72]
  40bae8:	cbz	x0, 40bbac <bus_image_object_find+0xf4>
  40baec:	mov	x0, x1
  40baf0:	cbz	x1, 40bbd0 <bus_image_object_find+0x118>
  40baf4:	cbz	x2, 40bbf0 <bus_image_object_find+0x138>
  40baf8:	mov	x21, x4
  40bafc:	cbz	x4, 40bc14 <bus_image_object_find+0x15c>
  40bb00:	mov	x24, x3
  40bb04:	mov	x23, x5
  40bb08:	add	x2, sp, #0x48
  40bb0c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40bb10:	mov	w22, #0x0                   	// #0
  40bb14:	add	x1, x1, #0x2f8
  40bb18:	bl	404a80 <sd_bus_path_decode@plt>
  40bb1c:	cmp	w0, #0x0
  40bb20:	b.lt	40bb70 <bus_image_object_find+0xb8>  // b.tstop
  40bb24:	b.eq	40bba0 <bus_image_object_find+0xe8>  // b.none
  40bb28:	mov	x0, x20
  40bb2c:	bl	404850 <sd_bus_get_current_message@plt>
  40bb30:	ldr	x2, [sp, #72]
  40bb34:	mov	x1, x0
  40bb38:	mov	x7, x23
  40bb3c:	mov	x0, x24
  40bb40:	add	x6, sp, #0x50
  40bb44:	mov	x5, #0x0                   	// #0
  40bb48:	mov	w4, #0x0                   	// #0
  40bb4c:	mov	x3, #0x0                   	// #0
  40bb50:	bl	40a9e0 <bus_image_acquire>
  40bb54:	mov	w22, w0
  40bb58:	cmn	w0, #0x2
  40bb5c:	b.eq	40bba0 <bus_image_object_find+0xe8>  // b.none
  40bb60:	tbnz	w0, #31, 40bb70 <bus_image_object_find+0xb8>
  40bb64:	ldr	x0, [sp, #80]
  40bb68:	mov	w22, #0x1                   	// #1
  40bb6c:	str	x0, [x21]
  40bb70:	ldr	x0, [sp, #72]
  40bb74:	bl	404c10 <free@plt>
  40bb78:	ldr	x1, [sp, #88]
  40bb7c:	ldr	x0, [x19]
  40bb80:	eor	x0, x1, x0
  40bb84:	cbnz	x0, 40bc38 <bus_image_object_find+0x180>
  40bb88:	mov	w0, w22
  40bb8c:	ldp	x19, x20, [sp, #16]
  40bb90:	ldp	x21, x22, [sp, #32]
  40bb94:	ldp	x23, x24, [sp, #48]
  40bb98:	ldp	x29, x30, [sp], #96
  40bb9c:	ret
  40bba0:	mov	w22, #0x0                   	// #0
  40bba4:	str	xzr, [x21]
  40bba8:	b	40bb70 <bus_image_object_find+0xb8>
  40bbac:	adrp	x4, 40e000 <manager_vtable+0x108>
  40bbb0:	adrp	x1, 40d000 <_fini+0x91c>
  40bbb4:	adrp	x2, 40e000 <manager_vtable+0x108>
  40bbb8:	add	x4, x4, #0x8c8
  40bbbc:	add	x1, x1, #0xc30
  40bbc0:	add	x2, x2, #0x2b3
  40bbc4:	mov	w3, #0x2a4                 	// #676
  40bbc8:	mov	w0, #0x0                   	// #0
  40bbcc:	bl	4045c0 <log_assert_failed_realm@plt>
  40bbd0:	adrp	x4, 40e000 <manager_vtable+0x108>
  40bbd4:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40bbd8:	adrp	x2, 40e000 <manager_vtable+0x108>
  40bbdc:	add	x4, x4, #0x8c8
  40bbe0:	add	x1, x1, #0xc00
  40bbe4:	add	x2, x2, #0x2b3
  40bbe8:	mov	w3, #0x2a5                 	// #677
  40bbec:	bl	4045c0 <log_assert_failed_realm@plt>
  40bbf0:	adrp	x4, 40e000 <manager_vtable+0x108>
  40bbf4:	adrp	x1, 40e000 <manager_vtable+0x108>
  40bbf8:	adrp	x2, 40e000 <manager_vtable+0x108>
  40bbfc:	add	x4, x4, #0x8c8
  40bc00:	add	x1, x1, #0x680
  40bc04:	add	x2, x2, #0x2b3
  40bc08:	mov	w3, #0x2a6                 	// #678
  40bc0c:	mov	w0, #0x0                   	// #0
  40bc10:	bl	4045c0 <log_assert_failed_realm@plt>
  40bc14:	adrp	x4, 40e000 <manager_vtable+0x108>
  40bc18:	adrp	x1, 40e000 <manager_vtable+0x108>
  40bc1c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40bc20:	add	x4, x4, #0x8c8
  40bc24:	add	x1, x1, #0x690
  40bc28:	add	x2, x2, #0x2b3
  40bc2c:	mov	w3, #0x2a7                 	// #679
  40bc30:	mov	w0, #0x0                   	// #0
  40bc34:	bl	4045c0 <log_assert_failed_realm@plt>
  40bc38:	bl	404880 <__stack_chk_fail@plt>
  40bc3c:	nop

000000000040bc40 <bus_image_node_enumerator>:
  40bc40:	stp	x29, x30, [sp, #-128]!
  40bc44:	mov	x29, sp
  40bc48:	stp	x23, x24, [sp, #48]
  40bc4c:	adrp	x23, 420000 <__FRAME_END__+0xfb68>
  40bc50:	add	x23, x23, #0x738
  40bc54:	ldr	x5, [x23]
  40bc58:	str	x5, [sp, #120]
  40bc5c:	mov	x5, #0x0                   	// #0
  40bc60:	stp	x19, x20, [sp, #16]
  40bc64:	stp	x21, x22, [sp, #32]
  40bc68:	stp	xzr, xzr, [sp, #72]
  40bc6c:	cbz	x0, 40bd90 <bus_image_node_enumerator+0x150>
  40bc70:	cbz	x1, 40bdb0 <bus_image_node_enumerator+0x170>
  40bc74:	mov	x24, x3
  40bc78:	cbz	x3, 40bdd4 <bus_image_node_enumerator+0x194>
  40bc7c:	mov	x19, x2
  40bc80:	mov	x20, x4
  40bc84:	adrp	x0, 420000 <__FRAME_END__+0xfb68>
  40bc88:	add	x0, x0, #0x780
  40bc8c:	bl	404870 <internal_hashmap_new@plt>
  40bc90:	mov	x22, x0
  40bc94:	cbz	x0, 40bdf8 <bus_image_node_enumerator+0x1b8>
  40bc98:	mov	x0, x19
  40bc9c:	mov	x2, x20
  40bca0:	mov	x1, x22
  40bca4:	bl	40bfb0 <manager_image_cache_discover>
  40bca8:	mov	w19, w0
  40bcac:	tbnz	w0, #31, 40bd80 <bus_image_node_enumerator+0x140>
  40bcb0:	mov	w0, #0xfffffffe            	// #-2
  40bcb4:	mov	x21, #0x2                   	// #2
  40bcb8:	mov	x20, #0x0                   	// #0
  40bcbc:	str	w0, [sp, #104]
  40bcc0:	str	xzr, [sp, #112]
  40bcc4:	b	40bd10 <bus_image_node_enumerator+0xd0>
  40bcc8:	ldr	x0, [sp, #88]
  40bccc:	add	x1, sp, #0x60
  40bcd0:	bl	40a960 <bus_image_path>
  40bcd4:	mov	w19, w0
  40bcd8:	tbnz	w0, #31, 40bd80 <bus_image_node_enumerator+0x140>
  40bcdc:	mov	x2, x21
  40bce0:	add	x1, sp, #0x50
  40bce4:	add	x21, x21, #0x1
  40bce8:	add	x0, sp, #0x48
  40bcec:	mov	x3, #0x8                   	// #8
  40bcf0:	bl	404700 <greedy_realloc@plt>
  40bcf4:	cbz	x0, 40bd74 <bus_image_node_enumerator+0x134>
  40bcf8:	ldr	x0, [sp, #72]
  40bcfc:	ldr	x1, [sp, #96]
  40bd00:	str	x1, [x0, x20]
  40bd04:	add	x20, x20, #0x8
  40bd08:	ldr	x0, [sp, #72]
  40bd0c:	str	xzr, [x0, x20]
  40bd10:	add	x2, sp, #0x58
  40bd14:	add	x1, sp, #0x68
  40bd18:	mov	x0, x22
  40bd1c:	mov	x3, #0x0                   	// #0
  40bd20:	bl	404b40 <internal_hashmap_iterate@plt>
  40bd24:	tst	w0, #0xff
  40bd28:	b.ne	40bcc8 <bus_image_node_enumerator+0x88>  // b.any
  40bd2c:	ldr	x0, [sp, #72]
  40bd30:	mov	w19, #0x1                   	// #1
  40bd34:	str	x0, [x24]
  40bd38:	str	xzr, [sp, #72]
  40bd3c:	mov	x0, x22
  40bd40:	mov	x2, #0x0                   	// #0
  40bd44:	mov	x1, #0x0                   	// #0
  40bd48:	bl	404280 <internal_hashmap_free@plt>
  40bd4c:	ldr	x1, [sp, #120]
  40bd50:	ldr	x0, [x23]
  40bd54:	eor	x0, x1, x0
  40bd58:	cbnz	x0, 40be0c <bus_image_node_enumerator+0x1cc>
  40bd5c:	mov	w0, w19
  40bd60:	ldp	x19, x20, [sp, #16]
  40bd64:	ldp	x21, x22, [sp, #32]
  40bd68:	ldp	x23, x24, [sp, #48]
  40bd6c:	ldp	x29, x30, [sp], #128
  40bd70:	ret
  40bd74:	ldr	x0, [sp, #96]
  40bd78:	mov	w19, #0xfffffff4            	// #-12
  40bd7c:	bl	404c10 <free@plt>
  40bd80:	ldr	x0, [sp, #72]
  40bd84:	cbz	x0, 40bd3c <bus_image_node_enumerator+0xfc>
  40bd88:	bl	404780 <strv_free@plt>
  40bd8c:	b	40bd3c <bus_image_node_enumerator+0xfc>
  40bd90:	adrp	x4, 40e000 <manager_vtable+0x108>
  40bd94:	adrp	x1, 40d000 <_fini+0x91c>
  40bd98:	adrp	x2, 40e000 <manager_vtable+0x108>
  40bd9c:	add	x4, x4, #0x8e0
  40bda0:	add	x1, x1, #0xc30
  40bda4:	add	x2, x2, #0x2b3
  40bda8:	mov	w3, #0x2c6                 	// #710
  40bdac:	bl	4045c0 <log_assert_failed_realm@plt>
  40bdb0:	adrp	x4, 40e000 <manager_vtable+0x108>
  40bdb4:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40bdb8:	adrp	x2, 40e000 <manager_vtable+0x108>
  40bdbc:	add	x4, x4, #0x8e0
  40bdc0:	add	x1, x1, #0xc00
  40bdc4:	add	x2, x2, #0x2b3
  40bdc8:	mov	w3, #0x2c7                 	// #711
  40bdcc:	mov	w0, #0x0                   	// #0
  40bdd0:	bl	4045c0 <log_assert_failed_realm@plt>
  40bdd4:	adrp	x4, 40e000 <manager_vtable+0x108>
  40bdd8:	adrp	x1, 40e000 <manager_vtable+0x108>
  40bddc:	adrp	x2, 40e000 <manager_vtable+0x108>
  40bde0:	add	x4, x4, #0x8e0
  40bde4:	add	x1, x1, #0x698
  40bde8:	add	x2, x2, #0x2b3
  40bdec:	mov	w3, #0x2c8                 	// #712
  40bdf0:	mov	w0, #0x0                   	// #0
  40bdf4:	bl	4045c0 <log_assert_failed_realm@plt>
  40bdf8:	ldr	x0, [sp, #72]
  40bdfc:	mov	w19, #0xfffffff4            	// #-12
  40be00:	cbz	x0, 40bd4c <bus_image_node_enumerator+0x10c>
  40be04:	bl	404780 <strv_free@plt>
  40be08:	b	40bd4c <bus_image_node_enumerator+0x10c>
  40be0c:	bl	404880 <__stack_chk_fail@plt>

000000000040be10 <image_cache_flush>:
  40be10:	stp	x29, x30, [sp, #-16]!
  40be14:	mov	x29, sp
  40be18:	cbz	x0, 40be3c <image_cache_flush+0x2c>
  40be1c:	cbz	x1, 40be5c <image_cache_flush+0x4c>
  40be20:	ldr	x0, [x1, #24]
  40be24:	mov	x2, #0x0                   	// #0
  40be28:	mov	x1, #0x0                   	// #0
  40be2c:	bl	404a60 <internal_hashmap_clear@plt>
  40be30:	mov	w0, #0x0                   	// #0
  40be34:	ldp	x29, x30, [sp], #16
  40be38:	ret
  40be3c:	adrp	x4, 40e000 <manager_vtable+0x108>
  40be40:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40be44:	adrp	x2, 40e000 <manager_vtable+0x108>
  40be48:	add	x4, x4, #0xda0
  40be4c:	add	x1, x1, #0x8a8
  40be50:	add	x2, x2, #0xd63
  40be54:	mov	w3, #0x10                  	// #16
  40be58:	bl	4045c0 <log_assert_failed_realm@plt>
  40be5c:	adrp	x4, 40e000 <manager_vtable+0x108>
  40be60:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40be64:	adrp	x2, 40e000 <manager_vtable+0x108>
  40be68:	add	x4, x4, #0xda0
  40be6c:	add	x1, x1, #0xec8
  40be70:	add	x2, x2, #0xd63
  40be74:	mov	w3, #0x11                  	// #17
  40be78:	mov	w0, #0x0                   	// #0
  40be7c:	bl	4045c0 <log_assert_failed_realm@plt>

000000000040be80 <manager_image_cache_get>:
  40be80:	cbz	x0, 40be8c <manager_image_cache_get+0xc>
  40be84:	ldr	x0, [x0, #24]
  40be88:	b	404750 <internal_hashmap_get@plt>
  40be8c:	stp	x29, x30, [sp, #-16]!
  40be90:	adrp	x4, 40e000 <manager_vtable+0x108>
  40be94:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40be98:	mov	x29, sp
  40be9c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40bea0:	add	x4, x4, #0xd88
  40bea4:	add	x1, x1, #0xec8
  40bea8:	add	x2, x2, #0xd63
  40beac:	mov	w3, #0x8                   	// #8
  40beb0:	bl	4045c0 <log_assert_failed_realm@plt>
  40beb4:	nop

000000000040beb8 <manager_image_cache_add>:
  40beb8:	stp	x29, x30, [sp, #-32]!
  40bebc:	mov	x29, sp
  40bec0:	stp	x19, x20, [sp, #16]
  40bec4:	cbz	x0, 40bf88 <manager_image_cache_add+0xd0>
  40bec8:	mov	x19, x0
  40becc:	mov	x20, x1
  40bed0:	add	x0, x0, #0x18
  40bed4:	adrp	x1, 420000 <__FRAME_END__+0xfb68>
  40bed8:	add	x1, x1, #0x780
  40bedc:	bl	404c60 <internal_hashmap_ensure_allocated@plt>
  40bee0:	tbnz	w0, #31, 40bf24 <manager_image_cache_add+0x6c>
  40bee4:	ldr	x0, [x19, #32]
  40bee8:	cbz	x0, 40bf30 <manager_image_cache_add+0x78>
  40beec:	mov	w1, #0xffffffff            	// #-1
  40bef0:	bl	404640 <sd_event_source_set_enabled@plt>
  40bef4:	tbnz	w0, #31, 40bf24 <manager_image_cache_add+0x6c>
  40bef8:	str	x19, [x20, #128]
  40befc:	mov	x2, x20
  40bf00:	ldr	x1, [x20, #16]
  40bf04:	ldr	x0, [x19, #24]
  40bf08:	bl	404a70 <hashmap_put@plt>
  40bf0c:	tbnz	w0, #31, 40bf24 <manager_image_cache_add+0x6c>
  40bf10:	mov	x0, x20
  40bf14:	bl	404680 <image_ref@plt>
  40bf18:	ldrb	w1, [x20, #120]
  40bf1c:	mov	w0, #0x0                   	// #0
  40bf20:	tbnz	w1, #1, 40bf64 <manager_image_cache_add+0xac>
  40bf24:	ldp	x19, x20, [sp, #16]
  40bf28:	ldp	x29, x30, [sp], #32
  40bf2c:	ret
  40bf30:	mov	x1, x19
  40bf34:	adrp	x2, 40b000 <bus_image_common_get_metadata+0x130>
  40bf38:	mov	x3, x19
  40bf3c:	add	x2, x2, #0xe10
  40bf40:	ldr	x0, [x1], #32
  40bf44:	bl	4047b0 <sd_event_add_defer@plt>
  40bf48:	tbnz	w0, #31, 40bf24 <manager_image_cache_add+0x6c>
  40bf4c:	ldr	x0, [x19, #32]
  40bf50:	mov	x1, #0x64                  	// #100
  40bf54:	bl	404800 <sd_event_source_set_priority@plt>
  40bf58:	tbnz	w0, #31, 40bf24 <manager_image_cache_add+0x6c>
  40bf5c:	ldr	x0, [x19, #32]
  40bf60:	b	40beec <manager_image_cache_add+0x34>
  40bf64:	ldr	x1, [x20, #8]
  40bf68:	mov	x2, x20
  40bf6c:	ldr	x0, [x19, #24]
  40bf70:	bl	404a70 <hashmap_put@plt>
  40bf74:	tbnz	w0, #31, 40bf24 <manager_image_cache_add+0x6c>
  40bf78:	mov	x0, x20
  40bf7c:	bl	404680 <image_ref@plt>
  40bf80:	mov	w0, #0x0                   	// #0
  40bf84:	b	40bf24 <manager_image_cache_add+0x6c>
  40bf88:	adrp	x4, 40e000 <manager_vtable+0x108>
  40bf8c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40bf90:	adrp	x2, 40e000 <manager_vtable+0x108>
  40bf94:	add	x4, x4, #0xdb8
  40bf98:	add	x1, x1, #0xec8
  40bf9c:	add	x2, x2, #0xd63
  40bfa0:	mov	w3, #0x35                  	// #53
  40bfa4:	mov	w0, #0x0                   	// #0
  40bfa8:	bl	4045c0 <log_assert_failed_realm@plt>
  40bfac:	nop

000000000040bfb0 <manager_image_cache_discover>:
  40bfb0:	stp	x29, x30, [sp, #-80]!
  40bfb4:	mov	x29, sp
  40bfb8:	str	x21, [sp, #32]
  40bfbc:	adrp	x21, 420000 <__FRAME_END__+0xfb68>
  40bfc0:	add	x21, x21, #0x738
  40bfc4:	stp	x19, x20, [sp, #16]
  40bfc8:	ldr	x2, [x21]
  40bfcc:	str	x2, [sp, #72]
  40bfd0:	mov	x2, #0x0                   	// #0
  40bfd4:	cbz	x0, 40c048 <manager_image_cache_discover+0x98>
  40bfd8:	mov	x19, x0
  40bfdc:	mov	x20, x1
  40bfe0:	mov	w0, #0x1                   	// #1
  40bfe4:	bl	404cd0 <image_discover@plt>
  40bfe8:	tbnz	w0, #31, 40c028 <manager_image_cache_discover+0x78>
  40bfec:	mov	w0, #0xfffffffe            	// #-2
  40bff0:	str	w0, [sp, #56]
  40bff4:	str	xzr, [sp, #64]
  40bff8:	b	40c008 <manager_image_cache_discover+0x58>
  40bffc:	ldr	x1, [sp, #48]
  40c000:	mov	x0, x19
  40c004:	bl	40beb8 <manager_image_cache_add>
  40c008:	add	x2, sp, #0x30
  40c00c:	add	x1, sp, #0x38
  40c010:	mov	x0, x20
  40c014:	mov	x3, #0x0                   	// #0
  40c018:	bl	404b40 <internal_hashmap_iterate@plt>
  40c01c:	tst	w0, #0xff
  40c020:	b.ne	40bffc <manager_image_cache_discover+0x4c>  // b.any
  40c024:	mov	w0, #0x0                   	// #0
  40c028:	ldr	x2, [sp, #72]
  40c02c:	ldr	x1, [x21]
  40c030:	eor	x1, x2, x1
  40c034:	cbnz	x1, 40c06c <manager_image_cache_discover+0xbc>
  40c038:	ldp	x19, x20, [sp, #16]
  40c03c:	ldr	x21, [sp, #32]
  40c040:	ldp	x29, x30, [sp], #80
  40c044:	ret
  40c048:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c04c:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40c050:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c054:	add	x4, x4, #0xdd0
  40c058:	add	x1, x1, #0xec8
  40c05c:	add	x2, x2, #0xd63
  40c060:	mov	w3, #0x5b                  	// #91
  40c064:	mov	w0, #0x0                   	// #0
  40c068:	bl	4045c0 <log_assert_failed_realm@plt>
  40c06c:	bl	404880 <__stack_chk_fail@plt>

000000000040c070 <operation_new>:
  40c070:	stp	x29, x30, [sp, #-80]!
  40c074:	mov	x29, sp
  40c078:	stp	x19, x20, [sp, #16]
  40c07c:	stp	x21, x22, [sp, #32]
  40c080:	stp	x23, x24, [sp, #48]
  40c084:	str	x25, [sp, #64]
  40c088:	cbz	x0, 40c1bc <operation_new+0x14c>
  40c08c:	mov	w21, w1
  40c090:	cmp	w1, #0x1
  40c094:	b.le	40c1e0 <operation_new+0x170>
  40c098:	mov	x22, x2
  40c09c:	cbz	x2, 40c204 <operation_new+0x194>
  40c0a0:	mov	w23, w3
  40c0a4:	tbnz	w3, #31, 40c228 <operation_new+0x1b8>
  40c0a8:	mov	x20, x0
  40c0ac:	mov	x25, x4
  40c0b0:	mov	x1, #0x40                  	// #64
  40c0b4:	mov	x0, #0x1                   	// #1
  40c0b8:	bl	404b60 <calloc@plt>
  40c0bc:	mov	x19, x0
  40c0c0:	cbz	x0, 40c24c <operation_new+0x1dc>
  40c0c4:	mov	x5, x0
  40c0c8:	add	x1, x0, #0x20
  40c0cc:	ldr	x0, [x20]
  40c0d0:	mov	w6, #0xffffffff            	// #-1
  40c0d4:	mov	w2, w21
  40c0d8:	adrp	x4, 40c000 <manager_image_cache_discover+0x50>
  40c0dc:	mov	w3, #0x4                   	// #4
  40c0e0:	add	x4, x4, #0x338
  40c0e4:	str	w6, [x19, #28]
  40c0e8:	bl	4042f0 <sd_event_add_child@plt>
  40c0ec:	mov	w24, w0
  40c0f0:	tbnz	w0, #31, 40c168 <operation_new+0xf8>
  40c0f4:	mov	x0, x22
  40c0f8:	str	w21, [x19, #8]
  40c0fc:	bl	404d50 <sd_bus_message_ref@plt>
  40c100:	str	x0, [x19, #16]
  40c104:	ldr	x1, [x20, #40]
  40c108:	str	w23, [x19, #24]
  40c10c:	str	x1, [x19, #48]
  40c110:	cbz	x1, 40c118 <operation_new+0xa8>
  40c114:	str	x19, [x1, #56]
  40c118:	ldr	w1, [x20, #48]
  40c11c:	mov	w0, #0x0                   	// #0
  40c120:	str	x19, [x20, #40]
  40c124:	add	w1, w1, #0x1
  40c128:	str	w1, [x20, #48]
  40c12c:	str	x20, [x19]
  40c130:	str	xzr, [x19, #56]
  40c134:	bl	404d90 <log_get_max_level_realm@plt>
  40c138:	cmp	w0, #0x6
  40c13c:	b.gt	40c18c <operation_new+0x11c>
  40c140:	mov	w24, #0x0                   	// #0
  40c144:	cbz	x25, 40c14c <operation_new+0xdc>
  40c148:	str	x19, [x25]
  40c14c:	mov	w0, w24
  40c150:	ldp	x19, x20, [sp, #16]
  40c154:	ldp	x21, x22, [sp, #32]
  40c158:	ldp	x23, x24, [sp, #48]
  40c15c:	ldr	x25, [sp, #64]
  40c160:	ldp	x29, x30, [sp], #80
  40c164:	ret
  40c168:	mov	x0, x19
  40c16c:	bl	404c10 <free@plt>
  40c170:	mov	w0, w24
  40c174:	ldp	x19, x20, [sp, #16]
  40c178:	ldp	x21, x22, [sp, #32]
  40c17c:	ldp	x23, x24, [sp, #48]
  40c180:	ldr	x25, [sp, #64]
  40c184:	ldp	x29, x30, [sp], #80
  40c188:	ret
  40c18c:	mov	w6, w21
  40c190:	adrp	x5, 40e000 <manager_vtable+0x108>
  40c194:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c198:	add	x5, x5, #0xe40
  40c19c:	add	x4, x4, #0xf60
  40c1a0:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c1a4:	mov	w3, #0x62                  	// #98
  40c1a8:	add	x2, x2, #0xdf3
  40c1ac:	mov	w1, #0x0                   	// #0
  40c1b0:	mov	w0, #0x7                   	// #7
  40c1b4:	bl	4049d0 <log_internal_realm@plt>
  40c1b8:	b	40c140 <operation_new+0xd0>
  40c1bc:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c1c0:	adrp	x1, 40e000 <manager_vtable+0x108>
  40c1c4:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c1c8:	add	x4, x4, #0xf30
  40c1cc:	add	x1, x1, #0xe18
  40c1d0:	add	x2, x2, #0xdf3
  40c1d4:	mov	w3, #0x49                  	// #73
  40c1d8:	mov	w0, #0x0                   	// #0
  40c1dc:	bl	4045c0 <log_assert_failed_realm@plt>
  40c1e0:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c1e4:	adrp	x1, 40e000 <manager_vtable+0x108>
  40c1e8:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c1ec:	add	x4, x4, #0xf30
  40c1f0:	add	x1, x1, #0xe20
  40c1f4:	add	x2, x2, #0xdf3
  40c1f8:	mov	w3, #0x4a                  	// #74
  40c1fc:	mov	w0, #0x0                   	// #0
  40c200:	bl	4045c0 <log_assert_failed_realm@plt>
  40c204:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c208:	adrp	x1, 40d000 <_fini+0x91c>
  40c20c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c210:	add	x4, x4, #0xf30
  40c214:	add	x1, x1, #0xb10
  40c218:	add	x2, x2, #0xdf3
  40c21c:	mov	w3, #0x4b                  	// #75
  40c220:	mov	w0, #0x0                   	// #0
  40c224:	bl	4045c0 <log_assert_failed_realm@plt>
  40c228:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c22c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40c230:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c234:	add	x4, x4, #0xf30
  40c238:	add	x1, x1, #0xe30
  40c23c:	add	x2, x2, #0xdf3
  40c240:	mov	w3, #0x4c                  	// #76
  40c244:	mov	w0, #0x0                   	// #0
  40c248:	bl	4045c0 <log_assert_failed_realm@plt>
  40c24c:	mov	w24, #0xfffffff4            	// #-12
  40c250:	b	40c14c <operation_new+0xdc>
  40c254:	nop

000000000040c258 <operation_free>:
  40c258:	cbz	x0, 40c2f0 <operation_free+0x98>
  40c25c:	stp	x29, x30, [sp, #-32]!
  40c260:	mov	x29, sp
  40c264:	str	x19, [sp, #16]
  40c268:	mov	x19, x0
  40c26c:	ldr	x0, [x0, #32]
  40c270:	bl	4044d0 <sd_event_source_unref@plt>
  40c274:	ldr	w0, [x19, #24]
  40c278:	bl	404530 <safe_close@plt>
  40c27c:	ldr	w0, [x19, #28]
  40c280:	bl	404530 <safe_close@plt>
  40c284:	ldr	w0, [x19, #8]
  40c288:	cmp	w0, #0x1
  40c28c:	b.gt	40c2e8 <operation_free+0x90>
  40c290:	ldr	x0, [x19, #16]
  40c294:	bl	404340 <sd_bus_message_unref@plt>
  40c298:	ldr	x1, [x19]
  40c29c:	cbz	x1, 40c2d0 <operation_free+0x78>
  40c2a0:	ldp	x2, x0, [x19, #48]
  40c2a4:	cbz	x2, 40c2b0 <operation_free+0x58>
  40c2a8:	str	x0, [x2, #56]
  40c2ac:	ldr	x0, [x19, #56]
  40c2b0:	cbz	x0, 40c2f8 <operation_free+0xa0>
  40c2b4:	ldr	x1, [x19, #48]
  40c2b8:	str	x1, [x0, #48]
  40c2bc:	ldr	x1, [x19]
  40c2c0:	stp	xzr, xzr, [x19, #48]
  40c2c4:	ldr	w0, [x1, #48]
  40c2c8:	sub	w0, w0, #0x1
  40c2cc:	str	w0, [x1, #48]
  40c2d0:	mov	x0, x19
  40c2d4:	bl	404c10 <free@plt>
  40c2d8:	mov	x0, #0x0                   	// #0
  40c2dc:	ldr	x19, [sp, #16]
  40c2e0:	ldp	x29, x30, [sp], #32
  40c2e4:	ret
  40c2e8:	bl	4045a0 <sigkill_wait@plt>
  40c2ec:	b	40c290 <operation_free+0x38>
  40c2f0:	mov	x0, #0x0                   	// #0
  40c2f4:	ret
  40c2f8:	ldr	x0, [x1, #40]
  40c2fc:	cmp	x19, x0
  40c300:	b.ne	40c310 <operation_free+0xb8>  // b.any
  40c304:	ldr	x0, [x19, #48]
  40c308:	str	x0, [x1, #40]
  40c30c:	b	40c2bc <operation_free+0x64>
  40c310:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c314:	adrp	x1, 40e000 <manager_vtable+0x108>
  40c318:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c31c:	add	x4, x4, #0xf40
  40c320:	add	x1, x1, #0xe60
  40c324:	add	x2, x2, #0xdf3
  40c328:	mov	w3, #0x7b                  	// #123
  40c32c:	mov	w0, #0x0                   	// #0
  40c330:	bl	4045c0 <log_assert_failed_realm@plt>
  40c334:	nop

000000000040c338 <operation_done>:
  40c338:	sub	sp, sp, #0x70
  40c33c:	stp	x29, x30, [sp, #16]
  40c340:	add	x29, sp, #0x10
  40c344:	stp	x21, x22, [sp, #48]
  40c348:	adrp	x21, 420000 <__FRAME_END__+0xfb68>
  40c34c:	add	x21, x21, #0x738
  40c350:	ldr	x0, [x21]
  40c354:	str	x0, [sp, #104]
  40c358:	mov	x0, #0x0                   	// #0
  40c35c:	stp	x19, x20, [sp, #32]
  40c360:	stp	xzr, xzr, [sp, #80]
  40c364:	str	wzr, [sp, #96]
  40c368:	cbz	x2, 40c548 <operation_done+0x210>
  40c36c:	mov	x20, x1
  40c370:	cbz	x1, 40c568 <operation_done+0x230>
  40c374:	mov	x19, x2
  40c378:	mov	w0, #0x0                   	// #0
  40c37c:	bl	404d90 <log_get_max_level_realm@plt>
  40c380:	cmp	w0, #0x6
  40c384:	b.gt	40c474 <operation_done+0x13c>
  40c388:	str	wzr, [x19, #8]
  40c38c:	ldr	w0, [x20, #8]
  40c390:	cmp	w0, #0x1
  40c394:	b.ne	40c400 <operation_done+0xc8>  // b.any
  40c398:	ldr	w0, [x20, #24]
  40c39c:	cbnz	w0, 40c4b8 <operation_done+0x180>
  40c3a0:	ldr	x3, [x19, #40]
  40c3a4:	str	wzr, [sp, #76]
  40c3a8:	cbz	x3, 40c4f0 <operation_done+0x1b8>
  40c3ac:	ldr	w1, [sp, #76]
  40c3b0:	add	x22, sp, #0x50
  40c3b4:	mov	x2, x22
  40c3b8:	mov	x0, x19
  40c3bc:	blr	x3
  40c3c0:	str	w0, [sp, #76]
  40c3c4:	tbnz	w0, #31, 40c5b0 <operation_done+0x278>
  40c3c8:	mov	x0, x19
  40c3cc:	bl	40c258 <operation_free>
  40c3d0:	mov	x0, x22
  40c3d4:	bl	404950 <sd_bus_error_free@plt>
  40c3d8:	ldr	x1, [sp, #104]
  40c3dc:	ldr	x0, [x21]
  40c3e0:	eor	x0, x1, x0
  40c3e4:	cbnz	x0, 40c5cc <operation_done+0x294>
  40c3e8:	mov	w0, #0x0                   	// #0
  40c3ec:	ldp	x29, x30, [sp, #16]
  40c3f0:	ldp	x19, x20, [sp, #32]
  40c3f4:	ldp	x21, x22, [sp, #48]
  40c3f8:	add	sp, sp, #0x70
  40c3fc:	ret
  40c400:	add	x22, sp, #0x50
  40c404:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c408:	mov	x0, x22
  40c40c:	add	x2, x2, #0xeb0
  40c410:	adrp	x1, 40e000 <manager_vtable+0x108>
  40c414:	add	x1, x1, #0xec8
  40c418:	bl	404860 <sd_bus_error_setf@plt>
  40c41c:	str	w0, [sp, #76]
  40c420:	ldr	x0, [x19, #16]
  40c424:	mov	x1, x22
  40c428:	bl	404ac0 <sd_bus_reply_method_error@plt>
  40c42c:	str	w0, [sp, #76]
  40c430:	mov	w20, w0
  40c434:	tbz	w0, #31, 40c3c8 <operation_done+0x90>
  40c438:	mov	w0, #0x0                   	// #0
  40c43c:	bl	404d90 <log_get_max_level_realm@plt>
  40c440:	cmp	w0, #0x2
  40c444:	b.le	40c3c8 <operation_done+0x90>
  40c448:	mov	w1, w20
  40c44c:	adrp	x5, 40e000 <manager_vtable+0x108>
  40c450:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c454:	add	x5, x5, #0xf00
  40c458:	add	x4, x4, #0xf50
  40c45c:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c460:	mov	w3, #0x3f                  	// #63
  40c464:	add	x2, x2, #0xdf3
  40c468:	mov	w0, #0x3                   	// #3
  40c46c:	bl	4049d0 <log_internal_realm@plt>
  40c470:	b	40c3c8 <operation_done+0x90>
  40c474:	ldr	w0, [x20, #8]
  40c478:	bl	404aa0 <sigchld_code_to_string@plt>
  40c47c:	mov	x7, x0
  40c480:	ldr	w6, [x19, #8]
  40c484:	adrp	x5, 40e000 <manager_vtable+0x108>
  40c488:	ldr	w0, [x20, #24]
  40c48c:	add	x5, x5, #0xe78
  40c490:	str	w0, [sp]
  40c494:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c498:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c49c:	add	x4, x4, #0xf50
  40c4a0:	add	x2, x2, #0xdf3
  40c4a4:	mov	w3, #0x10                  	// #16
  40c4a8:	mov	w1, #0x0                   	// #0
  40c4ac:	mov	w0, #0x7                   	// #7
  40c4b0:	bl	4049d0 <log_internal_realm@plt>
  40c4b4:	b	40c388 <operation_done+0x50>
  40c4b8:	ldr	w0, [x19, #24]
  40c4bc:	add	x1, sp, #0x4c
  40c4c0:	mov	x2, #0x4                   	// #4
  40c4c4:	bl	4047c0 <read@plt>
  40c4c8:	cmp	x0, #0x4
  40c4cc:	b.ne	40c58c <operation_done+0x254>  // b.any
  40c4d0:	ldr	x3, [x19, #40]
  40c4d4:	cbnz	x3, 40c3ac <operation_done+0x74>
  40c4d8:	ldr	w1, [sp, #76]
  40c4dc:	tbz	w1, #31, 40c4f0 <operation_done+0x1b8>
  40c4e0:	add	x22, sp, #0x50
  40c4e4:	mov	x0, x22
  40c4e8:	bl	404d10 <sd_bus_error_set_errno@plt>
  40c4ec:	b	40c420 <operation_done+0xe8>
  40c4f0:	ldr	x0, [x19, #16]
  40c4f4:	mov	x1, #0x0                   	// #0
  40c4f8:	add	x22, sp, #0x50
  40c4fc:	bl	4042a0 <sd_bus_reply_method_return@plt>
  40c500:	str	w0, [sp, #76]
  40c504:	mov	w20, w0
  40c508:	tbz	w0, #31, 40c3c8 <operation_done+0x90>
  40c50c:	mov	w0, #0x0                   	// #0
  40c510:	bl	404d90 <log_get_max_level_realm@plt>
  40c514:	cmp	w0, #0x2
  40c518:	b.le	40c3c8 <operation_done+0x90>
  40c51c:	mov	w1, w20
  40c520:	adrp	x5, 40e000 <manager_vtable+0x108>
  40c524:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c528:	add	x5, x5, #0xf00
  40c52c:	add	x4, x4, #0xf50
  40c530:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c534:	mov	w3, #0x36                  	// #54
  40c538:	add	x2, x2, #0xdf3
  40c53c:	mov	w0, #0x3                   	// #3
  40c540:	bl	4049d0 <log_internal_realm@plt>
  40c544:	b	40c3c8 <operation_done+0x90>
  40c548:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c54c:	adrp	x1, 40d000 <_fini+0x91c>
  40c550:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c554:	add	x4, x4, #0xf20
  40c558:	add	x1, x1, #0xc28
  40c55c:	add	x2, x2, #0xdf3
  40c560:	mov	w3, #0xd                   	// #13
  40c564:	bl	4045c0 <log_assert_failed_realm@plt>
  40c568:	adrp	x4, 40e000 <manager_vtable+0x108>
  40c56c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40c570:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c574:	add	x4, x4, #0xf20
  40c578:	add	x1, x1, #0xe70
  40c57c:	add	x2, x2, #0xdf3
  40c580:	mov	w3, #0xe                   	// #14
  40c584:	mov	w0, #0x0                   	// #0
  40c588:	bl	4045c0 <log_assert_failed_realm@plt>
  40c58c:	add	x22, sp, #0x50
  40c590:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c594:	mov	x0, x22
  40c598:	add	x2, x2, #0xef0
  40c59c:	adrp	x1, 40e000 <manager_vtable+0x108>
  40c5a0:	add	x1, x1, #0xec8
  40c5a4:	bl	404860 <sd_bus_error_setf@plt>
  40c5a8:	str	w0, [sp, #76]
  40c5ac:	b	40c420 <operation_done+0xe8>
  40c5b0:	mov	x0, x22
  40c5b4:	bl	404250 <sd_bus_error_is_set@plt>
  40c5b8:	cbnz	w0, 40c420 <operation_done+0xe8>
  40c5bc:	ldr	w1, [sp, #76]
  40c5c0:	mov	x0, x22
  40c5c4:	bl	404d10 <sd_bus_error_set_errno@plt>
  40c5c8:	b	40c420 <operation_done+0xe8>
  40c5cc:	bl	404880 <__stack_chk_fail@plt>

000000000040c5d0 <check_idle>:
  40c5d0:	ldr	x0, [x0, #40]
  40c5d4:	cmp	x0, #0x0
  40c5d8:	cset	w0, eq  // eq = none
  40c5dc:	ret

000000000040c5e0 <manager_unref>:
  40c5e0:	stp	x29, x30, [sp, #-32]!
  40c5e4:	mov	x29, sp
  40c5e8:	str	x19, [sp, #16]
  40c5ec:	cbz	x0, 40c63c <manager_unref+0x5c>
  40c5f0:	mov	x19, x0
  40c5f4:	mov	x2, #0x0                   	// #0
  40c5f8:	ldr	x0, [x0, #24]
  40c5fc:	mov	x1, #0x0                   	// #0
  40c600:	bl	404280 <internal_hashmap_free@plt>
  40c604:	ldr	x0, [x19, #32]
  40c608:	bl	4044d0 <sd_event_source_unref@plt>
  40c60c:	ldr	x0, [x19, #16]
  40c610:	bl	404430 <bus_verify_polkit_async_registry_free@plt>
  40c614:	ldr	x0, [x19, #8]
  40c618:	bl	404a00 <sd_bus_flush_close_unref@plt>
  40c61c:	ldr	x0, [x19]
  40c620:	bl	404ca0 <sd_event_unref@plt>
  40c624:	mov	x0, x19
  40c628:	bl	404c10 <free@plt>
  40c62c:	mov	x0, #0x0                   	// #0
  40c630:	ldr	x19, [sp, #16]
  40c634:	ldp	x29, x30, [sp], #32
  40c638:	ret
  40c63c:	adrp	x4, 40f000 <__func__.9810+0xa0>
  40c640:	adrp	x1, 40c000 <manager_image_cache_discover+0x50>
  40c644:	adrp	x2, 40e000 <manager_vtable+0x108>
  40c648:	add	x4, x4, #0x278
  40c64c:	add	x1, x1, #0xec8
  40c650:	add	x2, x2, #0xf73
  40c654:	mov	w3, #0x33                  	// #51
  40c658:	mov	w0, #0x0                   	// #0
  40c65c:	bl	4045c0 <log_assert_failed_realm@plt>

000000000040c660 <__libc_csu_init>:
  40c660:	stp	x29, x30, [sp, #-64]!
  40c664:	mov	x29, sp
  40c668:	stp	x19, x20, [sp, #16]
  40c66c:	adrp	x20, 420000 <__FRAME_END__+0xfb68>
  40c670:	add	x20, x20, #0x730
  40c674:	stp	x21, x22, [sp, #32]
  40c678:	adrp	x21, 420000 <__FRAME_END__+0xfb68>
  40c67c:	add	x21, x21, #0x728
  40c680:	sub	x20, x20, x21
  40c684:	mov	w22, w0
  40c688:	stp	x23, x24, [sp, #48]
  40c68c:	mov	x23, x1
  40c690:	mov	x24, x2
  40c694:	bl	404198 <_init>
  40c698:	cmp	xzr, x20, asr #3
  40c69c:	b.eq	40c6c8 <__libc_csu_init+0x68>  // b.none
  40c6a0:	asr	x20, x20, #3
  40c6a4:	mov	x19, #0x0                   	// #0
  40c6a8:	ldr	x3, [x21, x19, lsl #3]
  40c6ac:	mov	x2, x24
  40c6b0:	add	x19, x19, #0x1
  40c6b4:	mov	x1, x23
  40c6b8:	mov	w0, w22
  40c6bc:	blr	x3
  40c6c0:	cmp	x20, x19
  40c6c4:	b.ne	40c6a8 <__libc_csu_init+0x48>  // b.any
  40c6c8:	ldp	x19, x20, [sp, #16]
  40c6cc:	ldp	x21, x22, [sp, #32]
  40c6d0:	ldp	x23, x24, [sp, #48]
  40c6d4:	ldp	x29, x30, [sp], #64
  40c6d8:	ret
  40c6dc:	nop

000000000040c6e0 <__libc_csu_fini>:
  40c6e0:	ret

Disassembly of section .fini:

000000000040c6e4 <_fini>:
  40c6e4:	stp	x29, x30, [sp, #-16]!
  40c6e8:	mov	x29, sp
  40c6ec:	ldp	x29, x30, [sp], #16
  40c6f0:	ret
