
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ls_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402370 <.init>:
  402370:	stp	x29, x30, [sp, #-16]!
  402374:	mov	x29, sp
  402378:	bl	4041c4 <__fxstatat@plt+0x1774>
  40237c:	ldp	x29, x30, [sp], #16
  402380:	ret

Disassembly of section .plt:

0000000000402390 <mbrtowc@plt-0x20>:
  402390:	stp	x16, x30, [sp, #-16]!
  402394:	adrp	x16, 432000 <_obstack_memory_used@@Base+0x1af80>
  402398:	ldr	x17, [x16, #4088]
  40239c:	add	x16, x16, #0xff8
  4023a0:	br	x17
  4023a4:	nop
  4023a8:	nop
  4023ac:	nop

00000000004023b0 <mbrtowc@plt>:
  4023b0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16]
  4023b8:	add	x16, x16, #0x0
  4023bc:	br	x17

00000000004023c0 <memcpy@plt>:
  4023c0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #8]
  4023c8:	add	x16, x16, #0x8
  4023cc:	br	x17

00000000004023d0 <memmove@plt>:
  4023d0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #16]
  4023d8:	add	x16, x16, #0x10
  4023dc:	br	x17

00000000004023e0 <cap_to_text@plt>:
  4023e0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #24]
  4023e8:	add	x16, x16, #0x18
  4023ec:	br	x17

00000000004023f0 <_exit@plt>:
  4023f0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #32]
  4023f8:	add	x16, x16, #0x20
  4023fc:	br	x17

0000000000402400 <getcwd@plt>:
  402400:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #40]
  402408:	add	x16, x16, #0x28
  40240c:	br	x17

0000000000402410 <fwrite_unlocked@plt>:
  402410:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #48]
  402418:	add	x16, x16, #0x30
  40241c:	br	x17

0000000000402420 <strtoul@plt>:
  402420:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #56]
  402428:	add	x16, x16, #0x38
  40242c:	br	x17

0000000000402430 <strlen@plt>:
  402430:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #64]
  402438:	add	x16, x16, #0x40
  40243c:	br	x17

0000000000402440 <__sprintf_chk@plt>:
  402440:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #72]
  402448:	add	x16, x16, #0x48
  40244c:	br	x17

0000000000402450 <mbstowcs@plt>:
  402450:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #80]
  402458:	add	x16, x16, #0x50
  40245c:	br	x17

0000000000402460 <exit@plt>:
  402460:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #88]
  402468:	add	x16, x16, #0x58
  40246c:	br	x17

0000000000402470 <_setjmp@plt>:
  402470:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #96]
  402478:	add	x16, x16, #0x60
  40247c:	br	x17

0000000000402480 <raise@plt>:
  402480:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #104]
  402488:	add	x16, x16, #0x68
  40248c:	br	x17

0000000000402490 <error@plt>:
  402490:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #112]
  402498:	add	x16, x16, #0x70
  40249c:	br	x17

00000000004024a0 <sigprocmask@plt>:
  4024a0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #120]
  4024a8:	add	x16, x16, #0x78
  4024ac:	br	x17

00000000004024b0 <localtime_r@plt>:
  4024b0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #128]
  4024b8:	add	x16, x16, #0x80
  4024bc:	br	x17

00000000004024c0 <setenv@plt>:
  4024c0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #136]
  4024c8:	add	x16, x16, #0x88
  4024cc:	br	x17

00000000004024d0 <readlink@plt>:
  4024d0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #144]
  4024d8:	add	x16, x16, #0x90
  4024dc:	br	x17

00000000004024e0 <getgrnam@plt>:
  4024e0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #152]
  4024e8:	add	x16, x16, #0x98
  4024ec:	br	x17

00000000004024f0 <opendir@plt>:
  4024f0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #160]
  4024f8:	add	x16, x16, #0xa0
  4024fc:	br	x17

0000000000402500 <strftime@plt>:
  402500:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #168]
  402508:	add	x16, x16, #0xa8
  40250c:	br	x17

0000000000402510 <__cxa_atexit@plt>:
  402510:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #176]
  402518:	add	x16, x16, #0xb0
  40251c:	br	x17

0000000000402520 <iswcntrl@plt>:
  402520:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #184]
  402528:	add	x16, x16, #0xb8
  40252c:	br	x17

0000000000402530 <clock_gettime@plt>:
  402530:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #192]
  402538:	add	x16, x16, #0xc0
  40253c:	br	x17

0000000000402540 <lseek@plt>:
  402540:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #200]
  402548:	add	x16, x16, #0xc8
  40254c:	br	x17

0000000000402550 <__fpending@plt>:
  402550:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #208]
  402558:	add	x16, x16, #0xd0
  40255c:	br	x17

0000000000402560 <__ctype_tolower_loc@plt>:
  402560:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #216]
  402568:	add	x16, x16, #0xd8
  40256c:	br	x17

0000000000402570 <snprintf@plt>:
  402570:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #224]
  402578:	add	x16, x16, #0xe0
  40257c:	br	x17

0000000000402580 <localeconv@plt>:
  402580:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #232]
  402588:	add	x16, x16, #0xe8
  40258c:	br	x17

0000000000402590 <fileno@plt>:
  402590:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #240]
  402598:	add	x16, x16, #0xf0
  40259c:	br	x17

00000000004025a0 <__memcpy_chk@plt>:
  4025a0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #248]
  4025a8:	add	x16, x16, #0xf8
  4025ac:	br	x17

00000000004025b0 <signal@plt>:
  4025b0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #256]
  4025b8:	add	x16, x16, #0x100
  4025bc:	br	x17

00000000004025c0 <__snprintf_chk@plt>:
  4025c0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #264]
  4025c8:	add	x16, x16, #0x108
  4025cc:	br	x17

00000000004025d0 <fclose@plt>:
  4025d0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #272]
  4025d8:	add	x16, x16, #0x110
  4025dc:	br	x17

00000000004025e0 <nl_langinfo@plt>:
  4025e0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #280]
  4025e8:	add	x16, x16, #0x118
  4025ec:	br	x17

00000000004025f0 <malloc@plt>:
  4025f0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #288]
  4025f8:	add	x16, x16, #0x120
  4025fc:	br	x17

0000000000402600 <wcwidth@plt>:
  402600:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #296]
  402608:	add	x16, x16, #0x128
  40260c:	br	x17

0000000000402610 <tzset@plt>:
  402610:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #304]
  402618:	add	x16, x16, #0x130
  40261c:	br	x17

0000000000402620 <wcswidth@plt>:
  402620:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #312]
  402628:	add	x16, x16, #0x138
  40262c:	br	x17

0000000000402630 <sigemptyset@plt>:
  402630:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #320]
  402638:	add	x16, x16, #0x140
  40263c:	br	x17

0000000000402640 <strncmp@plt>:
  402640:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #328]
  402648:	add	x16, x16, #0x148
  40264c:	br	x17

0000000000402650 <bindtextdomain@plt>:
  402650:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #336]
  402658:	add	x16, x16, #0x150
  40265c:	br	x17

0000000000402660 <__libc_start_main@plt>:
  402660:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #344]
  402668:	add	x16, x16, #0x158
  40266c:	br	x17

0000000000402670 <__printf_chk@plt>:
  402670:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #352]
  402678:	add	x16, x16, #0x160
  40267c:	br	x17

0000000000402680 <memset@plt>:
  402680:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #360]
  402688:	add	x16, x16, #0x168
  40268c:	br	x17

0000000000402690 <getpwnam@plt>:
  402690:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #368]
  402698:	add	x16, x16, #0x170
  40269c:	br	x17

00000000004026a0 <gmtime_r@plt>:
  4026a0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #376]
  4026a8:	add	x16, x16, #0x178
  4026ac:	br	x17

00000000004026b0 <__strtoul_internal@plt>:
  4026b0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #384]
  4026b8:	add	x16, x16, #0x180
  4026bc:	br	x17

00000000004026c0 <calloc@plt>:
  4026c0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #392]
  4026c8:	add	x16, x16, #0x188
  4026cc:	br	x17

00000000004026d0 <readdir@plt>:
  4026d0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #400]
  4026d8:	add	x16, x16, #0x190
  4026dc:	br	x17

00000000004026e0 <realloc@plt>:
  4026e0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #408]
  4026e8:	add	x16, x16, #0x198
  4026ec:	br	x17

00000000004026f0 <__ctype_toupper_loc@plt>:
  4026f0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #416]
  4026f8:	add	x16, x16, #0x1a0
  4026fc:	br	x17

0000000000402700 <closedir@plt>:
  402700:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #424]
  402708:	add	x16, x16, #0x1a8
  40270c:	br	x17

0000000000402710 <sigaction@plt>:
  402710:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #432]
  402718:	add	x16, x16, #0x1b0
  40271c:	br	x17

0000000000402720 <strrchr@plt>:
  402720:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #440]
  402728:	add	x16, x16, #0x1b8
  40272c:	br	x17

0000000000402730 <tcgetpgrp@plt>:
  402730:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #448]
  402738:	add	x16, x16, #0x1c0
  40273c:	br	x17

0000000000402740 <__gmon_start__@plt>:
  402740:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #456]
  402748:	add	x16, x16, #0x1c8
  40274c:	br	x17

0000000000402750 <mktime@plt>:
  402750:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #464]
  402758:	add	x16, x16, #0x1d0
  40275c:	br	x17

0000000000402760 <abort@plt>:
  402760:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #472]
  402768:	add	x16, x16, #0x1d8
  40276c:	br	x17

0000000000402770 <mbsinit@plt>:
  402770:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #480]
  402778:	add	x16, x16, #0x1e0
  40277c:	br	x17

0000000000402780 <__overflow@plt>:
  402780:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #488]
  402788:	add	x16, x16, #0x1e8
  40278c:	br	x17

0000000000402790 <getxattr@plt>:
  402790:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #496]
  402798:	add	x16, x16, #0x1f0
  40279c:	br	x17

00000000004027a0 <memcmp@plt>:
  4027a0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #504]
  4027a8:	add	x16, x16, #0x1f8
  4027ac:	br	x17

00000000004027b0 <textdomain@plt>:
  4027b0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #512]
  4027b8:	add	x16, x16, #0x200
  4027bc:	br	x17

00000000004027c0 <stpncpy@plt>:
  4027c0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #520]
  4027c8:	add	x16, x16, #0x208
  4027cc:	br	x17

00000000004027d0 <getopt_long@plt>:
  4027d0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #528]
  4027d8:	add	x16, x16, #0x210
  4027dc:	br	x17

00000000004027e0 <__fprintf_chk@plt>:
  4027e0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #536]
  4027e8:	add	x16, x16, #0x218
  4027ec:	br	x17

00000000004027f0 <sigismember@plt>:
  4027f0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #544]
  4027f8:	add	x16, x16, #0x220
  4027fc:	br	x17

0000000000402800 <strcmp@plt>:
  402800:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #552]
  402808:	add	x16, x16, #0x228
  40280c:	br	x17

0000000000402810 <getpwuid@plt>:
  402810:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #560]
  402818:	add	x16, x16, #0x230
  40281c:	br	x17

0000000000402820 <__ctype_b_loc@plt>:
  402820:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #568]
  402828:	add	x16, x16, #0x238
  40282c:	br	x17

0000000000402830 <fseeko@plt>:
  402830:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #576]
  402838:	add	x16, x16, #0x240
  40283c:	br	x17

0000000000402840 <free@plt>:
  402840:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #584]
  402848:	add	x16, x16, #0x248
  40284c:	br	x17

0000000000402850 <__ctype_get_mb_cur_max@plt>:
  402850:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #592]
  402858:	add	x16, x16, #0x250
  40285c:	br	x17

0000000000402860 <mempcpy@plt>:
  402860:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #600]
  402868:	add	x16, x16, #0x258
  40286c:	br	x17

0000000000402870 <strspn@plt>:
  402870:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #608]
  402878:	add	x16, x16, #0x260
  40287c:	br	x17

0000000000402880 <strchr@plt>:
  402880:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #616]
  402888:	add	x16, x16, #0x268
  40288c:	br	x17

0000000000402890 <fwrite@plt>:
  402890:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #624]
  402898:	add	x16, x16, #0x270
  40289c:	br	x17

00000000004028a0 <fnmatch@plt>:
  4028a0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #632]
  4028a8:	add	x16, x16, #0x278
  4028ac:	br	x17

00000000004028b0 <fflush_unlocked@plt>:
  4028b0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #640]
  4028b8:	add	x16, x16, #0x280
  4028bc:	br	x17

00000000004028c0 <fflush@plt>:
  4028c0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #648]
  4028c8:	add	x16, x16, #0x288
  4028cc:	br	x17

00000000004028d0 <strcpy@plt>:
  4028d0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #656]
  4028d8:	add	x16, x16, #0x290
  4028dc:	br	x17

00000000004028e0 <dirfd@plt>:
  4028e0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #664]
  4028e8:	add	x16, x16, #0x298
  4028ec:	br	x17

00000000004028f0 <unsetenv@plt>:
  4028f0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #672]
  4028f8:	add	x16, x16, #0x2a0
  4028fc:	br	x17

0000000000402900 <__lxstat@plt>:
  402900:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #680]
  402908:	add	x16, x16, #0x2a8
  40290c:	br	x17

0000000000402910 <cap_get_file@plt>:
  402910:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #688]
  402918:	add	x16, x16, #0x2b0
  40291c:	br	x17

0000000000402920 <isatty@plt>:
  402920:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #696]
  402928:	add	x16, x16, #0x2b8
  40292c:	br	x17

0000000000402930 <wcstombs@plt>:
  402930:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #704]
  402938:	add	x16, x16, #0x2c0
  40293c:	br	x17

0000000000402940 <gethostname@plt>:
  402940:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #712]
  402948:	add	x16, x16, #0x2c8
  40294c:	br	x17

0000000000402950 <cap_free@plt>:
  402950:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #720]
  402958:	add	x16, x16, #0x2d0
  40295c:	br	x17

0000000000402960 <__fxstat@plt>:
  402960:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #728]
  402968:	add	x16, x16, #0x2d8
  40296c:	br	x17

0000000000402970 <dcgettext@plt>:
  402970:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #736]
  402978:	add	x16, x16, #0x2e0
  40297c:	br	x17

0000000000402980 <fputs_unlocked@plt>:
  402980:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #744]
  402988:	add	x16, x16, #0x2e8
  40298c:	br	x17

0000000000402990 <strcoll@plt>:
  402990:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #752]
  402998:	add	x16, x16, #0x2f0
  40299c:	br	x17

00000000004029a0 <__freading@plt>:
  4029a0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #760]
  4029a8:	add	x16, x16, #0x2f8
  4029ac:	br	x17

00000000004029b0 <sigaddset@plt>:
  4029b0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #768]
  4029b8:	add	x16, x16, #0x300
  4029bc:	br	x17

00000000004029c0 <iswprint@plt>:
  4029c0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #776]
  4029c8:	add	x16, x16, #0x308
  4029cc:	br	x17

00000000004029d0 <__assert_fail@plt>:
  4029d0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #784]
  4029d8:	add	x16, x16, #0x310
  4029dc:	br	x17

00000000004029e0 <__errno_location@plt>:
  4029e0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #792]
  4029e8:	add	x16, x16, #0x318
  4029ec:	br	x17

00000000004029f0 <getenv@plt>:
  4029f0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #800]
  4029f8:	add	x16, x16, #0x320
  4029fc:	br	x17

0000000000402a00 <__xstat@plt>:
  402a00:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #808]
  402a08:	add	x16, x16, #0x328
  402a0c:	br	x17

0000000000402a10 <getgrgid@plt>:
  402a10:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #816]
  402a18:	add	x16, x16, #0x330
  402a1c:	br	x17

0000000000402a20 <timegm@plt>:
  402a20:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #824]
  402a28:	add	x16, x16, #0x338
  402a2c:	br	x17

0000000000402a30 <ioctl@plt>:
  402a30:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #832]
  402a38:	add	x16, x16, #0x340
  402a3c:	br	x17

0000000000402a40 <setlocale@plt>:
  402a40:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #840]
  402a48:	add	x16, x16, #0x348
  402a4c:	br	x17

0000000000402a50 <__fxstatat@plt>:
  402a50:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #848]
  402a58:	add	x16, x16, #0x350
  402a5c:	br	x17

Disassembly of section .text:

0000000000402a60 <_obstack_begin@@Base-0x14210>:
  402a60:	stp	x29, x30, [sp, #-160]!
  402a64:	mov	x29, sp
  402a68:	stp	x23, x24, [sp, #48]
  402a6c:	mov	w23, w0
  402a70:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  402a74:	stp	x19, x20, [sp, #16]
  402a78:	add	x19, x0, #0x5e0
  402a7c:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x1f80>
  402a80:	ldr	x0, [x1]
  402a84:	stp	x21, x22, [sp, #32]
  402a88:	mov	x22, x1
  402a8c:	stp	x25, x26, [sp, #64]
  402a90:	add	x20, x20, #0x230
  402a94:	mov	w21, #0x2                   	// #2
  402a98:	stp	x27, x28, [sp, #80]
  402a9c:	bl	411b40 <__fxstatat@plt+0xf0f0>
  402aa0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  402aa4:	add	x0, x0, #0x58
  402aa8:	str	x0, [sp, #96]
  402aac:	mov	x1, x0
  402ab0:	mov	w0, #0x6                   	// #6
  402ab4:	bl	402a40 <setlocale@plt>
  402ab8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  402abc:	add	x1, x1, #0x368
  402ac0:	mov	x0, x20
  402ac4:	bl	402650 <bindtextdomain@plt>
  402ac8:	mov	x0, x20
  402acc:	adrp	x20, 434000 <__progname@@GLIBC_2.17+0xa38>
  402ad0:	bl	4027b0 <textdomain@plt>
  402ad4:	add	x20, x20, #0x6e0
  402ad8:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  402adc:	adrp	x0, 40c000 <__fxstatat@plt+0x95b0>
  402ae0:	add	x0, x0, #0x40
  402ae4:	str	w21, [x1, #1328]
  402ae8:	bl	4191d8 <_obstack_memory_used@@Base+0x2158>
  402aec:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  402af0:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x1bf80>
  402af4:	mov	w1, #0x1                   	// #1
  402af8:	stur	wzr, [x20, #-188]
  402afc:	ldr	q0, [x0, #2720]
  402b00:	add	x0, x19, #0x1, lsl #12
  402b04:	ldr	w24, [x2, #1308]
  402b08:	sturb	w1, [x20, #-63]
  402b0c:	strb	wzr, [x19, #3632]
  402b10:	cmp	w24, w21
  402b14:	str	xzr, [x19, #3696]
  402b18:	stur	q0, [x0, #-56]
  402b1c:	b.eq	403728 <__fxstatat@plt+0xcd8>  // b.none
  402b20:	cmp	w24, #0x3
  402b24:	b.ne	402ca4 <__fxstatat@plt+0x254>  // b.any
  402b28:	mov	w1, #0x7                   	// #7
  402b2c:	mov	x0, #0x0                   	// #0
  402b30:	str	wzr, [x19, #3636]
  402b34:	bl	413168 <__fxstatat@plt+0x10718>
  402b38:	mov	w1, #0x1                   	// #1
  402b3c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  402b40:	add	x0, x0, #0x380
  402b44:	stur	w1, [x20, #-196]
  402b48:	sturb	wzr, [x20, #-168]
  402b4c:	sturb	wzr, [x20, #-64]
  402b50:	str	wzr, [x20, #40]
  402b54:	stp	xzr, xzr, [x20, #48]
  402b58:	str	wzr, [x19, #3144]
  402b5c:	str	wzr, [x19, #3472]
  402b60:	strb	wzr, [x19, #3477]
  402b64:	strb	wzr, [x19, #3635]
  402b68:	strb	wzr, [x19, #3644]
  402b6c:	strb	wzr, [x19, #3664]
  402b70:	str	wzr, [x19, #3680]
  402b74:	strb	wzr, [x19, #4000]
  402b78:	bl	4029f0 <getenv@plt>
  402b7c:	mov	x21, x0
  402b80:	cbz	x0, 402bb0 <__fxstatat@plt+0x160>
  402b84:	adrp	x24, 41e000 <_obstack_memory_used@@Base+0x6f80>
  402b88:	add	x24, x24, #0x1c0
  402b8c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  402b90:	mov	x2, x24
  402b94:	add	x1, x1, #0x1f0
  402b98:	mov	x3, #0x4                   	// #4
  402b9c:	bl	40b558 <__fxstatat@plt+0x8b08>
  402ba0:	tbnz	w0, #31, 403620 <__fxstatat@plt+0xbd0>
  402ba4:	ldr	w1, [x24, w0, sxtw #2]
  402ba8:	mov	x0, #0x0                   	// #0
  402bac:	bl	413168 <__fxstatat@plt+0x10718>
  402bb0:	mov	x1, #0x50                  	// #80
  402bb4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  402bb8:	add	x0, x0, #0x3d8
  402bbc:	str	x1, [x19, #8]
  402bc0:	bl	4029f0 <getenv@plt>
  402bc4:	mov	x21, x0
  402bc8:	cbz	x0, 402bd4 <__fxstatat@plt+0x184>
  402bcc:	ldrb	w1, [x0]
  402bd0:	cbnz	w1, 40367c <__fxstatat@plt+0xc2c>
  402bd4:	add	x2, sp, #0x90
  402bd8:	mov	x1, #0x5413                	// #21523
  402bdc:	mov	w0, #0x1                   	// #1
  402be0:	bl	402a30 <ioctl@plt>
  402be4:	cmn	w0, #0x1
  402be8:	b.eq	402bf4 <__fxstatat@plt+0x1a4>  // b.none
  402bec:	ldrh	w0, [sp, #146]
  402bf0:	cbnz	w0, 403614 <__fxstatat@plt+0xbc4>
  402bf4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  402bf8:	add	x0, x0, #0x420
  402bfc:	bl	4029f0 <getenv@plt>
  402c00:	mov	x21, x0
  402c04:	mov	x1, #0x8                   	// #8
  402c08:	str	x1, [x19, #3480]
  402c0c:	cbz	x0, 402c30 <__fxstatat@plt+0x1e0>
  402c10:	add	x3, sp, #0x90
  402c14:	mov	x4, #0x0                   	// #0
  402c18:	mov	w2, #0x0                   	// #0
  402c1c:	mov	x1, #0x0                   	// #0
  402c20:	bl	416198 <__fxstatat@plt+0x13748>
  402c24:	cbnz	w0, 403798 <__fxstatat@plt+0xd48>
  402c28:	ldr	x0, [sp, #144]
  402c2c:	str	x0, [x19, #3480]
  402c30:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0x3f80>
  402c34:	adrp	x25, 41b000 <_obstack_memory_used@@Base+0x3f80>
  402c38:	adrp	x24, 41b000 <_obstack_memory_used@@Base+0x3f80>
  402c3c:	add	x21, x21, #0xe80
  402c40:	add	x25, x25, #0x468
  402c44:	add	x24, x24, #0xc50
  402c48:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  402c4c:	mov	w27, #0x0                   	// #0
  402c50:	add	x0, x0, #0x370
  402c54:	mov	x28, #0x0                   	// #0
  402c58:	mov	w26, #0xffffffff            	// #-1
  402c5c:	str	wzr, [sp, #104]
  402c60:	str	x0, [sp, #112]
  402c64:	add	x4, sp, #0x90
  402c68:	add	x3, x21, #0x308
  402c6c:	mov	x2, x25
  402c70:	mov	x1, x22
  402c74:	mov	w0, w23
  402c78:	str	w26, [sp, #144]
  402c7c:	bl	4027d0 <getopt_long@plt>
  402c80:	cmn	w0, #0x1
  402c84:	b.eq	402cd8 <__fxstatat@plt+0x288>  // b.none
  402c88:	add	w0, w0, #0x3
  402c8c:	cmp	w0, #0x113
  402c90:	b.hi	403ee8 <__fxstatat@plt+0x1498>  // b.pmore
  402c94:	ldrh	w0, [x24, w0, uxtw #1]
  402c98:	adr	x1, 402ca4 <__fxstatat@plt+0x254>
  402c9c:	add	x0, x1, w0, sxth #2
  402ca0:	br	x0
  402ca4:	cmp	w24, #0x1
  402ca8:	b.ne	404170 <__fxstatat@plt+0x1720>  // b.any
  402cac:	mov	w0, w24
  402cb0:	bl	402920 <isatty@plt>
  402cb4:	cbnz	w0, 4038d8 <__fxstatat@plt+0xe88>
  402cb8:	str	w24, [x19, #3636]
  402cbc:	b	402b38 <__fxstatat@plt+0xe8>
  402cc0:	mov	w27, #0x1                   	// #1
  402cc4:	b	402c64 <__fxstatat@plt+0x214>
  402cc8:	ldr	x0, [sp, #112]
  402ccc:	strb	wzr, [x0, #401]
  402cd0:	str	wzr, [x19, #3636]
  402cd4:	b	402c64 <__fxstatat@plt+0x214>
  402cd8:	ldr	x0, [x19, #3648]
  402cdc:	cbz	x0, 4037d0 <__fxstatat@plt+0xd80>
  402ce0:	ldr	x2, [x19, #8]
  402ce4:	mov	x1, #0x3                   	// #3
  402ce8:	mov	x0, #0x0                   	// #0
  402cec:	udiv	x1, x2, x1
  402cf0:	add	x3, x1, x1, lsl #1
  402cf4:	cmp	x2, x3
  402cf8:	cinc	x1, x1, ne  // ne = any
  402cfc:	str	x1, [x19, #3096]
  402d00:	bl	413148 <__fxstatat@plt+0x106f8>
  402d04:	mov	w24, w0
  402d08:	ldr	w1, [x19, #3636]
  402d0c:	cmp	w1, #0x4
  402d10:	ccmp	w1, #0x1, #0x4, ne  // ne = any
  402d14:	b.ne	403658 <__fxstatat@plt+0xc08>  // b.any
  402d18:	mov	w1, #0x0                   	// #0
  402d1c:	mov	x0, #0x0                   	// #0
  402d20:	strb	w1, [x19, #3633]
  402d24:	bl	4130f8 <__fxstatat@plt+0x106a8>
  402d28:	str	x0, [x19, #3672]
  402d2c:	cmp	w24, #0x7
  402d30:	b.eq	403d4c <__fxstatat@plt+0x12fc>  // b.none
  402d34:	ldr	w0, [x19, #3680]
  402d38:	cmp	w0, #0x1
  402d3c:	b.ls	402d6c <__fxstatat@plt+0x31c>  // b.plast
  402d40:	sub	w0, w0, #0x2
  402d44:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  402d48:	add	x1, x1, #0x588
  402d4c:	add	x24, x0, x1
  402d50:	ldrb	w1, [x1, x0]
  402d54:	cbz	w1, 402d6c <__fxstatat@plt+0x31c>
  402d58:	ldr	x0, [x19, #3672]
  402d5c:	mov	w2, #0x1                   	// #1
  402d60:	bl	413188 <__fxstatat@plt+0x10738>
  402d64:	ldrb	w1, [x24, #1]!
  402d68:	cbnz	w1, 402d58 <__fxstatat@plt+0x308>
  402d6c:	mov	x0, #0x0                   	// #0
  402d70:	bl	4130f8 <__fxstatat@plt+0x106a8>
  402d74:	mov	w2, #0x1                   	// #1
  402d78:	mov	w1, #0x3a                  	// #58
  402d7c:	str	x0, [x20, #32]
  402d80:	bl	413188 <__fxstatat@plt+0x10738>
  402d84:	ldrb	w0, [x19, #3968]
  402d88:	cbz	w0, 402d98 <__fxstatat@plt+0x348>
  402d8c:	ldr	w0, [x19, #3636]
  402d90:	cbz	w0, 4036e8 <__fxstatat@plt+0xc98>
  402d94:	strb	wzr, [x19, #3968]
  402d98:	ldr	w1, [sp, #104]
  402d9c:	ldr	w0, [x19, #3472]
  402da0:	cmp	w1, #0x0
  402da4:	ldr	w1, [x19, #3636]
  402da8:	sub	w0, w0, #0x1
  402dac:	ccmp	w0, #0x1, #0x2, eq  // eq = none
  402db0:	b.ls	403df8 <__fxstatat@plt+0x13a8>  // b.plast
  402db4:	cbz	w1, 4036f0 <__fxstatat@plt+0xca0>
  402db8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  402dbc:	ldr	w25, [x0, #1464]
  402dc0:	ldrb	w0, [x19, #3969]
  402dc4:	cbnz	w0, 40393c <__fxstatat@plt+0xeec>
  402dc8:	ldrb	w0, [x19, #3476]
  402dcc:	cbz	w0, 402dd8 <__fxstatat@plt+0x388>
  402dd0:	mov	w0, #0x1                   	// #1
  402dd4:	sturb	w0, [x20, #-192]
  402dd8:	ldur	w0, [x20, #-196]
  402ddc:	cmp	w0, #0x1
  402de0:	b.eq	40390c <__fxstatat@plt+0xebc>  // b.none
  402de4:	ldurb	w0, [x20, #-64]
  402de8:	cbz	w0, 402e38 <__fxstatat@plt+0x3e8>
  402dec:	adrp	x4, 404000 <__fxstatat@plt+0x15b0>
  402df0:	adrp	x3, 404000 <__fxstatat@plt+0x15b0>
  402df4:	add	x4, x4, #0x588
  402df8:	add	x3, x3, #0x290
  402dfc:	adrp	x2, 404000 <__fxstatat@plt+0x15b0>
  402e00:	mov	x1, #0x0                   	// #0
  402e04:	add	x2, x2, #0x280
  402e08:	mov	x0, #0x1e                  	// #30
  402e0c:	bl	40d728 <__fxstatat@plt+0xacd8>
  402e10:	str	x0, [x19, #3688]
  402e14:	cbz	x0, 404118 <__fxstatat@plt+0x16c8>
  402e18:	adrp	x4, 402000 <mbrtowc@plt-0x3b0>
  402e1c:	adrp	x3, 402000 <mbrtowc@plt-0x3b0>
  402e20:	add	x4, x4, #0x840
  402e24:	add	x3, x3, #0x5f0
  402e28:	sub	x0, x20, #0x98
  402e2c:	mov	x2, #0x0                   	// #0
  402e30:	mov	x1, #0x0                   	// #0
  402e34:	bl	416c70 <_obstack_begin@@Base>
  402e38:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  402e3c:	add	x0, x0, #0x6c8
  402e40:	bl	4029f0 <getenv@plt>
  402e44:	bl	4173d8 <_obstack_memory_used@@Base+0x358>
  402e48:	str	x0, [x19, #4032]
  402e4c:	ldr	w1, [x19, #3144]
  402e50:	sub	w1, w1, #0x2
  402e54:	tst	w1, #0xfffffffd
  402e58:	b.eq	402e64 <__fxstatat@plt+0x414>  // b.none
  402e5c:	ldr	w0, [x19, #3636]
  402e60:	cbnz	w0, 403818 <__fxstatat@plt+0xdc8>
  402e64:	mov	w1, #0x1                   	// #1
  402e68:	mov	w0, #0x0                   	// #0
  402e6c:	sturb	w1, [x20, #-199]
  402e70:	ldrb	w1, [x19, #3968]
  402e74:	and	w0, w0, #0x1
  402e78:	sturb	w0, [x20, #-198]
  402e7c:	cbnz	w1, 403c00 <__fxstatat@plt+0x11b0>
  402e80:	ldurb	w0, [x20, #-200]
  402e84:	cbnz	w0, 403b5c <__fxstatat@plt+0x110c>
  402e88:	mov	x1, #0x64                  	// #100
  402e8c:	mov	x0, #0x47e0                	// #18400
  402e90:	stur	x1, [x20, #-208]
  402e94:	sub	w24, w23, w25
  402e98:	bl	415c40 <__fxstatat@plt+0x131f0>
  402e9c:	str	x0, [x19, #3152]
  402ea0:	add	x0, x19, #0xfac
  402ea4:	str	xzr, [x19, #3104]
  402ea8:	strb	wzr, [x19, #3634]
  402eac:	cmp	w24, #0x0
  402eb0:	str	wzr, [x19, #3640]
  402eb4:	stp	wzr, wzr, [x0, #-8]
  402eb8:	stp	wzr, wzr, [x0]
  402ebc:	str	wzr, [x19, #3660]
  402ec0:	str	wzr, [x19, #3668]
  402ec4:	strb	wzr, [x19, #3984]
  402ec8:	str	wzr, [x19, #3988]
  402ecc:	str	wzr, [x19, #3996]
  402ed0:	str	wzr, [x19, #4020]
  402ed4:	b.le	40373c <__fxstatat@plt+0xcec>
  402ed8:	sxtw	x25, w25
  402edc:	nop
  402ee0:	ldr	x0, [x22, x25, lsl #3]
  402ee4:	mov	w2, #0x1                   	// #1
  402ee8:	ldr	x3, [sp, #96]
  402eec:	add	x25, x25, #0x1
  402ef0:	mov	w1, #0x0                   	// #0
  402ef4:	bl	4096a8 <__fxstatat@plt+0x6c58>
  402ef8:	cmp	w23, w25
  402efc:	b.gt	402ee0 <__fxstatat@plt+0x490>
  402f00:	ldr	x0, [x19, #3104]
  402f04:	cbnz	x0, 403b08 <__fxstatat@plt+0x10b8>
  402f08:	cmp	w24, #0x1
  402f0c:	b.le	403780 <__fxstatat@plt+0xd30>
  402f10:	ldr	x22, [x19, #3696]
  402f14:	cbz	x22, 402fbc <__fxstatat@plt+0x56c>
  402f18:	mov	w23, #0x1                   	// #1
  402f1c:	b	402f50 <__fxstatat@plt+0x500>
  402f20:	ldrb	w2, [x22, #16]
  402f24:	ldr	x1, [x22, #8]
  402f28:	bl	40a588 <__fxstatat@plt+0x7b38>
  402f2c:	ldr	x0, [x22]
  402f30:	bl	402840 <free@plt>
  402f34:	ldr	x0, [x22, #8]
  402f38:	bl	402840 <free@plt>
  402f3c:	mov	x0, x22
  402f40:	bl	402840 <free@plt>
  402f44:	ldr	x22, [x19, #3696]
  402f48:	sturb	w23, [x20, #-63]
  402f4c:	cbz	x22, 402fbc <__fxstatat@plt+0x56c>
  402f50:	ldr	x1, [x19, #3688]
  402f54:	ldr	x0, [x22, #24]
  402f58:	str	x0, [x19, #3696]
  402f5c:	ldr	x0, [x22]
  402f60:	cbz	x1, 402f20 <__fxstatat@plt+0x4d0>
  402f64:	cbnz	x0, 402f20 <__fxstatat@plt+0x4d0>
  402f68:	ldp	x0, x2, [x20, #-136]
  402f6c:	sub	x0, x2, x0
  402f70:	cmp	x0, #0xf
  402f74:	b.ls	40411c <__fxstatat@plt+0x16cc>  // b.plast
  402f78:	ldur	q0, [x2, #-16]
  402f7c:	sub	x2, x2, #0x10
  402f80:	mov	x0, x1
  402f84:	add	x1, sp, #0x90
  402f88:	stur	x2, [x20, #-128]
  402f8c:	str	q0, [sp, #144]
  402f90:	bl	40e118 <__fxstatat@plt+0xb6c8>
  402f94:	cbz	x0, 404138 <__fxstatat@plt+0x16e8>
  402f98:	bl	402840 <free@plt>
  402f9c:	ldr	x0, [x22]
  402fa0:	bl	402840 <free@plt>
  402fa4:	ldr	x0, [x22, #8]
  402fa8:	bl	402840 <free@plt>
  402fac:	mov	x0, x22
  402fb0:	bl	402840 <free@plt>
  402fb4:	ldr	x22, [x19, #3696]
  402fb8:	cbnz	x22, 402f50 <__fxstatat@plt+0x500>
  402fbc:	ldrb	w0, [x19, #3969]
  402fc0:	cbz	w0, 402fcc <__fxstatat@plt+0x57c>
  402fc4:	ldrb	w0, [x19, #3500]
  402fc8:	cbnz	w0, 40384c <__fxstatat@plt+0xdfc>
  402fcc:	ldrb	w0, [x19, #3968]
  402fd0:	cbnz	w0, 403c44 <__fxstatat@plt+0x11f4>
  402fd4:	ldr	x19, [x19, #3688]
  402fd8:	cbz	x19, 402ff0 <__fxstatat@plt+0x5a0>
  402fdc:	mov	x0, x19
  402fe0:	bl	40d270 <__fxstatat@plt+0xa820>
  402fe4:	cbnz	x0, 404154 <__fxstatat@plt+0x1704>
  402fe8:	mov	x0, x19
  402fec:	bl	40da20 <__fxstatat@plt+0xafd0>
  402ff0:	ldur	w0, [x20, #-188]
  402ff4:	ldp	x19, x20, [sp, #16]
  402ff8:	ldp	x21, x22, [sp, #32]
  402ffc:	ldp	x23, x24, [sp, #48]
  403000:	ldp	x25, x26, [sp, #64]
  403004:	ldp	x27, x28, [sp, #80]
  403008:	ldp	x29, x30, [sp], #160
  40300c:	ret
  403010:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403014:	ldr	x28, [x0, #1456]
  403018:	b	402c64 <__fxstatat@plt+0x214>
  40301c:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403020:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403024:	add	x3, x21, #0x8e0
  403028:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40302c:	ldr	x5, [x2, #1320]
  403030:	add	x0, x0, #0x4e8
  403034:	ldr	x1, [x1, #1456]
  403038:	add	x2, x21, #0x900
  40303c:	mov	x4, #0x4                   	// #4
  403040:	str	x3, [sp, #120]
  403044:	bl	40b8a8 <__fxstatat@plt+0x8e58>
  403048:	ldr	x3, [sp, #120]
  40304c:	ldr	w0, [x3, x0, lsl #2]
  403050:	str	w0, [x19, #3472]
  403054:	b	402c64 <__fxstatat@plt+0x214>
  403058:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40305c:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403060:	mov	w6, #0x1                   	// #1
  403064:	add	x3, x21, #0x890
  403068:	ldr	x5, [x2, #1320]
  40306c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403070:	ldr	x1, [x1, #1456]
  403074:	add	x0, x0, #0x4e0
  403078:	add	x2, x21, #0x8b0
  40307c:	mov	x4, #0x4                   	// #4
  403080:	str	w6, [sp, #104]
  403084:	str	x3, [sp, #120]
  403088:	bl	40b8a8 <__fxstatat@plt+0x8e58>
  40308c:	ldr	x3, [sp, #120]
  403090:	ldr	w0, [x3, x0, lsl #2]
  403094:	str	w0, [x19, #3144]
  403098:	b	402c64 <__fxstatat@plt+0x214>
  40309c:	mov	w0, #0x90                  	// #144
  4030a0:	ldr	x2, [sp, #112]
  4030a4:	mov	x1, #0x1                   	// #1
  4030a8:	str	x1, [x19, #3648]
  4030ac:	str	w0, [x19, #3656]
  4030b0:	str	x1, [x2, #408]
  4030b4:	str	w0, [x19, #4024]
  4030b8:	b	402c64 <__fxstatat@plt+0x214>
  4030bc:	strb	wzr, [x19, #3632]
  4030c0:	b	402c64 <__fxstatat@plt+0x214>
  4030c4:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4030c8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4030cc:	mov	x4, #0x4                   	// #4
  4030d0:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4030d4:	ldr	x5, [x1, #1320]
  4030d8:	add	x3, x3, #0x1c0
  4030dc:	ldr	x1, [x0, #1456]
  4030e0:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4030e4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4030e8:	add	x2, x2, #0x1f0
  4030ec:	add	x0, x0, #0x530
  4030f0:	bl	40b8a8 <__fxstatat@plt+0x8e58>
  4030f4:	mov	x1, x0
  4030f8:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4030fc:	add	x3, x2, #0x1c0
  403100:	mov	x0, #0x0                   	// #0
  403104:	ldr	w1, [x3, x1, lsl #2]
  403108:	bl	413168 <__fxstatat@plt+0x10718>
  40310c:	b	402c64 <__fxstatat@plt+0x214>
  403110:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403114:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403118:	add	x6, x21, #0xa00
  40311c:	add	x3, x21, #0xa10
  403120:	ldr	x5, [x2, #1320]
  403124:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403128:	ldr	x1, [x1, #1456]
  40312c:	add	x0, x0, #0x518
  403130:	add	x2, x21, #0xa20
  403134:	mov	x4, #0x4                   	// #4
  403138:	str	x6, [sp, #120]
  40313c:	bl	40b8a8 <__fxstatat@plt+0x8e58>
  403140:	ldr	x6, [sp, #120]
  403144:	add	x0, x6, x0, lsl #2
  403148:	ldr	w0, [x0, #16]
  40314c:	str	w0, [x19, #3680]
  403150:	b	402c64 <__fxstatat@plt+0x214>
  403154:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403158:	ldr	x1, [x0, #1456]
  40315c:	cbz	x1, 4036dc <__fxstatat@plt+0xc8c>
  403160:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403164:	add	x3, x21, #0x990
  403168:	add	x2, x21, #0x9c0
  40316c:	mov	x4, #0x4                   	// #4
  403170:	ldr	x5, [x0, #1320]
  403174:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403178:	add	x0, x0, #0x508
  40317c:	str	x3, [sp, #120]
  403180:	bl	40b8a8 <__fxstatat@plt+0x8e58>
  403184:	ldr	x3, [sp, #120]
  403188:	ldr	w0, [x3, x0, lsl #2]
  40318c:	cmp	w0, #0x1
  403190:	b.eq	4036dc <__fxstatat@plt+0xc8c>  // b.none
  403194:	cmp	w0, #0x2
  403198:	b.eq	404048 <__fxstatat@plt+0x15f8>  // b.none
  40319c:	mov	w0, #0x0                   	// #0
  4031a0:	sturb	w0, [x20, #-200]
  4031a4:	b	402c64 <__fxstatat@plt+0x214>
  4031a8:	mov	x0, #0x10                  	// #16
  4031ac:	bl	415c40 <__fxstatat@plt+0x131f0>
  4031b0:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4031b4:	ldr	x2, [x1, #1456]
  4031b8:	ldr	x1, [x20, #56]
  4031bc:	stp	x2, x1, [x0]
  4031c0:	str	x0, [x20, #56]
  4031c4:	b	402c64 <__fxstatat@plt+0x214>
  4031c8:	mov	w0, #0x1                   	// #1
  4031cc:	strb	w0, [x19, #3476]
  4031d0:	b	402c64 <__fxstatat@plt+0x214>
  4031d4:	adrp	x28, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4031d8:	add	x28, x28, #0x348
  4031dc:	str	wzr, [x19, #3636]
  4031e0:	b	402c64 <__fxstatat@plt+0x214>
  4031e4:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4031e8:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4031ec:	add	x3, x21, #0x930
  4031f0:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4031f4:	ldr	x5, [x2, #1320]
  4031f8:	add	x0, x0, #0x4f0
  4031fc:	ldr	x1, [x1, #1456]
  403200:	add	x2, x21, #0x950
  403204:	mov	x4, #0x4                   	// #4
  403208:	str	x3, [sp, #120]
  40320c:	bl	40b8a8 <__fxstatat@plt+0x8e58>
  403210:	ldr	x3, [sp, #120]
  403214:	ldr	w0, [x3, x0, lsl #2]
  403218:	str	w0, [x19, #3636]
  40321c:	b	402c64 <__fxstatat@plt+0x214>
  403220:	mov	w0, #0x2                   	// #2
  403224:	str	w0, [x19, #3680]
  403228:	b	402c64 <__fxstatat@plt+0x214>
  40322c:	mov	w0, #0x4                   	// #4
  403230:	stur	w0, [x20, #-196]
  403234:	b	402c64 <__fxstatat@plt+0x214>
  403238:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40323c:	ldr	x1, [x0, #1456]
  403240:	cbz	x1, 4036cc <__fxstatat@plt+0xc7c>
  403244:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403248:	add	x3, x21, #0x990
  40324c:	add	x2, x21, #0x9c0
  403250:	mov	x4, #0x4                   	// #4
  403254:	ldr	x5, [x0, #1320]
  403258:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40325c:	add	x0, x0, #0x500
  403260:	str	x3, [sp, #120]
  403264:	bl	40b8a8 <__fxstatat@plt+0x8e58>
  403268:	ldr	x3, [sp, #120]
  40326c:	ldr	w0, [x3, x0, lsl #2]
  403270:	cmp	w0, #0x1
  403274:	b.eq	4036cc <__fxstatat@plt+0xc7c>  // b.none
  403278:	cmp	w0, #0x2
  40327c:	b.eq	4036c0 <__fxstatat@plt+0xc70>  // b.none
  403280:	strb	wzr, [x19, #3969]
  403284:	b	402c64 <__fxstatat@plt+0x214>
  403288:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40328c:	add	x2, x19, #0xe40
  403290:	add	x1, x19, #0xe48
  403294:	ldr	x0, [x0, #1456]
  403298:	bl	40f178 <__fxstatat@plt+0xc728>
  40329c:	cbnz	w0, 4040fc <__fxstatat@plt+0x16ac>
  4032a0:	ldr	x1, [sp, #112]
  4032a4:	ldr	x0, [x19, #3648]
  4032a8:	str	x0, [x1, #408]
  4032ac:	ldr	w0, [x19, #3656]
  4032b0:	str	w0, [x19, #4024]
  4032b4:	b	402c64 <__fxstatat@plt+0x214>
  4032b8:	mov	w0, #0x3                   	// #3
  4032bc:	mov	w1, #0x1                   	// #1
  4032c0:	str	w1, [sp, #104]
  4032c4:	str	w0, [x19, #3144]
  4032c8:	b	402c64 <__fxstatat@plt+0x214>
  4032cc:	mov	w0, #0x2                   	// #2
  4032d0:	str	w0, [x19, #3472]
  4032d4:	b	402c64 <__fxstatat@plt+0x214>
  4032d8:	mov	w0, #0x4                   	// #4
  4032dc:	mov	w1, #0x1                   	// #1
  4032e0:	str	w1, [sp, #104]
  4032e4:	str	w0, [x19, #3144]
  4032e8:	b	402c64 <__fxstatat@plt+0x214>
  4032ec:	mov	w0, #0x1                   	// #1
  4032f0:	strb	w0, [x19, #3644]
  4032f4:	b	402c64 <__fxstatat@plt+0x214>
  4032f8:	mov	w0, #0x3                   	// #3
  4032fc:	str	w0, [x19, #3636]
  403300:	b	402c64 <__fxstatat@plt+0x214>
  403304:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403308:	ldr	x0, [x0, #1456]
  40330c:	bl	404600 <__fxstatat@plt+0x1bb0>
  403310:	tst	w0, #0xff
  403314:	b.ne	402c64 <__fxstatat@plt+0x214>  // b.any
  403318:	mov	w2, #0x5                   	// #5
  40331c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403320:	mov	x0, #0x0                   	// #0
  403324:	add	x1, x1, #0x498
  403328:	bl	402970 <dcgettext@plt>
  40332c:	mov	x19, x0
  403330:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403334:	add	x0, x0, #0x5b0
  403338:	ldr	x0, [x0]
  40333c:	bl	414e28 <__fxstatat@plt+0x123d8>
  403340:	mov	x4, x0
  403344:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403348:	mov	x3, x19
  40334c:	add	x2, x2, #0x4b0
  403350:	mov	w1, #0x0                   	// #0
  403354:	mov	w0, #0x2                   	// #2
  403358:	bl	402490 <error@plt>
  40335c:	mov	w0, #0x1                   	// #1
  403360:	strb	w0, [x19, #3992]
  403364:	b	402c64 <__fxstatat@plt+0x214>
  403368:	mov	w0, #0x1                   	// #1
  40336c:	strb	w0, [x19, #3477]
  403370:	b	402c64 <__fxstatat@plt+0x214>
  403374:	mov	w0, #0x1                   	// #1
  403378:	strb	w0, [x19, #3632]
  40337c:	b	402c64 <__fxstatat@plt+0x214>
  403380:	mov	w0, #0x1                   	// #1
  403384:	str	w0, [x19, #3680]
  403388:	b	402c64 <__fxstatat@plt+0x214>
  40338c:	mov	w0, #0x1                   	// #1
  403390:	str	wzr, [x19, #3636]
  403394:	strb	w0, [x19, #4000]
  403398:	b	402c64 <__fxstatat@plt+0x214>
  40339c:	mov	w0, #0x4                   	// #4
  4033a0:	str	w0, [x19, #3636]
  4033a4:	b	402c64 <__fxstatat@plt+0x214>
  4033a8:	mov	w0, #0x1                   	// #1
  4033ac:	strb	w0, [x19, #3635]
  4033b0:	b	402c64 <__fxstatat@plt+0x214>
  4033b4:	mov	w0, #0xb0                  	// #176
  4033b8:	b	4030a0 <__fxstatat@plt+0x650>
  4033bc:	ldr	x0, [sp, #112]
  4033c0:	str	wzr, [x19, #3636]
  4033c4:	strb	wzr, [x0, #400]
  4033c8:	b	402c64 <__fxstatat@plt+0x214>
  4033cc:	ldr	w0, [x19, #3636]
  4033d0:	mov	w1, #0x2                   	// #2
  4033d4:	str	w1, [x20, #40]
  4033d8:	str	w26, [x19, #3144]
  4033dc:	cbz	w0, 403c9c <__fxstatat@plt+0x124c>
  4033e0:	mov	w0, #0x1                   	// #1
  4033e4:	sturb	wzr, [x20, #-200]
  4033e8:	str	w0, [sp, #104]
  4033ec:	strb	wzr, [x19, #3644]
  4033f0:	strb	wzr, [x19, #3969]
  4033f4:	b	402c64 <__fxstatat@plt+0x214>
  4033f8:	mov	w0, #0x1                   	// #1
  4033fc:	sturb	w0, [x20, #-168]
  403400:	b	402c64 <__fxstatat@plt+0x214>
  403404:	mov	w0, #0x1                   	// #1
  403408:	str	w0, [x19, #3472]
  40340c:	b	402c64 <__fxstatat@plt+0x214>
  403410:	mov	w1, #0x7                   	// #7
  403414:	mov	x0, #0x0                   	// #0
  403418:	bl	413168 <__fxstatat@plt+0x10718>
  40341c:	b	402c64 <__fxstatat@plt+0x214>
  403420:	mov	w0, #0x2                   	// #2
  403424:	str	w0, [x20, #40]
  403428:	b	402c64 <__fxstatat@plt+0x214>
  40342c:	mov	w0, #0x1                   	// #1
  403430:	strb	w0, [x19, #3664]
  403434:	b	402c64 <__fxstatat@plt+0x214>
  403438:	mov	w0, #0x1                   	// #1
  40343c:	str	w0, [sp, #104]
  403440:	str	w0, [x19, #3144]
  403444:	b	402c64 <__fxstatat@plt+0x214>
  403448:	mov	w0, #0x1                   	// #1
  40344c:	str	w0, [sp, #104]
  403450:	str	w26, [x19, #3144]
  403454:	b	402c64 <__fxstatat@plt+0x214>
  403458:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40345c:	mov	w2, #0x5                   	// #5
  403460:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403464:	add	x1, x1, #0x4c8
  403468:	ldr	x3, [x0, #1456]
  40346c:	mov	x0, #0x0                   	// #0
  403470:	str	x3, [sp, #120]
  403474:	bl	402970 <dcgettext@plt>
  403478:	mov	x5, x0
  40347c:	ldr	x4, [sp, #96]
  403480:	mov	w6, #0x2                   	// #2
  403484:	ldr	x3, [sp, #120]
  403488:	mov	x2, #0x0                   	// #0
  40348c:	mov	w1, #0x0                   	// #0
  403490:	mov	x0, x3
  403494:	mov	x3, #0xffffffffffffffff    	// #-1
  403498:	bl	415e50 <__fxstatat@plt+0x13400>
  40349c:	str	x0, [x19, #3480]
  4034a0:	b	402c64 <__fxstatat@plt+0x214>
  4034a4:	mov	w0, #0x2                   	// #2
  4034a8:	mov	w1, #0x1                   	// #1
  4034ac:	str	w1, [sp, #104]
  4034b0:	str	w0, [x19, #3144]
  4034b4:	b	402c64 <__fxstatat@plt+0x214>
  4034b8:	mov	w0, #0x1                   	// #1
  4034bc:	sturb	w0, [x20, #-64]
  4034c0:	b	402c64 <__fxstatat@plt+0x214>
  4034c4:	mov	w1, #0x5                   	// #5
  4034c8:	mov	x0, #0x0                   	// #0
  4034cc:	bl	413168 <__fxstatat@plt+0x10718>
  4034d0:	b	402c64 <__fxstatat@plt+0x214>
  4034d4:	mov	w1, #0x0                   	// #0
  4034d8:	mov	x0, #0x0                   	// #0
  4034dc:	bl	413168 <__fxstatat@plt+0x10718>
  4034e0:	b	402c64 <__fxstatat@plt+0x214>
  4034e4:	mov	w0, #0x5                   	// #5
  4034e8:	stur	w0, [x20, #-196]
  4034ec:	b	402c64 <__fxstatat@plt+0x214>
  4034f0:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4034f4:	mov	x0, #0x10                  	// #16
  4034f8:	ldr	x2, [x1, #1456]
  4034fc:	str	x2, [sp, #120]
  403500:	bl	415c40 <__fxstatat@plt+0x131f0>
  403504:	ldr	x1, [x20, #48]
  403508:	str	x0, [x20, #48]
  40350c:	ldr	x2, [sp, #120]
  403510:	stp	x2, x1, [x0]
  403514:	b	402c64 <__fxstatat@plt+0x214>
  403518:	mov	w0, #0x3                   	// #3
  40351c:	stur	w0, [x20, #-196]
  403520:	b	402c64 <__fxstatat@plt+0x214>
  403524:	ldr	x0, [sp, #112]
  403528:	strb	wzr, [x0, #401]
  40352c:	b	402c64 <__fxstatat@plt+0x214>
  403530:	mov	w0, #0x3                   	// #3
  403534:	str	w0, [x19, #3680]
  403538:	b	402c64 <__fxstatat@plt+0x214>
  40353c:	mov	w0, #0x1                   	// #1
  403540:	strb	w0, [x19, #3968]
  403544:	b	402c64 <__fxstatat@plt+0x214>
  403548:	mov	w0, #0x2                   	// #2
  40354c:	str	w0, [x19, #3636]
  403550:	b	402c64 <__fxstatat@plt+0x214>
  403554:	mov	x0, #0x10                  	// #16
  403558:	bl	415c40 <__fxstatat@plt+0x131f0>
  40355c:	mov	x1, x0
  403560:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403564:	ldr	x3, [x20, #48]
  403568:	add	x2, x2, #0x4b8
  40356c:	stp	x2, x3, [x1]
  403570:	mov	x0, #0x10                  	// #16
  403574:	str	x1, [x20, #48]
  403578:	bl	415c40 <__fxstatat@plt+0x131f0>
  40357c:	ldr	x2, [x20, #48]
  403580:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403584:	add	x1, x1, #0x4c0
  403588:	stp	x1, x2, [x0]
  40358c:	str	x0, [x20, #48]
  403590:	b	402c64 <__fxstatat@plt+0x214>
  403594:	mov	w0, #0x1                   	// #1
  403598:	str	w0, [x20, #40]
  40359c:	b	402c64 <__fxstatat@plt+0x214>
  4035a0:	ldr	w0, [x19, #3636]
  4035a4:	cbz	w0, 402c64 <__fxstatat@plt+0x214>
  4035a8:	mov	w0, #0x1                   	// #1
  4035ac:	str	w0, [x19, #3636]
  4035b0:	b	402c64 <__fxstatat@plt+0x214>
  4035b4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4035b8:	ldr	w1, [x0, #1308]
  4035bc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4035c0:	cmp	w1, #0x1
  4035c4:	ldr	x0, [x0, #1472]
  4035c8:	b.eq	403c90 <__fxstatat@plt+0x1240>  // b.none
  4035cc:	cmp	w1, #0x2
  4035d0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1f80>
  4035d4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  4035d8:	add	x2, x2, #0x480
  4035dc:	add	x1, x1, #0x478
  4035e0:	csel	x1, x1, x2, eq  // eq = none
  4035e4:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4035e8:	adrp	x5, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4035ec:	adrp	x4, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4035f0:	add	x5, x5, #0x540
  4035f4:	ldr	x3, [x2, #1312]
  4035f8:	add	x4, x4, #0x550
  4035fc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403600:	add	x2, x2, #0x290
  403604:	mov	x6, #0x0                   	// #0
  403608:	bl	4158d8 <__fxstatat@plt+0x12e88>
  40360c:	mov	w0, #0x0                   	// #0
  403610:	bl	402460 <exit@plt>
  403614:	and	x0, x0, #0xffff
  403618:	str	x0, [x19, #8]
  40361c:	b	402bf4 <__fxstatat@plt+0x1a4>
  403620:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403624:	add	x1, x1, #0x390
  403628:	mov	w2, #0x5                   	// #5
  40362c:	mov	x0, #0x0                   	// #0
  403630:	bl	402970 <dcgettext@plt>
  403634:	mov	x24, x0
  403638:	mov	x0, x21
  40363c:	bl	414e28 <__fxstatat@plt+0x123d8>
  403640:	mov	x2, x24
  403644:	mov	x3, x0
  403648:	mov	w1, #0x0                   	// #0
  40364c:	mov	w0, #0x0                   	// #0
  403650:	bl	402490 <error@plt>
  403654:	b	402bb0 <__fxstatat@plt+0x160>
  403658:	ldr	x0, [x19, #8]
  40365c:	cmp	x0, #0x0
  403660:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  403664:	b.ne	402d18 <__fxstatat@plt+0x2c8>  // b.any
  403668:	and	w0, w24, #0xfffffffd
  40366c:	cmp	w0, #0x1
  403670:	ccmp	w24, #0x6, #0x4, ne  // ne = any
  403674:	cset	w1, eq  // eq = none
  403678:	b	402d1c <__fxstatat@plt+0x2cc>
  40367c:	bl	404600 <__fxstatat@plt+0x1bb0>
  403680:	tst	w0, #0xff
  403684:	b.ne	402bd4 <__fxstatat@plt+0x184>  // b.any
  403688:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40368c:	add	x1, x1, #0x3e0
  403690:	mov	w2, #0x5                   	// #5
  403694:	mov	x0, #0x0                   	// #0
  403698:	bl	402970 <dcgettext@plt>
  40369c:	mov	x24, x0
  4036a0:	mov	x0, x21
  4036a4:	bl	414e28 <__fxstatat@plt+0x123d8>
  4036a8:	mov	x2, x24
  4036ac:	mov	x3, x0
  4036b0:	mov	w1, #0x0                   	// #0
  4036b4:	mov	w0, #0x0                   	// #0
  4036b8:	bl	402490 <error@plt>
  4036bc:	b	402bd4 <__fxstatat@plt+0x184>
  4036c0:	mov	w0, #0x1                   	// #1
  4036c4:	bl	402920 <isatty@plt>
  4036c8:	cbz	w0, 403280 <__fxstatat@plt+0x830>
  4036cc:	mov	w0, #0x1                   	// #1
  4036d0:	str	xzr, [x19, #3480]
  4036d4:	strb	w0, [x19, #3969]
  4036d8:	b	402c64 <__fxstatat@plt+0x214>
  4036dc:	mov	w0, #0x1                   	// #1
  4036e0:	sturb	w0, [x20, #-200]
  4036e4:	b	402c64 <__fxstatat@plt+0x214>
  4036e8:	ldurb	w0, [x20, #-200]
  4036ec:	cbnz	w0, 402d94 <__fxstatat@plt+0x344>
  4036f0:	cbz	x28, 403ef8 <__fxstatat@plt+0x14a8>
  4036f4:	add	x24, x21, #0xa48
  4036f8:	b	403700 <__fxstatat@plt+0xcb0>
  4036fc:	add	x28, x28, #0x6
  403700:	mov	x1, x24
  403704:	mov	x0, x28
  403708:	mov	x2, #0x6                   	// #6
  40370c:	bl	402640 <strncmp@plt>
  403710:	cbnz	w0, 403ce4 <__fxstatat@plt+0x1294>
  403714:	mov	w0, #0x2                   	// #2
  403718:	bl	40cef8 <__fxstatat@plt+0xa4a8>
  40371c:	tst	w0, #0xff
  403720:	b.ne	4036fc <__fxstatat@plt+0xcac>  // b.any
  403724:	b	402db8 <__fxstatat@plt+0x368>
  403728:	mov	w1, #0x7                   	// #7
  40372c:	mov	x0, #0x0                   	// #0
  403730:	str	w24, [x19, #3636]
  403734:	bl	413168 <__fxstatat@plt+0x10718>
  403738:	b	402b38 <__fxstatat@plt+0xe8>
  40373c:	ldurb	w0, [x20, #-168]
  403740:	cbnz	w0, 4038f0 <__fxstatat@plt+0xea0>
  403744:	mov	x0, #0x20                  	// #32
  403748:	bl	415c40 <__fxstatat@plt+0x131f0>
  40374c:	mov	x22, x0
  403750:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403754:	add	x0, x1, #0x6d0
  403758:	str	xzr, [x22, #8]
  40375c:	bl	415dc8 <__fxstatat@plt+0x13378>
  403760:	str	x0, [x22]
  403764:	ldr	x1, [x19, #3696]
  403768:	mov	w2, #0x1                   	// #1
  40376c:	strb	w2, [x22, #16]
  403770:	str	x1, [x22, #24]
  403774:	str	x22, [x19, #3696]
  403778:	ldr	x0, [x19, #3104]
  40377c:	cbnz	x0, 403b08 <__fxstatat@plt+0x10b8>
  403780:	ldr	x22, [x19, #3696]
  403784:	cbz	x22, 402fbc <__fxstatat@plt+0x56c>
  403788:	ldr	x0, [x22, #24]
  40378c:	cbnz	x0, 402f18 <__fxstatat@plt+0x4c8>
  403790:	sturb	wzr, [x20, #-63]
  403794:	b	402f18 <__fxstatat@plt+0x4c8>
  403798:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40379c:	add	x1, x1, #0x428
  4037a0:	mov	w2, #0x5                   	// #5
  4037a4:	mov	x0, #0x0                   	// #0
  4037a8:	bl	402970 <dcgettext@plt>
  4037ac:	mov	x24, x0
  4037b0:	mov	x0, x21
  4037b4:	bl	414e28 <__fxstatat@plt+0x123d8>
  4037b8:	mov	x2, x24
  4037bc:	mov	x3, x0
  4037c0:	mov	w1, #0x0                   	// #0
  4037c4:	mov	w0, #0x0                   	// #0
  4037c8:	bl	402490 <error@plt>
  4037cc:	b	402c30 <__fxstatat@plt+0x1e0>
  4037d0:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4037d4:	add	x0, x0, #0x568
  4037d8:	bl	4029f0 <getenv@plt>
  4037dc:	mov	x24, x0
  4037e0:	add	x2, x19, #0xe40
  4037e4:	add	x1, x19, #0xe48
  4037e8:	bl	40f178 <__fxstatat@plt+0xc728>
  4037ec:	cbz	x24, 404060 <__fxstatat@plt+0x1610>
  4037f0:	adrp	x24, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4037f4:	ldr	w0, [x19, #3656]
  4037f8:	ldr	x1, [x19, #3648]
  4037fc:	str	x1, [x24, #1288]
  403800:	str	w0, [x19, #4024]
  403804:	cbz	w27, 402ce0 <__fxstatat@plt+0x290>
  403808:	mov	x0, #0x400                 	// #1024
  40380c:	str	x0, [x19, #3648]
  403810:	str	wzr, [x19, #3656]
  403814:	b	402ce0 <__fxstatat@plt+0x290>
  403818:	ldrb	w0, [x19, #3664]
  40381c:	cbnz	w0, 402e64 <__fxstatat@plt+0x414>
  403820:	ldrb	w0, [x19, #3644]
  403824:	cbnz	w0, 402e64 <__fxstatat@plt+0x414>
  403828:	ldurb	w0, [x20, #-64]
  40382c:	sturb	wzr, [x20, #-199]
  403830:	cbnz	w0, 403844 <__fxstatat@plt+0xdf4>
  403834:	ldrb	w0, [x19, #3969]
  403838:	cbnz	w0, 403844 <__fxstatat@plt+0xdf4>
  40383c:	ldr	w0, [x19, #3680]
  403840:	cbz	w0, 403f24 <__fxstatat@plt+0x14d4>
  403844:	mov	w0, #0x1                   	// #1
  403848:	b	402e70 <__fxstatat@plt+0x420>
  40384c:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403850:	add	x24, x1, #0x370
  403854:	ldr	x0, [x1, #880]
  403858:	cmp	x0, #0x2
  40385c:	b.ne	403874 <__fxstatat@plt+0xe24>  // b.any
  403860:	ldr	x1, [x24, #8]
  403864:	mov	w0, #0x5b1b                	// #23323
  403868:	ldrh	w1, [x1]
  40386c:	cmp	w1, w0
  403870:	b.eq	403f2c <__fxstatat@plt+0x14dc>  // b.none
  403874:	add	x1, x24, #0x8
  403878:	mov	x0, x24
  40387c:	bl	405170 <__fxstatat@plt+0x2720>
  403880:	add	x1, x24, #0x18
  403884:	add	x0, x24, #0x10
  403888:	bl	405170 <__fxstatat@plt+0x2720>
  40388c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403890:	add	x22, x21, #0x1d0
  403894:	add	x25, x21, #0x200
  403898:	add	x24, x19, #0xdb0
  40389c:	ldr	x0, [x0, #1472]
  4038a0:	bl	4028b0 <fflush_unlocked@plt>
  4038a4:	b	4038b4 <__fxstatat@plt+0xe64>
  4038a8:	add	x22, x22, #0x4
  4038ac:	cmp	x22, x25
  4038b0:	b.eq	403cb8 <__fxstatat@plt+0x1268>  // b.none
  4038b4:	ldr	w23, [x22]
  4038b8:	mov	x0, x24
  4038bc:	mov	w1, w23
  4038c0:	bl	4027f0 <sigismember@plt>
  4038c4:	cbz	w0, 4038a8 <__fxstatat@plt+0xe58>
  4038c8:	mov	w0, w23
  4038cc:	mov	x1, #0x0                   	// #0
  4038d0:	bl	4025b0 <signal@plt>
  4038d4:	b	4038a8 <__fxstatat@plt+0xe58>
  4038d8:	mov	w1, #0x3                   	// #3
  4038dc:	mov	x0, #0x0                   	// #0
  4038e0:	str	w21, [x19, #3636]
  4038e4:	bl	413168 <__fxstatat@plt+0x10718>
  4038e8:	strb	w24, [x19, #3632]
  4038ec:	b	402b38 <__fxstatat@plt+0xe8>
  4038f0:	ldr	x3, [sp, #96]
  4038f4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4038f8:	mov	w2, #0x1                   	// #1
  4038fc:	mov	w1, #0x3                   	// #3
  403900:	add	x0, x0, #0x6d0
  403904:	bl	4096a8 <__fxstatat@plt+0x6c58>
  403908:	b	403778 <__fxstatat@plt+0xd28>
  40390c:	ldurb	w0, [x20, #-168]
  403910:	cbnz	w0, 403d40 <__fxstatat@plt+0x12f0>
  403914:	ldr	w0, [x19, #3680]
  403918:	cmp	w0, #0x3
  40391c:	b.eq	403d40 <__fxstatat@plt+0x12f0>  // b.none
  403920:	ldr	w2, [x19, #3636]
  403924:	mov	w0, #0x2                   	// #2
  403928:	mov	w1, #0x4                   	// #4
  40392c:	cmp	w2, #0x0
  403930:	csel	w0, w0, w1, eq  // eq = none
  403934:	stur	w0, [x20, #-196]
  403938:	b	402de4 <__fxstatat@plt+0x394>
  40393c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403940:	add	x0, x0, #0x678
  403944:	bl	4029f0 <getenv@plt>
  403948:	str	x0, [sp, #136]
  40394c:	cbz	x0, 403d5c <__fxstatat@plt+0x130c>
  403950:	ldrb	w1, [x0]
  403954:	cbz	w1, 403d5c <__fxstatat@plt+0x130c>
  403958:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40395c:	add	x1, x1, #0x7c8
  403960:	adrp	x28, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403964:	ldrh	w2, [x1]
  403968:	ldrb	w1, [x1, #2]
  40396c:	strh	w2, [sp, #128]
  403970:	strb	w1, [sp, #130]
  403974:	bl	415dc8 <__fxstatat@plt+0x13378>
  403978:	str	x0, [x20, #64]
  40397c:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403980:	add	x24, x1, #0x370
  403984:	add	x1, x28, #0x360
  403988:	str	x1, [sp, #104]
  40398c:	str	x0, [sp, #144]
  403990:	ldr	x0, [sp, #136]
  403994:	ldrb	w1, [x0]
  403998:	cmp	w1, #0x2a
  40399c:	b.eq	403f78 <__fxstatat@plt+0x1528>  // b.none
  4039a0:	cmp	w1, #0x3a
  4039a4:	b.eq	403f6c <__fxstatat@plt+0x151c>  // b.none
  4039a8:	cbz	w1, 403ab0 <__fxstatat@plt+0x1060>
  4039ac:	add	x1, x0, #0x1
  4039b0:	str	x1, [sp, #136]
  4039b4:	ldrb	w1, [x0]
  4039b8:	strb	w1, [sp, #128]
  4039bc:	ldrb	w1, [x0, #1]
  4039c0:	cbz	w1, 403a68 <__fxstatat@plt+0x1018>
  4039c4:	add	x1, x0, #0x2
  4039c8:	str	x1, [sp, #136]
  4039cc:	add	x1, x0, #0x3
  4039d0:	ldrb	w2, [x0, #1]
  4039d4:	strb	w2, [sp, #129]
  4039d8:	str	x1, [sp, #136]
  4039dc:	ldrb	w0, [x0, #2]
  4039e0:	cmp	w0, #0x3d
  4039e4:	b.ne	403a68 <__fxstatat@plt+0x1018>  // b.any
  4039e8:	add	x26, x21, #0xa60
  4039ec:	mov	x28, #0x0                   	// #0
  4039f0:	ldr	x1, [sp, #104]
  4039f4:	b	403a04 <__fxstatat@plt+0xfb4>
  4039f8:	add	x28, x28, #0x1
  4039fc:	ldr	x1, [x26, x28, lsl #3]
  403a00:	cbz	x1, 403a34 <__fxstatat@plt+0xfe4>
  403a04:	add	x0, sp, #0x80
  403a08:	bl	402800 <strcmp@plt>
  403a0c:	cbnz	w0, 4039f8 <__fxstatat@plt+0xfa8>
  403a10:	add	x3, x24, w28, sxtw #4
  403a14:	add	x1, sp, #0x88
  403a18:	ldr	x4, [sp, #144]
  403a1c:	add	x0, sp, #0x90
  403a20:	str	x4, [x3, #8]
  403a24:	mov	w2, #0x0                   	// #0
  403a28:	bl	4042d8 <__fxstatat@plt+0x1888>
  403a2c:	tst	w0, #0xff
  403a30:	b.ne	403990 <__fxstatat@plt+0xf40>  // b.any
  403a34:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403a38:	add	x1, x1, #0x6a8
  403a3c:	mov	w2, #0x5                   	// #5
  403a40:	mov	x0, #0x0                   	// #0
  403a44:	bl	402970 <dcgettext@plt>
  403a48:	mov	x26, x0
  403a4c:	add	x0, sp, #0x80
  403a50:	bl	414e28 <__fxstatat@plt+0x123d8>
  403a54:	mov	x2, x26
  403a58:	mov	x3, x0
  403a5c:	mov	w1, #0x0                   	// #0
  403a60:	mov	w0, #0x0                   	// #0
  403a64:	bl	402490 <error@plt>
  403a68:	mov	w2, #0x5                   	// #5
  403a6c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403a70:	mov	x0, #0x0                   	// #0
  403a74:	add	x1, x1, #0x790
  403a78:	bl	402970 <dcgettext@plt>
  403a7c:	mov	x2, x0
  403a80:	mov	w1, #0x0                   	// #0
  403a84:	mov	w0, #0x0                   	// #0
  403a88:	bl	402490 <error@plt>
  403a8c:	ldr	x0, [x20, #64]
  403a90:	bl	402840 <free@plt>
  403a94:	ldr	x0, [x19, #3976]
  403a98:	cbz	x0, 403aac <__fxstatat@plt+0x105c>
  403a9c:	ldr	x26, [x0, #32]
  403aa0:	bl	402840 <free@plt>
  403aa4:	mov	x0, x26
  403aa8:	b	403a98 <__fxstatat@plt+0x1048>
  403aac:	strb	wzr, [x19, #3969]
  403ab0:	ldr	x2, [x24, #112]
  403ab4:	cmp	x2, #0x6
  403ab8:	b.eq	403f4c <__fxstatat@plt+0x14fc>  // b.none
  403abc:	ldrb	w0, [x19, #3476]
  403ac0:	cbnz	w0, 402dd0 <__fxstatat@plt+0x380>
  403ac4:	ldrb	w0, [x19, #3969]
  403ac8:	cbz	w0, 402dd8 <__fxstatat@plt+0x388>
  403acc:	mov	w0, #0xd                   	// #13
  403ad0:	bl	404590 <__fxstatat@plt+0x1b40>
  403ad4:	tst	w0, #0xff
  403ad8:	b.ne	402dd0 <__fxstatat@plt+0x380>  // b.any
  403adc:	mov	w0, #0xe                   	// #14
  403ae0:	bl	404590 <__fxstatat@plt+0x1b40>
  403ae4:	tst	w0, #0xff
  403ae8:	b.ne	403f18 <__fxstatat@plt+0x14c8>  // b.any
  403aec:	mov	w0, #0xc                   	// #12
  403af0:	bl	404590 <__fxstatat@plt+0x1b40>
  403af4:	tst	w0, #0xff
  403af8:	b.eq	402dd8 <__fxstatat@plt+0x388>  // b.none
  403afc:	ldr	w0, [x19, #3636]
  403b00:	cbz	w0, 402dd0 <__fxstatat@plt+0x380>
  403b04:	b	402dd8 <__fxstatat@plt+0x388>
  403b08:	bl	404ad8 <__fxstatat@plt+0x2088>
  403b0c:	ldurb	w0, [x20, #-168]
  403b10:	cbz	w0, 403e5c <__fxstatat@plt+0x140c>
  403b14:	ldr	x0, [x19, #3104]
  403b18:	cbz	x0, 402f08 <__fxstatat@plt+0x4b8>
  403b1c:	bl	409060 <__fxstatat@plt+0x6610>
  403b20:	ldr	x0, [x19, #3696]
  403b24:	cbz	x0, 402fbc <__fxstatat@plt+0x56c>
  403b28:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403b2c:	ldr	x0, [x0, #1472]
  403b30:	ldp	x1, x2, [x0, #40]
  403b34:	cmp	x2, x1
  403b38:	b.ls	4040bc <__fxstatat@plt+0x166c>  // b.plast
  403b3c:	add	x2, x1, #0x1
  403b40:	str	x2, [x0, #40]
  403b44:	mov	w0, #0xa                   	// #10
  403b48:	strb	w0, [x1]
  403b4c:	ldr	x0, [x19, #3488]
  403b50:	add	x0, x0, #0x1
  403b54:	str	x0, [x19, #3488]
  403b58:	b	402f10 <__fxstatat@plt+0x4c0>
  403b5c:	add	x4, x19, #0xe80
  403b60:	mov	x0, #0x0                   	// #0
  403b64:	b	403bb4 <__fxstatat@plt+0x1164>
  403b68:	cmp	w0, #0x40
  403b6c:	mov	w1, #0x1                   	// #1
  403b70:	b.gt	403b9c <__fxstatat@plt+0x114c>
  403b74:	sub	w2, w0, #0x30
  403b78:	cmp	w2, #0x9
  403b7c:	b.ls	403b9c <__fxstatat@plt+0x114c>  // b.plast
  403b80:	sub	w3, w3, #0x2d
  403b84:	cmp	w0, #0x7e
  403b88:	ccmp	w3, #0x1, #0x0, ne  // ne = any
  403b8c:	mov	w1, #0x1                   	// #1
  403b90:	b.ls	403b9c <__fxstatat@plt+0x114c>  // b.plast
  403b94:	cmp	w0, #0x5f
  403b98:	cset	w1, eq  // eq = none
  403b9c:	ldrb	w2, [x0, x4]
  403ba0:	orr	w1, w1, w2
  403ba4:	strb	w1, [x0, x4]
  403ba8:	add	x0, x0, #0x1
  403bac:	cmp	x0, #0x100
  403bb0:	b.eq	403be8 <__fxstatat@plt+0x1198>  // b.none
  403bb4:	cmp	x0, #0x5a
  403bb8:	mov	w3, w0
  403bbc:	b.ls	403b68 <__fxstatat@plt+0x1118>  // b.plast
  403bc0:	sub	w2, w0, #0x61
  403bc4:	mov	w1, #0x1                   	// #1
  403bc8:	cmp	w2, #0x19
  403bcc:	b.hi	403b80 <__fxstatat@plt+0x1130>  // b.pmore
  403bd0:	ldrb	w2, [x0, x4]
  403bd4:	orr	w1, w1, w2
  403bd8:	strb	w1, [x0, x4]
  403bdc:	add	x0, x0, #0x1
  403be0:	cmp	x0, #0x100
  403be4:	b.ne	403bb4 <__fxstatat@plt+0x1164>  // b.any
  403be8:	bl	4160e0 <__fxstatat@plt+0x13690>
  403bec:	cmp	x0, #0x0
  403bf0:	ldr	x1, [sp, #96]
  403bf4:	csel	x0, x1, x0, eq  // eq = none
  403bf8:	str	x0, [x19, #3704]
  403bfc:	b	402e88 <__fxstatat@plt+0x438>
  403c00:	adrp	x26, 402000 <mbrtowc@plt-0x3b0>
  403c04:	adrp	x24, 402000 <mbrtowc@plt-0x3b0>
  403c08:	add	x26, x26, #0x840
  403c0c:	add	x24, x24, #0x5f0
  403c10:	mov	x4, x26
  403c14:	mov	x3, x24
  403c18:	add	x0, x19, #0xfd8
  403c1c:	mov	x2, #0x0                   	// #0
  403c20:	mov	x1, #0x0                   	// #0
  403c24:	bl	416c70 <_obstack_begin@@Base>
  403c28:	mov	x4, x26
  403c2c:	mov	x3, x24
  403c30:	sub	x0, x20, #0x38
  403c34:	mov	x2, #0x0                   	// #0
  403c38:	mov	x1, #0x0                   	// #0
  403c3c:	bl	416c70 <_obstack_begin@@Base>
  403c40:	b	402e80 <__fxstatat@plt+0x430>
  403c44:	add	x1, x19, #0xfd8
  403c48:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403c4c:	add	x0, x0, #0x718
  403c50:	bl	404d68 <__fxstatat@plt+0x2318>
  403c54:	sub	x1, x20, #0x38
  403c58:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403c5c:	add	x0, x0, #0x728
  403c60:	bl	404d68 <__fxstatat@plt+0x2318>
  403c64:	ldr	x0, [x19, #3672]
  403c68:	bl	413148 <__fxstatat@plt+0x106f8>
  403c6c:	mov	w3, w0
  403c70:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x6f80>
  403c74:	add	x2, x2, #0x1f0
  403c78:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403c7c:	mov	w0, #0x1                   	// #1
  403c80:	add	x1, x1, #0x738
  403c84:	ldr	x2, [x2, w3, uxtw #3]
  403c88:	bl	402670 <__printf_chk@plt>
  403c8c:	b	402fd4 <__fxstatat@plt+0x584>
  403c90:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  403c94:	add	x1, x1, #0x470
  403c98:	b	4035e4 <__fxstatat@plt+0xb94>
  403c9c:	mov	w0, #0x1                   	// #1
  403ca0:	bl	402920 <isatty@plt>
  403ca4:	cmp	w0, #0x0
  403ca8:	cset	w0, ne  // ne = any
  403cac:	add	w0, w0, #0x1
  403cb0:	str	w0, [x19, #3636]
  403cb4:	b	4033e0 <__fxstatat@plt+0x990>
  403cb8:	ldr	w22, [x19, #3496]
  403cbc:	cbz	w22, 403cd0 <__fxstatat@plt+0x1280>
  403cc0:	mov	w0, #0x13                  	// #19
  403cc4:	bl	402480 <raise@plt>
  403cc8:	subs	w22, w22, #0x1
  403ccc:	b.ne	403cc0 <__fxstatat@plt+0x1270>  // b.any
  403cd0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403cd4:	ldr	w0, [x0, #1504]
  403cd8:	cbz	w0, 402fcc <__fxstatat@plt+0x57c>
  403cdc:	bl	402480 <raise@plt>
  403ce0:	b	402fcc <__fxstatat@plt+0x57c>
  403ce4:	ldrb	w0, [x28]
  403ce8:	cmp	w0, #0x2b
  403cec:	b.eq	404004 <__fxstatat@plt+0x15b4>  // b.none
  403cf0:	add	x24, x21, #0x2e0
  403cf4:	add	x2, x21, #0xa50
  403cf8:	mov	x1, x24
  403cfc:	mov	x0, x28
  403d00:	mov	x3, #0x4                   	// #4
  403d04:	bl	40b558 <__fxstatat@plt+0x8b08>
  403d08:	tbnz	x0, #63, 403e6c <__fxstatat@plt+0x141c>
  403d0c:	cmp	x0, #0x2
  403d10:	b.eq	404090 <__fxstatat@plt+0x1640>  // b.none
  403d14:	b.gt	403e08 <__fxstatat@plt+0x13b8>
  403d18:	cbz	x0, 404074 <__fxstatat@plt+0x1624>
  403d1c:	cmp	x0, #0x1
  403d20:	b.ne	403d38 <__fxstatat@plt+0x12e8>  // b.any
  403d24:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403d28:	add	x24, x1, #0x370
  403d2c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403d30:	add	x0, x0, #0x648
  403d34:	stp	x0, x0, [x24, #384]
  403d38:	bl	404668 <__fxstatat@plt+0x1c18>
  403d3c:	b	402db8 <__fxstatat@plt+0x368>
  403d40:	mov	w0, #0x2                   	// #2
  403d44:	stur	w0, [x20, #-196]
  403d48:	b	402de4 <__fxstatat@plt+0x394>
  403d4c:	mov	w2, #0x1                   	// #1
  403d50:	mov	w1, #0x20                  	// #32
  403d54:	bl	413188 <__fxstatat@plt+0x10738>
  403d58:	b	402d34 <__fxstatat@plt+0x2e4>
  403d5c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403d60:	add	x0, x0, #0x688
  403d64:	bl	4029f0 <getenv@plt>
  403d68:	cbz	x0, 403d74 <__fxstatat@plt+0x1324>
  403d6c:	ldrb	w0, [x0]
  403d70:	cbnz	w0, 403abc <__fxstatat@plt+0x106c>
  403d74:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403d78:	add	x0, x0, #0x698
  403d7c:	bl	4029f0 <getenv@plt>
  403d80:	str	x0, [sp, #104]
  403d84:	cbz	x0, 403ffc <__fxstatat@plt+0x15ac>
  403d88:	ldr	x0, [sp, #104]
  403d8c:	ldrb	w0, [x0]
  403d90:	cbz	w0, 403ffc <__fxstatat@plt+0x15ac>
  403d94:	adrp	x24, 41c000 <_obstack_memory_used@@Base+0x4f80>
  403d98:	add	x24, x24, #0x9c0
  403d9c:	adrp	x26, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403da0:	mov	x28, x24
  403da4:	add	x26, x26, #0x6a0
  403da8:	mov	x27, #0x10c3                	// #4291
  403dac:	b	403dcc <__fxstatat@plt+0x137c>
  403db0:	mov	x0, x28
  403db4:	bl	402430 <strlen@plt>
  403db8:	add	x0, x0, #0x1
  403dbc:	add	x28, x28, x0
  403dc0:	sub	x0, x28, x24
  403dc4:	cmp	x0, x27
  403dc8:	b.hi	403ffc <__fxstatat@plt+0x15ac>  // b.pmore
  403dcc:	mov	x1, x26
  403dd0:	mov	x0, x28
  403dd4:	mov	x2, #0x5                   	// #5
  403dd8:	bl	402640 <strncmp@plt>
  403ddc:	cbnz	w0, 403db0 <__fxstatat@plt+0x1360>
  403de0:	ldr	x1, [sp, #104]
  403de4:	add	x0, x28, #0x5
  403de8:	mov	w2, #0x0                   	// #0
  403dec:	bl	4028a0 <fnmatch@plt>
  403df0:	cbnz	w0, 403db0 <__fxstatat@plt+0x1360>
  403df4:	b	403abc <__fxstatat@plt+0x106c>
  403df8:	cbz	w1, 4036f0 <__fxstatat@plt+0xca0>
  403dfc:	mov	w0, #0x4                   	// #4
  403e00:	str	w0, [x19, #3144]
  403e04:	b	402db8 <__fxstatat@plt+0x368>
  403e08:	cmp	x0, #0x3
  403e0c:	b.ne	403d38 <__fxstatat@plt+0x12e8>  // b.any
  403e10:	mov	w0, #0x2                   	// #2
  403e14:	bl	40cef8 <__fxstatat@plt+0xa4a8>
  403e18:	tst	w0, #0xff
  403e1c:	b.eq	403d38 <__fxstatat@plt+0x12e8>  // b.none
  403e20:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403e24:	add	x24, x1, #0x370
  403e28:	mov	w2, #0x2                   	// #2
  403e2c:	mov	x0, #0x0                   	// #0
  403e30:	ldr	x1, [x24, #384]
  403e34:	bl	402970 <dcgettext@plt>
  403e38:	mov	x3, x0
  403e3c:	ldr	x1, [x24, #392]
  403e40:	mov	w2, #0x2                   	// #2
  403e44:	mov	x0, #0x0                   	// #0
  403e48:	str	x3, [x24, #384]
  403e4c:	bl	402970 <dcgettext@plt>
  403e50:	str	x0, [x24, #392]
  403e54:	bl	404668 <__fxstatat@plt+0x1c18>
  403e58:	b	402db8 <__fxstatat@plt+0x368>
  403e5c:	mov	w1, #0x1                   	// #1
  403e60:	mov	x0, #0x0                   	// #0
  403e64:	bl	407690 <__fxstatat@plt+0x4c40>
  403e68:	b	403b14 <__fxstatat@plt+0x10c4>
  403e6c:	mov	x2, x0
  403e70:	mov	x1, x28
  403e74:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  403e78:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403e7c:	add	x0, x0, #0x5c0
  403e80:	bl	40b6d0 <__fxstatat@plt+0x8c80>
  403e84:	mov	w2, #0x5                   	// #5
  403e88:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403e8c:	mov	x0, #0x0                   	// #0
  403e90:	add	x1, x1, #0x5d0
  403e94:	bl	402970 <dcgettext@plt>
  403e98:	adrp	x20, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403e9c:	ldr	x1, [x19, #1448]
  403ea0:	add	x20, x20, #0x5e8
  403ea4:	add	x19, x19, #0x5a8
  403ea8:	bl	402980 <fputs_unlocked@plt>
  403eac:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403eb0:	add	x3, x3, #0x348
  403eb4:	ldr	x0, [x19]
  403eb8:	mov	x2, x20
  403ebc:	mov	w1, #0x1                   	// #1
  403ec0:	bl	4027e0 <__fprintf_chk@plt>
  403ec4:	ldr	x3, [x24, #8]!
  403ec8:	cbnz	x3, 403eb4 <__fxstatat@plt+0x1464>
  403ecc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403ed0:	mov	w2, #0x5                   	// #5
  403ed4:	add	x1, x1, #0x5f8
  403ed8:	mov	x0, #0x0                   	// #0
  403edc:	bl	402970 <dcgettext@plt>
  403ee0:	ldr	x1, [x19]
  403ee4:	bl	402980 <fputs_unlocked@plt>
  403ee8:	mov	w0, #0x2                   	// #2
  403eec:	bl	40adf8 <__fxstatat@plt+0x83a8>
  403ef0:	mov	w0, #0x0                   	// #0
  403ef4:	bl	40adf8 <__fxstatat@plt+0x83a8>
  403ef8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403efc:	add	x0, x0, #0x590
  403f00:	bl	4029f0 <getenv@plt>
  403f04:	mov	x28, x0
  403f08:	cbnz	x0, 4036f4 <__fxstatat@plt+0xca4>
  403f0c:	adrp	x28, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403f10:	add	x28, x28, #0x358
  403f14:	b	403cf0 <__fxstatat@plt+0x12a0>
  403f18:	ldrb	w0, [x19, #3970]
  403f1c:	cbnz	w0, 402dd0 <__fxstatat@plt+0x380>
  403f20:	b	403aec <__fxstatat@plt+0x109c>
  403f24:	ldrb	w0, [x19, #3476]
  403f28:	b	402e70 <__fxstatat@plt+0x420>
  403f2c:	ldr	x0, [x24, #16]
  403f30:	cmp	x0, #0x1
  403f34:	b.ne	403874 <__fxstatat@plt+0xe24>  // b.any
  403f38:	ldr	x0, [x24, #24]
  403f3c:	ldrb	w0, [x0]
  403f40:	cmp	w0, #0x6d
  403f44:	b.ne	403874 <__fxstatat@plt+0xe24>  // b.any
  403f48:	b	40388c <__fxstatat@plt+0xe3c>
  403f4c:	ldr	x0, [x24, #120]
  403f50:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  403f54:	add	x1, x1, #0x6c0
  403f58:	bl	402640 <strncmp@plt>
  403f5c:	cbnz	w0, 403abc <__fxstatat@plt+0x106c>
  403f60:	mov	w0, #0x1                   	// #1
  403f64:	strb	w0, [x19, #3970]
  403f68:	b	403abc <__fxstatat@plt+0x106c>
  403f6c:	add	x0, x0, #0x1
  403f70:	str	x0, [sp, #136]
  403f74:	b	403990 <__fxstatat@plt+0xf40>
  403f78:	mov	x0, #0x28                  	// #40
  403f7c:	bl	415c40 <__fxstatat@plt+0x131f0>
  403f80:	mov	x18, x0
  403f84:	mov	x3, x0
  403f88:	ldp	x0, x5, [sp, #136]
  403f8c:	add	x1, sp, #0x88
  403f90:	ldr	x4, [x19, #3976]
  403f94:	mov	w2, #0x1                   	// #1
  403f98:	str	x5, [x18, #8]
  403f9c:	str	x4, [x18, #32]
  403fa0:	add	x0, x0, #0x1
  403fa4:	str	x0, [sp, #136]
  403fa8:	add	x0, sp, #0x90
  403fac:	str	x18, [x19, #3976]
  403fb0:	bl	4042d8 <__fxstatat@plt+0x1888>
  403fb4:	tst	w0, #0xff
  403fb8:	b.eq	403a68 <__fxstatat@plt+0x1018>  // b.none
  403fbc:	ldr	x0, [sp, #136]
  403fc0:	add	x1, x0, #0x1
  403fc4:	str	x1, [sp, #136]
  403fc8:	ldrb	w0, [x0]
  403fcc:	cmp	w0, #0x3d
  403fd0:	b.ne	403a68 <__fxstatat@plt+0x1018>  // b.any
  403fd4:	ldr	x4, [sp, #144]
  403fd8:	add	x3, x18, #0x10
  403fdc:	add	x1, sp, #0x88
  403fe0:	add	x0, sp, #0x90
  403fe4:	mov	w2, #0x0                   	// #0
  403fe8:	str	x4, [x18, #24]
  403fec:	bl	4042d8 <__fxstatat@plt+0x1888>
  403ff0:	tst	w0, #0xff
  403ff4:	b.ne	403990 <__fxstatat@plt+0xf40>  // b.any
  403ff8:	b	403a68 <__fxstatat@plt+0x1018>
  403ffc:	strb	wzr, [x19, #3969]
  404000:	b	403abc <__fxstatat@plt+0x106c>
  404004:	add	x28, x28, #0x1
  404008:	mov	w1, #0xa                   	// #10
  40400c:	mov	x0, x28
  404010:	bl	402880 <strchr@plt>
  404014:	mov	x24, x0
  404018:	cbz	x0, 4040b4 <__fxstatat@plt+0x1664>
  40401c:	add	x25, x0, #0x1
  404020:	mov	w1, #0xa                   	// #10
  404024:	mov	x0, x25
  404028:	bl	402880 <strchr@plt>
  40402c:	cbnz	x0, 4040c8 <__fxstatat@plt+0x1678>
  404030:	strb	wzr, [x24]
  404034:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404038:	add	x24, x1, #0x370
  40403c:	stp	x28, x25, [x24, #384]
  404040:	bl	404668 <__fxstatat@plt+0x1c18>
  404044:	b	402db8 <__fxstatat@plt+0x368>
  404048:	mov	w0, #0x1                   	// #1
  40404c:	bl	402920 <isatty@plt>
  404050:	cmp	w0, #0x0
  404054:	cset	w0, ne  // ne = any
  404058:	sturb	w0, [x20, #-200]
  40405c:	b	402c64 <__fxstatat@plt+0x214>
  404060:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  404064:	add	x0, x0, #0x578
  404068:	bl	4029f0 <getenv@plt>
  40406c:	cbnz	x0, 4037f0 <__fxstatat@plt+0xda0>
  404070:	b	403804 <__fxstatat@plt+0xdb4>
  404074:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404078:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40407c:	add	x24, x1, #0x370
  404080:	add	x0, x0, #0x630
  404084:	stp	x0, x0, [x24, #384]
  404088:	bl	404668 <__fxstatat@plt+0x1c18>
  40408c:	b	402db8 <__fxstatat@plt+0x368>
  404090:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404094:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  404098:	add	x24, x1, #0x370
  40409c:	add	x0, x0, #0x668
  4040a0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4040a4:	add	x1, x1, #0x658
  4040a8:	stp	x1, x0, [x24, #384]
  4040ac:	bl	404668 <__fxstatat@plt+0x1c18>
  4040b0:	b	402db8 <__fxstatat@plt+0x368>
  4040b4:	mov	x25, x28
  4040b8:	b	404034 <__fxstatat@plt+0x15e4>
  4040bc:	mov	w1, #0xa                   	// #10
  4040c0:	bl	402780 <__overflow@plt>
  4040c4:	b	403b4c <__fxstatat@plt+0x10fc>
  4040c8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4040cc:	add	x1, x1, #0x5a0
  4040d0:	mov	w2, #0x5                   	// #5
  4040d4:	mov	x0, #0x0                   	// #0
  4040d8:	bl	402970 <dcgettext@plt>
  4040dc:	mov	x19, x0
  4040e0:	mov	x0, x28
  4040e4:	bl	414e28 <__fxstatat@plt+0x123d8>
  4040e8:	mov	x2, x19
  4040ec:	mov	x3, x0
  4040f0:	mov	w1, #0x0                   	// #0
  4040f4:	mov	w0, #0x2                   	// #2
  4040f8:	bl	402490 <error@plt>
  4040fc:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404100:	add	x2, x2, #0x5b0
  404104:	ldr	w1, [sp, #144]
  404108:	add	x3, x21, #0x308
  40410c:	ldr	x4, [x2]
  404110:	mov	w2, #0x0                   	// #0
  404114:	bl	416648 <__fxstatat@plt+0x13bf8>
  404118:	bl	415e08 <__fxstatat@plt+0x133b8>
  40411c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  404120:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  404124:	add	x3, x21, #0xb28
  404128:	add	x1, x1, #0x2b8
  40412c:	add	x0, x0, #0x6d8
  404130:	mov	w2, #0x403                 	// #1027
  404134:	bl	4029d0 <__assert_fail@plt>
  404138:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40413c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  404140:	add	x3, x21, #0xb38
  404144:	add	x1, x1, #0x2b8
  404148:	add	x0, x0, #0x710
  40414c:	mov	w2, #0x640                 	// #1600
  404150:	bl	4029d0 <__assert_fail@plt>
  404154:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  404158:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40415c:	add	x3, x21, #0xb38
  404160:	add	x1, x1, #0x2b8
  404164:	add	x0, x0, #0x760
  404168:	mov	w2, #0x674                 	// #1652
  40416c:	bl	4029d0 <__assert_fail@plt>
  404170:	bl	402760 <abort@plt>
  404174:	mov	x29, #0x0                   	// #0
  404178:	mov	x30, #0x0                   	// #0
  40417c:	mov	x5, x0
  404180:	ldr	x1, [sp]
  404184:	add	x2, sp, #0x8
  404188:	mov	x6, sp
  40418c:	movz	x0, #0x0, lsl #48
  404190:	movk	x0, #0x0, lsl #32
  404194:	movk	x0, #0x40, lsl #16
  404198:	movk	x0, #0x2a60
  40419c:	movz	x3, #0x0, lsl #48
  4041a0:	movk	x3, #0x0, lsl #32
  4041a4:	movk	x3, #0x41, lsl #16
  4041a8:	movk	x3, #0x9150
  4041ac:	movz	x4, #0x0, lsl #48
  4041b0:	movk	x4, #0x0, lsl #32
  4041b4:	movk	x4, #0x41, lsl #16
  4041b8:	movk	x4, #0x91d0
  4041bc:	bl	402660 <__libc_start_main@plt>
  4041c0:	bl	402760 <abort@plt>
  4041c4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x1af80>
  4041c8:	ldr	x0, [x0, #4064]
  4041cc:	cbz	x0, 4041d4 <__fxstatat@plt+0x1784>
  4041d0:	b	402740 <__gmon_start__@plt>
  4041d4:	ret
  4041d8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4041dc:	add	x0, x0, #0x598
  4041e0:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4041e4:	add	x1, x1, #0x598
  4041e8:	cmp	x1, x0
  4041ec:	b.eq	404204 <__fxstatat@plt+0x17b4>  // b.none
  4041f0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  4041f4:	ldr	x1, [x1, #520]
  4041f8:	cbz	x1, 404204 <__fxstatat@plt+0x17b4>
  4041fc:	mov	x16, x1
  404200:	br	x16
  404204:	ret
  404208:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40420c:	add	x0, x0, #0x598
  404210:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404214:	add	x1, x1, #0x598
  404218:	sub	x1, x1, x0
  40421c:	lsr	x2, x1, #63
  404220:	add	x1, x2, x1, asr #3
  404224:	cmp	xzr, x1, asr #1
  404228:	asr	x1, x1, #1
  40422c:	b.eq	404244 <__fxstatat@plt+0x17f4>  // b.none
  404230:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1f80>
  404234:	ldr	x2, [x2, #528]
  404238:	cbz	x2, 404244 <__fxstatat@plt+0x17f4>
  40423c:	mov	x16, x2
  404240:	br	x16
  404244:	ret
  404248:	stp	x29, x30, [sp, #-32]!
  40424c:	mov	x29, sp
  404250:	str	x19, [sp, #16]
  404254:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404258:	ldrb	w0, [x19, #1488]
  40425c:	cbnz	w0, 40426c <__fxstatat@plt+0x181c>
  404260:	bl	4041d8 <__fxstatat@plt+0x1788>
  404264:	mov	w0, #0x1                   	// #1
  404268:	strb	w0, [x19, #1488]
  40426c:	ldr	x19, [sp, #16]
  404270:	ldp	x29, x30, [sp], #32
  404274:	ret
  404278:	b	404208 <__fxstatat@plt+0x17b8>
  40427c:	nop
  404280:	ldr	x0, [x0]
  404284:	udiv	x2, x0, x1
  404288:	msub	x0, x2, x1, x0
  40428c:	ret
  404290:	ldr	x3, [x0]
  404294:	ldr	x2, [x1]
  404298:	cmp	x3, x2
  40429c:	b.eq	4042a8 <__fxstatat@plt+0x1858>  // b.none
  4042a0:	mov	w0, #0x0                   	// #0
  4042a4:	ret
  4042a8:	ldr	x2, [x0, #8]
  4042ac:	ldr	x0, [x1, #8]
  4042b0:	cmp	x2, x0
  4042b4:	cset	w0, eq  // eq = none
  4042b8:	ret
  4042bc:	nop
  4042c0:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4042c4:	ldr	w2, [x1, #1504]
  4042c8:	cbnz	w2, 4042d0 <__fxstatat@plt+0x1880>
  4042cc:	str	w0, [x1, #1504]
  4042d0:	ret
  4042d4:	nop
  4042d8:	mov	x10, x0
  4042dc:	mov	x9, #0x0                   	// #0
  4042e0:	ldr	x6, [x1]
  4042e4:	and	w0, w2, #0xff
  4042e8:	ldr	x7, [x10]
  4042ec:	mov	w14, #0x7f                  	// #127
  4042f0:	mov	w13, #0x9                   	// #9
  4042f4:	mov	w12, #0xa                   	// #10
  4042f8:	mov	w11, #0x20                  	// #32
  4042fc:	mov	w2, #0x7f                  	// #127
  404300:	ldrb	w4, [x6]
  404304:	cmp	w4, #0x5c
  404308:	b.eq	404334 <__fxstatat@plt+0x18e4>  // b.none
  40430c:	b.hi	40436c <__fxstatat@plt+0x191c>  // b.pmore
  404310:	cmp	w4, #0x3d
  404314:	b.eq	4044fc <__fxstatat@plt+0x1aac>  // b.none
  404318:	b.ls	4043a4 <__fxstatat@plt+0x1954>  // b.plast
  40431c:	add	x6, x6, #0x1
  404320:	strb	w4, [x7], #1
  404324:	add	x9, x9, #0x1
  404328:	ldrb	w4, [x6]
  40432c:	cmp	w4, #0x5c
  404330:	b.ne	40430c <__fxstatat@plt+0x18bc>  // b.any
  404334:	ldrb	w4, [x6, #1]
  404338:	add	x6, x6, #0x2
  40433c:	cmp	w4, #0x65
  404340:	b.eq	40457c <__fxstatat@plt+0x1b2c>  // b.none
  404344:	b.hi	4043c4 <__fxstatat@plt+0x1974>  // b.pmore
  404348:	cmp	w4, #0x58
  40434c:	b.eq	40451c <__fxstatat@plt+0x1acc>  // b.none
  404350:	b.ls	40449c <__fxstatat@plt+0x1a4c>  // b.plast
  404354:	cmp	w4, #0x61
  404358:	b.eq	4044f4 <__fxstatat@plt+0x1aa4>  // b.none
  40435c:	cmp	w4, #0x62
  404360:	b.ne	404490 <__fxstatat@plt+0x1a40>  // b.any
  404364:	mov	w4, #0x8                   	// #8
  404368:	b	404398 <__fxstatat@plt+0x1948>
  40436c:	cmp	w4, #0x5e
  404370:	b.ne	40431c <__fxstatat@plt+0x18cc>  // b.any
  404374:	ldrb	w4, [x6, #1]
  404378:	add	x8, x6, #0x1
  40437c:	sub	w5, w4, #0x40
  404380:	and	w5, w5, #0xff
  404384:	cmp	w5, #0x3e
  404388:	b.hi	4044d0 <__fxstatat@plt+0x1a80>  // b.pmore
  40438c:	and	w4, w4, #0x1f
  404390:	add	x6, x6, #0x2
  404394:	nop
  404398:	add	x9, x9, #0x1
  40439c:	strb	w4, [x7], #1
  4043a0:	b	404300 <__fxstatat@plt+0x18b0>
  4043a4:	cbz	w4, 4043b0 <__fxstatat@plt+0x1960>
  4043a8:	cmp	w4, #0x3a
  4043ac:	b.ne	40431c <__fxstatat@plt+0x18cc>  // b.any
  4043b0:	mov	w0, #0x1                   	// #1
  4043b4:	str	x7, [x10]
  4043b8:	str	x6, [x1]
  4043bc:	str	x9, [x3]
  4043c0:	ret
  4043c4:	cmp	w4, #0x72
  4043c8:	b.eq	404514 <__fxstatat@plt+0x1ac4>  // b.none
  4043cc:	b.ls	404470 <__fxstatat@plt+0x1a20>  // b.plast
  4043d0:	cmp	w4, #0x76
  4043d4:	b.eq	4044ec <__fxstatat@plt+0x1a9c>  // b.none
  4043d8:	cmp	w4, #0x78
  4043dc:	mov	w5, #0x0                   	// #0
  4043e0:	b.ne	404484 <__fxstatat@plt+0x1a34>  // b.any
  4043e4:	ldrb	w4, [x6]
  4043e8:	sub	w15, w4, #0x30
  4043ec:	cmp	w4, #0x46
  4043f0:	add	w8, w4, w5, lsl #4
  4043f4:	and	w15, w15, #0xff
  4043f8:	b.hi	404434 <__fxstatat@plt+0x19e4>  // b.pmore
  4043fc:	cmp	w4, #0x40
  404400:	and	w8, w8, #0xff
  404404:	b.hi	404458 <__fxstatat@plt+0x1a08>  // b.pmore
  404408:	sub	w8, w8, #0x30
  40440c:	cmp	w15, #0x9
  404410:	b.hi	40444c <__fxstatat@plt+0x19fc>  // b.pmore
  404414:	ldrb	w4, [x6, #1]
  404418:	and	w5, w8, #0xff
  40441c:	add	x6, x6, #0x1
  404420:	sub	w15, w4, #0x30
  404424:	cmp	w4, #0x46
  404428:	add	w8, w4, w5, lsl #4
  40442c:	and	w15, w15, #0xff
  404430:	b.ls	4043fc <__fxstatat@plt+0x19ac>  // b.plast
  404434:	sub	w4, w4, #0x61
  404438:	and	w8, w8, #0xff
  40443c:	and	w4, w4, #0xff
  404440:	sub	w8, w8, #0x57
  404444:	cmp	w4, #0x5
  404448:	b.ls	404414 <__fxstatat@plt+0x19c4>  // b.plast
  40444c:	add	x9, x9, #0x1
  404450:	strb	w5, [x7], #1
  404454:	b	404300 <__fxstatat@plt+0x18b0>
  404458:	add	w5, w4, w5, lsl #4
  40445c:	add	x6, x6, #0x1
  404460:	and	w5, w5, #0xff
  404464:	sub	w5, w5, #0x37
  404468:	and	w5, w5, #0xff
  40446c:	b	4043e4 <__fxstatat@plt+0x1994>
  404470:	cmp	w4, #0x66
  404474:	b.eq	4044e4 <__fxstatat@plt+0x1a94>  // b.none
  404478:	cmp	w4, #0x6e
  40447c:	csel	w4, w4, w12, ne  // ne = any
  404480:	b	404398 <__fxstatat@plt+0x1948>
  404484:	cmp	w4, #0x74
  404488:	csel	w4, w4, w13, ne  // ne = any
  40448c:	b	404398 <__fxstatat@plt+0x1948>
  404490:	cmp	w4, #0x5f
  404494:	csel	w4, w4, w11, ne  // ne = any
  404498:	b	404398 <__fxstatat@plt+0x1948>
  40449c:	cmp	w4, #0x37
  4044a0:	b.hi	4044c4 <__fxstatat@plt+0x1a74>  // b.pmore
  4044a4:	cmp	w4, #0x2f
  4044a8:	b.hi	404524 <__fxstatat@plt+0x1ad4>  // b.pmore
  4044ac:	cbnz	w4, 404398 <__fxstatat@plt+0x1948>
  4044b0:	mov	w0, #0x0                   	// #0
  4044b4:	str	x7, [x10]
  4044b8:	str	x6, [x1]
  4044bc:	str	x9, [x3]
  4044c0:	ret
  4044c4:	cmp	w4, #0x3f
  4044c8:	csel	w4, w4, w2, ne  // ne = any
  4044cc:	b	404398 <__fxstatat@plt+0x1948>
  4044d0:	cmp	w4, #0x3f
  4044d4:	b.eq	404504 <__fxstatat@plt+0x1ab4>  // b.none
  4044d8:	mov	x6, x8
  4044dc:	mov	w0, #0x0                   	// #0
  4044e0:	b	4044b4 <__fxstatat@plt+0x1a64>
  4044e4:	mov	w4, #0xc                   	// #12
  4044e8:	b	404398 <__fxstatat@plt+0x1948>
  4044ec:	mov	w4, #0xb                   	// #11
  4044f0:	b	404398 <__fxstatat@plt+0x1948>
  4044f4:	mov	w4, #0x7                   	// #7
  4044f8:	b	404398 <__fxstatat@plt+0x1948>
  4044fc:	cbnz	w0, 4043b4 <__fxstatat@plt+0x1964>
  404500:	b	40431c <__fxstatat@plt+0x18cc>
  404504:	add	x9, x9, #0x1
  404508:	mov	x6, x8
  40450c:	strb	w14, [x7], #1
  404510:	b	404300 <__fxstatat@plt+0x18b0>
  404514:	mov	w4, #0xd                   	// #13
  404518:	b	404398 <__fxstatat@plt+0x1948>
  40451c:	mov	w5, #0x0                   	// #0
  404520:	b	4043e4 <__fxstatat@plt+0x1994>
  404524:	ldrb	w5, [x6]
  404528:	sub	w4, w4, #0x30
  40452c:	and	w4, w4, #0xff
  404530:	sub	w8, w5, #0x30
  404534:	add	w5, w5, w4, lsl #3
  404538:	and	w8, w8, #0xff
  40453c:	and	w5, w5, #0xff
  404540:	cmp	w8, #0x7
  404544:	sub	w5, w5, #0x30
  404548:	b.hi	404398 <__fxstatat@plt+0x1948>  // b.pmore
  40454c:	nop
  404550:	add	x6, x6, #0x1
  404554:	and	w4, w5, #0xff
  404558:	ldrb	w5, [x6]
  40455c:	sub	w8, w5, #0x30
  404560:	add	w5, w5, w4, lsl #3
  404564:	and	w8, w8, #0xff
  404568:	and	w5, w5, #0xff
  40456c:	cmp	w8, #0x7
  404570:	sub	w5, w5, #0x30
  404574:	b.ls	404550 <__fxstatat@plt+0x1b00>  // b.plast
  404578:	b	404398 <__fxstatat@plt+0x1948>
  40457c:	mov	w4, #0x1b                  	// #27
  404580:	b	404398 <__fxstatat@plt+0x1948>
  404584:	nop
  404588:	b	402840 <free@plt>
  40458c:	nop
  404590:	ubfiz	x0, x0, #4, #32
  404594:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404598:	add	x1, x1, #0x370
  40459c:	add	x2, x1, x0
  4045a0:	ldr	x0, [x1, x0]
  4045a4:	cbz	x0, 4045c4 <__fxstatat@plt+0x1b74>
  4045a8:	cmp	x0, #0x1
  4045ac:	ldr	x1, [x2, #8]
  4045b0:	b.eq	4045cc <__fxstatat@plt+0x1b7c>  // b.none
  4045b4:	cmp	x0, #0x2
  4045b8:	mov	w0, #0x1                   	// #1
  4045bc:	b.eq	4045dc <__fxstatat@plt+0x1b8c>  // b.none
  4045c0:	ret
  4045c4:	mov	w0, #0x0                   	// #0
  4045c8:	ret
  4045cc:	ldrb	w0, [x1]
  4045d0:	cmp	w0, #0x30
  4045d4:	cset	w0, ne  // ne = any
  4045d8:	ret
  4045dc:	ldrb	w0, [x1]
  4045e0:	subs	w0, w0, #0x30
  4045e4:	b.ne	4045f0 <__fxstatat@plt+0x1ba0>  // b.any
  4045e8:	ldrb	w0, [x1, #1]
  4045ec:	sub	w0, w0, #0x30
  4045f0:	cmp	w0, #0x0
  4045f4:	cset	w0, ne  // ne = any
  4045f8:	ret
  4045fc:	nop
  404600:	stp	x29, x30, [sp, #-32]!
  404604:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x2f80>
  404608:	mov	w2, #0x0                   	// #0
  40460c:	mov	x29, sp
  404610:	add	x3, sp, #0x18
  404614:	add	x4, x4, #0x58
  404618:	mov	x1, #0x0                   	// #0
  40461c:	bl	4166e8 <__fxstatat@plt+0x13c98>
  404620:	cbz	w0, 40464c <__fxstatat@plt+0x1bfc>
  404624:	cmp	w0, #0x1
  404628:	b.ne	404640 <__fxstatat@plt+0x1bf0>  // b.any
  40462c:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404630:	mov	x2, #0xffffffffffffffff    	// #-1
  404634:	str	x2, [x1, #1512]
  404638:	ldp	x29, x30, [sp], #32
  40463c:	ret
  404640:	mov	w0, #0x0                   	// #0
  404644:	ldp	x29, x30, [sp], #32
  404648:	ret
  40464c:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404650:	mov	w0, #0x1                   	// #1
  404654:	ldr	x2, [sp, #24]
  404658:	str	x2, [x1, #1512]
  40465c:	ldp	x29, x30, [sp], #32
  404660:	ret
  404664:	nop
  404668:	sub	sp, sp, #0x6b0
  40466c:	mov	x2, #0x0                   	// #0
  404670:	stp	x29, x30, [sp, #16]
  404674:	add	x29, sp, #0x10
  404678:	stp	x21, x22, [sp, #48]
  40467c:	adrp	x22, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404680:	add	x22, x22, #0x370
  404684:	add	x3, x22, #0x180
  404688:	stp	x23, x24, [sp, #64]
  40468c:	add	x23, sp, #0xa0
  404690:	stp	x25, x26, [sp, #80]
  404694:	ldr	x1, [x2, x3]
  404698:	ldrb	w0, [x1]
  40469c:	cbnz	w0, 4046ac <__fxstatat@plt+0x1c5c>
  4046a0:	b	404790 <__fxstatat@plt+0x1d40>
  4046a4:	add	x1, x1, #0x1
  4046a8:	cbz	w0, 404790 <__fxstatat@plt+0x1d40>
  4046ac:	cmp	w0, #0x25
  4046b0:	ldrb	w0, [x1, #1]
  4046b4:	b.ne	4046a4 <__fxstatat@plt+0x1c54>  // b.any
  4046b8:	cmp	w0, #0x25
  4046bc:	b.eq	40477c <__fxstatat@plt+0x1d2c>  // b.none
  4046c0:	cmp	w0, #0x62
  4046c4:	b.ne	4046a4 <__fxstatat@plt+0x1c54>  // b.any
  4046c8:	str	x1, [x23, x2]
  4046cc:	add	x2, x2, #0x8
  4046d0:	cmp	x2, #0x10
  4046d4:	b.ne	404694 <__fxstatat@plt+0x1c44>  // b.any
  4046d8:	ldr	x0, [sp, #160]
  4046dc:	mov	x25, #0xc                   	// #12
  4046e0:	cbz	x0, 4047b4 <__fxstatat@plt+0x1d64>
  4046e4:	stp	x19, x20, [sp, #32]
  4046e8:	mov	w20, #0xe                   	// #14
  4046ec:	add	x24, sp, #0xb0
  4046f0:	movk	w20, #0x2, lsl #16
  4046f4:	mov	x21, #0x0                   	// #0
  4046f8:	mov	w0, w20
  4046fc:	str	x25, [sp, #152]
  404700:	bl	4025e0 <nl_langinfo@plt>
  404704:	add	w20, w20, #0x1
  404708:	mov	x19, x0
  40470c:	mov	w1, #0x25                  	// #37
  404710:	bl	402880 <strchr@plt>
  404714:	cbnz	x0, 404798 <__fxstatat@plt+0x1d48>
  404718:	bl	402820 <__ctype_b_loc@plt>
  40471c:	mov	x1, x0
  404720:	ldrb	w6, [x19]
  404724:	mov	x2, #0x80                  	// #128
  404728:	mov	x0, x19
  40472c:	add	x3, sp, #0x98
  404730:	ldr	x4, [x1]
  404734:	mov	w5, #0x0                   	// #0
  404738:	mov	x1, x24
  40473c:	add	x24, x24, x2
  404740:	ldrh	w4, [x4, x6, lsl #1]
  404744:	ubfx	x4, x4, #11, #1
  404748:	bl	40f818 <__fxstatat@plt+0xcdc8>
  40474c:	sub	w1, w20, #0x20, lsl #12
  404750:	cmp	x0, #0x7f
  404754:	b.hi	404798 <__fxstatat@plt+0x1d48>  // b.pmore
  404758:	ldr	x0, [sp, #152]
  40475c:	cmp	x21, x0
  404760:	csel	x21, x21, x0, cs  // cs = hs, nlast
  404764:	subs	w1, w1, #0x1a
  404768:	b.ne	4046f8 <__fxstatat@plt+0x1ca8>  // b.any
  40476c:	cmp	x25, x21
  404770:	b.ls	4047c0 <__fxstatat@plt+0x1d70>  // b.plast
  404774:	mov	x25, x21
  404778:	b	4046e8 <__fxstatat@plt+0x1c98>
  40477c:	ldrb	w0, [x1, #2]
  404780:	add	x1, x1, #0x1
  404784:	add	x1, x1, #0x1
  404788:	cbnz	w0, 4046ac <__fxstatat@plt+0x1c5c>
  40478c:	nop
  404790:	mov	x1, #0x0                   	// #0
  404794:	b	4046c8 <__fxstatat@plt+0x1c78>
  404798:	ldp	x19, x20, [sp, #32]
  40479c:	ldp	x29, x30, [sp, #16]
  4047a0:	ldp	x21, x22, [sp, #48]
  4047a4:	ldp	x23, x24, [sp, #64]
  4047a8:	ldp	x25, x26, [sp, #80]
  4047ac:	add	sp, sp, #0x6b0
  4047b0:	ret
  4047b4:	ldr	x0, [sp, #168]
  4047b8:	cbnz	x0, 4046e4 <__fxstatat@plt+0x1c94>
  4047bc:	b	40479c <__fxstatat@plt+0x1d4c>
  4047c0:	stp	x27, x28, [sp, #96]
  4047c4:	adrp	x28, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4047c8:	add	x0, x28, #0x5e0
  4047cc:	adrp	x25, 419000 <_obstack_memory_used@@Base+0x1f80>
  4047d0:	add	x25, x25, #0x2a8
  4047d4:	str	x0, [sp, #136]
  4047d8:	add	x0, x0, #0x10
  4047dc:	adrp	x27, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4047e0:	mov	x26, #0x0                   	// #0
  4047e4:	str	x0, [sp, #120]
  4047e8:	add	x0, x27, #0x418
  4047ec:	str	x0, [sp, #128]
  4047f0:	ldr	x20, [x23, x26, lsl #3]
  4047f4:	add	x0, x22, #0x180
  4047f8:	ldr	x28, [x0, x26, lsl #3]
  4047fc:	cbz	x20, 40488c <__fxstatat@plt+0x1e3c>
  404800:	add	x0, sp, #0xb0
  404804:	sub	x24, x20, x28
  404808:	ldr	x27, [sp, #120]
  40480c:	add	x21, sp, #0x6b0
  404810:	add	x20, x20, #0x2
  404814:	mov	x19, x0
  404818:	mov	x1, #0x80                  	// #128
  40481c:	mov	x7, x19
  404820:	mov	x0, x27
  404824:	mov	x6, x28
  404828:	mov	w5, w24
  40482c:	mov	x4, x25
  404830:	add	x19, x19, x1
  404834:	cmp	x24, x1
  404838:	mov	x3, #0xffffffffffffffff    	// #-1
  40483c:	mov	w2, #0x1                   	// #1
  404840:	b.gt	4048c4 <__fxstatat@plt+0x1e74>
  404844:	str	x20, [sp]
  404848:	add	x27, x27, x1
  40484c:	bl	4025c0 <__snprintf_chk@plt>
  404850:	cmp	w0, #0x7f
  404854:	b.hi	4048c4 <__fxstatat@plt+0x1e74>  // b.pmore
  404858:	cmp	x19, x21
  40485c:	b.ne	404818 <__fxstatat@plt+0x1dc8>  // b.any
  404860:	ldr	x0, [sp, #120]
  404864:	add	x24, x0, #0x600
  404868:	str	x24, [sp, #120]
  40486c:	cbnz	x26, 404878 <__fxstatat@plt+0x1e28>
  404870:	mov	x26, #0x1                   	// #1
  404874:	b	4047f0 <__fxstatat@plt+0x1da0>
  404878:	ldr	x0, [sp, #136]
  40487c:	ldp	x19, x20, [sp, #32]
  404880:	ldp	x27, x28, [sp, #96]
  404884:	strb	w26, [x0, #3088]
  404888:	b	40479c <__fxstatat@plt+0x1d4c>
  40488c:	ldr	x19, [sp, #120]
  404890:	add	x20, x19, #0x600
  404894:	b	4048a4 <__fxstatat@plt+0x1e54>
  404898:	cmp	x19, x20
  40489c:	mov	x24, x20
  4048a0:	b.eq	404868 <__fxstatat@plt+0x1e18>  // b.none
  4048a4:	ldr	x2, [sp, #128]
  4048a8:	mov	x0, x19
  4048ac:	mov	x3, x28
  4048b0:	mov	x1, #0x80                  	// #128
  4048b4:	add	x19, x19, #0x80
  4048b8:	bl	402570 <snprintf@plt>
  4048bc:	cmp	w0, #0x7f
  4048c0:	b.ls	404898 <__fxstatat@plt+0x1e48>  // b.plast
  4048c4:	ldp	x19, x20, [sp, #32]
  4048c8:	ldp	x27, x28, [sp, #96]
  4048cc:	b	40479c <__fxstatat@plt+0x1d4c>
  4048d0:	ldr	x0, [x0]
  4048d4:	ldr	x1, [x1]
  4048d8:	b	402800 <strcmp@plt>
  4048dc:	nop
  4048e0:	mov	x2, x1
  4048e4:	ldr	x1, [x0]
  4048e8:	ldr	x0, [x2]
  4048ec:	b	402800 <strcmp@plt>
  4048f0:	stp	x29, x30, [sp, #-48]!
  4048f4:	mov	x29, sp
  4048f8:	stp	x19, x20, [sp, #16]
  4048fc:	adrp	x20, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404900:	add	x20, x20, #0x5e0
  404904:	ldr	x1, [x20, #3096]
  404908:	ldr	x19, [x20, #3104]
  40490c:	ldr	x0, [x20, #3112]
  404910:	cmp	x19, x1
  404914:	csel	x19, x19, x1, ls  // ls = plast
  404918:	cmp	x0, x19
  40491c:	b.cs	4049e8 <__fxstatat@plt+0x1f98>  // b.hs, b.nlast
  404920:	str	x21, [sp, #32]
  404924:	cmp	x19, x1, lsr #1
  404928:	ldr	x0, [x20, #3120]
  40492c:	b.cc	404aa0 <__fxstatat@plt+0x2050>  // b.lo, b.ul, b.last
  404930:	mov	x2, #0x18                  	// #24
  404934:	umulh	x3, x1, x2
  404938:	mul	x2, x1, x2
  40493c:	cmp	x3, #0x0
  404940:	cset	x3, ne  // ne = any
  404944:	tbnz	x2, #63, 404ad4 <__fxstatat@plt+0x2084>
  404948:	cbnz	x3, 404ad4 <__fxstatat@plt+0x2084>
  40494c:	add	x1, x1, x1, lsl #1
  404950:	lsl	x1, x1, #3
  404954:	bl	415c70 <__fxstatat@plt+0x13220>
  404958:	ldr	x21, [x20, #3096]
  40495c:	str	x0, [x20, #3120]
  404960:	ldr	x0, [x20, #3112]
  404964:	add	x2, x0, #0x1
  404968:	sub	x0, x21, x0
  40496c:	adds	x2, x21, x2
  404970:	mul	x1, x0, x2
  404974:	b.cs	404ad4 <__fxstatat@plt+0x2084>  // b.hs, b.nlast
  404978:	udiv	x0, x1, x0
  40497c:	cmp	x0, x2
  404980:	b.ne	404ad4 <__fxstatat@plt+0x2084>  // b.any
  404984:	cmp	xzr, x1, lsr #62
  404988:	lsr	x1, x1, #1
  40498c:	cset	x2, ne  // ne = any
  404990:	lsl	x0, x1, #3
  404994:	tbnz	x1, #60, 404ad4 <__fxstatat@plt+0x2084>
  404998:	cbnz	x2, 404ad4 <__fxstatat@plt+0x2084>
  40499c:	bl	415c40 <__fxstatat@plt+0x131f0>
  4049a0:	ldr	x1, [x20, #3112]
  4049a4:	cmp	x21, x1
  4049a8:	b.ls	4049e0 <__fxstatat@plt+0x1f90>  // b.plast
  4049ac:	ldr	x4, [x20, #3120]
  4049b0:	add	x2, x1, x1, lsl #1
  4049b4:	add	x3, x21, #0x1
  4049b8:	add	x1, x1, #0x1
  4049bc:	lsl	x3, x3, #3
  4049c0:	lsl	x1, x1, #3
  4049c4:	add	x2, x4, x2, lsl #3
  4049c8:	str	x0, [x2, #16]
  4049cc:	add	x0, x0, x1
  4049d0:	add	x1, x1, #0x8
  4049d4:	add	x2, x2, #0x18
  4049d8:	cmp	x1, x3
  4049dc:	b.ne	4049c8 <__fxstatat@plt+0x1f78>  // b.any
  4049e0:	str	x21, [x20, #3112]
  4049e4:	ldr	x21, [sp, #32]
  4049e8:	cbz	x19, 404a8c <__fxstatat@plt+0x203c>
  4049ec:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  4049f0:	mov	x6, #0x3                   	// #3
  4049f4:	ldr	x4, [x20, #3120]
  4049f8:	mov	x7, x6
  4049fc:	ldr	q0, [x0, #2704]
  404a00:	mov	x5, #0x0                   	// #0
  404a04:	mov	x3, #0x0                   	// #0
  404a08:	mov	w8, #0x1                   	// #1
  404a0c:	nop
  404a10:	strb	w8, [x4]
  404a14:	add	x3, x3, #0x1
  404a18:	str	x6, [x4, #8]
  404a1c:	cmp	x5, #0x2
  404a20:	ldr	x2, [x4, #16]
  404a24:	b.ls	404a98 <__fxstatat@plt+0x2048>  // b.plast
  404a28:	lsr	x1, x3, #1
  404a2c:	mov	x0, x2
  404a30:	add	x1, x2, x1, lsl #4
  404a34:	nop
  404a38:	str	q0, [x0], #16
  404a3c:	cmp	x1, x0
  404a40:	b.ne	404a38 <__fxstatat@plt+0x1fe8>  // b.any
  404a44:	and	x0, x3, #0xfffffffffffffffe
  404a48:	tbz	w3, #0, 404a78 <__fxstatat@plt+0x2028>
  404a4c:	str	x7, [x2, x0, lsl #3]
  404a50:	add	x1, x0, #0x1
  404a54:	cmp	x5, x1
  404a58:	lsl	x1, x0, #3
  404a5c:	b.cc	404a78 <__fxstatat@plt+0x2028>  // b.lo, b.ul, b.last
  404a60:	add	x2, x2, x1
  404a64:	add	x0, x0, #0x2
  404a68:	cmp	x0, x5
  404a6c:	str	x7, [x2, #8]
  404a70:	b.hi	404a78 <__fxstatat@plt+0x2028>  // b.pmore
  404a74:	str	x7, [x2, #16]
  404a78:	add	x5, x5, #0x1
  404a7c:	add	x4, x4, #0x18
  404a80:	add	x6, x6, #0x3
  404a84:	cmp	x3, x19
  404a88:	b.ne	404a10 <__fxstatat@plt+0x1fc0>  // b.any
  404a8c:	ldp	x19, x20, [sp, #16]
  404a90:	ldp	x29, x30, [sp], #48
  404a94:	ret
  404a98:	mov	x0, #0x0                   	// #0
  404a9c:	b	404a4c <__fxstatat@plt+0x1ffc>
  404aa0:	mov	x1, #0x30                  	// #48
  404aa4:	umulh	x2, x19, x1
  404aa8:	mul	x1, x19, x1
  404aac:	cmp	x2, #0x0
  404ab0:	cset	x2, ne  // ne = any
  404ab4:	tbnz	x1, #63, 404ad4 <__fxstatat@plt+0x2084>
  404ab8:	cbnz	x2, 404ad4 <__fxstatat@plt+0x2084>
  404abc:	lsl	x21, x19, #1
  404ac0:	add	x1, x21, x19
  404ac4:	lsl	x1, x1, #4
  404ac8:	bl	415c70 <__fxstatat@plt+0x13220>
  404acc:	str	x0, [x20, #3120]
  404ad0:	b	404960 <__fxstatat@plt+0x1f10>
  404ad4:	bl	415e08 <__fxstatat@plt+0x133b8>
  404ad8:	stp	x29, x30, [sp, #-32]!
  404adc:	mov	x29, sp
  404ae0:	stp	x19, x20, [sp, #16]
  404ae4:	adrp	x20, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404ae8:	add	x20, x20, #0x5e0
  404aec:	ldr	x19, [x20, #3104]
  404af0:	ldr	x0, [x20, #3128]
  404af4:	add	x1, x19, x19, lsr #1
  404af8:	cmp	x1, x0
  404afc:	b.hi	404bf4 <__fxstatat@plt+0x21a4>  // b.pmore
  404b00:	cbz	x19, 404b28 <__fxstatat@plt+0x20d8>
  404b04:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404b08:	add	x1, x1, #0x5e0
  404b0c:	ldr	x0, [x1, #3136]
  404b10:	ldr	x1, [x1, #3152]
  404b14:	add	x2, x0, x19, lsl #3
  404b18:	str	x1, [x0], #8
  404b1c:	add	x1, x1, #0xb8
  404b20:	cmp	x0, x2
  404b24:	b.ne	404b18 <__fxstatat@plt+0x20c8>  // b.any
  404b28:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404b2c:	add	x0, x0, #0x5e0
  404b30:	ldr	w1, [x0, #3144]
  404b34:	cmn	w1, #0x1
  404b38:	b.eq	404bdc <__fxstatat@plt+0x218c>  // b.none
  404b3c:	add	x0, x0, #0xc58
  404b40:	bl	402470 <_setjmp@plt>
  404b44:	adrp	x3, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404b48:	add	x3, x3, #0x5e0
  404b4c:	mov	w2, w0
  404b50:	ldr	w4, [x3, #3144]
  404b54:	cbz	w0, 404be8 <__fxstatat@plt+0x2198>
  404b58:	cmp	w4, #0x3
  404b5c:	b.eq	404c40 <__fxstatat@plt+0x21f0>  // b.none
  404b60:	ldr	x1, [x3, #3104]
  404b64:	ldr	x0, [x3, #3136]
  404b68:	cbz	x1, 404b8c <__fxstatat@plt+0x213c>
  404b6c:	ldr	x3, [x3, #3152]
  404b70:	mov	x2, #0x0                   	// #0
  404b74:	nop
  404b78:	str	x3, [x0, x2, lsl #3]
  404b7c:	add	x2, x2, #0x1
  404b80:	cmp	x2, x1
  404b84:	add	x3, x3, #0xb8
  404b88:	b.ne	404b78 <__fxstatat@plt+0x2128>  // b.any
  404b8c:	mov	w2, #0x1                   	// #1
  404b90:	cmp	w4, #0x4
  404b94:	mov	w3, #0x0                   	// #0
  404b98:	b.ne	404ba4 <__fxstatat@plt+0x2154>  // b.any
  404b9c:	adrp	x3, 434000 <__progname@@GLIBC_2.17+0xa38>
  404ba0:	ldr	w3, [x3, #880]
  404ba4:	adrp	x5, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404ba8:	add	x5, x5, #0x5e0
  404bac:	add	w4, w4, w3
  404bb0:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x3f80>
  404bb4:	add	x3, x3, #0xe80
  404bb8:	lsl	x4, x4, #1
  404bbc:	ldrb	w6, [x5, #3477]
  404bc0:	add	x2, x4, w2, sxtw
  404bc4:	ldrb	w4, [x5, #3476]
  404bc8:	add	x3, x3, #0x10
  404bcc:	add	x2, x6, x2, lsl #1
  404bd0:	add	x2, x4, x2, lsl #1
  404bd4:	ldr	x2, [x3, x2, lsl #3]
  404bd8:	bl	410170 <__fxstatat@plt+0xd720>
  404bdc:	ldp	x19, x20, [sp, #16]
  404be0:	ldp	x29, x30, [sp], #32
  404be4:	ret
  404be8:	ldr	x1, [x3, #3104]
  404bec:	ldr	x0, [x3, #3136]
  404bf0:	b	404b90 <__fxstatat@plt+0x2140>
  404bf4:	ldr	x0, [x20, #3136]
  404bf8:	bl	402840 <free@plt>
  404bfc:	mov	x0, #0x18                  	// #24
  404c00:	umulh	x1, x19, x0
  404c04:	mul	x0, x19, x0
  404c08:	cmp	x1, #0x0
  404c0c:	cset	x1, ne  // ne = any
  404c10:	cmp	x0, #0x0
  404c14:	csinc	x1, x1, xzr, ge  // ge = tcont
  404c18:	cbnz	x1, 404c3c <__fxstatat@plt+0x21ec>
  404c1c:	add	x19, x19, x19, lsl #1
  404c20:	lsl	x0, x19, #3
  404c24:	bl	415c40 <__fxstatat@plt+0x131f0>
  404c28:	ldr	x19, [x20, #3104]
  404c2c:	str	x0, [x20, #3136]
  404c30:	add	x0, x19, x19, lsl #1
  404c34:	str	x0, [x20, #3128]
  404c38:	b	404b00 <__fxstatat@plt+0x20b0>
  404c3c:	bl	415e08 <__fxstatat@plt+0x133b8>
  404c40:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x3f80>
  404c44:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  404c48:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  404c4c:	add	x3, x3, #0xe80
  404c50:	add	x1, x1, #0x2b8
  404c54:	add	x0, x0, #0x2c8
  404c58:	mov	w2, #0xeea                 	// #3818
  404c5c:	bl	4029d0 <__assert_fail@plt>
  404c60:	mov	x2, x1
  404c64:	ldr	x1, [x0]
  404c68:	ldr	x0, [x2]
  404c6c:	b	40c878 <__fxstatat@plt+0x9e28>
  404c70:	ldr	x0, [x0]
  404c74:	ldr	x1, [x1]
  404c78:	b	40c878 <__fxstatat@plt+0x9e28>
  404c7c:	nop
  404c80:	cmp	x0, x1
  404c84:	b.cs	404d64 <__fxstatat@plt+0x2314>  // b.hs, b.nlast
  404c88:	stp	x29, x30, [sp, #-80]!
  404c8c:	mov	x29, sp
  404c90:	stp	x19, x20, [sp, #16]
  404c94:	mov	x19, x0
  404c98:	stp	x21, x22, [sp, #32]
  404c9c:	adrp	x22, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404ca0:	mov	x21, x1
  404ca4:	add	x22, x22, #0x5e0
  404ca8:	stp	x23, x24, [sp, #48]
  404cac:	adrp	x23, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404cb0:	mov	w24, #0x20                  	// #32
  404cb4:	add	x23, x23, #0x5c0
  404cb8:	str	x25, [sp, #64]
  404cbc:	mov	w25, #0x9                   	// #9
  404cc0:	b	404cf8 <__fxstatat@plt+0x22a8>
  404cc4:	udiv	x4, x21, x3
  404cc8:	udiv	x1, x20, x3
  404ccc:	cmp	x4, x1
  404cd0:	b.ls	404d0c <__fxstatat@plt+0x22bc>  // b.plast
  404cd4:	cmp	x2, x5
  404cd8:	b.cs	404d54 <__fxstatat@plt+0x2304>  // b.hs, b.nlast
  404cdc:	add	x1, x2, #0x1
  404ce0:	str	x1, [x0, #40]
  404ce4:	strb	w25, [x2]
  404ce8:	udiv	x19, x19, x3
  404cec:	madd	x19, x19, x3, x3
  404cf0:	cmp	x19, x21
  404cf4:	b.cs	404d2c <__fxstatat@plt+0x22dc>  // b.hs, b.nlast
  404cf8:	ldr	x0, [x23]
  404cfc:	add	x20, x19, #0x1
  404d00:	ldr	x3, [x22, #3480]
  404d04:	ldp	x2, x5, [x0, #40]
  404d08:	cbnz	x3, 404cc4 <__fxstatat@plt+0x2274>
  404d0c:	cmp	x2, x5
  404d10:	b.cs	404d44 <__fxstatat@plt+0x22f4>  // b.hs, b.nlast
  404d14:	add	x1, x2, #0x1
  404d18:	mov	x19, x20
  404d1c:	str	x1, [x0, #40]
  404d20:	strb	w24, [x2]
  404d24:	cmp	x19, x21
  404d28:	b.cc	404cf8 <__fxstatat@plt+0x22a8>  // b.lo, b.ul, b.last
  404d2c:	ldp	x19, x20, [sp, #16]
  404d30:	ldp	x21, x22, [sp, #32]
  404d34:	ldp	x23, x24, [sp, #48]
  404d38:	ldr	x25, [sp, #64]
  404d3c:	ldp	x29, x30, [sp], #80
  404d40:	ret
  404d44:	mov	w1, #0x20                  	// #32
  404d48:	mov	x19, x20
  404d4c:	bl	402780 <__overflow@plt>
  404d50:	b	404d24 <__fxstatat@plt+0x22d4>
  404d54:	mov	w1, #0x9                   	// #9
  404d58:	bl	402780 <__overflow@plt>
  404d5c:	ldr	x3, [x22, #3480]
  404d60:	b	404ce8 <__fxstatat@plt+0x2298>
  404d64:	ret
  404d68:	stp	x29, x30, [sp, #-48]!
  404d6c:	mov	x2, x1
  404d70:	mov	x29, sp
  404d74:	stp	x19, x20, [sp, #16]
  404d78:	ldp	x19, x1, [x1, #16]
  404d7c:	sub	x20, x1, x19
  404d80:	cmp	x20, #0x7
  404d84:	b.ls	404e14 <__fxstatat@plt+0x23c4>  // b.plast
  404d88:	stp	x21, x22, [sp, #32]
  404d8c:	cmp	x1, x19
  404d90:	b.eq	404e20 <__fxstatat@plt+0x23d0>  // b.none
  404d94:	ldr	x3, [x2, #48]
  404d98:	adrp	x22, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404d9c:	ldr	x4, [x2, #8]
  404da0:	add	x1, x1, x3
  404da4:	ldr	x5, [x2, #32]
  404da8:	bic	x3, x1, x3
  404dac:	sub	x6, x3, x4
  404db0:	and	x20, x20, #0xfffffffffffffff8
  404db4:	sub	x4, x5, x4
  404db8:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x1f80>
  404dbc:	cmp	x6, x4
  404dc0:	add	x20, x19, x20
  404dc4:	ldr	x1, [x22, #1472]
  404dc8:	csel	x3, x3, x5, ls  // ls = plast
  404dcc:	stp	x3, x3, [x2, #16]
  404dd0:	add	x21, x21, #0x2e8
  404dd4:	bl	402980 <fputs_unlocked@plt>
  404dd8:	ldr	x2, [x19], #8
  404ddc:	mov	x1, x21
  404de0:	mov	w0, #0x1                   	// #1
  404de4:	bl	402670 <__printf_chk@plt>
  404de8:	cmp	x20, x19
  404dec:	b.ne	404dd8 <__fxstatat@plt+0x2388>  // b.any
  404df0:	ldr	x0, [x22, #1472]
  404df4:	ldp	x1, x2, [x0, #40]
  404df8:	cmp	x1, x2
  404dfc:	b.cs	404e30 <__fxstatat@plt+0x23e0>  // b.hs, b.nlast
  404e00:	add	x2, x1, #0x1
  404e04:	str	x2, [x0, #40]
  404e08:	mov	w0, #0xa                   	// #10
  404e0c:	strb	w0, [x1]
  404e10:	ldp	x21, x22, [sp, #32]
  404e14:	ldp	x19, x20, [sp, #16]
  404e18:	ldp	x29, x30, [sp], #48
  404e1c:	ret
  404e20:	ldrb	w3, [x2, #80]
  404e24:	orr	w3, w3, #0x2
  404e28:	strb	w3, [x2, #80]
  404e2c:	b	404d94 <__fxstatat@plt+0x2344>
  404e30:	ldp	x19, x20, [sp, #16]
  404e34:	mov	w1, #0xa                   	// #10
  404e38:	ldp	x21, x22, [sp, #32]
  404e3c:	ldp	x29, x30, [sp], #48
  404e40:	b	402780 <__overflow@plt>
  404e44:	nop
  404e48:	stp	x29, x30, [sp, #-48]!
  404e4c:	mov	x29, sp
  404e50:	stp	x19, x20, [sp, #16]
  404e54:	mov	w19, w2
  404e58:	stp	x21, x22, [sp, #32]
  404e5c:	cbz	x0, 404ef4 <__fxstatat@plt+0x24a4>
  404e60:	adrp	x20, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404e64:	mov	x22, x0
  404e68:	mov	w1, #0x0                   	// #0
  404e6c:	bl	40fea0 <__fxstatat@plt+0xd450>
  404e70:	ldr	x1, [x20, #1472]
  404e74:	subs	w19, w19, w0
  404e78:	csel	w19, w19, wzr, pl  // pl = nfrst
  404e7c:	mov	x0, x22
  404e80:	add	x20, x20, #0x5c0
  404e84:	mov	w21, #0x20                  	// #32
  404e88:	bl	402980 <fputs_unlocked@plt>
  404e8c:	mov	x0, x22
  404e90:	bl	402430 <strlen@plt>
  404e94:	add	x22, x0, w19, sxtw
  404e98:	ldr	x0, [x20]
  404e9c:	ldp	x1, x2, [x0, #40]
  404ea0:	add	x3, x1, #0x1
  404ea4:	cmp	x1, x2
  404ea8:	b.cs	404ee8 <__fxstatat@plt+0x2498>  // b.hs, b.nlast
  404eac:	str	x3, [x0, #40]
  404eb0:	strb	w21, [x1]
  404eb4:	sub	w19, w19, #0x1
  404eb8:	cmn	w19, #0x1
  404ebc:	b.ne	404e98 <__fxstatat@plt+0x2448>  // b.any
  404ec0:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404ec4:	add	x1, x1, #0x5e0
  404ec8:	ldr	x19, [x1, #3488]
  404ecc:	add	x19, x19, #0x1
  404ed0:	add	x19, x19, x22
  404ed4:	ldp	x21, x22, [sp, #32]
  404ed8:	str	x19, [x1, #3488]
  404edc:	ldp	x19, x20, [sp, #16]
  404ee0:	ldp	x29, x30, [sp], #48
  404ee4:	ret
  404ee8:	mov	w1, #0x20                  	// #32
  404eec:	bl	402780 <__overflow@plt>
  404ef0:	b	404eb4 <__fxstatat@plt+0x2464>
  404ef4:	mov	x3, x1
  404ef8:	sxtw	x22, w2
  404efc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  404f00:	mov	w0, #0x1                   	// #1
  404f04:	add	x1, x1, #0x2f0
  404f08:	bl	402670 <__printf_chk@plt>
  404f0c:	b	404ec0 <__fxstatat@plt+0x2470>
  404f10:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  404f14:	add	x1, x0, #0x5e0
  404f18:	ldr	w0, [x0, #1504]
  404f1c:	cbnz	w0, 404f2c <__fxstatat@plt+0x24dc>
  404f20:	ldr	w0, [x1, #3496]
  404f24:	add	w0, w0, #0x1
  404f28:	str	w0, [x1, #3496]
  404f2c:	ret
  404f30:	ldr	w4, [x1, #152]
  404f34:	ldr	w3, [x0, #152]
  404f38:	cmp	w4, #0x9
  404f3c:	cset	w2, eq  // eq = none
  404f40:	cmp	w4, #0x3
  404f44:	csinc	w2, w2, wzr, ne  // ne = any
  404f48:	cmp	w3, #0x3
  404f4c:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  404f50:	b.eq	404f70 <__fxstatat@plt+0x2520>  // b.none
  404f54:	ldr	w3, [x0, #156]
  404f58:	and	w3, w3, #0xf000
  404f5c:	cbz	w2, 404f98 <__fxstatat@plt+0x2548>
  404f60:	cmp	w3, #0x4, lsl #12
  404f64:	b.eq	404f74 <__fxstatat@plt+0x2524>  // b.none
  404f68:	mov	w0, #0x1                   	// #1
  404f6c:	ret
  404f70:	cbz	w2, 404f80 <__fxstatat@plt+0x2530>
  404f74:	ldr	x0, [x0]
  404f78:	ldr	x1, [x1]
  404f7c:	b	402800 <strcmp@plt>
  404f80:	ldr	w2, [x1, #156]
  404f84:	and	w2, w2, #0xf000
  404f88:	cmp	w2, #0x4, lsl #12
  404f8c:	b.eq	404f74 <__fxstatat@plt+0x2524>  // b.none
  404f90:	mov	w0, #0xffffffff            	// #-1
  404f94:	ret
  404f98:	ldr	w2, [x1, #156]
  404f9c:	and	w2, w2, #0xf000
  404fa0:	cmp	w2, #0x4, lsl #12
  404fa4:	b.eq	404f60 <__fxstatat@plt+0x2510>  // b.none
  404fa8:	cmp	w3, #0x4, lsl #12
  404fac:	b.eq	404f90 <__fxstatat@plt+0x2540>  // b.none
  404fb0:	ldr	x0, [x0]
  404fb4:	ldr	x1, [x1]
  404fb8:	b	402800 <strcmp@plt>
  404fbc:	nop
  404fc0:	ldr	w4, [x1, #152]
  404fc4:	mov	x2, x1
  404fc8:	ldr	w3, [x0, #152]
  404fcc:	cmp	w4, #0x9
  404fd0:	cset	w1, eq  // eq = none
  404fd4:	cmp	w4, #0x3
  404fd8:	csinc	w1, w1, wzr, ne  // ne = any
  404fdc:	cmp	w3, #0x3
  404fe0:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  404fe4:	b.eq	405004 <__fxstatat@plt+0x25b4>  // b.none
  404fe8:	ldr	w3, [x0, #156]
  404fec:	and	w3, w3, #0xf000
  404ff0:	cbz	w1, 40502c <__fxstatat@plt+0x25dc>
  404ff4:	cmp	w3, #0x4, lsl #12
  404ff8:	b.eq	405008 <__fxstatat@plt+0x25b8>  // b.none
  404ffc:	mov	w0, #0x1                   	// #1
  405000:	ret
  405004:	cbz	w1, 405014 <__fxstatat@plt+0x25c4>
  405008:	ldr	x1, [x0]
  40500c:	ldr	x0, [x2]
  405010:	b	402800 <strcmp@plt>
  405014:	ldr	w1, [x2, #156]
  405018:	and	w1, w1, #0xf000
  40501c:	cmp	w1, #0x4, lsl #12
  405020:	b.eq	405008 <__fxstatat@plt+0x25b8>  // b.none
  405024:	mov	w0, #0xffffffff            	// #-1
  405028:	ret
  40502c:	ldr	w1, [x2, #156]
  405030:	and	w1, w1, #0xf000
  405034:	cmp	w1, #0x4, lsl #12
  405038:	b.eq	404ff4 <__fxstatat@plt+0x25a4>  // b.none
  40503c:	cmp	w3, #0x4, lsl #12
  405040:	b.eq	405024 <__fxstatat@plt+0x25d4>  // b.none
  405044:	ldr	x1, [x0]
  405048:	ldr	x0, [x2]
  40504c:	b	402800 <strcmp@plt>
  405050:	ldr	w4, [x1, #152]
  405054:	mov	x2, x1
  405058:	ldr	w3, [x0, #152]
  40505c:	cmp	w4, #0x9
  405060:	cset	w1, eq  // eq = none
  405064:	cmp	w4, #0x3
  405068:	csinc	w1, w1, wzr, ne  // ne = any
  40506c:	cmp	w3, #0x3
  405070:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  405074:	b.eq	405094 <__fxstatat@plt+0x2644>  // b.none
  405078:	ldr	w3, [x0, #156]
  40507c:	and	w3, w3, #0xf000
  405080:	cbz	w1, 4050bc <__fxstatat@plt+0x266c>
  405084:	cmp	w3, #0x4, lsl #12
  405088:	b.eq	405098 <__fxstatat@plt+0x2648>  // b.none
  40508c:	mov	w0, #0x1                   	// #1
  405090:	ret
  405094:	cbz	w1, 4050a4 <__fxstatat@plt+0x2654>
  405098:	ldr	x1, [x0]
  40509c:	ldr	x0, [x2]
  4050a0:	b	40c878 <__fxstatat@plt+0x9e28>
  4050a4:	ldr	w1, [x2, #156]
  4050a8:	and	w1, w1, #0xf000
  4050ac:	cmp	w1, #0x4, lsl #12
  4050b0:	b.eq	405098 <__fxstatat@plt+0x2648>  // b.none
  4050b4:	mov	w0, #0xffffffff            	// #-1
  4050b8:	ret
  4050bc:	ldr	w1, [x2, #156]
  4050c0:	and	w1, w1, #0xf000
  4050c4:	cmp	w1, #0x4, lsl #12
  4050c8:	b.eq	405084 <__fxstatat@plt+0x2634>  // b.none
  4050cc:	cmp	w3, #0x4, lsl #12
  4050d0:	b.eq	4050b4 <__fxstatat@plt+0x2664>  // b.none
  4050d4:	ldr	x1, [x0]
  4050d8:	ldr	x0, [x2]
  4050dc:	b	40c878 <__fxstatat@plt+0x9e28>
  4050e0:	ldr	w4, [x1, #152]
  4050e4:	ldr	w3, [x0, #152]
  4050e8:	cmp	w4, #0x9
  4050ec:	cset	w2, eq  // eq = none
  4050f0:	cmp	w4, #0x3
  4050f4:	csinc	w2, w2, wzr, ne  // ne = any
  4050f8:	cmp	w3, #0x3
  4050fc:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  405100:	b.eq	405120 <__fxstatat@plt+0x26d0>  // b.none
  405104:	ldr	w3, [x0, #156]
  405108:	and	w3, w3, #0xf000
  40510c:	cbz	w2, 405148 <__fxstatat@plt+0x26f8>
  405110:	cmp	w3, #0x4, lsl #12
  405114:	b.eq	405124 <__fxstatat@plt+0x26d4>  // b.none
  405118:	mov	w0, #0x1                   	// #1
  40511c:	ret
  405120:	cbz	w2, 405130 <__fxstatat@plt+0x26e0>
  405124:	ldr	x0, [x0]
  405128:	ldr	x1, [x1]
  40512c:	b	40c878 <__fxstatat@plt+0x9e28>
  405130:	ldr	w2, [x1, #156]
  405134:	and	w2, w2, #0xf000
  405138:	cmp	w2, #0x4, lsl #12
  40513c:	b.eq	405124 <__fxstatat@plt+0x26d4>  // b.none
  405140:	mov	w0, #0xffffffff            	// #-1
  405144:	ret
  405148:	ldr	w2, [x1, #156]
  40514c:	and	w2, w2, #0xf000
  405150:	cmp	w2, #0x4, lsl #12
  405154:	b.eq	405110 <__fxstatat@plt+0x26c0>  // b.none
  405158:	cmp	w3, #0x4, lsl #12
  40515c:	b.eq	405140 <__fxstatat@plt+0x26f0>  // b.none
  405160:	ldr	x0, [x0]
  405164:	ldr	x1, [x1]
  405168:	b	40c878 <__fxstatat@plt+0x9e28>
  40516c:	nop
  405170:	stp	x29, x30, [sp, #-240]!
  405174:	mov	x29, sp
  405178:	stp	x19, x20, [sp, #16]
  40517c:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  405180:	add	x19, x19, #0x5e0
  405184:	stp	x23, x24, [sp, #48]
  405188:	mov	x23, x0
  40518c:	ldrb	w0, [x19, #3500]
  405190:	stp	x21, x22, [sp, #32]
  405194:	mov	x22, x1
  405198:	cbz	w0, 4051c8 <__fxstatat@plt+0x2778>
  40519c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4051a0:	mov	x2, #0x1                   	// #1
  4051a4:	ldr	x1, [x23]
  4051a8:	ldr	x3, [x0, #1472]
  4051ac:	ldr	x0, [x22]
  4051b0:	bl	402410 <fwrite_unlocked@plt>
  4051b4:	ldp	x19, x20, [sp, #16]
  4051b8:	ldp	x21, x22, [sp, #32]
  4051bc:	ldp	x23, x24, [sp, #48]
  4051c0:	ldp	x29, x30, [sp], #240
  4051c4:	ret
  4051c8:	mov	w1, #0x1                   	// #1
  4051cc:	mov	w0, #0x1                   	// #1
  4051d0:	strb	w1, [x19, #3500]
  4051d4:	bl	402730 <tcgetpgrp@plt>
  4051d8:	tbz	w0, #31, 4051fc <__fxstatat@plt+0x27ac>
  4051dc:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4051e0:	add	x19, x19, #0x370
  4051e4:	ldr	x0, [x19, #40]
  4051e8:	cbz	x0, 4052fc <__fxstatat@plt+0x28ac>
  4051ec:	add	x1, x19, #0x28
  4051f0:	add	x0, x19, #0x20
  4051f4:	bl	405170 <__fxstatat@plt+0x2720>
  4051f8:	b	40519c <__fxstatat@plt+0x274c>
  4051fc:	stp	x25, x26, [sp, #64]
  405200:	adrp	x25, 41b000 <_obstack_memory_used@@Base+0x3f80>
  405204:	add	x25, x25, #0xe80
  405208:	add	x21, x25, #0x1d0
  40520c:	add	x25, x25, #0x200
  405210:	mov	x20, x21
  405214:	add	x26, x19, #0xdb0
  405218:	mov	x0, x26
  40521c:	bl	402630 <sigemptyset@plt>
  405220:	ldr	w24, [x20]
  405224:	add	x2, sp, #0x58
  405228:	mov	x1, #0x0                   	// #0
  40522c:	add	x20, x20, #0x4
  405230:	mov	w0, w24
  405234:	bl	402710 <sigaction@plt>
  405238:	ldr	x2, [sp, #88]
  40523c:	mov	w1, w24
  405240:	mov	x0, x26
  405244:	cmp	x2, #0x1
  405248:	b.eq	405250 <__fxstatat@plt+0x2800>  // b.none
  40524c:	bl	4029b0 <sigaddset@plt>
  405250:	cmp	x20, x25
  405254:	b.ne	405220 <__fxstatat@plt+0x27d0>  // b.any
  405258:	add	x19, x19, #0xdb0
  40525c:	adrp	x26, 404000 <__fxstatat@plt+0x15b0>
  405260:	adrp	x24, 404000 <__fxstatat@plt+0x15b0>
  405264:	mov	x20, x19
  405268:	add	x26, x26, #0x2c0
  40526c:	add	x24, x24, #0xf10
  405270:	ldp	x4, x5, [x19]
  405274:	stp	x4, x5, [sp, #96]
  405278:	mov	w0, #0x10000000            	// #268435456
  40527c:	ldp	x2, x3, [x19, #16]
  405280:	stp	x2, x3, [sp, #112]
  405284:	ldp	x4, x5, [x19, #32]
  405288:	stp	x4, x5, [sp, #128]
  40528c:	ldp	x2, x3, [x19, #48]
  405290:	stp	x2, x3, [sp, #144]
  405294:	ldp	x4, x5, [x19, #64]
  405298:	stp	x4, x5, [sp, #160]
  40529c:	ldp	x2, x3, [x19, #80]
  4052a0:	stp	x2, x3, [sp, #176]
  4052a4:	ldp	x4, x5, [x19, #96]
  4052a8:	stp	x4, x5, [sp, #192]
  4052ac:	ldp	x2, x3, [x19, #112]
  4052b0:	stp	x2, x3, [sp, #208]
  4052b4:	str	w0, [sp, #224]
  4052b8:	ldr	w19, [x21]
  4052bc:	mov	x0, x20
  4052c0:	add	x21, x21, #0x4
  4052c4:	mov	w1, w19
  4052c8:	bl	4027f0 <sigismember@plt>
  4052cc:	cmp	w19, #0x14
  4052d0:	cbz	w0, 4052ec <__fxstatat@plt+0x289c>
  4052d4:	csel	x3, x24, x26, eq  // eq = none
  4052d8:	mov	w0, w19
  4052dc:	add	x1, sp, #0x58
  4052e0:	mov	x2, #0x0                   	// #0
  4052e4:	str	x3, [sp, #88]
  4052e8:	bl	402710 <sigaction@plt>
  4052ec:	cmp	x25, x21
  4052f0:	b.ne	4052b8 <__fxstatat@plt+0x2868>  // b.any
  4052f4:	ldp	x25, x26, [sp, #64]
  4052f8:	b	4051dc <__fxstatat@plt+0x278c>
  4052fc:	add	x1, x19, #0x8
  405300:	mov	x0, x19
  405304:	bl	405170 <__fxstatat@plt+0x2720>
  405308:	add	x1, x19, #0x38
  40530c:	add	x0, x19, #0x30
  405310:	bl	405170 <__fxstatat@plt+0x2720>
  405314:	add	x1, x19, #0x18
  405318:	add	x0, x19, #0x10
  40531c:	bl	405170 <__fxstatat@plt+0x2720>
  405320:	b	40519c <__fxstatat@plt+0x274c>
  405324:	nop
  405328:	mov	x2, x1
  40532c:	ldr	x1, [x0, #72]
  405330:	ldr	x3, [x2, #72]
  405334:	cmp	x3, x1
  405338:	b.gt	405354 <__fxstatat@plt+0x2904>
  40533c:	b.ne	40534c <__fxstatat@plt+0x28fc>  // b.any
  405340:	ldr	x1, [x0]
  405344:	ldr	x0, [x2]
  405348:	b	402800 <strcmp@plt>
  40534c:	cset	w0, lt  // lt = tstop
  405350:	ret
  405354:	mov	w0, #0xffffffff            	// #-1
  405358:	ret
  40535c:	nop
  405360:	stp	x29, x30, [sp, #-144]!
  405364:	mov	x29, sp
  405368:	stp	x23, x24, [sp, #48]
  40536c:	adrp	x23, 433000 <_obstack_memory_used@@Base+0x1bf80>
  405370:	add	x23, x23, #0x5e0
  405374:	stp	x19, x20, [sp, #16]
  405378:	mov	x20, x1
  40537c:	stp	x21, x22, [sp, #32]
  405380:	mov	x21, x2
  405384:	stp	x25, x26, [sp, #64]
  405388:	mov	x25, x4
  40538c:	stp	x27, x28, [sp, #80]
  405390:	mov	w27, w3
  405394:	stp	x0, x5, [sp, #112]
  405398:	ldr	x22, [x0]
  40539c:	mov	x0, x2
  4053a0:	bl	413148 <__fxstatat@plt+0x106f8>
  4053a4:	cmp	w0, #0x2
  4053a8:	ldrb	w0, [x23, #3632]
  4053ac:	cset	w24, ls  // ls = plast
  4053b0:	ands	w0, w24, w0
  4053b4:	str	w0, [sp, #108]
  4053b8:	b.ne	40550c <__fxstatat@plt+0x2abc>  // b.any
  4053bc:	mov	w28, #0x0                   	// #0
  4053c0:	cbz	w27, 40548c <__fxstatat@plt+0x2a3c>
  4053c4:	mov	x1, #0x2000                	// #8192
  4053c8:	mov	x4, x21
  4053cc:	mov	x2, x20
  4053d0:	mov	x0, x22
  4053d4:	mov	x3, #0xffffffffffffffff    	// #-1
  4053d8:	bl	413230 <__fxstatat@plt+0x107e0>
  4053dc:	mov	x1, #0x1fff                	// #8191
  4053e0:	mov	x27, x0
  4053e4:	cmp	x0, x1
  4053e8:	b.hi	405818 <__fxstatat@plt+0x2dc8>  // b.pmore
  4053ec:	mov	w0, #0x1                   	// #1
  4053f0:	ldrb	w1, [x20]
  4053f4:	str	w0, [sp, #108]
  4053f8:	ldrb	w0, [x22]
  4053fc:	cmp	w1, w0
  405400:	b.eq	405770 <__fxstatat@plt+0x2d20>  // b.none
  405404:	cbnz	w28, 405854 <__fxstatat@plt+0x2e04>
  405408:	cbz	x25, 4054a0 <__fxstatat@plt+0x2a50>
  40540c:	bl	402850 <__ctype_get_mb_cur_max@plt>
  405410:	cmp	x0, #0x1
  405414:	b.hi	4057c0 <__fxstatat@plt+0x2d70>  // b.pmore
  405418:	add	x20, x22, x27
  40541c:	cmp	x20, x22
  405420:	b.ls	405840 <__fxstatat@plt+0x2df0>  // b.plast
  405424:	bl	402820 <__ctype_b_loc@plt>
  405428:	mov	x19, #0x0                   	// #0
  40542c:	ldr	x0, [x0]
  405430:	mov	x2, x22
  405434:	nop
  405438:	ldrb	w1, [x2], #1
  40543c:	cmp	x20, x2
  405440:	ldrh	w1, [x0, x1, lsl #1]
  405444:	ubfx	x1, x1, #14, #1
  405448:	add	x19, x19, x1
  40544c:	b.ne	405438 <__fxstatat@plt+0x29e8>  // b.any
  405450:	ldrb	w0, [x23, #3633]
  405454:	cbnz	w0, 4054ec <__fxstatat@plt+0x2a9c>
  405458:	ldr	x0, [sp, #120]
  40545c:	strb	wzr, [x0]
  405460:	str	x19, [x25]
  405464:	ldr	x0, [sp, #112]
  405468:	ldp	x19, x20, [sp, #16]
  40546c:	ldp	x23, x24, [sp, #48]
  405470:	ldp	x25, x26, [sp, #64]
  405474:	str	x22, [x0]
  405478:	mov	x0, x27
  40547c:	ldp	x21, x22, [sp, #32]
  405480:	ldp	x27, x28, [sp, #80]
  405484:	ldp	x29, x30, [sp], #144
  405488:	ret
  40548c:	mov	x0, x20
  405490:	mov	x22, x20
  405494:	bl	402430 <strlen@plt>
  405498:	mov	x27, x0
  40549c:	cbnz	x25, 40540c <__fxstatat@plt+0x29bc>
  4054a0:	ldrb	w0, [x23, #3633]
  4054a4:	cbnz	w0, 4054ec <__fxstatat@plt+0x2a9c>
  4054a8:	ldr	x0, [sp, #120]
  4054ac:	strb	wzr, [x0]
  4054b0:	b	405464 <__fxstatat@plt+0x2a14>
  4054b4:	sub	w2, w0, #0x25
  4054b8:	and	w2, w2, #0xff
  4054bc:	cmp	w2, #0x1a
  4054c0:	b.hi	40558c <__fxstatat@plt+0x2b3c>  // b.pmore
  4054c4:	mov	x4, x24
  4054c8:	add	x28, x28, #0x1
  4054cc:	add	x19, x19, #0x1
  4054d0:	strb	w0, [x4], #1
  4054d4:	mov	x24, x4
  4054d8:	cmp	x28, x20
  4054dc:	b.cc	405568 <__fxstatat@plt+0x2b18>  // b.lo, b.ul, b.last
  4054e0:	sub	x27, x24, x22
  4054e4:	ldrb	w1, [x23, #3633]
  4054e8:	cbz	w1, 4054fc <__fxstatat@plt+0x2aac>
  4054ec:	ldr	w0, [sp, #108]
  4054f0:	ldrb	w1, [x23, #3634]
  4054f4:	eor	w24, w0, #0x1
  4054f8:	and	w1, w24, w1
  4054fc:	ldr	x0, [sp, #120]
  405500:	strb	w1, [x0]
  405504:	cbnz	x25, 405460 <__fxstatat@plt+0x2a10>
  405508:	b	405464 <__fxstatat@plt+0x2a14>
  40550c:	cbnz	w27, 40585c <__fxstatat@plt+0x2e0c>
  405510:	mov	x0, x20
  405514:	bl	402430 <strlen@plt>
  405518:	mov	x1, #0x1fff                	// #8191
  40551c:	mov	x19, x0
  405520:	cmp	x0, x1
  405524:	add	x21, x0, #0x1
  405528:	b.hi	405808 <__fxstatat@plt+0x2db8>  // b.pmore
  40552c:	mov	x2, x21
  405530:	mov	x1, x20
  405534:	mov	x0, x22
  405538:	str	wzr, [sp, #108]
  40553c:	bl	4023c0 <memcpy@plt>
  405540:	bl	402850 <__ctype_get_mb_cur_max@plt>
  405544:	add	x20, x22, x19
  405548:	cmp	x0, #0x1
  40554c:	b.ls	405730 <__fxstatat@plt+0x2ce0>  // b.plast
  405550:	cmp	x22, x20
  405554:	b.cs	405848 <__fxstatat@plt+0x2df8>  // b.hs, b.nlast
  405558:	mov	x24, x22
  40555c:	mov	x28, x22
  405560:	mov	x19, #0x0                   	// #0
  405564:	mov	x27, #0x1                   	// #1
  405568:	ldrb	w0, [x28]
  40556c:	cmp	w0, #0x5f
  405570:	b.hi	40578c <__fxstatat@plt+0x2d3c>  // b.pmore
  405574:	cmp	w0, #0x40
  405578:	b.hi	4054c4 <__fxstatat@plt+0x2a74>  // b.pmore
  40557c:	cmp	w0, #0x23
  405580:	b.hi	4054b4 <__fxstatat@plt+0x2a64>  // b.pmore
  405584:	cmp	w0, #0x1f
  405588:	b.hi	4054c4 <__fxstatat@plt+0x2a74>  // b.pmore
  40558c:	str	xzr, [sp, #136]
  405590:	b	4055b4 <__fxstatat@plt+0x2b64>
  405594:	mov	w0, #0x3f                  	// #63
  405598:	add	x28, x28, x26
  40559c:	add	x19, x19, #0x1
  4055a0:	strb	w0, [x24]
  4055a4:	mov	x24, x21
  4055a8:	add	x0, sp, #0x88
  4055ac:	bl	402770 <mbsinit@plt>
  4055b0:	cbnz	w0, 4054d8 <__fxstatat@plt+0x2a88>
  4055b4:	add	x3, sp, #0x88
  4055b8:	sub	x2, x20, x28
  4055bc:	mov	x1, x28
  4055c0:	add	x0, sp, #0x84
  4055c4:	add	x21, x24, #0x1
  4055c8:	bl	416ba0 <__fxstatat@plt+0x14150>
  4055cc:	cmn	x0, #0x1
  4055d0:	b.eq	4057d8 <__fxstatat@plt+0x2d88>  // b.none
  4055d4:	cmn	x0, #0x2
  4055d8:	b.eq	4057f0 <__fxstatat@plt+0x2da0>  // b.none
  4055dc:	cmp	x0, #0x0
  4055e0:	csel	x26, x0, x27, ne  // ne = any
  4055e4:	ldr	w0, [sp, #132]
  4055e8:	bl	402600 <wcwidth@plt>
  4055ec:	tbnz	w0, #31, 405594 <__fxstatat@plt+0x2b44>
  4055f0:	add	x5, x28, #0xf
  4055f4:	sub	x6, x26, #0x1
  4055f8:	sub	x5, x5, x24
  4055fc:	cmp	x5, #0x1e
  405600:	ccmp	x6, #0xe, #0x0, hi  // hi = pmore
  405604:	b.ls	4057a0 <__fxstatat@plt+0x2d50>  // b.plast
  405608:	and	x5, x26, #0xfffffffffffffff0
  40560c:	mov	x2, #0x0                   	// #0
  405610:	ldr	q0, [x28, x2]
  405614:	str	q0, [x24, x2]
  405618:	add	x2, x2, #0x10
  40561c:	cmp	x2, x5
  405620:	b.ne	405610 <__fxstatat@plt+0x2bc0>  // b.any
  405624:	and	x5, x26, #0xfffffffffffffff0
  405628:	cmp	x26, x5
  40562c:	add	x8, x28, x5
  405630:	add	x7, x24, x5
  405634:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405638:	ldrb	w9, [x28, x5]
  40563c:	subs	x2, x6, x5
  405640:	strb	w9, [x24, x5]
  405644:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405648:	ldrb	w5, [x8, #1]
  40564c:	cmp	x2, #0x1
  405650:	strb	w5, [x7, #1]
  405654:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405658:	ldrb	w5, [x8, #2]
  40565c:	cmp	x2, #0x2
  405660:	strb	w5, [x7, #2]
  405664:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405668:	ldrb	w5, [x8, #3]
  40566c:	cmp	x2, #0x3
  405670:	strb	w5, [x7, #3]
  405674:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405678:	ldrb	w5, [x8, #4]
  40567c:	cmp	x2, #0x4
  405680:	strb	w5, [x7, #4]
  405684:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405688:	ldrb	w5, [x8, #5]
  40568c:	cmp	x2, #0x5
  405690:	strb	w5, [x7, #5]
  405694:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405698:	ldrb	w5, [x8, #6]
  40569c:	cmp	x2, #0x6
  4056a0:	strb	w5, [x7, #6]
  4056a4:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  4056a8:	ldrb	w5, [x8, #7]
  4056ac:	cmp	x2, #0x7
  4056b0:	strb	w5, [x7, #7]
  4056b4:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  4056b8:	ldrb	w5, [x8, #8]
  4056bc:	cmp	x2, #0x8
  4056c0:	strb	w5, [x7, #8]
  4056c4:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  4056c8:	ldrb	w5, [x8, #9]
  4056cc:	cmp	x2, #0x9
  4056d0:	strb	w5, [x7, #9]
  4056d4:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  4056d8:	ldrb	w5, [x8, #10]
  4056dc:	cmp	x2, #0xa
  4056e0:	strb	w5, [x7, #10]
  4056e4:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  4056e8:	ldrb	w5, [x8, #11]
  4056ec:	cmp	x2, #0xb
  4056f0:	strb	w5, [x7, #11]
  4056f4:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  4056f8:	ldrb	w5, [x8, #12]
  4056fc:	cmp	x2, #0xc
  405700:	strb	w5, [x7, #12]
  405704:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405708:	ldrb	w5, [x8, #13]
  40570c:	cmp	x2, #0xd
  405710:	strb	w5, [x7, #13]
  405714:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405718:	ldrb	w2, [x8, #14]
  40571c:	strb	w2, [x7, #14]
  405720:	add	x28, x28, x26
  405724:	add	x24, x24, x26
  405728:	add	x19, x19, w0, sxtw
  40572c:	b	4055a8 <__fxstatat@plt+0x2b58>
  405730:	cmp	x22, x20
  405734:	b.cs	405768 <__fxstatat@plt+0x2d18>  // b.hs, b.nlast
  405738:	bl	402820 <__ctype_b_loc@plt>
  40573c:	mov	x1, x22
  405740:	mov	w4, #0x3f                  	// #63
  405744:	nop
  405748:	ldrb	w3, [x1]
  40574c:	ldr	x2, [x0]
  405750:	ldrh	w2, [x2, x3, lsl #1]
  405754:	tbnz	w2, #14, 40575c <__fxstatat@plt+0x2d0c>
  405758:	strb	w4, [x1]
  40575c:	add	x1, x1, #0x1
  405760:	cmp	x1, x20
  405764:	b.ne	405748 <__fxstatat@plt+0x2cf8>  // b.any
  405768:	mov	x27, x19
  40576c:	b	4054e4 <__fxstatat@plt+0x2a94>
  405770:	mov	x0, x20
  405774:	bl	402430 <strlen@plt>
  405778:	cmp	x27, x0
  40577c:	cset	w0, ne  // ne = any
  405780:	str	w0, [sp, #108]
  405784:	cbz	w28, 405408 <__fxstatat@plt+0x29b8>
  405788:	b	405854 <__fxstatat@plt+0x2e04>
  40578c:	sub	w2, w0, #0x61
  405790:	and	w2, w2, #0xff
  405794:	cmp	w2, #0x1d
  405798:	b.ls	4054c4 <__fxstatat@plt+0x2a74>  // b.plast
  40579c:	b	40558c <__fxstatat@plt+0x2b3c>
  4057a0:	mov	x2, #0x0                   	// #0
  4057a4:	nop
  4057a8:	ldrb	w5, [x28, x2]
  4057ac:	strb	w5, [x24, x2]
  4057b0:	add	x2, x2, #0x1
  4057b4:	cmp	x26, x2
  4057b8:	b.ne	4057a8 <__fxstatat@plt+0x2d58>  // b.any
  4057bc:	b	405720 <__fxstatat@plt+0x2cd0>
  4057c0:	mov	x1, x27
  4057c4:	mov	x0, x22
  4057c8:	mov	w2, #0x0                   	// #0
  4057cc:	bl	40fc10 <__fxstatat@plt+0xd1c0>
  4057d0:	sxtw	x19, w0
  4057d4:	b	405450 <__fxstatat@plt+0x2a00>
  4057d8:	mov	w0, #0x3f                  	// #63
  4057dc:	add	x28, x28, #0x1
  4057e0:	add	x19, x19, #0x1
  4057e4:	strb	w0, [x24]
  4057e8:	mov	x24, x21
  4057ec:	b	4054d8 <__fxstatat@plt+0x2a88>
  4057f0:	mov	w0, #0x3f                  	// #63
  4057f4:	add	x19, x19, #0x1
  4057f8:	mov	x28, x20
  4057fc:	strb	w0, [x24]
  405800:	mov	x24, x21
  405804:	b	4054d8 <__fxstatat@plt+0x2a88>
  405808:	mov	x0, x21
  40580c:	bl	415c40 <__fxstatat@plt+0x131f0>
  405810:	mov	x22, x0
  405814:	b	40552c <__fxstatat@plt+0x2adc>
  405818:	add	x24, x0, #0x1
  40581c:	mov	x0, x24
  405820:	bl	415c40 <__fxstatat@plt+0x131f0>
  405824:	mov	x1, x24
  405828:	mov	x4, x21
  40582c:	mov	x22, x0
  405830:	mov	x2, x20
  405834:	mov	x3, #0xffffffffffffffff    	// #-1
  405838:	bl	413230 <__fxstatat@plt+0x107e0>
  40583c:	b	4053ec <__fxstatat@plt+0x299c>
  405840:	mov	x19, #0x0                   	// #0
  405844:	b	405450 <__fxstatat@plt+0x2a00>
  405848:	mov	x27, #0x0                   	// #0
  40584c:	mov	x19, #0x0                   	// #0
  405850:	b	4054e4 <__fxstatat@plt+0x2a94>
  405854:	mov	x19, x27
  405858:	b	405540 <__fxstatat@plt+0x2af0>
  40585c:	mov	w28, #0x1                   	// #1
  405860:	b	4053c4 <__fxstatat@plt+0x2974>
  405864:	nop
  405868:	mov	x12, #0x2040                	// #8256
  40586c:	sub	sp, sp, x12
  405870:	mov	w3, w2
  405874:	add	x5, sp, #0x2f
  405878:	mov	x2, x1
  40587c:	add	x4, sp, #0x38
  405880:	stp	x29, x30, [sp]
  405884:	mov	x29, sp
  405888:	mov	x1, x0
  40588c:	stp	x19, x20, [sp, #16]
  405890:	mov	x19, x0
  405894:	add	x20, sp, #0x40
  405898:	add	x0, sp, #0x30
  40589c:	str	x20, [sp, #48]
  4058a0:	bl	405360 <__fxstatat@plt+0x2910>
  4058a4:	ldr	x0, [sp, #48]
  4058a8:	cmp	x20, x0
  4058ac:	ccmp	x0, x19, #0x4, ne  // ne = any
  4058b0:	b.eq	4058b8 <__fxstatat@plt+0x2e68>  // b.none
  4058b4:	bl	402840 <free@plt>
  4058b8:	ldr	x0, [sp, #56]
  4058bc:	mov	x12, #0x2040                	// #8256
  4058c0:	ldrb	w1, [sp, #47]
  4058c4:	ldp	x29, x30, [sp]
  4058c8:	add	x0, x1, x0
  4058cc:	ldp	x19, x20, [sp, #16]
  4058d0:	add	sp, sp, x12
  4058d4:	ret
  4058d8:	sub	sp, sp, #0x2c0
  4058dc:	stp	x29, x30, [sp]
  4058e0:	mov	x29, sp
  4058e4:	stp	x19, x20, [sp, #16]
  4058e8:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4058ec:	add	x19, x19, #0x5e0
  4058f0:	str	x21, [sp, #32]
  4058f4:	mov	x21, x0
  4058f8:	ldrb	w0, [x19, #3635]
  4058fc:	cbz	w0, 40599c <__fxstatat@plt+0x2f4c>
  405900:	ldr	w0, [x19, #3636]
  405904:	cmp	w0, #0x4
  405908:	b.eq	405a50 <__fxstatat@plt+0x3000>  // b.none
  40590c:	ldrb	w0, [x19, #3644]
  405910:	ldrsw	x20, [x19, #3640]
  405914:	add	x20, x20, #0x1
  405918:	cbz	w0, 405a38 <__fxstatat@plt+0x2fe8>
  40591c:	ldrsw	x0, [x19, #3660]
  405920:	add	x0, x0, #0x1
  405924:	add	x20, x20, x0
  405928:	ldrb	w0, [x19, #3664]
  40592c:	cbz	w0, 405948 <__fxstatat@plt+0x2ef8>
  405930:	ldr	w0, [x19, #3636]
  405934:	cmp	w0, #0x4
  405938:	b.eq	405a98 <__fxstatat@plt+0x3048>  // b.none
  40593c:	ldrsw	x0, [x19, #3668]
  405940:	add	x0, x0, #0x1
  405944:	add	x20, x20, x0
  405948:	ldr	w2, [x21, #180]
  40594c:	ldr	x0, [x21]
  405950:	ldr	x1, [x19, #3672]
  405954:	bl	405868 <__fxstatat@plt+0x2e18>
  405958:	add	x0, x20, x0
  40595c:	ldr	w1, [x19, #3680]
  405960:	cbz	w1, 405988 <__fxstatat@plt+0x2f38>
  405964:	ldrb	w3, [x21, #168]
  405968:	ldr	w4, [x21, #40]
  40596c:	ldr	w2, [x21, #152]
  405970:	cbz	w3, 4059e8 <__fxstatat@plt+0x2f98>
  405974:	and	w5, w4, #0xf000
  405978:	cmp	w5, #0x8, lsl #12
  40597c:	b.ne	405a44 <__fxstatat@plt+0x2ff4>  // b.any
  405980:	cmp	w1, #0x3
  405984:	b.eq	405aac <__fxstatat@plt+0x305c>  // b.none
  405988:	ldp	x29, x30, [sp]
  40598c:	ldp	x19, x20, [sp, #16]
  405990:	ldr	x21, [sp, #32]
  405994:	add	sp, sp, #0x2c0
  405998:	ret
  40599c:	mov	x20, #0x0                   	// #0
  4059a0:	ldrb	w0, [x19, #3644]
  4059a4:	cbz	w0, 405928 <__fxstatat@plt+0x2ed8>
  4059a8:	ldr	w0, [x19, #3636]
  4059ac:	cmp	w0, #0x4
  4059b0:	b.ne	40591c <__fxstatat@plt+0x2ecc>  // b.any
  4059b4:	ldrb	w1, [x21, #168]
  4059b8:	mov	x0, #0x2                   	// #2
  4059bc:	cbz	w1, 405924 <__fxstatat@plt+0x2ed4>
  4059c0:	ldr	w2, [x19, #3656]
  4059c4:	add	x1, sp, #0x30
  4059c8:	ldr	x0, [x21, #88]
  4059cc:	mov	x3, #0x200                 	// #512
  4059d0:	ldr	x4, [x19, #3648]
  4059d4:	bl	40e390 <__fxstatat@plt+0xb940>
  4059d8:	bl	402430 <strlen@plt>
  4059dc:	add	x0, x0, #0x1
  4059e0:	add	x20, x20, x0
  4059e4:	b	405928 <__fxstatat@plt+0x2ed8>
  4059e8:	cmp	w2, #0x5
  4059ec:	b.eq	405988 <__fxstatat@plt+0x2f38>  // b.none
  4059f0:	cmp	w2, #0x3
  4059f4:	cset	w5, eq  // eq = none
  4059f8:	cmp	w2, #0x9
  4059fc:	csinc	w5, w5, wzr, ne  // ne = any
  405a00:	cbnz	w5, 405a80 <__fxstatat@plt+0x3030>
  405a04:	cmp	w1, #0x1
  405a08:	b.eq	405988 <__fxstatat@plt+0x2f38>  // b.none
  405a0c:	cbz	w3, 405a68 <__fxstatat@plt+0x3018>
  405a10:	and	w4, w4, #0xf000
  405a14:	cmp	w4, #0xa, lsl #12
  405a18:	b.eq	405a80 <__fxstatat@plt+0x3030>  // b.none
  405a1c:	cmp	w4, #0xc, lsl #12
  405a20:	cset	w1, eq  // eq = none
  405a24:	cmp	w4, #0x1, lsl #12
  405a28:	b.eq	405a80 <__fxstatat@plt+0x3030>  // b.none
  405a2c:	and	x1, x1, #0x1
  405a30:	add	x0, x0, x1
  405a34:	b	405988 <__fxstatat@plt+0x2f38>
  405a38:	ldrb	w0, [x19, #3664]
  405a3c:	cbnz	w0, 40593c <__fxstatat@plt+0x2eec>
  405a40:	b	405948 <__fxstatat@plt+0x2ef8>
  405a44:	cmp	w5, #0x4, lsl #12
  405a48:	cset	w5, eq  // eq = none
  405a4c:	b	405a00 <__fxstatat@plt+0x2fb0>
  405a50:	ldr	x0, [x21, #32]
  405a54:	add	x1, sp, #0x30
  405a58:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  405a5c:	bl	402430 <strlen@plt>
  405a60:	add	x20, x0, #0x1
  405a64:	b	4059a0 <__fxstatat@plt+0x2f50>
  405a68:	cmp	w2, #0x6
  405a6c:	b.eq	405a80 <__fxstatat@plt+0x3030>  // b.none
  405a70:	cmp	w2, #0x7
  405a74:	cset	w1, eq  // eq = none
  405a78:	cmp	w2, #0x1
  405a7c:	b.ne	405a2c <__fxstatat@plt+0x2fdc>  // b.any
  405a80:	add	x0, x0, #0x1
  405a84:	ldp	x29, x30, [sp]
  405a88:	ldp	x19, x20, [sp, #16]
  405a8c:	ldr	x21, [sp, #32]
  405a90:	add	sp, sp, #0x2c0
  405a94:	ret
  405a98:	ldr	x0, [x21, #160]
  405a9c:	bl	402430 <strlen@plt>
  405aa0:	add	x0, x0, #0x1
  405aa4:	add	x20, x20, x0
  405aa8:	b	405948 <__fxstatat@plt+0x2ef8>
  405aac:	mov	w1, #0x49                  	// #73
  405ab0:	tst	w4, w1
  405ab4:	cinc	x0, x0, ne  // ne = any
  405ab8:	b	405988 <__fxstatat@plt+0x2f38>
  405abc:	nop
  405ac0:	ldr	w4, [x1, #152]
  405ac4:	mov	x2, x1
  405ac8:	ldr	w3, [x0, #152]
  405acc:	cmp	w4, #0x9
  405ad0:	cset	w1, eq  // eq = none
  405ad4:	cmp	w4, #0x3
  405ad8:	csinc	w1, w1, wzr, ne  // ne = any
  405adc:	cmp	w3, #0x3
  405ae0:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  405ae4:	b.eq	405b04 <__fxstatat@plt+0x30b4>  // b.none
  405ae8:	ldr	w3, [x0, #156]
  405aec:	and	w3, w3, #0xf000
  405af0:	cbz	w1, 405b30 <__fxstatat@plt+0x30e0>
  405af4:	cmp	w3, #0x4, lsl #12
  405af8:	b.eq	405b08 <__fxstatat@plt+0x30b8>  // b.none
  405afc:	mov	w0, #0x1                   	// #1
  405b00:	ret
  405b04:	cbz	w1, 405b50 <__fxstatat@plt+0x3100>
  405b08:	ldr	x1, [x0, #72]
  405b0c:	ldr	x3, [x2, #72]
  405b10:	cmp	x3, x1
  405b14:	b.gt	405b48 <__fxstatat@plt+0x30f8>
  405b18:	b.ne	405b28 <__fxstatat@plt+0x30d8>  // b.any
  405b1c:	ldr	x1, [x0]
  405b20:	ldr	x0, [x2]
  405b24:	b	402800 <strcmp@plt>
  405b28:	cset	w0, lt  // lt = tstop
  405b2c:	ret
  405b30:	ldr	w1, [x2, #156]
  405b34:	and	w1, w1, #0xf000
  405b38:	cmp	w1, #0x4, lsl #12
  405b3c:	b.eq	405af4 <__fxstatat@plt+0x30a4>  // b.none
  405b40:	cmp	w3, #0x4, lsl #12
  405b44:	b.ne	405b08 <__fxstatat@plt+0x30b8>  // b.any
  405b48:	mov	w0, #0xffffffff            	// #-1
  405b4c:	ret
  405b50:	ldr	w1, [x2, #156]
  405b54:	and	w1, w1, #0xf000
  405b58:	cmp	w1, #0x4, lsl #12
  405b5c:	b.eq	405b08 <__fxstatat@plt+0x30b8>  // b.none
  405b60:	mov	w0, #0xffffffff            	// #-1
  405b64:	b	405b4c <__fxstatat@plt+0x30fc>
  405b68:	ldr	w4, [x1, #152]
  405b6c:	ldr	w3, [x0, #152]
  405b70:	cmp	w4, #0x9
  405b74:	cset	w2, eq  // eq = none
  405b78:	cmp	w4, #0x3
  405b7c:	csinc	w2, w2, wzr, ne  // ne = any
  405b80:	cmp	w3, #0x3
  405b84:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  405b88:	b.eq	405ba8 <__fxstatat@plt+0x3158>  // b.none
  405b8c:	ldr	w3, [x0, #156]
  405b90:	and	w3, w3, #0xf000
  405b94:	cbz	w2, 405bd4 <__fxstatat@plt+0x3184>
  405b98:	cmp	w3, #0x4, lsl #12
  405b9c:	b.eq	405bac <__fxstatat@plt+0x315c>  // b.none
  405ba0:	mov	w0, #0x1                   	// #1
  405ba4:	ret
  405ba8:	cbz	w2, 405bf8 <__fxstatat@plt+0x31a8>
  405bac:	ldr	x3, [x0, #72]
  405bb0:	ldr	x2, [x1, #72]
  405bb4:	cmp	x3, x2
  405bb8:	b.gt	405bf0 <__fxstatat@plt+0x31a0>
  405bbc:	b.ne	405bcc <__fxstatat@plt+0x317c>  // b.any
  405bc0:	ldr	x0, [x0]
  405bc4:	ldr	x1, [x1]
  405bc8:	b	402800 <strcmp@plt>
  405bcc:	cset	w0, lt  // lt = tstop
  405bd0:	ret
  405bd4:	ldr	w2, [x1, #156]
  405bd8:	and	w2, w2, #0xf000
  405bdc:	cmp	w2, #0x4, lsl #12
  405be0:	b.eq	405b98 <__fxstatat@plt+0x3148>  // b.none
  405be4:	cmp	w3, #0x4, lsl #12
  405be8:	b.ne	405bac <__fxstatat@plt+0x315c>  // b.any
  405bec:	nop
  405bf0:	mov	w0, #0xffffffff            	// #-1
  405bf4:	ret
  405bf8:	ldr	w2, [x1, #156]
  405bfc:	and	w2, w2, #0xf000
  405c00:	cmp	w2, #0x4, lsl #12
  405c04:	b.eq	405bac <__fxstatat@plt+0x315c>  // b.none
  405c08:	mov	w0, #0xffffffff            	// #-1
  405c0c:	b	405bf4 <__fxstatat@plt+0x31a4>
  405c10:	ldr	x3, [x0, #72]
  405c14:	ldr	x2, [x1, #72]
  405c18:	cmp	x3, x2
  405c1c:	b.gt	405c38 <__fxstatat@plt+0x31e8>
  405c20:	b.ne	405c30 <__fxstatat@plt+0x31e0>  // b.any
  405c24:	ldr	x0, [x0]
  405c28:	ldr	x1, [x1]
  405c2c:	b	402800 <strcmp@plt>
  405c30:	cset	w0, lt  // lt = tstop
  405c34:	ret
  405c38:	mov	w0, #0xffffffff            	// #-1
  405c3c:	ret
  405c40:	stp	x29, x30, [sp, #-192]!
  405c44:	mov	x29, sp
  405c48:	stp	x21, x22, [sp, #32]
  405c4c:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  405c50:	add	x21, x21, #0x370
  405c54:	add	x22, x21, #0x18
  405c58:	stp	x19, x20, [sp, #16]
  405c5c:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  405c60:	add	x19, x19, #0x5e0
  405c64:	str	x23, [sp, #48]
  405c68:	add	x23, x21, #0x8
  405c6c:	b	405cbc <__fxstatat@plt+0x326c>
  405c70:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  405c74:	ldr	x0, [x0, #1472]
  405c78:	bl	4028b0 <fflush_unlocked@plt>
  405c7c:	add	x1, x19, #0xdb0
  405c80:	add	x2, sp, #0x40
  405c84:	mov	w0, #0x0                   	// #0
  405c88:	bl	4024a0 <sigprocmask@plt>
  405c8c:	ldr	w20, [x19]
  405c90:	ldr	w0, [x19, #3496]
  405c94:	sub	w1, w0, #0x1
  405c98:	cbz	w0, 405cf0 <__fxstatat@plt+0x32a0>
  405c9c:	mov	w20, #0x13                  	// #19
  405ca0:	str	w1, [x19, #3496]
  405ca4:	mov	w0, w20
  405ca8:	bl	402480 <raise@plt>
  405cac:	add	x1, sp, #0x40
  405cb0:	mov	x2, #0x0                   	// #0
  405cb4:	mov	w0, #0x2                   	// #2
  405cb8:	bl	4024a0 <sigprocmask@plt>
  405cbc:	ldr	w0, [x19]
  405cc0:	cbnz	w0, 405ccc <__fxstatat@plt+0x327c>
  405cc4:	ldr	w0, [x19, #3496]
  405cc8:	cbz	w0, 405d00 <__fxstatat@plt+0x32b0>
  405ccc:	ldrb	w0, [x19, #3500]
  405cd0:	cbz	w0, 405c70 <__fxstatat@plt+0x3220>
  405cd4:	mov	x1, x23
  405cd8:	mov	x0, x21
  405cdc:	bl	405170 <__fxstatat@plt+0x2720>
  405ce0:	mov	x1, x22
  405ce4:	add	x0, x21, #0x10
  405ce8:	bl	405170 <__fxstatat@plt+0x2720>
  405cec:	b	405c70 <__fxstatat@plt+0x3220>
  405cf0:	mov	w0, w20
  405cf4:	mov	x1, #0x0                   	// #0
  405cf8:	bl	4025b0 <signal@plt>
  405cfc:	b	405ca4 <__fxstatat@plt+0x3254>
  405d00:	ldp	x19, x20, [sp, #16]
  405d04:	ldp	x21, x22, [sp, #32]
  405d08:	ldr	x23, [sp, #48]
  405d0c:	ldp	x29, x30, [sp], #192
  405d10:	ret
  405d14:	nop
  405d18:	mov	x2, x0
  405d1c:	ldr	x3, [x1, #112]
  405d20:	ldr	x0, [x0, #112]
  405d24:	cmp	x3, x0
  405d28:	b.lt	405d54 <__fxstatat@plt+0x3304>  // b.tstop
  405d2c:	b.gt	405d4c <__fxstatat@plt+0x32fc>
  405d30:	ldr	x0, [x1, #120]
  405d34:	ldr	x3, [x2, #120]
  405d38:	subs	w0, w0, w3
  405d3c:	b.ne	405d50 <__fxstatat@plt+0x3300>  // b.any
  405d40:	ldr	x1, [x1]
  405d44:	ldr	x0, [x2]
  405d48:	b	402800 <strcmp@plt>
  405d4c:	mov	w0, #0x1                   	// #1
  405d50:	ret
  405d54:	mov	w0, #0xffffffff            	// #-1
  405d58:	ret
  405d5c:	nop
  405d60:	mov	x2, x0
  405d64:	ldr	x3, [x1, #128]
  405d68:	ldr	x0, [x0, #128]
  405d6c:	cmp	x3, x0
  405d70:	b.lt	405d9c <__fxstatat@plt+0x334c>  // b.tstop
  405d74:	b.gt	405d94 <__fxstatat@plt+0x3344>
  405d78:	ldr	x0, [x1, #136]
  405d7c:	ldr	x3, [x2, #136]
  405d80:	subs	w0, w0, w3
  405d84:	b.ne	405d98 <__fxstatat@plt+0x3348>  // b.any
  405d88:	ldr	x1, [x1]
  405d8c:	ldr	x0, [x2]
  405d90:	b	402800 <strcmp@plt>
  405d94:	mov	w0, #0x1                   	// #1
  405d98:	ret
  405d9c:	mov	w0, #0xffffffff            	// #-1
  405da0:	ret
  405da4:	nop
  405da8:	mov	x3, x0
  405dac:	mov	x2, x1
  405db0:	ldr	x0, [x1, #128]
  405db4:	ldr	x1, [x3, #128]
  405db8:	cmp	x1, x0
  405dbc:	b.lt	405de8 <__fxstatat@plt+0x3398>  // b.tstop
  405dc0:	b.gt	405de0 <__fxstatat@plt+0x3390>
  405dc4:	ldr	x1, [x2, #136]
  405dc8:	ldr	x0, [x3, #136]
  405dcc:	subs	w0, w0, w1
  405dd0:	b.ne	405de4 <__fxstatat@plt+0x3394>  // b.any
  405dd4:	ldr	x0, [x2]
  405dd8:	ldr	x1, [x3]
  405ddc:	b	402800 <strcmp@plt>
  405de0:	mov	w0, #0x1                   	// #1
  405de4:	ret
  405de8:	mov	w0, #0xffffffff            	// #-1
  405dec:	ret
  405df0:	mov	x2, x0
  405df4:	ldr	x3, [x1, #96]
  405df8:	ldr	x0, [x0, #96]
  405dfc:	cmp	x3, x0
  405e00:	b.lt	405e2c <__fxstatat@plt+0x33dc>  // b.tstop
  405e04:	b.gt	405e24 <__fxstatat@plt+0x33d4>
  405e08:	ldr	x0, [x1, #104]
  405e0c:	ldr	x3, [x2, #104]
  405e10:	subs	w0, w0, w3
  405e14:	b.ne	405e28 <__fxstatat@plt+0x33d8>  // b.any
  405e18:	ldr	x1, [x1]
  405e1c:	ldr	x0, [x2]
  405e20:	b	402800 <strcmp@plt>
  405e24:	mov	w0, #0x1                   	// #1
  405e28:	ret
  405e2c:	mov	w0, #0xffffffff            	// #-1
  405e30:	ret
  405e34:	nop
  405e38:	mov	x3, x0
  405e3c:	mov	x2, x1
  405e40:	ldr	x0, [x1, #96]
  405e44:	ldr	x1, [x3, #96]
  405e48:	cmp	x1, x0
  405e4c:	b.lt	405e78 <__fxstatat@plt+0x3428>  // b.tstop
  405e50:	b.gt	405e70 <__fxstatat@plt+0x3420>
  405e54:	ldr	x1, [x2, #104]
  405e58:	ldr	x0, [x3, #104]
  405e5c:	subs	w0, w0, w1
  405e60:	b.ne	405e74 <__fxstatat@plt+0x3424>  // b.any
  405e64:	ldr	x0, [x2]
  405e68:	ldr	x1, [x3]
  405e6c:	b	402800 <strcmp@plt>
  405e70:	mov	w0, #0x1                   	// #1
  405e74:	ret
  405e78:	mov	w0, #0xffffffff            	// #-1
  405e7c:	ret
  405e80:	mov	x3, x0
  405e84:	mov	x2, x1
  405e88:	ldr	x0, [x1, #112]
  405e8c:	ldr	x1, [x3, #112]
  405e90:	cmp	x1, x0
  405e94:	b.lt	405ec0 <__fxstatat@plt+0x3470>  // b.tstop
  405e98:	b.gt	405eb8 <__fxstatat@plt+0x3468>
  405e9c:	ldr	x1, [x2, #120]
  405ea0:	ldr	x0, [x3, #120]
  405ea4:	subs	w0, w0, w1
  405ea8:	b.ne	405ebc <__fxstatat@plt+0x346c>  // b.any
  405eac:	ldr	x0, [x2]
  405eb0:	ldr	x1, [x3]
  405eb4:	b	402800 <strcmp@plt>
  405eb8:	mov	w0, #0x1                   	// #1
  405ebc:	ret
  405ec0:	mov	w0, #0xffffffff            	// #-1
  405ec4:	ret
  405ec8:	stp	x29, x30, [sp, #-32]!
  405ecc:	mov	x29, sp
  405ed0:	stp	x19, x20, [sp, #16]
  405ed4:	ldr	x20, [x0]
  405ed8:	ldr	x19, [x1]
  405edc:	bl	4029e0 <__errno_location@plt>
  405ee0:	mov	x2, x0
  405ee4:	mov	x0, x20
  405ee8:	mov	x1, x19
  405eec:	ldp	x19, x20, [sp, #16]
  405ef0:	str	wzr, [x2]
  405ef4:	ldp	x29, x30, [sp], #32
  405ef8:	b	402990 <strcoll@plt>
  405efc:	nop
  405f00:	stp	x29, x30, [sp, #-32]!
  405f04:	mov	x29, sp
  405f08:	stp	x19, x20, [sp, #16]
  405f0c:	ldr	x19, [x1]
  405f10:	ldr	x20, [x0]
  405f14:	bl	4029e0 <__errno_location@plt>
  405f18:	mov	x2, x0
  405f1c:	mov	x0, x19
  405f20:	mov	x1, x20
  405f24:	ldp	x19, x20, [sp, #16]
  405f28:	str	wzr, [x2]
  405f2c:	ldp	x29, x30, [sp], #32
  405f30:	b	402990 <strcoll@plt>
  405f34:	nop
  405f38:	mov	x3, x1
  405f3c:	ldr	w1, [x0, #152]
  405f40:	mov	x2, x0
  405f44:	ldr	w4, [x3, #152]
  405f48:	cmp	w4, #0x9
  405f4c:	cset	w0, eq  // eq = none
  405f50:	cmp	w4, #0x3
  405f54:	csinc	w0, w0, wzr, ne  // ne = any
  405f58:	cmp	w1, #0x3
  405f5c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  405f60:	b.eq	405f80 <__fxstatat@plt+0x3530>  // b.none
  405f64:	ldr	w1, [x2, #156]
  405f68:	and	w1, w1, #0xf000
  405f6c:	cbz	w0, 405f9c <__fxstatat@plt+0x354c>
  405f70:	cmp	w1, #0x4, lsl #12
  405f74:	b.eq	405fb4 <__fxstatat@plt+0x3564>  // b.none
  405f78:	mov	w0, #0x1                   	// #1
  405f7c:	ret
  405f80:	cbnz	w0, 405fb4 <__fxstatat@plt+0x3564>
  405f84:	ldr	w0, [x3, #156]
  405f88:	and	w0, w0, #0xf000
  405f8c:	cmp	w0, #0x4, lsl #12
  405f90:	b.eq	405fb4 <__fxstatat@plt+0x3564>  // b.none
  405f94:	mov	w0, #0xffffffff            	// #-1
  405f98:	ret
  405f9c:	ldr	w0, [x3, #156]
  405fa0:	and	w0, w0, #0xf000
  405fa4:	cmp	w0, #0x4, lsl #12
  405fa8:	b.eq	405f70 <__fxstatat@plt+0x3520>  // b.none
  405fac:	cmp	w1, #0x4, lsl #12
  405fb0:	b.eq	405f94 <__fxstatat@plt+0x3544>  // b.none
  405fb4:	ldr	x1, [x2, #96]
  405fb8:	ldr	x0, [x3, #96]
  405fbc:	cmp	x1, x0
  405fc0:	b.lt	405f94 <__fxstatat@plt+0x3544>  // b.tstop
  405fc4:	b.gt	405f78 <__fxstatat@plt+0x3528>
  405fc8:	ldr	x0, [x2, #104]
  405fcc:	ldr	x1, [x3, #104]
  405fd0:	subs	w0, w0, w1
  405fd4:	b.ne	405f7c <__fxstatat@plt+0x352c>  // b.any
  405fd8:	ldr	x1, [x2]
  405fdc:	ldr	x0, [x3]
  405fe0:	b	402800 <strcmp@plt>
  405fe4:	nop
  405fe8:	mov	x3, x1
  405fec:	ldr	w1, [x0, #152]
  405ff0:	mov	x2, x0
  405ff4:	ldr	w4, [x3, #152]
  405ff8:	cmp	w4, #0x9
  405ffc:	cset	w0, eq  // eq = none
  406000:	cmp	w4, #0x3
  406004:	csinc	w0, w0, wzr, ne  // ne = any
  406008:	cmp	w1, #0x3
  40600c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  406010:	b.eq	406030 <__fxstatat@plt+0x35e0>  // b.none
  406014:	ldr	w1, [x2, #156]
  406018:	and	w1, w1, #0xf000
  40601c:	cbz	w0, 40604c <__fxstatat@plt+0x35fc>
  406020:	cmp	w1, #0x4, lsl #12
  406024:	b.eq	406064 <__fxstatat@plt+0x3614>  // b.none
  406028:	mov	w0, #0x1                   	// #1
  40602c:	ret
  406030:	cbnz	w0, 406064 <__fxstatat@plt+0x3614>
  406034:	ldr	w0, [x3, #156]
  406038:	and	w0, w0, #0xf000
  40603c:	cmp	w0, #0x4, lsl #12
  406040:	b.eq	406064 <__fxstatat@plt+0x3614>  // b.none
  406044:	mov	w0, #0xffffffff            	// #-1
  406048:	ret
  40604c:	ldr	w0, [x3, #156]
  406050:	and	w0, w0, #0xf000
  406054:	cmp	w0, #0x4, lsl #12
  406058:	b.eq	406020 <__fxstatat@plt+0x35d0>  // b.none
  40605c:	cmp	w1, #0x4, lsl #12
  406060:	b.eq	406044 <__fxstatat@plt+0x35f4>  // b.none
  406064:	ldr	x1, [x2, #128]
  406068:	ldr	x0, [x3, #128]
  40606c:	cmp	x1, x0
  406070:	b.lt	406044 <__fxstatat@plt+0x35f4>  // b.tstop
  406074:	b.gt	406028 <__fxstatat@plt+0x35d8>
  406078:	ldr	x0, [x2, #136]
  40607c:	ldr	x1, [x3, #136]
  406080:	subs	w0, w0, w1
  406084:	b.ne	40602c <__fxstatat@plt+0x35dc>  // b.any
  406088:	ldr	x1, [x2]
  40608c:	ldr	x0, [x3]
  406090:	b	402800 <strcmp@plt>
  406094:	nop
  406098:	mov	x2, x0
  40609c:	ldr	w4, [x1, #152]
  4060a0:	cmp	w4, #0x9
  4060a4:	ldr	w3, [x2, #152]
  4060a8:	cset	w0, eq  // eq = none
  4060ac:	cmp	w4, #0x3
  4060b0:	csinc	w0, w0, wzr, ne  // ne = any
  4060b4:	cmp	w3, #0x3
  4060b8:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4060bc:	b.eq	4060dc <__fxstatat@plt+0x368c>  // b.none
  4060c0:	ldr	w3, [x2, #156]
  4060c4:	and	w3, w3, #0xf000
  4060c8:	cbz	w0, 4060f8 <__fxstatat@plt+0x36a8>
  4060cc:	cmp	w3, #0x4, lsl #12
  4060d0:	b.eq	406110 <__fxstatat@plt+0x36c0>  // b.none
  4060d4:	mov	w0, #0x1                   	// #1
  4060d8:	ret
  4060dc:	cbnz	w0, 406110 <__fxstatat@plt+0x36c0>
  4060e0:	ldr	w0, [x1, #156]
  4060e4:	and	w0, w0, #0xf000
  4060e8:	cmp	w0, #0x4, lsl #12
  4060ec:	b.eq	406110 <__fxstatat@plt+0x36c0>  // b.none
  4060f0:	mov	w0, #0xffffffff            	// #-1
  4060f4:	ret
  4060f8:	ldr	w0, [x1, #156]
  4060fc:	and	w0, w0, #0xf000
  406100:	cmp	w0, #0x4, lsl #12
  406104:	b.eq	4060cc <__fxstatat@plt+0x367c>  // b.none
  406108:	cmp	w3, #0x4, lsl #12
  40610c:	b.eq	4060f0 <__fxstatat@plt+0x36a0>  // b.none
  406110:	ldr	x3, [x1, #96]
  406114:	ldr	x0, [x2, #96]
  406118:	cmp	x3, x0
  40611c:	b.lt	4060f0 <__fxstatat@plt+0x36a0>  // b.tstop
  406120:	b.gt	4060d4 <__fxstatat@plt+0x3684>
  406124:	ldr	x0, [x1, #104]
  406128:	ldr	x3, [x2, #104]
  40612c:	subs	w0, w0, w3
  406130:	b.ne	4060d8 <__fxstatat@plt+0x3688>  // b.any
  406134:	ldr	x1, [x1]
  406138:	ldr	x0, [x2]
  40613c:	b	402800 <strcmp@plt>
  406140:	mov	x2, x0
  406144:	ldr	w4, [x1, #152]
  406148:	cmp	w4, #0x9
  40614c:	ldr	w3, [x2, #152]
  406150:	cset	w0, eq  // eq = none
  406154:	cmp	w4, #0x3
  406158:	csinc	w0, w0, wzr, ne  // ne = any
  40615c:	cmp	w3, #0x3
  406160:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  406164:	b.eq	406184 <__fxstatat@plt+0x3734>  // b.none
  406168:	ldr	w3, [x2, #156]
  40616c:	and	w3, w3, #0xf000
  406170:	cbz	w0, 4061a0 <__fxstatat@plt+0x3750>
  406174:	cmp	w3, #0x4, lsl #12
  406178:	b.eq	4061b8 <__fxstatat@plt+0x3768>  // b.none
  40617c:	mov	w0, #0x1                   	// #1
  406180:	ret
  406184:	cbnz	w0, 4061b8 <__fxstatat@plt+0x3768>
  406188:	ldr	w0, [x1, #156]
  40618c:	and	w0, w0, #0xf000
  406190:	cmp	w0, #0x4, lsl #12
  406194:	b.eq	4061b8 <__fxstatat@plt+0x3768>  // b.none
  406198:	mov	w0, #0xffffffff            	// #-1
  40619c:	ret
  4061a0:	ldr	w0, [x1, #156]
  4061a4:	and	w0, w0, #0xf000
  4061a8:	cmp	w0, #0x4, lsl #12
  4061ac:	b.eq	406174 <__fxstatat@plt+0x3724>  // b.none
  4061b0:	cmp	w3, #0x4, lsl #12
  4061b4:	b.eq	406198 <__fxstatat@plt+0x3748>  // b.none
  4061b8:	ldr	x3, [x1, #128]
  4061bc:	ldr	x0, [x2, #128]
  4061c0:	cmp	x3, x0
  4061c4:	b.lt	406198 <__fxstatat@plt+0x3748>  // b.tstop
  4061c8:	b.gt	40617c <__fxstatat@plt+0x372c>
  4061cc:	ldr	x0, [x1, #136]
  4061d0:	ldr	x3, [x2, #136]
  4061d4:	subs	w0, w0, w3
  4061d8:	b.ne	406180 <__fxstatat@plt+0x3730>  // b.any
  4061dc:	ldr	x1, [x1]
  4061e0:	ldr	x0, [x2]
  4061e4:	b	402800 <strcmp@plt>
  4061e8:	mov	x3, x1
  4061ec:	ldr	w1, [x0, #152]
  4061f0:	mov	x2, x0
  4061f4:	ldr	w4, [x3, #152]
  4061f8:	cmp	w4, #0x9
  4061fc:	cset	w0, eq  // eq = none
  406200:	cmp	w4, #0x3
  406204:	csinc	w0, w0, wzr, ne  // ne = any
  406208:	cmp	w1, #0x3
  40620c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  406210:	b.eq	406230 <__fxstatat@plt+0x37e0>  // b.none
  406214:	ldr	w1, [x2, #156]
  406218:	and	w1, w1, #0xf000
  40621c:	cbz	w0, 40624c <__fxstatat@plt+0x37fc>
  406220:	cmp	w1, #0x4, lsl #12
  406224:	b.eq	406264 <__fxstatat@plt+0x3814>  // b.none
  406228:	mov	w0, #0x1                   	// #1
  40622c:	ret
  406230:	cbnz	w0, 406264 <__fxstatat@plt+0x3814>
  406234:	ldr	w0, [x3, #156]
  406238:	and	w0, w0, #0xf000
  40623c:	cmp	w0, #0x4, lsl #12
  406240:	b.eq	406264 <__fxstatat@plt+0x3814>  // b.none
  406244:	mov	w0, #0xffffffff            	// #-1
  406248:	ret
  40624c:	ldr	w0, [x3, #156]
  406250:	and	w0, w0, #0xf000
  406254:	cmp	w0, #0x4, lsl #12
  406258:	b.eq	406220 <__fxstatat@plt+0x37d0>  // b.none
  40625c:	cmp	w1, #0x4, lsl #12
  406260:	b.eq	406244 <__fxstatat@plt+0x37f4>  // b.none
  406264:	ldr	x1, [x2, #112]
  406268:	ldr	x0, [x3, #112]
  40626c:	cmp	x1, x0
  406270:	b.lt	406244 <__fxstatat@plt+0x37f4>  // b.tstop
  406274:	b.gt	406228 <__fxstatat@plt+0x37d8>
  406278:	ldr	x0, [x2, #120]
  40627c:	ldr	x1, [x3, #120]
  406280:	subs	w0, w0, w1
  406284:	b.ne	40622c <__fxstatat@plt+0x37dc>  // b.any
  406288:	ldr	x1, [x2]
  40628c:	ldr	x0, [x3]
  406290:	b	402800 <strcmp@plt>
  406294:	nop
  406298:	mov	x2, x0
  40629c:	ldr	w4, [x1, #152]
  4062a0:	cmp	w4, #0x9
  4062a4:	ldr	w3, [x2, #152]
  4062a8:	cset	w0, eq  // eq = none
  4062ac:	cmp	w4, #0x3
  4062b0:	csinc	w0, w0, wzr, ne  // ne = any
  4062b4:	cmp	w3, #0x3
  4062b8:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4062bc:	b.eq	4062dc <__fxstatat@plt+0x388c>  // b.none
  4062c0:	ldr	w3, [x2, #156]
  4062c4:	and	w3, w3, #0xf000
  4062c8:	cbz	w0, 4062f8 <__fxstatat@plt+0x38a8>
  4062cc:	cmp	w3, #0x4, lsl #12
  4062d0:	b.eq	406310 <__fxstatat@plt+0x38c0>  // b.none
  4062d4:	mov	w0, #0x1                   	// #1
  4062d8:	ret
  4062dc:	cbnz	w0, 406310 <__fxstatat@plt+0x38c0>
  4062e0:	ldr	w0, [x1, #156]
  4062e4:	and	w0, w0, #0xf000
  4062e8:	cmp	w0, #0x4, lsl #12
  4062ec:	b.eq	406310 <__fxstatat@plt+0x38c0>  // b.none
  4062f0:	mov	w0, #0xffffffff            	// #-1
  4062f4:	ret
  4062f8:	ldr	w0, [x1, #156]
  4062fc:	and	w0, w0, #0xf000
  406300:	cmp	w0, #0x4, lsl #12
  406304:	b.eq	4062cc <__fxstatat@plt+0x387c>  // b.none
  406308:	cmp	w3, #0x4, lsl #12
  40630c:	b.eq	4062f0 <__fxstatat@plt+0x38a0>  // b.none
  406310:	ldr	x3, [x1, #112]
  406314:	ldr	x0, [x2, #112]
  406318:	cmp	x3, x0
  40631c:	b.lt	4062f0 <__fxstatat@plt+0x38a0>  // b.tstop
  406320:	b.gt	4062d4 <__fxstatat@plt+0x3884>
  406324:	ldr	x0, [x1, #120]
  406328:	ldr	x3, [x2, #120]
  40632c:	subs	w0, w0, w3
  406330:	b.ne	4062d8 <__fxstatat@plt+0x3888>  // b.any
  406334:	ldr	x1, [x1]
  406338:	ldr	x0, [x2]
  40633c:	b	402800 <strcmp@plt>
  406340:	mov	x2, x0
  406344:	ldr	x3, [x1, #128]
  406348:	ldr	x0, [x0, #128]
  40634c:	cmp	x3, x0
  406350:	b.lt	4063a4 <__fxstatat@plt+0x3954>  // b.tstop
  406354:	b.gt	40639c <__fxstatat@plt+0x394c>
  406358:	ldr	x0, [x1, #136]
  40635c:	ldr	x3, [x2, #136]
  406360:	subs	w0, w0, w3
  406364:	b.ne	4063a0 <__fxstatat@plt+0x3950>  // b.any
  406368:	stp	x29, x30, [sp, #-32]!
  40636c:	mov	x29, sp
  406370:	stp	x19, x20, [sp, #16]
  406374:	ldr	x20, [x2]
  406378:	ldr	x19, [x1]
  40637c:	bl	4029e0 <__errno_location@plt>
  406380:	mov	x2, x0
  406384:	mov	x0, x20
  406388:	mov	x1, x19
  40638c:	ldp	x19, x20, [sp, #16]
  406390:	str	wzr, [x2]
  406394:	ldp	x29, x30, [sp], #32
  406398:	b	402990 <strcoll@plt>
  40639c:	mov	w0, #0x1                   	// #1
  4063a0:	ret
  4063a4:	mov	w0, #0xffffffff            	// #-1
  4063a8:	ret
  4063ac:	nop
  4063b0:	mov	x2, x0
  4063b4:	ldr	x3, [x0, #128]
  4063b8:	ldr	x0, [x1, #128]
  4063bc:	cmp	x3, x0
  4063c0:	b.lt	406414 <__fxstatat@plt+0x39c4>  // b.tstop
  4063c4:	b.gt	40640c <__fxstatat@plt+0x39bc>
  4063c8:	ldr	x3, [x1, #136]
  4063cc:	ldr	x0, [x2, #136]
  4063d0:	subs	w0, w0, w3
  4063d4:	b.ne	406410 <__fxstatat@plt+0x39c0>  // b.any
  4063d8:	stp	x29, x30, [sp, #-32]!
  4063dc:	mov	x29, sp
  4063e0:	stp	x19, x20, [sp, #16]
  4063e4:	ldr	x20, [x1]
  4063e8:	ldr	x19, [x2]
  4063ec:	bl	4029e0 <__errno_location@plt>
  4063f0:	mov	x2, x0
  4063f4:	mov	x0, x20
  4063f8:	mov	x1, x19
  4063fc:	ldp	x19, x20, [sp, #16]
  406400:	str	wzr, [x2]
  406404:	ldp	x29, x30, [sp], #32
  406408:	b	402990 <strcoll@plt>
  40640c:	mov	w0, #0x1                   	// #1
  406410:	ret
  406414:	mov	w0, #0xffffffff            	// #-1
  406418:	ret
  40641c:	nop
  406420:	mov	x2, x0
  406424:	ldr	x3, [x1, #112]
  406428:	ldr	x0, [x0, #112]
  40642c:	cmp	x3, x0
  406430:	b.lt	406484 <__fxstatat@plt+0x3a34>  // b.tstop
  406434:	b.gt	40647c <__fxstatat@plt+0x3a2c>
  406438:	ldr	x0, [x1, #120]
  40643c:	ldr	x3, [x2, #120]
  406440:	subs	w0, w0, w3
  406444:	b.ne	406480 <__fxstatat@plt+0x3a30>  // b.any
  406448:	stp	x29, x30, [sp, #-32]!
  40644c:	mov	x29, sp
  406450:	stp	x19, x20, [sp, #16]
  406454:	ldr	x20, [x2]
  406458:	ldr	x19, [x1]
  40645c:	bl	4029e0 <__errno_location@plt>
  406460:	mov	x2, x0
  406464:	mov	x0, x20
  406468:	mov	x1, x19
  40646c:	ldp	x19, x20, [sp, #16]
  406470:	str	wzr, [x2]
  406474:	ldp	x29, x30, [sp], #32
  406478:	b	402990 <strcoll@plt>
  40647c:	mov	w0, #0x1                   	// #1
  406480:	ret
  406484:	mov	w0, #0xffffffff            	// #-1
  406488:	ret
  40648c:	nop
  406490:	mov	x2, x0
  406494:	ldr	x3, [x0, #112]
  406498:	ldr	x0, [x1, #112]
  40649c:	cmp	x3, x0
  4064a0:	b.lt	4064f4 <__fxstatat@plt+0x3aa4>  // b.tstop
  4064a4:	b.gt	4064ec <__fxstatat@plt+0x3a9c>
  4064a8:	ldr	x3, [x1, #120]
  4064ac:	ldr	x0, [x2, #120]
  4064b0:	subs	w0, w0, w3
  4064b4:	b.ne	4064f0 <__fxstatat@plt+0x3aa0>  // b.any
  4064b8:	stp	x29, x30, [sp, #-32]!
  4064bc:	mov	x29, sp
  4064c0:	stp	x19, x20, [sp, #16]
  4064c4:	ldr	x20, [x1]
  4064c8:	ldr	x19, [x2]
  4064cc:	bl	4029e0 <__errno_location@plt>
  4064d0:	mov	x2, x0
  4064d4:	mov	x0, x20
  4064d8:	mov	x1, x19
  4064dc:	ldp	x19, x20, [sp, #16]
  4064e0:	str	wzr, [x2]
  4064e4:	ldp	x29, x30, [sp], #32
  4064e8:	b	402990 <strcoll@plt>
  4064ec:	mov	w0, #0x1                   	// #1
  4064f0:	ret
  4064f4:	mov	w0, #0xffffffff            	// #-1
  4064f8:	ret
  4064fc:	nop
  406500:	mov	x2, x0
  406504:	ldr	x3, [x1, #96]
  406508:	ldr	x0, [x0, #96]
  40650c:	cmp	x3, x0
  406510:	b.lt	406564 <__fxstatat@plt+0x3b14>  // b.tstop
  406514:	b.gt	40655c <__fxstatat@plt+0x3b0c>
  406518:	ldr	x0, [x1, #104]
  40651c:	ldr	x3, [x2, #104]
  406520:	subs	w0, w0, w3
  406524:	b.ne	406560 <__fxstatat@plt+0x3b10>  // b.any
  406528:	stp	x29, x30, [sp, #-32]!
  40652c:	mov	x29, sp
  406530:	stp	x19, x20, [sp, #16]
  406534:	ldr	x20, [x2]
  406538:	ldr	x19, [x1]
  40653c:	bl	4029e0 <__errno_location@plt>
  406540:	mov	x2, x0
  406544:	mov	x0, x20
  406548:	mov	x1, x19
  40654c:	ldp	x19, x20, [sp, #16]
  406550:	str	wzr, [x2]
  406554:	ldp	x29, x30, [sp], #32
  406558:	b	402990 <strcoll@plt>
  40655c:	mov	w0, #0x1                   	// #1
  406560:	ret
  406564:	mov	w0, #0xffffffff            	// #-1
  406568:	ret
  40656c:	nop
  406570:	mov	x2, x0
  406574:	ldr	x3, [x0, #96]
  406578:	ldr	x0, [x1, #96]
  40657c:	cmp	x3, x0
  406580:	b.lt	4065d4 <__fxstatat@plt+0x3b84>  // b.tstop
  406584:	b.gt	4065cc <__fxstatat@plt+0x3b7c>
  406588:	ldr	x3, [x1, #104]
  40658c:	ldr	x0, [x2, #104]
  406590:	subs	w0, w0, w3
  406594:	b.ne	4065d0 <__fxstatat@plt+0x3b80>  // b.any
  406598:	stp	x29, x30, [sp, #-32]!
  40659c:	mov	x29, sp
  4065a0:	stp	x19, x20, [sp, #16]
  4065a4:	ldr	x20, [x1]
  4065a8:	ldr	x19, [x2]
  4065ac:	bl	4029e0 <__errno_location@plt>
  4065b0:	mov	x2, x0
  4065b4:	mov	x0, x20
  4065b8:	mov	x1, x19
  4065bc:	ldp	x19, x20, [sp, #16]
  4065c0:	str	wzr, [x2]
  4065c4:	ldp	x29, x30, [sp], #32
  4065c8:	b	402990 <strcoll@plt>
  4065cc:	mov	w0, #0x1                   	// #1
  4065d0:	ret
  4065d4:	mov	w0, #0xffffffff            	// #-1
  4065d8:	ret
  4065dc:	nop
  4065e0:	ldr	x2, [x0, #72]
  4065e4:	ldr	x3, [x1, #72]
  4065e8:	cmp	x3, x2
  4065ec:	b.gt	406630 <__fxstatat@plt+0x3be0>
  4065f0:	b.ne	406628 <__fxstatat@plt+0x3bd8>  // b.any
  4065f4:	stp	x29, x30, [sp, #-32]!
  4065f8:	mov	x29, sp
  4065fc:	stp	x19, x20, [sp, #16]
  406600:	ldr	x20, [x1]
  406604:	ldr	x19, [x0]
  406608:	bl	4029e0 <__errno_location@plt>
  40660c:	mov	x2, x0
  406610:	mov	x0, x20
  406614:	mov	x1, x19
  406618:	ldp	x19, x20, [sp, #16]
  40661c:	str	wzr, [x2]
  406620:	ldp	x29, x30, [sp], #32
  406624:	b	402990 <strcoll@plt>
  406628:	cset	w0, lt  // lt = tstop
  40662c:	ret
  406630:	mov	w0, #0xffffffff            	// #-1
  406634:	ret
  406638:	ldr	x3, [x0, #72]
  40663c:	ldr	x2, [x1, #72]
  406640:	cmp	x3, x2
  406644:	b.gt	406688 <__fxstatat@plt+0x3c38>
  406648:	b.ne	406680 <__fxstatat@plt+0x3c30>  // b.any
  40664c:	stp	x29, x30, [sp, #-32]!
  406650:	mov	x29, sp
  406654:	stp	x19, x20, [sp, #16]
  406658:	ldr	x20, [x0]
  40665c:	ldr	x19, [x1]
  406660:	bl	4029e0 <__errno_location@plt>
  406664:	mov	x2, x0
  406668:	mov	x0, x20
  40666c:	mov	x1, x19
  406670:	ldp	x19, x20, [sp, #16]
  406674:	str	wzr, [x2]
  406678:	ldp	x29, x30, [sp], #32
  40667c:	b	402990 <strcoll@plt>
  406680:	cset	w0, lt  // lt = tstop
  406684:	ret
  406688:	mov	w0, #0xffffffff            	// #-1
  40668c:	ret
  406690:	stp	x29, x30, [sp, #-48]!
  406694:	mov	x29, sp
  406698:	ldr	w3, [x1, #152]
  40669c:	ldr	w2, [x0, #152]
  4066a0:	cmp	w3, #0x9
  4066a4:	stp	x19, x20, [sp, #16]
  4066a8:	mov	x19, x1
  4066ac:	cset	w1, eq  // eq = none
  4066b0:	cmp	w3, #0x3
  4066b4:	csinc	w1, w1, wzr, ne  // ne = any
  4066b8:	cmp	w2, #0x3
  4066bc:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  4066c0:	b.eq	4066e8 <__fxstatat@plt+0x3c98>  // b.none
  4066c4:	ldr	w2, [x0, #156]
  4066c8:	and	w2, w2, #0xf000
  4066cc:	cbz	w1, 40670c <__fxstatat@plt+0x3cbc>
  4066d0:	cmp	w2, #0x4, lsl #12
  4066d4:	b.eq	406724 <__fxstatat@plt+0x3cd4>  // b.none
  4066d8:	mov	w0, #0x1                   	// #1
  4066dc:	ldp	x19, x20, [sp, #16]
  4066e0:	ldp	x29, x30, [sp], #48
  4066e4:	ret
  4066e8:	cbnz	w1, 406724 <__fxstatat@plt+0x3cd4>
  4066ec:	ldr	w1, [x19, #156]
  4066f0:	and	w1, w1, #0xf000
  4066f4:	cmp	w1, #0x4, lsl #12
  4066f8:	b.eq	406724 <__fxstatat@plt+0x3cd4>  // b.none
  4066fc:	mov	w0, #0xffffffff            	// #-1
  406700:	ldp	x19, x20, [sp, #16]
  406704:	ldp	x29, x30, [sp], #48
  406708:	ret
  40670c:	ldr	w1, [x19, #156]
  406710:	and	w1, w1, #0xf000
  406714:	cmp	w1, #0x4, lsl #12
  406718:	b.eq	4066d0 <__fxstatat@plt+0x3c80>  // b.none
  40671c:	cmp	w2, #0x4, lsl #12
  406720:	b.eq	4066fc <__fxstatat@plt+0x3cac>  // b.none
  406724:	stp	x21, x22, [sp, #32]
  406728:	mov	w1, #0x2e                  	// #46
  40672c:	ldr	x21, [x0]
  406730:	mov	x0, x21
  406734:	bl	402720 <strrchr@plt>
  406738:	ldr	x22, [x19]
  40673c:	mov	w1, #0x2e                  	// #46
  406740:	mov	x19, x0
  406744:	mov	x0, x22
  406748:	bl	402720 <strrchr@plt>
  40674c:	cmp	x19, #0x0
  406750:	mov	x20, x0
  406754:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  406758:	add	x0, x0, #0x58
  40675c:	csel	x19, x0, x19, eq  // eq = none
  406760:	cmp	x20, #0x0
  406764:	csel	x20, x0, x20, eq  // eq = none
  406768:	bl	4029e0 <__errno_location@plt>
  40676c:	mov	x2, x0
  406770:	mov	x1, x20
  406774:	mov	x0, x19
  406778:	str	wzr, [x2]
  40677c:	bl	402990 <strcoll@plt>
  406780:	cbnz	w0, 40679c <__fxstatat@plt+0x3d4c>
  406784:	mov	x1, x22
  406788:	mov	x0, x21
  40678c:	ldp	x19, x20, [sp, #16]
  406790:	ldp	x21, x22, [sp, #32]
  406794:	ldp	x29, x30, [sp], #48
  406798:	b	402990 <strcoll@plt>
  40679c:	ldp	x19, x20, [sp, #16]
  4067a0:	ldp	x21, x22, [sp, #32]
  4067a4:	ldp	x29, x30, [sp], #48
  4067a8:	ret
  4067ac:	nop
  4067b0:	stp	x29, x30, [sp, #-48]!
  4067b4:	mov	x2, x1
  4067b8:	mov	w1, #0x2e                  	// #46
  4067bc:	mov	x29, sp
  4067c0:	stp	x19, x20, [sp, #16]
  4067c4:	mov	x19, x0
  4067c8:	ldr	x20, [x2]
  4067cc:	str	x21, [sp, #32]
  4067d0:	mov	x0, x20
  4067d4:	bl	402720 <strrchr@plt>
  4067d8:	ldr	x21, [x19]
  4067dc:	mov	w1, #0x2e                  	// #46
  4067e0:	mov	x19, x0
  4067e4:	mov	x0, x21
  4067e8:	bl	402720 <strrchr@plt>
  4067ec:	mov	x1, x0
  4067f0:	cbz	x19, 406820 <__fxstatat@plt+0x3dd0>
  4067f4:	cmp	x0, #0x0
  4067f8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  4067fc:	add	x0, x0, #0x58
  406800:	csel	x1, x0, x1, eq  // eq = none
  406804:	mov	x0, x19
  406808:	bl	402800 <strcmp@plt>
  40680c:	cbz	w0, 40682c <__fxstatat@plt+0x3ddc>
  406810:	ldp	x19, x20, [sp, #16]
  406814:	ldr	x21, [sp, #32]
  406818:	ldp	x29, x30, [sp], #48
  40681c:	ret
  406820:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x2f80>
  406824:	add	x19, x19, #0x58
  406828:	cbnz	x0, 406804 <__fxstatat@plt+0x3db4>
  40682c:	mov	x1, x21
  406830:	mov	x0, x20
  406834:	ldp	x19, x20, [sp, #16]
  406838:	ldr	x21, [sp, #32]
  40683c:	ldp	x29, x30, [sp], #48
  406840:	b	402800 <strcmp@plt>
  406844:	nop
  406848:	stp	x29, x30, [sp, #-48]!
  40684c:	mov	x29, sp
  406850:	stp	x19, x20, [sp, #16]
  406854:	mov	x19, x1
  406858:	mov	w1, #0x2e                  	// #46
  40685c:	ldr	x20, [x0]
  406860:	str	x21, [sp, #32]
  406864:	mov	x0, x20
  406868:	bl	402720 <strrchr@plt>
  40686c:	ldr	x21, [x19]
  406870:	mov	w1, #0x2e                  	// #46
  406874:	mov	x19, x0
  406878:	mov	x0, x21
  40687c:	bl	402720 <strrchr@plt>
  406880:	mov	x1, x0
  406884:	cbz	x19, 4068b4 <__fxstatat@plt+0x3e64>
  406888:	cmp	x0, #0x0
  40688c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  406890:	add	x0, x0, #0x58
  406894:	csel	x1, x0, x1, eq  // eq = none
  406898:	mov	x0, x19
  40689c:	bl	402800 <strcmp@plt>
  4068a0:	cbz	w0, 4068c0 <__fxstatat@plt+0x3e70>
  4068a4:	ldp	x19, x20, [sp, #16]
  4068a8:	ldr	x21, [sp, #32]
  4068ac:	ldp	x29, x30, [sp], #48
  4068b0:	ret
  4068b4:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x2f80>
  4068b8:	add	x19, x19, #0x58
  4068bc:	cbnz	x0, 406898 <__fxstatat@plt+0x3e48>
  4068c0:	mov	x1, x21
  4068c4:	mov	x0, x20
  4068c8:	ldp	x19, x20, [sp, #16]
  4068cc:	ldr	x21, [sp, #32]
  4068d0:	ldp	x29, x30, [sp], #48
  4068d4:	b	402800 <strcmp@plt>
  4068d8:	ldr	w4, [x1, #152]
  4068dc:	ldr	w3, [x0, #152]
  4068e0:	cmp	w4, #0x9
  4068e4:	cset	w2, eq  // eq = none
  4068e8:	cmp	w4, #0x3
  4068ec:	csinc	w2, w2, wzr, ne  // ne = any
  4068f0:	cmp	w3, #0x3
  4068f4:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4068f8:	b.eq	406918 <__fxstatat@plt+0x3ec8>  // b.none
  4068fc:	ldr	w3, [x0, #156]
  406900:	and	w3, w3, #0xf000
  406904:	cbz	w2, 406934 <__fxstatat@plt+0x3ee4>
  406908:	cmp	w3, #0x4, lsl #12
  40690c:	b.eq	40694c <__fxstatat@plt+0x3efc>  // b.none
  406910:	mov	w0, #0x1                   	// #1
  406914:	ret
  406918:	cbnz	w2, 40694c <__fxstatat@plt+0x3efc>
  40691c:	ldr	w2, [x1, #156]
  406920:	and	w2, w2, #0xf000
  406924:	cmp	w2, #0x4, lsl #12
  406928:	b.eq	40694c <__fxstatat@plt+0x3efc>  // b.none
  40692c:	mov	w0, #0xffffffff            	// #-1
  406930:	ret
  406934:	ldr	w2, [x1, #156]
  406938:	and	w2, w2, #0xf000
  40693c:	cmp	w2, #0x4, lsl #12
  406940:	b.eq	406908 <__fxstatat@plt+0x3eb8>  // b.none
  406944:	cmp	w3, #0x4, lsl #12
  406948:	b.eq	40692c <__fxstatat@plt+0x3edc>  // b.none
  40694c:	stp	x29, x30, [sp, #-32]!
  406950:	mov	x29, sp
  406954:	stp	x19, x20, [sp, #16]
  406958:	ldr	x20, [x1]
  40695c:	ldr	x19, [x0]
  406960:	bl	4029e0 <__errno_location@plt>
  406964:	mov	x2, x0
  406968:	mov	x0, x20
  40696c:	mov	x1, x19
  406970:	ldp	x19, x20, [sp, #16]
  406974:	str	wzr, [x2]
  406978:	ldp	x29, x30, [sp], #32
  40697c:	b	402990 <strcoll@plt>
  406980:	ldr	w4, [x1, #152]
  406984:	ldr	w3, [x0, #152]
  406988:	cmp	w4, #0x9
  40698c:	cset	w2, eq  // eq = none
  406990:	cmp	w4, #0x3
  406994:	csinc	w2, w2, wzr, ne  // ne = any
  406998:	cmp	w3, #0x3
  40699c:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4069a0:	b.eq	4069c0 <__fxstatat@plt+0x3f70>  // b.none
  4069a4:	ldr	w3, [x0, #156]
  4069a8:	and	w3, w3, #0xf000
  4069ac:	cbz	w2, 4069dc <__fxstatat@plt+0x3f8c>
  4069b0:	cmp	w3, #0x4, lsl #12
  4069b4:	b.eq	4069f4 <__fxstatat@plt+0x3fa4>  // b.none
  4069b8:	mov	w0, #0x1                   	// #1
  4069bc:	ret
  4069c0:	cbnz	w2, 4069f4 <__fxstatat@plt+0x3fa4>
  4069c4:	ldr	w2, [x1, #156]
  4069c8:	and	w2, w2, #0xf000
  4069cc:	cmp	w2, #0x4, lsl #12
  4069d0:	b.eq	4069f4 <__fxstatat@plt+0x3fa4>  // b.none
  4069d4:	mov	w0, #0xffffffff            	// #-1
  4069d8:	ret
  4069dc:	ldr	w2, [x1, #156]
  4069e0:	and	w2, w2, #0xf000
  4069e4:	cmp	w2, #0x4, lsl #12
  4069e8:	b.eq	4069b0 <__fxstatat@plt+0x3f60>  // b.none
  4069ec:	cmp	w3, #0x4, lsl #12
  4069f0:	b.eq	4069d4 <__fxstatat@plt+0x3f84>  // b.none
  4069f4:	stp	x29, x30, [sp, #-32]!
  4069f8:	mov	x29, sp
  4069fc:	stp	x19, x20, [sp, #16]
  406a00:	ldr	x20, [x0]
  406a04:	ldr	x19, [x1]
  406a08:	bl	4029e0 <__errno_location@plt>
  406a0c:	mov	x2, x0
  406a10:	mov	x0, x20
  406a14:	mov	x1, x19
  406a18:	ldp	x19, x20, [sp, #16]
  406a1c:	str	wzr, [x2]
  406a20:	ldp	x29, x30, [sp], #32
  406a24:	b	402990 <strcoll@plt>
  406a28:	ldr	w4, [x1, #152]
  406a2c:	ldr	w3, [x0, #152]
  406a30:	cmp	w4, #0x9
  406a34:	cset	w2, eq  // eq = none
  406a38:	cmp	w4, #0x3
  406a3c:	csinc	w2, w2, wzr, ne  // ne = any
  406a40:	cmp	w3, #0x3
  406a44:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  406a48:	b.eq	406a68 <__fxstatat@plt+0x4018>  // b.none
  406a4c:	ldr	w3, [x0, #156]
  406a50:	and	w3, w3, #0xf000
  406a54:	cbz	w2, 406abc <__fxstatat@plt+0x406c>
  406a58:	cmp	w3, #0x4, lsl #12
  406a5c:	b.eq	406a6c <__fxstatat@plt+0x401c>  // b.none
  406a60:	mov	w0, #0x1                   	// #1
  406a64:	ret
  406a68:	cbz	w2, 406adc <__fxstatat@plt+0x408c>
  406a6c:	ldr	x2, [x0, #72]
  406a70:	ldr	x3, [x1, #72]
  406a74:	cmp	x3, x2
  406a78:	b.gt	406ad4 <__fxstatat@plt+0x4084>
  406a7c:	b.ne	406ab4 <__fxstatat@plt+0x4064>  // b.any
  406a80:	stp	x29, x30, [sp, #-32]!
  406a84:	mov	x29, sp
  406a88:	stp	x19, x20, [sp, #16]
  406a8c:	ldr	x20, [x1]
  406a90:	ldr	x19, [x0]
  406a94:	bl	4029e0 <__errno_location@plt>
  406a98:	mov	x2, x0
  406a9c:	mov	x0, x20
  406aa0:	mov	x1, x19
  406aa4:	ldp	x19, x20, [sp, #16]
  406aa8:	str	wzr, [x2]
  406aac:	ldp	x29, x30, [sp], #32
  406ab0:	b	402990 <strcoll@plt>
  406ab4:	cset	w0, lt  // lt = tstop
  406ab8:	ret
  406abc:	ldr	w2, [x1, #156]
  406ac0:	and	w2, w2, #0xf000
  406ac4:	cmp	w2, #0x4, lsl #12
  406ac8:	b.eq	406a58 <__fxstatat@plt+0x4008>  // b.none
  406acc:	cmp	w3, #0x4, lsl #12
  406ad0:	b.ne	406a6c <__fxstatat@plt+0x401c>  // b.any
  406ad4:	mov	w0, #0xffffffff            	// #-1
  406ad8:	ret
  406adc:	ldr	w2, [x1, #156]
  406ae0:	and	w2, w2, #0xf000
  406ae4:	cmp	w2, #0x4, lsl #12
  406ae8:	b.eq	406a6c <__fxstatat@plt+0x401c>  // b.none
  406aec:	mov	w0, #0xffffffff            	// #-1
  406af0:	ret
  406af4:	nop
  406af8:	ldr	w4, [x1, #152]
  406afc:	ldr	w3, [x0, #152]
  406b00:	cmp	w4, #0x9
  406b04:	cset	w2, eq  // eq = none
  406b08:	cmp	w4, #0x3
  406b0c:	csinc	w2, w2, wzr, ne  // ne = any
  406b10:	cmp	w3, #0x3
  406b14:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  406b18:	b.eq	406b38 <__fxstatat@plt+0x40e8>  // b.none
  406b1c:	ldr	w3, [x0, #156]
  406b20:	and	w3, w3, #0xf000
  406b24:	cbz	w2, 406b8c <__fxstatat@plt+0x413c>
  406b28:	cmp	w3, #0x4, lsl #12
  406b2c:	b.eq	406b3c <__fxstatat@plt+0x40ec>  // b.none
  406b30:	mov	w0, #0x1                   	// #1
  406b34:	ret
  406b38:	cbz	w2, 406bac <__fxstatat@plt+0x415c>
  406b3c:	ldr	x3, [x0, #72]
  406b40:	ldr	x2, [x1, #72]
  406b44:	cmp	x3, x2
  406b48:	b.gt	406ba4 <__fxstatat@plt+0x4154>
  406b4c:	b.ne	406b84 <__fxstatat@plt+0x4134>  // b.any
  406b50:	stp	x29, x30, [sp, #-32]!
  406b54:	mov	x29, sp
  406b58:	stp	x19, x20, [sp, #16]
  406b5c:	ldr	x20, [x0]
  406b60:	ldr	x19, [x1]
  406b64:	bl	4029e0 <__errno_location@plt>
  406b68:	mov	x2, x0
  406b6c:	mov	x0, x20
  406b70:	mov	x1, x19
  406b74:	ldp	x19, x20, [sp, #16]
  406b78:	str	wzr, [x2]
  406b7c:	ldp	x29, x30, [sp], #32
  406b80:	b	402990 <strcoll@plt>
  406b84:	cset	w0, lt  // lt = tstop
  406b88:	ret
  406b8c:	ldr	w2, [x1, #156]
  406b90:	and	w2, w2, #0xf000
  406b94:	cmp	w2, #0x4, lsl #12
  406b98:	b.eq	406b28 <__fxstatat@plt+0x40d8>  // b.none
  406b9c:	cmp	w3, #0x4, lsl #12
  406ba0:	b.ne	406b3c <__fxstatat@plt+0x40ec>  // b.any
  406ba4:	mov	w0, #0xffffffff            	// #-1
  406ba8:	ret
  406bac:	ldr	w2, [x1, #156]
  406bb0:	and	w2, w2, #0xf000
  406bb4:	cmp	w2, #0x4, lsl #12
  406bb8:	b.eq	406b3c <__fxstatat@plt+0x40ec>  // b.none
  406bbc:	mov	w0, #0xffffffff            	// #-1
  406bc0:	ret
  406bc4:	nop
  406bc8:	stp	x29, x30, [sp, #-48]!
  406bcc:	mov	x2, x1
  406bd0:	mov	w1, #0x2e                  	// #46
  406bd4:	mov	x29, sp
  406bd8:	stp	x19, x20, [sp, #16]
  406bdc:	mov	x19, x0
  406be0:	stp	x21, x22, [sp, #32]
  406be4:	ldr	x21, [x2]
  406be8:	mov	x0, x21
  406bec:	bl	402720 <strrchr@plt>
  406bf0:	ldr	x22, [x19]
  406bf4:	mov	w1, #0x2e                  	// #46
  406bf8:	mov	x19, x0
  406bfc:	mov	x0, x22
  406c00:	bl	402720 <strrchr@plt>
  406c04:	cmp	x19, #0x0
  406c08:	mov	x20, x0
  406c0c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  406c10:	add	x0, x0, #0x58
  406c14:	csel	x19, x0, x19, eq  // eq = none
  406c18:	cmp	x20, #0x0
  406c1c:	csel	x20, x0, x20, eq  // eq = none
  406c20:	bl	4029e0 <__errno_location@plt>
  406c24:	mov	x2, x0
  406c28:	mov	x1, x20
  406c2c:	mov	x0, x19
  406c30:	str	wzr, [x2]
  406c34:	bl	402990 <strcoll@plt>
  406c38:	cbnz	w0, 406c54 <__fxstatat@plt+0x4204>
  406c3c:	mov	x1, x22
  406c40:	mov	x0, x21
  406c44:	ldp	x19, x20, [sp, #16]
  406c48:	ldp	x21, x22, [sp, #32]
  406c4c:	ldp	x29, x30, [sp], #48
  406c50:	b	402990 <strcoll@plt>
  406c54:	ldp	x19, x20, [sp, #16]
  406c58:	ldp	x21, x22, [sp, #32]
  406c5c:	ldp	x29, x30, [sp], #48
  406c60:	ret
  406c64:	nop
  406c68:	stp	x29, x30, [sp, #-48]!
  406c6c:	mov	x29, sp
  406c70:	stp	x19, x20, [sp, #16]
  406c74:	mov	x19, x1
  406c78:	mov	w1, #0x2e                  	// #46
  406c7c:	stp	x21, x22, [sp, #32]
  406c80:	ldr	x21, [x0]
  406c84:	mov	x0, x21
  406c88:	bl	402720 <strrchr@plt>
  406c8c:	ldr	x22, [x19]
  406c90:	mov	w1, #0x2e                  	// #46
  406c94:	mov	x19, x0
  406c98:	mov	x0, x22
  406c9c:	bl	402720 <strrchr@plt>
  406ca0:	cmp	x19, #0x0
  406ca4:	mov	x20, x0
  406ca8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  406cac:	add	x0, x0, #0x58
  406cb0:	csel	x19, x0, x19, eq  // eq = none
  406cb4:	cmp	x20, #0x0
  406cb8:	csel	x20, x0, x20, eq  // eq = none
  406cbc:	bl	4029e0 <__errno_location@plt>
  406cc0:	mov	x2, x0
  406cc4:	mov	x1, x20
  406cc8:	mov	x0, x19
  406ccc:	str	wzr, [x2]
  406cd0:	bl	402990 <strcoll@plt>
  406cd4:	cbnz	w0, 406cf0 <__fxstatat@plt+0x42a0>
  406cd8:	mov	x1, x22
  406cdc:	mov	x0, x21
  406ce0:	ldp	x19, x20, [sp, #16]
  406ce4:	ldp	x21, x22, [sp, #32]
  406ce8:	ldp	x29, x30, [sp], #48
  406cec:	b	402990 <strcoll@plt>
  406cf0:	ldp	x19, x20, [sp, #16]
  406cf4:	ldp	x21, x22, [sp, #32]
  406cf8:	ldp	x29, x30, [sp], #48
  406cfc:	ret
  406d00:	ldr	w4, [x1, #152]
  406d04:	mov	x2, x0
  406d08:	ldr	w3, [x0, #152]
  406d0c:	cmp	w4, #0x9
  406d10:	cset	w0, eq  // eq = none
  406d14:	cmp	w4, #0x3
  406d18:	csinc	w0, w0, wzr, ne  // ne = any
  406d1c:	cmp	w3, #0x3
  406d20:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  406d24:	b.eq	406d44 <__fxstatat@plt+0x42f4>  // b.none
  406d28:	ldr	w3, [x2, #156]
  406d2c:	and	w3, w3, #0xf000
  406d30:	cbz	w0, 406d60 <__fxstatat@plt+0x4310>
  406d34:	cmp	w3, #0x4, lsl #12
  406d38:	b.eq	406d78 <__fxstatat@plt+0x4328>  // b.none
  406d3c:	mov	w0, #0x1                   	// #1
  406d40:	ret
  406d44:	cbnz	w0, 406d78 <__fxstatat@plt+0x4328>
  406d48:	ldr	w0, [x1, #156]
  406d4c:	and	w0, w0, #0xf000
  406d50:	cmp	w0, #0x4, lsl #12
  406d54:	b.eq	406d78 <__fxstatat@plt+0x4328>  // b.none
  406d58:	mov	w0, #0xffffffff            	// #-1
  406d5c:	ret
  406d60:	ldr	w0, [x1, #156]
  406d64:	and	w0, w0, #0xf000
  406d68:	cmp	w0, #0x4, lsl #12
  406d6c:	b.eq	406d34 <__fxstatat@plt+0x42e4>  // b.none
  406d70:	cmp	w3, #0x4, lsl #12
  406d74:	b.eq	406d58 <__fxstatat@plt+0x4308>  // b.none
  406d78:	ldr	x3, [x1, #112]
  406d7c:	ldr	x0, [x2, #112]
  406d80:	cmp	x3, x0
  406d84:	b.lt	406d58 <__fxstatat@plt+0x4308>  // b.tstop
  406d88:	b.gt	406d3c <__fxstatat@plt+0x42ec>
  406d8c:	ldr	x0, [x1, #120]
  406d90:	ldr	x3, [x2, #120]
  406d94:	subs	w0, w0, w3
  406d98:	b.ne	406d5c <__fxstatat@plt+0x430c>  // b.any
  406d9c:	stp	x29, x30, [sp, #-32]!
  406da0:	mov	x29, sp
  406da4:	stp	x19, x20, [sp, #16]
  406da8:	ldr	x20, [x2]
  406dac:	ldr	x19, [x1]
  406db0:	bl	4029e0 <__errno_location@plt>
  406db4:	mov	x2, x0
  406db8:	mov	x0, x20
  406dbc:	mov	x1, x19
  406dc0:	ldp	x19, x20, [sp, #16]
  406dc4:	str	wzr, [x2]
  406dc8:	ldp	x29, x30, [sp], #32
  406dcc:	b	402990 <strcoll@plt>
  406dd0:	ldr	w4, [x1, #152]
  406dd4:	mov	x2, x0
  406dd8:	ldr	w3, [x0, #152]
  406ddc:	cmp	w4, #0x9
  406de0:	cset	w0, eq  // eq = none
  406de4:	cmp	w4, #0x3
  406de8:	csinc	w0, w0, wzr, ne  // ne = any
  406dec:	cmp	w3, #0x3
  406df0:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  406df4:	b.eq	406e14 <__fxstatat@plt+0x43c4>  // b.none
  406df8:	ldr	w3, [x2, #156]
  406dfc:	and	w3, w3, #0xf000
  406e00:	cbz	w0, 406e30 <__fxstatat@plt+0x43e0>
  406e04:	cmp	w3, #0x4, lsl #12
  406e08:	b.eq	406e48 <__fxstatat@plt+0x43f8>  // b.none
  406e0c:	mov	w0, #0x1                   	// #1
  406e10:	ret
  406e14:	cbnz	w0, 406e48 <__fxstatat@plt+0x43f8>
  406e18:	ldr	w0, [x1, #156]
  406e1c:	and	w0, w0, #0xf000
  406e20:	cmp	w0, #0x4, lsl #12
  406e24:	b.eq	406e48 <__fxstatat@plt+0x43f8>  // b.none
  406e28:	mov	w0, #0xffffffff            	// #-1
  406e2c:	ret
  406e30:	ldr	w0, [x1, #156]
  406e34:	and	w0, w0, #0xf000
  406e38:	cmp	w0, #0x4, lsl #12
  406e3c:	b.eq	406e04 <__fxstatat@plt+0x43b4>  // b.none
  406e40:	cmp	w3, #0x4, lsl #12
  406e44:	b.eq	406e28 <__fxstatat@plt+0x43d8>  // b.none
  406e48:	ldr	x3, [x1, #128]
  406e4c:	ldr	x0, [x2, #128]
  406e50:	cmp	x3, x0
  406e54:	b.lt	406e28 <__fxstatat@plt+0x43d8>  // b.tstop
  406e58:	b.gt	406e0c <__fxstatat@plt+0x43bc>
  406e5c:	ldr	x0, [x1, #136]
  406e60:	ldr	x3, [x2, #136]
  406e64:	subs	w0, w0, w3
  406e68:	b.ne	406e2c <__fxstatat@plt+0x43dc>  // b.any
  406e6c:	stp	x29, x30, [sp, #-32]!
  406e70:	mov	x29, sp
  406e74:	stp	x19, x20, [sp, #16]
  406e78:	ldr	x20, [x2]
  406e7c:	ldr	x19, [x1]
  406e80:	bl	4029e0 <__errno_location@plt>
  406e84:	mov	x2, x0
  406e88:	mov	x0, x20
  406e8c:	mov	x1, x19
  406e90:	ldp	x19, x20, [sp, #16]
  406e94:	str	wzr, [x2]
  406e98:	ldp	x29, x30, [sp], #32
  406e9c:	b	402990 <strcoll@plt>
  406ea0:	ldr	w4, [x1, #152]
  406ea4:	mov	x2, x0
  406ea8:	ldr	w3, [x0, #152]
  406eac:	cmp	w4, #0x9
  406eb0:	cset	w0, eq  // eq = none
  406eb4:	cmp	w4, #0x3
  406eb8:	csinc	w0, w0, wzr, ne  // ne = any
  406ebc:	cmp	w3, #0x3
  406ec0:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  406ec4:	b.eq	406ee4 <__fxstatat@plt+0x4494>  // b.none
  406ec8:	ldr	w3, [x2, #156]
  406ecc:	and	w3, w3, #0xf000
  406ed0:	cbz	w0, 406f00 <__fxstatat@plt+0x44b0>
  406ed4:	cmp	w3, #0x4, lsl #12
  406ed8:	b.eq	406f18 <__fxstatat@plt+0x44c8>  // b.none
  406edc:	mov	w0, #0x1                   	// #1
  406ee0:	ret
  406ee4:	cbnz	w0, 406f18 <__fxstatat@plt+0x44c8>
  406ee8:	ldr	w0, [x1, #156]
  406eec:	and	w0, w0, #0xf000
  406ef0:	cmp	w0, #0x4, lsl #12
  406ef4:	b.eq	406f18 <__fxstatat@plt+0x44c8>  // b.none
  406ef8:	mov	w0, #0xffffffff            	// #-1
  406efc:	ret
  406f00:	ldr	w0, [x1, #156]
  406f04:	and	w0, w0, #0xf000
  406f08:	cmp	w0, #0x4, lsl #12
  406f0c:	b.eq	406ed4 <__fxstatat@plt+0x4484>  // b.none
  406f10:	cmp	w3, #0x4, lsl #12
  406f14:	b.eq	406ef8 <__fxstatat@plt+0x44a8>  // b.none
  406f18:	ldr	x0, [x1, #96]
  406f1c:	ldr	x3, [x2, #96]
  406f20:	cmp	x3, x0
  406f24:	b.lt	406ef8 <__fxstatat@plt+0x44a8>  // b.tstop
  406f28:	b.gt	406edc <__fxstatat@plt+0x448c>
  406f2c:	ldr	x3, [x1, #104]
  406f30:	ldr	x0, [x2, #104]
  406f34:	subs	w0, w0, w3
  406f38:	b.ne	406efc <__fxstatat@plt+0x44ac>  // b.any
  406f3c:	stp	x29, x30, [sp, #-32]!
  406f40:	mov	x29, sp
  406f44:	stp	x19, x20, [sp, #16]
  406f48:	ldr	x20, [x1]
  406f4c:	ldr	x19, [x2]
  406f50:	bl	4029e0 <__errno_location@plt>
  406f54:	mov	x2, x0
  406f58:	mov	x0, x20
  406f5c:	mov	x1, x19
  406f60:	ldp	x19, x20, [sp, #16]
  406f64:	str	wzr, [x2]
  406f68:	ldp	x29, x30, [sp], #32
  406f6c:	b	402990 <strcoll@plt>
  406f70:	ldr	w4, [x1, #152]
  406f74:	mov	x2, x0
  406f78:	ldr	w3, [x0, #152]
  406f7c:	cmp	w4, #0x9
  406f80:	cset	w0, eq  // eq = none
  406f84:	cmp	w4, #0x3
  406f88:	csinc	w0, w0, wzr, ne  // ne = any
  406f8c:	cmp	w3, #0x3
  406f90:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  406f94:	b.eq	406fb4 <__fxstatat@plt+0x4564>  // b.none
  406f98:	ldr	w3, [x2, #156]
  406f9c:	and	w3, w3, #0xf000
  406fa0:	cbz	w0, 406fd0 <__fxstatat@plt+0x4580>
  406fa4:	cmp	w3, #0x4, lsl #12
  406fa8:	b.eq	406fe8 <__fxstatat@plt+0x4598>  // b.none
  406fac:	mov	w0, #0x1                   	// #1
  406fb0:	ret
  406fb4:	cbnz	w0, 406fe8 <__fxstatat@plt+0x4598>
  406fb8:	ldr	w0, [x1, #156]
  406fbc:	and	w0, w0, #0xf000
  406fc0:	cmp	w0, #0x4, lsl #12
  406fc4:	b.eq	406fe8 <__fxstatat@plt+0x4598>  // b.none
  406fc8:	mov	w0, #0xffffffff            	// #-1
  406fcc:	ret
  406fd0:	ldr	w0, [x1, #156]
  406fd4:	and	w0, w0, #0xf000
  406fd8:	cmp	w0, #0x4, lsl #12
  406fdc:	b.eq	406fa4 <__fxstatat@plt+0x4554>  // b.none
  406fe0:	cmp	w3, #0x4, lsl #12
  406fe4:	b.eq	406fc8 <__fxstatat@plt+0x4578>  // b.none
  406fe8:	ldr	x3, [x1, #96]
  406fec:	ldr	x0, [x2, #96]
  406ff0:	cmp	x3, x0
  406ff4:	b.lt	406fc8 <__fxstatat@plt+0x4578>  // b.tstop
  406ff8:	b.gt	406fac <__fxstatat@plt+0x455c>
  406ffc:	ldr	x0, [x1, #104]
  407000:	ldr	x3, [x2, #104]
  407004:	subs	w0, w0, w3
  407008:	b.ne	406fcc <__fxstatat@plt+0x457c>  // b.any
  40700c:	stp	x29, x30, [sp, #-32]!
  407010:	mov	x29, sp
  407014:	stp	x19, x20, [sp, #16]
  407018:	ldr	x20, [x2]
  40701c:	ldr	x19, [x1]
  407020:	bl	4029e0 <__errno_location@plt>
  407024:	mov	x2, x0
  407028:	mov	x0, x20
  40702c:	mov	x1, x19
  407030:	ldp	x19, x20, [sp, #16]
  407034:	str	wzr, [x2]
  407038:	ldp	x29, x30, [sp], #32
  40703c:	b	402990 <strcoll@plt>
  407040:	ldr	w4, [x1, #152]
  407044:	mov	x2, x0
  407048:	ldr	w3, [x0, #152]
  40704c:	cmp	w4, #0x9
  407050:	cset	w0, eq  // eq = none
  407054:	cmp	w4, #0x3
  407058:	csinc	w0, w0, wzr, ne  // ne = any
  40705c:	cmp	w3, #0x3
  407060:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  407064:	b.eq	407084 <__fxstatat@plt+0x4634>  // b.none
  407068:	ldr	w3, [x2, #156]
  40706c:	and	w3, w3, #0xf000
  407070:	cbz	w0, 4070a0 <__fxstatat@plt+0x4650>
  407074:	cmp	w3, #0x4, lsl #12
  407078:	b.eq	4070b8 <__fxstatat@plt+0x4668>  // b.none
  40707c:	mov	w0, #0x1                   	// #1
  407080:	ret
  407084:	cbnz	w0, 4070b8 <__fxstatat@plt+0x4668>
  407088:	ldr	w0, [x1, #156]
  40708c:	and	w0, w0, #0xf000
  407090:	cmp	w0, #0x4, lsl #12
  407094:	b.eq	4070b8 <__fxstatat@plt+0x4668>  // b.none
  407098:	mov	w0, #0xffffffff            	// #-1
  40709c:	ret
  4070a0:	ldr	w0, [x1, #156]
  4070a4:	and	w0, w0, #0xf000
  4070a8:	cmp	w0, #0x4, lsl #12
  4070ac:	b.eq	407074 <__fxstatat@plt+0x4624>  // b.none
  4070b0:	cmp	w3, #0x4, lsl #12
  4070b4:	b.eq	407098 <__fxstatat@plt+0x4648>  // b.none
  4070b8:	ldr	x0, [x1, #112]
  4070bc:	ldr	x3, [x2, #112]
  4070c0:	cmp	x3, x0
  4070c4:	b.lt	407098 <__fxstatat@plt+0x4648>  // b.tstop
  4070c8:	b.gt	40707c <__fxstatat@plt+0x462c>
  4070cc:	ldr	x3, [x1, #120]
  4070d0:	ldr	x0, [x2, #120]
  4070d4:	subs	w0, w0, w3
  4070d8:	b.ne	40709c <__fxstatat@plt+0x464c>  // b.any
  4070dc:	stp	x29, x30, [sp, #-32]!
  4070e0:	mov	x29, sp
  4070e4:	stp	x19, x20, [sp, #16]
  4070e8:	ldr	x20, [x1]
  4070ec:	ldr	x19, [x2]
  4070f0:	bl	4029e0 <__errno_location@plt>
  4070f4:	mov	x2, x0
  4070f8:	mov	x0, x20
  4070fc:	mov	x1, x19
  407100:	ldp	x19, x20, [sp, #16]
  407104:	str	wzr, [x2]
  407108:	ldp	x29, x30, [sp], #32
  40710c:	b	402990 <strcoll@plt>
  407110:	ldr	w4, [x1, #152]
  407114:	mov	x2, x0
  407118:	ldr	w3, [x0, #152]
  40711c:	cmp	w4, #0x9
  407120:	cset	w0, eq  // eq = none
  407124:	cmp	w4, #0x3
  407128:	csinc	w0, w0, wzr, ne  // ne = any
  40712c:	cmp	w3, #0x3
  407130:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  407134:	b.eq	407154 <__fxstatat@plt+0x4704>  // b.none
  407138:	ldr	w3, [x2, #156]
  40713c:	and	w3, w3, #0xf000
  407140:	cbz	w0, 407170 <__fxstatat@plt+0x4720>
  407144:	cmp	w3, #0x4, lsl #12
  407148:	b.eq	407188 <__fxstatat@plt+0x4738>  // b.none
  40714c:	mov	w0, #0x1                   	// #1
  407150:	ret
  407154:	cbnz	w0, 407188 <__fxstatat@plt+0x4738>
  407158:	ldr	w0, [x1, #156]
  40715c:	and	w0, w0, #0xf000
  407160:	cmp	w0, #0x4, lsl #12
  407164:	b.eq	407188 <__fxstatat@plt+0x4738>  // b.none
  407168:	mov	w0, #0xffffffff            	// #-1
  40716c:	ret
  407170:	ldr	w0, [x1, #156]
  407174:	and	w0, w0, #0xf000
  407178:	cmp	w0, #0x4, lsl #12
  40717c:	b.eq	407144 <__fxstatat@plt+0x46f4>  // b.none
  407180:	cmp	w3, #0x4, lsl #12
  407184:	b.eq	407168 <__fxstatat@plt+0x4718>  // b.none
  407188:	ldr	x0, [x1, #128]
  40718c:	ldr	x3, [x2, #128]
  407190:	cmp	x3, x0
  407194:	b.lt	407168 <__fxstatat@plt+0x4718>  // b.tstop
  407198:	b.gt	40714c <__fxstatat@plt+0x46fc>
  40719c:	ldr	x3, [x1, #136]
  4071a0:	ldr	x0, [x2, #136]
  4071a4:	subs	w0, w0, w3
  4071a8:	b.ne	40716c <__fxstatat@plt+0x471c>  // b.any
  4071ac:	stp	x29, x30, [sp, #-32]!
  4071b0:	mov	x29, sp
  4071b4:	stp	x19, x20, [sp, #16]
  4071b8:	ldr	x20, [x1]
  4071bc:	ldr	x19, [x2]
  4071c0:	bl	4029e0 <__errno_location@plt>
  4071c4:	mov	x2, x0
  4071c8:	mov	x0, x20
  4071cc:	mov	x1, x19
  4071d0:	ldp	x19, x20, [sp, #16]
  4071d4:	str	wzr, [x2]
  4071d8:	ldp	x29, x30, [sp], #32
  4071dc:	b	402990 <strcoll@plt>
  4071e0:	stp	x29, x30, [sp, #-48]!
  4071e4:	mov	x29, sp
  4071e8:	ldr	w3, [x1, #152]
  4071ec:	ldr	w2, [x0, #152]
  4071f0:	cmp	w3, #0x9
  4071f4:	stp	x19, x20, [sp, #16]
  4071f8:	mov	x19, x0
  4071fc:	cset	w0, eq  // eq = none
  407200:	cmp	w3, #0x3
  407204:	csinc	w0, w0, wzr, ne  // ne = any
  407208:	cmp	w2, #0x3
  40720c:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  407210:	b.eq	407238 <__fxstatat@plt+0x47e8>  // b.none
  407214:	ldr	w2, [x19, #156]
  407218:	and	w2, w2, #0xf000
  40721c:	cbz	w0, 40725c <__fxstatat@plt+0x480c>
  407220:	cmp	w2, #0x4, lsl #12
  407224:	b.eq	407274 <__fxstatat@plt+0x4824>  // b.none
  407228:	mov	w0, #0x1                   	// #1
  40722c:	ldp	x19, x20, [sp, #16]
  407230:	ldp	x29, x30, [sp], #48
  407234:	ret
  407238:	cbnz	w0, 407274 <__fxstatat@plt+0x4824>
  40723c:	ldr	w0, [x1, #156]
  407240:	and	w0, w0, #0xf000
  407244:	cmp	w0, #0x4, lsl #12
  407248:	b.eq	407274 <__fxstatat@plt+0x4824>  // b.none
  40724c:	mov	w0, #0xffffffff            	// #-1
  407250:	ldp	x19, x20, [sp, #16]
  407254:	ldp	x29, x30, [sp], #48
  407258:	ret
  40725c:	ldr	w0, [x1, #156]
  407260:	and	w0, w0, #0xf000
  407264:	cmp	w0, #0x4, lsl #12
  407268:	b.eq	407220 <__fxstatat@plt+0x47d0>  // b.none
  40726c:	cmp	w2, #0x4, lsl #12
  407270:	b.eq	40724c <__fxstatat@plt+0x47fc>  // b.none
  407274:	ldr	x20, [x1]
  407278:	mov	w1, #0x2e                  	// #46
  40727c:	str	x21, [sp, #32]
  407280:	mov	x0, x20
  407284:	bl	402720 <strrchr@plt>
  407288:	ldr	x21, [x19]
  40728c:	mov	w1, #0x2e                  	// #46
  407290:	mov	x19, x0
  407294:	mov	x0, x21
  407298:	bl	402720 <strrchr@plt>
  40729c:	mov	x1, x0
  4072a0:	cbz	x19, 4072d0 <__fxstatat@plt+0x4880>
  4072a4:	cmp	x0, #0x0
  4072a8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  4072ac:	add	x0, x0, #0x58
  4072b0:	csel	x1, x0, x1, eq  // eq = none
  4072b4:	mov	x0, x19
  4072b8:	bl	402800 <strcmp@plt>
  4072bc:	cbz	w0, 4072dc <__fxstatat@plt+0x488c>
  4072c0:	ldp	x19, x20, [sp, #16]
  4072c4:	ldr	x21, [sp, #32]
  4072c8:	ldp	x29, x30, [sp], #48
  4072cc:	ret
  4072d0:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x2f80>
  4072d4:	add	x19, x19, #0x58
  4072d8:	cbnz	x0, 4072b4 <__fxstatat@plt+0x4864>
  4072dc:	mov	x1, x21
  4072e0:	mov	x0, x20
  4072e4:	ldp	x19, x20, [sp, #16]
  4072e8:	ldr	x21, [sp, #32]
  4072ec:	ldp	x29, x30, [sp], #48
  4072f0:	b	402800 <strcmp@plt>
  4072f4:	nop
  4072f8:	stp	x29, x30, [sp, #-48]!
  4072fc:	mov	x29, sp
  407300:	ldr	w3, [x1, #152]
  407304:	ldr	w2, [x0, #152]
  407308:	cmp	w3, #0x9
  40730c:	stp	x19, x20, [sp, #16]
  407310:	mov	x19, x1
  407314:	cset	w1, eq  // eq = none
  407318:	cmp	w3, #0x3
  40731c:	csinc	w1, w1, wzr, ne  // ne = any
  407320:	cmp	w2, #0x3
  407324:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  407328:	b.eq	407350 <__fxstatat@plt+0x4900>  // b.none
  40732c:	ldr	w2, [x0, #156]
  407330:	and	w2, w2, #0xf000
  407334:	cbz	w1, 407374 <__fxstatat@plt+0x4924>
  407338:	cmp	w2, #0x4, lsl #12
  40733c:	b.eq	40738c <__fxstatat@plt+0x493c>  // b.none
  407340:	mov	w0, #0x1                   	// #1
  407344:	ldp	x19, x20, [sp, #16]
  407348:	ldp	x29, x30, [sp], #48
  40734c:	ret
  407350:	cbnz	w1, 40738c <__fxstatat@plt+0x493c>
  407354:	ldr	w1, [x19, #156]
  407358:	and	w1, w1, #0xf000
  40735c:	cmp	w1, #0x4, lsl #12
  407360:	b.eq	40738c <__fxstatat@plt+0x493c>  // b.none
  407364:	mov	w0, #0xffffffff            	// #-1
  407368:	ldp	x19, x20, [sp, #16]
  40736c:	ldp	x29, x30, [sp], #48
  407370:	ret
  407374:	ldr	w1, [x19, #156]
  407378:	and	w1, w1, #0xf000
  40737c:	cmp	w1, #0x4, lsl #12
  407380:	b.eq	407338 <__fxstatat@plt+0x48e8>  // b.none
  407384:	cmp	w2, #0x4, lsl #12
  407388:	b.eq	407364 <__fxstatat@plt+0x4914>  // b.none
  40738c:	ldr	x20, [x0]
  407390:	mov	w1, #0x2e                  	// #46
  407394:	str	x21, [sp, #32]
  407398:	mov	x0, x20
  40739c:	bl	402720 <strrchr@plt>
  4073a0:	ldr	x21, [x19]
  4073a4:	mov	w1, #0x2e                  	// #46
  4073a8:	mov	x19, x0
  4073ac:	mov	x0, x21
  4073b0:	bl	402720 <strrchr@plt>
  4073b4:	mov	x1, x0
  4073b8:	cbz	x19, 4073e8 <__fxstatat@plt+0x4998>
  4073bc:	cmp	x0, #0x0
  4073c0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  4073c4:	add	x0, x0, #0x58
  4073c8:	csel	x1, x0, x1, eq  // eq = none
  4073cc:	mov	x0, x19
  4073d0:	bl	402800 <strcmp@plt>
  4073d4:	cbz	w0, 4073f4 <__fxstatat@plt+0x49a4>
  4073d8:	ldp	x19, x20, [sp, #16]
  4073dc:	ldr	x21, [sp, #32]
  4073e0:	ldp	x29, x30, [sp], #48
  4073e4:	ret
  4073e8:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x2f80>
  4073ec:	add	x19, x19, #0x58
  4073f0:	cbnz	x0, 4073cc <__fxstatat@plt+0x497c>
  4073f4:	mov	x1, x21
  4073f8:	mov	x0, x20
  4073fc:	ldp	x19, x20, [sp, #16]
  407400:	ldr	x21, [sp, #32]
  407404:	ldp	x29, x30, [sp], #48
  407408:	b	402800 <strcmp@plt>
  40740c:	nop
  407410:	stp	x29, x30, [sp, #-48]!
  407414:	mov	x29, sp
  407418:	ldr	w3, [x1, #152]
  40741c:	ldr	w2, [x0, #152]
  407420:	cmp	w3, #0x9
  407424:	stp	x19, x20, [sp, #16]
  407428:	mov	x19, x0
  40742c:	cset	w0, eq  // eq = none
  407430:	cmp	w3, #0x3
  407434:	csinc	w0, w0, wzr, ne  // ne = any
  407438:	cmp	w2, #0x3
  40743c:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  407440:	b.eq	407468 <__fxstatat@plt+0x4a18>  // b.none
  407444:	ldr	w2, [x19, #156]
  407448:	and	w2, w2, #0xf000
  40744c:	cbz	w0, 40748c <__fxstatat@plt+0x4a3c>
  407450:	cmp	w2, #0x4, lsl #12
  407454:	b.eq	4074a4 <__fxstatat@plt+0x4a54>  // b.none
  407458:	mov	w0, #0x1                   	// #1
  40745c:	ldp	x19, x20, [sp, #16]
  407460:	ldp	x29, x30, [sp], #48
  407464:	ret
  407468:	cbnz	w0, 4074a4 <__fxstatat@plt+0x4a54>
  40746c:	ldr	w0, [x1, #156]
  407470:	and	w0, w0, #0xf000
  407474:	cmp	w0, #0x4, lsl #12
  407478:	b.eq	4074a4 <__fxstatat@plt+0x4a54>  // b.none
  40747c:	mov	w0, #0xffffffff            	// #-1
  407480:	ldp	x19, x20, [sp, #16]
  407484:	ldp	x29, x30, [sp], #48
  407488:	ret
  40748c:	ldr	w0, [x1, #156]
  407490:	and	w0, w0, #0xf000
  407494:	cmp	w0, #0x4, lsl #12
  407498:	b.eq	407450 <__fxstatat@plt+0x4a00>  // b.none
  40749c:	cmp	w2, #0x4, lsl #12
  4074a0:	b.eq	40747c <__fxstatat@plt+0x4a2c>  // b.none
  4074a4:	stp	x21, x22, [sp, #32]
  4074a8:	ldr	x21, [x1]
  4074ac:	mov	w1, #0x2e                  	// #46
  4074b0:	mov	x0, x21
  4074b4:	bl	402720 <strrchr@plt>
  4074b8:	ldr	x22, [x19]
  4074bc:	mov	w1, #0x2e                  	// #46
  4074c0:	mov	x19, x0
  4074c4:	mov	x0, x22
  4074c8:	bl	402720 <strrchr@plt>
  4074cc:	cmp	x19, #0x0
  4074d0:	mov	x20, x0
  4074d4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  4074d8:	add	x0, x0, #0x58
  4074dc:	csel	x19, x0, x19, eq  // eq = none
  4074e0:	cmp	x20, #0x0
  4074e4:	csel	x20, x0, x20, eq  // eq = none
  4074e8:	bl	4029e0 <__errno_location@plt>
  4074ec:	mov	x2, x0
  4074f0:	mov	x1, x20
  4074f4:	mov	x0, x19
  4074f8:	str	wzr, [x2]
  4074fc:	bl	402990 <strcoll@plt>
  407500:	cbnz	w0, 40751c <__fxstatat@plt+0x4acc>
  407504:	mov	x1, x22
  407508:	mov	x0, x21
  40750c:	ldp	x19, x20, [sp, #16]
  407510:	ldp	x21, x22, [sp, #32]
  407514:	ldp	x29, x30, [sp], #48
  407518:	b	402990 <strcoll@plt>
  40751c:	ldp	x19, x20, [sp, #16]
  407520:	ldp	x21, x22, [sp, #32]
  407524:	ldp	x29, x30, [sp], #48
  407528:	ret
  40752c:	nop
  407530:	stp	x29, x30, [sp, #-32]!
  407534:	ands	w0, w0, #0xff
  407538:	mov	x29, sp
  40753c:	str	x19, [sp, #16]
  407540:	b.eq	407574 <__fxstatat@plt+0x4b24>  // b.none
  407544:	and	w3, w1, #0xf000
  407548:	cmp	w3, #0x8, lsl #12
  40754c:	b.ne	40760c <__fxstatat@plt+0x4bbc>  // b.any
  407550:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407554:	add	x19, x19, #0x5e0
  407558:	mov	w0, #0x0                   	// #0
  40755c:	ldr	w2, [x19, #3680]
  407560:	cmp	w2, #0x3
  407564:	b.eq	407650 <__fxstatat@plt+0x4c00>  // b.none
  407568:	ldr	x19, [sp, #16]
  40756c:	ldp	x29, x30, [sp], #32
  407570:	ret
  407574:	cmp	w2, #0x5
  407578:	b.eq	407568 <__fxstatat@plt+0x4b18>  // b.none
  40757c:	cmp	w2, #0x3
  407580:	cset	w3, eq  // eq = none
  407584:	cmp	w2, #0x9
  407588:	csinc	w3, w3, wzr, ne  // ne = any
  40758c:	cbnz	w3, 407618 <__fxstatat@plt+0x4bc8>
  407590:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407594:	add	x19, x19, #0x5e0
  407598:	ldr	w3, [x19, #3680]
  40759c:	cmp	w3, #0x1
  4075a0:	b.eq	407668 <__fxstatat@plt+0x4c18>  // b.none
  4075a4:	cbz	w0, 40762c <__fxstatat@plt+0x4bdc>
  4075a8:	and	w1, w1, #0xf000
  4075ac:	cmp	w1, #0xa, lsl #12
  4075b0:	b.eq	407678 <__fxstatat@plt+0x4c28>  // b.none
  4075b4:	cmp	w1, #0xc, lsl #12
  4075b8:	cset	w0, eq  // eq = none
  4075bc:	cmp	w1, #0x1, lsl #12
  4075c0:	b.eq	407644 <__fxstatat@plt+0x4bf4>  // b.none
  4075c4:	mov	w1, #0x3d                  	// #61
  4075c8:	mov	w4, w1
  4075cc:	cbz	w0, 407568 <__fxstatat@plt+0x4b18>
  4075d0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4075d4:	ldr	x0, [x0, #1472]
  4075d8:	ldp	x2, x3, [x0, #40]
  4075dc:	cmp	x2, x3
  4075e0:	b.cs	407684 <__fxstatat@plt+0x4c34>  // b.hs, b.nlast
  4075e4:	add	x1, x2, #0x1
  4075e8:	str	x1, [x0, #40]
  4075ec:	strb	w4, [x2]
  4075f0:	ldr	x1, [x19, #3488]
  4075f4:	mov	w0, #0x1                   	// #1
  4075f8:	add	x1, x1, #0x1
  4075fc:	str	x1, [x19, #3488]
  407600:	ldr	x19, [sp, #16]
  407604:	ldp	x29, x30, [sp], #32
  407608:	ret
  40760c:	cmp	w3, #0x4, lsl #12
  407610:	cset	w3, eq  // eq = none
  407614:	cbz	w3, 407590 <__fxstatat@plt+0x4b40>
  407618:	mov	w1, #0x2f                  	// #47
  40761c:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407620:	mov	w4, w1
  407624:	add	x19, x19, #0x5e0
  407628:	b	4075d0 <__fxstatat@plt+0x4b80>
  40762c:	cmp	w2, #0x6
  407630:	b.eq	407678 <__fxstatat@plt+0x4c28>  // b.none
  407634:	cmp	w2, #0x7
  407638:	cset	w0, eq  // eq = none
  40763c:	cmp	w2, #0x1
  407640:	b.ne	4075c4 <__fxstatat@plt+0x4b74>  // b.any
  407644:	mov	w1, #0x7c                  	// #124
  407648:	mov	w4, w1
  40764c:	b	4075d0 <__fxstatat@plt+0x4b80>
  407650:	mov	w2, #0x49                  	// #73
  407654:	tst	w1, w2
  407658:	b.eq	407568 <__fxstatat@plt+0x4b18>  // b.none
  40765c:	mov	w1, #0x2a                  	// #42
  407660:	mov	w4, w1
  407664:	b	4075d0 <__fxstatat@plt+0x4b80>
  407668:	mov	w0, #0x0                   	// #0
  40766c:	ldr	x19, [sp, #16]
  407670:	ldp	x29, x30, [sp], #32
  407674:	ret
  407678:	mov	w1, #0x40                  	// #64
  40767c:	mov	w4, w1
  407680:	b	4075d0 <__fxstatat@plt+0x4b80>
  407684:	bl	402780 <__overflow@plt>
  407688:	b	4075f0 <__fxstatat@plt+0x4ba0>
  40768c:	nop
  407690:	stp	x29, x30, [sp, #-80]!
  407694:	mov	x29, sp
  407698:	stp	x19, x20, [sp, #16]
  40769c:	stp	x21, x22, [sp, #32]
  4076a0:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4076a4:	add	x21, x21, #0x5e0
  4076a8:	stp	x23, x24, [sp, #48]
  4076ac:	and	w24, w1, #0xff
  4076b0:	mov	x23, x0
  4076b4:	cbz	x0, 4076e8 <__fxstatat@plt+0x4c98>
  4076b8:	ldr	x0, [x21, #3688]
  4076bc:	cbz	x0, 4076e8 <__fxstatat@plt+0x4c98>
  4076c0:	mov	x0, #0x20                  	// #32
  4076c4:	bl	415c40 <__fxstatat@plt+0x131f0>
  4076c8:	mov	x19, x0
  4076cc:	mov	x0, x23
  4076d0:	bl	415dc8 <__fxstatat@plt+0x13378>
  4076d4:	ldr	x1, [x21, #3696]
  4076d8:	stp	xzr, x0, [x19]
  4076dc:	strb	wzr, [x19, #16]
  4076e0:	str	x1, [x19, #24]
  4076e4:	str	x19, [x21, #3696]
  4076e8:	ldr	x0, [x21, #3104]
  4076ec:	sub	x19, x0, #0x1
  4076f0:	cbz	x0, 4078e4 <__fxstatat@plt+0x4e94>
  4076f4:	stp	x25, x26, [sp, #64]
  4076f8:	b	407774 <__fxstatat@plt+0x4d24>
  4076fc:	mov	x0, x22
  407700:	bl	40c230 <__fxstatat@plt+0x97e0>
  407704:	ldrb	w1, [x0]
  407708:	cmp	w1, #0x2e
  40770c:	b.eq	4078ac <__fxstatat@plt+0x4e5c>  // b.none
  407710:	ldrb	w0, [x22]
  407714:	cmp	w0, #0x2f
  407718:	b.ne	4077c0 <__fxstatat@plt+0x4d70>  // b.any
  40771c:	ldr	x26, [x20, #8]
  407720:	mov	x0, #0x20                  	// #32
  407724:	bl	415c40 <__fxstatat@plt+0x131f0>
  407728:	mov	x25, x0
  40772c:	cbz	x26, 4078cc <__fxstatat@plt+0x4e7c>
  407730:	mov	x0, x26
  407734:	bl	415dc8 <__fxstatat@plt+0x13378>
  407738:	mov	x26, x0
  40773c:	str	x26, [x25, #8]
  407740:	cbnz	x22, 4077b0 <__fxstatat@plt+0x4d60>
  407744:	ldr	x0, [x21, #3696]
  407748:	str	x22, [x25]
  40774c:	strb	w24, [x25, #16]
  407750:	str	x0, [x25, #24]
  407754:	ldr	w0, [x20, #152]
  407758:	str	x25, [x21, #3696]
  40775c:	cmp	w0, #0x9
  407760:	b.eq	407834 <__fxstatat@plt+0x4de4>  // b.none
  407764:	nop
  407768:	sub	x19, x19, #0x1
  40776c:	cmn	x19, #0x1
  407770:	b.eq	407858 <__fxstatat@plt+0x4e08>  // b.none
  407774:	ldr	x1, [x21, #3136]
  407778:	ldr	x20, [x1, x19, lsl #3]
  40777c:	ldr	w1, [x20, #152]
  407780:	cmp	w1, #0x3
  407784:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  407788:	b.ne	407768 <__fxstatat@plt+0x4d18>  // b.any
  40778c:	ldr	x22, [x20]
  407790:	cbnz	x23, 4076fc <__fxstatat@plt+0x4cac>
  407794:	ldr	x26, [x20, #8]
  407798:	mov	x0, #0x20                  	// #32
  40779c:	bl	415c40 <__fxstatat@plt+0x131f0>
  4077a0:	mov	x25, x0
  4077a4:	cbnz	x26, 407730 <__fxstatat@plt+0x4ce0>
  4077a8:	str	x26, [x25, #8]
  4077ac:	cbz	x22, 407744 <__fxstatat@plt+0x4cf4>
  4077b0:	mov	x0, x22
  4077b4:	bl	415dc8 <__fxstatat@plt+0x13378>
  4077b8:	mov	x22, x0
  4077bc:	b	407744 <__fxstatat@plt+0x4cf4>
  4077c0:	mov	x1, x22
  4077c4:	mov	x2, #0x0                   	// #0
  4077c8:	mov	x0, x23
  4077cc:	bl	40c750 <__fxstatat@plt+0x9d00>
  4077d0:	ldr	x26, [x20, #8]
  4077d4:	mov	x25, x0
  4077d8:	mov	x0, #0x20                  	// #32
  4077dc:	bl	415c40 <__fxstatat@plt+0x131f0>
  4077e0:	mov	x22, x0
  4077e4:	cbz	x26, 4077f4 <__fxstatat@plt+0x4da4>
  4077e8:	mov	x0, x26
  4077ec:	bl	415dc8 <__fxstatat@plt+0x13378>
  4077f0:	mov	x26, x0
  4077f4:	str	x26, [x22, #8]
  4077f8:	mov	x1, #0x0                   	// #0
  4077fc:	cbz	x25, 40780c <__fxstatat@plt+0x4dbc>
  407800:	mov	x0, x25
  407804:	bl	415dc8 <__fxstatat@plt+0x13378>
  407808:	mov	x1, x0
  40780c:	ldr	x2, [x21, #3696]
  407810:	str	x1, [x22]
  407814:	strb	w24, [x22, #16]
  407818:	mov	x0, x25
  40781c:	str	x2, [x22, #24]
  407820:	str	x22, [x21, #3696]
  407824:	bl	402840 <free@plt>
  407828:	ldr	w0, [x20, #152]
  40782c:	cmp	w0, #0x9
  407830:	b.ne	407768 <__fxstatat@plt+0x4d18>  // b.any
  407834:	ldr	x0, [x20]
  407838:	sub	x19, x19, #0x1
  40783c:	bl	402840 <free@plt>
  407840:	ldr	x0, [x20, #8]
  407844:	bl	402840 <free@plt>
  407848:	ldr	x0, [x20, #16]
  40784c:	bl	402840 <free@plt>
  407850:	cmn	x19, #0x1
  407854:	b.ne	407774 <__fxstatat@plt+0x4d24>  // b.any
  407858:	ldr	x4, [x21, #3104]
  40785c:	cbz	x4, 4078e0 <__fxstatat@plt+0x4e90>
  407860:	ldr	x3, [x21, #3136]
  407864:	mov	x1, #0x0                   	// #0
  407868:	mov	x0, #0x0                   	// #0
  40786c:	nop
  407870:	ldr	x2, [x3, x0, lsl #3]
  407874:	str	x2, [x3, x1, lsl #3]
  407878:	add	x0, x0, #0x1
  40787c:	ldr	w2, [x2, #152]
  407880:	cmp	w2, #0x9
  407884:	cinc	x1, x1, ne  // ne = any
  407888:	cmp	x0, x4
  40788c:	b.ne	407870 <__fxstatat@plt+0x4e20>  // b.any
  407890:	str	x1, [x21, #3104]
  407894:	ldp	x19, x20, [sp, #16]
  407898:	ldp	x21, x22, [sp, #32]
  40789c:	ldp	x23, x24, [sp, #48]
  4078a0:	ldp	x25, x26, [sp, #64]
  4078a4:	ldp	x29, x30, [sp], #80
  4078a8:	ret
  4078ac:	ldrb	w1, [x0, #1]
  4078b0:	cmp	w1, #0x2e
  4078b4:	cinc	x0, x0, eq  // eq = none
  4078b8:	ldrb	w0, [x0, #1]
  4078bc:	cmp	w0, #0x2f
  4078c0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4078c4:	b.eq	407768 <__fxstatat@plt+0x4d18>  // b.none
  4078c8:	b	407710 <__fxstatat@plt+0x4cc0>
  4078cc:	str	xzr, [x25, #8]
  4078d0:	mov	x0, x22
  4078d4:	bl	415dc8 <__fxstatat@plt+0x13378>
  4078d8:	mov	x22, x0
  4078dc:	b	407744 <__fxstatat@plt+0x4cf4>
  4078e0:	ldp	x25, x26, [sp, #64]
  4078e4:	mov	x1, #0x0                   	// #0
  4078e8:	str	x1, [x21, #3104]
  4078ec:	ldp	x19, x20, [sp, #16]
  4078f0:	ldp	x21, x22, [sp, #32]
  4078f4:	ldp	x23, x24, [sp, #48]
  4078f8:	ldp	x29, x30, [sp], #80
  4078fc:	ret
  407900:	mov	x12, #0x2090                	// #8336
  407904:	sub	sp, sp, x12
  407908:	stp	x29, x30, [sp]
  40790c:	mov	x29, sp
  407910:	stp	x21, x22, [sp, #32]
  407914:	mov	x21, x6
  407918:	add	x6, sp, #0x90
  40791c:	stp	x23, x24, [sp, #48]
  407920:	mov	x23, x0
  407924:	mov	w0, w2
  407928:	mov	x24, x3
  40792c:	mov	x2, x1
  407930:	mov	w3, w0
  407934:	mov	x1, x23
  407938:	add	x0, sp, #0x88
  40793c:	stp	x19, x20, [sp, #16]
  407940:	mov	x20, x5
  407944:	add	x5, sp, #0x87
  407948:	stp	x25, x26, [sp, #64]
  40794c:	and	w25, w4, #0xff
  407950:	mov	x4, #0x0                   	// #0
  407954:	stp	x27, x28, [sp, #80]
  407958:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40795c:	str	x6, [sp, #136]
  407960:	bl	405360 <__fxstatat@plt+0x2910>
  407964:	ldrb	w1, [sp, #135]
  407968:	mov	x22, x0
  40796c:	add	x19, x19, #0x5e0
  407970:	tst	w25, w1
  407974:	b.ne	407ce0 <__fxstatat@plt+0x5290>  // b.any
  407978:	cbz	x24, 4079dc <__fxstatat@plt+0x4f8c>
  40797c:	adrp	x25, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407980:	add	x25, x25, #0x370
  407984:	ldr	x0, [x25, #64]
  407988:	cbz	x0, 4079b8 <__fxstatat@plt+0x4f68>
  40798c:	cmp	x0, #0x1
  407990:	ldr	x1, [x25, #72]
  407994:	b.eq	407d9c <__fxstatat@plt+0x534c>  // b.none
  407998:	cmp	x0, #0x2
  40799c:	b.eq	407dac <__fxstatat@plt+0x535c>  // b.none
  4079a0:	add	x1, x25, #0x8
  4079a4:	mov	x0, x25
  4079a8:	bl	405170 <__fxstatat@plt+0x2720>
  4079ac:	add	x1, x25, #0x18
  4079b0:	add	x0, x25, #0x10
  4079b4:	bl	405170 <__fxstatat@plt+0x2720>
  4079b8:	add	x1, x25, #0x8
  4079bc:	mov	x0, x25
  4079c0:	bl	405170 <__fxstatat@plt+0x2720>
  4079c4:	add	x1, x24, #0x8
  4079c8:	mov	x0, x24
  4079cc:	bl	405170 <__fxstatat@plt+0x2720>
  4079d0:	add	x1, x25, #0x18
  4079d4:	add	x0, x25, #0x10
  4079d8:	bl	405170 <__fxstatat@plt+0x2720>
  4079dc:	cbz	x21, 407d1c <__fxstatat@plt+0x52cc>
  4079e0:	ldrb	w25, [x19, #3633]
  4079e4:	cbnz	w25, 407c68 <__fxstatat@plt+0x5218>
  4079e8:	stp	xzr, xzr, [sp, #112]
  4079ec:	ldr	x26, [x19, #3704]
  4079f0:	mov	x0, x26
  4079f4:	bl	402430 <strlen@plt>
  4079f8:	add	x0, x0, #0x1
  4079fc:	lsl	x1, x0, #1
  407a00:	lsr	x2, x0, #63
  407a04:	adds	x0, x1, x0
  407a08:	cinc	x1, x2, cs  // cs = hs, nlast
  407a0c:	cmp	x1, #0x0
  407a10:	cset	x1, ne  // ne = any
  407a14:	tbnz	x0, #63, 407df4 <__fxstatat@plt+0x53a4>
  407a18:	cbnz	x1, 407df4 <__fxstatat@plt+0x53a4>
  407a1c:	bl	415c40 <__fxstatat@plt+0x131f0>
  407a20:	mov	x24, x0
  407a24:	ldrb	w4, [x26]
  407a28:	cbz	w4, 407a94 <__fxstatat@plt+0x5044>
  407a2c:	mov	x27, x0
  407a30:	add	x0, x19, #0xe80
  407a34:	str	x0, [sp, #96]
  407a38:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  407a3c:	add	x26, x26, #0x1
  407a40:	add	x28, x3, #0x2f8
  407a44:	ldr	x0, [sp, #96]
  407a48:	ldrb	w0, [x0, w4, sxtw]
  407a4c:	cbz	w0, 407a74 <__fxstatat@plt+0x5024>
  407a50:	mov	x0, x27
  407a54:	strb	w4, [x0], #1
  407a58:	ldrb	w4, [x26]
  407a5c:	cbz	w4, 407a94 <__fxstatat@plt+0x5044>
  407a60:	mov	x27, x0
  407a64:	add	x26, x26, #0x1
  407a68:	ldr	x0, [sp, #96]
  407a6c:	ldrb	w0, [x0, w4, sxtw]
  407a70:	cbnz	w0, 407a50 <__fxstatat@plt+0x5000>
  407a74:	mov	x3, x28
  407a78:	mov	x0, x27
  407a7c:	mov	x2, #0xffffffffffffffff    	// #-1
  407a80:	mov	w1, #0x1                   	// #1
  407a84:	bl	402440 <__sprintf_chk@plt>
  407a88:	ldrb	w4, [x26]
  407a8c:	add	x0, x27, #0x3
  407a90:	cbnz	w4, 407a60 <__fxstatat@plt+0x5010>
  407a94:	strb	wzr, [x0]
  407a98:	mov	x0, x21
  407a9c:	bl	402430 <strlen@plt>
  407aa0:	add	x0, x0, #0x1
  407aa4:	lsl	x1, x0, #1
  407aa8:	lsr	x2, x0, #63
  407aac:	adds	x0, x1, x0
  407ab0:	cinc	x1, x2, cs  // cs = hs, nlast
  407ab4:	cmp	x1, #0x0
  407ab8:	cset	x1, ne  // ne = any
  407abc:	tbnz	x0, #63, 407df4 <__fxstatat@plt+0x53a4>
  407ac0:	cbnz	x1, 407df4 <__fxstatat@plt+0x53a4>
  407ac4:	bl	415c40 <__fxstatat@plt+0x131f0>
  407ac8:	mov	x28, x0
  407acc:	ldrb	w4, [x21]
  407ad0:	cbz	w4, 407d94 <__fxstatat@plt+0x5344>
  407ad4:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  407ad8:	mov	x5, x21
  407adc:	add	x3, x3, #0x2f8
  407ae0:	mov	x27, x0
  407ae4:	add	x7, x19, #0xe80
  407ae8:	add	x5, x5, #0x1
  407aec:	cmp	w4, #0x2f
  407af0:	b.eq	407afc <__fxstatat@plt+0x50ac>  // b.none
  407af4:	ldrb	w0, [x7, w4, sxtw]
  407af8:	cbz	w0, 407c40 <__fxstatat@plt+0x51f0>
  407afc:	strb	w4, [x27], #1
  407b00:	ldrb	w4, [x5]
  407b04:	cbnz	w4, 407ae8 <__fxstatat@plt+0x5098>
  407b08:	strb	wzr, [x27]
  407b0c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  407b10:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2f80>
  407b14:	add	x0, x0, #0x720
  407b18:	ldrb	w2, [x28]
  407b1c:	add	x3, x3, #0x58
  407b20:	mov	x4, x28
  407b24:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  407b28:	cmp	w2, #0x2f
  407b2c:	add	x1, x1, #0x300
  407b30:	csel	x3, x3, x0, eq  // eq = none
  407b34:	mov	x2, x24
  407b38:	ldr	x0, [sp, #120]
  407b3c:	sub	x27, x22, x0
  407b40:	mov	w0, #0x1                   	// #1
  407b44:	bl	402670 <__printf_chk@plt>
  407b48:	mov	x0, x24
  407b4c:	bl	402840 <free@plt>
  407b50:	mov	x0, x28
  407b54:	bl	402840 <free@plt>
  407b58:	cbz	x20, 407d2c <__fxstatat@plt+0x52dc>
  407b5c:	ldrb	w0, [x19, #3968]
  407b60:	cbz	w0, 407b88 <__fxstatat@plt+0x5138>
  407b64:	ldp	x1, x0, [x20, #24]
  407b68:	sub	x0, x0, x1
  407b6c:	cmp	x0, #0x7
  407b70:	b.ls	407d5c <__fxstatat@plt+0x530c>  // b.plast
  407b74:	ldr	x0, [x19, #3488]
  407b78:	str	x0, [x1]
  407b7c:	ldr	x0, [x20, #24]
  407b80:	add	x0, x0, #0x8
  407b84:	str	x0, [x20, #24]
  407b88:	adrp	x24, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407b8c:	mov	x1, #0x1                   	// #1
  407b90:	ldr	x4, [sp, #112]
  407b94:	mov	x2, x27
  407b98:	ldr	x3, [x24, #1472]
  407b9c:	ldr	x0, [sp, #136]
  407ba0:	add	x0, x0, x4
  407ba4:	bl	402410 <fwrite_unlocked@plt>
  407ba8:	ldr	x0, [x19, #3488]
  407bac:	ldrb	w1, [x19, #3968]
  407bb0:	add	x0, x22, x0
  407bb4:	str	x0, [x19, #3488]
  407bb8:	cbz	w1, 407bdc <__fxstatat@plt+0x518c>
  407bbc:	ldp	x2, x1, [x20, #24]
  407bc0:	sub	x1, x1, x2
  407bc4:	cmp	x1, #0x7
  407bc8:	b.ls	407d70 <__fxstatat@plt+0x5320>  // b.plast
  407bcc:	str	x0, [x2]
  407bd0:	ldr	x0, [x20, #24]
  407bd4:	add	x0, x0, #0x8
  407bd8:	str	x0, [x20, #24]
  407bdc:	cbz	x21, 407bfc <__fxstatat@plt+0x51ac>
  407be0:	ldr	x3, [x24, #1472]
  407be4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  407be8:	mov	x2, #0x6                   	// #6
  407bec:	add	x0, x0, #0x318
  407bf0:	mov	x1, #0x1                   	// #1
  407bf4:	bl	402410 <fwrite_unlocked@plt>
  407bf8:	cbnz	w25, 407cb4 <__fxstatat@plt+0x5264>
  407bfc:	ldr	x0, [sp, #136]
  407c00:	add	x1, sp, #0x90
  407c04:	cmp	x0, x23
  407c08:	ccmp	x1, x0, #0x4, ne  // ne = any
  407c0c:	b.eq	407c14 <__fxstatat@plt+0x51c4>  // b.none
  407c10:	bl	402840 <free@plt>
  407c14:	ldrb	w0, [sp, #135]
  407c18:	mov	x12, #0x2090                	// #8336
  407c1c:	ldp	x29, x30, [sp]
  407c20:	add	x0, x0, x22
  407c24:	ldp	x19, x20, [sp, #16]
  407c28:	ldp	x21, x22, [sp, #32]
  407c2c:	ldp	x23, x24, [sp, #48]
  407c30:	ldp	x25, x26, [sp, #64]
  407c34:	ldp	x27, x28, [sp, #80]
  407c38:	add	sp, sp, x12
  407c3c:	ret
  407c40:	mov	x0, x27
  407c44:	mov	x2, #0xffffffffffffffff    	// #-1
  407c48:	mov	w1, #0x1                   	// #1
  407c4c:	stp	x5, x7, [sp, #96]
  407c50:	bl	402440 <__sprintf_chk@plt>
  407c54:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  407c58:	add	x27, x27, #0x3
  407c5c:	add	x3, x0, #0x2f8
  407c60:	ldp	x5, x7, [sp, #96]
  407c64:	b	407b00 <__fxstatat@plt+0x50b0>
  407c68:	ldrb	w25, [x19, #3634]
  407c6c:	cbz	w25, 4079e8 <__fxstatat@plt+0x4f98>
  407c70:	ldrb	w0, [sp, #135]
  407c74:	cbnz	w0, 407d88 <__fxstatat@plt+0x5338>
  407c78:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407c7c:	ldr	x1, [sp, #136]
  407c80:	ldr	x0, [x0, #1472]
  407c84:	ldrb	w1, [x1]
  407c88:	ldp	x2, x3, [x0, #40]
  407c8c:	cmp	x2, x3
  407c90:	b.cs	407ddc <__fxstatat@plt+0x538c>  // b.hs, b.nlast
  407c94:	add	x3, x2, #0x1
  407c98:	str	x3, [x0, #40]
  407c9c:	mov	x0, #0x1                   	// #1
  407ca0:	strb	w1, [x2]
  407ca4:	str	x0, [sp, #112]
  407ca8:	mov	x0, #0x2                   	// #2
  407cac:	str	x0, [sp, #120]
  407cb0:	b	4079ec <__fxstatat@plt+0x4f9c>
  407cb4:	ldr	x0, [x24, #1472]
  407cb8:	ldr	x1, [sp, #136]
  407cbc:	ldp	x2, x3, [x0, #40]
  407cc0:	add	x1, x1, x22
  407cc4:	ldurb	w1, [x1, #-1]
  407cc8:	cmp	x2, x3
  407ccc:	b.cs	407dc8 <__fxstatat@plt+0x5378>  // b.hs, b.nlast
  407cd0:	add	x3, x2, #0x1
  407cd4:	str	x3, [x0, #40]
  407cd8:	strb	w1, [x2]
  407cdc:	b	407bfc <__fxstatat@plt+0x51ac>
  407ce0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407ce4:	ldr	x0, [x0, #1472]
  407ce8:	ldp	x1, x2, [x0, #40]
  407cec:	cmp	x1, x2
  407cf0:	b.cs	407dd0 <__fxstatat@plt+0x5380>  // b.hs, b.nlast
  407cf4:	add	x2, x1, #0x1
  407cf8:	str	x2, [x0, #40]
  407cfc:	mov	w0, #0x20                  	// #32
  407d00:	strb	w0, [x1]
  407d04:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407d08:	add	x19, x19, #0x5e0
  407d0c:	ldr	x0, [x19, #3488]
  407d10:	add	x0, x0, #0x1
  407d14:	str	x0, [x19, #3488]
  407d18:	b	407978 <__fxstatat@plt+0x4f28>
  407d1c:	str	xzr, [sp, #112]
  407d20:	mov	x27, x22
  407d24:	mov	w25, #0x0                   	// #0
  407d28:	cbnz	x20, 407b5c <__fxstatat@plt+0x510c>
  407d2c:	adrp	x24, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407d30:	mov	x2, x27
  407d34:	ldr	x4, [sp, #112]
  407d38:	mov	x1, #0x1                   	// #1
  407d3c:	ldr	x3, [x24, #1472]
  407d40:	ldr	x0, [sp, #136]
  407d44:	add	x0, x0, x4
  407d48:	bl	402410 <fwrite_unlocked@plt>
  407d4c:	ldr	x0, [x19, #3488]
  407d50:	add	x0, x0, x22
  407d54:	str	x0, [x19, #3488]
  407d58:	b	407bdc <__fxstatat@plt+0x518c>
  407d5c:	mov	x1, #0x8                   	// #8
  407d60:	mov	x0, x20
  407d64:	bl	416e48 <_obstack_newchunk@@Base>
  407d68:	ldr	x1, [x20, #24]
  407d6c:	b	407b74 <__fxstatat@plt+0x5124>
  407d70:	mov	x0, x20
  407d74:	mov	x1, #0x8                   	// #8
  407d78:	bl	416e48 <_obstack_newchunk@@Base>
  407d7c:	ldr	x2, [x20, #24]
  407d80:	ldr	x0, [x19, #3488]
  407d84:	b	407bcc <__fxstatat@plt+0x517c>
  407d88:	mov	w25, #0x0                   	// #0
  407d8c:	stp	xzr, xzr, [sp, #112]
  407d90:	b	4079ec <__fxstatat@plt+0x4f9c>
  407d94:	mov	x27, x0
  407d98:	b	407b08 <__fxstatat@plt+0x50b8>
  407d9c:	ldrb	w0, [x1]
  407da0:	cmp	w0, #0x30
  407da4:	b.ne	4079a0 <__fxstatat@plt+0x4f50>  // b.any
  407da8:	b	4079b8 <__fxstatat@plt+0x4f68>
  407dac:	ldrb	w0, [x1]
  407db0:	cmp	w0, #0x30
  407db4:	b.ne	4079a0 <__fxstatat@plt+0x4f50>  // b.any
  407db8:	ldrb	w0, [x1, #1]
  407dbc:	cmp	w0, #0x30
  407dc0:	b.eq	4079b8 <__fxstatat@plt+0x4f68>  // b.none
  407dc4:	b	4079a0 <__fxstatat@plt+0x4f50>
  407dc8:	bl	402780 <__overflow@plt>
  407dcc:	b	407bfc <__fxstatat@plt+0x51ac>
  407dd0:	mov	w1, #0x20                  	// #32
  407dd4:	bl	402780 <__overflow@plt>
  407dd8:	b	407d04 <__fxstatat@plt+0x52b4>
  407ddc:	mov	x2, #0x1                   	// #1
  407de0:	str	x2, [sp, #112]
  407de4:	bl	402780 <__overflow@plt>
  407de8:	mov	x0, #0x2                   	// #2
  407dec:	str	x0, [sp, #120]
  407df0:	b	4079ec <__fxstatat@plt+0x4f9c>
  407df4:	bl	415e08 <__fxstatat@plt+0x133b8>
  407df8:	stp	x29, x30, [sp, #-96]!
  407dfc:	mov	x29, sp
  407e00:	stp	x25, x26, [sp, #64]
  407e04:	adrp	x25, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407e08:	add	x25, x25, #0x5e0
  407e0c:	stp	x19, x20, [sp, #16]
  407e10:	mov	x20, x0
  407e14:	stp	x21, x22, [sp, #32]
  407e18:	mov	x21, x3
  407e1c:	ldrb	w0, [x25, #3969]
  407e20:	stp	x23, x24, [sp, #48]
  407e24:	mov	x23, x2
  407e28:	str	x27, [sp, #80]
  407e2c:	ands	w27, w1, #0xff
  407e30:	b.eq	407f70 <__fxstatat@plt+0x5520>  // b.none
  407e34:	ldr	x24, [x20, #8]
  407e38:	cbnz	w0, 407e84 <__fxstatat@plt+0x5434>
  407e3c:	ldr	w2, [x20, #180]
  407e40:	mov	x5, x23
  407e44:	ldr	x6, [x20, #16]
  407e48:	eor	w4, w27, #0x1
  407e4c:	ldr	x1, [x25, #3672]
  407e50:	mov	x3, #0x0                   	// #0
  407e54:	mov	x0, x24
  407e58:	bl	407900 <__fxstatat@plt+0x4eb0>
  407e5c:	mov	x19, x0
  407e60:	bl	405c40 <__fxstatat@plt+0x31f0>
  407e64:	mov	x0, x19
  407e68:	ldp	x19, x20, [sp, #16]
  407e6c:	ldp	x21, x22, [sp, #32]
  407e70:	ldp	x23, x24, [sp, #48]
  407e74:	ldp	x25, x26, [sp, #64]
  407e78:	ldr	x27, [sp, #80]
  407e7c:	ldp	x29, x30, [sp], #96
  407e80:	ret
  407e84:	ldrb	w0, [x20, #169]
  407e88:	adrp	x26, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407e8c:	ldr	w3, [x20, #156]
  407e90:	add	x26, x26, #0x370
  407e94:	cbnz	w0, 40802c <__fxstatat@plt+0x55dc>
  407e98:	ldr	x0, [x26, #192]
  407e9c:	cbz	x0, 4080a8 <__fxstatat@plt+0x5658>
  407ea0:	cmp	x0, #0x1
  407ea4:	ldr	x1, [x26, #200]
  407ea8:	b.eq	40839c <__fxstatat@plt+0x594c>  // b.none
  407eac:	cmp	x0, #0x2
  407eb0:	mov	x19, #0xc0                  	// #192
  407eb4:	b.eq	40808c <__fxstatat@plt+0x563c>  // b.none
  407eb8:	add	x3, x26, x19
  407ebc:	ldr	x0, [x3, #8]
  407ec0:	cbnz	x0, 407f08 <__fxstatat@plt+0x54b8>
  407ec4:	ldr	x0, [x26, #64]
  407ec8:	cbz	x0, 407e3c <__fxstatat@plt+0x53ec>
  407ecc:	cmp	x0, #0x1
  407ed0:	ldr	x1, [x26, #72]
  407ed4:	b.eq	408274 <__fxstatat@plt+0x5824>  // b.none
  407ed8:	cmp	x0, #0x2
  407edc:	mov	x3, #0x0                   	// #0
  407ee0:	b.ne	407f08 <__fxstatat@plt+0x54b8>  // b.any
  407ee4:	ldrb	w0, [x1]
  407ee8:	cmp	w0, #0x30
  407eec:	b.ne	407f00 <__fxstatat@plt+0x54b0>  // b.any
  407ef0:	ldrb	w0, [x1, #1]
  407ef4:	cmp	w0, #0x30
  407ef8:	b.eq	407e3c <__fxstatat@plt+0x53ec>  // b.none
  407efc:	nop
  407f00:	mov	x3, #0x0                   	// #0
  407f04:	nop
  407f08:	ldr	w2, [x20, #180]
  407f0c:	mov	x5, x23
  407f10:	ldr	x6, [x20, #16]
  407f14:	eor	w4, w27, #0x1
  407f18:	ldr	x1, [x25, #3672]
  407f1c:	mov	x0, x24
  407f20:	bl	407900 <__fxstatat@plt+0x4eb0>
  407f24:	mov	x19, x0
  407f28:	bl	405c40 <__fxstatat@plt+0x31f0>
  407f2c:	ldr	x0, [x26, #40]
  407f30:	cbz	x0, 4080b0 <__fxstatat@plt+0x5660>
  407f34:	add	x1, x26, #0x28
  407f38:	add	x0, x26, #0x20
  407f3c:	bl	405170 <__fxstatat@plt+0x2720>
  407f40:	ldr	x1, [x25, #8]
  407f44:	cbz	x1, 407e64 <__fxstatat@plt+0x5414>
  407f48:	sub	x0, x21, #0x1
  407f4c:	udiv	x21, x21, x1
  407f50:	add	x0, x0, x19
  407f54:	udiv	x0, x0, x1
  407f58:	cmp	x21, x0
  407f5c:	b.eq	407e64 <__fxstatat@plt+0x5414>  // b.none
  407f60:	add	x1, x26, #0x178
  407f64:	add	x0, x26, #0x170
  407f68:	bl	405170 <__fxstatat@plt+0x2720>
  407f6c:	b	407e64 <__fxstatat@plt+0x5414>
  407f70:	ldr	x24, [x20]
  407f74:	cbz	w0, 407e3c <__fxstatat@plt+0x53ec>
  407f78:	ldrb	w1, [x25, #3970]
  407f7c:	ldrb	w0, [x20, #169]
  407f80:	cbnz	w1, 408020 <__fxstatat@plt+0x55d0>
  407f84:	ldr	w3, [x20, #40]
  407f88:	adrp	x26, 433000 <_obstack_memory_used@@Base+0x1bf80>
  407f8c:	add	x26, x26, #0x370
  407f90:	ldrb	w1, [x20, #168]
  407f94:	cbnz	w1, 408038 <__fxstatat@plt+0x55e8>
  407f98:	ldr	w2, [x20, #152]
  407f9c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  407fa0:	add	x1, x1, #0xe80
  407fa4:	add	x1, x1, #0x200
  407fa8:	ldr	w3, [x1, x2, lsl #2]
  407fac:	cmp	w3, #0x7
  407fb0:	cset	w1, eq  // eq = none
  407fb4:	cmp	w3, #0x5
  407fb8:	b.eq	408180 <__fxstatat@plt+0x5730>  // b.none
  407fbc:	cmp	w0, #0x0
  407fc0:	ubfiz	x19, x3, #4, #32
  407fc4:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  407fc8:	b.eq	407eb8 <__fxstatat@plt+0x5468>  // b.none
  407fcc:	ldrb	w0, [x25, #3970]
  407fd0:	mov	x19, #0xd0                  	// #208
  407fd4:	cbnz	w0, 407eb8 <__fxstatat@plt+0x5468>
  407fd8:	ldr	x0, [x26, #208]
  407fdc:	mov	x19, #0x70                  	// #112
  407fe0:	cbz	x0, 407eb8 <__fxstatat@plt+0x5468>
  407fe4:	cmp	x0, #0x1
  407fe8:	ldr	x1, [x26, #216]
  407fec:	b.eq	408288 <__fxstatat@plt+0x5838>  // b.none
  407ff0:	cmp	x0, #0x2
  407ff4:	mov	x19, #0xd0                  	// #208
  407ff8:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  407ffc:	ldrb	w0, [x1]
  408000:	cmp	w0, #0x30
  408004:	b.ne	408018 <__fxstatat@plt+0x55c8>  // b.any
  408008:	ldrb	w0, [x1, #1]
  40800c:	mov	x19, #0x70                  	// #112
  408010:	cmp	w0, #0x30
  408014:	b.eq	407eb8 <__fxstatat@plt+0x5468>  // b.none
  408018:	mov	x19, #0xd0                  	// #208
  40801c:	b	407eb8 <__fxstatat@plt+0x5468>
  408020:	cbz	w0, 407f84 <__fxstatat@plt+0x5534>
  408024:	ldr	w3, [x20, #156]
  408028:	b	407f88 <__fxstatat@plt+0x5538>
  40802c:	ldrb	w1, [x20, #168]
  408030:	mov	w0, #0x0                   	// #0
  408034:	cbz	w1, 407f98 <__fxstatat@plt+0x5548>
  408038:	and	w2, w3, #0xf000
  40803c:	cmp	w2, #0x8, lsl #12
  408040:	b.eq	4081cc <__fxstatat@plt+0x577c>  // b.none
  408044:	cmp	w2, #0x4, lsl #12
  408048:	b.eq	4082b4 <__fxstatat@plt+0x5864>  // b.none
  40804c:	cmp	w2, #0xa, lsl #12
  408050:	b.eq	40838c <__fxstatat@plt+0x593c>  // b.none
  408054:	cmp	w2, #0x1, lsl #12
  408058:	mov	x19, #0x80                  	// #128
  40805c:	b.eq	407eb8 <__fxstatat@plt+0x5468>  // b.none
  408060:	cmp	w2, #0xc, lsl #12
  408064:	mov	x19, #0x90                  	// #144
  408068:	b.eq	407eb8 <__fxstatat@plt+0x5468>  // b.none
  40806c:	cmp	w2, #0x6, lsl #12
  408070:	mov	x19, #0xa0                  	// #160
  408074:	b.eq	407eb8 <__fxstatat@plt+0x5468>  // b.none
  408078:	cmp	w2, #0x2, lsl #12
  40807c:	mov	x3, #0xb0                  	// #176
  408080:	mov	x0, #0xd0                  	// #208
  408084:	csel	x19, x3, x0, eq  // eq = none
  408088:	b	407eb8 <__fxstatat@plt+0x5468>
  40808c:	ldrb	w0, [x1]
  408090:	cmp	w0, #0x30
  408094:	b.ne	40829c <__fxstatat@plt+0x584c>  // b.any
  408098:	ldrb	w0, [x1, #1]
  40809c:	cmp	w0, #0x30
  4080a0:	b.ne	40829c <__fxstatat@plt+0x584c>  // b.any
  4080a4:	nop
  4080a8:	mov	w0, #0xffffffff            	// #-1
  4080ac:	b	407f90 <__fxstatat@plt+0x5540>
  4080b0:	add	x1, x26, #0x8
  4080b4:	mov	x0, x26
  4080b8:	bl	405170 <__fxstatat@plt+0x2720>
  4080bc:	add	x1, x26, #0x38
  4080c0:	add	x0, x26, #0x30
  4080c4:	bl	405170 <__fxstatat@plt+0x2720>
  4080c8:	add	x1, x26, #0x18
  4080cc:	add	x0, x26, #0x10
  4080d0:	bl	405170 <__fxstatat@plt+0x2720>
  4080d4:	b	407f40 <__fxstatat@plt+0x54f0>
  4080d8:	ldrb	w0, [x1]
  4080dc:	cmp	w0, #0x30
  4080e0:	b.ne	408264 <__fxstatat@plt+0x5814>  // b.any
  4080e4:	ldrb	w0, [x1, #1]
  4080e8:	cmp	w0, #0x30
  4080ec:	b.ne	408264 <__fxstatat@plt+0x5814>  // b.any
  4080f0:	mov	w0, #0x49                  	// #73
  4080f4:	tst	w3, w0
  4080f8:	b.eq	408138 <__fxstatat@plt+0x56e8>  // b.none
  4080fc:	ldr	x0, [x26, #224]
  408100:	cbz	x0, 408138 <__fxstatat@plt+0x56e8>
  408104:	cmp	x0, #0x1
  408108:	ldr	x1, [x26, #232]
  40810c:	b.eq	40842c <__fxstatat@plt+0x59dc>  // b.none
  408110:	cmp	x0, #0x2
  408114:	mov	x19, #0xe0                  	// #224
  408118:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  40811c:	ldrb	w0, [x1]
  408120:	cmp	w0, #0x30
  408124:	b.ne	40845c <__fxstatat@plt+0x5a0c>  // b.any
  408128:	ldrb	w0, [x1, #1]
  40812c:	cmp	w0, #0x30
  408130:	b.ne	40845c <__fxstatat@plt+0x5a0c>  // b.any
  408134:	nop
  408138:	ldr	w0, [x20, #44]
  40813c:	cmp	w0, #0x1
  408140:	b.ls	408180 <__fxstatat@plt+0x5730>  // b.plast
  408144:	ldr	x0, [x26, #352]
  408148:	cbz	x0, 408180 <__fxstatat@plt+0x5730>
  40814c:	cmp	x0, #0x1
  408150:	ldr	x1, [x26, #360]
  408154:	b.eq	408440 <__fxstatat@plt+0x59f0>  // b.none
  408158:	cmp	x0, #0x2
  40815c:	mov	x19, #0x160                 	// #352
  408160:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  408164:	ldrb	w0, [x1]
  408168:	cmp	w0, #0x30
  40816c:	b.ne	408394 <__fxstatat@plt+0x5944>  // b.any
  408170:	ldrb	w0, [x1, #1]
  408174:	cmp	w0, #0x30
  408178:	b.ne	408394 <__fxstatat@plt+0x5944>  // b.any
  40817c:	nop
  408180:	mov	x0, x24
  408184:	bl	402430 <strlen@plt>
  408188:	ldr	x19, [x25, #3976]
  40818c:	mov	x22, x0
  408190:	cbz	x19, 4081bc <__fxstatat@plt+0x576c>
  408194:	nop
  408198:	ldr	x2, [x19]
  40819c:	subs	x0, x22, x2
  4081a0:	b.cc	4081b4 <__fxstatat@plt+0x5764>  // b.lo, b.ul, b.last
  4081a4:	ldr	x1, [x19, #8]
  4081a8:	add	x0, x24, x0
  4081ac:	bl	40ba00 <__fxstatat@plt+0x8fb0>
  4081b0:	cbz	w0, 4081c4 <__fxstatat@plt+0x5774>
  4081b4:	ldr	x19, [x19, #32]
  4081b8:	cbnz	x19, 408198 <__fxstatat@plt+0x5748>
  4081bc:	mov	x19, #0x50                  	// #80
  4081c0:	b	407eb8 <__fxstatat@plt+0x5468>
  4081c4:	add	x3, x19, #0x10
  4081c8:	b	407ebc <__fxstatat@plt+0x546c>
  4081cc:	tbz	w3, #11, 408208 <__fxstatat@plt+0x57b8>
  4081d0:	ldr	x0, [x26, #256]
  4081d4:	cbz	x0, 408208 <__fxstatat@plt+0x57b8>
  4081d8:	cmp	x0, #0x1
  4081dc:	ldr	x1, [x26, #264]
  4081e0:	b.eq	4083c4 <__fxstatat@plt+0x5974>  // b.none
  4081e4:	cmp	x0, #0x2
  4081e8:	mov	x19, #0x100                 	// #256
  4081ec:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  4081f0:	ldrb	w0, [x1]
  4081f4:	cmp	w0, #0x30
  4081f8:	b.ne	4082a4 <__fxstatat@plt+0x5854>  // b.any
  4081fc:	ldrb	w0, [x1, #1]
  408200:	cmp	w0, #0x30
  408204:	b.ne	4082a4 <__fxstatat@plt+0x5854>  // b.any
  408208:	tbz	w3, #10, 408248 <__fxstatat@plt+0x57f8>
  40820c:	ldr	x0, [x26, #272]
  408210:	cbz	x0, 408248 <__fxstatat@plt+0x57f8>
  408214:	cmp	x0, #0x1
  408218:	ldr	x1, [x26, #280]
  40821c:	b.eq	4083dc <__fxstatat@plt+0x598c>  // b.none
  408220:	cmp	x0, #0x2
  408224:	mov	x19, #0x110                 	// #272
  408228:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  40822c:	ldrb	w0, [x1]
  408230:	cmp	w0, #0x30
  408234:	b.ne	4082ac <__fxstatat@plt+0x585c>  // b.any
  408238:	ldrb	w0, [x1, #1]
  40823c:	cmp	w0, #0x30
  408240:	b.ne	4082ac <__fxstatat@plt+0x585c>  // b.any
  408244:	nop
  408248:	ldr	x0, [x26, #336]
  40824c:	cbz	x0, 4080f0 <__fxstatat@plt+0x56a0>
  408250:	cmp	x0, #0x1
  408254:	ldr	x1, [x26, #344]
  408258:	b.eq	4083b4 <__fxstatat@plt+0x5964>  // b.none
  40825c:	cmp	x0, #0x2
  408260:	b.eq	4080d8 <__fxstatat@plt+0x5688>  // b.none
  408264:	ldrb	w0, [x20, #176]
  408268:	cbz	w0, 4080f0 <__fxstatat@plt+0x56a0>
  40826c:	mov	x19, #0x150                 	// #336
  408270:	b	407eb8 <__fxstatat@plt+0x5468>
  408274:	ldrb	w0, [x1]
  408278:	mov	x3, #0x0                   	// #0
  40827c:	cmp	w0, #0x30
  408280:	b.ne	407f08 <__fxstatat@plt+0x54b8>  // b.any
  408284:	b	407e3c <__fxstatat@plt+0x53ec>
  408288:	ldrb	w1, [x1]
  40828c:	mov	x0, #0xd0                  	// #208
  408290:	cmp	w1, #0x30
  408294:	csel	x19, x19, x0, eq  // eq = none
  408298:	b	407eb8 <__fxstatat@plt+0x5468>
  40829c:	mov	x19, #0xc0                  	// #192
  4082a0:	b	407eb8 <__fxstatat@plt+0x5468>
  4082a4:	mov	x19, #0x100                 	// #256
  4082a8:	b	407eb8 <__fxstatat@plt+0x5468>
  4082ac:	mov	x19, #0x110                 	// #272
  4082b0:	b	407eb8 <__fxstatat@plt+0x5468>
  4082b4:	mov	w0, #0x202                 	// #514
  4082b8:	and	w0, w3, w0
  4082bc:	cmp	w0, #0x202
  4082c0:	b.eq	40834c <__fxstatat@plt+0x58fc>  // b.none
  4082c4:	tbz	w3, #1, 408300 <__fxstatat@plt+0x58b0>
  4082c8:	ldr	x0, [x26, #304]
  4082cc:	cbz	x0, 408300 <__fxstatat@plt+0x58b0>
  4082d0:	cmp	x0, #0x1
  4082d4:	ldr	x1, [x26, #312]
  4082d8:	b.eq	4083f0 <__fxstatat@plt+0x59a0>  // b.none
  4082dc:	cmp	x0, #0x2
  4082e0:	mov	x19, #0x130                 	// #304
  4082e4:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  4082e8:	ldrb	w0, [x1]
  4082ec:	cmp	w0, #0x30
  4082f0:	b.ne	408454 <__fxstatat@plt+0x5a04>  // b.any
  4082f4:	ldrb	w0, [x1, #1]
  4082f8:	cmp	w0, #0x30
  4082fc:	b.ne	408454 <__fxstatat@plt+0x5a04>  // b.any
  408300:	mov	x19, #0x60                  	// #96
  408304:	tbz	w3, #9, 407eb8 <__fxstatat@plt+0x5468>
  408308:	ldr	x0, [x26, #288]
  40830c:	cbz	x0, 407eb8 <__fxstatat@plt+0x5468>
  408310:	cmp	x0, #0x1
  408314:	ldr	x1, [x26, #296]
  408318:	b.eq	408418 <__fxstatat@plt+0x59c8>  // b.none
  40831c:	cmp	x0, #0x2
  408320:	mov	x19, #0x120                 	// #288
  408324:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  408328:	ldrb	w0, [x1]
  40832c:	cmp	w0, #0x30
  408330:	b.ne	408344 <__fxstatat@plt+0x58f4>  // b.any
  408334:	ldrb	w0, [x1, #1]
  408338:	mov	x19, #0x60                  	// #96
  40833c:	cmp	w0, #0x30
  408340:	b.eq	407eb8 <__fxstatat@plt+0x5468>  // b.none
  408344:	mov	x19, #0x120                 	// #288
  408348:	b	407eb8 <__fxstatat@plt+0x5468>
  40834c:	ldr	x0, [x26, #320]
  408350:	cbz	x0, 4082c4 <__fxstatat@plt+0x5874>
  408354:	cmp	x0, #0x1
  408358:	ldr	x1, [x26, #328]
  40835c:	b.eq	408404 <__fxstatat@plt+0x59b4>  // b.none
  408360:	cmp	x0, #0x2
  408364:	mov	x19, #0x140                 	// #320
  408368:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  40836c:	ldrb	w0, [x1]
  408370:	cmp	w0, #0x30
  408374:	b.ne	408384 <__fxstatat@plt+0x5934>  // b.any
  408378:	ldrb	w0, [x1, #1]
  40837c:	cmp	w0, #0x30
  408380:	b.eq	4082c4 <__fxstatat@plt+0x5874>  // b.none
  408384:	mov	x19, #0x140                 	// #320
  408388:	b	407eb8 <__fxstatat@plt+0x5468>
  40838c:	mov	w3, #0x7                   	// #7
  408390:	b	407fbc <__fxstatat@plt+0x556c>
  408394:	mov	x19, #0x160                 	// #352
  408398:	b	407eb8 <__fxstatat@plt+0x5468>
  40839c:	ldrb	w0, [x1]
  4083a0:	mov	x19, #0xc0                  	// #192
  4083a4:	cmp	w0, #0x30
  4083a8:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  4083ac:	mov	w0, #0xffffffff            	// #-1
  4083b0:	b	407f90 <__fxstatat@plt+0x5540>
  4083b4:	ldrb	w0, [x1]
  4083b8:	cmp	w0, #0x30
  4083bc:	b.ne	408264 <__fxstatat@plt+0x5814>  // b.any
  4083c0:	b	4080f0 <__fxstatat@plt+0x56a0>
  4083c4:	ldrb	w0, [x1]
  4083c8:	mov	x19, #0x100                 	// #256
  4083cc:	cmp	w0, #0x30
  4083d0:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  4083d4:	tbz	w3, #10, 408248 <__fxstatat@plt+0x57f8>
  4083d8:	b	40820c <__fxstatat@plt+0x57bc>
  4083dc:	ldrb	w0, [x1]
  4083e0:	mov	x19, #0x110                 	// #272
  4083e4:	cmp	w0, #0x30
  4083e8:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  4083ec:	b	408248 <__fxstatat@plt+0x57f8>
  4083f0:	ldrb	w0, [x1]
  4083f4:	mov	x19, #0x130                 	// #304
  4083f8:	cmp	w0, #0x30
  4083fc:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  408400:	b	408300 <__fxstatat@plt+0x58b0>
  408404:	ldrb	w0, [x1]
  408408:	mov	x19, #0x140                 	// #320
  40840c:	cmp	w0, #0x30
  408410:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  408414:	b	4082c4 <__fxstatat@plt+0x5874>
  408418:	ldrb	w1, [x1]
  40841c:	mov	x0, #0x120                 	// #288
  408420:	cmp	w1, #0x30
  408424:	csel	x19, x19, x0, eq  // eq = none
  408428:	b	407eb8 <__fxstatat@plt+0x5468>
  40842c:	ldrb	w0, [x1]
  408430:	mov	x19, #0xe0                  	// #224
  408434:	cmp	w0, #0x30
  408438:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  40843c:	b	408138 <__fxstatat@plt+0x56e8>
  408440:	ldrb	w0, [x1]
  408444:	mov	x19, #0x160                 	// #352
  408448:	cmp	w0, #0x30
  40844c:	b.ne	407eb8 <__fxstatat@plt+0x5468>  // b.any
  408450:	b	408180 <__fxstatat@plt+0x5730>
  408454:	mov	x19, #0x130                 	// #304
  408458:	b	407eb8 <__fxstatat@plt+0x5468>
  40845c:	mov	x19, #0xe0                  	// #224
  408460:	b	407eb8 <__fxstatat@plt+0x5468>
  408464:	nop
  408468:	sub	sp, sp, #0x2d0
  40846c:	stp	x29, x30, [sp]
  408470:	mov	x29, sp
  408474:	stp	x19, x20, [sp, #16]
  408478:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40847c:	add	x19, x19, #0x5e0
  408480:	mov	x20, x0
  408484:	stp	x21, x22, [sp, #32]
  408488:	mov	x21, x1
  40848c:	ldrb	w0, [x19, #3969]
  408490:	cbz	w0, 4084a4 <__fxstatat@plt+0x5a54>
  408494:	adrp	x22, 433000 <_obstack_memory_used@@Base+0x1bf80>
  408498:	add	x22, x22, #0x370
  40849c:	ldr	x0, [x22, #64]
  4084a0:	cbnz	x0, 4085b0 <__fxstatat@plt+0x5b60>
  4084a4:	ldrb	w0, [x19, #3635]
  4084a8:	cbz	w0, 4084e0 <__fxstatat@plt+0x5a90>
  4084ac:	ldr	w0, [x19, #3636]
  4084b0:	mov	w2, #0x0                   	// #0
  4084b4:	cmp	w0, #0x4
  4084b8:	b.eq	4084c0 <__fxstatat@plt+0x5a70>  // b.none
  4084bc:	ldr	w2, [x19, #3640]
  4084c0:	ldrb	w0, [x20, #168]
  4084c4:	cbnz	w0, 408588 <__fxstatat@plt+0x5b38>
  4084c8:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  4084cc:	add	x3, x3, #0x320
  4084d0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  4084d4:	mov	w0, #0x1                   	// #1
  4084d8:	add	x1, x1, #0x328
  4084dc:	bl	402670 <__printf_chk@plt>
  4084e0:	ldrb	w0, [x19, #3644]
  4084e4:	cbz	w0, 408520 <__fxstatat@plt+0x5ad0>
  4084e8:	ldr	w0, [x19, #3636]
  4084ec:	mov	w22, #0x0                   	// #0
  4084f0:	cmp	w0, #0x4
  4084f4:	b.eq	4084fc <__fxstatat@plt+0x5aac>  // b.none
  4084f8:	ldr	w22, [x19, #3660]
  4084fc:	ldrb	w0, [x20, #168]
  408500:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  408504:	add	x3, x3, #0x320
  408508:	cbnz	w0, 408618 <__fxstatat@plt+0x5bc8>
  40850c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  408510:	mov	w2, w22
  408514:	add	x1, x1, #0x328
  408518:	mov	w0, #0x1                   	// #1
  40851c:	bl	402670 <__printf_chk@plt>
  408520:	ldrb	w0, [x19, #3664]
  408524:	cbz	w0, 408550 <__fxstatat@plt+0x5b00>
  408528:	ldr	w0, [x19, #3636]
  40852c:	mov	w2, #0x0                   	// #0
  408530:	cmp	w0, #0x4
  408534:	b.eq	40853c <__fxstatat@plt+0x5aec>  // b.none
  408538:	ldr	w2, [x19, #3668]
  40853c:	ldr	x3, [x20, #160]
  408540:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  408544:	mov	w0, #0x1                   	// #1
  408548:	add	x1, x1, #0x328
  40854c:	bl	402670 <__printf_chk@plt>
  408550:	mov	w1, #0x0                   	// #0
  408554:	mov	x3, x21
  408558:	mov	x0, x20
  40855c:	mov	x2, #0x0                   	// #0
  408560:	bl	407df8 <__fxstatat@plt+0x53a8>
  408564:	ldr	w1, [x19, #3680]
  408568:	mov	x19, x0
  40856c:	cbnz	w1, 4085ec <__fxstatat@plt+0x5b9c>
  408570:	mov	x0, x19
  408574:	ldp	x29, x30, [sp]
  408578:	ldp	x19, x20, [sp, #16]
  40857c:	ldp	x21, x22, [sp, #32]
  408580:	add	sp, sp, #0x2d0
  408584:	ret
  408588:	ldr	x0, [x20, #32]
  40858c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  408590:	add	x3, x3, #0x320
  408594:	cbz	x0, 4084d0 <__fxstatat@plt+0x5a80>
  408598:	add	x1, sp, #0x40
  40859c:	str	w2, [sp, #60]
  4085a0:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  4085a4:	mov	x3, x0
  4085a8:	ldr	w2, [sp, #60]
  4085ac:	b	4084d0 <__fxstatat@plt+0x5a80>
  4085b0:	cmp	x0, #0x1
  4085b4:	ldr	x1, [x22, #72]
  4085b8:	b.eq	408638 <__fxstatat@plt+0x5be8>  // b.none
  4085bc:	cmp	x0, #0x2
  4085c0:	b.eq	408648 <__fxstatat@plt+0x5bf8>  // b.none
  4085c4:	add	x1, x22, #0x8
  4085c8:	mov	x0, x22
  4085cc:	bl	405170 <__fxstatat@plt+0x2720>
  4085d0:	add	x1, x22, #0x48
  4085d4:	add	x0, x22, #0x40
  4085d8:	bl	405170 <__fxstatat@plt+0x2720>
  4085dc:	add	x1, x22, #0x18
  4085e0:	add	x0, x22, #0x10
  4085e4:	bl	405170 <__fxstatat@plt+0x2720>
  4085e8:	b	4084a4 <__fxstatat@plt+0x5a54>
  4085ec:	ldr	w1, [x20, #40]
  4085f0:	ldr	w2, [x20, #152]
  4085f4:	ldrb	w0, [x20, #168]
  4085f8:	bl	407530 <__fxstatat@plt+0x4ae0>
  4085fc:	add	x19, x19, w0, uxtb
  408600:	mov	x0, x19
  408604:	ldp	x29, x30, [sp]
  408608:	ldp	x19, x20, [sp, #16]
  40860c:	ldp	x21, x22, [sp, #32]
  408610:	add	sp, sp, #0x2d0
  408614:	ret
  408618:	ldr	w2, [x19, #3656]
  40861c:	mov	x3, #0x200                 	// #512
  408620:	ldr	x0, [x20, #88]
  408624:	add	x1, sp, #0x40
  408628:	ldr	x4, [x19, #3648]
  40862c:	bl	40e390 <__fxstatat@plt+0xb940>
  408630:	mov	x3, x0
  408634:	b	40850c <__fxstatat@plt+0x5abc>
  408638:	ldrb	w0, [x1]
  40863c:	cmp	w0, #0x30
  408640:	b.ne	4085c4 <__fxstatat@plt+0x5b74>  // b.any
  408644:	b	4084a4 <__fxstatat@plt+0x5a54>
  408648:	ldrb	w0, [x1]
  40864c:	cmp	w0, #0x30
  408650:	b.ne	4085c4 <__fxstatat@plt+0x5b74>  // b.any
  408654:	ldrb	w0, [x1, #1]
  408658:	cmp	w0, #0x30
  40865c:	b.eq	4084a4 <__fxstatat@plt+0x5a54>  // b.none
  408660:	b	4085c4 <__fxstatat@plt+0x5b74>
  408664:	nop
  408668:	stp	x29, x30, [sp, #-96]!
  40866c:	mov	x29, sp
  408670:	stp	x19, x20, [sp, #16]
  408674:	adrp	x20, 433000 <_obstack_memory_used@@Base+0x1bf80>
  408678:	add	x20, x20, #0x5e0
  40867c:	stp	x25, x26, [sp, #64]
  408680:	and	w25, w0, #0xff
  408684:	ldr	x0, [x20, #3104]
  408688:	stp	x23, x24, [sp, #48]
  40868c:	adrp	x24, 433000 <_obstack_memory_used@@Base+0x1bf80>
  408690:	cbz	x0, 40877c <__fxstatat@plt+0x5d2c>
  408694:	mov	x19, #0x0                   	// #0
  408698:	stp	x21, x22, [sp, #32]
  40869c:	mov	x22, #0x0                   	// #0
  4086a0:	str	x27, [sp, #80]
  4086a4:	b	4086cc <__fxstatat@plt+0x5c7c>
  4086a8:	mov	x21, x22
  4086ac:	cbnz	x19, 4087f4 <__fxstatat@plt+0x5da4>
  4086b0:	mov	x1, x21
  4086b4:	mov	x0, x23
  4086b8:	bl	408468 <__fxstatat@plt+0x5a18>
  4086bc:	add	x19, x19, #0x1
  4086c0:	ldr	x0, [x20, #3104]
  4086c4:	cmp	x0, x19
  4086c8:	b.ls	408774 <__fxstatat@plt+0x5d24>  // b.plast
  4086cc:	ldr	x0, [x20, #8]
  4086d0:	ldr	x1, [x20, #3136]
  4086d4:	ldr	x23, [x1, x19, lsl #3]
  4086d8:	cbz	x0, 4086a8 <__fxstatat@plt+0x5c58>
  4086dc:	mov	x0, x23
  4086e0:	bl	4058d8 <__fxstatat@plt+0x2e88>
  4086e4:	cbz	x19, 408814 <__fxstatat@plt+0x5dc4>
  4086e8:	ldr	x1, [x20, #8]
  4086ec:	add	x21, x22, #0x2
  4086f0:	add	x2, x0, x21
  4086f4:	cbz	x1, 4087b0 <__fxstatat@plt+0x5d60>
  4086f8:	cmp	x1, x2
  4086fc:	b.ls	408800 <__fxstatat@plt+0x5db0>  // b.plast
  408700:	mov	x1, #0xfffffffffffffffd    	// #-3
  408704:	sub	x1, x1, x0
  408708:	cmp	x1, x22
  40870c:	b.cs	4087b0 <__fxstatat@plt+0x5d60>  // b.hs, b.nlast
  408710:	mov	w26, #0xa                   	// #10
  408714:	mov	x22, x0
  408718:	mov	w27, w26
  40871c:	mov	x21, #0x0                   	// #0
  408720:	ldr	x0, [x24, #1472]
  408724:	ldp	x1, x2, [x0, #40]
  408728:	cmp	x1, x2
  40872c:	b.cs	4087d0 <__fxstatat@plt+0x5d80>  // b.hs, b.nlast
  408730:	add	x2, x1, #0x1
  408734:	str	x2, [x0, #40]
  408738:	strb	w25, [x1]
  40873c:	ldr	x0, [x24, #1472]
  408740:	ldp	x1, x2, [x0, #40]
  408744:	cmp	x1, x2
  408748:	b.cs	4087e8 <__fxstatat@plt+0x5d98>  // b.hs, b.nlast
  40874c:	add	x2, x1, #0x1
  408750:	str	x2, [x0, #40]
  408754:	strb	w27, [x1]
  408758:	mov	x0, x23
  40875c:	mov	x1, x21
  408760:	add	x19, x19, #0x1
  408764:	bl	408468 <__fxstatat@plt+0x5a18>
  408768:	ldr	x0, [x20, #3104]
  40876c:	cmp	x0, x19
  408770:	b.hi	4086cc <__fxstatat@plt+0x5c7c>  // b.pmore
  408774:	ldp	x21, x22, [sp, #32]
  408778:	ldr	x27, [sp, #80]
  40877c:	ldr	x0, [x24, #1472]
  408780:	ldp	x1, x2, [x0, #40]
  408784:	cmp	x1, x2
  408788:	b.cs	408820 <__fxstatat@plt+0x5dd0>  // b.hs, b.nlast
  40878c:	add	x2, x1, #0x1
  408790:	str	x2, [x0, #40]
  408794:	mov	w0, #0xa                   	// #10
  408798:	strb	w0, [x1]
  40879c:	ldp	x19, x20, [sp, #16]
  4087a0:	ldp	x23, x24, [sp, #48]
  4087a4:	ldp	x25, x26, [sp, #64]
  4087a8:	ldp	x29, x30, [sp], #96
  4087ac:	ret
  4087b0:	mov	x22, x2
  4087b4:	nop
  4087b8:	ldr	x0, [x24, #1472]
  4087bc:	mov	w26, #0x20                  	// #32
  4087c0:	mov	w27, w26
  4087c4:	ldp	x1, x2, [x0, #40]
  4087c8:	cmp	x1, x2
  4087cc:	b.cc	408730 <__fxstatat@plt+0x5ce0>  // b.lo, b.ul, b.last
  4087d0:	mov	w1, w25
  4087d4:	bl	402780 <__overflow@plt>
  4087d8:	ldr	x0, [x24, #1472]
  4087dc:	ldp	x1, x2, [x0, #40]
  4087e0:	cmp	x1, x2
  4087e4:	b.cc	40874c <__fxstatat@plt+0x5cfc>  // b.lo, b.ul, b.last
  4087e8:	mov	w1, w26
  4087ec:	bl	402780 <__overflow@plt>
  4087f0:	b	4086b0 <__fxstatat@plt+0x5c60>
  4087f4:	add	x22, x22, #0x2
  4087f8:	mov	x21, x22
  4087fc:	b	4087b8 <__fxstatat@plt+0x5d68>
  408800:	mov	w26, #0xa                   	// #10
  408804:	mov	x22, x0
  408808:	mov	w27, w26
  40880c:	mov	x21, #0x0                   	// #0
  408810:	b	408720 <__fxstatat@plt+0x5cd0>
  408814:	mov	x21, x22
  408818:	add	x22, x0, x22
  40881c:	b	4086b0 <__fxstatat@plt+0x5c60>
  408820:	ldp	x19, x20, [sp, #16]
  408824:	mov	w1, #0xa                   	// #10
  408828:	ldp	x23, x24, [sp, #48]
  40882c:	ldp	x25, x26, [sp, #64]
  408830:	ldp	x29, x30, [sp], #96
  408834:	b	402780 <__overflow@plt>
  408838:	mov	x12, #0x1340                	// #4928
  40883c:	sub	sp, sp, x12
  408840:	stp	x29, x30, [sp]
  408844:	mov	x29, sp
  408848:	stp	x21, x22, [sp, #32]
  40884c:	mov	x21, x0
  408850:	ldrb	w0, [x0, #168]
  408854:	stp	x19, x20, [sp, #16]
  408858:	stp	x23, x24, [sp, #48]
  40885c:	stp	x25, x26, [sp, #64]
  408860:	cbz	w0, 408b70 <__fxstatat@plt+0x6120>
  408864:	adrp	x25, 433000 <_obstack_memory_used@@Base+0x1bf80>
  408868:	add	x25, x25, #0x5e0
  40886c:	add	x22, sp, #0x80
  408870:	add	x0, x21, #0x18
  408874:	mov	x1, x22
  408878:	bl	40c5e0 <__fxstatat@plt+0x9b90>
  40887c:	ldrb	w0, [x25, #3984]
  408880:	cbnz	w0, 408bb0 <__fxstatat@plt+0x6160>
  408884:	strb	wzr, [sp, #138]
  408888:	ldr	w0, [x25, #3472]
  40888c:	cmp	w0, #0x1
  408890:	b.eq	408bd8 <__fxstatat@plt+0x6188>  // b.none
  408894:	cmp	w0, #0x2
  408898:	b.ne	408b04 <__fxstatat@plt+0x60b4>  // b.any
  40889c:	ldr	q0, [x21, #96]
  4088a0:	ldrb	w0, [x25, #3635]
  4088a4:	ldrb	w1, [x21, #168]
  4088a8:	str	q0, [sp, #144]
  4088ac:	cbnz	w0, 408b1c <__fxstatat@plt+0x60cc>
  4088b0:	add	x23, sp, #0x500
  4088b4:	mov	x19, x23
  4088b8:	ldrb	w0, [x25, #3644]
  4088bc:	cbz	w0, 40891c <__fxstatat@plt+0x5ecc>
  4088c0:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x1f80>
  4088c4:	add	x24, x24, #0x320
  4088c8:	cbnz	w1, 408f08 <__fxstatat@plt+0x64b8>
  4088cc:	ldr	w20, [x25, #3660]
  4088d0:	mov	w1, #0x0                   	// #0
  4088d4:	mov	x0, x24
  4088d8:	bl	40fea0 <__fxstatat@plt+0xd450>
  4088dc:	sub	w1, w20, w0
  4088e0:	cmp	w1, #0x0
  4088e4:	b.le	408904 <__fxstatat@plt+0x5eb4>
  4088e8:	sub	w2, w1, #0x1
  4088ec:	mov	x0, x19
  4088f0:	mov	w1, #0x20                  	// #32
  4088f4:	sxtw	x2, w2
  4088f8:	add	x2, x2, #0x1
  4088fc:	add	x19, x19, x2
  408900:	bl	402680 <memset@plt>
  408904:	ldrb	w0, [x24], #1
  408908:	strb	w0, [x19], #1
  40890c:	cbnz	w0, 408904 <__fxstatat@plt+0x5eb4>
  408910:	ldrb	w1, [x21, #168]
  408914:	mov	w0, #0x20                  	// #32
  408918:	sturb	w0, [x19, #-1]
  40891c:	adrp	x6, 419000 <_obstack_memory_used@@Base+0x1f80>
  408920:	ldr	w20, [x25, #3988]
  408924:	add	x6, x6, #0x320
  408928:	cbnz	w1, 408c20 <__fxstatat@plt+0x61d0>
  40892c:	mov	w5, w20
  408930:	mov	x4, x22
  408934:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  408938:	add	x3, x3, #0x330
  40893c:	mov	w1, #0x1                   	// #1
  408940:	mov	x2, #0xffffffffffffffff    	// #-1
  408944:	mov	x0, x19
  408948:	bl	402440 <__sprintf_chk@plt>
  40894c:	mov	x0, x19
  408950:	bl	402430 <strlen@plt>
  408954:	ldrb	w1, [x25, #3968]
  408958:	add	x19, x19, x0
  40895c:	adrp	x24, 433000 <_obstack_memory_used@@Base+0x1bf80>
  408960:	cbnz	w1, 408bf8 <__fxstatat@plt+0x61a8>
  408964:	adrp	x22, 433000 <_obstack_memory_used@@Base+0x1bf80>
  408968:	add	x22, x22, #0x370
  40896c:	ldrb	w0, [x22, #400]
  408970:	cbnz	w0, 408988 <__fxstatat@plt+0x5f38>
  408974:	ldrb	w0, [x22, #401]
  408978:	cbnz	w0, 408988 <__fxstatat@plt+0x5f38>
  40897c:	ldrb	w0, [x25, #3992]
  408980:	cbz	w0, 408e58 <__fxstatat@plt+0x6408>
  408984:	nop
  408988:	ldr	x1, [x24, #1472]
  40898c:	mov	x0, x23
  408990:	sub	x19, x19, x23
  408994:	bl	402980 <fputs_unlocked@plt>
  408998:	ldr	x1, [x25, #3488]
  40899c:	ldrb	w0, [x22, #400]
  4089a0:	add	x19, x19, x1
  4089a4:	str	x19, [x25, #3488]
  4089a8:	cbnz	w0, 408df8 <__fxstatat@plt+0x63a8>
  4089ac:	ldrb	w0, [x22, #401]
  4089b0:	cbnz	w0, 408dd0 <__fxstatat@plt+0x6380>
  4089b4:	ldrb	w0, [x25, #3992]
  4089b8:	cbnz	w0, 408da8 <__fxstatat@plt+0x6358>
  4089bc:	ldrb	w0, [x25, #3664]
  4089c0:	mov	x19, x23
  4089c4:	cbnz	w0, 408d94 <__fxstatat@plt+0x6344>
  4089c8:	ldrb	w0, [x21, #168]
  4089cc:	cbz	w0, 408b64 <__fxstatat@plt+0x6114>
  4089d0:	ldr	w0, [x21, #40]
  4089d4:	mov	w1, #0xb000                	// #45056
  4089d8:	and	w0, w0, w1
  4089dc:	cmp	w0, #0x2, lsl #12
  4089e0:	b.eq	408f28 <__fxstatat@plt+0x64d8>  // b.none
  4089e4:	ldr	w2, [x25, #4024]
  4089e8:	add	x1, sp, #0x110
  4089ec:	ldr	x0, [x21, #72]
  4089f0:	mov	x3, #0x1                   	// #1
  4089f4:	ldr	x4, [x22, #408]
  4089f8:	bl	40e390 <__fxstatat@plt+0xb940>
  4089fc:	mov	x26, x0
  408a00:	ldr	w20, [x25, #4016]
  408a04:	mov	w1, #0x0                   	// #0
  408a08:	mov	x0, x26
  408a0c:	bl	40fea0 <__fxstatat@plt+0xd450>
  408a10:	sub	w1, w20, w0
  408a14:	cmp	w1, #0x0
  408a18:	b.le	408a38 <__fxstatat@plt+0x5fe8>
  408a1c:	sub	w2, w1, #0x1
  408a20:	mov	x0, x19
  408a24:	mov	w1, #0x20                  	// #32
  408a28:	sxtw	x2, w2
  408a2c:	add	x2, x2, #0x1
  408a30:	add	x19, x19, x2
  408a34:	bl	402680 <memset@plt>
  408a38:	ldrb	w0, [x26], #1
  408a3c:	strb	w0, [x19], #1
  408a40:	cbnz	w0, 408a38 <__fxstatat@plt+0x5fe8>
  408a44:	mov	w0, #0x20                  	// #32
  408a48:	sturb	w0, [x19, #-1]
  408a4c:	ldrb	w0, [x21, #168]
  408a50:	mov	w1, #0x1                   	// #1
  408a54:	strb	w1, [x19]
  408a58:	cbnz	w0, 408c34 <__fxstatat@plt+0x61e4>
  408a5c:	ldr	w20, [x22, #416]
  408a60:	tbz	w20, #31, 408ef0 <__fxstatat@plt+0x64a0>
  408a64:	ldr	x0, [x25, #4032]
  408a68:	add	x2, sp, #0xd8
  408a6c:	add	x1, sp, #0x78
  408a70:	str	xzr, [sp, #120]
  408a74:	bl	4174b8 <_obstack_memory_used@@Base+0x438>
  408a78:	cbz	x0, 408ee4 <__fxstatat@plt+0x6494>
  408a7c:	ldrb	w0, [x25, #3088]
  408a80:	ldr	x4, [x25, #4032]
  408a84:	cbnz	w0, 409000 <__fxstatat@plt+0x65b0>
  408a88:	ldr	x2, [x22, #384]
  408a8c:	add	x3, sp, #0xd8
  408a90:	add	x0, sp, #0x110
  408a94:	mov	w5, #0x0                   	// #0
  408a98:	mov	x1, #0x3e9                 	// #1001
  408a9c:	bl	411b08 <__fxstatat@plt+0xf0b8>
  408aa0:	cbz	x0, 408ee4 <__fxstatat@plt+0x6494>
  408aa4:	mov	x1, x0
  408aa8:	mov	w2, #0x0                   	// #0
  408aac:	add	x0, sp, #0x110
  408ab0:	bl	40fc10 <__fxstatat@plt+0xd1c0>
  408ab4:	str	w0, [x22, #416]
  408ab8:	mov	w20, w0
  408abc:	tbnz	w20, #31, 408ff4 <__fxstatat@plt+0x65a4>
  408ac0:	ldrb	w0, [x21, #168]
  408ac4:	cbz	w0, 408ef0 <__fxstatat@plt+0x64a0>
  408ac8:	ldr	x0, [sp, #144]
  408acc:	add	x1, sp, #0x110
  408ad0:	bl	40f758 <__fxstatat@plt+0xcd08>
  408ad4:	mov	x5, x0
  408ad8:	mov	w4, w20
  408adc:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  408ae0:	add	x3, x3, #0x328
  408ae4:	mov	x2, #0xffffffffffffffff    	// #-1
  408ae8:	mov	w1, #0x1                   	// #1
  408aec:	mov	x0, x19
  408af0:	bl	402440 <__sprintf_chk@plt>
  408af4:	mov	x0, x19
  408af8:	bl	402430 <strlen@plt>
  408afc:	add	x19, x19, x0
  408b00:	b	408ccc <__fxstatat@plt+0x627c>
  408b04:	cbnz	w0, 408bf0 <__fxstatat@plt+0x61a0>
  408b08:	ldr	q0, [x21, #112]
  408b0c:	ldrb	w0, [x25, #3635]
  408b10:	ldrb	w1, [x21, #168]
  408b14:	str	q0, [sp, #144]
  408b18:	cbz	w0, 4088b0 <__fxstatat@plt+0x5e60>
  408b1c:	ldr	w4, [x25, #3640]
  408b20:	cbz	w1, 408e20 <__fxstatat@plt+0x63d0>
  408b24:	ldr	x0, [x21, #32]
  408b28:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x1f80>
  408b2c:	add	x5, x5, #0x320
  408b30:	cbnz	x0, 408e88 <__fxstatat@plt+0x6438>
  408b34:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  408b38:	add	x3, x3, #0x328
  408b3c:	add	x23, sp, #0x500
  408b40:	mov	w1, #0x1                   	// #1
  408b44:	mov	x2, #0xe3b                 	// #3643
  408b48:	mov	x0, x23
  408b4c:	bl	402440 <__sprintf_chk@plt>
  408b50:	mov	x0, x23
  408b54:	bl	402430 <strlen@plt>
  408b58:	ldrb	w1, [x21, #168]
  408b5c:	add	x19, x23, x0
  408b60:	b	4088b8 <__fxstatat@plt+0x5e68>
  408b64:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x1f80>
  408b68:	add	x26, x26, #0x320
  408b6c:	b	408a00 <__fxstatat@plt+0x5fb0>
  408b70:	ldr	w2, [x21, #152]
  408b74:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  408b78:	add	x0, x0, #0xe80
  408b7c:	adrp	x25, 433000 <_obstack_memory_used@@Base+0x1bf80>
  408b80:	add	x0, x0, #0x228
  408b84:	add	x25, x25, #0x5e0
  408b88:	add	x22, sp, #0x80
  408b8c:	mov	x1, #0x3f3f3f3f3f3f3f3f    	// #4557430888798830399
  408b90:	stur	x1, [sp, #129]
  408b94:	mov	w1, #0x3f3f                	// #16191
  408b98:	ldrb	w0, [x0, x2]
  408b9c:	strb	w0, [sp, #128]
  408ba0:	ldrb	w0, [x25, #3984]
  408ba4:	sturh	w1, [x22, #9]
  408ba8:	strb	wzr, [sp, #139]
  408bac:	cbz	w0, 408884 <__fxstatat@plt+0x5e34>
  408bb0:	ldr	w0, [x21, #172]
  408bb4:	cmp	w0, #0x1
  408bb8:	b.eq	408efc <__fxstatat@plt+0x64ac>  // b.none
  408bbc:	cmp	w0, #0x2
  408bc0:	b.ne	408888 <__fxstatat@plt+0x5e38>  // b.any
  408bc4:	mov	w0, #0x2b                  	// #43
  408bc8:	strb	w0, [sp, #138]
  408bcc:	ldr	w0, [x25, #3472]
  408bd0:	cmp	w0, #0x1
  408bd4:	b.ne	408894 <__fxstatat@plt+0x5e44>  // b.any
  408bd8:	ldr	q0, [x21, #128]
  408bdc:	ldrb	w0, [x25, #3635]
  408be0:	ldrb	w1, [x21, #168]
  408be4:	str	q0, [sp, #144]
  408be8:	cbz	w0, 4088b0 <__fxstatat@plt+0x5e60>
  408bec:	b	408b1c <__fxstatat@plt+0x60cc>
  408bf0:	str	x27, [sp, #80]
  408bf4:	bl	402760 <abort@plt>
  408bf8:	ldr	x3, [x24, #1472]
  408bfc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  408c00:	mov	x2, #0x2                   	// #2
  408c04:	add	x0, x0, #0x338
  408c08:	mov	x1, #0x1                   	// #1
  408c0c:	bl	402410 <fwrite_unlocked@plt>
  408c10:	ldr	x0, [x25, #3488]
  408c14:	add	x0, x0, #0x2
  408c18:	str	x0, [x25, #3488]
  408c1c:	b	408964 <__fxstatat@plt+0x5f14>
  408c20:	ldr	w0, [x21, #44]
  408c24:	add	x1, sp, #0x110
  408c28:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  408c2c:	mov	x6, x0
  408c30:	b	40892c <__fxstatat@plt+0x5edc>
  408c34:	ldr	x0, [x25, #4032]
  408c38:	add	x2, sp, #0xa0
  408c3c:	add	x1, sp, #0x90
  408c40:	bl	4174b8 <_obstack_memory_used@@Base+0x438>
  408c44:	cbz	x0, 408cbc <__fxstatat@plt+0x626c>
  408c48:	ldp	x2, x5, [sp, #144]
  408c4c:	ldr	x1, [x25, #4040]
  408c50:	ldr	x3, [x25, #4048]
  408c54:	cmp	x1, x2
  408c58:	b.lt	408fcc <__fxstatat@plt+0x657c>  // b.tstop
  408c5c:	b.gt	408ea0 <__fxstatat@plt+0x6450>
  408c60:	cmp	w3, w5
  408c64:	mov	w0, w5
  408c68:	b.mi	408fcc <__fxstatat@plt+0x657c>  // b.first
  408c6c:	sub	x1, x1, #0xf0c, lsl #12
  408c70:	sub	x1, x1, #0x2ac
  408c74:	cmp	x1, x2
  408c78:	b.lt	408ed8 <__fxstatat@plt+0x6488>  // b.tstop
  408c7c:	mov	x0, #0x0                   	// #0
  408c80:	ldrb	w1, [x25, #3088]
  408c84:	ldr	x4, [x25, #4032]
  408c88:	cbz	w1, 408fc0 <__fxstatat@plt+0x6570>
  408c8c:	ldrsw	x1, [sp, #176]
  408c90:	mov	w3, #0xc                   	// #12
  408c94:	add	x2, x25, #0x10
  408c98:	smaddl	x0, w0, w3, x1
  408c9c:	add	x2, x2, x0, lsl #7
  408ca0:	add	x3, sp, #0xa0
  408ca4:	mov	x0, x19
  408ca8:	mov	x1, #0x3e9                 	// #1001
  408cac:	bl	411b08 <__fxstatat@plt+0xf0b8>
  408cb0:	cbz	x0, 408cbc <__fxstatat@plt+0x626c>
  408cb4:	add	x19, x19, x0
  408cb8:	b	408cc4 <__fxstatat@plt+0x6274>
  408cbc:	ldrb	w0, [x19]
  408cc0:	cbnz	w0, 409054 <__fxstatat@plt+0x6604>
  408cc4:	mov	w0, #0x20                  	// #32
  408cc8:	strh	w0, [x19], #1
  408ccc:	ldr	x1, [x24, #1472]
  408cd0:	mov	x0, x23
  408cd4:	sub	x19, x19, x23
  408cd8:	bl	402980 <fputs_unlocked@plt>
  408cdc:	ldr	x4, [x25, #3488]
  408ce0:	add	x2, x25, #0xfd8
  408ce4:	mov	x3, x19
  408ce8:	mov	x0, x21
  408cec:	add	x4, x4, x19
  408cf0:	mov	w1, #0x0                   	// #0
  408cf4:	str	x4, [x25, #3488]
  408cf8:	bl	407df8 <__fxstatat@plt+0x53a8>
  408cfc:	mov	x20, x0
  408d00:	ldr	w2, [x21, #152]
  408d04:	cmp	w2, #0x6
  408d08:	b.eq	408d34 <__fxstatat@plt+0x62e4>  // b.none
  408d0c:	ldr	w0, [x25, #3680]
  408d10:	cbnz	w0, 408e2c <__fxstatat@plt+0x63dc>
  408d14:	mov	x12, #0x1340                	// #4928
  408d18:	ldp	x29, x30, [sp]
  408d1c:	ldp	x19, x20, [sp, #16]
  408d20:	ldp	x21, x22, [sp, #32]
  408d24:	ldp	x23, x24, [sp, #48]
  408d28:	ldp	x25, x26, [sp, #64]
  408d2c:	add	sp, sp, x12
  408d30:	ret
  408d34:	ldr	x0, [x21, #8]
  408d38:	cbz	x0, 408d14 <__fxstatat@plt+0x62c4>
  408d3c:	ldr	x3, [x24, #1472]
  408d40:	mov	x2, #0x4                   	// #4
  408d44:	mov	x1, #0x1                   	// #1
  408d48:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  408d4c:	add	x0, x0, #0x350
  408d50:	bl	402410 <fwrite_unlocked@plt>
  408d54:	ldr	x4, [x25, #3488]
  408d58:	add	x3, x20, #0x4
  408d5c:	add	x3, x3, x19
  408d60:	mov	x0, x21
  408d64:	add	x4, x4, #0x4
  408d68:	mov	x2, #0x0                   	// #0
  408d6c:	mov	w1, #0x1                   	// #1
  408d70:	str	x4, [x25, #3488]
  408d74:	bl	407df8 <__fxstatat@plt+0x53a8>
  408d78:	ldr	w0, [x25, #3680]
  408d7c:	cbz	w0, 408d14 <__fxstatat@plt+0x62c4>
  408d80:	ldr	w1, [x21, #156]
  408d84:	mov	w2, #0x0                   	// #0
  408d88:	mov	w0, #0x1                   	// #1
  408d8c:	bl	407530 <__fxstatat@plt+0x4ae0>
  408d90:	b	408d14 <__fxstatat@plt+0x62c4>
  408d94:	ldr	w2, [x25, #3668]
  408d98:	mov	x1, #0x0                   	// #0
  408d9c:	ldr	x0, [x21, #160]
  408da0:	bl	404e48 <__fxstatat@plt+0x23f8>
  408da4:	b	4089c8 <__fxstatat@plt+0x5f78>
  408da8:	ldrb	w0, [x21, #168]
  408dac:	ldr	w19, [x21, #48]
  408db0:	ldr	w2, [x25, #4008]
  408db4:	cbz	w0, 408e70 <__fxstatat@plt+0x6420>
  408db8:	ldrb	w1, [x25, #4000]
  408dbc:	mov	x0, #0x0                   	// #0
  408dc0:	cbz	w1, 409010 <__fxstatat@plt+0x65c0>
  408dc4:	mov	w1, w19
  408dc8:	bl	404e48 <__fxstatat@plt+0x23f8>
  408dcc:	b	4089bc <__fxstatat@plt+0x5f6c>
  408dd0:	ldrb	w0, [x21, #168]
  408dd4:	ldr	w19, [x21, #52]
  408dd8:	ldr	w2, [x25, #4004]
  408ddc:	cbz	w0, 408e64 <__fxstatat@plt+0x6414>
  408de0:	ldrb	w1, [x25, #4000]
  408de4:	mov	x0, #0x0                   	// #0
  408de8:	cbz	w1, 409038 <__fxstatat@plt+0x65e8>
  408dec:	mov	w1, w19
  408df0:	bl	404e48 <__fxstatat@plt+0x23f8>
  408df4:	b	4089b4 <__fxstatat@plt+0x5f64>
  408df8:	ldrb	w0, [x21, #168]
  408dfc:	ldr	w19, [x21, #48]
  408e00:	ldr	w2, [x25, #3996]
  408e04:	cbz	w0, 408e7c <__fxstatat@plt+0x642c>
  408e08:	ldrb	w1, [x25, #4000]
  408e0c:	mov	x0, #0x0                   	// #0
  408e10:	cbz	w1, 409024 <__fxstatat@plt+0x65d4>
  408e14:	mov	w1, w19
  408e18:	bl	404e48 <__fxstatat@plt+0x23f8>
  408e1c:	b	4089ac <__fxstatat@plt+0x5f5c>
  408e20:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x1f80>
  408e24:	add	x5, x5, #0x320
  408e28:	b	408b34 <__fxstatat@plt+0x60e4>
  408e2c:	ldr	w1, [x21, #40]
  408e30:	ldrb	w0, [x21, #168]
  408e34:	bl	407530 <__fxstatat@plt+0x4ae0>
  408e38:	mov	x12, #0x1340                	// #4928
  408e3c:	ldp	x29, x30, [sp]
  408e40:	ldp	x19, x20, [sp, #16]
  408e44:	ldp	x21, x22, [sp, #32]
  408e48:	ldp	x23, x24, [sp, #48]
  408e4c:	ldp	x25, x26, [sp, #64]
  408e50:	add	sp, sp, x12
  408e54:	ret
  408e58:	ldrb	w0, [x25, #3664]
  408e5c:	cbz	w0, 4089c8 <__fxstatat@plt+0x5f78>
  408e60:	b	408988 <__fxstatat@plt+0x5f38>
  408e64:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  408e68:	add	x0, x0, #0x320
  408e6c:	b	408dec <__fxstatat@plt+0x639c>
  408e70:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  408e74:	add	x0, x0, #0x320
  408e78:	b	408dc4 <__fxstatat@plt+0x6374>
  408e7c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  408e80:	add	x0, x0, #0x320
  408e84:	b	408e14 <__fxstatat@plt+0x63c4>
  408e88:	add	x1, sp, #0x110
  408e8c:	str	w4, [sp, #108]
  408e90:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  408e94:	mov	x5, x0
  408e98:	ldr	w4, [sp, #108]
  408e9c:	b	408b34 <__fxstatat@plt+0x60e4>
  408ea0:	sub	x0, x1, #0xf0c, lsl #12
  408ea4:	sub	x0, x0, #0x2ac
  408ea8:	cmp	x0, x2
  408eac:	b.lt	40904c <__fxstatat@plt+0x65fc>  // b.tstop
  408eb0:	cmp	x0, x2
  408eb4:	mov	x0, #0x0                   	// #0
  408eb8:	b.gt	408c80 <__fxstatat@plt+0x6230>
  408ebc:	cmp	w3, w5
  408ec0:	b.pl	408c80 <__fxstatat@plt+0x6230>  // b.nfrst
  408ec4:	cmp	x2, x1
  408ec8:	b.lt	40904c <__fxstatat@plt+0x65fc>  // b.tstop
  408ecc:	mov	x0, #0x0                   	// #0
  408ed0:	b.gt	408c80 <__fxstatat@plt+0x6230>
  408ed4:	mov	w0, w5
  408ed8:	sub	w0, w0, w3
  408edc:	lsr	w0, w0, #31
  408ee0:	b	408c80 <__fxstatat@plt+0x6230>
  408ee4:	ldr	w20, [x22, #416]
  408ee8:	tbz	w20, #31, 408ac0 <__fxstatat@plt+0x6070>
  408eec:	b	408ff4 <__fxstatat@plt+0x65a4>
  408ef0:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x1f80>
  408ef4:	add	x5, x5, #0x320
  408ef8:	b	408ad8 <__fxstatat@plt+0x6088>
  408efc:	mov	w0, #0x2e                  	// #46
  408f00:	strb	w0, [sp, #138]
  408f04:	b	408888 <__fxstatat@plt+0x5e38>
  408f08:	ldr	w2, [x25, #3656]
  408f0c:	add	x1, sp, #0x110
  408f10:	ldr	x0, [x21, #88]
  408f14:	mov	x3, #0x200                 	// #512
  408f18:	ldr	x4, [x25, #3648]
  408f1c:	bl	40e390 <__fxstatat@plt+0xb940>
  408f20:	mov	x24, x0
  408f24:	b	4088cc <__fxstatat@plt+0x5e7c>
  408f28:	ldr	w20, [x25, #4012]
  408f2c:	add	x1, sp, #0xd8
  408f30:	ldr	w4, [x25, #4020]
  408f34:	ldr	x3, [x21, #56]
  408f38:	add	w0, w20, #0x2
  408f3c:	ldr	w2, [x25, #4016]
  408f40:	add	w0, w0, w4
  408f44:	str	x27, [sp, #80]
  408f48:	subs	w2, w2, w0
  408f4c:	lsr	x4, x3, #32
  408f50:	csel	w2, w2, wzr, pl  // pl = nfrst
  408f54:	ubfx	w3, w3, #8, #12
  408f58:	and	w0, w4, #0xfffff000
  408f5c:	add	w20, w2, w20
  408f60:	orr	w0, w0, w3
  408f64:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  408f68:	mov	x26, x0
  408f6c:	ldr	x2, [x21, #56]
  408f70:	add	x1, sp, #0x110
  408f74:	ldr	w27, [x25, #4020]
  408f78:	lsr	x0, x2, #12
  408f7c:	bfxil	x0, x2, #0, #8
  408f80:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  408f84:	mov	w6, w27
  408f88:	mov	x7, x0
  408f8c:	mov	w4, w20
  408f90:	mov	x0, x19
  408f94:	mov	x5, x26
  408f98:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  408f9c:	mov	x2, #0xffffffffffffffff    	// #-1
  408fa0:	add	x3, x3, #0x340
  408fa4:	mov	w1, #0x1                   	// #1
  408fa8:	bl	402440 <__sprintf_chk@plt>
  408fac:	ldrsw	x0, [x25, #4016]
  408fb0:	ldr	x27, [sp, #80]
  408fb4:	add	x0, x0, #0x1
  408fb8:	add	x19, x19, x0
  408fbc:	b	408a4c <__fxstatat@plt+0x5ffc>
  408fc0:	add	x0, x22, x0, lsl #3
  408fc4:	ldr	x2, [x0, #384]
  408fc8:	b	408ca0 <__fxstatat@plt+0x6250>
  408fcc:	add	x20, x25, #0x1, lsl #12
  408fd0:	add	x0, x25, #0xfc8
  408fd4:	bl	40cec8 <__fxstatat@plt+0xa478>
  408fd8:	ldp	x2, x5, [sp, #144]
  408fdc:	ldp	x1, x3, [x20, #-56]
  408fe0:	sub	x0, x1, #0xf0c, lsl #12
  408fe4:	sub	x0, x0, #0x2ac
  408fe8:	cmp	x0, x2
  408fec:	b.ge	408eb0 <__fxstatat@plt+0x6460>  // b.tcont
  408ff0:	b	408ec4 <__fxstatat@plt+0x6474>
  408ff4:	mov	w20, #0x0                   	// #0
  408ff8:	str	wzr, [x22, #416]
  408ffc:	b	408ac0 <__fxstatat@plt+0x6070>
  409000:	ldrsw	x2, [sp, #232]
  409004:	add	x0, x25, #0x10
  409008:	add	x2, x0, x2, lsl #7
  40900c:	b	408a8c <__fxstatat@plt+0x603c>
  409010:	mov	w0, w19
  409014:	str	w2, [sp, #108]
  409018:	bl	40f360 <__fxstatat@plt+0xc910>
  40901c:	ldr	w2, [sp, #108]
  409020:	b	408dc4 <__fxstatat@plt+0x6374>
  409024:	mov	w0, w19
  409028:	str	w2, [sp, #108]
  40902c:	bl	40f360 <__fxstatat@plt+0xc910>
  409030:	ldr	w2, [sp, #108]
  409034:	b	408e14 <__fxstatat@plt+0x63c4>
  409038:	mov	w0, w19
  40903c:	str	w2, [sp, #108]
  409040:	bl	40f560 <__fxstatat@plt+0xcb10>
  409044:	ldr	w2, [sp, #108]
  409048:	b	408dec <__fxstatat@plt+0x639c>
  40904c:	mov	x0, #0x1                   	// #1
  409050:	b	408c80 <__fxstatat@plt+0x6230>
  409054:	ldr	w20, [x22, #416]
  409058:	tbz	w20, #31, 408ac0 <__fxstatat@plt+0x6070>
  40905c:	b	408a64 <__fxstatat@plt+0x6014>
  409060:	stp	x29, x30, [sp, #-96]!
  409064:	mov	x29, sp
  409068:	stp	x19, x20, [sp, #16]
  40906c:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  409070:	add	x19, x19, #0x5e0
  409074:	ldr	w0, [x19, #3636]
  409078:	cmp	w0, #0x2
  40907c:	b.eq	409238 <__fxstatat@plt+0x67e8>  // b.none
  409080:	b.ls	4090a4 <__fxstatat@plt+0x6654>  // b.plast
  409084:	cmp	w0, #0x3
  409088:	b.eq	409414 <__fxstatat@plt+0x69c4>  // b.none
  40908c:	cmp	w0, #0x4
  409090:	b.ne	4090cc <__fxstatat@plt+0x667c>  // b.any
  409094:	ldp	x19, x20, [sp, #16]
  409098:	mov	w0, #0x2c                  	// #44
  40909c:	ldp	x29, x30, [sp], #96
  4090a0:	b	408668 <__fxstatat@plt+0x5c18>
  4090a4:	stp	x21, x22, [sp, #32]
  4090a8:	cbz	w0, 409134 <__fxstatat@plt+0x66e4>
  4090ac:	ldr	x0, [x19, #3104]
  4090b0:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4090b4:	mov	x20, #0x0                   	// #0
  4090b8:	add	x21, x21, #0x5c0
  4090bc:	mov	w22, #0xa                   	// #10
  4090c0:	cbnz	x0, 4090f0 <__fxstatat@plt+0x66a0>
  4090c4:	nop
  4090c8:	ldp	x21, x22, [sp, #32]
  4090cc:	ldp	x19, x20, [sp, #16]
  4090d0:	ldp	x29, x30, [sp], #96
  4090d4:	ret
  4090d8:	str	x3, [x0, #40]
  4090dc:	add	x20, x20, #0x1
  4090e0:	ldr	x0, [x19, #3104]
  4090e4:	strb	w22, [x1]
  4090e8:	cmp	x0, x20
  4090ec:	b.ls	4090c8 <__fxstatat@plt+0x6678>  // b.plast
  4090f0:	ldr	x0, [x19, #3136]
  4090f4:	mov	x1, #0x0                   	// #0
  4090f8:	ldr	x0, [x0, x20, lsl #3]
  4090fc:	bl	408468 <__fxstatat@plt+0x5a18>
  409100:	ldr	x0, [x21]
  409104:	ldp	x1, x2, [x0, #40]
  409108:	add	x3, x1, #0x1
  40910c:	cmp	x1, x2
  409110:	b.cc	4090d8 <__fxstatat@plt+0x6688>  // b.lo, b.ul, b.last
  409114:	mov	w1, #0xa                   	// #10
  409118:	bl	402780 <__overflow@plt>
  40911c:	ldr	x0, [x19, #3104]
  409120:	add	x20, x20, #0x1
  409124:	cmp	x20, x0
  409128:	b.cc	4090f0 <__fxstatat@plt+0x66a0>  // b.lo, b.ul, b.last
  40912c:	ldp	x21, x22, [sp, #32]
  409130:	b	4090cc <__fxstatat@plt+0x667c>
  409134:	ldr	x0, [x19, #3104]
  409138:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40913c:	mov	x20, #0x0                   	// #0
  409140:	add	x21, x21, #0x5c0
  409144:	cbz	x0, 4090c8 <__fxstatat@plt+0x6678>
  409148:	adrp	x22, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40914c:	add	x22, x22, #0x370
  409150:	stp	x23, x24, [sp, #48]
  409154:	add	x24, x22, #0x48
  409158:	add	x23, x22, #0x40
  40915c:	stp	x25, x26, [sp, #64]
  409160:	add	x25, x22, #0x8
  409164:	b	409194 <__fxstatat@plt+0x6744>
  409168:	add	x2, x1, #0x1
  40916c:	str	x2, [x0, #40]
  409170:	mov	w0, #0xa                   	// #10
  409174:	strb	w0, [x1]
  409178:	ldr	x1, [x19, #3104]
  40917c:	add	x20, x20, #0x1
  409180:	ldr	x0, [x19, #3488]
  409184:	cmp	x1, x20
  409188:	add	x0, x0, #0x1
  40918c:	str	x0, [x19, #3488]
  409190:	b.ls	409220 <__fxstatat@plt+0x67d0>  // b.plast
  409194:	ldrb	w0, [x19, #3969]
  409198:	cbz	w0, 4091e0 <__fxstatat@plt+0x6790>
  40919c:	ldr	x0, [x22, #64]
  4091a0:	cbz	x0, 4091e0 <__fxstatat@plt+0x6790>
  4091a4:	cmp	x0, #0x1
  4091a8:	ldr	x1, [x22, #72]
  4091ac:	b.eq	4095d8 <__fxstatat@plt+0x6b88>  // b.none
  4091b0:	cmp	x0, #0x2
  4091b4:	b.eq	4095e8 <__fxstatat@plt+0x6b98>  // b.none
  4091b8:	mov	x1, x25
  4091bc:	mov	x0, x22
  4091c0:	bl	405170 <__fxstatat@plt+0x2720>
  4091c4:	mov	x1, x24
  4091c8:	mov	x0, x23
  4091cc:	bl	405170 <__fxstatat@plt+0x2720>
  4091d0:	add	x1, x22, #0x18
  4091d4:	add	x0, x22, #0x10
  4091d8:	bl	405170 <__fxstatat@plt+0x2720>
  4091dc:	nop
  4091e0:	ldr	x0, [x19, #3136]
  4091e4:	ldr	x0, [x0, x20, lsl #3]
  4091e8:	bl	408838 <__fxstatat@plt+0x5de8>
  4091ec:	ldr	x0, [x21]
  4091f0:	ldp	x1, x2, [x0, #40]
  4091f4:	cmp	x1, x2
  4091f8:	b.cc	409168 <__fxstatat@plt+0x6718>  // b.lo, b.ul, b.last
  4091fc:	mov	w1, #0xa                   	// #10
  409200:	bl	402780 <__overflow@plt>
  409204:	ldr	x0, [x19, #3488]
  409208:	add	x20, x20, #0x1
  40920c:	ldr	x1, [x19, #3104]
  409210:	add	x0, x0, #0x1
  409214:	str	x0, [x19, #3488]
  409218:	cmp	x20, x1
  40921c:	b.cc	409194 <__fxstatat@plt+0x6744>  // b.lo, b.ul, b.last
  409220:	ldp	x19, x20, [sp, #16]
  409224:	ldp	x21, x22, [sp, #32]
  409228:	ldp	x23, x24, [sp, #48]
  40922c:	ldp	x25, x26, [sp, #64]
  409230:	ldp	x29, x30, [sp], #96
  409234:	ret
  409238:	ldr	x0, [x19, #8]
  40923c:	cbz	x0, 409404 <__fxstatat@plt+0x69b4>
  409240:	ldr	x0, [x19, #3096]
  409244:	stp	x21, x22, [sp, #32]
  409248:	ldr	x20, [x19, #3104]
  40924c:	stp	x23, x24, [sp, #48]
  409250:	cmp	x20, x0
  409254:	stp	x25, x26, [sp, #64]
  409258:	csel	x20, x20, x0, ls  // ls = plast
  40925c:	bl	4048f0 <__fxstatat@plt+0x1ea0>
  409260:	ldr	x8, [x19, #3104]
  409264:	cbz	x8, 40930c <__fxstatat@plt+0x68bc>
  409268:	mov	x21, #0x0                   	// #0
  40926c:	nop
  409270:	ldr	x0, [x19, #3136]
  409274:	ldr	x0, [x0, x21, lsl #3]
  409278:	bl	4058d8 <__fxstatat@plt+0x2e88>
  40927c:	cbz	x20, 409638 <__fxstatat@plt+0x6be8>
  409280:	ldr	x10, [x19, #8]
  409284:	add	x9, x0, #0x2
  409288:	ldr	x8, [x19, #3104]
  40928c:	mov	x3, #0x0                   	// #0
  409290:	ldr	x2, [x19, #3120]
  409294:	nop
  409298:	mov	x4, x3
  40929c:	ldrb	w5, [x2]
  4092a0:	add	x3, x3, #0x1
  4092a4:	add	x1, x8, x3
  4092a8:	sub	x1, x1, #0x1
  4092ac:	cbz	w5, 4092f4 <__fxstatat@plt+0x68a4>
  4092b0:	udiv	x1, x1, x3
  4092b4:	ldr	x6, [x2, #16]
  4092b8:	udiv	x1, x21, x1
  4092bc:	ldr	x7, [x6, x1, lsl #3]
  4092c0:	cmp	x1, x4
  4092c4:	csel	x5, x9, x0, ne  // ne = any
  4092c8:	cmp	x7, x5
  4092cc:	b.cs	4092f4 <__fxstatat@plt+0x68a4>  // b.hs, b.nlast
  4092d0:	ldr	x4, [x2, #8]
  4092d4:	sub	x4, x4, x7
  4092d8:	add	x4, x4, x5
  4092dc:	str	x4, [x2, #8]
  4092e0:	str	x5, [x6, x1, lsl #3]
  4092e4:	ldr	x1, [x2, #8]
  4092e8:	cmp	x1, x10
  4092ec:	cset	w1, cc  // cc = lo, ul, last
  4092f0:	strb	w1, [x2]
  4092f4:	add	x2, x2, #0x18
  4092f8:	cmp	x20, x3
  4092fc:	b.ne	409298 <__fxstatat@plt+0x6848>  // b.any
  409300:	add	x21, x21, #0x1
  409304:	cmp	x21, x8
  409308:	b.cc	409270 <__fxstatat@plt+0x6820>  // b.lo, b.ul, b.last
  40930c:	cmp	x20, #0x1
  409310:	ldr	x2, [x19, #3120]
  409314:	b.ls	409698 <__fxstatat@plt+0x6c48>  // b.plast
  409318:	add	x0, x20, x20, lsl #1
  40931c:	add	x0, x2, x0, lsl #3
  409320:	sub	x0, x0, #0x18
  409324:	b	409334 <__fxstatat@plt+0x68e4>
  409328:	sub	x20, x20, #0x1
  40932c:	cmp	x20, #0x1
  409330:	b.eq	409660 <__fxstatat@plt+0x6c10>  // b.none
  409334:	ldrb	w1, [x0]
  409338:	mov	x23, x0
  40933c:	sub	x0, x0, #0x18
  409340:	cbz	w1, 409328 <__fxstatat@plt+0x68d8>
  409344:	udiv	x25, x8, x20
  409348:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40934c:	mov	x24, #0x0                   	// #0
  409350:	add	x21, x21, #0x5c0
  409354:	msub	x20, x25, x20, x8
  409358:	cmp	x20, #0x0
  40935c:	cinc	x25, x25, ne  // ne = any
  409360:	cbz	x25, 409220 <__fxstatat@plt+0x67d0>
  409364:	stp	x27, x28, [sp, #80]
  409368:	mov	x28, x24
  40936c:	mov	x22, #0x0                   	// #0
  409370:	mov	x27, #0x0                   	// #0
  409374:	b	409380 <__fxstatat@plt+0x6930>
  409378:	mov	x1, x27
  40937c:	bl	404c80 <__fxstatat@plt+0x2230>
  409380:	ldr	x0, [x19, #3136]
  409384:	ldr	x26, [x0, x28, lsl #3]
  409388:	add	x28, x28, x25
  40938c:	mov	x0, x26
  409390:	bl	4058d8 <__fxstatat@plt+0x2e88>
  409394:	ldr	x3, [x23, #16]
  409398:	mov	x1, x27
  40939c:	mov	x20, x0
  4093a0:	mov	x0, x26
  4093a4:	ldr	x26, [x3, x22]
  4093a8:	bl	408468 <__fxstatat@plt+0x5a18>
  4093ac:	ldr	x1, [x19, #3104]
  4093b0:	add	x0, x20, x27
  4093b4:	add	x22, x22, #0x8
  4093b8:	add	x27, x27, x26
  4093bc:	cmp	x28, x1
  4093c0:	b.cc	409378 <__fxstatat@plt+0x6928>  // b.lo, b.ul, b.last
  4093c4:	ldr	x0, [x21]
  4093c8:	ldp	x1, x2, [x0, #40]
  4093cc:	cmp	x1, x2
  4093d0:	b.cs	409640 <__fxstatat@plt+0x6bf0>  // b.hs, b.nlast
  4093d4:	add	x2, x1, #0x1
  4093d8:	str	x2, [x0, #40]
  4093dc:	mov	w0, #0xa                   	// #10
  4093e0:	strb	w0, [x1]
  4093e4:	add	x24, x24, #0x1
  4093e8:	cmp	x25, x24
  4093ec:	b.ne	409368 <__fxstatat@plt+0x6918>  // b.any
  4093f0:	ldp	x21, x22, [sp, #32]
  4093f4:	ldp	x23, x24, [sp, #48]
  4093f8:	ldp	x25, x26, [sp, #64]
  4093fc:	ldp	x27, x28, [sp, #80]
  409400:	b	4090cc <__fxstatat@plt+0x667c>
  409404:	ldp	x19, x20, [sp, #16]
  409408:	mov	w0, #0x20                  	// #32
  40940c:	ldp	x29, x30, [sp], #96
  409410:	b	408668 <__fxstatat@plt+0x5c18>
  409414:	ldr	x0, [x19, #8]
  409418:	cbz	x0, 409404 <__fxstatat@plt+0x69b4>
  40941c:	ldr	x0, [x19, #3096]
  409420:	stp	x21, x22, [sp, #32]
  409424:	mov	x21, #0x0                   	// #0
  409428:	ldr	x20, [x19, #3104]
  40942c:	stp	x23, x24, [sp, #48]
  409430:	cmp	x20, x0
  409434:	stp	x25, x26, [sp, #64]
  409438:	csel	x20, x20, x0, ls  // ls = plast
  40943c:	stp	x27, x28, [sp, #80]
  409440:	bl	4048f0 <__fxstatat@plt+0x1ea0>
  409444:	ldr	x0, [x19, #3104]
  409448:	cbz	x0, 4094e0 <__fxstatat@plt+0x6a90>
  40944c:	nop
  409450:	ldr	x0, [x19, #3136]
  409454:	ldr	x0, [x0, x21, lsl #3]
  409458:	bl	4058d8 <__fxstatat@plt+0x2e88>
  40945c:	cbz	x20, 4094d0 <__fxstatat@plt+0x6a80>
  409460:	ldr	x9, [x19, #8]
  409464:	add	x8, x0, #0x2
  409468:	ldr	x1, [x19, #3120]
  40946c:	mov	x3, #0x0                   	// #0
  409470:	ldrb	w2, [x1]
  409474:	mov	x4, x3
  409478:	add	x3, x3, #0x1
  40947c:	cbz	w2, 4094c4 <__fxstatat@plt+0x6a74>
  409480:	udiv	x2, x21, x3
  409484:	ldr	x6, [x1, #16]
  409488:	msub	x2, x2, x3, x21
  40948c:	cmp	x2, x4
  409490:	csel	x5, x8, x0, ne  // ne = any
  409494:	ldr	x7, [x6, x2, lsl #3]
  409498:	cmp	x7, x5
  40949c:	b.cs	4094c4 <__fxstatat@plt+0x6a74>  // b.hs, b.nlast
  4094a0:	ldr	x4, [x1, #8]
  4094a4:	sub	x4, x4, x7
  4094a8:	add	x4, x4, x5
  4094ac:	str	x4, [x1, #8]
  4094b0:	str	x5, [x6, x2, lsl #3]
  4094b4:	ldr	x2, [x1, #8]
  4094b8:	cmp	x2, x9
  4094bc:	cset	w2, cc  // cc = lo, ul, last
  4094c0:	strb	w2, [x1]
  4094c4:	add	x1, x1, #0x18
  4094c8:	cmp	x20, x3
  4094cc:	b.ne	409470 <__fxstatat@plt+0x6a20>  // b.any
  4094d0:	ldr	x0, [x19, #3104]
  4094d4:	add	x21, x21, #0x1
  4094d8:	cmp	x21, x0
  4094dc:	b.cc	409450 <__fxstatat@plt+0x6a00>  // b.lo, b.ul, b.last
  4094e0:	cmp	x20, #0x1
  4094e4:	ldr	x2, [x19, #3120]
  4094e8:	b.ls	409688 <__fxstatat@plt+0x6c38>  // b.plast
  4094ec:	add	x0, x20, x20, lsl #1
  4094f0:	add	x0, x2, x0, lsl #3
  4094f4:	sub	x0, x0, #0x18
  4094f8:	b	409508 <__fxstatat@plt+0x6ab8>
  4094fc:	sub	x20, x20, #0x1
  409500:	cmp	x20, #0x1
  409504:	b.eq	409658 <__fxstatat@plt+0x6c08>  // b.none
  409508:	ldrb	w1, [x0]
  40950c:	mov	x26, x0
  409510:	sub	x0, x0, #0x18
  409514:	cbz	w1, 4094fc <__fxstatat@plt+0x6aac>
  409518:	ldr	x0, [x19, #3136]
  40951c:	mov	x22, #0x1                   	// #1
  409520:	mov	x27, #0x0                   	// #0
  409524:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  409528:	mov	w25, #0xa                   	// #10
  40952c:	ldr	x23, [x0]
  409530:	mov	x0, x23
  409534:	bl	4058d8 <__fxstatat@plt+0x2e88>
  409538:	ldr	x2, [x26, #16]
  40953c:	mov	x24, x0
  409540:	mov	x1, #0x0                   	// #0
  409544:	mov	x0, x23
  409548:	ldr	x28, [x2]
  40954c:	bl	408468 <__fxstatat@plt+0x5a18>
  409550:	ldr	x0, [x19, #3104]
  409554:	cmp	x0, x22
  409558:	b.hi	4095b8 <__fxstatat@plt+0x6b68>  // b.pmore
  40955c:	b	409604 <__fxstatat@plt+0x6bb4>
  409560:	ldr	x0, [x21, #1472]
  409564:	mov	x27, #0x0                   	// #0
  409568:	ldp	x1, x2, [x0, #40]
  40956c:	add	x3, x1, #0x1
  409570:	cmp	x1, x2
  409574:	b.cs	40964c <__fxstatat@plt+0x6bfc>  // b.hs, b.nlast
  409578:	str	x3, [x0, #40]
  40957c:	strb	w25, [x1]
  409580:	ldr	x0, [x19, #3136]
  409584:	mov	x1, x27
  409588:	ldr	x24, [x0, x22, lsl #3]
  40958c:	add	x22, x22, #0x1
  409590:	mov	x0, x24
  409594:	bl	408468 <__fxstatat@plt+0x5a18>
  409598:	mov	x0, x24
  40959c:	bl	4058d8 <__fxstatat@plt+0x2e88>
  4095a0:	ldr	x1, [x26, #16]
  4095a4:	mov	x24, x0
  4095a8:	ldr	x0, [x19, #3104]
  4095ac:	ldr	x28, [x1, x23, lsl #3]
  4095b0:	cmp	x22, x0
  4095b4:	b.cs	409604 <__fxstatat@plt+0x6bb4>  // b.hs, b.nlast
  4095b8:	udiv	x23, x22, x20
  4095bc:	msub	x23, x23, x20, x22
  4095c0:	cbz	x23, 409560 <__fxstatat@plt+0x6b10>
  4095c4:	add	x0, x27, x24
  4095c8:	add	x27, x27, x28
  4095cc:	mov	x1, x27
  4095d0:	bl	404c80 <__fxstatat@plt+0x2230>
  4095d4:	b	409580 <__fxstatat@plt+0x6b30>
  4095d8:	ldrb	w0, [x1]
  4095dc:	cmp	w0, #0x30
  4095e0:	b.ne	4091b8 <__fxstatat@plt+0x6768>  // b.any
  4095e4:	b	4091e0 <__fxstatat@plt+0x6790>
  4095e8:	ldrb	w0, [x1]
  4095ec:	cmp	w0, #0x30
  4095f0:	b.ne	4091b8 <__fxstatat@plt+0x6768>  // b.any
  4095f4:	ldrb	w0, [x1, #1]
  4095f8:	cmp	w0, #0x30
  4095fc:	b.eq	4091e0 <__fxstatat@plt+0x6790>  // b.none
  409600:	b	4091b8 <__fxstatat@plt+0x6768>
  409604:	ldr	x0, [x21, #1472]
  409608:	ldp	x1, x2, [x0, #40]
  40960c:	cmp	x1, x2
  409610:	b.cs	409668 <__fxstatat@plt+0x6c18>  // b.hs, b.nlast
  409614:	add	x2, x1, #0x1
  409618:	str	x2, [x0, #40]
  40961c:	mov	w0, #0xa                   	// #10
  409620:	strb	w0, [x1]
  409624:	ldp	x21, x22, [sp, #32]
  409628:	ldp	x23, x24, [sp, #48]
  40962c:	ldp	x25, x26, [sp, #64]
  409630:	ldp	x27, x28, [sp, #80]
  409634:	b	4090cc <__fxstatat@plt+0x667c>
  409638:	ldr	x8, [x19, #3104]
  40963c:	b	409300 <__fxstatat@plt+0x68b0>
  409640:	mov	w1, #0xa                   	// #10
  409644:	bl	402780 <__overflow@plt>
  409648:	b	4093e4 <__fxstatat@plt+0x6994>
  40964c:	mov	w1, #0xa                   	// #10
  409650:	bl	402780 <__overflow@plt>
  409654:	b	409580 <__fxstatat@plt+0x6b30>
  409658:	mov	x26, x2
  40965c:	b	409518 <__fxstatat@plt+0x6ac8>
  409660:	mov	x23, x2
  409664:	b	409344 <__fxstatat@plt+0x68f4>
  409668:	ldp	x19, x20, [sp, #16]
  40966c:	mov	w1, #0xa                   	// #10
  409670:	ldp	x21, x22, [sp, #32]
  409674:	ldp	x23, x24, [sp, #48]
  409678:	ldp	x25, x26, [sp, #64]
  40967c:	ldp	x27, x28, [sp, #80]
  409680:	ldp	x29, x30, [sp], #96
  409684:	b	402780 <__overflow@plt>
  409688:	add	x26, x20, x20, lsl #1
  40968c:	add	x2, x2, x26, lsl #3
  409690:	sub	x26, x2, #0x18
  409694:	b	409518 <__fxstatat@plt+0x6ac8>
  409698:	add	x23, x20, x20, lsl #1
  40969c:	add	x2, x2, x23, lsl #3
  4096a0:	sub	x23, x2, #0x18
  4096a4:	b	409344 <__fxstatat@plt+0x68f4>
  4096a8:	sub	sp, sp, #0x320
  4096ac:	mov	x5, x3
  4096b0:	stp	x29, x30, [sp]
  4096b4:	mov	x29, sp
  4096b8:	stp	x19, x20, [sp, #16]
  4096bc:	adrp	x20, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4096c0:	add	x20, x20, #0x5e0
  4096c4:	stp	x21, x22, [sp, #32]
  4096c8:	adrp	x21, 434000 <__progname@@GLIBC_2.17+0xa38>
  4096cc:	add	x21, x21, #0x6e0
  4096d0:	mov	x22, x0
  4096d4:	stp	x23, x24, [sp, #48]
  4096d8:	mov	w23, w1
  4096dc:	ldur	x0, [x21, #-208]
  4096e0:	stp	x25, x26, [sp, #64]
  4096e4:	and	w24, w2, #0xff
  4096e8:	ldr	x4, [x20, #3104]
  4096ec:	stp	x27, x28, [sp, #80]
  4096f0:	cmp	x4, x0
  4096f4:	ldr	x0, [x20, #3152]
  4096f8:	b.ne	409748 <__fxstatat@plt+0x6cf8>  // b.any
  4096fc:	mov	x1, #0x170                 	// #368
  409700:	umulh	x2, x4, x1
  409704:	mul	x1, x4, x1
  409708:	cmp	x2, #0x0
  40970c:	cset	x2, ne  // ne = any
  409710:	tbnz	x1, #63, 40a580 <__fxstatat@plt+0x7b30>
  409714:	cbnz	x2, 40a580 <__fxstatat@plt+0x7b30>
  409718:	add	x1, x4, x4, lsl #1
  40971c:	str	x3, [x29, #104]
  409720:	lsl	x1, x1, #3
  409724:	sub	x1, x1, x4
  409728:	lsl	x1, x1, #4
  40972c:	bl	415c70 <__fxstatat@plt+0x13220>
  409730:	ldur	x1, [x21, #-208]
  409734:	str	x0, [x20, #3152]
  409738:	ldr	x5, [x29, #104]
  40973c:	ldr	x4, [x20, #3104]
  409740:	lsl	x1, x1, #1
  409744:	stur	x1, [x21, #-208]
  409748:	add	x19, x4, x4, lsl #1
  40974c:	ldrb	w1, [x20, #3634]
  409750:	mov	w2, #0xffffffff            	// #-1
  409754:	lsl	x19, x19, #3
  409758:	sub	x4, x19, x4
  40975c:	add	x19, x0, x4, lsl #3
  409760:	stp	xzr, xzr, [x19, #144]
  409764:	str	xzr, [x19, #176]
  409768:	stp	xzr, xzr, [x19]
  40976c:	stp	xzr, xzr, [x19, #16]
  409770:	stp	xzr, xzr, [x19, #32]
  409774:	stp	xzr, xzr, [x19, #48]
  409778:	stp	xzr, xzr, [x19, #64]
  40977c:	stp	xzr, xzr, [x19, #80]
  409780:	stp	xzr, xzr, [x19, #96]
  409784:	stp	xzr, xzr, [x19, #112]
  409788:	stp	xzr, xzr, [x19, #128]
  40978c:	str	w23, [x19, #152]
  409790:	stp	xzr, xzr, [x19, #160]
  409794:	str	w2, [x19, #180]
  409798:	cbnz	w1, 4097a4 <__fxstatat@plt+0x6d54>
  40979c:	ldrb	w0, [x20, #3633]
  4097a0:	cbnz	w0, 409d5c <__fxstatat@plt+0x730c>
  4097a4:	ldurb	w3, [x21, #-200]
  4097a8:	cbnz	w24, 409940 <__fxstatat@plt+0x6ef0>
  4097ac:	cbnz	w3, 409bc8 <__fxstatat@plt+0x7178>
  4097b0:	ldurb	w0, [x21, #-199]
  4097b4:	cbnz	w0, 409808 <__fxstatat@plt+0x6db8>
  4097b8:	cmp	w23, #0x3
  4097bc:	b.eq	40a318 <__fxstatat@plt+0x78c8>  // b.none
  4097c0:	ldrb	w0, [x20, #3635]
  4097c4:	cbnz	w0, 40a0e4 <__fxstatat@plt+0x7694>
  4097c8:	ldurb	w1, [x21, #-198]
  4097cc:	cbz	w1, 40a248 <__fxstatat@plt+0x77f8>
  4097d0:	cmp	w23, #0x0
  4097d4:	cset	w1, eq  // eq = none
  4097d8:	cmp	w1, #0x0
  4097dc:	ccmp	w23, #0x6, #0x4, eq  // eq = none
  4097e0:	b.ne	40a188 <__fxstatat@plt+0x7738>  // b.any
  4097e4:	ldur	w2, [x21, #-196]
  4097e8:	cmp	w2, #0x5
  4097ec:	b.eq	40a514 <__fxstatat@plt+0x7ac4>  // b.none
  4097f0:	ldrb	w2, [x20, #3970]
  4097f4:	cbnz	w2, 409808 <__fxstatat@plt+0x6db8>
  4097f8:	ldurb	w2, [x21, #-192]
  4097fc:	cbnz	w2, 409808 <__fxstatat@plt+0x6db8>
  409800:	cbz	w0, 40a17c <__fxstatat@plt+0x772c>
  409804:	nop
  409808:	ldrb	w25, [x22]
  40980c:	add	x26, x19, #0x18
  409810:	cmp	w25, #0x2f
  409814:	b.eq	409bf4 <__fxstatat@plt+0x71a4>  // b.none
  409818:	ldrb	w27, [x5]
  40981c:	mov	x28, x22
  409820:	cbnz	w27, 409b28 <__fxstatat@plt+0x70d8>
  409824:	nop
  409828:	ldur	w25, [x21, #-196]
  40982c:	cmp	w25, #0x4
  409830:	b.hi	409a14 <__fxstatat@plt+0x6fc4>  // b.pmore
  409834:	cmp	w25, #0x2
  409838:	b.hi	409d54 <__fxstatat@plt+0x7304>  // b.pmore
  40983c:	mov	x2, x26
  409840:	mov	x1, x28
  409844:	mov	w0, #0x0                   	// #0
  409848:	bl	402900 <__lxstat@plt>
  40984c:	cbnz	w0, 409a30 <__fxstatat@plt+0x6fe0>
  409850:	mov	w0, #0x1                   	// #1
  409854:	strb	w0, [x19, #168]
  409858:	cmp	w23, #0x5
  40985c:	b.eq	409aa8 <__fxstatat@plt+0x7058>  // b.none
  409860:	ldr	w0, [x19, #40]
  409864:	and	w0, w0, #0xf000
  409868:	cmp	w0, #0x8, lsl #12
  40986c:	b.eq	409aa8 <__fxstatat@plt+0x7058>  // b.none
  409870:	ldr	w23, [x20, #3636]
  409874:	cbz	w23, 409880 <__fxstatat@plt+0x6e30>
  409878:	ldrb	w0, [x20, #3664]
  40987c:	cbz	w0, 4098bc <__fxstatat@plt+0x6e6c>
  409880:	bl	4029e0 <__errno_location@plt>
  409884:	mov	x25, x0
  409888:	ldur	x27, [x21, #-184]
  40988c:	mov	w0, #0x5f                  	// #95
  409890:	ldr	x2, [x19, #24]
  409894:	cmp	x2, x27
  409898:	b.eq	4098a0 <__fxstatat@plt+0x6e50>  // b.none
  40989c:	stur	x2, [x21, #-184]
  4098a0:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4098a4:	add	x1, x1, #0x370
  4098a8:	str	w0, [x25]
  4098ac:	add	x1, x1, #0x1a8
  4098b0:	str	x1, [x19, #160]
  4098b4:	cbz	w23, 409e98 <__fxstatat@plt+0x7448>
  4098b8:	str	wzr, [x19, #172]
  4098bc:	ldr	w0, [x19, #40]
  4098c0:	and	w0, w0, #0xf000
  4098c4:	cmp	w0, #0xa, lsl #12
  4098c8:	b.eq	409ee8 <__fxstatat@plt+0x7498>  // b.none
  4098cc:	cmp	w0, #0x4, lsl #12
  4098d0:	b.eq	409fcc <__fxstatat@plt+0x757c>  // b.none
  4098d4:	ldr	w23, [x20, #3636]
  4098d8:	mov	w0, #0x5                   	// #5
  4098dc:	str	w0, [x19, #152]
  4098e0:	ldr	x25, [x19, #88]
  4098e4:	cbz	w23, 409c08 <__fxstatat@plt+0x71b8>
  4098e8:	ldrb	w0, [x20, #3644]
  4098ec:	cbnz	w0, 409c08 <__fxstatat@plt+0x71b8>
  4098f0:	ldrb	w0, [x20, #3664]
  4098f4:	cbnz	w0, 409dcc <__fxstatat@plt+0x737c>
  4098f8:	ldrb	w0, [x20, #3635]
  4098fc:	cbnz	w0, 409d30 <__fxstatat@plt+0x72e0>
  409900:	mov	x0, x22
  409904:	bl	415dc8 <__fxstatat@plt+0x13378>
  409908:	str	x0, [x19]
  40990c:	ldr	x0, [x20, #3104]
  409910:	add	x0, x0, #0x1
  409914:	str	x0, [x20, #3104]
  409918:	mov	sp, x29
  40991c:	mov	x0, x25
  409920:	ldp	x29, x30, [sp]
  409924:	ldp	x19, x20, [sp, #16]
  409928:	ldp	x21, x22, [sp, #32]
  40992c:	ldp	x23, x24, [sp, #48]
  409930:	ldp	x25, x26, [sp, #64]
  409934:	ldp	x27, x28, [sp, #80]
  409938:	add	sp, sp, #0x320
  40993c:	ret
  409940:	ldrb	w25, [x22]
  409944:	add	x26, x19, #0x18
  409948:	mov	x28, x22
  40994c:	cmp	w25, #0x2f
  409950:	b.eq	40995c <__fxstatat@plt+0x6f0c>  // b.none
  409954:	ldrb	w27, [x5]
  409958:	cbnz	w27, 409b28 <__fxstatat@plt+0x70d8>
  40995c:	cbz	w3, 409828 <__fxstatat@plt+0x6dd8>
  409960:	mov	x0, x28
  409964:	mov	w1, #0x2                   	// #2
  409968:	bl	40ba78 <__fxstatat@plt+0x9028>
  40996c:	str	x0, [x19, #16]
  409970:	cbnz	x0, 409828 <__fxstatat@plt+0x6dd8>
  409974:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  409978:	add	x1, x1, #0x360
  40997c:	mov	w2, #0x5                   	// #5
  409980:	bl	402970 <dcgettext@plt>
  409984:	mov	x25, x0
  409988:	bl	4029e0 <__errno_location@plt>
  40998c:	mov	x2, x0
  409990:	mov	x1, x28
  409994:	mov	w0, #0x4                   	// #4
  409998:	ldr	w27, [x2]
  40999c:	bl	413ba0 <__fxstatat@plt+0x11150>
  4099a0:	mov	x2, x25
  4099a4:	mov	x3, x0
  4099a8:	mov	w1, w27
  4099ac:	mov	w0, #0x0                   	// #0
  4099b0:	bl	402490 <error@plt>
  4099b4:	cbz	w24, 40a140 <__fxstatat@plt+0x76f0>
  4099b8:	ldur	w25, [x21, #-196]
  4099bc:	mov	w0, #0x2                   	// #2
  4099c0:	stur	w0, [x21, #-188]
  4099c4:	cmp	w25, #0x4
  4099c8:	b.hi	409a14 <__fxstatat@plt+0x6fc4>  // b.pmore
  4099cc:	cmp	w25, w0
  4099d0:	b.ls	40983c <__fxstatat@plt+0x6dec>  // b.plast
  4099d4:	nop
  4099d8:	mov	x2, x26
  4099dc:	mov	x1, x28
  4099e0:	mov	w0, #0x0                   	// #0
  4099e4:	bl	402a00 <__xstat@plt>
  4099e8:	cmp	w25, #0x3
  4099ec:	b.eq	409a04 <__fxstatat@plt+0x6fb4>  // b.none
  4099f0:	tbnz	w0, #31, 409dec <__fxstatat@plt+0x739c>
  4099f4:	ldr	w1, [x19, #40]
  4099f8:	and	w1, w1, #0xf000
  4099fc:	cmp	w1, #0x4, lsl #12
  409a00:	b.ne	40983c <__fxstatat@plt+0x6dec>  // b.any
  409a04:	cbz	w0, 409850 <__fxstatat@plt+0x6e00>
  409a08:	bl	4029e0 <__errno_location@plt>
  409a0c:	mov	x25, x0
  409a10:	b	409e00 <__fxstatat@plt+0x73b0>
  409a14:	cmp	w25, #0x5
  409a18:	b.ne	40983c <__fxstatat@plt+0x6dec>  // b.any
  409a1c:	mov	x2, x26
  409a20:	mov	x1, x28
  409a24:	mov	w0, #0x0                   	// #0
  409a28:	bl	402a00 <__xstat@plt>
  409a2c:	cbz	w0, 409850 <__fxstatat@plt+0x6e00>
  409a30:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  409a34:	add	x1, x1, #0x378
  409a38:	mov	w2, #0x5                   	// #5
  409a3c:	mov	x0, #0x0                   	// #0
  409a40:	bl	402970 <dcgettext@plt>
  409a44:	mov	x23, x0
  409a48:	bl	4029e0 <__errno_location@plt>
  409a4c:	mov	x2, x0
  409a50:	mov	x1, x28
  409a54:	mov	w0, #0x4                   	// #4
  409a58:	ldr	w25, [x2]
  409a5c:	bl	413ba0 <__fxstatat@plt+0x11150>
  409a60:	mov	x2, x23
  409a64:	mov	x3, x0
  409a68:	mov	w1, w25
  409a6c:	mov	w0, #0x0                   	// #0
  409a70:	bl	402490 <error@plt>
  409a74:	cbnz	w24, 409e40 <__fxstatat@plt+0x73f0>
  409a78:	ldur	w0, [x21, #-188]
  409a7c:	cbnz	w0, 409a88 <__fxstatat@plt+0x7038>
  409a80:	mov	w0, #0x1                   	// #1
  409a84:	stur	w0, [x21, #-188]
  409a88:	mov	x0, x22
  409a8c:	bl	415dc8 <__fxstatat@plt+0x13378>
  409a90:	ldr	x1, [x20, #3104]
  409a94:	mov	x25, #0x0                   	// #0
  409a98:	str	x0, [x19]
  409a9c:	add	x1, x1, #0x1
  409aa0:	str	x1, [x20, #3104]
  409aa4:	b	409918 <__fxstatat@plt+0x6ec8>
  409aa8:	ldrb	w23, [x20, #3969]
  409aac:	cbz	w23, 409870 <__fxstatat@plt+0x6e20>
  409ab0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  409ab4:	add	x0, x0, #0x370
  409ab8:	ldr	x1, [x0, #336]
  409abc:	cbz	x1, 409870 <__fxstatat@plt+0x6e20>
  409ac0:	cmp	x1, #0x1
  409ac4:	ldr	x0, [x0, #344]
  409ac8:	b.eq	40a47c <__fxstatat@plt+0x7a2c>  // b.none
  409acc:	cmp	x1, #0x2
  409ad0:	b.eq	40a160 <__fxstatat@plt+0x7710>  // b.none
  409ad4:	ldur	x0, [x21, #-160]
  409ad8:	ldr	x1, [x19, #24]
  409adc:	cmp	x1, x0
  409ae0:	b.eq	40a2a8 <__fxstatat@plt+0x7858>  // b.none
  409ae4:	mov	x0, x28
  409ae8:	bl	402910 <cap_get_file@plt>
  409aec:	mov	x25, x0
  409af0:	cbz	x0, 40a2c0 <__fxstatat@plt+0x7870>
  409af4:	mov	x1, #0x0                   	// #0
  409af8:	bl	4023e0 <cap_to_text@plt>
  409afc:	mov	x1, x0
  409b00:	mov	x0, x25
  409b04:	mov	x25, x1
  409b08:	bl	402950 <cap_free@plt>
  409b0c:	cbz	x25, 40a2c0 <__fxstatat@plt+0x7870>
  409b10:	ldrb	w27, [x25]
  409b14:	mov	x0, x25
  409b18:	bl	402950 <cap_free@plt>
  409b1c:	cbz	w27, 40a2c0 <__fxstatat@plt+0x7870>
  409b20:	strb	w23, [x19, #176]
  409b24:	b	409870 <__fxstatat@plt+0x6e20>
  409b28:	mov	x0, x22
  409b2c:	str	w3, [x29, #96]
  409b30:	str	x5, [x29, #104]
  409b34:	bl	402430 <strlen@plt>
  409b38:	ldr	x5, [x29, #104]
  409b3c:	mov	x28, x0
  409b40:	mov	x0, x5
  409b44:	bl	402430 <strlen@plt>
  409b48:	add	x1, x28, x0
  409b4c:	add	x1, x1, #0x11
  409b50:	ldr	w3, [x29, #96]
  409b54:	and	x1, x1, #0xfffffffffffffff0
  409b58:	cmp	w27, #0x2e
  409b5c:	sub	sp, sp, x1
  409b60:	mov	x28, sp
  409b64:	ldr	x5, [x29, #104]
  409b68:	b.eq	409e88 <__fxstatat@plt+0x7438>  // b.none
  409b6c:	mov	x0, x28
  409b70:	mov	x1, x5
  409b74:	nop
  409b78:	mov	x2, x0
  409b7c:	strb	w27, [x0], #1
  409b80:	ldrb	w27, [x1, #1]!
  409b84:	cbnz	w27, 409b78 <__fxstatat@plt+0x7128>
  409b88:	cmp	x5, x1
  409b8c:	b.cs	409ba8 <__fxstatat@plt+0x7158>  // b.hs, b.nlast
  409b90:	ldurb	w1, [x1, #-1]
  409b94:	cmp	w1, #0x2f
  409b98:	b.eq	409ba8 <__fxstatat@plt+0x7158>  // b.none
  409b9c:	mov	w1, #0x2f                  	// #47
  409ba0:	strb	w1, [x0]
  409ba4:	add	x0, x2, #0x2
  409ba8:	cbz	w25, 409bbc <__fxstatat@plt+0x716c>
  409bac:	mov	x1, x22
  409bb0:	strb	w25, [x0], #1
  409bb4:	ldrb	w25, [x1, #1]!
  409bb8:	cbnz	w25, 409bb0 <__fxstatat@plt+0x7160>
  409bbc:	strb	wzr, [x0]
  409bc0:	cbz	w3, 409828 <__fxstatat@plt+0x6dd8>
  409bc4:	b	409960 <__fxstatat@plt+0x6f10>
  409bc8:	ldrb	w25, [x22]
  409bcc:	add	x26, x19, #0x18
  409bd0:	cmp	w25, #0x2f
  409bd4:	b.eq	409be0 <__fxstatat@plt+0x7190>  // b.none
  409bd8:	ldrb	w27, [x5]
  409bdc:	cbnz	w27, 409b28 <__fxstatat@plt+0x70d8>
  409be0:	mov	x0, x22
  409be4:	mov	w1, #0x2                   	// #2
  409be8:	bl	40ba78 <__fxstatat@plt+0x9028>
  409bec:	str	x0, [x19, #16]
  409bf0:	cbz	x0, 40a0fc <__fxstatat@plt+0x76ac>
  409bf4:	ldur	w25, [x21, #-196]
  409bf8:	mov	x28, x22
  409bfc:	cmp	w25, #0x4
  409c00:	b.ls	409834 <__fxstatat@plt+0x6de4>  // b.plast
  409c04:	b	409a14 <__fxstatat@plt+0x6fc4>
  409c08:	ldr	w2, [x20, #3656]
  409c0c:	mov	x3, #0x200                 	// #512
  409c10:	ldr	x4, [x20, #3648]
  409c14:	add	x21, x29, #0x90
  409c18:	mov	x1, x21
  409c1c:	mov	x0, x25
  409c20:	bl	40e390 <__fxstatat@plt+0xb940>
  409c24:	mov	w1, #0x0                   	// #0
  409c28:	bl	40fea0 <__fxstatat@plt+0xd450>
  409c2c:	ldr	w1, [x20, #3660]
  409c30:	cmp	w0, w1
  409c34:	b.le	409c3c <__fxstatat@plt+0x71ec>
  409c38:	str	w0, [x20, #3660]
  409c3c:	ldr	w23, [x20, #3636]
  409c40:	cbnz	w23, 4098f0 <__fxstatat@plt+0x6ea0>
  409c44:	adrp	x26, 433000 <_obstack_memory_used@@Base+0x1bf80>
  409c48:	add	x26, x26, #0x370
  409c4c:	ldrb	w0, [x26, #400]
  409c50:	cbnz	w0, 409ff8 <__fxstatat@plt+0x75a8>
  409c54:	ldrb	w0, [x26, #401]
  409c58:	cbnz	w0, 40a080 <__fxstatat@plt+0x7630>
  409c5c:	ldrb	w0, [x20, #3992]
  409c60:	cbnz	w0, 40a03c <__fxstatat@plt+0x75ec>
  409c64:	ldrb	w0, [x20, #3664]
  409c68:	ldr	w23, [x20, #3636]
  409c6c:	cbnz	w0, 409dac <__fxstatat@plt+0x735c>
  409c70:	cbnz	w23, 4098f8 <__fxstatat@plt+0x6ea8>
  409c74:	ldr	w0, [x19, #44]
  409c78:	add	x1, x29, #0x78
  409c7c:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  409c80:	bl	402430 <strlen@plt>
  409c84:	ldr	w1, [x20, #3988]
  409c88:	cmp	w0, w1
  409c8c:	b.le	409c94 <__fxstatat@plt+0x7244>
  409c90:	str	w0, [x20, #3988]
  409c94:	ldr	w0, [x19, #40]
  409c98:	mov	w1, #0xb000                	// #45056
  409c9c:	and	w0, w0, w1
  409ca0:	cmp	w0, #0x2, lsl #12
  409ca4:	b.ne	409e50 <__fxstatat@plt+0x7400>  // b.any
  409ca8:	ldr	x0, [x19, #56]
  409cac:	add	x21, x29, #0x90
  409cb0:	mov	x1, x21
  409cb4:	lsr	x2, x0, #32
  409cb8:	ubfx	w0, w0, #8, #12
  409cbc:	and	w2, w2, #0xfffff000
  409cc0:	orr	w0, w2, w0
  409cc4:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  409cc8:	bl	402430 <strlen@plt>
  409ccc:	ldr	w1, [x20, #4012]
  409cd0:	cmp	w0, w1
  409cd4:	b.le	409cdc <__fxstatat@plt+0x728c>
  409cd8:	str	w0, [x20, #4012]
  409cdc:	ldr	x2, [x19, #56]
  409ce0:	mov	x1, x21
  409ce4:	lsr	x0, x2, #12
  409ce8:	bfxil	x0, x2, #0, #8
  409cec:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  409cf0:	bl	402430 <strlen@plt>
  409cf4:	ldr	w1, [x20, #4020]
  409cf8:	cmp	w0, w1
  409cfc:	b.le	409d08 <__fxstatat@plt+0x72b8>
  409d00:	mov	w1, w0
  409d04:	str	w0, [x20, #4020]
  409d08:	ldr	w0, [x20, #4012]
  409d0c:	ldr	w2, [x20, #4016]
  409d10:	add	w0, w0, #0x2
  409d14:	add	w0, w0, w1
  409d18:	cmp	w0, w2
  409d1c:	b.le	4098f8 <__fxstatat@plt+0x6ea8>
  409d20:	str	w0, [x20, #4016]
  409d24:	ldrb	w0, [x20, #3635]
  409d28:	cbz	w0, 409900 <__fxstatat@plt+0x6eb0>
  409d2c:	nop
  409d30:	ldr	x0, [x19, #32]
  409d34:	add	x1, x29, #0x90
  409d38:	bl	40f7d8 <__fxstatat@plt+0xcd88>
  409d3c:	bl	402430 <strlen@plt>
  409d40:	ldr	w1, [x20, #3640]
  409d44:	cmp	w0, w1
  409d48:	b.le	409900 <__fxstatat@plt+0x6eb0>
  409d4c:	str	w0, [x20, #3640]
  409d50:	b	409900 <__fxstatat@plt+0x6eb0>
  409d54:	cbz	w24, 40983c <__fxstatat@plt+0x6dec>
  409d58:	b	4099d8 <__fxstatat@plt+0x6f88>
  409d5c:	ldr	x4, [x20, #3672]
  409d60:	mov	x1, #0x2                   	// #2
  409d64:	mov	x2, x22
  409d68:	add	x0, x29, #0x90
  409d6c:	mov	x3, #0xffffffffffffffff    	// #-1
  409d70:	str	x5, [x29, #104]
  409d74:	bl	413230 <__fxstatat@plt+0x107e0>
  409d78:	mov	x25, x0
  409d7c:	ldrb	w1, [x22]
  409d80:	ldrb	w0, [x29, #144]
  409d84:	ldr	x5, [x29, #104]
  409d88:	cmp	w1, w0
  409d8c:	b.eq	40a0c4 <__fxstatat@plt+0x7674>  // b.none
  409d90:	mov	w0, #0x1                   	// #1
  409d94:	str	w0, [x19, #180]
  409d98:	mov	w0, #0x1                   	// #1
  409d9c:	strb	w0, [x20, #3634]
  409da0:	ldurb	w3, [x21, #-200]
  409da4:	cbnz	w24, 409940 <__fxstatat@plt+0x6ef0>
  409da8:	b	4097ac <__fxstatat@plt+0x6d5c>
  409dac:	ldr	x0, [x19, #160]
  409db0:	bl	402430 <strlen@plt>
  409db4:	mov	w1, w0
  409db8:	ldr	w2, [x20, #3668]
  409dbc:	cmp	w0, w2
  409dc0:	b.le	409c70 <__fxstatat@plt+0x7220>
  409dc4:	str	w1, [x20, #3668]
  409dc8:	b	409c70 <__fxstatat@plt+0x7220>
  409dcc:	ldr	x0, [x19, #160]
  409dd0:	bl	402430 <strlen@plt>
  409dd4:	mov	w1, w0
  409dd8:	ldr	w2, [x20, #3668]
  409ddc:	cmp	w0, w2
  409de0:	b.le	4098f8 <__fxstatat@plt+0x6ea8>
  409de4:	str	w1, [x20, #3668]
  409de8:	b	409c70 <__fxstatat@plt+0x7220>
  409dec:	bl	4029e0 <__errno_location@plt>
  409df0:	mov	x25, x0
  409df4:	ldr	w0, [x0]
  409df8:	cmp	w0, #0x2
  409dfc:	b.eq	40983c <__fxstatat@plt+0x6dec>  // b.none
  409e00:	mov	w2, #0x5                   	// #5
  409e04:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  409e08:	mov	x0, #0x0                   	// #0
  409e0c:	add	x1, x1, #0x378
  409e10:	bl	402970 <dcgettext@plt>
  409e14:	ldr	w20, [x25]
  409e18:	mov	x19, x0
  409e1c:	mov	x1, x28
  409e20:	mov	w0, #0x4                   	// #4
  409e24:	bl	413ba0 <__fxstatat@plt+0x11150>
  409e28:	mov	x2, x19
  409e2c:	mov	x3, x0
  409e30:	mov	w1, w20
  409e34:	mov	w0, #0x0                   	// #0
  409e38:	bl	402490 <error@plt>
  409e3c:	nop
  409e40:	mov	w0, #0x2                   	// #2
  409e44:	mov	x25, #0x0                   	// #0
  409e48:	stur	w0, [x21, #-188]
  409e4c:	b	409918 <__fxstatat@plt+0x6ec8>
  409e50:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  409e54:	ldr	w2, [x20, #4024]
  409e58:	ldr	x0, [x19, #72]
  409e5c:	mov	x3, #0x1                   	// #1
  409e60:	ldr	x4, [x1, #1288]
  409e64:	add	x1, x29, #0x90
  409e68:	bl	40e390 <__fxstatat@plt+0xb940>
  409e6c:	mov	w1, #0x0                   	// #0
  409e70:	bl	40fea0 <__fxstatat@plt+0xd450>
  409e74:	ldr	w1, [x20, #4016]
  409e78:	cmp	w0, w1
  409e7c:	b.le	4098f8 <__fxstatat@plt+0x6ea8>
  409e80:	str	w0, [x20, #4016]
  409e84:	b	409d24 <__fxstatat@plt+0x72d4>
  409e88:	ldrb	w1, [x5, #1]
  409e8c:	mov	x0, x28
  409e90:	cbz	w1, 409ba8 <__fxstatat@plt+0x7158>
  409e94:	b	409b6c <__fxstatat@plt+0x711c>
  409e98:	ldur	x0, [x21, #-176]
  409e9c:	cmp	x2, x0
  409ea0:	b.eq	40a48c <__fxstatat@plt+0x7a3c>  // b.none
  409ea4:	str	wzr, [x25]
  409ea8:	mov	x1, x26
  409eac:	mov	x0, x28
  409eb0:	bl	40c2c8 <__fxstatat@plt+0x9878>
  409eb4:	cmp	w0, #0x0
  409eb8:	b.le	40a250 <__fxstatat@plt+0x7800>
  409ebc:	mov	w1, #0x2                   	// #2
  409ec0:	mov	w0, #0x1                   	// #1
  409ec4:	str	w1, [x19, #172]
  409ec8:	strb	w0, [x20, #3984]
  409ecc:	nop
  409ed0:	ldr	w0, [x19, #40]
  409ed4:	and	w0, w0, #0xf000
  409ed8:	cmp	w0, #0xa, lsl #12
  409edc:	b.ne	4098cc <__fxstatat@plt+0x6e7c>  // b.any
  409ee0:	ldr	w23, [x20, #3636]
  409ee4:	cbz	w23, 409ef0 <__fxstatat@plt+0x74a0>
  409ee8:	ldurb	w0, [x21, #-192]
  409eec:	cbz	w0, 409f98 <__fxstatat@plt+0x7548>
  409ef0:	ldr	x1, [x19, #72]
  409ef4:	mov	x0, x28
  409ef8:	bl	40b420 <__fxstatat@plt+0x89d0>
  409efc:	str	x0, [x19, #8]
  409f00:	mov	x23, x0
  409f04:	cbz	x0, 40a4ac <__fxstatat@plt+0x7a5c>
  409f08:	ldrb	w0, [x23]
  409f0c:	cmp	w0, #0x2f
  409f10:	b.eq	40a504 <__fxstatat@plt+0x7ab4>  // b.none
  409f14:	mov	x0, x28
  409f18:	bl	40c120 <__fxstatat@plt+0x96d0>
  409f1c:	mov	x26, x0
  409f20:	mov	x0, x23
  409f24:	cbz	x26, 40a3d4 <__fxstatat@plt+0x7984>
  409f28:	bl	402430 <strlen@plt>
  409f2c:	add	x1, x26, #0x2
  409f30:	add	x0, x1, x0
  409f34:	bl	415c40 <__fxstatat@plt+0x131f0>
  409f38:	mov	x25, x0
  409f3c:	add	x2, x28, x26
  409f40:	mov	x1, x28
  409f44:	ldurb	w2, [x2, #-1]
  409f48:	cmp	w2, #0x2f
  409f4c:	cinc	x2, x26, ne  // ne = any
  409f50:	bl	4027c0 <stpncpy@plt>
  409f54:	mov	x1, x23
  409f58:	bl	4028d0 <strcpy@plt>
  409f5c:	cbz	x25, 40a310 <__fxstatat@plt+0x78c0>
  409f60:	ldr	w0, [x19, #180]
  409f64:	cbz	w0, 40a440 <__fxstatat@plt+0x79f0>
  409f68:	ldr	w0, [x20, #3680]
  409f6c:	cmp	w0, #0x1
  409f70:	b.hi	409fa4 <__fxstatat@plt+0x7554>  // b.pmore
  409f74:	ldurb	w0, [x21, #-192]
  409f78:	cbnz	w0, 409fa4 <__fxstatat@plt+0x7554>
  409f7c:	mov	x0, x25
  409f80:	bl	402840 <free@plt>
  409f84:	ldr	w0, [x19, #40]
  409f88:	and	w0, w0, #0xf000
  409f8c:	cmp	w0, #0xa, lsl #12
  409f90:	b.ne	4098cc <__fxstatat@plt+0x6e7c>  // b.any
  409f94:	ldr	w23, [x20, #3636]
  409f98:	mov	w0, #0x6                   	// #6
  409f9c:	str	w0, [x19, #152]
  409fa0:	b	4098e0 <__fxstatat@plt+0x6e90>
  409fa4:	add	x2, x29, #0x90
  409fa8:	mov	x1, x25
  409fac:	mov	w0, #0x0                   	// #0
  409fb0:	bl	402a00 <__xstat@plt>
  409fb4:	cbnz	w0, 409f7c <__fxstatat@plt+0x752c>
  409fb8:	ldr	w1, [x29, #160]
  409fbc:	mov	w0, #0x1                   	// #1
  409fc0:	str	w1, [x19, #156]
  409fc4:	strb	w0, [x19, #169]
  409fc8:	b	409f7c <__fxstatat@plt+0x752c>
  409fcc:	cbz	w24, 409fe8 <__fxstatat@plt+0x7598>
  409fd0:	ldurb	w0, [x21, #-168]
  409fd4:	cbnz	w0, 409fe8 <__fxstatat@plt+0x7598>
  409fd8:	mov	w0, #0x9                   	// #9
  409fdc:	ldr	w23, [x20, #3636]
  409fe0:	str	w0, [x19, #152]
  409fe4:	b	4098e0 <__fxstatat@plt+0x6e90>
  409fe8:	mov	w0, #0x3                   	// #3
  409fec:	ldr	w23, [x20, #3636]
  409ff0:	str	w0, [x19, #152]
  409ff4:	b	4098e0 <__fxstatat@plt+0x6e90>
  409ff8:	ldrb	w0, [x20, #4000]
  409ffc:	ldr	w23, [x19, #48]
  40a000:	cbz	w0, 40a420 <__fxstatat@plt+0x79d0>
  40a004:	mov	w4, w23
  40a008:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a00c:	add	x3, x3, #0x3b0
  40a010:	mov	x2, #0x15                  	// #21
  40a014:	mov	w1, #0x1                   	// #1
  40a018:	mov	x0, x21
  40a01c:	bl	402440 <__sprintf_chk@plt>
  40a020:	mov	x0, x21
  40a024:	bl	402430 <strlen@plt>
  40a028:	ldr	w1, [x20, #3996]
  40a02c:	cmp	w1, w0
  40a030:	b.ge	409c54 <__fxstatat@plt+0x7204>  // b.tcont
  40a034:	str	w0, [x20, #3996]
  40a038:	b	409c54 <__fxstatat@plt+0x7204>
  40a03c:	ldrb	w0, [x20, #4000]
  40a040:	ldr	w23, [x19, #48]
  40a044:	cbz	w0, 40a400 <__fxstatat@plt+0x79b0>
  40a048:	mov	w4, w23
  40a04c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a050:	add	x3, x3, #0x3b0
  40a054:	mov	x2, #0x15                  	// #21
  40a058:	mov	w1, #0x1                   	// #1
  40a05c:	mov	x0, x21
  40a060:	bl	402440 <__sprintf_chk@plt>
  40a064:	mov	x0, x21
  40a068:	bl	402430 <strlen@plt>
  40a06c:	ldr	w1, [x20, #4008]
  40a070:	cmp	w1, w0
  40a074:	b.ge	409c64 <__fxstatat@plt+0x7214>  // b.tcont
  40a078:	str	w0, [x20, #4008]
  40a07c:	b	409c64 <__fxstatat@plt+0x7214>
  40a080:	ldrb	w0, [x20, #4000]
  40a084:	ldr	w23, [x19, #52]
  40a088:	cbz	w0, 40a3e0 <__fxstatat@plt+0x7990>
  40a08c:	mov	w4, w23
  40a090:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a094:	add	x3, x3, #0x3b0
  40a098:	mov	x2, #0x15                  	// #21
  40a09c:	mov	w1, #0x1                   	// #1
  40a0a0:	mov	x0, x21
  40a0a4:	bl	402440 <__sprintf_chk@plt>
  40a0a8:	mov	x0, x21
  40a0ac:	bl	402430 <strlen@plt>
  40a0b0:	ldr	w1, [x20, #4004]
  40a0b4:	cmp	w1, w0
  40a0b8:	b.ge	409c5c <__fxstatat@plt+0x720c>  // b.tcont
  40a0bc:	str	w0, [x20, #4004]
  40a0c0:	b	409c5c <__fxstatat@plt+0x720c>
  40a0c4:	mov	x0, x22
  40a0c8:	str	x5, [x29, #104]
  40a0cc:	bl	402430 <strlen@plt>
  40a0d0:	cmp	x25, x0
  40a0d4:	ldr	x5, [x29, #104]
  40a0d8:	b.ne	409d90 <__fxstatat@plt+0x7340>  // b.any
  40a0dc:	str	wzr, [x19, #180]
  40a0e0:	b	4097a4 <__fxstatat@plt+0x6d54>
  40a0e4:	cmp	w23, #0x0
  40a0e8:	cset	w1, eq  // eq = none
  40a0ec:	cmp	w1, #0x0
  40a0f0:	ccmp	w23, #0x6, #0x4, eq  // eq = none
  40a0f4:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a0f8:	b	4097e4 <__fxstatat@plt+0x6d94>
  40a0fc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a100:	add	x1, x1, #0x360
  40a104:	mov	w2, #0x5                   	// #5
  40a108:	bl	402970 <dcgettext@plt>
  40a10c:	mov	x25, x0
  40a110:	mov	x28, x22
  40a114:	bl	4029e0 <__errno_location@plt>
  40a118:	mov	x2, x0
  40a11c:	mov	x1, x22
  40a120:	mov	w0, #0x4                   	// #4
  40a124:	ldr	w27, [x2]
  40a128:	bl	413ba0 <__fxstatat@plt+0x11150>
  40a12c:	mov	x2, x25
  40a130:	mov	x3, x0
  40a134:	mov	w1, w27
  40a138:	mov	w0, #0x0                   	// #0
  40a13c:	bl	402490 <error@plt>
  40a140:	ldur	w0, [x21, #-188]
  40a144:	cbnz	w0, 40a150 <__fxstatat@plt+0x7700>
  40a148:	mov	w0, #0x1                   	// #1
  40a14c:	stur	w0, [x21, #-188]
  40a150:	ldur	w0, [x21, #-196]
  40a154:	cmp	w0, #0x5
  40a158:	b.ne	40983c <__fxstatat@plt+0x6dec>  // b.any
  40a15c:	b	409a1c <__fxstatat@plt+0x6fcc>
  40a160:	ldrb	w1, [x0]
  40a164:	cmp	w1, #0x30
  40a168:	b.ne	409ad4 <__fxstatat@plt+0x7084>  // b.any
  40a16c:	ldrb	w0, [x0, #1]
  40a170:	cmp	w0, #0x30
  40a174:	b.eq	409870 <__fxstatat@plt+0x6e20>  // b.none
  40a178:	b	409ad4 <__fxstatat@plt+0x7084>
  40a17c:	ldurb	w0, [x21, #-198]
  40a180:	cbz	w0, 40a248 <__fxstatat@plt+0x77f8>
  40a184:	cbnz	w1, 409808 <__fxstatat@plt+0x6db8>
  40a188:	cmp	w23, #0x5
  40a18c:	mov	x25, #0x0                   	// #0
  40a190:	b.ne	409900 <__fxstatat@plt+0x6eb0>  // b.any
  40a194:	ldr	w0, [x20, #3680]
  40a198:	cmp	w0, #0x3
  40a19c:	b.eq	409808 <__fxstatat@plt+0x6db8>  // b.none
  40a1a0:	ldrb	w0, [x20, #3969]
  40a1a4:	cbz	w0, 409900 <__fxstatat@plt+0x6eb0>
  40a1a8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40a1ac:	add	x0, x0, #0x370
  40a1b0:	ldr	x2, [x0, #224]
  40a1b4:	cbz	x2, 40a1ec <__fxstatat@plt+0x779c>
  40a1b8:	cmp	x2, #0x1
  40a1bc:	ldr	x0, [x0, #232]
  40a1c0:	b.eq	40a570 <__fxstatat@plt+0x7b20>  // b.none
  40a1c4:	cmp	x2, #0x2
  40a1c8:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a1cc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a1d0:	add	x1, x1, #0x358
  40a1d4:	str	x5, [x29, #96]
  40a1d8:	str	w3, [x29, #104]
  40a1dc:	bl	402640 <strncmp@plt>
  40a1e0:	ldr	w3, [x29, #104]
  40a1e4:	ldr	x5, [x29, #96]
  40a1e8:	cbnz	w0, 409808 <__fxstatat@plt+0x6db8>
  40a1ec:	mov	w0, #0x10                  	// #16
  40a1f0:	str	x5, [x29, #96]
  40a1f4:	str	w3, [x29, #104]
  40a1f8:	bl	404590 <__fxstatat@plt+0x1b40>
  40a1fc:	ldr	w3, [x29, #104]
  40a200:	tst	w0, #0xff
  40a204:	ldr	x5, [x29, #96]
  40a208:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a20c:	mov	w0, #0x11                  	// #17
  40a210:	str	x5, [x29, #96]
  40a214:	str	w3, [x29, #104]
  40a218:	bl	404590 <__fxstatat@plt+0x1b40>
  40a21c:	ldr	w3, [x29, #104]
  40a220:	tst	w0, #0xff
  40a224:	ldr	x5, [x29, #96]
  40a228:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a22c:	mov	w0, #0x15                  	// #21
  40a230:	str	w3, [x29, #104]
  40a234:	bl	404590 <__fxstatat@plt+0x1b40>
  40a238:	tst	w0, #0xff
  40a23c:	ldr	w3, [x29, #104]
  40a240:	ldr	x5, [x29, #96]
  40a244:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a248:	mov	x25, #0x0                   	// #0
  40a24c:	b	409900 <__fxstatat@plt+0x6eb0>
  40a250:	ldr	w2, [x25]
  40a254:	sub	w1, w2, #0x16
  40a258:	cmp	w2, #0x5f
  40a25c:	and	w1, w1, #0xffffffef
  40a260:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40a264:	b.ne	40a270 <__fxstatat@plt+0x7820>  // b.any
  40a268:	ldr	x1, [x19, #24]
  40a26c:	stur	x1, [x21, #-176]
  40a270:	str	wzr, [x19, #172]
  40a274:	cbz	w0, 409ed0 <__fxstatat@plt+0x7480>
  40a278:	ldr	w23, [x25]
  40a27c:	mov	x2, x28
  40a280:	mov	w1, #0x3                   	// #3
  40a284:	mov	w0, #0x0                   	// #0
  40a288:	bl	414520 <__fxstatat@plt+0x11ad0>
  40a28c:	mov	x3, x0
  40a290:	mov	w1, w23
  40a294:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40a298:	mov	w0, #0x0                   	// #0
  40a29c:	add	x2, x2, #0x418
  40a2a0:	bl	402490 <error@plt>
  40a2a4:	b	409ed0 <__fxstatat@plt+0x7480>
  40a2a8:	bl	4029e0 <__errno_location@plt>
  40a2ac:	mov	w23, #0x0                   	// #0
  40a2b0:	mov	w1, #0x5f                  	// #95
  40a2b4:	str	w1, [x0]
  40a2b8:	strb	w23, [x19, #176]
  40a2bc:	b	409870 <__fxstatat@plt+0x6e20>
  40a2c0:	bl	4029e0 <__errno_location@plt>
  40a2c4:	ldr	w0, [x0]
  40a2c8:	sub	w1, w0, #0x16
  40a2cc:	tst	w1, #0xffffffef
  40a2d0:	cset	w23, eq  // eq = none
  40a2d4:	cmp	w0, #0x5f
  40a2d8:	csinc	w23, w23, wzr, ne  // ne = any
  40a2dc:	cbz	w23, 409b20 <__fxstatat@plt+0x70d0>
  40a2e0:	ldr	x0, [x19, #24]
  40a2e4:	mov	w23, #0x0                   	// #0
  40a2e8:	stur	x0, [x21, #-160]
  40a2ec:	strb	w23, [x19, #176]
  40a2f0:	b	409870 <__fxstatat@plt+0x6e20>
  40a2f4:	ldur	w0, [x21, #-188]
  40a2f8:	ldr	x23, [x19, #8]
  40a2fc:	cbnz	w0, 40a308 <__fxstatat@plt+0x78b8>
  40a300:	mov	w0, #0x1                   	// #1
  40a304:	stur	w0, [x21, #-188]
  40a308:	cbnz	x23, 409f08 <__fxstatat@plt+0x74b8>
  40a30c:	nop
  40a310:	mov	x25, #0x0                   	// #0
  40a314:	b	409f7c <__fxstatat@plt+0x752c>
  40a318:	ldrb	w0, [x20, #3969]
  40a31c:	cbz	w0, 4097c0 <__fxstatat@plt+0x6d70>
  40a320:	adrp	x26, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40a324:	add	x26, x26, #0x370
  40a328:	ldr	x0, [x26, #304]
  40a32c:	cbz	x0, 40a360 <__fxstatat@plt+0x7910>
  40a330:	cmp	x0, #0x1
  40a334:	ldr	x1, [x26, #312]
  40a338:	b.eq	40a540 <__fxstatat@plt+0x7af0>  // b.none
  40a33c:	cmp	x0, #0x2
  40a340:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a344:	ldrb	w0, [x1]
  40a348:	cmp	w0, #0x30
  40a34c:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a350:	ldrb	w0, [x1, #1]
  40a354:	cmp	w0, #0x30
  40a358:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a35c:	nop
  40a360:	ldr	x0, [x26, #288]
  40a364:	cbz	x0, 40a394 <__fxstatat@plt+0x7944>
  40a368:	cmp	x0, #0x1
  40a36c:	ldr	x1, [x26, #296]
  40a370:	b.eq	40a550 <__fxstatat@plt+0x7b00>  // b.none
  40a374:	cmp	x0, #0x2
  40a378:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a37c:	ldrb	w0, [x1]
  40a380:	cmp	w0, #0x30
  40a384:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a388:	ldrb	w0, [x1, #1]
  40a38c:	cmp	w0, #0x30
  40a390:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a394:	ldr	x2, [x26, #320]
  40a398:	cbz	x2, 4097c0 <__fxstatat@plt+0x6d70>
  40a39c:	cmp	x2, #0x1
  40a3a0:	ldr	x0, [x26, #328]
  40a3a4:	b.eq	40a560 <__fxstatat@plt+0x7b10>  // b.none
  40a3a8:	cmp	x2, #0x2
  40a3ac:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a3b0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a3b4:	add	x1, x1, #0x358
  40a3b8:	str	x5, [x29, #96]
  40a3bc:	str	w3, [x29, #104]
  40a3c0:	bl	402640 <strncmp@plt>
  40a3c4:	ldr	w3, [x29, #104]
  40a3c8:	ldr	x5, [x29, #96]
  40a3cc:	cbnz	w0, 409808 <__fxstatat@plt+0x6db8>
  40a3d0:	b	4097c0 <__fxstatat@plt+0x6d70>
  40a3d4:	bl	415dc8 <__fxstatat@plt+0x13378>
  40a3d8:	mov	x25, x0
  40a3dc:	b	409f5c <__fxstatat@plt+0x750c>
  40a3e0:	mov	w0, w23
  40a3e4:	bl	40f560 <__fxstatat@plt+0xcb10>
  40a3e8:	cbz	x0, 40a08c <__fxstatat@plt+0x763c>
  40a3ec:	mov	w1, #0x0                   	// #0
  40a3f0:	bl	40fea0 <__fxstatat@plt+0xd450>
  40a3f4:	cmp	w0, #0x0
  40a3f8:	csel	w0, w0, wzr, ge  // ge = tcont
  40a3fc:	b	40a0b0 <__fxstatat@plt+0x7660>
  40a400:	mov	w0, w23
  40a404:	bl	40f360 <__fxstatat@plt+0xc910>
  40a408:	cbz	x0, 40a048 <__fxstatat@plt+0x75f8>
  40a40c:	mov	w1, #0x0                   	// #0
  40a410:	bl	40fea0 <__fxstatat@plt+0xd450>
  40a414:	cmp	w0, #0x0
  40a418:	csel	w0, w0, wzr, ge  // ge = tcont
  40a41c:	b	40a06c <__fxstatat@plt+0x761c>
  40a420:	mov	w0, w23
  40a424:	bl	40f360 <__fxstatat@plt+0xc910>
  40a428:	cbz	x0, 40a004 <__fxstatat@plt+0x75b4>
  40a42c:	mov	w1, #0x0                   	// #0
  40a430:	bl	40fea0 <__fxstatat@plt+0xd450>
  40a434:	cmp	w0, #0x0
  40a438:	csel	w0, w0, wzr, ge  // ge = tcont
  40a43c:	b	40a028 <__fxstatat@plt+0x75d8>
  40a440:	ldr	x4, [x20, #3672]
  40a444:	mov	x1, #0x2                   	// #2
  40a448:	ldr	x26, [x19, #8]
  40a44c:	add	x0, x29, #0x90
  40a450:	mov	x3, #0xffffffffffffffff    	// #-1
  40a454:	mov	x2, x26
  40a458:	bl	413230 <__fxstatat@plt+0x107e0>
  40a45c:	ldrb	w1, [x26]
  40a460:	mov	x23, x0
  40a464:	ldrb	w0, [x29, #144]
  40a468:	cmp	w1, w0
  40a46c:	b.eq	40a52c <__fxstatat@plt+0x7adc>  // b.none
  40a470:	mov	w0, #0xffffffff            	// #-1
  40a474:	str	w0, [x19, #180]
  40a478:	b	409f68 <__fxstatat@plt+0x7518>
  40a47c:	ldrb	w0, [x0]
  40a480:	cmp	w0, #0x30
  40a484:	b.ne	409ad4 <__fxstatat@plt+0x7084>  // b.any
  40a488:	b	409870 <__fxstatat@plt+0x6e20>
  40a48c:	mov	w0, #0x5f                  	// #95
  40a490:	str	w0, [x25]
  40a494:	str	wzr, [x19, #172]
  40a498:	ldr	w0, [x19, #40]
  40a49c:	and	w0, w0, #0xf000
  40a4a0:	cmp	w0, #0xa, lsl #12
  40a4a4:	b.ne	4098cc <__fxstatat@plt+0x6e7c>  // b.any
  40a4a8:	b	409ef0 <__fxstatat@plt+0x74a0>
  40a4ac:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a4b0:	add	x1, x1, #0x390
  40a4b4:	mov	w2, #0x5                   	// #5
  40a4b8:	bl	402970 <dcgettext@plt>
  40a4bc:	mov	x23, x0
  40a4c0:	bl	4029e0 <__errno_location@plt>
  40a4c4:	mov	x2, x0
  40a4c8:	mov	x1, x28
  40a4cc:	mov	w0, #0x4                   	// #4
  40a4d0:	ldr	w25, [x2]
  40a4d4:	bl	413ba0 <__fxstatat@plt+0x11150>
  40a4d8:	mov	x2, x23
  40a4dc:	mov	x3, x0
  40a4e0:	mov	w1, w25
  40a4e4:	mov	w0, #0x0                   	// #0
  40a4e8:	bl	402490 <error@plt>
  40a4ec:	cbz	w24, 40a2f4 <__fxstatat@plt+0x78a4>
  40a4f0:	ldr	x23, [x19, #8]
  40a4f4:	mov	w0, #0x2                   	// #2
  40a4f8:	stur	w0, [x21, #-188]
  40a4fc:	cbnz	x23, 409f08 <__fxstatat@plt+0x74b8>
  40a500:	b	40a310 <__fxstatat@plt+0x78c0>
  40a504:	mov	x0, x23
  40a508:	bl	415dc8 <__fxstatat@plt+0x13378>
  40a50c:	mov	x25, x0
  40a510:	b	409f5c <__fxstatat@plt+0x750c>
  40a514:	ldrb	w25, [x22]
  40a518:	add	x26, x19, #0x18
  40a51c:	cmp	w25, #0x2f
  40a520:	b.ne	409818 <__fxstatat@plt+0x6dc8>  // b.any
  40a524:	mov	x28, x22
  40a528:	b	409a1c <__fxstatat@plt+0x6fcc>
  40a52c:	mov	x0, x26
  40a530:	bl	402430 <strlen@plt>
  40a534:	cmp	x23, x0
  40a538:	b.ne	40a470 <__fxstatat@plt+0x7a20>  // b.any
  40a53c:	b	409f68 <__fxstatat@plt+0x7518>
  40a540:	ldrb	w0, [x1]
  40a544:	cmp	w0, #0x30
  40a548:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a54c:	b	40a360 <__fxstatat@plt+0x7910>
  40a550:	ldrb	w0, [x1]
  40a554:	cmp	w0, #0x30
  40a558:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a55c:	b	40a394 <__fxstatat@plt+0x7944>
  40a560:	ldrb	w0, [x0]
  40a564:	cmp	w0, #0x30
  40a568:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a56c:	b	4097c0 <__fxstatat@plt+0x6d70>
  40a570:	ldrb	w0, [x0]
  40a574:	cmp	w0, #0x30
  40a578:	b.ne	409808 <__fxstatat@plt+0x6db8>  // b.any
  40a57c:	b	40a1ec <__fxstatat@plt+0x779c>
  40a580:	bl	415e08 <__fxstatat@plt+0x133b8>
  40a584:	nop
  40a588:	sub	sp, sp, #0x300
  40a58c:	stp	x29, x30, [sp]
  40a590:	mov	x29, sp
  40a594:	stp	x23, x24, [sp, #48]
  40a598:	mov	x24, x0
  40a59c:	and	w0, w2, #0xff
  40a5a0:	stp	x19, x20, [sp, #16]
  40a5a4:	stp	x27, x28, [sp, #80]
  40a5a8:	mov	x28, x1
  40a5ac:	str	w0, [sp, #100]
  40a5b0:	bl	4029e0 <__errno_location@plt>
  40a5b4:	mov	x20, x0
  40a5b8:	mov	x0, x24
  40a5bc:	str	wzr, [x20]
  40a5c0:	bl	4024f0 <opendir@plt>
  40a5c4:	cbz	x0, 40ad34 <__fxstatat@plt+0x82e4>
  40a5c8:	stp	x21, x22, [sp, #32]
  40a5cc:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40a5d0:	add	x21, x21, #0x5e0
  40a5d4:	stp	x25, x26, [sp, #64]
  40a5d8:	adrp	x22, 434000 <__progname@@GLIBC_2.17+0xa38>
  40a5dc:	mov	x23, x0
  40a5e0:	ldr	x1, [x21, #3688]
  40a5e4:	add	x22, x22, #0x6e0
  40a5e8:	cbz	x1, 40a6e8 <__fxstatat@plt+0x7c98>
  40a5ec:	bl	4028e0 <dirfd@plt>
  40a5f0:	mov	w1, w0
  40a5f4:	add	x2, sp, #0x70
  40a5f8:	tbnz	w0, #31, 40aa1c <__fxstatat@plt+0x7fcc>
  40a5fc:	mov	w0, #0x0                   	// #0
  40a600:	bl	402960 <__fxstat@plt>
  40a604:	lsr	w0, w0, #31
  40a608:	cbnz	w0, 40aa30 <__fxstatat@plt+0x7fe0>
  40a60c:	mov	x0, #0x10                  	// #16
  40a610:	ldp	x22, x25, [sp, #112]
  40a614:	bl	415c40 <__fxstatat@plt+0x131f0>
  40a618:	mov	x19, x0
  40a61c:	mov	x1, x0
  40a620:	ldr	x0, [x21, #3688]
  40a624:	stp	x25, x22, [x19]
  40a628:	bl	40df00 <__fxstatat@plt+0xb4b0>
  40a62c:	cbz	x0, 40adf4 <__fxstatat@plt+0x83a4>
  40a630:	cmp	x19, x0
  40a634:	b.eq	40a6b0 <__fxstatat@plt+0x7c60>  // b.none
  40a638:	mov	x0, x19
  40a63c:	bl	402840 <free@plt>
  40a640:	mov	w2, #0x5                   	// #5
  40a644:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a648:	mov	x0, #0x0                   	// #0
  40a64c:	add	x1, x1, #0x400
  40a650:	bl	402970 <dcgettext@plt>
  40a654:	mov	x19, x0
  40a658:	mov	x2, x24
  40a65c:	mov	w1, #0x3                   	// #3
  40a660:	mov	w0, #0x0                   	// #0
  40a664:	bl	414520 <__fxstatat@plt+0x11ad0>
  40a668:	mov	x2, x19
  40a66c:	mov	x3, x0
  40a670:	mov	w1, #0x0                   	// #0
  40a674:	mov	w0, #0x0                   	// #0
  40a678:	bl	402490 <error@plt>
  40a67c:	mov	x0, x23
  40a680:	bl	402700 <closedir@plt>
  40a684:	ldp	x21, x22, [sp, #32]
  40a688:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  40a68c:	ldp	x25, x26, [sp, #64]
  40a690:	mov	w1, #0x2                   	// #2
  40a694:	str	w1, [x0, #1572]
  40a698:	ldp	x29, x30, [sp]
  40a69c:	ldp	x19, x20, [sp, #16]
  40a6a0:	ldp	x23, x24, [sp, #48]
  40a6a4:	ldp	x27, x28, [sp, #80]
  40a6a8:	add	sp, sp, #0x300
  40a6ac:	ret
  40a6b0:	adrp	x22, 434000 <__progname@@GLIBC_2.17+0xa38>
  40a6b4:	add	x22, x22, #0x6e0
  40a6b8:	sub	x0, x22, #0x98
  40a6bc:	ldp	x19, x25, [sp, #112]
  40a6c0:	ldp	x1, x2, [x22, #-128]
  40a6c4:	sub	x2, x2, x1
  40a6c8:	cmp	x2, #0xf
  40a6cc:	b.hi	40a6dc <__fxstatat@plt+0x7c8c>  // b.pmore
  40a6d0:	mov	x1, #0x10                  	// #16
  40a6d4:	bl	416e48 <_obstack_newchunk@@Base>
  40a6d8:	ldur	x1, [x22, #-128]
  40a6dc:	add	x0, x1, #0x10
  40a6e0:	stur	x0, [x22, #-128]
  40a6e4:	stp	x25, x19, [x1]
  40a6e8:	ldr	x26, [x21, #3104]
  40a6ec:	cbz	x26, 40a71c <__fxstatat@plt+0x7ccc>
  40a6f0:	ldr	x25, [x21, #3136]
  40a6f4:	add	x26, x25, x26, lsl #3
  40a6f8:	ldr	x19, [x25], #8
  40a6fc:	ldr	x0, [x19]
  40a700:	bl	402840 <free@plt>
  40a704:	ldr	x0, [x19, #8]
  40a708:	bl	402840 <free@plt>
  40a70c:	ldr	x0, [x19, #16]
  40a710:	bl	402840 <free@plt>
  40a714:	cmp	x26, x25
  40a718:	b.ne	40a6f8 <__fxstatat@plt+0x7ca8>  // b.any
  40a71c:	add	x1, x21, #0xfac
  40a720:	ldurb	w0, [x22, #-64]
  40a724:	str	xzr, [x21, #3104]
  40a728:	strb	wzr, [x21, #3634]
  40a72c:	stp	wzr, wzr, [x1, #-8]
  40a730:	stp	wzr, wzr, [x1]
  40a734:	str	wzr, [x21, #3640]
  40a738:	str	wzr, [x21, #3660]
  40a73c:	str	wzr, [x21, #3668]
  40a740:	strb	wzr, [x21, #3984]
  40a744:	str	wzr, [x21, #3988]
  40a748:	str	wzr, [x21, #3996]
  40a74c:	str	wzr, [x21, #4020]
  40a750:	cbz	w0, 40aa10 <__fxstatat@plt+0x7fc0>
  40a754:	adrp	x25, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40a758:	add	x25, x25, #0x370
  40a75c:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40a760:	ldrb	w0, [x25, #426]
  40a764:	cbnz	w0, 40a794 <__fxstatat@plt+0x7d44>
  40a768:	ldr	x0, [x19, #1472]
  40a76c:	ldp	x1, x2, [x0, #40]
  40a770:	cmp	x1, x2
  40a774:	b.cs	40adb4 <__fxstatat@plt+0x8364>  // b.hs, b.nlast
  40a778:	add	x2, x1, #0x1
  40a77c:	str	x2, [x0, #40]
  40a780:	mov	w0, #0xa                   	// #10
  40a784:	strb	w0, [x1]
  40a788:	ldr	x0, [x21, #3488]
  40a78c:	add	x0, x0, #0x1
  40a790:	str	x0, [x21, #3488]
  40a794:	ldrb	w0, [x21, #3968]
  40a798:	strb	wzr, [x25, #426]
  40a79c:	cbnz	w0, 40ace4 <__fxstatat@plt+0x8294>
  40a7a0:	ldurb	w0, [x22, #-200]
  40a7a4:	cbnz	w0, 40abe8 <__fxstatat@plt+0x8198>
  40a7a8:	mov	x25, #0x0                   	// #0
  40a7ac:	ldr	x1, [x22, #32]
  40a7b0:	cmp	x28, #0x0
  40a7b4:	mov	x6, x25
  40a7b8:	sub	x5, x22, #0x38
  40a7bc:	mov	w4, #0x1                   	// #1
  40a7c0:	mov	x3, #0x0                   	// #0
  40a7c4:	mov	w2, #0xffffffff            	// #-1
  40a7c8:	csel	x0, x28, x24, ne  // ne = any
  40a7cc:	bl	407900 <__fxstatat@plt+0x4eb0>
  40a7d0:	mov	x0, x25
  40a7d4:	bl	402840 <free@plt>
  40a7d8:	ldr	x3, [x19, #1472]
  40a7dc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a7e0:	mov	x2, #0x2                   	// #2
  40a7e4:	add	x0, x0, #0x430
  40a7e8:	mov	x1, #0x1                   	// #1
  40a7ec:	bl	402410 <fwrite_unlocked@plt>
  40a7f0:	ldr	x0, [x21, #3488]
  40a7f4:	add	x0, x0, #0x2
  40a7f8:	str	x0, [x21, #3488]
  40a7fc:	adrp	x28, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40a800:	add	x28, x28, #0xe80
  40a804:	str	wzr, [x20]
  40a808:	add	x0, x28, #0x238
  40a80c:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a810:	mov	x25, #0x0                   	// #0
  40a814:	add	x26, x26, #0x438
  40a818:	str	x0, [sp, #104]
  40a81c:	mov	x0, x23
  40a820:	bl	4026d0 <readdir@plt>
  40a824:	mov	x19, x0
  40a828:	cbz	x0, 40a890 <__fxstatat@plt+0x7e40>
  40a82c:	nop
  40a830:	add	x28, x0, #0x13
  40a834:	ldr	w0, [x22, #40]
  40a838:	cmp	w0, #0x2
  40a83c:	b.eq	40aad0 <__fxstatat@plt+0x8080>  // b.none
  40a840:	ldrb	w1, [x19, #19]
  40a844:	cmp	w1, #0x2e
  40a848:	b.eq	40aab4 <__fxstatat@plt+0x8064>  // b.none
  40a84c:	cbnz	w0, 40aad0 <__fxstatat@plt+0x8080>
  40a850:	ldr	x27, [x22, #56]
  40a854:	cbnz	x27, 40a864 <__fxstatat@plt+0x7e14>
  40a858:	b	40aad0 <__fxstatat@plt+0x8080>
  40a85c:	ldr	x27, [x27, #8]
  40a860:	cbz	x27, 40aad0 <__fxstatat@plt+0x8080>
  40a864:	ldr	x0, [x27]
  40a868:	mov	x1, x28
  40a86c:	mov	w2, #0x4                   	// #4
  40a870:	bl	4028a0 <fnmatch@plt>
  40a874:	cbnz	w0, 40a85c <__fxstatat@plt+0x7e0c>
  40a878:	bl	405c40 <__fxstatat@plt+0x31f0>
  40a87c:	str	wzr, [x20]
  40a880:	mov	x0, x23
  40a884:	bl	4026d0 <readdir@plt>
  40a888:	mov	x19, x0
  40a88c:	cbnz	x0, 40a830 <__fxstatat@plt+0x7de0>
  40a890:	ldr	w1, [x20]
  40a894:	cbz	w1, 40a8e8 <__fxstatat@plt+0x7e98>
  40a898:	mov	w2, #0x5                   	// #5
  40a89c:	mov	x1, x26
  40a8a0:	bl	402970 <dcgettext@plt>
  40a8a4:	ldr	w28, [x20]
  40a8a8:	mov	x19, x0
  40a8ac:	mov	x1, x24
  40a8b0:	mov	w0, #0x4                   	// #4
  40a8b4:	bl	413ba0 <__fxstatat@plt+0x11150>
  40a8b8:	mov	x2, x19
  40a8bc:	mov	x3, x0
  40a8c0:	mov	w1, w28
  40a8c4:	mov	w0, #0x0                   	// #0
  40a8c8:	bl	402490 <error@plt>
  40a8cc:	ldr	w0, [sp, #100]
  40a8d0:	cbz	w0, 40abd4 <__fxstatat@plt+0x8184>
  40a8d4:	mov	w0, #0x2                   	// #2
  40a8d8:	stur	w0, [x22, #-188]
  40a8dc:	ldr	w0, [x20]
  40a8e0:	cmp	w0, #0x4b
  40a8e4:	b.eq	40a878 <__fxstatat@plt+0x7e28>  // b.none
  40a8e8:	mov	x0, x23
  40a8ec:	bl	402700 <closedir@plt>
  40a8f0:	cbnz	w0, 40ac94 <__fxstatat@plt+0x8244>
  40a8f4:	bl	404ad8 <__fxstatat@plt+0x2088>
  40a8f8:	ldurb	w0, [x22, #-64]
  40a8fc:	cbnz	w0, 40ac84 <__fxstatat@plt+0x8234>
  40a900:	ldr	w0, [x21, #3636]
  40a904:	cbz	w0, 40a910 <__fxstatat@plt+0x7ec0>
  40a908:	ldrb	w0, [x21, #3644]
  40a90c:	cbz	w0, 40a9e8 <__fxstatat@plt+0x7f98>
  40a910:	ldrb	w0, [x21, #3968]
  40a914:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40a918:	cbnz	w0, 40ad0c <__fxstatat@plt+0x82bc>
  40a91c:	mov	w2, #0x5                   	// #5
  40a920:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40a924:	mov	x0, #0x0                   	// #0
  40a928:	add	x1, x1, #0x468
  40a92c:	bl	402970 <dcgettext@plt>
  40a930:	mov	x20, x0
  40a934:	ldr	x1, [x19, #1472]
  40a938:	bl	402980 <fputs_unlocked@plt>
  40a93c:	mov	x0, x20
  40a940:	bl	402430 <strlen@plt>
  40a944:	ldr	x2, [x19, #1472]
  40a948:	ldr	x1, [x21, #3488]
  40a94c:	ldr	x3, [x2, #40]
  40a950:	add	x1, x1, x0
  40a954:	ldr	x0, [x2, #48]
  40a958:	str	x1, [x21, #3488]
  40a95c:	cmp	x3, x0
  40a960:	b.cs	40adc0 <__fxstatat@plt+0x8370>  // b.hs, b.nlast
  40a964:	add	x0, x3, #0x1
  40a968:	str	x0, [x2, #40]
  40a96c:	mov	w0, #0x20                  	// #32
  40a970:	strb	w0, [x3]
  40a974:	ldr	x5, [x21, #3488]
  40a978:	mov	x3, #0x200                 	// #512
  40a97c:	ldr	w2, [x21, #3656]
  40a980:	add	x1, sp, #0x70
  40a984:	ldr	x4, [x21, #3648]
  40a988:	add	x5, x5, #0x1
  40a98c:	mov	x0, x25
  40a990:	str	x5, [x21, #3488]
  40a994:	bl	40e390 <__fxstatat@plt+0xb940>
  40a998:	mov	x20, x0
  40a99c:	ldr	x1, [x19, #1472]
  40a9a0:	bl	402980 <fputs_unlocked@plt>
  40a9a4:	mov	x0, x20
  40a9a8:	bl	402430 <strlen@plt>
  40a9ac:	ldr	x2, [x19, #1472]
  40a9b0:	ldr	x1, [x21, #3488]
  40a9b4:	ldr	x3, [x2, #40]
  40a9b8:	add	x1, x1, x0
  40a9bc:	ldr	x0, [x2, #48]
  40a9c0:	str	x1, [x21, #3488]
  40a9c4:	cmp	x3, x0
  40a9c8:	b.cs	40add0 <__fxstatat@plt+0x8380>  // b.hs, b.nlast
  40a9cc:	add	x0, x3, #0x1
  40a9d0:	str	x0, [x2, #40]
  40a9d4:	mov	w0, #0xa                   	// #10
  40a9d8:	strb	w0, [x3]
  40a9dc:	ldr	x0, [x21, #3488]
  40a9e0:	add	x0, x0, #0x1
  40a9e4:	str	x0, [x21, #3488]
  40a9e8:	ldr	x0, [x21, #3104]
  40a9ec:	cbnz	x0, 40ac60 <__fxstatat@plt+0x8210>
  40a9f0:	ldp	x29, x30, [sp]
  40a9f4:	ldp	x19, x20, [sp, #16]
  40a9f8:	ldp	x21, x22, [sp, #32]
  40a9fc:	ldp	x23, x24, [sp, #48]
  40aa00:	ldp	x25, x26, [sp, #64]
  40aa04:	ldp	x27, x28, [sp, #80]
  40aa08:	add	sp, sp, #0x300
  40aa0c:	ret
  40aa10:	ldurb	w0, [x22, #-63]
  40aa14:	cbz	w0, 40a7fc <__fxstatat@plt+0x7dac>
  40aa18:	b	40a754 <__fxstatat@plt+0x7d04>
  40aa1c:	mov	x1, x24
  40aa20:	mov	w0, #0x0                   	// #0
  40aa24:	bl	402a00 <__xstat@plt>
  40aa28:	lsr	w0, w0, #31
  40aa2c:	cbz	w0, 40a60c <__fxstatat@plt+0x7bbc>
  40aa30:	mov	w2, #0x5                   	// #5
  40aa34:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40aa38:	mov	x0, #0x0                   	// #0
  40aa3c:	add	x1, x1, #0x3d8
  40aa40:	bl	402970 <dcgettext@plt>
  40aa44:	ldr	w20, [x20]
  40aa48:	mov	x19, x0
  40aa4c:	mov	x1, x24
  40aa50:	mov	w0, #0x4                   	// #4
  40aa54:	bl	413ba0 <__fxstatat@plt+0x11150>
  40aa58:	mov	x2, x19
  40aa5c:	mov	x3, x0
  40aa60:	mov	w1, w20
  40aa64:	mov	w0, #0x0                   	// #0
  40aa68:	bl	402490 <error@plt>
  40aa6c:	ldr	w0, [sp, #100]
  40aa70:	cbnz	w0, 40ac50 <__fxstatat@plt+0x8200>
  40aa74:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  40aa78:	add	x0, x0, #0x6e0
  40aa7c:	ldur	w1, [x0, #-188]
  40aa80:	cbnz	w1, 40aa8c <__fxstatat@plt+0x803c>
  40aa84:	mov	w1, #0x1                   	// #1
  40aa88:	stur	w1, [x0, #-188]
  40aa8c:	mov	x0, x23
  40aa90:	bl	402700 <closedir@plt>
  40aa94:	ldp	x29, x30, [sp]
  40aa98:	ldp	x19, x20, [sp, #16]
  40aa9c:	ldp	x21, x22, [sp, #32]
  40aaa0:	ldp	x23, x24, [sp, #48]
  40aaa4:	ldp	x25, x26, [sp, #64]
  40aaa8:	ldp	x27, x28, [sp, #80]
  40aaac:	add	sp, sp, #0x300
  40aab0:	ret
  40aab4:	cbz	w0, 40a878 <__fxstatat@plt+0x7e28>
  40aab8:	ldrb	w0, [x19, #20]
  40aabc:	cmp	w0, #0x2e
  40aac0:	cinc	x0, x28, eq  // eq = none
  40aac4:	ldrb	w0, [x0, #1]
  40aac8:	cbz	w0, 40a878 <__fxstatat@plt+0x7e28>
  40aacc:	nop
  40aad0:	ldr	x27, [x22, #48]
  40aad4:	cbnz	x27, 40aae4 <__fxstatat@plt+0x8094>
  40aad8:	b	40aafc <__fxstatat@plt+0x80ac>
  40aadc:	ldr	x27, [x27, #8]
  40aae0:	cbz	x27, 40aafc <__fxstatat@plt+0x80ac>
  40aae4:	ldr	x0, [x27]
  40aae8:	mov	x1, x28
  40aaec:	mov	w2, #0x4                   	// #4
  40aaf0:	bl	4028a0 <fnmatch@plt>
  40aaf4:	cbnz	w0, 40aadc <__fxstatat@plt+0x808c>
  40aaf8:	b	40a878 <__fxstatat@plt+0x7e28>
  40aafc:	ldrb	w0, [x19, #18]
  40ab00:	mov	w1, #0x0                   	// #0
  40ab04:	sub	w0, w0, #0x1
  40ab08:	and	w0, w0, #0xff
  40ab0c:	cmp	w0, #0xd
  40ab10:	b.hi	40ab20 <__fxstatat@plt+0x80d0>  // b.pmore
  40ab14:	ldr	x1, [sp, #104]
  40ab18:	and	x0, x0, #0xff
  40ab1c:	ldr	w1, [x1, x0, lsl #2]
  40ab20:	mov	x0, x28
  40ab24:	mov	x3, x24
  40ab28:	mov	w2, #0x0                   	// #0
  40ab2c:	bl	4096a8 <__fxstatat@plt+0x6c58>
  40ab30:	ldr	w1, [x21, #3636]
  40ab34:	add	x25, x25, x0
  40ab38:	cmp	w1, #0x1
  40ab3c:	b.ne	40a878 <__fxstatat@plt+0x7e28>  // b.any
  40ab40:	ldr	w0, [x21, #3144]
  40ab44:	cmn	w0, #0x1
  40ab48:	b.ne	40a878 <__fxstatat@plt+0x7e28>  // b.any
  40ab4c:	ldrb	w0, [x21, #3644]
  40ab50:	cbnz	w0, 40a878 <__fxstatat@plt+0x7e28>
  40ab54:	ldurb	w0, [x22, #-64]
  40ab58:	cbnz	w0, 40a878 <__fxstatat@plt+0x7e28>
  40ab5c:	bl	404ad8 <__fxstatat@plt+0x2088>
  40ab60:	bl	409060 <__fxstatat@plt+0x6610>
  40ab64:	ldr	x19, [x21, #3104]
  40ab68:	cbz	x19, 40ab9c <__fxstatat@plt+0x814c>
  40ab6c:	ldr	x28, [x21, #3136]
  40ab70:	add	x19, x28, x19, lsl #3
  40ab74:	nop
  40ab78:	ldr	x27, [x28], #8
  40ab7c:	ldr	x0, [x27]
  40ab80:	bl	402840 <free@plt>
  40ab84:	ldr	x0, [x27, #8]
  40ab88:	bl	402840 <free@plt>
  40ab8c:	ldr	x0, [x27, #16]
  40ab90:	bl	402840 <free@plt>
  40ab94:	cmp	x28, x19
  40ab98:	b.ne	40ab78 <__fxstatat@plt+0x8128>  // b.any
  40ab9c:	add	x0, x21, #0xfac
  40aba0:	str	xzr, [x21, #3104]
  40aba4:	strb	wzr, [x21, #3634]
  40aba8:	str	wzr, [x21, #3640]
  40abac:	stp	wzr, wzr, [x0, #-8]
  40abb0:	stp	wzr, wzr, [x0]
  40abb4:	str	wzr, [x21, #3660]
  40abb8:	str	wzr, [x21, #3668]
  40abbc:	strb	wzr, [x21, #3984]
  40abc0:	str	wzr, [x21, #3988]
  40abc4:	str	wzr, [x21, #3996]
  40abc8:	str	wzr, [x21, #4020]
  40abcc:	bl	405c40 <__fxstatat@plt+0x31f0>
  40abd0:	b	40a87c <__fxstatat@plt+0x7e2c>
  40abd4:	ldur	w0, [x22, #-188]
  40abd8:	cbnz	w0, 40a8dc <__fxstatat@plt+0x7e8c>
  40abdc:	mov	w0, #0x1                   	// #1
  40abe0:	stur	w0, [x22, #-188]
  40abe4:	b	40a8dc <__fxstatat@plt+0x7e8c>
  40abe8:	mov	x0, x24
  40abec:	mov	w1, #0x2                   	// #2
  40abf0:	bl	40ba78 <__fxstatat@plt+0x9028>
  40abf4:	mov	x25, x0
  40abf8:	cbnz	x0, 40a7ac <__fxstatat@plt+0x7d5c>
  40abfc:	mov	w2, #0x5                   	// #5
  40ac00:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40ac04:	add	x1, x1, #0x360
  40ac08:	bl	402970 <dcgettext@plt>
  40ac0c:	ldr	w4, [x20]
  40ac10:	mov	x26, x0
  40ac14:	mov	x1, x24
  40ac18:	mov	w0, #0x4                   	// #4
  40ac1c:	str	w4, [sp, #104]
  40ac20:	bl	413ba0 <__fxstatat@plt+0x11150>
  40ac24:	mov	x3, x0
  40ac28:	ldr	w4, [sp, #104]
  40ac2c:	mov	w0, #0x0                   	// #0
  40ac30:	mov	x2, x26
  40ac34:	mov	w1, w4
  40ac38:	bl	402490 <error@plt>
  40ac3c:	ldr	w0, [sp, #100]
  40ac40:	cbz	w0, 40ade0 <__fxstatat@plt+0x8390>
  40ac44:	mov	w0, #0x2                   	// #2
  40ac48:	stur	w0, [x22, #-188]
  40ac4c:	b	40a7ac <__fxstatat@plt+0x7d5c>
  40ac50:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  40ac54:	mov	w1, #0x2                   	// #2
  40ac58:	str	w1, [x0, #1572]
  40ac5c:	b	40aa8c <__fxstatat@plt+0x803c>
  40ac60:	bl	409060 <__fxstatat@plt+0x6610>
  40ac64:	ldp	x29, x30, [sp]
  40ac68:	ldp	x19, x20, [sp, #16]
  40ac6c:	ldp	x21, x22, [sp, #32]
  40ac70:	ldp	x23, x24, [sp, #48]
  40ac74:	ldp	x25, x26, [sp, #64]
  40ac78:	ldp	x27, x28, [sp, #80]
  40ac7c:	add	sp, sp, #0x300
  40ac80:	ret
  40ac84:	mov	x0, x24
  40ac88:	mov	w1, #0x0                   	// #0
  40ac8c:	bl	407690 <__fxstatat@plt+0x4c40>
  40ac90:	b	40a900 <__fxstatat@plt+0x7eb0>
  40ac94:	mov	w2, #0x5                   	// #5
  40ac98:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40ac9c:	mov	x0, #0x0                   	// #0
  40aca0:	add	x1, x1, #0x450
  40aca4:	bl	402970 <dcgettext@plt>
  40aca8:	ldr	w20, [x20]
  40acac:	mov	x19, x0
  40acb0:	mov	x1, x24
  40acb4:	mov	w0, #0x4                   	// #4
  40acb8:	bl	413ba0 <__fxstatat@plt+0x11150>
  40acbc:	mov	x2, x19
  40acc0:	mov	x3, x0
  40acc4:	mov	w1, w20
  40acc8:	mov	w0, #0x0                   	// #0
  40accc:	bl	402490 <error@plt>
  40acd0:	ldr	w0, [sp, #100]
  40acd4:	cbz	w0, 40ad90 <__fxstatat@plt+0x8340>
  40acd8:	mov	w0, #0x2                   	// #2
  40acdc:	stur	w0, [x22, #-188]
  40ace0:	b	40a8f4 <__fxstatat@plt+0x7ea4>
  40ace4:	ldr	x3, [x19, #1472]
  40ace8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  40acec:	mov	x2, #0x2                   	// #2
  40acf0:	add	x0, x0, #0x338
  40acf4:	mov	x1, #0x1                   	// #1
  40acf8:	bl	402410 <fwrite_unlocked@plt>
  40acfc:	ldr	x0, [x21, #3488]
  40ad00:	add	x0, x0, #0x2
  40ad04:	str	x0, [x21, #3488]
  40ad08:	b	40a7a0 <__fxstatat@plt+0x7d50>
  40ad0c:	ldr	x3, [x19, #1472]
  40ad10:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  40ad14:	mov	x2, #0x2                   	// #2
  40ad18:	add	x0, x0, #0x338
  40ad1c:	mov	x1, #0x1                   	// #1
  40ad20:	bl	402410 <fwrite_unlocked@plt>
  40ad24:	ldr	x0, [x21, #3488]
  40ad28:	add	x0, x0, #0x2
  40ad2c:	str	x0, [x21, #3488]
  40ad30:	b	40a91c <__fxstatat@plt+0x7ecc>
  40ad34:	mov	w2, #0x5                   	// #5
  40ad38:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40ad3c:	add	x1, x1, #0x3b8
  40ad40:	bl	402970 <dcgettext@plt>
  40ad44:	ldr	w20, [x20]
  40ad48:	mov	x19, x0
  40ad4c:	mov	x1, x24
  40ad50:	mov	w0, #0x4                   	// #4
  40ad54:	bl	413ba0 <__fxstatat@plt+0x11150>
  40ad58:	mov	x3, x0
  40ad5c:	mov	x2, x19
  40ad60:	mov	w0, #0x0                   	// #0
  40ad64:	mov	w1, w20
  40ad68:	bl	402490 <error@plt>
  40ad6c:	ldr	w0, [sp, #100]
  40ad70:	cbnz	w0, 40ada4 <__fxstatat@plt+0x8354>
  40ad74:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  40ad78:	add	x0, x0, #0x6e0
  40ad7c:	ldur	w1, [x0, #-188]
  40ad80:	cbnz	w1, 40a698 <__fxstatat@plt+0x7c48>
  40ad84:	mov	w1, #0x1                   	// #1
  40ad88:	stur	w1, [x0, #-188]
  40ad8c:	b	40a698 <__fxstatat@plt+0x7c48>
  40ad90:	ldur	w0, [x22, #-188]
  40ad94:	cbnz	w0, 40a8f4 <__fxstatat@plt+0x7ea4>
  40ad98:	mov	w0, #0x1                   	// #1
  40ad9c:	stur	w0, [x22, #-188]
  40ada0:	b	40a8f4 <__fxstatat@plt+0x7ea4>
  40ada4:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  40ada8:	mov	w1, #0x2                   	// #2
  40adac:	str	w1, [x0, #1572]
  40adb0:	b	40a698 <__fxstatat@plt+0x7c48>
  40adb4:	mov	w1, #0xa                   	// #10
  40adb8:	bl	402780 <__overflow@plt>
  40adbc:	b	40a788 <__fxstatat@plt+0x7d38>
  40adc0:	mov	x0, x2
  40adc4:	mov	w1, #0x20                  	// #32
  40adc8:	bl	402780 <__overflow@plt>
  40adcc:	b	40a974 <__fxstatat@plt+0x7f24>
  40add0:	mov	x0, x2
  40add4:	mov	w1, #0xa                   	// #10
  40add8:	bl	402780 <__overflow@plt>
  40addc:	b	40a9dc <__fxstatat@plt+0x7f8c>
  40ade0:	ldur	w0, [x22, #-188]
  40ade4:	cbnz	w0, 40a7a8 <__fxstatat@plt+0x7d58>
  40ade8:	mov	w0, #0x1                   	// #1
  40adec:	stur	w0, [x22, #-188]
  40adf0:	b	40a7ac <__fxstatat@plt+0x7d5c>
  40adf4:	bl	415e08 <__fxstatat@plt+0x133b8>
  40adf8:	stp	x29, x30, [sp, #-176]!
  40adfc:	mov	x29, sp
  40ae00:	stp	x19, x20, [sp, #16]
  40ae04:	mov	w20, w0
  40ae08:	stp	x21, x22, [sp, #32]
  40ae0c:	str	x23, [sp, #48]
  40ae10:	cbz	w0, 40ae50 <__fxstatat@plt+0x8400>
  40ae14:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40ae18:	mov	w2, #0x5                   	// #5
  40ae1c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40ae20:	add	x1, x1, #0x498
  40ae24:	ldr	x19, [x0, #1448]
  40ae28:	mov	x0, #0x0                   	// #0
  40ae2c:	bl	402970 <dcgettext@plt>
  40ae30:	mov	x2, x0
  40ae34:	adrp	x3, 434000 <__progname@@GLIBC_2.17+0xa38>
  40ae38:	mov	x0, x19
  40ae3c:	mov	w1, #0x1                   	// #1
  40ae40:	ldr	x3, [x3, #1880]
  40ae44:	bl	4027e0 <__fprintf_chk@plt>
  40ae48:	mov	w0, w20
  40ae4c:	bl	402460 <exit@plt>
  40ae50:	mov	w2, #0x5                   	// #5
  40ae54:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40ae58:	mov	x0, #0x0                   	// #0
  40ae5c:	add	x1, x1, #0x4c0
  40ae60:	bl	402970 <dcgettext@plt>
  40ae64:	adrp	x19, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40ae68:	adrp	x2, 434000 <__progname@@GLIBC_2.17+0xa38>
  40ae6c:	mov	x1, x0
  40ae70:	mov	w0, #0x1                   	// #1
  40ae74:	ldr	x2, [x2, #1880]
  40ae78:	bl	402670 <__printf_chk@plt>
  40ae7c:	mov	w2, #0x5                   	// #5
  40ae80:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40ae84:	mov	x0, #0x0                   	// #0
  40ae88:	add	x1, x1, #0x4e8
  40ae8c:	bl	402970 <dcgettext@plt>
  40ae90:	ldr	x1, [x19, #1472]
  40ae94:	bl	402980 <fputs_unlocked@plt>
  40ae98:	mov	w2, #0x5                   	// #5
  40ae9c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40aea0:	mov	x0, #0x0                   	// #0
  40aea4:	add	x1, x1, #0x578
  40aea8:	bl	402970 <dcgettext@plt>
  40aeac:	ldr	x1, [x19, #1472]
  40aeb0:	bl	402980 <fputs_unlocked@plt>
  40aeb4:	mov	w2, #0x5                   	// #5
  40aeb8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40aebc:	mov	x0, #0x0                   	// #0
  40aec0:	add	x1, x1, #0x5c8
  40aec4:	bl	402970 <dcgettext@plt>
  40aec8:	ldr	x1, [x19, #1472]
  40aecc:	bl	402980 <fputs_unlocked@plt>
  40aed0:	mov	w2, #0x5                   	// #5
  40aed4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40aed8:	mov	x0, #0x0                   	// #0
  40aedc:	add	x1, x1, #0x6d8
  40aee0:	bl	402970 <dcgettext@plt>
  40aee4:	ldr	x1, [x19, #1472]
  40aee8:	bl	402980 <fputs_unlocked@plt>
  40aeec:	mov	w2, #0x5                   	// #5
  40aef0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40aef4:	mov	x0, #0x0                   	// #0
  40aef8:	add	x1, x1, #0x778
  40aefc:	bl	402970 <dcgettext@plt>
  40af00:	ldr	x1, [x19, #1472]
  40af04:	bl	402980 <fputs_unlocked@plt>
  40af08:	mov	w2, #0x5                   	// #5
  40af0c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40af10:	mov	x0, #0x0                   	// #0
  40af14:	add	x1, x1, #0x8e8
  40af18:	bl	402970 <dcgettext@plt>
  40af1c:	ldr	x1, [x19, #1472]
  40af20:	bl	402980 <fputs_unlocked@plt>
  40af24:	mov	w2, #0x5                   	// #5
  40af28:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40af2c:	mov	x0, #0x0                   	// #0
  40af30:	add	x1, x1, #0xa58
  40af34:	bl	402970 <dcgettext@plt>
  40af38:	ldr	x1, [x19, #1472]
  40af3c:	bl	402980 <fputs_unlocked@plt>
  40af40:	mov	w2, #0x5                   	// #5
  40af44:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40af48:	mov	x0, #0x0                   	// #0
  40af4c:	add	x1, x1, #0xc00
  40af50:	bl	402970 <dcgettext@plt>
  40af54:	ldr	x1, [x19, #1472]
  40af58:	bl	402980 <fputs_unlocked@plt>
  40af5c:	mov	w2, #0x5                   	// #5
  40af60:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40af64:	mov	x0, #0x0                   	// #0
  40af68:	add	x1, x1, #0xc40
  40af6c:	bl	402970 <dcgettext@plt>
  40af70:	ldr	x1, [x19, #1472]
  40af74:	bl	402980 <fputs_unlocked@plt>
  40af78:	mov	w2, #0x5                   	// #5
  40af7c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40af80:	mov	x0, #0x0                   	// #0
  40af84:	add	x1, x1, #0xd38
  40af88:	bl	402970 <dcgettext@plt>
  40af8c:	ldr	x1, [x19, #1472]
  40af90:	bl	402980 <fputs_unlocked@plt>
  40af94:	mov	w2, #0x5                   	// #5
  40af98:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40af9c:	mov	x0, #0x0                   	// #0
  40afa0:	add	x1, x1, #0xd88
  40afa4:	bl	402970 <dcgettext@plt>
  40afa8:	ldr	x1, [x19, #1472]
  40afac:	bl	402980 <fputs_unlocked@plt>
  40afb0:	mov	w2, #0x5                   	// #5
  40afb4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40afb8:	mov	x0, #0x0                   	// #0
  40afbc:	add	x1, x1, #0xe20
  40afc0:	bl	402970 <dcgettext@plt>
  40afc4:	ldr	x1, [x19, #1472]
  40afc8:	bl	402980 <fputs_unlocked@plt>
  40afcc:	mov	w2, #0x5                   	// #5
  40afd0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f80>
  40afd4:	mov	x0, #0x0                   	// #0
  40afd8:	add	x1, x1, #0xfc8
  40afdc:	bl	402970 <dcgettext@plt>
  40afe0:	ldr	x1, [x19, #1472]
  40afe4:	bl	402980 <fputs_unlocked@plt>
  40afe8:	mov	w2, #0x5                   	// #5
  40afec:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40aff0:	mov	x0, #0x0                   	// #0
  40aff4:	add	x1, x1, #0x60
  40aff8:	bl	402970 <dcgettext@plt>
  40affc:	ldr	x1, [x19, #1472]
  40b000:	bl	402980 <fputs_unlocked@plt>
  40b004:	mov	w2, #0x5                   	// #5
  40b008:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b00c:	mov	x0, #0x0                   	// #0
  40b010:	add	x1, x1, #0x1c8
  40b014:	bl	402970 <dcgettext@plt>
  40b018:	ldr	x1, [x19, #1472]
  40b01c:	bl	402980 <fputs_unlocked@plt>
  40b020:	mov	w2, #0x5                   	// #5
  40b024:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b028:	mov	x0, #0x0                   	// #0
  40b02c:	add	x1, x1, #0x260
  40b030:	bl	402970 <dcgettext@plt>
  40b034:	ldr	x1, [x19, #1472]
  40b038:	bl	402980 <fputs_unlocked@plt>
  40b03c:	mov	w2, #0x5                   	// #5
  40b040:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b044:	mov	x0, #0x0                   	// #0
  40b048:	add	x1, x1, #0x3c8
  40b04c:	bl	402970 <dcgettext@plt>
  40b050:	ldr	x1, [x19, #1472]
  40b054:	bl	402980 <fputs_unlocked@plt>
  40b058:	mov	w2, #0x5                   	// #5
  40b05c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b060:	mov	x0, #0x0                   	// #0
  40b064:	add	x1, x1, #0x4f8
  40b068:	bl	402970 <dcgettext@plt>
  40b06c:	ldr	x1, [x19, #1472]
  40b070:	bl	402980 <fputs_unlocked@plt>
  40b074:	mov	w2, #0x5                   	// #5
  40b078:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b07c:	mov	x0, #0x0                   	// #0
  40b080:	add	x1, x1, #0x748
  40b084:	bl	402970 <dcgettext@plt>
  40b088:	ldr	x1, [x19, #1472]
  40b08c:	bl	402980 <fputs_unlocked@plt>
  40b090:	mov	w2, #0x5                   	// #5
  40b094:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b098:	mov	x0, #0x0                   	// #0
  40b09c:	add	x1, x1, #0x810
  40b0a0:	bl	402970 <dcgettext@plt>
  40b0a4:	ldr	x1, [x19, #1472]
  40b0a8:	bl	402980 <fputs_unlocked@plt>
  40b0ac:	mov	w2, #0x5                   	// #5
  40b0b0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b0b4:	mov	x0, #0x0                   	// #0
  40b0b8:	add	x1, x1, #0xa18
  40b0bc:	bl	402970 <dcgettext@plt>
  40b0c0:	ldr	x1, [x19, #1472]
  40b0c4:	bl	402980 <fputs_unlocked@plt>
  40b0c8:	mov	w2, #0x5                   	// #5
  40b0cc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b0d0:	mov	x0, #0x0                   	// #0
  40b0d4:	add	x1, x1, #0xa68
  40b0d8:	bl	402970 <dcgettext@plt>
  40b0dc:	ldr	x1, [x19, #1472]
  40b0e0:	bl	402980 <fputs_unlocked@plt>
  40b0e4:	mov	w2, #0x5                   	// #5
  40b0e8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b0ec:	mov	x0, #0x0                   	// #0
  40b0f0:	add	x1, x1, #0xaf8
  40b0f4:	bl	402970 <dcgettext@plt>
  40b0f8:	ldr	x1, [x19, #1472]
  40b0fc:	bl	402980 <fputs_unlocked@plt>
  40b100:	mov	w2, #0x5                   	// #5
  40b104:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b108:	mov	x0, #0x0                   	// #0
  40b10c:	add	x1, x1, #0xc70
  40b110:	bl	402970 <dcgettext@plt>
  40b114:	ldr	x1, [x19, #1472]
  40b118:	bl	402980 <fputs_unlocked@plt>
  40b11c:	mov	w2, #0x5                   	// #5
  40b120:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b124:	mov	x0, #0x0                   	// #0
  40b128:	add	x1, x1, #0xde0
  40b12c:	bl	402970 <dcgettext@plt>
  40b130:	ldr	x1, [x19, #1472]
  40b134:	bl	402980 <fputs_unlocked@plt>
  40b138:	mov	w2, #0x5                   	// #5
  40b13c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b140:	mov	x0, #0x0                   	// #0
  40b144:	add	x1, x1, #0xe10
  40b148:	bl	402970 <dcgettext@plt>
  40b14c:	ldr	x1, [x19, #1472]
  40b150:	bl	402980 <fputs_unlocked@plt>
  40b154:	mov	w2, #0x5                   	// #5
  40b158:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b15c:	mov	x0, #0x0                   	// #0
  40b160:	add	x1, x1, #0xe48
  40b164:	bl	402970 <dcgettext@plt>
  40b168:	ldr	x1, [x19, #1472]
  40b16c:	bl	402980 <fputs_unlocked@plt>
  40b170:	mov	w2, #0x5                   	// #5
  40b174:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b178:	mov	x0, #0x0                   	// #0
  40b17c:	add	x1, x1, #0xf20
  40b180:	bl	402970 <dcgettext@plt>
  40b184:	ldr	x1, [x19, #1472]
  40b188:	bl	402980 <fputs_unlocked@plt>
  40b18c:	mov	w2, #0x5                   	// #5
  40b190:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b194:	mov	x0, #0x0                   	// #0
  40b198:	add	x1, x1, #0x98
  40b19c:	bl	402970 <dcgettext@plt>
  40b1a0:	ldr	x1, [x19, #1472]
  40b1a4:	bl	402980 <fputs_unlocked@plt>
  40b1a8:	mov	w2, #0x5                   	// #5
  40b1ac:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b1b0:	mov	x0, #0x0                   	// #0
  40b1b4:	add	x1, x1, #0x1b8
  40b1b8:	bl	402970 <dcgettext@plt>
  40b1bc:	ldr	x1, [x19, #1472]
  40b1c0:	bl	402980 <fputs_unlocked@plt>
  40b1c4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40b1c8:	ldr	w0, [x0, #1308]
  40b1cc:	cmp	w0, #0x1
  40b1d0:	b.eq	40b31c <__fxstatat@plt+0x88cc>  // b.none
  40b1d4:	cmp	w0, #0x2
  40b1d8:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x1f80>
  40b1dc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1f80>
  40b1e0:	add	x21, x21, #0x478
  40b1e4:	add	x0, x0, #0x480
  40b1e8:	csel	x21, x21, x0, eq  // eq = none
  40b1ec:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b1f0:	add	x2, x2, #0xe80
  40b1f4:	add	x2, x2, #0x270
  40b1f8:	add	x22, sp, #0x40
  40b1fc:	ldr	x1, [x2]
  40b200:	ldr	x0, [x2, #8]
  40b204:	stp	x1, x0, [sp, #64]
  40b208:	ldp	x4, x5, [x2, #16]
  40b20c:	stp	x4, x5, [sp, #80]
  40b210:	ldp	x4, x5, [x2, #32]
  40b214:	stp	x4, x5, [sp, #96]
  40b218:	ldp	x4, x5, [x2, #48]
  40b21c:	stp	x4, x5, [sp, #112]
  40b220:	ldp	x4, x5, [x2, #64]
  40b224:	stp	x4, x5, [sp, #128]
  40b228:	ldp	x4, x5, [x2, #80]
  40b22c:	stp	x4, x5, [sp, #144]
  40b230:	ldp	x2, x3, [x2, #96]
  40b234:	stp	x2, x3, [sp, #160]
  40b238:	cbnz	x1, 40b248 <__fxstatat@plt+0x87f8>
  40b23c:	b	40b254 <__fxstatat@plt+0x8804>
  40b240:	ldr	x1, [x22, #16]!
  40b244:	cbz	x1, 40b254 <__fxstatat@plt+0x8804>
  40b248:	mov	x0, x21
  40b24c:	bl	402800 <strcmp@plt>
  40b250:	cbnz	w0, 40b240 <__fxstatat@plt+0x87f0>
  40b254:	ldr	x23, [x22, #8]
  40b258:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b25c:	mov	w2, #0x5                   	// #5
  40b260:	add	x1, x1, #0x250
  40b264:	mov	x0, #0x0                   	// #0
  40b268:	cbz	x23, 40b34c <__fxstatat@plt+0x88fc>
  40b26c:	bl	402970 <dcgettext@plt>
  40b270:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b274:	add	x22, x22, #0x268
  40b278:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b27c:	mov	x3, x22
  40b280:	add	x2, x2, #0x290
  40b284:	mov	x1, x0
  40b288:	mov	w0, #0x1                   	// #1
  40b28c:	bl	402670 <__printf_chk@plt>
  40b290:	mov	x1, #0x0                   	// #0
  40b294:	mov	w0, #0x5                   	// #5
  40b298:	bl	402a40 <setlocale@plt>
  40b29c:	cbz	x0, 40b2b4 <__fxstatat@plt+0x8864>
  40b2a0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b2a4:	mov	x2, #0x3                   	// #3
  40b2a8:	add	x1, x1, #0x2a0
  40b2ac:	bl	402640 <strncmp@plt>
  40b2b0:	cbnz	w0, 40b32c <__fxstatat@plt+0x88dc>
  40b2b4:	mov	w2, #0x5                   	// #5
  40b2b8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b2bc:	mov	x0, #0x0                   	// #0
  40b2c0:	add	x1, x1, #0x2f0
  40b2c4:	bl	402970 <dcgettext@plt>
  40b2c8:	mov	x1, x0
  40b2cc:	mov	x3, x21
  40b2d0:	mov	x2, x22
  40b2d4:	mov	w0, #0x1                   	// #1
  40b2d8:	bl	402670 <__printf_chk@plt>
  40b2dc:	mov	w2, #0x5                   	// #5
  40b2e0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b2e4:	mov	x0, #0x0                   	// #0
  40b2e8:	add	x1, x1, #0x310
  40b2ec:	bl	402970 <dcgettext@plt>
  40b2f0:	mov	x1, x0
  40b2f4:	cmp	x21, x23
  40b2f8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40b2fc:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  40b300:	add	x2, x2, #0x58
  40b304:	add	x3, x3, #0x488
  40b308:	csel	x3, x3, x2, eq  // eq = none
  40b30c:	mov	x2, x23
  40b310:	mov	w0, #0x1                   	// #1
  40b314:	bl	402670 <__printf_chk@plt>
  40b318:	b	40ae48 <__fxstatat@plt+0x83f8>
  40b31c:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x1f80>
  40b320:	add	x21, x21, #0x470
  40b324:	b	40b1ec <__fxstatat@plt+0x879c>
  40b328:	mov	x23, x21
  40b32c:	mov	w2, #0x5                   	// #5
  40b330:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b334:	mov	x0, #0x0                   	// #0
  40b338:	add	x1, x1, #0x2a8
  40b33c:	bl	402970 <dcgettext@plt>
  40b340:	ldr	x1, [x19, #1472]
  40b344:	bl	402980 <fputs_unlocked@plt>
  40b348:	b	40b2b4 <__fxstatat@plt+0x8864>
  40b34c:	bl	402970 <dcgettext@plt>
  40b350:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b354:	add	x22, x22, #0x268
  40b358:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b35c:	mov	x3, x22
  40b360:	add	x2, x2, #0x290
  40b364:	mov	x1, x0
  40b368:	mov	w0, #0x1                   	// #1
  40b36c:	bl	402670 <__printf_chk@plt>
  40b370:	mov	x1, #0x0                   	// #0
  40b374:	mov	w0, #0x5                   	// #5
  40b378:	bl	402a40 <setlocale@plt>
  40b37c:	cbz	x0, 40b3e4 <__fxstatat@plt+0x8994>
  40b380:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b384:	mov	x2, #0x3                   	// #3
  40b388:	add	x1, x1, #0x2a0
  40b38c:	bl	402640 <strncmp@plt>
  40b390:	cbnz	w0, 40b328 <__fxstatat@plt+0x88d8>
  40b394:	mov	w2, #0x5                   	// #5
  40b398:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b39c:	mov	x0, #0x0                   	// #0
  40b3a0:	add	x1, x1, #0x2f0
  40b3a4:	bl	402970 <dcgettext@plt>
  40b3a8:	mov	x1, x0
  40b3ac:	mov	x2, x22
  40b3b0:	mov	x3, x21
  40b3b4:	mov	w0, #0x1                   	// #1
  40b3b8:	bl	402670 <__printf_chk@plt>
  40b3bc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b3c0:	add	x1, x1, #0x310
  40b3c4:	mov	w2, #0x5                   	// #5
  40b3c8:	mov	x0, #0x0                   	// #0
  40b3cc:	bl	402970 <dcgettext@plt>
  40b3d0:	mov	x23, x21
  40b3d4:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1f80>
  40b3d8:	mov	x1, x0
  40b3dc:	add	x3, x3, #0x488
  40b3e0:	b	40b30c <__fxstatat@plt+0x88bc>
  40b3e4:	mov	w2, #0x5                   	// #5
  40b3e8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b3ec:	add	x1, x1, #0x2f0
  40b3f0:	bl	402970 <dcgettext@plt>
  40b3f4:	mov	x2, x22
  40b3f8:	mov	x1, x0
  40b3fc:	mov	x3, x21
  40b400:	mov	w0, #0x1                   	// #1
  40b404:	bl	402670 <__printf_chk@plt>
  40b408:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40b40c:	mov	w2, #0x5                   	// #5
  40b410:	add	x1, x1, #0x310
  40b414:	mov	x0, #0x0                   	// #0
  40b418:	b	40b3cc <__fxstatat@plt+0x897c>
  40b41c:	nop
  40b420:	stp	x29, x30, [sp, #-64]!
  40b424:	cmp	x1, #0x401
  40b428:	mov	x29, sp
  40b42c:	stp	x19, x20, [sp, #16]
  40b430:	mov	x19, #0x401                 	// #1025
  40b434:	csinc	x19, x19, x1, cs  // cs = hs, nlast
  40b438:	stp	x21, x22, [sp, #32]
  40b43c:	mov	x22, x0
  40b440:	stp	x23, x24, [sp, #48]
  40b444:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
  40b448:	mov	x24, #0x7ffffffffffffffe    	// #9223372036854775806
  40b44c:	nop
  40b450:	mov	x0, x19
  40b454:	bl	4025f0 <malloc@plt>
  40b458:	mov	x20, x0
  40b45c:	mov	x2, x19
  40b460:	mov	x0, x22
  40b464:	mov	x1, x20
  40b468:	cbz	x20, 40b4b0 <__fxstatat@plt+0x8a60>
  40b46c:	bl	4024d0 <readlink@plt>
  40b470:	mov	x21, x0
  40b474:	tbnz	x0, #63, 40b4fc <__fxstatat@plt+0x8aac>
  40b478:	mov	x0, x20
  40b47c:	cmp	x19, x21
  40b480:	b.hi	40b530 <__fxstatat@plt+0x8ae0>  // b.pmore
  40b484:	bl	402840 <free@plt>
  40b488:	cmp	x19, x23
  40b48c:	b.hi	40b4c8 <__fxstatat@plt+0x8a78>  // b.pmore
  40b490:	lsl	x19, x19, #1
  40b494:	mov	x0, x19
  40b498:	bl	4025f0 <malloc@plt>
  40b49c:	mov	x20, x0
  40b4a0:	mov	x2, x19
  40b4a4:	mov	x0, x22
  40b4a8:	mov	x1, x20
  40b4ac:	cbnz	x20, 40b46c <__fxstatat@plt+0x8a1c>
  40b4b0:	mov	x0, x20
  40b4b4:	ldp	x19, x20, [sp, #16]
  40b4b8:	ldp	x21, x22, [sp, #32]
  40b4bc:	ldp	x23, x24, [sp, #48]
  40b4c0:	ldp	x29, x30, [sp], #64
  40b4c4:	ret
  40b4c8:	cmp	x19, x24
  40b4cc:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  40b4d0:	b.ls	40b450 <__fxstatat@plt+0x8a00>  // b.plast
  40b4d4:	bl	4029e0 <__errno_location@plt>
  40b4d8:	mov	x20, #0x0                   	// #0
  40b4dc:	mov	w1, #0xc                   	// #12
  40b4e0:	str	w1, [x0]
  40b4e4:	mov	x0, x20
  40b4e8:	ldp	x19, x20, [sp, #16]
  40b4ec:	ldp	x21, x22, [sp, #32]
  40b4f0:	ldp	x23, x24, [sp, #48]
  40b4f4:	ldp	x29, x30, [sp], #64
  40b4f8:	ret
  40b4fc:	bl	4029e0 <__errno_location@plt>
  40b500:	ldr	w0, [x0]
  40b504:	cmp	w0, #0x22
  40b508:	b.eq	40b478 <__fxstatat@plt+0x8a28>  // b.none
  40b50c:	mov	x0, x20
  40b510:	mov	x20, #0x0                   	// #0
  40b514:	bl	402840 <free@plt>
  40b518:	mov	x0, x20
  40b51c:	ldp	x19, x20, [sp, #16]
  40b520:	ldp	x21, x22, [sp, #32]
  40b524:	ldp	x23, x24, [sp, #48]
  40b528:	ldp	x29, x30, [sp], #64
  40b52c:	ret
  40b530:	strb	wzr, [x20, x21]
  40b534:	mov	x0, x20
  40b538:	ldp	x19, x20, [sp, #16]
  40b53c:	ldp	x21, x22, [sp, #32]
  40b540:	ldp	x23, x24, [sp, #48]
  40b544:	ldp	x29, x30, [sp], #64
  40b548:	ret
  40b54c:	nop
  40b550:	mov	w0, #0x1                   	// #1
  40b554:	b	40adf8 <__fxstatat@plt+0x83a8>
  40b558:	stp	x29, x30, [sp, #-96]!
  40b55c:	mov	x29, sp
  40b560:	stp	x23, x24, [sp, #48]
  40b564:	mov	x23, x1
  40b568:	stp	x21, x22, [sp, #32]
  40b56c:	mov	x22, x3
  40b570:	stp	x25, x26, [sp, #64]
  40b574:	mov	x26, x2
  40b578:	mov	x25, x0
  40b57c:	stp	x27, x28, [sp, #80]
  40b580:	bl	402430 <strlen@plt>
  40b584:	ldr	x28, [x23]
  40b588:	cbz	x28, 40b6c8 <__fxstatat@plt+0x8c78>
  40b58c:	stp	x19, x20, [sp, #16]
  40b590:	mov	x21, x0
  40b594:	cbz	x26, 40b670 <__fxstatat@plt+0x8c20>
  40b598:	mov	x20, x26
  40b59c:	mov	w27, #0x0                   	// #0
  40b5a0:	mov	x24, #0xffffffffffffffff    	// #-1
  40b5a4:	mov	x19, #0x0                   	// #0
  40b5a8:	b	40b5c8 <__fxstatat@plt+0x8b78>
  40b5ac:	bl	4027a0 <memcmp@plt>
  40b5b0:	cmp	w0, #0x0
  40b5b4:	csinc	w27, w27, wzr, eq  // eq = none
  40b5b8:	add	x19, x19, #0x1
  40b5bc:	add	x20, x20, x22
  40b5c0:	ldr	x28, [x23, x19, lsl #3]
  40b5c4:	cbz	x28, 40b620 <__fxstatat@plt+0x8bd0>
  40b5c8:	mov	x1, x25
  40b5cc:	mov	x2, x21
  40b5d0:	mov	x0, x28
  40b5d4:	bl	402640 <strncmp@plt>
  40b5d8:	mov	w1, w0
  40b5dc:	mov	x0, x28
  40b5e0:	cbnz	w1, 40b5b8 <__fxstatat@plt+0x8b68>
  40b5e4:	bl	402430 <strlen@plt>
  40b5e8:	mov	x3, x0
  40b5ec:	mov	x2, x22
  40b5f0:	madd	x0, x24, x22, x26
  40b5f4:	mov	x1, x20
  40b5f8:	cmp	x21, x3
  40b5fc:	b.eq	40b64c <__fxstatat@plt+0x8bfc>  // b.none
  40b600:	cmn	x24, #0x1
  40b604:	b.ne	40b5ac <__fxstatat@plt+0x8b5c>  // b.any
  40b608:	mov	x24, x19
  40b60c:	add	x19, x19, #0x1
  40b610:	add	x20, x20, x22
  40b614:	ldr	x28, [x23, x19, lsl #3]
  40b618:	cbnz	x28, 40b5c8 <__fxstatat@plt+0x8b78>
  40b61c:	nop
  40b620:	ldp	x19, x20, [sp, #16]
  40b624:	cmp	w27, #0x0
  40b628:	mov	x0, #0xfffffffffffffffe    	// #-2
  40b62c:	csel	x24, x24, x0, eq  // eq = none
  40b630:	mov	x0, x24
  40b634:	ldp	x21, x22, [sp, #32]
  40b638:	ldp	x23, x24, [sp, #48]
  40b63c:	ldp	x25, x26, [sp, #64]
  40b640:	ldp	x27, x28, [sp, #80]
  40b644:	ldp	x29, x30, [sp], #96
  40b648:	ret
  40b64c:	mov	x24, x19
  40b650:	mov	x0, x24
  40b654:	ldp	x19, x20, [sp, #16]
  40b658:	ldp	x21, x22, [sp, #32]
  40b65c:	ldp	x23, x24, [sp, #48]
  40b660:	ldp	x25, x26, [sp, #64]
  40b664:	ldp	x27, x28, [sp, #80]
  40b668:	ldp	x29, x30, [sp], #96
  40b66c:	ret
  40b670:	mov	w27, #0x0                   	// #0
  40b674:	mov	x24, #0xffffffffffffffff    	// #-1
  40b678:	mov	x19, #0x0                   	// #0
  40b67c:	b	40b690 <__fxstatat@plt+0x8c40>
  40b680:	mov	w27, #0x1                   	// #1
  40b684:	add	x19, x19, #0x1
  40b688:	ldr	x28, [x23, x19, lsl #3]
  40b68c:	cbz	x28, 40b620 <__fxstatat@plt+0x8bd0>
  40b690:	mov	x1, x25
  40b694:	mov	x2, x21
  40b698:	mov	x0, x28
  40b69c:	bl	402640 <strncmp@plt>
  40b6a0:	mov	w1, w0
  40b6a4:	mov	x0, x28
  40b6a8:	cbnz	w1, 40b684 <__fxstatat@plt+0x8c34>
  40b6ac:	bl	402430 <strlen@plt>
  40b6b0:	cmp	x0, x21
  40b6b4:	b.eq	40b64c <__fxstatat@plt+0x8bfc>  // b.none
  40b6b8:	cmn	x24, #0x1
  40b6bc:	b.ne	40b680 <__fxstatat@plt+0x8c30>  // b.any
  40b6c0:	mov	x24, x19
  40b6c4:	b	40b684 <__fxstatat@plt+0x8c34>
  40b6c8:	mov	x24, #0xffffffffffffffff    	// #-1
  40b6cc:	b	40b630 <__fxstatat@plt+0x8be0>
  40b6d0:	stp	x29, x30, [sp, #-48]!
  40b6d4:	cmn	x2, #0x1
  40b6d8:	mov	x29, sp
  40b6dc:	stp	x19, x20, [sp, #16]
  40b6e0:	mov	x20, x0
  40b6e4:	str	x21, [sp, #32]
  40b6e8:	mov	x21, x1
  40b6ec:	b.eq	40b74c <__fxstatat@plt+0x8cfc>  // b.none
  40b6f0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40b6f4:	mov	w2, #0x5                   	// #5
  40b6f8:	add	x1, x1, #0xad8
  40b6fc:	mov	x0, #0x0                   	// #0
  40b700:	bl	402970 <dcgettext@plt>
  40b704:	mov	x19, x0
  40b708:	mov	x2, x21
  40b70c:	mov	w1, #0x8                   	// #8
  40b710:	mov	w0, #0x0                   	// #0
  40b714:	bl	413b00 <__fxstatat@plt+0x110b0>
  40b718:	mov	x1, x20
  40b71c:	mov	x20, x0
  40b720:	mov	w0, #0x1                   	// #1
  40b724:	bl	414ca8 <__fxstatat@plt+0x12258>
  40b728:	mov	x3, x20
  40b72c:	mov	x2, x19
  40b730:	ldp	x19, x20, [sp, #16]
  40b734:	mov	x4, x0
  40b738:	ldr	x21, [sp, #32]
  40b73c:	mov	w1, #0x0                   	// #0
  40b740:	ldp	x29, x30, [sp], #48
  40b744:	mov	w0, #0x0                   	// #0
  40b748:	b	402490 <error@plt>
  40b74c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40b750:	mov	w2, #0x5                   	// #5
  40b754:	add	x1, x1, #0xab8
  40b758:	mov	x0, #0x0                   	// #0
  40b75c:	bl	402970 <dcgettext@plt>
  40b760:	mov	x19, x0
  40b764:	b	40b708 <__fxstatat@plt+0x8cb8>
  40b768:	stp	x29, x30, [sp, #-112]!
  40b76c:	mov	x29, sp
  40b770:	stp	x27, x28, [sp, #80]
  40b774:	adrp	x28, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40b778:	stp	x19, x20, [sp, #16]
  40b77c:	mov	x20, x1
  40b780:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40b784:	add	x1, x1, #0xaf8
  40b788:	stp	x21, x22, [sp, #32]
  40b78c:	mov	x22, x2
  40b790:	mov	w2, #0x5                   	// #5
  40b794:	stp	x23, x24, [sp, #48]
  40b798:	mov	x24, x0
  40b79c:	mov	x0, #0x0                   	// #0
  40b7a0:	bl	402970 <dcgettext@plt>
  40b7a4:	ldr	x1, [x28, #1448]
  40b7a8:	bl	402980 <fputs_unlocked@plt>
  40b7ac:	ldr	x21, [x24]
  40b7b0:	cbz	x21, 40b828 <__fxstatat@plt+0x8dd8>
  40b7b4:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40b7b8:	add	x27, x27, #0xb18
  40b7bc:	stp	x25, x26, [sp, #64]
  40b7c0:	adrp	x26, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40b7c4:	add	x25, x28, #0x5a8
  40b7c8:	add	x26, x26, #0xb10
  40b7cc:	mov	x23, #0x0                   	// #0
  40b7d0:	mov	x19, #0x0                   	// #0
  40b7d4:	nop
  40b7d8:	cbz	x19, 40b7f0 <__fxstatat@plt+0x8da0>
  40b7dc:	mov	x2, x22
  40b7e0:	mov	x1, x20
  40b7e4:	mov	x0, x23
  40b7e8:	bl	4027a0 <memcmp@plt>
  40b7ec:	cbz	w0, 40b860 <__fxstatat@plt+0x8e10>
  40b7f0:	ldr	x23, [x25]
  40b7f4:	mov	x0, x21
  40b7f8:	bl	414e28 <__fxstatat@plt+0x123d8>
  40b7fc:	mov	x3, x0
  40b800:	mov	x2, x26
  40b804:	mov	x0, x23
  40b808:	mov	w1, #0x1                   	// #1
  40b80c:	mov	x23, x20
  40b810:	bl	4027e0 <__fprintf_chk@plt>
  40b814:	add	x19, x19, #0x1
  40b818:	add	x20, x20, x22
  40b81c:	ldr	x21, [x24, x19, lsl #3]
  40b820:	cbnz	x21, 40b7d8 <__fxstatat@plt+0x8d88>
  40b824:	ldp	x25, x26, [sp, #64]
  40b828:	ldr	x0, [x28, #1448]
  40b82c:	ldp	x1, x2, [x0, #40]
  40b830:	cmp	x1, x2
  40b834:	b.cs	40b88c <__fxstatat@plt+0x8e3c>  // b.hs, b.nlast
  40b838:	add	x2, x1, #0x1
  40b83c:	str	x2, [x0, #40]
  40b840:	mov	w0, #0xa                   	// #10
  40b844:	strb	w0, [x1]
  40b848:	ldp	x19, x20, [sp, #16]
  40b84c:	ldp	x21, x22, [sp, #32]
  40b850:	ldp	x23, x24, [sp, #48]
  40b854:	ldp	x27, x28, [sp, #80]
  40b858:	ldp	x29, x30, [sp], #112
  40b85c:	ret
  40b860:	ldr	x1, [x25]
  40b864:	mov	x0, x21
  40b868:	str	x1, [sp, #104]
  40b86c:	bl	414e28 <__fxstatat@plt+0x123d8>
  40b870:	mov	x3, x0
  40b874:	ldr	x1, [sp, #104]
  40b878:	mov	x2, x27
  40b87c:	mov	x0, x1
  40b880:	mov	w1, #0x1                   	// #1
  40b884:	bl	4027e0 <__fprintf_chk@plt>
  40b888:	b	40b814 <__fxstatat@plt+0x8dc4>
  40b88c:	ldp	x19, x20, [sp, #16]
  40b890:	mov	w1, #0xa                   	// #10
  40b894:	ldp	x21, x22, [sp, #32]
  40b898:	ldp	x23, x24, [sp, #48]
  40b89c:	ldp	x27, x28, [sp, #80]
  40b8a0:	ldp	x29, x30, [sp], #112
  40b8a4:	b	402780 <__overflow@plt>
  40b8a8:	stp	x29, x30, [sp, #-80]!
  40b8ac:	mov	x29, sp
  40b8b0:	stp	x19, x20, [sp, #16]
  40b8b4:	mov	x19, x2
  40b8b8:	mov	x20, x3
  40b8bc:	stp	x21, x22, [sp, #32]
  40b8c0:	mov	x22, x1
  40b8c4:	mov	x21, x4
  40b8c8:	mov	x3, x4
  40b8cc:	mov	x2, x20
  40b8d0:	mov	x1, x19
  40b8d4:	stp	x23, x24, [sp, #48]
  40b8d8:	mov	x24, x0
  40b8dc:	mov	x23, x5
  40b8e0:	mov	x0, x22
  40b8e4:	bl	40b558 <__fxstatat@plt+0x8b08>
  40b8e8:	tbnz	x0, #63, 40b900 <__fxstatat@plt+0x8eb0>
  40b8ec:	ldp	x19, x20, [sp, #16]
  40b8f0:	ldp	x21, x22, [sp, #32]
  40b8f4:	ldp	x23, x24, [sp, #48]
  40b8f8:	ldp	x29, x30, [sp], #80
  40b8fc:	ret
  40b900:	str	x25, [sp, #64]
  40b904:	cmn	x0, #0x1
  40b908:	b.eq	40b97c <__fxstatat@plt+0x8f2c>  // b.none
  40b90c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40b910:	mov	w2, #0x5                   	// #5
  40b914:	add	x1, x1, #0xad8
  40b918:	mov	x0, #0x0                   	// #0
  40b91c:	bl	402970 <dcgettext@plt>
  40b920:	mov	x25, x0
  40b924:	mov	x2, x22
  40b928:	mov	w1, #0x8                   	// #8
  40b92c:	mov	w0, #0x0                   	// #0
  40b930:	bl	413b00 <__fxstatat@plt+0x110b0>
  40b934:	mov	x1, x24
  40b938:	mov	x22, x0
  40b93c:	mov	w0, #0x1                   	// #1
  40b940:	bl	414ca8 <__fxstatat@plt+0x12258>
  40b944:	mov	x3, x22
  40b948:	mov	x4, x0
  40b94c:	mov	x2, x25
  40b950:	mov	w1, #0x0                   	// #0
  40b954:	mov	w0, #0x0                   	// #0
  40b958:	bl	402490 <error@plt>
  40b95c:	mov	x0, x19
  40b960:	mov	x2, x21
  40b964:	mov	x1, x20
  40b968:	bl	40b768 <__fxstatat@plt+0x8d18>
  40b96c:	blr	x23
  40b970:	mov	x0, #0xffffffffffffffff    	// #-1
  40b974:	ldr	x25, [sp, #64]
  40b978:	b	40b8ec <__fxstatat@plt+0x8e9c>
  40b97c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40b980:	mov	w2, #0x5                   	// #5
  40b984:	add	x1, x1, #0xab8
  40b988:	mov	x0, #0x0                   	// #0
  40b98c:	bl	402970 <dcgettext@plt>
  40b990:	mov	x25, x0
  40b994:	b	40b924 <__fxstatat@plt+0x8ed4>
  40b998:	stp	x29, x30, [sp, #-64]!
  40b99c:	mov	x29, sp
  40b9a0:	stp	x21, x22, [sp, #32]
  40b9a4:	ldr	x22, [x1]
  40b9a8:	cbz	x22, 40b9f0 <__fxstatat@plt+0x8fa0>
  40b9ac:	mov	x21, x3
  40b9b0:	stp	x19, x20, [sp, #16]
  40b9b4:	mov	x19, x2
  40b9b8:	add	x20, x1, #0x8
  40b9bc:	str	x23, [sp, #48]
  40b9c0:	mov	x23, x0
  40b9c4:	b	40b9d4 <__fxstatat@plt+0x8f84>
  40b9c8:	ldr	x22, [x20], #8
  40b9cc:	add	x19, x19, x21
  40b9d0:	cbz	x22, 40b9e8 <__fxstatat@plt+0x8f98>
  40b9d4:	mov	x2, x21
  40b9d8:	mov	x1, x19
  40b9dc:	mov	x0, x23
  40b9e0:	bl	4027a0 <memcmp@plt>
  40b9e4:	cbnz	w0, 40b9c8 <__fxstatat@plt+0x8f78>
  40b9e8:	ldp	x19, x20, [sp, #16]
  40b9ec:	ldr	x23, [sp, #48]
  40b9f0:	mov	x0, x22
  40b9f4:	ldp	x21, x22, [sp, #32]
  40b9f8:	ldp	x29, x30, [sp], #64
  40b9fc:	ret
  40ba00:	cmp	x2, #0x0
  40ba04:	ccmp	x0, x1, #0x4, ne  // ne = any
  40ba08:	b.eq	40ba70 <__fxstatat@plt+0x9020>  // b.none
  40ba0c:	sub	x7, x2, #0x1
  40ba10:	mov	x2, #0x0                   	// #0
  40ba14:	b	40ba28 <__fxstatat@plt+0x8fd8>
  40ba18:	cbz	w5, 40ba68 <__fxstatat@plt+0x9018>
  40ba1c:	add	x2, x2, #0x1
  40ba20:	cmp	w4, w3
  40ba24:	b.ne	40ba68 <__fxstatat@plt+0x9018>  // b.any
  40ba28:	ldrb	w3, [x0, x2]
  40ba2c:	sub	w4, w3, #0x41
  40ba30:	mov	w5, w3
  40ba34:	cmp	w4, #0x19
  40ba38:	b.hi	40ba44 <__fxstatat@plt+0x8ff4>  // b.pmore
  40ba3c:	add	w5, w3, #0x20
  40ba40:	and	w3, w5, #0xff
  40ba44:	ldrb	w4, [x1, x2]
  40ba48:	sub	w8, w4, #0x41
  40ba4c:	mov	w6, w4
  40ba50:	cmp	w8, #0x19
  40ba54:	b.hi	40ba60 <__fxstatat@plt+0x9010>  // b.pmore
  40ba58:	add	w6, w4, #0x20
  40ba5c:	and	w4, w6, #0xff
  40ba60:	cmp	x7, x2
  40ba64:	b.ne	40ba18 <__fxstatat@plt+0x8fc8>  // b.any
  40ba68:	sub	w0, w5, w6
  40ba6c:	ret
  40ba70:	mov	w0, #0x0                   	// #0
  40ba74:	ret
  40ba78:	stp	x29, x30, [sp, #-272]!
  40ba7c:	mov	x29, sp
  40ba80:	stp	x19, x20, [sp, #16]
  40ba84:	stp	x21, x22, [sp, #32]
  40ba88:	and	w21, w1, #0x3
  40ba8c:	stp	x27, x28, [sp, #80]
  40ba90:	mov	x28, x0
  40ba94:	sub	w0, w21, #0x1
  40ba98:	tst	w0, w21
  40ba9c:	b.ne	40bea4 <__fxstatat@plt+0x9454>  // b.any
  40baa0:	cbz	x28, 40bea4 <__fxstatat@plt+0x9454>
  40baa4:	stp	x23, x24, [sp, #48]
  40baa8:	ldrb	w23, [x28]
  40baac:	cbz	w23, 40bf34 <__fxstatat@plt+0x94e4>
  40bab0:	mov	w22, w1
  40bab4:	cmp	w23, #0x2f
  40bab8:	b.eq	40bcdc <__fxstatat@plt+0x928c>  // b.none
  40babc:	bl	416098 <__fxstatat@plt+0x13648>
  40bac0:	mov	x19, x0
  40bac4:	cbz	x0, 40bf7c <__fxstatat@plt+0x952c>
  40bac8:	bl	402430 <strlen@plt>
  40bacc:	mov	x27, x0
  40bad0:	cmp	x0, #0xfff
  40bad4:	b.ls	40bf60 <__fxstatat@plt+0x9510>  // b.plast
  40bad8:	add	x27, x19, x0
  40badc:	mov	x20, x27
  40bae0:	ldrb	w3, [x28]
  40bae4:	cbz	w3, 40c010 <__fxstatat@plt+0x95c0>
  40bae8:	cmp	w21, #0x2
  40baec:	ubfx	x23, x22, #2, #1
  40baf0:	and	w0, w22, #0x4
  40baf4:	csel	w23, w23, wzr, eq  // eq = none
  40baf8:	mov	x24, #0x0                   	// #0
  40bafc:	stp	x25, x26, [sp, #64]
  40bb00:	adrp	x26, 40e000 <__fxstatat@plt+0xb5b0>
  40bb04:	add	x1, x26, #0x368
  40bb08:	str	w0, [sp, #100]
  40bb0c:	adrp	x0, 40e000 <__fxstatat@plt+0xb5b0>
  40bb10:	add	x0, x0, #0x310
  40bb14:	stp	x28, xzr, [sp, #104]
  40bb18:	stp	xzr, x1, [sp, #120]
  40bb1c:	str	x0, [sp, #136]
  40bb20:	mov	w0, w3
  40bb24:	cmp	w3, #0x2f
  40bb28:	b.ne	40bb40 <__fxstatat@plt+0x90f0>  // b.any
  40bb2c:	nop
  40bb30:	ldrb	w0, [x28, #1]!
  40bb34:	cmp	w0, #0x2f
  40bb38:	b.eq	40bb30 <__fxstatat@plt+0x90e0>  // b.none
  40bb3c:	cbz	w0, 40bc50 <__fxstatat@plt+0x9200>
  40bb40:	mov	x26, x28
  40bb44:	nop
  40bb48:	mov	x22, x26
  40bb4c:	ldrb	w3, [x26, #1]!
  40bb50:	cmp	w3, #0x2f
  40bb54:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  40bb58:	b.ne	40bb48 <__fxstatat@plt+0x90f8>  // b.any
  40bb5c:	cmp	x26, x28
  40bb60:	b.eq	40bc50 <__fxstatat@plt+0x9200>  // b.none
  40bb64:	sub	x25, x26, x28
  40bb68:	cmp	x25, #0x1
  40bb6c:	b.eq	40bd24 <__fxstatat@plt+0x92d4>  // b.none
  40bb70:	cmp	w0, #0x2e
  40bb74:	ccmp	x25, #0x2, #0x0, eq  // eq = none
  40bb78:	b.eq	40be5c <__fxstatat@plt+0x940c>  // b.none
  40bb7c:	ldurb	w0, [x27, #-1]
  40bb80:	cmp	w0, #0x2f
  40bb84:	b.eq	40bb98 <__fxstatat@plt+0x9148>  // b.none
  40bb88:	mov	x6, x27
  40bb8c:	mov	w0, #0x2f                  	// #47
  40bb90:	strb	w0, [x6], #1
  40bb94:	mov	x27, x6
  40bb98:	add	x0, x27, x25
  40bb9c:	cmp	x20, x0
  40bba0:	b.hi	40bbd4 <__fxstatat@plt+0x9184>  // b.pmore
  40bba4:	sub	x1, x20, x19
  40bba8:	cmp	x25, #0x1, lsl #12
  40bbac:	add	x20, x25, x1
  40bbb0:	add	x1, x1, #0x1, lsl #12
  40bbb4:	csinc	x20, x1, x20, lt  // lt = tstop
  40bbb8:	mov	x0, x19
  40bbbc:	mov	x1, x20
  40bbc0:	bl	415c70 <__fxstatat@plt+0x13220>
  40bbc4:	sub	x6, x27, x19
  40bbc8:	add	x20, x0, x20
  40bbcc:	mov	x19, x0
  40bbd0:	add	x27, x0, x6
  40bbd4:	mov	x0, x27
  40bbd8:	mov	x1, x28
  40bbdc:	mov	x2, x25
  40bbe0:	bl	4023c0 <memcpy@plt>
  40bbe4:	strb	wzr, [x0, x25]
  40bbe8:	add	x27, x0, x25
  40bbec:	cbnz	w23, 40bc2c <__fxstatat@plt+0x91dc>
  40bbf0:	ldr	w0, [sp, #100]
  40bbf4:	add	x2, sp, #0x90
  40bbf8:	mov	x1, x19
  40bbfc:	cbz	w0, 40bd38 <__fxstatat@plt+0x92e8>
  40bc00:	mov	w0, #0x0                   	// #0
  40bc04:	bl	402a00 <__xstat@plt>
  40bc08:	cmp	w0, #0x0
  40bc0c:	cset	w0, ne  // ne = any
  40bc10:	cbz	w0, 40bd08 <__fxstatat@plt+0x92b8>
  40bc14:	bl	4029e0 <__errno_location@plt>
  40bc18:	ldr	w25, [x0]
  40bc1c:	mov	x28, x0
  40bc20:	cbz	w21, 40befc <__fxstatat@plt+0x94ac>
  40bc24:	cmp	w21, #0x1
  40bc28:	b.eq	40bcac <__fxstatat@plt+0x925c>  // b.none
  40bc2c:	str	wzr, [sp, #160]
  40bc30:	ldrb	w0, [x26]
  40bc34:	cmp	w0, #0x0
  40bc38:	ccmp	w21, #0x2, #0x4, ne  // ne = any
  40bc3c:	b.ne	40bef0 <__fxstatat@plt+0x94a0>  // b.any
  40bc40:	ldrb	w3, [x26]
  40bc44:	mov	x28, x26
  40bc48:	cbnz	w3, 40bb20 <__fxstatat@plt+0x90d0>
  40bc4c:	nop
  40bc50:	ldp	x25, x26, [sp, #64]
  40bc54:	add	x0, x19, #0x1
  40bc58:	cmp	x27, x0
  40bc5c:	b.ls	40bc6c <__fxstatat@plt+0x921c>  // b.plast
  40bc60:	ldurb	w0, [x27, #-1]
  40bc64:	cmp	w0, #0x2f
  40bc68:	b.eq	40bfc4 <__fxstatat@plt+0x9574>  // b.none
  40bc6c:	add	x0, x27, #0x1
  40bc70:	strb	wzr, [x27]
  40bc74:	cmp	x0, x20
  40bc78:	b.eq	40bc90 <__fxstatat@plt+0x9240>  // b.none
  40bc7c:	sub	x1, x27, x19
  40bc80:	mov	x0, x19
  40bc84:	add	x1, x1, #0x1
  40bc88:	bl	415c70 <__fxstatat@plt+0x13220>
  40bc8c:	mov	x19, x0
  40bc90:	ldr	x0, [sp, #112]
  40bc94:	bl	402840 <free@plt>
  40bc98:	cbz	x24, 40bf7c <__fxstatat@plt+0x952c>
  40bc9c:	mov	x0, x24
  40bca0:	bl	40da20 <__fxstatat@plt+0xafd0>
  40bca4:	ldp	x23, x24, [sp, #48]
  40bca8:	b	40be44 <__fxstatat@plt+0x93f4>
  40bcac:	mov	x0, x26
  40bcb0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40bcb4:	add	x1, x1, #0x720
  40bcb8:	bl	402870 <strspn@plt>
  40bcbc:	ldrb	w0, [x26, x0]
  40bcc0:	cmp	w0, #0x0
  40bcc4:	ccmp	w25, #0x2, #0x0, eq  // eq = none
  40bcc8:	b.ne	40befc <__fxstatat@plt+0x94ac>  // b.any
  40bccc:	ldrb	w3, [x22, #1]
  40bcd0:	mov	x28, x26
  40bcd4:	cbnz	w3, 40bb20 <__fxstatat@plt+0x90d0>
  40bcd8:	b	40bc50 <__fxstatat@plt+0x9200>
  40bcdc:	mov	x0, #0x1000                	// #4096
  40bce0:	bl	415c40 <__fxstatat@plt+0x131f0>
  40bce4:	mov	x27, x0
  40bce8:	ldrb	w3, [x28]
  40bcec:	mov	x19, x0
  40bcf0:	add	x20, x0, #0x1, lsl #12
  40bcf4:	strb	w23, [x27], #1
  40bcf8:	cbnz	w3, 40bae8 <__fxstatat@plt+0x9098>
  40bcfc:	mov	x24, #0x0                   	// #0
  40bd00:	str	xzr, [sp, #112]
  40bd04:	b	40bc6c <__fxstatat@plt+0x921c>
  40bd08:	ldr	w0, [sp, #160]
  40bd0c:	and	w0, w0, #0xf000
  40bd10:	cmp	w0, #0xa, lsl #12
  40bd14:	b.eq	40bd4c <__fxstatat@plt+0x92fc>  // b.none
  40bd18:	cmp	w0, #0x4, lsl #12
  40bd1c:	b.eq	40bc40 <__fxstatat@plt+0x91f0>  // b.none
  40bd20:	b	40bc30 <__fxstatat@plt+0x91e0>
  40bd24:	cmp	w0, #0x2e
  40bd28:	b.ne	40bb7c <__fxstatat@plt+0x912c>  // b.any
  40bd2c:	mov	x28, x26
  40bd30:	cbnz	w3, 40bb20 <__fxstatat@plt+0x90d0>
  40bd34:	b	40bc50 <__fxstatat@plt+0x9200>
  40bd38:	mov	w0, #0x0                   	// #0
  40bd3c:	bl	402900 <__lxstat@plt>
  40bd40:	cmp	w0, #0x0
  40bd44:	cset	w0, ne  // ne = any
  40bd48:	b	40bc10 <__fxstatat@plt+0x91c0>
  40bd4c:	cbz	x24, 40becc <__fxstatat@plt+0x947c>
  40bd50:	ldr	x1, [sp, #104]
  40bd54:	add	x2, sp, #0x90
  40bd58:	mov	x0, x24
  40bd5c:	bl	40c438 <__fxstatat@plt+0x99e8>
  40bd60:	tst	w0, #0xff
  40bd64:	b.ne	40be08 <__fxstatat@plt+0x93b8>  // b.any
  40bd68:	ldr	x1, [sp, #104]
  40bd6c:	add	x2, sp, #0x90
  40bd70:	mov	x0, x24
  40bd74:	bl	40c3a8 <__fxstatat@plt+0x9958>
  40bd78:	ldr	x1, [sp, #192]
  40bd7c:	mov	x0, x19
  40bd80:	bl	40b420 <__fxstatat@plt+0x89d0>
  40bd84:	mov	x28, x0
  40bd88:	cbz	x0, 40bf98 <__fxstatat@plt+0x9548>
  40bd8c:	bl	402430 <strlen@plt>
  40bd90:	mov	x25, x0
  40bd94:	mov	x0, x26
  40bd98:	bl	402430 <strlen@plt>
  40bd9c:	mov	x22, x0
  40bda0:	add	x1, x25, x0
  40bda4:	ldr	x0, [sp, #120]
  40bda8:	cbz	x0, 40bf14 <__fxstatat@plt+0x94c4>
  40bdac:	add	x1, x1, #0x1
  40bdb0:	cmp	x1, x0
  40bdb4:	b.hi	40bfd0 <__fxstatat@plt+0x9580>  // b.pmore
  40bdb8:	add	x2, x22, #0x1
  40bdbc:	mov	x1, x26
  40bdc0:	ldr	x22, [sp, #112]
  40bdc4:	add	x0, x22, x25
  40bdc8:	bl	4023d0 <memmove@plt>
  40bdcc:	mov	x1, x28
  40bdd0:	mov	x2, x25
  40bdd4:	mov	x0, x22
  40bdd8:	bl	4023c0 <memcpy@plt>
  40bddc:	ldrb	w1, [x28]
  40bde0:	str	x0, [sp, #104]
  40bde4:	add	x0, x19, #0x1
  40bde8:	cmp	w1, #0x2f
  40bdec:	b.eq	40bfb8 <__fxstatat@plt+0x9568>  // b.none
  40bdf0:	cmp	x27, x0
  40bdf4:	b.hi	40bfe8 <__fxstatat@plt+0x9598>  // b.pmore
  40bdf8:	mov	x0, x28
  40bdfc:	ldr	x26, [sp, #104]
  40be00:	bl	402840 <free@plt>
  40be04:	b	40bc40 <__fxstatat@plt+0x91f0>
  40be08:	cmp	w21, #0x2
  40be0c:	b.eq	40bccc <__fxstatat@plt+0x927c>  // b.none
  40be10:	bl	4029e0 <__errno_location@plt>
  40be14:	mov	x28, x0
  40be18:	mov	w25, #0x28                  	// #40
  40be1c:	ldr	x0, [sp, #112]
  40be20:	bl	402840 <free@plt>
  40be24:	mov	x0, x19
  40be28:	bl	402840 <free@plt>
  40be2c:	mov	x0, x24
  40be30:	bl	40da20 <__fxstatat@plt+0xafd0>
  40be34:	ldp	x23, x24, [sp, #48]
  40be38:	str	w25, [x28]
  40be3c:	ldp	x25, x26, [sp, #64]
  40be40:	mov	x19, #0x0                   	// #0
  40be44:	mov	x0, x19
  40be48:	ldp	x19, x20, [sp, #16]
  40be4c:	ldp	x21, x22, [sp, #32]
  40be50:	ldp	x27, x28, [sp, #80]
  40be54:	ldp	x29, x30, [sp], #272
  40be58:	ret
  40be5c:	ldrb	w0, [x28, #1]
  40be60:	cmp	w0, #0x2e
  40be64:	b.ne	40bb7c <__fxstatat@plt+0x912c>  // b.any
  40be68:	add	x0, x19, #0x1
  40be6c:	mov	x28, x26
  40be70:	cmp	x27, x0
  40be74:	b.ls	40bc48 <__fxstatat@plt+0x91f8>  // b.plast
  40be78:	sub	x27, x27, #0x1
  40be7c:	cmp	x27, x19
  40be80:	b.ls	40bc48 <__fxstatat@plt+0x91f8>  // b.plast
  40be84:	ldurb	w0, [x27, #-1]
  40be88:	cmp	w0, #0x2f
  40be8c:	b.eq	40bd2c <__fxstatat@plt+0x92dc>  // b.none
  40be90:	sub	x27, x27, #0x1
  40be94:	cmp	x27, x19
  40be98:	b.ne	40be84 <__fxstatat@plt+0x9434>  // b.any
  40be9c:	mov	x28, x26
  40bea0:	b	40bd30 <__fxstatat@plt+0x92e0>
  40bea4:	bl	4029e0 <__errno_location@plt>
  40bea8:	mov	x19, #0x0                   	// #0
  40beac:	mov	w1, #0x16                  	// #22
  40beb0:	str	w1, [x0]
  40beb4:	mov	x0, x19
  40beb8:	ldp	x19, x20, [sp, #16]
  40bebc:	ldp	x21, x22, [sp, #32]
  40bec0:	ldp	x27, x28, [sp, #80]
  40bec4:	ldp	x29, x30, [sp], #272
  40bec8:	ret
  40becc:	ldp	x4, x3, [sp, #128]
  40bed0:	adrp	x2, 40e000 <__fxstatat@plt+0xb5b0>
  40bed4:	mov	x1, #0x0                   	// #0
  40bed8:	add	x2, x2, #0x288
  40bedc:	mov	x0, #0x7                   	// #7
  40bee0:	bl	40d728 <__fxstatat@plt+0xacd8>
  40bee4:	mov	x24, x0
  40bee8:	cbnz	x0, 40bd50 <__fxstatat@plt+0x9300>
  40beec:	bl	415e08 <__fxstatat@plt+0x133b8>
  40bef0:	bl	4029e0 <__errno_location@plt>
  40bef4:	mov	x28, x0
  40bef8:	mov	w25, #0x14                  	// #20
  40befc:	ldr	x0, [sp, #112]
  40bf00:	bl	402840 <free@plt>
  40bf04:	mov	x0, x19
  40bf08:	bl	402840 <free@plt>
  40bf0c:	cbz	x24, 40be34 <__fxstatat@plt+0x93e4>
  40bf10:	b	40be2c <__fxstatat@plt+0x93dc>
  40bf14:	add	x1, x1, #0x1
  40bf18:	mov	x0, #0x1000                	// #4096
  40bf1c:	cmp	x1, x0
  40bf20:	csel	x0, x1, x0, cs  // cs = hs, nlast
  40bf24:	str	x0, [sp, #120]
  40bf28:	bl	415c40 <__fxstatat@plt+0x131f0>
  40bf2c:	str	x0, [sp, #112]
  40bf30:	b	40bdb8 <__fxstatat@plt+0x9368>
  40bf34:	bl	4029e0 <__errno_location@plt>
  40bf38:	mov	x19, #0x0                   	// #0
  40bf3c:	mov	w1, #0x2                   	// #2
  40bf40:	ldp	x23, x24, [sp, #48]
  40bf44:	str	w1, [x0]
  40bf48:	mov	x0, x19
  40bf4c:	ldp	x19, x20, [sp, #16]
  40bf50:	ldp	x21, x22, [sp, #32]
  40bf54:	ldp	x27, x28, [sp, #80]
  40bf58:	ldp	x29, x30, [sp], #272
  40bf5c:	ret
  40bf60:	mov	x0, x19
  40bf64:	mov	x1, #0x1000                	// #4096
  40bf68:	bl	415c70 <__fxstatat@plt+0x13220>
  40bf6c:	mov	x19, x0
  40bf70:	add	x27, x0, x27
  40bf74:	add	x20, x0, #0x1, lsl #12
  40bf78:	b	40bae0 <__fxstatat@plt+0x9090>
  40bf7c:	mov	x0, x19
  40bf80:	ldp	x19, x20, [sp, #16]
  40bf84:	ldp	x21, x22, [sp, #32]
  40bf88:	ldp	x23, x24, [sp, #48]
  40bf8c:	ldp	x27, x28, [sp, #80]
  40bf90:	ldp	x29, x30, [sp], #272
  40bf94:	ret
  40bf98:	bl	4029e0 <__errno_location@plt>
  40bf9c:	ldr	w25, [x0]
  40bfa0:	mov	x28, x0
  40bfa4:	cmp	w21, #0x2
  40bfa8:	b.ne	40be1c <__fxstatat@plt+0x93cc>  // b.any
  40bfac:	cmp	w25, #0xc
  40bfb0:	b.ne	40bccc <__fxstatat@plt+0x927c>  // b.any
  40bfb4:	b	40be1c <__fxstatat@plt+0x93cc>
  40bfb8:	mov	x27, x0
  40bfbc:	strb	w1, [x19]
  40bfc0:	b	40bdf8 <__fxstatat@plt+0x93a8>
  40bfc4:	mov	x0, x27
  40bfc8:	sub	x27, x27, #0x1
  40bfcc:	b	40bc70 <__fxstatat@plt+0x9220>
  40bfd0:	ldr	x0, [sp, #112]
  40bfd4:	str	x1, [sp, #104]
  40bfd8:	bl	415c70 <__fxstatat@plt+0x13220>
  40bfdc:	ldr	x1, [sp, #104]
  40bfe0:	stp	x0, x1, [sp, #112]
  40bfe4:	b	40bdb8 <__fxstatat@plt+0x9368>
  40bfe8:	sub	x27, x27, #0x1
  40bfec:	cmp	x19, x27
  40bff0:	b.cs	40bdf8 <__fxstatat@plt+0x93a8>  // b.hs, b.nlast
  40bff4:	ldurb	w0, [x27, #-1]
  40bff8:	cmp	w0, #0x2f
  40bffc:	b.eq	40bdf8 <__fxstatat@plt+0x93a8>  // b.none
  40c000:	sub	x27, x27, #0x1
  40c004:	cmp	x19, x27
  40c008:	b.ne	40bff4 <__fxstatat@plt+0x95a4>  // b.any
  40c00c:	b	40bdf8 <__fxstatat@plt+0x93a8>
  40c010:	mov	x24, #0x0                   	// #0
  40c014:	str	xzr, [sp, #112]
  40c018:	b	40bc54 <__fxstatat@plt+0x9204>
  40c01c:	nop
  40c020:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0xa38>
  40c024:	str	x0, [x1, #1832]
  40c028:	ret
  40c02c:	nop
  40c030:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0xa38>
  40c034:	strb	w0, [x1, #1840]
  40c038:	ret
  40c03c:	nop
  40c040:	stp	x29, x30, [sp, #-48]!
  40c044:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40c048:	mov	x29, sp
  40c04c:	ldr	x0, [x0, #1472]
  40c050:	bl	417798 <_obstack_memory_used@@Base+0x718>
  40c054:	cbz	w0, 40c08c <__fxstatat@plt+0x963c>
  40c058:	stp	x19, x20, [sp, #16]
  40c05c:	adrp	x20, 434000 <__progname@@GLIBC_2.17+0xa38>
  40c060:	add	x0, x20, #0x728
  40c064:	str	x21, [sp, #32]
  40c068:	ldrb	w21, [x0, #8]
  40c06c:	bl	4029e0 <__errno_location@plt>
  40c070:	mov	x19, x0
  40c074:	cbz	w21, 40c0a4 <__fxstatat@plt+0x9654>
  40c078:	ldr	w0, [x0]
  40c07c:	cmp	w0, #0x20
  40c080:	b.ne	40c0a4 <__fxstatat@plt+0x9654>  // b.any
  40c084:	ldp	x19, x20, [sp, #16]
  40c088:	ldr	x21, [sp, #32]
  40c08c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40c090:	ldr	x0, [x0, #1448]
  40c094:	bl	417798 <_obstack_memory_used@@Base+0x718>
  40c098:	cbnz	w0, 40c0f8 <__fxstatat@plt+0x96a8>
  40c09c:	ldp	x29, x30, [sp], #48
  40c0a0:	ret
  40c0a4:	mov	w2, #0x5                   	// #5
  40c0a8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40c0ac:	mov	x0, #0x0                   	// #0
  40c0b0:	add	x1, x1, #0xb20
  40c0b4:	bl	402970 <dcgettext@plt>
  40c0b8:	ldr	x2, [x20, #1832]
  40c0bc:	mov	x20, x0
  40c0c0:	cbz	x2, 40c104 <__fxstatat@plt+0x96b4>
  40c0c4:	ldr	w19, [x19]
  40c0c8:	mov	x0, x2
  40c0cc:	bl	414200 <__fxstatat@plt+0x117b0>
  40c0d0:	mov	x3, x0
  40c0d4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40c0d8:	mov	w1, w19
  40c0dc:	mov	x4, x20
  40c0e0:	add	x2, x2, #0x4b0
  40c0e4:	mov	w0, #0x0                   	// #0
  40c0e8:	bl	402490 <error@plt>
  40c0ec:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  40c0f0:	ldr	w0, [x0, #1328]
  40c0f4:	bl	4023f0 <_exit@plt>
  40c0f8:	stp	x19, x20, [sp, #16]
  40c0fc:	str	x21, [sp, #32]
  40c100:	b	40c0ec <__fxstatat@plt+0x969c>
  40c104:	ldr	w1, [x19]
  40c108:	mov	x3, x0
  40c10c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40c110:	mov	w0, #0x0                   	// #0
  40c114:	add	x2, x2, #0x418
  40c118:	bl	402490 <error@plt>
  40c11c:	b	40c0ec <__fxstatat@plt+0x969c>
  40c120:	stp	x29, x30, [sp, #-32]!
  40c124:	mov	x29, sp
  40c128:	stp	x19, x20, [sp, #16]
  40c12c:	mov	x19, x0
  40c130:	ldrb	w1, [x0]
  40c134:	cmp	w1, #0x2f
  40c138:	cset	x20, eq  // eq = none
  40c13c:	bl	40c230 <__fxstatat@plt+0x97e0>
  40c140:	sub	x0, x0, x19
  40c144:	b	40c158 <__fxstatat@plt+0x9708>
  40c148:	ldrb	w2, [x19, x1]
  40c14c:	cmp	w2, #0x2f
  40c150:	b.ne	40c164 <__fxstatat@plt+0x9714>  // b.any
  40c154:	mov	x0, x1
  40c158:	sub	x1, x0, #0x1
  40c15c:	cmp	x0, x20
  40c160:	b.hi	40c148 <__fxstatat@plt+0x96f8>  // b.pmore
  40c164:	ldp	x19, x20, [sp, #16]
  40c168:	ldp	x29, x30, [sp], #32
  40c16c:	ret
  40c170:	stp	x29, x30, [sp, #-48]!
  40c174:	mov	x29, sp
  40c178:	stp	x19, x20, [sp, #16]
  40c17c:	mov	x20, x0
  40c180:	stp	x21, x22, [sp, #32]
  40c184:	ldrb	w1, [x0]
  40c188:	cmp	w1, #0x2f
  40c18c:	cset	x21, eq  // eq = none
  40c190:	bl	40c230 <__fxstatat@plt+0x97e0>
  40c194:	sub	x19, x0, x20
  40c198:	b	40c1ac <__fxstatat@plt+0x975c>
  40c19c:	ldrb	w1, [x20, x0]
  40c1a0:	cmp	w1, #0x2f
  40c1a4:	b.ne	40c208 <__fxstatat@plt+0x97b8>  // b.any
  40c1a8:	mov	x19, x0
  40c1ac:	sub	x0, x19, #0x1
  40c1b0:	cmp	x21, x19
  40c1b4:	b.cc	40c19c <__fxstatat@plt+0x974c>  // b.lo, b.ul, b.last
  40c1b8:	eor	x1, x19, #0x1
  40c1bc:	add	x0, x19, #0x1
  40c1c0:	and	w22, w1, #0x1
  40c1c4:	add	x0, x0, x1
  40c1c8:	bl	4025f0 <malloc@plt>
  40c1cc:	mov	x21, x0
  40c1d0:	cbz	x0, 40c228 <__fxstatat@plt+0x97d8>
  40c1d4:	mov	x1, x20
  40c1d8:	mov	x2, x19
  40c1dc:	bl	4023c0 <memcpy@plt>
  40c1e0:	cbz	w22, 40c1f0 <__fxstatat@plt+0x97a0>
  40c1e4:	mov	w0, #0x2e                  	// #46
  40c1e8:	mov	x19, #0x1                   	// #1
  40c1ec:	strb	w0, [x21]
  40c1f0:	strb	wzr, [x21, x19]
  40c1f4:	mov	x0, x21
  40c1f8:	ldp	x19, x20, [sp, #16]
  40c1fc:	ldp	x21, x22, [sp, #32]
  40c200:	ldp	x29, x30, [sp], #48
  40c204:	ret
  40c208:	add	x0, x19, #0x1
  40c20c:	bl	4025f0 <malloc@plt>
  40c210:	mov	x21, x0
  40c214:	cbz	x0, 40c228 <__fxstatat@plt+0x97d8>
  40c218:	mov	x1, x20
  40c21c:	mov	x2, x19
  40c220:	bl	4023c0 <memcpy@plt>
  40c224:	b	40c1f0 <__fxstatat@plt+0x97a0>
  40c228:	mov	x21, #0x0                   	// #0
  40c22c:	b	40c1f4 <__fxstatat@plt+0x97a4>
  40c230:	ldrb	w1, [x0]
  40c234:	cmp	w1, #0x2f
  40c238:	b.ne	40c24c <__fxstatat@plt+0x97fc>  // b.any
  40c23c:	nop
  40c240:	ldrb	w1, [x0, #1]!
  40c244:	cmp	w1, #0x2f
  40c248:	b.eq	40c240 <__fxstatat@plt+0x97f0>  // b.none
  40c24c:	cbz	w1, 40c284 <__fxstatat@plt+0x9834>
  40c250:	mov	x2, x0
  40c254:	mov	w3, #0x0                   	// #0
  40c258:	b	40c270 <__fxstatat@plt+0x9820>
  40c25c:	cbz	w3, 40c268 <__fxstatat@plt+0x9818>
  40c260:	mov	x0, x2
  40c264:	mov	w3, #0x0                   	// #0
  40c268:	ldrb	w1, [x2, #1]!
  40c26c:	cbz	w1, 40c284 <__fxstatat@plt+0x9834>
  40c270:	cmp	w1, #0x2f
  40c274:	b.ne	40c25c <__fxstatat@plt+0x980c>  // b.any
  40c278:	ldrb	w1, [x2, #1]!
  40c27c:	mov	w3, #0x1                   	// #1
  40c280:	cbnz	w1, 40c270 <__fxstatat@plt+0x9820>
  40c284:	ret
  40c288:	stp	x29, x30, [sp, #-32]!
  40c28c:	mov	x29, sp
  40c290:	str	x19, [sp, #16]
  40c294:	mov	x19, x0
  40c298:	bl	402430 <strlen@plt>
  40c29c:	subs	x1, x0, #0x1
  40c2a0:	b.ls	40c2b0 <__fxstatat@plt+0x9860>  // b.plast
  40c2a4:	ldrb	w2, [x19, x1]
  40c2a8:	cmp	w2, #0x2f
  40c2ac:	b.eq	40c2bc <__fxstatat@plt+0x986c>  // b.none
  40c2b0:	ldr	x19, [sp, #16]
  40c2b4:	ldp	x29, x30, [sp], #32
  40c2b8:	ret
  40c2bc:	mov	x0, x1
  40c2c0:	b	40c29c <__fxstatat@plt+0x984c>
  40c2c4:	nop
  40c2c8:	stp	x29, x30, [sp, #-32]!
  40c2cc:	mov	x29, sp
  40c2d0:	stp	x19, x20, [sp, #16]
  40c2d4:	mov	x19, x1
  40c2d8:	ldr	w1, [x1, #16]
  40c2dc:	and	w1, w1, #0xf000
  40c2e0:	cmp	w1, #0xa, lsl #12
  40c2e4:	b.ne	40c2f8 <__fxstatat@plt+0x98a8>  // b.any
  40c2e8:	mov	w0, #0x0                   	// #0
  40c2ec:	ldp	x19, x20, [sp, #16]
  40c2f0:	ldp	x29, x30, [sp], #32
  40c2f4:	ret
  40c2f8:	mov	x20, x0
  40c2fc:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40c300:	mov	x3, #0x0                   	// #0
  40c304:	add	x1, x1, #0xb30
  40c308:	mov	x2, #0x0                   	// #0
  40c30c:	bl	402790 <getxattr@plt>
  40c310:	cmp	x0, #0x0
  40c314:	b.lt	40c32c <__fxstatat@plt+0x98dc>  // b.tstop
  40c318:	b.eq	40c354 <__fxstatat@plt+0x9904>  // b.none
  40c31c:	mov	w0, #0x1                   	// #1
  40c320:	ldp	x19, x20, [sp, #16]
  40c324:	ldp	x29, x30, [sp], #32
  40c328:	ret
  40c32c:	bl	4029e0 <__errno_location@plt>
  40c330:	ldr	w0, [x0]
  40c334:	cmp	w0, #0x3d
  40c338:	b.eq	40c354 <__fxstatat@plt+0x9904>  // b.none
  40c33c:	bl	417758 <_obstack_memory_used@@Base+0x6d8>
  40c340:	and	w0, w0, #0xff
  40c344:	neg	w0, w0
  40c348:	ldp	x19, x20, [sp, #16]
  40c34c:	ldp	x29, x30, [sp], #32
  40c350:	ret
  40c354:	ldr	w0, [x19, #16]
  40c358:	and	w0, w0, #0xf000
  40c35c:	cmp	w0, #0x4, lsl #12
  40c360:	b.ne	40c2e8 <__fxstatat@plt+0x9898>  // b.any
  40c364:	mov	x0, x20
  40c368:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40c36c:	mov	x3, #0x0                   	// #0
  40c370:	add	x1, x1, #0xb48
  40c374:	mov	x2, #0x0                   	// #0
  40c378:	bl	402790 <getxattr@plt>
  40c37c:	cmp	x0, #0x0
  40c380:	b.lt	40c390 <__fxstatat@plt+0x9940>  // b.tstop
  40c384:	b.eq	40c2e8 <__fxstatat@plt+0x9898>  // b.none
  40c388:	mov	w0, #0x1                   	// #1
  40c38c:	b	40c320 <__fxstatat@plt+0x98d0>
  40c390:	bl	4029e0 <__errno_location@plt>
  40c394:	ldr	w0, [x0]
  40c398:	cmp	w0, #0x3d
  40c39c:	b.ne	40c33c <__fxstatat@plt+0x98ec>  // b.any
  40c3a0:	b	40c2e8 <__fxstatat@plt+0x9898>
  40c3a4:	nop
  40c3a8:	cbz	x0, 40c42c <__fxstatat@plt+0x99dc>
  40c3ac:	stp	x29, x30, [sp, #-48]!
  40c3b0:	mov	x29, sp
  40c3b4:	stp	x21, x22, [sp, #32]
  40c3b8:	mov	x21, x2
  40c3bc:	mov	x22, x1
  40c3c0:	stp	x19, x20, [sp, #16]
  40c3c4:	mov	x20, x0
  40c3c8:	mov	x0, #0x18                  	// #24
  40c3cc:	bl	415c40 <__fxstatat@plt+0x131f0>
  40c3d0:	mov	x19, x0
  40c3d4:	mov	x0, x22
  40c3d8:	bl	415dc8 <__fxstatat@plt+0x13378>
  40c3dc:	ldr	q0, [x21]
  40c3e0:	mov	x2, x0
  40c3e4:	str	x2, [x19]
  40c3e8:	mov	x1, x19
  40c3ec:	mov	x0, x20
  40c3f0:	ext	v0.16b, v0.16b, v0.16b, #8
  40c3f4:	stur	q0, [x19, #8]
  40c3f8:	bl	40df00 <__fxstatat@plt+0xb4b0>
  40c3fc:	cbz	x0, 40c430 <__fxstatat@plt+0x99e0>
  40c400:	cmp	x19, x0
  40c404:	b.eq	40c41c <__fxstatat@plt+0x99cc>  // b.none
  40c408:	mov	x0, x19
  40c40c:	ldp	x19, x20, [sp, #16]
  40c410:	ldp	x21, x22, [sp, #32]
  40c414:	ldp	x29, x30, [sp], #48
  40c418:	b	40e368 <__fxstatat@plt+0xb918>
  40c41c:	ldp	x19, x20, [sp, #16]
  40c420:	ldp	x21, x22, [sp, #32]
  40c424:	ldp	x29, x30, [sp], #48
  40c428:	ret
  40c42c:	ret
  40c430:	bl	415e08 <__fxstatat@plt+0x133b8>
  40c434:	nop
  40c438:	cbz	x0, 40c470 <__fxstatat@plt+0x9a20>
  40c43c:	stp	x29, x30, [sp, #-48]!
  40c440:	mov	x3, x1
  40c444:	mov	x29, sp
  40c448:	ldr	q0, [x2]
  40c44c:	add	x1, sp, #0x10
  40c450:	str	x3, [sp, #16]
  40c454:	ext	v0.16b, v0.16b, v0.16b, #8
  40c458:	stur	q0, [sp, #24]
  40c45c:	bl	40d448 <__fxstatat@plt+0xa9f8>
  40c460:	cmp	x0, #0x0
  40c464:	cset	w0, ne  // ne = any
  40c468:	ldp	x29, x30, [sp], #48
  40c46c:	ret
  40c470:	mov	w0, #0x0                   	// #0
  40c474:	ret
  40c478:	and	w3, w0, #0xf000
  40c47c:	mov	w2, #0x2d                  	// #45
  40c480:	cmp	w3, #0x8, lsl #12
  40c484:	b.eq	40c4d4 <__fxstatat@plt+0x9a84>  // b.none
  40c488:	cmp	w3, #0x4, lsl #12
  40c48c:	mov	w2, #0x64                  	// #100
  40c490:	b.eq	40c4d4 <__fxstatat@plt+0x9a84>  // b.none
  40c494:	cmp	w3, #0x6, lsl #12
  40c498:	mov	w2, #0x62                  	// #98
  40c49c:	b.eq	40c4d4 <__fxstatat@plt+0x9a84>  // b.none
  40c4a0:	cmp	w3, #0x2, lsl #12
  40c4a4:	mov	w2, #0x63                  	// #99
  40c4a8:	b.eq	40c4d4 <__fxstatat@plt+0x9a84>  // b.none
  40c4ac:	cmp	w3, #0xa, lsl #12
  40c4b0:	mov	w2, #0x6c                  	// #108
  40c4b4:	b.eq	40c4d4 <__fxstatat@plt+0x9a84>  // b.none
  40c4b8:	cmp	w3, #0x1, lsl #12
  40c4bc:	mov	w2, #0x70                  	// #112
  40c4c0:	b.eq	40c4d4 <__fxstatat@plt+0x9a84>  // b.none
  40c4c4:	cmp	w3, #0xc, lsl #12
  40c4c8:	mov	w2, #0x73                  	// #115
  40c4cc:	mov	w3, #0x3f                  	// #63
  40c4d0:	csel	w2, w2, w3, eq  // eq = none
  40c4d4:	tst	x0, #0x100
  40c4d8:	mov	w6, #0x2d                  	// #45
  40c4dc:	mov	w4, #0x72                  	// #114
  40c4e0:	csel	w4, w4, w6, ne  // ne = any
  40c4e4:	tst	x0, #0x80
  40c4e8:	mov	w3, #0x77                  	// #119
  40c4ec:	csel	w3, w3, w6, ne  // ne = any
  40c4f0:	strb	w2, [x1]
  40c4f4:	strb	w4, [x1, #1]
  40c4f8:	and	w2, w0, #0x40
  40c4fc:	strb	w3, [x1, #2]
  40c500:	tbz	w0, #11, 40c5a4 <__fxstatat@plt+0x9b54>
  40c504:	cmp	w2, #0x0
  40c508:	mov	w5, #0x73                  	// #115
  40c50c:	mov	w2, #0x53                  	// #83
  40c510:	csel	w5, w5, w2, ne  // ne = any
  40c514:	tst	x0, #0x20
  40c518:	mov	w6, #0x2d                  	// #45
  40c51c:	mov	w3, #0x72                  	// #114
  40c520:	csel	w3, w3, w6, ne  // ne = any
  40c524:	tst	x0, #0x10
  40c528:	mov	w2, #0x77                  	// #119
  40c52c:	csel	w2, w2, w6, ne  // ne = any
  40c530:	strb	w5, [x1, #3]
  40c534:	strb	w3, [x1, #4]
  40c538:	and	w3, w0, #0x8
  40c53c:	strb	w2, [x1, #5]
  40c540:	tbz	w0, #10, 40c5b4 <__fxstatat@plt+0x9b64>
  40c544:	cmp	w3, #0x0
  40c548:	mov	w4, #0x73                  	// #115
  40c54c:	mov	w2, #0x53                  	// #83
  40c550:	csel	w4, w4, w2, ne  // ne = any
  40c554:	tst	x0, #0x4
  40c558:	mov	w5, #0x2d                  	// #45
  40c55c:	mov	w3, #0x72                  	// #114
  40c560:	csel	w3, w3, w5, ne  // ne = any
  40c564:	tst	x0, #0x2
  40c568:	mov	w2, #0x77                  	// #119
  40c56c:	csel	w2, w2, w5, ne  // ne = any
  40c570:	strb	w4, [x1, #6]
  40c574:	strb	w3, [x1, #7]
  40c578:	and	w3, w0, #0x1
  40c57c:	strb	w2, [x1, #8]
  40c580:	tbz	w0, #9, 40c5c4 <__fxstatat@plt+0x9b74>
  40c584:	cmp	w3, #0x0
  40c588:	mov	w2, #0x54                  	// #84
  40c58c:	mov	w0, #0x74                  	// #116
  40c590:	csel	w0, w0, w2, ne  // ne = any
  40c594:	mov	w2, #0x20                  	// #32
  40c598:	strb	w0, [x1, #9]
  40c59c:	strh	w2, [x1, #10]
  40c5a0:	ret
  40c5a4:	cmp	w2, #0x0
  40c5a8:	mov	w5, #0x78                  	// #120
  40c5ac:	csel	w5, w5, w6, ne  // ne = any
  40c5b0:	b	40c514 <__fxstatat@plt+0x9ac4>
  40c5b4:	cmp	w3, #0x0
  40c5b8:	mov	w4, #0x78                  	// #120
  40c5bc:	csel	w4, w4, w6, ne  // ne = any
  40c5c0:	b	40c554 <__fxstatat@plt+0x9b04>
  40c5c4:	cmp	w3, #0x0
  40c5c8:	mov	w2, #0x20                  	// #32
  40c5cc:	mov	w0, #0x78                  	// #120
  40c5d0:	csel	w0, w0, w5, ne  // ne = any
  40c5d4:	strb	w0, [x1, #9]
  40c5d8:	strh	w2, [x1, #10]
  40c5dc:	ret
  40c5e0:	ldr	w0, [x0, #16]
  40c5e4:	mov	w2, #0x2d                  	// #45
  40c5e8:	and	w3, w0, #0xf000
  40c5ec:	cmp	w3, #0x8, lsl #12
  40c5f0:	b.eq	40c640 <__fxstatat@plt+0x9bf0>  // b.none
  40c5f4:	cmp	w3, #0x4, lsl #12
  40c5f8:	mov	w2, #0x64                  	// #100
  40c5fc:	b.eq	40c640 <__fxstatat@plt+0x9bf0>  // b.none
  40c600:	cmp	w3, #0x6, lsl #12
  40c604:	mov	w2, #0x62                  	// #98
  40c608:	b.eq	40c640 <__fxstatat@plt+0x9bf0>  // b.none
  40c60c:	cmp	w3, #0x2, lsl #12
  40c610:	mov	w2, #0x63                  	// #99
  40c614:	b.eq	40c640 <__fxstatat@plt+0x9bf0>  // b.none
  40c618:	cmp	w3, #0xa, lsl #12
  40c61c:	mov	w2, #0x6c                  	// #108
  40c620:	b.eq	40c640 <__fxstatat@plt+0x9bf0>  // b.none
  40c624:	cmp	w3, #0x1, lsl #12
  40c628:	mov	w2, #0x70                  	// #112
  40c62c:	b.eq	40c640 <__fxstatat@plt+0x9bf0>  // b.none
  40c630:	cmp	w3, #0xc, lsl #12
  40c634:	mov	w2, #0x73                  	// #115
  40c638:	mov	w3, #0x3f                  	// #63
  40c63c:	csel	w2, w2, w3, eq  // eq = none
  40c640:	tst	x0, #0x100
  40c644:	mov	w6, #0x2d                  	// #45
  40c648:	mov	w4, #0x72                  	// #114
  40c64c:	csel	w4, w4, w6, ne  // ne = any
  40c650:	tst	x0, #0x80
  40c654:	mov	w3, #0x77                  	// #119
  40c658:	csel	w3, w3, w6, ne  // ne = any
  40c65c:	strb	w2, [x1]
  40c660:	strb	w4, [x1, #1]
  40c664:	and	w2, w0, #0x40
  40c668:	strb	w3, [x1, #2]
  40c66c:	tbz	w0, #11, 40c710 <__fxstatat@plt+0x9cc0>
  40c670:	cmp	w2, #0x0
  40c674:	mov	w5, #0x73                  	// #115
  40c678:	mov	w2, #0x53                  	// #83
  40c67c:	csel	w5, w5, w2, ne  // ne = any
  40c680:	tst	x0, #0x20
  40c684:	mov	w6, #0x2d                  	// #45
  40c688:	mov	w3, #0x72                  	// #114
  40c68c:	csel	w3, w3, w6, ne  // ne = any
  40c690:	tst	x0, #0x10
  40c694:	mov	w2, #0x77                  	// #119
  40c698:	csel	w2, w2, w6, ne  // ne = any
  40c69c:	strb	w5, [x1, #3]
  40c6a0:	strb	w3, [x1, #4]
  40c6a4:	and	w3, w0, #0x8
  40c6a8:	strb	w2, [x1, #5]
  40c6ac:	tbz	w0, #10, 40c720 <__fxstatat@plt+0x9cd0>
  40c6b0:	cmp	w3, #0x0
  40c6b4:	mov	w4, #0x73                  	// #115
  40c6b8:	mov	w2, #0x53                  	// #83
  40c6bc:	csel	w4, w4, w2, ne  // ne = any
  40c6c0:	tst	x0, #0x4
  40c6c4:	mov	w5, #0x2d                  	// #45
  40c6c8:	mov	w3, #0x72                  	// #114
  40c6cc:	csel	w3, w3, w5, ne  // ne = any
  40c6d0:	tst	x0, #0x2
  40c6d4:	mov	w2, #0x77                  	// #119
  40c6d8:	csel	w2, w2, w5, ne  // ne = any
  40c6dc:	strb	w4, [x1, #6]
  40c6e0:	strb	w3, [x1, #7]
  40c6e4:	and	w3, w0, #0x1
  40c6e8:	strb	w2, [x1, #8]
  40c6ec:	tbz	w0, #9, 40c730 <__fxstatat@plt+0x9ce0>
  40c6f0:	cmp	w3, #0x0
  40c6f4:	mov	w2, #0x54                  	// #84
  40c6f8:	mov	w0, #0x74                  	// #116
  40c6fc:	csel	w0, w0, w2, ne  // ne = any
  40c700:	mov	w2, #0x20                  	// #32
  40c704:	strb	w0, [x1, #9]
  40c708:	strh	w2, [x1, #10]
  40c70c:	ret
  40c710:	cmp	w2, #0x0
  40c714:	mov	w5, #0x78                  	// #120
  40c718:	csel	w5, w5, w6, ne  // ne = any
  40c71c:	b	40c680 <__fxstatat@plt+0x9c30>
  40c720:	cmp	w3, #0x0
  40c724:	mov	w4, #0x78                  	// #120
  40c728:	csel	w4, w4, w6, ne  // ne = any
  40c72c:	b	40c6c0 <__fxstatat@plt+0x9c70>
  40c730:	cmp	w3, #0x0
  40c734:	mov	w2, #0x20                  	// #32
  40c738:	mov	w0, #0x78                  	// #120
  40c73c:	csel	w0, w0, w5, ne  // ne = any
  40c740:	strb	w0, [x1, #9]
  40c744:	strh	w2, [x1, #10]
  40c748:	ret
  40c74c:	nop
  40c750:	stp	x29, x30, [sp, #-16]!
  40c754:	mov	x29, sp
  40c758:	bl	40c770 <__fxstatat@plt+0x9d20>
  40c75c:	cbz	x0, 40c768 <__fxstatat@plt+0x9d18>
  40c760:	ldp	x29, x30, [sp], #16
  40c764:	ret
  40c768:	bl	415e08 <__fxstatat@plt+0x133b8>
  40c76c:	nop
  40c770:	stp	x29, x30, [sp, #-80]!
  40c774:	mov	x29, sp
  40c778:	stp	x19, x20, [sp, #16]
  40c77c:	stp	x21, x22, [sp, #32]
  40c780:	mov	x21, x1
  40c784:	mov	x22, x0
  40c788:	stp	x23, x24, [sp, #48]
  40c78c:	mov	x23, x2
  40c790:	stp	x25, x26, [sp, #64]
  40c794:	bl	40c230 <__fxstatat@plt+0x97e0>
  40c798:	mov	x20, x0
  40c79c:	bl	40c288 <__fxstatat@plt+0x9838>
  40c7a0:	mov	x19, x0
  40c7a4:	mov	x0, x21
  40c7a8:	bl	402430 <strlen@plt>
  40c7ac:	sub	x3, x20, x22
  40c7b0:	mov	x24, x0
  40c7b4:	add	x26, x3, x19
  40c7b8:	add	x1, x0, #0x1
  40c7bc:	cbz	x19, 40c844 <__fxstatat@plt+0x9df4>
  40c7c0:	add	x0, x22, x26
  40c7c4:	ldurb	w0, [x0, #-1]
  40c7c8:	cmp	w0, #0x2f
  40c7cc:	b.eq	40c868 <__fxstatat@plt+0x9e18>  // b.none
  40c7d0:	ldrb	w0, [x21]
  40c7d4:	cmp	w0, #0x2f
  40c7d8:	b.eq	40c868 <__fxstatat@plt+0x9e18>  // b.none
  40c7dc:	add	x0, x26, #0x1
  40c7e0:	mov	x19, #0x1                   	// #1
  40c7e4:	mov	w25, #0x2f                  	// #47
  40c7e8:	add	x0, x1, x0
  40c7ec:	bl	4025f0 <malloc@plt>
  40c7f0:	mov	x20, x0
  40c7f4:	cbz	x0, 40c828 <__fxstatat@plt+0x9dd8>
  40c7f8:	mov	x1, x22
  40c7fc:	mov	x2, x26
  40c800:	bl	402860 <mempcpy@plt>
  40c804:	mov	x1, x0
  40c808:	add	x0, x0, x19
  40c80c:	strb	w25, [x1]
  40c810:	cbz	x23, 40c818 <__fxstatat@plt+0x9dc8>
  40c814:	str	x0, [x23]
  40c818:	mov	x2, x24
  40c81c:	mov	x1, x21
  40c820:	bl	402860 <mempcpy@plt>
  40c824:	strb	wzr, [x0]
  40c828:	mov	x0, x20
  40c82c:	ldp	x19, x20, [sp, #16]
  40c830:	ldp	x21, x22, [sp, #32]
  40c834:	ldp	x23, x24, [sp, #48]
  40c838:	ldp	x25, x26, [sp, #64]
  40c83c:	ldp	x29, x30, [sp], #80
  40c840:	ret
  40c844:	ldrb	w2, [x21]
  40c848:	mov	x0, x26
  40c84c:	mov	w25, #0x0                   	// #0
  40c850:	cmp	w2, #0x2f
  40c854:	b.ne	40c7e8 <__fxstatat@plt+0x9d98>  // b.any
  40c858:	add	x0, x3, #0x1
  40c85c:	mov	x19, #0x1                   	// #1
  40c860:	mov	w25, #0x2e                  	// #46
  40c864:	b	40c7e8 <__fxstatat@plt+0x9d98>
  40c868:	mov	x0, x26
  40c86c:	mov	x19, #0x0                   	// #0
  40c870:	mov	w25, #0x0                   	// #0
  40c874:	b	40c7e8 <__fxstatat@plt+0x9d98>
  40c878:	stp	x29, x30, [sp, #-80]!
  40c87c:	mov	x29, sp
  40c880:	stp	x19, x20, [sp, #16]
  40c884:	mov	x20, x0
  40c888:	mov	x19, x1
  40c88c:	stp	x21, x22, [sp, #32]
  40c890:	bl	402800 <strcmp@plt>
  40c894:	mov	w21, w0
  40c898:	cbz	w0, 40c8d4 <__fxstatat@plt+0x9e84>
  40c89c:	ldrb	w1, [x20]
  40c8a0:	cbz	w1, 40cbc0 <__fxstatat@plt+0xa170>
  40c8a4:	ldrb	w2, [x19]
  40c8a8:	cbz	w2, 40c8d0 <__fxstatat@plt+0x9e80>
  40c8ac:	cmp	w1, #0x2e
  40c8b0:	b.ne	40c8bc <__fxstatat@plt+0x9e6c>  // b.any
  40c8b4:	ldrb	w0, [x20, #1]
  40c8b8:	cbz	w0, 40cbc0 <__fxstatat@plt+0xa170>
  40c8bc:	ldrb	w0, [x19]
  40c8c0:	cmp	w0, #0x2e
  40c8c4:	b.ne	40c8e8 <__fxstatat@plt+0x9e98>  // b.any
  40c8c8:	ldrb	w0, [x19, #1]
  40c8cc:	cbnz	w0, 40c8e8 <__fxstatat@plt+0x9e98>
  40c8d0:	mov	w21, #0x1                   	// #1
  40c8d4:	mov	w0, w21
  40c8d8:	ldp	x19, x20, [sp, #16]
  40c8dc:	ldp	x21, x22, [sp, #32]
  40c8e0:	ldp	x29, x30, [sp], #80
  40c8e4:	ret
  40c8e8:	ldrb	w3, [x20]
  40c8ec:	mov	w0, #0x2e                  	// #46
  40c8f0:	cmp	w0, w3
  40c8f4:	b.ne	40c90c <__fxstatat@plt+0x9ebc>  // b.any
  40c8f8:	ldrb	w3, [x20, #1]
  40c8fc:	cmp	w0, w3
  40c900:	b.ne	40c90c <__fxstatat@plt+0x9ebc>  // b.any
  40c904:	ldrb	w0, [x20, #2]
  40c908:	cbz	w0, 40cbc0 <__fxstatat@plt+0xa170>
  40c90c:	ldrb	w3, [x19]
  40c910:	mov	w0, #0x2e                  	// #46
  40c914:	cmp	w0, w3
  40c918:	b.eq	40cb1c <__fxstatat@plt+0xa0cc>  // b.none
  40c91c:	cmp	w1, #0x2e
  40c920:	cset	w0, eq  // eq = none
  40c924:	cmp	w2, #0x2e
  40c928:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40c92c:	b.ne	40cbc0 <__fxstatat@plt+0xa170>  // b.any
  40c930:	cmp	w2, #0x2e
  40c934:	cset	w3, eq  // eq = none
  40c938:	cmp	w1, #0x2e
  40c93c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  40c940:	b.ne	40c8d0 <__fxstatat@plt+0x9e80>  // b.any
  40c944:	stp	x23, x24, [sp, #48]
  40c948:	cmp	w0, #0x0
  40c94c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  40c950:	str	x25, [sp, #64]
  40c954:	ldrb	w0, [x20, #1]
  40c958:	b.ne	40cd98 <__fxstatat@plt+0xa348>  // b.any
  40c95c:	mov	x22, x20
  40c960:	cmp	w1, #0x2e
  40c964:	mov	x5, #0x0                   	// #0
  40c968:	b.eq	40cbec <__fxstatat@plt+0xa19c>  // b.none
  40c96c:	nop
  40c970:	sub	w3, w1, #0x30
  40c974:	sub	w0, w1, #0x61
  40c978:	mov	x6, x22
  40c97c:	and	w3, w3, #0xff
  40c980:	and	w0, w0, #0xff
  40c984:	add	x22, x22, #0x1
  40c988:	cmp	w1, #0x5a
  40c98c:	b.hi	40cbc8 <__fxstatat@plt+0xa178>  // b.pmore
  40c990:	cmp	w1, #0x40
  40c994:	b.hi	40cbd8 <__fxstatat@plt+0xa188>  // b.pmore
  40c998:	cmp	w3, #0x9
  40c99c:	b.ls	40cbd8 <__fxstatat@plt+0xa188>  // b.plast
  40c9a0:	ldrb	w1, [x22]
  40c9a4:	mov	x5, #0x0                   	// #0
  40c9a8:	cmp	w1, #0x2e
  40c9ac:	cbz	w1, 40cdb0 <__fxstatat@plt+0xa360>
  40c9b0:	b.ne	40c970 <__fxstatat@plt+0x9f20>  // b.any
  40c9b4:	ldrb	w0, [x6, #2]
  40c9b8:	mov	x5, x22
  40c9bc:	add	x4, x6, #0x2
  40c9c0:	cbnz	w0, 40cbf8 <__fxstatat@plt+0xa1a8>
  40c9c4:	mov	x22, x4
  40c9c8:	cbz	w2, 40ce3c <__fxstatat@plt+0xa3ec>
  40c9cc:	mov	x23, x19
  40c9d0:	mov	x24, #0x0                   	// #0
  40c9d4:	nop
  40c9d8:	cmp	w2, #0x2e
  40c9dc:	b.eq	40cc94 <__fxstatat@plt+0xa244>  // b.none
  40c9e0:	sub	w1, w2, #0x30
  40c9e4:	sub	w0, w2, #0x61
  40c9e8:	mov	x4, x23
  40c9ec:	and	w1, w1, #0xff
  40c9f0:	and	w0, w0, #0xff
  40c9f4:	add	x23, x23, #0x1
  40c9f8:	cmp	w2, #0x5a
  40c9fc:	b.hi	40cc5c <__fxstatat@plt+0xa20c>  // b.pmore
  40ca00:	cmp	w2, #0x40
  40ca04:	b.hi	40cc88 <__fxstatat@plt+0xa238>  // b.pmore
  40ca08:	cmp	w1, #0x9
  40ca0c:	b.ls	40cc88 <__fxstatat@plt+0xa238>  // b.plast
  40ca10:	ldrb	w2, [x23]
  40ca14:	cbz	w2, 40ce08 <__fxstatat@plt+0xa3b8>
  40ca18:	cmp	w2, #0x2e
  40ca1c:	mov	x24, #0x0                   	// #0
  40ca20:	b.ne	40c9e0 <__fxstatat@plt+0x9f90>  // b.any
  40ca24:	ldrb	w1, [x4, #2]
  40ca28:	mov	x24, x23
  40ca2c:	add	x3, x4, #0x2
  40ca30:	cbnz	w1, 40cca4 <__fxstatat@plt+0xa254>
  40ca34:	mov	x23, x3
  40ca38:	sub	x25, x5, x20
  40ca3c:	cbz	x5, 40ce5c <__fxstatat@plt+0xa40c>
  40ca40:	sub	x24, x24, x19
  40ca44:	cmp	x25, x24
  40ca48:	b.eq	40ce18 <__fxstatat@plt+0xa3c8>  // b.none
  40ca4c:	mov	x0, #0x0                   	// #0
  40ca50:	mov	x3, #0x0                   	// #0
  40ca54:	cmp	x25, x3
  40ca58:	ccmp	x24, x0, #0x2, ls  // ls = plast
  40ca5c:	b.ls	40ce70 <__fxstatat@plt+0xa420>  // b.plast
  40ca60:	sub	x6, x0, x3
  40ca64:	cmp	x25, x3
  40ca68:	b.ls	40cacc <__fxstatat@plt+0xa07c>  // b.plast
  40ca6c:	ldrb	w4, [x20, x3]
  40ca70:	sub	w1, w4, #0x30
  40ca74:	cmp	w1, #0x9
  40ca78:	b.ls	40cacc <__fxstatat@plt+0xa07c>  // b.plast
  40ca7c:	mov	w5, w4
  40ca80:	cmp	w4, #0x5a
  40ca84:	b.hi	40cd38 <__fxstatat@plt+0xa2e8>  // b.pmore
  40ca88:	cmp	w4, #0x40
  40ca8c:	b.hi	40cd00 <__fxstatat@plt+0xa2b0>  // b.pmore
  40ca90:	add	w5, w4, #0x100
  40ca94:	add	x1, x3, x6
  40ca98:	cmp	x24, x1
  40ca9c:	b.eq	40cd78 <__fxstatat@plt+0xa328>  // b.none
  40caa0:	ldrb	w1, [x19, x0]
  40caa4:	sub	w2, w1, #0x30
  40caa8:	cmp	w2, #0x9
  40caac:	mov	w2, #0x0                   	// #0
  40cab0:	b.hi	40cb00 <__fxstatat@plt+0xa0b0>  // b.pmore
  40cab4:	cmp	w2, w5
  40cab8:	b.ne	40cd70 <__fxstatat@plt+0xa320>  // b.any
  40cabc:	add	x3, x3, #0x1
  40cac0:	add	x0, x0, #0x1
  40cac4:	cmp	x25, x3
  40cac8:	b.hi	40ca6c <__fxstatat@plt+0xa01c>  // b.pmore
  40cacc:	ldrb	w1, [x19, x0]
  40cad0:	cmp	x24, x0
  40cad4:	b.ls	40cb38 <__fxstatat@plt+0xa0e8>  // b.plast
  40cad8:	sub	w2, w1, #0x30
  40cadc:	cmp	w2, #0x9
  40cae0:	b.ls	40cb38 <__fxstatat@plt+0xa0e8>  // b.plast
  40cae4:	cmp	x25, x3
  40cae8:	b.eq	40cd68 <__fxstatat@plt+0xa318>  // b.none
  40caec:	ldrb	w4, [x20, x3]
  40caf0:	mov	w5, #0x0                   	// #0
  40caf4:	sub	w2, w4, #0x30
  40caf8:	cmp	w2, #0x9
  40cafc:	b.hi	40ca7c <__fxstatat@plt+0xa02c>  // b.pmore
  40cb00:	cmp	w1, #0x5a
  40cb04:	mov	w2, w1
  40cb08:	b.hi	40cd14 <__fxstatat@plt+0xa2c4>  // b.pmore
  40cb0c:	cmp	w1, #0x40
  40cb10:	b.hi	40cab4 <__fxstatat@plt+0xa064>  // b.pmore
  40cb14:	add	w2, w1, #0x100
  40cb18:	b	40cab4 <__fxstatat@plt+0xa064>
  40cb1c:	ldrb	w3, [x19, #1]
  40cb20:	cmp	w0, w3
  40cb24:	b.ne	40c91c <__fxstatat@plt+0x9ecc>  // b.any
  40cb28:	ldrb	w0, [x19, #2]
  40cb2c:	cbz	w0, 40c8d0 <__fxstatat@plt+0x9e80>
  40cb30:	b	40c91c <__fxstatat@plt+0x9ecc>
  40cb34:	add	x3, x3, #0x1
  40cb38:	ldrb	w4, [x20, x3]
  40cb3c:	cmp	w4, #0x30
  40cb40:	b.eq	40cb34 <__fxstatat@plt+0xa0e4>  // b.none
  40cb44:	cmp	w1, #0x30
  40cb48:	add	x6, x3, #0x1
  40cb4c:	b.ne	40cb60 <__fxstatat@plt+0xa110>  // b.any
  40cb50:	add	x0, x0, #0x1
  40cb54:	ldrb	w1, [x19, x0]
  40cb58:	cmp	w1, #0x30
  40cb5c:	b.eq	40cb50 <__fxstatat@plt+0xa100>  // b.none
  40cb60:	sub	w2, w4, #0x30
  40cb64:	cmp	w2, #0x9
  40cb68:	b.hi	40cd58 <__fxstatat@plt+0xa308>  // b.pmore
  40cb6c:	sub	x3, x3, x0
  40cb70:	mov	x1, x0
  40cb74:	add	x3, x20, x3
  40cb78:	mov	w7, #0x0                   	// #0
  40cb7c:	ldrb	w2, [x19, x1]
  40cb80:	sub	w5, w2, #0x30
  40cb84:	cmp	w5, #0x9
  40cb88:	b.hi	40cd8c <__fxstatat@plt+0xa33c>  // b.pmore
  40cb8c:	sub	x5, x1, x0
  40cb90:	cbz	w7, 40cdc4 <__fxstatat@plt+0xa374>
  40cb94:	add	x1, x1, #0x1
  40cb98:	ldrb	w4, [x3, x1]
  40cb9c:	sub	w2, w4, #0x30
  40cba0:	cmp	w2, #0x9
  40cba4:	b.ls	40cb7c <__fxstatat@plt+0xa12c>  // b.plast
  40cba8:	ldrb	w0, [x19, x1]
  40cbac:	sub	w0, w0, #0x30
  40cbb0:	cmp	w0, #0x9
  40cbb4:	b.hi	40ce6c <__fxstatat@plt+0xa41c>  // b.pmore
  40cbb8:	ldp	x23, x24, [sp, #48]
  40cbbc:	ldr	x25, [sp, #64]
  40cbc0:	mov	w21, #0xffffffff            	// #-1
  40cbc4:	b	40c8d4 <__fxstatat@plt+0x9e84>
  40cbc8:	cmp	w0, #0x19
  40cbcc:	b.ls	40cbd8 <__fxstatat@plt+0xa188>  // b.plast
  40cbd0:	cmp	w1, #0x7e
  40cbd4:	b.ne	40c9a0 <__fxstatat@plt+0x9f50>  // b.any
  40cbd8:	ldrb	w1, [x6, #1]
  40cbdc:	cbz	w1, 40ce00 <__fxstatat@plt+0xa3b0>
  40cbe0:	ldrb	w0, [x22, #1]
  40cbe4:	cmp	w1, #0x2e
  40cbe8:	b.ne	40c970 <__fxstatat@plt+0x9f20>  // b.any
  40cbec:	add	x4, x22, #0x1
  40cbf0:	cbz	x5, 40ce7c <__fxstatat@plt+0xa42c>
  40cbf4:	cbz	w0, 40ce34 <__fxstatat@plt+0xa3e4>
  40cbf8:	ldrb	w1, [x4, #1]
  40cbfc:	cmp	w0, #0x5a
  40cc00:	add	x22, x4, #0x1
  40cc04:	b.hi	40cc34 <__fxstatat@plt+0xa1e4>  // b.pmore
  40cc08:	cmp	w0, #0x40
  40cc0c:	b.hi	40cc50 <__fxstatat@plt+0xa200>  // b.pmore
  40cc10:	cbz	w1, 40cdb0 <__fxstatat@plt+0xa360>
  40cc14:	cmp	w1, #0x2e
  40cc18:	mov	x5, #0x0                   	// #0
  40cc1c:	b.ne	40c970 <__fxstatat@plt+0x9f20>  // b.any
  40cc20:	ldrb	w0, [x4, #2]
  40cc24:	mov	x5, x22
  40cc28:	add	x4, x4, #0x2
  40cc2c:	cbnz	w0, 40cbf8 <__fxstatat@plt+0xa1a8>
  40cc30:	b	40c9c4 <__fxstatat@plt+0x9f74>
  40cc34:	sub	w3, w0, #0x61
  40cc38:	and	w3, w3, #0xff
  40cc3c:	cmp	w3, #0x19
  40cc40:	b.ls	40cc50 <__fxstatat@plt+0xa200>  // b.plast
  40cc44:	cmp	w0, #0x7e
  40cc48:	b.ne	40cc10 <__fxstatat@plt+0xa1c0>  // b.any
  40cc4c:	nop
  40cc50:	cbz	w1, 40c9c8 <__fxstatat@plt+0x9f78>
  40cc54:	ldrb	w0, [x22, #1]
  40cc58:	b	40cbe4 <__fxstatat@plt+0xa194>
  40cc5c:	cmp	w0, #0x19
  40cc60:	b.ls	40cc88 <__fxstatat@plt+0xa238>  // b.plast
  40cc64:	cmp	w2, #0x7e
  40cc68:	ldrb	w2, [x23]
  40cc6c:	b.ne	40ca14 <__fxstatat@plt+0x9fc4>  // b.any
  40cc70:	cbnz	w2, 40c9d8 <__fxstatat@plt+0x9f88>
  40cc74:	cbz	x5, 40ce5c <__fxstatat@plt+0xa40c>
  40cc78:	sub	x25, x5, x20
  40cc7c:	cbnz	x24, 40ca40 <__fxstatat@plt+0x9ff0>
  40cc80:	sub	x24, x23, x19
  40cc84:	b	40ca44 <__fxstatat@plt+0x9ff4>
  40cc88:	ldrb	w2, [x4, #1]
  40cc8c:	cbnz	w2, 40c9d8 <__fxstatat@plt+0x9f88>
  40cc90:	b	40cc74 <__fxstatat@plt+0xa224>
  40cc94:	ldrb	w1, [x23, #1]
  40cc98:	add	x3, x23, #0x1
  40cc9c:	cbz	x24, 40ce88 <__fxstatat@plt+0xa438>
  40cca0:	cbz	w1, 40ce4c <__fxstatat@plt+0xa3fc>
  40cca4:	ldrb	w2, [x3, #1]
  40cca8:	cmp	w1, #0x5a
  40ccac:	add	x23, x3, #0x1
  40ccb0:	b.hi	40cce0 <__fxstatat@plt+0xa290>  // b.pmore
  40ccb4:	cmp	w1, #0x40
  40ccb8:	b.hi	40ccf8 <__fxstatat@plt+0xa2a8>  // b.pmore
  40ccbc:	cbz	w2, 40ce08 <__fxstatat@plt+0xa3b8>
  40ccc0:	cmp	w2, #0x2e
  40ccc4:	mov	x24, #0x0                   	// #0
  40ccc8:	b.ne	40c9e0 <__fxstatat@plt+0x9f90>  // b.any
  40cccc:	ldrb	w1, [x3, #2]
  40ccd0:	mov	x24, x23
  40ccd4:	add	x3, x3, #0x2
  40ccd8:	cbnz	w1, 40cca4 <__fxstatat@plt+0xa254>
  40ccdc:	b	40ca34 <__fxstatat@plt+0x9fe4>
  40cce0:	sub	w0, w1, #0x61
  40cce4:	and	w0, w0, #0xff
  40cce8:	cmp	w0, #0x19
  40ccec:	b.ls	40ccf8 <__fxstatat@plt+0xa2a8>  // b.plast
  40ccf0:	cmp	w1, #0x7e
  40ccf4:	b.ne	40ccbc <__fxstatat@plt+0xa26c>  // b.any
  40ccf8:	cbnz	w2, 40c9d8 <__fxstatat@plt+0x9f88>
  40ccfc:	b	40ca38 <__fxstatat@plt+0x9fe8>
  40cd00:	add	x1, x3, x6
  40cd04:	mov	w2, #0x0                   	// #0
  40cd08:	cmp	x24, x1
  40cd0c:	b.ne	40caa0 <__fxstatat@plt+0xa050>  // b.any
  40cd10:	b	40cab4 <__fxstatat@plt+0xa064>
  40cd14:	sub	w4, w1, #0x61
  40cd18:	and	w4, w4, #0xff
  40cd1c:	cmp	w4, #0x19
  40cd20:	b.ls	40cab4 <__fxstatat@plt+0xa064>  // b.plast
  40cd24:	cmp	w1, #0x7e
  40cd28:	mov	w2, #0xffffffff            	// #-1
  40cd2c:	b.eq	40cab4 <__fxstatat@plt+0xa064>  // b.none
  40cd30:	add	w2, w1, #0x100
  40cd34:	b	40cab4 <__fxstatat@plt+0xa064>
  40cd38:	sub	w1, w4, #0x61
  40cd3c:	and	w1, w1, #0xff
  40cd40:	cmp	w1, #0x19
  40cd44:	b.ls	40cd00 <__fxstatat@plt+0xa2b0>  // b.plast
  40cd48:	cmp	w4, #0x7e
  40cd4c:	mov	w5, #0xffffffff            	// #-1
  40cd50:	b.eq	40ca94 <__fxstatat@plt+0xa044>  // b.none
  40cd54:	b	40ca90 <__fxstatat@plt+0xa040>
  40cd58:	sub	w1, w1, #0x30
  40cd5c:	cmp	w1, #0x9
  40cd60:	b.ls	40cbb8 <__fxstatat@plt+0xa168>  // b.plast
  40cd64:	b	40ca54 <__fxstatat@plt+0xa004>
  40cd68:	mov	w5, #0x0                   	// #0
  40cd6c:	b	40cb00 <__fxstatat@plt+0xa0b0>
  40cd70:	sub	w5, w5, w2
  40cd74:	nop
  40cd78:	cmp	w5, #0x0
  40cd7c:	csel	w21, w21, w5, eq  // eq = none
  40cd80:	ldp	x23, x24, [sp, #48]
  40cd84:	ldr	x25, [sp, #64]
  40cd88:	b	40c8d4 <__fxstatat@plt+0x9e84>
  40cd8c:	ldp	x23, x24, [sp, #48]
  40cd90:	ldr	x25, [sp, #64]
  40cd94:	b	40c8d0 <__fxstatat@plt+0x9e80>
  40cd98:	ldrb	w2, [x19, #1]
  40cd9c:	add	x22, x20, #0x1
  40cda0:	add	x3, x19, #0x1
  40cda4:	cbnz	w0, 40ce94 <__fxstatat@plt+0xa444>
  40cda8:	mov	x19, x3
  40cdac:	mov	x20, x22
  40cdb0:	sub	x25, x22, x20
  40cdb4:	mov	x5, #0x0                   	// #0
  40cdb8:	mov	x24, #0x0                   	// #0
  40cdbc:	cbnz	w2, 40c9cc <__fxstatat@plt+0x9f7c>
  40cdc0:	b	40ca4c <__fxstatat@plt+0x9ffc>
  40cdc4:	add	x1, x1, #0x1
  40cdc8:	sub	w7, w4, w2
  40cdcc:	add	x5, x5, x6
  40cdd0:	ldrb	w4, [x3, x1]
  40cdd4:	sub	w2, w4, #0x30
  40cdd8:	cmp	w2, #0x9
  40cddc:	b.ls	40cb7c <__fxstatat@plt+0xa12c>  // b.plast
  40cde0:	ldrb	w0, [x19, x1]
  40cde4:	sub	w0, w0, #0x30
  40cde8:	cmp	w0, #0x9
  40cdec:	b.ls	40cbb8 <__fxstatat@plt+0xa168>  // b.plast
  40cdf0:	cbnz	w7, 40ce6c <__fxstatat@plt+0xa41c>
  40cdf4:	mov	x0, x1
  40cdf8:	mov	x3, x5
  40cdfc:	b	40ca54 <__fxstatat@plt+0xa004>
  40ce00:	cbnz	w2, 40c9cc <__fxstatat@plt+0x9f7c>
  40ce04:	mov	x23, x19
  40ce08:	cbnz	x5, 40ceac <__fxstatat@plt+0xa45c>
  40ce0c:	sub	x25, x22, x20
  40ce10:	sub	x24, x23, x19
  40ce14:	b	40ca4c <__fxstatat@plt+0x9ffc>
  40ce18:	mov	x2, x25
  40ce1c:	mov	x1, x19
  40ce20:	mov	x0, x20
  40ce24:	bl	402640 <strncmp@plt>
  40ce28:	cbnz	w0, 40ca4c <__fxstatat@plt+0x9ffc>
  40ce2c:	sub	x25, x22, x20
  40ce30:	b	40ce10 <__fxstatat@plt+0xa3c0>
  40ce34:	mov	x22, x4
  40ce38:	cbnz	w2, 40c9cc <__fxstatat@plt+0x9f7c>
  40ce3c:	sub	x25, x5, x20
  40ce40:	mov	x23, x19
  40ce44:	mov	x24, #0x0                   	// #0
  40ce48:	b	40ca44 <__fxstatat@plt+0x9ff4>
  40ce4c:	cbz	x5, 40ceb8 <__fxstatat@plt+0xa468>
  40ce50:	sub	x25, x5, x20
  40ce54:	mov	x23, x3
  40ce58:	b	40ca40 <__fxstatat@plt+0x9ff0>
  40ce5c:	sub	x25, x22, x20
  40ce60:	cbnz	x24, 40ca40 <__fxstatat@plt+0x9ff0>
  40ce64:	sub	x24, x23, x19
  40ce68:	b	40ca4c <__fxstatat@plt+0x9ffc>
  40ce6c:	mov	w21, w7
  40ce70:	ldp	x23, x24, [sp, #48]
  40ce74:	ldr	x25, [sp, #64]
  40ce78:	b	40c8d4 <__fxstatat@plt+0x9e84>
  40ce7c:	mov	x5, x22
  40ce80:	cbnz	w0, 40cbf8 <__fxstatat@plt+0xa1a8>
  40ce84:	b	40c9c4 <__fxstatat@plt+0x9f74>
  40ce88:	mov	x24, x23
  40ce8c:	cbnz	w1, 40cca4 <__fxstatat@plt+0xa254>
  40ce90:	b	40ca34 <__fxstatat@plt+0x9fe4>
  40ce94:	ldrb	w4, [x20, #2]
  40ce98:	mov	w1, w0
  40ce9c:	mov	x19, x3
  40cea0:	mov	x20, x22
  40cea4:	mov	w0, w4
  40cea8:	b	40c95c <__fxstatat@plt+0x9f0c>
  40ceac:	sub	x25, x5, x20
  40ceb0:	sub	x24, x23, x19
  40ceb4:	b	40ca44 <__fxstatat@plt+0x9ff4>
  40ceb8:	mov	x23, x3
  40cebc:	sub	x25, x22, x20
  40cec0:	b	40ca40 <__fxstatat@plt+0x9ff0>
  40cec4:	nop
  40cec8:	mov	x1, x0
  40cecc:	mov	w0, #0x0                   	// #0
  40ced0:	b	402530 <clock_gettime@plt>
  40ced4:	nop
  40ced8:	stp	x29, x30, [sp, #-32]!
  40cedc:	mov	w0, #0x0                   	// #0
  40cee0:	mov	x29, sp
  40cee4:	add	x1, sp, #0x10
  40cee8:	bl	402530 <clock_gettime@plt>
  40ceec:	ldp	x0, x1, [sp, #16]
  40cef0:	ldp	x29, x30, [sp], #32
  40cef4:	ret
  40cef8:	stp	x29, x30, [sp, #-16]!
  40cefc:	mov	x1, #0x0                   	// #0
  40cf00:	mov	x29, sp
  40cf04:	bl	402a40 <setlocale@plt>
  40cf08:	mov	w1, #0x1                   	// #1
  40cf0c:	cbz	x0, 40cf30 <__fxstatat@plt+0xa4e0>
  40cf10:	ldrb	w1, [x0]
  40cf14:	cmp	w1, #0x43
  40cf18:	b.eq	40cf3c <__fxstatat@plt+0xa4ec>  // b.none
  40cf1c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40cf20:	add	x1, x1, #0xb68
  40cf24:	bl	402800 <strcmp@plt>
  40cf28:	cmp	w0, #0x0
  40cf2c:	cset	w1, ne  // ne = any
  40cf30:	mov	w0, w1
  40cf34:	ldp	x29, x30, [sp], #16
  40cf38:	ret
  40cf3c:	ldrb	w2, [x0, #1]
  40cf40:	mov	w1, #0x0                   	// #0
  40cf44:	cbnz	w2, 40cf1c <__fxstatat@plt+0xa4cc>
  40cf48:	mov	w0, w1
  40cf4c:	ldp	x29, x30, [sp], #16
  40cf50:	ret
  40cf54:	nop
  40cf58:	ror	x2, x0, #3
  40cf5c:	udiv	x0, x2, x1
  40cf60:	msub	x0, x0, x1, x2
  40cf64:	ret
  40cf68:	cmp	x1, x0
  40cf6c:	cset	w0, eq  // eq = none
  40cf70:	ret
  40cf74:	nop
  40cf78:	stp	x29, x30, [sp, #-80]!
  40cf7c:	mov	x29, sp
  40cf80:	stp	x21, x22, [sp, #32]
  40cf84:	mov	x21, x0
  40cf88:	mov	x0, x1
  40cf8c:	stp	x19, x20, [sp, #16]
  40cf90:	mov	x20, x1
  40cf94:	stp	x23, x24, [sp, #48]
  40cf98:	mov	x24, x2
  40cf9c:	and	w23, w3, #0xff
  40cfa0:	ldr	x1, [x21, #16]
  40cfa4:	ldr	x2, [x21, #48]
  40cfa8:	str	x25, [sp, #64]
  40cfac:	blr	x2
  40cfb0:	ldr	x1, [x21, #16]
  40cfb4:	cmp	x0, x1
  40cfb8:	b.cs	40d0c4 <__fxstatat@plt+0xa674>  // b.hs, b.nlast
  40cfbc:	ldr	x25, [x21]
  40cfc0:	lsl	x22, x0, #4
  40cfc4:	add	x19, x25, x22
  40cfc8:	str	x19, [x24]
  40cfcc:	ldr	x1, [x25, x22]
  40cfd0:	cbz	x1, 40d05c <__fxstatat@plt+0xa60c>
  40cfd4:	cmp	x1, x20
  40cfd8:	b.eq	40d0bc <__fxstatat@plt+0xa66c>  // b.none
  40cfdc:	ldr	x2, [x21, #56]
  40cfe0:	mov	x0, x20
  40cfe4:	blr	x2
  40cfe8:	tst	w0, #0xff
  40cfec:	b.eq	40d054 <__fxstatat@plt+0xa604>  // b.none
  40cff0:	ldr	x0, [x25, x22]
  40cff4:	cbz	w23, 40d060 <__fxstatat@plt+0xa610>
  40cff8:	ldr	x1, [x19, #8]
  40cffc:	cbz	x1, 40d0b4 <__fxstatat@plt+0xa664>
  40d000:	ldp	x2, x3, [x1]
  40d004:	stp	x2, x3, [x19]
  40d008:	str	xzr, [x1]
  40d00c:	ldp	x19, x20, [sp, #16]
  40d010:	ldr	x2, [x21, #72]
  40d014:	str	x2, [x1, #8]
  40d018:	str	x1, [x21, #72]
  40d01c:	ldp	x21, x22, [sp, #32]
  40d020:	ldp	x23, x24, [sp, #48]
  40d024:	ldr	x25, [sp, #64]
  40d028:	ldp	x29, x30, [sp], #80
  40d02c:	ret
  40d030:	ldr	x1, [x2]
  40d034:	cmp	x1, x20
  40d038:	b.eq	40d07c <__fxstatat@plt+0xa62c>  // b.none
  40d03c:	ldr	x2, [x21, #56]
  40d040:	mov	x0, x20
  40d044:	blr	x2
  40d048:	tst	w0, #0xff
  40d04c:	b.ne	40d078 <__fxstatat@plt+0xa628>  // b.any
  40d050:	ldr	x19, [x19, #8]
  40d054:	ldr	x2, [x19, #8]
  40d058:	cbnz	x2, 40d030 <__fxstatat@plt+0xa5e0>
  40d05c:	mov	x0, #0x0                   	// #0
  40d060:	ldp	x19, x20, [sp, #16]
  40d064:	ldp	x21, x22, [sp, #32]
  40d068:	ldp	x23, x24, [sp, #48]
  40d06c:	ldr	x25, [sp, #64]
  40d070:	ldp	x29, x30, [sp], #80
  40d074:	ret
  40d078:	ldr	x2, [x19, #8]
  40d07c:	ldr	x0, [x2]
  40d080:	cbz	w23, 40d060 <__fxstatat@plt+0xa610>
  40d084:	ldr	x1, [x2, #8]
  40d088:	str	x1, [x19, #8]
  40d08c:	str	xzr, [x2]
  40d090:	ldp	x19, x20, [sp, #16]
  40d094:	ldr	x1, [x21, #72]
  40d098:	str	x1, [x2, #8]
  40d09c:	str	x2, [x21, #72]
  40d0a0:	ldp	x21, x22, [sp, #32]
  40d0a4:	ldp	x23, x24, [sp, #48]
  40d0a8:	ldr	x25, [sp, #64]
  40d0ac:	ldp	x29, x30, [sp], #80
  40d0b0:	ret
  40d0b4:	str	xzr, [x25, x22]
  40d0b8:	b	40d060 <__fxstatat@plt+0xa610>
  40d0bc:	mov	x0, x1
  40d0c0:	b	40cff4 <__fxstatat@plt+0xa5a4>
  40d0c4:	bl	402760 <abort@plt>
  40d0c8:	stp	x29, x30, [sp, #-64]!
  40d0cc:	mov	x29, sp
  40d0d0:	stp	x19, x20, [sp, #16]
  40d0d4:	mov	x20, x0
  40d0d8:	stp	x21, x22, [sp, #32]
  40d0dc:	mov	x22, x1
  40d0e0:	ldp	x21, x0, [x1]
  40d0e4:	stp	x23, x24, [sp, #48]
  40d0e8:	and	w23, w2, #0xff
  40d0ec:	cmp	x21, x0
  40d0f0:	b.cc	40d104 <__fxstatat@plt+0xa6b4>  // b.lo, b.ul, b.last
  40d0f4:	b	40d1a4 <__fxstatat@plt+0xa754>
  40d0f8:	add	x21, x21, #0x10
  40d0fc:	cmp	x21, x0
  40d100:	b.cs	40d1a4 <__fxstatat@plt+0xa754>  // b.hs, b.nlast
  40d104:	ldr	x24, [x21]
  40d108:	cbz	x24, 40d0f8 <__fxstatat@plt+0xa6a8>
  40d10c:	ldr	x19, [x21, #8]
  40d110:	cbz	x19, 40d18c <__fxstatat@plt+0xa73c>
  40d114:	ldr	x1, [x20, #16]
  40d118:	ldr	x2, [x20, #48]
  40d11c:	ldr	x24, [x19]
  40d120:	mov	x0, x24
  40d124:	blr	x2
  40d128:	ldr	x1, [x20, #16]
  40d12c:	cmp	x0, x1
  40d130:	b.cs	40d25c <__fxstatat@plt+0xa80c>  // b.hs, b.nlast
  40d134:	ldr	x2, [x20]
  40d138:	lsl	x0, x0, #4
  40d13c:	ldr	x3, [x19, #8]
  40d140:	add	x4, x2, x0
  40d144:	ldr	x5, [x2, x0]
  40d148:	cbz	x5, 40d164 <__fxstatat@plt+0xa714>
  40d14c:	ldr	x0, [x4, #8]
  40d150:	str	x0, [x19, #8]
  40d154:	str	x19, [x4, #8]
  40d158:	cbz	x3, 40d188 <__fxstatat@plt+0xa738>
  40d15c:	mov	x19, x3
  40d160:	b	40d118 <__fxstatat@plt+0xa6c8>
  40d164:	ldr	x4, [x20, #24]
  40d168:	str	x24, [x2, x0]
  40d16c:	add	x0, x4, #0x1
  40d170:	str	x0, [x20, #24]
  40d174:	str	xzr, [x19]
  40d178:	ldr	x0, [x20, #72]
  40d17c:	str	x0, [x19, #8]
  40d180:	str	x19, [x20, #72]
  40d184:	cbnz	x3, 40d15c <__fxstatat@plt+0xa70c>
  40d188:	ldr	x24, [x21]
  40d18c:	str	xzr, [x21, #8]
  40d190:	cbz	w23, 40d1c0 <__fxstatat@plt+0xa770>
  40d194:	ldr	x0, [x22, #8]
  40d198:	add	x21, x21, #0x10
  40d19c:	cmp	x21, x0
  40d1a0:	b.cc	40d104 <__fxstatat@plt+0xa6b4>  // b.lo, b.ul, b.last
  40d1a4:	mov	w23, #0x1                   	// #1
  40d1a8:	mov	w0, w23
  40d1ac:	ldp	x19, x20, [sp, #16]
  40d1b0:	ldp	x21, x22, [sp, #32]
  40d1b4:	ldp	x23, x24, [sp, #48]
  40d1b8:	ldp	x29, x30, [sp], #64
  40d1bc:	ret
  40d1c0:	ldr	x1, [x20, #16]
  40d1c4:	mov	x0, x24
  40d1c8:	ldr	x2, [x20, #48]
  40d1cc:	blr	x2
  40d1d0:	ldr	x1, [x20, #16]
  40d1d4:	cmp	x0, x1
  40d1d8:	b.cs	40d25c <__fxstatat@plt+0xa80c>  // b.hs, b.nlast
  40d1dc:	ldr	x1, [x20]
  40d1e0:	lsl	x0, x0, #4
  40d1e4:	add	x19, x1, x0
  40d1e8:	ldr	x2, [x1, x0]
  40d1ec:	cbz	x2, 40d224 <__fxstatat@plt+0xa7d4>
  40d1f0:	ldr	x0, [x20, #72]
  40d1f4:	cbz	x0, 40d238 <__fxstatat@plt+0xa7e8>
  40d1f8:	ldr	x1, [x0, #8]
  40d1fc:	str	x1, [x20, #72]
  40d200:	ldr	x1, [x19, #8]
  40d204:	stp	x24, x1, [x0]
  40d208:	str	x0, [x19, #8]
  40d20c:	ldr	x1, [x22, #24]
  40d210:	str	xzr, [x21]
  40d214:	sub	x1, x1, #0x1
  40d218:	str	x1, [x22, #24]
  40d21c:	ldr	x0, [x22, #8]
  40d220:	b	40d0f8 <__fxstatat@plt+0xa6a8>
  40d224:	ldr	x2, [x20, #24]
  40d228:	str	x24, [x1, x0]
  40d22c:	add	x0, x2, #0x1
  40d230:	str	x0, [x20, #24]
  40d234:	b	40d20c <__fxstatat@plt+0xa7bc>
  40d238:	mov	x0, #0x10                  	// #16
  40d23c:	bl	4025f0 <malloc@plt>
  40d240:	cbnz	x0, 40d200 <__fxstatat@plt+0xa7b0>
  40d244:	mov	w0, w23
  40d248:	ldp	x19, x20, [sp, #16]
  40d24c:	ldp	x21, x22, [sp, #32]
  40d250:	ldp	x23, x24, [sp, #48]
  40d254:	ldp	x29, x30, [sp], #64
  40d258:	ret
  40d25c:	bl	402760 <abort@plt>
  40d260:	ldr	x0, [x0, #16]
  40d264:	ret
  40d268:	ldr	x0, [x0, #24]
  40d26c:	ret
  40d270:	ldr	x0, [x0, #32]
  40d274:	ret
  40d278:	ldp	x3, x4, [x0]
  40d27c:	mov	x0, #0x0                   	// #0
  40d280:	cmp	x3, x4
  40d284:	b.cc	40d298 <__fxstatat@plt+0xa848>  // b.lo, b.ul, b.last
  40d288:	b	40d2d0 <__fxstatat@plt+0xa880>
  40d28c:	add	x3, x3, #0x10
  40d290:	cmp	x3, x4
  40d294:	b.cs	40d2d0 <__fxstatat@plt+0xa880>  // b.hs, b.nlast
  40d298:	ldr	x1, [x3]
  40d29c:	cbz	x1, 40d28c <__fxstatat@plt+0xa83c>
  40d2a0:	ldr	x1, [x3, #8]
  40d2a4:	mov	x2, #0x1                   	// #1
  40d2a8:	cbz	x1, 40d2bc <__fxstatat@plt+0xa86c>
  40d2ac:	nop
  40d2b0:	ldr	x1, [x1, #8]
  40d2b4:	add	x2, x2, #0x1
  40d2b8:	cbnz	x1, 40d2b0 <__fxstatat@plt+0xa860>
  40d2bc:	cmp	x0, x2
  40d2c0:	add	x3, x3, #0x10
  40d2c4:	csel	x0, x0, x2, cs  // cs = hs, nlast
  40d2c8:	cmp	x3, x4
  40d2cc:	b.cc	40d298 <__fxstatat@plt+0xa848>  // b.lo, b.ul, b.last
  40d2d0:	ret
  40d2d4:	nop
  40d2d8:	ldp	x3, x4, [x0]
  40d2dc:	mov	x6, x0
  40d2e0:	mov	x2, #0x0                   	// #0
  40d2e4:	mov	x5, #0x0                   	// #0
  40d2e8:	cmp	x3, x4
  40d2ec:	b.cc	40d300 <__fxstatat@plt+0xa8b0>  // b.lo, b.ul, b.last
  40d2f0:	b	40d330 <__fxstatat@plt+0xa8e0>
  40d2f4:	add	x3, x3, #0x10
  40d2f8:	cmp	x3, x4
  40d2fc:	b.cs	40d330 <__fxstatat@plt+0xa8e0>  // b.hs, b.nlast
  40d300:	ldr	x1, [x3]
  40d304:	cbz	x1, 40d2f4 <__fxstatat@plt+0xa8a4>
  40d308:	ldr	x1, [x3, #8]
  40d30c:	add	x5, x5, #0x1
  40d310:	add	x2, x2, #0x1
  40d314:	cbz	x1, 40d2f4 <__fxstatat@plt+0xa8a4>
  40d318:	ldr	x1, [x1, #8]
  40d31c:	add	x2, x2, #0x1
  40d320:	cbnz	x1, 40d318 <__fxstatat@plt+0xa8c8>
  40d324:	add	x3, x3, #0x10
  40d328:	cmp	x3, x4
  40d32c:	b.cc	40d300 <__fxstatat@plt+0xa8b0>  // b.lo, b.ul, b.last
  40d330:	ldr	x1, [x6, #24]
  40d334:	mov	w0, #0x0                   	// #0
  40d338:	cmp	x1, x5
  40d33c:	b.eq	40d344 <__fxstatat@plt+0xa8f4>  // b.none
  40d340:	ret
  40d344:	ldr	x0, [x6, #32]
  40d348:	cmp	x0, x2
  40d34c:	cset	w0, eq  // eq = none
  40d350:	ret
  40d354:	nop
  40d358:	stp	x29, x30, [sp, #-48]!
  40d35c:	mov	x29, sp
  40d360:	ldp	x4, x5, [x0]
  40d364:	stp	x19, x20, [sp, #16]
  40d368:	mov	x20, x1
  40d36c:	stp	x21, x22, [sp, #32]
  40d370:	mov	x19, #0x0                   	// #0
  40d374:	ldp	x21, x22, [x0, #16]
  40d378:	cmp	x4, x5
  40d37c:	ldr	x3, [x0, #32]
  40d380:	b.cc	40d394 <__fxstatat@plt+0xa944>  // b.lo, b.ul, b.last
  40d384:	b	40d3c8 <__fxstatat@plt+0xa978>
  40d388:	add	x4, x4, #0x10
  40d38c:	cmp	x4, x5
  40d390:	b.cs	40d3c8 <__fxstatat@plt+0xa978>  // b.hs, b.nlast
  40d394:	ldr	x0, [x4]
  40d398:	cbz	x0, 40d388 <__fxstatat@plt+0xa938>
  40d39c:	ldr	x0, [x4, #8]
  40d3a0:	mov	x2, #0x1                   	// #1
  40d3a4:	cbz	x0, 40d3b4 <__fxstatat@plt+0xa964>
  40d3a8:	ldr	x0, [x0, #8]
  40d3ac:	add	x2, x2, #0x1
  40d3b0:	cbnz	x0, 40d3a8 <__fxstatat@plt+0xa958>
  40d3b4:	cmp	x19, x2
  40d3b8:	add	x4, x4, #0x10
  40d3bc:	csel	x19, x19, x2, cs  // cs = hs, nlast
  40d3c0:	cmp	x4, x5
  40d3c4:	b.cc	40d394 <__fxstatat@plt+0xa944>  // b.lo, b.ul, b.last
  40d3c8:	mov	x0, x20
  40d3cc:	mov	w1, #0x1                   	// #1
  40d3d0:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40d3d4:	add	x2, x2, #0xb70
  40d3d8:	bl	4027e0 <__fprintf_chk@plt>
  40d3dc:	mov	x3, x21
  40d3e0:	mov	x0, x20
  40d3e4:	mov	w1, #0x1                   	// #1
  40d3e8:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40d3ec:	add	x2, x2, #0xb88
  40d3f0:	bl	4027e0 <__fprintf_chk@plt>
  40d3f4:	ucvtf	d1, x22
  40d3f8:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  40d3fc:	fmov	d2, x0
  40d400:	ucvtf	d0, x21
  40d404:	mov	x3, x22
  40d408:	mov	x0, x20
  40d40c:	mov	w1, #0x1                   	// #1
  40d410:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40d414:	fmul	d1, d1, d2
  40d418:	add	x2, x2, #0xba0
  40d41c:	fdiv	d0, d1, d0
  40d420:	bl	4027e0 <__fprintf_chk@plt>
  40d424:	mov	x3, x19
  40d428:	mov	x0, x20
  40d42c:	ldp	x19, x20, [sp, #16]
  40d430:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40d434:	ldp	x21, x22, [sp, #32]
  40d438:	add	x2, x2, #0xbc8
  40d43c:	ldp	x29, x30, [sp], #48
  40d440:	mov	w1, #0x1                   	// #1
  40d444:	b	4027e0 <__fprintf_chk@plt>
  40d448:	stp	x29, x30, [sp, #-48]!
  40d44c:	mov	x29, sp
  40d450:	str	x21, [sp, #32]
  40d454:	mov	x21, x0
  40d458:	mov	x0, x1
  40d45c:	stp	x19, x20, [sp, #16]
  40d460:	mov	x20, x1
  40d464:	ldr	x1, [x21, #16]
  40d468:	ldr	x2, [x21, #48]
  40d46c:	blr	x2
  40d470:	ldr	x1, [x21, #16]
  40d474:	cmp	x0, x1
  40d478:	b.cs	40d4e8 <__fxstatat@plt+0xaa98>  // b.hs, b.nlast
  40d47c:	ldr	x1, [x21]
  40d480:	lsl	x0, x0, #4
  40d484:	add	x19, x1, x0
  40d488:	ldr	x1, [x1, x0]
  40d48c:	cbnz	x1, 40d498 <__fxstatat@plt+0xaa48>
  40d490:	b	40d4bc <__fxstatat@plt+0xaa6c>
  40d494:	ldr	x1, [x19]
  40d498:	cmp	x1, x20
  40d49c:	b.eq	40d4d4 <__fxstatat@plt+0xaa84>  // b.none
  40d4a0:	ldr	x2, [x21, #56]
  40d4a4:	mov	x0, x20
  40d4a8:	blr	x2
  40d4ac:	tst	w0, #0xff
  40d4b0:	b.ne	40d4d0 <__fxstatat@plt+0xaa80>  // b.any
  40d4b4:	ldr	x19, [x19, #8]
  40d4b8:	cbnz	x19, 40d494 <__fxstatat@plt+0xaa44>
  40d4bc:	mov	x0, #0x0                   	// #0
  40d4c0:	ldp	x19, x20, [sp, #16]
  40d4c4:	ldr	x21, [sp, #32]
  40d4c8:	ldp	x29, x30, [sp], #48
  40d4cc:	ret
  40d4d0:	ldr	x20, [x19]
  40d4d4:	mov	x0, x20
  40d4d8:	ldp	x19, x20, [sp, #16]
  40d4dc:	ldr	x21, [sp, #32]
  40d4e0:	ldp	x29, x30, [sp], #48
  40d4e4:	ret
  40d4e8:	bl	402760 <abort@plt>
  40d4ec:	nop
  40d4f0:	ldr	x1, [x0, #32]
  40d4f4:	cbz	x1, 40d520 <__fxstatat@plt+0xaad0>
  40d4f8:	ldp	x1, x2, [x0]
  40d4fc:	cmp	x1, x2
  40d500:	b.cc	40d514 <__fxstatat@plt+0xaac4>  // b.lo, b.ul, b.last
  40d504:	b	40d528 <__fxstatat@plt+0xaad8>
  40d508:	add	x1, x1, #0x10
  40d50c:	cmp	x1, x2
  40d510:	b.cs	40d528 <__fxstatat@plt+0xaad8>  // b.hs, b.nlast
  40d514:	ldr	x0, [x1]
  40d518:	cbz	x0, 40d508 <__fxstatat@plt+0xaab8>
  40d51c:	ret
  40d520:	mov	x0, #0x0                   	// #0
  40d524:	ret
  40d528:	stp	x29, x30, [sp, #-16]!
  40d52c:	mov	x29, sp
  40d530:	bl	402760 <abort@plt>
  40d534:	nop
  40d538:	stp	x29, x30, [sp, #-32]!
  40d53c:	mov	x29, sp
  40d540:	stp	x19, x20, [sp, #16]
  40d544:	mov	x20, x0
  40d548:	mov	x19, x1
  40d54c:	mov	x0, x1
  40d550:	ldr	x1, [x20, #16]
  40d554:	ldr	x2, [x20, #48]
  40d558:	blr	x2
  40d55c:	ldr	x1, [x20, #16]
  40d560:	cmp	x0, x1
  40d564:	b.cs	40d5c8 <__fxstatat@plt+0xab78>  // b.hs, b.nlast
  40d568:	ldr	x3, [x20]
  40d56c:	add	x3, x3, x0, lsl #4
  40d570:	mov	x2, x3
  40d574:	b	40d57c <__fxstatat@plt+0xab2c>
  40d578:	cbz	x2, 40d58c <__fxstatat@plt+0xab3c>
  40d57c:	ldp	x4, x2, [x2]
  40d580:	cmp	x4, x19
  40d584:	b.ne	40d578 <__fxstatat@plt+0xab28>  // b.any
  40d588:	cbnz	x2, 40d5b8 <__fxstatat@plt+0xab68>
  40d58c:	ldr	x1, [x20, #8]
  40d590:	b	40d59c <__fxstatat@plt+0xab4c>
  40d594:	ldr	x0, [x3]
  40d598:	cbnz	x0, 40d5ac <__fxstatat@plt+0xab5c>
  40d59c:	add	x3, x3, #0x10
  40d5a0:	cmp	x1, x3
  40d5a4:	b.hi	40d594 <__fxstatat@plt+0xab44>  // b.pmore
  40d5a8:	mov	x0, #0x0                   	// #0
  40d5ac:	ldp	x19, x20, [sp, #16]
  40d5b0:	ldp	x29, x30, [sp], #32
  40d5b4:	ret
  40d5b8:	ldr	x0, [x2]
  40d5bc:	ldp	x19, x20, [sp, #16]
  40d5c0:	ldp	x29, x30, [sp], #32
  40d5c4:	ret
  40d5c8:	bl	402760 <abort@plt>
  40d5cc:	nop
  40d5d0:	ldp	x5, x3, [x0]
  40d5d4:	mov	x6, x0
  40d5d8:	cmp	x3, x5
  40d5dc:	b.ls	40d62c <__fxstatat@plt+0xabdc>  // b.plast
  40d5e0:	sub	x4, x1, #0x8
  40d5e4:	mov	x0, #0x0                   	// #0
  40d5e8:	ldr	x1, [x5]
  40d5ec:	cbnz	x1, 40d600 <__fxstatat@plt+0xabb0>
  40d5f0:	add	x5, x5, #0x10
  40d5f4:	cmp	x5, x3
  40d5f8:	b.cc	40d5e8 <__fxstatat@plt+0xab98>  // b.lo, b.ul, b.last
  40d5fc:	ret
  40d600:	mov	x1, x5
  40d604:	nop
  40d608:	cmp	x2, x0
  40d60c:	b.ls	40d5fc <__fxstatat@plt+0xabac>  // b.plast
  40d610:	add	x0, x0, #0x1
  40d614:	ldr	x3, [x1]
  40d618:	str	x3, [x4, x0, lsl #3]
  40d61c:	ldr	x1, [x1, #8]
  40d620:	cbnz	x1, 40d608 <__fxstatat@plt+0xabb8>
  40d624:	ldr	x3, [x6, #8]
  40d628:	b	40d5f0 <__fxstatat@plt+0xaba0>
  40d62c:	mov	x0, #0x0                   	// #0
  40d630:	ret
  40d634:	nop
  40d638:	stp	x29, x30, [sp, #-64]!
  40d63c:	mov	x29, sp
  40d640:	stp	x21, x22, [sp, #32]
  40d644:	mov	x21, x1
  40d648:	stp	x23, x24, [sp, #48]
  40d64c:	ldp	x23, x1, [x0]
  40d650:	stp	x19, x20, [sp, #16]
  40d654:	cmp	x1, x23
  40d658:	b.ls	40d6c4 <__fxstatat@plt+0xac74>  // b.plast
  40d65c:	mov	x24, x0
  40d660:	mov	x22, x2
  40d664:	mov	x20, #0x0                   	// #0
  40d668:	ldr	x0, [x23]
  40d66c:	cbnz	x0, 40d694 <__fxstatat@plt+0xac44>
  40d670:	add	x23, x23, #0x10
  40d674:	cmp	x23, x1
  40d678:	b.cc	40d668 <__fxstatat@plt+0xac18>  // b.lo, b.ul, b.last
  40d67c:	mov	x0, x20
  40d680:	ldp	x19, x20, [sp, #16]
  40d684:	ldp	x21, x22, [sp, #32]
  40d688:	ldp	x23, x24, [sp, #48]
  40d68c:	ldp	x29, x30, [sp], #64
  40d690:	ret
  40d694:	mov	x19, x23
  40d698:	b	40d6a0 <__fxstatat@plt+0xac50>
  40d69c:	ldr	x0, [x19]
  40d6a0:	mov	x1, x22
  40d6a4:	blr	x21
  40d6a8:	tst	w0, #0xff
  40d6ac:	b.eq	40d67c <__fxstatat@plt+0xac2c>  // b.none
  40d6b0:	ldr	x19, [x19, #8]
  40d6b4:	add	x20, x20, #0x1
  40d6b8:	cbnz	x19, 40d69c <__fxstatat@plt+0xac4c>
  40d6bc:	ldr	x1, [x24, #8]
  40d6c0:	b	40d670 <__fxstatat@plt+0xac20>
  40d6c4:	mov	x20, #0x0                   	// #0
  40d6c8:	b	40d67c <__fxstatat@plt+0xac2c>
  40d6cc:	nop
  40d6d0:	ldrb	w4, [x0]
  40d6d4:	mov	x2, #0x0                   	// #0
  40d6d8:	cbz	w4, 40d6fc <__fxstatat@plt+0xacac>
  40d6dc:	nop
  40d6e0:	lsl	x3, x2, #5
  40d6e4:	sub	x2, x3, x2
  40d6e8:	add	x2, x2, w4, uxtb
  40d6ec:	ldrb	w4, [x0, #1]!
  40d6f0:	udiv	x3, x2, x1
  40d6f4:	msub	x2, x3, x1, x2
  40d6f8:	cbnz	w4, 40d6e0 <__fxstatat@plt+0xac90>
  40d6fc:	mov	x0, x2
  40d700:	ret
  40d704:	nop
  40d708:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40d70c:	add	x1, x1, #0xc00
  40d710:	ldp	x2, x3, [x1]
  40d714:	stp	x2, x3, [x0]
  40d718:	ldr	w1, [x1, #16]
  40d71c:	str	w1, [x0, #16]
  40d720:	ret
  40d724:	nop
  40d728:	stp	x29, x30, [sp, #-64]!
  40d72c:	cmp	x2, #0x0
  40d730:	mov	x29, sp
  40d734:	stp	x23, x24, [sp, #48]
  40d738:	mov	x23, x2
  40d73c:	adrp	x2, 40c000 <__fxstatat@plt+0x95b0>
  40d740:	add	x2, x2, #0xf58
  40d744:	stp	x19, x20, [sp, #16]
  40d748:	csel	x23, x2, x23, eq  // eq = none
  40d74c:	cmp	x3, #0x0
  40d750:	adrp	x2, 40c000 <__fxstatat@plt+0x95b0>
  40d754:	add	x2, x2, #0xf68
  40d758:	mov	x19, x0
  40d75c:	mov	x20, x4
  40d760:	csel	x24, x2, x3, eq  // eq = none
  40d764:	mov	x0, #0x50                  	// #80
  40d768:	stp	x21, x22, [sp, #32]
  40d76c:	mov	x22, x1
  40d770:	bl	4025f0 <malloc@plt>
  40d774:	mov	x21, x0
  40d778:	cbz	x0, 40d834 <__fxstatat@plt+0xade4>
  40d77c:	cbz	x22, 40d84c <__fxstatat@plt+0xadfc>
  40d780:	str	x22, [x21, #40]
  40d784:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40d788:	add	x0, x0, #0xc00
  40d78c:	cmp	x22, x0
  40d790:	b.eq	40d858 <__fxstatat@plt+0xae08>  // b.none
  40d794:	mov	w0, #0xcccd                	// #52429
  40d798:	ldr	s2, [x22, #8]
  40d79c:	movk	w0, #0x3dcc, lsl #16
  40d7a0:	fmov	s1, w0
  40d7a4:	fcmpe	s2, s1
  40d7a8:	b.le	40d828 <__fxstatat@plt+0xadd8>
  40d7ac:	mov	w0, #0x6666                	// #26214
  40d7b0:	movk	w0, #0x3f66, lsl #16
  40d7b4:	fmov	s0, w0
  40d7b8:	fcmpe	s2, s0
  40d7bc:	b.pl	40d828 <__fxstatat@plt+0xadd8>  // b.nfrst
  40d7c0:	mov	w0, #0xcccd                	// #52429
  40d7c4:	ldr	s3, [x22, #12]
  40d7c8:	movk	w0, #0x3f8c, lsl #16
  40d7cc:	fmov	s0, w0
  40d7d0:	fcmpe	s3, s0
  40d7d4:	b.le	40d828 <__fxstatat@plt+0xadd8>
  40d7d8:	ldr	s0, [x22]
  40d7dc:	fcmpe	s0, #0.0
  40d7e0:	b.lt	40d828 <__fxstatat@plt+0xadd8>  // b.tstop
  40d7e4:	fadd	s1, s0, s1
  40d7e8:	ldr	s0, [x22, #4]
  40d7ec:	fcmpe	s1, s0
  40d7f0:	b.pl	40d828 <__fxstatat@plt+0xadd8>  // b.nfrst
  40d7f4:	fmov	s3, #1.000000000000000000e+00
  40d7f8:	fcmpe	s0, s3
  40d7fc:	b.hi	40d828 <__fxstatat@plt+0xadd8>  // b.pmore
  40d800:	fcmpe	s2, s1
  40d804:	b.le	40d828 <__fxstatat@plt+0xadd8>
  40d808:	ldrb	w0, [x22, #16]
  40d80c:	cbnz	w0, 40d880 <__fxstatat@plt+0xae30>
  40d810:	ucvtf	s0, x19
  40d814:	mov	w0, #0x5f800000            	// #1602224128
  40d818:	fmov	s1, w0
  40d81c:	fdiv	s0, s0, s2
  40d820:	fcmpe	s0, s1
  40d824:	b.lt	40d87c <__fxstatat@plt+0xae2c>  // b.tstop
  40d828:	mov	x0, x21
  40d82c:	mov	x21, #0x0                   	// #0
  40d830:	bl	402840 <free@plt>
  40d834:	mov	x0, x21
  40d838:	ldp	x19, x20, [sp, #16]
  40d83c:	ldp	x21, x22, [sp, #32]
  40d840:	ldp	x23, x24, [sp, #48]
  40d844:	ldp	x29, x30, [sp], #64
  40d848:	ret
  40d84c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40d850:	add	x0, x0, #0xc00
  40d854:	str	x0, [x21, #40]
  40d858:	ucvtf	s0, x19
  40d85c:	mov	w0, #0xcccd                	// #52429
  40d860:	movk	w0, #0x3f4c, lsl #16
  40d864:	fmov	s2, w0
  40d868:	mov	w0, #0x5f800000            	// #1602224128
  40d86c:	fmov	s1, w0
  40d870:	fdiv	s0, s0, s2
  40d874:	fcmpe	s0, s1
  40d878:	b.ge	40d828 <__fxstatat@plt+0xadd8>  // b.tcont
  40d87c:	fcvtzu	x19, s0
  40d880:	cmp	x19, #0xa
  40d884:	mov	x0, #0xa                   	// #10
  40d888:	csel	x19, x19, x0, cs  // cs = hs, nlast
  40d88c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40d890:	orr	x19, x19, #0x1
  40d894:	movk	x4, #0xaaab
  40d898:	cmn	x19, #0x1
  40d89c:	b.eq	40d828 <__fxstatat@plt+0xadd8>  // b.none
  40d8a0:	umulh	x1, x19, x4
  40d8a4:	cmp	x19, #0x9
  40d8a8:	and	x0, x1, #0xfffffffffffffffe
  40d8ac:	add	x1, x0, x1, lsr #1
  40d8b0:	sub	x1, x19, x1
  40d8b4:	b.ls	40d8ec <__fxstatat@plt+0xae9c>  // b.plast
  40d8b8:	cbz	x1, 40d8f0 <__fxstatat@plt+0xaea0>
  40d8bc:	mov	x3, #0x10                  	// #16
  40d8c0:	mov	x2, #0x9                   	// #9
  40d8c4:	mov	x0, #0x3                   	// #3
  40d8c8:	b	40d8d0 <__fxstatat@plt+0xae80>
  40d8cc:	cbz	x1, 40d8f0 <__fxstatat@plt+0xaea0>
  40d8d0:	add	x0, x0, #0x2
  40d8d4:	add	x2, x2, x3
  40d8d8:	cmp	x2, x19
  40d8dc:	add	x3, x3, #0x8
  40d8e0:	udiv	x1, x19, x0
  40d8e4:	msub	x1, x1, x0, x19
  40d8e8:	b.cc	40d8cc <__fxstatat@plt+0xae7c>  // b.lo, b.ul, b.last
  40d8ec:	cbnz	x1, 40d900 <__fxstatat@plt+0xaeb0>
  40d8f0:	add	x19, x19, #0x2
  40d8f4:	cmn	x19, #0x1
  40d8f8:	b.ne	40d8a0 <__fxstatat@plt+0xae50>  // b.any
  40d8fc:	b	40d828 <__fxstatat@plt+0xadd8>
  40d900:	cmp	xzr, x19, lsr #61
  40d904:	cset	x0, ne  // ne = any
  40d908:	tbnz	x19, #60, 40d828 <__fxstatat@plt+0xadd8>
  40d90c:	cbnz	x0, 40d828 <__fxstatat@plt+0xadd8>
  40d910:	str	x19, [x21, #16]
  40d914:	mov	x0, x19
  40d918:	mov	x1, #0x10                  	// #16
  40d91c:	bl	4026c0 <calloc@plt>
  40d920:	str	x0, [x21]
  40d924:	cbz	x0, 40d828 <__fxstatat@plt+0xadd8>
  40d928:	add	x19, x0, x19, lsl #4
  40d92c:	str	x19, [x21, #8]
  40d930:	stp	xzr, xzr, [x21, #24]
  40d934:	mov	x0, x21
  40d938:	stp	x23, x24, [x21, #48]
  40d93c:	stp	x20, xzr, [x21, #64]
  40d940:	ldp	x19, x20, [sp, #16]
  40d944:	ldp	x21, x22, [sp, #32]
  40d948:	ldp	x23, x24, [sp, #48]
  40d94c:	ldp	x29, x30, [sp], #64
  40d950:	ret
  40d954:	nop
  40d958:	stp	x29, x30, [sp, #-48]!
  40d95c:	mov	x29, sp
  40d960:	ldr	x1, [x0, #8]
  40d964:	str	x21, [sp, #32]
  40d968:	ldr	x21, [x0]
  40d96c:	stp	x19, x20, [sp, #16]
  40d970:	mov	x20, x0
  40d974:	cmp	x21, x1
  40d978:	b.cc	40d98c <__fxstatat@plt+0xaf3c>  // b.lo, b.ul, b.last
  40d97c:	b	40d9e4 <__fxstatat@plt+0xaf94>
  40d980:	add	x21, x21, #0x10
  40d984:	cmp	x1, x21
  40d988:	b.ls	40d9e4 <__fxstatat@plt+0xaf94>  // b.plast
  40d98c:	ldr	x0, [x21]
  40d990:	cbz	x0, 40d980 <__fxstatat@plt+0xaf30>
  40d994:	ldr	x19, [x21, #8]
  40d998:	ldr	x1, [x20, #64]
  40d99c:	cbz	x19, 40d9c4 <__fxstatat@plt+0xaf74>
  40d9a0:	cbz	x1, 40d9f8 <__fxstatat@plt+0xafa8>
  40d9a4:	ldr	x0, [x19]
  40d9a8:	blr	x1
  40d9ac:	ldr	x2, [x19, #8]
  40d9b0:	ldp	x1, x0, [x20, #64]
  40d9b4:	stp	xzr, x0, [x19]
  40d9b8:	str	x19, [x20, #72]
  40d9bc:	mov	x19, x2
  40d9c0:	cbnz	x2, 40d9a0 <__fxstatat@plt+0xaf50>
  40d9c4:	cbz	x1, 40d9d0 <__fxstatat@plt+0xaf80>
  40d9c8:	ldr	x0, [x21]
  40d9cc:	blr	x1
  40d9d0:	stp	xzr, xzr, [x21]
  40d9d4:	add	x21, x21, #0x10
  40d9d8:	ldr	x1, [x20, #8]
  40d9dc:	cmp	x1, x21
  40d9e0:	b.hi	40d98c <__fxstatat@plt+0xaf3c>  // b.pmore
  40d9e4:	stp	xzr, xzr, [x20, #24]
  40d9e8:	ldp	x19, x20, [sp, #16]
  40d9ec:	ldr	x21, [sp, #32]
  40d9f0:	ldp	x29, x30, [sp], #48
  40d9f4:	ret
  40d9f8:	ldr	x0, [x20, #72]
  40d9fc:	mov	x1, x19
  40da00:	str	xzr, [x19]
  40da04:	ldr	x19, [x19, #8]
  40da08:	str	x0, [x1, #8]
  40da0c:	str	x1, [x20, #72]
  40da10:	mov	x0, x1
  40da14:	cbnz	x19, 40d9fc <__fxstatat@plt+0xafac>
  40da18:	b	40d9d0 <__fxstatat@plt+0xaf80>
  40da1c:	nop
  40da20:	stp	x29, x30, [sp, #-48]!
  40da24:	mov	x29, sp
  40da28:	str	x21, [sp, #32]
  40da2c:	mov	x21, x0
  40da30:	ldr	x0, [x0, #64]
  40da34:	stp	x19, x20, [sp, #16]
  40da38:	ldp	x20, x1, [x21]
  40da3c:	cbz	x0, 40da98 <__fxstatat@plt+0xb048>
  40da40:	ldr	x0, [x21, #32]
  40da44:	cbz	x0, 40da98 <__fxstatat@plt+0xb048>
  40da48:	cmp	x20, x1
  40da4c:	b.cc	40da60 <__fxstatat@plt+0xb010>  // b.lo, b.ul, b.last
  40da50:	b	40dac8 <__fxstatat@plt+0xb078>
  40da54:	add	x20, x20, #0x10
  40da58:	cmp	x20, x1
  40da5c:	b.cs	40da94 <__fxstatat@plt+0xb044>  // b.hs, b.nlast
  40da60:	ldr	x0, [x20]
  40da64:	cbz	x0, 40da54 <__fxstatat@plt+0xb004>
  40da68:	mov	x19, x20
  40da6c:	b	40da74 <__fxstatat@plt+0xb024>
  40da70:	ldr	x0, [x19]
  40da74:	ldr	x1, [x21, #64]
  40da78:	blr	x1
  40da7c:	ldr	x19, [x19, #8]
  40da80:	cbnz	x19, 40da70 <__fxstatat@plt+0xb020>
  40da84:	ldr	x1, [x21, #8]
  40da88:	add	x20, x20, #0x10
  40da8c:	cmp	x20, x1
  40da90:	b.cc	40da60 <__fxstatat@plt+0xb010>  // b.lo, b.ul, b.last
  40da94:	ldr	x20, [x21]
  40da98:	cmp	x1, x20
  40da9c:	b.ls	40dac8 <__fxstatat@plt+0xb078>  // b.plast
  40daa0:	ldr	x19, [x20, #8]
  40daa4:	cbz	x19, 40dabc <__fxstatat@plt+0xb06c>
  40daa8:	mov	x0, x19
  40daac:	ldr	x19, [x19, #8]
  40dab0:	bl	402840 <free@plt>
  40dab4:	cbnz	x19, 40daa8 <__fxstatat@plt+0xb058>
  40dab8:	ldr	x1, [x21, #8]
  40dabc:	add	x20, x20, #0x10
  40dac0:	cmp	x20, x1
  40dac4:	b.cc	40daa0 <__fxstatat@plt+0xb050>  // b.lo, b.ul, b.last
  40dac8:	ldr	x19, [x21, #72]
  40dacc:	cbz	x19, 40dae0 <__fxstatat@plt+0xb090>
  40dad0:	mov	x0, x19
  40dad4:	ldr	x19, [x19, #8]
  40dad8:	bl	402840 <free@plt>
  40dadc:	cbnz	x19, 40dad0 <__fxstatat@plt+0xb080>
  40dae0:	ldr	x0, [x21]
  40dae4:	bl	402840 <free@plt>
  40dae8:	mov	x0, x21
  40daec:	ldp	x19, x20, [sp, #16]
  40daf0:	ldr	x21, [sp, #32]
  40daf4:	ldp	x29, x30, [sp], #48
  40daf8:	b	402840 <free@plt>
  40dafc:	nop
  40db00:	stp	x29, x30, [sp, #-128]!
  40db04:	mov	x29, sp
  40db08:	str	x21, [sp, #32]
  40db0c:	ldr	x21, [x0, #40]
  40db10:	stp	x19, x20, [sp, #16]
  40db14:	mov	x20, x0
  40db18:	ldrb	w0, [x21, #16]
  40db1c:	cbnz	w0, 40db40 <__fxstatat@plt+0xb0f0>
  40db20:	ucvtf	s0, x1
  40db24:	ldr	s2, [x21, #8]
  40db28:	mov	w0, #0x5f800000            	// #1602224128
  40db2c:	fmov	s1, w0
  40db30:	fdiv	s0, s0, s2
  40db34:	fcmpe	s0, s1
  40db38:	fcvtzu	x1, s0
  40db3c:	b.ge	40dbbc <__fxstatat@plt+0xb16c>  // b.tcont
  40db40:	cmp	x1, #0xa
  40db44:	mov	x19, #0xa                   	// #10
  40db48:	csel	x1, x1, x19, cs  // cs = hs, nlast
  40db4c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40db50:	orr	x19, x1, #0x1
  40db54:	movk	x4, #0xaaab
  40db58:	cmn	x19, #0x1
  40db5c:	b.eq	40dbbc <__fxstatat@plt+0xb16c>  // b.none
  40db60:	umulh	x1, x19, x4
  40db64:	cmp	x19, #0x9
  40db68:	and	x0, x1, #0xfffffffffffffffe
  40db6c:	add	x1, x0, x1, lsr #1
  40db70:	sub	x1, x19, x1
  40db74:	b.ls	40dbac <__fxstatat@plt+0xb15c>  // b.plast
  40db78:	cbz	x1, 40dbb0 <__fxstatat@plt+0xb160>
  40db7c:	mov	x3, #0x10                  	// #16
  40db80:	mov	x2, #0x9                   	// #9
  40db84:	mov	x0, #0x3                   	// #3
  40db88:	b	40db94 <__fxstatat@plt+0xb144>
  40db8c:	add	x3, x3, #0x8
  40db90:	cbz	x1, 40dbb0 <__fxstatat@plt+0xb160>
  40db94:	add	x0, x0, #0x2
  40db98:	add	x2, x2, x3
  40db9c:	cmp	x2, x19
  40dba0:	udiv	x1, x19, x0
  40dba4:	msub	x1, x1, x0, x19
  40dba8:	b.cc	40db8c <__fxstatat@plt+0xb13c>  // b.lo, b.ul, b.last
  40dbac:	cbnz	x1, 40dbd4 <__fxstatat@plt+0xb184>
  40dbb0:	add	x19, x19, #0x2
  40dbb4:	cmn	x19, #0x1
  40dbb8:	b.ne	40db60 <__fxstatat@plt+0xb110>  // b.any
  40dbbc:	mov	w19, #0x0                   	// #0
  40dbc0:	mov	w0, w19
  40dbc4:	ldp	x19, x20, [sp, #16]
  40dbc8:	ldr	x21, [sp, #32]
  40dbcc:	ldp	x29, x30, [sp], #128
  40dbd0:	ret
  40dbd4:	cmp	xzr, x19, lsr #61
  40dbd8:	cset	x0, ne  // ne = any
  40dbdc:	tbnz	x19, #60, 40dbbc <__fxstatat@plt+0xb16c>
  40dbe0:	cbnz	x0, 40dbbc <__fxstatat@plt+0xb16c>
  40dbe4:	ldr	x0, [x20, #16]
  40dbe8:	cmp	x0, x19
  40dbec:	b.eq	40dc90 <__fxstatat@plt+0xb240>  // b.none
  40dbf0:	mov	x0, x19
  40dbf4:	mov	x1, #0x10                  	// #16
  40dbf8:	bl	4026c0 <calloc@plt>
  40dbfc:	str	x0, [sp, #48]
  40dc00:	cbz	x0, 40dbbc <__fxstatat@plt+0xb16c>
  40dc04:	ldp	x5, x4, [x20, #64]
  40dc08:	add	x3, x0, x19, lsl #4
  40dc0c:	ldr	q0, [x20, #48]
  40dc10:	add	x0, sp, #0x30
  40dc14:	mov	x1, x20
  40dc18:	mov	w2, #0x0                   	// #0
  40dc1c:	stp	x3, x19, [sp, #56]
  40dc20:	stp	xzr, xzr, [sp, #72]
  40dc24:	str	x21, [sp, #88]
  40dc28:	str	q0, [sp, #96]
  40dc2c:	stp	x5, x4, [sp, #112]
  40dc30:	bl	40d0c8 <__fxstatat@plt+0xa678>
  40dc34:	ands	w19, w0, #0xff
  40dc38:	b.ne	40dca8 <__fxstatat@plt+0xb258>  // b.any
  40dc3c:	ldr	x0, [sp, #120]
  40dc40:	str	x0, [x20, #72]
  40dc44:	add	x1, sp, #0x30
  40dc48:	mov	x0, x20
  40dc4c:	mov	w2, #0x1                   	// #1
  40dc50:	bl	40d0c8 <__fxstatat@plt+0xa678>
  40dc54:	tst	w0, #0xff
  40dc58:	b.eq	40dcd4 <__fxstatat@plt+0xb284>  // b.none
  40dc5c:	add	x1, sp, #0x30
  40dc60:	mov	x0, x20
  40dc64:	mov	w2, #0x0                   	// #0
  40dc68:	bl	40d0c8 <__fxstatat@plt+0xa678>
  40dc6c:	tst	w0, #0xff
  40dc70:	b.eq	40dcd4 <__fxstatat@plt+0xb284>  // b.none
  40dc74:	ldr	x0, [sp, #48]
  40dc78:	bl	402840 <free@plt>
  40dc7c:	mov	w0, w19
  40dc80:	ldp	x19, x20, [sp, #16]
  40dc84:	ldr	x21, [sp, #32]
  40dc88:	ldp	x29, x30, [sp], #128
  40dc8c:	ret
  40dc90:	mov	w19, #0x1                   	// #1
  40dc94:	mov	w0, w19
  40dc98:	ldp	x19, x20, [sp, #16]
  40dc9c:	ldr	x21, [sp, #32]
  40dca0:	ldp	x29, x30, [sp], #128
  40dca4:	ret
  40dca8:	ldr	x0, [x20]
  40dcac:	bl	402840 <free@plt>
  40dcb0:	ldp	q1, q0, [sp, #48]
  40dcb4:	ldr	x0, [sp, #120]
  40dcb8:	str	x0, [x20, #72]
  40dcbc:	stp	q1, q0, [x20]
  40dcc0:	mov	w0, w19
  40dcc4:	ldp	x19, x20, [sp, #16]
  40dcc8:	ldr	x21, [sp, #32]
  40dccc:	ldp	x29, x30, [sp], #128
  40dcd0:	ret
  40dcd4:	bl	402760 <abort@plt>
  40dcd8:	stp	x29, x30, [sp, #-64]!
  40dcdc:	mov	x29, sp
  40dce0:	stp	x19, x20, [sp, #16]
  40dce4:	str	x21, [sp, #32]
  40dce8:	cbz	x1, 40de58 <__fxstatat@plt+0xb408>
  40dcec:	mov	w3, #0x0                   	// #0
  40dcf0:	mov	x21, x2
  40dcf4:	mov	x19, x0
  40dcf8:	mov	x20, x1
  40dcfc:	add	x2, sp, #0x38
  40dd00:	bl	40cf78 <__fxstatat@plt+0xa528>
  40dd04:	mov	x3, x0
  40dd08:	cbz	x0, 40dd28 <__fxstatat@plt+0xb2d8>
  40dd0c:	mov	w0, #0x0                   	// #0
  40dd10:	cbz	x21, 40dd18 <__fxstatat@plt+0xb2c8>
  40dd14:	str	x3, [x21]
  40dd18:	ldp	x19, x20, [sp, #16]
  40dd1c:	ldr	x21, [sp, #32]
  40dd20:	ldp	x29, x30, [sp], #64
  40dd24:	ret
  40dd28:	ldr	x0, [x19, #16]
  40dd2c:	ldr	x1, [x19, #40]
  40dd30:	ucvtf	s0, x0
  40dd34:	ldr	x0, [x19, #24]
  40dd38:	ldr	s2, [x1, #8]
  40dd3c:	ucvtf	s1, x0
  40dd40:	fmul	s3, s2, s0
  40dd44:	fcmpe	s1, s3
  40dd48:	b.gt	40dd94 <__fxstatat@plt+0xb344>
  40dd4c:	ldr	x21, [sp, #56]
  40dd50:	ldr	x0, [x21]
  40dd54:	cbz	x0, 40de90 <__fxstatat@plt+0xb440>
  40dd58:	ldr	x0, [x19, #72]
  40dd5c:	cbz	x0, 40debc <__fxstatat@plt+0xb46c>
  40dd60:	ldr	x1, [x0, #8]
  40dd64:	str	x1, [x19, #72]
  40dd68:	ldr	x2, [x21, #8]
  40dd6c:	ldr	x1, [x19, #32]
  40dd70:	stp	x20, x2, [x0]
  40dd74:	str	x0, [x21, #8]
  40dd78:	add	x1, x1, #0x1
  40dd7c:	str	x1, [x19, #32]
  40dd80:	mov	w0, #0x1                   	// #1
  40dd84:	ldp	x19, x20, [sp, #16]
  40dd88:	ldr	x21, [sp, #32]
  40dd8c:	ldp	x29, x30, [sp], #64
  40dd90:	ret
  40dd94:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40dd98:	add	x2, x2, #0xc00
  40dd9c:	cmp	x1, x2
  40dda0:	b.eq	40dedc <__fxstatat@plt+0xb48c>  // b.none
  40dda4:	mov	w0, #0xcccd                	// #52429
  40dda8:	movk	w0, #0x3dcc, lsl #16
  40ddac:	fmov	s3, w0
  40ddb0:	fcmpe	s2, s3
  40ddb4:	b.le	40de5c <__fxstatat@plt+0xb40c>
  40ddb8:	mov	w0, #0x6666                	// #26214
  40ddbc:	movk	w0, #0x3f66, lsl #16
  40ddc0:	fmov	s4, w0
  40ddc4:	fcmpe	s2, s4
  40ddc8:	b.pl	40de5c <__fxstatat@plt+0xb40c>  // b.nfrst
  40ddcc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40ddd0:	ldr	s5, [x1, #12]
  40ddd4:	ldr	s4, [x0, #3040]
  40ddd8:	fcmpe	s5, s4
  40dddc:	b.le	40de5c <__fxstatat@plt+0xb40c>
  40dde0:	ldr	s4, [x1]
  40dde4:	fcmpe	s4, #0.0
  40dde8:	b.lt	40de5c <__fxstatat@plt+0xb40c>  // b.tstop
  40ddec:	fadd	s3, s4, s3
  40ddf0:	ldr	s4, [x1, #4]
  40ddf4:	fcmpe	s3, s4
  40ddf8:	b.pl	40de5c <__fxstatat@plt+0xb40c>  // b.nfrst
  40ddfc:	fmov	s6, #1.000000000000000000e+00
  40de00:	fcmpe	s4, s6
  40de04:	b.hi	40de5c <__fxstatat@plt+0xb40c>  // b.pmore
  40de08:	fcmpe	s2, s3
  40de0c:	b.le	40de5c <__fxstatat@plt+0xb40c>
  40de10:	ldrb	w0, [x1, #16]
  40de14:	fmul	s0, s0, s5
  40de18:	cbz	w0, 40de88 <__fxstatat@plt+0xb438>
  40de1c:	mov	w0, #0x5f800000            	// #1602224128
  40de20:	fmov	s1, w0
  40de24:	fcmpe	s0, s1
  40de28:	b.ge	40dec8 <__fxstatat@plt+0xb478>  // b.tcont
  40de2c:	fcvtzu	x1, s0
  40de30:	mov	x0, x19
  40de34:	bl	40db00 <__fxstatat@plt+0xb0b0>
  40de38:	tst	w0, #0xff
  40de3c:	b.eq	40dec8 <__fxstatat@plt+0xb478>  // b.none
  40de40:	add	x2, sp, #0x38
  40de44:	mov	x1, x20
  40de48:	mov	x0, x19
  40de4c:	mov	w3, #0x0                   	// #0
  40de50:	bl	40cf78 <__fxstatat@plt+0xa528>
  40de54:	cbz	x0, 40dd4c <__fxstatat@plt+0xb2fc>
  40de58:	bl	402760 <abort@plt>
  40de5c:	mov	w0, #0xcccd                	// #52429
  40de60:	str	x2, [x19, #40]
  40de64:	movk	w0, #0x3f4c, lsl #16
  40de68:	fmov	s2, w0
  40de6c:	fmul	s3, s0, s2
  40de70:	fcmpe	s1, s3
  40de74:	b.le	40dd4c <__fxstatat@plt+0xb2fc>
  40de78:	mov	w0, #0xfdf4                	// #65012
  40de7c:	movk	w0, #0x3fb4, lsl #16
  40de80:	fmov	s1, w0
  40de84:	fmul	s0, s0, s1
  40de88:	fmul	s0, s0, s2
  40de8c:	b	40de1c <__fxstatat@plt+0xb3cc>
  40de90:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40de94:	ldur	q0, [x19, #24]
  40de98:	str	x20, [x21]
  40de9c:	ldr	q1, [x0, #3056]
  40dea0:	mov	w0, #0x1                   	// #1
  40dea4:	ldr	x21, [sp, #32]
  40dea8:	add	v0.2d, v0.2d, v1.2d
  40deac:	stur	q0, [x19, #24]
  40deb0:	ldp	x19, x20, [sp, #16]
  40deb4:	ldp	x29, x30, [sp], #64
  40deb8:	ret
  40debc:	mov	x0, #0x10                  	// #16
  40dec0:	bl	4025f0 <malloc@plt>
  40dec4:	cbnz	x0, 40dd68 <__fxstatat@plt+0xb318>
  40dec8:	mov	w0, #0xffffffff            	// #-1
  40decc:	ldp	x19, x20, [sp, #16]
  40ded0:	ldr	x21, [sp, #32]
  40ded4:	ldp	x29, x30, [sp], #64
  40ded8:	ret
  40dedc:	mov	w0, #0xfdf4                	// #65012
  40dee0:	movk	w0, #0x3fb4, lsl #16
  40dee4:	fmov	s1, w0
  40dee8:	mov	w0, #0xcccd                	// #52429
  40deec:	fmul	s0, s0, s1
  40def0:	movk	w0, #0x3f4c, lsl #16
  40def4:	fmov	s2, w0
  40def8:	fmul	s0, s0, s2
  40defc:	b	40de1c <__fxstatat@plt+0xb3cc>
  40df00:	stp	x29, x30, [sp, #-64]!
  40df04:	mov	x29, sp
  40df08:	stp	x19, x20, [sp, #16]
  40df0c:	stp	x21, x22, [sp, #32]
  40df10:	cbz	x1, 40e07c <__fxstatat@plt+0xb62c>
  40df14:	mov	x19, x0
  40df18:	mov	x21, x1
  40df1c:	add	x2, sp, #0x38
  40df20:	mov	w3, #0x0                   	// #0
  40df24:	bl	40cf78 <__fxstatat@plt+0xa528>
  40df28:	mov	x20, x0
  40df2c:	cbz	x0, 40df44 <__fxstatat@plt+0xb4f4>
  40df30:	mov	x0, x20
  40df34:	ldp	x19, x20, [sp, #16]
  40df38:	ldp	x21, x22, [sp, #32]
  40df3c:	ldp	x29, x30, [sp], #64
  40df40:	ret
  40df44:	ldr	x0, [x19, #16]
  40df48:	ldr	x1, [x19, #40]
  40df4c:	ucvtf	s0, x0
  40df50:	ldr	x0, [x19, #24]
  40df54:	ldr	s2, [x1, #8]
  40df58:	ucvtf	s1, x0
  40df5c:	fmul	s3, s2, s0
  40df60:	fcmpe	s1, s3
  40df64:	b.gt	40dfb4 <__fxstatat@plt+0xb564>
  40df68:	ldr	x22, [sp, #56]
  40df6c:	ldr	x0, [x22]
  40df70:	cbz	x0, 40e0b4 <__fxstatat@plt+0xb664>
  40df74:	ldr	x0, [x19, #72]
  40df78:	cbz	x0, 40e0e4 <__fxstatat@plt+0xb694>
  40df7c:	ldr	x1, [x0, #8]
  40df80:	str	x1, [x19, #72]
  40df84:	ldr	x2, [x22, #8]
  40df88:	mov	x20, x21
  40df8c:	ldr	x1, [x19, #32]
  40df90:	stp	x21, x2, [x0]
  40df94:	str	x0, [x22, #8]
  40df98:	add	x0, x1, #0x1
  40df9c:	str	x0, [x19, #32]
  40dfa0:	mov	x0, x20
  40dfa4:	ldp	x19, x20, [sp, #16]
  40dfa8:	ldp	x21, x22, [sp, #32]
  40dfac:	ldp	x29, x30, [sp], #64
  40dfb0:	ret
  40dfb4:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40dfb8:	add	x2, x2, #0xc00
  40dfbc:	cmp	x1, x2
  40dfc0:	b.eq	40e0f4 <__fxstatat@plt+0xb6a4>  // b.none
  40dfc4:	mov	w0, #0xcccd                	// #52429
  40dfc8:	movk	w0, #0x3dcc, lsl #16
  40dfcc:	fmov	s3, w0
  40dfd0:	fcmpe	s2, s3
  40dfd4:	b.le	40e080 <__fxstatat@plt+0xb630>
  40dfd8:	mov	w0, #0x6666                	// #26214
  40dfdc:	movk	w0, #0x3f66, lsl #16
  40dfe0:	fmov	s4, w0
  40dfe4:	fcmpe	s2, s4
  40dfe8:	b.pl	40e080 <__fxstatat@plt+0xb630>  // b.nfrst
  40dfec:	mov	w0, #0xcccd                	// #52429
  40dff0:	ldr	s5, [x1, #12]
  40dff4:	movk	w0, #0x3f8c, lsl #16
  40dff8:	fmov	s4, w0
  40dffc:	fcmpe	s5, s4
  40e000:	b.le	40e080 <__fxstatat@plt+0xb630>
  40e004:	ldr	s4, [x1]
  40e008:	fcmpe	s4, #0.0
  40e00c:	b.lt	40e080 <__fxstatat@plt+0xb630>  // b.tstop
  40e010:	fadd	s3, s4, s3
  40e014:	ldr	s4, [x1, #4]
  40e018:	fcmpe	s3, s4
  40e01c:	b.pl	40e080 <__fxstatat@plt+0xb630>  // b.nfrst
  40e020:	fmov	s6, #1.000000000000000000e+00
  40e024:	fcmpe	s4, s6
  40e028:	b.hi	40e080 <__fxstatat@plt+0xb630>  // b.pmore
  40e02c:	fcmpe	s2, s3
  40e030:	b.le	40e080 <__fxstatat@plt+0xb630>
  40e034:	ldrb	w0, [x1, #16]
  40e038:	fmul	s0, s0, s5
  40e03c:	cbz	w0, 40e0ac <__fxstatat@plt+0xb65c>
  40e040:	mov	w0, #0x5f800000            	// #1602224128
  40e044:	fmov	s1, w0
  40e048:	fcmpe	s0, s1
  40e04c:	b.ge	40df30 <__fxstatat@plt+0xb4e0>  // b.tcont
  40e050:	fcvtzu	x1, s0
  40e054:	mov	x0, x19
  40e058:	bl	40db00 <__fxstatat@plt+0xb0b0>
  40e05c:	tst	w0, #0xff
  40e060:	b.eq	40df30 <__fxstatat@plt+0xb4e0>  // b.none
  40e064:	add	x2, sp, #0x38
  40e068:	mov	x1, x21
  40e06c:	mov	x0, x19
  40e070:	mov	w3, #0x0                   	// #0
  40e074:	bl	40cf78 <__fxstatat@plt+0xa528>
  40e078:	cbz	x0, 40df68 <__fxstatat@plt+0xb518>
  40e07c:	bl	402760 <abort@plt>
  40e080:	mov	w0, #0xcccd                	// #52429
  40e084:	str	x2, [x19, #40]
  40e088:	movk	w0, #0x3f4c, lsl #16
  40e08c:	fmov	s2, w0
  40e090:	fmul	s3, s0, s2
  40e094:	fcmpe	s1, s3
  40e098:	b.le	40df68 <__fxstatat@plt+0xb518>
  40e09c:	mov	w0, #0xfdf4                	// #65012
  40e0a0:	movk	w0, #0x3fb4, lsl #16
  40e0a4:	fmov	s1, w0
  40e0a8:	fmul	s0, s0, s1
  40e0ac:	fmul	s0, s0, s2
  40e0b0:	b	40e040 <__fxstatat@plt+0xb5f0>
  40e0b4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40e0b8:	mov	x20, x21
  40e0bc:	ldur	q0, [x19, #24]
  40e0c0:	str	x21, [x22]
  40e0c4:	ldr	q1, [x0, #3056]
  40e0c8:	mov	x0, x20
  40e0cc:	ldp	x21, x22, [sp, #32]
  40e0d0:	add	v0.2d, v0.2d, v1.2d
  40e0d4:	stur	q0, [x19, #24]
  40e0d8:	ldp	x19, x20, [sp, #16]
  40e0dc:	ldp	x29, x30, [sp], #64
  40e0e0:	ret
  40e0e4:	mov	x0, #0x10                  	// #16
  40e0e8:	bl	4025f0 <malloc@plt>
  40e0ec:	cbz	x0, 40df30 <__fxstatat@plt+0xb4e0>
  40e0f0:	b	40df84 <__fxstatat@plt+0xb534>
  40e0f4:	mov	w0, #0xfdf4                	// #65012
  40e0f8:	movk	w0, #0x3fb4, lsl #16
  40e0fc:	fmov	s1, w0
  40e100:	mov	w0, #0xcccd                	// #52429
  40e104:	fmul	s0, s0, s1
  40e108:	movk	w0, #0x3f4c, lsl #16
  40e10c:	fmov	s2, w0
  40e110:	fmul	s0, s0, s2
  40e114:	b	40e040 <__fxstatat@plt+0xb5f0>
  40e118:	stp	x29, x30, [sp, #-64]!
  40e11c:	mov	w3, #0x1                   	// #1
  40e120:	mov	x29, sp
  40e124:	add	x2, sp, #0x38
  40e128:	stp	x19, x20, [sp, #16]
  40e12c:	mov	x19, x0
  40e130:	bl	40cf78 <__fxstatat@plt+0xa528>
  40e134:	mov	x20, x0
  40e138:	cbz	x0, 40e154 <__fxstatat@plt+0xb704>
  40e13c:	ldr	x1, [sp, #56]
  40e140:	ldr	x0, [x19, #32]
  40e144:	ldr	x1, [x1]
  40e148:	sub	x0, x0, #0x1
  40e14c:	str	x0, [x19, #32]
  40e150:	cbz	x1, 40e164 <__fxstatat@plt+0xb714>
  40e154:	mov	x0, x20
  40e158:	ldp	x19, x20, [sp, #16]
  40e15c:	ldp	x29, x30, [sp], #64
  40e160:	ret
  40e164:	ldr	x0, [x19, #16]
  40e168:	ldr	x1, [x19, #40]
  40e16c:	ucvtf	s1, x0
  40e170:	ldr	x0, [x19, #24]
  40e174:	ldr	s2, [x1]
  40e178:	sub	x0, x0, #0x1
  40e17c:	str	x0, [x19, #24]
  40e180:	fmul	s3, s2, s1
  40e184:	ucvtf	s0, x0
  40e188:	fcmpe	s0, s3
  40e18c:	b.pl	40e154 <__fxstatat@plt+0xb704>  // b.nfrst
  40e190:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40e194:	add	x0, x0, #0xc00
  40e198:	cmp	x1, x0
  40e19c:	b.eq	40e278 <__fxstatat@plt+0xb828>  // b.none
  40e1a0:	mov	w2, #0xcccd                	// #52429
  40e1a4:	ldr	s3, [x1, #8]
  40e1a8:	movk	w2, #0x3dcc, lsl #16
  40e1ac:	fmov	s4, w2
  40e1b0:	fcmpe	s3, s4
  40e1b4:	b.le	40e264 <__fxstatat@plt+0xb814>
  40e1b8:	mov	w2, #0x6666                	// #26214
  40e1bc:	movk	w2, #0x3f66, lsl #16
  40e1c0:	fmov	s5, w2
  40e1c4:	fcmpe	s3, s5
  40e1c8:	b.pl	40e264 <__fxstatat@plt+0xb814>  // b.nfrst
  40e1cc:	mov	w2, #0xcccd                	// #52429
  40e1d0:	ldr	s6, [x1, #12]
  40e1d4:	movk	w2, #0x3f8c, lsl #16
  40e1d8:	fmov	s5, w2
  40e1dc:	fcmpe	s6, s5
  40e1e0:	b.le	40e264 <__fxstatat@plt+0xb814>
  40e1e4:	fcmpe	s2, #0.0
  40e1e8:	b.lt	40e264 <__fxstatat@plt+0xb814>  // b.tstop
  40e1ec:	fadd	s2, s2, s4
  40e1f0:	ldr	s4, [x1, #4]
  40e1f4:	fcmpe	s2, s4
  40e1f8:	b.pl	40e264 <__fxstatat@plt+0xb814>  // b.nfrst
  40e1fc:	fmov	s5, #1.000000000000000000e+00
  40e200:	fcmpe	s4, s5
  40e204:	b.hi	40e264 <__fxstatat@plt+0xb814>  // b.pmore
  40e208:	fcmpe	s3, s2
  40e20c:	b.le	40e264 <__fxstatat@plt+0xb814>
  40e210:	ldrb	w0, [x1, #16]
  40e214:	fmul	s1, s1, s4
  40e218:	cbnz	w0, 40e224 <__fxstatat@plt+0xb7d4>
  40e21c:	nop
  40e220:	fmul	s1, s1, s3
  40e224:	fcvtzu	x1, s1
  40e228:	mov	x0, x19
  40e22c:	bl	40db00 <__fxstatat@plt+0xb0b0>
  40e230:	tst	w0, #0xff
  40e234:	b.ne	40e154 <__fxstatat@plt+0xb704>  // b.any
  40e238:	str	x21, [sp, #32]
  40e23c:	ldr	x21, [x19, #72]
  40e240:	cbz	x21, 40e258 <__fxstatat@plt+0xb808>
  40e244:	nop
  40e248:	mov	x0, x21
  40e24c:	ldr	x21, [x21, #8]
  40e250:	bl	402840 <free@plt>
  40e254:	cbnz	x21, 40e248 <__fxstatat@plt+0xb7f8>
  40e258:	ldr	x21, [sp, #32]
  40e25c:	str	xzr, [x19, #72]
  40e260:	b	40e154 <__fxstatat@plt+0xb704>
  40e264:	movi	v2.2s, #0x0
  40e268:	str	x0, [x19, #40]
  40e26c:	fmul	s2, s1, s2
  40e270:	fcmpe	s0, s2
  40e274:	b.pl	40e154 <__fxstatat@plt+0xb704>  // b.nfrst
  40e278:	mov	w0, #0xcccd                	// #52429
  40e27c:	movk	w0, #0x3f4c, lsl #16
  40e280:	fmov	s3, w0
  40e284:	b	40e220 <__fxstatat@plt+0xb7d0>
  40e288:	stp	x29, x30, [sp, #-32]!
  40e28c:	mov	x29, sp
  40e290:	stp	x19, x20, [sp, #16]
  40e294:	mov	x20, x0
  40e298:	mov	x19, x1
  40e29c:	ldr	x0, [x0]
  40e2a0:	bl	417828 <_obstack_memory_used@@Base+0x7a8>
  40e2a4:	ldr	x1, [x20, #8]
  40e2a8:	eor	x0, x0, x1
  40e2ac:	udiv	x1, x0, x19
  40e2b0:	msub	x0, x1, x19, x0
  40e2b4:	ldp	x19, x20, [sp, #16]
  40e2b8:	ldp	x29, x30, [sp], #32
  40e2bc:	ret
  40e2c0:	ldr	x0, [x0, #8]
  40e2c4:	udiv	x2, x0, x1
  40e2c8:	msub	x0, x2, x1, x0
  40e2cc:	ret
  40e2d0:	mov	x2, x0
  40e2d4:	ldr	x0, [x1, #8]
  40e2d8:	ldr	x3, [x2, #8]
  40e2dc:	cmp	x3, x0
  40e2e0:	b.eq	40e2ec <__fxstatat@plt+0xb89c>  // b.none
  40e2e4:	mov	w0, #0x0                   	// #0
  40e2e8:	ret
  40e2ec:	ldr	x3, [x1, #16]
  40e2f0:	mov	w0, #0x0                   	// #0
  40e2f4:	ldr	x4, [x2, #16]
  40e2f8:	cmp	x4, x3
  40e2fc:	b.ne	40e2e8 <__fxstatat@plt+0xb898>  // b.any
  40e300:	ldr	x1, [x1]
  40e304:	ldr	x0, [x2]
  40e308:	b	414f80 <__fxstatat@plt+0x12530>
  40e30c:	nop
  40e310:	mov	x2, x0
  40e314:	ldr	x3, [x0, #8]
  40e318:	ldr	x0, [x1, #8]
  40e31c:	cmp	x3, x0
  40e320:	b.eq	40e32c <__fxstatat@plt+0xb8dc>  // b.none
  40e324:	mov	w0, #0x0                   	// #0
  40e328:	ret
  40e32c:	ldr	x3, [x1, #16]
  40e330:	mov	w0, #0x0                   	// #0
  40e334:	ldr	x4, [x2, #16]
  40e338:	cmp	x4, x3
  40e33c:	b.eq	40e344 <__fxstatat@plt+0xb8f4>  // b.none
  40e340:	ret
  40e344:	stp	x29, x30, [sp, #-16]!
  40e348:	mov	x29, sp
  40e34c:	ldr	x1, [x1]
  40e350:	ldr	x0, [x2]
  40e354:	bl	402800 <strcmp@plt>
  40e358:	cmp	w0, #0x0
  40e35c:	cset	w0, eq  // eq = none
  40e360:	ldp	x29, x30, [sp], #16
  40e364:	ret
  40e368:	stp	x29, x30, [sp, #-32]!
  40e36c:	mov	x29, sp
  40e370:	str	x19, [sp, #16]
  40e374:	mov	x19, x0
  40e378:	ldr	x0, [x0]
  40e37c:	bl	402840 <free@plt>
  40e380:	mov	x0, x19
  40e384:	ldr	x19, [sp, #16]
  40e388:	ldp	x29, x30, [sp], #32
  40e38c:	b	402840 <free@plt>
  40e390:	stp	x29, x30, [sp, #-240]!
  40e394:	mov	x29, sp
  40e398:	stp	x23, x24, [sp, #48]
  40e39c:	mov	x23, x0
  40e3a0:	and	w0, w2, #0x3
  40e3a4:	stp	x19, x20, [sp, #16]
  40e3a8:	mov	w19, w2
  40e3ac:	mov	x20, x4
  40e3b0:	stp	x21, x22, [sp, #32]
  40e3b4:	mov	x21, x1
  40e3b8:	stp	x25, x26, [sp, #64]
  40e3bc:	mov	x26, x3
  40e3c0:	stp	x27, x28, [sp, #80]
  40e3c4:	str	w0, [sp, #96]
  40e3c8:	and	w0, w2, #0x20
  40e3cc:	str	w0, [sp, #156]
  40e3d0:	tbnz	w19, #5, 40ea98 <__fxstatat@plt+0xc048>
  40e3d4:	mov	x0, #0x3e8                 	// #1000
  40e3d8:	mov	w25, w0
  40e3dc:	str	x0, [sp, #144]
  40e3e0:	bl	402580 <localeconv@plt>
  40e3e4:	mov	x24, x0
  40e3e8:	ldr	x27, [x0]
  40e3ec:	mov	x0, x27
  40e3f0:	bl	402430 <strlen@plt>
  40e3f4:	mov	x28, x0
  40e3f8:	sub	x0, x0, #0x1
  40e3fc:	cmp	x0, #0xf
  40e400:	b.ls	40e410 <__fxstatat@plt+0xb9c0>  // b.plast
  40e404:	adrp	x27, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40e408:	add	x27, x27, #0x6d0
  40e40c:	mov	x28, #0x1                   	// #1
  40e410:	ldp	x22, x24, [x24, #8]
  40e414:	add	x0, x21, #0x287
  40e418:	str	x0, [sp, #120]
  40e41c:	mov	x0, x22
  40e420:	bl	402430 <strlen@plt>
  40e424:	cmp	x0, #0x10
  40e428:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40e42c:	add	x0, x0, #0x58
  40e430:	csel	x22, x0, x22, hi  // hi = pmore
  40e434:	cmp	x20, x26
  40e438:	b.hi	40e7e8 <__fxstatat@plt+0xbd98>  // b.pmore
  40e43c:	udiv	x0, x26, x20
  40e440:	msub	x1, x0, x20, x26
  40e444:	cbnz	x1, 40e458 <__fxstatat@plt+0xba08>
  40e448:	mul	x4, x23, x0
  40e44c:	udiv	x0, x4, x0
  40e450:	cmp	x0, x23
  40e454:	b.eq	40ec20 <__fxstatat@plt+0xc1d0>  // b.none
  40e458:	mov	x0, x26
  40e45c:	bl	419040 <_obstack_memory_used@@Base+0x1fc0>
  40e460:	mov	x0, x20
  40e464:	str	q0, [sp, #96]
  40e468:	bl	419040 <_obstack_memory_used@@Base+0x1fc0>
  40e46c:	mov	v1.16b, v0.16b
  40e470:	ldr	q2, [sp, #96]
  40e474:	mov	v0.16b, v2.16b
  40e478:	bl	417a10 <_obstack_memory_used@@Base+0x990>
  40e47c:	mov	x0, x23
  40e480:	str	q0, [sp, #96]
  40e484:	bl	419040 <_obstack_memory_used@@Base+0x1fc0>
  40e488:	mov	v1.16b, v0.16b
  40e48c:	ldr	q2, [sp, #96]
  40e490:	mov	v0.16b, v2.16b
  40e494:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40e498:	str	q0, [sp, #96]
  40e49c:	tbz	w19, #4, 40eaa8 <__fxstatat@plt+0xc058>
  40e4a0:	mov	w0, w25
  40e4a4:	bl	418eb8 <_obstack_memory_used@@Base+0x1e38>
  40e4a8:	mov	v1.16b, v0.16b
  40e4ac:	str	q0, [sp, #128]
  40e4b0:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40e4b4:	mov	v4.16b, v0.16b
  40e4b8:	ldr	q0, [sp, #96]
  40e4bc:	mov	v1.16b, v4.16b
  40e4c0:	str	q4, [sp, #160]
  40e4c4:	bl	418448 <_obstack_memory_used@@Base+0x13c8>
  40e4c8:	ldr	q2, [sp, #128]
  40e4cc:	tbnz	w0, #31, 40ef0c <__fxstatat@plt+0xc4bc>
  40e4d0:	ldr	q4, [sp, #160]
  40e4d4:	mov	v0.16b, v2.16b
  40e4d8:	str	q2, [sp, #176]
  40e4dc:	mov	v1.16b, v4.16b
  40e4e0:	str	q4, [sp, #128]
  40e4e4:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40e4e8:	mov	v6.16b, v0.16b
  40e4ec:	ldr	q0, [sp, #96]
  40e4f0:	mov	v1.16b, v6.16b
  40e4f4:	str	q6, [sp, #160]
  40e4f8:	bl	418448 <_obstack_memory_used@@Base+0x13c8>
  40e4fc:	ldr	q4, [sp, #128]
  40e500:	tbnz	w0, #31, 40ef18 <__fxstatat@plt+0xc4c8>
  40e504:	ldr	q6, [sp, #160]
  40e508:	ldr	q2, [sp, #176]
  40e50c:	mov	v1.16b, v6.16b
  40e510:	str	q6, [sp, #128]
  40e514:	mov	v0.16b, v2.16b
  40e518:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40e51c:	mov	v4.16b, v0.16b
  40e520:	ldr	q0, [sp, #96]
  40e524:	mov	v1.16b, v4.16b
  40e528:	str	q4, [sp, #160]
  40e52c:	bl	418448 <_obstack_memory_used@@Base+0x13c8>
  40e530:	ldr	q6, [sp, #128]
  40e534:	tbnz	w0, #31, 40ef28 <__fxstatat@plt+0xc4d8>
  40e538:	ldr	q4, [sp, #160]
  40e53c:	ldr	q2, [sp, #176]
  40e540:	mov	v1.16b, v4.16b
  40e544:	str	q4, [sp, #128]
  40e548:	mov	v0.16b, v2.16b
  40e54c:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40e550:	mov	v6.16b, v0.16b
  40e554:	ldr	q0, [sp, #96]
  40e558:	mov	v1.16b, v6.16b
  40e55c:	str	q6, [sp, #160]
  40e560:	bl	418448 <_obstack_memory_used@@Base+0x13c8>
  40e564:	ldr	q4, [sp, #128]
  40e568:	tbnz	w0, #31, 40ef4c <__fxstatat@plt+0xc4fc>
  40e56c:	ldr	q6, [sp, #160]
  40e570:	ldr	q2, [sp, #176]
  40e574:	mov	v1.16b, v6.16b
  40e578:	str	q6, [sp, #128]
  40e57c:	mov	v0.16b, v2.16b
  40e580:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40e584:	mov	v4.16b, v0.16b
  40e588:	ldr	q0, [sp, #96]
  40e58c:	mov	v1.16b, v4.16b
  40e590:	str	q4, [sp, #160]
  40e594:	bl	418448 <_obstack_memory_used@@Base+0x13c8>
  40e598:	ldr	q6, [sp, #128]
  40e59c:	tbnz	w0, #31, 40ef5c <__fxstatat@plt+0xc50c>
  40e5a0:	ldr	q4, [sp, #160]
  40e5a4:	ldr	q2, [sp, #176]
  40e5a8:	mov	v1.16b, v4.16b
  40e5ac:	str	q4, [sp, #128]
  40e5b0:	mov	v0.16b, v2.16b
  40e5b4:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40e5b8:	mov	v6.16b, v0.16b
  40e5bc:	ldr	q0, [sp, #96]
  40e5c0:	mov	v1.16b, v6.16b
  40e5c4:	str	q6, [sp, #160]
  40e5c8:	bl	418448 <_obstack_memory_used@@Base+0x13c8>
  40e5cc:	ldr	q4, [sp, #128]
  40e5d0:	tbnz	w0, #31, 40ef6c <__fxstatat@plt+0xc51c>
  40e5d4:	ldr	q6, [sp, #160]
  40e5d8:	ldr	q2, [sp, #176]
  40e5dc:	mov	v1.16b, v6.16b
  40e5e0:	str	q6, [sp, #176]
  40e5e4:	mov	v0.16b, v2.16b
  40e5e8:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40e5ec:	mov	v2.16b, v0.16b
  40e5f0:	ldr	q0, [sp, #96]
  40e5f4:	mov	w0, #0x8                   	// #8
  40e5f8:	mov	v1.16b, v2.16b
  40e5fc:	str	w0, [sp, #128]
  40e600:	str	q2, [sp, #160]
  40e604:	bl	418448 <_obstack_memory_used@@Base+0x13c8>
  40e608:	ldr	q2, [sp, #160]
  40e60c:	ldr	q6, [sp, #176]
  40e610:	tbnz	w0, #31, 40ef7c <__fxstatat@plt+0xc52c>
  40e614:	ldr	q0, [sp, #96]
  40e618:	mov	v1.16b, v2.16b
  40e61c:	add	x28, x28, #0x1
  40e620:	and	w25, w19, #0x3
  40e624:	bl	417a10 <_obstack_memory_used@@Base+0x990>
  40e628:	str	q0, [sp, #96]
  40e62c:	ands	w0, w19, #0x20
  40e630:	cset	x27, eq  // eq = none
  40e634:	cmp	w25, #0x1
  40e638:	add	x27, x27, #0x1
  40e63c:	add	x27, x27, x28
  40e640:	b.eq	40ed54 <__fxstatat@plt+0xc304>  // b.none
  40e644:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40e648:	add	x0, x0, #0xc60
  40e64c:	ldr	q1, [x0]
  40e650:	bl	418590 <_obstack_memory_used@@Base+0x1510>
  40e654:	ldr	q2, [sp, #96]
  40e658:	tbz	w0, #31, 40e698 <__fxstatat@plt+0xbc48>
  40e65c:	ldr	q0, [sp, #96]
  40e660:	bl	418f20 <_obstack_memory_used@@Base+0x1ea0>
  40e664:	mov	x23, x0
  40e668:	bl	419040 <_obstack_memory_used@@Base+0x1fc0>
  40e66c:	mov	v2.16b, v0.16b
  40e670:	cbnz	w25, 40e698 <__fxstatat@plt+0xbc48>
  40e674:	mov	v1.16b, v0.16b
  40e678:	str	q0, [sp, #160]
  40e67c:	ldr	q0, [sp, #96]
  40e680:	bl	418340 <_obstack_memory_used@@Base+0x12c0>
  40e684:	ldr	q2, [sp, #160]
  40e688:	cbz	w0, 40e698 <__fxstatat@plt+0xbc48>
  40e68c:	add	x0, x23, #0x1
  40e690:	bl	419040 <_obstack_memory_used@@Base+0x1fc0>
  40e694:	mov	v2.16b, v0.16b
  40e698:	mov	v0.16b, v2.16b
  40e69c:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40e6a0:	add	x3, x3, #0xc20
  40e6a4:	mov	x2, #0xffffffffffffffff    	// #-1
  40e6a8:	mov	w1, #0x1                   	// #1
  40e6ac:	mov	x0, x21
  40e6b0:	bl	402440 <__sprintf_chk@plt>
  40e6b4:	mov	x0, x21
  40e6b8:	bl	402430 <strlen@plt>
  40e6bc:	mov	x2, x0
  40e6c0:	cmp	x0, x27
  40e6c4:	b.ls	40ec04 <__fxstatat@plt+0xc1b4>  // b.plast
  40e6c8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40e6cc:	add	x0, x0, #0xc70
  40e6d0:	ldr	q0, [sp, #96]
  40e6d4:	ldr	q1, [x0]
  40e6d8:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40e6dc:	mov	v2.16b, v0.16b
  40e6e0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40e6e4:	add	x0, x0, #0xc60
  40e6e8:	mov	v0.16b, v2.16b
  40e6ec:	str	q2, [sp, #96]
  40e6f0:	ldr	q1, [x0]
  40e6f4:	bl	418590 <_obstack_memory_used@@Base+0x1510>
  40e6f8:	ldr	q2, [sp, #96]
  40e6fc:	tbz	w0, #31, 40e748 <__fxstatat@plt+0xbcf8>
  40e700:	mov	v0.16b, v2.16b
  40e704:	bl	418f20 <_obstack_memory_used@@Base+0x1ea0>
  40e708:	mov	x23, x0
  40e70c:	bl	419040 <_obstack_memory_used@@Base+0x1fc0>
  40e710:	mov	v4.16b, v0.16b
  40e714:	and	w0, w19, #0x3
  40e718:	cbnz	w0, 40e744 <__fxstatat@plt+0xbcf4>
  40e71c:	ldr	q2, [sp, #96]
  40e720:	mov	v1.16b, v4.16b
  40e724:	str	q4, [sp, #96]
  40e728:	mov	v0.16b, v2.16b
  40e72c:	bl	418340 <_obstack_memory_used@@Base+0x12c0>
  40e730:	ldr	q4, [sp, #96]
  40e734:	cbz	w0, 40e744 <__fxstatat@plt+0xbcf4>
  40e738:	add	x0, x23, #0x1
  40e73c:	bl	419040 <_obstack_memory_used@@Base+0x1fc0>
  40e740:	mov	v4.16b, v0.16b
  40e744:	mov	v2.16b, v4.16b
  40e748:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40e74c:	add	x0, x0, #0xc70
  40e750:	mov	v0.16b, v2.16b
  40e754:	ldr	q1, [x0]
  40e758:	bl	417a10 <_obstack_memory_used@@Base+0x990>
  40e75c:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40e760:	add	x3, x3, #0xc18
  40e764:	mov	x2, #0xffffffffffffffff    	// #-1
  40e768:	mov	w1, #0x1                   	// #1
  40e76c:	mov	x0, x21
  40e770:	bl	402440 <__sprintf_chk@plt>
  40e774:	mov	x0, x21
  40e778:	bl	402430 <strlen@plt>
  40e77c:	mov	x2, x0
  40e780:	mov	x23, x0
  40e784:	add	x0, x21, #0x287
  40e788:	mov	x1, x21
  40e78c:	sub	x28, x0, x2
  40e790:	add	x23, x28, x23
  40e794:	mov	x0, x28
  40e798:	bl	4023d0 <memmove@plt>
  40e79c:	tbnz	w19, #2, 40eb58 <__fxstatat@plt+0xc108>
  40e7a0:	tbz	w19, #7, 40e7c0 <__fxstatat@plt+0xbd70>
  40e7a4:	ldr	w0, [sp, #128]
  40e7a8:	cmn	w0, #0x1
  40e7ac:	b.eq	40ecac <__fxstatat@plt+0xc25c>  // b.none
  40e7b0:	ldr	w1, [sp, #128]
  40e7b4:	and	w0, w19, #0x100
  40e7b8:	orr	w1, w0, w1
  40e7bc:	cbnz	w1, 40ed9c <__fxstatat@plt+0xc34c>
  40e7c0:	ldr	x0, [sp, #120]
  40e7c4:	strb	wzr, [x0]
  40e7c8:	mov	x0, x28
  40e7cc:	ldp	x19, x20, [sp, #16]
  40e7d0:	ldp	x21, x22, [sp, #32]
  40e7d4:	ldp	x23, x24, [sp, #48]
  40e7d8:	ldp	x25, x26, [sp, #64]
  40e7dc:	ldp	x27, x28, [sp, #80]
  40e7e0:	ldp	x29, x30, [sp], #240
  40e7e4:	ret
  40e7e8:	cbz	x26, 40e458 <__fxstatat@plt+0xba08>
  40e7ec:	udiv	x5, x20, x26
  40e7f0:	msub	x0, x5, x26, x20
  40e7f4:	cbnz	x0, 40e458 <__fxstatat@plt+0xba08>
  40e7f8:	udiv	x4, x23, x5
  40e7fc:	msub	x23, x4, x5, x23
  40e800:	add	x23, x23, x23, lsl #2
  40e804:	lsl	x1, x23, #1
  40e808:	udiv	x2, x1, x5
  40e80c:	msub	x1, x2, x5, x1
  40e810:	lsl	x1, x1, #1
  40e814:	cmp	x5, x1
  40e818:	b.ls	40ee08 <__fxstatat@plt+0xc3b8>  // b.plast
  40e81c:	cmp	x1, #0x0
  40e820:	cset	w0, ne  // ne = any
  40e824:	and	w5, w19, #0x10
  40e828:	tbz	w19, #4, 40ec30 <__fxstatat@plt+0xc1e0>
  40e82c:	ldr	x3, [sp, #144]
  40e830:	cmp	x4, x3
  40e834:	b.cc	40ee14 <__fxstatat@plt+0xc3c4>  // b.lo, b.ul, b.last
  40e838:	udiv	x1, x4, x3
  40e83c:	asr	w7, w0, #1
  40e840:	msub	x3, x1, x3, x4
  40e844:	mov	x4, x1
  40e848:	add	w3, w3, w3, lsl #2
  40e84c:	add	w2, w2, w3, lsl #1
  40e850:	udiv	w6, w2, w25
  40e854:	msub	w3, w6, w25, w2
  40e858:	mov	w2, w6
  40e85c:	add	w3, w7, w3, lsl #1
  40e860:	add	w0, w0, w3
  40e864:	cmp	w25, w3
  40e868:	b.hi	40ee4c <__fxstatat@plt+0xc3fc>  // b.pmore
  40e86c:	cmp	w25, w0
  40e870:	mov	w3, #0x3                   	// #3
  40e874:	mov	w0, #0x2                   	// #2
  40e878:	csel	w0, w3, w0, cc  // cc = lo, ul, last
  40e87c:	mov	w7, #0x1                   	// #1
  40e880:	ldr	x3, [sp, #144]
  40e884:	cmp	x3, x1
  40e888:	b.hi	40f074 <__fxstatat@plt+0xc624>  // b.pmore
  40e88c:	mov	x2, x3
  40e890:	asr	w7, w0, #1
  40e894:	udiv	x3, x1, x3
  40e898:	msub	x1, x3, x2, x1
  40e89c:	mov	x4, x3
  40e8a0:	add	w1, w1, w1, lsl #2
  40e8a4:	add	w1, w6, w1, lsl #1
  40e8a8:	udiv	w8, w1, w25
  40e8ac:	msub	w1, w8, w25, w1
  40e8b0:	mov	w2, w8
  40e8b4:	add	w1, w7, w1, lsl #1
  40e8b8:	add	w0, w0, w1
  40e8bc:	cmp	w25, w1
  40e8c0:	b.hi	40eebc <__fxstatat@plt+0xc46c>  // b.pmore
  40e8c4:	cmp	w25, w0
  40e8c8:	mov	w1, #0x3                   	// #3
  40e8cc:	mov	w0, #0x2                   	// #2
  40e8d0:	csel	w0, w1, w0, cc  // cc = lo, ul, last
  40e8d4:	mov	w7, #0x1                   	// #1
  40e8d8:	ldr	x1, [sp, #144]
  40e8dc:	cmp	x3, x1
  40e8e0:	b.cc	40f080 <__fxstatat@plt+0xc630>  // b.lo, b.ul, b.last
  40e8e4:	udiv	x6, x3, x1
  40e8e8:	asr	w7, w0, #1
  40e8ec:	msub	x3, x6, x1, x3
  40e8f0:	mov	x4, x6
  40e8f4:	add	w3, w3, w3, lsl #2
  40e8f8:	add	w1, w8, w3, lsl #1
  40e8fc:	udiv	w8, w1, w25
  40e900:	msub	w1, w8, w25, w1
  40e904:	mov	w2, w8
  40e908:	add	w1, w7, w1, lsl #1
  40e90c:	add	w0, w0, w1
  40e910:	cmp	w25, w1
  40e914:	b.hi	40eecc <__fxstatat@plt+0xc47c>  // b.pmore
  40e918:	cmp	w0, w25
  40e91c:	mov	w1, #0x3                   	// #3
  40e920:	mov	w0, #0x2                   	// #2
  40e924:	csel	w0, w1, w0, hi  // hi = pmore
  40e928:	mov	w7, #0x1                   	// #1
  40e92c:	ldr	x1, [sp, #144]
  40e930:	cmp	x6, x1
  40e934:	b.cc	40f08c <__fxstatat@plt+0xc63c>  // b.lo, b.ul, b.last
  40e938:	udiv	x3, x6, x1
  40e93c:	asr	w7, w0, #1
  40e940:	msub	x6, x3, x1, x6
  40e944:	mov	x4, x3
  40e948:	add	w6, w6, w6, lsl #2
  40e94c:	add	w1, w8, w6, lsl #1
  40e950:	udiv	w8, w1, w25
  40e954:	msub	w1, w8, w25, w1
  40e958:	mov	w2, w8
  40e95c:	add	w1, w7, w1, lsl #1
  40e960:	add	w0, w0, w1
  40e964:	cmp	w25, w1
  40e968:	b.hi	40eedc <__fxstatat@plt+0xc48c>  // b.pmore
  40e96c:	cmp	w25, w0
  40e970:	mov	w1, #0x3                   	// #3
  40e974:	mov	w0, #0x2                   	// #2
  40e978:	csel	w0, w1, w0, cc  // cc = lo, ul, last
  40e97c:	mov	w7, #0x1                   	// #1
  40e980:	ldr	x1, [sp, #144]
  40e984:	cmp	x3, x1
  40e988:	b.cc	40f0a4 <__fxstatat@plt+0xc654>  // b.lo, b.ul, b.last
  40e98c:	udiv	x6, x3, x1
  40e990:	asr	w7, w0, #1
  40e994:	msub	x3, x6, x1, x3
  40e998:	mov	x4, x6
  40e99c:	add	w3, w3, w3, lsl #2
  40e9a0:	add	w1, w8, w3, lsl #1
  40e9a4:	udiv	w3, w1, w25
  40e9a8:	msub	w1, w3, w25, w1
  40e9ac:	mov	w2, w3
  40e9b0:	add	w1, w7, w1, lsl #1
  40e9b4:	add	w0, w0, w1
  40e9b8:	cmp	w25, w1
  40e9bc:	b.hi	40eeec <__fxstatat@plt+0xc49c>  // b.pmore
  40e9c0:	cmp	w0, w25
  40e9c4:	mov	w1, #0x3                   	// #3
  40e9c8:	mov	w0, #0x2                   	// #2
  40e9cc:	csel	w0, w1, w0, hi  // hi = pmore
  40e9d0:	mov	w7, #0x1                   	// #1
  40e9d4:	ldr	x1, [sp, #144]
  40e9d8:	cmp	x6, x1
  40e9dc:	b.cc	40f0bc <__fxstatat@plt+0xc66c>  // b.lo, b.ul, b.last
  40e9e0:	udiv	x4, x6, x1
  40e9e4:	asr	w7, w0, #1
  40e9e8:	msub	x6, x4, x1, x6
  40e9ec:	add	w6, w6, w6, lsl #2
  40e9f0:	add	w1, w3, w6, lsl #1
  40e9f4:	udiv	w2, w1, w25
  40e9f8:	msub	w1, w2, w25, w1
  40e9fc:	add	w1, w7, w1, lsl #1
  40ea00:	add	w0, w0, w1
  40ea04:	cmp	w25, w1
  40ea08:	b.hi	40eefc <__fxstatat@plt+0xc4ac>  // b.pmore
  40ea0c:	cmp	w25, w0
  40ea10:	mov	w1, #0x2                   	// #2
  40ea14:	mov	w0, #0x3                   	// #3
  40ea18:	csel	w0, w1, w0, cs  // cs = hs, nlast
  40ea1c:	mov	w7, #0x1                   	// #1
  40ea20:	mov	w1, #0x6                   	// #6
  40ea24:	str	w1, [sp, #128]
  40ea28:	cmp	x4, #0x9
  40ea2c:	b.hi	40ec38 <__fxstatat@plt+0xc1e8>  // b.pmore
  40ea30:	ands	w1, w19, #0x3
  40ea34:	csel	w7, w7, wzr, eq  // eq = none
  40ea38:	cmp	w1, #0x1
  40ea3c:	b.eq	40eea8 <__fxstatat@plt+0xc458>  // b.none
  40ea40:	cbnz	w7, 40ef38 <__fxstatat@plt+0xc4e8>
  40ea44:	cbnz	w2, 40f104 <__fxstatat@plt+0xc6b4>
  40ea48:	add	x23, x21, #0x287
  40ea4c:	tbnz	w19, #3, 40ea84 <__fxstatat@plt+0xc034>
  40ea50:	mov	w0, #0x30                  	// #48
  40ea54:	add	x23, x21, #0x286
  40ea58:	strb	w0, [x21, #646]
  40ea5c:	sub	x23, x23, x28
  40ea60:	mov	x2, x28
  40ea64:	mov	x0, x23
  40ea68:	mov	x1, x27
  40ea6c:	str	w5, [sp, #96]
  40ea70:	str	x4, [sp, #160]
  40ea74:	bl	4023c0 <memcpy@plt>
  40ea78:	ldr	w5, [sp, #96]
  40ea7c:	mov	w0, #0x0                   	// #0
  40ea80:	ldr	x4, [sp, #160]
  40ea84:	and	w1, w19, #0x3
  40ea88:	cmp	w1, #0x1
  40ea8c:	b.eq	40ec70 <__fxstatat@plt+0xc220>  // b.none
  40ea90:	mov	w2, #0x0                   	// #0
  40ea94:	b	40ec48 <__fxstatat@plt+0xc1f8>
  40ea98:	mov	x0, #0x400                 	// #1024
  40ea9c:	mov	w25, w0
  40eaa0:	str	x0, [sp, #144]
  40eaa4:	b	40e3e0 <__fxstatat@plt+0xb990>
  40eaa8:	and	w25, w19, #0x3
  40eaac:	cmp	w25, #0x1
  40eab0:	b.eq	40eb08 <__fxstatat@plt+0xc0b8>  // b.none
  40eab4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40eab8:	add	x0, x0, #0xc60
  40eabc:	ldr	q1, [x0]
  40eac0:	bl	418590 <_obstack_memory_used@@Base+0x1510>
  40eac4:	tbz	w0, #31, 40eb08 <__fxstatat@plt+0xc0b8>
  40eac8:	ldr	q0, [sp, #96]
  40eacc:	bl	418f20 <_obstack_memory_used@@Base+0x1ea0>
  40ead0:	mov	x23, x0
  40ead4:	bl	419040 <_obstack_memory_used@@Base+0x1fc0>
  40ead8:	mov	v2.16b, v0.16b
  40eadc:	cbnz	w25, 40eb04 <__fxstatat@plt+0xc0b4>
  40eae0:	ldr	q0, [sp, #96]
  40eae4:	mov	v1.16b, v2.16b
  40eae8:	str	q2, [sp, #96]
  40eaec:	bl	418340 <_obstack_memory_used@@Base+0x12c0>
  40eaf0:	ldr	q2, [sp, #96]
  40eaf4:	cbz	w0, 40eb04 <__fxstatat@plt+0xc0b4>
  40eaf8:	add	x0, x23, #0x1
  40eafc:	bl	419040 <_obstack_memory_used@@Base+0x1fc0>
  40eb00:	mov	v2.16b, v0.16b
  40eb04:	str	q2, [sp, #96]
  40eb08:	ldr	q0, [sp, #96]
  40eb0c:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40eb10:	add	x3, x3, #0xc18
  40eb14:	mov	x2, #0xffffffffffffffff    	// #-1
  40eb18:	mov	w1, #0x1                   	// #1
  40eb1c:	mov	x0, x21
  40eb20:	bl	402440 <__sprintf_chk@plt>
  40eb24:	mov	x0, x21
  40eb28:	bl	402430 <strlen@plt>
  40eb2c:	mov	x2, x0
  40eb30:	mov	w0, #0xffffffff            	// #-1
  40eb34:	mov	x23, x2
  40eb38:	str	w0, [sp, #128]
  40eb3c:	add	x0, x21, #0x287
  40eb40:	mov	x1, x21
  40eb44:	sub	x28, x0, x2
  40eb48:	add	x23, x28, x23
  40eb4c:	mov	x0, x28
  40eb50:	bl	4023d0 <memmove@plt>
  40eb54:	tbz	w19, #2, 40e7a0 <__fxstatat@plt+0xbd50>
  40eb58:	mov	x0, x22
  40eb5c:	sub	x26, x23, x28
  40eb60:	bl	402430 <strlen@plt>
  40eb64:	mov	x25, #0xffffffffffffffff    	// #-1
  40eb68:	mov	x27, x0
  40eb6c:	mov	x1, x28
  40eb70:	mov	x2, x26
  40eb74:	add	x0, sp, #0xc0
  40eb78:	mov	x3, #0x29                  	// #41
  40eb7c:	bl	4025a0 <__memcpy_chk@plt>
  40eb80:	b	40ebb8 <__fxstatat@plt+0xc168>
  40eb84:	sub	x26, x26, x25
  40eb88:	add	x0, sp, #0xc0
  40eb8c:	add	x1, x0, x26
  40eb90:	sub	x28, x23, x25
  40eb94:	mov	x2, x25
  40eb98:	sub	x23, x28, x27
  40eb9c:	mov	x0, x28
  40eba0:	bl	4023c0 <memcpy@plt>
  40eba4:	cbz	x26, 40e7a0 <__fxstatat@plt+0xbd50>
  40eba8:	mov	x2, x27
  40ebac:	mov	x1, x22
  40ebb0:	mov	x0, x23
  40ebb4:	bl	4023c0 <memcpy@plt>
  40ebb8:	ldrb	w0, [x24]
  40ebbc:	cmp	x25, x26
  40ebc0:	csel	x25, x25, x26, ls  // ls = plast
  40ebc4:	cbz	w0, 40eb84 <__fxstatat@plt+0xc134>
  40ebc8:	and	x4, x0, #0xff
  40ebcc:	cmp	w0, #0xff
  40ebd0:	b.eq	40ebf0 <__fxstatat@plt+0xc1a0>  // b.none
  40ebd4:	cmp	x26, w0, uxtb
  40ebd8:	add	x0, sp, #0xc0
  40ebdc:	csel	x25, x4, x26, cs  // cs = hs, nlast
  40ebe0:	add	x24, x24, #0x1
  40ebe4:	sub	x26, x26, x25
  40ebe8:	add	x1, x0, x26
  40ebec:	b	40eb90 <__fxstatat@plt+0xc140>
  40ebf0:	mov	x25, x26
  40ebf4:	add	x1, sp, #0xc0
  40ebf8:	add	x24, x24, #0x1
  40ebfc:	mov	x26, #0x0                   	// #0
  40ec00:	b	40eb90 <__fxstatat@plt+0xc140>
  40ec04:	tbz	w19, #3, 40ec18 <__fxstatat@plt+0xc1c8>
  40ec08:	add	x0, x21, x2
  40ec0c:	ldurb	w0, [x0, #-1]
  40ec10:	cmp	w0, #0x30
  40ec14:	b.eq	40ee5c <__fxstatat@plt+0xc40c>  // b.none
  40ec18:	sub	x23, x2, x28
  40ec1c:	b	40eb3c <__fxstatat@plt+0xc0ec>
  40ec20:	and	w5, w19, #0x10
  40ec24:	mov	w0, #0x0                   	// #0
  40ec28:	mov	w2, #0x0                   	// #0
  40ec2c:	tbnz	w19, #4, 40e82c <__fxstatat@plt+0xbddc>
  40ec30:	mov	w1, #0xffffffff            	// #-1
  40ec34:	str	w1, [sp, #128]
  40ec38:	and	w1, w19, #0x3
  40ec3c:	add	x23, x21, #0x287
  40ec40:	cmp	w1, #0x1
  40ec44:	b.eq	40edec <__fxstatat@plt+0xc39c>  // b.none
  40ec48:	and	w1, w19, #0x3
  40ec4c:	cbnz	w1, 40ec70 <__fxstatat@plt+0xc220>
  40ec50:	add	w0, w0, w2
  40ec54:	cmp	w0, #0x0
  40ec58:	b.le	40ec70 <__fxstatat@plt+0xc220>
  40ec5c:	add	x4, x4, #0x1
  40ec60:	cbz	w5, 40ec70 <__fxstatat@plt+0xc220>
  40ec64:	ldr	x0, [sp, #144]
  40ec68:	cmp	x4, x0
  40ec6c:	b.eq	40ee84 <__fxstatat@plt+0xc434>  // b.none
  40ec70:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  40ec74:	mov	x28, x23
  40ec78:	movk	x2, #0xcccd
  40ec7c:	nop
  40ec80:	umulh	x1, x4, x2
  40ec84:	cmp	x4, #0x9
  40ec88:	lsr	x1, x1, #3
  40ec8c:	add	x0, x1, x1, lsl #2
  40ec90:	sub	x0, x4, x0, lsl #1
  40ec94:	mov	x4, x1
  40ec98:	add	w0, w0, #0x30
  40ec9c:	strb	w0, [x28, #-1]!
  40eca0:	b.hi	40ec80 <__fxstatat@plt+0xc230>  // b.pmore
  40eca4:	tbz	w19, #2, 40e7a0 <__fxstatat@plt+0xbd50>
  40eca8:	b	40eb58 <__fxstatat@plt+0xc108>
  40ecac:	cmp	x20, #0x1
  40ecb0:	b.ls	40ef8c <__fxstatat@plt+0xc53c>  // b.plast
  40ecb4:	ldr	x1, [sp, #144]
  40ecb8:	cmp	x20, x1
  40ecbc:	b.ls	40f11c <__fxstatat@plt+0xc6cc>  // b.plast
  40ecc0:	mul	x0, x1, x1
  40ecc4:	cmp	x20, x0
  40ecc8:	b.ls	40ef94 <__fxstatat@plt+0xc544>  // b.plast
  40eccc:	mul	x0, x1, x0
  40ecd0:	cmp	x20, x0
  40ecd4:	b.ls	40efb8 <__fxstatat@plt+0xc568>  // b.plast
  40ecd8:	mul	x0, x1, x0
  40ecdc:	cmp	x20, x0
  40ece0:	b.ls	40f0c8 <__fxstatat@plt+0xc678>  // b.plast
  40ece4:	mul	x0, x1, x0
  40ece8:	cmp	x20, x0
  40ecec:	b.ls	40efdc <__fxstatat@plt+0xc58c>  // b.plast
  40ecf0:	mul	x0, x1, x0
  40ecf4:	cmp	x20, x0
  40ecf8:	b.ls	40f000 <__fxstatat@plt+0xc5b0>  // b.plast
  40ecfc:	mul	x0, x1, x0
  40ed00:	cmp	x20, x0
  40ed04:	and	w0, w19, #0x100
  40ed08:	b.ls	40f140 <__fxstatat@plt+0xc6f0>  // b.plast
  40ed0c:	tbnz	w19, #6, 40ee30 <__fxstatat@plt+0xc3e0>
  40ed10:	mov	w1, #0x8                   	// #8
  40ed14:	str	w1, [sp, #128]
  40ed18:	ldr	w1, [sp, #156]
  40ed1c:	cmp	w1, #0x0
  40ed20:	cset	w4, ne  // ne = any
  40ed24:	ldr	w3, [sp, #128]
  40ed28:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40ed2c:	add	x2, x2, #0xc80
  40ed30:	ldr	x1, [sp, #120]
  40ed34:	ldrb	w2, [x2, w3, sxtw]
  40ed38:	strb	w2, [x1], #1
  40ed3c:	cbz	w0, 40ede4 <__fxstatat@plt+0xc394>
  40ed40:	cbnz	w4, 40ee1c <__fxstatat@plt+0xc3cc>
  40ed44:	mov	w0, #0x42                  	// #66
  40ed48:	strb	w0, [x1], #1
  40ed4c:	str	x1, [sp, #120]
  40ed50:	b	40e7c0 <__fxstatat@plt+0xbd70>
  40ed54:	and	w1, w19, #0x3
  40ed58:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40ed5c:	add	x3, x3, #0xc20
  40ed60:	mov	x2, #0xffffffffffffffff    	// #-1
  40ed64:	mov	x0, x21
  40ed68:	bl	402440 <__sprintf_chk@plt>
  40ed6c:	mov	x0, x21
  40ed70:	bl	402430 <strlen@plt>
  40ed74:	mov	x2, x0
  40ed78:	cmp	x0, x27
  40ed7c:	b.ls	40ec04 <__fxstatat@plt+0xc1b4>  // b.plast
  40ed80:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40ed84:	add	x0, x0, #0xc70
  40ed88:	ldr	q0, [sp, #96]
  40ed8c:	ldr	q1, [x0]
  40ed90:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40ed94:	mov	v2.16b, v0.16b
  40ed98:	b	40e748 <__fxstatat@plt+0xbcf8>
  40ed9c:	tbz	w19, #6, 40edb0 <__fxstatat@plt+0xc360>
  40eda0:	add	x1, x21, #0x288
  40eda4:	str	x1, [sp, #120]
  40eda8:	mov	w1, #0x20                  	// #32
  40edac:	strb	w1, [x21, #647]
  40edb0:	ldr	w1, [sp, #128]
  40edb4:	cbz	w1, 40f110 <__fxstatat@plt+0xc6c0>
  40edb8:	ldr	w1, [sp, #156]
  40edbc:	cmp	w1, #0x0
  40edc0:	ldr	w1, [sp, #128]
  40edc4:	cset	w4, ne  // ne = any
  40edc8:	cmp	w4, #0x0
  40edcc:	ccmp	w1, #0x1, #0x0, eq  // eq = none
  40edd0:	b.ne	40ed24 <__fxstatat@plt+0xc2d4>  // b.any
  40edd4:	ldr	x1, [sp, #120]
  40edd8:	mov	w2, #0x6b                  	// #107
  40eddc:	strb	w2, [x1], #1
  40ede0:	cbnz	w0, 40ed44 <__fxstatat@plt+0xc2f4>
  40ede4:	str	x1, [sp, #120]
  40ede8:	b	40e7c0 <__fxstatat@plt+0xbd70>
  40edec:	and	x1, x4, #0x1
  40edf0:	add	x0, x1, w0, sxtw
  40edf4:	cmp	x0, #0x0
  40edf8:	cinc	w2, w2, ne  // ne = any
  40edfc:	cmp	w2, #0x5
  40ee00:	b.gt	40ec5c <__fxstatat@plt+0xc20c>
  40ee04:	b	40ec70 <__fxstatat@plt+0xc220>
  40ee08:	cset	w0, cc  // cc = lo, ul, last
  40ee0c:	add	w0, w0, #0x2
  40ee10:	b	40e824 <__fxstatat@plt+0xbdd4>
  40ee14:	str	wzr, [sp, #128]
  40ee18:	b	40ec38 <__fxstatat@plt+0xc1e8>
  40ee1c:	ldr	x2, [sp, #120]
  40ee20:	mov	w0, #0x69                  	// #105
  40ee24:	add	x1, x2, #0x2
  40ee28:	strb	w0, [x2, #1]
  40ee2c:	b	40ed44 <__fxstatat@plt+0xc2f4>
  40ee30:	add	x2, x21, #0x288
  40ee34:	mov	w1, #0x20                  	// #32
  40ee38:	str	x2, [sp, #120]
  40ee3c:	mov	w2, #0x8                   	// #8
  40ee40:	str	w2, [sp, #128]
  40ee44:	strb	w1, [x21, #647]
  40ee48:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40ee4c:	cmp	w0, #0x0
  40ee50:	cset	w0, ne  // ne = any
  40ee54:	mov	w7, w0
  40ee58:	b	40e880 <__fxstatat@plt+0xbe30>
  40ee5c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40ee60:	add	x0, x0, #0xc70
  40ee64:	ldr	q0, [sp, #96]
  40ee68:	ldr	q1, [x0]
  40ee6c:	bl	4186d0 <_obstack_memory_used@@Base+0x1650>
  40ee70:	mov	v2.16b, v0.16b
  40ee74:	and	w0, w19, #0x3
  40ee78:	cmp	w0, #0x1
  40ee7c:	b.ne	40e6e0 <__fxstatat@plt+0xbc90>  // b.any
  40ee80:	b	40e748 <__fxstatat@plt+0xbcf8>
  40ee84:	ldr	w0, [sp, #128]
  40ee88:	add	w0, w0, #0x1
  40ee8c:	str	w0, [sp, #128]
  40ee90:	tbz	w19, #3, 40f038 <__fxstatat@plt+0xc5e8>
  40ee94:	mov	w0, #0x31                  	// #49
  40ee98:	sturb	w0, [x23, #-1]
  40ee9c:	sub	x28, x23, #0x1
  40eea0:	tbz	w19, #2, 40e7a0 <__fxstatat@plt+0xbd50>
  40eea4:	b	40eb58 <__fxstatat@plt+0xc108>
  40eea8:	and	w1, w2, #0x1
  40eeac:	add	w1, w1, w0
  40eeb0:	cmp	w1, #0x2
  40eeb4:	cset	w7, gt
  40eeb8:	b	40ea40 <__fxstatat@plt+0xbff0>
  40eebc:	cmp	w0, #0x0
  40eec0:	cset	w7, ne  // ne = any
  40eec4:	mov	w0, w7
  40eec8:	b	40e8d8 <__fxstatat@plt+0xbe88>
  40eecc:	cmp	w0, #0x0
  40eed0:	cset	w7, ne  // ne = any
  40eed4:	mov	w0, w7
  40eed8:	b	40e92c <__fxstatat@plt+0xbedc>
  40eedc:	cmp	w0, #0x0
  40eee0:	cset	w7, ne  // ne = any
  40eee4:	mov	w0, w7
  40eee8:	b	40e980 <__fxstatat@plt+0xbf30>
  40eeec:	cmp	w0, #0x0
  40eef0:	cset	w7, ne  // ne = any
  40eef4:	mov	w0, w7
  40eef8:	b	40e9d4 <__fxstatat@plt+0xbf84>
  40eefc:	cmp	w0, #0x0
  40ef00:	cset	w7, ne  // ne = any
  40ef04:	mov	w0, w7
  40ef08:	b	40ea20 <__fxstatat@plt+0xbfd0>
  40ef0c:	mov	w0, #0x1                   	// #1
  40ef10:	str	w0, [sp, #128]
  40ef14:	b	40e614 <__fxstatat@plt+0xbbc4>
  40ef18:	mov	w0, #0x2                   	// #2
  40ef1c:	mov	v2.16b, v4.16b
  40ef20:	str	w0, [sp, #128]
  40ef24:	b	40e614 <__fxstatat@plt+0xbbc4>
  40ef28:	mov	w0, #0x3                   	// #3
  40ef2c:	mov	v2.16b, v6.16b
  40ef30:	str	w0, [sp, #128]
  40ef34:	b	40e614 <__fxstatat@plt+0xbbc4>
  40ef38:	cmp	w2, #0x9
  40ef3c:	b.eq	40f024 <__fxstatat@plt+0xc5d4>  // b.none
  40ef40:	add	w0, w2, #0x31
  40ef44:	and	w0, w0, #0xff
  40ef48:	b	40ea54 <__fxstatat@plt+0xc004>
  40ef4c:	mov	w0, #0x4                   	// #4
  40ef50:	mov	v2.16b, v4.16b
  40ef54:	str	w0, [sp, #128]
  40ef58:	b	40e614 <__fxstatat@plt+0xbbc4>
  40ef5c:	mov	w0, #0x5                   	// #5
  40ef60:	mov	v2.16b, v6.16b
  40ef64:	str	w0, [sp, #128]
  40ef68:	b	40e614 <__fxstatat@plt+0xbbc4>
  40ef6c:	mov	w0, #0x6                   	// #6
  40ef70:	mov	v2.16b, v4.16b
  40ef74:	str	w0, [sp, #128]
  40ef78:	b	40e614 <__fxstatat@plt+0xbbc4>
  40ef7c:	mov	w0, #0x7                   	// #7
  40ef80:	mov	v2.16b, v6.16b
  40ef84:	str	w0, [sp, #128]
  40ef88:	b	40e614 <__fxstatat@plt+0xbbc4>
  40ef8c:	str	wzr, [sp, #128]
  40ef90:	b	40e7b0 <__fxstatat@plt+0xbd60>
  40ef94:	and	w0, w19, #0x100
  40ef98:	tbz	w19, #6, 40f05c <__fxstatat@plt+0xc60c>
  40ef9c:	add	x2, x21, #0x288
  40efa0:	mov	w1, #0x20                  	// #32
  40efa4:	str	x2, [sp, #120]
  40efa8:	mov	w2, #0x2                   	// #2
  40efac:	str	w2, [sp, #128]
  40efb0:	strb	w1, [x21, #647]
  40efb4:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40efb8:	and	w0, w19, #0x100
  40efbc:	tbz	w19, #6, 40f068 <__fxstatat@plt+0xc618>
  40efc0:	add	x2, x21, #0x288
  40efc4:	mov	w1, #0x20                  	// #32
  40efc8:	str	x2, [sp, #120]
  40efcc:	mov	w2, #0x3                   	// #3
  40efd0:	str	w2, [sp, #128]
  40efd4:	strb	w1, [x21, #647]
  40efd8:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40efdc:	and	w0, w19, #0x100
  40efe0:	tbz	w19, #6, 40f098 <__fxstatat@plt+0xc648>
  40efe4:	add	x2, x21, #0x288
  40efe8:	mov	w1, #0x20                  	// #32
  40efec:	str	x2, [sp, #120]
  40eff0:	mov	w2, #0x5                   	// #5
  40eff4:	str	w2, [sp, #128]
  40eff8:	strb	w1, [x21, #647]
  40effc:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f000:	and	w0, w19, #0x100
  40f004:	tbz	w19, #6, 40f0b0 <__fxstatat@plt+0xc660>
  40f008:	add	x2, x21, #0x288
  40f00c:	mov	w1, #0x20                  	// #32
  40f010:	str	x2, [sp, #120]
  40f014:	mov	w2, #0x6                   	// #6
  40f018:	str	w2, [sp, #128]
  40f01c:	strb	w1, [x21, #647]
  40f020:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f024:	add	x4, x4, #0x1
  40f028:	cmp	x4, #0xa
  40f02c:	b.eq	40f0ec <__fxstatat@plt+0xc69c>  // b.none
  40f030:	mov	w0, #0x0                   	// #0
  40f034:	b	40ea48 <__fxstatat@plt+0xbff8>
  40f038:	mvn	x0, x28
  40f03c:	mov	w1, #0x30                  	// #48
  40f040:	sturb	w1, [x23, #-1]
  40f044:	add	x23, x23, x0
  40f048:	mov	x1, x27
  40f04c:	mov	x2, x28
  40f050:	mov	x0, x23
  40f054:	bl	4023c0 <memcpy@plt>
  40f058:	b	40ee94 <__fxstatat@plt+0xc444>
  40f05c:	mov	w1, #0x2                   	// #2
  40f060:	str	w1, [sp, #128]
  40f064:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f068:	mov	w1, #0x3                   	// #3
  40f06c:	str	w1, [sp, #128]
  40f070:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f074:	mov	w1, #0x1                   	// #1
  40f078:	str	w1, [sp, #128]
  40f07c:	b	40ea28 <__fxstatat@plt+0xbfd8>
  40f080:	mov	w1, #0x2                   	// #2
  40f084:	str	w1, [sp, #128]
  40f088:	b	40ea28 <__fxstatat@plt+0xbfd8>
  40f08c:	mov	w1, #0x3                   	// #3
  40f090:	str	w1, [sp, #128]
  40f094:	b	40ea28 <__fxstatat@plt+0xbfd8>
  40f098:	mov	w1, #0x5                   	// #5
  40f09c:	str	w1, [sp, #128]
  40f0a0:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f0a4:	mov	w1, #0x4                   	// #4
  40f0a8:	str	w1, [sp, #128]
  40f0ac:	b	40ea28 <__fxstatat@plt+0xbfd8>
  40f0b0:	mov	w1, #0x6                   	// #6
  40f0b4:	str	w1, [sp, #128]
  40f0b8:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f0bc:	mov	w1, #0x5                   	// #5
  40f0c0:	str	w1, [sp, #128]
  40f0c4:	b	40ea28 <__fxstatat@plt+0xbfd8>
  40f0c8:	and	w0, w19, #0x100
  40f0cc:	tbz	w19, #6, 40f0f8 <__fxstatat@plt+0xc6a8>
  40f0d0:	add	x2, x21, #0x288
  40f0d4:	mov	w1, #0x20                  	// #32
  40f0d8:	str	x2, [sp, #120]
  40f0dc:	mov	w2, #0x4                   	// #4
  40f0e0:	str	w2, [sp, #128]
  40f0e4:	strb	w1, [x21, #647]
  40f0e8:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f0ec:	add	x23, x21, #0x287
  40f0f0:	mov	w0, #0x0                   	// #0
  40f0f4:	b	40ea84 <__fxstatat@plt+0xc034>
  40f0f8:	mov	w1, #0x4                   	// #4
  40f0fc:	str	w1, [sp, #128]
  40f100:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f104:	add	w0, w2, #0x30
  40f108:	and	w0, w0, #0xff
  40f10c:	b	40ea54 <__fxstatat@plt+0xc004>
  40f110:	ldr	x1, [sp, #120]
  40f114:	cbnz	w0, 40ed44 <__fxstatat@plt+0xc2f4>
  40f118:	b	40e7c0 <__fxstatat@plt+0xbd70>
  40f11c:	and	w0, w19, #0x100
  40f120:	tbz	w19, #6, 40f160 <__fxstatat@plt+0xc710>
  40f124:	add	x2, x21, #0x288
  40f128:	mov	w1, #0x20                  	// #32
  40f12c:	str	x2, [sp, #120]
  40f130:	mov	w2, #0x1                   	// #1
  40f134:	str	w2, [sp, #128]
  40f138:	strb	w1, [x21, #647]
  40f13c:	b	40edb8 <__fxstatat@plt+0xc368>
  40f140:	tbz	w19, #6, 40f16c <__fxstatat@plt+0xc71c>
  40f144:	add	x2, x21, #0x288
  40f148:	mov	w1, #0x20                  	// #32
  40f14c:	str	x2, [sp, #120]
  40f150:	mov	w2, #0x7                   	// #7
  40f154:	str	w2, [sp, #128]
  40f158:	strb	w1, [x21, #647]
  40f15c:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f160:	mov	w1, #0x1                   	// #1
  40f164:	str	w1, [sp, #128]
  40f168:	b	40edb8 <__fxstatat@plt+0xc368>
  40f16c:	mov	w1, #0x7                   	// #7
  40f170:	str	w1, [sp, #128]
  40f174:	b	40ed18 <__fxstatat@plt+0xc2c8>
  40f178:	stp	x29, x30, [sp, #-80]!
  40f17c:	mov	x29, sp
  40f180:	stp	x19, x20, [sp, #16]
  40f184:	mov	x19, x0
  40f188:	mov	x20, x2
  40f18c:	stp	x21, x22, [sp, #32]
  40f190:	mov	x21, x1
  40f194:	cbz	x0, 40f2d8 <__fxstatat@plt+0xc888>
  40f198:	stp	x23, x24, [sp, #48]
  40f19c:	mov	w22, #0x0                   	// #0
  40f1a0:	mov	w23, #0xa0                  	// #160
  40f1a4:	ldrb	w0, [x19]
  40f1a8:	cmp	w0, #0x27
  40f1ac:	b.ne	40f1bc <__fxstatat@plt+0xc76c>  // b.any
  40f1b0:	add	x19, x19, #0x1
  40f1b4:	mov	w23, #0xa4                  	// #164
  40f1b8:	mov	w22, #0x4                   	// #4
  40f1bc:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40f1c0:	add	x24, x3, #0xc80
  40f1c4:	add	x2, x24, #0x10
  40f1c8:	add	x1, x24, #0x20
  40f1cc:	mov	x0, x19
  40f1d0:	mov	x3, #0x4                   	// #4
  40f1d4:	bl	40b558 <__fxstatat@plt+0x8b08>
  40f1d8:	tbnz	w0, #31, 40f20c <__fxstatat@plt+0xc7bc>
  40f1dc:	add	x3, x24, w0, sxtw #2
  40f1e0:	mov	x0, #0x1                   	// #1
  40f1e4:	ldp	x23, x24, [sp, #48]
  40f1e8:	str	x0, [x20]
  40f1ec:	ldr	w1, [x3, #16]
  40f1f0:	mov	w0, #0x0                   	// #0
  40f1f4:	orr	w22, w22, w1
  40f1f8:	str	w22, [x21]
  40f1fc:	ldp	x19, x20, [sp, #16]
  40f200:	ldp	x21, x22, [sp, #32]
  40f204:	ldp	x29, x30, [sp], #80
  40f208:	ret
  40f20c:	adrp	x4, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40f210:	mov	x3, x20
  40f214:	add	x4, x4, #0xc48
  40f218:	add	x1, sp, #0x48
  40f21c:	mov	x0, x19
  40f220:	mov	w2, #0x0                   	// #0
  40f224:	bl	4166e8 <__fxstatat@plt+0x13c98>
  40f228:	cbnz	w0, 40f294 <__fxstatat@plt+0xc844>
  40f22c:	ldrb	w1, [x19]
  40f230:	sub	w1, w1, #0x30
  40f234:	and	w1, w1, #0xff
  40f238:	cmp	w1, #0x9
  40f23c:	b.ls	40f274 <__fxstatat@plt+0xc824>  // b.plast
  40f240:	ldr	x1, [sp, #72]
  40f244:	b	40f25c <__fxstatat@plt+0xc80c>
  40f248:	ldrb	w3, [x19, #1]!
  40f24c:	sub	w3, w3, #0x30
  40f250:	and	w3, w3, #0xff
  40f254:	cmp	w3, #0x9
  40f258:	b.ls	40f274 <__fxstatat@plt+0xc824>  // b.plast
  40f25c:	cmp	x1, x19
  40f260:	b.ne	40f248 <__fxstatat@plt+0xc7f8>  // b.any
  40f264:	ldurb	w2, [x1, #-1]
  40f268:	cmp	w2, #0x42
  40f26c:	b.eq	40f324 <__fxstatat@plt+0xc8d4>  // b.none
  40f270:	mov	w22, w23
  40f274:	ldr	x1, [x20]
  40f278:	str	w22, [x21]
  40f27c:	cbz	x1, 40f2a0 <__fxstatat@plt+0xc850>
  40f280:	ldp	x19, x20, [sp, #16]
  40f284:	ldp	x21, x22, [sp, #32]
  40f288:	ldp	x23, x24, [sp, #48]
  40f28c:	ldp	x29, x30, [sp], #80
  40f290:	ret
  40f294:	ldr	x1, [x20]
  40f298:	str	wzr, [x21]
  40f29c:	cbnz	x1, 40f280 <__fxstatat@plt+0xc830>
  40f2a0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40f2a4:	add	x0, x0, #0xc38
  40f2a8:	bl	4029f0 <getenv@plt>
  40f2ac:	cmp	x0, #0x0
  40f2b0:	mov	x2, #0x400                 	// #1024
  40f2b4:	mov	x1, #0x200                 	// #512
  40f2b8:	csel	x1, x1, x2, ne  // ne = any
  40f2bc:	mov	w0, #0x4                   	// #4
  40f2c0:	ldp	x23, x24, [sp, #48]
  40f2c4:	str	x1, [x20]
  40f2c8:	ldp	x19, x20, [sp, #16]
  40f2cc:	ldp	x21, x22, [sp, #32]
  40f2d0:	ldp	x29, x30, [sp], #80
  40f2d4:	ret
  40f2d8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  40f2dc:	add	x0, x0, #0x578
  40f2e0:	bl	4029f0 <getenv@plt>
  40f2e4:	mov	x19, x0
  40f2e8:	cbnz	x0, 40f198 <__fxstatat@plt+0xc748>
  40f2ec:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40f2f0:	add	x0, x0, #0xc28
  40f2f4:	bl	4029f0 <getenv@plt>
  40f2f8:	mov	x19, x0
  40f2fc:	cbnz	x0, 40f198 <__fxstatat@plt+0xc748>
  40f300:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  40f304:	add	x0, x0, #0xc38
  40f308:	bl	4029f0 <getenv@plt>
  40f30c:	cbz	x0, 40f348 <__fxstatat@plt+0xc8f8>
  40f310:	mov	x0, #0x200                 	// #512
  40f314:	str	x0, [x20]
  40f318:	mov	w0, #0x0                   	// #0
  40f31c:	str	wzr, [x21]
  40f320:	b	40f1fc <__fxstatat@plt+0xc7ac>
  40f324:	ldurb	w1, [x1, #-2]
  40f328:	orr	w2, w22, #0x180
  40f32c:	cmp	w1, #0x69
  40f330:	b.eq	40f33c <__fxstatat@plt+0xc8ec>  // b.none
  40f334:	mov	w22, w2
  40f338:	b	40f274 <__fxstatat@plt+0xc824>
  40f33c:	mov	w23, #0x1a0                 	// #416
  40f340:	orr	w23, w22, w23
  40f344:	b	40f270 <__fxstatat@plt+0xc820>
  40f348:	mov	x0, #0x400                 	// #1024
  40f34c:	str	x0, [x20]
  40f350:	mov	w0, #0x0                   	// #0
  40f354:	str	wzr, [x21]
  40f358:	b	40f1fc <__fxstatat@plt+0xc7ac>
  40f35c:	nop
  40f360:	stp	x29, x30, [sp, #-48]!
  40f364:	mov	x29, sp
  40f368:	stp	x21, x22, [sp, #32]
  40f36c:	adrp	x21, 434000 <__progname@@GLIBC_2.17+0xa38>
  40f370:	stp	x19, x20, [sp, #16]
  40f374:	mov	w20, w0
  40f378:	ldr	x19, [x21, #1848]
  40f37c:	cbnz	x19, 40f38c <__fxstatat@plt+0xc93c>
  40f380:	b	40f3b4 <__fxstatat@plt+0xc964>
  40f384:	ldr	x19, [x19, #8]
  40f388:	cbz	x19, 40f3b4 <__fxstatat@plt+0xc964>
  40f38c:	ldr	w1, [x19]
  40f390:	cmp	w1, w20
  40f394:	b.ne	40f384 <__fxstatat@plt+0xc934>  // b.any
  40f398:	ldrb	w0, [x19, #16]!
  40f39c:	ldp	x21, x22, [sp, #32]
  40f3a0:	cmp	w0, #0x0
  40f3a4:	csel	x0, x19, xzr, ne  // ne = any
  40f3a8:	ldp	x19, x20, [sp, #16]
  40f3ac:	ldp	x29, x30, [sp], #48
  40f3b0:	ret
  40f3b4:	mov	w0, w20
  40f3b8:	bl	402810 <getpwuid@plt>
  40f3bc:	cbz	x0, 40f410 <__fxstatat@plt+0xc9c0>
  40f3c0:	ldr	x22, [x0]
  40f3c4:	mov	x0, x22
  40f3c8:	bl	402430 <strlen@plt>
  40f3cc:	add	x0, x0, #0x18
  40f3d0:	and	x0, x0, #0xfffffffffffffff8
  40f3d4:	bl	415c40 <__fxstatat@plt+0x131f0>
  40f3d8:	mov	x19, x0
  40f3dc:	str	w20, [x0], #16
  40f3e0:	mov	x1, x22
  40f3e4:	bl	4028d0 <strcpy@plt>
  40f3e8:	ldr	x0, [x21, #1848]
  40f3ec:	str	x0, [x19, #8]
  40f3f0:	str	x19, [x21, #1848]
  40f3f4:	ldrb	w0, [x19, #16]!
  40f3f8:	ldp	x21, x22, [sp, #32]
  40f3fc:	cmp	w0, #0x0
  40f400:	csel	x0, x19, xzr, ne  // ne = any
  40f404:	ldp	x19, x20, [sp, #16]
  40f408:	ldp	x29, x30, [sp], #48
  40f40c:	ret
  40f410:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40f414:	mov	x0, #0x18                  	// #24
  40f418:	add	x22, x22, #0x58
  40f41c:	b	40f3d4 <__fxstatat@plt+0xc984>
  40f420:	stp	x29, x30, [sp, #-64]!
  40f424:	mov	x29, sp
  40f428:	stp	x21, x22, [sp, #32]
  40f42c:	adrp	x22, 434000 <__progname@@GLIBC_2.17+0xa38>
  40f430:	stp	x19, x20, [sp, #16]
  40f434:	mov	x20, x0
  40f438:	ldr	x19, [x22, #1848]
  40f43c:	cbz	x19, 40f480 <__fxstatat@plt+0xca30>
  40f440:	ldrb	w21, [x0]
  40f444:	b	40f450 <__fxstatat@plt+0xca00>
  40f448:	ldr	x19, [x19, #8]
  40f44c:	cbz	x19, 40f480 <__fxstatat@plt+0xca30>
  40f450:	ldrb	w2, [x19, #16]
  40f454:	cmp	w2, w21
  40f458:	b.ne	40f448 <__fxstatat@plt+0xc9f8>  // b.any
  40f45c:	mov	x1, x20
  40f460:	add	x0, x19, #0x10
  40f464:	bl	402800 <strcmp@plt>
  40f468:	cbnz	w0, 40f448 <__fxstatat@plt+0xc9f8>
  40f46c:	mov	x0, x19
  40f470:	ldp	x19, x20, [sp, #16]
  40f474:	ldp	x21, x22, [sp, #32]
  40f478:	ldp	x29, x30, [sp], #64
  40f47c:	ret
  40f480:	str	x23, [sp, #48]
  40f484:	add	x23, x22, #0x738
  40f488:	ldr	x19, [x23, #8]
  40f48c:	cbz	x19, 40f4d8 <__fxstatat@plt+0xca88>
  40f490:	ldrb	w21, [x20]
  40f494:	b	40f4a0 <__fxstatat@plt+0xca50>
  40f498:	ldr	x19, [x19, #8]
  40f49c:	cbz	x19, 40f4d8 <__fxstatat@plt+0xca88>
  40f4a0:	ldrb	w2, [x19, #16]
  40f4a4:	cmp	w2, w21
  40f4a8:	b.ne	40f498 <__fxstatat@plt+0xca48>  // b.any
  40f4ac:	mov	x1, x20
  40f4b0:	add	x0, x19, #0x10
  40f4b4:	bl	402800 <strcmp@plt>
  40f4b8:	cbnz	w0, 40f498 <__fxstatat@plt+0xca48>
  40f4bc:	mov	x19, #0x0                   	// #0
  40f4c0:	mov	x0, x19
  40f4c4:	ldp	x19, x20, [sp, #16]
  40f4c8:	ldp	x21, x22, [sp, #32]
  40f4cc:	ldr	x23, [sp, #48]
  40f4d0:	ldp	x29, x30, [sp], #64
  40f4d4:	ret
  40f4d8:	mov	x0, x20
  40f4dc:	bl	402690 <getpwnam@plt>
  40f4e0:	mov	x19, x0
  40f4e4:	mov	x0, x20
  40f4e8:	bl	402430 <strlen@plt>
  40f4ec:	add	x0, x0, #0x18
  40f4f0:	and	x0, x0, #0xfffffffffffffff8
  40f4f4:	bl	415c40 <__fxstatat@plt+0x131f0>
  40f4f8:	mov	x1, x20
  40f4fc:	mov	x20, x0
  40f500:	add	x0, x0, #0x10
  40f504:	bl	4028d0 <strcpy@plt>
  40f508:	cbz	x19, 40f53c <__fxstatat@plt+0xcaec>
  40f50c:	ldr	x0, [x22, #1848]
  40f510:	str	x20, [x22, #1848]
  40f514:	ldr	w1, [x19, #16]
  40f518:	mov	x19, x20
  40f51c:	ldr	x23, [sp, #48]
  40f520:	str	w1, [x20]
  40f524:	str	x0, [x20, #8]
  40f528:	mov	x0, x19
  40f52c:	ldp	x19, x20, [sp, #16]
  40f530:	ldp	x21, x22, [sp, #32]
  40f534:	ldp	x29, x30, [sp], #64
  40f538:	ret
  40f53c:	ldr	x0, [x23, #8]
  40f540:	str	x0, [x20, #8]
  40f544:	mov	x0, x19
  40f548:	str	x20, [x23, #8]
  40f54c:	ldp	x19, x20, [sp, #16]
  40f550:	ldp	x21, x22, [sp, #32]
  40f554:	ldr	x23, [sp, #48]
  40f558:	ldp	x29, x30, [sp], #64
  40f55c:	ret
  40f560:	stp	x29, x30, [sp, #-48]!
  40f564:	mov	x29, sp
  40f568:	stp	x21, x22, [sp, #32]
  40f56c:	adrp	x21, 434000 <__progname@@GLIBC_2.17+0xa38>
  40f570:	add	x21, x21, #0x738
  40f574:	stp	x19, x20, [sp, #16]
  40f578:	mov	w20, w0
  40f57c:	ldr	x19, [x21, #16]
  40f580:	cbnz	x19, 40f590 <__fxstatat@plt+0xcb40>
  40f584:	b	40f5b8 <__fxstatat@plt+0xcb68>
  40f588:	ldr	x19, [x19, #8]
  40f58c:	cbz	x19, 40f5b8 <__fxstatat@plt+0xcb68>
  40f590:	ldr	w1, [x19]
  40f594:	cmp	w1, w20
  40f598:	b.ne	40f588 <__fxstatat@plt+0xcb38>  // b.any
  40f59c:	ldrb	w0, [x19, #16]!
  40f5a0:	ldp	x21, x22, [sp, #32]
  40f5a4:	cmp	w0, #0x0
  40f5a8:	csel	x0, x19, xzr, ne  // ne = any
  40f5ac:	ldp	x19, x20, [sp, #16]
  40f5b0:	ldp	x29, x30, [sp], #48
  40f5b4:	ret
  40f5b8:	mov	w0, w20
  40f5bc:	bl	402a10 <getgrgid@plt>
  40f5c0:	cbz	x0, 40f614 <__fxstatat@plt+0xcbc4>
  40f5c4:	ldr	x22, [x0]
  40f5c8:	mov	x0, x22
  40f5cc:	bl	402430 <strlen@plt>
  40f5d0:	add	x0, x0, #0x18
  40f5d4:	and	x0, x0, #0xfffffffffffffff8
  40f5d8:	bl	415c40 <__fxstatat@plt+0x131f0>
  40f5dc:	mov	x19, x0
  40f5e0:	str	w20, [x0], #16
  40f5e4:	mov	x1, x22
  40f5e8:	bl	4028d0 <strcpy@plt>
  40f5ec:	ldr	x0, [x21, #16]
  40f5f0:	str	x0, [x19, #8]
  40f5f4:	str	x19, [x21, #16]
  40f5f8:	ldrb	w0, [x19, #16]!
  40f5fc:	ldp	x21, x22, [sp, #32]
  40f600:	cmp	w0, #0x0
  40f604:	csel	x0, x19, xzr, ne  // ne = any
  40f608:	ldp	x19, x20, [sp, #16]
  40f60c:	ldp	x29, x30, [sp], #48
  40f610:	ret
  40f614:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x2f80>
  40f618:	mov	x0, #0x18                  	// #24
  40f61c:	add	x22, x22, #0x58
  40f620:	b	40f5d8 <__fxstatat@plt+0xcb88>
  40f624:	nop
  40f628:	stp	x29, x30, [sp, #-48]!
  40f62c:	mov	x29, sp
  40f630:	stp	x21, x22, [sp, #32]
  40f634:	adrp	x22, 434000 <__progname@@GLIBC_2.17+0xa38>
  40f638:	add	x22, x22, #0x738
  40f63c:	stp	x19, x20, [sp, #16]
  40f640:	mov	x20, x0
  40f644:	ldr	x19, [x22, #16]
  40f648:	cbz	x19, 40f68c <__fxstatat@plt+0xcc3c>
  40f64c:	ldrb	w21, [x0]
  40f650:	b	40f65c <__fxstatat@plt+0xcc0c>
  40f654:	ldr	x19, [x19, #8]
  40f658:	cbz	x19, 40f68c <__fxstatat@plt+0xcc3c>
  40f65c:	ldrb	w2, [x19, #16]
  40f660:	cmp	w2, w21
  40f664:	b.ne	40f654 <__fxstatat@plt+0xcc04>  // b.any
  40f668:	mov	x1, x20
  40f66c:	add	x0, x19, #0x10
  40f670:	bl	402800 <strcmp@plt>
  40f674:	cbnz	w0, 40f654 <__fxstatat@plt+0xcc04>
  40f678:	mov	x0, x19
  40f67c:	ldp	x19, x20, [sp, #16]
  40f680:	ldp	x21, x22, [sp, #32]
  40f684:	ldp	x29, x30, [sp], #48
  40f688:	ret
  40f68c:	ldr	x19, [x22, #24]
  40f690:	cbz	x19, 40f6d8 <__fxstatat@plt+0xcc88>
  40f694:	ldrb	w21, [x20]
  40f698:	b	40f6a4 <__fxstatat@plt+0xcc54>
  40f69c:	ldr	x19, [x19, #8]
  40f6a0:	cbz	x19, 40f6d8 <__fxstatat@plt+0xcc88>
  40f6a4:	ldrb	w2, [x19, #16]
  40f6a8:	cmp	w2, w21
  40f6ac:	b.ne	40f69c <__fxstatat@plt+0xcc4c>  // b.any
  40f6b0:	mov	x1, x20
  40f6b4:	add	x0, x19, #0x10
  40f6b8:	bl	402800 <strcmp@plt>
  40f6bc:	cbnz	w0, 40f69c <__fxstatat@plt+0xcc4c>
  40f6c0:	mov	x19, #0x0                   	// #0
  40f6c4:	mov	x0, x19
  40f6c8:	ldp	x19, x20, [sp, #16]
  40f6cc:	ldp	x21, x22, [sp, #32]
  40f6d0:	ldp	x29, x30, [sp], #48
  40f6d4:	ret
  40f6d8:	mov	x0, x20
  40f6dc:	bl	4024e0 <getgrnam@plt>
  40f6e0:	mov	x19, x0
  40f6e4:	mov	x0, x20
  40f6e8:	bl	402430 <strlen@plt>
  40f6ec:	add	x0, x0, #0x18
  40f6f0:	and	x0, x0, #0xfffffffffffffff8
  40f6f4:	bl	415c40 <__fxstatat@plt+0x131f0>
  40f6f8:	mov	x1, x20
  40f6fc:	mov	x20, x0
  40f700:	add	x0, x0, #0x10
  40f704:	bl	4028d0 <strcpy@plt>
  40f708:	cbz	x19, 40f738 <__fxstatat@plt+0xcce8>
  40f70c:	ldr	w1, [x19, #16]
  40f710:	mov	x19, x20
  40f714:	ldr	x0, [x22, #16]
  40f718:	str	w1, [x20]
  40f71c:	str	x0, [x20, #8]
  40f720:	mov	x0, x19
  40f724:	str	x20, [x22, #16]
  40f728:	ldp	x19, x20, [sp, #16]
  40f72c:	ldp	x21, x22, [sp, #32]
  40f730:	ldp	x29, x30, [sp], #48
  40f734:	ret
  40f738:	ldr	x0, [x22, #24]
  40f73c:	str	x0, [x20, #8]
  40f740:	mov	x0, x19
  40f744:	str	x20, [x22, #24]
  40f748:	ldp	x19, x20, [sp, #16]
  40f74c:	ldp	x21, x22, [sp, #32]
  40f750:	ldp	x29, x30, [sp], #48
  40f754:	ret
  40f758:	strb	wzr, [x1, #20]
  40f75c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  40f760:	mov	x2, x0
  40f764:	movk	x4, #0xcccd
  40f768:	add	x0, x1, #0x14
  40f76c:	tbnz	x2, #63, 40f794 <__fxstatat@plt+0xcd44>
  40f770:	umulh	x3, x2, x4
  40f774:	lsr	x3, x3, #3
  40f778:	add	x1, x3, x3, lsl #2
  40f77c:	sub	x1, x2, x1, lsl #1
  40f780:	mov	x2, x3
  40f784:	add	w1, w1, #0x30
  40f788:	strb	w1, [x0, #-1]!
  40f78c:	cbnz	x3, 40f770 <__fxstatat@plt+0xcd20>
  40f790:	ret
  40f794:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  40f798:	mov	w5, #0x30                  	// #48
  40f79c:	movk	x6, #0x6667
  40f7a0:	smulh	x1, x2, x6
  40f7a4:	mov	x4, x0
  40f7a8:	asr	x1, x1, #2
  40f7ac:	sub	x1, x1, x2, asr #63
  40f7b0:	add	x3, x1, x1, lsl #2
  40f7b4:	sub	x3, x2, x3, lsl #1
  40f7b8:	mov	x2, x1
  40f7bc:	sub	w1, w5, w3
  40f7c0:	strb	w1, [x0, #-1]!
  40f7c4:	cbnz	x2, 40f7a0 <__fxstatat@plt+0xcd50>
  40f7c8:	mov	w1, #0x2d                  	// #45
  40f7cc:	sturb	w1, [x0, #-1]
  40f7d0:	sub	x0, x4, #0x2
  40f7d4:	ret
  40f7d8:	mov	x3, x0
  40f7dc:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  40f7e0:	add	x0, x1, #0x14
  40f7e4:	movk	x4, #0xcccd
  40f7e8:	strb	wzr, [x1, #20]
  40f7ec:	nop
  40f7f0:	umulh	x2, x3, x4
  40f7f4:	cmp	x3, #0x9
  40f7f8:	lsr	x2, x2, #3
  40f7fc:	add	x1, x2, x2, lsl #2
  40f800:	sub	x1, x3, x1, lsl #1
  40f804:	mov	x3, x2
  40f808:	add	w1, w1, #0x30
  40f80c:	strb	w1, [x0, #-1]!
  40f810:	b.hi	40f7f0 <__fxstatat@plt+0xcda0>  // b.pmore
  40f814:	ret
  40f818:	stp	x29, x30, [sp, #-112]!
  40f81c:	mov	x29, sp
  40f820:	stp	x19, x20, [sp, #16]
  40f824:	mov	x20, x1
  40f828:	mov	x19, x2
  40f82c:	stp	x21, x22, [sp, #32]
  40f830:	mov	x22, x3
  40f834:	mov	w21, w5
  40f838:	stp	x23, x24, [sp, #48]
  40f83c:	mov	w23, w4
  40f840:	stp	x25, x26, [sp, #64]
  40f844:	mov	x26, x0
  40f848:	stp	x27, x28, [sp, #80]
  40f84c:	bl	402430 <strlen@plt>
  40f850:	mov	x28, x0
  40f854:	tbz	w21, #1, 40f988 <__fxstatat@plt+0xcf38>
  40f858:	mov	x27, x28
  40f85c:	mov	x25, #0x0                   	// #0
  40f860:	mov	x24, #0x0                   	// #0
  40f864:	ldr	x0, [x22]
  40f868:	cmp	x0, x27
  40f86c:	b.cs	40f95c <__fxstatat@plt+0xcf0c>  // b.hs, b.nlast
  40f870:	mov	x28, x0
  40f874:	mov	x1, #0x0                   	// #0
  40f878:	str	x0, [x22]
  40f87c:	cbz	w23, 40f974 <__fxstatat@plt+0xcf24>
  40f880:	cmp	w23, #0x1
  40f884:	mov	x22, #0x0                   	// #0
  40f888:	b.eq	40f898 <__fxstatat@plt+0xce48>  // b.none
  40f88c:	lsr	x22, x1, #1
  40f890:	and	x1, x1, #0x1
  40f894:	add	x1, x1, x22
  40f898:	add	x23, x1, x28
  40f89c:	tbz	w21, #2, 40f8a8 <__fxstatat@plt+0xce58>
  40f8a0:	mov	x23, x28
  40f8a4:	mov	x1, #0x0                   	// #0
  40f8a8:	tbnz	w21, #3, 40f980 <__fxstatat@plt+0xcf30>
  40f8ac:	add	x23, x23, x22
  40f8b0:	cbz	x19, 40f928 <__fxstatat@plt+0xced8>
  40f8b4:	sub	x19, x19, #0x1
  40f8b8:	cmp	x1, #0x0
  40f8bc:	add	x19, x20, x19
  40f8c0:	mov	x0, x20
  40f8c4:	ccmp	x20, x19, #0x2, ne  // ne = any
  40f8c8:	b.cs	40f8e4 <__fxstatat@plt+0xce94>  // b.hs, b.nlast
  40f8cc:	mov	w3, #0x20                  	// #32
  40f8d0:	strb	w3, [x0], #1
  40f8d4:	sub	x2, x20, x0
  40f8d8:	cmn	x2, x1
  40f8dc:	ccmp	x19, x0, #0x0, ne  // ne = any
  40f8e0:	b.hi	40f8d0 <__fxstatat@plt+0xce80>  // b.pmore
  40f8e4:	sub	x2, x19, x0
  40f8e8:	strb	wzr, [x0]
  40f8ec:	cmp	x2, x28
  40f8f0:	mov	x1, x26
  40f8f4:	csel	x2, x2, x28, ls  // ls = plast
  40f8f8:	bl	402860 <mempcpy@plt>
  40f8fc:	mov	x1, x0
  40f900:	cmp	x22, #0x0
  40f904:	ccmp	x19, x0, #0x0, ne  // ne = any
  40f908:	b.ls	40f924 <__fxstatat@plt+0xced4>  // b.plast
  40f90c:	mov	w3, #0x20                  	// #32
  40f910:	strb	w3, [x1], #1
  40f914:	sub	x2, x22, x1
  40f918:	cmn	x0, x2
  40f91c:	ccmp	x19, x1, #0x0, ne  // ne = any
  40f920:	b.hi	40f910 <__fxstatat@plt+0xcec0>  // b.pmore
  40f924:	strb	wzr, [x1]
  40f928:	mov	x0, x25
  40f92c:	bl	402840 <free@plt>
  40f930:	mov	x0, x24
  40f934:	bl	402840 <free@plt>
  40f938:	mov	x0, x23
  40f93c:	ldp	x19, x20, [sp, #16]
  40f940:	ldp	x21, x22, [sp, #32]
  40f944:	ldp	x23, x24, [sp, #48]
  40f948:	ldp	x25, x26, [sp, #64]
  40f94c:	ldp	x27, x28, [sp, #80]
  40f950:	ldp	x29, x30, [sp], #112
  40f954:	ret
  40f958:	mov	x24, #0x0                   	// #0
  40f95c:	cmp	x27, x0
  40f960:	b.cs	40fb28 <__fxstatat@plt+0xd0d8>  // b.hs, b.nlast
  40f964:	sub	x1, x0, x27
  40f968:	mov	x0, x27
  40f96c:	str	x0, [x22]
  40f970:	cbnz	w23, 40f880 <__fxstatat@plt+0xce30>
  40f974:	mov	x22, x1
  40f978:	mov	x1, #0x0                   	// #0
  40f97c:	b	40f898 <__fxstatat@plt+0xce48>
  40f980:	mov	x22, #0x0                   	// #0
  40f984:	b	40f8b0 <__fxstatat@plt+0xce60>
  40f988:	bl	402850 <__ctype_get_mb_cur_max@plt>
  40f98c:	cmp	x0, #0x1
  40f990:	b.ls	40f858 <__fxstatat@plt+0xce08>  // b.plast
  40f994:	mov	x1, x26
  40f998:	mov	x2, #0x0                   	// #0
  40f99c:	mov	x0, #0x0                   	// #0
  40f9a0:	bl	402450 <mbstowcs@plt>
  40f9a4:	cmn	x0, #0x1
  40f9a8:	b.ne	40f9c0 <__fxstatat@plt+0xcf70>  // b.any
  40f9ac:	tbnz	w21, #0, 40f858 <__fxstatat@plt+0xce08>
  40f9b0:	mov	x25, #0x0                   	// #0
  40f9b4:	mov	x24, #0x0                   	// #0
  40f9b8:	mov	x23, #0xffffffffffffffff    	// #-1
  40f9bc:	b	40f928 <__fxstatat@plt+0xced8>
  40f9c0:	add	x27, x0, #0x1
  40f9c4:	lsl	x24, x27, #2
  40f9c8:	mov	x0, x24
  40f9cc:	bl	4025f0 <malloc@plt>
  40f9d0:	mov	x25, x0
  40f9d4:	cbz	x0, 40fac0 <__fxstatat@plt+0xd070>
  40f9d8:	mov	x2, x27
  40f9dc:	mov	x1, x26
  40f9e0:	bl	402450 <mbstowcs@plt>
  40f9e4:	cbz	x0, 40fac4 <__fxstatat@plt+0xd074>
  40f9e8:	add	x24, x25, x24
  40f9ec:	stur	wzr, [x24, #-4]
  40f9f0:	ldr	w0, [x25]
  40f9f4:	cbz	w0, 40fb08 <__fxstatat@plt+0xd0b8>
  40f9f8:	mov	x24, x25
  40f9fc:	str	wzr, [sp, #104]
  40fa00:	bl	4029c0 <iswprint@plt>
  40fa04:	cbnz	w0, 40fad0 <__fxstatat@plt+0xd080>
  40fa08:	mov	w0, #0xfffd                	// #65533
  40fa0c:	str	w0, [x24]
  40fa10:	mov	w0, #0x1                   	// #1
  40fa14:	str	w0, [sp, #104]
  40fa18:	ldr	w0, [x24, #4]!
  40fa1c:	cbnz	w0, 40fa00 <__fxstatat@plt+0xcfb0>
  40fa20:	mov	x1, x27
  40fa24:	mov	x0, x25
  40fa28:	bl	402620 <wcswidth@plt>
  40fa2c:	sxtw	x27, w0
  40fa30:	mov	x1, x25
  40fa34:	mov	x2, #0x0                   	// #0
  40fa38:	mov	x0, #0x0                   	// #0
  40fa3c:	bl	402930 <wcstombs@plt>
  40fa40:	add	x0, x0, #0x1
  40fa44:	str	x0, [sp, #104]
  40fa48:	bl	4025f0 <malloc@plt>
  40fa4c:	mov	x24, x0
  40fa50:	cbz	x0, 40fb1c <__fxstatat@plt+0xd0cc>
  40fa54:	ldr	w0, [x25]
  40fa58:	mov	x28, x25
  40fa5c:	mov	x27, #0x0                   	// #0
  40fa60:	ldr	x26, [x22]
  40fa64:	cbnz	w0, 40fa78 <__fxstatat@plt+0xd028>
  40fa68:	b	40faa0 <__fxstatat@plt+0xd050>
  40fa6c:	ldr	w0, [x28, #4]!
  40fa70:	mov	x27, x1
  40fa74:	cbz	w0, 40faa0 <__fxstatat@plt+0xd050>
  40fa78:	bl	402600 <wcwidth@plt>
  40fa7c:	sxtw	x1, w0
  40fa80:	cmn	w0, #0x1
  40fa84:	b.ne	40fa94 <__fxstatat@plt+0xd044>  // b.any
  40fa88:	mov	w0, #0xfffd                	// #65533
  40fa8c:	mov	x1, #0x1                   	// #1
  40fa90:	str	w0, [x28]
  40fa94:	add	x1, x1, x27
  40fa98:	cmp	x26, x1
  40fa9c:	b.cs	40fa6c <__fxstatat@plt+0xd01c>  // b.hs, b.nlast
  40faa0:	ldr	x2, [sp, #104]
  40faa4:	str	wzr, [x28]
  40faa8:	mov	x1, x25
  40faac:	mov	x0, x24
  40fab0:	mov	x26, x24
  40fab4:	bl	402930 <wcstombs@plt>
  40fab8:	mov	x28, x0
  40fabc:	b	40f864 <__fxstatat@plt+0xce14>
  40fac0:	tbz	w21, #0, 40f9b0 <__fxstatat@plt+0xcf60>
  40fac4:	mov	x27, x28
  40fac8:	mov	x24, #0x0                   	// #0
  40facc:	b	40f864 <__fxstatat@plt+0xce14>
  40fad0:	ldr	w0, [x24, #4]!
  40fad4:	cbnz	w0, 40fa00 <__fxstatat@plt+0xcfb0>
  40fad8:	mov	x1, x27
  40fadc:	mov	x0, x25
  40fae0:	bl	402620 <wcswidth@plt>
  40fae4:	sxtw	x27, w0
  40fae8:	ldr	w0, [sp, #104]
  40faec:	cbnz	w0, 40fa30 <__fxstatat@plt+0xcfe0>
  40faf0:	ldr	x0, [x22]
  40faf4:	cmp	x0, x27
  40faf8:	b.cs	40f958 <__fxstatat@plt+0xcf08>  // b.hs, b.nlast
  40fafc:	add	x0, x28, #0x1
  40fb00:	str	x0, [sp, #104]
  40fb04:	b	40fa48 <__fxstatat@plt+0xcff8>
  40fb08:	mov	x1, x27
  40fb0c:	mov	x0, x25
  40fb10:	bl	402620 <wcswidth@plt>
  40fb14:	sxtw	x27, w0
  40fb18:	b	40faf0 <__fxstatat@plt+0xd0a0>
  40fb1c:	tbnz	w21, #0, 40f864 <__fxstatat@plt+0xce14>
  40fb20:	mov	x23, #0xffffffffffffffff    	// #-1
  40fb24:	b	40f928 <__fxstatat@plt+0xced8>
  40fb28:	mov	x0, x27
  40fb2c:	mov	x1, #0x0                   	// #0
  40fb30:	b	40f878 <__fxstatat@plt+0xce28>
  40fb34:	nop
  40fb38:	stp	x29, x30, [sp, #-80]!
  40fb3c:	mov	x29, sp
  40fb40:	str	x25, [sp, #64]
  40fb44:	ldr	x25, [x1]
  40fb48:	stp	x21, x22, [sp, #32]
  40fb4c:	mov	x21, x1
  40fb50:	mov	w22, w3
  40fb54:	stp	x23, x24, [sp, #48]
  40fb58:	mov	x24, x0
  40fb5c:	mov	w23, w2
  40fb60:	mov	x0, x25
  40fb64:	stp	x19, x20, [sp, #16]
  40fb68:	mov	x19, #0x0                   	// #0
  40fb6c:	nop
  40fb70:	add	x20, x0, #0x1
  40fb74:	mov	x1, x20
  40fb78:	mov	x0, x19
  40fb7c:	bl	4026e0 <realloc@plt>
  40fb80:	mov	x1, x0
  40fb84:	mov	x6, x19
  40fb88:	mov	w5, w22
  40fb8c:	mov	w4, w23
  40fb90:	mov	x3, x21
  40fb94:	mov	x2, x20
  40fb98:	mov	x0, x24
  40fb9c:	mov	x19, x1
  40fba0:	cbz	x1, 40fc00 <__fxstatat@plt+0xd1b0>
  40fba4:	str	x25, [x21]
  40fba8:	bl	40f818 <__fxstatat@plt+0xcdc8>
  40fbac:	cmn	x0, #0x1
  40fbb0:	b.eq	40fbd8 <__fxstatat@plt+0xd188>  // b.none
  40fbb4:	cmp	x20, x0
  40fbb8:	b.ls	40fb70 <__fxstatat@plt+0xd120>  // b.plast
  40fbbc:	mov	x0, x19
  40fbc0:	ldp	x19, x20, [sp, #16]
  40fbc4:	ldp	x21, x22, [sp, #32]
  40fbc8:	ldp	x23, x24, [sp, #48]
  40fbcc:	ldr	x25, [sp, #64]
  40fbd0:	ldp	x29, x30, [sp], #80
  40fbd4:	ret
  40fbd8:	mov	x0, x19
  40fbdc:	mov	x19, #0x0                   	// #0
  40fbe0:	bl	402840 <free@plt>
  40fbe4:	mov	x0, x19
  40fbe8:	ldp	x19, x20, [sp, #16]
  40fbec:	ldp	x21, x22, [sp, #32]
  40fbf0:	ldp	x23, x24, [sp, #48]
  40fbf4:	ldr	x25, [sp, #64]
  40fbf8:	ldp	x29, x30, [sp], #80
  40fbfc:	ret
  40fc00:	mov	x0, x6
  40fc04:	bl	402840 <free@plt>
  40fc08:	b	40fbbc <__fxstatat@plt+0xd16c>
  40fc0c:	nop
  40fc10:	stp	x29, x30, [sp, #-96]!
  40fc14:	mov	x29, sp
  40fc18:	stp	x21, x22, [sp, #32]
  40fc1c:	mov	x21, x1
  40fc20:	stp	x25, x26, [sp, #64]
  40fc24:	mov	x25, x0
  40fc28:	stp	x19, x20, [sp, #16]
  40fc2c:	add	x20, x25, x21
  40fc30:	stp	x23, x24, [sp, #48]
  40fc34:	mov	w23, w2
  40fc38:	bl	402850 <__ctype_get_mb_cur_max@plt>
  40fc3c:	cmp	x0, #0x1
  40fc40:	b.ls	40fddc <__fxstatat@plt+0xd38c>  // b.plast
  40fc44:	cmp	x25, x20
  40fc48:	b.cs	40fe54 <__fxstatat@plt+0xd404>  // b.hs, b.nlast
  40fc4c:	ldrb	w2, [x25]
  40fc50:	and	w24, w23, #0x2
  40fc54:	mov	w19, #0x0                   	// #0
  40fc58:	and	w23, w23, #0x1
  40fc5c:	cmp	w2, #0x5f
  40fc60:	mov	x22, #0x1                   	// #1
  40fc64:	mov	w21, #0x7fffffff            	// #2147483647
  40fc68:	b.hi	40fd50 <__fxstatat@plt+0xd300>  // b.pmore
  40fc6c:	nop
  40fc70:	cmp	w2, #0x40
  40fc74:	b.hi	40fd34 <__fxstatat@plt+0xd2e4>  // b.pmore
  40fc78:	cmp	w2, #0x23
  40fc7c:	b.hi	40fd24 <__fxstatat@plt+0xd2d4>  // b.pmore
  40fc80:	cmp	w2, #0x1f
  40fc84:	b.hi	40fd34 <__fxstatat@plt+0xd2e4>  // b.pmore
  40fc88:	str	xzr, [sp, #88]
  40fc8c:	cbz	w24, 40fcb0 <__fxstatat@plt+0xd260>
  40fc90:	b	40fd7c <__fxstatat@plt+0xd32c>
  40fc94:	cmp	w1, w0
  40fc98:	b.lt	40fd04 <__fxstatat@plt+0xd2b4>  // b.tstop
  40fc9c:	add	w19, w19, w0
  40fca0:	add	x25, x25, x26
  40fca4:	add	x0, sp, #0x58
  40fca8:	bl	402770 <mbsinit@plt>
  40fcac:	cbnz	w0, 40fd3c <__fxstatat@plt+0xd2ec>
  40fcb0:	add	x3, sp, #0x58
  40fcb4:	sub	x2, x20, x25
  40fcb8:	mov	x1, x25
  40fcbc:	add	x0, sp, #0x54
  40fcc0:	bl	416ba0 <__fxstatat@plt+0x14150>
  40fcc4:	cmn	x0, #0x1
  40fcc8:	b.eq	40fe38 <__fxstatat@plt+0xd3e8>  // b.none
  40fccc:	cmn	x0, #0x2
  40fcd0:	b.eq	40fe44 <__fxstatat@plt+0xd3f4>  // b.none
  40fcd4:	cmp	x0, #0x0
  40fcd8:	csel	x26, x0, x22, ne  // ne = any
  40fcdc:	ldr	w0, [sp, #84]
  40fce0:	bl	402600 <wcwidth@plt>
  40fce4:	sub	w1, w21, w19
  40fce8:	tbz	w0, #31, 40fc94 <__fxstatat@plt+0xd244>
  40fcec:	ldr	w0, [sp, #84]
  40fcf0:	bl	402520 <iswcntrl@plt>
  40fcf4:	cbnz	w0, 40fca0 <__fxstatat@plt+0xd250>
  40fcf8:	cmp	w19, w21
  40fcfc:	add	w19, w19, #0x1
  40fd00:	b.ne	40fca0 <__fxstatat@plt+0xd250>  // b.any
  40fd04:	mov	w19, #0x7fffffff            	// #2147483647
  40fd08:	mov	w0, w19
  40fd0c:	ldp	x19, x20, [sp, #16]
  40fd10:	ldp	x21, x22, [sp, #32]
  40fd14:	ldp	x23, x24, [sp, #48]
  40fd18:	ldp	x25, x26, [sp, #64]
  40fd1c:	ldp	x29, x30, [sp], #96
  40fd20:	ret
  40fd24:	sub	w2, w2, #0x25
  40fd28:	and	w2, w2, #0xff
  40fd2c:	cmp	w2, #0x1a
  40fd30:	b.hi	40fc88 <__fxstatat@plt+0xd238>  // b.pmore
  40fd34:	add	x25, x25, #0x1
  40fd38:	add	w19, w19, #0x1
  40fd3c:	cmp	x25, x20
  40fd40:	b.cs	40fd08 <__fxstatat@plt+0xd2b8>  // b.hs, b.nlast
  40fd44:	ldrb	w2, [x25]
  40fd48:	cmp	w2, #0x5f
  40fd4c:	b.ls	40fc70 <__fxstatat@plt+0xd220>  // b.plast
  40fd50:	sub	w2, w2, #0x61
  40fd54:	and	w2, w2, #0xff
  40fd58:	cmp	w2, #0x1d
  40fd5c:	b.ls	40fd34 <__fxstatat@plt+0xd2e4>  // b.plast
  40fd60:	b	40fc88 <__fxstatat@plt+0xd238>
  40fd64:	cmp	w0, w1
  40fd68:	b.gt	40fd04 <__fxstatat@plt+0xd2b4>
  40fd6c:	add	w19, w19, w0
  40fd70:	add	x0, sp, #0x58
  40fd74:	bl	402770 <mbsinit@plt>
  40fd78:	cbnz	w0, 40fd3c <__fxstatat@plt+0xd2ec>
  40fd7c:	add	x3, sp, #0x58
  40fd80:	sub	x2, x20, x25
  40fd84:	mov	x1, x25
  40fd88:	add	x0, sp, #0x54
  40fd8c:	bl	416ba0 <__fxstatat@plt+0x14150>
  40fd90:	cmn	x0, #0x1
  40fd94:	b.eq	40fe38 <__fxstatat@plt+0xd3e8>  // b.none
  40fd98:	cmn	x0, #0x2
  40fd9c:	b.eq	40fe44 <__fxstatat@plt+0xd3f4>  // b.none
  40fda0:	cmp	x0, #0x0
  40fda4:	csel	x1, x0, x22, ne  // ne = any
  40fda8:	ldr	w0, [sp, #84]
  40fdac:	add	x25, x25, x1
  40fdb0:	bl	402600 <wcwidth@plt>
  40fdb4:	sub	w1, w21, w19
  40fdb8:	tbz	w0, #31, 40fd64 <__fxstatat@plt+0xd314>
  40fdbc:	mov	w19, #0xffffffff            	// #-1
  40fdc0:	mov	w0, w19
  40fdc4:	ldp	x19, x20, [sp, #16]
  40fdc8:	ldp	x21, x22, [sp, #32]
  40fdcc:	ldp	x23, x24, [sp, #48]
  40fdd0:	ldp	x25, x26, [sp, #64]
  40fdd4:	ldp	x29, x30, [sp], #96
  40fdd8:	ret
  40fddc:	cmp	x25, x20
  40fde0:	b.cs	40fe54 <__fxstatat@plt+0xd404>  // b.hs, b.nlast
  40fde4:	bl	402820 <__ctype_b_loc@plt>
  40fde8:	and	w19, w23, #0x2
  40fdec:	mov	w2, #0x7fffffff            	// #2147483647
  40fdf0:	ldr	x3, [x0]
  40fdf4:	tbnz	w23, #1, 40fe5c <__fxstatat@plt+0xd40c>
  40fdf8:	ldrb	w0, [x25], #1
  40fdfc:	ldrh	w0, [x3, x0, lsl #1]
  40fe00:	tbnz	w0, #14, 40fe08 <__fxstatat@plt+0xd3b8>
  40fe04:	tbnz	w0, #1, 40fe14 <__fxstatat@plt+0xd3c4>
  40fe08:	cmp	w19, w2
  40fe0c:	b.eq	40fd08 <__fxstatat@plt+0xd2b8>  // b.none
  40fe10:	add	w19, w19, #0x1
  40fe14:	cmp	x20, x25
  40fe18:	b.ne	40fdf8 <__fxstatat@plt+0xd3a8>  // b.any
  40fe1c:	mov	w0, w19
  40fe20:	ldp	x19, x20, [sp, #16]
  40fe24:	ldp	x21, x22, [sp, #32]
  40fe28:	ldp	x23, x24, [sp, #48]
  40fe2c:	ldp	x25, x26, [sp, #64]
  40fe30:	ldp	x29, x30, [sp], #96
  40fe34:	ret
  40fe38:	cbz	w23, 40fd34 <__fxstatat@plt+0xd2e4>
  40fe3c:	mov	w19, #0xffffffff            	// #-1
  40fe40:	b	40fdc0 <__fxstatat@plt+0xd370>
  40fe44:	cbnz	w23, 40fdbc <__fxstatat@plt+0xd36c>
  40fe48:	add	w19, w19, #0x1
  40fe4c:	mov	x25, x20
  40fe50:	b	40fd3c <__fxstatat@plt+0xd2ec>
  40fe54:	mov	w19, #0x0                   	// #0
  40fe58:	b	40fd08 <__fxstatat@plt+0xd2b8>
  40fe5c:	mov	x0, #0x0                   	// #0
  40fe60:	mov	x2, #0x7fffffff            	// #2147483647
  40fe64:	b	40fe7c <__fxstatat@plt+0xd42c>
  40fe68:	cmp	x0, x2
  40fe6c:	b.eq	40fe94 <__fxstatat@plt+0xd444>  // b.none
  40fe70:	add	x0, x0, #0x1
  40fe74:	cmp	x21, x0
  40fe78:	b.eq	40fd08 <__fxstatat@plt+0xd2b8>  // b.none
  40fe7c:	ldrb	w1, [x25, x0]
  40fe80:	add	w19, w0, #0x1
  40fe84:	ldrh	w1, [x3, x1, lsl #1]
  40fe88:	tbnz	w1, #14, 40fe68 <__fxstatat@plt+0xd418>
  40fe8c:	mov	w19, #0xffffffff            	// #-1
  40fe90:	b	40fdc0 <__fxstatat@plt+0xd370>
  40fe94:	mov	w19, w0
  40fe98:	b	40fd08 <__fxstatat@plt+0xd2b8>
  40fe9c:	nop
  40fea0:	stp	x29, x30, [sp, #-32]!
  40fea4:	mov	x29, sp
  40fea8:	stp	x19, x20, [sp, #16]
  40feac:	mov	w20, w1
  40feb0:	mov	x19, x0
  40feb4:	bl	402430 <strlen@plt>
  40feb8:	mov	x1, x0
  40febc:	mov	w2, w20
  40fec0:	mov	x0, x19
  40fec4:	ldp	x19, x20, [sp, #16]
  40fec8:	ldp	x29, x30, [sp], #32
  40fecc:	b	40fc10 <__fxstatat@plt+0xd1c0>
  40fed0:	stp	x29, x30, [sp, #-112]!
  40fed4:	mov	x29, sp
  40fed8:	stp	x19, x20, [sp, #16]
  40fedc:	mov	x20, x0
  40fee0:	stp	x21, x22, [sp, #32]
  40fee4:	stp	x23, x24, [sp, #48]
  40fee8:	mov	x24, x3
  40feec:	stp	x25, x26, [sp, #64]
  40fef0:	lsr	x25, x1, #1
  40fef4:	mov	x26, x1
  40fef8:	stp	x27, x28, [sp, #80]
  40fefc:	sub	x1, x1, x25
  40ff00:	mov	x27, x2
  40ff04:	cmp	x1, #0x2
  40ff08:	add	x19, x0, x25, lsl #3
  40ff0c:	b.hi	4100e4 <__fxstatat@plt+0xd694>  // b.pmore
  40ff10:	b.eq	40ffc8 <__fxstatat@plt+0xd578>  // b.none
  40ff14:	cmp	x26, #0x3
  40ff18:	b.ne	40fff8 <__fxstatat@plt+0xd5a8>  // b.any
  40ff1c:	ldr	x28, [x20]
  40ff20:	str	x28, [x27]
  40ff24:	ldr	x22, [x20, x25, lsl #3]
  40ff28:	mov	x0, x28
  40ff2c:	mov	x19, #0x0                   	// #0
  40ff30:	mov	x21, x25
  40ff34:	mov	x1, x22
  40ff38:	blr	x24
  40ff3c:	mov	x23, #0x0                   	// #0
  40ff40:	cmp	w0, #0x0
  40ff44:	add	x0, x19, #0x1
  40ff48:	b.le	40ff80 <__fxstatat@plt+0xd530>
  40ff4c:	nop
  40ff50:	str	x22, [x20, x19, lsl #3]
  40ff54:	add	x21, x21, #0x1
  40ff58:	cmp	x26, x21
  40ff5c:	b.eq	40ff9c <__fxstatat@plt+0xd54c>  // b.none
  40ff60:	ldr	x22, [x20, x21, lsl #3]
  40ff64:	mov	x19, x0
  40ff68:	mov	x1, x22
  40ff6c:	mov	x0, x28
  40ff70:	blr	x24
  40ff74:	cmp	w0, #0x0
  40ff78:	add	x0, x19, #0x1
  40ff7c:	b.gt	40ff50 <__fxstatat@plt+0xd500>
  40ff80:	str	x28, [x20, x19, lsl #3]
  40ff84:	add	x23, x23, #0x1
  40ff88:	cmp	x25, x23
  40ff8c:	b.eq	4100c8 <__fxstatat@plt+0xd678>  // b.none
  40ff90:	mov	x19, x0
  40ff94:	ldr	x28, [x27, x23, lsl #3]
  40ff98:	b	40ff68 <__fxstatat@plt+0xd518>
  40ff9c:	sub	x2, x25, x23
  40ffa0:	add	x1, x27, x23, lsl #3
  40ffa4:	add	x0, x20, x0, lsl #3
  40ffa8:	ldp	x19, x20, [sp, #16]
  40ffac:	lsl	x2, x2, #3
  40ffb0:	ldp	x21, x22, [sp, #32]
  40ffb4:	ldp	x23, x24, [sp, #48]
  40ffb8:	ldp	x25, x26, [sp, #64]
  40ffbc:	ldp	x27, x28, [sp, #80]
  40ffc0:	ldp	x29, x30, [sp], #112
  40ffc4:	b	4023c0 <memcpy@plt>
  40ffc8:	ldr	x21, [x0, x25, lsl #3]
  40ffcc:	ldr	x22, [x19, #8]
  40ffd0:	mov	x0, x21
  40ffd4:	mov	x1, x22
  40ffd8:	blr	x3
  40ffdc:	cmp	w0, #0x0
  40ffe0:	b.le	40ff14 <__fxstatat@plt+0xd4c4>
  40ffe4:	str	x22, [x20, x25, lsl #3]
  40ffe8:	cmp	x26, #0x3
  40ffec:	str	x21, [x19, #8]
  40fff0:	b.eq	40ff1c <__fxstatat@plt+0xd4cc>  // b.none
  40fff4:	nop
  40fff8:	lsr	x0, x26, #2
  40fffc:	str	x0, [sp, #104]
  410000:	sub	x1, x25, x0
  410004:	lsl	x19, x0, #3
  410008:	cmp	x1, #0x2
  41000c:	add	x21, x20, x19
  410010:	b.hi	41010c <__fxstatat@plt+0xd6bc>  // b.pmore
  410014:	b.eq	410144 <__fxstatat@plt+0xd6f4>  // b.none
  410018:	ldr	x0, [sp, #104]
  41001c:	cmp	x0, #0x2
  410020:	b.hi	4100f0 <__fxstatat@plt+0xd6a0>  // b.pmore
  410024:	ldr	x28, [x20]
  410028:	b.eq	410120 <__fxstatat@plt+0xd6d0>  // b.none
  41002c:	ldr	x21, [sp, #104]
  410030:	mov	x23, #0x0                   	// #0
  410034:	ldr	x22, [x20, x19]
  410038:	mov	x19, x27
  41003c:	nop
  410040:	mov	x1, x22
  410044:	mov	x0, x28
  410048:	add	x19, x19, #0x8
  41004c:	blr	x24
  410050:	cmp	w0, #0x0
  410054:	b.le	410084 <__fxstatat@plt+0xd634>
  410058:	stur	x22, [x19, #-8]
  41005c:	add	x21, x21, #0x1
  410060:	cmp	x25, x21
  410064:	b.eq	4100a8 <__fxstatat@plt+0xd658>  // b.none
  410068:	ldr	x22, [x20, x21, lsl #3]
  41006c:	mov	x0, x28
  410070:	add	x19, x19, #0x8
  410074:	mov	x1, x22
  410078:	blr	x24
  41007c:	cmp	w0, #0x0
  410080:	b.gt	410058 <__fxstatat@plt+0xd608>
  410084:	ldr	x0, [sp, #104]
  410088:	stur	x28, [x19, #-8]
  41008c:	add	x23, x23, #0x1
  410090:	cmp	x0, x23
  410094:	b.eq	4100a0 <__fxstatat@plt+0xd650>  // b.none
  410098:	ldr	x28, [x20, x23, lsl #3]
  41009c:	b	410040 <__fxstatat@plt+0xd5f0>
  4100a0:	mov	x23, x21
  4100a4:	str	x25, [sp, #104]
  4100a8:	ldr	x0, [sp, #104]
  4100ac:	add	x1, x20, x23, lsl #3
  4100b0:	sub	x2, x0, x23
  4100b4:	mov	x0, x19
  4100b8:	lsl	x2, x2, #3
  4100bc:	bl	4023c0 <memcpy@plt>
  4100c0:	ldr	x28, [x27]
  4100c4:	b	40ff24 <__fxstatat@plt+0xd4d4>
  4100c8:	ldp	x19, x20, [sp, #16]
  4100cc:	ldp	x21, x22, [sp, #32]
  4100d0:	ldp	x23, x24, [sp, #48]
  4100d4:	ldp	x25, x26, [sp, #64]
  4100d8:	ldp	x27, x28, [sp, #80]
  4100dc:	ldp	x29, x30, [sp], #112
  4100e0:	ret
  4100e4:	mov	x0, x19
  4100e8:	bl	40fed0 <__fxstatat@plt+0xd480>
  4100ec:	b	40ff14 <__fxstatat@plt+0xd4c4>
  4100f0:	mov	x1, x0
  4100f4:	mov	x3, x24
  4100f8:	mov	x2, x27
  4100fc:	mov	x0, x20
  410100:	bl	40fed0 <__fxstatat@plt+0xd480>
  410104:	ldr	x28, [x20]
  410108:	b	41002c <__fxstatat@plt+0xd5dc>
  41010c:	mov	x0, x21
  410110:	mov	x3, x24
  410114:	mov	x2, x27
  410118:	bl	40fed0 <__fxstatat@plt+0xd480>
  41011c:	b	410018 <__fxstatat@plt+0xd5c8>
  410120:	ldr	x21, [x20, #8]
  410124:	mov	x0, x28
  410128:	mov	x1, x21
  41012c:	blr	x24
  410130:	cmp	w0, #0x0
  410134:	b.le	410104 <__fxstatat@plt+0xd6b4>
  410138:	stp	x21, x28, [x20]
  41013c:	mov	x28, x21
  410140:	b	41002c <__fxstatat@plt+0xd5dc>
  410144:	ldr	x22, [x20, x19]
  410148:	ldr	x23, [x21, #8]
  41014c:	mov	x0, x22
  410150:	mov	x1, x23
  410154:	blr	x24
  410158:	cmp	w0, #0x0
  41015c:	b.le	410018 <__fxstatat@plt+0xd5c8>
  410160:	str	x23, [x20, x19]
  410164:	str	x22, [x21, #8]
  410168:	b	410018 <__fxstatat@plt+0xd5c8>
  41016c:	nop
  410170:	stp	x29, x30, [sp, #-48]!
  410174:	cmp	x1, #0x2
  410178:	mov	x29, sp
  41017c:	stp	x19, x20, [sp, #16]
  410180:	mov	x19, x0
  410184:	b.hi	4101cc <__fxstatat@plt+0xd77c>  // b.pmore
  410188:	b.eq	410198 <__fxstatat@plt+0xd748>  // b.none
  41018c:	ldp	x19, x20, [sp, #16]
  410190:	ldp	x29, x30, [sp], #48
  410194:	ret
  410198:	ldr	x20, [x0]
  41019c:	str	x21, [sp, #32]
  4101a0:	ldr	x21, [x19, #8]
  4101a4:	mov	x0, x20
  4101a8:	mov	x1, x21
  4101ac:	blr	x2
  4101b0:	cmp	w0, #0x0
  4101b4:	b.le	4101e0 <__fxstatat@plt+0xd790>
  4101b8:	stp	x21, x20, [x19]
  4101bc:	ldp	x19, x20, [sp, #16]
  4101c0:	ldr	x21, [sp, #32]
  4101c4:	ldp	x29, x30, [sp], #48
  4101c8:	ret
  4101cc:	ldp	x19, x20, [sp, #16]
  4101d0:	mov	x3, x2
  4101d4:	ldp	x29, x30, [sp], #48
  4101d8:	add	x2, x0, x1, lsl #3
  4101dc:	b	40fed0 <__fxstatat@plt+0xd480>
  4101e0:	ldr	x21, [sp, #32]
  4101e4:	b	41018c <__fxstatat@plt+0xd73c>
  4101e8:	sub	sp, sp, #0x4f0
  4101ec:	stp	x29, x30, [sp, #16]
  4101f0:	add	x29, sp, #0x10
  4101f4:	ldr	x10, [x3, #48]
  4101f8:	stp	x19, x20, [sp, #32]
  4101fc:	mov	x20, x2
  410200:	stp	x21, x22, [sp, #48]
  410204:	mov	x21, x0
  410208:	and	w0, w4, #0xff
  41020c:	stp	x23, x24, [sp, #64]
  410210:	cmp	x10, #0x0
  410214:	mov	x24, x1
  410218:	stp	x25, x26, [sp, #80]
  41021c:	mov	w19, w6
  410220:	ldr	w25, [x3, #8]
  410224:	stp	x27, x28, [sp, #96]
  410228:	mov	x27, x3
  41022c:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2f80>
  410230:	str	x7, [sp, #128]
  410234:	add	x3, x3, #0x58
  410238:	stp	w0, w5, [sp, #136]
  41023c:	csel	x10, x3, x10, eq  // eq = none
  410240:	cmp	w25, #0xc
  410244:	b.le	410300 <__fxstatat@plt+0xd8b0>
  410248:	sub	w25, w25, #0xc
  41024c:	ldrb	w0, [x20]
  410250:	mov	x22, #0x0                   	// #0
  410254:	cbz	w0, 4102c4 <__fxstatat@plt+0xd874>
  410258:	mov	x23, #0x2500                	// #9472
  41025c:	mov	w26, #0xcccd                	// #52429
  410260:	add	x1, sp, #0xda
  410264:	movk	x23, #0x1000, lsl #48
  410268:	movk	w26, #0xcccc, lsl #16
  41026c:	str	x1, [sp, #120]
  410270:	cmp	w0, #0x25
  410274:	b.eq	410334 <__fxstatat@plt+0xd8e4>  // b.none
  410278:	cmp	w19, #0x0
  41027c:	sub	x0, x24, x22
  410280:	csel	w28, w19, wzr, ge  // ge = tcont
  410284:	sxtw	x28, w28
  410288:	cmp	x28, #0x0
  41028c:	csinc	x28, x28, xzr, ne  // ne = any
  410290:	cmp	x0, x28
  410294:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  410298:	cbz	x21, 4102ac <__fxstatat@plt+0xd85c>
  41029c:	cmp	w19, #0x1
  4102a0:	b.gt	410310 <__fxstatat@plt+0xd8c0>
  4102a4:	ldrb	w0, [x20]
  4102a8:	strb	w0, [x21], #1
  4102ac:	add	x22, x22, x28
  4102b0:	mov	x4, x20
  4102b4:	ldrb	w0, [x4, #1]
  4102b8:	add	x20, x4, #0x1
  4102bc:	mov	w19, #0xffffffff            	// #-1
  4102c0:	cbnz	w0, 410270 <__fxstatat@plt+0xd820>
  4102c4:	cmp	x21, #0x0
  4102c8:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  4102cc:	b.eq	4102dc <__fxstatat@plt+0xd88c>  // b.none
  4102d0:	strb	wzr, [x21]
  4102d4:	b	4102dc <__fxstatat@plt+0xd88c>
  4102d8:	mov	x22, #0x0                   	// #0
  4102dc:	mov	x0, x22
  4102e0:	ldp	x29, x30, [sp, #16]
  4102e4:	ldp	x19, x20, [sp, #32]
  4102e8:	ldp	x21, x22, [sp, #48]
  4102ec:	ldp	x23, x24, [sp, #64]
  4102f0:	ldp	x25, x26, [sp, #80]
  4102f4:	ldp	x27, x28, [sp, #96]
  4102f8:	add	sp, sp, #0x4f0
  4102fc:	ret
  410300:	cmp	w25, #0x0
  410304:	mov	w0, #0xc                   	// #12
  410308:	csel	w25, w25, w0, ne  // ne = any
  41030c:	b	41024c <__fxstatat@plt+0xd7fc>
  410310:	sxtw	x2, w19
  410314:	mov	x0, x21
  410318:	sub	x2, x2, #0x1
  41031c:	mov	w1, #0x20                  	// #32
  410320:	add	x21, x21, x2
  410324:	str	x10, [sp, #144]
  410328:	bl	402680 <memset@plt>
  41032c:	ldr	x10, [sp, #144]
  410330:	b	4102a4 <__fxstatat@plt+0xd854>
  410334:	ldr	w12, [sp, #136]
  410338:	mov	w3, #0x0                   	// #0
  41033c:	mov	w5, #0x0                   	// #0
  410340:	mov	x2, #0x1                   	// #1
  410344:	ldrb	w1, [x20, #1]!
  410348:	sub	w4, w1, #0x23
  41034c:	mov	w28, w1
  410350:	and	w4, w4, #0xff
  410354:	cmp	w4, #0x3c
  410358:	b.hi	410374 <__fxstatat@plt+0xd924>  // b.pmore
  41035c:	lsl	x4, x2, x4
  410360:	tst	x4, x23
  410364:	b.ne	410488 <__fxstatat@plt+0xda38>  // b.any
  410368:	tbnz	x4, #59, 410480 <__fxstatat@plt+0xda30>
  41036c:	and	w0, w4, #0x1
  410370:	tbnz	w4, #0, 410478 <__fxstatat@plt+0xda28>
  410374:	sub	w0, w1, #0x30
  410378:	cmp	w0, #0x9
  41037c:	b.ls	4104b4 <__fxstatat@plt+0xda64>  // b.plast
  410380:	cmp	w1, #0x45
  410384:	b.eq	4104a8 <__fxstatat@plt+0xda58>  // b.none
  410388:	cmp	w1, #0x4f
  41038c:	b.eq	4104a8 <__fxstatat@plt+0xda58>  // b.none
  410390:	mov	w28, #0x0                   	// #0
  410394:	cmp	w1, #0x7a
  410398:	b.ls	410490 <__fxstatat@plt+0xda40>  // b.plast
  41039c:	sub	x0, x20, #0x1
  4103a0:	add	w2, w20, #0x1
  4103a4:	mov	x3, x0
  4103a8:	sub	w28, w2, w0
  4103ac:	ldrb	w1, [x0], #-1
  4103b0:	cmp	w1, #0x25
  4103b4:	b.ne	4103a4 <__fxstatat@plt+0xd954>  // b.any
  4103b8:	cmp	w19, #0x0
  4103bc:	sxtw	x28, w28
  4103c0:	csel	w0, w19, wzr, ge  // ge = tcont
  4103c4:	mov	x4, x20
  4103c8:	sub	x2, x24, x22
  4103cc:	sxtw	x0, w0
  4103d0:	cmp	x28, x0
  4103d4:	csel	x7, x28, x0, cs  // cs = hs, nlast
  4103d8:	cmp	x2, x7
  4103dc:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  4103e0:	cbz	x21, 410470 <__fxstatat@plt+0xda20>
  4103e4:	cmp	x28, x0
  4103e8:	b.cs	410430 <__fxstatat@plt+0xd9e0>  // b.hs, b.nlast
  4103ec:	sxtw	x2, w19
  4103f0:	stp	x10, x4, [sp, #144]
  4103f4:	cmp	w5, #0x30
  4103f8:	str	w12, [sp, #160]
  4103fc:	mov	w0, #0x2b                  	// #43
  410400:	stp	x3, x7, [sp, #168]
  410404:	sub	x2, x2, x28
  410408:	ccmp	w5, w0, #0x4, ne  // ne = any
  41040c:	add	x5, x21, x2
  410410:	mov	x0, x21
  410414:	b.ne	411564 <__fxstatat@plt+0xeb14>  // b.any
  410418:	mov	x21, x5
  41041c:	mov	w1, #0x30                  	// #48
  410420:	bl	402680 <memset@plt>
  410424:	ldp	x10, x4, [sp, #144]
  410428:	ldp	x3, x7, [sp, #168]
  41042c:	ldr	w12, [sp, #160]
  410430:	cbz	w12, 411488 <__fxstatat@plt+0xea38>
  410434:	stp	x10, x4, [sp, #144]
  410438:	stp	x3, x7, [sp, #160]
  41043c:	bl	4026f0 <__ctype_toupper_loc@plt>
  410440:	sub	x1, x28, #0x1
  410444:	ldp	x10, x4, [sp, #144]
  410448:	ldp	x3, x7, [sp, #160]
  41044c:	nop
  410450:	ldrb	w5, [x3, x1]
  410454:	ldr	x2, [x0]
  410458:	ldr	w2, [x2, x5, lsl #2]
  41045c:	strb	w2, [x21, x1]
  410460:	sub	x1, x1, #0x1
  410464:	cmn	x1, #0x1
  410468:	b.ne	410450 <__fxstatat@plt+0xda00>  // b.any
  41046c:	add	x21, x21, x28
  410470:	add	x22, x22, x7
  410474:	b	4102b4 <__fxstatat@plt+0xd864>
  410478:	mov	w3, w0
  41047c:	b	410344 <__fxstatat@plt+0xd8f4>
  410480:	mov	w12, #0x1                   	// #1
  410484:	b	410344 <__fxstatat@plt+0xd8f4>
  410488:	mov	w5, w1
  41048c:	b	410344 <__fxstatat@plt+0xd8f4>
  410490:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  410494:	add	x0, x0, #0xcf0
  410498:	ldrh	w0, [x0, w1, uxtw #1]
  41049c:	adr	x2, 4104a8 <__fxstatat@plt+0xda58>
  4104a0:	add	x0, x2, w0, sxth #2
  4104a4:	br	x0
  4104a8:	ldrb	w1, [x20, #1]
  4104ac:	add	x20, x20, #0x1
  4104b0:	b	410394 <__fxstatat@plt+0xd944>
  4104b4:	mov	w6, #0xcccc                	// #52428
  4104b8:	mov	w19, #0x0                   	// #0
  4104bc:	movk	w6, #0xccc, lsl #16
  4104c0:	ldrb	w2, [x20, #1]
  4104c4:	cmp	w19, w6
  4104c8:	add	x4, x20, #0x1
  4104cc:	sub	w0, w2, #0x30
  4104d0:	b.gt	410504 <__fxstatat@plt+0xdab4>
  4104d4:	b.eq	4104fc <__fxstatat@plt+0xdaac>  // b.none
  4104d8:	add	w19, w19, w19, lsl #2
  4104dc:	sub	w7, w1, #0x30
  4104e0:	mov	x20, x4
  4104e4:	mov	w1, w2
  4104e8:	add	w19, w7, w19, lsl #1
  4104ec:	cmp	w0, #0x9
  4104f0:	b.ls	4104c0 <__fxstatat@plt+0xda70>  // b.plast
  4104f4:	mov	w28, w1
  4104f8:	b	410380 <__fxstatat@plt+0xd930>
  4104fc:	cmp	w1, #0x37
  410500:	b.ls	4104d8 <__fxstatat@plt+0xda88>  // b.plast
  410504:	cmp	w0, #0x9
  410508:	b.hi	411368 <__fxstatat@plt+0xe918>  // b.pmore
  41050c:	ldrb	w1, [x20, #2]!
  410510:	mov	w19, #0x7fffffff            	// #2147483647
  410514:	sub	w0, w1, #0x30
  410518:	b	4104ec <__fxstatat@plt+0xda9c>
  41051c:	cmp	w28, #0x4f
  410520:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  410524:	str	wzr, [sp, #160]
  410528:	mov	w0, #0x2520                	// #9504
  41052c:	strh	w0, [sp, #216]
  410530:	cbnz	w28, 411af4 <__fxstatat@plt+0xf0a4>
  410534:	ldr	x14, [sp, #120]
  410538:	mov	x4, x20
  41053c:	strb	w1, [x14]
  410540:	mov	x3, x27
  410544:	strb	wzr, [x14, #1]
  410548:	add	x0, sp, #0xf0
  41054c:	add	x2, sp, #0xd8
  410550:	mov	x1, #0x400                 	// #1024
  410554:	stp	x10, x4, [sp, #144]
  410558:	str	w12, [sp, #168]
  41055c:	str	w5, [sp, #176]
  410560:	bl	402500 <strftime@plt>
  410564:	mov	x20, x0
  410568:	ldp	x10, x4, [sp, #144]
  41056c:	cbz	x0, 4102b4 <__fxstatat@plt+0xd864>
  410570:	cmp	w19, #0x0
  410574:	sub	x3, x0, #0x1
  410578:	csel	w0, w19, wzr, ge  // ge = tcont
  41057c:	sub	x1, x24, x22
  410580:	sxtw	x0, w0
  410584:	cmp	x3, x0
  410588:	csel	x7, x3, x0, cs  // cs = hs, nlast
  41058c:	cmp	x1, x7
  410590:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  410594:	cbz	x21, 410470 <__fxstatat@plt+0xda20>
  410598:	cmp	w28, #0x0
  41059c:	ldr	w12, [sp, #168]
  4105a0:	ccmp	x3, x0, #0x2, eq  // eq = none
  4105a4:	b.cs	4105ec <__fxstatat@plt+0xdb9c>  // b.hs, b.nlast
  4105a8:	ldr	w5, [sp, #176]
  4105ac:	sxtw	x2, w19
  4105b0:	str	w12, [sp, #168]
  4105b4:	sub	x2, x2, x3
  4105b8:	stp	x3, x7, [sp, #176]
  4105bc:	cmp	w5, #0x30
  4105c0:	mov	w0, #0x2b                  	// #43
  4105c4:	ccmp	w5, w0, #0x4, ne  // ne = any
  4105c8:	add	x5, x21, x2
  4105cc:	b.ne	411524 <__fxstatat@plt+0xead4>  // b.any
  4105d0:	mov	x0, x21
  4105d4:	mov	w1, #0x30                  	// #48
  4105d8:	mov	x21, x5
  4105dc:	bl	402680 <memset@plt>
  4105e0:	ldp	x10, x4, [sp, #144]
  4105e4:	ldp	x3, x7, [sp, #176]
  4105e8:	ldr	w12, [sp, #168]
  4105ec:	ldr	w0, [sp, #160]
  4105f0:	cbnz	w0, 4114d8 <__fxstatat@plt+0xea88>
  4105f4:	cbz	w12, 4114b0 <__fxstatat@plt+0xea60>
  4105f8:	sub	x20, x20, #0x2
  4105fc:	cbz	x3, 41063c <__fxstatat@plt+0xdbec>
  410600:	stp	x10, x4, [sp, #144]
  410604:	stp	x3, x7, [sp, #160]
  410608:	bl	4026f0 <__ctype_toupper_loc@plt>
  41060c:	ldp	x10, x4, [sp, #144]
  410610:	ldp	x3, x7, [sp, #160]
  410614:	nop
  410618:	add	x1, sp, #0xf0
  41061c:	add	x2, x1, x20
  410620:	ldr	x1, [x0]
  410624:	ldrb	w2, [x2, #1]
  410628:	ldr	w1, [x1, x2, lsl #2]
  41062c:	strb	w1, [x21, x20]
  410630:	sub	x20, x20, #0x1
  410634:	cmn	x20, #0x1
  410638:	b.ne	410618 <__fxstatat@plt+0xdbc8>  // b.any
  41063c:	add	x21, x21, x3
  410640:	add	x22, x22, x7
  410644:	b	4102b4 <__fxstatat@plt+0xd864>
  410648:	cmp	w28, #0x45
  41064c:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  410650:	ldp	w4, w2, [x27, #20]
  410654:	mov	w0, #0x2493                	// #9363
  410658:	ldr	w7, [x27, #28]
  41065c:	movk	w0, #0x9249, lsl #16
  410660:	cmp	w4, #0x0
  410664:	mov	w15, #0xffffff9c            	// #-100
  410668:	sub	w14, w7, w2
  41066c:	mov	w3, #0x12c                 	// #300
  410670:	add	w14, w14, #0x17e
  410674:	csel	w3, w3, w15, lt  // lt = tstop
  410678:	add	w3, w4, w3
  41067c:	smull	x0, w14, w0
  410680:	lsr	x0, x0, #32
  410684:	add	w0, w14, w0
  410688:	asr	w0, w0, #2
  41068c:	sub	w0, w0, w14, asr #31
  410690:	lsl	w15, w0, #3
  410694:	sub	w0, w15, w0
  410698:	sub	w0, w14, w0
  41069c:	sub	w0, w7, w0
  4106a0:	adds	w14, w0, #0x3
  4106a4:	b.mi	4117cc <__fxstatat@plt+0xed7c>  // b.first
  4106a8:	tst	x3, #0x3
  4106ac:	mov	w0, #0x16d                 	// #365
  4106b0:	b.ne	4106f8 <__fxstatat@plt+0xdca8>  // b.any
  4106b4:	mov	w16, #0x5c29                	// #23593
  4106b8:	mov	w0, #0xb850                	// #47184
  4106bc:	movk	w16, #0xc28f, lsl #16
  4106c0:	movk	w0, #0x51e, lsl #16
  4106c4:	mov	w15, #0x5c28                	// #23592
  4106c8:	madd	w3, w3, w16, w0
  4106cc:	movk	w15, #0x28f, lsl #16
  4106d0:	mov	w0, #0x16e                 	// #366
  4106d4:	ror	w16, w3, #2
  4106d8:	cmp	w16, w15
  4106dc:	b.hi	4106f8 <__fxstatat@plt+0xdca8>  // b.pmore
  4106e0:	mov	w0, #0xd70a                	// #55050
  4106e4:	ror	w3, w3, #4
  4106e8:	movk	w0, #0xa3, lsl #16
  4106ec:	cmp	w3, w0
  4106f0:	cset	w0, ls  // ls = plast
  4106f4:	add	w0, w0, #0x16d
  4106f8:	sub	w7, w7, w0
  4106fc:	mov	w3, #0x2493                	// #9363
  410700:	sub	w0, w7, w2
  410704:	movk	w3, #0x9249, lsl #16
  410708:	add	w0, w0, #0x17e
  41070c:	smull	x2, w0, w3
  410710:	lsr	x2, x2, #32
  410714:	add	w2, w0, w2
  410718:	asr	w2, w2, #2
  41071c:	sub	w2, w2, w0, asr #31
  410720:	lsl	w3, w2, #3
  410724:	sub	w2, w3, w2
  410728:	sub	w0, w0, w2
  41072c:	sub	w0, w7, w0
  410730:	adds	w0, w0, #0x3
  410734:	b.mi	411974 <__fxstatat@plt+0xef24>  // b.first
  410738:	mov	w7, #0x1                   	// #1
  41073c:	mov	w14, w0
  410740:	mov	w2, w7
  410744:	mov	w3, #0xfffff893            	// #-1901
  410748:	cmp	w1, #0x47
  41074c:	b.eq	411904 <__fxstatat@plt+0xeeb4>  // b.none
  410750:	cmp	w1, #0x67
  410754:	b.ne	4118dc <__fxstatat@plt+0xee8c>  // b.any
  410758:	mov	w0, #0x851f                	// #34079
  41075c:	mov	w14, #0x64                  	// #100
  410760:	movk	w0, #0x51eb, lsl #16
  410764:	smull	x7, w4, w0
  410768:	asr	x7, x7, #37
  41076c:	sub	w7, w7, w4, asr #31
  410770:	msub	w7, w7, w14, w4
  410774:	add	w7, w7, w2
  410778:	smull	x0, w7, w0
  41077c:	asr	x2, x0, #37
  410780:	sub	w0, w2, w7, asr #31
  410784:	msub	w0, w0, w14, w7
  410788:	tbnz	w0, #31, 411ab4 <__fxstatat@plt+0xf064>
  41078c:	mov	w2, w0
  410790:	cbnz	w5, 411788 <__fxstatat@plt+0xed38>
  410794:	ldr	w5, [sp, #140]
  410798:	mov	w15, #0x1                   	// #1
  41079c:	cmp	w5, #0x2b
  4107a0:	b.eq	4119dc <__fxstatat@plt+0xef8c>  // b.none
  4107a4:	mov	w4, #0x0                   	// #0
  4107a8:	mov	w14, #0x0                   	// #0
  4107ac:	mov	w7, #0x2                   	// #2
  4107b0:	mov	w3, #0x0                   	// #0
  4107b4:	nop
  4107b8:	cmp	w28, #0x4f
  4107bc:	ccmp	w15, #0x0, #0x4, eq  // eq = none
  4107c0:	b.eq	4109c8 <__fxstatat@plt+0xdf78>  // b.none
  4107c4:	mov	w0, #0x2520                	// #9504
  4107c8:	str	wzr, [sp, #160]
  4107cc:	strh	w0, [sp, #216]
  4107d0:	mov	x4, x20
  4107d4:	add	x14, sp, #0xdb
  4107d8:	strb	w28, [sp, #218]
  4107dc:	mov	w28, w7
  4107e0:	b	41053c <__fxstatat@plt+0xdaec>
  4107e4:	cbnz	w28, 41039c <__fxstatat@plt+0xd94c>
  4107e8:	cmp	w3, #0x0
  4107ec:	mov	w0, #0x2520                	// #9504
  4107f0:	csel	w12, w12, w3, eq  // eq = none
  4107f4:	mov	x4, x20
  4107f8:	mov	w28, #0x0                   	// #0
  4107fc:	str	wzr, [sp, #160]
  410800:	strh	w0, [sp, #216]
  410804:	ldr	x14, [sp, #120]
  410808:	b	41053c <__fxstatat@plt+0xdaec>
  41080c:	cmp	w3, #0x0
  410810:	csel	w12, w12, w3, eq  // eq = none
  410814:	cmp	w28, #0x45
  410818:	b.ne	410524 <__fxstatat@plt+0xdad4>  // b.any
  41081c:	b	41039c <__fxstatat@plt+0xd94c>
  410820:	cmp	w19, #0x0
  410824:	ldurb	w1, [x20, #-1]
  410828:	csel	w0, w19, wzr, ge  // ge = tcont
  41082c:	sub	x3, x20, #0x1
  410830:	cmp	w1, #0x25
  410834:	sub	x2, x24, x22
  410838:	sxtw	x0, w0
  41083c:	b.ne	411afc <__fxstatat@plt+0xf0ac>  // b.any
  410840:	cmp	x0, #0x0
  410844:	mov	x28, #0x1                   	// #1
  410848:	mov	x4, x3
  41084c:	csel	x7, x0, x28, ne  // ne = any
  410850:	b	4103d8 <__fxstatat@plt+0xd988>
  410854:	cbnz	w28, 41039c <__fxstatat@plt+0xd94c>
  410858:	cmp	w5, #0x0
  41085c:	ccmp	w19, #0x0, #0x0, eq  // eq = none
  410860:	b.lt	411878 <__fxstatat@plt+0xee28>  // b.tstop
  410864:	subs	w6, w19, #0x6
  410868:	adrp	x28, 41d000 <_obstack_memory_used@@Base+0x5f80>
  41086c:	csel	w6, w6, wzr, pl  // pl = nfrst
  410870:	add	x28, x28, #0xcc8
  410874:	ldr	x7, [sp, #128]
  410878:	mov	w4, w12
  41087c:	ldr	x0, [sp, #1264]
  410880:	str	x0, [sp]
  410884:	ldr	w0, [sp, #1272]
  410888:	mov	x3, x27
  41088c:	str	w0, [sp, #8]
  410890:	mov	x1, #0xffffffffffffffff    	// #-1
  410894:	mov	x2, x28
  410898:	mov	x0, #0x0                   	// #0
  41089c:	str	x10, [sp, #144]
  4108a0:	str	w12, [sp, #152]
  4108a4:	str	w5, [sp, #160]
  4108a8:	str	w6, [sp, #168]
  4108ac:	bl	4101e8 <__fxstatat@plt+0xd798>
  4108b0:	cmp	w19, #0x0
  4108b4:	sub	x3, x24, x22
  4108b8:	csel	w1, w19, wzr, ge  // ge = tcont
  4108bc:	mov	x4, x0
  4108c0:	sxtw	x1, w1
  4108c4:	cmp	x0, x1
  4108c8:	csel	x14, x0, x1, cs  // cs = hs, nlast
  4108cc:	cmp	x3, x14
  4108d0:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  4108d4:	ldr	x10, [sp, #144]
  4108d8:	cbz	x21, 41097c <__fxstatat@plt+0xdf2c>
  4108dc:	ldr	w12, [sp, #152]
  4108e0:	cmp	x0, x1
  4108e4:	ldr	w5, [sp, #160]
  4108e8:	ldr	w6, [sp, #168]
  4108ec:	b.cs	410944 <__fxstatat@plt+0xdef4>  // b.hs, b.nlast
  4108f0:	sxtw	x2, w19
  4108f4:	stp	x3, x10, [sp, #144]
  4108f8:	sub	x2, x2, x0
  4108fc:	str	w5, [sp, #160]
  410900:	mov	w0, #0x2b                  	// #43
  410904:	str	w12, [sp, #168]
  410908:	cmp	w5, #0x30
  41090c:	str	w6, [sp, #176]
  410910:	ccmp	w5, w0, #0x4, ne  // ne = any
  410914:	stp	x4, x14, [sp, #184]
  410918:	add	x7, x21, x2
  41091c:	mov	x0, x21
  410920:	b.ne	411748 <__fxstatat@plt+0xecf8>  // b.any
  410924:	mov	x21, x7
  410928:	mov	w1, #0x30                  	// #48
  41092c:	bl	402680 <memset@plt>
  410930:	ldp	x3, x10, [sp, #144]
  410934:	ldp	x4, x14, [sp, #184]
  410938:	ldr	w5, [sp, #160]
  41093c:	ldr	w12, [sp, #168]
  410940:	ldr	w6, [sp, #176]
  410944:	ldr	x7, [sp, #128]
  410948:	mov	x0, x21
  41094c:	ldr	x1, [sp, #1264]
  410950:	str	x1, [sp]
  410954:	ldr	w1, [sp, #1272]
  410958:	add	x21, x21, x4
  41095c:	str	w1, [sp, #8]
  410960:	mov	w4, w12
  410964:	mov	x1, x3
  410968:	mov	x2, x28
  41096c:	mov	x3, x27
  410970:	stp	x10, x14, [sp, #144]
  410974:	bl	4101e8 <__fxstatat@plt+0xd798>
  410978:	ldp	x10, x14, [sp, #144]
  41097c:	add	x22, x22, x14
  410980:	mov	x4, x20
  410984:	b	4102b4 <__fxstatat@plt+0xd864>
  410988:	cmp	w28, #0x45
  41098c:	b.eq	411738 <__fxstatat@plt+0xece8>  // b.none
  410990:	cmp	w28, #0x4f
  410994:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  410998:	ldr	w0, [x27, #20]
  41099c:	adds	w2, w0, #0x76c
  4109a0:	cset	w14, lt  // lt = tstop
  4109a4:	cset	w15, ge  // ge = tcont
  4109a8:	cbnz	w5, 411798 <__fxstatat@plt+0xed48>
  4109ac:	ldr	w5, [sp, #140]
  4109b0:	cmp	w5, #0x2b
  4109b4:	b.eq	411a6c <__fxstatat@plt+0xf01c>  // b.none
  4109b8:	mov	w3, #0x0                   	// #0
  4109bc:	mov	w4, #0x0                   	// #0
  4109c0:	mov	w7, #0x4                   	// #4
  4109c4:	nop
  4109c8:	cmp	w14, #0x0
  4109cc:	cneg	w2, w2, ne  // ne = any
  4109d0:	add	x6, sp, #0xef
  4109d4:	mov	w15, #0x3a                  	// #58
  4109d8:	b	410a14 <__fxstatat@plt+0xdfc4>
  4109dc:	umull	x1, w2, w26
  4109e0:	asr	w3, w3, #1
  4109e4:	sturb	w15, [x6, #-1]
  4109e8:	cmp	w3, #0x0
  4109ec:	ccmp	w2, #0x9, #0x2, eq  // eq = none
  4109f0:	sub	x28, x6, #0x2
  4109f4:	lsr	x1, x1, #35
  4109f8:	add	w0, w1, w1, lsl #2
  4109fc:	sub	w0, w2, w0, lsl #1
  410a00:	add	w0, w0, #0x30
  410a04:	sturb	w0, [x6, #-2]
  410a08:	b.ls	410a48 <__fxstatat@plt+0xdff8>  // b.plast
  410a0c:	mov	x6, x28
  410a10:	mov	w2, w1
  410a14:	sub	x28, x6, #0x1
  410a18:	tbnz	w3, #0, 4109dc <__fxstatat@plt+0xdf8c>
  410a1c:	umull	x0, w2, w26
  410a20:	asr	w3, w3, #1
  410a24:	cmp	w3, #0x0
  410a28:	ccmp	w2, #0x9, #0x2, eq  // eq = none
  410a2c:	lsr	x0, x0, #35
  410a30:	mov	w1, w0
  410a34:	add	w0, w0, w0, lsl #2
  410a38:	sub	w0, w2, w0, lsl #1
  410a3c:	add	w0, w0, #0x30
  410a40:	sturb	w0, [x6, #-1]
  410a44:	b.hi	410a0c <__fxstatat@plt+0xdfbc>  // b.pmore
  410a48:	cmp	w19, w7
  410a4c:	csel	w7, w19, w7, ge  // ge = tcont
  410a50:	cbnz	w14, 4113b8 <__fxstatat@plt+0xe968>
  410a54:	cbz	w4, 410c9c <__fxstatat@plt+0xe24c>
  410a58:	cmp	w5, #0x2d
  410a5c:	mov	w4, #0x2b                  	// #43
  410a60:	b.eq	411740 <__fxstatat@plt+0xecf0>  // b.none
  410a64:	add	x6, sp, #0xef
  410a68:	sub	w3, w7, #0x1
  410a6c:	sub	x6, x6, x28
  410a70:	sub	x0, x24, x22
  410a74:	sub	w3, w3, w6
  410a78:	cmp	w3, #0x0
  410a7c:	b.le	411580 <__fxstatat@plt+0xeb30>
  410a80:	cmp	w5, #0x5f
  410a84:	b.eq	411624 <__fxstatat@plt+0xebd4>  // b.none
  410a88:	cmp	x0, w7, sxtw
  410a8c:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  410a90:	cbz	w4, 41170c <__fxstatat@plt+0xecbc>
  410a94:	cmp	w19, #0x0
  410a98:	csel	w1, w19, wzr, ge  // ge = tcont
  410a9c:	sxtw	x1, w1
  410aa0:	cmp	x1, #0x0
  410aa4:	csinc	x2, x1, xzr, ne  // ne = any
  410aa8:	cmp	x2, x0
  410aac:	b.cs	4102d8 <__fxstatat@plt+0xd888>  // b.hs, b.nlast
  410ab0:	sxtw	x3, w3
  410ab4:	add	x22, x22, x2
  410ab8:	cbz	x21, 410b64 <__fxstatat@plt+0xe114>
  410abc:	cmp	w7, #0x0
  410ac0:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  410ac4:	b.ls	410b24 <__fxstatat@plt+0xe0d4>  // b.plast
  410ac8:	sxtw	x2, w19
  410acc:	str	x10, [sp, #144]
  410ad0:	str	w5, [sp, #152]
  410ad4:	mov	w0, #0x2b                  	// #43
  410ad8:	str	w12, [sp, #160]
  410adc:	cmp	w5, #0x30
  410ae0:	str	w7, [sp, #168]
  410ae4:	sub	x2, x2, #0x1
  410ae8:	str	w4, [sp, #176]
  410aec:	ccmp	w5, w0, #0x4, ne  // ne = any
  410af0:	stp	x6, x3, [sp, #184]
  410af4:	add	x14, x21, x2
  410af8:	mov	x0, x21
  410afc:	b.ne	411a34 <__fxstatat@plt+0xefe4>  // b.any
  410b00:	mov	x21, x14
  410b04:	mov	w1, #0x30                  	// #48
  410b08:	bl	402680 <memset@plt>
  410b0c:	ldp	x6, x3, [sp, #184]
  410b10:	ldr	w5, [sp, #152]
  410b14:	ldr	w12, [sp, #160]
  410b18:	ldr	w7, [sp, #168]
  410b1c:	ldr	w4, [sp, #176]
  410b20:	ldr	x10, [sp, #144]
  410b24:	strb	w4, [x21], #1
  410b28:	mov	x0, x21
  410b2c:	mov	x2, x3
  410b30:	add	x21, x21, x3
  410b34:	mov	w1, #0x30                  	// #48
  410b38:	stp	x3, x10, [sp, #144]
  410b3c:	str	w5, [sp, #160]
  410b40:	str	w12, [sp, #168]
  410b44:	str	w7, [sp, #176]
  410b48:	str	x6, [sp, #184]
  410b4c:	bl	402680 <memset@plt>
  410b50:	ldp	x3, x10, [sp, #144]
  410b54:	ldr	w5, [sp, #160]
  410b58:	ldr	w12, [sp, #168]
  410b5c:	ldr	w7, [sp, #176]
  410b60:	ldr	x6, [sp, #184]
  410b64:	add	x22, x22, x3
  410b68:	mov	x4, x20
  410b6c:	sub	x0, x24, x22
  410b70:	mov	x3, #0x0                   	// #0
  410b74:	mov	w19, #0x0                   	// #0
  410b78:	b	410ccc <__fxstatat@plt+0xe27c>
  410b7c:	ldr	w0, [x27, #16]
  410b80:	cmp	w28, #0x4f
  410b84:	mov	w7, #0x1                   	// #1
  410b88:	b.eq	4107c4 <__fxstatat@plt+0xdd74>  // b.none
  410b8c:	mov	w1, #0xb                   	// #11
  410b90:	mov	w4, #0x0                   	// #0
  410b94:	mov	w14, #0x0                   	// #0
  410b98:	mov	w3, #0x0                   	// #0
  410b9c:	mul	w0, w0, w1
  410ba0:	asr	w0, w0, #5
  410ba4:	add	w2, w0, w7
  410ba8:	b	4109d0 <__fxstatat@plt+0xdf80>
  410bac:	cmp	w19, #0x0
  410bb0:	sub	x0, x24, x22
  410bb4:	csel	w28, w19, wzr, ge  // ge = tcont
  410bb8:	sxtw	x28, w28
  410bbc:	cmp	x28, #0x0
  410bc0:	csinc	x28, x28, xzr, ne  // ne = any
  410bc4:	cmp	x0, x28
  410bc8:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  410bcc:	cbz	x21, 4102ac <__fxstatat@plt+0xd85c>
  410bd0:	cmp	w19, #0x1
  410bd4:	b.le	410c0c <__fxstatat@plt+0xe1bc>
  410bd8:	sxtw	x2, w19
  410bdc:	str	x10, [sp, #144]
  410be0:	mov	w0, #0x2b                  	// #43
  410be4:	cmp	w5, #0x30
  410be8:	sub	x2, x2, #0x1
  410bec:	ccmp	w5, w0, #0x4, ne  // ne = any
  410bf0:	add	x3, x21, x2
  410bf4:	mov	x0, x21
  410bf8:	b.ne	4119e8 <__fxstatat@plt+0xef98>  // b.any
  410bfc:	mov	x21, x3
  410c00:	mov	w1, #0x30                  	// #48
  410c04:	bl	402680 <memset@plt>
  410c08:	ldr	x10, [sp, #144]
  410c0c:	mov	w0, #0x9                   	// #9
  410c10:	strb	w0, [x21], #1
  410c14:	b	4102ac <__fxstatat@plt+0xd85c>
  410c18:	ldp	x2, x3, [x27]
  410c1c:	stp	x2, x3, [sp, #240]
  410c20:	add	x1, sp, #0xf0
  410c24:	ldp	x2, x3, [x27, #16]
  410c28:	stp	x2, x3, [sp, #256]
  410c2c:	add	x28, sp, #0xef
  410c30:	ldp	x2, x3, [x27, #32]
  410c34:	str	x10, [sp, #144]
  410c38:	ldr	x4, [x27, #48]
  410c3c:	str	w5, [sp, #152]
  410c40:	ldr	x0, [sp, #1264]
  410c44:	str	w12, [sp, #160]
  410c48:	stp	x2, x3, [sp, #272]
  410c4c:	str	x4, [sp, #288]
  410c50:	bl	4175d0 <_obstack_memory_used@@Base+0x550>
  410c54:	ldr	w5, [sp, #152]
  410c58:	mov	x3, x0
  410c5c:	ldr	w12, [sp, #160]
  410c60:	ldr	x10, [sp, #144]
  410c64:	tbnz	x0, #63, 41137c <__fxstatat@plt+0xe92c>
  410c68:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  410c6c:	movk	x2, #0xcccd
  410c70:	umulh	x1, x3, x2
  410c74:	lsr	x0, x1, #3
  410c78:	cmp	xzr, x1, lsr #3
  410c7c:	add	x0, x0, x0, lsl #2
  410c80:	sub	x0, x3, x0, lsl #1
  410c84:	lsr	x3, x1, #3
  410c88:	add	w0, w0, #0x30
  410c8c:	strb	w0, [x28, #-1]!
  410c90:	b.ne	410c70 <__fxstatat@plt+0xe220>  // b.any
  410c94:	cmp	w19, #0x0
  410c98:	csinc	w7, w19, wzr, gt
  410c9c:	add	x6, sp, #0xef
  410ca0:	cmp	w5, #0x2d
  410ca4:	sub	x6, x6, x28
  410ca8:	sub	x0, x24, x22
  410cac:	b.eq	410cbc <__fxstatat@plt+0xe26c>  // b.none
  410cb0:	sub	w3, w7, w6
  410cb4:	cmp	w3, #0x0
  410cb8:	b.gt	41196c <__fxstatat@plt+0xef1c>
  410cbc:	cmp	w19, #0x0
  410cc0:	mov	x4, x20
  410cc4:	csel	w3, w19, wzr, ge  // ge = tcont
  410cc8:	sxtw	x3, w3
  410ccc:	cmp	x6, x3
  410cd0:	csel	x20, x6, x3, cs  // cs = hs, nlast
  410cd4:	cmp	x20, x0
  410cd8:	b.cs	4102d8 <__fxstatat@plt+0xd888>  // b.hs, b.nlast
  410cdc:	cbz	x21, 410d70 <__fxstatat@plt+0xe320>
  410ce0:	cmp	w7, #0x0
  410ce4:	ccmp	x6, x3, #0x2, eq  // eq = none
  410ce8:	b.cs	410d30 <__fxstatat@plt+0xe2e0>  // b.hs, b.nlast
  410cec:	sxtw	x2, w19
  410cf0:	stp	x10, x4, [sp, #144]
  410cf4:	mov	w0, #0x2b                  	// #43
  410cf8:	str	w12, [sp, #160]
  410cfc:	cmp	w5, #0x30
  410d00:	str	x6, [sp, #168]
  410d04:	sub	x2, x2, x6
  410d08:	ccmp	w5, w0, #0x4, ne  // ne = any
  410d0c:	add	x3, x21, x2
  410d10:	mov	x0, x21
  410d14:	b.ne	411548 <__fxstatat@plt+0xeaf8>  // b.any
  410d18:	mov	x21, x3
  410d1c:	mov	w1, #0x30                  	// #48
  410d20:	bl	402680 <memset@plt>
  410d24:	ldp	x10, x4, [sp, #144]
  410d28:	ldr	w12, [sp, #160]
  410d2c:	ldr	x6, [sp, #168]
  410d30:	cbz	w12, 411460 <__fxstatat@plt+0xea10>
  410d34:	sub	x19, x6, #0x1
  410d38:	cbz	x6, 410d6c <__fxstatat@plt+0xe31c>
  410d3c:	stp	x10, x4, [sp, #144]
  410d40:	str	x6, [sp, #160]
  410d44:	bl	4026f0 <__ctype_toupper_loc@plt>
  410d48:	ldp	x10, x4, [sp, #144]
  410d4c:	ldr	x6, [sp, #160]
  410d50:	ldrb	w2, [x28, x19]
  410d54:	ldr	x1, [x0]
  410d58:	ldr	w1, [x1, x2, lsl #2]
  410d5c:	strb	w1, [x21, x19]
  410d60:	sub	x19, x19, #0x1
  410d64:	cmn	x19, #0x1
  410d68:	b.ne	410d50 <__fxstatat@plt+0xe300>  // b.any
  410d6c:	add	x21, x21, x6
  410d70:	add	x22, x22, x20
  410d74:	b	4102b4 <__fxstatat@plt+0xd864>
  410d78:	cmp	w19, #0x0
  410d7c:	sub	x0, x24, x22
  410d80:	csel	w28, w19, wzr, ge  // ge = tcont
  410d84:	sxtw	x28, w28
  410d88:	cmp	x28, #0x0
  410d8c:	csinc	x28, x28, xzr, ne  // ne = any
  410d90:	cmp	x0, x28
  410d94:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  410d98:	cbz	x21, 4102ac <__fxstatat@plt+0xd85c>
  410d9c:	cmp	w19, #0x1
  410da0:	b.le	410dd8 <__fxstatat@plt+0xe388>
  410da4:	sxtw	x2, w19
  410da8:	str	x10, [sp, #144]
  410dac:	mov	w0, #0x2b                  	// #43
  410db0:	cmp	w5, #0x30
  410db4:	sub	x2, x2, #0x1
  410db8:	ccmp	w5, w0, #0x4, ne  // ne = any
  410dbc:	add	x3, x21, x2
  410dc0:	mov	x0, x21
  410dc4:	b.ne	411a08 <__fxstatat@plt+0xefb8>  // b.any
  410dc8:	mov	x21, x3
  410dcc:	mov	w1, #0x30                  	// #48
  410dd0:	bl	402680 <memset@plt>
  410dd4:	ldr	x10, [sp, #144]
  410dd8:	mov	w0, #0xa                   	// #10
  410ddc:	strb	w0, [x21], #1
  410de0:	b	4102ac <__fxstatat@plt+0xd85c>
  410de4:	cmp	w28, #0x45
  410de8:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  410dec:	ldr	w0, [x27, #16]
  410df0:	mov	w3, #0x0                   	// #0
  410df4:	mov	w4, #0x0                   	// #0
  410df8:	mov	w7, #0x2                   	// #2
  410dfc:	adds	w2, w0, #0x1
  410e00:	cset	w14, lt  // lt = tstop
  410e04:	cset	w15, ge  // ge = tcont
  410e08:	b	4107b8 <__fxstatat@plt+0xdd68>
  410e0c:	cmp	w28, #0x45
  410e10:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  410e14:	mov	w14, w25
  410e18:	cmp	w5, #0x0
  410e1c:	mov	w0, #0x5f                  	// #95
  410e20:	csel	w5, w5, w0, ne  // ne = any
  410e24:	mov	w7, #0x2                   	// #2
  410e28:	mov	w2, w14
  410e2c:	mov	w3, #0x0                   	// #0
  410e30:	mvn	w15, w2
  410e34:	lsr	w14, w14, #31
  410e38:	mov	w4, #0x0                   	// #0
  410e3c:	lsr	w15, w15, #31
  410e40:	b	4107b8 <__fxstatat@plt+0xdd68>
  410e44:	cbnz	w28, 41039c <__fxstatat@plt+0xd94c>
  410e48:	adrp	x28, 41d000 <_obstack_memory_used@@Base+0x5f80>
  410e4c:	mov	w6, #0xffffffff            	// #-1
  410e50:	add	x28, x28, #0xcb8
  410e54:	b	410874 <__fxstatat@plt+0xde24>
  410e58:	cmp	w28, #0x45
  410e5c:	b.eq	411738 <__fxstatat@plt+0xece8>  // b.none
  410e60:	ldr	w4, [x27, #20]
  410e64:	mov	w3, #0x851f                	// #34079
  410e68:	movk	w3, #0x51eb, lsl #16
  410e6c:	mov	w2, #0x64                  	// #100
  410e70:	smull	x3, w4, w3
  410e74:	asr	x3, x3, #37
  410e78:	sub	w3, w3, w4, asr #31
  410e7c:	add	w0, w3, #0x13
  410e80:	msub	w3, w3, w2, w4
  410e84:	cmp	w3, #0x0
  410e88:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  410e8c:	cset	w2, gt
  410e90:	cmn	w4, #0x76c
  410e94:	cset	w14, lt  // lt = tstop
  410e98:	sub	w2, w0, w2
  410e9c:	cset	w15, ge  // ge = tcont
  410ea0:	cbnz	w5, 4118c8 <__fxstatat@plt+0xee78>
  410ea4:	ldr	w0, [sp, #140]
  410ea8:	cmp	w0, #0x2b
  410eac:	b.eq	4118d0 <__fxstatat@plt+0xee80>  // b.none
  410eb0:	ldr	w5, [sp, #140]
  410eb4:	mov	w4, #0x0                   	// #0
  410eb8:	mov	w7, #0x2                   	// #2
  410ebc:	b	4107b0 <__fxstatat@plt+0xdd60>
  410ec0:	cmp	w28, #0x45
  410ec4:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  410ec8:	ldr	w14, [x27, #24]
  410ecc:	mov	w7, #0x1                   	// #1
  410ed0:	b	410e28 <__fxstatat@plt+0xe3d8>
  410ed4:	ldr	w0, [x27, #24]
  410ed8:	mov	w2, #0x2493                	// #9363
  410edc:	movk	w2, #0x9249, lsl #16
  410ee0:	mov	w7, #0x1                   	// #1
  410ee4:	add	w0, w0, #0x6
  410ee8:	smull	x2, w0, w2
  410eec:	lsr	x2, x2, #32
  410ef0:	add	w2, w0, w2
  410ef4:	asr	w2, w2, #2
  410ef8:	sub	w2, w2, w0, asr #31
  410efc:	lsl	w14, w2, #3
  410f00:	sub	w14, w14, w2
  410f04:	sub	w14, w0, w14
  410f08:	add	w14, w14, w7
  410f0c:	b	410e28 <__fxstatat@plt+0xe3d8>
  410f10:	cmp	w28, #0x45
  410f14:	b.eq	411738 <__fxstatat@plt+0xece8>  // b.none
  410f18:	ldr	w2, [x27, #20]
  410f1c:	mov	w0, #0x851f                	// #34079
  410f20:	movk	w0, #0x51eb, lsl #16
  410f24:	mov	w3, #0x64                  	// #100
  410f28:	smull	x0, w2, w0
  410f2c:	asr	x0, x0, #37
  410f30:	sub	w0, w0, w2, asr #31
  410f34:	msub	w0, w0, w3, w2
  410f38:	tbz	w0, #31, 41078c <__fxstatat@plt+0xdd3c>
  410f3c:	cmn	w2, #0x76d
  410f40:	add	w2, w0, w3
  410f44:	csneg	w0, w2, w0, gt
  410f48:	b	41078c <__fxstatat@plt+0xdd3c>
  410f4c:	cmp	w3, #0x0
  410f50:	mov	x0, x10
  410f54:	csel	w12, w12, wzr, eq  // eq = none
  410f58:	str	w12, [sp, #144]
  410f5c:	str	x10, [sp, #152]
  410f60:	str	w12, [sp, #160]
  410f64:	str	w3, [sp, #168]
  410f68:	str	w5, [sp, #176]
  410f6c:	bl	402430 <strlen@plt>
  410f70:	cmp	w19, #0x0
  410f74:	mov	x28, x0
  410f78:	csel	w0, w19, wzr, ge  // ge = tcont
  410f7c:	sub	x1, x24, x22
  410f80:	sxtw	x0, w0
  410f84:	cmp	x28, x0
  410f88:	csel	x2, x28, x0, cs  // cs = hs, nlast
  410f8c:	str	x2, [sp, #144]
  410f90:	cmp	x1, x2
  410f94:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  410f98:	ldr	x10, [sp, #152]
  410f9c:	cbz	x21, 411034 <__fxstatat@plt+0xe5e4>
  410fa0:	ldr	w12, [sp, #160]
  410fa4:	cmp	x28, x0
  410fa8:	ldr	w3, [sp, #168]
  410fac:	b.cs	410ff4 <__fxstatat@plt+0xe5a4>  // b.hs, b.nlast
  410fb0:	ldr	w5, [sp, #176]
  410fb4:	sxtw	x2, w19
  410fb8:	str	w12, [sp, #160]
  410fbc:	sub	x2, x2, x28
  410fc0:	str	w3, [sp, #168]
  410fc4:	cmp	w5, #0x30
  410fc8:	mov	w0, #0x2b                  	// #43
  410fcc:	ccmp	w5, w0, #0x4, ne  // ne = any
  410fd0:	add	x5, x21, x2
  410fd4:	b.ne	411a78 <__fxstatat@plt+0xf028>  // b.any
  410fd8:	mov	x0, x21
  410fdc:	mov	w1, #0x30                  	// #48
  410fe0:	mov	x21, x5
  410fe4:	bl	402680 <memset@plt>
  410fe8:	ldr	w12, [sp, #160]
  410fec:	ldr	w3, [sp, #168]
  410ff0:	ldr	x10, [sp, #152]
  410ff4:	cbnz	w3, 4119a0 <__fxstatat@plt+0xef50>
  410ff8:	cbz	w12, 411984 <__fxstatat@plt+0xef34>
  410ffc:	sub	x19, x28, #0x1
  411000:	cbz	x28, 411030 <__fxstatat@plt+0xe5e0>
  411004:	str	x10, [sp, #152]
  411008:	bl	4026f0 <__ctype_toupper_loc@plt>
  41100c:	ldr	x10, [sp, #152]
  411010:	mov	x2, x0
  411014:	ldrb	w1, [x10, x19]
  411018:	ldr	x0, [x2]
  41101c:	ldr	w0, [x0, x1, lsl #2]
  411020:	strb	w0, [x21, x19]
  411024:	sub	x19, x19, #0x1
  411028:	cmn	x19, #0x1
  41102c:	b.ne	411014 <__fxstatat@plt+0xe5c4>  // b.any
  411030:	add	x21, x21, x28
  411034:	ldr	x0, [sp, #144]
  411038:	mov	x4, x20
  41103c:	add	x22, x22, x0
  411040:	b	4102b4 <__fxstatat@plt+0xd864>
  411044:	cmp	w28, #0x45
  411048:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  41104c:	ldr	w14, [x27, #8]
  411050:	b	410e18 <__fxstatat@plt+0xe3c8>
  411054:	cmp	w28, #0x45
  411058:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  41105c:	ldr	w14, [x27, #12]
  411060:	b	410e18 <__fxstatat@plt+0xe3c8>
  411064:	cmp	w28, #0x45
  411068:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  41106c:	ldr	w14, [x27, #12]
  411070:	mov	w7, #0x2                   	// #2
  411074:	b	410e28 <__fxstatat@plt+0xe3d8>
  411078:	cmp	w28, #0x45
  41107c:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  411080:	cmn	w19, #0x1
  411084:	b.ne	41188c <__fxstatat@plt+0xee3c>  // b.any
  411088:	mov	w19, #0x9                   	// #9
  41108c:	ldr	w14, [sp, #1272]
  411090:	mov	w7, w19
  411094:	b	410e28 <__fxstatat@plt+0xe3d8>
  411098:	cmp	w28, #0x45
  41109c:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  4110a0:	ldr	w14, [x27, #4]
  4110a4:	mov	w7, #0x2                   	// #2
  4110a8:	b	410e28 <__fxstatat@plt+0xe3d8>
  4110ac:	cmp	w28, #0x45
  4110b0:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  4110b4:	ldp	w3, w14, [x27, #24]
  4110b8:	mov	w0, #0x2493                	// #9363
  4110bc:	movk	w0, #0x9249, lsl #16
  4110c0:	mov	w7, #0x2                   	// #2
  4110c4:	add	w3, w3, #0x6
  4110c8:	smull	x2, w3, w0
  4110cc:	lsr	x2, x2, #32
  4110d0:	add	w2, w3, w2
  4110d4:	asr	w2, w2, #2
  4110d8:	sub	w2, w2, w3, asr #31
  4110dc:	lsl	w4, w2, #3
  4110e0:	sub	w2, w4, w2
  4110e4:	sub	w3, w3, w2
  4110e8:	sub	w14, w14, w3
  4110ec:	add	w14, w14, #0x7
  4110f0:	smull	x0, w14, w0
  4110f4:	lsr	x0, x0, #32
  4110f8:	add	w0, w14, w0
  4110fc:	asr	w0, w0, #2
  411100:	sub	w14, w0, w14, asr #31
  411104:	b	410e28 <__fxstatat@plt+0xe3d8>
  411108:	cmp	w28, #0x45
  41110c:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  411110:	ldp	w2, w14, [x27, #24]
  411114:	mov	w0, #0x2493                	// #9363
  411118:	movk	w0, #0x9249, lsl #16
  41111c:	mov	w7, #0x2                   	// #2
  411120:	sub	w14, w14, w2
  411124:	b	4110ec <__fxstatat@plt+0xe69c>
  411128:	cmp	w28, #0x45
  41112c:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  411130:	ldr	w14, [x27]
  411134:	mov	w7, #0x2                   	// #2
  411138:	b	410e28 <__fxstatat@plt+0xe3d8>
  41113c:	cmp	w28, #0x45
  411140:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  411144:	ldr	w0, [x27, #28]
  411148:	mov	w3, #0x0                   	// #0
  41114c:	mov	w4, #0x0                   	// #0
  411150:	mov	w7, #0x3                   	// #3
  411154:	adds	w2, w0, #0x1
  411158:	cset	w14, lt  // lt = tstop
  41115c:	cset	w15, ge  // ge = tcont
  411160:	b	4107b8 <__fxstatat@plt+0xdd68>
  411164:	cmp	w19, #0x0
  411168:	mov	x3, #0x1                   	// #1
  41116c:	csel	w0, w19, wzr, ge  // ge = tcont
  411170:	sub	x2, x24, x22
  411174:	sxtw	x0, w0
  411178:	cmp	x0, #0x0
  41117c:	csel	x7, x0, x3, ne  // ne = any
  411180:	cbnz	w28, 411a5c <__fxstatat@plt+0xf00c>
  411184:	cmp	x2, x7
  411188:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  41118c:	cbz	x21, 4111d4 <__fxstatat@plt+0xe784>
  411190:	cmp	w19, #0x1
  411194:	b.le	4111d0 <__fxstatat@plt+0xe780>
  411198:	sxtw	x2, w19
  41119c:	stp	x10, x7, [sp, #144]
  4111a0:	mov	w0, #0x2b                  	// #43
  4111a4:	cmp	w5, #0x30
  4111a8:	sub	x2, x2, #0x1
  4111ac:	ccmp	w5, w0, #0x4, ne  // ne = any
  4111b0:	add	x19, x21, x2
  4111b4:	mov	x0, x21
  4111b8:	b.ne	411a9c <__fxstatat@plt+0xf04c>  // b.any
  4111bc:	mov	w1, #0x30                  	// #48
  4111c0:	bl	402680 <memset@plt>
  4111c4:	ldp	x10, x7, [sp, #144]
  4111c8:	mov	x21, x19
  4111cc:	ldrb	w1, [x20]
  4111d0:	strb	w1, [x21], #1
  4111d4:	add	x22, x22, x7
  4111d8:	mov	x4, x20
  4111dc:	b	4102b4 <__fxstatat@plt+0xd864>
  4111e0:	cmp	w28, #0x45
  4111e4:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  4111e8:	cmp	w3, #0x0
  4111ec:	str	wzr, [sp, #160]
  4111f0:	csel	w12, w12, w3, eq  // eq = none
  4111f4:	b	410528 <__fxstatat@plt+0xdad8>
  4111f8:	cmp	w28, #0x45
  4111fc:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  411200:	mov	w14, w25
  411204:	mov	w7, #0x2                   	// #2
  411208:	b	410e28 <__fxstatat@plt+0xe3d8>
  41120c:	cmp	w28, #0x45
  411210:	b.eq	41039c <__fxstatat@plt+0xd94c>  // b.none
  411214:	ldr	w14, [x27, #8]
  411218:	mov	w7, #0x2                   	// #2
  41121c:	b	410e28 <__fxstatat@plt+0xe3d8>
  411220:	ldrb	w0, [x20, #1]
  411224:	add	x4, x20, #0x1
  411228:	mov	x7, #0x1                   	// #1
  41122c:	cmp	w0, #0x3a
  411230:	b.eq	411350 <__fxstatat@plt+0xe900>  // b.none
  411234:	cmp	w0, #0x7a
  411238:	b.ne	41039c <__fxstatat@plt+0xd94c>  // b.any
  41123c:	ldr	w0, [x27, #32]
  411240:	tbnz	w0, #31, 4102b4 <__fxstatat@plt+0xd864>
  411244:	ldr	x17, [x27, #40]
  411248:	cmp	w17, #0x0
  41124c:	b.lt	41186c <__fxstatat@plt+0xee1c>  // b.tstop
  411250:	b.ne	411938 <__fxstatat@plt+0xeee8>  // b.any
  411254:	ldrb	w0, [x10]
  411258:	cmp	w0, #0x2d
  41125c:	cset	w15, ne  // ne = any
  411260:	cset	w14, eq  // eq = none
  411264:	mov	w3, #0x8889                	// #34953
  411268:	asr	w18, w17, #31
  41126c:	movk	w3, #0x8888, lsl #16
  411270:	mov	w0, #0xb3c5                	// #46021
  411274:	movk	w0, #0x91a2, lsl #16
  411278:	cmp	x7, #0x2
  41127c:	smull	x16, w17, w3
  411280:	smull	x0, w17, w0
  411284:	lsr	x16, x16, #32
  411288:	add	w16, w16, w17
  41128c:	lsr	x0, x0, #32
  411290:	add	w0, w0, w17
  411294:	asr	w16, w16, #5
  411298:	sub	w16, w16, w18
  41129c:	asr	w2, w0, #11
  4112a0:	sub	w0, w2, w18
  4112a4:	lsl	w2, w16, #4
  4112a8:	smull	x3, w16, w3
  4112ac:	sub	w2, w2, w16
  4112b0:	sub	w2, w17, w2, lsl #2
  4112b4:	lsr	x3, x3, #32
  4112b8:	add	w3, w16, w3
  4112bc:	asr	w3, w3, #5
  4112c0:	sub	w3, w3, w16, asr #31
  4112c4:	lsl	w17, w3, #4
  4112c8:	sub	w3, w17, w3
  4112cc:	sub	w3, w16, w3, lsl #2
  4112d0:	b.eq	411944 <__fxstatat@plt+0xeef4>  // b.none
  4112d4:	b.hi	411718 <__fxstatat@plt+0xecc8>  // b.pmore
  4112d8:	cbz	x7, 411a1c <__fxstatat@plt+0xefcc>
  4112dc:	mov	w2, #0x64                  	// #100
  4112e0:	mov	x20, x4
  4112e4:	mov	w7, #0x6                   	// #6
  4112e8:	mov	w4, #0x1                   	// #1
  4112ec:	madd	w2, w0, w2, w3
  4112f0:	mov	w3, #0x4                   	// #4
  4112f4:	b	4107b8 <__fxstatat@plt+0xdd68>
  4112f8:	adrp	x28, 41d000 <_obstack_memory_used@@Base+0x5f80>
  4112fc:	mov	w6, #0xffffffff            	// #-1
  411300:	add	x28, x28, #0xce8
  411304:	b	410874 <__fxstatat@plt+0xde24>
  411308:	mov	x4, x20
  41130c:	mov	x7, #0x0                   	// #0
  411310:	b	41123c <__fxstatat@plt+0xe7ec>
  411314:	str	wzr, [sp, #160]
  411318:	ldr	w0, [sp, #160]
  41131c:	cmp	w3, #0x0
  411320:	csel	w12, w12, wzr, eq  // eq = none
  411324:	mov	w1, #0x70                  	// #112
  411328:	csel	w0, w0, w3, eq  // eq = none
  41132c:	str	w0, [sp, #160]
  411330:	b	410528 <__fxstatat@plt+0xdad8>
  411334:	mov	w0, #0x1                   	// #1
  411338:	str	w0, [sp, #160]
  41133c:	b	411318 <__fxstatat@plt+0xe8c8>
  411340:	adrp	x28, 41d000 <_obstack_memory_used@@Base+0x5f80>
  411344:	mov	w6, #0xffffffff            	// #-1
  411348:	add	x28, x28, #0xcd8
  41134c:	b	410874 <__fxstatat@plt+0xde24>
  411350:	add	x7, x7, #0x1
  411354:	add	x4, x20, x7
  411358:	ldrb	w0, [x20, x7]
  41135c:	cmp	w0, #0x3a
  411360:	b.ne	411234 <__fxstatat@plt+0xe7e4>  // b.any
  411364:	b	411350 <__fxstatat@plt+0xe900>
  411368:	mov	w1, w2
  41136c:	mov	x20, x4
  411370:	mov	w28, w2
  411374:	mov	w19, #0x7fffffff            	// #2147483647
  411378:	b	410380 <__fxstatat@plt+0xd930>
  41137c:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  411380:	mov	w4, #0x30                  	// #48
  411384:	movk	x6, #0x6667
  411388:	smulh	x1, x3, x6
  41138c:	asr	x2, x3, #63
  411390:	asr	x1, x1, #2
  411394:	sub	x0, x1, x2
  411398:	add	x0, x0, x0, lsl #2
  41139c:	sub	x0, x3, x0, lsl #1
  4113a0:	subs	x3, x1, x2
  4113a4:	sub	w0, w4, w0
  4113a8:	strb	w0, [x28, #-1]!
  4113ac:	b.ne	411388 <__fxstatat@plt+0xe938>  // b.any
  4113b0:	cmp	w19, #0x0
  4113b4:	csinc	w7, w19, wzr, gt
  4113b8:	cmp	w5, #0x2d
  4113bc:	mov	w4, #0x2d                  	// #45
  4113c0:	b.ne	410a64 <__fxstatat@plt+0xe014>  // b.any
  4113c4:	cmp	w19, #0x0
  4113c8:	sub	x0, x24, x22
  4113cc:	csel	w3, w19, wzr, ge  // ge = tcont
  4113d0:	sxtw	x3, w3
  4113d4:	cmp	x3, #0x0
  4113d8:	csinc	x4, x3, xzr, ne  // ne = any
  4113dc:	cmp	x0, x4
  4113e0:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  4113e4:	cbz	x21, 4113f8 <__fxstatat@plt+0xe9a8>
  4113e8:	cmp	w7, #0x0
  4113ec:	ccmp	x3, #0x1, #0x0, eq  // eq = none
  4113f0:	b.hi	411414 <__fxstatat@plt+0xe9c4>  // b.pmore
  4113f4:	strb	w5, [x21], #1
  4113f8:	add	x22, x22, x4
  4113fc:	add	x6, sp, #0xef
  411400:	mov	x4, x20
  411404:	sub	x0, x24, x22
  411408:	sub	x6, x6, x28
  41140c:	mov	w5, #0x2d                  	// #45
  411410:	b	410ccc <__fxstatat@plt+0xe27c>
  411414:	sxtw	x2, w19
  411418:	mov	x0, x21
  41141c:	sub	x2, x2, #0x1
  411420:	mov	w1, #0x20                  	// #32
  411424:	add	x21, x21, x2
  411428:	str	x10, [sp, #144]
  41142c:	str	w12, [sp, #152]
  411430:	str	w7, [sp, #160]
  411434:	str	x4, [sp, #168]
  411438:	str	w5, [sp, #176]
  41143c:	str	x3, [sp, #184]
  411440:	bl	402680 <memset@plt>
  411444:	ldr	w12, [sp, #152]
  411448:	ldr	w7, [sp, #160]
  41144c:	ldr	w5, [sp, #176]
  411450:	ldr	x10, [sp, #144]
  411454:	ldr	x4, [sp, #168]
  411458:	ldr	x3, [sp, #184]
  41145c:	b	4113f4 <__fxstatat@plt+0xe9a4>
  411460:	mov	x2, x6
  411464:	mov	x0, x21
  411468:	mov	x1, x28
  41146c:	stp	x6, x10, [sp, #144]
  411470:	str	x4, [sp, #160]
  411474:	bl	4023c0 <memcpy@plt>
  411478:	ldp	x6, x10, [sp, #144]
  41147c:	ldr	x4, [sp, #160]
  411480:	add	x21, x21, x6
  411484:	b	410d70 <__fxstatat@plt+0xe320>
  411488:	mov	x0, x21
  41148c:	mov	x1, x3
  411490:	mov	x2, x28
  411494:	stp	x10, x4, [sp, #144]
  411498:	add	x21, x21, x28
  41149c:	str	x7, [sp, #160]
  4114a0:	bl	4023c0 <memcpy@plt>
  4114a4:	ldp	x10, x4, [sp, #144]
  4114a8:	ldr	x7, [sp, #160]
  4114ac:	b	410470 <__fxstatat@plt+0xda20>
  4114b0:	mov	x2, x3
  4114b4:	mov	x0, x21
  4114b8:	add	x1, sp, #0xf1
  4114bc:	stp	x3, x10, [sp, #144]
  4114c0:	stp	x4, x7, [sp, #160]
  4114c4:	bl	4023c0 <memcpy@plt>
  4114c8:	ldp	x3, x10, [sp, #144]
  4114cc:	ldp	x4, x7, [sp, #160]
  4114d0:	add	x21, x21, x3
  4114d4:	b	410640 <__fxstatat@plt+0xdbf0>
  4114d8:	sub	x20, x20, #0x2
  4114dc:	cbz	x3, 41063c <__fxstatat@plt+0xdbec>
  4114e0:	stp	x10, x4, [sp, #144]
  4114e4:	stp	x3, x7, [sp, #160]
  4114e8:	bl	402560 <__ctype_tolower_loc@plt>
  4114ec:	ldp	x10, x4, [sp, #144]
  4114f0:	ldp	x3, x7, [sp, #160]
  4114f4:	nop
  4114f8:	add	x1, sp, #0xf0
  4114fc:	add	x2, x1, x20
  411500:	ldr	x1, [x0]
  411504:	ldrb	w2, [x2, #1]
  411508:	ldr	w1, [x1, x2, lsl #2]
  41150c:	strb	w1, [x21, x20]
  411510:	sub	x20, x20, #0x1
  411514:	cmn	x20, #0x1
  411518:	b.ne	4114f8 <__fxstatat@plt+0xeaa8>  // b.any
  41151c:	add	x21, x21, x3
  411520:	b	410640 <__fxstatat@plt+0xdbf0>
  411524:	mov	x0, x21
  411528:	mov	w1, #0x20                  	// #32
  41152c:	mov	x21, x5
  411530:	stp	x10, x4, [sp, #144]
  411534:	bl	402680 <memset@plt>
  411538:	ldr	w12, [sp, #168]
  41153c:	ldp	x10, x4, [sp, #144]
  411540:	ldp	x3, x7, [sp, #176]
  411544:	b	4105ec <__fxstatat@plt+0xdb9c>
  411548:	mov	x21, x3
  41154c:	mov	w1, #0x20                  	// #32
  411550:	bl	402680 <memset@plt>
  411554:	ldr	w12, [sp, #160]
  411558:	ldp	x10, x4, [sp, #144]
  41155c:	ldr	x6, [sp, #168]
  411560:	b	410d30 <__fxstatat@plt+0xe2e0>
  411564:	mov	x21, x5
  411568:	mov	w1, #0x20                  	// #32
  41156c:	bl	402680 <memset@plt>
  411570:	ldr	w12, [sp, #160]
  411574:	ldp	x10, x4, [sp, #144]
  411578:	ldp	x3, x7, [sp, #168]
  41157c:	b	410430 <__fxstatat@plt+0xd9e0>
  411580:	cmp	w19, #0x0
  411584:	csel	w3, w19, wzr, ge  // ge = tcont
  411588:	sxtw	x3, w3
  41158c:	cmp	x3, #0x0
  411590:	csinc	x14, x3, xzr, ne  // ne = any
  411594:	cmp	x14, x0
  411598:	b.cs	4102d8 <__fxstatat@plt+0xd888>  // b.hs, b.nlast
  41159c:	cbz	x21, 411614 <__fxstatat@plt+0xebc4>
  4115a0:	cmp	w7, #0x0
  4115a4:	ccmp	x3, #0x1, #0x0, eq  // eq = none
  4115a8:	b.ls	411610 <__fxstatat@plt+0xebc0>  // b.plast
  4115ac:	sxtw	x2, w19
  4115b0:	str	x10, [sp, #144]
  4115b4:	str	w5, [sp, #152]
  4115b8:	mov	w0, #0x2b                  	// #43
  4115bc:	str	w12, [sp, #160]
  4115c0:	cmp	w5, #0x30
  4115c4:	str	w7, [sp, #168]
  4115c8:	sub	x2, x2, #0x1
  4115cc:	str	x14, [sp, #176]
  4115d0:	ccmp	w5, w0, #0x4, ne  // ne = any
  4115d4:	str	w4, [sp, #184]
  4115d8:	add	x15, x21, x2
  4115dc:	stp	x6, x3, [sp, #192]
  4115e0:	mov	x0, x21
  4115e4:	b.ne	4119fc <__fxstatat@plt+0xefac>  // b.any
  4115e8:	mov	x21, x15
  4115ec:	mov	w1, #0x30                  	// #48
  4115f0:	bl	402680 <memset@plt>
  4115f4:	ldp	x6, x3, [sp, #192]
  4115f8:	ldr	w5, [sp, #152]
  4115fc:	ldr	w12, [sp, #160]
  411600:	ldr	w7, [sp, #168]
  411604:	ldr	w4, [sp, #184]
  411608:	ldr	x10, [sp, #144]
  41160c:	ldr	x14, [sp, #176]
  411610:	strb	w4, [x21], #1
  411614:	add	x22, x22, x14
  411618:	mov	x4, x20
  41161c:	sub	x0, x24, x22
  411620:	b	410ccc <__fxstatat@plt+0xe27c>
  411624:	cmp	x0, w3, sxtw
  411628:	sxtw	x2, w3
  41162c:	b.ls	4102d8 <__fxstatat@plt+0xd888>  // b.plast
  411630:	cbz	x21, 41167c <__fxstatat@plt+0xec2c>
  411634:	mov	x0, x21
  411638:	mov	w1, #0x20                  	// #32
  41163c:	add	x21, x21, x2
  411640:	stp	x2, x10, [sp, #144]
  411644:	str	w5, [sp, #160]
  411648:	str	w12, [sp, #168]
  41164c:	str	w7, [sp, #176]
  411650:	str	w4, [sp, #184]
  411654:	str	x6, [sp, #192]
  411658:	str	w3, [sp, #200]
  41165c:	bl	402680 <memset@plt>
  411660:	ldp	x2, x10, [sp, #144]
  411664:	ldr	w5, [sp, #160]
  411668:	ldr	w12, [sp, #168]
  41166c:	ldr	w7, [sp, #176]
  411670:	ldr	w4, [sp, #184]
  411674:	ldr	w3, [sp, #200]
  411678:	ldr	x6, [sp, #192]
  41167c:	add	x22, x22, x2
  411680:	cmp	w19, w3
  411684:	b.le	411774 <__fxstatat@plt+0xed24>
  411688:	sub	w19, w19, w3
  41168c:	sxtw	x3, w19
  411690:	sub	x0, x24, x22
  411694:	cbz	w4, 41176c <__fxstatat@plt+0xed1c>
  411698:	cmp	x3, #0x0
  41169c:	csinc	x14, x3, xzr, ne  // ne = any
  4116a0:	cmp	x14, x0
  4116a4:	b.cs	4102d8 <__fxstatat@plt+0xd888>  // b.hs, b.nlast
  4116a8:	cbz	x21, 411614 <__fxstatat@plt+0xebc4>
  4116ac:	cmp	w7, #0x0
  4116b0:	ccmp	x3, #0x1, #0x0, eq  // eq = none
  4116b4:	b.ls	411610 <__fxstatat@plt+0xebc0>  // b.plast
  4116b8:	sxtw	x2, w19
  4116bc:	mov	x0, x21
  4116c0:	sub	x2, x2, #0x1
  4116c4:	mov	w1, #0x20                  	// #32
  4116c8:	add	x21, x21, x2
  4116cc:	str	x10, [sp, #144]
  4116d0:	str	w5, [sp, #152]
  4116d4:	str	w12, [sp, #160]
  4116d8:	str	w7, [sp, #168]
  4116dc:	str	x14, [sp, #176]
  4116e0:	str	w4, [sp, #184]
  4116e4:	stp	x6, x3, [sp, #192]
  4116e8:	bl	402680 <memset@plt>
  4116ec:	ldr	w5, [sp, #152]
  4116f0:	ldr	w12, [sp, #160]
  4116f4:	ldr	w7, [sp, #168]
  4116f8:	ldr	w4, [sp, #184]
  4116fc:	ldr	x10, [sp, #144]
  411700:	ldr	x14, [sp, #176]
  411704:	ldp	x6, x3, [sp, #192]
  411708:	b	411610 <__fxstatat@plt+0xebc0>
  41170c:	sxtw	x3, w3
  411710:	cbz	x21, 410b64 <__fxstatat@plt+0xe114>
  411714:	b	410b28 <__fxstatat@plt+0xe0d8>
  411718:	mov	x20, x4
  41171c:	cmp	x7, #0x3
  411720:	b.ne	41039c <__fxstatat@plt+0xd94c>  // b.any
  411724:	cbnz	w2, 411944 <__fxstatat@plt+0xeef4>
  411728:	cbnz	w3, 4112dc <__fxstatat@plt+0xe88c>
  41172c:	mov	w2, w0
  411730:	mov	w4, #0x1                   	// #1
  411734:	b	4107b8 <__fxstatat@plt+0xdd68>
  411738:	mov	w7, #0x0                   	// #0
  41173c:	b	4107c4 <__fxstatat@plt+0xdd74>
  411740:	mov	w5, #0x2b                  	// #43
  411744:	b	4113c4 <__fxstatat@plt+0xe974>
  411748:	mov	x21, x7
  41174c:	mov	w1, #0x20                  	// #32
  411750:	bl	402680 <memset@plt>
  411754:	ldr	w5, [sp, #160]
  411758:	ldr	w12, [sp, #168]
  41175c:	ldr	w6, [sp, #176]
  411760:	ldp	x3, x10, [sp, #144]
  411764:	ldp	x4, x14, [sp, #184]
  411768:	b	410944 <__fxstatat@plt+0xdef4>
  41176c:	mov	x4, x20
  411770:	b	410ccc <__fxstatat@plt+0xe27c>
  411774:	mov	x3, #0x0                   	// #0
  411778:	mov	w19, #0x0                   	// #0
  41177c:	b	411690 <__fxstatat@plt+0xec40>
  411780:	add	w2, w0, #0x64
  411784:	cbz	w5, 411ac4 <__fxstatat@plt+0xf074>
  411788:	cmp	w5, #0x2b
  41178c:	b.eq	4119d8 <__fxstatat@plt+0xef88>  // b.none
  411790:	mov	w15, #0x1                   	// #1
  411794:	b	4107a4 <__fxstatat@plt+0xdd54>
  411798:	cmp	w5, #0x2b
  41179c:	mov	w4, #0x0                   	// #0
  4117a0:	mov	w7, #0x4                   	// #4
  4117a4:	mov	w0, #0x270f                	// #9999
  4117a8:	b.ne	4107b0 <__fxstatat@plt+0xdd60>  // b.any
  4117ac:	cmp	w0, w2
  4117b0:	mov	w4, #0x1                   	// #1
  4117b4:	mov	w5, #0x2b                  	// #43
  4117b8:	b.cc	4107b0 <__fxstatat@plt+0xdd60>  // b.lo, b.ul, b.last
  4117bc:	cmp	w19, w7
  4117c0:	mov	w5, #0x2b                  	// #43
  4117c4:	cset	w4, gt
  4117c8:	b	4107b0 <__fxstatat@plt+0xdd60>
  4117cc:	sub	w3, w3, #0x1
  4117d0:	mov	w14, #0x16d                 	// #365
  4117d4:	tst	x3, #0x3
  4117d8:	b.ne	411820 <__fxstatat@plt+0xedd0>  // b.any
  4117dc:	mov	w0, #0x5c29                	// #23593
  4117e0:	mov	w14, #0xb850                	// #47184
  4117e4:	movk	w14, #0x51e, lsl #16
  4117e8:	movk	w0, #0xc28f, lsl #16
  4117ec:	mov	w15, #0x5c28                	// #23592
  4117f0:	madd	w0, w3, w0, w14
  4117f4:	movk	w15, #0x28f, lsl #16
  4117f8:	mov	w14, #0x16e                 	// #366
  4117fc:	ror	w0, w0, #2
  411800:	cmp	w0, w15
  411804:	b.hi	411820 <__fxstatat@plt+0xedd0>  // b.pmore
  411808:	mov	w14, #0x190                 	// #400
  41180c:	sdiv	w0, w3, w14
  411810:	msub	w3, w0, w14, w3
  411814:	cmp	w3, #0x0
  411818:	cset	w14, eq  // eq = none
  41181c:	add	w14, w14, #0x16d
  411820:	add	w14, w7, w14
  411824:	mov	w0, #0x2493                	// #9363
  411828:	sub	w2, w14, w2
  41182c:	movk	w0, #0x9249, lsl #16
  411830:	add	w15, w2, #0x17e
  411834:	mov	w7, #0xffffffff            	// #-1
  411838:	mov	w3, #0xfffff895            	// #-1899
  41183c:	mov	w2, w7
  411840:	smull	x0, w15, w0
  411844:	lsr	x0, x0, #32
  411848:	add	w0, w15, w0
  41184c:	asr	w0, w0, #2
  411850:	sub	w0, w0, w15, asr #31
  411854:	lsl	w16, w0, #3
  411858:	sub	w0, w16, w0
  41185c:	sub	w15, w15, w0
  411860:	sub	w14, w14, w15
  411864:	add	w14, w14, #0x3
  411868:	b	410748 <__fxstatat@plt+0xdcf8>
  41186c:	mov	w15, #0x0                   	// #0
  411870:	mov	w14, #0x1                   	// #1
  411874:	b	411264 <__fxstatat@plt+0xe814>
  411878:	adrp	x28, 41d000 <_obstack_memory_used@@Base+0x5f80>
  41187c:	mov	w6, #0x4                   	// #4
  411880:	add	x28, x28, #0xcc8
  411884:	mov	w5, #0x2b                  	// #43
  411888:	b	410874 <__fxstatat@plt+0xde24>
  41188c:	cmp	w19, #0x8
  411890:	b.gt	411ae8 <__fxstatat@plt+0xf098>
  411894:	ldr	w14, [sp, #1272]
  411898:	mov	w3, #0x6667                	// #26215
  41189c:	mov	w2, w19
  4118a0:	movk	w3, #0x6666, lsl #16
  4118a4:	nop
  4118a8:	smull	x0, w14, w3
  4118ac:	add	w2, w2, #0x1
  4118b0:	cmp	w2, #0x9
  4118b4:	asr	x0, x0, #34
  4118b8:	sub	w14, w0, w14, asr #31
  4118bc:	b.ne	4118a8 <__fxstatat@plt+0xee58>  // b.any
  4118c0:	mov	w7, w19
  4118c4:	b	410e28 <__fxstatat@plt+0xe3d8>
  4118c8:	cmp	w5, #0x2b
  4118cc:	b.ne	410eb4 <__fxstatat@plt+0xe464>  // b.any
  4118d0:	mov	w7, #0x2                   	// #2
  4118d4:	mov	w0, #0x63                  	// #99
  4118d8:	b	4117ac <__fxstatat@plt+0xed5c>
  4118dc:	mov	w0, #0x2493                	// #9363
  4118e0:	mov	w7, #0x2                   	// #2
  4118e4:	movk	w0, #0x9249, lsl #16
  4118e8:	smull	x0, w14, w0
  4118ec:	lsr	x0, x0, #32
  4118f0:	add	w0, w14, w0
  4118f4:	asr	w0, w0, #2
  4118f8:	sub	w14, w0, w14, asr #31
  4118fc:	add	w14, w14, #0x1
  411900:	b	410e28 <__fxstatat@plt+0xe3d8>
  411904:	cmp	w4, w3
  411908:	add	w0, w4, #0x76c
  41190c:	cset	w14, lt  // lt = tstop
  411910:	add	w2, w0, w7
  411914:	cset	w15, ge  // ge = tcont
  411918:	cbnz	w5, 411798 <__fxstatat@plt+0xed48>
  41191c:	ldr	w0, [sp, #140]
  411920:	cmp	w0, #0x2b
  411924:	b.eq	411a6c <__fxstatat@plt+0xf01c>  // b.none
  411928:	mov	w5, w0
  41192c:	mov	w4, #0x0                   	// #0
  411930:	mov	w7, #0x4                   	// #4
  411934:	b	4107b0 <__fxstatat@plt+0xdd60>
  411938:	mov	w15, #0x1                   	// #1
  41193c:	mov	w14, #0x0                   	// #0
  411940:	b	411264 <__fxstatat@plt+0xe814>
  411944:	mov	w16, #0x64                  	// #100
  411948:	mov	w7, #0x2710                	// #10000
  41194c:	mov	x20, x4
  411950:	mov	w4, #0x1                   	// #1
  411954:	mul	w3, w3, w16
  411958:	madd	w0, w0, w7, w3
  41195c:	mov	w7, #0x9                   	// #9
  411960:	mov	w3, #0x14                  	// #20
  411964:	add	w2, w0, w2
  411968:	b	4107b8 <__fxstatat@plt+0xdd68>
  41196c:	mov	w4, #0x0                   	// #0
  411970:	b	410a80 <__fxstatat@plt+0xe030>
  411974:	mov	w7, #0x0                   	// #0
  411978:	mov	w3, #0xfffff894            	// #-1900
  41197c:	mov	w2, #0x0                   	// #0
  411980:	b	410748 <__fxstatat@plt+0xdcf8>
  411984:	mov	x1, x10
  411988:	mov	x2, x28
  41198c:	mov	x0, x21
  411990:	str	x10, [sp, #152]
  411994:	bl	4023c0 <memcpy@plt>
  411998:	ldr	x10, [sp, #152]
  41199c:	b	411030 <__fxstatat@plt+0xe5e0>
  4119a0:	sub	x19, x28, #0x1
  4119a4:	cbz	x28, 411030 <__fxstatat@plt+0xe5e0>
  4119a8:	str	x10, [sp, #152]
  4119ac:	bl	402560 <__ctype_tolower_loc@plt>
  4119b0:	ldr	x10, [sp, #152]
  4119b4:	mov	x2, x0
  4119b8:	ldrb	w1, [x10, x19]
  4119bc:	ldr	x0, [x2]
  4119c0:	ldr	w0, [x0, x1, lsl #2]
  4119c4:	strb	w0, [x21, x19]
  4119c8:	sub	x19, x19, #0x1
  4119cc:	cmn	x19, #0x1
  4119d0:	b.ne	4119b8 <__fxstatat@plt+0xef68>  // b.any
  4119d4:	b	411030 <__fxstatat@plt+0xe5e0>
  4119d8:	mov	w15, #0x1                   	// #1
  4119dc:	mov	w14, #0x0                   	// #0
  4119e0:	mov	w7, #0x2                   	// #2
  4119e4:	b	4117bc <__fxstatat@plt+0xed6c>
  4119e8:	mov	x21, x3
  4119ec:	mov	w1, #0x20                  	// #32
  4119f0:	bl	402680 <memset@plt>
  4119f4:	ldr	x10, [sp, #144]
  4119f8:	b	410c0c <__fxstatat@plt+0xe1bc>
  4119fc:	mov	x21, x15
  411a00:	mov	w1, #0x20                  	// #32
  411a04:	b	4116e8 <__fxstatat@plt+0xec98>
  411a08:	mov	x21, x3
  411a0c:	mov	w1, #0x20                  	// #32
  411a10:	bl	402680 <memset@plt>
  411a14:	ldr	x10, [sp, #144]
  411a18:	b	410dd8 <__fxstatat@plt+0xe388>
  411a1c:	mov	w2, #0x64                  	// #100
  411a20:	mov	x20, x4
  411a24:	mov	w7, #0x5                   	// #5
  411a28:	mov	w4, #0x1                   	// #1
  411a2c:	madd	w2, w0, w2, w3
  411a30:	b	4107b0 <__fxstatat@plt+0xdd60>
  411a34:	mov	x21, x14
  411a38:	mov	w1, #0x20                  	// #32
  411a3c:	bl	402680 <memset@plt>
  411a40:	ldr	w5, [sp, #152]
  411a44:	ldr	w12, [sp, #160]
  411a48:	ldr	w7, [sp, #168]
  411a4c:	ldr	w4, [sp, #176]
  411a50:	ldr	x10, [sp, #144]
  411a54:	ldp	x6, x3, [sp, #184]
  411a58:	b	410b24 <__fxstatat@plt+0xe0d4>
  411a5c:	mov	x28, x3
  411a60:	mov	x4, x20
  411a64:	mov	x3, x20
  411a68:	b	4103d8 <__fxstatat@plt+0xd988>
  411a6c:	mov	w7, #0x4                   	// #4
  411a70:	mov	w0, #0x270f                	// #9999
  411a74:	b	4117ac <__fxstatat@plt+0xed5c>
  411a78:	mov	x0, x21
  411a7c:	mov	w1, #0x20                  	// #32
  411a80:	mov	x21, x5
  411a84:	str	x10, [sp, #152]
  411a88:	bl	402680 <memset@plt>
  411a8c:	ldr	w12, [sp, #160]
  411a90:	ldr	w3, [sp, #168]
  411a94:	ldr	x10, [sp, #152]
  411a98:	b	410ff4 <__fxstatat@plt+0xe5a4>
  411a9c:	mov	w1, #0x20                  	// #32
  411aa0:	bl	402680 <memset@plt>
  411aa4:	ldrb	w1, [x20]
  411aa8:	mov	x21, x19
  411aac:	ldp	x10, x7, [sp, #144]
  411ab0:	b	4111d0 <__fxstatat@plt+0xe780>
  411ab4:	cmp	w4, w3
  411ab8:	b.ge	411780 <__fxstatat@plt+0xed30>  // b.tcont
  411abc:	neg	w2, w0
  411ac0:	cbnz	w5, 411788 <__fxstatat@plt+0xed38>
  411ac4:	ldr	w0, [sp, #140]
  411ac8:	cmp	w0, #0x2b
  411acc:	b.eq	4119d8 <__fxstatat@plt+0xef88>  // b.none
  411ad0:	mov	w5, w0
  411ad4:	mov	w15, #0x1                   	// #1
  411ad8:	mov	w4, #0x0                   	// #0
  411adc:	mov	w14, #0x0                   	// #0
  411ae0:	mov	w7, #0x2                   	// #2
  411ae4:	b	4107b0 <__fxstatat@plt+0xdd60>
  411ae8:	ldr	w14, [sp, #1272]
  411aec:	mov	w7, w19
  411af0:	b	410e28 <__fxstatat@plt+0xe3d8>
  411af4:	mov	w7, #0x0                   	// #0
  411af8:	b	4107d0 <__fxstatat@plt+0xdd80>
  411afc:	mov	x20, x3
  411b00:	b	41039c <__fxstatat@plt+0xd94c>
  411b04:	nop
  411b08:	sub	sp, sp, #0x30
  411b0c:	mov	w6, #0xffffffff            	// #-1
  411b10:	add	x7, sp, #0x2f
  411b14:	stp	x29, x30, [sp, #16]
  411b18:	add	x29, sp, #0x10
  411b1c:	str	x4, [sp]
  411b20:	mov	w4, #0x0                   	// #0
  411b24:	str	w5, [sp, #8]
  411b28:	mov	w5, #0x0                   	// #0
  411b2c:	strb	wzr, [sp, #47]
  411b30:	bl	4101e8 <__fxstatat@plt+0xd798>
  411b34:	ldp	x29, x30, [sp, #16]
  411b38:	add	sp, sp, #0x30
  411b3c:	ret
  411b40:	stp	x29, x30, [sp, #-48]!
  411b44:	mov	x29, sp
  411b48:	stp	x19, x20, [sp, #16]
  411b4c:	cbz	x0, 411c24 <__fxstatat@plt+0xf1d4>
  411b50:	mov	x19, x0
  411b54:	mov	w1, #0x2f                  	// #47
  411b58:	bl	402720 <strrchr@plt>
  411b5c:	mov	x20, x0
  411b60:	cbz	x0, 411bc4 <__fxstatat@plt+0xf174>
  411b64:	str	x21, [sp, #32]
  411b68:	add	x21, x0, #0x1
  411b6c:	sub	x0, x21, x19
  411b70:	cmp	x0, #0x6
  411b74:	b.le	411be0 <__fxstatat@plt+0xf190>
  411b78:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  411b7c:	sub	x0, x20, #0x6
  411b80:	add	x1, x1, #0xe20
  411b84:	mov	x2, #0x7                   	// #7
  411b88:	bl	402640 <strncmp@plt>
  411b8c:	cbnz	w0, 411be0 <__fxstatat@plt+0xf190>
  411b90:	ldrb	w0, [x20, #1]
  411b94:	cmp	w0, #0x6c
  411b98:	b.ne	411c00 <__fxstatat@plt+0xf1b0>  // b.any
  411b9c:	ldrb	w0, [x21, #1]
  411ba0:	cmp	w0, #0x74
  411ba4:	b.ne	411c00 <__fxstatat@plt+0xf1b0>  // b.any
  411ba8:	ldrb	w0, [x21, #2]
  411bac:	cmp	w0, #0x2d
  411bb0:	b.ne	411c00 <__fxstatat@plt+0xf1b0>  // b.any
  411bb4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  411bb8:	add	x19, x20, #0x4
  411bbc:	ldr	x21, [sp, #32]
  411bc0:	str	x19, [x0, #1480]
  411bc4:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0xa38>
  411bc8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  411bcc:	str	x19, [x1, #1880]
  411bd0:	str	x19, [x0, #1440]
  411bd4:	ldp	x19, x20, [sp, #16]
  411bd8:	ldp	x29, x30, [sp], #48
  411bdc:	ret
  411be0:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0xa38>
  411be4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  411be8:	ldr	x21, [sp, #32]
  411bec:	str	x19, [x1, #1880]
  411bf0:	str	x19, [x0, #1440]
  411bf4:	ldp	x19, x20, [sp, #16]
  411bf8:	ldp	x29, x30, [sp], #48
  411bfc:	ret
  411c00:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0xa38>
  411c04:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  411c08:	mov	x19, x21
  411c0c:	str	x19, [x1, #1880]
  411c10:	str	x19, [x0, #1440]
  411c14:	ldp	x19, x20, [sp, #16]
  411c18:	ldr	x21, [sp, #32]
  411c1c:	ldp	x29, x30, [sp], #48
  411c20:	ret
  411c24:	adrp	x3, 433000 <_obstack_memory_used@@Base+0x1bf80>
  411c28:	mov	x2, #0x37                  	// #55
  411c2c:	mov	x1, #0x1                   	// #1
  411c30:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  411c34:	ldr	x3, [x3, #1448]
  411c38:	add	x0, x0, #0xde8
  411c3c:	str	x21, [sp, #32]
  411c40:	bl	402890 <fwrite@plt>
  411c44:	bl	402760 <abort@plt>
  411c48:	stp	x29, x30, [sp, #-48]!
  411c4c:	mov	w2, #0x5                   	// #5
  411c50:	mov	x29, sp
  411c54:	stp	x19, x20, [sp, #16]
  411c58:	mov	x20, x0
  411c5c:	str	x21, [sp, #32]
  411c60:	mov	w21, w1
  411c64:	mov	x1, x0
  411c68:	mov	x0, #0x0                   	// #0
  411c6c:	bl	402970 <dcgettext@plt>
  411c70:	mov	x19, x0
  411c74:	cmp	x20, x0
  411c78:	b.eq	411c90 <__fxstatat@plt+0xf240>  // b.none
  411c7c:	mov	x0, x19
  411c80:	ldp	x19, x20, [sp, #16]
  411c84:	ldr	x21, [sp, #32]
  411c88:	ldp	x29, x30, [sp], #48
  411c8c:	ret
  411c90:	bl	417860 <_obstack_memory_used@@Base+0x7e0>
  411c94:	ldrb	w1, [x0]
  411c98:	and	w1, w1, #0xffffffdf
  411c9c:	cmp	w1, #0x55
  411ca0:	b.ne	411d04 <__fxstatat@plt+0xf2b4>  // b.any
  411ca4:	ldrb	w1, [x0, #1]
  411ca8:	and	w1, w1, #0xffffffdf
  411cac:	cmp	w1, #0x54
  411cb0:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411cb4:	ldrb	w1, [x0, #2]
  411cb8:	and	w1, w1, #0xffffffdf
  411cbc:	cmp	w1, #0x46
  411cc0:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411cc4:	ldrb	w1, [x0, #3]
  411cc8:	cmp	w1, #0x2d
  411ccc:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411cd0:	ldrb	w1, [x0, #4]
  411cd4:	cmp	w1, #0x38
  411cd8:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411cdc:	ldrb	w0, [x0, #5]
  411ce0:	cbnz	w0, 411d80 <__fxstatat@plt+0xf330>
  411ce4:	ldrb	w1, [x19]
  411ce8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  411cec:	adrp	x19, 41d000 <_obstack_memory_used@@Base+0x5f80>
  411cf0:	add	x0, x0, #0xe30
  411cf4:	cmp	w1, #0x60
  411cf8:	add	x19, x19, #0xe48
  411cfc:	csel	x19, x19, x0, eq  // eq = none
  411d00:	b	411c7c <__fxstatat@plt+0xf22c>
  411d04:	cmp	w1, #0x47
  411d08:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411d0c:	ldrb	w1, [x0, #1]
  411d10:	and	w1, w1, #0xffffffdf
  411d14:	cmp	w1, #0x42
  411d18:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411d1c:	ldrb	w1, [x0, #2]
  411d20:	cmp	w1, #0x31
  411d24:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411d28:	ldrb	w1, [x0, #3]
  411d2c:	cmp	w1, #0x38
  411d30:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411d34:	ldrb	w1, [x0, #4]
  411d38:	cmp	w1, #0x30
  411d3c:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411d40:	ldrb	w1, [x0, #5]
  411d44:	cmp	w1, #0x33
  411d48:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411d4c:	ldrb	w1, [x0, #6]
  411d50:	cmp	w1, #0x30
  411d54:	b.ne	411d80 <__fxstatat@plt+0xf330>  // b.any
  411d58:	ldrb	w0, [x0, #7]
  411d5c:	cbnz	w0, 411d80 <__fxstatat@plt+0xf330>
  411d60:	ldrb	w1, [x19]
  411d64:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  411d68:	adrp	x19, 41d000 <_obstack_memory_used@@Base+0x5f80>
  411d6c:	add	x0, x0, #0xe38
  411d70:	cmp	w1, #0x60
  411d74:	add	x19, x19, #0xe40
  411d78:	csel	x19, x19, x0, eq  // eq = none
  411d7c:	b	411c7c <__fxstatat@plt+0xf22c>
  411d80:	cmp	w21, #0x9
  411d84:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  411d88:	adrp	x19, 41d000 <_obstack_memory_used@@Base+0x5f80>
  411d8c:	add	x0, x0, #0xe50
  411d90:	add	x19, x19, #0xe28
  411d94:	csel	x19, x19, x0, eq  // eq = none
  411d98:	mov	x0, x19
  411d9c:	ldp	x19, x20, [sp, #16]
  411da0:	ldr	x21, [sp, #32]
  411da4:	ldp	x29, x30, [sp], #48
  411da8:	ret
  411dac:	nop
  411db0:	sub	sp, sp, #0x100
  411db4:	stp	x29, x30, [sp, #16]
  411db8:	add	x29, sp, #0x10
  411dbc:	stp	x19, x20, [sp, #32]
  411dc0:	mov	w19, w5
  411dc4:	and	w20, w5, #0x2
  411dc8:	stp	x21, x22, [sp, #48]
  411dcc:	mov	w21, w4
  411dd0:	stp	x23, x24, [sp, #64]
  411dd4:	mov	x23, x1
  411dd8:	mov	x24, x3
  411ddc:	stp	x25, x26, [sp, #80]
  411de0:	mov	x26, x6
  411de4:	stp	x27, x28, [sp, #96]
  411de8:	mov	x28, x0
  411dec:	mov	x27, x2
  411df0:	str	w4, [sp, #116]
  411df4:	str	w5, [sp, #184]
  411df8:	str	x7, [sp, #200]
  411dfc:	bl	402850 <__ctype_get_mb_cur_max@plt>
  411e00:	mov	x1, x19
  411e04:	str	x0, [sp, #176]
  411e08:	cmp	w21, #0x4
  411e0c:	ubfx	x10, x1, #1, #1
  411e10:	b.eq	412aa0 <__fxstatat@plt+0x10050>  // b.none
  411e14:	ldr	w0, [sp, #116]
  411e18:	b.ls	4121a8 <__fxstatat@plt+0xf758>  // b.plast
  411e1c:	cmp	w0, #0x7
  411e20:	b.eq	412b0c <__fxstatat@plt+0x100bc>  // b.none
  411e24:	b.ls	4127b4 <__fxstatat@plt+0xfd64>  // b.plast
  411e28:	ldr	w0, [sp, #116]
  411e2c:	sub	w0, w0, #0x8
  411e30:	cmp	w0, #0x2
  411e34:	b.hi	412f4c <__fxstatat@plt+0x104fc>  // b.pmore
  411e38:	ldr	w19, [sp, #116]
  411e3c:	cmp	w19, #0xa
  411e40:	b.ne	412998 <__fxstatat@plt+0xff48>  // b.any
  411e44:	mov	x19, #0x0                   	// #0
  411e48:	cbz	w20, 412d8c <__fxstatat@plt+0x1033c>
  411e4c:	ldr	x0, [sp, #256]
  411e50:	str	w10, [sp, #124]
  411e54:	mov	w25, #0x0                   	// #0
  411e58:	bl	402430 <strlen@plt>
  411e5c:	cmp	x0, #0x0
  411e60:	ldr	w10, [sp, #124]
  411e64:	mov	x12, x0
  411e68:	mov	w11, #0x1                   	// #1
  411e6c:	mov	w5, w11
  411e70:	csel	w0, w10, wzr, ne  // ne = any
  411e74:	str	w0, [sp, #208]
  411e78:	ldr	w0, [sp, #184]
  411e7c:	mov	w7, #0x0                   	// #0
  411e80:	stp	w11, wzr, [sp, #120]
  411e84:	and	w1, w0, w11
  411e88:	and	w0, w0, #0x4
  411e8c:	stp	w1, w0, [sp, #212]
  411e90:	ldr	x0, [sp, #256]
  411e94:	str	wzr, [sp, #144]
  411e98:	str	x0, [sp, #168]
  411e9c:	str	wzr, [sp, #188]
  411ea0:	str	xzr, [sp, #192]
  411ea4:	nop
  411ea8:	mov	x4, x26
  411eac:	mov	w26, w5
  411eb0:	mov	x20, #0x0                   	// #0
  411eb4:	nop
  411eb8:	cmp	x24, x20
  411ebc:	cset	w21, ne  // ne = any
  411ec0:	cmn	x24, #0x1
  411ec4:	b.eq	412218 <__fxstatat@plt+0xf7c8>  // b.none
  411ec8:	cbz	w21, 412228 <__fxstatat@plt+0xf7d8>
  411ecc:	add	x3, x27, x20
  411ed0:	cbz	w11, 4124dc <__fxstatat@plt+0xfa8c>
  411ed4:	cbz	x12, 412688 <__fxstatat@plt+0xfc38>
  411ed8:	cmp	x12, #0x1
  411edc:	add	x22, x20, x12
  411ee0:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  411ee4:	b.ne	411f14 <__fxstatat@plt+0xf4c4>  // b.any
  411ee8:	mov	x0, x27
  411eec:	stp	x3, x12, [sp, #128]
  411ef0:	stp	w10, w7, [sp, #148]
  411ef4:	str	w11, [sp, #156]
  411ef8:	str	x4, [sp, #160]
  411efc:	bl	402430 <strlen@plt>
  411f00:	ldp	x3, x12, [sp, #128]
  411f04:	mov	x24, x0
  411f08:	ldp	w10, w7, [sp, #148]
  411f0c:	ldr	w11, [sp, #156]
  411f10:	ldr	x4, [sp, #160]
  411f14:	cmp	x22, x24
  411f18:	b.hi	412688 <__fxstatat@plt+0xfc38>  // b.pmore
  411f1c:	ldr	x1, [sp, #168]
  411f20:	mov	x2, x12
  411f24:	mov	x0, x3
  411f28:	stp	x3, x12, [sp, #128]
  411f2c:	stp	w10, w7, [sp, #148]
  411f30:	str	w11, [sp, #156]
  411f34:	str	x4, [sp, #160]
  411f38:	bl	4027a0 <memcmp@plt>
  411f3c:	ldp	w10, w7, [sp, #148]
  411f40:	ldr	w11, [sp, #156]
  411f44:	ldp	x3, x12, [sp, #128]
  411f48:	ldr	x4, [sp, #160]
  411f4c:	cbnz	w0, 412688 <__fxstatat@plt+0xfc38>
  411f50:	cbnz	w10, 41246c <__fxstatat@plt+0xfa1c>
  411f54:	ldrb	w22, [x3]
  411f58:	cmp	w22, #0x7e
  411f5c:	b.ls	4122c4 <__fxstatat@plt+0xf874>  // b.plast
  411f60:	ldr	x0, [sp, #176]
  411f64:	mov	w5, w11
  411f68:	cmp	x0, #0x1
  411f6c:	b.eq	4124f8 <__fxstatat@plt+0xfaa8>  // b.none
  411f70:	str	xzr, [sp, #248]
  411f74:	cmn	x24, #0x1
  411f78:	b.ne	411fb0 <__fxstatat@plt+0xf560>  // b.any
  411f7c:	mov	x0, x27
  411f80:	str	w5, [sp, #128]
  411f84:	str	x12, [sp, #136]
  411f88:	stp	w10, w7, [sp, #148]
  411f8c:	str	w11, [sp, #156]
  411f90:	str	x4, [sp, #160]
  411f94:	bl	402430 <strlen@plt>
  411f98:	ldr	w5, [sp, #128]
  411f9c:	mov	x24, x0
  411fa0:	ldp	w10, w7, [sp, #148]
  411fa4:	ldr	w11, [sp, #156]
  411fa8:	ldr	x12, [sp, #136]
  411fac:	ldr	x4, [sp, #160]
  411fb0:	str	w22, [sp, #220]
  411fb4:	ldr	w22, [sp, #144]
  411fb8:	mov	x8, #0x0                   	// #0
  411fbc:	stp	x19, x4, [sp, #224]
  411fc0:	mov	w19, w21
  411fc4:	mov	x21, x8
  411fc8:	str	x12, [sp, #128]
  411fcc:	str	w10, [sp, #136]
  411fd0:	stp	w25, w5, [sp, #148]
  411fd4:	stp	w7, w11, [sp, #156]
  411fd8:	add	x25, x20, x21
  411fdc:	add	x3, sp, #0xf8
  411fe0:	sub	x2, x24, x25
  411fe4:	add	x1, x27, x25
  411fe8:	add	x0, sp, #0xf4
  411fec:	bl	416ba0 <__fxstatat@plt+0x14150>
  411ff0:	mov	x13, #0x2b                  	// #43
  411ff4:	mov	x3, x0
  411ff8:	movk	x13, #0x2, lsl #32
  411ffc:	cbz	x0, 412038 <__fxstatat@plt+0xf5e8>
  412000:	cmn	x0, #0x1
  412004:	b.eq	412dd0 <__fxstatat@plt+0x10380>  // b.none
  412008:	cmn	x0, #0x2
  41200c:	mov	x6, #0x1                   	// #1
  412010:	b.eq	412e08 <__fxstatat@plt+0x103b8>  // b.none
  412014:	cbnz	w22, 412904 <__fxstatat@plt+0xfeb4>
  412018:	ldr	w0, [sp, #244]
  41201c:	add	x21, x21, x3
  412020:	bl	4029c0 <iswprint@plt>
  412024:	cmp	w0, #0x0
  412028:	csel	w19, w19, wzr, ne  // ne = any
  41202c:	add	x0, sp, #0xf8
  412030:	bl	402770 <mbsinit@plt>
  412034:	cbz	w0, 411fd8 <__fxstatat@plt+0xf588>
  412038:	eor	w1, w19, #0x1
  41203c:	ldr	w0, [sp, #120]
  412040:	mov	x8, x21
  412044:	mov	w21, w19
  412048:	ldp	x19, x4, [sp, #224]
  41204c:	and	w1, w0, w1
  412050:	ldr	w10, [sp, #136]
  412054:	and	w1, w1, #0xff
  412058:	ldp	w25, w5, [sp, #148]
  41205c:	ldp	w7, w11, [sp, #156]
  412060:	ldr	w22, [sp, #220]
  412064:	ldr	x12, [sp, #128]
  412068:	cmp	x8, #0x1
  41206c:	b.hi	412080 <__fxstatat@plt+0xf630>  // b.pmore
  412070:	cbz	w1, 41256c <__fxstatat@plt+0xfb1c>
  412074:	nop
  412078:	ldr	w1, [sp, #120]
  41207c:	mov	w21, #0x0                   	// #0
  412080:	add	x8, x8, x20
  412084:	mov	w9, #0x0                   	// #0
  412088:	mov	w2, #0x27                  	// #39
  41208c:	mov	w3, #0x5c                  	// #92
  412090:	mov	w6, #0x24                  	// #36
  412094:	cbz	w1, 41214c <__fxstatat@plt+0xf6fc>
  412098:	cbnz	w10, 412984 <__fxstatat@plt+0xff34>
  41209c:	eor	w0, w25, #0x1
  4120a0:	ands	w0, w7, w0
  4120a4:	b.eq	4120dc <__fxstatat@plt+0xf68c>  // b.none
  4120a8:	cmp	x23, x19
  4120ac:	b.ls	4120b4 <__fxstatat@plt+0xf664>  // b.plast
  4120b0:	strb	w2, [x28, x19]
  4120b4:	add	x9, x19, #0x1
  4120b8:	cmp	x23, x9
  4120bc:	b.ls	4120c4 <__fxstatat@plt+0xf674>  // b.plast
  4120c0:	strb	w6, [x28, x9]
  4120c4:	add	x9, x19, #0x2
  4120c8:	cmp	x23, x9
  4120cc:	b.ls	4120d4 <__fxstatat@plt+0xf684>  // b.plast
  4120d0:	strb	w2, [x28, x9]
  4120d4:	add	x19, x19, #0x3
  4120d8:	mov	w25, w0
  4120dc:	cmp	x23, x19
  4120e0:	b.ls	4120e8 <__fxstatat@plt+0xf698>  // b.plast
  4120e4:	strb	w3, [x28, x19]
  4120e8:	add	x0, x19, #0x1
  4120ec:	cmp	x23, x0
  4120f0:	b.ls	412100 <__fxstatat@plt+0xf6b0>  // b.plast
  4120f4:	lsr	w9, w22, #6
  4120f8:	add	w9, w9, #0x30
  4120fc:	strb	w9, [x28, x0]
  412100:	add	x0, x19, #0x2
  412104:	cmp	x23, x0
  412108:	b.ls	412118 <__fxstatat@plt+0xf6c8>  // b.plast
  41210c:	ubfx	x9, x22, #3, #3
  412110:	add	w9, w9, #0x30
  412114:	strb	w9, [x28, x0]
  412118:	and	w22, w22, #0x7
  41211c:	add	x20, x20, #0x1
  412120:	add	w22, w22, #0x30
  412124:	cmp	x8, x20
  412128:	add	x19, x19, #0x3
  41212c:	b.ls	41236c <__fxstatat@plt+0xf91c>  // b.plast
  412130:	mov	w9, w1
  412134:	cmp	x23, x19
  412138:	b.ls	412140 <__fxstatat@plt+0xf6f0>  // b.plast
  41213c:	strb	w22, [x28, x19]
  412140:	ldrb	w22, [x27, x20]
  412144:	add	x19, x19, #0x1
  412148:	cbnz	w1, 412098 <__fxstatat@plt+0xf648>
  41214c:	eor	w0, w9, #0x1
  412150:	and	w0, w25, w0
  412154:	and	w0, w0, #0xff
  412158:	cbz	w5, 41216c <__fxstatat@plt+0xf71c>
  41215c:	cmp	x23, x19
  412160:	b.ls	412168 <__fxstatat@plt+0xf718>  // b.plast
  412164:	strb	w3, [x28, x19]
  412168:	add	x19, x19, #0x1
  41216c:	add	x20, x20, #0x1
  412170:	cmp	x20, x8
  412174:	b.cs	412408 <__fxstatat@plt+0xf9b8>  // b.hs, b.nlast
  412178:	cbz	w0, 412b54 <__fxstatat@plt+0x10104>
  41217c:	cmp	x23, x19
  412180:	b.ls	412188 <__fxstatat@plt+0xf738>  // b.plast
  412184:	strb	w2, [x28, x19]
  412188:	add	x0, x19, #0x1
  41218c:	cmp	x23, x0
  412190:	b.ls	412198 <__fxstatat@plt+0xf748>  // b.plast
  412194:	strb	w2, [x28, x0]
  412198:	add	x19, x19, #0x2
  41219c:	mov	w5, #0x0                   	// #0
  4121a0:	mov	w25, #0x0                   	// #0
  4121a4:	b	412134 <__fxstatat@plt+0xf6e4>
  4121a8:	cmp	w21, #0x1
  4121ac:	b.eq	412ba8 <__fxstatat@plt+0x10158>  // b.none
  4121b0:	b.ls	412768 <__fxstatat@plt+0xfd18>  // b.plast
  4121b4:	cmp	w0, #0x2
  4121b8:	b.eq	412c20 <__fxstatat@plt+0x101d0>  // b.none
  4121bc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  4121c0:	add	x0, x0, #0xe50
  4121c4:	str	x0, [sp, #168]
  4121c8:	mov	w1, #0x1                   	// #1
  4121cc:	ldr	w0, [sp, #184]
  4121d0:	mov	w7, w1
  4121d4:	mov	w5, w1
  4121d8:	mov	w10, w1
  4121dc:	stp	w1, w1, [sp, #120]
  4121e0:	mov	w11, #0x0                   	// #0
  4121e4:	str	w1, [sp, #144]
  4121e8:	mov	w25, #0x0                   	// #0
  4121ec:	str	w1, [sp, #208]
  4121f0:	and	w1, w0, w1
  4121f4:	and	w0, w0, #0x4
  4121f8:	mov	x12, #0x1                   	// #1
  4121fc:	mov	x19, #0x0                   	// #0
  412200:	str	wzr, [sp, #188]
  412204:	str	xzr, [sp, #192]
  412208:	stp	w1, w0, [sp, #212]
  41220c:	mov	w0, #0x2                   	// #2
  412210:	str	w0, [sp, #116]
  412214:	b	411ea8 <__fxstatat@plt+0xf458>
  412218:	ldrb	w0, [x27, x20]
  41221c:	cmp	w0, #0x0
  412220:	cset	w21, ne  // ne = any
  412224:	cbnz	w21, 411ecc <__fxstatat@plt+0xf47c>
  412228:	ldr	w0, [sp, #144]
  41222c:	cmp	x19, #0x0
  412230:	mov	w5, w26
  412234:	mov	x26, x4
  412238:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41223c:	b.ne	41259c <__fxstatat@plt+0xfb4c>  // b.any
  412240:	eor	w10, w10, #0x1
  412244:	ands	w7, w10, w7
  412248:	b.eq	412e58 <__fxstatat@plt+0x10408>  // b.none
  41224c:	ldr	w0, [sp, #188]
  412250:	cbz	w0, 412e5c <__fxstatat@plt+0x1040c>
  412254:	cbnz	w5, 412eb8 <__fxstatat@plt+0x10468>
  412258:	ldr	x2, [sp, #192]
  41225c:	cmp	x23, #0x0
  412260:	cset	w0, eq  // eq = none
  412264:	cmp	x2, #0x0
  412268:	mov	x1, x2
  41226c:	csel	w0, w0, wzr, ne  // ne = any
  412270:	cbz	w0, 412eb0 <__fxstatat@plt+0x10460>
  412274:	str	w0, [sp, #188]
  412278:	mov	w0, #0x27                  	// #39
  41227c:	ldr	x23, [sp, #192]
  412280:	str	x1, [sp, #192]
  412284:	mov	w1, #0x1                   	// #1
  412288:	mov	x12, #0x1                   	// #1
  41228c:	mov	w7, w1
  412290:	mov	x19, x12
  412294:	mov	w11, #0x0                   	// #0
  412298:	mov	w10, #0x0                   	// #0
  41229c:	strb	w0, [x28]
  4122a0:	mov	w0, #0x2                   	// #2
  4122a4:	str	w0, [sp, #116]
  4122a8:	str	w1, [sp, #124]
  4122ac:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  4122b0:	add	x1, x1, #0xe50
  4122b4:	str	wzr, [sp, #144]
  4122b8:	str	x1, [sp, #168]
  4122bc:	str	wzr, [sp, #208]
  4122c0:	b	411ea8 <__fxstatat@plt+0xf458>
  4122c4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  4122c8:	add	x0, x0, #0xec0
  4122cc:	ldrh	w0, [x0, w22, uxtw #1]
  4122d0:	adr	x1, 4122dc <__fxstatat@plt+0xf88c>
  4122d4:	add	x0, x1, w0, sxth #2
  4122d8:	br	x0
  4122dc:	ldr	w0, [sp, #124]
  4122e0:	cbnz	w0, 412df8 <__fxstatat@plt+0x103a8>
  4122e4:	mov	w0, w25
  4122e8:	mov	w21, w11
  4122ec:	mov	w5, w11
  4122f0:	cbz	x4, 412400 <__fxstatat@plt+0xf9b0>
  4122f4:	ubfx	x1, x22, #5, #8
  4122f8:	ldr	w1, [x4, x1, lsl #2]
  4122fc:	lsr	w1, w1, w22
  412300:	tbz	w1, #0, 412400 <__fxstatat@plt+0xf9b0>
  412304:	cbnz	w10, 41244c <__fxstatat@plt+0xf9fc>
  412308:	eor	w1, w25, #0x1
  41230c:	ands	w1, w7, w1
  412310:	b.eq	412354 <__fxstatat@plt+0xf904>  // b.none
  412314:	cmp	x23, x19
  412318:	b.ls	412324 <__fxstatat@plt+0xf8d4>  // b.plast
  41231c:	mov	w0, #0x27                  	// #39
  412320:	strb	w0, [x28, x19]
  412324:	add	x0, x19, #0x1
  412328:	cmp	x23, x0
  41232c:	b.ls	412338 <__fxstatat@plt+0xf8e8>  // b.plast
  412330:	mov	w2, #0x24                  	// #36
  412334:	strb	w2, [x28, x0]
  412338:	add	x0, x19, #0x2
  41233c:	cmp	x23, x0
  412340:	b.ls	41234c <__fxstatat@plt+0xf8fc>  // b.plast
  412344:	mov	w2, #0x27                  	// #39
  412348:	strb	w2, [x28, x0]
  41234c:	add	x19, x19, #0x3
  412350:	mov	w25, w1
  412354:	cmp	x23, x19
  412358:	b.ls	412364 <__fxstatat@plt+0xf914>  // b.plast
  41235c:	mov	w0, #0x5c                  	// #92
  412360:	strb	w0, [x28, x19]
  412364:	add	x19, x19, #0x1
  412368:	add	x20, x20, #0x1
  41236c:	cmp	x19, x23
  412370:	b.cs	412378 <__fxstatat@plt+0xf928>  // b.hs, b.nlast
  412374:	strb	w22, [x28, x19]
  412378:	cmp	w21, #0x0
  41237c:	add	x19, x19, #0x1
  412380:	csel	w26, w26, wzr, ne  // ne = any
  412384:	b	411eb8 <__fxstatat@plt+0xf468>
  412388:	cbnz	w10, 4125a4 <__fxstatat@plt+0xfb54>
  41238c:	mov	w5, #0x0                   	// #0
  412390:	ldr	x1, [sp, #192]
  412394:	cmp	x23, #0x0
  412398:	mov	x0, #0x0                   	// #0
  41239c:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  4123a0:	b.eq	4123e4 <__fxstatat@plt+0xf994>  // b.none
  4123a4:	cmp	x23, x19
  4123a8:	b.ls	4123b4 <__fxstatat@plt+0xf964>  // b.plast
  4123ac:	mov	w0, #0x27                  	// #39
  4123b0:	strb	w0, [x28, x19]
  4123b4:	add	x0, x19, #0x1
  4123b8:	cmp	x23, x0
  4123bc:	b.ls	4123c8 <__fxstatat@plt+0xf978>  // b.plast
  4123c0:	mov	w1, #0x5c                  	// #92
  4123c4:	strb	w1, [x28, x0]
  4123c8:	add	x1, x19, #0x2
  4123cc:	mov	x0, x23
  4123d0:	cmp	x23, x1
  4123d4:	b.ls	412ee8 <__fxstatat@plt+0x10498>  // b.plast
  4123d8:	ldr	x23, [sp, #192]
  4123dc:	mov	w2, #0x27                  	// #39
  4123e0:	strb	w2, [x28, x1]
  4123e4:	add	x19, x19, #0x3
  4123e8:	mov	w22, #0x27                  	// #39
  4123ec:	mov	w25, #0x0                   	// #0
  4123f0:	str	w21, [sp, #188]
  4123f4:	str	x23, [sp, #192]
  4123f8:	mov	x23, x0
  4123fc:	mov	w0, #0x0                   	// #0
  412400:	cbnz	w5, 412304 <__fxstatat@plt+0xf8b4>
  412404:	add	x20, x20, #0x1
  412408:	cbz	w0, 41236c <__fxstatat@plt+0xf91c>
  41240c:	cmp	x23, x19
  412410:	b.ls	41241c <__fxstatat@plt+0xf9cc>  // b.plast
  412414:	mov	w0, #0x27                  	// #39
  412418:	strb	w0, [x28, x19]
  41241c:	add	x0, x19, #0x1
  412420:	cmp	x23, x0
  412424:	b.ls	412430 <__fxstatat@plt+0xf9e0>  // b.plast
  412428:	mov	w1, #0x27                  	// #39
  41242c:	strb	w1, [x28, x0]
  412430:	add	x19, x19, #0x2
  412434:	mov	w25, #0x0                   	// #0
  412438:	b	41236c <__fxstatat@plt+0xf91c>
  41243c:	mov	w22, #0x66                  	// #102
  412440:	mov	w21, #0x0                   	// #0
  412444:	nop
  412448:	cbz	w10, 412308 <__fxstatat@plt+0xf8b8>
  41244c:	ldr	w0, [sp, #120]
  412450:	and	w0, w0, w7
  412454:	str	w0, [sp, #120]
  412458:	ldp	w1, w0, [sp, #116]
  41245c:	cmp	w0, #0x0
  412460:	mov	w0, #0x4                   	// #4
  412464:	csel	w0, w1, w0, eq  // eq = none
  412468:	str	w0, [sp, #116]
  41246c:	ldr	w4, [sp, #116]
  412470:	mov	x3, x24
  412474:	ldr	x7, [sp, #200]
  412478:	mov	x2, x27
  41247c:	ldr	x0, [sp, #256]
  412480:	str	x0, [sp]
  412484:	ldr	w0, [sp, #184]
  412488:	mov	x1, x23
  41248c:	mov	x6, #0x0                   	// #0
  412490:	and	w5, w0, #0xfffffffd
  412494:	mov	x0, x28
  412498:	bl	411db0 <__fxstatat@plt+0xf360>
  41249c:	mov	x19, x0
  4124a0:	mov	x0, x19
  4124a4:	ldp	x29, x30, [sp, #16]
  4124a8:	ldp	x19, x20, [sp, #32]
  4124ac:	ldp	x21, x22, [sp, #48]
  4124b0:	ldp	x23, x24, [sp, #64]
  4124b4:	ldp	x25, x26, [sp, #80]
  4124b8:	ldp	x27, x28, [sp, #96]
  4124bc:	add	sp, sp, #0x100
  4124c0:	ret
  4124c4:	mov	w22, #0x62                  	// #98
  4124c8:	mov	w21, #0x0                   	// #0
  4124cc:	b	412448 <__fxstatat@plt+0xf9f8>
  4124d0:	mov	w22, #0x61                  	// #97
  4124d4:	mov	w21, #0x0                   	// #0
  4124d8:	b	412448 <__fxstatat@plt+0xf9f8>
  4124dc:	ldrb	w22, [x27, x20]
  4124e0:	cmp	w22, #0x7e
  4124e4:	b.ls	41254c <__fxstatat@plt+0xfafc>  // b.plast
  4124e8:	ldr	x0, [sp, #176]
  4124ec:	mov	w5, #0x0                   	// #0
  4124f0:	cmp	x0, #0x1
  4124f4:	b.ne	411f70 <__fxstatat@plt+0xf520>  // b.any
  4124f8:	str	w5, [sp, #128]
  4124fc:	str	x12, [sp, #136]
  412500:	stp	w10, w7, [sp, #148]
  412504:	str	w11, [sp, #156]
  412508:	str	x4, [sp, #160]
  41250c:	bl	402820 <__ctype_b_loc@plt>
  412510:	ldr	x0, [x0]
  412514:	ldr	w5, [sp, #128]
  412518:	ldp	w10, w7, [sp, #148]
  41251c:	ldrh	w21, [x0, w22, uxtw #1]
  412520:	ldr	w11, [sp, #156]
  412524:	ands	w0, w21, #0x4000
  412528:	ldr	w0, [sp, #120]
  41252c:	cset	w1, eq  // eq = none
  412530:	ubfx	x21, x21, #14, #1
  412534:	and	w1, w0, w1
  412538:	ldr	x12, [sp, #136]
  41253c:	ldr	x4, [sp, #160]
  412540:	ldr	x8, [sp, #176]
  412544:	cbz	w1, 41256c <__fxstatat@plt+0xfb1c>
  412548:	b	412078 <__fxstatat@plt+0xf628>
  41254c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  412550:	add	x0, x0, #0xfc0
  412554:	ldrh	w0, [x0, w22, uxtw #1]
  412558:	adr	x1, 412564 <__fxstatat@plt+0xfb14>
  41255c:	add	x0, x1, w0, sxth #2
  412560:	br	x0
  412564:	mov	w21, w11
  412568:	mov	w5, #0x0                   	// #0
  41256c:	ldr	w1, [sp, #124]
  412570:	mov	w0, w25
  412574:	cbz	w1, 4122f0 <__fxstatat@plt+0xf8a0>
  412578:	mov	w0, w25
  41257c:	cbnz	w10, 4122f0 <__fxstatat@plt+0xf8a0>
  412580:	mov	w0, w25
  412584:	cbnz	w5, 412304 <__fxstatat@plt+0xf8b4>
  412588:	b	412404 <__fxstatat@plt+0xf9b4>
  41258c:	mov	w5, #0x0                   	// #0
  412590:	mov	w21, #0x0                   	// #0
  412594:	ldr	w0, [sp, #144]
  412598:	cbz	w0, 41256c <__fxstatat@plt+0xfb1c>
  41259c:	mov	w0, #0x2                   	// #2
  4125a0:	str	w0, [sp, #116]
  4125a4:	ldp	w1, w0, [sp, #116]
  4125a8:	cmp	w0, #0x0
  4125ac:	mov	w0, #0x4                   	// #4
  4125b0:	csel	w0, w1, w0, eq  // eq = none
  4125b4:	str	w0, [sp, #116]
  4125b8:	b	41246c <__fxstatat@plt+0xfa1c>
  4125bc:	ldr	w0, [sp, #116]
  4125c0:	cmp	w0, #0x2
  4125c4:	b.eq	4128e8 <__fxstatat@plt+0xfe98>  // b.none
  4125c8:	mov	w5, #0x0                   	// #0
  4125cc:	ldr	w0, [sp, #116]
  4125d0:	cmp	w0, #0x5
  4125d4:	b.ne	4125f8 <__fxstatat@plt+0xfba8>  // b.any
  4125d8:	ldr	w0, [sp, #216]
  4125dc:	cbz	w0, 4125f8 <__fxstatat@plt+0xfba8>
  4125e0:	add	x6, x20, #0x2
  4125e4:	cmp	x6, x24
  4125e8:	b.cs	4125f8 <__fxstatat@plt+0xfba8>  // b.hs, b.nlast
  4125ec:	ldrb	w22, [x3, #1]
  4125f0:	cmp	w22, #0x3f
  4125f4:	b.eq	412c3c <__fxstatat@plt+0x101ec>  // b.none
  4125f8:	mov	w21, #0x0                   	// #0
  4125fc:	mov	w22, #0x3f                  	// #63
  412600:	b	41256c <__fxstatat@plt+0xfb1c>
  412604:	ldr	w0, [sp, #116]
  412608:	cmp	w0, #0x2
  41260c:	b.eq	412388 <__fxstatat@plt+0xf938>  // b.none
  412610:	mov	w5, #0x0                   	// #0
  412614:	mov	w22, #0x27                  	// #39
  412618:	str	w21, [sp, #188]
  41261c:	b	41256c <__fxstatat@plt+0xfb1c>
  412620:	mov	w5, #0x0                   	// #0
  412624:	mov	w0, #0x74                  	// #116
  412628:	ldr	w1, [sp, #144]
  41262c:	cbnz	w1, 41259c <__fxstatat@plt+0xfb4c>
  412630:	ldr	w1, [sp, #120]
  412634:	cbnz	w1, 412648 <__fxstatat@plt+0xfbf8>
  412638:	mov	w0, w25
  41263c:	mov	w21, #0x0                   	// #0
  412640:	cbnz	w10, 4122f0 <__fxstatat@plt+0xf8a0>
  412644:	b	412580 <__fxstatat@plt+0xfb30>
  412648:	mov	w22, w0
  41264c:	mov	w21, #0x0                   	// #0
  412650:	b	412448 <__fxstatat@plt+0xf9f8>
  412654:	mov	w5, #0x0                   	// #0
  412658:	mov	w0, #0x66                  	// #102
  41265c:	b	412630 <__fxstatat@plt+0xfbe0>
  412660:	mov	w5, #0x0                   	// #0
  412664:	mov	w0, #0x62                  	// #98
  412668:	b	412630 <__fxstatat@plt+0xfbe0>
  41266c:	ldr	w0, [sp, #120]
  412670:	cbnz	w0, 4126b8 <__fxstatat@plt+0xfc68>
  412674:	ldr	w0, [sp, #212]
  412678:	mov	w5, #0x0                   	// #0
  41267c:	cbz	w0, 412638 <__fxstatat@plt+0xfbe8>
  412680:	add	x20, x20, #0x1
  412684:	b	411eb8 <__fxstatat@plt+0xf468>
  412688:	ldrb	w22, [x3]
  41268c:	cmp	w22, #0x7e
  412690:	b.hi	4124e8 <__fxstatat@plt+0xfa98>  // b.pmore
  412694:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x6f80>
  412698:	add	x0, x0, #0xc0
  41269c:	ldrh	w0, [x0, w22, uxtw #1]
  4126a0:	adr	x1, 4126ac <__fxstatat@plt+0xfc5c>
  4126a4:	add	x0, x1, w0, sxth #2
  4126a8:	br	x0
  4126ac:	mov	w5, #0x0                   	// #0
  4126b0:	mov	w21, #0x0                   	// #0
  4126b4:	b	41256c <__fxstatat@plt+0xfb1c>
  4126b8:	cbnz	w10, 412984 <__fxstatat@plt+0xff34>
  4126bc:	mov	w5, #0x0                   	// #0
  4126c0:	eor	w0, w25, #0x1
  4126c4:	ands	w0, w7, w0
  4126c8:	b.eq	412884 <__fxstatat@plt+0xfe34>  // b.none
  4126cc:	cmp	x23, x19
  4126d0:	b.ls	4126dc <__fxstatat@plt+0xfc8c>  // b.plast
  4126d4:	mov	w1, #0x27                  	// #39
  4126d8:	strb	w1, [x28, x19]
  4126dc:	add	x1, x19, #0x1
  4126e0:	cmp	x23, x1
  4126e4:	b.ls	4126f0 <__fxstatat@plt+0xfca0>  // b.plast
  4126e8:	mov	w2, #0x24                  	// #36
  4126ec:	strb	w2, [x28, x1]
  4126f0:	add	x1, x19, #0x2
  4126f4:	cmp	x23, x1
  4126f8:	b.ls	412704 <__fxstatat@plt+0xfcb4>  // b.plast
  4126fc:	mov	w2, #0x27                  	// #39
  412700:	strb	w2, [x28, x1]
  412704:	add	x1, x19, #0x3
  412708:	cmp	x23, x1
  41270c:	b.ls	412950 <__fxstatat@plt+0xff00>  // b.plast
  412710:	mov	w25, w0
  412714:	mov	w0, #0x5c                  	// #92
  412718:	strb	w0, [x28, x1]
  41271c:	ldr	w0, [sp, #116]
  412720:	add	x19, x1, #0x1
  412724:	cmp	w0, #0x2
  412728:	b.eq	412958 <__fxstatat@plt+0xff08>  // b.none
  41272c:	add	x0, x20, #0x1
  412730:	cmp	x0, x24
  412734:	b.cs	41296c <__fxstatat@plt+0xff1c>  // b.hs, b.nlast
  412738:	ldrb	w2, [x27, x0]
  41273c:	mov	w22, #0x30                  	// #48
  412740:	mov	w0, #0x0                   	// #0
  412744:	sub	w2, w2, #0x30
  412748:	and	w2, w2, #0xff
  41274c:	cmp	w2, #0x9
  412750:	b.ls	4129cc <__fxstatat@plt+0xff7c>  // b.plast
  412754:	ldr	w1, [sp, #124]
  412758:	mov	w21, #0x0                   	// #0
  41275c:	cbz	w1, 4122f0 <__fxstatat@plt+0xf8a0>
  412760:	cbnz	w5, 412304 <__fxstatat@plt+0xf8b4>
  412764:	b	412404 <__fxstatat@plt+0xf9b4>
  412768:	cbnz	w0, 412f4c <__fxstatat@plt+0x104fc>
  41276c:	ldr	w0, [sp, #184]
  412770:	mov	w5, #0x1                   	// #1
  412774:	mov	w7, #0x0                   	// #0
  412778:	mov	w11, #0x0                   	// #0
  41277c:	and	w1, w0, w5
  412780:	mov	w25, #0x0                   	// #0
  412784:	and	w0, w0, #0x4
  412788:	mov	w10, #0x0                   	// #0
  41278c:	mov	x12, #0x0                   	// #0
  412790:	mov	x19, #0x0                   	// #0
  412794:	stp	wzr, w5, [sp, #120]
  412798:	str	wzr, [sp, #144]
  41279c:	str	xzr, [sp, #168]
  4127a0:	str	wzr, [sp, #188]
  4127a4:	str	xzr, [sp, #192]
  4127a8:	stp	wzr, w1, [sp, #208]
  4127ac:	str	w0, [sp, #216]
  4127b0:	b	411ea8 <__fxstatat@plt+0xf458>
  4127b4:	cmp	w0, #0x5
  4127b8:	b.ne	41281c <__fxstatat@plt+0xfdcc>  // b.any
  4127bc:	ldr	w0, [sp, #184]
  4127c0:	and	w1, w0, #0x1
  4127c4:	and	w0, w0, #0x4
  4127c8:	stp	w1, w0, [sp, #212]
  4127cc:	cbnz	w20, 412cc4 <__fxstatat@plt+0x10274>
  4127d0:	cbz	x23, 412be0 <__fxstatat@plt+0x10190>
  4127d4:	mov	w11, #0x1                   	// #1
  4127d8:	mov	w0, #0x22                  	// #34
  4127dc:	mov	x12, #0x1                   	// #1
  4127e0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  4127e4:	mov	w5, w11
  4127e8:	add	x1, x1, #0xe28
  4127ec:	mov	x19, x12
  4127f0:	mov	w7, #0x0                   	// #0
  4127f4:	mov	w25, #0x0                   	// #0
  4127f8:	mov	w10, #0x0                   	// #0
  4127fc:	strb	w0, [x28]
  412800:	stp	w11, wzr, [sp, #120]
  412804:	str	wzr, [sp, #144]
  412808:	str	x1, [sp, #168]
  41280c:	str	wzr, [sp, #188]
  412810:	str	xzr, [sp, #192]
  412814:	str	wzr, [sp, #208]
  412818:	b	411ea8 <__fxstatat@plt+0xf458>
  41281c:	cmp	w0, #0x6
  412820:	b.ne	412f4c <__fxstatat@plt+0x104fc>  // b.any
  412824:	mov	w0, #0x1                   	// #1
  412828:	mov	w1, w0
  41282c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  412830:	add	x0, x0, #0xe28
  412834:	str	x0, [sp, #168]
  412838:	mov	w11, w1
  41283c:	ldr	w0, [sp, #184]
  412840:	mov	w5, w1
  412844:	mov	w10, w1
  412848:	stp	w1, wzr, [sp, #120]
  41284c:	str	w1, [sp, #208]
  412850:	and	w1, w0, w1
  412854:	and	w0, w0, #0x4
  412858:	mov	w7, #0x0                   	// #0
  41285c:	mov	w25, #0x0                   	// #0
  412860:	mov	x12, #0x1                   	// #1
  412864:	mov	x19, #0x0                   	// #0
  412868:	str	wzr, [sp, #144]
  41286c:	str	wzr, [sp, #188]
  412870:	str	xzr, [sp, #192]
  412874:	stp	w1, w0, [sp, #212]
  412878:	mov	w0, #0x5                   	// #5
  41287c:	str	w0, [sp, #116]
  412880:	b	411ea8 <__fxstatat@plt+0xf458>
  412884:	mov	x1, x19
  412888:	cmp	x23, x19
  41288c:	b.ls	41271c <__fxstatat@plt+0xfccc>  // b.plast
  412890:	mov	w0, w25
  412894:	mov	w25, w0
  412898:	mov	w0, #0x5c                  	// #92
  41289c:	strb	w0, [x28, x1]
  4128a0:	b	41271c <__fxstatat@plt+0xfccc>
  4128a4:	mov	w5, #0x0                   	// #0
  4128a8:	cmp	x24, #0x1
  4128ac:	cset	w0, ne  // ne = any
  4128b0:	cmn	x24, #0x1
  4128b4:	b.eq	4128c8 <__fxstatat@plt+0xfe78>  // b.none
  4128b8:	cbnz	w0, 4126b0 <__fxstatat@plt+0xfc60>
  4128bc:	cbz	x20, 412594 <__fxstatat@plt+0xfb44>
  4128c0:	mov	w21, #0x0                   	// #0
  4128c4:	b	41256c <__fxstatat@plt+0xfb1c>
  4128c8:	ldrb	w0, [x27, #1]
  4128cc:	cmp	w0, #0x0
  4128d0:	cset	w0, ne  // ne = any
  4128d4:	cbnz	w0, 4126b0 <__fxstatat@plt+0xfc60>
  4128d8:	b	4128bc <__fxstatat@plt+0xfe6c>
  4128dc:	mov	w5, #0x0                   	// #0
  4128e0:	cbnz	x20, 4128c0 <__fxstatat@plt+0xfe70>
  4128e4:	b	412594 <__fxstatat@plt+0xfb44>
  4128e8:	cbnz	w10, 4125a4 <__fxstatat@plt+0xfb54>
  4128ec:	mov	w5, #0x0                   	// #0
  4128f0:	mov	w0, w25
  4128f4:	mov	w21, #0x0                   	// #0
  4128f8:	mov	w22, #0x3f                  	// #63
  4128fc:	cbnz	w5, 412304 <__fxstatat@plt+0xf8b4>
  412900:	b	412404 <__fxstatat@plt+0xf9b4>
  412904:	cmp	x0, #0x1
  412908:	b.eq	412018 <__fxstatat@plt+0xf5c8>  // b.none
  41290c:	add	x2, x25, #0x1
  412910:	add	x0, x27, x0
  412914:	add	x2, x27, x2
  412918:	add	x9, x0, x25
  41291c:	b	41292c <__fxstatat@plt+0xfedc>
  412920:	add	x2, x2, #0x1
  412924:	cmp	x9, x2
  412928:	b.eq	412018 <__fxstatat@plt+0xf5c8>  // b.none
  41292c:	ldrb	w0, [x2]
  412930:	sub	w0, w0, #0x5b
  412934:	and	w0, w0, #0xff
  412938:	cmp	w0, #0x21
  41293c:	b.hi	412920 <__fxstatat@plt+0xfed0>  // b.pmore
  412940:	lsl	x0, x6, x0
  412944:	tst	x0, x13
  412948:	b.eq	412920 <__fxstatat@plt+0xfed0>  // b.none
  41294c:	b	41259c <__fxstatat@plt+0xfb4c>
  412950:	add	x19, x19, #0x4
  412954:	mov	w25, w0
  412958:	mov	w0, #0x0                   	// #0
  41295c:	mov	w21, #0x0                   	// #0
  412960:	mov	w22, #0x30                  	// #48
  412964:	cbnz	w5, 412304 <__fxstatat@plt+0xf8b4>
  412968:	b	412404 <__fxstatat@plt+0xf9b4>
  41296c:	ldr	w1, [sp, #124]
  412970:	mov	w0, #0x0                   	// #0
  412974:	mov	w22, #0x30                  	// #48
  412978:	mov	w21, #0x0                   	// #0
  41297c:	cbz	w1, 4122f0 <__fxstatat@plt+0xf8a0>
  412980:	b	412760 <__fxstatat@plt+0xfd10>
  412984:	str	w7, [sp, #120]
  412988:	b	4125a4 <__fxstatat@plt+0xfb54>
  41298c:	mov	w5, w11
  412990:	mov	w21, #0x0                   	// #0
  412994:	b	41256c <__fxstatat@plt+0xfb1c>
  412998:	mov	w1, w19
  41299c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  4129a0:	add	x0, x0, #0xe58
  4129a4:	str	w10, [sp, #120]
  4129a8:	bl	411c48 <__fxstatat@plt+0xf1f8>
  4129ac:	str	x0, [sp, #200]
  4129b0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x5f80>
  4129b4:	add	x0, x1, #0xe50
  4129b8:	mov	w1, w19
  4129bc:	bl	411c48 <__fxstatat@plt+0xf1f8>
  4129c0:	ldr	w10, [sp, #120]
  4129c4:	str	x0, [sp, #256]
  4129c8:	b	411e44 <__fxstatat@plt+0xf3f4>
  4129cc:	cmp	x23, x19
  4129d0:	b.ls	4129d8 <__fxstatat@plt+0xff88>  // b.plast
  4129d4:	strb	w22, [x28, x19]
  4129d8:	add	x0, x1, #0x2
  4129dc:	cmp	x23, x0
  4129e0:	b.ls	4129ec <__fxstatat@plt+0xff9c>  // b.plast
  4129e4:	mov	w2, #0x30                  	// #48
  4129e8:	strb	w2, [x28, x0]
  4129ec:	add	x19, x1, #0x3
  4129f0:	mov	w0, #0x0                   	// #0
  4129f4:	mov	w22, #0x30                  	// #48
  4129f8:	b	412754 <__fxstatat@plt+0xfd04>
  4129fc:	mov	w5, #0x0                   	// #0
  412a00:	ldr	w0, [sp, #116]
  412a04:	cmp	w0, #0x2
  412a08:	b.eq	412a88 <__fxstatat@plt+0x10038>  // b.none
  412a0c:	ldr	w1, [sp, #208]
  412a10:	mov	w22, #0x5c                  	// #92
  412a14:	mov	w0, w22
  412a18:	cbz	w1, 412630 <__fxstatat@plt+0xfbe0>
  412a1c:	add	x20, x20, #0x1
  412a20:	mov	w0, w25
  412a24:	mov	w21, #0x0                   	// #0
  412a28:	b	412408 <__fxstatat@plt+0xf9b8>
  412a2c:	mov	w5, #0x0                   	// #0
  412a30:	mov	w0, #0x76                  	// #118
  412a34:	b	412630 <__fxstatat@plt+0xfbe0>
  412a38:	mov	w21, w11
  412a3c:	mov	w5, #0x0                   	// #0
  412a40:	b	412594 <__fxstatat@plt+0xfb44>
  412a44:	mov	w5, #0x0                   	// #0
  412a48:	mov	w0, #0x72                  	// #114
  412a4c:	b	412628 <__fxstatat@plt+0xfbd8>
  412a50:	mov	w5, #0x0                   	// #0
  412a54:	mov	w0, #0x6e                  	// #110
  412a58:	b	412628 <__fxstatat@plt+0xfbd8>
  412a5c:	mov	w5, #0x0                   	// #0
  412a60:	mov	w0, #0x61                  	// #97
  412a64:	b	412630 <__fxstatat@plt+0xfbe0>
  412a68:	mov	w5, #0x0                   	// #0
  412a6c:	mov	w22, #0xa                   	// #10
  412a70:	mov	w0, #0x6e                  	// #110
  412a74:	b	412630 <__fxstatat@plt+0xfbe0>
  412a78:	mov	w5, #0x0                   	// #0
  412a7c:	mov	w22, #0xd                   	// #13
  412a80:	mov	w0, #0x72                  	// #114
  412a84:	b	412630 <__fxstatat@plt+0xfbe0>
  412a88:	cbnz	w10, 4125a4 <__fxstatat@plt+0xfb54>
  412a8c:	add	x20, x20, #0x1
  412a90:	mov	w0, w25
  412a94:	mov	w21, #0x0                   	// #0
  412a98:	mov	w22, #0x5c                  	// #92
  412a9c:	b	412408 <__fxstatat@plt+0xf9b8>
  412aa0:	ldr	w0, [sp, #184]
  412aa4:	and	w1, w0, #0x1
  412aa8:	and	w0, w0, #0x4
  412aac:	stp	w1, w0, [sp, #212]
  412ab0:	cbnz	w20, 412b5c <__fxstatat@plt+0x1010c>
  412ab4:	mov	w0, #0x1                   	// #1
  412ab8:	str	w0, [sp, #120]
  412abc:	cbnz	x23, 412f34 <__fxstatat@plt+0x104e4>
  412ac0:	mov	w0, #0x1                   	// #1
  412ac4:	mov	w5, w0
  412ac8:	mov	w7, w0
  412acc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  412ad0:	add	x0, x0, #0xe50
  412ad4:	mov	x12, #0x1                   	// #1
  412ad8:	mov	w11, #0x0                   	// #0
  412adc:	mov	x19, x12
  412ae0:	mov	w25, #0x0                   	// #0
  412ae4:	mov	w10, #0x0                   	// #0
  412ae8:	str	w5, [sp, #124]
  412aec:	str	wzr, [sp, #144]
  412af0:	str	x0, [sp, #168]
  412af4:	mov	w0, #0x2                   	// #2
  412af8:	str	w0, [sp, #116]
  412afc:	str	wzr, [sp, #188]
  412b00:	str	xzr, [sp, #192]
  412b04:	str	wzr, [sp, #208]
  412b08:	b	411ea8 <__fxstatat@plt+0xf458>
  412b0c:	ldr	w0, [sp, #184]
  412b10:	mov	w11, #0x1                   	// #1
  412b14:	mov	w7, #0x0                   	// #0
  412b18:	mov	w5, w11
  412b1c:	and	w1, w0, w11
  412b20:	mov	w25, #0x0                   	// #0
  412b24:	and	w0, w0, #0x4
  412b28:	mov	w10, #0x0                   	// #0
  412b2c:	mov	x12, #0x0                   	// #0
  412b30:	mov	x19, #0x0                   	// #0
  412b34:	stp	w11, wzr, [sp, #120]
  412b38:	str	wzr, [sp, #144]
  412b3c:	str	xzr, [sp, #168]
  412b40:	str	wzr, [sp, #188]
  412b44:	str	xzr, [sp, #192]
  412b48:	stp	wzr, w1, [sp, #208]
  412b4c:	str	w0, [sp, #216]
  412b50:	b	411ea8 <__fxstatat@plt+0xf458>
  412b54:	mov	w5, #0x0                   	// #0
  412b58:	b	412134 <__fxstatat@plt+0xf6e4>
  412b5c:	mov	w1, #0x1                   	// #1
  412b60:	mov	w10, w1
  412b64:	mov	w7, w1
  412b68:	mov	w5, w1
  412b6c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  412b70:	add	x0, x0, #0xe50
  412b74:	str	w1, [sp, #124]
  412b78:	str	w1, [sp, #144]
  412b7c:	str	x0, [sp, #168]
  412b80:	mov	w0, #0x2                   	// #2
  412b84:	mov	w11, #0x0                   	// #0
  412b88:	mov	w25, #0x0                   	// #0
  412b8c:	mov	x12, #0x1                   	// #1
  412b90:	mov	x19, #0x0                   	// #0
  412b94:	stp	w0, wzr, [sp, #116]
  412b98:	str	wzr, [sp, #188]
  412b9c:	str	xzr, [sp, #192]
  412ba0:	str	wzr, [sp, #208]
  412ba4:	b	411ea8 <__fxstatat@plt+0xf458>
  412ba8:	ldr	w1, [sp, #184]
  412bac:	mov	w10, w0
  412bb0:	mov	w7, w0
  412bb4:	mov	w5, w0
  412bb8:	str	w0, [sp, #124]
  412bbc:	and	w2, w1, #0x1
  412bc0:	str	w0, [sp, #144]
  412bc4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  412bc8:	add	x0, x0, #0xe50
  412bcc:	str	x0, [sp, #168]
  412bd0:	and	w0, w1, #0x4
  412bd4:	str	w2, [sp, #212]
  412bd8:	str	w0, [sp, #216]
  412bdc:	b	412b80 <__fxstatat@plt+0x10130>
  412be0:	mov	w11, #0x1                   	// #1
  412be4:	mov	x12, #0x1                   	// #1
  412be8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  412bec:	mov	w5, w11
  412bf0:	add	x0, x0, #0xe28
  412bf4:	mov	x19, x12
  412bf8:	mov	w7, #0x0                   	// #0
  412bfc:	mov	w25, #0x0                   	// #0
  412c00:	mov	w10, #0x0                   	// #0
  412c04:	stp	w11, wzr, [sp, #120]
  412c08:	str	wzr, [sp, #144]
  412c0c:	str	x0, [sp, #168]
  412c10:	str	wzr, [sp, #188]
  412c14:	str	xzr, [sp, #192]
  412c18:	str	wzr, [sp, #208]
  412c1c:	b	411ea8 <__fxstatat@plt+0xf458>
  412c20:	ldr	w0, [sp, #184]
  412c24:	and	w1, w0, #0x1
  412c28:	and	w0, w0, #0x4
  412c2c:	stp	w1, w0, [sp, #212]
  412c30:	cbnz	w20, 412ef0 <__fxstatat@plt+0x104a0>
  412c34:	str	wzr, [sp, #120]
  412c38:	b	412abc <__fxstatat@plt+0x1006c>
  412c3c:	ldrb	w2, [x27, x6]
  412c40:	cmp	w2, #0x3e
  412c44:	b.hi	4126b0 <__fxstatat@plt+0xfc60>  // b.pmore
  412c48:	mov	x1, #0x1                   	// #1
  412c4c:	mov	x0, #0xa38200000000        	// #179778741075968
  412c50:	movk	x0, #0x7000, lsl #48
  412c54:	lsl	x1, x1, x2
  412c58:	mov	w21, #0x0                   	// #0
  412c5c:	tst	x1, x0
  412c60:	b.eq	41256c <__fxstatat@plt+0xfb1c>  // b.none
  412c64:	cbnz	w10, 41246c <__fxstatat@plt+0xfa1c>
  412c68:	cmp	x23, x19
  412c6c:	b.ls	412c74 <__fxstatat@plt+0x10224>  // b.plast
  412c70:	strb	w22, [x28, x19]
  412c74:	add	x0, x19, #0x1
  412c78:	cmp	x23, x0
  412c7c:	b.ls	412c88 <__fxstatat@plt+0x10238>  // b.plast
  412c80:	mov	w1, #0x22                  	// #34
  412c84:	strb	w1, [x28, x0]
  412c88:	add	x0, x19, #0x2
  412c8c:	cmp	x23, x0
  412c90:	b.ls	412c9c <__fxstatat@plt+0x1024c>  // b.plast
  412c94:	mov	w1, #0x22                  	// #34
  412c98:	strb	w1, [x28, x0]
  412c9c:	add	x0, x19, #0x3
  412ca0:	cmp	x23, x0
  412ca4:	b.ls	412cb0 <__fxstatat@plt+0x10260>  // b.plast
  412ca8:	mov	w1, #0x3f                  	// #63
  412cac:	strb	w1, [x28, x0]
  412cb0:	add	x19, x19, #0x4
  412cb4:	mov	w22, w2
  412cb8:	mov	x20, x6
  412cbc:	mov	w0, w25
  412cc0:	b	412754 <__fxstatat@plt+0xfd04>
  412cc4:	mov	w0, #0x1                   	// #1
  412cc8:	mov	w1, w0
  412ccc:	mov	w11, w1
  412cd0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  412cd4:	mov	w5, w1
  412cd8:	add	x0, x0, #0xe28
  412cdc:	mov	w10, w1
  412ce0:	mov	w7, #0x0                   	// #0
  412ce4:	mov	w25, #0x0                   	// #0
  412ce8:	mov	x12, #0x1                   	// #1
  412cec:	mov	x19, #0x0                   	// #0
  412cf0:	stp	w1, wzr, [sp, #120]
  412cf4:	str	wzr, [sp, #144]
  412cf8:	str	x0, [sp, #168]
  412cfc:	str	wzr, [sp, #188]
  412d00:	str	xzr, [sp, #192]
  412d04:	str	w1, [sp, #208]
  412d08:	b	411ea8 <__fxstatat@plt+0xf458>
  412d0c:	mov	w5, w11
  412d10:	cbnz	x20, 4128c0 <__fxstatat@plt+0xfe70>
  412d14:	b	412594 <__fxstatat@plt+0xfb44>
  412d18:	mov	w5, w11
  412d1c:	b	4128a8 <__fxstatat@plt+0xfe58>
  412d20:	mov	w5, w11
  412d24:	b	412a7c <__fxstatat@plt+0x1002c>
  412d28:	mov	w5, w11
  412d2c:	mov	w0, #0x76                  	// #118
  412d30:	b	412630 <__fxstatat@plt+0xfbe0>
  412d34:	mov	w5, w11
  412d38:	b	412a00 <__fxstatat@plt+0xffb0>
  412d3c:	ldr	w0, [sp, #116]
  412d40:	mov	w5, w11
  412d44:	cmp	w0, #0x2
  412d48:	b.ne	4125cc <__fxstatat@plt+0xfb7c>  // b.any
  412d4c:	b	4128f0 <__fxstatat@plt+0xfea0>
  412d50:	mov	w5, w11
  412d54:	mov	w21, w11
  412d58:	b	412594 <__fxstatat@plt+0xfb44>
  412d5c:	mov	w5, w11
  412d60:	b	412a6c <__fxstatat@plt+0x1001c>
  412d64:	mov	w5, w11
  412d68:	mov	w0, #0x74                  	// #116
  412d6c:	b	412628 <__fxstatat@plt+0xfbd8>
  412d70:	mov	w5, w11
  412d74:	b	4126c0 <__fxstatat@plt+0xfc70>
  412d78:	ldr	w0, [sp, #116]
  412d7c:	mov	w5, w11
  412d80:	cmp	w0, #0x2
  412d84:	b.ne	412614 <__fxstatat@plt+0xfbc4>  // b.any
  412d88:	b	412390 <__fxstatat@plt+0xf940>
  412d8c:	ldr	x0, [sp, #200]
  412d90:	ldrb	w0, [x0]
  412d94:	cbz	w0, 411e4c <__fxstatat@plt+0xf3fc>
  412d98:	cmp	x23, x19
  412d9c:	b.ls	412dbc <__fxstatat@plt+0x1036c>  // b.plast
  412da0:	strb	w0, [x28, x19]
  412da4:	add	x19, x19, #0x1
  412da8:	ldr	x0, [sp, #200]
  412dac:	ldrb	w0, [x0, x19]
  412db0:	cbz	w0, 411e4c <__fxstatat@plt+0xf3fc>
  412db4:	cmp	x23, x19
  412db8:	b.hi	412da0 <__fxstatat@plt+0x10350>  // b.pmore
  412dbc:	ldr	x0, [sp, #200]
  412dc0:	add	x19, x19, #0x1
  412dc4:	ldrb	w0, [x0, x19]
  412dc8:	cbnz	w0, 412d98 <__fxstatat@plt+0x10348>
  412dcc:	b	411e4c <__fxstatat@plt+0xf3fc>
  412dd0:	mov	x8, x21
  412dd4:	ldr	w1, [sp, #120]
  412dd8:	ldr	w10, [sp, #136]
  412ddc:	mov	w21, #0x0                   	// #0
  412de0:	ldp	w25, w5, [sp, #148]
  412de4:	ldp	w7, w11, [sp, #156]
  412de8:	ldr	w22, [sp, #220]
  412dec:	ldr	x12, [sp, #128]
  412df0:	ldp	x19, x4, [sp, #224]
  412df4:	b	412068 <__fxstatat@plt+0xf618>
  412df8:	ldr	w5, [sp, #124]
  412dfc:	mov	w0, w25
  412e00:	mov	w21, w5
  412e04:	b	412584 <__fxstatat@plt+0xfb34>
  412e08:	mov	x9, x25
  412e0c:	cmp	x25, x24
  412e10:	ldr	w10, [sp, #136]
  412e14:	mov	x8, x21
  412e18:	ldp	w25, w5, [sp, #148]
  412e1c:	ldp	w7, w11, [sp, #156]
  412e20:	ldr	w22, [sp, #220]
  412e24:	ldr	x12, [sp, #128]
  412e28:	ldp	x19, x4, [sp, #224]
  412e2c:	b.cc	412e44 <__fxstatat@plt+0x103f4>  // b.lo, b.ul, b.last
  412e30:	b	412e4c <__fxstatat@plt+0x103fc>
  412e34:	add	x8, x8, #0x1
  412e38:	add	x9, x20, x8
  412e3c:	cmp	x24, x9
  412e40:	b.ls	412e4c <__fxstatat@plt+0x103fc>  // b.plast
  412e44:	ldrb	w0, [x27, x9]
  412e48:	cbnz	w0, 412e34 <__fxstatat@plt+0x103e4>
  412e4c:	ldr	w1, [sp, #120]
  412e50:	mov	w21, #0x0                   	// #0
  412e54:	b	412068 <__fxstatat@plt+0xf618>
  412e58:	mov	w7, w10
  412e5c:	ldr	x0, [sp, #168]
  412e60:	cmp	x0, #0x0
  412e64:	ccmp	w7, #0x0, #0x4, ne  // ne = any
  412e68:	b.eq	412e90 <__fxstatat@plt+0x10440>  // b.none
  412e6c:	ldrb	w1, [x0]
  412e70:	cbz	w1, 412e90 <__fxstatat@plt+0x10440>
  412e74:	sub	x0, x0, x19
  412e78:	cmp	x23, x19
  412e7c:	b.ls	412ea0 <__fxstatat@plt+0x10450>  // b.plast
  412e80:	strb	w1, [x28, x19]
  412e84:	add	x19, x19, #0x1
  412e88:	ldrb	w1, [x0, x19]
  412e8c:	cbnz	w1, 412e78 <__fxstatat@plt+0x10428>
  412e90:	cmp	x23, x19
  412e94:	b.ls	4124a0 <__fxstatat@plt+0xfa50>  // b.plast
  412e98:	strb	wzr, [x28, x19]
  412e9c:	b	4124a0 <__fxstatat@plt+0xfa50>
  412ea0:	add	x19, x19, #0x1
  412ea4:	ldrb	w1, [x0, x19]
  412ea8:	cbnz	w1, 412e78 <__fxstatat@plt+0x10428>
  412eac:	b	412e90 <__fxstatat@plt+0x10440>
  412eb0:	ldr	w7, [sp, #188]
  412eb4:	b	412e5c <__fxstatat@plt+0x1040c>
  412eb8:	ldp	x1, x7, [sp, #192]
  412ebc:	mov	x6, x4
  412ec0:	ldr	w5, [sp, #184]
  412ec4:	mov	x3, x24
  412ec8:	ldr	x0, [sp, #256]
  412ecc:	str	x0, [sp]
  412ed0:	mov	x2, x27
  412ed4:	mov	x0, x28
  412ed8:	mov	w4, #0x5                   	// #5
  412edc:	bl	411db0 <__fxstatat@plt+0xf360>
  412ee0:	mov	x19, x0
  412ee4:	b	4124a0 <__fxstatat@plt+0xfa50>
  412ee8:	ldr	x23, [sp, #192]
  412eec:	b	4123e4 <__fxstatat@plt+0xf994>
  412ef0:	mov	w1, #0x1                   	// #1
  412ef4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x5f80>
  412ef8:	mov	w10, w1
  412efc:	add	x0, x0, #0xe50
  412f00:	mov	w7, w1
  412f04:	mov	w5, w1
  412f08:	mov	w11, #0x0                   	// #0
  412f0c:	mov	w25, #0x0                   	// #0
  412f10:	mov	x12, #0x1                   	// #1
  412f14:	mov	x19, #0x0                   	// #0
  412f18:	stp	wzr, w1, [sp, #120]
  412f1c:	str	w1, [sp, #144]
  412f20:	str	x0, [sp, #168]
  412f24:	str	wzr, [sp, #188]
  412f28:	str	xzr, [sp, #192]
  412f2c:	str	wzr, [sp, #208]
  412f30:	b	411ea8 <__fxstatat@plt+0xf458>
  412f34:	mov	w25, #0x0                   	// #0
  412f38:	mov	w0, #0x0                   	// #0
  412f3c:	mov	w5, #0x1                   	// #1
  412f40:	mov	x1, #0x0                   	// #0
  412f44:	str	x23, [sp, #192]
  412f48:	b	412274 <__fxstatat@plt+0xf824>
  412f4c:	bl	402760 <abort@plt>
  412f50:	sub	sp, sp, #0x80
  412f54:	stp	x29, x30, [sp, #16]
  412f58:	add	x29, sp, #0x10
  412f5c:	stp	x19, x20, [sp, #32]
  412f60:	mov	w19, w0
  412f64:	mov	x20, x3
  412f68:	stp	x21, x22, [sp, #48]
  412f6c:	stp	x23, x24, [sp, #64]
  412f70:	mov	x23, x1
  412f74:	mov	x24, x2
  412f78:	stp	x25, x26, [sp, #80]
  412f7c:	stp	x27, x28, [sp, #96]
  412f80:	bl	4029e0 <__errno_location@plt>
  412f84:	mov	x22, x0
  412f88:	ldr	w0, [x0]
  412f8c:	adrp	x27, 433000 <_obstack_memory_used@@Base+0x1bf80>
  412f90:	str	w0, [sp, #116]
  412f94:	ldr	x21, [x27, #1336]
  412f98:	tbnz	w19, #31, 4130f0 <__fxstatat@plt+0x106a0>
  412f9c:	add	x26, x27, #0x538
  412fa0:	ldr	w0, [x26, #8]
  412fa4:	cmp	w0, w19
  412fa8:	b.gt	412ff8 <__fxstatat@plt+0x105a8>
  412fac:	mov	w0, #0x7fffffff            	// #2147483647
  412fb0:	cmp	w19, w0
  412fb4:	b.eq	4130ec <__fxstatat@plt+0x1069c>  // b.none
  412fb8:	add	w28, w19, #0x1
  412fbc:	add	x0, x26, #0x10
  412fc0:	cmp	x21, x0
  412fc4:	sbfiz	x1, x28, #4, #32
  412fc8:	b.eq	4130d0 <__fxstatat@plt+0x10680>  // b.none
  412fcc:	mov	x0, x21
  412fd0:	bl	415c70 <__fxstatat@plt+0x13220>
  412fd4:	mov	x21, x0
  412fd8:	str	x0, [x27, #1336]
  412fdc:	ldr	w0, [x26, #8]
  412fe0:	mov	w1, #0x0                   	// #0
  412fe4:	sub	w2, w28, w0
  412fe8:	add	x0, x21, w0, sxtw #4
  412fec:	sbfiz	x2, x2, #4, #32
  412ff0:	bl	402680 <memset@plt>
  412ff4:	str	w28, [x26, #8]
  412ff8:	sbfiz	x19, x19, #4, #32
  412ffc:	add	x26, x20, #0x8
  413000:	add	x0, x21, x19
  413004:	str	x0, [sp, #120]
  413008:	ldp	w4, w5, [x20]
  41300c:	mov	x6, x26
  413010:	ldr	x7, [x20, #40]
  413014:	orr	w25, w5, #0x1
  413018:	ldr	x27, [x21, x19]
  41301c:	mov	x3, x24
  413020:	ldr	x28, [x0, #8]
  413024:	mov	x1, x27
  413028:	ldr	x0, [x20, #48]
  41302c:	str	x0, [sp]
  413030:	mov	x2, x23
  413034:	mov	w5, w25
  413038:	mov	x0, x28
  41303c:	bl	411db0 <__fxstatat@plt+0xf360>
  413040:	cmp	x27, x0
  413044:	b.hi	4130a4 <__fxstatat@plt+0x10654>  // b.pmore
  413048:	add	x27, x0, #0x1
  41304c:	str	x27, [x21, x19]
  413050:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  413054:	add	x0, x0, #0x760
  413058:	cmp	x28, x0
  41305c:	b.eq	413068 <__fxstatat@plt+0x10618>  // b.none
  413060:	mov	x0, x28
  413064:	bl	402840 <free@plt>
  413068:	mov	x0, x27
  41306c:	bl	415c40 <__fxstatat@plt+0x131f0>
  413070:	ldr	x1, [sp, #120]
  413074:	mov	x28, x0
  413078:	ldr	w4, [x20]
  41307c:	mov	x6, x26
  413080:	ldr	x7, [x20, #40]
  413084:	str	x0, [x1, #8]
  413088:	ldr	x1, [x20, #48]
  41308c:	str	x1, [sp]
  413090:	mov	w5, w25
  413094:	mov	x3, x24
  413098:	mov	x2, x23
  41309c:	mov	x1, x27
  4130a0:	bl	411db0 <__fxstatat@plt+0xf360>
  4130a4:	ldr	w0, [sp, #116]
  4130a8:	ldp	x29, x30, [sp, #16]
  4130ac:	ldp	x19, x20, [sp, #32]
  4130b0:	ldp	x23, x24, [sp, #64]
  4130b4:	ldp	x25, x26, [sp, #80]
  4130b8:	str	w0, [x22]
  4130bc:	mov	x0, x28
  4130c0:	ldp	x21, x22, [sp, #48]
  4130c4:	ldp	x27, x28, [sp, #96]
  4130c8:	add	sp, sp, #0x80
  4130cc:	ret
  4130d0:	mov	x0, #0x0                   	// #0
  4130d4:	bl	415c70 <__fxstatat@plt+0x13220>
  4130d8:	mov	x21, x0
  4130dc:	str	x0, [x27, #1336]
  4130e0:	ldp	x0, x1, [x26, #16]
  4130e4:	stp	x0, x1, [x21]
  4130e8:	b	412fdc <__fxstatat@plt+0x1058c>
  4130ec:	bl	415e08 <__fxstatat@plt+0x133b8>
  4130f0:	bl	402760 <abort@plt>
  4130f4:	nop
  4130f8:	stp	x29, x30, [sp, #-48]!
  4130fc:	mov	x29, sp
  413100:	stp	x19, x20, [sp, #16]
  413104:	mov	x20, x0
  413108:	str	x21, [sp, #32]
  41310c:	bl	4029e0 <__errno_location@plt>
  413110:	adrp	x2, 434000 <__progname@@GLIBC_2.17+0xa38>
  413114:	mov	x19, x0
  413118:	add	x2, x2, #0x760
  41311c:	cmp	x20, #0x0
  413120:	add	x2, x2, #0x100
  413124:	mov	x1, #0x38                  	// #56
  413128:	ldr	w21, [x19]
  41312c:	csel	x0, x2, x20, eq  // eq = none
  413130:	bl	415d88 <__fxstatat@plt+0x13338>
  413134:	str	w21, [x19]
  413138:	ldp	x19, x20, [sp, #16]
  41313c:	ldr	x21, [sp, #32]
  413140:	ldp	x29, x30, [sp], #48
  413144:	ret
  413148:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0xa38>
  41314c:	add	x1, x1, #0x760
  413150:	cmp	x0, #0x0
  413154:	add	x1, x1, #0x100
  413158:	csel	x0, x1, x0, eq  // eq = none
  41315c:	ldr	w0, [x0]
  413160:	ret
  413164:	nop
  413168:	adrp	x2, 434000 <__progname@@GLIBC_2.17+0xa38>
  41316c:	add	x2, x2, #0x760
  413170:	cmp	x0, #0x0
  413174:	add	x2, x2, #0x100
  413178:	csel	x0, x2, x0, eq  // eq = none
  41317c:	str	w1, [x0]
  413180:	ret
  413184:	nop
  413188:	adrp	x3, 434000 <__progname@@GLIBC_2.17+0xa38>
  41318c:	add	x3, x3, #0x760
  413190:	cmp	x0, #0x0
  413194:	add	x3, x3, #0x100
  413198:	csel	x0, x3, x0, eq  // eq = none
  41319c:	ubfx	x4, x1, #5, #3
  4131a0:	add	x3, x0, #0x8
  4131a4:	and	w1, w1, #0x1f
  4131a8:	ldr	w5, [x3, x4, lsl #2]
  4131ac:	lsr	w0, w5, w1
  4131b0:	eor	w2, w0, w2
  4131b4:	and	w2, w2, #0x1
  4131b8:	and	w0, w0, #0x1
  4131bc:	lsl	w2, w2, w1
  4131c0:	eor	w2, w2, w5
  4131c4:	str	w2, [x3, x4, lsl #2]
  4131c8:	ret
  4131cc:	nop
  4131d0:	adrp	x3, 434000 <__progname@@GLIBC_2.17+0xa38>
  4131d4:	add	x3, x3, #0x760
  4131d8:	cmp	x0, #0x0
  4131dc:	add	x3, x3, #0x100
  4131e0:	csel	x2, x3, x0, eq  // eq = none
  4131e4:	ldr	w0, [x2, #4]
  4131e8:	str	w1, [x2, #4]
  4131ec:	ret
  4131f0:	adrp	x3, 434000 <__progname@@GLIBC_2.17+0xa38>
  4131f4:	add	x3, x3, #0x760
  4131f8:	cmp	x0, #0x0
  4131fc:	add	x3, x3, #0x100
  413200:	csel	x0, x3, x0, eq  // eq = none
  413204:	mov	w3, #0xa                   	// #10
  413208:	cmp	x1, #0x0
  41320c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  413210:	str	w3, [x0]
  413214:	b.eq	413220 <__fxstatat@plt+0x107d0>  // b.none
  413218:	stp	x1, x2, [x0, #40]
  41321c:	ret
  413220:	stp	x29, x30, [sp, #-16]!
  413224:	mov	x29, sp
  413228:	bl	402760 <abort@plt>
  41322c:	nop
  413230:	sub	sp, sp, #0x50
  413234:	adrp	x5, 434000 <__progname@@GLIBC_2.17+0xa38>
  413238:	stp	x29, x30, [sp, #16]
  41323c:	add	x29, sp, #0x10
  413240:	stp	x19, x20, [sp, #32]
  413244:	mov	x19, x4
  413248:	add	x4, x5, #0x760
  41324c:	cmp	x19, #0x0
  413250:	add	x4, x4, #0x100
  413254:	csel	x19, x4, x19, eq  // eq = none
  413258:	mov	x20, x3
  41325c:	stp	x21, x22, [sp, #48]
  413260:	mov	x21, x0
  413264:	mov	x22, x1
  413268:	str	x23, [sp, #64]
  41326c:	mov	x23, x2
  413270:	bl	4029e0 <__errno_location@plt>
  413274:	ldp	x7, x8, [x19, #40]
  413278:	mov	x3, x20
  41327c:	mov	x20, x0
  413280:	mov	x0, x21
  413284:	ldp	w4, w5, [x19]
  413288:	mov	x2, x23
  41328c:	ldr	w21, [x20]
  413290:	mov	x1, x22
  413294:	str	x8, [sp]
  413298:	add	x6, x19, #0x8
  41329c:	bl	411db0 <__fxstatat@plt+0xf360>
  4132a0:	ldp	x29, x30, [sp, #16]
  4132a4:	ldr	x23, [sp, #64]
  4132a8:	str	w21, [x20]
  4132ac:	ldp	x19, x20, [sp, #32]
  4132b0:	ldp	x21, x22, [sp, #48]
  4132b4:	add	sp, sp, #0x50
  4132b8:	ret
  4132bc:	nop
  4132c0:	sub	sp, sp, #0x60
  4132c4:	adrp	x4, 434000 <__progname@@GLIBC_2.17+0xa38>
  4132c8:	add	x4, x4, #0x760
  4132cc:	cmp	x2, #0x0
  4132d0:	add	x4, x4, #0x100
  4132d4:	stp	x29, x30, [sp, #16]
  4132d8:	add	x29, sp, #0x10
  4132dc:	stp	x19, x20, [sp, #32]
  4132e0:	csel	x19, x4, x2, eq  // eq = none
  4132e4:	stp	x21, x22, [sp, #48]
  4132e8:	mov	x22, x0
  4132ec:	stp	x23, x24, [sp, #64]
  4132f0:	mov	x23, x1
  4132f4:	stp	x25, x26, [sp, #80]
  4132f8:	bl	4029e0 <__errno_location@plt>
  4132fc:	ldr	w26, [x0]
  413300:	ldp	w4, w24, [x19]
  413304:	mov	x20, x0
  413308:	ldp	x7, x0, [x19, #40]
  41330c:	add	x25, x19, #0x8
  413310:	orr	w24, w24, #0x1
  413314:	mov	x6, x25
  413318:	mov	x3, x23
  41331c:	mov	x2, x22
  413320:	mov	w5, w24
  413324:	str	x0, [sp]
  413328:	mov	x1, #0x0                   	// #0
  41332c:	mov	x0, #0x0                   	// #0
  413330:	bl	411db0 <__fxstatat@plt+0xf360>
  413334:	add	x21, x0, #0x1
  413338:	mov	x0, x21
  41333c:	bl	415c40 <__fxstatat@plt+0x131f0>
  413340:	ldp	x7, x1, [x19, #40]
  413344:	mov	w5, w24
  413348:	ldr	w4, [x19]
  41334c:	mov	x6, x25
  413350:	str	x1, [sp]
  413354:	mov	x3, x23
  413358:	mov	x2, x22
  41335c:	mov	x19, x0
  413360:	mov	x1, x21
  413364:	bl	411db0 <__fxstatat@plt+0xf360>
  413368:	mov	x0, x19
  41336c:	ldp	x29, x30, [sp, #16]
  413370:	ldp	x21, x22, [sp, #48]
  413374:	ldp	x23, x24, [sp, #64]
  413378:	str	w26, [x20]
  41337c:	ldp	x19, x20, [sp, #32]
  413380:	ldp	x25, x26, [sp, #80]
  413384:	add	sp, sp, #0x60
  413388:	ret
  41338c:	nop
  413390:	sub	sp, sp, #0x70
  413394:	adrp	x4, 434000 <__progname@@GLIBC_2.17+0xa38>
  413398:	add	x4, x4, #0x760
  41339c:	cmp	x3, #0x0
  4133a0:	add	x4, x4, #0x100
  4133a4:	stp	x29, x30, [sp, #16]
  4133a8:	add	x29, sp, #0x10
  4133ac:	stp	x19, x20, [sp, #32]
  4133b0:	csel	x19, x4, x3, eq  // eq = none
  4133b4:	mov	x20, x2
  4133b8:	stp	x21, x22, [sp, #48]
  4133bc:	mov	x22, x0
  4133c0:	stp	x23, x24, [sp, #64]
  4133c4:	mov	x23, x1
  4133c8:	stp	x25, x26, [sp, #80]
  4133cc:	stp	x27, x28, [sp, #96]
  4133d0:	bl	4029e0 <__errno_location@plt>
  4133d4:	ldr	w28, [x0]
  4133d8:	ldp	w4, w5, [x19]
  4133dc:	mov	x21, x0
  4133e0:	ldp	x7, x0, [x19, #40]
  4133e4:	cmp	x20, #0x0
  4133e8:	cset	w24, eq  // eq = none
  4133ec:	add	x27, x19, #0x8
  4133f0:	orr	w24, w24, w5
  4133f4:	mov	x6, x27
  4133f8:	mov	x3, x23
  4133fc:	mov	x2, x22
  413400:	mov	w5, w24
  413404:	str	x0, [sp]
  413408:	mov	x1, #0x0                   	// #0
  41340c:	mov	x0, #0x0                   	// #0
  413410:	bl	411db0 <__fxstatat@plt+0xf360>
  413414:	add	x26, x0, #0x1
  413418:	mov	x25, x0
  41341c:	mov	x0, x26
  413420:	bl	415c40 <__fxstatat@plt+0x131f0>
  413424:	ldp	x7, x1, [x19, #40]
  413428:	mov	w5, w24
  41342c:	ldr	w4, [x19]
  413430:	mov	x6, x27
  413434:	str	x1, [sp]
  413438:	mov	x3, x23
  41343c:	mov	x2, x22
  413440:	mov	x19, x0
  413444:	mov	x1, x26
  413448:	bl	411db0 <__fxstatat@plt+0xf360>
  41344c:	str	w28, [x21]
  413450:	cbz	x20, 413458 <__fxstatat@plt+0x10a08>
  413454:	str	x25, [x20]
  413458:	mov	x0, x19
  41345c:	ldp	x29, x30, [sp, #16]
  413460:	ldp	x19, x20, [sp, #32]
  413464:	ldp	x21, x22, [sp, #48]
  413468:	ldp	x23, x24, [sp, #64]
  41346c:	ldp	x25, x26, [sp, #80]
  413470:	ldp	x27, x28, [sp, #96]
  413474:	add	sp, sp, #0x70
  413478:	ret
  41347c:	nop
  413480:	stp	x29, x30, [sp, #-64]!
  413484:	mov	x29, sp
  413488:	stp	x21, x22, [sp, #32]
  41348c:	str	x23, [sp, #48]
  413490:	adrp	x23, 433000 <_obstack_memory_used@@Base+0x1bf80>
  413494:	add	x22, x23, #0x538
  413498:	stp	x19, x20, [sp, #16]
  41349c:	ldr	x21, [x23, #1336]
  4134a0:	ldr	w20, [x22, #8]
  4134a4:	cmp	w20, #0x1
  4134a8:	b.le	4134d0 <__fxstatat@plt+0x10a80>
  4134ac:	sub	w0, w20, #0x2
  4134b0:	add	x20, x21, #0x28
  4134b4:	add	x19, x21, #0x18
  4134b8:	add	x20, x20, w0, uxtw #4
  4134bc:	nop
  4134c0:	ldr	x0, [x19], #16
  4134c4:	bl	402840 <free@plt>
  4134c8:	cmp	x19, x20
  4134cc:	b.ne	4134c0 <__fxstatat@plt+0x10a70>  // b.any
  4134d0:	ldr	x0, [x21, #8]
  4134d4:	adrp	x19, 434000 <__progname@@GLIBC_2.17+0xa38>
  4134d8:	add	x19, x19, #0x760
  4134dc:	cmp	x0, x19
  4134e0:	b.eq	4134f0 <__fxstatat@plt+0x10aa0>  // b.none
  4134e4:	bl	402840 <free@plt>
  4134e8:	mov	x0, #0x100                 	// #256
  4134ec:	stp	x0, x19, [x22, #16]
  4134f0:	add	x19, x22, #0x10
  4134f4:	cmp	x21, x19
  4134f8:	b.eq	413508 <__fxstatat@plt+0x10ab8>  // b.none
  4134fc:	mov	x0, x21
  413500:	bl	402840 <free@plt>
  413504:	str	x19, [x23, #1336]
  413508:	mov	w0, #0x1                   	// #1
  41350c:	str	w0, [x22, #8]
  413510:	ldp	x19, x20, [sp, #16]
  413514:	ldp	x21, x22, [sp, #32]
  413518:	ldr	x23, [sp, #48]
  41351c:	ldp	x29, x30, [sp], #64
  413520:	ret
  413524:	nop
  413528:	sub	sp, sp, #0x70
  41352c:	stp	x29, x30, [sp, #16]
  413530:	add	x29, sp, #0x10
  413534:	stp	x21, x22, [sp, #48]
  413538:	adrp	x22, 433000 <_obstack_memory_used@@Base+0x1bf80>
  41353c:	stp	x19, x20, [sp, #32]
  413540:	mov	w19, w0
  413544:	stp	x23, x24, [sp, #64]
  413548:	mov	x24, x1
  41354c:	stp	x25, x26, [sp, #80]
  413550:	stp	x27, x28, [sp, #96]
  413554:	bl	4029e0 <__errno_location@plt>
  413558:	ldr	w25, [x0]
  41355c:	ldr	x20, [x22, #1336]
  413560:	tbnz	w19, #31, 4136a8 <__fxstatat@plt+0x10c58>
  413564:	add	x21, x22, #0x538
  413568:	mov	x23, x0
  41356c:	ldr	w0, [x21, #8]
  413570:	cmp	w19, w0
  413574:	b.lt	4135c4 <__fxstatat@plt+0x10b74>  // b.tstop
  413578:	mov	w0, #0x7fffffff            	// #2147483647
  41357c:	cmp	w19, w0
  413580:	b.eq	4136a4 <__fxstatat@plt+0x10c54>  // b.none
  413584:	add	w26, w19, #0x1
  413588:	add	x0, x21, #0x10
  41358c:	cmp	x20, x0
  413590:	sbfiz	x1, x26, #4, #32
  413594:	b.eq	413688 <__fxstatat@plt+0x10c38>  // b.none
  413598:	mov	x0, x20
  41359c:	bl	415c70 <__fxstatat@plt+0x13220>
  4135a0:	mov	x20, x0
  4135a4:	str	x0, [x22, #1336]
  4135a8:	ldr	w0, [x21, #8]
  4135ac:	mov	w1, #0x0                   	// #0
  4135b0:	sub	w2, w26, w0
  4135b4:	add	x0, x20, w0, sxtw #4
  4135b8:	sbfiz	x2, x2, #4, #32
  4135bc:	bl	402680 <memset@plt>
  4135c0:	str	w26, [x21, #8]
  4135c4:	adrp	x21, 434000 <__progname@@GLIBC_2.17+0xa38>
  4135c8:	add	x21, x21, #0x760
  4135cc:	sbfiz	x19, x19, #4, #32
  4135d0:	add	x6, x21, #0x108
  4135d4:	add	x26, x20, x19
  4135d8:	mov	x2, x24
  4135dc:	ldp	x7, x0, [x21, #296]
  4135e0:	mov	x3, #0xffffffffffffffff    	// #-1
  4135e4:	ldr	w4, [x21, #256]
  4135e8:	ldr	w28, [x21, #260]
  4135ec:	ldr	x22, [x20, x19]
  4135f0:	orr	w28, w28, #0x1
  4135f4:	ldr	x27, [x26, #8]
  4135f8:	str	x0, [sp]
  4135fc:	mov	x1, x22
  413600:	mov	w5, w28
  413604:	mov	x0, x27
  413608:	bl	411db0 <__fxstatat@plt+0xf360>
  41360c:	cmp	x22, x0
  413610:	b.hi	413660 <__fxstatat@plt+0x10c10>  // b.pmore
  413614:	add	x22, x0, #0x1
  413618:	str	x22, [x20, x19]
  41361c:	cmp	x27, x21
  413620:	b.eq	41362c <__fxstatat@plt+0x10bdc>  // b.none
  413624:	mov	x0, x27
  413628:	bl	402840 <free@plt>
  41362c:	mov	x0, x22
  413630:	bl	415c40 <__fxstatat@plt+0x131f0>
  413634:	ldp	x7, x1, [x21, #296]
  413638:	str	x0, [x26, #8]
  41363c:	ldr	w4, [x21, #256]
  413640:	mov	x27, x0
  413644:	str	x1, [sp]
  413648:	mov	w5, w28
  41364c:	mov	x2, x24
  413650:	add	x6, x21, #0x108
  413654:	mov	x1, x22
  413658:	mov	x3, #0xffffffffffffffff    	// #-1
  41365c:	bl	411db0 <__fxstatat@plt+0xf360>
  413660:	mov	x0, x27
  413664:	ldp	x29, x30, [sp, #16]
  413668:	ldp	x19, x20, [sp, #32]
  41366c:	ldp	x21, x22, [sp, #48]
  413670:	ldp	x27, x28, [sp, #96]
  413674:	str	w25, [x23]
  413678:	ldp	x23, x24, [sp, #64]
  41367c:	ldp	x25, x26, [sp, #80]
  413680:	add	sp, sp, #0x70
  413684:	ret
  413688:	mov	x0, #0x0                   	// #0
  41368c:	bl	415c70 <__fxstatat@plt+0x13220>
  413690:	mov	x20, x0
  413694:	str	x0, [x22, #1336]
  413698:	ldp	x0, x1, [x21, #16]
  41369c:	stp	x0, x1, [x20]
  4136a0:	b	4135a8 <__fxstatat@plt+0x10b58>
  4136a4:	bl	415e08 <__fxstatat@plt+0x133b8>
  4136a8:	bl	402760 <abort@plt>
  4136ac:	nop
  4136b0:	sub	sp, sp, #0x80
  4136b4:	stp	x29, x30, [sp, #16]
  4136b8:	add	x29, sp, #0x10
  4136bc:	stp	x19, x20, [sp, #32]
  4136c0:	mov	w19, w0
  4136c4:	stp	x21, x22, [sp, #48]
  4136c8:	stp	x23, x24, [sp, #64]
  4136cc:	mov	x23, x1
  4136d0:	mov	x24, x2
  4136d4:	stp	x25, x26, [sp, #80]
  4136d8:	adrp	x26, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4136dc:	stp	x27, x28, [sp, #96]
  4136e0:	bl	4029e0 <__errno_location@plt>
  4136e4:	mov	x22, x0
  4136e8:	ldr	w0, [x0]
  4136ec:	str	w0, [sp, #124]
  4136f0:	ldr	x20, [x26, #1336]
  4136f4:	tbnz	w19, #31, 41383c <__fxstatat@plt+0x10dec>
  4136f8:	add	x21, x26, #0x538
  4136fc:	ldr	w0, [x21, #8]
  413700:	cmp	w19, w0
  413704:	b.lt	413754 <__fxstatat@plt+0x10d04>  // b.tstop
  413708:	mov	w0, #0x7fffffff            	// #2147483647
  41370c:	cmp	w19, w0
  413710:	b.eq	413838 <__fxstatat@plt+0x10de8>  // b.none
  413714:	add	w27, w19, #0x1
  413718:	add	x0, x21, #0x10
  41371c:	cmp	x20, x0
  413720:	sbfiz	x1, x27, #4, #32
  413724:	b.eq	41381c <__fxstatat@plt+0x10dcc>  // b.none
  413728:	mov	x0, x20
  41372c:	bl	415c70 <__fxstatat@plt+0x13220>
  413730:	mov	x20, x0
  413734:	str	x0, [x26, #1336]
  413738:	ldr	w0, [x21, #8]
  41373c:	mov	w1, #0x0                   	// #0
  413740:	sub	w2, w27, w0
  413744:	add	x0, x20, w0, sxtw #4
  413748:	sbfiz	x2, x2, #4, #32
  41374c:	bl	402680 <memset@plt>
  413750:	str	w27, [x21, #8]
  413754:	adrp	x21, 434000 <__progname@@GLIBC_2.17+0xa38>
  413758:	add	x21, x21, #0x760
  41375c:	sbfiz	x19, x19, #4, #32
  413760:	add	x6, x21, #0x108
  413764:	add	x26, x20, x19
  413768:	mov	x3, x24
  41376c:	ldp	x7, x0, [x21, #296]
  413770:	mov	x2, x23
  413774:	ldr	w4, [x21, #256]
  413778:	ldr	w5, [x21, #260]
  41377c:	ldr	x27, [x20, x19]
  413780:	orr	w25, w5, #0x1
  413784:	ldr	x28, [x26, #8]
  413788:	str	x0, [sp]
  41378c:	mov	x1, x27
  413790:	mov	w5, w25
  413794:	mov	x0, x28
  413798:	bl	411db0 <__fxstatat@plt+0xf360>
  41379c:	cmp	x27, x0
  4137a0:	b.hi	4137f0 <__fxstatat@plt+0x10da0>  // b.pmore
  4137a4:	add	x27, x0, #0x1
  4137a8:	str	x27, [x20, x19]
  4137ac:	cmp	x28, x21
  4137b0:	b.eq	4137bc <__fxstatat@plt+0x10d6c>  // b.none
  4137b4:	mov	x0, x28
  4137b8:	bl	402840 <free@plt>
  4137bc:	mov	x0, x27
  4137c0:	bl	415c40 <__fxstatat@plt+0x131f0>
  4137c4:	ldp	x7, x1, [x21, #296]
  4137c8:	str	x0, [x26, #8]
  4137cc:	ldr	w4, [x21, #256]
  4137d0:	mov	x28, x0
  4137d4:	str	x1, [sp]
  4137d8:	mov	w5, w25
  4137dc:	mov	x3, x24
  4137e0:	mov	x2, x23
  4137e4:	add	x6, x21, #0x108
  4137e8:	mov	x1, x27
  4137ec:	bl	411db0 <__fxstatat@plt+0xf360>
  4137f0:	ldr	w0, [sp, #124]
  4137f4:	ldp	x29, x30, [sp, #16]
  4137f8:	ldp	x19, x20, [sp, #32]
  4137fc:	ldp	x23, x24, [sp, #64]
  413800:	ldp	x25, x26, [sp, #80]
  413804:	str	w0, [x22]
  413808:	mov	x0, x28
  41380c:	ldp	x21, x22, [sp, #48]
  413810:	ldp	x27, x28, [sp, #96]
  413814:	add	sp, sp, #0x80
  413818:	ret
  41381c:	mov	x0, #0x0                   	// #0
  413820:	bl	415c70 <__fxstatat@plt+0x13220>
  413824:	mov	x20, x0
  413828:	str	x0, [x26, #1336]
  41382c:	ldp	x0, x1, [x21, #16]
  413830:	stp	x0, x1, [x20]
  413834:	b	413738 <__fxstatat@plt+0x10ce8>
  413838:	bl	415e08 <__fxstatat@plt+0x133b8>
  41383c:	bl	402760 <abort@plt>
  413840:	sub	sp, sp, #0x60
  413844:	stp	x29, x30, [sp, #16]
  413848:	add	x29, sp, #0x10
  41384c:	stp	x19, x20, [sp, #32]
  413850:	stp	x21, x22, [sp, #48]
  413854:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  413858:	add	x20, x21, #0x538
  41385c:	stp	x23, x24, [sp, #64]
  413860:	mov	x24, x0
  413864:	stp	x25, x26, [sp, #80]
  413868:	bl	4029e0 <__errno_location@plt>
  41386c:	mov	x23, x0
  413870:	ldr	w0, [x20, #8]
  413874:	ldr	x19, [x21, #1336]
  413878:	cmp	w0, #0x0
  41387c:	ldr	w25, [x23]
  413880:	b.gt	4138c4 <__fxstatat@plt+0x10e74>
  413884:	add	x0, x20, #0x10
  413888:	cmp	x19, x0
  41388c:	b.eq	413978 <__fxstatat@plt+0x10f28>  // b.none
  413890:	mov	x0, x19
  413894:	mov	x1, #0x10                  	// #16
  413898:	bl	415c70 <__fxstatat@plt+0x13220>
  41389c:	mov	x19, x0
  4138a0:	str	x0, [x21, #1336]
  4138a4:	ldr	w0, [x20, #8]
  4138a8:	mov	w21, #0x1                   	// #1
  4138ac:	mov	w1, #0x0                   	// #0
  4138b0:	sub	w2, w21, w0
  4138b4:	add	x0, x19, w0, sxtw #4
  4138b8:	sbfiz	x2, x2, #4, #32
  4138bc:	bl	402680 <memset@plt>
  4138c0:	str	w21, [x20, #8]
  4138c4:	adrp	x20, 434000 <__progname@@GLIBC_2.17+0xa38>
  4138c8:	add	x20, x20, #0x760
  4138cc:	ldp	x21, x22, [x19]
  4138d0:	add	x6, x20, #0x108
  4138d4:	ldp	x7, x0, [x20, #296]
  4138d8:	mov	x2, x24
  4138dc:	ldr	w4, [x20, #256]
  4138e0:	mov	x3, #0xffffffffffffffff    	// #-1
  4138e4:	ldr	w26, [x20, #260]
  4138e8:	str	x0, [sp]
  4138ec:	mov	x1, x21
  4138f0:	orr	w26, w26, #0x1
  4138f4:	mov	x0, x22
  4138f8:	mov	w5, w26
  4138fc:	bl	411db0 <__fxstatat@plt+0xf360>
  413900:	cmp	x21, x0
  413904:	b.hi	413954 <__fxstatat@plt+0x10f04>  // b.pmore
  413908:	add	x21, x0, #0x1
  41390c:	str	x21, [x19]
  413910:	cmp	x22, x20
  413914:	b.eq	413920 <__fxstatat@plt+0x10ed0>  // b.none
  413918:	mov	x0, x22
  41391c:	bl	402840 <free@plt>
  413920:	mov	x0, x21
  413924:	bl	415c40 <__fxstatat@plt+0x131f0>
  413928:	ldp	x7, x1, [x20, #296]
  41392c:	str	x0, [x19, #8]
  413930:	ldr	w4, [x20, #256]
  413934:	mov	x22, x0
  413938:	str	x1, [sp]
  41393c:	mov	w5, w26
  413940:	mov	x2, x24
  413944:	add	x6, x20, #0x108
  413948:	mov	x1, x21
  41394c:	mov	x3, #0xffffffffffffffff    	// #-1
  413950:	bl	411db0 <__fxstatat@plt+0xf360>
  413954:	mov	x0, x22
  413958:	ldp	x29, x30, [sp, #16]
  41395c:	ldp	x19, x20, [sp, #32]
  413960:	ldp	x21, x22, [sp, #48]
  413964:	str	w25, [x23]
  413968:	ldp	x23, x24, [sp, #64]
  41396c:	ldp	x25, x26, [sp, #80]
  413970:	add	sp, sp, #0x60
  413974:	ret
  413978:	mov	x1, #0x10                  	// #16
  41397c:	mov	x0, #0x0                   	// #0
  413980:	bl	415c70 <__fxstatat@plt+0x13220>
  413984:	mov	x19, x0
  413988:	str	x0, [x21, #1336]
  41398c:	ldp	x0, x1, [x20, #16]
  413990:	stp	x0, x1, [x19]
  413994:	b	4138a4 <__fxstatat@plt+0x10e54>
  413998:	sub	sp, sp, #0x70
  41399c:	stp	x29, x30, [sp, #16]
  4139a0:	add	x29, sp, #0x10
  4139a4:	stp	x19, x20, [sp, #32]
  4139a8:	stp	x21, x22, [sp, #48]
  4139ac:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4139b0:	add	x20, x21, #0x538
  4139b4:	stp	x23, x24, [sp, #64]
  4139b8:	mov	x23, x0
  4139bc:	mov	x24, x1
  4139c0:	stp	x25, x26, [sp, #80]
  4139c4:	str	x27, [sp, #96]
  4139c8:	bl	4029e0 <__errno_location@plt>
  4139cc:	mov	x22, x0
  4139d0:	ldr	w0, [x20, #8]
  4139d4:	ldr	x19, [x21, #1336]
  4139d8:	cmp	w0, #0x0
  4139dc:	ldr	w25, [x22]
  4139e0:	b.gt	413a24 <__fxstatat@plt+0x10fd4>
  4139e4:	add	x0, x20, #0x10
  4139e8:	cmp	x19, x0
  4139ec:	b.eq	413adc <__fxstatat@plt+0x1108c>  // b.none
  4139f0:	mov	x0, x19
  4139f4:	mov	x1, #0x10                  	// #16
  4139f8:	bl	415c70 <__fxstatat@plt+0x13220>
  4139fc:	mov	x19, x0
  413a00:	str	x0, [x21, #1336]
  413a04:	ldr	w0, [x20, #8]
  413a08:	mov	w21, #0x1                   	// #1
  413a0c:	mov	w1, #0x0                   	// #0
  413a10:	sub	w2, w21, w0
  413a14:	add	x0, x19, w0, sxtw #4
  413a18:	sbfiz	x2, x2, #4, #32
  413a1c:	bl	402680 <memset@plt>
  413a20:	str	w21, [x20, #8]
  413a24:	adrp	x20, 434000 <__progname@@GLIBC_2.17+0xa38>
  413a28:	add	x20, x20, #0x760
  413a2c:	ldp	x21, x26, [x19]
  413a30:	add	x6, x20, #0x108
  413a34:	ldp	x7, x0, [x20, #296]
  413a38:	mov	x3, x24
  413a3c:	ldr	w4, [x20, #256]
  413a40:	mov	x2, x23
  413a44:	ldr	w27, [x20, #260]
  413a48:	str	x0, [sp]
  413a4c:	mov	x1, x21
  413a50:	orr	w27, w27, #0x1
  413a54:	mov	x0, x26
  413a58:	mov	w5, w27
  413a5c:	bl	411db0 <__fxstatat@plt+0xf360>
  413a60:	cmp	x21, x0
  413a64:	b.hi	413ab4 <__fxstatat@plt+0x11064>  // b.pmore
  413a68:	add	x21, x0, #0x1
  413a6c:	str	x21, [x19]
  413a70:	cmp	x26, x20
  413a74:	b.eq	413a80 <__fxstatat@plt+0x11030>  // b.none
  413a78:	mov	x0, x26
  413a7c:	bl	402840 <free@plt>
  413a80:	mov	x0, x21
  413a84:	bl	415c40 <__fxstatat@plt+0x131f0>
  413a88:	ldp	x7, x1, [x20, #296]
  413a8c:	str	x0, [x19, #8]
  413a90:	ldr	w4, [x20, #256]
  413a94:	mov	x26, x0
  413a98:	str	x1, [sp]
  413a9c:	mov	w5, w27
  413aa0:	mov	x3, x24
  413aa4:	mov	x2, x23
  413aa8:	add	x6, x20, #0x108
  413aac:	mov	x1, x21
  413ab0:	bl	411db0 <__fxstatat@plt+0xf360>
  413ab4:	mov	x0, x26
  413ab8:	ldp	x29, x30, [sp, #16]
  413abc:	ldp	x19, x20, [sp, #32]
  413ac0:	ldp	x23, x24, [sp, #64]
  413ac4:	ldr	x27, [sp, #96]
  413ac8:	str	w25, [x22]
  413acc:	ldp	x21, x22, [sp, #48]
  413ad0:	ldp	x25, x26, [sp, #80]
  413ad4:	add	sp, sp, #0x70
  413ad8:	ret
  413adc:	mov	x1, #0x10                  	// #16
  413ae0:	mov	x0, #0x0                   	// #0
  413ae4:	bl	415c70 <__fxstatat@plt+0x13220>
  413ae8:	mov	x19, x0
  413aec:	str	x0, [x21, #1336]
  413af0:	ldp	x0, x1, [x20, #16]
  413af4:	stp	x0, x1, [x19]
  413af8:	b	413a04 <__fxstatat@plt+0x10fb4>
  413afc:	nop
  413b00:	stp	x29, x30, [sp, #-128]!
  413b04:	cmp	w1, #0xa
  413b08:	mov	x29, sp
  413b0c:	stp	xzr, xzr, [sp, #72]
  413b10:	b.eq	413b48 <__fxstatat@plt+0x110f8>  // b.none
  413b14:	mov	w3, w1
  413b18:	str	w3, [sp, #72]
  413b1c:	mov	x1, x2
  413b20:	add	x3, sp, #0x10
  413b24:	ldp	x4, x5, [sp, #72]
  413b28:	mov	x2, #0xffffffffffffffff    	// #-1
  413b2c:	stp	x4, x5, [sp, #16]
  413b30:	stp	xzr, xzr, [sp, #32]
  413b34:	stp	xzr, xzr, [sp, #48]
  413b38:	str	xzr, [sp, #64]
  413b3c:	bl	412f50 <__fxstatat@plt+0x10500>
  413b40:	ldp	x29, x30, [sp], #128
  413b44:	ret
  413b48:	bl	402760 <abort@plt>
  413b4c:	nop
  413b50:	stp	x29, x30, [sp, #-128]!
  413b54:	cmp	w1, #0xa
  413b58:	mov	x29, sp
  413b5c:	stp	xzr, xzr, [sp, #72]
  413b60:	b.eq	413b98 <__fxstatat@plt+0x11148>  // b.none
  413b64:	mov	w4, w1
  413b68:	str	w4, [sp, #72]
  413b6c:	mov	x1, x2
  413b70:	mov	x2, x3
  413b74:	ldp	x4, x5, [sp, #72]
  413b78:	add	x3, sp, #0x10
  413b7c:	stp	x4, x5, [sp, #16]
  413b80:	stp	xzr, xzr, [sp, #32]
  413b84:	stp	xzr, xzr, [sp, #48]
  413b88:	str	xzr, [sp, #64]
  413b8c:	bl	412f50 <__fxstatat@plt+0x10500>
  413b90:	ldp	x29, x30, [sp], #128
  413b94:	ret
  413b98:	bl	402760 <abort@plt>
  413b9c:	nop
  413ba0:	sub	sp, sp, #0xd0
  413ba4:	cmp	w0, #0xa
  413ba8:	stp	x29, x30, [sp, #16]
  413bac:	add	x29, sp, #0x10
  413bb0:	stp	x19, x20, [sp, #32]
  413bb4:	stp	x21, x22, [sp, #48]
  413bb8:	stp	x23, x24, [sp, #64]
  413bbc:	str	x25, [sp, #80]
  413bc0:	stp	xzr, xzr, [sp, #152]
  413bc4:	stp	xzr, xzr, [sp, #168]
  413bc8:	stp	xzr, xzr, [sp, #184]
  413bcc:	str	xzr, [sp, #200]
  413bd0:	b.eq	413d24 <__fxstatat@plt+0x112d4>  // b.none
  413bd4:	str	w0, [sp, #152]
  413bd8:	mov	x23, x1
  413bdc:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  413be0:	add	x20, x21, #0x538
  413be4:	ldp	x0, x1, [sp, #152]
  413be8:	stp	x0, x1, [sp, #96]
  413bec:	stp	xzr, xzr, [sp, #112]
  413bf0:	stp	xzr, xzr, [sp, #128]
  413bf4:	str	xzr, [sp, #144]
  413bf8:	bl	4029e0 <__errno_location@plt>
  413bfc:	ldr	w1, [x20, #8]
  413c00:	mov	x22, x0
  413c04:	ldr	x19, [x21, #1336]
  413c08:	cmp	w1, #0x0
  413c0c:	ldr	w25, [x0]
  413c10:	b.gt	413c54 <__fxstatat@plt+0x11204>
  413c14:	add	x0, x20, #0x10
  413c18:	cmp	x19, x0
  413c1c:	b.eq	413d04 <__fxstatat@plt+0x112b4>  // b.none
  413c20:	mov	x0, x19
  413c24:	mov	x1, #0x10                  	// #16
  413c28:	bl	415c70 <__fxstatat@plt+0x13220>
  413c2c:	mov	x19, x0
  413c30:	str	x0, [x21, #1336]
  413c34:	ldr	w0, [x20, #8]
  413c38:	mov	w21, #0x1                   	// #1
  413c3c:	mov	w1, #0x0                   	// #0
  413c40:	sub	w2, w21, w0
  413c44:	add	x0, x19, w0, sxtw #4
  413c48:	sbfiz	x2, x2, #4, #32
  413c4c:	bl	402680 <memset@plt>
  413c50:	str	w21, [x20, #8]
  413c54:	ldp	x20, x21, [x19]
  413c58:	add	x6, sp, #0x68
  413c5c:	ldp	x7, x0, [sp, #136]
  413c60:	str	x0, [sp]
  413c64:	ldp	w4, w24, [sp, #96]
  413c68:	mov	x2, x23
  413c6c:	mov	x1, x20
  413c70:	mov	x0, x21
  413c74:	orr	w24, w24, #0x1
  413c78:	mov	x3, #0xffffffffffffffff    	// #-1
  413c7c:	mov	w5, w24
  413c80:	bl	411db0 <__fxstatat@plt+0xf360>
  413c84:	cmp	x20, x0
  413c88:	b.hi	413ce0 <__fxstatat@plt+0x11290>  // b.pmore
  413c8c:	add	x20, x0, #0x1
  413c90:	str	x20, [x19]
  413c94:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  413c98:	add	x0, x0, #0x760
  413c9c:	cmp	x21, x0
  413ca0:	b.eq	413cac <__fxstatat@plt+0x1125c>  // b.none
  413ca4:	mov	x0, x21
  413ca8:	bl	402840 <free@plt>
  413cac:	mov	x0, x20
  413cb0:	bl	415c40 <__fxstatat@plt+0x131f0>
  413cb4:	ldp	x7, x1, [sp, #136]
  413cb8:	str	x0, [x19, #8]
  413cbc:	ldr	w4, [sp, #96]
  413cc0:	mov	x21, x0
  413cc4:	str	x1, [sp]
  413cc8:	add	x6, sp, #0x68
  413ccc:	mov	w5, w24
  413cd0:	mov	x2, x23
  413cd4:	mov	x1, x20
  413cd8:	mov	x3, #0xffffffffffffffff    	// #-1
  413cdc:	bl	411db0 <__fxstatat@plt+0xf360>
  413ce0:	ldp	x29, x30, [sp, #16]
  413ce4:	mov	x0, x21
  413ce8:	ldp	x19, x20, [sp, #32]
  413cec:	ldp	x23, x24, [sp, #64]
  413cf0:	str	w25, [x22]
  413cf4:	ldp	x21, x22, [sp, #48]
  413cf8:	ldr	x25, [sp, #80]
  413cfc:	add	sp, sp, #0xd0
  413d00:	ret
  413d04:	mov	x1, #0x10                  	// #16
  413d08:	mov	x0, #0x0                   	// #0
  413d0c:	bl	415c70 <__fxstatat@plt+0x13220>
  413d10:	mov	x19, x0
  413d14:	str	x0, [x21, #1336]
  413d18:	ldp	x0, x1, [x20, #16]
  413d1c:	stp	x0, x1, [x19]
  413d20:	b	413c34 <__fxstatat@plt+0x111e4>
  413d24:	bl	402760 <abort@plt>
  413d28:	sub	sp, sp, #0xd0
  413d2c:	cmp	w0, #0xa
  413d30:	stp	x29, x30, [sp, #16]
  413d34:	add	x29, sp, #0x10
  413d38:	stp	x19, x20, [sp, #32]
  413d3c:	stp	x21, x22, [sp, #48]
  413d40:	stp	x23, x24, [sp, #64]
  413d44:	stp	x25, x26, [sp, #80]
  413d48:	stp	xzr, xzr, [sp, #152]
  413d4c:	stp	xzr, xzr, [sp, #168]
  413d50:	stp	xzr, xzr, [sp, #184]
  413d54:	str	xzr, [sp, #200]
  413d58:	b.eq	413eb0 <__fxstatat@plt+0x11460>  // b.none
  413d5c:	str	w0, [sp, #152]
  413d60:	mov	x23, x1
  413d64:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  413d68:	add	x20, x21, #0x538
  413d6c:	ldp	x0, x1, [sp, #152]
  413d70:	mov	x24, x2
  413d74:	stp	x0, x1, [sp, #96]
  413d78:	stp	xzr, xzr, [sp, #112]
  413d7c:	stp	xzr, xzr, [sp, #128]
  413d80:	str	xzr, [sp, #144]
  413d84:	bl	4029e0 <__errno_location@plt>
  413d88:	ldr	w1, [x20, #8]
  413d8c:	mov	x22, x0
  413d90:	ldr	x19, [x21, #1336]
  413d94:	cmp	w1, #0x0
  413d98:	ldr	w25, [x0]
  413d9c:	b.gt	413de0 <__fxstatat@plt+0x11390>
  413da0:	add	x0, x20, #0x10
  413da4:	cmp	x19, x0
  413da8:	b.eq	413e90 <__fxstatat@plt+0x11440>  // b.none
  413dac:	mov	x0, x19
  413db0:	mov	x1, #0x10                  	// #16
  413db4:	bl	415c70 <__fxstatat@plt+0x13220>
  413db8:	mov	x19, x0
  413dbc:	str	x0, [x21, #1336]
  413dc0:	ldr	w0, [x20, #8]
  413dc4:	mov	w21, #0x1                   	// #1
  413dc8:	mov	w1, #0x0                   	// #0
  413dcc:	sub	w2, w21, w0
  413dd0:	add	x0, x19, w0, sxtw #4
  413dd4:	sbfiz	x2, x2, #4, #32
  413dd8:	bl	402680 <memset@plt>
  413ddc:	str	w21, [x20, #8]
  413de0:	ldp	x20, x21, [x19]
  413de4:	add	x6, sp, #0x68
  413de8:	ldp	x7, x0, [sp, #136]
  413dec:	str	x0, [sp]
  413df0:	ldp	w4, w26, [sp, #96]
  413df4:	mov	x3, x24
  413df8:	mov	x2, x23
  413dfc:	mov	x1, x20
  413e00:	orr	w26, w26, #0x1
  413e04:	mov	x0, x21
  413e08:	mov	w5, w26
  413e0c:	bl	411db0 <__fxstatat@plt+0xf360>
  413e10:	cmp	x20, x0
  413e14:	b.hi	413e6c <__fxstatat@plt+0x1141c>  // b.pmore
  413e18:	add	x20, x0, #0x1
  413e1c:	str	x20, [x19]
  413e20:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  413e24:	add	x0, x0, #0x760
  413e28:	cmp	x21, x0
  413e2c:	b.eq	413e38 <__fxstatat@plt+0x113e8>  // b.none
  413e30:	mov	x0, x21
  413e34:	bl	402840 <free@plt>
  413e38:	mov	x0, x20
  413e3c:	bl	415c40 <__fxstatat@plt+0x131f0>
  413e40:	ldp	x7, x1, [sp, #136]
  413e44:	str	x0, [x19, #8]
  413e48:	ldr	w4, [sp, #96]
  413e4c:	mov	x21, x0
  413e50:	str	x1, [sp]
  413e54:	add	x6, sp, #0x68
  413e58:	mov	w5, w26
  413e5c:	mov	x3, x24
  413e60:	mov	x2, x23
  413e64:	mov	x1, x20
  413e68:	bl	411db0 <__fxstatat@plt+0xf360>
  413e6c:	ldp	x29, x30, [sp, #16]
  413e70:	mov	x0, x21
  413e74:	ldp	x19, x20, [sp, #32]
  413e78:	ldp	x23, x24, [sp, #64]
  413e7c:	str	w25, [x22]
  413e80:	ldp	x21, x22, [sp, #48]
  413e84:	ldp	x25, x26, [sp, #80]
  413e88:	add	sp, sp, #0xd0
  413e8c:	ret
  413e90:	mov	x1, #0x10                  	// #16
  413e94:	mov	x0, #0x0                   	// #0
  413e98:	bl	415c70 <__fxstatat@plt+0x13220>
  413e9c:	mov	x19, x0
  413ea0:	str	x0, [x21, #1336]
  413ea4:	ldp	x0, x1, [x20, #16]
  413ea8:	stp	x0, x1, [x19]
  413eac:	b	413dc0 <__fxstatat@plt+0x11370>
  413eb0:	bl	402760 <abort@plt>
  413eb4:	nop
  413eb8:	sub	sp, sp, #0xb0
  413ebc:	ubfx	x6, x2, #5, #3
  413ec0:	add	x5, sp, #0x80
  413ec4:	and	w2, w2, #0x1f
  413ec8:	stp	x29, x30, [sp, #16]
  413ecc:	add	x29, sp, #0x10
  413ed0:	stp	x19, x20, [sp, #32]
  413ed4:	adrp	x20, 434000 <__progname@@GLIBC_2.17+0xa38>
  413ed8:	add	x20, x20, #0x760
  413edc:	stp	x21, x22, [sp, #48]
  413ee0:	mov	x22, x1
  413ee4:	mov	x21, x0
  413ee8:	ldp	x8, x9, [x20, #256]
  413eec:	stp	x8, x9, [sp, #120]
  413ef0:	ldp	x8, x9, [x20, #272]
  413ef4:	stp	x8, x9, [sp, #136]
  413ef8:	ldp	x8, x9, [x20, #288]
  413efc:	stp	x8, x9, [sp, #152]
  413f00:	ldr	x3, [x20, #304]
  413f04:	str	x3, [sp, #168]
  413f08:	stp	x23, x24, [sp, #64]
  413f0c:	adrp	x24, 433000 <_obstack_memory_used@@Base+0x1bf80>
  413f10:	ldr	w4, [x5, x6, lsl #2]
  413f14:	stp	x25, x26, [sp, #80]
  413f18:	add	x23, x24, #0x538
  413f1c:	lsr	w3, w4, w2
  413f20:	mvn	w3, w3
  413f24:	and	w3, w3, #0x1
  413f28:	str	x27, [sp, #96]
  413f2c:	lsl	w3, w3, w2
  413f30:	eor	w3, w3, w4
  413f34:	str	w3, [x5, x6, lsl #2]
  413f38:	bl	4029e0 <__errno_location@plt>
  413f3c:	ldr	w26, [x0]
  413f40:	ldr	w1, [x23, #8]
  413f44:	mov	x25, x0
  413f48:	ldr	x19, [x24, #1336]
  413f4c:	cmp	w1, #0x0
  413f50:	b.gt	413f94 <__fxstatat@plt+0x11544>
  413f54:	add	x0, x23, #0x10
  413f58:	cmp	x19, x0
  413f5c:	b.eq	414040 <__fxstatat@plt+0x115f0>  // b.none
  413f60:	mov	x0, x19
  413f64:	mov	x1, #0x10                  	// #16
  413f68:	bl	415c70 <__fxstatat@plt+0x13220>
  413f6c:	mov	x19, x0
  413f70:	str	x0, [x24, #1336]
  413f74:	ldr	w0, [x23, #8]
  413f78:	mov	w24, #0x1                   	// #1
  413f7c:	mov	w1, #0x0                   	// #0
  413f80:	sub	w2, w24, w0
  413f84:	add	x0, x19, w0, sxtw #4
  413f88:	sbfiz	x2, x2, #4, #32
  413f8c:	bl	402680 <memset@plt>
  413f90:	str	w24, [x23, #8]
  413f94:	ldp	x23, x24, [x19]
  413f98:	add	x6, sp, #0x80
  413f9c:	ldp	x7, x0, [sp, #160]
  413fa0:	str	x0, [sp]
  413fa4:	ldp	w4, w27, [sp, #120]
  413fa8:	mov	x3, x22
  413fac:	mov	x2, x21
  413fb0:	mov	x1, x23
  413fb4:	orr	w27, w27, #0x1
  413fb8:	mov	x0, x24
  413fbc:	mov	w5, w27
  413fc0:	bl	411db0 <__fxstatat@plt+0xf360>
  413fc4:	cmp	x23, x0
  413fc8:	b.hi	414018 <__fxstatat@plt+0x115c8>  // b.pmore
  413fcc:	add	x23, x0, #0x1
  413fd0:	str	x23, [x19]
  413fd4:	cmp	x24, x20
  413fd8:	b.eq	413fe4 <__fxstatat@plt+0x11594>  // b.none
  413fdc:	mov	x0, x24
  413fe0:	bl	402840 <free@plt>
  413fe4:	mov	x0, x23
  413fe8:	bl	415c40 <__fxstatat@plt+0x131f0>
  413fec:	ldp	x7, x1, [sp, #160]
  413ff0:	str	x0, [x19, #8]
  413ff4:	ldr	w4, [sp, #120]
  413ff8:	mov	x24, x0
  413ffc:	str	x1, [sp]
  414000:	add	x6, sp, #0x80
  414004:	mov	w5, w27
  414008:	mov	x3, x22
  41400c:	mov	x2, x21
  414010:	mov	x1, x23
  414014:	bl	411db0 <__fxstatat@plt+0xf360>
  414018:	mov	x0, x24
  41401c:	ldp	x29, x30, [sp, #16]
  414020:	ldp	x19, x20, [sp, #32]
  414024:	ldp	x21, x22, [sp, #48]
  414028:	ldp	x23, x24, [sp, #64]
  41402c:	ldr	x27, [sp, #96]
  414030:	str	w26, [x25]
  414034:	ldp	x25, x26, [sp, #80]
  414038:	add	sp, sp, #0xb0
  41403c:	ret
  414040:	mov	x1, #0x10                  	// #16
  414044:	mov	x0, #0x0                   	// #0
  414048:	bl	415c70 <__fxstatat@plt+0x13220>
  41404c:	mov	x19, x0
  414050:	str	x0, [x24, #1336]
  414054:	ldp	x0, x1, [x23, #16]
  414058:	stp	x0, x1, [x19]
  41405c:	b	413f74 <__fxstatat@plt+0x11524>
  414060:	sub	sp, sp, #0xa0
  414064:	ubfx	x5, x1, #5, #3
  414068:	add	x4, sp, #0x70
  41406c:	and	w1, w1, #0x1f
  414070:	stp	x29, x30, [sp, #16]
  414074:	add	x29, sp, #0x10
  414078:	stp	x21, x22, [sp, #48]
  41407c:	adrp	x21, 434000 <__progname@@GLIBC_2.17+0xa38>
  414080:	add	x21, x21, #0x760
  414084:	mov	x22, x0
  414088:	stp	x19, x20, [sp, #32]
  41408c:	ldp	x6, x7, [x21, #256]
  414090:	stp	x6, x7, [sp, #104]
  414094:	ldp	x6, x7, [x21, #272]
  414098:	stp	x6, x7, [sp, #120]
  41409c:	ldp	x6, x7, [x21, #288]
  4140a0:	stp	x6, x7, [sp, #136]
  4140a4:	ldr	x2, [x21, #304]
  4140a8:	str	x2, [sp, #152]
  4140ac:	stp	x23, x24, [sp, #64]
  4140b0:	adrp	x23, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4140b4:	ldr	w0, [x4, x5, lsl #2]
  4140b8:	stp	x25, x26, [sp, #80]
  4140bc:	add	x20, x23, #0x538
  4140c0:	lsr	w2, w0, w1
  4140c4:	mvn	w2, w2
  4140c8:	and	w2, w2, #0x1
  4140cc:	lsl	w2, w2, w1
  4140d0:	eor	w2, w2, w0
  4140d4:	str	w2, [x4, x5, lsl #2]
  4140d8:	bl	4029e0 <__errno_location@plt>
  4140dc:	ldr	w25, [x0]
  4140e0:	ldr	w1, [x20, #8]
  4140e4:	mov	x24, x0
  4140e8:	ldr	x19, [x23, #1336]
  4140ec:	cmp	w1, #0x0
  4140f0:	b.gt	414134 <__fxstatat@plt+0x116e4>
  4140f4:	add	x0, x20, #0x10
  4140f8:	cmp	x19, x0
  4140fc:	b.eq	4141dc <__fxstatat@plt+0x1178c>  // b.none
  414100:	mov	x0, x19
  414104:	mov	x1, #0x10                  	// #16
  414108:	bl	415c70 <__fxstatat@plt+0x13220>
  41410c:	mov	x19, x0
  414110:	str	x0, [x23, #1336]
  414114:	ldr	w0, [x20, #8]
  414118:	mov	w23, #0x1                   	// #1
  41411c:	mov	w1, #0x0                   	// #0
  414120:	sub	w2, w23, w0
  414124:	add	x0, x19, w0, sxtw #4
  414128:	sbfiz	x2, x2, #4, #32
  41412c:	bl	402680 <memset@plt>
  414130:	str	w23, [x20, #8]
  414134:	ldp	x20, x23, [x19]
  414138:	add	x6, sp, #0x70
  41413c:	ldp	x7, x0, [sp, #144]
  414140:	str	x0, [sp]
  414144:	ldp	w4, w26, [sp, #104]
  414148:	mov	x2, x22
  41414c:	mov	x1, x20
  414150:	mov	x0, x23
  414154:	orr	w26, w26, #0x1
  414158:	mov	x3, #0xffffffffffffffff    	// #-1
  41415c:	mov	w5, w26
  414160:	bl	411db0 <__fxstatat@plt+0xf360>
  414164:	cmp	x20, x0
  414168:	b.hi	4141b8 <__fxstatat@plt+0x11768>  // b.pmore
  41416c:	add	x20, x0, #0x1
  414170:	str	x20, [x19]
  414174:	cmp	x23, x21
  414178:	b.eq	414184 <__fxstatat@plt+0x11734>  // b.none
  41417c:	mov	x0, x23
  414180:	bl	402840 <free@plt>
  414184:	mov	x0, x20
  414188:	bl	415c40 <__fxstatat@plt+0x131f0>
  41418c:	ldp	x7, x1, [sp, #144]
  414190:	str	x0, [x19, #8]
  414194:	ldr	w4, [sp, #104]
  414198:	mov	x23, x0
  41419c:	str	x1, [sp]
  4141a0:	add	x6, sp, #0x70
  4141a4:	mov	w5, w26
  4141a8:	mov	x2, x22
  4141ac:	mov	x1, x20
  4141b0:	mov	x3, #0xffffffffffffffff    	// #-1
  4141b4:	bl	411db0 <__fxstatat@plt+0xf360>
  4141b8:	ldp	x29, x30, [sp, #16]
  4141bc:	mov	x0, x23
  4141c0:	ldp	x19, x20, [sp, #32]
  4141c4:	ldp	x21, x22, [sp, #48]
  4141c8:	str	w25, [x24]
  4141cc:	ldp	x23, x24, [sp, #64]
  4141d0:	ldp	x25, x26, [sp, #80]
  4141d4:	add	sp, sp, #0xa0
  4141d8:	ret
  4141dc:	mov	x1, #0x10                  	// #16
  4141e0:	mov	x0, #0x0                   	// #0
  4141e4:	bl	415c70 <__fxstatat@plt+0x13220>
  4141e8:	mov	x19, x0
  4141ec:	str	x0, [x23, #1336]
  4141f0:	ldp	x0, x1, [x20, #16]
  4141f4:	stp	x0, x1, [x19]
  4141f8:	b	414114 <__fxstatat@plt+0x116c4>
  4141fc:	nop
  414200:	sub	sp, sp, #0xa0
  414204:	stp	x29, x30, [sp, #16]
  414208:	add	x29, sp, #0x10
  41420c:	stp	x23, x24, [sp, #64]
  414210:	adrp	x23, 434000 <__progname@@GLIBC_2.17+0xa38>
  414214:	add	x23, x23, #0x760
  414218:	stp	x21, x22, [sp, #48]
  41421c:	mov	x22, x0
  414220:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  414224:	ldp	x4, x5, [x23, #256]
  414228:	stp	x4, x5, [sp, #104]
  41422c:	ldr	w0, [sp, #116]
  414230:	ldp	x4, x5, [x23, #272]
  414234:	stp	x4, x5, [sp, #120]
  414238:	mvn	w1, w0, lsr #26
  41423c:	ldp	x4, x5, [x23, #288]
  414240:	ubfiz	w1, w1, #26, #1
  414244:	ldr	x2, [x23, #304]
  414248:	eor	w1, w1, w0
  41424c:	stp	x19, x20, [sp, #32]
  414250:	add	x20, x21, #0x538
  414254:	stp	x25, x26, [sp, #80]
  414258:	str	w1, [sp, #116]
  41425c:	stp	x4, x5, [sp, #136]
  414260:	str	x2, [sp, #152]
  414264:	bl	4029e0 <__errno_location@plt>
  414268:	ldr	w1, [x20, #8]
  41426c:	mov	x24, x0
  414270:	ldr	x19, [x21, #1336]
  414274:	cmp	w1, #0x0
  414278:	ldr	w25, [x0]
  41427c:	b.gt	4142c0 <__fxstatat@plt+0x11870>
  414280:	add	x0, x20, #0x10
  414284:	cmp	x19, x0
  414288:	b.eq	414368 <__fxstatat@plt+0x11918>  // b.none
  41428c:	mov	x0, x19
  414290:	mov	x1, #0x10                  	// #16
  414294:	bl	415c70 <__fxstatat@plt+0x13220>
  414298:	mov	x19, x0
  41429c:	str	x0, [x21, #1336]
  4142a0:	ldr	w0, [x20, #8]
  4142a4:	mov	w21, #0x1                   	// #1
  4142a8:	mov	w1, #0x0                   	// #0
  4142ac:	sub	w2, w21, w0
  4142b0:	add	x0, x19, w0, sxtw #4
  4142b4:	sbfiz	x2, x2, #4, #32
  4142b8:	bl	402680 <memset@plt>
  4142bc:	str	w21, [x20, #8]
  4142c0:	ldp	x20, x21, [x19]
  4142c4:	add	x6, sp, #0x70
  4142c8:	ldp	x7, x0, [sp, #144]
  4142cc:	str	x0, [sp]
  4142d0:	ldp	w4, w26, [sp, #104]
  4142d4:	mov	x2, x22
  4142d8:	mov	x1, x20
  4142dc:	mov	x0, x21
  4142e0:	orr	w26, w26, #0x1
  4142e4:	mov	x3, #0xffffffffffffffff    	// #-1
  4142e8:	mov	w5, w26
  4142ec:	bl	411db0 <__fxstatat@plt+0xf360>
  4142f0:	cmp	x20, x0
  4142f4:	b.hi	414344 <__fxstatat@plt+0x118f4>  // b.pmore
  4142f8:	add	x20, x0, #0x1
  4142fc:	str	x20, [x19]
  414300:	cmp	x21, x23
  414304:	b.eq	414310 <__fxstatat@plt+0x118c0>  // b.none
  414308:	mov	x0, x21
  41430c:	bl	402840 <free@plt>
  414310:	mov	x0, x20
  414314:	bl	415c40 <__fxstatat@plt+0x131f0>
  414318:	ldp	x7, x1, [sp, #144]
  41431c:	str	x0, [x19, #8]
  414320:	ldr	w4, [sp, #104]
  414324:	mov	x21, x0
  414328:	str	x1, [sp]
  41432c:	add	x6, sp, #0x70
  414330:	mov	w5, w26
  414334:	mov	x2, x22
  414338:	mov	x1, x20
  41433c:	mov	x3, #0xffffffffffffffff    	// #-1
  414340:	bl	411db0 <__fxstatat@plt+0xf360>
  414344:	mov	x0, x21
  414348:	ldp	x29, x30, [sp, #16]
  41434c:	ldp	x19, x20, [sp, #32]
  414350:	ldp	x21, x22, [sp, #48]
  414354:	str	w25, [x24]
  414358:	ldp	x23, x24, [sp, #64]
  41435c:	ldp	x25, x26, [sp, #80]
  414360:	add	sp, sp, #0xa0
  414364:	ret
  414368:	mov	x1, #0x10                  	// #16
  41436c:	mov	x0, #0x0                   	// #0
  414370:	bl	415c70 <__fxstatat@plt+0x13220>
  414374:	mov	x19, x0
  414378:	str	x0, [x21, #1336]
  41437c:	ldp	x0, x1, [x20, #16]
  414380:	stp	x0, x1, [x19]
  414384:	b	4142a0 <__fxstatat@plt+0x11850>
  414388:	sub	sp, sp, #0xb0
  41438c:	stp	x29, x30, [sp, #16]
  414390:	add	x29, sp, #0x10
  414394:	stp	x21, x22, [sp, #48]
  414398:	adrp	x21, 434000 <__progname@@GLIBC_2.17+0xa38>
  41439c:	add	x21, x21, #0x760
  4143a0:	mov	x22, x0
  4143a4:	stp	x19, x20, [sp, #32]
  4143a8:	ldp	x4, x5, [x21, #256]
  4143ac:	stp	x4, x5, [sp, #120]
  4143b0:	ldr	w4, [sp, #132]
  4143b4:	ldp	x6, x7, [x21, #272]
  4143b8:	stp	x6, x7, [sp, #136]
  4143bc:	mvn	w2, w4, lsr #26
  4143c0:	ldp	x6, x7, [x21, #288]
  4143c4:	ubfiz	w2, w2, #26, #1
  4143c8:	ldr	x0, [x21, #304]
  4143cc:	eor	w2, w2, w4
  4143d0:	stp	x23, x24, [sp, #64]
  4143d4:	adrp	x24, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4143d8:	add	x20, x24, #0x538
  4143dc:	mov	x23, x1
  4143e0:	stp	x25, x26, [sp, #80]
  4143e4:	str	x27, [sp, #96]
  4143e8:	str	w2, [sp, #132]
  4143ec:	stp	x6, x7, [sp, #152]
  4143f0:	str	x0, [sp, #168]
  4143f4:	bl	4029e0 <__errno_location@plt>
  4143f8:	ldr	w1, [x20, #8]
  4143fc:	mov	x25, x0
  414400:	ldr	x19, [x24, #1336]
  414404:	cmp	w1, #0x0
  414408:	ldr	w26, [x0]
  41440c:	b.gt	414450 <__fxstatat@plt+0x11a00>
  414410:	add	x0, x20, #0x10
  414414:	cmp	x19, x0
  414418:	b.eq	4144fc <__fxstatat@plt+0x11aac>  // b.none
  41441c:	mov	x0, x19
  414420:	mov	x1, #0x10                  	// #16
  414424:	bl	415c70 <__fxstatat@plt+0x13220>
  414428:	mov	x19, x0
  41442c:	str	x0, [x24, #1336]
  414430:	ldr	w0, [x20, #8]
  414434:	mov	w24, #0x1                   	// #1
  414438:	mov	w1, #0x0                   	// #0
  41443c:	sub	w2, w24, w0
  414440:	add	x0, x19, w0, sxtw #4
  414444:	sbfiz	x2, x2, #4, #32
  414448:	bl	402680 <memset@plt>
  41444c:	str	w24, [x20, #8]
  414450:	ldp	x20, x24, [x19]
  414454:	add	x6, sp, #0x80
  414458:	ldp	x7, x0, [sp, #160]
  41445c:	str	x0, [sp]
  414460:	ldp	w4, w27, [sp, #120]
  414464:	mov	x3, x23
  414468:	mov	x2, x22
  41446c:	mov	x1, x20
  414470:	orr	w27, w27, #0x1
  414474:	mov	x0, x24
  414478:	mov	w5, w27
  41447c:	bl	411db0 <__fxstatat@plt+0xf360>
  414480:	cmp	x20, x0
  414484:	b.hi	4144d4 <__fxstatat@plt+0x11a84>  // b.pmore
  414488:	add	x20, x0, #0x1
  41448c:	str	x20, [x19]
  414490:	cmp	x24, x21
  414494:	b.eq	4144a0 <__fxstatat@plt+0x11a50>  // b.none
  414498:	mov	x0, x24
  41449c:	bl	402840 <free@plt>
  4144a0:	mov	x0, x20
  4144a4:	bl	415c40 <__fxstatat@plt+0x131f0>
  4144a8:	ldp	x7, x1, [sp, #160]
  4144ac:	str	x0, [x19, #8]
  4144b0:	ldr	w4, [sp, #120]
  4144b4:	mov	x24, x0
  4144b8:	str	x1, [sp]
  4144bc:	add	x6, sp, #0x80
  4144c0:	mov	w5, w27
  4144c4:	mov	x3, x23
  4144c8:	mov	x2, x22
  4144cc:	mov	x1, x20
  4144d0:	bl	411db0 <__fxstatat@plt+0xf360>
  4144d4:	mov	x0, x24
  4144d8:	ldp	x29, x30, [sp, #16]
  4144dc:	ldp	x19, x20, [sp, #32]
  4144e0:	ldp	x21, x22, [sp, #48]
  4144e4:	ldp	x23, x24, [sp, #64]
  4144e8:	ldr	x27, [sp, #96]
  4144ec:	str	w26, [x25]
  4144f0:	ldp	x25, x26, [sp, #80]
  4144f4:	add	sp, sp, #0xb0
  4144f8:	ret
  4144fc:	mov	x1, #0x10                  	// #16
  414500:	mov	x0, #0x0                   	// #0
  414504:	bl	415c70 <__fxstatat@plt+0x13220>
  414508:	mov	x19, x0
  41450c:	str	x0, [x24, #1336]
  414510:	ldp	x0, x1, [x20, #16]
  414514:	stp	x0, x1, [x19]
  414518:	b	414430 <__fxstatat@plt+0x119e0>
  41451c:	nop
  414520:	stp	x29, x30, [sp, #-128]!
  414524:	cmp	w1, #0xa
  414528:	mov	x29, sp
  41452c:	stp	xzr, xzr, [sp, #16]
  414530:	stp	xzr, xzr, [sp, #32]
  414534:	stp	xzr, xzr, [sp, #48]
  414538:	str	xzr, [sp, #64]
  41453c:	b.eq	414568 <__fxstatat@plt+0x11b18>  // b.none
  414540:	mov	w4, w1
  414544:	mov	w5, #0x4000000             	// #67108864
  414548:	mov	x1, x2
  41454c:	add	x3, sp, #0x10
  414550:	mov	x2, #0xffffffffffffffff    	// #-1
  414554:	str	w4, [sp, #16]
  414558:	str	w5, [sp, #28]
  41455c:	bl	412f50 <__fxstatat@plt+0x10500>
  414560:	ldp	x29, x30, [sp], #128
  414564:	ret
  414568:	bl	402760 <abort@plt>
  41456c:	nop
  414570:	adrp	x4, 434000 <__progname@@GLIBC_2.17+0xa38>
  414574:	add	x4, x4, #0x760
  414578:	stp	x29, x30, [sp, #-80]!
  41457c:	mov	x5, x1
  414580:	mov	w1, #0xa                   	// #10
  414584:	mov	x29, sp
  414588:	ldp	x8, x9, [x4, #256]
  41458c:	stp	x8, x9, [sp, #24]
  414590:	cmp	x5, #0x0
  414594:	str	w1, [sp, #24]
  414598:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41459c:	ldp	x10, x11, [x4, #272]
  4145a0:	stp	x10, x11, [sp, #40]
  4145a4:	ldp	x8, x9, [x4, #288]
  4145a8:	stp	x8, x9, [sp, #56]
  4145ac:	ldr	x1, [x4, #304]
  4145b0:	str	x1, [sp, #72]
  4145b4:	b.eq	4145d8 <__fxstatat@plt+0x11b88>  // b.none
  4145b8:	mov	x4, x2
  4145bc:	mov	x1, x3
  4145c0:	mov	x2, #0xffffffffffffffff    	// #-1
  4145c4:	add	x3, sp, #0x18
  4145c8:	stp	x5, x4, [sp, #64]
  4145cc:	bl	412f50 <__fxstatat@plt+0x10500>
  4145d0:	ldp	x29, x30, [sp], #80
  4145d4:	ret
  4145d8:	bl	402760 <abort@plt>
  4145dc:	nop
  4145e0:	adrp	x5, 434000 <__progname@@GLIBC_2.17+0xa38>
  4145e4:	add	x5, x5, #0x760
  4145e8:	stp	x29, x30, [sp, #-80]!
  4145ec:	mov	x6, x1
  4145f0:	mov	w1, #0xa                   	// #10
  4145f4:	mov	x29, sp
  4145f8:	ldp	x8, x9, [x5, #256]
  4145fc:	stp	x8, x9, [sp, #24]
  414600:	cmp	x6, #0x0
  414604:	str	w1, [sp, #24]
  414608:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41460c:	ldp	x10, x11, [x5, #272]
  414610:	stp	x10, x11, [sp, #40]
  414614:	ldp	x8, x9, [x5, #288]
  414618:	stp	x8, x9, [sp, #56]
  41461c:	ldr	x1, [x5, #304]
  414620:	str	x1, [sp, #72]
  414624:	b.eq	414648 <__fxstatat@plt+0x11bf8>  // b.none
  414628:	mov	x5, x2
  41462c:	mov	x1, x3
  414630:	mov	x2, x4
  414634:	add	x3, sp, #0x18
  414638:	stp	x6, x5, [sp, #64]
  41463c:	bl	412f50 <__fxstatat@plt+0x10500>
  414640:	ldp	x29, x30, [sp], #80
  414644:	ret
  414648:	bl	402760 <abort@plt>
  41464c:	nop
  414650:	sub	sp, sp, #0xb0
  414654:	cmp	x0, #0x0
  414658:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  41465c:	stp	x29, x30, [sp, #16]
  414660:	add	x29, sp, #0x10
  414664:	stp	x21, x22, [sp, #48]
  414668:	adrp	x22, 434000 <__progname@@GLIBC_2.17+0xa38>
  41466c:	add	x22, x22, #0x760
  414670:	mov	x21, x0
  414674:	stp	x19, x20, [sp, #32]
  414678:	mov	w19, #0xa                   	// #10
  41467c:	ldp	x4, x5, [x22, #256]
  414680:	stp	x4, x5, [sp, #120]
  414684:	ldp	x4, x5, [x22, #272]
  414688:	stp	x23, x24, [sp, #64]
  41468c:	ldp	x6, x7, [x22, #288]
  414690:	stp	x25, x26, [sp, #80]
  414694:	ldr	x0, [x22, #304]
  414698:	str	x27, [sp, #96]
  41469c:	str	w19, [sp, #120]
  4146a0:	stp	x4, x5, [sp, #136]
  4146a4:	stp	x6, x7, [sp, #152]
  4146a8:	str	x0, [sp, #168]
  4146ac:	b.eq	4147fc <__fxstatat@plt+0x11dac>  // b.none
  4146b0:	adrp	x27, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4146b4:	add	x26, x27, #0x538
  4146b8:	mov	x20, x1
  4146bc:	mov	x24, x2
  4146c0:	stp	x21, x1, [sp, #160]
  4146c4:	bl	4029e0 <__errno_location@plt>
  4146c8:	ldr	w1, [x26, #8]
  4146cc:	mov	w4, w19
  4146d0:	ldr	w25, [x0]
  4146d4:	ldr	x19, [x27, #1336]
  4146d8:	mov	x23, x0
  4146dc:	cmp	w1, #0x0
  4146e0:	b.gt	414730 <__fxstatat@plt+0x11ce0>
  4146e4:	add	x0, x26, #0x10
  4146e8:	cmp	x19, x0
  4146ec:	b.eq	4147dc <__fxstatat@plt+0x11d8c>  // b.none
  4146f0:	mov	x0, x19
  4146f4:	mov	x1, #0x10                  	// #16
  4146f8:	bl	415c70 <__fxstatat@plt+0x13220>
  4146fc:	mov	x19, x0
  414700:	str	x0, [x27, #1336]
  414704:	ldr	w0, [x26, #8]
  414708:	mov	w20, #0x1                   	// #1
  41470c:	mov	w1, #0x0                   	// #0
  414710:	sub	w2, w20, w0
  414714:	add	x0, x19, w0, sxtw #4
  414718:	sbfiz	x2, x2, #4, #32
  41471c:	bl	402680 <memset@plt>
  414720:	ldr	w4, [sp, #120]
  414724:	str	w20, [x26, #8]
  414728:	ldr	x21, [sp, #160]
  41472c:	ldr	x20, [sp, #168]
  414730:	mov	x7, x21
  414734:	ldp	x27, x21, [x19]
  414738:	str	x20, [sp]
  41473c:	ldr	w26, [sp, #124]
  414740:	add	x6, sp, #0x80
  414744:	mov	x2, x24
  414748:	mov	x3, #0xffffffffffffffff    	// #-1
  41474c:	orr	w26, w26, #0x1
  414750:	mov	w5, w26
  414754:	mov	x1, x27
  414758:	mov	x0, x21
  41475c:	bl	411db0 <__fxstatat@plt+0xf360>
  414760:	cmp	x27, x0
  414764:	b.hi	4147b4 <__fxstatat@plt+0x11d64>  // b.pmore
  414768:	add	x20, x0, #0x1
  41476c:	str	x20, [x19]
  414770:	cmp	x21, x22
  414774:	b.eq	414780 <__fxstatat@plt+0x11d30>  // b.none
  414778:	mov	x0, x21
  41477c:	bl	402840 <free@plt>
  414780:	mov	x0, x20
  414784:	bl	415c40 <__fxstatat@plt+0x131f0>
  414788:	ldp	x7, x1, [sp, #160]
  41478c:	str	x0, [x19, #8]
  414790:	ldr	w4, [sp, #120]
  414794:	mov	x21, x0
  414798:	str	x1, [sp]
  41479c:	add	x6, sp, #0x80
  4147a0:	mov	w5, w26
  4147a4:	mov	x2, x24
  4147a8:	mov	x1, x20
  4147ac:	mov	x3, #0xffffffffffffffff    	// #-1
  4147b0:	bl	411db0 <__fxstatat@plt+0xf360>
  4147b4:	mov	x0, x21
  4147b8:	ldp	x29, x30, [sp, #16]
  4147bc:	ldp	x19, x20, [sp, #32]
  4147c0:	ldp	x21, x22, [sp, #48]
  4147c4:	ldr	x27, [sp, #96]
  4147c8:	str	w25, [x23]
  4147cc:	ldp	x23, x24, [sp, #64]
  4147d0:	ldp	x25, x26, [sp, #80]
  4147d4:	add	sp, sp, #0xb0
  4147d8:	ret
  4147dc:	mov	x1, #0x10                  	// #16
  4147e0:	mov	x0, #0x0                   	// #0
  4147e4:	bl	415c70 <__fxstatat@plt+0x13220>
  4147e8:	mov	x19, x0
  4147ec:	str	x0, [x27, #1336]
  4147f0:	ldp	x0, x1, [x26, #16]
  4147f4:	stp	x0, x1, [x19]
  4147f8:	b	414704 <__fxstatat@plt+0x11cb4>
  4147fc:	bl	402760 <abort@plt>
  414800:	sub	sp, sp, #0xb0
  414804:	cmp	x0, #0x0
  414808:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  41480c:	stp	x29, x30, [sp, #16]
  414810:	add	x29, sp, #0x10
  414814:	stp	x21, x22, [sp, #48]
  414818:	adrp	x22, 434000 <__progname@@GLIBC_2.17+0xa38>
  41481c:	add	x22, x22, #0x760
  414820:	mov	x21, x0
  414824:	stp	x19, x20, [sp, #32]
  414828:	mov	w19, #0xa                   	// #10
  41482c:	ldp	x6, x7, [x22, #256]
  414830:	stp	x6, x7, [sp, #120]
  414834:	add	x4, x22, #0x100
  414838:	ldp	x6, x7, [x4, #16]
  41483c:	stp	x23, x24, [sp, #64]
  414840:	ldp	x8, x9, [x4, #32]
  414844:	stp	x25, x26, [sp, #80]
  414848:	ldr	x0, [x4, #48]
  41484c:	stp	x27, x28, [sp, #96]
  414850:	str	w19, [sp, #120]
  414854:	stp	x6, x7, [sp, #136]
  414858:	stp	x8, x9, [sp, #152]
  41485c:	str	x0, [sp, #168]
  414860:	b.eq	4149b4 <__fxstatat@plt+0x11f64>  // b.none
  414864:	adrp	x28, 433000 <_obstack_memory_used@@Base+0x1bf80>
  414868:	add	x27, x28, #0x538
  41486c:	mov	x20, x1
  414870:	mov	x24, x2
  414874:	mov	x25, x3
  414878:	stp	x21, x1, [sp, #160]
  41487c:	bl	4029e0 <__errno_location@plt>
  414880:	ldr	w1, [x27, #8]
  414884:	mov	w4, w19
  414888:	ldr	w26, [x0]
  41488c:	mov	x23, x0
  414890:	ldr	x19, [x28, #1336]
  414894:	cmp	w1, #0x0
  414898:	b.gt	4148e8 <__fxstatat@plt+0x11e98>
  41489c:	add	x0, x27, #0x10
  4148a0:	cmp	x19, x0
  4148a4:	b.eq	414994 <__fxstatat@plt+0x11f44>  // b.none
  4148a8:	mov	x0, x19
  4148ac:	mov	x1, #0x10                  	// #16
  4148b0:	bl	415c70 <__fxstatat@plt+0x13220>
  4148b4:	mov	x19, x0
  4148b8:	str	x0, [x28, #1336]
  4148bc:	ldr	w0, [x27, #8]
  4148c0:	mov	w20, #0x1                   	// #1
  4148c4:	mov	w1, #0x0                   	// #0
  4148c8:	sub	w2, w20, w0
  4148cc:	add	x0, x19, w0, sxtw #4
  4148d0:	sbfiz	x2, x2, #4, #32
  4148d4:	bl	402680 <memset@plt>
  4148d8:	ldr	w4, [sp, #120]
  4148dc:	str	w20, [x27, #8]
  4148e0:	ldr	x21, [sp, #160]
  4148e4:	ldr	x20, [sp, #168]
  4148e8:	mov	x7, x21
  4148ec:	ldp	x28, x21, [x19]
  4148f0:	str	x20, [sp]
  4148f4:	ldr	w27, [sp, #124]
  4148f8:	add	x6, sp, #0x80
  4148fc:	mov	x3, x25
  414900:	mov	x2, x24
  414904:	orr	w27, w27, #0x1
  414908:	mov	w5, w27
  41490c:	mov	x1, x28
  414910:	mov	x0, x21
  414914:	bl	411db0 <__fxstatat@plt+0xf360>
  414918:	cmp	x28, x0
  41491c:	b.hi	41496c <__fxstatat@plt+0x11f1c>  // b.pmore
  414920:	add	x20, x0, #0x1
  414924:	str	x20, [x19]
  414928:	cmp	x21, x22
  41492c:	b.eq	414938 <__fxstatat@plt+0x11ee8>  // b.none
  414930:	mov	x0, x21
  414934:	bl	402840 <free@plt>
  414938:	mov	x0, x20
  41493c:	bl	415c40 <__fxstatat@plt+0x131f0>
  414940:	ldp	x7, x1, [sp, #160]
  414944:	str	x0, [x19, #8]
  414948:	ldr	w4, [sp, #120]
  41494c:	mov	x21, x0
  414950:	str	x1, [sp]
  414954:	add	x6, sp, #0x80
  414958:	mov	w5, w27
  41495c:	mov	x3, x25
  414960:	mov	x2, x24
  414964:	mov	x1, x20
  414968:	bl	411db0 <__fxstatat@plt+0xf360>
  41496c:	mov	x0, x21
  414970:	ldp	x29, x30, [sp, #16]
  414974:	ldp	x19, x20, [sp, #32]
  414978:	ldp	x21, x22, [sp, #48]
  41497c:	ldp	x27, x28, [sp, #96]
  414980:	str	w26, [x23]
  414984:	ldp	x23, x24, [sp, #64]
  414988:	ldp	x25, x26, [sp, #80]
  41498c:	add	sp, sp, #0xb0
  414990:	ret
  414994:	mov	x1, #0x10                  	// #16
  414998:	mov	x0, #0x0                   	// #0
  41499c:	bl	415c70 <__fxstatat@plt+0x13220>
  4149a0:	mov	x19, x0
  4149a4:	str	x0, [x28, #1336]
  4149a8:	ldp	x0, x1, [x27, #16]
  4149ac:	stp	x0, x1, [x19]
  4149b0:	b	4148bc <__fxstatat@plt+0x11e6c>
  4149b4:	bl	402760 <abort@plt>
  4149b8:	sub	sp, sp, #0x80
  4149bc:	stp	x29, x30, [sp, #16]
  4149c0:	add	x29, sp, #0x10
  4149c4:	stp	x19, x20, [sp, #32]
  4149c8:	mov	w19, w0
  4149cc:	stp	x21, x22, [sp, #48]
  4149d0:	stp	x23, x24, [sp, #64]
  4149d4:	mov	x23, x1
  4149d8:	mov	x24, x2
  4149dc:	stp	x25, x26, [sp, #80]
  4149e0:	adrp	x26, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4149e4:	stp	x27, x28, [sp, #96]
  4149e8:	bl	4029e0 <__errno_location@plt>
  4149ec:	mov	x22, x0
  4149f0:	ldr	w0, [x0]
  4149f4:	str	w0, [sp, #124]
  4149f8:	ldr	x21, [x26, #1336]
  4149fc:	tbnz	w19, #31, 414b40 <__fxstatat@plt+0x120f0>
  414a00:	add	x20, x26, #0x538
  414a04:	ldr	w0, [x20, #8]
  414a08:	cmp	w19, w0
  414a0c:	b.lt	414a5c <__fxstatat@plt+0x1200c>  // b.tstop
  414a10:	mov	w0, #0x7fffffff            	// #2147483647
  414a14:	cmp	w19, w0
  414a18:	b.eq	414b3c <__fxstatat@plt+0x120ec>  // b.none
  414a1c:	add	w27, w19, #0x1
  414a20:	add	x0, x20, #0x10
  414a24:	cmp	x21, x0
  414a28:	sbfiz	x1, x27, #4, #32
  414a2c:	b.eq	414b20 <__fxstatat@plt+0x120d0>  // b.none
  414a30:	mov	x0, x21
  414a34:	bl	415c70 <__fxstatat@plt+0x13220>
  414a38:	mov	x21, x0
  414a3c:	str	x0, [x26, #1336]
  414a40:	ldr	w0, [x20, #8]
  414a44:	mov	w1, #0x0                   	// #0
  414a48:	sub	w2, w27, w0
  414a4c:	add	x0, x21, w0, sxtw #4
  414a50:	sbfiz	x2, x2, #4, #32
  414a54:	bl	402680 <memset@plt>
  414a58:	str	w27, [x20, #8]
  414a5c:	sbfiz	x19, x19, #4, #32
  414a60:	add	x6, x20, #0x28
  414a64:	add	x26, x21, x19
  414a68:	mov	x3, x24
  414a6c:	ldp	x7, x0, [x20, #72]
  414a70:	mov	x2, x23
  414a74:	ldp	w4, w5, [x20, #32]
  414a78:	ldr	x27, [x21, x19]
  414a7c:	orr	w25, w5, #0x1
  414a80:	ldr	x28, [x26, #8]
  414a84:	str	x0, [sp]
  414a88:	mov	x1, x27
  414a8c:	mov	w5, w25
  414a90:	mov	x0, x28
  414a94:	bl	411db0 <__fxstatat@plt+0xf360>
  414a98:	cmp	x27, x0
  414a9c:	b.hi	414af4 <__fxstatat@plt+0x120a4>  // b.pmore
  414aa0:	add	x27, x0, #0x1
  414aa4:	str	x27, [x21, x19]
  414aa8:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  414aac:	add	x0, x0, #0x760
  414ab0:	cmp	x28, x0
  414ab4:	b.eq	414ac0 <__fxstatat@plt+0x12070>  // b.none
  414ab8:	mov	x0, x28
  414abc:	bl	402840 <free@plt>
  414ac0:	mov	x0, x27
  414ac4:	bl	415c40 <__fxstatat@plt+0x131f0>
  414ac8:	ldp	x7, x1, [x20, #72]
  414acc:	str	x0, [x26, #8]
  414ad0:	ldr	w4, [x20, #32]
  414ad4:	mov	x28, x0
  414ad8:	str	x1, [sp]
  414adc:	mov	w5, w25
  414ae0:	mov	x3, x24
  414ae4:	mov	x2, x23
  414ae8:	add	x6, x20, #0x28
  414aec:	mov	x1, x27
  414af0:	bl	411db0 <__fxstatat@plt+0xf360>
  414af4:	ldr	w0, [sp, #124]
  414af8:	ldp	x29, x30, [sp, #16]
  414afc:	ldp	x19, x20, [sp, #32]
  414b00:	ldp	x23, x24, [sp, #64]
  414b04:	ldp	x25, x26, [sp, #80]
  414b08:	str	w0, [x22]
  414b0c:	mov	x0, x28
  414b10:	ldp	x21, x22, [sp, #48]
  414b14:	ldp	x27, x28, [sp, #96]
  414b18:	add	sp, sp, #0x80
  414b1c:	ret
  414b20:	mov	x0, #0x0                   	// #0
  414b24:	bl	415c70 <__fxstatat@plt+0x13220>
  414b28:	mov	x21, x0
  414b2c:	str	x0, [x26, #1336]
  414b30:	ldp	x0, x1, [x20, #16]
  414b34:	stp	x0, x1, [x21]
  414b38:	b	414a40 <__fxstatat@plt+0x11ff0>
  414b3c:	bl	415e08 <__fxstatat@plt+0x133b8>
  414b40:	bl	402760 <abort@plt>
  414b44:	nop
  414b48:	sub	sp, sp, #0x70
  414b4c:	stp	x29, x30, [sp, #16]
  414b50:	add	x29, sp, #0x10
  414b54:	stp	x19, x20, [sp, #32]
  414b58:	stp	x21, x22, [sp, #48]
  414b5c:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  414b60:	add	x19, x21, #0x538
  414b64:	stp	x23, x24, [sp, #64]
  414b68:	mov	x24, x0
  414b6c:	stp	x25, x26, [sp, #80]
  414b70:	mov	x25, x1
  414b74:	str	x27, [sp, #96]
  414b78:	bl	4029e0 <__errno_location@plt>
  414b7c:	mov	x23, x0
  414b80:	ldr	w0, [x19, #8]
  414b84:	ldr	x20, [x21, #1336]
  414b88:	cmp	w0, #0x0
  414b8c:	ldr	w26, [x23]
  414b90:	b.gt	414bd4 <__fxstatat@plt+0x12184>
  414b94:	add	x0, x19, #0x10
  414b98:	cmp	x20, x0
  414b9c:	b.eq	414c88 <__fxstatat@plt+0x12238>  // b.none
  414ba0:	mov	x0, x20
  414ba4:	mov	x1, #0x10                  	// #16
  414ba8:	bl	415c70 <__fxstatat@plt+0x13220>
  414bac:	mov	x20, x0
  414bb0:	str	x0, [x21, #1336]
  414bb4:	ldr	w0, [x19, #8]
  414bb8:	mov	w21, #0x1                   	// #1
  414bbc:	mov	w1, #0x0                   	// #0
  414bc0:	sub	w2, w21, w0
  414bc4:	add	x0, x20, w0, sxtw #4
  414bc8:	sbfiz	x2, x2, #4, #32
  414bcc:	bl	402680 <memset@plt>
  414bd0:	str	w21, [x19, #8]
  414bd4:	ldp	x21, x22, [x20]
  414bd8:	add	x6, x19, #0x28
  414bdc:	ldp	x7, x0, [x19, #72]
  414be0:	str	x0, [sp]
  414be4:	ldp	w4, w27, [x19, #32]
  414be8:	mov	x3, x25
  414bec:	mov	x2, x24
  414bf0:	mov	x1, x21
  414bf4:	orr	w27, w27, #0x1
  414bf8:	mov	x0, x22
  414bfc:	mov	w5, w27
  414c00:	bl	411db0 <__fxstatat@plt+0xf360>
  414c04:	cmp	x21, x0
  414c08:	b.hi	414c60 <__fxstatat@plt+0x12210>  // b.pmore
  414c0c:	add	x21, x0, #0x1
  414c10:	str	x21, [x20]
  414c14:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  414c18:	add	x0, x0, #0x760
  414c1c:	cmp	x22, x0
  414c20:	b.eq	414c2c <__fxstatat@plt+0x121dc>  // b.none
  414c24:	mov	x0, x22
  414c28:	bl	402840 <free@plt>
  414c2c:	mov	x0, x21
  414c30:	bl	415c40 <__fxstatat@plt+0x131f0>
  414c34:	ldp	x7, x1, [x19, #72]
  414c38:	str	x0, [x20, #8]
  414c3c:	ldr	w4, [x19, #32]
  414c40:	mov	x22, x0
  414c44:	str	x1, [sp]
  414c48:	mov	w5, w27
  414c4c:	mov	x3, x25
  414c50:	mov	x2, x24
  414c54:	add	x6, x19, #0x28
  414c58:	mov	x1, x21
  414c5c:	bl	411db0 <__fxstatat@plt+0xf360>
  414c60:	mov	x0, x22
  414c64:	ldp	x29, x30, [sp, #16]
  414c68:	ldp	x19, x20, [sp, #32]
  414c6c:	ldp	x21, x22, [sp, #48]
  414c70:	ldr	x27, [sp, #96]
  414c74:	str	w26, [x23]
  414c78:	ldp	x23, x24, [sp, #64]
  414c7c:	ldp	x25, x26, [sp, #80]
  414c80:	add	sp, sp, #0x70
  414c84:	ret
  414c88:	mov	x1, #0x10                  	// #16
  414c8c:	mov	x0, #0x0                   	// #0
  414c90:	bl	415c70 <__fxstatat@plt+0x13220>
  414c94:	mov	x20, x0
  414c98:	str	x0, [x21, #1336]
  414c9c:	ldp	x0, x1, [x19, #16]
  414ca0:	stp	x0, x1, [x20]
  414ca4:	b	414bb4 <__fxstatat@plt+0x12164>
  414ca8:	sub	sp, sp, #0x70
  414cac:	stp	x29, x30, [sp, #16]
  414cb0:	add	x29, sp, #0x10
  414cb4:	stp	x21, x22, [sp, #48]
  414cb8:	adrp	x22, 433000 <_obstack_memory_used@@Base+0x1bf80>
  414cbc:	stp	x19, x20, [sp, #32]
  414cc0:	mov	w19, w0
  414cc4:	stp	x23, x24, [sp, #64]
  414cc8:	mov	x24, x1
  414ccc:	stp	x25, x26, [sp, #80]
  414cd0:	stp	x27, x28, [sp, #96]
  414cd4:	bl	4029e0 <__errno_location@plt>
  414cd8:	ldr	w25, [x0]
  414cdc:	ldr	x21, [x22, #1336]
  414ce0:	tbnz	w19, #31, 414e24 <__fxstatat@plt+0x123d4>
  414ce4:	add	x20, x22, #0x538
  414ce8:	mov	x23, x0
  414cec:	ldr	w0, [x20, #8]
  414cf0:	cmp	w19, w0
  414cf4:	b.lt	414d44 <__fxstatat@plt+0x122f4>  // b.tstop
  414cf8:	mov	w0, #0x7fffffff            	// #2147483647
  414cfc:	cmp	w19, w0
  414d00:	b.eq	414e20 <__fxstatat@plt+0x123d0>  // b.none
  414d04:	add	w26, w19, #0x1
  414d08:	add	x0, x20, #0x10
  414d0c:	cmp	x21, x0
  414d10:	sbfiz	x1, x26, #4, #32
  414d14:	b.eq	414e04 <__fxstatat@plt+0x123b4>  // b.none
  414d18:	mov	x0, x21
  414d1c:	bl	415c70 <__fxstatat@plt+0x13220>
  414d20:	mov	x21, x0
  414d24:	str	x0, [x22, #1336]
  414d28:	ldr	w0, [x20, #8]
  414d2c:	mov	w1, #0x0                   	// #0
  414d30:	sub	w2, w26, w0
  414d34:	add	x0, x21, w0, sxtw #4
  414d38:	sbfiz	x2, x2, #4, #32
  414d3c:	bl	402680 <memset@plt>
  414d40:	str	w26, [x20, #8]
  414d44:	sbfiz	x19, x19, #4, #32
  414d48:	add	x6, x20, #0x28
  414d4c:	add	x26, x21, x19
  414d50:	mov	x2, x24
  414d54:	ldp	x7, x0, [x20, #72]
  414d58:	mov	x3, #0xffffffffffffffff    	// #-1
  414d5c:	ldp	w4, w28, [x20, #32]
  414d60:	ldr	x22, [x21, x19]
  414d64:	orr	w28, w28, #0x1
  414d68:	ldr	x27, [x26, #8]
  414d6c:	str	x0, [sp]
  414d70:	mov	x1, x22
  414d74:	mov	w5, w28
  414d78:	mov	x0, x27
  414d7c:	bl	411db0 <__fxstatat@plt+0xf360>
  414d80:	cmp	x22, x0
  414d84:	b.hi	414ddc <__fxstatat@plt+0x1238c>  // b.pmore
  414d88:	add	x22, x0, #0x1
  414d8c:	str	x22, [x21, x19]
  414d90:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  414d94:	add	x0, x0, #0x760
  414d98:	cmp	x27, x0
  414d9c:	b.eq	414da8 <__fxstatat@plt+0x12358>  // b.none
  414da0:	mov	x0, x27
  414da4:	bl	402840 <free@plt>
  414da8:	mov	x0, x22
  414dac:	bl	415c40 <__fxstatat@plt+0x131f0>
  414db0:	ldp	x7, x1, [x20, #72]
  414db4:	str	x0, [x26, #8]
  414db8:	ldr	w4, [x20, #32]
  414dbc:	mov	x27, x0
  414dc0:	str	x1, [sp]
  414dc4:	mov	w5, w28
  414dc8:	mov	x2, x24
  414dcc:	add	x6, x20, #0x28
  414dd0:	mov	x1, x22
  414dd4:	mov	x3, #0xffffffffffffffff    	// #-1
  414dd8:	bl	411db0 <__fxstatat@plt+0xf360>
  414ddc:	mov	x0, x27
  414de0:	ldp	x29, x30, [sp, #16]
  414de4:	ldp	x19, x20, [sp, #32]
  414de8:	ldp	x21, x22, [sp, #48]
  414dec:	ldp	x27, x28, [sp, #96]
  414df0:	str	w25, [x23]
  414df4:	ldp	x23, x24, [sp, #64]
  414df8:	ldp	x25, x26, [sp, #80]
  414dfc:	add	sp, sp, #0x70
  414e00:	ret
  414e04:	mov	x0, #0x0                   	// #0
  414e08:	bl	415c70 <__fxstatat@plt+0x13220>
  414e0c:	mov	x21, x0
  414e10:	str	x0, [x22, #1336]
  414e14:	ldp	x0, x1, [x20, #16]
  414e18:	stp	x0, x1, [x21]
  414e1c:	b	414d28 <__fxstatat@plt+0x122d8>
  414e20:	bl	415e08 <__fxstatat@plt+0x133b8>
  414e24:	bl	402760 <abort@plt>
  414e28:	sub	sp, sp, #0x60
  414e2c:	stp	x29, x30, [sp, #16]
  414e30:	add	x29, sp, #0x10
  414e34:	stp	x19, x20, [sp, #32]
  414e38:	stp	x21, x22, [sp, #48]
  414e3c:	adrp	x21, 433000 <_obstack_memory_used@@Base+0x1bf80>
  414e40:	add	x19, x21, #0x538
  414e44:	stp	x23, x24, [sp, #64]
  414e48:	mov	x24, x0
  414e4c:	stp	x25, x26, [sp, #80]
  414e50:	bl	4029e0 <__errno_location@plt>
  414e54:	mov	x23, x0
  414e58:	ldr	w0, [x19, #8]
  414e5c:	ldr	x20, [x21, #1336]
  414e60:	cmp	w0, #0x0
  414e64:	ldr	w25, [x23]
  414e68:	b.gt	414eac <__fxstatat@plt+0x1245c>
  414e6c:	add	x0, x19, #0x10
  414e70:	cmp	x20, x0
  414e74:	b.eq	414f5c <__fxstatat@plt+0x1250c>  // b.none
  414e78:	mov	x0, x20
  414e7c:	mov	x1, #0x10                  	// #16
  414e80:	bl	415c70 <__fxstatat@plt+0x13220>
  414e84:	mov	x20, x0
  414e88:	str	x0, [x21, #1336]
  414e8c:	ldr	w0, [x19, #8]
  414e90:	mov	w21, #0x1                   	// #1
  414e94:	mov	w1, #0x0                   	// #0
  414e98:	sub	w2, w21, w0
  414e9c:	add	x0, x20, w0, sxtw #4
  414ea0:	sbfiz	x2, x2, #4, #32
  414ea4:	bl	402680 <memset@plt>
  414ea8:	str	w21, [x19, #8]
  414eac:	ldp	x21, x22, [x20]
  414eb0:	add	x6, x19, #0x28
  414eb4:	ldp	x7, x0, [x19, #72]
  414eb8:	str	x0, [sp]
  414ebc:	ldp	w4, w26, [x19, #32]
  414ec0:	mov	x2, x24
  414ec4:	mov	x1, x21
  414ec8:	mov	x0, x22
  414ecc:	orr	w26, w26, #0x1
  414ed0:	mov	x3, #0xffffffffffffffff    	// #-1
  414ed4:	mov	w5, w26
  414ed8:	bl	411db0 <__fxstatat@plt+0xf360>
  414edc:	cmp	x21, x0
  414ee0:	b.hi	414f38 <__fxstatat@plt+0x124e8>  // b.pmore
  414ee4:	add	x21, x0, #0x1
  414ee8:	str	x21, [x20]
  414eec:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0xa38>
  414ef0:	add	x0, x0, #0x760
  414ef4:	cmp	x22, x0
  414ef8:	b.eq	414f04 <__fxstatat@plt+0x124b4>  // b.none
  414efc:	mov	x0, x22
  414f00:	bl	402840 <free@plt>
  414f04:	mov	x0, x21
  414f08:	bl	415c40 <__fxstatat@plt+0x131f0>
  414f0c:	ldp	x7, x1, [x19, #72]
  414f10:	str	x0, [x20, #8]
  414f14:	ldr	w4, [x19, #32]
  414f18:	mov	x22, x0
  414f1c:	str	x1, [sp]
  414f20:	mov	w5, w26
  414f24:	mov	x2, x24
  414f28:	add	x6, x19, #0x28
  414f2c:	mov	x1, x21
  414f30:	mov	x3, #0xffffffffffffffff    	// #-1
  414f34:	bl	411db0 <__fxstatat@plt+0xf360>
  414f38:	mov	x0, x22
  414f3c:	ldp	x29, x30, [sp, #16]
  414f40:	ldp	x19, x20, [sp, #32]
  414f44:	ldp	x21, x22, [sp, #48]
  414f48:	str	w25, [x23]
  414f4c:	ldp	x23, x24, [sp, #64]
  414f50:	ldp	x25, x26, [sp, #80]
  414f54:	add	sp, sp, #0x60
  414f58:	ret
  414f5c:	mov	x1, #0x10                  	// #16
  414f60:	mov	x0, #0x0                   	// #0
  414f64:	bl	415c70 <__fxstatat@plt+0x13220>
  414f68:	mov	x20, x0
  414f6c:	str	x0, [x21, #1336]
  414f70:	ldp	x0, x1, [x19, #16]
  414f74:	stp	x0, x1, [x20]
  414f78:	b	414e8c <__fxstatat@plt+0x1243c>
  414f7c:	nop
  414f80:	stp	x29, x30, [sp, #-320]!
  414f84:	mov	x29, sp
  414f88:	stp	x19, x20, [sp, #16]
  414f8c:	stp	x21, x22, [sp, #32]
  414f90:	mov	x22, x1
  414f94:	str	x23, [sp, #48]
  414f98:	mov	x23, x0
  414f9c:	bl	40c230 <__fxstatat@plt+0x97e0>
  414fa0:	mov	x19, x0
  414fa4:	mov	x0, x22
  414fa8:	bl	40c230 <__fxstatat@plt+0x97e0>
  414fac:	mov	x20, x0
  414fb0:	mov	x0, x19
  414fb4:	bl	40c288 <__fxstatat@plt+0x9838>
  414fb8:	mov	x21, x0
  414fbc:	mov	x0, x20
  414fc0:	bl	40c288 <__fxstatat@plt+0x9838>
  414fc4:	cmp	x21, x0
  414fc8:	b.eq	414fe8 <__fxstatat@plt+0x12598>  // b.none
  414fcc:	mov	w19, #0x0                   	// #0
  414fd0:	mov	w0, w19
  414fd4:	ldp	x19, x20, [sp, #16]
  414fd8:	ldp	x21, x22, [sp, #32]
  414fdc:	ldr	x23, [sp, #48]
  414fe0:	ldp	x29, x30, [sp], #320
  414fe4:	ret
  414fe8:	mov	x2, x21
  414fec:	mov	x1, x20
  414ff0:	mov	x0, x19
  414ff4:	bl	4027a0 <memcmp@plt>
  414ff8:	cbnz	w0, 414fcc <__fxstatat@plt+0x1257c>
  414ffc:	mov	x0, x23
  415000:	bl	417808 <_obstack_memory_used@@Base+0x788>
  415004:	add	x3, sp, #0x40
  415008:	mov	x19, x0
  41500c:	mov	x2, x0
  415010:	mov	w4, #0x100                 	// #256
  415014:	mov	w1, #0xffffff9c            	// #-100
  415018:	mov	w0, #0x0                   	// #0
  41501c:	bl	402a50 <__fxstatat@plt>
  415020:	cbnz	w0, 4150bc <__fxstatat@plt+0x1266c>
  415024:	mov	x0, x19
  415028:	bl	402840 <free@plt>
  41502c:	mov	x0, x22
  415030:	bl	417808 <_obstack_memory_used@@Base+0x788>
  415034:	add	x3, sp, #0xc0
  415038:	mov	x20, x0
  41503c:	mov	x2, x0
  415040:	mov	w4, #0x100                 	// #256
  415044:	mov	w1, #0xffffff9c            	// #-100
  415048:	mov	w0, #0x0                   	// #0
  41504c:	bl	402a50 <__fxstatat@plt>
  415050:	cbnz	w0, 415098 <__fxstatat@plt+0x12648>
  415054:	ldr	x1, [sp, #72]
  415058:	mov	w19, #0x0                   	// #0
  41505c:	ldr	x0, [sp, #200]
  415060:	cmp	x1, x0
  415064:	b.ne	415078 <__fxstatat@plt+0x12628>  // b.any
  415068:	ldr	x1, [sp, #64]
  41506c:	ldr	x0, [sp, #192]
  415070:	cmp	x1, x0
  415074:	cset	w19, eq  // eq = none
  415078:	mov	x0, x20
  41507c:	bl	402840 <free@plt>
  415080:	mov	w0, w19
  415084:	ldp	x19, x20, [sp, #16]
  415088:	ldp	x21, x22, [sp, #32]
  41508c:	ldr	x23, [sp, #48]
  415090:	ldp	x29, x30, [sp], #320
  415094:	ret
  415098:	bl	4029e0 <__errno_location@plt>
  41509c:	mov	x1, x0
  4150a0:	mov	x3, x20
  4150a4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4150a8:	mov	w0, #0x1                   	// #1
  4150ac:	add	x2, x2, #0x418
  4150b0:	ldr	w1, [x1]
  4150b4:	bl	402490 <error@plt>
  4150b8:	b	415054 <__fxstatat@plt+0x12604>
  4150bc:	bl	4029e0 <__errno_location@plt>
  4150c0:	mov	x1, x0
  4150c4:	mov	x3, x19
  4150c8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4150cc:	mov	w0, #0x1                   	// #1
  4150d0:	add	x2, x2, #0x418
  4150d4:	ldr	w1, [x1]
  4150d8:	bl	402490 <error@plt>
  4150dc:	b	415024 <__fxstatat@plt+0x125d4>
  4150e0:	stp	x29, x30, [sp, #-336]!
  4150e4:	mov	x29, sp
  4150e8:	stp	x19, x20, [sp, #16]
  4150ec:	stp	x21, x22, [sp, #32]
  4150f0:	mov	x22, x3
  4150f4:	stp	x23, x24, [sp, #48]
  4150f8:	mov	x23, x1
  4150fc:	mov	w24, w2
  415100:	str	x25, [sp, #64]
  415104:	mov	w25, w0
  415108:	mov	x0, x1
  41510c:	bl	40c230 <__fxstatat@plt+0x97e0>
  415110:	mov	x19, x0
  415114:	mov	x0, x22
  415118:	bl	40c230 <__fxstatat@plt+0x97e0>
  41511c:	mov	x20, x0
  415120:	mov	x0, x19
  415124:	bl	40c288 <__fxstatat@plt+0x9838>
  415128:	mov	x21, x0
  41512c:	mov	x0, x20
  415130:	bl	40c288 <__fxstatat@plt+0x9838>
  415134:	cmp	x21, x0
  415138:	b.eq	41515c <__fxstatat@plt+0x1270c>  // b.none
  41513c:	mov	w19, #0x0                   	// #0
  415140:	mov	w0, w19
  415144:	ldp	x19, x20, [sp, #16]
  415148:	ldp	x21, x22, [sp, #32]
  41514c:	ldp	x23, x24, [sp, #48]
  415150:	ldr	x25, [sp, #64]
  415154:	ldp	x29, x30, [sp], #336
  415158:	ret
  41515c:	mov	x2, x21
  415160:	mov	x1, x20
  415164:	mov	x0, x19
  415168:	bl	4027a0 <memcmp@plt>
  41516c:	cbnz	w0, 41513c <__fxstatat@plt+0x126ec>
  415170:	mov	x0, x23
  415174:	bl	417808 <_obstack_memory_used@@Base+0x788>
  415178:	mov	w1, w25
  41517c:	mov	x19, x0
  415180:	mov	x2, x0
  415184:	add	x3, sp, #0x50
  415188:	mov	w4, #0x100                 	// #256
  41518c:	mov	w0, #0x0                   	// #0
  415190:	bl	402a50 <__fxstatat@plt>
  415194:	cbnz	w0, 415234 <__fxstatat@plt+0x127e4>
  415198:	mov	x0, x19
  41519c:	bl	402840 <free@plt>
  4151a0:	mov	x0, x22
  4151a4:	bl	417808 <_obstack_memory_used@@Base+0x788>
  4151a8:	mov	w1, w24
  4151ac:	mov	x20, x0
  4151b0:	mov	x2, x0
  4151b4:	add	x3, sp, #0xd0
  4151b8:	mov	w4, #0x100                 	// #256
  4151bc:	mov	w0, #0x0                   	// #0
  4151c0:	bl	402a50 <__fxstatat@plt>
  4151c4:	cbnz	w0, 415210 <__fxstatat@plt+0x127c0>
  4151c8:	ldr	x1, [sp, #88]
  4151cc:	mov	w19, #0x0                   	// #0
  4151d0:	ldr	x0, [sp, #216]
  4151d4:	cmp	x1, x0
  4151d8:	b.ne	4151ec <__fxstatat@plt+0x1279c>  // b.any
  4151dc:	ldr	x1, [sp, #80]
  4151e0:	ldr	x0, [sp, #208]
  4151e4:	cmp	x1, x0
  4151e8:	cset	w19, eq  // eq = none
  4151ec:	mov	x0, x20
  4151f0:	bl	402840 <free@plt>
  4151f4:	mov	w0, w19
  4151f8:	ldp	x19, x20, [sp, #16]
  4151fc:	ldp	x21, x22, [sp, #32]
  415200:	ldp	x23, x24, [sp, #48]
  415204:	ldr	x25, [sp, #64]
  415208:	ldp	x29, x30, [sp], #336
  41520c:	ret
  415210:	bl	4029e0 <__errno_location@plt>
  415214:	mov	x1, x0
  415218:	mov	x3, x20
  41521c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  415220:	mov	w0, #0x1                   	// #1
  415224:	add	x2, x2, #0x418
  415228:	ldr	w1, [x1]
  41522c:	bl	402490 <error@plt>
  415230:	b	4151c8 <__fxstatat@plt+0x12778>
  415234:	bl	4029e0 <__errno_location@plt>
  415238:	mov	x1, x0
  41523c:	mov	x3, x19
  415240:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  415244:	mov	w0, #0x1                   	// #1
  415248:	add	x2, x2, #0x418
  41524c:	ldr	w1, [x1]
  415250:	bl	402490 <error@plt>
  415254:	b	415198 <__fxstatat@plt+0x12748>
  415258:	sub	sp, sp, #0x50
  41525c:	stp	x29, x30, [sp, #32]
  415260:	add	x29, sp, #0x20
  415264:	stp	x19, x20, [sp, #48]
  415268:	mov	x19, x5
  41526c:	mov	x20, x4
  415270:	str	x21, [sp, #64]
  415274:	mov	x5, x3
  415278:	mov	x21, x0
  41527c:	cbz	x1, 415458 <__fxstatat@plt+0x12a08>
  415280:	mov	x4, x2
  415284:	mov	x3, x1
  415288:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x6f80>
  41528c:	mov	w1, #0x1                   	// #1
  415290:	add	x2, x2, #0x248
  415294:	bl	4027e0 <__fprintf_chk@plt>
  415298:	mov	w2, #0x5                   	// #5
  41529c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4152a0:	mov	x0, #0x0                   	// #0
  4152a4:	add	x1, x1, #0x260
  4152a8:	bl	402970 <dcgettext@plt>
  4152ac:	mov	x3, x0
  4152b0:	mov	w4, #0x7e3                 	// #2019
  4152b4:	mov	w1, #0x1                   	// #1
  4152b8:	mov	x0, x21
  4152bc:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4152c0:	add	x2, x2, #0x560
  4152c4:	bl	4027e0 <__fprintf_chk@plt>
  4152c8:	mov	w2, #0x5                   	// #5
  4152cc:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4152d0:	mov	x0, #0x0                   	// #0
  4152d4:	add	x1, x1, #0x268
  4152d8:	bl	402970 <dcgettext@plt>
  4152dc:	mov	x1, x21
  4152e0:	bl	402980 <fputs_unlocked@plt>
  4152e4:	cmp	x19, #0x5
  4152e8:	b.eq	415474 <__fxstatat@plt+0x12a24>  // b.none
  4152ec:	b.hi	415340 <__fxstatat@plt+0x128f0>  // b.pmore
  4152f0:	cmp	x19, #0x2
  4152f4:	b.eq	4154b4 <__fxstatat@plt+0x12a64>  // b.none
  4152f8:	b.ls	4153b4 <__fxstatat@plt+0x12964>  // b.plast
  4152fc:	cmp	x19, #0x3
  415300:	b.eq	415534 <__fxstatat@plt+0x12ae4>  // b.none
  415304:	mov	w2, #0x5                   	// #5
  415308:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  41530c:	mov	x0, #0x0                   	// #0
  415310:	add	x1, x1, #0x380
  415314:	bl	402970 <dcgettext@plt>
  415318:	mov	x2, x0
  41531c:	ldp	x3, x4, [x20]
  415320:	mov	x0, x21
  415324:	ldp	x5, x6, [x20, #16]
  415328:	mov	w1, #0x1                   	// #1
  41532c:	ldp	x29, x30, [sp, #32]
  415330:	ldp	x19, x20, [sp, #48]
  415334:	ldr	x21, [sp, #64]
  415338:	add	sp, sp, #0x50
  41533c:	b	4027e0 <__fprintf_chk@plt>
  415340:	cmp	x19, #0x8
  415344:	b.eq	415570 <__fxstatat@plt+0x12b20>  // b.none
  415348:	b.ls	4153f8 <__fxstatat@plt+0x129a8>  // b.plast
  41534c:	cmp	x19, #0x9
  415350:	b.ne	415524 <__fxstatat@plt+0x12ad4>  // b.any
  415354:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415358:	add	x1, x1, #0x450
  41535c:	mov	w2, #0x5                   	// #5
  415360:	mov	x0, #0x0                   	// #0
  415364:	bl	402970 <dcgettext@plt>
  415368:	ldp	x7, x8, [x20, #32]
  41536c:	mov	x2, x0
  415370:	ldp	x3, x4, [x20]
  415374:	mov	x0, x21
  415378:	ldp	x5, x6, [x20, #16]
  41537c:	str	x8, [sp]
  415380:	mov	w1, #0x1                   	// #1
  415384:	ldr	x8, [x20, #48]
  415388:	str	x8, [sp, #8]
  41538c:	ldr	x8, [x20, #56]
  415390:	str	x8, [sp, #16]
  415394:	ldr	x8, [x20, #64]
  415398:	str	x8, [sp, #24]
  41539c:	bl	4027e0 <__fprintf_chk@plt>
  4153a0:	ldp	x29, x30, [sp, #32]
  4153a4:	ldp	x19, x20, [sp, #48]
  4153a8:	ldr	x21, [sp, #64]
  4153ac:	add	sp, sp, #0x50
  4153b0:	ret
  4153b4:	cbz	x19, 415444 <__fxstatat@plt+0x129f4>
  4153b8:	cmp	x19, #0x1
  4153bc:	b.ne	415524 <__fxstatat@plt+0x12ad4>  // b.any
  4153c0:	mov	w2, #0x5                   	// #5
  4153c4:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4153c8:	mov	x0, #0x0                   	// #0
  4153cc:	add	x1, x1, #0x338
  4153d0:	bl	402970 <dcgettext@plt>
  4153d4:	mov	x2, x0
  4153d8:	mov	w1, w19
  4153dc:	mov	x0, x21
  4153e0:	ldr	x3, [x20]
  4153e4:	ldp	x29, x30, [sp, #32]
  4153e8:	ldp	x19, x20, [sp, #48]
  4153ec:	ldr	x21, [sp, #64]
  4153f0:	add	sp, sp, #0x50
  4153f4:	b	4027e0 <__fprintf_chk@plt>
  4153f8:	cmp	x19, #0x6
  4153fc:	b.eq	4154ec <__fxstatat@plt+0x12a9c>  // b.none
  415400:	cmp	x19, #0x7
  415404:	b.ne	415524 <__fxstatat@plt+0x12ad4>  // b.any
  415408:	mov	w2, #0x5                   	// #5
  41540c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415410:	mov	x0, #0x0                   	// #0
  415414:	add	x1, x1, #0x3f0
  415418:	bl	402970 <dcgettext@plt>
  41541c:	mov	x2, x0
  415420:	ldp	x7, x8, [x20, #32]
  415424:	mov	x0, x21
  415428:	ldp	x3, x4, [x20]
  41542c:	mov	w1, #0x1                   	// #1
  415430:	ldp	x5, x6, [x20, #16]
  415434:	str	x8, [sp]
  415438:	ldr	x8, [x20, #48]
  41543c:	str	x8, [sp, #8]
  415440:	bl	4027e0 <__fprintf_chk@plt>
  415444:	ldp	x29, x30, [sp, #32]
  415448:	ldp	x19, x20, [sp, #48]
  41544c:	ldr	x21, [sp, #64]
  415450:	add	sp, sp, #0x50
  415454:	ret
  415458:	mov	x4, x3
  41545c:	mov	w1, #0x1                   	// #1
  415460:	mov	x3, x2
  415464:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415468:	add	x2, x2, #0x258
  41546c:	bl	4027e0 <__fprintf_chk@plt>
  415470:	b	415298 <__fxstatat@plt+0x12848>
  415474:	mov	w2, w19
  415478:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  41547c:	mov	x0, #0x0                   	// #0
  415480:	add	x1, x1, #0x3a0
  415484:	bl	402970 <dcgettext@plt>
  415488:	mov	x2, x0
  41548c:	ldp	x3, x4, [x20]
  415490:	mov	x0, x21
  415494:	ldp	x5, x6, [x20, #16]
  415498:	mov	w1, #0x1                   	// #1
  41549c:	ldp	x29, x30, [sp, #32]
  4154a0:	ldr	x7, [x20, #32]
  4154a4:	ldp	x19, x20, [sp, #48]
  4154a8:	ldr	x21, [sp, #64]
  4154ac:	add	sp, sp, #0x50
  4154b0:	b	4027e0 <__fprintf_chk@plt>
  4154b4:	mov	w2, #0x5                   	// #5
  4154b8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4154bc:	mov	x0, #0x0                   	// #0
  4154c0:	add	x1, x1, #0x348
  4154c4:	bl	402970 <dcgettext@plt>
  4154c8:	mov	x2, x0
  4154cc:	ldp	x3, x4, [x20]
  4154d0:	mov	x0, x21
  4154d4:	ldp	x29, x30, [sp, #32]
  4154d8:	mov	w1, #0x1                   	// #1
  4154dc:	ldp	x19, x20, [sp, #48]
  4154e0:	ldr	x21, [sp, #64]
  4154e4:	add	sp, sp, #0x50
  4154e8:	b	4027e0 <__fprintf_chk@plt>
  4154ec:	mov	w2, #0x5                   	// #5
  4154f0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4154f4:	mov	x0, #0x0                   	// #0
  4154f8:	add	x1, x1, #0x3c8
  4154fc:	bl	402970 <dcgettext@plt>
  415500:	mov	x2, x0
  415504:	ldp	x3, x4, [x20]
  415508:	mov	x0, x21
  41550c:	ldp	x5, x6, [x20, #16]
  415510:	mov	w1, #0x1                   	// #1
  415514:	ldp	x7, x8, [x20, #32]
  415518:	str	x8, [sp]
  41551c:	bl	4027e0 <__fprintf_chk@plt>
  415520:	b	415444 <__fxstatat@plt+0x129f4>
  415524:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415528:	mov	w2, #0x5                   	// #5
  41552c:	add	x1, x1, #0x488
  415530:	b	415360 <__fxstatat@plt+0x12910>
  415534:	mov	w2, #0x5                   	// #5
  415538:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  41553c:	mov	x0, #0x0                   	// #0
  415540:	add	x1, x1, #0x360
  415544:	bl	402970 <dcgettext@plt>
  415548:	mov	x2, x0
  41554c:	ldp	x3, x4, [x20]
  415550:	mov	x0, x21
  415554:	ldr	x5, [x20, #16]
  415558:	mov	w1, #0x1                   	// #1
  41555c:	ldp	x29, x30, [sp, #32]
  415560:	ldp	x19, x20, [sp, #48]
  415564:	ldr	x21, [sp, #64]
  415568:	add	sp, sp, #0x50
  41556c:	b	4027e0 <__fprintf_chk@plt>
  415570:	mov	w2, #0x5                   	// #5
  415574:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415578:	mov	x0, #0x0                   	// #0
  41557c:	add	x1, x1, #0x420
  415580:	bl	402970 <dcgettext@plt>
  415584:	mov	x2, x0
  415588:	ldp	x7, x8, [x20, #32]
  41558c:	mov	x0, x21
  415590:	ldp	x3, x4, [x20]
  415594:	mov	w1, #0x1                   	// #1
  415598:	ldp	x5, x6, [x20, #16]
  41559c:	str	x8, [sp]
  4155a0:	ldr	x8, [x20, #48]
  4155a4:	str	x8, [sp, #8]
  4155a8:	ldr	x8, [x20, #56]
  4155ac:	str	x8, [sp, #16]
  4155b0:	bl	4027e0 <__fprintf_chk@plt>
  4155b4:	b	415444 <__fxstatat@plt+0x129f4>
  4155b8:	ldr	x5, [x4]
  4155bc:	cbz	x5, 4155d8 <__fxstatat@plt+0x12b88>
  4155c0:	mov	x5, #0x0                   	// #0
  4155c4:	nop
  4155c8:	add	x5, x5, #0x1
  4155cc:	ldr	x6, [x4, x5, lsl #3]
  4155d0:	cbnz	x6, 4155c8 <__fxstatat@plt+0x12b78>
  4155d4:	b	415258 <__fxstatat@plt+0x12808>
  4155d8:	mov	x5, #0x0                   	// #0
  4155dc:	b	415258 <__fxstatat@plt+0x12808>
  4155e0:	stp	x29, x30, [sp, #-96]!
  4155e4:	mov	x29, sp
  4155e8:	ldp	x6, x8, [x4]
  4155ec:	ldr	w7, [x4, #24]
  4155f0:	add	x5, x6, #0xf
  4155f4:	and	x5, x5, #0xfffffffffffffff8
  4155f8:	tbnz	w7, #31, 4156e0 <__fxstatat@plt+0x12c90>
  4155fc:	ldr	x4, [x6]
  415600:	str	x4, [sp, #16]
  415604:	cbz	x4, 415730 <__fxstatat@plt+0x12ce0>
  415608:	add	x4, x5, #0xf
  41560c:	ldr	x5, [x5]
  415610:	str	x5, [sp, #24]
  415614:	and	x4, x4, #0xfffffffffffffff8
  415618:	cbz	x5, 41571c <__fxstatat@plt+0x12ccc>
  41561c:	add	x5, x4, #0xf
  415620:	and	x5, x5, #0xfffffffffffffff8
  415624:	ldr	x4, [x4]
  415628:	str	x4, [sp, #32]
  41562c:	cbz	x4, 4156cc <__fxstatat@plt+0x12c7c>
  415630:	add	x6, x5, #0xf
  415634:	and	x6, x6, #0xfffffffffffffff8
  415638:	ldr	x4, [x5]
  41563c:	str	x4, [sp, #40]
  415640:	cbz	x4, 415744 <__fxstatat@plt+0x12cf4>
  415644:	ldr	x5, [x6]
  415648:	str	x5, [sp, #48]
  41564c:	add	x4, x6, #0xf
  415650:	and	x4, x4, #0xfffffffffffffff8
  415654:	cbz	x5, 415758 <__fxstatat@plt+0x12d08>
  415658:	add	x6, x4, #0xf
  41565c:	and	x6, x6, #0xfffffffffffffff8
  415660:	ldr	x4, [x4]
  415664:	str	x4, [sp, #56]
  415668:	cbz	x4, 415760 <__fxstatat@plt+0x12d10>
  41566c:	ldr	x5, [x6]
  415670:	str	x5, [sp, #64]
  415674:	add	x4, x6, #0xf
  415678:	and	x4, x4, #0xfffffffffffffff8
  41567c:	cbz	x5, 415768 <__fxstatat@plt+0x12d18>
  415680:	add	x5, x4, #0xf
  415684:	and	x5, x5, #0xfffffffffffffff8
  415688:	ldr	x4, [x4]
  41568c:	str	x4, [sp, #72]
  415690:	cbz	x4, 415770 <__fxstatat@plt+0x12d20>
  415694:	add	x6, x5, #0xf
  415698:	and	x6, x6, #0xfffffffffffffff8
  41569c:	ldr	x4, [x5]
  4156a0:	str	x4, [sp, #80]
  4156a4:	cbz	x4, 415778 <__fxstatat@plt+0x12d28>
  4156a8:	ldr	x4, [x6]
  4156ac:	str	x4, [sp, #88]
  4156b0:	cmp	x4, #0x0
  4156b4:	cset	x5, ne  // ne = any
  4156b8:	add	x5, x5, #0x9
  4156bc:	add	x4, sp, #0x10
  4156c0:	bl	415258 <__fxstatat@plt+0x12808>
  4156c4:	ldp	x29, x30, [sp], #96
  4156c8:	ret
  4156cc:	add	x4, sp, #0x10
  4156d0:	mov	x5, #0x2                   	// #2
  4156d4:	bl	415258 <__fxstatat@plt+0x12808>
  4156d8:	ldp	x29, x30, [sp], #96
  4156dc:	ret
  4156e0:	add	w4, w7, #0x8
  4156e4:	cmp	w4, #0x0
  4156e8:	b.gt	4155fc <__fxstatat@plt+0x12bac>
  4156ec:	ldr	x9, [x8, w7, sxtw]
  4156f0:	str	x9, [sp, #16]
  4156f4:	cbz	x9, 415730 <__fxstatat@plt+0x12ce0>
  4156f8:	cbz	w4, 4158a8 <__fxstatat@plt+0x12e58>
  4156fc:	add	w9, w7, #0x10
  415700:	cmp	w9, #0x0
  415704:	b.le	415780 <__fxstatat@plt+0x12d30>
  415708:	mov	x4, x5
  41570c:	mov	x5, x6
  415710:	ldr	x5, [x5]
  415714:	str	x5, [sp, #24]
  415718:	cbnz	x5, 41561c <__fxstatat@plt+0x12bcc>
  41571c:	add	x4, sp, #0x10
  415720:	mov	x5, #0x1                   	// #1
  415724:	bl	415258 <__fxstatat@plt+0x12808>
  415728:	ldp	x29, x30, [sp], #96
  41572c:	ret
  415730:	add	x4, sp, #0x10
  415734:	mov	x5, #0x0                   	// #0
  415738:	bl	415258 <__fxstatat@plt+0x12808>
  41573c:	ldp	x29, x30, [sp], #96
  415740:	ret
  415744:	add	x4, sp, #0x10
  415748:	mov	x5, #0x3                   	// #3
  41574c:	bl	415258 <__fxstatat@plt+0x12808>
  415750:	ldp	x29, x30, [sp], #96
  415754:	ret
  415758:	mov	x5, #0x4                   	// #4
  41575c:	b	4156bc <__fxstatat@plt+0x12c6c>
  415760:	mov	x5, #0x5                   	// #5
  415764:	b	4156bc <__fxstatat@plt+0x12c6c>
  415768:	mov	x5, #0x6                   	// #6
  41576c:	b	4156bc <__fxstatat@plt+0x12c6c>
  415770:	mov	x5, #0x7                   	// #7
  415774:	b	4156bc <__fxstatat@plt+0x12c6c>
  415778:	mov	x5, #0x8                   	// #8
  41577c:	b	4156bc <__fxstatat@plt+0x12c6c>
  415780:	ldr	x4, [x8, w4, sxtw]
  415784:	str	x4, [sp, #24]
  415788:	cbz	x4, 41571c <__fxstatat@plt+0x12ccc>
  41578c:	cbz	w9, 4158d0 <__fxstatat@plt+0x12e80>
  415790:	add	w10, w7, #0x18
  415794:	mov	x4, x6
  415798:	cmp	w10, #0x0
  41579c:	b.gt	415624 <__fxstatat@plt+0x12bd4>
  4157a0:	ldr	x4, [x8, w9, sxtw]
  4157a4:	str	x4, [sp, #32]
  4157a8:	cbz	x4, 4156cc <__fxstatat@plt+0x12c7c>
  4157ac:	cbz	w10, 4158c8 <__fxstatat@plt+0x12e78>
  4157b0:	add	w4, w7, #0x20
  4157b4:	cmp	w4, #0x0
  4157b8:	b.le	4157cc <__fxstatat@plt+0x12d7c>
  4157bc:	add	x4, x6, #0xf
  4157c0:	mov	x5, x6
  4157c4:	and	x6, x4, #0xfffffffffffffff8
  4157c8:	b	415638 <__fxstatat@plt+0x12be8>
  4157cc:	ldr	x5, [x8, w10, sxtw]
  4157d0:	str	x5, [sp, #40]
  4157d4:	cbz	x5, 415744 <__fxstatat@plt+0x12cf4>
  4157d8:	cbz	w4, 415644 <__fxstatat@plt+0x12bf4>
  4157dc:	add	w5, w7, #0x28
  4157e0:	cmp	w5, #0x0
  4157e4:	b.gt	415644 <__fxstatat@plt+0x12bf4>
  4157e8:	ldr	x4, [x8, w4, sxtw]
  4157ec:	str	x4, [sp, #48]
  4157f0:	cbz	x4, 415758 <__fxstatat@plt+0x12d08>
  4157f4:	cbz	w5, 4158c0 <__fxstatat@plt+0x12e70>
  4157f8:	add	w4, w7, #0x30
  4157fc:	cmp	w4, #0x0
  415800:	b.le	415814 <__fxstatat@plt+0x12dc4>
  415804:	add	x5, x6, #0xf
  415808:	mov	x4, x6
  41580c:	and	x6, x5, #0xfffffffffffffff8
  415810:	b	415660 <__fxstatat@plt+0x12c10>
  415814:	ldr	x5, [x8, w5, sxtw]
  415818:	str	x5, [sp, #56]
  41581c:	cbz	x5, 415760 <__fxstatat@plt+0x12d10>
  415820:	cbz	w4, 41566c <__fxstatat@plt+0x12c1c>
  415824:	add	w5, w7, #0x38
  415828:	cmp	w5, #0x0
  41582c:	b.gt	41566c <__fxstatat@plt+0x12c1c>
  415830:	ldr	x4, [x8, w4, sxtw]
  415834:	str	x4, [sp, #64]
  415838:	cbz	x4, 415768 <__fxstatat@plt+0x12d18>
  41583c:	cbz	w5, 4158b8 <__fxstatat@plt+0x12e68>
  415840:	add	w9, w7, #0x40
  415844:	cmp	w9, #0x0
  415848:	b.le	41585c <__fxstatat@plt+0x12e0c>
  41584c:	add	x5, x6, #0xf
  415850:	mov	x4, x6
  415854:	and	x5, x5, #0xfffffffffffffff8
  415858:	b	415688 <__fxstatat@plt+0x12c38>
  41585c:	ldr	x4, [x8, w5, sxtw]
  415860:	str	x4, [sp, #72]
  415864:	cbz	x4, 415770 <__fxstatat@plt+0x12d20>
  415868:	cbz	w9, 4158b0 <__fxstatat@plt+0x12e60>
  41586c:	add	w4, w7, #0x48
  415870:	cmp	w4, #0x0
  415874:	b.le	415888 <__fxstatat@plt+0x12e38>
  415878:	add	x4, x6, #0xf
  41587c:	mov	x5, x6
  415880:	and	x6, x4, #0xfffffffffffffff8
  415884:	b	41569c <__fxstatat@plt+0x12c4c>
  415888:	ldr	x5, [x8, w9, sxtw]
  41588c:	str	x5, [sp, #80]
  415890:	cbz	x5, 415778 <__fxstatat@plt+0x12d28>
  415894:	cbz	w4, 4156a8 <__fxstatat@plt+0x12c58>
  415898:	add	x8, x8, w4, sxtw
  41589c:	cmn	w7, #0x4f
  4158a0:	csel	x6, x8, x6, lt  // lt = tstop
  4158a4:	b	4156a8 <__fxstatat@plt+0x12c58>
  4158a8:	mov	x5, x6
  4158ac:	b	415608 <__fxstatat@plt+0x12bb8>
  4158b0:	mov	x5, x6
  4158b4:	b	415694 <__fxstatat@plt+0x12c44>
  4158b8:	mov	x4, x6
  4158bc:	b	415680 <__fxstatat@plt+0x12c30>
  4158c0:	mov	x4, x6
  4158c4:	b	415658 <__fxstatat@plt+0x12c08>
  4158c8:	mov	x5, x6
  4158cc:	b	415630 <__fxstatat@plt+0x12be0>
  4158d0:	mov	x4, x6
  4158d4:	b	41561c <__fxstatat@plt+0x12bcc>
  4158d8:	stp	x29, x30, [sp, #-288]!
  4158dc:	mov	w10, #0xffffffe0            	// #-32
  4158e0:	mov	w9, #0xffffff80            	// #-128
  4158e4:	mov	x29, sp
  4158e8:	add	x11, sp, #0x100
  4158ec:	add	x12, sp, #0x120
  4158f0:	stp	x12, x12, [sp, #16]
  4158f4:	str	x11, [sp, #32]
  4158f8:	stp	w10, w9, [sp, #40]
  4158fc:	str	x4, [sp, #48]
  415900:	str	q0, [sp, #128]
  415904:	str	q1, [sp, #144]
  415908:	str	q2, [sp, #160]
  41590c:	str	q3, [sp, #176]
  415910:	str	q4, [sp, #192]
  415914:	str	q5, [sp, #208]
  415918:	str	q6, [sp, #224]
  41591c:	str	q7, [sp, #240]
  415920:	stp	x4, x5, [sp, #256]
  415924:	stp	x6, x7, [sp, #272]
  415928:	cbz	x4, 415a18 <__fxstatat@plt+0x12fc8>
  41592c:	str	x5, [sp, #56]
  415930:	cbz	x5, 415a10 <__fxstatat@plt+0x12fc0>
  415934:	str	x6, [sp, #64]
  415938:	mov	x5, #0x2                   	// #2
  41593c:	cbz	x6, 4159b0 <__fxstatat@plt+0x12f60>
  415940:	str	x7, [sp, #72]
  415944:	mov	x5, #0x3                   	// #3
  415948:	cbz	x7, 4159b0 <__fxstatat@plt+0x12f60>
  41594c:	ldr	x4, [sp, #288]
  415950:	str	x4, [sp, #80]
  415954:	mov	x5, #0x4                   	// #4
  415958:	cbz	x4, 4159b0 <__fxstatat@plt+0x12f60>
  41595c:	ldr	x5, [sp, #296]
  415960:	str	x5, [sp, #88]
  415964:	add	x4, sp, #0x130
  415968:	cbz	x5, 4159c0 <__fxstatat@plt+0x12f70>
  41596c:	ldr	x5, [x4]
  415970:	str	x5, [sp, #96]
  415974:	add	x4, x4, #0x8
  415978:	cbz	x5, 4159d4 <__fxstatat@plt+0x12f84>
  41597c:	ldr	x5, [x4]
  415980:	str	x5, [sp, #104]
  415984:	add	x4, x4, #0x8
  415988:	cbz	x5, 4159e8 <__fxstatat@plt+0x12f98>
  41598c:	ldr	x5, [x4]
  415990:	str	x5, [sp, #112]
  415994:	add	x4, x4, #0x8
  415998:	cbz	x5, 4159fc <__fxstatat@plt+0x12fac>
  41599c:	ldr	x4, [x4]
  4159a0:	str	x4, [sp, #120]
  4159a4:	cmp	x4, #0x0
  4159a8:	cset	x5, ne  // ne = any
  4159ac:	add	x5, x5, #0x9
  4159b0:	add	x4, sp, #0x30
  4159b4:	bl	415258 <__fxstatat@plt+0x12808>
  4159b8:	ldp	x29, x30, [sp], #288
  4159bc:	ret
  4159c0:	add	x4, sp, #0x30
  4159c4:	mov	x5, #0x5                   	// #5
  4159c8:	bl	415258 <__fxstatat@plt+0x12808>
  4159cc:	ldp	x29, x30, [sp], #288
  4159d0:	ret
  4159d4:	add	x4, sp, #0x30
  4159d8:	mov	x5, #0x6                   	// #6
  4159dc:	bl	415258 <__fxstatat@plt+0x12808>
  4159e0:	ldp	x29, x30, [sp], #288
  4159e4:	ret
  4159e8:	add	x4, sp, #0x30
  4159ec:	mov	x5, #0x7                   	// #7
  4159f0:	bl	415258 <__fxstatat@plt+0x12808>
  4159f4:	ldp	x29, x30, [sp], #288
  4159f8:	ret
  4159fc:	add	x4, sp, #0x30
  415a00:	mov	x5, #0x8                   	// #8
  415a04:	bl	415258 <__fxstatat@plt+0x12808>
  415a08:	ldp	x29, x30, [sp], #288
  415a0c:	ret
  415a10:	mov	x5, #0x1                   	// #1
  415a14:	b	4159b0 <__fxstatat@plt+0x12f60>
  415a18:	mov	x5, #0x0                   	// #0
  415a1c:	b	4159b0 <__fxstatat@plt+0x12f60>
  415a20:	stp	x29, x30, [sp, #-16]!
  415a24:	mov	w2, #0x5                   	// #5
  415a28:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415a2c:	mov	x29, sp
  415a30:	add	x1, x1, #0x4c8
  415a34:	mov	x0, #0x0                   	// #0
  415a38:	bl	402970 <dcgettext@plt>
  415a3c:	mov	x1, x0
  415a40:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415a44:	mov	w0, #0x1                   	// #1
  415a48:	add	x2, x2, #0x4e0
  415a4c:	bl	402670 <__printf_chk@plt>
  415a50:	mov	w2, #0x5                   	// #5
  415a54:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415a58:	mov	x0, #0x0                   	// #0
  415a5c:	add	x1, x1, #0x4f8
  415a60:	bl	402970 <dcgettext@plt>
  415a64:	mov	x1, x0
  415a68:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x3f80>
  415a6c:	add	x3, x3, #0x268
  415a70:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  415a74:	mov	w0, #0x1                   	// #1
  415a78:	add	x2, x2, #0x290
  415a7c:	bl	402670 <__printf_chk@plt>
  415a80:	mov	w2, #0x5                   	// #5
  415a84:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415a88:	mov	x0, #0x0                   	// #0
  415a8c:	add	x1, x1, #0x510
  415a90:	bl	402970 <dcgettext@plt>
  415a94:	ldp	x29, x30, [sp], #16
  415a98:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x1bf80>
  415a9c:	ldr	x1, [x1, #1472]
  415aa0:	b	402980 <fputs_unlocked@plt>
  415aa4:	nop
  415aa8:	stp	x29, x30, [sp, #-32]!
  415aac:	umulh	x2, x0, x1
  415ab0:	mov	x29, sp
  415ab4:	str	x19, [sp, #16]
  415ab8:	mul	x19, x0, x1
  415abc:	cmp	x2, #0x0
  415ac0:	cset	x0, ne  // ne = any
  415ac4:	tbnz	x19, #63, 415aec <__fxstatat@plt+0x1309c>
  415ac8:	cbnz	x0, 415aec <__fxstatat@plt+0x1309c>
  415acc:	mov	x0, x19
  415ad0:	bl	4025f0 <malloc@plt>
  415ad4:	cmp	x0, #0x0
  415ad8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  415adc:	b.ne	415aec <__fxstatat@plt+0x1309c>  // b.any
  415ae0:	ldr	x19, [sp, #16]
  415ae4:	ldp	x29, x30, [sp], #32
  415ae8:	ret
  415aec:	bl	415e08 <__fxstatat@plt+0x133b8>
  415af0:	stp	x29, x30, [sp, #-32]!
  415af4:	umulh	x4, x1, x2
  415af8:	mov	x29, sp
  415afc:	str	x19, [sp, #16]
  415b00:	mul	x19, x1, x2
  415b04:	cmp	x4, #0x0
  415b08:	cset	x1, ne  // ne = any
  415b0c:	tbnz	x19, #63, 415b54 <__fxstatat@plt+0x13104>
  415b10:	cbnz	x1, 415b54 <__fxstatat@plt+0x13104>
  415b14:	cmp	x19, #0x0
  415b18:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  415b1c:	b.ne	415b40 <__fxstatat@plt+0x130f0>  // b.any
  415b20:	mov	x1, x19
  415b24:	bl	4026e0 <realloc@plt>
  415b28:	cmp	x0, #0x0
  415b2c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  415b30:	b.ne	415b54 <__fxstatat@plt+0x13104>  // b.any
  415b34:	ldr	x19, [sp, #16]
  415b38:	ldp	x29, x30, [sp], #32
  415b3c:	ret
  415b40:	bl	402840 <free@plt>
  415b44:	mov	x0, #0x0                   	// #0
  415b48:	ldr	x19, [sp, #16]
  415b4c:	ldp	x29, x30, [sp], #32
  415b50:	ret
  415b54:	bl	415e08 <__fxstatat@plt+0x133b8>
  415b58:	stp	x29, x30, [sp, #-32]!
  415b5c:	mov	x4, x0
  415b60:	mov	x29, sp
  415b64:	ldr	x3, [x1]
  415b68:	str	x19, [sp, #16]
  415b6c:	cbz	x0, 415bbc <__fxstatat@plt+0x1316c>
  415b70:	mov	x5, #0x5555555555555555    	// #6148914691236517205
  415b74:	movk	x5, #0x5554
  415b78:	udiv	x5, x5, x2
  415b7c:	cmp	x5, x3
  415b80:	b.ls	415c08 <__fxstatat@plt+0x131b8>  // b.plast
  415b84:	add	x19, x3, #0x1
  415b88:	add	x19, x19, x3, lsr #1
  415b8c:	str	x19, [x1]
  415b90:	mul	x19, x2, x19
  415b94:	cbz	x19, 415bf4 <__fxstatat@plt+0x131a4>
  415b98:	mov	x0, x4
  415b9c:	mov	x1, x19
  415ba0:	bl	4026e0 <realloc@plt>
  415ba4:	cmp	x0, #0x0
  415ba8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  415bac:	b.ne	415c08 <__fxstatat@plt+0x131b8>  // b.any
  415bb0:	ldr	x19, [sp, #16]
  415bb4:	ldp	x29, x30, [sp], #32
  415bb8:	ret
  415bbc:	cbz	x3, 415be0 <__fxstatat@plt+0x13190>
  415bc0:	umulh	x0, x3, x2
  415bc4:	mul	x19, x3, x2
  415bc8:	cmp	x0, #0x0
  415bcc:	cset	x0, ne  // ne = any
  415bd0:	tbnz	x19, #63, 415c08 <__fxstatat@plt+0x131b8>
  415bd4:	cbnz	x0, 415c08 <__fxstatat@plt+0x131b8>
  415bd8:	str	x3, [x1]
  415bdc:	b	415b98 <__fxstatat@plt+0x13148>
  415be0:	mov	x3, #0x80                  	// #128
  415be4:	cmp	x2, x3
  415be8:	udiv	x3, x3, x2
  415bec:	cinc	x3, x3, hi  // hi = pmore
  415bf0:	b	415bc0 <__fxstatat@plt+0x13170>
  415bf4:	bl	402840 <free@plt>
  415bf8:	mov	x0, #0x0                   	// #0
  415bfc:	ldr	x19, [sp, #16]
  415c00:	ldp	x29, x30, [sp], #32
  415c04:	ret
  415c08:	bl	415e08 <__fxstatat@plt+0x133b8>
  415c0c:	nop
  415c10:	stp	x29, x30, [sp, #-32]!
  415c14:	mov	x29, sp
  415c18:	str	x19, [sp, #16]
  415c1c:	mov	x19, x0
  415c20:	bl	4025f0 <malloc@plt>
  415c24:	cmp	x0, #0x0
  415c28:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  415c2c:	b.ne	415c3c <__fxstatat@plt+0x131ec>  // b.any
  415c30:	ldr	x19, [sp, #16]
  415c34:	ldp	x29, x30, [sp], #32
  415c38:	ret
  415c3c:	bl	415e08 <__fxstatat@plt+0x133b8>
  415c40:	stp	x29, x30, [sp, #-32]!
  415c44:	mov	x29, sp
  415c48:	str	x19, [sp, #16]
  415c4c:	mov	x19, x0
  415c50:	bl	4025f0 <malloc@plt>
  415c54:	cmp	x0, #0x0
  415c58:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  415c5c:	b.ne	415c6c <__fxstatat@plt+0x1321c>  // b.any
  415c60:	ldr	x19, [sp, #16]
  415c64:	ldp	x29, x30, [sp], #32
  415c68:	ret
  415c6c:	bl	415e08 <__fxstatat@plt+0x133b8>
  415c70:	stp	x29, x30, [sp, #-32]!
  415c74:	cmp	x1, #0x0
  415c78:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  415c7c:	mov	x29, sp
  415c80:	b.ne	415ca8 <__fxstatat@plt+0x13258>  // b.any
  415c84:	str	x19, [sp, #16]
  415c88:	mov	x19, x1
  415c8c:	bl	4026e0 <realloc@plt>
  415c90:	cmp	x0, #0x0
  415c94:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  415c98:	b.ne	415cb8 <__fxstatat@plt+0x13268>  // b.any
  415c9c:	ldr	x19, [sp, #16]
  415ca0:	ldp	x29, x30, [sp], #32
  415ca4:	ret
  415ca8:	bl	402840 <free@plt>
  415cac:	mov	x0, #0x0                   	// #0
  415cb0:	ldp	x29, x30, [sp], #32
  415cb4:	ret
  415cb8:	bl	415e08 <__fxstatat@plt+0x133b8>
  415cbc:	nop
  415cc0:	stp	x29, x30, [sp, #-16]!
  415cc4:	mov	x2, x1
  415cc8:	mov	x29, sp
  415ccc:	ldr	x1, [x1]
  415cd0:	cbz	x0, 415d00 <__fxstatat@plt+0x132b0>
  415cd4:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  415cd8:	movk	x3, #0x5553
  415cdc:	cmp	x1, x3
  415ce0:	b.hi	415d14 <__fxstatat@plt+0x132c4>  // b.pmore
  415ce4:	add	x3, x1, #0x1
  415ce8:	add	x1, x3, x1, lsr #1
  415cec:	str	x1, [x2]
  415cf0:	bl	4026e0 <realloc@plt>
  415cf4:	cbz	x0, 415d14 <__fxstatat@plt+0x132c4>
  415cf8:	ldp	x29, x30, [sp], #16
  415cfc:	ret
  415d00:	cmp	x1, #0x0
  415d04:	cbnz	x1, 415d10 <__fxstatat@plt+0x132c0>
  415d08:	mov	x1, #0x80                  	// #128
  415d0c:	b	415cec <__fxstatat@plt+0x1329c>
  415d10:	b.ge	415cec <__fxstatat@plt+0x1329c>  // b.tcont
  415d14:	bl	415e08 <__fxstatat@plt+0x133b8>
  415d18:	stp	x29, x30, [sp, #-32]!
  415d1c:	mov	x1, #0x1                   	// #1
  415d20:	mov	x29, sp
  415d24:	str	x19, [sp, #16]
  415d28:	mov	x19, x0
  415d2c:	bl	4026c0 <calloc@plt>
  415d30:	cmp	x0, #0x0
  415d34:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  415d38:	b.ne	415d48 <__fxstatat@plt+0x132f8>  // b.any
  415d3c:	ldr	x19, [sp, #16]
  415d40:	ldp	x29, x30, [sp], #32
  415d44:	ret
  415d48:	bl	415e08 <__fxstatat@plt+0x133b8>
  415d4c:	nop
  415d50:	umulh	x4, x0, x1
  415d54:	stp	x29, x30, [sp, #-16]!
  415d58:	mul	x2, x0, x1
  415d5c:	cmp	x4, #0x0
  415d60:	mov	x29, sp
  415d64:	cset	x3, ne  // ne = any
  415d68:	tbnz	x2, #63, 415d80 <__fxstatat@plt+0x13330>
  415d6c:	cbnz	x3, 415d80 <__fxstatat@plt+0x13330>
  415d70:	bl	4026c0 <calloc@plt>
  415d74:	cbz	x0, 415d80 <__fxstatat@plt+0x13330>
  415d78:	ldp	x29, x30, [sp], #16
  415d7c:	ret
  415d80:	bl	415e08 <__fxstatat@plt+0x133b8>
  415d84:	nop
  415d88:	stp	x29, x30, [sp, #-32]!
  415d8c:	mov	x29, sp
  415d90:	stp	x19, x20, [sp, #16]
  415d94:	mov	x19, x1
  415d98:	mov	x20, x0
  415d9c:	mov	x0, x1
  415da0:	bl	4025f0 <malloc@plt>
  415da4:	cmp	x0, #0x0
  415da8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  415dac:	b.ne	415dc4 <__fxstatat@plt+0x13374>  // b.any
  415db0:	mov	x2, x19
  415db4:	mov	x1, x20
  415db8:	ldp	x19, x20, [sp, #16]
  415dbc:	ldp	x29, x30, [sp], #32
  415dc0:	b	4023c0 <memcpy@plt>
  415dc4:	bl	415e08 <__fxstatat@plt+0x133b8>
  415dc8:	stp	x29, x30, [sp, #-32]!
  415dcc:	mov	x29, sp
  415dd0:	stp	x19, x20, [sp, #16]
  415dd4:	mov	x20, x0
  415dd8:	bl	402430 <strlen@plt>
  415ddc:	add	x19, x0, #0x1
  415de0:	mov	x0, x19
  415de4:	bl	4025f0 <malloc@plt>
  415de8:	cbz	x0, 415e00 <__fxstatat@plt+0x133b0>
  415dec:	mov	x2, x19
  415df0:	mov	x1, x20
  415df4:	ldp	x19, x20, [sp, #16]
  415df8:	ldp	x29, x30, [sp], #32
  415dfc:	b	4023c0 <memcpy@plt>
  415e00:	bl	415e08 <__fxstatat@plt+0x133b8>
  415e04:	nop
  415e08:	stp	x29, x30, [sp, #-32]!
  415e0c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  415e10:	mov	w2, #0x5                   	// #5
  415e14:	mov	x29, sp
  415e18:	str	x19, [sp, #16]
  415e1c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  415e20:	ldr	w19, [x0, #1328]
  415e24:	add	x1, x1, #0x590
  415e28:	mov	x0, #0x0                   	// #0
  415e2c:	bl	402970 <dcgettext@plt>
  415e30:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  415e34:	mov	x3, x0
  415e38:	add	x2, x2, #0x418
  415e3c:	mov	w0, w19
  415e40:	mov	w1, #0x0                   	// #0
  415e44:	bl	402490 <error@plt>
  415e48:	bl	402760 <abort@plt>
  415e4c:	nop
  415e50:	stp	x29, x30, [sp, #-80]!
  415e54:	mov	x29, sp
  415e58:	stp	x19, x20, [sp, #16]
  415e5c:	mov	w19, w6
  415e60:	stp	x21, x22, [sp, #32]
  415e64:	mov	x22, x5
  415e68:	mov	x21, x0
  415e6c:	stp	x23, x24, [sp, #48]
  415e70:	mov	x24, x2
  415e74:	mov	x23, x3
  415e78:	mov	w2, w1
  415e7c:	add	x3, sp, #0x48
  415e80:	mov	x1, #0x0                   	// #0
  415e84:	bl	4166e8 <__fxstatat@plt+0x13c98>
  415e88:	cbnz	w0, 415ec0 <__fxstatat@plt+0x13470>
  415e8c:	ldr	x20, [sp, #72]
  415e90:	cmp	x20, x24
  415e94:	ccmp	x20, x23, #0x2, cs  // cs = hs, nlast
  415e98:	b.ls	415f14 <__fxstatat@plt+0x134c4>  // b.plast
  415e9c:	bl	4029e0 <__errno_location@plt>
  415ea0:	mov	x1, #0x3fffffff            	// #1073741823
  415ea4:	cmp	x20, x1
  415ea8:	b.ls	415f2c <__fxstatat@plt+0x134dc>  // b.plast
  415eac:	mov	w20, #0x4b                  	// #75
  415eb0:	str	w20, [x0]
  415eb4:	cbnz	w19, 415eec <__fxstatat@plt+0x1349c>
  415eb8:	mov	w19, #0x1                   	// #1
  415ebc:	b	415eec <__fxstatat@plt+0x1349c>
  415ec0:	mov	w20, w0
  415ec4:	bl	4029e0 <__errno_location@plt>
  415ec8:	cmp	w20, #0x1
  415ecc:	b.eq	415f40 <__fxstatat@plt+0x134f0>  // b.none
  415ed0:	cmp	w20, #0x3
  415ed4:	b.eq	415f58 <__fxstatat@plt+0x13508>  // b.none
  415ed8:	ldr	w20, [x0]
  415edc:	cmp	w19, #0x0
  415ee0:	csinc	w19, w19, wzr, ne  // ne = any
  415ee4:	cmp	w20, #0x16
  415ee8:	csel	w20, w20, wzr, ne  // ne = any
  415eec:	mov	x0, x21
  415ef0:	bl	414e28 <__fxstatat@plt+0x123d8>
  415ef4:	mov	w1, w20
  415ef8:	mov	x4, x0
  415efc:	mov	x3, x22
  415f00:	mov	w0, w19
  415f04:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  415f08:	add	x2, x2, #0x4b0
  415f0c:	bl	402490 <error@plt>
  415f10:	ldr	x20, [sp, #72]
  415f14:	mov	x0, x20
  415f18:	ldp	x19, x20, [sp, #16]
  415f1c:	ldp	x21, x22, [sp, #32]
  415f20:	ldp	x23, x24, [sp, #48]
  415f24:	ldp	x29, x30, [sp], #80
  415f28:	ret
  415f2c:	mov	w20, #0x22                  	// #34
  415f30:	str	w20, [x0]
  415f34:	cbnz	w19, 415eec <__fxstatat@plt+0x1349c>
  415f38:	mov	w19, #0x1                   	// #1
  415f3c:	b	415eec <__fxstatat@plt+0x1349c>
  415f40:	cmp	w19, #0x0
  415f44:	mov	w1, #0x4b                  	// #75
  415f48:	csel	w19, w19, w20, ne  // ne = any
  415f4c:	mov	w20, w1
  415f50:	str	w1, [x0]
  415f54:	b	415eec <__fxstatat@plt+0x1349c>
  415f58:	str	wzr, [x0]
  415f5c:	mov	w20, #0x0                   	// #0
  415f60:	cbnz	w19, 415eec <__fxstatat@plt+0x1349c>
  415f64:	mov	w20, w19
  415f68:	mov	w19, #0x1                   	// #1
  415f6c:	b	415eec <__fxstatat@plt+0x1349c>
  415f70:	stp	x29, x30, [sp, #-80]!
  415f74:	mov	x29, sp
  415f78:	stp	x19, x20, [sp, #16]
  415f7c:	mov	w19, w5
  415f80:	stp	x21, x22, [sp, #32]
  415f84:	mov	x22, x4
  415f88:	mov	x21, x0
  415f8c:	mov	x4, x3
  415f90:	add	x3, sp, #0x48
  415f94:	stp	x23, x24, [sp, #48]
  415f98:	mov	x24, x1
  415f9c:	mov	x23, x2
  415fa0:	mov	x1, #0x0                   	// #0
  415fa4:	mov	w2, #0xa                   	// #10
  415fa8:	bl	4166e8 <__fxstatat@plt+0x13c98>
  415fac:	cbnz	w0, 415fe4 <__fxstatat@plt+0x13594>
  415fb0:	ldr	x20, [sp, #72]
  415fb4:	cmp	x24, x20
  415fb8:	ccmp	x23, x20, #0x0, ls  // ls = plast
  415fbc:	b.cs	416038 <__fxstatat@plt+0x135e8>  // b.hs, b.nlast
  415fc0:	bl	4029e0 <__errno_location@plt>
  415fc4:	mov	x1, #0x3fffffff            	// #1073741823
  415fc8:	cmp	x20, x1
  415fcc:	b.ls	416050 <__fxstatat@plt+0x13600>  // b.plast
  415fd0:	mov	w20, #0x4b                  	// #75
  415fd4:	str	w20, [x0]
  415fd8:	cbnz	w19, 416010 <__fxstatat@plt+0x135c0>
  415fdc:	mov	w19, #0x1                   	// #1
  415fe0:	b	416010 <__fxstatat@plt+0x135c0>
  415fe4:	mov	w20, w0
  415fe8:	bl	4029e0 <__errno_location@plt>
  415fec:	cmp	w20, #0x1
  415ff0:	b.eq	416064 <__fxstatat@plt+0x13614>  // b.none
  415ff4:	cmp	w20, #0x3
  415ff8:	b.eq	41607c <__fxstatat@plt+0x1362c>  // b.none
  415ffc:	ldr	w20, [x0]
  416000:	cmp	w19, #0x0
  416004:	csinc	w19, w19, wzr, ne  // ne = any
  416008:	cmp	w20, #0x16
  41600c:	csel	w20, w20, wzr, ne  // ne = any
  416010:	mov	x0, x21
  416014:	bl	414e28 <__fxstatat@plt+0x123d8>
  416018:	mov	w1, w20
  41601c:	mov	x4, x0
  416020:	mov	x3, x22
  416024:	mov	w0, w19
  416028:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3f80>
  41602c:	add	x2, x2, #0x4b0
  416030:	bl	402490 <error@plt>
  416034:	ldr	x20, [sp, #72]
  416038:	mov	x0, x20
  41603c:	ldp	x19, x20, [sp, #16]
  416040:	ldp	x21, x22, [sp, #32]
  416044:	ldp	x23, x24, [sp, #48]
  416048:	ldp	x29, x30, [sp], #80
  41604c:	ret
  416050:	mov	w20, #0x22                  	// #34
  416054:	str	w20, [x0]
  416058:	cbnz	w19, 416010 <__fxstatat@plt+0x135c0>
  41605c:	mov	w19, #0x1                   	// #1
  416060:	b	416010 <__fxstatat@plt+0x135c0>
  416064:	cmp	w19, #0x0
  416068:	mov	w1, #0x4b                  	// #75
  41606c:	csel	w19, w19, w20, ne  // ne = any
  416070:	mov	w20, w1
  416074:	str	w1, [x0]
  416078:	b	416010 <__fxstatat@plt+0x135c0>
  41607c:	str	wzr, [x0]
  416080:	mov	w20, #0x0                   	// #0
  416084:	cbnz	w19, 416010 <__fxstatat@plt+0x135c0>
  416088:	mov	w20, w19
  41608c:	mov	w19, #0x1                   	// #1
  416090:	b	416010 <__fxstatat@plt+0x135c0>
  416094:	nop
  416098:	stp	x29, x30, [sp, #-32]!
  41609c:	mov	x1, #0x0                   	// #0
  4160a0:	mov	x0, #0x0                   	// #0
  4160a4:	mov	x29, sp
  4160a8:	str	x19, [sp, #16]
  4160ac:	bl	402400 <getcwd@plt>
  4160b0:	mov	x19, x0
  4160b4:	cbz	x0, 4160c8 <__fxstatat@plt+0x13678>
  4160b8:	mov	x0, x19
  4160bc:	ldr	x19, [sp, #16]
  4160c0:	ldp	x29, x30, [sp], #32
  4160c4:	ret
  4160c8:	bl	4029e0 <__errno_location@plt>
  4160cc:	ldr	w0, [x0]
  4160d0:	cmp	w0, #0xc
  4160d4:	b.ne	4160b8 <__fxstatat@plt+0x13668>  // b.any
  4160d8:	bl	415e08 <__fxstatat@plt+0x133b8>
  4160dc:	nop
  4160e0:	stp	x29, x30, [sp, #-64]!
  4160e4:	mov	x0, #0x22                  	// #34
  4160e8:	mov	x29, sp
  4160ec:	stp	x19, x20, [sp, #16]
  4160f0:	mov	x19, #0x0                   	// #0
  4160f4:	str	x21, [sp, #32]
  4160f8:	str	x0, [sp, #56]
  4160fc:	bl	4029e0 <__errno_location@plt>
  416100:	mov	x21, x0
  416104:	nop
  416108:	mov	x0, x19
  41610c:	add	x1, sp, #0x38
  416110:	bl	415cc0 <__fxstatat@plt+0x13270>
  416114:	mov	x19, x0
  416118:	ldr	x1, [sp, #56]
  41611c:	sub	x20, x1, #0x2
  416120:	sub	x1, x1, #0x1
  416124:	strb	wzr, [x0, x20]
  416128:	str	wzr, [x21]
  41612c:	bl	402940 <gethostname@plt>
  416130:	cbnz	w0, 416150 <__fxstatat@plt+0x13700>
  416134:	ldrb	w0, [x19, x20]
  416138:	cbnz	w0, 416108 <__fxstatat@plt+0x136b8>
  41613c:	mov	x0, x19
  416140:	ldp	x19, x20, [sp, #16]
  416144:	ldr	x21, [sp, #32]
  416148:	ldp	x29, x30, [sp], #64
  41614c:	ret
  416150:	ldr	w20, [x21]
  416154:	cmp	w20, #0x24
  416158:	ccmp	w20, #0x0, #0x4, ne  // ne = any
  41615c:	cset	w1, ne  // ne = any
  416160:	cmp	w20, #0x16
  416164:	ccmp	w20, #0xc, #0x4, ne  // ne = any
  416168:	csel	w1, w1, wzr, ne  // ne = any
  41616c:	cbz	w1, 416108 <__fxstatat@plt+0x136b8>
  416170:	mov	x0, x19
  416174:	bl	402840 <free@plt>
  416178:	str	w20, [x21]
  41617c:	mov	x19, #0x0                   	// #0
  416180:	mov	x0, x19
  416184:	ldp	x19, x20, [sp, #16]
  416188:	ldr	x21, [sp, #32]
  41618c:	ldp	x29, x30, [sp], #64
  416190:	ret
  416194:	nop
  416198:	stp	x29, x30, [sp, #-112]!
  41619c:	cmp	w2, #0x24
  4161a0:	mov	x29, sp
  4161a4:	stp	x19, x20, [sp, #16]
  4161a8:	stp	x21, x22, [sp, #32]
  4161ac:	stp	x23, x24, [sp, #48]
  4161b0:	stp	x25, x26, [sp, #64]
  4161b4:	b.hi	416628 <__fxstatat@plt+0x13bd8>  // b.pmore
  4161b8:	cmp	x1, #0x0
  4161bc:	mov	x19, x0
  4161c0:	add	x0, sp, #0x68
  4161c4:	mov	w24, w2
  4161c8:	mov	x21, x3
  4161cc:	mov	x20, x4
  4161d0:	csel	x23, x0, x1, eq  // eq = none
  4161d4:	bl	4029e0 <__errno_location@plt>
  4161d8:	str	wzr, [x0]
  4161dc:	mov	x22, x0
  4161e0:	bl	402820 <__ctype_b_loc@plt>
  4161e4:	ldrb	w5, [x19]
  4161e8:	ldr	x6, [x0]
  4161ec:	ubfiz	x0, x5, #1, #8
  4161f0:	ldrh	w0, [x6, x0]
  4161f4:	tbz	w0, #13, 416210 <__fxstatat@plt+0x137c0>
  4161f8:	mov	x3, x19
  4161fc:	nop
  416200:	ldrb	w5, [x3, #1]!
  416204:	ubfiz	x4, x5, #1, #8
  416208:	ldrh	w4, [x6, x4]
  41620c:	tbnz	w4, #13, 416200 <__fxstatat@plt+0x137b0>
  416210:	cmp	w5, #0x2d
  416214:	b.eq	41628c <__fxstatat@plt+0x1383c>  // b.none
  416218:	mov	w2, w24
  41621c:	mov	x1, x23
  416220:	mov	x0, x19
  416224:	bl	402420 <strtoul@plt>
  416228:	ldr	x25, [x23]
  41622c:	mov	x24, x0
  416230:	cmp	x25, x19
  416234:	b.eq	416280 <__fxstatat@plt+0x13830>  // b.none
  416238:	ldr	w0, [x22]
  41623c:	cbz	w0, 416278 <__fxstatat@plt+0x13828>
  416240:	cmp	w0, #0x22
  416244:	mov	w26, #0x1                   	// #1
  416248:	b.ne	41628c <__fxstatat@plt+0x1383c>  // b.any
  41624c:	cbz	x20, 416258 <__fxstatat@plt+0x13808>
  416250:	ldrb	w22, [x25]
  416254:	cbnz	w22, 416350 <__fxstatat@plt+0x13900>
  416258:	str	x24, [x21]
  41625c:	mov	w0, w26
  416260:	ldp	x19, x20, [sp, #16]
  416264:	ldp	x21, x22, [sp, #32]
  416268:	ldp	x23, x24, [sp, #48]
  41626c:	ldp	x25, x26, [sp, #64]
  416270:	ldp	x29, x30, [sp], #112
  416274:	ret
  416278:	mov	w26, #0x0                   	// #0
  41627c:	b	41624c <__fxstatat@plt+0x137fc>
  416280:	cbz	x20, 41628c <__fxstatat@plt+0x1383c>
  416284:	ldrb	w22, [x19]
  416288:	cbnz	w22, 4162ac <__fxstatat@plt+0x1385c>
  41628c:	mov	w26, #0x4                   	// #4
  416290:	mov	w0, w26
  416294:	ldp	x19, x20, [sp, #16]
  416298:	ldp	x21, x22, [sp, #32]
  41629c:	ldp	x23, x24, [sp, #48]
  4162a0:	ldp	x25, x26, [sp, #64]
  4162a4:	ldp	x29, x30, [sp], #112
  4162a8:	ret
  4162ac:	mov	w1, w22
  4162b0:	mov	x0, x20
  4162b4:	mov	w26, #0x0                   	// #0
  4162b8:	mov	x24, #0x1                   	// #1
  4162bc:	bl	402880 <strchr@plt>
  4162c0:	cbz	x0, 41628c <__fxstatat@plt+0x1383c>
  4162c4:	sub	w2, w22, #0x45
  4162c8:	and	w2, w2, #0xff
  4162cc:	cmp	w2, #0x2f
  4162d0:	b.hi	416368 <__fxstatat@plt+0x13918>  // b.pmore
  4162d4:	mov	x6, #0x8945                	// #35141
  4162d8:	mov	x5, #0x1                   	// #1
  4162dc:	movk	x6, #0x30, lsl #16
  4162e0:	lsl	x2, x5, x2
  4162e4:	movk	x6, #0x8144, lsl #32
  4162e8:	mov	x19, #0x400                 	// #1024
  4162ec:	tst	x2, x6
  4162f0:	b.ne	4164ac <__fxstatat@plt+0x13a5c>  // b.any
  4162f4:	cmp	w22, #0x5a
  4162f8:	b.eq	4163b0 <__fxstatat@plt+0x13960>  // b.none
  4162fc:	b.hi	4163cc <__fxstatat@plt+0x1397c>  // b.pmore
  416300:	cmp	w22, #0x4d
  416304:	b.eq	41648c <__fxstatat@plt+0x13a3c>  // b.none
  416308:	b.hi	416394 <__fxstatat@plt+0x13944>  // b.pmore
  41630c:	cmp	w22, #0x45
  416310:	b.eq	4165f0 <__fxstatat@plt+0x13ba0>  // b.none
  416314:	b.ls	416374 <__fxstatat@plt+0x13924>  // b.plast
  416318:	cmp	w22, #0x47
  41631c:	b.eq	4163e8 <__fxstatat@plt+0x13998>  // b.none
  416320:	cmp	w22, #0x4b
  416324:	b.ne	416360 <__fxstatat@plt+0x13910>  // b.any
  416328:	umulh	x0, x24, x19
  41632c:	cbnz	x0, 4164a0 <__fxstatat@plt+0x13a50>
  416330:	mul	x24, x24, x19
  416334:	add	x0, x25, x5
  416338:	str	x0, [x23]
  41633c:	orr	w0, w26, #0x2
  416340:	ldrb	w1, [x25, x5]
  416344:	cmp	w1, #0x0
  416348:	csel	w26, w0, w26, ne  // ne = any
  41634c:	b	416258 <__fxstatat@plt+0x13808>
  416350:	mov	w1, w22
  416354:	mov	x0, x20
  416358:	bl	402880 <strchr@plt>
  41635c:	cbnz	x0, 4162c4 <__fxstatat@plt+0x13874>
  416360:	orr	w26, w26, #0x2
  416364:	b	416258 <__fxstatat@plt+0x13808>
  416368:	mov	x19, #0x400                 	// #1024
  41636c:	mov	x5, #0x1                   	// #1
  416370:	b	4162f4 <__fxstatat@plt+0x138a4>
  416374:	cmp	w22, #0x42
  416378:	b.ne	416360 <__fxstatat@plt+0x13910>  // b.any
  41637c:	lsr	x0, x24, #54
  416380:	lsl	x24, x24, #10
  416384:	cmp	x0, #0x0
  416388:	csinc	w26, w26, wzr, eq  // eq = none
  41638c:	csinv	x24, x24, xzr, eq  // eq = none
  416390:	b	416334 <__fxstatat@plt+0x138e4>
  416394:	cmp	w22, #0x54
  416398:	b.eq	416474 <__fxstatat@plt+0x13a24>  // b.none
  41639c:	cmp	w22, #0x59
  4163a0:	b.ne	416460 <__fxstatat@plt+0x13a10>  // b.any
  4163a4:	umulh	x0, x24, x19
  4163a8:	cbnz	x0, 4165f8 <__fxstatat@plt+0x13ba8>
  4163ac:	mul	x24, x19, x24
  4163b0:	umulh	x0, x24, x19
  4163b4:	cbnz	x0, 4165f8 <__fxstatat@plt+0x13ba8>
  4163b8:	mul	x24, x19, x24
  4163bc:	umulh	x0, x24, x19
  4163c0:	cbnz	x0, 4165f8 <__fxstatat@plt+0x13ba8>
  4163c4:	mul	x24, x19, x24
  4163c8:	b	416468 <__fxstatat@plt+0x13a18>
  4163cc:	cmp	w22, #0x6b
  4163d0:	b.eq	416328 <__fxstatat@plt+0x138d8>  // b.none
  4163d4:	b.hi	416438 <__fxstatat@plt+0x139e8>  // b.pmore
  4163d8:	cmp	w22, #0x63
  4163dc:	b.eq	416334 <__fxstatat@plt+0x138e4>  // b.none
  4163e0:	cmp	w22, #0x67
  4163e4:	b.ne	416418 <__fxstatat@plt+0x139c8>  // b.any
  4163e8:	umulh	x0, x24, x19
  4163ec:	cbnz	x0, 4165f8 <__fxstatat@plt+0x13ba8>
  4163f0:	mul	x24, x24, x19
  4163f4:	umulh	x0, x24, x19
  4163f8:	cbnz	x0, 4165f8 <__fxstatat@plt+0x13ba8>
  4163fc:	mul	x24, x24, x19
  416400:	umulh	x0, x24, x19
  416404:	cbnz	x0, 4165f8 <__fxstatat@plt+0x13ba8>
  416408:	mov	w0, #0x0                   	// #0
  41640c:	mul	x24, x24, x19
  416410:	orr	w26, w26, w0
  416414:	b	416334 <__fxstatat@plt+0x138e4>
  416418:	cmp	w22, #0x62
  41641c:	b.ne	416360 <__fxstatat@plt+0x13910>  // b.any
  416420:	lsr	x0, x24, #55
  416424:	lsl	x24, x24, #9
  416428:	cmp	x0, #0x0
  41642c:	csinc	w26, w26, wzr, eq  // eq = none
  416430:	csinv	x24, x24, xzr, eq  // eq = none
  416434:	b	416334 <__fxstatat@plt+0x138e4>
  416438:	cmp	w22, #0x74
  41643c:	b.eq	416474 <__fxstatat@plt+0x13a24>  // b.none
  416440:	cmp	w22, #0x77
  416444:	b.ne	416484 <__fxstatat@plt+0x13a34>  // b.any
  416448:	lsr	x0, x24, #63
  41644c:	lsl	x24, x24, #1
  416450:	cmp	x0, #0x0
  416454:	csinc	w26, w26, wzr, eq  // eq = none
  416458:	csinv	x24, x24, xzr, eq  // eq = none
  41645c:	b	416334 <__fxstatat@plt+0x138e4>
  416460:	cmp	w22, #0x50
  416464:	b.ne	416360 <__fxstatat@plt+0x13910>  // b.any
  416468:	umulh	x0, x24, x19
  41646c:	cbnz	x0, 4165f8 <__fxstatat@plt+0x13ba8>
  416470:	mul	x24, x24, x19
  416474:	umulh	x0, x24, x19
  416478:	cbnz	x0, 4165f8 <__fxstatat@plt+0x13ba8>
  41647c:	mul	x24, x24, x19
  416480:	b	4163e8 <__fxstatat@plt+0x13998>
  416484:	cmp	w22, #0x6d
  416488:	b.ne	416360 <__fxstatat@plt+0x13910>  // b.any
  41648c:	umulh	x0, x24, x19
  416490:	cbnz	x0, 4164a0 <__fxstatat@plt+0x13a50>
  416494:	mul	x24, x19, x24
  416498:	umulh	x0, x24, x19
  41649c:	cbz	x0, 416330 <__fxstatat@plt+0x138e0>
  4164a0:	mov	w26, #0x1                   	// #1
  4164a4:	mov	x24, #0xffffffffffffffff    	// #-1
  4164a8:	b	416334 <__fxstatat@plt+0x138e4>
  4164ac:	mov	x0, x20
  4164b0:	mov	w1, #0x30                  	// #48
  4164b4:	str	x5, [sp, #88]
  4164b8:	bl	402880 <strchr@plt>
  4164bc:	ldr	x5, [sp, #88]
  4164c0:	cbz	x0, 4162f4 <__fxstatat@plt+0x138a4>
  4164c4:	ldrb	w0, [x25, #1]
  4164c8:	cmp	w0, #0x44
  4164cc:	b.eq	416534 <__fxstatat@plt+0x13ae4>  // b.none
  4164d0:	cmp	w0, #0x69
  4164d4:	b.eq	416520 <__fxstatat@plt+0x13ad0>  // b.none
  4164d8:	cmp	w0, #0x42
  4164dc:	b.eq	416534 <__fxstatat@plt+0x13ae4>  // b.none
  4164e0:	cmp	w22, #0x5a
  4164e4:	b.eq	4163b0 <__fxstatat@plt+0x13960>  // b.none
  4164e8:	b.hi	416570 <__fxstatat@plt+0x13b20>  // b.pmore
  4164ec:	cmp	w22, #0x4d
  4164f0:	b.eq	41648c <__fxstatat@plt+0x13a3c>  // b.none
  4164f4:	b.hi	416554 <__fxstatat@plt+0x13b04>  // b.pmore
  4164f8:	cmp	w22, #0x45
  4164fc:	b.eq	4165e8 <__fxstatat@plt+0x13b98>  // b.none
  416500:	b.ls	416540 <__fxstatat@plt+0x13af0>  // b.plast
  416504:	cmp	w22, #0x47
  416508:	b.eq	416608 <__fxstatat@plt+0x13bb8>  // b.none
  41650c:	cmp	w22, #0x4b
  416510:	b.ne	416360 <__fxstatat@plt+0x13910>  // b.any
  416514:	mov	x5, #0x1                   	// #1
  416518:	mov	x19, #0x400                 	// #1024
  41651c:	b	416328 <__fxstatat@plt+0x138d8>
  416520:	ldrb	w1, [x25, #2]
  416524:	mov	x0, #0x3                   	// #3
  416528:	cmp	w1, #0x42
  41652c:	csel	x5, x5, x0, ne  // ne = any
  416530:	b	4162f4 <__fxstatat@plt+0x138a4>
  416534:	mov	x19, #0x3e8                 	// #1000
  416538:	mov	x5, #0x2                   	// #2
  41653c:	b	4162f4 <__fxstatat@plt+0x138a4>
  416540:	cmp	w22, #0x42
  416544:	mov	x5, #0x1                   	// #1
  416548:	b.eq	41637c <__fxstatat@plt+0x1392c>  // b.none
  41654c:	orr	w26, w26, #0x2
  416550:	b	416258 <__fxstatat@plt+0x13808>
  416554:	cmp	w22, #0x54
  416558:	b.eq	41661c <__fxstatat@plt+0x13bcc>  // b.none
  41655c:	cmp	w22, #0x59
  416560:	b.ne	41659c <__fxstatat@plt+0x13b4c>  // b.any
  416564:	mov	x5, #0x1                   	// #1
  416568:	mov	x19, #0x400                 	// #1024
  41656c:	b	4163a4 <__fxstatat@plt+0x13954>
  416570:	cmp	w22, #0x67
  416574:	b.eq	4163e8 <__fxstatat@plt+0x13998>  // b.none
  416578:	b.ls	4165cc <__fxstatat@plt+0x13b7c>  // b.plast
  41657c:	cmp	w22, #0x74
  416580:	b.eq	41661c <__fxstatat@plt+0x13bcc>  // b.none
  416584:	b.ls	4165b0 <__fxstatat@plt+0x13b60>  // b.plast
  416588:	cmp	w22, #0x77
  41658c:	mov	x5, #0x1                   	// #1
  416590:	b.eq	416448 <__fxstatat@plt+0x139f8>  // b.none
  416594:	orr	w26, w26, #0x2
  416598:	b	416258 <__fxstatat@plt+0x13808>
  41659c:	cmp	w22, #0x50
  4165a0:	b.ne	416360 <__fxstatat@plt+0x13910>  // b.any
  4165a4:	mov	x5, #0x1                   	// #1
  4165a8:	mov	x19, #0x400                 	// #1024
  4165ac:	b	416468 <__fxstatat@plt+0x13a18>
  4165b0:	cmp	w22, #0x6b
  4165b4:	b.eq	416514 <__fxstatat@plt+0x13ac4>  // b.none
  4165b8:	cmp	w22, #0x6d
  4165bc:	b.ne	416360 <__fxstatat@plt+0x13910>  // b.any
  4165c0:	mov	x5, #0x1                   	// #1
  4165c4:	mov	x19, #0x400                 	// #1024
  4165c8:	b	41648c <__fxstatat@plt+0x13a3c>
  4165cc:	cmp	w22, #0x62
  4165d0:	b.eq	416614 <__fxstatat@plt+0x13bc4>  // b.none
  4165d4:	cmp	w22, #0x63
  4165d8:	mov	x5, #0x1                   	// #1
  4165dc:	b.eq	416334 <__fxstatat@plt+0x138e4>  // b.none
  4165e0:	orr	w26, w26, #0x2
  4165e4:	b	416258 <__fxstatat@plt+0x13808>
  4165e8:	mov	x5, #0x1                   	// #1
  4165ec:	mov	x19, #0x400                 	// #1024
  4165f0:	umulh	x0, x24, x19
  4165f4:	cbz	x0, 4163c4 <__fxstatat@plt+0x13974>
  4165f8:	mov	w0, #0x1                   	// #1
  4165fc:	mov	x24, #0xffffffffffffffff    	// #-1
  416600:	orr	w26, w26, w0
  416604:	b	416334 <__fxstatat@plt+0x138e4>
  416608:	mov	x5, #0x1                   	// #1
  41660c:	mov	x19, #0x400                 	// #1024
  416610:	b	4163e8 <__fxstatat@plt+0x13998>
  416614:	mov	x5, #0x1                   	// #1
  416618:	b	416420 <__fxstatat@plt+0x139d0>
  41661c:	mov	x5, #0x1                   	// #1
  416620:	mov	x19, #0x400                 	// #1024
  416624:	b	416474 <__fxstatat@plt+0x13a24>
  416628:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0x6f80>
  41662c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  416630:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x6f80>
  416634:	add	x3, x3, #0x5e0
  416638:	add	x1, x1, #0x5a8
  41663c:	add	x0, x0, #0x5b8
  416640:	mov	w2, #0x54                  	// #84
  416644:	bl	4029d0 <__assert_fail@plt>
  416648:	stp	x29, x30, [sp, #-64]!
  41664c:	adrp	x5, 433000 <_obstack_memory_used@@Base+0x1bf80>
  416650:	sub	w0, w0, #0x1
  416654:	mov	x29, sp
  416658:	stp	x21, x22, [sp, #32]
  41665c:	cmp	w0, #0x3
  416660:	ldr	w21, [x5, #1328]
  416664:	stp	x19, x20, [sp, #16]
  416668:	b.hi	4166c0 <__fxstatat@plt+0x13c70>  // b.pmore
  41666c:	mov	w6, w1
  416670:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  416674:	add	x1, x1, #0x660
  416678:	mov	x20, x4
  41667c:	sxtw	x4, w6
  416680:	ldr	x1, [x1, w0, uxtw #3]
  416684:	tbnz	w6, #31, 4166c4 <__fxstatat@plt+0x13c74>
  416688:	lsl	x4, x4, #5
  41668c:	adrp	x19, 41e000 <_obstack_memory_used@@Base+0x6f80>
  416690:	add	x19, x19, #0x5f0
  416694:	ldr	x22, [x3, x4]
  416698:	mov	w2, #0x5                   	// #5
  41669c:	mov	x0, #0x0                   	// #0
  4166a0:	bl	402970 <dcgettext@plt>
  4166a4:	mov	x5, x20
  4166a8:	mov	x2, x0
  4166ac:	mov	x4, x22
  4166b0:	mov	x3, x19
  4166b4:	mov	w0, w21
  4166b8:	mov	w1, #0x0                   	// #0
  4166bc:	bl	402490 <error@plt>
  4166c0:	bl	402760 <abort@plt>
  4166c4:	adrp	x19, 41e000 <_obstack_memory_used@@Base+0x6f80>
  4166c8:	add	x19, x19, #0x5f0
  4166cc:	and	w2, w2, #0xff
  4166d0:	sub	x19, x19, x4
  4166d4:	add	x22, sp, #0x38
  4166d8:	strb	w2, [sp, #56]
  4166dc:	strb	wzr, [sp, #57]
  4166e0:	b	416698 <__fxstatat@plt+0x13c48>
  4166e4:	nop
  4166e8:	stp	x29, x30, [sp, #-112]!
  4166ec:	cmp	w2, #0x24
  4166f0:	mov	x29, sp
  4166f4:	stp	x19, x20, [sp, #16]
  4166f8:	stp	x21, x22, [sp, #32]
  4166fc:	stp	x23, x24, [sp, #48]
  416700:	stp	x25, x26, [sp, #64]
  416704:	b.hi	416b7c <__fxstatat@plt+0x1412c>  // b.pmore
  416708:	cmp	x1, #0x0
  41670c:	mov	x19, x0
  416710:	add	x0, sp, #0x68
  416714:	mov	w24, w2
  416718:	mov	x21, x3
  41671c:	mov	x20, x4
  416720:	csel	x23, x0, x1, eq  // eq = none
  416724:	bl	4029e0 <__errno_location@plt>
  416728:	str	wzr, [x0]
  41672c:	mov	x22, x0
  416730:	bl	402820 <__ctype_b_loc@plt>
  416734:	ldrb	w5, [x19]
  416738:	ldr	x6, [x0]
  41673c:	ubfiz	x0, x5, #1, #8
  416740:	ldrh	w0, [x6, x0]
  416744:	tbz	w0, #13, 416760 <__fxstatat@plt+0x13d10>
  416748:	mov	x3, x19
  41674c:	nop
  416750:	ldrb	w5, [x3, #1]!
  416754:	ubfiz	x4, x5, #1, #8
  416758:	ldrh	w4, [x6, x4]
  41675c:	tbnz	w4, #13, 416750 <__fxstatat@plt+0x13d00>
  416760:	cmp	w5, #0x2d
  416764:	b.eq	4167e0 <__fxstatat@plt+0x13d90>  // b.none
  416768:	mov	w2, w24
  41676c:	mov	x1, x23
  416770:	mov	x0, x19
  416774:	mov	w3, #0x0                   	// #0
  416778:	bl	4026b0 <__strtoul_internal@plt>
  41677c:	mov	x24, x0
  416780:	ldr	x25, [x23]
  416784:	cmp	x25, x19
  416788:	b.eq	4167d4 <__fxstatat@plt+0x13d84>  // b.none
  41678c:	ldr	w0, [x22]
  416790:	cbz	w0, 4167cc <__fxstatat@plt+0x13d7c>
  416794:	cmp	w0, #0x22
  416798:	mov	w26, #0x1                   	// #1
  41679c:	b.ne	4167e0 <__fxstatat@plt+0x13d90>  // b.any
  4167a0:	cbz	x20, 4167ac <__fxstatat@plt+0x13d5c>
  4167a4:	ldrb	w22, [x25]
  4167a8:	cbnz	w22, 4168a4 <__fxstatat@plt+0x13e54>
  4167ac:	str	x24, [x21]
  4167b0:	mov	w0, w26
  4167b4:	ldp	x19, x20, [sp, #16]
  4167b8:	ldp	x21, x22, [sp, #32]
  4167bc:	ldp	x23, x24, [sp, #48]
  4167c0:	ldp	x25, x26, [sp, #64]
  4167c4:	ldp	x29, x30, [sp], #112
  4167c8:	ret
  4167cc:	mov	w26, #0x0                   	// #0
  4167d0:	b	4167a0 <__fxstatat@plt+0x13d50>
  4167d4:	cbz	x20, 4167e0 <__fxstatat@plt+0x13d90>
  4167d8:	ldrb	w22, [x19]
  4167dc:	cbnz	w22, 416800 <__fxstatat@plt+0x13db0>
  4167e0:	mov	w26, #0x4                   	// #4
  4167e4:	mov	w0, w26
  4167e8:	ldp	x19, x20, [sp, #16]
  4167ec:	ldp	x21, x22, [sp, #32]
  4167f0:	ldp	x23, x24, [sp, #48]
  4167f4:	ldp	x25, x26, [sp, #64]
  4167f8:	ldp	x29, x30, [sp], #112
  4167fc:	ret
  416800:	mov	w1, w22
  416804:	mov	x0, x20
  416808:	mov	w26, #0x0                   	// #0
  41680c:	mov	x24, #0x1                   	// #1
  416810:	bl	402880 <strchr@plt>
  416814:	cbz	x0, 4167e0 <__fxstatat@plt+0x13d90>
  416818:	sub	w2, w22, #0x45
  41681c:	and	w2, w2, #0xff
  416820:	cmp	w2, #0x2f
  416824:	b.hi	4168bc <__fxstatat@plt+0x13e6c>  // b.pmore
  416828:	mov	x6, #0x8945                	// #35141
  41682c:	mov	x5, #0x1                   	// #1
  416830:	movk	x6, #0x30, lsl #16
  416834:	lsl	x2, x5, x2
  416838:	movk	x6, #0x8144, lsl #32
  41683c:	mov	x19, #0x400                 	// #1024
  416840:	tst	x2, x6
  416844:	b.ne	416a00 <__fxstatat@plt+0x13fb0>  // b.any
  416848:	cmp	w22, #0x5a
  41684c:	b.eq	416904 <__fxstatat@plt+0x13eb4>  // b.none
  416850:	b.hi	416920 <__fxstatat@plt+0x13ed0>  // b.pmore
  416854:	cmp	w22, #0x4d
  416858:	b.eq	4169e0 <__fxstatat@plt+0x13f90>  // b.none
  41685c:	b.hi	4168e8 <__fxstatat@plt+0x13e98>  // b.pmore
  416860:	cmp	w22, #0x45
  416864:	b.eq	416b44 <__fxstatat@plt+0x140f4>  // b.none
  416868:	b.ls	4168c8 <__fxstatat@plt+0x13e78>  // b.plast
  41686c:	cmp	w22, #0x47
  416870:	b.eq	41693c <__fxstatat@plt+0x13eec>  // b.none
  416874:	cmp	w22, #0x4b
  416878:	b.ne	4168b4 <__fxstatat@plt+0x13e64>  // b.any
  41687c:	umulh	x0, x24, x19
  416880:	cbnz	x0, 4169f4 <__fxstatat@plt+0x13fa4>
  416884:	mul	x24, x24, x19
  416888:	add	x0, x25, x5
  41688c:	str	x0, [x23]
  416890:	orr	w0, w26, #0x2
  416894:	ldrb	w1, [x25, x5]
  416898:	cmp	w1, #0x0
  41689c:	csel	w26, w0, w26, ne  // ne = any
  4168a0:	b	4167ac <__fxstatat@plt+0x13d5c>
  4168a4:	mov	w1, w22
  4168a8:	mov	x0, x20
  4168ac:	bl	402880 <strchr@plt>
  4168b0:	cbnz	x0, 416818 <__fxstatat@plt+0x13dc8>
  4168b4:	orr	w26, w26, #0x2
  4168b8:	b	4167ac <__fxstatat@plt+0x13d5c>
  4168bc:	mov	x19, #0x400                 	// #1024
  4168c0:	mov	x5, #0x1                   	// #1
  4168c4:	b	416848 <__fxstatat@plt+0x13df8>
  4168c8:	cmp	w22, #0x42
  4168cc:	b.ne	4168b4 <__fxstatat@plt+0x13e64>  // b.any
  4168d0:	lsr	x0, x24, #54
  4168d4:	lsl	x24, x24, #10
  4168d8:	cmp	x0, #0x0
  4168dc:	csinc	w26, w26, wzr, eq  // eq = none
  4168e0:	csinv	x24, x24, xzr, eq  // eq = none
  4168e4:	b	416888 <__fxstatat@plt+0x13e38>
  4168e8:	cmp	w22, #0x54
  4168ec:	b.eq	4169c8 <__fxstatat@plt+0x13f78>  // b.none
  4168f0:	cmp	w22, #0x59
  4168f4:	b.ne	4169b4 <__fxstatat@plt+0x13f64>  // b.any
  4168f8:	umulh	x0, x24, x19
  4168fc:	cbnz	x0, 416b4c <__fxstatat@plt+0x140fc>
  416900:	mul	x24, x19, x24
  416904:	umulh	x0, x24, x19
  416908:	cbnz	x0, 416b4c <__fxstatat@plt+0x140fc>
  41690c:	mul	x24, x19, x24
  416910:	umulh	x0, x24, x19
  416914:	cbnz	x0, 416b4c <__fxstatat@plt+0x140fc>
  416918:	mul	x24, x19, x24
  41691c:	b	4169bc <__fxstatat@plt+0x13f6c>
  416920:	cmp	w22, #0x6b
  416924:	b.eq	41687c <__fxstatat@plt+0x13e2c>  // b.none
  416928:	b.hi	41698c <__fxstatat@plt+0x13f3c>  // b.pmore
  41692c:	cmp	w22, #0x63
  416930:	b.eq	416888 <__fxstatat@plt+0x13e38>  // b.none
  416934:	cmp	w22, #0x67
  416938:	b.ne	41696c <__fxstatat@plt+0x13f1c>  // b.any
  41693c:	umulh	x0, x24, x19
  416940:	cbnz	x0, 416b4c <__fxstatat@plt+0x140fc>
  416944:	mul	x24, x24, x19
  416948:	umulh	x0, x24, x19
  41694c:	cbnz	x0, 416b4c <__fxstatat@plt+0x140fc>
  416950:	mul	x24, x24, x19
  416954:	umulh	x0, x24, x19
  416958:	cbnz	x0, 416b4c <__fxstatat@plt+0x140fc>
  41695c:	mov	w0, #0x0                   	// #0
  416960:	mul	x24, x24, x19
  416964:	orr	w26, w26, w0
  416968:	b	416888 <__fxstatat@plt+0x13e38>
  41696c:	cmp	w22, #0x62
  416970:	b.ne	4168b4 <__fxstatat@plt+0x13e64>  // b.any
  416974:	lsr	x0, x24, #55
  416978:	lsl	x24, x24, #9
  41697c:	cmp	x0, #0x0
  416980:	csinc	w26, w26, wzr, eq  // eq = none
  416984:	csinv	x24, x24, xzr, eq  // eq = none
  416988:	b	416888 <__fxstatat@plt+0x13e38>
  41698c:	cmp	w22, #0x74
  416990:	b.eq	4169c8 <__fxstatat@plt+0x13f78>  // b.none
  416994:	cmp	w22, #0x77
  416998:	b.ne	4169d8 <__fxstatat@plt+0x13f88>  // b.any
  41699c:	lsr	x0, x24, #63
  4169a0:	lsl	x24, x24, #1
  4169a4:	cmp	x0, #0x0
  4169a8:	csinc	w26, w26, wzr, eq  // eq = none
  4169ac:	csinv	x24, x24, xzr, eq  // eq = none
  4169b0:	b	416888 <__fxstatat@plt+0x13e38>
  4169b4:	cmp	w22, #0x50
  4169b8:	b.ne	4168b4 <__fxstatat@plt+0x13e64>  // b.any
  4169bc:	umulh	x0, x24, x19
  4169c0:	cbnz	x0, 416b4c <__fxstatat@plt+0x140fc>
  4169c4:	mul	x24, x24, x19
  4169c8:	umulh	x0, x24, x19
  4169cc:	cbnz	x0, 416b4c <__fxstatat@plt+0x140fc>
  4169d0:	mul	x24, x24, x19
  4169d4:	b	41693c <__fxstatat@plt+0x13eec>
  4169d8:	cmp	w22, #0x6d
  4169dc:	b.ne	4168b4 <__fxstatat@plt+0x13e64>  // b.any
  4169e0:	umulh	x0, x24, x19
  4169e4:	cbnz	x0, 4169f4 <__fxstatat@plt+0x13fa4>
  4169e8:	mul	x24, x19, x24
  4169ec:	umulh	x0, x24, x19
  4169f0:	cbz	x0, 416884 <__fxstatat@plt+0x13e34>
  4169f4:	mov	w26, #0x1                   	// #1
  4169f8:	mov	x24, #0xffffffffffffffff    	// #-1
  4169fc:	b	416888 <__fxstatat@plt+0x13e38>
  416a00:	mov	x0, x20
  416a04:	mov	w1, #0x30                  	// #48
  416a08:	str	x5, [sp, #88]
  416a0c:	bl	402880 <strchr@plt>
  416a10:	ldr	x5, [sp, #88]
  416a14:	cbz	x0, 416848 <__fxstatat@plt+0x13df8>
  416a18:	ldrb	w0, [x25, #1]
  416a1c:	cmp	w0, #0x44
  416a20:	b.eq	416a88 <__fxstatat@plt+0x14038>  // b.none
  416a24:	cmp	w0, #0x69
  416a28:	b.eq	416a74 <__fxstatat@plt+0x14024>  // b.none
  416a2c:	cmp	w0, #0x42
  416a30:	b.eq	416a88 <__fxstatat@plt+0x14038>  // b.none
  416a34:	cmp	w22, #0x5a
  416a38:	b.eq	416904 <__fxstatat@plt+0x13eb4>  // b.none
  416a3c:	b.hi	416ac4 <__fxstatat@plt+0x14074>  // b.pmore
  416a40:	cmp	w22, #0x4d
  416a44:	b.eq	4169e0 <__fxstatat@plt+0x13f90>  // b.none
  416a48:	b.hi	416aa8 <__fxstatat@plt+0x14058>  // b.pmore
  416a4c:	cmp	w22, #0x45
  416a50:	b.eq	416b3c <__fxstatat@plt+0x140ec>  // b.none
  416a54:	b.ls	416a94 <__fxstatat@plt+0x14044>  // b.plast
  416a58:	cmp	w22, #0x47
  416a5c:	b.eq	416b5c <__fxstatat@plt+0x1410c>  // b.none
  416a60:	cmp	w22, #0x4b
  416a64:	b.ne	4168b4 <__fxstatat@plt+0x13e64>  // b.any
  416a68:	mov	x5, #0x1                   	// #1
  416a6c:	mov	x19, #0x400                 	// #1024
  416a70:	b	41687c <__fxstatat@plt+0x13e2c>
  416a74:	ldrb	w1, [x25, #2]
  416a78:	mov	x0, #0x3                   	// #3
  416a7c:	cmp	w1, #0x42
  416a80:	csel	x5, x5, x0, ne  // ne = any
  416a84:	b	416848 <__fxstatat@plt+0x13df8>
  416a88:	mov	x19, #0x3e8                 	// #1000
  416a8c:	mov	x5, #0x2                   	// #2
  416a90:	b	416848 <__fxstatat@plt+0x13df8>
  416a94:	cmp	w22, #0x42
  416a98:	mov	x5, #0x1                   	// #1
  416a9c:	b.eq	4168d0 <__fxstatat@plt+0x13e80>  // b.none
  416aa0:	orr	w26, w26, #0x2
  416aa4:	b	4167ac <__fxstatat@plt+0x13d5c>
  416aa8:	cmp	w22, #0x54
  416aac:	b.eq	416b70 <__fxstatat@plt+0x14120>  // b.none
  416ab0:	cmp	w22, #0x59
  416ab4:	b.ne	416af0 <__fxstatat@plt+0x140a0>  // b.any
  416ab8:	mov	x5, #0x1                   	// #1
  416abc:	mov	x19, #0x400                 	// #1024
  416ac0:	b	4168f8 <__fxstatat@plt+0x13ea8>
  416ac4:	cmp	w22, #0x67
  416ac8:	b.eq	41693c <__fxstatat@plt+0x13eec>  // b.none
  416acc:	b.ls	416b20 <__fxstatat@plt+0x140d0>  // b.plast
  416ad0:	cmp	w22, #0x74
  416ad4:	b.eq	416b70 <__fxstatat@plt+0x14120>  // b.none
  416ad8:	b.ls	416b04 <__fxstatat@plt+0x140b4>  // b.plast
  416adc:	cmp	w22, #0x77
  416ae0:	mov	x5, #0x1                   	// #1
  416ae4:	b.eq	41699c <__fxstatat@plt+0x13f4c>  // b.none
  416ae8:	orr	w26, w26, #0x2
  416aec:	b	4167ac <__fxstatat@plt+0x13d5c>
  416af0:	cmp	w22, #0x50
  416af4:	b.ne	4168b4 <__fxstatat@plt+0x13e64>  // b.any
  416af8:	mov	x5, #0x1                   	// #1
  416afc:	mov	x19, #0x400                 	// #1024
  416b00:	b	4169bc <__fxstatat@plt+0x13f6c>
  416b04:	cmp	w22, #0x6b
  416b08:	b.eq	416a68 <__fxstatat@plt+0x14018>  // b.none
  416b0c:	cmp	w22, #0x6d
  416b10:	b.ne	4168b4 <__fxstatat@plt+0x13e64>  // b.any
  416b14:	mov	x5, #0x1                   	// #1
  416b18:	mov	x19, #0x400                 	// #1024
  416b1c:	b	4169e0 <__fxstatat@plt+0x13f90>
  416b20:	cmp	w22, #0x62
  416b24:	b.eq	416b68 <__fxstatat@plt+0x14118>  // b.none
  416b28:	cmp	w22, #0x63
  416b2c:	mov	x5, #0x1                   	// #1
  416b30:	b.eq	416888 <__fxstatat@plt+0x13e38>  // b.none
  416b34:	orr	w26, w26, #0x2
  416b38:	b	4167ac <__fxstatat@plt+0x13d5c>
  416b3c:	mov	x5, #0x1                   	// #1
  416b40:	mov	x19, #0x400                 	// #1024
  416b44:	umulh	x0, x24, x19
  416b48:	cbz	x0, 416918 <__fxstatat@plt+0x13ec8>
  416b4c:	mov	w0, #0x1                   	// #1
  416b50:	mov	x24, #0xffffffffffffffff    	// #-1
  416b54:	orr	w26, w26, w0
  416b58:	b	416888 <__fxstatat@plt+0x13e38>
  416b5c:	mov	x5, #0x1                   	// #1
  416b60:	mov	x19, #0x400                 	// #1024
  416b64:	b	41693c <__fxstatat@plt+0x13eec>
  416b68:	mov	x5, #0x1                   	// #1
  416b6c:	b	416974 <__fxstatat@plt+0x13f24>
  416b70:	mov	x5, #0x1                   	// #1
  416b74:	mov	x19, #0x400                 	// #1024
  416b78:	b	4169c8 <__fxstatat@plt+0x13f78>
  416b7c:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0x6f80>
  416b80:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  416b84:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x6f80>
  416b88:	add	x3, x3, #0x680
  416b8c:	add	x1, x1, #0x5a8
  416b90:	add	x0, x0, #0x5b8
  416b94:	mov	w2, #0x54                  	// #84
  416b98:	bl	4029d0 <__assert_fail@plt>
  416b9c:	nop
  416ba0:	stp	x29, x30, [sp, #-64]!
  416ba4:	cmp	x0, #0x0
  416ba8:	add	x4, sp, #0x3c
  416bac:	mov	x29, sp
  416bb0:	stp	x19, x20, [sp, #16]
  416bb4:	csel	x19, x4, x0, eq  // eq = none
  416bb8:	mov	x20, x2
  416bbc:	mov	x0, x19
  416bc0:	str	x21, [sp, #32]
  416bc4:	mov	x21, x1
  416bc8:	bl	4023b0 <mbrtowc@plt>
  416bcc:	cmp	x20, #0x0
  416bd0:	mov	x20, x0
  416bd4:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  416bd8:	b.hi	416bf0 <__fxstatat@plt+0x141a0>  // b.pmore
  416bdc:	mov	x0, x20
  416be0:	ldp	x19, x20, [sp, #16]
  416be4:	ldr	x21, [sp, #32]
  416be8:	ldp	x29, x30, [sp], #64
  416bec:	ret
  416bf0:	mov	w0, #0x0                   	// #0
  416bf4:	bl	40cef8 <__fxstatat@plt+0xa4a8>
  416bf8:	tst	w0, #0xff
  416bfc:	b.ne	416bdc <__fxstatat@plt+0x1418c>  // b.any
  416c00:	ldrb	w0, [x21]
  416c04:	mov	x20, #0x1                   	// #1
  416c08:	str	w0, [x19]
  416c0c:	mov	x0, x20
  416c10:	ldp	x19, x20, [sp, #16]
  416c14:	ldr	x21, [sp, #32]
  416c18:	ldp	x29, x30, [sp], #64
  416c1c:	ret
  416c20:	stp	x29, x30, [sp, #-32]!
  416c24:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  416c28:	mov	w2, #0x5                   	// #5
  416c2c:	mov	x29, sp
  416c30:	str	x19, [sp, #16]
  416c34:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  416c38:	ldr	x19, [x0, #1448]
  416c3c:	add	x1, x1, #0x590
  416c40:	mov	x0, #0x0                   	// #0
  416c44:	bl	402970 <dcgettext@plt>
  416c48:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0x6f80>
  416c4c:	mov	x3, x0
  416c50:	add	x2, x2, #0x250
  416c54:	mov	x0, x19
  416c58:	mov	w1, #0x1                   	// #1
  416c5c:	bl	4027e0 <__fprintf_chk@plt>
  416c60:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  416c64:	ldr	w0, [x0, #1328]
  416c68:	bl	402460 <exit@plt>
  416c6c:	nop

0000000000416c70 <_obstack_begin@@Base>:
  416c70:	stp	x29, x30, [sp, #-48]!
  416c74:	mov	x29, sp
  416c78:	stp	x19, x20, [sp, #16]
  416c7c:	mov	x19, x0
  416c80:	ldrb	w0, [x0, #80]
  416c84:	str	x21, [sp, #32]
  416c88:	and	w0, w0, #0xfffffffe
  416c8c:	stp	x3, x4, [x19, #56]
  416c90:	strb	w0, [x19, #80]
  416c94:	cbz	x2, 416d18 <_obstack_begin@@Base+0xa8>
  416c98:	ldrb	w0, [x19, #80]
  416c9c:	cmp	x1, #0x0
  416ca0:	sub	x21, x2, #0x1
  416ca4:	mov	x20, x2
  416ca8:	mov	x2, #0xfe0                 	// #4064
  416cac:	csel	x1, x1, x2, ne  // ne = any
  416cb0:	str	x1, [x19]
  416cb4:	str	x21, [x19, #48]
  416cb8:	tbz	w0, #0, 416d3c <_obstack_begin@@Base+0xcc>
  416cbc:	ldr	x0, [x19, #72]
  416cc0:	blr	x3
  416cc4:	mov	x1, x0
  416cc8:	str	x1, [x19, #8]
  416ccc:	cbz	x1, 416d4c <_obstack_begin@@Base+0xdc>
  416cd0:	add	x2, x1, #0x10
  416cd4:	neg	x20, x20
  416cd8:	ldr	x0, [x19]
  416cdc:	add	x2, x2, x21
  416ce0:	and	x20, x2, x20
  416ce4:	ldr	x21, [sp, #32]
  416ce8:	stp	x20, x20, [x19, #16]
  416cec:	add	x2, x1, x0
  416cf0:	str	x2, [x1]
  416cf4:	mov	w0, #0x1                   	// #1
  416cf8:	str	x2, [x19, #32]
  416cfc:	ldrb	w2, [x19, #80]
  416d00:	str	xzr, [x1, #8]
  416d04:	and	w1, w2, #0xfffffff9
  416d08:	strb	w1, [x19, #80]
  416d0c:	ldp	x19, x20, [sp, #16]
  416d10:	ldp	x29, x30, [sp], #48
  416d14:	ret
  416d18:	ldrb	w0, [x19, #80]
  416d1c:	cmp	x1, #0x0
  416d20:	mov	x21, #0xf                   	// #15
  416d24:	mov	x2, #0xfe0                 	// #4064
  416d28:	csel	x1, x1, x2, ne  // ne = any
  416d2c:	str	x1, [x19]
  416d30:	str	x21, [x19, #48]
  416d34:	mov	x20, #0x10                  	// #16
  416d38:	tbnz	w0, #0, 416cbc <_obstack_begin@@Base+0x4c>
  416d3c:	mov	x0, x1
  416d40:	blr	x3
  416d44:	mov	x1, x0
  416d48:	b	416cc8 <_obstack_begin@@Base+0x58>
  416d4c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  416d50:	ldr	x0, [x0, #1424]
  416d54:	blr	x0

0000000000416d58 <_obstack_begin_1@@Base>:
  416d58:	stp	x29, x30, [sp, #-48]!
  416d5c:	mov	x29, sp
  416d60:	stp	x19, x20, [sp, #16]
  416d64:	mov	x19, x0
  416d68:	mov	x0, x5
  416d6c:	ldrb	w5, [x19, #80]
  416d70:	str	x21, [sp, #32]
  416d74:	orr	w5, w5, #0x1
  416d78:	stp	x3, x4, [x19, #56]
  416d7c:	str	x0, [x19, #72]
  416d80:	strb	w5, [x19, #80]
  416d84:	cbz	x2, 416e04 <_obstack_begin_1@@Base+0xac>
  416d88:	sub	x21, x2, #0x1
  416d8c:	mov	x20, x2
  416d90:	ldrb	w2, [x19, #80]
  416d94:	cmp	x1, #0x0
  416d98:	mov	x4, #0xfe0                 	// #4064
  416d9c:	csel	x1, x1, x4, ne  // ne = any
  416da0:	str	x1, [x19]
  416da4:	str	x21, [x19, #48]
  416da8:	tbz	w2, #0, 416e28 <_obstack_begin_1@@Base+0xd0>
  416dac:	blr	x3
  416db0:	mov	x1, x0
  416db4:	str	x1, [x19, #8]
  416db8:	cbz	x1, 416e38 <_obstack_begin_1@@Base+0xe0>
  416dbc:	add	x2, x1, #0x10
  416dc0:	neg	x20, x20
  416dc4:	ldr	x0, [x19]
  416dc8:	add	x2, x2, x21
  416dcc:	and	x20, x2, x20
  416dd0:	ldr	x21, [sp, #32]
  416dd4:	stp	x20, x20, [x19, #16]
  416dd8:	add	x2, x1, x0
  416ddc:	str	x2, [x1]
  416de0:	mov	w0, #0x1                   	// #1
  416de4:	str	x2, [x19, #32]
  416de8:	ldrb	w2, [x19, #80]
  416dec:	str	xzr, [x1, #8]
  416df0:	and	w1, w2, #0xfffffff9
  416df4:	strb	w1, [x19, #80]
  416df8:	ldp	x19, x20, [sp, #16]
  416dfc:	ldp	x29, x30, [sp], #48
  416e00:	ret
  416e04:	ldrb	w2, [x19, #80]
  416e08:	cmp	x1, #0x0
  416e0c:	mov	x21, #0xf                   	// #15
  416e10:	mov	x4, #0xfe0                 	// #4064
  416e14:	csel	x1, x1, x4, ne  // ne = any
  416e18:	str	x1, [x19]
  416e1c:	str	x21, [x19, #48]
  416e20:	mov	x20, #0x10                  	// #16
  416e24:	tbnz	w2, #0, 416dac <_obstack_begin_1@@Base+0x54>
  416e28:	mov	x0, x1
  416e2c:	blr	x3
  416e30:	mov	x1, x0
  416e34:	b	416db4 <_obstack_begin_1@@Base+0x5c>
  416e38:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  416e3c:	ldr	x0, [x0, #1424]
  416e40:	blr	x0
  416e44:	nop

0000000000416e48 <_obstack_newchunk@@Base>:
  416e48:	stp	x29, x30, [sp, #-64]!
  416e4c:	mov	x29, sp
  416e50:	stp	x21, x22, [sp, #32]
  416e54:	ldp	x2, x21, [x0, #16]
  416e58:	stp	x19, x20, [sp, #16]
  416e5c:	mov	x19, x0
  416e60:	ldr	x3, [x0, #48]
  416e64:	ldr	x0, [x0]
  416e68:	sub	x21, x21, x2
  416e6c:	adds	x1, x21, x1
  416e70:	str	x23, [sp, #48]
  416e74:	cset	x2, cs  // cs = hs, nlast
  416e78:	lsr	x20, x21, #3
  416e7c:	adds	x3, x3, x1
  416e80:	add	x20, x20, #0x64
  416e84:	cset	x1, cs  // cs = hs, nlast
  416e88:	cmp	x0, x3
  416e8c:	csel	x0, x0, x3, cs  // cs = hs, nlast
  416e90:	add	x3, x20, x3
  416e94:	cmp	x0, x3
  416e98:	csel	x20, x0, x3, cs  // cs = hs, nlast
  416e9c:	cmp	x2, #0x0
  416ea0:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  416ea4:	ldr	x23, [x19, #8]
  416ea8:	b.ne	416f88 <_obstack_newchunk@@Base+0x140>  // b.any
  416eac:	ldrb	w0, [x19, #80]
  416eb0:	ldr	x2, [x19, #56]
  416eb4:	tbz	w0, #0, 416f4c <_obstack_newchunk@@Base+0x104>
  416eb8:	ldr	x0, [x19, #72]
  416ebc:	mov	x1, x20
  416ec0:	blr	x2
  416ec4:	mov	x22, x0
  416ec8:	cbz	x22, 416f88 <_obstack_newchunk@@Base+0x140>
  416ecc:	mov	x3, x22
  416ed0:	str	x22, [x19, #8]
  416ed4:	ldr	x1, [x19, #16]
  416ed8:	add	x20, x22, x20
  416edc:	ldr	x0, [x19, #48]
  416ee0:	str	x23, [x22, #8]
  416ee4:	str	x20, [x19, #32]
  416ee8:	mov	x2, x21
  416eec:	str	x20, [x3], #16
  416ef0:	add	x20, x3, x0
  416ef4:	bic	x20, x20, x0
  416ef8:	mov	x0, x20
  416efc:	bl	4023c0 <memcpy@plt>
  416f00:	ldrb	w2, [x19, #80]
  416f04:	tbnz	w2, #1, 416f24 <_obstack_newchunk@@Base+0xdc>
  416f08:	ldr	x1, [x19, #48]
  416f0c:	add	x0, x23, #0x10
  416f10:	ldr	x3, [x19, #16]
  416f14:	add	x0, x0, x1
  416f18:	bic	x0, x0, x1
  416f1c:	cmp	x3, x0
  416f20:	b.eq	416f5c <_obstack_newchunk@@Base+0x114>  // b.none
  416f24:	ldrb	w0, [x19, #80]
  416f28:	add	x21, x20, x21
  416f2c:	ldr	x23, [sp, #48]
  416f30:	and	w0, w0, #0xfffffffd
  416f34:	stp	x20, x21, [x19, #16]
  416f38:	strb	w0, [x19, #80]
  416f3c:	ldp	x19, x20, [sp, #16]
  416f40:	ldp	x21, x22, [sp, #32]
  416f44:	ldp	x29, x30, [sp], #64
  416f48:	ret
  416f4c:	mov	x0, x20
  416f50:	blr	x2
  416f54:	mov	x22, x0
  416f58:	b	416ec8 <_obstack_newchunk@@Base+0x80>
  416f5c:	ldr	x0, [x23, #8]
  416f60:	ldr	x3, [x19, #64]
  416f64:	str	x0, [x22, #8]
  416f68:	tbz	w2, #0, 416f7c <_obstack_newchunk@@Base+0x134>
  416f6c:	ldr	x0, [x19, #72]
  416f70:	mov	x1, x23
  416f74:	blr	x3
  416f78:	b	416f24 <_obstack_newchunk@@Base+0xdc>
  416f7c:	mov	x0, x23
  416f80:	blr	x3
  416f84:	b	416f24 <_obstack_newchunk@@Base+0xdc>
  416f88:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x1bf80>
  416f8c:	ldr	x0, [x0, #1424]
  416f90:	blr	x0
  416f94:	nop

0000000000416f98 <_obstack_allocated_p@@Base>:
  416f98:	ldr	x0, [x0, #8]
  416f9c:	cbz	x0, 416fc0 <_obstack_allocated_p@@Base+0x28>
  416fa0:	cmp	x1, x0
  416fa4:	b.ls	416fb4 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  416fa8:	ldr	x2, [x0]
  416fac:	cmp	x2, x1
  416fb0:	b.cs	416fc4 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  416fb4:	ldr	x0, [x0, #8]
  416fb8:	cbnz	x0, 416fa0 <_obstack_allocated_p@@Base+0x8>
  416fbc:	mov	w0, #0x0                   	// #0
  416fc0:	ret
  416fc4:	mov	w0, #0x1                   	// #1
  416fc8:	ret
  416fcc:	nop

0000000000416fd0 <_obstack_free@@Base>:
  416fd0:	stp	x29, x30, [sp, #-48]!
  416fd4:	mov	x29, sp
  416fd8:	str	x21, [sp, #32]
  416fdc:	mov	x21, x1
  416fe0:	ldr	x1, [x0, #8]
  416fe4:	cbz	x1, 417050 <_obstack_free@@Base+0x80>
  416fe8:	stp	x19, x20, [sp, #16]
  416fec:	mov	x19, x0
  416ff0:	cmp	x1, x21
  416ff4:	b.cs	417004 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  416ff8:	ldr	x0, [x1]
  416ffc:	cmp	x0, x21
  417000:	b.cs	417060 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  417004:	ldrb	w0, [x19, #80]
  417008:	ldr	x20, [x1, #8]
  41700c:	ldr	x2, [x19, #64]
  417010:	tbz	w0, #0, 417034 <_obstack_free@@Base+0x64>
  417014:	ldr	x0, [x19, #72]
  417018:	blr	x2
  41701c:	ldrb	w0, [x19, #80]
  417020:	orr	w0, w0, #0x2
  417024:	strb	w0, [x19, #80]
  417028:	cbz	x20, 41704c <_obstack_free@@Base+0x7c>
  41702c:	mov	x1, x20
  417030:	b	416ff0 <_obstack_free@@Base+0x20>
  417034:	mov	x0, x1
  417038:	blr	x2
  41703c:	ldrb	w0, [x19, #80]
  417040:	orr	w0, w0, #0x2
  417044:	strb	w0, [x19, #80]
  417048:	cbnz	x20, 41702c <_obstack_free@@Base+0x5c>
  41704c:	ldp	x19, x20, [sp, #16]
  417050:	cbnz	x21, 417078 <_obstack_free@@Base+0xa8>
  417054:	ldr	x21, [sp, #32]
  417058:	ldp	x29, x30, [sp], #48
  41705c:	ret
  417060:	stp	x1, x21, [x19, #8]
  417064:	stp	x21, x0, [x19, #24]
  417068:	ldp	x19, x20, [sp, #16]
  41706c:	ldr	x21, [sp, #32]
  417070:	ldp	x29, x30, [sp], #48
  417074:	ret
  417078:	stp	x19, x20, [sp, #16]
  41707c:	bl	402760 <abort@plt>

0000000000417080 <_obstack_memory_used@@Base>:
  417080:	ldr	x1, [x0, #8]
  417084:	mov	x0, #0x0                   	// #0
  417088:	cbz	x1, 4170a4 <_obstack_memory_used@@Base+0x24>
  41708c:	nop
  417090:	ldr	x2, [x1]
  417094:	sub	x2, x2, x1
  417098:	ldr	x1, [x1, #8]
  41709c:	add	x0, x0, x2
  4170a0:	cbnz	x1, 417090 <_obstack_memory_used@@Base+0x10>
  4170a4:	ret
  4170a8:	stp	x29, x30, [sp, #-64]!
  4170ac:	mov	x29, sp
  4170b0:	stp	x21, x22, [sp, #32]
  4170b4:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0x3f80>
  4170b8:	add	x22, x22, #0x6c8
  4170bc:	mov	x21, x0
  4170c0:	mov	x0, x22
  4170c4:	stp	x19, x20, [sp, #16]
  4170c8:	bl	4029f0 <getenv@plt>
  4170cc:	cbz	x0, 417188 <_obstack_memory_used@@Base+0x108>
  4170d0:	stp	x23, x24, [sp, #48]
  4170d4:	mov	x20, x0
  4170d8:	ldrb	w24, [x21, #8]
  4170dc:	cbnz	w24, 41715c <_obstack_memory_used@@Base+0xdc>
  4170e0:	mov	x0, x20
  4170e4:	bl	402430 <strlen@plt>
  4170e8:	add	x23, x0, #0x1
  4170ec:	mov	x1, #0x76                  	// #118
  4170f0:	cmp	x23, x1
  4170f4:	csel	x0, x23, x1, cs  // cs = hs, nlast
  4170f8:	add	x0, x0, #0x11
  4170fc:	and	x0, x0, #0xfffffffffffffff8
  417100:	bl	4025f0 <malloc@plt>
  417104:	mov	x19, x0
  417108:	cbz	x0, 4171f4 <_obstack_memory_used@@Base+0x174>
  41710c:	add	x3, x19, #0x9
  417110:	mov	w0, #0x1                   	// #1
  417114:	str	xzr, [x19]
  417118:	mov	x1, x20
  41711c:	strh	w0, [x19, #8]
  417120:	mov	x2, x23
  417124:	mov	x0, x3
  417128:	bl	4023c0 <memcpy@plt>
  41712c:	strb	wzr, [x0, x23]
  417130:	cbnz	w24, 417200 <_obstack_memory_used@@Base+0x180>
  417134:	mov	x0, x22
  417138:	bl	4028f0 <unsetenv@plt>
  41713c:	ldp	x23, x24, [sp, #48]
  417140:	cbnz	w0, 4171c0 <_obstack_memory_used@@Base+0x140>
  417144:	bl	402610 <tzset@plt>
  417148:	mov	x0, x19
  41714c:	ldp	x19, x20, [sp, #16]
  417150:	ldp	x21, x22, [sp, #32]
  417154:	ldp	x29, x30, [sp], #64
  417158:	ret
  41715c:	mov	x1, x0
  417160:	mov	x19, #0x1                   	// #1
  417164:	add	x0, x21, #0x9
  417168:	bl	402800 <strcmp@plt>
  41716c:	cbnz	w0, 4170e0 <_obstack_memory_used@@Base+0x60>
  417170:	mov	x0, x19
  417174:	ldp	x19, x20, [sp, #16]
  417178:	ldp	x21, x22, [sp, #32]
  41717c:	ldp	x23, x24, [sp, #48]
  417180:	ldp	x29, x30, [sp], #64
  417184:	ret
  417188:	ldrb	w0, [x21, #8]
  41718c:	mov	x19, #0x1                   	// #1
  417190:	cbz	w0, 417148 <_obstack_memory_used@@Base+0xc8>
  417194:	mov	x0, #0x80                  	// #128
  417198:	bl	4025f0 <malloc@plt>
  41719c:	mov	x19, x0
  4171a0:	cbz	x0, 4171f8 <_obstack_memory_used@@Base+0x178>
  4171a4:	str	xzr, [x0]
  4171a8:	strh	wzr, [x0, #8]
  4171ac:	add	x1, x21, #0x9
  4171b0:	mov	x0, x22
  4171b4:	mov	w2, #0x1                   	// #1
  4171b8:	bl	4024c0 <setenv@plt>
  4171bc:	cbz	w0, 417144 <_obstack_memory_used@@Base+0xc4>
  4171c0:	bl	4029e0 <__errno_location@plt>
  4171c4:	ldr	w21, [x0]
  4171c8:	mov	x20, x0
  4171cc:	mov	x0, x19
  4171d0:	ldr	x19, [x19]
  4171d4:	bl	402840 <free@plt>
  4171d8:	cbnz	x19, 4171cc <_obstack_memory_used@@Base+0x14c>
  4171dc:	str	w21, [x20]
  4171e0:	mov	x0, x19
  4171e4:	ldp	x19, x20, [sp, #16]
  4171e8:	ldp	x21, x22, [sp, #32]
  4171ec:	ldp	x29, x30, [sp], #64
  4171f0:	ret
  4171f4:	ldp	x23, x24, [sp, #48]
  4171f8:	mov	x19, #0x0                   	// #0
  4171fc:	b	417148 <_obstack_memory_used@@Base+0xc8>
  417200:	ldp	x23, x24, [sp, #48]
  417204:	b	4171ac <_obstack_memory_used@@Base+0x12c>
  417208:	stp	x29, x30, [sp, #-64]!
  41720c:	mov	x29, sp
  417210:	stp	x23, x24, [sp, #48]
  417214:	ldr	x23, [x1, #48]
  417218:	cbz	x23, 417304 <_obstack_memory_used@@Base+0x284>
  41721c:	stp	x19, x20, [sp, #16]
  417220:	cmp	x1, x23
  417224:	mov	x20, x0
  417228:	stp	x21, x22, [sp, #32]
  41722c:	mov	x22, x1
  417230:	b.hi	417244 <_obstack_memory_used@@Base+0x1c4>  // b.pmore
  417234:	add	x1, x1, #0x38
  417238:	mov	w0, #0x1                   	// #1
  41723c:	cmp	x23, x1
  417240:	b.cc	4172f0 <_obstack_memory_used@@Base+0x270>  // b.lo, b.ul, b.last
  417244:	ldrb	w0, [x23]
  417248:	add	x19, x20, #0x9
  41724c:	cbz	w0, 4172e4 <_obstack_memory_used@@Base+0x264>
  417250:	mov	x1, x23
  417254:	mov	x0, x19
  417258:	bl	402800 <strcmp@plt>
  41725c:	add	x21, x20, #0x9
  417260:	mov	w2, w0
  417264:	mov	x0, x19
  417268:	cbz	w2, 4172c8 <_obstack_memory_used@@Base+0x248>
  41726c:	ldrb	w1, [x19]
  417270:	cmp	x21, x19
  417274:	cbnz	w1, 417284 <_obstack_memory_used@@Base+0x204>
  417278:	b.ne	417314 <_obstack_memory_used@@Base+0x294>  // b.any
  41727c:	ldrb	w1, [x20, #8]
  417280:	cbz	w1, 417314 <_obstack_memory_used@@Base+0x294>
  417284:	bl	402430 <strlen@plt>
  417288:	add	x0, x0, #0x1
  41728c:	add	x19, x19, x0
  417290:	ldrb	w0, [x19]
  417294:	cbnz	w0, 417250 <_obstack_memory_used@@Base+0x1d0>
  417298:	ldr	x0, [x20]
  41729c:	cbz	x0, 417250 <_obstack_memory_used@@Base+0x1d0>
  4172a0:	add	x19, x0, #0x9
  4172a4:	mov	x20, x0
  4172a8:	mov	x1, x23
  4172ac:	mov	x0, x19
  4172b0:	bl	402800 <strcmp@plt>
  4172b4:	add	x21, x20, #0x9
  4172b8:	mov	w2, w0
  4172bc:	mov	x0, x19
  4172c0:	cbnz	w2, 41726c <_obstack_memory_used@@Base+0x1ec>
  4172c4:	nop
  4172c8:	str	x19, [x22, #48]
  4172cc:	mov	w0, #0x1                   	// #1
  4172d0:	ldp	x19, x20, [sp, #16]
  4172d4:	ldp	x21, x22, [sp, #32]
  4172d8:	ldp	x23, x24, [sp, #48]
  4172dc:	ldp	x29, x30, [sp], #64
  4172e0:	ret
  4172e4:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x2f80>
  4172e8:	add	x19, x19, #0x58
  4172ec:	b	4172c8 <_obstack_memory_used@@Base+0x248>
  4172f0:	ldp	x19, x20, [sp, #16]
  4172f4:	ldp	x21, x22, [sp, #32]
  4172f8:	ldp	x23, x24, [sp, #48]
  4172fc:	ldp	x29, x30, [sp], #64
  417300:	ret
  417304:	mov	w0, #0x1                   	// #1
  417308:	ldp	x23, x24, [sp, #48]
  41730c:	ldp	x29, x30, [sp], #64
  417310:	ret
  417314:	mov	x0, x23
  417318:	sub	x21, x19, x21
  41731c:	bl	402430 <strlen@plt>
  417320:	add	x24, x0, #0x1
  417324:	mvn	x0, x21
  417328:	cmp	x0, x24
  41732c:	b.cc	417354 <_obstack_memory_used@@Base+0x2d4>  // b.lo, b.ul, b.last
  417330:	add	x21, x24, x21
  417334:	cmp	x21, #0x76
  417338:	b.hi	417374 <_obstack_memory_used@@Base+0x2f4>  // b.pmore
  41733c:	mov	x1, x23
  417340:	mov	x2, x24
  417344:	mov	x0, x19
  417348:	bl	4023c0 <memcpy@plt>
  41734c:	strb	wzr, [x19, x24]
  417350:	b	4172c8 <_obstack_memory_used@@Base+0x248>
  417354:	bl	4029e0 <__errno_location@plt>
  417358:	mov	x1, x0
  41735c:	mov	w2, #0xc                   	// #12
  417360:	mov	w0, #0x0                   	// #0
  417364:	ldp	x19, x20, [sp, #16]
  417368:	ldp	x21, x22, [sp, #32]
  41736c:	str	w2, [x1]
  417370:	b	4172d8 <_obstack_memory_used@@Base+0x258>
  417374:	cmp	x24, #0x76
  417378:	mov	x0, #0x76                  	// #118
  41737c:	csel	x0, x24, x0, cs  // cs = hs, nlast
  417380:	add	x0, x0, #0x11
  417384:	and	x0, x0, #0xfffffffffffffff8
  417388:	bl	4025f0 <malloc@plt>
  41738c:	mov	x21, x0
  417390:	cbz	x0, 4173c4 <_obstack_memory_used@@Base+0x344>
  417394:	add	x19, x0, #0x9
  417398:	mov	w3, #0x1                   	// #1
  41739c:	str	xzr, [x21]
  4173a0:	mov	x1, x23
  4173a4:	strh	w3, [x21, #8]
  4173a8:	mov	x0, x19
  4173ac:	mov	x2, x24
  4173b0:	bl	4023c0 <memcpy@plt>
  4173b4:	strb	wzr, [x19, x24]
  4173b8:	str	x21, [x20]
  4173bc:	strb	wzr, [x21, #8]
  4173c0:	b	4172c8 <_obstack_memory_used@@Base+0x248>
  4173c4:	mov	w0, #0x0                   	// #0
  4173c8:	ldp	x21, x22, [sp, #32]
  4173cc:	str	xzr, [x20]
  4173d0:	ldp	x19, x20, [sp, #16]
  4173d4:	b	4172d8 <_obstack_memory_used@@Base+0x258>
  4173d8:	stp	x29, x30, [sp, #-48]!
  4173dc:	mov	x29, sp
  4173e0:	stp	x19, x20, [sp, #16]
  4173e4:	cbz	x0, 417450 <_obstack_memory_used@@Base+0x3d0>
  4173e8:	str	x21, [sp, #32]
  4173ec:	mov	x21, x0
  4173f0:	bl	402430 <strlen@plt>
  4173f4:	add	x20, x0, #0x1
  4173f8:	mov	x0, #0x76                  	// #118
  4173fc:	cmp	x20, x0
  417400:	csel	x0, x20, x0, cs  // cs = hs, nlast
  417404:	add	x0, x0, #0x11
  417408:	and	x0, x0, #0xfffffffffffffff8
  41740c:	bl	4025f0 <malloc@plt>
  417410:	mov	x19, x0
  417414:	cbz	x0, 41743c <_obstack_memory_used@@Base+0x3bc>
  417418:	add	x3, x0, #0x9
  41741c:	mov	w0, #0x1                   	// #1
  417420:	str	xzr, [x19]
  417424:	mov	x1, x21
  417428:	strh	w0, [x19, #8]
  41742c:	mov	x2, x20
  417430:	mov	x0, x3
  417434:	bl	4023c0 <memcpy@plt>
  417438:	strb	wzr, [x0, x20]
  41743c:	ldr	x21, [sp, #32]
  417440:	mov	x0, x19
  417444:	ldp	x19, x20, [sp, #16]
  417448:	ldp	x29, x30, [sp], #48
  41744c:	ret
  417450:	mov	x0, #0x80                  	// #128
  417454:	bl	4025f0 <malloc@plt>
  417458:	mov	x19, x0
  41745c:	cbz	x0, 417440 <_obstack_memory_used@@Base+0x3c0>
  417460:	str	xzr, [x19]
  417464:	mov	x0, x19
  417468:	strh	wzr, [x19, #8]
  41746c:	ldp	x19, x20, [sp, #16]
  417470:	ldp	x29, x30, [sp], #48
  417474:	ret
  417478:	cmp	x0, #0x1
  41747c:	b.eq	4174b4 <_obstack_memory_used@@Base+0x434>  // b.none
  417480:	stp	x29, x30, [sp, #-32]!
  417484:	mov	x29, sp
  417488:	str	x19, [sp, #16]
  41748c:	mov	x19, x0
  417490:	cbz	x0, 4174a8 <_obstack_memory_used@@Base+0x428>
  417494:	nop
  417498:	mov	x0, x19
  41749c:	ldr	x19, [x19]
  4174a0:	bl	402840 <free@plt>
  4174a4:	cbnz	x19, 417498 <_obstack_memory_used@@Base+0x418>
  4174a8:	ldr	x19, [sp, #16]
  4174ac:	ldp	x29, x30, [sp], #32
  4174b0:	ret
  4174b4:	ret
  4174b8:	stp	x29, x30, [sp, #-64]!
  4174bc:	mov	x29, sp
  4174c0:	stp	x19, x20, [sp, #16]
  4174c4:	mov	x20, x2
  4174c8:	stp	x21, x22, [sp, #32]
  4174cc:	mov	x22, x1
  4174d0:	cbz	x0, 4175ac <_obstack_memory_used@@Base+0x52c>
  4174d4:	mov	x21, x0
  4174d8:	bl	4170a8 <_obstack_memory_used@@Base+0x28>
  4174dc:	mov	x19, x0
  4174e0:	cbz	x0, 417584 <_obstack_memory_used@@Base+0x504>
  4174e4:	mov	x0, x22
  4174e8:	mov	x1, x20
  4174ec:	bl	4024b0 <localtime_r@plt>
  4174f0:	cbz	x0, 417524 <_obstack_memory_used@@Base+0x4a4>
  4174f4:	mov	x0, x21
  4174f8:	mov	x1, x20
  4174fc:	bl	417208 <_obstack_memory_used@@Base+0x188>
  417500:	ands	w21, w0, #0xff
  417504:	b.eq	417524 <_obstack_memory_used@@Base+0x4a4>  // b.none
  417508:	cmp	x19, #0x1
  41750c:	b.ne	4175c4 <_obstack_memory_used@@Base+0x544>  // b.any
  417510:	mov	x0, x20
  417514:	ldp	x19, x20, [sp, #16]
  417518:	ldp	x21, x22, [sp, #32]
  41751c:	ldp	x29, x30, [sp], #64
  417520:	ret
  417524:	cmp	x19, #0x1
  417528:	b.eq	417584 <_obstack_memory_used@@Base+0x504>  // b.none
  41752c:	mov	w21, #0x0                   	// #0
  417530:	str	x23, [sp, #48]
  417534:	bl	4029e0 <__errno_location@plt>
  417538:	mov	x22, x0
  41753c:	ldrb	w1, [x19, #8]
  417540:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  417544:	ldr	w23, [x22]
  417548:	cbz	w1, 417598 <_obstack_memory_used@@Base+0x518>
  41754c:	add	x0, x0, #0x6c8
  417550:	add	x1, x19, #0x9
  417554:	mov	w2, #0x1                   	// #1
  417558:	bl	4024c0 <setenv@plt>
  41755c:	cbz	w0, 4175a4 <_obstack_memory_used@@Base+0x524>
  417560:	ldr	w23, [x22]
  417564:	mov	w21, #0x0                   	// #0
  417568:	mov	x0, x19
  41756c:	ldr	x19, [x19]
  417570:	bl	402840 <free@plt>
  417574:	cbnz	x19, 417568 <_obstack_memory_used@@Base+0x4e8>
  417578:	str	w23, [x22]
  41757c:	ldr	x23, [sp, #48]
  417580:	cbnz	w21, 417510 <_obstack_memory_used@@Base+0x490>
  417584:	mov	x0, #0x0                   	// #0
  417588:	ldp	x19, x20, [sp, #16]
  41758c:	ldp	x21, x22, [sp, #32]
  417590:	ldp	x29, x30, [sp], #64
  417594:	ret
  417598:	add	x0, x0, #0x6c8
  41759c:	bl	4028f0 <unsetenv@plt>
  4175a0:	cbnz	w0, 417560 <_obstack_memory_used@@Base+0x4e0>
  4175a4:	bl	402610 <tzset@plt>
  4175a8:	b	417568 <_obstack_memory_used@@Base+0x4e8>
  4175ac:	mov	x0, x22
  4175b0:	mov	x1, x2
  4175b4:	ldp	x19, x20, [sp, #16]
  4175b8:	ldp	x21, x22, [sp, #32]
  4175bc:	ldp	x29, x30, [sp], #64
  4175c0:	b	4026a0 <gmtime_r@plt>
  4175c4:	str	x23, [sp, #48]
  4175c8:	b	417534 <_obstack_memory_used@@Base+0x4b4>
  4175cc:	nop
  4175d0:	stp	x29, x30, [sp, #-112]!
  4175d4:	mov	x29, sp
  4175d8:	stp	x19, x20, [sp, #16]
  4175dc:	mov	x20, x1
  4175e0:	cbz	x0, 417738 <_obstack_memory_used@@Base+0x6b8>
  4175e4:	stp	x21, x22, [sp, #32]
  4175e8:	mov	x21, x0
  4175ec:	bl	4170a8 <_obstack_memory_used@@Base+0x28>
  4175f0:	mov	x19, x0
  4175f4:	cbz	x0, 41774c <_obstack_memory_used@@Base+0x6cc>
  4175f8:	mov	x0, x20
  4175fc:	bl	402750 <mktime@plt>
  417600:	str	x0, [sp, #48]
  417604:	cmn	x0, #0x1
  417608:	b.eq	4176ac <_obstack_memory_used@@Base+0x62c>  // b.none
  41760c:	mov	x1, x20
  417610:	mov	x0, x21
  417614:	bl	417208 <_obstack_memory_used@@Base+0x188>
  417618:	tst	w0, #0xff
  41761c:	b.ne	417628 <_obstack_memory_used@@Base+0x5a8>  // b.any
  417620:	mov	x0, #0xffffffffffffffff    	// #-1
  417624:	str	x0, [sp, #48]
  417628:	cmp	x19, #0x1
  41762c:	b.eq	417678 <_obstack_memory_used@@Base+0x5f8>  // b.none
  417630:	bl	4029e0 <__errno_location@plt>
  417634:	mov	x20, x0
  417638:	ldrb	w1, [x19, #8]
  41763c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3f80>
  417640:	ldr	w21, [x20]
  417644:	cbnz	w1, 41768c <_obstack_memory_used@@Base+0x60c>
  417648:	add	x0, x0, #0x6c8
  41764c:	bl	4028f0 <unsetenv@plt>
  417650:	cbnz	w0, 4176a0 <_obstack_memory_used@@Base+0x620>
  417654:	mov	w22, #0x1                   	// #1
  417658:	bl	402610 <tzset@plt>
  41765c:	nop
  417660:	mov	x0, x19
  417664:	ldr	x19, [x19]
  417668:	bl	402840 <free@plt>
  41766c:	cbnz	x19, 417660 <_obstack_memory_used@@Base+0x5e0>
  417670:	str	w21, [x20]
  417674:	cbz	w22, 41774c <_obstack_memory_used@@Base+0x6cc>
  417678:	ldp	x21, x22, [sp, #32]
  41767c:	ldr	x0, [sp, #48]
  417680:	ldp	x19, x20, [sp, #16]
  417684:	ldp	x29, x30, [sp], #112
  417688:	ret
  41768c:	add	x0, x0, #0x6c8
  417690:	add	x1, x19, #0x9
  417694:	mov	w2, #0x1                   	// #1
  417698:	bl	4024c0 <setenv@plt>
  41769c:	cbz	w0, 417654 <_obstack_memory_used@@Base+0x5d4>
  4176a0:	ldr	w21, [x20]
  4176a4:	mov	w22, #0x0                   	// #0
  4176a8:	b	417660 <_obstack_memory_used@@Base+0x5e0>
  4176ac:	add	x1, sp, #0x38
  4176b0:	add	x0, sp, #0x30
  4176b4:	bl	4024b0 <localtime_r@plt>
  4176b8:	cbz	x0, 417628 <_obstack_memory_used@@Base+0x5a8>
  4176bc:	ldr	w1, [x20, #32]
  4176c0:	ldr	w0, [sp, #88]
  4176c4:	cmp	w1, #0x0
  4176c8:	cset	w3, eq  // eq = none
  4176cc:	cmp	w0, #0x0
  4176d0:	cset	w2, eq  // eq = none
  4176d4:	cmp	w3, w2
  4176d8:	b.eq	4176e8 <_obstack_memory_used@@Base+0x668>  // b.none
  4176dc:	cmp	w1, #0x0
  4176e0:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  4176e4:	b.ge	417628 <_obstack_memory_used@@Base+0x5a8>  // b.tcont
  4176e8:	ldp	w3, w6, [sp, #64]
  4176ec:	ldp	w2, w4, [x20, #8]
  4176f0:	ldp	w5, w1, [sp, #72]
  4176f4:	eor	w2, w2, w3
  4176f8:	ldr	w0, [x20, #16]
  4176fc:	eor	w4, w4, w6
  417700:	ldr	w3, [x20, #20]
  417704:	orr	w2, w2, w4
  417708:	eor	w0, w0, w5
  41770c:	eor	w3, w3, w1
  417710:	ldp	w6, w5, [sp, #56]
  417714:	orr	w0, w0, w3
  417718:	ldp	w1, w3, [x20]
  41771c:	orr	w0, w0, w2
  417720:	eor	w1, w1, w6
  417724:	eor	w2, w3, w5
  417728:	orr	w1, w1, w2
  41772c:	orr	w0, w0, w1
  417730:	cbz	w0, 41760c <_obstack_memory_used@@Base+0x58c>
  417734:	b	417628 <_obstack_memory_used@@Base+0x5a8>
  417738:	mov	x0, x1
  41773c:	bl	402a20 <timegm@plt>
  417740:	ldp	x19, x20, [sp, #16]
  417744:	ldp	x29, x30, [sp], #112
  417748:	ret
  41774c:	mov	x0, #0xffffffffffffffff    	// #-1
  417750:	ldp	x21, x22, [sp, #32]
  417754:	b	417680 <_obstack_memory_used@@Base+0x600>
  417758:	mov	w1, w0
  41775c:	cmp	w0, #0x26
  417760:	b.eq	41778c <_obstack_memory_used@@Base+0x70c>  // b.none
  417764:	b.gt	417780 <_obstack_memory_used@@Base+0x700>
  417768:	cmp	w0, #0x10
  41776c:	mov	w0, #0x0                   	// #0
  417770:	b.eq	41777c <_obstack_memory_used@@Base+0x6fc>  // b.none
  417774:	cmp	w1, #0x16
  417778:	cset	w0, ne  // ne = any
  41777c:	ret
  417780:	cmp	w0, #0x5f
  417784:	cset	w0, ne  // ne = any
  417788:	ret
  41778c:	mov	w0, #0x0                   	// #0
  417790:	ret
  417794:	nop
  417798:	stp	x29, x30, [sp, #-32]!
  41779c:	mov	x29, sp
  4177a0:	stp	x19, x20, [sp, #16]
  4177a4:	mov	x19, x0
  4177a8:	bl	402550 <__fpending@plt>
  4177ac:	mov	x20, x0
  4177b0:	mov	x0, x19
  4177b4:	ldr	w19, [x19]
  4177b8:	and	w19, w19, #0x20
  4177bc:	bl	4178a0 <_obstack_memory_used@@Base+0x820>
  4177c0:	cbnz	w19, 4177e8 <_obstack_memory_used@@Base+0x768>
  4177c4:	cbz	w0, 4177dc <_obstack_memory_used@@Base+0x75c>
  4177c8:	cbnz	x20, 417800 <_obstack_memory_used@@Base+0x780>
  4177cc:	bl	4029e0 <__errno_location@plt>
  4177d0:	ldr	w0, [x0]
  4177d4:	cmp	w0, #0x9
  4177d8:	csetm	w0, ne  // ne = any
  4177dc:	ldp	x19, x20, [sp, #16]
  4177e0:	ldp	x29, x30, [sp], #32
  4177e4:	ret
  4177e8:	cbnz	w0, 417800 <_obstack_memory_used@@Base+0x780>
  4177ec:	bl	4029e0 <__errno_location@plt>
  4177f0:	mov	x1, x0
  4177f4:	mov	w0, #0xffffffff            	// #-1
  4177f8:	str	wzr, [x1]
  4177fc:	b	4177dc <_obstack_memory_used@@Base+0x75c>
  417800:	mov	w0, #0xffffffff            	// #-1
  417804:	b	4177dc <_obstack_memory_used@@Base+0x75c>
  417808:	stp	x29, x30, [sp, #-16]!
  41780c:	mov	x29, sp
  417810:	bl	40c170 <__fxstatat@plt+0x9720>
  417814:	cbz	x0, 417820 <_obstack_memory_used@@Base+0x7a0>
  417818:	ldp	x29, x30, [sp], #16
  41781c:	ret
  417820:	bl	415e08 <__fxstatat@plt+0x133b8>
  417824:	nop
  417828:	ldrb	w3, [x0]
  41782c:	cbz	w3, 417854 <_obstack_memory_used@@Base+0x7d4>
  417830:	mov	x2, #0x0                   	// #0
  417834:	nop
  417838:	ror	x2, x2, #55
  41783c:	add	x2, x2, w3, uxtb
  417840:	ldrb	w3, [x0, #1]!
  417844:	cbnz	w3, 417838 <_obstack_memory_used@@Base+0x7b8>
  417848:	udiv	x0, x2, x1
  41784c:	msub	x0, x0, x1, x2
  417850:	ret
  417854:	mov	x0, #0x0                   	// #0
  417858:	ret
  41785c:	nop
  417860:	stp	x29, x30, [sp, #-16]!
  417864:	mov	w0, #0xe                   	// #14
  417868:	mov	x29, sp
  41786c:	bl	4025e0 <nl_langinfo@plt>
  417870:	cbz	x0, 417890 <_obstack_memory_used@@Base+0x810>
  417874:	ldrb	w2, [x0]
  417878:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x6f80>
  41787c:	add	x1, x1, #0x690
  417880:	cmp	w2, #0x0
  417884:	csel	x0, x1, x0, eq  // eq = none
  417888:	ldp	x29, x30, [sp], #16
  41788c:	ret
  417890:	ldp	x29, x30, [sp], #16
  417894:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x6f80>
  417898:	add	x0, x0, #0x690
  41789c:	ret
  4178a0:	stp	x29, x30, [sp, #-32]!
  4178a4:	mov	x29, sp
  4178a8:	stp	x19, x20, [sp, #16]
  4178ac:	mov	x19, x0
  4178b0:	bl	402590 <fileno@plt>
  4178b4:	tbnz	w0, #31, 417910 <_obstack_memory_used@@Base+0x890>
  4178b8:	mov	x0, x19
  4178bc:	bl	4029a0 <__freading@plt>
  4178c0:	cbnz	w0, 4178f4 <_obstack_memory_used@@Base+0x874>
  4178c4:	mov	x0, x19
  4178c8:	bl	417930 <_obstack_memory_used@@Base+0x8b0>
  4178cc:	cbz	w0, 417910 <_obstack_memory_used@@Base+0x890>
  4178d0:	bl	4029e0 <__errno_location@plt>
  4178d4:	mov	x20, x0
  4178d8:	mov	x0, x19
  4178dc:	ldr	w19, [x20]
  4178e0:	bl	4025d0 <fclose@plt>
  4178e4:	cbnz	w19, 417920 <_obstack_memory_used@@Base+0x8a0>
  4178e8:	ldp	x19, x20, [sp, #16]
  4178ec:	ldp	x29, x30, [sp], #32
  4178f0:	ret
  4178f4:	mov	x0, x19
  4178f8:	bl	402590 <fileno@plt>
  4178fc:	mov	w2, #0x1                   	// #1
  417900:	mov	x1, #0x0                   	// #0
  417904:	bl	402540 <lseek@plt>
  417908:	cmn	x0, #0x1
  41790c:	b.ne	4178c4 <_obstack_memory_used@@Base+0x844>  // b.any
  417910:	mov	x0, x19
  417914:	ldp	x19, x20, [sp, #16]
  417918:	ldp	x29, x30, [sp], #32
  41791c:	b	4025d0 <fclose@plt>
  417920:	mov	w0, #0xffffffff            	// #-1
  417924:	str	w19, [x20]
  417928:	b	4178e8 <_obstack_memory_used@@Base+0x868>
  41792c:	nop
  417930:	stp	x29, x30, [sp, #-32]!
  417934:	mov	x29, sp
  417938:	str	x19, [sp, #16]
  41793c:	mov	x19, x0
  417940:	cbz	x0, 417954 <_obstack_memory_used@@Base+0x8d4>
  417944:	bl	4029a0 <__freading@plt>
  417948:	cbz	w0, 417954 <_obstack_memory_used@@Base+0x8d4>
  41794c:	ldr	w0, [x19]
  417950:	tbnz	w0, #8, 417964 <_obstack_memory_used@@Base+0x8e4>
  417954:	mov	x0, x19
  417958:	ldr	x19, [sp, #16]
  41795c:	ldp	x29, x30, [sp], #32
  417960:	b	4028c0 <fflush@plt>
  417964:	mov	x0, x19
  417968:	mov	w2, #0x1                   	// #1
  41796c:	mov	x1, #0x0                   	// #0
  417970:	bl	417988 <_obstack_memory_used@@Base+0x908>
  417974:	mov	x0, x19
  417978:	ldr	x19, [sp, #16]
  41797c:	ldp	x29, x30, [sp], #32
  417980:	b	4028c0 <fflush@plt>
  417984:	nop
  417988:	stp	x29, x30, [sp, #-48]!
  41798c:	mov	x29, sp
  417990:	ldp	x3, x4, [x0, #8]
  417994:	str	x19, [sp, #16]
  417998:	mov	x19, x0
  41799c:	cmp	x4, x3
  4179a0:	b.eq	4179b4 <_obstack_memory_used@@Base+0x934>  // b.none
  4179a4:	mov	x0, x19
  4179a8:	ldr	x19, [sp, #16]
  4179ac:	ldp	x29, x30, [sp], #48
  4179b0:	b	402830 <fseeko@plt>
  4179b4:	ldp	x3, x4, [x0, #32]
  4179b8:	cmp	x4, x3
  4179bc:	b.ne	4179a4 <_obstack_memory_used@@Base+0x924>  // b.any
  4179c0:	ldr	x3, [x0, #72]
  4179c4:	cbnz	x3, 4179a4 <_obstack_memory_used@@Base+0x924>
  4179c8:	str	x1, [sp, #32]
  4179cc:	str	w2, [sp, #44]
  4179d0:	bl	402590 <fileno@plt>
  4179d4:	ldr	w2, [sp, #44]
  4179d8:	ldr	x1, [sp, #32]
  4179dc:	bl	402540 <lseek@plt>
  4179e0:	mov	x1, x0
  4179e4:	cmn	x0, #0x1
  4179e8:	b.eq	417a00 <_obstack_memory_used@@Base+0x980>  // b.none
  4179ec:	ldr	w2, [x19]
  4179f0:	mov	w0, #0x0                   	// #0
  4179f4:	str	x1, [x19, #144]
  4179f8:	and	w1, w2, #0xffffffef
  4179fc:	str	w1, [x19]
  417a00:	ldr	x19, [sp, #16]
  417a04:	ldp	x29, x30, [sp], #48
  417a08:	ret
  417a0c:	nop
  417a10:	stp	x29, x30, [sp, #-48]!
  417a14:	mov	x29, sp
  417a18:	str	q0, [sp, #16]
  417a1c:	str	q1, [sp, #32]
  417a20:	ldp	x2, x0, [sp, #16]
  417a24:	ldp	x5, x3, [sp, #32]
  417a28:	mrs	x11, fpcr
  417a2c:	lsr	x1, x0, #63
  417a30:	ubfx	x6, x0, #0, #48
  417a34:	and	w13, w1, #0xff
  417a38:	mov	x9, x1
  417a3c:	ubfx	x7, x0, #48, #15
  417a40:	cbz	w7, 417e58 <_obstack_memory_used@@Base+0xdd8>
  417a44:	mov	w1, #0x7fff                	// #32767
  417a48:	cmp	w7, w1
  417a4c:	b.eq	417e98 <_obstack_memory_used@@Base+0xe18>  // b.none
  417a50:	and	x7, x7, #0xffff
  417a54:	extr	x6, x6, x2, #61
  417a58:	mov	x15, #0xffffffffffffc001    	// #-16383
  417a5c:	orr	x4, x6, #0x8000000000000
  417a60:	add	x7, x7, x15
  417a64:	lsl	x2, x2, #3
  417a68:	mov	x14, #0x2                   	// #2
  417a6c:	mov	x12, #0x1                   	// #1
  417a70:	mov	x1, #0x3                   	// #3
  417a74:	mov	x16, #0x0                   	// #0
  417a78:	mov	x17, #0x0                   	// #0
  417a7c:	mov	w0, #0x0                   	// #0
  417a80:	lsr	x8, x3, #63
  417a84:	ubfx	x6, x3, #0, #48
  417a88:	and	w15, w8, #0xff
  417a8c:	ubfx	x10, x3, #48, #15
  417a90:	cbz	w10, 417e10 <_obstack_memory_used@@Base+0xd90>
  417a94:	mov	w12, #0x7fff                	// #32767
  417a98:	cmp	w10, w12
  417a9c:	b.eq	417ddc <_obstack_memory_used@@Base+0xd5c>  // b.none
  417aa0:	and	x10, x10, #0xffff
  417aa4:	extr	x6, x6, x5, #61
  417aa8:	mov	x14, #0xffffffffffffc001    	// #-16383
  417aac:	add	x10, x10, x14
  417ab0:	orr	x6, x6, #0x8000000000000
  417ab4:	sub	x7, x7, x10
  417ab8:	lsl	x5, x5, #3
  417abc:	mov	x1, x16
  417ac0:	mov	x3, #0x0                   	// #0
  417ac4:	eor	w10, w13, w15
  417ac8:	cmp	x1, #0x9
  417acc:	and	x12, x10, #0xff
  417ad0:	mov	x14, x12
  417ad4:	b.gt	417b9c <_obstack_memory_used@@Base+0xb1c>
  417ad8:	cmp	x1, #0x7
  417adc:	b.gt	417f54 <_obstack_memory_used@@Base+0xed4>
  417ae0:	cmp	x1, #0x3
  417ae4:	b.eq	417b00 <_obstack_memory_used@@Base+0xa80>  // b.none
  417ae8:	b.le	417bc4 <_obstack_memory_used@@Base+0xb44>
  417aec:	cmp	x1, #0x5
  417af0:	b.eq	417bac <_obstack_memory_used@@Base+0xb2c>  // b.none
  417af4:	b.le	417bf4 <_obstack_memory_used@@Base+0xb74>
  417af8:	cmp	x1, #0x6
  417afc:	b.eq	417b68 <_obstack_memory_used@@Base+0xae8>  // b.none
  417b00:	cmp	x3, #0x1
  417b04:	b.eq	417b64 <_obstack_memory_used@@Base+0xae4>  // b.none
  417b08:	cbz	x3, 417b1c <_obstack_memory_used@@Base+0xa9c>
  417b0c:	cmp	x3, #0x2
  417b10:	b.eq	417f50 <_obstack_memory_used@@Base+0xed0>  // b.none
  417b14:	cmp	x3, #0x3
  417b18:	b.eq	418148 <_obstack_memory_used@@Base+0x10c8>  // b.none
  417b1c:	mov	x1, #0x3fff                	// #16383
  417b20:	mov	w10, w15
  417b24:	mov	x14, x8
  417b28:	add	x3, x7, x1
  417b2c:	cmp	x3, #0x0
  417b30:	b.le	418020 <_obstack_memory_used@@Base+0xfa0>
  417b34:	tst	x5, #0x7
  417b38:	b.ne	417f80 <_obstack_memory_used@@Base+0xf00>  // b.any
  417b3c:	tbz	x6, #52, 417b48 <_obstack_memory_used@@Base+0xac8>
  417b40:	and	x6, x6, #0xffefffffffffffff
  417b44:	add	x3, x7, #0x4, lsl #12
  417b48:	mov	x1, #0x7ffe                	// #32766
  417b4c:	cmp	x3, x1
  417b50:	b.gt	418104 <_obstack_memory_used@@Base+0x1084>
  417b54:	and	w1, w3, #0x7fff
  417b58:	extr	x2, x6, x5, #3
  417b5c:	ubfx	x6, x6, #3, #48
  417b60:	b	417b74 <_obstack_memory_used@@Base+0xaf4>
  417b64:	mov	w10, w15
  417b68:	mov	w1, #0x0                   	// #0
  417b6c:	mov	x6, #0x0                   	// #0
  417b70:	mov	x2, #0x0                   	// #0
  417b74:	mov	x5, #0x0                   	// #0
  417b78:	orr	w1, w1, w10, lsl #15
  417b7c:	bfxil	x5, x6, #0, #48
  417b80:	fmov	d0, x2
  417b84:	bfi	x5, x1, #48, #16
  417b88:	fmov	v0.d[1], x5
  417b8c:	cbnz	w0, 417be4 <_obstack_memory_used@@Base+0xb64>
  417b90:	ldp	x29, x30, [sp], #48
  417b94:	ret
  417b98:	mov	x3, #0x3                   	// #3
  417b9c:	cmp	x1, #0xb
  417ba0:	b.gt	417ec4 <_obstack_memory_used@@Base+0xe44>
  417ba4:	cmp	x1, #0xa
  417ba8:	b.ne	417b00 <_obstack_memory_used@@Base+0xa80>  // b.any
  417bac:	mov	w10, #0x0                   	// #0
  417bb0:	mov	x6, #0xffffffffffff        	// #281474976710655
  417bb4:	mov	x2, #0xffffffffffffffff    	// #-1
  417bb8:	mov	w0, #0x1                   	// #1
  417bbc:	mov	w1, #0x7fff                	// #32767
  417bc0:	b	417b74 <_obstack_memory_used@@Base+0xaf4>
  417bc4:	cmp	x1, #0x1
  417bc8:	b.ne	417dd0 <_obstack_memory_used@@Base+0xd50>  // b.any
  417bcc:	mov	x4, #0x0                   	// #0
  417bd0:	fmov	d0, x4
  417bd4:	lsl	x12, x12, #63
  417bd8:	orr	w0, w0, #0x2
  417bdc:	orr	x5, x12, #0x7fff000000000000
  417be0:	fmov	v0.d[1], x5
  417be4:	str	q0, [sp, #16]
  417be8:	bl	4190e0 <_obstack_memory_used@@Base+0x2060>
  417bec:	ldr	q0, [sp, #16]
  417bf0:	b	417b90 <_obstack_memory_used@@Base+0xb10>
  417bf4:	cmp	x1, #0x4
  417bf8:	b.eq	417b68 <_obstack_memory_used@@Base+0xae8>  // b.none
  417bfc:	cmp	x4, x6
  417c00:	b.ls	417f64 <_obstack_memory_used@@Base+0xee4>  // b.plast
  417c04:	lsr	x3, x4, #1
  417c08:	extr	x8, x4, x2, #1
  417c0c:	lsl	x2, x2, #63
  417c10:	ubfx	x13, x6, #20, #32
  417c14:	extr	x9, x6, x5, #52
  417c18:	lsl	x12, x5, #12
  417c1c:	and	x15, x9, #0xffffffff
  417c20:	udiv	x5, x3, x13
  417c24:	msub	x3, x5, x13, x3
  417c28:	mul	x1, x15, x5
  417c2c:	extr	x3, x3, x8, #32
  417c30:	cmp	x1, x3
  417c34:	b.ls	417c48 <_obstack_memory_used@@Base+0xbc8>  // b.plast
  417c38:	adds	x3, x9, x3
  417c3c:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  417c40:	b.hi	418220 <_obstack_memory_used@@Base+0x11a0>  // b.pmore
  417c44:	sub	x5, x5, #0x1
  417c48:	sub	x3, x3, x1
  417c4c:	mov	x4, x8
  417c50:	udiv	x1, x3, x13
  417c54:	msub	x3, x1, x13, x3
  417c58:	mul	x6, x15, x1
  417c5c:	bfi	x4, x3, #32, #32
  417c60:	cmp	x6, x4
  417c64:	b.ls	417c78 <_obstack_memory_used@@Base+0xbf8>  // b.plast
  417c68:	adds	x4, x9, x4
  417c6c:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  417c70:	b.hi	41822c <_obstack_memory_used@@Base+0x11ac>  // b.pmore
  417c74:	sub	x1, x1, #0x1
  417c78:	orr	x8, x1, x5, lsl #32
  417c7c:	and	x17, x12, #0xffffffff
  417c80:	and	x1, x8, #0xffffffff
  417c84:	lsr	x16, x12, #32
  417c88:	lsr	x5, x8, #32
  417c8c:	sub	x4, x4, x6
  417c90:	mov	x18, #0x100000000           	// #4294967296
  417c94:	mul	x3, x1, x17
  417c98:	mul	x30, x5, x17
  417c9c:	madd	x6, x16, x1, x30
  417ca0:	and	x1, x3, #0xffffffff
  417ca4:	mul	x5, x5, x16
  417ca8:	add	x3, x6, x3, lsr #32
  417cac:	add	x6, x5, x18
  417cb0:	cmp	x30, x3
  417cb4:	csel	x5, x6, x5, hi  // hi = pmore
  417cb8:	add	x1, x1, x3, lsl #32
  417cbc:	add	x5, x5, x3, lsr #32
  417cc0:	cmp	x4, x5
  417cc4:	b.cc	417fec <_obstack_memory_used@@Base+0xf6c>  // b.lo, b.ul, b.last
  417cc8:	ccmp	x2, x1, #0x2, eq  // eq = none
  417ccc:	mov	x6, x8
  417cd0:	b.cc	417fec <_obstack_memory_used@@Base+0xf6c>  // b.lo, b.ul, b.last
  417cd4:	subs	x8, x2, x1
  417cd8:	mov	x3, #0x3fff                	// #16383
  417cdc:	cmp	x2, x1
  417ce0:	add	x3, x7, x3
  417ce4:	sbc	x4, x4, x5
  417ce8:	cmp	x9, x4
  417cec:	b.eq	418238 <_obstack_memory_used@@Base+0x11b8>  // b.none
  417cf0:	udiv	x5, x4, x13
  417cf4:	msub	x4, x5, x13, x4
  417cf8:	mul	x2, x15, x5
  417cfc:	extr	x1, x4, x8, #32
  417d00:	cmp	x2, x1
  417d04:	b.ls	417d18 <_obstack_memory_used@@Base+0xc98>  // b.plast
  417d08:	adds	x1, x9, x1
  417d0c:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  417d10:	b.hi	4182f0 <_obstack_memory_used@@Base+0x1270>  // b.pmore
  417d14:	sub	x5, x5, #0x1
  417d18:	sub	x1, x1, x2
  417d1c:	udiv	x2, x1, x13
  417d20:	msub	x1, x2, x13, x1
  417d24:	mul	x15, x15, x2
  417d28:	bfi	x8, x1, #32, #32
  417d2c:	mov	x1, x8
  417d30:	cmp	x15, x8
  417d34:	b.ls	417d48 <_obstack_memory_used@@Base+0xcc8>  // b.plast
  417d38:	adds	x1, x9, x8
  417d3c:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  417d40:	b.hi	4182fc <_obstack_memory_used@@Base+0x127c>  // b.pmore
  417d44:	sub	x2, x2, #0x1
  417d48:	orr	x5, x2, x5, lsl #32
  417d4c:	sub	x1, x1, x15
  417d50:	and	x4, x5, #0xffffffff
  417d54:	mov	x13, #0x100000000           	// #4294967296
  417d58:	lsr	x15, x5, #32
  417d5c:	mul	x2, x17, x4
  417d60:	mul	x17, x15, x17
  417d64:	madd	x4, x16, x4, x17
  417d68:	and	x8, x2, #0xffffffff
  417d6c:	mul	x16, x16, x15
  417d70:	add	x2, x4, x2, lsr #32
  417d74:	add	x4, x16, x13
  417d78:	cmp	x17, x2
  417d7c:	csel	x16, x4, x16, hi  // hi = pmore
  417d80:	add	x4, x8, x2, lsl #32
  417d84:	add	x16, x16, x2, lsr #32
  417d88:	cmp	x1, x16
  417d8c:	b.cs	418170 <_obstack_memory_used@@Base+0x10f0>  // b.hs, b.nlast
  417d90:	adds	x2, x9, x1
  417d94:	sub	x8, x5, #0x1
  417d98:	mov	x1, x2
  417d9c:	b.cs	417db0 <_obstack_memory_used@@Base+0xd30>  // b.hs, b.nlast
  417da0:	cmp	x2, x16
  417da4:	b.cc	418270 <_obstack_memory_used@@Base+0x11f0>  // b.lo, b.ul, b.last
  417da8:	ccmp	x12, x4, #0x2, eq  // eq = none
  417dac:	b.cc	418270 <_obstack_memory_used@@Base+0x11f0>  // b.lo, b.ul, b.last
  417db0:	cmp	x12, x4
  417db4:	mov	x5, x8
  417db8:	cset	w2, ne  // ne = any
  417dbc:	cmp	w2, #0x0
  417dc0:	orr	x2, x5, #0x1
  417dc4:	ccmp	x1, x16, #0x0, eq  // eq = none
  417dc8:	csel	x5, x2, x5, ne  // ne = any
  417dcc:	b	417b2c <_obstack_memory_used@@Base+0xaac>
  417dd0:	cmp	x1, #0x2
  417dd4:	b.eq	417b68 <_obstack_memory_used@@Base+0xae8>  // b.none
  417dd8:	b	417bfc <_obstack_memory_used@@Base+0xb7c>
  417ddc:	mov	x10, #0xffffffffffff8001    	// #-32767
  417de0:	orr	x3, x6, x5
  417de4:	add	x7, x7, x10
  417de8:	cbz	x3, 417f3c <_obstack_memory_used@@Base+0xebc>
  417dec:	eor	w10, w13, w15
  417df0:	ands	x3, x6, #0x800000000000
  417df4:	and	x12, x10, #0xff
  417df8:	csinc	w0, w0, wzr, ne  // ne = any
  417dfc:	mov	x14, x12
  417e00:	cmp	x1, #0x9
  417e04:	b.gt	417fb4 <_obstack_memory_used@@Base+0xf34>
  417e08:	mov	x3, #0x3                   	// #3
  417e0c:	b	417ad8 <_obstack_memory_used@@Base+0xa58>
  417e10:	orr	x1, x6, x5
  417e14:	cbz	x1, 417f28 <_obstack_memory_used@@Base+0xea8>
  417e18:	cbz	x6, 4180bc <_obstack_memory_used@@Base+0x103c>
  417e1c:	clz	x1, x6
  417e20:	sub	x3, x1, #0xf
  417e24:	add	w12, w3, #0x3
  417e28:	mov	w10, #0x3d                  	// #61
  417e2c:	sub	w3, w10, w3
  417e30:	lsl	x6, x6, x12
  417e34:	lsr	x3, x5, x3
  417e38:	orr	x6, x3, x6
  417e3c:	lsl	x5, x5, x12
  417e40:	add	x7, x1, x7
  417e44:	mov	x12, #0x3fef                	// #16367
  417e48:	mov	x1, x16
  417e4c:	add	x7, x7, x12
  417e50:	mov	x3, #0x0                   	// #0
  417e54:	b	417ac4 <_obstack_memory_used@@Base+0xa44>
  417e58:	orr	x4, x6, x2
  417e5c:	cbz	x4, 417f04 <_obstack_memory_used@@Base+0xe84>
  417e60:	cbz	x6, 4180e0 <_obstack_memory_used@@Base+0x1060>
  417e64:	clz	x0, x6
  417e68:	sub	x4, x0, #0xf
  417e6c:	add	w7, w4, #0x3
  417e70:	mov	w1, #0x3d                  	// #61
  417e74:	sub	w4, w1, w4
  417e78:	lsl	x6, x6, x7
  417e7c:	lsr	x4, x2, x4
  417e80:	orr	x4, x4, x6
  417e84:	lsl	x2, x2, x7
  417e88:	mov	x7, #0xffffffffffffc011    	// #-16367
  417e8c:	mov	x14, #0x2                   	// #2
  417e90:	sub	x7, x7, x0
  417e94:	b	417a6c <_obstack_memory_used@@Base+0x9ec>
  417e98:	orr	x4, x6, x2
  417e9c:	cbnz	x4, 417edc <_obstack_memory_used@@Base+0xe5c>
  417ea0:	mov	x2, #0x0                   	// #0
  417ea4:	mov	x14, #0xa                   	// #10
  417ea8:	mov	x12, #0x9                   	// #9
  417eac:	mov	x1, #0xb                   	// #11
  417eb0:	mov	x16, #0x8                   	// #8
  417eb4:	mov	x7, #0x7fff                	// #32767
  417eb8:	mov	x17, #0x2                   	// #2
  417ebc:	mov	w0, #0x0                   	// #0
  417ec0:	b	417a80 <_obstack_memory_used@@Base+0xa00>
  417ec4:	mov	w15, w13
  417ec8:	mov	x6, x4
  417ecc:	mov	x5, x2
  417ed0:	mov	x8, x9
  417ed4:	mov	x3, x17
  417ed8:	b	417b00 <_obstack_memory_used@@Base+0xa80>
  417edc:	lsr	x0, x6, #47
  417ee0:	mov	x4, x6
  417ee4:	eor	w0, w0, #0x1
  417ee8:	mov	x14, #0xe                   	// #14
  417eec:	mov	x12, #0xd                   	// #13
  417ef0:	mov	x1, #0xf                   	// #15
  417ef4:	mov	x16, #0xc                   	// #12
  417ef8:	mov	x7, #0x7fff                	// #32767
  417efc:	mov	x17, #0x3                   	// #3
  417f00:	b	417a80 <_obstack_memory_used@@Base+0xa00>
  417f04:	mov	x2, #0x0                   	// #0
  417f08:	mov	x14, #0x6                   	// #6
  417f0c:	mov	x12, #0x5                   	// #5
  417f10:	mov	x1, #0x7                   	// #7
  417f14:	mov	x16, #0x4                   	// #4
  417f18:	mov	x7, #0x0                   	// #0
  417f1c:	mov	x17, #0x1                   	// #1
  417f20:	mov	w0, #0x0                   	// #0
  417f24:	b	417a80 <_obstack_memory_used@@Base+0xa00>
  417f28:	mov	x1, x12
  417f2c:	mov	x6, #0x0                   	// #0
  417f30:	mov	x5, #0x0                   	// #0
  417f34:	mov	x3, #0x1                   	// #1
  417f38:	b	417ac4 <_obstack_memory_used@@Base+0xa44>
  417f3c:	mov	x1, x14
  417f40:	mov	x6, #0x0                   	// #0
  417f44:	mov	x5, #0x0                   	// #0
  417f48:	mov	x3, #0x2                   	// #2
  417f4c:	b	417ac4 <_obstack_memory_used@@Base+0xa44>
  417f50:	mov	w10, w15
  417f54:	mov	w1, #0x7fff                	// #32767
  417f58:	mov	x6, #0x0                   	// #0
  417f5c:	mov	x2, #0x0                   	// #0
  417f60:	b	417b74 <_obstack_memory_used@@Base+0xaf4>
  417f64:	ccmp	x5, x2, #0x2, eq  // eq = none
  417f68:	b.ls	417c04 <_obstack_memory_used@@Base+0xb84>  // b.plast
  417f6c:	mov	x8, x2
  417f70:	sub	x7, x7, #0x1
  417f74:	mov	x3, x4
  417f78:	mov	x2, #0x0                   	// #0
  417f7c:	b	417c10 <_obstack_memory_used@@Base+0xb90>
  417f80:	and	x1, x11, #0xc00000
  417f84:	orr	w0, w0, #0x10
  417f88:	cmp	x1, #0x400, lsl #12
  417f8c:	b.eq	4182bc <_obstack_memory_used@@Base+0x123c>  // b.none
  417f90:	cmp	x1, #0x800, lsl #12
  417f94:	b.eq	4181ec <_obstack_memory_used@@Base+0x116c>  // b.none
  417f98:	cbnz	x1, 417b3c <_obstack_memory_used@@Base+0xabc>
  417f9c:	and	x1, x5, #0xf
  417fa0:	cmp	x1, #0x4
  417fa4:	b.eq	417b3c <_obstack_memory_used@@Base+0xabc>  // b.none
  417fa8:	adds	x5, x5, #0x4
  417fac:	cinc	x6, x6, cs  // cs = hs, nlast
  417fb0:	b	417b3c <_obstack_memory_used@@Base+0xabc>
  417fb4:	cmp	x1, #0xf
  417fb8:	b.ne	417b98 <_obstack_memory_used@@Base+0xb18>  // b.any
  417fbc:	tbz	x4, #47, 417fd8 <_obstack_memory_used@@Base+0xf58>
  417fc0:	cbnz	x3, 417fd8 <_obstack_memory_used@@Base+0xf58>
  417fc4:	orr	x6, x6, #0x800000000000
  417fc8:	mov	w10, w15
  417fcc:	mov	x2, x5
  417fd0:	mov	w1, #0x7fff                	// #32767
  417fd4:	b	417b74 <_obstack_memory_used@@Base+0xaf4>
  417fd8:	orr	x6, x4, #0x800000000000
  417fdc:	mov	w10, w13
  417fe0:	and	x6, x6, #0xffffffffffff
  417fe4:	mov	w1, #0x7fff                	// #32767
  417fe8:	b	417b74 <_obstack_memory_used@@Base+0xaf4>
  417fec:	adds	x3, x2, x12
  417ff0:	sub	x6, x8, #0x1
  417ff4:	adc	x4, x4, x9
  417ff8:	cset	x18, cs  // cs = hs, nlast
  417ffc:	mov	x2, x3
  418000:	cmp	x9, x4
  418004:	b.cs	418160 <_obstack_memory_used@@Base+0x10e0>  // b.hs, b.nlast
  418008:	cmp	x5, x4
  41800c:	b.ls	418188 <_obstack_memory_used@@Base+0x1108>  // b.plast
  418010:	adds	x2, x12, x3
  418014:	sub	x6, x8, #0x2
  418018:	adc	x4, x4, x9
  41801c:	b	417cd4 <_obstack_memory_used@@Base+0xc54>
  418020:	mov	x1, #0x1                   	// #1
  418024:	sub	x1, x1, x3
  418028:	cmp	x1, #0x74
  41802c:	b.le	418048 <_obstack_memory_used@@Base+0xfc8>
  418030:	orr	x2, x5, x6
  418034:	cbnz	x2, 418254 <_obstack_memory_used@@Base+0x11d4>
  418038:	orr	w0, w0, #0x8
  41803c:	mov	w1, #0x0                   	// #0
  418040:	mov	x6, #0x0                   	// #0
  418044:	b	41812c <_obstack_memory_used@@Base+0x10ac>
  418048:	cmp	x1, #0x3f
  41804c:	b.le	418194 <_obstack_memory_used@@Base+0x1114>
  418050:	mov	w2, #0x80                  	// #128
  418054:	sub	w2, w2, w1
  418058:	cmp	x1, #0x40
  41805c:	sub	w1, w1, #0x40
  418060:	lsl	x2, x6, x2
  418064:	orr	x2, x5, x2
  418068:	csel	x5, x2, x5, ne  // ne = any
  41806c:	lsr	x6, x6, x1
  418070:	cmp	x5, #0x0
  418074:	cset	x2, ne  // ne = any
  418078:	orr	x2, x2, x6
  41807c:	ands	x6, x2, #0x7
  418080:	b.eq	4181c8 <_obstack_memory_used@@Base+0x1148>  // b.none
  418084:	mov	x6, #0x0                   	// #0
  418088:	and	x11, x11, #0xc00000
  41808c:	orr	w0, w0, #0x10
  418090:	cmp	x11, #0x400, lsl #12
  418094:	b.eq	418308 <_obstack_memory_used@@Base+0x1288>  // b.none
  418098:	cmp	x11, #0x800, lsl #12
  41809c:	b.eq	418328 <_obstack_memory_used@@Base+0x12a8>  // b.none
  4180a0:	cbz	x11, 418290 <_obstack_memory_used@@Base+0x1210>
  4180a4:	tbnz	x6, #51, 4182a8 <_obstack_memory_used@@Base+0x1228>
  4180a8:	orr	w0, w0, #0x8
  4180ac:	extr	x2, x6, x2, #3
  4180b0:	mov	w1, #0x0                   	// #0
  4180b4:	ubfx	x6, x6, #3, #48
  4180b8:	b	41812c <_obstack_memory_used@@Base+0x10ac>
  4180bc:	clz	x1, x5
  4180c0:	add	x3, x1, #0x31
  4180c4:	add	x1, x1, #0x40
  4180c8:	cmp	x3, #0x3c
  4180cc:	b.le	417e24 <_obstack_memory_used@@Base+0xda4>
  4180d0:	sub	w6, w3, #0x3d
  4180d4:	lsl	x6, x5, x6
  4180d8:	mov	x5, #0x0                   	// #0
  4180dc:	b	417e40 <_obstack_memory_used@@Base+0xdc0>
  4180e0:	clz	x7, x2
  4180e4:	add	x4, x7, #0x31
  4180e8:	add	x0, x7, #0x40
  4180ec:	cmp	x4, #0x3c
  4180f0:	b.le	417e6c <_obstack_memory_used@@Base+0xdec>
  4180f4:	sub	w4, w4, #0x3d
  4180f8:	lsl	x4, x2, x4
  4180fc:	mov	x2, #0x0                   	// #0
  418100:	b	417e88 <_obstack_memory_used@@Base+0xe08>
  418104:	and	x2, x11, #0xc00000
  418108:	cmp	x2, #0x400, lsl #12
  41810c:	b.eq	4182d4 <_obstack_memory_used@@Base+0x1254>  // b.none
  418110:	cmp	x2, #0x800, lsl #12
  418114:	b.eq	418204 <_obstack_memory_used@@Base+0x1184>  // b.none
  418118:	cbz	x2, 4181e0 <_obstack_memory_used@@Base+0x1160>
  41811c:	mov	x6, #0xffffffffffff        	// #281474976710655
  418120:	mov	x2, #0xffffffffffffffff    	// #-1
  418124:	mov	w3, #0x14                  	// #20
  418128:	orr	w0, w0, w3
  41812c:	mov	x5, #0x0                   	// #0
  418130:	orr	w1, w1, w10, lsl #15
  418134:	bfxil	x5, x6, #0, #48
  418138:	fmov	d0, x2
  41813c:	bfi	x5, x1, #48, #16
  418140:	fmov	v0.d[1], x5
  418144:	b	417be4 <_obstack_memory_used@@Base+0xb64>
  418148:	orr	x6, x6, #0x800000000000
  41814c:	mov	w10, w15
  418150:	and	x6, x6, #0xffffffffffff
  418154:	mov	x2, x5
  418158:	mov	w1, #0x7fff                	// #32767
  41815c:	b	417b74 <_obstack_memory_used@@Base+0xaf4>
  418160:	cmp	x18, #0x0
  418164:	ccmp	x9, x4, #0x0, eq  // eq = none
  418168:	b.ne	417cd4 <_obstack_memory_used@@Base+0xc54>  // b.any
  41816c:	b	418008 <_obstack_memory_used@@Base+0xf88>
  418170:	cmp	x4, #0x0
  418174:	cset	w2, ne  // ne = any
  418178:	cmp	w2, #0x0
  41817c:	ccmp	x1, x16, #0x0, ne  // ne = any
  418180:	b.ne	417dbc <_obstack_memory_used@@Base+0xd3c>  // b.any
  418184:	b	417d90 <_obstack_memory_used@@Base+0xd10>
  418188:	ccmp	x1, x3, #0x0, eq  // eq = none
  41818c:	b.ls	417cd4 <_obstack_memory_used@@Base+0xc54>  // b.plast
  418190:	b	418010 <_obstack_memory_used@@Base+0xf90>
  418194:	mov	w2, #0x40                  	// #64
  418198:	sub	w2, w2, w1
  41819c:	lsr	x4, x5, x1
  4181a0:	lsl	x5, x5, x2
  4181a4:	cmp	x5, #0x0
  4181a8:	cset	x3, ne  // ne = any
  4181ac:	lsl	x2, x6, x2
  4181b0:	orr	x2, x2, x4
  4181b4:	lsr	x6, x6, x1
  4181b8:	orr	x2, x2, x3
  4181bc:	tst	x2, #0x7
  4181c0:	b.ne	418088 <_obstack_memory_used@@Base+0x1008>  // b.any
  4181c4:	tbnz	x6, #51, 418334 <_obstack_memory_used@@Base+0x12b4>
  4181c8:	mov	w1, #0x0                   	// #0
  4181cc:	extr	x2, x6, x2, #3
  4181d0:	ubfx	x6, x6, #3, #48
  4181d4:	tbz	w11, #11, 417b74 <_obstack_memory_used@@Base+0xaf4>
  4181d8:	orr	w0, w0, #0x8
  4181dc:	b	41812c <_obstack_memory_used@@Base+0x10ac>
  4181e0:	mov	w1, #0x7fff                	// #32767
  4181e4:	mov	x6, #0x0                   	// #0
  4181e8:	b	418124 <_obstack_memory_used@@Base+0x10a4>
  4181ec:	mov	w10, #0x0                   	// #0
  4181f0:	cbz	x14, 417b3c <_obstack_memory_used@@Base+0xabc>
  4181f4:	adds	x5, x5, #0x8
  4181f8:	mov	w10, #0x1                   	// #1
  4181fc:	cinc	x6, x6, cs  // cs = hs, nlast
  418200:	b	417b3c <_obstack_memory_used@@Base+0xabc>
  418204:	cmp	x14, #0x0
  418208:	mov	w2, #0x7fff                	// #32767
  41820c:	mov	x6, #0xffffffffffff        	// #281474976710655
  418210:	csel	w1, w1, w2, eq  // eq = none
  418214:	csel	x6, x6, xzr, eq  // eq = none
  418218:	csetm	x2, eq  // eq = none
  41821c:	b	418124 <_obstack_memory_used@@Base+0x10a4>
  418220:	sub	x5, x5, #0x2
  418224:	add	x3, x3, x9
  418228:	b	417c48 <_obstack_memory_used@@Base+0xbc8>
  41822c:	sub	x1, x1, #0x2
  418230:	add	x4, x4, x9
  418234:	b	417c78 <_obstack_memory_used@@Base+0xbf8>
  418238:	cmp	x3, #0x0
  41823c:	mov	x5, #0xffffffffffffffff    	// #-1
  418240:	b.gt	417f80 <_obstack_memory_used@@Base+0xf00>
  418244:	mov	x1, #0x1                   	// #1
  418248:	sub	x1, x1, x3
  41824c:	cmp	x1, #0x74
  418250:	b.le	418048 <_obstack_memory_used@@Base+0xfc8>
  418254:	and	x11, x11, #0xc00000
  418258:	orr	w0, w0, #0x10
  41825c:	cmp	x11, #0x400, lsl #12
  418260:	b.eq	41831c <_obstack_memory_used@@Base+0x129c>  // b.none
  418264:	cmp	x11, #0x800, lsl #12
  418268:	csel	x2, x14, xzr, eq  // eq = none
  41826c:	b	418038 <_obstack_memory_used@@Base+0xfb8>
  418270:	lsl	x8, x12, #1
  418274:	sub	x5, x5, #0x2
  418278:	cmp	x12, x8
  41827c:	cinc	x1, x9, hi  // hi = pmore
  418280:	cmp	x4, x8
  418284:	add	x1, x2, x1
  418288:	cset	w2, ne  // ne = any
  41828c:	b	417dbc <_obstack_memory_used@@Base+0xd3c>
  418290:	and	x1, x2, #0xf
  418294:	cmp	x1, #0x4
  418298:	b.eq	4182a4 <_obstack_memory_used@@Base+0x1224>  // b.none
  41829c:	adds	x2, x2, #0x4
  4182a0:	cinc	x6, x6, cs  // cs = hs, nlast
  4182a4:	tbz	x6, #51, 4180a8 <_obstack_memory_used@@Base+0x1028>
  4182a8:	orr	w0, w0, #0x8
  4182ac:	mov	w1, #0x1                   	// #1
  4182b0:	mov	x6, #0x0                   	// #0
  4182b4:	mov	x2, #0x0                   	// #0
  4182b8:	b	41812c <_obstack_memory_used@@Base+0x10ac>
  4182bc:	mov	w10, #0x1                   	// #1
  4182c0:	cbnz	x14, 417b3c <_obstack_memory_used@@Base+0xabc>
  4182c4:	adds	x5, x5, #0x8
  4182c8:	mov	w10, #0x0                   	// #0
  4182cc:	cinc	x6, x6, cs  // cs = hs, nlast
  4182d0:	b	417b3c <_obstack_memory_used@@Base+0xabc>
  4182d4:	cmp	x14, #0x0
  4182d8:	mov	w2, #0x7fff                	// #32767
  4182dc:	mov	x6, #0xffffffffffff        	// #281474976710655
  4182e0:	csel	w1, w1, w2, ne  // ne = any
  4182e4:	csel	x6, x6, xzr, ne  // ne = any
  4182e8:	csetm	x2, ne  // ne = any
  4182ec:	b	418124 <_obstack_memory_used@@Base+0x10a4>
  4182f0:	sub	x5, x5, #0x2
  4182f4:	add	x1, x1, x9
  4182f8:	b	417d18 <_obstack_memory_used@@Base+0xc98>
  4182fc:	sub	x2, x2, #0x2
  418300:	add	x1, x1, x9
  418304:	b	417d48 <_obstack_memory_used@@Base+0xcc8>
  418308:	cbnz	x14, 4182a4 <_obstack_memory_used@@Base+0x1224>
  41830c:	adds	x2, x2, #0x8
  418310:	cinc	x6, x6, cs  // cs = hs, nlast
  418314:	tbnz	x6, #51, 4182a8 <_obstack_memory_used@@Base+0x1228>
  418318:	b	4180a8 <_obstack_memory_used@@Base+0x1028>
  41831c:	mov	x2, #0x1                   	// #1
  418320:	sub	x2, x2, x14
  418324:	b	418038 <_obstack_memory_used@@Base+0xfb8>
  418328:	cbnz	x14, 41830c <_obstack_memory_used@@Base+0x128c>
  41832c:	tbnz	x6, #51, 4182a8 <_obstack_memory_used@@Base+0x1228>
  418330:	b	4180a8 <_obstack_memory_used@@Base+0x1028>
  418334:	orr	w0, w0, #0x10
  418338:	b	4182a8 <_obstack_memory_used@@Base+0x1228>
  41833c:	nop
  418340:	stp	x29, x30, [sp, #-48]!
  418344:	mov	x29, sp
  418348:	str	q0, [sp, #16]
  41834c:	str	q1, [sp, #32]
  418350:	ldp	x6, x1, [sp, #16]
  418354:	ldp	x7, x0, [sp, #32]
  418358:	mrs	x2, fpcr
  41835c:	ubfx	x4, x1, #48, #15
  418360:	lsr	x2, x1, #63
  418364:	lsr	x3, x0, #63
  418368:	ubfx	x9, x0, #0, #48
  41836c:	mov	x5, #0x7fff                	// #32767
  418370:	mov	x10, x6
  418374:	cmp	x4, x5
  418378:	and	w2, w2, #0xff
  41837c:	ubfx	x1, x1, #0, #48
  418380:	and	w3, w3, #0xff
  418384:	ubfx	x0, x0, #48, #15
  418388:	b.eq	4183bc <_obstack_memory_used@@Base+0x133c>  // b.none
  41838c:	cmp	x0, x5
  418390:	b.eq	4183a8 <_obstack_memory_used@@Base+0x1328>  // b.none
  418394:	cmp	x4, x0
  418398:	mov	w0, #0x1                   	// #1
  41839c:	b.eq	4183d4 <_obstack_memory_used@@Base+0x1354>  // b.none
  4183a0:	ldp	x29, x30, [sp], #48
  4183a4:	ret
  4183a8:	orr	x8, x9, x7
  4183ac:	cbnz	x8, 418438 <_obstack_memory_used@@Base+0x13b8>
  4183b0:	mov	w0, #0x1                   	// #1
  4183b4:	ldp	x29, x30, [sp], #48
  4183b8:	ret
  4183bc:	orr	x5, x1, x6
  4183c0:	cbnz	x5, 418408 <_obstack_memory_used@@Base+0x1388>
  4183c4:	cmp	x0, x4
  4183c8:	b.ne	4183b0 <_obstack_memory_used@@Base+0x1330>  // b.any
  4183cc:	orr	x8, x9, x7
  4183d0:	cbnz	x8, 418438 <_obstack_memory_used@@Base+0x13b8>
  4183d4:	cmp	x1, x9
  4183d8:	mov	w0, #0x1                   	// #1
  4183dc:	ccmp	x6, x7, #0x0, eq  // eq = none
  4183e0:	b.ne	4183a0 <_obstack_memory_used@@Base+0x1320>  // b.any
  4183e4:	cmp	w2, w3
  4183e8:	mov	w0, #0x0                   	// #0
  4183ec:	b.eq	4183a0 <_obstack_memory_used@@Base+0x1320>  // b.none
  4183f0:	mov	w0, #0x1                   	// #1
  4183f4:	cbnz	x4, 4183a0 <_obstack_memory_used@@Base+0x1320>
  4183f8:	orr	x1, x1, x10
  4183fc:	cmp	x1, #0x0
  418400:	cset	w0, ne  // ne = any
  418404:	b	4183a0 <_obstack_memory_used@@Base+0x1320>
  418408:	tst	x1, #0x800000000000
  41840c:	b.ne	418424 <_obstack_memory_used@@Base+0x13a4>  // b.any
  418410:	mov	w0, #0x1                   	// #1
  418414:	bl	4190e0 <_obstack_memory_used@@Base+0x2060>
  418418:	mov	w0, #0x1                   	// #1
  41841c:	ldp	x29, x30, [sp], #48
  418420:	ret
  418424:	cmp	x0, x4
  418428:	mov	w0, #0x1                   	// #1
  41842c:	b.ne	4183a0 <_obstack_memory_used@@Base+0x1320>  // b.any
  418430:	orr	x8, x9, x7
  418434:	cbz	x8, 4183a0 <_obstack_memory_used@@Base+0x1320>
  418438:	tst	x9, #0x800000000000
  41843c:	b.eq	418410 <_obstack_memory_used@@Base+0x1390>  // b.none
  418440:	b	4183b0 <_obstack_memory_used@@Base+0x1330>
  418444:	nop
  418448:	stp	x29, x30, [sp, #-48]!
  41844c:	mov	x29, sp
  418450:	str	q0, [sp, #16]
  418454:	str	q1, [sp, #32]
  418458:	ldp	x8, x1, [sp, #16]
  41845c:	ldp	x9, x0, [sp, #32]
  418460:	mrs	x2, fpcr
  418464:	ubfx	x4, x1, #48, #15
  418468:	ubfx	x10, x1, #0, #48
  41846c:	lsr	x2, x1, #63
  418470:	mov	x7, #0x7fff                	// #32767
  418474:	mov	x5, x8
  418478:	cmp	x4, x7
  41847c:	ubfx	x11, x0, #0, #48
  418480:	ubfx	x6, x0, #48, #15
  418484:	lsr	x1, x0, #63
  418488:	mov	x3, x9
  41848c:	b.eq	4184c8 <_obstack_memory_used@@Base+0x1448>  // b.none
  418490:	cmp	x6, x7
  418494:	b.eq	4184d8 <_obstack_memory_used@@Base+0x1458>  // b.none
  418498:	cbnz	x4, 418500 <_obstack_memory_used@@Base+0x1480>
  41849c:	orr	x5, x10, x8
  4184a0:	cmp	x5, #0x0
  4184a4:	cset	w0, eq  // eq = none
  4184a8:	cbnz	x6, 4184b4 <_obstack_memory_used@@Base+0x1434>
  4184ac:	orr	x3, x11, x9
  4184b0:	cbz	x3, 418520 <_obstack_memory_used@@Base+0x14a0>
  4184b4:	cbz	w0, 4184e4 <_obstack_memory_used@@Base+0x1464>
  4184b8:	cmp	x1, #0x0
  4184bc:	csinv	w0, w0, wzr, ne  // ne = any
  4184c0:	ldp	x29, x30, [sp], #48
  4184c4:	ret
  4184c8:	orr	x0, x10, x8
  4184cc:	cbnz	x0, 41852c <_obstack_memory_used@@Base+0x14ac>
  4184d0:	cmp	x6, x4
  4184d4:	b.ne	418500 <_obstack_memory_used@@Base+0x1480>  // b.any
  4184d8:	orr	x3, x11, x3
  4184dc:	cbnz	x3, 41852c <_obstack_memory_used@@Base+0x14ac>
  4184e0:	cbz	x4, 418510 <_obstack_memory_used@@Base+0x1490>
  4184e4:	cmp	x2, x1
  4184e8:	b.eq	418540 <_obstack_memory_used@@Base+0x14c0>  // b.none
  4184ec:	cmp	x2, #0x0
  4184f0:	mov	w0, #0xffffffff            	// #-1
  4184f4:	cneg	w0, w0, eq  // eq = none
  4184f8:	ldp	x29, x30, [sp], #48
  4184fc:	ret
  418500:	cbnz	x6, 4184e4 <_obstack_memory_used@@Base+0x1464>
  418504:	orr	x3, x11, x3
  418508:	cbnz	x3, 4184e4 <_obstack_memory_used@@Base+0x1464>
  41850c:	b	4184ec <_obstack_memory_used@@Base+0x146c>
  418510:	orr	x5, x10, x5
  418514:	cmp	x5, #0x0
  418518:	cset	w0, eq  // eq = none
  41851c:	b	4184b4 <_obstack_memory_used@@Base+0x1434>
  418520:	mov	w0, #0x0                   	// #0
  418524:	cbz	x5, 4184c0 <_obstack_memory_used@@Base+0x1440>
  418528:	b	4184ec <_obstack_memory_used@@Base+0x146c>
  41852c:	mov	w0, #0x1                   	// #1
  418530:	bl	4190e0 <_obstack_memory_used@@Base+0x2060>
  418534:	mov	w0, #0xfffffffe            	// #-2
  418538:	ldp	x29, x30, [sp], #48
  41853c:	ret
  418540:	cmp	x4, x6
  418544:	b.gt	4184ec <_obstack_memory_used@@Base+0x146c>
  418548:	b.lt	418580 <_obstack_memory_used@@Base+0x1500>  // b.tstop
  41854c:	cmp	x10, x11
  418550:	b.hi	4184ec <_obstack_memory_used@@Base+0x146c>  // b.pmore
  418554:	cset	w0, eq  // eq = none
  418558:	cmp	w0, #0x0
  41855c:	ccmp	x8, x9, #0x0, ne  // ne = any
  418560:	b.hi	4184ec <_obstack_memory_used@@Base+0x146c>  // b.pmore
  418564:	cmp	x10, x11
  418568:	b.cc	418580 <_obstack_memory_used@@Base+0x1500>  // b.lo, b.ul, b.last
  41856c:	cmp	w0, #0x0
  418570:	mov	w0, #0x0                   	// #0
  418574:	ccmp	x8, x9, #0x2, ne  // ne = any
  418578:	b.cs	4184c0 <_obstack_memory_used@@Base+0x1440>  // b.hs, b.nlast
  41857c:	nop
  418580:	cmp	x2, #0x0
  418584:	mov	w0, #0x1                   	// #1
  418588:	cneg	w0, w0, eq  // eq = none
  41858c:	b	4184c0 <_obstack_memory_used@@Base+0x1440>
  418590:	stp	x29, x30, [sp, #-48]!
  418594:	mov	x29, sp
  418598:	str	q0, [sp, #16]
  41859c:	str	q1, [sp, #32]
  4185a0:	ldp	x8, x1, [sp, #16]
  4185a4:	ldp	x9, x0, [sp, #32]
  4185a8:	mrs	x2, fpcr
  4185ac:	ubfx	x4, x1, #48, #15
  4185b0:	ubfx	x10, x1, #0, #48
  4185b4:	lsr	x2, x1, #63
  4185b8:	mov	x5, #0x7fff                	// #32767
  4185bc:	mov	x6, x8
  4185c0:	cmp	x4, x5
  4185c4:	ubfx	x11, x0, #0, #48
  4185c8:	ubfx	x7, x0, #48, #15
  4185cc:	lsr	x1, x0, #63
  4185d0:	mov	x3, x9
  4185d4:	b.eq	41860c <_obstack_memory_used@@Base+0x158c>  // b.none
  4185d8:	cmp	x7, x5
  4185dc:	b.eq	41861c <_obstack_memory_used@@Base+0x159c>  // b.none
  4185e0:	cbnz	x4, 418648 <_obstack_memory_used@@Base+0x15c8>
  4185e4:	orr	x6, x10, x8
  4185e8:	cmp	x6, #0x0
  4185ec:	cset	w0, eq  // eq = none
  4185f0:	cbnz	x7, 418634 <_obstack_memory_used@@Base+0x15b4>
  4185f4:	orr	x3, x11, x9
  4185f8:	cbnz	x3, 418634 <_obstack_memory_used@@Base+0x15b4>
  4185fc:	mov	w0, #0x0                   	// #0
  418600:	cbnz	x6, 41865c <_obstack_memory_used@@Base+0x15dc>
  418604:	ldp	x29, x30, [sp], #48
  418608:	ret
  41860c:	orr	x0, x10, x8
  418610:	cbnz	x0, 418670 <_obstack_memory_used@@Base+0x15f0>
  418614:	cmp	x7, x4
  418618:	b.ne	418648 <_obstack_memory_used@@Base+0x15c8>  // b.any
  41861c:	orr	x3, x11, x3
  418620:	cbnz	x3, 418670 <_obstack_memory_used@@Base+0x15f0>
  418624:	cbnz	x4, 418654 <_obstack_memory_used@@Base+0x15d4>
  418628:	orr	x6, x10, x6
  41862c:	cmp	x6, #0x0
  418630:	cset	w0, eq  // eq = none
  418634:	cbz	w0, 418654 <_obstack_memory_used@@Base+0x15d4>
  418638:	cmp	x1, #0x0
  41863c:	csinv	w0, w0, wzr, ne  // ne = any
  418640:	ldp	x29, x30, [sp], #48
  418644:	ret
  418648:	cbnz	x7, 418654 <_obstack_memory_used@@Base+0x15d4>
  41864c:	orr	x3, x11, x3
  418650:	cbz	x3, 41865c <_obstack_memory_used@@Base+0x15dc>
  418654:	cmp	x2, x1
  418658:	b.eq	418684 <_obstack_memory_used@@Base+0x1604>  // b.none
  41865c:	cmp	x2, #0x0
  418660:	mov	w0, #0xffffffff            	// #-1
  418664:	cneg	w0, w0, eq  // eq = none
  418668:	ldp	x29, x30, [sp], #48
  41866c:	ret
  418670:	mov	w0, #0x1                   	// #1
  418674:	bl	4190e0 <_obstack_memory_used@@Base+0x2060>
  418678:	mov	w0, #0x2                   	// #2
  41867c:	ldp	x29, x30, [sp], #48
  418680:	ret
  418684:	cmp	x4, x7
  418688:	b.gt	41865c <_obstack_memory_used@@Base+0x15dc>
  41868c:	b.lt	4186c0 <_obstack_memory_used@@Base+0x1640>  // b.tstop
  418690:	cmp	x10, x11
  418694:	b.hi	41865c <_obstack_memory_used@@Base+0x15dc>  // b.pmore
  418698:	cset	w0, eq  // eq = none
  41869c:	cmp	w0, #0x0
  4186a0:	ccmp	x8, x9, #0x0, ne  // ne = any
  4186a4:	b.hi	41865c <_obstack_memory_used@@Base+0x15dc>  // b.pmore
  4186a8:	cmp	x10, x11
  4186ac:	b.cc	4186c0 <_obstack_memory_used@@Base+0x1640>  // b.lo, b.ul, b.last
  4186b0:	cmp	w0, #0x0
  4186b4:	mov	w0, #0x0                   	// #0
  4186b8:	ccmp	x8, x9, #0x2, ne  // ne = any
  4186bc:	b.cs	418604 <_obstack_memory_used@@Base+0x1584>  // b.hs, b.nlast
  4186c0:	cmp	x2, #0x0
  4186c4:	mov	w0, #0x1                   	// #1
  4186c8:	cneg	w0, w0, eq  // eq = none
  4186cc:	b	418604 <_obstack_memory_used@@Base+0x1584>
  4186d0:	stp	x29, x30, [sp, #-80]!
  4186d4:	mov	x29, sp
  4186d8:	str	q0, [sp, #48]
  4186dc:	str	q1, [sp, #64]
  4186e0:	ldp	x1, x0, [sp, #48]
  4186e4:	ldp	x3, x2, [sp, #64]
  4186e8:	mrs	x12, fpcr
  4186ec:	lsr	x4, x0, #63
  4186f0:	ubfx	x8, x0, #0, #48
  4186f4:	and	w16, w4, #0xff
  4186f8:	mov	x14, x4
  4186fc:	ubfx	x10, x0, #48, #15
  418700:	cbz	w10, 418a84 <_obstack_memory_used@@Base+0x1a04>
  418704:	mov	w4, #0x7fff                	// #32767
  418708:	cmp	w10, w4
  41870c:	b.eq	418ac4 <_obstack_memory_used@@Base+0x1a44>  // b.none
  418710:	and	x10, x10, #0xffff
  418714:	extr	x4, x8, x1, #61
  418718:	mov	x5, #0xffffffffffffc001    	// #-16383
  41871c:	orr	x8, x4, #0x8000000000000
  418720:	add	x10, x10, x5
  418724:	lsl	x7, x1, #3
  418728:	mov	x11, #0x2                   	// #2
  41872c:	mov	x9, #0x1                   	// #1
  418730:	mov	x6, #0x3                   	// #3
  418734:	mov	x1, #0x0                   	// #0
  418738:	mov	x17, #0x0                   	// #0
  41873c:	mov	w0, #0x0                   	// #0
  418740:	lsr	x5, x2, #63
  418744:	ubfx	x4, x2, #0, #48
  418748:	and	w15, w5, #0xff
  41874c:	mov	x13, x5
  418750:	ubfx	x5, x2, #48, #15
  418754:	cbz	w5, 418b08 <_obstack_memory_used@@Base+0x1a88>
  418758:	mov	w9, #0x7fff                	// #32767
  41875c:	cmp	w5, w9
  418760:	b.eq	4187f0 <_obstack_memory_used@@Base+0x1770>  // b.none
  418764:	and	x5, x5, #0xffff
  418768:	extr	x2, x4, x3, #61
  41876c:	mov	x4, #0xffffffffffffc001    	// #-16383
  418770:	add	x5, x5, x4
  418774:	add	x10, x10, x5
  418778:	orr	x4, x2, #0x8000000000000
  41877c:	lsl	x5, x3, #3
  418780:	mov	x6, #0x0                   	// #0
  418784:	eor	w3, w16, w15
  418788:	cmp	x1, #0xa
  41878c:	and	w11, w3, #0xff
  418790:	and	x9, x3, #0xff
  418794:	add	x18, x10, #0x1
  418798:	b.gt	418a70 <_obstack_memory_used@@Base+0x19f0>
  41879c:	cmp	x1, #0x2
  4187a0:	b.gt	418830 <_obstack_memory_used@@Base+0x17b0>
  4187a4:	sub	x1, x1, #0x1
  4187a8:	cmp	x1, #0x1
  4187ac:	b.hi	418890 <_obstack_memory_used@@Base+0x1810>  // b.pmore
  4187b0:	cmp	x6, #0x2
  4187b4:	b.eq	418b4c <_obstack_memory_used@@Base+0x1acc>  // b.none
  4187b8:	cmp	x6, #0x1
  4187bc:	b.ne	4189f0 <_obstack_memory_used@@Base+0x1970>  // b.any
  4187c0:	mov	w1, #0x0                   	// #0
  4187c4:	mov	x4, #0x0                   	// #0
  4187c8:	mov	x7, #0x0                   	// #0
  4187cc:	mov	x3, #0x0                   	// #0
  4187d0:	orr	w1, w1, w11, lsl #15
  4187d4:	bfxil	x3, x4, #0, #48
  4187d8:	fmov	d0, x7
  4187dc:	bfi	x3, x1, #48, #16
  4187e0:	fmov	v0.d[1], x3
  4187e4:	cbnz	w0, 418cf8 <_obstack_memory_used@@Base+0x1c78>
  4187e8:	ldp	x29, x30, [sp], #80
  4187ec:	ret
  4187f0:	mov	x2, #0x7fff                	// #32767
  4187f4:	orr	x5, x4, x3
  4187f8:	add	x2, x10, x2
  4187fc:	cbz	x5, 418b5c <_obstack_memory_used@@Base+0x1adc>
  418800:	ands	x1, x4, #0x800000000000
  418804:	eor	w9, w16, w15
  418808:	csinc	w0, w0, wzr, ne  // ne = any
  41880c:	and	w11, w9, #0xff
  418810:	add	x18, x10, #0x8, lsl #12
  418814:	cmp	x6, #0xa
  418818:	and	x9, x9, #0xff
  41881c:	b.gt	418c54 <_obstack_memory_used@@Base+0x1bd4>
  418820:	mov	x10, x2
  418824:	mov	x5, x3
  418828:	mov	x1, x6
  41882c:	mov	x6, #0x3                   	// #3
  418830:	mov	x2, #0x1                   	// #1
  418834:	mov	x3, #0x530                 	// #1328
  418838:	lsl	x1, x2, x1
  41883c:	tst	x1, x3
  418840:	b.ne	418a64 <_obstack_memory_used@@Base+0x19e4>  // b.any
  418844:	mov	x3, #0x240                 	// #576
  418848:	tst	x1, x3
  41884c:	b.ne	418a4c <_obstack_memory_used@@Base+0x19cc>  // b.any
  418850:	mov	x2, #0x88                  	// #136
  418854:	tst	x1, x2
  418858:	b.eq	418890 <_obstack_memory_used@@Base+0x1810>  // b.none
  41885c:	mov	x8, x4
  418860:	mov	x7, x5
  418864:	mov	x17, x6
  418868:	cmp	x17, #0x2
  41886c:	b.eq	418ea4 <_obstack_memory_used@@Base+0x1e24>  // b.none
  418870:	mov	x6, x17
  418874:	mov	w11, w15
  418878:	cmp	x17, #0x3
  41887c:	mov	x4, x8
  418880:	mov	x5, x7
  418884:	mov	x9, x13
  418888:	b.ne	4187b8 <_obstack_memory_used@@Base+0x1738>  // b.any
  41888c:	b	418c9c <_obstack_memory_used@@Base+0x1c1c>
  418890:	lsr	x13, x7, #32
  418894:	and	x6, x5, #0xffffffff
  418898:	and	x17, x4, #0xffffffff
  41889c:	and	x7, x7, #0xffffffff
  4188a0:	stp	x21, x22, [sp, #32]
  4188a4:	lsr	x22, x5, #32
  4188a8:	lsr	x2, x4, #32
  4188ac:	stp	x19, x20, [sp, #16]
  4188b0:	mul	x19, x13, x6
  4188b4:	lsr	x4, x8, #32
  4188b8:	mul	x1, x13, x17
  4188bc:	and	x3, x8, #0xffffffff
  4188c0:	madd	x5, x22, x7, x19
  4188c4:	mov	x14, #0x100000000           	// #4294967296
  4188c8:	mul	x15, x6, x7
  4188cc:	mul	x16, x7, x17
  4188d0:	madd	x7, x2, x7, x1
  4188d4:	and	x30, x15, #0xffffffff
  4188d8:	mul	x21, x4, x6
  4188dc:	add	x15, x5, x15, lsr #32
  4188e0:	mul	x20, x4, x17
  4188e4:	cmp	x19, x15
  4188e8:	mul	x5, x13, x22
  4188ec:	add	x30, x30, x15, lsl #32
  4188f0:	mul	x19, x13, x2
  4188f4:	add	x13, x7, x16, lsr #32
  4188f8:	mul	x6, x6, x3
  4188fc:	add	x8, x5, x14
  418900:	mul	x17, x3, x17
  418904:	csel	x5, x8, x5, hi  // hi = pmore
  418908:	madd	x7, x22, x3, x21
  41890c:	cmp	x1, x13
  418910:	madd	x3, x2, x3, x20
  418914:	and	x16, x16, #0xffffffff
  418918:	mul	x8, x22, x4
  41891c:	add	x16, x16, x13, lsl #32
  418920:	add	x7, x7, x6, lsr #32
  418924:	mul	x2, x2, x4
  418928:	add	x3, x3, x17, lsr #32
  41892c:	add	x4, x19, x14
  418930:	csel	x19, x4, x19, hi  // hi = pmore
  418934:	and	x1, x17, #0xffffffff
  418938:	cmp	x21, x7
  41893c:	add	x4, x8, x14
  418940:	csel	x8, x4, x8, hi  // hi = pmore
  418944:	add	x1, x1, x3, lsl #32
  418948:	cmp	x20, x3
  41894c:	add	x15, x16, x15, lsr #32
  418950:	add	x13, x19, x13, lsr #32
  418954:	add	x14, x2, x14
  418958:	add	x15, x5, x15
  41895c:	csel	x2, x14, x2, hi  // hi = pmore
  418960:	adds	x1, x1, x13
  418964:	and	x6, x6, #0xffffffff
  418968:	cset	x5, cs  // cs = hs, nlast
  41896c:	cmp	x15, x16
  418970:	cset	x4, cc  // cc = lo, ul, last
  418974:	add	x6, x6, x7, lsl #32
  418978:	adds	x1, x1, x4
  41897c:	lsr	x3, x3, #32
  418980:	cset	x4, cs  // cs = hs, nlast
  418984:	cmp	x5, #0x0
  418988:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  41898c:	add	x7, x8, x7, lsr #32
  418990:	cinc	x3, x3, ne  // ne = any
  418994:	adds	x5, x15, x6
  418998:	cset	x4, cs  // cs = hs, nlast
  41899c:	adds	x1, x1, x7
  4189a0:	cset	x6, cs  // cs = hs, nlast
  4189a4:	adds	x1, x1, x4
  4189a8:	cset	x4, cs  // cs = hs, nlast
  4189ac:	cmp	x6, #0x0
  4189b0:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  4189b4:	orr	x30, x30, x5, lsl #13
  4189b8:	cinc	x2, x2, ne  // ne = any
  4189bc:	cmp	x30, #0x0
  4189c0:	add	x2, x2, x3
  4189c4:	cset	x3, ne  // ne = any
  4189c8:	orr	x5, x3, x5, lsr #51
  4189cc:	orr	x5, x5, x1, lsl #13
  4189d0:	extr	x4, x2, x1, #51
  4189d4:	tbz	x2, #39, 418d80 <_obstack_memory_used@@Base+0x1d00>
  4189d8:	ldp	x19, x20, [sp, #16]
  4189dc:	and	x1, x5, #0x1
  4189e0:	ldp	x21, x22, [sp, #32]
  4189e4:	orr	x5, x1, x5, lsr #1
  4189e8:	orr	x5, x5, x4, lsl #63
  4189ec:	lsr	x4, x4, #1
  4189f0:	mov	x1, #0x3fff                	// #16383
  4189f4:	add	x2, x18, x1
  4189f8:	cmp	x2, #0x0
  4189fc:	b.le	418bd0 <_obstack_memory_used@@Base+0x1b50>
  418a00:	tst	x5, #0x7
  418a04:	b.eq	418a24 <_obstack_memory_used@@Base+0x19a4>  // b.none
  418a08:	and	x1, x12, #0xc00000
  418a0c:	orr	w0, w0, #0x10
  418a10:	cmp	x1, #0x400, lsl #12
  418a14:	b.eq	418e58 <_obstack_memory_used@@Base+0x1dd8>  // b.none
  418a18:	cmp	x1, #0x800, lsl #12
  418a1c:	b.eq	418de8 <_obstack_memory_used@@Base+0x1d68>  // b.none
  418a20:	cbz	x1, 418e14 <_obstack_memory_used@@Base+0x1d94>
  418a24:	tbz	x4, #52, 418a30 <_obstack_memory_used@@Base+0x19b0>
  418a28:	and	x4, x4, #0xffefffffffffffff
  418a2c:	add	x2, x18, #0x4, lsl #12
  418a30:	mov	x1, #0x7ffe                	// #32766
  418a34:	cmp	x2, x1
  418a38:	b.gt	418d54 <_obstack_memory_used@@Base+0x1cd4>
  418a3c:	and	w1, w2, #0x7fff
  418a40:	extr	x7, x4, x5, #3
  418a44:	ubfx	x4, x4, #3, #48
  418a48:	b	4187cc <_obstack_memory_used@@Base+0x174c>
  418a4c:	mov	w0, w2
  418a50:	mov	w11, #0x0                   	// #0
  418a54:	mov	x4, #0xffffffffffff        	// #281474976710655
  418a58:	mov	x7, #0xffffffffffffffff    	// #-1
  418a5c:	mov	w1, #0x7fff                	// #32767
  418a60:	b	4187cc <_obstack_memory_used@@Base+0x174c>
  418a64:	mov	w15, w11
  418a68:	mov	x13, x9
  418a6c:	b	418868 <_obstack_memory_used@@Base+0x17e8>
  418a70:	cmp	x1, #0xb
  418a74:	b.eq	41885c <_obstack_memory_used@@Base+0x17dc>  // b.none
  418a78:	mov	w15, w16
  418a7c:	mov	x13, x14
  418a80:	b	418868 <_obstack_memory_used@@Base+0x17e8>
  418a84:	orr	x7, x8, x1
  418a88:	cbz	x7, 418bac <_obstack_memory_used@@Base+0x1b2c>
  418a8c:	cbz	x8, 418d0c <_obstack_memory_used@@Base+0x1c8c>
  418a90:	clz	x0, x8
  418a94:	sub	x4, x0, #0xf
  418a98:	add	w7, w4, #0x3
  418a9c:	mov	w5, #0x3d                  	// #61
  418aa0:	sub	w5, w5, w4
  418aa4:	lsl	x4, x8, x7
  418aa8:	lsr	x5, x1, x5
  418aac:	orr	x8, x5, x4
  418ab0:	lsl	x7, x1, x7
  418ab4:	mov	x10, #0xffffffffffffc011    	// #-16367
  418ab8:	mov	x11, #0x2                   	// #2
  418abc:	sub	x10, x10, x0
  418ac0:	b	41872c <_obstack_memory_used@@Base+0x16ac>
  418ac4:	orr	x7, x8, x1
  418ac8:	cbnz	x7, 418b80 <_obstack_memory_used@@Base+0x1b00>
  418acc:	lsr	x5, x2, #63
  418ad0:	ubfx	x4, x2, #0, #48
  418ad4:	and	w15, w5, #0xff
  418ad8:	mov	x13, x5
  418adc:	mov	x8, #0x0                   	// #0
  418ae0:	ubfx	x5, x2, #48, #15
  418ae4:	mov	x11, #0xa                   	// #10
  418ae8:	mov	x9, #0x9                   	// #9
  418aec:	mov	x6, #0xb                   	// #11
  418af0:	mov	x1, #0x8                   	// #8
  418af4:	mov	x10, #0x7fff                	// #32767
  418af8:	mov	x17, #0x2                   	// #2
  418afc:	mov	w0, #0x0                   	// #0
  418b00:	cbnz	w5, 418758 <_obstack_memory_used@@Base+0x16d8>
  418b04:	nop
  418b08:	orr	x5, x4, x3
  418b0c:	cbz	x5, 418b70 <_obstack_memory_used@@Base+0x1af0>
  418b10:	cbz	x4, 418d30 <_obstack_memory_used@@Base+0x1cb0>
  418b14:	clz	x6, x4
  418b18:	sub	x2, x6, #0xf
  418b1c:	add	w5, w2, #0x3
  418b20:	mov	w9, #0x3d                  	// #61
  418b24:	sub	w9, w9, w2
  418b28:	lsl	x2, x4, x5
  418b2c:	lsr	x9, x3, x9
  418b30:	orr	x4, x9, x2
  418b34:	lsl	x5, x3, x5
  418b38:	sub	x10, x10, x6
  418b3c:	mov	x3, #0xffffffffffffc011    	// #-16367
  418b40:	mov	x6, #0x0                   	// #0
  418b44:	add	x10, x10, x3
  418b48:	b	418784 <_obstack_memory_used@@Base+0x1704>
  418b4c:	mov	w1, #0x7fff                	// #32767
  418b50:	mov	x4, #0x0                   	// #0
  418b54:	mov	x7, #0x0                   	// #0
  418b58:	b	4187cc <_obstack_memory_used@@Base+0x174c>
  418b5c:	mov	x1, x11
  418b60:	mov	x10, x2
  418b64:	mov	x4, #0x0                   	// #0
  418b68:	mov	x6, #0x2                   	// #2
  418b6c:	b	418784 <_obstack_memory_used@@Base+0x1704>
  418b70:	mov	x1, x9
  418b74:	mov	x4, #0x0                   	// #0
  418b78:	mov	x6, #0x1                   	// #1
  418b7c:	b	418784 <_obstack_memory_used@@Base+0x1704>
  418b80:	lsr	x0, x8, #47
  418b84:	mov	x7, x1
  418b88:	eor	x0, x0, #0x1
  418b8c:	mov	x11, #0xe                   	// #14
  418b90:	and	w0, w0, #0x1
  418b94:	mov	x9, #0xd                   	// #13
  418b98:	mov	x6, #0xf                   	// #15
  418b9c:	mov	x1, #0xc                   	// #12
  418ba0:	mov	x10, #0x7fff                	// #32767
  418ba4:	mov	x17, #0x3                   	// #3
  418ba8:	b	418740 <_obstack_memory_used@@Base+0x16c0>
  418bac:	mov	x8, #0x0                   	// #0
  418bb0:	mov	x11, #0x6                   	// #6
  418bb4:	mov	x9, #0x5                   	// #5
  418bb8:	mov	x6, #0x7                   	// #7
  418bbc:	mov	x1, #0x4                   	// #4
  418bc0:	mov	x10, #0x0                   	// #0
  418bc4:	mov	x17, #0x1                   	// #1
  418bc8:	mov	w0, #0x0                   	// #0
  418bcc:	b	418740 <_obstack_memory_used@@Base+0x16c0>
  418bd0:	mov	x1, #0x1                   	// #1
  418bd4:	sub	x2, x1, x2
  418bd8:	cmp	x2, #0x74
  418bdc:	b.gt	418cb0 <_obstack_memory_used@@Base+0x1c30>
  418be0:	cmp	x2, #0x3f
  418be4:	b.le	418d90 <_obstack_memory_used@@Base+0x1d10>
  418be8:	mov	w1, #0x80                  	// #128
  418bec:	sub	w1, w1, w2
  418bf0:	cmp	x2, #0x40
  418bf4:	sub	w2, w2, #0x40
  418bf8:	lsl	x1, x4, x1
  418bfc:	orr	x1, x5, x1
  418c00:	csel	x5, x1, x5, ne  // ne = any
  418c04:	lsr	x2, x4, x2
  418c08:	cmp	x5, #0x0
  418c0c:	cset	x7, ne  // ne = any
  418c10:	orr	x7, x7, x2
  418c14:	ands	x4, x7, #0x7
  418c18:	b.eq	418dc4 <_obstack_memory_used@@Base+0x1d44>  // b.none
  418c1c:	mov	x4, #0x0                   	// #0
  418c20:	and	x12, x12, #0xc00000
  418c24:	orr	w0, w0, #0x10
  418c28:	cmp	x12, #0x400, lsl #12
  418c2c:	b.eq	418e90 <_obstack_memory_used@@Base+0x1e10>  // b.none
  418c30:	cmp	x12, #0x800, lsl #12
  418c34:	b.eq	418e7c <_obstack_memory_used@@Base+0x1dfc>  // b.none
  418c38:	cbz	x12, 418e2c <_obstack_memory_used@@Base+0x1dac>
  418c3c:	tbnz	x4, #51, 418e44 <_obstack_memory_used@@Base+0x1dc4>
  418c40:	orr	w0, w0, #0x8
  418c44:	extr	x7, x4, x7, #3
  418c48:	mov	w1, #0x0                   	// #0
  418c4c:	ubfx	x4, x4, #3, #48
  418c50:	b	418ce0 <_obstack_memory_used@@Base+0x1c60>
  418c54:	cmp	x6, #0xf
  418c58:	b.ne	418c8c <_obstack_memory_used@@Base+0x1c0c>  // b.any
  418c5c:	tbz	x8, #47, 418c78 <_obstack_memory_used@@Base+0x1bf8>
  418c60:	cbnz	x1, 418c78 <_obstack_memory_used@@Base+0x1bf8>
  418c64:	orr	x4, x4, #0x800000000000
  418c68:	mov	w11, w15
  418c6c:	mov	x7, x3
  418c70:	mov	w1, #0x7fff                	// #32767
  418c74:	b	4187cc <_obstack_memory_used@@Base+0x174c>
  418c78:	orr	x4, x8, #0x800000000000
  418c7c:	mov	w11, w16
  418c80:	and	x4, x4, #0xffffffffffff
  418c84:	mov	w1, #0x7fff                	// #32767
  418c88:	b	4187cc <_obstack_memory_used@@Base+0x174c>
  418c8c:	cmp	x6, #0xb
  418c90:	b.ne	418a78 <_obstack_memory_used@@Base+0x19f8>  // b.any
  418c94:	mov	w11, w15
  418c98:	mov	x5, x3
  418c9c:	orr	x4, x4, #0x800000000000
  418ca0:	mov	x7, x5
  418ca4:	and	x4, x4, #0xffffffffffff
  418ca8:	mov	w1, #0x7fff                	// #32767
  418cac:	b	4187cc <_obstack_memory_used@@Base+0x174c>
  418cb0:	orr	x7, x5, x4
  418cb4:	cbz	x7, 418cd4 <_obstack_memory_used@@Base+0x1c54>
  418cb8:	and	x12, x12, #0xc00000
  418cbc:	orr	w0, w0, #0x10
  418cc0:	cmp	x12, #0x400, lsl #12
  418cc4:	sub	x7, x1, x9
  418cc8:	b.eq	418cd4 <_obstack_memory_used@@Base+0x1c54>  // b.none
  418ccc:	cmp	x12, #0x800, lsl #12
  418cd0:	csel	x7, x9, xzr, eq  // eq = none
  418cd4:	orr	w0, w0, #0x8
  418cd8:	mov	w1, #0x0                   	// #0
  418cdc:	mov	x4, #0x0                   	// #0
  418ce0:	mov	x3, #0x0                   	// #0
  418ce4:	fmov	d0, x7
  418ce8:	bfxil	x3, x4, #0, #48
  418cec:	bfi	x3, x1, #48, #15
  418cf0:	bfi	x3, x11, #63, #1
  418cf4:	fmov	v0.d[1], x3
  418cf8:	str	q0, [sp, #48]
  418cfc:	bl	4190e0 <_obstack_memory_used@@Base+0x2060>
  418d00:	ldr	q0, [sp, #48]
  418d04:	ldp	x29, x30, [sp], #80
  418d08:	ret
  418d0c:	clz	x10, x1
  418d10:	add	x4, x10, #0x31
  418d14:	add	x0, x10, #0x40
  418d18:	cmp	x4, #0x3c
  418d1c:	b.le	418a98 <_obstack_memory_used@@Base+0x1a18>
  418d20:	sub	w4, w4, #0x3d
  418d24:	mov	x7, #0x0                   	// #0
  418d28:	lsl	x8, x1, x4
  418d2c:	b	418ab4 <_obstack_memory_used@@Base+0x1a34>
  418d30:	clz	x6, x3
  418d34:	add	x2, x6, #0x31
  418d38:	add	x6, x6, #0x40
  418d3c:	cmp	x2, #0x3c
  418d40:	b.le	418b1c <_obstack_memory_used@@Base+0x1a9c>
  418d44:	sub	w2, w2, #0x3d
  418d48:	mov	x5, #0x0                   	// #0
  418d4c:	lsl	x4, x3, x2
  418d50:	b	418b38 <_obstack_memory_used@@Base+0x1ab8>
  418d54:	and	x7, x12, #0xc00000
  418d58:	cmp	x7, #0x400, lsl #12
  418d5c:	b.eq	418e60 <_obstack_memory_used@@Base+0x1de0>  // b.none
  418d60:	cmp	x7, #0x800, lsl #12
  418d64:	b.eq	418df8 <_obstack_memory_used@@Base+0x1d78>  // b.none
  418d68:	cbz	x7, 418ddc <_obstack_memory_used@@Base+0x1d5c>
  418d6c:	mov	x4, #0xffffffffffff        	// #281474976710655
  418d70:	mov	x7, #0xffffffffffffffff    	// #-1
  418d74:	mov	w2, #0x14                  	// #20
  418d78:	orr	w0, w0, w2
  418d7c:	b	418ce0 <_obstack_memory_used@@Base+0x1c60>
  418d80:	mov	x18, x10
  418d84:	ldp	x19, x20, [sp, #16]
  418d88:	ldp	x21, x22, [sp, #32]
  418d8c:	b	4189f0 <_obstack_memory_used@@Base+0x1970>
  418d90:	mov	w1, #0x40                  	// #64
  418d94:	sub	w1, w1, w2
  418d98:	lsr	x3, x5, x2
  418d9c:	lsl	x5, x5, x1
  418da0:	cmp	x5, #0x0
  418da4:	lsl	x7, x4, x1
  418da8:	cset	x1, ne  // ne = any
  418dac:	orr	x7, x7, x3
  418db0:	lsr	x4, x4, x2
  418db4:	orr	x7, x7, x1
  418db8:	tst	x7, #0x7
  418dbc:	b.ne	418c20 <_obstack_memory_used@@Base+0x1ba0>  // b.any
  418dc0:	tbnz	x4, #51, 418e9c <_obstack_memory_used@@Base+0x1e1c>
  418dc4:	mov	w1, #0x0                   	// #0
  418dc8:	extr	x7, x4, x7, #3
  418dcc:	ubfx	x4, x4, #3, #48
  418dd0:	tbz	w12, #11, 4187cc <_obstack_memory_used@@Base+0x174c>
  418dd4:	orr	w0, w0, #0x8
  418dd8:	b	418ce0 <_obstack_memory_used@@Base+0x1c60>
  418ddc:	mov	w1, #0x7fff                	// #32767
  418de0:	mov	x4, #0x0                   	// #0
  418de4:	b	418d74 <_obstack_memory_used@@Base+0x1cf4>
  418de8:	cbz	x9, 418a24 <_obstack_memory_used@@Base+0x19a4>
  418dec:	adds	x5, x5, #0x8
  418df0:	cinc	x4, x4, cs  // cs = hs, nlast
  418df4:	b	418a24 <_obstack_memory_used@@Base+0x19a4>
  418df8:	cmp	x9, #0x0
  418dfc:	mov	w2, #0x7fff                	// #32767
  418e00:	mov	x4, #0xffffffffffff        	// #281474976710655
  418e04:	csel	w1, w1, w2, eq  // eq = none
  418e08:	csel	x4, x4, xzr, eq  // eq = none
  418e0c:	csetm	x7, eq  // eq = none
  418e10:	b	418d74 <_obstack_memory_used@@Base+0x1cf4>
  418e14:	and	x1, x5, #0xf
  418e18:	cmp	x1, #0x4
  418e1c:	b.eq	418a24 <_obstack_memory_used@@Base+0x19a4>  // b.none
  418e20:	adds	x5, x5, #0x4
  418e24:	cinc	x4, x4, cs  // cs = hs, nlast
  418e28:	b	418a24 <_obstack_memory_used@@Base+0x19a4>
  418e2c:	and	x1, x7, #0xf
  418e30:	cmp	x1, #0x4
  418e34:	b.eq	418e40 <_obstack_memory_used@@Base+0x1dc0>  // b.none
  418e38:	adds	x7, x7, #0x4
  418e3c:	cinc	x4, x4, cs  // cs = hs, nlast
  418e40:	tbz	x4, #51, 418c40 <_obstack_memory_used@@Base+0x1bc0>
  418e44:	orr	w0, w0, #0x8
  418e48:	mov	w1, #0x1                   	// #1
  418e4c:	mov	x4, #0x0                   	// #0
  418e50:	mov	x7, #0x0                   	// #0
  418e54:	b	418ce0 <_obstack_memory_used@@Base+0x1c60>
  418e58:	cbnz	x9, 418a24 <_obstack_memory_used@@Base+0x19a4>
  418e5c:	b	418dec <_obstack_memory_used@@Base+0x1d6c>
  418e60:	cmp	x9, #0x0
  418e64:	mov	w2, #0x7fff                	// #32767
  418e68:	mov	x4, #0xffffffffffff        	// #281474976710655
  418e6c:	csel	w1, w1, w2, ne  // ne = any
  418e70:	csel	x4, x4, xzr, ne  // ne = any
  418e74:	csetm	x7, ne  // ne = any
  418e78:	b	418d74 <_obstack_memory_used@@Base+0x1cf4>
  418e7c:	cbz	x9, 418e40 <_obstack_memory_used@@Base+0x1dc0>
  418e80:	adds	x7, x7, #0x8
  418e84:	cinc	x4, x4, cs  // cs = hs, nlast
  418e88:	tbnz	x4, #51, 418e44 <_obstack_memory_used@@Base+0x1dc4>
  418e8c:	b	418c40 <_obstack_memory_used@@Base+0x1bc0>
  418e90:	cbz	x9, 418e80 <_obstack_memory_used@@Base+0x1e00>
  418e94:	tbnz	x4, #51, 418e44 <_obstack_memory_used@@Base+0x1dc4>
  418e98:	b	418c40 <_obstack_memory_used@@Base+0x1bc0>
  418e9c:	orr	w0, w0, #0x10
  418ea0:	b	418e44 <_obstack_memory_used@@Base+0x1dc4>
  418ea4:	mov	w11, w15
  418ea8:	mov	w1, #0x7fff                	// #32767
  418eac:	mov	x4, #0x0                   	// #0
  418eb0:	mov	x7, #0x0                   	// #0
  418eb4:	b	4187cc <_obstack_memory_used@@Base+0x174c>
  418eb8:	cbz	w0, 418efc <_obstack_memory_used@@Base+0x1e7c>
  418ebc:	mov	w0, w0
  418ec0:	mov	w1, #0x403e                	// #16446
  418ec4:	clz	x3, x0
  418ec8:	mov	w2, #0x402f                	// #16431
  418ecc:	sub	w1, w1, w3
  418ed0:	mov	x3, #0x0                   	// #0
  418ed4:	sub	w2, w2, w1
  418ed8:	and	w1, w1, #0x7fff
  418edc:	lsl	x0, x0, x2
  418ee0:	and	x0, x0, #0xffffffffffff
  418ee4:	mov	x2, #0x0                   	// #0
  418ee8:	fmov	d0, x2
  418eec:	bfxil	x3, x0, #0, #48
  418ef0:	bfi	x3, x1, #48, #16
  418ef4:	fmov	v0.d[1], x3
  418ef8:	ret
  418efc:	mov	x0, #0x0                   	// #0
  418f00:	mov	x3, #0x0                   	// #0
  418f04:	bfxil	x3, x0, #0, #48
  418f08:	mov	x2, #0x0                   	// #0
  418f0c:	fmov	d0, x2
  418f10:	mov	w1, #0x0                   	// #0
  418f14:	bfi	x3, x1, #48, #16
  418f18:	fmov	v0.d[1], x3
  418f1c:	ret
  418f20:	stp	x29, x30, [sp, #-48]!
  418f24:	mov	x29, sp
  418f28:	str	x19, [sp, #16]
  418f2c:	str	q0, [sp, #32]
  418f30:	ldr	x19, [sp, #32]
  418f34:	ldr	x1, [sp, #40]
  418f38:	mrs	x0, fpcr
  418f3c:	ubfx	x3, x1, #48, #15
  418f40:	mov	x2, x19
  418f44:	mov	x4, #0x3ffe                	// #16382
  418f48:	ubfx	x19, x1, #0, #48
  418f4c:	cmp	x3, x4
  418f50:	b.gt	418f7c <_obstack_memory_used@@Base+0x1efc>
  418f54:	cbnz	x3, 418f60 <_obstack_memory_used@@Base+0x1ee0>
  418f58:	orr	x19, x2, x19
  418f5c:	cbz	x19, 418f6c <_obstack_memory_used@@Base+0x1eec>
  418f60:	mov	w0, #0x10                  	// #16
  418f64:	mov	x19, #0x0                   	// #0
  418f68:	bl	4190e0 <_obstack_memory_used@@Base+0x2060>
  418f6c:	mov	x0, x19
  418f70:	ldr	x19, [sp, #16]
  418f74:	ldp	x29, x30, [sp], #48
  418f78:	ret
  418f7c:	lsr	x0, x1, #63
  418f80:	mov	x4, #0x403f                	// #16447
  418f84:	and	w0, w0, #0xff
  418f88:	and	x5, x0, #0xff
  418f8c:	sub	x4, x4, x5
  418f90:	cmp	x4, x3
  418f94:	b.le	418fe8 <_obstack_memory_used@@Base+0x1f68>
  418f98:	cbnz	x5, 418ffc <_obstack_memory_used@@Base+0x1f7c>
  418f9c:	mov	x1, x3
  418fa0:	mov	x0, #0x406f                	// #16495
  418fa4:	sub	x3, x0, x3
  418fa8:	orr	x4, x19, #0x1000000000000
  418fac:	cmp	x3, #0x3f
  418fb0:	b.gt	41900c <_obstack_memory_used@@Base+0x1f8c>
  418fb4:	mov	w3, #0xffffbfd1            	// #-16431
  418fb8:	add	w3, w1, w3
  418fbc:	sub	w1, w0, w1
  418fc0:	lsl	x0, x2, x3
  418fc4:	cmp	x0, #0x0
  418fc8:	lsr	x19, x2, x1
  418fcc:	cset	w0, ne  // ne = any
  418fd0:	lsl	x4, x4, x3
  418fd4:	orr	x19, x19, x4
  418fd8:	cbz	w0, 418f6c <_obstack_memory_used@@Base+0x1eec>
  418fdc:	mov	w0, #0x10                  	// #16
  418fe0:	bl	4190e0 <_obstack_memory_used@@Base+0x2060>
  418fe4:	b	418f6c <_obstack_memory_used@@Base+0x1eec>
  418fe8:	eor	w19, w0, #0x1
  418fec:	mov	w0, #0x1                   	// #1
  418ff0:	sbfx	x19, x19, #0, #1
  418ff4:	bl	4190e0 <_obstack_memory_used@@Base+0x2060>
  418ff8:	b	418f6c <_obstack_memory_used@@Base+0x1eec>
  418ffc:	mov	w0, #0x1                   	// #1
  419000:	mov	x19, #0x0                   	// #0
  419004:	bl	4190e0 <_obstack_memory_used@@Base+0x2060>
  419008:	b	418f6c <_obstack_memory_used@@Base+0x1eec>
  41900c:	mov	w0, #0xffffc011            	// #-16367
  419010:	add	w5, w1, w0
  419014:	mov	w0, #0x402f                	// #16431
  419018:	cmp	x3, #0x40
  41901c:	sub	w1, w0, w1
  419020:	lsl	x0, x4, x5
  419024:	orr	x0, x2, x0
  419028:	csel	x2, x0, x2, ne  // ne = any
  41902c:	lsr	x19, x4, x1
  419030:	cmp	x2, #0x0
  419034:	cset	w0, ne  // ne = any
  419038:	b	418fd8 <_obstack_memory_used@@Base+0x1f58>
  41903c:	nop
  419040:	cbz	x0, 419094 <_obstack_memory_used@@Base+0x2014>
  419044:	clz	x2, x0
  419048:	mov	w1, #0x403e                	// #16446
  41904c:	sub	w1, w1, w2
  419050:	mov	x2, #0x406f                	// #16495
  419054:	and	w4, w1, #0x7fff
  419058:	sub	x3, x2, w1, sxtw
  41905c:	cmp	x3, #0x3f
  419060:	b.gt	4190b4 <_obstack_memory_used@@Base+0x2034>
  419064:	sub	w2, w2, w1
  419068:	mov	w3, #0xffffbfd1            	// #-16431
  41906c:	add	w1, w1, w3
  419070:	mov	x3, #0x0                   	// #0
  419074:	lsr	x1, x0, x1
  419078:	and	x1, x1, #0xffffffffffff
  41907c:	lsl	x0, x0, x2
  419080:	fmov	d0, x0
  419084:	bfxil	x3, x1, #0, #48
  419088:	bfi	x3, x4, #48, #16
  41908c:	fmov	v0.d[1], x3
  419090:	ret
  419094:	mov	x1, #0x0                   	// #0
  419098:	mov	x3, #0x0                   	// #0
  41909c:	bfxil	x3, x1, #0, #48
  4190a0:	fmov	d0, x0
  4190a4:	mov	w4, #0x0                   	// #0
  4190a8:	bfi	x3, x4, #48, #16
  4190ac:	fmov	v0.d[1], x3
  4190b0:	ret
  4190b4:	mov	w2, #0x402f                	// #16431
  4190b8:	sub	w1, w2, w1
  4190bc:	mov	x3, #0x0                   	// #0
  4190c0:	lsl	x1, x0, x1
  4190c4:	and	x1, x1, #0xffffffffffff
  4190c8:	mov	x0, #0x0                   	// #0
  4190cc:	fmov	d0, x0
  4190d0:	bfxil	x3, x1, #0, #48
  4190d4:	bfi	x3, x4, #48, #16
  4190d8:	fmov	v0.d[1], x3
  4190dc:	ret
  4190e0:	tbz	w0, #0, 4190f0 <_obstack_memory_used@@Base+0x2070>
  4190e4:	movi	v1.2s, #0x0
  4190e8:	fdiv	s0, s1, s1
  4190ec:	mrs	x1, fpsr
  4190f0:	tbz	w0, #1, 419104 <_obstack_memory_used@@Base+0x2084>
  4190f4:	fmov	s1, #1.000000000000000000e+00
  4190f8:	movi	v2.2s, #0x0
  4190fc:	fdiv	s0, s1, s2
  419100:	mrs	x1, fpsr
  419104:	tbz	w0, #2, 419124 <_obstack_memory_used@@Base+0x20a4>
  419108:	mov	w2, #0xc5ae                	// #50606
  41910c:	mov	w1, #0x7f7fffff            	// #2139095039
  419110:	movk	w2, #0x749d, lsl #16
  419114:	fmov	s1, w1
  419118:	fmov	s2, w2
  41911c:	fadd	s0, s1, s2
  419120:	mrs	x1, fpsr
  419124:	tbz	w0, #3, 419134 <_obstack_memory_used@@Base+0x20b4>
  419128:	movi	v1.2s, #0x80, lsl #16
  41912c:	fmul	s0, s1, s1
  419130:	mrs	x1, fpsr
  419134:	tbz	w0, #4, 41914c <_obstack_memory_used@@Base+0x20cc>
  419138:	mov	w0, #0x7f7fffff            	// #2139095039
  41913c:	fmov	s2, #1.000000000000000000e+00
  419140:	fmov	s1, w0
  419144:	fsub	s0, s1, s2
  419148:	mrs	x0, fpsr
  41914c:	ret
  419150:	stp	x29, x30, [sp, #-64]!
  419154:	mov	x29, sp
  419158:	stp	x19, x20, [sp, #16]
  41915c:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x1af80>
  419160:	add	x20, x20, #0xde0
  419164:	stp	x21, x22, [sp, #32]
  419168:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x1af80>
  41916c:	add	x21, x21, #0xdd8
  419170:	sub	x20, x20, x21
  419174:	mov	w22, w0
  419178:	stp	x23, x24, [sp, #48]
  41917c:	mov	x23, x1
  419180:	mov	x24, x2
  419184:	bl	402370 <mbrtowc@plt-0x40>
  419188:	cmp	xzr, x20, asr #3
  41918c:	b.eq	4191b8 <_obstack_memory_used@@Base+0x2138>  // b.none
  419190:	asr	x20, x20, #3
  419194:	mov	x19, #0x0                   	// #0
  419198:	ldr	x3, [x21, x19, lsl #3]
  41919c:	mov	x2, x24
  4191a0:	add	x19, x19, #0x1
  4191a4:	mov	x1, x23
  4191a8:	mov	w0, w22
  4191ac:	blr	x3
  4191b0:	cmp	x20, x19
  4191b4:	b.ne	419198 <_obstack_memory_used@@Base+0x2118>  // b.any
  4191b8:	ldp	x19, x20, [sp, #16]
  4191bc:	ldp	x21, x22, [sp, #32]
  4191c0:	ldp	x23, x24, [sp, #48]
  4191c4:	ldp	x29, x30, [sp], #64
  4191c8:	ret
  4191cc:	nop
  4191d0:	ret
  4191d4:	nop
  4191d8:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x1bf80>
  4191dc:	mov	x1, #0x0                   	// #0
  4191e0:	ldr	x2, [x2, #872]
  4191e4:	b	402510 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004191e8 <.fini>:
  4191e8:	stp	x29, x30, [sp, #-16]!
  4191ec:	mov	x29, sp
  4191f0:	ldp	x29, x30, [sp], #16
  4191f4:	ret
