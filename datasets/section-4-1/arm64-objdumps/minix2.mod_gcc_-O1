
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix2.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xa20>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	stp	x29, x30, [sp, #-32]!
  20:	mov	x29, sp
  24:	mov	w1, w1
  28:	ldrh	w5, [x0, #10]
  2c:	add	w5, w5, #0x1
  30:	add	x4, sp, #0x1c
  34:	mov	x3, #0x4                   	// #4
  38:	ubfiz	x2, x2, #2, #32
  3c:	lsl	x1, x1, x5
  40:	ldr	x0, [x0, #96]
  44:	bl	0 <grub_disk_read>
  48:	ldr	w0, [sp, #28]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	stp	x29, x30, [sp, #-128]!
  58:	mov	x29, sp
  5c:	stp	x19, x20, [sp, #16]
  60:	mov	x19, x0
  64:	str	x4, [sp, #104]
  68:	ldr	w0, [x0, #28]
  6c:	cmp	x0, x3
  70:	b.cc	108 <grub_mod_init-0x918>  // b.lo, b.ul, b.last
  74:	stp	x21, x22, [sp, #32]
  78:	stp	x27, x28, [sp, #80]
  7c:	mov	x27, x1
  80:	mov	x28, x2
  84:	mov	x22, x5
  88:	ldr	x4, [sp, #104]
  8c:	add	x2, x3, x4
  90:	sub	x1, x0, x3
  94:	cmp	x0, x2
  98:	csel	x0, x1, x4, cc  // cc = lo, ul, last
  9c:	mov	x1, x0
  a0:	str	x0, [sp, #104]
  a4:	mov	x0, #0x0                   	// #0
  a8:	cbz	x1, 30c <grub_mod_init-0x714>
  ac:	stp	x25, x26, [sp, #64]
  b0:	add	x1, x1, x3
  b4:	ldr	x0, [x19, #112]
  b8:	sub	x26, x1, #0x1
  bc:	ubfx	x26, x26, #9, #32
  c0:	udiv	x26, x26, x0
  c4:	str	w26, [sp, #96]
  c8:	add	w26, w26, #0x1
  cc:	and	x3, x3, #0xffffffff
  d0:	lsl	x0, x0, #9
  d4:	udiv	x20, x3, x0
  d8:	str	w20, [sp, #100]
  dc:	msub	x0, x20, x0, x3
  e0:	str	x0, [sp, #112]
  e4:	cmp	w26, w20
  e8:	b.ls	2c8 <grub_mod_init-0x758>  // b.plast
  ec:	stp	x23, x24, [sp, #48]
  f0:	add	x24, x20, #0xb
  f4:	add	x24, x19, x24, lsl #2
  f8:	adrp	x25, 0 <grub_mod_init-0xa20>
  fc:	and	x0, x1, #0xffffffff
 100:	str	x0, [sp, #120]
 104:	b	1b0 <grub_mod_init-0x870>
 108:	adrp	x0, 0 <grub_mod_init-0xa20>
 10c:	ldr	x1, [x0]
 110:	mov	w0, #0xb                   	// #11
 114:	bl	0 <grub_error>
 118:	mov	x0, #0xffffffffffffffff    	// #-1
 11c:	b	314 <grub_mod_init-0x70c>
 120:	ldr	w0, [x24]
 124:	ldr	x1, [x25]
 128:	ldr	w1, [x1]
 12c:	cbnz	w1, 2dc <grub_mod_init-0x744>
 130:	ldr	w1, [sp, #96]
 134:	lsl	x3, x21, #9
 138:	cmp	w1, w20
 13c:	b.eq	294 <grub_mod_init-0x78c>  // b.none
 140:	mov	x23, #0x0                   	// #0
 144:	ldr	w1, [sp, #100]
 148:	cmp	w1, w20
 14c:	b.eq	2b4 <grub_mod_init-0x76c>  // b.none
 150:	ldr	x1, [x19, #96]
 154:	str	x27, [x1, #48]
 158:	ldr	x1, [x19, #96]
 15c:	str	x28, [x1, #56]
 160:	mov	w0, w0
 164:	ldrh	w1, [x19, #10]
 168:	add	w1, w1, #0x1
 16c:	mov	x4, x22
 170:	mov	x2, x23
 174:	lsl	x1, x0, x1
 178:	ldr	x0, [x19, #96]
 17c:	bl	0 <grub_disk_read>
 180:	ldr	x0, [x19, #96]
 184:	str	xzr, [x0, #48]
 188:	ldr	x0, [x25]
 18c:	ldr	w0, [x0]
 190:	cbnz	w0, 2f4 <grub_mod_init-0x72c>
 194:	ldr	x5, [x19, #112]
 198:	add	x22, x22, x5, lsl #9
 19c:	sub	x22, x22, x23
 1a0:	add	w20, w20, #0x1
 1a4:	add	x24, x24, #0x4
 1a8:	cmp	w26, w20
 1ac:	b.ls	2c4 <grub_mod_init-0x75c>  // b.plast
 1b0:	ldr	x21, [x19, #112]
 1b4:	cmp	w20, #0x6
 1b8:	b.ls	120 <grub_mod_init-0x900>  // b.plast
 1bc:	sub	w2, w20, #0x7
 1c0:	ldr	w0, [x19, #84]
 1c4:	cmp	w0, w2
 1c8:	b.hi	20c <grub_mod_init-0x814>  // b.pmore
 1cc:	sub	w23, w2, w0
 1d0:	mov	w1, w0
 1d4:	umull	x3, w0, w0
 1d8:	sub	w2, w2, w0
 1dc:	cmp	x2, x3
 1e0:	b.cc	21c <grub_mod_init-0x804>  // b.lo, b.ul, b.last
 1e4:	msub	w23, w0, w0, w23
 1e8:	mul	x1, x1, x3
 1ec:	cmp	x1, w23, uxtw
 1f0:	b.hi	248 <grub_mod_init-0x7d8>  // b.pmore
 1f4:	adrp	x0, 0 <grub_mod_init-0xa20>
 1f8:	ldr	x1, [x0]
 1fc:	mov	w0, #0xb                   	// #11
 200:	bl	0 <grub_error>
 204:	mov	w0, #0x0                   	// #0
 208:	b	124 <grub_mod_init-0x8fc>
 20c:	ldr	w1, [x19, #72]
 210:	mov	x0, x19
 214:	bl	1c <grub_mod_init-0xa04>
 218:	b	124 <grub_mod_init-0x8fc>
 21c:	udiv	w2, w23, w0
 220:	ldr	w1, [x19, #76]
 224:	mov	x0, x19
 228:	bl	1c <grub_mod_init-0xa04>
 22c:	ldr	w2, [x19, #84]
 230:	udiv	w1, w23, w2
 234:	msub	w2, w1, w2, w23
 238:	mov	w1, w0
 23c:	mov	x0, x19
 240:	bl	1c <grub_mod_init-0xa04>
 244:	b	124 <grub_mod_init-0x8fc>
 248:	udiv	w2, w23, w0
 24c:	udiv	w2, w2, w0
 250:	ldr	w1, [x19, #80]
 254:	mov	x0, x19
 258:	bl	1c <grub_mod_init-0xa04>
 25c:	ldr	w3, [x19, #84]
 260:	udiv	w2, w23, w3
 264:	udiv	w1, w2, w3
 268:	msub	w2, w1, w3, w2
 26c:	mov	w1, w0
 270:	mov	x0, x19
 274:	bl	1c <grub_mod_init-0xa04>
 278:	ldr	w2, [x19, #84]
 27c:	udiv	w1, w23, w2
 280:	msub	w2, w1, w2, w23
 284:	mov	w1, w0
 288:	mov	x0, x19
 28c:	bl	1c <grub_mod_init-0xa04>
 290:	b	124 <grub_mod_init-0x8fc>
 294:	ldr	x1, [x19, #112]
 298:	lsl	x1, x1, #9
 29c:	ldr	x2, [sp, #120]
 2a0:	udiv	x3, x2, x1
 2a4:	msub	x3, x3, x1, x2
 2a8:	cmp	x3, #0x0
 2ac:	csel	x3, x3, x1, ne  // ne = any
 2b0:	b	140 <grub_mod_init-0x8e0>
 2b4:	ldr	x1, [sp, #112]
 2b8:	sub	x3, x3, x1
 2bc:	mov	x23, x1
 2c0:	b	150 <grub_mod_init-0x8d0>
 2c4:	ldp	x23, x24, [sp, #48]
 2c8:	ldr	x0, [sp, #104]
 2cc:	ldp	x21, x22, [sp, #32]
 2d0:	ldp	x25, x26, [sp, #64]
 2d4:	ldp	x27, x28, [sp, #80]
 2d8:	b	314 <grub_mod_init-0x70c>
 2dc:	mov	x0, #0xffffffffffffffff    	// #-1
 2e0:	ldp	x21, x22, [sp, #32]
 2e4:	ldp	x23, x24, [sp, #48]
 2e8:	ldp	x25, x26, [sp, #64]
 2ec:	ldp	x27, x28, [sp, #80]
 2f0:	b	314 <grub_mod_init-0x70c>
 2f4:	mov	x0, #0xffffffffffffffff    	// #-1
 2f8:	ldp	x21, x22, [sp, #32]
 2fc:	ldp	x23, x24, [sp, #48]
 300:	ldp	x25, x26, [sp, #64]
 304:	ldp	x27, x28, [sp, #80]
 308:	b	314 <grub_mod_init-0x70c>
 30c:	ldp	x21, x22, [sp, #32]
 310:	ldp	x27, x28, [sp, #80]
 314:	ldp	x19, x20, [sp, #16]
 318:	ldp	x29, x30, [sp], #128
 31c:	ret
	...
 338:	stp	x29, x30, [sp, #-16]!
 33c:	mov	x29, sp
 340:	mov	x5, x1
 344:	mov	x4, x2
 348:	ldr	x3, [x0, #24]
 34c:	ldr	x2, [x0, #96]
 350:	ldr	x1, [x0, #88]
 354:	ldr	x0, [x0, #80]
 358:	bl	54 <grub_mod_init-0x9cc>
 35c:	ldp	x29, x30, [sp], #16
 360:	ret
 364:	stp	x29, x30, [sp, #-16]!
 368:	mov	x29, sp
 36c:	and	w1, w1, #0xffff
 370:	strh	w1, [x0, #88]
 374:	sub	w2, w1, #0x1
 378:	ldrh	w5, [x0, #4]
 37c:	add	w5, w5, #0x2
 380:	ldrh	w1, [x0, #6]
 384:	add	w5, w5, w1
 388:	ldrh	w1, [x0, #10]
 38c:	add	w1, w1, #0x1
 390:	lsl	x5, x5, x1
 394:	ubfx	x1, x2, #3, #13
 398:	add	x4, x0, #0x14
 39c:	mov	x3, #0x40                  	// #64
 3a0:	ubfiz	x2, x2, #6, #3
 3a4:	add	x1, x5, x1
 3a8:	ldr	x0, [x0, #96]
 3ac:	bl	0 <grub_disk_read>
 3b0:	mov	w0, #0x0                   	// #0
 3b4:	ldp	x29, x30, [sp], #16
 3b8:	ret
 3bc:	stp	x29, x30, [sp, #-32]!
 3c0:	mov	x29, sp
 3c4:	stp	x19, x20, [sp, #16]
 3c8:	mov	x20, x0
 3cc:	mov	x0, #0x78                  	// #120
 3d0:	bl	0 <grub_malloc>
 3d4:	mov	x19, x0
 3d8:	cbz	x0, 454 <grub_mod_init-0x5cc>
 3dc:	mov	x4, x0
 3e0:	mov	x3, #0x14                  	// #20
 3e4:	mov	x2, #0x0                   	// #0
 3e8:	mov	x1, #0x2                   	// #2
 3ec:	mov	x0, x20
 3f0:	bl	0 <grub_disk_read>
 3f4:	adrp	x0, 0 <grub_mod_init-0xa20>
 3f8:	ldr	x0, [x0]
 3fc:	ldr	w0, [x0]
 400:	cbnz	w0, 470 <grub_mod_init-0x5b0>
 404:	ldrh	w0, [x19, #16]
 408:	mov	w1, #0x2468                	// #9320
 40c:	cmp	w0, w1
 410:	b.eq	464 <grub_mod_init-0x5bc>  // b.none
 414:	mov	w1, #0x2478                	// #9336
 418:	cmp	w0, w1
 41c:	b.ne	470 <grub_mod_init-0x5b0>  // b.any
 420:	mov	w0, #0x1e                  	// #30
 424:	str	w0, [x19, #104]
 428:	ldrh	w1, [x19, #10]
 42c:	cmp	w1, #0x13
 430:	b.hi	470 <grub_mod_init-0x5b0>  // b.pmore
 434:	str	x20, [x19, #96]
 438:	str	wzr, [x19, #92]
 43c:	mov	x0, #0x2                   	// #2
 440:	str	x0, [x19, #112]
 444:	add	w1, w1, #0x9
 448:	lsl	x0, x0, x1
 44c:	lsr	x0, x0, #2
 450:	str	w0, [x19, #84]
 454:	mov	x0, x19
 458:	ldp	x19, x20, [sp, #16]
 45c:	ldp	x29, x30, [sp], #32
 460:	ret
 464:	mov	w0, #0xe                   	// #14
 468:	str	w0, [x19, #104]
 46c:	b	428 <grub_mod_init-0x5f8>
 470:	mov	x0, x19
 474:	bl	0 <grub_free>
 478:	adrp	x0, 0 <grub_mod_init-0xa20>
 47c:	ldr	x1, [x0]
 480:	mov	w0, #0x9                   	// #9
 484:	bl	0 <grub_error>
 488:	mov	x19, #0x0                   	// #0
 48c:	b	454 <grub_mod_init-0x5cc>
	...
 4a0:	stp	x29, x30, [sp, #-160]!
 4a4:	mov	x29, sp
 4a8:	stp	x19, x20, [sp, #16]
 4ac:	stp	x21, x22, [sp, #32]
 4b0:	stp	x23, x24, [sp, #48]
 4b4:	stp	x25, x26, [sp, #64]
 4b8:	stp	x27, x28, [sp, #80]
 4bc:	mov	x19, x0
 4c0:	str	x1, [sp, #104]
 4c4:	mov	x21, x1
 4c8:	mov	x27, #0x2                   	// #2
 4cc:	add	x25, sp, #0x80
 4d0:	mov	x23, x25
 4d4:	mov	w28, #0xffffa000            	// #-24576
 4d8:	ldrb	w0, [x21]
 4dc:	cmp	w0, #0x2f
 4e0:	b.ne	4f0 <grub_mod_init-0x530>  // b.any
 4e4:	ldrb	w0, [x21, #1]!
 4e8:	cmp	w0, #0x2f
 4ec:	b.eq	4e4 <grub_mod_init-0x53c>  // b.none
 4f0:	cbz	w0, 6e8 <grub_mod_init-0x338>
 4f4:	ldrh	w0, [x19, #20]
 4f8:	tbz	w0, #14, 534 <grub_mod_init-0x4ec>
 4fc:	ldrb	w0, [x21]
 500:	cmp	w0, #0x2f
 504:	mov	x24, x21
 508:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 50c:	b.eq	520 <grub_mod_init-0x500>  // b.none
 510:	ldrb	w0, [x24, #1]!
 514:	cmp	w0, #0x2f
 518:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 51c:	b.ne	510 <grub_mod_init-0x510>  // b.any
 520:	ldr	w0, [x19, #28]
 524:	cbz	w0, 548 <grub_mod_init-0x4d8>
 528:	mov	w20, #0x0                   	// #0
 52c:	sub	x26, x24, x21
 530:	b	64c <grub_mod_init-0x3d4>
 534:	adrp	x0, 0 <grub_mod_init-0xa20>
 538:	ldr	x1, [x0]
 53c:	mov	w0, #0x4                   	// #4
 540:	bl	0 <grub_error>
 544:	b	568 <grub_mod_init-0x4b8>
 548:	ldr	x2, [sp, #104]
 54c:	adrp	x0, 0 <grub_mod_init-0xa20>
 550:	ldr	x1, [x0]
 554:	mov	w0, #0x5                   	// #5
 558:	bl	0 <grub_error>
 55c:	adrp	x0, 0 <grub_mod_init-0xa20>
 560:	ldr	x0, [x0]
 564:	ldr	w0, [x0]
 568:	ldp	x19, x20, [sp, #16]
 56c:	ldp	x21, x22, [sp, #32]
 570:	ldp	x23, x24, [sp, #48]
 574:	ldp	x25, x26, [sp, #64]
 578:	ldp	x27, x28, [sp, #80]
 57c:	ldp	x29, x30, [sp], #160
 580:	ret
 584:	adrp	x0, 0 <grub_mod_init-0xa20>
 588:	ldr	x0, [x0]
 58c:	ldr	w0, [x0]
 590:	b	568 <grub_mod_init-0x4b8>
 594:	adrp	x0, 0 <grub_mod_init-0xa20>
 598:	ldr	x0, [x0]
 59c:	ldr	w0, [x0]
 5a0:	b	568 <grub_mod_init-0x4b8>
 5a4:	ldr	w22, [x19, #28]
 5a8:	ldr	w0, [x19, #92]
 5ac:	add	w0, w0, #0x1
 5b0:	str	w0, [x19, #92]
 5b4:	cmp	w0, #0x8
 5b8:	b.gt	61c <grub_mod_init-0x404>
 5bc:	mov	w26, w22
 5c0:	add	x0, x26, #0x1
 5c4:	bl	0 <grub_malloc>
 5c8:	mov	x21, x0
 5cc:	cbz	x0, 62c <grub_mod_init-0x3f4>
 5d0:	mov	x5, x0
 5d4:	mov	x4, x26
 5d8:	mov	x3, #0x0                   	// #0
 5dc:	mov	x2, #0x0                   	// #0
 5e0:	mov	x1, #0x0                   	// #0
 5e4:	mov	x0, x19
 5e8:	bl	54 <grub_mod_init-0x9cc>
 5ec:	tbnz	x0, #63, 62c <grub_mod_init-0x3f4>
 5f0:	strb	wzr, [x21, w22, uxtw]
 5f4:	ldrb	w0, [x21]
 5f8:	cmp	w0, #0x2f
 5fc:	csinc	w1, w20, wzr, ne  // ne = any
 600:	mov	x0, x19
 604:	bl	364 <grub_mod_init-0x6bc>
 608:	cbnz	w0, 62c <grub_mod_init-0x3f4>
 60c:	mov	x1, x21
 610:	mov	x0, x19
 614:	bl	4a0 <grub_mod_init-0x580>
 618:	b	62c <grub_mod_init-0x3f4>
 61c:	adrp	x0, 0 <grub_mod_init-0xa20>
 620:	ldr	x1, [x0]
 624:	mov	w0, #0x19                  	// #25
 628:	bl	0 <grub_error>
 62c:	adrp	x0, 0 <grub_mod_init-0xa20>
 630:	ldr	x0, [x0]
 634:	ldr	w0, [x0]
 638:	cbz	w0, 6e0 <grub_mod_init-0x340>
 63c:	b	568 <grub_mod_init-0x4b8>
 640:	ldr	w0, [x19, #28]
 644:	cmp	w0, w20
 648:	b.ls	548 <grub_mod_init-0x4d8>  // b.plast
 64c:	mov	w22, w20
 650:	add	x5, sp, #0x7e
 654:	mov	x4, x27
 658:	mov	x3, x22
 65c:	mov	x2, #0x0                   	// #0
 660:	mov	x1, #0x0                   	// #0
 664:	mov	x0, x19
 668:	bl	54 <grub_mod_init-0x9cc>
 66c:	tbnz	x0, #63, 584 <grub_mod_init-0x49c>
 670:	mov	x5, x23
 674:	ldrsw	x4, [x19, #104]
 678:	add	x3, x22, #0x2
 67c:	mov	x2, #0x0                   	// #0
 680:	mov	x1, #0x0                   	// #0
 684:	mov	x0, x19
 688:	bl	54 <grub_mod_init-0x9cc>
 68c:	tbnz	x0, #63, 594 <grub_mod_init-0x48c>
 690:	ldr	w0, [x19, #104]
 694:	add	w1, w0, #0x2
 698:	add	w20, w20, w1
 69c:	strb	wzr, [x25, w0, sxtw]
 6a0:	mov	x2, x26
 6a4:	mov	x1, x23
 6a8:	mov	x0, x21
 6ac:	bl	0 <grub_strncmp>
 6b0:	cbnz	w0, 640 <grub_mod_init-0x3e0>
 6b4:	ldrb	w0, [x25, x26]
 6b8:	cbnz	w0, 640 <grub_mod_init-0x3e0>
 6bc:	ldrh	w20, [x19, #88]
 6c0:	ldrh	w1, [sp, #126]
 6c4:	mov	x0, x19
 6c8:	bl	364 <grub_mod_init-0x6bc>
 6cc:	ldrh	w0, [x19, #20]
 6d0:	and	w0, w0, w28
 6d4:	and	w0, w0, #0xffff
 6d8:	cmp	w0, #0xa, lsl #12
 6dc:	b.eq	5a4 <grub_mod_init-0x47c>  // b.none
 6e0:	mov	x21, x24
 6e4:	b	4d8 <grub_mod_init-0x548>
 6e8:	mov	w0, #0x0                   	// #0
 6ec:	b	568 <grub_mod_init-0x4b8>
	...
 710:	stp	x29, x30, [sp, #-48]!
 714:	mov	x29, sp
 718:	stp	x19, x20, [sp, #16]
 71c:	str	x21, [sp, #32]
 720:	mov	x21, x0
 724:	mov	x20, x1
 728:	ldr	x0, [x0, #8]
 72c:	ldr	x0, [x0]
 730:	bl	3bc <grub_mod_init-0x664>
 734:	cbz	x0, 794 <grub_mod_init-0x28c>
 738:	mov	x19, x0
 73c:	mov	w1, #0x1                   	// #1
 740:	bl	364 <grub_mod_init-0x6bc>
 744:	adrp	x0, 0 <grub_mod_init-0xa20>
 748:	ldr	x0, [x0]
 74c:	ldr	w0, [x0]
 750:	cbnz	w0, 7a4 <grub_mod_init-0x27c>
 754:	cbz	x20, 764 <grub_mod_init-0x2bc>
 758:	ldrb	w0, [x20]
 75c:	cmp	w0, #0x2f
 760:	b.eq	7bc <grub_mod_init-0x264>  // b.none
 764:	mov	x2, x20
 768:	adrp	x0, 0 <grub_mod_init-0xa20>
 76c:	ldr	x1, [x0]
 770:	mov	w0, #0x7                   	// #7
 774:	bl	0 <grub_error>
 778:	adrp	x0, 0 <grub_mod_init-0xa20>
 77c:	ldr	x0, [x0]
 780:	ldr	w0, [x0]
 784:	ldp	x19, x20, [sp, #16]
 788:	ldr	x21, [sp, #32]
 78c:	ldp	x29, x30, [sp], #48
 790:	ret
 794:	adrp	x0, 0 <grub_mod_init-0xa20>
 798:	ldr	x0, [x0]
 79c:	ldr	w0, [x0]
 7a0:	b	784 <grub_mod_init-0x29c>
 7a4:	mov	x0, x19
 7a8:	bl	0 <grub_free>
 7ac:	adrp	x0, 0 <grub_mod_init-0xa20>
 7b0:	ldr	x0, [x0]
 7b4:	ldr	w0, [x0]
 7b8:	b	784 <grub_mod_init-0x29c>
 7bc:	mov	x1, x20
 7c0:	mov	x0, x19
 7c4:	bl	4a0 <grub_mod_init-0x580>
 7c8:	adrp	x0, 0 <grub_mod_init-0xa20>
 7cc:	ldr	x0, [x0]
 7d0:	ldr	w0, [x0]
 7d4:	cbnz	w0, 7e8 <grub_mod_init-0x238>
 7d8:	str	x19, [x21, #80]
 7dc:	ldr	w1, [x19, #28]
 7e0:	str	x1, [x21, #64]
 7e4:	b	784 <grub_mod_init-0x29c>
 7e8:	mov	x0, x19
 7ec:	bl	0 <grub_free>
 7f0:	adrp	x0, 0 <grub_mod_init-0xa20>
 7f4:	ldr	x0, [x0]
 7f8:	ldr	w0, [x0]
 7fc:	b	784 <grub_mod_init-0x29c>
	...
 810:	stp	x29, x30, [sp, #-160]!
 814:	mov	x29, sp
 818:	stp	x19, x20, [sp, #16]
 81c:	stp	x23, x24, [sp, #48]
 820:	mov	x20, x1
 824:	mov	x23, x2
 828:	mov	x24, x3
 82c:	ldr	x0, [x0]
 830:	bl	3bc <grub_mod_init-0x664>
 834:	cbz	x0, 878 <grub_mod_init-0x1a8>
 838:	mov	x19, x0
 83c:	mov	w1, #0x1                   	// #1
 840:	bl	364 <grub_mod_init-0x6bc>
 844:	adrp	x0, 0 <grub_mod_init-0xa20>
 848:	ldr	x0, [x0]
 84c:	ldr	w0, [x0]
 850:	cbz	w0, 888 <grub_mod_init-0x198>
 854:	mov	x0, x19
 858:	bl	0 <grub_free>
 85c:	adrp	x0, 0 <grub_mod_init-0xa20>
 860:	ldr	x0, [x0]
 864:	ldr	w0, [x0]
 868:	ldp	x19, x20, [sp, #16]
 86c:	ldp	x23, x24, [sp, #48]
 870:	ldp	x29, x30, [sp], #160
 874:	ret
 878:	adrp	x0, 0 <grub_mod_init-0xa20>
 87c:	ldr	x0, [x0]
 880:	ldr	w0, [x0]
 884:	b	868 <grub_mod_init-0x1b8>
 888:	mov	x1, x20
 88c:	mov	x0, x19
 890:	bl	4a0 <grub_mod_init-0x580>
 894:	adrp	x0, 0 <grub_mod_init-0xa20>
 898:	ldr	x0, [x0]
 89c:	ldr	w20, [x0]
 8a0:	cbnz	w20, 854 <grub_mod_init-0x1cc>
 8a4:	ldrh	w0, [x19, #20]
 8a8:	tbz	w0, #14, 8d0 <grub_mod_init-0x150>
 8ac:	ldr	w0, [x19, #28]
 8b0:	cbz	w0, 854 <grub_mod_init-0x1cc>
 8b4:	stp	x21, x22, [sp, #32]
 8b8:	stp	x25, x26, [sp, #64]
 8bc:	str	x27, [sp, #80]
 8c0:	mov	x26, #0x10                  	// #16
 8c4:	mov	x25, #0x2                   	// #2
 8c8:	add	x22, sp, #0x80
 8cc:	b	97c <grub_mod_init-0xa4>
 8d0:	adrp	x0, 0 <grub_mod_init-0xa20>
 8d4:	ldr	x1, [x0]
 8d8:	mov	w0, #0x4                   	// #4
 8dc:	bl	0 <grub_error>
 8e0:	b	854 <grub_mod_init-0x1cc>
 8e4:	adrp	x0, 0 <grub_mod_init-0xa20>
 8e8:	ldr	x0, [x0]
 8ec:	ldr	w0, [x0]
 8f0:	ldp	x21, x22, [sp, #32]
 8f4:	ldp	x25, x26, [sp, #64]
 8f8:	ldr	x27, [sp, #80]
 8fc:	b	868 <grub_mod_init-0x1b8>
 900:	adrp	x0, 0 <grub_mod_init-0xa20>
 904:	ldr	x0, [x0]
 908:	ldr	w0, [x0]
 90c:	ldp	x21, x22, [sp, #32]
 910:	ldp	x25, x26, [sp, #64]
 914:	ldr	x27, [sp, #80]
 918:	b	868 <grub_mod_init-0x1b8>
 91c:	mov	x0, x19
 920:	bl	364 <grub_mod_init-0x6bc>
 924:	ldrh	w1, [x19, #20]
 928:	ubfx	x1, x1, #14, #1
 92c:	ldrb	w0, [sp, #112]
 930:	bfxil	w0, w1, #0, #1
 934:	orr	w0, w0, #0x2
 938:	strb	w0, [sp, #112]
 93c:	ldr	w0, [x19, #36]
 940:	str	w0, [sp, #116]
 944:	mov	x2, x24
 948:	add	x1, sp, #0x70
 94c:	mov	x0, x22
 950:	blr	x23
 954:	cbnz	w0, a00 <grub_mod_init-0x20>
 958:	mov	w1, w27
 95c:	mov	x0, x19
 960:	bl	364 <grub_mod_init-0x6bc>
 964:	ldr	w0, [x19, #104]
 968:	add	w0, w0, #0x2
 96c:	add	w20, w20, w0
 970:	ldr	w0, [x19, #28]
 974:	cmp	w20, w0
 978:	b.cs	9f0 <grub_mod_init-0x30>  // b.hs, b.nlast
 97c:	ldrh	w27, [x19, #88]
 980:	mov	x2, x26
 984:	mov	w1, #0x0                   	// #0
 988:	add	x0, sp, #0x70
 98c:	bl	0 <grub_memset>
 990:	mov	w21, w20
 994:	add	x5, sp, #0x6e
 998:	mov	x4, x25
 99c:	mov	x3, x21
 9a0:	mov	x2, #0x0                   	// #0
 9a4:	mov	x1, #0x0                   	// #0
 9a8:	mov	x0, x19
 9ac:	bl	54 <grub_mod_init-0x9cc>
 9b0:	tbnz	x0, #63, 8e4 <grub_mod_init-0x13c>
 9b4:	mov	x5, x22
 9b8:	ldrsw	x4, [x19, #104]
 9bc:	add	x3, x21, #0x2
 9c0:	mov	x2, #0x0                   	// #0
 9c4:	mov	x1, #0x0                   	// #0
 9c8:	mov	x0, x19
 9cc:	bl	54 <grub_mod_init-0x9cc>
 9d0:	tbnz	x0, #63, 900 <grub_mod_init-0x120>
 9d4:	ldr	w0, [x19, #104]
 9d8:	strb	wzr, [x22, w0, sxtw]
 9dc:	ldrh	w1, [sp, #110]
 9e0:	cbnz	w1, 91c <grub_mod_init-0x104>
 9e4:	add	w0, w0, #0x2
 9e8:	add	w20, w20, w0
 9ec:	b	970 <grub_mod_init-0xb0>
 9f0:	ldp	x21, x22, [sp, #32]
 9f4:	ldp	x25, x26, [sp, #64]
 9f8:	ldr	x27, [sp, #80]
 9fc:	b	854 <grub_mod_init-0x1cc>
 a00:	ldp	x21, x22, [sp, #32]
 a04:	ldp	x25, x26, [sp, #64]
 a08:	ldr	x27, [sp, #80]
 a0c:	b	854 <grub_mod_init-0x1cc>
	...

0000000000000a20 <grub_mod_init>:
 a20:	stp	x29, x30, [sp, #-16]!
 a24:	mov	x29, sp
 a28:	adrp	x0, 0 <grub_mod_init-0xa20>
 a2c:	ldr	x1, [x0]
 a30:	adrp	x0, 0 <grub_mod_init-0xa20>
 a34:	ldr	x0, [x0]
 a38:	bl	0 <grub_list_push>
 a3c:	ldp	x29, x30, [sp], #16
 a40:	ret
 a44:	nop
	...

0000000000000a58 <grub_mod_fini>:
 a58:	stp	x29, x30, [sp, #-16]!
 a5c:	mov	x29, sp
 a60:	adrp	x0, 0 <grub_mod_init-0xa20>
 a64:	ldr	x0, [x0]
 a68:	bl	0 <grub_list_remove>
 a6c:	ldp	x29, x30, [sp], #16
 a70:	ret
 a74:	nop
	...
