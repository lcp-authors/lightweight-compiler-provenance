
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-udevd_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

000000000040a260 <_init>:
  40a260:	stp	x29, x30, [sp, #-16]!
  40a264:	mov	x29, sp
  40a268:	bl	40bef0 <call_weak_fn>
  40a26c:	ldp	x29, x30, [sp], #16
  40a270:	ret

Disassembly of section .plt:

000000000040a280 <.plt>:
  40a280:	stp	x16, x30, [sp, #-16]!
  40a284:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a288:	ldr	x17, [x16, #424]
  40a28c:	add	x16, x16, #0x1a8
  40a290:	br	x17
  40a294:	nop
  40a298:	nop
  40a29c:	nop

000000000040a2a0 <internal_hashmap_remove@plt>:
  40a2a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a2a4:	ldr	x17, [x16, #432]
  40a2a8:	add	x16, x16, #0x1b0
  40a2ac:	br	x17

000000000040a2b0 <random_bytes@plt>:
  40a2b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a2b4:	ldr	x17, [x16, #440]
  40a2b8:	add	x16, x16, #0x1b8
  40a2bc:	br	x17

000000000040a2c0 <blkid_probe_get_value@plt>:
  40a2c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a2c4:	ldr	x17, [x16, #448]
  40a2c8:	add	x16, x16, #0x1c0
  40a2cc:	br	x17

000000000040a2d0 <blkid_free_probe@plt>:
  40a2d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a2d4:	ldr	x17, [x16, #456]
  40a2d8:	add	x16, x16, #0x1c8
  40a2dc:	br	x17

000000000040a2e0 <safe_fclose@plt>:
  40a2e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a2e4:	ldr	x17, [x16, #464]
  40a2e8:	add	x16, x16, #0x1d0
  40a2ec:	br	x17

000000000040a2f0 <kill@plt>:
  40a2f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a2f4:	ldr	x17, [x16, #472]
  40a2f8:	add	x16, x16, #0x1d8
  40a2fc:	br	x17

000000000040a300 <strscpy@plt>:
  40a300:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a304:	ldr	x17, [x16, #480]
  40a308:	add	x16, x16, #0x1e0
  40a30c:	br	x17

000000000040a310 <sd_device_get_property_value@plt>:
  40a310:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a314:	ldr	x17, [x16, #488]
  40a318:	add	x16, x16, #0x1e8
  40a31c:	br	x17

000000000040a320 <event_reset_time@plt>:
  40a320:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a324:	ldr	x17, [x16, #496]
  40a328:	add	x16, x16, #0x1f0
  40a32c:	br	x17

000000000040a330 <read_line_full@plt>:
  40a330:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a334:	ldr	x17, [x16, #504]
  40a338:	add	x16, x16, #0x1f8
  40a33c:	br	x17

000000000040a340 <rearrange_stdio@plt>:
  40a340:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a344:	ldr	x17, [x16, #512]
  40a348:	add	x16, x16, #0x200
  40a34c:	br	x17

000000000040a350 <sd_event_add_post@plt>:
  40a350:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a354:	ldr	x17, [x16, #520]
  40a358:	add	x16, x16, #0x208
  40a35c:	br	x17

000000000040a360 <blkid_new_probe@plt>:
  40a360:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a364:	ldr	x17, [x16, #528]
  40a368:	add	x16, x16, #0x210
  40a36c:	br	x17

000000000040a370 <device_action_to_string@plt>:
  40a370:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a374:	ldr	x17, [x16, #536]
  40a378:	add	x16, x16, #0x218
  40a37c:	br	x17

000000000040a380 <mkdir_errno_wrapper@plt>:
  40a380:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a384:	ldr	x17, [x16, #544]
  40a388:	add	x16, x16, #0x220
  40a38c:	br	x17

000000000040a390 <mkdir_parents_label@plt>:
  40a390:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a394:	ldr	x17, [x16, #552]
  40a398:	add	x16, x16, #0x228
  40a39c:	br	x17

000000000040a3a0 <util_replace_whitespace@plt>:
  40a3a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a3a4:	ldr	x17, [x16, #560]
  40a3a8:	add	x16, x16, #0x230
  40a3ac:	br	x17

000000000040a3b0 <getppid@plt>:
  40a3b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a3b4:	ldr	x17, [x16, #568]
  40a3b8:	add	x16, x16, #0x238
  40a3bc:	br	x17

000000000040a3c0 <filename_is_valid@plt>:
  40a3c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a3c4:	ldr	x17, [x16, #576]
  40a3c8:	add	x16, x16, #0x240
  40a3cc:	br	x17

000000000040a3d0 <blkid_probe_set_partitions_flags@plt>:
  40a3d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a3d4:	ldr	x17, [x16, #584]
  40a3d8:	add	x16, x16, #0x248
  40a3dc:	br	x17

000000000040a3e0 <strpcpyf@plt>:
  40a3e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a3e4:	ldr	x17, [x16, #592]
  40a3e8:	add	x16, x16, #0x250
  40a3ec:	br	x17

000000000040a3f0 <unlink@plt>:
  40a3f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a3f4:	ldr	x17, [x16, #600]
  40a3f8:	add	x16, x16, #0x258
  40a3fc:	br	x17

000000000040a400 <internal_hashmap_free@plt>:
  40a400:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a404:	ldr	x17, [x16, #608]
  40a408:	add	x16, x16, #0x260
  40a40c:	br	x17

000000000040a410 <detect_virtualization@plt>:
  40a410:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a414:	ldr	x17, [x16, #616]
  40a418:	add	x16, x16, #0x268
  40a41c:	br	x17

000000000040a420 <sd_device_get_tag_next@plt>:
  40a420:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a424:	ldr	x17, [x16, #624]
  40a428:	add	x16, x16, #0x270
  40a42c:	br	x17

000000000040a430 <sd_device_get_property_first@plt>:
  40a430:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a434:	ldr	x17, [x16, #632]
  40a438:	add	x16, x16, #0x278
  40a43c:	br	x17

000000000040a440 <device_cleanup_devlinks@plt>:
  40a440:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a444:	ldr	x17, [x16, #640]
  40a448:	add	x16, x16, #0x280
  40a44c:	br	x17

000000000040a450 <internal_ordered_hashmap_ensure_allocated@plt>:
  40a450:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a454:	ldr	x17, [x16, #648]
  40a458:	add	x16, x16, #0x288
  40a45c:	br	x17

000000000040a460 <sd_device_get_devtype@plt>:
  40a460:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a464:	ldr	x17, [x16, #656]
  40a468:	add	x16, x16, #0x290
  40a46c:	br	x17

000000000040a470 <strcspn@plt>:
  40a470:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a474:	ldr	x17, [x16, #664]
  40a478:	add	x16, x16, #0x298
  40a47c:	br	x17

000000000040a480 <internal_set_ensure_allocated@plt>:
  40a480:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a484:	ldr	x17, [x16, #672]
  40a488:	add	x16, x16, #0x2a0
  40a48c:	br	x17

000000000040a490 <cg_pid_get_machine_name@plt>:
  40a490:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a494:	ldr	x17, [x16, #680]
  40a498:	add	x16, x16, #0x2a8
  40a49c:	br	x17

000000000040a4a0 <cg_pid_get_path@plt>:
  40a4a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a4a4:	ldr	x17, [x16, #688]
  40a4a8:	add	x16, x16, #0x2b0
  40a4ac:	br	x17

000000000040a4b0 <strcmp_ptr@plt>:
  40a4b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a4b4:	ldr	x17, [x16, #696]
  40a4b8:	add	x16, x16, #0x2b8
  40a4bc:	br	x17

000000000040a4c0 <sd_device_monitor_attach_event@plt>:
  40a4c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a4c4:	ldr	x17, [x16, #704]
  40a4c8:	add	x16, x16, #0x2c0
  40a4cc:	br	x17

000000000040a4d0 <rtnl_set_link_properties@plt>:
  40a4d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a4d4:	ldr	x17, [x16, #712]
  40a4d8:	add	x16, x16, #0x2c8
  40a4dc:	br	x17

000000000040a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>:
  40a4e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a4e4:	ldr	x17, [x16, #720]
  40a4e8:	add	x16, x16, #0x2d0
  40a4ec:	br	x17

000000000040a4f0 <execve@plt>:
  40a4f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a4f4:	ldr	x17, [x16, #728]
  40a4f8:	add	x16, x16, #0x2d8
  40a4fc:	br	x17

000000000040a500 <architecture_to_string@plt>:
  40a500:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a504:	ldr	x17, [x16, #736]
  40a508:	add	x16, x16, #0x2e0
  40a50c:	br	x17

000000000040a510 <stpcpy@plt>:
  40a510:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a514:	ldr	x17, [x16, #744]
  40a518:	add	x16, x16, #0x2e8
  40a51c:	br	x17

000000000040a520 <sd_event_add_child@plt>:
  40a520:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a524:	ldr	x17, [x16, #752]
  40a528:	add	x16, x16, #0x2f0
  40a52c:	br	x17

000000000040a530 <mac_selinux_init@plt>:
  40a530:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a534:	ldr	x17, [x16, #760]
  40a538:	add	x16, x16, #0x2f8
  40a53c:	br	x17

000000000040a540 <__libc_start_main@plt>:
  40a540:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a544:	ldr	x17, [x16, #768]
  40a548:	add	x16, x16, #0x300
  40a54c:	br	x17

000000000040a550 <device_add_devlink@plt>:
  40a550:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a554:	ldr	x17, [x16, #776]
  40a558:	add	x16, x16, #0x308
  40a55c:	br	x17

000000000040a560 <sched_getaffinity@plt>:
  40a560:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a564:	ldr	x17, [x16, #784]
  40a568:	add	x16, x16, #0x310
  40a56c:	br	x17

000000000040a570 <blkid_probe_set_device@plt>:
  40a570:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a574:	ldr	x17, [x16, #792]
  40a578:	add	x16, x16, #0x318
  40a57c:	br	x17

000000000040a580 <sd_event_set_watchdog@plt>:
  40a580:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a584:	ldr	x17, [x16, #800]
  40a588:	add	x16, x16, #0x320
  40a58c:	br	x17

000000000040a590 <log_close@plt>:
  40a590:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a594:	ldr	x17, [x16, #808]
  40a598:	add	x16, x16, #0x328
  40a59c:	br	x17

000000000040a5a0 <sd_device_get_property_next@plt>:
  40a5a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a5a4:	ldr	x17, [x16, #816]
  40a5a8:	add	x16, x16, #0x330
  40a5ac:	br	x17

000000000040a5b0 <format_timespan@plt>:
  40a5b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a5b4:	ldr	x17, [x16, #824]
  40a5b8:	add	x16, x16, #0x338
  40a5bc:	br	x17

000000000040a5c0 <sd_device_monitor_start@plt>:
  40a5c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a5c4:	ldr	x17, [x16, #832]
  40a5c8:	add	x16, x16, #0x340
  40a5cc:	br	x17

000000000040a5d0 <strpcpy@plt>:
  40a5d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a5d4:	ldr	x17, [x16, #840]
  40a5d8:	add	x16, x16, #0x348
  40a5dc:	br	x17

000000000040a5e0 <device_remove_tag@plt>:
  40a5e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a5e4:	ldr	x17, [x16, #848]
  40a5e8:	add	x16, x16, #0x350
  40a5ec:	br	x17

000000000040a5f0 <trivial_hash_func@plt>:
  40a5f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a5f4:	ldr	x17, [x16, #856]
  40a5f8:	add	x16, x16, #0x358
  40a5fc:	br	x17

000000000040a600 <ascii_strlower@plt>:
  40a600:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a604:	ldr	x17, [x16, #864]
  40a608:	add	x16, x16, #0x360
  40a60c:	br	x17

000000000040a610 <safe_atollu@plt>:
  40a610:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a614:	ldr	x17, [x16, #872]
  40a618:	add	x16, x16, #0x368
  40a61c:	br	x17

000000000040a620 <cg_pid_get_slice@plt>:
  40a620:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a624:	ldr	x17, [x16, #880]
  40a628:	add	x16, x16, #0x370
  40a62c:	br	x17

000000000040a630 <parse_boolean@plt>:
  40a630:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a634:	ldr	x17, [x16, #888]
  40a638:	add	x16, x16, #0x378
  40a63c:	br	x17

000000000040a640 <sd_hwdb_seek@plt>:
  40a640:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a644:	ldr	x17, [x16, #896]
  40a648:	add	x16, x16, #0x380
  40a64c:	br	x17

000000000040a650 <sd_id128_from_string@plt>:
  40a650:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a654:	ldr	x17, [x16, #904]
  40a658:	add	x16, x16, #0x388
  40a65c:	br	x17

000000000040a660 <mac_selinux_create_file_prepare@plt>:
  40a660:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a664:	ldr	x17, [x16, #912]
  40a668:	add	x16, x16, #0x390
  40a66c:	br	x17

000000000040a670 <sd_device_enumerator_new@plt>:
  40a670:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a674:	ldr	x17, [x16, #920]
  40a678:	add	x16, x16, #0x398
  40a67c:	br	x17

000000000040a680 <mempcpy@plt>:
  40a680:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a684:	ldr	x17, [x16, #928]
  40a688:	add	x16, x16, #0x3a0
  40a68c:	br	x17

000000000040a690 <device_get_seqnum@plt>:
  40a690:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a694:	ldr	x17, [x16, #936]
  40a698:	add	x16, x16, #0x3a8
  40a69c:	br	x17

000000000040a6a0 <fileno@plt>:
  40a6a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a6a4:	ldr	x17, [x16, #944]
  40a6a8:	add	x16, x16, #0x3b0
  40a6ac:	br	x17

000000000040a6b0 <ethtool_set_speed@plt>:
  40a6b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a6b4:	ldr	x17, [x16, #952]
  40a6b8:	add	x16, x16, #0x3b8
  40a6bc:	br	x17

000000000040a6c0 <__gmon_start__@plt>:
  40a6c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a6c4:	ldr	x17, [x16, #960]
  40a6c8:	add	x16, x16, #0x3c0
  40a6cc:	br	x17

000000000040a6d0 <kmod_validate_resources@plt>:
  40a6d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a6d4:	ldr	x17, [x16, #968]
  40a6d8:	add	x16, x16, #0x3c8
  40a6dc:	br	x17

000000000040a6e0 <blkid_probe_set_superblocks_flags@plt>:
  40a6e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a6e4:	ldr	x17, [x16, #976]
  40a6e8:	add	x16, x16, #0x3d0
  40a6ec:	br	x17

000000000040a6f0 <sd_device_get_devname@plt>:
  40a6f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a6f4:	ldr	x17, [x16, #984]
  40a6f8:	add	x16, x16, #0x3d8
  40a6fc:	br	x17

000000000040a700 <chase_symlinks@plt>:
  40a700:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a704:	ldr	x17, [x16, #992]
  40a708:	add	x16, x16, #0x3e0
  40a70c:	br	x17

000000000040a710 <internal_hashmap_contains@plt>:
  40a710:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a714:	ldr	x17, [x16, #1000]
  40a718:	add	x16, x16, #0x3e8
  40a71c:	br	x17

000000000040a720 <write_string_file_ts@plt>:
  40a720:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a724:	ldr	x17, [x16, #1008]
  40a728:	add	x16, x16, #0x3f0
  40a72c:	br	x17

000000000040a730 <rename@plt>:
  40a730:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a734:	ldr	x17, [x16, #1016]
  40a738:	add	x16, x16, #0x3f8
  40a73c:	br	x17

000000000040a740 <device_monitor_enable_receiving@plt>:
  40a740:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a744:	ldr	x17, [x16, #1024]
  40a748:	add	x16, x16, #0x400
  40a74c:	br	x17

000000000040a750 <polkit_agent_close@plt>:
  40a750:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a754:	ldr	x17, [x16, #1032]
  40a758:	add	x16, x16, #0x408
  40a75c:	br	x17

000000000040a760 <sd_device_enumerator_add_match_subsystem@plt>:
  40a760:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a764:	ldr	x17, [x16, #1040]
  40a768:	add	x16, x16, #0x410
  40a76c:	br	x17

000000000040a770 <kill_and_sigcont@plt>:
  40a770:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a774:	ldr	x17, [x16, #1048]
  40a778:	add	x16, x16, #0x418
  40a77c:	br	x17

000000000040a780 <log_parse_environment_realm@plt>:
  40a780:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a784:	ldr	x17, [x16, #1056]
  40a788:	add	x16, x16, #0x420
  40a78c:	br	x17

000000000040a790 <strscpyl@plt>:
  40a790:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a794:	ldr	x17, [x16, #1064]
  40a798:	add	x16, x16, #0x428
  40a79c:	br	x17

000000000040a7a0 <device_get_devlink_priority@plt>:
  40a7a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a7a4:	ldr	x17, [x16, #1072]
  40a7a8:	add	x16, x16, #0x430
  40a7ac:	br	x17

000000000040a7b0 <acl_get_permset@plt>:
  40a7b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a7b4:	ldr	x17, [x16, #1080]
  40a7b8:	add	x16, x16, #0x438
  40a7bc:	br	x17

000000000040a7c0 <device_clone_with_db@plt>:
  40a7c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a7c4:	ldr	x17, [x16, #1088]
  40a7c8:	add	x16, x16, #0x440
  40a7cc:	br	x17

000000000040a7d0 <util_replace_chars@plt>:
  40a7d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a7d4:	ldr	x17, [x16, #1096]
  40a7d8:	add	x16, x16, #0x448
  40a7dc:	br	x17

000000000040a7e0 <sd_event_default@plt>:
  40a7e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a7e4:	ldr	x17, [x16, #1104]
  40a7e8:	add	x16, x16, #0x450
  40a7ec:	br	x17

000000000040a7f0 <strv_split_full@plt>:
  40a7f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a7f4:	ldr	x17, [x16, #1112]
  40a7f8:	add	x16, x16, #0x458
  40a7fc:	br	x17

000000000040a800 <strnlen@plt>:
  40a800:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a804:	ldr	x17, [x16, #1120]
  40a808:	add	x16, x16, #0x460
  40a80c:	br	x17

000000000040a810 <free_and_strdup@plt>:
  40a810:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a814:	ldr	x17, [x16, #1128]
  40a818:	add	x16, x16, #0x468
  40a81c:	br	x17

000000000040a820 <internal_hashmap_move@plt>:
  40a820:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a824:	ldr	x17, [x16, #1136]
  40a828:	add	x16, x16, #0x470
  40a82c:	br	x17

000000000040a830 <socket@plt>:
  40a830:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a834:	ldr	x17, [x16, #1144]
  40a838:	add	x16, x16, #0x478
  40a83c:	br	x17

000000000040a840 <loop_write@plt>:
  40a840:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a844:	ldr	x17, [x16, #1152]
  40a848:	add	x16, x16, #0x480
  40a84c:	br	x17

000000000040a850 <ether_aton@plt>:
  40a850:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a854:	ldr	x17, [x16, #1160]
  40a858:	add	x16, x16, #0x488
  40a85c:	br	x17

000000000040a860 <device_for_action@plt>:
  40a860:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a864:	ldr	x17, [x16, #1168]
  40a868:	add	x16, x16, #0x490
  40a86c:	br	x17

000000000040a870 <snprintf@plt>:
  40a870:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a874:	ldr	x17, [x16, #1176]
  40a878:	add	x16, x16, #0x498
  40a87c:	br	x17

000000000040a880 <sd_event_source_get_event@plt>:
  40a880:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a884:	ldr	x17, [x16, #1184]
  40a888:	add	x16, x16, #0x4a0
  40a88c:	br	x17

000000000040a890 <sd_device_enumerator_get_device_first@plt>:
  40a890:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a894:	ldr	x17, [x16, #1192]
  40a898:	add	x16, x16, #0x4a8
  40a89c:	br	x17

000000000040a8a0 <__sched_cpucount@plt>:
  40a8a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a8a4:	ldr	x17, [x16, #1200]
  40a8a8:	add	x16, x16, #0x4b0
  40a8ac:	br	x17

000000000040a8b0 <config_parse_tristate@plt>:
  40a8b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a8b4:	ldr	x17, [x16, #1208]
  40a8b8:	add	x16, x16, #0x4b8
  40a8bc:	br	x17

000000000040a8c0 <reallocarray@plt>:
  40a8c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a8c4:	ldr	x17, [x16, #1216]
  40a8c8:	add	x16, x16, #0x4c0
  40a8cc:	br	x17

000000000040a8d0 <ethtool_set_features@plt>:
  40a8d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a8d4:	ldr	x17, [x16, #1224]
  40a8d8:	add	x16, x16, #0x4c8
  40a8dc:	br	x17

000000000040a8e0 <getpid_cached@plt>:
  40a8e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a8e4:	ldr	x17, [x16, #1232]
  40a8e8:	add	x16, x16, #0x4d0
  40a8ec:	br	x17

000000000040a8f0 <proc_cmdline_key_streq@plt>:
  40a8f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a8f4:	ldr	x17, [x16, #1240]
  40a8f8:	add	x16, x16, #0x4d8
  40a8fc:	br	x17

000000000040a900 <sd_event_add_time@plt>:
  40a900:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a904:	ldr	x17, [x16, #1248]
  40a908:	add	x16, x16, #0x4e0
  40a90c:	br	x17

000000000040a910 <hwdb_validate@plt>:
  40a910:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a914:	ldr	x17, [x16, #1256]
  40a918:	add	x16, x16, #0x4e8
  40a91c:	br	x17

000000000040a920 <condition_test_list@plt>:
  40a920:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a924:	ldr	x17, [x16, #1264]
  40a928:	add	x16, x16, #0x4f0
  40a92c:	br	x17

000000000040a930 <sd_device_new_from_subsystem_sysname@plt>:
  40a930:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a934:	ldr	x17, [x16, #1272]
  40a938:	add	x16, x16, #0x4f8
  40a93c:	br	x17

000000000040a940 <device_update_db@plt>:
  40a940:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a944:	ldr	x17, [x16, #1280]
  40a948:	add	x16, x16, #0x500
  40a94c:	br	x17

000000000040a950 <close_nointr@plt>:
  40a950:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a954:	ldr	x17, [x16, #1288]
  40a958:	add	x16, x16, #0x508
  40a95c:	br	x17

000000000040a960 <sd_device_enumerator_unref@plt>:
  40a960:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a964:	ldr	x17, [x16, #1296]
  40a968:	add	x16, x16, #0x510
  40a96c:	br	x17

000000000040a970 <__cmsg_nxthdr@plt>:
  40a970:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a974:	ldr	x17, [x16, #1304]
  40a978:	add	x16, x16, #0x518
  40a97c:	br	x17

000000000040a980 <memcpy@plt>:
  40a980:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a984:	ldr	x17, [x16, #1312]
  40a988:	add	x16, x16, #0x520
  40a98c:	br	x17

000000000040a990 <kmod_new@plt>:
  40a990:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a994:	ldr	x17, [x16, #1320]
  40a998:	add	x16, x16, #0x528
  40a99c:	br	x17

000000000040a9a0 <siphash24@plt>:
  40a9a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a9a4:	ldr	x17, [x16, #1328]
  40a9a8:	add	x16, x16, #0x530
  40a9ac:	br	x17

000000000040a9b0 <inotify_rm_watch@plt>:
  40a9b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a9b4:	ldr	x17, [x16, #1336]
  40a9b8:	add	x16, x16, #0x538
  40a9bc:	br	x17

000000000040a9c0 <device_get_properties_strv@plt>:
  40a9c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a9c4:	ldr	x17, [x16, #1344]
  40a9c8:	add	x16, x16, #0x540
  40a9cc:	br	x17

000000000040a9d0 <dirent_ensure_type@plt>:
  40a9d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a9d4:	ldr	x17, [x16, #1352]
  40a9d8:	add	x16, x16, #0x548
  40a9dc:	br	x17

000000000040a9e0 <__ctype_b_loc@plt>:
  40a9e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a9e4:	ldr	x17, [x16, #1360]
  40a9e8:	add	x16, x16, #0x550
  40a9ec:	br	x17

000000000040a9f0 <sd_event_source_unref@plt>:
  40a9f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40a9f4:	ldr	x17, [x16, #1368]
  40a9f8:	add	x16, x16, #0x558
  40a9fc:	br	x17

000000000040aa00 <symlink@plt>:
  40aa00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa04:	ldr	x17, [x16, #1376]
  40aa08:	add	x16, x16, #0x560
  40aa0c:	br	x17

000000000040aa10 <sd_netlink_ref@plt>:
  40aa10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa14:	ldr	x17, [x16, #1384]
  40aa18:	add	x16, x16, #0x568
  40aa1c:	br	x17

000000000040aa20 <acl_find_uid@plt>:
  40aa20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa24:	ldr	x17, [x16, #1392]
  40aa28:	add	x16, x16, #0x570
  40aa2c:	br	x17

000000000040aa30 <hostname_is_valid@plt>:
  40aa30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa34:	ldr	x17, [x16, #1400]
  40aa38:	add	x16, x16, #0x578
  40aa3c:	br	x17

000000000040aa40 <kmod_set_log_fn@plt>:
  40aa40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa44:	ldr	x17, [x16, #1408]
  40aa48:	add	x16, x16, #0x580
  40aa4c:	br	x17

000000000040aa50 <strpcpyl@plt>:
  40aa50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa54:	ldr	x17, [x16, #1416]
  40aa58:	add	x16, x16, #0x588
  40aa5c:	br	x17

000000000040aa60 <blkid_probe_numof_values@plt>:
  40aa60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa64:	ldr	x17, [x16, #1424]
  40aa68:	add	x16, x16, #0x590
  40aa6c:	br	x17

000000000040aa70 <util_path_encode@plt>:
  40aa70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa74:	ldr	x17, [x16, #1432]
  40aa78:	add	x16, x16, #0x598
  40aa7c:	br	x17

000000000040aa80 <session_id_valid@plt>:
  40aa80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa84:	ldr	x17, [x16, #1440]
  40aa88:	add	x16, x16, #0x5a0
  40aa8c:	br	x17

000000000040aa90 <strncpy@plt>:
  40aa90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aa94:	ldr	x17, [x16, #1448]
  40aa98:	add	x16, x16, #0x5a8
  40aa9c:	br	x17

000000000040aaa0 <flush_fd@plt>:
  40aaa0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aaa4:	ldr	x17, [x16, #1456]
  40aaa8:	add	x16, x16, #0x5b0
  40aaac:	br	x17

000000000040aab0 <device_monitor_send_device@plt>:
  40aab0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aab4:	ldr	x17, [x16, #1464]
  40aab8:	add	x16, x16, #0x5b8
  40aabc:	br	x17

000000000040aac0 <strjoin_real@plt>:
  40aac0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aac4:	ldr	x17, [x16, #1472]
  40aac8:	add	x16, x16, #0x5c0
  40aacc:	br	x17

000000000040aad0 <safe_close@plt>:
  40aad0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aad4:	ldr	x17, [x16, #1480]
  40aad8:	add	x16, x16, #0x5c8
  40aadc:	br	x17

000000000040aae0 <realloc@plt>:
  40aae0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aae4:	ldr	x17, [x16, #1488]
  40aae8:	add	x16, x16, #0x5d0
  40aaec:	br	x17

000000000040aaf0 <exit@plt>:
  40aaf0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aaf4:	ldr	x17, [x16, #1496]
  40aaf8:	add	x16, x16, #0x5d8
  40aafc:	br	x17

000000000040ab00 <ifname_valid@plt>:
  40ab00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab04:	ldr	x17, [x16, #1504]
  40ab08:	add	x16, x16, #0x5e0
  40ab0c:	br	x17

000000000040ab10 <blkid_encode_string@plt>:
  40ab10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab14:	ldr	x17, [x16, #1512]
  40ab18:	add	x16, x16, #0x5e8
  40ab1c:	br	x17

000000000040ab20 <device_tag_index@plt>:
  40ab20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab24:	ldr	x17, [x16, #1520]
  40ab28:	add	x16, x16, #0x5f0
  40ab2c:	br	x17

000000000040ab30 <safe_close_pair@plt>:
  40ab30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab34:	ldr	x17, [x16, #1528]
  40ab38:	add	x16, x16, #0x5f8
  40ab3c:	br	x17

000000000040ab40 <flock@plt>:
  40ab40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab44:	ldr	x17, [x16, #1536]
  40ab48:	add	x16, x16, #0x600
  40ab4c:	br	x17

000000000040ab50 <strrchr@plt>:
  40ab50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab54:	ldr	x17, [x16, #1544]
  40ab58:	add	x16, x16, #0x608
  40ab5c:	br	x17

000000000040ab60 <config_parse_ifname@plt>:
  40ab60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab64:	ldr	x17, [x16, #1552]
  40ab68:	add	x16, x16, #0x610
  40ab6c:	br	x17

000000000040ab70 <dirfd@plt>:
  40ab70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab74:	ldr	x17, [x16, #1560]
  40ab78:	add	x16, x16, #0x618
  40ab7c:	br	x17

000000000040ab80 <device_monitor_allow_unicast_sender@plt>:
  40ab80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab84:	ldr	x17, [x16, #1568]
  40ab88:	add	x16, x16, #0x620
  40ab8c:	br	x17

000000000040ab90 <chmod_and_chown@plt>:
  40ab90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ab94:	ldr	x17, [x16, #1576]
  40ab98:	add	x16, x16, #0x628
  40ab9c:	br	x17

000000000040aba0 <sd_device_get_sysname@plt>:
  40aba0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aba4:	ldr	x17, [x16, #1584]
  40aba8:	add	x16, x16, #0x630
  40abac:	br	x17

000000000040abb0 <log_assert_failed_realm@plt>:
  40abb0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40abb4:	ldr	x17, [x16, #1592]
  40abb8:	add	x16, x16, #0x638
  40abbc:	br	x17

000000000040abc0 <faccessat@plt>:
  40abc0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40abc4:	ldr	x17, [x16, #1600]
  40abc8:	add	x16, x16, #0x640
  40abcc:	br	x17

000000000040abd0 <sd_is_socket@plt>:
  40abd0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40abd4:	ldr	x17, [x16, #1608]
  40abd8:	add	x16, x16, #0x648
  40abdc:	br	x17

000000000040abe0 <readdir64@plt>:
  40abe0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40abe4:	ldr	x17, [x16, #1616]
  40abe8:	add	x16, x16, #0x650
  40abec:	br	x17

000000000040abf0 <getopt_long@plt>:
  40abf0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40abf4:	ldr	x17, [x16, #1624]
  40abf8:	add	x16, x16, #0x658
  40abfc:	br	x17

000000000040ac00 <ethtool_set_wol@plt>:
  40ac00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac04:	ldr	x17, [x16, #1632]
  40ac08:	add	x16, x16, #0x660
  40ac0c:	br	x17

000000000040ac10 <cg_pid_get_session@plt>:
  40ac10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac14:	ldr	x17, [x16, #1640]
  40ac18:	add	x16, x16, #0x668
  40ac1c:	br	x17

000000000040ac20 <dirname_malloc@plt>:
  40ac20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac24:	ldr	x17, [x16, #1648]
  40ac28:	add	x16, x16, #0x670
  40ac2c:	br	x17

000000000040ac30 <strstr@plt>:
  40ac30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac34:	ldr	x17, [x16, #1656]
  40ac38:	add	x16, x16, #0x678
  40ac3c:	br	x17

000000000040ac40 <vasprintf@plt>:
  40ac40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac44:	ldr	x17, [x16, #1664]
  40ac48:	add	x16, x16, #0x680
  40ac4c:	br	x17

000000000040ac50 <sd_event_now@plt>:
  40ac50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac54:	ldr	x17, [x16, #1672]
  40ac58:	add	x16, x16, #0x688
  40ac5c:	br	x17

000000000040ac60 <sysctl_write@plt>:
  40ac60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac64:	ldr	x17, [x16, #1680]
  40ac68:	add	x16, x16, #0x690
  40ac6c:	br	x17

000000000040ac70 <_exit@plt>:
  40ac70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac74:	ldr	x17, [x16, #1688]
  40ac78:	add	x16, x16, #0x698
  40ac7c:	br	x17

000000000040ac80 <parse_mode@plt>:
  40ac80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac84:	ldr	x17, [x16, #1696]
  40ac88:	add	x16, x16, #0x6a0
  40ac8c:	br	x17

000000000040ac90 <cunescape@plt>:
  40ac90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ac94:	ldr	x17, [x16, #1704]
  40ac98:	add	x16, x16, #0x6a8
  40ac9c:	br	x17

000000000040aca0 <log_assert_failed_unreachable_realm@plt>:
  40aca0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aca4:	ldr	x17, [x16, #1712]
  40aca8:	add	x16, x16, #0x6b0
  40acac:	br	x17

000000000040acb0 <acl_set_qualifier@plt>:
  40acb0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40acb4:	ldr	x17, [x16, #1720]
  40acb8:	add	x16, x16, #0x6b8
  40acbc:	br	x17

000000000040acc0 <sd_listen_fds@plt>:
  40acc0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40acc4:	ldr	x17, [x16, #1728]
  40acc8:	add	x16, x16, #0x6c0
  40accc:	br	x17

000000000040acd0 <delete_trailing_chars@plt>:
  40acd0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40acd4:	ldr	x17, [x16, #1736]
  40acd8:	add	x16, x16, #0x6c8
  40acdc:	br	x17

000000000040ace0 <sd_event_source_set_enabled@plt>:
  40ace0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ace4:	ldr	x17, [x16, #1744]
  40ace8:	add	x16, x16, #0x6d0
  40acec:	br	x17

000000000040acf0 <umask@plt>:
  40acf0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40acf4:	ldr	x17, [x16, #1752]
  40acf8:	add	x16, x16, #0x6d8
  40acfc:	br	x17

000000000040ad00 <device_set_is_initialized@plt>:
  40ad00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad04:	ldr	x17, [x16, #1760]
  40ad08:	add	x16, x16, #0x6e0
  40ad0c:	br	x17

000000000040ad10 <path_is_absolute@plt>:
  40ad10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad14:	ldr	x17, [x16, #1768]
  40ad18:	add	x16, x16, #0x6e8
  40ad1c:	br	x17

000000000040ad20 <cg_pid_get_user_slice@plt>:
  40ad20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad24:	ldr	x17, [x16, #1776]
  40ad28:	add	x16, x16, #0x6f0
  40ad2c:	br	x17

000000000040ad30 <device_shallow_clone@plt>:
  40ad30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad34:	ldr	x17, [x16, #1784]
  40ad38:	add	x16, x16, #0x6f8
  40ad3c:	br	x17

000000000040ad40 <device_get_devnode_uid@plt>:
  40ad40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad44:	ldr	x17, [x16, #1792]
  40ad48:	add	x16, x16, #0x700
  40ad4c:	br	x17

000000000040ad50 <uname_architecture@plt>:
  40ad50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad54:	ldr	x17, [x16, #1800]
  40ad58:	add	x16, x16, #0x708
  40ad5c:	br	x17

000000000040ad60 <resolve_name_timing_from_string@plt>:
  40ad60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad64:	ldr	x17, [x16, #1808]
  40ad68:	add	x16, x16, #0x710
  40ad6c:	br	x17

000000000040ad70 <sd_device_get_devlink_first@plt>:
  40ad70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad74:	ldr	x17, [x16, #1816]
  40ad78:	add	x16, x16, #0x718
  40ad7c:	br	x17

000000000040ad80 <setsid@plt>:
  40ad80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad84:	ldr	x17, [x16, #1824]
  40ad88:	add	x16, x16, #0x720
  40ad8c:	br	x17

000000000040ad90 <device_get_devnode_mode@plt>:
  40ad90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ad94:	ldr	x17, [x16, #1832]
  40ad98:	add	x16, x16, #0x728
  40ad9c:	br	x17

000000000040ada0 <sd_device_monitor_get_event_source@plt>:
  40ada0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ada4:	ldr	x17, [x16, #1840]
  40ada8:	add	x16, x16, #0x730
  40adac:	br	x17

000000000040adb0 <rmdir_parents@plt>:
  40adb0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40adb4:	ldr	x17, [x16, #1848]
  40adb8:	add	x16, x16, #0x738
  40adbc:	br	x17

000000000040adc0 <closedir@plt>:
  40adc0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40adc4:	ldr	x17, [x16, #1856]
  40adc8:	add	x16, x16, #0x740
  40adcc:	br	x17

000000000040add0 <__isoc99_sscanf@plt>:
  40add0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40add4:	ldr	x17, [x16, #1864]
  40add8:	add	x16, x16, #0x748
  40addc:	br	x17

000000000040ade0 <blkid_probe_is_wholedisk@plt>:
  40ade0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ade4:	ldr	x17, [x16, #1872]
  40ade8:	add	x16, x16, #0x750
  40adec:	br	x17

000000000040adf0 <device_rename@plt>:
  40adf0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40adf4:	ldr	x17, [x16, #1880]
  40adf8:	add	x16, x16, #0x758
  40adfc:	br	x17

000000000040ae00 <strncmp@plt>:
  40ae00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae04:	ldr	x17, [x16, #1888]
  40ae08:	add	x16, x16, #0x760
  40ae0c:	br	x17

000000000040ae10 <config_parse_channel@plt>:
  40ae10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae14:	ldr	x17, [x16, #1896]
  40ae18:	add	x16, x16, #0x768
  40ae1c:	br	x17

000000000040ae20 <access@plt>:
  40ae20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae24:	ldr	x17, [x16, #1904]
  40ae28:	add	x16, x16, #0x770
  40ae2c:	br	x17

000000000040ae30 <sigprocmask_many@plt>:
  40ae30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae34:	ldr	x17, [x16, #1912]
  40ae38:	add	x16, x16, #0x778
  40ae3c:	br	x17

000000000040ae40 <acl_add_perm@plt>:
  40ae40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae44:	ldr	x17, [x16, #1920]
  40ae48:	add	x16, x16, #0x780
  40ae4c:	br	x17

000000000040ae50 <abort@plt>:
  40ae50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae54:	ldr	x17, [x16, #1928]
  40ae58:	add	x16, x16, #0x788
  40ae5c:	br	x17

000000000040ae60 <greedy_realloc@plt>:
  40ae60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae64:	ldr	x17, [x16, #1936]
  40ae68:	add	x16, x16, #0x790
  40ae6c:	br	x17

000000000040ae70 <blkid_do_safeprobe@plt>:
  40ae70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae74:	ldr	x17, [x16, #1944]
  40ae78:	add	x16, x16, #0x798
  40ae7c:	br	x17

000000000040ae80 <fnmatch@plt>:
  40ae80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae84:	ldr	x17, [x16, #1952]
  40ae88:	add	x16, x16, #0x7a0
  40ae8c:	br	x17

000000000040ae90 <device_monitor_disconnect@plt>:
  40ae90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ae94:	ldr	x17, [x16, #1960]
  40ae98:	add	x16, x16, #0x7a8
  40ae9c:	br	x17

000000000040aea0 <uid_is_valid@plt>:
  40aea0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aea4:	ldr	x17, [x16, #1968]
  40aea8:	add	x16, x16, #0x7b0
  40aeac:	br	x17

000000000040aeb0 <strspn@plt>:
  40aeb0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aeb4:	ldr	x17, [x16, #1976]
  40aeb8:	add	x16, x16, #0x7b8
  40aebc:	br	x17

000000000040aec0 <internal_hashmap_get@plt>:
  40aec0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aec4:	ldr	x17, [x16, #1984]
  40aec8:	add	x16, x16, #0x7c0
  40aecc:	br	x17

000000000040aed0 <sd_booted@plt>:
  40aed0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aed4:	ldr	x17, [x16, #1992]
  40aed8:	add	x16, x16, #0x7c8
  40aedc:	br	x17

000000000040aee0 <usleep@plt>:
  40aee0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aee4:	ldr	x17, [x16, #2000]
  40aee8:	add	x16, x16, #0x7d0
  40aeec:	br	x17

000000000040aef0 <path_make_relative@plt>:
  40aef0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aef4:	ldr	x17, [x16, #2008]
  40aef8:	add	x16, x16, #0x7d8
  40aefc:	br	x17

000000000040af00 <ethtool_set_glinksettings@plt>:
  40af00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af04:	ldr	x17, [x16, #2016]
  40af08:	add	x16, x16, #0x7e0
  40af0c:	br	x17

000000000040af10 <rmdir@plt>:
  40af10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af14:	ldr	x17, [x16, #2024]
  40af18:	add	x16, x16, #0x7e8
  40af1c:	br	x17

000000000040af20 <env_assignment_is_valid@plt>:
  40af20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af24:	ldr	x17, [x16, #2032]
  40af28:	add	x16, x16, #0x7f0
  40af2c:	br	x17

000000000040af30 <sockaddr_un_unlink@plt>:
  40af30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af34:	ldr	x17, [x16, #2040]
  40af38:	add	x16, x16, #0x7f8
  40af3c:	br	x17

000000000040af40 <config_parse_nic_buffer_size@plt>:
  40af40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af44:	ldr	x17, [x16, #2048]
  40af48:	add	x16, x16, #0x800
  40af4c:	br	x17

000000000040af50 <sd_netlink_unref@plt>:
  40af50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af54:	ldr	x17, [x16, #2056]
  40af58:	add	x16, x16, #0x808
  40af5c:	br	x17

000000000040af60 <sd_device_monitor_set_receive_buffer_size@plt>:
  40af60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af64:	ldr	x17, [x16, #2064]
  40af68:	add	x16, x16, #0x810
  40af6c:	br	x17

000000000040af70 <strv_consume@plt>:
  40af70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af74:	ldr	x17, [x16, #2072]
  40af78:	add	x16, x16, #0x818
  40af7c:	br	x17

000000000040af80 <sd_device_get_subsystem@plt>:
  40af80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af84:	ldr	x17, [x16, #2080]
  40af88:	add	x16, x16, #0x820
  40af8c:	br	x17

000000000040af90 <__fxstat64@plt>:
  40af90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40af94:	ldr	x17, [x16, #2088]
  40af98:	add	x16, x16, #0x828
  40af9c:	br	x17

000000000040afa0 <blkid_probe_filter_superblocks_usage@plt>:
  40afa0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40afa4:	ldr	x17, [x16, #2096]
  40afa8:	add	x16, x16, #0x830
  40afac:	br	x17

000000000040afb0 <kmod_unref@plt>:
  40afb0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40afb4:	ldr	x17, [x16, #2104]
  40afb8:	add	x16, x16, #0x838
  40afbc:	br	x17

000000000040afc0 <virtualization_to_string@plt>:
  40afc0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40afc4:	ldr	x17, [x16, #2112]
  40afc8:	add	x16, x16, #0x840
  40afcc:	br	x17

000000000040afd0 <sd_device_enumerator_add_match_parent@plt>:
  40afd0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40afd4:	ldr	x17, [x16, #2120]
  40afd8:	add	x16, x16, #0x848
  40afdc:	br	x17

000000000040afe0 <config_parse_string@plt>:
  40afe0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40afe4:	ldr	x17, [x16, #2128]
  40afe8:	add	x16, x16, #0x850
  40afec:	br	x17

000000000040aff0 <sysctl_read@plt>:
  40aff0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40aff4:	ldr	x17, [x16, #2136]
  40aff8:	add	x16, x16, #0x858
  40affc:	br	x17

000000000040b000 <touch@plt>:
  40b000:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b004:	ldr	x17, [x16, #2144]
  40b008:	add	x16, x16, #0x860
  40b00c:	br	x17

000000000040b010 <inotify_add_watch@plt>:
  40b010:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b014:	ldr	x17, [x16, #2152]
  40b018:	add	x16, x16, #0x868
  40b01c:	br	x17

000000000040b020 <log_object_internal@plt>:
  40b020:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b024:	ldr	x17, [x16, #2160]
  40b028:	add	x16, x16, #0x870
  40b02c:	br	x17

000000000040b030 <config_parse_warn_compat@plt>:
  40b030:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b034:	ldr	x17, [x16, #2168]
  40b038:	add	x16, x16, #0x878
  40b03c:	br	x17

000000000040b040 <__errno_location@plt>:
  40b040:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b044:	ldr	x17, [x16, #2176]
  40b048:	add	x16, x16, #0x880
  40b04c:	br	x17

000000000040b050 <sd_event_new@plt>:
  40b050:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b054:	ldr	x17, [x16, #2184]
  40b058:	add	x16, x16, #0x888
  40b05c:	br	x17

000000000040b060 <log_set_target@plt>:
  40b060:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b064:	ldr	x17, [x16, #2192]
  40b068:	add	x16, x16, #0x890
  40b06c:	br	x17

000000000040b070 <sd_notifyf@plt>:
  40b070:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b074:	ldr	x17, [x16, #2200]
  40b078:	add	x16, x16, #0x898
  40b07c:	br	x17

000000000040b080 <strv_free@plt>:
  40b080:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b084:	ldr	x17, [x16, #2208]
  40b088:	add	x16, x16, #0x8a0
  40b08c:	br	x17

000000000040b090 <module_load_and_warn@plt>:
  40b090:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b094:	ldr	x17, [x16, #2216]
  40b098:	add	x16, x16, #0x8a8
  40b09c:	br	x17

000000000040b0a0 <physical_memory@plt>:
  40b0a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b0a4:	ldr	x17, [x16, #2224]
  40b0a8:	add	x16, x16, #0x8b0
  40b0ac:	br	x17

000000000040b0b0 <read@plt>:
  40b0b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b0b4:	ldr	x17, [x16, #2232]
  40b0b8:	add	x16, x16, #0x8b8
  40b0bc:	br	x17

000000000040b0c0 <udev_util_encode_string@plt>:
  40b0c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b0c4:	ldr	x17, [x16, #2240]
  40b0c8:	add	x16, x16, #0x8c0
  40b0cc:	br	x17

000000000040b0d0 <device_get_devnode_gid@plt>:
  40b0d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b0d4:	ldr	x17, [x16, #2248]
  40b0d8:	add	x16, x16, #0x8c8
  40b0dc:	br	x17

000000000040b0e0 <safe_atoi@plt>:
  40b0e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b0e4:	ldr	x17, [x16, #2256]
  40b0e8:	add	x16, x16, #0x8d0
  40b0ec:	br	x17

000000000040b0f0 <internal_set_new@plt>:
  40b0f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b0f4:	ldr	x17, [x16, #2264]
  40b0f8:	add	x16, x16, #0x8d8
  40b0fc:	br	x17

000000000040b100 <mac_smack_apply@plt>:
  40b100:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b104:	ldr	x17, [x16, #2272]
  40b108:	add	x16, x16, #0x8e0
  40b10c:	br	x17

000000000040b110 <ether_addr_from_string@plt>:
  40b110:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b114:	ldr	x17, [x16, #2280]
  40b118:	add	x16, x16, #0x8e8
  40b11c:	br	x17

000000000040b120 <parse_env_file_sentinel@plt>:
  40b120:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b124:	ldr	x17, [x16, #2288]
  40b128:	add	x16, x16, #0x8f0
  40b12c:	br	x17

000000000040b130 <sd_event_source_set_priority@plt>:
  40b130:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b134:	ldr	x17, [x16, #2296]
  40b138:	add	x16, x16, #0x8f8
  40b13c:	br	x17

000000000040b140 <device_cleanup_tags@plt>:
  40b140:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b144:	ldr	x17, [x16, #2304]
  40b148:	add	x16, x16, #0x900
  40b14c:	br	x17

000000000040b150 <strnpcpy@plt>:
  40b150:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b154:	ldr	x17, [x16, #2312]
  40b158:	add	x16, x16, #0x908
  40b15c:	br	x17

000000000040b160 <strv_extend@plt>:
  40b160:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b164:	ldr	x17, [x16, #2320]
  40b168:	add	x16, x16, #0x910
  40b16c:	br	x17

000000000040b170 <blkid_probe_lookup_value@plt>:
  40b170:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b174:	ldr	x17, [x16, #2328]
  40b178:	add	x16, x16, #0x918
  40b17c:	br	x17

000000000040b180 <acl_get_file@plt>:
  40b180:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b184:	ldr	x17, [x16, #2336]
  40b188:	add	x16, x16, #0x920
  40b18c:	br	x17

000000000040b190 <strextend_with_separator@plt>:
  40b190:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b194:	ldr	x17, [x16, #2344]
  40b198:	add	x16, x16, #0x928
  40b19c:	br	x17

000000000040b1a0 <__lxstat64@plt>:
  40b1a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b1a4:	ldr	x17, [x16, #2352]
  40b1a8:	add	x16, x16, #0x930
  40b1ac:	br	x17

000000000040b1b0 <read_one_line_file@plt>:
  40b1b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b1b4:	ldr	x17, [x16, #2360]
  40b1b8:	add	x16, x16, #0x938
  40b1bc:	br	x17

000000000040b1c0 <rewinddir@plt>:
  40b1c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b1c4:	ldr	x17, [x16, #2368]
  40b1c8:	add	x16, x16, #0x940
  40b1cc:	br	x17

000000000040b1d0 <fork@plt>:
  40b1d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b1d4:	ldr	x17, [x16, #2376]
  40b1d8:	add	x16, x16, #0x948
  40b1dc:	br	x17

000000000040b1e0 <strndup@plt>:
  40b1e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b1e4:	ldr	x17, [x16, #2384]
  40b1e8:	add	x16, x16, #0x950
  40b1ec:	br	x17

000000000040b1f0 <blkid_partlist_numof_partitions@plt>:
  40b1f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b1f4:	ldr	x17, [x16, #2392]
  40b1f8:	add	x16, x16, #0x958
  40b1fc:	br	x17

000000000040b200 <unsetenv@plt>:
  40b200:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b204:	ldr	x17, [x16, #2400]
  40b208:	add	x16, x16, #0x960
  40b20c:	br	x17

000000000040b210 <safe_atolli@plt>:
  40b210:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b214:	ldr	x17, [x16, #2408]
  40b218:	add	x16, x16, #0x968
  40b21c:	br	x17

000000000040b220 <terminal_urlify_man@plt>:
  40b220:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b224:	ldr	x17, [x16, #2416]
  40b228:	add	x16, x16, #0x970
  40b22c:	br	x17

000000000040b230 <acl_calc_mask@plt>:
  40b230:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b234:	ldr	x17, [x16, #2424]
  40b238:	add	x16, x16, #0x978
  40b23c:	br	x17

000000000040b240 <device_delete_db@plt>:
  40b240:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b244:	ldr	x17, [x16, #2432]
  40b248:	add	x16, x16, #0x980
  40b24c:	br	x17

000000000040b250 <listen@plt>:
  40b250:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b254:	ldr	x17, [x16, #2440]
  40b258:	add	x16, x16, #0x988
  40b25c:	br	x17

000000000040b260 <gnu_dev_makedev@plt>:
  40b260:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b264:	ldr	x17, [x16, #2448]
  40b268:	add	x16, x16, #0x990
  40b26c:	br	x17

000000000040b270 <blkid_partition_get_flags@plt>:
  40b270:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b274:	ldr	x17, [x16, #2456]
  40b278:	add	x16, x16, #0x998
  40b27c:	br	x17

000000000040b280 <__stack_chk_fail@plt>:
  40b280:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b284:	ldr	x17, [x16, #2464]
  40b288:	add	x16, x16, #0x9a0
  40b28c:	br	x17

000000000040b290 <blkid_partition_get_uuid@plt>:
  40b290:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b294:	ldr	x17, [x16, #2472]
  40b298:	add	x16, x16, #0x9a8
  40b29c:	br	x17

000000000040b2a0 <strv_split_newlines@plt>:
  40b2a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b2a4:	ldr	x17, [x16, #2480]
  40b2a8:	add	x16, x16, #0x9b0
  40b2ac:	br	x17

000000000040b2b0 <mac_selinux_apply@plt>:
  40b2b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b2b4:	ldr	x17, [x16, #2488]
  40b2b8:	add	x16, x16, #0x9b8
  40b2bc:	br	x17

000000000040b2c0 <duplex_to_string@plt>:
  40b2c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b2c4:	ldr	x17, [x16, #2496]
  40b2c8:	add	x16, x16, #0x9c0
  40b2cc:	br	x17

000000000040b2d0 <cg_pid_get_owner_uid@plt>:
  40b2d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b2d4:	ldr	x17, [x16, #2504]
  40b2d8:	add	x16, x16, #0x9c8
  40b2dc:	br	x17

000000000040b2e0 <strnscpy@plt>:
  40b2e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b2e4:	ldr	x17, [x16, #2512]
  40b2e8:	add	x16, x16, #0x9d0
  40b2ec:	br	x17

000000000040b2f0 <path_join_internal@plt>:
  40b2f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b2f4:	ldr	x17, [x16, #2520]
  40b2f8:	add	x16, x16, #0x9d8
  40b2fc:	br	x17

000000000040b300 <socketpair@plt>:
  40b300:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b304:	ldr	x17, [x16, #2528]
  40b308:	add	x16, x16, #0x9e0
  40b30c:	br	x17

000000000040b310 <next_datagram_size_fd@plt>:
  40b310:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b314:	ldr	x17, [x16, #2536]
  40b318:	add	x16, x16, #0x9e8
  40b31c:	br	x17

000000000040b320 <blkid_do_fullprobe@plt>:
  40b320:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b324:	ldr	x17, [x16, #2544]
  40b328:	add	x16, x16, #0x9f0
  40b32c:	br	x17

000000000040b330 <__xstat64@plt>:
  40b330:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b334:	ldr	x17, [x16, #2552]
  40b338:	add	x16, x16, #0x9f8
  40b33c:	br	x17

000000000040b340 <utimensat@plt>:
  40b340:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b344:	ldr	x17, [x16, #2560]
  40b348:	add	x16, x16, #0xa00
  40b34c:	br	x17

000000000040b350 <ask_password_agent_close@plt>:
  40b350:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b354:	ldr	x17, [x16, #2568]
  40b358:	add	x16, x16, #0xa08
  40b35c:	br	x17

000000000040b360 <signal_to_string@plt>:
  40b360:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b364:	ldr	x17, [x16, #2576]
  40b368:	add	x16, x16, #0xa10
  40b36c:	br	x17

000000000040b370 <sysctl_normalize@plt>:
  40b370:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b374:	ldr	x17, [x16, #2584]
  40b378:	add	x16, x16, #0xa18
  40b37c:	br	x17

000000000040b380 <strpbrk@plt>:
  40b380:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b384:	ldr	x17, [x16, #2592]
  40b388:	add	x16, x16, #0xa20
  40b38c:	br	x17

000000000040b390 <pager_close@plt>:
  40b390:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b394:	ldr	x17, [x16, #2600]
  40b398:	add	x16, x16, #0xa28
  40b39c:	br	x17

000000000040b3a0 <fd_warn_permissions@plt>:
  40b3a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b3a4:	ldr	x17, [x16, #2608]
  40b3a8:	add	x16, x16, #0xa30
  40b3ac:	br	x17

000000000040b3b0 <sd_device_enumerator_get_device_next@plt>:
  40b3b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b3b4:	ldr	x17, [x16, #2616]
  40b3b8:	add	x16, x16, #0xa38
  40b3bc:	br	x17

000000000040b3c0 <sd_device_monitor_unref@plt>:
  40b3c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b3c4:	ldr	x17, [x16, #2624]
  40b3c8:	add	x16, x16, #0xa40
  40b3cc:	br	x17

000000000040b3d0 <sd_device_get_devnum@plt>:
  40b3d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b3d4:	ldr	x17, [x16, #2632]
  40b3d8:	add	x16, x16, #0xa48
  40b3dc:	br	x17

000000000040b3e0 <log_level_from_string@plt>:
  40b3e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b3e4:	ldr	x17, [x16, #2640]
  40b3e8:	add	x16, x16, #0xa50
  40b3ec:	br	x17

000000000040b3f0 <strv_length@plt>:
  40b3f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b3f4:	ldr	x17, [x16, #2648]
  40b3f8:	add	x16, x16, #0xa58
  40b3fc:	br	x17

000000000040b400 <chdir@plt>:
  40b400:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b404:	ldr	x17, [x16, #2656]
  40b408:	add	x16, x16, #0xa60
  40b40c:	br	x17

000000000040b410 <memcmp@plt>:
  40b410:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b414:	ldr	x17, [x16, #2664]
  40b418:	add	x16, x16, #0xa68
  40b41c:	br	x17

000000000040b420 <cmsg_close_all@plt>:
  40b420:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b424:	ldr	x17, [x16, #2672]
  40b428:	add	x16, x16, #0xa70
  40b42c:	br	x17

000000000040b430 <blkid_partlist_get_partition@plt>:
  40b430:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b434:	ldr	x17, [x16, #2680]
  40b438:	add	x16, x16, #0xa78
  40b43c:	br	x17

000000000040b440 <proc_cmdline_get_key@plt>:
  40b440:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b444:	ldr	x17, [x16, #2688]
  40b448:	add	x16, x16, #0xa80
  40b44c:	br	x17

000000000040b450 <strv_find@plt>:
  40b450:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b454:	ldr	x17, [x16, #2696]
  40b458:	add	x16, x16, #0xa88
  40b45c:	br	x17

000000000040b460 <sd_id128_get_machine@plt>:
  40b460:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b464:	ldr	x17, [x16, #2704]
  40b468:	add	x16, x16, #0xa90
  40b46c:	br	x17

000000000040b470 <sd_notify@plt>:
  40b470:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b474:	ldr	x17, [x16, #2712]
  40b478:	add	x16, x16, #0xa98
  40b47c:	br	x17

000000000040b480 <malloc@plt>:
  40b480:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b484:	ldr	x17, [x16, #2720]
  40b488:	add	x16, x16, #0xaa0
  40b48c:	br	x17

000000000040b490 <udev_parse_config_full@plt>:
  40b490:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b494:	ldr	x17, [x16, #2728]
  40b498:	add	x16, x16, #0xaa8
  40b49c:	br	x17

000000000040b4a0 <safe_atou_full@plt>:
  40b4a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b4a4:	ldr	x17, [x16, #2736]
  40b4a8:	add	x16, x16, #0xab0
  40b4ac:	br	x17

000000000040b4b0 <device_get_action@plt>:
  40b4b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b4b4:	ldr	x17, [x16, #2744]
  40b4b8:	add	x16, x16, #0xab8
  40b4bc:	br	x17

000000000040b4c0 <rlimit_nofile_safe@plt>:
  40b4c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b4c4:	ldr	x17, [x16, #2752]
  40b4c8:	add	x16, x16, #0xac0
  40b4cc:	br	x17

000000000040b4d0 <internal_hashmap_size@plt>:
  40b4d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b4d4:	ldr	x17, [x16, #2760]
  40b4d8:	add	x16, x16, #0xac8
  40b4dc:	br	x17

000000000040b4e0 <acl_set_file@plt>:
  40b4e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b4e4:	ldr	x17, [x16, #2768]
  40b4e8:	add	x16, x16, #0xad0
  40b4ec:	br	x17

000000000040b4f0 <log_internal_realm@plt>:
  40b4f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b4f4:	ldr	x17, [x16, #2776]
  40b4f8:	add	x16, x16, #0xad8
  40b4fc:	br	x17

000000000040b500 <bind@plt>:
  40b500:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b504:	ldr	x17, [x16, #2784]
  40b508:	add	x16, x16, #0xae0
  40b50c:	br	x17

000000000040b510 <pipe2@plt>:
  40b510:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b514:	ldr	x17, [x16, #2792]
  40b518:	add	x16, x16, #0xae8
  40b51c:	br	x17

000000000040b520 <device_add_tag@plt>:
  40b520:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b524:	ldr	x17, [x16, #2800]
  40b528:	add	x16, x16, #0xaf0
  40b52c:	br	x17

000000000040b530 <blkid_probe_get_size@plt>:
  40b530:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b534:	ldr	x17, [x16, #2808]
  40b538:	add	x16, x16, #0xaf8
  40b53c:	br	x17

000000000040b540 <acl_set_tag_type@plt>:
  40b540:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b544:	ldr	x17, [x16, #2816]
  40b548:	add	x16, x16, #0xb00
  40b54c:	br	x17

000000000040b550 <blkid_probe_get_partitions@plt>:
  40b550:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b554:	ldr	x17, [x16, #2824]
  40b558:	add	x16, x16, #0xb08
  40b55c:	br	x17

000000000040b560 <internal_hashmap_clear@plt>:
  40b560:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b564:	ldr	x17, [x16, #2832]
  40b568:	add	x16, x16, #0xb10
  40b56c:	br	x17

000000000040b570 <hashmap_put@plt>:
  40b570:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b574:	ldr	x17, [x16, #2840]
  40b578:	add	x16, x16, #0xb18
  40b57c:	br	x17

000000000040b580 <blkid_safe_string@plt>:
  40b580:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b584:	ldr	x17, [x16, #2848]
  40b588:	add	x16, x16, #0xb20
  40b58c:	br	x17

000000000040b590 <split@plt>:
  40b590:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b594:	ldr	x17, [x16, #2856]
  40b598:	add	x16, x16, #0xb28
  40b59c:	br	x17

000000000040b5a0 <device_read_db_internal@plt>:
  40b5a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b5a4:	ldr	x17, [x16, #2864]
  40b5a8:	add	x16, x16, #0xb30
  40b5ac:	br	x17

000000000040b5b0 <getpeercred@plt>:
  40b5b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b5b4:	ldr	x17, [x16, #2872]
  40b5b8:	add	x16, x16, #0xb38
  40b5bc:	br	x17

000000000040b5c0 <cg_pid_get_user_unit@plt>:
  40b5c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b5c4:	ldr	x17, [x16, #2880]
  40b5c8:	add	x16, x16, #0xb40
  40b5cc:	br	x17

000000000040b5d0 <waitpid@plt>:
  40b5d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b5d4:	ldr	x17, [x16, #2888]
  40b5d8:	add	x16, x16, #0xb48
  40b5dc:	br	x17

000000000040b5e0 <get_user_creds@plt>:
  40b5e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b5e4:	ldr	x17, [x16, #2896]
  40b5e8:	add	x16, x16, #0xb50
  40b5ec:	br	x17

000000000040b5f0 <ioctl@plt>:
  40b5f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b5f4:	ldr	x17, [x16, #2904]
  40b5f8:	add	x16, x16, #0xb58
  40b5fc:	br	x17

000000000040b600 <sd_device_get_devpath@plt>:
  40b600:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b604:	ldr	x17, [x16, #2912]
  40b608:	add	x16, x16, #0xb60
  40b60c:	br	x17

000000000040b610 <gnu_dev_major@plt>:
  40b610:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b614:	ldr	x17, [x16, #2920]
  40b618:	add	x16, x16, #0xb68
  40b61c:	br	x17

000000000040b620 <condition_free_list_type@plt>:
  40b620:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b624:	ldr	x17, [x16, #2928]
  40b628:	add	x16, x16, #0xb70
  40b62c:	br	x17

000000000040b630 <strtoul@plt>:
  40b630:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b634:	ldr	x17, [x16, #2936]
  40b638:	add	x16, x16, #0xb78
  40b63c:	br	x17

000000000040b640 <get_files_in_directory@plt>:
  40b640:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b644:	ldr	x17, [x16, #2944]
  40b648:	add	x16, x16, #0xb80
  40b64c:	br	x17

000000000040b650 <now@plt>:
  40b650:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b654:	ldr	x17, [x16, #2952]
  40b658:	add	x16, x16, #0xb88
  40b65c:	br	x17

000000000040b660 <blkid_partition_get_type_string@plt>:
  40b660:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b664:	ldr	x17, [x16, #2960]
  40b668:	add	x16, x16, #0xb90
  40b66c:	br	x17

000000000040b670 <endswith@plt>:
  40b670:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b674:	ldr	x17, [x16, #2968]
  40b678:	add	x16, x16, #0xb98
  40b67c:	br	x17

000000000040b680 <config_parse_wol@plt>:
  40b680:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b684:	ldr	x17, [x16, #2976]
  40b688:	add	x16, x16, #0xba0
  40b68c:	br	x17

000000000040b690 <sd_event_add_io@plt>:
  40b690:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b694:	ldr	x17, [x16, #2984]
  40b698:	add	x16, x16, #0xba8
  40b69c:	br	x17

000000000040b6a0 <log_syntax_internal@plt>:
  40b6a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b6a4:	ldr	x17, [x16, #2992]
  40b6a8:	add	x16, x16, #0xbb0
  40b6ac:	br	x17

000000000040b6b0 <parse_uid@plt>:
  40b6b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b6b4:	ldr	x17, [x16, #3000]
  40b6b8:	add	x16, x16, #0xbb8
  40b6bc:	br	x17

000000000040b6c0 <wol_to_string@plt>:
  40b6c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b6c4:	ldr	x17, [x16, #3008]
  40b6c8:	add	x16, x16, #0xbc0
  40b6cc:	br	x17

000000000040b6d0 <string_table_lookup@plt>:
  40b6d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b6d4:	ldr	x17, [x16, #3016]
  40b6d8:	add	x16, x16, #0xbc8
  40b6dc:	br	x17

000000000040b6e0 <sd_hwdb_new@plt>:
  40b6e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b6e4:	ldr	x17, [x16, #3024]
  40b6e8:	add	x16, x16, #0xbd0
  40b6ec:	br	x17

000000000040b6f0 <acl_get_tag_type@plt>:
  40b6f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b6f4:	ldr	x17, [x16, #3032]
  40b6f8:	add	x16, x16, #0xbd8
  40b6fc:	br	x17

000000000040b700 <ascii_is_valid@plt>:
  40b700:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b704:	ldr	x17, [x16, #3040]
  40b708:	add	x16, x16, #0xbe0
  40b70c:	br	x17

000000000040b710 <strcmp@plt>:
  40b710:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b714:	ldr	x17, [x16, #3048]
  40b718:	add	x16, x16, #0xbe8
  40b71c:	br	x17

000000000040b720 <strtol@plt>:
  40b720:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b724:	ldr	x17, [x16, #3056]
  40b728:	add	x16, x16, #0xbf0
  40b72c:	br	x17

000000000040b730 <recvmsg@plt>:
  40b730:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b734:	ldr	x17, [x16, #3064]
  40b738:	add	x16, x16, #0xbf8
  40b73c:	br	x17

000000000040b740 <blkid_probe_get_fd@plt>:
  40b740:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b744:	ldr	x17, [x16, #3072]
  40b748:	add	x16, x16, #0xc00
  40b74c:	br	x17

000000000040b750 <extract_first_word@plt>:
  40b750:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b754:	ldr	x17, [x16, #3080]
  40b758:	add	x16, x16, #0xc08
  40b75c:	br	x17

000000000040b760 <port_to_string@plt>:
  40b760:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b764:	ldr	x17, [x16, #3088]
  40b768:	add	x16, x16, #0xc10
  40b76c:	br	x17

000000000040b770 <opendir@plt>:
  40b770:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b774:	ldr	x17, [x16, #3096]
  40b778:	add	x16, x16, #0xc18
  40b77c:	br	x17

000000000040b780 <sd_device_get_tag_first@plt>:
  40b780:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b784:	ldr	x17, [x16, #3104]
  40b788:	add	x16, x16, #0xc20
  40b78c:	br	x17

000000000040b790 <readlinkat_malloc@plt>:
  40b790:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b794:	ldr	x17, [x16, #3112]
  40b798:	add	x16, x16, #0xc28
  40b79c:	br	x17

000000000040b7a0 <sd_event_loop@plt>:
  40b7a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b7a4:	ldr	x17, [x16, #3120]
  40b7a8:	add	x16, x16, #0xc30
  40b7ac:	br	x17

000000000040b7b0 <internal_hashmap_iterate@plt>:
  40b7b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b7b4:	ldr	x17, [x16, #3128]
  40b7b8:	add	x16, x16, #0xc38
  40b7bc:	br	x17

000000000040b7c0 <strdup@plt>:
  40b7c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b7c4:	ldr	x17, [x16, #3136]
  40b7c8:	add	x16, x16, #0xc40
  40b7cc:	br	x17

000000000040b7d0 <mac_selinux_create_file_clear@plt>:
  40b7d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b7d4:	ldr	x17, [x16, #3144]
  40b7d8:	add	x16, x16, #0xc48
  40b7dc:	br	x17

000000000040b7e0 <calloc@plt>:
  40b7e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b7e4:	ldr	x17, [x16, #3152]
  40b7e8:	add	x16, x16, #0xc50
  40b7ec:	br	x17

000000000040b7f0 <getenv@plt>:
  40b7f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b7f4:	ldr	x17, [x16, #3160]
  40b7f8:	add	x16, x16, #0xc58
  40b7fc:	br	x17

000000000040b800 <device_monitor_new_full@plt>:
  40b800:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b804:	ldr	x17, [x16, #3168]
  40b808:	add	x16, x16, #0xc60
  40b80c:	br	x17

000000000040b810 <setsockopt@plt>:
  40b810:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b814:	ldr	x17, [x16, #3176]
  40b818:	add	x16, x16, #0xc68
  40b81c:	br	x17

000000000040b820 <sd_event_ref@plt>:
  40b820:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b824:	ldr	x17, [x16, #3184]
  40b828:	add	x16, x16, #0xc70
  40b82c:	br	x17

000000000040b830 <safe_fork_full@plt>:
  40b830:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b834:	ldr	x17, [x16, #3192]
  40b838:	add	x16, x16, #0xc78
  40b83c:	br	x17

000000000040b840 <acl_get_entry@plt>:
  40b840:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b844:	ldr	x17, [x16, #3200]
  40b848:	add	x16, x16, #0xc80
  40b84c:	br	x17

000000000040b850 <strchr@plt>:
  40b850:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b854:	ldr	x17, [x16, #3208]
  40b858:	add	x16, x16, #0xc88
  40b85c:	br	x17

000000000040b860 <log_set_max_level_realm@plt>:
  40b860:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b864:	ldr	x17, [x16, #3216]
  40b868:	add	x16, x16, #0xc90
  40b86c:	br	x17

000000000040b870 <sd_device_get_sysattr_value@plt>:
  40b870:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b874:	ldr	x17, [x16, #3224]
  40b878:	add	x16, x16, #0xc98
  40b87c:	br	x17

000000000040b880 <proc_cmdline_parse@plt>:
  40b880:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b884:	ldr	x17, [x16, #3232]
  40b888:	add	x16, x16, #0xca0
  40b88c:	br	x17

000000000040b890 <asprintf@plt>:
  40b890:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b894:	ldr	x17, [x16, #3240]
  40b898:	add	x16, x16, #0xca8
  40b89c:	br	x17

000000000040b8a0 <config_parse_mtu@plt>:
  40b8a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b8a4:	ldr	x17, [x16, #3248]
  40b8a8:	add	x16, x16, #0xcb0
  40b8ac:	br	x17

000000000040b8b0 <sd_device_set_sysattr_value@plt>:
  40b8b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b8b4:	ldr	x17, [x16, #3256]
  40b8b8:	add	x16, x16, #0xcb8
  40b8bc:	br	x17

000000000040b8c0 <device_set_devlink_priority@plt>:
  40b8c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b8c4:	ldr	x17, [x16, #3264]
  40b8c8:	add	x16, x16, #0xcc0
  40b8cc:	br	x17

000000000040b8d0 <device_ensure_usec_initialized@plt>:
  40b8d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b8d4:	ldr	x17, [x16, #3272]
  40b8d8:	add	x16, x16, #0xcc8
  40b8dc:	br	x17

000000000040b8e0 <device_get_watch_handle@plt>:
  40b8e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b8e4:	ldr	x17, [x16, #3280]
  40b8e8:	add	x16, x16, #0xcd0
  40b8ec:	br	x17

000000000040b8f0 <condition_new@plt>:
  40b8f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b8f4:	ldr	x17, [x16, #3288]
  40b8f8:	add	x16, x16, #0xcd8
  40b8fc:	br	x17

000000000040b900 <acl_get_perm@plt>:
  40b900:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b904:	ldr	x17, [x16, #3296]
  40b908:	add	x16, x16, #0xce0
  40b90c:	br	x17

000000000040b910 <inotify_init1@plt>:
  40b910:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b914:	ldr	x17, [x16, #3304]
  40b918:	add	x16, x16, #0xce8
  40b91c:	br	x17

000000000040b920 <parse_sec@plt>:
  40b920:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b924:	ldr	x17, [x16, #3312]
  40b928:	add	x16, x16, #0xcf0
  40b92c:	br	x17

000000000040b930 <device_set_db_persist@plt>:
  40b930:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b934:	ldr	x17, [x16, #3320]
  40b938:	add	x16, x16, #0xcf8
  40b93c:	br	x17

000000000040b940 <ethtool_set_nic_buffer_size@plt>:
  40b940:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b944:	ldr	x17, [x16, #3328]
  40b948:	add	x16, x16, #0xd00
  40b94c:	br	x17

000000000040b950 <strv_uniq@plt>:
  40b950:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b954:	ldr	x17, [x16, #3336]
  40b958:	add	x16, x16, #0xd08
  40b95c:	br	x17

000000000040b960 <log_internalv_realm@plt>:
  40b960:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b964:	ldr	x17, [x16, #3344]
  40b968:	add	x16, x16, #0xd10
  40b96c:	br	x17

000000000040b970 <ethtool_get_driver@plt>:
  40b970:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b974:	ldr	x17, [x16, #3352]
  40b978:	add	x16, x16, #0xd18
  40b97c:	br	x17

000000000040b980 <get_group_creds@plt>:
  40b980:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b984:	ldr	x17, [x16, #3360]
  40b988:	add	x16, x16, #0xd20
  40b98c:	br	x17

000000000040b990 <event_source_disable@plt>:
  40b990:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b994:	ldr	x17, [x16, #3368]
  40b998:	add	x16, x16, #0xd28
  40b99c:	br	x17

000000000040b9a0 <acl_delete_entry@plt>:
  40b9a0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b9a4:	ldr	x17, [x16, #3376]
  40b9a8:	add	x16, x16, #0xd30
  40b9ac:	br	x17

000000000040b9b0 <cg_pid_get_unit@plt>:
  40b9b0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b9b4:	ldr	x17, [x16, #3384]
  40b9b8:	add	x16, x16, #0xd38
  40b9bc:	br	x17

000000000040b9c0 <accept4@plt>:
  40b9c0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b9c4:	ldr	x17, [x16, #3392]
  40b9c8:	add	x16, x16, #0xd40
  40b9cc:	br	x17

000000000040b9d0 <config_parse_duplex@plt>:
  40b9d0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b9d4:	ldr	x17, [x16, #3400]
  40b9d8:	add	x16, x16, #0xd48
  40b9dc:	br	x17

000000000040b9e0 <memeqzero@plt>:
  40b9e0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b9e4:	ldr	x17, [x16, #3408]
  40b9e8:	add	x16, x16, #0xd50
  40b9ec:	br	x17

000000000040b9f0 <device_copy_properties@plt>:
  40b9f0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40b9f4:	ldr	x17, [x16, #3416]
  40b9f8:	add	x16, x16, #0xd58
  40b9fc:	br	x17

000000000040ba00 <strstrip@plt>:
  40ba00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba04:	ldr	x17, [x16, #3424]
  40ba08:	add	x16, x16, #0xd60
  40ba0c:	br	x17

000000000040ba10 <unlinkat@plt>:
  40ba10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba14:	ldr	x17, [x16, #3432]
  40ba18:	add	x16, x16, #0xd68
  40ba1c:	br	x17

000000000040ba20 <free@plt>:
  40ba20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba24:	ldr	x17, [x16, #3440]
  40ba28:	add	x16, x16, #0xd70
  40ba2c:	br	x17

000000000040ba30 <puts@plt>:
  40ba30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba34:	ldr	x17, [x16, #3448]
  40ba38:	add	x16, x16, #0xd78
  40ba3c:	br	x17

000000000040ba40 <config_parse_advertise@plt>:
  40ba40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba44:	ldr	x17, [x16, #3456]
  40ba48:	add	x16, x16, #0xd80
  40ba4c:	br	x17

000000000040ba50 <paths_check_timestamp@plt>:
  40ba50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba54:	ldr	x17, [x16, #3464]
  40ba58:	add	x16, x16, #0xd88
  40ba5c:	br	x17

000000000040ba60 <sd_device_monitor_ref@plt>:
  40ba60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba64:	ldr	x17, [x16, #3472]
  40ba68:	add	x16, x16, #0xd90
  40ba6c:	br	x17

000000000040ba70 <gnu_dev_minor@plt>:
  40ba70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba74:	ldr	x17, [x16, #3480]
  40ba78:	add	x16, x16, #0xd98
  40ba7c:	br	x17

000000000040ba80 <sd_event_exit@plt>:
  40ba80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba84:	ldr	x17, [x16, #3488]
  40ba88:	add	x16, x16, #0xda0
  40ba8c:	br	x17

000000000040ba90 <util_resolve_subsys_kernel@plt>:
  40ba90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40ba94:	ldr	x17, [x16, #3496]
  40ba98:	add	x16, x16, #0xda8
  40ba9c:	br	x17

000000000040baa0 <close_all_fds@plt>:
  40baa0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40baa4:	ldr	x17, [x16, #3504]
  40baa8:	add	x16, x16, #0xdb0
  40baac:	br	x17

000000000040bab0 <device_add_property@plt>:
  40bab0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bab4:	ldr	x17, [x16, #3512]
  40bab8:	add	x16, x16, #0xdb8
  40babc:	br	x17

000000000040bac0 <acl_free@plt>:
  40bac0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bac4:	ldr	x17, [x16, #3520]
  40bac8:	add	x16, x16, #0xdc0
  40bacc:	br	x17

000000000040bad0 <sprintf@plt>:
  40bad0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bad4:	ldr	x17, [x16, #3528]
  40bad8:	add	x16, x16, #0xdc8
  40badc:	br	x17

000000000040bae0 <blkid_probe_enable_superblocks@plt>:
  40bae0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bae4:	ldr	x17, [x16, #3536]
  40bae8:	add	x16, x16, #0xdd0
  40baec:	br	x17

000000000040baf0 <sd_device_unref@plt>:
  40baf0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40baf4:	ldr	x17, [x16, #3544]
  40baf8:	add	x16, x16, #0xdd8
  40bafc:	br	x17

000000000040bb00 <sd_device_get_ifindex@plt>:
  40bb00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb04:	ldr	x17, [x16, #3552]
  40bb08:	add	x16, x16, #0xde0
  40bb0c:	br	x17

000000000040bb10 <internal_hashmap_ensure_allocated@plt>:
  40bb10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb14:	ldr	x17, [x16, #3560]
  40bb18:	add	x16, x16, #0xde8
  40bb1c:	br	x17

000000000040bb20 <cg_kill@plt>:
  40bb20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb24:	ldr	x17, [x16, #3568]
  40bb28:	add	x16, x16, #0xdf0
  40bb2c:	br	x17

000000000040bb30 <safe_atou16_full@plt>:
  40bb30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb34:	ldr	x17, [x16, #3576]
  40bb38:	add	x16, x16, #0xdf8
  40bb3c:	br	x17

000000000040bb40 <readlink_malloc@plt>:
  40bb40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb44:	ldr	x17, [x16, #3584]
  40bb48:	add	x16, x16, #0xe00
  40bb4c:	br	x17

000000000040bb50 <hashmap_remove2@plt>:
  40bb50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb54:	ldr	x17, [x16, #3592]
  40bb58:	add	x16, x16, #0xe08
  40bb5c:	br	x17

000000000040bb60 <xescape_full@plt>:
  40bb60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb64:	ldr	x17, [x16, #3600]
  40bb68:	add	x16, x16, #0xe10
  40bb6c:	br	x17

000000000040bb70 <sd_hwdb_enumerate@plt>:
  40bb70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb74:	ldr	x17, [x16, #3608]
  40bb78:	add	x16, x16, #0xe18
  40bb7c:	br	x17

000000000040bb80 <sd_event_unref@plt>:
  40bb80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb84:	ldr	x17, [x16, #3616]
  40bb88:	add	x16, x16, #0xe20
  40bb8c:	br	x17

000000000040bb90 <mac_selinux_finish@plt>:
  40bb90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bb94:	ldr	x17, [x16, #3624]
  40bb98:	add	x16, x16, #0xe28
  40bb9c:	br	x17

000000000040bba0 <sd_device_ref@plt>:
  40bba0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bba4:	ldr	x17, [x16, #3632]
  40bba8:	add	x16, x16, #0xe30
  40bbac:	br	x17

000000000040bbb0 <log_assert_failed_return_realm@plt>:
  40bbb0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bbb4:	ldr	x17, [x16, #3640]
  40bbb8:	add	x16, x16, #0xe38
  40bbbc:	br	x17

000000000040bbc0 <mkdir_p@plt>:
  40bbc0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bbc4:	ldr	x17, [x16, #3648]
  40bbc8:	add	x16, x16, #0xe40
  40bbcc:	br	x17

000000000040bbd0 <set_oom_score_adjust@plt>:
  40bbd0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bbd4:	ldr	x17, [x16, #3656]
  40bbd8:	add	x16, x16, #0xe48
  40bbdc:	br	x17

000000000040bbe0 <mac_selinux_fix@plt>:
  40bbe0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bbe4:	ldr	x17, [x16, #3664]
  40bbe8:	add	x16, x16, #0xe50
  40bbec:	br	x17

000000000040bbf0 <proc_cmdline_get_bool@plt>:
  40bbf0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bbf4:	ldr	x17, [x16, #3672]
  40bbf8:	add	x16, x16, #0xe58
  40bbfc:	br	x17

000000000040bc00 <printf@plt>:
  40bc00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc04:	ldr	x17, [x16, #3680]
  40bc08:	add	x16, x16, #0xe60
  40bc0c:	br	x17

000000000040bc10 <dirent_is_file@plt>:
  40bc10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc14:	ldr	x17, [x16, #3688]
  40bc18:	add	x16, x16, #0xe68
  40bc1c:	br	x17

000000000040bc20 <strcpy@plt>:
  40bc20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc24:	ldr	x17, [x16, #3696]
  40bc28:	add	x16, x16, #0xe70
  40bc2c:	br	x17

000000000040bc30 <parse_ifindex@plt>:
  40bc30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc34:	ldr	x17, [x16, #3704]
  40bc38:	add	x16, x16, #0xe78
  40bc3c:	br	x17

000000000040bc40 <sd_device_new_from_syspath@plt>:
  40bc40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc44:	ldr	x17, [x16, #3712]
  40bc48:	add	x16, x16, #0xe80
  40bc4c:	br	x17

000000000040bc50 <config_parse_port@plt>:
  40bc50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc54:	ldr	x17, [x16, #3720]
  40bc58:	add	x16, x16, #0xe88
  40bc5c:	br	x17

000000000040bc60 <sd_device_get_sysnum@plt>:
  40bc60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc64:	ldr	x17, [x16, #3728]
  40bc68:	add	x16, x16, #0xe90
  40bc6c:	br	x17

000000000040bc70 <close@plt>:
  40bc70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc74:	ldr	x17, [x16, #3736]
  40bc78:	add	x16, x16, #0xe98
  40bc7c:	br	x17

000000000040bc80 <trivial_compare_func@plt>:
  40bc80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc84:	ldr	x17, [x16, #3744]
  40bc88:	add	x16, x16, #0xea0
  40bc8c:	br	x17

000000000040bc90 <sd_event_add_signal@plt>:
  40bc90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bc94:	ldr	x17, [x16, #3752]
  40bc98:	add	x16, x16, #0xea8
  40bc9c:	br	x17

000000000040bca0 <rtnl_set_link_name@plt>:
  40bca0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bca4:	ldr	x17, [x16, #3760]
  40bca8:	add	x16, x16, #0xeb0
  40bcac:	br	x17

000000000040bcb0 <open64@plt>:
  40bcb0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bcb4:	ldr	x17, [x16, #3768]
  40bcb8:	add	x16, x16, #0xeb8
  40bcbc:	br	x17

000000000040bcc0 <sd_device_new_from_device_id@plt>:
  40bcc0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bcc4:	ldr	x17, [x16, #3776]
  40bcc8:	add	x16, x16, #0xec0
  40bccc:	br	x17

000000000040bcd0 <set_put@plt>:
  40bcd0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bcd4:	ldr	x17, [x16, #3784]
  40bcd8:	add	x16, x16, #0xec8
  40bcdc:	br	x17

000000000040bce0 <config_parse_si_size@plt>:
  40bce0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bce4:	ldr	x17, [x16, #3792]
  40bce8:	add	x16, x16, #0xed0
  40bcec:	br	x17

000000000040bcf0 <sd_device_get_driver@plt>:
  40bcf0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bcf4:	ldr	x17, [x16, #3800]
  40bcf8:	add	x16, x16, #0xed8
  40bcfc:	br	x17

000000000040bd00 <device_get_id_filename@plt>:
  40bd00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd04:	ldr	x17, [x16, #3808]
  40bd08:	add	x16, x16, #0xee0
  40bd0c:	br	x17

000000000040bd10 <strlen@plt>:
  40bd10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd14:	ldr	x17, [x16, #3816]
  40bd18:	add	x16, x16, #0xee8
  40bd1c:	br	x17

000000000040bd20 <null_or_empty_fd@plt>:
  40bd20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd24:	ldr	x17, [x16, #3824]
  40bd28:	add	x16, x16, #0xef0
  40bd2c:	br	x17

000000000040bd30 <mkdir_parents@plt>:
  40bd30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd34:	ldr	x17, [x16, #3832]
  40bd38:	add	x16, x16, #0xef8
  40bd3c:	br	x17

000000000040bd40 <conf_files_list_strv@plt>:
  40bd40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd44:	ldr	x17, [x16, #3840]
  40bd48:	add	x16, x16, #0xf00
  40bd4c:	br	x17

000000000040bd50 <sd_device_get_syspath@plt>:
  40bd50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd54:	ldr	x17, [x16, #3848]
  40bd58:	add	x16, x16, #0xf08
  40bd5c:	br	x17

000000000040bd60 <fopen64@plt>:
  40bd60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd64:	ldr	x17, [x16, #3856]
  40bd68:	add	x16, x16, #0xf10
  40bd6c:	br	x17

000000000040bd70 <blkid_probe_enable_partitions@plt>:
  40bd70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd74:	ldr	x17, [x16, #3864]
  40bd78:	add	x16, x16, #0xf18
  40bd7c:	br	x17

000000000040bd80 <kmod_load_resources@plt>:
  40bd80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd84:	ldr	x17, [x16, #3872]
  40bd88:	add	x16, x16, #0xf20
  40bd8c:	br	x17

000000000040bd90 <log_open@plt>:
  40bd90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bd94:	ldr	x17, [x16, #3880]
  40bd98:	add	x16, x16, #0xf28
  40bd9c:	br	x17

000000000040bda0 <log_oom_internal@plt>:
  40bda0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bda4:	ldr	x17, [x16, #3888]
  40bda8:	add	x16, x16, #0xf30
  40bdac:	br	x17

000000000040bdb0 <must_be_root@plt>:
  40bdb0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bdb4:	ldr	x17, [x16, #3896]
  40bdb8:	add	x16, x16, #0xf38
  40bdbc:	br	x17

000000000040bdc0 <ethtool_set_channels@plt>:
  40bdc0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bdc4:	ldr	x17, [x16, #3904]
  40bdc8:	add	x16, x16, #0xf40
  40bdcc:	br	x17

000000000040bdd0 <dev_setup@plt>:
  40bdd0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bdd4:	ldr	x17, [x16, #3912]
  40bdd8:	add	x16, x16, #0xf48
  40bddc:	br	x17

000000000040bde0 <sd_device_get_devlink_next@plt>:
  40bde0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bde4:	ldr	x17, [x16, #3920]
  40bde8:	add	x16, x16, #0xf50
  40bdec:	br	x17

000000000040bdf0 <sd_event_source_set_description@plt>:
  40bdf0:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40bdf4:	ldr	x17, [x16, #3928]
  40bdf8:	add	x16, x16, #0xf58
  40bdfc:	br	x17

000000000040be00 <memset@plt>:
  40be00:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be04:	ldr	x17, [x16, #3936]
  40be08:	add	x16, x16, #0xf60
  40be0c:	br	x17

000000000040be10 <sd_device_enumerator_allow_uninitialized@plt>:
  40be10:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be14:	ldr	x17, [x16, #3944]
  40be18:	add	x16, x16, #0xf68
  40be1c:	br	x17

000000000040be20 <efi_loader_get_device_part_uuid@plt>:
  40be20:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be24:	ldr	x17, [x16, #3952]
  40be28:	add	x16, x16, #0xf70
  40be2c:	br	x17

000000000040be30 <log_get_max_level_realm@plt>:
  40be30:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be34:	ldr	x17, [x16, #3960]
  40be38:	add	x16, x16, #0xf78
  40be3c:	br	x17

000000000040be40 <sd_hwdb_unref@plt>:
  40be40:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be44:	ldr	x17, [x16, #3968]
  40be48:	add	x16, x16, #0xf80
  40be4c:	br	x17

000000000040be50 <label_fix@plt>:
  40be50:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be54:	ldr	x17, [x16, #3976]
  40be58:	add	x16, x16, #0xf88
  40be5c:	br	x17

000000000040be60 <sd_device_get_parent@plt>:
  40be60:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be64:	ldr	x17, [x16, #3984]
  40be68:	add	x16, x16, #0xf90
  40be6c:	br	x17

000000000040be70 <acl_create_entry@plt>:
  40be70:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be74:	ldr	x17, [x16, #3992]
  40be78:	add	x16, x16, #0xf98
  40be7c:	br	x17

000000000040be80 <device_set_watch_handle@plt>:
  40be80:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be84:	ldr	x17, [x16, #4000]
  40be88:	add	x16, x16, #0xfa0
  40be8c:	br	x17

000000000040be90 <config_parse@plt>:
  40be90:	adrp	x16, 48c000 <_DYNAMIC+0xd8>
  40be94:	ldr	x17, [x16, #4008]
  40be98:	add	x16, x16, #0xfa8
  40be9c:	br	x17

Disassembly of section .text:

000000000040bea0 <_start>:
  40bea0:	mov	x29, #0x0                   	// #0
  40bea4:	mov	x30, #0x0                   	// #0
  40bea8:	mov	x5, x0
  40beac:	ldr	x1, [sp]
  40beb0:	add	x2, sp, #0x8
  40beb4:	mov	x6, sp
  40beb8:	movz	x0, #0x0, lsl #48
  40bebc:	movk	x0, #0x0, lsl #32
  40bec0:	movk	x0, #0x41, lsl #16
  40bec4:	movk	x0, #0x56a4
  40bec8:	movz	x3, #0x0, lsl #48
  40becc:	movk	x3, #0x0, lsl #32
  40bed0:	movk	x3, #0x45, lsl #16
  40bed4:	movk	x3, #0x518
  40bed8:	movz	x4, #0x0, lsl #48
  40bedc:	movk	x4, #0x0, lsl #32
  40bee0:	movk	x4, #0x45, lsl #16
  40bee4:	movk	x4, #0x598
  40bee8:	bl	40a540 <__libc_start_main@plt>
  40beec:	bl	40ae50 <abort@plt>

000000000040bef0 <call_weak_fn>:
  40bef0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  40bef4:	ldr	x0, [x0, #4024]
  40bef8:	cbz	x0, 40bf00 <call_weak_fn+0x10>
  40befc:	b	40a6c0 <__gmon_start__@plt>
  40bf00:	ret

000000000040bf04 <deregister_tm_clones>:
  40bf04:	stp	x29, x30, [sp, #-32]!
  40bf08:	mov	x29, sp
  40bf0c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40bf10:	add	x0, x0, #0x168
  40bf14:	str	x0, [sp, #24]
  40bf18:	ldr	x0, [sp, #24]
  40bf1c:	str	x0, [sp, #24]
  40bf20:	ldr	x1, [sp, #24]
  40bf24:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40bf28:	add	x0, x0, #0x168
  40bf2c:	cmp	x1, x0
  40bf30:	b.eq	40bf6c <deregister_tm_clones+0x68>  // b.none
  40bf34:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40bf38:	add	x0, x0, #0x5e0
  40bf3c:	ldr	x0, [x0]
  40bf40:	str	x0, [sp, #16]
  40bf44:	ldr	x0, [sp, #16]
  40bf48:	str	x0, [sp, #16]
  40bf4c:	ldr	x0, [sp, #16]
  40bf50:	cmp	x0, #0x0
  40bf54:	b.eq	40bf70 <deregister_tm_clones+0x6c>  // b.none
  40bf58:	ldr	x1, [sp, #16]
  40bf5c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40bf60:	add	x0, x0, #0x168
  40bf64:	blr	x1
  40bf68:	b	40bf70 <deregister_tm_clones+0x6c>
  40bf6c:	nop
  40bf70:	ldp	x29, x30, [sp], #32
  40bf74:	ret

000000000040bf78 <register_tm_clones>:
  40bf78:	stp	x29, x30, [sp, #-48]!
  40bf7c:	mov	x29, sp
  40bf80:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40bf84:	add	x0, x0, #0x168
  40bf88:	str	x0, [sp, #40]
  40bf8c:	ldr	x0, [sp, #40]
  40bf90:	str	x0, [sp, #40]
  40bf94:	ldr	x1, [sp, #40]
  40bf98:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40bf9c:	add	x0, x0, #0x168
  40bfa0:	sub	x0, x1, x0
  40bfa4:	asr	x0, x0, #3
  40bfa8:	lsr	x1, x0, #63
  40bfac:	add	x0, x1, x0
  40bfb0:	asr	x0, x0, #1
  40bfb4:	str	x0, [sp, #32]
  40bfb8:	ldr	x0, [sp, #32]
  40bfbc:	cmp	x0, #0x0
  40bfc0:	b.eq	40c000 <register_tm_clones+0x88>  // b.none
  40bfc4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40bfc8:	add	x0, x0, #0x5e8
  40bfcc:	ldr	x0, [x0]
  40bfd0:	str	x0, [sp, #24]
  40bfd4:	ldr	x0, [sp, #24]
  40bfd8:	str	x0, [sp, #24]
  40bfdc:	ldr	x0, [sp, #24]
  40bfe0:	cmp	x0, #0x0
  40bfe4:	b.eq	40c004 <register_tm_clones+0x8c>  // b.none
  40bfe8:	ldr	x2, [sp, #24]
  40bfec:	ldr	x1, [sp, #32]
  40bff0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40bff4:	add	x0, x0, #0x168
  40bff8:	blr	x2
  40bffc:	b	40c004 <register_tm_clones+0x8c>
  40c000:	nop
  40c004:	ldp	x29, x30, [sp], #48
  40c008:	ret

000000000040c00c <__do_global_dtors_aux>:
  40c00c:	stp	x29, x30, [sp, #-16]!
  40c010:	mov	x29, sp
  40c014:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40c018:	add	x0, x0, #0x188
  40c01c:	ldrb	w0, [x0]
  40c020:	and	x0, x0, #0xff
  40c024:	cmp	x0, #0x0
  40c028:	b.ne	40c044 <__do_global_dtors_aux+0x38>  // b.any
  40c02c:	bl	40bf04 <deregister_tm_clones>
  40c030:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40c034:	add	x0, x0, #0x188
  40c038:	mov	w1, #0x1                   	// #1
  40c03c:	strb	w1, [x0]
  40c040:	b	40c048 <__do_global_dtors_aux+0x3c>
  40c044:	nop
  40c048:	ldp	x29, x30, [sp], #16
  40c04c:	ret

000000000040c050 <frame_dummy>:
  40c050:	stp	x29, x30, [sp, #-16]!
  40c054:	mov	x29, sp
  40c058:	bl	40bf78 <register_tm_clones>
  40c05c:	nop
  40c060:	ldp	x29, x30, [sp], #16
  40c064:	ret

000000000040c068 <ALIGN_TO>:
  40c068:	sub	sp, sp, #0x10
  40c06c:	str	x0, [sp, #8]
  40c070:	str	x1, [sp]
  40c074:	ldr	x1, [sp, #8]
  40c078:	ldr	x0, [sp]
  40c07c:	add	x0, x1, x0
  40c080:	sub	x1, x0, #0x1
  40c084:	ldr	x0, [sp]
  40c088:	neg	x0, x0
  40c08c:	and	x0, x1, x0
  40c090:	add	sp, sp, #0x10
  40c094:	ret

000000000040c098 <freep>:
  40c098:	stp	x29, x30, [sp, #-32]!
  40c09c:	mov	x29, sp
  40c0a0:	str	x0, [sp, #24]
  40c0a4:	ldr	x0, [sp, #24]
  40c0a8:	ldr	x0, [x0]
  40c0ac:	bl	40ba20 <free@plt>
  40c0b0:	nop
  40c0b4:	ldp	x29, x30, [sp], #32
  40c0b8:	ret

000000000040c0bc <size_multiply_overflow>:
  40c0bc:	sub	sp, sp, #0x10
  40c0c0:	str	x0, [sp, #8]
  40c0c4:	str	x1, [sp]
  40c0c8:	ldr	x0, [sp]
  40c0cc:	cmp	x0, #0x0
  40c0d0:	cset	w0, ne  // ne = any
  40c0d4:	and	w0, w0, #0xff
  40c0d8:	and	x0, x0, #0xff
  40c0dc:	cmp	x0, #0x0
  40c0e0:	b.eq	40c124 <size_multiply_overflow+0x68>  // b.none
  40c0e4:	mov	x2, #0x0                   	// #0
  40c0e8:	ldr	x1, [sp, #8]
  40c0ec:	ldr	x0, [sp]
  40c0f0:	umulh	x0, x1, x0
  40c0f4:	cmp	x0, #0x0
  40c0f8:	b.eq	40c100 <size_multiply_overflow+0x44>  // b.none
  40c0fc:	mov	x2, #0x1                   	// #1
  40c100:	mov	x0, x2
  40c104:	cmp	x0, #0x0
  40c108:	cset	w0, ne  // ne = any
  40c10c:	and	w0, w0, #0xff
  40c110:	and	x0, x0, #0xff
  40c114:	cmp	x0, #0x0
  40c118:	b.eq	40c124 <size_multiply_overflow+0x68>  // b.none
  40c11c:	mov	w0, #0x1                   	// #1
  40c120:	b	40c128 <size_multiply_overflow+0x6c>
  40c124:	mov	w0, #0x0                   	// #0
  40c128:	and	w0, w0, #0x1
  40c12c:	and	w0, w0, #0xff
  40c130:	add	sp, sp, #0x10
  40c134:	ret

000000000040c138 <malloc_multiply>:
  40c138:	stp	x29, x30, [sp, #-32]!
  40c13c:	mov	x29, sp
  40c140:	str	x0, [sp, #24]
  40c144:	str	x1, [sp, #16]
  40c148:	ldr	x1, [sp, #16]
  40c14c:	ldr	x0, [sp, #24]
  40c150:	bl	40c0bc <size_multiply_overflow>
  40c154:	and	w0, w0, #0xff
  40c158:	cmp	w0, #0x0
  40c15c:	b.eq	40c168 <malloc_multiply+0x30>  // b.none
  40c160:	mov	x0, #0x0                   	// #0
  40c164:	b	40c184 <malloc_multiply+0x4c>
  40c168:	ldr	x1, [sp, #24]
  40c16c:	ldr	x0, [sp, #16]
  40c170:	mul	x0, x1, x0
  40c174:	cmp	x0, #0x0
  40c178:	b.ne	40c180 <malloc_multiply+0x48>  // b.any
  40c17c:	mov	x0, #0x1                   	// #1
  40c180:	bl	40b480 <malloc@plt>
  40c184:	ldp	x29, x30, [sp], #32
  40c188:	ret

000000000040c18c <save_argc_argv>:
  40c18c:	sub	sp, sp, #0x10
  40c190:	str	w0, [sp, #12]
  40c194:	str	x1, [sp]
  40c198:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40c19c:	add	x0, x0, #0x178
  40c1a0:	ldr	w1, [sp, #12]
  40c1a4:	str	w1, [x0]
  40c1a8:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40c1ac:	add	x0, x0, #0x168
  40c1b0:	ldr	x1, [sp]
  40c1b4:	str	x1, [x0]
  40c1b8:	nop
  40c1bc:	add	sp, sp, #0x10
  40c1c0:	ret

000000000040c1c4 <hashmap_free>:
  40c1c4:	stp	x29, x30, [sp, #-32]!
  40c1c8:	mov	x29, sp
  40c1cc:	str	x0, [sp, #24]
  40c1d0:	mov	x2, #0x0                   	// #0
  40c1d4:	mov	x1, #0x0                   	// #0
  40c1d8:	ldr	x0, [sp, #24]
  40c1dc:	bl	40a400 <internal_hashmap_free@plt>
  40c1e0:	ldp	x29, x30, [sp], #32
  40c1e4:	ret

000000000040c1e8 <hashmap_free_free_free>:
  40c1e8:	stp	x29, x30, [sp, #-32]!
  40c1ec:	mov	x29, sp
  40c1f0:	str	x0, [sp, #24]
  40c1f4:	adrp	x0, 40b000 <touch@plt>
  40c1f8:	add	x2, x0, #0xa20
  40c1fc:	adrp	x0, 40b000 <touch@plt>
  40c200:	add	x1, x0, #0xa20
  40c204:	ldr	x0, [sp, #24]
  40c208:	bl	40a400 <internal_hashmap_free@plt>
  40c20c:	ldp	x29, x30, [sp], #32
  40c210:	ret

000000000040c214 <hashmap_get>:
  40c214:	stp	x29, x30, [sp, #-32]!
  40c218:	mov	x29, sp
  40c21c:	str	x0, [sp, #24]
  40c220:	str	x1, [sp, #16]
  40c224:	ldr	x1, [sp, #16]
  40c228:	ldr	x0, [sp, #24]
  40c22c:	bl	40aec0 <internal_hashmap_get@plt>
  40c230:	ldp	x29, x30, [sp], #32
  40c234:	ret

000000000040c238 <hashmap_remove>:
  40c238:	stp	x29, x30, [sp, #-32]!
  40c23c:	mov	x29, sp
  40c240:	str	x0, [sp, #24]
  40c244:	str	x1, [sp, #16]
  40c248:	ldr	x1, [sp, #16]
  40c24c:	ldr	x0, [sp, #24]
  40c250:	bl	40a2a0 <internal_hashmap_remove@plt>
  40c254:	ldp	x29, x30, [sp], #32
  40c258:	ret

000000000040c25c <hashmap_size>:
  40c25c:	stp	x29, x30, [sp, #-32]!
  40c260:	mov	x29, sp
  40c264:	str	x0, [sp, #24]
  40c268:	ldr	x0, [sp, #24]
  40c26c:	bl	40b4d0 <internal_hashmap_size@plt>
  40c270:	ldp	x29, x30, [sp], #32
  40c274:	ret

000000000040c278 <hashmap_isempty>:
  40c278:	stp	x29, x30, [sp, #-32]!
  40c27c:	mov	x29, sp
  40c280:	str	x0, [sp, #24]
  40c284:	ldr	x0, [sp, #24]
  40c288:	bl	40c25c <hashmap_size>
  40c28c:	cmp	w0, #0x0
  40c290:	cset	w0, eq  // eq = none
  40c294:	and	w0, w0, #0xff
  40c298:	ldp	x29, x30, [sp], #32
  40c29c:	ret

000000000040c2a0 <hashmap_iterate>:
  40c2a0:	stp	x29, x30, [sp, #-48]!
  40c2a4:	mov	x29, sp
  40c2a8:	str	x0, [sp, #40]
  40c2ac:	str	x1, [sp, #32]
  40c2b0:	str	x2, [sp, #24]
  40c2b4:	str	x3, [sp, #16]
  40c2b8:	ldr	x3, [sp, #16]
  40c2bc:	ldr	x2, [sp, #24]
  40c2c0:	ldr	x1, [sp, #32]
  40c2c4:	ldr	x0, [sp, #40]
  40c2c8:	bl	40b7b0 <internal_hashmap_iterate@plt>
  40c2cc:	and	w0, w0, #0xff
  40c2d0:	ldp	x29, x30, [sp], #48
  40c2d4:	ret

000000000040c2d8 <sd_device_unrefp>:
  40c2d8:	stp	x29, x30, [sp, #-32]!
  40c2dc:	mov	x29, sp
  40c2e0:	str	x0, [sp, #24]
  40c2e4:	ldr	x0, [sp, #24]
  40c2e8:	ldr	x0, [x0]
  40c2ec:	cmp	x0, #0x0
  40c2f0:	b.eq	40c300 <sd_device_unrefp+0x28>  // b.none
  40c2f4:	ldr	x0, [sp, #24]
  40c2f8:	ldr	x0, [x0]
  40c2fc:	bl	40baf0 <sd_device_unref@plt>
  40c300:	nop
  40c304:	ldp	x29, x30, [sp], #32
  40c308:	ret

000000000040c30c <sd_device_enumerator_unrefp>:
  40c30c:	stp	x29, x30, [sp, #-32]!
  40c310:	mov	x29, sp
  40c314:	str	x0, [sp, #24]
  40c318:	ldr	x0, [sp, #24]
  40c31c:	ldr	x0, [x0]
  40c320:	cmp	x0, #0x0
  40c324:	b.eq	40c334 <sd_device_enumerator_unrefp+0x28>  // b.none
  40c328:	ldr	x0, [sp, #24]
  40c32c:	ldr	x0, [x0]
  40c330:	bl	40a960 <sd_device_enumerator_unref@plt>
  40c334:	nop
  40c338:	ldp	x29, x30, [sp], #32
  40c33c:	ret

000000000040c340 <sd_device_monitor_unrefp>:
  40c340:	stp	x29, x30, [sp, #-32]!
  40c344:	mov	x29, sp
  40c348:	str	x0, [sp, #24]
  40c34c:	ldr	x0, [sp, #24]
  40c350:	ldr	x0, [x0]
  40c354:	cmp	x0, #0x0
  40c358:	b.eq	40c368 <sd_device_monitor_unrefp+0x28>  // b.none
  40c35c:	ldr	x0, [sp, #24]
  40c360:	ldr	x0, [x0]
  40c364:	bl	40b3c0 <sd_device_monitor_unref@plt>
  40c368:	nop
  40c36c:	ldp	x29, x30, [sp], #32
  40c370:	ret

000000000040c374 <closep>:
  40c374:	stp	x29, x30, [sp, #-32]!
  40c378:	mov	x29, sp
  40c37c:	str	x0, [sp, #24]
  40c380:	ldr	x0, [sp, #24]
  40c384:	ldr	w0, [x0]
  40c388:	bl	40aad0 <safe_close@plt>
  40c38c:	nop
  40c390:	ldp	x29, x30, [sp], #32
  40c394:	ret

000000000040c398 <make_null_stdio>:
  40c398:	stp	x29, x30, [sp, #-16]!
  40c39c:	mov	x29, sp
  40c3a0:	mov	w2, #0xffffffff            	// #-1
  40c3a4:	mov	w1, #0xffffffff            	// #-1
  40c3a8:	mov	w0, #0xffffffff            	// #-1
  40c3ac:	bl	40a340 <rearrange_stdio@plt>
  40c3b0:	ldp	x29, x30, [sp], #16
  40c3b4:	ret

000000000040c3b8 <write_string_file>:
  40c3b8:	stp	x29, x30, [sp, #-48]!
  40c3bc:	mov	x29, sp
  40c3c0:	str	x0, [sp, #40]
  40c3c4:	str	x1, [sp, #32]
  40c3c8:	str	w2, [sp, #28]
  40c3cc:	mov	x3, #0x0                   	// #0
  40c3d0:	ldr	w2, [sp, #28]
  40c3d4:	ldr	x1, [sp, #32]
  40c3d8:	ldr	x0, [sp, #40]
  40c3dc:	bl	40a720 <write_string_file_ts@plt>
  40c3e0:	ldp	x29, x30, [sp], #48
  40c3e4:	ret

000000000040c3e8 <streq_ptr>:
  40c3e8:	stp	x29, x30, [sp, #-32]!
  40c3ec:	mov	x29, sp
  40c3f0:	str	x0, [sp, #24]
  40c3f4:	str	x1, [sp, #16]
  40c3f8:	ldr	x1, [sp, #16]
  40c3fc:	ldr	x0, [sp, #24]
  40c400:	bl	40a4b0 <strcmp_ptr@plt>
  40c404:	cmp	w0, #0x0
  40c408:	cset	w0, eq  // eq = none
  40c40c:	and	w0, w0, #0xff
  40c410:	ldp	x29, x30, [sp], #32
  40c414:	ret

000000000040c418 <isempty>:
  40c418:	sub	sp, sp, #0x10
  40c41c:	str	x0, [sp, #8]
  40c420:	ldr	x0, [sp, #8]
  40c424:	cmp	x0, #0x0
  40c428:	b.eq	40c43c <isempty+0x24>  // b.none
  40c42c:	ldr	x0, [sp, #8]
  40c430:	ldrb	w0, [x0]
  40c434:	cmp	w0, #0x0
  40c438:	b.ne	40c444 <isempty+0x2c>  // b.any
  40c43c:	mov	w0, #0x1                   	// #1
  40c440:	b	40c448 <isempty+0x30>
  40c444:	mov	w0, #0x0                   	// #0
  40c448:	and	w0, w0, #0x1
  40c44c:	and	w0, w0, #0xff
  40c450:	add	sp, sp, #0x10
  40c454:	ret

000000000040c458 <startswith>:
  40c458:	stp	x29, x30, [sp, #-48]!
  40c45c:	mov	x29, sp
  40c460:	str	x0, [sp, #24]
  40c464:	str	x1, [sp, #16]
  40c468:	ldr	x0, [sp, #16]
  40c46c:	bl	40bd10 <strlen@plt>
  40c470:	str	x0, [sp, #40]
  40c474:	ldr	x2, [sp, #40]
  40c478:	ldr	x1, [sp, #16]
  40c47c:	ldr	x0, [sp, #24]
  40c480:	bl	40ae00 <strncmp@plt>
  40c484:	cmp	w0, #0x0
  40c488:	b.ne	40c49c <startswith+0x44>  // b.any
  40c48c:	ldr	x1, [sp, #24]
  40c490:	ldr	x0, [sp, #40]
  40c494:	add	x0, x1, x0
  40c498:	b	40c4a0 <startswith+0x48>
  40c49c:	mov	x0, #0x0                   	// #0
  40c4a0:	ldp	x29, x30, [sp], #48
  40c4a4:	ret

000000000040c4a8 <static_destruct>:
  40c4a8:	stp	x29, x30, [sp, #-32]!
  40c4ac:	mov	x29, sp
  40c4b0:	adrp	x0, 451000 <_fini+0xa30>
  40c4b4:	add	x0, x0, #0xfc8
  40c4b8:	ldr	x0, [x0]
  40c4bc:	cmp	x0, #0x0
  40c4c0:	b.eq	40c524 <static_destruct+0x7c>  // b.none
  40c4c4:	adrp	x0, 451000 <_fini+0xa30>
  40c4c8:	add	x0, x0, #0xfc8
  40c4cc:	ldr	x0, [x0]
  40c4d0:	mov	x1, #0x8                   	// #8
  40c4d4:	bl	40c068 <ALIGN_TO>
  40c4d8:	str	x0, [sp, #24]
  40c4dc:	b	40c508 <static_destruct+0x60>
  40c4e0:	ldr	x0, [sp, #24]
  40c4e4:	ldr	x1, [x0, #8]
  40c4e8:	ldr	x0, [sp, #24]
  40c4ec:	ldr	x0, [x0]
  40c4f0:	blr	x1
  40c4f4:	ldr	x0, [sp, #24]
  40c4f8:	add	x0, x0, #0x10
  40c4fc:	mov	x1, #0x8                   	// #8
  40c500:	bl	40c068 <ALIGN_TO>
  40c504:	str	x0, [sp, #24]
  40c508:	ldr	x1, [sp, #24]
  40c50c:	adrp	x0, 451000 <_fini+0xa30>
  40c510:	add	x0, x0, #0xfd0
  40c514:	ldr	x0, [x0]
  40c518:	cmp	x1, x0
  40c51c:	b.cc	40c4e0 <static_destruct+0x38>  // b.lo, b.ul, b.last
  40c520:	b	40c528 <static_destruct+0x80>
  40c524:	nop
  40c528:	ldp	x29, x30, [sp], #32
  40c52c:	ret

000000000040c530 <setsockopt_int>:
  40c530:	stp	x29, x30, [sp, #-32]!
  40c534:	mov	x29, sp
  40c538:	str	w0, [sp, #28]
  40c53c:	str	w1, [sp, #24]
  40c540:	str	w2, [sp, #20]
  40c544:	str	w3, [sp, #16]
  40c548:	add	x0, sp, #0x10
  40c54c:	mov	w4, #0x4                   	// #4
  40c550:	mov	x3, x0
  40c554:	ldr	w2, [sp, #20]
  40c558:	ldr	w1, [sp, #24]
  40c55c:	ldr	w0, [sp, #28]
  40c560:	bl	40b810 <setsockopt@plt>
  40c564:	cmp	w0, #0x0
  40c568:	b.ge	40c57c <setsockopt_int+0x4c>  // b.tcont
  40c56c:	bl	40b040 <__errno_location@plt>
  40c570:	ldr	w0, [x0]
  40c574:	neg	w0, w0
  40c578:	b	40c580 <setsockopt_int+0x50>
  40c57c:	mov	w0, #0x0                   	// #0
  40c580:	ldp	x29, x30, [sp], #32
  40c584:	ret

000000000040c588 <safe_atou>:
  40c588:	stp	x29, x30, [sp, #-32]!
  40c58c:	mov	x29, sp
  40c590:	str	x0, [sp, #24]
  40c594:	str	x1, [sp, #16]
  40c598:	ldr	x2, [sp, #16]
  40c59c:	mov	w1, #0x0                   	// #0
  40c5a0:	ldr	x0, [sp, #24]
  40c5a4:	bl	40b4a0 <safe_atou_full@plt>
  40c5a8:	ldp	x29, x30, [sp], #32
  40c5ac:	ret

000000000040c5b0 <proc_cmdline_value_missing>:
  40c5b0:	stp	x29, x30, [sp, #-48]!
  40c5b4:	mov	x29, sp
  40c5b8:	str	x0, [sp, #24]
  40c5bc:	str	x1, [sp, #16]
  40c5c0:	ldr	x0, [sp, #16]
  40c5c4:	cmp	x0, #0x0
  40c5c8:	b.ne	40c650 <proc_cmdline_value_missing+0xa0>  // b.any
  40c5cc:	mov	w0, #0x4                   	// #4
  40c5d0:	str	w0, [sp, #36]
  40c5d4:	str	wzr, [sp, #40]
  40c5d8:	mov	w0, #0x1                   	// #1
  40c5dc:	str	w0, [sp, #44]
  40c5e0:	ldr	w0, [sp, #44]
  40c5e4:	bl	40be30 <log_get_max_level_realm@plt>
  40c5e8:	mov	w1, w0
  40c5ec:	ldr	w0, [sp, #36]
  40c5f0:	and	w0, w0, #0x7
  40c5f4:	cmp	w1, w0
  40c5f8:	b.lt	40c640 <proc_cmdline_value_missing+0x90>  // b.tstop
  40c5fc:	ldr	w0, [sp, #44]
  40c600:	lsl	w1, w0, #10
  40c604:	ldr	w0, [sp, #36]
  40c608:	orr	w7, w1, w0
  40c60c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c610:	add	x1, x0, #0x60b
  40c614:	ldr	x6, [sp, #24]
  40c618:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c61c:	add	x5, x0, #0x628
  40c620:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40c624:	add	x4, x0, #0x3e0
  40c628:	mov	w3, #0x21                  	// #33
  40c62c:	mov	x2, x1
  40c630:	ldr	w1, [sp, #40]
  40c634:	mov	w0, w7
  40c638:	bl	40b4f0 <log_internal_realm@plt>
  40c63c:	b	40c648 <proc_cmdline_value_missing+0x98>
  40c640:	ldr	w0, [sp, #40]
  40c644:	cmp	w0, #0x0
  40c648:	mov	w0, #0x1                   	// #1
  40c64c:	b	40c654 <proc_cmdline_value_missing+0xa4>
  40c650:	mov	w0, #0x0                   	// #0
  40c654:	ldp	x29, x30, [sp], #48
  40c658:	ret

000000000040c65c <PID_TO_PTR>:
  40c65c:	sub	sp, sp, #0x10
  40c660:	str	w0, [sp, #12]
  40c664:	ldrsw	x0, [sp, #12]
  40c668:	add	sp, sp, #0x10
  40c66c:	ret

000000000040c670 <safe_fork>:
  40c670:	stp	x29, x30, [sp, #-48]!
  40c674:	mov	x29, sp
  40c678:	str	x0, [sp, #40]
  40c67c:	str	w1, [sp, #36]
  40c680:	str	x2, [sp, #24]
  40c684:	ldr	x4, [sp, #24]
  40c688:	ldr	w3, [sp, #36]
  40c68c:	mov	x2, #0x0                   	// #0
  40c690:	mov	x1, #0x0                   	// #0
  40c694:	ldr	x0, [sp, #40]
  40c698:	bl	40b830 <safe_fork_full@plt>
  40c69c:	ldp	x29, x30, [sp], #48
  40c6a0:	ret

000000000040c6a4 <udev_event_freep>:
  40c6a4:	stp	x29, x30, [sp, #-32]!
  40c6a8:	mov	x29, sp
  40c6ac:	str	x0, [sp, #24]
  40c6b0:	ldr	x0, [sp, #24]
  40c6b4:	ldr	x0, [x0]
  40c6b8:	cmp	x0, #0x0
  40c6bc:	b.eq	40c6cc <udev_event_freep+0x28>  // b.none
  40c6c0:	ldr	x0, [sp, #24]
  40c6c4:	ldr	x0, [x0]
  40c6c8:	bl	417388 <udev_event_free>
  40c6cc:	nop
  40c6d0:	ldp	x29, x30, [sp], #32
  40c6d4:	ret

000000000040c6d8 <udev_warn_timeout>:
  40c6d8:	sub	sp, sp, #0x20
  40c6dc:	str	x0, [sp, #8]
  40c6e0:	ldr	x0, [sp, #8]
  40c6e4:	str	x0, [sp, #24]
  40c6e8:	mov	w0, #0x3                   	// #3
  40c6ec:	str	w0, [sp, #20]
  40c6f0:	ldrsw	x0, [sp, #20]
  40c6f4:	ldr	x1, [sp, #24]
  40c6f8:	udiv	x2, x1, x0
  40c6fc:	ldrsw	x1, [sp, #20]
  40c700:	ldr	x0, [sp, #24]
  40c704:	udiv	x3, x0, x1
  40c708:	mul	x1, x3, x1
  40c70c:	sub	x0, x0, x1
  40c710:	cmp	x0, #0x0
  40c714:	cset	w0, ne  // ne = any
  40c718:	and	w0, w0, #0xff
  40c71c:	and	x0, x0, #0xff
  40c720:	add	x0, x2, x0
  40c724:	add	sp, sp, #0x20
  40c728:	ret

000000000040c72c <event_free>:
  40c72c:	stp	x29, x30, [sp, #-80]!
  40c730:	mov	x29, sp
  40c734:	str	x19, [sp, #16]
  40c738:	str	x0, [sp, #40]
  40c73c:	ldr	x0, [sp, #40]
  40c740:	cmp	x0, #0x0
  40c744:	b.eq	40c9c4 <event_free+0x298>  // b.none
  40c748:	ldr	x0, [sp, #40]
  40c74c:	ldr	x0, [x0]
  40c750:	cmp	x0, #0x0
  40c754:	cset	w0, eq  // eq = none
  40c758:	and	w0, w0, #0xff
  40c75c:	and	x0, x0, #0xff
  40c760:	cmp	x0, #0x0
  40c764:	b.eq	40c790 <event_free+0x64>  // b.none
  40c768:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c76c:	add	x1, x0, #0x66b
  40c770:	adrp	x0, 451000 <_fini+0xa30>
  40c774:	add	x4, x0, #0xff8
  40c778:	mov	w3, #0x98                  	// #152
  40c77c:	mov	x2, x1
  40c780:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c784:	add	x1, x0, #0x680
  40c788:	mov	w0, #0x1                   	// #1
  40c78c:	bl	40abb0 <log_assert_failed_realm@plt>
  40c790:	ldr	x0, [sp, #40]
  40c794:	ldr	x0, [x0]
  40c798:	add	x0, x0, #0x10
  40c79c:	str	x0, [sp, #64]
  40c7a0:	ldr	x0, [sp, #40]
  40c7a4:	str	x0, [sp, #72]
  40c7a8:	ldr	x0, [sp, #72]
  40c7ac:	cmp	x0, #0x0
  40c7b0:	cset	w0, eq  // eq = none
  40c7b4:	and	w0, w0, #0xff
  40c7b8:	and	x0, x0, #0xff
  40c7bc:	cmp	x0, #0x0
  40c7c0:	b.eq	40c7ec <event_free+0xc0>  // b.none
  40c7c4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c7c8:	add	x1, x0, #0x66b
  40c7cc:	adrp	x0, 451000 <_fini+0xa30>
  40c7d0:	add	x4, x0, #0xff8
  40c7d4:	mov	w3, #0x9a                  	// #154
  40c7d8:	mov	x2, x1
  40c7dc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c7e0:	add	x1, x0, #0x690
  40c7e4:	mov	w0, #0x1                   	// #1
  40c7e8:	bl	40abb0 <log_assert_failed_realm@plt>
  40c7ec:	ldr	x0, [sp, #72]
  40c7f0:	ldr	x0, [x0, #72]
  40c7f4:	cmp	x0, #0x0
  40c7f8:	b.eq	40c810 <event_free+0xe4>  // b.none
  40c7fc:	ldr	x0, [sp, #72]
  40c800:	ldr	x0, [x0, #72]
  40c804:	ldr	x1, [sp, #72]
  40c808:	ldr	x1, [x1, #80]
  40c80c:	str	x1, [x0, #80]
  40c810:	ldr	x0, [sp, #72]
  40c814:	ldr	x0, [x0, #80]
  40c818:	cmp	x0, #0x0
  40c81c:	b.eq	40c838 <event_free+0x10c>  // b.none
  40c820:	ldr	x0, [sp, #72]
  40c824:	ldr	x0, [x0, #80]
  40c828:	ldr	x1, [sp, #72]
  40c82c:	ldr	x1, [x1, #72]
  40c830:	str	x1, [x0, #72]
  40c834:	b	40c894 <event_free+0x168>
  40c838:	ldr	x0, [sp, #64]
  40c83c:	ldr	x0, [x0]
  40c840:	ldr	x1, [sp, #72]
  40c844:	cmp	x1, x0
  40c848:	cset	w0, ne  // ne = any
  40c84c:	and	w0, w0, #0xff
  40c850:	and	x0, x0, #0xff
  40c854:	cmp	x0, #0x0
  40c858:	b.eq	40c884 <event_free+0x158>  // b.none
  40c85c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c860:	add	x1, x0, #0x66b
  40c864:	adrp	x0, 451000 <_fini+0xa30>
  40c868:	add	x4, x0, #0xff8
  40c86c:	mov	w3, #0x9a                  	// #154
  40c870:	mov	x2, x1
  40c874:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c878:	add	x1, x0, #0x698
  40c87c:	mov	w0, #0x1                   	// #1
  40c880:	bl	40abb0 <log_assert_failed_realm@plt>
  40c884:	ldr	x0, [sp, #72]
  40c888:	ldr	x1, [x0, #72]
  40c88c:	ldr	x0, [sp, #64]
  40c890:	str	x1, [x0]
  40c894:	ldr	x0, [sp, #72]
  40c898:	str	xzr, [x0, #80]
  40c89c:	ldr	x0, [sp, #72]
  40c8a0:	ldr	x1, [x0, #80]
  40c8a4:	ldr	x0, [sp, #72]
  40c8a8:	str	x1, [x0, #72]
  40c8ac:	ldr	x0, [sp, #40]
  40c8b0:	ldr	x0, [x0, #24]
  40c8b4:	bl	40baf0 <sd_device_unref@plt>
  40c8b8:	ldr	x0, [sp, #40]
  40c8bc:	ldr	x0, [x0, #32]
  40c8c0:	bl	40baf0 <sd_device_unref@plt>
  40c8c4:	ldr	x0, [sp, #40]
  40c8c8:	ldr	x0, [x0, #56]
  40c8cc:	bl	40a9f0 <sd_event_source_unref@plt>
  40c8d0:	ldr	x0, [sp, #40]
  40c8d4:	ldr	x0, [x0, #64]
  40c8d8:	bl	40a9f0 <sd_event_source_unref@plt>
  40c8dc:	ldr	x0, [sp, #40]
  40c8e0:	ldr	x0, [x0, #8]
  40c8e4:	cmp	x0, #0x0
  40c8e8:	b.eq	40c8f8 <event_free+0x1cc>  // b.none
  40c8ec:	ldr	x0, [sp, #40]
  40c8f0:	ldr	x0, [x0, #8]
  40c8f4:	str	xzr, [x0, #32]
  40c8f8:	ldr	x0, [sp, #40]
  40c8fc:	ldr	x0, [x0]
  40c900:	ldr	x0, [x0, #16]
  40c904:	cmp	x0, #0x0
  40c908:	b.ne	40c9b8 <event_free+0x28c>  // b.any
  40c90c:	ldr	x0, [sp, #40]
  40c910:	ldr	x0, [x0]
  40c914:	ldr	w19, [x0, #32]
  40c918:	bl	40a8e0 <getpid_cached@plt>
  40c91c:	cmp	w19, w0
  40c920:	b.ne	40c9b8 <event_free+0x28c>  // b.any
  40c924:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c928:	add	x0, x0, #0x6a8
  40c92c:	bl	40a3f0 <unlink@plt>
  40c930:	cmp	w0, #0x0
  40c934:	b.ge	40c9b8 <event_free+0x28c>  // b.tcont
  40c938:	mov	w0, #0x4                   	// #4
  40c93c:	str	w0, [sp, #52]
  40c940:	bl	40b040 <__errno_location@plt>
  40c944:	ldr	w0, [x0]
  40c948:	str	w0, [sp, #56]
  40c94c:	mov	w0, #0x1                   	// #1
  40c950:	str	w0, [sp, #60]
  40c954:	ldr	w0, [sp, #60]
  40c958:	bl	40be30 <log_get_max_level_realm@plt>
  40c95c:	mov	w1, w0
  40c960:	ldr	w0, [sp, #52]
  40c964:	and	w0, w0, #0x7
  40c968:	cmp	w1, w0
  40c96c:	b.lt	40c9b0 <event_free+0x284>  // b.tstop
  40c970:	ldr	w0, [sp, #60]
  40c974:	lsl	w1, w0, #10
  40c978:	ldr	w0, [sp, #52]
  40c97c:	orr	w6, w1, w0
  40c980:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c984:	add	x1, x0, #0x66b
  40c988:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40c98c:	add	x5, x0, #0x6b8
  40c990:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40c994:	add	x4, x0, #0x8
  40c998:	mov	w3, #0xa8                  	// #168
  40c99c:	mov	x2, x1
  40c9a0:	ldr	w1, [sp, #56]
  40c9a4:	mov	w0, w6
  40c9a8:	bl	40b4f0 <log_internal_realm@plt>
  40c9ac:	b	40c9b8 <event_free+0x28c>
  40c9b0:	ldr	w0, [sp, #56]
  40c9b4:	cmp	w0, #0x0
  40c9b8:	ldr	x0, [sp, #40]
  40c9bc:	bl	40ba20 <free@plt>
  40c9c0:	b	40c9c8 <event_free+0x29c>
  40c9c4:	nop
  40c9c8:	ldr	x19, [sp, #16]
  40c9cc:	ldp	x29, x30, [sp], #80
  40c9d0:	ret

000000000040c9d4 <worker_free>:
  40c9d4:	stp	x29, x30, [sp, #-48]!
  40c9d8:	mov	x29, sp
  40c9dc:	str	x19, [sp, #16]
  40c9e0:	str	x0, [sp, #40]
  40c9e4:	ldr	x0, [sp, #40]
  40c9e8:	cmp	x0, #0x0
  40c9ec:	b.eq	40ca80 <worker_free+0xac>  // b.none
  40c9f0:	ldr	x0, [sp, #40]
  40c9f4:	ldr	x0, [x0]
  40c9f8:	cmp	x0, #0x0
  40c9fc:	cset	w0, eq  // eq = none
  40ca00:	and	w0, w0, #0xff
  40ca04:	and	x0, x0, #0xff
  40ca08:	cmp	x0, #0x0
  40ca0c:	b.eq	40ca38 <worker_free+0x64>  // b.none
  40ca10:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ca14:	add	x1, x0, #0x66b
  40ca18:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40ca1c:	add	x4, x0, #0x18
  40ca20:	mov	w3, #0xb1                  	// #177
  40ca24:	mov	x2, x1
  40ca28:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ca2c:	add	x1, x0, #0x6e0
  40ca30:	mov	w0, #0x1                   	// #1
  40ca34:	bl	40abb0 <log_assert_failed_realm@plt>
  40ca38:	ldr	x0, [sp, #40]
  40ca3c:	ldr	x0, [x0]
  40ca40:	ldr	x19, [x0, #8]
  40ca44:	ldr	x0, [sp, #40]
  40ca48:	ldr	w0, [x0, #8]
  40ca4c:	bl	40c65c <PID_TO_PTR>
  40ca50:	mov	x1, x0
  40ca54:	mov	x0, x19
  40ca58:	bl	40c238 <hashmap_remove>
  40ca5c:	ldr	x0, [sp, #40]
  40ca60:	ldr	x0, [x0, #16]
  40ca64:	bl	40b3c0 <sd_device_monitor_unref@plt>
  40ca68:	ldr	x0, [sp, #40]
  40ca6c:	ldr	x0, [x0, #32]
  40ca70:	bl	40c72c <event_free>
  40ca74:	ldr	x0, [sp, #40]
  40ca78:	bl	40ba20 <free@plt>
  40ca7c:	b	40ca84 <worker_free+0xb0>
  40ca80:	nop
  40ca84:	ldr	x19, [sp, #16]
  40ca88:	ldp	x29, x30, [sp], #48
  40ca8c:	ret

000000000040ca90 <worker_freep>:
  40ca90:	stp	x29, x30, [sp, #-32]!
  40ca94:	mov	x29, sp
  40ca98:	str	x0, [sp, #24]
  40ca9c:	ldr	x0, [sp, #24]
  40caa0:	ldr	x0, [x0]
  40caa4:	cmp	x0, #0x0
  40caa8:	b.eq	40cab8 <worker_freep+0x28>  // b.none
  40caac:	ldr	x0, [sp, #24]
  40cab0:	ldr	x0, [x0]
  40cab4:	bl	40c9d4 <worker_free>
  40cab8:	nop
  40cabc:	ldp	x29, x30, [sp], #32
  40cac0:	ret

000000000040cac4 <__unique_prefix_static_free_wrapper4>:
  40cac4:	stp	x29, x30, [sp, #-48]!
  40cac8:	mov	x29, sp
  40cacc:	str	x0, [sp, #24]
  40cad0:	ldr	x0, [sp, #24]
  40cad4:	str	x0, [sp, #40]
  40cad8:	ldr	x0, [sp, #40]
  40cadc:	bl	40c9d4 <worker_free>
  40cae0:	nop
  40cae4:	ldp	x29, x30, [sp], #48
  40cae8:	ret

000000000040caec <worker_new>:
  40caec:	stp	x29, x30, [sp, #-128]!
  40caf0:	mov	x29, sp
  40caf4:	str	x19, [sp, #16]
  40caf8:	str	x0, [sp, #56]
  40cafc:	str	x1, [sp, #48]
  40cb00:	str	x2, [sp, #40]
  40cb04:	str	w3, [sp, #36]
  40cb08:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40cb0c:	add	x0, x0, #0x7a8
  40cb10:	ldr	x1, [x0]
  40cb14:	str	x1, [sp, #120]
  40cb18:	mov	x1, #0x0                   	// #0
  40cb1c:	str	xzr, [sp, #80]
  40cb20:	ldr	x0, [sp, #56]
  40cb24:	cmp	x0, #0x0
  40cb28:	cset	w0, eq  // eq = none
  40cb2c:	and	w0, w0, #0xff
  40cb30:	and	x0, x0, #0xff
  40cb34:	cmp	x0, #0x0
  40cb38:	b.eq	40cb64 <worker_new+0x78>  // b.none
  40cb3c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cb40:	add	x1, x0, #0x66b
  40cb44:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40cb48:	add	x4, x0, #0x28
  40cb4c:	mov	w3, #0xc1                  	// #193
  40cb50:	mov	x2, x1
  40cb54:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cb58:	add	x1, x0, #0x6f0
  40cb5c:	mov	w0, #0x1                   	// #1
  40cb60:	bl	40abb0 <log_assert_failed_realm@plt>
  40cb64:	ldr	x0, [sp, #48]
  40cb68:	cmp	x0, #0x0
  40cb6c:	cset	w0, eq  // eq = none
  40cb70:	and	w0, w0, #0xff
  40cb74:	and	x0, x0, #0xff
  40cb78:	cmp	x0, #0x0
  40cb7c:	b.eq	40cba8 <worker_new+0xbc>  // b.none
  40cb80:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cb84:	add	x1, x0, #0x66b
  40cb88:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40cb8c:	add	x4, x0, #0x28
  40cb90:	mov	w3, #0xc2                  	// #194
  40cb94:	mov	x2, x1
  40cb98:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cb9c:	add	x1, x0, #0x6f8
  40cba0:	mov	w0, #0x1                   	// #1
  40cba4:	bl	40abb0 <log_assert_failed_realm@plt>
  40cba8:	ldr	x0, [sp, #40]
  40cbac:	cmp	x0, #0x0
  40cbb0:	cset	w0, eq  // eq = none
  40cbb4:	and	w0, w0, #0xff
  40cbb8:	and	x0, x0, #0xff
  40cbbc:	cmp	x0, #0x0
  40cbc0:	b.eq	40cbec <worker_new+0x100>  // b.none
  40cbc4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cbc8:	add	x1, x0, #0x66b
  40cbcc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40cbd0:	add	x4, x0, #0x28
  40cbd4:	mov	w3, #0xc3                  	// #195
  40cbd8:	mov	x2, x1
  40cbdc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cbe0:	add	x1, x0, #0x700
  40cbe4:	mov	w0, #0x1                   	// #1
  40cbe8:	bl	40abb0 <log_assert_failed_realm@plt>
  40cbec:	ldr	w0, [sp, #36]
  40cbf0:	cmp	w0, #0x1
  40cbf4:	cset	w0, le
  40cbf8:	and	w0, w0, #0xff
  40cbfc:	and	x0, x0, #0xff
  40cc00:	cmp	x0, #0x0
  40cc04:	b.eq	40cc30 <worker_new+0x144>  // b.none
  40cc08:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cc0c:	add	x1, x0, #0x66b
  40cc10:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40cc14:	add	x4, x0, #0x28
  40cc18:	mov	w3, #0xc4                  	// #196
  40cc1c:	mov	x2, x1
  40cc20:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cc24:	add	x1, x0, #0x710
  40cc28:	mov	w0, #0x1                   	// #1
  40cc2c:	bl	40abb0 <log_assert_failed_realm@plt>
  40cc30:	ldr	x0, [sp, #40]
  40cc34:	bl	40ae90 <device_monitor_disconnect@plt>
  40cc38:	mov	x1, #0x1                   	// #1
  40cc3c:	mov	x0, #0x28                  	// #40
  40cc40:	bl	40c138 <malloc_multiply>
  40cc44:	str	x0, [sp, #80]
  40cc48:	ldr	x0, [sp, #80]
  40cc4c:	cmp	x0, #0x0
  40cc50:	b.ne	40cc5c <worker_new+0x170>  // b.any
  40cc54:	mov	w19, #0xfffffff4            	// #-12
  40cc58:	b	40cd14 <worker_new+0x228>
  40cc5c:	ldr	x19, [sp, #80]
  40cc60:	ldr	x0, [sp, #40]
  40cc64:	bl	40ba60 <sd_device_monitor_ref@plt>
  40cc68:	mov	x1, x0
  40cc6c:	stp	xzr, xzr, [x19]
  40cc70:	stp	xzr, xzr, [x19, #16]
  40cc74:	str	xzr, [x19, #32]
  40cc78:	ldr	x0, [sp, #48]
  40cc7c:	str	x0, [x19]
  40cc80:	ldr	w0, [sp, #36]
  40cc84:	str	w0, [x19, #8]
  40cc88:	str	x1, [x19, #16]
  40cc8c:	ldr	x0, [sp, #48]
  40cc90:	add	x2, x0, #0x8
  40cc94:	adrp	x0, 451000 <_fini+0xa30>
  40cc98:	add	x1, x0, #0xfd8
  40cc9c:	mov	x0, x2
  40cca0:	bl	40bb10 <internal_hashmap_ensure_allocated@plt>
  40cca4:	str	w0, [sp, #68]
  40cca8:	ldr	w0, [sp, #68]
  40ccac:	cmp	w0, #0x0
  40ccb0:	b.ge	40ccbc <worker_new+0x1d0>  // b.tcont
  40ccb4:	ldr	w19, [sp, #68]
  40ccb8:	b	40cd14 <worker_new+0x228>
  40ccbc:	ldr	x0, [sp, #48]
  40ccc0:	ldr	x19, [x0, #8]
  40ccc4:	ldr	w0, [sp, #36]
  40ccc8:	bl	40c65c <PID_TO_PTR>
  40cccc:	mov	x1, x0
  40ccd0:	ldr	x0, [sp, #80]
  40ccd4:	mov	x2, x0
  40ccd8:	mov	x0, x19
  40ccdc:	bl	40b570 <hashmap_put@plt>
  40cce0:	str	w0, [sp, #68]
  40cce4:	ldr	w0, [sp, #68]
  40cce8:	cmp	w0, #0x0
  40ccec:	b.ge	40ccf8 <worker_new+0x20c>  // b.tcont
  40ccf0:	ldr	w19, [sp, #68]
  40ccf4:	b	40cd14 <worker_new+0x228>
  40ccf8:	ldr	x0, [sp, #80]
  40ccfc:	str	x0, [sp, #72]
  40cd00:	str	xzr, [sp, #80]
  40cd04:	ldr	x1, [sp, #72]
  40cd08:	ldr	x0, [sp, #56]
  40cd0c:	str	x1, [x0]
  40cd10:	mov	w19, #0x0                   	// #0
  40cd14:	add	x0, sp, #0x50
  40cd18:	bl	40ca90 <worker_freep>
  40cd1c:	mov	w1, w19
  40cd20:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40cd24:	add	x0, x0, #0x7a8
  40cd28:	ldr	x2, [sp, #120]
  40cd2c:	ldr	x0, [x0]
  40cd30:	eor	x0, x2, x0
  40cd34:	cmp	x0, #0x0
  40cd38:	b.eq	40cd40 <worker_new+0x254>  // b.none
  40cd3c:	bl	40b280 <__stack_chk_fail@plt>
  40cd40:	mov	w0, w1
  40cd44:	ldr	x19, [sp, #16]
  40cd48:	ldp	x29, x30, [sp], #128
  40cd4c:	ret

000000000040cd50 <on_event_timeout>:
  40cd50:	sub	sp, sp, #0x80
  40cd54:	stp	x29, x30, [sp, #32]
  40cd58:	add	x29, sp, #0x20
  40cd5c:	str	x0, [sp, #72]
  40cd60:	str	x1, [sp, #64]
  40cd64:	str	x2, [sp, #56]
  40cd68:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40cd6c:	add	x0, x0, #0x7a8
  40cd70:	ldr	x1, [x0]
  40cd74:	str	x1, [sp, #120]
  40cd78:	mov	x1, #0x0                   	// #0
  40cd7c:	ldr	x0, [sp, #56]
  40cd80:	str	x0, [sp, #104]
  40cd84:	ldr	x0, [sp, #104]
  40cd88:	cmp	x0, #0x0
  40cd8c:	cset	w0, eq  // eq = none
  40cd90:	and	w0, w0, #0xff
  40cd94:	and	x0, x0, #0xff
  40cd98:	cmp	x0, #0x0
  40cd9c:	b.eq	40cdc8 <on_event_timeout+0x78>  // b.none
  40cda0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cda4:	add	x1, x0, #0x66b
  40cda8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40cdac:	add	x4, x0, #0x38
  40cdb0:	mov	w3, #0xe3                  	// #227
  40cdb4:	mov	x2, x1
  40cdb8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cdbc:	add	x1, x0, #0x718
  40cdc0:	mov	w0, #0x1                   	// #1
  40cdc4:	bl	40abb0 <log_assert_failed_realm@plt>
  40cdc8:	ldr	x0, [sp, #104]
  40cdcc:	ldr	x0, [x0, #8]
  40cdd0:	cmp	x0, #0x0
  40cdd4:	cset	w0, eq  // eq = none
  40cdd8:	and	w0, w0, #0xff
  40cddc:	and	x0, x0, #0xff
  40cde0:	cmp	x0, #0x0
  40cde4:	b.eq	40ce10 <on_event_timeout+0xc0>  // b.none
  40cde8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cdec:	add	x1, x0, #0x66b
  40cdf0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40cdf4:	add	x4, x0, #0x38
  40cdf8:	mov	w3, #0xe4                  	// #228
  40cdfc:	mov	x2, x1
  40ce00:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ce04:	add	x1, x0, #0x720
  40ce08:	mov	w0, #0x1                   	// #1
  40ce0c:	bl	40abb0 <log_assert_failed_realm@plt>
  40ce10:	ldr	x0, [sp, #104]
  40ce14:	ldr	x0, [x0, #8]
  40ce18:	ldr	w0, [x0, #8]
  40ce1c:	mov	w1, #0x9                   	// #9
  40ce20:	bl	40a770 <kill_and_sigcont@plt>
  40ce24:	ldr	x0, [sp, #104]
  40ce28:	ldr	x0, [x0, #8]
  40ce2c:	mov	w1, #0x3                   	// #3
  40ce30:	str	w1, [x0, #24]
  40ce34:	str	xzr, [sp, #96]
  40ce38:	ldr	x0, [sp, #104]
  40ce3c:	ldr	x0, [x0, #24]
  40ce40:	str	x0, [sp, #112]
  40ce44:	mov	w0, #0x3                   	// #3
  40ce48:	str	w0, [sp, #88]
  40ce4c:	str	wzr, [sp, #92]
  40ce50:	ldr	x0, [sp, #112]
  40ce54:	cmp	x0, #0x0
  40ce58:	b.eq	40ce94 <on_event_timeout+0x144>  // b.none
  40ce5c:	mov	w0, #0x1                   	// #1
  40ce60:	bl	40be30 <log_get_max_level_realm@plt>
  40ce64:	mov	w1, w0
  40ce68:	ldr	w0, [sp, #88]
  40ce6c:	cmp	w0, w1
  40ce70:	cset	w0, le
  40ce74:	and	w0, w0, #0xff
  40ce78:	and	x0, x0, #0xff
  40ce7c:	cmp	x0, #0x0
  40ce80:	b.eq	40ce94 <on_event_timeout+0x144>  // b.none
  40ce84:	add	x0, sp, #0x60
  40ce88:	mov	x1, x0
  40ce8c:	ldr	x0, [sp, #112]
  40ce90:	bl	40aba0 <sd_device_get_sysname@plt>
  40ce94:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ce98:	add	x8, x0, #0x66b
  40ce9c:	ldr	x0, [sp, #96]
  40cea0:	cmp	x0, #0x0
  40cea4:	b.eq	40ceb4 <on_event_timeout+0x164>  // b.none
  40cea8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ceac:	add	x0, x0, #0x730
  40ceb0:	b	40ceb8 <on_event_timeout+0x168>
  40ceb4:	mov	x0, #0x0                   	// #0
  40ceb8:	ldr	x3, [sp, #96]
  40cebc:	ldr	x1, [sp, #104]
  40cec0:	ldr	x1, [x1, #8]
  40cec4:	ldr	w1, [x1, #8]
  40cec8:	ldr	x2, [sp, #104]
  40cecc:	ldr	x2, [x2, #40]
  40ced0:	str	x2, [sp, #24]
  40ced4:	str	w1, [sp, #16]
  40ced8:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40cedc:	add	x1, x1, #0x738
  40cee0:	str	x1, [sp, #8]
  40cee4:	str	xzr, [sp]
  40cee8:	mov	x7, #0x0                   	// #0
  40ceec:	mov	x6, x3
  40cef0:	mov	x5, x0
  40cef4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40cef8:	add	x4, x0, #0x50
  40cefc:	mov	w3, #0xe9                  	// #233
  40cf00:	mov	x2, x8
  40cf04:	ldr	w1, [sp, #92]
  40cf08:	ldr	w0, [sp, #88]
  40cf0c:	bl	40b020 <log_object_internal@plt>
  40cf10:	mov	w0, #0x1                   	// #1
  40cf14:	mov	w1, w0
  40cf18:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40cf1c:	add	x0, x0, #0x7a8
  40cf20:	ldr	x2, [sp, #120]
  40cf24:	ldr	x0, [x0]
  40cf28:	eor	x0, x2, x0
  40cf2c:	cmp	x0, #0x0
  40cf30:	b.eq	40cf38 <on_event_timeout+0x1e8>  // b.none
  40cf34:	bl	40b280 <__stack_chk_fail@plt>
  40cf38:	mov	w0, w1
  40cf3c:	ldp	x29, x30, [sp, #32]
  40cf40:	add	sp, sp, #0x80
  40cf44:	ret

000000000040cf48 <on_event_timeout_warning>:
  40cf48:	sub	sp, sp, #0x80
  40cf4c:	stp	x29, x30, [sp, #32]
  40cf50:	add	x29, sp, #0x20
  40cf54:	str	x0, [sp, #72]
  40cf58:	str	x1, [sp, #64]
  40cf5c:	str	x2, [sp, #56]
  40cf60:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40cf64:	add	x0, x0, #0x7a8
  40cf68:	ldr	x1, [x0]
  40cf6c:	str	x1, [sp, #120]
  40cf70:	mov	x1, #0x0                   	// #0
  40cf74:	ldr	x0, [sp, #56]
  40cf78:	str	x0, [sp, #104]
  40cf7c:	ldr	x0, [sp, #104]
  40cf80:	cmp	x0, #0x0
  40cf84:	cset	w0, eq  // eq = none
  40cf88:	and	w0, w0, #0xff
  40cf8c:	and	x0, x0, #0xff
  40cf90:	cmp	x0, #0x0
  40cf94:	b.eq	40cfc0 <on_event_timeout_warning+0x78>  // b.none
  40cf98:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cf9c:	add	x1, x0, #0x66b
  40cfa0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40cfa4:	add	x4, x0, #0x68
  40cfa8:	mov	w3, #0xf1                  	// #241
  40cfac:	mov	x2, x1
  40cfb0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cfb4:	add	x1, x0, #0x718
  40cfb8:	mov	w0, #0x1                   	// #1
  40cfbc:	bl	40abb0 <log_assert_failed_realm@plt>
  40cfc0:	ldr	x0, [sp, #104]
  40cfc4:	ldr	x0, [x0, #8]
  40cfc8:	cmp	x0, #0x0
  40cfcc:	cset	w0, eq  // eq = none
  40cfd0:	and	w0, w0, #0xff
  40cfd4:	and	x0, x0, #0xff
  40cfd8:	cmp	x0, #0x0
  40cfdc:	b.eq	40d008 <on_event_timeout_warning+0xc0>  // b.none
  40cfe0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cfe4:	add	x1, x0, #0x66b
  40cfe8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40cfec:	add	x4, x0, #0x68
  40cff0:	mov	w3, #0xf2                  	// #242
  40cff4:	mov	x2, x1
  40cff8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40cffc:	add	x1, x0, #0x720
  40d000:	mov	w0, #0x1                   	// #1
  40d004:	bl	40abb0 <log_assert_failed_realm@plt>
  40d008:	str	xzr, [sp, #96]
  40d00c:	ldr	x0, [sp, #104]
  40d010:	ldr	x0, [x0, #24]
  40d014:	str	x0, [sp, #112]
  40d018:	mov	w0, #0x4                   	// #4
  40d01c:	str	w0, [sp, #88]
  40d020:	str	wzr, [sp, #92]
  40d024:	ldr	x0, [sp, #112]
  40d028:	cmp	x0, #0x0
  40d02c:	b.eq	40d068 <on_event_timeout_warning+0x120>  // b.none
  40d030:	mov	w0, #0x1                   	// #1
  40d034:	bl	40be30 <log_get_max_level_realm@plt>
  40d038:	mov	w1, w0
  40d03c:	ldr	w0, [sp, #88]
  40d040:	cmp	w0, w1
  40d044:	cset	w0, le
  40d048:	and	w0, w0, #0xff
  40d04c:	and	x0, x0, #0xff
  40d050:	cmp	x0, #0x0
  40d054:	b.eq	40d068 <on_event_timeout_warning+0x120>  // b.none
  40d058:	add	x0, sp, #0x60
  40d05c:	mov	x1, x0
  40d060:	ldr	x0, [sp, #112]
  40d064:	bl	40aba0 <sd_device_get_sysname@plt>
  40d068:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d06c:	add	x8, x0, #0x66b
  40d070:	ldr	x0, [sp, #96]
  40d074:	cmp	x0, #0x0
  40d078:	b.eq	40d088 <on_event_timeout_warning+0x140>  // b.none
  40d07c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d080:	add	x0, x0, #0x730
  40d084:	b	40d08c <on_event_timeout_warning+0x144>
  40d088:	mov	x0, #0x0                   	// #0
  40d08c:	ldr	x3, [sp, #96]
  40d090:	ldr	x1, [sp, #104]
  40d094:	ldr	x1, [x1, #8]
  40d098:	ldr	w1, [x1, #8]
  40d09c:	ldr	x2, [sp, #104]
  40d0a0:	ldr	x2, [x2, #40]
  40d0a4:	str	x2, [sp, #24]
  40d0a8:	str	w1, [sp, #16]
  40d0ac:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40d0b0:	add	x1, x1, #0x768
  40d0b4:	str	x1, [sp, #8]
  40d0b8:	str	xzr, [sp]
  40d0bc:	mov	x7, #0x0                   	// #0
  40d0c0:	mov	x6, x3
  40d0c4:	mov	x5, x0
  40d0c8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d0cc:	add	x4, x0, #0x88
  40d0d0:	mov	w3, #0xf4                  	// #244
  40d0d4:	mov	x2, x8
  40d0d8:	ldr	w1, [sp, #92]
  40d0dc:	ldr	w0, [sp, #88]
  40d0e0:	bl	40b020 <log_object_internal@plt>
  40d0e4:	mov	w0, #0x1                   	// #1
  40d0e8:	mov	w1, w0
  40d0ec:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40d0f0:	add	x0, x0, #0x7a8
  40d0f4:	ldr	x2, [sp, #120]
  40d0f8:	ldr	x0, [x0]
  40d0fc:	eor	x0, x2, x0
  40d100:	cmp	x0, #0x0
  40d104:	b.eq	40d10c <on_event_timeout_warning+0x1c4>  // b.none
  40d108:	bl	40b280 <__stack_chk_fail@plt>
  40d10c:	mov	w0, w1
  40d110:	ldp	x29, x30, [sp, #32]
  40d114:	add	sp, sp, #0x80
  40d118:	ret

000000000040d11c <worker_attach_event>:
  40d11c:	stp	x29, x30, [sp, #-80]!
  40d120:	mov	x29, sp
  40d124:	str	x19, [sp, #16]
  40d128:	str	x0, [sp, #40]
  40d12c:	str	x1, [sp, #32]
  40d130:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40d134:	add	x0, x0, #0x7a8
  40d138:	ldr	x1, [x0]
  40d13c:	str	x1, [sp, #72]
  40d140:	mov	x1, #0x0                   	// #0
  40d144:	ldr	x0, [sp, #40]
  40d148:	cmp	x0, #0x0
  40d14c:	cset	w0, eq  // eq = none
  40d150:	and	w0, w0, #0xff
  40d154:	and	x0, x0, #0xff
  40d158:	cmp	x0, #0x0
  40d15c:	b.eq	40d188 <worker_attach_event+0x6c>  // b.none
  40d160:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d164:	add	x1, x0, #0x66b
  40d168:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d16c:	add	x4, x0, #0xa8
  40d170:	mov	w3, #0xfd                  	// #253
  40d174:	mov	x2, x1
  40d178:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d17c:	add	x1, x0, #0x7a0
  40d180:	mov	w0, #0x1                   	// #1
  40d184:	bl	40abb0 <log_assert_failed_realm@plt>
  40d188:	ldr	x0, [sp, #40]
  40d18c:	ldr	x0, [x0]
  40d190:	cmp	x0, #0x0
  40d194:	cset	w0, eq  // eq = none
  40d198:	and	w0, w0, #0xff
  40d19c:	and	x0, x0, #0xff
  40d1a0:	cmp	x0, #0x0
  40d1a4:	b.eq	40d1d0 <worker_attach_event+0xb4>  // b.none
  40d1a8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d1ac:	add	x1, x0, #0x66b
  40d1b0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d1b4:	add	x4, x0, #0xa8
  40d1b8:	mov	w3, #0xfe                  	// #254
  40d1bc:	mov	x2, x1
  40d1c0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d1c4:	add	x1, x0, #0x6e0
  40d1c8:	mov	w0, #0x1                   	// #1
  40d1cc:	bl	40abb0 <log_assert_failed_realm@plt>
  40d1d0:	ldr	x0, [sp, #32]
  40d1d4:	cmp	x0, #0x0
  40d1d8:	cset	w0, eq  // eq = none
  40d1dc:	and	w0, w0, #0xff
  40d1e0:	and	x0, x0, #0xff
  40d1e4:	cmp	x0, #0x0
  40d1e8:	b.eq	40d214 <worker_attach_event+0xf8>  // b.none
  40d1ec:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d1f0:	add	x1, x0, #0x66b
  40d1f4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d1f8:	add	x4, x0, #0xa8
  40d1fc:	mov	w3, #0xff                  	// #255
  40d200:	mov	x2, x1
  40d204:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d208:	add	x1, x0, #0x718
  40d20c:	mov	w0, #0x1                   	// #1
  40d210:	bl	40abb0 <log_assert_failed_realm@plt>
  40d214:	ldr	x0, [sp, #32]
  40d218:	ldr	x0, [x0, #8]
  40d21c:	cmp	x0, #0x0
  40d220:	cset	w0, ne  // ne = any
  40d224:	and	w0, w0, #0xff
  40d228:	and	x0, x0, #0xff
  40d22c:	cmp	x0, #0x0
  40d230:	b.eq	40d25c <worker_attach_event+0x140>  // b.none
  40d234:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d238:	add	x1, x0, #0x66b
  40d23c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d240:	add	x4, x0, #0xa8
  40d244:	mov	w3, #0x100                 	// #256
  40d248:	mov	x2, x1
  40d24c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d250:	add	x1, x0, #0x7a8
  40d254:	mov	w0, #0x1                   	// #1
  40d258:	bl	40abb0 <log_assert_failed_realm@plt>
  40d25c:	ldr	x0, [sp, #40]
  40d260:	ldr	x0, [x0, #32]
  40d264:	cmp	x0, #0x0
  40d268:	cset	w0, ne  // ne = any
  40d26c:	and	w0, w0, #0xff
  40d270:	and	x0, x0, #0xff
  40d274:	cmp	x0, #0x0
  40d278:	b.eq	40d2a4 <worker_attach_event+0x188>  // b.none
  40d27c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d280:	add	x1, x0, #0x66b
  40d284:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d288:	add	x4, x0, #0xa8
  40d28c:	mov	w3, #0x101                 	// #257
  40d290:	mov	x2, x1
  40d294:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d298:	add	x1, x0, #0x7b8
  40d29c:	mov	w0, #0x1                   	// #1
  40d2a0:	bl	40abb0 <log_assert_failed_realm@plt>
  40d2a4:	ldr	x0, [sp, #40]
  40d2a8:	mov	w1, #0x1                   	// #1
  40d2ac:	str	w1, [x0, #24]
  40d2b0:	ldr	x0, [sp, #40]
  40d2b4:	ldr	x1, [sp, #32]
  40d2b8:	str	x1, [x0, #32]
  40d2bc:	ldr	x0, [sp, #32]
  40d2c0:	mov	w1, #0x2                   	// #2
  40d2c4:	str	w1, [x0, #16]
  40d2c8:	ldr	x0, [sp, #32]
  40d2cc:	ldr	x1, [sp, #40]
  40d2d0:	str	x1, [x0, #8]
  40d2d4:	ldr	x0, [sp, #40]
  40d2d8:	ldr	x0, [x0]
  40d2dc:	ldr	x0, [x0]
  40d2e0:	str	x0, [sp, #64]
  40d2e4:	add	x0, sp, #0x38
  40d2e8:	mov	x2, x0
  40d2ec:	mov	w1, #0x1                   	// #1
  40d2f0:	ldr	x0, [sp, #64]
  40d2f4:	bl	40ac50 <sd_event_now@plt>
  40d2f8:	lsr	w0, w0, #31
  40d2fc:	and	w0, w0, #0xff
  40d300:	and	x0, x0, #0xff
  40d304:	cmp	x0, #0x0
  40d308:	b.eq	40d334 <worker_attach_event+0x218>  // b.none
  40d30c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d310:	add	x1, x0, #0x66b
  40d314:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d318:	add	x4, x0, #0xa8
  40d31c:	mov	w3, #0x10a                 	// #266
  40d320:	mov	x2, x1
  40d324:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d328:	add	x1, x0, #0x7c8
  40d32c:	mov	w0, #0x1                   	// #1
  40d330:	bl	40abb0 <log_assert_failed_realm@plt>
  40d334:	ldr	x0, [sp, #32]
  40d338:	add	x19, x0, #0x38
  40d33c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40d340:	add	x0, x0, #0x8
  40d344:	ldr	x0, [x0]
  40d348:	bl	40c6d8 <udev_warn_timeout>
  40d34c:	mov	x1, x0
  40d350:	ldr	x0, [sp, #56]
  40d354:	add	x1, x1, x0
  40d358:	ldr	x6, [sp, #32]
  40d35c:	adrp	x0, 40c000 <register_tm_clones+0x88>
  40d360:	add	x5, x0, #0xf48
  40d364:	mov	x4, #0x4240                	// #16960
  40d368:	movk	x4, #0xf, lsl #16
  40d36c:	mov	x3, x1
  40d370:	mov	w2, #0x1                   	// #1
  40d374:	mov	x1, x19
  40d378:	ldr	x0, [sp, #64]
  40d37c:	bl	40a900 <sd_event_add_time@plt>
  40d380:	ldr	x0, [sp, #32]
  40d384:	add	x7, x0, #0x40
  40d388:	ldr	x1, [sp, #56]
  40d38c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40d390:	add	x0, x0, #0x8
  40d394:	ldr	x0, [x0]
  40d398:	add	x1, x1, x0
  40d39c:	ldr	x6, [sp, #32]
  40d3a0:	adrp	x0, 40c000 <register_tm_clones+0x88>
  40d3a4:	add	x5, x0, #0xd50
  40d3a8:	mov	x4, #0x4240                	// #16960
  40d3ac:	movk	x4, #0xf, lsl #16
  40d3b0:	mov	x3, x1
  40d3b4:	mov	w2, #0x1                   	// #1
  40d3b8:	mov	x1, x7
  40d3bc:	ldr	x0, [sp, #64]
  40d3c0:	bl	40a900 <sd_event_add_time@plt>
  40d3c4:	nop
  40d3c8:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40d3cc:	add	x0, x0, #0x7a8
  40d3d0:	ldr	x1, [sp, #72]
  40d3d4:	ldr	x0, [x0]
  40d3d8:	eor	x0, x1, x0
  40d3dc:	cmp	x0, #0x0
  40d3e0:	b.eq	40d3e8 <worker_attach_event+0x2cc>  // b.none
  40d3e4:	bl	40b280 <__stack_chk_fail@plt>
  40d3e8:	ldr	x19, [sp, #16]
  40d3ec:	ldp	x29, x30, [sp], #80
  40d3f0:	ret

000000000040d3f4 <manager_clear_for_worker>:
  40d3f4:	stp	x29, x30, [sp, #-32]!
  40d3f8:	mov	x29, sp
  40d3fc:	str	x0, [sp, #24]
  40d400:	ldr	x0, [sp, #24]
  40d404:	cmp	x0, #0x0
  40d408:	cset	w0, eq  // eq = none
  40d40c:	and	w0, w0, #0xff
  40d410:	and	x0, x0, #0xff
  40d414:	cmp	x0, #0x0
  40d418:	b.eq	40d444 <manager_clear_for_worker+0x50>  // b.none
  40d41c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d420:	add	x1, x0, #0x66b
  40d424:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d428:	add	x4, x0, #0xc0
  40d42c:	mov	w3, #0x114                 	// #276
  40d430:	mov	x2, x1
  40d434:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d438:	add	x1, x0, #0x6f8
  40d43c:	mov	w0, #0x1                   	// #1
  40d440:	bl	40abb0 <log_assert_failed_realm@plt>
  40d444:	ldr	x0, [sp, #24]
  40d448:	ldr	x0, [x0, #96]
  40d44c:	bl	40a9f0 <sd_event_source_unref@plt>
  40d450:	mov	x1, x0
  40d454:	ldr	x0, [sp, #24]
  40d458:	str	x1, [x0, #96]
  40d45c:	ldr	x0, [sp, #24]
  40d460:	ldr	x0, [x0, #104]
  40d464:	bl	40a9f0 <sd_event_source_unref@plt>
  40d468:	mov	x1, x0
  40d46c:	ldr	x0, [sp, #24]
  40d470:	str	x1, [x0, #104]
  40d474:	ldr	x0, [sp, #24]
  40d478:	ldr	x0, [x0]
  40d47c:	bl	40bb80 <sd_event_unref@plt>
  40d480:	mov	x1, x0
  40d484:	ldr	x0, [sp, #24]
  40d488:	str	x1, [x0]
  40d48c:	ldr	x0, [sp, #24]
  40d490:	ldr	x0, [x0, #8]
  40d494:	bl	40c1c4 <hashmap_free>
  40d498:	mov	x1, x0
  40d49c:	ldr	x0, [sp, #24]
  40d4a0:	str	x1, [x0, #8]
  40d4a4:	mov	w1, #0x0                   	// #0
  40d4a8:	ldr	x0, [sp, #24]
  40d4ac:	bl	410694 <event_queue_cleanup>
  40d4b0:	ldr	x0, [sp, #24]
  40d4b4:	ldr	x0, [x0, #64]
  40d4b8:	bl	40b3c0 <sd_device_monitor_unref@plt>
  40d4bc:	mov	x1, x0
  40d4c0:	ldr	x0, [sp, #24]
  40d4c4:	str	x1, [x0, #64]
  40d4c8:	ldr	x0, [sp, #24]
  40d4cc:	ldr	x0, [x0, #72]
  40d4d0:	bl	41611c <udev_ctrl_unref>
  40d4d4:	mov	x1, x0
  40d4d8:	ldr	x0, [sp, #24]
  40d4dc:	str	x1, [x0, #72]
  40d4e0:	ldr	x0, [sp, #24]
  40d4e4:	ldr	w0, [x0, #84]
  40d4e8:	bl	40aad0 <safe_close@plt>
  40d4ec:	mov	w1, w0
  40d4f0:	ldr	x0, [sp, #24]
  40d4f4:	str	w1, [x0, #84]
  40d4f8:	nop
  40d4fc:	ldp	x29, x30, [sp], #32
  40d500:	ret

000000000040d504 <manager_free>:
  40d504:	stp	x29, x30, [sp, #-48]!
  40d508:	mov	x29, sp
  40d50c:	str	x19, [sp, #16]
  40d510:	str	x0, [sp, #40]
  40d514:	ldr	x0, [sp, #40]
  40d518:	cmp	x0, #0x0
  40d51c:	b.eq	40d594 <manager_free+0x90>  // b.none
  40d520:	bl	435fa4 <udev_builtin_exit>
  40d524:	ldr	x0, [sp, #40]
  40d528:	ldr	w19, [x0, #32]
  40d52c:	bl	40a8e0 <getpid_cached@plt>
  40d530:	cmp	w19, w0
  40d534:	b.ne	40d544 <manager_free+0x40>  // b.any
  40d538:	ldr	x0, [sp, #40]
  40d53c:	ldr	x0, [x0, #72]
  40d540:	bl	4161c0 <udev_ctrl_cleanup>
  40d544:	ldr	x0, [sp, #40]
  40d548:	bl	40d3f4 <manager_clear_for_worker>
  40d54c:	ldr	x0, [sp, #40]
  40d550:	ldr	x0, [x0, #56]
  40d554:	bl	40af50 <sd_netlink_unref@plt>
  40d558:	ldr	x0, [sp, #40]
  40d55c:	ldr	x0, [x0, #48]
  40d560:	bl	40c1e8 <hashmap_free_free_free>
  40d564:	ldr	x0, [sp, #40]
  40d568:	ldr	x0, [x0, #40]
  40d56c:	bl	4205b0 <udev_rules_free>
  40d570:	ldr	x0, [sp, #40]
  40d574:	ldr	w0, [x0, #80]
  40d578:	bl	40aad0 <safe_close@plt>
  40d57c:	ldr	x0, [sp, #40]
  40d580:	add	x0, x0, #0x54
  40d584:	bl	40ab30 <safe_close_pair@plt>
  40d588:	ldr	x0, [sp, #40]
  40d58c:	bl	40ba20 <free@plt>
  40d590:	b	40d598 <manager_free+0x94>
  40d594:	nop
  40d598:	ldr	x19, [sp, #16]
  40d59c:	ldp	x29, x30, [sp], #48
  40d5a0:	ret

000000000040d5a4 <manager_freep>:
  40d5a4:	stp	x29, x30, [sp, #-32]!
  40d5a8:	mov	x29, sp
  40d5ac:	str	x0, [sp, #24]
  40d5b0:	ldr	x0, [sp, #24]
  40d5b4:	ldr	x0, [x0]
  40d5b8:	cmp	x0, #0x0
  40d5bc:	b.eq	40d5cc <manager_freep+0x28>  // b.none
  40d5c0:	ldr	x0, [sp, #24]
  40d5c4:	ldr	x0, [x0]
  40d5c8:	bl	40d504 <manager_free>
  40d5cc:	nop
  40d5d0:	ldp	x29, x30, [sp], #32
  40d5d4:	ret

000000000040d5d8 <worker_send_message>:
  40d5d8:	stp	x29, x30, [sp, #-48]!
  40d5dc:	mov	x29, sp
  40d5e0:	str	w0, [sp, #28]
  40d5e4:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40d5e8:	add	x0, x0, #0x7a8
  40d5ec:	ldr	x1, [x0]
  40d5f0:	str	x1, [sp, #40]
  40d5f4:	mov	x1, #0x0                   	// #0
  40d5f8:	add	x0, sp, #0x20
  40d5fc:	mov	w3, #0x0                   	// #0
  40d600:	mov	x2, #0x0                   	// #0
  40d604:	mov	x1, x0
  40d608:	ldr	w0, [sp, #28]
  40d60c:	bl	40a840 <loop_write@plt>
  40d610:	mov	w1, w0
  40d614:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40d618:	add	x0, x0, #0x7a8
  40d61c:	ldr	x2, [sp, #40]
  40d620:	ldr	x0, [x0]
  40d624:	eor	x0, x2, x0
  40d628:	cmp	x0, #0x0
  40d62c:	b.eq	40d634 <worker_send_message+0x5c>  // b.none
  40d630:	bl	40b280 <__stack_chk_fail@plt>
  40d634:	mov	w0, w1
  40d638:	ldp	x29, x30, [sp], #48
  40d63c:	ret

000000000040d640 <worker_lock_block_device>:
  40d640:	sub	sp, sp, #0x120
  40d644:	stp	x29, x30, [sp, #32]
  40d648:	add	x29, sp, #0x20
  40d64c:	str	x19, [sp, #48]
  40d650:	str	x0, [sp, #72]
  40d654:	str	x1, [sp, #64]
  40d658:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40d65c:	add	x0, x0, #0x7a8
  40d660:	ldr	x1, [x0]
  40d664:	str	x1, [sp, #280]
  40d668:	mov	x1, #0x0                   	// #0
  40d66c:	mov	w0, #0xffffffff            	// #-1
  40d670:	str	w0, [sp, #84]
  40d674:	ldr	x0, [sp, #72]
  40d678:	cmp	x0, #0x0
  40d67c:	cset	w0, eq  // eq = none
  40d680:	and	w0, w0, #0xff
  40d684:	and	x0, x0, #0xff
  40d688:	cmp	x0, #0x0
  40d68c:	b.eq	40d6b8 <worker_lock_block_device+0x78>  // b.none
  40d690:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d694:	add	x1, x0, #0x66b
  40d698:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d69c:	add	x4, x0, #0xe0
  40d6a0:	mov	w3, #0x147                 	// #327
  40d6a4:	mov	x2, x1
  40d6a8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d6ac:	add	x1, x0, #0x7f8
  40d6b0:	mov	w0, #0x1                   	// #1
  40d6b4:	bl	40abb0 <log_assert_failed_realm@plt>
  40d6b8:	ldr	x0, [sp, #64]
  40d6bc:	cmp	x0, #0x0
  40d6c0:	cset	w0, eq  // eq = none
  40d6c4:	and	w0, w0, #0xff
  40d6c8:	and	x0, x0, #0xff
  40d6cc:	cmp	x0, #0x0
  40d6d0:	b.eq	40d6fc <worker_lock_block_device+0xbc>  // b.none
  40d6d4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d6d8:	add	x1, x0, #0x66b
  40d6dc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d6e0:	add	x4, x0, #0xe0
  40d6e4:	mov	w3, #0x148                 	// #328
  40d6e8:	mov	x2, x1
  40d6ec:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d6f0:	add	x1, x0, #0x800
  40d6f4:	mov	w0, #0x1                   	// #1
  40d6f8:	bl	40abb0 <log_assert_failed_realm@plt>
  40d6fc:	ldr	x0, [sp, #72]
  40d700:	mov	w1, #0x1                   	// #1
  40d704:	bl	40a860 <device_for_action@plt>
  40d708:	and	w0, w0, #0xff
  40d70c:	cmp	w0, #0x0
  40d710:	b.eq	40d71c <worker_lock_block_device+0xdc>  // b.none
  40d714:	mov	w19, #0x0                   	// #0
  40d718:	b	40de74 <worker_lock_block_device+0x834>
  40d71c:	ldr	x0, [sp, #72]
  40d720:	add	x1, sp, #0x98
  40d724:	bl	40af80 <sd_device_get_subsystem@plt>
  40d728:	str	w0, [sp, #88]
  40d72c:	ldr	w0, [sp, #88]
  40d730:	cmp	w0, #0x0
  40d734:	b.ge	40d7fc <worker_lock_block_device+0x1bc>  // b.tcont
  40d738:	str	xzr, [sp, #160]
  40d73c:	ldr	x0, [sp, #72]
  40d740:	str	x0, [sp, #240]
  40d744:	mov	w0, #0x7                   	// #7
  40d748:	str	w0, [sp, #144]
  40d74c:	ldr	w0, [sp, #88]
  40d750:	str	w0, [sp, #148]
  40d754:	ldr	x0, [sp, #240]
  40d758:	cmp	x0, #0x0
  40d75c:	b.eq	40d798 <worker_lock_block_device+0x158>  // b.none
  40d760:	mov	w0, #0x1                   	// #1
  40d764:	bl	40be30 <log_get_max_level_realm@plt>
  40d768:	mov	w1, w0
  40d76c:	ldr	w0, [sp, #144]
  40d770:	cmp	w0, w1
  40d774:	cset	w0, le
  40d778:	and	w0, w0, #0xff
  40d77c:	and	x0, x0, #0xff
  40d780:	cmp	x0, #0x0
  40d784:	b.eq	40d798 <worker_lock_block_device+0x158>  // b.none
  40d788:	add	x0, sp, #0xa0
  40d78c:	mov	x1, x0
  40d790:	ldr	x0, [sp, #240]
  40d794:	bl	40aba0 <sd_device_get_sysname@plt>
  40d798:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d79c:	add	x2, x0, #0x66b
  40d7a0:	ldr	x0, [sp, #160]
  40d7a4:	cmp	x0, #0x0
  40d7a8:	b.eq	40d7b8 <worker_lock_block_device+0x178>  // b.none
  40d7ac:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d7b0:	add	x0, x0, #0x730
  40d7b4:	b	40d7bc <worker_lock_block_device+0x17c>
  40d7b8:	mov	x0, #0x0                   	// #0
  40d7bc:	ldr	x3, [sp, #160]
  40d7c0:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40d7c4:	add	x1, x1, #0x808
  40d7c8:	str	x1, [sp, #8]
  40d7cc:	str	xzr, [sp]
  40d7d0:	mov	x7, #0x0                   	// #0
  40d7d4:	mov	x6, x3
  40d7d8:	mov	x5, x0
  40d7dc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d7e0:	add	x4, x0, #0x100
  40d7e4:	mov	w3, #0x158                 	// #344
  40d7e8:	ldr	w1, [sp, #148]
  40d7ec:	ldr	w0, [sp, #144]
  40d7f0:	bl	40b020 <log_object_internal@plt>
  40d7f4:	mov	w19, w0
  40d7f8:	b	40de74 <worker_lock_block_device+0x834>
  40d7fc:	ldr	x2, [sp, #152]
  40d800:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d804:	add	x1, x0, #0x828
  40d808:	mov	x0, x2
  40d80c:	bl	40b710 <strcmp@plt>
  40d810:	cmp	w0, #0x0
  40d814:	b.eq	40d820 <worker_lock_block_device+0x1e0>  // b.none
  40d818:	mov	w19, #0x0                   	// #0
  40d81c:	b	40de74 <worker_lock_block_device+0x834>
  40d820:	ldr	x0, [sp, #72]
  40d824:	add	x1, sp, #0x98
  40d828:	bl	40aba0 <sd_device_get_sysname@plt>
  40d82c:	str	w0, [sp, #88]
  40d830:	ldr	w0, [sp, #88]
  40d834:	cmp	w0, #0x0
  40d838:	b.ge	40d900 <worker_lock_block_device+0x2c0>  // b.tcont
  40d83c:	str	xzr, [sp, #160]
  40d840:	ldr	x0, [sp, #72]
  40d844:	str	x0, [sp, #232]
  40d848:	mov	w0, #0x7                   	// #7
  40d84c:	str	w0, [sp, #136]
  40d850:	ldr	w0, [sp, #88]
  40d854:	str	w0, [sp, #140]
  40d858:	ldr	x0, [sp, #232]
  40d85c:	cmp	x0, #0x0
  40d860:	b.eq	40d89c <worker_lock_block_device+0x25c>  // b.none
  40d864:	mov	w0, #0x1                   	// #1
  40d868:	bl	40be30 <log_get_max_level_realm@plt>
  40d86c:	mov	w1, w0
  40d870:	ldr	w0, [sp, #136]
  40d874:	cmp	w0, w1
  40d878:	cset	w0, le
  40d87c:	and	w0, w0, #0xff
  40d880:	and	x0, x0, #0xff
  40d884:	cmp	x0, #0x0
  40d888:	b.eq	40d89c <worker_lock_block_device+0x25c>  // b.none
  40d88c:	add	x0, sp, #0xa0
  40d890:	mov	x1, x0
  40d894:	ldr	x0, [sp, #232]
  40d898:	bl	40aba0 <sd_device_get_sysname@plt>
  40d89c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d8a0:	add	x2, x0, #0x66b
  40d8a4:	ldr	x0, [sp, #160]
  40d8a8:	cmp	x0, #0x0
  40d8ac:	b.eq	40d8bc <worker_lock_block_device+0x27c>  // b.none
  40d8b0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40d8b4:	add	x0, x0, #0x730
  40d8b8:	b	40d8c0 <worker_lock_block_device+0x280>
  40d8bc:	mov	x0, #0x0                   	// #0
  40d8c0:	ldr	x3, [sp, #160]
  40d8c4:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40d8c8:	add	x1, x1, #0x830
  40d8cc:	str	x1, [sp, #8]
  40d8d0:	str	xzr, [sp]
  40d8d4:	mov	x7, #0x0                   	// #0
  40d8d8:	mov	x6, x3
  40d8dc:	mov	x5, x0
  40d8e0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40d8e4:	add	x4, x0, #0x100
  40d8e8:	mov	w3, #0x15f                 	// #351
  40d8ec:	ldr	w1, [sp, #140]
  40d8f0:	ldr	w0, [sp, #136]
  40d8f4:	bl	40b020 <log_object_internal@plt>
  40d8f8:	mov	w19, w0
  40d8fc:	b	40de74 <worker_lock_block_device+0x834>
  40d900:	ldr	x0, [sp, #152]
  40d904:	str	x0, [sp, #184]
  40d908:	str	xzr, [sp, #168]
  40d90c:	add	x0, sp, #0x128
  40d910:	sub	x0, x0, #0x30
  40d914:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40d918:	add	x1, x1, #0x900
  40d91c:	ld1	{v0.16b, v1.16b}, [x1]
  40d920:	st1	{v0.16b, v1.16b}, [x0]
  40d924:	add	x0, sp, #0xf8
  40d928:	str	x0, [sp, #176]
  40d92c:	b	40d960 <worker_lock_block_device+0x320>
  40d930:	ldr	x0, [sp, #176]
  40d934:	ldr	x0, [x0]
  40d938:	mov	x1, x0
  40d93c:	ldr	x0, [sp, #184]
  40d940:	bl	40c458 <startswith>
  40d944:	str	x0, [sp, #168]
  40d948:	ldr	x0, [sp, #168]
  40d94c:	cmp	x0, #0x0
  40d950:	b.ne	40d980 <worker_lock_block_device+0x340>  // b.any
  40d954:	ldr	x0, [sp, #176]
  40d958:	add	x0, x0, #0x8
  40d95c:	str	x0, [sp, #176]
  40d960:	ldr	x0, [sp, #176]
  40d964:	cmp	x0, #0x0
  40d968:	b.eq	40d984 <worker_lock_block_device+0x344>  // b.none
  40d96c:	ldr	x0, [sp, #176]
  40d970:	ldr	x0, [x0]
  40d974:	cmp	x0, #0x0
  40d978:	b.ne	40d930 <worker_lock_block_device+0x2f0>  // b.any
  40d97c:	b	40d984 <worker_lock_block_device+0x344>
  40d980:	nop
  40d984:	ldr	x0, [sp, #168]
  40d988:	cmp	x0, #0x0
  40d98c:	b.eq	40d998 <worker_lock_block_device+0x358>  // b.none
  40d990:	mov	w19, #0x0                   	// #0
  40d994:	b	40de74 <worker_lock_block_device+0x834>
  40d998:	ldr	x0, [sp, #72]
  40d99c:	add	x1, sp, #0x98
  40d9a0:	bl	40a460 <sd_device_get_devtype@plt>
  40d9a4:	str	w0, [sp, #88]
  40d9a8:	ldr	w0, [sp, #88]
  40d9ac:	cmp	w0, #0x0
  40d9b0:	b.ge	40da84 <worker_lock_block_device+0x444>  // b.tcont
  40d9b4:	ldr	w0, [sp, #88]
  40d9b8:	cmn	w0, #0x2
  40d9bc:	b.eq	40da84 <worker_lock_block_device+0x444>  // b.none
  40d9c0:	str	xzr, [sp, #160]
  40d9c4:	ldr	x0, [sp, #72]
  40d9c8:	str	x0, [sp, #192]
  40d9cc:	mov	w0, #0x7                   	// #7
  40d9d0:	str	w0, [sp, #92]
  40d9d4:	ldr	w0, [sp, #88]
  40d9d8:	str	w0, [sp, #96]
  40d9dc:	ldr	x0, [sp, #192]
  40d9e0:	cmp	x0, #0x0
  40d9e4:	b.eq	40da20 <worker_lock_block_device+0x3e0>  // b.none
  40d9e8:	mov	w0, #0x1                   	// #1
  40d9ec:	bl	40be30 <log_get_max_level_realm@plt>
  40d9f0:	mov	w1, w0
  40d9f4:	ldr	w0, [sp, #92]
  40d9f8:	cmp	w0, w1
  40d9fc:	cset	w0, le
  40da00:	and	w0, w0, #0xff
  40da04:	and	x0, x0, #0xff
  40da08:	cmp	x0, #0x0
  40da0c:	b.eq	40da20 <worker_lock_block_device+0x3e0>  // b.none
  40da10:	add	x0, sp, #0xa0
  40da14:	mov	x1, x0
  40da18:	ldr	x0, [sp, #192]
  40da1c:	bl	40aba0 <sd_device_get_sysname@plt>
  40da20:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40da24:	add	x2, x0, #0x66b
  40da28:	ldr	x0, [sp, #160]
  40da2c:	cmp	x0, #0x0
  40da30:	b.eq	40da40 <worker_lock_block_device+0x400>  // b.none
  40da34:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40da38:	add	x0, x0, #0x730
  40da3c:	b	40da44 <worker_lock_block_device+0x404>
  40da40:	mov	x0, #0x0                   	// #0
  40da44:	ldr	x3, [sp, #160]
  40da48:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40da4c:	add	x1, x1, #0x850
  40da50:	str	x1, [sp, #8]
  40da54:	str	xzr, [sp]
  40da58:	mov	x7, #0x0                   	// #0
  40da5c:	mov	x6, x3
  40da60:	mov	x5, x0
  40da64:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40da68:	add	x4, x0, #0x100
  40da6c:	mov	w3, #0x166                 	// #358
  40da70:	ldr	w1, [sp, #96]
  40da74:	ldr	w0, [sp, #92]
  40da78:	bl	40b020 <log_object_internal@plt>
  40da7c:	mov	w19, w0
  40da80:	b	40de74 <worker_lock_block_device+0x834>
  40da84:	ldr	w0, [sp, #88]
  40da88:	cmp	w0, #0x0
  40da8c:	b.lt	40db8c <worker_lock_block_device+0x54c>  // b.tstop
  40da90:	ldr	x2, [sp, #152]
  40da94:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40da98:	add	x1, x0, #0x870
  40da9c:	mov	x0, x2
  40daa0:	bl	40b710 <strcmp@plt>
  40daa4:	cmp	w0, #0x0
  40daa8:	b.ne	40db8c <worker_lock_block_device+0x54c>  // b.any
  40daac:	ldr	x0, [sp, #72]
  40dab0:	add	x1, sp, #0x48
  40dab4:	bl	40be60 <sd_device_get_parent@plt>
  40dab8:	str	w0, [sp, #88]
  40dabc:	ldr	w0, [sp, #88]
  40dac0:	cmp	w0, #0x0
  40dac4:	b.ge	40db8c <worker_lock_block_device+0x54c>  // b.tcont
  40dac8:	str	xzr, [sp, #160]
  40dacc:	ldr	x0, [sp, #72]
  40dad0:	str	x0, [sp, #200]
  40dad4:	mov	w0, #0x7                   	// #7
  40dad8:	str	w0, [sp, #100]
  40dadc:	ldr	w0, [sp, #88]
  40dae0:	str	w0, [sp, #104]
  40dae4:	ldr	x0, [sp, #200]
  40dae8:	cmp	x0, #0x0
  40daec:	b.eq	40db28 <worker_lock_block_device+0x4e8>  // b.none
  40daf0:	mov	w0, #0x1                   	// #1
  40daf4:	bl	40be30 <log_get_max_level_realm@plt>
  40daf8:	mov	w1, w0
  40dafc:	ldr	w0, [sp, #100]
  40db00:	cmp	w0, w1
  40db04:	cset	w0, le
  40db08:	and	w0, w0, #0xff
  40db0c:	and	x0, x0, #0xff
  40db10:	cmp	x0, #0x0
  40db14:	b.eq	40db28 <worker_lock_block_device+0x4e8>  // b.none
  40db18:	add	x0, sp, #0xa0
  40db1c:	mov	x1, x0
  40db20:	ldr	x0, [sp, #200]
  40db24:	bl	40aba0 <sd_device_get_sysname@plt>
  40db28:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40db2c:	add	x2, x0, #0x66b
  40db30:	ldr	x0, [sp, #160]
  40db34:	cmp	x0, #0x0
  40db38:	b.eq	40db48 <worker_lock_block_device+0x508>  // b.none
  40db3c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40db40:	add	x0, x0, #0x730
  40db44:	b	40db4c <worker_lock_block_device+0x50c>
  40db48:	mov	x0, #0x0                   	// #0
  40db4c:	ldr	x3, [sp, #160]
  40db50:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40db54:	add	x1, x1, #0x880
  40db58:	str	x1, [sp, #8]
  40db5c:	str	xzr, [sp]
  40db60:	mov	x7, #0x0                   	// #0
  40db64:	mov	x6, x3
  40db68:	mov	x5, x0
  40db6c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40db70:	add	x4, x0, #0x100
  40db74:	mov	w3, #0x16a                 	// #362
  40db78:	ldr	w1, [sp, #104]
  40db7c:	ldr	w0, [sp, #100]
  40db80:	bl	40b020 <log_object_internal@plt>
  40db84:	mov	w19, w0
  40db88:	b	40de74 <worker_lock_block_device+0x834>
  40db8c:	ldr	x0, [sp, #72]
  40db90:	add	x1, sp, #0x98
  40db94:	bl	40a6f0 <sd_device_get_devname@plt>
  40db98:	str	w0, [sp, #88]
  40db9c:	ldr	w0, [sp, #88]
  40dba0:	cmn	w0, #0x2
  40dba4:	b.ne	40dbb0 <worker_lock_block_device+0x570>  // b.any
  40dba8:	mov	w19, #0x0                   	// #0
  40dbac:	b	40de74 <worker_lock_block_device+0x834>
  40dbb0:	ldr	w0, [sp, #88]
  40dbb4:	cmp	w0, #0x0
  40dbb8:	b.ge	40dc80 <worker_lock_block_device+0x640>  // b.tcont
  40dbbc:	str	xzr, [sp, #160]
  40dbc0:	ldr	x0, [sp, #72]
  40dbc4:	str	x0, [sp, #224]
  40dbc8:	mov	w0, #0x7                   	// #7
  40dbcc:	str	w0, [sp, #128]
  40dbd0:	ldr	w0, [sp, #88]
  40dbd4:	str	w0, [sp, #132]
  40dbd8:	ldr	x0, [sp, #224]
  40dbdc:	cmp	x0, #0x0
  40dbe0:	b.eq	40dc1c <worker_lock_block_device+0x5dc>  // b.none
  40dbe4:	mov	w0, #0x1                   	// #1
  40dbe8:	bl	40be30 <log_get_max_level_realm@plt>
  40dbec:	mov	w1, w0
  40dbf0:	ldr	w0, [sp, #128]
  40dbf4:	cmp	w0, w1
  40dbf8:	cset	w0, le
  40dbfc:	and	w0, w0, #0xff
  40dc00:	and	x0, x0, #0xff
  40dc04:	cmp	x0, #0x0
  40dc08:	b.eq	40dc1c <worker_lock_block_device+0x5dc>  // b.none
  40dc0c:	add	x0, sp, #0xa0
  40dc10:	mov	x1, x0
  40dc14:	ldr	x0, [sp, #224]
  40dc18:	bl	40aba0 <sd_device_get_sysname@plt>
  40dc1c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40dc20:	add	x2, x0, #0x66b
  40dc24:	ldr	x0, [sp, #160]
  40dc28:	cmp	x0, #0x0
  40dc2c:	b.eq	40dc3c <worker_lock_block_device+0x5fc>  // b.none
  40dc30:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40dc34:	add	x0, x0, #0x730
  40dc38:	b	40dc40 <worker_lock_block_device+0x600>
  40dc3c:	mov	x0, #0x0                   	// #0
  40dc40:	ldr	x3, [sp, #160]
  40dc44:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40dc48:	add	x1, x1, #0x8a0
  40dc4c:	str	x1, [sp, #8]
  40dc50:	str	xzr, [sp]
  40dc54:	mov	x7, #0x0                   	// #0
  40dc58:	mov	x6, x3
  40dc5c:	mov	x5, x0
  40dc60:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40dc64:	add	x4, x0, #0x100
  40dc68:	mov	w3, #0x171                 	// #369
  40dc6c:	ldr	w1, [sp, #132]
  40dc70:	ldr	w0, [sp, #128]
  40dc74:	bl	40b020 <log_object_internal@plt>
  40dc78:	mov	w19, w0
  40dc7c:	b	40de74 <worker_lock_block_device+0x834>
  40dc80:	ldr	x0, [sp, #152]
  40dc84:	mov	w1, #0x8800                	// #34816
  40dc88:	movk	w1, #0x8, lsl #16
  40dc8c:	bl	40bcb0 <open64@plt>
  40dc90:	str	w0, [sp, #84]
  40dc94:	ldr	w0, [sp, #84]
  40dc98:	cmp	w0, #0x0
  40dc9c:	b.ge	40dd70 <worker_lock_block_device+0x730>  // b.tcont
  40dca0:	str	xzr, [sp, #160]
  40dca4:	ldr	x0, [sp, #72]
  40dca8:	str	x0, [sp, #216]
  40dcac:	mov	w0, #0x7                   	// #7
  40dcb0:	str	w0, [sp, #120]
  40dcb4:	bl	40b040 <__errno_location@plt>
  40dcb8:	ldr	w0, [x0]
  40dcbc:	str	w0, [sp, #124]
  40dcc0:	ldr	x0, [sp, #216]
  40dcc4:	cmp	x0, #0x0
  40dcc8:	b.eq	40dd04 <worker_lock_block_device+0x6c4>  // b.none
  40dccc:	mov	w0, #0x1                   	// #1
  40dcd0:	bl	40be30 <log_get_max_level_realm@plt>
  40dcd4:	mov	w1, w0
  40dcd8:	ldr	w0, [sp, #120]
  40dcdc:	cmp	w0, w1
  40dce0:	cset	w0, le
  40dce4:	and	w0, w0, #0xff
  40dce8:	and	x0, x0, #0xff
  40dcec:	cmp	x0, #0x0
  40dcf0:	b.eq	40dd04 <worker_lock_block_device+0x6c4>  // b.none
  40dcf4:	add	x0, sp, #0xa0
  40dcf8:	mov	x1, x0
  40dcfc:	ldr	x0, [sp, #216]
  40dd00:	bl	40aba0 <sd_device_get_sysname@plt>
  40dd04:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40dd08:	add	x2, x0, #0x66b
  40dd0c:	ldr	x0, [sp, #160]
  40dd10:	cmp	x0, #0x0
  40dd14:	b.eq	40dd24 <worker_lock_block_device+0x6e4>  // b.none
  40dd18:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40dd1c:	add	x0, x0, #0x730
  40dd20:	b	40dd28 <worker_lock_block_device+0x6e8>
  40dd24:	mov	x0, #0x0                   	// #0
  40dd28:	ldr	x3, [sp, #160]
  40dd2c:	ldr	x1, [sp, #152]
  40dd30:	str	x1, [sp, #16]
  40dd34:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40dd38:	add	x1, x1, #0x8c0
  40dd3c:	str	x1, [sp, #8]
  40dd40:	str	xzr, [sp]
  40dd44:	mov	x7, #0x0                   	// #0
  40dd48:	mov	x6, x3
  40dd4c:	mov	x5, x0
  40dd50:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40dd54:	add	x4, x0, #0x100
  40dd58:	mov	w3, #0x175                 	// #373
  40dd5c:	ldr	w1, [sp, #124]
  40dd60:	ldr	w0, [sp, #120]
  40dd64:	bl	40b020 <log_object_internal@plt>
  40dd68:	mov	w19, #0x0                   	// #0
  40dd6c:	b	40de74 <worker_lock_block_device+0x834>
  40dd70:	ldr	w0, [sp, #84]
  40dd74:	mov	w1, #0x5                   	// #5
  40dd78:	bl	40ab40 <flock@plt>
  40dd7c:	cmp	w0, #0x0
  40dd80:	b.ge	40de54 <worker_lock_block_device+0x814>  // b.tcont
  40dd84:	str	xzr, [sp, #160]
  40dd88:	ldr	x0, [sp, #72]
  40dd8c:	str	x0, [sp, #208]
  40dd90:	mov	w0, #0x7                   	// #7
  40dd94:	str	w0, [sp, #112]
  40dd98:	bl	40b040 <__errno_location@plt>
  40dd9c:	ldr	w0, [x0]
  40dda0:	str	w0, [sp, #116]
  40dda4:	ldr	x0, [sp, #208]
  40dda8:	cmp	x0, #0x0
  40ddac:	b.eq	40dde8 <worker_lock_block_device+0x7a8>  // b.none
  40ddb0:	mov	w0, #0x1                   	// #1
  40ddb4:	bl	40be30 <log_get_max_level_realm@plt>
  40ddb8:	mov	w1, w0
  40ddbc:	ldr	w0, [sp, #112]
  40ddc0:	cmp	w0, w1
  40ddc4:	cset	w0, le
  40ddc8:	and	w0, w0, #0xff
  40ddcc:	and	x0, x0, #0xff
  40ddd0:	cmp	x0, #0x0
  40ddd4:	b.eq	40dde8 <worker_lock_block_device+0x7a8>  // b.none
  40ddd8:	add	x0, sp, #0xa0
  40dddc:	mov	x1, x0
  40dde0:	ldr	x0, [sp, #208]
  40dde4:	bl	40aba0 <sd_device_get_sysname@plt>
  40dde8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ddec:	add	x2, x0, #0x66b
  40ddf0:	ldr	x0, [sp, #160]
  40ddf4:	cmp	x0, #0x0
  40ddf8:	b.eq	40de08 <worker_lock_block_device+0x7c8>  // b.none
  40ddfc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40de00:	add	x0, x0, #0x730
  40de04:	b	40de0c <worker_lock_block_device+0x7cc>
  40de08:	mov	x0, #0x0                   	// #0
  40de0c:	ldr	x3, [sp, #160]
  40de10:	ldr	x1, [sp, #152]
  40de14:	str	x1, [sp, #16]
  40de18:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40de1c:	add	x1, x1, #0x8e8
  40de20:	str	x1, [sp, #8]
  40de24:	str	xzr, [sp]
  40de28:	mov	x7, #0x0                   	// #0
  40de2c:	mov	x6, x3
  40de30:	mov	x5, x0
  40de34:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40de38:	add	x4, x0, #0x100
  40de3c:	mov	w3, #0x17a                 	// #378
  40de40:	ldr	w1, [sp, #116]
  40de44:	ldr	w0, [sp, #112]
  40de48:	bl	40b020 <log_object_internal@plt>
  40de4c:	mov	w19, w0
  40de50:	b	40de74 <worker_lock_block_device+0x834>
  40de54:	ldr	w0, [sp, #84]
  40de58:	str	w0, [sp, #108]
  40de5c:	mov	w0, #0xffffffff            	// #-1
  40de60:	str	w0, [sp, #84]
  40de64:	ldr	w1, [sp, #108]
  40de68:	ldr	x0, [sp, #64]
  40de6c:	str	w1, [x0]
  40de70:	mov	w19, #0x1                   	// #1
  40de74:	add	x0, sp, #0x54
  40de78:	bl	40c374 <closep>
  40de7c:	mov	w1, w19
  40de80:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40de84:	add	x0, x0, #0x7a8
  40de88:	ldr	x2, [sp, #280]
  40de8c:	ldr	x0, [x0]
  40de90:	eor	x0, x2, x0
  40de94:	cmp	x0, #0x0
  40de98:	b.eq	40dea0 <worker_lock_block_device+0x860>  // b.none
  40de9c:	bl	40b280 <__stack_chk_fail@plt>
  40dea0:	mov	w0, w1
  40dea4:	ldr	x19, [sp, #48]
  40dea8:	ldp	x29, x30, [sp, #32]
  40deac:	add	sp, sp, #0x120
  40deb0:	ret

000000000040deb4 <worker_process_device>:
  40deb4:	sub	sp, sp, #0xe0
  40deb8:	stp	x29, x30, [sp, #32]
  40debc:	add	x29, sp, #0x20
  40dec0:	stp	x19, x20, [sp, #48]
  40dec4:	stp	x21, x22, [sp, #64]
  40dec8:	str	x0, [sp, #88]
  40decc:	str	x1, [sp, #80]
  40ded0:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40ded4:	add	x0, x0, #0x7a8
  40ded8:	ldr	x1, [x0]
  40dedc:	str	x1, [sp, #216]
  40dee0:	mov	x1, #0x0                   	// #0
  40dee4:	str	xzr, [sp, #152]
  40dee8:	mov	w0, #0xffffffff            	// #-1
  40deec:	str	w0, [sp, #100]
  40def0:	ldr	x0, [sp, #88]
  40def4:	cmp	x0, #0x0
  40def8:	cset	w0, eq  // eq = none
  40defc:	and	w0, w0, #0xff
  40df00:	and	x0, x0, #0xff
  40df04:	cmp	x0, #0x0
  40df08:	b.eq	40df34 <worker_process_device+0x80>  // b.none
  40df0c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40df10:	add	x1, x0, #0x66b
  40df14:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40df18:	add	x4, x0, #0x120
  40df1c:	mov	w3, #0x187                 	// #391
  40df20:	mov	x2, x1
  40df24:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40df28:	add	x1, x0, #0x6f8
  40df2c:	mov	w0, #0x1                   	// #1
  40df30:	bl	40abb0 <log_assert_failed_realm@plt>
  40df34:	ldr	x0, [sp, #80]
  40df38:	cmp	x0, #0x0
  40df3c:	cset	w0, eq  // eq = none
  40df40:	and	w0, w0, #0xff
  40df44:	and	x0, x0, #0xff
  40df48:	cmp	x0, #0x0
  40df4c:	b.eq	40df78 <worker_process_device+0xc4>  // b.none
  40df50:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40df54:	add	x1, x0, #0x66b
  40df58:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40df5c:	add	x4, x0, #0x120
  40df60:	mov	w3, #0x188                 	// #392
  40df64:	mov	x2, x1
  40df68:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40df6c:	add	x1, x0, #0x7f8
  40df70:	mov	w0, #0x1                   	// #1
  40df74:	bl	40abb0 <log_assert_failed_realm@plt>
  40df78:	add	x0, sp, #0xa0
  40df7c:	mov	x1, x0
  40df80:	ldr	x0, [sp, #80]
  40df84:	bl	40a690 <device_get_seqnum@plt>
  40df88:	str	w0, [sp, #108]
  40df8c:	ldr	w0, [sp, #108]
  40df90:	cmp	w0, #0x0
  40df94:	b.ge	40e05c <worker_process_device+0x1a8>  // b.tcont
  40df98:	str	xzr, [sp, #168]
  40df9c:	ldr	x0, [sp, #80]
  40dfa0:	str	x0, [sp, #208]
  40dfa4:	mov	w0, #0x7                   	// #7
  40dfa8:	str	w0, [sp, #144]
  40dfac:	ldr	w0, [sp, #108]
  40dfb0:	str	w0, [sp, #148]
  40dfb4:	ldr	x0, [sp, #208]
  40dfb8:	cmp	x0, #0x0
  40dfbc:	b.eq	40dff8 <worker_process_device+0x144>  // b.none
  40dfc0:	mov	w0, #0x1                   	// #1
  40dfc4:	bl	40be30 <log_get_max_level_realm@plt>
  40dfc8:	mov	w1, w0
  40dfcc:	ldr	w0, [sp, #144]
  40dfd0:	cmp	w0, w1
  40dfd4:	cset	w0, le
  40dfd8:	and	w0, w0, #0xff
  40dfdc:	and	x0, x0, #0xff
  40dfe0:	cmp	x0, #0x0
  40dfe4:	b.eq	40dff8 <worker_process_device+0x144>  // b.none
  40dfe8:	add	x0, sp, #0xa8
  40dfec:	mov	x1, x0
  40dff0:	ldr	x0, [sp, #208]
  40dff4:	bl	40aba0 <sd_device_get_sysname@plt>
  40dff8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40dffc:	add	x2, x0, #0x66b
  40e000:	ldr	x0, [sp, #168]
  40e004:	cmp	x0, #0x0
  40e008:	b.eq	40e018 <worker_process_device+0x164>  // b.none
  40e00c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e010:	add	x0, x0, #0x730
  40e014:	b	40e01c <worker_process_device+0x168>
  40e018:	mov	x0, #0x0                   	// #0
  40e01c:	ldr	x3, [sp, #168]
  40e020:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40e024:	add	x1, x1, #0x920
  40e028:	str	x1, [sp, #8]
  40e02c:	str	xzr, [sp]
  40e030:	mov	x7, #0x0                   	// #0
  40e034:	mov	x6, x3
  40e038:	mov	x5, x0
  40e03c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e040:	add	x4, x0, #0x138
  40e044:	mov	w3, #0x18c                 	// #396
  40e048:	ldr	w1, [sp, #148]
  40e04c:	ldr	w0, [sp, #144]
  40e050:	bl	40b020 <log_object_internal@plt>
  40e054:	mov	w19, w0
  40e058:	b	40e4c8 <worker_process_device+0x614>
  40e05c:	add	x0, sp, #0x68
  40e060:	mov	x1, x0
  40e064:	ldr	x0, [sp, #80]
  40e068:	bl	40b4b0 <device_get_action@plt>
  40e06c:	str	w0, [sp, #108]
  40e070:	ldr	w0, [sp, #108]
  40e074:	cmp	w0, #0x0
  40e078:	b.ge	40e140 <worker_process_device+0x28c>  // b.tcont
  40e07c:	str	xzr, [sp, #168]
  40e080:	ldr	x0, [sp, #80]
  40e084:	str	x0, [sp, #200]
  40e088:	mov	w0, #0x7                   	// #7
  40e08c:	str	w0, [sp, #136]
  40e090:	ldr	w0, [sp, #108]
  40e094:	str	w0, [sp, #140]
  40e098:	ldr	x0, [sp, #200]
  40e09c:	cmp	x0, #0x0
  40e0a0:	b.eq	40e0dc <worker_process_device+0x228>  // b.none
  40e0a4:	mov	w0, #0x1                   	// #1
  40e0a8:	bl	40be30 <log_get_max_level_realm@plt>
  40e0ac:	mov	w1, w0
  40e0b0:	ldr	w0, [sp, #136]
  40e0b4:	cmp	w0, w1
  40e0b8:	cset	w0, le
  40e0bc:	and	w0, w0, #0xff
  40e0c0:	and	x0, x0, #0xff
  40e0c4:	cmp	x0, #0x0
  40e0c8:	b.eq	40e0dc <worker_process_device+0x228>  // b.none
  40e0cc:	add	x0, sp, #0xa8
  40e0d0:	mov	x1, x0
  40e0d4:	ldr	x0, [sp, #200]
  40e0d8:	bl	40aba0 <sd_device_get_sysname@plt>
  40e0dc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e0e0:	add	x2, x0, #0x66b
  40e0e4:	ldr	x0, [sp, #168]
  40e0e8:	cmp	x0, #0x0
  40e0ec:	b.eq	40e0fc <worker_process_device+0x248>  // b.none
  40e0f0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e0f4:	add	x0, x0, #0x730
  40e0f8:	b	40e100 <worker_process_device+0x24c>
  40e0fc:	mov	x0, #0x0                   	// #0
  40e100:	ldr	x3, [sp, #168]
  40e104:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40e108:	add	x1, x1, #0x940
  40e10c:	str	x1, [sp, #8]
  40e110:	str	xzr, [sp]
  40e114:	mov	x7, #0x0                   	// #0
  40e118:	mov	x6, x3
  40e11c:	mov	x5, x0
  40e120:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e124:	add	x4, x0, #0x138
  40e128:	mov	w3, #0x190                 	// #400
  40e12c:	ldr	w1, [sp, #140]
  40e130:	ldr	w0, [sp, #136]
  40e134:	bl	40b020 <log_object_internal@plt>
  40e138:	mov	w19, w0
  40e13c:	b	40e4c8 <worker_process_device+0x614>
  40e140:	str	xzr, [sp, #168]
  40e144:	ldr	x0, [sp, #80]
  40e148:	str	x0, [sp, #176]
  40e14c:	mov	w0, #0x7                   	// #7
  40e150:	str	w0, [sp, #112]
  40e154:	str	wzr, [sp, #116]
  40e158:	ldr	x0, [sp, #176]
  40e15c:	cmp	x0, #0x0
  40e160:	b.eq	40e19c <worker_process_device+0x2e8>  // b.none
  40e164:	mov	w0, #0x1                   	// #1
  40e168:	bl	40be30 <log_get_max_level_realm@plt>
  40e16c:	mov	w1, w0
  40e170:	ldr	w0, [sp, #112]
  40e174:	cmp	w0, w1
  40e178:	cset	w0, le
  40e17c:	and	w0, w0, #0xff
  40e180:	and	x0, x0, #0xff
  40e184:	cmp	x0, #0x0
  40e188:	b.eq	40e19c <worker_process_device+0x2e8>  // b.none
  40e18c:	add	x0, sp, #0xa8
  40e190:	mov	x1, x0
  40e194:	ldr	x0, [sp, #176]
  40e198:	bl	40aba0 <sd_device_get_sysname@plt>
  40e19c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e1a0:	add	x21, x0, #0x66b
  40e1a4:	ldr	x0, [sp, #168]
  40e1a8:	cmp	x0, #0x0
  40e1ac:	b.eq	40e1bc <worker_process_device+0x308>  // b.none
  40e1b0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e1b4:	add	x19, x0, #0x730
  40e1b8:	b	40e1c0 <worker_process_device+0x30c>
  40e1bc:	mov	x19, #0x0                   	// #0
  40e1c0:	ldr	x22, [sp, #168]
  40e1c4:	ldr	x20, [sp, #160]
  40e1c8:	ldr	w0, [sp, #104]
  40e1cc:	bl	40a370 <device_action_to_string@plt>
  40e1d0:	str	x0, [sp, #24]
  40e1d4:	str	x20, [sp, #16]
  40e1d8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e1dc:	add	x0, x0, #0x960
  40e1e0:	str	x0, [sp, #8]
  40e1e4:	str	xzr, [sp]
  40e1e8:	mov	x7, #0x0                   	// #0
  40e1ec:	mov	x6, x22
  40e1f0:	mov	x5, x19
  40e1f4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e1f8:	add	x4, x0, #0x138
  40e1fc:	mov	w3, #0x192                 	// #402
  40e200:	mov	x2, x21
  40e204:	ldr	w1, [sp, #116]
  40e208:	ldr	w0, [sp, #112]
  40e20c:	bl	40b020 <log_object_internal@plt>
  40e210:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40e214:	add	x0, x0, #0x198
  40e218:	ldr	x1, [x0]
  40e21c:	ldr	x0, [sp, #88]
  40e220:	ldr	x0, [x0, #56]
  40e224:	mov	x2, x0
  40e228:	ldr	x0, [sp, #80]
  40e22c:	bl	41726c <udev_event_new>
  40e230:	str	x0, [sp, #152]
  40e234:	ldr	x0, [sp, #152]
  40e238:	cmp	x0, #0x0
  40e23c:	b.ne	40e248 <worker_process_device+0x394>  // b.any
  40e240:	mov	w19, #0xfffffff4            	// #-12
  40e244:	b	40e4c8 <worker_process_device+0x614>
  40e248:	add	x0, sp, #0x64
  40e24c:	mov	x1, x0
  40e250:	ldr	x0, [sp, #80]
  40e254:	bl	40d640 <worker_lock_block_device>
  40e258:	str	w0, [sp, #108]
  40e25c:	ldr	w0, [sp, #108]
  40e260:	cmp	w0, #0x0
  40e264:	b.ge	40e270 <worker_process_device+0x3bc>  // b.tcont
  40e268:	ldr	w19, [sp, #108]
  40e26c:	b	40e4c8 <worker_process_device+0x614>
  40e270:	ldr	x4, [sp, #152]
  40e274:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40e278:	add	x0, x0, #0x8
  40e27c:	ldr	x1, [x0]
  40e280:	ldr	x0, [sp, #88]
  40e284:	ldr	x2, [x0, #48]
  40e288:	ldr	x0, [sp, #88]
  40e28c:	ldr	x0, [x0, #40]
  40e290:	mov	x3, x0
  40e294:	mov	x0, x4
  40e298:	bl	41b830 <udev_event_execute_rules>
  40e29c:	str	w0, [sp, #108]
  40e2a0:	ldr	w0, [sp, #108]
  40e2a4:	cmp	w0, #0x0
  40e2a8:	b.ge	40e2b4 <worker_process_device+0x400>  // b.tcont
  40e2ac:	ldr	w19, [sp, #108]
  40e2b0:	b	40e4c8 <worker_process_device+0x614>
  40e2b4:	ldr	x2, [sp, #152]
  40e2b8:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40e2bc:	add	x0, x0, #0x8
  40e2c0:	ldr	x0, [x0]
  40e2c4:	mov	x1, x0
  40e2c8:	mov	x0, x2
  40e2cc:	bl	41c03c <udev_event_execute_run>
  40e2d0:	ldr	x0, [sp, #88]
  40e2d4:	ldr	x0, [x0, #56]
  40e2d8:	cmp	x0, #0x0
  40e2dc:	b.ne	40e2f8 <worker_process_device+0x444>  // b.any
  40e2e0:	ldr	x0, [sp, #152]
  40e2e4:	ldr	x0, [x0, #88]
  40e2e8:	bl	40aa10 <sd_netlink_ref@plt>
  40e2ec:	mov	x1, x0
  40e2f0:	ldr	x0, [sp, #88]
  40e2f4:	str	x1, [x0, #56]
  40e2f8:	ldr	x0, [sp, #152]
  40e2fc:	ldrb	w0, [x0, #105]
  40e300:	and	w0, w0, #0x1
  40e304:	and	w0, w0, #0xff
  40e308:	cmp	w0, #0x0
  40e30c:	b.eq	40e3f4 <worker_process_device+0x540>  // b.none
  40e310:	ldr	x0, [sp, #80]
  40e314:	bl	4350c8 <udev_watch_begin>
  40e318:	ldr	x0, [sp, #80]
  40e31c:	bl	40a940 <device_update_db@plt>
  40e320:	str	w0, [sp, #108]
  40e324:	ldr	w0, [sp, #108]
  40e328:	cmp	w0, #0x0
  40e32c:	b.ge	40e3f4 <worker_process_device+0x540>  // b.tcont
  40e330:	str	xzr, [sp, #168]
  40e334:	ldr	x0, [sp, #80]
  40e338:	str	x0, [sp, #184]
  40e33c:	mov	w0, #0x7                   	// #7
  40e340:	str	w0, [sp, #120]
  40e344:	ldr	w0, [sp, #108]
  40e348:	str	w0, [sp, #124]
  40e34c:	ldr	x0, [sp, #184]
  40e350:	cmp	x0, #0x0
  40e354:	b.eq	40e390 <worker_process_device+0x4dc>  // b.none
  40e358:	mov	w0, #0x1                   	// #1
  40e35c:	bl	40be30 <log_get_max_level_realm@plt>
  40e360:	mov	w1, w0
  40e364:	ldr	w0, [sp, #120]
  40e368:	cmp	w0, w1
  40e36c:	cset	w0, le
  40e370:	and	w0, w0, #0xff
  40e374:	and	x0, x0, #0xff
  40e378:	cmp	x0, #0x0
  40e37c:	b.eq	40e390 <worker_process_device+0x4dc>  // b.none
  40e380:	add	x0, sp, #0xa8
  40e384:	mov	x1, x0
  40e388:	ldr	x0, [sp, #184]
  40e38c:	bl	40aba0 <sd_device_get_sysname@plt>
  40e390:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e394:	add	x2, x0, #0x66b
  40e398:	ldr	x0, [sp, #168]
  40e39c:	cmp	x0, #0x0
  40e3a0:	b.eq	40e3b0 <worker_process_device+0x4fc>  // b.none
  40e3a4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e3a8:	add	x0, x0, #0x730
  40e3ac:	b	40e3b4 <worker_process_device+0x500>
  40e3b0:	mov	x0, #0x0                   	// #0
  40e3b4:	ldr	x3, [sp, #168]
  40e3b8:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40e3bc:	add	x1, x1, #0x990
  40e3c0:	str	x1, [sp, #8]
  40e3c4:	str	xzr, [sp]
  40e3c8:	mov	x7, #0x0                   	// #0
  40e3cc:	mov	x6, x3
  40e3d0:	mov	x5, x0
  40e3d4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e3d8:	add	x4, x0, #0x138
  40e3dc:	mov	w3, #0x1ad                 	// #429
  40e3e0:	ldr	w1, [sp, #124]
  40e3e4:	ldr	w0, [sp, #120]
  40e3e8:	bl	40b020 <log_object_internal@plt>
  40e3ec:	mov	w19, w0
  40e3f0:	b	40e4c8 <worker_process_device+0x614>
  40e3f4:	str	xzr, [sp, #168]
  40e3f8:	ldr	x0, [sp, #80]
  40e3fc:	str	x0, [sp, #192]
  40e400:	mov	w0, #0x7                   	// #7
  40e404:	str	w0, [sp, #128]
  40e408:	str	wzr, [sp, #132]
  40e40c:	ldr	x0, [sp, #192]
  40e410:	cmp	x0, #0x0
  40e414:	b.eq	40e450 <worker_process_device+0x59c>  // b.none
  40e418:	mov	w0, #0x1                   	// #1
  40e41c:	bl	40be30 <log_get_max_level_realm@plt>
  40e420:	mov	w1, w0
  40e424:	ldr	w0, [sp, #128]
  40e428:	cmp	w0, w1
  40e42c:	cset	w0, le
  40e430:	and	w0, w0, #0xff
  40e434:	and	x0, x0, #0xff
  40e438:	cmp	x0, #0x0
  40e43c:	b.eq	40e450 <worker_process_device+0x59c>  // b.none
  40e440:	add	x0, sp, #0xa8
  40e444:	mov	x1, x0
  40e448:	ldr	x0, [sp, #192]
  40e44c:	bl	40aba0 <sd_device_get_sysname@plt>
  40e450:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e454:	add	x21, x0, #0x66b
  40e458:	ldr	x0, [sp, #168]
  40e45c:	cmp	x0, #0x0
  40e460:	b.eq	40e470 <worker_process_device+0x5bc>  // b.none
  40e464:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e468:	add	x19, x0, #0x730
  40e46c:	b	40e474 <worker_process_device+0x5c0>
  40e470:	mov	x19, #0x0                   	// #0
  40e474:	ldr	x22, [sp, #168]
  40e478:	ldr	x20, [sp, #160]
  40e47c:	ldr	w0, [sp, #104]
  40e480:	bl	40a370 <device_action_to_string@plt>
  40e484:	str	x0, [sp, #24]
  40e488:	str	x20, [sp, #16]
  40e48c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e490:	add	x0, x0, #0x9c8
  40e494:	str	x0, [sp, #8]
  40e498:	str	xzr, [sp]
  40e49c:	mov	x7, #0x0                   	// #0
  40e4a0:	mov	x6, x22
  40e4a4:	mov	x5, x19
  40e4a8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e4ac:	add	x4, x0, #0x138
  40e4b0:	mov	w3, #0x1b0                 	// #432
  40e4b4:	mov	x2, x21
  40e4b8:	ldr	w1, [sp, #132]
  40e4bc:	ldr	w0, [sp, #128]
  40e4c0:	bl	40b020 <log_object_internal@plt>
  40e4c4:	mov	w19, #0x0                   	// #0
  40e4c8:	add	x0, sp, #0x64
  40e4cc:	bl	40c374 <closep>
  40e4d0:	add	x0, sp, #0x98
  40e4d4:	bl	40c6a4 <udev_event_freep>
  40e4d8:	mov	w1, w19
  40e4dc:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40e4e0:	add	x0, x0, #0x7a8
  40e4e4:	ldr	x2, [sp, #216]
  40e4e8:	ldr	x0, [x0]
  40e4ec:	eor	x0, x2, x0
  40e4f0:	cmp	x0, #0x0
  40e4f4:	b.eq	40e4fc <worker_process_device+0x648>  // b.none
  40e4f8:	bl	40b280 <__stack_chk_fail@plt>
  40e4fc:	mov	w0, w1
  40e500:	ldp	x19, x20, [sp, #48]
  40e504:	ldp	x21, x22, [sp, #64]
  40e508:	ldp	x29, x30, [sp, #32]
  40e50c:	add	sp, sp, #0xe0
  40e510:	ret

000000000040e514 <worker_device_monitor_handler>:
  40e514:	sub	sp, sp, #0x90
  40e518:	stp	x29, x30, [sp, #16]
  40e51c:	add	x29, sp, #0x10
  40e520:	str	x0, [sp, #56]
  40e524:	str	x1, [sp, #48]
  40e528:	str	x2, [sp, #40]
  40e52c:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40e530:	add	x0, x0, #0x7a8
  40e534:	ldr	x1, [x0]
  40e538:	str	x1, [sp, #136]
  40e53c:	mov	x1, #0x0                   	// #0
  40e540:	ldr	x0, [sp, #40]
  40e544:	str	x0, [sp, #104]
  40e548:	ldr	x0, [sp, #48]
  40e54c:	cmp	x0, #0x0
  40e550:	cset	w0, eq  // eq = none
  40e554:	and	w0, w0, #0xff
  40e558:	and	x0, x0, #0xff
  40e55c:	cmp	x0, #0x0
  40e560:	b.eq	40e58c <worker_device_monitor_handler+0x78>  // b.none
  40e564:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e568:	add	x1, x0, #0x66b
  40e56c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e570:	add	x4, x0, #0x150
  40e574:	mov	w3, #0x1ba                 	// #442
  40e578:	mov	x2, x1
  40e57c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e580:	add	x1, x0, #0x7f8
  40e584:	mov	w0, #0x1                   	// #1
  40e588:	bl	40abb0 <log_assert_failed_realm@plt>
  40e58c:	ldr	x0, [sp, #104]
  40e590:	cmp	x0, #0x0
  40e594:	cset	w0, eq  // eq = none
  40e598:	and	w0, w0, #0xff
  40e59c:	and	x0, x0, #0xff
  40e5a0:	cmp	x0, #0x0
  40e5a4:	b.eq	40e5d0 <worker_device_monitor_handler+0xbc>  // b.none
  40e5a8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e5ac:	add	x1, x0, #0x66b
  40e5b0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e5b4:	add	x4, x0, #0x150
  40e5b8:	mov	w3, #0x1bb                 	// #443
  40e5bc:	mov	x2, x1
  40e5c0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e5c4:	add	x1, x0, #0x6f8
  40e5c8:	mov	w0, #0x1                   	// #1
  40e5cc:	bl	40abb0 <log_assert_failed_realm@plt>
  40e5d0:	ldr	x1, [sp, #48]
  40e5d4:	ldr	x0, [sp, #104]
  40e5d8:	bl	40deb4 <worker_process_device>
  40e5dc:	str	w0, [sp, #68]
  40e5e0:	ldr	w0, [sp, #68]
  40e5e4:	cmp	w0, #0x0
  40e5e8:	b.ge	40e6a8 <worker_device_monitor_handler+0x194>  // b.tcont
  40e5ec:	str	xzr, [sp, #96]
  40e5f0:	ldr	x0, [sp, #48]
  40e5f4:	str	x0, [sp, #112]
  40e5f8:	mov	w0, #0x4                   	// #4
  40e5fc:	str	w0, [sp, #72]
  40e600:	ldr	w0, [sp, #68]
  40e604:	str	w0, [sp, #76]
  40e608:	ldr	x0, [sp, #112]
  40e60c:	cmp	x0, #0x0
  40e610:	b.eq	40e64c <worker_device_monitor_handler+0x138>  // b.none
  40e614:	mov	w0, #0x1                   	// #1
  40e618:	bl	40be30 <log_get_max_level_realm@plt>
  40e61c:	mov	w1, w0
  40e620:	ldr	w0, [sp, #72]
  40e624:	cmp	w0, w1
  40e628:	cset	w0, le
  40e62c:	and	w0, w0, #0xff
  40e630:	and	x0, x0, #0xff
  40e634:	cmp	x0, #0x0
  40e638:	b.eq	40e64c <worker_device_monitor_handler+0x138>  // b.none
  40e63c:	add	x0, sp, #0x60
  40e640:	mov	x1, x0
  40e644:	ldr	x0, [sp, #112]
  40e648:	bl	40aba0 <sd_device_get_sysname@plt>
  40e64c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e650:	add	x2, x0, #0x66b
  40e654:	ldr	x0, [sp, #96]
  40e658:	cmp	x0, #0x0
  40e65c:	b.eq	40e66c <worker_device_monitor_handler+0x158>  // b.none
  40e660:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e664:	add	x0, x0, #0x730
  40e668:	b	40e670 <worker_device_monitor_handler+0x15c>
  40e66c:	mov	x0, #0x0                   	// #0
  40e670:	ldr	x3, [sp, #96]
  40e674:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40e678:	add	x1, x1, #0x9f8
  40e67c:	str	x1, [sp, #8]
  40e680:	str	xzr, [sp]
  40e684:	mov	x7, #0x0                   	// #0
  40e688:	mov	x6, x3
  40e68c:	mov	x5, x0
  40e690:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e694:	add	x4, x0, #0x170
  40e698:	mov	w3, #0x1bf                 	// #447
  40e69c:	ldr	w1, [sp, #76]
  40e6a0:	ldr	w0, [sp, #72]
  40e6a4:	bl	40b020 <log_object_internal@plt>
  40e6a8:	ldr	x2, [sp, #48]
  40e6ac:	mov	x1, #0x0                   	// #0
  40e6b0:	ldr	x0, [sp, #56]
  40e6b4:	bl	40aab0 <device_monitor_send_device@plt>
  40e6b8:	str	w0, [sp, #68]
  40e6bc:	ldr	w0, [sp, #68]
  40e6c0:	cmp	w0, #0x0
  40e6c4:	b.ge	40e784 <worker_device_monitor_handler+0x270>  // b.tcont
  40e6c8:	str	xzr, [sp, #96]
  40e6cc:	ldr	x0, [sp, #48]
  40e6d0:	str	x0, [sp, #120]
  40e6d4:	mov	w0, #0x4                   	// #4
  40e6d8:	str	w0, [sp, #80]
  40e6dc:	ldr	w0, [sp, #68]
  40e6e0:	str	w0, [sp, #84]
  40e6e4:	ldr	x0, [sp, #120]
  40e6e8:	cmp	x0, #0x0
  40e6ec:	b.eq	40e728 <worker_device_monitor_handler+0x214>  // b.none
  40e6f0:	mov	w0, #0x1                   	// #1
  40e6f4:	bl	40be30 <log_get_max_level_realm@plt>
  40e6f8:	mov	w1, w0
  40e6fc:	ldr	w0, [sp, #80]
  40e700:	cmp	w0, w1
  40e704:	cset	w0, le
  40e708:	and	w0, w0, #0xff
  40e70c:	and	x0, x0, #0xff
  40e710:	cmp	x0, #0x0
  40e714:	b.eq	40e728 <worker_device_monitor_handler+0x214>  // b.none
  40e718:	add	x0, sp, #0x60
  40e71c:	mov	x1, x0
  40e720:	ldr	x0, [sp, #120]
  40e724:	bl	40aba0 <sd_device_get_sysname@plt>
  40e728:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e72c:	add	x2, x0, #0x66b
  40e730:	ldr	x0, [sp, #96]
  40e734:	cmp	x0, #0x0
  40e738:	b.eq	40e748 <worker_device_monitor_handler+0x234>  // b.none
  40e73c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e740:	add	x0, x0, #0x730
  40e744:	b	40e74c <worker_device_monitor_handler+0x238>
  40e748:	mov	x0, #0x0                   	// #0
  40e74c:	ldr	x3, [sp, #96]
  40e750:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40e754:	add	x1, x1, #0xa20
  40e758:	str	x1, [sp, #8]
  40e75c:	str	xzr, [sp]
  40e760:	mov	x7, #0x0                   	// #0
  40e764:	mov	x6, x3
  40e768:	mov	x5, x0
  40e76c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e770:	add	x4, x0, #0x170
  40e774:	mov	w3, #0x1c4                 	// #452
  40e778:	ldr	w1, [sp, #84]
  40e77c:	ldr	w0, [sp, #80]
  40e780:	bl	40b020 <log_object_internal@plt>
  40e784:	ldr	x0, [sp, #104]
  40e788:	ldr	w0, [x0, #88]
  40e78c:	bl	40d5d8 <worker_send_message>
  40e790:	str	w0, [sp, #68]
  40e794:	ldr	w0, [sp, #68]
  40e798:	cmp	w0, #0x0
  40e79c:	b.ge	40e85c <worker_device_monitor_handler+0x348>  // b.tcont
  40e7a0:	str	xzr, [sp, #96]
  40e7a4:	ldr	x0, [sp, #48]
  40e7a8:	str	x0, [sp, #128]
  40e7ac:	mov	w0, #0x4                   	// #4
  40e7b0:	str	w0, [sp, #88]
  40e7b4:	ldr	w0, [sp, #68]
  40e7b8:	str	w0, [sp, #92]
  40e7bc:	ldr	x0, [sp, #128]
  40e7c0:	cmp	x0, #0x0
  40e7c4:	b.eq	40e800 <worker_device_monitor_handler+0x2ec>  // b.none
  40e7c8:	mov	w0, #0x1                   	// #1
  40e7cc:	bl	40be30 <log_get_max_level_realm@plt>
  40e7d0:	mov	w1, w0
  40e7d4:	ldr	w0, [sp, #88]
  40e7d8:	cmp	w0, w1
  40e7dc:	cset	w0, le
  40e7e0:	and	w0, w0, #0xff
  40e7e4:	and	x0, x0, #0xff
  40e7e8:	cmp	x0, #0x0
  40e7ec:	b.eq	40e800 <worker_device_monitor_handler+0x2ec>  // b.none
  40e7f0:	add	x0, sp, #0x60
  40e7f4:	mov	x1, x0
  40e7f8:	ldr	x0, [sp, #128]
  40e7fc:	bl	40aba0 <sd_device_get_sysname@plt>
  40e800:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e804:	add	x2, x0, #0x66b
  40e808:	ldr	x0, [sp, #96]
  40e80c:	cmp	x0, #0x0
  40e810:	b.eq	40e820 <worker_device_monitor_handler+0x30c>  // b.none
  40e814:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e818:	add	x0, x0, #0x730
  40e81c:	b	40e824 <worker_device_monitor_handler+0x310>
  40e820:	mov	x0, #0x0                   	// #0
  40e824:	ldr	x3, [sp, #96]
  40e828:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40e82c:	add	x1, x1, #0xa48
  40e830:	str	x1, [sp, #8]
  40e834:	str	xzr, [sp]
  40e838:	mov	x7, #0x0                   	// #0
  40e83c:	mov	x6, x3
  40e840:	mov	x5, x0
  40e844:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e848:	add	x4, x0, #0x170
  40e84c:	mov	w3, #0x1c9                 	// #457
  40e850:	ldr	w1, [sp, #92]
  40e854:	ldr	w0, [sp, #88]
  40e858:	bl	40b020 <log_object_internal@plt>
  40e85c:	mov	w0, #0x1                   	// #1
  40e860:	mov	w1, w0
  40e864:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40e868:	add	x0, x0, #0x7a8
  40e86c:	ldr	x2, [sp, #136]
  40e870:	ldr	x0, [x0]
  40e874:	eor	x0, x2, x0
  40e878:	cmp	x0, #0x0
  40e87c:	b.eq	40e884 <worker_device_monitor_handler+0x370>  // b.none
  40e880:	bl	40b280 <__stack_chk_fail@plt>
  40e884:	mov	w0, w1
  40e888:	ldp	x29, x30, [sp, #16]
  40e88c:	add	sp, sp, #0x90
  40e890:	ret

000000000040e894 <worker_main>:
  40e894:	stp	x29, x30, [sp, #-176]!
  40e898:	mov	x29, sp
  40e89c:	str	x19, [sp, #16]
  40e8a0:	str	x0, [sp, #56]
  40e8a4:	str	x1, [sp, #48]
  40e8a8:	str	x2, [sp, #40]
  40e8ac:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40e8b0:	add	x0, x0, #0x7a8
  40e8b4:	ldr	x1, [x0]
  40e8b8:	str	x1, [sp, #168]
  40e8bc:	mov	x1, #0x0                   	// #0
  40e8c0:	ldr	x0, [sp, #40]
  40e8c4:	str	x0, [sp, #152]
  40e8c8:	ldr	x0, [sp, #56]
  40e8cc:	str	x0, [sp, #160]
  40e8d0:	ldr	x0, [sp, #160]
  40e8d4:	cmp	x0, #0x0
  40e8d8:	cset	w0, eq  // eq = none
  40e8dc:	and	w0, w0, #0xff
  40e8e0:	and	x0, x0, #0xff
  40e8e4:	cmp	x0, #0x0
  40e8e8:	b.eq	40e914 <worker_main+0x80>  // b.none
  40e8ec:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e8f0:	add	x1, x0, #0x66b
  40e8f4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e8f8:	add	x4, x0, #0x190
  40e8fc:	mov	w3, #0x1d3                 	// #467
  40e900:	mov	x2, x1
  40e904:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e908:	add	x1, x0, #0x6f8
  40e90c:	mov	w0, #0x1                   	// #1
  40e910:	bl	40abb0 <log_assert_failed_realm@plt>
  40e914:	ldr	x0, [sp, #48]
  40e918:	cmp	x0, #0x0
  40e91c:	cset	w0, eq  // eq = none
  40e920:	and	w0, w0, #0xff
  40e924:	and	x0, x0, #0xff
  40e928:	cmp	x0, #0x0
  40e92c:	b.eq	40e958 <worker_main+0xc4>  // b.none
  40e930:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e934:	add	x1, x0, #0x66b
  40e938:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e93c:	add	x4, x0, #0x190
  40e940:	mov	w3, #0x1d4                 	// #468
  40e944:	mov	x2, x1
  40e948:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e94c:	add	x1, x0, #0xa80
  40e950:	mov	w0, #0x1                   	// #1
  40e954:	bl	40abb0 <log_assert_failed_realm@plt>
  40e958:	ldr	x0, [sp, #152]
  40e95c:	cmp	x0, #0x0
  40e960:	cset	w0, eq  // eq = none
  40e964:	and	w0, w0, #0xff
  40e968:	and	x0, x0, #0xff
  40e96c:	cmp	x0, #0x0
  40e970:	b.eq	40e99c <worker_main+0x108>  // b.none
  40e974:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e978:	add	x1, x0, #0x66b
  40e97c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e980:	add	x4, x0, #0x190
  40e984:	mov	w3, #0x1d5                 	// #469
  40e988:	mov	x2, x1
  40e98c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e990:	add	x1, x0, #0x7f8
  40e994:	mov	w0, #0x1                   	// #1
  40e998:	bl	40abb0 <log_assert_failed_realm@plt>
  40e99c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e9a0:	add	x0, x0, #0xa88
  40e9a4:	bl	40b200 <unsetenv@plt>
  40e9a8:	mov	w3, #0xffffffff            	// #-1
  40e9ac:	mov	w2, #0xf                   	// #15
  40e9b0:	mov	x1, #0x0                   	// #0
  40e9b4:	mov	w0, #0x0                   	// #0
  40e9b8:	bl	40ae30 <sigprocmask_many@plt>
  40e9bc:	lsr	w0, w0, #31
  40e9c0:	and	w0, w0, #0xff
  40e9c4:	and	x0, x0, #0xff
  40e9c8:	cmp	x0, #0x0
  40e9cc:	b.eq	40e9f8 <worker_main+0x164>  // b.none
  40e9d0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e9d4:	add	x1, x0, #0x66b
  40e9d8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40e9dc:	add	x4, x0, #0x190
  40e9e0:	mov	w3, #0x1d9                 	// #473
  40e9e4:	mov	x2, x1
  40e9e8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40e9ec:	add	x1, x0, #0xa98
  40e9f0:	mov	w0, #0x1                   	// #1
  40e9f4:	bl	40abb0 <log_assert_failed_realm@plt>
  40e9f8:	mov	w0, #0x0                   	// #0
  40e9fc:	bl	40bbd0 <set_oom_score_adjust@plt>
  40ea00:	str	w0, [sp, #76]
  40ea04:	ldr	w0, [sp, #76]
  40ea08:	cmp	w0, #0x0
  40ea0c:	b.ge	40ea8c <worker_main+0x1f8>  // b.tcont
  40ea10:	mov	w0, #0x7                   	// #7
  40ea14:	str	w0, [sp, #80]
  40ea18:	ldr	w0, [sp, #76]
  40ea1c:	str	w0, [sp, #84]
  40ea20:	mov	w0, #0x1                   	// #1
  40ea24:	str	w0, [sp, #88]
  40ea28:	ldr	w0, [sp, #88]
  40ea2c:	bl	40be30 <log_get_max_level_realm@plt>
  40ea30:	mov	w1, w0
  40ea34:	ldr	w0, [sp, #80]
  40ea38:	and	w0, w0, #0x7
  40ea3c:	cmp	w1, w0
  40ea40:	b.lt	40ea84 <worker_main+0x1f0>  // b.tstop
  40ea44:	ldr	w0, [sp, #88]
  40ea48:	lsl	w1, w0, #10
  40ea4c:	ldr	w0, [sp, #80]
  40ea50:	orr	w6, w1, w0
  40ea54:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ea58:	add	x1, x0, #0x66b
  40ea5c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ea60:	add	x5, x0, #0xad0
  40ea64:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40ea68:	add	x4, x0, #0x1a0
  40ea6c:	mov	w3, #0x1de                 	// #478
  40ea70:	mov	x2, x1
  40ea74:	ldr	w1, [sp, #84]
  40ea78:	mov	w0, w6
  40ea7c:	bl	40b4f0 <log_internal_realm@plt>
  40ea80:	b	40ea8c <worker_main+0x1f8>
  40ea84:	ldr	w0, [sp, #84]
  40ea88:	cmp	w0, #0x0
  40ea8c:	ldr	x0, [sp, #160]
  40ea90:	bl	40d3f4 <manager_clear_for_worker>
  40ea94:	ldr	x0, [sp, #160]
  40ea98:	bl	40b050 <sd_event_new@plt>
  40ea9c:	str	w0, [sp, #76]
  40eaa0:	ldr	w0, [sp, #76]
  40eaa4:	cmp	w0, #0x0
  40eaa8:	b.ge	40eb3c <worker_main+0x2a8>  // b.tcont
  40eaac:	mov	w0, #0x3                   	// #3
  40eab0:	str	w0, [sp, #140]
  40eab4:	ldr	w0, [sp, #76]
  40eab8:	str	w0, [sp, #144]
  40eabc:	mov	w0, #0x1                   	// #1
  40eac0:	str	w0, [sp, #148]
  40eac4:	ldr	w0, [sp, #148]
  40eac8:	bl	40be30 <log_get_max_level_realm@plt>
  40eacc:	mov	w1, w0
  40ead0:	ldr	w0, [sp, #140]
  40ead4:	and	w0, w0, #0x7
  40ead8:	cmp	w1, w0
  40eadc:	b.lt	40eb24 <worker_main+0x290>  // b.tstop
  40eae0:	ldr	w0, [sp, #148]
  40eae4:	lsl	w1, w0, #10
  40eae8:	ldr	w0, [sp, #140]
  40eaec:	orr	w6, w1, w0
  40eaf0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40eaf4:	add	x1, x0, #0x66b
  40eaf8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40eafc:	add	x5, x0, #0xaf8
  40eb00:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40eb04:	add	x4, x0, #0x1a0
  40eb08:	mov	w3, #0x1e5                 	// #485
  40eb0c:	mov	x2, x1
  40eb10:	ldr	w1, [sp, #144]
  40eb14:	mov	w0, w6
  40eb18:	bl	40b4f0 <log_internal_realm@plt>
  40eb1c:	mov	w19, w0
  40eb20:	b	40ee48 <worker_main+0x5b4>
  40eb24:	ldr	w0, [sp, #144]
  40eb28:	cmp	w0, #0x0
  40eb2c:	cneg	w0, w0, lt  // lt = tstop
  40eb30:	and	w0, w0, #0xff
  40eb34:	neg	w19, w0
  40eb38:	b	40ee48 <worker_main+0x5b4>
  40eb3c:	ldr	x0, [sp, #160]
  40eb40:	ldr	x0, [x0]
  40eb44:	mov	x4, #0x0                   	// #0
  40eb48:	mov	x3, #0x0                   	// #0
  40eb4c:	mov	w2, #0xf                   	// #15
  40eb50:	mov	x1, #0x0                   	// #0
  40eb54:	bl	40bc90 <sd_event_add_signal@plt>
  40eb58:	str	w0, [sp, #76]
  40eb5c:	ldr	w0, [sp, #76]
  40eb60:	cmp	w0, #0x0
  40eb64:	b.ge	40ebf8 <worker_main+0x364>  // b.tcont
  40eb68:	mov	w0, #0x3                   	// #3
  40eb6c:	str	w0, [sp, #128]
  40eb70:	ldr	w0, [sp, #76]
  40eb74:	str	w0, [sp, #132]
  40eb78:	mov	w0, #0x1                   	// #1
  40eb7c:	str	w0, [sp, #136]
  40eb80:	ldr	w0, [sp, #136]
  40eb84:	bl	40be30 <log_get_max_level_realm@plt>
  40eb88:	mov	w1, w0
  40eb8c:	ldr	w0, [sp, #128]
  40eb90:	and	w0, w0, #0x7
  40eb94:	cmp	w1, w0
  40eb98:	b.lt	40ebe0 <worker_main+0x34c>  // b.tstop
  40eb9c:	ldr	w0, [sp, #136]
  40eba0:	lsl	w1, w0, #10
  40eba4:	ldr	w0, [sp, #128]
  40eba8:	orr	w6, w1, w0
  40ebac:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ebb0:	add	x1, x0, #0x66b
  40ebb4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ebb8:	add	x5, x0, #0xb20
  40ebbc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40ebc0:	add	x4, x0, #0x1a0
  40ebc4:	mov	w3, #0x1e9                 	// #489
  40ebc8:	mov	x2, x1
  40ebcc:	ldr	w1, [sp, #132]
  40ebd0:	mov	w0, w6
  40ebd4:	bl	40b4f0 <log_internal_realm@plt>
  40ebd8:	mov	w19, w0
  40ebdc:	b	40ee48 <worker_main+0x5b4>
  40ebe0:	ldr	w0, [sp, #132]
  40ebe4:	cmp	w0, #0x0
  40ebe8:	cneg	w0, w0, lt  // lt = tstop
  40ebec:	and	w0, w0, #0xff
  40ebf0:	neg	w19, w0
  40ebf4:	b	40ee48 <worker_main+0x5b4>
  40ebf8:	ldr	x0, [sp, #160]
  40ebfc:	ldr	x0, [x0]
  40ec00:	mov	x1, x0
  40ec04:	ldr	x0, [sp, #48]
  40ec08:	bl	40a4c0 <sd_device_monitor_attach_event@plt>
  40ec0c:	str	w0, [sp, #76]
  40ec10:	ldr	w0, [sp, #76]
  40ec14:	cmp	w0, #0x0
  40ec18:	b.ge	40ecac <worker_main+0x418>  // b.tcont
  40ec1c:	mov	w0, #0x3                   	// #3
  40ec20:	str	w0, [sp, #116]
  40ec24:	ldr	w0, [sp, #76]
  40ec28:	str	w0, [sp, #120]
  40ec2c:	mov	w0, #0x1                   	// #1
  40ec30:	str	w0, [sp, #124]
  40ec34:	ldr	w0, [sp, #124]
  40ec38:	bl	40be30 <log_get_max_level_realm@plt>
  40ec3c:	mov	w1, w0
  40ec40:	ldr	w0, [sp, #116]
  40ec44:	and	w0, w0, #0x7
  40ec48:	cmp	w1, w0
  40ec4c:	b.lt	40ec94 <worker_main+0x400>  // b.tstop
  40ec50:	ldr	w0, [sp, #124]
  40ec54:	lsl	w1, w0, #10
  40ec58:	ldr	w0, [sp, #116]
  40ec5c:	orr	w6, w1, w0
  40ec60:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ec64:	add	x1, x0, #0x66b
  40ec68:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ec6c:	add	x5, x0, #0xb40
  40ec70:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40ec74:	add	x4, x0, #0x1a0
  40ec78:	mov	w3, #0x1ed                 	// #493
  40ec7c:	mov	x2, x1
  40ec80:	ldr	w1, [sp, #120]
  40ec84:	mov	w0, w6
  40ec88:	bl	40b4f0 <log_internal_realm@plt>
  40ec8c:	mov	w19, w0
  40ec90:	b	40ee48 <worker_main+0x5b4>
  40ec94:	ldr	w0, [sp, #120]
  40ec98:	cmp	w0, #0x0
  40ec9c:	cneg	w0, w0, lt  // lt = tstop
  40eca0:	and	w0, w0, #0xff
  40eca4:	neg	w19, w0
  40eca8:	b	40ee48 <worker_main+0x5b4>
  40ecac:	ldr	x0, [sp, #160]
  40ecb0:	mov	x2, x0
  40ecb4:	adrp	x0, 40e000 <worker_process_device+0x14c>
  40ecb8:	add	x1, x0, #0x514
  40ecbc:	ldr	x0, [sp, #48]
  40ecc0:	bl	40a5c0 <sd_device_monitor_start@plt>
  40ecc4:	str	w0, [sp, #76]
  40ecc8:	ldr	w0, [sp, #76]
  40eccc:	cmp	w0, #0x0
  40ecd0:	b.ge	40ed64 <worker_main+0x4d0>  // b.tcont
  40ecd4:	mov	w0, #0x3                   	// #3
  40ecd8:	str	w0, [sp, #104]
  40ecdc:	ldr	w0, [sp, #76]
  40ece0:	str	w0, [sp, #108]
  40ece4:	mov	w0, #0x1                   	// #1
  40ece8:	str	w0, [sp, #112]
  40ecec:	ldr	w0, [sp, #112]
  40ecf0:	bl	40be30 <log_get_max_level_realm@plt>
  40ecf4:	mov	w1, w0
  40ecf8:	ldr	w0, [sp, #104]
  40ecfc:	and	w0, w0, #0x7
  40ed00:	cmp	w1, w0
  40ed04:	b.lt	40ed4c <worker_main+0x4b8>  // b.tstop
  40ed08:	ldr	w0, [sp, #112]
  40ed0c:	lsl	w1, w0, #10
  40ed10:	ldr	w0, [sp, #104]
  40ed14:	orr	w6, w1, w0
  40ed18:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ed1c:	add	x1, x0, #0x66b
  40ed20:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ed24:	add	x5, x0, #0xb78
  40ed28:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40ed2c:	add	x4, x0, #0x1a0
  40ed30:	mov	w3, #0x1f1                 	// #497
  40ed34:	mov	x2, x1
  40ed38:	ldr	w1, [sp, #108]
  40ed3c:	mov	w0, w6
  40ed40:	bl	40b4f0 <log_internal_realm@plt>
  40ed44:	mov	w19, w0
  40ed48:	b	40ee48 <worker_main+0x5b4>
  40ed4c:	ldr	w0, [sp, #108]
  40ed50:	cmp	w0, #0x0
  40ed54:	cneg	w0, w0, lt  // lt = tstop
  40ed58:	and	w0, w0, #0xff
  40ed5c:	neg	w19, w0
  40ed60:	b	40ee48 <worker_main+0x5b4>
  40ed64:	ldr	x0, [sp, #48]
  40ed68:	bl	40ada0 <sd_device_monitor_get_event_source@plt>
  40ed6c:	mov	x2, x0
  40ed70:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ed74:	add	x1, x0, #0xba0
  40ed78:	mov	x0, x2
  40ed7c:	bl	40bdf0 <sd_event_source_set_description@plt>
  40ed80:	ldr	x0, [sp, #152]
  40ed84:	ldr	x1, [sp, #160]
  40ed88:	mov	x2, x1
  40ed8c:	mov	x1, x0
  40ed90:	ldr	x0, [sp, #48]
  40ed94:	bl	40e514 <worker_device_monitor_handler>
  40ed98:	ldr	x0, [sp, #160]
  40ed9c:	ldr	x0, [x0]
  40eda0:	bl	40b7a0 <sd_event_loop@plt>
  40eda4:	str	w0, [sp, #76]
  40eda8:	ldr	w0, [sp, #76]
  40edac:	cmp	w0, #0x0
  40edb0:	b.ge	40ee44 <worker_main+0x5b0>  // b.tcont
  40edb4:	mov	w0, #0x3                   	// #3
  40edb8:	str	w0, [sp, #92]
  40edbc:	ldr	w0, [sp, #76]
  40edc0:	str	w0, [sp, #96]
  40edc4:	mov	w0, #0x1                   	// #1
  40edc8:	str	w0, [sp, #100]
  40edcc:	ldr	w0, [sp, #100]
  40edd0:	bl	40be30 <log_get_max_level_realm@plt>
  40edd4:	mov	w1, w0
  40edd8:	ldr	w0, [sp, #92]
  40eddc:	and	w0, w0, #0x7
  40ede0:	cmp	w1, w0
  40ede4:	b.lt	40ee2c <worker_main+0x598>  // b.tstop
  40ede8:	ldr	w0, [sp, #100]
  40edec:	lsl	w1, w0, #10
  40edf0:	ldr	w0, [sp, #92]
  40edf4:	orr	w6, w1, w0
  40edf8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40edfc:	add	x1, x0, #0x66b
  40ee00:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ee04:	add	x5, x0, #0xbb8
  40ee08:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40ee0c:	add	x4, x0, #0x1a0
  40ee10:	mov	w3, #0x1fa                 	// #506
  40ee14:	mov	x2, x1
  40ee18:	ldr	w1, [sp, #96]
  40ee1c:	mov	w0, w6
  40ee20:	bl	40b4f0 <log_internal_realm@plt>
  40ee24:	mov	w19, w0
  40ee28:	b	40ee48 <worker_main+0x5b4>
  40ee2c:	ldr	w0, [sp, #96]
  40ee30:	cmp	w0, #0x0
  40ee34:	cneg	w0, w0, lt  // lt = tstop
  40ee38:	and	w0, w0, #0xff
  40ee3c:	neg	w19, w0
  40ee40:	b	40ee48 <worker_main+0x5b4>
  40ee44:	mov	w19, #0x0                   	// #0
  40ee48:	add	x0, sp, #0xa0
  40ee4c:	bl	40d5a4 <manager_freep>
  40ee50:	add	x0, sp, #0x98
  40ee54:	bl	40c2d8 <sd_device_unrefp>
  40ee58:	mov	w1, w19
  40ee5c:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40ee60:	add	x0, x0, #0x7a8
  40ee64:	ldr	x2, [sp, #168]
  40ee68:	ldr	x0, [x0]
  40ee6c:	eor	x0, x2, x0
  40ee70:	cmp	x0, #0x0
  40ee74:	b.eq	40ee7c <worker_main+0x5e8>  // b.none
  40ee78:	bl	40b280 <__stack_chk_fail@plt>
  40ee7c:	mov	w0, w1
  40ee80:	ldr	x19, [sp, #16]
  40ee84:	ldp	x29, x30, [sp], #176
  40ee88:	ret

000000000040ee8c <worker_spawn>:
  40ee8c:	sub	sp, sp, #0xc0
  40ee90:	stp	x29, x30, [sp, #32]
  40ee94:	add	x29, sp, #0x20
  40ee98:	str	x19, [sp, #48]
  40ee9c:	str	x0, [sp, #72]
  40eea0:	str	x1, [sp, #64]
  40eea4:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40eea8:	add	x0, x0, #0x7a8
  40eeac:	ldr	x1, [x0]
  40eeb0:	str	x1, [sp, #184]
  40eeb4:	mov	x1, #0x0                   	// #0
  40eeb8:	str	xzr, [sp, #152]
  40eebc:	add	x0, sp, #0x98
  40eec0:	mov	w2, #0xffffffff            	// #-1
  40eec4:	mov	w1, #0x0                   	// #0
  40eec8:	bl	40b800 <device_monitor_new_full@plt>
  40eecc:	str	w0, [sp, #92]
  40eed0:	ldr	w0, [sp, #92]
  40eed4:	cmp	w0, #0x0
  40eed8:	b.ge	40eee4 <worker_spawn+0x58>  // b.tcont
  40eedc:	ldr	w19, [sp, #92]
  40eee0:	b	40f2e4 <worker_spawn+0x458>
  40eee4:	ldr	x2, [sp, #152]
  40eee8:	ldr	x0, [sp, #72]
  40eeec:	ldr	x0, [x0, #64]
  40eef0:	mov	x1, x0
  40eef4:	mov	x0, x2
  40eef8:	bl	40ab80 <device_monitor_allow_unicast_sender@plt>
  40eefc:	str	w0, [sp, #92]
  40ef00:	ldr	w0, [sp, #92]
  40ef04:	cmp	w0, #0x0
  40ef08:	b.ge	40ef9c <worker_spawn+0x110>  // b.tcont
  40ef0c:	mov	w0, #0x3                   	// #3
  40ef10:	str	w0, [sp, #140]
  40ef14:	ldr	w0, [sp, #92]
  40ef18:	str	w0, [sp, #144]
  40ef1c:	mov	w0, #0x1                   	// #1
  40ef20:	str	w0, [sp, #148]
  40ef24:	ldr	w0, [sp, #148]
  40ef28:	bl	40be30 <log_get_max_level_realm@plt>
  40ef2c:	mov	w1, w0
  40ef30:	ldr	w0, [sp, #140]
  40ef34:	and	w0, w0, #0x7
  40ef38:	cmp	w1, w0
  40ef3c:	b.lt	40ef84 <worker_spawn+0xf8>  // b.tstop
  40ef40:	ldr	w0, [sp, #148]
  40ef44:	lsl	w1, w0, #10
  40ef48:	ldr	w0, [sp, #140]
  40ef4c:	orr	w6, w1, w0
  40ef50:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ef54:	add	x1, x0, #0x66b
  40ef58:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40ef5c:	add	x5, x0, #0xbd0
  40ef60:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40ef64:	add	x4, x0, #0x1b0
  40ef68:	mov	w3, #0x20d                 	// #525
  40ef6c:	mov	x2, x1
  40ef70:	ldr	w1, [sp, #144]
  40ef74:	mov	w0, w6
  40ef78:	bl	40b4f0 <log_internal_realm@plt>
  40ef7c:	mov	w19, w0
  40ef80:	b	40f2e4 <worker_spawn+0x458>
  40ef84:	ldr	w0, [sp, #144]
  40ef88:	cmp	w0, #0x0
  40ef8c:	cneg	w0, w0, lt  // lt = tstop
  40ef90:	and	w0, w0, #0xff
  40ef94:	neg	w19, w0
  40ef98:	b	40f2e4 <worker_spawn+0x458>
  40ef9c:	ldr	x0, [sp, #152]
  40efa0:	bl	40a740 <device_monitor_enable_receiving@plt>
  40efa4:	str	w0, [sp, #92]
  40efa8:	ldr	w0, [sp, #92]
  40efac:	cmp	w0, #0x0
  40efb0:	b.ge	40f044 <worker_spawn+0x1b8>  // b.tcont
  40efb4:	mov	w0, #0x3                   	// #3
  40efb8:	str	w0, [sp, #128]
  40efbc:	ldr	w0, [sp, #92]
  40efc0:	str	w0, [sp, #132]
  40efc4:	mov	w0, #0x1                   	// #1
  40efc8:	str	w0, [sp, #136]
  40efcc:	ldr	w0, [sp, #136]
  40efd0:	bl	40be30 <log_get_max_level_realm@plt>
  40efd4:	mov	w1, w0
  40efd8:	ldr	w0, [sp, #128]
  40efdc:	and	w0, w0, #0x7
  40efe0:	cmp	w1, w0
  40efe4:	b.lt	40f02c <worker_spawn+0x1a0>  // b.tstop
  40efe8:	ldr	w0, [sp, #136]
  40efec:	lsl	w1, w0, #10
  40eff0:	ldr	w0, [sp, #128]
  40eff4:	orr	w6, w1, w0
  40eff8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40effc:	add	x1, x0, #0x66b
  40f000:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f004:	add	x5, x0, #0xc00
  40f008:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f00c:	add	x4, x0, #0x1b0
  40f010:	mov	w3, #0x211                 	// #529
  40f014:	mov	x2, x1
  40f018:	ldr	w1, [sp, #132]
  40f01c:	mov	w0, w6
  40f020:	bl	40b4f0 <log_internal_realm@plt>
  40f024:	mov	w19, w0
  40f028:	b	40f2e4 <worker_spawn+0x458>
  40f02c:	ldr	w0, [sp, #132]
  40f030:	cmp	w0, #0x0
  40f034:	cneg	w0, w0, lt  // lt = tstop
  40f038:	and	w0, w0, #0xff
  40f03c:	neg	w19, w0
  40f040:	b	40f2e4 <worker_spawn+0x458>
  40f044:	add	x0, sp, #0x58
  40f048:	mov	x2, x0
  40f04c:	mov	w1, #0x4                   	// #4
  40f050:	mov	x0, #0x0                   	// #0
  40f054:	bl	40c670 <safe_fork>
  40f058:	str	w0, [sp, #92]
  40f05c:	ldr	w0, [sp, #92]
  40f060:	cmp	w0, #0x0
  40f064:	b.ge	40f104 <worker_spawn+0x278>  // b.tcont
  40f068:	ldr	x0, [sp, #64]
  40f06c:	mov	w1, #0x1                   	// #1
  40f070:	str	w1, [x0, #16]
  40f074:	mov	w0, #0x3                   	// #3
  40f078:	str	w0, [sp, #116]
  40f07c:	ldr	w0, [sp, #92]
  40f080:	str	w0, [sp, #120]
  40f084:	mov	w0, #0x1                   	// #1
  40f088:	str	w0, [sp, #124]
  40f08c:	ldr	w0, [sp, #124]
  40f090:	bl	40be30 <log_get_max_level_realm@plt>
  40f094:	mov	w1, w0
  40f098:	ldr	w0, [sp, #116]
  40f09c:	and	w0, w0, #0x7
  40f0a0:	cmp	w1, w0
  40f0a4:	b.lt	40f0ec <worker_spawn+0x260>  // b.tstop
  40f0a8:	ldr	w0, [sp, #124]
  40f0ac:	lsl	w1, w0, #10
  40f0b0:	ldr	w0, [sp, #116]
  40f0b4:	orr	w6, w1, w0
  40f0b8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f0bc:	add	x1, x0, #0x66b
  40f0c0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f0c4:	add	x5, x0, #0xc38
  40f0c8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f0cc:	add	x4, x0, #0x1b0
  40f0d0:	mov	w3, #0x216                 	// #534
  40f0d4:	mov	x2, x1
  40f0d8:	ldr	w1, [sp, #120]
  40f0dc:	mov	w0, w6
  40f0e0:	bl	40b4f0 <log_internal_realm@plt>
  40f0e4:	mov	w19, w0
  40f0e8:	b	40f2e4 <worker_spawn+0x458>
  40f0ec:	ldr	w0, [sp, #120]
  40f0f0:	cmp	w0, #0x0
  40f0f4:	cneg	w0, w0, lt  // lt = tstop
  40f0f8:	and	w0, w0, #0xff
  40f0fc:	neg	w19, w0
  40f100:	b	40f2e4 <worker_spawn+0x458>
  40f104:	ldr	w0, [sp, #92]
  40f108:	cmp	w0, #0x0
  40f10c:	b.ne	40f144 <worker_spawn+0x2b8>  // b.any
  40f110:	ldr	x19, [sp, #152]
  40f114:	ldr	x0, [sp, #64]
  40f118:	ldr	x0, [x0, #24]
  40f11c:	bl	40bba0 <sd_device_ref@plt>
  40f120:	mov	x2, x0
  40f124:	mov	x1, x19
  40f128:	ldr	x0, [sp, #72]
  40f12c:	bl	40e894 <worker_main>
  40f130:	str	w0, [sp, #92]
  40f134:	bl	40a590 <log_close@plt>
  40f138:	ldr	w0, [sp, #92]
  40f13c:	lsr	w0, w0, #31
  40f140:	bl	40ac70 <_exit@plt>
  40f144:	ldr	x1, [sp, #152]
  40f148:	ldr	w2, [sp, #88]
  40f14c:	add	x0, sp, #0xa0
  40f150:	mov	w3, w2
  40f154:	mov	x2, x1
  40f158:	ldr	x1, [sp, #72]
  40f15c:	bl	40caec <worker_new>
  40f160:	str	w0, [sp, #92]
  40f164:	ldr	w0, [sp, #92]
  40f168:	cmp	w0, #0x0
  40f16c:	b.ge	40f200 <worker_spawn+0x374>  // b.tcont
  40f170:	mov	w0, #0x3                   	// #3
  40f174:	str	w0, [sp, #104]
  40f178:	ldr	w0, [sp, #92]
  40f17c:	str	w0, [sp, #108]
  40f180:	mov	w0, #0x1                   	// #1
  40f184:	str	w0, [sp, #112]
  40f188:	ldr	w0, [sp, #112]
  40f18c:	bl	40be30 <log_get_max_level_realm@plt>
  40f190:	mov	w1, w0
  40f194:	ldr	w0, [sp, #104]
  40f198:	and	w0, w0, #0x7
  40f19c:	cmp	w1, w0
  40f1a0:	b.lt	40f1e8 <worker_spawn+0x35c>  // b.tstop
  40f1a4:	ldr	w0, [sp, #112]
  40f1a8:	lsl	w1, w0, #10
  40f1ac:	ldr	w0, [sp, #104]
  40f1b0:	orr	w6, w1, w0
  40f1b4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f1b8:	add	x1, x0, #0x66b
  40f1bc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f1c0:	add	x5, x0, #0xc58
  40f1c4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f1c8:	add	x4, x0, #0x1b0
  40f1cc:	mov	w3, #0x221                 	// #545
  40f1d0:	mov	x2, x1
  40f1d4:	ldr	w1, [sp, #108]
  40f1d8:	mov	w0, w6
  40f1dc:	bl	40b4f0 <log_internal_realm@plt>
  40f1e0:	mov	w19, w0
  40f1e4:	b	40f2e4 <worker_spawn+0x458>
  40f1e8:	ldr	w0, [sp, #108]
  40f1ec:	cmp	w0, #0x0
  40f1f0:	cneg	w0, w0, lt  // lt = tstop
  40f1f4:	and	w0, w0, #0xff
  40f1f8:	neg	w19, w0
  40f1fc:	b	40f2e4 <worker_spawn+0x458>
  40f200:	ldr	x0, [sp, #160]
  40f204:	ldr	x1, [sp, #64]
  40f208:	bl	40d11c <worker_attach_event>
  40f20c:	str	xzr, [sp, #168]
  40f210:	ldr	x0, [sp, #64]
  40f214:	ldr	x0, [x0, #24]
  40f218:	str	x0, [sp, #176]
  40f21c:	mov	w0, #0x7                   	// #7
  40f220:	str	w0, [sp, #96]
  40f224:	str	wzr, [sp, #100]
  40f228:	ldr	x0, [sp, #176]
  40f22c:	cmp	x0, #0x0
  40f230:	b.eq	40f26c <worker_spawn+0x3e0>  // b.none
  40f234:	mov	w0, #0x1                   	// #1
  40f238:	bl	40be30 <log_get_max_level_realm@plt>
  40f23c:	mov	w1, w0
  40f240:	ldr	w0, [sp, #96]
  40f244:	cmp	w0, w1
  40f248:	cset	w0, le
  40f24c:	and	w0, w0, #0xff
  40f250:	and	x0, x0, #0xff
  40f254:	cmp	x0, #0x0
  40f258:	b.eq	40f26c <worker_spawn+0x3e0>  // b.none
  40f25c:	add	x0, sp, #0xa8
  40f260:	mov	x1, x0
  40f264:	ldr	x0, [sp, #176]
  40f268:	bl	40aba0 <sd_device_get_sysname@plt>
  40f26c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f270:	add	x8, x0, #0x66b
  40f274:	ldr	x0, [sp, #168]
  40f278:	cmp	x0, #0x0
  40f27c:	b.eq	40f28c <worker_spawn+0x400>  // b.none
  40f280:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f284:	add	x0, x0, #0x730
  40f288:	b	40f290 <worker_spawn+0x404>
  40f28c:	mov	x0, #0x0                   	// #0
  40f290:	ldr	x3, [sp, #168]
  40f294:	ldr	w1, [sp, #88]
  40f298:	ldr	x2, [sp, #64]
  40f29c:	ldr	x2, [x2, #40]
  40f2a0:	str	x2, [sp, #24]
  40f2a4:	str	w1, [sp, #16]
  40f2a8:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40f2ac:	add	x1, x1, #0xc80
  40f2b0:	str	x1, [sp, #8]
  40f2b4:	str	xzr, [sp]
  40f2b8:	mov	x7, #0x0                   	// #0
  40f2bc:	mov	x6, x3
  40f2c0:	mov	x5, x0
  40f2c4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f2c8:	add	x4, x0, #0x1b0
  40f2cc:	mov	w3, #0x225                 	// #549
  40f2d0:	mov	x2, x8
  40f2d4:	ldr	w1, [sp, #100]
  40f2d8:	ldr	w0, [sp, #96]
  40f2dc:	bl	40b020 <log_object_internal@plt>
  40f2e0:	mov	w19, #0x0                   	// #0
  40f2e4:	add	x0, sp, #0x98
  40f2e8:	bl	40c340 <sd_device_monitor_unrefp>
  40f2ec:	mov	w1, w19
  40f2f0:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40f2f4:	add	x0, x0, #0x7a8
  40f2f8:	ldr	x2, [sp, #184]
  40f2fc:	ldr	x0, [x0]
  40f300:	eor	x0, x2, x0
  40f304:	cmp	x0, #0x0
  40f308:	b.eq	40f310 <worker_spawn+0x484>  // b.none
  40f30c:	bl	40b280 <__stack_chk_fail@plt>
  40f310:	mov	w0, w1
  40f314:	ldr	x19, [sp, #48]
  40f318:	ldp	x29, x30, [sp, #32]
  40f31c:	add	sp, sp, #0xc0
  40f320:	ret

000000000040f324 <event_run>:
  40f324:	sub	sp, sp, #0xa0
  40f328:	stp	x29, x30, [sp, #32]
  40f32c:	add	x29, sp, #0x20
  40f330:	stp	x19, x20, [sp, #48]
  40f334:	str	x0, [sp, #72]
  40f338:	str	x1, [sp, #64]
  40f33c:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40f340:	add	x0, x0, #0x7a8
  40f344:	ldr	x1, [x0]
  40f348:	str	x1, [sp, #152]
  40f34c:	mov	x1, #0x0                   	// #0
  40f350:	ldr	x0, [sp, #72]
  40f354:	cmp	x0, #0x0
  40f358:	cset	w0, eq  // eq = none
  40f35c:	and	w0, w0, #0xff
  40f360:	and	x0, x0, #0xff
  40f364:	cmp	x0, #0x0
  40f368:	b.eq	40f394 <event_run+0x70>  // b.none
  40f36c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f370:	add	x1, x0, #0x66b
  40f374:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f378:	add	x4, x0, #0x1c0
  40f37c:	mov	w3, #0x22f                 	// #559
  40f380:	mov	x2, x1
  40f384:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f388:	add	x1, x0, #0x6f8
  40f38c:	mov	w0, #0x1                   	// #1
  40f390:	bl	40abb0 <log_assert_failed_realm@plt>
  40f394:	ldr	x0, [sp, #64]
  40f398:	cmp	x0, #0x0
  40f39c:	cset	w0, eq  // eq = none
  40f3a0:	and	w0, w0, #0xff
  40f3a4:	and	x0, x0, #0xff
  40f3a8:	cmp	x0, #0x0
  40f3ac:	b.eq	40f3d8 <event_run+0xb4>  // b.none
  40f3b0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f3b4:	add	x1, x0, #0x66b
  40f3b8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f3bc:	add	x4, x0, #0x1c0
  40f3c0:	mov	w3, #0x230                 	// #560
  40f3c4:	mov	x2, x1
  40f3c8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f3cc:	add	x1, x0, #0x718
  40f3d0:	mov	w0, #0x1                   	// #1
  40f3d4:	bl	40abb0 <log_assert_failed_realm@plt>
  40f3d8:	mov	w0, #0xfffffffe            	// #-2
  40f3dc:	str	w0, [sp, #136]
  40f3e0:	str	xzr, [sp, #144]
  40f3e4:	b	40f52c <event_run+0x208>
  40f3e8:	ldr	x0, [sp, #112]
  40f3ec:	ldr	w0, [x0, #24]
  40f3f0:	cmp	w0, #0x2
  40f3f4:	b.eq	40f3fc <event_run+0xd8>  // b.none
  40f3f8:	b	40f52c <event_run+0x208>
  40f3fc:	ldr	x0, [sp, #72]
  40f400:	ldr	x3, [x0, #64]
  40f404:	ldr	x0, [sp, #112]
  40f408:	ldr	x1, [x0, #16]
  40f40c:	ldr	x0, [sp, #64]
  40f410:	ldr	x0, [x0, #24]
  40f414:	mov	x2, x0
  40f418:	mov	x0, x3
  40f41c:	bl	40aab0 <device_monitor_send_device@plt>
  40f420:	str	w0, [sp, #100]
  40f424:	ldr	w0, [sp, #100]
  40f428:	cmp	w0, #0x0
  40f42c:	b.ge	40f51c <event_run+0x1f8>  // b.tcont
  40f430:	str	xzr, [sp, #120]
  40f434:	ldr	x0, [sp, #64]
  40f438:	ldr	x0, [x0, #24]
  40f43c:	str	x0, [sp, #128]
  40f440:	mov	w0, #0x3                   	// #3
  40f444:	str	w0, [sp, #104]
  40f448:	ldr	w0, [sp, #100]
  40f44c:	str	w0, [sp, #108]
  40f450:	ldr	x0, [sp, #128]
  40f454:	cmp	x0, #0x0
  40f458:	b.eq	40f494 <event_run+0x170>  // b.none
  40f45c:	mov	w0, #0x1                   	// #1
  40f460:	bl	40be30 <log_get_max_level_realm@plt>
  40f464:	mov	w1, w0
  40f468:	ldr	w0, [sp, #104]
  40f46c:	cmp	w0, w1
  40f470:	cset	w0, le
  40f474:	and	w0, w0, #0xff
  40f478:	and	x0, x0, #0xff
  40f47c:	cmp	x0, #0x0
  40f480:	b.eq	40f494 <event_run+0x170>  // b.none
  40f484:	add	x0, sp, #0x78
  40f488:	mov	x1, x0
  40f48c:	ldr	x0, [sp, #128]
  40f490:	bl	40aba0 <sd_device_get_sysname@plt>
  40f494:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f498:	add	x2, x0, #0x66b
  40f49c:	ldr	x0, [sp, #120]
  40f4a0:	cmp	x0, #0x0
  40f4a4:	b.eq	40f4b4 <event_run+0x190>  // b.none
  40f4a8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f4ac:	add	x0, x0, #0x730
  40f4b0:	b	40f4b8 <event_run+0x194>
  40f4b4:	mov	x0, #0x0                   	// #0
  40f4b8:	ldr	x3, [sp, #120]
  40f4bc:	ldr	x1, [sp, #112]
  40f4c0:	ldr	w1, [x1, #8]
  40f4c4:	str	w1, [sp, #16]
  40f4c8:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  40f4cc:	add	x1, x1, #0xcb8
  40f4d0:	str	x1, [sp, #8]
  40f4d4:	str	xzr, [sp]
  40f4d8:	mov	x7, #0x0                   	// #0
  40f4dc:	mov	x6, x3
  40f4e0:	mov	x5, x0
  40f4e4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f4e8:	add	x4, x0, #0x1d0
  40f4ec:	mov	w3, #0x238                 	// #568
  40f4f0:	ldr	w1, [sp, #108]
  40f4f4:	ldr	w0, [sp, #104]
  40f4f8:	bl	40b020 <log_object_internal@plt>
  40f4fc:	ldr	x0, [sp, #112]
  40f500:	ldr	w0, [x0, #8]
  40f504:	mov	w1, #0x9                   	// #9
  40f508:	bl	40a2f0 <kill@plt>
  40f50c:	ldr	x0, [sp, #112]
  40f510:	mov	w1, #0x3                   	// #3
  40f514:	str	w1, [x0, #24]
  40f518:	b	40f52c <event_run+0x208>
  40f51c:	ldr	x0, [sp, #112]
  40f520:	ldr	x1, [sp, #64]
  40f524:	bl	40d11c <worker_attach_event>
  40f528:	b	40f658 <event_run+0x334>
  40f52c:	ldr	x0, [sp, #72]
  40f530:	ldr	x0, [x0, #8]
  40f534:	add	x2, sp, #0x70
  40f538:	add	x1, sp, #0x88
  40f53c:	mov	x3, #0x0                   	// #0
  40f540:	bl	40c2a0 <hashmap_iterate>
  40f544:	and	w0, w0, #0xff
  40f548:	cmp	w0, #0x0
  40f54c:	b.ne	40f3e8 <event_run+0xc4>  // b.any
  40f550:	ldr	x0, [sp, #72]
  40f554:	ldr	x0, [x0, #8]
  40f558:	bl	40c25c <hashmap_size>
  40f55c:	mov	w1, w0
  40f560:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40f564:	add	x0, x0, #0x190
  40f568:	ldr	w0, [x0]
  40f56c:	cmp	w1, w0
  40f570:	b.cc	40f634 <event_run+0x310>  // b.lo, b.ul, b.last
  40f574:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40f578:	add	x0, x0, #0x10
  40f57c:	ldrb	w0, [x0]
  40f580:	cmp	w0, #0x0
  40f584:	b.eq	40f654 <event_run+0x330>  // b.none
  40f588:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40f58c:	add	x0, x0, #0x190
  40f590:	ldr	w0, [x0]
  40f594:	cmp	w0, #0x1
  40f598:	b.ls	40f654 <event_run+0x330>  // b.plast
  40f59c:	mov	w0, #0x7                   	// #7
  40f5a0:	str	w0, [sp, #88]
  40f5a4:	str	wzr, [sp, #92]
  40f5a8:	mov	w0, #0x1                   	// #1
  40f5ac:	str	w0, [sp, #96]
  40f5b0:	ldr	w0, [sp, #96]
  40f5b4:	bl	40be30 <log_get_max_level_realm@plt>
  40f5b8:	mov	w1, w0
  40f5bc:	ldr	w0, [sp, #88]
  40f5c0:	and	w0, w0, #0x7
  40f5c4:	cmp	w1, w0
  40f5c8:	b.lt	40f61c <event_run+0x2f8>  // b.tstop
  40f5cc:	ldr	w0, [sp, #96]
  40f5d0:	lsl	w1, w0, #10
  40f5d4:	ldr	w0, [sp, #88]
  40f5d8:	orr	w19, w1, w0
  40f5dc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f5e0:	add	x20, x0, #0x66b
  40f5e4:	ldr	x0, [sp, #72]
  40f5e8:	ldr	x0, [x0, #8]
  40f5ec:	bl	40c25c <hashmap_size>
  40f5f0:	mov	w6, w0
  40f5f4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f5f8:	add	x5, x0, #0xcf8
  40f5fc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f600:	add	x4, x0, #0x1d0
  40f604:	mov	w3, #0x247                 	// #583
  40f608:	mov	x2, x20
  40f60c:	ldr	w1, [sp, #92]
  40f610:	mov	w0, w19
  40f614:	bl	40b4f0 <log_internal_realm@plt>
  40f618:	b	40f624 <event_run+0x300>
  40f61c:	ldr	w0, [sp, #92]
  40f620:	cmp	w0, #0x0
  40f624:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40f628:	add	x0, x0, #0x10
  40f62c:	strb	wzr, [x0]
  40f630:	b	40f654 <event_run+0x330>
  40f634:	adrp	x0, 48d000 <arg_resolve_name_timing>
  40f638:	add	x0, x0, #0x10
  40f63c:	mov	w1, #0x1                   	// #1
  40f640:	strb	w1, [x0]
  40f644:	ldr	x1, [sp, #64]
  40f648:	ldr	x0, [sp, #72]
  40f64c:	bl	40ee8c <worker_spawn>
  40f650:	b	40f658 <event_run+0x334>
  40f654:	nop
  40f658:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40f65c:	add	x0, x0, #0x7a8
  40f660:	ldr	x1, [sp, #152]
  40f664:	ldr	x0, [x0]
  40f668:	eor	x0, x1, x0
  40f66c:	cmp	x0, #0x0
  40f670:	b.eq	40f678 <event_run+0x354>  // b.none
  40f674:	bl	40b280 <__stack_chk_fail@plt>
  40f678:	ldp	x19, x20, [sp, #48]
  40f67c:	ldp	x29, x30, [sp, #32]
  40f680:	add	sp, sp, #0xa0
  40f684:	ret

000000000040f688 <event_queue_insert>:
  40f688:	sub	sp, sp, #0x140
  40f68c:	stp	x29, x30, [sp, #32]
  40f690:	add	x29, sp, #0x20
  40f694:	stp	x19, x20, [sp, #48]
  40f698:	stp	x21, x22, [sp, #64]
  40f69c:	str	x0, [sp, #88]
  40f6a0:	str	x1, [sp, #80]
  40f6a4:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40f6a8:	add	x0, x0, #0x7a8
  40f6ac:	ldr	x1, [x0]
  40f6b0:	str	x1, [sp, #312]
  40f6b4:	mov	x1, #0x0                   	// #0
  40f6b8:	str	xzr, [sp, #136]
  40f6bc:	ldr	x0, [sp, #88]
  40f6c0:	cmp	x0, #0x0
  40f6c4:	cset	w0, eq  // eq = none
  40f6c8:	and	w0, w0, #0xff
  40f6cc:	and	x0, x0, #0xff
  40f6d0:	cmp	x0, #0x0
  40f6d4:	b.eq	40f700 <event_queue_insert+0x78>  // b.none
  40f6d8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f6dc:	add	x1, x0, #0x66b
  40f6e0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f6e4:	add	x4, x0, #0x1e0
  40f6e8:	mov	w3, #0x25b                 	// #603
  40f6ec:	mov	x2, x1
  40f6f0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f6f4:	add	x1, x0, #0x6f8
  40f6f8:	mov	w0, #0x1                   	// #1
  40f6fc:	bl	40abb0 <log_assert_failed_realm@plt>
  40f700:	ldr	x0, [sp, #80]
  40f704:	cmp	x0, #0x0
  40f708:	cset	w0, eq  // eq = none
  40f70c:	and	w0, w0, #0xff
  40f710:	and	x0, x0, #0xff
  40f714:	cmp	x0, #0x0
  40f718:	b.eq	40f744 <event_queue_insert+0xbc>  // b.none
  40f71c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f720:	add	x1, x0, #0x66b
  40f724:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f728:	add	x4, x0, #0x1e0
  40f72c:	mov	w3, #0x25c                 	// #604
  40f730:	mov	x2, x1
  40f734:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f738:	add	x1, x0, #0x7f8
  40f73c:	mov	w0, #0x1                   	// #1
  40f740:	bl	40abb0 <log_assert_failed_realm@plt>
  40f744:	ldr	x0, [sp, #88]
  40f748:	ldr	w19, [x0, #32]
  40f74c:	bl	40a8e0 <getpid_cached@plt>
  40f750:	cmp	w19, w0
  40f754:	cset	w0, ne  // ne = any
  40f758:	and	w0, w0, #0xff
  40f75c:	and	x0, x0, #0xff
  40f760:	cmp	x0, #0x0
  40f764:	b.eq	40f790 <event_queue_insert+0x108>  // b.none
  40f768:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f76c:	add	x1, x0, #0x66b
  40f770:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f774:	add	x4, x0, #0x1e0
  40f778:	mov	w3, #0x25f                 	// #607
  40f77c:	mov	x2, x1
  40f780:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f784:	add	x1, x0, #0xd28
  40f788:	mov	w0, #0x1                   	// #1
  40f78c:	bl	40abb0 <log_assert_failed_realm@plt>
  40f790:	add	x0, sp, #0x90
  40f794:	mov	x1, x0
  40f798:	ldr	x0, [sp, #80]
  40f79c:	bl	40a690 <device_get_seqnum@plt>
  40f7a0:	str	w0, [sp, #112]
  40f7a4:	ldr	w0, [sp, #112]
  40f7a8:	cmp	w0, #0x0
  40f7ac:	b.ge	40f7b8 <event_queue_insert+0x130>  // b.tcont
  40f7b0:	ldr	w19, [sp, #112]
  40f7b4:	b	40fb80 <event_queue_insert+0x4f8>
  40f7b8:	add	x0, sp, #0x6c
  40f7bc:	mov	x1, x0
  40f7c0:	ldr	x0, [sp, #80]
  40f7c4:	bl	40b4b0 <device_get_action@plt>
  40f7c8:	str	w0, [sp, #112]
  40f7cc:	ldr	w0, [sp, #112]
  40f7d0:	cmp	w0, #0x0
  40f7d4:	b.ge	40f7e0 <event_queue_insert+0x158>  // b.tcont
  40f7d8:	ldr	w19, [sp, #112]
  40f7dc:	b	40fb80 <event_queue_insert+0x4f8>
  40f7e0:	add	x0, sp, #0x88
  40f7e4:	mov	x1, x0
  40f7e8:	ldr	x0, [sp, #80]
  40f7ec:	bl	40ad30 <device_shallow_clone@plt>
  40f7f0:	str	w0, [sp, #112]
  40f7f4:	ldr	w0, [sp, #112]
  40f7f8:	cmp	w0, #0x0
  40f7fc:	b.ge	40f808 <event_queue_insert+0x180>  // b.tcont
  40f800:	ldr	w19, [sp, #112]
  40f804:	b	40fb80 <event_queue_insert+0x4f8>
  40f808:	ldr	x0, [sp, #136]
  40f80c:	ldr	x1, [sp, #80]
  40f810:	bl	40b9f0 <device_copy_properties@plt>
  40f814:	str	w0, [sp, #112]
  40f818:	ldr	w0, [sp, #112]
  40f81c:	cmp	w0, #0x0
  40f820:	b.ge	40f82c <event_queue_insert+0x1a4>  // b.tcont
  40f824:	ldr	w19, [sp, #112]
  40f828:	b	40fb80 <event_queue_insert+0x4f8>
  40f82c:	mov	x1, #0x1                   	// #1
  40f830:	mov	x0, #0x58                  	// #88
  40f834:	bl	40c138 <malloc_multiply>
  40f838:	str	x0, [sp, #168]
  40f83c:	ldr	x0, [sp, #168]
  40f840:	cmp	x0, #0x0
  40f844:	b.ne	40f850 <event_queue_insert+0x1c8>  // b.any
  40f848:	mov	w19, #0xfffffff4            	// #-12
  40f84c:	b	40fb80 <event_queue_insert+0x4f8>
  40f850:	ldr	x0, [sp, #80]
  40f854:	bl	40bba0 <sd_device_ref@plt>
  40f858:	mov	x4, x0
  40f85c:	ldr	x0, [sp, #136]
  40f860:	str	x0, [sp, #176]
  40f864:	str	xzr, [sp, #136]
  40f868:	ldr	x2, [sp, #176]
  40f86c:	ldr	x1, [sp, #144]
  40f870:	ldr	x0, [sp, #168]
  40f874:	stp	xzr, xzr, [x0]
  40f878:	stp	xzr, xzr, [x0, #16]
  40f87c:	stp	xzr, xzr, [x0, #32]
  40f880:	stp	xzr, xzr, [x0, #48]
  40f884:	stp	xzr, xzr, [x0, #64]
  40f888:	str	xzr, [x0, #80]
  40f88c:	ldr	x0, [sp, #168]
  40f890:	ldr	x3, [sp, #88]
  40f894:	str	x3, [x0]
  40f898:	ldr	x0, [sp, #168]
  40f89c:	mov	w3, #0x1                   	// #1
  40f8a0:	str	w3, [x0, #16]
  40f8a4:	ldr	x0, [sp, #168]
  40f8a8:	str	x4, [x0, #24]
  40f8ac:	ldr	x0, [sp, #168]
  40f8b0:	str	x2, [x0, #32]
  40f8b4:	ldr	x0, [sp, #168]
  40f8b8:	str	x1, [x0, #40]
  40f8bc:	ldr	x0, [sp, #88]
  40f8c0:	ldr	x0, [x0, #16]
  40f8c4:	cmp	x0, #0x0
  40f8c8:	b.ne	40f964 <event_queue_insert+0x2dc>  // b.any
  40f8cc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f8d0:	add	x0, x0, #0x6a8
  40f8d4:	bl	40b000 <touch@plt>
  40f8d8:	str	w0, [sp, #112]
  40f8dc:	ldr	w0, [sp, #112]
  40f8e0:	cmp	w0, #0x0
  40f8e4:	b.ge	40f964 <event_queue_insert+0x2dc>  // b.tcont
  40f8e8:	mov	w0, #0x4                   	// #4
  40f8ec:	str	w0, [sp, #116]
  40f8f0:	ldr	w0, [sp, #112]
  40f8f4:	str	w0, [sp, #120]
  40f8f8:	mov	w0, #0x1                   	// #1
  40f8fc:	str	w0, [sp, #124]
  40f900:	ldr	w0, [sp, #124]
  40f904:	bl	40be30 <log_get_max_level_realm@plt>
  40f908:	mov	w1, w0
  40f90c:	ldr	w0, [sp, #116]
  40f910:	and	w0, w0, #0x7
  40f914:	cmp	w1, w0
  40f918:	b.lt	40f95c <event_queue_insert+0x2d4>  // b.tstop
  40f91c:	ldr	w0, [sp, #124]
  40f920:	lsl	w1, w0, #10
  40f924:	ldr	w0, [sp, #116]
  40f928:	orr	w6, w1, w0
  40f92c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f930:	add	x1, x0, #0x66b
  40f934:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f938:	add	x5, x0, #0xd48
  40f93c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f940:	add	x4, x0, #0x1f8
  40f944:	mov	w3, #0x283                 	// #643
  40f948:	mov	x2, x1
  40f94c:	ldr	w1, [sp, #120]
  40f950:	mov	w0, w6
  40f954:	bl	40b4f0 <log_internal_realm@plt>
  40f958:	b	40f964 <event_queue_insert+0x2dc>
  40f95c:	ldr	w0, [sp, #120]
  40f960:	cmp	w0, #0x0
  40f964:	ldr	x0, [sp, #88]
  40f968:	add	x0, x0, #0x10
  40f96c:	str	x0, [sp, #184]
  40f970:	ldr	x0, [sp, #184]
  40f974:	ldr	x0, [x0]
  40f978:	str	x0, [sp, #160]
  40f97c:	ldr	x0, [sp, #160]
  40f980:	cmp	x0, #0x0
  40f984:	b.ne	40f99c <event_queue_insert+0x314>  // b.any
  40f988:	str	xzr, [sp, #152]
  40f98c:	b	40f9b4 <event_queue_insert+0x32c>
  40f990:	ldr	x0, [sp, #160]
  40f994:	ldr	x0, [x0, #72]
  40f998:	str	x0, [sp, #160]
  40f99c:	ldr	x0, [sp, #160]
  40f9a0:	ldr	x0, [x0, #72]
  40f9a4:	cmp	x0, #0x0
  40f9a8:	b.ne	40f990 <event_queue_insert+0x308>  // b.any
  40f9ac:	ldr	x0, [sp, #160]
  40f9b0:	str	x0, [sp, #152]
  40f9b4:	ldr	x0, [sp, #184]
  40f9b8:	str	x0, [sp, #192]
  40f9bc:	ldr	x0, [sp, #152]
  40f9c0:	str	x0, [sp, #200]
  40f9c4:	ldr	x0, [sp, #168]
  40f9c8:	str	x0, [sp, #208]
  40f9cc:	ldr	x0, [sp, #208]
  40f9d0:	cmp	x0, #0x0
  40f9d4:	cset	w0, eq  // eq = none
  40f9d8:	and	w0, w0, #0xff
  40f9dc:	and	x0, x0, #0xff
  40f9e0:	cmp	x0, #0x0
  40f9e4:	b.eq	40fa10 <event_queue_insert+0x388>  // b.none
  40f9e8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40f9ec:	add	x1, x0, #0x66b
  40f9f0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40f9f4:	add	x4, x0, #0x1e0
  40f9f8:	mov	w3, #0x286                 	// #646
  40f9fc:	mov	x2, x1
  40fa00:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40fa04:	add	x1, x0, #0xd70
  40fa08:	mov	w0, #0x1                   	// #1
  40fa0c:	bl	40abb0 <log_assert_failed_realm@plt>
  40fa10:	ldr	x0, [sp, #200]
  40fa14:	cmp	x0, #0x0
  40fa18:	b.ne	40fa64 <event_queue_insert+0x3dc>  // b.any
  40fa1c:	ldr	x0, [sp, #192]
  40fa20:	ldr	x1, [x0]
  40fa24:	ldr	x0, [sp, #208]
  40fa28:	str	x1, [x0, #72]
  40fa2c:	ldr	x0, [sp, #208]
  40fa30:	ldr	x0, [x0, #72]
  40fa34:	cmp	x0, #0x0
  40fa38:	b.eq	40fa4c <event_queue_insert+0x3c4>  // b.none
  40fa3c:	ldr	x0, [sp, #208]
  40fa40:	ldr	x0, [x0, #72]
  40fa44:	ldr	x1, [sp, #208]
  40fa48:	str	x1, [x0, #80]
  40fa4c:	ldr	x0, [sp, #208]
  40fa50:	str	xzr, [x0, #80]
  40fa54:	ldr	x0, [sp, #192]
  40fa58:	ldr	x1, [sp, #208]
  40fa5c:	str	x1, [x0]
  40fa60:	b	40faac <event_queue_insert+0x424>
  40fa64:	ldr	x0, [sp, #200]
  40fa68:	ldr	x1, [x0, #72]
  40fa6c:	ldr	x0, [sp, #208]
  40fa70:	str	x1, [x0, #72]
  40fa74:	ldr	x0, [sp, #208]
  40fa78:	ldr	x0, [x0, #72]
  40fa7c:	cmp	x0, #0x0
  40fa80:	b.eq	40fa94 <event_queue_insert+0x40c>  // b.none
  40fa84:	ldr	x0, [sp, #208]
  40fa88:	ldr	x0, [x0, #72]
  40fa8c:	ldr	x1, [sp, #208]
  40fa90:	str	x1, [x0, #80]
  40fa94:	ldr	x0, [sp, #208]
  40fa98:	ldr	x1, [sp, #200]
  40fa9c:	str	x1, [x0, #80]
  40faa0:	ldr	x0, [sp, #200]
  40faa4:	ldr	x1, [sp, #208]
  40faa8:	str	x1, [x0, #72]
  40faac:	str	xzr, [sp, #224]
  40fab0:	ldr	x0, [sp, #80]
  40fab4:	str	x0, [sp, #216]
  40fab8:	mov	w0, #0x7                   	// #7
  40fabc:	str	w0, [sp, #128]
  40fac0:	str	wzr, [sp, #132]
  40fac4:	ldr	x0, [sp, #216]
  40fac8:	cmp	x0, #0x0
  40facc:	b.eq	40fb08 <event_queue_insert+0x480>  // b.none
  40fad0:	mov	w0, #0x1                   	// #1
  40fad4:	bl	40be30 <log_get_max_level_realm@plt>
  40fad8:	mov	w1, w0
  40fadc:	ldr	w0, [sp, #128]
  40fae0:	cmp	w0, w1
  40fae4:	cset	w0, le
  40fae8:	and	w0, w0, #0xff
  40faec:	and	x0, x0, #0xff
  40faf0:	cmp	x0, #0x0
  40faf4:	b.eq	40fb08 <event_queue_insert+0x480>  // b.none
  40faf8:	add	x0, sp, #0xe0
  40fafc:	mov	x1, x0
  40fb00:	ldr	x0, [sp, #216]
  40fb04:	bl	40aba0 <sd_device_get_sysname@plt>
  40fb08:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40fb0c:	add	x21, x0, #0x66b
  40fb10:	ldr	x0, [sp, #224]
  40fb14:	cmp	x0, #0x0
  40fb18:	b.eq	40fb28 <event_queue_insert+0x4a0>  // b.none
  40fb1c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40fb20:	add	x19, x0, #0x730
  40fb24:	b	40fb2c <event_queue_insert+0x4a4>
  40fb28:	mov	x19, #0x0                   	// #0
  40fb2c:	ldr	x22, [sp, #224]
  40fb30:	ldr	x20, [sp, #144]
  40fb34:	ldr	w0, [sp, #108]
  40fb38:	bl	40a370 <device_action_to_string@plt>
  40fb3c:	str	x0, [sp, #24]
  40fb40:	str	x20, [sp, #16]
  40fb44:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40fb48:	add	x0, x0, #0xd78
  40fb4c:	str	x0, [sp, #8]
  40fb50:	str	xzr, [sp]
  40fb54:	mov	x7, #0x0                   	// #0
  40fb58:	mov	x6, x22
  40fb5c:	mov	x5, x19
  40fb60:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40fb64:	add	x4, x0, #0x1f8
  40fb68:	mov	w3, #0x288                 	// #648
  40fb6c:	mov	x2, x21
  40fb70:	ldr	w1, [sp, #132]
  40fb74:	ldr	w0, [sp, #128]
  40fb78:	bl	40b020 <log_object_internal@plt>
  40fb7c:	mov	w19, #0x0                   	// #0
  40fb80:	add	x0, sp, #0x88
  40fb84:	bl	40c2d8 <sd_device_unrefp>
  40fb88:	mov	w1, w19
  40fb8c:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40fb90:	add	x0, x0, #0x7a8
  40fb94:	ldr	x2, [sp, #312]
  40fb98:	ldr	x0, [x0]
  40fb9c:	eor	x0, x2, x0
  40fba0:	cmp	x0, #0x0
  40fba4:	b.eq	40fbac <event_queue_insert+0x524>  // b.none
  40fba8:	bl	40b280 <__stack_chk_fail@plt>
  40fbac:	mov	w0, w1
  40fbb0:	ldp	x19, x20, [sp, #48]
  40fbb4:	ldp	x21, x22, [sp, #64]
  40fbb8:	ldp	x29, x30, [sp, #32]
  40fbbc:	add	sp, sp, #0x140
  40fbc0:	ret

000000000040fbc4 <manager_kill_workers>:
  40fbc4:	stp	x29, x30, [sp, #-64]!
  40fbc8:	mov	x29, sp
  40fbcc:	str	x0, [sp, #24]
  40fbd0:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40fbd4:	add	x0, x0, #0x7a8
  40fbd8:	ldr	x1, [x0]
  40fbdc:	str	x1, [sp, #56]
  40fbe0:	mov	x1, #0x0                   	// #0
  40fbe4:	ldr	x0, [sp, #24]
  40fbe8:	cmp	x0, #0x0
  40fbec:	cset	w0, eq  // eq = none
  40fbf0:	and	w0, w0, #0xff
  40fbf4:	and	x0, x0, #0xff
  40fbf8:	cmp	x0, #0x0
  40fbfc:	b.eq	40fc28 <manager_kill_workers+0x64>  // b.none
  40fc00:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40fc04:	add	x1, x0, #0x66b
  40fc08:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  40fc0c:	add	x4, x0, #0x210
  40fc10:	mov	w3, #0x292                 	// #658
  40fc14:	mov	x2, x1
  40fc18:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40fc1c:	add	x1, x0, #0x6f8
  40fc20:	mov	w0, #0x1                   	// #1
  40fc24:	bl	40abb0 <log_assert_failed_realm@plt>
  40fc28:	mov	w0, #0xfffffffe            	// #-2
  40fc2c:	str	w0, [sp, #40]
  40fc30:	str	xzr, [sp, #48]
  40fc34:	b	40fc68 <manager_kill_workers+0xa4>
  40fc38:	ldr	x0, [sp, #32]
  40fc3c:	ldr	w0, [x0, #24]
  40fc40:	cmp	w0, #0x3
  40fc44:	b.ne	40fc4c <manager_kill_workers+0x88>  // b.any
  40fc48:	b	40fc68 <manager_kill_workers+0xa4>
  40fc4c:	ldr	x0, [sp, #32]
  40fc50:	mov	w1, #0x3                   	// #3
  40fc54:	str	w1, [x0, #24]
  40fc58:	ldr	x0, [sp, #32]
  40fc5c:	ldr	w0, [x0, #8]
  40fc60:	mov	w1, #0xf                   	// #15
  40fc64:	bl	40a2f0 <kill@plt>
  40fc68:	ldr	x0, [sp, #24]
  40fc6c:	ldr	x0, [x0, #8]
  40fc70:	add	x2, sp, #0x20
  40fc74:	add	x1, sp, #0x28
  40fc78:	mov	x3, #0x0                   	// #0
  40fc7c:	bl	40c2a0 <hashmap_iterate>
  40fc80:	and	w0, w0, #0xff
  40fc84:	cmp	w0, #0x0
  40fc88:	b.ne	40fc38 <manager_kill_workers+0x74>  // b.any
  40fc8c:	nop
  40fc90:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40fc94:	add	x0, x0, #0x7a8
  40fc98:	ldr	x1, [sp, #56]
  40fc9c:	ldr	x0, [x0]
  40fca0:	eor	x0, x1, x0
  40fca4:	cmp	x0, #0x0
  40fca8:	b.eq	40fcb0 <manager_kill_workers+0xec>  // b.none
  40fcac:	bl	40b280 <__stack_chk_fail@plt>
  40fcb0:	ldp	x29, x30, [sp], #64
  40fcb4:	ret

000000000040fcb8 <is_device_busy>:
  40fcb8:	stp	x29, x30, [sp, #-176]!
  40fcbc:	mov	x29, sp
  40fcc0:	str	x19, [sp, #16]
  40fcc4:	str	x0, [sp, #40]
  40fcc8:	str	x1, [sp, #32]
  40fccc:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  40fcd0:	add	x0, x0, #0x7a8
  40fcd4:	ldr	x1, [x0]
  40fcd8:	str	x1, [sp, #168]
  40fcdc:	mov	x1, #0x0                   	// #0
  40fce0:	str	xzr, [sp, #88]
  40fce4:	mov	w1, #0x0                   	// #0
  40fce8:	mov	w0, #0x0                   	// #0
  40fcec:	bl	40b260 <gnu_dev_makedev@plt>
  40fcf0:	str	x0, [sp, #96]
  40fcf4:	str	wzr, [sp, #64]
  40fcf8:	ldr	x0, [sp, #32]
  40fcfc:	ldr	x0, [x0, #24]
  40fd00:	add	x1, sp, #0x48
  40fd04:	bl	40af80 <sd_device_get_subsystem@plt>
  40fd08:	str	w0, [sp, #68]
  40fd0c:	ldr	w0, [sp, #68]
  40fd10:	cmp	w0, #0x0
  40fd14:	b.ge	40fd20 <is_device_busy+0x68>  // b.tcont
  40fd18:	ldr	w0, [sp, #68]
  40fd1c:	b	41007c <is_device_busy+0x3c4>
  40fd20:	ldr	x2, [sp, #72]
  40fd24:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40fd28:	add	x1, x0, #0x828
  40fd2c:	mov	x0, x2
  40fd30:	bl	40b710 <strcmp@plt>
  40fd34:	cmp	w0, #0x0
  40fd38:	cset	w0, eq  // eq = none
  40fd3c:	strb	w0, [sp, #63]
  40fd40:	ldr	x0, [sp, #32]
  40fd44:	ldr	x0, [x0, #24]
  40fd48:	add	x1, sp, #0x50
  40fd4c:	bl	40b600 <sd_device_get_devpath@plt>
  40fd50:	str	w0, [sp, #68]
  40fd54:	ldr	w0, [sp, #68]
  40fd58:	cmp	w0, #0x0
  40fd5c:	b.ge	40fd68 <is_device_busy+0xb0>  // b.tcont
  40fd60:	ldr	w0, [sp, #68]
  40fd64:	b	41007c <is_device_busy+0x3c4>
  40fd68:	ldr	x0, [sp, #80]
  40fd6c:	bl	40bd10 <strlen@plt>
  40fd70:	str	x0, [sp, #128]
  40fd74:	ldr	x0, [sp, #32]
  40fd78:	ldr	x3, [x0, #24]
  40fd7c:	add	x0, sp, #0x58
  40fd80:	mov	x2, x0
  40fd84:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40fd88:	add	x1, x0, #0xda8
  40fd8c:	mov	x0, x3
  40fd90:	bl	40a310 <sd_device_get_property_value@plt>
  40fd94:	str	w0, [sp, #68]
  40fd98:	ldr	w0, [sp, #68]
  40fd9c:	cmp	w0, #0x0
  40fda0:	b.ge	40fdb8 <is_device_busy+0x100>  // b.tcont
  40fda4:	ldr	w0, [sp, #68]
  40fda8:	cmn	w0, #0x2
  40fdac:	b.eq	40fdb8 <is_device_busy+0x100>  // b.none
  40fdb0:	ldr	w0, [sp, #68]
  40fdb4:	b	41007c <is_device_busy+0x3c4>
  40fdb8:	ldr	x0, [sp, #32]
  40fdbc:	ldr	x0, [x0, #24]
  40fdc0:	add	x1, sp, #0x60
  40fdc4:	bl	40b3d0 <sd_device_get_devnum@plt>
  40fdc8:	str	w0, [sp, #68]
  40fdcc:	ldr	w0, [sp, #68]
  40fdd0:	cmp	w0, #0x0
  40fdd4:	b.ge	40fdec <is_device_busy+0x134>  // b.tcont
  40fdd8:	ldr	w0, [sp, #68]
  40fddc:	cmn	w0, #0x2
  40fde0:	b.eq	40fdec <is_device_busy+0x134>  // b.none
  40fde4:	ldr	w0, [sp, #68]
  40fde8:	b	41007c <is_device_busy+0x3c4>
  40fdec:	ldr	x0, [sp, #32]
  40fdf0:	ldr	x0, [x0, #24]
  40fdf4:	add	x1, sp, #0x40
  40fdf8:	bl	40bb00 <sd_device_get_ifindex@plt>
  40fdfc:	str	w0, [sp, #68]
  40fe00:	ldr	w0, [sp, #68]
  40fe04:	cmp	w0, #0x0
  40fe08:	b.ge	40fe20 <is_device_busy+0x168>  // b.tcont
  40fe0c:	ldr	w0, [sp, #68]
  40fe10:	cmn	w0, #0x2
  40fe14:	b.eq	40fe20 <is_device_busy+0x168>  // b.none
  40fe18:	ldr	w0, [sp, #68]
  40fe1c:	b	41007c <is_device_busy+0x3c4>
  40fe20:	ldr	x0, [sp, #40]
  40fe24:	ldr	x0, [x0, #16]
  40fe28:	str	x0, [sp, #120]
  40fe2c:	b	410020 <is_device_busy+0x368>
  40fe30:	ldr	x0, [sp, #120]
  40fe34:	ldr	x1, [x0, #40]
  40fe38:	ldr	x0, [sp, #32]
  40fe3c:	ldr	x0, [x0, #48]
  40fe40:	cmp	x1, x0
  40fe44:	b.cc	410000 <is_device_busy+0x348>  // b.lo, b.ul, b.last
  40fe48:	ldr	x0, [sp, #120]
  40fe4c:	ldr	x1, [x0, #40]
  40fe50:	ldr	x0, [sp, #32]
  40fe54:	ldr	x0, [x0, #48]
  40fe58:	cmp	x1, x0
  40fe5c:	b.ne	40fe68 <is_device_busy+0x1b0>  // b.any
  40fe60:	mov	w0, #0x1                   	// #1
  40fe64:	b	41007c <is_device_busy+0x3c4>
  40fe68:	ldr	x0, [sp, #120]
  40fe6c:	ldr	x1, [x0, #40]
  40fe70:	ldr	x0, [sp, #32]
  40fe74:	ldr	x0, [x0, #40]
  40fe78:	cmp	x1, x0
  40fe7c:	b.cs	410030 <is_device_busy+0x378>  // b.hs, b.nlast
  40fe80:	ldr	x0, [sp, #96]
  40fe84:	bl	40b610 <gnu_dev_major@plt>
  40fe88:	cmp	w0, #0x0
  40fe8c:	b.eq	40ff04 <is_device_busy+0x24c>  // b.none
  40fe90:	ldr	x0, [sp, #120]
  40fe94:	ldr	x0, [x0, #24]
  40fe98:	add	x1, sp, #0x68
  40fe9c:	bl	40af80 <sd_device_get_subsystem@plt>
  40fea0:	cmp	w0, #0x0
  40fea4:	b.ge	40feb0 <is_device_busy+0x1f8>  // b.tcont
  40fea8:	nop
  40feac:	b	410000 <is_device_busy+0x348>
  40feb0:	ldr	x0, [sp, #120]
  40feb4:	ldr	x0, [x0, #24]
  40feb8:	add	x1, sp, #0x70
  40febc:	bl	40b3d0 <sd_device_get_devnum@plt>
  40fec0:	cmp	w0, #0x0
  40fec4:	b.lt	40ff04 <is_device_busy+0x24c>  // b.tstop
  40fec8:	ldr	x1, [sp, #96]
  40fecc:	ldr	x0, [sp, #112]
  40fed0:	cmp	x1, x0
  40fed4:	b.ne	40ff04 <is_device_busy+0x24c>  // b.any
  40fed8:	ldrb	w19, [sp, #63]
  40fedc:	ldr	x2, [sp, #104]
  40fee0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  40fee4:	add	x1, x0, #0x828
  40fee8:	mov	x0, x2
  40feec:	bl	40b710 <strcmp@plt>
  40fef0:	cmp	w0, #0x0
  40fef4:	cset	w0, eq  // eq = none
  40fef8:	and	w0, w0, #0xff
  40fefc:	cmp	w19, w0
  40ff00:	b.eq	41003c <is_device_busy+0x384>  // b.none
  40ff04:	ldr	w0, [sp, #64]
  40ff08:	cmp	w0, #0x0
  40ff0c:	b.le	40ff38 <is_device_busy+0x280>
  40ff10:	ldr	x0, [sp, #120]
  40ff14:	ldr	x0, [x0, #24]
  40ff18:	add	x1, sp, #0x70
  40ff1c:	bl	40bb00 <sd_device_get_ifindex@plt>
  40ff20:	cmp	w0, #0x0
  40ff24:	b.lt	40ff38 <is_device_busy+0x280>  // b.tstop
  40ff28:	ldr	w1, [sp, #64]
  40ff2c:	ldr	w0, [sp, #112]
  40ff30:	cmp	w1, w0
  40ff34:	b.eq	410044 <is_device_busy+0x38c>  // b.none
  40ff38:	ldr	x0, [sp, #120]
  40ff3c:	ldr	x0, [x0, #24]
  40ff40:	add	x1, sp, #0x70
  40ff44:	bl	40b600 <sd_device_get_devpath@plt>
  40ff48:	cmp	w0, #0x0
  40ff4c:	b.lt	410008 <is_device_busy+0x350>  // b.tstop
  40ff50:	ldr	x0, [sp, #88]
  40ff54:	cmp	x0, #0x0
  40ff58:	b.eq	40ff70 <is_device_busy+0x2b8>  // b.none
  40ff5c:	ldr	x0, [sp, #88]
  40ff60:	ldr	x1, [sp, #112]
  40ff64:	bl	40b710 <strcmp@plt>
  40ff68:	cmp	w0, #0x0
  40ff6c:	b.eq	41004c <is_device_busy+0x394>  // b.none
  40ff70:	ldr	x0, [sp, #112]
  40ff74:	bl	40bd10 <strlen@plt>
  40ff78:	str	x0, [sp, #136]
  40ff7c:	ldr	x0, [sp, #128]
  40ff80:	str	x0, [sp, #144]
  40ff84:	ldr	x0, [sp, #136]
  40ff88:	str	x0, [sp, #152]
  40ff8c:	ldr	x0, [sp, #144]
  40ff90:	ldr	x2, [sp, #152]
  40ff94:	ldr	x1, [sp, #152]
  40ff98:	cmp	x2, x0
  40ff9c:	csel	x0, x1, x0, ls  // ls = plast
  40ffa0:	str	x0, [sp, #160]
  40ffa4:	ldr	x0, [sp, #80]
  40ffa8:	ldr	x1, [sp, #112]
  40ffac:	ldr	x2, [sp, #160]
  40ffb0:	bl	40ae00 <strncmp@plt>
  40ffb4:	cmp	w0, #0x0
  40ffb8:	b.ne	410010 <is_device_busy+0x358>  // b.any
  40ffbc:	ldr	x1, [sp, #128]
  40ffc0:	ldr	x0, [sp, #136]
  40ffc4:	cmp	x1, x0
  40ffc8:	b.eq	410054 <is_device_busy+0x39c>  // b.none
  40ffcc:	ldr	x1, [sp, #80]
  40ffd0:	ldr	x0, [sp, #160]
  40ffd4:	add	x0, x1, x0
  40ffd8:	ldrb	w0, [x0]
  40ffdc:	cmp	w0, #0x2f
  40ffe0:	b.eq	41005c <is_device_busy+0x3a4>  // b.none
  40ffe4:	ldr	x1, [sp, #112]
  40ffe8:	ldr	x0, [sp, #160]
  40ffec:	add	x0, x1, x0
  40fff0:	ldrb	w0, [x0]
  40fff4:	cmp	w0, #0x2f
  40fff8:	b.eq	410064 <is_device_busy+0x3ac>  // b.none
  40fffc:	b	410014 <is_device_busy+0x35c>
  410000:	nop
  410004:	b	410014 <is_device_busy+0x35c>
  410008:	nop
  41000c:	b	410014 <is_device_busy+0x35c>
  410010:	nop
  410014:	ldr	x0, [sp, #120]
  410018:	ldr	x0, [x0, #72]
  41001c:	str	x0, [sp, #120]
  410020:	ldr	x0, [sp, #120]
  410024:	cmp	x0, #0x0
  410028:	b.ne	40fe30 <is_device_busy+0x178>  // b.any
  41002c:	b	410034 <is_device_busy+0x37c>
  410030:	nop
  410034:	mov	w0, #0x0                   	// #0
  410038:	b	41007c <is_device_busy+0x3c4>
  41003c:	nop
  410040:	b	410068 <is_device_busy+0x3b0>
  410044:	nop
  410048:	b	410068 <is_device_busy+0x3b0>
  41004c:	nop
  410050:	b	410068 <is_device_busy+0x3b0>
  410054:	nop
  410058:	b	410068 <is_device_busy+0x3b0>
  41005c:	nop
  410060:	b	410068 <is_device_busy+0x3b0>
  410064:	nop
  410068:	ldr	x0, [sp, #120]
  41006c:	ldr	x1, [x0, #40]
  410070:	ldr	x0, [sp, #32]
  410074:	str	x1, [x0, #48]
  410078:	mov	w0, #0x1                   	// #1
  41007c:	mov	w1, w0
  410080:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  410084:	add	x0, x0, #0x7a8
  410088:	ldr	x2, [sp, #168]
  41008c:	ldr	x0, [x0]
  410090:	eor	x0, x2, x0
  410094:	cmp	x0, #0x0
  410098:	b.eq	4100a0 <is_device_busy+0x3e8>  // b.none
  41009c:	bl	40b280 <__stack_chk_fail@plt>
  4100a0:	mov	w0, w1
  4100a4:	ldr	x19, [sp, #16]
  4100a8:	ldp	x29, x30, [sp], #176
  4100ac:	ret

00000000004100b0 <manager_exit>:
  4100b0:	stp	x29, x30, [sp, #-32]!
  4100b4:	mov	x29, sp
  4100b8:	str	x0, [sp, #24]
  4100bc:	ldr	x0, [sp, #24]
  4100c0:	cmp	x0, #0x0
  4100c4:	cset	w0, eq  // eq = none
  4100c8:	and	w0, w0, #0xff
  4100cc:	and	x0, x0, #0xff
  4100d0:	cmp	x0, #0x0
  4100d4:	b.eq	410100 <manager_exit+0x50>  // b.none
  4100d8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4100dc:	add	x1, x0, #0x66b
  4100e0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4100e4:	add	x4, x0, #0x228
  4100e8:	mov	w3, #0x30a                 	// #778
  4100ec:	mov	x2, x1
  4100f0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4100f4:	add	x1, x0, #0x6f8
  4100f8:	mov	w0, #0x1                   	// #1
  4100fc:	bl	40abb0 <log_assert_failed_realm@plt>
  410100:	ldr	x0, [sp, #24]
  410104:	ldrb	w1, [x0, #120]
  410108:	orr	w1, w1, #0x2
  41010c:	strb	w1, [x0, #120]
  410110:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410114:	add	x1, x0, #0xdb8
  410118:	mov	w0, #0x0                   	// #0
  41011c:	bl	40b470 <sd_notify@plt>
  410120:	ldr	x0, [sp, #24]
  410124:	ldr	x0, [x0, #72]
  410128:	bl	41611c <udev_ctrl_unref>
  41012c:	mov	x1, x0
  410130:	ldr	x0, [sp, #24]
  410134:	str	x1, [x0, #72]
  410138:	ldr	x0, [sp, #24]
  41013c:	ldr	x0, [x0, #96]
  410140:	bl	40a9f0 <sd_event_source_unref@plt>
  410144:	mov	x1, x0
  410148:	ldr	x0, [sp, #24]
  41014c:	str	x1, [x0, #96]
  410150:	ldr	x0, [sp, #24]
  410154:	ldr	w0, [x0, #80]
  410158:	bl	40aad0 <safe_close@plt>
  41015c:	mov	w1, w0
  410160:	ldr	x0, [sp, #24]
  410164:	str	w1, [x0, #80]
  410168:	ldr	x0, [sp, #24]
  41016c:	ldr	x0, [x0, #64]
  410170:	bl	40b3c0 <sd_device_monitor_unref@plt>
  410174:	mov	x1, x0
  410178:	ldr	x0, [sp, #24]
  41017c:	str	x1, [x0, #64]
  410180:	mov	w1, #0x1                   	// #1
  410184:	ldr	x0, [sp, #24]
  410188:	bl	410694 <event_queue_cleanup>
  41018c:	ldr	x0, [sp, #24]
  410190:	bl	40fbc4 <manager_kill_workers>
  410194:	nop
  410198:	ldp	x29, x30, [sp], #32
  41019c:	ret

00000000004101a0 <manager_reload>:
  4101a0:	stp	x29, x30, [sp, #-32]!
  4101a4:	mov	x29, sp
  4101a8:	str	x0, [sp, #24]
  4101ac:	ldr	x0, [sp, #24]
  4101b0:	cmp	x0, #0x0
  4101b4:	cset	w0, eq  // eq = none
  4101b8:	and	w0, w0, #0xff
  4101bc:	and	x0, x0, #0xff
  4101c0:	cmp	x0, #0x0
  4101c4:	b.eq	4101f0 <manager_reload+0x50>  // b.none
  4101c8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4101cc:	add	x1, x0, #0x66b
  4101d0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4101d4:	add	x4, x0, #0x238
  4101d8:	mov	w3, #0x322                 	// #802
  4101dc:	mov	x2, x1
  4101e0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4101e4:	add	x1, x0, #0x6f8
  4101e8:	mov	w0, #0x1                   	// #1
  4101ec:	bl	40abb0 <log_assert_failed_realm@plt>
  4101f0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4101f4:	add	x1, x0, #0xde0
  4101f8:	mov	w0, #0x0                   	// #0
  4101fc:	bl	40b470 <sd_notify@plt>
  410200:	ldr	x0, [sp, #24]
  410204:	bl	40fbc4 <manager_kill_workers>
  410208:	ldr	x0, [sp, #24]
  41020c:	ldr	x0, [x0, #40]
  410210:	bl	4205b0 <udev_rules_free>
  410214:	mov	x1, x0
  410218:	ldr	x0, [sp, #24]
  41021c:	str	x1, [x0, #40]
  410220:	bl	435fa4 <udev_builtin_exit>
  410224:	adrp	x0, 48d000 <arg_resolve_name_timing>
  410228:	add	x0, x0, #0x190
  41022c:	ldr	w0, [x0]
  410230:	mov	w2, w0
  410234:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410238:	add	x1, x0, #0xe10
  41023c:	mov	w0, #0x0                   	// #0
  410240:	bl	40b070 <sd_notifyf@plt>
  410244:	nop
  410248:	ldp	x29, x30, [sp], #32
  41024c:	ret

0000000000410250 <on_kill_workers_event>:
  410250:	stp	x29, x30, [sp, #-80]!
  410254:	mov	x29, sp
  410258:	str	x0, [sp, #40]
  41025c:	str	x1, [sp, #32]
  410260:	str	x2, [sp, #24]
  410264:	ldr	x0, [sp, #24]
  410268:	str	x0, [sp, #72]
  41026c:	ldr	x0, [sp, #72]
  410270:	cmp	x0, #0x0
  410274:	cset	w0, eq  // eq = none
  410278:	and	w0, w0, #0xff
  41027c:	and	x0, x0, #0xff
  410280:	cmp	x0, #0x0
  410284:	b.eq	4102b0 <on_kill_workers_event+0x60>  // b.none
  410288:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41028c:	add	x1, x0, #0x66b
  410290:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410294:	add	x4, x0, #0x248
  410298:	mov	w3, #0x334                 	// #820
  41029c:	mov	x2, x1
  4102a0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4102a4:	add	x1, x0, #0x6f8
  4102a8:	mov	w0, #0x1                   	// #1
  4102ac:	bl	40abb0 <log_assert_failed_realm@plt>
  4102b0:	mov	w0, #0x7                   	// #7
  4102b4:	str	w0, [sp, #60]
  4102b8:	str	wzr, [sp, #64]
  4102bc:	mov	w0, #0x1                   	// #1
  4102c0:	str	w0, [sp, #68]
  4102c4:	ldr	w0, [sp, #68]
  4102c8:	bl	40be30 <log_get_max_level_realm@plt>
  4102cc:	mov	w1, w0
  4102d0:	ldr	w0, [sp, #60]
  4102d4:	and	w0, w0, #0x7
  4102d8:	cmp	w1, w0
  4102dc:	b.lt	410320 <on_kill_workers_event+0xd0>  // b.tstop
  4102e0:	ldr	w0, [sp, #68]
  4102e4:	lsl	w1, w0, #10
  4102e8:	ldr	w0, [sp, #60]
  4102ec:	orr	w6, w1, w0
  4102f0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4102f4:	add	x1, x0, #0x66b
  4102f8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4102fc:	add	x5, x0, #0xe48
  410300:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410304:	add	x4, x0, #0x260
  410308:	mov	w3, #0x336                 	// #822
  41030c:	mov	x2, x1
  410310:	ldr	w1, [sp, #64]
  410314:	mov	w0, w6
  410318:	bl	40b4f0 <log_internal_realm@plt>
  41031c:	b	410328 <on_kill_workers_event+0xd8>
  410320:	ldr	w0, [sp, #64]
  410324:	cmp	w0, #0x0
  410328:	ldr	x0, [sp, #72]
  41032c:	bl	40fbc4 <manager_kill_workers>
  410330:	mov	w0, #0x1                   	// #1
  410334:	ldp	x29, x30, [sp], #80
  410338:	ret

000000000041033c <event_queue_start>:
  41033c:	stp	x29, x30, [sp, #-96]!
  410340:	mov	x29, sp
  410344:	str	x0, [sp, #24]
  410348:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  41034c:	add	x0, x0, #0x7a8
  410350:	ldr	x1, [x0]
  410354:	str	x1, [sp, #88]
  410358:	mov	x1, #0x0                   	// #0
  41035c:	ldr	x0, [sp, #24]
  410360:	cmp	x0, #0x0
  410364:	cset	w0, eq  // eq = none
  410368:	and	w0, w0, #0xff
  41036c:	and	x0, x0, #0xff
  410370:	cmp	x0, #0x0
  410374:	b.eq	4103a0 <event_queue_start+0x64>  // b.none
  410378:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41037c:	add	x1, x0, #0x66b
  410380:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410384:	add	x4, x0, #0x278
  410388:	mov	w3, #0x341                 	// #833
  41038c:	mov	x2, x1
  410390:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410394:	add	x1, x0, #0x6f8
  410398:	mov	w0, #0x1                   	// #1
  41039c:	bl	40abb0 <log_assert_failed_realm@plt>
  4103a0:	ldr	x0, [sp, #24]
  4103a4:	ldr	x0, [x0, #16]
  4103a8:	cmp	x0, #0x0
  4103ac:	b.eq	410668 <event_queue_start+0x32c>  // b.none
  4103b0:	ldr	x0, [sp, #24]
  4103b4:	ldrb	w0, [x0, #120]
  4103b8:	and	w0, w0, #0x2
  4103bc:	and	w0, w0, #0xff
  4103c0:	cmp	w0, #0x0
  4103c4:	b.ne	410668 <event_queue_start+0x32c>  // b.any
  4103c8:	ldr	x0, [sp, #24]
  4103cc:	ldrb	w0, [x0, #120]
  4103d0:	and	w0, w0, #0x1
  4103d4:	and	w0, w0, #0xff
  4103d8:	cmp	w0, #0x0
  4103dc:	b.ne	410668 <event_queue_start+0x32c>  // b.any
  4103e0:	ldr	x0, [sp, #24]
  4103e4:	ldr	x0, [x0]
  4103e8:	add	x1, sp, #0x48
  4103ec:	mov	x2, x1
  4103f0:	mov	w1, #0x1                   	// #1
  4103f4:	bl	40ac50 <sd_event_now@plt>
  4103f8:	lsr	w0, w0, #31
  4103fc:	and	w0, w0, #0xff
  410400:	and	x0, x0, #0xff
  410404:	cmp	x0, #0x0
  410408:	b.eq	410434 <event_queue_start+0xf8>  // b.none
  41040c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410410:	add	x1, x0, #0x66b
  410414:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410418:	add	x4, x0, #0x278
  41041c:	mov	w3, #0x347                 	// #839
  410420:	mov	x2, x1
  410424:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410428:	add	x1, x0, #0xe60
  41042c:	mov	w0, #0x1                   	// #1
  410430:	bl	40abb0 <log_assert_failed_realm@plt>
  410434:	ldr	x0, [sp, #24]
  410438:	ldr	x0, [x0, #112]
  41043c:	cmp	x0, #0x0
  410440:	b.eq	410464 <event_queue_start+0x128>  // b.none
  410444:	ldr	x1, [sp, #72]
  410448:	ldr	x0, [sp, #24]
  41044c:	ldr	x0, [x0, #112]
  410450:	sub	x1, x1, x0
  410454:	mov	x0, #0xc6c0                	// #50880
  410458:	movk	x0, #0x2d, lsl #16
  41045c:	cmp	x1, x0
  410460:	b.ls	4104a0 <event_queue_start+0x164>  // b.plast
  410464:	ldr	x0, [sp, #24]
  410468:	ldr	x0, [x0, #40]
  41046c:	bl	42c700 <udev_rules_check_timestamp>
  410470:	and	w0, w0, #0xff
  410474:	cmp	w0, #0x0
  410478:	b.ne	41048c <event_queue_start+0x150>  // b.any
  41047c:	bl	436050 <udev_builtin_validate>
  410480:	and	w0, w0, #0xff
  410484:	cmp	w0, #0x0
  410488:	b.eq	410494 <event_queue_start+0x158>  // b.none
  41048c:	ldr	x0, [sp, #24]
  410490:	bl	4101a0 <manager_reload>
  410494:	ldr	x1, [sp, #72]
  410498:	ldr	x0, [sp, #24]
  41049c:	str	x1, [x0, #112]
  4104a0:	ldr	x0, [sp, #24]
  4104a4:	ldr	x0, [x0, #104]
  4104a8:	bl	40b990 <event_source_disable@plt>
  4104ac:	str	w0, [sp, #44]
  4104b0:	ldr	w0, [sp, #44]
  4104b4:	cmp	w0, #0x0
  4104b8:	b.ge	410538 <event_queue_start+0x1fc>  // b.tcont
  4104bc:	mov	w0, #0x4                   	// #4
  4104c0:	str	w0, [sp, #48]
  4104c4:	ldr	w0, [sp, #44]
  4104c8:	str	w0, [sp, #52]
  4104cc:	mov	w0, #0x1                   	// #1
  4104d0:	str	w0, [sp, #56]
  4104d4:	ldr	w0, [sp, #56]
  4104d8:	bl	40be30 <log_get_max_level_realm@plt>
  4104dc:	mov	w1, w0
  4104e0:	ldr	w0, [sp, #48]
  4104e4:	and	w0, w0, #0x7
  4104e8:	cmp	w1, w0
  4104ec:	b.lt	410530 <event_queue_start+0x1f4>  // b.tstop
  4104f0:	ldr	w0, [sp, #56]
  4104f4:	lsl	w1, w0, #10
  4104f8:	ldr	w0, [sp, #48]
  4104fc:	orr	w6, w1, w0
  410500:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410504:	add	x1, x0, #0x66b
  410508:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41050c:	add	x5, x0, #0xea0
  410510:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410514:	add	x4, x0, #0x290
  410518:	mov	w3, #0x354                 	// #852
  41051c:	mov	x2, x1
  410520:	ldr	w1, [sp, #52]
  410524:	mov	w0, w6
  410528:	bl	40b4f0 <log_internal_realm@plt>
  41052c:	b	410538 <event_queue_start+0x1fc>
  410530:	ldr	w0, [sp, #52]
  410534:	cmp	w0, #0x0
  410538:	bl	435efc <udev_builtin_init>
  41053c:	ldr	x0, [sp, #24]
  410540:	ldr	x0, [x0, #40]
  410544:	cmp	x0, #0x0
  410548:	b.ne	4105fc <event_queue_start+0x2c0>  // b.any
  41054c:	ldr	x0, [sp, #24]
  410550:	add	x2, x0, #0x28
  410554:	adrp	x0, 48d000 <arg_resolve_name_timing>
  410558:	add	x0, x0, #0x0
  41055c:	ldr	w0, [x0]
  410560:	mov	w1, w0
  410564:	mov	x0, x2
  410568:	bl	42c49c <udev_rules_new>
  41056c:	str	w0, [sp, #44]
  410570:	ldr	w0, [sp, #44]
  410574:	cmp	w0, #0x0
  410578:	b.ge	4105fc <event_queue_start+0x2c0>  // b.tcont
  41057c:	mov	w0, #0x4                   	// #4
  410580:	str	w0, [sp, #60]
  410584:	ldr	w0, [sp, #44]
  410588:	str	w0, [sp, #64]
  41058c:	mov	w0, #0x1                   	// #1
  410590:	str	w0, [sp, #68]
  410594:	ldr	w0, [sp, #68]
  410598:	bl	40be30 <log_get_max_level_realm@plt>
  41059c:	mov	w1, w0
  4105a0:	ldr	w0, [sp, #60]
  4105a4:	and	w0, w0, #0x7
  4105a8:	cmp	w1, w0
  4105ac:	b.lt	4105f0 <event_queue_start+0x2b4>  // b.tstop
  4105b0:	ldr	w0, [sp, #68]
  4105b4:	lsl	w1, w0, #10
  4105b8:	ldr	w0, [sp, #60]
  4105bc:	orr	w6, w1, w0
  4105c0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4105c4:	add	x1, x0, #0x66b
  4105c8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4105cc:	add	x5, x0, #0xef0
  4105d0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4105d4:	add	x4, x0, #0x290
  4105d8:	mov	w3, #0x35b                 	// #859
  4105dc:	mov	x2, x1
  4105e0:	ldr	w1, [sp, #64]
  4105e4:	mov	w0, w6
  4105e8:	bl	40b4f0 <log_internal_realm@plt>
  4105ec:	b	41066c <event_queue_start+0x330>
  4105f0:	ldr	w0, [sp, #64]
  4105f4:	cmp	w0, #0x0
  4105f8:	b	41066c <event_queue_start+0x330>
  4105fc:	ldr	x0, [sp, #24]
  410600:	ldr	x0, [x0, #16]
  410604:	str	x0, [sp, #80]
  410608:	b	410658 <event_queue_start+0x31c>
  41060c:	ldr	x0, [sp, #80]
  410610:	ldr	w0, [x0, #16]
  410614:	cmp	w0, #0x1
  410618:	b.ne	410640 <event_queue_start+0x304>  // b.any
  41061c:	ldr	x1, [sp, #80]
  410620:	ldr	x0, [sp, #24]
  410624:	bl	40fcb8 <is_device_busy>
  410628:	cmp	w0, #0x0
  41062c:	b.ne	410648 <event_queue_start+0x30c>  // b.any
  410630:	ldr	x1, [sp, #80]
  410634:	ldr	x0, [sp, #24]
  410638:	bl	40f324 <event_run>
  41063c:	b	41064c <event_queue_start+0x310>
  410640:	nop
  410644:	b	41064c <event_queue_start+0x310>
  410648:	nop
  41064c:	ldr	x0, [sp, #80]
  410650:	ldr	x0, [x0, #72]
  410654:	str	x0, [sp, #80]
  410658:	ldr	x0, [sp, #80]
  41065c:	cmp	x0, #0x0
  410660:	b.ne	41060c <event_queue_start+0x2d0>  // b.any
  410664:	b	41066c <event_queue_start+0x330>
  410668:	nop
  41066c:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  410670:	add	x0, x0, #0x7a8
  410674:	ldr	x1, [sp, #88]
  410678:	ldr	x0, [x0]
  41067c:	eor	x0, x1, x0
  410680:	cmp	x0, #0x0
  410684:	b.eq	41068c <event_queue_start+0x350>  // b.none
  410688:	bl	40b280 <__stack_chk_fail@plt>
  41068c:	ldp	x29, x30, [sp], #96
  410690:	ret

0000000000410694 <event_queue_cleanup>:
  410694:	stp	x29, x30, [sp, #-48]!
  410698:	mov	x29, sp
  41069c:	str	x0, [sp, #24]
  4106a0:	str	w1, [sp, #20]
  4106a4:	ldr	x0, [sp, #24]
  4106a8:	ldr	x0, [x0, #16]
  4106ac:	str	x0, [sp, #32]
  4106b0:	b	4106e0 <event_queue_cleanup+0x4c>
  4106b4:	ldr	x0, [sp, #32]
  4106b8:	ldr	w0, [x0, #16]
  4106bc:	ldr	w1, [sp, #20]
  4106c0:	cmp	w1, w0
  4106c4:	b.ne	4106d4 <event_queue_cleanup+0x40>  // b.any
  4106c8:	ldr	x0, [sp, #32]
  4106cc:	bl	40c72c <event_free>
  4106d0:	b	4106d8 <event_queue_cleanup+0x44>
  4106d4:	nop
  4106d8:	ldr	x0, [sp, #40]
  4106dc:	str	x0, [sp, #32]
  4106e0:	ldr	x0, [sp, #32]
  4106e4:	cmp	x0, #0x0
  4106e8:	b.eq	410708 <event_queue_cleanup+0x74>  // b.none
  4106ec:	ldr	x0, [sp, #32]
  4106f0:	ldr	x0, [x0, #72]
  4106f4:	str	x0, [sp, #40]
  4106f8:	ldr	w0, [sp, #20]
  4106fc:	cmp	w0, #0x0
  410700:	b.eq	4106c8 <event_queue_cleanup+0x34>  // b.none
  410704:	b	4106b4 <event_queue_cleanup+0x20>
  410708:	nop
  41070c:	ldp	x29, x30, [sp], #48
  410710:	ret

0000000000410714 <on_worker>:
  410714:	stp	x29, x30, [sp, #-272]!
  410718:	mov	x29, sp
  41071c:	str	x19, [sp, #16]
  410720:	str	x0, [sp, #56]
  410724:	str	w1, [sp, #52]
  410728:	str	w2, [sp, #48]
  41072c:	str	x3, [sp, #40]
  410730:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  410734:	add	x0, x0, #0x7a8
  410738:	ldr	x1, [x0]
  41073c:	str	x1, [sp, #264]
  410740:	mov	x1, #0x0                   	// #0
  410744:	ldr	x0, [sp, #40]
  410748:	str	x0, [sp, #136]
  41074c:	ldr	x0, [sp, #136]
  410750:	cmp	x0, #0x0
  410754:	cset	w0, eq  // eq = none
  410758:	and	w0, w0, #0xff
  41075c:	and	x0, x0, #0xff
  410760:	cmp	x0, #0x0
  410764:	b.eq	410790 <on_worker+0x7c>  // b.none
  410768:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41076c:	add	x1, x0, #0x66b
  410770:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410774:	add	x4, x0, #0x2a8
  410778:	mov	w3, #0x37a                 	// #890
  41077c:	mov	x2, x1
  410780:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410784:	add	x1, x0, #0x6f8
  410788:	mov	w0, #0x1                   	// #1
  41078c:	bl	40abb0 <log_assert_failed_realm@plt>
  410790:	add	x0, sp, #0x40
  410794:	str	x0, [sp, #160]
  410798:	str	xzr, [sp, #168]
  41079c:	stp	xzr, xzr, [sp, #232]
  4107a0:	stp	xzr, xzr, [sp, #248]
  4107a4:	stp	xzr, xzr, [sp, #176]
  4107a8:	stp	xzr, xzr, [sp, #192]
  4107ac:	stp	xzr, xzr, [sp, #208]
  4107b0:	str	xzr, [sp, #224]
  4107b4:	add	x0, sp, #0xa0
  4107b8:	str	x0, [sp, #192]
  4107bc:	mov	x0, #0x1                   	// #1
  4107c0:	str	x0, [sp, #200]
  4107c4:	add	x0, sp, #0xe8
  4107c8:	str	x0, [sp, #208]
  4107cc:	mov	x0, #0x20                  	// #32
  4107d0:	str	x0, [sp, #216]
  4107d4:	str	xzr, [sp, #128]
  4107d8:	add	x0, sp, #0xb0
  4107dc:	mov	w2, #0x40                  	// #64
  4107e0:	mov	x1, x0
  4107e4:	ldr	w0, [sp, #52]
  4107e8:	bl	40b730 <recvmsg@plt>
  4107ec:	str	x0, [sp, #144]
  4107f0:	ldr	x0, [sp, #144]
  4107f4:	cmp	x0, #0x0
  4107f8:	b.ge	4108bc <on_worker+0x1a8>  // b.tcont
  4107fc:	bl	40b040 <__errno_location@plt>
  410800:	ldr	w0, [x0]
  410804:	cmp	w0, #0x4
  410808:	b.eq	410b3c <on_worker+0x428>  // b.none
  41080c:	bl	40b040 <__errno_location@plt>
  410810:	ldr	w0, [x0]
  410814:	cmp	w0, #0xb
  410818:	b.ne	41082c <on_worker+0x118>  // b.any
  41081c:	ldr	x0, [sp, #136]
  410820:	bl	41033c <event_queue_start>
  410824:	mov	w0, #0x1                   	// #1
  410828:	b	410b44 <on_worker+0x430>
  41082c:	mov	w0, #0x3                   	// #3
  410830:	str	w0, [sp, #108]
  410834:	bl	40b040 <__errno_location@plt>
  410838:	ldr	w0, [x0]
  41083c:	str	w0, [sp, #112]
  410840:	mov	w0, #0x1                   	// #1
  410844:	str	w0, [sp, #116]
  410848:	ldr	w0, [sp, #116]
  41084c:	bl	40be30 <log_get_max_level_realm@plt>
  410850:	mov	w1, w0
  410854:	ldr	w0, [sp, #108]
  410858:	and	w0, w0, #0x7
  41085c:	cmp	w1, w0
  410860:	b.lt	4108a4 <on_worker+0x190>  // b.tstop
  410864:	ldr	w0, [sp, #116]
  410868:	lsl	w1, w0, #10
  41086c:	ldr	w0, [sp, #108]
  410870:	orr	w6, w1, w0
  410874:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410878:	add	x1, x0, #0x66b
  41087c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410880:	add	x5, x0, #0xf10
  410884:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410888:	add	x4, x0, #0x2b8
  41088c:	mov	w3, #0x399                 	// #921
  410890:	mov	x2, x1
  410894:	ldr	w1, [sp, #112]
  410898:	mov	w0, w6
  41089c:	bl	40b4f0 <log_internal_realm@plt>
  4108a0:	b	410b44 <on_worker+0x430>
  4108a4:	ldr	w0, [sp, #112]
  4108a8:	cmp	w0, #0x0
  4108ac:	cneg	w0, w0, lt  // lt = tstop
  4108b0:	and	w0, w0, #0xff
  4108b4:	neg	w0, w0
  4108b8:	b	410b44 <on_worker+0x430>
  4108bc:	ldr	x0, [sp, #144]
  4108c0:	cmp	x0, #0x0
  4108c4:	b.eq	410948 <on_worker+0x234>  // b.none
  4108c8:	mov	w0, #0x4                   	// #4
  4108cc:	str	w0, [sp, #96]
  4108d0:	str	wzr, [sp, #100]
  4108d4:	mov	w0, #0x1                   	// #1
  4108d8:	str	w0, [sp, #104]
  4108dc:	ldr	w0, [sp, #104]
  4108e0:	bl	40be30 <log_get_max_level_realm@plt>
  4108e4:	mov	w1, w0
  4108e8:	ldr	w0, [sp, #96]
  4108ec:	and	w0, w0, #0x7
  4108f0:	cmp	w1, w0
  4108f4:	b.lt	41093c <on_worker+0x228>  // b.tstop
  4108f8:	ldr	w0, [sp, #104]
  4108fc:	lsl	w1, w0, #10
  410900:	ldr	w0, [sp, #96]
  410904:	orr	w7, w1, w0
  410908:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41090c:	add	x1, x0, #0x66b
  410910:	ldr	x6, [sp, #144]
  410914:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410918:	add	x5, x0, #0xf30
  41091c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410920:	add	x4, x0, #0x2b8
  410924:	mov	w3, #0x39b                 	// #923
  410928:	mov	x2, x1
  41092c:	ldr	w1, [sp, #100]
  410930:	mov	w0, w7
  410934:	bl	40b4f0 <log_internal_realm@plt>
  410938:	b	410b40 <on_worker+0x42c>
  41093c:	ldr	w0, [sp, #100]
  410940:	cmp	w0, #0x0
  410944:	b	410b40 <on_worker+0x42c>
  410948:	ldr	x0, [sp, #216]
  41094c:	cmp	x0, #0xf
  410950:	b.ls	41095c <on_worker+0x248>  // b.plast
  410954:	ldr	x0, [sp, #208]
  410958:	b	410960 <on_worker+0x24c>
  41095c:	mov	x0, #0x0                   	// #0
  410960:	str	x0, [sp, #120]
  410964:	b	4109b4 <on_worker+0x2a0>
  410968:	ldr	x0, [sp, #120]
  41096c:	ldr	w0, [x0, #8]
  410970:	cmp	w0, #0x1
  410974:	b.ne	4109a4 <on_worker+0x290>  // b.any
  410978:	ldr	x0, [sp, #120]
  41097c:	ldr	w0, [x0, #12]
  410980:	cmp	w0, #0x2
  410984:	b.ne	4109a4 <on_worker+0x290>  // b.any
  410988:	ldr	x0, [sp, #120]
  41098c:	ldr	x0, [x0]
  410990:	cmp	x0, #0x1c
  410994:	b.ne	4109a4 <on_worker+0x290>  // b.any
  410998:	ldr	x0, [sp, #120]
  41099c:	add	x0, x0, #0x10
  4109a0:	str	x0, [sp, #128]
  4109a4:	add	x0, sp, #0xb0
  4109a8:	ldr	x1, [sp, #120]
  4109ac:	bl	40a970 <__cmsg_nxthdr@plt>
  4109b0:	str	x0, [sp, #120]
  4109b4:	ldr	x0, [sp, #120]
  4109b8:	cmp	x0, #0x0
  4109bc:	b.ne	410968 <on_worker+0x254>  // b.any
  4109c0:	ldr	x0, [sp, #128]
  4109c4:	cmp	x0, #0x0
  4109c8:	b.eq	4109dc <on_worker+0x2c8>  // b.none
  4109cc:	ldr	x0, [sp, #128]
  4109d0:	ldr	w0, [x0]
  4109d4:	cmp	w0, #0x0
  4109d8:	b.gt	410a58 <on_worker+0x344>
  4109dc:	mov	w0, #0x4                   	// #4
  4109e0:	str	w0, [sp, #84]
  4109e4:	str	wzr, [sp, #88]
  4109e8:	mov	w0, #0x1                   	// #1
  4109ec:	str	w0, [sp, #92]
  4109f0:	ldr	w0, [sp, #92]
  4109f4:	bl	40be30 <log_get_max_level_realm@plt>
  4109f8:	mov	w1, w0
  4109fc:	ldr	w0, [sp, #84]
  410a00:	and	w0, w0, #0x7
  410a04:	cmp	w1, w0
  410a08:	b.lt	410a4c <on_worker+0x338>  // b.tstop
  410a0c:	ldr	w0, [sp, #92]
  410a10:	lsl	w1, w0, #10
  410a14:	ldr	w0, [sp, #84]
  410a18:	orr	w6, w1, w0
  410a1c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410a20:	add	x1, x0, #0x66b
  410a24:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410a28:	add	x5, x0, #0xf68
  410a2c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410a30:	add	x4, x0, #0x2b8
  410a34:	mov	w3, #0x3a6                 	// #934
  410a38:	mov	x2, x1
  410a3c:	ldr	w1, [sp, #88]
  410a40:	mov	w0, w6
  410a44:	bl	40b4f0 <log_internal_realm@plt>
  410a48:	b	410b40 <on_worker+0x42c>
  410a4c:	ldr	w0, [sp, #88]
  410a50:	cmp	w0, #0x0
  410a54:	b	410b40 <on_worker+0x42c>
  410a58:	ldr	x0, [sp, #136]
  410a5c:	ldr	x19, [x0, #8]
  410a60:	ldr	x0, [sp, #128]
  410a64:	ldr	w0, [x0]
  410a68:	bl	40c65c <PID_TO_PTR>
  410a6c:	mov	x1, x0
  410a70:	mov	x0, x19
  410a74:	bl	40c214 <hashmap_get>
  410a78:	str	x0, [sp, #152]
  410a7c:	ldr	x0, [sp, #152]
  410a80:	cmp	x0, #0x0
  410a84:	b.ne	410b10 <on_worker+0x3fc>  // b.any
  410a88:	mov	w0, #0x7                   	// #7
  410a8c:	str	w0, [sp, #72]
  410a90:	str	wzr, [sp, #76]
  410a94:	mov	w0, #0x1                   	// #1
  410a98:	str	w0, [sp, #80]
  410a9c:	ldr	w0, [sp, #80]
  410aa0:	bl	40be30 <log_get_max_level_realm@plt>
  410aa4:	mov	w1, w0
  410aa8:	ldr	w0, [sp, #72]
  410aac:	and	w0, w0, #0x7
  410ab0:	cmp	w1, w0
  410ab4:	b.lt	410b04 <on_worker+0x3f0>  // b.tstop
  410ab8:	ldr	w0, [sp, #80]
  410abc:	lsl	w1, w0, #10
  410ac0:	ldr	w0, [sp, #72]
  410ac4:	orr	w7, w1, w0
  410ac8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410acc:	add	x1, x0, #0x66b
  410ad0:	ldr	x0, [sp, #128]
  410ad4:	ldr	w0, [x0]
  410ad8:	mov	w6, w0
  410adc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410ae0:	add	x5, x0, #0xf98
  410ae4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410ae8:	add	x4, x0, #0x2b8
  410aec:	mov	w3, #0x3ad                 	// #941
  410af0:	mov	x2, x1
  410af4:	ldr	w1, [sp, #76]
  410af8:	mov	w0, w7
  410afc:	bl	40b4f0 <log_internal_realm@plt>
  410b00:	b	410b40 <on_worker+0x42c>
  410b04:	ldr	w0, [sp, #76]
  410b08:	cmp	w0, #0x0
  410b0c:	b	410b40 <on_worker+0x42c>
  410b10:	ldr	x0, [sp, #152]
  410b14:	ldr	w0, [x0, #24]
  410b18:	cmp	w0, #0x3
  410b1c:	b.eq	410b2c <on_worker+0x418>  // b.none
  410b20:	ldr	x0, [sp, #152]
  410b24:	mov	w1, #0x2                   	// #2
  410b28:	str	w1, [x0, #24]
  410b2c:	ldr	x0, [sp, #152]
  410b30:	ldr	x0, [x0, #32]
  410b34:	bl	40c72c <event_free>
  410b38:	b	410790 <on_worker+0x7c>
  410b3c:	nop
  410b40:	b	410790 <on_worker+0x7c>
  410b44:	mov	w1, w0
  410b48:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  410b4c:	add	x0, x0, #0x7a8
  410b50:	ldr	x2, [sp, #264]
  410b54:	ldr	x0, [x0]
  410b58:	eor	x0, x2, x0
  410b5c:	cmp	x0, #0x0
  410b60:	b.eq	410b68 <on_worker+0x454>  // b.none
  410b64:	bl	40b280 <__stack_chk_fail@plt>
  410b68:	mov	w0, w1
  410b6c:	ldr	x19, [sp, #16]
  410b70:	ldp	x29, x30, [sp], #272
  410b74:	ret

0000000000410b78 <on_uevent>:
  410b78:	sub	sp, sp, #0x70
  410b7c:	stp	x29, x30, [sp, #16]
  410b80:	add	x29, sp, #0x10
  410b84:	str	x0, [sp, #56]
  410b88:	str	x1, [sp, #48]
  410b8c:	str	x2, [sp, #40]
  410b90:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  410b94:	add	x0, x0, #0x7a8
  410b98:	ldr	x1, [x0]
  410b9c:	str	x1, [sp, #104]
  410ba0:	mov	x1, #0x0                   	// #0
  410ba4:	ldr	x0, [sp, #40]
  410ba8:	str	x0, [sp, #88]
  410bac:	ldr	x0, [sp, #88]
  410bb0:	cmp	x0, #0x0
  410bb4:	cset	w0, eq  // eq = none
  410bb8:	and	w0, w0, #0xff
  410bbc:	and	x0, x0, #0xff
  410bc0:	cmp	x0, #0x0
  410bc4:	b.eq	410bf0 <on_uevent+0x78>  // b.none
  410bc8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410bcc:	add	x1, x0, #0x66b
  410bd0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410bd4:	add	x4, x0, #0x2c8
  410bd8:	mov	w3, #0x3c2                 	// #962
  410bdc:	mov	x2, x1
  410be0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410be4:	add	x1, x0, #0x6f8
  410be8:	mov	w0, #0x1                   	// #1
  410bec:	bl	40abb0 <log_assert_failed_realm@plt>
  410bf0:	mov	x1, #0x0                   	// #0
  410bf4:	ldr	x0, [sp, #48]
  410bf8:	bl	40b8d0 <device_ensure_usec_initialized@plt>
  410bfc:	ldr	x1, [sp, #48]
  410c00:	ldr	x0, [sp, #88]
  410c04:	bl	40f688 <event_queue_insert>
  410c08:	str	w0, [sp, #68]
  410c0c:	ldr	w0, [sp, #68]
  410c10:	cmp	w0, #0x0
  410c14:	b.ge	410cdc <on_uevent+0x164>  // b.tcont
  410c18:	str	xzr, [sp, #80]
  410c1c:	ldr	x0, [sp, #48]
  410c20:	str	x0, [sp, #96]
  410c24:	mov	w0, #0x3                   	// #3
  410c28:	str	w0, [sp, #72]
  410c2c:	ldr	w0, [sp, #68]
  410c30:	str	w0, [sp, #76]
  410c34:	ldr	x0, [sp, #96]
  410c38:	cmp	x0, #0x0
  410c3c:	b.eq	410c78 <on_uevent+0x100>  // b.none
  410c40:	mov	w0, #0x1                   	// #1
  410c44:	bl	40be30 <log_get_max_level_realm@plt>
  410c48:	mov	w1, w0
  410c4c:	ldr	w0, [sp, #72]
  410c50:	cmp	w0, w1
  410c54:	cset	w0, le
  410c58:	and	w0, w0, #0xff
  410c5c:	and	x0, x0, #0xff
  410c60:	cmp	x0, #0x0
  410c64:	b.eq	410c78 <on_uevent+0x100>  // b.none
  410c68:	add	x0, sp, #0x50
  410c6c:	mov	x1, x0
  410c70:	ldr	x0, [sp, #96]
  410c74:	bl	40aba0 <sd_device_get_sysname@plt>
  410c78:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410c7c:	add	x2, x0, #0x66b
  410c80:	ldr	x0, [sp, #80]
  410c84:	cmp	x0, #0x0
  410c88:	b.eq	410c98 <on_uevent+0x120>  // b.none
  410c8c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410c90:	add	x0, x0, #0x730
  410c94:	b	410c9c <on_uevent+0x124>
  410c98:	mov	x0, #0x0                   	// #0
  410c9c:	ldr	x3, [sp, #80]
  410ca0:	adrp	x1, 450000 <config_parse_hwaddrs+0x54>
  410ca4:	add	x1, x1, #0xfc8
  410ca8:	str	x1, [sp, #8]
  410cac:	str	xzr, [sp]
  410cb0:	mov	x7, #0x0                   	// #0
  410cb4:	mov	x6, x3
  410cb8:	mov	x5, x0
  410cbc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410cc0:	add	x4, x0, #0x2d8
  410cc4:	mov	w3, #0x3c8                 	// #968
  410cc8:	ldr	w1, [sp, #76]
  410ccc:	ldr	w0, [sp, #72]
  410cd0:	bl	40b020 <log_object_internal@plt>
  410cd4:	mov	w0, #0x1                   	// #1
  410cd8:	b	410ce8 <on_uevent+0x170>
  410cdc:	ldr	x0, [sp, #88]
  410ce0:	bl	41033c <event_queue_start>
  410ce4:	mov	w0, #0x1                   	// #1
  410ce8:	mov	w1, w0
  410cec:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  410cf0:	add	x0, x0, #0x7a8
  410cf4:	ldr	x2, [sp, #104]
  410cf8:	ldr	x0, [x0]
  410cfc:	eor	x0, x2, x0
  410d00:	cmp	x0, #0x0
  410d04:	b.eq	410d0c <on_uevent+0x194>  // b.none
  410d08:	bl	40b280 <__stack_chk_fail@plt>
  410d0c:	mov	w0, w1
  410d10:	ldp	x29, x30, [sp, #16]
  410d14:	add	sp, sp, #0x70
  410d18:	ret

0000000000410d1c <on_ctrl_msg>:
  410d1c:	stp	x29, x30, [sp, #-272]!
  410d20:	mov	x29, sp
  410d24:	stp	x19, x20, [sp, #16]
  410d28:	str	x0, [sp, #56]
  410d2c:	str	w1, [sp, #52]
  410d30:	str	x2, [sp, #40]
  410d34:	str	x3, [sp, #32]
  410d38:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  410d3c:	add	x0, x0, #0x7a8
  410d40:	ldr	x1, [x0]
  410d44:	str	x1, [sp, #264]
  410d48:	mov	x1, #0x0                   	// #0
  410d4c:	ldr	x0, [sp, #32]
  410d50:	str	x0, [sp, #248]
  410d54:	ldr	x0, [sp, #40]
  410d58:	cmp	x0, #0x0
  410d5c:	cset	w0, eq  // eq = none
  410d60:	and	w0, w0, #0xff
  410d64:	and	x0, x0, #0xff
  410d68:	cmp	x0, #0x0
  410d6c:	b.eq	410d98 <on_ctrl_msg+0x7c>  // b.none
  410d70:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410d74:	add	x1, x0, #0x66b
  410d78:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410d7c:	add	x4, x0, #0x2e8
  410d80:	mov	w3, #0x3d7                 	// #983
  410d84:	mov	x2, x1
  410d88:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410d8c:	add	x1, x0, #0xff8
  410d90:	mov	w0, #0x1                   	// #1
  410d94:	bl	40abb0 <log_assert_failed_realm@plt>
  410d98:	ldr	x0, [sp, #248]
  410d9c:	cmp	x0, #0x0
  410da0:	cset	w0, eq  // eq = none
  410da4:	and	w0, w0, #0xff
  410da8:	and	x0, x0, #0xff
  410dac:	cmp	x0, #0x0
  410db0:	b.eq	410ddc <on_ctrl_msg+0xc0>  // b.none
  410db4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410db8:	add	x1, x0, #0x66b
  410dbc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410dc0:	add	x4, x0, #0x2e8
  410dc4:	mov	w3, #0x3d8                 	// #984
  410dc8:	mov	x2, x1
  410dcc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410dd0:	add	x1, x0, #0x6f8
  410dd4:	mov	w0, #0x1                   	// #1
  410dd8:	bl	40abb0 <log_assert_failed_realm@plt>
  410ddc:	ldr	w0, [sp, #52]
  410de0:	cmp	w0, #0x8
  410de4:	b.eq	4116b4 <on_ctrl_msg+0x998>  // b.none
  410de8:	ldr	w0, [sp, #52]
  410dec:	cmp	w0, #0x8
  410df0:	b.hi	411738 <on_ctrl_msg+0xa1c>  // b.pmore
  410df4:	ldr	w0, [sp, #52]
  410df8:	cmp	w0, #0x7
  410dfc:	b.eq	411638 <on_ctrl_msg+0x91c>  // b.none
  410e00:	ldr	w0, [sp, #52]
  410e04:	cmp	w0, #0x7
  410e08:	b.hi	411738 <on_ctrl_msg+0xa1c>  // b.pmore
  410e0c:	ldr	w0, [sp, #52]
  410e10:	cmp	w0, #0x6
  410e14:	b.eq	4114dc <on_ctrl_msg+0x7c0>  // b.none
  410e18:	ldr	w0, [sp, #52]
  410e1c:	cmp	w0, #0x6
  410e20:	b.hi	411738 <on_ctrl_msg+0xa1c>  // b.pmore
  410e24:	ldr	w0, [sp, #52]
  410e28:	cmp	w0, #0x5
  410e2c:	b.eq	4110e4 <on_ctrl_msg+0x3c8>  // b.none
  410e30:	ldr	w0, [sp, #52]
  410e34:	cmp	w0, #0x5
  410e38:	b.hi	411738 <on_ctrl_msg+0xa1c>  // b.pmore
  410e3c:	ldr	w0, [sp, #52]
  410e40:	cmp	w0, #0x4
  410e44:	b.eq	411060 <on_ctrl_msg+0x344>  // b.none
  410e48:	ldr	w0, [sp, #52]
  410e4c:	cmp	w0, #0x4
  410e50:	b.hi	411738 <on_ctrl_msg+0xa1c>  // b.pmore
  410e54:	ldr	w0, [sp, #52]
  410e58:	cmp	w0, #0x3
  410e5c:	b.eq	410fcc <on_ctrl_msg+0x2b0>  // b.none
  410e60:	ldr	w0, [sp, #52]
  410e64:	cmp	w0, #0x3
  410e68:	b.hi	411738 <on_ctrl_msg+0xa1c>  // b.pmore
  410e6c:	ldr	w0, [sp, #52]
  410e70:	cmp	w0, #0x1
  410e74:	b.eq	410e88 <on_ctrl_msg+0x16c>  // b.none
  410e78:	ldr	w0, [sp, #52]
  410e7c:	cmp	w0, #0x2
  410e80:	b.eq	410f40 <on_ctrl_msg+0x224>  // b.none
  410e84:	b	411738 <on_ctrl_msg+0xa1c>
  410e88:	mov	w0, #0x7                   	// #7
  410e8c:	str	w0, [sp, #192]
  410e90:	str	wzr, [sp, #196]
  410e94:	mov	w0, #0x1                   	// #1
  410e98:	str	w0, [sp, #200]
  410e9c:	ldr	w0, [sp, #200]
  410ea0:	bl	40be30 <log_get_max_level_realm@plt>
  410ea4:	mov	w1, w0
  410ea8:	ldr	w0, [sp, #192]
  410eac:	and	w0, w0, #0x7
  410eb0:	cmp	w1, w0
  410eb4:	b.lt	410f04 <on_ctrl_msg+0x1e8>  // b.tstop
  410eb8:	ldr	w0, [sp, #200]
  410ebc:	lsl	w1, w0, #10
  410ec0:	ldr	w0, [sp, #192]
  410ec4:	orr	w7, w1, w0
  410ec8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410ecc:	add	x1, x0, #0x66b
  410ed0:	ldr	x0, [sp, #40]
  410ed4:	ldr	w0, [x0]
  410ed8:	mov	w6, w0
  410edc:	adrp	x0, 451000 <_fini+0xa30>
  410ee0:	add	x5, x0, #0x0
  410ee4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410ee8:	add	x4, x0, #0x2f8
  410eec:	mov	w3, #0x3dc                 	// #988
  410ef0:	mov	x2, x1
  410ef4:	ldr	w1, [sp, #196]
  410ef8:	mov	w0, w7
  410efc:	bl	40b4f0 <log_internal_realm@plt>
  410f00:	b	410f0c <on_ctrl_msg+0x1f0>
  410f04:	ldr	w0, [sp, #196]
  410f08:	cmp	w0, #0x0
  410f0c:	ldr	x0, [sp, #40]
  410f10:	ldr	w0, [x0]
  410f14:	mov	w1, w0
  410f18:	mov	w0, #0x1                   	// #1
  410f1c:	bl	40b860 <log_set_max_level_realm@plt>
  410f20:	ldr	x0, [sp, #40]
  410f24:	ldr	w0, [x0]
  410f28:	mov	w1, w0
  410f2c:	mov	w0, #0x0                   	// #0
  410f30:	bl	40b860 <log_set_max_level_realm@plt>
  410f34:	ldr	x0, [sp, #248]
  410f38:	bl	40fbc4 <manager_kill_workers>
  410f3c:	b	4117b0 <on_ctrl_msg+0xa94>
  410f40:	mov	w0, #0x7                   	// #7
  410f44:	str	w0, [sp, #180]
  410f48:	str	wzr, [sp, #184]
  410f4c:	mov	w0, #0x1                   	// #1
  410f50:	str	w0, [sp, #188]
  410f54:	ldr	w0, [sp, #188]
  410f58:	bl	40be30 <log_get_max_level_realm@plt>
  410f5c:	mov	w1, w0
  410f60:	ldr	w0, [sp, #180]
  410f64:	and	w0, w0, #0x7
  410f68:	cmp	w1, w0
  410f6c:	b.lt	410fb0 <on_ctrl_msg+0x294>  // b.tstop
  410f70:	ldr	w0, [sp, #188]
  410f74:	lsl	w1, w0, #10
  410f78:	ldr	w0, [sp, #180]
  410f7c:	orr	w6, w1, w0
  410f80:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  410f84:	add	x1, x0, #0x66b
  410f88:	adrp	x0, 451000 <_fini+0xa30>
  410f8c:	add	x5, x0, #0x48
  410f90:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  410f94:	add	x4, x0, #0x2f8
  410f98:	mov	w3, #0x3e2                 	// #994
  410f9c:	mov	x2, x1
  410fa0:	ldr	w1, [sp, #184]
  410fa4:	mov	w0, w6
  410fa8:	bl	40b4f0 <log_internal_realm@plt>
  410fac:	b	410fb8 <on_ctrl_msg+0x29c>
  410fb0:	ldr	w0, [sp, #184]
  410fb4:	cmp	w0, #0x0
  410fb8:	ldr	x0, [sp, #248]
  410fbc:	ldrb	w1, [x0, #120]
  410fc0:	orr	w1, w1, #0x1
  410fc4:	strb	w1, [x0, #120]
  410fc8:	b	4117b0 <on_ctrl_msg+0xa94>
  410fcc:	mov	w0, #0x7                   	// #7
  410fd0:	str	w0, [sp, #168]
  410fd4:	str	wzr, [sp, #172]
  410fd8:	mov	w0, #0x1                   	// #1
  410fdc:	str	w0, [sp, #176]
  410fe0:	ldr	w0, [sp, #176]
  410fe4:	bl	40be30 <log_get_max_level_realm@plt>
  410fe8:	mov	w1, w0
  410fec:	ldr	w0, [sp, #168]
  410ff0:	and	w0, w0, #0x7
  410ff4:	cmp	w1, w0
  410ff8:	b.lt	41103c <on_ctrl_msg+0x320>  // b.tstop
  410ffc:	ldr	w0, [sp, #176]
  411000:	lsl	w1, w0, #10
  411004:	ldr	w0, [sp, #168]
  411008:	orr	w6, w1, w0
  41100c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411010:	add	x1, x0, #0x66b
  411014:	adrp	x0, 451000 <_fini+0xa30>
  411018:	add	x5, x0, #0x78
  41101c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  411020:	add	x4, x0, #0x2f8
  411024:	mov	w3, #0x3e6                 	// #998
  411028:	mov	x2, x1
  41102c:	ldr	w1, [sp, #172]
  411030:	mov	w0, w6
  411034:	bl	40b4f0 <log_internal_realm@plt>
  411038:	b	411044 <on_ctrl_msg+0x328>
  41103c:	ldr	w0, [sp, #172]
  411040:	cmp	w0, #0x0
  411044:	ldr	x0, [sp, #248]
  411048:	ldrb	w1, [x0, #120]
  41104c:	and	w1, w1, #0xfffffffe
  411050:	strb	w1, [x0, #120]
  411054:	ldr	x0, [sp, #248]
  411058:	bl	41033c <event_queue_start>
  41105c:	b	4117b0 <on_ctrl_msg+0xa94>
  411060:	mov	w0, #0x7                   	// #7
  411064:	str	w0, [sp, #156]
  411068:	str	wzr, [sp, #160]
  41106c:	mov	w0, #0x1                   	// #1
  411070:	str	w0, [sp, #164]
  411074:	ldr	w0, [sp, #164]
  411078:	bl	40be30 <log_get_max_level_realm@plt>
  41107c:	mov	w1, w0
  411080:	ldr	w0, [sp, #156]
  411084:	and	w0, w0, #0x7
  411088:	cmp	w1, w0
  41108c:	b.lt	4110d0 <on_ctrl_msg+0x3b4>  // b.tstop
  411090:	ldr	w0, [sp, #164]
  411094:	lsl	w1, w0, #10
  411098:	ldr	w0, [sp, #156]
  41109c:	orr	w6, w1, w0
  4110a0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4110a4:	add	x1, x0, #0x66b
  4110a8:	adrp	x0, 451000 <_fini+0xa30>
  4110ac:	add	x5, x0, #0xb0
  4110b0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4110b4:	add	x4, x0, #0x2f8
  4110b8:	mov	w3, #0x3eb                 	// #1003
  4110bc:	mov	x2, x1
  4110c0:	ldr	w1, [sp, #160]
  4110c4:	mov	w0, w6
  4110c8:	bl	40b4f0 <log_internal_realm@plt>
  4110cc:	b	4110d8 <on_ctrl_msg+0x3bc>
  4110d0:	ldr	w0, [sp, #160]
  4110d4:	cmp	w0, #0x0
  4110d8:	ldr	x0, [sp, #248]
  4110dc:	bl	4101a0 <manager_reload>
  4110e0:	b	4117b0 <on_ctrl_msg+0xa94>
  4110e4:	str	xzr, [sp, #216]
  4110e8:	str	xzr, [sp, #224]
  4110ec:	str	xzr, [sp, #232]
  4110f0:	str	xzr, [sp, #240]
  4110f4:	ldr	x0, [sp, #40]
  4110f8:	mov	w1, #0x3d                  	// #61
  4110fc:	bl	40b850 <strchr@plt>
  411100:	str	x0, [sp, #256]
  411104:	ldr	x0, [sp, #256]
  411108:	cmp	x0, #0x0
  41110c:	b.ne	41119c <on_ctrl_msg+0x480>  // b.any
  411110:	mov	w0, #0x3                   	// #3
  411114:	str	w0, [sp, #144]
  411118:	str	wzr, [sp, #148]
  41111c:	mov	w0, #0x1                   	// #1
  411120:	str	w0, [sp, #152]
  411124:	ldr	w0, [sp, #152]
  411128:	bl	40be30 <log_get_max_level_realm@plt>
  41112c:	mov	w1, w0
  411130:	ldr	w0, [sp, #144]
  411134:	and	w0, w0, #0x7
  411138:	cmp	w1, w0
  41113c:	b.lt	411188 <on_ctrl_msg+0x46c>  // b.tstop
  411140:	ldr	w0, [sp, #152]
  411144:	lsl	w1, w0, #10
  411148:	ldr	w0, [sp, #144]
  41114c:	orr	w7, w1, w0
  411150:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411154:	add	x1, x0, #0x66b
  411158:	ldr	x0, [sp, #40]
  41115c:	mov	x6, x0
  411160:	adrp	x0, 451000 <_fini+0xa30>
  411164:	add	x5, x0, #0xd8
  411168:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41116c:	add	x4, x0, #0x2f8
  411170:	mov	w3, #0x3f4                 	// #1012
  411174:	mov	x2, x1
  411178:	ldr	w1, [sp, #148]
  41117c:	mov	w0, w7
  411180:	bl	40b4f0 <log_internal_realm@plt>
  411184:	b	411190 <on_ctrl_msg+0x474>
  411188:	ldr	w0, [sp, #148]
  41118c:	cmp	w0, #0x0
  411190:	mov	w19, #0x1                   	// #1
  411194:	mov	w20, #0x0                   	// #0
  411198:	b	411474 <on_ctrl_msg+0x758>
  41119c:	ldr	x2, [sp, #40]
  4111a0:	ldr	x0, [sp, #40]
  4111a4:	ldr	x1, [sp, #256]
  4111a8:	sub	x0, x1, x0
  4111ac:	mov	x1, x0
  4111b0:	mov	x0, x2
  4111b4:	bl	40b1e0 <strndup@plt>
  4111b8:	str	x0, [sp, #216]
  4111bc:	ldr	x0, [sp, #216]
  4111c0:	cmp	x0, #0x0
  4111c4:	b.ne	4111f0 <on_ctrl_msg+0x4d4>  // b.any
  4111c8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4111cc:	add	x1, x0, #0x66b
  4111d0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4111d4:	add	x3, x0, #0x2f8
  4111d8:	mov	w2, #0x3fa                 	// #1018
  4111dc:	mov	w0, #0x1                   	// #1
  4111e0:	bl	40bda0 <log_oom_internal@plt>
  4111e4:	mov	w19, #0x1                   	// #1
  4111e8:	mov	w20, #0x0                   	// #0
  4111ec:	b	411474 <on_ctrl_msg+0x758>
  4111f0:	ldr	x0, [sp, #248]
  4111f4:	ldr	x0, [x0, #48]
  4111f8:	ldr	x1, [sp, #216]
  4111fc:	add	x2, sp, #0xe8
  411200:	bl	40bb50 <hashmap_remove2@plt>
  411204:	str	x0, [sp, #240]
  411208:	ldr	x0, [sp, #248]
  41120c:	add	x2, x0, #0x30
  411210:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  411214:	add	x1, x0, #0x7b0
  411218:	mov	x0, x2
  41121c:	bl	40bb10 <internal_hashmap_ensure_allocated@plt>
  411220:	str	w0, [sp, #116]
  411224:	ldr	w0, [sp, #116]
  411228:	cmp	w0, #0x0
  41122c:	b.ge	411258 <on_ctrl_msg+0x53c>  // b.tcont
  411230:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411234:	add	x1, x0, #0x66b
  411238:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41123c:	add	x3, x0, #0x2f8
  411240:	mov	w2, #0x402                 	// #1026
  411244:	mov	w0, #0x1                   	// #1
  411248:	bl	40bda0 <log_oom_internal@plt>
  41124c:	mov	w19, #0x1                   	// #1
  411250:	mov	w20, #0x0                   	// #0
  411254:	b	411474 <on_ctrl_msg+0x758>
  411258:	ldr	x0, [sp, #256]
  41125c:	add	x0, x0, #0x1
  411260:	str	x0, [sp, #256]
  411264:	ldr	x0, [sp, #256]
  411268:	bl	40c418 <isempty>
  41126c:	and	w0, w0, #0xff
  411270:	cmp	w0, #0x0
  411274:	b.eq	411344 <on_ctrl_msg+0x628>  // b.none
  411278:	mov	w0, #0x7                   	// #7
  41127c:	str	w0, [sp, #132]
  411280:	str	wzr, [sp, #136]
  411284:	mov	w0, #0x1                   	// #1
  411288:	str	w0, [sp, #140]
  41128c:	ldr	w0, [sp, #140]
  411290:	bl	40be30 <log_get_max_level_realm@plt>
  411294:	mov	w1, w0
  411298:	ldr	w0, [sp, #132]
  41129c:	and	w0, w0, #0x7
  4112a0:	cmp	w1, w0
  4112a4:	b.lt	4112f0 <on_ctrl_msg+0x5d4>  // b.tstop
  4112a8:	ldr	w0, [sp, #140]
  4112ac:	lsl	w1, w0, #10
  4112b0:	ldr	w0, [sp, #132]
  4112b4:	orr	w7, w1, w0
  4112b8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4112bc:	add	x1, x0, #0x66b
  4112c0:	ldr	x0, [sp, #216]
  4112c4:	mov	x6, x0
  4112c8:	adrp	x0, 451000 <_fini+0xa30>
  4112cc:	add	x5, x0, #0xf0
  4112d0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4112d4:	add	x4, x0, #0x2f8
  4112d8:	mov	w3, #0x408                 	// #1032
  4112dc:	mov	x2, x1
  4112e0:	ldr	w1, [sp, #136]
  4112e4:	mov	w0, w7
  4112e8:	bl	40b4f0 <log_internal_realm@plt>
  4112ec:	b	4112f8 <on_ctrl_msg+0x5dc>
  4112f0:	ldr	w0, [sp, #136]
  4112f4:	cmp	w0, #0x0
  4112f8:	ldr	x0, [sp, #248]
  4112fc:	ldr	x0, [x0, #48]
  411300:	ldr	x1, [sp, #216]
  411304:	mov	x2, #0x0                   	// #0
  411308:	bl	40b570 <hashmap_put@plt>
  41130c:	str	w0, [sp, #116]
  411310:	ldr	w0, [sp, #116]
  411314:	cmp	w0, #0x0
  411318:	b.ge	411458 <on_ctrl_msg+0x73c>  // b.tcont
  41131c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411320:	add	x1, x0, #0x66b
  411324:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  411328:	add	x3, x0, #0x2f8
  41132c:	mov	w2, #0x40c                 	// #1036
  411330:	mov	w0, #0x1                   	// #1
  411334:	bl	40bda0 <log_oom_internal@plt>
  411338:	mov	w19, #0x1                   	// #1
  41133c:	mov	w20, #0x0                   	// #0
  411340:	b	411474 <on_ctrl_msg+0x758>
  411344:	ldr	x0, [sp, #256]
  411348:	bl	40b7c0 <strdup@plt>
  41134c:	str	x0, [sp, #224]
  411350:	ldr	x0, [sp, #224]
  411354:	cmp	x0, #0x0
  411358:	b.ne	411384 <on_ctrl_msg+0x668>  // b.any
  41135c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411360:	add	x1, x0, #0x66b
  411364:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  411368:	add	x3, x0, #0x2f8
  41136c:	mov	w2, #0x412                 	// #1042
  411370:	mov	w0, #0x1                   	// #1
  411374:	bl	40bda0 <log_oom_internal@plt>
  411378:	mov	w19, #0x1                   	// #1
  41137c:	mov	w20, #0x0                   	// #0
  411380:	b	411474 <on_ctrl_msg+0x758>
  411384:	mov	w0, #0x7                   	// #7
  411388:	str	w0, [sp, #120]
  41138c:	str	wzr, [sp, #124]
  411390:	mov	w0, #0x1                   	// #1
  411394:	str	w0, [sp, #128]
  411398:	ldr	w0, [sp, #128]
  41139c:	bl	40be30 <log_get_max_level_realm@plt>
  4113a0:	mov	w1, w0
  4113a4:	ldr	w0, [sp, #120]
  4113a8:	and	w0, w0, #0x7
  4113ac:	cmp	w1, w0
  4113b0:	b.lt	411404 <on_ctrl_msg+0x6e8>  // b.tstop
  4113b4:	ldr	w0, [sp, #128]
  4113b8:	lsl	w1, w0, #10
  4113bc:	ldr	w0, [sp, #120]
  4113c0:	orr	w8, w1, w0
  4113c4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4113c8:	add	x1, x0, #0x66b
  4113cc:	ldr	x0, [sp, #216]
  4113d0:	ldr	x2, [sp, #224]
  4113d4:	mov	x7, x2
  4113d8:	mov	x6, x0
  4113dc:	adrp	x0, 451000 <_fini+0xa30>
  4113e0:	add	x5, x0, #0x128
  4113e4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4113e8:	add	x4, x0, #0x2f8
  4113ec:	mov	w3, #0x416                 	// #1046
  4113f0:	mov	x2, x1
  4113f4:	ldr	w1, [sp, #124]
  4113f8:	mov	w0, w8
  4113fc:	bl	40b4f0 <log_internal_realm@plt>
  411400:	b	41140c <on_ctrl_msg+0x6f0>
  411404:	ldr	w0, [sp, #124]
  411408:	cmp	w0, #0x0
  41140c:	ldr	x0, [sp, #248]
  411410:	ldr	x0, [x0, #48]
  411414:	ldr	x1, [sp, #216]
  411418:	ldr	x2, [sp, #224]
  41141c:	bl	40b570 <hashmap_put@plt>
  411420:	str	w0, [sp, #116]
  411424:	ldr	w0, [sp, #116]
  411428:	cmp	w0, #0x0
  41142c:	b.ge	411458 <on_ctrl_msg+0x73c>  // b.tcont
  411430:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411434:	add	x1, x0, #0x66b
  411438:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41143c:	add	x3, x0, #0x2f8
  411440:	mov	w2, #0x41a                 	// #1050
  411444:	mov	w0, #0x1                   	// #1
  411448:	bl	40bda0 <log_oom_internal@plt>
  41144c:	mov	w19, #0x1                   	// #1
  411450:	mov	w20, #0x0                   	// #0
  411454:	b	411474 <on_ctrl_msg+0x758>
  411458:	str	xzr, [sp, #224]
  41145c:	ldr	x0, [sp, #224]
  411460:	str	x0, [sp, #216]
  411464:	ldr	x0, [sp, #248]
  411468:	bl	40fbc4 <manager_kill_workers>
  41146c:	mov	w20, #0x1                   	// #1
  411470:	nop
  411474:	add	x0, sp, #0xf0
  411478:	bl	40c098 <freep>
  41147c:	cmp	w20, #0x0
  411480:	b.ne	41148c <on_ctrl_msg+0x770>  // b.any
  411484:	mov	w20, #0x0                   	// #0
  411488:	b	411490 <on_ctrl_msg+0x774>
  41148c:	mov	w20, #0x1                   	// #1
  411490:	add	x0, sp, #0xe8
  411494:	bl	40c098 <freep>
  411498:	cmp	w20, #0x0
  41149c:	b.ne	4114a8 <on_ctrl_msg+0x78c>  // b.any
  4114a0:	mov	w20, #0x0                   	// #0
  4114a4:	b	4114ac <on_ctrl_msg+0x790>
  4114a8:	mov	w20, #0x1                   	// #1
  4114ac:	add	x0, sp, #0xe0
  4114b0:	bl	40c098 <freep>
  4114b4:	cmp	w20, #0x0
  4114b8:	b.ne	4114c4 <on_ctrl_msg+0x7a8>  // b.any
  4114bc:	mov	w20, #0x0                   	// #0
  4114c0:	b	4114c8 <on_ctrl_msg+0x7ac>
  4114c4:	mov	w20, #0x1                   	// #1
  4114c8:	add	x0, sp, #0xd8
  4114cc:	bl	40c098 <freep>
  4114d0:	cmp	w20, #0x0
  4114d4:	b.ne	4117b0 <on_ctrl_msg+0xa94>  // b.any
  4114d8:	b	4117b4 <on_ctrl_msg+0xa98>
  4114dc:	ldr	x0, [sp, #40]
  4114e0:	ldr	w0, [x0]
  4114e4:	cmp	w0, #0x0
  4114e8:	b.gt	411578 <on_ctrl_msg+0x85c>
  4114ec:	mov	w0, #0x7                   	// #7
  4114f0:	str	w0, [sp, #104]
  4114f4:	str	wzr, [sp, #108]
  4114f8:	mov	w0, #0x1                   	// #1
  4114fc:	str	w0, [sp, #112]
  411500:	ldr	w0, [sp, #112]
  411504:	bl	40be30 <log_get_max_level_realm@plt>
  411508:	mov	w1, w0
  41150c:	ldr	w0, [sp, #104]
  411510:	and	w0, w0, #0x7
  411514:	cmp	w1, w0
  411518:	b.lt	411568 <on_ctrl_msg+0x84c>  // b.tstop
  41151c:	ldr	w0, [sp, #112]
  411520:	lsl	w1, w0, #10
  411524:	ldr	w0, [sp, #104]
  411528:	orr	w7, w1, w0
  41152c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411530:	add	x1, x0, #0x66b
  411534:	ldr	x0, [sp, #40]
  411538:	ldr	w0, [x0]
  41153c:	mov	w6, w0
  411540:	adrp	x0, 451000 <_fini+0xa30>
  411544:	add	x5, x0, #0x160
  411548:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41154c:	add	x4, x0, #0x2f8
  411550:	mov	w3, #0x425                 	// #1061
  411554:	mov	x2, x1
  411558:	ldr	w1, [sp, #108]
  41155c:	mov	w0, w7
  411560:	bl	40b4f0 <log_internal_realm@plt>
  411564:	b	411570 <on_ctrl_msg+0x854>
  411568:	ldr	w0, [sp, #108]
  41156c:	cmp	w0, #0x0
  411570:	mov	w19, #0x0                   	// #0
  411574:	b	4117b4 <on_ctrl_msg+0xa98>
  411578:	mov	w0, #0x7                   	// #7
  41157c:	str	w0, [sp, #92]
  411580:	str	wzr, [sp, #96]
  411584:	mov	w0, #0x1                   	// #1
  411588:	str	w0, [sp, #100]
  41158c:	ldr	w0, [sp, #100]
  411590:	bl	40be30 <log_get_max_level_realm@plt>
  411594:	mov	w1, w0
  411598:	ldr	w0, [sp, #92]
  41159c:	and	w0, w0, #0x7
  4115a0:	cmp	w1, w0
  4115a4:	b.lt	4115f4 <on_ctrl_msg+0x8d8>  // b.tstop
  4115a8:	ldr	w0, [sp, #100]
  4115ac:	lsl	w1, w0, #10
  4115b0:	ldr	w0, [sp, #92]
  4115b4:	orr	w7, w1, w0
  4115b8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4115bc:	add	x1, x0, #0x66b
  4115c0:	ldr	x0, [sp, #40]
  4115c4:	ldr	w0, [x0]
  4115c8:	mov	w6, w0
  4115cc:	adrp	x0, 451000 <_fini+0xa30>
  4115d0:	add	x5, x0, #0x1a8
  4115d4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4115d8:	add	x4, x0, #0x2f8
  4115dc:	mov	w3, #0x429                 	// #1065
  4115e0:	mov	x2, x1
  4115e4:	ldr	w1, [sp, #96]
  4115e8:	mov	w0, w7
  4115ec:	bl	40b4f0 <log_internal_realm@plt>
  4115f0:	b	4115fc <on_ctrl_msg+0x8e0>
  4115f4:	ldr	w0, [sp, #96]
  4115f8:	cmp	w0, #0x0
  4115fc:	ldr	x0, [sp, #40]
  411600:	ldr	w0, [x0]
  411604:	mov	w1, w0
  411608:	adrp	x0, 48d000 <arg_resolve_name_timing>
  41160c:	add	x0, x0, #0x190
  411610:	str	w1, [x0]
  411614:	adrp	x0, 48d000 <arg_resolve_name_timing>
  411618:	add	x0, x0, #0x190
  41161c:	ldr	w0, [x0]
  411620:	mov	w2, w0
  411624:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411628:	add	x1, x0, #0xe10
  41162c:	mov	w0, #0x0                   	// #0
  411630:	bl	40b070 <sd_notifyf@plt>
  411634:	b	4117b0 <on_ctrl_msg+0xa94>
  411638:	mov	w0, #0x7                   	// #7
  41163c:	str	w0, [sp, #80]
  411640:	str	wzr, [sp, #84]
  411644:	mov	w0, #0x1                   	// #1
  411648:	str	w0, [sp, #88]
  41164c:	ldr	w0, [sp, #88]
  411650:	bl	40be30 <log_get_max_level_realm@plt>
  411654:	mov	w1, w0
  411658:	ldr	w0, [sp, #80]
  41165c:	and	w0, w0, #0x7
  411660:	cmp	w1, w0
  411664:	b.lt	4116a8 <on_ctrl_msg+0x98c>  // b.tstop
  411668:	ldr	w0, [sp, #88]
  41166c:	lsl	w1, w0, #10
  411670:	ldr	w0, [sp, #80]
  411674:	orr	w6, w1, w0
  411678:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41167c:	add	x1, x0, #0x66b
  411680:	adrp	x0, 451000 <_fini+0xa30>
  411684:	add	x5, x0, #0x1f8
  411688:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41168c:	add	x4, x0, #0x2f8
  411690:	mov	w3, #0x431                 	// #1073
  411694:	mov	x2, x1
  411698:	ldr	w1, [sp, #84]
  41169c:	mov	w0, w6
  4116a0:	bl	40b4f0 <log_internal_realm@plt>
  4116a4:	b	4117b0 <on_ctrl_msg+0xa94>
  4116a8:	ldr	w0, [sp, #84]
  4116ac:	cmp	w0, #0x0
  4116b0:	b	4117b0 <on_ctrl_msg+0xa94>
  4116b4:	mov	w0, #0x7                   	// #7
  4116b8:	str	w0, [sp, #68]
  4116bc:	str	wzr, [sp, #72]
  4116c0:	mov	w0, #0x1                   	// #1
  4116c4:	str	w0, [sp, #76]
  4116c8:	ldr	w0, [sp, #76]
  4116cc:	bl	40be30 <log_get_max_level_realm@plt>
  4116d0:	mov	w1, w0
  4116d4:	ldr	w0, [sp, #68]
  4116d8:	and	w0, w0, #0x7
  4116dc:	cmp	w1, w0
  4116e0:	b.lt	411724 <on_ctrl_msg+0xa08>  // b.tstop
  4116e4:	ldr	w0, [sp, #76]
  4116e8:	lsl	w1, w0, #10
  4116ec:	ldr	w0, [sp, #68]
  4116f0:	orr	w6, w1, w0
  4116f4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4116f8:	add	x1, x0, #0x66b
  4116fc:	adrp	x0, 451000 <_fini+0xa30>
  411700:	add	x5, x0, #0x220
  411704:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  411708:	add	x4, x0, #0x2f8
  41170c:	mov	w3, #0x434                 	// #1076
  411710:	mov	x2, x1
  411714:	ldr	w1, [sp, #72]
  411718:	mov	w0, w6
  41171c:	bl	40b4f0 <log_internal_realm@plt>
  411720:	b	41172c <on_ctrl_msg+0xa10>
  411724:	ldr	w0, [sp, #72]
  411728:	cmp	w0, #0x0
  41172c:	ldr	x0, [sp, #248]
  411730:	bl	4100b0 <manager_exit>
  411734:	b	4117b0 <on_ctrl_msg+0xa94>
  411738:	mov	w0, #0x7                   	// #7
  41173c:	str	w0, [sp, #204]
  411740:	str	wzr, [sp, #208]
  411744:	mov	w0, #0x1                   	// #1
  411748:	str	w0, [sp, #212]
  41174c:	ldr	w0, [sp, #212]
  411750:	bl	40be30 <log_get_max_level_realm@plt>
  411754:	mov	w1, w0
  411758:	ldr	w0, [sp, #204]
  41175c:	and	w0, w0, #0x7
  411760:	cmp	w1, w0
  411764:	b.lt	4117a8 <on_ctrl_msg+0xa8c>  // b.tstop
  411768:	ldr	w0, [sp, #212]
  41176c:	lsl	w1, w0, #10
  411770:	ldr	w0, [sp, #204]
  411774:	orr	w6, w1, w0
  411778:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41177c:	add	x1, x0, #0x66b
  411780:	adrp	x0, 451000 <_fini+0xa30>
  411784:	add	x5, x0, #0x248
  411788:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41178c:	add	x4, x0, #0x2f8
  411790:	mov	w3, #0x438                 	// #1080
  411794:	mov	x2, x1
  411798:	ldr	w1, [sp, #208]
  41179c:	mov	w0, w6
  4117a0:	bl	40b4f0 <log_internal_realm@plt>
  4117a4:	b	4117b0 <on_ctrl_msg+0xa94>
  4117a8:	ldr	w0, [sp, #208]
  4117ac:	cmp	w0, #0x0
  4117b0:	mov	w19, #0x1                   	// #1
  4117b4:	mov	w1, w19
  4117b8:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  4117bc:	add	x0, x0, #0x7a8
  4117c0:	ldr	x2, [sp, #264]
  4117c4:	ldr	x0, [x0]
  4117c8:	eor	x0, x2, x0
  4117cc:	cmp	x0, #0x0
  4117d0:	b.eq	4117d8 <on_ctrl_msg+0xabc>  // b.none
  4117d4:	bl	40b280 <__stack_chk_fail@plt>
  4117d8:	mov	w0, w1
  4117dc:	ldp	x19, x20, [sp, #16]
  4117e0:	ldp	x29, x30, [sp], #272
  4117e4:	ret

00000000004117e8 <synthesize_change_one>:
  4117e8:	stp	x29, x30, [sp, #-160]!
  4117ec:	mov	x29, sp
  4117f0:	sub	sp, sp, #0x20
  4117f4:	str	x0, [x29, #24]
  4117f8:	str	x1, [x29, #16]
  4117fc:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  411800:	add	x0, x0, #0x7a8
  411804:	ldr	x1, [x0]
  411808:	str	x1, [x29, #152]
  41180c:	mov	x1, #0x0                   	// #0
  411810:	ldr	x0, [x29, #16]
  411814:	str	x0, [x29, #136]
  411818:	adrp	x0, 451000 <_fini+0xa30>
  41181c:	add	x0, x0, #0x278
  411820:	str	x0, [x29, #144]
  411824:	str	xzr, [x29, #80]
  411828:	str	xzr, [x29, #88]
  41182c:	b	411860 <synthesize_change_one+0x78>
  411830:	ldr	x0, [x29, #88]
  411834:	lsl	x0, x0, #3
  411838:	add	x1, x29, #0x88
  41183c:	ldr	x0, [x1, x0]
  411840:	bl	40bd10 <strlen@plt>
  411844:	mov	x1, x0
  411848:	ldr	x0, [x29, #80]
  41184c:	add	x0, x0, x1
  411850:	str	x0, [x29, #80]
  411854:	ldr	x0, [x29, #88]
  411858:	add	x0, x0, #0x1
  41185c:	str	x0, [x29, #88]
  411860:	ldr	x0, [x29, #88]
  411864:	cmp	x0, #0x1
  411868:	b.hi	411884 <synthesize_change_one+0x9c>  // b.pmore
  41186c:	ldr	x0, [x29, #88]
  411870:	lsl	x0, x0, #3
  411874:	add	x1, x29, #0x88
  411878:	ldr	x0, [x1, x0]
  41187c:	cmp	x0, #0x0
  411880:	b.ne	411830 <synthesize_change_one+0x48>  // b.any
  411884:	ldr	x0, [x29, #80]
  411888:	add	x0, x0, #0x1
  41188c:	str	x0, [x29, #96]
  411890:	ldr	x1, [x29, #96]
  411894:	mov	x0, #0x1                   	// #1
  411898:	bl	40c0bc <size_multiply_overflow>
  41189c:	and	w0, w0, #0xff
  4118a0:	and	x0, x0, #0xff
  4118a4:	cmp	x0, #0x0
  4118a8:	b.eq	4118d4 <synthesize_change_one+0xec>  // b.none
  4118ac:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4118b0:	add	x1, x0, #0x66b
  4118b4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4118b8:	add	x4, x0, #0x308
  4118bc:	mov	w3, #0x442                 	// #1090
  4118c0:	mov	x2, x1
  4118c4:	adrp	x0, 451000 <_fini+0xa30>
  4118c8:	add	x1, x0, #0x280
  4118cc:	mov	w0, #0x1                   	// #1
  4118d0:	bl	40abb0 <log_assert_failed_realm@plt>
  4118d4:	ldr	x0, [x29, #96]
  4118d8:	cmp	x0, #0x400, lsl #12
  4118dc:	cset	w0, hi  // hi = pmore
  4118e0:	and	w0, w0, #0xff
  4118e4:	and	x0, x0, #0xff
  4118e8:	cmp	x0, #0x0
  4118ec:	b.eq	411918 <synthesize_change_one+0x130>  // b.none
  4118f0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4118f4:	add	x1, x0, #0x66b
  4118f8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4118fc:	add	x4, x0, #0x308
  411900:	mov	w3, #0x442                 	// #1090
  411904:	mov	x2, x1
  411908:	adrp	x0, 451000 <_fini+0xa30>
  41190c:	add	x1, x0, #0x2b0
  411910:	mov	w0, #0x1                   	// #1
  411914:	bl	40abb0 <log_assert_failed_realm@plt>
  411918:	ldr	x0, [x29, #96]
  41191c:	add	x0, x0, #0xf
  411920:	lsr	x0, x0, #4
  411924:	lsl	x0, x0, #4
  411928:	sub	sp, sp, x0
  41192c:	add	x0, sp, #0x20
  411930:	add	x0, x0, #0xf
  411934:	lsr	x0, x0, #4
  411938:	lsl	x0, x0, #4
  41193c:	str	x0, [x29, #104]
  411940:	ldr	x0, [x29, #104]
  411944:	str	x0, [x29, #72]
  411948:	str	xzr, [x29, #88]
  41194c:	b	41197c <synthesize_change_one+0x194>
  411950:	ldr	x0, [x29, #88]
  411954:	lsl	x0, x0, #3
  411958:	add	x1, x29, #0x88
  41195c:	ldr	x0, [x1, x0]
  411960:	mov	x1, x0
  411964:	ldr	x0, [x29, #72]
  411968:	bl	40a510 <stpcpy@plt>
  41196c:	str	x0, [x29, #72]
  411970:	ldr	x0, [x29, #88]
  411974:	add	x0, x0, #0x1
  411978:	str	x0, [x29, #88]
  41197c:	ldr	x0, [x29, #88]
  411980:	cmp	x0, #0x1
  411984:	b.hi	4119a0 <synthesize_change_one+0x1b8>  // b.pmore
  411988:	ldr	x0, [x29, #88]
  41198c:	lsl	x0, x0, #3
  411990:	add	x1, x29, #0x88
  411994:	ldr	x0, [x1, x0]
  411998:	cmp	x0, #0x0
  41199c:	b.ne	411950 <synthesize_change_one+0x168>  // b.any
  4119a0:	ldr	x0, [x29, #72]
  4119a4:	strb	wzr, [x0]
  4119a8:	ldr	x0, [x29, #104]
  4119ac:	str	x0, [x29, #112]
  4119b0:	str	xzr, [x29, #64]
  4119b4:	ldr	x0, [x29, #24]
  4119b8:	str	x0, [x29, #120]
  4119bc:	mov	w0, #0x7                   	// #7
  4119c0:	str	w0, [x29, #44]
  4119c4:	str	wzr, [x29, #48]
  4119c8:	ldr	x0, [x29, #120]
  4119cc:	cmp	x0, #0x0
  4119d0:	b.eq	411a0c <synthesize_change_one+0x224>  // b.none
  4119d4:	mov	w0, #0x1                   	// #1
  4119d8:	bl	40be30 <log_get_max_level_realm@plt>
  4119dc:	mov	w1, w0
  4119e0:	ldr	w0, [x29, #44]
  4119e4:	cmp	w0, w1
  4119e8:	cset	w0, le
  4119ec:	and	w0, w0, #0xff
  4119f0:	and	x0, x0, #0xff
  4119f4:	cmp	x0, #0x0
  4119f8:	b.eq	411a0c <synthesize_change_one+0x224>  // b.none
  4119fc:	add	x0, x29, #0x40
  411a00:	mov	x1, x0
  411a04:	ldr	x0, [x29, #120]
  411a08:	bl	40aba0 <sd_device_get_sysname@plt>
  411a0c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411a10:	add	x2, x0, #0x66b
  411a14:	ldr	x0, [x29, #64]
  411a18:	cmp	x0, #0x0
  411a1c:	b.eq	411a2c <synthesize_change_one+0x244>  // b.none
  411a20:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411a24:	add	x0, x0, #0x730
  411a28:	b	411a30 <synthesize_change_one+0x248>
  411a2c:	mov	x0, #0x0                   	// #0
  411a30:	ldr	x3, [x29, #64]
  411a34:	ldr	x1, [x29, #16]
  411a38:	str	x1, [sp, #16]
  411a3c:	adrp	x1, 451000 <_fini+0xa30>
  411a40:	add	x1, x1, #0x2d0
  411a44:	str	x1, [sp, #8]
  411a48:	str	xzr, [sp]
  411a4c:	mov	x7, #0x0                   	// #0
  411a50:	mov	x6, x3
  411a54:	mov	x5, x0
  411a58:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  411a5c:	add	x4, x0, #0x320
  411a60:	mov	w3, #0x443                 	// #1091
  411a64:	ldr	w1, [x29, #48]
  411a68:	ldr	w0, [x29, #44]
  411a6c:	bl	40b020 <log_object_internal@plt>
  411a70:	mov	w2, #0x20                  	// #32
  411a74:	adrp	x0, 451000 <_fini+0xa30>
  411a78:	add	x1, x0, #0x300
  411a7c:	ldr	x0, [x29, #112]
  411a80:	bl	40c3b8 <write_string_file>
  411a84:	str	w0, [x29, #52]
  411a88:	ldr	w0, [x29, #52]
  411a8c:	cmp	w0, #0x0
  411a90:	b.ge	411b5c <synthesize_change_one+0x374>  // b.tcont
  411a94:	str	xzr, [x29, #64]
  411a98:	ldr	x0, [x29, #24]
  411a9c:	str	x0, [x29, #128]
  411aa0:	mov	w0, #0x7                   	// #7
  411aa4:	str	w0, [x29, #56]
  411aa8:	ldr	w0, [x29, #52]
  411aac:	str	w0, [x29, #60]
  411ab0:	ldr	x0, [x29, #128]
  411ab4:	cmp	x0, #0x0
  411ab8:	b.eq	411af4 <synthesize_change_one+0x30c>  // b.none
  411abc:	mov	w0, #0x1                   	// #1
  411ac0:	bl	40be30 <log_get_max_level_realm@plt>
  411ac4:	mov	w1, w0
  411ac8:	ldr	w0, [x29, #56]
  411acc:	cmp	w0, w1
  411ad0:	cset	w0, le
  411ad4:	and	w0, w0, #0xff
  411ad8:	and	x0, x0, #0xff
  411adc:	cmp	x0, #0x0
  411ae0:	b.eq	411af4 <synthesize_change_one+0x30c>  // b.none
  411ae4:	add	x0, x29, #0x40
  411ae8:	mov	x1, x0
  411aec:	ldr	x0, [x29, #128]
  411af0:	bl	40aba0 <sd_device_get_sysname@plt>
  411af4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411af8:	add	x2, x0, #0x66b
  411afc:	ldr	x0, [x29, #64]
  411b00:	cmp	x0, #0x0
  411b04:	b.eq	411b14 <synthesize_change_one+0x32c>  // b.none
  411b08:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411b0c:	add	x0, x0, #0x730
  411b10:	b	411b18 <synthesize_change_one+0x330>
  411b14:	mov	x0, #0x0                   	// #0
  411b18:	ldr	x3, [x29, #64]
  411b1c:	ldr	x1, [x29, #112]
  411b20:	str	x1, [sp, #16]
  411b24:	adrp	x1, 451000 <_fini+0xa30>
  411b28:	add	x1, x1, #0x308
  411b2c:	str	x1, [sp, #8]
  411b30:	str	xzr, [sp]
  411b34:	mov	x7, #0x0                   	// #0
  411b38:	mov	x6, x3
  411b3c:	mov	x5, x0
  411b40:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  411b44:	add	x4, x0, #0x320
  411b48:	mov	w3, #0x446                 	// #1094
  411b4c:	ldr	w1, [x29, #60]
  411b50:	ldr	w0, [x29, #56]
  411b54:	bl	40b020 <log_object_internal@plt>
  411b58:	b	411b60 <synthesize_change_one+0x378>
  411b5c:	mov	w0, #0x0                   	// #0
  411b60:	mov	w1, w0
  411b64:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  411b68:	add	x0, x0, #0x7a8
  411b6c:	ldr	x2, [x29, #152]
  411b70:	ldr	x0, [x0]
  411b74:	eor	x0, x2, x0
  411b78:	cmp	x0, #0x0
  411b7c:	b.eq	411b84 <synthesize_change_one+0x39c>  // b.none
  411b80:	bl	40b280 <__stack_chk_fail@plt>
  411b84:	mov	w0, w1
  411b88:	mov	sp, x29
  411b8c:	ldp	x29, x30, [sp], #160
  411b90:	ret

0000000000411b94 <synthesize_change>:
  411b94:	stp	x29, x30, [sp, #-160]!
  411b98:	mov	x29, sp
  411b9c:	stp	x19, x20, [sp, #16]
  411ba0:	str	x0, [sp, #40]
  411ba4:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  411ba8:	add	x0, x0, #0x7a8
  411bac:	ldr	x1, [x0]
  411bb0:	str	x1, [sp, #152]
  411bb4:	mov	x1, #0x0                   	// #0
  411bb8:	add	x0, sp, #0x48
  411bbc:	mov	x1, x0
  411bc0:	ldr	x0, [sp, #40]
  411bc4:	bl	40af80 <sd_device_get_subsystem@plt>
  411bc8:	str	w0, [sp, #64]
  411bcc:	ldr	w0, [sp, #64]
  411bd0:	cmp	w0, #0x0
  411bd4:	b.ge	411be0 <synthesize_change+0x4c>  // b.tcont
  411bd8:	ldr	w19, [sp, #64]
  411bdc:	b	411f74 <synthesize_change+0x3e0>
  411be0:	add	x0, sp, #0x50
  411be4:	mov	x1, x0
  411be8:	ldr	x0, [sp, #40]
  411bec:	bl	40aba0 <sd_device_get_sysname@plt>
  411bf0:	str	w0, [sp, #64]
  411bf4:	ldr	w0, [sp, #64]
  411bf8:	cmp	w0, #0x0
  411bfc:	b.ge	411c08 <synthesize_change+0x74>  // b.tcont
  411c00:	ldr	w19, [sp, #64]
  411c04:	b	411f74 <synthesize_change+0x3e0>
  411c08:	add	x0, sp, #0x58
  411c0c:	mov	x1, x0
  411c10:	ldr	x0, [sp, #40]
  411c14:	bl	40a6f0 <sd_device_get_devname@plt>
  411c18:	str	w0, [sp, #64]
  411c1c:	ldr	w0, [sp, #64]
  411c20:	cmp	w0, #0x0
  411c24:	b.ge	411c30 <synthesize_change+0x9c>  // b.tcont
  411c28:	ldr	w19, [sp, #64]
  411c2c:	b	411f74 <synthesize_change+0x3e0>
  411c30:	add	x0, sp, #0x60
  411c34:	mov	x1, x0
  411c38:	ldr	x0, [sp, #40]
  411c3c:	bl	40bd50 <sd_device_get_syspath@plt>
  411c40:	str	w0, [sp, #64]
  411c44:	ldr	w0, [sp, #64]
  411c48:	cmp	w0, #0x0
  411c4c:	b.ge	411c58 <synthesize_change+0xc4>  // b.tcont
  411c50:	ldr	w19, [sp, #64]
  411c54:	b	411f74 <synthesize_change+0x3e0>
  411c58:	add	x0, sp, #0x68
  411c5c:	mov	x1, x0
  411c60:	ldr	x0, [sp, #40]
  411c64:	bl	40a460 <sd_device_get_devtype@plt>
  411c68:	str	w0, [sp, #64]
  411c6c:	ldr	w0, [sp, #64]
  411c70:	cmp	w0, #0x0
  411c74:	b.ge	411c80 <synthesize_change+0xec>  // b.tcont
  411c78:	ldr	w19, [sp, #64]
  411c7c:	b	411f74 <synthesize_change+0x3e0>
  411c80:	ldr	x0, [sp, #72]
  411c84:	mov	x1, x0
  411c88:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411c8c:	add	x0, x0, #0x828
  411c90:	bl	40c3e8 <streq_ptr>
  411c94:	and	w0, w0, #0xff
  411c98:	cmp	w0, #0x0
  411c9c:	b.eq	411f60 <synthesize_change+0x3cc>  // b.none
  411ca0:	ldr	x0, [sp, #104]
  411ca4:	mov	x1, x0
  411ca8:	adrp	x0, 451000 <_fini+0xa30>
  411cac:	add	x0, x0, #0x330
  411cb0:	bl	40c3e8 <streq_ptr>
  411cb4:	and	w0, w0, #0xff
  411cb8:	cmp	w0, #0x0
  411cbc:	b.eq	411f60 <synthesize_change+0x3cc>  // b.none
  411cc0:	ldr	x2, [sp, #80]
  411cc4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411cc8:	add	x1, x0, #0x5f0
  411ccc:	mov	x0, x2
  411cd0:	bl	40c458 <startswith>
  411cd4:	cmp	x0, #0x0
  411cd8:	b.ne	411f60 <synthesize_change+0x3cc>  // b.any
  411cdc:	str	xzr, [sp, #112]
  411ce0:	strb	wzr, [sp, #62]
  411ce4:	strb	wzr, [sp, #63]
  411ce8:	ldr	x0, [sp, #88]
  411cec:	mov	w1, #0x8800                	// #34816
  411cf0:	movk	w1, #0x8, lsl #16
  411cf4:	bl	40bcb0 <open64@plt>
  411cf8:	str	w0, [sp, #68]
  411cfc:	ldr	w0, [sp, #68]
  411d00:	cmp	w0, #0x0
  411d04:	b.lt	411d54 <synthesize_change+0x1c0>  // b.tstop
  411d08:	mov	w1, #0x6                   	// #6
  411d0c:	ldr	w0, [sp, #68]
  411d10:	bl	40ab40 <flock@plt>
  411d14:	str	w0, [sp, #64]
  411d18:	ldr	w0, [sp, #64]
  411d1c:	cmp	w0, #0x0
  411d20:	b.lt	411d38 <synthesize_change+0x1a4>  // b.tstop
  411d24:	mov	w2, #0x0                   	// #0
  411d28:	mov	x1, #0x125f                	// #4703
  411d2c:	ldr	w0, [sp, #68]
  411d30:	bl	40b5f0 <ioctl@plt>
  411d34:	str	w0, [sp, #64]
  411d38:	ldr	w0, [sp, #68]
  411d3c:	bl	40bc70 <close@plt>
  411d40:	ldr	w0, [sp, #64]
  411d44:	cmp	w0, #0x0
  411d48:	b.lt	411d54 <synthesize_change+0x1c0>  // b.tstop
  411d4c:	mov	w0, #0x1                   	// #1
  411d50:	strb	w0, [sp, #62]
  411d54:	add	x0, sp, #0x70
  411d58:	bl	40a670 <sd_device_enumerator_new@plt>
  411d5c:	str	w0, [sp, #64]
  411d60:	ldr	w0, [sp, #64]
  411d64:	cmp	w0, #0x0
  411d68:	b.ge	411d78 <synthesize_change+0x1e4>  // b.tcont
  411d6c:	ldr	w19, [sp, #64]
  411d70:	mov	w20, #0x0                   	// #0
  411d74:	b	411f48 <synthesize_change+0x3b4>
  411d78:	ldr	x0, [sp, #112]
  411d7c:	bl	40be10 <sd_device_enumerator_allow_uninitialized@plt>
  411d80:	str	w0, [sp, #64]
  411d84:	ldr	w0, [sp, #64]
  411d88:	cmp	w0, #0x0
  411d8c:	b.ge	411d9c <synthesize_change+0x208>  // b.tcont
  411d90:	ldr	w19, [sp, #64]
  411d94:	mov	w20, #0x0                   	// #0
  411d98:	b	411f48 <synthesize_change+0x3b4>
  411d9c:	ldr	x0, [sp, #112]
  411da0:	ldr	x1, [sp, #40]
  411da4:	bl	40afd0 <sd_device_enumerator_add_match_parent@plt>
  411da8:	str	w0, [sp, #64]
  411dac:	ldr	w0, [sp, #64]
  411db0:	cmp	w0, #0x0
  411db4:	b.ge	411dc4 <synthesize_change+0x230>  // b.tcont
  411db8:	ldr	w19, [sp, #64]
  411dbc:	mov	w20, #0x0                   	// #0
  411dc0:	b	411f48 <synthesize_change+0x3b4>
  411dc4:	ldr	x3, [sp, #112]
  411dc8:	mov	w2, #0x1                   	// #1
  411dcc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411dd0:	add	x1, x0, #0x828
  411dd4:	mov	x0, x3
  411dd8:	bl	40a760 <sd_device_enumerator_add_match_subsystem@plt>
  411ddc:	str	w0, [sp, #64]
  411de0:	ldr	w0, [sp, #64]
  411de4:	cmp	w0, #0x0
  411de8:	b.ge	411df8 <synthesize_change+0x264>  // b.tcont
  411dec:	ldr	w19, [sp, #64]
  411df0:	mov	w20, #0x0                   	// #0
  411df4:	b	411f48 <synthesize_change+0x3b4>
  411df8:	ldr	x0, [sp, #112]
  411dfc:	bl	40a890 <sd_device_enumerator_get_device_first@plt>
  411e00:	str	x0, [sp, #144]
  411e04:	b	411e58 <synthesize_change+0x2c4>
  411e08:	add	x0, sp, #0x88
  411e0c:	mov	x1, x0
  411e10:	ldr	x0, [sp, #144]
  411e14:	bl	40a460 <sd_device_get_devtype@plt>
  411e18:	cmp	w0, #0x0
  411e1c:	b.lt	411e3c <synthesize_change+0x2a8>  // b.tstop
  411e20:	ldr	x0, [sp, #136]
  411e24:	mov	x1, x0
  411e28:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411e2c:	add	x0, x0, #0x870
  411e30:	bl	40b710 <strcmp@plt>
  411e34:	cmp	w0, #0x0
  411e38:	b.eq	411e4c <synthesize_change+0x2b8>  // b.none
  411e3c:	ldr	x0, [sp, #112]
  411e40:	bl	40b3b0 <sd_device_enumerator_get_device_next@plt>
  411e44:	str	x0, [sp, #144]
  411e48:	b	411e58 <synthesize_change+0x2c4>
  411e4c:	mov	w0, #0x1                   	// #1
  411e50:	strb	w0, [sp, #63]
  411e54:	b	411e64 <synthesize_change+0x2d0>
  411e58:	ldr	x0, [sp, #144]
  411e5c:	cmp	x0, #0x0
  411e60:	b.ne	411e08 <synthesize_change+0x274>  // b.any
  411e64:	ldrb	w0, [sp, #62]
  411e68:	cmp	w0, #0x0
  411e6c:	b.eq	411e88 <synthesize_change+0x2f4>  // b.none
  411e70:	ldrb	w0, [sp, #63]
  411e74:	cmp	w0, #0x0
  411e78:	b.eq	411e88 <synthesize_change+0x2f4>  // b.none
  411e7c:	mov	w19, #0x0                   	// #0
  411e80:	mov	w20, #0x0                   	// #0
  411e84:	b	411f48 <synthesize_change+0x3b4>
  411e88:	ldr	x0, [sp, #96]
  411e8c:	mov	x1, x0
  411e90:	ldr	x0, [sp, #40]
  411e94:	bl	4117e8 <synthesize_change_one>
  411e98:	ldr	x0, [sp, #112]
  411e9c:	bl	40a890 <sd_device_enumerator_get_device_first@plt>
  411ea0:	str	x0, [sp, #144]
  411ea4:	b	411f38 <synthesize_change+0x3a4>
  411ea8:	add	x0, sp, #0x78
  411eac:	mov	x1, x0
  411eb0:	ldr	x0, [sp, #144]
  411eb4:	bl	40a460 <sd_device_get_devtype@plt>
  411eb8:	cmp	w0, #0x0
  411ebc:	b.lt	411f20 <synthesize_change+0x38c>  // b.tstop
  411ec0:	ldr	x0, [sp, #120]
  411ec4:	mov	x1, x0
  411ec8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  411ecc:	add	x0, x0, #0x870
  411ed0:	bl	40b710 <strcmp@plt>
  411ed4:	cmp	w0, #0x0
  411ed8:	b.ne	411f20 <synthesize_change+0x38c>  // b.any
  411edc:	add	x0, sp, #0x80
  411ee0:	mov	x1, x0
  411ee4:	ldr	x0, [sp, #144]
  411ee8:	bl	40a6f0 <sd_device_get_devname@plt>
  411eec:	cmp	w0, #0x0
  411ef0:	b.lt	411f28 <synthesize_change+0x394>  // b.tstop
  411ef4:	add	x0, sp, #0x88
  411ef8:	mov	x1, x0
  411efc:	ldr	x0, [sp, #144]
  411f00:	bl	40bd50 <sd_device_get_syspath@plt>
  411f04:	cmp	w0, #0x0
  411f08:	b.lt	411f28 <synthesize_change+0x394>  // b.tstop
  411f0c:	ldr	x0, [sp, #136]
  411f10:	mov	x1, x0
  411f14:	ldr	x0, [sp, #40]
  411f18:	bl	4117e8 <synthesize_change_one>
  411f1c:	b	411f2c <synthesize_change+0x398>
  411f20:	nop
  411f24:	b	411f2c <synthesize_change+0x398>
  411f28:	nop
  411f2c:	ldr	x0, [sp, #112]
  411f30:	bl	40b3b0 <sd_device_enumerator_get_device_next@plt>
  411f34:	str	x0, [sp, #144]
  411f38:	ldr	x0, [sp, #144]
  411f3c:	cmp	x0, #0x0
  411f40:	b.ne	411ea8 <synthesize_change+0x314>  // b.any
  411f44:	mov	w20, #0x1                   	// #1
  411f48:	add	x0, sp, #0x70
  411f4c:	bl	40c30c <sd_device_enumerator_unrefp>
  411f50:	cmp	w20, #0x1
  411f54:	b.ne	411f74 <synthesize_change+0x3e0>  // b.any
  411f58:	nop
  411f5c:	b	411f70 <synthesize_change+0x3dc>
  411f60:	ldr	x0, [sp, #96]
  411f64:	mov	x1, x0
  411f68:	ldr	x0, [sp, #40]
  411f6c:	bl	4117e8 <synthesize_change_one>
  411f70:	mov	w19, #0x0                   	// #0
  411f74:	mov	w1, w19
  411f78:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  411f7c:	add	x0, x0, #0x7a8
  411f80:	ldr	x2, [sp, #152]
  411f84:	ldr	x0, [x0]
  411f88:	eor	x0, x2, x0
  411f8c:	cmp	x0, #0x0
  411f90:	b.eq	411f98 <synthesize_change+0x404>  // b.none
  411f94:	bl	40b280 <__stack_chk_fail@plt>
  411f98:	mov	w0, w1
  411f9c:	ldp	x19, x20, [sp, #16]
  411fa0:	ldp	x29, x30, [sp], #160
  411fa4:	ret

0000000000411fa8 <on_inotify>:
  411fa8:	sub	sp, sp, #0x1e0
  411fac:	stp	x29, x30, [sp, #32]
  411fb0:	add	x29, sp, #0x20
  411fb4:	str	x19, [sp, #48]
  411fb8:	str	x0, [sp, #88]
  411fbc:	str	w1, [sp, #84]
  411fc0:	str	w2, [sp, #80]
  411fc4:	str	x3, [sp, #72]
  411fc8:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  411fcc:	add	x0, x0, #0x7a8
  411fd0:	ldr	x1, [x0]
  411fd4:	str	x1, [sp, #472]
  411fd8:	mov	x1, #0x0                   	// #0
  411fdc:	ldr	x0, [sp, #72]
  411fe0:	str	x0, [sp, #176]
  411fe4:	ldr	x0, [sp, #176]
  411fe8:	cmp	x0, #0x0
  411fec:	cset	w0, eq  // eq = none
  411ff0:	and	w0, w0, #0xff
  411ff4:	and	x0, x0, #0xff
  411ff8:	cmp	x0, #0x0
  411ffc:	b.eq	412028 <on_inotify+0x80>  // b.none
  412000:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412004:	add	x1, x0, #0x66b
  412008:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41200c:	add	x4, x0, #0x338
  412010:	mov	w3, #0x4c0                 	// #1216
  412014:	mov	x2, x1
  412018:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41201c:	add	x1, x0, #0x6f8
  412020:	mov	w0, #0x1                   	// #1
  412024:	bl	40abb0 <log_assert_failed_realm@plt>
  412028:	ldr	x0, [sp, #176]
  41202c:	ldr	x0, [x0, #104]
  412030:	bl	40b990 <event_source_disable@plt>
  412034:	str	w0, [sp, #108]
  412038:	ldr	w0, [sp, #108]
  41203c:	cmp	w0, #0x0
  412040:	b.ge	4120c0 <on_inotify+0x118>  // b.tcont
  412044:	mov	w0, #0x4                   	// #4
  412048:	str	w0, [sp, #112]
  41204c:	ldr	w0, [sp, #108]
  412050:	str	w0, [sp, #116]
  412054:	mov	w0, #0x1                   	// #1
  412058:	str	w0, [sp, #120]
  41205c:	ldr	w0, [sp, #120]
  412060:	bl	40be30 <log_get_max_level_realm@plt>
  412064:	mov	w1, w0
  412068:	ldr	w0, [sp, #112]
  41206c:	and	w0, w0, #0x7
  412070:	cmp	w1, w0
  412074:	b.lt	4120b8 <on_inotify+0x110>  // b.tstop
  412078:	ldr	w0, [sp, #120]
  41207c:	lsl	w1, w0, #10
  412080:	ldr	w0, [sp, #112]
  412084:	orr	w6, w1, w0
  412088:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41208c:	add	x1, x0, #0x66b
  412090:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412094:	add	x5, x0, #0xea0
  412098:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41209c:	add	x4, x0, #0x348
  4120a0:	mov	w3, #0x4c4                 	// #1220
  4120a4:	mov	x2, x1
  4120a8:	ldr	w1, [sp, #116]
  4120ac:	mov	w0, w6
  4120b0:	bl	40b4f0 <log_internal_realm@plt>
  4120b4:	b	4120c0 <on_inotify+0x118>
  4120b8:	ldr	w0, [sp, #116]
  4120bc:	cmp	w0, #0x0
  4120c0:	add	x0, sp, #0xc8
  4120c4:	mov	x2, #0x110                 	// #272
  4120c8:	mov	x1, x0
  4120cc:	ldr	w0, [sp, #84]
  4120d0:	bl	40b0b0 <read@plt>
  4120d4:	str	x0, [sp, #184]
  4120d8:	ldr	x0, [sp, #184]
  4120dc:	cmp	x0, #0x0
  4120e0:	b.ge	4121b0 <on_inotify+0x208>  // b.tcont
  4120e4:	strb	wzr, [sp, #107]
  4120e8:	bl	40b040 <__errno_location@plt>
  4120ec:	ldr	w0, [x0]
  4120f0:	cmp	w0, #0x4
  4120f4:	b.eq	412100 <on_inotify+0x158>  // b.none
  4120f8:	cmp	w0, #0xb
  4120fc:	b.ne	412108 <on_inotify+0x160>  // b.any
  412100:	mov	w0, #0x1                   	// #1
  412104:	strb	w0, [sp, #107]
  412108:	nop
  41210c:	ldrb	w0, [sp, #107]
  412110:	cmp	w0, #0x0
  412114:	b.eq	412120 <on_inotify+0x178>  // b.none
  412118:	mov	w0, #0x1                   	// #1
  41211c:	b	412350 <on_inotify+0x3a8>
  412120:	mov	w0, #0x3                   	// #3
  412124:	str	w0, [sp, #132]
  412128:	bl	40b040 <__errno_location@plt>
  41212c:	ldr	w0, [x0]
  412130:	str	w0, [sp, #136]
  412134:	mov	w0, #0x1                   	// #1
  412138:	str	w0, [sp, #140]
  41213c:	ldr	w0, [sp, #140]
  412140:	bl	40be30 <log_get_max_level_realm@plt>
  412144:	mov	w1, w0
  412148:	ldr	w0, [sp, #132]
  41214c:	and	w0, w0, #0x7
  412150:	cmp	w1, w0
  412154:	b.lt	412198 <on_inotify+0x1f0>  // b.tstop
  412158:	ldr	w0, [sp, #140]
  41215c:	lsl	w1, w0, #10
  412160:	ldr	w0, [sp, #132]
  412164:	orr	w6, w1, w0
  412168:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41216c:	add	x1, x0, #0x66b
  412170:	adrp	x0, 451000 <_fini+0xa30>
  412174:	add	x5, x0, #0x338
  412178:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41217c:	add	x4, x0, #0x348
  412180:	mov	w3, #0x4cb                 	// #1227
  412184:	mov	x2, x1
  412188:	ldr	w1, [sp, #136]
  41218c:	mov	w0, w6
  412190:	bl	40b4f0 <log_internal_realm@plt>
  412194:	b	412350 <on_inotify+0x3a8>
  412198:	ldr	w0, [sp, #136]
  41219c:	cmp	w0, #0x0
  4121a0:	cneg	w0, w0, lt  // lt = tstop
  4121a4:	and	w0, w0, #0xff
  4121a8:	neg	w0, w0
  4121ac:	b	412350 <on_inotify+0x3a8>
  4121b0:	add	x0, sp, #0xc8
  4121b4:	str	x0, [sp, #168]
  4121b8:	b	412334 <on_inotify+0x38c>
  4121bc:	str	xzr, [sp, #144]
  4121c0:	ldr	x0, [sp, #168]
  4121c4:	ldr	w0, [x0]
  4121c8:	add	x1, sp, #0x90
  4121cc:	bl	435abc <udev_watch_lookup>
  4121d0:	cmp	w0, #0x0
  4121d4:	b.gt	4121e0 <on_inotify+0x238>
  4121d8:	mov	w19, #0x0                   	// #0
  4121dc:	b	41230c <on_inotify+0x364>
  4121e0:	ldr	x0, [sp, #144]
  4121e4:	add	x1, sp, #0x98
  4121e8:	bl	40a6f0 <sd_device_get_devname@plt>
  4121ec:	cmp	w0, #0x0
  4121f0:	b.ge	4121fc <on_inotify+0x254>  // b.tcont
  4121f4:	mov	w19, #0x0                   	// #0
  4121f8:	b	41230c <on_inotify+0x364>
  4121fc:	str	xzr, [sp, #160]
  412200:	ldr	x0, [sp, #144]
  412204:	str	x0, [sp, #192]
  412208:	mov	w0, #0x7                   	// #7
  41220c:	str	w0, [sp, #124]
  412210:	str	wzr, [sp, #128]
  412214:	ldr	x0, [sp, #192]
  412218:	cmp	x0, #0x0
  41221c:	b.eq	412258 <on_inotify+0x2b0>  // b.none
  412220:	mov	w0, #0x1                   	// #1
  412224:	bl	40be30 <log_get_max_level_realm@plt>
  412228:	mov	w1, w0
  41222c:	ldr	w0, [sp, #124]
  412230:	cmp	w0, w1
  412234:	cset	w0, le
  412238:	and	w0, w0, #0xff
  41223c:	and	x0, x0, #0xff
  412240:	cmp	x0, #0x0
  412244:	b.eq	412258 <on_inotify+0x2b0>  // b.none
  412248:	add	x0, sp, #0xa0
  41224c:	mov	x1, x0
  412250:	ldr	x0, [sp, #192]
  412254:	bl	40aba0 <sd_device_get_sysname@plt>
  412258:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41225c:	add	x8, x0, #0x66b
  412260:	ldr	x0, [sp, #160]
  412264:	cmp	x0, #0x0
  412268:	b.eq	412278 <on_inotify+0x2d0>  // b.none
  41226c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412270:	add	x0, x0, #0x730
  412274:	b	41227c <on_inotify+0x2d4>
  412278:	mov	x0, #0x0                   	// #0
  41227c:	ldr	x3, [sp, #160]
  412280:	ldr	x1, [sp, #168]
  412284:	ldr	w1, [x1, #4]
  412288:	ldr	x2, [sp, #152]
  41228c:	str	x2, [sp, #24]
  412290:	str	w1, [sp, #16]
  412294:	adrp	x1, 451000 <_fini+0xa30>
  412298:	add	x1, x1, #0x358
  41229c:	str	x1, [sp, #8]
  4122a0:	str	xzr, [sp]
  4122a4:	mov	x7, #0x0                   	// #0
  4122a8:	mov	x6, x3
  4122ac:	mov	x5, x0
  4122b0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4122b4:	add	x4, x0, #0x348
  4122b8:	mov	w3, #0x4d8                 	// #1240
  4122bc:	mov	x2, x8
  4122c0:	ldr	w1, [sp, #128]
  4122c4:	ldr	w0, [sp, #124]
  4122c8:	bl	40b020 <log_object_internal@plt>
  4122cc:	ldr	x0, [sp, #168]
  4122d0:	ldr	w0, [x0, #4]
  4122d4:	and	w0, w0, #0x8
  4122d8:	cmp	w0, #0x0
  4122dc:	b.eq	4122ec <on_inotify+0x344>  // b.none
  4122e0:	ldr	x0, [sp, #144]
  4122e4:	bl	411b94 <synthesize_change>
  4122e8:	b	412308 <on_inotify+0x360>
  4122ec:	ldr	x0, [sp, #168]
  4122f0:	ldr	w0, [x0, #4]
  4122f4:	and	w0, w0, #0x8000
  4122f8:	cmp	w0, #0x0
  4122fc:	b.eq	412308 <on_inotify+0x360>  // b.none
  412300:	ldr	x0, [sp, #144]
  412304:	bl	435788 <udev_watch_end>
  412308:	mov	w19, #0x1                   	// #1
  41230c:	add	x0, sp, #0x90
  412310:	bl	40c2d8 <sd_device_unrefp>
  412314:	cmp	w19, #0x1
  412318:	ldr	x0, [sp, #168]
  41231c:	ldr	w0, [x0, #12]
  412320:	mov	w0, w0
  412324:	add	x0, x0, #0x10
  412328:	ldr	x1, [sp, #168]
  41232c:	add	x0, x1, x0
  412330:	str	x0, [sp, #168]
  412334:	ldr	x0, [sp, #184]
  412338:	add	x1, sp, #0xc8
  41233c:	add	x0, x1, x0
  412340:	ldr	x1, [sp, #168]
  412344:	cmp	x1, x0
  412348:	b.cc	4121bc <on_inotify+0x214>  // b.lo, b.ul, b.last
  41234c:	mov	w0, #0x1                   	// #1
  412350:	mov	w1, w0
  412354:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  412358:	add	x0, x0, #0x7a8
  41235c:	ldr	x2, [sp, #472]
  412360:	ldr	x0, [x0]
  412364:	eor	x0, x2, x0
  412368:	cmp	x0, #0x0
  41236c:	b.eq	412374 <on_inotify+0x3cc>  // b.none
  412370:	bl	40b280 <__stack_chk_fail@plt>
  412374:	mov	w0, w1
  412378:	ldr	x19, [sp, #48]
  41237c:	ldp	x29, x30, [sp, #32]
  412380:	add	sp, sp, #0x1e0
  412384:	ret

0000000000412388 <on_sigterm>:
  412388:	stp	x29, x30, [sp, #-64]!
  41238c:	mov	x29, sp
  412390:	str	x0, [sp, #40]
  412394:	str	x1, [sp, #32]
  412398:	str	x2, [sp, #24]
  41239c:	ldr	x0, [sp, #24]
  4123a0:	str	x0, [sp, #56]
  4123a4:	ldr	x0, [sp, #56]
  4123a8:	cmp	x0, #0x0
  4123ac:	cset	w0, eq  // eq = none
  4123b0:	and	w0, w0, #0xff
  4123b4:	and	x0, x0, #0xff
  4123b8:	cmp	x0, #0x0
  4123bc:	b.eq	4123e8 <on_sigterm+0x60>  // b.none
  4123c0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4123c4:	add	x1, x0, #0x66b
  4123c8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4123cc:	add	x4, x0, #0x358
  4123d0:	mov	w3, #0x4e5                 	// #1253
  4123d4:	mov	x2, x1
  4123d8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4123dc:	add	x1, x0, #0x6f8
  4123e0:	mov	w0, #0x1                   	// #1
  4123e4:	bl	40abb0 <log_assert_failed_realm@plt>
  4123e8:	ldr	x0, [sp, #56]
  4123ec:	bl	4100b0 <manager_exit>
  4123f0:	mov	w0, #0x1                   	// #1
  4123f4:	ldp	x29, x30, [sp], #64
  4123f8:	ret

00000000004123fc <on_sighup>:
  4123fc:	stp	x29, x30, [sp, #-64]!
  412400:	mov	x29, sp
  412404:	str	x0, [sp, #40]
  412408:	str	x1, [sp, #32]
  41240c:	str	x2, [sp, #24]
  412410:	ldr	x0, [sp, #24]
  412414:	str	x0, [sp, #56]
  412418:	ldr	x0, [sp, #56]
  41241c:	cmp	x0, #0x0
  412420:	cset	w0, eq  // eq = none
  412424:	and	w0, w0, #0xff
  412428:	and	x0, x0, #0xff
  41242c:	cmp	x0, #0x0
  412430:	b.eq	41245c <on_sighup+0x60>  // b.none
  412434:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412438:	add	x1, x0, #0x66b
  41243c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412440:	add	x4, x0, #0x368
  412444:	mov	w3, #0x4ef                 	// #1263
  412448:	mov	x2, x1
  41244c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412450:	add	x1, x0, #0x6f8
  412454:	mov	w0, #0x1                   	// #1
  412458:	bl	40abb0 <log_assert_failed_realm@plt>
  41245c:	ldr	x0, [sp, #56]
  412460:	bl	4101a0 <manager_reload>
  412464:	mov	w0, #0x1                   	// #1
  412468:	ldp	x29, x30, [sp], #64
  41246c:	ret

0000000000412470 <on_sigchld>:
  412470:	sub	sp, sp, #0x120
  412474:	stp	x29, x30, [sp, #32]
  412478:	add	x29, sp, #0x20
  41247c:	stp	x19, x20, [sp, #48]
  412480:	str	x21, [sp, #64]
  412484:	str	x0, [sp, #104]
  412488:	str	x1, [sp, #96]
  41248c:	str	x2, [sp, #88]
  412490:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  412494:	add	x0, x0, #0x7a8
  412498:	ldr	x1, [x0]
  41249c:	str	x1, [sp, #280]
  4124a0:	mov	x1, #0x0                   	// #0
  4124a4:	ldr	x0, [sp, #88]
  4124a8:	str	x0, [sp, #248]
  4124ac:	ldr	x0, [sp, #248]
  4124b0:	cmp	x0, #0x0
  4124b4:	cset	w0, eq  // eq = none
  4124b8:	and	w0, w0, #0xff
  4124bc:	and	x0, x0, #0xff
  4124c0:	cmp	x0, #0x0
  4124c4:	b.eq	4124f0 <on_sigchld+0x80>  // b.none
  4124c8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4124cc:	add	x1, x0, #0x66b
  4124d0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4124d4:	add	x4, x0, #0x378
  4124d8:	mov	w3, #0x4fa                 	// #1274
  4124dc:	mov	x2, x1
  4124e0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4124e4:	add	x1, x0, #0x6f8
  4124e8:	mov	w0, #0x1                   	// #1
  4124ec:	bl	40abb0 <log_assert_failed_realm@plt>
  4124f0:	add	x0, sp, #0x74
  4124f4:	mov	w2, #0x1                   	// #1
  4124f8:	mov	x1, x0
  4124fc:	mov	w0, #0xffffffff            	// #-1
  412500:	bl	40b5d0 <waitpid@plt>
  412504:	str	w0, [sp, #120]
  412508:	ldr	w0, [sp, #120]
  41250c:	cmp	w0, #0x0
  412510:	b.gt	412538 <on_sigchld+0xc8>
  412514:	ldr	x0, [sp, #248]
  412518:	bl	41033c <event_queue_start>
  41251c:	ldr	x0, [sp, #248]
  412520:	ldr	x0, [x0, #8]
  412524:	bl	40c278 <hashmap_isempty>
  412528:	and	w0, w0, #0xff
  41252c:	cmp	w0, #0x0
  412530:	b.ne	412bbc <on_sigchld+0x74c>  // b.any
  412534:	b	412c54 <on_sigchld+0x7e4>
  412538:	ldr	x0, [sp, #248]
  41253c:	ldr	x19, [x0, #8]
  412540:	ldr	w0, [sp, #120]
  412544:	bl	40c65c <PID_TO_PTR>
  412548:	mov	x1, x0
  41254c:	mov	x0, x19
  412550:	bl	40c214 <hashmap_get>
  412554:	str	x0, [sp, #256]
  412558:	ldr	x0, [sp, #256]
  41255c:	cmp	x0, #0x0
  412560:	b.ne	4125e4 <on_sigchld+0x174>  // b.any
  412564:	mov	w0, #0x4                   	// #4
  412568:	str	w0, [sp, #216]
  41256c:	str	wzr, [sp, #220]
  412570:	mov	w0, #0x1                   	// #1
  412574:	str	w0, [sp, #224]
  412578:	ldr	w0, [sp, #224]
  41257c:	bl	40be30 <log_get_max_level_realm@plt>
  412580:	mov	w1, w0
  412584:	ldr	w0, [sp, #216]
  412588:	and	w0, w0, #0x7
  41258c:	cmp	w1, w0
  412590:	b.lt	4125d8 <on_sigchld+0x168>  // b.tstop
  412594:	ldr	w0, [sp, #224]
  412598:	lsl	w1, w0, #10
  41259c:	ldr	w0, [sp, #216]
  4125a0:	orr	w7, w1, w0
  4125a4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4125a8:	add	x1, x0, #0x66b
  4125ac:	ldr	w6, [sp, #120]
  4125b0:	adrp	x0, 451000 <_fini+0xa30>
  4125b4:	add	x5, x0, #0x378
  4125b8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4125bc:	add	x4, x0, #0x388
  4125c0:	mov	w3, #0x507                 	// #1287
  4125c4:	mov	x2, x1
  4125c8:	ldr	w1, [sp, #220]
  4125cc:	mov	w0, w7
  4125d0:	bl	40b4f0 <log_internal_realm@plt>
  4125d4:	b	412bb8 <on_sigchld+0x748>
  4125d8:	ldr	w0, [sp, #220]
  4125dc:	cmp	w0, #0x0
  4125e0:	b	412bb8 <on_sigchld+0x748>
  4125e4:	ldr	w0, [sp, #116]
  4125e8:	and	w0, w0, #0x7f
  4125ec:	cmp	w0, #0x0
  4125f0:	b.ne	412718 <on_sigchld+0x2a8>  // b.any
  4125f4:	ldr	w0, [sp, #116]
  4125f8:	asr	w0, w0, #8
  4125fc:	and	w0, w0, #0xff
  412600:	cmp	w0, #0x0
  412604:	b.ne	412688 <on_sigchld+0x218>  // b.any
  412608:	mov	w0, #0x7                   	// #7
  41260c:	str	w0, [sp, #184]
  412610:	str	wzr, [sp, #188]
  412614:	mov	w0, #0x1                   	// #1
  412618:	str	w0, [sp, #192]
  41261c:	ldr	w0, [sp, #192]
  412620:	bl	40be30 <log_get_max_level_realm@plt>
  412624:	mov	w1, w0
  412628:	ldr	w0, [sp, #184]
  41262c:	and	w0, w0, #0x7
  412630:	cmp	w1, w0
  412634:	b.lt	41267c <on_sigchld+0x20c>  // b.tstop
  412638:	ldr	w0, [sp, #192]
  41263c:	lsl	w1, w0, #10
  412640:	ldr	w0, [sp, #184]
  412644:	orr	w7, w1, w0
  412648:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41264c:	add	x1, x0, #0x66b
  412650:	ldr	w6, [sp, #120]
  412654:	adrp	x0, 451000 <_fini+0xa30>
  412658:	add	x5, x0, #0x3a0
  41265c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412660:	add	x4, x0, #0x388
  412664:	mov	w3, #0x50d                 	// #1293
  412668:	mov	x2, x1
  41266c:	ldr	w1, [sp, #188]
  412670:	mov	w0, w7
  412674:	bl	40b4f0 <log_internal_realm@plt>
  412678:	b	412984 <on_sigchld+0x514>
  41267c:	ldr	w0, [sp, #188]
  412680:	cmp	w0, #0x0
  412684:	b	412984 <on_sigchld+0x514>
  412688:	mov	w0, #0x4                   	// #4
  41268c:	str	w0, [sp, #172]
  412690:	str	wzr, [sp, #176]
  412694:	mov	w0, #0x1                   	// #1
  412698:	str	w0, [sp, #180]
  41269c:	ldr	w0, [sp, #180]
  4126a0:	bl	40be30 <log_get_max_level_realm@plt>
  4126a4:	mov	w1, w0
  4126a8:	ldr	w0, [sp, #172]
  4126ac:	and	w0, w0, #0x7
  4126b0:	cmp	w1, w0
  4126b4:	b.lt	41270c <on_sigchld+0x29c>  // b.tstop
  4126b8:	ldr	w0, [sp, #180]
  4126bc:	lsl	w1, w0, #10
  4126c0:	ldr	w0, [sp, #172]
  4126c4:	orr	w8, w1, w0
  4126c8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4126cc:	add	x1, x0, #0x66b
  4126d0:	ldr	w0, [sp, #116]
  4126d4:	asr	w0, w0, #8
  4126d8:	and	w0, w0, #0xff
  4126dc:	mov	w7, w0
  4126e0:	ldr	w6, [sp, #120]
  4126e4:	adrp	x0, 451000 <_fini+0xa30>
  4126e8:	add	x5, x0, #0x3b8
  4126ec:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4126f0:	add	x4, x0, #0x388
  4126f4:	mov	w3, #0x50f                 	// #1295
  4126f8:	mov	x2, x1
  4126fc:	ldr	w1, [sp, #176]
  412700:	mov	w0, w8
  412704:	bl	40b4f0 <log_internal_realm@plt>
  412708:	b	412984 <on_sigchld+0x514>
  41270c:	ldr	w0, [sp, #176]
  412710:	cmp	w0, #0x0
  412714:	b	412984 <on_sigchld+0x514>
  412718:	ldr	w0, [sp, #116]
  41271c:	and	w0, w0, #0xff
  412720:	and	w0, w0, #0x7f
  412724:	and	w0, w0, #0xff
  412728:	add	w0, w0, #0x1
  41272c:	and	w0, w0, #0xff
  412730:	sxtb	w0, w0
  412734:	asr	w0, w0, #1
  412738:	sxtb	w0, w0
  41273c:	cmp	w0, #0x0
  412740:	b.le	4127e0 <on_sigchld+0x370>
  412744:	mov	w0, #0x4                   	// #4
  412748:	str	w0, [sp, #160]
  41274c:	str	wzr, [sp, #164]
  412750:	mov	w0, #0x1                   	// #1
  412754:	str	w0, [sp, #168]
  412758:	ldr	w0, [sp, #168]
  41275c:	bl	40be30 <log_get_max_level_realm@plt>
  412760:	mov	w1, w0
  412764:	ldr	w0, [sp, #160]
  412768:	and	w0, w0, #0x7
  41276c:	cmp	w1, w0
  412770:	b.lt	4127d4 <on_sigchld+0x364>  // b.tstop
  412774:	ldr	w0, [sp, #168]
  412778:	lsl	w1, w0, #10
  41277c:	ldr	w0, [sp, #160]
  412780:	orr	w19, w1, w0
  412784:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412788:	add	x20, x0, #0x66b
  41278c:	ldr	w0, [sp, #116]
  412790:	and	w21, w0, #0x7f
  412794:	ldr	w0, [sp, #116]
  412798:	and	w0, w0, #0x7f
  41279c:	bl	40b360 <signal_to_string@plt>
  4127a0:	str	x0, [sp]
  4127a4:	mov	w7, w21
  4127a8:	ldr	w6, [sp, #120]
  4127ac:	adrp	x0, 451000 <_fini+0xa30>
  4127b0:	add	x5, x0, #0x3e0
  4127b4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4127b8:	add	x4, x0, #0x388
  4127bc:	mov	w3, #0x511                 	// #1297
  4127c0:	mov	x2, x20
  4127c4:	ldr	w1, [sp, #164]
  4127c8:	mov	w0, w19
  4127cc:	bl	40b4f0 <log_internal_realm@plt>
  4127d0:	b	412984 <on_sigchld+0x514>
  4127d4:	ldr	w0, [sp, #164]
  4127d8:	cmp	w0, #0x0
  4127dc:	b	412984 <on_sigchld+0x514>
  4127e0:	ldr	w0, [sp, #116]
  4127e4:	and	w0, w0, #0xff
  4127e8:	cmp	w0, #0x7f
  4127ec:	b.ne	412870 <on_sigchld+0x400>  // b.any
  4127f0:	mov	w0, #0x6                   	// #6
  4127f4:	str	w0, [sp, #148]
  4127f8:	str	wzr, [sp, #152]
  4127fc:	mov	w0, #0x1                   	// #1
  412800:	str	w0, [sp, #156]
  412804:	ldr	w0, [sp, #156]
  412808:	bl	40be30 <log_get_max_level_realm@plt>
  41280c:	mov	w1, w0
  412810:	ldr	w0, [sp, #148]
  412814:	and	w0, w0, #0x7
  412818:	cmp	w1, w0
  41281c:	b.lt	412864 <on_sigchld+0x3f4>  // b.tstop
  412820:	ldr	w0, [sp, #156]
  412824:	lsl	w1, w0, #10
  412828:	ldr	w0, [sp, #148]
  41282c:	orr	w7, w1, w0
  412830:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412834:	add	x1, x0, #0x66b
  412838:	ldr	w6, [sp, #120]
  41283c:	adrp	x0, 451000 <_fini+0xa30>
  412840:	add	x5, x0, #0x410
  412844:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412848:	add	x4, x0, #0x388
  41284c:	mov	w3, #0x513                 	// #1299
  412850:	mov	x2, x1
  412854:	ldr	w1, [sp, #152]
  412858:	mov	w0, w7
  41285c:	bl	40b4f0 <log_internal_realm@plt>
  412860:	b	412bb8 <on_sigchld+0x748>
  412864:	ldr	w0, [sp, #152]
  412868:	cmp	w0, #0x0
  41286c:	b	412bb8 <on_sigchld+0x748>
  412870:	ldr	w1, [sp, #116]
  412874:	mov	w0, #0xffff                	// #65535
  412878:	cmp	w1, w0
  41287c:	b.ne	412900 <on_sigchld+0x490>  // b.any
  412880:	mov	w0, #0x6                   	// #6
  412884:	str	w0, [sp, #136]
  412888:	str	wzr, [sp, #140]
  41288c:	mov	w0, #0x1                   	// #1
  412890:	str	w0, [sp, #144]
  412894:	ldr	w0, [sp, #144]
  412898:	bl	40be30 <log_get_max_level_realm@plt>
  41289c:	mov	w1, w0
  4128a0:	ldr	w0, [sp, #136]
  4128a4:	and	w0, w0, #0x7
  4128a8:	cmp	w1, w0
  4128ac:	b.lt	4128f4 <on_sigchld+0x484>  // b.tstop
  4128b0:	ldr	w0, [sp, #144]
  4128b4:	lsl	w1, w0, #10
  4128b8:	ldr	w0, [sp, #136]
  4128bc:	orr	w7, w1, w0
  4128c0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4128c4:	add	x1, x0, #0x66b
  4128c8:	ldr	w6, [sp, #120]
  4128cc:	adrp	x0, 451000 <_fini+0xa30>
  4128d0:	add	x5, x0, #0x428
  4128d4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4128d8:	add	x4, x0, #0x388
  4128dc:	mov	w3, #0x516                 	// #1302
  4128e0:	mov	x2, x1
  4128e4:	ldr	w1, [sp, #140]
  4128e8:	mov	w0, w7
  4128ec:	bl	40b4f0 <log_internal_realm@plt>
  4128f0:	b	412bb8 <on_sigchld+0x748>
  4128f4:	ldr	w0, [sp, #140]
  4128f8:	cmp	w0, #0x0
  4128fc:	b	412bb8 <on_sigchld+0x748>
  412900:	mov	w0, #0x4                   	// #4
  412904:	str	w0, [sp, #124]
  412908:	str	wzr, [sp, #128]
  41290c:	mov	w0, #0x1                   	// #1
  412910:	str	w0, [sp, #132]
  412914:	ldr	w0, [sp, #132]
  412918:	bl	40be30 <log_get_max_level_realm@plt>
  41291c:	mov	w1, w0
  412920:	ldr	w0, [sp, #124]
  412924:	and	w0, w0, #0x7
  412928:	cmp	w1, w0
  41292c:	b.lt	41297c <on_sigchld+0x50c>  // b.tstop
  412930:	ldr	w0, [sp, #132]
  412934:	lsl	w1, w0, #10
  412938:	ldr	w0, [sp, #124]
  41293c:	orr	w8, w1, w0
  412940:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412944:	add	x1, x0, #0x66b
  412948:	ldr	w0, [sp, #116]
  41294c:	mov	w7, w0
  412950:	ldr	w6, [sp, #120]
  412954:	adrp	x0, 451000 <_fini+0xa30>
  412958:	add	x5, x0, #0x440
  41295c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412960:	add	x4, x0, #0x388
  412964:	mov	w3, #0x519                 	// #1305
  412968:	mov	x2, x1
  41296c:	ldr	w1, [sp, #128]
  412970:	mov	w0, w8
  412974:	bl	40b4f0 <log_internal_realm@plt>
  412978:	b	412984 <on_sigchld+0x514>
  41297c:	ldr	w0, [sp, #128]
  412980:	cmp	w0, #0x0
  412984:	ldr	w0, [sp, #116]
  412988:	and	w0, w0, #0x7f
  41298c:	cmp	w0, #0x0
  412990:	b.ne	4129a8 <on_sigchld+0x538>  // b.any
  412994:	ldr	w0, [sp, #116]
  412998:	asr	w0, w0, #8
  41299c:	and	w0, w0, #0xff
  4129a0:	cmp	w0, #0x0
  4129a4:	b.eq	412bb0 <on_sigchld+0x740>  // b.none
  4129a8:	ldr	x0, [sp, #256]
  4129ac:	ldr	x0, [x0, #32]
  4129b0:	cmp	x0, #0x0
  4129b4:	b.eq	412bb0 <on_sigchld+0x740>  // b.none
  4129b8:	str	xzr, [sp, #240]
  4129bc:	ldr	x0, [sp, #256]
  4129c0:	ldr	x0, [x0, #32]
  4129c4:	ldr	x0, [x0, #24]
  4129c8:	str	x0, [sp, #264]
  4129cc:	mov	w0, #0x3                   	// #3
  4129d0:	str	w0, [sp, #196]
  4129d4:	str	wzr, [sp, #200]
  4129d8:	ldr	x0, [sp, #264]
  4129dc:	cmp	x0, #0x0
  4129e0:	b.eq	412a1c <on_sigchld+0x5ac>  // b.none
  4129e4:	mov	w0, #0x1                   	// #1
  4129e8:	bl	40be30 <log_get_max_level_realm@plt>
  4129ec:	mov	w1, w0
  4129f0:	ldr	w0, [sp, #196]
  4129f4:	cmp	w0, w1
  4129f8:	cset	w0, le
  4129fc:	and	w0, w0, #0xff
  412a00:	and	x0, x0, #0xff
  412a04:	cmp	x0, #0x0
  412a08:	b.eq	412a1c <on_sigchld+0x5ac>  // b.none
  412a0c:	add	x0, sp, #0xf0
  412a10:	mov	x1, x0
  412a14:	ldr	x0, [sp, #264]
  412a18:	bl	40aba0 <sd_device_get_sysname@plt>
  412a1c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412a20:	add	x2, x0, #0x66b
  412a24:	ldr	x0, [sp, #240]
  412a28:	cmp	x0, #0x0
  412a2c:	b.eq	412a3c <on_sigchld+0x5cc>  // b.none
  412a30:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412a34:	add	x0, x0, #0x730
  412a38:	b	412a40 <on_sigchld+0x5d0>
  412a3c:	mov	x0, #0x0                   	// #0
  412a40:	ldr	x3, [sp, #240]
  412a44:	ldr	w1, [sp, #120]
  412a48:	str	w1, [sp, #16]
  412a4c:	adrp	x1, 451000 <_fini+0xa30>
  412a50:	add	x1, x1, #0x468
  412a54:	str	x1, [sp, #8]
  412a58:	str	xzr, [sp]
  412a5c:	mov	x7, #0x0                   	// #0
  412a60:	mov	x6, x3
  412a64:	mov	x5, x0
  412a68:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412a6c:	add	x4, x0, #0x388
  412a70:	mov	w3, #0x51c                 	// #1308
  412a74:	ldr	w1, [sp, #200]
  412a78:	ldr	w0, [sp, #196]
  412a7c:	bl	40b020 <log_object_internal@plt>
  412a80:	ldr	x0, [sp, #256]
  412a84:	ldr	x0, [x0, #32]
  412a88:	ldr	x0, [x0, #24]
  412a8c:	bl	40b240 <device_delete_db@plt>
  412a90:	ldr	x0, [sp, #256]
  412a94:	ldr	x0, [x0, #32]
  412a98:	ldr	x0, [x0, #24]
  412a9c:	mov	w2, #0x0                   	// #0
  412aa0:	mov	x1, #0x0                   	// #0
  412aa4:	bl	40ab20 <device_tag_index@plt>
  412aa8:	ldr	x0, [sp, #248]
  412aac:	ldr	x0, [x0, #64]
  412ab0:	cmp	x0, #0x0
  412ab4:	b.eq	412bb0 <on_sigchld+0x740>  // b.none
  412ab8:	ldr	x0, [sp, #248]
  412abc:	ldr	x3, [x0, #64]
  412ac0:	ldr	x0, [sp, #256]
  412ac4:	ldr	x0, [x0, #32]
  412ac8:	ldr	x0, [x0, #32]
  412acc:	mov	x2, x0
  412ad0:	mov	x1, #0x0                   	// #0
  412ad4:	mov	x0, x3
  412ad8:	bl	40aab0 <device_monitor_send_device@plt>
  412adc:	str	w0, [sp, #204]
  412ae0:	ldr	w0, [sp, #204]
  412ae4:	cmp	w0, #0x0
  412ae8:	b.ge	412bb0 <on_sigchld+0x740>  // b.tcont
  412aec:	str	xzr, [sp, #240]
  412af0:	ldr	x0, [sp, #256]
  412af4:	ldr	x0, [x0, #32]
  412af8:	ldr	x0, [x0, #32]
  412afc:	str	x0, [sp, #272]
  412b00:	mov	w0, #0x3                   	// #3
  412b04:	str	w0, [sp, #208]
  412b08:	ldr	w0, [sp, #204]
  412b0c:	str	w0, [sp, #212]
  412b10:	ldr	x0, [sp, #272]
  412b14:	cmp	x0, #0x0
  412b18:	b.eq	412b54 <on_sigchld+0x6e4>  // b.none
  412b1c:	mov	w0, #0x1                   	// #1
  412b20:	bl	40be30 <log_get_max_level_realm@plt>
  412b24:	mov	w1, w0
  412b28:	ldr	w0, [sp, #208]
  412b2c:	cmp	w0, w1
  412b30:	cset	w0, le
  412b34:	and	w0, w0, #0xff
  412b38:	and	x0, x0, #0xff
  412b3c:	cmp	x0, #0x0
  412b40:	b.eq	412b54 <on_sigchld+0x6e4>  // b.none
  412b44:	add	x0, sp, #0xf0
  412b48:	mov	x1, x0
  412b4c:	ldr	x0, [sp, #272]
  412b50:	bl	40aba0 <sd_device_get_sysname@plt>
  412b54:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412b58:	add	x2, x0, #0x66b
  412b5c:	ldr	x0, [sp, #240]
  412b60:	cmp	x0, #0x0
  412b64:	b.eq	412b74 <on_sigchld+0x704>  // b.none
  412b68:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412b6c:	add	x0, x0, #0x730
  412b70:	b	412b78 <on_sigchld+0x708>
  412b74:	mov	x0, #0x0                   	// #0
  412b78:	ldr	x3, [sp, #240]
  412b7c:	adrp	x1, 451000 <_fini+0xa30>
  412b80:	add	x1, x1, #0x480
  412b84:	str	x1, [sp, #8]
  412b88:	str	xzr, [sp]
  412b8c:	mov	x7, #0x0                   	// #0
  412b90:	mov	x6, x3
  412b94:	mov	x5, x0
  412b98:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412b9c:	add	x4, x0, #0x388
  412ba0:	mov	w3, #0x526                 	// #1318
  412ba4:	ldr	w1, [sp, #212]
  412ba8:	ldr	w0, [sp, #208]
  412bac:	bl	40b020 <log_object_internal@plt>
  412bb0:	ldr	x0, [sp, #256]
  412bb4:	bl	40c9d4 <worker_free>
  412bb8:	b	4124f0 <on_sigchld+0x80>
  412bbc:	ldr	x0, [sp, #248]
  412bc0:	ldr	x0, [x0, #104]
  412bc4:	bl	40b990 <event_source_disable@plt>
  412bc8:	str	w0, [sp, #204]
  412bcc:	ldr	w0, [sp, #204]
  412bd0:	cmp	w0, #0x0
  412bd4:	b.ge	412c54 <on_sigchld+0x7e4>  // b.tcont
  412bd8:	mov	w0, #0x4                   	// #4
  412bdc:	str	w0, [sp, #228]
  412be0:	ldr	w0, [sp, #204]
  412be4:	str	w0, [sp, #232]
  412be8:	mov	w0, #0x1                   	// #1
  412bec:	str	w0, [sp, #236]
  412bf0:	ldr	w0, [sp, #236]
  412bf4:	bl	40be30 <log_get_max_level_realm@plt>
  412bf8:	mov	w1, w0
  412bfc:	ldr	w0, [sp, #228]
  412c00:	and	w0, w0, #0x7
  412c04:	cmp	w1, w0
  412c08:	b.lt	412c4c <on_sigchld+0x7dc>  // b.tstop
  412c0c:	ldr	w0, [sp, #236]
  412c10:	lsl	w1, w0, #10
  412c14:	ldr	w0, [sp, #228]
  412c18:	orr	w6, w1, w0
  412c1c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412c20:	add	x1, x0, #0x66b
  412c24:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412c28:	add	x5, x0, #0xea0
  412c2c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412c30:	add	x4, x0, #0x388
  412c34:	mov	w3, #0x534                 	// #1332
  412c38:	mov	x2, x1
  412c3c:	ldr	w1, [sp, #232]
  412c40:	mov	w0, w6
  412c44:	bl	40b4f0 <log_internal_realm@plt>
  412c48:	b	412c54 <on_sigchld+0x7e4>
  412c4c:	ldr	w0, [sp, #232]
  412c50:	cmp	w0, #0x0
  412c54:	mov	w0, #0x1                   	// #1
  412c58:	mov	w1, w0
  412c5c:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  412c60:	add	x0, x0, #0x7a8
  412c64:	ldr	x2, [sp, #280]
  412c68:	ldr	x0, [x0]
  412c6c:	eor	x0, x2, x0
  412c70:	cmp	x0, #0x0
  412c74:	b.eq	412c7c <on_sigchld+0x80c>  // b.none
  412c78:	bl	40b280 <__stack_chk_fail@plt>
  412c7c:	mov	w0, w1
  412c80:	ldp	x19, x20, [sp, #48]
  412c84:	ldr	x21, [sp, #64]
  412c88:	ldp	x29, x30, [sp, #32]
  412c8c:	add	sp, sp, #0x120
  412c90:	ret

0000000000412c94 <on_post>:
  412c94:	sub	sp, sp, #0x50
  412c98:	stp	x29, x30, [sp, #16]
  412c9c:	add	x29, sp, #0x10
  412ca0:	stp	x19, x20, [sp, #32]
  412ca4:	str	x0, [sp, #56]
  412ca8:	str	x1, [sp, #48]
  412cac:	ldr	x0, [sp, #48]
  412cb0:	str	x0, [sp, #72]
  412cb4:	ldr	x0, [sp, #72]
  412cb8:	cmp	x0, #0x0
  412cbc:	cset	w0, eq  // eq = none
  412cc0:	and	w0, w0, #0xff
  412cc4:	and	x0, x0, #0xff
  412cc8:	cmp	x0, #0x0
  412ccc:	b.eq	412cf8 <on_post+0x64>  // b.none
  412cd0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412cd4:	add	x1, x0, #0x66b
  412cd8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412cdc:	add	x4, x0, #0x398
  412ce0:	mov	w3, #0x53d                 	// #1341
  412ce4:	mov	x2, x1
  412ce8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412cec:	add	x1, x0, #0x6f8
  412cf0:	mov	w0, #0x1                   	// #1
  412cf4:	bl	40abb0 <log_assert_failed_realm@plt>
  412cf8:	ldr	x0, [sp, #72]
  412cfc:	ldr	x0, [x0, #16]
  412d00:	cmp	x0, #0x0
  412d04:	b.eq	412d10 <on_post+0x7c>  // b.none
  412d08:	mov	w0, #0x1                   	// #1
  412d0c:	b	412e08 <on_post+0x174>
  412d10:	ldr	x0, [sp, #72]
  412d14:	ldr	x0, [x0, #8]
  412d18:	bl	40c278 <hashmap_isempty>
  412d1c:	and	w0, w0, #0xff
  412d20:	eor	w0, w0, #0x1
  412d24:	and	w0, w0, #0xff
  412d28:	cmp	w0, #0x0
  412d2c:	b.eq	412d9c <on_post+0x108>  // b.none
  412d30:	ldr	x0, [sp, #72]
  412d34:	ldr	x19, [x0]
  412d38:	ldr	x0, [sp, #72]
  412d3c:	add	x20, x0, #0x68
  412d40:	mov	w0, #0x1                   	// #1
  412d44:	bl	40b650 <now@plt>
  412d48:	mov	x1, x0
  412d4c:	mov	x0, #0xc6c0                	// #50880
  412d50:	movk	x0, #0x2d, lsl #16
  412d54:	add	x1, x1, x0
  412d58:	strb	wzr, [sp, #8]
  412d5c:	adrp	x0, 451000 <_fini+0xa30>
  412d60:	add	x0, x0, #0x4b0
  412d64:	str	x0, [sp]
  412d68:	mov	x7, #0x0                   	// #0
  412d6c:	ldr	x6, [sp, #72]
  412d70:	adrp	x0, 410000 <is_device_busy+0x348>
  412d74:	add	x5, x0, #0x250
  412d78:	mov	x4, #0x4240                	// #16960
  412d7c:	movk	x4, #0xf, lsl #16
  412d80:	mov	x3, x1
  412d84:	mov	w2, #0x1                   	// #1
  412d88:	mov	x1, x20
  412d8c:	mov	x0, x19
  412d90:	bl	40a320 <event_reset_time@plt>
  412d94:	mov	w0, #0x1                   	// #1
  412d98:	b	412e08 <on_post+0x174>
  412d9c:	ldr	x0, [sp, #72]
  412da0:	ldrb	w0, [x0, #120]
  412da4:	and	w0, w0, #0x2
  412da8:	and	w0, w0, #0xff
  412dac:	cmp	w0, #0x0
  412db0:	b.eq	412dc8 <on_post+0x134>  // b.none
  412db4:	ldr	x0, [sp, #72]
  412db8:	ldr	x0, [x0]
  412dbc:	mov	w1, #0x0                   	// #0
  412dc0:	bl	40ba80 <sd_event_exit@plt>
  412dc4:	b	412e08 <on_post+0x174>
  412dc8:	ldr	x0, [sp, #72]
  412dcc:	ldr	x0, [x0, #24]
  412dd0:	cmp	x0, #0x0
  412dd4:	b.eq	412e04 <on_post+0x170>  // b.none
  412dd8:	ldr	x0, [sp, #72]
  412ddc:	ldr	x0, [x0, #24]
  412de0:	mov	x6, #0x0                   	// #0
  412de4:	mov	x5, #0x0                   	// #0
  412de8:	mov	x4, #0x0                   	// #0
  412dec:	mov	w3, #0x2                   	// #2
  412df0:	mov	w2, #0x9                   	// #9
  412df4:	mov	x1, x0
  412df8:	adrp	x0, 451000 <_fini+0xa30>
  412dfc:	add	x0, x0, #0x4c8
  412e00:	bl	40bb20 <cg_kill@plt>
  412e04:	mov	w0, #0x1                   	// #1
  412e08:	ldp	x19, x20, [sp, #32]
  412e0c:	ldp	x29, x30, [sp, #16]
  412e10:	add	sp, sp, #0x50
  412e14:	ret

0000000000412e18 <listen_fds>:
  412e18:	stp	x29, x30, [sp, #-48]!
  412e1c:	mov	x29, sp
  412e20:	str	x0, [sp, #24]
  412e24:	str	x1, [sp, #16]
  412e28:	mov	w0, #0xffffffff            	// #-1
  412e2c:	str	w0, [sp, #32]
  412e30:	mov	w0, #0xffffffff            	// #-1
  412e34:	str	w0, [sp, #36]
  412e38:	ldr	x0, [sp, #24]
  412e3c:	cmp	x0, #0x0
  412e40:	cset	w0, eq  // eq = none
  412e44:	and	w0, w0, #0xff
  412e48:	and	x0, x0, #0xff
  412e4c:	cmp	x0, #0x0
  412e50:	b.eq	412e7c <listen_fds+0x64>  // b.none
  412e54:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412e58:	add	x1, x0, #0x66b
  412e5c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412e60:	add	x4, x0, #0x3a0
  412e64:	mov	w3, #0x55c                 	// #1372
  412e68:	mov	x2, x1
  412e6c:	adrp	x0, 451000 <_fini+0xa30>
  412e70:	add	x1, x0, #0x4d8
  412e74:	mov	w0, #0x1                   	// #1
  412e78:	bl	40abb0 <log_assert_failed_realm@plt>
  412e7c:	ldr	x0, [sp, #16]
  412e80:	cmp	x0, #0x0
  412e84:	cset	w0, eq  // eq = none
  412e88:	and	w0, w0, #0xff
  412e8c:	and	x0, x0, #0xff
  412e90:	cmp	x0, #0x0
  412e94:	b.eq	412ec0 <listen_fds+0xa8>  // b.none
  412e98:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412e9c:	add	x1, x0, #0x66b
  412ea0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412ea4:	add	x4, x0, #0x3a0
  412ea8:	mov	w3, #0x55d                 	// #1373
  412eac:	mov	x2, x1
  412eb0:	adrp	x0, 451000 <_fini+0xa30>
  412eb4:	add	x1, x0, #0x4e8
  412eb8:	mov	w0, #0x1                   	// #1
  412ebc:	bl	40abb0 <log_assert_failed_realm@plt>
  412ec0:	mov	w0, #0x1                   	// #1
  412ec4:	bl	40acc0 <sd_listen_fds@plt>
  412ec8:	str	w0, [sp, #44]
  412ecc:	ldr	w0, [sp, #44]
  412ed0:	cmp	w0, #0x0
  412ed4:	b.ge	412ee0 <listen_fds+0xc8>  // b.tcont
  412ed8:	ldr	w0, [sp, #44]
  412edc:	b	412fa8 <listen_fds+0x190>
  412ee0:	mov	w0, #0x3                   	// #3
  412ee4:	str	w0, [sp, #40]
  412ee8:	b	412f78 <listen_fds+0x160>
  412eec:	mov	w3, #0xffffffff            	// #-1
  412ef0:	mov	w2, #0x5                   	// #5
  412ef4:	mov	w1, #0x1                   	// #1
  412ef8:	ldr	w0, [sp, #40]
  412efc:	bl	40abd0 <sd_is_socket@plt>
  412f00:	cmp	w0, #0x0
  412f04:	b.le	412f28 <listen_fds+0x110>
  412f08:	ldr	w0, [sp, #32]
  412f0c:	cmp	w0, #0x0
  412f10:	b.lt	412f1c <listen_fds+0x104>  // b.tstop
  412f14:	mov	w0, #0xffffffea            	// #-22
  412f18:	b	412fa8 <listen_fds+0x190>
  412f1c:	ldr	w0, [sp, #40]
  412f20:	str	w0, [sp, #32]
  412f24:	b	412f6c <listen_fds+0x154>
  412f28:	mov	w3, #0xffffffff            	// #-1
  412f2c:	mov	w2, #0x3                   	// #3
  412f30:	mov	w1, #0x10                  	// #16
  412f34:	ldr	w0, [sp, #40]
  412f38:	bl	40abd0 <sd_is_socket@plt>
  412f3c:	cmp	w0, #0x0
  412f40:	b.le	412f64 <listen_fds+0x14c>
  412f44:	ldr	w0, [sp, #36]
  412f48:	cmp	w0, #0x0
  412f4c:	b.lt	412f58 <listen_fds+0x140>  // b.tstop
  412f50:	mov	w0, #0xffffffea            	// #-22
  412f54:	b	412fa8 <listen_fds+0x190>
  412f58:	ldr	w0, [sp, #40]
  412f5c:	str	w0, [sp, #36]
  412f60:	b	412f6c <listen_fds+0x154>
  412f64:	mov	w0, #0xffffffea            	// #-22
  412f68:	b	412fa8 <listen_fds+0x190>
  412f6c:	ldr	w0, [sp, #40]
  412f70:	add	w0, w0, #0x1
  412f74:	str	w0, [sp, #40]
  412f78:	ldr	w0, [sp, #44]
  412f7c:	add	w0, w0, #0x2
  412f80:	ldr	w1, [sp, #40]
  412f84:	cmp	w1, w0
  412f88:	b.le	412eec <listen_fds+0xd4>
  412f8c:	ldr	x0, [sp, #24]
  412f90:	ldr	w1, [sp, #32]
  412f94:	str	w1, [x0]
  412f98:	ldr	x0, [sp, #16]
  412f9c:	ldr	w1, [sp, #36]
  412fa0:	str	w1, [x0]
  412fa4:	mov	w0, #0x0                   	// #0
  412fa8:	ldp	x29, x30, [sp], #48
  412fac:	ret

0000000000412fb0 <parse_proc_cmdline_item>:
  412fb0:	stp	x29, x30, [sp, #-80]!
  412fb4:	mov	x29, sp
  412fb8:	str	x0, [sp, #40]
  412fbc:	str	x1, [sp, #32]
  412fc0:	str	x2, [sp, #24]
  412fc4:	str	wzr, [sp, #52]
  412fc8:	ldr	x0, [sp, #40]
  412fcc:	cmp	x0, #0x0
  412fd0:	cset	w0, eq  // eq = none
  412fd4:	and	w0, w0, #0xff
  412fd8:	and	x0, x0, #0xff
  412fdc:	cmp	x0, #0x0
  412fe0:	b.eq	41300c <parse_proc_cmdline_item+0x5c>  // b.none
  412fe4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  412fe8:	add	x1, x0, #0x66b
  412fec:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  412ff0:	add	x4, x0, #0x3b0
  412ff4:	mov	w3, #0x585                 	// #1413
  412ff8:	mov	x2, x1
  412ffc:	adrp	x0, 451000 <_fini+0xa30>
  413000:	add	x1, x0, #0x4f8
  413004:	mov	w0, #0x1                   	// #1
  413008:	bl	40abb0 <log_assert_failed_realm@plt>
  41300c:	ldr	x0, [sp, #32]
  413010:	cmp	x0, #0x0
  413014:	b.ne	413020 <parse_proc_cmdline_item+0x70>  // b.any
  413018:	mov	w0, #0x0                   	// #0
  41301c:	b	4132a8 <parse_proc_cmdline_item+0x2f8>
  413020:	adrp	x0, 451000 <_fini+0xa30>
  413024:	add	x1, x0, #0x500
  413028:	ldr	x0, [sp, #40]
  41302c:	bl	40a8f0 <proc_cmdline_key_streq@plt>
  413030:	and	w0, w0, #0xff
  413034:	cmp	w0, #0x0
  413038:	b.eq	413084 <parse_proc_cmdline_item+0xd4>  // b.none
  41303c:	ldr	x1, [sp, #32]
  413040:	ldr	x0, [sp, #40]
  413044:	bl	40c5b0 <proc_cmdline_value_missing>
  413048:	and	w0, w0, #0xff
  41304c:	cmp	w0, #0x0
  413050:	b.eq	41305c <parse_proc_cmdline_item+0xac>  // b.none
  413054:	mov	w0, #0x0                   	// #0
  413058:	b	4132a8 <parse_proc_cmdline_item+0x2f8>
  41305c:	ldr	x0, [sp, #32]
  413060:	bl	40b3e0 <log_level_from_string@plt>
  413064:	str	w0, [sp, #52]
  413068:	ldr	w0, [sp, #52]
  41306c:	cmp	w0, #0x0
  413070:	b.lt	413214 <parse_proc_cmdline_item+0x264>  // b.tstop
  413074:	ldr	w1, [sp, #52]
  413078:	mov	w0, #0x1                   	// #1
  41307c:	bl	40b860 <log_set_max_level_realm@plt>
  413080:	b	413214 <parse_proc_cmdline_item+0x264>
  413084:	adrp	x0, 451000 <_fini+0xa30>
  413088:	add	x1, x0, #0x518
  41308c:	ldr	x0, [sp, #40]
  413090:	bl	40a8f0 <proc_cmdline_key_streq@plt>
  413094:	and	w0, w0, #0xff
  413098:	cmp	w0, #0x0
  41309c:	b.eq	4130d8 <parse_proc_cmdline_item+0x128>  // b.none
  4130a0:	ldr	x1, [sp, #32]
  4130a4:	ldr	x0, [sp, #40]
  4130a8:	bl	40c5b0 <proc_cmdline_value_missing>
  4130ac:	and	w0, w0, #0xff
  4130b0:	cmp	w0, #0x0
  4130b4:	b.eq	4130c0 <parse_proc_cmdline_item+0x110>  // b.none
  4130b8:	mov	w0, #0x0                   	// #0
  4130bc:	b	4132a8 <parse_proc_cmdline_item+0x2f8>
  4130c0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4130c4:	add	x1, x0, #0x8
  4130c8:	ldr	x0, [sp, #32]
  4130cc:	bl	40b920 <parse_sec@plt>
  4130d0:	str	w0, [sp, #52]
  4130d4:	b	413214 <parse_proc_cmdline_item+0x264>
  4130d8:	adrp	x0, 451000 <_fini+0xa30>
  4130dc:	add	x1, x0, #0x530
  4130e0:	ldr	x0, [sp, #40]
  4130e4:	bl	40a8f0 <proc_cmdline_key_streq@plt>
  4130e8:	and	w0, w0, #0xff
  4130ec:	cmp	w0, #0x0
  4130f0:	b.eq	41312c <parse_proc_cmdline_item+0x17c>  // b.none
  4130f4:	ldr	x1, [sp, #32]
  4130f8:	ldr	x0, [sp, #40]
  4130fc:	bl	40c5b0 <proc_cmdline_value_missing>
  413100:	and	w0, w0, #0xff
  413104:	cmp	w0, #0x0
  413108:	b.eq	413114 <parse_proc_cmdline_item+0x164>  // b.none
  41310c:	mov	w0, #0x0                   	// #0
  413110:	b	4132a8 <parse_proc_cmdline_item+0x2f8>
  413114:	adrp	x0, 48d000 <arg_resolve_name_timing>
  413118:	add	x1, x0, #0x190
  41311c:	ldr	x0, [sp, #32]
  413120:	bl	40c588 <safe_atou>
  413124:	str	w0, [sp, #52]
  413128:	b	413214 <parse_proc_cmdline_item+0x264>
  41312c:	adrp	x0, 451000 <_fini+0xa30>
  413130:	add	x1, x0, #0x548
  413134:	ldr	x0, [sp, #40]
  413138:	bl	40a8f0 <proc_cmdline_key_streq@plt>
  41313c:	and	w0, w0, #0xff
  413140:	cmp	w0, #0x0
  413144:	b.eq	413180 <parse_proc_cmdline_item+0x1d0>  // b.none
  413148:	ldr	x1, [sp, #32]
  41314c:	ldr	x0, [sp, #40]
  413150:	bl	40c5b0 <proc_cmdline_value_missing>
  413154:	and	w0, w0, #0xff
  413158:	cmp	w0, #0x0
  41315c:	b.eq	413168 <parse_proc_cmdline_item+0x1b8>  // b.none
  413160:	mov	w0, #0x0                   	// #0
  413164:	b	4132a8 <parse_proc_cmdline_item+0x2f8>
  413168:	adrp	x0, 48d000 <arg_resolve_name_timing>
  41316c:	add	x1, x0, #0x198
  413170:	ldr	x0, [sp, #32]
  413174:	bl	40b920 <parse_sec@plt>
  413178:	str	w0, [sp, #52]
  41317c:	b	413214 <parse_proc_cmdline_item+0x264>
  413180:	adrp	x0, 451000 <_fini+0xa30>
  413184:	add	x1, x0, #0x558
  413188:	ldr	x0, [sp, #40]
  41318c:	bl	40c458 <startswith>
  413190:	cmp	x0, #0x0
  413194:	b.eq	413214 <parse_proc_cmdline_item+0x264>  // b.none
  413198:	mov	w0, #0x4                   	// #4
  41319c:	str	w0, [sp, #56]
  4131a0:	str	wzr, [sp, #60]
  4131a4:	mov	w0, #0x1                   	// #1
  4131a8:	str	w0, [sp, #64]
  4131ac:	ldr	w0, [sp, #64]
  4131b0:	bl	40be30 <log_get_max_level_realm@plt>
  4131b4:	mov	w1, w0
  4131b8:	ldr	w0, [sp, #56]
  4131bc:	and	w0, w0, #0x7
  4131c0:	cmp	w1, w0
  4131c4:	b.lt	41320c <parse_proc_cmdline_item+0x25c>  // b.tstop
  4131c8:	ldr	w0, [sp, #64]
  4131cc:	lsl	w1, w0, #10
  4131d0:	ldr	w0, [sp, #56]
  4131d4:	orr	w7, w1, w0
  4131d8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4131dc:	add	x1, x0, #0x66b
  4131e0:	ldr	x6, [sp, #40]
  4131e4:	adrp	x0, 451000 <_fini+0xa30>
  4131e8:	add	x5, x0, #0x560
  4131ec:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4131f0:	add	x4, x0, #0x3c8
  4131f4:	mov	w3, #0x5a9                 	// #1449
  4131f8:	mov	x2, x1
  4131fc:	ldr	w1, [sp, #60]
  413200:	mov	w0, w7
  413204:	bl	40b4f0 <log_internal_realm@plt>
  413208:	b	413214 <parse_proc_cmdline_item+0x264>
  41320c:	ldr	w0, [sp, #60]
  413210:	cmp	w0, #0x0
  413214:	ldr	w0, [sp, #52]
  413218:	cmp	w0, #0x0
  41321c:	b.ge	4132a4 <parse_proc_cmdline_item+0x2f4>  // b.tcont
  413220:	mov	w0, #0x4                   	// #4
  413224:	str	w0, [sp, #68]
  413228:	ldr	w0, [sp, #52]
  41322c:	str	w0, [sp, #72]
  413230:	mov	w0, #0x1                   	// #1
  413234:	str	w0, [sp, #76]
  413238:	ldr	w0, [sp, #76]
  41323c:	bl	40be30 <log_get_max_level_realm@plt>
  413240:	mov	w1, w0
  413244:	ldr	w0, [sp, #68]
  413248:	and	w0, w0, #0x7
  41324c:	cmp	w1, w0
  413250:	b.lt	41329c <parse_proc_cmdline_item+0x2ec>  // b.tstop
  413254:	ldr	w0, [sp, #76]
  413258:	lsl	w1, w0, #10
  41325c:	ldr	w0, [sp, #68]
  413260:	orr	w8, w1, w0
  413264:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413268:	add	x1, x0, #0x66b
  41326c:	ldr	x7, [sp, #32]
  413270:	ldr	x6, [sp, #40]
  413274:	adrp	x0, 451000 <_fini+0xa30>
  413278:	add	x5, x0, #0x598
  41327c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413280:	add	x4, x0, #0x3c8
  413284:	mov	w3, #0x5ac                 	// #1452
  413288:	mov	x2, x1
  41328c:	ldr	w1, [sp, #72]
  413290:	mov	w0, w8
  413294:	bl	40b4f0 <log_internal_realm@plt>
  413298:	b	4132a4 <parse_proc_cmdline_item+0x2f4>
  41329c:	ldr	w0, [sp, #72]
  4132a0:	cmp	w0, #0x0
  4132a4:	mov	w0, #0x0                   	// #0
  4132a8:	ldp	x29, x30, [sp], #80
  4132ac:	ret

00000000004132b0 <help>:
  4132b0:	stp	x29, x30, [sp, #-64]!
  4132b4:	mov	x29, sp
  4132b8:	str	x19, [sp, #16]
  4132bc:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  4132c0:	add	x0, x0, #0x7a8
  4132c4:	ldr	x1, [x0]
  4132c8:	str	x1, [sp, #56]
  4132cc:	mov	x1, #0x0                   	// #0
  4132d0:	str	xzr, [sp, #48]
  4132d4:	add	x0, sp, #0x30
  4132d8:	mov	x2, x0
  4132dc:	adrp	x0, 451000 <_fini+0xa30>
  4132e0:	add	x1, x0, #0x5c0
  4132e4:	adrp	x0, 451000 <_fini+0xa30>
  4132e8:	add	x0, x0, #0x5c8
  4132ec:	bl	40b220 <terminal_urlify_man@plt>
  4132f0:	str	w0, [sp, #44]
  4132f4:	ldr	w0, [sp, #44]
  4132f8:	cmp	w0, #0x0
  4132fc:	b.ge	413324 <help+0x74>  // b.tcont
  413300:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413304:	add	x1, x0, #0x66b
  413308:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41330c:	add	x3, x0, #0x400
  413310:	mov	w2, #0x5b7                 	// #1463
  413314:	mov	w0, #0x1                   	// #1
  413318:	bl	40bda0 <log_oom_internal@plt>
  41331c:	mov	w19, w0
  413320:	b	41334c <help+0x9c>
  413324:	adrp	x0, 48d000 <arg_resolve_name_timing>
  413328:	add	x0, x0, #0x170
  41332c:	ldr	x0, [x0]
  413330:	ldr	x1, [sp, #48]
  413334:	mov	x2, x1
  413338:	mov	x1, x0
  41333c:	adrp	x0, 451000 <_fini+0xa30>
  413340:	add	x0, x0, #0x5e0
  413344:	bl	40bc00 <printf@plt>
  413348:	mov	w19, #0x0                   	// #0
  41334c:	add	x0, sp, #0x30
  413350:	bl	40c098 <freep>
  413354:	mov	w1, w19
  413358:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  41335c:	add	x0, x0, #0x7a8
  413360:	ldr	x2, [sp, #56]
  413364:	ldr	x0, [x0]
  413368:	eor	x0, x2, x0
  41336c:	cmp	x0, #0x0
  413370:	b.eq	413378 <help+0xc8>  // b.none
  413374:	bl	40b280 <__stack_chk_fail@plt>
  413378:	mov	w0, w1
  41337c:	ldr	x19, [sp, #16]
  413380:	ldp	x29, x30, [sp], #64
  413384:	ret

0000000000413388 <parse_argv>:
  413388:	stp	x29, x30, [sp, #-96]!
  41338c:	mov	x29, sp
  413390:	str	w0, [sp, #28]
  413394:	str	x1, [sp, #16]
  413398:	ldr	w0, [sp, #28]
  41339c:	lsr	w0, w0, #31
  4133a0:	and	w0, w0, #0xff
  4133a4:	and	x0, x0, #0xff
  4133a8:	cmp	x0, #0x0
  4133ac:	b.eq	4133d8 <parse_argv+0x50>  // b.none
  4133b0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4133b4:	add	x1, x0, #0x66b
  4133b8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4133bc:	add	x4, x0, #0x408
  4133c0:	mov	w3, #0x5db                 	// #1499
  4133c4:	mov	x2, x1
  4133c8:	adrp	x0, 451000 <_fini+0xa30>
  4133cc:	add	x1, x0, #0x830
  4133d0:	mov	w0, #0x1                   	// #1
  4133d4:	bl	40abb0 <log_assert_failed_realm@plt>
  4133d8:	ldr	x0, [sp, #16]
  4133dc:	cmp	x0, #0x0
  4133e0:	cset	w0, eq  // eq = none
  4133e4:	and	w0, w0, #0xff
  4133e8:	and	x0, x0, #0xff
  4133ec:	cmp	x0, #0x0
  4133f0:	b.eq	413848 <parse_argv+0x4c0>  // b.none
  4133f4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4133f8:	add	x1, x0, #0x66b
  4133fc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413400:	add	x4, x0, #0x408
  413404:	mov	w3, #0x5dc                 	// #1500
  413408:	mov	x2, x1
  41340c:	adrp	x0, 451000 <_fini+0xa30>
  413410:	add	x1, x0, #0x840
  413414:	mov	w0, #0x1                   	// #1
  413418:	bl	40abb0 <log_assert_failed_realm@plt>
  41341c:	ldr	w0, [sp, #36]
  413420:	cmp	w0, #0x74
  413424:	b.eq	41366c <parse_argv+0x2e4>  // b.none
  413428:	ldr	w0, [sp, #36]
  41342c:	cmp	w0, #0x74
  413430:	b.gt	413820 <parse_argv+0x498>
  413434:	ldr	w0, [sp, #36]
  413438:	cmp	w0, #0x68
  41343c:	b.eq	4137fc <parse_argv+0x474>  // b.none
  413440:	ldr	w0, [sp, #36]
  413444:	cmp	w0, #0x68
  413448:	b.gt	413820 <parse_argv+0x498>
  41344c:	ldr	w0, [sp, #36]
  413450:	cmp	w0, #0x65
  413454:	b.eq	4135b0 <parse_argv+0x228>  // b.none
  413458:	ldr	w0, [sp, #36]
  41345c:	cmp	w0, #0x65
  413460:	b.gt	413820 <parse_argv+0x498>
  413464:	ldr	w0, [sp, #36]
  413468:	cmp	w0, #0x64
  41346c:	b.eq	4134e0 <parse_argv+0x158>  // b.none
  413470:	ldr	w0, [sp, #36]
  413474:	cmp	w0, #0x64
  413478:	b.gt	413820 <parse_argv+0x498>
  41347c:	ldr	w0, [sp, #36]
  413480:	cmp	w0, #0x63
  413484:	b.eq	4134f4 <parse_argv+0x16c>  // b.none
  413488:	ldr	w0, [sp, #36]
  41348c:	cmp	w0, #0x63
  413490:	b.gt	413820 <parse_argv+0x498>
  413494:	ldr	w0, [sp, #36]
  413498:	cmp	w0, #0x56
  41349c:	b.eq	413804 <parse_argv+0x47c>  // b.none
  4134a0:	ldr	w0, [sp, #36]
  4134a4:	cmp	w0, #0x56
  4134a8:	b.gt	413820 <parse_argv+0x498>
  4134ac:	ldr	w0, [sp, #36]
  4134b0:	cmp	w0, #0x4e
  4134b4:	b.eq	41373c <parse_argv+0x3b4>  // b.none
  4134b8:	ldr	w0, [sp, #36]
  4134bc:	cmp	w0, #0x4e
  4134c0:	b.gt	413820 <parse_argv+0x498>
  4134c4:	ldr	w0, [sp, #36]
  4134c8:	cmp	w0, #0x3f
  4134cc:	b.eq	413818 <parse_argv+0x490>  // b.none
  4134d0:	ldr	w0, [sp, #36]
  4134d4:	cmp	w0, #0x44
  4134d8:	b.eq	413728 <parse_argv+0x3a0>  // b.none
  4134dc:	b	413820 <parse_argv+0x498>
  4134e0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4134e4:	add	x0, x0, #0x18c
  4134e8:	mov	w1, #0x1                   	// #1
  4134ec:	str	w1, [x0]
  4134f0:	b	413848 <parse_argv+0x4c0>
  4134f4:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4134f8:	add	x0, x0, #0x180
  4134fc:	ldr	x2, [x0]
  413500:	adrp	x0, 48d000 <arg_resolve_name_timing>
  413504:	add	x1, x0, #0x190
  413508:	mov	x0, x2
  41350c:	bl	40c588 <safe_atou>
  413510:	str	w0, [sp, #40]
  413514:	ldr	w0, [sp, #40]
  413518:	cmp	w0, #0x0
  41351c:	b.ge	413848 <parse_argv+0x4c0>  // b.tcont
  413520:	mov	w0, #0x4                   	// #4
  413524:	str	w0, [sp, #68]
  413528:	ldr	w0, [sp, #40]
  41352c:	str	w0, [sp, #72]
  413530:	mov	w0, #0x1                   	// #1
  413534:	str	w0, [sp, #76]
  413538:	ldr	w0, [sp, #76]
  41353c:	bl	40be30 <log_get_max_level_realm@plt>
  413540:	mov	w1, w0
  413544:	ldr	w0, [sp, #68]
  413548:	and	w0, w0, #0x7
  41354c:	cmp	w1, w0
  413550:	b.lt	4135a4 <parse_argv+0x21c>  // b.tstop
  413554:	ldr	w0, [sp, #76]
  413558:	lsl	w1, w0, #10
  41355c:	ldr	w0, [sp, #68]
  413560:	orr	w7, w1, w0
  413564:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413568:	add	x1, x0, #0x66b
  41356c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  413570:	add	x0, x0, #0x180
  413574:	ldr	x0, [x0]
  413578:	mov	x6, x0
  41357c:	adrp	x0, 451000 <_fini+0xa30>
  413580:	add	x5, x0, #0x848
  413584:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413588:	add	x4, x0, #0x418
  41358c:	mov	w3, #0x5e7                 	// #1511
  413590:	mov	x2, x1
  413594:	ldr	w1, [sp, #72]
  413598:	mov	w0, w7
  41359c:	bl	40b4f0 <log_internal_realm@plt>
  4135a0:	b	413848 <parse_argv+0x4c0>
  4135a4:	ldr	w0, [sp, #72]
  4135a8:	cmp	w0, #0x0
  4135ac:	b	413848 <parse_argv+0x4c0>
  4135b0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4135b4:	add	x0, x0, #0x180
  4135b8:	ldr	x2, [x0]
  4135bc:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4135c0:	add	x1, x0, #0x198
  4135c4:	mov	x0, x2
  4135c8:	bl	40b920 <parse_sec@plt>
  4135cc:	str	w0, [sp, #40]
  4135d0:	ldr	w0, [sp, #40]
  4135d4:	cmp	w0, #0x0
  4135d8:	b.ge	413848 <parse_argv+0x4c0>  // b.tcont
  4135dc:	mov	w0, #0x4                   	// #4
  4135e0:	str	w0, [sp, #56]
  4135e4:	ldr	w0, [sp, #40]
  4135e8:	str	w0, [sp, #60]
  4135ec:	mov	w0, #0x1                   	// #1
  4135f0:	str	w0, [sp, #64]
  4135f4:	ldr	w0, [sp, #64]
  4135f8:	bl	40be30 <log_get_max_level_realm@plt>
  4135fc:	mov	w1, w0
  413600:	ldr	w0, [sp, #56]
  413604:	and	w0, w0, #0x7
  413608:	cmp	w1, w0
  41360c:	b.lt	413660 <parse_argv+0x2d8>  // b.tstop
  413610:	ldr	w0, [sp, #64]
  413614:	lsl	w1, w0, #10
  413618:	ldr	w0, [sp, #56]
  41361c:	orr	w7, w1, w0
  413620:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413624:	add	x1, x0, #0x66b
  413628:	adrp	x0, 48d000 <arg_resolve_name_timing>
  41362c:	add	x0, x0, #0x180
  413630:	ldr	x0, [x0]
  413634:	mov	x6, x0
  413638:	adrp	x0, 451000 <_fini+0xa30>
  41363c:	add	x5, x0, #0x888
  413640:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413644:	add	x4, x0, #0x418
  413648:	mov	w3, #0x5ec                 	// #1516
  41364c:	mov	x2, x1
  413650:	ldr	w1, [sp, #60]
  413654:	mov	w0, w7
  413658:	bl	40b4f0 <log_internal_realm@plt>
  41365c:	b	413848 <parse_argv+0x4c0>
  413660:	ldr	w0, [sp, #60]
  413664:	cmp	w0, #0x0
  413668:	b	413848 <parse_argv+0x4c0>
  41366c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  413670:	add	x0, x0, #0x180
  413674:	ldr	x2, [x0]
  413678:	adrp	x0, 48d000 <arg_resolve_name_timing>
  41367c:	add	x1, x0, #0x8
  413680:	mov	x0, x2
  413684:	bl	40b920 <parse_sec@plt>
  413688:	str	w0, [sp, #40]
  41368c:	ldr	w0, [sp, #40]
  413690:	cmp	w0, #0x0
  413694:	b.ge	413848 <parse_argv+0x4c0>  // b.tcont
  413698:	mov	w0, #0x4                   	// #4
  41369c:	str	w0, [sp, #44]
  4136a0:	ldr	w0, [sp, #40]
  4136a4:	str	w0, [sp, #48]
  4136a8:	mov	w0, #0x1                   	// #1
  4136ac:	str	w0, [sp, #52]
  4136b0:	ldr	w0, [sp, #52]
  4136b4:	bl	40be30 <log_get_max_level_realm@plt>
  4136b8:	mov	w1, w0
  4136bc:	ldr	w0, [sp, #44]
  4136c0:	and	w0, w0, #0x7
  4136c4:	cmp	w1, w0
  4136c8:	b.lt	41371c <parse_argv+0x394>  // b.tstop
  4136cc:	ldr	w0, [sp, #52]
  4136d0:	lsl	w1, w0, #10
  4136d4:	ldr	w0, [sp, #44]
  4136d8:	orr	w7, w1, w0
  4136dc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4136e0:	add	x1, x0, #0x66b
  4136e4:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4136e8:	add	x0, x0, #0x180
  4136ec:	ldr	x0, [x0]
  4136f0:	mov	x6, x0
  4136f4:	adrp	x0, 451000 <_fini+0xa30>
  4136f8:	add	x5, x0, #0x8c0
  4136fc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413700:	add	x4, x0, #0x418
  413704:	mov	w3, #0x5f1                 	// #1521
  413708:	mov	x2, x1
  41370c:	ldr	w1, [sp, #48]
  413710:	mov	w0, w7
  413714:	bl	40b4f0 <log_internal_realm@plt>
  413718:	b	413848 <parse_argv+0x4c0>
  41371c:	ldr	w0, [sp, #48]
  413720:	cmp	w0, #0x0
  413724:	b	413848 <parse_argv+0x4c0>
  413728:	adrp	x0, 48d000 <arg_resolve_name_timing>
  41372c:	add	x0, x0, #0x189
  413730:	mov	w1, #0x1                   	// #1
  413734:	strb	w1, [x0]
  413738:	b	413848 <parse_argv+0x4c0>
  41373c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  413740:	add	x0, x0, #0x180
  413744:	ldr	x0, [x0]
  413748:	bl	40ad60 <resolve_name_timing_from_string@plt>
  41374c:	str	w0, [sp, #80]
  413750:	ldr	w0, [sp, #80]
  413754:	cmp	w0, #0x0
  413758:	b.ge	4137e8 <parse_argv+0x460>  // b.tcont
  41375c:	mov	w0, #0x4                   	// #4
  413760:	str	w0, [sp, #84]
  413764:	str	wzr, [sp, #88]
  413768:	mov	w0, #0x1                   	// #1
  41376c:	str	w0, [sp, #92]
  413770:	ldr	w0, [sp, #92]
  413774:	bl	40be30 <log_get_max_level_realm@plt>
  413778:	mov	w1, w0
  41377c:	ldr	w0, [sp, #84]
  413780:	and	w0, w0, #0x7
  413784:	cmp	w1, w0
  413788:	b.lt	4137dc <parse_argv+0x454>  // b.tstop
  41378c:	ldr	w0, [sp, #92]
  413790:	lsl	w1, w0, #10
  413794:	ldr	w0, [sp, #84]
  413798:	orr	w7, w1, w0
  41379c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4137a0:	add	x1, x0, #0x66b
  4137a4:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4137a8:	add	x0, x0, #0x180
  4137ac:	ldr	x0, [x0]
  4137b0:	mov	x6, x0
  4137b4:	adrp	x0, 451000 <_fini+0xa30>
  4137b8:	add	x5, x0, #0x900
  4137bc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4137c0:	add	x4, x0, #0x418
  4137c4:	mov	w3, #0x5fb                 	// #1531
  4137c8:	mov	x2, x1
  4137cc:	ldr	w1, [sp, #88]
  4137d0:	mov	w0, w7
  4137d4:	bl	40b4f0 <log_internal_realm@plt>
  4137d8:	b	413848 <parse_argv+0x4c0>
  4137dc:	ldr	w0, [sp, #88]
  4137e0:	cmp	w0, #0x0
  4137e4:	b	413848 <parse_argv+0x4c0>
  4137e8:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4137ec:	add	x0, x0, #0x0
  4137f0:	ldr	w1, [sp, #80]
  4137f4:	str	w1, [x0]
  4137f8:	b	413848 <parse_argv+0x4c0>
  4137fc:	bl	4132b0 <help>
  413800:	b	41387c <parse_argv+0x4f4>
  413804:	adrp	x0, 451000 <_fini+0xa30>
  413808:	add	x0, x0, #0x930
  41380c:	bl	40ba30 <puts@plt>
  413810:	mov	w0, #0x0                   	// #0
  413814:	b	41387c <parse_argv+0x4f4>
  413818:	mov	w0, #0xffffffea            	// #-22
  41381c:	b	41387c <parse_argv+0x4f4>
  413820:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413824:	add	x1, x0, #0x66b
  413828:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41382c:	add	x4, x0, #0x408
  413830:	mov	w3, #0x608                 	// #1544
  413834:	mov	x2, x1
  413838:	adrp	x0, 451000 <_fini+0xa30>
  41383c:	add	x1, x0, #0x938
  413840:	mov	w0, #0x1                   	// #1
  413844:	bl	40aca0 <log_assert_failed_unreachable_realm@plt>
  413848:	mov	x4, #0x0                   	// #0
  41384c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413850:	add	x3, x0, #0x428
  413854:	adrp	x0, 451000 <_fini+0xa30>
  413858:	add	x2, x0, #0x950
  41385c:	ldr	x1, [sp, #16]
  413860:	ldr	w0, [sp, #28]
  413864:	bl	40abf0 <getopt_long@plt>
  413868:	str	w0, [sp, #36]
  41386c:	ldr	w0, [sp, #36]
  413870:	cmp	w0, #0x0
  413874:	b.ge	41341c <parse_argv+0x94>  // b.tcont
  413878:	mov	w0, #0x1                   	// #1
  41387c:	ldp	x29, x30, [sp], #96
  413880:	ret

0000000000413884 <manager_new>:
  413884:	stp	x29, x30, [sp, #-272]!
  413888:	mov	x29, sp
  41388c:	str	x19, [sp, #16]
  413890:	str	x0, [sp, #56]
  413894:	str	w1, [sp, #52]
  413898:	str	w2, [sp, #48]
  41389c:	str	x3, [sp, #40]
  4138a0:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  4138a4:	add	x0, x0, #0x7a8
  4138a8:	ldr	x1, [x0]
  4138ac:	str	x1, [sp, #264]
  4138b0:	mov	x1, #0x0                   	// #0
  4138b4:	str	xzr, [sp, #120]
  4138b8:	ldr	x0, [sp, #56]
  4138bc:	cmp	x0, #0x0
  4138c0:	cset	w0, eq  // eq = none
  4138c4:	and	w0, w0, #0xff
  4138c8:	and	x0, x0, #0xff
  4138cc:	cmp	x0, #0x0
  4138d0:	b.eq	4138fc <manager_new+0x78>  // b.none
  4138d4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4138d8:	add	x1, x0, #0x66b
  4138dc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4138e0:	add	x4, x0, #0x548
  4138e4:	mov	w3, #0x614                 	// #1556
  4138e8:	mov	x2, x1
  4138ec:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4138f0:	add	x1, x0, #0x6f0
  4138f4:	mov	w0, #0x1                   	// #1
  4138f8:	bl	40abb0 <log_assert_failed_realm@plt>
  4138fc:	mov	x1, #0x1                   	// #1
  413900:	mov	x0, #0x80                  	// #128
  413904:	bl	40c138 <malloc_multiply>
  413908:	str	x0, [sp, #120]
  41390c:	ldr	x0, [sp, #120]
  413910:	cmp	x0, #0x0
  413914:	b.ne	41393c <manager_new+0xb8>  // b.any
  413918:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41391c:	add	x1, x0, #0x66b
  413920:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413924:	add	x3, x0, #0x558
  413928:	mov	w2, #0x618                 	// #1560
  41392c:	mov	w0, #0x1                   	// #1
  413930:	bl	40bda0 <log_oom_internal@plt>
  413934:	mov	w19, w0
  413938:	b	413c68 <manager_new+0x3e4>
  41393c:	ldr	x0, [sp, #120]
  413940:	stp	xzr, xzr, [x0]
  413944:	stp	xzr, xzr, [x0, #16]
  413948:	stp	xzr, xzr, [x0, #32]
  41394c:	stp	xzr, xzr, [x0, #48]
  413950:	stp	xzr, xzr, [x0, #64]
  413954:	stp	xzr, xzr, [x0, #80]
  413958:	stp	xzr, xzr, [x0, #96]
  41395c:	stp	xzr, xzr, [x0, #112]
  413960:	ldr	x1, [sp, #40]
  413964:	str	x1, [x0, #24]
  413968:	mov	w1, #0xffffffff            	// #-1
  41396c:	str	w1, [x0, #80]
  413970:	mov	w1, #0xffffffff            	// #-1
  413974:	str	w1, [x0, #84]
  413978:	mov	w1, #0xffffffff            	// #-1
  41397c:	str	w1, [x0, #88]
  413980:	ldr	x0, [sp, #120]
  413984:	add	x0, x0, #0x48
  413988:	ldr	w1, [sp, #52]
  41398c:	bl	415968 <udev_ctrl_new_from_fd>
  413990:	str	w0, [sp, #68]
  413994:	ldr	w0, [sp, #68]
  413998:	cmp	w0, #0x0
  41399c:	b.ge	413a30 <manager_new+0x1ac>  // b.tcont
  4139a0:	mov	w0, #0x3                   	// #3
  4139a4:	str	w0, [sp, #108]
  4139a8:	ldr	w0, [sp, #68]
  4139ac:	str	w0, [sp, #112]
  4139b0:	mov	w0, #0x1                   	// #1
  4139b4:	str	w0, [sp, #116]
  4139b8:	ldr	w0, [sp, #116]
  4139bc:	bl	40be30 <log_get_max_level_realm@plt>
  4139c0:	mov	w1, w0
  4139c4:	ldr	w0, [sp, #108]
  4139c8:	and	w0, w0, #0x7
  4139cc:	cmp	w1, w0
  4139d0:	b.lt	413a18 <manager_new+0x194>  // b.tstop
  4139d4:	ldr	w0, [sp, #116]
  4139d8:	lsl	w1, w0, #10
  4139dc:	ldr	w0, [sp, #108]
  4139e0:	orr	w6, w1, w0
  4139e4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4139e8:	add	x1, x0, #0x66b
  4139ec:	adrp	x0, 451000 <_fini+0xa30>
  4139f0:	add	x5, x0, #0x960
  4139f4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4139f8:	add	x4, x0, #0x558
  4139fc:	mov	w3, #0x622                 	// #1570
  413a00:	mov	x2, x1
  413a04:	ldr	w1, [sp, #112]
  413a08:	mov	w0, w6
  413a0c:	bl	40b4f0 <log_internal_realm@plt>
  413a10:	mov	w19, w0
  413a14:	b	413c68 <manager_new+0x3e4>
  413a18:	ldr	w0, [sp, #112]
  413a1c:	cmp	w0, #0x0
  413a20:	cneg	w0, w0, lt  // lt = tstop
  413a24:	and	w0, w0, #0xff
  413a28:	neg	w19, w0
  413a2c:	b	413c68 <manager_new+0x3e4>
  413a30:	ldr	x0, [sp, #120]
  413a34:	ldr	x0, [x0, #72]
  413a38:	bl	415d50 <udev_ctrl_enable_receiving>
  413a3c:	str	w0, [sp, #68]
  413a40:	ldr	w0, [sp, #68]
  413a44:	cmp	w0, #0x0
  413a48:	b.ge	413adc <manager_new+0x258>  // b.tcont
  413a4c:	mov	w0, #0x3                   	// #3
  413a50:	str	w0, [sp, #96]
  413a54:	ldr	w0, [sp, #68]
  413a58:	str	w0, [sp, #100]
  413a5c:	mov	w0, #0x1                   	// #1
  413a60:	str	w0, [sp, #104]
  413a64:	ldr	w0, [sp, #104]
  413a68:	bl	40be30 <log_get_max_level_realm@plt>
  413a6c:	mov	w1, w0
  413a70:	ldr	w0, [sp, #96]
  413a74:	and	w0, w0, #0x7
  413a78:	cmp	w1, w0
  413a7c:	b.lt	413ac4 <manager_new+0x240>  // b.tstop
  413a80:	ldr	w0, [sp, #104]
  413a84:	lsl	w1, w0, #10
  413a88:	ldr	w0, [sp, #96]
  413a8c:	orr	w6, w1, w0
  413a90:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413a94:	add	x1, x0, #0x66b
  413a98:	adrp	x0, 451000 <_fini+0xa30>
  413a9c:	add	x5, x0, #0x990
  413aa0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413aa4:	add	x4, x0, #0x558
  413aa8:	mov	w3, #0x626                 	// #1574
  413aac:	mov	x2, x1
  413ab0:	ldr	w1, [sp, #100]
  413ab4:	mov	w0, w6
  413ab8:	bl	40b4f0 <log_internal_realm@plt>
  413abc:	mov	w19, w0
  413ac0:	b	413c68 <manager_new+0x3e4>
  413ac4:	ldr	w0, [sp, #100]
  413ac8:	cmp	w0, #0x0
  413acc:	cneg	w0, w0, lt  // lt = tstop
  413ad0:	and	w0, w0, #0xff
  413ad4:	neg	w19, w0
  413ad8:	b	413c68 <manager_new+0x3e4>
  413adc:	ldr	x0, [sp, #120]
  413ae0:	add	x0, x0, #0x40
  413ae4:	ldr	w2, [sp, #48]
  413ae8:	mov	w1, #0x1                   	// #1
  413aec:	bl	40b800 <device_monitor_new_full@plt>
  413af0:	str	w0, [sp, #68]
  413af4:	ldr	w0, [sp, #68]
  413af8:	cmp	w0, #0x0
  413afc:	b.ge	413b90 <manager_new+0x30c>  // b.tcont
  413b00:	mov	w0, #0x3                   	// #3
  413b04:	str	w0, [sp, #84]
  413b08:	ldr	w0, [sp, #68]
  413b0c:	str	w0, [sp, #88]
  413b10:	mov	w0, #0x1                   	// #1
  413b14:	str	w0, [sp, #92]
  413b18:	ldr	w0, [sp, #92]
  413b1c:	bl	40be30 <log_get_max_level_realm@plt>
  413b20:	mov	w1, w0
  413b24:	ldr	w0, [sp, #84]
  413b28:	and	w0, w0, #0x7
  413b2c:	cmp	w1, w0
  413b30:	b.lt	413b78 <manager_new+0x2f4>  // b.tstop
  413b34:	ldr	w0, [sp, #92]
  413b38:	lsl	w1, w0, #10
  413b3c:	ldr	w0, [sp, #84]
  413b40:	orr	w6, w1, w0
  413b44:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413b48:	add	x1, x0, #0x66b
  413b4c:	adrp	x0, 451000 <_fini+0xa30>
  413b50:	add	x5, x0, #0x9b8
  413b54:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413b58:	add	x4, x0, #0x558
  413b5c:	mov	w3, #0x62a                 	// #1578
  413b60:	mov	x2, x1
  413b64:	ldr	w1, [sp, #88]
  413b68:	mov	w0, w6
  413b6c:	bl	40b4f0 <log_internal_realm@plt>
  413b70:	mov	w19, w0
  413b74:	b	413c68 <manager_new+0x3e4>
  413b78:	ldr	w0, [sp, #88]
  413b7c:	cmp	w0, #0x0
  413b80:	cneg	w0, w0, lt  // lt = tstop
  413b84:	and	w0, w0, #0xff
  413b88:	neg	w19, w0
  413b8c:	b	413c68 <manager_new+0x3e4>
  413b90:	ldr	x0, [sp, #120]
  413b94:	ldr	x0, [x0, #64]
  413b98:	mov	x1, #0x8000000             	// #134217728
  413b9c:	bl	40af60 <sd_device_monitor_set_receive_buffer_size@plt>
  413ba0:	ldr	x0, [sp, #120]
  413ba4:	ldr	x0, [x0, #64]
  413ba8:	bl	40a740 <device_monitor_enable_receiving@plt>
  413bac:	str	w0, [sp, #68]
  413bb0:	ldr	w0, [sp, #68]
  413bb4:	cmp	w0, #0x0
  413bb8:	b.ge	413c4c <manager_new+0x3c8>  // b.tcont
  413bbc:	mov	w0, #0x3                   	// #3
  413bc0:	str	w0, [sp, #72]
  413bc4:	ldr	w0, [sp, #68]
  413bc8:	str	w0, [sp, #76]
  413bcc:	mov	w0, #0x1                   	// #1
  413bd0:	str	w0, [sp, #80]
  413bd4:	ldr	w0, [sp, #80]
  413bd8:	bl	40be30 <log_get_max_level_realm@plt>
  413bdc:	mov	w1, w0
  413be0:	ldr	w0, [sp, #72]
  413be4:	and	w0, w0, #0x7
  413be8:	cmp	w1, w0
  413bec:	b.lt	413c34 <manager_new+0x3b0>  // b.tstop
  413bf0:	ldr	w0, [sp, #80]
  413bf4:	lsl	w1, w0, #10
  413bf8:	ldr	w0, [sp, #72]
  413bfc:	orr	w6, w1, w0
  413c00:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413c04:	add	x1, x0, #0x66b
  413c08:	adrp	x0, 451000 <_fini+0xa30>
  413c0c:	add	x5, x0, #0x9e0
  413c10:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413c14:	add	x4, x0, #0x558
  413c18:	mov	w3, #0x630                 	// #1584
  413c1c:	mov	x2, x1
  413c20:	ldr	w1, [sp, #76]
  413c24:	mov	w0, w6
  413c28:	bl	40b4f0 <log_internal_realm@plt>
  413c2c:	mov	w19, w0
  413c30:	b	413c68 <manager_new+0x3e4>
  413c34:	ldr	w0, [sp, #76]
  413c38:	cmp	w0, #0x0
  413c3c:	cneg	w0, w0, lt  // lt = tstop
  413c40:	and	w0, w0, #0xff
  413c44:	neg	w19, w0
  413c48:	b	413c68 <manager_new+0x3e4>
  413c4c:	ldr	x0, [sp, #120]
  413c50:	str	x0, [sp, #128]
  413c54:	str	xzr, [sp, #120]
  413c58:	ldr	x1, [sp, #128]
  413c5c:	ldr	x0, [sp, #56]
  413c60:	str	x1, [x0]
  413c64:	mov	w19, #0x0                   	// #0
  413c68:	add	x0, sp, #0x78
  413c6c:	bl	40d5a4 <manager_freep>
  413c70:	mov	w1, w19
  413c74:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  413c78:	add	x0, x0, #0x7a8
  413c7c:	ldr	x2, [sp, #264]
  413c80:	ldr	x0, [x0]
  413c84:	eor	x0, x2, x0
  413c88:	cmp	x0, #0x0
  413c8c:	b.eq	413c94 <manager_new+0x410>  // b.none
  413c90:	bl	40b280 <__stack_chk_fail@plt>
  413c94:	mov	w0, w1
  413c98:	ldr	x19, [sp, #16]
  413c9c:	ldp	x29, x30, [sp], #272
  413ca0:	ret

0000000000413ca4 <main_loop>:
  413ca4:	stp	x29, x30, [sp, #-288]!
  413ca8:	mov	x29, sp
  413cac:	str	x0, [sp, #24]
  413cb0:	bl	40a8e0 <getpid_cached@plt>
  413cb4:	mov	w1, w0
  413cb8:	ldr	x0, [sp, #24]
  413cbc:	str	w1, [x0, #32]
  413cc0:	ldr	x0, [sp, #24]
  413cc4:	add	x0, x0, #0x54
  413cc8:	mov	x3, x0
  413ccc:	mov	w2, #0x0                   	// #0
  413cd0:	mov	w1, #0x2                   	// #2
  413cd4:	movk	w1, #0x8, lsl #16
  413cd8:	mov	w0, #0x1                   	// #1
  413cdc:	bl	40b300 <socketpair@plt>
  413ce0:	str	w0, [sp, #40]
  413ce4:	ldr	w0, [sp, #40]
  413ce8:	cmp	w0, #0x0
  413cec:	b.ge	413d80 <main_loop+0xdc>  // b.tcont
  413cf0:	mov	w0, #0x3                   	// #3
  413cf4:	str	w0, [sp, #276]
  413cf8:	bl	40b040 <__errno_location@plt>
  413cfc:	ldr	w0, [x0]
  413d00:	str	w0, [sp, #280]
  413d04:	mov	w0, #0x1                   	// #1
  413d08:	str	w0, [sp, #284]
  413d0c:	ldr	w0, [sp, #284]
  413d10:	bl	40be30 <log_get_max_level_realm@plt>
  413d14:	mov	w1, w0
  413d18:	ldr	w0, [sp, #276]
  413d1c:	and	w0, w0, #0x7
  413d20:	cmp	w1, w0
  413d24:	b.lt	413d68 <main_loop+0xc4>  // b.tstop
  413d28:	ldr	w0, [sp, #284]
  413d2c:	lsl	w1, w0, #10
  413d30:	ldr	w0, [sp, #276]
  413d34:	orr	w6, w1, w0
  413d38:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413d3c:	add	x1, x0, #0x66b
  413d40:	adrp	x0, 451000 <_fini+0xa30>
  413d44:	add	x5, x0, #0xa08
  413d48:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413d4c:	add	x4, x0, #0x568
  413d50:	mov	w3, #0x63f                 	// #1599
  413d54:	mov	x2, x1
  413d58:	ldr	w1, [sp, #280]
  413d5c:	mov	w0, w6
  413d60:	bl	40b4f0 <log_internal_realm@plt>
  413d64:	b	414bbc <main_loop+0xf18>
  413d68:	ldr	w0, [sp, #280]
  413d6c:	cmp	w0, #0x0
  413d70:	cneg	w0, w0, lt  // lt = tstop
  413d74:	and	w0, w0, #0xff
  413d78:	neg	w0, w0
  413d7c:	b	414bbc <main_loop+0xf18>
  413d80:	ldr	x0, [sp, #24]
  413d84:	ldr	w0, [x0, #84]
  413d88:	str	w0, [sp, #44]
  413d8c:	mov	w3, #0x1                   	// #1
  413d90:	mov	w2, #0x10                  	// #16
  413d94:	mov	w1, #0x1                   	// #1
  413d98:	ldr	w0, [sp, #44]
  413d9c:	bl	40c530 <setsockopt_int>
  413da0:	str	w0, [sp, #40]
  413da4:	ldr	w0, [sp, #40]
  413da8:	cmp	w0, #0x0
  413dac:	b.ge	413e3c <main_loop+0x198>  // b.tcont
  413db0:	mov	w0, #0x3                   	// #3
  413db4:	str	w0, [sp, #264]
  413db8:	ldr	w0, [sp, #40]
  413dbc:	str	w0, [sp, #268]
  413dc0:	mov	w0, #0x1                   	// #1
  413dc4:	str	w0, [sp, #272]
  413dc8:	ldr	w0, [sp, #272]
  413dcc:	bl	40be30 <log_get_max_level_realm@plt>
  413dd0:	mov	w1, w0
  413dd4:	ldr	w0, [sp, #264]
  413dd8:	and	w0, w0, #0x7
  413ddc:	cmp	w1, w0
  413de0:	b.lt	413e24 <main_loop+0x180>  // b.tstop
  413de4:	ldr	w0, [sp, #272]
  413de8:	lsl	w1, w0, #10
  413dec:	ldr	w0, [sp, #264]
  413df0:	orr	w6, w1, w0
  413df4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413df8:	add	x1, x0, #0x66b
  413dfc:	adrp	x0, 451000 <_fini+0xa30>
  413e00:	add	x5, x0, #0xa48
  413e04:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413e08:	add	x4, x0, #0x568
  413e0c:	mov	w3, #0x645                 	// #1605
  413e10:	mov	x2, x1
  413e14:	ldr	w1, [sp, #268]
  413e18:	mov	w0, w6
  413e1c:	bl	40b4f0 <log_internal_realm@plt>
  413e20:	b	414bbc <main_loop+0xf18>
  413e24:	ldr	w0, [sp, #268]
  413e28:	cmp	w0, #0x0
  413e2c:	cneg	w0, w0, lt  // lt = tstop
  413e30:	and	w0, w0, #0xff
  413e34:	neg	w0, w0
  413e38:	b	414bbc <main_loop+0xf18>
  413e3c:	bl	434b04 <udev_watch_init>
  413e40:	str	w0, [sp, #40]
  413e44:	ldr	w0, [sp, #40]
  413e48:	cmp	w0, #0x0
  413e4c:	b.ge	413edc <main_loop+0x238>  // b.tcont
  413e50:	mov	w0, #0x3                   	// #3
  413e54:	str	w0, [sp, #252]
  413e58:	ldr	w0, [sp, #40]
  413e5c:	str	w0, [sp, #256]
  413e60:	mov	w0, #0x1                   	// #1
  413e64:	str	w0, [sp, #260]
  413e68:	ldr	w0, [sp, #260]
  413e6c:	bl	40be30 <log_get_max_level_realm@plt>
  413e70:	mov	w1, w0
  413e74:	ldr	w0, [sp, #252]
  413e78:	and	w0, w0, #0x7
  413e7c:	cmp	w1, w0
  413e80:	b.lt	413ec4 <main_loop+0x220>  // b.tstop
  413e84:	ldr	w0, [sp, #260]
  413e88:	lsl	w1, w0, #10
  413e8c:	ldr	w0, [sp, #252]
  413e90:	orr	w6, w1, w0
  413e94:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413e98:	add	x1, x0, #0x66b
  413e9c:	adrp	x0, 451000 <_fini+0xa30>
  413ea0:	add	x5, x0, #0xa70
  413ea4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413ea8:	add	x4, x0, #0x568
  413eac:	mov	w3, #0x649                 	// #1609
  413eb0:	mov	x2, x1
  413eb4:	ldr	w1, [sp, #256]
  413eb8:	mov	w0, w6
  413ebc:	bl	40b4f0 <log_internal_realm@plt>
  413ec0:	b	414bbc <main_loop+0xf18>
  413ec4:	ldr	w0, [sp, #256]
  413ec8:	cmp	w0, #0x0
  413ecc:	cneg	w0, w0, lt  // lt = tstop
  413ed0:	and	w0, w0, #0xff
  413ed4:	neg	w0, w0
  413ed8:	b	414bbc <main_loop+0xf18>
  413edc:	ldr	x0, [sp, #24]
  413ee0:	ldr	w1, [sp, #40]
  413ee4:	str	w1, [x0, #80]
  413ee8:	bl	434b5c <udev_watch_restore>
  413eec:	mov	w6, #0xffffffff            	// #-1
  413ef0:	mov	w5, #0x11                  	// #17
  413ef4:	mov	w4, #0x1                   	// #1
  413ef8:	mov	w3, #0x2                   	// #2
  413efc:	mov	w2, #0xf                   	// #15
  413f00:	mov	x1, #0x0                   	// #0
  413f04:	mov	w0, #0x0                   	// #0
  413f08:	bl	40ae30 <sigprocmask_many@plt>
  413f0c:	lsr	w0, w0, #31
  413f10:	and	w0, w0, #0xff
  413f14:	and	x0, x0, #0xff
  413f18:	cmp	x0, #0x0
  413f1c:	b.eq	413f48 <main_loop+0x2a4>  // b.none
  413f20:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413f24:	add	x1, x0, #0x66b
  413f28:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413f2c:	add	x4, x0, #0x578
  413f30:	mov	w3, #0x64f                 	// #1615
  413f34:	mov	x2, x1
  413f38:	adrp	x0, 451000 <_fini+0xa30>
  413f3c:	add	x1, x0, #0xa98
  413f40:	mov	w0, #0x1                   	// #1
  413f44:	bl	40abb0 <log_assert_failed_realm@plt>
  413f48:	ldr	x0, [sp, #24]
  413f4c:	bl	40a7e0 <sd_event_default@plt>
  413f50:	str	w0, [sp, #40]
  413f54:	ldr	w0, [sp, #40]
  413f58:	cmp	w0, #0x0
  413f5c:	b.ge	413fec <main_loop+0x348>  // b.tcont
  413f60:	mov	w0, #0x3                   	// #3
  413f64:	str	w0, [sp, #240]
  413f68:	ldr	w0, [sp, #40]
  413f6c:	str	w0, [sp, #244]
  413f70:	mov	w0, #0x1                   	// #1
  413f74:	str	w0, [sp, #248]
  413f78:	ldr	w0, [sp, #248]
  413f7c:	bl	40be30 <log_get_max_level_realm@plt>
  413f80:	mov	w1, w0
  413f84:	ldr	w0, [sp, #240]
  413f88:	and	w0, w0, #0x7
  413f8c:	cmp	w1, w0
  413f90:	b.lt	413fd4 <main_loop+0x330>  // b.tstop
  413f94:	ldr	w0, [sp, #248]
  413f98:	lsl	w1, w0, #10
  413f9c:	ldr	w0, [sp, #240]
  413fa0:	orr	w6, w1, w0
  413fa4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413fa8:	add	x1, x0, #0x66b
  413fac:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  413fb0:	add	x5, x0, #0xaf8
  413fb4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  413fb8:	add	x4, x0, #0x568
  413fbc:	mov	w3, #0x653                 	// #1619
  413fc0:	mov	x2, x1
  413fc4:	ldr	w1, [sp, #244]
  413fc8:	mov	w0, w6
  413fcc:	bl	40b4f0 <log_internal_realm@plt>
  413fd0:	b	414bbc <main_loop+0xf18>
  413fd4:	ldr	w0, [sp, #244]
  413fd8:	cmp	w0, #0x0
  413fdc:	cneg	w0, w0, lt  // lt = tstop
  413fe0:	and	w0, w0, #0xff
  413fe4:	neg	w0, w0
  413fe8:	b	414bbc <main_loop+0xf18>
  413fec:	ldr	x0, [sp, #24]
  413ff0:	ldr	x5, [x0]
  413ff4:	ldr	x4, [sp, #24]
  413ff8:	adrp	x0, 412000 <on_inotify+0x58>
  413ffc:	add	x3, x0, #0x388
  414000:	mov	w2, #0x2                   	// #2
  414004:	mov	x1, #0x0                   	// #0
  414008:	mov	x0, x5
  41400c:	bl	40bc90 <sd_event_add_signal@plt>
  414010:	str	w0, [sp, #40]
  414014:	ldr	w0, [sp, #40]
  414018:	cmp	w0, #0x0
  41401c:	b.ge	4140ac <main_loop+0x408>  // b.tcont
  414020:	mov	w0, #0x3                   	// #3
  414024:	str	w0, [sp, #228]
  414028:	ldr	w0, [sp, #40]
  41402c:	str	w0, [sp, #232]
  414030:	mov	w0, #0x1                   	// #1
  414034:	str	w0, [sp, #236]
  414038:	ldr	w0, [sp, #236]
  41403c:	bl	40be30 <log_get_max_level_realm@plt>
  414040:	mov	w1, w0
  414044:	ldr	w0, [sp, #228]
  414048:	and	w0, w0, #0x7
  41404c:	cmp	w1, w0
  414050:	b.lt	414094 <main_loop+0x3f0>  // b.tstop
  414054:	ldr	w0, [sp, #236]
  414058:	lsl	w1, w0, #10
  41405c:	ldr	w0, [sp, #228]
  414060:	orr	w6, w1, w0
  414064:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414068:	add	x1, x0, #0x66b
  41406c:	adrp	x0, 451000 <_fini+0xa30>
  414070:	add	x5, x0, #0xae8
  414074:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414078:	add	x4, x0, #0x568
  41407c:	mov	w3, #0x657                 	// #1623
  414080:	mov	x2, x1
  414084:	ldr	w1, [sp, #232]
  414088:	mov	w0, w6
  41408c:	bl	40b4f0 <log_internal_realm@plt>
  414090:	b	414bbc <main_loop+0xf18>
  414094:	ldr	w0, [sp, #232]
  414098:	cmp	w0, #0x0
  41409c:	cneg	w0, w0, lt  // lt = tstop
  4140a0:	and	w0, w0, #0xff
  4140a4:	neg	w0, w0
  4140a8:	b	414bbc <main_loop+0xf18>
  4140ac:	ldr	x0, [sp, #24]
  4140b0:	ldr	x5, [x0]
  4140b4:	ldr	x4, [sp, #24]
  4140b8:	adrp	x0, 412000 <on_inotify+0x58>
  4140bc:	add	x3, x0, #0x388
  4140c0:	mov	w2, #0xf                   	// #15
  4140c4:	mov	x1, #0x0                   	// #0
  4140c8:	mov	x0, x5
  4140cc:	bl	40bc90 <sd_event_add_signal@plt>
  4140d0:	str	w0, [sp, #40]
  4140d4:	ldr	w0, [sp, #40]
  4140d8:	cmp	w0, #0x0
  4140dc:	b.ge	41416c <main_loop+0x4c8>  // b.tcont
  4140e0:	mov	w0, #0x3                   	// #3
  4140e4:	str	w0, [sp, #216]
  4140e8:	ldr	w0, [sp, #40]
  4140ec:	str	w0, [sp, #220]
  4140f0:	mov	w0, #0x1                   	// #1
  4140f4:	str	w0, [sp, #224]
  4140f8:	ldr	w0, [sp, #224]
  4140fc:	bl	40be30 <log_get_max_level_realm@plt>
  414100:	mov	w1, w0
  414104:	ldr	w0, [sp, #216]
  414108:	and	w0, w0, #0x7
  41410c:	cmp	w1, w0
  414110:	b.lt	414154 <main_loop+0x4b0>  // b.tstop
  414114:	ldr	w0, [sp, #224]
  414118:	lsl	w1, w0, #10
  41411c:	ldr	w0, [sp, #216]
  414120:	orr	w6, w1, w0
  414124:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414128:	add	x1, x0, #0x66b
  41412c:	adrp	x0, 451000 <_fini+0xa30>
  414130:	add	x5, x0, #0xb18
  414134:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414138:	add	x4, x0, #0x568
  41413c:	mov	w3, #0x65b                 	// #1627
  414140:	mov	x2, x1
  414144:	ldr	w1, [sp, #220]
  414148:	mov	w0, w6
  41414c:	bl	40b4f0 <log_internal_realm@plt>
  414150:	b	414bbc <main_loop+0xf18>
  414154:	ldr	w0, [sp, #220]
  414158:	cmp	w0, #0x0
  41415c:	cneg	w0, w0, lt  // lt = tstop
  414160:	and	w0, w0, #0xff
  414164:	neg	w0, w0
  414168:	b	414bbc <main_loop+0xf18>
  41416c:	ldr	x0, [sp, #24]
  414170:	ldr	x5, [x0]
  414174:	ldr	x4, [sp, #24]
  414178:	adrp	x0, 412000 <on_inotify+0x58>
  41417c:	add	x3, x0, #0x3fc
  414180:	mov	w2, #0x1                   	// #1
  414184:	mov	x1, #0x0                   	// #0
  414188:	mov	x0, x5
  41418c:	bl	40bc90 <sd_event_add_signal@plt>
  414190:	str	w0, [sp, #40]
  414194:	ldr	w0, [sp, #40]
  414198:	cmp	w0, #0x0
  41419c:	b.ge	41422c <main_loop+0x588>  // b.tcont
  4141a0:	mov	w0, #0x3                   	// #3
  4141a4:	str	w0, [sp, #204]
  4141a8:	ldr	w0, [sp, #40]
  4141ac:	str	w0, [sp, #208]
  4141b0:	mov	w0, #0x1                   	// #1
  4141b4:	str	w0, [sp, #212]
  4141b8:	ldr	w0, [sp, #212]
  4141bc:	bl	40be30 <log_get_max_level_realm@plt>
  4141c0:	mov	w1, w0
  4141c4:	ldr	w0, [sp, #204]
  4141c8:	and	w0, w0, #0x7
  4141cc:	cmp	w1, w0
  4141d0:	b.lt	414214 <main_loop+0x570>  // b.tstop
  4141d4:	ldr	w0, [sp, #212]
  4141d8:	lsl	w1, w0, #10
  4141dc:	ldr	w0, [sp, #204]
  4141e0:	orr	w6, w1, w0
  4141e4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4141e8:	add	x1, x0, #0x66b
  4141ec:	adrp	x0, 451000 <_fini+0xa30>
  4141f0:	add	x5, x0, #0xb48
  4141f4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4141f8:	add	x4, x0, #0x568
  4141fc:	mov	w3, #0x65f                 	// #1631
  414200:	mov	x2, x1
  414204:	ldr	w1, [sp, #208]
  414208:	mov	w0, w6
  41420c:	bl	40b4f0 <log_internal_realm@plt>
  414210:	b	414bbc <main_loop+0xf18>
  414214:	ldr	w0, [sp, #208]
  414218:	cmp	w0, #0x0
  41421c:	cneg	w0, w0, lt  // lt = tstop
  414220:	and	w0, w0, #0xff
  414224:	neg	w0, w0
  414228:	b	414bbc <main_loop+0xf18>
  41422c:	ldr	x0, [sp, #24]
  414230:	ldr	x5, [x0]
  414234:	ldr	x4, [sp, #24]
  414238:	adrp	x0, 412000 <on_inotify+0x58>
  41423c:	add	x3, x0, #0x470
  414240:	mov	w2, #0x11                  	// #17
  414244:	mov	x1, #0x0                   	// #0
  414248:	mov	x0, x5
  41424c:	bl	40bc90 <sd_event_add_signal@plt>
  414250:	str	w0, [sp, #40]
  414254:	ldr	w0, [sp, #40]
  414258:	cmp	w0, #0x0
  41425c:	b.ge	4142ec <main_loop+0x648>  // b.tcont
  414260:	mov	w0, #0x3                   	// #3
  414264:	str	w0, [sp, #192]
  414268:	ldr	w0, [sp, #40]
  41426c:	str	w0, [sp, #196]
  414270:	mov	w0, #0x1                   	// #1
  414274:	str	w0, [sp, #200]
  414278:	ldr	w0, [sp, #200]
  41427c:	bl	40be30 <log_get_max_level_realm@plt>
  414280:	mov	w1, w0
  414284:	ldr	w0, [sp, #192]
  414288:	and	w0, w0, #0x7
  41428c:	cmp	w1, w0
  414290:	b.lt	4142d4 <main_loop+0x630>  // b.tstop
  414294:	ldr	w0, [sp, #200]
  414298:	lsl	w1, w0, #10
  41429c:	ldr	w0, [sp, #192]
  4142a0:	orr	w6, w1, w0
  4142a4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4142a8:	add	x1, x0, #0x66b
  4142ac:	adrp	x0, 451000 <_fini+0xa30>
  4142b0:	add	x5, x0, #0xb78
  4142b4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4142b8:	add	x4, x0, #0x568
  4142bc:	mov	w3, #0x663                 	// #1635
  4142c0:	mov	x2, x1
  4142c4:	ldr	w1, [sp, #196]
  4142c8:	mov	w0, w6
  4142cc:	bl	40b4f0 <log_internal_realm@plt>
  4142d0:	b	414bbc <main_loop+0xf18>
  4142d4:	ldr	w0, [sp, #196]
  4142d8:	cmp	w0, #0x0
  4142dc:	cneg	w0, w0, lt  // lt = tstop
  4142e0:	and	w0, w0, #0xff
  4142e4:	neg	w0, w0
  4142e8:	b	414bbc <main_loop+0xf18>
  4142ec:	ldr	x0, [sp, #24]
  4142f0:	ldr	x0, [x0]
  4142f4:	mov	w1, #0x1                   	// #1
  4142f8:	bl	40a580 <sd_event_set_watchdog@plt>
  4142fc:	str	w0, [sp, #40]
  414300:	ldr	w0, [sp, #40]
  414304:	cmp	w0, #0x0
  414308:	b.ge	414398 <main_loop+0x6f4>  // b.tcont
  41430c:	mov	w0, #0x3                   	// #3
  414310:	str	w0, [sp, #180]
  414314:	ldr	w0, [sp, #40]
  414318:	str	w0, [sp, #184]
  41431c:	mov	w0, #0x1                   	// #1
  414320:	str	w0, [sp, #188]
  414324:	ldr	w0, [sp, #188]
  414328:	bl	40be30 <log_get_max_level_realm@plt>
  41432c:	mov	w1, w0
  414330:	ldr	w0, [sp, #180]
  414334:	and	w0, w0, #0x7
  414338:	cmp	w1, w0
  41433c:	b.lt	414380 <main_loop+0x6dc>  // b.tstop
  414340:	ldr	w0, [sp, #188]
  414344:	lsl	w1, w0, #10
  414348:	ldr	w0, [sp, #180]
  41434c:	orr	w6, w1, w0
  414350:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414354:	add	x1, x0, #0x66b
  414358:	adrp	x0, 451000 <_fini+0xa30>
  41435c:	add	x5, x0, #0xba8
  414360:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414364:	add	x4, x0, #0x568
  414368:	mov	w3, #0x667                 	// #1639
  41436c:	mov	x2, x1
  414370:	ldr	w1, [sp, #184]
  414374:	mov	w0, w6
  414378:	bl	40b4f0 <log_internal_realm@plt>
  41437c:	b	414bbc <main_loop+0xf18>
  414380:	ldr	w0, [sp, #184]
  414384:	cmp	w0, #0x0
  414388:	cneg	w0, w0, lt  // lt = tstop
  41438c:	and	w0, w0, #0xff
  414390:	neg	w0, w0
  414394:	b	414bbc <main_loop+0xf18>
  414398:	ldr	x0, [sp, #24]
  41439c:	ldr	x2, [x0, #72]
  4143a0:	ldr	x0, [sp, #24]
  4143a4:	ldr	x0, [x0]
  4143a8:	mov	x1, x0
  4143ac:	mov	x0, x2
  4143b0:	bl	416210 <udev_ctrl_attach_event>
  4143b4:	str	w0, [sp, #40]
  4143b8:	ldr	w0, [sp, #40]
  4143bc:	cmp	w0, #0x0
  4143c0:	b.ge	414450 <main_loop+0x7ac>  // b.tcont
  4143c4:	mov	w0, #0x3                   	// #3
  4143c8:	str	w0, [sp, #168]
  4143cc:	ldr	w0, [sp, #40]
  4143d0:	str	w0, [sp, #172]
  4143d4:	mov	w0, #0x1                   	// #1
  4143d8:	str	w0, [sp, #176]
  4143dc:	ldr	w0, [sp, #176]
  4143e0:	bl	40be30 <log_get_max_level_realm@plt>
  4143e4:	mov	w1, w0
  4143e8:	ldr	w0, [sp, #168]
  4143ec:	and	w0, w0, #0x7
  4143f0:	cmp	w1, w0
  4143f4:	b.lt	414438 <main_loop+0x794>  // b.tstop
  4143f8:	ldr	w0, [sp, #176]
  4143fc:	lsl	w1, w0, #10
  414400:	ldr	w0, [sp, #168]
  414404:	orr	w6, w1, w0
  414408:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41440c:	add	x1, x0, #0x66b
  414410:	adrp	x0, 451000 <_fini+0xa30>
  414414:	add	x5, x0, #0xbd8
  414418:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41441c:	add	x4, x0, #0x568
  414420:	mov	w3, #0x66b                 	// #1643
  414424:	mov	x2, x1
  414428:	ldr	w1, [sp, #172]
  41442c:	mov	w0, w6
  414430:	bl	40b4f0 <log_internal_realm@plt>
  414434:	b	414bbc <main_loop+0xf18>
  414438:	ldr	w0, [sp, #172]
  41443c:	cmp	w0, #0x0
  414440:	cneg	w0, w0, lt  // lt = tstop
  414444:	and	w0, w0, #0xff
  414448:	neg	w0, w0
  41444c:	b	414bbc <main_loop+0xf18>
  414450:	ldr	x0, [sp, #24]
  414454:	ldr	x3, [x0, #72]
  414458:	ldr	x2, [sp, #24]
  41445c:	adrp	x0, 410000 <is_device_busy+0x348>
  414460:	add	x1, x0, #0xd1c
  414464:	mov	x0, x3
  414468:	bl	416d7c <udev_ctrl_start>
  41446c:	str	w0, [sp, #40]
  414470:	ldr	w0, [sp, #40]
  414474:	cmp	w0, #0x0
  414478:	b.ge	414508 <main_loop+0x864>  // b.tcont
  41447c:	mov	w0, #0x3                   	// #3
  414480:	str	w0, [sp, #156]
  414484:	ldr	w0, [sp, #40]
  414488:	str	w0, [sp, #160]
  41448c:	mov	w0, #0x1                   	// #1
  414490:	str	w0, [sp, #164]
  414494:	ldr	w0, [sp, #164]
  414498:	bl	40be30 <log_get_max_level_realm@plt>
  41449c:	mov	w1, w0
  4144a0:	ldr	w0, [sp, #156]
  4144a4:	and	w0, w0, #0x7
  4144a8:	cmp	w1, w0
  4144ac:	b.lt	4144f0 <main_loop+0x84c>  // b.tstop
  4144b0:	ldr	w0, [sp, #164]
  4144b4:	lsl	w1, w0, #10
  4144b8:	ldr	w0, [sp, #156]
  4144bc:	orr	w6, w1, w0
  4144c0:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4144c4:	add	x1, x0, #0x66b
  4144c8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4144cc:	add	x5, x0, #0xb78
  4144d0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4144d4:	add	x4, x0, #0x568
  4144d8:	mov	w3, #0x66f                 	// #1647
  4144dc:	mov	x2, x1
  4144e0:	ldr	w1, [sp, #160]
  4144e4:	mov	w0, w6
  4144e8:	bl	40b4f0 <log_internal_realm@plt>
  4144ec:	b	414bbc <main_loop+0xf18>
  4144f0:	ldr	w0, [sp, #160]
  4144f4:	cmp	w0, #0x0
  4144f8:	cneg	w0, w0, lt  // lt = tstop
  4144fc:	and	w0, w0, #0xff
  414500:	neg	w0, w0
  414504:	b	414bbc <main_loop+0xf18>
  414508:	ldr	x0, [sp, #24]
  41450c:	ldr	x0, [x0, #72]
  414510:	bl	416338 <udev_ctrl_get_event_source>
  414514:	mov	x1, #0x64                  	// #100
  414518:	bl	40b130 <sd_event_source_set_priority@plt>
  41451c:	str	w0, [sp, #40]
  414520:	ldr	w0, [sp, #40]
  414524:	cmp	w0, #0x0
  414528:	b.ge	4145b8 <main_loop+0x914>  // b.tcont
  41452c:	mov	w0, #0x3                   	// #3
  414530:	str	w0, [sp, #144]
  414534:	ldr	w0, [sp, #40]
  414538:	str	w0, [sp, #148]
  41453c:	mov	w0, #0x1                   	// #1
  414540:	str	w0, [sp, #152]
  414544:	ldr	w0, [sp, #152]
  414548:	bl	40be30 <log_get_max_level_realm@plt>
  41454c:	mov	w1, w0
  414550:	ldr	w0, [sp, #144]
  414554:	and	w0, w0, #0x7
  414558:	cmp	w1, w0
  41455c:	b.lt	4145a0 <main_loop+0x8fc>  // b.tstop
  414560:	ldr	w0, [sp, #152]
  414564:	lsl	w1, w0, #10
  414568:	ldr	w0, [sp, #144]
  41456c:	orr	w6, w1, w0
  414570:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414574:	add	x1, x0, #0x66b
  414578:	adrp	x0, 451000 <_fini+0xa30>
  41457c:	add	x5, x0, #0xc08
  414580:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414584:	add	x4, x0, #0x568
  414588:	mov	w3, #0x677                 	// #1655
  41458c:	mov	x2, x1
  414590:	ldr	w1, [sp, #148]
  414594:	mov	w0, w6
  414598:	bl	40b4f0 <log_internal_realm@plt>
  41459c:	b	414bbc <main_loop+0xf18>
  4145a0:	ldr	w0, [sp, #148]
  4145a4:	cmp	w0, #0x0
  4145a8:	cneg	w0, w0, lt  // lt = tstop
  4145ac:	and	w0, w0, #0xff
  4145b0:	neg	w0, w0
  4145b4:	b	414bbc <main_loop+0xf18>
  4145b8:	ldr	x0, [sp, #24]
  4145bc:	ldr	x6, [x0]
  4145c0:	ldr	x0, [sp, #24]
  4145c4:	add	x1, x0, #0x60
  4145c8:	ldr	x0, [sp, #24]
  4145cc:	ldr	w2, [x0, #80]
  4145d0:	ldr	x5, [sp, #24]
  4145d4:	adrp	x0, 411000 <on_ctrl_msg+0x2e4>
  4145d8:	add	x4, x0, #0xfa8
  4145dc:	mov	w3, #0x1                   	// #1
  4145e0:	mov	x0, x6
  4145e4:	bl	40b690 <sd_event_add_io@plt>
  4145e8:	str	w0, [sp, #40]
  4145ec:	ldr	w0, [sp, #40]
  4145f0:	cmp	w0, #0x0
  4145f4:	b.ge	414684 <main_loop+0x9e0>  // b.tcont
  4145f8:	mov	w0, #0x3                   	// #3
  4145fc:	str	w0, [sp, #132]
  414600:	ldr	w0, [sp, #40]
  414604:	str	w0, [sp, #136]
  414608:	mov	w0, #0x1                   	// #1
  41460c:	str	w0, [sp, #140]
  414610:	ldr	w0, [sp, #140]
  414614:	bl	40be30 <log_get_max_level_realm@plt>
  414618:	mov	w1, w0
  41461c:	ldr	w0, [sp, #132]
  414620:	and	w0, w0, #0x7
  414624:	cmp	w1, w0
  414628:	b.lt	41466c <main_loop+0x9c8>  // b.tstop
  41462c:	ldr	w0, [sp, #140]
  414630:	lsl	w1, w0, #10
  414634:	ldr	w0, [sp, #132]
  414638:	orr	w6, w1, w0
  41463c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414640:	add	x1, x0, #0x66b
  414644:	adrp	x0, 451000 <_fini+0xa30>
  414648:	add	x5, x0, #0xc50
  41464c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414650:	add	x4, x0, #0x568
  414654:	mov	w3, #0x67b                 	// #1659
  414658:	mov	x2, x1
  41465c:	ldr	w1, [sp, #136]
  414660:	mov	w0, w6
  414664:	bl	40b4f0 <log_internal_realm@plt>
  414668:	b	414bbc <main_loop+0xf18>
  41466c:	ldr	w0, [sp, #136]
  414670:	cmp	w0, #0x0
  414674:	cneg	w0, w0, lt  // lt = tstop
  414678:	and	w0, w0, #0xff
  41467c:	neg	w0, w0
  414680:	b	414bbc <main_loop+0xf18>
  414684:	ldr	x0, [sp, #24]
  414688:	ldr	x2, [x0, #64]
  41468c:	ldr	x0, [sp, #24]
  414690:	ldr	x0, [x0]
  414694:	mov	x1, x0
  414698:	mov	x0, x2
  41469c:	bl	40a4c0 <sd_device_monitor_attach_event@plt>
  4146a0:	str	w0, [sp, #40]
  4146a4:	ldr	w0, [sp, #40]
  4146a8:	cmp	w0, #0x0
  4146ac:	b.ge	41473c <main_loop+0xa98>  // b.tcont
  4146b0:	mov	w0, #0x3                   	// #3
  4146b4:	str	w0, [sp, #120]
  4146b8:	ldr	w0, [sp, #40]
  4146bc:	str	w0, [sp, #124]
  4146c0:	mov	w0, #0x1                   	// #1
  4146c4:	str	w0, [sp, #128]
  4146c8:	ldr	w0, [sp, #128]
  4146cc:	bl	40be30 <log_get_max_level_realm@plt>
  4146d0:	mov	w1, w0
  4146d4:	ldr	w0, [sp, #120]
  4146d8:	and	w0, w0, #0x7
  4146dc:	cmp	w1, w0
  4146e0:	b.lt	414724 <main_loop+0xa80>  // b.tstop
  4146e4:	ldr	w0, [sp, #128]
  4146e8:	lsl	w1, w0, #10
  4146ec:	ldr	w0, [sp, #120]
  4146f0:	orr	w6, w1, w0
  4146f4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4146f8:	add	x1, x0, #0x66b
  4146fc:	adrp	x0, 451000 <_fini+0xa30>
  414700:	add	x5, x0, #0xc80
  414704:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414708:	add	x4, x0, #0x568
  41470c:	mov	w3, #0x67f                 	// #1663
  414710:	mov	x2, x1
  414714:	ldr	w1, [sp, #124]
  414718:	mov	w0, w6
  41471c:	bl	40b4f0 <log_internal_realm@plt>
  414720:	b	414bbc <main_loop+0xf18>
  414724:	ldr	w0, [sp, #124]
  414728:	cmp	w0, #0x0
  41472c:	cneg	w0, w0, lt  // lt = tstop
  414730:	and	w0, w0, #0xff
  414734:	neg	w0, w0
  414738:	b	414bbc <main_loop+0xf18>
  41473c:	ldr	x0, [sp, #24]
  414740:	ldr	x3, [x0, #64]
  414744:	ldr	x2, [sp, #24]
  414748:	adrp	x0, 410000 <is_device_busy+0x348>
  41474c:	add	x1, x0, #0xb78
  414750:	mov	x0, x3
  414754:	bl	40a5c0 <sd_device_monitor_start@plt>
  414758:	str	w0, [sp, #40]
  41475c:	ldr	w0, [sp, #40]
  414760:	cmp	w0, #0x0
  414764:	b.ge	4147f4 <main_loop+0xb50>  // b.tcont
  414768:	mov	w0, #0x3                   	// #3
  41476c:	str	w0, [sp, #108]
  414770:	ldr	w0, [sp, #40]
  414774:	str	w0, [sp, #112]
  414778:	mov	w0, #0x1                   	// #1
  41477c:	str	w0, [sp, #116]
  414780:	ldr	w0, [sp, #116]
  414784:	bl	40be30 <log_get_max_level_realm@plt>
  414788:	mov	w1, w0
  41478c:	ldr	w0, [sp, #108]
  414790:	and	w0, w0, #0x7
  414794:	cmp	w1, w0
  414798:	b.lt	4147dc <main_loop+0xb38>  // b.tstop
  41479c:	ldr	w0, [sp, #116]
  4147a0:	lsl	w1, w0, #10
  4147a4:	ldr	w0, [sp, #108]
  4147a8:	orr	w6, w1, w0
  4147ac:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4147b0:	add	x1, x0, #0x66b
  4147b4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4147b8:	add	x5, x0, #0xb78
  4147bc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4147c0:	add	x4, x0, #0x568
  4147c4:	mov	w3, #0x683                 	// #1667
  4147c8:	mov	x2, x1
  4147cc:	ldr	w1, [sp, #112]
  4147d0:	mov	w0, w6
  4147d4:	bl	40b4f0 <log_internal_realm@plt>
  4147d8:	b	414bbc <main_loop+0xf18>
  4147dc:	ldr	w0, [sp, #112]
  4147e0:	cmp	w0, #0x0
  4147e4:	cneg	w0, w0, lt  // lt = tstop
  4147e8:	and	w0, w0, #0xff
  4147ec:	neg	w0, w0
  4147f0:	b	414bbc <main_loop+0xf18>
  4147f4:	ldr	x0, [sp, #24]
  4147f8:	ldr	x0, [x0, #64]
  4147fc:	bl	40ada0 <sd_device_monitor_get_event_source@plt>
  414800:	mov	x2, x0
  414804:	adrp	x0, 451000 <_fini+0xa30>
  414808:	add	x1, x0, #0xcb0
  41480c:	mov	x0, x2
  414810:	bl	40bdf0 <sd_event_source_set_description@plt>
  414814:	ldr	x0, [sp, #24]
  414818:	ldr	x6, [x0]
  41481c:	ldr	x5, [sp, #24]
  414820:	adrp	x0, 410000 <is_device_busy+0x348>
  414824:	add	x4, x0, #0x714
  414828:	mov	w3, #0x1                   	// #1
  41482c:	ldr	w2, [sp, #44]
  414830:	mov	x1, #0x0                   	// #0
  414834:	mov	x0, x6
  414838:	bl	40b690 <sd_event_add_io@plt>
  41483c:	str	w0, [sp, #40]
  414840:	ldr	w0, [sp, #40]
  414844:	cmp	w0, #0x0
  414848:	b.ge	4148d8 <main_loop+0xc34>  // b.tcont
  41484c:	mov	w0, #0x3                   	// #3
  414850:	str	w0, [sp, #96]
  414854:	ldr	w0, [sp, #40]
  414858:	str	w0, [sp, #100]
  41485c:	mov	w0, #0x1                   	// #1
  414860:	str	w0, [sp, #104]
  414864:	ldr	w0, [sp, #104]
  414868:	bl	40be30 <log_get_max_level_realm@plt>
  41486c:	mov	w1, w0
  414870:	ldr	w0, [sp, #96]
  414874:	and	w0, w0, #0x7
  414878:	cmp	w1, w0
  41487c:	b.lt	4148c0 <main_loop+0xc1c>  // b.tstop
  414880:	ldr	w0, [sp, #104]
  414884:	lsl	w1, w0, #10
  414888:	ldr	w0, [sp, #96]
  41488c:	orr	w6, w1, w0
  414890:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414894:	add	x1, x0, #0x66b
  414898:	adrp	x0, 451000 <_fini+0xa30>
  41489c:	add	x5, x0, #0xcc0
  4148a0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4148a4:	add	x4, x0, #0x568
  4148a8:	mov	w3, #0x689                 	// #1673
  4148ac:	mov	x2, x1
  4148b0:	ldr	w1, [sp, #100]
  4148b4:	mov	w0, w6
  4148b8:	bl	40b4f0 <log_internal_realm@plt>
  4148bc:	b	414bbc <main_loop+0xf18>
  4148c0:	ldr	w0, [sp, #100]
  4148c4:	cmp	w0, #0x0
  4148c8:	cneg	w0, w0, lt  // lt = tstop
  4148cc:	and	w0, w0, #0xff
  4148d0:	neg	w0, w0
  4148d4:	b	414bbc <main_loop+0xf18>
  4148d8:	ldr	x0, [sp, #24]
  4148dc:	ldr	x4, [x0]
  4148e0:	ldr	x3, [sp, #24]
  4148e4:	adrp	x0, 412000 <on_inotify+0x58>
  4148e8:	add	x2, x0, #0xc94
  4148ec:	mov	x1, #0x0                   	// #0
  4148f0:	mov	x0, x4
  4148f4:	bl	40a350 <sd_event_add_post@plt>
  4148f8:	str	w0, [sp, #40]
  4148fc:	ldr	w0, [sp, #40]
  414900:	cmp	w0, #0x0
  414904:	b.ge	414994 <main_loop+0xcf0>  // b.tcont
  414908:	mov	w0, #0x3                   	// #3
  41490c:	str	w0, [sp, #84]
  414910:	ldr	w0, [sp, #40]
  414914:	str	w0, [sp, #88]
  414918:	mov	w0, #0x1                   	// #1
  41491c:	str	w0, [sp, #92]
  414920:	ldr	w0, [sp, #92]
  414924:	bl	40be30 <log_get_max_level_realm@plt>
  414928:	mov	w1, w0
  41492c:	ldr	w0, [sp, #84]
  414930:	and	w0, w0, #0x7
  414934:	cmp	w1, w0
  414938:	b.lt	41497c <main_loop+0xcd8>  // b.tstop
  41493c:	ldr	w0, [sp, #92]
  414940:	lsl	w1, w0, #10
  414944:	ldr	w0, [sp, #84]
  414948:	orr	w6, w1, w0
  41494c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414950:	add	x1, x0, #0x66b
  414954:	adrp	x0, 451000 <_fini+0xa30>
  414958:	add	x5, x0, #0xcf0
  41495c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414960:	add	x4, x0, #0x568
  414964:	mov	w3, #0x68d                 	// #1677
  414968:	mov	x2, x1
  41496c:	ldr	w1, [sp, #88]
  414970:	mov	w0, w6
  414974:	bl	40b4f0 <log_internal_realm@plt>
  414978:	b	414bbc <main_loop+0xf18>
  41497c:	ldr	w0, [sp, #88]
  414980:	cmp	w0, #0x0
  414984:	cneg	w0, w0, lt  // lt = tstop
  414988:	and	w0, w0, #0xff
  41498c:	neg	w0, w0
  414990:	b	414bbc <main_loop+0xf18>
  414994:	bl	435efc <udev_builtin_init>
  414998:	ldr	x0, [sp, #24]
  41499c:	add	x2, x0, #0x28
  4149a0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4149a4:	add	x0, x0, #0x0
  4149a8:	ldr	w0, [x0]
  4149ac:	mov	w1, w0
  4149b0:	mov	x0, x2
  4149b4:	bl	42c49c <udev_rules_new>
  4149b8:	str	w0, [sp, #40]
  4149bc:	ldr	x0, [sp, #24]
  4149c0:	ldr	x0, [x0, #40]
  4149c4:	cmp	x0, #0x0
  4149c8:	b.ne	414a58 <main_loop+0xdb4>  // b.any
  4149cc:	mov	w0, #0x3                   	// #3
  4149d0:	str	w0, [sp, #72]
  4149d4:	ldr	w0, [sp, #40]
  4149d8:	str	w0, [sp, #76]
  4149dc:	mov	w0, #0x1                   	// #1
  4149e0:	str	w0, [sp, #80]
  4149e4:	ldr	w0, [sp, #80]
  4149e8:	bl	40be30 <log_get_max_level_realm@plt>
  4149ec:	mov	w1, w0
  4149f0:	ldr	w0, [sp, #72]
  4149f4:	and	w0, w0, #0x7
  4149f8:	cmp	w1, w0
  4149fc:	b.lt	414a40 <main_loop+0xd9c>  // b.tstop
  414a00:	ldr	w0, [sp, #80]
  414a04:	lsl	w1, w0, #10
  414a08:	ldr	w0, [sp, #72]
  414a0c:	orr	w6, w1, w0
  414a10:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414a14:	add	x1, x0, #0x66b
  414a18:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414a1c:	add	x5, x0, #0xef0
  414a20:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414a24:	add	x4, x0, #0x568
  414a28:	mov	w3, #0x693                 	// #1683
  414a2c:	mov	x2, x1
  414a30:	ldr	w1, [sp, #76]
  414a34:	mov	w0, w6
  414a38:	bl	40b4f0 <log_internal_realm@plt>
  414a3c:	b	414bbc <main_loop+0xf18>
  414a40:	ldr	w0, [sp, #76]
  414a44:	cmp	w0, #0x0
  414a48:	cneg	w0, w0, lt  // lt = tstop
  414a4c:	and	w0, w0, #0xff
  414a50:	neg	w0, w0
  414a54:	b	414bbc <main_loop+0xf18>
  414a58:	ldr	x0, [sp, #24]
  414a5c:	ldr	x0, [x0, #40]
  414a60:	bl	4349e0 <udev_rules_apply_static_dev_perms>
  414a64:	str	w0, [sp, #40]
  414a68:	ldr	w0, [sp, #40]
  414a6c:	cmp	w0, #0x0
  414a70:	b.ge	414af0 <main_loop+0xe4c>  // b.tcont
  414a74:	mov	w0, #0x3                   	// #3
  414a78:	str	w0, [sp, #48]
  414a7c:	ldr	w0, [sp, #40]
  414a80:	str	w0, [sp, #52]
  414a84:	mov	w0, #0x1                   	// #1
  414a88:	str	w0, [sp, #56]
  414a8c:	ldr	w0, [sp, #56]
  414a90:	bl	40be30 <log_get_max_level_realm@plt>
  414a94:	mov	w1, w0
  414a98:	ldr	w0, [sp, #48]
  414a9c:	and	w0, w0, #0x7
  414aa0:	cmp	w1, w0
  414aa4:	b.lt	414ae8 <main_loop+0xe44>  // b.tstop
  414aa8:	ldr	w0, [sp, #56]
  414aac:	lsl	w1, w0, #10
  414ab0:	ldr	w0, [sp, #48]
  414ab4:	orr	w6, w1, w0
  414ab8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414abc:	add	x1, x0, #0x66b
  414ac0:	adrp	x0, 451000 <_fini+0xa30>
  414ac4:	add	x5, x0, #0xd18
  414ac8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414acc:	add	x4, x0, #0x568
  414ad0:	mov	w3, #0x697                 	// #1687
  414ad4:	mov	x2, x1
  414ad8:	ldr	w1, [sp, #52]
  414adc:	mov	w0, w6
  414ae0:	bl	40b4f0 <log_internal_realm@plt>
  414ae4:	b	414af0 <main_loop+0xe4c>
  414ae8:	ldr	w0, [sp, #52]
  414aec:	cmp	w0, #0x0
  414af0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414af4:	add	x0, x0, #0x190
  414af8:	ldr	w0, [x0]
  414afc:	mov	w2, w0
  414b00:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414b04:	add	x1, x0, #0xe10
  414b08:	mov	w0, #0x0                   	// #0
  414b0c:	bl	40b070 <sd_notifyf@plt>
  414b10:	ldr	x0, [sp, #24]
  414b14:	ldr	x0, [x0]
  414b18:	bl	40b7a0 <sd_event_loop@plt>
  414b1c:	str	w0, [sp, #40]
  414b20:	ldr	w0, [sp, #40]
  414b24:	cmp	w0, #0x0
  414b28:	b.ge	414ba8 <main_loop+0xf04>  // b.tcont
  414b2c:	mov	w0, #0x3                   	// #3
  414b30:	str	w0, [sp, #60]
  414b34:	ldr	w0, [sp, #40]
  414b38:	str	w0, [sp, #64]
  414b3c:	mov	w0, #0x1                   	// #1
  414b40:	str	w0, [sp, #68]
  414b44:	ldr	w0, [sp, #68]
  414b48:	bl	40be30 <log_get_max_level_realm@plt>
  414b4c:	mov	w1, w0
  414b50:	ldr	w0, [sp, #60]
  414b54:	and	w0, w0, #0x7
  414b58:	cmp	w1, w0
  414b5c:	b.lt	414ba0 <main_loop+0xefc>  // b.tstop
  414b60:	ldr	w0, [sp, #68]
  414b64:	lsl	w1, w0, #10
  414b68:	ldr	w0, [sp, #60]
  414b6c:	orr	w6, w1, w0
  414b70:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414b74:	add	x1, x0, #0x66b
  414b78:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414b7c:	add	x5, x0, #0xbb8
  414b80:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414b84:	add	x4, x0, #0x568
  414b88:	mov	w3, #0x69f                 	// #1695
  414b8c:	mov	x2, x1
  414b90:	ldr	w1, [sp, #64]
  414b94:	mov	w0, w6
  414b98:	bl	40b4f0 <log_internal_realm@plt>
  414b9c:	b	414ba8 <main_loop+0xf04>
  414ba0:	ldr	w0, [sp, #64]
  414ba4:	cmp	w0, #0x0
  414ba8:	adrp	x0, 451000 <_fini+0xa30>
  414bac:	add	x1, x0, #0xd50
  414bb0:	mov	w0, #0x0                   	// #0
  414bb4:	bl	40b470 <sd_notify@plt>
  414bb8:	ldr	w0, [sp, #40]
  414bbc:	ldp	x29, x30, [sp], #288
  414bc0:	ret

0000000000414bc4 <run>:
  414bc4:	stp	x29, x30, [sp, #-448]!
  414bc8:	mov	x29, sp
  414bcc:	str	x19, [sp, #16]
  414bd0:	str	w0, [sp, #44]
  414bd4:	str	x1, [sp, #32]
  414bd8:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  414bdc:	add	x0, x0, #0x7a8
  414be0:	ldr	x1, [x0]
  414be4:	str	x1, [sp, #440]
  414be8:	mov	x1, #0x0                   	// #0
  414bec:	str	xzr, [sp, #248]
  414bf0:	str	xzr, [sp, #256]
  414bf4:	mov	w0, #0xffffffff            	// #-1
  414bf8:	str	w0, [sp, #64]
  414bfc:	mov	w0, #0xffffffff            	// #-1
  414c00:	str	w0, [sp, #68]
  414c04:	mov	w0, #0x7                   	// #7
  414c08:	bl	40b060 <log_set_target@plt>
  414c0c:	bl	40bd90 <log_open@plt>
  414c10:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414c14:	add	x3, x0, #0x0
  414c18:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414c1c:	add	x2, x0, #0x8
  414c20:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414c24:	add	x1, x0, #0x198
  414c28:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414c2c:	add	x0, x0, #0x190
  414c30:	bl	40b490 <udev_parse_config_full@plt>
  414c34:	mov	w0, #0x1                   	// #1
  414c38:	bl	40a780 <log_parse_environment_realm@plt>
  414c3c:	bl	40bd90 <log_open@plt>
  414c40:	ldr	x1, [sp, #32]
  414c44:	ldr	w0, [sp, #44]
  414c48:	bl	413388 <parse_argv>
  414c4c:	str	w0, [sp, #72]
  414c50:	ldr	w0, [sp, #72]
  414c54:	cmp	w0, #0x0
  414c58:	b.gt	414c64 <run+0xa0>
  414c5c:	ldr	w19, [sp, #72]
  414c60:	b	415660 <run+0xa9c>
  414c64:	mov	w2, #0x1                   	// #1
  414c68:	mov	x1, #0x0                   	// #0
  414c6c:	adrp	x0, 412000 <on_inotify+0x58>
  414c70:	add	x0, x0, #0xfb0
  414c74:	bl	40b880 <proc_cmdline_parse@plt>
  414c78:	str	w0, [sp, #72]
  414c7c:	ldr	w0, [sp, #72]
  414c80:	cmp	w0, #0x0
  414c84:	b.ge	414d04 <run+0x140>  // b.tcont
  414c88:	mov	w0, #0x4                   	// #4
  414c8c:	str	w0, [sp, #76]
  414c90:	ldr	w0, [sp, #72]
  414c94:	str	w0, [sp, #80]
  414c98:	mov	w0, #0x1                   	// #1
  414c9c:	str	w0, [sp, #84]
  414ca0:	ldr	w0, [sp, #84]
  414ca4:	bl	40be30 <log_get_max_level_realm@plt>
  414ca8:	mov	w1, w0
  414cac:	ldr	w0, [sp, #76]
  414cb0:	and	w0, w0, #0x7
  414cb4:	cmp	w1, w0
  414cb8:	b.lt	414cfc <run+0x138>  // b.tstop
  414cbc:	ldr	w0, [sp, #84]
  414cc0:	lsl	w1, w0, #10
  414cc4:	ldr	w0, [sp, #76]
  414cc8:	orr	w6, w1, w0
  414ccc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414cd0:	add	x1, x0, #0x66b
  414cd4:	adrp	x0, 451000 <_fini+0xa30>
  414cd8:	add	x5, x0, #0xd78
  414cdc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414ce0:	add	x4, x0, #0x588
  414ce4:	mov	w3, #0x6b9                 	// #1721
  414ce8:	mov	x2, x1
  414cec:	ldr	w1, [sp, #80]
  414cf0:	mov	w0, w6
  414cf4:	bl	40b4f0 <log_internal_realm@plt>
  414cf8:	b	414d04 <run+0x140>
  414cfc:	ldr	w0, [sp, #80]
  414d00:	cmp	w0, #0x0
  414d04:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414d08:	add	x0, x0, #0x189
  414d0c:	ldrb	w0, [x0]
  414d10:	cmp	w0, #0x0
  414d14:	b.eq	414d2c <run+0x168>  // b.none
  414d18:	mov	w0, #0x0                   	// #0
  414d1c:	bl	40b060 <log_set_target@plt>
  414d20:	mov	w1, #0x7                   	// #7
  414d24:	mov	w0, #0x1                   	// #1
  414d28:	bl	40b860 <log_set_max_level_realm@plt>
  414d2c:	mov	w0, #0x1                   	// #1
  414d30:	bl	40be30 <log_get_max_level_realm@plt>
  414d34:	mov	w1, w0
  414d38:	mov	w0, #0x0                   	// #0
  414d3c:	bl	40b860 <log_set_max_level_realm@plt>
  414d40:	bl	40bdb0 <must_be_root@plt>
  414d44:	str	w0, [sp, #72]
  414d48:	ldr	w0, [sp, #72]
  414d4c:	cmp	w0, #0x0
  414d50:	b.ge	414d5c <run+0x198>  // b.tcont
  414d54:	ldr	w19, [sp, #72]
  414d58:	b	415660 <run+0xa9c>
  414d5c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414d60:	add	x0, x0, #0x190
  414d64:	ldr	w0, [x0]
  414d68:	cmp	w0, #0x0
  414d6c:	b.ne	414edc <run+0x318>  // b.any
  414d70:	mov	x0, #0x1                   	// #1
  414d74:	str	x0, [sp, #264]
  414d78:	add	x0, sp, #0x138
  414d7c:	mov	x2, x0
  414d80:	mov	x1, #0x80                  	// #128
  414d84:	mov	w0, #0x0                   	// #0
  414d88:	bl	40a560 <sched_getaffinity@plt>
  414d8c:	cmp	w0, #0x0
  414d90:	b.ne	414dac <run+0x1e8>  // b.any
  414d94:	add	x0, sp, #0x138
  414d98:	mov	x1, x0
  414d9c:	mov	x0, #0x80                  	// #128
  414da0:	bl	40a8a0 <__sched_cpucount@plt>
  414da4:	sxtw	x0, w0
  414da8:	str	x0, [sp, #264]
  414dac:	ldr	x0, [sp, #264]
  414db0:	add	x0, x0, #0x8
  414db4:	lsl	x0, x0, #1
  414db8:	str	x0, [sp, #272]
  414dbc:	bl	40b0a0 <physical_memory@plt>
  414dc0:	lsr	x0, x0, #27
  414dc4:	str	x0, [sp, #280]
  414dc8:	mov	w0, #0xa                   	// #10
  414dcc:	str	w0, [sp, #88]
  414dd0:	ldr	w0, [sp, #88]
  414dd4:	ldr	x2, [sp, #280]
  414dd8:	ldr	x1, [sp, #280]
  414ddc:	cmp	x2, x0
  414de0:	csel	x0, x1, x0, cs  // cs = hs, nlast
  414de4:	str	x0, [sp, #288]
  414de8:	ldr	x0, [sp, #272]
  414dec:	str	x0, [sp, #296]
  414df0:	ldr	x0, [sp, #288]
  414df4:	str	x0, [sp, #304]
  414df8:	ldr	x0, [sp, #296]
  414dfc:	ldr	x2, [sp, #304]
  414e00:	ldr	x1, [sp, #304]
  414e04:	cmp	x2, x0
  414e08:	csel	x0, x1, x0, ls  // ls = plast
  414e0c:	mov	w1, w0
  414e10:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414e14:	add	x0, x0, #0x190
  414e18:	str	w1, [x0]
  414e1c:	mov	w0, #0x800                 	// #2048
  414e20:	str	w0, [sp, #92]
  414e24:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414e28:	add	x0, x0, #0x190
  414e2c:	ldr	w0, [x0]
  414e30:	str	w0, [sp, #96]
  414e34:	ldr	w0, [sp, #92]
  414e38:	ldr	w2, [sp, #96]
  414e3c:	ldr	w1, [sp, #96]
  414e40:	cmp	w2, w0
  414e44:	csel	w1, w1, w0, ls  // ls = plast
  414e48:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414e4c:	add	x0, x0, #0x190
  414e50:	str	w1, [x0]
  414e54:	mov	w0, #0x7                   	// #7
  414e58:	str	w0, [sp, #100]
  414e5c:	str	wzr, [sp, #104]
  414e60:	mov	w0, #0x1                   	// #1
  414e64:	str	w0, [sp, #108]
  414e68:	ldr	w0, [sp, #108]
  414e6c:	bl	40be30 <log_get_max_level_realm@plt>
  414e70:	mov	w1, w0
  414e74:	ldr	w0, [sp, #100]
  414e78:	and	w0, w0, #0x7
  414e7c:	cmp	w1, w0
  414e80:	b.lt	414ed4 <run+0x310>  // b.tstop
  414e84:	ldr	w0, [sp, #108]
  414e88:	lsl	w1, w0, #10
  414e8c:	ldr	w0, [sp, #100]
  414e90:	orr	w7, w1, w0
  414e94:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414e98:	add	x1, x0, #0x66b
  414e9c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  414ea0:	add	x0, x0, #0x190
  414ea4:	ldr	w0, [x0]
  414ea8:	mov	w6, w0
  414eac:	adrp	x0, 451000 <_fini+0xa30>
  414eb0:	add	x5, x0, #0xdb0
  414eb4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414eb8:	add	x4, x0, #0x588
  414ebc:	mov	w3, #0x6d4                 	// #1748
  414ec0:	mov	x2, x1
  414ec4:	ldr	w1, [sp, #104]
  414ec8:	mov	w0, w7
  414ecc:	bl	40b4f0 <log_internal_realm@plt>
  414ed0:	b	414edc <run+0x318>
  414ed4:	ldr	w0, [sp, #104]
  414ed8:	cmp	w0, #0x0
  414edc:	adrp	x0, 451000 <_fini+0xa30>
  414ee0:	add	x0, x0, #0xdc8
  414ee4:	bl	40b400 <chdir@plt>
  414ee8:	str	w0, [sp, #72]
  414eec:	ldr	w0, [sp, #72]
  414ef0:	cmp	w0, #0x0
  414ef4:	b.ge	414f8c <run+0x3c8>  // b.tcont
  414ef8:	mov	w0, #0x3                   	// #3
  414efc:	str	w0, [sp, #236]
  414f00:	bl	40b040 <__errno_location@plt>
  414f04:	ldr	w0, [x0]
  414f08:	str	w0, [sp, #240]
  414f0c:	mov	w0, #0x1                   	// #1
  414f10:	str	w0, [sp, #244]
  414f14:	ldr	w0, [sp, #244]
  414f18:	bl	40be30 <log_get_max_level_realm@plt>
  414f1c:	mov	w1, w0
  414f20:	ldr	w0, [sp, #236]
  414f24:	and	w0, w0, #0x7
  414f28:	cmp	w1, w0
  414f2c:	b.lt	414f74 <run+0x3b0>  // b.tstop
  414f30:	ldr	w0, [sp, #244]
  414f34:	lsl	w1, w0, #10
  414f38:	ldr	w0, [sp, #236]
  414f3c:	orr	w6, w1, w0
  414f40:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414f44:	add	x1, x0, #0x66b
  414f48:	adrp	x0, 451000 <_fini+0xa30>
  414f4c:	add	x5, x0, #0xdd0
  414f50:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  414f54:	add	x4, x0, #0x588
  414f58:	mov	w3, #0x6da                 	// #1754
  414f5c:	mov	x2, x1
  414f60:	ldr	w1, [sp, #240]
  414f64:	mov	w0, w6
  414f68:	bl	40b4f0 <log_internal_realm@plt>
  414f6c:	mov	w19, w0
  414f70:	b	415660 <run+0xa9c>
  414f74:	ldr	w0, [sp, #240]
  414f78:	cmp	w0, #0x0
  414f7c:	cneg	w0, w0, lt  // lt = tstop
  414f80:	and	w0, w0, #0xff
  414f84:	neg	w19, w0
  414f88:	b	415660 <run+0xa9c>
  414f8c:	mov	w0, #0x12                  	// #18
  414f90:	bl	40acf0 <umask@plt>
  414f94:	bl	40a530 <mac_selinux_init@plt>
  414f98:	str	w0, [sp, #72]
  414f9c:	ldr	w0, [sp, #72]
  414fa0:	cmp	w0, #0x0
  414fa4:	b.ge	415038 <run+0x474>  // b.tcont
  414fa8:	mov	w0, #0x3                   	// #3
  414fac:	str	w0, [sp, #224]
  414fb0:	ldr	w0, [sp, #72]
  414fb4:	str	w0, [sp, #228]
  414fb8:	mov	w0, #0x1                   	// #1
  414fbc:	str	w0, [sp, #232]
  414fc0:	ldr	w0, [sp, #232]
  414fc4:	bl	40be30 <log_get_max_level_realm@plt>
  414fc8:	mov	w1, w0
  414fcc:	ldr	w0, [sp, #224]
  414fd0:	and	w0, w0, #0x7
  414fd4:	cmp	w1, w0
  414fd8:	b.lt	415020 <run+0x45c>  // b.tstop
  414fdc:	ldr	w0, [sp, #232]
  414fe0:	lsl	w1, w0, #10
  414fe4:	ldr	w0, [sp, #224]
  414fe8:	orr	w6, w1, w0
  414fec:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  414ff0:	add	x1, x0, #0x66b
  414ff4:	adrp	x0, 451000 <_fini+0xa30>
  414ff8:	add	x5, x0, #0xdf0
  414ffc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415000:	add	x4, x0, #0x588
  415004:	mov	w3, #0x6e0                 	// #1760
  415008:	mov	x2, x1
  41500c:	ldr	w1, [sp, #228]
  415010:	mov	w0, w6
  415014:	bl	40b4f0 <log_internal_realm@plt>
  415018:	mov	w19, w0
  41501c:	b	415660 <run+0xa9c>
  415020:	ldr	w0, [sp, #228]
  415024:	cmp	w0, #0x0
  415028:	cneg	w0, w0, lt  // lt = tstop
  41502c:	and	w0, w0, #0xff
  415030:	neg	w19, w0
  415034:	b	415660 <run+0xa9c>
  415038:	mov	w1, #0x1ed                 	// #493
  41503c:	adrp	x0, 451000 <_fini+0xa30>
  415040:	add	x0, x0, #0xe18
  415044:	bl	40a380 <mkdir_errno_wrapper@plt>
  415048:	str	w0, [sp, #72]
  41504c:	ldr	w0, [sp, #72]
  415050:	cmp	w0, #0x0
  415054:	b.ge	4150f4 <run+0x530>  // b.tcont
  415058:	ldr	w0, [sp, #72]
  41505c:	cmn	w0, #0x11
  415060:	b.eq	4150f4 <run+0x530>  // b.none
  415064:	mov	w0, #0x3                   	// #3
  415068:	str	w0, [sp, #112]
  41506c:	ldr	w0, [sp, #72]
  415070:	str	w0, [sp, #116]
  415074:	mov	w0, #0x1                   	// #1
  415078:	str	w0, [sp, #120]
  41507c:	ldr	w0, [sp, #120]
  415080:	bl	40be30 <log_get_max_level_realm@plt>
  415084:	mov	w1, w0
  415088:	ldr	w0, [sp, #112]
  41508c:	and	w0, w0, #0x7
  415090:	cmp	w1, w0
  415094:	b.lt	4150dc <run+0x518>  // b.tstop
  415098:	ldr	w0, [sp, #120]
  41509c:	lsl	w1, w0, #10
  4150a0:	ldr	w0, [sp, #112]
  4150a4:	orr	w6, w1, w0
  4150a8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4150ac:	add	x1, x0, #0x66b
  4150b0:	adrp	x0, 451000 <_fini+0xa30>
  4150b4:	add	x5, x0, #0xe28
  4150b8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4150bc:	add	x4, x0, #0x588
  4150c0:	mov	w3, #0x6e4                 	// #1764
  4150c4:	mov	x2, x1
  4150c8:	ldr	w1, [sp, #116]
  4150cc:	mov	w0, w6
  4150d0:	bl	40b4f0 <log_internal_realm@plt>
  4150d4:	mov	w19, w0
  4150d8:	b	415660 <run+0xa9c>
  4150dc:	ldr	w0, [sp, #116]
  4150e0:	cmp	w0, #0x0
  4150e4:	cneg	w0, w0, lt  // lt = tstop
  4150e8:	and	w0, w0, #0xff
  4150ec:	neg	w19, w0
  4150f0:	b	415660 <run+0xa9c>
  4150f4:	mov	w2, #0xffffffff            	// #-1
  4150f8:	mov	w1, #0xffffffff            	// #-1
  4150fc:	mov	x0, #0x0                   	// #0
  415100:	bl	40bdd0 <dev_setup@plt>
  415104:	bl	40a3b0 <getppid@plt>
  415108:	cmp	w0, #0x1
  41510c:	b.ne	415274 <run+0x6b0>  // b.any
  415110:	bl	40aed0 <sd_booted@plt>
  415114:	cmp	w0, #0x0
  415118:	b.le	415274 <run+0x6b0>
  41511c:	add	x0, sp, #0xf8
  415120:	mov	x2, x0
  415124:	mov	w1, #0x0                   	// #0
  415128:	adrp	x0, 451000 <_fini+0xa30>
  41512c:	add	x0, x0, #0x4c8
  415130:	bl	40a4a0 <cg_pid_get_path@plt>
  415134:	str	w0, [sp, #72]
  415138:	ldr	w0, [sp, #72]
  41513c:	cmp	w0, #0x0
  415140:	b.ge	415274 <run+0x6b0>  // b.tcont
  415144:	strb	wzr, [sp, #63]
  415148:	ldr	w0, [sp, #72]
  41514c:	cmn	w0, #0x7b
  415150:	b.eq	415160 <run+0x59c>  // b.none
  415154:	ldr	w0, [sp, #72]
  415158:	cmn	w0, #0x2
  41515c:	b.ne	415168 <run+0x5a4>  // b.any
  415160:	mov	w0, #0x1                   	// #1
  415164:	strb	w0, [sp, #63]
  415168:	nop
  41516c:	ldrb	w0, [sp, #63]
  415170:	cmp	w0, #0x0
  415174:	b.eq	4151f8 <run+0x634>  // b.none
  415178:	mov	w0, #0x7                   	// #7
  41517c:	str	w0, [sp, #136]
  415180:	ldr	w0, [sp, #72]
  415184:	str	w0, [sp, #140]
  415188:	mov	w0, #0x1                   	// #1
  41518c:	str	w0, [sp, #144]
  415190:	ldr	w0, [sp, #144]
  415194:	bl	40be30 <log_get_max_level_realm@plt>
  415198:	mov	w1, w0
  41519c:	ldr	w0, [sp, #136]
  4151a0:	and	w0, w0, #0x7
  4151a4:	cmp	w1, w0
  4151a8:	b.lt	4151ec <run+0x628>  // b.tstop
  4151ac:	ldr	w0, [sp, #144]
  4151b0:	lsl	w1, w0, #10
  4151b4:	ldr	w0, [sp, #136]
  4151b8:	orr	w6, w1, w0
  4151bc:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4151c0:	add	x1, x0, #0x66b
  4151c4:	adrp	x0, 451000 <_fini+0xa30>
  4151c8:	add	x5, x0, #0xe48
  4151cc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4151d0:	add	x4, x0, #0x588
  4151d4:	mov	w3, #0x6ef                 	// #1775
  4151d8:	mov	x2, x1
  4151dc:	ldr	w1, [sp, #140]
  4151e0:	mov	w0, w6
  4151e4:	bl	40b4f0 <log_internal_realm@plt>
  4151e8:	b	415274 <run+0x6b0>
  4151ec:	ldr	w0, [sp, #140]
  4151f0:	cmp	w0, #0x0
  4151f4:	b	415274 <run+0x6b0>
  4151f8:	mov	w0, #0x4                   	// #4
  4151fc:	str	w0, [sp, #124]
  415200:	ldr	w0, [sp, #72]
  415204:	str	w0, [sp, #128]
  415208:	mov	w0, #0x1                   	// #1
  41520c:	str	w0, [sp, #132]
  415210:	ldr	w0, [sp, #132]
  415214:	bl	40be30 <log_get_max_level_realm@plt>
  415218:	mov	w1, w0
  41521c:	ldr	w0, [sp, #124]
  415220:	and	w0, w0, #0x7
  415224:	cmp	w1, w0
  415228:	b.lt	41526c <run+0x6a8>  // b.tstop
  41522c:	ldr	w0, [sp, #132]
  415230:	lsl	w1, w0, #10
  415234:	ldr	w0, [sp, #124]
  415238:	orr	w6, w1, w0
  41523c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  415240:	add	x1, x0, #0x66b
  415244:	adrp	x0, 451000 <_fini+0xa30>
  415248:	add	x5, x0, #0xe68
  41524c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415250:	add	x4, x0, #0x588
  415254:	mov	w3, #0x6f1                 	// #1777
  415258:	mov	x2, x1
  41525c:	ldr	w1, [sp, #128]
  415260:	mov	w0, w6
  415264:	bl	40b4f0 <log_internal_realm@plt>
  415268:	b	415274 <run+0x6b0>
  41526c:	ldr	w0, [sp, #128]
  415270:	cmp	w0, #0x0
  415274:	add	x1, sp, #0x44
  415278:	add	x0, sp, #0x40
  41527c:	bl	412e18 <listen_fds>
  415280:	str	w0, [sp, #72]
  415284:	ldr	w0, [sp, #72]
  415288:	cmp	w0, #0x0
  41528c:	b.ge	415320 <run+0x75c>  // b.tcont
  415290:	mov	w0, #0x3                   	// #3
  415294:	str	w0, [sp, #212]
  415298:	ldr	w0, [sp, #72]
  41529c:	str	w0, [sp, #216]
  4152a0:	mov	w0, #0x1                   	// #1
  4152a4:	str	w0, [sp, #220]
  4152a8:	ldr	w0, [sp, #220]
  4152ac:	bl	40be30 <log_get_max_level_realm@plt>
  4152b0:	mov	w1, w0
  4152b4:	ldr	w0, [sp, #212]
  4152b8:	and	w0, w0, #0x7
  4152bc:	cmp	w1, w0
  4152c0:	b.lt	415308 <run+0x744>  // b.tstop
  4152c4:	ldr	w0, [sp, #220]
  4152c8:	lsl	w1, w0, #10
  4152cc:	ldr	w0, [sp, #212]
  4152d0:	orr	w6, w1, w0
  4152d4:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4152d8:	add	x1, x0, #0x66b
  4152dc:	adrp	x0, 451000 <_fini+0xa30>
  4152e0:	add	x5, x0, #0xe88
  4152e4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4152e8:	add	x4, x0, #0x588
  4152ec:	mov	w3, #0x6f7                 	// #1783
  4152f0:	mov	x2, x1
  4152f4:	ldr	w1, [sp, #216]
  4152f8:	mov	w0, w6
  4152fc:	bl	40b4f0 <log_internal_realm@plt>
  415300:	mov	w19, w0
  415304:	b	415660 <run+0xa9c>
  415308:	ldr	w0, [sp, #216]
  41530c:	cmp	w0, #0x0
  415310:	cneg	w0, w0, lt  // lt = tstop
  415314:	and	w0, w0, #0xff
  415318:	neg	w19, w0
  41531c:	b	415660 <run+0xa9c>
  415320:	ldr	w1, [sp, #64]
  415324:	ldr	w2, [sp, #68]
  415328:	ldr	x3, [sp, #248]
  41532c:	add	x0, sp, #0x100
  415330:	bl	413884 <manager_new>
  415334:	str	w0, [sp, #72]
  415338:	ldr	w0, [sp, #72]
  41533c:	cmp	w0, #0x0
  415340:	b.ge	4153d4 <run+0x810>  // b.tcont
  415344:	mov	w0, #0x3                   	// #3
  415348:	str	w0, [sp, #200]
  41534c:	ldr	w0, [sp, #72]
  415350:	str	w0, [sp, #204]
  415354:	mov	w0, #0x1                   	// #1
  415358:	str	w0, [sp, #208]
  41535c:	ldr	w0, [sp, #208]
  415360:	bl	40be30 <log_get_max_level_realm@plt>
  415364:	mov	w1, w0
  415368:	ldr	w0, [sp, #200]
  41536c:	and	w0, w0, #0x7
  415370:	cmp	w1, w0
  415374:	b.lt	4153bc <run+0x7f8>  // b.tstop
  415378:	ldr	w0, [sp, #208]
  41537c:	lsl	w1, w0, #10
  415380:	ldr	w0, [sp, #200]
  415384:	orr	w6, w1, w0
  415388:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41538c:	add	x1, x0, #0x66b
  415390:	adrp	x0, 451000 <_fini+0xa30>
  415394:	add	x5, x0, #0xea8
  415398:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41539c:	add	x4, x0, #0x588
  4153a0:	mov	w3, #0x6fb                 	// #1787
  4153a4:	mov	x2, x1
  4153a8:	ldr	w1, [sp, #204]
  4153ac:	mov	w0, w6
  4153b0:	bl	40b4f0 <log_internal_realm@plt>
  4153b4:	mov	w19, w0
  4153b8:	b	415660 <run+0xa9c>
  4153bc:	ldr	w0, [sp, #204]
  4153c0:	cmp	w0, #0x0
  4153c4:	cneg	w0, w0, lt  // lt = tstop
  4153c8:	and	w0, w0, #0xff
  4153cc:	neg	w19, w0
  4153d0:	b	415660 <run+0xa9c>
  4153d4:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4153d8:	add	x0, x0, #0x18c
  4153dc:	ldr	w0, [x0]
  4153e0:	cmp	w0, #0x0
  4153e4:	b.eq	415654 <run+0xa90>  // b.none
  4153e8:	mov	w0, #0x6                   	// #6
  4153ec:	str	w0, [sp, #148]
  4153f0:	str	wzr, [sp, #152]
  4153f4:	mov	w0, #0x1                   	// #1
  4153f8:	str	w0, [sp, #156]
  4153fc:	ldr	w0, [sp, #156]
  415400:	bl	40be30 <log_get_max_level_realm@plt>
  415404:	mov	w1, w0
  415408:	ldr	w0, [sp, #148]
  41540c:	and	w0, w0, #0x7
  415410:	cmp	w1, w0
  415414:	b.lt	415458 <run+0x894>  // b.tstop
  415418:	ldr	w0, [sp, #156]
  41541c:	lsl	w1, w0, #10
  415420:	ldr	w0, [sp, #148]
  415424:	orr	w6, w1, w0
  415428:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  41542c:	add	x1, x0, #0x66b
  415430:	adrp	x0, 451000 <_fini+0xa30>
  415434:	add	x5, x0, #0xec8
  415438:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41543c:	add	x4, x0, #0x588
  415440:	mov	w3, #0x700                 	// #1792
  415444:	mov	x2, x1
  415448:	ldr	w1, [sp, #152]
  41544c:	mov	w0, w6
  415450:	bl	40b4f0 <log_internal_realm@plt>
  415454:	b	415460 <run+0x89c>
  415458:	ldr	w0, [sp, #152]
  41545c:	cmp	w0, #0x0
  415460:	mov	w0, #0x1                   	// #1
  415464:	bl	40be30 <log_get_max_level_realm@plt>
  415468:	cmp	w0, #0x6
  41546c:	b.gt	415500 <run+0x93c>
  415470:	bl	40c398 <make_null_stdio>
  415474:	str	w0, [sp, #72]
  415478:	ldr	w0, [sp, #72]
  41547c:	cmp	w0, #0x0
  415480:	b.ge	415500 <run+0x93c>  // b.tcont
  415484:	mov	w0, #0x4                   	// #4
  415488:	str	w0, [sp, #160]
  41548c:	ldr	w0, [sp, #72]
  415490:	str	w0, [sp, #164]
  415494:	mov	w0, #0x1                   	// #1
  415498:	str	w0, [sp, #168]
  41549c:	ldr	w0, [sp, #168]
  4154a0:	bl	40be30 <log_get_max_level_realm@plt>
  4154a4:	mov	w1, w0
  4154a8:	ldr	w0, [sp, #160]
  4154ac:	and	w0, w0, #0x7
  4154b0:	cmp	w1, w0
  4154b4:	b.lt	4154f8 <run+0x934>  // b.tstop
  4154b8:	ldr	w0, [sp, #168]
  4154bc:	lsl	w1, w0, #10
  4154c0:	ldr	w0, [sp, #160]
  4154c4:	orr	w6, w1, w0
  4154c8:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  4154cc:	add	x1, x0, #0x66b
  4154d0:	adrp	x0, 451000 <_fini+0xa30>
  4154d4:	add	x5, x0, #0xee0
  4154d8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4154dc:	add	x4, x0, #0x588
  4154e0:	mov	w3, #0x706                 	// #1798
  4154e4:	mov	x2, x1
  4154e8:	ldr	w1, [sp, #164]
  4154ec:	mov	w0, w6
  4154f0:	bl	40b4f0 <log_internal_realm@plt>
  4154f4:	b	415500 <run+0x93c>
  4154f8:	ldr	w0, [sp, #164]
  4154fc:	cmp	w0, #0x0
  415500:	bl	40b1d0 <fork@plt>
  415504:	str	w0, [sp, #172]
  415508:	ldr	w0, [sp, #172]
  41550c:	cmp	w0, #0x0
  415510:	b.ge	4155a8 <run+0x9e4>  // b.tcont
  415514:	mov	w0, #0x3                   	// #3
  415518:	str	w0, [sp, #188]
  41551c:	bl	40b040 <__errno_location@plt>
  415520:	ldr	w0, [x0]
  415524:	str	w0, [sp, #192]
  415528:	mov	w0, #0x1                   	// #1
  41552c:	str	w0, [sp, #196]
  415530:	ldr	w0, [sp, #196]
  415534:	bl	40be30 <log_get_max_level_realm@plt>
  415538:	mov	w1, w0
  41553c:	ldr	w0, [sp, #188]
  415540:	and	w0, w0, #0x7
  415544:	cmp	w1, w0
  415548:	b.lt	415590 <run+0x9cc>  // b.tstop
  41554c:	ldr	w0, [sp, #196]
  415550:	lsl	w1, w0, #10
  415554:	ldr	w0, [sp, #188]
  415558:	orr	w6, w1, w0
  41555c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  415560:	add	x1, x0, #0x66b
  415564:	adrp	x0, 451000 <_fini+0xa30>
  415568:	add	x5, x0, #0xf18
  41556c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415570:	add	x4, x0, #0x588
  415574:	mov	w3, #0x70b                 	// #1803
  415578:	mov	x2, x1
  41557c:	ldr	w1, [sp, #192]
  415580:	mov	w0, w6
  415584:	bl	40b4f0 <log_internal_realm@plt>
  415588:	mov	w19, w0
  41558c:	b	415660 <run+0xa9c>
  415590:	ldr	w0, [sp, #192]
  415594:	cmp	w0, #0x0
  415598:	cneg	w0, w0, lt  // lt = tstop
  41559c:	and	w0, w0, #0xff
  4155a0:	neg	w19, w0
  4155a4:	b	415660 <run+0xa9c>
  4155a8:	ldr	w0, [sp, #172]
  4155ac:	cmp	w0, #0x0
  4155b0:	b.le	4155bc <run+0x9f8>
  4155b4:	mov	w19, #0x0                   	// #0
  4155b8:	b	415660 <run+0xa9c>
  4155bc:	bl	40ad80 <setsid@plt>
  4155c0:	mov	w0, #0xfffffc18            	// #-1000
  4155c4:	bl	40bbd0 <set_oom_score_adjust@plt>
  4155c8:	str	w0, [sp, #72]
  4155cc:	ldr	w0, [sp, #72]
  4155d0:	cmp	w0, #0x0
  4155d4:	b.ge	415654 <run+0xa90>  // b.tcont
  4155d8:	mov	w0, #0x7                   	// #7
  4155dc:	str	w0, [sp, #176]
  4155e0:	ldr	w0, [sp, #72]
  4155e4:	str	w0, [sp, #180]
  4155e8:	mov	w0, #0x1                   	// #1
  4155ec:	str	w0, [sp, #184]
  4155f0:	ldr	w0, [sp, #184]
  4155f4:	bl	40be30 <log_get_max_level_realm@plt>
  4155f8:	mov	w1, w0
  4155fc:	ldr	w0, [sp, #176]
  415600:	and	w0, w0, #0x7
  415604:	cmp	w1, w0
  415608:	b.lt	41564c <run+0xa88>  // b.tstop
  41560c:	ldr	w0, [sp, #184]
  415610:	lsl	w1, w0, #10
  415614:	ldr	w0, [sp, #176]
  415618:	orr	w6, w1, w0
  41561c:	adrp	x0, 450000 <config_parse_hwaddrs+0x54>
  415620:	add	x1, x0, #0x66b
  415624:	adrp	x0, 451000 <_fini+0xa30>
  415628:	add	x5, x0, #0xf38
  41562c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415630:	add	x4, x0, #0x588
  415634:	mov	w3, #0x715                 	// #1813
  415638:	mov	x2, x1
  41563c:	ldr	w1, [sp, #180]
  415640:	mov	w0, w6
  415644:	bl	40b4f0 <log_internal_realm@plt>
  415648:	b	415654 <run+0xa90>
  41564c:	ldr	w0, [sp, #180]
  415650:	cmp	w0, #0x0
  415654:	ldr	x0, [sp, #256]
  415658:	bl	413ca4 <main_loop>
  41565c:	mov	w19, w0
  415660:	add	x0, sp, #0x100
  415664:	bl	40d5a4 <manager_freep>
  415668:	add	x0, sp, #0xf8
  41566c:	bl	40c098 <freep>
  415670:	mov	w1, w19
  415674:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  415678:	add	x0, x0, #0x7a8
  41567c:	ldr	x2, [sp, #440]
  415680:	ldr	x0, [x0]
  415684:	eor	x0, x2, x0
  415688:	cmp	x0, #0x0
  41568c:	b.eq	415694 <run+0xad0>  // b.none
  415690:	bl	40b280 <__stack_chk_fail@plt>
  415694:	mov	w0, w1
  415698:	ldr	x19, [sp, #16]
  41569c:	ldp	x29, x30, [sp], #448
  4156a0:	ret

00000000004156a4 <main>:
  4156a4:	stp	x29, x30, [sp, #-48]!
  4156a8:	mov	x29, sp
  4156ac:	str	w0, [sp, #28]
  4156b0:	str	x1, [sp, #16]
  4156b4:	ldr	x1, [sp, #16]
  4156b8:	ldr	w0, [sp, #28]
  4156bc:	bl	40c18c <save_argc_argv>
  4156c0:	ldr	x1, [sp, #16]
  4156c4:	ldr	w0, [sp, #28]
  4156c8:	bl	414bc4 <run>
  4156cc:	str	w0, [sp, #44]
  4156d0:	bl	40b350 <ask_password_agent_close@plt>
  4156d4:	bl	40a750 <polkit_agent_close@plt>
  4156d8:	bl	40b390 <pager_close@plt>
  4156dc:	bl	40bb90 <mac_selinux_finish@plt>
  4156e0:	bl	40c4a8 <static_destruct>
  4156e4:	ldr	w0, [sp, #44]
  4156e8:	lsr	w0, w0, #31
  4156ec:	ldp	x29, x30, [sp], #48
  4156f0:	ret

00000000004156f4 <mfree>:
  4156f4:	stp	x29, x30, [sp, #-32]!
  4156f8:	mov	x29, sp
  4156fc:	str	x0, [sp, #24]
  415700:	ldr	x0, [sp, #24]
  415704:	bl	40ba20 <free@plt>
  415708:	mov	x0, #0x0                   	// #0
  41570c:	ldp	x29, x30, [sp], #32
  415710:	ret

0000000000415714 <size_multiply_overflow>:
  415714:	sub	sp, sp, #0x10
  415718:	str	x0, [sp, #8]
  41571c:	str	x1, [sp]
  415720:	ldr	x0, [sp]
  415724:	cmp	x0, #0x0
  415728:	cset	w0, ne  // ne = any
  41572c:	and	w0, w0, #0xff
  415730:	and	x0, x0, #0xff
  415734:	cmp	x0, #0x0
  415738:	b.eq	41577c <size_multiply_overflow+0x68>  // b.none
  41573c:	mov	x2, #0x0                   	// #0
  415740:	ldr	x1, [sp, #8]
  415744:	ldr	x0, [sp]
  415748:	umulh	x0, x1, x0
  41574c:	cmp	x0, #0x0
  415750:	b.eq	415758 <size_multiply_overflow+0x44>  // b.none
  415754:	mov	x2, #0x1                   	// #1
  415758:	mov	x0, x2
  41575c:	cmp	x0, #0x0
  415760:	cset	w0, ne  // ne = any
  415764:	and	w0, w0, #0xff
  415768:	and	x0, x0, #0xff
  41576c:	cmp	x0, #0x0
  415770:	b.eq	41577c <size_multiply_overflow+0x68>  // b.none
  415774:	mov	w0, #0x1                   	// #1
  415778:	b	415780 <size_multiply_overflow+0x6c>
  41577c:	mov	w0, #0x0                   	// #0
  415780:	and	w0, w0, #0x1
  415784:	and	w0, w0, #0xff
  415788:	add	sp, sp, #0x10
  41578c:	ret

0000000000415790 <malloc_multiply>:
  415790:	stp	x29, x30, [sp, #-32]!
  415794:	mov	x29, sp
  415798:	str	x0, [sp, #24]
  41579c:	str	x1, [sp, #16]
  4157a0:	ldr	x1, [sp, #16]
  4157a4:	ldr	x0, [sp, #24]
  4157a8:	bl	415714 <size_multiply_overflow>
  4157ac:	and	w0, w0, #0xff
  4157b0:	cmp	w0, #0x0
  4157b4:	b.eq	4157c0 <malloc_multiply+0x30>  // b.none
  4157b8:	mov	x0, #0x0                   	// #0
  4157bc:	b	4157dc <malloc_multiply+0x4c>
  4157c0:	ldr	x1, [sp, #24]
  4157c4:	ldr	x0, [sp, #16]
  4157c8:	mul	x0, x1, x0
  4157cc:	cmp	x0, #0x0
  4157d0:	b.ne	4157d8 <malloc_multiply+0x48>  // b.any
  4157d4:	mov	x0, #0x1                   	// #1
  4157d8:	bl	40b480 <malloc@plt>
  4157dc:	ldp	x29, x30, [sp], #32
  4157e0:	ret

00000000004157e4 <ERRNO_IS_DISCONNECT>:
  4157e4:	sub	sp, sp, #0x20
  4157e8:	str	w0, [sp, #12]
  4157ec:	strb	wzr, [sp, #31]
  4157f0:	ldr	w0, [sp, #12]
  4157f4:	cmp	w0, #0x0
  4157f8:	cneg	w0, w0, lt  // lt = tstop
  4157fc:	cmp	w0, #0x20
  415800:	b.eq	415850 <ERRNO_IS_DISCONNECT+0x6c>  // b.none
  415804:	cmp	w0, #0x20
  415808:	b.lt	415858 <ERRNO_IS_DISCONNECT+0x74>  // b.tstop
  41580c:	cmp	w0, #0x71
  415810:	b.gt	415858 <ERRNO_IS_DISCONNECT+0x74>
  415814:	cmp	w0, #0x40
  415818:	b.lt	415858 <ERRNO_IS_DISCONNECT+0x74>  // b.tstop
  41581c:	sub	w0, w0, #0x40
  415820:	mov	x1, #0x1                   	// #1
  415824:	lsl	x1, x1, x0
  415828:	mov	x0, #0x81                  	// #129
  41582c:	movk	x0, #0x1000, lsl #16
  415830:	movk	x0, #0x99f0, lsl #32
  415834:	movk	x0, #0x3, lsl #48
  415838:	and	x0, x1, x0
  41583c:	cmp	x0, #0x0
  415840:	cset	w0, ne  // ne = any
  415844:	and	w0, w0, #0xff
  415848:	cmp	w0, #0x0
  41584c:	b.eq	415858 <ERRNO_IS_DISCONNECT+0x74>  // b.none
  415850:	mov	w0, #0x1                   	// #1
  415854:	strb	w0, [sp, #31]
  415858:	nop
  41585c:	ldrb	w0, [sp, #31]
  415860:	add	sp, sp, #0x20
  415864:	ret

0000000000415868 <ERRNO_IS_ACCEPT_AGAIN>:
  415868:	stp	x29, x30, [sp, #-48]!
  41586c:	mov	x29, sp
  415870:	str	w0, [sp, #28]
  415874:	ldr	w0, [sp, #28]
  415878:	bl	4157e4 <ERRNO_IS_DISCONNECT>
  41587c:	and	w0, w0, #0xff
  415880:	cmp	w0, #0x0
  415884:	b.ne	4158d0 <ERRNO_IS_ACCEPT_AGAIN+0x68>  // b.any
  415888:	strb	wzr, [sp, #47]
  41588c:	ldr	w0, [sp, #28]
  415890:	cmp	w0, #0x0
  415894:	cneg	w0, w0, lt  // lt = tstop
  415898:	cmp	w0, #0x5f
  41589c:	b.eq	4158b8 <ERRNO_IS_ACCEPT_AGAIN+0x50>  // b.none
  4158a0:	cmp	w0, #0x5f
  4158a4:	b.gt	4158c0 <ERRNO_IS_ACCEPT_AGAIN+0x58>
  4158a8:	cmp	w0, #0x4
  4158ac:	b.eq	4158b8 <ERRNO_IS_ACCEPT_AGAIN+0x50>  // b.none
  4158b0:	cmp	w0, #0xb
  4158b4:	b.ne	4158c0 <ERRNO_IS_ACCEPT_AGAIN+0x58>  // b.any
  4158b8:	mov	w0, #0x1                   	// #1
  4158bc:	strb	w0, [sp, #47]
  4158c0:	nop
  4158c4:	ldrb	w0, [sp, #47]
  4158c8:	cmp	w0, #0x0
  4158cc:	b.eq	4158d8 <ERRNO_IS_ACCEPT_AGAIN+0x70>  // b.none
  4158d0:	mov	w0, #0x1                   	// #1
  4158d4:	b	4158dc <ERRNO_IS_ACCEPT_AGAIN+0x74>
  4158d8:	mov	w0, #0x0                   	// #0
  4158dc:	and	w0, w0, #0x1
  4158e0:	and	w0, w0, #0xff
  4158e4:	ldp	x29, x30, [sp], #48
  4158e8:	ret

00000000004158ec <closep>:
  4158ec:	stp	x29, x30, [sp, #-32]!
  4158f0:	mov	x29, sp
  4158f4:	str	x0, [sp, #24]
  4158f8:	ldr	x0, [sp, #24]
  4158fc:	ldr	w0, [x0]
  415900:	bl	40aad0 <safe_close@plt>
  415904:	nop
  415908:	ldp	x29, x30, [sp], #32
  41590c:	ret

0000000000415910 <setsockopt_int>:
  415910:	stp	x29, x30, [sp, #-32]!
  415914:	mov	x29, sp
  415918:	str	w0, [sp, #28]
  41591c:	str	w1, [sp, #24]
  415920:	str	w2, [sp, #20]
  415924:	str	w3, [sp, #16]
  415928:	add	x0, sp, #0x10
  41592c:	mov	w4, #0x4                   	// #4
  415930:	mov	x3, x0
  415934:	ldr	w2, [sp, #20]
  415938:	ldr	w1, [sp, #24]
  41593c:	ldr	w0, [sp, #28]
  415940:	bl	40b810 <setsockopt@plt>
  415944:	cmp	w0, #0x0
  415948:	b.ge	41595c <setsockopt_int+0x4c>  // b.tcont
  41594c:	bl	40b040 <__errno_location@plt>
  415950:	ldr	w0, [x0]
  415954:	neg	w0, w0
  415958:	b	415960 <setsockopt_int+0x50>
  41595c:	mov	w0, #0x0                   	// #0
  415960:	ldp	x29, x30, [sp], #32
  415964:	ret

0000000000415968 <udev_ctrl_new_from_fd>:
  415968:	stp	x29, x30, [sp, #-320]!
  41596c:	mov	x29, sp
  415970:	str	x19, [sp, #16]
  415974:	str	x0, [sp, #40]
  415978:	str	w1, [sp, #36]
  41597c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  415980:	ldr	x0, [x0, #4032]
  415984:	ldr	x1, [x0]
  415988:	str	x1, [sp, #312]
  41598c:	mov	x1, #0x0                   	// #0
  415990:	mov	w0, #0xffffffff            	// #-1
  415994:	str	w0, [sp, #60]
  415998:	ldr	x0, [sp, #40]
  41599c:	cmp	x0, #0x0
  4159a0:	cset	w0, eq  // eq = none
  4159a4:	and	w0, w0, #0xff
  4159a8:	and	x0, x0, #0xff
  4159ac:	cmp	x0, #0x0
  4159b0:	b.eq	4159dc <udev_ctrl_new_from_fd+0x74>  // b.none
  4159b4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4159b8:	add	x1, x0, #0x593
  4159bc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4159c0:	add	x4, x0, #0x948
  4159c4:	mov	w3, #0x3f                  	// #63
  4159c8:	mov	x2, x1
  4159cc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4159d0:	add	x1, x0, #0x5a8
  4159d4:	mov	w0, #0x1                   	// #1
  4159d8:	bl	40abb0 <log_assert_failed_realm@plt>
  4159dc:	ldr	w0, [sp, #36]
  4159e0:	cmp	w0, #0x0
  4159e4:	b.ge	415aa0 <udev_ctrl_new_from_fd+0x138>  // b.tcont
  4159e8:	mov	w2, #0x0                   	// #0
  4159ec:	mov	w1, #0x805                 	// #2053
  4159f0:	movk	w1, #0x8, lsl #16
  4159f4:	mov	w0, #0x1                   	// #1
  4159f8:	bl	40a830 <socket@plt>
  4159fc:	str	w0, [sp, #60]
  415a00:	ldr	w0, [sp, #60]
  415a04:	cmp	w0, #0x0
  415a08:	b.ge	415aa0 <udev_ctrl_new_from_fd+0x138>  // b.tcont
  415a0c:	mov	w0, #0x3                   	// #3
  415a10:	str	w0, [sp, #64]
  415a14:	bl	40b040 <__errno_location@plt>
  415a18:	ldr	w0, [x0]
  415a1c:	str	w0, [sp, #68]
  415a20:	mov	w0, #0x1                   	// #1
  415a24:	str	w0, [sp, #72]
  415a28:	ldr	w0, [sp, #72]
  415a2c:	bl	40be30 <log_get_max_level_realm@plt>
  415a30:	mov	w1, w0
  415a34:	ldr	w0, [sp, #64]
  415a38:	and	w0, w0, #0x7
  415a3c:	cmp	w1, w0
  415a40:	b.lt	415a88 <udev_ctrl_new_from_fd+0x120>  // b.tstop
  415a44:	ldr	w0, [sp, #72]
  415a48:	lsl	w1, w0, #10
  415a4c:	ldr	w0, [sp, #64]
  415a50:	orr	w6, w1, w0
  415a54:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415a58:	add	x1, x0, #0x593
  415a5c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415a60:	add	x5, x0, #0x5b0
  415a64:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415a68:	add	x4, x0, #0x960
  415a6c:	mov	w3, #0x44                  	// #68
  415a70:	mov	x2, x1
  415a74:	ldr	w1, [sp, #68]
  415a78:	mov	w0, w6
  415a7c:	bl	40b4f0 <log_internal_realm@plt>
  415a80:	mov	w19, w0
  415a84:	b	415d14 <udev_ctrl_new_from_fd+0x3ac>
  415a88:	ldr	w0, [sp, #68]
  415a8c:	cmp	w0, #0x0
  415a90:	cneg	w0, w0, lt  // lt = tstop
  415a94:	and	w0, w0, #0xff
  415a98:	neg	w19, w0
  415a9c:	b	415d14 <udev_ctrl_new_from_fd+0x3ac>
  415aa0:	mov	x1, #0x1                   	// #1
  415aa4:	mov	x0, #0xc0                  	// #192
  415aa8:	bl	415790 <malloc_multiply>
  415aac:	str	x0, [sp, #96]
  415ab0:	ldr	x0, [sp, #96]
  415ab4:	cmp	x0, #0x0
  415ab8:	b.ne	415ac4 <udev_ctrl_new_from_fd+0x15c>  // b.any
  415abc:	mov	w19, #0xfffffff4            	// #-12
  415ac0:	b	415d14 <udev_ctrl_new_from_fd+0x3ac>
  415ac4:	ldr	w0, [sp, #36]
  415ac8:	cmp	w0, #0x0
  415acc:	b.ge	415ae8 <udev_ctrl_new_from_fd+0x180>  // b.tcont
  415ad0:	ldr	w0, [sp, #60]
  415ad4:	str	w0, [sp, #76]
  415ad8:	mov	w0, #0xffffffff            	// #-1
  415adc:	str	w0, [sp, #60]
  415ae0:	ldr	w1, [sp, #76]
  415ae4:	b	415aec <udev_ctrl_new_from_fd+0x184>
  415ae8:	ldr	w1, [sp, #36]
  415aec:	ldr	w0, [sp, #36]
  415af0:	mvn	w0, w0
  415af4:	lsr	w0, w0, #31
  415af8:	and	w2, w0, #0xff
  415afc:	ldr	x0, [sp, #96]
  415b00:	stp	xzr, xzr, [x0]
  415b04:	stp	xzr, xzr, [x0, #16]
  415b08:	stp	xzr, xzr, [x0, #32]
  415b0c:	stp	xzr, xzr, [x0, #48]
  415b10:	stp	xzr, xzr, [x0, #64]
  415b14:	stp	xzr, xzr, [x0, #80]
  415b18:	stp	xzr, xzr, [x0, #96]
  415b1c:	stp	xzr, xzr, [x0, #112]
  415b20:	stp	xzr, xzr, [x0, #128]
  415b24:	stp	xzr, xzr, [x0, #144]
  415b28:	stp	xzr, xzr, [x0, #160]
  415b2c:	stp	xzr, xzr, [x0, #176]
  415b30:	ldr	x0, [sp, #96]
  415b34:	mov	w3, #0x1                   	// #1
  415b38:	str	w3, [x0]
  415b3c:	ldr	x0, [sp, #96]
  415b40:	str	w1, [x0, #4]
  415b44:	ldr	x0, [sp, #96]
  415b48:	mov	w1, #0xffffffff            	// #-1
  415b4c:	str	w1, [x0, #8]
  415b50:	ldr	x1, [sp, #96]
  415b54:	ldrb	w0, [x1, #148]
  415b58:	bfxil	w0, w2, #0, #1
  415b5c:	strb	w0, [x1, #148]
  415b60:	ldr	x0, [sp, #96]
  415b64:	ldr	w0, [x0, #4]
  415b68:	mov	w3, #0x1                   	// #1
  415b6c:	mov	w2, #0x10                  	// #16
  415b70:	mov	w1, #0x1                   	// #1
  415b74:	bl	415910 <setsockopt_int>
  415b78:	str	w0, [sp, #80]
  415b7c:	ldr	w0, [sp, #80]
  415b80:	cmp	w0, #0x0
  415b84:	b.ge	415c04 <udev_ctrl_new_from_fd+0x29c>  // b.tcont
  415b88:	mov	w0, #0x4                   	// #4
  415b8c:	str	w0, [sp, #84]
  415b90:	ldr	w0, [sp, #80]
  415b94:	str	w0, [sp, #88]
  415b98:	mov	w0, #0x1                   	// #1
  415b9c:	str	w0, [sp, #92]
  415ba0:	ldr	w0, [sp, #92]
  415ba4:	bl	40be30 <log_get_max_level_realm@plt>
  415ba8:	mov	w1, w0
  415bac:	ldr	w0, [sp, #84]
  415bb0:	and	w0, w0, #0x7
  415bb4:	cmp	w1, w0
  415bb8:	b.lt	415bfc <udev_ctrl_new_from_fd+0x294>  // b.tstop
  415bbc:	ldr	w0, [sp, #92]
  415bc0:	lsl	w1, w0, #10
  415bc4:	ldr	w0, [sp, #84]
  415bc8:	orr	w6, w1, w0
  415bcc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415bd0:	add	x1, x0, #0x593
  415bd4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415bd8:	add	x5, x0, #0x5d0
  415bdc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415be0:	add	x4, x0, #0x960
  415be4:	mov	w3, #0x58                  	// #88
  415be8:	mov	x2, x1
  415bec:	ldr	w1, [sp, #88]
  415bf0:	mov	w0, w6
  415bf4:	bl	40b4f0 <log_internal_realm@plt>
  415bf8:	b	415c04 <udev_ctrl_new_from_fd+0x29c>
  415bfc:	ldr	w0, [sp, #88]
  415c00:	cmp	w0, #0x0
  415c04:	ldr	x0, [sp, #96]
  415c08:	add	x2, x0, #0x10
  415c0c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415c10:	add	x1, x0, #0x610
  415c14:	mov	x0, x2
  415c18:	ldp	x2, x3, [x1]
  415c1c:	stp	x2, x3, [x0]
  415c20:	ldp	x2, x3, [x1, #16]
  415c24:	stp	x2, x3, [x0, #16]
  415c28:	ldp	x2, x3, [x1, #32]
  415c2c:	stp	x2, x3, [x0, #32]
  415c30:	ldp	x2, x3, [x1, #48]
  415c34:	stp	x2, x3, [x0, #48]
  415c38:	ldp	x2, x3, [x1, #64]
  415c3c:	stp	x2, x3, [x0, #64]
  415c40:	ldp	x2, x3, [x1, #80]
  415c44:	stp	x2, x3, [x0, #80]
  415c48:	ldr	x2, [x1, #96]
  415c4c:	str	x2, [x0, #96]
  415c50:	ldur	x1, [x1, #102]
  415c54:	stur	x1, [x0, #102]
  415c58:	ldr	x0, [sp, #96]
  415c5c:	add	x0, x0, #0x10
  415c60:	str	x0, [sp, #104]
  415c64:	ldr	x0, [sp, #104]
  415c68:	ldrh	w0, [x0]
  415c6c:	cmp	w0, #0x1
  415c70:	cset	w0, ne  // ne = any
  415c74:	and	w0, w0, #0xff
  415c78:	and	x0, x0, #0xff
  415c7c:	cmp	x0, #0x0
  415c80:	b.eq	415cac <udev_ctrl_new_from_fd+0x344>  // b.none
  415c84:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415c88:	add	x1, x0, #0x593
  415c8c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415c90:	add	x4, x0, #0x948
  415c94:	mov	w3, #0x5f                  	// #95
  415c98:	mov	x2, x1
  415c9c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415ca0:	add	x1, x0, #0x5f0
  415ca4:	mov	w0, #0x1                   	// #1
  415ca8:	bl	40abb0 <log_assert_failed_realm@plt>
  415cac:	ldr	x0, [sp, #104]
  415cb0:	ldrb	w0, [x0, #2]
  415cb4:	cmp	w0, #0x0
  415cb8:	b.ne	415cd8 <udev_ctrl_new_from_fd+0x370>  // b.any
  415cbc:	ldr	x0, [sp, #104]
  415cc0:	add	x0, x0, #0x2
  415cc4:	add	x0, x0, #0x1
  415cc8:	mov	x1, #0x6b                  	// #107
  415ccc:	bl	40a800 <strnlen@plt>
  415cd0:	add	x0, x0, #0x3
  415cd4:	b	415cec <udev_ctrl_new_from_fd+0x384>
  415cd8:	ldr	x0, [sp, #104]
  415cdc:	add	x0, x0, #0x2
  415ce0:	mov	x1, #0x6c                  	// #108
  415ce4:	bl	40a800 <strnlen@plt>
  415ce8:	add	x0, x0, #0x3
  415cec:	mov	w1, w0
  415cf0:	ldr	x0, [sp, #96]
  415cf4:	str	w1, [x0, #144]
  415cf8:	ldr	x0, [sp, #96]
  415cfc:	str	x0, [sp, #112]
  415d00:	str	xzr, [sp, #96]
  415d04:	ldr	x1, [sp, #112]
  415d08:	ldr	x0, [sp, #40]
  415d0c:	str	x1, [x0]
  415d10:	mov	w19, #0x0                   	// #0
  415d14:	add	x0, sp, #0x3c
  415d18:	bl	4158ec <closep>
  415d1c:	mov	w1, w19
  415d20:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  415d24:	ldr	x0, [x0, #4032]
  415d28:	ldr	x2, [sp, #312]
  415d2c:	ldr	x0, [x0]
  415d30:	eor	x0, x2, x0
  415d34:	cmp	x0, #0x0
  415d38:	b.eq	415d40 <udev_ctrl_new_from_fd+0x3d8>  // b.none
  415d3c:	bl	40b280 <__stack_chk_fail@plt>
  415d40:	mov	w0, w1
  415d44:	ldr	x19, [sp, #16]
  415d48:	ldp	x29, x30, [sp], #320
  415d4c:	ret

0000000000415d50 <udev_ctrl_enable_receiving>:
  415d50:	stp	x29, x30, [sp, #-64]!
  415d54:	mov	x29, sp
  415d58:	str	x0, [sp, #24]
  415d5c:	ldr	x0, [sp, #24]
  415d60:	cmp	x0, #0x0
  415d64:	cset	w0, eq  // eq = none
  415d68:	and	w0, w0, #0xff
  415d6c:	and	x0, x0, #0xff
  415d70:	cmp	x0, #0x0
  415d74:	b.eq	415da0 <udev_ctrl_enable_receiving+0x50>  // b.none
  415d78:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415d7c:	add	x1, x0, #0x593
  415d80:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415d84:	add	x4, x0, #0x978
  415d88:	mov	w3, #0x68                  	// #104
  415d8c:	mov	x2, x1
  415d90:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415d94:	add	x1, x0, #0x680
  415d98:	mov	w0, #0x1                   	// #1
  415d9c:	bl	40abb0 <log_assert_failed_realm@plt>
  415da0:	ldr	x0, [sp, #24]
  415da4:	ldrb	w0, [x0, #148]
  415da8:	and	w0, w0, #0x1
  415dac:	and	w0, w0, #0xff
  415db0:	cmp	w0, #0x0
  415db4:	b.eq	415dc0 <udev_ctrl_enable_receiving+0x70>  // b.none
  415db8:	mov	w0, #0x0                   	// #0
  415dbc:	b	415fa8 <udev_ctrl_enable_receiving+0x258>
  415dc0:	ldr	x0, [sp, #24]
  415dc4:	ldr	w3, [x0, #4]
  415dc8:	ldr	x0, [sp, #24]
  415dcc:	add	x0, x0, #0x10
  415dd0:	mov	x1, x0
  415dd4:	ldr	x0, [sp, #24]
  415dd8:	ldr	w0, [x0, #144]
  415ddc:	mov	w2, w0
  415de0:	mov	w0, w3
  415de4:	bl	40b500 <bind@plt>
  415de8:	str	w0, [sp, #36]
  415dec:	ldr	w0, [sp, #36]
  415df0:	cmp	w0, #0x0
  415df4:	b.ge	415e40 <udev_ctrl_enable_receiving+0xf0>  // b.tcont
  415df8:	bl	40b040 <__errno_location@plt>
  415dfc:	ldr	w0, [x0]
  415e00:	cmp	w0, #0x62
  415e04:	b.ne	415e40 <udev_ctrl_enable_receiving+0xf0>  // b.any
  415e08:	ldr	x0, [sp, #24]
  415e0c:	add	x0, x0, #0x10
  415e10:	bl	40af30 <sockaddr_un_unlink@plt>
  415e14:	ldr	x0, [sp, #24]
  415e18:	ldr	w3, [x0, #4]
  415e1c:	ldr	x0, [sp, #24]
  415e20:	add	x0, x0, #0x10
  415e24:	mov	x1, x0
  415e28:	ldr	x0, [sp, #24]
  415e2c:	ldr	w0, [x0, #144]
  415e30:	mov	w2, w0
  415e34:	mov	w0, w3
  415e38:	bl	40b500 <bind@plt>
  415e3c:	str	w0, [sp, #36]
  415e40:	ldr	w0, [sp, #36]
  415e44:	cmp	w0, #0x0
  415e48:	b.ge	415edc <udev_ctrl_enable_receiving+0x18c>  // b.tcont
  415e4c:	mov	w0, #0x3                   	// #3
  415e50:	str	w0, [sp, #52]
  415e54:	bl	40b040 <__errno_location@plt>
  415e58:	ldr	w0, [x0]
  415e5c:	str	w0, [sp, #56]
  415e60:	mov	w0, #0x1                   	// #1
  415e64:	str	w0, [sp, #60]
  415e68:	ldr	w0, [sp, #60]
  415e6c:	bl	40be30 <log_get_max_level_realm@plt>
  415e70:	mov	w1, w0
  415e74:	ldr	w0, [sp, #52]
  415e78:	and	w0, w0, #0x7
  415e7c:	cmp	w1, w0
  415e80:	b.lt	415ec4 <udev_ctrl_enable_receiving+0x174>  // b.tstop
  415e84:	ldr	w0, [sp, #60]
  415e88:	lsl	w1, w0, #10
  415e8c:	ldr	w0, [sp, #52]
  415e90:	orr	w6, w1, w0
  415e94:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415e98:	add	x1, x0, #0x593
  415e9c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415ea0:	add	x5, x0, #0x688
  415ea4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415ea8:	add	x4, x0, #0x998
  415eac:	mov	w3, #0x74                  	// #116
  415eb0:	mov	x2, x1
  415eb4:	ldr	w1, [sp, #56]
  415eb8:	mov	w0, w6
  415ebc:	bl	40b4f0 <log_internal_realm@plt>
  415ec0:	b	415fa8 <udev_ctrl_enable_receiving+0x258>
  415ec4:	ldr	w0, [sp, #56]
  415ec8:	cmp	w0, #0x0
  415ecc:	cneg	w0, w0, lt  // lt = tstop
  415ed0:	and	w0, w0, #0xff
  415ed4:	neg	w0, w0
  415ed8:	b	415fa8 <udev_ctrl_enable_receiving+0x258>
  415edc:	ldr	x0, [sp, #24]
  415ee0:	ldr	w0, [x0, #4]
  415ee4:	mov	w1, #0x0                   	// #0
  415ee8:	bl	40b250 <listen@plt>
  415eec:	cmp	w0, #0x0
  415ef0:	b.ge	415f84 <udev_ctrl_enable_receiving+0x234>  // b.tcont
  415ef4:	mov	w0, #0x3                   	// #3
  415ef8:	str	w0, [sp, #40]
  415efc:	bl	40b040 <__errno_location@plt>
  415f00:	ldr	w0, [x0]
  415f04:	str	w0, [sp, #44]
  415f08:	mov	w0, #0x1                   	// #1
  415f0c:	str	w0, [sp, #48]
  415f10:	ldr	w0, [sp, #48]
  415f14:	bl	40be30 <log_get_max_level_realm@plt>
  415f18:	mov	w1, w0
  415f1c:	ldr	w0, [sp, #40]
  415f20:	and	w0, w0, #0x7
  415f24:	cmp	w1, w0
  415f28:	b.lt	415f6c <udev_ctrl_enable_receiving+0x21c>  // b.tstop
  415f2c:	ldr	w0, [sp, #48]
  415f30:	lsl	w1, w0, #10
  415f34:	ldr	w0, [sp, #40]
  415f38:	orr	w6, w1, w0
  415f3c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415f40:	add	x1, x0, #0x593
  415f44:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415f48:	add	x5, x0, #0x6b0
  415f4c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  415f50:	add	x4, x0, #0x998
  415f54:	mov	w3, #0x77                  	// #119
  415f58:	mov	x2, x1
  415f5c:	ldr	w1, [sp, #44]
  415f60:	mov	w0, w6
  415f64:	bl	40b4f0 <log_internal_realm@plt>
  415f68:	b	415fa8 <udev_ctrl_enable_receiving+0x258>
  415f6c:	ldr	w0, [sp, #44]
  415f70:	cmp	w0, #0x0
  415f74:	cneg	w0, w0, lt  // lt = tstop
  415f78:	and	w0, w0, #0xff
  415f7c:	neg	w0, w0
  415f80:	b	415fa8 <udev_ctrl_enable_receiving+0x258>
  415f84:	ldr	x0, [sp, #24]
  415f88:	ldrb	w1, [x0, #148]
  415f8c:	orr	w1, w1, #0x1
  415f90:	strb	w1, [x0, #148]
  415f94:	ldr	x0, [sp, #24]
  415f98:	ldrb	w1, [x0, #148]
  415f9c:	orr	w1, w1, #0x2
  415fa0:	strb	w1, [x0, #148]
  415fa4:	mov	w0, #0x0                   	// #0
  415fa8:	ldp	x29, x30, [sp], #64
  415fac:	ret

0000000000415fb0 <udev_ctrl_disconnect>:
  415fb0:	stp	x29, x30, [sp, #-32]!
  415fb4:	mov	x29, sp
  415fb8:	str	x0, [sp, #24]
  415fbc:	ldr	x0, [sp, #24]
  415fc0:	cmp	x0, #0x0
  415fc4:	b.eq	415ffc <udev_ctrl_disconnect+0x4c>  // b.none
  415fc8:	ldr	x0, [sp, #24]
  415fcc:	ldr	x0, [x0, #168]
  415fd0:	bl	40a9f0 <sd_event_source_unref@plt>
  415fd4:	mov	x1, x0
  415fd8:	ldr	x0, [sp, #24]
  415fdc:	str	x1, [x0, #168]
  415fe0:	ldr	x0, [sp, #24]
  415fe4:	ldr	w0, [x0, #8]
  415fe8:	bl	40aad0 <safe_close@plt>
  415fec:	mov	w1, w0
  415ff0:	ldr	x0, [sp, #24]
  415ff4:	str	w1, [x0, #8]
  415ff8:	b	416000 <udev_ctrl_disconnect+0x50>
  415ffc:	nop
  416000:	ldp	x29, x30, [sp], #32
  416004:	ret

0000000000416008 <udev_ctrl_free>:
  416008:	stp	x29, x30, [sp, #-32]!
  41600c:	mov	x29, sp
  416010:	str	x0, [sp, #24]
  416014:	ldr	x0, [sp, #24]
  416018:	cmp	x0, #0x0
  41601c:	cset	w0, eq  // eq = none
  416020:	and	w0, w0, #0xff
  416024:	and	x0, x0, #0xff
  416028:	cmp	x0, #0x0
  41602c:	b.eq	416058 <udev_ctrl_free+0x50>  // b.none
  416030:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416034:	add	x1, x0, #0x593
  416038:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41603c:	add	x4, x0, #0x9b8
  416040:	mov	w3, #0x88                  	// #136
  416044:	mov	x2, x1
  416048:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41604c:	add	x1, x0, #0x680
  416050:	mov	w0, #0x1                   	// #1
  416054:	bl	40abb0 <log_assert_failed_realm@plt>
  416058:	ldr	x0, [sp, #24]
  41605c:	bl	415fb0 <udev_ctrl_disconnect>
  416060:	ldr	x0, [sp, #24]
  416064:	ldr	x0, [x0, #160]
  416068:	bl	40a9f0 <sd_event_source_unref@plt>
  41606c:	ldr	x0, [sp, #24]
  416070:	ldr	w0, [x0, #4]
  416074:	bl	40aad0 <safe_close@plt>
  416078:	ldr	x0, [sp, #24]
  41607c:	ldr	x0, [x0, #152]
  416080:	bl	40bb80 <sd_event_unref@plt>
  416084:	ldr	x0, [sp, #24]
  416088:	bl	4156f4 <mfree>
  41608c:	ldp	x29, x30, [sp], #32
  416090:	ret

0000000000416094 <udev_ctrl_ref>:
  416094:	stp	x29, x30, [sp, #-32]!
  416098:	mov	x29, sp
  41609c:	str	x0, [sp, #24]
  4160a0:	ldr	x0, [sp, #24]
  4160a4:	cmp	x0, #0x0
  4160a8:	b.ne	4160b4 <udev_ctrl_ref+0x20>  // b.any
  4160ac:	mov	x0, #0x0                   	// #0
  4160b0:	b	416114 <udev_ctrl_ref+0x80>
  4160b4:	ldr	x0, [sp, #24]
  4160b8:	ldr	w0, [x0]
  4160bc:	cmp	w0, #0x0
  4160c0:	cset	w0, eq  // eq = none
  4160c4:	and	w0, w0, #0xff
  4160c8:	and	x0, x0, #0xff
  4160cc:	cmp	x0, #0x0
  4160d0:	b.eq	4160fc <udev_ctrl_ref+0x68>  // b.none
  4160d4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4160d8:	add	x1, x0, #0x593
  4160dc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4160e0:	add	x4, x0, #0x9c8
  4160e4:	mov	w3, #0x93                  	// #147
  4160e8:	mov	x2, x1
  4160ec:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4160f0:	add	x1, x0, #0x6e0
  4160f4:	mov	w0, #0x1                   	// #1
  4160f8:	bl	40abb0 <log_assert_failed_realm@plt>
  4160fc:	ldr	x0, [sp, #24]
  416100:	ldr	w0, [x0]
  416104:	add	w1, w0, #0x1
  416108:	ldr	x0, [sp, #24]
  41610c:	str	w1, [x0]
  416110:	ldr	x0, [sp, #24]
  416114:	ldp	x29, x30, [sp], #32
  416118:	ret

000000000041611c <udev_ctrl_unref>:
  41611c:	stp	x29, x30, [sp, #-32]!
  416120:	mov	x29, sp
  416124:	str	x0, [sp, #24]
  416128:	ldr	x0, [sp, #24]
  41612c:	cmp	x0, #0x0
  416130:	b.ne	41613c <udev_ctrl_unref+0x20>  // b.any
  416134:	mov	x0, #0x0                   	// #0
  416138:	b	4161b8 <udev_ctrl_unref+0x9c>
  41613c:	ldr	x0, [sp, #24]
  416140:	ldr	w0, [x0]
  416144:	cmp	w0, #0x0
  416148:	cset	w0, eq  // eq = none
  41614c:	and	w0, w0, #0xff
  416150:	and	x0, x0, #0xff
  416154:	cmp	x0, #0x0
  416158:	b.eq	416184 <udev_ctrl_unref+0x68>  // b.none
  41615c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416160:	add	x1, x0, #0x593
  416164:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416168:	add	x4, x0, #0x9d8
  41616c:	mov	w3, #0x93                  	// #147
  416170:	mov	x2, x1
  416174:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416178:	add	x1, x0, #0x6e0
  41617c:	mov	w0, #0x1                   	// #1
  416180:	bl	40abb0 <log_assert_failed_realm@plt>
  416184:	ldr	x0, [sp, #24]
  416188:	ldr	w0, [x0]
  41618c:	sub	w1, w0, #0x1
  416190:	ldr	x0, [sp, #24]
  416194:	str	w1, [x0]
  416198:	ldr	x0, [sp, #24]
  41619c:	ldr	w0, [x0]
  4161a0:	cmp	w0, #0x0
  4161a4:	b.eq	4161b0 <udev_ctrl_unref+0x94>  // b.none
  4161a8:	mov	x0, #0x0                   	// #0
  4161ac:	b	4161b8 <udev_ctrl_unref+0x9c>
  4161b0:	ldr	x0, [sp, #24]
  4161b4:	bl	416008 <udev_ctrl_free>
  4161b8:	ldp	x29, x30, [sp], #32
  4161bc:	ret

00000000004161c0 <udev_ctrl_cleanup>:
  4161c0:	stp	x29, x30, [sp, #-32]!
  4161c4:	mov	x29, sp
  4161c8:	str	x0, [sp, #24]
  4161cc:	ldr	x0, [sp, #24]
  4161d0:	cmp	x0, #0x0
  4161d4:	b.ne	4161e0 <udev_ctrl_cleanup+0x20>  // b.any
  4161d8:	mov	w0, #0x0                   	// #0
  4161dc:	b	416208 <udev_ctrl_cleanup+0x48>
  4161e0:	ldr	x0, [sp, #24]
  4161e4:	ldrb	w0, [x0, #148]
  4161e8:	and	w0, w0, #0x2
  4161ec:	and	w0, w0, #0xff
  4161f0:	cmp	w0, #0x0
  4161f4:	b.eq	416204 <udev_ctrl_cleanup+0x44>  // b.none
  4161f8:	ldr	x0, [sp, #24]
  4161fc:	add	x0, x0, #0x10
  416200:	bl	40af30 <sockaddr_un_unlink@plt>
  416204:	mov	w0, #0x0                   	// #0
  416208:	ldp	x29, x30, [sp], #32
  41620c:	ret

0000000000416210 <udev_ctrl_attach_event>:
  416210:	stp	x29, x30, [sp, #-48]!
  416214:	mov	x29, sp
  416218:	str	x0, [sp, #24]
  41621c:	str	x1, [sp, #16]
  416220:	ldr	x0, [sp, #24]
  416224:	cmp	x0, #0x0
  416228:	cset	w0, ne  // ne = any
  41622c:	and	w0, w0, #0xff
  416230:	and	x0, x0, #0xff
  416234:	cmp	x0, #0x0
  416238:	b.ne	41626c <udev_ctrl_attach_event+0x5c>  // b.any
  41623c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416240:	add	x1, x0, #0x593
  416244:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416248:	add	x4, x0, #0x9e8
  41624c:	mov	w3, #0xa0                  	// #160
  416250:	mov	x2, x1
  416254:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416258:	add	x1, x0, #0x680
  41625c:	mov	w0, #0x1                   	// #1
  416260:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  416264:	mov	w0, #0x1                   	// #1
  416268:	b	416270 <udev_ctrl_attach_event+0x60>
  41626c:	mov	w0, #0x0                   	// #0
  416270:	cmp	w0, #0x0
  416274:	b.eq	416280 <udev_ctrl_attach_event+0x70>  // b.none
  416278:	mov	w0, #0xffffffea            	// #-22
  41627c:	b	416330 <udev_ctrl_attach_event+0x120>
  416280:	ldr	x0, [sp, #24]
  416284:	ldr	x0, [x0, #152]
  416288:	cmp	x0, #0x0
  41628c:	cset	w0, eq  // eq = none
  416290:	and	w0, w0, #0xff
  416294:	and	x0, x0, #0xff
  416298:	cmp	x0, #0x0
  41629c:	b.ne	4162d0 <udev_ctrl_attach_event+0xc0>  // b.any
  4162a0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4162a4:	add	x1, x0, #0x593
  4162a8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4162ac:	add	x4, x0, #0x9e8
  4162b0:	mov	w3, #0xa1                  	// #161
  4162b4:	mov	x2, x1
  4162b8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4162bc:	add	x1, x0, #0x6f0
  4162c0:	mov	w0, #0x1                   	// #1
  4162c4:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  4162c8:	mov	w0, #0x1                   	// #1
  4162cc:	b	4162d4 <udev_ctrl_attach_event+0xc4>
  4162d0:	mov	w0, #0x0                   	// #0
  4162d4:	cmp	w0, #0x0
  4162d8:	b.eq	4162e4 <udev_ctrl_attach_event+0xd4>  // b.none
  4162dc:	mov	w0, #0xfffffff0            	// #-16
  4162e0:	b	416330 <udev_ctrl_attach_event+0x120>
  4162e4:	ldr	x0, [sp, #16]
  4162e8:	cmp	x0, #0x0
  4162ec:	b.eq	416308 <udev_ctrl_attach_event+0xf8>  // b.none
  4162f0:	ldr	x0, [sp, #16]
  4162f4:	bl	40b820 <sd_event_ref@plt>
  4162f8:	mov	x1, x0
  4162fc:	ldr	x0, [sp, #24]
  416300:	str	x1, [x0, #152]
  416304:	b	41632c <udev_ctrl_attach_event+0x11c>
  416308:	ldr	x0, [sp, #24]
  41630c:	add	x0, x0, #0x98
  416310:	bl	40a7e0 <sd_event_default@plt>
  416314:	str	w0, [sp, #44]
  416318:	ldr	w0, [sp, #44]
  41631c:	cmp	w0, #0x0
  416320:	b.ge	41632c <udev_ctrl_attach_event+0x11c>  // b.tcont
  416324:	ldr	w0, [sp, #44]
  416328:	b	416330 <udev_ctrl_attach_event+0x120>
  41632c:	mov	w0, #0x0                   	// #0
  416330:	ldp	x29, x30, [sp], #48
  416334:	ret

0000000000416338 <udev_ctrl_get_event_source>:
  416338:	stp	x29, x30, [sp, #-32]!
  41633c:	mov	x29, sp
  416340:	str	x0, [sp, #24]
  416344:	ldr	x0, [sp, #24]
  416348:	cmp	x0, #0x0
  41634c:	cset	w0, eq  // eq = none
  416350:	and	w0, w0, #0xff
  416354:	and	x0, x0, #0xff
  416358:	cmp	x0, #0x0
  41635c:	b.eq	416388 <udev_ctrl_get_event_source+0x50>  // b.none
  416360:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416364:	add	x1, x0, #0x593
  416368:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41636c:	add	x4, x0, #0xa00
  416370:	mov	w3, #0xaf                  	// #175
  416374:	mov	x2, x1
  416378:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41637c:	add	x1, x0, #0x680
  416380:	mov	w0, #0x1                   	// #1
  416384:	bl	40abb0 <log_assert_failed_realm@plt>
  416388:	ldr	x0, [sp, #24]
  41638c:	ldr	x0, [x0, #160]
  416390:	ldp	x29, x30, [sp], #32
  416394:	ret

0000000000416398 <udev_ctrl_disconnect_and_listen_again>:
  416398:	stp	x29, x30, [sp, #-32]!
  41639c:	mov	x29, sp
  4163a0:	str	x0, [sp, #24]
  4163a4:	ldr	x0, [sp, #24]
  4163a8:	bl	415fb0 <udev_ctrl_disconnect>
  4163ac:	ldr	x0, [sp, #24]
  4163b0:	bl	41611c <udev_ctrl_unref>
  4163b4:	ldr	x0, [sp, #24]
  4163b8:	ldr	x0, [x0, #160]
  4163bc:	mov	w1, #0x1                   	// #1
  4163c0:	bl	40ace0 <sd_event_source_set_enabled@plt>
  4163c4:	nop
  4163c8:	ldp	x29, x30, [sp], #32
  4163cc:	ret

00000000004163d0 <udev_ctrl_disconnect_and_listen_againp>:
  4163d0:	stp	x29, x30, [sp, #-32]!
  4163d4:	mov	x29, sp
  4163d8:	str	x0, [sp, #24]
  4163dc:	ldr	x0, [sp, #24]
  4163e0:	ldr	x0, [x0]
  4163e4:	cmp	x0, #0x0
  4163e8:	b.eq	4163f8 <udev_ctrl_disconnect_and_listen_againp+0x28>  // b.none
  4163ec:	ldr	x0, [sp, #24]
  4163f0:	ldr	x0, [x0]
  4163f4:	bl	416398 <udev_ctrl_disconnect_and_listen_again>
  4163f8:	nop
  4163fc:	ldp	x29, x30, [sp], #32
  416400:	ret

0000000000416404 <udev_ctrl_connection_event_handler>:
  416404:	sub	sp, sp, #0x230
  416408:	stp	x29, x30, [sp]
  41640c:	mov	x29, sp
  416410:	str	x19, [sp, #16]
  416414:	str	x0, [sp, #56]
  416418:	str	w1, [sp, #52]
  41641c:	str	w2, [sp, #48]
  416420:	str	x3, [sp, #40]
  416424:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  416428:	ldr	x0, [x0, #4032]
  41642c:	ldr	x1, [x0]
  416430:	str	x1, [sp, #552]
  416434:	mov	x1, #0x0                   	// #0
  416438:	str	xzr, [sp, #136]
  41643c:	add	x0, sp, #0xf0
  416440:	str	x0, [sp, #168]
  416444:	mov	x0, #0x118                 	// #280
  416448:	str	x0, [sp, #176]
  41644c:	stp	xzr, xzr, [sp, #184]
  416450:	stp	xzr, xzr, [sp, #200]
  416454:	stp	xzr, xzr, [sp, #216]
  416458:	str	xzr, [sp, #232]
  41645c:	add	x0, sp, #0xa8
  416460:	str	x0, [sp, #200]
  416464:	mov	x0, #0x1                   	// #1
  416468:	str	x0, [sp, #208]
  41646c:	add	x0, sp, #0x208
  416470:	str	x0, [sp, #216]
  416474:	mov	x0, #0x20                  	// #32
  416478:	str	x0, [sp, #224]
  41647c:	ldr	x0, [sp, #40]
  416480:	cmp	x0, #0x0
  416484:	cset	w0, eq  // eq = none
  416488:	and	w0, w0, #0xff
  41648c:	and	x0, x0, #0xff
  416490:	cmp	x0, #0x0
  416494:	b.eq	4164c0 <udev_ctrl_connection_event_handler+0xbc>  // b.none
  416498:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41649c:	add	x1, x0, #0x593
  4164a0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4164a4:	add	x4, x0, #0xa20
  4164a8:	mov	w3, #0xcb                  	// #203
  4164ac:	mov	x2, x1
  4164b0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4164b4:	add	x1, x0, #0x700
  4164b8:	mov	w0, #0x1                   	// #1
  4164bc:	bl	40abb0 <log_assert_failed_realm@plt>
  4164c0:	ldr	x0, [sp, #40]
  4164c4:	bl	416094 <udev_ctrl_ref>
  4164c8:	str	x0, [sp, #136]
  4164cc:	ldr	w0, [sp, #52]
  4164d0:	bl	40b310 <next_datagram_size_fd@plt>
  4164d4:	str	x0, [sp, #144]
  4164d8:	ldr	x0, [sp, #144]
  4164dc:	cmp	x0, #0x0
  4164e0:	b.ge	416574 <udev_ctrl_connection_event_handler+0x170>  // b.tcont
  4164e4:	mov	w0, #0x3                   	// #3
  4164e8:	str	w0, [sp, #124]
  4164ec:	ldr	x0, [sp, #144]
  4164f0:	str	w0, [sp, #128]
  4164f4:	mov	w0, #0x1                   	// #1
  4164f8:	str	w0, [sp, #132]
  4164fc:	ldr	w0, [sp, #132]
  416500:	bl	40be30 <log_get_max_level_realm@plt>
  416504:	mov	w1, w0
  416508:	ldr	w0, [sp, #124]
  41650c:	and	w0, w0, #0x7
  416510:	cmp	w1, w0
  416514:	b.lt	41655c <udev_ctrl_connection_event_handler+0x158>  // b.tstop
  416518:	ldr	w0, [sp, #132]
  41651c:	lsl	w1, w0, #10
  416520:	ldr	w0, [sp, #124]
  416524:	orr	w6, w1, w0
  416528:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41652c:	add	x1, x0, #0x593
  416530:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416534:	add	x5, x0, #0x710
  416538:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41653c:	add	x4, x0, #0xa48
  416540:	mov	w3, #0xd3                  	// #211
  416544:	mov	x2, x1
  416548:	ldr	w1, [sp, #128]
  41654c:	mov	w0, w6
  416550:	bl	40b4f0 <log_internal_realm@plt>
  416554:	mov	w19, w0
  416558:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  41655c:	ldr	w0, [sp, #128]
  416560:	cmp	w0, #0x0
  416564:	cneg	w0, w0, lt  // lt = tstop
  416568:	and	w0, w0, #0xff
  41656c:	neg	w19, w0
  416570:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  416574:	ldr	x0, [sp, #144]
  416578:	cmp	x0, #0x0
  41657c:	b.ne	416588 <udev_ctrl_connection_event_handler+0x184>  // b.any
  416580:	mov	w19, #0x0                   	// #0
  416584:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  416588:	add	x0, sp, #0xb8
  41658c:	mov	w2, #0x0                   	// #0
  416590:	mov	x1, x0
  416594:	ldr	w0, [sp, #52]
  416598:	bl	40b730 <recvmsg@plt>
  41659c:	str	x0, [sp, #144]
  4165a0:	ldr	x0, [sp, #144]
  4165a4:	cmp	x0, #0x0
  4165a8:	b.ge	416658 <udev_ctrl_connection_event_handler+0x254>  // b.tcont
  4165ac:	bl	40b040 <__errno_location@plt>
  4165b0:	ldr	w0, [x0]
  4165b4:	cmp	w0, #0x4
  4165b8:	b.eq	416650 <udev_ctrl_connection_event_handler+0x24c>  // b.none
  4165bc:	mov	w0, #0x3                   	// #3
  4165c0:	str	w0, [sp, #112]
  4165c4:	bl	40b040 <__errno_location@plt>
  4165c8:	ldr	w0, [x0]
  4165cc:	str	w0, [sp, #116]
  4165d0:	mov	w0, #0x1                   	// #1
  4165d4:	str	w0, [sp, #120]
  4165d8:	ldr	w0, [sp, #120]
  4165dc:	bl	40be30 <log_get_max_level_realm@plt>
  4165e0:	mov	w1, w0
  4165e4:	ldr	w0, [sp, #112]
  4165e8:	and	w0, w0, #0x7
  4165ec:	cmp	w1, w0
  4165f0:	b.lt	416638 <udev_ctrl_connection_event_handler+0x234>  // b.tstop
  4165f4:	ldr	w0, [sp, #120]
  4165f8:	lsl	w1, w0, #10
  4165fc:	ldr	w0, [sp, #112]
  416600:	orr	w6, w1, w0
  416604:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416608:	add	x1, x0, #0x593
  41660c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416610:	add	x5, x0, #0x738
  416614:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416618:	add	x4, x0, #0xa48
  41661c:	mov	w3, #0xda                  	// #218
  416620:	mov	x2, x1
  416624:	ldr	w1, [sp, #116]
  416628:	mov	w0, w6
  41662c:	bl	40b4f0 <log_internal_realm@plt>
  416630:	mov	w19, w0
  416634:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  416638:	ldr	w0, [sp, #116]
  41663c:	cmp	w0, #0x0
  416640:	cneg	w0, w0, lt  // lt = tstop
  416644:	and	w0, w0, #0xff
  416648:	neg	w19, w0
  41664c:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  416650:	mov	w19, #0x0                   	// #0
  416654:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  416658:	add	x0, sp, #0xb8
  41665c:	bl	40b420 <cmsg_close_all@plt>
  416660:	ldr	x0, [sp, #224]
  416664:	cmp	x0, #0xf
  416668:	b.ls	416674 <udev_ctrl_connection_event_handler+0x270>  // b.plast
  41666c:	ldr	x0, [sp, #216]
  416670:	b	416678 <udev_ctrl_connection_event_handler+0x274>
  416674:	mov	x0, #0x0                   	// #0
  416678:	str	x0, [sp, #152]
  41667c:	ldr	x0, [sp, #152]
  416680:	cmp	x0, #0x0
  416684:	b.eq	416698 <udev_ctrl_connection_event_handler+0x294>  // b.none
  416688:	ldr	x0, [sp, #152]
  41668c:	ldr	w0, [x0, #12]
  416690:	cmp	w0, #0x2
  416694:	b.eq	416718 <udev_ctrl_connection_event_handler+0x314>  // b.none
  416698:	mov	w0, #0x3                   	// #3
  41669c:	str	w0, [sp, #100]
  4166a0:	str	wzr, [sp, #104]
  4166a4:	mov	w0, #0x1                   	// #1
  4166a8:	str	w0, [sp, #108]
  4166ac:	ldr	w0, [sp, #108]
  4166b0:	bl	40be30 <log_get_max_level_realm@plt>
  4166b4:	mov	w1, w0
  4166b8:	ldr	w0, [sp, #100]
  4166bc:	and	w0, w0, #0x7
  4166c0:	cmp	w1, w0
  4166c4:	b.lt	416708 <udev_ctrl_connection_event_handler+0x304>  // b.tstop
  4166c8:	ldr	w0, [sp, #108]
  4166cc:	lsl	w1, w0, #10
  4166d0:	ldr	w0, [sp, #100]
  4166d4:	orr	w6, w1, w0
  4166d8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4166dc:	add	x1, x0, #0x593
  4166e0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4166e4:	add	x5, x0, #0x760
  4166e8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4166ec:	add	x4, x0, #0xa48
  4166f0:	mov	w3, #0xe4                  	// #228
  4166f4:	mov	x2, x1
  4166f8:	ldr	w1, [sp, #104]
  4166fc:	mov	w0, w6
  416700:	bl	40b4f0 <log_internal_realm@plt>
  416704:	b	416710 <udev_ctrl_connection_event_handler+0x30c>
  416708:	ldr	w0, [sp, #104]
  41670c:	cmp	w0, #0x0
  416710:	mov	w19, #0x0                   	// #0
  416714:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  416718:	ldr	x0, [sp, #152]
  41671c:	add	x0, x0, #0x10
  416720:	str	x0, [sp, #160]
  416724:	ldr	x0, [sp, #160]
  416728:	ldr	w0, [x0, #4]
  41672c:	cmp	w0, #0x0
  416730:	b.eq	4167c0 <udev_ctrl_connection_event_handler+0x3bc>  // b.none
  416734:	mov	w0, #0x3                   	// #3
  416738:	str	w0, [sp, #88]
  41673c:	str	wzr, [sp, #92]
  416740:	mov	w0, #0x1                   	// #1
  416744:	str	w0, [sp, #96]
  416748:	ldr	w0, [sp, #96]
  41674c:	bl	40be30 <log_get_max_level_realm@plt>
  416750:	mov	w1, w0
  416754:	ldr	w0, [sp, #88]
  416758:	and	w0, w0, #0x7
  41675c:	cmp	w1, w0
  416760:	b.lt	4167b0 <udev_ctrl_connection_event_handler+0x3ac>  // b.tstop
  416764:	ldr	w0, [sp, #96]
  416768:	lsl	w1, w0, #10
  41676c:	ldr	w0, [sp, #88]
  416770:	orr	w7, w1, w0
  416774:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416778:	add	x1, x0, #0x593
  41677c:	ldr	x0, [sp, #160]
  416780:	ldr	w0, [x0, #4]
  416784:	mov	w6, w0
  416788:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41678c:	add	x5, x0, #0x798
  416790:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416794:	add	x4, x0, #0xa48
  416798:	mov	w3, #0xeb                  	// #235
  41679c:	mov	x2, x1
  4167a0:	ldr	w1, [sp, #92]
  4167a4:	mov	w0, w7
  4167a8:	bl	40b4f0 <log_internal_realm@plt>
  4167ac:	b	4167b8 <udev_ctrl_connection_event_handler+0x3b4>
  4167b0:	ldr	w0, [sp, #92]
  4167b4:	cmp	w0, #0x0
  4167b8:	mov	w19, #0x0                   	// #0
  4167bc:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  4167c0:	ldr	w1, [sp, #256]
  4167c4:	mov	w0, #0x1dea                	// #7658
  4167c8:	movk	w0, #0xdead, lsl #16
  4167cc:	cmp	w1, w0
  4167d0:	b.eq	41685c <udev_ctrl_connection_event_handler+0x458>  // b.none
  4167d4:	mov	w0, #0x3                   	// #3
  4167d8:	str	w0, [sp, #76]
  4167dc:	str	wzr, [sp, #80]
  4167e0:	mov	w0, #0x1                   	// #1
  4167e4:	str	w0, [sp, #84]
  4167e8:	ldr	w0, [sp, #84]
  4167ec:	bl	40be30 <log_get_max_level_realm@plt>
  4167f0:	mov	w1, w0
  4167f4:	ldr	w0, [sp, #76]
  4167f8:	and	w0, w0, #0x7
  4167fc:	cmp	w1, w0
  416800:	b.lt	41684c <udev_ctrl_connection_event_handler+0x448>  // b.tstop
  416804:	ldr	w0, [sp, #84]
  416808:	lsl	w1, w0, #10
  41680c:	ldr	w0, [sp, #76]
  416810:	orr	w7, w1, w0
  416814:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416818:	add	x1, x0, #0x593
  41681c:	ldr	w0, [sp, #256]
  416820:	mov	w6, w0
  416824:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416828:	add	x5, x0, #0x7c0
  41682c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416830:	add	x4, x0, #0xa48
  416834:	mov	w3, #0xf0                  	// #240
  416838:	mov	x2, x1
  41683c:	ldr	w1, [sp, #80]
  416840:	mov	w0, w7
  416844:	bl	40b4f0 <log_internal_realm@plt>
  416848:	b	416854 <udev_ctrl_connection_event_handler+0x450>
  41684c:	ldr	w0, [sp, #80]
  416850:	cmp	w0, #0x0
  416854:	mov	w19, #0x0                   	// #0
  416858:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  41685c:	ldr	w0, [sp, #260]
  416860:	cmp	w0, #0x0
  416864:	b.ne	416870 <udev_ctrl_connection_event_handler+0x46c>  // b.any
  416868:	mov	w19, #0x0                   	// #0
  41686c:	b	4168c0 <udev_ctrl_connection_event_handler+0x4bc>
  416870:	ldr	x0, [sp, #136]
  416874:	ldr	x0, [x0, #176]
  416878:	cmp	x0, #0x0
  41687c:	b.eq	4168b0 <udev_ctrl_connection_event_handler+0x4ac>  // b.none
  416880:	ldr	x0, [sp, #136]
  416884:	ldr	x4, [x0, #176]
  416888:	ldr	x5, [sp, #136]
  41688c:	ldr	w1, [sp, #260]
  416890:	ldr	x0, [sp, #136]
  416894:	ldr	x2, [x0, #184]
  416898:	add	x0, sp, #0xf0
  41689c:	add	x0, x0, #0x18
  4168a0:	mov	x3, x2
  4168a4:	mov	x2, x0
  4168a8:	mov	x0, x5
  4168ac:	blr	x4
  4168b0:	ldr	x0, [sp, #136]
  4168b4:	bl	41611c <udev_ctrl_unref>
  4168b8:	str	x0, [sp, #136]
  4168bc:	mov	w19, #0x0                   	// #0
  4168c0:	add	x0, sp, #0x88
  4168c4:	bl	4163d0 <udev_ctrl_disconnect_and_listen_againp>
  4168c8:	mov	w1, w19
  4168cc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4168d0:	ldr	x0, [x0, #4032]
  4168d4:	ldr	x2, [sp, #552]
  4168d8:	ldr	x0, [x0]
  4168dc:	eor	x0, x2, x0
  4168e0:	cmp	x0, #0x0
  4168e4:	b.eq	4168ec <udev_ctrl_connection_event_handler+0x4e8>  // b.none
  4168e8:	bl	40b280 <__stack_chk_fail@plt>
  4168ec:	mov	w0, w1
  4168f0:	ldr	x19, [sp, #16]
  4168f4:	ldp	x29, x30, [sp]
  4168f8:	add	sp, sp, #0x230
  4168fc:	ret

0000000000416900 <udev_ctrl_event_handler>:
  416900:	stp	x29, x30, [sp, #-176]!
  416904:	mov	x29, sp
  416908:	str	x19, [sp, #16]
  41690c:	str	x0, [sp, #56]
  416910:	str	w1, [sp, #52]
  416914:	str	w2, [sp, #48]
  416918:	str	x3, [sp, #40]
  41691c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  416920:	ldr	x0, [x0, #4032]
  416924:	ldr	x1, [x0]
  416928:	str	x1, [sp, #168]
  41692c:	mov	x1, #0x0                   	// #0
  416930:	ldr	x0, [sp, #40]
  416934:	str	x0, [sp, #144]
  416938:	mov	w0, #0xffffffff            	// #-1
  41693c:	str	w0, [sp, #72]
  416940:	ldr	x0, [sp, #144]
  416944:	cmp	x0, #0x0
  416948:	cset	w0, eq  // eq = none
  41694c:	and	w0, w0, #0xff
  416950:	and	x0, x0, #0xff
  416954:	cmp	x0, #0x0
  416958:	b.eq	416984 <udev_ctrl_event_handler+0x84>  // b.none
  41695c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416960:	add	x1, x0, #0x593
  416964:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416968:	add	x4, x0, #0xa70
  41696c:	mov	w3, #0x105                 	// #261
  416970:	mov	x2, x1
  416974:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416978:	add	x1, x0, #0x680
  41697c:	mov	w0, #0x1                   	// #1
  416980:	bl	40abb0 <log_assert_failed_realm@plt>
  416984:	mov	x0, #0x0                   	// #0
  416988:	mov	w3, #0x800                 	// #2048
  41698c:	movk	w3, #0x8, lsl #16
  416990:	mov	x2, #0x0                   	// #0
  416994:	mov	x1, x0
  416998:	ldr	w0, [sp, #52]
  41699c:	bl	40b9c0 <accept4@plt>
  4169a0:	str	w0, [sp, #72]
  4169a4:	ldr	w0, [sp, #72]
  4169a8:	cmp	w0, #0x0
  4169ac:	b.ge	416a64 <udev_ctrl_event_handler+0x164>  // b.tcont
  4169b0:	bl	40b040 <__errno_location@plt>
  4169b4:	ldr	w0, [x0]
  4169b8:	bl	415868 <ERRNO_IS_ACCEPT_AGAIN>
  4169bc:	and	w0, w0, #0xff
  4169c0:	cmp	w0, #0x0
  4169c4:	b.eq	4169d0 <udev_ctrl_event_handler+0xd0>  // b.none
  4169c8:	mov	w19, #0x0                   	// #0
  4169cc:	b	416d40 <udev_ctrl_event_handler+0x440>
  4169d0:	mov	w0, #0x3                   	// #3
  4169d4:	str	w0, [sp, #132]
  4169d8:	bl	40b040 <__errno_location@plt>
  4169dc:	ldr	w0, [x0]
  4169e0:	str	w0, [sp, #136]
  4169e4:	mov	w0, #0x1                   	// #1
  4169e8:	str	w0, [sp, #140]
  4169ec:	ldr	w0, [sp, #140]
  4169f0:	bl	40be30 <log_get_max_level_realm@plt>
  4169f4:	mov	w1, w0
  4169f8:	ldr	w0, [sp, #132]
  4169fc:	and	w0, w0, #0x7
  416a00:	cmp	w1, w0
  416a04:	b.lt	416a4c <udev_ctrl_event_handler+0x14c>  // b.tstop
  416a08:	ldr	w0, [sp, #140]
  416a0c:	lsl	w1, w0, #10
  416a10:	ldr	w0, [sp, #132]
  416a14:	orr	w6, w1, w0
  416a18:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416a1c:	add	x1, x0, #0x593
  416a20:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416a24:	add	x5, x0, #0x7f8
  416a28:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416a2c:	add	x4, x0, #0xa88
  416a30:	mov	w3, #0x10c                 	// #268
  416a34:	mov	x2, x1
  416a38:	ldr	w1, [sp, #136]
  416a3c:	mov	w0, w6
  416a40:	bl	40b4f0 <log_internal_realm@plt>
  416a44:	mov	w19, w0
  416a48:	b	416d40 <udev_ctrl_event_handler+0x440>
  416a4c:	ldr	w0, [sp, #136]
  416a50:	cmp	w0, #0x0
  416a54:	cneg	w0, w0, lt  // lt = tstop
  416a58:	and	w0, w0, #0xff
  416a5c:	neg	w19, w0
  416a60:	b	416d40 <udev_ctrl_event_handler+0x440>
  416a64:	ldr	w0, [sp, #72]
  416a68:	add	x1, sp, #0x98
  416a6c:	bl	40b5b0 <getpeercred@plt>
  416a70:	str	w0, [sp, #76]
  416a74:	ldr	w0, [sp, #76]
  416a78:	cmp	w0, #0x0
  416a7c:	b.ge	416b04 <udev_ctrl_event_handler+0x204>  // b.tcont
  416a80:	mov	w0, #0x3                   	// #3
  416a84:	str	w0, [sp, #120]
  416a88:	ldr	w0, [sp, #76]
  416a8c:	str	w0, [sp, #124]
  416a90:	mov	w0, #0x1                   	// #1
  416a94:	str	w0, [sp, #128]
  416a98:	ldr	w0, [sp, #128]
  416a9c:	bl	40be30 <log_get_max_level_realm@plt>
  416aa0:	mov	w1, w0
  416aa4:	ldr	w0, [sp, #120]
  416aa8:	and	w0, w0, #0x7
  416aac:	cmp	w1, w0
  416ab0:	b.lt	416af4 <udev_ctrl_event_handler+0x1f4>  // b.tstop
  416ab4:	ldr	w0, [sp, #128]
  416ab8:	lsl	w1, w0, #10
  416abc:	ldr	w0, [sp, #120]
  416ac0:	orr	w6, w1, w0
  416ac4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416ac8:	add	x1, x0, #0x593
  416acc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416ad0:	add	x5, x0, #0x820
  416ad4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416ad8:	add	x4, x0, #0xa88
  416adc:	mov	w3, #0x112                 	// #274
  416ae0:	mov	x2, x1
  416ae4:	ldr	w1, [sp, #124]
  416ae8:	mov	w0, w6
  416aec:	bl	40b4f0 <log_internal_realm@plt>
  416af0:	b	416afc <udev_ctrl_event_handler+0x1fc>
  416af4:	ldr	w0, [sp, #124]
  416af8:	cmp	w0, #0x0
  416afc:	mov	w19, #0x0                   	// #0
  416b00:	b	416d40 <udev_ctrl_event_handler+0x440>
  416b04:	ldr	w0, [sp, #156]
  416b08:	cmp	w0, #0x0
  416b0c:	b.eq	416b98 <udev_ctrl_event_handler+0x298>  // b.none
  416b10:	mov	w0, #0x3                   	// #3
  416b14:	str	w0, [sp, #108]
  416b18:	str	wzr, [sp, #112]
  416b1c:	mov	w0, #0x1                   	// #1
  416b20:	str	w0, [sp, #116]
  416b24:	ldr	w0, [sp, #116]
  416b28:	bl	40be30 <log_get_max_level_realm@plt>
  416b2c:	mov	w1, w0
  416b30:	ldr	w0, [sp, #108]
  416b34:	and	w0, w0, #0x7
  416b38:	cmp	w1, w0
  416b3c:	b.lt	416b88 <udev_ctrl_event_handler+0x288>  // b.tstop
  416b40:	ldr	w0, [sp, #116]
  416b44:	lsl	w1, w0, #10
  416b48:	ldr	w0, [sp, #108]
  416b4c:	orr	w7, w1, w0
  416b50:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416b54:	add	x1, x0, #0x593
  416b58:	ldr	w0, [sp, #156]
  416b5c:	mov	w6, w0
  416b60:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416b64:	add	x5, x0, #0x858
  416b68:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416b6c:	add	x4, x0, #0xa88
  416b70:	mov	w3, #0x117                 	// #279
  416b74:	mov	x2, x1
  416b78:	ldr	w1, [sp, #112]
  416b7c:	mov	w0, w7
  416b80:	bl	40b4f0 <log_internal_realm@plt>
  416b84:	b	416b90 <udev_ctrl_event_handler+0x290>
  416b88:	ldr	w0, [sp, #112]
  416b8c:	cmp	w0, #0x0
  416b90:	mov	w19, #0x0                   	// #0
  416b94:	b	416d40 <udev_ctrl_event_handler+0x440>
  416b98:	ldr	w0, [sp, #72]
  416b9c:	mov	w3, #0x1                   	// #1
  416ba0:	mov	w2, #0x10                  	// #16
  416ba4:	mov	w1, #0x1                   	// #1
  416ba8:	bl	415910 <setsockopt_int>
  416bac:	str	w0, [sp, #76]
  416bb0:	ldr	w0, [sp, #76]
  416bb4:	cmp	w0, #0x0
  416bb8:	b.ge	416c38 <udev_ctrl_event_handler+0x338>  // b.tcont
  416bbc:	mov	w0, #0x4                   	// #4
  416bc0:	str	w0, [sp, #80]
  416bc4:	ldr	w0, [sp, #76]
  416bc8:	str	w0, [sp, #84]
  416bcc:	mov	w0, #0x1                   	// #1
  416bd0:	str	w0, [sp, #88]
  416bd4:	ldr	w0, [sp, #88]
  416bd8:	bl	40be30 <log_get_max_level_realm@plt>
  416bdc:	mov	w1, w0
  416be0:	ldr	w0, [sp, #80]
  416be4:	and	w0, w0, #0x7
  416be8:	cmp	w1, w0
  416bec:	b.lt	416c30 <udev_ctrl_event_handler+0x330>  // b.tstop
  416bf0:	ldr	w0, [sp, #88]
  416bf4:	lsl	w1, w0, #10
  416bf8:	ldr	w0, [sp, #80]
  416bfc:	orr	w6, w1, w0
  416c00:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416c04:	add	x1, x0, #0x593
  416c08:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416c0c:	add	x5, x0, #0x888
  416c10:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416c14:	add	x4, x0, #0xa88
  416c18:	mov	w3, #0x11e                 	// #286
  416c1c:	mov	x2, x1
  416c20:	ldr	w1, [sp, #84]
  416c24:	mov	w0, w6
  416c28:	bl	40b4f0 <log_internal_realm@plt>
  416c2c:	b	416c38 <udev_ctrl_event_handler+0x338>
  416c30:	ldr	w0, [sp, #84]
  416c34:	cmp	w0, #0x0
  416c38:	ldr	x0, [sp, #144]
  416c3c:	ldr	x6, [x0, #152]
  416c40:	ldr	x0, [sp, #144]
  416c44:	add	x1, x0, #0xa8
  416c48:	ldr	w2, [sp, #72]
  416c4c:	ldr	x5, [sp, #144]
  416c50:	adrp	x0, 416000 <udev_ctrl_disconnect+0x50>
  416c54:	add	x4, x0, #0x404
  416c58:	mov	w3, #0x1                   	// #1
  416c5c:	mov	x0, x6
  416c60:	bl	40b690 <sd_event_add_io@plt>
  416c64:	str	w0, [sp, #76]
  416c68:	ldr	w0, [sp, #76]
  416c6c:	cmp	w0, #0x0
  416c70:	b.ge	416cf8 <udev_ctrl_event_handler+0x3f8>  // b.tcont
  416c74:	mov	w0, #0x3                   	// #3
  416c78:	str	w0, [sp, #96]
  416c7c:	ldr	w0, [sp, #76]
  416c80:	str	w0, [sp, #100]
  416c84:	mov	w0, #0x1                   	// #1
  416c88:	str	w0, [sp, #104]
  416c8c:	ldr	w0, [sp, #104]
  416c90:	bl	40be30 <log_get_max_level_realm@plt>
  416c94:	mov	w1, w0
  416c98:	ldr	w0, [sp, #96]
  416c9c:	and	w0, w0, #0x7
  416ca0:	cmp	w1, w0
  416ca4:	b.lt	416ce8 <udev_ctrl_event_handler+0x3e8>  // b.tstop
  416ca8:	ldr	w0, [sp, #104]
  416cac:	lsl	w1, w0, #10
  416cb0:	ldr	w0, [sp, #96]
  416cb4:	orr	w6, w1, w0
  416cb8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416cbc:	add	x1, x0, #0x593
  416cc0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416cc4:	add	x5, x0, #0x8b0
  416cc8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416ccc:	add	x4, x0, #0xa88
  416cd0:	mov	w3, #0x122                 	// #290
  416cd4:	mov	x2, x1
  416cd8:	ldr	w1, [sp, #100]
  416cdc:	mov	w0, w6
  416ce0:	bl	40b4f0 <log_internal_realm@plt>
  416ce4:	b	416cf0 <udev_ctrl_event_handler+0x3f0>
  416ce8:	ldr	w0, [sp, #100]
  416cec:	cmp	w0, #0x0
  416cf0:	mov	w19, #0x0                   	// #0
  416cf4:	b	416d40 <udev_ctrl_event_handler+0x440>
  416cf8:	ldr	x0, [sp, #144]
  416cfc:	ldr	x2, [x0, #168]
  416d00:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416d04:	add	x1, x0, #0x8f0
  416d08:	mov	x0, x2
  416d0c:	bl	40bdf0 <sd_event_source_set_description@plt>
  416d10:	ldr	x0, [sp, #144]
  416d14:	ldr	x0, [x0, #160]
  416d18:	mov	w1, #0x0                   	// #0
  416d1c:	bl	40ace0 <sd_event_source_set_enabled@plt>
  416d20:	ldr	w0, [sp, #72]
  416d24:	str	w0, [sp, #92]
  416d28:	mov	w0, #0xffffffff            	// #-1
  416d2c:	str	w0, [sp, #72]
  416d30:	ldr	w1, [sp, #92]
  416d34:	ldr	x0, [sp, #144]
  416d38:	str	w1, [x0, #8]
  416d3c:	mov	w19, #0x0                   	// #0
  416d40:	add	x0, sp, #0x48
  416d44:	bl	4158ec <closep>
  416d48:	mov	w1, w19
  416d4c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  416d50:	ldr	x0, [x0, #4032]
  416d54:	ldr	x2, [sp, #168]
  416d58:	ldr	x0, [x0]
  416d5c:	eor	x0, x2, x0
  416d60:	cmp	x0, #0x0
  416d64:	b.eq	416d6c <udev_ctrl_event_handler+0x46c>  // b.none
  416d68:	bl	40b280 <__stack_chk_fail@plt>
  416d6c:	mov	w0, w1
  416d70:	ldr	x19, [sp, #16]
  416d74:	ldp	x29, x30, [sp], #176
  416d78:	ret

0000000000416d7c <udev_ctrl_start>:
  416d7c:	stp	x29, x30, [sp, #-64]!
  416d80:	mov	x29, sp
  416d84:	str	x0, [sp, #40]
  416d88:	str	x1, [sp, #32]
  416d8c:	str	x2, [sp, #24]
  416d90:	ldr	x0, [sp, #40]
  416d94:	cmp	x0, #0x0
  416d98:	cset	w0, eq  // eq = none
  416d9c:	and	w0, w0, #0xff
  416da0:	and	x0, x0, #0xff
  416da4:	cmp	x0, #0x0
  416da8:	b.eq	416dd4 <udev_ctrl_start+0x58>  // b.none
  416dac:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416db0:	add	x1, x0, #0x593
  416db4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416db8:	add	x4, x0, #0xaa0
  416dbc:	mov	w3, #0x132                 	// #306
  416dc0:	mov	x2, x1
  416dc4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416dc8:	add	x1, x0, #0x680
  416dcc:	mov	w0, #0x1                   	// #1
  416dd0:	bl	40abb0 <log_assert_failed_realm@plt>
  416dd4:	ldr	x0, [sp, #40]
  416dd8:	ldr	x0, [x0, #152]
  416ddc:	cmp	x0, #0x0
  416de0:	b.ne	416e08 <udev_ctrl_start+0x8c>  // b.any
  416de4:	mov	x1, #0x0                   	// #0
  416de8:	ldr	x0, [sp, #40]
  416dec:	bl	416210 <udev_ctrl_attach_event>
  416df0:	str	w0, [sp, #60]
  416df4:	ldr	w0, [sp, #60]
  416df8:	cmp	w0, #0x0
  416dfc:	b.ge	416e08 <udev_ctrl_start+0x8c>  // b.tcont
  416e00:	ldr	w0, [sp, #60]
  416e04:	b	416ea4 <udev_ctrl_start+0x128>
  416e08:	ldr	x0, [sp, #40]
  416e0c:	bl	415d50 <udev_ctrl_enable_receiving>
  416e10:	str	w0, [sp, #60]
  416e14:	ldr	w0, [sp, #60]
  416e18:	cmp	w0, #0x0
  416e1c:	b.ge	416e28 <udev_ctrl_start+0xac>  // b.tcont
  416e20:	ldr	w0, [sp, #60]
  416e24:	b	416ea4 <udev_ctrl_start+0x128>
  416e28:	ldr	x0, [sp, #40]
  416e2c:	ldr	x1, [sp, #32]
  416e30:	str	x1, [x0, #176]
  416e34:	ldr	x0, [sp, #40]
  416e38:	ldr	x1, [sp, #24]
  416e3c:	str	x1, [x0, #184]
  416e40:	ldr	x0, [sp, #40]
  416e44:	ldr	x6, [x0, #152]
  416e48:	ldr	x0, [sp, #40]
  416e4c:	add	x1, x0, #0xa0
  416e50:	ldr	x0, [sp, #40]
  416e54:	ldr	w2, [x0, #4]
  416e58:	ldr	x5, [sp, #40]
  416e5c:	adrp	x0, 416000 <udev_ctrl_disconnect+0x50>
  416e60:	add	x4, x0, #0x900
  416e64:	mov	w3, #0x1                   	// #1
  416e68:	mov	x0, x6
  416e6c:	bl	40b690 <sd_event_add_io@plt>
  416e70:	str	w0, [sp, #60]
  416e74:	ldr	w0, [sp, #60]
  416e78:	cmp	w0, #0x0
  416e7c:	b.ge	416e88 <udev_ctrl_start+0x10c>  // b.tcont
  416e80:	ldr	w0, [sp, #60]
  416e84:	b	416ea4 <udev_ctrl_start+0x128>
  416e88:	ldr	x0, [sp, #40]
  416e8c:	ldr	x2, [x0, #160]
  416e90:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  416e94:	add	x1, x0, #0x908
  416e98:	mov	x0, x2
  416e9c:	bl	40bdf0 <sd_event_source_set_description@plt>
  416ea0:	mov	w0, #0x0                   	// #0
  416ea4:	ldp	x29, x30, [sp], #64
  416ea8:	ret

0000000000416eac <sd_event_unrefp>:
  416eac:	stp	x29, x30, [sp, #-32]!
  416eb0:	mov	x29, sp
  416eb4:	str	x0, [sp, #24]
  416eb8:	ldr	x0, [sp, #24]
  416ebc:	ldr	x0, [x0]
  416ec0:	cmp	x0, #0x0
  416ec4:	b.eq	416ed4 <sd_event_unrefp+0x28>  // b.none
  416ec8:	ldr	x0, [sp, #24]
  416ecc:	ldr	x0, [x0]
  416ed0:	bl	40bb80 <sd_event_unref@plt>
  416ed4:	nop
  416ed8:	ldp	x29, x30, [sp], #32
  416edc:	ret

0000000000416ee0 <mfree>:
  416ee0:	stp	x29, x30, [sp, #-32]!
  416ee4:	mov	x29, sp
  416ee8:	str	x0, [sp, #24]
  416eec:	ldr	x0, [sp, #24]
  416ef0:	bl	40ba20 <free@plt>
  416ef4:	mov	x0, #0x0                   	// #0
  416ef8:	ldp	x29, x30, [sp], #32
  416efc:	ret

0000000000416f00 <size_multiply_overflow>:
  416f00:	sub	sp, sp, #0x10
  416f04:	str	x0, [sp, #8]
  416f08:	str	x1, [sp]
  416f0c:	ldr	x0, [sp]
  416f10:	cmp	x0, #0x0
  416f14:	cset	w0, ne  // ne = any
  416f18:	and	w0, w0, #0xff
  416f1c:	and	x0, x0, #0xff
  416f20:	cmp	x0, #0x0
  416f24:	b.eq	416f68 <size_multiply_overflow+0x68>  // b.none
  416f28:	mov	x2, #0x0                   	// #0
  416f2c:	ldr	x1, [sp, #8]
  416f30:	ldr	x0, [sp]
  416f34:	umulh	x0, x1, x0
  416f38:	cmp	x0, #0x0
  416f3c:	b.eq	416f44 <size_multiply_overflow+0x44>  // b.none
  416f40:	mov	x2, #0x1                   	// #1
  416f44:	mov	x0, x2
  416f48:	cmp	x0, #0x0
  416f4c:	cset	w0, ne  // ne = any
  416f50:	and	w0, w0, #0xff
  416f54:	and	x0, x0, #0xff
  416f58:	cmp	x0, #0x0
  416f5c:	b.eq	416f68 <size_multiply_overflow+0x68>  // b.none
  416f60:	mov	w0, #0x1                   	// #1
  416f64:	b	416f6c <size_multiply_overflow+0x6c>
  416f68:	mov	w0, #0x0                   	// #0
  416f6c:	and	w0, w0, #0x1
  416f70:	and	w0, w0, #0xff
  416f74:	add	sp, sp, #0x10
  416f78:	ret

0000000000416f7c <malloc_multiply>:
  416f7c:	stp	x29, x30, [sp, #-32]!
  416f80:	mov	x29, sp
  416f84:	str	x0, [sp, #24]
  416f88:	str	x1, [sp, #16]
  416f8c:	ldr	x1, [sp, #16]
  416f90:	ldr	x0, [sp, #24]
  416f94:	bl	416f00 <size_multiply_overflow>
  416f98:	and	w0, w0, #0xff
  416f9c:	cmp	w0, #0x0
  416fa0:	b.eq	416fac <malloc_multiply+0x30>  // b.none
  416fa4:	mov	x0, #0x0                   	// #0
  416fa8:	b	416fc8 <malloc_multiply+0x4c>
  416fac:	ldr	x1, [sp, #24]
  416fb0:	ldr	x0, [sp, #16]
  416fb4:	mul	x0, x1, x0
  416fb8:	cmp	x0, #0x0
  416fbc:	b.ne	416fc4 <malloc_multiply+0x48>  // b.any
  416fc0:	mov	x0, #0x1                   	// #1
  416fc4:	bl	40b480 <malloc@plt>
  416fc8:	ldp	x29, x30, [sp], #32
  416fcc:	ret

0000000000416fd0 <close_pairp>:
  416fd0:	stp	x29, x30, [sp, #-32]!
  416fd4:	mov	x29, sp
  416fd8:	str	x0, [sp, #24]
  416fdc:	ldr	x0, [sp, #24]
  416fe0:	bl	40ab30 <safe_close_pair@plt>
  416fe4:	nop
  416fe8:	ldp	x29, x30, [sp], #32
  416fec:	ret

0000000000416ff0 <safe_atou>:
  416ff0:	stp	x29, x30, [sp, #-32]!
  416ff4:	mov	x29, sp
  416ff8:	str	x0, [sp, #24]
  416ffc:	str	x1, [sp, #16]
  417000:	ldr	x2, [sp, #16]
  417004:	mov	w1, #0x0                   	// #0
  417008:	ldr	x0, [sp, #24]
  41700c:	bl	40b4a0 <safe_atou_full@plt>
  417010:	ldp	x29, x30, [sp], #32
  417014:	ret

0000000000417018 <isempty>:
  417018:	sub	sp, sp, #0x10
  41701c:	str	x0, [sp, #8]
  417020:	ldr	x0, [sp, #8]
  417024:	cmp	x0, #0x0
  417028:	b.eq	41703c <isempty+0x24>  // b.none
  41702c:	ldr	x0, [sp, #8]
  417030:	ldrb	w0, [x0]
  417034:	cmp	w0, #0x0
  417038:	b.ne	417044 <isempty+0x2c>  // b.any
  41703c:	mov	w0, #0x1                   	// #1
  417040:	b	417048 <isempty+0x30>
  417044:	mov	w0, #0x0                   	// #0
  417048:	and	w0, w0, #0x1
  41704c:	and	w0, w0, #0xff
  417050:	add	sp, sp, #0x10
  417054:	ret

0000000000417058 <startswith>:
  417058:	stp	x29, x30, [sp, #-48]!
  41705c:	mov	x29, sp
  417060:	str	x0, [sp, #24]
  417064:	str	x1, [sp, #16]
  417068:	ldr	x0, [sp, #16]
  41706c:	bl	40bd10 <strlen@plt>
  417070:	str	x0, [sp, #40]
  417074:	ldr	x2, [sp, #40]
  417078:	ldr	x1, [sp, #16]
  41707c:	ldr	x0, [sp, #24]
  417080:	bl	40ae00 <strncmp@plt>
  417084:	cmp	w0, #0x0
  417088:	b.ne	41709c <startswith+0x44>  // b.any
  41708c:	ldr	x1, [sp, #24]
  417090:	ldr	x0, [sp, #40]
  417094:	add	x0, x1, x0
  417098:	b	4170a0 <startswith+0x48>
  41709c:	mov	x0, #0x0                   	// #0
  4170a0:	ldp	x29, x30, [sp], #48
  4170a4:	ret

00000000004170a8 <skip_leading_chars>:
  4170a8:	stp	x29, x30, [sp, #-32]!
  4170ac:	mov	x29, sp
  4170b0:	str	x0, [sp, #24]
  4170b4:	str	x1, [sp, #16]
  4170b8:	ldr	x0, [sp, #24]
  4170bc:	cmp	x0, #0x0
  4170c0:	b.ne	4170cc <skip_leading_chars+0x24>  // b.any
  4170c4:	mov	x0, #0x0                   	// #0
  4170c8:	b	4170fc <skip_leading_chars+0x54>
  4170cc:	ldr	x0, [sp, #16]
  4170d0:	cmp	x0, #0x0
  4170d4:	b.ne	4170e4 <skip_leading_chars+0x3c>  // b.any
  4170d8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4170dc:	add	x0, x0, #0xab0
  4170e0:	str	x0, [sp, #16]
  4170e4:	ldr	x1, [sp, #16]
  4170e8:	ldr	x0, [sp, #24]
  4170ec:	bl	40aeb0 <strspn@plt>
  4170f0:	mov	x1, x0
  4170f4:	ldr	x0, [sp, #24]
  4170f8:	add	x0, x0, x1
  4170fc:	ldp	x29, x30, [sp], #32
  417100:	ret

0000000000417104 <ordered_hashmap_free_free_key>:
  417104:	stp	x29, x30, [sp, #-32]!
  417108:	mov	x29, sp
  41710c:	str	x0, [sp, #24]
  417110:	mov	x2, #0x0                   	// #0
  417114:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  417118:	ldr	x1, [x0, #4080]
  41711c:	ldr	x0, [sp, #24]
  417120:	bl	40a400 <internal_hashmap_free@plt>
  417124:	ldp	x29, x30, [sp], #32
  417128:	ret

000000000041712c <ordered_hashmap_free_free_free>:
  41712c:	stp	x29, x30, [sp, #-32]!
  417130:	mov	x29, sp
  417134:	str	x0, [sp, #24]
  417138:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41713c:	ldr	x2, [x0, #4080]
  417140:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  417144:	ldr	x1, [x0, #4080]
  417148:	ldr	x0, [sp, #24]
  41714c:	bl	40a400 <internal_hashmap_free@plt>
  417150:	ldp	x29, x30, [sp], #32
  417154:	ret

0000000000417158 <ordered_hashmap_iterate>:
  417158:	stp	x29, x30, [sp, #-48]!
  41715c:	mov	x29, sp
  417160:	str	x0, [sp, #40]
  417164:	str	x1, [sp, #32]
  417168:	str	x2, [sp, #24]
  41716c:	str	x3, [sp, #16]
  417170:	ldr	x3, [sp, #16]
  417174:	ldr	x2, [sp, #24]
  417178:	ldr	x1, [sp, #32]
  41717c:	ldr	x0, [sp, #40]
  417180:	bl	40b7b0 <internal_hashmap_iterate@plt>
  417184:	and	w0, w0, #0xff
  417188:	ldp	x29, x30, [sp], #48
  41718c:	ret

0000000000417190 <strv_freep>:
  417190:	stp	x29, x30, [sp, #-32]!
  417194:	mov	x29, sp
  417198:	str	x0, [sp, #24]
  41719c:	ldr	x0, [sp, #24]
  4171a0:	ldr	x0, [x0]
  4171a4:	cmp	x0, #0x0
  4171a8:	b.eq	4171b8 <strv_freep+0x28>  // b.none
  4171ac:	ldr	x0, [sp, #24]
  4171b0:	ldr	x0, [x0]
  4171b4:	bl	40b080 <strv_free@plt>
  4171b8:	nop
  4171bc:	ldp	x29, x30, [sp], #32
  4171c0:	ret

00000000004171c4 <safe_fork>:
  4171c4:	stp	x29, x30, [sp, #-48]!
  4171c8:	mov	x29, sp
  4171cc:	str	x0, [sp, #40]
  4171d0:	str	w1, [sp, #36]
  4171d4:	str	x2, [sp, #24]
  4171d8:	ldr	x4, [sp, #24]
  4171dc:	ldr	w3, [sp, #36]
  4171e0:	mov	x2, #0x0                   	// #0
  4171e4:	mov	x1, #0x0                   	// #0
  4171e8:	ldr	x0, [sp, #40]
  4171ec:	bl	40b830 <safe_fork_full@plt>
  4171f0:	ldp	x29, x30, [sp], #48
  4171f4:	ret

00000000004171f8 <udev_warn_timeout>:
  4171f8:	sub	sp, sp, #0x20
  4171fc:	str	x0, [sp, #8]
  417200:	ldr	x0, [sp, #8]
  417204:	str	x0, [sp, #24]
  417208:	mov	w0, #0x3                   	// #3
  41720c:	str	w0, [sp, #20]
  417210:	ldrsw	x0, [sp, #20]
  417214:	ldr	x1, [sp, #24]
  417218:	udiv	x2, x1, x0
  41721c:	ldrsw	x1, [sp, #20]
  417220:	ldr	x0, [sp, #24]
  417224:	udiv	x3, x0, x1
  417228:	mul	x1, x3, x1
  41722c:	sub	x0, x0, x1
  417230:	cmp	x0, #0x0
  417234:	cset	w0, ne  // ne = any
  417238:	and	w0, w0, #0xff
  41723c:	and	x0, x0, #0xff
  417240:	add	x0, x2, x0
  417244:	add	sp, sp, #0x20
  417248:	ret

000000000041724c <gid_is_valid>:
  41724c:	stp	x29, x30, [sp, #-32]!
  417250:	mov	x29, sp
  417254:	str	w0, [sp, #28]
  417258:	ldr	w0, [sp, #28]
  41725c:	bl	40aea0 <uid_is_valid@plt>
  417260:	and	w0, w0, #0xff
  417264:	ldp	x29, x30, [sp], #32
  417268:	ret

000000000041726c <udev_event_new>:
  41726c:	stp	x29, x30, [sp, #-192]!
  417270:	mov	x29, sp
  417274:	stp	x19, x20, [sp, #16]
  417278:	str	x0, [sp, #56]
  41727c:	str	x1, [sp, #48]
  417280:	str	x2, [sp, #40]
  417284:	ldr	x0, [sp, #56]
  417288:	cmp	x0, #0x0
  41728c:	cset	w0, eq  // eq = none
  417290:	and	w0, w0, #0xff
  417294:	and	x0, x0, #0xff
  417298:	cmp	x0, #0x0
  41729c:	b.eq	4172c8 <udev_event_new+0x5c>  // b.none
  4172a0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4172a4:	add	x1, x0, #0xabb
  4172a8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4172ac:	add	x4, x0, #0x578
  4172b0:	mov	w3, #0x38                  	// #56
  4172b4:	mov	x2, x1
  4172b8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4172bc:	add	x1, x0, #0xad8
  4172c0:	mov	w0, #0x1                   	// #1
  4172c4:	bl	40abb0 <log_assert_failed_realm@plt>
  4172c8:	mov	x1, #0x1                   	// #1
  4172cc:	mov	x0, #0x70                  	// #112
  4172d0:	bl	416f7c <malloc_multiply>
  4172d4:	str	x0, [sp, #72]
  4172d8:	ldr	x0, [sp, #72]
  4172dc:	cmp	x0, #0x0
  4172e0:	b.ne	4172ec <udev_event_new+0x80>  // b.any
  4172e4:	mov	x0, #0x0                   	// #0
  4172e8:	b	41737c <udev_event_new+0x110>
  4172ec:	ldr	x0, [sp, #56]
  4172f0:	bl	40bba0 <sd_device_ref@plt>
  4172f4:	mov	x20, x0
  4172f8:	mov	w0, #0x1                   	// #1
  4172fc:	bl	40b650 <now@plt>
  417300:	mov	x19, x0
  417304:	ldr	x0, [sp, #40]
  417308:	bl	40aa10 <sd_netlink_ref@plt>
  41730c:	mov	x2, x0
  417310:	ldr	x0, [sp, #72]
  417314:	stp	xzr, xzr, [x0]
  417318:	stp	xzr, xzr, [x0, #16]
  41731c:	stp	xzr, xzr, [x0, #32]
  417320:	stp	xzr, xzr, [x0, #48]
  417324:	stp	xzr, xzr, [x0, #64]
  417328:	stp	xzr, xzr, [x0, #80]
  41732c:	stp	xzr, xzr, [x0, #96]
  417330:	ldr	x0, [sp, #72]
  417334:	str	x20, [x0]
  417338:	ldr	x0, [sp, #72]
  41733c:	mov	w1, #0xffffffff            	// #-1
  417340:	str	w1, [x0, #40]
  417344:	ldr	x0, [sp, #72]
  417348:	mov	w1, #0xffffffff            	// #-1
  41734c:	str	w1, [x0, #44]
  417350:	ldr	x0, [sp, #72]
  417354:	mov	w1, #0xffffffff            	// #-1
  417358:	str	w1, [x0, #48]
  41735c:	ldr	x0, [sp, #72]
  417360:	ldr	x1, [sp, #48]
  417364:	str	x1, [x0, #72]
  417368:	ldr	x0, [sp, #72]
  41736c:	str	x19, [x0, #80]
  417370:	ldr	x0, [sp, #72]
  417374:	str	x2, [x0, #88]
  417378:	ldr	x0, [sp, #72]
  41737c:	ldp	x19, x20, [sp, #16]
  417380:	ldp	x29, x30, [sp], #192
  417384:	ret

0000000000417388 <udev_event_free>:
  417388:	stp	x29, x30, [sp, #-32]!
  41738c:	mov	x29, sp
  417390:	str	x0, [sp, #24]
  417394:	ldr	x0, [sp, #24]
  417398:	cmp	x0, #0x0
  41739c:	b.ne	4173a8 <udev_event_free+0x20>  // b.any
  4173a0:	mov	x0, #0x0                   	// #0
  4173a4:	b	417404 <udev_event_free+0x7c>
  4173a8:	ldr	x0, [sp, #24]
  4173ac:	ldr	x0, [x0]
  4173b0:	bl	40baf0 <sd_device_unref@plt>
  4173b4:	ldr	x0, [sp, #24]
  4173b8:	ldr	x0, [x0, #16]
  4173bc:	bl	40baf0 <sd_device_unref@plt>
  4173c0:	ldr	x0, [sp, #24]
  4173c4:	ldr	x0, [x0, #88]
  4173c8:	bl	40af50 <sd_netlink_unref@plt>
  4173cc:	ldr	x0, [sp, #24]
  4173d0:	ldr	x0, [x0, #64]
  4173d4:	bl	417104 <ordered_hashmap_free_free_key>
  4173d8:	ldr	x0, [sp, #24]
  4173dc:	ldr	x0, [x0, #56]
  4173e0:	bl	41712c <ordered_hashmap_free_free_free>
  4173e4:	ldr	x0, [sp, #24]
  4173e8:	ldr	x0, [x0, #32]
  4173ec:	bl	40ba20 <free@plt>
  4173f0:	ldr	x0, [sp, #24]
  4173f4:	ldr	x0, [x0, #24]
  4173f8:	bl	40ba20 <free@plt>
  4173fc:	ldr	x0, [sp, #24]
  417400:	bl	416ee0 <mfree>
  417404:	ldp	x29, x30, [sp], #32
  417408:	ret

000000000041740c <format_type_to_string>:
  41740c:	sub	sp, sp, #0x20
  417410:	str	w0, [sp, #12]
  417414:	str	xzr, [sp, #24]
  417418:	b	417468 <format_type_to_string+0x5c>
  41741c:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  417420:	add	x1, x0, #0x368
  417424:	ldr	x0, [sp, #24]
  417428:	lsl	x0, x0, #4
  41742c:	add	x0, x1, x0
  417430:	ldr	w0, [x0, #12]
  417434:	ldr	w1, [sp, #12]
  417438:	cmp	w1, w0
  41743c:	b.ne	41745c <format_type_to_string+0x50>  // b.any
  417440:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  417444:	add	x1, x0, #0x368
  417448:	ldr	x0, [sp, #24]
  41744c:	lsl	x0, x0, #4
  417450:	add	x0, x1, x0
  417454:	ldr	x0, [x0]
  417458:	b	417478 <format_type_to_string+0x6c>
  41745c:	ldr	x0, [sp, #24]
  417460:	add	x0, x0, #0x1
  417464:	str	x0, [sp, #24]
  417468:	ldr	x0, [sp, #24]
  41746c:	cmp	x0, #0x11
  417470:	b.ls	41741c <format_type_to_string+0x10>  // b.plast
  417474:	mov	x0, #0x0                   	// #0
  417478:	add	sp, sp, #0x20
  41747c:	ret

0000000000417480 <format_type_to_char>:
  417480:	sub	sp, sp, #0x20
  417484:	str	w0, [sp, #12]
  417488:	str	xzr, [sp, #24]
  41748c:	b	4174dc <format_type_to_char+0x5c>
  417490:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  417494:	add	x1, x0, #0x368
  417498:	ldr	x0, [sp, #24]
  41749c:	lsl	x0, x0, #4
  4174a0:	add	x0, x1, x0
  4174a4:	ldr	w0, [x0, #12]
  4174a8:	ldr	w1, [sp, #12]
  4174ac:	cmp	w1, w0
  4174b0:	b.ne	4174d0 <format_type_to_char+0x50>  // b.any
  4174b4:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  4174b8:	add	x1, x0, #0x368
  4174bc:	ldr	x0, [sp, #24]
  4174c0:	lsl	x0, x0, #4
  4174c4:	add	x0, x1, x0
  4174c8:	ldrb	w0, [x0, #8]
  4174cc:	b	4174ec <format_type_to_char+0x6c>
  4174d0:	ldr	x0, [sp, #24]
  4174d4:	add	x0, x0, #0x1
  4174d8:	str	x0, [sp, #24]
  4174dc:	ldr	x0, [sp, #24]
  4174e0:	cmp	x0, #0x11
  4174e4:	b.ls	417490 <format_type_to_char+0x10>  // b.plast
  4174e8:	mov	w0, #0x0                   	// #0
  4174ec:	add	sp, sp, #0x20
  4174f0:	ret

00000000004174f4 <get_subst_type>:
  4174f4:	stp	x29, x30, [sp, #-96]!
  4174f8:	mov	x29, sp
  4174fc:	str	x0, [sp, #40]
  417500:	strb	w1, [sp, #39]
  417504:	str	x2, [sp, #24]
  417508:	str	x3, [sp, #16]
  41750c:	ldr	x0, [sp, #40]
  417510:	ldr	x0, [x0]
  417514:	str	x0, [sp, #64]
  417518:	str	xzr, [sp, #48]
  41751c:	ldr	x0, [sp, #40]
  417520:	cmp	x0, #0x0
  417524:	cset	w0, eq  // eq = none
  417528:	and	w0, w0, #0xff
  41752c:	and	x0, x0, #0xff
  417530:	cmp	x0, #0x0
  417534:	b.eq	417560 <get_subst_type+0x6c>  // b.none
  417538:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41753c:	add	x1, x0, #0xabb
  417540:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  417544:	add	x4, x0, #0x588
  417548:	mov	w3, #0x9c                  	// #156
  41754c:	mov	x2, x1
  417550:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  417554:	add	x1, x0, #0xb78
  417558:	mov	w0, #0x1                   	// #1
  41755c:	bl	40abb0 <log_assert_failed_realm@plt>
  417560:	ldr	x0, [sp, #40]
  417564:	ldr	x0, [x0]
  417568:	cmp	x0, #0x0
  41756c:	cset	w0, eq  // eq = none
  417570:	and	w0, w0, #0xff
  417574:	and	x0, x0, #0xff
  417578:	cmp	x0, #0x0
  41757c:	b.eq	4175a8 <get_subst_type+0xb4>  // b.none
  417580:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  417584:	add	x1, x0, #0xabb
  417588:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41758c:	add	x4, x0, #0x588
  417590:	mov	w3, #0x9d                  	// #157
  417594:	mov	x2, x1
  417598:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41759c:	add	x1, x0, #0xb80
  4175a0:	mov	w0, #0x1                   	// #1
  4175a4:	bl	40abb0 <log_assert_failed_realm@plt>
  4175a8:	ldr	x0, [sp, #24]
  4175ac:	cmp	x0, #0x0
  4175b0:	cset	w0, eq  // eq = none
  4175b4:	and	w0, w0, #0xff
  4175b8:	and	x0, x0, #0xff
  4175bc:	cmp	x0, #0x0
  4175c0:	b.eq	4175ec <get_subst_type+0xf8>  // b.none
  4175c4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4175c8:	add	x1, x0, #0xabb
  4175cc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4175d0:	add	x4, x0, #0x588
  4175d4:	mov	w3, #0x9e                  	// #158
  4175d8:	mov	x2, x1
  4175dc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4175e0:	add	x1, x0, #0xb88
  4175e4:	mov	w0, #0x1                   	// #1
  4175e8:	bl	40abb0 <log_assert_failed_realm@plt>
  4175ec:	ldr	x0, [sp, #16]
  4175f0:	cmp	x0, #0x0
  4175f4:	cset	w0, eq  // eq = none
  4175f8:	and	w0, w0, #0xff
  4175fc:	and	x0, x0, #0xff
  417600:	cmp	x0, #0x0
  417604:	b.eq	417630 <get_subst_type+0x13c>  // b.none
  417608:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41760c:	add	x1, x0, #0xabb
  417610:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  417614:	add	x4, x0, #0x588
  417618:	mov	w3, #0x9f                  	// #159
  41761c:	mov	x2, x1
  417620:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  417624:	add	x1, x0, #0xb98
  417628:	mov	w0, #0x1                   	// #1
  41762c:	bl	40abb0 <log_assert_failed_realm@plt>
  417630:	ldr	x0, [sp, #64]
  417634:	ldrb	w0, [x0]
  417638:	cmp	w0, #0x24
  41763c:	b.ne	4176c8 <get_subst_type+0x1d4>  // b.any
  417640:	ldr	x0, [sp, #64]
  417644:	add	x0, x0, #0x1
  417648:	str	x0, [sp, #64]
  41764c:	ldr	x0, [sp, #64]
  417650:	ldrb	w0, [x0]
  417654:	cmp	w0, #0x24
  417658:	b.ne	417670 <get_subst_type+0x17c>  // b.any
  41765c:	ldr	x0, [sp, #40]
  417660:	ldr	x1, [sp, #64]
  417664:	str	x1, [x0]
  417668:	mov	w0, #0x0                   	// #0
  41766c:	b	417864 <get_subst_type+0x370>
  417670:	str	xzr, [sp, #56]
  417674:	b	4176b8 <get_subst_type+0x1c4>
  417678:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  41767c:	add	x1, x0, #0x368
  417680:	ldr	x0, [sp, #56]
  417684:	lsl	x0, x0, #4
  417688:	add	x0, x1, x0
  41768c:	ldr	x0, [x0]
  417690:	mov	x1, x0
  417694:	ldr	x0, [sp, #64]
  417698:	bl	417058 <startswith>
  41769c:	str	x0, [sp, #48]
  4176a0:	ldr	x0, [sp, #48]
  4176a4:	cmp	x0, #0x0
  4176a8:	b.ne	41776c <get_subst_type+0x278>  // b.any
  4176ac:	ldr	x0, [sp, #56]
  4176b0:	add	x0, x0, #0x1
  4176b4:	str	x0, [sp, #56]
  4176b8:	ldr	x0, [sp, #56]
  4176bc:	cmp	x0, #0x11
  4176c0:	b.ls	417678 <get_subst_type+0x184>  // b.plast
  4176c4:	b	417770 <get_subst_type+0x27c>
  4176c8:	ldr	x0, [sp, #64]
  4176cc:	ldrb	w0, [x0]
  4176d0:	cmp	w0, #0x25
  4176d4:	b.ne	417764 <get_subst_type+0x270>  // b.any
  4176d8:	ldr	x0, [sp, #64]
  4176dc:	add	x0, x0, #0x1
  4176e0:	str	x0, [sp, #64]
  4176e4:	ldr	x0, [sp, #64]
  4176e8:	ldrb	w0, [x0]
  4176ec:	cmp	w0, #0x25
  4176f0:	b.ne	417708 <get_subst_type+0x214>  // b.any
  4176f4:	ldr	x0, [sp, #40]
  4176f8:	ldr	x1, [sp, #64]
  4176fc:	str	x1, [x0]
  417700:	mov	w0, #0x0                   	// #0
  417704:	b	417864 <get_subst_type+0x370>
  417708:	str	xzr, [sp, #56]
  41770c:	b	417754 <get_subst_type+0x260>
  417710:	ldr	x0, [sp, #64]
  417714:	ldrb	w1, [x0]
  417718:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  41771c:	add	x2, x0, #0x368
  417720:	ldr	x0, [sp, #56]
  417724:	lsl	x0, x0, #4
  417728:	add	x0, x2, x0
  41772c:	ldrb	w0, [x0, #8]
  417730:	cmp	w1, w0
  417734:	b.ne	417748 <get_subst_type+0x254>  // b.any
  417738:	ldr	x0, [sp, #64]
  41773c:	add	x0, x0, #0x1
  417740:	str	x0, [sp, #48]
  417744:	b	417770 <get_subst_type+0x27c>
  417748:	ldr	x0, [sp, #56]
  41774c:	add	x0, x0, #0x1
  417750:	str	x0, [sp, #56]
  417754:	ldr	x0, [sp, #56]
  417758:	cmp	x0, #0x11
  41775c:	b.ls	417710 <get_subst_type+0x21c>  // b.plast
  417760:	b	417770 <get_subst_type+0x27c>
  417764:	mov	w0, #0x0                   	// #0
  417768:	b	417864 <get_subst_type+0x370>
  41776c:	nop
  417770:	ldr	x0, [sp, #48]
  417774:	cmp	x0, #0x0
  417778:	b.ne	417798 <get_subst_type+0x2a4>  // b.any
  41777c:	ldrb	w0, [sp, #39]
  417780:	cmp	w0, #0x0
  417784:	b.eq	417790 <get_subst_type+0x29c>  // b.none
  417788:	mov	w0, #0xffffffea            	// #-22
  41778c:	b	417864 <get_subst_type+0x370>
  417790:	mov	w0, #0x0                   	// #0
  417794:	b	417864 <get_subst_type+0x370>
  417798:	ldr	x0, [sp, #48]
  41779c:	ldrb	w0, [x0]
  4177a0:	cmp	w0, #0x7b
  4177a4:	b.ne	41782c <get_subst_type+0x338>  // b.any
  4177a8:	ldr	x0, [sp, #48]
  4177ac:	add	x0, x0, #0x1
  4177b0:	str	x0, [sp, #72]
  4177b4:	mov	w1, #0x7d                  	// #125
  4177b8:	ldr	x0, [sp, #72]
  4177bc:	bl	40b850 <strchr@plt>
  4177c0:	str	x0, [sp, #80]
  4177c4:	ldr	x0, [sp, #80]
  4177c8:	cmp	x0, #0x0
  4177cc:	b.ne	4177d8 <get_subst_type+0x2e4>  // b.any
  4177d0:	mov	w0, #0xffffffea            	// #-22
  4177d4:	b	417864 <get_subst_type+0x370>
  4177d8:	ldr	x1, [sp, #80]
  4177dc:	ldr	x0, [sp, #72]
  4177e0:	sub	x0, x1, x0
  4177e4:	str	x0, [sp, #88]
  4177e8:	ldr	x0, [sp, #88]
  4177ec:	cmp	x0, #0x0
  4177f0:	b.eq	417800 <get_subst_type+0x30c>  // b.none
  4177f4:	ldr	x0, [sp, #88]
  4177f8:	cmp	x0, #0x3ff
  4177fc:	b.ls	417808 <get_subst_type+0x314>  // b.plast
  417800:	mov	w0, #0xffffffea            	// #-22
  417804:	b	417864 <get_subst_type+0x370>
  417808:	ldr	x3, [sp, #88]
  41780c:	ldr	x2, [sp, #72]
  417810:	mov	x1, #0x400                 	// #1024
  417814:	ldr	x0, [sp, #16]
  417818:	bl	40b2e0 <strnscpy@plt>
  41781c:	ldr	x0, [sp, #80]
  417820:	add	x0, x0, #0x1
  417824:	str	x0, [sp, #48]
  417828:	b	417834 <get_subst_type+0x340>
  41782c:	ldr	x0, [sp, #16]
  417830:	strb	wzr, [x0]
  417834:	ldr	x0, [sp, #40]
  417838:	ldr	x1, [sp, #48]
  41783c:	str	x1, [x0]
  417840:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  417844:	add	x1, x0, #0x368
  417848:	ldr	x0, [sp, #56]
  41784c:	lsl	x0, x0, #4
  417850:	add	x0, x1, x0
  417854:	ldr	w1, [x0, #12]
  417858:	ldr	x0, [sp, #24]
  41785c:	str	w1, [x0]
  417860:	mov	w0, #0x1                   	// #1
  417864:	ldp	x29, x30, [sp], #96
  417868:	ret

000000000041786c <safe_atou_optional_plus>:
  41786c:	stp	x29, x30, [sp, #-80]!
  417870:	mov	x29, sp
  417874:	str	x0, [x29, #24]
  417878:	str	x1, [x29, #16]
  41787c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  417880:	ldr	x0, [x0, #4032]
  417884:	ldr	x1, [x0]
  417888:	str	x1, [x29, #72]
  41788c:	mov	x1, #0x0                   	// #0
  417890:	ldr	x0, [x29, #24]
  417894:	cmp	x0, #0x0
  417898:	cset	w0, eq  // eq = none
  41789c:	and	w0, w0, #0xff
  4178a0:	and	x0, x0, #0xff
  4178a4:	cmp	x0, #0x0
  4178a8:	b.eq	4178d4 <safe_atou_optional_plus+0x68>  // b.none
  4178ac:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4178b0:	add	x1, x0, #0xabb
  4178b4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4178b8:	add	x4, x0, #0x598
  4178bc:	mov	w3, #0xd7                  	// #215
  4178c0:	mov	x2, x1
  4178c4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4178c8:	add	x1, x0, #0xba8
  4178cc:	mov	w0, #0x1                   	// #1
  4178d0:	bl	40abb0 <log_assert_failed_realm@plt>
  4178d4:	ldr	x0, [x29, #16]
  4178d8:	cmp	x0, #0x0
  4178dc:	cset	w0, eq  // eq = none
  4178e0:	and	w0, w0, #0xff
  4178e4:	and	x0, x0, #0xff
  4178e8:	cmp	x0, #0x0
  4178ec:	b.eq	417918 <safe_atou_optional_plus+0xac>  // b.none
  4178f0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4178f4:	add	x1, x0, #0xabb
  4178f8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4178fc:	add	x4, x0, #0x598
  417900:	mov	w3, #0xd8                  	// #216
  417904:	mov	x2, x1
  417908:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41790c:	add	x1, x0, #0xbb0
  417910:	mov	w0, #0x1                   	// #1
  417914:	bl	40abb0 <log_assert_failed_realm@plt>
  417918:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41791c:	add	x1, x0, #0xbb8
  417920:	ldr	x0, [x29, #24]
  417924:	bl	40b670 <endswith@plt>
  417928:	str	x0, [x29, #40]
  41792c:	ldr	x0, [x29, #40]
  417930:	cmp	x0, #0x0
  417934:	b.eq	4179ac <safe_atou_optional_plus+0x140>  // b.none
  417938:	ldr	x0, [x29, #24]
  41793c:	str	x0, [x29, #48]
  417940:	ldr	x1, [x29, #40]
  417944:	ldr	x0, [x29, #24]
  417948:	sub	x0, x1, x0
  41794c:	mov	x1, x0
  417950:	ldr	x0, [x29, #48]
  417954:	bl	40a800 <strnlen@plt>
  417958:	str	x0, [x29, #56]
  41795c:	ldr	x0, [x29, #56]
  417960:	add	x0, x0, #0x1
  417964:	add	x0, x0, #0xf
  417968:	lsr	x0, x0, #4
  41796c:	lsl	x0, x0, #4
  417970:	sub	sp, sp, x0
  417974:	mov	x0, sp
  417978:	add	x0, x0, #0xf
  41797c:	lsr	x0, x0, #4
  417980:	lsl	x0, x0, #4
  417984:	str	x0, [x29, #64]
  417988:	ldr	x1, [x29, #64]
  41798c:	ldr	x0, [x29, #56]
  417990:	add	x0, x1, x0
  417994:	strb	wzr, [x0]
  417998:	ldr	x2, [x29, #56]
  41799c:	ldr	x1, [x29, #48]
  4179a0:	ldr	x0, [x29, #64]
  4179a4:	bl	40a980 <memcpy@plt>
  4179a8:	str	x0, [x29, #24]
  4179ac:	ldr	x1, [x29, #16]
  4179b0:	ldr	x0, [x29, #24]
  4179b4:	bl	416ff0 <safe_atou>
  4179b8:	str	w0, [x29, #36]
  4179bc:	ldr	w0, [x29, #36]
  4179c0:	cmp	w0, #0x0
  4179c4:	b.ge	4179d0 <safe_atou_optional_plus+0x164>  // b.tcont
  4179c8:	ldr	w0, [x29, #36]
  4179cc:	b	4179e0 <safe_atou_optional_plus+0x174>
  4179d0:	ldr	x0, [x29, #40]
  4179d4:	cmp	x0, #0x0
  4179d8:	cset	w0, ne  // ne = any
  4179dc:	and	w0, w0, #0xff
  4179e0:	mov	w1, w0
  4179e4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4179e8:	ldr	x0, [x0, #4032]
  4179ec:	ldr	x2, [x29, #72]
  4179f0:	ldr	x0, [x0]
  4179f4:	eor	x0, x2, x0
  4179f8:	cmp	x0, #0x0
  4179fc:	b.eq	417a04 <safe_atou_optional_plus+0x198>  // b.none
  417a00:	bl	40b280 <__stack_chk_fail@plt>
  417a04:	mov	w0, w1
  417a08:	mov	sp, x29
  417a0c:	ldp	x29, x30, [sp], #80
  417a10:	ret

0000000000417a14 <udev_event_subst_format>:
  417a14:	sub	sp, sp, #0x2d0
  417a18:	stp	x29, x30, [sp, #32]
  417a1c:	add	x29, sp, #0x20
  417a20:	str	x0, [sp, #88]
  417a24:	str	w1, [sp, #84]
  417a28:	str	x2, [sp, #72]
  417a2c:	str	x3, [sp, #64]
  417a30:	str	x4, [sp, #56]
  417a34:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  417a38:	ldr	x0, [x0, #4032]
  417a3c:	ldr	x1, [x0]
  417a40:	str	x1, [sp, #712]
  417a44:	mov	x1, #0x0                   	// #0
  417a48:	ldr	x0, [sp, #88]
  417a4c:	ldr	x0, [x0]
  417a50:	str	x0, [sp, #168]
  417a54:	str	xzr, [sp, #136]
  417a58:	ldr	x0, [sp, #64]
  417a5c:	str	x0, [sp, #144]
  417a60:	ldr	w0, [sp, #84]
  417a64:	cmp	w0, #0xf
  417a68:	b.eq	418480 <udev_event_subst_format+0xa6c>  // b.none
  417a6c:	ldr	w0, [sp, #84]
  417a70:	cmp	w0, #0xf
  417a74:	b.gt	418510 <udev_event_subst_format+0xafc>
  417a78:	ldr	w0, [sp, #84]
  417a7c:	cmp	w0, #0xe
  417a80:	b.eq	418460 <udev_event_subst_format+0xa4c>  // b.none
  417a84:	ldr	w0, [sp, #84]
  417a88:	cmp	w0, #0xe
  417a8c:	b.gt	418510 <udev_event_subst_format+0xafc>
  417a90:	ldr	w0, [sp, #84]
  417a94:	cmp	w0, #0xd
  417a98:	b.eq	4183c8 <udev_event_subst_format+0x9b4>  // b.none
  417a9c:	ldr	w0, [sp, #84]
  417aa0:	cmp	w0, #0xd
  417aa4:	b.gt	418510 <udev_event_subst_format+0xafc>
  417aa8:	ldr	w0, [sp, #84]
  417aac:	cmp	w0, #0xc
  417ab0:	b.eq	41831c <udev_event_subst_format+0x908>  // b.none
  417ab4:	ldr	w0, [sp, #84]
  417ab8:	cmp	w0, #0xc
  417abc:	b.gt	418510 <udev_event_subst_format+0xafc>
  417ac0:	ldr	w0, [sp, #84]
  417ac4:	cmp	w0, #0xb
  417ac8:	b.eq	418248 <udev_event_subst_format+0x834>  // b.none
  417acc:	ldr	w0, [sp, #84]
  417ad0:	cmp	w0, #0xb
  417ad4:	b.gt	418510 <udev_event_subst_format+0xafc>
  417ad8:	ldr	w0, [sp, #84]
  417adc:	cmp	w0, #0xa
  417ae0:	b.eq	417dcc <udev_event_subst_format+0x3b8>  // b.none
  417ae4:	ldr	w0, [sp, #84]
  417ae8:	cmp	w0, #0xa
  417aec:	b.gt	418510 <udev_event_subst_format+0xafc>
  417af0:	ldr	w0, [sp, #84]
  417af4:	cmp	w0, #0x9
  417af8:	b.gt	418510 <udev_event_subst_format+0xafc>
  417afc:	ldr	w0, [sp, #84]
  417b00:	cmp	w0, #0x8
  417b04:	b.ge	417d40 <udev_event_subst_format+0x32c>  // b.tcont
  417b08:	ldr	w0, [sp, #84]
  417b0c:	cmp	w0, #0x7
  417b10:	b.eq	417c8c <udev_event_subst_format+0x278>  // b.none
  417b14:	ldr	w0, [sp, #84]
  417b18:	cmp	w0, #0x7
  417b1c:	b.gt	418510 <udev_event_subst_format+0xafc>
  417b20:	ldr	w0, [sp, #84]
  417b24:	cmp	w0, #0x6
  417b28:	b.eq	417bb4 <udev_event_subst_format+0x1a0>  // b.none
  417b2c:	ldr	w0, [sp, #84]
  417b30:	cmp	w0, #0x6
  417b34:	b.gt	418510 <udev_event_subst_format+0xafc>
  417b38:	ldr	w0, [sp, #84]
  417b3c:	cmp	w0, #0x5
  417b40:	b.eq	417ce0 <udev_event_subst_format+0x2cc>  // b.none
  417b44:	ldr	w0, [sp, #84]
  417b48:	cmp	w0, #0x5
  417b4c:	b.gt	418510 <udev_event_subst_format+0xafc>
  417b50:	ldr	w0, [sp, #84]
  417b54:	cmp	w0, #0x4
  417b58:	b.eq	417c3c <udev_event_subst_format+0x228>  // b.none
  417b5c:	ldr	w0, [sp, #84]
  417b60:	cmp	w0, #0x4
  417b64:	b.gt	418510 <udev_event_subst_format+0xafc>
  417b68:	ldr	w0, [sp, #84]
  417b6c:	cmp	w0, #0x3
  417b70:	b.eq	417bf8 <udev_event_subst_format+0x1e4>  // b.none
  417b74:	ldr	w0, [sp, #84]
  417b78:	cmp	w0, #0x3
  417b7c:	b.gt	418510 <udev_event_subst_format+0xafc>
  417b80:	ldr	w0, [sp, #84]
  417b84:	cmp	w0, #0x2
  417b88:	b.eq	4184a0 <udev_event_subst_format+0xa8c>  // b.none
  417b8c:	ldr	w0, [sp, #84]
  417b90:	cmp	w0, #0x2
  417b94:	b.gt	418510 <udev_event_subst_format+0xafc>
  417b98:	ldr	w0, [sp, #84]
  417b9c:	cmp	w0, #0x0
  417ba0:	b.eq	4182cc <udev_event_subst_format+0x8b8>  // b.none
  417ba4:	ldr	w0, [sp, #84]
  417ba8:	cmp	w0, #0x1
  417bac:	b.eq	418060 <udev_event_subst_format+0x64c>  // b.none
  417bb0:	b	418510 <udev_event_subst_format+0xafc>
  417bb4:	add	x0, sp, #0x88
  417bb8:	mov	x1, x0
  417bbc:	ldr	x0, [sp, #168]
  417bc0:	bl	40b600 <sd_device_get_devpath@plt>
  417bc4:	str	w0, [sp, #112]
  417bc8:	ldr	w0, [sp, #112]
  417bcc:	cmp	w0, #0x0
  417bd0:	b.ge	417bdc <udev_event_subst_format+0x1c8>  // b.tcont
  417bd4:	ldrsw	x0, [sp, #112]
  417bd8:	b	4185a4 <udev_event_subst_format+0xb90>
  417bdc:	ldr	x1, [sp, #136]
  417be0:	add	x0, sp, #0x90
  417be4:	mov	x2, x1
  417be8:	ldr	x1, [sp, #56]
  417bec:	bl	40a5d0 <strpcpy@plt>
  417bf0:	str	x0, [sp, #56]
  417bf4:	b	41853c <udev_event_subst_format+0xb28>
  417bf8:	add	x0, sp, #0x88
  417bfc:	mov	x1, x0
  417c00:	ldr	x0, [sp, #168]
  417c04:	bl	40aba0 <sd_device_get_sysname@plt>
  417c08:	str	w0, [sp, #112]
  417c0c:	ldr	w0, [sp, #112]
  417c10:	cmp	w0, #0x0
  417c14:	b.ge	417c20 <udev_event_subst_format+0x20c>  // b.tcont
  417c18:	ldrsw	x0, [sp, #112]
  417c1c:	b	4185a4 <udev_event_subst_format+0xb90>
  417c20:	ldr	x1, [sp, #136]
  417c24:	add	x0, sp, #0x90
  417c28:	mov	x2, x1
  417c2c:	ldr	x1, [sp, #56]
  417c30:	bl	40a5d0 <strpcpy@plt>
  417c34:	str	x0, [sp, #56]
  417c38:	b	41853c <udev_event_subst_format+0xb28>
  417c3c:	add	x0, sp, #0x88
  417c40:	mov	x1, x0
  417c44:	ldr	x0, [sp, #168]
  417c48:	bl	40bc60 <sd_device_get_sysnum@plt>
  417c4c:	str	w0, [sp, #112]
  417c50:	ldr	w0, [sp, #112]
  417c54:	cmn	w0, #0x2
  417c58:	b.eq	41854c <udev_event_subst_format+0xb38>  // b.none
  417c5c:	ldr	w0, [sp, #112]
  417c60:	cmp	w0, #0x0
  417c64:	b.ge	417c70 <udev_event_subst_format+0x25c>  // b.tcont
  417c68:	ldrsw	x0, [sp, #112]
  417c6c:	b	4185a4 <udev_event_subst_format+0xb90>
  417c70:	ldr	x1, [sp, #136]
  417c74:	add	x0, sp, #0x90
  417c78:	mov	x2, x1
  417c7c:	ldr	x1, [sp, #56]
  417c80:	bl	40a5d0 <strpcpy@plt>
  417c84:	str	x0, [sp, #56]
  417c88:	b	41853c <udev_event_subst_format+0xb28>
  417c8c:	ldr	x0, [sp, #88]
  417c90:	ldr	x0, [x0, #8]
  417c94:	cmp	x0, #0x0
  417c98:	b.eq	418554 <udev_event_subst_format+0xb40>  // b.none
  417c9c:	ldr	x0, [sp, #88]
  417ca0:	ldr	x0, [x0, #8]
  417ca4:	add	x1, sp, #0x88
  417ca8:	bl	40aba0 <sd_device_get_sysname@plt>
  417cac:	str	w0, [sp, #112]
  417cb0:	ldr	w0, [sp, #112]
  417cb4:	cmp	w0, #0x0
  417cb8:	b.ge	417cc4 <udev_event_subst_format+0x2b0>  // b.tcont
  417cbc:	ldrsw	x0, [sp, #112]
  417cc0:	b	4185a4 <udev_event_subst_format+0xb90>
  417cc4:	ldr	x1, [sp, #136]
  417cc8:	add	x0, sp, #0x90
  417ccc:	mov	x2, x1
  417cd0:	ldr	x1, [sp, #56]
  417cd4:	bl	40a5d0 <strpcpy@plt>
  417cd8:	str	x0, [sp, #56]
  417cdc:	b	41853c <udev_event_subst_format+0xb28>
  417ce0:	ldr	x0, [sp, #88]
  417ce4:	ldr	x0, [x0, #8]
  417ce8:	cmp	x0, #0x0
  417cec:	b.eq	41855c <udev_event_subst_format+0xb48>  // b.none
  417cf0:	ldr	x0, [sp, #88]
  417cf4:	ldr	x0, [x0, #8]
  417cf8:	add	x1, sp, #0x88
  417cfc:	bl	40bcf0 <sd_device_get_driver@plt>
  417d00:	str	w0, [sp, #112]
  417d04:	ldr	w0, [sp, #112]
  417d08:	cmn	w0, #0x2
  417d0c:	b.eq	418564 <udev_event_subst_format+0xb50>  // b.none
  417d10:	ldr	w0, [sp, #112]
  417d14:	cmp	w0, #0x0
  417d18:	b.ge	417d24 <udev_event_subst_format+0x310>  // b.tcont
  417d1c:	ldrsw	x0, [sp, #112]
  417d20:	b	4185a4 <udev_event_subst_format+0xb90>
  417d24:	ldr	x1, [sp, #136]
  417d28:	add	x0, sp, #0x90
  417d2c:	mov	x2, x1
  417d30:	ldr	x1, [sp, #56]
  417d34:	bl	40a5d0 <strpcpy@plt>
  417d38:	str	x0, [sp, #56]
  417d3c:	b	41853c <udev_event_subst_format+0xb28>
  417d40:	add	x0, sp, #0x98
  417d44:	mov	x1, x0
  417d48:	ldr	x0, [sp, #168]
  417d4c:	bl	40b3d0 <sd_device_get_devnum@plt>
  417d50:	str	w0, [sp, #112]
  417d54:	ldr	w0, [sp, #112]
  417d58:	cmp	w0, #0x0
  417d5c:	b.ge	417d74 <udev_event_subst_format+0x360>  // b.tcont
  417d60:	ldr	w0, [sp, #112]
  417d64:	cmn	w0, #0x2
  417d68:	b.eq	417d74 <udev_event_subst_format+0x360>  // b.none
  417d6c:	ldrsw	x0, [sp, #112]
  417d70:	b	4185a4 <udev_event_subst_format+0xb90>
  417d74:	ldr	w0, [sp, #112]
  417d78:	cmp	w0, #0x0
  417d7c:	b.lt	417da4 <udev_event_subst_format+0x390>  // b.tstop
  417d80:	ldr	w0, [sp, #84]
  417d84:	cmp	w0, #0x8
  417d88:	b.ne	417d98 <udev_event_subst_format+0x384>  // b.any
  417d8c:	ldr	x0, [sp, #152]
  417d90:	bl	40b610 <gnu_dev_major@plt>
  417d94:	b	417da8 <udev_event_subst_format+0x394>
  417d98:	ldr	x0, [sp, #152]
  417d9c:	bl	40ba70 <gnu_dev_minor@plt>
  417da0:	b	417da8 <udev_event_subst_format+0x394>
  417da4:	mov	w0, #0x0                   	// #0
  417da8:	add	x4, sp, #0x90
  417dac:	mov	w3, w0
  417db0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  417db4:	add	x2, x0, #0xbc0
  417db8:	ldr	x1, [sp, #56]
  417dbc:	mov	x0, x4
  417dc0:	bl	40a3e0 <strpcpyf@plt>
  417dc4:	str	x0, [sp, #56]
  417dc8:	b	41853c <udev_event_subst_format+0xb28>
  417dcc:	str	wzr, [sp, #104]
  417dd0:	ldr	x0, [sp, #88]
  417dd4:	ldr	x0, [x0, #32]
  417dd8:	cmp	x0, #0x0
  417ddc:	b.eq	41856c <udev_event_subst_format+0xb58>  // b.none
  417de0:	ldr	x0, [sp, #72]
  417de4:	bl	417018 <isempty>
  417de8:	and	w0, w0, #0xff
  417dec:	eor	w0, w0, #0x1
  417df0:	and	w0, w0, #0xff
  417df4:	cmp	w0, #0x0
  417df8:	b.eq	417e34 <udev_event_subst_format+0x420>  // b.none
  417dfc:	add	x0, sp, #0x68
  417e00:	mov	x1, x0
  417e04:	ldr	x0, [sp, #72]
  417e08:	bl	41786c <safe_atou_optional_plus>
  417e0c:	str	w0, [sp, #112]
  417e10:	ldr	w0, [sp, #112]
  417e14:	cmp	w0, #0x0
  417e18:	b.ge	417e24 <udev_event_subst_format+0x410>  // b.tcont
  417e1c:	ldrsw	x0, [sp, #112]
  417e20:	b	4185a4 <udev_event_subst_format+0xb90>
  417e24:	ldr	w0, [sp, #112]
  417e28:	cmp	w0, #0x0
  417e2c:	cset	w0, ne  // ne = any
  417e30:	strb	w0, [sp, #103]
  417e34:	ldr	w0, [sp, #104]
  417e38:	cmp	w0, #0x0
  417e3c:	b.ne	417e60 <udev_event_subst_format+0x44c>  // b.any
  417e40:	ldr	x0, [sp, #88]
  417e44:	ldr	x1, [x0, #32]
  417e48:	add	x0, sp, #0x90
  417e4c:	mov	x2, x1
  417e50:	ldr	x1, [sp, #56]
  417e54:	bl	40a5d0 <strpcpy@plt>
  417e58:	str	x0, [sp, #56]
  417e5c:	b	41853c <udev_event_subst_format+0xb28>
  417e60:	ldr	x0, [sp, #88]
  417e64:	ldr	x0, [x0, #32]
  417e68:	mov	x1, #0x0                   	// #0
  417e6c:	bl	4170a8 <skip_leading_chars>
  417e70:	str	x0, [sp, #160]
  417e74:	mov	w0, #0x1                   	// #1
  417e78:	str	w0, [sp, #108]
  417e7c:	b	417ee8 <udev_event_subst_format+0x4d4>
  417e80:	ldr	x0, [sp, #160]
  417e84:	add	x0, x0, #0x1
  417e88:	str	x0, [sp, #160]
  417e8c:	ldr	x0, [sp, #160]
  417e90:	ldrb	w0, [x0]
  417e94:	cmp	w0, #0x0
  417e98:	b.eq	417ebc <udev_event_subst_format+0x4a8>  // b.none
  417e9c:	ldr	x0, [sp, #160]
  417ea0:	ldrb	w0, [x0]
  417ea4:	mov	w1, w0
  417ea8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  417eac:	add	x0, x0, #0xab0
  417eb0:	bl	40b850 <strchr@plt>
  417eb4:	cmp	x0, #0x0
  417eb8:	b.eq	417e80 <udev_event_subst_format+0x46c>  // b.none
  417ebc:	mov	x1, #0x0                   	// #0
  417ec0:	ldr	x0, [sp, #160]
  417ec4:	bl	4170a8 <skip_leading_chars>
  417ec8:	str	x0, [sp, #160]
  417ecc:	ldr	x0, [sp, #160]
  417ed0:	ldrb	w0, [x0]
  417ed4:	cmp	w0, #0x0
  417ed8:	b.eq	417efc <udev_event_subst_format+0x4e8>  // b.none
  417edc:	ldr	w0, [sp, #108]
  417ee0:	add	w0, w0, #0x1
  417ee4:	str	w0, [sp, #108]
  417ee8:	ldr	w0, [sp, #104]
  417eec:	ldr	w1, [sp, #108]
  417ef0:	cmp	w1, w0
  417ef4:	b.cc	417e8c <udev_event_subst_format+0x478>  // b.lo, b.ul, b.last
  417ef8:	b	417f00 <udev_event_subst_format+0x4ec>
  417efc:	nop
  417f00:	ldr	w0, [sp, #104]
  417f04:	ldr	w1, [sp, #108]
  417f08:	cmp	w1, w0
  417f0c:	b.eq	417fcc <udev_event_subst_format+0x5b8>  // b.none
  417f10:	str	xzr, [sp, #152]
  417f14:	ldr	x0, [sp, #168]
  417f18:	str	x0, [sp, #184]
  417f1c:	mov	w0, #0x7                   	// #7
  417f20:	str	w0, [sp, #116]
  417f24:	str	wzr, [sp, #120]
  417f28:	ldr	x0, [sp, #184]
  417f2c:	cmp	x0, #0x0
  417f30:	b.eq	417f6c <udev_event_subst_format+0x558>  // b.none
  417f34:	mov	w0, #0x1                   	// #1
  417f38:	bl	40be30 <log_get_max_level_realm@plt>
  417f3c:	mov	w1, w0
  417f40:	ldr	w0, [sp, #116]
  417f44:	cmp	w0, w1
  417f48:	cset	w0, le
  417f4c:	and	w0, w0, #0xff
  417f50:	and	x0, x0, #0xff
  417f54:	cmp	x0, #0x0
  417f58:	b.eq	417f6c <udev_event_subst_format+0x558>  // b.none
  417f5c:	add	x0, sp, #0x98
  417f60:	mov	x1, x0
  417f64:	ldr	x0, [sp, #184]
  417f68:	bl	40aba0 <sd_device_get_sysname@plt>
  417f6c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  417f70:	add	x2, x0, #0xabb
  417f74:	ldr	x0, [sp, #152]
  417f78:	cmp	x0, #0x0
  417f7c:	b.eq	417f8c <udev_event_subst_format+0x578>  // b.none
  417f80:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  417f84:	add	x0, x0, #0xbc8
  417f88:	b	417f90 <udev_event_subst_format+0x57c>
  417f8c:	mov	x0, #0x0                   	// #0
  417f90:	ldr	x3, [sp, #152]
  417f94:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  417f98:	add	x1, x1, #0xbd0
  417f9c:	str	x1, [sp, #8]
  417fa0:	str	xzr, [sp]
  417fa4:	mov	x7, #0x0                   	// #0
  417fa8:	mov	x6, x3
  417fac:	mov	x5, x0
  417fb0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  417fb4:	add	x4, x0, #0x5b0
  417fb8:	mov	w3, #0x142                 	// #322
  417fbc:	ldr	w1, [sp, #120]
  417fc0:	ldr	w0, [sp, #116]
  417fc4:	bl	40b020 <log_object_internal@plt>
  417fc8:	b	418598 <udev_event_subst_format+0xb84>
  417fcc:	ldr	x0, [sp, #160]
  417fd0:	str	x0, [sp, #176]
  417fd4:	ldrb	w0, [sp, #103]
  417fd8:	cmp	w0, #0x0
  417fdc:	b.eq	418004 <udev_event_subst_format+0x5f0>  // b.none
  417fe0:	add	x0, sp, #0x90
  417fe4:	ldr	x2, [sp, #176]
  417fe8:	ldr	x1, [sp, #56]
  417fec:	bl	40a5d0 <strpcpy@plt>
  417ff0:	str	x0, [sp, #56]
  417ff4:	b	41853c <udev_event_subst_format+0xb28>
  417ff8:	ldr	x0, [sp, #160]
  417ffc:	add	x0, x0, #0x1
  418000:	str	x0, [sp, #160]
  418004:	ldr	x0, [sp, #160]
  418008:	ldrb	w0, [x0]
  41800c:	cmp	w0, #0x0
  418010:	b.eq	418034 <udev_event_subst_format+0x620>  // b.none
  418014:	ldr	x0, [sp, #160]
  418018:	ldrb	w0, [x0]
  41801c:	mov	w1, w0
  418020:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418024:	add	x0, x0, #0xab0
  418028:	bl	40b850 <strchr@plt>
  41802c:	cmp	x0, #0x0
  418030:	b.eq	417ff8 <udev_event_subst_format+0x5e4>  // b.none
  418034:	ldr	x1, [sp, #160]
  418038:	ldr	x0, [sp, #176]
  41803c:	sub	x0, x1, x0
  418040:	mov	x1, x0
  418044:	add	x0, sp, #0x90
  418048:	mov	x3, x1
  41804c:	ldr	x2, [sp, #176]
  418050:	ldr	x1, [sp, #56]
  418054:	bl	40b150 <strnpcpy@plt>
  418058:	str	x0, [sp, #56]
  41805c:	b	41853c <udev_event_subst_format+0xb28>
  418060:	ldr	x0, [sp, #72]
  418064:	bl	417018 <isempty>
  418068:	and	w0, w0, #0xff
  41806c:	cmp	w0, #0x0
  418070:	b.eq	41807c <udev_event_subst_format+0x668>  // b.none
  418074:	mov	x0, #0xffffffffffffffea    	// #-22
  418078:	b	4185a4 <udev_event_subst_format+0xb90>
  41807c:	add	x0, sp, #0xc8
  418080:	mov	w3, #0x1                   	// #1
  418084:	mov	x2, #0x200                 	// #512
  418088:	mov	x1, x0
  41808c:	ldr	x0, [sp, #72]
  418090:	bl	40ba90 <util_resolve_subsys_kernel@plt>
  418094:	cmp	w0, #0x0
  418098:	b.ne	4180a4 <udev_event_subst_format+0x690>  // b.any
  41809c:	add	x0, sp, #0xc8
  4180a0:	str	x0, [sp, #136]
  4180a4:	ldr	x0, [sp, #136]
  4180a8:	cmp	x0, #0x0
  4180ac:	b.ne	4180c4 <udev_event_subst_format+0x6b0>  // b.any
  4180b0:	add	x0, sp, #0x88
  4180b4:	mov	x2, x0
  4180b8:	ldr	x1, [sp, #72]
  4180bc:	ldr	x0, [sp, #168]
  4180c0:	bl	40b870 <sd_device_get_sysattr_value@plt>
  4180c4:	ldr	x0, [sp, #136]
  4180c8:	cmp	x0, #0x0
  4180cc:	b.ne	41810c <udev_event_subst_format+0x6f8>  // b.any
  4180d0:	ldr	x0, [sp, #88]
  4180d4:	ldr	x0, [x0, #8]
  4180d8:	cmp	x0, #0x0
  4180dc:	b.eq	41810c <udev_event_subst_format+0x6f8>  // b.none
  4180e0:	ldr	x0, [sp, #88]
  4180e4:	ldr	x0, [x0, #8]
  4180e8:	ldr	x1, [sp, #168]
  4180ec:	cmp	x1, x0
  4180f0:	b.eq	41810c <udev_event_subst_format+0x6f8>  // b.none
  4180f4:	ldr	x0, [sp, #88]
  4180f8:	ldr	x0, [x0, #8]
  4180fc:	add	x1, sp, #0x88
  418100:	mov	x2, x1
  418104:	ldr	x1, [sp, #72]
  418108:	bl	40b870 <sd_device_get_sysattr_value@plt>
  41810c:	ldr	x0, [sp, #136]
  418110:	cmp	x0, #0x0
  418114:	b.eq	418574 <udev_event_subst_format+0xb60>  // b.none
  418118:	ldr	x1, [sp, #136]
  41811c:	add	x0, sp, #0xc8
  418120:	cmp	x1, x0
  418124:	b.eq	41813c <udev_event_subst_format+0x728>  // b.none
  418128:	ldr	x1, [sp, #136]
  41812c:	add	x0, sp, #0xc8
  418130:	mov	x2, x1
  418134:	mov	x1, #0x200                 	// #512
  418138:	bl	40a300 <strscpy@plt>
  41813c:	add	x0, sp, #0xc8
  418140:	mov	x1, #0x0                   	// #0
  418144:	bl	40acd0 <delete_trailing_chars@plt>
  418148:	add	x2, sp, #0xc8
  41814c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418150:	add	x1, x0, #0xc00
  418154:	mov	x0, x2
  418158:	bl	40a7d0 <util_replace_chars@plt>
  41815c:	str	w0, [sp, #124]
  418160:	ldr	w0, [sp, #124]
  418164:	cmp	w0, #0x0
  418168:	b.le	41822c <udev_event_subst_format+0x818>
  41816c:	str	xzr, [sp, #152]
  418170:	ldr	x0, [sp, #168]
  418174:	str	x0, [sp, #192]
  418178:	mov	w0, #0x7                   	// #7
  41817c:	str	w0, [sp, #128]
  418180:	str	wzr, [sp, #132]
  418184:	ldr	x0, [sp, #192]
  418188:	cmp	x0, #0x0
  41818c:	b.eq	4181c8 <udev_event_subst_format+0x7b4>  // b.none
  418190:	mov	w0, #0x1                   	// #1
  418194:	bl	40be30 <log_get_max_level_realm@plt>
  418198:	mov	w1, w0
  41819c:	ldr	w0, [sp, #128]
  4181a0:	cmp	w0, w1
  4181a4:	cset	w0, le
  4181a8:	and	w0, w0, #0xff
  4181ac:	and	x0, x0, #0xff
  4181b0:	cmp	x0, #0x0
  4181b4:	b.eq	4181c8 <udev_event_subst_format+0x7b4>  // b.none
  4181b8:	add	x0, sp, #0x98
  4181bc:	mov	x1, x0
  4181c0:	ldr	x0, [sp, #192]
  4181c4:	bl	40aba0 <sd_device_get_sysname@plt>
  4181c8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4181cc:	add	x2, x0, #0xabb
  4181d0:	ldr	x0, [sp, #152]
  4181d4:	cmp	x0, #0x0
  4181d8:	b.eq	4181e8 <udev_event_subst_format+0x7d4>  // b.none
  4181dc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4181e0:	add	x0, x0, #0xbc8
  4181e4:	b	4181ec <udev_event_subst_format+0x7d8>
  4181e8:	mov	x0, #0x0                   	// #0
  4181ec:	ldr	x3, [sp, #152]
  4181f0:	ldr	w1, [sp, #124]
  4181f4:	str	w1, [sp, #16]
  4181f8:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4181fc:	add	x1, x1, #0xc08
  418200:	str	x1, [sp, #8]
  418204:	str	xzr, [sp]
  418208:	mov	x7, #0x0                   	// #0
  41820c:	mov	x6, x3
  418210:	mov	x5, x0
  418214:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418218:	add	x4, x0, #0x5b0
  41821c:	mov	w3, #0x16e                 	// #366
  418220:	ldr	w1, [sp, #132]
  418224:	ldr	w0, [sp, #128]
  418228:	bl	40b020 <log_object_internal@plt>
  41822c:	add	x1, sp, #0xc8
  418230:	add	x0, sp, #0x90
  418234:	mov	x2, x1
  418238:	ldr	x1, [sp, #56]
  41823c:	bl	40a5d0 <strpcpy@plt>
  418240:	str	x0, [sp, #56]
  418244:	b	41853c <udev_event_subst_format+0xb28>
  418248:	add	x0, sp, #0x98
  41824c:	mov	x1, x0
  418250:	ldr	x0, [sp, #168]
  418254:	bl	40be60 <sd_device_get_parent@plt>
  418258:	str	w0, [sp, #112]
  41825c:	ldr	w0, [sp, #112]
  418260:	cmn	w0, #0x13
  418264:	b.eq	41857c <udev_event_subst_format+0xb68>  // b.none
  418268:	ldr	w0, [sp, #112]
  41826c:	cmp	w0, #0x0
  418270:	b.ge	41827c <udev_event_subst_format+0x868>  // b.tcont
  418274:	ldrsw	x0, [sp, #112]
  418278:	b	4185a4 <udev_event_subst_format+0xb90>
  41827c:	ldr	x0, [sp, #152]
  418280:	add	x1, sp, #0x88
  418284:	bl	40a6f0 <sd_device_get_devname@plt>
  418288:	str	w0, [sp, #112]
  41828c:	ldr	w0, [sp, #112]
  418290:	cmn	w0, #0x2
  418294:	b.eq	418584 <udev_event_subst_format+0xb70>  // b.none
  418298:	ldr	w0, [sp, #112]
  41829c:	cmp	w0, #0x0
  4182a0:	b.ge	4182ac <udev_event_subst_format+0x898>  // b.tcont
  4182a4:	ldrsw	x0, [sp, #112]
  4182a8:	b	4185a4 <udev_event_subst_format+0xb90>
  4182ac:	ldr	x0, [sp, #136]
  4182b0:	add	x1, x0, #0x5
  4182b4:	add	x0, sp, #0x90
  4182b8:	mov	x2, x1
  4182bc:	ldr	x1, [sp, #56]
  4182c0:	bl	40a5d0 <strpcpy@plt>
  4182c4:	str	x0, [sp, #56]
  4182c8:	b	41853c <udev_event_subst_format+0xb28>
  4182cc:	add	x0, sp, #0x88
  4182d0:	mov	x1, x0
  4182d4:	ldr	x0, [sp, #168]
  4182d8:	bl	40a6f0 <sd_device_get_devname@plt>
  4182dc:	str	w0, [sp, #112]
  4182e0:	ldr	w0, [sp, #112]
  4182e4:	cmn	w0, #0x2
  4182e8:	b.eq	41858c <udev_event_subst_format+0xb78>  // b.none
  4182ec:	ldr	w0, [sp, #112]
  4182f0:	cmp	w0, #0x0
  4182f4:	b.ge	418300 <udev_event_subst_format+0x8ec>  // b.tcont
  4182f8:	ldrsw	x0, [sp, #112]
  4182fc:	b	4185a4 <udev_event_subst_format+0xb90>
  418300:	ldr	x1, [sp, #136]
  418304:	add	x0, sp, #0x90
  418308:	mov	x2, x1
  41830c:	ldr	x1, [sp, #56]
  418310:	bl	40a5d0 <strpcpy@plt>
  418314:	str	x0, [sp, #56]
  418318:	b	41853c <udev_event_subst_format+0xb28>
  41831c:	ldr	x0, [sp, #88]
  418320:	ldr	x0, [x0, #24]
  418324:	cmp	x0, #0x0
  418328:	b.eq	41834c <udev_event_subst_format+0x938>  // b.none
  41832c:	ldr	x0, [sp, #88]
  418330:	ldr	x1, [x0, #24]
  418334:	add	x0, sp, #0x90
  418338:	mov	x2, x1
  41833c:	ldr	x1, [sp, #56]
  418340:	bl	40a5d0 <strpcpy@plt>
  418344:	str	x0, [sp, #56]
  418348:	b	41853c <udev_event_subst_format+0xb28>
  41834c:	add	x0, sp, #0x88
  418350:	mov	x1, x0
  418354:	ldr	x0, [sp, #168]
  418358:	bl	40a6f0 <sd_device_get_devname@plt>
  41835c:	cmp	w0, #0x0
  418360:	b.lt	418384 <udev_event_subst_format+0x970>  // b.tstop
  418364:	ldr	x0, [sp, #136]
  418368:	add	x1, x0, #0x5
  41836c:	add	x0, sp, #0x90
  418370:	mov	x2, x1
  418374:	ldr	x1, [sp, #56]
  418378:	bl	40a5d0 <strpcpy@plt>
  41837c:	str	x0, [sp, #56]
  418380:	b	41853c <udev_event_subst_format+0xb28>
  418384:	add	x0, sp, #0x88
  418388:	mov	x1, x0
  41838c:	ldr	x0, [sp, #168]
  418390:	bl	40aba0 <sd_device_get_sysname@plt>
  418394:	str	w0, [sp, #112]
  418398:	ldr	w0, [sp, #112]
  41839c:	cmp	w0, #0x0
  4183a0:	b.ge	4183ac <udev_event_subst_format+0x998>  // b.tcont
  4183a4:	ldrsw	x0, [sp, #112]
  4183a8:	b	4185a4 <udev_event_subst_format+0xb90>
  4183ac:	ldr	x1, [sp, #136]
  4183b0:	add	x0, sp, #0x90
  4183b4:	mov	x2, x1
  4183b8:	ldr	x1, [sp, #56]
  4183bc:	bl	40a5d0 <strpcpy@plt>
  4183c0:	str	x0, [sp, #56]
  4183c4:	b	41853c <udev_event_subst_format+0xb28>
  4183c8:	ldr	x0, [sp, #168]
  4183cc:	bl	40ad70 <sd_device_get_devlink_first@plt>
  4183d0:	str	x0, [sp, #136]
  4183d4:	b	418440 <udev_event_subst_format+0xa2c>
  4183d8:	ldr	x0, [sp, #144]
  4183dc:	ldr	x1, [sp, #64]
  4183e0:	cmp	x1, x0
  4183e4:	b.ne	418408 <udev_event_subst_format+0x9f4>  // b.any
  4183e8:	ldr	x0, [sp, #136]
  4183ec:	add	x1, x0, #0x5
  4183f0:	add	x0, sp, #0x90
  4183f4:	mov	x2, x1
  4183f8:	ldr	x1, [sp, #56]
  4183fc:	bl	40a5d0 <strpcpy@plt>
  418400:	str	x0, [sp, #56]
  418404:	b	418434 <udev_event_subst_format+0xa20>
  418408:	ldr	x0, [sp, #136]
  41840c:	add	x0, x0, #0x5
  418410:	add	x5, sp, #0x90
  418414:	mov	x4, #0x0                   	// #0
  418418:	mov	x3, x0
  41841c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418420:	add	x2, x0, #0xc28
  418424:	ldr	x1, [sp, #56]
  418428:	mov	x0, x5
  41842c:	bl	40aa50 <strpcpyl@plt>
  418430:	str	x0, [sp, #56]
  418434:	ldr	x0, [sp, #168]
  418438:	bl	40bde0 <sd_device_get_devlink_next@plt>
  41843c:	str	x0, [sp, #136]
  418440:	ldr	x0, [sp, #136]
  418444:	cmp	x0, #0x0
  418448:	b.ne	4183d8 <udev_event_subst_format+0x9c4>  // b.any
  41844c:	ldr	x0, [sp, #144]
  418450:	ldr	x1, [sp, #64]
  418454:	cmp	x1, x0
  418458:	b.ne	418538 <udev_event_subst_format+0xb24>  // b.any
  41845c:	b	418598 <udev_event_subst_format+0xb84>
  418460:	add	x3, sp, #0x90
  418464:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418468:	add	x2, x0, #0xc30
  41846c:	ldr	x1, [sp, #56]
  418470:	mov	x0, x3
  418474:	bl	40a5d0 <strpcpy@plt>
  418478:	str	x0, [sp, #56]
  41847c:	b	41853c <udev_event_subst_format+0xb28>
  418480:	add	x3, sp, #0x90
  418484:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418488:	add	x2, x0, #0xc38
  41848c:	ldr	x1, [sp, #56]
  418490:	mov	x0, x3
  418494:	bl	40a5d0 <strpcpy@plt>
  418498:	str	x0, [sp, #56]
  41849c:	b	41853c <udev_event_subst_format+0xb28>
  4184a0:	ldr	x0, [sp, #72]
  4184a4:	bl	417018 <isempty>
  4184a8:	and	w0, w0, #0xff
  4184ac:	cmp	w0, #0x0
  4184b0:	b.eq	4184bc <udev_event_subst_format+0xaa8>  // b.none
  4184b4:	mov	x0, #0xffffffffffffffea    	// #-22
  4184b8:	b	4185a4 <udev_event_subst_format+0xb90>
  4184bc:	add	x0, sp, #0x88
  4184c0:	mov	x2, x0
  4184c4:	ldr	x1, [sp, #72]
  4184c8:	ldr	x0, [sp, #168]
  4184cc:	bl	40a310 <sd_device_get_property_value@plt>
  4184d0:	str	w0, [sp, #112]
  4184d4:	ldr	w0, [sp, #112]
  4184d8:	cmn	w0, #0x2
  4184dc:	b.eq	418594 <udev_event_subst_format+0xb80>  // b.none
  4184e0:	ldr	w0, [sp, #112]
  4184e4:	cmp	w0, #0x0
  4184e8:	b.ge	4184f4 <udev_event_subst_format+0xae0>  // b.tcont
  4184ec:	ldrsw	x0, [sp, #112]
  4184f0:	b	4185a4 <udev_event_subst_format+0xb90>
  4184f4:	ldr	x1, [sp, #136]
  4184f8:	add	x0, sp, #0x90
  4184fc:	mov	x2, x1
  418500:	ldr	x1, [sp, #56]
  418504:	bl	40a5d0 <strpcpy@plt>
  418508:	str	x0, [sp, #56]
  41850c:	b	41853c <udev_event_subst_format+0xb28>
  418510:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418514:	add	x1, x0, #0xabb
  418518:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41851c:	add	x4, x0, #0x5c8
  418520:	mov	w3, #0x1ad                 	// #429
  418524:	mov	x2, x1
  418528:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41852c:	add	x1, x0, #0xc40
  418530:	mov	w0, #0x1                   	// #1
  418534:	bl	40aca0 <log_assert_failed_unreachable_realm@plt>
  418538:	nop
  41853c:	ldr	x1, [sp, #144]
  418540:	ldr	x0, [sp, #64]
  418544:	sub	x0, x1, x0
  418548:	b	4185a4 <udev_event_subst_format+0xb90>
  41854c:	nop
  418550:	b	418598 <udev_event_subst_format+0xb84>
  418554:	nop
  418558:	b	418598 <udev_event_subst_format+0xb84>
  41855c:	nop
  418560:	b	418598 <udev_event_subst_format+0xb84>
  418564:	nop
  418568:	b	418598 <udev_event_subst_format+0xb84>
  41856c:	nop
  418570:	b	418598 <udev_event_subst_format+0xb84>
  418574:	nop
  418578:	b	418598 <udev_event_subst_format+0xb84>
  41857c:	nop
  418580:	b	418598 <udev_event_subst_format+0xb84>
  418584:	nop
  418588:	b	418598 <udev_event_subst_format+0xb84>
  41858c:	nop
  418590:	b	418598 <udev_event_subst_format+0xb84>
  418594:	nop
  418598:	ldr	x0, [sp, #144]
  41859c:	strb	wzr, [x0]
  4185a0:	mov	x0, #0x0                   	// #0
  4185a4:	mov	x1, x0
  4185a8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4185ac:	ldr	x0, [x0, #4032]
  4185b0:	ldr	x2, [sp, #712]
  4185b4:	ldr	x0, [x0]
  4185b8:	eor	x0, x2, x0
  4185bc:	cmp	x0, #0x0
  4185c0:	b.eq	4185c8 <udev_event_subst_format+0xbb4>  // b.none
  4185c4:	bl	40b280 <__stack_chk_fail@plt>
  4185c8:	mov	x0, x1
  4185cc:	ldp	x29, x30, [sp, #32]
  4185d0:	add	sp, sp, #0x2d0
  4185d4:	ret

00000000004185d8 <udev_event_apply_format>:
  4185d8:	sub	sp, sp, #0x4d0
  4185dc:	stp	x29, x30, [sp, #32]
  4185e0:	add	x29, sp, #0x20
  4185e4:	stp	x19, x20, [sp, #48]
  4185e8:	stp	x21, x22, [sp, #64]
  4185ec:	str	x0, [sp, #120]
  4185f0:	str	x1, [sp, #112]
  4185f4:	str	x2, [sp, #104]
  4185f8:	str	x3, [sp, #96]
  4185fc:	strb	w4, [sp, #95]
  418600:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  418604:	ldr	x0, [x0, #4032]
  418608:	ldr	x1, [x0]
  41860c:	str	x1, [sp, #1224]
  418610:	mov	x1, #0x0                   	// #0
  418614:	ldr	x0, [sp, #112]
  418618:	str	x0, [sp, #160]
  41861c:	ldr	x0, [sp, #120]
  418620:	cmp	x0, #0x0
  418624:	cset	w0, eq  // eq = none
  418628:	and	w0, w0, #0xff
  41862c:	and	x0, x0, #0xff
  418630:	cmp	x0, #0x0
  418634:	b.eq	418660 <udev_event_apply_format+0x88>  // b.none
  418638:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41863c:	add	x1, x0, #0xabb
  418640:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418644:	add	x4, x0, #0x5e0
  418648:	mov	w3, #0x1bd                 	// #445
  41864c:	mov	x2, x1
  418650:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418654:	add	x1, x0, #0xc68
  418658:	mov	w0, #0x1                   	// #1
  41865c:	bl	40abb0 <log_assert_failed_realm@plt>
  418660:	ldr	x0, [sp, #120]
  418664:	ldr	x0, [x0]
  418668:	cmp	x0, #0x0
  41866c:	cset	w0, eq  // eq = none
  418670:	and	w0, w0, #0xff
  418674:	and	x0, x0, #0xff
  418678:	cmp	x0, #0x0
  41867c:	b.eq	4186a8 <udev_event_apply_format+0xd0>  // b.none
  418680:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418684:	add	x1, x0, #0xabb
  418688:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41868c:	add	x4, x0, #0x5e0
  418690:	mov	w3, #0x1be                 	// #446
  418694:	mov	x2, x1
  418698:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41869c:	add	x1, x0, #0xc70
  4186a0:	mov	w0, #0x1                   	// #1
  4186a4:	bl	40abb0 <log_assert_failed_realm@plt>
  4186a8:	ldr	x0, [sp, #112]
  4186ac:	cmp	x0, #0x0
  4186b0:	cset	w0, eq  // eq = none
  4186b4:	and	w0, w0, #0xff
  4186b8:	and	x0, x0, #0xff
  4186bc:	cmp	x0, #0x0
  4186c0:	b.eq	4186ec <udev_event_apply_format+0x114>  // b.none
  4186c4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4186c8:	add	x1, x0, #0xabb
  4186cc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4186d0:	add	x4, x0, #0x5e0
  4186d4:	mov	w3, #0x1bf                 	// #447
  4186d8:	mov	x2, x1
  4186dc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4186e0:	add	x1, x0, #0xc80
  4186e4:	mov	w0, #0x1                   	// #1
  4186e8:	bl	40abb0 <log_assert_failed_realm@plt>
  4186ec:	ldr	x0, [sp, #104]
  4186f0:	cmp	x0, #0x0
  4186f4:	cset	w0, eq  // eq = none
  4186f8:	and	w0, w0, #0xff
  4186fc:	and	x0, x0, #0xff
  418700:	cmp	x0, #0x0
  418704:	b.eq	418730 <udev_event_apply_format+0x158>  // b.none
  418708:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41870c:	add	x1, x0, #0xabb
  418710:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418714:	add	x4, x0, #0x5e0
  418718:	mov	w3, #0x1c0                 	// #448
  41871c:	mov	x2, x1
  418720:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418724:	add	x1, x0, #0xc88
  418728:	mov	w0, #0x1                   	// #1
  41872c:	bl	40abb0 <log_assert_failed_realm@plt>
  418730:	ldr	x0, [sp, #96]
  418734:	cmp	x0, #0x0
  418738:	cset	w0, eq  // eq = none
  41873c:	and	w0, w0, #0xff
  418740:	and	x0, x0, #0xff
  418744:	cmp	x0, #0x0
  418748:	b.eq	418a24 <udev_event_apply_format+0x44c>  // b.none
  41874c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418750:	add	x1, x0, #0xabb
  418754:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418758:	add	x4, x0, #0x5e0
  41875c:	mov	w3, #0x1c1                 	// #449
  418760:	mov	x2, x1
  418764:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418768:	add	x1, x0, #0xc90
  41876c:	mov	w0, #0x1                   	// #1
  418770:	bl	40abb0 <log_assert_failed_realm@plt>
  418774:	add	x2, sp, #0xc8
  418778:	add	x1, sp, #0x88
  41877c:	add	x0, sp, #0xa0
  418780:	mov	x3, x2
  418784:	mov	x2, x1
  418788:	mov	w1, #0x0                   	// #0
  41878c:	bl	4174f4 <get_subst_type>
  418790:	str	w0, [sp, #140]
  418794:	ldr	w0, [sp, #140]
  418798:	cmp	w0, #0x0
  41879c:	b.ge	418870 <udev_event_apply_format+0x298>  // b.tcont
  4187a0:	str	xzr, [sp, #168]
  4187a4:	ldr	x0, [sp, #120]
  4187a8:	ldr	x0, [x0]
  4187ac:	str	x0, [sp, #192]
  4187b0:	mov	w0, #0x4                   	// #4
  4187b4:	str	w0, [sp, #152]
  4187b8:	ldr	w0, [sp, #140]
  4187bc:	str	w0, [sp, #156]
  4187c0:	ldr	x0, [sp, #192]
  4187c4:	cmp	x0, #0x0
  4187c8:	b.eq	418804 <udev_event_apply_format+0x22c>  // b.none
  4187cc:	mov	w0, #0x1                   	// #1
  4187d0:	bl	40be30 <log_get_max_level_realm@plt>
  4187d4:	mov	w1, w0
  4187d8:	ldr	w0, [sp, #152]
  4187dc:	cmp	w0, w1
  4187e0:	cset	w0, le
  4187e4:	and	w0, w0, #0xff
  4187e8:	and	x0, x0, #0xff
  4187ec:	cmp	x0, #0x0
  4187f0:	b.eq	418804 <udev_event_apply_format+0x22c>  // b.none
  4187f4:	add	x0, sp, #0xa8
  4187f8:	mov	x1, x0
  4187fc:	ldr	x0, [sp, #192]
  418800:	bl	40aba0 <sd_device_get_sysname@plt>
  418804:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418808:	add	x2, x0, #0xabb
  41880c:	ldr	x0, [sp, #168]
  418810:	cmp	x0, #0x0
  418814:	b.eq	418824 <udev_event_apply_format+0x24c>  // b.none
  418818:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41881c:	add	x0, x0, #0xbc8
  418820:	b	418828 <udev_event_apply_format+0x250>
  418824:	mov	x0, #0x0                   	// #0
  418828:	ldr	x3, [sp, #168]
  41882c:	ldr	x1, [sp, #112]
  418830:	str	x1, [sp, #16]
  418834:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418838:	add	x1, x1, #0xca0
  41883c:	str	x1, [sp, #8]
  418840:	str	xzr, [sp]
  418844:	mov	x7, #0x0                   	// #0
  418848:	mov	x6, x3
  41884c:	mov	x5, x0
  418850:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418854:	add	x4, x0, #0x5f8
  418858:	mov	w3, #0x1ca                 	// #458
  41885c:	ldr	w1, [sp, #156]
  418860:	ldr	w0, [sp, #152]
  418864:	bl	40b020 <log_object_internal@plt>
  418868:	sxtw	x0, w0
  41886c:	b	418a8c <udev_event_apply_format+0x4b4>
  418870:	ldr	w0, [sp, #140]
  418874:	cmp	w0, #0x0
  418878:	b.ne	4188b8 <udev_event_apply_format+0x2e0>  // b.any
  41887c:	ldr	x0, [sp, #96]
  418880:	cmp	x0, #0x1
  418884:	b.ls	418a38 <udev_event_apply_format+0x460>  // b.plast
  418888:	ldr	x1, [sp, #160]
  41888c:	add	x0, x1, #0x1
  418890:	str	x0, [sp, #160]
  418894:	ldr	x0, [sp, #104]
  418898:	add	x2, x0, #0x1
  41889c:	str	x2, [sp, #104]
  4188a0:	ldrb	w1, [x1]
  4188a4:	strb	w1, [x0]
  4188a8:	ldr	x0, [sp, #96]
  4188ac:	sub	x0, x0, #0x1
  4188b0:	str	x0, [sp, #96]
  4188b4:	b	418a24 <udev_event_apply_format+0x44c>
  4188b8:	ldr	w0, [sp, #136]
  4188bc:	add	x1, sp, #0xc8
  4188c0:	ldr	x4, [sp, #96]
  4188c4:	ldr	x3, [sp, #104]
  4188c8:	mov	x2, x1
  4188cc:	mov	w1, w0
  4188d0:	ldr	x0, [sp, #120]
  4188d4:	bl	417a14 <udev_event_subst_format>
  4188d8:	str	x0, [sp, #176]
  4188dc:	ldr	x0, [sp, #176]
  4188e0:	cmp	x0, #0x0
  4188e4:	b.ge	4189d4 <udev_event_apply_format+0x3fc>  // b.tcont
  4188e8:	str	xzr, [sp, #168]
  4188ec:	ldr	x0, [sp, #120]
  4188f0:	ldr	x0, [x0]
  4188f4:	str	x0, [sp, #184]
  4188f8:	mov	w0, #0x4                   	// #4
  4188fc:	str	w0, [sp, #144]
  418900:	ldr	x0, [sp, #176]
  418904:	str	w0, [sp, #148]
  418908:	ldr	x0, [sp, #184]
  41890c:	cmp	x0, #0x0
  418910:	b.eq	41894c <udev_event_apply_format+0x374>  // b.none
  418914:	mov	w0, #0x1                   	// #1
  418918:	bl	40be30 <log_get_max_level_realm@plt>
  41891c:	mov	w1, w0
  418920:	ldr	w0, [sp, #144]
  418924:	cmp	w0, w1
  418928:	cset	w0, le
  41892c:	and	w0, w0, #0xff
  418930:	and	x0, x0, #0xff
  418934:	cmp	x0, #0x0
  418938:	b.eq	41894c <udev_event_apply_format+0x374>  // b.none
  41893c:	add	x0, sp, #0xa8
  418940:	mov	x1, x0
  418944:	ldr	x0, [sp, #184]
  418948:	bl	40aba0 <sd_device_get_sysname@plt>
  41894c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418950:	add	x20, x0, #0xabb
  418954:	ldr	x0, [sp, #168]
  418958:	cmp	x0, #0x0
  41895c:	b.eq	41896c <udev_event_apply_format+0x394>  // b.none
  418960:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418964:	add	x19, x0, #0xbc8
  418968:	b	418970 <udev_event_apply_format+0x398>
  41896c:	mov	x19, #0x0                   	// #0
  418970:	ldr	x21, [sp, #168]
  418974:	ldr	w0, [sp, #136]
  418978:	bl	41740c <format_type_to_string>
  41897c:	mov	x22, x0
  418980:	ldr	w0, [sp, #136]
  418984:	bl	417480 <format_type_to_char>
  418988:	and	w0, w0, #0xff
  41898c:	str	w0, [sp, #24]
  418990:	str	x22, [sp, #16]
  418994:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418998:	add	x0, x0, #0xcc8
  41899c:	str	x0, [sp, #8]
  4189a0:	str	xzr, [sp]
  4189a4:	mov	x7, #0x0                   	// #0
  4189a8:	mov	x6, x21
  4189ac:	mov	x5, x19
  4189b0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4189b4:	add	x4, x0, #0x5f8
  4189b8:	mov	w3, #0x1d5                 	// #469
  4189bc:	mov	x2, x20
  4189c0:	ldr	w1, [sp, #148]
  4189c4:	ldr	w0, [sp, #144]
  4189c8:	bl	40b020 <log_object_internal@plt>
  4189cc:	sxtw	x0, w0
  4189d0:	b	418a8c <udev_event_apply_format+0x4b4>
  4189d4:	ldrb	w0, [sp, #95]
  4189d8:	cmp	w0, #0x0
  4189dc:	b.eq	418a04 <udev_event_apply_format+0x42c>  // b.none
  4189e0:	ldr	w0, [sp, #136]
  4189e4:	cmp	w0, #0xa
  4189e8:	b.eq	418a04 <udev_event_apply_format+0x42c>  // b.none
  4189ec:	ldr	x0, [sp, #176]
  4189f0:	mov	x2, x0
  4189f4:	ldr	x1, [sp, #104]
  4189f8:	ldr	x0, [sp, #104]
  4189fc:	bl	40a3a0 <util_replace_whitespace@plt>
  418a00:	str	x0, [sp, #176]
  418a04:	ldr	x0, [sp, #176]
  418a08:	ldr	x1, [sp, #104]
  418a0c:	add	x0, x1, x0
  418a10:	str	x0, [sp, #104]
  418a14:	ldr	x0, [sp, #176]
  418a18:	ldr	x1, [sp, #96]
  418a1c:	sub	x0, x1, x0
  418a20:	str	x0, [sp, #96]
  418a24:	ldr	x0, [sp, #160]
  418a28:	ldrb	w0, [x0]
  418a2c:	cmp	w0, #0x0
  418a30:	b.ne	418774 <udev_event_apply_format+0x19c>  // b.any
  418a34:	b	418a3c <udev_event_apply_format+0x464>
  418a38:	nop
  418a3c:	ldr	x0, [sp, #96]
  418a40:	cmp	x0, #0x0
  418a44:	cset	w0, eq  // eq = none
  418a48:	and	w0, w0, #0xff
  418a4c:	and	x0, x0, #0xff
  418a50:	cmp	x0, #0x0
  418a54:	b.eq	418a80 <udev_event_apply_format+0x4a8>  // b.none
  418a58:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418a5c:	add	x1, x0, #0xabb
  418a60:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418a64:	add	x4, x0, #0x5e0
  418a68:	mov	w3, #0x1e3                 	// #483
  418a6c:	mov	x2, x1
  418a70:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418a74:	add	x1, x0, #0xd18
  418a78:	mov	w0, #0x1                   	// #1
  418a7c:	bl	40abb0 <log_assert_failed_realm@plt>
  418a80:	ldr	x0, [sp, #104]
  418a84:	strb	wzr, [x0]
  418a88:	ldr	x0, [sp, #96]
  418a8c:	mov	x1, x0
  418a90:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  418a94:	ldr	x0, [x0, #4032]
  418a98:	ldr	x2, [sp, #1224]
  418a9c:	ldr	x0, [x0]
  418aa0:	eor	x0, x2, x0
  418aa4:	cmp	x0, #0x0
  418aa8:	b.eq	418ab0 <udev_event_apply_format+0x4d8>  // b.none
  418aac:	bl	40b280 <__stack_chk_fail@plt>
  418ab0:	mov	x0, x1
  418ab4:	ldp	x19, x20, [sp, #48]
  418ab8:	ldp	x21, x22, [sp, #64]
  418abc:	ldp	x29, x30, [sp, #32]
  418ac0:	add	sp, sp, #0x4d0
  418ac4:	ret

0000000000418ac8 <udev_check_format>:
  418ac8:	sub	sp, sp, #0x450
  418acc:	stp	x29, x30, [sp]
  418ad0:	mov	x29, sp
  418ad4:	str	x0, [sp, #40]
  418ad8:	str	x1, [sp, #32]
  418adc:	str	x2, [sp, #24]
  418ae0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  418ae4:	ldr	x0, [x0, #4032]
  418ae8:	ldr	x1, [x0]
  418aec:	str	x1, [sp, #1096]
  418af0:	mov	x1, #0x0                   	// #0
  418af4:	ldr	x0, [sp, #40]
  418af8:	str	x0, [sp, #64]
  418afc:	b	418ca4 <udev_check_format+0x1dc>
  418b00:	add	x2, sp, #0x48
  418b04:	add	x1, sp, #0x34
  418b08:	add	x0, sp, #0x40
  418b0c:	mov	x3, x2
  418b10:	mov	x2, x1
  418b14:	mov	w1, #0x1                   	// #1
  418b18:	bl	4174f4 <get_subst_type>
  418b1c:	str	w0, [sp, #60]
  418b20:	ldr	w0, [sp, #60]
  418b24:	cmp	w0, #0x0
  418b28:	b.ge	418b74 <udev_check_format+0xac>  // b.tcont
  418b2c:	ldr	x0, [sp, #32]
  418b30:	cmp	x0, #0x0
  418b34:	b.eq	418b50 <udev_check_format+0x88>  // b.none
  418b38:	ldr	x1, [sp, #64]
  418b3c:	ldr	x0, [sp, #40]
  418b40:	sub	x0, x1, x0
  418b44:	mov	x1, x0
  418b48:	ldr	x0, [sp, #32]
  418b4c:	str	x1, [x0]
  418b50:	ldr	x0, [sp, #24]
  418b54:	cmp	x0, #0x0
  418b58:	b.eq	418b6c <udev_check_format+0xa4>  // b.none
  418b5c:	ldr	x0, [sp, #24]
  418b60:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418b64:	add	x1, x1, #0xd28
  418b68:	str	x1, [x0]
  418b6c:	ldr	w0, [sp, #60]
  418b70:	b	418cb8 <udev_check_format+0x1f0>
  418b74:	ldr	w0, [sp, #60]
  418b78:	cmp	w0, #0x0
  418b7c:	b.ne	418b90 <udev_check_format+0xc8>  // b.any
  418b80:	ldr	x0, [sp, #64]
  418b84:	add	x0, x0, #0x1
  418b88:	str	x0, [sp, #64]
  418b8c:	b	418ca4 <udev_check_format+0x1dc>
  418b90:	strb	wzr, [sp, #51]
  418b94:	ldr	w0, [sp, #52]
  418b98:	sub	w0, w0, #0x1
  418b9c:	cmp	w0, #0x1
  418ba0:	b.hi	418bac <udev_check_format+0xe4>  // b.pmore
  418ba4:	mov	w0, #0x1                   	// #1
  418ba8:	strb	w0, [sp, #51]
  418bac:	nop
  418bb0:	ldrb	w0, [sp, #51]
  418bb4:	cmp	w0, #0x0
  418bb8:	b.eq	418c18 <udev_check_format+0x150>  // b.none
  418bbc:	add	x0, sp, #0x48
  418bc0:	bl	417018 <isempty>
  418bc4:	and	w0, w0, #0xff
  418bc8:	cmp	w0, #0x0
  418bcc:	b.eq	418c18 <udev_check_format+0x150>  // b.none
  418bd0:	ldr	x0, [sp, #32]
  418bd4:	cmp	x0, #0x0
  418bd8:	b.eq	418bf4 <udev_check_format+0x12c>  // b.none
  418bdc:	ldr	x1, [sp, #64]
  418be0:	ldr	x0, [sp, #40]
  418be4:	sub	x0, x1, x0
  418be8:	mov	x1, x0
  418bec:	ldr	x0, [sp, #32]
  418bf0:	str	x1, [x0]
  418bf4:	ldr	x0, [sp, #24]
  418bf8:	cmp	x0, #0x0
  418bfc:	b.eq	418c10 <udev_check_format+0x148>  // b.none
  418c00:	ldr	x0, [sp, #24]
  418c04:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418c08:	add	x1, x1, #0xd48
  418c0c:	str	x1, [x0]
  418c10:	mov	w0, #0xffffffea            	// #-22
  418c14:	b	418cb8 <udev_check_format+0x1f0>
  418c18:	ldr	w0, [sp, #52]
  418c1c:	cmp	w0, #0xa
  418c20:	b.ne	418ca4 <udev_check_format+0x1dc>  // b.any
  418c24:	add	x0, sp, #0x48
  418c28:	bl	417018 <isempty>
  418c2c:	and	w0, w0, #0xff
  418c30:	eor	w0, w0, #0x1
  418c34:	and	w0, w0, #0xff
  418c38:	cmp	w0, #0x0
  418c3c:	b.eq	418ca4 <udev_check_format+0x1dc>  // b.none
  418c40:	add	x1, sp, #0x38
  418c44:	add	x0, sp, #0x48
  418c48:	bl	41786c <safe_atou_optional_plus>
  418c4c:	str	w0, [sp, #60]
  418c50:	ldr	w0, [sp, #60]
  418c54:	cmp	w0, #0x0
  418c58:	b.ge	418ca4 <udev_check_format+0x1dc>  // b.tcont
  418c5c:	ldr	x0, [sp, #32]
  418c60:	cmp	x0, #0x0
  418c64:	b.eq	418c80 <udev_check_format+0x1b8>  // b.none
  418c68:	ldr	x1, [sp, #64]
  418c6c:	ldr	x0, [sp, #40]
  418c70:	sub	x0, x1, x0
  418c74:	mov	x1, x0
  418c78:	ldr	x0, [sp, #32]
  418c7c:	str	x1, [x0]
  418c80:	ldr	x0, [sp, #24]
  418c84:	cmp	x0, #0x0
  418c88:	b.eq	418c9c <udev_check_format+0x1d4>  // b.none
  418c8c:	ldr	x0, [sp, #24]
  418c90:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418c94:	add	x1, x1, #0xd60
  418c98:	str	x1, [x0]
  418c9c:	ldr	w0, [sp, #60]
  418ca0:	b	418cb8 <udev_check_format+0x1f0>
  418ca4:	ldr	x0, [sp, #64]
  418ca8:	ldrb	w0, [x0]
  418cac:	cmp	w0, #0x0
  418cb0:	b.ne	418b00 <udev_check_format+0x38>  // b.any
  418cb4:	mov	w0, #0x0                   	// #0
  418cb8:	mov	w1, w0
  418cbc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  418cc0:	ldr	x0, [x0, #4032]
  418cc4:	ldr	x2, [sp, #1096]
  418cc8:	ldr	x0, [x0]
  418ccc:	eor	x0, x2, x0
  418cd0:	cmp	x0, #0x0
  418cd4:	b.eq	418cdc <udev_check_format+0x214>  // b.none
  418cd8:	bl	40b280 <__stack_chk_fail@plt>
  418cdc:	mov	w0, w1
  418ce0:	ldp	x29, x30, [sp]
  418ce4:	add	sp, sp, #0x450
  418ce8:	ret

0000000000418cec <on_spawn_io>:
  418cec:	mov	x12, #0x10d0                	// #4304
  418cf0:	sub	sp, sp, x12
  418cf4:	stp	x29, x30, [sp, #48]
  418cf8:	add	x29, sp, #0x30
  418cfc:	stp	x19, x20, [sp, #64]
  418d00:	str	x0, [sp, #104]
  418d04:	str	w1, [sp, #100]
  418d08:	str	w2, [sp, #96]
  418d0c:	str	x3, [sp, #88]
  418d10:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  418d14:	ldr	x0, [x0, #4032]
  418d18:	ldr	x1, [x0]
  418d1c:	str	x1, [sp, #4296]
  418d20:	mov	x1, #0x0                   	// #0
  418d24:	ldr	x0, [sp, #88]
  418d28:	str	x0, [sp, #168]
  418d2c:	ldr	x0, [sp, #168]
  418d30:	cmp	x0, #0x0
  418d34:	cset	w0, eq  // eq = none
  418d38:	and	w0, w0, #0xff
  418d3c:	and	x0, x0, #0xff
  418d40:	cmp	x0, #0x0
  418d44:	b.eq	418d70 <on_spawn_io+0x84>  // b.none
  418d48:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418d4c:	add	x1, x0, #0xabb
  418d50:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418d54:	add	x4, x0, #0x610
  418d58:	mov	w3, #0x21a                 	// #538
  418d5c:	mov	x2, x1
  418d60:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418d64:	add	x1, x0, #0xd88
  418d68:	mov	w0, #0x1                   	// #1
  418d6c:	bl	40abb0 <log_assert_failed_realm@plt>
  418d70:	ldr	x0, [sp, #168]
  418d74:	ldr	w0, [x0, #52]
  418d78:	ldr	w1, [sp, #100]
  418d7c:	cmp	w1, w0
  418d80:	cset	w0, ne  // ne = any
  418d84:	and	w0, w0, #0xff
  418d88:	and	x0, x0, #0xff
  418d8c:	cmp	x0, #0x0
  418d90:	b.eq	418de0 <on_spawn_io+0xf4>  // b.none
  418d94:	ldr	x0, [sp, #168]
  418d98:	ldr	w0, [x0, #56]
  418d9c:	ldr	w1, [sp, #100]
  418da0:	cmp	w1, w0
  418da4:	cset	w0, ne  // ne = any
  418da8:	and	w0, w0, #0xff
  418dac:	and	x0, x0, #0xff
  418db0:	cmp	x0, #0x0
  418db4:	b.eq	418de0 <on_spawn_io+0xf4>  // b.none
  418db8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418dbc:	add	x1, x0, #0xabb
  418dc0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418dc4:	add	x4, x0, #0x610
  418dc8:	mov	w3, #0x21b                 	// #539
  418dcc:	mov	x2, x1
  418dd0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418dd4:	add	x1, x0, #0xd90
  418dd8:	mov	w0, #0x1                   	// #1
  418ddc:	bl	40abb0 <log_assert_failed_realm@plt>
  418de0:	ldr	x0, [sp, #168]
  418de4:	ldr	x0, [x0, #64]
  418de8:	cmp	x0, #0x0
  418dec:	cset	w0, ne  // ne = any
  418df0:	and	w0, w0, #0xff
  418df4:	and	x0, x0, #0xff
  418df8:	cmp	x0, #0x0
  418dfc:	b.eq	418e50 <on_spawn_io+0x164>  // b.none
  418e00:	ldr	x0, [sp, #168]
  418e04:	ldr	x1, [x0, #80]
  418e08:	ldr	x0, [sp, #168]
  418e0c:	ldr	x0, [x0, #72]
  418e10:	cmp	x1, x0
  418e14:	cset	w0, cs  // cs = hs, nlast
  418e18:	and	w0, w0, #0xff
  418e1c:	and	x0, x0, #0xff
  418e20:	cmp	x0, #0x0
  418e24:	b.eq	418e50 <on_spawn_io+0x164>  // b.none
  418e28:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418e2c:	add	x1, x0, #0xabb
  418e30:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418e34:	add	x4, x0, #0x610
  418e38:	mov	w3, #0x21c                 	// #540
  418e3c:	mov	x2, x1
  418e40:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418e44:	add	x1, x0, #0xdc8
  418e48:	mov	w0, #0x1                   	// #1
  418e4c:	bl	40abb0 <log_assert_failed_realm@plt>
  418e50:	ldr	x0, [sp, #168]
  418e54:	ldr	w0, [x0, #52]
  418e58:	ldr	w1, [sp, #100]
  418e5c:	cmp	w1, w0
  418e60:	b.ne	418ea8 <on_spawn_io+0x1bc>  // b.any
  418e64:	ldr	x0, [sp, #168]
  418e68:	ldr	x0, [x0, #64]
  418e6c:	cmp	x0, #0x0
  418e70:	b.eq	418ea8 <on_spawn_io+0x1bc>  // b.none
  418e74:	ldr	x0, [sp, #168]
  418e78:	ldr	x1, [x0, #64]
  418e7c:	ldr	x0, [sp, #168]
  418e80:	ldr	x0, [x0, #80]
  418e84:	add	x0, x1, x0
  418e88:	str	x0, [sp, #144]
  418e8c:	ldr	x0, [sp, #168]
  418e90:	ldr	x1, [x0, #72]
  418e94:	ldr	x0, [sp, #168]
  418e98:	ldr	x0, [x0, #80]
  418e9c:	sub	x0, x1, x0
  418ea0:	str	x0, [sp, #152]
  418ea4:	b	418eb8 <on_spawn_io+0x1cc>
  418ea8:	add	x0, sp, #0xc8
  418eac:	str	x0, [sp, #144]
  418eb0:	mov	x0, #0x1000                	// #4096
  418eb4:	str	x0, [sp, #152]
  418eb8:	ldr	x0, [sp, #152]
  418ebc:	sub	x0, x0, #0x1
  418ec0:	mov	x2, x0
  418ec4:	ldr	x1, [sp, #144]
  418ec8:	ldr	w0, [sp, #100]
  418ecc:	bl	40b0b0 <read@plt>
  418ed0:	str	x0, [sp, #176]
  418ed4:	ldr	x0, [sp, #176]
  418ed8:	cmp	x0, #0x0
  418edc:	b.ge	418fc8 <on_spawn_io+0x2dc>  // b.tcont
  418ee0:	bl	40b040 <__errno_location@plt>
  418ee4:	ldr	w0, [x0]
  418ee8:	cmp	w0, #0xb
  418eec:	b.eq	418fc0 <on_spawn_io+0x2d4>  // b.none
  418ef0:	str	xzr, [sp, #136]
  418ef4:	ldr	x0, [sp, #168]
  418ef8:	ldr	x0, [x0]
  418efc:	str	x0, [sp, #192]
  418f00:	mov	w0, #0x3                   	// #3
  418f04:	str	w0, [sp, #120]
  418f08:	bl	40b040 <__errno_location@plt>
  418f0c:	ldr	w0, [x0]
  418f10:	str	w0, [sp, #124]
  418f14:	ldr	x0, [sp, #192]
  418f18:	cmp	x0, #0x0
  418f1c:	b.eq	418f58 <on_spawn_io+0x26c>  // b.none
  418f20:	mov	w0, #0x1                   	// #1
  418f24:	bl	40be30 <log_get_max_level_realm@plt>
  418f28:	mov	w1, w0
  418f2c:	ldr	w0, [sp, #120]
  418f30:	cmp	w0, w1
  418f34:	cset	w0, le
  418f38:	and	w0, w0, #0xff
  418f3c:	and	x0, x0, #0xff
  418f40:	cmp	x0, #0x0
  418f44:	b.eq	418f58 <on_spawn_io+0x26c>  // b.none
  418f48:	add	x0, sp, #0x88
  418f4c:	mov	x1, x0
  418f50:	ldr	x0, [sp, #192]
  418f54:	bl	40aba0 <sd_device_get_sysname@plt>
  418f58:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418f5c:	add	x2, x0, #0xabb
  418f60:	ldr	x0, [sp, #136]
  418f64:	cmp	x0, #0x0
  418f68:	b.eq	418f78 <on_spawn_io+0x28c>  // b.none
  418f6c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418f70:	add	x0, x0, #0xbc8
  418f74:	b	418f7c <on_spawn_io+0x290>
  418f78:	mov	x0, #0x0                   	// #0
  418f7c:	ldr	x3, [sp, #136]
  418f80:	ldr	x1, [sp, #168]
  418f84:	ldr	x1, [x1, #8]
  418f88:	str	x1, [sp, #16]
  418f8c:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  418f90:	add	x1, x1, #0xe08
  418f94:	str	x1, [sp, #8]
  418f98:	str	xzr, [sp]
  418f9c:	mov	x7, #0x0                   	// #0
  418fa0:	mov	x6, x3
  418fa4:	mov	x5, x0
  418fa8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  418fac:	add	x4, x0, #0x620
  418fb0:	mov	w3, #0x229                 	// #553
  418fb4:	ldr	w1, [sp, #124]
  418fb8:	ldr	w0, [sp, #120]
  418fbc:	bl	40b020 <log_object_internal@plt>
  418fc0:	mov	w20, #0x0                   	// #0
  418fc4:	b	4191a8 <on_spawn_io+0x4bc>
  418fc8:	ldr	x0, [sp, #176]
  418fcc:	ldr	x1, [sp, #144]
  418fd0:	add	x0, x1, x0
  418fd4:	strb	wzr, [x0]
  418fd8:	ldr	x0, [sp, #168]
  418fdc:	ldr	w0, [x0, #52]
  418fe0:	ldr	w1, [sp, #100]
  418fe4:	cmp	w1, w0
  418fe8:	b.ne	419014 <on_spawn_io+0x328>  // b.any
  418fec:	ldr	x0, [sp, #168]
  418ff0:	ldr	x0, [x0, #64]
  418ff4:	cmp	x0, #0x0
  418ff8:	b.eq	419014 <on_spawn_io+0x328>  // b.none
  418ffc:	ldr	x0, [sp, #168]
  419000:	ldr	x1, [x0, #80]
  419004:	ldr	x0, [sp, #176]
  419008:	add	x1, x1, x0
  41900c:	ldr	x0, [sp, #168]
  419010:	str	x1, [x0, #80]
  419014:	ldr	x0, [sp, #176]
  419018:	cmp	x0, #0x0
  41901c:	b.le	4191a4 <on_spawn_io+0x4b8>
  419020:	ldr	x0, [sp, #168]
  419024:	ldr	w0, [x0, #56]
  419028:	cmp	w0, #0x0
  41902c:	b.lt	4191a4 <on_spawn_io+0x4b8>  // b.tstop
  419030:	str	xzr, [sp, #128]
  419034:	ldr	x0, [sp, #144]
  419038:	bl	40b2a0 <strv_split_newlines@plt>
  41903c:	str	x0, [sp, #128]
  419040:	ldr	x0, [sp, #128]
  419044:	cmp	x0, #0x0
  419048:	b.ne	419058 <on_spawn_io+0x36c>  // b.any
  41904c:	mov	w20, #0x0                   	// #0
  419050:	mov	w19, #0x0                   	// #0
  419054:	b	419194 <on_spawn_io+0x4a8>
  419058:	ldr	x0, [sp, #128]
  41905c:	str	x0, [sp, #160]
  419060:	b	419174 <on_spawn_io+0x488>
  419064:	str	xzr, [sp, #136]
  419068:	ldr	x0, [sp, #168]
  41906c:	ldr	x0, [x0]
  419070:	str	x0, [sp, #184]
  419074:	mov	w0, #0x7                   	// #7
  419078:	str	w0, [sp, #112]
  41907c:	str	wzr, [sp, #116]
  419080:	ldr	x0, [sp, #184]
  419084:	cmp	x0, #0x0
  419088:	b.eq	4190c4 <on_spawn_io+0x3d8>  // b.none
  41908c:	mov	w0, #0x1                   	// #1
  419090:	bl	40be30 <log_get_max_level_realm@plt>
  419094:	mov	w1, w0
  419098:	ldr	w0, [sp, #112]
  41909c:	cmp	w0, w1
  4190a0:	cset	w0, le
  4190a4:	and	w0, w0, #0xff
  4190a8:	and	x0, x0, #0xff
  4190ac:	cmp	x0, #0x0
  4190b0:	b.eq	4190c4 <on_spawn_io+0x3d8>  // b.none
  4190b4:	add	x0, sp, #0x88
  4190b8:	mov	x1, x0
  4190bc:	ldr	x0, [sp, #184]
  4190c0:	bl	40aba0 <sd_device_get_sysname@plt>
  4190c4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4190c8:	add	x8, x0, #0xabb
  4190cc:	ldr	x0, [sp, #136]
  4190d0:	cmp	x0, #0x0
  4190d4:	b.eq	4190e4 <on_spawn_io+0x3f8>  // b.none
  4190d8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4190dc:	add	x1, x0, #0xbc8
  4190e0:	b	4190e8 <on_spawn_io+0x3fc>
  4190e4:	mov	x1, #0x0                   	// #0
  4190e8:	ldr	x4, [sp, #136]
  4190ec:	ldr	x0, [sp, #168]
  4190f0:	ldr	x2, [x0, #8]
  4190f4:	ldr	x0, [sp, #168]
  4190f8:	ldr	w0, [x0, #52]
  4190fc:	ldr	w3, [sp, #100]
  419100:	cmp	w3, w0
  419104:	b.ne	419114 <on_spawn_io+0x428>  // b.any
  419108:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41910c:	add	x0, x0, #0xe30
  419110:	b	41911c <on_spawn_io+0x430>
  419114:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419118:	add	x0, x0, #0xe38
  41911c:	ldr	x3, [sp, #160]
  419120:	ldr	x3, [x3]
  419124:	str	x3, [sp, #32]
  419128:	str	x0, [sp, #24]
  41912c:	str	x2, [sp, #16]
  419130:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419134:	add	x0, x0, #0xe40
  419138:	str	x0, [sp, #8]
  41913c:	str	xzr, [sp]
  419140:	mov	x7, #0x0                   	// #0
  419144:	mov	x6, x4
  419148:	mov	x5, x1
  41914c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  419150:	add	x4, x0, #0x620
  419154:	mov	w3, #0x23d                 	// #573
  419158:	mov	x2, x8
  41915c:	ldr	w1, [sp, #116]
  419160:	ldr	w0, [sp, #112]
  419164:	bl	40b020 <log_object_internal@plt>
  419168:	ldr	x0, [sp, #160]
  41916c:	add	x0, x0, #0x8
  419170:	str	x0, [sp, #160]
  419174:	ldr	x0, [sp, #160]
  419178:	cmp	x0, #0x0
  41917c:	b.eq	419190 <on_spawn_io+0x4a4>  // b.none
  419180:	ldr	x0, [sp, #160]
  419184:	ldr	x0, [x0]
  419188:	cmp	x0, #0x0
  41918c:	b.ne	419064 <on_spawn_io+0x378>  // b.any
  419190:	mov	w19, #0x1                   	// #1
  419194:	add	x0, sp, #0x80
  419198:	bl	417190 <strv_freep>
  41919c:	cmp	w19, #0x1
  4191a0:	b.ne	4191a8 <on_spawn_io+0x4bc>  // b.any
  4191a4:	mov	w20, #0x0                   	// #0
  4191a8:	mov	w1, w20
  4191ac:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4191b0:	ldr	x0, [x0, #4032]
  4191b4:	ldr	x2, [sp, #4296]
  4191b8:	ldr	x0, [x0]
  4191bc:	eor	x0, x2, x0
  4191c0:	cmp	x0, #0x0
  4191c4:	b.eq	4191cc <on_spawn_io+0x4e0>  // b.none
  4191c8:	bl	40b280 <__stack_chk_fail@plt>
  4191cc:	mov	w0, w1
  4191d0:	ldp	x19, x20, [sp, #64]
  4191d4:	ldp	x29, x30, [sp, #48]
  4191d8:	mov	x12, #0x10d0                	// #4304
  4191dc:	add	sp, sp, x12
  4191e0:	ret

00000000004191e4 <on_spawn_timeout>:
  4191e4:	sub	sp, sp, #0x100
  4191e8:	stp	x29, x30, [sp, #48]
  4191ec:	add	x29, sp, #0x30
  4191f0:	stp	x19, x20, [sp, #64]
  4191f4:	stp	x21, x22, [sp, #80]
  4191f8:	str	x23, [sp, #96]
  4191fc:	str	x0, [sp, #136]
  419200:	str	x1, [sp, #128]
  419204:	str	x2, [sp, #120]
  419208:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41920c:	ldr	x0, [x0, #4032]
  419210:	ldr	x1, [x0]
  419214:	str	x1, [sp, #248]
  419218:	mov	x1, #0x0                   	// #0
  41921c:	ldr	x0, [sp, #120]
  419220:	str	x0, [sp, #168]
  419224:	ldr	x0, [sp, #168]
  419228:	cmp	x0, #0x0
  41922c:	cset	w0, eq  // eq = none
  419230:	and	w0, w0, #0xff
  419234:	and	x0, x0, #0xff
  419238:	cmp	x0, #0x0
  41923c:	b.eq	419268 <on_spawn_timeout+0x84>  // b.none
  419240:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419244:	add	x1, x0, #0xabb
  419248:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41924c:	add	x4, x0, #0x630
  419250:	mov	w3, #0x248                 	// #584
  419254:	mov	x2, x1
  419258:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41925c:	add	x1, x0, #0xd88
  419260:	mov	w0, #0x1                   	// #1
  419264:	bl	40abb0 <log_assert_failed_realm@plt>
  419268:	ldr	x0, [sp, #168]
  41926c:	ldr	w0, [x0, #16]
  419270:	mov	w1, #0x9                   	// #9
  419274:	bl	40a770 <kill_and_sigcont@plt>
  419278:	str	xzr, [sp, #160]
  41927c:	ldr	x0, [sp, #168]
  419280:	ldr	x0, [x0]
  419284:	str	x0, [sp, #176]
  419288:	mov	w0, #0x3                   	// #3
  41928c:	str	w0, [sp, #152]
  419290:	str	wzr, [sp, #156]
  419294:	ldr	x0, [sp, #176]
  419298:	cmp	x0, #0x0
  41929c:	b.eq	4192d8 <on_spawn_timeout+0xf4>  // b.none
  4192a0:	mov	w0, #0x1                   	// #1
  4192a4:	bl	40be30 <log_get_max_level_realm@plt>
  4192a8:	mov	w1, w0
  4192ac:	ldr	w0, [sp, #152]
  4192b0:	cmp	w0, w1
  4192b4:	cset	w0, le
  4192b8:	and	w0, w0, #0xff
  4192bc:	and	x0, x0, #0xff
  4192c0:	cmp	x0, #0x0
  4192c4:	b.eq	4192d8 <on_spawn_timeout+0xf4>  // b.none
  4192c8:	add	x0, sp, #0xa0
  4192cc:	mov	x1, x0
  4192d0:	ldr	x0, [sp, #176]
  4192d4:	bl	40aba0 <sd_device_get_sysname@plt>
  4192d8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4192dc:	add	x22, x0, #0xabb
  4192e0:	ldr	x0, [sp, #160]
  4192e4:	cmp	x0, #0x0
  4192e8:	b.eq	4192f8 <on_spawn_timeout+0x114>  // b.none
  4192ec:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4192f0:	add	x19, x0, #0xbc8
  4192f4:	b	4192fc <on_spawn_timeout+0x118>
  4192f8:	mov	x19, #0x0                   	// #0
  4192fc:	ldr	x23, [sp, #160]
  419300:	ldr	x0, [sp, #168]
  419304:	ldr	x20, [x0, #8]
  419308:	ldr	x0, [sp, #168]
  41930c:	ldr	w21, [x0, #16]
  419310:	ldr	x0, [sp, #168]
  419314:	ldr	x1, [x0, #32]
  419318:	add	x0, sp, #0xb8
  41931c:	mov	x3, #0x4240                	// #16960
  419320:	movk	x3, #0xf, lsl #16
  419324:	mov	x2, x1
  419328:	mov	x1, #0x40                  	// #64
  41932c:	bl	40a5b0 <format_timespan@plt>
  419330:	str	x0, [sp, #32]
  419334:	str	w21, [sp, #24]
  419338:	str	x20, [sp, #16]
  41933c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419340:	add	x0, x0, #0xe50
  419344:	str	x0, [sp, #8]
  419348:	str	xzr, [sp]
  41934c:	mov	x7, #0x0                   	// #0
  419350:	mov	x6, x23
  419354:	mov	x5, x19
  419358:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41935c:	add	x4, x0, #0x648
  419360:	mov	w3, #0x24c                 	// #588
  419364:	mov	x2, x22
  419368:	ldr	w1, [sp, #156]
  41936c:	ldr	w0, [sp, #152]
  419370:	bl	40b020 <log_object_internal@plt>
  419374:	mov	w0, #0x1                   	// #1
  419378:	mov	w1, w0
  41937c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  419380:	ldr	x0, [x0, #4032]
  419384:	ldr	x2, [sp, #248]
  419388:	ldr	x0, [x0]
  41938c:	eor	x0, x2, x0
  419390:	cmp	x0, #0x0
  419394:	b.eq	41939c <on_spawn_timeout+0x1b8>  // b.none
  419398:	bl	40b280 <__stack_chk_fail@plt>
  41939c:	mov	w0, w1
  4193a0:	ldp	x19, x20, [sp, #64]
  4193a4:	ldp	x21, x22, [sp, #80]
  4193a8:	ldr	x23, [sp, #96]
  4193ac:	ldp	x29, x30, [sp, #48]
  4193b0:	add	sp, sp, #0x100
  4193b4:	ret

00000000004193b8 <on_spawn_timeout_warning>:
  4193b8:	sub	sp, sp, #0x100
  4193bc:	stp	x29, x30, [sp, #48]
  4193c0:	add	x29, sp, #0x30
  4193c4:	stp	x19, x20, [sp, #64]
  4193c8:	stp	x21, x22, [sp, #80]
  4193cc:	str	x23, [sp, #96]
  4193d0:	str	x0, [sp, #136]
  4193d4:	str	x1, [sp, #128]
  4193d8:	str	x2, [sp, #120]
  4193dc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4193e0:	ldr	x0, [x0, #4032]
  4193e4:	ldr	x1, [x0]
  4193e8:	str	x1, [sp, #248]
  4193ec:	mov	x1, #0x0                   	// #0
  4193f0:	ldr	x0, [sp, #120]
  4193f4:	str	x0, [sp, #168]
  4193f8:	ldr	x0, [sp, #168]
  4193fc:	cmp	x0, #0x0
  419400:	cset	w0, eq  // eq = none
  419404:	and	w0, w0, #0xff
  419408:	and	x0, x0, #0xff
  41940c:	cmp	x0, #0x0
  419410:	b.eq	41943c <on_spawn_timeout_warning+0x84>  // b.none
  419414:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419418:	add	x1, x0, #0xabb
  41941c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  419420:	add	x4, x0, #0x660
  419424:	mov	w3, #0x257                 	// #599
  419428:	mov	x2, x1
  41942c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419430:	add	x1, x0, #0xd88
  419434:	mov	w0, #0x1                   	// #1
  419438:	bl	40abb0 <log_assert_failed_realm@plt>
  41943c:	str	xzr, [sp, #160]
  419440:	ldr	x0, [sp, #168]
  419444:	ldr	x0, [x0]
  419448:	str	x0, [sp, #176]
  41944c:	mov	w0, #0x4                   	// #4
  419450:	str	w0, [sp, #152]
  419454:	str	wzr, [sp, #156]
  419458:	ldr	x0, [sp, #176]
  41945c:	cmp	x0, #0x0
  419460:	b.eq	41949c <on_spawn_timeout_warning+0xe4>  // b.none
  419464:	mov	w0, #0x1                   	// #1
  419468:	bl	40be30 <log_get_max_level_realm@plt>
  41946c:	mov	w1, w0
  419470:	ldr	w0, [sp, #152]
  419474:	cmp	w0, w1
  419478:	cset	w0, le
  41947c:	and	w0, w0, #0xff
  419480:	and	x0, x0, #0xff
  419484:	cmp	x0, #0x0
  419488:	b.eq	41949c <on_spawn_timeout_warning+0xe4>  // b.none
  41948c:	add	x0, sp, #0xa0
  419490:	mov	x1, x0
  419494:	ldr	x0, [sp, #176]
  419498:	bl	40aba0 <sd_device_get_sysname@plt>
  41949c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4194a0:	add	x22, x0, #0xabb
  4194a4:	ldr	x0, [sp, #160]
  4194a8:	cmp	x0, #0x0
  4194ac:	b.eq	4194bc <on_spawn_timeout_warning+0x104>  // b.none
  4194b0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4194b4:	add	x19, x0, #0xbc8
  4194b8:	b	4194c0 <on_spawn_timeout_warning+0x108>
  4194bc:	mov	x19, #0x0                   	// #0
  4194c0:	ldr	x23, [sp, #160]
  4194c4:	ldr	x0, [sp, #168]
  4194c8:	ldr	x20, [x0, #8]
  4194cc:	ldr	x0, [sp, #168]
  4194d0:	ldr	w21, [x0, #16]
  4194d4:	ldr	x0, [sp, #168]
  4194d8:	ldr	x1, [x0, #24]
  4194dc:	add	x0, sp, #0xb8
  4194e0:	mov	x3, #0x4240                	// #16960
  4194e4:	movk	x3, #0xf, lsl #16
  4194e8:	mov	x2, x1
  4194ec:	mov	x1, #0x40                  	// #64
  4194f0:	bl	40a5b0 <format_timespan@plt>
  4194f4:	str	x0, [sp, #32]
  4194f8:	str	w21, [sp, #24]
  4194fc:	str	x20, [sp, #16]
  419500:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419504:	add	x0, x0, #0xe88
  419508:	str	x0, [sp, #8]
  41950c:	str	xzr, [sp]
  419510:	mov	x7, #0x0                   	// #0
  419514:	mov	x6, x23
  419518:	mov	x5, x19
  41951c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  419520:	add	x4, x0, #0x680
  419524:	mov	w3, #0x259                 	// #601
  419528:	mov	x2, x22
  41952c:	ldr	w1, [sp, #156]
  419530:	ldr	w0, [sp, #152]
  419534:	bl	40b020 <log_object_internal@plt>
  419538:	mov	w0, #0x1                   	// #1
  41953c:	mov	w1, w0
  419540:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  419544:	ldr	x0, [x0, #4032]
  419548:	ldr	x2, [sp, #248]
  41954c:	ldr	x0, [x0]
  419550:	eor	x0, x2, x0
  419554:	cmp	x0, #0x0
  419558:	b.eq	419560 <on_spawn_timeout_warning+0x1a8>  // b.none
  41955c:	bl	40b280 <__stack_chk_fail@plt>
  419560:	mov	w0, w1
  419564:	ldp	x19, x20, [sp, #64]
  419568:	ldp	x21, x22, [sp, #80]
  41956c:	ldr	x23, [sp, #96]
  419570:	ldp	x29, x30, [sp, #48]
  419574:	add	sp, sp, #0x100
  419578:	ret

000000000041957c <on_spawn_sigchld>:
  41957c:	sub	sp, sp, #0xd0
  419580:	stp	x29, x30, [sp, #32]
  419584:	add	x29, sp, #0x20
  419588:	stp	x19, x20, [sp, #48]
  41958c:	stp	x21, x22, [sp, #64]
  419590:	str	x0, [sp, #104]
  419594:	str	x1, [sp, #96]
  419598:	str	x2, [sp, #88]
  41959c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4195a0:	ldr	x0, [x0, #4032]
  4195a4:	ldr	x1, [x0]
  4195a8:	str	x1, [sp, #200]
  4195ac:	mov	x1, #0x0                   	// #0
  4195b0:	ldr	x0, [sp, #88]
  4195b4:	str	x0, [sp, #160]
  4195b8:	mov	w0, #0xfffffffb            	// #-5
  4195bc:	str	w0, [sp, #116]
  4195c0:	ldr	x0, [sp, #160]
  4195c4:	cmp	x0, #0x0
  4195c8:	cset	w0, eq  // eq = none
  4195cc:	and	w0, w0, #0xff
  4195d0:	and	x0, x0, #0xff
  4195d4:	cmp	x0, #0x0
  4195d8:	b.eq	419604 <on_spawn_sigchld+0x88>  // b.none
  4195dc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4195e0:	add	x1, x0, #0xabb
  4195e4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4195e8:	add	x4, x0, #0x6a0
  4195ec:	mov	w3, #0x264                 	// #612
  4195f0:	mov	x2, x1
  4195f4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4195f8:	add	x1, x0, #0xd88
  4195fc:	mov	w0, #0x1                   	// #1
  419600:	bl	40abb0 <log_assert_failed_realm@plt>
  419604:	ldr	x0, [sp, #96]
  419608:	ldr	w0, [x0, #8]
  41960c:	cmp	w0, #0x1
  419610:	b.eq	41962c <on_spawn_sigchld+0xb0>  // b.none
  419614:	cmp	w0, #0x0
  419618:	b.le	4198e8 <on_spawn_sigchld+0x36c>
  41961c:	sub	w0, w0, #0x2
  419620:	cmp	w0, #0x1
  419624:	b.hi	4198e8 <on_spawn_sigchld+0x36c>  // b.pmore
  419628:	b	419808 <on_spawn_sigchld+0x28c>
  41962c:	ldr	x0, [sp, #96]
  419630:	ldr	w0, [x0, #24]
  419634:	cmp	w0, #0x0
  419638:	b.ne	419708 <on_spawn_sigchld+0x18c>  // b.any
  41963c:	str	xzr, [sp, #152]
  419640:	ldr	x0, [sp, #160]
  419644:	ldr	x0, [x0]
  419648:	str	x0, [sp, #184]
  41964c:	mov	w0, #0x7                   	// #7
  419650:	str	w0, [sp, #136]
  419654:	str	wzr, [sp, #140]
  419658:	ldr	x0, [sp, #184]
  41965c:	cmp	x0, #0x0
  419660:	b.eq	41969c <on_spawn_sigchld+0x120>  // b.none
  419664:	mov	w0, #0x1                   	// #1
  419668:	bl	40be30 <log_get_max_level_realm@plt>
  41966c:	mov	w1, w0
  419670:	ldr	w0, [sp, #136]
  419674:	cmp	w0, w1
  419678:	cset	w0, le
  41967c:	and	w0, w0, #0xff
  419680:	and	x0, x0, #0xff
  419684:	cmp	x0, #0x0
  419688:	b.eq	41969c <on_spawn_sigchld+0x120>  // b.none
  41968c:	add	x0, sp, #0x98
  419690:	mov	x1, x0
  419694:	ldr	x0, [sp, #184]
  419698:	bl	40aba0 <sd_device_get_sysname@plt>
  41969c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4196a0:	add	x2, x0, #0xabb
  4196a4:	ldr	x0, [sp, #152]
  4196a8:	cmp	x0, #0x0
  4196ac:	b.eq	4196bc <on_spawn_sigchld+0x140>  // b.none
  4196b0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4196b4:	add	x0, x0, #0xbc8
  4196b8:	b	4196c0 <on_spawn_sigchld+0x144>
  4196bc:	mov	x0, #0x0                   	// #0
  4196c0:	ldr	x3, [sp, #152]
  4196c4:	ldr	x1, [sp, #160]
  4196c8:	ldr	x1, [x1, #8]
  4196cc:	str	x1, [sp, #16]
  4196d0:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4196d4:	add	x1, x1, #0xec8
  4196d8:	str	x1, [sp, #8]
  4196dc:	str	xzr, [sp]
  4196e0:	mov	x7, #0x0                   	// #0
  4196e4:	mov	x6, x3
  4196e8:	mov	x5, x0
  4196ec:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4196f0:	add	x4, x0, #0x6b8
  4196f4:	mov	w3, #0x269                 	// #617
  4196f8:	ldr	w1, [sp, #140]
  4196fc:	ldr	w0, [sp, #136]
  419700:	bl	40b020 <log_object_internal@plt>
  419704:	b	4197f8 <on_spawn_sigchld+0x27c>
  419708:	str	xzr, [sp, #152]
  41970c:	ldr	x0, [sp, #160]
  419710:	ldr	x0, [x0]
  419714:	str	x0, [sp, #176]
  419718:	ldr	x0, [sp, #160]
  41971c:	ldrb	w0, [x0, #48]
  419720:	cmp	w0, #0x0
  419724:	b.eq	419730 <on_spawn_sigchld+0x1b4>  // b.none
  419728:	mov	w0, #0x7                   	// #7
  41972c:	b	419734 <on_spawn_sigchld+0x1b8>
  419730:	mov	w0, #0x4                   	// #4
  419734:	str	w0, [sp, #128]
  419738:	str	wzr, [sp, #132]
  41973c:	ldr	x0, [sp, #176]
  419740:	cmp	x0, #0x0
  419744:	b.eq	419780 <on_spawn_sigchld+0x204>  // b.none
  419748:	mov	w0, #0x1                   	// #1
  41974c:	bl	40be30 <log_get_max_level_realm@plt>
  419750:	mov	w1, w0
  419754:	ldr	w0, [sp, #128]
  419758:	cmp	w0, w1
  41975c:	cset	w0, le
  419760:	and	w0, w0, #0xff
  419764:	and	x0, x0, #0xff
  419768:	cmp	x0, #0x0
  41976c:	b.eq	419780 <on_spawn_sigchld+0x204>  // b.none
  419770:	add	x0, sp, #0x98
  419774:	mov	x1, x0
  419778:	ldr	x0, [sp, #176]
  41977c:	bl	40aba0 <sd_device_get_sysname@plt>
  419780:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419784:	add	x8, x0, #0xabb
  419788:	ldr	x0, [sp, #152]
  41978c:	cmp	x0, #0x0
  419790:	b.eq	4197a0 <on_spawn_sigchld+0x224>  // b.none
  419794:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419798:	add	x0, x0, #0xbc8
  41979c:	b	4197a4 <on_spawn_sigchld+0x228>
  4197a0:	mov	x0, #0x0                   	// #0
  4197a4:	ldr	x3, [sp, #152]
  4197a8:	ldr	x1, [sp, #160]
  4197ac:	ldr	x1, [x1, #8]
  4197b0:	ldr	x2, [sp, #96]
  4197b4:	ldr	w2, [x2, #24]
  4197b8:	str	w2, [sp, #24]
  4197bc:	str	x1, [sp, #16]
  4197c0:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4197c4:	add	x1, x1, #0xee0
  4197c8:	str	x1, [sp, #8]
  4197cc:	str	xzr, [sp]
  4197d0:	mov	x7, #0x0                   	// #0
  4197d4:	mov	x6, x3
  4197d8:	mov	x5, x0
  4197dc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4197e0:	add	x4, x0, #0x6b8
  4197e4:	mov	w3, #0x26b                 	// #619
  4197e8:	mov	x2, x8
  4197ec:	ldr	w1, [sp, #132]
  4197f0:	ldr	w0, [sp, #128]
  4197f4:	bl	40b020 <log_object_internal@plt>
  4197f8:	ldr	x0, [sp, #96]
  4197fc:	ldr	w0, [x0, #24]
  419800:	str	w0, [sp, #116]
  419804:	b	4199b0 <on_spawn_sigchld+0x434>
  419808:	str	xzr, [sp, #152]
  41980c:	ldr	x0, [sp, #160]
  419810:	ldr	x0, [x0]
  419814:	str	x0, [sp, #168]
  419818:	mov	w0, #0x3                   	// #3
  41981c:	str	w0, [sp, #120]
  419820:	str	wzr, [sp, #124]
  419824:	ldr	x0, [sp, #168]
  419828:	cmp	x0, #0x0
  41982c:	b.eq	419868 <on_spawn_sigchld+0x2ec>  // b.none
  419830:	mov	w0, #0x1                   	// #1
  419834:	bl	40be30 <log_get_max_level_realm@plt>
  419838:	mov	w1, w0
  41983c:	ldr	w0, [sp, #120]
  419840:	cmp	w0, w1
  419844:	cset	w0, le
  419848:	and	w0, w0, #0xff
  41984c:	and	x0, x0, #0xff
  419850:	cmp	x0, #0x0
  419854:	b.eq	419868 <on_spawn_sigchld+0x2ec>  // b.none
  419858:	add	x0, sp, #0x98
  41985c:	mov	x1, x0
  419860:	ldr	x0, [sp, #168]
  419864:	bl	40aba0 <sd_device_get_sysname@plt>
  419868:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41986c:	add	x21, x0, #0xabb
  419870:	ldr	x0, [sp, #152]
  419874:	cmp	x0, #0x0
  419878:	b.eq	419888 <on_spawn_sigchld+0x30c>  // b.none
  41987c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419880:	add	x19, x0, #0xbc8
  419884:	b	41988c <on_spawn_sigchld+0x310>
  419888:	mov	x19, #0x0                   	// #0
  41988c:	ldr	x22, [sp, #152]
  419890:	ldr	x0, [sp, #160]
  419894:	ldr	x20, [x0, #8]
  419898:	ldr	x0, [sp, #96]
  41989c:	ldr	w0, [x0, #24]
  4198a0:	bl	40b360 <signal_to_string@plt>
  4198a4:	str	x0, [sp, #24]
  4198a8:	str	x20, [sp, #16]
  4198ac:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  4198b0:	add	x0, x0, #0xf08
  4198b4:	str	x0, [sp, #8]
  4198b8:	str	xzr, [sp]
  4198bc:	mov	x7, #0x0                   	// #0
  4198c0:	mov	x6, x22
  4198c4:	mov	x5, x19
  4198c8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4198cc:	add	x4, x0, #0x6b8
  4198d0:	mov	w3, #0x271                 	// #625
  4198d4:	mov	x2, x21
  4198d8:	ldr	w1, [sp, #124]
  4198dc:	ldr	w0, [sp, #120]
  4198e0:	bl	40b020 <log_object_internal@plt>
  4198e4:	b	4199b0 <on_spawn_sigchld+0x434>
  4198e8:	str	xzr, [sp, #152]
  4198ec:	ldr	x0, [sp, #160]
  4198f0:	ldr	x0, [x0]
  4198f4:	str	x0, [sp, #192]
  4198f8:	mov	w0, #0x3                   	// #3
  4198fc:	str	w0, [sp, #144]
  419900:	str	wzr, [sp, #148]
  419904:	ldr	x0, [sp, #192]
  419908:	cmp	x0, #0x0
  41990c:	b.eq	419948 <on_spawn_sigchld+0x3cc>  // b.none
  419910:	mov	w0, #0x1                   	// #1
  419914:	bl	40be30 <log_get_max_level_realm@plt>
  419918:	mov	w1, w0
  41991c:	ldr	w0, [sp, #144]
  419920:	cmp	w0, w1
  419924:	cset	w0, le
  419928:	and	w0, w0, #0xff
  41992c:	and	x0, x0, #0xff
  419930:	cmp	x0, #0x0
  419934:	b.eq	419948 <on_spawn_sigchld+0x3cc>  // b.none
  419938:	add	x0, sp, #0x98
  41993c:	mov	x1, x0
  419940:	ldr	x0, [sp, #192]
  419944:	bl	40aba0 <sd_device_get_sysname@plt>
  419948:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41994c:	add	x2, x0, #0xabb
  419950:	ldr	x0, [sp, #152]
  419954:	cmp	x0, #0x0
  419958:	b.eq	419968 <on_spawn_sigchld+0x3ec>  // b.none
  41995c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419960:	add	x0, x0, #0xbc8
  419964:	b	41996c <on_spawn_sigchld+0x3f0>
  419968:	mov	x0, #0x0                   	// #0
  41996c:	ldr	x3, [sp, #152]
  419970:	ldr	x1, [sp, #160]
  419974:	ldr	x1, [x1, #8]
  419978:	str	x1, [sp, #16]
  41997c:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419980:	add	x1, x1, #0xf30
  419984:	str	x1, [sp, #8]
  419988:	str	xzr, [sp]
  41998c:	mov	x7, #0x0                   	// #0
  419990:	mov	x6, x3
  419994:	mov	x5, x0
  419998:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41999c:	add	x4, x0, #0x6b8
  4199a0:	mov	w3, #0x274                 	// #628
  4199a4:	ldr	w1, [sp, #148]
  4199a8:	ldr	w0, [sp, #144]
  4199ac:	bl	40b020 <log_object_internal@plt>
  4199b0:	ldr	x0, [sp, #104]
  4199b4:	bl	40a880 <sd_event_source_get_event@plt>
  4199b8:	ldr	w1, [sp, #116]
  4199bc:	bl	40ba80 <sd_event_exit@plt>
  4199c0:	mov	w0, #0x1                   	// #1
  4199c4:	mov	w1, w0
  4199c8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4199cc:	ldr	x0, [x0, #4032]
  4199d0:	ldr	x2, [sp, #200]
  4199d4:	ldr	x0, [x0]
  4199d8:	eor	x0, x2, x0
  4199dc:	cmp	x0, #0x0
  4199e0:	b.eq	4199e8 <on_spawn_sigchld+0x46c>  // b.none
  4199e4:	bl	40b280 <__stack_chk_fail@plt>
  4199e8:	mov	w0, w1
  4199ec:	ldp	x19, x20, [sp, #48]
  4199f0:	ldp	x21, x22, [sp, #64]
  4199f4:	ldp	x29, x30, [sp, #32]
  4199f8:	add	sp, sp, #0xd0
  4199fc:	ret

0000000000419a00 <spawn_wait>:
  419a00:	stp	x29, x30, [sp, #-96]!
  419a04:	mov	x29, sp
  419a08:	str	x19, [sp, #16]
  419a0c:	str	x0, [sp, #40]
  419a10:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  419a14:	ldr	x0, [x0, #4032]
  419a18:	ldr	x1, [x0]
  419a1c:	str	x1, [sp, #88]
  419a20:	mov	x1, #0x0                   	// #0
  419a24:	str	xzr, [sp, #64]
  419a28:	ldr	x0, [sp, #40]
  419a2c:	cmp	x0, #0x0
  419a30:	cset	w0, eq  // eq = none
  419a34:	and	w0, w0, #0xff
  419a38:	and	x0, x0, #0xff
  419a3c:	cmp	x0, #0x0
  419a40:	b.eq	419a6c <spawn_wait+0x6c>  // b.none
  419a44:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419a48:	add	x1, x0, #0xabb
  419a4c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  419a50:	add	x4, x0, #0x6d0
  419a54:	mov	w3, #0x27f                 	// #639
  419a58:	mov	x2, x1
  419a5c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419a60:	add	x1, x0, #0xd88
  419a64:	mov	w0, #0x1                   	// #1
  419a68:	bl	40abb0 <log_assert_failed_realm@plt>
  419a6c:	add	x0, sp, #0x40
  419a70:	bl	40b050 <sd_event_new@plt>
  419a74:	str	w0, [sp, #60]
  419a78:	ldr	w0, [sp, #60]
  419a7c:	cmp	w0, #0x0
  419a80:	b.ge	419a8c <spawn_wait+0x8c>  // b.tcont
  419a84:	ldr	w19, [sp, #60]
  419a88:	b	419cdc <spawn_wait+0x2dc>
  419a8c:	ldr	x0, [sp, #40]
  419a90:	ldr	x0, [x0, #32]
  419a94:	cmp	x0, #0x0
  419a98:	b.eq	419be4 <spawn_wait+0x1e4>  // b.none
  419a9c:	mov	w0, #0x1                   	// #1
  419aa0:	bl	40b650 <now@plt>
  419aa4:	str	x0, [sp, #72]
  419aa8:	ldr	x0, [sp, #40]
  419aac:	ldr	x0, [x0, #40]
  419ab0:	ldr	x1, [sp, #72]
  419ab4:	sub	x0, x1, x0
  419ab8:	str	x0, [sp, #80]
  419abc:	ldr	x0, [sp, #40]
  419ac0:	ldr	x0, [x0, #32]
  419ac4:	ldr	x1, [sp, #80]
  419ac8:	cmp	x1, x0
  419acc:	b.cs	419be4 <spawn_wait+0x1e4>  // b.hs, b.nlast
  419ad0:	ldr	x0, [sp, #40]
  419ad4:	ldr	x0, [x0, #24]
  419ad8:	cmp	x0, #0x0
  419adc:	b.eq	419b78 <spawn_wait+0x178>  // b.none
  419ae0:	ldr	x0, [sp, #40]
  419ae4:	ldr	x1, [x0, #24]
  419ae8:	ldr	x0, [sp, #40]
  419aec:	ldr	x0, [x0, #32]
  419af0:	cmp	x1, x0
  419af4:	b.cs	419b78 <spawn_wait+0x178>  // b.hs, b.nlast
  419af8:	ldr	x0, [sp, #40]
  419afc:	ldr	x0, [x0, #24]
  419b00:	ldr	x1, [sp, #80]
  419b04:	cmp	x1, x0
  419b08:	b.cs	419b78 <spawn_wait+0x178>  // b.hs, b.nlast
  419b0c:	ldr	x0, [sp, #40]
  419b10:	ldr	x1, [x0, #24]
  419b14:	ldr	x0, [sp, #80]
  419b18:	sub	x1, x1, x0
  419b1c:	ldr	x0, [sp, #40]
  419b20:	str	x1, [x0, #24]
  419b24:	ldr	x7, [sp, #64]
  419b28:	ldr	x0, [sp, #40]
  419b2c:	ldr	x1, [x0, #24]
  419b30:	ldr	x0, [sp, #72]
  419b34:	add	x1, x1, x0
  419b38:	ldr	x6, [sp, #40]
  419b3c:	adrp	x0, 419000 <on_spawn_io+0x314>
  419b40:	add	x5, x0, #0x3b8
  419b44:	mov	x4, #0x4240                	// #16960
  419b48:	movk	x4, #0xf, lsl #16
  419b4c:	mov	x3, x1
  419b50:	mov	w2, #0x1                   	// #1
  419b54:	mov	x1, #0x0                   	// #0
  419b58:	mov	x0, x7
  419b5c:	bl	40a900 <sd_event_add_time@plt>
  419b60:	str	w0, [sp, #60]
  419b64:	ldr	w0, [sp, #60]
  419b68:	cmp	w0, #0x0
  419b6c:	b.ge	419b78 <spawn_wait+0x178>  // b.tcont
  419b70:	ldr	w19, [sp, #60]
  419b74:	b	419cdc <spawn_wait+0x2dc>
  419b78:	ldr	x0, [sp, #40]
  419b7c:	ldr	x1, [x0, #32]
  419b80:	ldr	x0, [sp, #80]
  419b84:	sub	x1, x1, x0
  419b88:	ldr	x0, [sp, #40]
  419b8c:	str	x1, [x0, #32]
  419b90:	ldr	x7, [sp, #64]
  419b94:	ldr	x0, [sp, #40]
  419b98:	ldr	x1, [x0, #32]
  419b9c:	ldr	x0, [sp, #72]
  419ba0:	add	x1, x1, x0
  419ba4:	ldr	x6, [sp, #40]
  419ba8:	adrp	x0, 419000 <on_spawn_io+0x314>
  419bac:	add	x5, x0, #0x1e4
  419bb0:	mov	x4, #0x4240                	// #16960
  419bb4:	movk	x4, #0xf, lsl #16
  419bb8:	mov	x3, x1
  419bbc:	mov	w2, #0x1                   	// #1
  419bc0:	mov	x1, #0x0                   	// #0
  419bc4:	mov	x0, x7
  419bc8:	bl	40a900 <sd_event_add_time@plt>
  419bcc:	str	w0, [sp, #60]
  419bd0:	ldr	w0, [sp, #60]
  419bd4:	cmp	w0, #0x0
  419bd8:	b.ge	419be4 <spawn_wait+0x1e4>  // b.tcont
  419bdc:	ldr	w19, [sp, #60]
  419be0:	b	419cdc <spawn_wait+0x2dc>
  419be4:	ldr	x0, [sp, #40]
  419be8:	ldr	w0, [x0, #52]
  419bec:	cmp	w0, #0x0
  419bf0:	b.lt	419c38 <spawn_wait+0x238>  // b.tstop
  419bf4:	ldr	x6, [sp, #64]
  419bf8:	ldr	x0, [sp, #40]
  419bfc:	ldr	w1, [x0, #52]
  419c00:	ldr	x5, [sp, #40]
  419c04:	adrp	x0, 418000 <udev_event_subst_format+0x5ec>
  419c08:	add	x4, x0, #0xcec
  419c0c:	mov	w3, #0x1                   	// #1
  419c10:	mov	w2, w1
  419c14:	mov	x1, #0x0                   	// #0
  419c18:	mov	x0, x6
  419c1c:	bl	40b690 <sd_event_add_io@plt>
  419c20:	str	w0, [sp, #60]
  419c24:	ldr	w0, [sp, #60]
  419c28:	cmp	w0, #0x0
  419c2c:	b.ge	419c38 <spawn_wait+0x238>  // b.tcont
  419c30:	ldr	w19, [sp, #60]
  419c34:	b	419cdc <spawn_wait+0x2dc>
  419c38:	ldr	x0, [sp, #40]
  419c3c:	ldr	w0, [x0, #56]
  419c40:	cmp	w0, #0x0
  419c44:	b.lt	419c8c <spawn_wait+0x28c>  // b.tstop
  419c48:	ldr	x6, [sp, #64]
  419c4c:	ldr	x0, [sp, #40]
  419c50:	ldr	w1, [x0, #56]
  419c54:	ldr	x5, [sp, #40]
  419c58:	adrp	x0, 418000 <udev_event_subst_format+0x5ec>
  419c5c:	add	x4, x0, #0xcec
  419c60:	mov	w3, #0x1                   	// #1
  419c64:	mov	w2, w1
  419c68:	mov	x1, #0x0                   	// #0
  419c6c:	mov	x0, x6
  419c70:	bl	40b690 <sd_event_add_io@plt>
  419c74:	str	w0, [sp, #60]
  419c78:	ldr	w0, [sp, #60]
  419c7c:	cmp	w0, #0x0
  419c80:	b.ge	419c8c <spawn_wait+0x28c>  // b.tcont
  419c84:	ldr	w19, [sp, #60]
  419c88:	b	419cdc <spawn_wait+0x2dc>
  419c8c:	ldr	x6, [sp, #64]
  419c90:	ldr	x0, [sp, #40]
  419c94:	ldr	w1, [x0, #16]
  419c98:	ldr	x5, [sp, #40]
  419c9c:	adrp	x0, 419000 <on_spawn_io+0x314>
  419ca0:	add	x4, x0, #0x57c
  419ca4:	mov	w3, #0x4                   	// #4
  419ca8:	mov	w2, w1
  419cac:	mov	x1, #0x0                   	// #0
  419cb0:	mov	x0, x6
  419cb4:	bl	40a520 <sd_event_add_child@plt>
  419cb8:	str	w0, [sp, #60]
  419cbc:	ldr	w0, [sp, #60]
  419cc0:	cmp	w0, #0x0
  419cc4:	b.ge	419cd0 <spawn_wait+0x2d0>  // b.tcont
  419cc8:	ldr	w19, [sp, #60]
  419ccc:	b	419cdc <spawn_wait+0x2dc>
  419cd0:	ldr	x0, [sp, #64]
  419cd4:	bl	40b7a0 <sd_event_loop@plt>
  419cd8:	mov	w19, w0
  419cdc:	add	x0, sp, #0x40
  419ce0:	bl	416eac <sd_event_unrefp>
  419ce4:	mov	w1, w19
  419ce8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  419cec:	ldr	x0, [x0, #4032]
  419cf0:	ldr	x2, [sp, #88]
  419cf4:	ldr	x0, [x0]
  419cf8:	eor	x0, x2, x0
  419cfc:	cmp	x0, #0x0
  419d00:	b.eq	419d08 <spawn_wait+0x308>  // b.none
  419d04:	bl	40b280 <__stack_chk_fail@plt>
  419d08:	mov	w0, w1
  419d0c:	ldr	x19, [sp, #16]
  419d10:	ldp	x29, x30, [sp], #96
  419d14:	ret

0000000000419d18 <udev_event_spawn>:
  419d18:	sub	sp, sp, #0x180
  419d1c:	stp	x29, x30, [sp, #32]
  419d20:	add	x29, sp, #0x20
  419d24:	stp	x19, x20, [sp, #48]
  419d28:	str	x0, [sp, #104]
  419d2c:	str	x1, [sp, #96]
  419d30:	strb	w2, [sp, #95]
  419d34:	str	x3, [sp, #80]
  419d38:	str	x4, [sp, #72]
  419d3c:	str	x5, [sp, #64]
  419d40:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  419d44:	ldr	x0, [x0, #4032]
  419d48:	ldr	x1, [x0]
  419d4c:	str	x1, [sp, #376]
  419d50:	mov	x1, #0x0                   	// #0
  419d54:	mov	w0, #0xffffffff            	// #-1
  419d58:	str	w0, [sp, #360]
  419d5c:	mov	w0, #0xffffffff            	// #-1
  419d60:	str	w0, [sp, #364]
  419d64:	mov	w0, #0xffffffff            	// #-1
  419d68:	str	w0, [sp, #368]
  419d6c:	mov	w0, #0xffffffff            	// #-1
  419d70:	str	w0, [sp, #372]
  419d74:	str	xzr, [sp, #184]
  419d78:	str	xzr, [sp, #192]
  419d7c:	ldr	x0, [sp, #104]
  419d80:	cmp	x0, #0x0
  419d84:	cset	w0, eq  // eq = none
  419d88:	and	w0, w0, #0xff
  419d8c:	and	x0, x0, #0xff
  419d90:	cmp	x0, #0x0
  419d94:	b.eq	419dc0 <udev_event_spawn+0xa8>  // b.none
  419d98:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419d9c:	add	x1, x0, #0xabb
  419da0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  419da4:	add	x4, x0, #0x6e0
  419da8:	mov	w3, #0x2bf                 	// #703
  419dac:	mov	x2, x1
  419db0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419db4:	add	x1, x0, #0xc68
  419db8:	mov	w0, #0x1                   	// #1
  419dbc:	bl	40abb0 <log_assert_failed_realm@plt>
  419dc0:	ldr	x0, [sp, #104]
  419dc4:	ldr	x0, [x0]
  419dc8:	cmp	x0, #0x0
  419dcc:	cset	w0, eq  // eq = none
  419dd0:	and	w0, w0, #0xff
  419dd4:	and	x0, x0, #0xff
  419dd8:	cmp	x0, #0x0
  419ddc:	b.eq	419e08 <udev_event_spawn+0xf0>  // b.none
  419de0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419de4:	add	x1, x0, #0xabb
  419de8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  419dec:	add	x4, x0, #0x6e0
  419df0:	mov	w3, #0x2c0                 	// #704
  419df4:	mov	x2, x1
  419df8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419dfc:	add	x1, x0, #0xc70
  419e00:	mov	w0, #0x1                   	// #1
  419e04:	bl	40abb0 <log_assert_failed_realm@plt>
  419e08:	ldr	x0, [sp, #72]
  419e0c:	cmp	x0, #0x0
  419e10:	cset	w0, eq  // eq = none
  419e14:	and	w0, w0, #0xff
  419e18:	and	x0, x0, #0xff
  419e1c:	cmp	x0, #0x0
  419e20:	b.eq	419e68 <udev_event_spawn+0x150>  // b.none
  419e24:	ldr	x0, [sp, #64]
  419e28:	cmp	x0, #0x0
  419e2c:	cset	w0, ne  // ne = any
  419e30:	and	w0, w0, #0xff
  419e34:	and	x0, x0, #0xff
  419e38:	cmp	x0, #0x0
  419e3c:	b.eq	419e68 <udev_event_spawn+0x150>  // b.none
  419e40:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419e44:	add	x1, x0, #0xabb
  419e48:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  419e4c:	add	x4, x0, #0x6e0
  419e50:	mov	w3, #0x2c1                 	// #705
  419e54:	mov	x2, x1
  419e58:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419e5c:	add	x1, x0, #0xf60
  419e60:	mov	w0, #0x1                   	// #1
  419e64:	bl	40abb0 <log_assert_failed_realm@plt>
  419e68:	ldr	x0, [sp, #72]
  419e6c:	cmp	x0, #0x0
  419e70:	b.ne	419e84 <udev_event_spawn+0x16c>  // b.any
  419e74:	mov	w0, #0x1                   	// #1
  419e78:	bl	40be30 <log_get_max_level_realm@plt>
  419e7c:	cmp	w0, #0x5
  419e80:	b.le	419f70 <udev_event_spawn+0x258>
  419e84:	add	x0, sp, #0x168
  419e88:	mov	w1, #0x800                 	// #2048
  419e8c:	movk	w1, #0x8, lsl #16
  419e90:	bl	40b510 <pipe2@plt>
  419e94:	cmp	w0, #0x0
  419e98:	b.eq	419f70 <udev_event_spawn+0x258>  // b.none
  419e9c:	str	xzr, [sp, #272]
  419ea0:	ldr	x0, [sp, #104]
  419ea4:	ldr	x0, [x0]
  419ea8:	str	x0, [sp, #208]
  419eac:	mov	w0, #0x3                   	// #3
  419eb0:	str	w0, [sp, #124]
  419eb4:	bl	40b040 <__errno_location@plt>
  419eb8:	ldr	w0, [x0]
  419ebc:	str	w0, [sp, #128]
  419ec0:	ldr	x0, [sp, #208]
  419ec4:	cmp	x0, #0x0
  419ec8:	b.eq	419f04 <udev_event_spawn+0x1ec>  // b.none
  419ecc:	mov	w0, #0x1                   	// #1
  419ed0:	bl	40be30 <log_get_max_level_realm@plt>
  419ed4:	mov	w1, w0
  419ed8:	ldr	w0, [sp, #124]
  419edc:	cmp	w0, w1
  419ee0:	cset	w0, le
  419ee4:	and	w0, w0, #0xff
  419ee8:	and	x0, x0, #0xff
  419eec:	cmp	x0, #0x0
  419ef0:	b.eq	419f04 <udev_event_spawn+0x1ec>  // b.none
  419ef4:	add	x0, sp, #0x110
  419ef8:	mov	x1, x0
  419efc:	ldr	x0, [sp, #208]
  419f00:	bl	40aba0 <sd_device_get_sysname@plt>
  419f04:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419f08:	add	x2, x0, #0xabb
  419f0c:	ldr	x0, [sp, #272]
  419f10:	cmp	x0, #0x0
  419f14:	b.eq	419f24 <udev_event_spawn+0x20c>  // b.none
  419f18:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419f1c:	add	x0, x0, #0xbc8
  419f20:	b	419f28 <udev_event_spawn+0x210>
  419f24:	mov	x0, #0x0                   	// #0
  419f28:	ldr	x3, [sp, #272]
  419f2c:	ldr	x1, [sp, #80]
  419f30:	str	x1, [sp, #16]
  419f34:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  419f38:	add	x1, x1, #0xf78
  419f3c:	str	x1, [sp, #8]
  419f40:	str	xzr, [sp]
  419f44:	mov	x7, #0x0                   	// #0
  419f48:	mov	x6, x3
  419f4c:	mov	x5, x0
  419f50:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  419f54:	add	x4, x0, #0x6f8
  419f58:	mov	w3, #0x2c6                 	// #710
  419f5c:	ldr	w1, [sp, #128]
  419f60:	ldr	w0, [sp, #124]
  419f64:	bl	40b020 <log_object_internal@plt>
  419f68:	mov	w19, w0
  419f6c:	b	41a6cc <udev_event_spawn+0x9b4>
  419f70:	mov	w0, #0x1                   	// #1
  419f74:	bl	40be30 <log_get_max_level_realm@plt>
  419f78:	cmp	w0, #0x5
  419f7c:	b.le	41a06c <udev_event_spawn+0x354>
  419f80:	add	x0, sp, #0x170
  419f84:	mov	w1, #0x800                 	// #2048
  419f88:	movk	w1, #0x8, lsl #16
  419f8c:	bl	40b510 <pipe2@plt>
  419f90:	cmp	w0, #0x0
  419f94:	b.eq	41a06c <udev_event_spawn+0x354>  // b.none
  419f98:	str	xzr, [sp, #272]
  419f9c:	ldr	x0, [sp, #104]
  419fa0:	ldr	x0, [x0]
  419fa4:	str	x0, [sp, #216]
  419fa8:	mov	w0, #0x3                   	// #3
  419fac:	str	w0, [sp, #132]
  419fb0:	bl	40b040 <__errno_location@plt>
  419fb4:	ldr	w0, [x0]
  419fb8:	str	w0, [sp, #136]
  419fbc:	ldr	x0, [sp, #216]
  419fc0:	cmp	x0, #0x0
  419fc4:	b.eq	41a000 <udev_event_spawn+0x2e8>  // b.none
  419fc8:	mov	w0, #0x1                   	// #1
  419fcc:	bl	40be30 <log_get_max_level_realm@plt>
  419fd0:	mov	w1, w0
  419fd4:	ldr	w0, [sp, #132]
  419fd8:	cmp	w0, w1
  419fdc:	cset	w0, le
  419fe0:	and	w0, w0, #0xff
  419fe4:	and	x0, x0, #0xff
  419fe8:	cmp	x0, #0x0
  419fec:	b.eq	41a000 <udev_event_spawn+0x2e8>  // b.none
  419ff0:	add	x0, sp, #0x110
  419ff4:	mov	x1, x0
  419ff8:	ldr	x0, [sp, #216]
  419ffc:	bl	40aba0 <sd_device_get_sysname@plt>
  41a000:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a004:	add	x2, x0, #0xabb
  41a008:	ldr	x0, [sp, #272]
  41a00c:	cmp	x0, #0x0
  41a010:	b.eq	41a020 <udev_event_spawn+0x308>  // b.none
  41a014:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a018:	add	x0, x0, #0xbc8
  41a01c:	b	41a024 <udev_event_spawn+0x30c>
  41a020:	mov	x0, #0x0                   	// #0
  41a024:	ldr	x3, [sp, #272]
  41a028:	ldr	x1, [sp, #80]
  41a02c:	str	x1, [sp, #16]
  41a030:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a034:	add	x1, x1, #0xf78
  41a038:	str	x1, [sp, #8]
  41a03c:	str	xzr, [sp]
  41a040:	mov	x7, #0x0                   	// #0
  41a044:	mov	x6, x3
  41a048:	mov	x5, x0
  41a04c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a050:	add	x4, x0, #0x6f8
  41a054:	mov	w3, #0x2cb                 	// #715
  41a058:	ldr	w1, [sp, #136]
  41a05c:	ldr	w0, [sp, #132]
  41a060:	bl	40b020 <log_object_internal@plt>
  41a064:	mov	w19, w0
  41a068:	b	41a6cc <udev_event_spawn+0x9b4>
  41a06c:	mov	w2, #0x3                   	// #3
  41a070:	mov	x1, #0x0                   	// #0
  41a074:	ldr	x0, [sp, #80]
  41a078:	bl	40a7f0 <strv_split_full@plt>
  41a07c:	str	x0, [sp, #184]
  41a080:	ldr	x0, [sp, #184]
  41a084:	cmp	x0, #0x0
  41a088:	b.ne	41a0b0 <udev_event_spawn+0x398>  // b.any
  41a08c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a090:	add	x1, x0, #0xabb
  41a094:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a098:	add	x3, x0, #0x6f8
  41a09c:	mov	w2, #0x2d0                 	// #720
  41a0a0:	mov	w0, #0x1                   	// #1
  41a0a4:	bl	40bda0 <log_oom_internal@plt>
  41a0a8:	mov	w19, w0
  41a0ac:	b	41a6cc <udev_event_spawn+0x9b4>
  41a0b0:	ldr	x0, [sp, #184]
  41a0b4:	ldr	x0, [x0]
  41a0b8:	bl	417018 <isempty>
  41a0bc:	and	w0, w0, #0xff
  41a0c0:	cmp	w0, #0x0
  41a0c4:	b.eq	41a19c <udev_event_spawn+0x484>  // b.none
  41a0c8:	str	xzr, [sp, #272]
  41a0cc:	ldr	x0, [sp, #104]
  41a0d0:	ldr	x0, [x0]
  41a0d4:	str	x0, [sp, #264]
  41a0d8:	mov	w0, #0x3                   	// #3
  41a0dc:	str	w0, [sp, #176]
  41a0e0:	mov	w0, #0x16                  	// #22
  41a0e4:	movk	w0, #0x4000, lsl #16
  41a0e8:	str	w0, [sp, #180]
  41a0ec:	ldr	x0, [sp, #264]
  41a0f0:	cmp	x0, #0x0
  41a0f4:	b.eq	41a130 <udev_event_spawn+0x418>  // b.none
  41a0f8:	mov	w0, #0x1                   	// #1
  41a0fc:	bl	40be30 <log_get_max_level_realm@plt>
  41a100:	mov	w1, w0
  41a104:	ldr	w0, [sp, #176]
  41a108:	cmp	w0, w1
  41a10c:	cset	w0, le
  41a110:	and	w0, w0, #0xff
  41a114:	and	x0, x0, #0xff
  41a118:	cmp	x0, #0x0
  41a11c:	b.eq	41a130 <udev_event_spawn+0x418>  // b.none
  41a120:	add	x0, sp, #0x110
  41a124:	mov	x1, x0
  41a128:	ldr	x0, [sp, #264]
  41a12c:	bl	40aba0 <sd_device_get_sysname@plt>
  41a130:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a134:	add	x2, x0, #0xabb
  41a138:	ldr	x0, [sp, #272]
  41a13c:	cmp	x0, #0x0
  41a140:	b.eq	41a150 <udev_event_spawn+0x438>  // b.none
  41a144:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a148:	add	x0, x0, #0xbc8
  41a14c:	b	41a154 <udev_event_spawn+0x43c>
  41a150:	mov	x0, #0x0                   	// #0
  41a154:	ldr	x3, [sp, #272]
  41a158:	ldr	x1, [sp, #80]
  41a15c:	str	x1, [sp, #16]
  41a160:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a164:	add	x1, x1, #0xfa8
  41a168:	str	x1, [sp, #8]
  41a16c:	str	xzr, [sp]
  41a170:	mov	x7, #0x0                   	// #0
  41a174:	mov	x6, x3
  41a178:	mov	x5, x0
  41a17c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a180:	add	x4, x0, #0x6f8
  41a184:	mov	w3, #0x2d3                 	// #723
  41a188:	ldr	w1, [sp, #180]
  41a18c:	ldr	w0, [sp, #176]
  41a190:	bl	40b020 <log_object_internal@plt>
  41a194:	mov	w19, w0
  41a198:	b	41a6cc <udev_event_spawn+0x9b4>
  41a19c:	ldr	x0, [sp, #184]
  41a1a0:	ldr	x0, [x0]
  41a1a4:	bl	40ad10 <path_is_absolute@plt>
  41a1a8:	and	w0, w0, #0xff
  41a1ac:	eor	w0, w0, #0x1
  41a1b0:	and	w0, w0, #0xff
  41a1b4:	cmp	w0, #0x0
  41a1b8:	b.eq	41a228 <udev_event_spawn+0x510>  // b.none
  41a1bc:	ldr	x0, [sp, #184]
  41a1c0:	ldr	x0, [x0]
  41a1c4:	mov	x2, #0xffffffffffffffff    	// #-1
  41a1c8:	mov	x1, x0
  41a1cc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a1d0:	add	x0, x0, #0xfc0
  41a1d4:	bl	40b2f0 <path_join_internal@plt>
  41a1d8:	str	x0, [sp, #224]
  41a1dc:	ldr	x0, [sp, #224]
  41a1e0:	cmp	x0, #0x0
  41a1e4:	b.ne	41a20c <udev_event_spawn+0x4f4>  // b.any
  41a1e8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a1ec:	add	x1, x0, #0xabb
  41a1f0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a1f4:	add	x3, x0, #0x6f8
  41a1f8:	mov	w2, #0x2dc                 	// #732
  41a1fc:	mov	w0, #0x1                   	// #1
  41a200:	bl	40bda0 <log_oom_internal@plt>
  41a204:	mov	w19, w0
  41a208:	b	41a6cc <udev_event_spawn+0x9b4>
  41a20c:	ldr	x0, [sp, #184]
  41a210:	ldr	x0, [x0]
  41a214:	bl	40ba20 <free@plt>
  41a218:	ldr	x0, [sp, #184]
  41a21c:	ldr	x1, [sp, #224]
  41a220:	str	x1, [x0]
  41a224:	str	xzr, [sp, #224]
  41a228:	ldr	x0, [sp, #104]
  41a22c:	ldr	x0, [x0]
  41a230:	add	x1, sp, #0xc0
  41a234:	bl	40a9c0 <device_get_properties_strv@plt>
  41a238:	str	w0, [sp, #140]
  41a23c:	ldr	w0, [sp, #140]
  41a240:	cmp	w0, #0x0
  41a244:	b.ge	41a310 <udev_event_spawn+0x5f8>  // b.tcont
  41a248:	str	xzr, [sp, #272]
  41a24c:	ldr	x0, [sp, #104]
  41a250:	ldr	x0, [x0]
  41a254:	str	x0, [sp, #256]
  41a258:	mov	w0, #0x3                   	// #3
  41a25c:	str	w0, [sp, #168]
  41a260:	ldr	w0, [sp, #140]
  41a264:	str	w0, [sp, #172]
  41a268:	ldr	x0, [sp, #256]
  41a26c:	cmp	x0, #0x0
  41a270:	b.eq	41a2ac <udev_event_spawn+0x594>  // b.none
  41a274:	mov	w0, #0x1                   	// #1
  41a278:	bl	40be30 <log_get_max_level_realm@plt>
  41a27c:	mov	w1, w0
  41a280:	ldr	w0, [sp, #168]
  41a284:	cmp	w0, w1
  41a288:	cset	w0, le
  41a28c:	and	w0, w0, #0xff
  41a290:	and	x0, x0, #0xff
  41a294:	cmp	x0, #0x0
  41a298:	b.eq	41a2ac <udev_event_spawn+0x594>  // b.none
  41a29c:	add	x0, sp, #0x110
  41a2a0:	mov	x1, x0
  41a2a4:	ldr	x0, [sp, #256]
  41a2a8:	bl	40aba0 <sd_device_get_sysname@plt>
  41a2ac:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a2b0:	add	x2, x0, #0xabb
  41a2b4:	ldr	x0, [sp, #272]
  41a2b8:	cmp	x0, #0x0
  41a2bc:	b.eq	41a2cc <udev_event_spawn+0x5b4>  // b.none
  41a2c0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a2c4:	add	x0, x0, #0xbc8
  41a2c8:	b	41a2d0 <udev_event_spawn+0x5b8>
  41a2cc:	mov	x0, #0x0                   	// #0
  41a2d0:	ldr	x3, [sp, #272]
  41a2d4:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a2d8:	add	x1, x1, #0xfd0
  41a2dc:	str	x1, [sp, #8]
  41a2e0:	str	xzr, [sp]
  41a2e4:	mov	x7, #0x0                   	// #0
  41a2e8:	mov	x6, x3
  41a2ec:	mov	x5, x0
  41a2f0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a2f4:	add	x4, x0, #0x6f8
  41a2f8:	mov	w3, #0x2e3                 	// #739
  41a2fc:	ldr	w1, [sp, #172]
  41a300:	ldr	w0, [sp, #168]
  41a304:	bl	40b020 <log_object_internal@plt>
  41a308:	mov	w19, w0
  41a30c:	b	41a6cc <udev_event_spawn+0x9b4>
  41a310:	str	xzr, [sp, #272]
  41a314:	ldr	x0, [sp, #104]
  41a318:	ldr	x0, [x0]
  41a31c:	str	x0, [sp, #232]
  41a320:	mov	w0, #0x7                   	// #7
  41a324:	str	w0, [sp, #144]
  41a328:	str	wzr, [sp, #148]
  41a32c:	ldr	x0, [sp, #232]
  41a330:	cmp	x0, #0x0
  41a334:	b.eq	41a370 <udev_event_spawn+0x658>  // b.none
  41a338:	mov	w0, #0x1                   	// #1
  41a33c:	bl	40be30 <log_get_max_level_realm@plt>
  41a340:	mov	w1, w0
  41a344:	ldr	w0, [sp, #144]
  41a348:	cmp	w0, w1
  41a34c:	cset	w0, le
  41a350:	and	w0, w0, #0xff
  41a354:	and	x0, x0, #0xff
  41a358:	cmp	x0, #0x0
  41a35c:	b.eq	41a370 <udev_event_spawn+0x658>  // b.none
  41a360:	add	x0, sp, #0x110
  41a364:	mov	x1, x0
  41a368:	ldr	x0, [sp, #232]
  41a36c:	bl	40aba0 <sd_device_get_sysname@plt>
  41a370:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a374:	add	x2, x0, #0xabb
  41a378:	ldr	x0, [sp, #272]
  41a37c:	cmp	x0, #0x0
  41a380:	b.eq	41a390 <udev_event_spawn+0x678>  // b.none
  41a384:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a388:	add	x0, x0, #0xbc8
  41a38c:	b	41a394 <udev_event_spawn+0x67c>
  41a390:	mov	x0, #0x0                   	// #0
  41a394:	ldr	x3, [sp, #272]
  41a398:	ldr	x1, [sp, #80]
  41a39c:	str	x1, [sp, #16]
  41a3a0:	adrp	x1, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a3a4:	add	x1, x1, #0xff0
  41a3a8:	str	x1, [sp, #8]
  41a3ac:	str	xzr, [sp]
  41a3b0:	mov	x7, #0x0                   	// #0
  41a3b4:	mov	x6, x3
  41a3b8:	mov	x5, x0
  41a3bc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a3c0:	add	x4, x0, #0x6f8
  41a3c4:	mov	w3, #0x2e5                 	// #741
  41a3c8:	ldr	w1, [sp, #148]
  41a3cc:	ldr	w0, [sp, #144]
  41a3d0:	bl	40b020 <log_object_internal@plt>
  41a3d4:	add	x0, sp, #0x78
  41a3d8:	mov	x2, x0
  41a3dc:	mov	w1, #0x25                  	// #37
  41a3e0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a3e4:	add	x0, x0, #0x0
  41a3e8:	bl	4171c4 <safe_fork>
  41a3ec:	str	w0, [sp, #140]
  41a3f0:	ldr	w0, [sp, #140]
  41a3f4:	cmp	w0, #0x0
  41a3f8:	b.ge	41a4cc <udev_event_spawn+0x7b4>  // b.tcont
  41a3fc:	str	xzr, [sp, #272]
  41a400:	ldr	x0, [sp, #104]
  41a404:	ldr	x0, [x0]
  41a408:	str	x0, [sp, #248]
  41a40c:	mov	w0, #0x3                   	// #3
  41a410:	str	w0, [sp, #160]
  41a414:	ldr	w0, [sp, #140]
  41a418:	str	w0, [sp, #164]
  41a41c:	ldr	x0, [sp, #248]
  41a420:	cmp	x0, #0x0
  41a424:	b.eq	41a460 <udev_event_spawn+0x748>  // b.none
  41a428:	mov	w0, #0x1                   	// #1
  41a42c:	bl	40be30 <log_get_max_level_realm@plt>
  41a430:	mov	w1, w0
  41a434:	ldr	w0, [sp, #160]
  41a438:	cmp	w0, w1
  41a43c:	cset	w0, le
  41a440:	and	w0, w0, #0xff
  41a444:	and	x0, x0, #0xff
  41a448:	cmp	x0, #0x0
  41a44c:	b.eq	41a460 <udev_event_spawn+0x748>  // b.none
  41a450:	add	x0, sp, #0x110
  41a454:	mov	x1, x0
  41a458:	ldr	x0, [sp, #248]
  41a45c:	bl	40aba0 <sd_device_get_sysname@plt>
  41a460:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a464:	add	x2, x0, #0xabb
  41a468:	ldr	x0, [sp, #272]
  41a46c:	cmp	x0, #0x0
  41a470:	b.eq	41a480 <udev_event_spawn+0x768>  // b.none
  41a474:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a478:	add	x0, x0, #0xbc8
  41a47c:	b	41a484 <udev_event_spawn+0x76c>
  41a480:	mov	x0, #0x0                   	// #0
  41a484:	ldr	x3, [sp, #272]
  41a488:	ldr	x1, [sp, #80]
  41a48c:	str	x1, [sp, #16]
  41a490:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a494:	add	x1, x1, #0x8
  41a498:	str	x1, [sp, #8]
  41a49c:	str	xzr, [sp]
  41a4a0:	mov	x7, #0x0                   	// #0
  41a4a4:	mov	x6, x3
  41a4a8:	mov	x5, x0
  41a4ac:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a4b0:	add	x4, x0, #0x6f8
  41a4b4:	mov	w3, #0x2e9                 	// #745
  41a4b8:	ldr	w1, [sp, #164]
  41a4bc:	ldr	w0, [sp, #160]
  41a4c0:	bl	40b020 <log_object_internal@plt>
  41a4c4:	mov	w19, w0
  41a4c8:	b	41a6cc <udev_event_spawn+0x9b4>
  41a4cc:	ldr	w0, [sp, #140]
  41a4d0:	cmp	w0, #0x0
  41a4d4:	b.ne	41a52c <udev_event_spawn+0x814>  // b.any
  41a4d8:	ldr	w0, [sp, #364]
  41a4dc:	ldr	w1, [sp, #372]
  41a4e0:	mov	w2, w1
  41a4e4:	mov	w1, w0
  41a4e8:	mov	w0, #0xffffffff            	// #-1
  41a4ec:	bl	40a340 <rearrange_stdio@plt>
  41a4f0:	cmp	w0, #0x0
  41a4f4:	b.ge	41a500 <udev_event_spawn+0x7e8>  // b.tcont
  41a4f8:	mov	w0, #0x1                   	// #1
  41a4fc:	bl	40ac70 <_exit@plt>
  41a500:	mov	x1, #0x0                   	// #0
  41a504:	mov	x0, #0x0                   	// #0
  41a508:	bl	40baa0 <close_all_fds@plt>
  41a50c:	bl	40b4c0 <rlimit_nofile_safe@plt>
  41a510:	ldr	x0, [sp, #184]
  41a514:	ldr	x0, [x0]
  41a518:	ldr	x1, [sp, #184]
  41a51c:	ldr	x2, [sp, #192]
  41a520:	bl	40a4f0 <execve@plt>
  41a524:	mov	w0, #0x1                   	// #1
  41a528:	bl	40ac70 <_exit@plt>
  41a52c:	ldr	w0, [sp, #364]
  41a530:	bl	40aad0 <safe_close@plt>
  41a534:	str	w0, [sp, #364]
  41a538:	ldr	w0, [sp, #372]
  41a53c:	bl	40aad0 <safe_close@plt>
  41a540:	str	w0, [sp, #372]
  41a544:	ldr	x0, [sp, #104]
  41a548:	ldr	x20, [x0]
  41a54c:	ldr	w19, [sp, #120]
  41a550:	ldr	x0, [sp, #96]
  41a554:	bl	4171f8 <udev_warn_timeout>
  41a558:	mov	x4, x0
  41a55c:	ldr	x0, [sp, #104]
  41a560:	ldr	x2, [x0, #80]
  41a564:	ldr	w1, [sp, #360]
  41a568:	ldr	w0, [sp, #368]
  41a56c:	stp	xzr, xzr, [sp, #272]
  41a570:	stp	xzr, xzr, [sp, #288]
  41a574:	stp	xzr, xzr, [sp, #304]
  41a578:	stp	xzr, xzr, [sp, #320]
  41a57c:	stp	xzr, xzr, [sp, #336]
  41a580:	str	xzr, [sp, #352]
  41a584:	str	x20, [sp, #272]
  41a588:	ldr	x3, [sp, #80]
  41a58c:	str	x3, [sp, #280]
  41a590:	str	w19, [sp, #288]
  41a594:	str	x4, [sp, #296]
  41a598:	ldr	x3, [sp, #96]
  41a59c:	str	x3, [sp, #304]
  41a5a0:	str	x2, [sp, #312]
  41a5a4:	ldrb	w2, [sp, #95]
  41a5a8:	strb	w2, [sp, #320]
  41a5ac:	str	w1, [sp, #324]
  41a5b0:	str	w0, [sp, #328]
  41a5b4:	ldr	x0, [sp, #72]
  41a5b8:	str	x0, [sp, #336]
  41a5bc:	ldr	x0, [sp, #64]
  41a5c0:	str	x0, [sp, #344]
  41a5c4:	add	x0, sp, #0x110
  41a5c8:	bl	419a00 <spawn_wait>
  41a5cc:	str	w0, [sp, #140]
  41a5d0:	ldr	w0, [sp, #140]
  41a5d4:	cmp	w0, #0x0
  41a5d8:	b.ge	41a6ac <udev_event_spawn+0x994>  // b.tcont
  41a5dc:	str	xzr, [sp, #200]
  41a5e0:	ldr	x0, [sp, #104]
  41a5e4:	ldr	x0, [x0]
  41a5e8:	str	x0, [sp, #240]
  41a5ec:	mov	w0, #0x3                   	// #3
  41a5f0:	str	w0, [sp, #152]
  41a5f4:	ldr	w0, [sp, #140]
  41a5f8:	str	w0, [sp, #156]
  41a5fc:	ldr	x0, [sp, #240]
  41a600:	cmp	x0, #0x0
  41a604:	b.eq	41a640 <udev_event_spawn+0x928>  // b.none
  41a608:	mov	w0, #0x1                   	// #1
  41a60c:	bl	40be30 <log_get_max_level_realm@plt>
  41a610:	mov	w1, w0
  41a614:	ldr	w0, [sp, #152]
  41a618:	cmp	w0, w1
  41a61c:	cset	w0, le
  41a620:	and	w0, w0, #0xff
  41a624:	and	x0, x0, #0xff
  41a628:	cmp	x0, #0x0
  41a62c:	b.eq	41a640 <udev_event_spawn+0x928>  // b.none
  41a630:	add	x0, sp, #0xc8
  41a634:	mov	x1, x0
  41a638:	ldr	x0, [sp, #240]
  41a63c:	bl	40aba0 <sd_device_get_sysname@plt>
  41a640:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a644:	add	x2, x0, #0xabb
  41a648:	ldr	x0, [sp, #200]
  41a64c:	cmp	x0, #0x0
  41a650:	b.eq	41a660 <udev_event_spawn+0x948>  // b.none
  41a654:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a658:	add	x0, x0, #0xbc8
  41a65c:	b	41a664 <udev_event_spawn+0x94c>
  41a660:	mov	x0, #0x0                   	// #0
  41a664:	ldr	x3, [sp, #200]
  41a668:	ldr	x1, [sp, #80]
  41a66c:	str	x1, [sp, #16]
  41a670:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a674:	add	x1, x1, #0x38
  41a678:	str	x1, [sp, #8]
  41a67c:	str	xzr, [sp]
  41a680:	mov	x7, #0x0                   	// #0
  41a684:	mov	x6, x3
  41a688:	mov	x5, x0
  41a68c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a690:	add	x4, x0, #0x6f8
  41a694:	mov	w3, #0x309                 	// #777
  41a698:	ldr	w1, [sp, #156]
  41a69c:	ldr	w0, [sp, #152]
  41a6a0:	bl	40b020 <log_object_internal@plt>
  41a6a4:	mov	w19, w0
  41a6a8:	b	41a6cc <udev_event_spawn+0x9b4>
  41a6ac:	ldr	x0, [sp, #72]
  41a6b0:	cmp	x0, #0x0
  41a6b4:	b.eq	41a6c8 <udev_event_spawn+0x9b0>  // b.none
  41a6b8:	ldr	x0, [sp, #352]
  41a6bc:	ldr	x1, [sp, #72]
  41a6c0:	add	x0, x1, x0
  41a6c4:	strb	wzr, [x0]
  41a6c8:	ldr	w19, [sp, #140]
  41a6cc:	add	x0, sp, #0xb8
  41a6d0:	bl	417190 <strv_freep>
  41a6d4:	add	x0, sp, #0x170
  41a6d8:	bl	416fd0 <close_pairp>
  41a6dc:	add	x0, sp, #0x168
  41a6e0:	bl	416fd0 <close_pairp>
  41a6e4:	mov	w1, w19
  41a6e8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41a6ec:	ldr	x0, [x0, #4032]
  41a6f0:	ldr	x2, [sp, #376]
  41a6f4:	ldr	x0, [x0]
  41a6f8:	eor	x0, x2, x0
  41a6fc:	cmp	x0, #0x0
  41a700:	b.eq	41a708 <udev_event_spawn+0x9f0>  // b.none
  41a704:	bl	40b280 <__stack_chk_fail@plt>
  41a708:	mov	w0, w1
  41a70c:	ldp	x19, x20, [sp, #48]
  41a710:	ldp	x29, x30, [sp, #32]
  41a714:	add	sp, sp, #0x180
  41a718:	ret

000000000041a71c <rename_netif>:
  41a71c:	sub	sp, sp, #0xe0
  41a720:	stp	x29, x30, [sp, #48]
  41a724:	add	x29, sp, #0x30
  41a728:	str	x0, [sp, #72]
  41a72c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41a730:	ldr	x0, [x0, #4032]
  41a734:	ldr	x1, [x0]
  41a738:	str	x1, [sp, #216]
  41a73c:	mov	x1, #0x0                   	// #0
  41a740:	ldr	x0, [sp, #72]
  41a744:	ldr	x0, [x0]
  41a748:	str	x0, [sp, #160]
  41a74c:	ldr	x0, [sp, #72]
  41a750:	ldr	x0, [x0, #24]
  41a754:	cmp	x0, #0x0
  41a758:	b.ne	41a764 <rename_netif+0x48>  // b.any
  41a75c:	mov	w0, #0x0                   	// #0
  41a760:	b	41ad44 <rename_netif+0x628>
  41a764:	add	x0, sp, #0x90
  41a768:	mov	x1, x0
  41a76c:	ldr	x0, [sp, #160]
  41a770:	bl	40aba0 <sd_device_get_sysname@plt>
  41a774:	str	w0, [sp, #92]
  41a778:	ldr	w0, [sp, #92]
  41a77c:	cmp	w0, #0x0
  41a780:	b.ge	41a844 <rename_netif+0x128>  // b.tcont
  41a784:	str	xzr, [sp, #152]
  41a788:	ldr	x0, [sp, #160]
  41a78c:	str	x0, [sp, #208]
  41a790:	mov	w0, #0x3                   	// #3
  41a794:	str	w0, [sp, #136]
  41a798:	ldr	w0, [sp, #92]
  41a79c:	str	w0, [sp, #140]
  41a7a0:	ldr	x0, [sp, #208]
  41a7a4:	cmp	x0, #0x0
  41a7a8:	b.eq	41a7e4 <rename_netif+0xc8>  // b.none
  41a7ac:	mov	w0, #0x1                   	// #1
  41a7b0:	bl	40be30 <log_get_max_level_realm@plt>
  41a7b4:	mov	w1, w0
  41a7b8:	ldr	w0, [sp, #136]
  41a7bc:	cmp	w0, w1
  41a7c0:	cset	w0, le
  41a7c4:	and	w0, w0, #0xff
  41a7c8:	and	x0, x0, #0xff
  41a7cc:	cmp	x0, #0x0
  41a7d0:	b.eq	41a7e4 <rename_netif+0xc8>  // b.none
  41a7d4:	add	x0, sp, #0x98
  41a7d8:	mov	x1, x0
  41a7dc:	ldr	x0, [sp, #208]
  41a7e0:	bl	40aba0 <sd_device_get_sysname@plt>
  41a7e4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a7e8:	add	x2, x0, #0xabb
  41a7ec:	ldr	x0, [sp, #152]
  41a7f0:	cmp	x0, #0x0
  41a7f4:	b.eq	41a804 <rename_netif+0xe8>  // b.none
  41a7f8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a7fc:	add	x0, x0, #0xbc8
  41a800:	b	41a808 <rename_netif+0xec>
  41a804:	mov	x0, #0x0                   	// #0
  41a808:	ldr	x3, [sp, #152]
  41a80c:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a810:	add	x1, x1, #0x68
  41a814:	str	x1, [sp, #8]
  41a818:	str	xzr, [sp]
  41a81c:	mov	x7, #0x0                   	// #0
  41a820:	mov	x6, x3
  41a824:	mov	x5, x0
  41a828:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a82c:	add	x4, x0, #0x710
  41a830:	mov	w3, #0x31c                 	// #796
  41a834:	ldr	w1, [sp, #140]
  41a838:	ldr	w0, [sp, #136]
  41a83c:	bl	40b020 <log_object_internal@plt>
  41a840:	b	41ad44 <rename_netif+0x628>
  41a844:	ldr	x0, [sp, #72]
  41a848:	ldr	x0, [x0, #24]
  41a84c:	ldr	x1, [sp, #144]
  41a850:	bl	40b710 <strcmp@plt>
  41a854:	cmp	w0, #0x0
  41a858:	b.ne	41a864 <rename_netif+0x148>  // b.any
  41a85c:	mov	w0, #0x0                   	// #0
  41a860:	b	41ad44 <rename_netif+0x628>
  41a864:	mov	w1, #0x0                   	// #0
  41a868:	ldr	x0, [sp, #160]
  41a86c:	bl	40a860 <device_for_action@plt>
  41a870:	and	w0, w0, #0xff
  41a874:	eor	w0, w0, #0x1
  41a878:	and	w0, w0, #0xff
  41a87c:	cmp	w0, #0x0
  41a880:	b.eq	41a88c <rename_netif+0x170>  // b.none
  41a884:	mov	w0, #0x0                   	// #0
  41a888:	b	41ad44 <rename_netif+0x628>
  41a88c:	add	x0, sp, #0x58
  41a890:	mov	x1, x0
  41a894:	ldr	x0, [sp, #160]
  41a898:	bl	40bb00 <sd_device_get_ifindex@plt>
  41a89c:	str	w0, [sp, #92]
  41a8a0:	ldr	w0, [sp, #92]
  41a8a4:	cmn	w0, #0x2
  41a8a8:	b.ne	41a8b4 <rename_netif+0x198>  // b.any
  41a8ac:	mov	w0, #0x0                   	// #0
  41a8b0:	b	41ad44 <rename_netif+0x628>
  41a8b4:	ldr	w0, [sp, #92]
  41a8b8:	cmp	w0, #0x0
  41a8bc:	b.ge	41a980 <rename_netif+0x264>  // b.tcont
  41a8c0:	str	xzr, [sp, #152]
  41a8c4:	ldr	x0, [sp, #160]
  41a8c8:	str	x0, [sp, #200]
  41a8cc:	mov	w0, #0x3                   	// #3
  41a8d0:	str	w0, [sp, #128]
  41a8d4:	ldr	w0, [sp, #92]
  41a8d8:	str	w0, [sp, #132]
  41a8dc:	ldr	x0, [sp, #200]
  41a8e0:	cmp	x0, #0x0
  41a8e4:	b.eq	41a920 <rename_netif+0x204>  // b.none
  41a8e8:	mov	w0, #0x1                   	// #1
  41a8ec:	bl	40be30 <log_get_max_level_realm@plt>
  41a8f0:	mov	w1, w0
  41a8f4:	ldr	w0, [sp, #128]
  41a8f8:	cmp	w0, w1
  41a8fc:	cset	w0, le
  41a900:	and	w0, w0, #0xff
  41a904:	and	x0, x0, #0xff
  41a908:	cmp	x0, #0x0
  41a90c:	b.eq	41a920 <rename_netif+0x204>  // b.none
  41a910:	add	x0, sp, #0x98
  41a914:	mov	x1, x0
  41a918:	ldr	x0, [sp, #200]
  41a91c:	bl	40aba0 <sd_device_get_sysname@plt>
  41a920:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a924:	add	x2, x0, #0xabb
  41a928:	ldr	x0, [sp, #152]
  41a92c:	cmp	x0, #0x0
  41a930:	b.eq	41a940 <rename_netif+0x224>  // b.none
  41a934:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41a938:	add	x0, x0, #0xbc8
  41a93c:	b	41a944 <rename_netif+0x228>
  41a940:	mov	x0, #0x0                   	// #0
  41a944:	ldr	x3, [sp, #152]
  41a948:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a94c:	add	x1, x1, #0x88
  41a950:	str	x1, [sp, #8]
  41a954:	str	xzr, [sp]
  41a958:	mov	x7, #0x0                   	// #0
  41a95c:	mov	x6, x3
  41a960:	mov	x5, x0
  41a964:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41a968:	add	x4, x0, #0x710
  41a96c:	mov	w3, #0x328                 	// #808
  41a970:	ldr	w1, [sp, #132]
  41a974:	ldr	w0, [sp, #128]
  41a978:	bl	40b020 <log_object_internal@plt>
  41a97c:	b	41ad44 <rename_netif+0x628>
  41a980:	ldr	x0, [sp, #72]
  41a984:	add	x3, x0, #0x58
  41a988:	ldr	w1, [sp, #88]
  41a98c:	ldr	x0, [sp, #72]
  41a990:	ldr	x0, [x0, #24]
  41a994:	mov	x2, x0
  41a998:	mov	x0, x3
  41a99c:	bl	40bca0 <rtnl_set_link_name@plt>
  41a9a0:	str	w0, [sp, #92]
  41a9a4:	ldr	w0, [sp, #92]
  41a9a8:	cmp	w0, #0x0
  41a9ac:	b.ge	41aa90 <rename_netif+0x374>  // b.tcont
  41a9b0:	str	xzr, [sp, #152]
  41a9b4:	ldr	x0, [sp, #160]
  41a9b8:	str	x0, [sp, #192]
  41a9bc:	mov	w0, #0x3                   	// #3
  41a9c0:	str	w0, [sp, #120]
  41a9c4:	ldr	w0, [sp, #92]
  41a9c8:	str	w0, [sp, #124]
  41a9cc:	ldr	x0, [sp, #192]
  41a9d0:	cmp	x0, #0x0
  41a9d4:	b.eq	41aa10 <rename_netif+0x2f4>  // b.none
  41a9d8:	mov	w0, #0x1                   	// #1
  41a9dc:	bl	40be30 <log_get_max_level_realm@plt>
  41a9e0:	mov	w1, w0
  41a9e4:	ldr	w0, [sp, #120]
  41a9e8:	cmp	w0, w1
  41a9ec:	cset	w0, le
  41a9f0:	and	w0, w0, #0xff
  41a9f4:	and	x0, x0, #0xff
  41a9f8:	cmp	x0, #0x0
  41a9fc:	b.eq	41aa10 <rename_netif+0x2f4>  // b.none
  41aa00:	add	x0, sp, #0x98
  41aa04:	mov	x1, x0
  41aa08:	ldr	x0, [sp, #192]
  41aa0c:	bl	40aba0 <sd_device_get_sysname@plt>
  41aa10:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41aa14:	add	x8, x0, #0xabb
  41aa18:	ldr	x0, [sp, #152]
  41aa1c:	cmp	x0, #0x0
  41aa20:	b.eq	41aa30 <rename_netif+0x314>  // b.none
  41aa24:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41aa28:	add	x0, x0, #0xbc8
  41aa2c:	b	41aa34 <rename_netif+0x318>
  41aa30:	mov	x0, #0x0                   	// #0
  41aa34:	ldr	x4, [sp, #152]
  41aa38:	ldr	w1, [sp, #88]
  41aa3c:	ldr	x2, [sp, #144]
  41aa40:	ldr	x3, [sp, #72]
  41aa44:	ldr	x3, [x3, #24]
  41aa48:	str	x3, [sp, #32]
  41aa4c:	str	x2, [sp, #24]
  41aa50:	str	w1, [sp, #16]
  41aa54:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41aa58:	add	x1, x1, #0xa8
  41aa5c:	str	x1, [sp, #8]
  41aa60:	str	xzr, [sp]
  41aa64:	mov	x7, #0x0                   	// #0
  41aa68:	mov	x6, x4
  41aa6c:	mov	x5, x0
  41aa70:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41aa74:	add	x4, x0, #0x710
  41aa78:	mov	w3, #0x32c                 	// #812
  41aa7c:	mov	x2, x8
  41aa80:	ldr	w1, [sp, #124]
  41aa84:	ldr	w0, [sp, #120]
  41aa88:	bl	40b020 <log_object_internal@plt>
  41aa8c:	b	41ad44 <rename_netif+0x628>
  41aa90:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41aa94:	add	x2, x0, #0xe8
  41aa98:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41aa9c:	add	x1, x0, #0xf0
  41aaa0:	ldr	x0, [sp, #160]
  41aaa4:	bl	40bab0 <device_add_property@plt>
  41aaa8:	str	w0, [sp, #92]
  41aaac:	ldr	w0, [sp, #92]
  41aab0:	cmp	w0, #0x0
  41aab4:	b.ge	41ab78 <rename_netif+0x45c>  // b.tcont
  41aab8:	str	xzr, [sp, #152]
  41aabc:	ldr	x0, [sp, #160]
  41aac0:	str	x0, [sp, #184]
  41aac4:	mov	w0, #0x4                   	// #4
  41aac8:	str	w0, [sp, #112]
  41aacc:	ldr	w0, [sp, #92]
  41aad0:	str	w0, [sp, #116]
  41aad4:	ldr	x0, [sp, #184]
  41aad8:	cmp	x0, #0x0
  41aadc:	b.eq	41ab18 <rename_netif+0x3fc>  // b.none
  41aae0:	mov	w0, #0x1                   	// #1
  41aae4:	bl	40be30 <log_get_max_level_realm@plt>
  41aae8:	mov	w1, w0
  41aaec:	ldr	w0, [sp, #112]
  41aaf0:	cmp	w0, w1
  41aaf4:	cset	w0, le
  41aaf8:	and	w0, w0, #0xff
  41aafc:	and	x0, x0, #0xff
  41ab00:	cmp	x0, #0x0
  41ab04:	b.eq	41ab18 <rename_netif+0x3fc>  // b.none
  41ab08:	add	x0, sp, #0x98
  41ab0c:	mov	x1, x0
  41ab10:	ldr	x0, [sp, #184]
  41ab14:	bl	40aba0 <sd_device_get_sysname@plt>
  41ab18:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41ab1c:	add	x2, x0, #0xabb
  41ab20:	ldr	x0, [sp, #152]
  41ab24:	cmp	x0, #0x0
  41ab28:	b.eq	41ab38 <rename_netif+0x41c>  // b.none
  41ab2c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41ab30:	add	x0, x0, #0xbc8
  41ab34:	b	41ab3c <rename_netif+0x420>
  41ab38:	mov	x0, #0x0                   	// #0
  41ab3c:	ldr	x3, [sp, #152]
  41ab40:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ab44:	add	x1, x1, #0x100
  41ab48:	str	x1, [sp, #8]
  41ab4c:	str	xzr, [sp]
  41ab50:	mov	x7, #0x0                   	// #0
  41ab54:	mov	x6, x3
  41ab58:	mov	x5, x0
  41ab5c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ab60:	add	x4, x0, #0x710
  41ab64:	mov	w3, #0x332                 	// #818
  41ab68:	ldr	w1, [sp, #116]
  41ab6c:	ldr	w0, [sp, #112]
  41ab70:	bl	40b020 <log_object_internal@plt>
  41ab74:	b	41ad44 <rename_netif+0x628>
  41ab78:	ldr	x0, [sp, #72]
  41ab7c:	ldr	x0, [x0, #24]
  41ab80:	mov	x1, x0
  41ab84:	ldr	x0, [sp, #160]
  41ab88:	bl	40adf0 <device_rename@plt>
  41ab8c:	str	w0, [sp, #92]
  41ab90:	ldr	w0, [sp, #92]
  41ab94:	cmp	w0, #0x0
  41ab98:	b.ge	41ac68 <rename_netif+0x54c>  // b.tcont
  41ab9c:	str	xzr, [sp, #152]
  41aba0:	ldr	x0, [sp, #160]
  41aba4:	str	x0, [sp, #176]
  41aba8:	mov	w0, #0x4                   	// #4
  41abac:	str	w0, [sp, #104]
  41abb0:	ldr	w0, [sp, #92]
  41abb4:	str	w0, [sp, #108]
  41abb8:	ldr	x0, [sp, #176]
  41abbc:	cmp	x0, #0x0
  41abc0:	b.eq	41abfc <rename_netif+0x4e0>  // b.none
  41abc4:	mov	w0, #0x1                   	// #1
  41abc8:	bl	40be30 <log_get_max_level_realm@plt>
  41abcc:	mov	w1, w0
  41abd0:	ldr	w0, [sp, #104]
  41abd4:	cmp	w0, w1
  41abd8:	cset	w0, le
  41abdc:	and	w0, w0, #0xff
  41abe0:	and	x0, x0, #0xff
  41abe4:	cmp	x0, #0x0
  41abe8:	b.eq	41abfc <rename_netif+0x4e0>  // b.none
  41abec:	add	x0, sp, #0x98
  41abf0:	mov	x1, x0
  41abf4:	ldr	x0, [sp, #176]
  41abf8:	bl	40aba0 <sd_device_get_sysname@plt>
  41abfc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41ac00:	add	x2, x0, #0xabb
  41ac04:	ldr	x0, [sp, #152]
  41ac08:	cmp	x0, #0x0
  41ac0c:	b.eq	41ac1c <rename_netif+0x500>  // b.none
  41ac10:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41ac14:	add	x0, x0, #0xbc8
  41ac18:	b	41ac20 <rename_netif+0x504>
  41ac1c:	mov	x0, #0x0                   	// #0
  41ac20:	ldr	x3, [sp, #152]
  41ac24:	ldr	x1, [sp, #72]
  41ac28:	ldr	x1, [x1, #24]
  41ac2c:	str	x1, [sp, #16]
  41ac30:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ac34:	add	x1, x1, #0x130
  41ac38:	str	x1, [sp, #8]
  41ac3c:	str	xzr, [sp]
  41ac40:	mov	x7, #0x0                   	// #0
  41ac44:	mov	x6, x3
  41ac48:	mov	x5, x0
  41ac4c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ac50:	add	x4, x0, #0x710
  41ac54:	mov	w3, #0x336                 	// #822
  41ac58:	ldr	w1, [sp, #108]
  41ac5c:	ldr	w0, [sp, #104]
  41ac60:	bl	40b020 <log_object_internal@plt>
  41ac64:	b	41ad44 <rename_netif+0x628>
  41ac68:	str	xzr, [sp, #152]
  41ac6c:	ldr	x0, [sp, #160]
  41ac70:	str	x0, [sp, #168]
  41ac74:	mov	w0, #0x7                   	// #7
  41ac78:	str	w0, [sp, #96]
  41ac7c:	str	wzr, [sp, #100]
  41ac80:	ldr	x0, [sp, #168]
  41ac84:	cmp	x0, #0x0
  41ac88:	b.eq	41acc4 <rename_netif+0x5a8>  // b.none
  41ac8c:	mov	w0, #0x1                   	// #1
  41ac90:	bl	40be30 <log_get_max_level_realm@plt>
  41ac94:	mov	w1, w0
  41ac98:	ldr	w0, [sp, #96]
  41ac9c:	cmp	w0, w1
  41aca0:	cset	w0, le
  41aca4:	and	w0, w0, #0xff
  41aca8:	and	x0, x0, #0xff
  41acac:	cmp	x0, #0x0
  41acb0:	b.eq	41acc4 <rename_netif+0x5a8>  // b.none
  41acb4:	add	x0, sp, #0x98
  41acb8:	mov	x1, x0
  41acbc:	ldr	x0, [sp, #168]
  41acc0:	bl	40aba0 <sd_device_get_sysname@plt>
  41acc4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41acc8:	add	x8, x0, #0xabb
  41accc:	ldr	x0, [sp, #152]
  41acd0:	cmp	x0, #0x0
  41acd4:	b.eq	41ace4 <rename_netif+0x5c8>  // b.none
  41acd8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41acdc:	add	x0, x0, #0xbc8
  41ace0:	b	41ace8 <rename_netif+0x5cc>
  41ace4:	mov	x0, #0x0                   	// #0
  41ace8:	ldr	x4, [sp, #152]
  41acec:	ldr	w1, [sp, #88]
  41acf0:	ldr	x2, [sp, #144]
  41acf4:	ldr	x3, [sp, #72]
  41acf8:	ldr	x3, [x3, #24]
  41acfc:	str	x3, [sp, #32]
  41ad00:	str	x2, [sp, #24]
  41ad04:	str	w1, [sp, #16]
  41ad08:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ad0c:	add	x1, x1, #0x168
  41ad10:	str	x1, [sp, #8]
  41ad14:	str	xzr, [sp]
  41ad18:	mov	x7, #0x0                   	// #0
  41ad1c:	mov	x6, x4
  41ad20:	mov	x5, x0
  41ad24:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ad28:	add	x4, x0, #0x710
  41ad2c:	mov	w3, #0x338                 	// #824
  41ad30:	mov	x2, x8
  41ad34:	ldr	w1, [sp, #100]
  41ad38:	ldr	w0, [sp, #96]
  41ad3c:	bl	40b020 <log_object_internal@plt>
  41ad40:	mov	w0, #0x1                   	// #1
  41ad44:	mov	w1, w0
  41ad48:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41ad4c:	ldr	x0, [x0, #4032]
  41ad50:	ldr	x2, [sp, #216]
  41ad54:	ldr	x0, [x0]
  41ad58:	eor	x0, x2, x0
  41ad5c:	cmp	x0, #0x0
  41ad60:	b.eq	41ad68 <rename_netif+0x64c>  // b.none
  41ad64:	bl	40b280 <__stack_chk_fail@plt>
  41ad68:	mov	w0, w1
  41ad6c:	ldp	x29, x30, [sp, #48]
  41ad70:	add	sp, sp, #0xe0
  41ad74:	ret

000000000041ad78 <update_devnode>:
  41ad78:	sub	sp, sp, #0x90
  41ad7c:	stp	x29, x30, [sp, #16]
  41ad80:	add	x29, sp, #0x10
  41ad84:	str	x0, [sp, #40]
  41ad88:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41ad8c:	ldr	x0, [x0, #4032]
  41ad90:	ldr	x1, [x0]
  41ad94:	str	x1, [sp, #136]
  41ad98:	mov	x1, #0x0                   	// #0
  41ad9c:	ldr	x0, [sp, #40]
  41ada0:	ldr	x0, [x0]
  41ada4:	str	x0, [sp, #96]
  41ada8:	mov	x1, #0x0                   	// #0
  41adac:	ldr	x0, [sp, #96]
  41adb0:	bl	40b3d0 <sd_device_get_devnum@plt>
  41adb4:	str	w0, [sp, #52]
  41adb8:	ldr	w0, [sp, #52]
  41adbc:	cmn	w0, #0x2
  41adc0:	b.ne	41adcc <update_devnode+0x54>  // b.any
  41adc4:	mov	w0, #0x0                   	// #0
  41adc8:	b	41b26c <update_devnode+0x4f4>
  41adcc:	ldr	w0, [sp, #52]
  41add0:	cmp	w0, #0x0
  41add4:	b.ge	41ae98 <update_devnode+0x120>  // b.tcont
  41add8:	str	xzr, [sp, #88]
  41addc:	ldr	x0, [sp, #96]
  41ade0:	str	x0, [sp, #128]
  41ade4:	mov	w0, #0x3                   	// #3
  41ade8:	str	w0, [sp, #80]
  41adec:	ldr	w0, [sp, #52]
  41adf0:	str	w0, [sp, #84]
  41adf4:	ldr	x0, [sp, #128]
  41adf8:	cmp	x0, #0x0
  41adfc:	b.eq	41ae38 <update_devnode+0xc0>  // b.none
  41ae00:	mov	w0, #0x1                   	// #1
  41ae04:	bl	40be30 <log_get_max_level_realm@plt>
  41ae08:	mov	w1, w0
  41ae0c:	ldr	w0, [sp, #80]
  41ae10:	cmp	w0, w1
  41ae14:	cset	w0, le
  41ae18:	and	w0, w0, #0xff
  41ae1c:	and	x0, x0, #0xff
  41ae20:	cmp	x0, #0x0
  41ae24:	b.eq	41ae38 <update_devnode+0xc0>  // b.none
  41ae28:	add	x0, sp, #0x58
  41ae2c:	mov	x1, x0
  41ae30:	ldr	x0, [sp, #128]
  41ae34:	bl	40aba0 <sd_device_get_sysname@plt>
  41ae38:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41ae3c:	add	x2, x0, #0xabb
  41ae40:	ldr	x0, [sp, #88]
  41ae44:	cmp	x0, #0x0
  41ae48:	b.eq	41ae58 <update_devnode+0xe0>  // b.none
  41ae4c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41ae50:	add	x0, x0, #0xbc8
  41ae54:	b	41ae5c <update_devnode+0xe4>
  41ae58:	mov	x0, #0x0                   	// #0
  41ae5c:	ldr	x3, [sp, #88]
  41ae60:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ae64:	add	x1, x1, #0x1a0
  41ae68:	str	x1, [sp, #8]
  41ae6c:	str	xzr, [sp]
  41ae70:	mov	x7, #0x0                   	// #0
  41ae74:	mov	x6, x3
  41ae78:	mov	x5, x0
  41ae7c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ae80:	add	x4, x0, #0x720
  41ae84:	mov	w3, #0x345                 	// #837
  41ae88:	ldr	w1, [sp, #84]
  41ae8c:	ldr	w0, [sp, #80]
  41ae90:	bl	40b020 <log_object_internal@plt>
  41ae94:	b	41b26c <update_devnode+0x4f4>
  41ae98:	ldr	x0, [sp, #40]
  41ae9c:	ldr	x0, [x0, #16]
  41aea0:	cmp	x0, #0x0
  41aea4:	b.eq	41aebc <update_devnode+0x144>  // b.none
  41aea8:	ldr	x0, [sp, #40]
  41aeac:	ldr	x0, [x0, #16]
  41aeb0:	mov	x1, x0
  41aeb4:	ldr	x0, [sp, #96]
  41aeb8:	bl	41df28 <udev_node_update_old_links>
  41aebc:	ldr	x0, [sp, #40]
  41aec0:	ldr	w0, [x0, #44]
  41aec4:	bl	40aea0 <uid_is_valid@plt>
  41aec8:	and	w0, w0, #0xff
  41aecc:	eor	w0, w0, #0x1
  41aed0:	and	w0, w0, #0xff
  41aed4:	cmp	w0, #0x0
  41aed8:	b.eq	41afcc <update_devnode+0x254>  // b.none
  41aedc:	ldr	x0, [sp, #40]
  41aee0:	add	x0, x0, #0x2c
  41aee4:	mov	x1, x0
  41aee8:	ldr	x0, [sp, #96]
  41aeec:	bl	40ad40 <device_get_devnode_uid@plt>
  41aef0:	str	w0, [sp, #52]
  41aef4:	ldr	w0, [sp, #52]
  41aef8:	cmp	w0, #0x0
  41aefc:	b.ge	41afcc <update_devnode+0x254>  // b.tcont
  41af00:	ldr	w0, [sp, #52]
  41af04:	cmn	w0, #0x2
  41af08:	b.eq	41afcc <update_devnode+0x254>  // b.none
  41af0c:	str	xzr, [sp, #88]
  41af10:	ldr	x0, [sp, #96]
  41af14:	str	x0, [sp, #104]
  41af18:	mov	w0, #0x3                   	// #3
  41af1c:	str	w0, [sp, #56]
  41af20:	ldr	w0, [sp, #52]
  41af24:	str	w0, [sp, #60]
  41af28:	ldr	x0, [sp, #104]
  41af2c:	cmp	x0, #0x0
  41af30:	b.eq	41af6c <update_devnode+0x1f4>  // b.none
  41af34:	mov	w0, #0x1                   	// #1
  41af38:	bl	40be30 <log_get_max_level_realm@plt>
  41af3c:	mov	w1, w0
  41af40:	ldr	w0, [sp, #56]
  41af44:	cmp	w0, w1
  41af48:	cset	w0, le
  41af4c:	and	w0, w0, #0xff
  41af50:	and	x0, x0, #0xff
  41af54:	cmp	x0, #0x0
  41af58:	b.eq	41af6c <update_devnode+0x1f4>  // b.none
  41af5c:	add	x0, sp, #0x58
  41af60:	mov	x1, x0
  41af64:	ldr	x0, [sp, #104]
  41af68:	bl	40aba0 <sd_device_get_sysname@plt>
  41af6c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41af70:	add	x2, x0, #0xabb
  41af74:	ldr	x0, [sp, #88]
  41af78:	cmp	x0, #0x0
  41af7c:	b.eq	41af8c <update_devnode+0x214>  // b.none
  41af80:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41af84:	add	x0, x0, #0xbc8
  41af88:	b	41af90 <update_devnode+0x218>
  41af8c:	mov	x0, #0x0                   	// #0
  41af90:	ldr	x3, [sp, #88]
  41af94:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41af98:	add	x1, x1, #0x1c0
  41af9c:	str	x1, [sp, #8]
  41afa0:	str	xzr, [sp]
  41afa4:	mov	x7, #0x0                   	// #0
  41afa8:	mov	x6, x3
  41afac:	mov	x5, x0
  41afb0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41afb4:	add	x4, x0, #0x720
  41afb8:	mov	w3, #0x34e                 	// #846
  41afbc:	ldr	w1, [sp, #60]
  41afc0:	ldr	w0, [sp, #56]
  41afc4:	bl	40b020 <log_object_internal@plt>
  41afc8:	b	41b26c <update_devnode+0x4f4>
  41afcc:	ldr	x0, [sp, #40]
  41afd0:	ldr	w0, [x0, #48]
  41afd4:	bl	41724c <gid_is_valid>
  41afd8:	and	w0, w0, #0xff
  41afdc:	eor	w0, w0, #0x1
  41afe0:	and	w0, w0, #0xff
  41afe4:	cmp	w0, #0x0
  41afe8:	b.eq	41b0dc <update_devnode+0x364>  // b.none
  41afec:	ldr	x0, [sp, #40]
  41aff0:	add	x0, x0, #0x30
  41aff4:	mov	x1, x0
  41aff8:	ldr	x0, [sp, #96]
  41affc:	bl	40b0d0 <device_get_devnode_gid@plt>
  41b000:	str	w0, [sp, #52]
  41b004:	ldr	w0, [sp, #52]
  41b008:	cmp	w0, #0x0
  41b00c:	b.ge	41b0dc <update_devnode+0x364>  // b.tcont
  41b010:	ldr	w0, [sp, #52]
  41b014:	cmn	w0, #0x2
  41b018:	b.eq	41b0dc <update_devnode+0x364>  // b.none
  41b01c:	str	xzr, [sp, #88]
  41b020:	ldr	x0, [sp, #96]
  41b024:	str	x0, [sp, #112]
  41b028:	mov	w0, #0x3                   	// #3
  41b02c:	str	w0, [sp, #64]
  41b030:	ldr	w0, [sp, #52]
  41b034:	str	w0, [sp, #68]
  41b038:	ldr	x0, [sp, #112]
  41b03c:	cmp	x0, #0x0
  41b040:	b.eq	41b07c <update_devnode+0x304>  // b.none
  41b044:	mov	w0, #0x1                   	// #1
  41b048:	bl	40be30 <log_get_max_level_realm@plt>
  41b04c:	mov	w1, w0
  41b050:	ldr	w0, [sp, #64]
  41b054:	cmp	w0, w1
  41b058:	cset	w0, le
  41b05c:	and	w0, w0, #0xff
  41b060:	and	x0, x0, #0xff
  41b064:	cmp	x0, #0x0
  41b068:	b.eq	41b07c <update_devnode+0x304>  // b.none
  41b06c:	add	x0, sp, #0x58
  41b070:	mov	x1, x0
  41b074:	ldr	x0, [sp, #112]
  41b078:	bl	40aba0 <sd_device_get_sysname@plt>
  41b07c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b080:	add	x2, x0, #0xabb
  41b084:	ldr	x0, [sp, #88]
  41b088:	cmp	x0, #0x0
  41b08c:	b.eq	41b09c <update_devnode+0x324>  // b.none
  41b090:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b094:	add	x0, x0, #0xbc8
  41b098:	b	41b0a0 <update_devnode+0x328>
  41b09c:	mov	x0, #0x0                   	// #0
  41b0a0:	ldr	x3, [sp, #88]
  41b0a4:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b0a8:	add	x1, x1, #0x1e0
  41b0ac:	str	x1, [sp, #8]
  41b0b0:	str	xzr, [sp]
  41b0b4:	mov	x7, #0x0                   	// #0
  41b0b8:	mov	x6, x3
  41b0bc:	mov	x5, x0
  41b0c0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b0c4:	add	x4, x0, #0x720
  41b0c8:	mov	w3, #0x354                 	// #852
  41b0cc:	ldr	w1, [sp, #68]
  41b0d0:	ldr	w0, [sp, #64]
  41b0d4:	bl	40b020 <log_object_internal@plt>
  41b0d8:	b	41b26c <update_devnode+0x4f4>
  41b0dc:	ldr	x0, [sp, #40]
  41b0e0:	ldr	w0, [x0, #40]
  41b0e4:	cmn	w0, #0x1
  41b0e8:	b.ne	41b1dc <update_devnode+0x464>  // b.any
  41b0ec:	ldr	x0, [sp, #40]
  41b0f0:	add	x0, x0, #0x28
  41b0f4:	mov	x1, x0
  41b0f8:	ldr	x0, [sp, #96]
  41b0fc:	bl	40ad90 <device_get_devnode_mode@plt>
  41b100:	str	w0, [sp, #52]
  41b104:	ldr	w0, [sp, #52]
  41b108:	cmp	w0, #0x0
  41b10c:	b.ge	41b1dc <update_devnode+0x464>  // b.tcont
  41b110:	ldr	w0, [sp, #52]
  41b114:	cmn	w0, #0x2
  41b118:	b.eq	41b1dc <update_devnode+0x464>  // b.none
  41b11c:	str	xzr, [sp, #88]
  41b120:	ldr	x0, [sp, #96]
  41b124:	str	x0, [sp, #120]
  41b128:	mov	w0, #0x3                   	// #3
  41b12c:	str	w0, [sp, #72]
  41b130:	ldr	w0, [sp, #52]
  41b134:	str	w0, [sp, #76]
  41b138:	ldr	x0, [sp, #120]
  41b13c:	cmp	x0, #0x0
  41b140:	b.eq	41b17c <update_devnode+0x404>  // b.none
  41b144:	mov	w0, #0x1                   	// #1
  41b148:	bl	40be30 <log_get_max_level_realm@plt>
  41b14c:	mov	w1, w0
  41b150:	ldr	w0, [sp, #72]
  41b154:	cmp	w0, w1
  41b158:	cset	w0, le
  41b15c:	and	w0, w0, #0xff
  41b160:	and	x0, x0, #0xff
  41b164:	cmp	x0, #0x0
  41b168:	b.eq	41b17c <update_devnode+0x404>  // b.none
  41b16c:	add	x0, sp, #0x58
  41b170:	mov	x1, x0
  41b174:	ldr	x0, [sp, #120]
  41b178:	bl	40aba0 <sd_device_get_sysname@plt>
  41b17c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b180:	add	x2, x0, #0xabb
  41b184:	ldr	x0, [sp, #88]
  41b188:	cmp	x0, #0x0
  41b18c:	b.eq	41b19c <update_devnode+0x424>  // b.none
  41b190:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b194:	add	x0, x0, #0xbc8
  41b198:	b	41b1a0 <update_devnode+0x428>
  41b19c:	mov	x0, #0x0                   	// #0
  41b1a0:	ldr	x3, [sp, #88]
  41b1a4:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b1a8:	add	x1, x1, #0x200
  41b1ac:	str	x1, [sp, #8]
  41b1b0:	str	xzr, [sp]
  41b1b4:	mov	x7, #0x0                   	// #0
  41b1b8:	mov	x6, x3
  41b1bc:	mov	x5, x0
  41b1c0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b1c4:	add	x4, x0, #0x720
  41b1c8:	mov	w3, #0x35a                 	// #858
  41b1cc:	ldr	w1, [sp, #76]
  41b1d0:	ldr	w0, [sp, #72]
  41b1d4:	bl	40b020 <log_object_internal@plt>
  41b1d8:	b	41b26c <update_devnode+0x4f4>
  41b1dc:	ldr	x0, [sp, #40]
  41b1e0:	ldr	w0, [x0, #40]
  41b1e4:	cmn	w0, #0x1
  41b1e8:	b.ne	41b220 <update_devnode+0x4a8>  // b.any
  41b1ec:	ldr	x0, [sp, #40]
  41b1f0:	ldr	w0, [x0, #48]
  41b1f4:	bl	41724c <gid_is_valid>
  41b1f8:	and	w0, w0, #0xff
  41b1fc:	cmp	w0, #0x0
  41b200:	b.eq	41b220 <update_devnode+0x4a8>  // b.none
  41b204:	ldr	x0, [sp, #40]
  41b208:	ldr	w0, [x0, #48]
  41b20c:	cmp	w0, #0x0
  41b210:	b.eq	41b220 <update_devnode+0x4a8>  // b.none
  41b214:	ldr	x0, [sp, #40]
  41b218:	mov	w1, #0x1b0                 	// #432
  41b21c:	str	w1, [x0, #40]
  41b220:	mov	w1, #0x0                   	// #0
  41b224:	ldr	x0, [sp, #96]
  41b228:	bl	40a860 <device_for_action@plt>
  41b22c:	strb	w0, [sp, #51]
  41b230:	ldr	x0, [sp, #40]
  41b234:	ldr	w1, [x0, #40]
  41b238:	ldr	x0, [sp, #40]
  41b23c:	ldr	w2, [x0, #44]
  41b240:	ldr	x0, [sp, #40]
  41b244:	ldr	w3, [x0, #48]
  41b248:	ldr	x0, [sp, #40]
  41b24c:	ldr	x0, [x0, #56]
  41b250:	mov	x5, x0
  41b254:	mov	w4, w3
  41b258:	mov	w3, w2
  41b25c:	mov	w2, w1
  41b260:	ldrb	w1, [sp, #51]
  41b264:	ldr	x0, [sp, #96]
  41b268:	bl	41f3ec <udev_node_add>
  41b26c:	mov	w1, w0
  41b270:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41b274:	ldr	x0, [x0, #4032]
  41b278:	ldr	x2, [sp, #136]
  41b27c:	ldr	x0, [x0]
  41b280:	eor	x0, x2, x0
  41b284:	cmp	x0, #0x0
  41b288:	b.eq	41b290 <update_devnode+0x518>  // b.none
  41b28c:	bl	40b280 <__stack_chk_fail@plt>
  41b290:	mov	w0, w1
  41b294:	ldp	x29, x30, [sp, #16]
  41b298:	add	sp, sp, #0x90
  41b29c:	ret

000000000041b2a0 <event_execute_rules_on_remove>:
  41b2a0:	sub	sp, sp, #0x90
  41b2a4:	stp	x29, x30, [sp, #16]
  41b2a8:	add	x29, sp, #0x10
  41b2ac:	str	x0, [sp, #56]
  41b2b0:	str	x1, [sp, #48]
  41b2b4:	str	x2, [sp, #40]
  41b2b8:	str	x3, [sp, #32]
  41b2bc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41b2c0:	ldr	x0, [x0, #4032]
  41b2c4:	ldr	x1, [x0]
  41b2c8:	str	x1, [sp, #136]
  41b2cc:	mov	x1, #0x0                   	// #0
  41b2d0:	ldr	x0, [sp, #56]
  41b2d4:	ldr	x0, [x0]
  41b2d8:	str	x0, [sp, #104]
  41b2dc:	mov	w1, #0x1                   	// #1
  41b2e0:	ldr	x0, [sp, #104]
  41b2e4:	bl	40b5a0 <device_read_db_internal@plt>
  41b2e8:	str	w0, [sp, #68]
  41b2ec:	ldr	w0, [sp, #68]
  41b2f0:	cmp	w0, #0x0
  41b2f4:	b.ge	41b3b4 <event_execute_rules_on_remove+0x114>  // b.tcont
  41b2f8:	str	xzr, [sp, #96]
  41b2fc:	ldr	x0, [sp, #104]
  41b300:	str	x0, [sp, #112]
  41b304:	mov	w0, #0x7                   	// #7
  41b308:	str	w0, [sp, #72]
  41b30c:	ldr	w0, [sp, #68]
  41b310:	str	w0, [sp, #76]
  41b314:	ldr	x0, [sp, #112]
  41b318:	cmp	x0, #0x0
  41b31c:	b.eq	41b358 <event_execute_rules_on_remove+0xb8>  // b.none
  41b320:	mov	w0, #0x1                   	// #1
  41b324:	bl	40be30 <log_get_max_level_realm@plt>
  41b328:	mov	w1, w0
  41b32c:	ldr	w0, [sp, #72]
  41b330:	cmp	w0, w1
  41b334:	cset	w0, le
  41b338:	and	w0, w0, #0xff
  41b33c:	and	x0, x0, #0xff
  41b340:	cmp	x0, #0x0
  41b344:	b.eq	41b358 <event_execute_rules_on_remove+0xb8>  // b.none
  41b348:	add	x0, sp, #0x60
  41b34c:	mov	x1, x0
  41b350:	ldr	x0, [sp, #112]
  41b354:	bl	40aba0 <sd_device_get_sysname@plt>
  41b358:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b35c:	add	x2, x0, #0xabb
  41b360:	ldr	x0, [sp, #96]
  41b364:	cmp	x0, #0x0
  41b368:	b.eq	41b378 <event_execute_rules_on_remove+0xd8>  // b.none
  41b36c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b370:	add	x0, x0, #0xbc8
  41b374:	b	41b37c <event_execute_rules_on_remove+0xdc>
  41b378:	mov	x0, #0x0                   	// #0
  41b37c:	ldr	x3, [sp, #96]
  41b380:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b384:	add	x1, x1, #0x220
  41b388:	str	x1, [sp, #8]
  41b38c:	str	xzr, [sp]
  41b390:	mov	x7, #0x0                   	// #0
  41b394:	mov	x6, x3
  41b398:	mov	x5, x0
  41b39c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b3a0:	add	x4, x0, #0x730
  41b3a4:	mov	w3, #0x370                 	// #880
  41b3a8:	ldr	w1, [sp, #76]
  41b3ac:	ldr	w0, [sp, #72]
  41b3b0:	bl	40b020 <log_object_internal@plt>
  41b3b4:	mov	w2, #0x0                   	// #0
  41b3b8:	mov	x1, #0x0                   	// #0
  41b3bc:	ldr	x0, [sp, #104]
  41b3c0:	bl	40ab20 <device_tag_index@plt>
  41b3c4:	str	w0, [sp, #68]
  41b3c8:	ldr	w0, [sp, #68]
  41b3cc:	cmp	w0, #0x0
  41b3d0:	b.ge	41b490 <event_execute_rules_on_remove+0x1f0>  // b.tcont
  41b3d4:	str	xzr, [sp, #96]
  41b3d8:	ldr	x0, [sp, #104]
  41b3dc:	str	x0, [sp, #120]
  41b3e0:	mov	w0, #0x7                   	// #7
  41b3e4:	str	w0, [sp, #80]
  41b3e8:	ldr	w0, [sp, #68]
  41b3ec:	str	w0, [sp, #84]
  41b3f0:	ldr	x0, [sp, #120]
  41b3f4:	cmp	x0, #0x0
  41b3f8:	b.eq	41b434 <event_execute_rules_on_remove+0x194>  // b.none
  41b3fc:	mov	w0, #0x1                   	// #1
  41b400:	bl	40be30 <log_get_max_level_realm@plt>
  41b404:	mov	w1, w0
  41b408:	ldr	w0, [sp, #80]
  41b40c:	cmp	w0, w1
  41b410:	cset	w0, le
  41b414:	and	w0, w0, #0xff
  41b418:	and	x0, x0, #0xff
  41b41c:	cmp	x0, #0x0
  41b420:	b.eq	41b434 <event_execute_rules_on_remove+0x194>  // b.none
  41b424:	add	x0, sp, #0x60
  41b428:	mov	x1, x0
  41b42c:	ldr	x0, [sp, #120]
  41b430:	bl	40aba0 <sd_device_get_sysname@plt>
  41b434:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b438:	add	x2, x0, #0xabb
  41b43c:	ldr	x0, [sp, #96]
  41b440:	cmp	x0, #0x0
  41b444:	b.eq	41b454 <event_execute_rules_on_remove+0x1b4>  // b.none
  41b448:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b44c:	add	x0, x0, #0xbc8
  41b450:	b	41b458 <event_execute_rules_on_remove+0x1b8>
  41b454:	mov	x0, #0x0                   	// #0
  41b458:	ldr	x3, [sp, #96]
  41b45c:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b460:	add	x1, x1, #0x258
  41b464:	str	x1, [sp, #8]
  41b468:	str	xzr, [sp]
  41b46c:	mov	x7, #0x0                   	// #0
  41b470:	mov	x6, x3
  41b474:	mov	x5, x0
  41b478:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b47c:	add	x4, x0, #0x730
  41b480:	mov	w3, #0x374                 	// #884
  41b484:	ldr	w1, [sp, #84]
  41b488:	ldr	w0, [sp, #80]
  41b48c:	bl	40b020 <log_object_internal@plt>
  41b490:	ldr	x0, [sp, #104]
  41b494:	bl	40b240 <device_delete_db@plt>
  41b498:	str	w0, [sp, #68]
  41b49c:	ldr	w0, [sp, #68]
  41b4a0:	cmp	w0, #0x0
  41b4a4:	b.ge	41b564 <event_execute_rules_on_remove+0x2c4>  // b.tcont
  41b4a8:	str	xzr, [sp, #96]
  41b4ac:	ldr	x0, [sp, #104]
  41b4b0:	str	x0, [sp, #128]
  41b4b4:	mov	w0, #0x7                   	// #7
  41b4b8:	str	w0, [sp, #88]
  41b4bc:	ldr	w0, [sp, #68]
  41b4c0:	str	w0, [sp, #92]
  41b4c4:	ldr	x0, [sp, #128]
  41b4c8:	cmp	x0, #0x0
  41b4cc:	b.eq	41b508 <event_execute_rules_on_remove+0x268>  // b.none
  41b4d0:	mov	w0, #0x1                   	// #1
  41b4d4:	bl	40be30 <log_get_max_level_realm@plt>
  41b4d8:	mov	w1, w0
  41b4dc:	ldr	w0, [sp, #88]
  41b4e0:	cmp	w0, w1
  41b4e4:	cset	w0, le
  41b4e8:	and	w0, w0, #0xff
  41b4ec:	and	x0, x0, #0xff
  41b4f0:	cmp	x0, #0x0
  41b4f4:	b.eq	41b508 <event_execute_rules_on_remove+0x268>  // b.none
  41b4f8:	add	x0, sp, #0x60
  41b4fc:	mov	x1, x0
  41b500:	ldr	x0, [sp, #128]
  41b504:	bl	40aba0 <sd_device_get_sysname@plt>
  41b508:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b50c:	add	x2, x0, #0xabb
  41b510:	ldr	x0, [sp, #96]
  41b514:	cmp	x0, #0x0
  41b518:	b.eq	41b528 <event_execute_rules_on_remove+0x288>  // b.none
  41b51c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b520:	add	x0, x0, #0xbc8
  41b524:	b	41b52c <event_execute_rules_on_remove+0x28c>
  41b528:	mov	x0, #0x0                   	// #0
  41b52c:	ldr	x3, [sp, #96]
  41b530:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b534:	add	x1, x1, #0x2a8
  41b538:	str	x1, [sp, #8]
  41b53c:	str	xzr, [sp]
  41b540:	mov	x7, #0x0                   	// #0
  41b544:	mov	x6, x3
  41b548:	mov	x5, x0
  41b54c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b550:	add	x4, x0, #0x730
  41b554:	mov	w3, #0x378                 	// #888
  41b558:	ldr	w1, [sp, #92]
  41b55c:	ldr	w0, [sp, #88]
  41b560:	bl	40b020 <log_object_internal@plt>
  41b564:	mov	x1, #0x0                   	// #0
  41b568:	ldr	x0, [sp, #104]
  41b56c:	bl	40b3d0 <sd_device_get_devnum@plt>
  41b570:	cmp	w0, #0x0
  41b574:	b.lt	41b580 <event_execute_rules_on_remove+0x2e0>  // b.tstop
  41b578:	ldr	x0, [sp, #104]
  41b57c:	bl	435788 <udev_watch_end>
  41b580:	ldr	x3, [sp, #40]
  41b584:	ldr	x2, [sp, #48]
  41b588:	ldr	x1, [sp, #56]
  41b58c:	ldr	x0, [sp, #32]
  41b590:	bl	433f24 <udev_rules_apply_to_event>
  41b594:	mov	x1, #0x0                   	// #0
  41b598:	ldr	x0, [sp, #104]
  41b59c:	bl	40b3d0 <sd_device_get_devnum@plt>
  41b5a0:	cmp	w0, #0x0
  41b5a4:	b.lt	41b5b0 <event_execute_rules_on_remove+0x310>  // b.tstop
  41b5a8:	ldr	x0, [sp, #104]
  41b5ac:	bl	41f80c <udev_node_remove>
  41b5b0:	nop
  41b5b4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41b5b8:	ldr	x0, [x0, #4032]
  41b5bc:	ldr	x1, [sp, #136]
  41b5c0:	ldr	x0, [x0]
  41b5c4:	eor	x0, x1, x0
  41b5c8:	cmp	x0, #0x0
  41b5cc:	b.eq	41b5d4 <event_execute_rules_on_remove+0x334>  // b.none
  41b5d0:	bl	40b280 <__stack_chk_fail@plt>
  41b5d4:	ldp	x29, x30, [sp, #16]
  41b5d8:	add	sp, sp, #0x90
  41b5dc:	ret

000000000041b5e0 <udev_event_on_move>:
  41b5e0:	sub	sp, sp, #0x70
  41b5e4:	stp	x29, x30, [sp, #16]
  41b5e8:	add	x29, sp, #0x10
  41b5ec:	str	x0, [sp, #40]
  41b5f0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41b5f4:	ldr	x0, [x0, #4032]
  41b5f8:	ldr	x1, [x0]
  41b5fc:	str	x1, [sp, #104]
  41b600:	mov	x1, #0x0                   	// #0
  41b604:	ldr	x0, [sp, #40]
  41b608:	ldr	x0, [x0]
  41b60c:	str	x0, [sp, #80]
  41b610:	ldr	x0, [sp, #40]
  41b614:	ldr	x0, [x0, #16]
  41b618:	cmp	x0, #0x0
  41b61c:	b.eq	41b714 <udev_event_on_move+0x134>  // b.none
  41b620:	mov	x1, #0x0                   	// #0
  41b624:	ldr	x0, [sp, #80]
  41b628:	bl	40b3d0 <sd_device_get_devnum@plt>
  41b62c:	cmp	w0, #0x0
  41b630:	b.ge	41b714 <udev_event_on_move+0x134>  // b.tcont
  41b634:	ldr	x0, [sp, #40]
  41b638:	ldr	x0, [x0, #16]
  41b63c:	mov	x1, x0
  41b640:	ldr	x0, [sp, #80]
  41b644:	bl	40b9f0 <device_copy_properties@plt>
  41b648:	str	w0, [sp, #52]
  41b64c:	ldr	w0, [sp, #52]
  41b650:	cmp	w0, #0x0
  41b654:	b.ge	41b714 <udev_event_on_move+0x134>  // b.tcont
  41b658:	str	xzr, [sp, #72]
  41b65c:	ldr	x0, [sp, #80]
  41b660:	str	x0, [sp, #88]
  41b664:	mov	w0, #0x7                   	// #7
  41b668:	str	w0, [sp, #56]
  41b66c:	ldr	w0, [sp, #52]
  41b670:	str	w0, [sp, #60]
  41b674:	ldr	x0, [sp, #88]
  41b678:	cmp	x0, #0x0
  41b67c:	b.eq	41b6b8 <udev_event_on_move+0xd8>  // b.none
  41b680:	mov	w0, #0x1                   	// #1
  41b684:	bl	40be30 <log_get_max_level_realm@plt>
  41b688:	mov	w1, w0
  41b68c:	ldr	w0, [sp, #56]
  41b690:	cmp	w0, w1
  41b694:	cset	w0, le
  41b698:	and	w0, w0, #0xff
  41b69c:	and	x0, x0, #0xff
  41b6a0:	cmp	x0, #0x0
  41b6a4:	b.eq	41b6b8 <udev_event_on_move+0xd8>  // b.none
  41b6a8:	add	x0, sp, #0x48
  41b6ac:	mov	x1, x0
  41b6b0:	ldr	x0, [sp, #88]
  41b6b4:	bl	40aba0 <sd_device_get_sysname@plt>
  41b6b8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b6bc:	add	x2, x0, #0xabb
  41b6c0:	ldr	x0, [sp, #72]
  41b6c4:	cmp	x0, #0x0
  41b6c8:	b.eq	41b6d8 <udev_event_on_move+0xf8>  // b.none
  41b6cc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b6d0:	add	x0, x0, #0xbc8
  41b6d4:	b	41b6dc <udev_event_on_move+0xfc>
  41b6d8:	mov	x0, #0x0                   	// #0
  41b6dc:	ldr	x3, [sp, #72]
  41b6e0:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b6e4:	add	x1, x1, #0x2e8
  41b6e8:	str	x1, [sp, #8]
  41b6ec:	str	xzr, [sp]
  41b6f0:	mov	x7, #0x0                   	// #0
  41b6f4:	mov	x6, x3
  41b6f8:	mov	x5, x0
  41b6fc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b700:	add	x4, x0, #0x750
  41b704:	mov	w3, #0x38b                 	// #907
  41b708:	ldr	w1, [sp, #60]
  41b70c:	ldr	w0, [sp, #56]
  41b710:	bl	40b020 <log_object_internal@plt>
  41b714:	mov	x2, #0x0                   	// #0
  41b718:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b71c:	add	x1, x0, #0xf0
  41b720:	ldr	x0, [sp, #80]
  41b724:	bl	40bab0 <device_add_property@plt>
  41b728:	str	w0, [sp, #52]
  41b72c:	ldr	w0, [sp, #52]
  41b730:	cmp	w0, #0x0
  41b734:	b.ge	41b7f8 <udev_event_on_move+0x218>  // b.tcont
  41b738:	str	xzr, [sp, #72]
  41b73c:	ldr	x0, [sp, #80]
  41b740:	str	x0, [sp, #96]
  41b744:	mov	w0, #0x7                   	// #7
  41b748:	str	w0, [sp, #64]
  41b74c:	ldr	w0, [sp, #52]
  41b750:	str	w0, [sp, #68]
  41b754:	ldr	x0, [sp, #96]
  41b758:	cmp	x0, #0x0
  41b75c:	b.eq	41b798 <udev_event_on_move+0x1b8>  // b.none
  41b760:	mov	w0, #0x1                   	// #1
  41b764:	bl	40be30 <log_get_max_level_realm@plt>
  41b768:	mov	w1, w0
  41b76c:	ldr	w0, [sp, #64]
  41b770:	cmp	w0, w1
  41b774:	cset	w0, le
  41b778:	and	w0, w0, #0xff
  41b77c:	and	x0, x0, #0xff
  41b780:	cmp	x0, #0x0
  41b784:	b.eq	41b798 <udev_event_on_move+0x1b8>  // b.none
  41b788:	add	x0, sp, #0x48
  41b78c:	mov	x1, x0
  41b790:	ldr	x0, [sp, #96]
  41b794:	bl	40aba0 <sd_device_get_sysname@plt>
  41b798:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b79c:	add	x2, x0, #0xabb
  41b7a0:	ldr	x0, [sp, #72]
  41b7a4:	cmp	x0, #0x0
  41b7a8:	b.eq	41b7b8 <udev_event_on_move+0x1d8>  // b.none
  41b7ac:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b7b0:	add	x0, x0, #0xbc8
  41b7b4:	b	41b7bc <udev_event_on_move+0x1dc>
  41b7b8:	mov	x0, #0x0                   	// #0
  41b7bc:	ldr	x3, [sp, #72]
  41b7c0:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b7c4:	add	x1, x1, #0x330
  41b7c8:	str	x1, [sp, #8]
  41b7cc:	str	xzr, [sp]
  41b7d0:	mov	x7, #0x0                   	// #0
  41b7d4:	mov	x6, x3
  41b7d8:	mov	x5, x0
  41b7dc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b7e0:	add	x4, x0, #0x750
  41b7e4:	mov	w3, #0x391                 	// #913
  41b7e8:	ldr	w1, [sp, #68]
  41b7ec:	ldr	w0, [sp, #64]
  41b7f0:	bl	40b020 <log_object_internal@plt>
  41b7f4:	b	41b7fc <udev_event_on_move+0x21c>
  41b7f8:	mov	w0, #0x0                   	// #0
  41b7fc:	mov	w1, w0
  41b800:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41b804:	ldr	x0, [x0, #4032]
  41b808:	ldr	x2, [sp, #104]
  41b80c:	ldr	x0, [x0]
  41b810:	eor	x0, x2, x0
  41b814:	cmp	x0, #0x0
  41b818:	b.eq	41b820 <udev_event_on_move+0x240>  // b.none
  41b81c:	bl	40b280 <__stack_chk_fail@plt>
  41b820:	mov	w0, w1
  41b824:	ldp	x29, x30, [sp, #16]
  41b828:	add	sp, sp, #0x70
  41b82c:	ret

000000000041b830 <udev_event_execute_rules>:
  41b830:	sub	sp, sp, #0xe0
  41b834:	stp	x29, x30, [sp, #16]
  41b838:	add	x29, sp, #0x10
  41b83c:	str	x0, [sp, #56]
  41b840:	str	x1, [sp, #48]
  41b844:	str	x2, [sp, #40]
  41b848:	str	x3, [sp, #32]
  41b84c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41b850:	ldr	x0, [x0, #4032]
  41b854:	ldr	x1, [x0]
  41b858:	str	x1, [sp, #216]
  41b85c:	mov	x1, #0x0                   	// #0
  41b860:	ldr	x0, [sp, #56]
  41b864:	cmp	x0, #0x0
  41b868:	cset	w0, eq  // eq = none
  41b86c:	and	w0, w0, #0xff
  41b870:	and	x0, x0, #0xff
  41b874:	cmp	x0, #0x0
  41b878:	b.eq	41b8a4 <udev_event_execute_rules+0x74>  // b.none
  41b87c:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b880:	add	x1, x0, #0xabb
  41b884:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b888:	add	x4, x0, #0x768
  41b88c:	mov	w3, #0x39f                 	// #927
  41b890:	mov	x2, x1
  41b894:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b898:	add	x1, x0, #0xc68
  41b89c:	mov	w0, #0x1                   	// #1
  41b8a0:	bl	40abb0 <log_assert_failed_realm@plt>
  41b8a4:	ldr	x0, [sp, #32]
  41b8a8:	cmp	x0, #0x0
  41b8ac:	cset	w0, eq  // eq = none
  41b8b0:	and	w0, w0, #0xff
  41b8b4:	and	x0, x0, #0xff
  41b8b8:	cmp	x0, #0x0
  41b8bc:	b.eq	41b8e8 <udev_event_execute_rules+0xb8>  // b.none
  41b8c0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b8c4:	add	x1, x0, #0xabb
  41b8c8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b8cc:	add	x4, x0, #0x768
  41b8d0:	mov	w3, #0x3a0                 	// #928
  41b8d4:	mov	x2, x1
  41b8d8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b8dc:	add	x1, x0, #0x360
  41b8e0:	mov	w0, #0x1                   	// #1
  41b8e4:	bl	40abb0 <log_assert_failed_realm@plt>
  41b8e8:	ldr	x0, [sp, #56]
  41b8ec:	ldr	x0, [x0]
  41b8f0:	str	x0, [sp, #152]
  41b8f4:	add	x0, sp, #0x88
  41b8f8:	mov	x1, x0
  41b8fc:	ldr	x0, [sp, #152]
  41b900:	bl	40af80 <sd_device_get_subsystem@plt>
  41b904:	str	w0, [sp, #76]
  41b908:	ldr	w0, [sp, #76]
  41b90c:	cmp	w0, #0x0
  41b910:	b.ge	41b9d4 <udev_event_execute_rules+0x1a4>  // b.tcont
  41b914:	str	xzr, [sp, #144]
  41b918:	ldr	x0, [sp, #152]
  41b91c:	str	x0, [sp, #208]
  41b920:	mov	w0, #0x3                   	// #3
  41b924:	str	w0, [sp, #128]
  41b928:	ldr	w0, [sp, #76]
  41b92c:	str	w0, [sp, #132]
  41b930:	ldr	x0, [sp, #208]
  41b934:	cmp	x0, #0x0
  41b938:	b.eq	41b974 <udev_event_execute_rules+0x144>  // b.none
  41b93c:	mov	w0, #0x1                   	// #1
  41b940:	bl	40be30 <log_get_max_level_realm@plt>
  41b944:	mov	w1, w0
  41b948:	ldr	w0, [sp, #128]
  41b94c:	cmp	w0, w1
  41b950:	cset	w0, le
  41b954:	and	w0, w0, #0xff
  41b958:	and	x0, x0, #0xff
  41b95c:	cmp	x0, #0x0
  41b960:	b.eq	41b974 <udev_event_execute_rules+0x144>  // b.none
  41b964:	add	x0, sp, #0x90
  41b968:	mov	x1, x0
  41b96c:	ldr	x0, [sp, #208]
  41b970:	bl	40aba0 <sd_device_get_sysname@plt>
  41b974:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b978:	add	x2, x0, #0xabb
  41b97c:	ldr	x0, [sp, #144]
  41b980:	cmp	x0, #0x0
  41b984:	b.eq	41b994 <udev_event_execute_rules+0x164>  // b.none
  41b988:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41b98c:	add	x0, x0, #0xbc8
  41b990:	b	41b998 <udev_event_execute_rules+0x168>
  41b994:	mov	x0, #0x0                   	// #0
  41b998:	ldr	x3, [sp, #144]
  41b99c:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b9a0:	add	x1, x1, #0x368
  41b9a4:	str	x1, [sp, #8]
  41b9a8:	str	xzr, [sp]
  41b9ac:	mov	x7, #0x0                   	// #0
  41b9b0:	mov	x6, x3
  41b9b4:	mov	x5, x0
  41b9b8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41b9bc:	add	x4, x0, #0x788
  41b9c0:	mov	w3, #0x3a6                 	// #934
  41b9c4:	ldr	w1, [sp, #132]
  41b9c8:	ldr	w0, [sp, #128]
  41b9cc:	bl	40b020 <log_object_internal@plt>
  41b9d0:	b	41c008 <udev_event_execute_rules+0x7d8>
  41b9d4:	add	x0, sp, #0x48
  41b9d8:	mov	x1, x0
  41b9dc:	ldr	x0, [sp, #152]
  41b9e0:	bl	40b4b0 <device_get_action@plt>
  41b9e4:	str	w0, [sp, #76]
  41b9e8:	ldr	w0, [sp, #76]
  41b9ec:	cmp	w0, #0x0
  41b9f0:	b.ge	41bab4 <udev_event_execute_rules+0x284>  // b.tcont
  41b9f4:	str	xzr, [sp, #144]
  41b9f8:	ldr	x0, [sp, #152]
  41b9fc:	str	x0, [sp, #200]
  41ba00:	mov	w0, #0x3                   	// #3
  41ba04:	str	w0, [sp, #120]
  41ba08:	ldr	w0, [sp, #76]
  41ba0c:	str	w0, [sp, #124]
  41ba10:	ldr	x0, [sp, #200]
  41ba14:	cmp	x0, #0x0
  41ba18:	b.eq	41ba54 <udev_event_execute_rules+0x224>  // b.none
  41ba1c:	mov	w0, #0x1                   	// #1
  41ba20:	bl	40be30 <log_get_max_level_realm@plt>
  41ba24:	mov	w1, w0
  41ba28:	ldr	w0, [sp, #120]
  41ba2c:	cmp	w0, w1
  41ba30:	cset	w0, le
  41ba34:	and	w0, w0, #0xff
  41ba38:	and	x0, x0, #0xff
  41ba3c:	cmp	x0, #0x0
  41ba40:	b.eq	41ba54 <udev_event_execute_rules+0x224>  // b.none
  41ba44:	add	x0, sp, #0x90
  41ba48:	mov	x1, x0
  41ba4c:	ldr	x0, [sp, #200]
  41ba50:	bl	40aba0 <sd_device_get_sysname@plt>
  41ba54:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41ba58:	add	x2, x0, #0xabb
  41ba5c:	ldr	x0, [sp, #144]
  41ba60:	cmp	x0, #0x0
  41ba64:	b.eq	41ba74 <udev_event_execute_rules+0x244>  // b.none
  41ba68:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41ba6c:	add	x0, x0, #0xbc8
  41ba70:	b	41ba78 <udev_event_execute_rules+0x248>
  41ba74:	mov	x0, #0x0                   	// #0
  41ba78:	ldr	x3, [sp, #144]
  41ba7c:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ba80:	add	x1, x1, #0x388
  41ba84:	str	x1, [sp, #8]
  41ba88:	str	xzr, [sp]
  41ba8c:	mov	x7, #0x0                   	// #0
  41ba90:	mov	x6, x3
  41ba94:	mov	x5, x0
  41ba98:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ba9c:	add	x4, x0, #0x788
  41baa0:	mov	w3, #0x3aa                 	// #938
  41baa4:	ldr	w1, [sp, #124]
  41baa8:	ldr	w0, [sp, #120]
  41baac:	bl	40b020 <log_object_internal@plt>
  41bab0:	b	41c008 <udev_event_execute_rules+0x7d8>
  41bab4:	ldr	w0, [sp, #72]
  41bab8:	cmp	w0, #0x1
  41babc:	b.ne	41badc <udev_event_execute_rules+0x2ac>  // b.any
  41bac0:	ldr	x3, [sp, #32]
  41bac4:	ldr	x2, [sp, #40]
  41bac8:	ldr	x1, [sp, #48]
  41bacc:	ldr	x0, [sp, #56]
  41bad0:	bl	41b2a0 <event_execute_rules_on_remove>
  41bad4:	mov	w0, #0x0                   	// #0
  41bad8:	b	41c008 <udev_event_execute_rules+0x7d8>
  41badc:	ldr	x0, [sp, #56]
  41bae0:	add	x0, x0, #0x10
  41bae4:	mov	x1, x0
  41bae8:	ldr	x0, [sp, #152]
  41baec:	bl	40a7c0 <device_clone_with_db@plt>
  41baf0:	str	w0, [sp, #76]
  41baf4:	ldr	w0, [sp, #76]
  41baf8:	cmp	w0, #0x0
  41bafc:	b.ge	41bbc0 <udev_event_execute_rules+0x390>  // b.tcont
  41bb00:	str	xzr, [sp, #144]
  41bb04:	ldr	x0, [sp, #152]
  41bb08:	str	x0, [sp, #192]
  41bb0c:	mov	w0, #0x7                   	// #7
  41bb10:	str	w0, [sp, #112]
  41bb14:	ldr	w0, [sp, #76]
  41bb18:	str	w0, [sp, #116]
  41bb1c:	ldr	x0, [sp, #192]
  41bb20:	cmp	x0, #0x0
  41bb24:	b.eq	41bb60 <udev_event_execute_rules+0x330>  // b.none
  41bb28:	mov	w0, #0x1                   	// #1
  41bb2c:	bl	40be30 <log_get_max_level_realm@plt>
  41bb30:	mov	w1, w0
  41bb34:	ldr	w0, [sp, #112]
  41bb38:	cmp	w0, w1
  41bb3c:	cset	w0, le
  41bb40:	and	w0, w0, #0xff
  41bb44:	and	x0, x0, #0xff
  41bb48:	cmp	x0, #0x0
  41bb4c:	b.eq	41bb60 <udev_event_execute_rules+0x330>  // b.none
  41bb50:	add	x0, sp, #0x90
  41bb54:	mov	x1, x0
  41bb58:	ldr	x0, [sp, #192]
  41bb5c:	bl	40aba0 <sd_device_get_sysname@plt>
  41bb60:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41bb64:	add	x2, x0, #0xabb
  41bb68:	ldr	x0, [sp, #144]
  41bb6c:	cmp	x0, #0x0
  41bb70:	b.eq	41bb80 <udev_event_execute_rules+0x350>  // b.none
  41bb74:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41bb78:	add	x0, x0, #0xbc8
  41bb7c:	b	41bb84 <udev_event_execute_rules+0x354>
  41bb80:	mov	x0, #0x0                   	// #0
  41bb84:	ldr	x3, [sp, #144]
  41bb88:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41bb8c:	add	x1, x1, #0x3a8
  41bb90:	str	x1, [sp, #8]
  41bb94:	str	xzr, [sp]
  41bb98:	mov	x7, #0x0                   	// #0
  41bb9c:	mov	x6, x3
  41bba0:	mov	x5, x0
  41bba4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41bba8:	add	x4, x0, #0x788
  41bbac:	mov	w3, #0x3b3                 	// #947
  41bbb0:	ldr	w1, [sp, #116]
  41bbb4:	ldr	w0, [sp, #112]
  41bbb8:	bl	40b020 <log_object_internal@plt>
  41bbbc:	b	41c008 <udev_event_execute_rules+0x7d8>
  41bbc0:	ldr	x0, [sp, #56]
  41bbc4:	ldr	x0, [x0, #16]
  41bbc8:	cmp	x0, #0x0
  41bbcc:	b.eq	41bbf0 <udev_event_execute_rules+0x3c0>  // b.none
  41bbd0:	mov	x1, #0x0                   	// #0
  41bbd4:	ldr	x0, [sp, #152]
  41bbd8:	bl	40b3d0 <sd_device_get_devnum@plt>
  41bbdc:	cmp	w0, #0x0
  41bbe0:	b.lt	41bbf0 <udev_event_execute_rules+0x3c0>  // b.tstop
  41bbe4:	ldr	x0, [sp, #56]
  41bbe8:	ldr	x0, [x0, #16]
  41bbec:	bl	435788 <udev_watch_end>
  41bbf0:	ldr	w0, [sp, #72]
  41bbf4:	cmp	w0, #0x3
  41bbf8:	b.ne	41bc1c <udev_event_execute_rules+0x3ec>  // b.any
  41bbfc:	ldr	x0, [sp, #56]
  41bc00:	bl	41b5e0 <udev_event_on_move>
  41bc04:	str	w0, [sp, #76]
  41bc08:	ldr	w0, [sp, #76]
  41bc0c:	cmp	w0, #0x0
  41bc10:	b.ge	41bc1c <udev_event_execute_rules+0x3ec>  // b.tcont
  41bc14:	ldr	w0, [sp, #76]
  41bc18:	b	41c008 <udev_event_execute_rules+0x7d8>
  41bc1c:	ldr	x3, [sp, #40]
  41bc20:	ldr	x2, [sp, #48]
  41bc24:	ldr	x1, [sp, #56]
  41bc28:	ldr	x0, [sp, #32]
  41bc2c:	bl	433f24 <udev_rules_apply_to_event>
  41bc30:	str	w0, [sp, #76]
  41bc34:	ldr	w0, [sp, #76]
  41bc38:	cmp	w0, #0x0
  41bc3c:	b.ge	41bd00 <udev_event_execute_rules+0x4d0>  // b.tcont
  41bc40:	str	xzr, [sp, #144]
  41bc44:	ldr	x0, [sp, #152]
  41bc48:	str	x0, [sp, #184]
  41bc4c:	mov	w0, #0x7                   	// #7
  41bc50:	str	w0, [sp, #104]
  41bc54:	ldr	w0, [sp, #76]
  41bc58:	str	w0, [sp, #108]
  41bc5c:	ldr	x0, [sp, #184]
  41bc60:	cmp	x0, #0x0
  41bc64:	b.eq	41bca0 <udev_event_execute_rules+0x470>  // b.none
  41bc68:	mov	w0, #0x1                   	// #1
  41bc6c:	bl	40be30 <log_get_max_level_realm@plt>
  41bc70:	mov	w1, w0
  41bc74:	ldr	w0, [sp, #104]
  41bc78:	cmp	w0, w1
  41bc7c:	cset	w0, le
  41bc80:	and	w0, w0, #0xff
  41bc84:	and	x0, x0, #0xff
  41bc88:	cmp	x0, #0x0
  41bc8c:	b.eq	41bca0 <udev_event_execute_rules+0x470>  // b.none
  41bc90:	add	x0, sp, #0x90
  41bc94:	mov	x1, x0
  41bc98:	ldr	x0, [sp, #184]
  41bc9c:	bl	40aba0 <sd_device_get_sysname@plt>
  41bca0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41bca4:	add	x2, x0, #0xabb
  41bca8:	ldr	x0, [sp, #144]
  41bcac:	cmp	x0, #0x0
  41bcb0:	b.eq	41bcc0 <udev_event_execute_rules+0x490>  // b.none
  41bcb4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41bcb8:	add	x0, x0, #0xbc8
  41bcbc:	b	41bcc4 <udev_event_execute_rules+0x494>
  41bcc0:	mov	x0, #0x0                   	// #0
  41bcc4:	ldr	x3, [sp, #144]
  41bcc8:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41bccc:	add	x1, x1, #0x3d0
  41bcd0:	str	x1, [sp, #8]
  41bcd4:	str	xzr, [sp]
  41bcd8:	mov	x7, #0x0                   	// #0
  41bcdc:	mov	x6, x3
  41bce0:	mov	x5, x0
  41bce4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41bce8:	add	x4, x0, #0x788
  41bcec:	mov	w3, #0x3c1                 	// #961
  41bcf0:	ldr	w1, [sp, #108]
  41bcf4:	ldr	w0, [sp, #104]
  41bcf8:	bl	40b020 <log_object_internal@plt>
  41bcfc:	b	41c008 <udev_event_execute_rules+0x7d8>
  41bd00:	ldr	x0, [sp, #56]
  41bd04:	bl	41a71c <rename_netif>
  41bd08:	str	w0, [sp, #76]
  41bd0c:	ldr	w0, [sp, #76]
  41bd10:	cmp	w0, #0x0
  41bd14:	b.ge	41bd20 <udev_event_execute_rules+0x4f0>  // b.tcont
  41bd18:	ldr	w0, [sp, #76]
  41bd1c:	b	41c008 <udev_event_execute_rules+0x7d8>
  41bd20:	ldr	x0, [sp, #56]
  41bd24:	bl	41ad78 <update_devnode>
  41bd28:	str	w0, [sp, #76]
  41bd2c:	ldr	w0, [sp, #76]
  41bd30:	cmp	w0, #0x0
  41bd34:	b.ge	41bd40 <udev_event_execute_rules+0x510>  // b.tcont
  41bd38:	ldr	w0, [sp, #76]
  41bd3c:	b	41c008 <udev_event_execute_rules+0x7d8>
  41bd40:	ldr	x0, [sp, #56]
  41bd44:	ldr	x0, [x0, #16]
  41bd48:	mov	x1, x0
  41bd4c:	ldr	x0, [sp, #152]
  41bd50:	bl	40b8d0 <device_ensure_usec_initialized@plt>
  41bd54:	str	w0, [sp, #76]
  41bd58:	ldr	w0, [sp, #76]
  41bd5c:	cmp	w0, #0x0
  41bd60:	b.ge	41be24 <udev_event_execute_rules+0x5f4>  // b.tcont
  41bd64:	str	xzr, [sp, #144]
  41bd68:	ldr	x0, [sp, #152]
  41bd6c:	str	x0, [sp, #176]
  41bd70:	mov	w0, #0x7                   	// #7
  41bd74:	str	w0, [sp, #96]
  41bd78:	ldr	w0, [sp, #76]
  41bd7c:	str	w0, [sp, #100]
  41bd80:	ldr	x0, [sp, #176]
  41bd84:	cmp	x0, #0x0
  41bd88:	b.eq	41bdc4 <udev_event_execute_rules+0x594>  // b.none
  41bd8c:	mov	w0, #0x1                   	// #1
  41bd90:	bl	40be30 <log_get_max_level_realm@plt>
  41bd94:	mov	w1, w0
  41bd98:	ldr	w0, [sp, #96]
  41bd9c:	cmp	w0, w1
  41bda0:	cset	w0, le
  41bda4:	and	w0, w0, #0xff
  41bda8:	and	x0, x0, #0xff
  41bdac:	cmp	x0, #0x0
  41bdb0:	b.eq	41bdc4 <udev_event_execute_rules+0x594>  // b.none
  41bdb4:	add	x0, sp, #0x90
  41bdb8:	mov	x1, x0
  41bdbc:	ldr	x0, [sp, #176]
  41bdc0:	bl	40aba0 <sd_device_get_sysname@plt>
  41bdc4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41bdc8:	add	x2, x0, #0xabb
  41bdcc:	ldr	x0, [sp, #144]
  41bdd0:	cmp	x0, #0x0
  41bdd4:	b.eq	41bde4 <udev_event_execute_rules+0x5b4>  // b.none
  41bdd8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41bddc:	add	x0, x0, #0xbc8
  41bde0:	b	41bde8 <udev_event_execute_rules+0x5b8>
  41bde4:	mov	x0, #0x0                   	// #0
  41bde8:	ldr	x3, [sp, #144]
  41bdec:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41bdf0:	add	x1, x1, #0x3f0
  41bdf4:	str	x1, [sp, #8]
  41bdf8:	str	xzr, [sp]
  41bdfc:	mov	x7, #0x0                   	// #0
  41be00:	mov	x6, x3
  41be04:	mov	x5, x0
  41be08:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41be0c:	add	x4, x0, #0x788
  41be10:	mov	w3, #0x3ce                 	// #974
  41be14:	ldr	w1, [sp, #100]
  41be18:	ldr	w0, [sp, #96]
  41be1c:	bl	40b020 <log_object_internal@plt>
  41be20:	b	41c008 <udev_event_execute_rules+0x7d8>
  41be24:	ldr	x0, [sp, #56]
  41be28:	ldr	x0, [x0, #16]
  41be2c:	mov	w2, #0x1                   	// #1
  41be30:	mov	x1, x0
  41be34:	ldr	x0, [sp, #152]
  41be38:	bl	40ab20 <device_tag_index@plt>
  41be3c:	str	w0, [sp, #76]
  41be40:	ldr	w0, [sp, #76]
  41be44:	cmp	w0, #0x0
  41be48:	b.ge	41bf0c <udev_event_execute_rules+0x6dc>  // b.tcont
  41be4c:	str	xzr, [sp, #144]
  41be50:	ldr	x0, [sp, #152]
  41be54:	str	x0, [sp, #168]
  41be58:	mov	w0, #0x7                   	// #7
  41be5c:	str	w0, [sp, #88]
  41be60:	ldr	w0, [sp, #76]
  41be64:	str	w0, [sp, #92]
  41be68:	ldr	x0, [sp, #168]
  41be6c:	cmp	x0, #0x0
  41be70:	b.eq	41beac <udev_event_execute_rules+0x67c>  // b.none
  41be74:	mov	w0, #0x1                   	// #1
  41be78:	bl	40be30 <log_get_max_level_realm@plt>
  41be7c:	mov	w1, w0
  41be80:	ldr	w0, [sp, #88]
  41be84:	cmp	w0, w1
  41be88:	cset	w0, le
  41be8c:	and	w0, w0, #0xff
  41be90:	and	x0, x0, #0xff
  41be94:	cmp	x0, #0x0
  41be98:	b.eq	41beac <udev_event_execute_rules+0x67c>  // b.none
  41be9c:	add	x0, sp, #0x90
  41bea0:	mov	x1, x0
  41bea4:	ldr	x0, [sp, #168]
  41bea8:	bl	40aba0 <sd_device_get_sysname@plt>
  41beac:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41beb0:	add	x2, x0, #0xabb
  41beb4:	ldr	x0, [sp, #144]
  41beb8:	cmp	x0, #0x0
  41bebc:	b.eq	41becc <udev_event_execute_rules+0x69c>  // b.none
  41bec0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41bec4:	add	x0, x0, #0xbc8
  41bec8:	b	41bed0 <udev_event_execute_rules+0x6a0>
  41becc:	mov	x0, #0x0                   	// #0
  41bed0:	ldr	x3, [sp, #144]
  41bed4:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41bed8:	add	x1, x1, #0x420
  41bedc:	str	x1, [sp, #8]
  41bee0:	str	xzr, [sp]
  41bee4:	mov	x7, #0x0                   	// #0
  41bee8:	mov	x6, x3
  41beec:	mov	x5, x0
  41bef0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41bef4:	add	x4, x0, #0x788
  41bef8:	mov	w3, #0x3d3                 	// #979
  41befc:	ldr	w1, [sp, #92]
  41bf00:	ldr	w0, [sp, #88]
  41bf04:	bl	40b020 <log_object_internal@plt>
  41bf08:	b	41c008 <udev_event_execute_rules+0x7d8>
  41bf0c:	ldr	x0, [sp, #152]
  41bf10:	bl	40a940 <device_update_db@plt>
  41bf14:	str	w0, [sp, #76]
  41bf18:	ldr	w0, [sp, #76]
  41bf1c:	cmp	w0, #0x0
  41bf20:	b.ge	41bfe4 <udev_event_execute_rules+0x7b4>  // b.tcont
  41bf24:	str	xzr, [sp, #144]
  41bf28:	ldr	x0, [sp, #152]
  41bf2c:	str	x0, [sp, #160]
  41bf30:	mov	w0, #0x7                   	// #7
  41bf34:	str	w0, [sp, #80]
  41bf38:	ldr	w0, [sp, #76]
  41bf3c:	str	w0, [sp, #84]
  41bf40:	ldr	x0, [sp, #160]
  41bf44:	cmp	x0, #0x0
  41bf48:	b.eq	41bf84 <udev_event_execute_rules+0x754>  // b.none
  41bf4c:	mov	w0, #0x1                   	// #1
  41bf50:	bl	40be30 <log_get_max_level_realm@plt>
  41bf54:	mov	w1, w0
  41bf58:	ldr	w0, [sp, #80]
  41bf5c:	cmp	w0, w1
  41bf60:	cset	w0, le
  41bf64:	and	w0, w0, #0xff
  41bf68:	and	x0, x0, #0xff
  41bf6c:	cmp	x0, #0x0
  41bf70:	b.eq	41bf84 <udev_event_execute_rules+0x754>  // b.none
  41bf74:	add	x0, sp, #0x90
  41bf78:	mov	x1, x0
  41bf7c:	ldr	x0, [sp, #160]
  41bf80:	bl	40aba0 <sd_device_get_sysname@plt>
  41bf84:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41bf88:	add	x2, x0, #0xabb
  41bf8c:	ldr	x0, [sp, #144]
  41bf90:	cmp	x0, #0x0
  41bf94:	b.eq	41bfa4 <udev_event_execute_rules+0x774>  // b.none
  41bf98:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41bf9c:	add	x0, x0, #0xbc8
  41bfa0:	b	41bfa8 <udev_event_execute_rules+0x778>
  41bfa4:	mov	x0, #0x0                   	// #0
  41bfa8:	ldr	x3, [sp, #144]
  41bfac:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41bfb0:	add	x1, x1, #0x450
  41bfb4:	str	x1, [sp, #8]
  41bfb8:	str	xzr, [sp]
  41bfbc:	mov	x7, #0x0                   	// #0
  41bfc0:	mov	x6, x3
  41bfc4:	mov	x5, x0
  41bfc8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41bfcc:	add	x4, x0, #0x788
  41bfd0:	mov	w3, #0x3d7                 	// #983
  41bfd4:	ldr	w1, [sp, #84]
  41bfd8:	ldr	w0, [sp, #80]
  41bfdc:	bl	40b020 <log_object_internal@plt>
  41bfe0:	b	41c008 <udev_event_execute_rules+0x7d8>
  41bfe4:	ldr	x0, [sp, #152]
  41bfe8:	bl	40ad00 <device_set_is_initialized@plt>
  41bfec:	ldr	x0, [sp, #56]
  41bff0:	ldr	x0, [x0, #16]
  41bff4:	bl	40baf0 <sd_device_unref@plt>
  41bff8:	mov	x1, x0
  41bffc:	ldr	x0, [sp, #56]
  41c000:	str	x1, [x0, #16]
  41c004:	mov	w0, #0x0                   	// #0
  41c008:	mov	w1, w0
  41c00c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41c010:	ldr	x0, [x0, #4032]
  41c014:	ldr	x2, [sp, #216]
  41c018:	ldr	x0, [x0]
  41c01c:	eor	x0, x2, x0
  41c020:	cmp	x0, #0x0
  41c024:	b.eq	41c02c <udev_event_execute_rules+0x7fc>  // b.none
  41c028:	bl	40b280 <__stack_chk_fail@plt>
  41c02c:	mov	w0, w1
  41c030:	ldp	x29, x30, [sp, #16]
  41c034:	add	sp, sp, #0xe0
  41c038:	ret

000000000041c03c <udev_event_execute_run>:
  41c03c:	sub	sp, sp, #0x140
  41c040:	stp	x29, x30, [sp, #32]
  41c044:	add	x29, sp, #0x20
  41c048:	stp	x19, x20, [sp, #48]
  41c04c:	stp	x21, x22, [sp, #64]
  41c050:	str	x0, [sp, #88]
  41c054:	str	x1, [sp, #80]
  41c058:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41c05c:	ldr	x0, [x0, #4032]
  41c060:	ldr	x1, [x0]
  41c064:	str	x1, [sp, #312]
  41c068:	mov	x1, #0x0                   	// #0
  41c06c:	mov	w0, #0xfffffffe            	// #-2
  41c070:	str	w0, [sp, #232]
  41c074:	str	xzr, [sp, #240]
  41c078:	b	41c5f4 <udev_event_execute_run+0x5b8>
  41c07c:	ldr	x0, [sp, #168]
  41c080:	sub	w0, w0, #0x1
  41c084:	str	w0, [sp, #104]
  41c088:	ldr	w0, [sp, #104]
  41c08c:	cmn	w0, #0x1
  41c090:	b.eq	41c250 <udev_event_execute_run+0x214>  // b.none
  41c094:	str	xzr, [sp, #176]
  41c098:	ldr	x0, [sp, #88]
  41c09c:	ldr	x0, [x0]
  41c0a0:	str	x0, [sp, #216]
  41c0a4:	mov	w0, #0x7                   	// #7
  41c0a8:	str	w0, [sp, #144]
  41c0ac:	str	wzr, [sp, #148]
  41c0b0:	ldr	x0, [sp, #216]
  41c0b4:	cmp	x0, #0x0
  41c0b8:	b.eq	41c0f4 <udev_event_execute_run+0xb8>  // b.none
  41c0bc:	mov	w0, #0x1                   	// #1
  41c0c0:	bl	40be30 <log_get_max_level_realm@plt>
  41c0c4:	mov	w1, w0
  41c0c8:	ldr	w0, [sp, #144]
  41c0cc:	cmp	w0, w1
  41c0d0:	cset	w0, le
  41c0d4:	and	w0, w0, #0xff
  41c0d8:	and	x0, x0, #0xff
  41c0dc:	cmp	x0, #0x0
  41c0e0:	b.eq	41c0f4 <udev_event_execute_run+0xb8>  // b.none
  41c0e4:	add	x0, sp, #0xb0
  41c0e8:	mov	x1, x0
  41c0ec:	ldr	x0, [sp, #216]
  41c0f0:	bl	40aba0 <sd_device_get_sysname@plt>
  41c0f4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c0f8:	add	x2, x0, #0xabb
  41c0fc:	ldr	x0, [sp, #176]
  41c100:	cmp	x0, #0x0
  41c104:	b.eq	41c114 <udev_event_execute_run+0xd8>  // b.none
  41c108:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c10c:	add	x0, x0, #0xbc8
  41c110:	b	41c118 <udev_event_execute_run+0xdc>
  41c114:	mov	x0, #0x0                   	// #0
  41c118:	ldr	x3, [sp, #176]
  41c11c:	ldr	x1, [sp, #160]
  41c120:	str	x1, [sp, #16]
  41c124:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c128:	add	x1, x1, #0x488
  41c12c:	str	x1, [sp, #8]
  41c130:	str	xzr, [sp]
  41c134:	mov	x7, #0x0                   	// #0
  41c138:	mov	x6, x3
  41c13c:	mov	x5, x0
  41c140:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c144:	add	x4, x0, #0x7a8
  41c148:	mov	w3, #0x3ea                 	// #1002
  41c14c:	ldr	w1, [sp, #148]
  41c150:	ldr	w0, [sp, #144]
  41c154:	bl	40b020 <log_object_internal@plt>
  41c158:	ldr	x0, [sp, #88]
  41c15c:	ldr	x0, [x0]
  41c160:	ldr	x1, [sp, #160]
  41c164:	mov	w3, #0x0                   	// #0
  41c168:	mov	x2, x1
  41c16c:	ldr	w1, [sp, #104]
  41c170:	bl	436324 <udev_builtin_run>
  41c174:	str	w0, [sp, #124]
  41c178:	ldr	w0, [sp, #124]
  41c17c:	cmp	w0, #0x0
  41c180:	b.ge	41c5f4 <udev_event_execute_run+0x5b8>  // b.tcont
  41c184:	str	xzr, [sp, #176]
  41c188:	ldr	x0, [sp, #88]
  41c18c:	ldr	x0, [x0]
  41c190:	str	x0, [sp, #224]
  41c194:	mov	w0, #0x7                   	// #7
  41c198:	str	w0, [sp, #152]
  41c19c:	ldr	w0, [sp, #124]
  41c1a0:	str	w0, [sp, #156]
  41c1a4:	ldr	x0, [sp, #224]
  41c1a8:	cmp	x0, #0x0
  41c1ac:	b.eq	41c1e8 <udev_event_execute_run+0x1ac>  // b.none
  41c1b0:	mov	w0, #0x1                   	// #1
  41c1b4:	bl	40be30 <log_get_max_level_realm@plt>
  41c1b8:	mov	w1, w0
  41c1bc:	ldr	w0, [sp, #152]
  41c1c0:	cmp	w0, w1
  41c1c4:	cset	w0, le
  41c1c8:	and	w0, w0, #0xff
  41c1cc:	and	x0, x0, #0xff
  41c1d0:	cmp	x0, #0x0
  41c1d4:	b.eq	41c1e8 <udev_event_execute_run+0x1ac>  // b.none
  41c1d8:	add	x0, sp, #0xb0
  41c1dc:	mov	x1, x0
  41c1e0:	ldr	x0, [sp, #224]
  41c1e4:	bl	40aba0 <sd_device_get_sysname@plt>
  41c1e8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c1ec:	add	x2, x0, #0xabb
  41c1f0:	ldr	x0, [sp, #176]
  41c1f4:	cmp	x0, #0x0
  41c1f8:	b.eq	41c208 <udev_event_execute_run+0x1cc>  // b.none
  41c1fc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c200:	add	x0, x0, #0xbc8
  41c204:	b	41c20c <udev_event_execute_run+0x1d0>
  41c208:	mov	x0, #0x0                   	// #0
  41c20c:	ldr	x3, [sp, #176]
  41c210:	ldr	x1, [sp, #160]
  41c214:	str	x1, [sp, #16]
  41c218:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c21c:	add	x1, x1, #0x4a8
  41c220:	str	x1, [sp, #8]
  41c224:	str	xzr, [sp]
  41c228:	mov	x7, #0x0                   	// #0
  41c22c:	mov	x6, x3
  41c230:	mov	x5, x0
  41c234:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c238:	add	x4, x0, #0x7a8
  41c23c:	mov	w3, #0x3ed                 	// #1005
  41c240:	ldr	w1, [sp, #156]
  41c244:	ldr	w0, [sp, #152]
  41c248:	bl	40b020 <log_object_internal@plt>
  41c24c:	b	41c5f4 <udev_event_execute_run+0x5b8>
  41c250:	ldr	x0, [sp, #88]
  41c254:	ldr	x0, [x0, #72]
  41c258:	cmp	x0, #0x0
  41c25c:	b.eq	41c358 <udev_event_execute_run+0x31c>  // b.none
  41c260:	str	xzr, [sp, #176]
  41c264:	ldr	x0, [sp, #88]
  41c268:	ldr	x0, [x0]
  41c26c:	str	x0, [sp, #184]
  41c270:	mov	w0, #0x7                   	// #7
  41c274:	str	w0, [sp, #108]
  41c278:	str	wzr, [sp, #112]
  41c27c:	ldr	x0, [sp, #184]
  41c280:	cmp	x0, #0x0
  41c284:	b.eq	41c2c0 <udev_event_execute_run+0x284>  // b.none
  41c288:	mov	w0, #0x1                   	// #1
  41c28c:	bl	40be30 <log_get_max_level_realm@plt>
  41c290:	mov	w1, w0
  41c294:	ldr	w0, [sp, #108]
  41c298:	cmp	w0, w1
  41c29c:	cset	w0, le
  41c2a0:	and	w0, w0, #0xff
  41c2a4:	and	x0, x0, #0xff
  41c2a8:	cmp	x0, #0x0
  41c2ac:	b.eq	41c2c0 <udev_event_execute_run+0x284>  // b.none
  41c2b0:	add	x0, sp, #0xb0
  41c2b4:	mov	x1, x0
  41c2b8:	ldr	x0, [sp, #184]
  41c2bc:	bl	40aba0 <sd_device_get_sysname@plt>
  41c2c0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c2c4:	add	x21, x0, #0xabb
  41c2c8:	ldr	x0, [sp, #176]
  41c2cc:	cmp	x0, #0x0
  41c2d0:	b.eq	41c2e0 <udev_event_execute_run+0x2a4>  // b.none
  41c2d4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c2d8:	add	x19, x0, #0xbc8
  41c2dc:	b	41c2e4 <udev_event_execute_run+0x2a8>
  41c2e0:	mov	x19, #0x0                   	// #0
  41c2e4:	ldr	x22, [sp, #176]
  41c2e8:	ldr	x20, [sp, #160]
  41c2ec:	ldr	x0, [sp, #88]
  41c2f0:	ldr	x1, [x0, #72]
  41c2f4:	add	x0, sp, #0xf8
  41c2f8:	mov	x3, #0x4240                	// #16960
  41c2fc:	movk	x3, #0xf, lsl #16
  41c300:	mov	x2, x1
  41c304:	mov	x1, #0x40                  	// #64
  41c308:	bl	40a5b0 <format_timespan@plt>
  41c30c:	str	x0, [sp, #24]
  41c310:	str	x20, [sp, #16]
  41c314:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c318:	add	x0, x0, #0x4e0
  41c31c:	str	x0, [sp, #8]
  41c320:	str	xzr, [sp]
  41c324:	mov	x7, #0x0                   	// #0
  41c328:	mov	x6, x22
  41c32c:	mov	x5, x19
  41c330:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c334:	add	x4, x0, #0x7a8
  41c338:	mov	w3, #0x3f2                 	// #1010
  41c33c:	mov	x2, x21
  41c340:	ldr	w1, [sp, #112]
  41c344:	ldr	w0, [sp, #108]
  41c348:	bl	40b020 <log_object_internal@plt>
  41c34c:	ldr	x0, [sp, #88]
  41c350:	ldr	x0, [x0, #72]
  41c354:	bl	40aee0 <usleep@plt>
  41c358:	str	xzr, [sp, #176]
  41c35c:	ldr	x0, [sp, #88]
  41c360:	ldr	x0, [x0]
  41c364:	str	x0, [sp, #192]
  41c368:	mov	w0, #0x7                   	// #7
  41c36c:	str	w0, [sp, #116]
  41c370:	str	wzr, [sp, #120]
  41c374:	ldr	x0, [sp, #192]
  41c378:	cmp	x0, #0x0
  41c37c:	b.eq	41c3b8 <udev_event_execute_run+0x37c>  // b.none
  41c380:	mov	w0, #0x1                   	// #1
  41c384:	bl	40be30 <log_get_max_level_realm@plt>
  41c388:	mov	w1, w0
  41c38c:	ldr	w0, [sp, #116]
  41c390:	cmp	w0, w1
  41c394:	cset	w0, le
  41c398:	and	w0, w0, #0xff
  41c39c:	and	x0, x0, #0xff
  41c3a0:	cmp	x0, #0x0
  41c3a4:	b.eq	41c3b8 <udev_event_execute_run+0x37c>  // b.none
  41c3a8:	add	x0, sp, #0xb0
  41c3ac:	mov	x1, x0
  41c3b0:	ldr	x0, [sp, #192]
  41c3b4:	bl	40aba0 <sd_device_get_sysname@plt>
  41c3b8:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c3bc:	add	x2, x0, #0xabb
  41c3c0:	ldr	x0, [sp, #176]
  41c3c4:	cmp	x0, #0x0
  41c3c8:	b.eq	41c3d8 <udev_event_execute_run+0x39c>  // b.none
  41c3cc:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c3d0:	add	x0, x0, #0xbc8
  41c3d4:	b	41c3dc <udev_event_execute_run+0x3a0>
  41c3d8:	mov	x0, #0x0                   	// #0
  41c3dc:	ldr	x3, [sp, #176]
  41c3e0:	ldr	x1, [sp, #160]
  41c3e4:	str	x1, [sp, #16]
  41c3e8:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c3ec:	add	x1, x1, #0x508
  41c3f0:	str	x1, [sp, #8]
  41c3f4:	str	xzr, [sp]
  41c3f8:	mov	x7, #0x0                   	// #0
  41c3fc:	mov	x6, x3
  41c400:	mov	x5, x0
  41c404:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c408:	add	x4, x0, #0x7a8
  41c40c:	mov	w3, #0x3f7                 	// #1015
  41c410:	ldr	w1, [sp, #120]
  41c414:	ldr	w0, [sp, #116]
  41c418:	bl	40b020 <log_object_internal@plt>
  41c41c:	ldr	x0, [sp, #160]
  41c420:	mov	x5, #0x0                   	// #0
  41c424:	mov	x4, #0x0                   	// #0
  41c428:	mov	x3, x0
  41c42c:	mov	w2, #0x0                   	// #0
  41c430:	ldr	x1, [sp, #80]
  41c434:	ldr	x0, [sp, #88]
  41c438:	bl	419d18 <udev_event_spawn>
  41c43c:	str	w0, [sp, #124]
  41c440:	ldr	w0, [sp, #124]
  41c444:	cmp	w0, #0x0
  41c448:	b.ge	41c518 <udev_event_execute_run+0x4dc>  // b.tcont
  41c44c:	str	xzr, [sp, #176]
  41c450:	ldr	x0, [sp, #88]
  41c454:	ldr	x0, [x0]
  41c458:	str	x0, [sp, #208]
  41c45c:	mov	w0, #0x4                   	// #4
  41c460:	str	w0, [sp, #136]
  41c464:	ldr	w0, [sp, #124]
  41c468:	str	w0, [sp, #140]
  41c46c:	ldr	x0, [sp, #208]
  41c470:	cmp	x0, #0x0
  41c474:	b.eq	41c4b0 <udev_event_execute_run+0x474>  // b.none
  41c478:	mov	w0, #0x1                   	// #1
  41c47c:	bl	40be30 <log_get_max_level_realm@plt>
  41c480:	mov	w1, w0
  41c484:	ldr	w0, [sp, #136]
  41c488:	cmp	w0, w1
  41c48c:	cset	w0, le
  41c490:	and	w0, w0, #0xff
  41c494:	and	x0, x0, #0xff
  41c498:	cmp	x0, #0x0
  41c49c:	b.eq	41c4b0 <udev_event_execute_run+0x474>  // b.none
  41c4a0:	add	x0, sp, #0xb0
  41c4a4:	mov	x1, x0
  41c4a8:	ldr	x0, [sp, #208]
  41c4ac:	bl	40aba0 <sd_device_get_sysname@plt>
  41c4b0:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c4b4:	add	x2, x0, #0xabb
  41c4b8:	ldr	x0, [sp, #176]
  41c4bc:	cmp	x0, #0x0
  41c4c0:	b.eq	41c4d0 <udev_event_execute_run+0x494>  // b.none
  41c4c4:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c4c8:	add	x0, x0, #0xbc8
  41c4cc:	b	41c4d4 <udev_event_execute_run+0x498>
  41c4d0:	mov	x0, #0x0                   	// #0
  41c4d4:	ldr	x3, [sp, #176]
  41c4d8:	ldr	x1, [sp, #160]
  41c4dc:	str	x1, [sp, #16]
  41c4e0:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c4e4:	add	x1, x1, #0x520
  41c4e8:	str	x1, [sp, #8]
  41c4ec:	str	xzr, [sp]
  41c4f0:	mov	x7, #0x0                   	// #0
  41c4f4:	mov	x6, x3
  41c4f8:	mov	x5, x0
  41c4fc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c500:	add	x4, x0, #0x7a8
  41c504:	mov	w3, #0x3fa                 	// #1018
  41c508:	ldr	w1, [sp, #140]
  41c50c:	ldr	w0, [sp, #136]
  41c510:	bl	40b020 <log_object_internal@plt>
  41c514:	b	41c5f4 <udev_event_execute_run+0x5b8>
  41c518:	ldr	w0, [sp, #124]
  41c51c:	cmp	w0, #0x0
  41c520:	b.le	41c5f4 <udev_event_execute_run+0x5b8>
  41c524:	str	xzr, [sp, #176]
  41c528:	ldr	x0, [sp, #88]
  41c52c:	ldr	x0, [x0]
  41c530:	str	x0, [sp, #200]
  41c534:	mov	w0, #0x7                   	// #7
  41c538:	str	w0, [sp, #128]
  41c53c:	str	wzr, [sp, #132]
  41c540:	ldr	x0, [sp, #200]
  41c544:	cmp	x0, #0x0
  41c548:	b.eq	41c584 <udev_event_execute_run+0x548>  // b.none
  41c54c:	mov	w0, #0x1                   	// #1
  41c550:	bl	40be30 <log_get_max_level_realm@plt>
  41c554:	mov	w1, w0
  41c558:	ldr	w0, [sp, #128]
  41c55c:	cmp	w0, w1
  41c560:	cset	w0, le
  41c564:	and	w0, w0, #0xff
  41c568:	and	x0, x0, #0xff
  41c56c:	cmp	x0, #0x0
  41c570:	b.eq	41c584 <udev_event_execute_run+0x548>  // b.none
  41c574:	add	x0, sp, #0xb0
  41c578:	mov	x1, x0
  41c57c:	ldr	x0, [sp, #200]
  41c580:	bl	40aba0 <sd_device_get_sysname@plt>
  41c584:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c588:	add	x8, x0, #0xabb
  41c58c:	ldr	x0, [sp, #176]
  41c590:	cmp	x0, #0x0
  41c594:	b.eq	41c5a4 <udev_event_execute_run+0x568>  // b.none
  41c598:	adrp	x0, 452000 <__PRETTY_FUNCTION__.15954+0x8>
  41c59c:	add	x0, x0, #0xbc8
  41c5a0:	b	41c5a8 <udev_event_execute_run+0x56c>
  41c5a4:	mov	x0, #0x0                   	// #0
  41c5a8:	ldr	x3, [sp, #176]
  41c5ac:	ldr	x1, [sp, #160]
  41c5b0:	ldr	w2, [sp, #124]
  41c5b4:	str	w2, [sp, #24]
  41c5b8:	str	x1, [sp, #16]
  41c5bc:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c5c0:	add	x1, x1, #0x548
  41c5c4:	str	x1, [sp, #8]
  41c5c8:	str	xzr, [sp]
  41c5cc:	mov	x7, #0x0                   	// #0
  41c5d0:	mov	x6, x3
  41c5d4:	mov	x5, x0
  41c5d8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c5dc:	add	x4, x0, #0x7a8
  41c5e0:	mov	w3, #0x3fc                 	// #1020
  41c5e4:	mov	x2, x8
  41c5e8:	ldr	w1, [sp, #132]
  41c5ec:	ldr	w0, [sp, #128]
  41c5f0:	bl	40b020 <log_object_internal@plt>
  41c5f4:	ldr	x0, [sp, #88]
  41c5f8:	ldr	x0, [x0, #64]
  41c5fc:	add	x3, sp, #0xa0
  41c600:	add	x2, sp, #0xa8
  41c604:	add	x1, sp, #0xe8
  41c608:	bl	417158 <ordered_hashmap_iterate>
  41c60c:	and	w0, w0, #0xff
  41c610:	cmp	w0, #0x0
  41c614:	b.ne	41c07c <udev_event_execute_run+0x40>  // b.any
  41c618:	nop
  41c61c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41c620:	ldr	x0, [x0, #4032]
  41c624:	ldr	x1, [sp, #312]
  41c628:	ldr	x0, [x0]
  41c62c:	eor	x0, x1, x0
  41c630:	cmp	x0, #0x0
  41c634:	b.eq	41c63c <udev_event_execute_run+0x600>  // b.none
  41c638:	bl	40b280 <__stack_chk_fail@plt>
  41c63c:	ldp	x19, x20, [sp, #48]
  41c640:	ldp	x21, x22, [sp, #64]
  41c644:	ldp	x29, x30, [sp, #32]
  41c648:	add	sp, sp, #0x140
  41c64c:	ret

000000000041c650 <freep>:
  41c650:	stp	x29, x30, [sp, #-32]!
  41c654:	mov	x29, sp
  41c658:	str	x0, [sp, #24]
  41c65c:	ldr	x0, [sp, #24]
  41c660:	ldr	x0, [x0]
  41c664:	bl	40ba20 <free@plt>
  41c668:	nop
  41c66c:	ldp	x29, x30, [sp], #32
  41c670:	ret

000000000041c674 <size_multiply_overflow>:
  41c674:	sub	sp, sp, #0x10
  41c678:	str	x0, [sp, #8]
  41c67c:	str	x1, [sp]
  41c680:	ldr	x0, [sp]
  41c684:	cmp	x0, #0x0
  41c688:	cset	w0, ne  // ne = any
  41c68c:	and	w0, w0, #0xff
  41c690:	and	x0, x0, #0xff
  41c694:	cmp	x0, #0x0
  41c698:	b.eq	41c6dc <size_multiply_overflow+0x68>  // b.none
  41c69c:	mov	x2, #0x0                   	// #0
  41c6a0:	ldr	x1, [sp, #8]
  41c6a4:	ldr	x0, [sp]
  41c6a8:	umulh	x0, x1, x0
  41c6ac:	cmp	x0, #0x0
  41c6b0:	b.eq	41c6b8 <size_multiply_overflow+0x44>  // b.none
  41c6b4:	mov	x2, #0x1                   	// #1
  41c6b8:	mov	x0, x2
  41c6bc:	cmp	x0, #0x0
  41c6c0:	cset	w0, ne  // ne = any
  41c6c4:	and	w0, w0, #0xff
  41c6c8:	and	x0, x0, #0xff
  41c6cc:	cmp	x0, #0x0
  41c6d0:	b.eq	41c6dc <size_multiply_overflow+0x68>  // b.none
  41c6d4:	mov	w0, #0x1                   	// #1
  41c6d8:	b	41c6e0 <size_multiply_overflow+0x6c>
  41c6dc:	mov	w0, #0x0                   	// #0
  41c6e0:	and	w0, w0, #0x1
  41c6e4:	and	w0, w0, #0xff
  41c6e8:	add	sp, sp, #0x10
  41c6ec:	ret

000000000041c6f0 <sd_device_unrefp>:
  41c6f0:	stp	x29, x30, [sp, #-32]!
  41c6f4:	mov	x29, sp
  41c6f8:	str	x0, [sp, #24]
  41c6fc:	ldr	x0, [sp, #24]
  41c700:	ldr	x0, [x0]
  41c704:	cmp	x0, #0x0
  41c708:	b.eq	41c718 <sd_device_unrefp+0x28>  // b.none
  41c70c:	ldr	x0, [sp, #24]
  41c710:	ldr	x0, [x0]
  41c714:	bl	40baf0 <sd_device_unref@plt>
  41c718:	nop
  41c71c:	ldp	x29, x30, [sp], #32
  41c720:	ret

000000000041c724 <strnull>:
  41c724:	sub	sp, sp, #0x10
  41c728:	str	x0, [sp, #8]
  41c72c:	ldr	x0, [sp, #8]
  41c730:	cmp	x0, #0x0
  41c734:	b.ne	41c740 <strnull+0x1c>  // b.any
  41c738:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c73c:	add	x0, x0, #0x7c0
  41c740:	add	sp, sp, #0x10
  41c744:	ret

000000000041c748 <ordered_hashmap_iterate>:
  41c748:	stp	x29, x30, [sp, #-48]!
  41c74c:	mov	x29, sp
  41c750:	str	x0, [sp, #40]
  41c754:	str	x1, [sp, #32]
  41c758:	str	x2, [sp, #24]
  41c75c:	str	x3, [sp, #16]
  41c760:	ldr	x3, [sp, #16]
  41c764:	ldr	x2, [sp, #24]
  41c768:	ldr	x1, [sp, #32]
  41c76c:	ldr	x0, [sp, #40]
  41c770:	bl	40b7b0 <internal_hashmap_iterate@plt>
  41c774:	and	w0, w0, #0xff
  41c778:	ldp	x29, x30, [sp], #48
  41c77c:	ret

000000000041c780 <closep>:
  41c780:	stp	x29, x30, [sp, #-32]!
  41c784:	mov	x29, sp
  41c788:	str	x0, [sp, #24]
  41c78c:	ldr	x0, [sp, #24]
  41c790:	ldr	w0, [x0]
  41c794:	bl	40aad0 <safe_close@plt>
  41c798:	nop
  41c79c:	ldp	x29, x30, [sp], #32
  41c7a0:	ret

000000000041c7a4 <closedirp>:
  41c7a4:	stp	x29, x30, [sp, #-32]!
  41c7a8:	mov	x29, sp
  41c7ac:	str	x0, [sp, #24]
  41c7b0:	ldr	x0, [sp, #24]
  41c7b4:	ldr	x0, [x0]
  41c7b8:	cmp	x0, #0x0
  41c7bc:	b.eq	41c7cc <closedirp+0x28>  // b.none
  41c7c0:	ldr	x0, [sp, #24]
  41c7c4:	ldr	x0, [x0]
  41c7c8:	bl	40adc0 <closedir@plt>
  41c7cc:	nop
  41c7d0:	ldp	x29, x30, [sp], #32
  41c7d4:	ret

000000000041c7d8 <gid_is_valid>:
  41c7d8:	stp	x29, x30, [sp, #-32]!
  41c7dc:	mov	x29, sp
  41c7e0:	str	w0, [sp, #28]
  41c7e4:	ldr	w0, [sp, #28]
  41c7e8:	bl	40aea0 <uid_is_valid@plt>
  41c7ec:	and	w0, w0, #0xff
  41c7f0:	ldp	x29, x30, [sp], #32
  41c7f4:	ret

000000000041c7f8 <node_symlink>:
  41c7f8:	stp	x29, x30, [sp, #-464]!
  41c7fc:	mov	x29, sp
  41c800:	stp	x19, x20, [sp, #16]
  41c804:	sub	sp, sp, #0x30
  41c808:	str	x0, [x29, #56]
  41c80c:	str	x1, [x29, #48]
  41c810:	str	x2, [x29, #40]
  41c814:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41c818:	ldr	x0, [x0, #4032]
  41c81c:	ldr	x1, [x0]
  41c820:	str	x1, [x29, #456]
  41c824:	mov	x1, #0x0                   	// #0
  41c828:	str	xzr, [x29, #152]
  41c82c:	str	xzr, [x29, #160]
  41c830:	ldr	x0, [x29, #56]
  41c834:	cmp	x0, #0x0
  41c838:	cset	w0, eq  // eq = none
  41c83c:	and	w0, w0, #0xff
  41c840:	and	x0, x0, #0xff
  41c844:	cmp	x0, #0x0
  41c848:	b.eq	41c874 <node_symlink+0x7c>  // b.none
  41c84c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c850:	add	x1, x0, #0x7cb
  41c854:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c858:	add	x4, x0, #0xe20
  41c85c:	mov	w3, #0x23                  	// #35
  41c860:	mov	x2, x1
  41c864:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c868:	add	x1, x0, #0x7e0
  41c86c:	mov	w0, #0x1                   	// #1
  41c870:	bl	40abb0 <log_assert_failed_realm@plt>
  41c874:	ldr	x0, [x29, #48]
  41c878:	cmp	x0, #0x0
  41c87c:	cset	w0, eq  // eq = none
  41c880:	and	w0, w0, #0xff
  41c884:	and	x0, x0, #0xff
  41c888:	cmp	x0, #0x0
  41c88c:	b.eq	41c8b8 <node_symlink+0xc0>  // b.none
  41c890:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c894:	add	x1, x0, #0x7cb
  41c898:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c89c:	add	x4, x0, #0xe20
  41c8a0:	mov	w3, #0x24                  	// #36
  41c8a4:	mov	x2, x1
  41c8a8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c8ac:	add	x1, x0, #0x7e8
  41c8b0:	mov	w0, #0x1                   	// #1
  41c8b4:	bl	40abb0 <log_assert_failed_realm@plt>
  41c8b8:	ldr	x0, [x29, #40]
  41c8bc:	cmp	x0, #0x0
  41c8c0:	cset	w0, eq  // eq = none
  41c8c4:	and	w0, w0, #0xff
  41c8c8:	and	x0, x0, #0xff
  41c8cc:	cmp	x0, #0x0
  41c8d0:	b.eq	41c8fc <node_symlink+0x104>  // b.none
  41c8d4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c8d8:	add	x1, x0, #0x7cb
  41c8dc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c8e0:	add	x4, x0, #0xe20
  41c8e4:	mov	w3, #0x25                  	// #37
  41c8e8:	mov	x2, x1
  41c8ec:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c8f0:	add	x1, x0, #0x7f0
  41c8f4:	mov	w0, #0x1                   	// #1
  41c8f8:	bl	40abb0 <log_assert_failed_realm@plt>
  41c8fc:	ldr	x0, [x29, #40]
  41c900:	bl	40ac20 <dirname_malloc@plt>
  41c904:	str	x0, [x29, #152]
  41c908:	ldr	x0, [x29, #152]
  41c90c:	cmp	x0, #0x0
  41c910:	b.ne	41c938 <node_symlink+0x140>  // b.any
  41c914:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c918:	add	x1, x0, #0x7cb
  41c91c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c920:	add	x3, x0, #0xe30
  41c924:	mov	w2, #0x29                  	// #41
  41c928:	mov	w0, #0x1                   	// #1
  41c92c:	bl	40bda0 <log_oom_internal@plt>
  41c930:	mov	w19, w0
  41c934:	b	41d494 <node_symlink+0xc9c>
  41c938:	ldr	x0, [x29, #152]
  41c93c:	add	x1, x29, #0xa0
  41c940:	mov	x2, x1
  41c944:	ldr	x1, [x29, #48]
  41c948:	bl	40aef0 <path_make_relative@plt>
  41c94c:	str	w0, [x29, #76]
  41c950:	ldr	w0, [x29, #76]
  41c954:	cmp	w0, #0x0
  41c958:	b.ge	41ca30 <node_symlink+0x238>  // b.tcont
  41c95c:	str	xzr, [x29, #176]
  41c960:	ldr	x0, [x29, #56]
  41c964:	str	x0, [x29, #296]
  41c968:	mov	w0, #0x3                   	// #3
  41c96c:	str	w0, [x29, #144]
  41c970:	ldr	w0, [x29, #76]
  41c974:	str	w0, [x29, #148]
  41c978:	ldr	x0, [x29, #296]
  41c97c:	cmp	x0, #0x0
  41c980:	b.eq	41c9bc <node_symlink+0x1c4>  // b.none
  41c984:	mov	w0, #0x1                   	// #1
  41c988:	bl	40be30 <log_get_max_level_realm@plt>
  41c98c:	mov	w1, w0
  41c990:	ldr	w0, [x29, #144]
  41c994:	cmp	w0, w1
  41c998:	cset	w0, le
  41c99c:	and	w0, w0, #0xff
  41c9a0:	and	x0, x0, #0xff
  41c9a4:	cmp	x0, #0x0
  41c9a8:	b.eq	41c9bc <node_symlink+0x1c4>  // b.none
  41c9ac:	add	x0, x29, #0xb0
  41c9b0:	mov	x1, x0
  41c9b4:	ldr	x0, [x29, #296]
  41c9b8:	bl	40aba0 <sd_device_get_sysname@plt>
  41c9bc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c9c0:	add	x2, x0, #0x7cb
  41c9c4:	ldr	x0, [x29, #176]
  41c9c8:	cmp	x0, #0x0
  41c9cc:	b.eq	41c9dc <node_symlink+0x1e4>  // b.none
  41c9d0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c9d4:	add	x0, x0, #0x7f8
  41c9d8:	b	41c9e0 <node_symlink+0x1e8>
  41c9dc:	mov	x0, #0x0                   	// #0
  41c9e0:	ldr	x3, [x29, #176]
  41c9e4:	ldr	x1, [x29, #48]
  41c9e8:	str	x1, [sp, #24]
  41c9ec:	ldr	x1, [x29, #40]
  41c9f0:	str	x1, [sp, #16]
  41c9f4:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41c9f8:	add	x1, x1, #0x800
  41c9fc:	str	x1, [sp, #8]
  41ca00:	str	xzr, [sp]
  41ca04:	mov	x7, #0x0                   	// #0
  41ca08:	mov	x6, x3
  41ca0c:	mov	x5, x0
  41ca10:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ca14:	add	x4, x0, #0xe30
  41ca18:	mov	w3, #0x2e                  	// #46
  41ca1c:	ldr	w1, [x29, #148]
  41ca20:	ldr	w0, [x29, #144]
  41ca24:	bl	40b020 <log_object_internal@plt>
  41ca28:	mov	w19, w0
  41ca2c:	b	41d494 <node_symlink+0xc9c>
  41ca30:	add	x0, x29, #0x148
  41ca34:	mov	x1, x0
  41ca38:	ldr	x0, [x29, #40]
  41ca3c:	bl	4505c0 <lstat64>
  41ca40:	cmp	w0, #0x0
  41ca44:	b.ne	41cc84 <node_symlink+0x48c>  // b.any
  41ca48:	ldr	w0, [x29, #344]
  41ca4c:	and	w0, w0, #0xf000
  41ca50:	cmp	w0, #0x6, lsl #12
  41ca54:	b.eq	41ca68 <node_symlink+0x270>  // b.none
  41ca58:	ldr	w0, [x29, #344]
  41ca5c:	and	w0, w0, #0xf000
  41ca60:	cmp	w0, #0x2, lsl #12
  41ca64:	b.ne	41cb38 <node_symlink+0x340>  // b.any
  41ca68:	str	xzr, [x29, #176]
  41ca6c:	ldr	x0, [x29, #56]
  41ca70:	str	x0, [x29, #232]
  41ca74:	mov	w0, #0x3                   	// #3
  41ca78:	str	w0, [x29, #104]
  41ca7c:	str	wzr, [x29, #108]
  41ca80:	ldr	x0, [x29, #232]
  41ca84:	cmp	x0, #0x0
  41ca88:	b.eq	41cac4 <node_symlink+0x2cc>  // b.none
  41ca8c:	mov	w0, #0x1                   	// #1
  41ca90:	bl	40be30 <log_get_max_level_realm@plt>
  41ca94:	mov	w1, w0
  41ca98:	ldr	w0, [x29, #104]
  41ca9c:	cmp	w0, w1
  41caa0:	cset	w0, le
  41caa4:	and	w0, w0, #0xff
  41caa8:	and	x0, x0, #0xff
  41caac:	cmp	x0, #0x0
  41cab0:	b.eq	41cac4 <node_symlink+0x2cc>  // b.none
  41cab4:	add	x0, x29, #0xb0
  41cab8:	mov	x1, x0
  41cabc:	ldr	x0, [x29, #232]
  41cac0:	bl	40aba0 <sd_device_get_sysname@plt>
  41cac4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cac8:	add	x2, x0, #0x7cb
  41cacc:	ldr	x0, [x29, #176]
  41cad0:	cmp	x0, #0x0
  41cad4:	b.eq	41cae4 <node_symlink+0x2ec>  // b.none
  41cad8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cadc:	add	x0, x0, #0x7f8
  41cae0:	b	41cae8 <node_symlink+0x2f0>
  41cae4:	mov	x0, #0x0                   	// #0
  41cae8:	ldr	x3, [x29, #176]
  41caec:	ldr	x1, [x29, #48]
  41caf0:	str	x1, [sp, #24]
  41caf4:	ldr	x1, [x29, #40]
  41caf8:	str	x1, [sp, #16]
  41cafc:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cb00:	add	x1, x1, #0x838
  41cb04:	str	x1, [sp, #8]
  41cb08:	str	xzr, [sp]
  41cb0c:	mov	x7, #0x0                   	// #0
  41cb10:	mov	x6, x3
  41cb14:	mov	x5, x0
  41cb18:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cb1c:	add	x4, x0, #0xe30
  41cb20:	mov	w3, #0x33                  	// #51
  41cb24:	ldr	w1, [x29, #108]
  41cb28:	ldr	w0, [x29, #104]
  41cb2c:	bl	40b020 <log_object_internal@plt>
  41cb30:	mov	w19, #0xffffffa1            	// #-95
  41cb34:	b	41d494 <node_symlink+0xc9c>
  41cb38:	ldr	w0, [x29, #344]
  41cb3c:	and	w0, w0, #0xf000
  41cb40:	cmp	w0, #0xa, lsl #12
  41cb44:	b.ne	41ced8 <node_symlink+0x6e0>  // b.any
  41cb48:	str	xzr, [x29, #168]
  41cb4c:	add	x0, x29, #0xa8
  41cb50:	mov	x1, x0
  41cb54:	ldr	x0, [x29, #40]
  41cb58:	bl	40bb40 <readlink_malloc@plt>
  41cb5c:	cmp	w0, #0x0
  41cb60:	b.lt	41cc6c <node_symlink+0x474>  // b.tstop
  41cb64:	ldr	x0, [x29, #160]
  41cb68:	ldr	x1, [x29, #168]
  41cb6c:	bl	40b710 <strcmp@plt>
  41cb70:	cmp	w0, #0x0
  41cb74:	b.ne	41cc6c <node_symlink+0x474>  // b.any
  41cb78:	str	xzr, [x29, #176]
  41cb7c:	ldr	x0, [x29, #56]
  41cb80:	str	x0, [x29, #224]
  41cb84:	mov	w0, #0x7                   	// #7
  41cb88:	str	w0, [x29, #96]
  41cb8c:	str	wzr, [x29, #100]
  41cb90:	ldr	x0, [x29, #224]
  41cb94:	cmp	x0, #0x0
  41cb98:	b.eq	41cbd4 <node_symlink+0x3dc>  // b.none
  41cb9c:	mov	w0, #0x1                   	// #1
  41cba0:	bl	40be30 <log_get_max_level_realm@plt>
  41cba4:	mov	w1, w0
  41cba8:	ldr	w0, [x29, #96]
  41cbac:	cmp	w0, w1
  41cbb0:	cset	w0, le
  41cbb4:	and	w0, w0, #0xff
  41cbb8:	and	x0, x0, #0xff
  41cbbc:	cmp	x0, #0x0
  41cbc0:	b.eq	41cbd4 <node_symlink+0x3dc>  // b.none
  41cbc4:	add	x0, x29, #0xb0
  41cbc8:	mov	x1, x0
  41cbcc:	ldr	x0, [x29, #224]
  41cbd0:	bl	40aba0 <sd_device_get_sysname@plt>
  41cbd4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cbd8:	add	x2, x0, #0x7cb
  41cbdc:	ldr	x0, [x29, #176]
  41cbe0:	cmp	x0, #0x0
  41cbe4:	b.eq	41cbf4 <node_symlink+0x3fc>  // b.none
  41cbe8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cbec:	add	x0, x0, #0x7f8
  41cbf0:	b	41cbf8 <node_symlink+0x400>
  41cbf4:	mov	x0, #0x0                   	// #0
  41cbf8:	ldr	x3, [x29, #176]
  41cbfc:	ldr	x1, [x29, #160]
  41cc00:	str	x1, [sp, #24]
  41cc04:	ldr	x1, [x29, #40]
  41cc08:	str	x1, [sp, #16]
  41cc0c:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cc10:	add	x1, x1, #0x880
  41cc14:	str	x1, [sp, #8]
  41cc18:	str	xzr, [sp]
  41cc1c:	mov	x7, #0x0                   	// #0
  41cc20:	mov	x6, x3
  41cc24:	mov	x5, x0
  41cc28:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cc2c:	add	x4, x0, #0xe30
  41cc30:	mov	w3, #0x3a                  	// #58
  41cc34:	ldr	w1, [x29, #100]
  41cc38:	ldr	w0, [x29, #96]
  41cc3c:	bl	40b020 <log_object_internal@plt>
  41cc40:	mov	w1, #0x1                   	// #1
  41cc44:	ldr	x0, [x29, #40]
  41cc48:	bl	40be50 <label_fix@plt>
  41cc4c:	mov	w3, #0x100                 	// #256
  41cc50:	mov	x2, #0x0                   	// #0
  41cc54:	ldr	x1, [x29, #40]
  41cc58:	mov	w0, #0xffffff9c            	// #-100
  41cc5c:	bl	40b340 <utimensat@plt>
  41cc60:	mov	w19, #0x0                   	// #0
  41cc64:	mov	w20, #0x0                   	// #0
  41cc68:	b	41cc70 <node_symlink+0x478>
  41cc6c:	mov	w20, #0x1                   	// #1
  41cc70:	add	x0, x29, #0xa8
  41cc74:	bl	41c650 <freep>
  41cc78:	cmp	w20, #0x1
  41cc7c:	b.ne	41d494 <node_symlink+0xc9c>  // b.any
  41cc80:	b	41ced8 <node_symlink+0x6e0>
  41cc84:	str	xzr, [x29, #176]
  41cc88:	ldr	x0, [x29, #56]
  41cc8c:	str	x0, [x29, #208]
  41cc90:	mov	w0, #0x7                   	// #7
  41cc94:	str	w0, [x29, #80]
  41cc98:	str	wzr, [x29, #84]
  41cc9c:	ldr	x0, [x29, #208]
  41cca0:	cmp	x0, #0x0
  41cca4:	b.eq	41cce0 <node_symlink+0x4e8>  // b.none
  41cca8:	mov	w0, #0x1                   	// #1
  41ccac:	bl	40be30 <log_get_max_level_realm@plt>
  41ccb0:	mov	w1, w0
  41ccb4:	ldr	w0, [x29, #80]
  41ccb8:	cmp	w0, w1
  41ccbc:	cset	w0, le
  41ccc0:	and	w0, w0, #0xff
  41ccc4:	and	x0, x0, #0xff
  41ccc8:	cmp	x0, #0x0
  41cccc:	b.eq	41cce0 <node_symlink+0x4e8>  // b.none
  41ccd0:	add	x0, x29, #0xb0
  41ccd4:	mov	x1, x0
  41ccd8:	ldr	x0, [x29, #208]
  41ccdc:	bl	40aba0 <sd_device_get_sysname@plt>
  41cce0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cce4:	add	x2, x0, #0x7cb
  41cce8:	ldr	x0, [x29, #176]
  41ccec:	cmp	x0, #0x0
  41ccf0:	b.eq	41cd00 <node_symlink+0x508>  // b.none
  41ccf4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ccf8:	add	x0, x0, #0x7f8
  41ccfc:	b	41cd04 <node_symlink+0x50c>
  41cd00:	mov	x0, #0x0                   	// #0
  41cd04:	ldr	x3, [x29, #176]
  41cd08:	ldr	x1, [x29, #160]
  41cd0c:	str	x1, [sp, #24]
  41cd10:	ldr	x1, [x29, #40]
  41cd14:	str	x1, [sp, #16]
  41cd18:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cd1c:	add	x1, x1, #0x8b0
  41cd20:	str	x1, [sp, #8]
  41cd24:	str	xzr, [sp]
  41cd28:	mov	x7, #0x0                   	// #0
  41cd2c:	mov	x6, x3
  41cd30:	mov	x5, x0
  41cd34:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cd38:	add	x4, x0, #0xe30
  41cd3c:	mov	w3, #0x41                  	// #65
  41cd40:	ldr	w1, [x29, #84]
  41cd44:	ldr	w0, [x29, #80]
  41cd48:	bl	40b020 <log_object_internal@plt>
  41cd4c:	mov	w1, #0x1ed                 	// #493
  41cd50:	ldr	x0, [x29, #40]
  41cd54:	bl	40a390 <mkdir_parents_label@plt>
  41cd58:	str	w0, [x29, #76]
  41cd5c:	strb	wzr, [x29, #74]
  41cd60:	ldr	w0, [x29, #76]
  41cd64:	cmn	w0, #0x2
  41cd68:	b.eq	41cd78 <node_symlink+0x580>  // b.none
  41cd6c:	ldr	w0, [x29, #76]
  41cd70:	cmp	w0, #0x0
  41cd74:	b.ne	41cd80 <node_symlink+0x588>  // b.any
  41cd78:	mov	w0, #0x1                   	// #1
  41cd7c:	strb	w0, [x29, #74]
  41cd80:	nop
  41cd84:	ldrb	w0, [x29, #74]
  41cd88:	eor	w0, w0, #0x1
  41cd8c:	and	w0, w0, #0xff
  41cd90:	cmp	w0, #0x0
  41cd94:	b.ne	41cddc <node_symlink+0x5e4>  // b.any
  41cd98:	mov	w1, #0xa000                	// #40960
  41cd9c:	ldr	x0, [x29, #40]
  41cda0:	bl	40a660 <mac_selinux_create_file_prepare@plt>
  41cda4:	ldr	x0, [x29, #160]
  41cda8:	ldr	x1, [x29, #40]
  41cdac:	bl	40aa00 <symlink@plt>
  41cdb0:	cmp	w0, #0x0
  41cdb4:	b.ge	41cdc8 <node_symlink+0x5d0>  // b.tcont
  41cdb8:	bl	40b040 <__errno_location@plt>
  41cdbc:	ldr	w0, [x0]
  41cdc0:	neg	w0, w0
  41cdc4:	str	w0, [x29, #76]
  41cdc8:	bl	40b7d0 <mac_selinux_create_file_clear@plt>
  41cdcc:	ldr	w0, [x29, #76]
  41cdd0:	cmn	w0, #0x2
  41cdd4:	b.eq	41cd4c <node_symlink+0x554>  // b.none
  41cdd8:	b	41cde0 <node_symlink+0x5e8>
  41cddc:	nop
  41cde0:	ldr	w0, [x29, #76]
  41cde4:	cmp	w0, #0x0
  41cde8:	b.ne	41cdf4 <node_symlink+0x5fc>  // b.any
  41cdec:	mov	w19, #0x0                   	// #0
  41cdf0:	b	41d494 <node_symlink+0xc9c>
  41cdf4:	ldr	w0, [x29, #76]
  41cdf8:	cmp	w0, #0x0
  41cdfc:	b.ge	41ced8 <node_symlink+0x6e0>  // b.tcont
  41ce00:	str	xzr, [x29, #176]
  41ce04:	ldr	x0, [x29, #56]
  41ce08:	str	x0, [x29, #216]
  41ce0c:	mov	w0, #0x7                   	// #7
  41ce10:	str	w0, [x29, #88]
  41ce14:	ldr	w0, [x29, #76]
  41ce18:	str	w0, [x29, #92]
  41ce1c:	ldr	x0, [x29, #216]
  41ce20:	cmp	x0, #0x0
  41ce24:	b.eq	41ce60 <node_symlink+0x668>  // b.none
  41ce28:	mov	w0, #0x1                   	// #1
  41ce2c:	bl	40be30 <log_get_max_level_realm@plt>
  41ce30:	mov	w1, w0
  41ce34:	ldr	w0, [x29, #88]
  41ce38:	cmp	w0, w1
  41ce3c:	cset	w0, le
  41ce40:	and	w0, w0, #0xff
  41ce44:	and	x0, x0, #0xff
  41ce48:	cmp	x0, #0x0
  41ce4c:	b.eq	41ce60 <node_symlink+0x668>  // b.none
  41ce50:	add	x0, x29, #0xb0
  41ce54:	mov	x1, x0
  41ce58:	ldr	x0, [x29, #216]
  41ce5c:	bl	40aba0 <sd_device_get_sysname@plt>
  41ce60:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ce64:	add	x8, x0, #0x7cb
  41ce68:	ldr	x0, [x29, #176]
  41ce6c:	cmp	x0, #0x0
  41ce70:	b.eq	41ce80 <node_symlink+0x688>  // b.none
  41ce74:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ce78:	add	x0, x0, #0x7f8
  41ce7c:	b	41ce84 <node_symlink+0x68c>
  41ce80:	mov	x0, #0x0                   	// #0
  41ce84:	ldr	x3, [x29, #176]
  41ce88:	ldr	x1, [x29, #160]
  41ce8c:	ldr	x2, [x29, #40]
  41ce90:	str	x2, [sp, #32]
  41ce94:	str	x1, [sp, #24]
  41ce98:	ldr	x1, [x29, #40]
  41ce9c:	str	x1, [sp, #16]
  41cea0:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cea4:	add	x1, x1, #0x8d0
  41cea8:	str	x1, [sp, #8]
  41ceac:	str	xzr, [sp]
  41ceb0:	mov	x7, #0x0                   	// #0
  41ceb4:	mov	x6, x3
  41ceb8:	mov	x5, x0
  41cebc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cec0:	add	x4, x0, #0xe30
  41cec4:	mov	w3, #0x4e                  	// #78
  41cec8:	mov	x2, x8
  41cecc:	ldr	w1, [x29, #92]
  41ced0:	ldr	w0, [x29, #88]
  41ced4:	bl	40b020 <log_object_internal@plt>
  41ced8:	str	xzr, [x29, #176]
  41cedc:	ldr	x0, [x29, #56]
  41cee0:	str	x0, [x29, #240]
  41cee4:	mov	w0, #0x7                   	// #7
  41cee8:	str	w0, [x29, #112]
  41ceec:	str	wzr, [x29, #116]
  41cef0:	ldr	x0, [x29, #240]
  41cef4:	cmp	x0, #0x0
  41cef8:	b.eq	41cf34 <node_symlink+0x73c>  // b.none
  41cefc:	mov	w0, #0x1                   	// #1
  41cf00:	bl	40be30 <log_get_max_level_realm@plt>
  41cf04:	mov	w1, w0
  41cf08:	ldr	w0, [x29, #112]
  41cf0c:	cmp	w0, w1
  41cf10:	cset	w0, le
  41cf14:	and	w0, w0, #0xff
  41cf18:	and	x0, x0, #0xff
  41cf1c:	cmp	x0, #0x0
  41cf20:	b.eq	41cf34 <node_symlink+0x73c>  // b.none
  41cf24:	add	x0, x29, #0xb0
  41cf28:	mov	x1, x0
  41cf2c:	ldr	x0, [x29, #240]
  41cf30:	bl	40aba0 <sd_device_get_sysname@plt>
  41cf34:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cf38:	add	x2, x0, #0x7cb
  41cf3c:	ldr	x0, [x29, #176]
  41cf40:	cmp	x0, #0x0
  41cf44:	b.eq	41cf54 <node_symlink+0x75c>  // b.none
  41cf48:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cf4c:	add	x0, x0, #0x7f8
  41cf50:	b	41cf58 <node_symlink+0x760>
  41cf54:	mov	x0, #0x0                   	// #0
  41cf58:	ldr	x3, [x29, #176]
  41cf5c:	ldr	x1, [x29, #40]
  41cf60:	str	x1, [sp, #16]
  41cf64:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cf68:	add	x1, x1, #0x918
  41cf6c:	str	x1, [sp, #8]
  41cf70:	str	xzr, [sp]
  41cf74:	mov	x7, #0x0                   	// #0
  41cf78:	mov	x6, x3
  41cf7c:	mov	x5, x0
  41cf80:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41cf84:	add	x4, x0, #0xe30
  41cf88:	mov	w3, #0x51                  	// #81
  41cf8c:	ldr	w1, [x29, #116]
  41cf90:	ldr	w0, [x29, #112]
  41cf94:	bl	40b020 <log_object_internal@plt>
  41cf98:	add	x0, x29, #0xa8
  41cf9c:	mov	x1, x0
  41cfa0:	ldr	x0, [x29, #56]
  41cfa4:	bl	40bd00 <device_get_id_filename@plt>
  41cfa8:	str	w0, [x29, #76]
  41cfac:	ldr	w0, [x29, #76]
  41cfb0:	cmp	w0, #0x0
  41cfb4:	b.ge	41d07c <node_symlink+0x884>  // b.tcont
  41cfb8:	str	xzr, [x29, #176]
  41cfbc:	ldr	x0, [x29, #56]
  41cfc0:	str	x0, [x29, #288]
  41cfc4:	mov	w0, #0x3                   	// #3
  41cfc8:	str	w0, [x29, #136]
  41cfcc:	ldr	w0, [x29, #76]
  41cfd0:	str	w0, [x29, #140]
  41cfd4:	ldr	x0, [x29, #288]
  41cfd8:	cmp	x0, #0x0
  41cfdc:	b.eq	41d018 <node_symlink+0x820>  // b.none
  41cfe0:	mov	w0, #0x1                   	// #1
  41cfe4:	bl	40be30 <log_get_max_level_realm@plt>
  41cfe8:	mov	w1, w0
  41cfec:	ldr	w0, [x29, #136]
  41cff0:	cmp	w0, w1
  41cff4:	cset	w0, le
  41cff8:	and	w0, w0, #0xff
  41cffc:	and	x0, x0, #0xff
  41d000:	cmp	x0, #0x0
  41d004:	b.eq	41d018 <node_symlink+0x820>  // b.none
  41d008:	add	x0, x29, #0xb0
  41d00c:	mov	x1, x0
  41d010:	ldr	x0, [x29, #288]
  41d014:	bl	40aba0 <sd_device_get_sysname@plt>
  41d018:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d01c:	add	x2, x0, #0x7cb
  41d020:	ldr	x0, [x29, #176]
  41d024:	cmp	x0, #0x0
  41d028:	b.eq	41d038 <node_symlink+0x840>  // b.none
  41d02c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d030:	add	x0, x0, #0x7f8
  41d034:	b	41d03c <node_symlink+0x844>
  41d038:	mov	x0, #0x0                   	// #0
  41d03c:	ldr	x3, [x29, #176]
  41d040:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d044:	add	x1, x1, #0x930
  41d048:	str	x1, [sp, #8]
  41d04c:	str	xzr, [sp]
  41d050:	mov	x7, #0x0                   	// #0
  41d054:	mov	x6, x3
  41d058:	mov	x5, x0
  41d05c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d060:	add	x4, x0, #0xe30
  41d064:	mov	w3, #0x54                  	// #84
  41d068:	ldr	w1, [x29, #140]
  41d06c:	ldr	w0, [x29, #136]
  41d070:	bl	40b020 <log_object_internal@plt>
  41d074:	mov	w19, w0
  41d078:	b	41d494 <node_symlink+0xc9c>
  41d07c:	ldr	x0, [x29, #40]
  41d080:	str	x0, [x29, #304]
  41d084:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d088:	add	x0, x0, #0x950
  41d08c:	str	x0, [x29, #312]
  41d090:	ldr	x0, [x29, #168]
  41d094:	str	x0, [x29, #320]
  41d098:	str	xzr, [x29, #192]
  41d09c:	str	xzr, [x29, #200]
  41d0a0:	b	41d0d4 <node_symlink+0x8dc>
  41d0a4:	ldr	x0, [x29, #200]
  41d0a8:	lsl	x0, x0, #3
  41d0ac:	add	x1, x29, #0x130
  41d0b0:	ldr	x0, [x1, x0]
  41d0b4:	bl	40bd10 <strlen@plt>
  41d0b8:	mov	x1, x0
  41d0bc:	ldr	x0, [x29, #192]
  41d0c0:	add	x0, x0, x1
  41d0c4:	str	x0, [x29, #192]
  41d0c8:	ldr	x0, [x29, #200]
  41d0cc:	add	x0, x0, #0x1
  41d0d0:	str	x0, [x29, #200]
  41d0d4:	ldr	x0, [x29, #200]
  41d0d8:	cmp	x0, #0x2
  41d0dc:	b.hi	41d0f8 <node_symlink+0x900>  // b.pmore
  41d0e0:	ldr	x0, [x29, #200]
  41d0e4:	lsl	x0, x0, #3
  41d0e8:	add	x1, x29, #0x130
  41d0ec:	ldr	x0, [x1, x0]
  41d0f0:	cmp	x0, #0x0
  41d0f4:	b.ne	41d0a4 <node_symlink+0x8ac>  // b.any
  41d0f8:	ldr	x0, [x29, #192]
  41d0fc:	add	x0, x0, #0x1
  41d100:	str	x0, [x29, #248]
  41d104:	ldr	x1, [x29, #248]
  41d108:	mov	x0, #0x1                   	// #1
  41d10c:	bl	41c674 <size_multiply_overflow>
  41d110:	and	w0, w0, #0xff
  41d114:	and	x0, x0, #0xff
  41d118:	cmp	x0, #0x0
  41d11c:	b.eq	41d148 <node_symlink+0x950>  // b.none
  41d120:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d124:	add	x1, x0, #0x7cb
  41d128:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d12c:	add	x4, x0, #0xe20
  41d130:	mov	w3, #0x55                  	// #85
  41d134:	mov	x2, x1
  41d138:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d13c:	add	x1, x0, #0x958
  41d140:	mov	w0, #0x1                   	// #1
  41d144:	bl	40abb0 <log_assert_failed_realm@plt>
  41d148:	ldr	x0, [x29, #248]
  41d14c:	cmp	x0, #0x400, lsl #12
  41d150:	cset	w0, hi  // hi = pmore
  41d154:	and	w0, w0, #0xff
  41d158:	and	x0, x0, #0xff
  41d15c:	cmp	x0, #0x0
  41d160:	b.eq	41d18c <node_symlink+0x994>  // b.none
  41d164:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d168:	add	x1, x0, #0x7cb
  41d16c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d170:	add	x4, x0, #0xe20
  41d174:	mov	w3, #0x55                  	// #85
  41d178:	mov	x2, x1
  41d17c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d180:	add	x1, x0, #0x988
  41d184:	mov	w0, #0x1                   	// #1
  41d188:	bl	40abb0 <log_assert_failed_realm@plt>
  41d18c:	ldr	x0, [x29, #248]
  41d190:	add	x0, x0, #0xf
  41d194:	lsr	x0, x0, #4
  41d198:	lsl	x0, x0, #4
  41d19c:	sub	sp, sp, x0
  41d1a0:	add	x0, sp, #0x30
  41d1a4:	add	x0, x0, #0xf
  41d1a8:	lsr	x0, x0, #4
  41d1ac:	lsl	x0, x0, #4
  41d1b0:	str	x0, [x29, #256]
  41d1b4:	ldr	x0, [x29, #256]
  41d1b8:	str	x0, [x29, #184]
  41d1bc:	str	xzr, [x29, #200]
  41d1c0:	b	41d1f0 <node_symlink+0x9f8>
  41d1c4:	ldr	x0, [x29, #200]
  41d1c8:	lsl	x0, x0, #3
  41d1cc:	add	x1, x29, #0x130
  41d1d0:	ldr	x0, [x1, x0]
  41d1d4:	mov	x1, x0
  41d1d8:	ldr	x0, [x29, #184]
  41d1dc:	bl	40a510 <stpcpy@plt>
  41d1e0:	str	x0, [x29, #184]
  41d1e4:	ldr	x0, [x29, #200]
  41d1e8:	add	x0, x0, #0x1
  41d1ec:	str	x0, [x29, #200]
  41d1f0:	ldr	x0, [x29, #200]
  41d1f4:	cmp	x0, #0x2
  41d1f8:	b.hi	41d214 <node_symlink+0xa1c>  // b.pmore
  41d1fc:	ldr	x0, [x29, #200]
  41d200:	lsl	x0, x0, #3
  41d204:	add	x1, x29, #0x130
  41d208:	ldr	x0, [x1, x0]
  41d20c:	cmp	x0, #0x0
  41d210:	b.ne	41d1c4 <node_symlink+0x9cc>  // b.any
  41d214:	ldr	x0, [x29, #184]
  41d218:	strb	wzr, [x0]
  41d21c:	ldr	x0, [x29, #256]
  41d220:	str	x0, [x29, #264]
  41d224:	ldr	x0, [x29, #264]
  41d228:	bl	40a3f0 <unlink@plt>
  41d22c:	mov	w1, #0x1ed                 	// #493
  41d230:	ldr	x0, [x29, #264]
  41d234:	bl	40a390 <mkdir_parents_label@plt>
  41d238:	str	w0, [x29, #76]
  41d23c:	strb	wzr, [x29, #75]
  41d240:	ldr	w0, [x29, #76]
  41d244:	cmn	w0, #0x2
  41d248:	b.eq	41d258 <node_symlink+0xa60>  // b.none
  41d24c:	ldr	w0, [x29, #76]
  41d250:	cmp	w0, #0x0
  41d254:	b.ne	41d260 <node_symlink+0xa68>  // b.any
  41d258:	mov	w0, #0x1                   	// #1
  41d25c:	strb	w0, [x29, #75]
  41d260:	nop
  41d264:	ldrb	w0, [x29, #75]
  41d268:	eor	w0, w0, #0x1
  41d26c:	and	w0, w0, #0xff
  41d270:	cmp	w0, #0x0
  41d274:	b.ne	41d2bc <node_symlink+0xac4>  // b.any
  41d278:	mov	w1, #0xa000                	// #40960
  41d27c:	ldr	x0, [x29, #264]
  41d280:	bl	40a660 <mac_selinux_create_file_prepare@plt>
  41d284:	ldr	x0, [x29, #160]
  41d288:	ldr	x1, [x29, #264]
  41d28c:	bl	40aa00 <symlink@plt>
  41d290:	cmp	w0, #0x0
  41d294:	b.ge	41d2a8 <node_symlink+0xab0>  // b.tcont
  41d298:	bl	40b040 <__errno_location@plt>
  41d29c:	ldr	w0, [x0]
  41d2a0:	neg	w0, w0
  41d2a4:	str	w0, [x29, #76]
  41d2a8:	bl	40b7d0 <mac_selinux_create_file_clear@plt>
  41d2ac:	ldr	w0, [x29, #76]
  41d2b0:	cmn	w0, #0x2
  41d2b4:	b.eq	41d22c <node_symlink+0xa34>  // b.none
  41d2b8:	b	41d2c0 <node_symlink+0xac8>
  41d2bc:	nop
  41d2c0:	ldr	w0, [x29, #76]
  41d2c4:	cmp	w0, #0x0
  41d2c8:	b.ge	41d3a0 <node_symlink+0xba8>  // b.tcont
  41d2cc:	str	xzr, [x29, #176]
  41d2d0:	ldr	x0, [x29, #56]
  41d2d4:	str	x0, [x29, #280]
  41d2d8:	mov	w0, #0x3                   	// #3
  41d2dc:	str	w0, [x29, #128]
  41d2e0:	ldr	w0, [x29, #76]
  41d2e4:	str	w0, [x29, #132]
  41d2e8:	ldr	x0, [x29, #280]
  41d2ec:	cmp	x0, #0x0
  41d2f0:	b.eq	41d32c <node_symlink+0xb34>  // b.none
  41d2f4:	mov	w0, #0x1                   	// #1
  41d2f8:	bl	40be30 <log_get_max_level_realm@plt>
  41d2fc:	mov	w1, w0
  41d300:	ldr	w0, [x29, #128]
  41d304:	cmp	w0, w1
  41d308:	cset	w0, le
  41d30c:	and	w0, w0, #0xff
  41d310:	and	x0, x0, #0xff
  41d314:	cmp	x0, #0x0
  41d318:	b.eq	41d32c <node_symlink+0xb34>  // b.none
  41d31c:	add	x0, x29, #0xb0
  41d320:	mov	x1, x0
  41d324:	ldr	x0, [x29, #280]
  41d328:	bl	40aba0 <sd_device_get_sysname@plt>
  41d32c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d330:	add	x2, x0, #0x7cb
  41d334:	ldr	x0, [x29, #176]
  41d338:	cmp	x0, #0x0
  41d33c:	b.eq	41d34c <node_symlink+0xb54>  // b.none
  41d340:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d344:	add	x0, x0, #0x7f8
  41d348:	b	41d350 <node_symlink+0xb58>
  41d34c:	mov	x0, #0x0                   	// #0
  41d350:	ldr	x3, [x29, #176]
  41d354:	ldr	x1, [x29, #160]
  41d358:	str	x1, [sp, #24]
  41d35c:	ldr	x1, [x29, #264]
  41d360:	str	x1, [sp, #16]
  41d364:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d368:	add	x1, x1, #0x9a8
  41d36c:	str	x1, [sp, #8]
  41d370:	str	xzr, [sp]
  41d374:	mov	x7, #0x0                   	// #0
  41d378:	mov	x6, x3
  41d37c:	mov	x5, x0
  41d380:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d384:	add	x4, x0, #0xe30
  41d388:	mov	w3, #0x61                  	// #97
  41d38c:	ldr	w1, [x29, #132]
  41d390:	ldr	w0, [x29, #128]
  41d394:	bl	40b020 <log_object_internal@plt>
  41d398:	mov	w19, w0
  41d39c:	b	41d494 <node_symlink+0xc9c>
  41d3a0:	ldr	x1, [x29, #40]
  41d3a4:	ldr	x0, [x29, #264]
  41d3a8:	bl	40a730 <rename@plt>
  41d3ac:	cmp	w0, #0x0
  41d3b0:	b.ge	41d490 <node_symlink+0xc98>  // b.tcont
  41d3b4:	str	xzr, [x29, #176]
  41d3b8:	ldr	x0, [x29, #56]
  41d3bc:	str	x0, [x29, #272]
  41d3c0:	mov	w0, #0x3                   	// #3
  41d3c4:	str	w0, [x29, #120]
  41d3c8:	bl	40b040 <__errno_location@plt>
  41d3cc:	ldr	w0, [x0]
  41d3d0:	str	w0, [x29, #124]
  41d3d4:	ldr	x0, [x29, #272]
  41d3d8:	cmp	x0, #0x0
  41d3dc:	b.eq	41d418 <node_symlink+0xc20>  // b.none
  41d3e0:	mov	w0, #0x1                   	// #1
  41d3e4:	bl	40be30 <log_get_max_level_realm@plt>
  41d3e8:	mov	w1, w0
  41d3ec:	ldr	w0, [x29, #120]
  41d3f0:	cmp	w0, w1
  41d3f4:	cset	w0, le
  41d3f8:	and	w0, w0, #0xff
  41d3fc:	and	x0, x0, #0xff
  41d400:	cmp	x0, #0x0
  41d404:	b.eq	41d418 <node_symlink+0xc20>  // b.none
  41d408:	add	x0, x29, #0xb0
  41d40c:	mov	x1, x0
  41d410:	ldr	x0, [x29, #272]
  41d414:	bl	40aba0 <sd_device_get_sysname@plt>
  41d418:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d41c:	add	x2, x0, #0x7cb
  41d420:	ldr	x0, [x29, #176]
  41d424:	cmp	x0, #0x0
  41d428:	b.eq	41d438 <node_symlink+0xc40>  // b.none
  41d42c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d430:	add	x0, x0, #0x7f8
  41d434:	b	41d43c <node_symlink+0xc44>
  41d438:	mov	x0, #0x0                   	// #0
  41d43c:	ldr	x3, [x29, #176]
  41d440:	ldr	x1, [x29, #40]
  41d444:	str	x1, [sp, #24]
  41d448:	ldr	x1, [x29, #264]
  41d44c:	str	x1, [sp, #16]
  41d450:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d454:	add	x1, x1, #0x9d8
  41d458:	str	x1, [sp, #8]
  41d45c:	str	xzr, [sp]
  41d460:	mov	x7, #0x0                   	// #0
  41d464:	mov	x6, x3
  41d468:	mov	x5, x0
  41d46c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d470:	add	x4, x0, #0xe30
  41d474:	mov	w3, #0x64                  	// #100
  41d478:	ldr	w1, [x29, #124]
  41d47c:	ldr	w0, [x29, #120]
  41d480:	bl	40b020 <log_object_internal@plt>
  41d484:	str	w0, [x29, #76]
  41d488:	ldr	x0, [x29, #264]
  41d48c:	bl	40a3f0 <unlink@plt>
  41d490:	ldr	w19, [x29, #76]
  41d494:	add	x0, x29, #0xa0
  41d498:	bl	41c650 <freep>
  41d49c:	add	x0, x29, #0x98
  41d4a0:	bl	41c650 <freep>
  41d4a4:	mov	w1, w19
  41d4a8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41d4ac:	ldr	x0, [x0, #4032]
  41d4b0:	ldr	x2, [x29, #456]
  41d4b4:	ldr	x0, [x0]
  41d4b8:	eor	x0, x2, x0
  41d4bc:	cmp	x0, #0x0
  41d4c0:	b.eq	41d4c8 <node_symlink+0xcd0>  // b.none
  41d4c4:	bl	40b280 <__stack_chk_fail@plt>
  41d4c8:	mov	w0, w1
  41d4cc:	mov	sp, x29
  41d4d0:	ldp	x19, x20, [sp, #16]
  41d4d4:	ldp	x29, x30, [sp], #464
  41d4d8:	ret

000000000041d4dc <link_find_prioritized>:
  41d4dc:	sub	sp, sp, #0xe0
  41d4e0:	stp	x29, x30, [sp, #32]
  41d4e4:	add	x29, sp, #0x20
  41d4e8:	stp	x19, x20, [sp, #48]
  41d4ec:	str	x0, [sp, #88]
  41d4f0:	strb	w1, [sp, #87]
  41d4f4:	str	x2, [sp, #72]
  41d4f8:	str	x3, [sp, #64]
  41d4fc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41d500:	ldr	x0, [x0, #4032]
  41d504:	ldr	x1, [x0]
  41d508:	str	x1, [sp, #216]
  41d50c:	mov	x1, #0x0                   	// #0
  41d510:	str	xzr, [sp, #128]
  41d514:	str	xzr, [sp, #136]
  41d518:	str	wzr, [sp, #100]
  41d51c:	ldrb	w0, [sp, #87]
  41d520:	and	x0, x0, #0xff
  41d524:	cmp	x0, #0x0
  41d528:	b.eq	41d570 <link_find_prioritized+0x94>  // b.none
  41d52c:	ldr	x0, [sp, #88]
  41d530:	cmp	x0, #0x0
  41d534:	cset	w0, eq  // eq = none
  41d538:	and	w0, w0, #0xff
  41d53c:	and	x0, x0, #0xff
  41d540:	cmp	x0, #0x0
  41d544:	b.eq	41d570 <link_find_prioritized+0x94>  // b.none
  41d548:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d54c:	add	x1, x0, #0x7cb
  41d550:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d554:	add	x4, x0, #0xe40
  41d558:	mov	w3, #0x72                  	// #114
  41d55c:	mov	x2, x1
  41d560:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d564:	add	x1, x0, #0xa00
  41d568:	mov	w0, #0x1                   	// #1
  41d56c:	bl	40abb0 <log_assert_failed_realm@plt>
  41d570:	ldr	x0, [sp, #72]
  41d574:	cmp	x0, #0x0
  41d578:	cset	w0, eq  // eq = none
  41d57c:	and	w0, w0, #0xff
  41d580:	and	x0, x0, #0xff
  41d584:	cmp	x0, #0x0
  41d588:	b.eq	41d5b4 <link_find_prioritized+0xd8>  // b.none
  41d58c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d590:	add	x1, x0, #0x7cb
  41d594:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d598:	add	x4, x0, #0xe40
  41d59c:	mov	w3, #0x73                  	// #115
  41d5a0:	mov	x2, x1
  41d5a4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d5a8:	add	x1, x0, #0xa10
  41d5ac:	mov	w0, #0x1                   	// #1
  41d5b0:	bl	40abb0 <log_assert_failed_realm@plt>
  41d5b4:	ldr	x0, [sp, #64]
  41d5b8:	cmp	x0, #0x0
  41d5bc:	cset	w0, eq  // eq = none
  41d5c0:	and	w0, w0, #0xff
  41d5c4:	and	x0, x0, #0xff
  41d5c8:	cmp	x0, #0x0
  41d5cc:	b.eq	41d5f8 <link_find_prioritized+0x11c>  // b.none
  41d5d0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d5d4:	add	x1, x0, #0x7cb
  41d5d8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d5dc:	add	x4, x0, #0xe40
  41d5e0:	mov	w3, #0x74                  	// #116
  41d5e4:	mov	x2, x1
  41d5e8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d5ec:	add	x1, x0, #0xa20
  41d5f0:	mov	w0, #0x1                   	// #1
  41d5f4:	bl	40abb0 <log_assert_failed_realm@plt>
  41d5f8:	ldrb	w0, [sp, #87]
  41d5fc:	cmp	w0, #0x0
  41d600:	b.eq	41d674 <link_find_prioritized+0x198>  // b.none
  41d604:	add	x0, sp, #0x64
  41d608:	mov	x1, x0
  41d60c:	ldr	x0, [sp, #88]
  41d610:	bl	40a7a0 <device_get_devlink_priority@plt>
  41d614:	str	w0, [sp, #108]
  41d618:	ldr	w0, [sp, #108]
  41d61c:	cmp	w0, #0x0
  41d620:	b.ge	41d62c <link_find_prioritized+0x150>  // b.tcont
  41d624:	ldr	w20, [sp, #108]
  41d628:	b	41da2c <link_find_prioritized+0x550>
  41d62c:	add	x0, sp, #0xa8
  41d630:	mov	x1, x0
  41d634:	ldr	x0, [sp, #88]
  41d638:	bl	40a6f0 <sd_device_get_devname@plt>
  41d63c:	str	w0, [sp, #108]
  41d640:	ldr	w0, [sp, #108]
  41d644:	cmp	w0, #0x0
  41d648:	b.ge	41d654 <link_find_prioritized+0x178>  // b.tcont
  41d64c:	ldr	w20, [sp, #108]
  41d650:	b	41da2c <link_find_prioritized+0x550>
  41d654:	ldr	x0, [sp, #168]
  41d658:	bl	40b7c0 <strdup@plt>
  41d65c:	str	x0, [sp, #136]
  41d660:	ldr	x0, [sp, #136]
  41d664:	cmp	x0, #0x0
  41d668:	b.ne	41d674 <link_find_prioritized+0x198>  // b.any
  41d66c:	mov	w20, #0xfffffff4            	// #-12
  41d670:	b	41da2c <link_find_prioritized+0x550>
  41d674:	ldr	x0, [sp, #72]
  41d678:	bl	40b770 <opendir@plt>
  41d67c:	str	x0, [sp, #128]
  41d680:	ldr	x0, [sp, #128]
  41d684:	cmp	x0, #0x0
  41d688:	b.ne	41d6c8 <link_find_prioritized+0x1ec>  // b.any
  41d68c:	ldr	x0, [sp, #136]
  41d690:	cmp	x0, #0x0
  41d694:	b.eq	41d6b8 <link_find_prioritized+0x1dc>  // b.none
  41d698:	ldr	x0, [sp, #136]
  41d69c:	str	x0, [sp, #208]
  41d6a0:	str	xzr, [sp, #136]
  41d6a4:	ldr	x1, [sp, #208]
  41d6a8:	ldr	x0, [sp, #64]
  41d6ac:	str	x1, [x0]
  41d6b0:	mov	w20, #0x0                   	// #0
  41d6b4:	b	41da2c <link_find_prioritized+0x550>
  41d6b8:	bl	40b040 <__errno_location@plt>
  41d6bc:	ldr	w0, [x0]
  41d6c0:	neg	w20, w0
  41d6c4:	b	41da2c <link_find_prioritized+0x550>
  41d6c8:	bl	40b040 <__errno_location@plt>
  41d6cc:	str	wzr, [x0]
  41d6d0:	ldr	x0, [sp, #128]
  41d6d4:	bl	40abe0 <readdir64@plt>
  41d6d8:	str	x0, [sp, #176]
  41d6dc:	ldr	x0, [sp, #176]
  41d6e0:	cmp	x0, #0x0
  41d6e4:	b.ne	41d6f8 <link_find_prioritized+0x21c>  // b.any
  41d6e8:	bl	40b040 <__errno_location@plt>
  41d6ec:	ldr	w0, [x0]
  41d6f0:	cmp	w0, #0x0
  41d6f4:	b	41d9fc <link_find_prioritized+0x520>
  41d6f8:	str	xzr, [sp, #144]
  41d6fc:	str	wzr, [sp, #104]
  41d700:	ldr	x0, [sp, #176]
  41d704:	ldrb	w0, [x0, #19]
  41d708:	cmp	w0, #0x0
  41d70c:	b.ne	41d718 <link_find_prioritized+0x23c>  // b.any
  41d710:	mov	w19, #0x0                   	// #0
  41d714:	b	41d9bc <link_find_prioritized+0x4e0>
  41d718:	ldr	x0, [sp, #176]
  41d71c:	ldrb	w0, [x0, #19]
  41d720:	cmp	w0, #0x2e
  41d724:	b.ne	41d730 <link_find_prioritized+0x254>  // b.any
  41d728:	mov	w19, #0x1                   	// #1
  41d72c:	b	41d9bc <link_find_prioritized+0x4e0>
  41d730:	str	xzr, [sp, #168]
  41d734:	ldr	x0, [sp, #88]
  41d738:	str	x0, [sp, #184]
  41d73c:	mov	w0, #0x7                   	// #7
  41d740:	str	w0, [sp, #112]
  41d744:	str	wzr, [sp, #116]
  41d748:	ldr	x0, [sp, #184]
  41d74c:	cmp	x0, #0x0
  41d750:	b.eq	41d78c <link_find_prioritized+0x2b0>  // b.none
  41d754:	mov	w0, #0x1                   	// #1
  41d758:	bl	40be30 <log_get_max_level_realm@plt>
  41d75c:	mov	w1, w0
  41d760:	ldr	w0, [sp, #112]
  41d764:	cmp	w0, w1
  41d768:	cset	w0, le
  41d76c:	and	w0, w0, #0xff
  41d770:	and	x0, x0, #0xff
  41d774:	cmp	x0, #0x0
  41d778:	b.eq	41d78c <link_find_prioritized+0x2b0>  // b.none
  41d77c:	add	x0, sp, #0xa8
  41d780:	mov	x1, x0
  41d784:	ldr	x0, [sp, #184]
  41d788:	bl	40aba0 <sd_device_get_sysname@plt>
  41d78c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d790:	add	x8, x0, #0x7cb
  41d794:	ldr	x0, [sp, #168]
  41d798:	cmp	x0, #0x0
  41d79c:	b.eq	41d7ac <link_find_prioritized+0x2d0>  // b.none
  41d7a0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d7a4:	add	x0, x0, #0x7f8
  41d7a8:	b	41d7b0 <link_find_prioritized+0x2d4>
  41d7ac:	mov	x0, #0x0                   	// #0
  41d7b0:	ldr	x3, [sp, #168]
  41d7b4:	ldr	x1, [sp, #176]
  41d7b8:	add	x1, x1, #0x13
  41d7bc:	ldr	x2, [sp, #72]
  41d7c0:	str	x2, [sp, #24]
  41d7c4:	str	x1, [sp, #16]
  41d7c8:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d7cc:	add	x1, x1, #0xa28
  41d7d0:	str	x1, [sp, #8]
  41d7d4:	str	xzr, [sp]
  41d7d8:	mov	x7, #0x0                   	// #0
  41d7dc:	mov	x6, x3
  41d7e0:	mov	x5, x0
  41d7e4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d7e8:	add	x4, x0, #0xe58
  41d7ec:	mov	w3, #0x9a                  	// #154
  41d7f0:	mov	x2, x8
  41d7f4:	ldr	w1, [sp, #116]
  41d7f8:	ldr	w0, [sp, #112]
  41d7fc:	bl	40b020 <log_object_internal@plt>
  41d800:	add	x0, sp, #0xa0
  41d804:	mov	x1, x0
  41d808:	ldr	x0, [sp, #88]
  41d80c:	bl	40bd00 <device_get_id_filename@plt>
  41d810:	cmp	w0, #0x0
  41d814:	b.ge	41d820 <link_find_prioritized+0x344>  // b.tcont
  41d818:	mov	w19, #0x1                   	// #1
  41d81c:	b	41d9bc <link_find_prioritized+0x4e0>
  41d820:	ldr	x0, [sp, #176]
  41d824:	add	x0, x0, #0x13
  41d828:	ldr	x1, [sp, #160]
  41d82c:	bl	40b710 <strcmp@plt>
  41d830:	cmp	w0, #0x0
  41d834:	b.ne	41d840 <link_find_prioritized+0x364>  // b.any
  41d838:	mov	w19, #0x1                   	// #1
  41d83c:	b	41d9bc <link_find_prioritized+0x4e0>
  41d840:	ldr	x0, [sp, #176]
  41d844:	add	x1, x0, #0x13
  41d848:	add	x0, sp, #0x90
  41d84c:	bl	40bcc0 <sd_device_new_from_device_id@plt>
  41d850:	cmp	w0, #0x0
  41d854:	b.ge	41d860 <link_find_prioritized+0x384>  // b.tcont
  41d858:	mov	w19, #0x1                   	// #1
  41d85c:	b	41d9bc <link_find_prioritized+0x4e0>
  41d860:	ldr	x0, [sp, #144]
  41d864:	add	x1, sp, #0x98
  41d868:	bl	40a6f0 <sd_device_get_devname@plt>
  41d86c:	cmp	w0, #0x0
  41d870:	b.ge	41d87c <link_find_prioritized+0x3a0>  // b.tcont
  41d874:	mov	w19, #0x1                   	// #1
  41d878:	b	41d9bc <link_find_prioritized+0x4e0>
  41d87c:	ldr	x0, [sp, #144]
  41d880:	add	x1, sp, #0x68
  41d884:	bl	40a7a0 <device_get_devlink_priority@plt>
  41d888:	cmp	w0, #0x0
  41d88c:	b.ge	41d898 <link_find_prioritized+0x3bc>  // b.tcont
  41d890:	mov	w19, #0x1                   	// #1
  41d894:	b	41d9bc <link_find_prioritized+0x4e0>
  41d898:	ldr	x0, [sp, #136]
  41d89c:	cmp	x0, #0x0
  41d8a0:	b.eq	41d8bc <link_find_prioritized+0x3e0>  // b.none
  41d8a4:	ldr	w1, [sp, #104]
  41d8a8:	ldr	w0, [sp, #100]
  41d8ac:	cmp	w1, w0
  41d8b0:	b.gt	41d8bc <link_find_prioritized+0x3e0>
  41d8b4:	mov	w19, #0x1                   	// #1
  41d8b8:	b	41d9bc <link_find_prioritized+0x4e0>
  41d8bc:	str	xzr, [sp, #168]
  41d8c0:	ldr	x0, [sp, #144]
  41d8c4:	str	x0, [sp, #192]
  41d8c8:	mov	w0, #0x7                   	// #7
  41d8cc:	str	w0, [sp, #120]
  41d8d0:	str	wzr, [sp, #124]
  41d8d4:	ldr	x0, [sp, #192]
  41d8d8:	cmp	x0, #0x0
  41d8dc:	b.eq	41d918 <link_find_prioritized+0x43c>  // b.none
  41d8e0:	mov	w0, #0x1                   	// #1
  41d8e4:	bl	40be30 <log_get_max_level_realm@plt>
  41d8e8:	mov	w1, w0
  41d8ec:	ldr	w0, [sp, #120]
  41d8f0:	cmp	w0, w1
  41d8f4:	cset	w0, le
  41d8f8:	and	w0, w0, #0xff
  41d8fc:	and	x0, x0, #0xff
  41d900:	cmp	x0, #0x0
  41d904:	b.eq	41d918 <link_find_prioritized+0x43c>  // b.none
  41d908:	add	x0, sp, #0xa8
  41d90c:	mov	x1, x0
  41d910:	ldr	x0, [sp, #192]
  41d914:	bl	40aba0 <sd_device_get_sysname@plt>
  41d918:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d91c:	add	x8, x0, #0x7cb
  41d920:	ldr	x0, [sp, #168]
  41d924:	cmp	x0, #0x0
  41d928:	b.eq	41d938 <link_find_prioritized+0x45c>  // b.none
  41d92c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d930:	add	x0, x0, #0x7f8
  41d934:	b	41d93c <link_find_prioritized+0x460>
  41d938:	mov	x0, #0x0                   	// #0
  41d93c:	ldr	x3, [sp, #168]
  41d940:	ldr	w1, [sp, #104]
  41d944:	ldr	x2, [sp, #72]
  41d948:	str	x2, [sp, #24]
  41d94c:	str	w1, [sp, #16]
  41d950:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d954:	add	x1, x1, #0xa48
  41d958:	str	x1, [sp, #8]
  41d95c:	str	xzr, [sp]
  41d960:	mov	x7, #0x0                   	// #0
  41d964:	mov	x6, x3
  41d968:	mov	x5, x0
  41d96c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41d970:	add	x4, x0, #0xe58
  41d974:	mov	w3, #0xaf                  	// #175
  41d978:	mov	x2, x8
  41d97c:	ldr	w1, [sp, #124]
  41d980:	ldr	w0, [sp, #120]
  41d984:	bl	40b020 <log_object_internal@plt>
  41d988:	ldr	x1, [sp, #152]
  41d98c:	add	x0, sp, #0x88
  41d990:	bl	40a810 <free_and_strdup@plt>
  41d994:	str	w0, [sp, #108]
  41d998:	ldr	w0, [sp, #108]
  41d99c:	cmp	w0, #0x0
  41d9a0:	b.ge	41d9b0 <link_find_prioritized+0x4d4>  // b.tcont
  41d9a4:	ldr	w20, [sp, #108]
  41d9a8:	mov	w19, #0x2                   	// #2
  41d9ac:	b	41d9bc <link_find_prioritized+0x4e0>
  41d9b0:	ldr	w0, [sp, #104]
  41d9b4:	str	w0, [sp, #100]
  41d9b8:	mov	w19, #0x3                   	// #3
  41d9bc:	add	x0, sp, #0x90
  41d9c0:	bl	41c6f0 <sd_device_unrefp>
  41d9c4:	cmp	w19, #0x3
  41d9c8:	b.eq	41d9e4 <link_find_prioritized+0x508>  // b.none
  41d9cc:	cmp	w19, #0x3
  41d9d0:	b.gt	41da2c <link_find_prioritized+0x550>
  41d9d4:	cmp	w19, #0x0
  41d9d8:	b.eq	41d9fc <link_find_prioritized+0x520>  // b.none
  41d9dc:	cmp	w19, #0x1
  41d9e0:	b.ne	41da2c <link_find_prioritized+0x550>  // b.any
  41d9e4:	bl	40b040 <__errno_location@plt>
  41d9e8:	str	wzr, [x0]
  41d9ec:	ldr	x0, [sp, #128]
  41d9f0:	bl	40abe0 <readdir64@plt>
  41d9f4:	str	x0, [sp, #176]
  41d9f8:	b	41d6dc <link_find_prioritized+0x200>
  41d9fc:	ldr	x0, [sp, #136]
  41da00:	cmp	x0, #0x0
  41da04:	b.ne	41da10 <link_find_prioritized+0x534>  // b.any
  41da08:	mov	w20, #0xfffffffe            	// #-2
  41da0c:	b	41da2c <link_find_prioritized+0x550>
  41da10:	ldr	x0, [sp, #136]
  41da14:	str	x0, [sp, #200]
  41da18:	str	xzr, [sp, #136]
  41da1c:	ldr	x1, [sp, #200]
  41da20:	ldr	x0, [sp, #64]
  41da24:	str	x1, [x0]
  41da28:	mov	w20, #0x0                   	// #0
  41da2c:	add	x0, sp, #0x88
  41da30:	bl	41c650 <freep>
  41da34:	add	x0, sp, #0x80
  41da38:	bl	41c7a4 <closedirp>
  41da3c:	mov	w1, w20
  41da40:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41da44:	ldr	x0, [x0, #4032]
  41da48:	ldr	x2, [sp, #216]
  41da4c:	ldr	x0, [x0]
  41da50:	eor	x0, x2, x0
  41da54:	cmp	x0, #0x0
  41da58:	b.eq	41da60 <link_find_prioritized+0x584>  // b.none
  41da5c:	bl	40b280 <__stack_chk_fail@plt>
  41da60:	mov	w0, w1
  41da64:	ldp	x19, x20, [sp, #48]
  41da68:	ldp	x29, x30, [sp, #32]
  41da6c:	add	sp, sp, #0xe0
  41da70:	ret

000000000041da74 <link_update>:
  41da74:	mov	x12, #0x10c0                	// #4288
  41da78:	sub	sp, sp, x12
  41da7c:	stp	x29, x30, [sp, #32]
  41da80:	add	x29, sp, #0x20
  41da84:	str	x19, [sp, #48]
  41da88:	str	x0, [sp, #88]
  41da8c:	str	x1, [sp, #80]
  41da90:	strb	w2, [sp, #79]
  41da94:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41da98:	ldr	x0, [x0, #4032]
  41da9c:	ldr	x1, [x0]
  41daa0:	str	x1, [sp, #4280]
  41daa4:	mov	x1, #0x0                   	// #0
  41daa8:	str	xzr, [sp, #128]
  41daac:	str	xzr, [sp, #136]
  41dab0:	str	xzr, [sp, #144]
  41dab4:	ldr	x0, [sp, #88]
  41dab8:	cmp	x0, #0x0
  41dabc:	cset	w0, eq  // eq = none
  41dac0:	and	w0, w0, #0xff
  41dac4:	and	x0, x0, #0xff
  41dac8:	cmp	x0, #0x0
  41dacc:	b.eq	41daf8 <link_update+0x84>  // b.none
  41dad0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dad4:	add	x1, x0, #0x7cb
  41dad8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dadc:	add	x4, x0, #0xe70
  41dae0:	mov	w3, #0xc5                  	// #197
  41dae4:	mov	x2, x1
  41dae8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41daec:	add	x1, x0, #0x7e0
  41daf0:	mov	w0, #0x1                   	// #1
  41daf4:	bl	40abb0 <log_assert_failed_realm@plt>
  41daf8:	ldr	x0, [sp, #80]
  41dafc:	cmp	x0, #0x0
  41db00:	cset	w0, eq  // eq = none
  41db04:	and	w0, w0, #0xff
  41db08:	and	x0, x0, #0xff
  41db0c:	cmp	x0, #0x0
  41db10:	b.eq	41db3c <link_update+0xc8>  // b.none
  41db14:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41db18:	add	x1, x0, #0x7cb
  41db1c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41db20:	add	x4, x0, #0xe70
  41db24:	mov	w3, #0xc6                  	// #198
  41db28:	mov	x2, x1
  41db2c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41db30:	add	x1, x0, #0x7f0
  41db34:	mov	w0, #0x1                   	// #1
  41db38:	bl	40abb0 <log_assert_failed_realm@plt>
  41db3c:	add	x0, sp, #0x98
  41db40:	mov	x1, x0
  41db44:	ldr	x0, [sp, #88]
  41db48:	bl	40bd00 <device_get_id_filename@plt>
  41db4c:	str	w0, [sp, #108]
  41db50:	ldr	w0, [sp, #108]
  41db54:	cmp	w0, #0x0
  41db58:	b.ge	41dc20 <link_update+0x1ac>  // b.tcont
  41db5c:	str	xzr, [sp, #160]
  41db60:	ldr	x0, [sp, #88]
  41db64:	str	x0, [sp, #176]
  41db68:	mov	w0, #0x7                   	// #7
  41db6c:	str	w0, [sp, #120]
  41db70:	ldr	w0, [sp, #108]
  41db74:	str	w0, [sp, #124]
  41db78:	ldr	x0, [sp, #176]
  41db7c:	cmp	x0, #0x0
  41db80:	b.eq	41dbbc <link_update+0x148>  // b.none
  41db84:	mov	w0, #0x1                   	// #1
  41db88:	bl	40be30 <log_get_max_level_realm@plt>
  41db8c:	mov	w1, w0
  41db90:	ldr	w0, [sp, #120]
  41db94:	cmp	w0, w1
  41db98:	cset	w0, le
  41db9c:	and	w0, w0, #0xff
  41dba0:	and	x0, x0, #0xff
  41dba4:	cmp	x0, #0x0
  41dba8:	b.eq	41dbbc <link_update+0x148>  // b.none
  41dbac:	add	x0, sp, #0xa0
  41dbb0:	mov	x1, x0
  41dbb4:	ldr	x0, [sp, #176]
  41dbb8:	bl	40aba0 <sd_device_get_sysname@plt>
  41dbbc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dbc0:	add	x2, x0, #0x7cb
  41dbc4:	ldr	x0, [sp, #160]
  41dbc8:	cmp	x0, #0x0
  41dbcc:	b.eq	41dbdc <link_update+0x168>  // b.none
  41dbd0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dbd4:	add	x0, x0, #0x7f8
  41dbd8:	b	41dbe0 <link_update+0x16c>
  41dbdc:	mov	x0, #0x0                   	// #0
  41dbe0:	ldr	x3, [sp, #160]
  41dbe4:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dbe8:	add	x1, x1, #0x930
  41dbec:	str	x1, [sp, #8]
  41dbf0:	str	xzr, [sp]
  41dbf4:	mov	x7, #0x0                   	// #0
  41dbf8:	mov	x6, x3
  41dbfc:	mov	x5, x0
  41dc00:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dc04:	add	x4, x0, #0xe80
  41dc08:	mov	w3, #0xca                  	// #202
  41dc0c:	ldr	w1, [sp, #124]
  41dc10:	ldr	w0, [sp, #120]
  41dc14:	bl	40b020 <log_object_internal@plt>
  41dc18:	mov	w19, w0
  41dc1c:	b	41ded4 <link_update+0x460>
  41dc20:	ldr	x0, [sp, #80]
  41dc24:	add	x0, x0, #0x4
  41dc28:	add	x1, sp, #0xb8
  41dc2c:	mov	x2, #0x1000                	// #4096
  41dc30:	bl	40aa70 <util_path_encode@plt>
  41dc34:	add	x0, sp, #0xb8
  41dc38:	mov	x2, #0xffffffffffffffff    	// #-1
  41dc3c:	mov	x1, x0
  41dc40:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dc44:	add	x0, x0, #0xa70
  41dc48:	bl	40b2f0 <path_join_internal@plt>
  41dc4c:	str	x0, [sp, #144]
  41dc50:	ldr	x0, [sp, #144]
  41dc54:	cmp	x0, #0x0
  41dc58:	b.ne	41dc80 <link_update+0x20c>  // b.any
  41dc5c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dc60:	add	x1, x0, #0x7cb
  41dc64:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dc68:	add	x3, x0, #0xe80
  41dc6c:	mov	w2, #0xcf                  	// #207
  41dc70:	mov	w0, #0x1                   	// #1
  41dc74:	bl	40bda0 <log_oom_internal@plt>
  41dc78:	mov	w19, w0
  41dc7c:	b	41ded4 <link_update+0x460>
  41dc80:	ldr	x0, [sp, #144]
  41dc84:	ldr	x1, [sp, #152]
  41dc88:	mov	x2, #0xffffffffffffffff    	// #-1
  41dc8c:	bl	40b2f0 <path_join_internal@plt>
  41dc90:	str	x0, [sp, #136]
  41dc94:	ldr	x0, [sp, #136]
  41dc98:	cmp	x0, #0x0
  41dc9c:	b.ne	41dcc4 <link_update+0x250>  // b.any
  41dca0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dca4:	add	x1, x0, #0x7cb
  41dca8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dcac:	add	x3, x0, #0xe80
  41dcb0:	mov	w2, #0xd2                  	// #210
  41dcb4:	mov	w0, #0x1                   	// #1
  41dcb8:	bl	40bda0 <log_oom_internal@plt>
  41dcbc:	mov	w19, w0
  41dcc0:	b	41ded4 <link_update+0x460>
  41dcc4:	ldrb	w0, [sp, #79]
  41dcc8:	eor	w0, w0, #0x1
  41dccc:	and	w0, w0, #0xff
  41dcd0:	cmp	w0, #0x0
  41dcd4:	b.eq	41dcf0 <link_update+0x27c>  // b.none
  41dcd8:	ldr	x0, [sp, #136]
  41dcdc:	bl	40a3f0 <unlink@plt>
  41dce0:	cmp	w0, #0x0
  41dce4:	b.ne	41dcf0 <link_update+0x27c>  // b.any
  41dce8:	ldr	x0, [sp, #144]
  41dcec:	bl	40af10 <rmdir@plt>
  41dcf0:	ldr	x0, [sp, #144]
  41dcf4:	add	x1, sp, #0x80
  41dcf8:	mov	x3, x1
  41dcfc:	mov	x2, x0
  41dd00:	ldrb	w1, [sp, #79]
  41dd04:	ldr	x0, [sp, #88]
  41dd08:	bl	41d4dc <link_find_prioritized>
  41dd0c:	str	w0, [sp, #108]
  41dd10:	ldr	w0, [sp, #108]
  41dd14:	cmp	w0, #0x0
  41dd18:	b.ge	41de00 <link_update+0x38c>  // b.tcont
  41dd1c:	str	xzr, [sp, #160]
  41dd20:	ldr	x0, [sp, #88]
  41dd24:	str	x0, [sp, #168]
  41dd28:	mov	w0, #0x7                   	// #7
  41dd2c:	str	w0, [sp, #112]
  41dd30:	str	wzr, [sp, #116]
  41dd34:	ldr	x0, [sp, #168]
  41dd38:	cmp	x0, #0x0
  41dd3c:	b.eq	41dd78 <link_update+0x304>  // b.none
  41dd40:	mov	w0, #0x1                   	// #1
  41dd44:	bl	40be30 <log_get_max_level_realm@plt>
  41dd48:	mov	w1, w0
  41dd4c:	ldr	w0, [sp, #112]
  41dd50:	cmp	w0, w1
  41dd54:	cset	w0, le
  41dd58:	and	w0, w0, #0xff
  41dd5c:	and	x0, x0, #0xff
  41dd60:	cmp	x0, #0x0
  41dd64:	b.eq	41dd78 <link_update+0x304>  // b.none
  41dd68:	add	x0, sp, #0xa0
  41dd6c:	mov	x1, x0
  41dd70:	ldr	x0, [sp, #168]
  41dd74:	bl	40aba0 <sd_device_get_sysname@plt>
  41dd78:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dd7c:	add	x2, x0, #0x7cb
  41dd80:	ldr	x0, [sp, #160]
  41dd84:	cmp	x0, #0x0
  41dd88:	b.eq	41dd98 <link_update+0x324>  // b.none
  41dd8c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dd90:	add	x0, x0, #0x7f8
  41dd94:	b	41dd9c <link_update+0x328>
  41dd98:	mov	x0, #0x0                   	// #0
  41dd9c:	ldr	x3, [sp, #160]
  41dda0:	ldr	x1, [sp, #80]
  41dda4:	str	x1, [sp, #16]
  41dda8:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ddac:	add	x1, x1, #0xa88
  41ddb0:	str	x1, [sp, #8]
  41ddb4:	str	xzr, [sp]
  41ddb8:	mov	x7, #0x0                   	// #0
  41ddbc:	mov	x6, x3
  41ddc0:	mov	x5, x0
  41ddc4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ddc8:	add	x4, x0, #0xe80
  41ddcc:	mov	w3, #0xd9                  	// #217
  41ddd0:	ldr	w1, [sp, #116]
  41ddd4:	ldr	w0, [sp, #112]
  41ddd8:	bl	40b020 <log_object_internal@plt>
  41dddc:	ldr	x0, [sp, #80]
  41dde0:	bl	40a3f0 <unlink@plt>
  41dde4:	cmp	w0, #0x0
  41dde8:	b.ne	41de14 <link_update+0x3a0>  // b.any
  41ddec:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ddf0:	add	x1, x0, #0xab0
  41ddf4:	ldr	x0, [sp, #80]
  41ddf8:	bl	40adb0 <rmdir_parents@plt>
  41ddfc:	b	41de14 <link_update+0x3a0>
  41de00:	ldr	x0, [sp, #128]
  41de04:	ldr	x2, [sp, #80]
  41de08:	mov	x1, x0
  41de0c:	ldr	x0, [sp, #88]
  41de10:	bl	41c7f8 <node_symlink>
  41de14:	ldrb	w0, [sp, #79]
  41de18:	cmp	w0, #0x0
  41de1c:	b.eq	41ded0 <link_update+0x45c>  // b.none
  41de20:	mov	w0, #0xffffffff            	// #-1
  41de24:	str	w0, [sp, #160]
  41de28:	ldr	x0, [sp, #136]
  41de2c:	mov	w1, #0x1ed                 	// #493
  41de30:	bl	40bd30 <mkdir_parents@plt>
  41de34:	str	w0, [sp, #108]
  41de38:	strb	wzr, [sp, #107]
  41de3c:	ldr	w0, [sp, #108]
  41de40:	cmn	w0, #0x2
  41de44:	b.eq	41de54 <link_update+0x3e0>  // b.none
  41de48:	ldr	w0, [sp, #108]
  41de4c:	cmp	w0, #0x0
  41de50:	b.ne	41de5c <link_update+0x3e8>  // b.any
  41de54:	mov	w0, #0x1                   	// #1
  41de58:	strb	w0, [sp, #107]
  41de5c:	nop
  41de60:	ldrb	w0, [sp, #107]
  41de64:	eor	w0, w0, #0x1
  41de68:	and	w0, w0, #0xff
  41de6c:	cmp	w0, #0x0
  41de70:	b.eq	41de7c <link_update+0x408>  // b.none
  41de74:	mov	w19, #0x0                   	// #0
  41de78:	b	41deb4 <link_update+0x440>
  41de7c:	ldr	x0, [sp, #136]
  41de80:	mov	w2, #0x124                 	// #292
  41de84:	mov	w1, #0x8241                	// #33345
  41de88:	movk	w1, #0x8, lsl #16
  41de8c:	bl	40bcb0 <open64@plt>
  41de90:	str	w0, [sp, #160]
  41de94:	ldr	w0, [sp, #160]
  41de98:	cmp	w0, #0x0
  41de9c:	b.ge	41deb0 <link_update+0x43c>  // b.tcont
  41dea0:	bl	40b040 <__errno_location@plt>
  41dea4:	ldr	w0, [x0]
  41dea8:	neg	w0, w0
  41deac:	str	w0, [sp, #108]
  41deb0:	mov	w19, #0x1                   	// #1
  41deb4:	add	x0, sp, #0xa0
  41deb8:	bl	41c780 <closep>
  41debc:	cmp	w19, #0x1
  41dec0:	b.ne	41ded0 <link_update+0x45c>  // b.any
  41dec4:	ldr	w0, [sp, #108]
  41dec8:	cmn	w0, #0x2
  41decc:	b.eq	41de20 <link_update+0x3ac>  // b.none
  41ded0:	ldr	w19, [sp, #108]
  41ded4:	add	x0, sp, #0x90
  41ded8:	bl	41c650 <freep>
  41dedc:	add	x0, sp, #0x88
  41dee0:	bl	41c650 <freep>
  41dee4:	add	x0, sp, #0x80
  41dee8:	bl	41c650 <freep>
  41deec:	mov	w1, w19
  41def0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41def4:	ldr	x0, [x0, #4032]
  41def8:	ldr	x2, [sp, #4280]
  41defc:	ldr	x0, [x0]
  41df00:	eor	x0, x2, x0
  41df04:	cmp	x0, #0x0
  41df08:	b.eq	41df10 <link_update+0x49c>  // b.none
  41df0c:	bl	40b280 <__stack_chk_fail@plt>
  41df10:	mov	w0, w1
  41df14:	ldr	x19, [sp, #48]
  41df18:	ldp	x29, x30, [sp, #32]
  41df1c:	mov	x12, #0x10c0                	// #4288
  41df20:	add	sp, sp, x12
  41df24:	ret

000000000041df28 <udev_node_update_old_links>:
  41df28:	sub	sp, sp, #0x90
  41df2c:	stp	x29, x30, [sp, #32]
  41df30:	add	x29, sp, #0x20
  41df34:	str	x0, [sp, #56]
  41df38:	str	x1, [sp, #48]
  41df3c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41df40:	ldr	x0, [x0, #4032]
  41df44:	ldr	x1, [x0]
  41df48:	str	x1, [sp, #136]
  41df4c:	mov	x1, #0x0                   	// #0
  41df50:	ldr	x0, [sp, #56]
  41df54:	cmp	x0, #0x0
  41df58:	cset	w0, eq  // eq = none
  41df5c:	and	w0, w0, #0xff
  41df60:	and	x0, x0, #0xff
  41df64:	cmp	x0, #0x0
  41df68:	b.eq	41df94 <udev_node_update_old_links+0x6c>  // b.none
  41df6c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41df70:	add	x1, x0, #0x7cb
  41df74:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41df78:	add	x4, x0, #0xe90
  41df7c:	mov	w3, #0xf2                  	// #242
  41df80:	mov	x2, x1
  41df84:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41df88:	add	x1, x0, #0x7e0
  41df8c:	mov	w0, #0x1                   	// #1
  41df90:	bl	40abb0 <log_assert_failed_realm@plt>
  41df94:	ldr	x0, [sp, #48]
  41df98:	cmp	x0, #0x0
  41df9c:	cset	w0, eq  // eq = none
  41dfa0:	and	w0, w0, #0xff
  41dfa4:	and	x0, x0, #0xff
  41dfa8:	cmp	x0, #0x0
  41dfac:	b.eq	41dfd8 <udev_node_update_old_links+0xb0>  // b.none
  41dfb0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dfb4:	add	x1, x0, #0x7cb
  41dfb8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dfbc:	add	x4, x0, #0xe90
  41dfc0:	mov	w3, #0xf3                  	// #243
  41dfc4:	mov	x2, x1
  41dfc8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41dfcc:	add	x1, x0, #0xab8
  41dfd0:	mov	w0, #0x1                   	// #1
  41dfd4:	bl	40abb0 <log_assert_failed_realm@plt>
  41dfd8:	add	x0, sp, #0x58
  41dfdc:	mov	x1, x0
  41dfe0:	ldr	x0, [sp, #56]
  41dfe4:	bl	40b600 <sd_device_get_devpath@plt>
  41dfe8:	str	w0, [sp, #68]
  41dfec:	ldr	w0, [sp, #68]
  41dff0:	cmp	w0, #0x0
  41dff4:	b.ge	41e0b8 <udev_node_update_old_links+0x190>  // b.tcont
  41dff8:	str	xzr, [sp, #96]
  41dffc:	ldr	x0, [sp, #56]
  41e000:	str	x0, [sp, #128]
  41e004:	mov	w0, #0x7                   	// #7
  41e008:	str	w0, [sp, #80]
  41e00c:	ldr	w0, [sp, #68]
  41e010:	str	w0, [sp, #84]
  41e014:	ldr	x0, [sp, #128]
  41e018:	cmp	x0, #0x0
  41e01c:	b.eq	41e058 <udev_node_update_old_links+0x130>  // b.none
  41e020:	mov	w0, #0x1                   	// #1
  41e024:	bl	40be30 <log_get_max_level_realm@plt>
  41e028:	mov	w1, w0
  41e02c:	ldr	w0, [sp, #80]
  41e030:	cmp	w0, w1
  41e034:	cset	w0, le
  41e038:	and	w0, w0, #0xff
  41e03c:	and	x0, x0, #0xff
  41e040:	cmp	x0, #0x0
  41e044:	b.eq	41e058 <udev_node_update_old_links+0x130>  // b.none
  41e048:	add	x0, sp, #0x60
  41e04c:	mov	x1, x0
  41e050:	ldr	x0, [sp, #128]
  41e054:	bl	40aba0 <sd_device_get_sysname@plt>
  41e058:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e05c:	add	x2, x0, #0x7cb
  41e060:	ldr	x0, [sp, #96]
  41e064:	cmp	x0, #0x0
  41e068:	b.eq	41e078 <udev_node_update_old_links+0x150>  // b.none
  41e06c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e070:	add	x0, x0, #0x7f8
  41e074:	b	41e07c <udev_node_update_old_links+0x154>
  41e078:	mov	x0, #0x0                   	// #0
  41e07c:	ldr	x3, [sp, #96]
  41e080:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e084:	add	x1, x1, #0xac0
  41e088:	str	x1, [sp, #8]
  41e08c:	str	xzr, [sp]
  41e090:	mov	x7, #0x0                   	// #0
  41e094:	mov	x6, x3
  41e098:	mov	x5, x0
  41e09c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e0a0:	add	x4, x0, #0xeb0
  41e0a4:	mov	w3, #0xf7                  	// #247
  41e0a8:	ldr	w1, [sp, #84]
  41e0ac:	ldr	w0, [sp, #80]
  41e0b0:	bl	40b020 <log_object_internal@plt>
  41e0b4:	b	41e21c <udev_node_update_old_links+0x2f4>
  41e0b8:	ldr	x0, [sp, #48]
  41e0bc:	bl	40ad70 <sd_device_get_devlink_first@plt>
  41e0c0:	str	x0, [sp, #104]
  41e0c4:	b	41e20c <udev_node_update_old_links+0x2e4>
  41e0c8:	strb	wzr, [sp, #67]
  41e0cc:	ldr	x0, [sp, #56]
  41e0d0:	bl	40ad70 <sd_device_get_devlink_first@plt>
  41e0d4:	str	x0, [sp, #112]
  41e0d8:	b	41e108 <udev_node_update_old_links+0x1e0>
  41e0dc:	ldr	x1, [sp, #112]
  41e0e0:	ldr	x0, [sp, #104]
  41e0e4:	bl	40b710 <strcmp@plt>
  41e0e8:	cmp	w0, #0x0
  41e0ec:	b.ne	41e0fc <udev_node_update_old_links+0x1d4>  // b.any
  41e0f0:	mov	w0, #0x1                   	// #1
  41e0f4:	strb	w0, [sp, #67]
  41e0f8:	b	41e114 <udev_node_update_old_links+0x1ec>
  41e0fc:	ldr	x0, [sp, #56]
  41e100:	bl	40bde0 <sd_device_get_devlink_next@plt>
  41e104:	str	x0, [sp, #112]
  41e108:	ldr	x0, [sp, #112]
  41e10c:	cmp	x0, #0x0
  41e110:	b.ne	41e0dc <udev_node_update_old_links+0x1b4>  // b.any
  41e114:	ldrb	w0, [sp, #67]
  41e118:	cmp	w0, #0x0
  41e11c:	b.ne	41e1fc <udev_node_update_old_links+0x2d4>  // b.any
  41e120:	str	xzr, [sp, #96]
  41e124:	ldr	x0, [sp, #56]
  41e128:	str	x0, [sp, #120]
  41e12c:	mov	w0, #0x7                   	// #7
  41e130:	str	w0, [sp, #72]
  41e134:	str	wzr, [sp, #76]
  41e138:	ldr	x0, [sp, #120]
  41e13c:	cmp	x0, #0x0
  41e140:	b.eq	41e17c <udev_node_update_old_links+0x254>  // b.none
  41e144:	mov	w0, #0x1                   	// #1
  41e148:	bl	40be30 <log_get_max_level_realm@plt>
  41e14c:	mov	w1, w0
  41e150:	ldr	w0, [sp, #72]
  41e154:	cmp	w0, w1
  41e158:	cset	w0, le
  41e15c:	and	w0, w0, #0xff
  41e160:	and	x0, x0, #0xff
  41e164:	cmp	x0, #0x0
  41e168:	b.eq	41e17c <udev_node_update_old_links+0x254>  // b.none
  41e16c:	add	x0, sp, #0x60
  41e170:	mov	x1, x0
  41e174:	ldr	x0, [sp, #120]
  41e178:	bl	40aba0 <sd_device_get_sysname@plt>
  41e17c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e180:	add	x2, x0, #0x7cb
  41e184:	ldr	x0, [sp, #96]
  41e188:	cmp	x0, #0x0
  41e18c:	b.eq	41e19c <udev_node_update_old_links+0x274>  // b.none
  41e190:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e194:	add	x0, x0, #0x7f8
  41e198:	b	41e1a0 <udev_node_update_old_links+0x278>
  41e19c:	mov	x0, #0x0                   	// #0
  41e1a0:	ldr	x3, [sp, #96]
  41e1a4:	ldr	x1, [sp, #88]
  41e1a8:	str	x1, [sp, #24]
  41e1ac:	ldr	x1, [sp, #104]
  41e1b0:	str	x1, [sp, #16]
  41e1b4:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e1b8:	add	x1, x1, #0xae0
  41e1bc:	str	x1, [sp, #8]
  41e1c0:	str	xzr, [sp]
  41e1c4:	mov	x7, #0x0                   	// #0
  41e1c8:	mov	x6, x3
  41e1cc:	mov	x5, x0
  41e1d0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e1d4:	add	x4, x0, #0xeb0
  41e1d8:	mov	w3, #0x108                 	// #264
  41e1dc:	ldr	w1, [sp, #76]
  41e1e0:	ldr	w0, [sp, #72]
  41e1e4:	bl	40b020 <log_object_internal@plt>
  41e1e8:	mov	w2, #0x0                   	// #0
  41e1ec:	ldr	x1, [sp, #104]
  41e1f0:	ldr	x0, [sp, #56]
  41e1f4:	bl	41da74 <link_update>
  41e1f8:	b	41e200 <udev_node_update_old_links+0x2d8>
  41e1fc:	nop
  41e200:	ldr	x0, [sp, #48]
  41e204:	bl	40bde0 <sd_device_get_devlink_next@plt>
  41e208:	str	x0, [sp, #104]
  41e20c:	ldr	x0, [sp, #104]
  41e210:	cmp	x0, #0x0
  41e214:	b.ne	41e0c8 <udev_node_update_old_links+0x1a0>  // b.any
  41e218:	mov	w0, #0x0                   	// #0
  41e21c:	mov	w1, w0
  41e220:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41e224:	ldr	x0, [x0, #4032]
  41e228:	ldr	x2, [sp, #136]
  41e22c:	ldr	x0, [x0]
  41e230:	eor	x0, x2, x0
  41e234:	cmp	x0, #0x0
  41e238:	b.eq	41e240 <udev_node_update_old_links+0x318>  // b.none
  41e23c:	bl	40b280 <__stack_chk_fail@plt>
  41e240:	mov	w0, w1
  41e244:	ldp	x29, x30, [sp, #32]
  41e248:	add	sp, sp, #0x90
  41e24c:	ret

000000000041e250 <node_permissions_apply>:
  41e250:	sub	sp, sp, #0x240
  41e254:	stp	x29, x30, [sp, #48]
  41e258:	add	x29, sp, #0x30
  41e25c:	stp	x19, x20, [sp, #64]
  41e260:	stp	x21, x22, [sp, #80]
  41e264:	str	x23, [sp, #96]
  41e268:	str	x0, [sp, #136]
  41e26c:	strb	w1, [sp, #135]
  41e270:	str	w2, [sp, #128]
  41e274:	str	w3, [sp, #124]
  41e278:	str	w4, [sp, #120]
  41e27c:	str	x5, [sp, #112]
  41e280:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41e284:	ldr	x0, [x0, #4032]
  41e288:	ldr	x1, [x0]
  41e28c:	str	x1, [sp, #568]
  41e290:	mov	x1, #0x0                   	// #0
  41e294:	str	xzr, [sp, #280]
  41e298:	ldr	x0, [sp, #136]
  41e29c:	cmp	x0, #0x0
  41e2a0:	cset	w0, eq  // eq = none
  41e2a4:	and	w0, w0, #0xff
  41e2a8:	and	x0, x0, #0xff
  41e2ac:	cmp	x0, #0x0
  41e2b0:	b.eq	41e2dc <node_permissions_apply+0x8c>  // b.none
  41e2b4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e2b8:	add	x1, x0, #0x7cb
  41e2bc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e2c0:	add	x4, x0, #0xed0
  41e2c4:	mov	w3, #0x119                 	// #281
  41e2c8:	mov	x2, x1
  41e2cc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e2d0:	add	x1, x0, #0x7e0
  41e2d4:	mov	w0, #0x1                   	// #1
  41e2d8:	bl	40abb0 <log_assert_failed_realm@plt>
  41e2dc:	add	x0, sp, #0x108
  41e2e0:	mov	x1, x0
  41e2e4:	ldr	x0, [sp, #136]
  41e2e8:	bl	40a6f0 <sd_device_get_devname@plt>
  41e2ec:	str	w0, [sp, #152]
  41e2f0:	ldr	w0, [sp, #152]
  41e2f4:	cmp	w0, #0x0
  41e2f8:	b.ge	41e3bc <node_permissions_apply+0x16c>  // b.tcont
  41e2fc:	str	xzr, [sp, #424]
  41e300:	ldr	x0, [sp, #136]
  41e304:	str	x0, [sp, #416]
  41e308:	mov	w0, #0x7                   	// #7
  41e30c:	str	w0, [sp, #256]
  41e310:	ldr	w0, [sp, #152]
  41e314:	str	w0, [sp, #260]
  41e318:	ldr	x0, [sp, #416]
  41e31c:	cmp	x0, #0x0
  41e320:	b.eq	41e35c <node_permissions_apply+0x10c>  // b.none
  41e324:	mov	w0, #0x1                   	// #1
  41e328:	bl	40be30 <log_get_max_level_realm@plt>
  41e32c:	mov	w1, w0
  41e330:	ldr	w0, [sp, #256]
  41e334:	cmp	w0, w1
  41e338:	cset	w0, le
  41e33c:	and	w0, w0, #0xff
  41e340:	and	x0, x0, #0xff
  41e344:	cmp	x0, #0x0
  41e348:	b.eq	41e35c <node_permissions_apply+0x10c>  // b.none
  41e34c:	add	x0, sp, #0x1a8
  41e350:	mov	x1, x0
  41e354:	ldr	x0, [sp, #416]
  41e358:	bl	40aba0 <sd_device_get_sysname@plt>
  41e35c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e360:	add	x2, x0, #0x7cb
  41e364:	ldr	x0, [sp, #424]
  41e368:	cmp	x0, #0x0
  41e36c:	b.eq	41e37c <node_permissions_apply+0x12c>  // b.none
  41e370:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e374:	add	x0, x0, #0x7f8
  41e378:	b	41e380 <node_permissions_apply+0x130>
  41e37c:	mov	x0, #0x0                   	// #0
  41e380:	ldr	x3, [sp, #424]
  41e384:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e388:	add	x1, x1, #0xb18
  41e38c:	str	x1, [sp, #8]
  41e390:	str	xzr, [sp]
  41e394:	mov	x7, #0x0                   	// #0
  41e398:	mov	x6, x3
  41e39c:	mov	x5, x0
  41e3a0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e3a4:	add	x4, x0, #0xee8
  41e3a8:	mov	w3, #0x11d                 	// #285
  41e3ac:	ldr	w1, [sp, #260]
  41e3b0:	ldr	w0, [sp, #256]
  41e3b4:	bl	40b020 <log_object_internal@plt>
  41e3b8:	b	41f1e4 <node_permissions_apply+0xf94>
  41e3bc:	add	x0, sp, #0x110
  41e3c0:	mov	x1, x0
  41e3c4:	ldr	x0, [sp, #136]
  41e3c8:	bl	40af80 <sd_device_get_subsystem@plt>
  41e3cc:	str	w0, [sp, #152]
  41e3d0:	ldr	w0, [sp, #152]
  41e3d4:	cmp	w0, #0x0
  41e3d8:	b.ge	41e49c <node_permissions_apply+0x24c>  // b.tcont
  41e3dc:	str	xzr, [sp, #424]
  41e3e0:	ldr	x0, [sp, #136]
  41e3e4:	str	x0, [sp, #408]
  41e3e8:	mov	w0, #0x7                   	// #7
  41e3ec:	str	w0, [sp, #248]
  41e3f0:	ldr	w0, [sp, #152]
  41e3f4:	str	w0, [sp, #252]
  41e3f8:	ldr	x0, [sp, #408]
  41e3fc:	cmp	x0, #0x0
  41e400:	b.eq	41e43c <node_permissions_apply+0x1ec>  // b.none
  41e404:	mov	w0, #0x1                   	// #1
  41e408:	bl	40be30 <log_get_max_level_realm@plt>
  41e40c:	mov	w1, w0
  41e410:	ldr	w0, [sp, #248]
  41e414:	cmp	w0, w1
  41e418:	cset	w0, le
  41e41c:	and	w0, w0, #0xff
  41e420:	and	x0, x0, #0xff
  41e424:	cmp	x0, #0x0
  41e428:	b.eq	41e43c <node_permissions_apply+0x1ec>  // b.none
  41e42c:	add	x0, sp, #0x1a8
  41e430:	mov	x1, x0
  41e434:	ldr	x0, [sp, #408]
  41e438:	bl	40aba0 <sd_device_get_sysname@plt>
  41e43c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e440:	add	x2, x0, #0x7cb
  41e444:	ldr	x0, [sp, #424]
  41e448:	cmp	x0, #0x0
  41e44c:	b.eq	41e45c <node_permissions_apply+0x20c>  // b.none
  41e450:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e454:	add	x0, x0, #0x7f8
  41e458:	b	41e460 <node_permissions_apply+0x210>
  41e45c:	mov	x0, #0x0                   	// #0
  41e460:	ldr	x3, [sp, #424]
  41e464:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e468:	add	x1, x1, #0xb38
  41e46c:	str	x1, [sp, #8]
  41e470:	str	xzr, [sp]
  41e474:	mov	x7, #0x0                   	// #0
  41e478:	mov	x6, x3
  41e47c:	mov	x5, x0
  41e480:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e484:	add	x4, x0, #0xee8
  41e488:	mov	w3, #0x120                 	// #288
  41e48c:	ldr	w1, [sp, #252]
  41e490:	ldr	w0, [sp, #248]
  41e494:	bl	40b020 <log_object_internal@plt>
  41e498:	b	41f1e4 <node_permissions_apply+0xf94>
  41e49c:	add	x0, sp, #0x120
  41e4a0:	mov	x1, x0
  41e4a4:	ldr	x0, [sp, #136]
  41e4a8:	bl	40b3d0 <sd_device_get_devnum@plt>
  41e4ac:	str	w0, [sp, #152]
  41e4b0:	ldr	w0, [sp, #152]
  41e4b4:	cmp	w0, #0x0
  41e4b8:	b.ge	41e57c <node_permissions_apply+0x32c>  // b.tcont
  41e4bc:	str	xzr, [sp, #424]
  41e4c0:	ldr	x0, [sp, #136]
  41e4c4:	str	x0, [sp, #400]
  41e4c8:	mov	w0, #0x7                   	// #7
  41e4cc:	str	w0, [sp, #240]
  41e4d0:	ldr	w0, [sp, #152]
  41e4d4:	str	w0, [sp, #244]
  41e4d8:	ldr	x0, [sp, #400]
  41e4dc:	cmp	x0, #0x0
  41e4e0:	b.eq	41e51c <node_permissions_apply+0x2cc>  // b.none
  41e4e4:	mov	w0, #0x1                   	// #1
  41e4e8:	bl	40be30 <log_get_max_level_realm@plt>
  41e4ec:	mov	w1, w0
  41e4f0:	ldr	w0, [sp, #240]
  41e4f4:	cmp	w0, w1
  41e4f8:	cset	w0, le
  41e4fc:	and	w0, w0, #0xff
  41e500:	and	x0, x0, #0xff
  41e504:	cmp	x0, #0x0
  41e508:	b.eq	41e51c <node_permissions_apply+0x2cc>  // b.none
  41e50c:	add	x0, sp, #0x1a8
  41e510:	mov	x1, x0
  41e514:	ldr	x0, [sp, #400]
  41e518:	bl	40aba0 <sd_device_get_sysname@plt>
  41e51c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e520:	add	x2, x0, #0x7cb
  41e524:	ldr	x0, [sp, #424]
  41e528:	cmp	x0, #0x0
  41e52c:	b.eq	41e53c <node_permissions_apply+0x2ec>  // b.none
  41e530:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e534:	add	x0, x0, #0x7f8
  41e538:	b	41e540 <node_permissions_apply+0x2f0>
  41e53c:	mov	x0, #0x0                   	// #0
  41e540:	ldr	x3, [sp, #424]
  41e544:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e548:	add	x1, x1, #0xb58
  41e54c:	str	x1, [sp, #8]
  41e550:	str	xzr, [sp]
  41e554:	mov	x7, #0x0                   	// #0
  41e558:	mov	x6, x3
  41e55c:	mov	x5, x0
  41e560:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e564:	add	x4, x0, #0xee8
  41e568:	mov	w3, #0x123                 	// #291
  41e56c:	ldr	w1, [sp, #244]
  41e570:	ldr	w0, [sp, #240]
  41e574:	bl	40b020 <log_object_internal@plt>
  41e578:	b	41f1e4 <node_permissions_apply+0xf94>
  41e57c:	add	x0, sp, #0x118
  41e580:	mov	x1, x0
  41e584:	ldr	x0, [sp, #136]
  41e588:	bl	40bd00 <device_get_id_filename@plt>
  41e58c:	ldr	x2, [sp, #272]
  41e590:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e594:	add	x1, x0, #0xb78
  41e598:	mov	x0, x2
  41e59c:	bl	40b710 <strcmp@plt>
  41e5a0:	cmp	w0, #0x0
  41e5a4:	b.ne	41e5b8 <node_permissions_apply+0x368>  // b.any
  41e5a8:	ldr	w0, [sp, #128]
  41e5ac:	orr	w0, w0, #0x6000
  41e5b0:	str	w0, [sp, #128]
  41e5b4:	b	41e5c4 <node_permissions_apply+0x374>
  41e5b8:	ldr	w0, [sp, #128]
  41e5bc:	orr	w0, w0, #0x2000
  41e5c0:	str	w0, [sp, #128]
  41e5c4:	ldr	x0, [sp, #264]
  41e5c8:	add	x1, sp, #0x1b8
  41e5cc:	bl	4505c0 <lstat64>
  41e5d0:	cmp	w0, #0x0
  41e5d4:	b.ge	41e6bc <node_permissions_apply+0x46c>  // b.tcont
  41e5d8:	bl	40b040 <__errno_location@plt>
  41e5dc:	ldr	w0, [x0]
  41e5e0:	cmp	w0, #0x2
  41e5e4:	b.ne	41e5f0 <node_permissions_apply+0x3a0>  // b.any
  41e5e8:	mov	w0, #0x0                   	// #0
  41e5ec:	b	41f1e4 <node_permissions_apply+0xf94>
  41e5f0:	str	xzr, [sp, #424]
  41e5f4:	ldr	x0, [sp, #136]
  41e5f8:	str	x0, [sp, #392]
  41e5fc:	mov	w0, #0x7                   	// #7
  41e600:	str	w0, [sp, #232]
  41e604:	bl	40b040 <__errno_location@plt>
  41e608:	ldr	w0, [x0]
  41e60c:	str	w0, [sp, #236]
  41e610:	ldr	x0, [sp, #392]
  41e614:	cmp	x0, #0x0
  41e618:	b.eq	41e654 <node_permissions_apply+0x404>  // b.none
  41e61c:	mov	w0, #0x1                   	// #1
  41e620:	bl	40be30 <log_get_max_level_realm@plt>
  41e624:	mov	w1, w0
  41e628:	ldr	w0, [sp, #232]
  41e62c:	cmp	w0, w1
  41e630:	cset	w0, le
  41e634:	and	w0, w0, #0xff
  41e638:	and	x0, x0, #0xff
  41e63c:	cmp	x0, #0x0
  41e640:	b.eq	41e654 <node_permissions_apply+0x404>  // b.none
  41e644:	add	x0, sp, #0x1a8
  41e648:	mov	x1, x0
  41e64c:	ldr	x0, [sp, #392]
  41e650:	bl	40aba0 <sd_device_get_sysname@plt>
  41e654:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e658:	add	x2, x0, #0x7cb
  41e65c:	ldr	x0, [sp, #424]
  41e660:	cmp	x0, #0x0
  41e664:	b.eq	41e674 <node_permissions_apply+0x424>  // b.none
  41e668:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e66c:	add	x0, x0, #0x7f8
  41e670:	b	41e678 <node_permissions_apply+0x428>
  41e674:	mov	x0, #0x0                   	// #0
  41e678:	ldr	x3, [sp, #424]
  41e67c:	ldr	x1, [sp, #264]
  41e680:	str	x1, [sp, #16]
  41e684:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e688:	add	x1, x1, #0xb80
  41e68c:	str	x1, [sp, #8]
  41e690:	str	xzr, [sp]
  41e694:	mov	x7, #0x0                   	// #0
  41e698:	mov	x6, x3
  41e69c:	mov	x5, x0
  41e6a0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e6a4:	add	x4, x0, #0xee8
  41e6a8:	mov	w3, #0x12e                 	// #302
  41e6ac:	ldr	w1, [sp, #236]
  41e6b0:	ldr	w0, [sp, #232]
  41e6b4:	bl	40b020 <log_object_internal@plt>
  41e6b8:	b	41f1e4 <node_permissions_apply+0xf94>
  41e6bc:	ldr	w0, [sp, #128]
  41e6c0:	cmn	w0, #0x1
  41e6c4:	b.eq	41e6e0 <node_permissions_apply+0x490>  // b.none
  41e6c8:	ldr	w1, [sp, #456]
  41e6cc:	ldr	w0, [sp, #128]
  41e6d0:	eor	w0, w1, w0
  41e6d4:	and	w0, w0, #0xf000
  41e6d8:	cmp	w0, #0x0
  41e6dc:	b.ne	41e6f0 <node_permissions_apply+0x4a0>  // b.any
  41e6e0:	ldr	x1, [sp, #472]
  41e6e4:	ldr	x0, [sp, #288]
  41e6e8:	cmp	x1, x0
  41e6ec:	b.eq	41e7c8 <node_permissions_apply+0x578>  // b.none
  41e6f0:	str	xzr, [sp, #424]
  41e6f4:	ldr	x0, [sp, #136]
  41e6f8:	str	x0, [sp, #384]
  41e6fc:	mov	w0, #0x7                   	// #7
  41e700:	str	w0, [sp, #224]
  41e704:	mov	w0, #0x11                  	// #17
  41e708:	movk	w0, #0x4000, lsl #16
  41e70c:	str	w0, [sp, #228]
  41e710:	ldr	x0, [sp, #384]
  41e714:	cmp	x0, #0x0
  41e718:	b.eq	41e754 <node_permissions_apply+0x504>  // b.none
  41e71c:	mov	w0, #0x1                   	// #1
  41e720:	bl	40be30 <log_get_max_level_realm@plt>
  41e724:	mov	w1, w0
  41e728:	ldr	w0, [sp, #224]
  41e72c:	cmp	w0, w1
  41e730:	cset	w0, le
  41e734:	and	w0, w0, #0xff
  41e738:	and	x0, x0, #0xff
  41e73c:	cmp	x0, #0x0
  41e740:	b.eq	41e754 <node_permissions_apply+0x504>  // b.none
  41e744:	add	x0, sp, #0x1a8
  41e748:	mov	x1, x0
  41e74c:	ldr	x0, [sp, #384]
  41e750:	bl	40aba0 <sd_device_get_sysname@plt>
  41e754:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e758:	add	x8, x0, #0x7cb
  41e75c:	ldr	x0, [sp, #424]
  41e760:	cmp	x0, #0x0
  41e764:	b.eq	41e774 <node_permissions_apply+0x524>  // b.none
  41e768:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e76c:	add	x0, x0, #0x7f8
  41e770:	b	41e778 <node_permissions_apply+0x528>
  41e774:	mov	x0, #0x0                   	// #0
  41e778:	ldr	x3, [sp, #424]
  41e77c:	ldr	x1, [sp, #264]
  41e780:	ldr	x2, [sp, #280]
  41e784:	str	x2, [sp, #24]
  41e788:	str	x1, [sp, #16]
  41e78c:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e790:	add	x1, x1, #0xba0
  41e794:	str	x1, [sp, #8]
  41e798:	str	xzr, [sp]
  41e79c:	mov	x7, #0x0                   	// #0
  41e7a0:	mov	x6, x3
  41e7a4:	mov	x5, x0
  41e7a8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e7ac:	add	x4, x0, #0xee8
  41e7b0:	mov	w3, #0x132                 	// #306
  41e7b4:	mov	x2, x8
  41e7b8:	ldr	w1, [sp, #228]
  41e7bc:	ldr	w0, [sp, #224]
  41e7c0:	bl	40b020 <log_object_internal@plt>
  41e7c4:	b	41f1e4 <node_permissions_apply+0xf94>
  41e7c8:	ldr	w0, [sp, #128]
  41e7cc:	cmn	w0, #0x1
  41e7d0:	b.eq	41e7f4 <node_permissions_apply+0x5a4>  // b.none
  41e7d4:	ldr	w1, [sp, #456]
  41e7d8:	ldr	w0, [sp, #128]
  41e7dc:	eor	w0, w1, w0
  41e7e0:	and	w0, w0, #0x1ff
  41e7e4:	cmp	w0, #0x0
  41e7e8:	b.eq	41e7f4 <node_permissions_apply+0x5a4>  // b.none
  41e7ec:	mov	w0, #0x1                   	// #1
  41e7f0:	b	41e7f8 <node_permissions_apply+0x5a8>
  41e7f4:	mov	w0, #0x0                   	// #0
  41e7f8:	strb	w0, [sp, #149]
  41e7fc:	ldrb	w0, [sp, #149]
  41e800:	and	w0, w0, #0x1
  41e804:	strb	w0, [sp, #149]
  41e808:	ldr	w0, [sp, #124]
  41e80c:	bl	40aea0 <uid_is_valid@plt>
  41e810:	and	w0, w0, #0xff
  41e814:	cmp	w0, #0x0
  41e818:	b.eq	41e834 <node_permissions_apply+0x5e4>  // b.none
  41e81c:	ldr	w0, [sp, #464]
  41e820:	ldr	w1, [sp, #124]
  41e824:	cmp	w1, w0
  41e828:	b.eq	41e834 <node_permissions_apply+0x5e4>  // b.none
  41e82c:	mov	w0, #0x1                   	// #1
  41e830:	b	41e838 <node_permissions_apply+0x5e8>
  41e834:	mov	w0, #0x0                   	// #0
  41e838:	strb	w0, [sp, #150]
  41e83c:	ldrb	w0, [sp, #150]
  41e840:	and	w0, w0, #0x1
  41e844:	strb	w0, [sp, #150]
  41e848:	ldr	w0, [sp, #120]
  41e84c:	bl	41c7d8 <gid_is_valid>
  41e850:	and	w0, w0, #0xff
  41e854:	cmp	w0, #0x0
  41e858:	b.eq	41e874 <node_permissions_apply+0x624>  // b.none
  41e85c:	ldr	w0, [sp, #468]
  41e860:	ldr	w1, [sp, #120]
  41e864:	cmp	w1, w0
  41e868:	b.eq	41e874 <node_permissions_apply+0x624>  // b.none
  41e86c:	mov	w0, #0x1                   	// #1
  41e870:	b	41e878 <node_permissions_apply+0x628>
  41e874:	mov	w0, #0x0                   	// #0
  41e878:	strb	w0, [sp, #151]
  41e87c:	ldrb	w0, [sp, #151]
  41e880:	and	w0, w0, #0x1
  41e884:	strb	w0, [sp, #151]
  41e888:	ldrb	w0, [sp, #149]
  41e88c:	cmp	w0, #0x0
  41e890:	b.ne	41e8b8 <node_permissions_apply+0x668>  // b.any
  41e894:	ldrb	w0, [sp, #150]
  41e898:	cmp	w0, #0x0
  41e89c:	b.ne	41e8b8 <node_permissions_apply+0x668>  // b.any
  41e8a0:	ldrb	w0, [sp, #151]
  41e8a4:	cmp	w0, #0x0
  41e8a8:	b.ne	41e8b8 <node_permissions_apply+0x668>  // b.any
  41e8ac:	ldrb	w0, [sp, #135]
  41e8b0:	cmp	w0, #0x0
  41e8b4:	b.eq	41f1c8 <node_permissions_apply+0xf78>  // b.none
  41e8b8:	strb	wzr, [sp, #147]
  41e8bc:	strb	wzr, [sp, #148]
  41e8c0:	ldrb	w0, [sp, #149]
  41e8c4:	cmp	w0, #0x0
  41e8c8:	b.ne	41e8e4 <node_permissions_apply+0x694>  // b.any
  41e8cc:	ldrb	w0, [sp, #150]
  41e8d0:	cmp	w0, #0x0
  41e8d4:	b.ne	41e8e4 <node_permissions_apply+0x694>  // b.any
  41e8d8:	ldrb	w0, [sp, #151]
  41e8dc:	cmp	w0, #0x0
  41e8e0:	b.eq	41eb84 <node_permissions_apply+0x934>  // b.none
  41e8e4:	str	xzr, [sp, #424]
  41e8e8:	ldr	x0, [sp, #136]
  41e8ec:	str	x0, [sp, #328]
  41e8f0:	mov	w0, #0x7                   	// #7
  41e8f4:	str	w0, [sp, #164]
  41e8f8:	str	wzr, [sp, #168]
  41e8fc:	ldr	x0, [sp, #328]
  41e900:	cmp	x0, #0x0
  41e904:	b.eq	41e940 <node_permissions_apply+0x6f0>  // b.none
  41e908:	mov	w0, #0x1                   	// #1
  41e90c:	bl	40be30 <log_get_max_level_realm@plt>
  41e910:	mov	w1, w0
  41e914:	ldr	w0, [sp, #164]
  41e918:	cmp	w0, w1
  41e91c:	cset	w0, le
  41e920:	and	w0, w0, #0xff
  41e924:	and	x0, x0, #0xff
  41e928:	cmp	x0, #0x0
  41e92c:	b.eq	41e940 <node_permissions_apply+0x6f0>  // b.none
  41e930:	add	x0, sp, #0x1a8
  41e934:	mov	x1, x0
  41e938:	ldr	x0, [sp, #328]
  41e93c:	bl	40aba0 <sd_device_get_sysname@plt>
  41e940:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e944:	add	x22, x0, #0x7cb
  41e948:	ldr	x0, [sp, #424]
  41e94c:	cmp	x0, #0x0
  41e950:	b.eq	41e960 <node_permissions_apply+0x710>  // b.none
  41e954:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e958:	add	x20, x0, #0x7f8
  41e95c:	b	41e964 <node_permissions_apply+0x714>
  41e960:	mov	x20, #0x0                   	// #0
  41e964:	ldr	x23, [sp, #424]
  41e968:	ldr	x21, [sp, #264]
  41e96c:	ldr	w0, [sp, #124]
  41e970:	bl	40aea0 <uid_is_valid@plt>
  41e974:	and	w0, w0, #0xff
  41e978:	cmp	w0, #0x0
  41e97c:	b.ne	41e988 <node_permissions_apply+0x738>  // b.any
  41e980:	ldr	w19, [sp, #464]
  41e984:	b	41e98c <node_permissions_apply+0x73c>
  41e988:	ldr	w19, [sp, #124]
  41e98c:	ldr	w0, [sp, #120]
  41e990:	bl	41c7d8 <gid_is_valid>
  41e994:	and	w0, w0, #0xff
  41e998:	cmp	w0, #0x0
  41e99c:	b.ne	41e9a8 <node_permissions_apply+0x758>  // b.any
  41e9a0:	ldr	w0, [sp, #468]
  41e9a4:	b	41e9ac <node_permissions_apply+0x75c>
  41e9a8:	ldr	w0, [sp, #120]
  41e9ac:	ldr	w1, [sp, #128]
  41e9b0:	cmn	w1, #0x1
  41e9b4:	b.eq	41e9c4 <node_permissions_apply+0x774>  // b.none
  41e9b8:	ldr	w1, [sp, #128]
  41e9bc:	and	w1, w1, #0x1ff
  41e9c0:	b	41e9cc <node_permissions_apply+0x77c>
  41e9c4:	ldr	w1, [sp, #456]
  41e9c8:	and	w1, w1, #0x1ff
  41e9cc:	str	w1, [sp, #40]
  41e9d0:	str	w0, [sp, #32]
  41e9d4:	str	w19, [sp, #24]
  41e9d8:	str	x21, [sp, #16]
  41e9dc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e9e0:	add	x0, x0, #0xbe0
  41e9e4:	str	x0, [sp, #8]
  41e9e8:	str	xzr, [sp]
  41e9ec:	mov	x7, #0x0                   	// #0
  41e9f0:	mov	x6, x23
  41e9f4:	mov	x5, x20
  41e9f8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41e9fc:	add	x4, x0, #0xee8
  41ea00:	mov	w3, #0x140                 	// #320
  41ea04:	mov	x2, x22
  41ea08:	ldr	w1, [sp, #168]
  41ea0c:	ldr	w0, [sp, #164]
  41ea10:	bl	40b020 <log_object_internal@plt>
  41ea14:	ldr	x0, [sp, #264]
  41ea18:	ldr	w3, [sp, #120]
  41ea1c:	ldr	w2, [sp, #124]
  41ea20:	ldr	w1, [sp, #128]
  41ea24:	bl	40ab90 <chmod_and_chown@plt>
  41ea28:	str	w0, [sp, #152]
  41ea2c:	ldr	w0, [sp, #152]
  41ea30:	cmp	w0, #0x0
  41ea34:	b.ge	41ecb4 <node_permissions_apply+0xa64>  // b.tcont
  41ea38:	str	xzr, [sp, #424]
  41ea3c:	ldr	x0, [sp, #136]
  41ea40:	str	x0, [sp, #336]
  41ea44:	ldr	w0, [sp, #152]
  41ea48:	cmn	w0, #0x2
  41ea4c:	b.ne	41ea58 <node_permissions_apply+0x808>  // b.any
  41ea50:	mov	w0, #0x7                   	// #7
  41ea54:	b	41ea5c <node_permissions_apply+0x80c>
  41ea58:	mov	w0, #0x3                   	// #3
  41ea5c:	str	w0, [sp, #172]
  41ea60:	ldr	w0, [sp, #152]
  41ea64:	str	w0, [sp, #176]
  41ea68:	ldr	x0, [sp, #336]
  41ea6c:	cmp	x0, #0x0
  41ea70:	b.eq	41eaac <node_permissions_apply+0x85c>  // b.none
  41ea74:	mov	w0, #0x1                   	// #1
  41ea78:	bl	40be30 <log_get_max_level_realm@plt>
  41ea7c:	mov	w1, w0
  41ea80:	ldr	w0, [sp, #172]
  41ea84:	cmp	w0, w1
  41ea88:	cset	w0, le
  41ea8c:	and	w0, w0, #0xff
  41ea90:	and	x0, x0, #0xff
  41ea94:	cmp	x0, #0x0
  41ea98:	b.eq	41eaac <node_permissions_apply+0x85c>  // b.none
  41ea9c:	add	x0, sp, #0x1a8
  41eaa0:	mov	x1, x0
  41eaa4:	ldr	x0, [sp, #336]
  41eaa8:	bl	40aba0 <sd_device_get_sysname@plt>
  41eaac:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41eab0:	add	x22, x0, #0x7cb
  41eab4:	ldr	x0, [sp, #424]
  41eab8:	cmp	x0, #0x0
  41eabc:	b.eq	41eacc <node_permissions_apply+0x87c>  // b.none
  41eac0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41eac4:	add	x20, x0, #0x7f8
  41eac8:	b	41ead0 <node_permissions_apply+0x880>
  41eacc:	mov	x20, #0x0                   	// #0
  41ead0:	ldr	x23, [sp, #424]
  41ead4:	ldr	x21, [sp, #264]
  41ead8:	ldr	w0, [sp, #124]
  41eadc:	bl	40aea0 <uid_is_valid@plt>
  41eae0:	and	w0, w0, #0xff
  41eae4:	cmp	w0, #0x0
  41eae8:	b.ne	41eaf4 <node_permissions_apply+0x8a4>  // b.any
  41eaec:	ldr	w19, [sp, #464]
  41eaf0:	b	41eaf8 <node_permissions_apply+0x8a8>
  41eaf4:	ldr	w19, [sp, #124]
  41eaf8:	ldr	w0, [sp, #120]
  41eafc:	bl	41c7d8 <gid_is_valid>
  41eb00:	and	w0, w0, #0xff
  41eb04:	cmp	w0, #0x0
  41eb08:	b.ne	41eb14 <node_permissions_apply+0x8c4>  // b.any
  41eb0c:	ldr	w0, [sp, #468]
  41eb10:	b	41eb18 <node_permissions_apply+0x8c8>
  41eb14:	ldr	w0, [sp, #120]
  41eb18:	ldr	w1, [sp, #128]
  41eb1c:	cmn	w1, #0x1
  41eb20:	b.eq	41eb30 <node_permissions_apply+0x8e0>  // b.none
  41eb24:	ldr	w1, [sp, #128]
  41eb28:	and	w1, w1, #0x1ff
  41eb2c:	b	41eb38 <node_permissions_apply+0x8e8>
  41eb30:	ldr	w1, [sp, #456]
  41eb34:	and	w1, w1, #0x1ff
  41eb38:	str	w1, [sp, #40]
  41eb3c:	str	w0, [sp, #32]
  41eb40:	str	w19, [sp, #24]
  41eb44:	str	x21, [sp, #16]
  41eb48:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41eb4c:	add	x0, x0, #0xc18
  41eb50:	str	x0, [sp, #8]
  41eb54:	str	xzr, [sp]
  41eb58:	mov	x7, #0x0                   	// #0
  41eb5c:	mov	x6, x23
  41eb60:	mov	x5, x20
  41eb64:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41eb68:	add	x4, x0, #0xee8
  41eb6c:	mov	w3, #0x148                 	// #328
  41eb70:	mov	x2, x22
  41eb74:	ldr	w1, [sp, #176]
  41eb78:	ldr	w0, [sp, #172]
  41eb7c:	bl	40b020 <log_object_internal@plt>
  41eb80:	b	41ecb4 <node_permissions_apply+0xa64>
  41eb84:	str	xzr, [sp, #424]
  41eb88:	ldr	x0, [sp, #136]
  41eb8c:	str	x0, [sp, #320]
  41eb90:	mov	w0, #0x7                   	// #7
  41eb94:	str	w0, [sp, #156]
  41eb98:	str	wzr, [sp, #160]
  41eb9c:	ldr	x0, [sp, #320]
  41eba0:	cmp	x0, #0x0
  41eba4:	b.eq	41ebe0 <node_permissions_apply+0x990>  // b.none
  41eba8:	mov	w0, #0x1                   	// #1
  41ebac:	bl	40be30 <log_get_max_level_realm@plt>
  41ebb0:	mov	w1, w0
  41ebb4:	ldr	w0, [sp, #156]
  41ebb8:	cmp	w0, w1
  41ebbc:	cset	w0, le
  41ebc0:	and	w0, w0, #0xff
  41ebc4:	and	x0, x0, #0xff
  41ebc8:	cmp	x0, #0x0
  41ebcc:	b.eq	41ebe0 <node_permissions_apply+0x990>  // b.none
  41ebd0:	add	x0, sp, #0x1a8
  41ebd4:	mov	x1, x0
  41ebd8:	ldr	x0, [sp, #320]
  41ebdc:	bl	40aba0 <sd_device_get_sysname@plt>
  41ebe0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ebe4:	add	x22, x0, #0x7cb
  41ebe8:	ldr	x0, [sp, #424]
  41ebec:	cmp	x0, #0x0
  41ebf0:	b.eq	41ec00 <node_permissions_apply+0x9b0>  // b.none
  41ebf4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ebf8:	add	x20, x0, #0x7f8
  41ebfc:	b	41ec04 <node_permissions_apply+0x9b4>
  41ec00:	mov	x20, #0x0                   	// #0
  41ec04:	ldr	x23, [sp, #424]
  41ec08:	ldr	x21, [sp, #264]
  41ec0c:	ldr	w0, [sp, #124]
  41ec10:	bl	40aea0 <uid_is_valid@plt>
  41ec14:	and	w0, w0, #0xff
  41ec18:	cmp	w0, #0x0
  41ec1c:	b.ne	41ec28 <node_permissions_apply+0x9d8>  // b.any
  41ec20:	ldr	w19, [sp, #464]
  41ec24:	b	41ec2c <node_permissions_apply+0x9dc>
  41ec28:	ldr	w19, [sp, #124]
  41ec2c:	ldr	w0, [sp, #120]
  41ec30:	bl	41c7d8 <gid_is_valid>
  41ec34:	and	w0, w0, #0xff
  41ec38:	cmp	w0, #0x0
  41ec3c:	b.ne	41ec48 <node_permissions_apply+0x9f8>  // b.any
  41ec40:	ldr	w0, [sp, #468]
  41ec44:	b	41ec4c <node_permissions_apply+0x9fc>
  41ec48:	ldr	w0, [sp, #120]
  41ec4c:	ldr	w1, [sp, #128]
  41ec50:	cmn	w1, #0x1
  41ec54:	b.eq	41ec64 <node_permissions_apply+0xa14>  // b.none
  41ec58:	ldr	w1, [sp, #128]
  41ec5c:	and	w1, w1, #0x1ff
  41ec60:	b	41ec6c <node_permissions_apply+0xa1c>
  41ec64:	ldr	w1, [sp, #456]
  41ec68:	and	w1, w1, #0x1ff
  41ec6c:	str	w1, [sp, #40]
  41ec70:	str	w0, [sp, #32]
  41ec74:	str	w19, [sp, #24]
  41ec78:	str	x21, [sp, #16]
  41ec7c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ec80:	add	x0, x0, #0xc58
  41ec84:	str	x0, [sp, #8]
  41ec88:	str	xzr, [sp]
  41ec8c:	mov	x7, #0x0                   	// #0
  41ec90:	mov	x6, x23
  41ec94:	mov	x5, x20
  41ec98:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ec9c:	add	x4, x0, #0xee8
  41eca0:	mov	w3, #0x150                 	// #336
  41eca4:	mov	x2, x22
  41eca8:	ldr	w1, [sp, #160]
  41ecac:	ldr	w0, [sp, #156]
  41ecb0:	bl	40b020 <log_object_internal@plt>
  41ecb4:	mov	w0, #0xfffffffe            	// #-2
  41ecb8:	str	w0, [sp, #424]
  41ecbc:	str	xzr, [sp, #432]
  41ecc0:	b	41f158 <node_permissions_apply+0xf08>
  41ecc4:	ldr	x2, [sp, #296]
  41ecc8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41eccc:	add	x1, x0, #0xc90
  41ecd0:	mov	x0, x2
  41ecd4:	bl	40b710 <strcmp@plt>
  41ecd8:	cmp	w0, #0x0
  41ecdc:	b.ne	41eea4 <node_permissions_apply+0xc54>  // b.any
  41ece0:	mov	w0, #0x1                   	// #1
  41ece4:	strb	w0, [sp, #147]
  41ece8:	ldr	x0, [sp, #264]
  41ecec:	ldr	x1, [sp, #304]
  41ecf0:	bl	40b2b0 <mac_selinux_apply@plt>
  41ecf4:	str	w0, [sp, #188]
  41ecf8:	ldr	w0, [sp, #188]
  41ecfc:	cmp	w0, #0x0
  41ed00:	b.ge	41ede0 <node_permissions_apply+0xb90>  // b.tcont
  41ed04:	str	xzr, [sp, #312]
  41ed08:	ldr	x0, [sp, #136]
  41ed0c:	str	x0, [sp, #376]
  41ed10:	ldr	w0, [sp, #188]
  41ed14:	cmn	w0, #0x2
  41ed18:	b.ne	41ed24 <node_permissions_apply+0xad4>  // b.any
  41ed1c:	mov	w0, #0x7                   	// #7
  41ed20:	b	41ed28 <node_permissions_apply+0xad8>
  41ed24:	mov	w0, #0x3                   	// #3
  41ed28:	str	w0, [sp, #216]
  41ed2c:	ldr	w0, [sp, #188]
  41ed30:	str	w0, [sp, #220]
  41ed34:	ldr	x0, [sp, #376]
  41ed38:	cmp	x0, #0x0
  41ed3c:	b.eq	41ed78 <node_permissions_apply+0xb28>  // b.none
  41ed40:	mov	w0, #0x1                   	// #1
  41ed44:	bl	40be30 <log_get_max_level_realm@plt>
  41ed48:	mov	w1, w0
  41ed4c:	ldr	w0, [sp, #216]
  41ed50:	cmp	w0, w1
  41ed54:	cset	w0, le
  41ed58:	and	w0, w0, #0xff
  41ed5c:	and	x0, x0, #0xff
  41ed60:	cmp	x0, #0x0
  41ed64:	b.eq	41ed78 <node_permissions_apply+0xb28>  // b.none
  41ed68:	add	x0, sp, #0x138
  41ed6c:	mov	x1, x0
  41ed70:	ldr	x0, [sp, #376]
  41ed74:	bl	40aba0 <sd_device_get_sysname@plt>
  41ed78:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ed7c:	add	x2, x0, #0x7cb
  41ed80:	ldr	x0, [sp, #312]
  41ed84:	cmp	x0, #0x0
  41ed88:	b.eq	41ed98 <node_permissions_apply+0xb48>  // b.none
  41ed8c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ed90:	add	x0, x0, #0x7f8
  41ed94:	b	41ed9c <node_permissions_apply+0xb4c>
  41ed98:	mov	x0, #0x0                   	// #0
  41ed9c:	ldr	x3, [sp, #312]
  41eda0:	ldr	x1, [sp, #304]
  41eda4:	str	x1, [sp, #16]
  41eda8:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41edac:	add	x1, x1, #0xc98
  41edb0:	str	x1, [sp, #8]
  41edb4:	str	xzr, [sp]
  41edb8:	mov	x7, #0x0                   	// #0
  41edbc:	mov	x6, x3
  41edc0:	mov	x5, x0
  41edc4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41edc8:	add	x4, x0, #0xee8
  41edcc:	mov	w3, #0x15f                 	// #351
  41edd0:	ldr	w1, [sp, #220]
  41edd4:	ldr	w0, [sp, #216]
  41edd8:	bl	40b020 <log_object_internal@plt>
  41eddc:	b	41f158 <node_permissions_apply+0xf08>
  41ede0:	str	xzr, [sp, #312]
  41ede4:	ldr	x0, [sp, #136]
  41ede8:	str	x0, [sp, #368]
  41edec:	mov	w0, #0x7                   	// #7
  41edf0:	str	w0, [sp, #208]
  41edf4:	str	wzr, [sp, #212]
  41edf8:	ldr	x0, [sp, #368]
  41edfc:	cmp	x0, #0x0
  41ee00:	b.eq	41ee3c <node_permissions_apply+0xbec>  // b.none
  41ee04:	mov	w0, #0x1                   	// #1
  41ee08:	bl	40be30 <log_get_max_level_realm@plt>
  41ee0c:	mov	w1, w0
  41ee10:	ldr	w0, [sp, #208]
  41ee14:	cmp	w0, w1
  41ee18:	cset	w0, le
  41ee1c:	and	w0, w0, #0xff
  41ee20:	and	x0, x0, #0xff
  41ee24:	cmp	x0, #0x0
  41ee28:	b.eq	41ee3c <node_permissions_apply+0xbec>  // b.none
  41ee2c:	add	x0, sp, #0x138
  41ee30:	mov	x1, x0
  41ee34:	ldr	x0, [sp, #368]
  41ee38:	bl	40aba0 <sd_device_get_sysname@plt>
  41ee3c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ee40:	add	x2, x0, #0x7cb
  41ee44:	ldr	x0, [sp, #312]
  41ee48:	cmp	x0, #0x0
  41ee4c:	b.eq	41ee5c <node_permissions_apply+0xc0c>  // b.none
  41ee50:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ee54:	add	x0, x0, #0x7f8
  41ee58:	b	41ee60 <node_permissions_apply+0xc10>
  41ee5c:	mov	x0, #0x0                   	// #0
  41ee60:	ldr	x3, [sp, #312]
  41ee64:	ldr	x1, [sp, #304]
  41ee68:	str	x1, [sp, #16]
  41ee6c:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ee70:	add	x1, x1, #0xcc8
  41ee74:	str	x1, [sp, #8]
  41ee78:	str	xzr, [sp]
  41ee7c:	mov	x7, #0x0                   	// #0
  41ee80:	mov	x6, x3
  41ee84:	mov	x5, x0
  41ee88:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ee8c:	add	x4, x0, #0xee8
  41ee90:	mov	w3, #0x162                 	// #354
  41ee94:	ldr	w1, [sp, #212]
  41ee98:	ldr	w0, [sp, #208]
  41ee9c:	bl	40b020 <log_object_internal@plt>
  41eea0:	b	41f158 <node_permissions_apply+0xf08>
  41eea4:	ldr	x2, [sp, #296]
  41eea8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41eeac:	add	x1, x0, #0xcf0
  41eeb0:	mov	x0, x2
  41eeb4:	bl	40b710 <strcmp@plt>
  41eeb8:	cmp	w0, #0x0
  41eebc:	b.ne	41f08c <node_permissions_apply+0xe3c>  // b.any
  41eec0:	mov	w0, #0x1                   	// #1
  41eec4:	strb	w0, [sp, #148]
  41eec8:	ldr	x0, [sp, #264]
  41eecc:	ldr	x1, [sp, #304]
  41eed0:	mov	x2, x1
  41eed4:	mov	w1, #0x0                   	// #0
  41eed8:	bl	40b100 <mac_smack_apply@plt>
  41eedc:	str	w0, [sp, #188]
  41eee0:	ldr	w0, [sp, #188]
  41eee4:	cmp	w0, #0x0
  41eee8:	b.ge	41efc8 <node_permissions_apply+0xd78>  // b.tcont
  41eeec:	str	xzr, [sp, #312]
  41eef0:	ldr	x0, [sp, #136]
  41eef4:	str	x0, [sp, #360]
  41eef8:	ldr	w0, [sp, #188]
  41eefc:	cmn	w0, #0x2
  41ef00:	b.ne	41ef0c <node_permissions_apply+0xcbc>  // b.any
  41ef04:	mov	w0, #0x7                   	// #7
  41ef08:	b	41ef10 <node_permissions_apply+0xcc0>
  41ef0c:	mov	w0, #0x3                   	// #3
  41ef10:	str	w0, [sp, #200]
  41ef14:	ldr	w0, [sp, #188]
  41ef18:	str	w0, [sp, #204]
  41ef1c:	ldr	x0, [sp, #360]
  41ef20:	cmp	x0, #0x0
  41ef24:	b.eq	41ef60 <node_permissions_apply+0xd10>  // b.none
  41ef28:	mov	w0, #0x1                   	// #1
  41ef2c:	bl	40be30 <log_get_max_level_realm@plt>
  41ef30:	mov	w1, w0
  41ef34:	ldr	w0, [sp, #200]
  41ef38:	cmp	w0, w1
  41ef3c:	cset	w0, le
  41ef40:	and	w0, w0, #0xff
  41ef44:	and	x0, x0, #0xff
  41ef48:	cmp	x0, #0x0
  41ef4c:	b.eq	41ef60 <node_permissions_apply+0xd10>  // b.none
  41ef50:	add	x0, sp, #0x138
  41ef54:	mov	x1, x0
  41ef58:	ldr	x0, [sp, #360]
  41ef5c:	bl	40aba0 <sd_device_get_sysname@plt>
  41ef60:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ef64:	add	x2, x0, #0x7cb
  41ef68:	ldr	x0, [sp, #312]
  41ef6c:	cmp	x0, #0x0
  41ef70:	b.eq	41ef80 <node_permissions_apply+0xd30>  // b.none
  41ef74:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ef78:	add	x0, x0, #0x7f8
  41ef7c:	b	41ef84 <node_permissions_apply+0xd34>
  41ef80:	mov	x0, #0x0                   	// #0
  41ef84:	ldr	x3, [sp, #312]
  41ef88:	ldr	x1, [sp, #304]
  41ef8c:	str	x1, [sp, #16]
  41ef90:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41ef94:	add	x1, x1, #0xcf8
  41ef98:	str	x1, [sp, #8]
  41ef9c:	str	xzr, [sp]
  41efa0:	mov	x7, #0x0                   	// #0
  41efa4:	mov	x6, x3
  41efa8:	mov	x5, x0
  41efac:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41efb0:	add	x4, x0, #0xee8
  41efb4:	mov	w3, #0x169                 	// #361
  41efb8:	ldr	w1, [sp, #204]
  41efbc:	ldr	w0, [sp, #200]
  41efc0:	bl	40b020 <log_object_internal@plt>
  41efc4:	b	41f158 <node_permissions_apply+0xf08>
  41efc8:	str	xzr, [sp, #312]
  41efcc:	ldr	x0, [sp, #136]
  41efd0:	str	x0, [sp, #352]
  41efd4:	mov	w0, #0x7                   	// #7
  41efd8:	str	w0, [sp, #192]
  41efdc:	str	wzr, [sp, #196]
  41efe0:	ldr	x0, [sp, #352]
  41efe4:	cmp	x0, #0x0
  41efe8:	b.eq	41f024 <node_permissions_apply+0xdd4>  // b.none
  41efec:	mov	w0, #0x1                   	// #1
  41eff0:	bl	40be30 <log_get_max_level_realm@plt>
  41eff4:	mov	w1, w0
  41eff8:	ldr	w0, [sp, #192]
  41effc:	cmp	w0, w1
  41f000:	cset	w0, le
  41f004:	and	w0, w0, #0xff
  41f008:	and	x0, x0, #0xff
  41f00c:	cmp	x0, #0x0
  41f010:	b.eq	41f024 <node_permissions_apply+0xdd4>  // b.none
  41f014:	add	x0, sp, #0x138
  41f018:	mov	x1, x0
  41f01c:	ldr	x0, [sp, #352]
  41f020:	bl	40aba0 <sd_device_get_sysname@plt>
  41f024:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f028:	add	x2, x0, #0x7cb
  41f02c:	ldr	x0, [sp, #312]
  41f030:	cmp	x0, #0x0
  41f034:	b.eq	41f044 <node_permissions_apply+0xdf4>  // b.none
  41f038:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f03c:	add	x0, x0, #0x7f8
  41f040:	b	41f048 <node_permissions_apply+0xdf8>
  41f044:	mov	x0, #0x0                   	// #0
  41f048:	ldr	x3, [sp, #312]
  41f04c:	ldr	x1, [sp, #304]
  41f050:	str	x1, [sp, #16]
  41f054:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f058:	add	x1, x1, #0xd28
  41f05c:	str	x1, [sp, #8]
  41f060:	str	xzr, [sp]
  41f064:	mov	x7, #0x0                   	// #0
  41f068:	mov	x6, x3
  41f06c:	mov	x5, x0
  41f070:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f074:	add	x4, x0, #0xee8
  41f078:	mov	w3, #0x16c                 	// #364
  41f07c:	ldr	w1, [sp, #196]
  41f080:	ldr	w0, [sp, #192]
  41f084:	bl	40b020 <log_object_internal@plt>
  41f088:	b	41f158 <node_permissions_apply+0xf08>
  41f08c:	str	xzr, [sp, #312]
  41f090:	ldr	x0, [sp, #136]
  41f094:	str	x0, [sp, #344]
  41f098:	mov	w0, #0x3                   	// #3
  41f09c:	str	w0, [sp, #180]
  41f0a0:	str	wzr, [sp, #184]
  41f0a4:	ldr	x0, [sp, #344]
  41f0a8:	cmp	x0, #0x0
  41f0ac:	b.eq	41f0e8 <node_permissions_apply+0xe98>  // b.none
  41f0b0:	mov	w0, #0x1                   	// #1
  41f0b4:	bl	40be30 <log_get_max_level_realm@plt>
  41f0b8:	mov	w1, w0
  41f0bc:	ldr	w0, [sp, #180]
  41f0c0:	cmp	w0, w1
  41f0c4:	cset	w0, le
  41f0c8:	and	w0, w0, #0xff
  41f0cc:	and	x0, x0, #0xff
  41f0d0:	cmp	x0, #0x0
  41f0d4:	b.eq	41f0e8 <node_permissions_apply+0xe98>  // b.none
  41f0d8:	add	x0, sp, #0x138
  41f0dc:	mov	x1, x0
  41f0e0:	ldr	x0, [sp, #344]
  41f0e4:	bl	40aba0 <sd_device_get_sysname@plt>
  41f0e8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f0ec:	add	x8, x0, #0x7cb
  41f0f0:	ldr	x0, [sp, #312]
  41f0f4:	cmp	x0, #0x0
  41f0f8:	b.eq	41f108 <node_permissions_apply+0xeb8>  // b.none
  41f0fc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f100:	add	x0, x0, #0x7f8
  41f104:	b	41f10c <node_permissions_apply+0xebc>
  41f108:	mov	x0, #0x0                   	// #0
  41f10c:	ldr	x3, [sp, #312]
  41f110:	ldr	x1, [sp, #296]
  41f114:	ldr	x2, [sp, #304]
  41f118:	str	x2, [sp, #24]
  41f11c:	str	x1, [sp, #16]
  41f120:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f124:	add	x1, x1, #0xd48
  41f128:	str	x1, [sp, #8]
  41f12c:	str	xzr, [sp]
  41f130:	mov	x7, #0x0                   	// #0
  41f134:	mov	x6, x3
  41f138:	mov	x5, x0
  41f13c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f140:	add	x4, x0, #0xee8
  41f144:	mov	w3, #0x16f                 	// #367
  41f148:	mov	x2, x8
  41f14c:	ldr	w1, [sp, #184]
  41f150:	ldr	w0, [sp, #180]
  41f154:	bl	40b020 <log_object_internal@plt>
  41f158:	add	x2, sp, #0x128
  41f15c:	add	x1, sp, #0x130
  41f160:	add	x0, sp, #0x1a8
  41f164:	mov	x3, x2
  41f168:	mov	x2, x1
  41f16c:	mov	x1, x0
  41f170:	ldr	x0, [sp, #112]
  41f174:	bl	41c748 <ordered_hashmap_iterate>
  41f178:	and	w0, w0, #0xff
  41f17c:	cmp	w0, #0x0
  41f180:	b.ne	41ecc4 <node_permissions_apply+0xa74>  // b.any
  41f184:	ldrb	w0, [sp, #147]
  41f188:	eor	w0, w0, #0x1
  41f18c:	and	w0, w0, #0xff
  41f190:	cmp	w0, #0x0
  41f194:	b.eq	41f1a4 <node_permissions_apply+0xf54>  // b.none
  41f198:	ldr	x0, [sp, #264]
  41f19c:	mov	w1, #0x1                   	// #1
  41f1a0:	bl	40bbe0 <mac_selinux_fix@plt>
  41f1a4:	ldrb	w0, [sp, #148]
  41f1a8:	eor	w0, w0, #0x1
  41f1ac:	and	w0, w0, #0xff
  41f1b0:	cmp	w0, #0x0
  41f1b4:	b.eq	41f1c8 <node_permissions_apply+0xf78>  // b.none
  41f1b8:	ldr	x0, [sp, #264]
  41f1bc:	mov	x2, #0x0                   	// #0
  41f1c0:	mov	w1, #0x0                   	// #0
  41f1c4:	bl	40b100 <mac_smack_apply@plt>
  41f1c8:	ldr	x0, [sp, #264]
  41f1cc:	mov	w3, #0x0                   	// #0
  41f1d0:	mov	x2, #0x0                   	// #0
  41f1d4:	mov	x1, x0
  41f1d8:	mov	w0, #0xffffff9c            	// #-100
  41f1dc:	bl	40b340 <utimensat@plt>
  41f1e0:	ldr	w0, [sp, #152]
  41f1e4:	mov	w1, w0
  41f1e8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41f1ec:	ldr	x0, [x0, #4032]
  41f1f0:	ldr	x2, [sp, #568]
  41f1f4:	ldr	x0, [x0]
  41f1f8:	eor	x0, x2, x0
  41f1fc:	cmp	x0, #0x0
  41f200:	b.eq	41f208 <node_permissions_apply+0xfb8>  // b.none
  41f204:	bl	40b280 <__stack_chk_fail@plt>
  41f208:	mov	w0, w1
  41f20c:	ldp	x19, x20, [sp, #64]
  41f210:	ldp	x21, x22, [sp, #80]
  41f214:	ldr	x23, [sp, #96]
  41f218:	ldp	x29, x30, [sp, #48]
  41f21c:	add	sp, sp, #0x240
  41f220:	ret

000000000041f224 <xsprintf_dev_num_path_from_sd_device>:
  41f224:	stp	x29, x30, [sp, #-144]!
  41f228:	mov	x29, sp
  41f22c:	stp	x19, x20, [sp, #16]
  41f230:	str	x0, [sp, #40]
  41f234:	str	x1, [sp, #32]
  41f238:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41f23c:	ldr	x0, [x0, #4032]
  41f240:	ldr	x1, [x0]
  41f244:	str	x1, [sp, #136]
  41f248:	mov	x1, #0x0                   	// #0
  41f24c:	ldr	x0, [sp, #32]
  41f250:	cmp	x0, #0x0
  41f254:	cset	w0, eq  // eq = none
  41f258:	and	w0, w0, #0xff
  41f25c:	and	x0, x0, #0xff
  41f260:	cmp	x0, #0x0
  41f264:	b.eq	41f290 <xsprintf_dev_num_path_from_sd_device+0x6c>  // b.none
  41f268:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f26c:	add	x1, x0, #0x7cb
  41f270:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f274:	add	x4, x0, #0xf00
  41f278:	mov	w3, #0x185                 	// #389
  41f27c:	mov	x2, x1
  41f280:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f284:	add	x1, x0, #0xa20
  41f288:	mov	w0, #0x1                   	// #1
  41f28c:	bl	40abb0 <log_assert_failed_realm@plt>
  41f290:	add	x0, sp, #0x38
  41f294:	mov	x1, x0
  41f298:	ldr	x0, [sp, #40]
  41f29c:	bl	40af80 <sd_device_get_subsystem@plt>
  41f2a0:	str	w0, [sp, #52]
  41f2a4:	ldr	w0, [sp, #52]
  41f2a8:	cmp	w0, #0x0
  41f2ac:	b.ge	41f2b8 <xsprintf_dev_num_path_from_sd_device+0x94>  // b.tcont
  41f2b0:	ldr	w0, [sp, #52]
  41f2b4:	b	41f3b8 <xsprintf_dev_num_path_from_sd_device+0x194>
  41f2b8:	add	x0, sp, #0x40
  41f2bc:	mov	x1, x0
  41f2c0:	ldr	x0, [sp, #40]
  41f2c4:	bl	40b3d0 <sd_device_get_devnum@plt>
  41f2c8:	str	w0, [sp, #52]
  41f2cc:	ldr	w0, [sp, #52]
  41f2d0:	cmp	w0, #0x0
  41f2d4:	b.ge	41f2e0 <xsprintf_dev_num_path_from_sd_device+0xbc>  // b.tcont
  41f2d8:	ldr	w0, [sp, #52]
  41f2dc:	b	41f3b8 <xsprintf_dev_num_path_from_sd_device+0x194>
  41f2e0:	ldr	x2, [sp, #56]
  41f2e4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f2e8:	add	x1, x0, #0xb78
  41f2ec:	mov	x0, x2
  41f2f0:	bl	40b710 <strcmp@plt>
  41f2f4:	cmp	w0, #0x0
  41f2f8:	b.ne	41f308 <xsprintf_dev_num_path_from_sd_device+0xe4>  // b.any
  41f2fc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f300:	add	x19, x0, #0xb78
  41f304:	b	41f310 <xsprintf_dev_num_path_from_sd_device+0xec>
  41f308:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f30c:	add	x19, x0, #0xd78
  41f310:	ldr	x0, [sp, #64]
  41f314:	bl	40b610 <gnu_dev_major@plt>
  41f318:	mov	w20, w0
  41f31c:	ldr	x0, [sp, #64]
  41f320:	bl	40ba70 <gnu_dev_minor@plt>
  41f324:	add	x6, sp, #0x50
  41f328:	mov	w5, w0
  41f32c:	mov	w4, w20
  41f330:	mov	x3, x19
  41f334:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f338:	add	x2, x0, #0xd80
  41f33c:	mov	x1, #0x38                  	// #56
  41f340:	mov	x0, x6
  41f344:	bl	40a870 <snprintf@plt>
  41f348:	cmp	w0, #0x37
  41f34c:	cset	w0, hi  // hi = pmore
  41f350:	and	w0, w0, #0xff
  41f354:	and	x0, x0, #0xff
  41f358:	cmp	x0, #0x0
  41f35c:	b.eq	41f388 <xsprintf_dev_num_path_from_sd_device+0x164>  // b.none
  41f360:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f364:	add	x1, x0, #0x7cb
  41f368:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f36c:	add	x4, x0, #0xf00
  41f370:	mov	w3, #0x18f                 	// #399
  41f374:	mov	x2, x1
  41f378:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f37c:	add	x1, x0, #0xd90
  41f380:	mov	w0, #0x1                   	// #1
  41f384:	bl	40abb0 <log_assert_failed_realm@plt>
  41f388:	add	x0, sp, #0x50
  41f38c:	bl	40b7c0 <strdup@plt>
  41f390:	str	x0, [sp, #72]
  41f394:	ldr	x0, [sp, #72]
  41f398:	cmp	x0, #0x0
  41f39c:	b.ne	41f3a8 <xsprintf_dev_num_path_from_sd_device+0x184>  // b.any
  41f3a0:	mov	w0, #0xfffffff4            	// #-12
  41f3a4:	b	41f3b8 <xsprintf_dev_num_path_from_sd_device+0x194>
  41f3a8:	ldr	x0, [sp, #32]
  41f3ac:	ldr	x1, [sp, #72]
  41f3b0:	str	x1, [x0]
  41f3b4:	mov	w0, #0x0                   	// #0
  41f3b8:	mov	w1, w0
  41f3bc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41f3c0:	ldr	x0, [x0, #4032]
  41f3c4:	ldr	x2, [sp, #136]
  41f3c8:	ldr	x0, [x0]
  41f3cc:	eor	x0, x2, x0
  41f3d0:	cmp	x0, #0x0
  41f3d4:	b.eq	41f3dc <xsprintf_dev_num_path_from_sd_device+0x1b8>  // b.none
  41f3d8:	bl	40b280 <__stack_chk_fail@plt>
  41f3dc:	mov	w0, w1
  41f3e0:	ldp	x19, x20, [sp, #16]
  41f3e4:	ldp	x29, x30, [sp], #144
  41f3e8:	ret

000000000041f3ec <udev_node_add>:
  41f3ec:	sub	sp, sp, #0xe0
  41f3f0:	stp	x29, x30, [sp, #32]
  41f3f4:	add	x29, sp, #0x20
  41f3f8:	stp	x19, x20, [sp, #48]
  41f3fc:	stp	x21, x22, [sp, #64]
  41f400:	str	x0, [sp, #104]
  41f404:	strb	w1, [sp, #103]
  41f408:	str	w2, [sp, #96]
  41f40c:	str	w3, [sp, #92]
  41f410:	str	w4, [sp, #88]
  41f414:	str	x5, [sp, #80]
  41f418:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41f41c:	ldr	x0, [x0, #4032]
  41f420:	ldr	x1, [x0]
  41f424:	str	x1, [sp, #216]
  41f428:	mov	x1, #0x0                   	// #0
  41f42c:	str	xzr, [sp, #160]
  41f430:	ldr	x0, [sp, #104]
  41f434:	cmp	x0, #0x0
  41f438:	cset	w0, eq  // eq = none
  41f43c:	and	w0, w0, #0xff
  41f440:	and	x0, x0, #0xff
  41f444:	cmp	x0, #0x0
  41f448:	b.eq	41f474 <udev_node_add+0x88>  // b.none
  41f44c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f450:	add	x1, x0, #0x7cb
  41f454:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f458:	add	x4, x0, #0xf28
  41f45c:	mov	w3, #0x1a2                 	// #418
  41f460:	mov	x2, x1
  41f464:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f468:	add	x1, x0, #0x7e0
  41f46c:	mov	w0, #0x1                   	// #1
  41f470:	bl	40abb0 <log_assert_failed_realm@plt>
  41f474:	add	x0, sp, #0x98
  41f478:	mov	x1, x0
  41f47c:	ldr	x0, [sp, #104]
  41f480:	bl	40a6f0 <sd_device_get_devname@plt>
  41f484:	str	w0, [sp, #124]
  41f488:	ldr	w0, [sp, #124]
  41f48c:	cmp	w0, #0x0
  41f490:	b.ge	41f558 <udev_node_add+0x16c>  // b.tcont
  41f494:	str	xzr, [sp, #176]
  41f498:	ldr	x0, [sp, #104]
  41f49c:	str	x0, [sp, #208]
  41f4a0:	mov	w0, #0x7                   	// #7
  41f4a4:	str	w0, [sp, #144]
  41f4a8:	ldr	w0, [sp, #124]
  41f4ac:	str	w0, [sp, #148]
  41f4b0:	ldr	x0, [sp, #208]
  41f4b4:	cmp	x0, #0x0
  41f4b8:	b.eq	41f4f4 <udev_node_add+0x108>  // b.none
  41f4bc:	mov	w0, #0x1                   	// #1
  41f4c0:	bl	40be30 <log_get_max_level_realm@plt>
  41f4c4:	mov	w1, w0
  41f4c8:	ldr	w0, [sp, #144]
  41f4cc:	cmp	w0, w1
  41f4d0:	cset	w0, le
  41f4d4:	and	w0, w0, #0xff
  41f4d8:	and	x0, x0, #0xff
  41f4dc:	cmp	x0, #0x0
  41f4e0:	b.eq	41f4f4 <udev_node_add+0x108>  // b.none
  41f4e4:	add	x0, sp, #0xb0
  41f4e8:	mov	x1, x0
  41f4ec:	ldr	x0, [sp, #208]
  41f4f0:	bl	40aba0 <sd_device_get_sysname@plt>
  41f4f4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f4f8:	add	x2, x0, #0x7cb
  41f4fc:	ldr	x0, [sp, #176]
  41f500:	cmp	x0, #0x0
  41f504:	b.eq	41f514 <udev_node_add+0x128>  // b.none
  41f508:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f50c:	add	x0, x0, #0x7f8
  41f510:	b	41f518 <udev_node_add+0x12c>
  41f514:	mov	x0, #0x0                   	// #0
  41f518:	ldr	x3, [sp, #176]
  41f51c:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f520:	add	x1, x1, #0xdb8
  41f524:	str	x1, [sp, #8]
  41f528:	str	xzr, [sp]
  41f52c:	mov	x7, #0x0                   	// #0
  41f530:	mov	x6, x3
  41f534:	mov	x5, x0
  41f538:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f53c:	add	x4, x0, #0xf38
  41f540:	mov	w3, #0x1a6                 	// #422
  41f544:	ldr	w1, [sp, #148]
  41f548:	ldr	w0, [sp, #144]
  41f54c:	bl	40b020 <log_object_internal@plt>
  41f550:	mov	w19, w0
  41f554:	b	41f7c8 <udev_node_add+0x3dc>
  41f558:	mov	w0, #0x1                   	// #1
  41f55c:	bl	40be30 <log_get_max_level_realm@plt>
  41f560:	cmp	w0, #0x6
  41f564:	cset	w0, gt
  41f568:	and	w0, w0, #0xff
  41f56c:	and	x0, x0, #0xff
  41f570:	cmp	x0, #0x0
  41f574:	b.eq	41f65c <udev_node_add+0x270>  // b.none
  41f578:	str	xzr, [sp, #168]
  41f57c:	add	x0, sp, #0xa8
  41f580:	mov	x1, x0
  41f584:	ldr	x0, [sp, #104]
  41f588:	bl	40bd00 <device_get_id_filename@plt>
  41f58c:	str	xzr, [sp, #176]
  41f590:	ldr	x0, [sp, #104]
  41f594:	str	x0, [sp, #192]
  41f598:	mov	w0, #0x7                   	// #7
  41f59c:	str	w0, [sp, #128]
  41f5a0:	str	wzr, [sp, #132]
  41f5a4:	ldr	x0, [sp, #192]
  41f5a8:	cmp	x0, #0x0
  41f5ac:	b.eq	41f5e8 <udev_node_add+0x1fc>  // b.none
  41f5b0:	mov	w0, #0x1                   	// #1
  41f5b4:	bl	40be30 <log_get_max_level_realm@plt>
  41f5b8:	mov	w1, w0
  41f5bc:	ldr	w0, [sp, #128]
  41f5c0:	cmp	w0, w1
  41f5c4:	cset	w0, le
  41f5c8:	and	w0, w0, #0xff
  41f5cc:	and	x0, x0, #0xff
  41f5d0:	cmp	x0, #0x0
  41f5d4:	b.eq	41f5e8 <udev_node_add+0x1fc>  // b.none
  41f5d8:	add	x0, sp, #0xb0
  41f5dc:	mov	x1, x0
  41f5e0:	ldr	x0, [sp, #192]
  41f5e4:	bl	40aba0 <sd_device_get_sysname@plt>
  41f5e8:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f5ec:	add	x21, x0, #0x7cb
  41f5f0:	ldr	x0, [sp, #176]
  41f5f4:	cmp	x0, #0x0
  41f5f8:	b.eq	41f608 <udev_node_add+0x21c>  // b.none
  41f5fc:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f600:	add	x19, x0, #0x7f8
  41f604:	b	41f60c <udev_node_add+0x220>
  41f608:	mov	x19, #0x0                   	// #0
  41f60c:	ldr	x22, [sp, #176]
  41f610:	ldr	x20, [sp, #152]
  41f614:	ldr	x0, [sp, #168]
  41f618:	bl	41c724 <strnull>
  41f61c:	str	x0, [sp, #24]
  41f620:	str	x20, [sp, #16]
  41f624:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f628:	add	x0, x0, #0xdd8
  41f62c:	str	x0, [sp, #8]
  41f630:	str	xzr, [sp]
  41f634:	mov	x7, #0x0                   	// #0
  41f638:	mov	x6, x22
  41f63c:	mov	x5, x19
  41f640:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f644:	add	x4, x0, #0xf38
  41f648:	mov	w3, #0x1ac                 	// #428
  41f64c:	mov	x2, x21
  41f650:	ldr	w1, [sp, #132]
  41f654:	ldr	w0, [sp, #128]
  41f658:	bl	40b020 <log_object_internal@plt>
  41f65c:	ldr	x5, [sp, #80]
  41f660:	ldr	w4, [sp, #88]
  41f664:	ldr	w3, [sp, #92]
  41f668:	ldr	w2, [sp, #96]
  41f66c:	ldrb	w1, [sp, #103]
  41f670:	ldr	x0, [sp, #104]
  41f674:	bl	41e250 <node_permissions_apply>
  41f678:	str	w0, [sp, #124]
  41f67c:	ldr	w0, [sp, #124]
  41f680:	cmp	w0, #0x0
  41f684:	b.ge	41f690 <udev_node_add+0x2a4>  // b.tcont
  41f688:	ldr	w19, [sp, #124]
  41f68c:	b	41f7c8 <udev_node_add+0x3dc>
  41f690:	add	x0, sp, #0xa0
  41f694:	mov	x1, x0
  41f698:	ldr	x0, [sp, #104]
  41f69c:	bl	41f224 <xsprintf_dev_num_path_from_sd_device>
  41f6a0:	str	w0, [sp, #124]
  41f6a4:	ldr	w0, [sp, #124]
  41f6a8:	cmp	w0, #0x0
  41f6ac:	b.ge	41f774 <udev_node_add+0x388>  // b.tcont
  41f6b0:	str	xzr, [sp, #176]
  41f6b4:	ldr	x0, [sp, #104]
  41f6b8:	str	x0, [sp, #200]
  41f6bc:	mov	w0, #0x7                   	// #7
  41f6c0:	str	w0, [sp, #136]
  41f6c4:	ldr	w0, [sp, #124]
  41f6c8:	str	w0, [sp, #140]
  41f6cc:	ldr	x0, [sp, #200]
  41f6d0:	cmp	x0, #0x0
  41f6d4:	b.eq	41f710 <udev_node_add+0x324>  // b.none
  41f6d8:	mov	w0, #0x1                   	// #1
  41f6dc:	bl	40be30 <log_get_max_level_realm@plt>
  41f6e0:	mov	w1, w0
  41f6e4:	ldr	w0, [sp, #136]
  41f6e8:	cmp	w0, w1
  41f6ec:	cset	w0, le
  41f6f0:	and	w0, w0, #0xff
  41f6f4:	and	x0, x0, #0xff
  41f6f8:	cmp	x0, #0x0
  41f6fc:	b.eq	41f710 <udev_node_add+0x324>  // b.none
  41f700:	add	x0, sp, #0xb0
  41f704:	mov	x1, x0
  41f708:	ldr	x0, [sp, #200]
  41f70c:	bl	40aba0 <sd_device_get_sysname@plt>
  41f710:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f714:	add	x2, x0, #0x7cb
  41f718:	ldr	x0, [sp, #176]
  41f71c:	cmp	x0, #0x0
  41f720:	b.eq	41f730 <udev_node_add+0x344>  // b.none
  41f724:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f728:	add	x0, x0, #0x7f8
  41f72c:	b	41f734 <udev_node_add+0x348>
  41f730:	mov	x0, #0x0                   	// #0
  41f734:	ldr	x3, [sp, #176]
  41f738:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f73c:	add	x1, x1, #0xe00
  41f740:	str	x1, [sp, #8]
  41f744:	str	xzr, [sp]
  41f748:	mov	x7, #0x0                   	// #0
  41f74c:	mov	x6, x3
  41f750:	mov	x5, x0
  41f754:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f758:	add	x4, x0, #0xf38
  41f75c:	mov	w3, #0x1b5                 	// #437
  41f760:	ldr	w1, [sp, #140]
  41f764:	ldr	w0, [sp, #136]
  41f768:	bl	40b020 <log_object_internal@plt>
  41f76c:	mov	w19, w0
  41f770:	b	41f7c8 <udev_node_add+0x3dc>
  41f774:	ldr	x0, [sp, #152]
  41f778:	ldr	x1, [sp, #160]
  41f77c:	mov	x2, x1
  41f780:	mov	x1, x0
  41f784:	ldr	x0, [sp, #104]
  41f788:	bl	41c7f8 <node_symlink>
  41f78c:	ldr	x0, [sp, #104]
  41f790:	bl	40ad70 <sd_device_get_devlink_first@plt>
  41f794:	str	x0, [sp, #184]
  41f798:	b	41f7b8 <udev_node_add+0x3cc>
  41f79c:	mov	w2, #0x1                   	// #1
  41f7a0:	ldr	x1, [sp, #184]
  41f7a4:	ldr	x0, [sp, #104]
  41f7a8:	bl	41da74 <link_update>
  41f7ac:	ldr	x0, [sp, #104]
  41f7b0:	bl	40bde0 <sd_device_get_devlink_next@plt>
  41f7b4:	str	x0, [sp, #184]
  41f7b8:	ldr	x0, [sp, #184]
  41f7bc:	cmp	x0, #0x0
  41f7c0:	b.ne	41f79c <udev_node_add+0x3b0>  // b.any
  41f7c4:	mov	w19, #0x0                   	// #0
  41f7c8:	add	x0, sp, #0xa0
  41f7cc:	bl	41c650 <freep>
  41f7d0:	mov	w1, w19
  41f7d4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41f7d8:	ldr	x0, [x0, #4032]
  41f7dc:	ldr	x2, [sp, #216]
  41f7e0:	ldr	x0, [x0]
  41f7e4:	eor	x0, x2, x0
  41f7e8:	cmp	x0, #0x0
  41f7ec:	b.eq	41f7f4 <udev_node_add+0x408>  // b.none
  41f7f0:	bl	40b280 <__stack_chk_fail@plt>
  41f7f4:	mov	w0, w1
  41f7f8:	ldp	x19, x20, [sp, #48]
  41f7fc:	ldp	x21, x22, [sp, #64]
  41f800:	ldp	x29, x30, [sp, #32]
  41f804:	add	sp, sp, #0xe0
  41f808:	ret

000000000041f80c <udev_node_remove>:
  41f80c:	sub	sp, sp, #0x80
  41f810:	stp	x29, x30, [sp, #16]
  41f814:	add	x29, sp, #0x10
  41f818:	str	x19, [sp, #32]
  41f81c:	str	x0, [sp, #56]
  41f820:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41f824:	ldr	x0, [x0, #4032]
  41f828:	ldr	x1, [x0]
  41f82c:	str	x1, [sp, #120]
  41f830:	mov	x1, #0x0                   	// #0
  41f834:	str	xzr, [sp, #88]
  41f838:	ldr	x0, [sp, #56]
  41f83c:	cmp	x0, #0x0
  41f840:	cset	w0, eq  // eq = none
  41f844:	and	w0, w0, #0xff
  41f848:	and	x0, x0, #0xff
  41f84c:	cmp	x0, #0x0
  41f850:	b.eq	41f87c <udev_node_remove+0x70>  // b.none
  41f854:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f858:	add	x1, x0, #0x7cb
  41f85c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f860:	add	x4, x0, #0xf48
  41f864:	mov	w3, #0x1c6                 	// #454
  41f868:	mov	x2, x1
  41f86c:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f870:	add	x1, x0, #0x7e0
  41f874:	mov	w0, #0x1                   	// #1
  41f878:	bl	40abb0 <log_assert_failed_realm@plt>
  41f87c:	ldr	x0, [sp, #56]
  41f880:	bl	40ad70 <sd_device_get_devlink_first@plt>
  41f884:	str	x0, [sp, #104]
  41f888:	b	41f8a8 <udev_node_remove+0x9c>
  41f88c:	mov	w2, #0x0                   	// #0
  41f890:	ldr	x1, [sp, #104]
  41f894:	ldr	x0, [sp, #56]
  41f898:	bl	41da74 <link_update>
  41f89c:	ldr	x0, [sp, #56]
  41f8a0:	bl	40bde0 <sd_device_get_devlink_next@plt>
  41f8a4:	str	x0, [sp, #104]
  41f8a8:	ldr	x0, [sp, #104]
  41f8ac:	cmp	x0, #0x0
  41f8b0:	b.ne	41f88c <udev_node_remove+0x80>  // b.any
  41f8b4:	add	x0, sp, #0x58
  41f8b8:	mov	x1, x0
  41f8bc:	ldr	x0, [sp, #56]
  41f8c0:	bl	41f224 <xsprintf_dev_num_path_from_sd_device>
  41f8c4:	str	w0, [sp, #76]
  41f8c8:	ldr	w0, [sp, #76]
  41f8cc:	cmp	w0, #0x0
  41f8d0:	b.ge	41f998 <udev_node_remove+0x18c>  // b.tcont
  41f8d4:	str	xzr, [sp, #96]
  41f8d8:	ldr	x0, [sp, #56]
  41f8dc:	str	x0, [sp, #112]
  41f8e0:	mov	w0, #0x7                   	// #7
  41f8e4:	str	w0, [sp, #80]
  41f8e8:	ldr	w0, [sp, #76]
  41f8ec:	str	w0, [sp, #84]
  41f8f0:	ldr	x0, [sp, #112]
  41f8f4:	cmp	x0, #0x0
  41f8f8:	b.eq	41f934 <udev_node_remove+0x128>  // b.none
  41f8fc:	mov	w0, #0x1                   	// #1
  41f900:	bl	40be30 <log_get_max_level_realm@plt>
  41f904:	mov	w1, w0
  41f908:	ldr	w0, [sp, #80]
  41f90c:	cmp	w0, w1
  41f910:	cset	w0, le
  41f914:	and	w0, w0, #0xff
  41f918:	and	x0, x0, #0xff
  41f91c:	cmp	x0, #0x0
  41f920:	b.eq	41f934 <udev_node_remove+0x128>  // b.none
  41f924:	add	x0, sp, #0x60
  41f928:	mov	x1, x0
  41f92c:	ldr	x0, [sp, #112]
  41f930:	bl	40aba0 <sd_device_get_sysname@plt>
  41f934:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f938:	add	x2, x0, #0x7cb
  41f93c:	ldr	x0, [sp, #96]
  41f940:	cmp	x0, #0x0
  41f944:	b.eq	41f954 <udev_node_remove+0x148>  // b.none
  41f948:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f94c:	add	x0, x0, #0x7f8
  41f950:	b	41f958 <udev_node_remove+0x14c>
  41f954:	mov	x0, #0x0                   	// #0
  41f958:	ldr	x3, [sp, #96]
  41f95c:	adrp	x1, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f960:	add	x1, x1, #0xe00
  41f964:	str	x1, [sp, #8]
  41f968:	str	xzr, [sp]
  41f96c:	mov	x7, #0x0                   	// #0
  41f970:	mov	x6, x3
  41f974:	mov	x5, x0
  41f978:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  41f97c:	add	x4, x0, #0xf60
  41f980:	mov	w3, #0x1ce                 	// #462
  41f984:	ldr	w1, [sp, #84]
  41f988:	ldr	w0, [sp, #80]
  41f98c:	bl	40b020 <log_object_internal@plt>
  41f990:	mov	w19, w0
  41f994:	b	41f9a4 <udev_node_remove+0x198>
  41f998:	ldr	x0, [sp, #88]
  41f99c:	bl	40a3f0 <unlink@plt>
  41f9a0:	mov	w19, #0x0                   	// #0
  41f9a4:	add	x0, sp, #0x58
  41f9a8:	bl	41c650 <freep>
  41f9ac:	mov	w1, w19
  41f9b0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41f9b4:	ldr	x0, [x0, #4032]
  41f9b8:	ldr	x2, [sp, #120]
  41f9bc:	ldr	x0, [x0]
  41f9c0:	eor	x0, x2, x0
  41f9c4:	cmp	x0, #0x0
  41f9c8:	b.eq	41f9d0 <udev_node_remove+0x1c4>  // b.none
  41f9cc:	bl	40b280 <__stack_chk_fail@plt>
  41f9d0:	mov	w0, w1
  41f9d4:	ldr	x19, [sp, #32]
  41f9d8:	ldp	x29, x30, [sp, #16]
  41f9dc:	add	sp, sp, #0x80
  41f9e0:	ret

000000000041f9e4 <mfree>:
  41f9e4:	stp	x29, x30, [sp, #-32]!
  41f9e8:	mov	x29, sp
  41f9ec:	str	x0, [sp, #24]
  41f9f0:	ldr	x0, [sp, #24]
  41f9f4:	bl	40ba20 <free@plt>
  41f9f8:	mov	x0, #0x0                   	// #0
  41f9fc:	ldp	x29, x30, [sp], #32
  41fa00:	ret

000000000041fa04 <freep>:
  41fa04:	stp	x29, x30, [sp, #-32]!
  41fa08:	mov	x29, sp
  41fa0c:	str	x0, [sp, #24]
  41fa10:	ldr	x0, [sp, #24]
  41fa14:	ldr	x0, [x0]
  41fa18:	bl	40ba20 <free@plt>
  41fa1c:	nop
  41fa20:	ldp	x29, x30, [sp], #32
  41fa24:	ret

000000000041fa28 <size_multiply_overflow>:
  41fa28:	sub	sp, sp, #0x10
  41fa2c:	str	x0, [sp, #8]
  41fa30:	str	x1, [sp]
  41fa34:	ldr	x0, [sp]
  41fa38:	cmp	x0, #0x0
  41fa3c:	cset	w0, ne  // ne = any
  41fa40:	and	w0, w0, #0xff
  41fa44:	and	x0, x0, #0xff
  41fa48:	cmp	x0, #0x0
  41fa4c:	b.eq	41fa90 <size_multiply_overflow+0x68>  // b.none
  41fa50:	mov	x2, #0x0                   	// #0
  41fa54:	ldr	x1, [sp, #8]
  41fa58:	ldr	x0, [sp]
  41fa5c:	umulh	x0, x1, x0
  41fa60:	cmp	x0, #0x0
  41fa64:	b.eq	41fa6c <size_multiply_overflow+0x44>  // b.none
  41fa68:	mov	x2, #0x1                   	// #1
  41fa6c:	mov	x0, x2
  41fa70:	cmp	x0, #0x0
  41fa74:	cset	w0, ne  // ne = any
  41fa78:	and	w0, w0, #0xff
  41fa7c:	and	x0, x0, #0xff
  41fa80:	cmp	x0, #0x0
  41fa84:	b.eq	41fa90 <size_multiply_overflow+0x68>  // b.none
  41fa88:	mov	w0, #0x1                   	// #1
  41fa8c:	b	41fa94 <size_multiply_overflow+0x6c>
  41fa90:	mov	w0, #0x0                   	// #0
  41fa94:	and	w0, w0, #0x1
  41fa98:	and	w0, w0, #0xff
  41fa9c:	add	sp, sp, #0x10
  41faa0:	ret

000000000041faa4 <malloc_multiply>:
  41faa4:	stp	x29, x30, [sp, #-32]!
  41faa8:	mov	x29, sp
  41faac:	str	x0, [sp, #24]
  41fab0:	str	x1, [sp, #16]
  41fab4:	ldr	x1, [sp, #16]
  41fab8:	ldr	x0, [sp, #24]
  41fabc:	bl	41fa28 <size_multiply_overflow>
  41fac0:	and	w0, w0, #0xff
  41fac4:	cmp	w0, #0x0
  41fac8:	b.eq	41fad4 <malloc_multiply+0x30>  // b.none
  41facc:	mov	x0, #0x0                   	// #0
  41fad0:	b	41faf0 <malloc_multiply+0x4c>
  41fad4:	ldr	x1, [sp, #24]
  41fad8:	ldr	x0, [sp, #16]
  41fadc:	mul	x0, x1, x0
  41fae0:	cmp	x0, #0x0
  41fae4:	b.ne	41faec <malloc_multiply+0x48>  // b.any
  41fae8:	mov	x0, #0x1                   	// #1
  41faec:	bl	40b480 <malloc@plt>
  41faf0:	ldp	x29, x30, [sp], #32
  41faf4:	ret

000000000041faf8 <streq_ptr>:
  41faf8:	stp	x29, x30, [sp, #-32]!
  41fafc:	mov	x29, sp
  41fb00:	str	x0, [sp, #24]
  41fb04:	str	x1, [sp, #16]
  41fb08:	ldr	x1, [sp, #16]
  41fb0c:	ldr	x0, [sp, #24]
  41fb10:	bl	40a4b0 <strcmp_ptr@plt>
  41fb14:	cmp	w0, #0x0
  41fb18:	cset	w0, eq  // eq = none
  41fb1c:	and	w0, w0, #0xff
  41fb20:	ldp	x29, x30, [sp], #32
  41fb24:	ret

000000000041fb28 <strempty>:
  41fb28:	sub	sp, sp, #0x10
  41fb2c:	str	x0, [sp, #8]
  41fb30:	ldr	x0, [sp, #8]
  41fb34:	cmp	x0, #0x0
  41fb38:	b.ne	41fb44 <strempty+0x1c>  // b.any
  41fb3c:	adrp	x0, 454000 <__func__.10675+0xa0>
  41fb40:	add	x0, x0, #0x98
  41fb44:	add	sp, sp, #0x10
  41fb48:	ret

000000000041fb4c <strna>:
  41fb4c:	sub	sp, sp, #0x10
  41fb50:	str	x0, [sp, #8]
  41fb54:	ldr	x0, [sp, #8]
  41fb58:	cmp	x0, #0x0
  41fb5c:	b.ne	41fb68 <strna+0x1c>  // b.any
  41fb60:	adrp	x0, 454000 <__func__.10675+0xa0>
  41fb64:	add	x0, x0, #0xa0
  41fb68:	add	sp, sp, #0x10
  41fb6c:	ret

000000000041fb70 <isempty>:
  41fb70:	sub	sp, sp, #0x10
  41fb74:	str	x0, [sp, #8]
  41fb78:	ldr	x0, [sp, #8]
  41fb7c:	cmp	x0, #0x0
  41fb80:	b.eq	41fb94 <isempty+0x24>  // b.none
  41fb84:	ldr	x0, [sp, #8]
  41fb88:	ldrb	w0, [x0]
  41fb8c:	cmp	w0, #0x0
  41fb90:	b.ne	41fb9c <isempty+0x2c>  // b.any
  41fb94:	mov	w0, #0x1                   	// #1
  41fb98:	b	41fba0 <isempty+0x30>
  41fb9c:	mov	w0, #0x0                   	// #0
  41fba0:	and	w0, w0, #0x1
  41fba4:	and	w0, w0, #0xff
  41fba8:	add	sp, sp, #0x10
  41fbac:	ret

000000000041fbb0 <startswith>:
  41fbb0:	stp	x29, x30, [sp, #-48]!
  41fbb4:	mov	x29, sp
  41fbb8:	str	x0, [sp, #24]
  41fbbc:	str	x1, [sp, #16]
  41fbc0:	ldr	x0, [sp, #16]
  41fbc4:	bl	40bd10 <strlen@plt>
  41fbc8:	str	x0, [sp, #40]
  41fbcc:	ldr	x2, [sp, #40]
  41fbd0:	ldr	x1, [sp, #16]
  41fbd4:	ldr	x0, [sp, #24]
  41fbd8:	bl	40ae00 <strncmp@plt>
  41fbdc:	cmp	w0, #0x0
  41fbe0:	b.ne	41fbf4 <startswith+0x44>  // b.any
  41fbe4:	ldr	x1, [sp, #24]
  41fbe8:	ldr	x0, [sp, #40]
  41fbec:	add	x0, x1, x0
  41fbf0:	b	41fbf8 <startswith+0x48>
  41fbf4:	mov	x0, #0x0                   	// #0
  41fbf8:	ldp	x29, x30, [sp], #48
  41fbfc:	ret

000000000041fc00 <skip_leading_chars>:
  41fc00:	stp	x29, x30, [sp, #-32]!
  41fc04:	mov	x29, sp
  41fc08:	str	x0, [sp, #24]
  41fc0c:	str	x1, [sp, #16]
  41fc10:	ldr	x0, [sp, #24]
  41fc14:	cmp	x0, #0x0
  41fc18:	b.ne	41fc24 <skip_leading_chars+0x24>  // b.any
  41fc1c:	mov	x0, #0x0                   	// #0
  41fc20:	b	41fc54 <skip_leading_chars+0x54>
  41fc24:	ldr	x0, [sp, #16]
  41fc28:	cmp	x0, #0x0
  41fc2c:	b.ne	41fc3c <skip_leading_chars+0x3c>  // b.any
  41fc30:	adrp	x0, 454000 <__func__.10675+0xa0>
  41fc34:	add	x0, x0, #0xa8
  41fc38:	str	x0, [sp, #16]
  41fc3c:	ldr	x1, [sp, #16]
  41fc40:	ldr	x0, [sp, #24]
  41fc44:	bl	40aeb0 <strspn@plt>
  41fc48:	mov	x1, x0
  41fc4c:	ldr	x0, [sp, #24]
  41fc50:	add	x0, x0, x1
  41fc54:	ldp	x29, x30, [sp], #32
  41fc58:	ret

000000000041fc5c <hashmap_free_free_key>:
  41fc5c:	stp	x29, x30, [sp, #-32]!
  41fc60:	mov	x29, sp
  41fc64:	str	x0, [sp, #24]
  41fc68:	mov	x2, #0x0                   	// #0
  41fc6c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41fc70:	ldr	x1, [x0, #4080]
  41fc74:	ldr	x0, [sp, #24]
  41fc78:	bl	40a400 <internal_hashmap_free@plt>
  41fc7c:	ldp	x29, x30, [sp], #32
  41fc80:	ret

000000000041fc84 <ordered_hashmap_put>:
  41fc84:	stp	x29, x30, [sp, #-48]!
  41fc88:	mov	x29, sp
  41fc8c:	str	x0, [sp, #40]
  41fc90:	str	x1, [sp, #32]
  41fc94:	str	x2, [sp, #24]
  41fc98:	ldr	x2, [sp, #24]
  41fc9c:	ldr	x1, [sp, #32]
  41fca0:	ldr	x0, [sp, #40]
  41fca4:	bl	40b570 <hashmap_put@plt>
  41fca8:	ldp	x29, x30, [sp], #48
  41fcac:	ret

000000000041fcb0 <hashmap_get>:
  41fcb0:	stp	x29, x30, [sp, #-32]!
  41fcb4:	mov	x29, sp
  41fcb8:	str	x0, [sp, #24]
  41fcbc:	str	x1, [sp, #16]
  41fcc0:	ldr	x1, [sp, #16]
  41fcc4:	ldr	x0, [sp, #24]
  41fcc8:	bl	40aec0 <internal_hashmap_get@plt>
  41fccc:	ldp	x29, x30, [sp], #32
  41fcd0:	ret

000000000041fcd4 <ordered_hashmap_clear_free_key>:
  41fcd4:	stp	x29, x30, [sp, #-32]!
  41fcd8:	mov	x29, sp
  41fcdc:	str	x0, [sp, #24]
  41fce0:	mov	x2, #0x0                   	// #0
  41fce4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41fce8:	ldr	x1, [x0, #4080]
  41fcec:	ldr	x0, [sp, #24]
  41fcf0:	bl	40b560 <internal_hashmap_clear@plt>
  41fcf4:	nop
  41fcf8:	ldp	x29, x30, [sp], #32
  41fcfc:	ret

000000000041fd00 <ordered_hashmap_clear_free_free>:
  41fd00:	stp	x29, x30, [sp, #-32]!
  41fd04:	mov	x29, sp
  41fd08:	str	x0, [sp, #24]
  41fd0c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41fd10:	ldr	x2, [x0, #4080]
  41fd14:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41fd18:	ldr	x1, [x0, #4080]
  41fd1c:	ldr	x0, [sp, #24]
  41fd20:	bl	40b560 <internal_hashmap_clear@plt>
  41fd24:	nop
  41fd28:	ldp	x29, x30, [sp], #32
  41fd2c:	ret

000000000041fd30 <strv_freep>:
  41fd30:	stp	x29, x30, [sp, #-32]!
  41fd34:	mov	x29, sp
  41fd38:	str	x0, [sp, #24]
  41fd3c:	ldr	x0, [sp, #24]
  41fd40:	ldr	x0, [x0]
  41fd44:	cmp	x0, #0x0
  41fd48:	b.eq	41fd58 <strv_freep+0x28>  // b.none
  41fd4c:	ldr	x0, [sp, #24]
  41fd50:	ldr	x0, [x0]
  41fd54:	bl	40b080 <strv_free@plt>
  41fd58:	nop
  41fd5c:	ldp	x29, x30, [sp], #32
  41fd60:	ret

000000000041fd64 <strv_isempty>:
  41fd64:	sub	sp, sp, #0x10
  41fd68:	str	x0, [sp, #8]
  41fd6c:	ldr	x0, [sp, #8]
  41fd70:	cmp	x0, #0x0
  41fd74:	b.eq	41fd88 <strv_isempty+0x24>  // b.none
  41fd78:	ldr	x0, [sp, #8]
  41fd7c:	ldr	x0, [x0]
  41fd80:	cmp	x0, #0x0
  41fd84:	b.ne	41fd90 <strv_isempty+0x2c>  // b.any
  41fd88:	mov	w0, #0x1                   	// #1
  41fd8c:	b	41fd94 <strv_isempty+0x30>
  41fd90:	mov	w0, #0x0                   	// #0
  41fd94:	and	w0, w0, #0x1
  41fd98:	and	w0, w0, #0xff
  41fd9c:	add	sp, sp, #0x10
  41fda0:	ret

000000000041fda4 <xescape>:
  41fda4:	stp	x29, x30, [sp, #-32]!
  41fda8:	mov	x29, sp
  41fdac:	str	x0, [sp, #24]
  41fdb0:	str	x1, [sp, #16]
  41fdb4:	mov	w3, #0x0                   	// #0
  41fdb8:	mov	x2, #0xffffffffffffffff    	// #-1
  41fdbc:	ldr	x1, [sp, #16]
  41fdc0:	ldr	x0, [sp, #24]
  41fdc4:	bl	40bb60 <xescape_full@plt>
  41fdc8:	ldp	x29, x30, [sp], #32
  41fdcc:	ret

000000000041fdd0 <fclosep>:
  41fdd0:	stp	x29, x30, [sp, #-32]!
  41fdd4:	mov	x29, sp
  41fdd8:	str	x0, [sp, #24]
  41fddc:	ldr	x0, [sp, #24]
  41fde0:	ldr	x0, [x0]
  41fde4:	bl	40a2e0 <safe_fclose@plt>
  41fde8:	nop
  41fdec:	ldp	x29, x30, [sp], #32
  41fdf0:	ret

000000000041fdf4 <closedirp>:
  41fdf4:	stp	x29, x30, [sp, #-32]!
  41fdf8:	mov	x29, sp
  41fdfc:	str	x0, [sp, #24]
  41fe00:	ldr	x0, [sp, #24]
  41fe04:	ldr	x0, [x0]
  41fe08:	cmp	x0, #0x0
  41fe0c:	b.eq	41fe1c <closedirp+0x28>  // b.none
  41fe10:	ldr	x0, [sp, #24]
  41fe14:	ldr	x0, [x0]
  41fe18:	bl	40adc0 <closedir@plt>
  41fe1c:	nop
  41fe20:	ldp	x29, x30, [sp], #32
  41fe24:	ret

000000000041fe28 <write_string_file>:
  41fe28:	stp	x29, x30, [sp, #-48]!
  41fe2c:	mov	x29, sp
  41fe30:	str	x0, [sp, #40]
  41fe34:	str	x1, [sp, #32]
  41fe38:	str	w2, [sp, #28]
  41fe3c:	mov	x3, #0x0                   	// #0
  41fe40:	ldr	w2, [sp, #28]
  41fe44:	ldr	x1, [sp, #32]
  41fe48:	ldr	x0, [sp, #40]
  41fe4c:	bl	40a720 <write_string_file_ts@plt>
  41fe50:	ldp	x29, x30, [sp], #48
  41fe54:	ret

000000000041fe58 <read_line>:
  41fe58:	stp	x29, x30, [sp, #-48]!
  41fe5c:	mov	x29, sp
  41fe60:	str	x0, [sp, #40]
  41fe64:	str	x1, [sp, #32]
  41fe68:	str	x2, [sp, #24]
  41fe6c:	ldr	x3, [sp, #24]
  41fe70:	mov	w2, #0x0                   	// #0
  41fe74:	ldr	x1, [sp, #32]
  41fe78:	ldr	x0, [sp, #40]
  41fe7c:	bl	40a330 <read_line_full@plt>
  41fe80:	ldp	x29, x30, [sp], #48
  41fe84:	ret

000000000041fe88 <string_is_glob>:
  41fe88:	stp	x29, x30, [sp, #-32]!
  41fe8c:	mov	x29, sp
  41fe90:	str	x0, [sp, #24]
  41fe94:	adrp	x0, 454000 <__func__.10675+0xa0>
  41fe98:	add	x1, x0, #0xb0
  41fe9c:	ldr	x0, [sp, #24]
  41fea0:	bl	40b380 <strpbrk@plt>
  41fea4:	cmp	x0, #0x0
  41fea8:	cset	w0, ne  // ne = any
  41feac:	and	w0, w0, #0xff
  41feb0:	ldp	x29, x30, [sp], #32
  41feb4:	ret

000000000041feb8 <udev_rules_freep>:
  41feb8:	stp	x29, x30, [sp, #-32]!
  41febc:	mov	x29, sp
  41fec0:	str	x0, [sp, #24]
  41fec4:	ldr	x0, [sp, #24]
  41fec8:	ldr	x0, [x0]
  41fecc:	cmp	x0, #0x0
  41fed0:	b.eq	41fee0 <udev_rules_freep+0x28>  // b.none
  41fed4:	ldr	x0, [sp, #24]
  41fed8:	ldr	x0, [x0]
  41fedc:	bl	4205b0 <udev_rules_free>
  41fee0:	nop
  41fee4:	ldp	x29, x30, [sp], #32
  41fee8:	ret

000000000041feec <gid_is_valid>:
  41feec:	stp	x29, x30, [sp, #-32]!
  41fef0:	mov	x29, sp
  41fef4:	str	w0, [sp, #28]
  41fef8:	ldr	w0, [sp, #28]
  41fefc:	bl	40aea0 <uid_is_valid@plt>
  41ff00:	and	w0, w0, #0xff
  41ff04:	ldp	x29, x30, [sp], #32
  41ff08:	ret

000000000041ff0c <parse_gid>:
  41ff0c:	stp	x29, x30, [sp, #-32]!
  41ff10:	mov	x29, sp
  41ff14:	str	x0, [sp, #24]
  41ff18:	str	x1, [sp, #16]
  41ff1c:	ldr	x1, [sp, #16]
  41ff20:	ldr	x0, [sp, #24]
  41ff24:	bl	40b6b0 <parse_uid@plt>
  41ff28:	ldp	x29, x30, [sp], #32
  41ff2c:	ret

000000000041ff30 <log_unknown_owner>:
  41ff30:	sub	sp, sp, #0x110
  41ff34:	stp	x29, x30, [sp, #48]
  41ff38:	add	x29, sp, #0x30
  41ff3c:	stp	x19, x20, [sp, #64]
  41ff40:	str	x21, [sp, #80]
  41ff44:	str	x0, [sp, #136]
  41ff48:	str	x1, [sp, #128]
  41ff4c:	str	w2, [sp, #124]
  41ff50:	str	x3, [sp, #112]
  41ff54:	str	x4, [sp, #104]
  41ff58:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  41ff5c:	ldr	x0, [x0, #4032]
  41ff60:	ldr	x1, [x0]
  41ff64:	str	x1, [sp, #264]
  41ff68:	mov	x1, #0x0                   	// #0
  41ff6c:	strb	wzr, [sp, #159]
  41ff70:	ldr	w0, [sp, #124]
  41ff74:	cmp	w0, #0x0
  41ff78:	cneg	w0, w0, lt  // lt = tstop
  41ff7c:	sub	w0, w0, #0x2
  41ff80:	cmp	w0, #0x1
  41ff84:	b.hi	41ff90 <log_unknown_owner+0x60>  // b.pmore
  41ff88:	mov	w0, #0x1                   	// #1
  41ff8c:	strb	w0, [sp, #159]
  41ff90:	nop
  41ff94:	ldrb	w0, [sp, #159]
  41ff98:	cmp	w0, #0x0
  41ff9c:	b.eq	420108 <log_unknown_owner+0x1d8>  // b.none
  41ffa0:	ldr	x0, [sp, #128]
  41ffa4:	str	x0, [sp, #224]
  41ffa8:	ldr	x0, [sp, #224]
  41ffac:	cmp	x0, #0x0
  41ffb0:	b.eq	41ffc0 <log_unknown_owner+0x90>  // b.none
  41ffb4:	ldr	x0, [sp, #224]
  41ffb8:	ldr	x0, [x0, #32]
  41ffbc:	b	41ffc4 <log_unknown_owner+0x94>
  41ffc0:	mov	x0, #0x0                   	// #0
  41ffc4:	str	x0, [sp, #232]
  41ffc8:	ldr	x0, [sp, #232]
  41ffcc:	cmp	x0, #0x0
  41ffd0:	b.eq	41ffe0 <log_unknown_owner+0xb0>  // b.none
  41ffd4:	ldr	x0, [sp, #232]
  41ffd8:	ldr	x0, [x0, #8]
  41ffdc:	b	41ffe4 <log_unknown_owner+0xb4>
  41ffe0:	mov	x0, #0x0                   	// #0
  41ffe4:	str	x0, [sp, #240]
  41ffe8:	ldr	x0, [sp, #232]
  41ffec:	cmp	x0, #0x0
  41fff0:	b.eq	420000 <log_unknown_owner+0xd0>  // b.none
  41fff4:	ldr	x0, [sp, #232]
  41fff8:	ldr	x0, [x0]
  41fffc:	b	420004 <log_unknown_owner+0xd4>
  420000:	mov	x0, #0x0                   	// #0
  420004:	str	x0, [sp, #248]
  420008:	str	xzr, [sp, #176]
  42000c:	ldr	x0, [sp, #136]
  420010:	str	x0, [sp, #256]
  420014:	mov	w0, #0x3                   	// #3
  420018:	str	w0, [sp, #168]
  42001c:	str	wzr, [sp, #172]
  420020:	ldr	x0, [sp, #256]
  420024:	cmp	x0, #0x0
  420028:	b.eq	420064 <log_unknown_owner+0x134>  // b.none
  42002c:	mov	w0, #0x1                   	// #1
  420030:	bl	40be30 <log_get_max_level_realm@plt>
  420034:	mov	w1, w0
  420038:	ldr	w0, [sp, #168]
  42003c:	cmp	w0, w1
  420040:	cset	w0, le
  420044:	and	w0, w0, #0xff
  420048:	and	x0, x0, #0xff
  42004c:	cmp	x0, #0x0
  420050:	b.eq	420064 <log_unknown_owner+0x134>  // b.none
  420054:	add	x0, sp, #0xb0
  420058:	mov	x1, x0
  42005c:	ldr	x0, [sp, #256]
  420060:	bl	40aba0 <sd_device_get_sysname@plt>
  420064:	adrp	x0, 454000 <__func__.10675+0xa0>
  420068:	add	x20, x0, #0xbb
  42006c:	ldr	x0, [sp, #176]
  420070:	cmp	x0, #0x0
  420074:	b.eq	420084 <log_unknown_owner+0x154>  // b.none
  420078:	adrp	x0, 454000 <__func__.10675+0xa0>
  42007c:	add	x19, x0, #0xd8
  420080:	b	420088 <log_unknown_owner+0x158>
  420084:	mov	x19, #0x0                   	// #0
  420088:	ldr	x21, [sp, #176]
  42008c:	ldr	x0, [sp, #248]
  420090:	bl	41fb4c <strna>
  420094:	mov	x2, x0
  420098:	ldr	x0, [sp, #240]
  42009c:	cmp	x0, #0x0
  4200a0:	b.eq	4200b0 <log_unknown_owner+0x180>  // b.none
  4200a4:	ldr	x0, [sp, #240]
  4200a8:	ldr	w0, [x0, #8]
  4200ac:	b	4200b4 <log_unknown_owner+0x184>
  4200b0:	mov	w0, #0x0                   	// #0
  4200b4:	ldr	x1, [sp, #104]
  4200b8:	str	x1, [sp, #40]
  4200bc:	ldr	x1, [sp, #112]
  4200c0:	str	x1, [sp, #32]
  4200c4:	str	w0, [sp, #24]
  4200c8:	str	x2, [sp, #16]
  4200cc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4200d0:	add	x0, x0, #0xe0
  4200d4:	str	x0, [sp, #8]
  4200d8:	str	xzr, [sp]
  4200dc:	mov	x7, #0x0                   	// #0
  4200e0:	mov	x6, x21
  4200e4:	mov	x5, x19
  4200e8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4200ec:	add	x4, x0, #0x800
  4200f0:	mov	w3, #0xf1                  	// #241
  4200f4:	mov	x2, x20
  4200f8:	ldr	w1, [sp, #172]
  4200fc:	ldr	w0, [sp, #168]
  420100:	bl	40b020 <log_object_internal@plt>
  420104:	b	420270 <log_unknown_owner+0x340>
  420108:	ldr	x0, [sp, #128]
  42010c:	str	x0, [sp, #184]
  420110:	ldr	x0, [sp, #184]
  420114:	cmp	x0, #0x0
  420118:	b.eq	420128 <log_unknown_owner+0x1f8>  // b.none
  42011c:	ldr	x0, [sp, #184]
  420120:	ldr	x0, [x0, #32]
  420124:	b	42012c <log_unknown_owner+0x1fc>
  420128:	mov	x0, #0x0                   	// #0
  42012c:	str	x0, [sp, #192]
  420130:	ldr	x0, [sp, #192]
  420134:	cmp	x0, #0x0
  420138:	b.eq	420148 <log_unknown_owner+0x218>  // b.none
  42013c:	ldr	x0, [sp, #192]
  420140:	ldr	x0, [x0, #8]
  420144:	b	42014c <log_unknown_owner+0x21c>
  420148:	mov	x0, #0x0                   	// #0
  42014c:	str	x0, [sp, #200]
  420150:	ldr	x0, [sp, #192]
  420154:	cmp	x0, #0x0
  420158:	b.eq	420168 <log_unknown_owner+0x238>  // b.none
  42015c:	ldr	x0, [sp, #192]
  420160:	ldr	x0, [x0]
  420164:	b	42016c <log_unknown_owner+0x23c>
  420168:	mov	x0, #0x0                   	// #0
  42016c:	str	x0, [sp, #208]
  420170:	str	xzr, [sp, #176]
  420174:	ldr	x0, [sp, #136]
  420178:	str	x0, [sp, #216]
  42017c:	mov	w0, #0x3                   	// #3
  420180:	str	w0, [sp, #160]
  420184:	ldr	w0, [sp, #124]
  420188:	str	w0, [sp, #164]
  42018c:	ldr	x0, [sp, #216]
  420190:	cmp	x0, #0x0
  420194:	b.eq	4201d0 <log_unknown_owner+0x2a0>  // b.none
  420198:	mov	w0, #0x1                   	// #1
  42019c:	bl	40be30 <log_get_max_level_realm@plt>
  4201a0:	mov	w1, w0
  4201a4:	ldr	w0, [sp, #160]
  4201a8:	cmp	w0, w1
  4201ac:	cset	w0, le
  4201b0:	and	w0, w0, #0xff
  4201b4:	and	x0, x0, #0xff
  4201b8:	cmp	x0, #0x0
  4201bc:	b.eq	4201d0 <log_unknown_owner+0x2a0>  // b.none
  4201c0:	add	x0, sp, #0xb0
  4201c4:	mov	x1, x0
  4201c8:	ldr	x0, [sp, #216]
  4201cc:	bl	40aba0 <sd_device_get_sysname@plt>
  4201d0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4201d4:	add	x20, x0, #0xbb
  4201d8:	ldr	x0, [sp, #176]
  4201dc:	cmp	x0, #0x0
  4201e0:	b.eq	4201f0 <log_unknown_owner+0x2c0>  // b.none
  4201e4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4201e8:	add	x19, x0, #0xd8
  4201ec:	b	4201f4 <log_unknown_owner+0x2c4>
  4201f0:	mov	x19, #0x0                   	// #0
  4201f4:	ldr	x21, [sp, #176]
  4201f8:	ldr	x0, [sp, #208]
  4201fc:	bl	41fb4c <strna>
  420200:	mov	x2, x0
  420204:	ldr	x0, [sp, #200]
  420208:	cmp	x0, #0x0
  42020c:	b.eq	42021c <log_unknown_owner+0x2ec>  // b.none
  420210:	ldr	x0, [sp, #200]
  420214:	ldr	w0, [x0, #8]
  420218:	b	420220 <log_unknown_owner+0x2f0>
  42021c:	mov	w0, #0x0                   	// #0
  420220:	ldr	x1, [sp, #104]
  420224:	str	x1, [sp, #40]
  420228:	ldr	x1, [sp, #112]
  42022c:	str	x1, [sp, #32]
  420230:	str	w0, [sp, #24]
  420234:	str	x2, [sp, #16]
  420238:	adrp	x0, 454000 <__func__.10675+0xa0>
  42023c:	add	x0, x0, #0x100
  420240:	str	x0, [sp, #8]
  420244:	str	xzr, [sp]
  420248:	mov	x7, #0x0                   	// #0
  42024c:	mov	x6, x21
  420250:	mov	x5, x19
  420254:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420258:	add	x4, x0, #0x800
  42025c:	mov	w3, #0xf3                  	// #243
  420260:	mov	x2, x20
  420264:	ldr	w1, [sp, #164]
  420268:	ldr	w0, [sp, #160]
  42026c:	bl	40b020 <log_object_internal@plt>
  420270:	nop
  420274:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  420278:	ldr	x0, [x0, #4032]
  42027c:	ldr	x1, [sp, #264]
  420280:	ldr	x0, [x0]
  420284:	eor	x0, x1, x0
  420288:	cmp	x0, #0x0
  42028c:	b.eq	420294 <log_unknown_owner+0x364>  // b.none
  420290:	bl	40b280 <__stack_chk_fail@plt>
  420294:	ldp	x19, x20, [sp, #64]
  420298:	ldr	x21, [sp, #80]
  42029c:	ldp	x29, x30, [sp, #48]
  4202a0:	add	sp, sp, #0x110
  4202a4:	ret

00000000004202a8 <udev_rule_token_free>:
  4202a8:	stp	x29, x30, [sp, #-32]!
  4202ac:	mov	x29, sp
  4202b0:	str	x0, [sp, #24]
  4202b4:	ldr	x0, [sp, #24]
  4202b8:	bl	40ba20 <free@plt>
  4202bc:	nop
  4202c0:	ldp	x29, x30, [sp], #32
  4202c4:	ret

00000000004202c8 <udev_rule_line_clear_tokens>:
  4202c8:	stp	x29, x30, [sp, #-48]!
  4202cc:	mov	x29, sp
  4202d0:	str	x0, [sp, #24]
  4202d4:	ldr	x0, [sp, #24]
  4202d8:	cmp	x0, #0x0
  4202dc:	cset	w0, eq  // eq = none
  4202e0:	and	w0, w0, #0xff
  4202e4:	and	x0, x0, #0xff
  4202e8:	cmp	x0, #0x0
  4202ec:	b.eq	420318 <udev_rule_line_clear_tokens+0x50>  // b.none
  4202f0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4202f4:	add	x1, x0, #0xbb
  4202f8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4202fc:	add	x4, x0, #0x818
  420300:	mov	w3, #0xff                  	// #255
  420304:	mov	x2, x1
  420308:	adrp	x0, 454000 <__func__.10675+0xa0>
  42030c:	add	x1, x0, #0x130
  420310:	mov	w0, #0x1                   	// #1
  420314:	bl	40abb0 <log_assert_failed_realm@plt>
  420318:	ldr	x0, [sp, #24]
  42031c:	ldr	x0, [x0, #56]
  420320:	str	x0, [sp, #32]
  420324:	b	420338 <udev_rule_line_clear_tokens+0x70>
  420328:	ldr	x0, [sp, #32]
  42032c:	bl	4202a8 <udev_rule_token_free>
  420330:	ldr	x0, [sp, #40]
  420334:	str	x0, [sp, #32]
  420338:	ldr	x0, [sp, #32]
  42033c:	cmp	x0, #0x0
  420340:	b.eq	420354 <udev_rule_line_clear_tokens+0x8c>  // b.none
  420344:	ldr	x0, [sp, #32]
  420348:	ldr	x0, [x0, #24]
  42034c:	str	x0, [sp, #40]
  420350:	b	420328 <udev_rule_line_clear_tokens+0x60>
  420354:	ldr	x0, [sp, #24]
  420358:	str	xzr, [x0, #56]
  42035c:	nop
  420360:	ldp	x29, x30, [sp], #48
  420364:	ret

0000000000420368 <udev_rule_line_free>:
  420368:	stp	x29, x30, [sp, #-48]!
  42036c:	mov	x29, sp
  420370:	str	x0, [sp, #24]
  420374:	ldr	x0, [sp, #24]
  420378:	cmp	x0, #0x0
  42037c:	b.eq	4204f8 <udev_rule_line_free+0x190>  // b.none
  420380:	ldr	x0, [sp, #24]
  420384:	bl	4202c8 <udev_rule_line_clear_tokens>
  420388:	ldr	x0, [sp, #24]
  42038c:	ldr	x0, [x0, #40]
  420390:	cmp	x0, #0x0
  420394:	b.eq	4204e0 <udev_rule_line_free+0x178>  // b.none
  420398:	ldr	x0, [sp, #24]
  42039c:	ldr	x0, [x0, #40]
  4203a0:	ldr	x0, [x0, #8]
  4203a4:	ldr	x1, [sp, #24]
  4203a8:	cmp	x1, x0
  4203ac:	b.ne	4203c4 <udev_rule_line_free+0x5c>  // b.any
  4203b0:	ldr	x0, [sp, #24]
  4203b4:	ldr	x0, [x0, #40]
  4203b8:	ldr	x1, [sp, #24]
  4203bc:	ldr	x1, [x1, #72]
  4203c0:	str	x1, [x0, #8]
  4203c4:	ldr	x0, [sp, #24]
  4203c8:	ldr	x0, [x0, #40]
  4203cc:	add	x0, x0, #0x10
  4203d0:	str	x0, [sp, #32]
  4203d4:	ldr	x0, [sp, #24]
  4203d8:	str	x0, [sp, #40]
  4203dc:	ldr	x0, [sp, #40]
  4203e0:	cmp	x0, #0x0
  4203e4:	cset	w0, eq  // eq = none
  4203e8:	and	w0, w0, #0xff
  4203ec:	and	x0, x0, #0xff
  4203f0:	cmp	x0, #0x0
  4203f4:	b.eq	420420 <udev_rule_line_free+0xb8>  // b.none
  4203f8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4203fc:	add	x1, x0, #0xbb
  420400:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420404:	add	x4, x0, #0x838
  420408:	mov	w3, #0x111                 	// #273
  42040c:	mov	x2, x1
  420410:	adrp	x0, 454000 <__func__.10675+0xa0>
  420414:	add	x1, x0, #0x140
  420418:	mov	w0, #0x1                   	// #1
  42041c:	bl	40abb0 <log_assert_failed_realm@plt>
  420420:	ldr	x0, [sp, #40]
  420424:	ldr	x0, [x0, #64]
  420428:	cmp	x0, #0x0
  42042c:	b.eq	420444 <udev_rule_line_free+0xdc>  // b.none
  420430:	ldr	x0, [sp, #40]
  420434:	ldr	x0, [x0, #64]
  420438:	ldr	x1, [sp, #40]
  42043c:	ldr	x1, [x1, #72]
  420440:	str	x1, [x0, #72]
  420444:	ldr	x0, [sp, #40]
  420448:	ldr	x0, [x0, #72]
  42044c:	cmp	x0, #0x0
  420450:	b.eq	42046c <udev_rule_line_free+0x104>  // b.none
  420454:	ldr	x0, [sp, #40]
  420458:	ldr	x0, [x0, #72]
  42045c:	ldr	x1, [sp, #40]
  420460:	ldr	x1, [x1, #64]
  420464:	str	x1, [x0, #64]
  420468:	b	4204c8 <udev_rule_line_free+0x160>
  42046c:	ldr	x0, [sp, #32]
  420470:	ldr	x0, [x0]
  420474:	ldr	x1, [sp, #40]
  420478:	cmp	x1, x0
  42047c:	cset	w0, ne  // ne = any
  420480:	and	w0, w0, #0xff
  420484:	and	x0, x0, #0xff
  420488:	cmp	x0, #0x0
  42048c:	b.eq	4204b8 <udev_rule_line_free+0x150>  // b.none
  420490:	adrp	x0, 454000 <__func__.10675+0xa0>
  420494:	add	x1, x0, #0xbb
  420498:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42049c:	add	x4, x0, #0x838
  4204a0:	mov	w3, #0x111                 	// #273
  4204a4:	mov	x2, x1
  4204a8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4204ac:	add	x1, x0, #0x148
  4204b0:	mov	w0, #0x1                   	// #1
  4204b4:	bl	40abb0 <log_assert_failed_realm@plt>
  4204b8:	ldr	x0, [sp, #40]
  4204bc:	ldr	x1, [x0, #64]
  4204c0:	ldr	x0, [sp, #32]
  4204c4:	str	x1, [x0]
  4204c8:	ldr	x0, [sp, #40]
  4204cc:	str	xzr, [x0, #72]
  4204d0:	ldr	x0, [sp, #40]
  4204d4:	ldr	x1, [x0, #72]
  4204d8:	ldr	x0, [sp, #40]
  4204dc:	str	x1, [x0, #64]
  4204e0:	ldr	x0, [sp, #24]
  4204e4:	ldr	x0, [x0]
  4204e8:	bl	40ba20 <free@plt>
  4204ec:	ldr	x0, [sp, #24]
  4204f0:	bl	40ba20 <free@plt>
  4204f4:	b	4204fc <udev_rule_line_free+0x194>
  4204f8:	nop
  4204fc:	ldp	x29, x30, [sp], #48
  420500:	ret

0000000000420504 <udev_rule_line_freep>:
  420504:	stp	x29, x30, [sp, #-32]!
  420508:	mov	x29, sp
  42050c:	str	x0, [sp, #24]
  420510:	ldr	x0, [sp, #24]
  420514:	ldr	x0, [x0]
  420518:	cmp	x0, #0x0
  42051c:	b.eq	42052c <udev_rule_line_freep+0x28>  // b.none
  420520:	ldr	x0, [sp, #24]
  420524:	ldr	x0, [x0]
  420528:	bl	420368 <udev_rule_line_free>
  42052c:	nop
  420530:	ldp	x29, x30, [sp], #32
  420534:	ret

0000000000420538 <udev_rule_file_free>:
  420538:	stp	x29, x30, [sp, #-48]!
  42053c:	mov	x29, sp
  420540:	str	x0, [sp, #24]
  420544:	ldr	x0, [sp, #24]
  420548:	cmp	x0, #0x0
  42054c:	b.eq	4205a4 <udev_rule_file_free+0x6c>  // b.none
  420550:	ldr	x0, [sp, #24]
  420554:	ldr	x0, [x0, #16]
  420558:	str	x0, [sp, #32]
  42055c:	b	420570 <udev_rule_file_free+0x38>
  420560:	ldr	x0, [sp, #32]
  420564:	bl	420368 <udev_rule_line_free>
  420568:	ldr	x0, [sp, #40]
  42056c:	str	x0, [sp, #32]
  420570:	ldr	x0, [sp, #32]
  420574:	cmp	x0, #0x0
  420578:	b.eq	42058c <udev_rule_file_free+0x54>  // b.none
  42057c:	ldr	x0, [sp, #32]
  420580:	ldr	x0, [x0, #64]
  420584:	str	x0, [sp, #40]
  420588:	b	420560 <udev_rule_file_free+0x28>
  42058c:	ldr	x0, [sp, #24]
  420590:	ldr	x0, [x0]
  420594:	bl	40ba20 <free@plt>
  420598:	ldr	x0, [sp, #24]
  42059c:	bl	40ba20 <free@plt>
  4205a0:	b	4205a8 <udev_rule_file_free+0x70>
  4205a4:	nop
  4205a8:	ldp	x29, x30, [sp], #48
  4205ac:	ret

00000000004205b0 <udev_rules_free>:
  4205b0:	stp	x29, x30, [sp, #-48]!
  4205b4:	mov	x29, sp
  4205b8:	str	x0, [sp, #24]
  4205bc:	ldr	x0, [sp, #24]
  4205c0:	cmp	x0, #0x0
  4205c4:	b.ne	4205d0 <udev_rules_free+0x20>  // b.any
  4205c8:	mov	x0, #0x0                   	// #0
  4205cc:	b	42062c <udev_rules_free+0x7c>
  4205d0:	ldr	x0, [sp, #24]
  4205d4:	ldr	x0, [x0, #40]
  4205d8:	str	x0, [sp, #32]
  4205dc:	b	4205f0 <udev_rules_free+0x40>
  4205e0:	ldr	x0, [sp, #32]
  4205e4:	bl	420538 <udev_rule_file_free>
  4205e8:	ldr	x0, [sp, #40]
  4205ec:	str	x0, [sp, #32]
  4205f0:	ldr	x0, [sp, #32]
  4205f4:	cmp	x0, #0x0
  4205f8:	b.eq	42060c <udev_rules_free+0x5c>  // b.none
  4205fc:	ldr	x0, [sp, #32]
  420600:	ldr	x0, [x0, #24]
  420604:	str	x0, [sp, #40]
  420608:	b	4205e0 <udev_rules_free+0x30>
  42060c:	ldr	x0, [sp, #24]
  420610:	ldr	x0, [x0, #16]
  420614:	bl	41fc5c <hashmap_free_free_key>
  420618:	ldr	x0, [sp, #24]
  42061c:	ldr	x0, [x0, #24]
  420620:	bl	41fc5c <hashmap_free_free_key>
  420624:	ldr	x0, [sp, #24]
  420628:	bl	41f9e4 <mfree>
  42062c:	ldp	x29, x30, [sp], #48
  420630:	ret

0000000000420634 <rule_resolve_user>:
  420634:	stp	x29, x30, [sp, #-112]!
  420638:	mov	x29, sp
  42063c:	str	x19, [sp, #16]
  420640:	str	x0, [sp, #56]
  420644:	str	x1, [sp, #48]
  420648:	str	x2, [sp, #40]
  42064c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  420650:	ldr	x0, [x0, #4032]
  420654:	ldr	x1, [x0]
  420658:	str	x1, [sp, #104]
  42065c:	mov	x1, #0x0                   	// #0
  420660:	str	xzr, [sp, #80]
  420664:	ldr	x0, [sp, #56]
  420668:	cmp	x0, #0x0
  42066c:	cset	w0, eq  // eq = none
  420670:	and	w0, w0, #0xff
  420674:	and	x0, x0, #0xff
  420678:	cmp	x0, #0x0
  42067c:	b.eq	4206a8 <rule_resolve_user+0x74>  // b.none
  420680:	adrp	x0, 454000 <__func__.10675+0xa0>
  420684:	add	x1, x0, #0xbb
  420688:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42068c:	add	x4, x0, #0x850
  420690:	mov	w3, #0x13b                 	// #315
  420694:	mov	x2, x1
  420698:	adrp	x0, 454000 <__func__.10675+0xa0>
  42069c:	add	x1, x0, #0x158
  4206a0:	mov	w0, #0x1                   	// #1
  4206a4:	bl	40abb0 <log_assert_failed_realm@plt>
  4206a8:	ldr	x0, [sp, #48]
  4206ac:	cmp	x0, #0x0
  4206b0:	cset	w0, eq  // eq = none
  4206b4:	and	w0, w0, #0xff
  4206b8:	and	x0, x0, #0xff
  4206bc:	cmp	x0, #0x0
  4206c0:	b.eq	4206ec <rule_resolve_user+0xb8>  // b.none
  4206c4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4206c8:	add	x1, x0, #0xbb
  4206cc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4206d0:	add	x4, x0, #0x850
  4206d4:	mov	w3, #0x13c                 	// #316
  4206d8:	mov	x2, x1
  4206dc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4206e0:	add	x1, x0, #0x160
  4206e4:	mov	w0, #0x1                   	// #1
  4206e8:	bl	40abb0 <log_assert_failed_realm@plt>
  4206ec:	ldr	x0, [sp, #56]
  4206f0:	ldr	x0, [x0, #16]
  4206f4:	ldr	x1, [sp, #48]
  4206f8:	bl	41fcb0 <hashmap_get>
  4206fc:	str	x0, [sp, #88]
  420700:	ldr	x0, [sp, #88]
  420704:	cmp	x0, #0x0
  420708:	b.eq	420724 <rule_resolve_user+0xf0>  // b.none
  42070c:	ldr	x0, [sp, #88]
  420710:	sub	w1, w0, #0x1
  420714:	ldr	x0, [sp, #40]
  420718:	str	w1, [x0]
  42071c:	mov	w19, #0x0                   	// #0
  420720:	b	42082c <rule_resolve_user+0x1f8>
  420724:	add	x1, sp, #0x48
  420728:	add	x0, sp, #0x30
  42072c:	mov	w5, #0x2                   	// #2
  420730:	mov	x4, #0x0                   	// #0
  420734:	mov	x3, #0x0                   	// #0
  420738:	mov	x2, #0x0                   	// #0
  42073c:	bl	40b5e0 <get_user_creds@plt>
  420740:	str	w0, [sp, #76]
  420744:	ldr	w0, [sp, #76]
  420748:	cmp	w0, #0x0
  42074c:	b.ge	420784 <rule_resolve_user+0x150>  // b.tcont
  420750:	ldr	x0, [sp, #48]
  420754:	mov	x4, x0
  420758:	adrp	x0, 454000 <__func__.10675+0xa0>
  42075c:	add	x3, x0, #0x168
  420760:	ldr	w2, [sp, #76]
  420764:	ldr	x1, [sp, #56]
  420768:	mov	x0, #0x0                   	// #0
  42076c:	bl	41ff30 <log_unknown_owner>
  420770:	ldr	x0, [sp, #40]
  420774:	mov	w1, #0xffffffff            	// #-1
  420778:	str	w1, [x0]
  42077c:	mov	w19, #0x0                   	// #0
  420780:	b	42082c <rule_resolve_user+0x1f8>
  420784:	ldr	x0, [sp, #48]
  420788:	bl	40b7c0 <strdup@plt>
  42078c:	str	x0, [sp, #80]
  420790:	ldr	x0, [sp, #80]
  420794:	cmp	x0, #0x0
  420798:	b.ne	4207a4 <rule_resolve_user+0x170>  // b.any
  42079c:	mov	w19, #0xfffffff4            	// #-12
  4207a0:	b	42082c <rule_resolve_user+0x1f8>
  4207a4:	ldr	x0, [sp, #56]
  4207a8:	add	x2, x0, #0x10
  4207ac:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4207b0:	ldr	x1, [x0, #4056]
  4207b4:	mov	x0, x2
  4207b8:	bl	40bb10 <internal_hashmap_ensure_allocated@plt>
  4207bc:	str	w0, [sp, #76]
  4207c0:	ldr	w0, [sp, #76]
  4207c4:	cmp	w0, #0x0
  4207c8:	b.ge	4207d4 <rule_resolve_user+0x1a0>  // b.tcont
  4207cc:	ldr	w19, [sp, #76]
  4207d0:	b	42082c <rule_resolve_user+0x1f8>
  4207d4:	ldr	x0, [sp, #56]
  4207d8:	ldr	x3, [x0, #16]
  4207dc:	ldr	x1, [sp, #80]
  4207e0:	ldr	w0, [sp, #72]
  4207e4:	mov	w0, w0
  4207e8:	add	x0, x0, #0x1
  4207ec:	mov	x2, x0
  4207f0:	mov	x0, x3
  4207f4:	bl	40b570 <hashmap_put@plt>
  4207f8:	str	w0, [sp, #76]
  4207fc:	ldr	w0, [sp, #76]
  420800:	cmp	w0, #0x0
  420804:	b.ge	420810 <rule_resolve_user+0x1dc>  // b.tcont
  420808:	ldr	w19, [sp, #76]
  42080c:	b	42082c <rule_resolve_user+0x1f8>
  420810:	ldr	x0, [sp, #80]
  420814:	str	x0, [sp, #96]
  420818:	str	xzr, [sp, #80]
  42081c:	ldr	w1, [sp, #72]
  420820:	ldr	x0, [sp, #40]
  420824:	str	w1, [x0]
  420828:	mov	w19, #0x0                   	// #0
  42082c:	add	x0, sp, #0x50
  420830:	bl	41fa04 <freep>
  420834:	mov	w1, w19
  420838:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42083c:	ldr	x0, [x0, #4032]
  420840:	ldr	x2, [sp, #104]
  420844:	ldr	x0, [x0]
  420848:	eor	x0, x2, x0
  42084c:	cmp	x0, #0x0
  420850:	b.eq	420858 <rule_resolve_user+0x224>  // b.none
  420854:	bl	40b280 <__stack_chk_fail@plt>
  420858:	mov	w0, w1
  42085c:	ldr	x19, [sp, #16]
  420860:	ldp	x29, x30, [sp], #112
  420864:	ret

0000000000420868 <rule_resolve_group>:
  420868:	stp	x29, x30, [sp, #-112]!
  42086c:	mov	x29, sp
  420870:	str	x19, [sp, #16]
  420874:	str	x0, [sp, #56]
  420878:	str	x1, [sp, #48]
  42087c:	str	x2, [sp, #40]
  420880:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  420884:	ldr	x0, [x0, #4032]
  420888:	ldr	x1, [x0]
  42088c:	str	x1, [sp, #104]
  420890:	mov	x1, #0x0                   	// #0
  420894:	str	xzr, [sp, #80]
  420898:	ldr	x0, [sp, #56]
  42089c:	cmp	x0, #0x0
  4208a0:	cset	w0, eq  // eq = none
  4208a4:	and	w0, w0, #0xff
  4208a8:	and	x0, x0, #0xff
  4208ac:	cmp	x0, #0x0
  4208b0:	b.eq	4208dc <rule_resolve_group+0x74>  // b.none
  4208b4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4208b8:	add	x1, x0, #0xbb
  4208bc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4208c0:	add	x4, x0, #0x868
  4208c4:	mov	w3, #0x162                 	// #354
  4208c8:	mov	x2, x1
  4208cc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4208d0:	add	x1, x0, #0x158
  4208d4:	mov	w0, #0x1                   	// #1
  4208d8:	bl	40abb0 <log_assert_failed_realm@plt>
  4208dc:	ldr	x0, [sp, #48]
  4208e0:	cmp	x0, #0x0
  4208e4:	cset	w0, eq  // eq = none
  4208e8:	and	w0, w0, #0xff
  4208ec:	and	x0, x0, #0xff
  4208f0:	cmp	x0, #0x0
  4208f4:	b.eq	420920 <rule_resolve_group+0xb8>  // b.none
  4208f8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4208fc:	add	x1, x0, #0xbb
  420900:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420904:	add	x4, x0, #0x868
  420908:	mov	w3, #0x163                 	// #355
  42090c:	mov	x2, x1
  420910:	adrp	x0, 454000 <__func__.10675+0xa0>
  420914:	add	x1, x0, #0x160
  420918:	mov	w0, #0x1                   	// #1
  42091c:	bl	40abb0 <log_assert_failed_realm@plt>
  420920:	ldr	x0, [sp, #56]
  420924:	ldr	x0, [x0, #24]
  420928:	ldr	x1, [sp, #48]
  42092c:	bl	41fcb0 <hashmap_get>
  420930:	str	x0, [sp, #88]
  420934:	ldr	x0, [sp, #88]
  420938:	cmp	x0, #0x0
  42093c:	b.eq	420958 <rule_resolve_group+0xf0>  // b.none
  420940:	ldr	x0, [sp, #88]
  420944:	sub	w1, w0, #0x1
  420948:	ldr	x0, [sp, #40]
  42094c:	str	w1, [x0]
  420950:	mov	w19, #0x0                   	// #0
  420954:	b	420a54 <rule_resolve_group+0x1ec>
  420958:	add	x1, sp, #0x48
  42095c:	add	x0, sp, #0x30
  420960:	mov	w2, #0x2                   	// #2
  420964:	bl	40b980 <get_group_creds@plt>
  420968:	str	w0, [sp, #76]
  42096c:	ldr	w0, [sp, #76]
  420970:	cmp	w0, #0x0
  420974:	b.ge	4209ac <rule_resolve_group+0x144>  // b.tcont
  420978:	ldr	x0, [sp, #48]
  42097c:	mov	x4, x0
  420980:	adrp	x0, 454000 <__func__.10675+0xa0>
  420984:	add	x3, x0, #0x170
  420988:	ldr	w2, [sp, #76]
  42098c:	ldr	x1, [sp, #56]
  420990:	mov	x0, #0x0                   	// #0
  420994:	bl	41ff30 <log_unknown_owner>
  420998:	ldr	x0, [sp, #40]
  42099c:	mov	w1, #0xffffffff            	// #-1
  4209a0:	str	w1, [x0]
  4209a4:	mov	w19, #0x0                   	// #0
  4209a8:	b	420a54 <rule_resolve_group+0x1ec>
  4209ac:	ldr	x0, [sp, #48]
  4209b0:	bl	40b7c0 <strdup@plt>
  4209b4:	str	x0, [sp, #80]
  4209b8:	ldr	x0, [sp, #80]
  4209bc:	cmp	x0, #0x0
  4209c0:	b.ne	4209cc <rule_resolve_group+0x164>  // b.any
  4209c4:	mov	w19, #0xfffffff4            	// #-12
  4209c8:	b	420a54 <rule_resolve_group+0x1ec>
  4209cc:	ldr	x0, [sp, #56]
  4209d0:	add	x2, x0, #0x18
  4209d4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4209d8:	ldr	x1, [x0, #4056]
  4209dc:	mov	x0, x2
  4209e0:	bl	40bb10 <internal_hashmap_ensure_allocated@plt>
  4209e4:	str	w0, [sp, #76]
  4209e8:	ldr	w0, [sp, #76]
  4209ec:	cmp	w0, #0x0
  4209f0:	b.ge	4209fc <rule_resolve_group+0x194>  // b.tcont
  4209f4:	ldr	w19, [sp, #76]
  4209f8:	b	420a54 <rule_resolve_group+0x1ec>
  4209fc:	ldr	x0, [sp, #56]
  420a00:	ldr	x3, [x0, #24]
  420a04:	ldr	x1, [sp, #80]
  420a08:	ldr	w0, [sp, #72]
  420a0c:	mov	w0, w0
  420a10:	add	x0, x0, #0x1
  420a14:	mov	x2, x0
  420a18:	mov	x0, x3
  420a1c:	bl	40b570 <hashmap_put@plt>
  420a20:	str	w0, [sp, #76]
  420a24:	ldr	w0, [sp, #76]
  420a28:	cmp	w0, #0x0
  420a2c:	b.ge	420a38 <rule_resolve_group+0x1d0>  // b.tcont
  420a30:	ldr	w19, [sp, #76]
  420a34:	b	420a54 <rule_resolve_group+0x1ec>
  420a38:	ldr	x0, [sp, #80]
  420a3c:	str	x0, [sp, #96]
  420a40:	str	xzr, [sp, #80]
  420a44:	ldr	w1, [sp, #72]
  420a48:	ldr	x0, [sp, #40]
  420a4c:	str	w1, [x0]
  420a50:	mov	w19, #0x0                   	// #0
  420a54:	add	x0, sp, #0x50
  420a58:	bl	41fa04 <freep>
  420a5c:	mov	w1, w19
  420a60:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  420a64:	ldr	x0, [x0, #4032]
  420a68:	ldr	x2, [sp, #104]
  420a6c:	ldr	x0, [x0]
  420a70:	eor	x0, x2, x0
  420a74:	cmp	x0, #0x0
  420a78:	b.eq	420a80 <rule_resolve_group+0x218>  // b.none
  420a7c:	bl	40b280 <__stack_chk_fail@plt>
  420a80:	mov	w0, w1
  420a84:	ldr	x19, [sp, #16]
  420a88:	ldp	x29, x30, [sp], #112
  420a8c:	ret

0000000000420a90 <rule_get_substitution_type>:
  420a90:	stp	x29, x30, [sp, #-32]!
  420a94:	mov	x29, sp
  420a98:	str	x0, [sp, #24]
  420a9c:	ldr	x0, [sp, #24]
  420aa0:	cmp	x0, #0x0
  420aa4:	cset	w0, eq  // eq = none
  420aa8:	and	w0, w0, #0xff
  420aac:	and	x0, x0, #0xff
  420ab0:	cmp	x0, #0x0
  420ab4:	b.eq	420ae0 <rule_get_substitution_type+0x50>  // b.none
  420ab8:	adrp	x0, 454000 <__func__.10675+0xa0>
  420abc:	add	x1, x0, #0xbb
  420ac0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420ac4:	add	x4, x0, #0x880
  420ac8:	mov	w3, #0x184                 	// #388
  420acc:	mov	x2, x1
  420ad0:	adrp	x0, 454000 <__func__.10675+0xa0>
  420ad4:	add	x1, x0, #0x178
  420ad8:	mov	w0, #0x1                   	// #1
  420adc:	bl	40abb0 <log_assert_failed_realm@plt>
  420ae0:	ldr	x0, [sp, #24]
  420ae4:	ldrb	w0, [x0]
  420ae8:	cmp	w0, #0x5b
  420aec:	b.ne	420af8 <rule_get_substitution_type+0x68>  // b.any
  420af0:	mov	w0, #0x2                   	// #2
  420af4:	b	420b2c <rule_get_substitution_type+0x9c>
  420af8:	mov	w1, #0x25                  	// #37
  420afc:	ldr	x0, [sp, #24]
  420b00:	bl	40b850 <strchr@plt>
  420b04:	cmp	x0, #0x0
  420b08:	b.ne	420b20 <rule_get_substitution_type+0x90>  // b.any
  420b0c:	mov	w1, #0x24                  	// #36
  420b10:	ldr	x0, [sp, #24]
  420b14:	bl	40b850 <strchr@plt>
  420b18:	cmp	x0, #0x0
  420b1c:	b.eq	420b28 <rule_get_substitution_type+0x98>  // b.none
  420b20:	mov	w0, #0x1                   	// #1
  420b24:	b	420b2c <rule_get_substitution_type+0x9c>
  420b28:	mov	w0, #0x0                   	// #0
  420b2c:	ldp	x29, x30, [sp], #32
  420b30:	ret

0000000000420b34 <rule_line_append_token>:
  420b34:	stp	x29, x30, [sp, #-128]!
  420b38:	mov	x29, sp
  420b3c:	str	x0, [sp, #24]
  420b40:	str	x1, [sp, #16]
  420b44:	ldr	x0, [sp, #24]
  420b48:	cmp	x0, #0x0
  420b4c:	cset	w0, eq  // eq = none
  420b50:	and	w0, w0, #0xff
  420b54:	and	x0, x0, #0xff
  420b58:	cmp	x0, #0x0
  420b5c:	b.eq	420b88 <rule_line_append_token+0x54>  // b.none
  420b60:	adrp	x0, 454000 <__func__.10675+0xa0>
  420b64:	add	x1, x0, #0xbb
  420b68:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420b6c:	add	x4, x0, #0x8a0
  420b70:	mov	w3, #0x18e                 	// #398
  420b74:	mov	x2, x1
  420b78:	adrp	x0, 454000 <__func__.10675+0xa0>
  420b7c:	add	x1, x0, #0x130
  420b80:	mov	w0, #0x1                   	// #1
  420b84:	bl	40abb0 <log_assert_failed_realm@plt>
  420b88:	ldr	x0, [sp, #16]
  420b8c:	cmp	x0, #0x0
  420b90:	cset	w0, eq  // eq = none
  420b94:	and	w0, w0, #0xff
  420b98:	and	x0, x0, #0xff
  420b9c:	cmp	x0, #0x0
  420ba0:	b.eq	420bcc <rule_line_append_token+0x98>  // b.none
  420ba4:	adrp	x0, 454000 <__func__.10675+0xa0>
  420ba8:	add	x1, x0, #0xbb
  420bac:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420bb0:	add	x4, x0, #0x8a0
  420bb4:	mov	w3, #0x18f                 	// #399
  420bb8:	mov	x2, x1
  420bbc:	adrp	x0, 454000 <__func__.10675+0xa0>
  420bc0:	add	x1, x0, #0x180
  420bc4:	mov	w0, #0x1                   	// #1
  420bc8:	bl	40abb0 <log_assert_failed_realm@plt>
  420bcc:	ldr	x0, [sp, #24]
  420bd0:	ldr	x0, [x0, #48]
  420bd4:	cmp	x0, #0x0
  420bd8:	b.eq	420d28 <rule_line_append_token+0x1f4>  // b.none
  420bdc:	ldr	x0, [sp, #24]
  420be0:	add	x0, x0, #0x30
  420be4:	str	x0, [sp, #96]
  420be8:	ldr	x0, [sp, #96]
  420bec:	ldr	x0, [x0]
  420bf0:	str	x0, [sp, #40]
  420bf4:	ldr	x0, [sp, #40]
  420bf8:	cmp	x0, #0x0
  420bfc:	b.ne	420c14 <rule_line_append_token+0xe0>  // b.any
  420c00:	str	xzr, [sp, #32]
  420c04:	b	420c2c <rule_line_append_token+0xf8>
  420c08:	ldr	x0, [sp, #40]
  420c0c:	ldr	x0, [x0, #24]
  420c10:	str	x0, [sp, #40]
  420c14:	ldr	x0, [sp, #40]
  420c18:	ldr	x0, [x0, #24]
  420c1c:	cmp	x0, #0x0
  420c20:	b.ne	420c08 <rule_line_append_token+0xd4>  // b.any
  420c24:	ldr	x0, [sp, #40]
  420c28:	str	x0, [sp, #32]
  420c2c:	ldr	x0, [sp, #96]
  420c30:	str	x0, [sp, #104]
  420c34:	ldr	x0, [sp, #32]
  420c38:	str	x0, [sp, #112]
  420c3c:	ldr	x0, [sp, #16]
  420c40:	str	x0, [sp, #120]
  420c44:	ldr	x0, [sp, #120]
  420c48:	cmp	x0, #0x0
  420c4c:	cset	w0, eq  // eq = none
  420c50:	and	w0, w0, #0xff
  420c54:	and	x0, x0, #0xff
  420c58:	cmp	x0, #0x0
  420c5c:	b.eq	420c88 <rule_line_append_token+0x154>  // b.none
  420c60:	adrp	x0, 454000 <__func__.10675+0xa0>
  420c64:	add	x1, x0, #0xbb
  420c68:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420c6c:	add	x4, x0, #0x8a0
  420c70:	mov	w3, #0x192                 	// #402
  420c74:	mov	x2, x1
  420c78:	adrp	x0, 454000 <__func__.10675+0xa0>
  420c7c:	add	x1, x0, #0x188
  420c80:	mov	w0, #0x1                   	// #1
  420c84:	bl	40abb0 <log_assert_failed_realm@plt>
  420c88:	ldr	x0, [sp, #112]
  420c8c:	cmp	x0, #0x0
  420c90:	b.ne	420cdc <rule_line_append_token+0x1a8>  // b.any
  420c94:	ldr	x0, [sp, #104]
  420c98:	ldr	x1, [x0]
  420c9c:	ldr	x0, [sp, #120]
  420ca0:	str	x1, [x0, #24]
  420ca4:	ldr	x0, [sp, #120]
  420ca8:	ldr	x0, [x0, #24]
  420cac:	cmp	x0, #0x0
  420cb0:	b.eq	420cc4 <rule_line_append_token+0x190>  // b.none
  420cb4:	ldr	x0, [sp, #120]
  420cb8:	ldr	x0, [x0, #24]
  420cbc:	ldr	x1, [sp, #120]
  420cc0:	str	x1, [x0, #32]
  420cc4:	ldr	x0, [sp, #120]
  420cc8:	str	xzr, [x0, #32]
  420ccc:	ldr	x0, [sp, #104]
  420cd0:	ldr	x1, [sp, #120]
  420cd4:	str	x1, [x0]
  420cd8:	b	420e70 <rule_line_append_token+0x33c>
  420cdc:	ldr	x0, [sp, #112]
  420ce0:	ldr	x1, [x0, #24]
  420ce4:	ldr	x0, [sp, #120]
  420ce8:	str	x1, [x0, #24]
  420cec:	ldr	x0, [sp, #120]
  420cf0:	ldr	x0, [x0, #24]
  420cf4:	cmp	x0, #0x0
  420cf8:	b.eq	420d0c <rule_line_append_token+0x1d8>  // b.none
  420cfc:	ldr	x0, [sp, #120]
  420d00:	ldr	x0, [x0, #24]
  420d04:	ldr	x1, [sp, #120]
  420d08:	str	x1, [x0, #32]
  420d0c:	ldr	x0, [sp, #120]
  420d10:	ldr	x1, [sp, #112]
  420d14:	str	x1, [x0, #32]
  420d18:	ldr	x0, [sp, #112]
  420d1c:	ldr	x1, [sp, #120]
  420d20:	str	x1, [x0, #24]
  420d24:	b	420e70 <rule_line_append_token+0x33c>
  420d28:	ldr	x0, [sp, #24]
  420d2c:	add	x0, x0, #0x38
  420d30:	str	x0, [sp, #64]
  420d34:	ldr	x0, [sp, #64]
  420d38:	ldr	x0, [x0]
  420d3c:	str	x0, [sp, #56]
  420d40:	ldr	x0, [sp, #56]
  420d44:	cmp	x0, #0x0
  420d48:	b.ne	420d60 <rule_line_append_token+0x22c>  // b.any
  420d4c:	str	xzr, [sp, #48]
  420d50:	b	420d78 <rule_line_append_token+0x244>
  420d54:	ldr	x0, [sp, #56]
  420d58:	ldr	x0, [x0, #24]
  420d5c:	str	x0, [sp, #56]
  420d60:	ldr	x0, [sp, #56]
  420d64:	ldr	x0, [x0, #24]
  420d68:	cmp	x0, #0x0
  420d6c:	b.ne	420d54 <rule_line_append_token+0x220>  // b.any
  420d70:	ldr	x0, [sp, #56]
  420d74:	str	x0, [sp, #48]
  420d78:	ldr	x0, [sp, #64]
  420d7c:	str	x0, [sp, #72]
  420d80:	ldr	x0, [sp, #48]
  420d84:	str	x0, [sp, #80]
  420d88:	ldr	x0, [sp, #16]
  420d8c:	str	x0, [sp, #88]
  420d90:	ldr	x0, [sp, #88]
  420d94:	cmp	x0, #0x0
  420d98:	cset	w0, eq  // eq = none
  420d9c:	and	w0, w0, #0xff
  420da0:	and	x0, x0, #0xff
  420da4:	cmp	x0, #0x0
  420da8:	b.eq	420dd4 <rule_line_append_token+0x2a0>  // b.none
  420dac:	adrp	x0, 454000 <__func__.10675+0xa0>
  420db0:	add	x1, x0, #0xbb
  420db4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420db8:	add	x4, x0, #0x8a0
  420dbc:	mov	w3, #0x194                 	// #404
  420dc0:	mov	x2, x1
  420dc4:	adrp	x0, 454000 <__func__.10675+0xa0>
  420dc8:	add	x1, x0, #0x188
  420dcc:	mov	w0, #0x1                   	// #1
  420dd0:	bl	40abb0 <log_assert_failed_realm@plt>
  420dd4:	ldr	x0, [sp, #80]
  420dd8:	cmp	x0, #0x0
  420ddc:	b.ne	420e28 <rule_line_append_token+0x2f4>  // b.any
  420de0:	ldr	x0, [sp, #72]
  420de4:	ldr	x1, [x0]
  420de8:	ldr	x0, [sp, #88]
  420dec:	str	x1, [x0, #24]
  420df0:	ldr	x0, [sp, #88]
  420df4:	ldr	x0, [x0, #24]
  420df8:	cmp	x0, #0x0
  420dfc:	b.eq	420e10 <rule_line_append_token+0x2dc>  // b.none
  420e00:	ldr	x0, [sp, #88]
  420e04:	ldr	x0, [x0, #24]
  420e08:	ldr	x1, [sp, #88]
  420e0c:	str	x1, [x0, #32]
  420e10:	ldr	x0, [sp, #88]
  420e14:	str	xzr, [x0, #32]
  420e18:	ldr	x0, [sp, #72]
  420e1c:	ldr	x1, [sp, #88]
  420e20:	str	x1, [x0]
  420e24:	b	420e70 <rule_line_append_token+0x33c>
  420e28:	ldr	x0, [sp, #80]
  420e2c:	ldr	x1, [x0, #24]
  420e30:	ldr	x0, [sp, #88]
  420e34:	str	x1, [x0, #24]
  420e38:	ldr	x0, [sp, #88]
  420e3c:	ldr	x0, [x0, #24]
  420e40:	cmp	x0, #0x0
  420e44:	b.eq	420e58 <rule_line_append_token+0x324>  // b.none
  420e48:	ldr	x0, [sp, #88]
  420e4c:	ldr	x0, [x0, #24]
  420e50:	ldr	x1, [sp, #88]
  420e54:	str	x1, [x0, #32]
  420e58:	ldr	x0, [sp, #88]
  420e5c:	ldr	x1, [sp, #80]
  420e60:	str	x1, [x0, #32]
  420e64:	ldr	x0, [sp, #80]
  420e68:	ldr	x1, [sp, #88]
  420e6c:	str	x1, [x0, #24]
  420e70:	ldr	x0, [sp, #24]
  420e74:	ldr	x1, [sp, #16]
  420e78:	str	x1, [x0, #48]
  420e7c:	nop
  420e80:	ldp	x29, x30, [sp], #128
  420e84:	ret

0000000000420e88 <rule_line_add_token>:
  420e88:	stp	x29, x30, [sp, #-176]!
  420e8c:	mov	x29, sp
  420e90:	str	x0, [sp, #40]
  420e94:	str	w1, [sp, #36]
  420e98:	str	w2, [sp, #32]
  420e9c:	str	x3, [sp, #24]
  420ea0:	str	x4, [sp, #16]
  420ea4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  420ea8:	ldr	x0, [x0, #4032]
  420eac:	ldr	x1, [x0]
  420eb0:	str	x1, [sp, #168]
  420eb4:	mov	x1, #0x0                   	// #0
  420eb8:	mov	w0, #0xffffffff            	// #-1
  420ebc:	str	w0, [sp, #56]
  420ec0:	mov	w0, #0xffffffff            	// #-1
  420ec4:	str	w0, [sp, #60]
  420ec8:	strb	wzr, [sp, #49]
  420ecc:	ldr	x0, [sp, #40]
  420ed0:	cmp	x0, #0x0
  420ed4:	cset	w0, eq  // eq = none
  420ed8:	and	w0, w0, #0xff
  420edc:	and	x0, x0, #0xff
  420ee0:	cmp	x0, #0x0
  420ee4:	b.eq	420f10 <rule_line_add_token+0x88>  // b.none
  420ee8:	adrp	x0, 454000 <__func__.10675+0xa0>
  420eec:	add	x1, x0, #0xbb
  420ef0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420ef4:	add	x4, x0, #0x8b8
  420ef8:	mov	w3, #0x1a0                 	// #416
  420efc:	mov	x2, x1
  420f00:	adrp	x0, 454000 <__func__.10675+0xa0>
  420f04:	add	x1, x0, #0x130
  420f08:	mov	w0, #0x1                   	// #1
  420f0c:	bl	40abb0 <log_assert_failed_realm@plt>
  420f10:	ldr	w0, [sp, #36]
  420f14:	lsr	w0, w0, #31
  420f18:	and	w0, w0, #0xff
  420f1c:	and	x0, x0, #0xff
  420f20:	cmp	x0, #0x0
  420f24:	b.ne	420f44 <rule_line_add_token+0xbc>  // b.any
  420f28:	ldr	w0, [sp, #36]
  420f2c:	cmp	w0, #0x2e
  420f30:	cset	w0, gt
  420f34:	and	w0, w0, #0xff
  420f38:	and	x0, x0, #0xff
  420f3c:	cmp	x0, #0x0
  420f40:	b.eq	420f6c <rule_line_add_token+0xe4>  // b.none
  420f44:	adrp	x0, 454000 <__func__.10675+0xa0>
  420f48:	add	x1, x0, #0xbb
  420f4c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420f50:	add	x4, x0, #0x8b8
  420f54:	mov	w3, #0x1a1                 	// #417
  420f58:	mov	x2, x1
  420f5c:	adrp	x0, 454000 <__func__.10675+0xa0>
  420f60:	add	x1, x0, #0x190
  420f64:	mov	w0, #0x1                   	// #1
  420f68:	bl	40abb0 <log_assert_failed_realm@plt>
  420f6c:	ldr	w0, [sp, #32]
  420f70:	lsr	w0, w0, #31
  420f74:	and	w0, w0, #0xff
  420f78:	and	x0, x0, #0xff
  420f7c:	cmp	x0, #0x0
  420f80:	b.ne	420fa0 <rule_line_add_token+0x118>  // b.any
  420f84:	ldr	w0, [sp, #32]
  420f88:	cmp	w0, #0x5
  420f8c:	cset	w0, gt
  420f90:	and	w0, w0, #0xff
  420f94:	and	x0, x0, #0xff
  420f98:	cmp	x0, #0x0
  420f9c:	b.eq	420fc8 <rule_line_add_token+0x140>  // b.none
  420fa0:	adrp	x0, 454000 <__func__.10675+0xa0>
  420fa4:	add	x1, x0, #0xbb
  420fa8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420fac:	add	x4, x0, #0x8b8
  420fb0:	mov	w3, #0x1a2                 	// #418
  420fb4:	mov	x2, x1
  420fb8:	adrp	x0, 454000 <__func__.10675+0xa0>
  420fbc:	add	x1, x0, #0x1b8
  420fc0:	mov	w0, #0x1                   	// #1
  420fc4:	bl	40abb0 <log_assert_failed_realm@plt>
  420fc8:	ldr	w0, [sp, #36]
  420fcc:	cmp	w0, #0x19
  420fd0:	b.gt	421234 <rule_line_add_token+0x3ac>
  420fd4:	ldr	x0, [sp, #24]
  420fd8:	cmp	x0, #0x0
  420fdc:	cset	w0, eq  // eq = none
  420fe0:	and	w0, w0, #0xff
  420fe4:	and	x0, x0, #0xff
  420fe8:	cmp	x0, #0x0
  420fec:	b.eq	421018 <rule_line_add_token+0x190>  // b.none
  420ff0:	adrp	x0, 454000 <__func__.10675+0xa0>
  420ff4:	add	x1, x0, #0xbb
  420ff8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  420ffc:	add	x4, x0, #0x8b8
  421000:	mov	w3, #0x1a5                 	// #421
  421004:	mov	x2, x1
  421008:	adrp	x0, 454000 <__func__.10675+0xa0>
  42100c:	add	x1, x0, #0x1d8
  421010:	mov	w0, #0x1                   	// #1
  421014:	bl	40abb0 <log_assert_failed_realm@plt>
  421018:	strb	wzr, [sp, #50]
  42101c:	ldr	w0, [sp, #32]
  421020:	cmp	w0, #0x1
  421024:	b.hi	421030 <rule_line_add_token+0x1a8>  // b.pmore
  421028:	mov	w0, #0x1                   	// #1
  42102c:	strb	w0, [sp, #50]
  421030:	nop
  421034:	ldrb	w0, [sp, #50]
  421038:	eor	w0, w0, #0x1
  42103c:	and	w0, w0, #0xff
  421040:	and	x0, x0, #0xff
  421044:	cmp	x0, #0x0
  421048:	b.eq	421074 <rule_line_add_token+0x1ec>  // b.none
  42104c:	adrp	x0, 454000 <__func__.10675+0xa0>
  421050:	add	x1, x0, #0xbb
  421054:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421058:	add	x4, x0, #0x8b8
  42105c:	mov	w3, #0x1a6                 	// #422
  421060:	mov	x2, x1
  421064:	adrp	x0, 454000 <__func__.10675+0xa0>
  421068:	add	x1, x0, #0x1e0
  42106c:	mov	w0, #0x1                   	// #1
  421070:	bl	40abb0 <log_assert_failed_realm@plt>
  421074:	ldr	w0, [sp, #36]
  421078:	cmp	w0, #0x8
  42107c:	b.ne	4210b8 <rule_line_add_token+0x230>  // b.any
  421080:	add	x0, sp, #0xb8
  421084:	sub	x0, x0, #0x30
  421088:	adrp	x1, 48d000 <arg_resolve_name_timing>
  42108c:	add	x1, x1, #0x18
  421090:	ld1	{v0.16b, v1.16b}, [x1]
  421094:	st1	{v0.16b, v1.16b}, [x0]
  421098:	add	x0, sp, #0x88
  42109c:	ldr	x1, [sp, #24]
  4210a0:	bl	40b450 <strv_find@plt>
  4210a4:	cmp	x0, #0x0
  4210a8:	b.eq	4210b8 <rule_line_add_token+0x230>  // b.none
  4210ac:	mov	w0, #0x5                   	// #5
  4210b0:	str	w0, [sp, #56]
  4210b4:	b	421130 <rule_line_add_token+0x2a8>
  4210b8:	ldr	x0, [sp, #24]
  4210bc:	bl	41fb70 <isempty>
  4210c0:	and	w0, w0, #0xff
  4210c4:	cmp	w0, #0x0
  4210c8:	b.eq	4210d4 <rule_line_add_token+0x24c>  // b.none
  4210cc:	str	wzr, [sp, #56]
  4210d0:	b	421130 <rule_line_add_token+0x2a8>
  4210d4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4210d8:	add	x1, x0, #0x208
  4210dc:	ldr	x0, [sp, #24]
  4210e0:	bl	40b710 <strcmp@plt>
  4210e4:	cmp	w0, #0x0
  4210e8:	b.ne	421108 <rule_line_add_token+0x280>  // b.any
  4210ec:	str	wzr, [sp, #56]
  4210f0:	ldr	w0, [sp, #32]
  4210f4:	cmp	w0, #0x0
  4210f8:	cset	w0, eq  // eq = none
  4210fc:	and	w0, w0, #0xff
  421100:	str	w0, [sp, #32]
  421104:	b	421130 <rule_line_add_token+0x2a8>
  421108:	ldr	x0, [sp, #24]
  42110c:	bl	41fe88 <string_is_glob>
  421110:	and	w0, w0, #0xff
  421114:	cmp	w0, #0x0
  421118:	b.eq	421128 <rule_line_add_token+0x2a0>  // b.none
  42111c:	mov	w0, #0x3                   	// #3
  421120:	str	w0, [sp, #56]
  421124:	b	421130 <rule_line_add_token+0x2a8>
  421128:	mov	w0, #0x1                   	// #1
  42112c:	str	w0, [sp, #56]
  421130:	ldr	w0, [sp, #36]
  421134:	cmp	w0, #0x10
  421138:	b.le	421148 <rule_line_add_token+0x2c0>
  42113c:	ldr	w0, [sp, #36]
  421140:	cmp	w0, #0x19
  421144:	b.ne	421234 <rule_line_add_token+0x3ac>  // b.any
  421148:	mov	w0, #0x1                   	// #1
  42114c:	strb	w0, [sp, #51]
  421150:	strb	wzr, [sp, #52]
  421154:	ldr	x0, [sp, #24]
  421158:	str	x0, [sp, #72]
  42115c:	ldr	x0, [sp, #72]
  421160:	str	x0, [sp, #64]
  421164:	b	4211d4 <rule_line_add_token+0x34c>
  421168:	ldr	x0, [sp, #64]
  42116c:	ldrb	w0, [x0]
  421170:	cmp	w0, #0x7c
  421174:	b.eq	421198 <rule_line_add_token+0x310>  // b.none
  421178:	ldr	x0, [sp, #72]
  42117c:	add	x1, x0, #0x1
  421180:	str	x1, [sp, #72]
  421184:	ldr	x1, [sp, #64]
  421188:	ldrb	w1, [x1]
  42118c:	strb	w1, [x0]
  421190:	strb	wzr, [sp, #51]
  421194:	b	4211c8 <rule_line_add_token+0x340>
  421198:	ldrb	w0, [sp, #51]
  42119c:	cmp	w0, #0x0
  4211a0:	b.eq	4211b0 <rule_line_add_token+0x328>  // b.none
  4211a4:	mov	w0, #0x1                   	// #1
  4211a8:	strb	w0, [sp, #52]
  4211ac:	b	4211c0 <rule_line_add_token+0x338>
  4211b0:	ldr	x0, [sp, #72]
  4211b4:	add	x1, x0, #0x1
  4211b8:	str	x1, [sp, #72]
  4211bc:	strb	wzr, [x0]
  4211c0:	mov	w0, #0x1                   	// #1
  4211c4:	strb	w0, [sp, #51]
  4211c8:	ldr	x0, [sp, #64]
  4211cc:	add	x0, x0, #0x1
  4211d0:	str	x0, [sp, #64]
  4211d4:	ldr	x0, [sp, #64]
  4211d8:	ldrb	w0, [x0]
  4211dc:	cmp	w0, #0x0
  4211e0:	b.ne	421168 <rule_line_add_token+0x2e0>  // b.any
  4211e4:	ldr	x0, [sp, #72]
  4211e8:	strb	wzr, [x0]
  4211ec:	ldrb	w0, [sp, #51]
  4211f0:	cmp	w0, #0x0
  4211f4:	b.eq	421200 <rule_line_add_token+0x378>  // b.none
  4211f8:	mov	w0, #0x1                   	// #1
  4211fc:	strb	w0, [sp, #52]
  421200:	ldrb	w0, [sp, #52]
  421204:	cmp	w0, #0x0
  421208:	b.eq	421234 <rule_line_add_token+0x3ac>  // b.none
  42120c:	ldr	w0, [sp, #56]
  421210:	cmp	w0, #0x3
  421214:	b.ne	421220 <rule_line_add_token+0x398>  // b.any
  421218:	mov	w0, #0x4                   	// #4
  42121c:	str	w0, [sp, #56]
  421220:	ldr	w0, [sp, #56]
  421224:	cmp	w0, #0x1
  421228:	b.ne	421234 <rule_line_add_token+0x3ac>  // b.any
  42122c:	mov	w0, #0x2                   	// #2
  421230:	str	w0, [sp, #56]
  421234:	strb	wzr, [sp, #53]
  421238:	ldr	w0, [sp, #36]
  42123c:	cmp	w0, #0xa
  421240:	b.eq	421250 <rule_line_add_token+0x3c8>  // b.none
  421244:	ldr	w0, [sp, #36]
  421248:	cmp	w0, #0xf
  42124c:	b.ne	421258 <rule_line_add_token+0x3d0>  // b.any
  421250:	mov	w0, #0x1                   	// #1
  421254:	strb	w0, [sp, #53]
  421258:	nop
  42125c:	ldrb	w0, [sp, #53]
  421260:	cmp	w0, #0x0
  421264:	b.eq	421354 <rule_line_add_token+0x4cc>  // b.none
  421268:	ldr	x0, [sp, #24]
  42126c:	cmp	x0, #0x0
  421270:	cset	w0, eq  // eq = none
  421274:	and	w0, w0, #0xff
  421278:	and	x0, x0, #0xff
  42127c:	cmp	x0, #0x0
  421280:	b.eq	4212ac <rule_line_add_token+0x424>  // b.none
  421284:	adrp	x0, 454000 <__func__.10675+0xa0>
  421288:	add	x1, x0, #0xbb
  42128c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421290:	add	x4, x0, #0x8b8
  421294:	mov	w3, #0x1d4                 	// #468
  421298:	mov	x2, x1
  42129c:	adrp	x0, 454000 <__func__.10675+0xa0>
  4212a0:	add	x1, x0, #0x1d8
  4212a4:	mov	w0, #0x1                   	// #1
  4212a8:	bl	40abb0 <log_assert_failed_realm@plt>
  4212ac:	ldr	x0, [sp, #16]
  4212b0:	cmp	x0, #0x0
  4212b4:	cset	w0, eq  // eq = none
  4212b8:	and	w0, w0, #0xff
  4212bc:	and	x0, x0, #0xff
  4212c0:	cmp	x0, #0x0
  4212c4:	b.eq	4212f0 <rule_line_add_token+0x468>  // b.none
  4212c8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4212cc:	add	x1, x0, #0xbb
  4212d0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4212d4:	add	x4, x0, #0x8b8
  4212d8:	mov	w3, #0x1d5                 	// #469
  4212dc:	mov	x2, x1
  4212e0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4212e4:	add	x1, x0, #0x210
  4212e8:	mov	w0, #0x1                   	// #1
  4212ec:	bl	40abb0 <log_assert_failed_realm@plt>
  4212f0:	ldr	x0, [sp, #24]
  4212f4:	bl	40bd10 <strlen@plt>
  4212f8:	str	x0, [sp, #80]
  4212fc:	ldr	x0, [sp, #80]
  421300:	cmp	x0, #0x0
  421304:	b.eq	421348 <rule_line_add_token+0x4c0>  // b.none
  421308:	bl	40a9e0 <__ctype_b_loc@plt>
  42130c:	ldr	x1, [x0]
  421310:	ldr	x0, [sp, #80]
  421314:	sub	x0, x0, #0x1
  421318:	ldr	x2, [sp, #24]
  42131c:	add	x0, x2, x0
  421320:	ldrb	w0, [x0]
  421324:	and	x0, x0, #0xff
  421328:	lsl	x0, x0, #1
  42132c:	add	x0, x1, x0
  421330:	ldrh	w0, [x0]
  421334:	and	w0, w0, #0x2000
  421338:	cmp	w0, #0x0
  42133c:	b.ne	421348 <rule_line_add_token+0x4c0>  // b.any
  421340:	mov	w0, #0x1                   	// #1
  421344:	strb	w0, [sp, #49]
  421348:	ldr	x0, [sp, #16]
  42134c:	bl	420a90 <rule_get_substitution_type>
  421350:	str	w0, [sp, #60]
  421354:	mov	x1, #0x1                   	// #1
  421358:	mov	x0, #0x28                  	// #40
  42135c:	bl	41faa4 <malloc_multiply>
  421360:	str	x0, [sp, #88]
  421364:	ldr	x0, [sp, #88]
  421368:	cmp	x0, #0x0
  42136c:	b.ne	421378 <rule_line_add_token+0x4f0>  // b.any
  421370:	mov	w0, #0xfffffff4            	// #-12
  421374:	b	421514 <rule_line_add_token+0x68c>
  421378:	ldr	w0, [sp, #36]
  42137c:	sxtb	w4, w0
  421380:	ldr	w0, [sp, #32]
  421384:	sxtb	w3, w0
  421388:	ldr	w0, [sp, #56]
  42138c:	sxtb	w1, w0
  421390:	ldr	w0, [sp, #60]
  421394:	ubfiz	w0, w0, #1, #7
  421398:	sxtb	w0, w0
  42139c:	asr	w0, w0, #1
  4213a0:	sxtb	w2, w0
  4213a4:	ldr	x0, [sp, #88]
  4213a8:	stp	xzr, xzr, [x0]
  4213ac:	stp	xzr, xzr, [x0, #16]
  4213b0:	str	xzr, [x0, #32]
  4213b4:	ldr	x0, [sp, #88]
  4213b8:	strb	w4, [x0]
  4213bc:	ldr	x0, [sp, #88]
  4213c0:	strb	w3, [x0, #1]
  4213c4:	ldr	x0, [sp, #88]
  4213c8:	strb	w1, [x0, #2]
  4213cc:	ldr	x1, [sp, #88]
  4213d0:	ldrb	w0, [x1, #3]
  4213d4:	bfxil	w0, w2, #0, #7
  4213d8:	strb	w0, [x1, #3]
  4213dc:	ldr	x1, [sp, #88]
  4213e0:	ldrb	w0, [x1, #3]
  4213e4:	ldrb	w2, [sp, #49]
  4213e8:	bfi	w0, w2, #7, #1
  4213ec:	strb	w0, [x1, #3]
  4213f0:	ldr	x0, [sp, #88]
  4213f4:	ldr	x1, [sp, #24]
  4213f8:	str	x1, [x0, #8]
  4213fc:	ldr	x0, [sp, #88]
  421400:	ldr	x1, [sp, #16]
  421404:	str	x1, [x0, #16]
  421408:	ldr	x1, [sp, #88]
  42140c:	ldr	x0, [sp, #40]
  421410:	bl	420b34 <rule_line_append_token>
  421414:	ldr	x0, [sp, #88]
  421418:	ldrsb	w0, [x0]
  42141c:	cmp	w0, #0x29
  421420:	b.ne	42143c <rule_line_add_token+0x5b4>  // b.any
  421424:	ldr	x0, [sp, #40]
  421428:	ldr	w0, [x0, #12]
  42142c:	orr	w1, w0, #0x1
  421430:	ldr	x0, [sp, #40]
  421434:	str	w1, [x0, #12]
  421438:	b	421510 <rule_line_add_token+0x688>
  42143c:	strb	wzr, [sp, #54]
  421440:	ldr	x0, [sp, #88]
  421444:	ldrsb	w0, [x0]
  421448:	cmp	w0, #0x24
  42144c:	b.gt	42145c <rule_line_add_token+0x5d4>
  421450:	cmp	w0, #0x1f
  421454:	b.ge	421464 <rule_line_add_token+0x5dc>  // b.tcont
  421458:	b	42146c <rule_line_add_token+0x5e4>
  42145c:	cmp	w0, #0x2a
  421460:	b.ne	42146c <rule_line_add_token+0x5e4>  // b.any
  421464:	mov	w0, #0x1                   	// #1
  421468:	strb	w0, [sp, #54]
  42146c:	nop
  421470:	ldrb	w0, [sp, #54]
  421474:	cmp	w0, #0x0
  421478:	b.eq	421494 <rule_line_add_token+0x60c>  // b.none
  42147c:	ldr	x0, [sp, #40]
  421480:	ldr	w0, [x0, #12]
  421484:	orr	w1, w0, #0x2
  421488:	ldr	x0, [sp, #40]
  42148c:	str	w1, [x0, #12]
  421490:	b	421510 <rule_line_add_token+0x688>
  421494:	ldr	x0, [sp, #88]
  421498:	ldrsb	w0, [x0]
  42149c:	cmp	w0, #0x26
  4214a0:	b.ne	4214bc <rule_line_add_token+0x634>  // b.any
  4214a4:	ldr	x0, [sp, #40]
  4214a8:	ldr	w0, [x0, #12]
  4214ac:	orr	w1, w0, #0x4
  4214b0:	ldr	x0, [sp, #40]
  4214b4:	str	w1, [x0, #12]
  4214b8:	b	421510 <rule_line_add_token+0x688>
  4214bc:	ldr	x0, [sp, #88]
  4214c0:	ldrsb	w0, [x0]
  4214c4:	cmp	w0, #0x19
  4214c8:	b.gt	4214fc <rule_line_add_token+0x674>
  4214cc:	strb	wzr, [sp, #55]
  4214d0:	ldr	x0, [sp, #88]
  4214d4:	ldrsb	w0, [x0]
  4214d8:	sub	w0, w0, #0x12
  4214dc:	cmp	w0, #0x6
  4214e0:	b.hi	4214ec <rule_line_add_token+0x664>  // b.pmore
  4214e4:	mov	w0, #0x1                   	// #1
  4214e8:	strb	w0, [sp, #55]
  4214ec:	nop
  4214f0:	ldrb	w0, [sp, #55]
  4214f4:	cmp	w0, #0x0
  4214f8:	b.eq	421510 <rule_line_add_token+0x688>  // b.none
  4214fc:	ldr	x0, [sp, #40]
  421500:	ldr	w0, [x0, #12]
  421504:	orr	w1, w0, #0x20
  421508:	ldr	x0, [sp, #40]
  42150c:	str	w1, [x0, #12]
  421510:	mov	w0, #0x0                   	// #0
  421514:	mov	w1, w0
  421518:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42151c:	ldr	x0, [x0, #4032]
  421520:	ldr	x2, [sp, #168]
  421524:	ldr	x0, [x0]
  421528:	eor	x0, x2, x0
  42152c:	cmp	x0, #0x0
  421530:	b.eq	421538 <rule_line_add_token+0x6b0>  // b.none
  421534:	bl	40b280 <__stack_chk_fail@plt>
  421538:	mov	w0, w1
  42153c:	ldp	x29, x30, [sp], #176
  421540:	ret

0000000000421544 <check_value_format_and_warn>:
  421544:	sub	sp, sp, #0x110
  421548:	stp	x29, x30, [sp, #64]
  42154c:	add	x29, sp, #0x40
  421550:	stp	x19, x20, [sp, #80]
  421554:	str	x21, [sp, #96]
  421558:	str	x0, [sp, #136]
  42155c:	str	x1, [sp, #128]
  421560:	str	x2, [sp, #120]
  421564:	strb	w3, [sp, #119]
  421568:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42156c:	ldr	x0, [x0, #4032]
  421570:	ldr	x1, [x0]
  421574:	str	x1, [sp, #264]
  421578:	mov	x1, #0x0                   	// #0
  42157c:	ldrb	w0, [sp, #119]
  421580:	cmp	w0, #0x0
  421584:	b.eq	42171c <check_value_format_and_warn+0x1d8>  // b.none
  421588:	ldr	x0, [sp, #120]
  42158c:	bl	41fb70 <isempty>
  421590:	and	w0, w0, #0xff
  421594:	cmp	w0, #0x0
  421598:	b.eq	42171c <check_value_format_and_warn+0x1d8>  // b.none
  42159c:	ldr	x0, [sp, #136]
  4215a0:	str	x0, [sp, #184]
  4215a4:	ldr	x0, [sp, #184]
  4215a8:	cmp	x0, #0x0
  4215ac:	b.eq	4215bc <check_value_format_and_warn+0x78>  // b.none
  4215b0:	ldr	x0, [sp, #184]
  4215b4:	ldr	x0, [x0, #32]
  4215b8:	b	4215c0 <check_value_format_and_warn+0x7c>
  4215bc:	mov	x0, #0x0                   	// #0
  4215c0:	str	x0, [sp, #192]
  4215c4:	ldr	x0, [sp, #192]
  4215c8:	cmp	x0, #0x0
  4215cc:	b.eq	4215dc <check_value_format_and_warn+0x98>  // b.none
  4215d0:	ldr	x0, [sp, #192]
  4215d4:	ldr	x0, [x0, #8]
  4215d8:	b	4215e0 <check_value_format_and_warn+0x9c>
  4215dc:	mov	x0, #0x0                   	// #0
  4215e0:	str	x0, [sp, #200]
  4215e4:	ldr	x0, [sp, #192]
  4215e8:	cmp	x0, #0x0
  4215ec:	b.eq	4215fc <check_value_format_and_warn+0xb8>  // b.none
  4215f0:	ldr	x0, [sp, #192]
  4215f4:	ldr	x0, [x0]
  4215f8:	b	421600 <check_value_format_and_warn+0xbc>
  4215fc:	mov	x0, #0x0                   	// #0
  421600:	str	x0, [sp, #208]
  421604:	str	xzr, [sp, #176]
  421608:	str	xzr, [sp, #216]
  42160c:	mov	w0, #0x3                   	// #3
  421610:	str	w0, [sp, #144]
  421614:	mov	w0, #0x16                  	// #22
  421618:	movk	w0, #0x4000, lsl #16
  42161c:	str	w0, [sp, #148]
  421620:	ldr	x0, [sp, #216]
  421624:	cmp	x0, #0x0
  421628:	b.eq	421664 <check_value_format_and_warn+0x120>  // b.none
  42162c:	mov	w0, #0x1                   	// #1
  421630:	bl	40be30 <log_get_max_level_realm@plt>
  421634:	mov	w1, w0
  421638:	ldr	w0, [sp, #144]
  42163c:	cmp	w0, w1
  421640:	cset	w0, le
  421644:	and	w0, w0, #0xff
  421648:	and	x0, x0, #0xff
  42164c:	cmp	x0, #0x0
  421650:	b.eq	421664 <check_value_format_and_warn+0x120>  // b.none
  421654:	add	x0, sp, #0xb0
  421658:	mov	x1, x0
  42165c:	ldr	x0, [sp, #216]
  421660:	bl	40aba0 <sd_device_get_sysname@plt>
  421664:	adrp	x0, 454000 <__func__.10675+0xa0>
  421668:	add	x20, x0, #0xbb
  42166c:	ldr	x0, [sp, #176]
  421670:	cmp	x0, #0x0
  421674:	b.eq	421684 <check_value_format_and_warn+0x140>  // b.none
  421678:	adrp	x0, 454000 <__func__.10675+0xa0>
  42167c:	add	x19, x0, #0xd8
  421680:	b	421688 <check_value_format_and_warn+0x144>
  421684:	mov	x19, #0x0                   	// #0
  421688:	ldr	x21, [sp, #176]
  42168c:	ldr	x0, [sp, #208]
  421690:	bl	41fb4c <strna>
  421694:	mov	x2, x0
  421698:	ldr	x0, [sp, #200]
  42169c:	cmp	x0, #0x0
  4216a0:	b.eq	4216b0 <check_value_format_and_warn+0x16c>  // b.none
  4216a4:	ldr	x0, [sp, #200]
  4216a8:	ldr	w0, [x0, #8]
  4216ac:	b	4216b4 <check_value_format_and_warn+0x170>
  4216b0:	mov	w0, #0x0                   	// #0
  4216b4:	adrp	x1, 454000 <__func__.10675+0xa0>
  4216b8:	add	x1, x1, #0x218
  4216bc:	str	x1, [sp, #56]
  4216c0:	str	xzr, [sp, #48]
  4216c4:	ldr	x1, [sp, #128]
  4216c8:	str	x1, [sp, #40]
  4216cc:	ldr	x1, [sp, #120]
  4216d0:	str	x1, [sp, #32]
  4216d4:	str	w0, [sp, #24]
  4216d8:	str	x2, [sp, #16]
  4216dc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4216e0:	add	x0, x0, #0x228
  4216e4:	str	x0, [sp, #8]
  4216e8:	str	xzr, [sp]
  4216ec:	mov	x7, #0x0                   	// #0
  4216f0:	mov	x6, x21
  4216f4:	mov	x5, x19
  4216f8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4216fc:	add	x4, x0, #0x8d0
  421700:	mov	w3, #0x207                 	// #519
  421704:	mov	x2, x20
  421708:	ldr	w1, [sp, #148]
  42170c:	ldr	w0, [sp, #144]
  421710:	bl	40b020 <log_object_internal@plt>
  421714:	nop
  421718:	b	4218b8 <check_value_format_and_warn+0x374>
  42171c:	add	x1, sp, #0xa8
  421720:	add	x0, sp, #0xa0
  421724:	mov	x2, x1
  421728:	mov	x1, x0
  42172c:	ldr	x0, [sp, #120]
  421730:	bl	418ac8 <udev_check_format>
  421734:	cmp	w0, #0x0
  421738:	b.ge	4218b8 <check_value_format_and_warn+0x374>  // b.tcont
  42173c:	ldr	x0, [sp, #136]
  421740:	str	x0, [sp, #224]
  421744:	ldr	x0, [sp, #224]
  421748:	cmp	x0, #0x0
  42174c:	b.eq	42175c <check_value_format_and_warn+0x218>  // b.none
  421750:	ldr	x0, [sp, #224]
  421754:	ldr	x0, [x0, #32]
  421758:	b	421760 <check_value_format_and_warn+0x21c>
  42175c:	mov	x0, #0x0                   	// #0
  421760:	str	x0, [sp, #232]
  421764:	ldr	x0, [sp, #232]
  421768:	cmp	x0, #0x0
  42176c:	b.eq	42177c <check_value_format_and_warn+0x238>  // b.none
  421770:	ldr	x0, [sp, #232]
  421774:	ldr	x0, [x0, #8]
  421778:	b	421780 <check_value_format_and_warn+0x23c>
  42177c:	mov	x0, #0x0                   	// #0
  421780:	str	x0, [sp, #240]
  421784:	ldr	x0, [sp, #232]
  421788:	cmp	x0, #0x0
  42178c:	b.eq	42179c <check_value_format_and_warn+0x258>  // b.none
  421790:	ldr	x0, [sp, #232]
  421794:	ldr	x0, [x0]
  421798:	b	4217a0 <check_value_format_and_warn+0x25c>
  42179c:	mov	x0, #0x0                   	// #0
  4217a0:	str	x0, [sp, #248]
  4217a4:	str	xzr, [sp, #176]
  4217a8:	str	xzr, [sp, #256]
  4217ac:	mov	w0, #0x3                   	// #3
  4217b0:	str	w0, [sp, #152]
  4217b4:	mov	w0, #0x16                  	// #22
  4217b8:	movk	w0, #0x4000, lsl #16
  4217bc:	str	w0, [sp, #156]
  4217c0:	ldr	x0, [sp, #256]
  4217c4:	cmp	x0, #0x0
  4217c8:	b.eq	421804 <check_value_format_and_warn+0x2c0>  // b.none
  4217cc:	mov	w0, #0x1                   	// #1
  4217d0:	bl	40be30 <log_get_max_level_realm@plt>
  4217d4:	mov	w1, w0
  4217d8:	ldr	w0, [sp, #152]
  4217dc:	cmp	w0, w1
  4217e0:	cset	w0, le
  4217e4:	and	w0, w0, #0xff
  4217e8:	and	x0, x0, #0xff
  4217ec:	cmp	x0, #0x0
  4217f0:	b.eq	421804 <check_value_format_and_warn+0x2c0>  // b.none
  4217f4:	add	x0, sp, #0xb0
  4217f8:	mov	x1, x0
  4217fc:	ldr	x0, [sp, #256]
  421800:	bl	40aba0 <sd_device_get_sysname@plt>
  421804:	adrp	x0, 454000 <__func__.10675+0xa0>
  421808:	add	x20, x0, #0xbb
  42180c:	ldr	x0, [sp, #176]
  421810:	cmp	x0, #0x0
  421814:	b.eq	421824 <check_value_format_and_warn+0x2e0>  // b.none
  421818:	adrp	x0, 454000 <__func__.10675+0xa0>
  42181c:	add	x19, x0, #0xd8
  421820:	b	421828 <check_value_format_and_warn+0x2e4>
  421824:	mov	x19, #0x0                   	// #0
  421828:	ldr	x21, [sp, #176]
  42182c:	ldr	x0, [sp, #248]
  421830:	bl	41fb4c <strna>
  421834:	mov	x3, x0
  421838:	ldr	x0, [sp, #240]
  42183c:	cmp	x0, #0x0
  421840:	b.eq	421850 <check_value_format_and_warn+0x30c>  // b.none
  421844:	ldr	x0, [sp, #240]
  421848:	ldr	w0, [x0, #8]
  42184c:	b	421854 <check_value_format_and_warn+0x310>
  421850:	mov	w0, #0x0                   	// #0
  421854:	ldr	x1, [sp, #160]
  421858:	add	x1, x1, #0x1
  42185c:	ldr	x2, [sp, #168]
  421860:	str	x2, [sp, #56]
  421864:	str	x1, [sp, #48]
  421868:	ldr	x1, [sp, #128]
  42186c:	str	x1, [sp, #40]
  421870:	ldr	x1, [sp, #120]
  421874:	str	x1, [sp, #32]
  421878:	str	w0, [sp, #24]
  42187c:	str	x3, [sp, #16]
  421880:	adrp	x0, 454000 <__func__.10675+0xa0>
  421884:	add	x0, x0, #0x228
  421888:	str	x0, [sp, #8]
  42188c:	str	xzr, [sp]
  421890:	mov	x7, #0x0                   	// #0
  421894:	mov	x6, x21
  421898:	mov	x5, x19
  42189c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4218a0:	add	x4, x0, #0x8d0
  4218a4:	mov	w3, #0x209                 	// #521
  4218a8:	mov	x2, x20
  4218ac:	ldr	w1, [sp, #156]
  4218b0:	ldr	w0, [sp, #152]
  4218b4:	bl	40b020 <log_object_internal@plt>
  4218b8:	nop
  4218bc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4218c0:	ldr	x0, [x0, #4032]
  4218c4:	ldr	x1, [sp, #264]
  4218c8:	ldr	x0, [x0]
  4218cc:	eor	x0, x1, x0
  4218d0:	cmp	x0, #0x0
  4218d4:	b.eq	4218dc <check_value_format_and_warn+0x398>  // b.none
  4218d8:	bl	40b280 <__stack_chk_fail@plt>
  4218dc:	ldp	x19, x20, [sp, #80]
  4218e0:	ldr	x21, [sp, #96]
  4218e4:	ldp	x29, x30, [sp, #64]
  4218e8:	add	sp, sp, #0x110
  4218ec:	ret

00000000004218f0 <check_attr_format_and_warn>:
  4218f0:	sub	sp, sp, #0x110
  4218f4:	stp	x29, x30, [sp, #64]
  4218f8:	add	x29, sp, #0x40
  4218fc:	stp	x19, x20, [sp, #80]
  421900:	str	x21, [sp, #96]
  421904:	str	x0, [sp, #136]
  421908:	str	x1, [sp, #128]
  42190c:	str	x2, [sp, #120]
  421910:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  421914:	ldr	x0, [x0, #4032]
  421918:	ldr	x1, [x0]
  42191c:	str	x1, [sp, #264]
  421920:	mov	x1, #0x0                   	// #0
  421924:	ldr	x0, [sp, #120]
  421928:	bl	41fb70 <isempty>
  42192c:	and	w0, w0, #0xff
  421930:	cmp	w0, #0x0
  421934:	b.eq	421aa8 <check_attr_format_and_warn+0x1b8>  // b.none
  421938:	ldr	x0, [sp, #136]
  42193c:	str	x0, [sp, #224]
  421940:	ldr	x0, [sp, #224]
  421944:	cmp	x0, #0x0
  421948:	b.eq	421958 <check_attr_format_and_warn+0x68>  // b.none
  42194c:	ldr	x0, [sp, #224]
  421950:	ldr	x0, [x0, #32]
  421954:	b	42195c <check_attr_format_and_warn+0x6c>
  421958:	mov	x0, #0x0                   	// #0
  42195c:	str	x0, [sp, #232]
  421960:	ldr	x0, [sp, #232]
  421964:	cmp	x0, #0x0
  421968:	b.eq	421978 <check_attr_format_and_warn+0x88>  // b.none
  42196c:	ldr	x0, [sp, #232]
  421970:	ldr	x0, [x0, #8]
  421974:	b	42197c <check_attr_format_and_warn+0x8c>
  421978:	mov	x0, #0x0                   	// #0
  42197c:	str	x0, [sp, #240]
  421980:	ldr	x0, [sp, #232]
  421984:	cmp	x0, #0x0
  421988:	b.eq	421998 <check_attr_format_and_warn+0xa8>  // b.none
  42198c:	ldr	x0, [sp, #232]
  421990:	ldr	x0, [x0]
  421994:	b	42199c <check_attr_format_and_warn+0xac>
  421998:	mov	x0, #0x0                   	// #0
  42199c:	str	x0, [sp, #248]
  4219a0:	str	xzr, [sp, #176]
  4219a4:	str	xzr, [sp, #256]
  4219a8:	mov	w0, #0x3                   	// #3
  4219ac:	str	w0, [sp, #152]
  4219b0:	mov	w0, #0x16                  	// #22
  4219b4:	movk	w0, #0x4000, lsl #16
  4219b8:	str	w0, [sp, #156]
  4219bc:	ldr	x0, [sp, #256]
  4219c0:	cmp	x0, #0x0
  4219c4:	b.eq	421a00 <check_attr_format_and_warn+0x110>  // b.none
  4219c8:	mov	w0, #0x1                   	// #1
  4219cc:	bl	40be30 <log_get_max_level_realm@plt>
  4219d0:	mov	w1, w0
  4219d4:	ldr	w0, [sp, #152]
  4219d8:	cmp	w0, w1
  4219dc:	cset	w0, le
  4219e0:	and	w0, w0, #0xff
  4219e4:	and	x0, x0, #0xff
  4219e8:	cmp	x0, #0x0
  4219ec:	b.eq	421a00 <check_attr_format_and_warn+0x110>  // b.none
  4219f0:	add	x0, sp, #0xb0
  4219f4:	mov	x1, x0
  4219f8:	ldr	x0, [sp, #256]
  4219fc:	bl	40aba0 <sd_device_get_sysname@plt>
  421a00:	adrp	x0, 454000 <__func__.10675+0xa0>
  421a04:	add	x20, x0, #0xbb
  421a08:	ldr	x0, [sp, #176]
  421a0c:	cmp	x0, #0x0
  421a10:	b.eq	421a20 <check_attr_format_and_warn+0x130>  // b.none
  421a14:	adrp	x0, 454000 <__func__.10675+0xa0>
  421a18:	add	x19, x0, #0xd8
  421a1c:	b	421a24 <check_attr_format_and_warn+0x134>
  421a20:	mov	x19, #0x0                   	// #0
  421a24:	ldr	x21, [sp, #176]
  421a28:	ldr	x0, [sp, #248]
  421a2c:	bl	41fb4c <strna>
  421a30:	mov	x2, x0
  421a34:	ldr	x0, [sp, #240]
  421a38:	cmp	x0, #0x0
  421a3c:	b.eq	421a4c <check_attr_format_and_warn+0x15c>  // b.none
  421a40:	ldr	x0, [sp, #240]
  421a44:	ldr	w0, [x0, #8]
  421a48:	b	421a50 <check_attr_format_and_warn+0x160>
  421a4c:	mov	w0, #0x0                   	// #0
  421a50:	ldr	x1, [sp, #128]
  421a54:	str	x1, [sp, #40]
  421a58:	adrp	x1, 454000 <__func__.10675+0xa0>
  421a5c:	add	x1, x1, #0x278
  421a60:	str	x1, [sp, #32]
  421a64:	str	w0, [sp, #24]
  421a68:	str	x2, [sp, #16]
  421a6c:	adrp	x0, 454000 <__func__.10675+0xa0>
  421a70:	add	x0, x0, #0x288
  421a74:	str	x0, [sp, #8]
  421a78:	str	xzr, [sp]
  421a7c:	mov	x7, #0x0                   	// #0
  421a80:	mov	x6, x21
  421a84:	mov	x5, x19
  421a88:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421a8c:	add	x4, x0, #0x8f0
  421a90:	mov	w3, #0x211                 	// #529
  421a94:	mov	x2, x20
  421a98:	ldr	w1, [sp, #156]
  421a9c:	ldr	w0, [sp, #152]
  421aa0:	bl	40b020 <log_object_internal@plt>
  421aa4:	b	421c48 <check_attr_format_and_warn+0x358>
  421aa8:	add	x1, sp, #0xa8
  421aac:	add	x0, sp, #0xa0
  421ab0:	mov	x2, x1
  421ab4:	mov	x1, x0
  421ab8:	ldr	x0, [sp, #120]
  421abc:	bl	418ac8 <udev_check_format>
  421ac0:	cmp	w0, #0x0
  421ac4:	b.ge	421c44 <check_attr_format_and_warn+0x354>  // b.tcont
  421ac8:	ldr	x0, [sp, #136]
  421acc:	str	x0, [sp, #184]
  421ad0:	ldr	x0, [sp, #184]
  421ad4:	cmp	x0, #0x0
  421ad8:	b.eq	421ae8 <check_attr_format_and_warn+0x1f8>  // b.none
  421adc:	ldr	x0, [sp, #184]
  421ae0:	ldr	x0, [x0, #32]
  421ae4:	b	421aec <check_attr_format_and_warn+0x1fc>
  421ae8:	mov	x0, #0x0                   	// #0
  421aec:	str	x0, [sp, #192]
  421af0:	ldr	x0, [sp, #192]
  421af4:	cmp	x0, #0x0
  421af8:	b.eq	421b08 <check_attr_format_and_warn+0x218>  // b.none
  421afc:	ldr	x0, [sp, #192]
  421b00:	ldr	x0, [x0, #8]
  421b04:	b	421b0c <check_attr_format_and_warn+0x21c>
  421b08:	mov	x0, #0x0                   	// #0
  421b0c:	str	x0, [sp, #200]
  421b10:	ldr	x0, [sp, #192]
  421b14:	cmp	x0, #0x0
  421b18:	b.eq	421b28 <check_attr_format_and_warn+0x238>  // b.none
  421b1c:	ldr	x0, [sp, #192]
  421b20:	ldr	x0, [x0]
  421b24:	b	421b2c <check_attr_format_and_warn+0x23c>
  421b28:	mov	x0, #0x0                   	// #0
  421b2c:	str	x0, [sp, #208]
  421b30:	str	xzr, [sp, #176]
  421b34:	str	xzr, [sp, #216]
  421b38:	mov	w0, #0x3                   	// #3
  421b3c:	str	w0, [sp, #144]
  421b40:	mov	w0, #0x16                  	// #22
  421b44:	movk	w0, #0x4000, lsl #16
  421b48:	str	w0, [sp, #148]
  421b4c:	ldr	x0, [sp, #216]
  421b50:	cmp	x0, #0x0
  421b54:	b.eq	421b90 <check_attr_format_and_warn+0x2a0>  // b.none
  421b58:	mov	w0, #0x1                   	// #1
  421b5c:	bl	40be30 <log_get_max_level_realm@plt>
  421b60:	mov	w1, w0
  421b64:	ldr	w0, [sp, #144]
  421b68:	cmp	w0, w1
  421b6c:	cset	w0, le
  421b70:	and	w0, w0, #0xff
  421b74:	and	x0, x0, #0xff
  421b78:	cmp	x0, #0x0
  421b7c:	b.eq	421b90 <check_attr_format_and_warn+0x2a0>  // b.none
  421b80:	add	x0, sp, #0xb0
  421b84:	mov	x1, x0
  421b88:	ldr	x0, [sp, #216]
  421b8c:	bl	40aba0 <sd_device_get_sysname@plt>
  421b90:	adrp	x0, 454000 <__func__.10675+0xa0>
  421b94:	add	x20, x0, #0xbb
  421b98:	ldr	x0, [sp, #176]
  421b9c:	cmp	x0, #0x0
  421ba0:	b.eq	421bb0 <check_attr_format_and_warn+0x2c0>  // b.none
  421ba4:	adrp	x0, 454000 <__func__.10675+0xa0>
  421ba8:	add	x19, x0, #0xd8
  421bac:	b	421bb4 <check_attr_format_and_warn+0x2c4>
  421bb0:	mov	x19, #0x0                   	// #0
  421bb4:	ldr	x21, [sp, #176]
  421bb8:	ldr	x0, [sp, #208]
  421bbc:	bl	41fb4c <strna>
  421bc0:	mov	x3, x0
  421bc4:	ldr	x0, [sp, #200]
  421bc8:	cmp	x0, #0x0
  421bcc:	b.eq	421bdc <check_attr_format_and_warn+0x2ec>  // b.none
  421bd0:	ldr	x0, [sp, #200]
  421bd4:	ldr	w0, [x0, #8]
  421bd8:	b	421be0 <check_attr_format_and_warn+0x2f0>
  421bdc:	mov	w0, #0x0                   	// #0
  421be0:	ldr	x1, [sp, #160]
  421be4:	add	x1, x1, #0x1
  421be8:	ldr	x2, [sp, #168]
  421bec:	str	x2, [sp, #56]
  421bf0:	str	x1, [sp, #48]
  421bf4:	ldr	x1, [sp, #128]
  421bf8:	str	x1, [sp, #40]
  421bfc:	ldr	x1, [sp, #120]
  421c00:	str	x1, [sp, #32]
  421c04:	str	w0, [sp, #24]
  421c08:	str	x3, [sp, #16]
  421c0c:	adrp	x0, 454000 <__func__.10675+0xa0>
  421c10:	add	x0, x0, #0x2a8
  421c14:	str	x0, [sp, #8]
  421c18:	str	xzr, [sp]
  421c1c:	mov	x7, #0x0                   	// #0
  421c20:	mov	x6, x21
  421c24:	mov	x5, x19
  421c28:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421c2c:	add	x4, x0, #0x8f0
  421c30:	mov	w3, #0x213                 	// #531
  421c34:	mov	x2, x20
  421c38:	ldr	w1, [sp, #148]
  421c3c:	ldr	w0, [sp, #144]
  421c40:	bl	40b020 <log_object_internal@plt>
  421c44:	mov	w0, #0x0                   	// #0
  421c48:	mov	w1, w0
  421c4c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  421c50:	ldr	x0, [x0, #4032]
  421c54:	ldr	x2, [sp, #264]
  421c58:	ldr	x0, [x0]
  421c5c:	eor	x0, x2, x0
  421c60:	cmp	x0, #0x0
  421c64:	b.eq	421c6c <check_attr_format_and_warn+0x37c>  // b.none
  421c68:	bl	40b280 <__stack_chk_fail@plt>
  421c6c:	mov	w0, w1
  421c70:	ldp	x19, x20, [sp, #80]
  421c74:	ldr	x21, [sp, #96]
  421c78:	ldp	x29, x30, [sp, #64]
  421c7c:	add	sp, sp, #0x110
  421c80:	ret

0000000000421c84 <parse_token>:
  421c84:	mov	x12, #0x10f0                	// #4336
  421c88:	sub	sp, sp, x12
  421c8c:	stp	x29, x30, [sp, #48]
  421c90:	add	x29, sp, #0x30
  421c94:	stp	x19, x20, [sp, #64]
  421c98:	str	x21, [sp, #80]
  421c9c:	str	x0, [sp, #136]
  421ca0:	str	x1, [sp, #128]
  421ca4:	str	x2, [sp, #120]
  421ca8:	str	w3, [sp, #116]
  421cac:	str	x4, [sp, #104]
  421cb0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  421cb4:	ldr	x0, [x0, #4032]
  421cb8:	ldr	x1, [x0]
  421cbc:	str	x1, [sp, #4328]
  421cc0:	mov	x1, #0x0                   	// #0
  421cc4:	strb	wzr, [sp, #144]
  421cc8:	ldr	w0, [sp, #116]
  421ccc:	cmp	w0, #0x1
  421cd0:	b.hi	421cdc <parse_token+0x58>  // b.pmore
  421cd4:	mov	w0, #0x1                   	// #1
  421cd8:	strb	w0, [sp, #144]
  421cdc:	nop
  421ce0:	ldrb	w0, [sp, #144]
  421ce4:	strb	w0, [sp, #147]
  421ce8:	ldr	x0, [sp, #136]
  421cec:	cmp	x0, #0x0
  421cf0:	cset	w0, eq  // eq = none
  421cf4:	and	w0, w0, #0xff
  421cf8:	and	x0, x0, #0xff
  421cfc:	cmp	x0, #0x0
  421d00:	b.eq	421d2c <parse_token+0xa8>  // b.none
  421d04:	adrp	x0, 454000 <__func__.10675+0xa0>
  421d08:	add	x1, x0, #0xbb
  421d0c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421d10:	add	x4, x0, #0x910
  421d14:	mov	w3, #0x21c                 	// #540
  421d18:	mov	x2, x1
  421d1c:	adrp	x0, 454000 <__func__.10675+0xa0>
  421d20:	add	x1, x0, #0x158
  421d24:	mov	w0, #0x1                   	// #1
  421d28:	bl	40abb0 <log_assert_failed_realm@plt>
  421d2c:	ldr	x0, [sp, #136]
  421d30:	ldr	x0, [x0, #32]
  421d34:	cmp	x0, #0x0
  421d38:	cset	w0, eq  // eq = none
  421d3c:	and	w0, w0, #0xff
  421d40:	and	x0, x0, #0xff
  421d44:	cmp	x0, #0x0
  421d48:	b.eq	421d74 <parse_token+0xf0>  // b.none
  421d4c:	adrp	x0, 454000 <__func__.10675+0xa0>
  421d50:	add	x1, x0, #0xbb
  421d54:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421d58:	add	x4, x0, #0x910
  421d5c:	mov	w3, #0x21d                 	// #541
  421d60:	mov	x2, x1
  421d64:	adrp	x0, 454000 <__func__.10675+0xa0>
  421d68:	add	x1, x0, #0x300
  421d6c:	mov	w0, #0x1                   	// #1
  421d70:	bl	40abb0 <log_assert_failed_realm@plt>
  421d74:	ldr	x0, [sp, #136]
  421d78:	ldr	x0, [x0, #32]
  421d7c:	ldr	x0, [x0, #8]
  421d80:	cmp	x0, #0x0
  421d84:	cset	w0, eq  // eq = none
  421d88:	and	w0, w0, #0xff
  421d8c:	and	x0, x0, #0xff
  421d90:	cmp	x0, #0x0
  421d94:	b.eq	421dc0 <parse_token+0x13c>  // b.none
  421d98:	adrp	x0, 454000 <__func__.10675+0xa0>
  421d9c:	add	x1, x0, #0xbb
  421da0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421da4:	add	x4, x0, #0x910
  421da8:	mov	w3, #0x21e                 	// #542
  421dac:	mov	x2, x1
  421db0:	adrp	x0, 454000 <__func__.10675+0xa0>
  421db4:	add	x1, x0, #0x318
  421db8:	mov	w0, #0x1                   	// #1
  421dbc:	bl	40abb0 <log_assert_failed_realm@plt>
  421dc0:	ldr	x0, [sp, #128]
  421dc4:	cmp	x0, #0x0
  421dc8:	cset	w0, eq  // eq = none
  421dcc:	and	w0, w0, #0xff
  421dd0:	and	x0, x0, #0xff
  421dd4:	cmp	x0, #0x0
  421dd8:	b.eq	421e04 <parse_token+0x180>  // b.none
  421ddc:	adrp	x0, 454000 <__func__.10675+0xa0>
  421de0:	add	x1, x0, #0xbb
  421de4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421de8:	add	x4, x0, #0x910
  421dec:	mov	w3, #0x21f                 	// #543
  421df0:	mov	x2, x1
  421df4:	adrp	x0, 454000 <__func__.10675+0xa0>
  421df8:	add	x1, x0, #0x340
  421dfc:	mov	w0, #0x1                   	// #1
  421e00:	bl	40abb0 <log_assert_failed_realm@plt>
  421e04:	ldr	x0, [sp, #104]
  421e08:	cmp	x0, #0x0
  421e0c:	cset	w0, eq  // eq = none
  421e10:	and	w0, w0, #0xff
  421e14:	and	x0, x0, #0xff
  421e18:	cmp	x0, #0x0
  421e1c:	b.eq	421e48 <parse_token+0x1c4>  // b.none
  421e20:	adrp	x0, 454000 <__func__.10675+0xa0>
  421e24:	add	x1, x0, #0xbb
  421e28:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421e2c:	add	x4, x0, #0x910
  421e30:	mov	w3, #0x220                 	// #544
  421e34:	mov	x2, x1
  421e38:	adrp	x0, 454000 <__func__.10675+0xa0>
  421e3c:	add	x1, x0, #0x1d8
  421e40:	mov	w0, #0x1                   	// #1
  421e44:	bl	40abb0 <log_assert_failed_realm@plt>
  421e48:	ldr	x0, [sp, #136]
  421e4c:	ldr	x0, [x0, #32]
  421e50:	ldr	x0, [x0, #8]
  421e54:	str	x0, [sp, #848]
  421e58:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  421e5c:	add	x1, x0, #0xf98
  421e60:	ldr	x0, [sp, #128]
  421e64:	bl	40b710 <strcmp@plt>
  421e68:	cmp	w0, #0x0
  421e6c:	b.ne	422190 <parse_token+0x50c>  // b.any
  421e70:	ldr	x0, [sp, #120]
  421e74:	cmp	x0, #0x0
  421e78:	b.eq	421fec <parse_token+0x368>  // b.none
  421e7c:	ldr	x0, [sp, #136]
  421e80:	str	x0, [sp, #4184]
  421e84:	ldr	x0, [sp, #4184]
  421e88:	cmp	x0, #0x0
  421e8c:	b.eq	421e9c <parse_token+0x218>  // b.none
  421e90:	ldr	x0, [sp, #4184]
  421e94:	ldr	x0, [x0, #32]
  421e98:	b	421ea0 <parse_token+0x21c>
  421e9c:	mov	x0, #0x0                   	// #0
  421ea0:	str	x0, [sp, #4192]
  421ea4:	ldr	x0, [sp, #4192]
  421ea8:	cmp	x0, #0x0
  421eac:	b.eq	421ebc <parse_token+0x238>  // b.none
  421eb0:	ldr	x0, [sp, #4192]
  421eb4:	ldr	x0, [x0, #8]
  421eb8:	b	421ec0 <parse_token+0x23c>
  421ebc:	mov	x0, #0x0                   	// #0
  421ec0:	str	x0, [sp, #4200]
  421ec4:	ldr	x0, [sp, #4192]
  421ec8:	cmp	x0, #0x0
  421ecc:	b.eq	421edc <parse_token+0x258>  // b.none
  421ed0:	ldr	x0, [sp, #4192]
  421ed4:	ldr	x0, [x0]
  421ed8:	b	421ee0 <parse_token+0x25c>
  421edc:	mov	x0, #0x0                   	// #0
  421ee0:	str	x0, [sp, #4208]
  421ee4:	str	xzr, [sp, #840]
  421ee8:	str	xzr, [sp, #4216]
  421eec:	mov	w0, #0x3                   	// #3
  421ef0:	str	w0, [sp, #832]
  421ef4:	mov	w0, #0x16                  	// #22
  421ef8:	movk	w0, #0x4000, lsl #16
  421efc:	str	w0, [sp, #836]
  421f00:	ldr	x0, [sp, #4216]
  421f04:	cmp	x0, #0x0
  421f08:	b.eq	421f44 <parse_token+0x2c0>  // b.none
  421f0c:	mov	w0, #0x1                   	// #1
  421f10:	bl	40be30 <log_get_max_level_realm@plt>
  421f14:	mov	w1, w0
  421f18:	ldr	w0, [sp, #832]
  421f1c:	cmp	w0, w1
  421f20:	cset	w0, le
  421f24:	and	w0, w0, #0xff
  421f28:	and	x0, x0, #0xff
  421f2c:	cmp	x0, #0x0
  421f30:	b.eq	421f44 <parse_token+0x2c0>  // b.none
  421f34:	add	x0, sp, #0x348
  421f38:	mov	x1, x0
  421f3c:	ldr	x0, [sp, #4216]
  421f40:	bl	40aba0 <sd_device_get_sysname@plt>
  421f44:	adrp	x0, 454000 <__func__.10675+0xa0>
  421f48:	add	x20, x0, #0xbb
  421f4c:	ldr	x0, [sp, #840]
  421f50:	cmp	x0, #0x0
  421f54:	b.eq	421f64 <parse_token+0x2e0>  // b.none
  421f58:	adrp	x0, 454000 <__func__.10675+0xa0>
  421f5c:	add	x19, x0, #0xd8
  421f60:	b	421f68 <parse_token+0x2e4>
  421f64:	mov	x19, #0x0                   	// #0
  421f68:	ldr	x21, [sp, #840]
  421f6c:	ldr	x0, [sp, #4208]
  421f70:	bl	41fb4c <strna>
  421f74:	mov	x2, x0
  421f78:	ldr	x0, [sp, #4200]
  421f7c:	cmp	x0, #0x0
  421f80:	b.eq	421f90 <parse_token+0x30c>  // b.none
  421f84:	ldr	x0, [sp, #4200]
  421f88:	ldr	w0, [x0, #8]
  421f8c:	b	421f94 <parse_token+0x310>
  421f90:	mov	w0, #0x0                   	// #0
  421f94:	ldr	x1, [sp, #128]
  421f98:	str	x1, [sp, #40]
  421f9c:	adrp	x1, 454000 <__func__.10675+0xa0>
  421fa0:	add	x1, x1, #0x278
  421fa4:	str	x1, [sp, #32]
  421fa8:	str	w0, [sp, #24]
  421fac:	str	x2, [sp, #16]
  421fb0:	adrp	x0, 454000 <__func__.10675+0xa0>
  421fb4:	add	x0, x0, #0x288
  421fb8:	str	x0, [sp, #8]
  421fbc:	str	xzr, [sp]
  421fc0:	mov	x7, #0x0                   	// #0
  421fc4:	mov	x6, x21
  421fc8:	mov	x5, x19
  421fcc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  421fd0:	add	x4, x0, #0x920
  421fd4:	mov	w3, #0x226                 	// #550
  421fd8:	mov	x2, x20
  421fdc:	ldr	w1, [sp, #836]
  421fe0:	ldr	w0, [sp, #832]
  421fe4:	bl	40b020 <log_object_internal@plt>
  421fe8:	b	42a9c0 <parse_token+0x8d3c>
  421fec:	ldrb	w0, [sp, #147]
  421ff0:	eor	w0, w0, #0x1
  421ff4:	and	w0, w0, #0xff
  421ff8:	cmp	w0, #0x0
  421ffc:	b.eq	422170 <parse_token+0x4ec>  // b.none
  422000:	ldr	x0, [sp, #136]
  422004:	str	x0, [sp, #4144]
  422008:	ldr	x0, [sp, #4144]
  42200c:	cmp	x0, #0x0
  422010:	b.eq	422020 <parse_token+0x39c>  // b.none
  422014:	ldr	x0, [sp, #4144]
  422018:	ldr	x0, [x0, #32]
  42201c:	b	422024 <parse_token+0x3a0>
  422020:	mov	x0, #0x0                   	// #0
  422024:	str	x0, [sp, #4152]
  422028:	ldr	x0, [sp, #4152]
  42202c:	cmp	x0, #0x0
  422030:	b.eq	422040 <parse_token+0x3bc>  // b.none
  422034:	ldr	x0, [sp, #4152]
  422038:	ldr	x0, [x0, #8]
  42203c:	b	422044 <parse_token+0x3c0>
  422040:	mov	x0, #0x0                   	// #0
  422044:	str	x0, [sp, #4160]
  422048:	ldr	x0, [sp, #4152]
  42204c:	cmp	x0, #0x0
  422050:	b.eq	422060 <parse_token+0x3dc>  // b.none
  422054:	ldr	x0, [sp, #4152]
  422058:	ldr	x0, [x0]
  42205c:	b	422064 <parse_token+0x3e0>
  422060:	mov	x0, #0x0                   	// #0
  422064:	str	x0, [sp, #4168]
  422068:	str	xzr, [sp, #840]
  42206c:	str	xzr, [sp, #4176]
  422070:	mov	w0, #0x3                   	// #3
  422074:	str	w0, [sp, #824]
  422078:	mov	w0, #0x16                  	// #22
  42207c:	movk	w0, #0x4000, lsl #16
  422080:	str	w0, [sp, #828]
  422084:	ldr	x0, [sp, #4176]
  422088:	cmp	x0, #0x0
  42208c:	b.eq	4220c8 <parse_token+0x444>  // b.none
  422090:	mov	w0, #0x1                   	// #1
  422094:	bl	40be30 <log_get_max_level_realm@plt>
  422098:	mov	w1, w0
  42209c:	ldr	w0, [sp, #824]
  4220a0:	cmp	w0, w1
  4220a4:	cset	w0, le
  4220a8:	and	w0, w0, #0xff
  4220ac:	and	x0, x0, #0xff
  4220b0:	cmp	x0, #0x0
  4220b4:	b.eq	4220c8 <parse_token+0x444>  // b.none
  4220b8:	add	x0, sp, #0x348
  4220bc:	mov	x1, x0
  4220c0:	ldr	x0, [sp, #4176]
  4220c4:	bl	40aba0 <sd_device_get_sysname@plt>
  4220c8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4220cc:	add	x20, x0, #0xbb
  4220d0:	ldr	x0, [sp, #840]
  4220d4:	cmp	x0, #0x0
  4220d8:	b.eq	4220e8 <parse_token+0x464>  // b.none
  4220dc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4220e0:	add	x19, x0, #0xd8
  4220e4:	b	4220ec <parse_token+0x468>
  4220e8:	mov	x19, #0x0                   	// #0
  4220ec:	ldr	x21, [sp, #840]
  4220f0:	ldr	x0, [sp, #4168]
  4220f4:	bl	41fb4c <strna>
  4220f8:	mov	x2, x0
  4220fc:	ldr	x0, [sp, #4160]
  422100:	cmp	x0, #0x0
  422104:	b.eq	422114 <parse_token+0x490>  // b.none
  422108:	ldr	x0, [sp, #4160]
  42210c:	ldr	w0, [x0, #8]
  422110:	b	422118 <parse_token+0x494>
  422114:	mov	w0, #0x0                   	// #0
  422118:	ldr	x1, [sp, #128]
  42211c:	str	x1, [sp, #40]
  422120:	adrp	x1, 454000 <__func__.10675+0xa0>
  422124:	add	x1, x1, #0x348
  422128:	str	x1, [sp, #32]
  42212c:	str	w0, [sp, #24]
  422130:	str	x2, [sp, #16]
  422134:	adrp	x0, 454000 <__func__.10675+0xa0>
  422138:	add	x0, x0, #0x288
  42213c:	str	x0, [sp, #8]
  422140:	str	xzr, [sp]
  422144:	mov	x7, #0x0                   	// #0
  422148:	mov	x6, x21
  42214c:	mov	x5, x19
  422150:	adrp	x0, 455000 <__func__.10675+0x10a0>
  422154:	add	x4, x0, #0x920
  422158:	mov	w3, #0x228                 	// #552
  42215c:	mov	x2, x20
  422160:	ldr	w1, [sp, #828]
  422164:	ldr	w0, [sp, #824]
  422168:	bl	40b020 <log_object_internal@plt>
  42216c:	b	42a9c0 <parse_token+0x8d3c>
  422170:	mov	x4, #0x0                   	// #0
  422174:	ldr	x3, [sp, #104]
  422178:	ldr	w2, [sp, #116]
  42217c:	mov	w1, #0x0                   	// #0
  422180:	ldr	x0, [sp, #848]
  422184:	bl	420e88 <rule_line_add_token>
  422188:	str	w0, [sp, #152]
  42218c:	b	42a990 <parse_token+0x8d0c>
  422190:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  422194:	add	x1, x0, #0xfb8
  422198:	ldr	x0, [sp, #128]
  42219c:	bl	40b710 <strcmp@plt>
  4221a0:	cmp	w0, #0x0
  4221a4:	b.ne	4224c8 <parse_token+0x844>  // b.any
  4221a8:	ldr	x0, [sp, #120]
  4221ac:	cmp	x0, #0x0
  4221b0:	b.eq	422324 <parse_token+0x6a0>  // b.none
  4221b4:	ldr	x0, [sp, #136]
  4221b8:	str	x0, [sp, #4104]
  4221bc:	ldr	x0, [sp, #4104]
  4221c0:	cmp	x0, #0x0
  4221c4:	b.eq	4221d4 <parse_token+0x550>  // b.none
  4221c8:	ldr	x0, [sp, #4104]
  4221cc:	ldr	x0, [x0, #32]
  4221d0:	b	4221d8 <parse_token+0x554>
  4221d4:	mov	x0, #0x0                   	// #0
  4221d8:	str	x0, [sp, #4112]
  4221dc:	ldr	x0, [sp, #4112]
  4221e0:	cmp	x0, #0x0
  4221e4:	b.eq	4221f4 <parse_token+0x570>  // b.none
  4221e8:	ldr	x0, [sp, #4112]
  4221ec:	ldr	x0, [x0, #8]
  4221f0:	b	4221f8 <parse_token+0x574>
  4221f4:	mov	x0, #0x0                   	// #0
  4221f8:	str	x0, [sp, #4120]
  4221fc:	ldr	x0, [sp, #4112]
  422200:	cmp	x0, #0x0
  422204:	b.eq	422214 <parse_token+0x590>  // b.none
  422208:	ldr	x0, [sp, #4112]
  42220c:	ldr	x0, [x0]
  422210:	b	422218 <parse_token+0x594>
  422214:	mov	x0, #0x0                   	// #0
  422218:	str	x0, [sp, #4128]
  42221c:	str	xzr, [sp, #840]
  422220:	str	xzr, [sp, #4136]
  422224:	mov	w0, #0x3                   	// #3
  422228:	str	w0, [sp, #816]
  42222c:	mov	w0, #0x16                  	// #22
  422230:	movk	w0, #0x4000, lsl #16
  422234:	str	w0, [sp, #820]
  422238:	ldr	x0, [sp, #4136]
  42223c:	cmp	x0, #0x0
  422240:	b.eq	42227c <parse_token+0x5f8>  // b.none
  422244:	mov	w0, #0x1                   	// #1
  422248:	bl	40be30 <log_get_max_level_realm@plt>
  42224c:	mov	w1, w0
  422250:	ldr	w0, [sp, #816]
  422254:	cmp	w0, w1
  422258:	cset	w0, le
  42225c:	and	w0, w0, #0xff
  422260:	and	x0, x0, #0xff
  422264:	cmp	x0, #0x0
  422268:	b.eq	42227c <parse_token+0x5f8>  // b.none
  42226c:	add	x0, sp, #0x348
  422270:	mov	x1, x0
  422274:	ldr	x0, [sp, #4136]
  422278:	bl	40aba0 <sd_device_get_sysname@plt>
  42227c:	adrp	x0, 454000 <__func__.10675+0xa0>
  422280:	add	x20, x0, #0xbb
  422284:	ldr	x0, [sp, #840]
  422288:	cmp	x0, #0x0
  42228c:	b.eq	42229c <parse_token+0x618>  // b.none
  422290:	adrp	x0, 454000 <__func__.10675+0xa0>
  422294:	add	x19, x0, #0xd8
  422298:	b	4222a0 <parse_token+0x61c>
  42229c:	mov	x19, #0x0                   	// #0
  4222a0:	ldr	x21, [sp, #840]
  4222a4:	ldr	x0, [sp, #4128]
  4222a8:	bl	41fb4c <strna>
  4222ac:	mov	x2, x0
  4222b0:	ldr	x0, [sp, #4120]
  4222b4:	cmp	x0, #0x0
  4222b8:	b.eq	4222c8 <parse_token+0x644>  // b.none
  4222bc:	ldr	x0, [sp, #4120]
  4222c0:	ldr	w0, [x0, #8]
  4222c4:	b	4222cc <parse_token+0x648>
  4222c8:	mov	w0, #0x0                   	// #0
  4222cc:	ldr	x1, [sp, #128]
  4222d0:	str	x1, [sp, #40]
  4222d4:	adrp	x1, 454000 <__func__.10675+0xa0>
  4222d8:	add	x1, x1, #0x278
  4222dc:	str	x1, [sp, #32]
  4222e0:	str	w0, [sp, #24]
  4222e4:	str	x2, [sp, #16]
  4222e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4222ec:	add	x0, x0, #0x288
  4222f0:	str	x0, [sp, #8]
  4222f4:	str	xzr, [sp]
  4222f8:	mov	x7, #0x0                   	// #0
  4222fc:	mov	x6, x21
  422300:	mov	x5, x19
  422304:	adrp	x0, 455000 <__func__.10675+0x10a0>
  422308:	add	x4, x0, #0x920
  42230c:	mov	w3, #0x22d                 	// #557
  422310:	mov	x2, x20
  422314:	ldr	w1, [sp, #820]
  422318:	ldr	w0, [sp, #816]
  42231c:	bl	40b020 <log_object_internal@plt>
  422320:	b	42a9c0 <parse_token+0x8d3c>
  422324:	ldrb	w0, [sp, #147]
  422328:	eor	w0, w0, #0x1
  42232c:	and	w0, w0, #0xff
  422330:	cmp	w0, #0x0
  422334:	b.eq	4224a8 <parse_token+0x824>  // b.none
  422338:	ldr	x0, [sp, #136]
  42233c:	str	x0, [sp, #4064]
  422340:	ldr	x0, [sp, #4064]
  422344:	cmp	x0, #0x0
  422348:	b.eq	422358 <parse_token+0x6d4>  // b.none
  42234c:	ldr	x0, [sp, #4064]
  422350:	ldr	x0, [x0, #32]
  422354:	b	42235c <parse_token+0x6d8>
  422358:	mov	x0, #0x0                   	// #0
  42235c:	str	x0, [sp, #4072]
  422360:	ldr	x0, [sp, #4072]
  422364:	cmp	x0, #0x0
  422368:	b.eq	422378 <parse_token+0x6f4>  // b.none
  42236c:	ldr	x0, [sp, #4072]
  422370:	ldr	x0, [x0, #8]
  422374:	b	42237c <parse_token+0x6f8>
  422378:	mov	x0, #0x0                   	// #0
  42237c:	str	x0, [sp, #4080]
  422380:	ldr	x0, [sp, #4072]
  422384:	cmp	x0, #0x0
  422388:	b.eq	422398 <parse_token+0x714>  // b.none
  42238c:	ldr	x0, [sp, #4072]
  422390:	ldr	x0, [x0]
  422394:	b	42239c <parse_token+0x718>
  422398:	mov	x0, #0x0                   	// #0
  42239c:	str	x0, [sp, #4088]
  4223a0:	str	xzr, [sp, #840]
  4223a4:	str	xzr, [sp, #4096]
  4223a8:	mov	w0, #0x3                   	// #3
  4223ac:	str	w0, [sp, #808]
  4223b0:	mov	w0, #0x16                  	// #22
  4223b4:	movk	w0, #0x4000, lsl #16
  4223b8:	str	w0, [sp, #812]
  4223bc:	ldr	x0, [sp, #4096]
  4223c0:	cmp	x0, #0x0
  4223c4:	b.eq	422400 <parse_token+0x77c>  // b.none
  4223c8:	mov	w0, #0x1                   	// #1
  4223cc:	bl	40be30 <log_get_max_level_realm@plt>
  4223d0:	mov	w1, w0
  4223d4:	ldr	w0, [sp, #808]
  4223d8:	cmp	w0, w1
  4223dc:	cset	w0, le
  4223e0:	and	w0, w0, #0xff
  4223e4:	and	x0, x0, #0xff
  4223e8:	cmp	x0, #0x0
  4223ec:	b.eq	422400 <parse_token+0x77c>  // b.none
  4223f0:	add	x0, sp, #0x348
  4223f4:	mov	x1, x0
  4223f8:	ldr	x0, [sp, #4096]
  4223fc:	bl	40aba0 <sd_device_get_sysname@plt>
  422400:	adrp	x0, 454000 <__func__.10675+0xa0>
  422404:	add	x20, x0, #0xbb
  422408:	ldr	x0, [sp, #840]
  42240c:	cmp	x0, #0x0
  422410:	b.eq	422420 <parse_token+0x79c>  // b.none
  422414:	adrp	x0, 454000 <__func__.10675+0xa0>
  422418:	add	x19, x0, #0xd8
  42241c:	b	422424 <parse_token+0x7a0>
  422420:	mov	x19, #0x0                   	// #0
  422424:	ldr	x21, [sp, #840]
  422428:	ldr	x0, [sp, #4088]
  42242c:	bl	41fb4c <strna>
  422430:	mov	x2, x0
  422434:	ldr	x0, [sp, #4080]
  422438:	cmp	x0, #0x0
  42243c:	b.eq	42244c <parse_token+0x7c8>  // b.none
  422440:	ldr	x0, [sp, #4080]
  422444:	ldr	w0, [x0, #8]
  422448:	b	422450 <parse_token+0x7cc>
  42244c:	mov	w0, #0x0                   	// #0
  422450:	ldr	x1, [sp, #128]
  422454:	str	x1, [sp, #40]
  422458:	adrp	x1, 454000 <__func__.10675+0xa0>
  42245c:	add	x1, x1, #0x348
  422460:	str	x1, [sp, #32]
  422464:	str	w0, [sp, #24]
  422468:	str	x2, [sp, #16]
  42246c:	adrp	x0, 454000 <__func__.10675+0xa0>
  422470:	add	x0, x0, #0x288
  422474:	str	x0, [sp, #8]
  422478:	str	xzr, [sp]
  42247c:	mov	x7, #0x0                   	// #0
  422480:	mov	x6, x21
  422484:	mov	x5, x19
  422488:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42248c:	add	x4, x0, #0x920
  422490:	mov	w3, #0x22f                 	// #559
  422494:	mov	x2, x20
  422498:	ldr	w1, [sp, #812]
  42249c:	ldr	w0, [sp, #808]
  4224a0:	bl	40b020 <log_object_internal@plt>
  4224a4:	b	42a9c0 <parse_token+0x8d3c>
  4224a8:	mov	x4, #0x0                   	// #0
  4224ac:	ldr	x3, [sp, #104]
  4224b0:	ldr	w2, [sp, #116]
  4224b4:	mov	w1, #0x1                   	// #1
  4224b8:	ldr	x0, [sp, #848]
  4224bc:	bl	420e88 <rule_line_add_token>
  4224c0:	str	w0, [sp, #152]
  4224c4:	b	42a990 <parse_token+0x8d0c>
  4224c8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4224cc:	add	x1, x0, #0x358
  4224d0:	ldr	x0, [sp, #128]
  4224d4:	bl	40b710 <strcmp@plt>
  4224d8:	cmp	w0, #0x0
  4224dc:	b.ne	422800 <parse_token+0xb7c>  // b.any
  4224e0:	ldr	x0, [sp, #120]
  4224e4:	cmp	x0, #0x0
  4224e8:	b.eq	42265c <parse_token+0x9d8>  // b.none
  4224ec:	ldr	x0, [sp, #136]
  4224f0:	str	x0, [sp, #4024]
  4224f4:	ldr	x0, [sp, #4024]
  4224f8:	cmp	x0, #0x0
  4224fc:	b.eq	42250c <parse_token+0x888>  // b.none
  422500:	ldr	x0, [sp, #4024]
  422504:	ldr	x0, [x0, #32]
  422508:	b	422510 <parse_token+0x88c>
  42250c:	mov	x0, #0x0                   	// #0
  422510:	str	x0, [sp, #4032]
  422514:	ldr	x0, [sp, #4032]
  422518:	cmp	x0, #0x0
  42251c:	b.eq	42252c <parse_token+0x8a8>  // b.none
  422520:	ldr	x0, [sp, #4032]
  422524:	ldr	x0, [x0, #8]
  422528:	b	422530 <parse_token+0x8ac>
  42252c:	mov	x0, #0x0                   	// #0
  422530:	str	x0, [sp, #4040]
  422534:	ldr	x0, [sp, #4032]
  422538:	cmp	x0, #0x0
  42253c:	b.eq	42254c <parse_token+0x8c8>  // b.none
  422540:	ldr	x0, [sp, #4032]
  422544:	ldr	x0, [x0]
  422548:	b	422550 <parse_token+0x8cc>
  42254c:	mov	x0, #0x0                   	// #0
  422550:	str	x0, [sp, #4048]
  422554:	str	xzr, [sp, #840]
  422558:	str	xzr, [sp, #4056]
  42255c:	mov	w0, #0x3                   	// #3
  422560:	str	w0, [sp, #800]
  422564:	mov	w0, #0x16                  	// #22
  422568:	movk	w0, #0x4000, lsl #16
  42256c:	str	w0, [sp, #804]
  422570:	ldr	x0, [sp, #4056]
  422574:	cmp	x0, #0x0
  422578:	b.eq	4225b4 <parse_token+0x930>  // b.none
  42257c:	mov	w0, #0x1                   	// #1
  422580:	bl	40be30 <log_get_max_level_realm@plt>
  422584:	mov	w1, w0
  422588:	ldr	w0, [sp, #800]
  42258c:	cmp	w0, w1
  422590:	cset	w0, le
  422594:	and	w0, w0, #0xff
  422598:	and	x0, x0, #0xff
  42259c:	cmp	x0, #0x0
  4225a0:	b.eq	4225b4 <parse_token+0x930>  // b.none
  4225a4:	add	x0, sp, #0x348
  4225a8:	mov	x1, x0
  4225ac:	ldr	x0, [sp, #4056]
  4225b0:	bl	40aba0 <sd_device_get_sysname@plt>
  4225b4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4225b8:	add	x20, x0, #0xbb
  4225bc:	ldr	x0, [sp, #840]
  4225c0:	cmp	x0, #0x0
  4225c4:	b.eq	4225d4 <parse_token+0x950>  // b.none
  4225c8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4225cc:	add	x19, x0, #0xd8
  4225d0:	b	4225d8 <parse_token+0x954>
  4225d4:	mov	x19, #0x0                   	// #0
  4225d8:	ldr	x21, [sp, #840]
  4225dc:	ldr	x0, [sp, #4048]
  4225e0:	bl	41fb4c <strna>
  4225e4:	mov	x2, x0
  4225e8:	ldr	x0, [sp, #4040]
  4225ec:	cmp	x0, #0x0
  4225f0:	b.eq	422600 <parse_token+0x97c>  // b.none
  4225f4:	ldr	x0, [sp, #4040]
  4225f8:	ldr	w0, [x0, #8]
  4225fc:	b	422604 <parse_token+0x980>
  422600:	mov	w0, #0x0                   	// #0
  422604:	ldr	x1, [sp, #128]
  422608:	str	x1, [sp, #40]
  42260c:	adrp	x1, 454000 <__func__.10675+0xa0>
  422610:	add	x1, x1, #0x278
  422614:	str	x1, [sp, #32]
  422618:	str	w0, [sp, #24]
  42261c:	str	x2, [sp, #16]
  422620:	adrp	x0, 454000 <__func__.10675+0xa0>
  422624:	add	x0, x0, #0x288
  422628:	str	x0, [sp, #8]
  42262c:	str	xzr, [sp]
  422630:	mov	x7, #0x0                   	// #0
  422634:	mov	x6, x21
  422638:	mov	x5, x19
  42263c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  422640:	add	x4, x0, #0x920
  422644:	mov	w3, #0x234                 	// #564
  422648:	mov	x2, x20
  42264c:	ldr	w1, [sp, #804]
  422650:	ldr	w0, [sp, #800]
  422654:	bl	40b020 <log_object_internal@plt>
  422658:	b	42a9c0 <parse_token+0x8d3c>
  42265c:	ldrb	w0, [sp, #147]
  422660:	eor	w0, w0, #0x1
  422664:	and	w0, w0, #0xff
  422668:	cmp	w0, #0x0
  42266c:	b.eq	4227e0 <parse_token+0xb5c>  // b.none
  422670:	ldr	x0, [sp, #136]
  422674:	str	x0, [sp, #3984]
  422678:	ldr	x0, [sp, #3984]
  42267c:	cmp	x0, #0x0
  422680:	b.eq	422690 <parse_token+0xa0c>  // b.none
  422684:	ldr	x0, [sp, #3984]
  422688:	ldr	x0, [x0, #32]
  42268c:	b	422694 <parse_token+0xa10>
  422690:	mov	x0, #0x0                   	// #0
  422694:	str	x0, [sp, #3992]
  422698:	ldr	x0, [sp, #3992]
  42269c:	cmp	x0, #0x0
  4226a0:	b.eq	4226b0 <parse_token+0xa2c>  // b.none
  4226a4:	ldr	x0, [sp, #3992]
  4226a8:	ldr	x0, [x0, #8]
  4226ac:	b	4226b4 <parse_token+0xa30>
  4226b0:	mov	x0, #0x0                   	// #0
  4226b4:	str	x0, [sp, #4000]
  4226b8:	ldr	x0, [sp, #3992]
  4226bc:	cmp	x0, #0x0
  4226c0:	b.eq	4226d0 <parse_token+0xa4c>  // b.none
  4226c4:	ldr	x0, [sp, #3992]
  4226c8:	ldr	x0, [x0]
  4226cc:	b	4226d4 <parse_token+0xa50>
  4226d0:	mov	x0, #0x0                   	// #0
  4226d4:	str	x0, [sp, #4008]
  4226d8:	str	xzr, [sp, #840]
  4226dc:	str	xzr, [sp, #4016]
  4226e0:	mov	w0, #0x3                   	// #3
  4226e4:	str	w0, [sp, #792]
  4226e8:	mov	w0, #0x16                  	// #22
  4226ec:	movk	w0, #0x4000, lsl #16
  4226f0:	str	w0, [sp, #796]
  4226f4:	ldr	x0, [sp, #4016]
  4226f8:	cmp	x0, #0x0
  4226fc:	b.eq	422738 <parse_token+0xab4>  // b.none
  422700:	mov	w0, #0x1                   	// #1
  422704:	bl	40be30 <log_get_max_level_realm@plt>
  422708:	mov	w1, w0
  42270c:	ldr	w0, [sp, #792]
  422710:	cmp	w0, w1
  422714:	cset	w0, le
  422718:	and	w0, w0, #0xff
  42271c:	and	x0, x0, #0xff
  422720:	cmp	x0, #0x0
  422724:	b.eq	422738 <parse_token+0xab4>  // b.none
  422728:	add	x0, sp, #0x348
  42272c:	mov	x1, x0
  422730:	ldr	x0, [sp, #4016]
  422734:	bl	40aba0 <sd_device_get_sysname@plt>
  422738:	adrp	x0, 454000 <__func__.10675+0xa0>
  42273c:	add	x20, x0, #0xbb
  422740:	ldr	x0, [sp, #840]
  422744:	cmp	x0, #0x0
  422748:	b.eq	422758 <parse_token+0xad4>  // b.none
  42274c:	adrp	x0, 454000 <__func__.10675+0xa0>
  422750:	add	x19, x0, #0xd8
  422754:	b	42275c <parse_token+0xad8>
  422758:	mov	x19, #0x0                   	// #0
  42275c:	ldr	x21, [sp, #840]
  422760:	ldr	x0, [sp, #4008]
  422764:	bl	41fb4c <strna>
  422768:	mov	x2, x0
  42276c:	ldr	x0, [sp, #4000]
  422770:	cmp	x0, #0x0
  422774:	b.eq	422784 <parse_token+0xb00>  // b.none
  422778:	ldr	x0, [sp, #4000]
  42277c:	ldr	w0, [x0, #8]
  422780:	b	422788 <parse_token+0xb04>
  422784:	mov	w0, #0x0                   	// #0
  422788:	ldr	x1, [sp, #128]
  42278c:	str	x1, [sp, #40]
  422790:	adrp	x1, 454000 <__func__.10675+0xa0>
  422794:	add	x1, x1, #0x348
  422798:	str	x1, [sp, #32]
  42279c:	str	w0, [sp, #24]
  4227a0:	str	x2, [sp, #16]
  4227a4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4227a8:	add	x0, x0, #0x288
  4227ac:	str	x0, [sp, #8]
  4227b0:	str	xzr, [sp]
  4227b4:	mov	x7, #0x0                   	// #0
  4227b8:	mov	x6, x21
  4227bc:	mov	x5, x19
  4227c0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4227c4:	add	x4, x0, #0x920
  4227c8:	mov	w3, #0x236                 	// #566
  4227cc:	mov	x2, x20
  4227d0:	ldr	w1, [sp, #796]
  4227d4:	ldr	w0, [sp, #792]
  4227d8:	bl	40b020 <log_object_internal@plt>
  4227dc:	b	42a9c0 <parse_token+0x8d3c>
  4227e0:	mov	x4, #0x0                   	// #0
  4227e4:	ldr	x3, [sp, #104]
  4227e8:	ldr	w2, [sp, #116]
  4227ec:	mov	w1, #0x2                   	// #2
  4227f0:	ldr	x0, [sp, #848]
  4227f4:	bl	420e88 <rule_line_add_token>
  4227f8:	str	w0, [sp, #152]
  4227fc:	b	42a990 <parse_token+0x8d0c>
  422800:	adrp	x0, 454000 <__func__.10675+0xa0>
  422804:	add	x1, x0, #0x360
  422808:	ldr	x0, [sp, #128]
  42280c:	bl	40b710 <strcmp@plt>
  422810:	cmp	w0, #0x0
  422814:	b.ne	422b78 <parse_token+0xef4>  // b.any
  422818:	ldr	x0, [sp, #120]
  42281c:	cmp	x0, #0x0
  422820:	b.eq	422994 <parse_token+0xd10>  // b.none
  422824:	ldr	x0, [sp, #136]
  422828:	str	x0, [sp, #3944]
  42282c:	ldr	x0, [sp, #3944]
  422830:	cmp	x0, #0x0
  422834:	b.eq	422844 <parse_token+0xbc0>  // b.none
  422838:	ldr	x0, [sp, #3944]
  42283c:	ldr	x0, [x0, #32]
  422840:	b	422848 <parse_token+0xbc4>
  422844:	mov	x0, #0x0                   	// #0
  422848:	str	x0, [sp, #3952]
  42284c:	ldr	x0, [sp, #3952]
  422850:	cmp	x0, #0x0
  422854:	b.eq	422864 <parse_token+0xbe0>  // b.none
  422858:	ldr	x0, [sp, #3952]
  42285c:	ldr	x0, [x0, #8]
  422860:	b	422868 <parse_token+0xbe4>
  422864:	mov	x0, #0x0                   	// #0
  422868:	str	x0, [sp, #3960]
  42286c:	ldr	x0, [sp, #3952]
  422870:	cmp	x0, #0x0
  422874:	b.eq	422884 <parse_token+0xc00>  // b.none
  422878:	ldr	x0, [sp, #3952]
  42287c:	ldr	x0, [x0]
  422880:	b	422888 <parse_token+0xc04>
  422884:	mov	x0, #0x0                   	// #0
  422888:	str	x0, [sp, #3968]
  42288c:	str	xzr, [sp, #840]
  422890:	str	xzr, [sp, #3976]
  422894:	mov	w0, #0x3                   	// #3
  422898:	str	w0, [sp, #784]
  42289c:	mov	w0, #0x16                  	// #22
  4228a0:	movk	w0, #0x4000, lsl #16
  4228a4:	str	w0, [sp, #788]
  4228a8:	ldr	x0, [sp, #3976]
  4228ac:	cmp	x0, #0x0
  4228b0:	b.eq	4228ec <parse_token+0xc68>  // b.none
  4228b4:	mov	w0, #0x1                   	// #1
  4228b8:	bl	40be30 <log_get_max_level_realm@plt>
  4228bc:	mov	w1, w0
  4228c0:	ldr	w0, [sp, #784]
  4228c4:	cmp	w0, w1
  4228c8:	cset	w0, le
  4228cc:	and	w0, w0, #0xff
  4228d0:	and	x0, x0, #0xff
  4228d4:	cmp	x0, #0x0
  4228d8:	b.eq	4228ec <parse_token+0xc68>  // b.none
  4228dc:	add	x0, sp, #0x348
  4228e0:	mov	x1, x0
  4228e4:	ldr	x0, [sp, #3976]
  4228e8:	bl	40aba0 <sd_device_get_sysname@plt>
  4228ec:	adrp	x0, 454000 <__func__.10675+0xa0>
  4228f0:	add	x20, x0, #0xbb
  4228f4:	ldr	x0, [sp, #840]
  4228f8:	cmp	x0, #0x0
  4228fc:	b.eq	42290c <parse_token+0xc88>  // b.none
  422900:	adrp	x0, 454000 <__func__.10675+0xa0>
  422904:	add	x19, x0, #0xd8
  422908:	b	422910 <parse_token+0xc8c>
  42290c:	mov	x19, #0x0                   	// #0
  422910:	ldr	x21, [sp, #840]
  422914:	ldr	x0, [sp, #3968]
  422918:	bl	41fb4c <strna>
  42291c:	mov	x2, x0
  422920:	ldr	x0, [sp, #3960]
  422924:	cmp	x0, #0x0
  422928:	b.eq	422938 <parse_token+0xcb4>  // b.none
  42292c:	ldr	x0, [sp, #3960]
  422930:	ldr	w0, [x0, #8]
  422934:	b	42293c <parse_token+0xcb8>
  422938:	mov	w0, #0x0                   	// #0
  42293c:	ldr	x1, [sp, #128]
  422940:	str	x1, [sp, #40]
  422944:	adrp	x1, 454000 <__func__.10675+0xa0>
  422948:	add	x1, x1, #0x278
  42294c:	str	x1, [sp, #32]
  422950:	str	w0, [sp, #24]
  422954:	str	x2, [sp, #16]
  422958:	adrp	x0, 454000 <__func__.10675+0xa0>
  42295c:	add	x0, x0, #0x288
  422960:	str	x0, [sp, #8]
  422964:	str	xzr, [sp]
  422968:	mov	x7, #0x0                   	// #0
  42296c:	mov	x6, x21
  422970:	mov	x5, x19
  422974:	adrp	x0, 455000 <__func__.10675+0x10a0>
  422978:	add	x4, x0, #0x920
  42297c:	mov	w3, #0x23b                 	// #571
  422980:	mov	x2, x20
  422984:	ldr	w1, [sp, #788]
  422988:	ldr	w0, [sp, #784]
  42298c:	bl	40b020 <log_object_internal@plt>
  422990:	b	42a9c0 <parse_token+0x8d3c>
  422994:	ldr	w0, [sp, #116]
  422998:	cmp	w0, #0x3
  42299c:	b.ne	422b10 <parse_token+0xe8c>  // b.any
  4229a0:	ldr	x0, [sp, #136]
  4229a4:	str	x0, [sp, #3904]
  4229a8:	ldr	x0, [sp, #3904]
  4229ac:	cmp	x0, #0x0
  4229b0:	b.eq	4229c0 <parse_token+0xd3c>  // b.none
  4229b4:	ldr	x0, [sp, #3904]
  4229b8:	ldr	x0, [x0, #32]
  4229bc:	b	4229c4 <parse_token+0xd40>
  4229c0:	mov	x0, #0x0                   	// #0
  4229c4:	str	x0, [sp, #3912]
  4229c8:	ldr	x0, [sp, #3912]
  4229cc:	cmp	x0, #0x0
  4229d0:	b.eq	4229e0 <parse_token+0xd5c>  // b.none
  4229d4:	ldr	x0, [sp, #3912]
  4229d8:	ldr	x0, [x0, #8]
  4229dc:	b	4229e4 <parse_token+0xd60>
  4229e0:	mov	x0, #0x0                   	// #0
  4229e4:	str	x0, [sp, #3920]
  4229e8:	ldr	x0, [sp, #3912]
  4229ec:	cmp	x0, #0x0
  4229f0:	b.eq	422a00 <parse_token+0xd7c>  // b.none
  4229f4:	ldr	x0, [sp, #3912]
  4229f8:	ldr	x0, [x0]
  4229fc:	b	422a04 <parse_token+0xd80>
  422a00:	mov	x0, #0x0                   	// #0
  422a04:	str	x0, [sp, #3928]
  422a08:	str	xzr, [sp, #840]
  422a0c:	str	xzr, [sp, #3936]
  422a10:	mov	w0, #0x3                   	// #3
  422a14:	str	w0, [sp, #776]
  422a18:	mov	w0, #0x16                  	// #22
  422a1c:	movk	w0, #0x4000, lsl #16
  422a20:	str	w0, [sp, #780]
  422a24:	ldr	x0, [sp, #3936]
  422a28:	cmp	x0, #0x0
  422a2c:	b.eq	422a68 <parse_token+0xde4>  // b.none
  422a30:	mov	w0, #0x1                   	// #1
  422a34:	bl	40be30 <log_get_max_level_realm@plt>
  422a38:	mov	w1, w0
  422a3c:	ldr	w0, [sp, #776]
  422a40:	cmp	w0, w1
  422a44:	cset	w0, le
  422a48:	and	w0, w0, #0xff
  422a4c:	and	x0, x0, #0xff
  422a50:	cmp	x0, #0x0
  422a54:	b.eq	422a68 <parse_token+0xde4>  // b.none
  422a58:	add	x0, sp, #0x348
  422a5c:	mov	x1, x0
  422a60:	ldr	x0, [sp, #3936]
  422a64:	bl	40aba0 <sd_device_get_sysname@plt>
  422a68:	adrp	x0, 454000 <__func__.10675+0xa0>
  422a6c:	add	x20, x0, #0xbb
  422a70:	ldr	x0, [sp, #840]
  422a74:	cmp	x0, #0x0
  422a78:	b.eq	422a88 <parse_token+0xe04>  // b.none
  422a7c:	adrp	x0, 454000 <__func__.10675+0xa0>
  422a80:	add	x19, x0, #0xd8
  422a84:	b	422a8c <parse_token+0xe08>
  422a88:	mov	x19, #0x0                   	// #0
  422a8c:	ldr	x21, [sp, #840]
  422a90:	ldr	x0, [sp, #3928]
  422a94:	bl	41fb4c <strna>
  422a98:	mov	x2, x0
  422a9c:	ldr	x0, [sp, #3920]
  422aa0:	cmp	x0, #0x0
  422aa4:	b.eq	422ab4 <parse_token+0xe30>  // b.none
  422aa8:	ldr	x0, [sp, #3920]
  422aac:	ldr	w0, [x0, #8]
  422ab0:	b	422ab8 <parse_token+0xe34>
  422ab4:	mov	w0, #0x0                   	// #0
  422ab8:	ldr	x1, [sp, #128]
  422abc:	str	x1, [sp, #40]
  422ac0:	adrp	x1, 454000 <__func__.10675+0xa0>
  422ac4:	add	x1, x1, #0x348
  422ac8:	str	x1, [sp, #32]
  422acc:	str	w0, [sp, #24]
  422ad0:	str	x2, [sp, #16]
  422ad4:	adrp	x0, 454000 <__func__.10675+0xa0>
  422ad8:	add	x0, x0, #0x288
  422adc:	str	x0, [sp, #8]
  422ae0:	str	xzr, [sp]
  422ae4:	mov	x7, #0x0                   	// #0
  422ae8:	mov	x6, x21
  422aec:	mov	x5, x19
  422af0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  422af4:	add	x4, x0, #0x920
  422af8:	mov	w3, #0x23d                 	// #573
  422afc:	mov	x2, x20
  422b00:	ldr	w1, [sp, #780]
  422b04:	ldr	w0, [sp, #776]
  422b08:	bl	40b020 <log_object_internal@plt>
  422b0c:	b	42a9c0 <parse_token+0x8d3c>
  422b10:	ldrb	w0, [sp, #147]
  422b14:	eor	w0, w0, #0x1
  422b18:	and	w0, w0, #0xff
  422b1c:	cmp	w0, #0x0
  422b20:	b.eq	422b58 <parse_token+0xed4>  // b.none
  422b24:	mov	w3, #0x0                   	// #0
  422b28:	ldr	x2, [sp, #104]
  422b2c:	ldr	x1, [sp, #128]
  422b30:	ldr	x0, [sp, #136]
  422b34:	bl	421544 <check_value_format_and_warn>
  422b38:	mov	x4, #0x0                   	// #0
  422b3c:	ldr	x3, [sp, #104]
  422b40:	ldr	w2, [sp, #116]
  422b44:	mov	w1, #0x2a                  	// #42
  422b48:	ldr	x0, [sp, #848]
  422b4c:	bl	420e88 <rule_line_add_token>
  422b50:	str	w0, [sp, #152]
  422b54:	b	42a990 <parse_token+0x8d0c>
  422b58:	mov	x4, #0x0                   	// #0
  422b5c:	ldr	x3, [sp, #104]
  422b60:	ldr	w2, [sp, #116]
  422b64:	mov	w1, #0x3                   	// #3
  422b68:	ldr	x0, [sp, #848]
  422b6c:	bl	420e88 <rule_line_add_token>
  422b70:	str	w0, [sp, #152]
  422b74:	b	42a990 <parse_token+0x8d0c>
  422b78:	adrp	x0, 454000 <__func__.10675+0xa0>
  422b7c:	add	x1, x0, #0x368
  422b80:	ldr	x0, [sp, #128]
  422b84:	bl	40b710 <strcmp@plt>
  422b88:	cmp	w0, #0x0
  422b8c:	b.ne	423340 <parse_token+0x16bc>  // b.any
  422b90:	ldr	x0, [sp, #120]
  422b94:	cmp	x0, #0x0
  422b98:	b.eq	422d0c <parse_token+0x1088>  // b.none
  422b9c:	ldr	x0, [sp, #136]
  422ba0:	str	x0, [sp, #3864]
  422ba4:	ldr	x0, [sp, #3864]
  422ba8:	cmp	x0, #0x0
  422bac:	b.eq	422bbc <parse_token+0xf38>  // b.none
  422bb0:	ldr	x0, [sp, #3864]
  422bb4:	ldr	x0, [x0, #32]
  422bb8:	b	422bc0 <parse_token+0xf3c>
  422bbc:	mov	x0, #0x0                   	// #0
  422bc0:	str	x0, [sp, #3872]
  422bc4:	ldr	x0, [sp, #3872]
  422bc8:	cmp	x0, #0x0
  422bcc:	b.eq	422bdc <parse_token+0xf58>  // b.none
  422bd0:	ldr	x0, [sp, #3872]
  422bd4:	ldr	x0, [x0, #8]
  422bd8:	b	422be0 <parse_token+0xf5c>
  422bdc:	mov	x0, #0x0                   	// #0
  422be0:	str	x0, [sp, #3880]
  422be4:	ldr	x0, [sp, #3872]
  422be8:	cmp	x0, #0x0
  422bec:	b.eq	422bfc <parse_token+0xf78>  // b.none
  422bf0:	ldr	x0, [sp, #3872]
  422bf4:	ldr	x0, [x0]
  422bf8:	b	422c00 <parse_token+0xf7c>
  422bfc:	mov	x0, #0x0                   	// #0
  422c00:	str	x0, [sp, #3888]
  422c04:	str	xzr, [sp, #840]
  422c08:	str	xzr, [sp, #3896]
  422c0c:	mov	w0, #0x3                   	// #3
  422c10:	str	w0, [sp, #768]
  422c14:	mov	w0, #0x16                  	// #22
  422c18:	movk	w0, #0x4000, lsl #16
  422c1c:	str	w0, [sp, #772]
  422c20:	ldr	x0, [sp, #3896]
  422c24:	cmp	x0, #0x0
  422c28:	b.eq	422c64 <parse_token+0xfe0>  // b.none
  422c2c:	mov	w0, #0x1                   	// #1
  422c30:	bl	40be30 <log_get_max_level_realm@plt>
  422c34:	mov	w1, w0
  422c38:	ldr	w0, [sp, #768]
  422c3c:	cmp	w0, w1
  422c40:	cset	w0, le
  422c44:	and	w0, w0, #0xff
  422c48:	and	x0, x0, #0xff
  422c4c:	cmp	x0, #0x0
  422c50:	b.eq	422c64 <parse_token+0xfe0>  // b.none
  422c54:	add	x0, sp, #0x348
  422c58:	mov	x1, x0
  422c5c:	ldr	x0, [sp, #3896]
  422c60:	bl	40aba0 <sd_device_get_sysname@plt>
  422c64:	adrp	x0, 454000 <__func__.10675+0xa0>
  422c68:	add	x20, x0, #0xbb
  422c6c:	ldr	x0, [sp, #840]
  422c70:	cmp	x0, #0x0
  422c74:	b.eq	422c84 <parse_token+0x1000>  // b.none
  422c78:	adrp	x0, 454000 <__func__.10675+0xa0>
  422c7c:	add	x19, x0, #0xd8
  422c80:	b	422c88 <parse_token+0x1004>
  422c84:	mov	x19, #0x0                   	// #0
  422c88:	ldr	x21, [sp, #840]
  422c8c:	ldr	x0, [sp, #3888]
  422c90:	bl	41fb4c <strna>
  422c94:	mov	x2, x0
  422c98:	ldr	x0, [sp, #3880]
  422c9c:	cmp	x0, #0x0
  422ca0:	b.eq	422cb0 <parse_token+0x102c>  // b.none
  422ca4:	ldr	x0, [sp, #3880]
  422ca8:	ldr	w0, [x0, #8]
  422cac:	b	422cb4 <parse_token+0x1030>
  422cb0:	mov	w0, #0x0                   	// #0
  422cb4:	ldr	x1, [sp, #128]
  422cb8:	str	x1, [sp, #40]
  422cbc:	adrp	x1, 454000 <__func__.10675+0xa0>
  422cc0:	add	x1, x1, #0x278
  422cc4:	str	x1, [sp, #32]
  422cc8:	str	w0, [sp, #24]
  422ccc:	str	x2, [sp, #16]
  422cd0:	adrp	x0, 454000 <__func__.10675+0xa0>
  422cd4:	add	x0, x0, #0x288
  422cd8:	str	x0, [sp, #8]
  422cdc:	str	xzr, [sp]
  422ce0:	mov	x7, #0x0                   	// #0
  422ce4:	mov	x6, x21
  422ce8:	mov	x5, x19
  422cec:	adrp	x0, 455000 <__func__.10675+0x10a0>
  422cf0:	add	x4, x0, #0x920
  422cf4:	mov	w3, #0x246                 	// #582
  422cf8:	mov	x2, x20
  422cfc:	ldr	w1, [sp, #772]
  422d00:	ldr	w0, [sp, #768]
  422d04:	bl	40b020 <log_object_internal@plt>
  422d08:	b	42a9c0 <parse_token+0x8d3c>
  422d0c:	ldr	w0, [sp, #116]
  422d10:	cmp	w0, #0x3
  422d14:	b.ne	422e88 <parse_token+0x1204>  // b.any
  422d18:	ldr	x0, [sp, #136]
  422d1c:	str	x0, [sp, #3824]
  422d20:	ldr	x0, [sp, #3824]
  422d24:	cmp	x0, #0x0
  422d28:	b.eq	422d38 <parse_token+0x10b4>  // b.none
  422d2c:	ldr	x0, [sp, #3824]
  422d30:	ldr	x0, [x0, #32]
  422d34:	b	422d3c <parse_token+0x10b8>
  422d38:	mov	x0, #0x0                   	// #0
  422d3c:	str	x0, [sp, #3832]
  422d40:	ldr	x0, [sp, #3832]
  422d44:	cmp	x0, #0x0
  422d48:	b.eq	422d58 <parse_token+0x10d4>  // b.none
  422d4c:	ldr	x0, [sp, #3832]
  422d50:	ldr	x0, [x0, #8]
  422d54:	b	422d5c <parse_token+0x10d8>
  422d58:	mov	x0, #0x0                   	// #0
  422d5c:	str	x0, [sp, #3840]
  422d60:	ldr	x0, [sp, #3832]
  422d64:	cmp	x0, #0x0
  422d68:	b.eq	422d78 <parse_token+0x10f4>  // b.none
  422d6c:	ldr	x0, [sp, #3832]
  422d70:	ldr	x0, [x0]
  422d74:	b	422d7c <parse_token+0x10f8>
  422d78:	mov	x0, #0x0                   	// #0
  422d7c:	str	x0, [sp, #3848]
  422d80:	str	xzr, [sp, #840]
  422d84:	str	xzr, [sp, #3856]
  422d88:	mov	w0, #0x3                   	// #3
  422d8c:	str	w0, [sp, #760]
  422d90:	mov	w0, #0x16                  	// #22
  422d94:	movk	w0, #0x4000, lsl #16
  422d98:	str	w0, [sp, #764]
  422d9c:	ldr	x0, [sp, #3856]
  422da0:	cmp	x0, #0x0
  422da4:	b.eq	422de0 <parse_token+0x115c>  // b.none
  422da8:	mov	w0, #0x1                   	// #1
  422dac:	bl	40be30 <log_get_max_level_realm@plt>
  422db0:	mov	w1, w0
  422db4:	ldr	w0, [sp, #760]
  422db8:	cmp	w0, w1
  422dbc:	cset	w0, le
  422dc0:	and	w0, w0, #0xff
  422dc4:	and	x0, x0, #0xff
  422dc8:	cmp	x0, #0x0
  422dcc:	b.eq	422de0 <parse_token+0x115c>  // b.none
  422dd0:	add	x0, sp, #0x348
  422dd4:	mov	x1, x0
  422dd8:	ldr	x0, [sp, #3856]
  422ddc:	bl	40aba0 <sd_device_get_sysname@plt>
  422de0:	adrp	x0, 454000 <__func__.10675+0xa0>
  422de4:	add	x20, x0, #0xbb
  422de8:	ldr	x0, [sp, #840]
  422dec:	cmp	x0, #0x0
  422df0:	b.eq	422e00 <parse_token+0x117c>  // b.none
  422df4:	adrp	x0, 454000 <__func__.10675+0xa0>
  422df8:	add	x19, x0, #0xd8
  422dfc:	b	422e04 <parse_token+0x1180>
  422e00:	mov	x19, #0x0                   	// #0
  422e04:	ldr	x21, [sp, #840]
  422e08:	ldr	x0, [sp, #3848]
  422e0c:	bl	41fb4c <strna>
  422e10:	mov	x2, x0
  422e14:	ldr	x0, [sp, #3840]
  422e18:	cmp	x0, #0x0
  422e1c:	b.eq	422e2c <parse_token+0x11a8>  // b.none
  422e20:	ldr	x0, [sp, #3840]
  422e24:	ldr	w0, [x0, #8]
  422e28:	b	422e30 <parse_token+0x11ac>
  422e2c:	mov	w0, #0x0                   	// #0
  422e30:	ldr	x1, [sp, #128]
  422e34:	str	x1, [sp, #40]
  422e38:	adrp	x1, 454000 <__func__.10675+0xa0>
  422e3c:	add	x1, x1, #0x348
  422e40:	str	x1, [sp, #32]
  422e44:	str	w0, [sp, #24]
  422e48:	str	x2, [sp, #16]
  422e4c:	adrp	x0, 454000 <__func__.10675+0xa0>
  422e50:	add	x0, x0, #0x288
  422e54:	str	x0, [sp, #8]
  422e58:	str	xzr, [sp]
  422e5c:	mov	x7, #0x0                   	// #0
  422e60:	mov	x6, x21
  422e64:	mov	x5, x19
  422e68:	adrp	x0, 455000 <__func__.10675+0x10a0>
  422e6c:	add	x4, x0, #0x920
  422e70:	mov	w3, #0x248                 	// #584
  422e74:	mov	x2, x20
  422e78:	ldr	w1, [sp, #764]
  422e7c:	ldr	w0, [sp, #760]
  422e80:	bl	40b020 <log_object_internal@plt>
  422e84:	b	42a9c0 <parse_token+0x8d3c>
  422e88:	ldr	w0, [sp, #116]
  422e8c:	cmp	w0, #0x2
  422e90:	b.ne	422ff4 <parse_token+0x1370>  // b.any
  422e94:	ldr	x0, [sp, #136]
  422e98:	str	x0, [sp, #3704]
  422e9c:	ldr	x0, [sp, #3704]
  422ea0:	cmp	x0, #0x0
  422ea4:	b.eq	422eb4 <parse_token+0x1230>  // b.none
  422ea8:	ldr	x0, [sp, #3704]
  422eac:	ldr	x0, [x0, #32]
  422eb0:	b	422eb8 <parse_token+0x1234>
  422eb4:	mov	x0, #0x0                   	// #0
  422eb8:	str	x0, [sp, #3712]
  422ebc:	ldr	x0, [sp, #3712]
  422ec0:	cmp	x0, #0x0
  422ec4:	b.eq	422ed4 <parse_token+0x1250>  // b.none
  422ec8:	ldr	x0, [sp, #3712]
  422ecc:	ldr	x0, [x0, #8]
  422ed0:	b	422ed8 <parse_token+0x1254>
  422ed4:	mov	x0, #0x0                   	// #0
  422ed8:	str	x0, [sp, #3720]
  422edc:	ldr	x0, [sp, #3712]
  422ee0:	cmp	x0, #0x0
  422ee4:	b.eq	422ef4 <parse_token+0x1270>  // b.none
  422ee8:	ldr	x0, [sp, #3712]
  422eec:	ldr	x0, [x0]
  422ef0:	b	422ef8 <parse_token+0x1274>
  422ef4:	mov	x0, #0x0                   	// #0
  422ef8:	str	x0, [sp, #3728]
  422efc:	str	xzr, [sp, #840]
  422f00:	str	xzr, [sp, #3736]
  422f04:	mov	w0, #0x4                   	// #4
  422f08:	str	w0, [sp, #736]
  422f0c:	str	wzr, [sp, #740]
  422f10:	ldr	x0, [sp, #3736]
  422f14:	cmp	x0, #0x0
  422f18:	b.eq	422f54 <parse_token+0x12d0>  // b.none
  422f1c:	mov	w0, #0x1                   	// #1
  422f20:	bl	40be30 <log_get_max_level_realm@plt>
  422f24:	mov	w1, w0
  422f28:	ldr	w0, [sp, #736]
  422f2c:	cmp	w0, w1
  422f30:	cset	w0, le
  422f34:	and	w0, w0, #0xff
  422f38:	and	x0, x0, #0xff
  422f3c:	cmp	x0, #0x0
  422f40:	b.eq	422f54 <parse_token+0x12d0>  // b.none
  422f44:	add	x0, sp, #0x348
  422f48:	mov	x1, x0
  422f4c:	ldr	x0, [sp, #3736]
  422f50:	bl	40aba0 <sd_device_get_sysname@plt>
  422f54:	adrp	x0, 454000 <__func__.10675+0xa0>
  422f58:	add	x20, x0, #0xbb
  422f5c:	ldr	x0, [sp, #840]
  422f60:	cmp	x0, #0x0
  422f64:	b.eq	422f74 <parse_token+0x12f0>  // b.none
  422f68:	adrp	x0, 454000 <__func__.10675+0xa0>
  422f6c:	add	x19, x0, #0xd8
  422f70:	b	422f78 <parse_token+0x12f4>
  422f74:	mov	x19, #0x0                   	// #0
  422f78:	ldr	x21, [sp, #840]
  422f7c:	ldr	x0, [sp, #3728]
  422f80:	bl	41fb4c <strna>
  422f84:	mov	x2, x0
  422f88:	ldr	x0, [sp, #3720]
  422f8c:	cmp	x0, #0x0
  422f90:	b.eq	422fa0 <parse_token+0x131c>  // b.none
  422f94:	ldr	x0, [sp, #3720]
  422f98:	ldr	w0, [x0, #8]
  422f9c:	b	422fa4 <parse_token+0x1320>
  422fa0:	mov	w0, #0x0                   	// #0
  422fa4:	ldr	x1, [sp, #128]
  422fa8:	str	x1, [sp, #32]
  422fac:	str	w0, [sp, #24]
  422fb0:	str	x2, [sp, #16]
  422fb4:	adrp	x0, 454000 <__func__.10675+0xa0>
  422fb8:	add	x0, x0, #0x370
  422fbc:	str	x0, [sp, #8]
  422fc0:	str	xzr, [sp]
  422fc4:	mov	x7, #0x0                   	// #0
  422fc8:	mov	x6, x21
  422fcc:	mov	x5, x19
  422fd0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  422fd4:	add	x4, x0, #0x920
  422fd8:	mov	w3, #0x24a                 	// #586
  422fdc:	mov	x2, x20
  422fe0:	ldr	w1, [sp, #740]
  422fe4:	ldr	w0, [sp, #736]
  422fe8:	bl	40b020 <log_object_internal@plt>
  422fec:	mov	w0, #0x4                   	// #4
  422ff0:	str	w0, [sp, #116]
  422ff4:	ldrb	w0, [sp, #147]
  422ff8:	eor	w0, w0, #0x1
  422ffc:	and	w0, w0, #0xff
  423000:	cmp	w0, #0x0
  423004:	b.eq	423320 <parse_token+0x169c>  // b.none
  423008:	adrp	x0, 454000 <__func__.10675+0xa0>
  42300c:	add	x1, x0, #0x3c8
  423010:	ldr	x0, [sp, #104]
  423014:	bl	40b710 <strcmp@plt>
  423018:	cmp	w0, #0x0
  42301c:	b.ne	42317c <parse_token+0x14f8>  // b.any
  423020:	ldr	x0, [sp, #136]
  423024:	str	x0, [sp, #3784]
  423028:	ldr	x0, [sp, #3784]
  42302c:	cmp	x0, #0x0
  423030:	b.eq	423040 <parse_token+0x13bc>  // b.none
  423034:	ldr	x0, [sp, #3784]
  423038:	ldr	x0, [x0, #32]
  42303c:	b	423044 <parse_token+0x13c0>
  423040:	mov	x0, #0x0                   	// #0
  423044:	str	x0, [sp, #3792]
  423048:	ldr	x0, [sp, #3792]
  42304c:	cmp	x0, #0x0
  423050:	b.eq	423060 <parse_token+0x13dc>  // b.none
  423054:	ldr	x0, [sp, #3792]
  423058:	ldr	x0, [x0, #8]
  42305c:	b	423064 <parse_token+0x13e0>
  423060:	mov	x0, #0x0                   	// #0
  423064:	str	x0, [sp, #3800]
  423068:	ldr	x0, [sp, #3792]
  42306c:	cmp	x0, #0x0
  423070:	b.eq	423080 <parse_token+0x13fc>  // b.none
  423074:	ldr	x0, [sp, #3792]
  423078:	ldr	x0, [x0]
  42307c:	b	423084 <parse_token+0x1400>
  423080:	mov	x0, #0x0                   	// #0
  423084:	str	x0, [sp, #3808]
  423088:	str	xzr, [sp, #840]
  42308c:	str	xzr, [sp, #3816]
  423090:	mov	w0, #0x3                   	// #3
  423094:	str	w0, [sp, #752]
  423098:	mov	w0, #0x16                  	// #22
  42309c:	movk	w0, #0x4000, lsl #16
  4230a0:	str	w0, [sp, #756]
  4230a4:	ldr	x0, [sp, #3816]
  4230a8:	cmp	x0, #0x0
  4230ac:	b.eq	4230e8 <parse_token+0x1464>  // b.none
  4230b0:	mov	w0, #0x1                   	// #1
  4230b4:	bl	40be30 <log_get_max_level_realm@plt>
  4230b8:	mov	w1, w0
  4230bc:	ldr	w0, [sp, #752]
  4230c0:	cmp	w0, w1
  4230c4:	cset	w0, le
  4230c8:	and	w0, w0, #0xff
  4230cc:	and	x0, x0, #0xff
  4230d0:	cmp	x0, #0x0
  4230d4:	b.eq	4230e8 <parse_token+0x1464>  // b.none
  4230d8:	add	x0, sp, #0x348
  4230dc:	mov	x1, x0
  4230e0:	ldr	x0, [sp, #3816]
  4230e4:	bl	40aba0 <sd_device_get_sysname@plt>
  4230e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4230ec:	add	x20, x0, #0xbb
  4230f0:	ldr	x0, [sp, #840]
  4230f4:	cmp	x0, #0x0
  4230f8:	b.eq	423108 <parse_token+0x1484>  // b.none
  4230fc:	adrp	x0, 454000 <__func__.10675+0xa0>
  423100:	add	x19, x0, #0xd8
  423104:	b	42310c <parse_token+0x1488>
  423108:	mov	x19, #0x0                   	// #0
  42310c:	ldr	x21, [sp, #840]
  423110:	ldr	x0, [sp, #3808]
  423114:	bl	41fb4c <strna>
  423118:	mov	x1, x0
  42311c:	ldr	x0, [sp, #3800]
  423120:	cmp	x0, #0x0
  423124:	b.eq	423134 <parse_token+0x14b0>  // b.none
  423128:	ldr	x0, [sp, #3800]
  42312c:	ldr	w0, [x0, #8]
  423130:	b	423138 <parse_token+0x14b4>
  423134:	mov	w0, #0x0                   	// #0
  423138:	str	w0, [sp, #24]
  42313c:	str	x1, [sp, #16]
  423140:	adrp	x0, 454000 <__func__.10675+0xa0>
  423144:	add	x0, x0, #0x3d0
  423148:	str	x0, [sp, #8]
  42314c:	str	xzr, [sp]
  423150:	mov	x7, #0x0                   	// #0
  423154:	mov	x6, x21
  423158:	mov	x5, x19
  42315c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  423160:	add	x4, x0, #0x920
  423164:	mov	w3, #0x250                 	// #592
  423168:	mov	x2, x20
  42316c:	ldr	w1, [sp, #756]
  423170:	ldr	w0, [sp, #752]
  423174:	bl	40b020 <log_object_internal@plt>
  423178:	b	42a9c0 <parse_token+0x8d3c>
  42317c:	ldr	x0, [sp, #104]
  423180:	bl	41fb70 <isempty>
  423184:	and	w0, w0, #0xff
  423188:	cmp	w0, #0x0
  42318c:	b.eq	4232ec <parse_token+0x1668>  // b.none
  423190:	ldr	x0, [sp, #136]
  423194:	str	x0, [sp, #3744]
  423198:	ldr	x0, [sp, #3744]
  42319c:	cmp	x0, #0x0
  4231a0:	b.eq	4231b0 <parse_token+0x152c>  // b.none
  4231a4:	ldr	x0, [sp, #3744]
  4231a8:	ldr	x0, [x0, #32]
  4231ac:	b	4231b4 <parse_token+0x1530>
  4231b0:	mov	x0, #0x0                   	// #0
  4231b4:	str	x0, [sp, #3752]
  4231b8:	ldr	x0, [sp, #3752]
  4231bc:	cmp	x0, #0x0
  4231c0:	b.eq	4231d0 <parse_token+0x154c>  // b.none
  4231c4:	ldr	x0, [sp, #3752]
  4231c8:	ldr	x0, [x0, #8]
  4231cc:	b	4231d4 <parse_token+0x1550>
  4231d0:	mov	x0, #0x0                   	// #0
  4231d4:	str	x0, [sp, #3760]
  4231d8:	ldr	x0, [sp, #3752]
  4231dc:	cmp	x0, #0x0
  4231e0:	b.eq	4231f0 <parse_token+0x156c>  // b.none
  4231e4:	ldr	x0, [sp, #3752]
  4231e8:	ldr	x0, [x0]
  4231ec:	b	4231f4 <parse_token+0x1570>
  4231f0:	mov	x0, #0x0                   	// #0
  4231f4:	str	x0, [sp, #3768]
  4231f8:	str	xzr, [sp, #840]
  4231fc:	str	xzr, [sp, #3776]
  423200:	mov	w0, #0x3                   	// #3
  423204:	str	w0, [sp, #744]
  423208:	mov	w0, #0x16                  	// #22
  42320c:	movk	w0, #0x4000, lsl #16
  423210:	str	w0, [sp, #748]
  423214:	ldr	x0, [sp, #3776]
  423218:	cmp	x0, #0x0
  42321c:	b.eq	423258 <parse_token+0x15d4>  // b.none
  423220:	mov	w0, #0x1                   	// #1
  423224:	bl	40be30 <log_get_max_level_realm@plt>
  423228:	mov	w1, w0
  42322c:	ldr	w0, [sp, #744]
  423230:	cmp	w0, w1
  423234:	cset	w0, le
  423238:	and	w0, w0, #0xff
  42323c:	and	x0, x0, #0xff
  423240:	cmp	x0, #0x0
  423244:	b.eq	423258 <parse_token+0x15d4>  // b.none
  423248:	add	x0, sp, #0x348
  42324c:	mov	x1, x0
  423250:	ldr	x0, [sp, #3776]
  423254:	bl	40aba0 <sd_device_get_sysname@plt>
  423258:	adrp	x0, 454000 <__func__.10675+0xa0>
  42325c:	add	x20, x0, #0xbb
  423260:	ldr	x0, [sp, #840]
  423264:	cmp	x0, #0x0
  423268:	b.eq	423278 <parse_token+0x15f4>  // b.none
  42326c:	adrp	x0, 454000 <__func__.10675+0xa0>
  423270:	add	x19, x0, #0xd8
  423274:	b	42327c <parse_token+0x15f8>
  423278:	mov	x19, #0x0                   	// #0
  42327c:	ldr	x21, [sp, #840]
  423280:	ldr	x0, [sp, #3768]
  423284:	bl	41fb4c <strna>
  423288:	mov	x1, x0
  42328c:	ldr	x0, [sp, #3760]
  423290:	cmp	x0, #0x0
  423294:	b.eq	4232a4 <parse_token+0x1620>  // b.none
  423298:	ldr	x0, [sp, #3760]
  42329c:	ldr	w0, [x0, #8]
  4232a0:	b	4232a8 <parse_token+0x1624>
  4232a4:	mov	w0, #0x0                   	// #0
  4232a8:	str	w0, [sp, #24]
  4232ac:	str	x1, [sp, #16]
  4232b0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4232b4:	add	x0, x0, #0x420
  4232b8:	str	x0, [sp, #8]
  4232bc:	str	xzr, [sp]
  4232c0:	mov	x7, #0x0                   	// #0
  4232c4:	mov	x6, x21
  4232c8:	mov	x5, x19
  4232cc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4232d0:	add	x4, x0, #0x920
  4232d4:	mov	w3, #0x253                 	// #595
  4232d8:	mov	x2, x20
  4232dc:	ldr	w1, [sp, #748]
  4232e0:	ldr	w0, [sp, #744]
  4232e4:	bl	40b020 <log_object_internal@plt>
  4232e8:	b	42a9c0 <parse_token+0x8d3c>
  4232ec:	mov	w3, #0x0                   	// #0
  4232f0:	ldr	x2, [sp, #104]
  4232f4:	ldr	x1, [sp, #128]
  4232f8:	ldr	x0, [sp, #136]
  4232fc:	bl	421544 <check_value_format_and_warn>
  423300:	mov	x4, #0x0                   	// #0
  423304:	ldr	x3, [sp, #104]
  423308:	ldr	w2, [sp, #116]
  42330c:	mov	w1, #0x29                  	// #41
  423310:	ldr	x0, [sp, #848]
  423314:	bl	420e88 <rule_line_add_token>
  423318:	str	w0, [sp, #152]
  42331c:	b	42a990 <parse_token+0x8d0c>
  423320:	mov	x4, #0x0                   	// #0
  423324:	ldr	x3, [sp, #104]
  423328:	ldr	w2, [sp, #116]
  42332c:	mov	w1, #0x4                   	// #4
  423330:	ldr	x0, [sp, #848]
  423334:	bl	420e88 <rule_line_add_token>
  423338:	str	w0, [sp, #152]
  42333c:	b	42a990 <parse_token+0x8d0c>
  423340:	adrp	x0, 454000 <__func__.10675+0xa0>
  423344:	add	x1, x0, #0x468
  423348:	ldr	x0, [sp, #128]
  42334c:	bl	40b710 <strcmp@plt>
  423350:	cmp	w0, #0x0
  423354:	b.ne	4239f0 <parse_token+0x1d6c>  // b.any
  423358:	ldr	x0, [sp, #120]
  42335c:	bl	41fb70 <isempty>
  423360:	and	w0, w0, #0xff
  423364:	cmp	w0, #0x0
  423368:	b.eq	4234dc <parse_token+0x1858>  // b.none
  42336c:	ldr	x0, [sp, #136]
  423370:	str	x0, [sp, #3664]
  423374:	ldr	x0, [sp, #3664]
  423378:	cmp	x0, #0x0
  42337c:	b.eq	42338c <parse_token+0x1708>  // b.none
  423380:	ldr	x0, [sp, #3664]
  423384:	ldr	x0, [x0, #32]
  423388:	b	423390 <parse_token+0x170c>
  42338c:	mov	x0, #0x0                   	// #0
  423390:	str	x0, [sp, #3672]
  423394:	ldr	x0, [sp, #3672]
  423398:	cmp	x0, #0x0
  42339c:	b.eq	4233ac <parse_token+0x1728>  // b.none
  4233a0:	ldr	x0, [sp, #3672]
  4233a4:	ldr	x0, [x0, #8]
  4233a8:	b	4233b0 <parse_token+0x172c>
  4233ac:	mov	x0, #0x0                   	// #0
  4233b0:	str	x0, [sp, #3680]
  4233b4:	ldr	x0, [sp, #3672]
  4233b8:	cmp	x0, #0x0
  4233bc:	b.eq	4233cc <parse_token+0x1748>  // b.none
  4233c0:	ldr	x0, [sp, #3672]
  4233c4:	ldr	x0, [x0]
  4233c8:	b	4233d0 <parse_token+0x174c>
  4233cc:	mov	x0, #0x0                   	// #0
  4233d0:	str	x0, [sp, #3688]
  4233d4:	str	xzr, [sp, #840]
  4233d8:	str	xzr, [sp, #3696]
  4233dc:	mov	w0, #0x3                   	// #3
  4233e0:	str	w0, [sp, #728]
  4233e4:	mov	w0, #0x16                  	// #22
  4233e8:	movk	w0, #0x4000, lsl #16
  4233ec:	str	w0, [sp, #732]
  4233f0:	ldr	x0, [sp, #3696]
  4233f4:	cmp	x0, #0x0
  4233f8:	b.eq	423434 <parse_token+0x17b0>  // b.none
  4233fc:	mov	w0, #0x1                   	// #1
  423400:	bl	40be30 <log_get_max_level_realm@plt>
  423404:	mov	w1, w0
  423408:	ldr	w0, [sp, #728]
  42340c:	cmp	w0, w1
  423410:	cset	w0, le
  423414:	and	w0, w0, #0xff
  423418:	and	x0, x0, #0xff
  42341c:	cmp	x0, #0x0
  423420:	b.eq	423434 <parse_token+0x17b0>  // b.none
  423424:	add	x0, sp, #0x348
  423428:	mov	x1, x0
  42342c:	ldr	x0, [sp, #3696]
  423430:	bl	40aba0 <sd_device_get_sysname@plt>
  423434:	adrp	x0, 454000 <__func__.10675+0xa0>
  423438:	add	x20, x0, #0xbb
  42343c:	ldr	x0, [sp, #840]
  423440:	cmp	x0, #0x0
  423444:	b.eq	423454 <parse_token+0x17d0>  // b.none
  423448:	adrp	x0, 454000 <__func__.10675+0xa0>
  42344c:	add	x19, x0, #0xd8
  423450:	b	423458 <parse_token+0x17d4>
  423454:	mov	x19, #0x0                   	// #0
  423458:	ldr	x21, [sp, #840]
  42345c:	ldr	x0, [sp, #3688]
  423460:	bl	41fb4c <strna>
  423464:	mov	x2, x0
  423468:	ldr	x0, [sp, #3680]
  42346c:	cmp	x0, #0x0
  423470:	b.eq	423480 <parse_token+0x17fc>  // b.none
  423474:	ldr	x0, [sp, #3680]
  423478:	ldr	w0, [x0, #8]
  42347c:	b	423484 <parse_token+0x1800>
  423480:	mov	w0, #0x0                   	// #0
  423484:	ldr	x1, [sp, #128]
  423488:	str	x1, [sp, #40]
  42348c:	adrp	x1, 454000 <__func__.10675+0xa0>
  423490:	add	x1, x1, #0x278
  423494:	str	x1, [sp, #32]
  423498:	str	w0, [sp, #24]
  42349c:	str	x2, [sp, #16]
  4234a0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4234a4:	add	x0, x0, #0x288
  4234a8:	str	x0, [sp, #8]
  4234ac:	str	xzr, [sp]
  4234b0:	mov	x7, #0x0                   	// #0
  4234b4:	mov	x6, x21
  4234b8:	mov	x5, x19
  4234bc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4234c0:	add	x4, x0, #0x920
  4234c4:	mov	w3, #0x25c                 	// #604
  4234c8:	mov	x2, x20
  4234cc:	ldr	w1, [sp, #732]
  4234d0:	ldr	w0, [sp, #728]
  4234d4:	bl	40b020 <log_object_internal@plt>
  4234d8:	b	42a9c0 <parse_token+0x8d3c>
  4234dc:	ldr	w0, [sp, #116]
  4234e0:	cmp	w0, #0x3
  4234e4:	b.ne	423658 <parse_token+0x19d4>  // b.any
  4234e8:	ldr	x0, [sp, #136]
  4234ec:	str	x0, [sp, #3624]
  4234f0:	ldr	x0, [sp, #3624]
  4234f4:	cmp	x0, #0x0
  4234f8:	b.eq	423508 <parse_token+0x1884>  // b.none
  4234fc:	ldr	x0, [sp, #3624]
  423500:	ldr	x0, [x0, #32]
  423504:	b	42350c <parse_token+0x1888>
  423508:	mov	x0, #0x0                   	// #0
  42350c:	str	x0, [sp, #3632]
  423510:	ldr	x0, [sp, #3632]
  423514:	cmp	x0, #0x0
  423518:	b.eq	423528 <parse_token+0x18a4>  // b.none
  42351c:	ldr	x0, [sp, #3632]
  423520:	ldr	x0, [x0, #8]
  423524:	b	42352c <parse_token+0x18a8>
  423528:	mov	x0, #0x0                   	// #0
  42352c:	str	x0, [sp, #3640]
  423530:	ldr	x0, [sp, #3632]
  423534:	cmp	x0, #0x0
  423538:	b.eq	423548 <parse_token+0x18c4>  // b.none
  42353c:	ldr	x0, [sp, #3632]
  423540:	ldr	x0, [x0]
  423544:	b	42354c <parse_token+0x18c8>
  423548:	mov	x0, #0x0                   	// #0
  42354c:	str	x0, [sp, #3648]
  423550:	str	xzr, [sp, #840]
  423554:	str	xzr, [sp, #3656]
  423558:	mov	w0, #0x3                   	// #3
  42355c:	str	w0, [sp, #720]
  423560:	mov	w0, #0x16                  	// #22
  423564:	movk	w0, #0x4000, lsl #16
  423568:	str	w0, [sp, #724]
  42356c:	ldr	x0, [sp, #3656]
  423570:	cmp	x0, #0x0
  423574:	b.eq	4235b0 <parse_token+0x192c>  // b.none
  423578:	mov	w0, #0x1                   	// #1
  42357c:	bl	40be30 <log_get_max_level_realm@plt>
  423580:	mov	w1, w0
  423584:	ldr	w0, [sp, #720]
  423588:	cmp	w0, w1
  42358c:	cset	w0, le
  423590:	and	w0, w0, #0xff
  423594:	and	x0, x0, #0xff
  423598:	cmp	x0, #0x0
  42359c:	b.eq	4235b0 <parse_token+0x192c>  // b.none
  4235a0:	add	x0, sp, #0x348
  4235a4:	mov	x1, x0
  4235a8:	ldr	x0, [sp, #3656]
  4235ac:	bl	40aba0 <sd_device_get_sysname@plt>
  4235b0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4235b4:	add	x20, x0, #0xbb
  4235b8:	ldr	x0, [sp, #840]
  4235bc:	cmp	x0, #0x0
  4235c0:	b.eq	4235d0 <parse_token+0x194c>  // b.none
  4235c4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4235c8:	add	x19, x0, #0xd8
  4235cc:	b	4235d4 <parse_token+0x1950>
  4235d0:	mov	x19, #0x0                   	// #0
  4235d4:	ldr	x21, [sp, #840]
  4235d8:	ldr	x0, [sp, #3648]
  4235dc:	bl	41fb4c <strna>
  4235e0:	mov	x2, x0
  4235e4:	ldr	x0, [sp, #3640]
  4235e8:	cmp	x0, #0x0
  4235ec:	b.eq	4235fc <parse_token+0x1978>  // b.none
  4235f0:	ldr	x0, [sp, #3640]
  4235f4:	ldr	w0, [x0, #8]
  4235f8:	b	423600 <parse_token+0x197c>
  4235fc:	mov	w0, #0x0                   	// #0
  423600:	ldr	x1, [sp, #128]
  423604:	str	x1, [sp, #40]
  423608:	adrp	x1, 454000 <__func__.10675+0xa0>
  42360c:	add	x1, x1, #0x348
  423610:	str	x1, [sp, #32]
  423614:	str	w0, [sp, #24]
  423618:	str	x2, [sp, #16]
  42361c:	adrp	x0, 454000 <__func__.10675+0xa0>
  423620:	add	x0, x0, #0x288
  423624:	str	x0, [sp, #8]
  423628:	str	xzr, [sp]
  42362c:	mov	x7, #0x0                   	// #0
  423630:	mov	x6, x21
  423634:	mov	x5, x19
  423638:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42363c:	add	x4, x0, #0x920
  423640:	mov	w3, #0x25e                 	// #606
  423644:	mov	x2, x20
  423648:	ldr	w1, [sp, #724]
  42364c:	ldr	w0, [sp, #720]
  423650:	bl	40b020 <log_object_internal@plt>
  423654:	b	42a9c0 <parse_token+0x8d3c>
  423658:	ldr	w0, [sp, #116]
  42365c:	cmp	w0, #0x5
  423660:	b.ne	4237c4 <parse_token+0x1b40>  // b.any
  423664:	ldr	x0, [sp, #136]
  423668:	str	x0, [sp, #3544]
  42366c:	ldr	x0, [sp, #3544]
  423670:	cmp	x0, #0x0
  423674:	b.eq	423684 <parse_token+0x1a00>  // b.none
  423678:	ldr	x0, [sp, #3544]
  42367c:	ldr	x0, [x0, #32]
  423680:	b	423688 <parse_token+0x1a04>
  423684:	mov	x0, #0x0                   	// #0
  423688:	str	x0, [sp, #3552]
  42368c:	ldr	x0, [sp, #3552]
  423690:	cmp	x0, #0x0
  423694:	b.eq	4236a4 <parse_token+0x1a20>  // b.none
  423698:	ldr	x0, [sp, #3552]
  42369c:	ldr	x0, [x0, #8]
  4236a0:	b	4236a8 <parse_token+0x1a24>
  4236a4:	mov	x0, #0x0                   	// #0
  4236a8:	str	x0, [sp, #3560]
  4236ac:	ldr	x0, [sp, #3552]
  4236b0:	cmp	x0, #0x0
  4236b4:	b.eq	4236c4 <parse_token+0x1a40>  // b.none
  4236b8:	ldr	x0, [sp, #3552]
  4236bc:	ldr	x0, [x0]
  4236c0:	b	4236c8 <parse_token+0x1a44>
  4236c4:	mov	x0, #0x0                   	// #0
  4236c8:	str	x0, [sp, #3568]
  4236cc:	str	xzr, [sp, #840]
  4236d0:	str	xzr, [sp, #3576]
  4236d4:	mov	w0, #0x4                   	// #4
  4236d8:	str	w0, [sp, #704]
  4236dc:	str	wzr, [sp, #708]
  4236e0:	ldr	x0, [sp, #3576]
  4236e4:	cmp	x0, #0x0
  4236e8:	b.eq	423724 <parse_token+0x1aa0>  // b.none
  4236ec:	mov	w0, #0x1                   	// #1
  4236f0:	bl	40be30 <log_get_max_level_realm@plt>
  4236f4:	mov	w1, w0
  4236f8:	ldr	w0, [sp, #704]
  4236fc:	cmp	w0, w1
  423700:	cset	w0, le
  423704:	and	w0, w0, #0xff
  423708:	and	x0, x0, #0xff
  42370c:	cmp	x0, #0x0
  423710:	b.eq	423724 <parse_token+0x1aa0>  // b.none
  423714:	add	x0, sp, #0x348
  423718:	mov	x1, x0
  42371c:	ldr	x0, [sp, #3576]
  423720:	bl	40aba0 <sd_device_get_sysname@plt>
  423724:	adrp	x0, 454000 <__func__.10675+0xa0>
  423728:	add	x20, x0, #0xbb
  42372c:	ldr	x0, [sp, #840]
  423730:	cmp	x0, #0x0
  423734:	b.eq	423744 <parse_token+0x1ac0>  // b.none
  423738:	adrp	x0, 454000 <__func__.10675+0xa0>
  42373c:	add	x19, x0, #0xd8
  423740:	b	423748 <parse_token+0x1ac4>
  423744:	mov	x19, #0x0                   	// #0
  423748:	ldr	x21, [sp, #840]
  42374c:	ldr	x0, [sp, #3568]
  423750:	bl	41fb4c <strna>
  423754:	mov	x2, x0
  423758:	ldr	x0, [sp, #3560]
  42375c:	cmp	x0, #0x0
  423760:	b.eq	423770 <parse_token+0x1aec>  // b.none
  423764:	ldr	x0, [sp, #3560]
  423768:	ldr	w0, [x0, #8]
  42376c:	b	423774 <parse_token+0x1af0>
  423770:	mov	w0, #0x0                   	// #0
  423774:	ldr	x1, [sp, #128]
  423778:	str	x1, [sp, #32]
  42377c:	str	w0, [sp, #24]
  423780:	str	x2, [sp, #16]
  423784:	adrp	x0, 454000 <__func__.10675+0xa0>
  423788:	add	x0, x0, #0x470
  42378c:	str	x0, [sp, #8]
  423790:	str	xzr, [sp]
  423794:	mov	x7, #0x0                   	// #0
  423798:	mov	x6, x21
  42379c:	mov	x5, x19
  4237a0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4237a4:	add	x4, x0, #0x920
  4237a8:	mov	w3, #0x260                 	// #608
  4237ac:	mov	x2, x20
  4237b0:	ldr	w1, [sp, #708]
  4237b4:	ldr	w0, [sp, #704]
  4237b8:	bl	40b020 <log_object_internal@plt>
  4237bc:	mov	w0, #0x4                   	// #4
  4237c0:	str	w0, [sp, #116]
  4237c4:	ldrb	w0, [sp, #147]
  4237c8:	eor	w0, w0, #0x1
  4237cc:	and	w0, w0, #0xff
  4237d0:	cmp	w0, #0x0
  4237d4:	b.eq	4239d0 <parse_token+0x1d4c>  // b.none
  4237d8:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4237dc:	add	x1, x0, #0x38
  4237e0:	add	x0, sp, #0x1, lsl #12
  4237e4:	add	x0, x0, #0x80
  4237e8:	ldp	x2, x3, [x1]
  4237ec:	stp	x2, x3, [x0]
  4237f0:	ldp	x2, x3, [x1, #16]
  4237f4:	stp	x2, x3, [x0, #16]
  4237f8:	ldp	x2, x3, [x1, #32]
  4237fc:	stp	x2, x3, [x0, #32]
  423800:	ldp	x2, x3, [x1, #48]
  423804:	stp	x2, x3, [x0, #48]
  423808:	ldp	x2, x3, [x1, #64]
  42380c:	stp	x2, x3, [x0, #64]
  423810:	ldp	x2, x3, [x1, #80]
  423814:	stp	x2, x3, [x0, #80]
  423818:	ldr	x1, [x1, #96]
  42381c:	str	x1, [x0, #96]
  423820:	add	x0, sp, #0x1, lsl #12
  423824:	add	x0, x0, #0x80
  423828:	ldr	x1, [sp, #120]
  42382c:	bl	40b450 <strv_find@plt>
  423830:	cmp	x0, #0x0
  423834:	b.eq	42399c <parse_token+0x1d18>  // b.none
  423838:	ldr	x0, [sp, #136]
  42383c:	str	x0, [sp, #3584]
  423840:	ldr	x0, [sp, #3584]
  423844:	cmp	x0, #0x0
  423848:	b.eq	423858 <parse_token+0x1bd4>  // b.none
  42384c:	ldr	x0, [sp, #3584]
  423850:	ldr	x0, [x0, #32]
  423854:	b	42385c <parse_token+0x1bd8>
  423858:	mov	x0, #0x0                   	// #0
  42385c:	str	x0, [sp, #3592]
  423860:	ldr	x0, [sp, #3592]
  423864:	cmp	x0, #0x0
  423868:	b.eq	423878 <parse_token+0x1bf4>  // b.none
  42386c:	ldr	x0, [sp, #3592]
  423870:	ldr	x0, [x0, #8]
  423874:	b	42387c <parse_token+0x1bf8>
  423878:	mov	x0, #0x0                   	// #0
  42387c:	str	x0, [sp, #3600]
  423880:	ldr	x0, [sp, #3592]
  423884:	cmp	x0, #0x0
  423888:	b.eq	423898 <parse_token+0x1c14>  // b.none
  42388c:	ldr	x0, [sp, #3592]
  423890:	ldr	x0, [x0]
  423894:	b	42389c <parse_token+0x1c18>
  423898:	mov	x0, #0x0                   	// #0
  42389c:	str	x0, [sp, #3608]
  4238a0:	str	xzr, [sp, #840]
  4238a4:	str	xzr, [sp, #3616]
  4238a8:	mov	w0, #0x3                   	// #3
  4238ac:	str	w0, [sp, #712]
  4238b0:	mov	w0, #0x16                  	// #22
  4238b4:	movk	w0, #0x4000, lsl #16
  4238b8:	str	w0, [sp, #716]
  4238bc:	ldr	x0, [sp, #3616]
  4238c0:	cmp	x0, #0x0
  4238c4:	b.eq	423900 <parse_token+0x1c7c>  // b.none
  4238c8:	mov	w0, #0x1                   	// #1
  4238cc:	bl	40be30 <log_get_max_level_realm@plt>
  4238d0:	mov	w1, w0
  4238d4:	ldr	w0, [sp, #712]
  4238d8:	cmp	w0, w1
  4238dc:	cset	w0, le
  4238e0:	and	w0, w0, #0xff
  4238e4:	and	x0, x0, #0xff
  4238e8:	cmp	x0, #0x0
  4238ec:	b.eq	423900 <parse_token+0x1c7c>  // b.none
  4238f0:	add	x0, sp, #0x348
  4238f4:	mov	x1, x0
  4238f8:	ldr	x0, [sp, #3616]
  4238fc:	bl	40aba0 <sd_device_get_sysname@plt>
  423900:	adrp	x0, 454000 <__func__.10675+0xa0>
  423904:	add	x20, x0, #0xbb
  423908:	ldr	x0, [sp, #840]
  42390c:	cmp	x0, #0x0
  423910:	b.eq	423920 <parse_token+0x1c9c>  // b.none
  423914:	adrp	x0, 454000 <__func__.10675+0xa0>
  423918:	add	x19, x0, #0xd8
  42391c:	b	423924 <parse_token+0x1ca0>
  423920:	mov	x19, #0x0                   	// #0
  423924:	ldr	x21, [sp, #840]
  423928:	ldr	x0, [sp, #3608]
  42392c:	bl	41fb4c <strna>
  423930:	mov	x2, x0
  423934:	ldr	x0, [sp, #3600]
  423938:	cmp	x0, #0x0
  42393c:	b.eq	42394c <parse_token+0x1cc8>  // b.none
  423940:	ldr	x0, [sp, #3600]
  423944:	ldr	w0, [x0, #8]
  423948:	b	423950 <parse_token+0x1ccc>
  42394c:	mov	w0, #0x0                   	// #0
  423950:	ldr	x1, [sp, #120]
  423954:	str	x1, [sp, #32]
  423958:	str	w0, [sp, #24]
  42395c:	str	x2, [sp, #16]
  423960:	adrp	x0, 454000 <__func__.10675+0xa0>
  423964:	add	x0, x0, #0x4c8
  423968:	str	x0, [sp, #8]
  42396c:	str	xzr, [sp]
  423970:	mov	x7, #0x0                   	// #0
  423974:	mov	x6, x21
  423978:	mov	x5, x19
  42397c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  423980:	add	x4, x0, #0x920
  423984:	mov	w3, #0x268                 	// #616
  423988:	mov	x2, x20
  42398c:	ldr	w1, [sp, #716]
  423990:	ldr	w0, [sp, #712]
  423994:	bl	40b020 <log_object_internal@plt>
  423998:	b	42a9c0 <parse_token+0x8d3c>
  42399c:	mov	w3, #0x0                   	// #0
  4239a0:	ldr	x2, [sp, #104]
  4239a4:	ldr	x1, [sp, #128]
  4239a8:	ldr	x0, [sp, #136]
  4239ac:	bl	421544 <check_value_format_and_warn>
  4239b0:	ldr	x4, [sp, #120]
  4239b4:	ldr	x3, [sp, #104]
  4239b8:	ldr	w2, [sp, #116]
  4239bc:	mov	w1, #0x28                  	// #40
  4239c0:	ldr	x0, [sp, #848]
  4239c4:	bl	420e88 <rule_line_add_token>
  4239c8:	str	w0, [sp, #152]
  4239cc:	b	42a990 <parse_token+0x8d0c>
  4239d0:	ldr	x4, [sp, #120]
  4239d4:	ldr	x3, [sp, #104]
  4239d8:	ldr	w2, [sp, #116]
  4239dc:	mov	w1, #0x5                   	// #5
  4239e0:	ldr	x0, [sp, #848]
  4239e4:	bl	420e88 <rule_line_add_token>
  4239e8:	str	w0, [sp, #152]
  4239ec:	b	42a990 <parse_token+0x8d0c>
  4239f0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4239f4:	add	x1, x0, #0x500
  4239f8:	ldr	x0, [sp, #128]
  4239fc:	bl	40b710 <strcmp@plt>
  423a00:	cmp	w0, #0x0
  423a04:	b.ne	423d6c <parse_token+0x20e8>  // b.any
  423a08:	ldr	x0, [sp, #120]
  423a0c:	bl	41fb70 <isempty>
  423a10:	and	w0, w0, #0xff
  423a14:	cmp	w0, #0x0
  423a18:	b.ne	423a58 <parse_token+0x1dd4>  // b.any
  423a1c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  423a20:	add	x0, x0, #0xa0
  423a24:	add	x2, sp, #0x1, lsl #12
  423a28:	add	x2, x2, #0x80
  423a2c:	mov	x3, x0
  423a30:	ldp	x0, x1, [x3]
  423a34:	stp	x0, x1, [x2]
  423a38:	ldr	x0, [x3, #16]
  423a3c:	str	x0, [x2, #16]
  423a40:	add	x0, sp, #0x1, lsl #12
  423a44:	add	x0, x0, #0x80
  423a48:	ldr	x1, [sp, #120]
  423a4c:	bl	40b450 <strv_find@plt>
  423a50:	cmp	x0, #0x0
  423a54:	b.ne	423bc8 <parse_token+0x1f44>  // b.any
  423a58:	ldr	x0, [sp, #136]
  423a5c:	str	x0, [sp, #3504]
  423a60:	ldr	x0, [sp, #3504]
  423a64:	cmp	x0, #0x0
  423a68:	b.eq	423a78 <parse_token+0x1df4>  // b.none
  423a6c:	ldr	x0, [sp, #3504]
  423a70:	ldr	x0, [x0, #32]
  423a74:	b	423a7c <parse_token+0x1df8>
  423a78:	mov	x0, #0x0                   	// #0
  423a7c:	str	x0, [sp, #3512]
  423a80:	ldr	x0, [sp, #3512]
  423a84:	cmp	x0, #0x0
  423a88:	b.eq	423a98 <parse_token+0x1e14>  // b.none
  423a8c:	ldr	x0, [sp, #3512]
  423a90:	ldr	x0, [x0, #8]
  423a94:	b	423a9c <parse_token+0x1e18>
  423a98:	mov	x0, #0x0                   	// #0
  423a9c:	str	x0, [sp, #3520]
  423aa0:	ldr	x0, [sp, #3512]
  423aa4:	cmp	x0, #0x0
  423aa8:	b.eq	423ab8 <parse_token+0x1e34>  // b.none
  423aac:	ldr	x0, [sp, #3512]
  423ab0:	ldr	x0, [x0]
  423ab4:	b	423abc <parse_token+0x1e38>
  423ab8:	mov	x0, #0x0                   	// #0
  423abc:	str	x0, [sp, #3528]
  423ac0:	str	xzr, [sp, #840]
  423ac4:	str	xzr, [sp, #3536]
  423ac8:	mov	w0, #0x3                   	// #3
  423acc:	str	w0, [sp, #696]
  423ad0:	mov	w0, #0x16                  	// #22
  423ad4:	movk	w0, #0x4000, lsl #16
  423ad8:	str	w0, [sp, #700]
  423adc:	ldr	x0, [sp, #3536]
  423ae0:	cmp	x0, #0x0
  423ae4:	b.eq	423b20 <parse_token+0x1e9c>  // b.none
  423ae8:	mov	w0, #0x1                   	// #1
  423aec:	bl	40be30 <log_get_max_level_realm@plt>
  423af0:	mov	w1, w0
  423af4:	ldr	w0, [sp, #696]
  423af8:	cmp	w0, w1
  423afc:	cset	w0, le
  423b00:	and	w0, w0, #0xff
  423b04:	and	x0, x0, #0xff
  423b08:	cmp	x0, #0x0
  423b0c:	b.eq	423b20 <parse_token+0x1e9c>  // b.none
  423b10:	add	x0, sp, #0x348
  423b14:	mov	x1, x0
  423b18:	ldr	x0, [sp, #3536]
  423b1c:	bl	40aba0 <sd_device_get_sysname@plt>
  423b20:	adrp	x0, 454000 <__func__.10675+0xa0>
  423b24:	add	x20, x0, #0xbb
  423b28:	ldr	x0, [sp, #840]
  423b2c:	cmp	x0, #0x0
  423b30:	b.eq	423b40 <parse_token+0x1ebc>  // b.none
  423b34:	adrp	x0, 454000 <__func__.10675+0xa0>
  423b38:	add	x19, x0, #0xd8
  423b3c:	b	423b44 <parse_token+0x1ec0>
  423b40:	mov	x19, #0x0                   	// #0
  423b44:	ldr	x21, [sp, #840]
  423b48:	ldr	x0, [sp, #3528]
  423b4c:	bl	41fb4c <strna>
  423b50:	mov	x2, x0
  423b54:	ldr	x0, [sp, #3520]
  423b58:	cmp	x0, #0x0
  423b5c:	b.eq	423b6c <parse_token+0x1ee8>  // b.none
  423b60:	ldr	x0, [sp, #3520]
  423b64:	ldr	w0, [x0, #8]
  423b68:	b	423b70 <parse_token+0x1eec>
  423b6c:	mov	w0, #0x0                   	// #0
  423b70:	ldr	x1, [sp, #128]
  423b74:	str	x1, [sp, #40]
  423b78:	adrp	x1, 454000 <__func__.10675+0xa0>
  423b7c:	add	x1, x1, #0x278
  423b80:	str	x1, [sp, #32]
  423b84:	str	w0, [sp, #24]
  423b88:	str	x2, [sp, #16]
  423b8c:	adrp	x0, 454000 <__func__.10675+0xa0>
  423b90:	add	x0, x0, #0x288
  423b94:	str	x0, [sp, #8]
  423b98:	str	xzr, [sp]
  423b9c:	mov	x7, #0x0                   	// #0
  423ba0:	mov	x6, x21
  423ba4:	mov	x5, x19
  423ba8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  423bac:	add	x4, x0, #0x920
  423bb0:	mov	w3, #0x272                 	// #626
  423bb4:	mov	x2, x20
  423bb8:	ldr	w1, [sp, #700]
  423bbc:	ldr	w0, [sp, #696]
  423bc0:	bl	40b020 <log_object_internal@plt>
  423bc4:	b	42a9c0 <parse_token+0x8d3c>
  423bc8:	ldrb	w0, [sp, #147]
  423bcc:	eor	w0, w0, #0x1
  423bd0:	and	w0, w0, #0xff
  423bd4:	cmp	w0, #0x0
  423bd8:	b.eq	423d4c <parse_token+0x20c8>  // b.none
  423bdc:	ldr	x0, [sp, #136]
  423be0:	str	x0, [sp, #3464]
  423be4:	ldr	x0, [sp, #3464]
  423be8:	cmp	x0, #0x0
  423bec:	b.eq	423bfc <parse_token+0x1f78>  // b.none
  423bf0:	ldr	x0, [sp, #3464]
  423bf4:	ldr	x0, [x0, #32]
  423bf8:	b	423c00 <parse_token+0x1f7c>
  423bfc:	mov	x0, #0x0                   	// #0
  423c00:	str	x0, [sp, #3472]
  423c04:	ldr	x0, [sp, #3472]
  423c08:	cmp	x0, #0x0
  423c0c:	b.eq	423c1c <parse_token+0x1f98>  // b.none
  423c10:	ldr	x0, [sp, #3472]
  423c14:	ldr	x0, [x0, #8]
  423c18:	b	423c20 <parse_token+0x1f9c>
  423c1c:	mov	x0, #0x0                   	// #0
  423c20:	str	x0, [sp, #3480]
  423c24:	ldr	x0, [sp, #3472]
  423c28:	cmp	x0, #0x0
  423c2c:	b.eq	423c3c <parse_token+0x1fb8>  // b.none
  423c30:	ldr	x0, [sp, #3472]
  423c34:	ldr	x0, [x0]
  423c38:	b	423c40 <parse_token+0x1fbc>
  423c3c:	mov	x0, #0x0                   	// #0
  423c40:	str	x0, [sp, #3488]
  423c44:	str	xzr, [sp, #840]
  423c48:	str	xzr, [sp, #3496]
  423c4c:	mov	w0, #0x3                   	// #3
  423c50:	str	w0, [sp, #688]
  423c54:	mov	w0, #0x16                  	// #22
  423c58:	movk	w0, #0x4000, lsl #16
  423c5c:	str	w0, [sp, #692]
  423c60:	ldr	x0, [sp, #3496]
  423c64:	cmp	x0, #0x0
  423c68:	b.eq	423ca4 <parse_token+0x2020>  // b.none
  423c6c:	mov	w0, #0x1                   	// #1
  423c70:	bl	40be30 <log_get_max_level_realm@plt>
  423c74:	mov	w1, w0
  423c78:	ldr	w0, [sp, #688]
  423c7c:	cmp	w0, w1
  423c80:	cset	w0, le
  423c84:	and	w0, w0, #0xff
  423c88:	and	x0, x0, #0xff
  423c8c:	cmp	x0, #0x0
  423c90:	b.eq	423ca4 <parse_token+0x2020>  // b.none
  423c94:	add	x0, sp, #0x348
  423c98:	mov	x1, x0
  423c9c:	ldr	x0, [sp, #3496]
  423ca0:	bl	40aba0 <sd_device_get_sysname@plt>
  423ca4:	adrp	x0, 454000 <__func__.10675+0xa0>
  423ca8:	add	x20, x0, #0xbb
  423cac:	ldr	x0, [sp, #840]
  423cb0:	cmp	x0, #0x0
  423cb4:	b.eq	423cc4 <parse_token+0x2040>  // b.none
  423cb8:	adrp	x0, 454000 <__func__.10675+0xa0>
  423cbc:	add	x19, x0, #0xd8
  423cc0:	b	423cc8 <parse_token+0x2044>
  423cc4:	mov	x19, #0x0                   	// #0
  423cc8:	ldr	x21, [sp, #840]
  423ccc:	ldr	x0, [sp, #3488]
  423cd0:	bl	41fb4c <strna>
  423cd4:	mov	x2, x0
  423cd8:	ldr	x0, [sp, #3480]
  423cdc:	cmp	x0, #0x0
  423ce0:	b.eq	423cf0 <parse_token+0x206c>  // b.none
  423ce4:	ldr	x0, [sp, #3480]
  423ce8:	ldr	w0, [x0, #8]
  423cec:	b	423cf4 <parse_token+0x2070>
  423cf0:	mov	w0, #0x0                   	// #0
  423cf4:	ldr	x1, [sp, #128]
  423cf8:	str	x1, [sp, #40]
  423cfc:	adrp	x1, 454000 <__func__.10675+0xa0>
  423d00:	add	x1, x1, #0x348
  423d04:	str	x1, [sp, #32]
  423d08:	str	w0, [sp, #24]
  423d0c:	str	x2, [sp, #16]
  423d10:	adrp	x0, 454000 <__func__.10675+0xa0>
  423d14:	add	x0, x0, #0x288
  423d18:	str	x0, [sp, #8]
  423d1c:	str	xzr, [sp]
  423d20:	mov	x7, #0x0                   	// #0
  423d24:	mov	x6, x21
  423d28:	mov	x5, x19
  423d2c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  423d30:	add	x4, x0, #0x920
  423d34:	mov	w3, #0x274                 	// #628
  423d38:	mov	x2, x20
  423d3c:	ldr	w1, [sp, #692]
  423d40:	ldr	w0, [sp, #688]
  423d44:	bl	40b020 <log_object_internal@plt>
  423d48:	b	42a9c0 <parse_token+0x8d3c>
  423d4c:	ldr	x4, [sp, #120]
  423d50:	ldr	x3, [sp, #104]
  423d54:	ldr	w2, [sp, #116]
  423d58:	mov	w1, #0x6                   	// #6
  423d5c:	ldr	x0, [sp, #848]
  423d60:	bl	420e88 <rule_line_add_token>
  423d64:	str	w0, [sp, #152]
  423d68:	b	42a990 <parse_token+0x8d0c>
  423d6c:	adrp	x0, 454000 <__func__.10675+0xa0>
  423d70:	add	x1, x0, #0x508
  423d74:	ldr	x0, [sp, #128]
  423d78:	bl	40b710 <strcmp@plt>
  423d7c:	cmp	w0, #0x0
  423d80:	b.ne	4240d4 <parse_token+0x2450>  // b.any
  423d84:	ldr	x0, [sp, #120]
  423d88:	cmp	x0, #0x0
  423d8c:	b.eq	423f00 <parse_token+0x227c>  // b.none
  423d90:	ldr	x0, [sp, #136]
  423d94:	str	x0, [sp, #3424]
  423d98:	ldr	x0, [sp, #3424]
  423d9c:	cmp	x0, #0x0
  423da0:	b.eq	423db0 <parse_token+0x212c>  // b.none
  423da4:	ldr	x0, [sp, #3424]
  423da8:	ldr	x0, [x0, #32]
  423dac:	b	423db4 <parse_token+0x2130>
  423db0:	mov	x0, #0x0                   	// #0
  423db4:	str	x0, [sp, #3432]
  423db8:	ldr	x0, [sp, #3432]
  423dbc:	cmp	x0, #0x0
  423dc0:	b.eq	423dd0 <parse_token+0x214c>  // b.none
  423dc4:	ldr	x0, [sp, #3432]
  423dc8:	ldr	x0, [x0, #8]
  423dcc:	b	423dd4 <parse_token+0x2150>
  423dd0:	mov	x0, #0x0                   	// #0
  423dd4:	str	x0, [sp, #3440]
  423dd8:	ldr	x0, [sp, #3432]
  423ddc:	cmp	x0, #0x0
  423de0:	b.eq	423df0 <parse_token+0x216c>  // b.none
  423de4:	ldr	x0, [sp, #3432]
  423de8:	ldr	x0, [x0]
  423dec:	b	423df4 <parse_token+0x2170>
  423df0:	mov	x0, #0x0                   	// #0
  423df4:	str	x0, [sp, #3448]
  423df8:	str	xzr, [sp, #840]
  423dfc:	str	xzr, [sp, #3456]
  423e00:	mov	w0, #0x3                   	// #3
  423e04:	str	w0, [sp, #680]
  423e08:	mov	w0, #0x16                  	// #22
  423e0c:	movk	w0, #0x4000, lsl #16
  423e10:	str	w0, [sp, #684]
  423e14:	ldr	x0, [sp, #3456]
  423e18:	cmp	x0, #0x0
  423e1c:	b.eq	423e58 <parse_token+0x21d4>  // b.none
  423e20:	mov	w0, #0x1                   	// #1
  423e24:	bl	40be30 <log_get_max_level_realm@plt>
  423e28:	mov	w1, w0
  423e2c:	ldr	w0, [sp, #680]
  423e30:	cmp	w0, w1
  423e34:	cset	w0, le
  423e38:	and	w0, w0, #0xff
  423e3c:	and	x0, x0, #0xff
  423e40:	cmp	x0, #0x0
  423e44:	b.eq	423e58 <parse_token+0x21d4>  // b.none
  423e48:	add	x0, sp, #0x348
  423e4c:	mov	x1, x0
  423e50:	ldr	x0, [sp, #3456]
  423e54:	bl	40aba0 <sd_device_get_sysname@plt>
  423e58:	adrp	x0, 454000 <__func__.10675+0xa0>
  423e5c:	add	x20, x0, #0xbb
  423e60:	ldr	x0, [sp, #840]
  423e64:	cmp	x0, #0x0
  423e68:	b.eq	423e78 <parse_token+0x21f4>  // b.none
  423e6c:	adrp	x0, 454000 <__func__.10675+0xa0>
  423e70:	add	x19, x0, #0xd8
  423e74:	b	423e7c <parse_token+0x21f8>
  423e78:	mov	x19, #0x0                   	// #0
  423e7c:	ldr	x21, [sp, #840]
  423e80:	ldr	x0, [sp, #3448]
  423e84:	bl	41fb4c <strna>
  423e88:	mov	x2, x0
  423e8c:	ldr	x0, [sp, #3440]
  423e90:	cmp	x0, #0x0
  423e94:	b.eq	423ea4 <parse_token+0x2220>  // b.none
  423e98:	ldr	x0, [sp, #3440]
  423e9c:	ldr	w0, [x0, #8]
  423ea0:	b	423ea8 <parse_token+0x2224>
  423ea4:	mov	w0, #0x0                   	// #0
  423ea8:	ldr	x1, [sp, #128]
  423eac:	str	x1, [sp, #40]
  423eb0:	adrp	x1, 454000 <__func__.10675+0xa0>
  423eb4:	add	x1, x1, #0x278
  423eb8:	str	x1, [sp, #32]
  423ebc:	str	w0, [sp, #24]
  423ec0:	str	x2, [sp, #16]
  423ec4:	adrp	x0, 454000 <__func__.10675+0xa0>
  423ec8:	add	x0, x0, #0x288
  423ecc:	str	x0, [sp, #8]
  423ed0:	str	xzr, [sp]
  423ed4:	mov	x7, #0x0                   	// #0
  423ed8:	mov	x6, x21
  423edc:	mov	x5, x19
  423ee0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  423ee4:	add	x4, x0, #0x920
  423ee8:	mov	w3, #0x278                 	// #632
  423eec:	mov	x2, x20
  423ef0:	ldr	w1, [sp, #684]
  423ef4:	ldr	w0, [sp, #680]
  423ef8:	bl	40b020 <log_object_internal@plt>
  423efc:	b	42a9c0 <parse_token+0x8d3c>
  423f00:	ldr	w0, [sp, #116]
  423f04:	cmp	w0, #0x5
  423f08:	b.ne	42406c <parse_token+0x23e8>  // b.any
  423f0c:	ldr	x0, [sp, #136]
  423f10:	str	x0, [sp, #3384]
  423f14:	ldr	x0, [sp, #3384]
  423f18:	cmp	x0, #0x0
  423f1c:	b.eq	423f2c <parse_token+0x22a8>  // b.none
  423f20:	ldr	x0, [sp, #3384]
  423f24:	ldr	x0, [x0, #32]
  423f28:	b	423f30 <parse_token+0x22ac>
  423f2c:	mov	x0, #0x0                   	// #0
  423f30:	str	x0, [sp, #3392]
  423f34:	ldr	x0, [sp, #3392]
  423f38:	cmp	x0, #0x0
  423f3c:	b.eq	423f4c <parse_token+0x22c8>  // b.none
  423f40:	ldr	x0, [sp, #3392]
  423f44:	ldr	x0, [x0, #8]
  423f48:	b	423f50 <parse_token+0x22cc>
  423f4c:	mov	x0, #0x0                   	// #0
  423f50:	str	x0, [sp, #3400]
  423f54:	ldr	x0, [sp, #3392]
  423f58:	cmp	x0, #0x0
  423f5c:	b.eq	423f6c <parse_token+0x22e8>  // b.none
  423f60:	ldr	x0, [sp, #3392]
  423f64:	ldr	x0, [x0]
  423f68:	b	423f70 <parse_token+0x22ec>
  423f6c:	mov	x0, #0x0                   	// #0
  423f70:	str	x0, [sp, #3408]
  423f74:	str	xzr, [sp, #840]
  423f78:	str	xzr, [sp, #3416]
  423f7c:	mov	w0, #0x4                   	// #4
  423f80:	str	w0, [sp, #672]
  423f84:	str	wzr, [sp, #676]
  423f88:	ldr	x0, [sp, #3416]
  423f8c:	cmp	x0, #0x0
  423f90:	b.eq	423fcc <parse_token+0x2348>  // b.none
  423f94:	mov	w0, #0x1                   	// #1
  423f98:	bl	40be30 <log_get_max_level_realm@plt>
  423f9c:	mov	w1, w0
  423fa0:	ldr	w0, [sp, #672]
  423fa4:	cmp	w0, w1
  423fa8:	cset	w0, le
  423fac:	and	w0, w0, #0xff
  423fb0:	and	x0, x0, #0xff
  423fb4:	cmp	x0, #0x0
  423fb8:	b.eq	423fcc <parse_token+0x2348>  // b.none
  423fbc:	add	x0, sp, #0x348
  423fc0:	mov	x1, x0
  423fc4:	ldr	x0, [sp, #3416]
  423fc8:	bl	40aba0 <sd_device_get_sysname@plt>
  423fcc:	adrp	x0, 454000 <__func__.10675+0xa0>
  423fd0:	add	x20, x0, #0xbb
  423fd4:	ldr	x0, [sp, #840]
  423fd8:	cmp	x0, #0x0
  423fdc:	b.eq	423fec <parse_token+0x2368>  // b.none
  423fe0:	adrp	x0, 454000 <__func__.10675+0xa0>
  423fe4:	add	x19, x0, #0xd8
  423fe8:	b	423ff0 <parse_token+0x236c>
  423fec:	mov	x19, #0x0                   	// #0
  423ff0:	ldr	x21, [sp, #840]
  423ff4:	ldr	x0, [sp, #3408]
  423ff8:	bl	41fb4c <strna>
  423ffc:	mov	x2, x0
  424000:	ldr	x0, [sp, #3400]
  424004:	cmp	x0, #0x0
  424008:	b.eq	424018 <parse_token+0x2394>  // b.none
  42400c:	ldr	x0, [sp, #3400]
  424010:	ldr	w0, [x0, #8]
  424014:	b	42401c <parse_token+0x2398>
  424018:	mov	w0, #0x0                   	// #0
  42401c:	ldr	x1, [sp, #128]
  424020:	str	x1, [sp, #32]
  424024:	str	w0, [sp, #24]
  424028:	str	x2, [sp, #16]
  42402c:	adrp	x0, 454000 <__func__.10675+0xa0>
  424030:	add	x0, x0, #0x470
  424034:	str	x0, [sp, #8]
  424038:	str	xzr, [sp]
  42403c:	mov	x7, #0x0                   	// #0
  424040:	mov	x6, x21
  424044:	mov	x5, x19
  424048:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42404c:	add	x4, x0, #0x920
  424050:	mov	w3, #0x27a                 	// #634
  424054:	mov	x2, x20
  424058:	ldr	w1, [sp, #676]
  42405c:	ldr	w0, [sp, #672]
  424060:	bl	40b020 <log_object_internal@plt>
  424064:	mov	w0, #0x4                   	// #4
  424068:	str	w0, [sp, #116]
  42406c:	ldrb	w0, [sp, #147]
  424070:	eor	w0, w0, #0x1
  424074:	and	w0, w0, #0xff
  424078:	cmp	w0, #0x0
  42407c:	b.eq	4240b4 <parse_token+0x2430>  // b.none
  424080:	mov	w3, #0x1                   	// #1
  424084:	ldr	x2, [sp, #104]
  424088:	ldr	x1, [sp, #128]
  42408c:	ldr	x0, [sp, #136]
  424090:	bl	421544 <check_value_format_and_warn>
  424094:	mov	x4, #0x0                   	// #0
  424098:	ldr	x3, [sp, #104]
  42409c:	ldr	w2, [sp, #116]
  4240a0:	mov	w1, #0x25                  	// #37
  4240a4:	ldr	x0, [sp, #848]
  4240a8:	bl	420e88 <rule_line_add_token>
  4240ac:	str	w0, [sp, #152]
  4240b0:	b	42a990 <parse_token+0x8d0c>
  4240b4:	mov	x4, #0x0                   	// #0
  4240b8:	ldr	x3, [sp, #104]
  4240bc:	ldr	w2, [sp, #116]
  4240c0:	mov	w1, #0x7                   	// #7
  4240c4:	ldr	x0, [sp, #848]
  4240c8:	bl	420e88 <rule_line_add_token>
  4240cc:	str	w0, [sp, #152]
  4240d0:	b	42a990 <parse_token+0x8d0c>
  4240d4:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4240d8:	add	x1, x0, #0xff0
  4240dc:	ldr	x0, [sp, #128]
  4240e0:	bl	40b710 <strcmp@plt>
  4240e4:	cmp	w0, #0x0
  4240e8:	b.ne	4245a0 <parse_token+0x291c>  // b.any
  4240ec:	ldr	x0, [sp, #120]
  4240f0:	cmp	x0, #0x0
  4240f4:	b.eq	424268 <parse_token+0x25e4>  // b.none
  4240f8:	ldr	x0, [sp, #136]
  4240fc:	str	x0, [sp, #3344]
  424100:	ldr	x0, [sp, #3344]
  424104:	cmp	x0, #0x0
  424108:	b.eq	424118 <parse_token+0x2494>  // b.none
  42410c:	ldr	x0, [sp, #3344]
  424110:	ldr	x0, [x0, #32]
  424114:	b	42411c <parse_token+0x2498>
  424118:	mov	x0, #0x0                   	// #0
  42411c:	str	x0, [sp, #3352]
  424120:	ldr	x0, [sp, #3352]
  424124:	cmp	x0, #0x0
  424128:	b.eq	424138 <parse_token+0x24b4>  // b.none
  42412c:	ldr	x0, [sp, #3352]
  424130:	ldr	x0, [x0, #8]
  424134:	b	42413c <parse_token+0x24b8>
  424138:	mov	x0, #0x0                   	// #0
  42413c:	str	x0, [sp, #3360]
  424140:	ldr	x0, [sp, #3352]
  424144:	cmp	x0, #0x0
  424148:	b.eq	424158 <parse_token+0x24d4>  // b.none
  42414c:	ldr	x0, [sp, #3352]
  424150:	ldr	x0, [x0]
  424154:	b	42415c <parse_token+0x24d8>
  424158:	mov	x0, #0x0                   	// #0
  42415c:	str	x0, [sp, #3368]
  424160:	str	xzr, [sp, #840]
  424164:	str	xzr, [sp, #3376]
  424168:	mov	w0, #0x3                   	// #3
  42416c:	str	w0, [sp, #664]
  424170:	mov	w0, #0x16                  	// #22
  424174:	movk	w0, #0x4000, lsl #16
  424178:	str	w0, [sp, #668]
  42417c:	ldr	x0, [sp, #3376]
  424180:	cmp	x0, #0x0
  424184:	b.eq	4241c0 <parse_token+0x253c>  // b.none
  424188:	mov	w0, #0x1                   	// #1
  42418c:	bl	40be30 <log_get_max_level_realm@plt>
  424190:	mov	w1, w0
  424194:	ldr	w0, [sp, #664]
  424198:	cmp	w0, w1
  42419c:	cset	w0, le
  4241a0:	and	w0, w0, #0xff
  4241a4:	and	x0, x0, #0xff
  4241a8:	cmp	x0, #0x0
  4241ac:	b.eq	4241c0 <parse_token+0x253c>  // b.none
  4241b0:	add	x0, sp, #0x348
  4241b4:	mov	x1, x0
  4241b8:	ldr	x0, [sp, #3376]
  4241bc:	bl	40aba0 <sd_device_get_sysname@plt>
  4241c0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4241c4:	add	x20, x0, #0xbb
  4241c8:	ldr	x0, [sp, #840]
  4241cc:	cmp	x0, #0x0
  4241d0:	b.eq	4241e0 <parse_token+0x255c>  // b.none
  4241d4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4241d8:	add	x19, x0, #0xd8
  4241dc:	b	4241e4 <parse_token+0x2560>
  4241e0:	mov	x19, #0x0                   	// #0
  4241e4:	ldr	x21, [sp, #840]
  4241e8:	ldr	x0, [sp, #3368]
  4241ec:	bl	41fb4c <strna>
  4241f0:	mov	x2, x0
  4241f4:	ldr	x0, [sp, #3360]
  4241f8:	cmp	x0, #0x0
  4241fc:	b.eq	42420c <parse_token+0x2588>  // b.none
  424200:	ldr	x0, [sp, #3360]
  424204:	ldr	w0, [x0, #8]
  424208:	b	424210 <parse_token+0x258c>
  42420c:	mov	w0, #0x0                   	// #0
  424210:	ldr	x1, [sp, #128]
  424214:	str	x1, [sp, #40]
  424218:	adrp	x1, 454000 <__func__.10675+0xa0>
  42421c:	add	x1, x1, #0x278
  424220:	str	x1, [sp, #32]
  424224:	str	w0, [sp, #24]
  424228:	str	x2, [sp, #16]
  42422c:	adrp	x0, 454000 <__func__.10675+0xa0>
  424230:	add	x0, x0, #0x288
  424234:	str	x0, [sp, #8]
  424238:	str	xzr, [sp]
  42423c:	mov	x7, #0x0                   	// #0
  424240:	mov	x6, x21
  424244:	mov	x5, x19
  424248:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42424c:	add	x4, x0, #0x920
  424250:	mov	w3, #0x286                 	// #646
  424254:	mov	x2, x20
  424258:	ldr	w1, [sp, #668]
  42425c:	ldr	w0, [sp, #664]
  424260:	bl	40b020 <log_object_internal@plt>
  424264:	b	42a9c0 <parse_token+0x8d3c>
  424268:	ldrb	w0, [sp, #147]
  42426c:	eor	w0, w0, #0x1
  424270:	and	w0, w0, #0xff
  424274:	cmp	w0, #0x0
  424278:	b.eq	4243ec <parse_token+0x2768>  // b.none
  42427c:	ldr	x0, [sp, #136]
  424280:	str	x0, [sp, #3304]
  424284:	ldr	x0, [sp, #3304]
  424288:	cmp	x0, #0x0
  42428c:	b.eq	42429c <parse_token+0x2618>  // b.none
  424290:	ldr	x0, [sp, #3304]
  424294:	ldr	x0, [x0, #32]
  424298:	b	4242a0 <parse_token+0x261c>
  42429c:	mov	x0, #0x0                   	// #0
  4242a0:	str	x0, [sp, #3312]
  4242a4:	ldr	x0, [sp, #3312]
  4242a8:	cmp	x0, #0x0
  4242ac:	b.eq	4242bc <parse_token+0x2638>  // b.none
  4242b0:	ldr	x0, [sp, #3312]
  4242b4:	ldr	x0, [x0, #8]
  4242b8:	b	4242c0 <parse_token+0x263c>
  4242bc:	mov	x0, #0x0                   	// #0
  4242c0:	str	x0, [sp, #3320]
  4242c4:	ldr	x0, [sp, #3312]
  4242c8:	cmp	x0, #0x0
  4242cc:	b.eq	4242dc <parse_token+0x2658>  // b.none
  4242d0:	ldr	x0, [sp, #3312]
  4242d4:	ldr	x0, [x0]
  4242d8:	b	4242e0 <parse_token+0x265c>
  4242dc:	mov	x0, #0x0                   	// #0
  4242e0:	str	x0, [sp, #3328]
  4242e4:	str	xzr, [sp, #840]
  4242e8:	str	xzr, [sp, #3336]
  4242ec:	mov	w0, #0x3                   	// #3
  4242f0:	str	w0, [sp, #656]
  4242f4:	mov	w0, #0x16                  	// #22
  4242f8:	movk	w0, #0x4000, lsl #16
  4242fc:	str	w0, [sp, #660]
  424300:	ldr	x0, [sp, #3336]
  424304:	cmp	x0, #0x0
  424308:	b.eq	424344 <parse_token+0x26c0>  // b.none
  42430c:	mov	w0, #0x1                   	// #1
  424310:	bl	40be30 <log_get_max_level_realm@plt>
  424314:	mov	w1, w0
  424318:	ldr	w0, [sp, #656]
  42431c:	cmp	w0, w1
  424320:	cset	w0, le
  424324:	and	w0, w0, #0xff
  424328:	and	x0, x0, #0xff
  42432c:	cmp	x0, #0x0
  424330:	b.eq	424344 <parse_token+0x26c0>  // b.none
  424334:	add	x0, sp, #0x348
  424338:	mov	x1, x0
  42433c:	ldr	x0, [sp, #3336]
  424340:	bl	40aba0 <sd_device_get_sysname@plt>
  424344:	adrp	x0, 454000 <__func__.10675+0xa0>
  424348:	add	x20, x0, #0xbb
  42434c:	ldr	x0, [sp, #840]
  424350:	cmp	x0, #0x0
  424354:	b.eq	424364 <parse_token+0x26e0>  // b.none
  424358:	adrp	x0, 454000 <__func__.10675+0xa0>
  42435c:	add	x19, x0, #0xd8
  424360:	b	424368 <parse_token+0x26e4>
  424364:	mov	x19, #0x0                   	// #0
  424368:	ldr	x21, [sp, #840]
  42436c:	ldr	x0, [sp, #3328]
  424370:	bl	41fb4c <strna>
  424374:	mov	x2, x0
  424378:	ldr	x0, [sp, #3320]
  42437c:	cmp	x0, #0x0
  424380:	b.eq	424390 <parse_token+0x270c>  // b.none
  424384:	ldr	x0, [sp, #3320]
  424388:	ldr	w0, [x0, #8]
  42438c:	b	424394 <parse_token+0x2710>
  424390:	mov	w0, #0x0                   	// #0
  424394:	ldr	x1, [sp, #128]
  424398:	str	x1, [sp, #40]
  42439c:	adrp	x1, 454000 <__func__.10675+0xa0>
  4243a0:	add	x1, x1, #0x348
  4243a4:	str	x1, [sp, #32]
  4243a8:	str	w0, [sp, #24]
  4243ac:	str	x2, [sp, #16]
  4243b0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4243b4:	add	x0, x0, #0x288
  4243b8:	str	x0, [sp, #8]
  4243bc:	str	xzr, [sp]
  4243c0:	mov	x7, #0x0                   	// #0
  4243c4:	mov	x6, x21
  4243c8:	mov	x5, x19
  4243cc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4243d0:	add	x4, x0, #0x920
  4243d4:	mov	w3, #0x288                 	// #648
  4243d8:	mov	x2, x20
  4243dc:	ldr	w1, [sp, #660]
  4243e0:	ldr	w0, [sp, #656]
  4243e4:	bl	40b020 <log_object_internal@plt>
  4243e8:	b	42a9c0 <parse_token+0x8d3c>
  4243ec:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4243f0:	add	x0, x0, #0xb8
  4243f4:	add	x2, sp, #0x1, lsl #12
  4243f8:	add	x2, x2, #0x80
  4243fc:	mov	x3, x0
  424400:	ldp	x0, x1, [x3]
  424404:	stp	x0, x1, [x2]
  424408:	ldr	x0, [x3, #16]
  42440c:	str	x0, [x2, #16]
  424410:	add	x0, sp, #0x1, lsl #12
  424414:	add	x0, x0, #0x80
  424418:	ldr	x1, [sp, #104]
  42441c:	bl	40b450 <strv_find@plt>
  424420:	cmp	x0, #0x0
  424424:	b.eq	424580 <parse_token+0x28fc>  // b.none
  424428:	ldr	x0, [sp, #136]
  42442c:	str	x0, [sp, #3264]
  424430:	ldr	x0, [sp, #3264]
  424434:	cmp	x0, #0x0
  424438:	b.eq	424448 <parse_token+0x27c4>  // b.none
  42443c:	ldr	x0, [sp, #3264]
  424440:	ldr	x0, [x0, #32]
  424444:	b	42444c <parse_token+0x27c8>
  424448:	mov	x0, #0x0                   	// #0
  42444c:	str	x0, [sp, #3272]
  424450:	ldr	x0, [sp, #3272]
  424454:	cmp	x0, #0x0
  424458:	b.eq	424468 <parse_token+0x27e4>  // b.none
  42445c:	ldr	x0, [sp, #3272]
  424460:	ldr	x0, [x0, #8]
  424464:	b	42446c <parse_token+0x27e8>
  424468:	mov	x0, #0x0                   	// #0
  42446c:	str	x0, [sp, #3280]
  424470:	ldr	x0, [sp, #3272]
  424474:	cmp	x0, #0x0
  424478:	b.eq	424488 <parse_token+0x2804>  // b.none
  42447c:	ldr	x0, [sp, #3272]
  424480:	ldr	x0, [x0]
  424484:	b	42448c <parse_token+0x2808>
  424488:	mov	x0, #0x0                   	// #0
  42448c:	str	x0, [sp, #3288]
  424490:	str	xzr, [sp, #840]
  424494:	str	xzr, [sp, #3296]
  424498:	mov	w0, #0x4                   	// #4
  42449c:	str	w0, [sp, #648]
  4244a0:	str	wzr, [sp, #652]
  4244a4:	ldr	x0, [sp, #3296]
  4244a8:	cmp	x0, #0x0
  4244ac:	b.eq	4244e8 <parse_token+0x2864>  // b.none
  4244b0:	mov	w0, #0x1                   	// #1
  4244b4:	bl	40be30 <log_get_max_level_realm@plt>
  4244b8:	mov	w1, w0
  4244bc:	ldr	w0, [sp, #648]
  4244c0:	cmp	w0, w1
  4244c4:	cset	w0, le
  4244c8:	and	w0, w0, #0xff
  4244cc:	and	x0, x0, #0xff
  4244d0:	cmp	x0, #0x0
  4244d4:	b.eq	4244e8 <parse_token+0x2864>  // b.none
  4244d8:	add	x0, sp, #0x348
  4244dc:	mov	x1, x0
  4244e0:	ldr	x0, [sp, #3296]
  4244e4:	bl	40aba0 <sd_device_get_sysname@plt>
  4244e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4244ec:	add	x20, x0, #0xbb
  4244f0:	ldr	x0, [sp, #840]
  4244f4:	cmp	x0, #0x0
  4244f8:	b.eq	424508 <parse_token+0x2884>  // b.none
  4244fc:	adrp	x0, 454000 <__func__.10675+0xa0>
  424500:	add	x19, x0, #0xd8
  424504:	b	42450c <parse_token+0x2888>
  424508:	mov	x19, #0x0                   	// #0
  42450c:	ldr	x21, [sp, #840]
  424510:	ldr	x0, [sp, #3288]
  424514:	bl	41fb4c <strna>
  424518:	mov	x2, x0
  42451c:	ldr	x0, [sp, #3280]
  424520:	cmp	x0, #0x0
  424524:	b.eq	424534 <parse_token+0x28b0>  // b.none
  424528:	ldr	x0, [sp, #3280]
  42452c:	ldr	w0, [x0, #8]
  424530:	b	424538 <parse_token+0x28b4>
  424534:	mov	w0, #0x0                   	// #0
  424538:	ldr	x1, [sp, #104]
  42453c:	str	x1, [sp, #32]
  424540:	str	w0, [sp, #24]
  424544:	str	x2, [sp, #16]
  424548:	adrp	x0, 454000 <__func__.10675+0xa0>
  42454c:	add	x0, x0, #0x510
  424550:	str	x0, [sp, #8]
  424554:	str	xzr, [sp]
  424558:	mov	x7, #0x0                   	// #0
  42455c:	mov	x6, x21
  424560:	mov	x5, x19
  424564:	adrp	x0, 455000 <__func__.10675+0x10a0>
  424568:	add	x4, x0, #0x920
  42456c:	mov	w3, #0x28b                 	// #651
  424570:	mov	x2, x20
  424574:	ldr	w1, [sp, #652]
  424578:	ldr	w0, [sp, #648]
  42457c:	bl	40b020 <log_object_internal@plt>
  424580:	mov	x4, #0x0                   	// #0
  424584:	ldr	x3, [sp, #104]
  424588:	ldr	w2, [sp, #116]
  42458c:	mov	w1, #0x8                   	// #8
  424590:	ldr	x0, [sp, #848]
  424594:	bl	420e88 <rule_line_add_token>
  424598:	str	w0, [sp, #152]
  42459c:	b	42a990 <parse_token+0x8d0c>
  4245a0:	adrp	x0, 453000 <__PRETTY_FUNCTION__.8736+0x560>
  4245a4:	add	x1, x0, #0xfc8
  4245a8:	ldr	x0, [sp, #128]
  4245ac:	bl	40b710 <strcmp@plt>
  4245b0:	cmp	w0, #0x0
  4245b4:	b.ne	4248d8 <parse_token+0x2c54>  // b.any
  4245b8:	ldr	x0, [sp, #120]
  4245bc:	cmp	x0, #0x0
  4245c0:	b.eq	424734 <parse_token+0x2ab0>  // b.none
  4245c4:	ldr	x0, [sp, #136]
  4245c8:	str	x0, [sp, #3224]
  4245cc:	ldr	x0, [sp, #3224]
  4245d0:	cmp	x0, #0x0
  4245d4:	b.eq	4245e4 <parse_token+0x2960>  // b.none
  4245d8:	ldr	x0, [sp, #3224]
  4245dc:	ldr	x0, [x0, #32]
  4245e0:	b	4245e8 <parse_token+0x2964>
  4245e4:	mov	x0, #0x0                   	// #0
  4245e8:	str	x0, [sp, #3232]
  4245ec:	ldr	x0, [sp, #3232]
  4245f0:	cmp	x0, #0x0
  4245f4:	b.eq	424604 <parse_token+0x2980>  // b.none
  4245f8:	ldr	x0, [sp, #3232]
  4245fc:	ldr	x0, [x0, #8]
  424600:	b	424608 <parse_token+0x2984>
  424604:	mov	x0, #0x0                   	// #0
  424608:	str	x0, [sp, #3240]
  42460c:	ldr	x0, [sp, #3232]
  424610:	cmp	x0, #0x0
  424614:	b.eq	424624 <parse_token+0x29a0>  // b.none
  424618:	ldr	x0, [sp, #3232]
  42461c:	ldr	x0, [x0]
  424620:	b	424628 <parse_token+0x29a4>
  424624:	mov	x0, #0x0                   	// #0
  424628:	str	x0, [sp, #3248]
  42462c:	str	xzr, [sp, #840]
  424630:	str	xzr, [sp, #3256]
  424634:	mov	w0, #0x3                   	// #3
  424638:	str	w0, [sp, #640]
  42463c:	mov	w0, #0x16                  	// #22
  424640:	movk	w0, #0x4000, lsl #16
  424644:	str	w0, [sp, #644]
  424648:	ldr	x0, [sp, #3256]
  42464c:	cmp	x0, #0x0
  424650:	b.eq	42468c <parse_token+0x2a08>  // b.none
  424654:	mov	w0, #0x1                   	// #1
  424658:	bl	40be30 <log_get_max_level_realm@plt>
  42465c:	mov	w1, w0
  424660:	ldr	w0, [sp, #640]
  424664:	cmp	w0, w1
  424668:	cset	w0, le
  42466c:	and	w0, w0, #0xff
  424670:	and	x0, x0, #0xff
  424674:	cmp	x0, #0x0
  424678:	b.eq	42468c <parse_token+0x2a08>  // b.none
  42467c:	add	x0, sp, #0x348
  424680:	mov	x1, x0
  424684:	ldr	x0, [sp, #3256]
  424688:	bl	40aba0 <sd_device_get_sysname@plt>
  42468c:	adrp	x0, 454000 <__func__.10675+0xa0>
  424690:	add	x20, x0, #0xbb
  424694:	ldr	x0, [sp, #840]
  424698:	cmp	x0, #0x0
  42469c:	b.eq	4246ac <parse_token+0x2a28>  // b.none
  4246a0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4246a4:	add	x19, x0, #0xd8
  4246a8:	b	4246b0 <parse_token+0x2a2c>
  4246ac:	mov	x19, #0x0                   	// #0
  4246b0:	ldr	x21, [sp, #840]
  4246b4:	ldr	x0, [sp, #3248]
  4246b8:	bl	41fb4c <strna>
  4246bc:	mov	x2, x0
  4246c0:	ldr	x0, [sp, #3240]
  4246c4:	cmp	x0, #0x0
  4246c8:	b.eq	4246d8 <parse_token+0x2a54>  // b.none
  4246cc:	ldr	x0, [sp, #3240]
  4246d0:	ldr	w0, [x0, #8]
  4246d4:	b	4246dc <parse_token+0x2a58>
  4246d8:	mov	w0, #0x0                   	// #0
  4246dc:	ldr	x1, [sp, #128]
  4246e0:	str	x1, [sp, #40]
  4246e4:	adrp	x1, 454000 <__func__.10675+0xa0>
  4246e8:	add	x1, x1, #0x278
  4246ec:	str	x1, [sp, #32]
  4246f0:	str	w0, [sp, #24]
  4246f4:	str	x2, [sp, #16]
  4246f8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4246fc:	add	x0, x0, #0x288
  424700:	str	x0, [sp, #8]
  424704:	str	xzr, [sp]
  424708:	mov	x7, #0x0                   	// #0
  42470c:	mov	x6, x21
  424710:	mov	x5, x19
  424714:	adrp	x0, 455000 <__func__.10675+0x10a0>
  424718:	add	x4, x0, #0x920
  42471c:	mov	w3, #0x290                 	// #656
  424720:	mov	x2, x20
  424724:	ldr	w1, [sp, #644]
  424728:	ldr	w0, [sp, #640]
  42472c:	bl	40b020 <log_object_internal@plt>
  424730:	b	42a9c0 <parse_token+0x8d3c>
  424734:	ldrb	w0, [sp, #147]
  424738:	eor	w0, w0, #0x1
  42473c:	and	w0, w0, #0xff
  424740:	cmp	w0, #0x0
  424744:	b.eq	4248b8 <parse_token+0x2c34>  // b.none
  424748:	ldr	x0, [sp, #136]
  42474c:	str	x0, [sp, #3184]
  424750:	ldr	x0, [sp, #3184]
  424754:	cmp	x0, #0x0
  424758:	b.eq	424768 <parse_token+0x2ae4>  // b.none
  42475c:	ldr	x0, [sp, #3184]
  424760:	ldr	x0, [x0, #32]
  424764:	b	42476c <parse_token+0x2ae8>
  424768:	mov	x0, #0x0                   	// #0
  42476c:	str	x0, [sp, #3192]
  424770:	ldr	x0, [sp, #3192]
  424774:	cmp	x0, #0x0
  424778:	b.eq	424788 <parse_token+0x2b04>  // b.none
  42477c:	ldr	x0, [sp, #3192]
  424780:	ldr	x0, [x0, #8]
  424784:	b	42478c <parse_token+0x2b08>
  424788:	mov	x0, #0x0                   	// #0
  42478c:	str	x0, [sp, #3200]
  424790:	ldr	x0, [sp, #3192]
  424794:	cmp	x0, #0x0
  424798:	b.eq	4247a8 <parse_token+0x2b24>  // b.none
  42479c:	ldr	x0, [sp, #3192]
  4247a0:	ldr	x0, [x0]
  4247a4:	b	4247ac <parse_token+0x2b28>
  4247a8:	mov	x0, #0x0                   	// #0
  4247ac:	str	x0, [sp, #3208]
  4247b0:	str	xzr, [sp, #840]
  4247b4:	str	xzr, [sp, #3216]
  4247b8:	mov	w0, #0x3                   	// #3
  4247bc:	str	w0, [sp, #632]
  4247c0:	mov	w0, #0x16                  	// #22
  4247c4:	movk	w0, #0x4000, lsl #16
  4247c8:	str	w0, [sp, #636]
  4247cc:	ldr	x0, [sp, #3216]
  4247d0:	cmp	x0, #0x0
  4247d4:	b.eq	424810 <parse_token+0x2b8c>  // b.none
  4247d8:	mov	w0, #0x1                   	// #1
  4247dc:	bl	40be30 <log_get_max_level_realm@plt>
  4247e0:	mov	w1, w0
  4247e4:	ldr	w0, [sp, #632]
  4247e8:	cmp	w0, w1
  4247ec:	cset	w0, le
  4247f0:	and	w0, w0, #0xff
  4247f4:	and	x0, x0, #0xff
  4247f8:	cmp	x0, #0x0
  4247fc:	b.eq	424810 <parse_token+0x2b8c>  // b.none
  424800:	add	x0, sp, #0x348
  424804:	mov	x1, x0
  424808:	ldr	x0, [sp, #3216]
  42480c:	bl	40aba0 <sd_device_get_sysname@plt>
  424810:	adrp	x0, 454000 <__func__.10675+0xa0>
  424814:	add	x20, x0, #0xbb
  424818:	ldr	x0, [sp, #840]
  42481c:	cmp	x0, #0x0
  424820:	b.eq	424830 <parse_token+0x2bac>  // b.none
  424824:	adrp	x0, 454000 <__func__.10675+0xa0>
  424828:	add	x19, x0, #0xd8
  42482c:	b	424834 <parse_token+0x2bb0>
  424830:	mov	x19, #0x0                   	// #0
  424834:	ldr	x21, [sp, #840]
  424838:	ldr	x0, [sp, #3208]
  42483c:	bl	41fb4c <strna>
  424840:	mov	x2, x0
  424844:	ldr	x0, [sp, #3200]
  424848:	cmp	x0, #0x0
  42484c:	b.eq	42485c <parse_token+0x2bd8>  // b.none
  424850:	ldr	x0, [sp, #3200]
  424854:	ldr	w0, [x0, #8]
  424858:	b	424860 <parse_token+0x2bdc>
  42485c:	mov	w0, #0x0                   	// #0
  424860:	ldr	x1, [sp, #128]
  424864:	str	x1, [sp, #40]
  424868:	adrp	x1, 454000 <__func__.10675+0xa0>
  42486c:	add	x1, x1, #0x348
  424870:	str	x1, [sp, #32]
  424874:	str	w0, [sp, #24]
  424878:	str	x2, [sp, #16]
  42487c:	adrp	x0, 454000 <__func__.10675+0xa0>
  424880:	add	x0, x0, #0x288
  424884:	str	x0, [sp, #8]
  424888:	str	xzr, [sp]
  42488c:	mov	x7, #0x0                   	// #0
  424890:	mov	x6, x21
  424894:	mov	x5, x19
  424898:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42489c:	add	x4, x0, #0x920
  4248a0:	mov	w3, #0x292                 	// #658
  4248a4:	mov	x2, x20
  4248a8:	ldr	w1, [sp, #636]
  4248ac:	ldr	w0, [sp, #632]
  4248b0:	bl	40b020 <log_object_internal@plt>
  4248b4:	b	42a9c0 <parse_token+0x8d3c>
  4248b8:	mov	x4, #0x0                   	// #0
  4248bc:	ldr	x3, [sp, #104]
  4248c0:	ldr	w2, [sp, #116]
  4248c4:	mov	w1, #0x9                   	// #9
  4248c8:	ldr	x0, [sp, #848]
  4248cc:	bl	420e88 <rule_line_add_token>
  4248d0:	str	w0, [sp, #152]
  4248d4:	b	42a990 <parse_token+0x8d0c>
  4248d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4248dc:	add	x1, x0, #0x550
  4248e0:	ldr	x0, [sp, #128]
  4248e4:	bl	40b710 <strcmp@plt>
  4248e8:	cmp	w0, #0x0
  4248ec:	b.ne	424c90 <parse_token+0x300c>  // b.any
  4248f0:	ldr	x2, [sp, #120]
  4248f4:	ldr	x1, [sp, #128]
  4248f8:	ldr	x0, [sp, #136]
  4248fc:	bl	4218f0 <check_attr_format_and_warn>
  424900:	str	w0, [sp, #152]
  424904:	ldr	w0, [sp, #152]
  424908:	cmp	w0, #0x0
  42490c:	b.ge	424918 <parse_token+0x2c94>  // b.tcont
  424910:	ldr	w0, [sp, #152]
  424914:	b	42a9c0 <parse_token+0x8d3c>
  424918:	ldr	w0, [sp, #116]
  42491c:	cmp	w0, #0x3
  424920:	b.ne	424a94 <parse_token+0x2e10>  // b.any
  424924:	ldr	x0, [sp, #136]
  424928:	str	x0, [sp, #3144]
  42492c:	ldr	x0, [sp, #3144]
  424930:	cmp	x0, #0x0
  424934:	b.eq	424944 <parse_token+0x2cc0>  // b.none
  424938:	ldr	x0, [sp, #3144]
  42493c:	ldr	x0, [x0, #32]
  424940:	b	424948 <parse_token+0x2cc4>
  424944:	mov	x0, #0x0                   	// #0
  424948:	str	x0, [sp, #3152]
  42494c:	ldr	x0, [sp, #3152]
  424950:	cmp	x0, #0x0
  424954:	b.eq	424964 <parse_token+0x2ce0>  // b.none
  424958:	ldr	x0, [sp, #3152]
  42495c:	ldr	x0, [x0, #8]
  424960:	b	424968 <parse_token+0x2ce4>
  424964:	mov	x0, #0x0                   	// #0
  424968:	str	x0, [sp, #3160]
  42496c:	ldr	x0, [sp, #3152]
  424970:	cmp	x0, #0x0
  424974:	b.eq	424984 <parse_token+0x2d00>  // b.none
  424978:	ldr	x0, [sp, #3152]
  42497c:	ldr	x0, [x0]
  424980:	b	424988 <parse_token+0x2d04>
  424984:	mov	x0, #0x0                   	// #0
  424988:	str	x0, [sp, #3168]
  42498c:	str	xzr, [sp, #840]
  424990:	str	xzr, [sp, #3176]
  424994:	mov	w0, #0x3                   	// #3
  424998:	str	w0, [sp, #624]
  42499c:	mov	w0, #0x16                  	// #22
  4249a0:	movk	w0, #0x4000, lsl #16
  4249a4:	str	w0, [sp, #628]
  4249a8:	ldr	x0, [sp, #3176]
  4249ac:	cmp	x0, #0x0
  4249b0:	b.eq	4249ec <parse_token+0x2d68>  // b.none
  4249b4:	mov	w0, #0x1                   	// #1
  4249b8:	bl	40be30 <log_get_max_level_realm@plt>
  4249bc:	mov	w1, w0
  4249c0:	ldr	w0, [sp, #624]
  4249c4:	cmp	w0, w1
  4249c8:	cset	w0, le
  4249cc:	and	w0, w0, #0xff
  4249d0:	and	x0, x0, #0xff
  4249d4:	cmp	x0, #0x0
  4249d8:	b.eq	4249ec <parse_token+0x2d68>  // b.none
  4249dc:	add	x0, sp, #0x348
  4249e0:	mov	x1, x0
  4249e4:	ldr	x0, [sp, #3176]
  4249e8:	bl	40aba0 <sd_device_get_sysname@plt>
  4249ec:	adrp	x0, 454000 <__func__.10675+0xa0>
  4249f0:	add	x20, x0, #0xbb
  4249f4:	ldr	x0, [sp, #840]
  4249f8:	cmp	x0, #0x0
  4249fc:	b.eq	424a0c <parse_token+0x2d88>  // b.none
  424a00:	adrp	x0, 454000 <__func__.10675+0xa0>
  424a04:	add	x19, x0, #0xd8
  424a08:	b	424a10 <parse_token+0x2d8c>
  424a0c:	mov	x19, #0x0                   	// #0
  424a10:	ldr	x21, [sp, #840]
  424a14:	ldr	x0, [sp, #3168]
  424a18:	bl	41fb4c <strna>
  424a1c:	mov	x2, x0
  424a20:	ldr	x0, [sp, #3160]
  424a24:	cmp	x0, #0x0
  424a28:	b.eq	424a38 <parse_token+0x2db4>  // b.none
  424a2c:	ldr	x0, [sp, #3160]
  424a30:	ldr	w0, [x0, #8]
  424a34:	b	424a3c <parse_token+0x2db8>
  424a38:	mov	w0, #0x0                   	// #0
  424a3c:	ldr	x1, [sp, #128]
  424a40:	str	x1, [sp, #40]
  424a44:	adrp	x1, 454000 <__func__.10675+0xa0>
  424a48:	add	x1, x1, #0x348
  424a4c:	str	x1, [sp, #32]
  424a50:	str	w0, [sp, #24]
  424a54:	str	x2, [sp, #16]
  424a58:	adrp	x0, 454000 <__func__.10675+0xa0>
  424a5c:	add	x0, x0, #0x288
  424a60:	str	x0, [sp, #8]
  424a64:	str	xzr, [sp]
  424a68:	mov	x7, #0x0                   	// #0
  424a6c:	mov	x6, x21
  424a70:	mov	x5, x19
  424a74:	adrp	x0, 455000 <__func__.10675+0x10a0>
  424a78:	add	x4, x0, #0x920
  424a7c:	mov	w3, #0x29a                 	// #666
  424a80:	mov	x2, x20
  424a84:	ldr	w1, [sp, #628]
  424a88:	ldr	w0, [sp, #624]
  424a8c:	bl	40b020 <log_object_internal@plt>
  424a90:	b	42a9c0 <parse_token+0x8d3c>
  424a94:	strb	wzr, [sp, #145]
  424a98:	ldr	w0, [sp, #116]
  424a9c:	cmp	w0, #0x2
  424aa0:	b.eq	424ab0 <parse_token+0x2e2c>  // b.none
  424aa4:	ldr	w0, [sp, #116]
  424aa8:	cmp	w0, #0x5
  424aac:	b.ne	424ab8 <parse_token+0x2e34>  // b.any
  424ab0:	mov	w0, #0x1                   	// #1
  424ab4:	strb	w0, [sp, #145]
  424ab8:	nop
  424abc:	ldrb	w0, [sp, #145]
  424ac0:	cmp	w0, #0x0
  424ac4:	b.eq	424c28 <parse_token+0x2fa4>  // b.none
  424ac8:	ldr	x0, [sp, #136]
  424acc:	str	x0, [sp, #3104]
  424ad0:	ldr	x0, [sp, #3104]
  424ad4:	cmp	x0, #0x0
  424ad8:	b.eq	424ae8 <parse_token+0x2e64>  // b.none
  424adc:	ldr	x0, [sp, #3104]
  424ae0:	ldr	x0, [x0, #32]
  424ae4:	b	424aec <parse_token+0x2e68>
  424ae8:	mov	x0, #0x0                   	// #0
  424aec:	str	x0, [sp, #3112]
  424af0:	ldr	x0, [sp, #3112]
  424af4:	cmp	x0, #0x0
  424af8:	b.eq	424b08 <parse_token+0x2e84>  // b.none
  424afc:	ldr	x0, [sp, #3112]
  424b00:	ldr	x0, [x0, #8]
  424b04:	b	424b0c <parse_token+0x2e88>
  424b08:	mov	x0, #0x0                   	// #0
  424b0c:	str	x0, [sp, #3120]
  424b10:	ldr	x0, [sp, #3112]
  424b14:	cmp	x0, #0x0
  424b18:	b.eq	424b28 <parse_token+0x2ea4>  // b.none
  424b1c:	ldr	x0, [sp, #3112]
  424b20:	ldr	x0, [x0]
  424b24:	b	424b2c <parse_token+0x2ea8>
  424b28:	mov	x0, #0x0                   	// #0
  424b2c:	str	x0, [sp, #3128]
  424b30:	str	xzr, [sp, #840]
  424b34:	str	xzr, [sp, #3136]
  424b38:	mov	w0, #0x4                   	// #4
  424b3c:	str	w0, [sp, #616]
  424b40:	str	wzr, [sp, #620]
  424b44:	ldr	x0, [sp, #3136]
  424b48:	cmp	x0, #0x0
  424b4c:	b.eq	424b88 <parse_token+0x2f04>  // b.none
  424b50:	mov	w0, #0x1                   	// #1
  424b54:	bl	40be30 <log_get_max_level_realm@plt>
  424b58:	mov	w1, w0
  424b5c:	ldr	w0, [sp, #616]
  424b60:	cmp	w0, w1
  424b64:	cset	w0, le
  424b68:	and	w0, w0, #0xff
  424b6c:	and	x0, x0, #0xff
  424b70:	cmp	x0, #0x0
  424b74:	b.eq	424b88 <parse_token+0x2f04>  // b.none
  424b78:	add	x0, sp, #0x348
  424b7c:	mov	x1, x0
  424b80:	ldr	x0, [sp, #3136]
  424b84:	bl	40aba0 <sd_device_get_sysname@plt>
  424b88:	adrp	x0, 454000 <__func__.10675+0xa0>
  424b8c:	add	x20, x0, #0xbb
  424b90:	ldr	x0, [sp, #840]
  424b94:	cmp	x0, #0x0
  424b98:	b.eq	424ba8 <parse_token+0x2f24>  // b.none
  424b9c:	adrp	x0, 454000 <__func__.10675+0xa0>
  424ba0:	add	x19, x0, #0xd8
  424ba4:	b	424bac <parse_token+0x2f28>
  424ba8:	mov	x19, #0x0                   	// #0
  424bac:	ldr	x21, [sp, #840]
  424bb0:	ldr	x0, [sp, #3128]
  424bb4:	bl	41fb4c <strna>
  424bb8:	mov	x2, x0
  424bbc:	ldr	x0, [sp, #3120]
  424bc0:	cmp	x0, #0x0
  424bc4:	b.eq	424bd4 <parse_token+0x2f50>  // b.none
  424bc8:	ldr	x0, [sp, #3120]
  424bcc:	ldr	w0, [x0, #8]
  424bd0:	b	424bd8 <parse_token+0x2f54>
  424bd4:	mov	w0, #0x0                   	// #0
  424bd8:	ldr	x1, [sp, #128]
  424bdc:	str	x1, [sp, #32]
  424be0:	str	w0, [sp, #24]
  424be4:	str	x2, [sp, #16]
  424be8:	adrp	x0, 454000 <__func__.10675+0xa0>
  424bec:	add	x0, x0, #0x558
  424bf0:	str	x0, [sp, #8]
  424bf4:	str	xzr, [sp]
  424bf8:	mov	x7, #0x0                   	// #0
  424bfc:	mov	x6, x21
  424c00:	mov	x5, x19
  424c04:	adrp	x0, 455000 <__func__.10675+0x10a0>
  424c08:	add	x4, x0, #0x920
  424c0c:	mov	w3, #0x29c                 	// #668
  424c10:	mov	x2, x20
  424c14:	ldr	w1, [sp, #620]
  424c18:	ldr	w0, [sp, #616]
  424c1c:	bl	40b020 <log_object_internal@plt>
  424c20:	mov	w0, #0x4                   	// #4
  424c24:	str	w0, [sp, #116]
  424c28:	ldrb	w0, [sp, #147]
  424c2c:	eor	w0, w0, #0x1
  424c30:	and	w0, w0, #0xff
  424c34:	cmp	w0, #0x0
  424c38:	b.eq	424c70 <parse_token+0x2fec>  // b.none
  424c3c:	mov	w3, #0x0                   	// #0
  424c40:	ldr	x2, [sp, #104]
  424c44:	ldr	x1, [sp, #128]
  424c48:	ldr	x0, [sp, #136]
  424c4c:	bl	421544 <check_value_format_and_warn>
  424c50:	ldr	x4, [sp, #120]
  424c54:	ldr	x3, [sp, #104]
  424c58:	ldr	w2, [sp, #116]
  424c5c:	mov	w1, #0x2b                  	// #43
  424c60:	ldr	x0, [sp, #848]
  424c64:	bl	420e88 <rule_line_add_token>
  424c68:	str	w0, [sp, #152]
  424c6c:	b	42a990 <parse_token+0x8d0c>
  424c70:	ldr	x4, [sp, #120]
  424c74:	ldr	x3, [sp, #104]
  424c78:	ldr	w2, [sp, #116]
  424c7c:	mov	w1, #0xa                   	// #10
  424c80:	ldr	x0, [sp, #848]
  424c84:	bl	420e88 <rule_line_add_token>
  424c88:	str	w0, [sp, #152]
  424c8c:	b	42a990 <parse_token+0x8d0c>
  424c90:	adrp	x0, 454000 <__func__.10675+0xa0>
  424c94:	add	x1, x0, #0x5b0
  424c98:	ldr	x0, [sp, #128]
  424c9c:	bl	40b710 <strcmp@plt>
  424ca0:	cmp	w0, #0x0
  424ca4:	b.ne	425048 <parse_token+0x33c4>  // b.any
  424ca8:	ldr	x2, [sp, #120]
  424cac:	ldr	x1, [sp, #128]
  424cb0:	ldr	x0, [sp, #136]
  424cb4:	bl	4218f0 <check_attr_format_and_warn>
  424cb8:	str	w0, [sp, #152]
  424cbc:	ldr	w0, [sp, #152]
  424cc0:	cmp	w0, #0x0
  424cc4:	b.ge	424cd0 <parse_token+0x304c>  // b.tcont
  424cc8:	ldr	w0, [sp, #152]
  424ccc:	b	42a9c0 <parse_token+0x8d3c>
  424cd0:	ldr	w0, [sp, #116]
  424cd4:	cmp	w0, #0x3
  424cd8:	b.ne	424e4c <parse_token+0x31c8>  // b.any
  424cdc:	ldr	x0, [sp, #136]
  424ce0:	str	x0, [sp, #3064]
  424ce4:	ldr	x0, [sp, #3064]
  424ce8:	cmp	x0, #0x0
  424cec:	b.eq	424cfc <parse_token+0x3078>  // b.none
  424cf0:	ldr	x0, [sp, #3064]
  424cf4:	ldr	x0, [x0, #32]
  424cf8:	b	424d00 <parse_token+0x307c>
  424cfc:	mov	x0, #0x0                   	// #0
  424d00:	str	x0, [sp, #3072]
  424d04:	ldr	x0, [sp, #3072]
  424d08:	cmp	x0, #0x0
  424d0c:	b.eq	424d1c <parse_token+0x3098>  // b.none
  424d10:	ldr	x0, [sp, #3072]
  424d14:	ldr	x0, [x0, #8]
  424d18:	b	424d20 <parse_token+0x309c>
  424d1c:	mov	x0, #0x0                   	// #0
  424d20:	str	x0, [sp, #3080]
  424d24:	ldr	x0, [sp, #3072]
  424d28:	cmp	x0, #0x0
  424d2c:	b.eq	424d3c <parse_token+0x30b8>  // b.none
  424d30:	ldr	x0, [sp, #3072]
  424d34:	ldr	x0, [x0]
  424d38:	b	424d40 <parse_token+0x30bc>
  424d3c:	mov	x0, #0x0                   	// #0
  424d40:	str	x0, [sp, #3088]
  424d44:	str	xzr, [sp, #840]
  424d48:	str	xzr, [sp, #3096]
  424d4c:	mov	w0, #0x3                   	// #3
  424d50:	str	w0, [sp, #608]
  424d54:	mov	w0, #0x16                  	// #22
  424d58:	movk	w0, #0x4000, lsl #16
  424d5c:	str	w0, [sp, #612]
  424d60:	ldr	x0, [sp, #3096]
  424d64:	cmp	x0, #0x0
  424d68:	b.eq	424da4 <parse_token+0x3120>  // b.none
  424d6c:	mov	w0, #0x1                   	// #1
  424d70:	bl	40be30 <log_get_max_level_realm@plt>
  424d74:	mov	w1, w0
  424d78:	ldr	w0, [sp, #608]
  424d7c:	cmp	w0, w1
  424d80:	cset	w0, le
  424d84:	and	w0, w0, #0xff
  424d88:	and	x0, x0, #0xff
  424d8c:	cmp	x0, #0x0
  424d90:	b.eq	424da4 <parse_token+0x3120>  // b.none
  424d94:	add	x0, sp, #0x348
  424d98:	mov	x1, x0
  424d9c:	ldr	x0, [sp, #3096]
  424da0:	bl	40aba0 <sd_device_get_sysname@plt>
  424da4:	adrp	x0, 454000 <__func__.10675+0xa0>
  424da8:	add	x20, x0, #0xbb
  424dac:	ldr	x0, [sp, #840]
  424db0:	cmp	x0, #0x0
  424db4:	b.eq	424dc4 <parse_token+0x3140>  // b.none
  424db8:	adrp	x0, 454000 <__func__.10675+0xa0>
  424dbc:	add	x19, x0, #0xd8
  424dc0:	b	424dc8 <parse_token+0x3144>
  424dc4:	mov	x19, #0x0                   	// #0
  424dc8:	ldr	x21, [sp, #840]
  424dcc:	ldr	x0, [sp, #3088]
  424dd0:	bl	41fb4c <strna>
  424dd4:	mov	x2, x0
  424dd8:	ldr	x0, [sp, #3080]
  424ddc:	cmp	x0, #0x0
  424de0:	b.eq	424df0 <parse_token+0x316c>  // b.none
  424de4:	ldr	x0, [sp, #3080]
  424de8:	ldr	w0, [x0, #8]
  424dec:	b	424df4 <parse_token+0x3170>
  424df0:	mov	w0, #0x0                   	// #0
  424df4:	ldr	x1, [sp, #128]
  424df8:	str	x1, [sp, #40]
  424dfc:	adrp	x1, 454000 <__func__.10675+0xa0>
  424e00:	add	x1, x1, #0x348
  424e04:	str	x1, [sp, #32]
  424e08:	str	w0, [sp, #24]
  424e0c:	str	x2, [sp, #16]
  424e10:	adrp	x0, 454000 <__func__.10675+0xa0>
  424e14:	add	x0, x0, #0x288
  424e18:	str	x0, [sp, #8]
  424e1c:	str	xzr, [sp]
  424e20:	mov	x7, #0x0                   	// #0
  424e24:	mov	x6, x21
  424e28:	mov	x5, x19
  424e2c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  424e30:	add	x4, x0, #0x920
  424e34:	mov	w3, #0x2aa                 	// #682
  424e38:	mov	x2, x20
  424e3c:	ldr	w1, [sp, #612]
  424e40:	ldr	w0, [sp, #608]
  424e44:	bl	40b020 <log_object_internal@plt>
  424e48:	b	42a9c0 <parse_token+0x8d3c>
  424e4c:	strb	wzr, [sp, #146]
  424e50:	ldr	w0, [sp, #116]
  424e54:	cmp	w0, #0x2
  424e58:	b.eq	424e68 <parse_token+0x31e4>  // b.none
  424e5c:	ldr	w0, [sp, #116]
  424e60:	cmp	w0, #0x5
  424e64:	b.ne	424e70 <parse_token+0x31ec>  // b.any
  424e68:	mov	w0, #0x1                   	// #1
  424e6c:	strb	w0, [sp, #146]
  424e70:	nop
  424e74:	ldrb	w0, [sp, #146]
  424e78:	cmp	w0, #0x0
  424e7c:	b.eq	424fe0 <parse_token+0x335c>  // b.none
  424e80:	ldr	x0, [sp, #136]
  424e84:	str	x0, [sp, #3024]
  424e88:	ldr	x0, [sp, #3024]
  424e8c:	cmp	x0, #0x0
  424e90:	b.eq	424ea0 <parse_token+0x321c>  // b.none
  424e94:	ldr	x0, [sp, #3024]
  424e98:	ldr	x0, [x0, #32]
  424e9c:	b	424ea4 <parse_token+0x3220>
  424ea0:	mov	x0, #0x0                   	// #0
  424ea4:	str	x0, [sp, #3032]
  424ea8:	ldr	x0, [sp, #3032]
  424eac:	cmp	x0, #0x0
  424eb0:	b.eq	424ec0 <parse_token+0x323c>  // b.none
  424eb4:	ldr	x0, [sp, #3032]
  424eb8:	ldr	x0, [x0, #8]
  424ebc:	b	424ec4 <parse_token+0x3240>
  424ec0:	mov	x0, #0x0                   	// #0
  424ec4:	str	x0, [sp, #3040]
  424ec8:	ldr	x0, [sp, #3032]
  424ecc:	cmp	x0, #0x0
  424ed0:	b.eq	424ee0 <parse_token+0x325c>  // b.none
  424ed4:	ldr	x0, [sp, #3032]
  424ed8:	ldr	x0, [x0]
  424edc:	b	424ee4 <parse_token+0x3260>
  424ee0:	mov	x0, #0x0                   	// #0
  424ee4:	str	x0, [sp, #3048]
  424ee8:	str	xzr, [sp, #840]
  424eec:	str	xzr, [sp, #3056]
  424ef0:	mov	w0, #0x4                   	// #4
  424ef4:	str	w0, [sp, #600]
  424ef8:	str	wzr, [sp, #604]
  424efc:	ldr	x0, [sp, #3056]
  424f00:	cmp	x0, #0x0
  424f04:	b.eq	424f40 <parse_token+0x32bc>  // b.none
  424f08:	mov	w0, #0x1                   	// #1
  424f0c:	bl	40be30 <log_get_max_level_realm@plt>
  424f10:	mov	w1, w0
  424f14:	ldr	w0, [sp, #600]
  424f18:	cmp	w0, w1
  424f1c:	cset	w0, le
  424f20:	and	w0, w0, #0xff
  424f24:	and	x0, x0, #0xff
  424f28:	cmp	x0, #0x0
  424f2c:	b.eq	424f40 <parse_token+0x32bc>  // b.none
  424f30:	add	x0, sp, #0x348
  424f34:	mov	x1, x0
  424f38:	ldr	x0, [sp, #3056]
  424f3c:	bl	40aba0 <sd_device_get_sysname@plt>
  424f40:	adrp	x0, 454000 <__func__.10675+0xa0>
  424f44:	add	x20, x0, #0xbb
  424f48:	ldr	x0, [sp, #840]
  424f4c:	cmp	x0, #0x0
  424f50:	b.eq	424f60 <parse_token+0x32dc>  // b.none
  424f54:	adrp	x0, 454000 <__func__.10675+0xa0>
  424f58:	add	x19, x0, #0xd8
  424f5c:	b	424f64 <parse_token+0x32e0>
  424f60:	mov	x19, #0x0                   	// #0
  424f64:	ldr	x21, [sp, #840]
  424f68:	ldr	x0, [sp, #3048]
  424f6c:	bl	41fb4c <strna>
  424f70:	mov	x2, x0
  424f74:	ldr	x0, [sp, #3040]
  424f78:	cmp	x0, #0x0
  424f7c:	b.eq	424f8c <parse_token+0x3308>  // b.none
  424f80:	ldr	x0, [sp, #3040]
  424f84:	ldr	w0, [x0, #8]
  424f88:	b	424f90 <parse_token+0x330c>
  424f8c:	mov	w0, #0x0                   	// #0
  424f90:	ldr	x1, [sp, #128]
  424f94:	str	x1, [sp, #32]
  424f98:	str	w0, [sp, #24]
  424f9c:	str	x2, [sp, #16]
  424fa0:	adrp	x0, 454000 <__func__.10675+0xa0>
  424fa4:	add	x0, x0, #0x558
  424fa8:	str	x0, [sp, #8]
  424fac:	str	xzr, [sp]
  424fb0:	mov	x7, #0x0                   	// #0
  424fb4:	mov	x6, x21
  424fb8:	mov	x5, x19
  424fbc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  424fc0:	add	x4, x0, #0x920
  424fc4:	mov	w3, #0x2ac                 	// #684
  424fc8:	mov	x2, x20
  424fcc:	ldr	w1, [sp, #604]
  424fd0:	ldr	w0, [sp, #600]
  424fd4:	bl	40b020 <log_object_internal@plt>
  424fd8:	mov	w0, #0x4                   	// #4
  424fdc:	str	w0, [sp, #116]
  424fe0:	ldrb	w0, [sp, #147]
  424fe4:	eor	w0, w0, #0x1
  424fe8:	and	w0, w0, #0xff
  424fec:	cmp	w0, #0x0
  424ff0:	b.eq	425028 <parse_token+0x33a4>  // b.none
  424ff4:	mov	w3, #0x0                   	// #0
  424ff8:	ldr	x2, [sp, #104]
  424ffc:	ldr	x1, [sp, #128]
  425000:	ldr	x0, [sp, #136]
  425004:	bl	421544 <check_value_format_and_warn>
  425008:	ldr	x4, [sp, #120]
  42500c:	ldr	x3, [sp, #104]
  425010:	ldr	w2, [sp, #116]
  425014:	mov	w1, #0x2c                  	// #44
  425018:	ldr	x0, [sp, #848]
  42501c:	bl	420e88 <rule_line_add_token>
  425020:	str	w0, [sp, #152]
  425024:	b	42a990 <parse_token+0x8d0c>
  425028:	ldr	x4, [sp, #120]
  42502c:	ldr	x3, [sp, #104]
  425030:	ldr	w2, [sp, #116]
  425034:	mov	w1, #0xb                   	// #11
  425038:	ldr	x0, [sp, #848]
  42503c:	bl	420e88 <rule_line_add_token>
  425040:	str	w0, [sp, #152]
  425044:	b	42a990 <parse_token+0x8d0c>
  425048:	adrp	x0, 454000 <__func__.10675+0xa0>
  42504c:	add	x1, x0, #0x5b8
  425050:	ldr	x0, [sp, #128]
  425054:	bl	40b710 <strcmp@plt>
  425058:	cmp	w0, #0x0
  42505c:	b.ne	425380 <parse_token+0x36fc>  // b.any
  425060:	ldr	x0, [sp, #120]
  425064:	cmp	x0, #0x0
  425068:	b.eq	4251dc <parse_token+0x3558>  // b.none
  42506c:	ldr	x0, [sp, #136]
  425070:	str	x0, [sp, #2984]
  425074:	ldr	x0, [sp, #2984]
  425078:	cmp	x0, #0x0
  42507c:	b.eq	42508c <parse_token+0x3408>  // b.none
  425080:	ldr	x0, [sp, #2984]
  425084:	ldr	x0, [x0, #32]
  425088:	b	425090 <parse_token+0x340c>
  42508c:	mov	x0, #0x0                   	// #0
  425090:	str	x0, [sp, #2992]
  425094:	ldr	x0, [sp, #2992]
  425098:	cmp	x0, #0x0
  42509c:	b.eq	4250ac <parse_token+0x3428>  // b.none
  4250a0:	ldr	x0, [sp, #2992]
  4250a4:	ldr	x0, [x0, #8]
  4250a8:	b	4250b0 <parse_token+0x342c>
  4250ac:	mov	x0, #0x0                   	// #0
  4250b0:	str	x0, [sp, #3000]
  4250b4:	ldr	x0, [sp, #2992]
  4250b8:	cmp	x0, #0x0
  4250bc:	b.eq	4250cc <parse_token+0x3448>  // b.none
  4250c0:	ldr	x0, [sp, #2992]
  4250c4:	ldr	x0, [x0]
  4250c8:	b	4250d0 <parse_token+0x344c>
  4250cc:	mov	x0, #0x0                   	// #0
  4250d0:	str	x0, [sp, #3008]
  4250d4:	str	xzr, [sp, #840]
  4250d8:	str	xzr, [sp, #3016]
  4250dc:	mov	w0, #0x3                   	// #3
  4250e0:	str	w0, [sp, #592]
  4250e4:	mov	w0, #0x16                  	// #22
  4250e8:	movk	w0, #0x4000, lsl #16
  4250ec:	str	w0, [sp, #596]
  4250f0:	ldr	x0, [sp, #3016]
  4250f4:	cmp	x0, #0x0
  4250f8:	b.eq	425134 <parse_token+0x34b0>  // b.none
  4250fc:	mov	w0, #0x1                   	// #1
  425100:	bl	40be30 <log_get_max_level_realm@plt>
  425104:	mov	w1, w0
  425108:	ldr	w0, [sp, #592]
  42510c:	cmp	w0, w1
  425110:	cset	w0, le
  425114:	and	w0, w0, #0xff
  425118:	and	x0, x0, #0xff
  42511c:	cmp	x0, #0x0
  425120:	b.eq	425134 <parse_token+0x34b0>  // b.none
  425124:	add	x0, sp, #0x348
  425128:	mov	x1, x0
  42512c:	ldr	x0, [sp, #3016]
  425130:	bl	40aba0 <sd_device_get_sysname@plt>
  425134:	adrp	x0, 454000 <__func__.10675+0xa0>
  425138:	add	x20, x0, #0xbb
  42513c:	ldr	x0, [sp, #840]
  425140:	cmp	x0, #0x0
  425144:	b.eq	425154 <parse_token+0x34d0>  // b.none
  425148:	adrp	x0, 454000 <__func__.10675+0xa0>
  42514c:	add	x19, x0, #0xd8
  425150:	b	425158 <parse_token+0x34d4>
  425154:	mov	x19, #0x0                   	// #0
  425158:	ldr	x21, [sp, #840]
  42515c:	ldr	x0, [sp, #3008]
  425160:	bl	41fb4c <strna>
  425164:	mov	x2, x0
  425168:	ldr	x0, [sp, #3000]
  42516c:	cmp	x0, #0x0
  425170:	b.eq	425180 <parse_token+0x34fc>  // b.none
  425174:	ldr	x0, [sp, #3000]
  425178:	ldr	w0, [x0, #8]
  42517c:	b	425184 <parse_token+0x3500>
  425180:	mov	w0, #0x0                   	// #0
  425184:	ldr	x1, [sp, #128]
  425188:	str	x1, [sp, #40]
  42518c:	adrp	x1, 454000 <__func__.10675+0xa0>
  425190:	add	x1, x1, #0x278
  425194:	str	x1, [sp, #32]
  425198:	str	w0, [sp, #24]
  42519c:	str	x2, [sp, #16]
  4251a0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4251a4:	add	x0, x0, #0x288
  4251a8:	str	x0, [sp, #8]
  4251ac:	str	xzr, [sp]
  4251b0:	mov	x7, #0x0                   	// #0
  4251b4:	mov	x6, x21
  4251b8:	mov	x5, x19
  4251bc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4251c0:	add	x4, x0, #0x920
  4251c4:	mov	w3, #0x2b7                 	// #695
  4251c8:	mov	x2, x20
  4251cc:	ldr	w1, [sp, #596]
  4251d0:	ldr	w0, [sp, #592]
  4251d4:	bl	40b020 <log_object_internal@plt>
  4251d8:	b	42a9c0 <parse_token+0x8d3c>
  4251dc:	ldrb	w0, [sp, #147]
  4251e0:	eor	w0, w0, #0x1
  4251e4:	and	w0, w0, #0xff
  4251e8:	cmp	w0, #0x0
  4251ec:	b.eq	425360 <parse_token+0x36dc>  // b.none
  4251f0:	ldr	x0, [sp, #136]
  4251f4:	str	x0, [sp, #2944]
  4251f8:	ldr	x0, [sp, #2944]
  4251fc:	cmp	x0, #0x0
  425200:	b.eq	425210 <parse_token+0x358c>  // b.none
  425204:	ldr	x0, [sp, #2944]
  425208:	ldr	x0, [x0, #32]
  42520c:	b	425214 <parse_token+0x3590>
  425210:	mov	x0, #0x0                   	// #0
  425214:	str	x0, [sp, #2952]
  425218:	ldr	x0, [sp, #2952]
  42521c:	cmp	x0, #0x0
  425220:	b.eq	425230 <parse_token+0x35ac>  // b.none
  425224:	ldr	x0, [sp, #2952]
  425228:	ldr	x0, [x0, #8]
  42522c:	b	425234 <parse_token+0x35b0>
  425230:	mov	x0, #0x0                   	// #0
  425234:	str	x0, [sp, #2960]
  425238:	ldr	x0, [sp, #2952]
  42523c:	cmp	x0, #0x0
  425240:	b.eq	425250 <parse_token+0x35cc>  // b.none
  425244:	ldr	x0, [sp, #2952]
  425248:	ldr	x0, [x0]
  42524c:	b	425254 <parse_token+0x35d0>
  425250:	mov	x0, #0x0                   	// #0
  425254:	str	x0, [sp, #2968]
  425258:	str	xzr, [sp, #840]
  42525c:	str	xzr, [sp, #2976]
  425260:	mov	w0, #0x3                   	// #3
  425264:	str	w0, [sp, #584]
  425268:	mov	w0, #0x16                  	// #22
  42526c:	movk	w0, #0x4000, lsl #16
  425270:	str	w0, [sp, #588]
  425274:	ldr	x0, [sp, #2976]
  425278:	cmp	x0, #0x0
  42527c:	b.eq	4252b8 <parse_token+0x3634>  // b.none
  425280:	mov	w0, #0x1                   	// #1
  425284:	bl	40be30 <log_get_max_level_realm@plt>
  425288:	mov	w1, w0
  42528c:	ldr	w0, [sp, #584]
  425290:	cmp	w0, w1
  425294:	cset	w0, le
  425298:	and	w0, w0, #0xff
  42529c:	and	x0, x0, #0xff
  4252a0:	cmp	x0, #0x0
  4252a4:	b.eq	4252b8 <parse_token+0x3634>  // b.none
  4252a8:	add	x0, sp, #0x348
  4252ac:	mov	x1, x0
  4252b0:	ldr	x0, [sp, #2976]
  4252b4:	bl	40aba0 <sd_device_get_sysname@plt>
  4252b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4252bc:	add	x20, x0, #0xbb
  4252c0:	ldr	x0, [sp, #840]
  4252c4:	cmp	x0, #0x0
  4252c8:	b.eq	4252d8 <parse_token+0x3654>  // b.none
  4252cc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4252d0:	add	x19, x0, #0xd8
  4252d4:	b	4252dc <parse_token+0x3658>
  4252d8:	mov	x19, #0x0                   	// #0
  4252dc:	ldr	x21, [sp, #840]
  4252e0:	ldr	x0, [sp, #2968]
  4252e4:	bl	41fb4c <strna>
  4252e8:	mov	x2, x0
  4252ec:	ldr	x0, [sp, #2960]
  4252f0:	cmp	x0, #0x0
  4252f4:	b.eq	425304 <parse_token+0x3680>  // b.none
  4252f8:	ldr	x0, [sp, #2960]
  4252fc:	ldr	w0, [x0, #8]
  425300:	b	425308 <parse_token+0x3684>
  425304:	mov	w0, #0x0                   	// #0
  425308:	ldr	x1, [sp, #128]
  42530c:	str	x1, [sp, #40]
  425310:	adrp	x1, 454000 <__func__.10675+0xa0>
  425314:	add	x1, x1, #0x348
  425318:	str	x1, [sp, #32]
  42531c:	str	w0, [sp, #24]
  425320:	str	x2, [sp, #16]
  425324:	adrp	x0, 454000 <__func__.10675+0xa0>
  425328:	add	x0, x0, #0x288
  42532c:	str	x0, [sp, #8]
  425330:	str	xzr, [sp]
  425334:	mov	x7, #0x0                   	// #0
  425338:	mov	x6, x21
  42533c:	mov	x5, x19
  425340:	adrp	x0, 455000 <__func__.10675+0x10a0>
  425344:	add	x4, x0, #0x920
  425348:	mov	w3, #0x2b9                 	// #697
  42534c:	mov	x2, x20
  425350:	ldr	w1, [sp, #588]
  425354:	ldr	w0, [sp, #584]
  425358:	bl	40b020 <log_object_internal@plt>
  42535c:	b	42a9c0 <parse_token+0x8d3c>
  425360:	mov	x4, #0x0                   	// #0
  425364:	ldr	x3, [sp, #104]
  425368:	ldr	w2, [sp, #116]
  42536c:	mov	w1, #0xc                   	// #12
  425370:	ldr	x0, [sp, #848]
  425374:	bl	420e88 <rule_line_add_token>
  425378:	str	w0, [sp, #152]
  42537c:	b	42a990 <parse_token+0x8d0c>
  425380:	adrp	x0, 454000 <__func__.10675+0xa0>
  425384:	add	x1, x0, #0x5c0
  425388:	ldr	x0, [sp, #128]
  42538c:	bl	40b710 <strcmp@plt>
  425390:	cmp	w0, #0x0
  425394:	b.ne	4256b8 <parse_token+0x3a34>  // b.any
  425398:	ldr	x0, [sp, #120]
  42539c:	cmp	x0, #0x0
  4253a0:	b.eq	425514 <parse_token+0x3890>  // b.none
  4253a4:	ldr	x0, [sp, #136]
  4253a8:	str	x0, [sp, #2904]
  4253ac:	ldr	x0, [sp, #2904]
  4253b0:	cmp	x0, #0x0
  4253b4:	b.eq	4253c4 <parse_token+0x3740>  // b.none
  4253b8:	ldr	x0, [sp, #2904]
  4253bc:	ldr	x0, [x0, #32]
  4253c0:	b	4253c8 <parse_token+0x3744>
  4253c4:	mov	x0, #0x0                   	// #0
  4253c8:	str	x0, [sp, #2912]
  4253cc:	ldr	x0, [sp, #2912]
  4253d0:	cmp	x0, #0x0
  4253d4:	b.eq	4253e4 <parse_token+0x3760>  // b.none
  4253d8:	ldr	x0, [sp, #2912]
  4253dc:	ldr	x0, [x0, #8]
  4253e0:	b	4253e8 <parse_token+0x3764>
  4253e4:	mov	x0, #0x0                   	// #0
  4253e8:	str	x0, [sp, #2920]
  4253ec:	ldr	x0, [sp, #2912]
  4253f0:	cmp	x0, #0x0
  4253f4:	b.eq	425404 <parse_token+0x3780>  // b.none
  4253f8:	ldr	x0, [sp, #2912]
  4253fc:	ldr	x0, [x0]
  425400:	b	425408 <parse_token+0x3784>
  425404:	mov	x0, #0x0                   	// #0
  425408:	str	x0, [sp, #2928]
  42540c:	str	xzr, [sp, #840]
  425410:	str	xzr, [sp, #2936]
  425414:	mov	w0, #0x3                   	// #3
  425418:	str	w0, [sp, #576]
  42541c:	mov	w0, #0x16                  	// #22
  425420:	movk	w0, #0x4000, lsl #16
  425424:	str	w0, [sp, #580]
  425428:	ldr	x0, [sp, #2936]
  42542c:	cmp	x0, #0x0
  425430:	b.eq	42546c <parse_token+0x37e8>  // b.none
  425434:	mov	w0, #0x1                   	// #1
  425438:	bl	40be30 <log_get_max_level_realm@plt>
  42543c:	mov	w1, w0
  425440:	ldr	w0, [sp, #576]
  425444:	cmp	w0, w1
  425448:	cset	w0, le
  42544c:	and	w0, w0, #0xff
  425450:	and	x0, x0, #0xff
  425454:	cmp	x0, #0x0
  425458:	b.eq	42546c <parse_token+0x37e8>  // b.none
  42545c:	add	x0, sp, #0x348
  425460:	mov	x1, x0
  425464:	ldr	x0, [sp, #2936]
  425468:	bl	40aba0 <sd_device_get_sysname@plt>
  42546c:	adrp	x0, 454000 <__func__.10675+0xa0>
  425470:	add	x20, x0, #0xbb
  425474:	ldr	x0, [sp, #840]
  425478:	cmp	x0, #0x0
  42547c:	b.eq	42548c <parse_token+0x3808>  // b.none
  425480:	adrp	x0, 454000 <__func__.10675+0xa0>
  425484:	add	x19, x0, #0xd8
  425488:	b	425490 <parse_token+0x380c>
  42548c:	mov	x19, #0x0                   	// #0
  425490:	ldr	x21, [sp, #840]
  425494:	ldr	x0, [sp, #2928]
  425498:	bl	41fb4c <strna>
  42549c:	mov	x2, x0
  4254a0:	ldr	x0, [sp, #2920]
  4254a4:	cmp	x0, #0x0
  4254a8:	b.eq	4254b8 <parse_token+0x3834>  // b.none
  4254ac:	ldr	x0, [sp, #2920]
  4254b0:	ldr	w0, [x0, #8]
  4254b4:	b	4254bc <parse_token+0x3838>
  4254b8:	mov	w0, #0x0                   	// #0
  4254bc:	ldr	x1, [sp, #128]
  4254c0:	str	x1, [sp, #40]
  4254c4:	adrp	x1, 454000 <__func__.10675+0xa0>
  4254c8:	add	x1, x1, #0x278
  4254cc:	str	x1, [sp, #32]
  4254d0:	str	w0, [sp, #24]
  4254d4:	str	x2, [sp, #16]
  4254d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4254dc:	add	x0, x0, #0x288
  4254e0:	str	x0, [sp, #8]
  4254e4:	str	xzr, [sp]
  4254e8:	mov	x7, #0x0                   	// #0
  4254ec:	mov	x6, x21
  4254f0:	mov	x5, x19
  4254f4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4254f8:	add	x4, x0, #0x920
  4254fc:	mov	w3, #0x2be                 	// #702
  425500:	mov	x2, x20
  425504:	ldr	w1, [sp, #580]
  425508:	ldr	w0, [sp, #576]
  42550c:	bl	40b020 <log_object_internal@plt>
  425510:	b	42a9c0 <parse_token+0x8d3c>
  425514:	ldrb	w0, [sp, #147]
  425518:	eor	w0, w0, #0x1
  42551c:	and	w0, w0, #0xff
  425520:	cmp	w0, #0x0
  425524:	b.eq	425698 <parse_token+0x3a14>  // b.none
  425528:	ldr	x0, [sp, #136]
  42552c:	str	x0, [sp, #2864]
  425530:	ldr	x0, [sp, #2864]
  425534:	cmp	x0, #0x0
  425538:	b.eq	425548 <parse_token+0x38c4>  // b.none
  42553c:	ldr	x0, [sp, #2864]
  425540:	ldr	x0, [x0, #32]
  425544:	b	42554c <parse_token+0x38c8>
  425548:	mov	x0, #0x0                   	// #0
  42554c:	str	x0, [sp, #2872]
  425550:	ldr	x0, [sp, #2872]
  425554:	cmp	x0, #0x0
  425558:	b.eq	425568 <parse_token+0x38e4>  // b.none
  42555c:	ldr	x0, [sp, #2872]
  425560:	ldr	x0, [x0, #8]
  425564:	b	42556c <parse_token+0x38e8>
  425568:	mov	x0, #0x0                   	// #0
  42556c:	str	x0, [sp, #2880]
  425570:	ldr	x0, [sp, #2872]
  425574:	cmp	x0, #0x0
  425578:	b.eq	425588 <parse_token+0x3904>  // b.none
  42557c:	ldr	x0, [sp, #2872]
  425580:	ldr	x0, [x0]
  425584:	b	42558c <parse_token+0x3908>
  425588:	mov	x0, #0x0                   	// #0
  42558c:	str	x0, [sp, #2888]
  425590:	str	xzr, [sp, #840]
  425594:	str	xzr, [sp, #2896]
  425598:	mov	w0, #0x3                   	// #3
  42559c:	str	w0, [sp, #568]
  4255a0:	mov	w0, #0x16                  	// #22
  4255a4:	movk	w0, #0x4000, lsl #16
  4255a8:	str	w0, [sp, #572]
  4255ac:	ldr	x0, [sp, #2896]
  4255b0:	cmp	x0, #0x0
  4255b4:	b.eq	4255f0 <parse_token+0x396c>  // b.none
  4255b8:	mov	w0, #0x1                   	// #1
  4255bc:	bl	40be30 <log_get_max_level_realm@plt>
  4255c0:	mov	w1, w0
  4255c4:	ldr	w0, [sp, #568]
  4255c8:	cmp	w0, w1
  4255cc:	cset	w0, le
  4255d0:	and	w0, w0, #0xff
  4255d4:	and	x0, x0, #0xff
  4255d8:	cmp	x0, #0x0
  4255dc:	b.eq	4255f0 <parse_token+0x396c>  // b.none
  4255e0:	add	x0, sp, #0x348
  4255e4:	mov	x1, x0
  4255e8:	ldr	x0, [sp, #2896]
  4255ec:	bl	40aba0 <sd_device_get_sysname@plt>
  4255f0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4255f4:	add	x20, x0, #0xbb
  4255f8:	ldr	x0, [sp, #840]
  4255fc:	cmp	x0, #0x0
  425600:	b.eq	425610 <parse_token+0x398c>  // b.none
  425604:	adrp	x0, 454000 <__func__.10675+0xa0>
  425608:	add	x19, x0, #0xd8
  42560c:	b	425614 <parse_token+0x3990>
  425610:	mov	x19, #0x0                   	// #0
  425614:	ldr	x21, [sp, #840]
  425618:	ldr	x0, [sp, #2888]
  42561c:	bl	41fb4c <strna>
  425620:	mov	x2, x0
  425624:	ldr	x0, [sp, #2880]
  425628:	cmp	x0, #0x0
  42562c:	b.eq	42563c <parse_token+0x39b8>  // b.none
  425630:	ldr	x0, [sp, #2880]
  425634:	ldr	w0, [x0, #8]
  425638:	b	425640 <parse_token+0x39bc>
  42563c:	mov	w0, #0x0                   	// #0
  425640:	ldr	x1, [sp, #128]
  425644:	str	x1, [sp, #40]
  425648:	adrp	x1, 454000 <__func__.10675+0xa0>
  42564c:	add	x1, x1, #0x348
  425650:	str	x1, [sp, #32]
  425654:	str	w0, [sp, #24]
  425658:	str	x2, [sp, #16]
  42565c:	adrp	x0, 454000 <__func__.10675+0xa0>
  425660:	add	x0, x0, #0x288
  425664:	str	x0, [sp, #8]
  425668:	str	xzr, [sp]
  42566c:	mov	x7, #0x0                   	// #0
  425670:	mov	x6, x21
  425674:	mov	x5, x19
  425678:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42567c:	add	x4, x0, #0x920
  425680:	mov	w3, #0x2c0                 	// #704
  425684:	mov	x2, x20
  425688:	ldr	w1, [sp, #572]
  42568c:	ldr	w0, [sp, #568]
  425690:	bl	40b020 <log_object_internal@plt>
  425694:	b	42a9c0 <parse_token+0x8d3c>
  425698:	mov	x4, #0x0                   	// #0
  42569c:	ldr	x3, [sp, #104]
  4256a0:	ldr	w2, [sp, #116]
  4256a4:	mov	w1, #0xd                   	// #13
  4256a8:	ldr	x0, [sp, #848]
  4256ac:	bl	420e88 <rule_line_add_token>
  4256b0:	str	w0, [sp, #152]
  4256b4:	b	42a990 <parse_token+0x8d0c>
  4256b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4256bc:	add	x1, x0, #0x5d0
  4256c0:	ldr	x0, [sp, #128]
  4256c4:	bl	40b710 <strcmp@plt>
  4256c8:	cmp	w0, #0x0
  4256cc:	b.ne	4259f0 <parse_token+0x3d6c>  // b.any
  4256d0:	ldr	x0, [sp, #120]
  4256d4:	cmp	x0, #0x0
  4256d8:	b.eq	42584c <parse_token+0x3bc8>  // b.none
  4256dc:	ldr	x0, [sp, #136]
  4256e0:	str	x0, [sp, #2824]
  4256e4:	ldr	x0, [sp, #2824]
  4256e8:	cmp	x0, #0x0
  4256ec:	b.eq	4256fc <parse_token+0x3a78>  // b.none
  4256f0:	ldr	x0, [sp, #2824]
  4256f4:	ldr	x0, [x0, #32]
  4256f8:	b	425700 <parse_token+0x3a7c>
  4256fc:	mov	x0, #0x0                   	// #0
  425700:	str	x0, [sp, #2832]
  425704:	ldr	x0, [sp, #2832]
  425708:	cmp	x0, #0x0
  42570c:	b.eq	42571c <parse_token+0x3a98>  // b.none
  425710:	ldr	x0, [sp, #2832]
  425714:	ldr	x0, [x0, #8]
  425718:	b	425720 <parse_token+0x3a9c>
  42571c:	mov	x0, #0x0                   	// #0
  425720:	str	x0, [sp, #2840]
  425724:	ldr	x0, [sp, #2832]
  425728:	cmp	x0, #0x0
  42572c:	b.eq	42573c <parse_token+0x3ab8>  // b.none
  425730:	ldr	x0, [sp, #2832]
  425734:	ldr	x0, [x0]
  425738:	b	425740 <parse_token+0x3abc>
  42573c:	mov	x0, #0x0                   	// #0
  425740:	str	x0, [sp, #2848]
  425744:	str	xzr, [sp, #840]
  425748:	str	xzr, [sp, #2856]
  42574c:	mov	w0, #0x3                   	// #3
  425750:	str	w0, [sp, #560]
  425754:	mov	w0, #0x16                  	// #22
  425758:	movk	w0, #0x4000, lsl #16
  42575c:	str	w0, [sp, #564]
  425760:	ldr	x0, [sp, #2856]
  425764:	cmp	x0, #0x0
  425768:	b.eq	4257a4 <parse_token+0x3b20>  // b.none
  42576c:	mov	w0, #0x1                   	// #1
  425770:	bl	40be30 <log_get_max_level_realm@plt>
  425774:	mov	w1, w0
  425778:	ldr	w0, [sp, #560]
  42577c:	cmp	w0, w1
  425780:	cset	w0, le
  425784:	and	w0, w0, #0xff
  425788:	and	x0, x0, #0xff
  42578c:	cmp	x0, #0x0
  425790:	b.eq	4257a4 <parse_token+0x3b20>  // b.none
  425794:	add	x0, sp, #0x348
  425798:	mov	x1, x0
  42579c:	ldr	x0, [sp, #2856]
  4257a0:	bl	40aba0 <sd_device_get_sysname@plt>
  4257a4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4257a8:	add	x20, x0, #0xbb
  4257ac:	ldr	x0, [sp, #840]
  4257b0:	cmp	x0, #0x0
  4257b4:	b.eq	4257c4 <parse_token+0x3b40>  // b.none
  4257b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4257bc:	add	x19, x0, #0xd8
  4257c0:	b	4257c8 <parse_token+0x3b44>
  4257c4:	mov	x19, #0x0                   	// #0
  4257c8:	ldr	x21, [sp, #840]
  4257cc:	ldr	x0, [sp, #2848]
  4257d0:	bl	41fb4c <strna>
  4257d4:	mov	x2, x0
  4257d8:	ldr	x0, [sp, #2840]
  4257dc:	cmp	x0, #0x0
  4257e0:	b.eq	4257f0 <parse_token+0x3b6c>  // b.none
  4257e4:	ldr	x0, [sp, #2840]
  4257e8:	ldr	w0, [x0, #8]
  4257ec:	b	4257f4 <parse_token+0x3b70>
  4257f0:	mov	w0, #0x0                   	// #0
  4257f4:	ldr	x1, [sp, #128]
  4257f8:	str	x1, [sp, #40]
  4257fc:	adrp	x1, 454000 <__func__.10675+0xa0>
  425800:	add	x1, x1, #0x278
  425804:	str	x1, [sp, #32]
  425808:	str	w0, [sp, #24]
  42580c:	str	x2, [sp, #16]
  425810:	adrp	x0, 454000 <__func__.10675+0xa0>
  425814:	add	x0, x0, #0x288
  425818:	str	x0, [sp, #8]
  42581c:	str	xzr, [sp]
  425820:	mov	x7, #0x0                   	// #0
  425824:	mov	x6, x21
  425828:	mov	x5, x19
  42582c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  425830:	add	x4, x0, #0x920
  425834:	mov	w3, #0x2c5                 	// #709
  425838:	mov	x2, x20
  42583c:	ldr	w1, [sp, #564]
  425840:	ldr	w0, [sp, #560]
  425844:	bl	40b020 <log_object_internal@plt>
  425848:	b	42a9c0 <parse_token+0x8d3c>
  42584c:	ldrb	w0, [sp, #147]
  425850:	eor	w0, w0, #0x1
  425854:	and	w0, w0, #0xff
  425858:	cmp	w0, #0x0
  42585c:	b.eq	4259d0 <parse_token+0x3d4c>  // b.none
  425860:	ldr	x0, [sp, #136]
  425864:	str	x0, [sp, #2784]
  425868:	ldr	x0, [sp, #2784]
  42586c:	cmp	x0, #0x0
  425870:	b.eq	425880 <parse_token+0x3bfc>  // b.none
  425874:	ldr	x0, [sp, #2784]
  425878:	ldr	x0, [x0, #32]
  42587c:	b	425884 <parse_token+0x3c00>
  425880:	mov	x0, #0x0                   	// #0
  425884:	str	x0, [sp, #2792]
  425888:	ldr	x0, [sp, #2792]
  42588c:	cmp	x0, #0x0
  425890:	b.eq	4258a0 <parse_token+0x3c1c>  // b.none
  425894:	ldr	x0, [sp, #2792]
  425898:	ldr	x0, [x0, #8]
  42589c:	b	4258a4 <parse_token+0x3c20>
  4258a0:	mov	x0, #0x0                   	// #0
  4258a4:	str	x0, [sp, #2800]
  4258a8:	ldr	x0, [sp, #2792]
  4258ac:	cmp	x0, #0x0
  4258b0:	b.eq	4258c0 <parse_token+0x3c3c>  // b.none
  4258b4:	ldr	x0, [sp, #2792]
  4258b8:	ldr	x0, [x0]
  4258bc:	b	4258c4 <parse_token+0x3c40>
  4258c0:	mov	x0, #0x0                   	// #0
  4258c4:	str	x0, [sp, #2808]
  4258c8:	str	xzr, [sp, #840]
  4258cc:	str	xzr, [sp, #2816]
  4258d0:	mov	w0, #0x3                   	// #3
  4258d4:	str	w0, [sp, #552]
  4258d8:	mov	w0, #0x16                  	// #22
  4258dc:	movk	w0, #0x4000, lsl #16
  4258e0:	str	w0, [sp, #556]
  4258e4:	ldr	x0, [sp, #2816]
  4258e8:	cmp	x0, #0x0
  4258ec:	b.eq	425928 <parse_token+0x3ca4>  // b.none
  4258f0:	mov	w0, #0x1                   	// #1
  4258f4:	bl	40be30 <log_get_max_level_realm@plt>
  4258f8:	mov	w1, w0
  4258fc:	ldr	w0, [sp, #552]
  425900:	cmp	w0, w1
  425904:	cset	w0, le
  425908:	and	w0, w0, #0xff
  42590c:	and	x0, x0, #0xff
  425910:	cmp	x0, #0x0
  425914:	b.eq	425928 <parse_token+0x3ca4>  // b.none
  425918:	add	x0, sp, #0x348
  42591c:	mov	x1, x0
  425920:	ldr	x0, [sp, #2816]
  425924:	bl	40aba0 <sd_device_get_sysname@plt>
  425928:	adrp	x0, 454000 <__func__.10675+0xa0>
  42592c:	add	x20, x0, #0xbb
  425930:	ldr	x0, [sp, #840]
  425934:	cmp	x0, #0x0
  425938:	b.eq	425948 <parse_token+0x3cc4>  // b.none
  42593c:	adrp	x0, 454000 <__func__.10675+0xa0>
  425940:	add	x19, x0, #0xd8
  425944:	b	42594c <parse_token+0x3cc8>
  425948:	mov	x19, #0x0                   	// #0
  42594c:	ldr	x21, [sp, #840]
  425950:	ldr	x0, [sp, #2808]
  425954:	bl	41fb4c <strna>
  425958:	mov	x2, x0
  42595c:	ldr	x0, [sp, #2800]
  425960:	cmp	x0, #0x0
  425964:	b.eq	425974 <parse_token+0x3cf0>  // b.none
  425968:	ldr	x0, [sp, #2800]
  42596c:	ldr	w0, [x0, #8]
  425970:	b	425978 <parse_token+0x3cf4>
  425974:	mov	w0, #0x0                   	// #0
  425978:	ldr	x1, [sp, #128]
  42597c:	str	x1, [sp, #40]
  425980:	adrp	x1, 454000 <__func__.10675+0xa0>
  425984:	add	x1, x1, #0x348
  425988:	str	x1, [sp, #32]
  42598c:	str	w0, [sp, #24]
  425990:	str	x2, [sp, #16]
  425994:	adrp	x0, 454000 <__func__.10675+0xa0>
  425998:	add	x0, x0, #0x288
  42599c:	str	x0, [sp, #8]
  4259a0:	str	xzr, [sp]
  4259a4:	mov	x7, #0x0                   	// #0
  4259a8:	mov	x6, x21
  4259ac:	mov	x5, x19
  4259b0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4259b4:	add	x4, x0, #0x920
  4259b8:	mov	w3, #0x2c7                 	// #711
  4259bc:	mov	x2, x20
  4259c0:	ldr	w1, [sp, #556]
  4259c4:	ldr	w0, [sp, #552]
  4259c8:	bl	40b020 <log_object_internal@plt>
  4259cc:	b	42a9c0 <parse_token+0x8d3c>
  4259d0:	mov	x4, #0x0                   	// #0
  4259d4:	ldr	x3, [sp, #104]
  4259d8:	ldr	w2, [sp, #116]
  4259dc:	mov	w1, #0xe                   	// #14
  4259e0:	ldr	x0, [sp, #848]
  4259e4:	bl	420e88 <rule_line_add_token>
  4259e8:	str	w0, [sp, #152]
  4259ec:	b	42a990 <parse_token+0x8d0c>
  4259f0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4259f4:	add	x1, x0, #0x5d8
  4259f8:	ldr	x0, [sp, #128]
  4259fc:	bl	40b710 <strcmp@plt>
  425a00:	cmp	w0, #0x0
  425a04:	b.ne	425ea4 <parse_token+0x4220>  // b.any
  425a08:	ldr	x2, [sp, #120]
  425a0c:	ldr	x1, [sp, #128]
  425a10:	ldr	x0, [sp, #136]
  425a14:	bl	4218f0 <check_attr_format_and_warn>
  425a18:	str	w0, [sp, #152]
  425a1c:	ldr	w0, [sp, #152]
  425a20:	cmp	w0, #0x0
  425a24:	b.ge	425a30 <parse_token+0x3dac>  // b.tcont
  425a28:	ldr	w0, [sp, #152]
  425a2c:	b	42a9c0 <parse_token+0x8d3c>
  425a30:	ldrb	w0, [sp, #147]
  425a34:	eor	w0, w0, #0x1
  425a38:	and	w0, w0, #0xff
  425a3c:	cmp	w0, #0x0
  425a40:	b.eq	425bb4 <parse_token+0x3f30>  // b.none
  425a44:	ldr	x0, [sp, #136]
  425a48:	str	x0, [sp, #2744]
  425a4c:	ldr	x0, [sp, #2744]
  425a50:	cmp	x0, #0x0
  425a54:	b.eq	425a64 <parse_token+0x3de0>  // b.none
  425a58:	ldr	x0, [sp, #2744]
  425a5c:	ldr	x0, [x0, #32]
  425a60:	b	425a68 <parse_token+0x3de4>
  425a64:	mov	x0, #0x0                   	// #0
  425a68:	str	x0, [sp, #2752]
  425a6c:	ldr	x0, [sp, #2752]
  425a70:	cmp	x0, #0x0
  425a74:	b.eq	425a84 <parse_token+0x3e00>  // b.none
  425a78:	ldr	x0, [sp, #2752]
  425a7c:	ldr	x0, [x0, #8]
  425a80:	b	425a88 <parse_token+0x3e04>
  425a84:	mov	x0, #0x0                   	// #0
  425a88:	str	x0, [sp, #2760]
  425a8c:	ldr	x0, [sp, #2752]
  425a90:	cmp	x0, #0x0
  425a94:	b.eq	425aa4 <parse_token+0x3e20>  // b.none
  425a98:	ldr	x0, [sp, #2752]
  425a9c:	ldr	x0, [x0]
  425aa0:	b	425aa8 <parse_token+0x3e24>
  425aa4:	mov	x0, #0x0                   	// #0
  425aa8:	str	x0, [sp, #2768]
  425aac:	str	xzr, [sp, #840]
  425ab0:	str	xzr, [sp, #2776]
  425ab4:	mov	w0, #0x3                   	// #3
  425ab8:	str	w0, [sp, #544]
  425abc:	mov	w0, #0x16                  	// #22
  425ac0:	movk	w0, #0x4000, lsl #16
  425ac4:	str	w0, [sp, #548]
  425ac8:	ldr	x0, [sp, #2776]
  425acc:	cmp	x0, #0x0
  425ad0:	b.eq	425b0c <parse_token+0x3e88>  // b.none
  425ad4:	mov	w0, #0x1                   	// #1
  425ad8:	bl	40be30 <log_get_max_level_realm@plt>
  425adc:	mov	w1, w0
  425ae0:	ldr	w0, [sp, #544]
  425ae4:	cmp	w0, w1
  425ae8:	cset	w0, le
  425aec:	and	w0, w0, #0xff
  425af0:	and	x0, x0, #0xff
  425af4:	cmp	x0, #0x0
  425af8:	b.eq	425b0c <parse_token+0x3e88>  // b.none
  425afc:	add	x0, sp, #0x348
  425b00:	mov	x1, x0
  425b04:	ldr	x0, [sp, #2776]
  425b08:	bl	40aba0 <sd_device_get_sysname@plt>
  425b0c:	adrp	x0, 454000 <__func__.10675+0xa0>
  425b10:	add	x20, x0, #0xbb
  425b14:	ldr	x0, [sp, #840]
  425b18:	cmp	x0, #0x0
  425b1c:	b.eq	425b2c <parse_token+0x3ea8>  // b.none
  425b20:	adrp	x0, 454000 <__func__.10675+0xa0>
  425b24:	add	x19, x0, #0xd8
  425b28:	b	425b30 <parse_token+0x3eac>
  425b2c:	mov	x19, #0x0                   	// #0
  425b30:	ldr	x21, [sp, #840]
  425b34:	ldr	x0, [sp, #2768]
  425b38:	bl	41fb4c <strna>
  425b3c:	mov	x2, x0
  425b40:	ldr	x0, [sp, #2760]
  425b44:	cmp	x0, #0x0
  425b48:	b.eq	425b58 <parse_token+0x3ed4>  // b.none
  425b4c:	ldr	x0, [sp, #2760]
  425b50:	ldr	w0, [x0, #8]
  425b54:	b	425b5c <parse_token+0x3ed8>
  425b58:	mov	w0, #0x0                   	// #0
  425b5c:	ldr	x1, [sp, #128]
  425b60:	str	x1, [sp, #40]
  425b64:	adrp	x1, 454000 <__func__.10675+0xa0>
  425b68:	add	x1, x1, #0x348
  425b6c:	str	x1, [sp, #32]
  425b70:	str	w0, [sp, #24]
  425b74:	str	x2, [sp, #16]
  425b78:	adrp	x0, 454000 <__func__.10675+0xa0>
  425b7c:	add	x0, x0, #0x288
  425b80:	str	x0, [sp, #8]
  425b84:	str	xzr, [sp]
  425b88:	mov	x7, #0x0                   	// #0
  425b8c:	mov	x6, x21
  425b90:	mov	x5, x19
  425b94:	adrp	x0, 455000 <__func__.10675+0x10a0>
  425b98:	add	x4, x0, #0x920
  425b9c:	mov	w3, #0x2cf                 	// #719
  425ba0:	mov	x2, x20
  425ba4:	ldr	w1, [sp, #548]
  425ba8:	ldr	w0, [sp, #544]
  425bac:	bl	40b020 <log_object_internal@plt>
  425bb0:	b	42a9c0 <parse_token+0x8d3c>
  425bb4:	adrp	x0, 454000 <__func__.10675+0xa0>
  425bb8:	add	x1, x0, #0x5e0
  425bbc:	ldr	x0, [sp, #120]
  425bc0:	bl	41fbb0 <startswith>
  425bc4:	cmp	x0, #0x0
  425bc8:	b.eq	425d1c <parse_token+0x4098>  // b.none
  425bcc:	ldr	x0, [sp, #136]
  425bd0:	str	x0, [sp, #2664]
  425bd4:	ldr	x0, [sp, #2664]
  425bd8:	cmp	x0, #0x0
  425bdc:	b.eq	425bec <parse_token+0x3f68>  // b.none
  425be0:	ldr	x0, [sp, #2664]
  425be4:	ldr	x0, [x0, #32]
  425be8:	b	425bf0 <parse_token+0x3f6c>
  425bec:	mov	x0, #0x0                   	// #0
  425bf0:	str	x0, [sp, #2672]
  425bf4:	ldr	x0, [sp, #2672]
  425bf8:	cmp	x0, #0x0
  425bfc:	b.eq	425c0c <parse_token+0x3f88>  // b.none
  425c00:	ldr	x0, [sp, #2672]
  425c04:	ldr	x0, [x0, #8]
  425c08:	b	425c10 <parse_token+0x3f8c>
  425c0c:	mov	x0, #0x0                   	// #0
  425c10:	str	x0, [sp, #2680]
  425c14:	ldr	x0, [sp, #2672]
  425c18:	cmp	x0, #0x0
  425c1c:	b.eq	425c2c <parse_token+0x3fa8>  // b.none
  425c20:	ldr	x0, [sp, #2672]
  425c24:	ldr	x0, [x0]
  425c28:	b	425c30 <parse_token+0x3fac>
  425c2c:	mov	x0, #0x0                   	// #0
  425c30:	str	x0, [sp, #2688]
  425c34:	str	xzr, [sp, #840]
  425c38:	str	xzr, [sp, #2696]
  425c3c:	mov	w0, #0x4                   	// #4
  425c40:	str	w0, [sp, #528]
  425c44:	str	wzr, [sp, #532]
  425c48:	ldr	x0, [sp, #2696]
  425c4c:	cmp	x0, #0x0
  425c50:	b.eq	425c8c <parse_token+0x4008>  // b.none
  425c54:	mov	w0, #0x1                   	// #1
  425c58:	bl	40be30 <log_get_max_level_realm@plt>
  425c5c:	mov	w1, w0
  425c60:	ldr	w0, [sp, #528]
  425c64:	cmp	w0, w1
  425c68:	cset	w0, le
  425c6c:	and	w0, w0, #0xff
  425c70:	and	x0, x0, #0xff
  425c74:	cmp	x0, #0x0
  425c78:	b.eq	425c8c <parse_token+0x4008>  // b.none
  425c7c:	add	x0, sp, #0x348
  425c80:	mov	x1, x0
  425c84:	ldr	x0, [sp, #2696]
  425c88:	bl	40aba0 <sd_device_get_sysname@plt>
  425c8c:	adrp	x0, 454000 <__func__.10675+0xa0>
  425c90:	add	x20, x0, #0xbb
  425c94:	ldr	x0, [sp, #840]
  425c98:	cmp	x0, #0x0
  425c9c:	b.eq	425cac <parse_token+0x4028>  // b.none
  425ca0:	adrp	x0, 454000 <__func__.10675+0xa0>
  425ca4:	add	x19, x0, #0xd8
  425ca8:	b	425cb0 <parse_token+0x402c>
  425cac:	mov	x19, #0x0                   	// #0
  425cb0:	ldr	x21, [sp, #840]
  425cb4:	ldr	x0, [sp, #2688]
  425cb8:	bl	41fb4c <strna>
  425cbc:	mov	x1, x0
  425cc0:	ldr	x0, [sp, #2680]
  425cc4:	cmp	x0, #0x0
  425cc8:	b.eq	425cd8 <parse_token+0x4054>  // b.none
  425ccc:	ldr	x0, [sp, #2680]
  425cd0:	ldr	w0, [x0, #8]
  425cd4:	b	425cdc <parse_token+0x4058>
  425cd8:	mov	w0, #0x0                   	// #0
  425cdc:	str	w0, [sp, #24]
  425ce0:	str	x1, [sp, #16]
  425ce4:	adrp	x0, 454000 <__func__.10675+0xa0>
  425ce8:	add	x0, x0, #0x5e8
  425cec:	str	x0, [sp, #8]
  425cf0:	str	xzr, [sp]
  425cf4:	mov	x7, #0x0                   	// #0
  425cf8:	mov	x6, x21
  425cfc:	mov	x5, x19
  425d00:	adrp	x0, 455000 <__func__.10675+0x10a0>
  425d04:	add	x4, x0, #0x920
  425d08:	mov	w3, #0x2d2                 	// #722
  425d0c:	mov	x2, x20
  425d10:	ldr	w1, [sp, #532]
  425d14:	ldr	w0, [sp, #528]
  425d18:	bl	40b020 <log_object_internal@plt>
  425d1c:	adrp	x0, 454000 <__func__.10675+0xa0>
  425d20:	add	x1, x0, #0x638
  425d24:	ldr	x0, [sp, #120]
  425d28:	bl	40ac30 <strstr@plt>
  425d2c:	cmp	x0, #0x0
  425d30:	b.eq	425e84 <parse_token+0x4200>  // b.none
  425d34:	ldr	x0, [sp, #136]
  425d38:	str	x0, [sp, #2704]
  425d3c:	ldr	x0, [sp, #2704]
  425d40:	cmp	x0, #0x0
  425d44:	b.eq	425d54 <parse_token+0x40d0>  // b.none
  425d48:	ldr	x0, [sp, #2704]
  425d4c:	ldr	x0, [x0, #32]
  425d50:	b	425d58 <parse_token+0x40d4>
  425d54:	mov	x0, #0x0                   	// #0
  425d58:	str	x0, [sp, #2712]
  425d5c:	ldr	x0, [sp, #2712]
  425d60:	cmp	x0, #0x0
  425d64:	b.eq	425d74 <parse_token+0x40f0>  // b.none
  425d68:	ldr	x0, [sp, #2712]
  425d6c:	ldr	x0, [x0, #8]
  425d70:	b	425d78 <parse_token+0x40f4>
  425d74:	mov	x0, #0x0                   	// #0
  425d78:	str	x0, [sp, #2720]
  425d7c:	ldr	x0, [sp, #2712]
  425d80:	cmp	x0, #0x0
  425d84:	b.eq	425d94 <parse_token+0x4110>  // b.none
  425d88:	ldr	x0, [sp, #2712]
  425d8c:	ldr	x0, [x0]
  425d90:	b	425d98 <parse_token+0x4114>
  425d94:	mov	x0, #0x0                   	// #0
  425d98:	str	x0, [sp, #2728]
  425d9c:	str	xzr, [sp, #840]
  425da0:	str	xzr, [sp, #2736]
  425da4:	mov	w0, #0x4                   	// #4
  425da8:	str	w0, [sp, #536]
  425dac:	str	wzr, [sp, #540]
  425db0:	ldr	x0, [sp, #2736]
  425db4:	cmp	x0, #0x0
  425db8:	b.eq	425df4 <parse_token+0x4170>  // b.none
  425dbc:	mov	w0, #0x1                   	// #1
  425dc0:	bl	40be30 <log_get_max_level_realm@plt>
  425dc4:	mov	w1, w0
  425dc8:	ldr	w0, [sp, #536]
  425dcc:	cmp	w0, w1
  425dd0:	cset	w0, le
  425dd4:	and	w0, w0, #0xff
  425dd8:	and	x0, x0, #0xff
  425ddc:	cmp	x0, #0x0
  425de0:	b.eq	425df4 <parse_token+0x4170>  // b.none
  425de4:	add	x0, sp, #0x348
  425de8:	mov	x1, x0
  425dec:	ldr	x0, [sp, #2736]
  425df0:	bl	40aba0 <sd_device_get_sysname@plt>
  425df4:	adrp	x0, 454000 <__func__.10675+0xa0>
  425df8:	add	x20, x0, #0xbb
  425dfc:	ldr	x0, [sp, #840]
  425e00:	cmp	x0, #0x0
  425e04:	b.eq	425e14 <parse_token+0x4190>  // b.none
  425e08:	adrp	x0, 454000 <__func__.10675+0xa0>
  425e0c:	add	x19, x0, #0xd8
  425e10:	b	425e18 <parse_token+0x4194>
  425e14:	mov	x19, #0x0                   	// #0
  425e18:	ldr	x21, [sp, #840]
  425e1c:	ldr	x0, [sp, #2728]
  425e20:	bl	41fb4c <strna>
  425e24:	mov	x1, x0
  425e28:	ldr	x0, [sp, #2720]
  425e2c:	cmp	x0, #0x0
  425e30:	b.eq	425e40 <parse_token+0x41bc>  // b.none
  425e34:	ldr	x0, [sp, #2720]
  425e38:	ldr	w0, [x0, #8]
  425e3c:	b	425e44 <parse_token+0x41c0>
  425e40:	mov	w0, #0x0                   	// #0
  425e44:	str	w0, [sp, #24]
  425e48:	str	x1, [sp, #16]
  425e4c:	adrp	x0, 454000 <__func__.10675+0xa0>
  425e50:	add	x0, x0, #0x640
  425e54:	str	x0, [sp, #8]
  425e58:	str	xzr, [sp]
  425e5c:	mov	x7, #0x0                   	// #0
  425e60:	mov	x6, x21
  425e64:	mov	x5, x19
  425e68:	adrp	x0, 455000 <__func__.10675+0x10a0>
  425e6c:	add	x4, x0, #0x920
  425e70:	mov	w3, #0x2d4                 	// #724
  425e74:	mov	x2, x20
  425e78:	ldr	w1, [sp, #540]
  425e7c:	ldr	w0, [sp, #536]
  425e80:	bl	40b020 <log_object_internal@plt>
  425e84:	ldr	x4, [sp, #120]
  425e88:	ldr	x3, [sp, #104]
  425e8c:	ldr	w2, [sp, #116]
  425e90:	mov	w1, #0xf                   	// #15
  425e94:	ldr	x0, [sp, #848]
  425e98:	bl	420e88 <rule_line_add_token>
  425e9c:	str	w0, [sp, #152]
  425ea0:	b	42a990 <parse_token+0x8d0c>
  425ea4:	adrp	x0, 454000 <__func__.10675+0xa0>
  425ea8:	add	x1, x0, #0x0
  425eac:	ldr	x0, [sp, #128]
  425eb0:	bl	40b710 <strcmp@plt>
  425eb4:	cmp	w0, #0x0
  425eb8:	b.ne	4261dc <parse_token+0x4558>  // b.any
  425ebc:	ldr	x0, [sp, #120]
  425ec0:	cmp	x0, #0x0
  425ec4:	b.eq	426038 <parse_token+0x43b4>  // b.none
  425ec8:	ldr	x0, [sp, #136]
  425ecc:	str	x0, [sp, #2624]
  425ed0:	ldr	x0, [sp, #2624]
  425ed4:	cmp	x0, #0x0
  425ed8:	b.eq	425ee8 <parse_token+0x4264>  // b.none
  425edc:	ldr	x0, [sp, #2624]
  425ee0:	ldr	x0, [x0, #32]
  425ee4:	b	425eec <parse_token+0x4268>
  425ee8:	mov	x0, #0x0                   	// #0
  425eec:	str	x0, [sp, #2632]
  425ef0:	ldr	x0, [sp, #2632]
  425ef4:	cmp	x0, #0x0
  425ef8:	b.eq	425f08 <parse_token+0x4284>  // b.none
  425efc:	ldr	x0, [sp, #2632]
  425f00:	ldr	x0, [x0, #8]
  425f04:	b	425f0c <parse_token+0x4288>
  425f08:	mov	x0, #0x0                   	// #0
  425f0c:	str	x0, [sp, #2640]
  425f10:	ldr	x0, [sp, #2632]
  425f14:	cmp	x0, #0x0
  425f18:	b.eq	425f28 <parse_token+0x42a4>  // b.none
  425f1c:	ldr	x0, [sp, #2632]
  425f20:	ldr	x0, [x0]
  425f24:	b	425f2c <parse_token+0x42a8>
  425f28:	mov	x0, #0x0                   	// #0
  425f2c:	str	x0, [sp, #2648]
  425f30:	str	xzr, [sp, #840]
  425f34:	str	xzr, [sp, #2656]
  425f38:	mov	w0, #0x3                   	// #3
  425f3c:	str	w0, [sp, #520]
  425f40:	mov	w0, #0x16                  	// #22
  425f44:	movk	w0, #0x4000, lsl #16
  425f48:	str	w0, [sp, #524]
  425f4c:	ldr	x0, [sp, #2656]
  425f50:	cmp	x0, #0x0
  425f54:	b.eq	425f90 <parse_token+0x430c>  // b.none
  425f58:	mov	w0, #0x1                   	// #1
  425f5c:	bl	40be30 <log_get_max_level_realm@plt>
  425f60:	mov	w1, w0
  425f64:	ldr	w0, [sp, #520]
  425f68:	cmp	w0, w1
  425f6c:	cset	w0, le
  425f70:	and	w0, w0, #0xff
  425f74:	and	x0, x0, #0xff
  425f78:	cmp	x0, #0x0
  425f7c:	b.eq	425f90 <parse_token+0x430c>  // b.none
  425f80:	add	x0, sp, #0x348
  425f84:	mov	x1, x0
  425f88:	ldr	x0, [sp, #2656]
  425f8c:	bl	40aba0 <sd_device_get_sysname@plt>
  425f90:	adrp	x0, 454000 <__func__.10675+0xa0>
  425f94:	add	x20, x0, #0xbb
  425f98:	ldr	x0, [sp, #840]
  425f9c:	cmp	x0, #0x0
  425fa0:	b.eq	425fb0 <parse_token+0x432c>  // b.none
  425fa4:	adrp	x0, 454000 <__func__.10675+0xa0>
  425fa8:	add	x19, x0, #0xd8
  425fac:	b	425fb4 <parse_token+0x4330>
  425fb0:	mov	x19, #0x0                   	// #0
  425fb4:	ldr	x21, [sp, #840]
  425fb8:	ldr	x0, [sp, #2648]
  425fbc:	bl	41fb4c <strna>
  425fc0:	mov	x2, x0
  425fc4:	ldr	x0, [sp, #2640]
  425fc8:	cmp	x0, #0x0
  425fcc:	b.eq	425fdc <parse_token+0x4358>  // b.none
  425fd0:	ldr	x0, [sp, #2640]
  425fd4:	ldr	w0, [x0, #8]
  425fd8:	b	425fe0 <parse_token+0x435c>
  425fdc:	mov	w0, #0x0                   	// #0
  425fe0:	ldr	x1, [sp, #128]
  425fe4:	str	x1, [sp, #40]
  425fe8:	adrp	x1, 454000 <__func__.10675+0xa0>
  425fec:	add	x1, x1, #0x278
  425ff0:	str	x1, [sp, #32]
  425ff4:	str	w0, [sp, #24]
  425ff8:	str	x2, [sp, #16]
  425ffc:	adrp	x0, 454000 <__func__.10675+0xa0>
  426000:	add	x0, x0, #0x288
  426004:	str	x0, [sp, #8]
  426008:	str	xzr, [sp]
  42600c:	mov	x7, #0x0                   	// #0
  426010:	mov	x6, x21
  426014:	mov	x5, x19
  426018:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42601c:	add	x4, x0, #0x920
  426020:	mov	w3, #0x2d9                 	// #729
  426024:	mov	x2, x20
  426028:	ldr	w1, [sp, #524]
  42602c:	ldr	w0, [sp, #520]
  426030:	bl	40b020 <log_object_internal@plt>
  426034:	b	42a9c0 <parse_token+0x8d3c>
  426038:	ldrb	w0, [sp, #147]
  42603c:	eor	w0, w0, #0x1
  426040:	and	w0, w0, #0xff
  426044:	cmp	w0, #0x0
  426048:	b.eq	4261bc <parse_token+0x4538>  // b.none
  42604c:	ldr	x0, [sp, #136]
  426050:	str	x0, [sp, #2584]
  426054:	ldr	x0, [sp, #2584]
  426058:	cmp	x0, #0x0
  42605c:	b.eq	42606c <parse_token+0x43e8>  // b.none
  426060:	ldr	x0, [sp, #2584]
  426064:	ldr	x0, [x0, #32]
  426068:	b	426070 <parse_token+0x43ec>
  42606c:	mov	x0, #0x0                   	// #0
  426070:	str	x0, [sp, #2592]
  426074:	ldr	x0, [sp, #2592]
  426078:	cmp	x0, #0x0
  42607c:	b.eq	42608c <parse_token+0x4408>  // b.none
  426080:	ldr	x0, [sp, #2592]
  426084:	ldr	x0, [x0, #8]
  426088:	b	426090 <parse_token+0x440c>
  42608c:	mov	x0, #0x0                   	// #0
  426090:	str	x0, [sp, #2600]
  426094:	ldr	x0, [sp, #2592]
  426098:	cmp	x0, #0x0
  42609c:	b.eq	4260ac <parse_token+0x4428>  // b.none
  4260a0:	ldr	x0, [sp, #2592]
  4260a4:	ldr	x0, [x0]
  4260a8:	b	4260b0 <parse_token+0x442c>
  4260ac:	mov	x0, #0x0                   	// #0
  4260b0:	str	x0, [sp, #2608]
  4260b4:	str	xzr, [sp, #840]
  4260b8:	str	xzr, [sp, #2616]
  4260bc:	mov	w0, #0x3                   	// #3
  4260c0:	str	w0, [sp, #512]
  4260c4:	mov	w0, #0x16                  	// #22
  4260c8:	movk	w0, #0x4000, lsl #16
  4260cc:	str	w0, [sp, #516]
  4260d0:	ldr	x0, [sp, #2616]
  4260d4:	cmp	x0, #0x0
  4260d8:	b.eq	426114 <parse_token+0x4490>  // b.none
  4260dc:	mov	w0, #0x1                   	// #1
  4260e0:	bl	40be30 <log_get_max_level_realm@plt>
  4260e4:	mov	w1, w0
  4260e8:	ldr	w0, [sp, #512]
  4260ec:	cmp	w0, w1
  4260f0:	cset	w0, le
  4260f4:	and	w0, w0, #0xff
  4260f8:	and	x0, x0, #0xff
  4260fc:	cmp	x0, #0x0
  426100:	b.eq	426114 <parse_token+0x4490>  // b.none
  426104:	add	x0, sp, #0x348
  426108:	mov	x1, x0
  42610c:	ldr	x0, [sp, #2616]
  426110:	bl	40aba0 <sd_device_get_sysname@plt>
  426114:	adrp	x0, 454000 <__func__.10675+0xa0>
  426118:	add	x20, x0, #0xbb
  42611c:	ldr	x0, [sp, #840]
  426120:	cmp	x0, #0x0
  426124:	b.eq	426134 <parse_token+0x44b0>  // b.none
  426128:	adrp	x0, 454000 <__func__.10675+0xa0>
  42612c:	add	x19, x0, #0xd8
  426130:	b	426138 <parse_token+0x44b4>
  426134:	mov	x19, #0x0                   	// #0
  426138:	ldr	x21, [sp, #840]
  42613c:	ldr	x0, [sp, #2608]
  426140:	bl	41fb4c <strna>
  426144:	mov	x2, x0
  426148:	ldr	x0, [sp, #2600]
  42614c:	cmp	x0, #0x0
  426150:	b.eq	426160 <parse_token+0x44dc>  // b.none
  426154:	ldr	x0, [sp, #2600]
  426158:	ldr	w0, [x0, #8]
  42615c:	b	426164 <parse_token+0x44e0>
  426160:	mov	w0, #0x0                   	// #0
  426164:	ldr	x1, [sp, #128]
  426168:	str	x1, [sp, #40]
  42616c:	adrp	x1, 454000 <__func__.10675+0xa0>
  426170:	add	x1, x1, #0x348
  426174:	str	x1, [sp, #32]
  426178:	str	w0, [sp, #24]
  42617c:	str	x2, [sp, #16]
  426180:	adrp	x0, 454000 <__func__.10675+0xa0>
  426184:	add	x0, x0, #0x288
  426188:	str	x0, [sp, #8]
  42618c:	str	xzr, [sp]
  426190:	mov	x7, #0x0                   	// #0
  426194:	mov	x6, x21
  426198:	mov	x5, x19
  42619c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4261a0:	add	x4, x0, #0x920
  4261a4:	mov	w3, #0x2db                 	// #731
  4261a8:	mov	x2, x20
  4261ac:	ldr	w1, [sp, #516]
  4261b0:	ldr	w0, [sp, #512]
  4261b4:	bl	40b020 <log_object_internal@plt>
  4261b8:	b	42a9c0 <parse_token+0x8d3c>
  4261bc:	mov	x4, #0x0                   	// #0
  4261c0:	ldr	x3, [sp, #104]
  4261c4:	ldr	w2, [sp, #116]
  4261c8:	mov	w1, #0x10                  	// #16
  4261cc:	ldr	x0, [sp, #848]
  4261d0:	bl	420e88 <rule_line_add_token>
  4261d4:	str	w0, [sp, #152]
  4261d8:	b	42a990 <parse_token+0x8d0c>
  4261dc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4261e0:	add	x1, x0, #0x6a0
  4261e4:	ldr	x0, [sp, #128]
  4261e8:	bl	40b710 <strcmp@plt>
  4261ec:	cmp	w0, #0x0
  4261f0:	b.ne	42655c <parse_token+0x48d8>  // b.any
  4261f4:	mov	w0, #0xffffffff            	// #-1
  4261f8:	str	w0, [sp, #148]
  4261fc:	ldr	x0, [sp, #120]
  426200:	bl	41fb70 <isempty>
  426204:	and	w0, w0, #0xff
  426208:	eor	w0, w0, #0x1
  42620c:	and	w0, w0, #0xff
  426210:	cmp	w0, #0x0
  426214:	b.eq	426398 <parse_token+0x4714>  // b.none
  426218:	add	x0, sp, #0x94
  42621c:	mov	x1, x0
  426220:	ldr	x0, [sp, #120]
  426224:	bl	40ac80 <parse_mode@plt>
  426228:	str	w0, [sp, #152]
  42622c:	ldr	w0, [sp, #152]
  426230:	cmp	w0, #0x0
  426234:	b.ge	426398 <parse_token+0x4714>  // b.tcont
  426238:	ldr	x0, [sp, #136]
  42623c:	str	x0, [sp, #2504]
  426240:	ldr	x0, [sp, #2504]
  426244:	cmp	x0, #0x0
  426248:	b.eq	426258 <parse_token+0x45d4>  // b.none
  42624c:	ldr	x0, [sp, #2504]
  426250:	ldr	x0, [x0, #32]
  426254:	b	42625c <parse_token+0x45d8>
  426258:	mov	x0, #0x0                   	// #0
  42625c:	str	x0, [sp, #2512]
  426260:	ldr	x0, [sp, #2512]
  426264:	cmp	x0, #0x0
  426268:	b.eq	426278 <parse_token+0x45f4>  // b.none
  42626c:	ldr	x0, [sp, #2512]
  426270:	ldr	x0, [x0, #8]
  426274:	b	42627c <parse_token+0x45f8>
  426278:	mov	x0, #0x0                   	// #0
  42627c:	str	x0, [sp, #2520]
  426280:	ldr	x0, [sp, #2512]
  426284:	cmp	x0, #0x0
  426288:	b.eq	426298 <parse_token+0x4614>  // b.none
  42628c:	ldr	x0, [sp, #2512]
  426290:	ldr	x0, [x0]
  426294:	b	42629c <parse_token+0x4618>
  426298:	mov	x0, #0x0                   	// #0
  42629c:	str	x0, [sp, #2528]
  4262a0:	str	xzr, [sp, #840]
  4262a4:	str	xzr, [sp, #2536]
  4262a8:	mov	w0, #0x3                   	// #3
  4262ac:	str	w0, [sp, #496]
  4262b0:	ldr	w0, [sp, #152]
  4262b4:	str	w0, [sp, #500]
  4262b8:	ldr	x0, [sp, #2536]
  4262bc:	cmp	x0, #0x0
  4262c0:	b.eq	4262fc <parse_token+0x4678>  // b.none
  4262c4:	mov	w0, #0x1                   	// #1
  4262c8:	bl	40be30 <log_get_max_level_realm@plt>
  4262cc:	mov	w1, w0
  4262d0:	ldr	w0, [sp, #496]
  4262d4:	cmp	w0, w1
  4262d8:	cset	w0, le
  4262dc:	and	w0, w0, #0xff
  4262e0:	and	x0, x0, #0xff
  4262e4:	cmp	x0, #0x0
  4262e8:	b.eq	4262fc <parse_token+0x4678>  // b.none
  4262ec:	add	x0, sp, #0x348
  4262f0:	mov	x1, x0
  4262f4:	ldr	x0, [sp, #2536]
  4262f8:	bl	40aba0 <sd_device_get_sysname@plt>
  4262fc:	adrp	x0, 454000 <__func__.10675+0xa0>
  426300:	add	x20, x0, #0xbb
  426304:	ldr	x0, [sp, #840]
  426308:	cmp	x0, #0x0
  42630c:	b.eq	42631c <parse_token+0x4698>  // b.none
  426310:	adrp	x0, 454000 <__func__.10675+0xa0>
  426314:	add	x19, x0, #0xd8
  426318:	b	426320 <parse_token+0x469c>
  42631c:	mov	x19, #0x0                   	// #0
  426320:	ldr	x21, [sp, #840]
  426324:	ldr	x0, [sp, #2528]
  426328:	bl	41fb4c <strna>
  42632c:	mov	x2, x0
  426330:	ldr	x0, [sp, #2520]
  426334:	cmp	x0, #0x0
  426338:	b.eq	426348 <parse_token+0x46c4>  // b.none
  42633c:	ldr	x0, [sp, #2520]
  426340:	ldr	w0, [x0, #8]
  426344:	b	42634c <parse_token+0x46c8>
  426348:	mov	w0, #0x0                   	// #0
  42634c:	ldr	x1, [sp, #120]
  426350:	str	x1, [sp, #32]
  426354:	str	w0, [sp, #24]
  426358:	str	x2, [sp, #16]
  42635c:	adrp	x0, 454000 <__func__.10675+0xa0>
  426360:	add	x0, x0, #0x6a8
  426364:	str	x0, [sp, #8]
  426368:	str	xzr, [sp]
  42636c:	mov	x7, #0x0                   	// #0
  426370:	mov	x6, x21
  426374:	mov	x5, x19
  426378:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42637c:	add	x4, x0, #0x920
  426380:	mov	w3, #0x2e4                 	// #740
  426384:	mov	x2, x20
  426388:	ldr	w1, [sp, #500]
  42638c:	ldr	w0, [sp, #496]
  426390:	bl	40b020 <log_object_internal@plt>
  426394:	b	42a9c0 <parse_token+0x8d3c>
  426398:	mov	w3, #0x1                   	// #1
  42639c:	ldr	x2, [sp, #104]
  4263a0:	ldr	x1, [sp, #128]
  4263a4:	ldr	x0, [sp, #136]
  4263a8:	bl	421544 <check_value_format_and_warn>
  4263ac:	ldrb	w0, [sp, #147]
  4263b0:	eor	w0, w0, #0x1
  4263b4:	and	w0, w0, #0xff
  4263b8:	cmp	w0, #0x0
  4263bc:	b.eq	426530 <parse_token+0x48ac>  // b.none
  4263c0:	ldr	x0, [sp, #136]
  4263c4:	str	x0, [sp, #2544]
  4263c8:	ldr	x0, [sp, #2544]
  4263cc:	cmp	x0, #0x0
  4263d0:	b.eq	4263e0 <parse_token+0x475c>  // b.none
  4263d4:	ldr	x0, [sp, #2544]
  4263d8:	ldr	x0, [x0, #32]
  4263dc:	b	4263e4 <parse_token+0x4760>
  4263e0:	mov	x0, #0x0                   	// #0
  4263e4:	str	x0, [sp, #2552]
  4263e8:	ldr	x0, [sp, #2552]
  4263ec:	cmp	x0, #0x0
  4263f0:	b.eq	426400 <parse_token+0x477c>  // b.none
  4263f4:	ldr	x0, [sp, #2552]
  4263f8:	ldr	x0, [x0, #8]
  4263fc:	b	426404 <parse_token+0x4780>
  426400:	mov	x0, #0x0                   	// #0
  426404:	str	x0, [sp, #2560]
  426408:	ldr	x0, [sp, #2552]
  42640c:	cmp	x0, #0x0
  426410:	b.eq	426420 <parse_token+0x479c>  // b.none
  426414:	ldr	x0, [sp, #2552]
  426418:	ldr	x0, [x0]
  42641c:	b	426424 <parse_token+0x47a0>
  426420:	mov	x0, #0x0                   	// #0
  426424:	str	x0, [sp, #2568]
  426428:	str	xzr, [sp, #840]
  42642c:	str	xzr, [sp, #2576]
  426430:	mov	w0, #0x3                   	// #3
  426434:	str	w0, [sp, #504]
  426438:	mov	w0, #0x16                  	// #22
  42643c:	movk	w0, #0x4000, lsl #16
  426440:	str	w0, [sp, #508]
  426444:	ldr	x0, [sp, #2576]
  426448:	cmp	x0, #0x0
  42644c:	b.eq	426488 <parse_token+0x4804>  // b.none
  426450:	mov	w0, #0x1                   	// #1
  426454:	bl	40be30 <log_get_max_level_realm@plt>
  426458:	mov	w1, w0
  42645c:	ldr	w0, [sp, #504]
  426460:	cmp	w0, w1
  426464:	cset	w0, le
  426468:	and	w0, w0, #0xff
  42646c:	and	x0, x0, #0xff
  426470:	cmp	x0, #0x0
  426474:	b.eq	426488 <parse_token+0x4804>  // b.none
  426478:	add	x0, sp, #0x348
  42647c:	mov	x1, x0
  426480:	ldr	x0, [sp, #2576]
  426484:	bl	40aba0 <sd_device_get_sysname@plt>
  426488:	adrp	x0, 454000 <__func__.10675+0xa0>
  42648c:	add	x20, x0, #0xbb
  426490:	ldr	x0, [sp, #840]
  426494:	cmp	x0, #0x0
  426498:	b.eq	4264a8 <parse_token+0x4824>  // b.none
  42649c:	adrp	x0, 454000 <__func__.10675+0xa0>
  4264a0:	add	x19, x0, #0xd8
  4264a4:	b	4264ac <parse_token+0x4828>
  4264a8:	mov	x19, #0x0                   	// #0
  4264ac:	ldr	x21, [sp, #840]
  4264b0:	ldr	x0, [sp, #2568]
  4264b4:	bl	41fb4c <strna>
  4264b8:	mov	x2, x0
  4264bc:	ldr	x0, [sp, #2560]
  4264c0:	cmp	x0, #0x0
  4264c4:	b.eq	4264d4 <parse_token+0x4850>  // b.none
  4264c8:	ldr	x0, [sp, #2560]
  4264cc:	ldr	w0, [x0, #8]
  4264d0:	b	4264d8 <parse_token+0x4854>
  4264d4:	mov	w0, #0x0                   	// #0
  4264d8:	ldr	x1, [sp, #128]
  4264dc:	str	x1, [sp, #40]
  4264e0:	adrp	x1, 454000 <__func__.10675+0xa0>
  4264e4:	add	x1, x1, #0x348
  4264e8:	str	x1, [sp, #32]
  4264ec:	str	w0, [sp, #24]
  4264f0:	str	x2, [sp, #16]
  4264f4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4264f8:	add	x0, x0, #0x288
  4264fc:	str	x0, [sp, #8]
  426500:	str	xzr, [sp]
  426504:	mov	x7, #0x0                   	// #0
  426508:	mov	x6, x21
  42650c:	mov	x5, x19
  426510:	adrp	x0, 455000 <__func__.10675+0x10a0>
  426514:	add	x4, x0, #0x920
  426518:	mov	w3, #0x2e8                 	// #744
  42651c:	mov	x2, x20
  426520:	ldr	w1, [sp, #508]
  426524:	ldr	w0, [sp, #504]
  426528:	bl	40b020 <log_object_internal@plt>
  42652c:	b	42a9c0 <parse_token+0x8d3c>
  426530:	ldr	w0, [sp, #148]
  426534:	mov	w0, w0
  426538:	add	x0, x0, #0x1
  42653c:	mov	x4, x0
  426540:	ldr	x3, [sp, #104]
  426544:	ldr	w2, [sp, #116]
  426548:	mov	w1, #0x11                  	// #17
  42654c:	ldr	x0, [sp, #848]
  426550:	bl	420e88 <rule_line_add_token>
  426554:	str	w0, [sp, #152]
  426558:	b	42a990 <parse_token+0x8d0c>
  42655c:	adrp	x0, 454000 <__func__.10675+0xa0>
  426560:	add	x1, x0, #0x6d0
  426564:	ldr	x0, [sp, #128]
  426568:	bl	40b710 <strcmp@plt>
  42656c:	cmp	w0, #0x0
  426570:	b.ne	426a10 <parse_token+0x4d8c>  // b.any
  426574:	ldr	x0, [sp, #120]
  426578:	cmp	x0, #0x0
  42657c:	b.eq	4266f0 <parse_token+0x4a6c>  // b.none
  426580:	ldr	x0, [sp, #136]
  426584:	str	x0, [sp, #2464]
  426588:	ldr	x0, [sp, #2464]
  42658c:	cmp	x0, #0x0
  426590:	b.eq	4265a0 <parse_token+0x491c>  // b.none
  426594:	ldr	x0, [sp, #2464]
  426598:	ldr	x0, [x0, #32]
  42659c:	b	4265a4 <parse_token+0x4920>
  4265a0:	mov	x0, #0x0                   	// #0
  4265a4:	str	x0, [sp, #2472]
  4265a8:	ldr	x0, [sp, #2472]
  4265ac:	cmp	x0, #0x0
  4265b0:	b.eq	4265c0 <parse_token+0x493c>  // b.none
  4265b4:	ldr	x0, [sp, #2472]
  4265b8:	ldr	x0, [x0, #8]
  4265bc:	b	4265c4 <parse_token+0x4940>
  4265c0:	mov	x0, #0x0                   	// #0
  4265c4:	str	x0, [sp, #2480]
  4265c8:	ldr	x0, [sp, #2472]
  4265cc:	cmp	x0, #0x0
  4265d0:	b.eq	4265e0 <parse_token+0x495c>  // b.none
  4265d4:	ldr	x0, [sp, #2472]
  4265d8:	ldr	x0, [x0]
  4265dc:	b	4265e4 <parse_token+0x4960>
  4265e0:	mov	x0, #0x0                   	// #0
  4265e4:	str	x0, [sp, #2488]
  4265e8:	str	xzr, [sp, #840]
  4265ec:	str	xzr, [sp, #2496]
  4265f0:	mov	w0, #0x3                   	// #3
  4265f4:	str	w0, [sp, #488]
  4265f8:	mov	w0, #0x16                  	// #22
  4265fc:	movk	w0, #0x4000, lsl #16
  426600:	str	w0, [sp, #492]
  426604:	ldr	x0, [sp, #2496]
  426608:	cmp	x0, #0x0
  42660c:	b.eq	426648 <parse_token+0x49c4>  // b.none
  426610:	mov	w0, #0x1                   	// #1
  426614:	bl	40be30 <log_get_max_level_realm@plt>
  426618:	mov	w1, w0
  42661c:	ldr	w0, [sp, #488]
  426620:	cmp	w0, w1
  426624:	cset	w0, le
  426628:	and	w0, w0, #0xff
  42662c:	and	x0, x0, #0xff
  426630:	cmp	x0, #0x0
  426634:	b.eq	426648 <parse_token+0x49c4>  // b.none
  426638:	add	x0, sp, #0x348
  42663c:	mov	x1, x0
  426640:	ldr	x0, [sp, #2496]
  426644:	bl	40aba0 <sd_device_get_sysname@plt>
  426648:	adrp	x0, 454000 <__func__.10675+0xa0>
  42664c:	add	x20, x0, #0xbb
  426650:	ldr	x0, [sp, #840]
  426654:	cmp	x0, #0x0
  426658:	b.eq	426668 <parse_token+0x49e4>  // b.none
  42665c:	adrp	x0, 454000 <__func__.10675+0xa0>
  426660:	add	x19, x0, #0xd8
  426664:	b	42666c <parse_token+0x49e8>
  426668:	mov	x19, #0x0                   	// #0
  42666c:	ldr	x21, [sp, #840]
  426670:	ldr	x0, [sp, #2488]
  426674:	bl	41fb4c <strna>
  426678:	mov	x2, x0
  42667c:	ldr	x0, [sp, #2480]
  426680:	cmp	x0, #0x0
  426684:	b.eq	426694 <parse_token+0x4a10>  // b.none
  426688:	ldr	x0, [sp, #2480]
  42668c:	ldr	w0, [x0, #8]
  426690:	b	426698 <parse_token+0x4a14>
  426694:	mov	w0, #0x0                   	// #0
  426698:	ldr	x1, [sp, #128]
  42669c:	str	x1, [sp, #40]
  4266a0:	adrp	x1, 454000 <__func__.10675+0xa0>
  4266a4:	add	x1, x1, #0x278
  4266a8:	str	x1, [sp, #32]
  4266ac:	str	w0, [sp, #24]
  4266b0:	str	x2, [sp, #16]
  4266b4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4266b8:	add	x0, x0, #0x288
  4266bc:	str	x0, [sp, #8]
  4266c0:	str	xzr, [sp]
  4266c4:	mov	x7, #0x0                   	// #0
  4266c8:	mov	x6, x21
  4266cc:	mov	x5, x19
  4266d0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4266d4:	add	x4, x0, #0x920
  4266d8:	mov	w3, #0x2ed                 	// #749
  4266dc:	mov	x2, x20
  4266e0:	ldr	w1, [sp, #492]
  4266e4:	ldr	w0, [sp, #488]
  4266e8:	bl	40b020 <log_object_internal@plt>
  4266ec:	b	42a9c0 <parse_token+0x8d3c>
  4266f0:	mov	w3, #0x1                   	// #1
  4266f4:	ldr	x2, [sp, #104]
  4266f8:	ldr	x1, [sp, #128]
  4266fc:	ldr	x0, [sp, #136]
  426700:	bl	421544 <check_value_format_and_warn>
  426704:	ldr	w0, [sp, #116]
  426708:	cmp	w0, #0x3
  42670c:	b.ne	426880 <parse_token+0x4bfc>  // b.any
  426710:	ldr	x0, [sp, #136]
  426714:	str	x0, [sp, #2424]
  426718:	ldr	x0, [sp, #2424]
  42671c:	cmp	x0, #0x0
  426720:	b.eq	426730 <parse_token+0x4aac>  // b.none
  426724:	ldr	x0, [sp, #2424]
  426728:	ldr	x0, [x0, #32]
  42672c:	b	426734 <parse_token+0x4ab0>
  426730:	mov	x0, #0x0                   	// #0
  426734:	str	x0, [sp, #2432]
  426738:	ldr	x0, [sp, #2432]
  42673c:	cmp	x0, #0x0
  426740:	b.eq	426750 <parse_token+0x4acc>  // b.none
  426744:	ldr	x0, [sp, #2432]
  426748:	ldr	x0, [x0, #8]
  42674c:	b	426754 <parse_token+0x4ad0>
  426750:	mov	x0, #0x0                   	// #0
  426754:	str	x0, [sp, #2440]
  426758:	ldr	x0, [sp, #2432]
  42675c:	cmp	x0, #0x0
  426760:	b.eq	426770 <parse_token+0x4aec>  // b.none
  426764:	ldr	x0, [sp, #2432]
  426768:	ldr	x0, [x0]
  42676c:	b	426774 <parse_token+0x4af0>
  426770:	mov	x0, #0x0                   	// #0
  426774:	str	x0, [sp, #2448]
  426778:	str	xzr, [sp, #840]
  42677c:	str	xzr, [sp, #2456]
  426780:	mov	w0, #0x3                   	// #3
  426784:	str	w0, [sp, #480]
  426788:	mov	w0, #0x16                  	// #22
  42678c:	movk	w0, #0x4000, lsl #16
  426790:	str	w0, [sp, #484]
  426794:	ldr	x0, [sp, #2456]
  426798:	cmp	x0, #0x0
  42679c:	b.eq	4267d8 <parse_token+0x4b54>  // b.none
  4267a0:	mov	w0, #0x1                   	// #1
  4267a4:	bl	40be30 <log_get_max_level_realm@plt>
  4267a8:	mov	w1, w0
  4267ac:	ldr	w0, [sp, #480]
  4267b0:	cmp	w0, w1
  4267b4:	cset	w0, le
  4267b8:	and	w0, w0, #0xff
  4267bc:	and	x0, x0, #0xff
  4267c0:	cmp	x0, #0x0
  4267c4:	b.eq	4267d8 <parse_token+0x4b54>  // b.none
  4267c8:	add	x0, sp, #0x348
  4267cc:	mov	x1, x0
  4267d0:	ldr	x0, [sp, #2456]
  4267d4:	bl	40aba0 <sd_device_get_sysname@plt>
  4267d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4267dc:	add	x20, x0, #0xbb
  4267e0:	ldr	x0, [sp, #840]
  4267e4:	cmp	x0, #0x0
  4267e8:	b.eq	4267f8 <parse_token+0x4b74>  // b.none
  4267ec:	adrp	x0, 454000 <__func__.10675+0xa0>
  4267f0:	add	x19, x0, #0xd8
  4267f4:	b	4267fc <parse_token+0x4b78>
  4267f8:	mov	x19, #0x0                   	// #0
  4267fc:	ldr	x21, [sp, #840]
  426800:	ldr	x0, [sp, #2448]
  426804:	bl	41fb4c <strna>
  426808:	mov	x2, x0
  42680c:	ldr	x0, [sp, #2440]
  426810:	cmp	x0, #0x0
  426814:	b.eq	426824 <parse_token+0x4ba0>  // b.none
  426818:	ldr	x0, [sp, #2440]
  42681c:	ldr	w0, [x0, #8]
  426820:	b	426828 <parse_token+0x4ba4>
  426824:	mov	w0, #0x0                   	// #0
  426828:	ldr	x1, [sp, #128]
  42682c:	str	x1, [sp, #40]
  426830:	adrp	x1, 454000 <__func__.10675+0xa0>
  426834:	add	x1, x1, #0x348
  426838:	str	x1, [sp, #32]
  42683c:	str	w0, [sp, #24]
  426840:	str	x2, [sp, #16]
  426844:	adrp	x0, 454000 <__func__.10675+0xa0>
  426848:	add	x0, x0, #0x288
  42684c:	str	x0, [sp, #8]
  426850:	str	xzr, [sp]
  426854:	mov	x7, #0x0                   	// #0
  426858:	mov	x6, x21
  42685c:	mov	x5, x19
  426860:	adrp	x0, 455000 <__func__.10675+0x10a0>
  426864:	add	x4, x0, #0x920
  426868:	mov	w3, #0x2f0                 	// #752
  42686c:	mov	x2, x20
  426870:	ldr	w1, [sp, #484]
  426874:	ldr	w0, [sp, #480]
  426878:	bl	40b020 <log_object_internal@plt>
  42687c:	b	42a9c0 <parse_token+0x8d3c>
  426880:	ldrb	w0, [sp, #147]
  426884:	eor	w0, w0, #0x1
  426888:	and	w0, w0, #0xff
  42688c:	cmp	w0, #0x0
  426890:	b.eq	4269f0 <parse_token+0x4d6c>  // b.none
  426894:	ldr	x0, [sp, #136]
  426898:	str	x0, [sp, #2384]
  42689c:	ldr	x0, [sp, #2384]
  4268a0:	cmp	x0, #0x0
  4268a4:	b.eq	4268b4 <parse_token+0x4c30>  // b.none
  4268a8:	ldr	x0, [sp, #2384]
  4268ac:	ldr	x0, [x0, #32]
  4268b0:	b	4268b8 <parse_token+0x4c34>
  4268b4:	mov	x0, #0x0                   	// #0
  4268b8:	str	x0, [sp, #2392]
  4268bc:	ldr	x0, [sp, #2392]
  4268c0:	cmp	x0, #0x0
  4268c4:	b.eq	4268d4 <parse_token+0x4c50>  // b.none
  4268c8:	ldr	x0, [sp, #2392]
  4268cc:	ldr	x0, [x0, #8]
  4268d0:	b	4268d8 <parse_token+0x4c54>
  4268d4:	mov	x0, #0x0                   	// #0
  4268d8:	str	x0, [sp, #2400]
  4268dc:	ldr	x0, [sp, #2392]
  4268e0:	cmp	x0, #0x0
  4268e4:	b.eq	4268f4 <parse_token+0x4c70>  // b.none
  4268e8:	ldr	x0, [sp, #2392]
  4268ec:	ldr	x0, [x0]
  4268f0:	b	4268f8 <parse_token+0x4c74>
  4268f4:	mov	x0, #0x0                   	// #0
  4268f8:	str	x0, [sp, #2408]
  4268fc:	str	xzr, [sp, #840]
  426900:	str	xzr, [sp, #2416]
  426904:	mov	w0, #0x7                   	// #7
  426908:	str	w0, [sp, #472]
  42690c:	str	wzr, [sp, #476]
  426910:	ldr	x0, [sp, #2416]
  426914:	cmp	x0, #0x0
  426918:	b.eq	426954 <parse_token+0x4cd0>  // b.none
  42691c:	mov	w0, #0x1                   	// #1
  426920:	bl	40be30 <log_get_max_level_realm@plt>
  426924:	mov	w1, w0
  426928:	ldr	w0, [sp, #472]
  42692c:	cmp	w0, w1
  426930:	cset	w0, le
  426934:	and	w0, w0, #0xff
  426938:	and	x0, x0, #0xff
  42693c:	cmp	x0, #0x0
  426940:	b.eq	426954 <parse_token+0x4cd0>  // b.none
  426944:	add	x0, sp, #0x348
  426948:	mov	x1, x0
  42694c:	ldr	x0, [sp, #2416]
  426950:	bl	40aba0 <sd_device_get_sysname@plt>
  426954:	adrp	x0, 454000 <__func__.10675+0xa0>
  426958:	add	x20, x0, #0xbb
  42695c:	ldr	x0, [sp, #840]
  426960:	cmp	x0, #0x0
  426964:	b.eq	426974 <parse_token+0x4cf0>  // b.none
  426968:	adrp	x0, 454000 <__func__.10675+0xa0>
  42696c:	add	x19, x0, #0xd8
  426970:	b	426978 <parse_token+0x4cf4>
  426974:	mov	x19, #0x0                   	// #0
  426978:	ldr	x21, [sp, #840]
  42697c:	ldr	x0, [sp, #2408]
  426980:	bl	41fb4c <strna>
  426984:	mov	x2, x0
  426988:	ldr	x0, [sp, #2400]
  42698c:	cmp	x0, #0x0
  426990:	b.eq	4269a0 <parse_token+0x4d1c>  // b.none
  426994:	ldr	x0, [sp, #2400]
  426998:	ldr	w0, [x0, #8]
  42699c:	b	4269a4 <parse_token+0x4d20>
  4269a0:	mov	w0, #0x0                   	// #0
  4269a4:	ldr	x1, [sp, #128]
  4269a8:	str	x1, [sp, #32]
  4269ac:	str	w0, [sp, #24]
  4269b0:	str	x2, [sp, #16]
  4269b4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4269b8:	add	x0, x0, #0x6d8
  4269bc:	str	x0, [sp, #8]
  4269c0:	str	xzr, [sp]
  4269c4:	mov	x7, #0x0                   	// #0
  4269c8:	mov	x6, x21
  4269cc:	mov	x5, x19
  4269d0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4269d4:	add	x4, x0, #0x920
  4269d8:	mov	w3, #0x2f2                 	// #754
  4269dc:	mov	x2, x20
  4269e0:	ldr	w1, [sp, #476]
  4269e4:	ldr	w0, [sp, #472]
  4269e8:	bl	40b020 <log_object_internal@plt>
  4269ec:	str	wzr, [sp, #116]
  4269f0:	mov	x4, #0x0                   	// #0
  4269f4:	ldr	x3, [sp, #104]
  4269f8:	ldr	w2, [sp, #116]
  4269fc:	mov	w1, #0x12                  	// #18
  426a00:	ldr	x0, [sp, #848]
  426a04:	bl	420e88 <rule_line_add_token>
  426a08:	str	w0, [sp, #152]
  426a0c:	b	42a990 <parse_token+0x8d0c>
  426a10:	adrp	x0, 454000 <__func__.10675+0xa0>
  426a14:	add	x1, x0, #0x718
  426a18:	ldr	x0, [sp, #128]
  426a1c:	bl	40b710 <strcmp@plt>
  426a20:	cmp	w0, #0x0
  426a24:	b.ne	427490 <parse_token+0x580c>  // b.any
  426a28:	ldr	x0, [sp, #120]
  426a2c:	bl	41fb70 <isempty>
  426a30:	and	w0, w0, #0xff
  426a34:	cmp	w0, #0x0
  426a38:	b.eq	426bac <parse_token+0x4f28>  // b.none
  426a3c:	ldr	x0, [sp, #136]
  426a40:	str	x0, [sp, #2344]
  426a44:	ldr	x0, [sp, #2344]
  426a48:	cmp	x0, #0x0
  426a4c:	b.eq	426a5c <parse_token+0x4dd8>  // b.none
  426a50:	ldr	x0, [sp, #2344]
  426a54:	ldr	x0, [x0, #32]
  426a58:	b	426a60 <parse_token+0x4ddc>
  426a5c:	mov	x0, #0x0                   	// #0
  426a60:	str	x0, [sp, #2352]
  426a64:	ldr	x0, [sp, #2352]
  426a68:	cmp	x0, #0x0
  426a6c:	b.eq	426a7c <parse_token+0x4df8>  // b.none
  426a70:	ldr	x0, [sp, #2352]
  426a74:	ldr	x0, [x0, #8]
  426a78:	b	426a80 <parse_token+0x4dfc>
  426a7c:	mov	x0, #0x0                   	// #0
  426a80:	str	x0, [sp, #2360]
  426a84:	ldr	x0, [sp, #2352]
  426a88:	cmp	x0, #0x0
  426a8c:	b.eq	426a9c <parse_token+0x4e18>  // b.none
  426a90:	ldr	x0, [sp, #2352]
  426a94:	ldr	x0, [x0]
  426a98:	b	426aa0 <parse_token+0x4e1c>
  426a9c:	mov	x0, #0x0                   	// #0
  426aa0:	str	x0, [sp, #2368]
  426aa4:	str	xzr, [sp, #840]
  426aa8:	str	xzr, [sp, #2376]
  426aac:	mov	w0, #0x3                   	// #3
  426ab0:	str	w0, [sp, #464]
  426ab4:	mov	w0, #0x16                  	// #22
  426ab8:	movk	w0, #0x4000, lsl #16
  426abc:	str	w0, [sp, #468]
  426ac0:	ldr	x0, [sp, #2376]
  426ac4:	cmp	x0, #0x0
  426ac8:	b.eq	426b04 <parse_token+0x4e80>  // b.none
  426acc:	mov	w0, #0x1                   	// #1
  426ad0:	bl	40be30 <log_get_max_level_realm@plt>
  426ad4:	mov	w1, w0
  426ad8:	ldr	w0, [sp, #464]
  426adc:	cmp	w0, w1
  426ae0:	cset	w0, le
  426ae4:	and	w0, w0, #0xff
  426ae8:	and	x0, x0, #0xff
  426aec:	cmp	x0, #0x0
  426af0:	b.eq	426b04 <parse_token+0x4e80>  // b.none
  426af4:	add	x0, sp, #0x348
  426af8:	mov	x1, x0
  426afc:	ldr	x0, [sp, #2376]
  426b00:	bl	40aba0 <sd_device_get_sysname@plt>
  426b04:	adrp	x0, 454000 <__func__.10675+0xa0>
  426b08:	add	x20, x0, #0xbb
  426b0c:	ldr	x0, [sp, #840]
  426b10:	cmp	x0, #0x0
  426b14:	b.eq	426b24 <parse_token+0x4ea0>  // b.none
  426b18:	adrp	x0, 454000 <__func__.10675+0xa0>
  426b1c:	add	x19, x0, #0xd8
  426b20:	b	426b28 <parse_token+0x4ea4>
  426b24:	mov	x19, #0x0                   	// #0
  426b28:	ldr	x21, [sp, #840]
  426b2c:	ldr	x0, [sp, #2368]
  426b30:	bl	41fb4c <strna>
  426b34:	mov	x2, x0
  426b38:	ldr	x0, [sp, #2360]
  426b3c:	cmp	x0, #0x0
  426b40:	b.eq	426b50 <parse_token+0x4ecc>  // b.none
  426b44:	ldr	x0, [sp, #2360]
  426b48:	ldr	w0, [x0, #8]
  426b4c:	b	426b54 <parse_token+0x4ed0>
  426b50:	mov	w0, #0x0                   	// #0
  426b54:	ldr	x1, [sp, #128]
  426b58:	str	x1, [sp, #40]
  426b5c:	adrp	x1, 454000 <__func__.10675+0xa0>
  426b60:	add	x1, x1, #0x278
  426b64:	str	x1, [sp, #32]
  426b68:	str	w0, [sp, #24]
  426b6c:	str	x2, [sp, #16]
  426b70:	adrp	x0, 454000 <__func__.10675+0xa0>
  426b74:	add	x0, x0, #0x288
  426b78:	str	x0, [sp, #8]
  426b7c:	str	xzr, [sp]
  426b80:	mov	x7, #0x0                   	// #0
  426b84:	mov	x6, x21
  426b88:	mov	x5, x19
  426b8c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  426b90:	add	x4, x0, #0x920
  426b94:	mov	w3, #0x2f9                 	// #761
  426b98:	mov	x2, x20
  426b9c:	ldr	w1, [sp, #468]
  426ba0:	ldr	w0, [sp, #464]
  426ba4:	bl	40b020 <log_object_internal@plt>
  426ba8:	b	42a9c0 <parse_token+0x8d3c>
  426bac:	mov	w3, #0x1                   	// #1
  426bb0:	ldr	x2, [sp, #104]
  426bb4:	ldr	x1, [sp, #128]
  426bb8:	ldr	x0, [sp, #136]
  426bbc:	bl	421544 <check_value_format_and_warn>
  426bc0:	ldr	w0, [sp, #116]
  426bc4:	cmp	w0, #0x3
  426bc8:	b.ne	426d3c <parse_token+0x50b8>  // b.any
  426bcc:	ldr	x0, [sp, #136]
  426bd0:	str	x0, [sp, #2304]
  426bd4:	ldr	x0, [sp, #2304]
  426bd8:	cmp	x0, #0x0
  426bdc:	b.eq	426bec <parse_token+0x4f68>  // b.none
  426be0:	ldr	x0, [sp, #2304]
  426be4:	ldr	x0, [x0, #32]
  426be8:	b	426bf0 <parse_token+0x4f6c>
  426bec:	mov	x0, #0x0                   	// #0
  426bf0:	str	x0, [sp, #2312]
  426bf4:	ldr	x0, [sp, #2312]
  426bf8:	cmp	x0, #0x0
  426bfc:	b.eq	426c0c <parse_token+0x4f88>  // b.none
  426c00:	ldr	x0, [sp, #2312]
  426c04:	ldr	x0, [x0, #8]
  426c08:	b	426c10 <parse_token+0x4f8c>
  426c0c:	mov	x0, #0x0                   	// #0
  426c10:	str	x0, [sp, #2320]
  426c14:	ldr	x0, [sp, #2312]
  426c18:	cmp	x0, #0x0
  426c1c:	b.eq	426c2c <parse_token+0x4fa8>  // b.none
  426c20:	ldr	x0, [sp, #2312]
  426c24:	ldr	x0, [x0]
  426c28:	b	426c30 <parse_token+0x4fac>
  426c2c:	mov	x0, #0x0                   	// #0
  426c30:	str	x0, [sp, #2328]
  426c34:	str	xzr, [sp, #840]
  426c38:	str	xzr, [sp, #2336]
  426c3c:	mov	w0, #0x3                   	// #3
  426c40:	str	w0, [sp, #456]
  426c44:	mov	w0, #0x16                  	// #22
  426c48:	movk	w0, #0x4000, lsl #16
  426c4c:	str	w0, [sp, #460]
  426c50:	ldr	x0, [sp, #2336]
  426c54:	cmp	x0, #0x0
  426c58:	b.eq	426c94 <parse_token+0x5010>  // b.none
  426c5c:	mov	w0, #0x1                   	// #1
  426c60:	bl	40be30 <log_get_max_level_realm@plt>
  426c64:	mov	w1, w0
  426c68:	ldr	w0, [sp, #456]
  426c6c:	cmp	w0, w1
  426c70:	cset	w0, le
  426c74:	and	w0, w0, #0xff
  426c78:	and	x0, x0, #0xff
  426c7c:	cmp	x0, #0x0
  426c80:	b.eq	426c94 <parse_token+0x5010>  // b.none
  426c84:	add	x0, sp, #0x348
  426c88:	mov	x1, x0
  426c8c:	ldr	x0, [sp, #2336]
  426c90:	bl	40aba0 <sd_device_get_sysname@plt>
  426c94:	adrp	x0, 454000 <__func__.10675+0xa0>
  426c98:	add	x20, x0, #0xbb
  426c9c:	ldr	x0, [sp, #840]
  426ca0:	cmp	x0, #0x0
  426ca4:	b.eq	426cb4 <parse_token+0x5030>  // b.none
  426ca8:	adrp	x0, 454000 <__func__.10675+0xa0>
  426cac:	add	x19, x0, #0xd8
  426cb0:	b	426cb8 <parse_token+0x5034>
  426cb4:	mov	x19, #0x0                   	// #0
  426cb8:	ldr	x21, [sp, #840]
  426cbc:	ldr	x0, [sp, #2328]
  426cc0:	bl	41fb4c <strna>
  426cc4:	mov	x2, x0
  426cc8:	ldr	x0, [sp, #2320]
  426ccc:	cmp	x0, #0x0
  426cd0:	b.eq	426ce0 <parse_token+0x505c>  // b.none
  426cd4:	ldr	x0, [sp, #2320]
  426cd8:	ldr	w0, [x0, #8]
  426cdc:	b	426ce4 <parse_token+0x5060>
  426ce0:	mov	w0, #0x0                   	// #0
  426ce4:	ldr	x1, [sp, #128]
  426ce8:	str	x1, [sp, #40]
  426cec:	adrp	x1, 454000 <__func__.10675+0xa0>
  426cf0:	add	x1, x1, #0x348
  426cf4:	str	x1, [sp, #32]
  426cf8:	str	w0, [sp, #24]
  426cfc:	str	x2, [sp, #16]
  426d00:	adrp	x0, 454000 <__func__.10675+0xa0>
  426d04:	add	x0, x0, #0x288
  426d08:	str	x0, [sp, #8]
  426d0c:	str	xzr, [sp]
  426d10:	mov	x7, #0x0                   	// #0
  426d14:	mov	x6, x21
  426d18:	mov	x5, x19
  426d1c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  426d20:	add	x4, x0, #0x920
  426d24:	mov	w3, #0x2fc                 	// #764
  426d28:	mov	x2, x20
  426d2c:	ldr	w1, [sp, #460]
  426d30:	ldr	w0, [sp, #456]
  426d34:	bl	40b020 <log_object_internal@plt>
  426d38:	b	42a9c0 <parse_token+0x8d3c>
  426d3c:	ldrb	w0, [sp, #147]
  426d40:	eor	w0, w0, #0x1
  426d44:	and	w0, w0, #0xff
  426d48:	cmp	w0, #0x0
  426d4c:	b.eq	426eac <parse_token+0x5228>  // b.none
  426d50:	ldr	x0, [sp, #136]
  426d54:	str	x0, [sp, #2144]
  426d58:	ldr	x0, [sp, #2144]
  426d5c:	cmp	x0, #0x0
  426d60:	b.eq	426d70 <parse_token+0x50ec>  // b.none
  426d64:	ldr	x0, [sp, #2144]
  426d68:	ldr	x0, [x0, #32]
  426d6c:	b	426d74 <parse_token+0x50f0>
  426d70:	mov	x0, #0x0                   	// #0
  426d74:	str	x0, [sp, #2152]
  426d78:	ldr	x0, [sp, #2152]
  426d7c:	cmp	x0, #0x0
  426d80:	b.eq	426d90 <parse_token+0x510c>  // b.none
  426d84:	ldr	x0, [sp, #2152]
  426d88:	ldr	x0, [x0, #8]
  426d8c:	b	426d94 <parse_token+0x5110>
  426d90:	mov	x0, #0x0                   	// #0
  426d94:	str	x0, [sp, #2160]
  426d98:	ldr	x0, [sp, #2152]
  426d9c:	cmp	x0, #0x0
  426da0:	b.eq	426db0 <parse_token+0x512c>  // b.none
  426da4:	ldr	x0, [sp, #2152]
  426da8:	ldr	x0, [x0]
  426dac:	b	426db4 <parse_token+0x5130>
  426db0:	mov	x0, #0x0                   	// #0
  426db4:	str	x0, [sp, #2168]
  426db8:	str	xzr, [sp, #840]
  426dbc:	str	xzr, [sp, #2176]
  426dc0:	mov	w0, #0x7                   	// #7
  426dc4:	str	w0, [sp, #416]
  426dc8:	str	wzr, [sp, #420]
  426dcc:	ldr	x0, [sp, #2176]
  426dd0:	cmp	x0, #0x0
  426dd4:	b.eq	426e10 <parse_token+0x518c>  // b.none
  426dd8:	mov	w0, #0x1                   	// #1
  426ddc:	bl	40be30 <log_get_max_level_realm@plt>
  426de0:	mov	w1, w0
  426de4:	ldr	w0, [sp, #416]
  426de8:	cmp	w0, w1
  426dec:	cset	w0, le
  426df0:	and	w0, w0, #0xff
  426df4:	and	x0, x0, #0xff
  426df8:	cmp	x0, #0x0
  426dfc:	b.eq	426e10 <parse_token+0x518c>  // b.none
  426e00:	add	x0, sp, #0x348
  426e04:	mov	x1, x0
  426e08:	ldr	x0, [sp, #2176]
  426e0c:	bl	40aba0 <sd_device_get_sysname@plt>
  426e10:	adrp	x0, 454000 <__func__.10675+0xa0>
  426e14:	add	x20, x0, #0xbb
  426e18:	ldr	x0, [sp, #840]
  426e1c:	cmp	x0, #0x0
  426e20:	b.eq	426e30 <parse_token+0x51ac>  // b.none
  426e24:	adrp	x0, 454000 <__func__.10675+0xa0>
  426e28:	add	x19, x0, #0xd8
  426e2c:	b	426e34 <parse_token+0x51b0>
  426e30:	mov	x19, #0x0                   	// #0
  426e34:	ldr	x21, [sp, #840]
  426e38:	ldr	x0, [sp, #2168]
  426e3c:	bl	41fb4c <strna>
  426e40:	mov	x2, x0
  426e44:	ldr	x0, [sp, #2160]
  426e48:	cmp	x0, #0x0
  426e4c:	b.eq	426e5c <parse_token+0x51d8>  // b.none
  426e50:	ldr	x0, [sp, #2160]
  426e54:	ldr	w0, [x0, #8]
  426e58:	b	426e60 <parse_token+0x51dc>
  426e5c:	mov	w0, #0x0                   	// #0
  426e60:	ldr	x1, [sp, #128]
  426e64:	str	x1, [sp, #32]
  426e68:	str	w0, [sp, #24]
  426e6c:	str	x2, [sp, #16]
  426e70:	adrp	x0, 454000 <__func__.10675+0xa0>
  426e74:	add	x0, x0, #0x6d8
  426e78:	str	x0, [sp, #8]
  426e7c:	str	xzr, [sp]
  426e80:	mov	x7, #0x0                   	// #0
  426e84:	mov	x6, x21
  426e88:	mov	x5, x19
  426e8c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  426e90:	add	x4, x0, #0x920
  426e94:	mov	w3, #0x2fe                 	// #766
  426e98:	mov	x2, x20
  426e9c:	ldr	w1, [sp, #420]
  426ea0:	ldr	w0, [sp, #416]
  426ea4:	bl	40b020 <log_object_internal@plt>
  426ea8:	str	wzr, [sp, #116]
  426eac:	adrp	x0, 454000 <__func__.10675+0xa0>
  426eb0:	add	x1, x0, #0x720
  426eb4:	ldr	x0, [sp, #120]
  426eb8:	bl	40b710 <strcmp@plt>
  426ebc:	cmp	w0, #0x0
  426ec0:	b.ne	426ee4 <parse_token+0x5260>  // b.any
  426ec4:	mov	x4, #0x0                   	// #0
  426ec8:	ldr	x3, [sp, #104]
  426ecc:	ldr	w2, [sp, #116]
  426ed0:	mov	w1, #0x13                  	// #19
  426ed4:	ldr	x0, [sp, #848]
  426ed8:	bl	420e88 <rule_line_add_token>
  426edc:	str	w0, [sp, #152]
  426ee0:	b	42a990 <parse_token+0x8d0c>
  426ee4:	adrp	x0, 454000 <__func__.10675+0xa0>
  426ee8:	add	x1, x0, #0x728
  426eec:	ldr	x0, [sp, #120]
  426ef0:	bl	40b710 <strcmp@plt>
  426ef4:	cmp	w0, #0x0
  426ef8:	b.ne	4270bc <parse_token+0x5438>  // b.any
  426efc:	ldr	x0, [sp, #104]
  426f00:	bl	43622c <udev_builtin_lookup>
  426f04:	str	w0, [sp, #444]
  426f08:	ldr	w0, [sp, #444]
  426f0c:	cmp	w0, #0x0
  426f10:	b.lt	42709c <parse_token+0x5418>  // b.tstop
  426f14:	ldr	x0, [sp, #136]
  426f18:	str	x0, [sp, #2264]
  426f1c:	ldr	x0, [sp, #2264]
  426f20:	cmp	x0, #0x0
  426f24:	b.eq	426f34 <parse_token+0x52b0>  // b.none
  426f28:	ldr	x0, [sp, #2264]
  426f2c:	ldr	x0, [x0, #32]
  426f30:	b	426f38 <parse_token+0x52b4>
  426f34:	mov	x0, #0x0                   	// #0
  426f38:	str	x0, [sp, #2272]
  426f3c:	ldr	x0, [sp, #2272]
  426f40:	cmp	x0, #0x0
  426f44:	b.eq	426f54 <parse_token+0x52d0>  // b.none
  426f48:	ldr	x0, [sp, #2272]
  426f4c:	ldr	x0, [x0, #8]
  426f50:	b	426f58 <parse_token+0x52d4>
  426f54:	mov	x0, #0x0                   	// #0
  426f58:	str	x0, [sp, #2280]
  426f5c:	ldr	x0, [sp, #2272]
  426f60:	cmp	x0, #0x0
  426f64:	b.eq	426f74 <parse_token+0x52f0>  // b.none
  426f68:	ldr	x0, [sp, #2272]
  426f6c:	ldr	x0, [x0]
  426f70:	b	426f78 <parse_token+0x52f4>
  426f74:	mov	x0, #0x0                   	// #0
  426f78:	str	x0, [sp, #2288]
  426f7c:	str	xzr, [sp, #840]
  426f80:	str	xzr, [sp, #2296]
  426f84:	mov	w0, #0x7                   	// #7
  426f88:	str	w0, [sp, #448]
  426f8c:	str	wzr, [sp, #452]
  426f90:	ldr	x0, [sp, #2296]
  426f94:	cmp	x0, #0x0
  426f98:	b.eq	426fd4 <parse_token+0x5350>  // b.none
  426f9c:	mov	w0, #0x1                   	// #1
  426fa0:	bl	40be30 <log_get_max_level_realm@plt>
  426fa4:	mov	w1, w0
  426fa8:	ldr	w0, [sp, #448]
  426fac:	cmp	w0, w1
  426fb0:	cset	w0, le
  426fb4:	and	w0, w0, #0xff
  426fb8:	and	x0, x0, #0xff
  426fbc:	cmp	x0, #0x0
  426fc0:	b.eq	426fd4 <parse_token+0x5350>  // b.none
  426fc4:	add	x0, sp, #0x348
  426fc8:	mov	x1, x0
  426fcc:	ldr	x0, [sp, #2296]
  426fd0:	bl	40aba0 <sd_device_get_sysname@plt>
  426fd4:	adrp	x0, 454000 <__func__.10675+0xa0>
  426fd8:	add	x20, x0, #0xbb
  426fdc:	ldr	x0, [sp, #840]
  426fe0:	cmp	x0, #0x0
  426fe4:	b.eq	426ff4 <parse_token+0x5370>  // b.none
  426fe8:	adrp	x0, 454000 <__func__.10675+0xa0>
  426fec:	add	x19, x0, #0xd8
  426ff0:	b	426ff8 <parse_token+0x5374>
  426ff4:	mov	x19, #0x0                   	// #0
  426ff8:	ldr	x21, [sp, #840]
  426ffc:	ldr	x0, [sp, #2288]
  427000:	bl	41fb4c <strna>
  427004:	mov	x2, x0
  427008:	ldr	x0, [sp, #2280]
  42700c:	cmp	x0, #0x0
  427010:	b.eq	427020 <parse_token+0x539c>  // b.none
  427014:	ldr	x0, [sp, #2280]
  427018:	ldr	w0, [x0, #8]
  42701c:	b	427024 <parse_token+0x53a0>
  427020:	mov	w0, #0x0                   	// #0
  427024:	ldr	x1, [sp, #128]
  427028:	str	x1, [sp, #40]
  42702c:	ldr	x1, [sp, #104]
  427030:	str	x1, [sp, #32]
  427034:	str	w0, [sp, #24]
  427038:	str	x2, [sp, #16]
  42703c:	adrp	x0, 454000 <__func__.10675+0xa0>
  427040:	add	x0, x0, #0x730
  427044:	str	x0, [sp, #8]
  427048:	str	xzr, [sp]
  42704c:	mov	x7, #0x0                   	// #0
  427050:	mov	x6, x21
  427054:	mov	x5, x19
  427058:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42705c:	add	x4, x0, #0x920
  427060:	mov	w3, #0x309                 	// #777
  427064:	mov	x2, x20
  427068:	ldr	w1, [sp, #452]
  42706c:	ldr	w0, [sp, #448]
  427070:	bl	40b020 <log_object_internal@plt>
  427074:	ldrsw	x0, [sp, #444]
  427078:	add	x0, x0, #0x1
  42707c:	mov	x4, x0
  427080:	ldr	x3, [sp, #104]
  427084:	ldr	w2, [sp, #116]
  427088:	mov	w1, #0x15                  	// #21
  42708c:	ldr	x0, [sp, #848]
  427090:	bl	420e88 <rule_line_add_token>
  427094:	str	w0, [sp, #152]
  427098:	b	42a990 <parse_token+0x8d0c>
  42709c:	mov	x4, #0x0                   	// #0
  4270a0:	ldr	x3, [sp, #104]
  4270a4:	ldr	w2, [sp, #116]
  4270a8:	mov	w1, #0x14                  	// #20
  4270ac:	ldr	x0, [sp, #848]
  4270b0:	bl	420e88 <rule_line_add_token>
  4270b4:	str	w0, [sp, #152]
  4270b8:	b	42a990 <parse_token+0x8d0c>
  4270bc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4270c0:	add	x1, x0, #0x770
  4270c4:	ldr	x0, [sp, #120]
  4270c8:	bl	40b710 <strcmp@plt>
  4270cc:	cmp	w0, #0x0
  4270d0:	b.ne	427278 <parse_token+0x55f4>  // b.any
  4270d4:	ldr	x0, [sp, #104]
  4270d8:	bl	43622c <udev_builtin_lookup>
  4270dc:	str	w0, [sp, #432]
  4270e0:	ldr	w0, [sp, #432]
  4270e4:	cmp	w0, #0x0
  4270e8:	b.ge	427250 <parse_token+0x55cc>  // b.tcont
  4270ec:	ldr	x0, [sp, #136]
  4270f0:	str	x0, [sp, #2224]
  4270f4:	ldr	x0, [sp, #2224]
  4270f8:	cmp	x0, #0x0
  4270fc:	b.eq	42710c <parse_token+0x5488>  // b.none
  427100:	ldr	x0, [sp, #2224]
  427104:	ldr	x0, [x0, #32]
  427108:	b	427110 <parse_token+0x548c>
  42710c:	mov	x0, #0x0                   	// #0
  427110:	str	x0, [sp, #2232]
  427114:	ldr	x0, [sp, #2232]
  427118:	cmp	x0, #0x0
  42711c:	b.eq	42712c <parse_token+0x54a8>  // b.none
  427120:	ldr	x0, [sp, #2232]
  427124:	ldr	x0, [x0, #8]
  427128:	b	427130 <parse_token+0x54ac>
  42712c:	mov	x0, #0x0                   	// #0
  427130:	str	x0, [sp, #2240]
  427134:	ldr	x0, [sp, #2232]
  427138:	cmp	x0, #0x0
  42713c:	b.eq	42714c <parse_token+0x54c8>  // b.none
  427140:	ldr	x0, [sp, #2232]
  427144:	ldr	x0, [x0]
  427148:	b	427150 <parse_token+0x54cc>
  42714c:	mov	x0, #0x0                   	// #0
  427150:	str	x0, [sp, #2248]
  427154:	str	xzr, [sp, #840]
  427158:	str	xzr, [sp, #2256]
  42715c:	mov	w0, #0x3                   	// #3
  427160:	str	w0, [sp, #436]
  427164:	mov	w0, #0x16                  	// #22
  427168:	movk	w0, #0x4000, lsl #16
  42716c:	str	w0, [sp, #440]
  427170:	ldr	x0, [sp, #2256]
  427174:	cmp	x0, #0x0
  427178:	b.eq	4271b4 <parse_token+0x5530>  // b.none
  42717c:	mov	w0, #0x1                   	// #1
  427180:	bl	40be30 <log_get_max_level_realm@plt>
  427184:	mov	w1, w0
  427188:	ldr	w0, [sp, #436]
  42718c:	cmp	w0, w1
  427190:	cset	w0, le
  427194:	and	w0, w0, #0xff
  427198:	and	x0, x0, #0xff
  42719c:	cmp	x0, #0x0
  4271a0:	b.eq	4271b4 <parse_token+0x5530>  // b.none
  4271a4:	add	x0, sp, #0x348
  4271a8:	mov	x1, x0
  4271ac:	ldr	x0, [sp, #2256]
  4271b0:	bl	40aba0 <sd_device_get_sysname@plt>
  4271b4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4271b8:	add	x20, x0, #0xbb
  4271bc:	ldr	x0, [sp, #840]
  4271c0:	cmp	x0, #0x0
  4271c4:	b.eq	4271d4 <parse_token+0x5550>  // b.none
  4271c8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4271cc:	add	x19, x0, #0xd8
  4271d0:	b	4271d8 <parse_token+0x5554>
  4271d4:	mov	x19, #0x0                   	// #0
  4271d8:	ldr	x21, [sp, #840]
  4271dc:	ldr	x0, [sp, #2248]
  4271e0:	bl	41fb4c <strna>
  4271e4:	mov	x2, x0
  4271e8:	ldr	x0, [sp, #2240]
  4271ec:	cmp	x0, #0x0
  4271f0:	b.eq	427200 <parse_token+0x557c>  // b.none
  4271f4:	ldr	x0, [sp, #2240]
  4271f8:	ldr	w0, [x0, #8]
  4271fc:	b	427204 <parse_token+0x5580>
  427200:	mov	w0, #0x0                   	// #0
  427204:	ldr	x1, [sp, #104]
  427208:	str	x1, [sp, #32]
  42720c:	str	w0, [sp, #24]
  427210:	str	x2, [sp, #16]
  427214:	adrp	x0, 454000 <__func__.10675+0xa0>
  427218:	add	x0, x0, #0x778
  42721c:	str	x0, [sp, #8]
  427220:	str	xzr, [sp]
  427224:	mov	x7, #0x0                   	// #0
  427228:	mov	x6, x21
  42722c:	mov	x5, x19
  427230:	adrp	x0, 455000 <__func__.10675+0x10a0>
  427234:	add	x4, x0, #0x920
  427238:	mov	w3, #0x312                 	// #786
  42723c:	mov	x2, x20
  427240:	ldr	w1, [sp, #440]
  427244:	ldr	w0, [sp, #436]
  427248:	bl	40b020 <log_object_internal@plt>
  42724c:	b	42a9c0 <parse_token+0x8d3c>
  427250:	ldrsw	x0, [sp, #432]
  427254:	add	x0, x0, #0x1
  427258:	mov	x4, x0
  42725c:	ldr	x3, [sp, #104]
  427260:	ldr	w2, [sp, #116]
  427264:	mov	w1, #0x15                  	// #21
  427268:	ldr	x0, [sp, #848]
  42726c:	bl	420e88 <rule_line_add_token>
  427270:	str	w0, [sp, #152]
  427274:	b	42a990 <parse_token+0x8d0c>
  427278:	adrp	x0, 454000 <__func__.10675+0xa0>
  42727c:	add	x1, x0, #0x7a0
  427280:	ldr	x0, [sp, #120]
  427284:	bl	40b710 <strcmp@plt>
  427288:	cmp	w0, #0x0
  42728c:	b.ne	4272b0 <parse_token+0x562c>  // b.any
  427290:	mov	x4, #0x0                   	// #0
  427294:	ldr	x3, [sp, #104]
  427298:	ldr	w2, [sp, #116]
  42729c:	mov	w1, #0x16                  	// #22
  4272a0:	ldr	x0, [sp, #848]
  4272a4:	bl	420e88 <rule_line_add_token>
  4272a8:	str	w0, [sp, #152]
  4272ac:	b	42a990 <parse_token+0x8d0c>
  4272b0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4272b4:	add	x1, x0, #0x7a8
  4272b8:	ldr	x0, [sp, #120]
  4272bc:	bl	40b710 <strcmp@plt>
  4272c0:	cmp	w0, #0x0
  4272c4:	b.ne	4272e8 <parse_token+0x5664>  // b.any
  4272c8:	mov	x4, #0x0                   	// #0
  4272cc:	ldr	x3, [sp, #104]
  4272d0:	ldr	w2, [sp, #116]
  4272d4:	mov	w1, #0x17                  	// #23
  4272d8:	ldr	x0, [sp, #848]
  4272dc:	bl	420e88 <rule_line_add_token>
  4272e0:	str	w0, [sp, #152]
  4272e4:	b	42a990 <parse_token+0x8d0c>
  4272e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4272ec:	add	x1, x0, #0x7b0
  4272f0:	ldr	x0, [sp, #120]
  4272f4:	bl	40b710 <strcmp@plt>
  4272f8:	cmp	w0, #0x0
  4272fc:	b.ne	427320 <parse_token+0x569c>  // b.any
  427300:	mov	x4, #0x0                   	// #0
  427304:	ldr	x3, [sp, #104]
  427308:	ldr	w2, [sp, #116]
  42730c:	mov	w1, #0x18                  	// #24
  427310:	ldr	x0, [sp, #848]
  427314:	bl	420e88 <rule_line_add_token>
  427318:	str	w0, [sp, #152]
  42731c:	b	42a990 <parse_token+0x8d0c>
  427320:	ldr	x0, [sp, #136]
  427324:	str	x0, [sp, #2184]
  427328:	ldr	x0, [sp, #2184]
  42732c:	cmp	x0, #0x0
  427330:	b.eq	427340 <parse_token+0x56bc>  // b.none
  427334:	ldr	x0, [sp, #2184]
  427338:	ldr	x0, [x0, #32]
  42733c:	b	427344 <parse_token+0x56c0>
  427340:	mov	x0, #0x0                   	// #0
  427344:	str	x0, [sp, #2192]
  427348:	ldr	x0, [sp, #2192]
  42734c:	cmp	x0, #0x0
  427350:	b.eq	427360 <parse_token+0x56dc>  // b.none
  427354:	ldr	x0, [sp, #2192]
  427358:	ldr	x0, [x0, #8]
  42735c:	b	427364 <parse_token+0x56e0>
  427360:	mov	x0, #0x0                   	// #0
  427364:	str	x0, [sp, #2200]
  427368:	ldr	x0, [sp, #2192]
  42736c:	cmp	x0, #0x0
  427370:	b.eq	427380 <parse_token+0x56fc>  // b.none
  427374:	ldr	x0, [sp, #2192]
  427378:	ldr	x0, [x0]
  42737c:	b	427384 <parse_token+0x5700>
  427380:	mov	x0, #0x0                   	// #0
  427384:	str	x0, [sp, #2208]
  427388:	str	xzr, [sp, #840]
  42738c:	str	xzr, [sp, #2216]
  427390:	mov	w0, #0x3                   	// #3
  427394:	str	w0, [sp, #424]
  427398:	mov	w0, #0x16                  	// #22
  42739c:	movk	w0, #0x4000, lsl #16
  4273a0:	str	w0, [sp, #428]
  4273a4:	ldr	x0, [sp, #2216]
  4273a8:	cmp	x0, #0x0
  4273ac:	b.eq	4273e8 <parse_token+0x5764>  // b.none
  4273b0:	mov	w0, #0x1                   	// #1
  4273b4:	bl	40be30 <log_get_max_level_realm@plt>
  4273b8:	mov	w1, w0
  4273bc:	ldr	w0, [sp, #424]
  4273c0:	cmp	w0, w1
  4273c4:	cset	w0, le
  4273c8:	and	w0, w0, #0xff
  4273cc:	and	x0, x0, #0xff
  4273d0:	cmp	x0, #0x0
  4273d4:	b.eq	4273e8 <parse_token+0x5764>  // b.none
  4273d8:	add	x0, sp, #0x348
  4273dc:	mov	x1, x0
  4273e0:	ldr	x0, [sp, #2216]
  4273e4:	bl	40aba0 <sd_device_get_sysname@plt>
  4273e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4273ec:	add	x20, x0, #0xbb
  4273f0:	ldr	x0, [sp, #840]
  4273f4:	cmp	x0, #0x0
  4273f8:	b.eq	427408 <parse_token+0x5784>  // b.none
  4273fc:	adrp	x0, 454000 <__func__.10675+0xa0>
  427400:	add	x19, x0, #0xd8
  427404:	b	42740c <parse_token+0x5788>
  427408:	mov	x19, #0x0                   	// #0
  42740c:	ldr	x21, [sp, #840]
  427410:	ldr	x0, [sp, #2208]
  427414:	bl	41fb4c <strna>
  427418:	mov	x2, x0
  42741c:	ldr	x0, [sp, #2200]
  427420:	cmp	x0, #0x0
  427424:	b.eq	427434 <parse_token+0x57b0>  // b.none
  427428:	ldr	x0, [sp, #2200]
  42742c:	ldr	w0, [x0, #8]
  427430:	b	427438 <parse_token+0x57b4>
  427434:	mov	w0, #0x0                   	// #0
  427438:	ldr	x1, [sp, #128]
  42743c:	str	x1, [sp, #40]
  427440:	adrp	x1, 454000 <__func__.10675+0xa0>
  427444:	add	x1, x1, #0x278
  427448:	str	x1, [sp, #32]
  42744c:	str	w0, [sp, #24]
  427450:	str	x2, [sp, #16]
  427454:	adrp	x0, 454000 <__func__.10675+0xa0>
  427458:	add	x0, x0, #0x288
  42745c:	str	x0, [sp, #8]
  427460:	str	xzr, [sp]
  427464:	mov	x7, #0x0                   	// #0
  427468:	mov	x6, x21
  42746c:	mov	x5, x19
  427470:	adrp	x0, 455000 <__func__.10675+0x10a0>
  427474:	add	x4, x0, #0x920
  427478:	mov	w3, #0x31c                 	// #796
  42747c:	mov	x2, x20
  427480:	ldr	w1, [sp, #428]
  427484:	ldr	w0, [sp, #424]
  427488:	bl	40b020 <log_object_internal@plt>
  42748c:	b	42a9c0 <parse_token+0x8d3c>
  427490:	adrp	x0, 454000 <__func__.10675+0xa0>
  427494:	add	x1, x0, #0x7b8
  427498:	ldr	x0, [sp, #128]
  42749c:	bl	40b710 <strcmp@plt>
  4274a0:	cmp	w0, #0x0
  4274a4:	b.ne	4277c8 <parse_token+0x5b44>  // b.any
  4274a8:	ldr	x0, [sp, #120]
  4274ac:	cmp	x0, #0x0
  4274b0:	b.eq	427624 <parse_token+0x59a0>  // b.none
  4274b4:	ldr	x0, [sp, #136]
  4274b8:	str	x0, [sp, #2104]
  4274bc:	ldr	x0, [sp, #2104]
  4274c0:	cmp	x0, #0x0
  4274c4:	b.eq	4274d4 <parse_token+0x5850>  // b.none
  4274c8:	ldr	x0, [sp, #2104]
  4274cc:	ldr	x0, [x0, #32]
  4274d0:	b	4274d8 <parse_token+0x5854>
  4274d4:	mov	x0, #0x0                   	// #0
  4274d8:	str	x0, [sp, #2112]
  4274dc:	ldr	x0, [sp, #2112]
  4274e0:	cmp	x0, #0x0
  4274e4:	b.eq	4274f4 <parse_token+0x5870>  // b.none
  4274e8:	ldr	x0, [sp, #2112]
  4274ec:	ldr	x0, [x0, #8]
  4274f0:	b	4274f8 <parse_token+0x5874>
  4274f4:	mov	x0, #0x0                   	// #0
  4274f8:	str	x0, [sp, #2120]
  4274fc:	ldr	x0, [sp, #2112]
  427500:	cmp	x0, #0x0
  427504:	b.eq	427514 <parse_token+0x5890>  // b.none
  427508:	ldr	x0, [sp, #2112]
  42750c:	ldr	x0, [x0]
  427510:	b	427518 <parse_token+0x5894>
  427514:	mov	x0, #0x0                   	// #0
  427518:	str	x0, [sp, #2128]
  42751c:	str	xzr, [sp, #840]
  427520:	str	xzr, [sp, #2136]
  427524:	mov	w0, #0x3                   	// #3
  427528:	str	w0, [sp, #408]
  42752c:	mov	w0, #0x16                  	// #22
  427530:	movk	w0, #0x4000, lsl #16
  427534:	str	w0, [sp, #412]
  427538:	ldr	x0, [sp, #2136]
  42753c:	cmp	x0, #0x0
  427540:	b.eq	42757c <parse_token+0x58f8>  // b.none
  427544:	mov	w0, #0x1                   	// #1
  427548:	bl	40be30 <log_get_max_level_realm@plt>
  42754c:	mov	w1, w0
  427550:	ldr	w0, [sp, #408]
  427554:	cmp	w0, w1
  427558:	cset	w0, le
  42755c:	and	w0, w0, #0xff
  427560:	and	x0, x0, #0xff
  427564:	cmp	x0, #0x0
  427568:	b.eq	42757c <parse_token+0x58f8>  // b.none
  42756c:	add	x0, sp, #0x348
  427570:	mov	x1, x0
  427574:	ldr	x0, [sp, #2136]
  427578:	bl	40aba0 <sd_device_get_sysname@plt>
  42757c:	adrp	x0, 454000 <__func__.10675+0xa0>
  427580:	add	x20, x0, #0xbb
  427584:	ldr	x0, [sp, #840]
  427588:	cmp	x0, #0x0
  42758c:	b.eq	42759c <parse_token+0x5918>  // b.none
  427590:	adrp	x0, 454000 <__func__.10675+0xa0>
  427594:	add	x19, x0, #0xd8
  427598:	b	4275a0 <parse_token+0x591c>
  42759c:	mov	x19, #0x0                   	// #0
  4275a0:	ldr	x21, [sp, #840]
  4275a4:	ldr	x0, [sp, #2128]
  4275a8:	bl	41fb4c <strna>
  4275ac:	mov	x2, x0
  4275b0:	ldr	x0, [sp, #2120]
  4275b4:	cmp	x0, #0x0
  4275b8:	b.eq	4275c8 <parse_token+0x5944>  // b.none
  4275bc:	ldr	x0, [sp, #2120]
  4275c0:	ldr	w0, [x0, #8]
  4275c4:	b	4275cc <parse_token+0x5948>
  4275c8:	mov	w0, #0x0                   	// #0
  4275cc:	ldr	x1, [sp, #128]
  4275d0:	str	x1, [sp, #40]
  4275d4:	adrp	x1, 454000 <__func__.10675+0xa0>
  4275d8:	add	x1, x1, #0x278
  4275dc:	str	x1, [sp, #32]
  4275e0:	str	w0, [sp, #24]
  4275e4:	str	x2, [sp, #16]
  4275e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4275ec:	add	x0, x0, #0x288
  4275f0:	str	x0, [sp, #8]
  4275f4:	str	xzr, [sp]
  4275f8:	mov	x7, #0x0                   	// #0
  4275fc:	mov	x6, x21
  427600:	mov	x5, x19
  427604:	adrp	x0, 455000 <__func__.10675+0x10a0>
  427608:	add	x4, x0, #0x920
  42760c:	mov	w3, #0x31f                 	// #799
  427610:	mov	x2, x20
  427614:	ldr	w1, [sp, #412]
  427618:	ldr	w0, [sp, #408]
  42761c:	bl	40b020 <log_object_internal@plt>
  427620:	b	42a9c0 <parse_token+0x8d3c>
  427624:	ldrb	w0, [sp, #147]
  427628:	eor	w0, w0, #0x1
  42762c:	and	w0, w0, #0xff
  427630:	cmp	w0, #0x0
  427634:	b.eq	4277a8 <parse_token+0x5b24>  // b.none
  427638:	ldr	x0, [sp, #136]
  42763c:	str	x0, [sp, #2064]
  427640:	ldr	x0, [sp, #2064]
  427644:	cmp	x0, #0x0
  427648:	b.eq	427658 <parse_token+0x59d4>  // b.none
  42764c:	ldr	x0, [sp, #2064]
  427650:	ldr	x0, [x0, #32]
  427654:	b	42765c <parse_token+0x59d8>
  427658:	mov	x0, #0x0                   	// #0
  42765c:	str	x0, [sp, #2072]
  427660:	ldr	x0, [sp, #2072]
  427664:	cmp	x0, #0x0
  427668:	b.eq	427678 <parse_token+0x59f4>  // b.none
  42766c:	ldr	x0, [sp, #2072]
  427670:	ldr	x0, [x0, #8]
  427674:	b	42767c <parse_token+0x59f8>
  427678:	mov	x0, #0x0                   	// #0
  42767c:	str	x0, [sp, #2080]
  427680:	ldr	x0, [sp, #2072]
  427684:	cmp	x0, #0x0
  427688:	b.eq	427698 <parse_token+0x5a14>  // b.none
  42768c:	ldr	x0, [sp, #2072]
  427690:	ldr	x0, [x0]
  427694:	b	42769c <parse_token+0x5a18>
  427698:	mov	x0, #0x0                   	// #0
  42769c:	str	x0, [sp, #2088]
  4276a0:	str	xzr, [sp, #840]
  4276a4:	str	xzr, [sp, #2096]
  4276a8:	mov	w0, #0x3                   	// #3
  4276ac:	str	w0, [sp, #400]
  4276b0:	mov	w0, #0x16                  	// #22
  4276b4:	movk	w0, #0x4000, lsl #16
  4276b8:	str	w0, [sp, #404]
  4276bc:	ldr	x0, [sp, #2096]
  4276c0:	cmp	x0, #0x0
  4276c4:	b.eq	427700 <parse_token+0x5a7c>  // b.none
  4276c8:	mov	w0, #0x1                   	// #1
  4276cc:	bl	40be30 <log_get_max_level_realm@plt>
  4276d0:	mov	w1, w0
  4276d4:	ldr	w0, [sp, #400]
  4276d8:	cmp	w0, w1
  4276dc:	cset	w0, le
  4276e0:	and	w0, w0, #0xff
  4276e4:	and	x0, x0, #0xff
  4276e8:	cmp	x0, #0x0
  4276ec:	b.eq	427700 <parse_token+0x5a7c>  // b.none
  4276f0:	add	x0, sp, #0x348
  4276f4:	mov	x1, x0
  4276f8:	ldr	x0, [sp, #2096]
  4276fc:	bl	40aba0 <sd_device_get_sysname@plt>
  427700:	adrp	x0, 454000 <__func__.10675+0xa0>
  427704:	add	x20, x0, #0xbb
  427708:	ldr	x0, [sp, #840]
  42770c:	cmp	x0, #0x0
  427710:	b.eq	427720 <parse_token+0x5a9c>  // b.none
  427714:	adrp	x0, 454000 <__func__.10675+0xa0>
  427718:	add	x19, x0, #0xd8
  42771c:	b	427724 <parse_token+0x5aa0>
  427720:	mov	x19, #0x0                   	// #0
  427724:	ldr	x21, [sp, #840]
  427728:	ldr	x0, [sp, #2088]
  42772c:	bl	41fb4c <strna>
  427730:	mov	x2, x0
  427734:	ldr	x0, [sp, #2080]
  427738:	cmp	x0, #0x0
  42773c:	b.eq	42774c <parse_token+0x5ac8>  // b.none
  427740:	ldr	x0, [sp, #2080]
  427744:	ldr	w0, [x0, #8]
  427748:	b	427750 <parse_token+0x5acc>
  42774c:	mov	w0, #0x0                   	// #0
  427750:	ldr	x1, [sp, #128]
  427754:	str	x1, [sp, #40]
  427758:	adrp	x1, 454000 <__func__.10675+0xa0>
  42775c:	add	x1, x1, #0x348
  427760:	str	x1, [sp, #32]
  427764:	str	w0, [sp, #24]
  427768:	str	x2, [sp, #16]
  42776c:	adrp	x0, 454000 <__func__.10675+0xa0>
  427770:	add	x0, x0, #0x288
  427774:	str	x0, [sp, #8]
  427778:	str	xzr, [sp]
  42777c:	mov	x7, #0x0                   	// #0
  427780:	mov	x6, x21
  427784:	mov	x5, x19
  427788:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42778c:	add	x4, x0, #0x920
  427790:	mov	w3, #0x321                 	// #801
  427794:	mov	x2, x20
  427798:	ldr	w1, [sp, #404]
  42779c:	ldr	w0, [sp, #400]
  4277a0:	bl	40b020 <log_object_internal@plt>
  4277a4:	b	42a9c0 <parse_token+0x8d3c>
  4277a8:	mov	x4, #0x0                   	// #0
  4277ac:	ldr	x3, [sp, #104]
  4277b0:	ldr	w2, [sp, #116]
  4277b4:	mov	w1, #0x19                  	// #25
  4277b8:	ldr	x0, [sp, #848]
  4277bc:	bl	420e88 <rule_line_add_token>
  4277c0:	str	w0, [sp, #152]
  4277c4:	b	42a990 <parse_token+0x8d0c>
  4277c8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4277cc:	add	x1, x0, #0x7c0
  4277d0:	ldr	x0, [sp, #128]
  4277d4:	bl	40b710 <strcmp@plt>
  4277d8:	cmp	w0, #0x0
  4277dc:	b.ne	4280d0 <parse_token+0x644c>  // b.any
  4277e0:	ldr	x0, [sp, #120]
  4277e4:	cmp	x0, #0x0
  4277e8:	b.eq	42795c <parse_token+0x5cd8>  // b.none
  4277ec:	ldr	x0, [sp, #136]
  4277f0:	str	x0, [sp, #2024]
  4277f4:	ldr	x0, [sp, #2024]
  4277f8:	cmp	x0, #0x0
  4277fc:	b.eq	42780c <parse_token+0x5b88>  // b.none
  427800:	ldr	x0, [sp, #2024]
  427804:	ldr	x0, [x0, #32]
  427808:	b	427810 <parse_token+0x5b8c>
  42780c:	mov	x0, #0x0                   	// #0
  427810:	str	x0, [sp, #2032]
  427814:	ldr	x0, [sp, #2032]
  427818:	cmp	x0, #0x0
  42781c:	b.eq	42782c <parse_token+0x5ba8>  // b.none
  427820:	ldr	x0, [sp, #2032]
  427824:	ldr	x0, [x0, #8]
  427828:	b	427830 <parse_token+0x5bac>
  42782c:	mov	x0, #0x0                   	// #0
  427830:	str	x0, [sp, #2040]
  427834:	ldr	x0, [sp, #2032]
  427838:	cmp	x0, #0x0
  42783c:	b.eq	42784c <parse_token+0x5bc8>  // b.none
  427840:	ldr	x0, [sp, #2032]
  427844:	ldr	x0, [x0]
  427848:	b	427850 <parse_token+0x5bcc>
  42784c:	mov	x0, #0x0                   	// #0
  427850:	str	x0, [sp, #2048]
  427854:	str	xzr, [sp, #840]
  427858:	str	xzr, [sp, #2056]
  42785c:	mov	w0, #0x3                   	// #3
  427860:	str	w0, [sp, #392]
  427864:	mov	w0, #0x16                  	// #22
  427868:	movk	w0, #0x4000, lsl #16
  42786c:	str	w0, [sp, #396]
  427870:	ldr	x0, [sp, #2056]
  427874:	cmp	x0, #0x0
  427878:	b.eq	4278b4 <parse_token+0x5c30>  // b.none
  42787c:	mov	w0, #0x1                   	// #1
  427880:	bl	40be30 <log_get_max_level_realm@plt>
  427884:	mov	w1, w0
  427888:	ldr	w0, [sp, #392]
  42788c:	cmp	w0, w1
  427890:	cset	w0, le
  427894:	and	w0, w0, #0xff
  427898:	and	x0, x0, #0xff
  42789c:	cmp	x0, #0x0
  4278a0:	b.eq	4278b4 <parse_token+0x5c30>  // b.none
  4278a4:	add	x0, sp, #0x348
  4278a8:	mov	x1, x0
  4278ac:	ldr	x0, [sp, #2056]
  4278b0:	bl	40aba0 <sd_device_get_sysname@plt>
  4278b4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4278b8:	add	x20, x0, #0xbb
  4278bc:	ldr	x0, [sp, #840]
  4278c0:	cmp	x0, #0x0
  4278c4:	b.eq	4278d4 <parse_token+0x5c50>  // b.none
  4278c8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4278cc:	add	x19, x0, #0xd8
  4278d0:	b	4278d8 <parse_token+0x5c54>
  4278d4:	mov	x19, #0x0                   	// #0
  4278d8:	ldr	x21, [sp, #840]
  4278dc:	ldr	x0, [sp, #2048]
  4278e0:	bl	41fb4c <strna>
  4278e4:	mov	x2, x0
  4278e8:	ldr	x0, [sp, #2040]
  4278ec:	cmp	x0, #0x0
  4278f0:	b.eq	427900 <parse_token+0x5c7c>  // b.none
  4278f4:	ldr	x0, [sp, #2040]
  4278f8:	ldr	w0, [x0, #8]
  4278fc:	b	427904 <parse_token+0x5c80>
  427900:	mov	w0, #0x0                   	// #0
  427904:	ldr	x1, [sp, #128]
  427908:	str	x1, [sp, #40]
  42790c:	adrp	x1, 454000 <__func__.10675+0xa0>
  427910:	add	x1, x1, #0x278
  427914:	str	x1, [sp, #32]
  427918:	str	w0, [sp, #24]
  42791c:	str	x2, [sp, #16]
  427920:	adrp	x0, 454000 <__func__.10675+0xa0>
  427924:	add	x0, x0, #0x288
  427928:	str	x0, [sp, #8]
  42792c:	str	xzr, [sp]
  427930:	mov	x7, #0x0                   	// #0
  427934:	mov	x6, x21
  427938:	mov	x5, x19
  42793c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  427940:	add	x4, x0, #0x920
  427944:	mov	w3, #0x328                 	// #808
  427948:	mov	x2, x20
  42794c:	ldr	w1, [sp, #396]
  427950:	ldr	w0, [sp, #392]
  427954:	bl	40b020 <log_object_internal@plt>
  427958:	b	42a9c0 <parse_token+0x8d3c>
  42795c:	ldrb	w0, [sp, #147]
  427960:	cmp	w0, #0x0
  427964:	b.ne	427974 <parse_token+0x5cf0>  // b.any
  427968:	ldr	w0, [sp, #116]
  42796c:	cmp	w0, #0x3
  427970:	b.ne	427ae4 <parse_token+0x5e60>  // b.any
  427974:	ldr	x0, [sp, #136]
  427978:	str	x0, [sp, #1984]
  42797c:	ldr	x0, [sp, #1984]
  427980:	cmp	x0, #0x0
  427984:	b.eq	427994 <parse_token+0x5d10>  // b.none
  427988:	ldr	x0, [sp, #1984]
  42798c:	ldr	x0, [x0, #32]
  427990:	b	427998 <parse_token+0x5d14>
  427994:	mov	x0, #0x0                   	// #0
  427998:	str	x0, [sp, #1992]
  42799c:	ldr	x0, [sp, #1992]
  4279a0:	cmp	x0, #0x0
  4279a4:	b.eq	4279b4 <parse_token+0x5d30>  // b.none
  4279a8:	ldr	x0, [sp, #1992]
  4279ac:	ldr	x0, [x0, #8]
  4279b0:	b	4279b8 <parse_token+0x5d34>
  4279b4:	mov	x0, #0x0                   	// #0
  4279b8:	str	x0, [sp, #2000]
  4279bc:	ldr	x0, [sp, #1992]
  4279c0:	cmp	x0, #0x0
  4279c4:	b.eq	4279d4 <parse_token+0x5d50>  // b.none
  4279c8:	ldr	x0, [sp, #1992]
  4279cc:	ldr	x0, [x0]
  4279d0:	b	4279d8 <parse_token+0x5d54>
  4279d4:	mov	x0, #0x0                   	// #0
  4279d8:	str	x0, [sp, #2008]
  4279dc:	str	xzr, [sp, #840]
  4279e0:	str	xzr, [sp, #2016]
  4279e4:	mov	w0, #0x3                   	// #3
  4279e8:	str	w0, [sp, #384]
  4279ec:	mov	w0, #0x16                  	// #22
  4279f0:	movk	w0, #0x4000, lsl #16
  4279f4:	str	w0, [sp, #388]
  4279f8:	ldr	x0, [sp, #2016]
  4279fc:	cmp	x0, #0x0
  427a00:	b.eq	427a3c <parse_token+0x5db8>  // b.none
  427a04:	mov	w0, #0x1                   	// #1
  427a08:	bl	40be30 <log_get_max_level_realm@plt>
  427a0c:	mov	w1, w0
  427a10:	ldr	w0, [sp, #384]
  427a14:	cmp	w0, w1
  427a18:	cset	w0, le
  427a1c:	and	w0, w0, #0xff
  427a20:	and	x0, x0, #0xff
  427a24:	cmp	x0, #0x0
  427a28:	b.eq	427a3c <parse_token+0x5db8>  // b.none
  427a2c:	add	x0, sp, #0x348
  427a30:	mov	x1, x0
  427a34:	ldr	x0, [sp, #2016]
  427a38:	bl	40aba0 <sd_device_get_sysname@plt>
  427a3c:	adrp	x0, 454000 <__func__.10675+0xa0>
  427a40:	add	x20, x0, #0xbb
  427a44:	ldr	x0, [sp, #840]
  427a48:	cmp	x0, #0x0
  427a4c:	b.eq	427a5c <parse_token+0x5dd8>  // b.none
  427a50:	adrp	x0, 454000 <__func__.10675+0xa0>
  427a54:	add	x19, x0, #0xd8
  427a58:	b	427a60 <parse_token+0x5ddc>
  427a5c:	mov	x19, #0x0                   	// #0
  427a60:	ldr	x21, [sp, #840]
  427a64:	ldr	x0, [sp, #2008]
  427a68:	bl	41fb4c <strna>
  427a6c:	mov	x2, x0
  427a70:	ldr	x0, [sp, #2000]
  427a74:	cmp	x0, #0x0
  427a78:	b.eq	427a88 <parse_token+0x5e04>  // b.none
  427a7c:	ldr	x0, [sp, #2000]
  427a80:	ldr	w0, [x0, #8]
  427a84:	b	427a8c <parse_token+0x5e08>
  427a88:	mov	w0, #0x0                   	// #0
  427a8c:	ldr	x1, [sp, #128]
  427a90:	str	x1, [sp, #40]
  427a94:	adrp	x1, 454000 <__func__.10675+0xa0>
  427a98:	add	x1, x1, #0x348
  427a9c:	str	x1, [sp, #32]
  427aa0:	str	w0, [sp, #24]
  427aa4:	str	x2, [sp, #16]
  427aa8:	adrp	x0, 454000 <__func__.10675+0xa0>
  427aac:	add	x0, x0, #0x288
  427ab0:	str	x0, [sp, #8]
  427ab4:	str	xzr, [sp]
  427ab8:	mov	x7, #0x0                   	// #0
  427abc:	mov	x6, x21
  427ac0:	mov	x5, x19
  427ac4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  427ac8:	add	x4, x0, #0x920
  427acc:	mov	w3, #0x32a                 	// #810
  427ad0:	mov	x2, x20
  427ad4:	ldr	w1, [sp, #388]
  427ad8:	ldr	w0, [sp, #384]
  427adc:	bl	40b020 <log_object_internal@plt>
  427ae0:	b	42a9c0 <parse_token+0x8d3c>
  427ae4:	ldr	w0, [sp, #116]
  427ae8:	cmp	w0, #0x2
  427aec:	b.ne	427c50 <parse_token+0x5fcc>  // b.any
  427af0:	ldr	x0, [sp, #136]
  427af4:	str	x0, [sp, #1856]
  427af8:	ldr	x0, [sp, #1856]
  427afc:	cmp	x0, #0x0
  427b00:	b.eq	427b10 <parse_token+0x5e8c>  // b.none
  427b04:	ldr	x0, [sp, #1856]
  427b08:	ldr	x0, [x0, #32]
  427b0c:	b	427b14 <parse_token+0x5e90>
  427b10:	mov	x0, #0x0                   	// #0
  427b14:	str	x0, [sp, #1864]
  427b18:	ldr	x0, [sp, #1864]
  427b1c:	cmp	x0, #0x0
  427b20:	b.eq	427b30 <parse_token+0x5eac>  // b.none
  427b24:	ldr	x0, [sp, #1864]
  427b28:	ldr	x0, [x0, #8]
  427b2c:	b	427b34 <parse_token+0x5eb0>
  427b30:	mov	x0, #0x0                   	// #0
  427b34:	str	x0, [sp, #1872]
  427b38:	ldr	x0, [sp, #1864]
  427b3c:	cmp	x0, #0x0
  427b40:	b.eq	427b50 <parse_token+0x5ecc>  // b.none
  427b44:	ldr	x0, [sp, #1864]
  427b48:	ldr	x0, [x0]
  427b4c:	b	427b54 <parse_token+0x5ed0>
  427b50:	mov	x0, #0x0                   	// #0
  427b54:	str	x0, [sp, #1880]
  427b58:	str	xzr, [sp, #840]
  427b5c:	str	xzr, [sp, #1888]
  427b60:	mov	w0, #0x7                   	// #7
  427b64:	str	w0, [sp, #360]
  427b68:	str	wzr, [sp, #364]
  427b6c:	ldr	x0, [sp, #1888]
  427b70:	cmp	x0, #0x0
  427b74:	b.eq	427bb0 <parse_token+0x5f2c>  // b.none
  427b78:	mov	w0, #0x1                   	// #1
  427b7c:	bl	40be30 <log_get_max_level_realm@plt>
  427b80:	mov	w1, w0
  427b84:	ldr	w0, [sp, #360]
  427b88:	cmp	w0, w1
  427b8c:	cset	w0, le
  427b90:	and	w0, w0, #0xff
  427b94:	and	x0, x0, #0xff
  427b98:	cmp	x0, #0x0
  427b9c:	b.eq	427bb0 <parse_token+0x5f2c>  // b.none
  427ba0:	add	x0, sp, #0x348
  427ba4:	mov	x1, x0
  427ba8:	ldr	x0, [sp, #1888]
  427bac:	bl	40aba0 <sd_device_get_sysname@plt>
  427bb0:	adrp	x0, 454000 <__func__.10675+0xa0>
  427bb4:	add	x20, x0, #0xbb
  427bb8:	ldr	x0, [sp, #840]
  427bbc:	cmp	x0, #0x0
  427bc0:	b.eq	427bd0 <parse_token+0x5f4c>  // b.none
  427bc4:	adrp	x0, 454000 <__func__.10675+0xa0>
  427bc8:	add	x19, x0, #0xd8
  427bcc:	b	427bd4 <parse_token+0x5f50>
  427bd0:	mov	x19, #0x0                   	// #0
  427bd4:	ldr	x21, [sp, #840]
  427bd8:	ldr	x0, [sp, #1880]
  427bdc:	bl	41fb4c <strna>
  427be0:	mov	x2, x0
  427be4:	ldr	x0, [sp, #1872]
  427be8:	cmp	x0, #0x0
  427bec:	b.eq	427bfc <parse_token+0x5f78>  // b.none
  427bf0:	ldr	x0, [sp, #1872]
  427bf4:	ldr	w0, [x0, #8]
  427bf8:	b	427c00 <parse_token+0x5f7c>
  427bfc:	mov	w0, #0x0                   	// #0
  427c00:	ldr	x1, [sp, #128]
  427c04:	str	x1, [sp, #32]
  427c08:	str	w0, [sp, #24]
  427c0c:	str	x2, [sp, #16]
  427c10:	adrp	x0, 454000 <__func__.10675+0xa0>
  427c14:	add	x0, x0, #0x7c8
  427c18:	str	x0, [sp, #8]
  427c1c:	str	xzr, [sp]
  427c20:	mov	x7, #0x0                   	// #0
  427c24:	mov	x6, x21
  427c28:	mov	x5, x19
  427c2c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  427c30:	add	x4, x0, #0x920
  427c34:	mov	w3, #0x32c                 	// #812
  427c38:	mov	x2, x20
  427c3c:	ldr	w1, [sp, #364]
  427c40:	ldr	w0, [sp, #360]
  427c44:	bl	40b020 <log_object_internal@plt>
  427c48:	mov	w0, #0x4                   	// #4
  427c4c:	str	w0, [sp, #116]
  427c50:	adrp	x0, 454000 <__func__.10675+0xa0>
  427c54:	add	x1, x0, #0x808
  427c58:	ldr	x0, [sp, #104]
  427c5c:	bl	40b710 <strcmp@plt>
  427c60:	cmp	w0, #0x0
  427c64:	b.ne	427c88 <parse_token+0x6004>  // b.any
  427c68:	mov	x4, #0x0                   	// #0
  427c6c:	mov	x3, #0x0                   	// #0
  427c70:	ldr	w2, [sp, #116]
  427c74:	mov	w1, #0x1a                  	// #26
  427c78:	ldr	x0, [sp, #848]
  427c7c:	bl	420e88 <rule_line_add_token>
  427c80:	str	w0, [sp, #152]
  427c84:	b	42a990 <parse_token+0x8d0c>
  427c88:	adrp	x0, 454000 <__func__.10675+0xa0>
  427c8c:	add	x1, x0, #0x820
  427c90:	ldr	x0, [sp, #104]
  427c94:	bl	40b710 <strcmp@plt>
  427c98:	cmp	w0, #0x0
  427c9c:	b.ne	427cc0 <parse_token+0x603c>  // b.any
  427ca0:	mov	x4, #0x0                   	// #0
  427ca4:	mov	x3, #0x0                   	// #0
  427ca8:	ldr	w2, [sp, #116]
  427cac:	mov	w1, #0x1b                  	// #27
  427cb0:	ldr	x0, [sp, #848]
  427cb4:	bl	420e88 <rule_line_add_token>
  427cb8:	str	w0, [sp, #152]
  427cbc:	b	42a990 <parse_token+0x8d0c>
  427cc0:	adrp	x0, 454000 <__func__.10675+0xa0>
  427cc4:	add	x1, x0, #0x838
  427cc8:	ldr	x0, [sp, #104]
  427ccc:	bl	40b710 <strcmp@plt>
  427cd0:	cmp	w0, #0x0
  427cd4:	b.ne	427cf8 <parse_token+0x6074>  // b.any
  427cd8:	mov	x4, #0x0                   	// #0
  427cdc:	mov	x3, #0x0                   	// #0
  427ce0:	ldr	w2, [sp, #116]
  427ce4:	mov	w1, #0x1c                  	// #28
  427ce8:	ldr	x0, [sp, #848]
  427cec:	bl	420e88 <rule_line_add_token>
  427cf0:	str	w0, [sp, #152]
  427cf4:	b	42a990 <parse_token+0x8d0c>
  427cf8:	adrp	x0, 454000 <__func__.10675+0xa0>
  427cfc:	add	x1, x0, #0x848
  427d00:	ldr	x0, [sp, #104]
  427d04:	bl	40b710 <strcmp@plt>
  427d08:	cmp	w0, #0x0
  427d0c:	b.ne	427d30 <parse_token+0x60ac>  // b.any
  427d10:	mov	x4, #0x1                   	// #1
  427d14:	mov	x3, #0x0                   	// #0
  427d18:	ldr	w2, [sp, #116]
  427d1c:	mov	w1, #0x1d                  	// #29
  427d20:	ldr	x0, [sp, #848]
  427d24:	bl	420e88 <rule_line_add_token>
  427d28:	str	w0, [sp, #152]
  427d2c:	b	42a990 <parse_token+0x8d0c>
  427d30:	adrp	x0, 454000 <__func__.10675+0xa0>
  427d34:	add	x1, x0, #0x850
  427d38:	ldr	x0, [sp, #104]
  427d3c:	bl	40b710 <strcmp@plt>
  427d40:	cmp	w0, #0x0
  427d44:	b.ne	427d68 <parse_token+0x60e4>  // b.any
  427d48:	mov	x4, #0x0                   	// #0
  427d4c:	mov	x3, #0x0                   	// #0
  427d50:	ldr	w2, [sp, #116]
  427d54:	mov	w1, #0x1d                  	// #29
  427d58:	ldr	x0, [sp, #848]
  427d5c:	bl	420e88 <rule_line_add_token>
  427d60:	str	w0, [sp, #152]
  427d64:	b	42a990 <parse_token+0x8d0c>
  427d68:	adrp	x0, 454000 <__func__.10675+0xa0>
  427d6c:	add	x1, x0, #0x858
  427d70:	ldr	x0, [sp, #104]
  427d74:	bl	41fbb0 <startswith>
  427d78:	str	x0, [sp, #1896]
  427d7c:	ldr	x0, [sp, #1896]
  427d80:	cmp	x0, #0x0
  427d84:	b.eq	427da8 <parse_token+0x6124>  // b.none
  427d88:	mov	x4, #0x0                   	// #0
  427d8c:	ldr	x3, [sp, #1896]
  427d90:	ldr	w2, [sp, #116]
  427d94:	mov	w1, #0x26                  	// #38
  427d98:	ldr	x0, [sp, #848]
  427d9c:	bl	420e88 <rule_line_add_token>
  427da0:	str	w0, [sp, #152]
  427da4:	b	42a990 <parse_token+0x8d0c>
  427da8:	adrp	x0, 454000 <__func__.10675+0xa0>
  427dac:	add	x1, x0, #0x868
  427db0:	ldr	x0, [sp, #104]
  427db4:	bl	41fbb0 <startswith>
  427db8:	str	x0, [sp, #1896]
  427dbc:	ldr	x0, [sp, #1896]
  427dc0:	cmp	x0, #0x0
  427dc4:	b.eq	427f70 <parse_token+0x62ec>  // b.none
  427dc8:	add	x0, sp, #0x94
  427dcc:	mov	x1, x0
  427dd0:	ldr	x0, [sp, #1896]
  427dd4:	bl	40b0e0 <safe_atoi@plt>
  427dd8:	str	w0, [sp, #152]
  427ddc:	ldr	w0, [sp, #152]
  427de0:	cmp	w0, #0x0
  427de4:	b.ge	427f48 <parse_token+0x62c4>  // b.tcont
  427de8:	ldr	x0, [sp, #136]
  427dec:	str	x0, [sp, #1944]
  427df0:	ldr	x0, [sp, #1944]
  427df4:	cmp	x0, #0x0
  427df8:	b.eq	427e08 <parse_token+0x6184>  // b.none
  427dfc:	ldr	x0, [sp, #1944]
  427e00:	ldr	x0, [x0, #32]
  427e04:	b	427e0c <parse_token+0x6188>
  427e08:	mov	x0, #0x0                   	// #0
  427e0c:	str	x0, [sp, #1952]
  427e10:	ldr	x0, [sp, #1952]
  427e14:	cmp	x0, #0x0
  427e18:	b.eq	427e28 <parse_token+0x61a4>  // b.none
  427e1c:	ldr	x0, [sp, #1952]
  427e20:	ldr	x0, [x0, #8]
  427e24:	b	427e2c <parse_token+0x61a8>
  427e28:	mov	x0, #0x0                   	// #0
  427e2c:	str	x0, [sp, #1960]
  427e30:	ldr	x0, [sp, #1952]
  427e34:	cmp	x0, #0x0
  427e38:	b.eq	427e48 <parse_token+0x61c4>  // b.none
  427e3c:	ldr	x0, [sp, #1952]
  427e40:	ldr	x0, [x0]
  427e44:	b	427e4c <parse_token+0x61c8>
  427e48:	mov	x0, #0x0                   	// #0
  427e4c:	str	x0, [sp, #1968]
  427e50:	str	xzr, [sp, #840]
  427e54:	str	xzr, [sp, #1976]
  427e58:	mov	w0, #0x3                   	// #3
  427e5c:	str	w0, [sp, #376]
  427e60:	ldr	w0, [sp, #152]
  427e64:	str	w0, [sp, #380]
  427e68:	ldr	x0, [sp, #1976]
  427e6c:	cmp	x0, #0x0
  427e70:	b.eq	427eac <parse_token+0x6228>  // b.none
  427e74:	mov	w0, #0x1                   	// #1
  427e78:	bl	40be30 <log_get_max_level_realm@plt>
  427e7c:	mov	w1, w0
  427e80:	ldr	w0, [sp, #376]
  427e84:	cmp	w0, w1
  427e88:	cset	w0, le
  427e8c:	and	w0, w0, #0xff
  427e90:	and	x0, x0, #0xff
  427e94:	cmp	x0, #0x0
  427e98:	b.eq	427eac <parse_token+0x6228>  // b.none
  427e9c:	add	x0, sp, #0x348
  427ea0:	mov	x1, x0
  427ea4:	ldr	x0, [sp, #1976]
  427ea8:	bl	40aba0 <sd_device_get_sysname@plt>
  427eac:	adrp	x0, 454000 <__func__.10675+0xa0>
  427eb0:	add	x20, x0, #0xbb
  427eb4:	ldr	x0, [sp, #840]
  427eb8:	cmp	x0, #0x0
  427ebc:	b.eq	427ecc <parse_token+0x6248>  // b.none
  427ec0:	adrp	x0, 454000 <__func__.10675+0xa0>
  427ec4:	add	x19, x0, #0xd8
  427ec8:	b	427ed0 <parse_token+0x624c>
  427ecc:	mov	x19, #0x0                   	// #0
  427ed0:	ldr	x21, [sp, #840]
  427ed4:	ldr	x0, [sp, #1968]
  427ed8:	bl	41fb4c <strna>
  427edc:	mov	x2, x0
  427ee0:	ldr	x0, [sp, #1960]
  427ee4:	cmp	x0, #0x0
  427ee8:	b.eq	427ef8 <parse_token+0x6274>  // b.none
  427eec:	ldr	x0, [sp, #1960]
  427ef0:	ldr	w0, [x0, #8]
  427ef4:	b	427efc <parse_token+0x6278>
  427ef8:	mov	w0, #0x0                   	// #0
  427efc:	ldr	x1, [sp, #1896]
  427f00:	str	x1, [sp, #32]
  427f04:	str	w0, [sp, #24]
  427f08:	str	x2, [sp, #16]
  427f0c:	adrp	x0, 454000 <__func__.10675+0xa0>
  427f10:	add	x0, x0, #0x878
  427f14:	str	x0, [sp, #8]
  427f18:	str	xzr, [sp]
  427f1c:	mov	x7, #0x0                   	// #0
  427f20:	mov	x6, x21
  427f24:	mov	x5, x19
  427f28:	adrp	x0, 455000 <__func__.10675+0x10a0>
  427f2c:	add	x4, x0, #0x920
  427f30:	mov	w3, #0x341                 	// #833
  427f34:	mov	x2, x20
  427f38:	ldr	w1, [sp, #380]
  427f3c:	ldr	w0, [sp, #376]
  427f40:	bl	40b020 <log_object_internal@plt>
  427f44:	b	42a9c0 <parse_token+0x8d3c>
  427f48:	ldr	w0, [sp, #148]
  427f4c:	sxtw	x0, w0
  427f50:	mov	x4, x0
  427f54:	mov	x3, #0x0                   	// #0
  427f58:	ldr	w2, [sp, #116]
  427f5c:	mov	w1, #0x1e                  	// #30
  427f60:	ldr	x0, [sp, #848]
  427f64:	bl	420e88 <rule_line_add_token>
  427f68:	str	w0, [sp, #152]
  427f6c:	b	42a990 <parse_token+0x8d0c>
  427f70:	ldr	x0, [sp, #136]
  427f74:	str	x0, [sp, #1904]
  427f78:	ldr	x0, [sp, #1904]
  427f7c:	cmp	x0, #0x0
  427f80:	b.eq	427f90 <parse_token+0x630c>  // b.none
  427f84:	ldr	x0, [sp, #1904]
  427f88:	ldr	x0, [x0, #32]
  427f8c:	b	427f94 <parse_token+0x6310>
  427f90:	mov	x0, #0x0                   	// #0
  427f94:	str	x0, [sp, #1912]
  427f98:	ldr	x0, [sp, #1912]
  427f9c:	cmp	x0, #0x0
  427fa0:	b.eq	427fb0 <parse_token+0x632c>  // b.none
  427fa4:	ldr	x0, [sp, #1912]
  427fa8:	ldr	x0, [x0, #8]
  427fac:	b	427fb4 <parse_token+0x6330>
  427fb0:	mov	x0, #0x0                   	// #0
  427fb4:	str	x0, [sp, #1920]
  427fb8:	ldr	x0, [sp, #1912]
  427fbc:	cmp	x0, #0x0
  427fc0:	b.eq	427fd0 <parse_token+0x634c>  // b.none
  427fc4:	ldr	x0, [sp, #1912]
  427fc8:	ldr	x0, [x0]
  427fcc:	b	427fd4 <parse_token+0x6350>
  427fd0:	mov	x0, #0x0                   	// #0
  427fd4:	str	x0, [sp, #1928]
  427fd8:	str	xzr, [sp, #840]
  427fdc:	str	xzr, [sp, #1936]
  427fe0:	mov	w0, #0x4                   	// #4
  427fe4:	str	w0, [sp, #368]
  427fe8:	str	wzr, [sp, #372]
  427fec:	ldr	x0, [sp, #1936]
  427ff0:	cmp	x0, #0x0
  427ff4:	b.eq	428030 <parse_token+0x63ac>  // b.none
  427ff8:	mov	w0, #0x1                   	// #1
  427ffc:	bl	40be30 <log_get_max_level_realm@plt>
  428000:	mov	w1, w0
  428004:	ldr	w0, [sp, #368]
  428008:	cmp	w0, w1
  42800c:	cset	w0, le
  428010:	and	w0, w0, #0xff
  428014:	and	x0, x0, #0xff
  428018:	cmp	x0, #0x0
  42801c:	b.eq	428030 <parse_token+0x63ac>  // b.none
  428020:	add	x0, sp, #0x348
  428024:	mov	x1, x0
  428028:	ldr	x0, [sp, #1936]
  42802c:	bl	40aba0 <sd_device_get_sysname@plt>
  428030:	adrp	x0, 454000 <__func__.10675+0xa0>
  428034:	add	x20, x0, #0xbb
  428038:	ldr	x0, [sp, #840]
  42803c:	cmp	x0, #0x0
  428040:	b.eq	428050 <parse_token+0x63cc>  // b.none
  428044:	adrp	x0, 454000 <__func__.10675+0xa0>
  428048:	add	x19, x0, #0xd8
  42804c:	b	428054 <parse_token+0x63d0>
  428050:	mov	x19, #0x0                   	// #0
  428054:	ldr	x21, [sp, #840]
  428058:	ldr	x0, [sp, #1928]
  42805c:	bl	41fb4c <strna>
  428060:	mov	x2, x0
  428064:	ldr	x0, [sp, #1920]
  428068:	cmp	x0, #0x0
  42806c:	b.eq	42807c <parse_token+0x63f8>  // b.none
  428070:	ldr	x0, [sp, #1920]
  428074:	ldr	w0, [x0, #8]
  428078:	b	428080 <parse_token+0x63fc>
  42807c:	mov	w0, #0x0                   	// #0
  428080:	ldr	x1, [sp, #104]
  428084:	str	x1, [sp, #32]
  428088:	str	w0, [sp, #24]
  42808c:	str	x2, [sp, #16]
  428090:	adrp	x0, 454000 <__func__.10675+0xa0>
  428094:	add	x0, x0, #0x8a8
  428098:	str	x0, [sp, #8]
  42809c:	str	xzr, [sp]
  4280a0:	mov	x7, #0x0                   	// #0
  4280a4:	mov	x6, x21
  4280a8:	mov	x5, x19
  4280ac:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4280b0:	add	x4, x0, #0x920
  4280b4:	mov	w3, #0x344                 	// #836
  4280b8:	mov	x2, x20
  4280bc:	ldr	w1, [sp, #372]
  4280c0:	ldr	w0, [sp, #368]
  4280c4:	bl	40b020 <log_object_internal@plt>
  4280c8:	mov	w0, #0x0                   	// #0
  4280cc:	b	42a9c0 <parse_token+0x8d3c>
  4280d0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4280d4:	add	x1, x0, #0x8e0
  4280d8:	ldr	x0, [sp, #128]
  4280dc:	bl	40b710 <strcmp@plt>
  4280e0:	cmp	w0, #0x0
  4280e4:	b.ne	428918 <parse_token+0x6c94>  // b.any
  4280e8:	ldr	x0, [sp, #120]
  4280ec:	cmp	x0, #0x0
  4280f0:	b.eq	428264 <parse_token+0x65e0>  // b.none
  4280f4:	ldr	x0, [sp, #136]
  4280f8:	str	x0, [sp, #1816]
  4280fc:	ldr	x0, [sp, #1816]
  428100:	cmp	x0, #0x0
  428104:	b.eq	428114 <parse_token+0x6490>  // b.none
  428108:	ldr	x0, [sp, #1816]
  42810c:	ldr	x0, [x0, #32]
  428110:	b	428118 <parse_token+0x6494>
  428114:	mov	x0, #0x0                   	// #0
  428118:	str	x0, [sp, #1824]
  42811c:	ldr	x0, [sp, #1824]
  428120:	cmp	x0, #0x0
  428124:	b.eq	428134 <parse_token+0x64b0>  // b.none
  428128:	ldr	x0, [sp, #1824]
  42812c:	ldr	x0, [x0, #8]
  428130:	b	428138 <parse_token+0x64b4>
  428134:	mov	x0, #0x0                   	// #0
  428138:	str	x0, [sp, #1832]
  42813c:	ldr	x0, [sp, #1824]
  428140:	cmp	x0, #0x0
  428144:	b.eq	428154 <parse_token+0x64d0>  // b.none
  428148:	ldr	x0, [sp, #1824]
  42814c:	ldr	x0, [x0]
  428150:	b	428158 <parse_token+0x64d4>
  428154:	mov	x0, #0x0                   	// #0
  428158:	str	x0, [sp, #1840]
  42815c:	str	xzr, [sp, #840]
  428160:	str	xzr, [sp, #1848]
  428164:	mov	w0, #0x3                   	// #3
  428168:	str	w0, [sp, #352]
  42816c:	mov	w0, #0x16                  	// #22
  428170:	movk	w0, #0x4000, lsl #16
  428174:	str	w0, [sp, #356]
  428178:	ldr	x0, [sp, #1848]
  42817c:	cmp	x0, #0x0
  428180:	b.eq	4281bc <parse_token+0x6538>  // b.none
  428184:	mov	w0, #0x1                   	// #1
  428188:	bl	40be30 <log_get_max_level_realm@plt>
  42818c:	mov	w1, w0
  428190:	ldr	w0, [sp, #352]
  428194:	cmp	w0, w1
  428198:	cset	w0, le
  42819c:	and	w0, w0, #0xff
  4281a0:	and	x0, x0, #0xff
  4281a4:	cmp	x0, #0x0
  4281a8:	b.eq	4281bc <parse_token+0x6538>  // b.none
  4281ac:	add	x0, sp, #0x348
  4281b0:	mov	x1, x0
  4281b4:	ldr	x0, [sp, #1848]
  4281b8:	bl	40aba0 <sd_device_get_sysname@plt>
  4281bc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4281c0:	add	x20, x0, #0xbb
  4281c4:	ldr	x0, [sp, #840]
  4281c8:	cmp	x0, #0x0
  4281cc:	b.eq	4281dc <parse_token+0x6558>  // b.none
  4281d0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4281d4:	add	x19, x0, #0xd8
  4281d8:	b	4281e0 <parse_token+0x655c>
  4281dc:	mov	x19, #0x0                   	// #0
  4281e0:	ldr	x21, [sp, #840]
  4281e4:	ldr	x0, [sp, #1840]
  4281e8:	bl	41fb4c <strna>
  4281ec:	mov	x2, x0
  4281f0:	ldr	x0, [sp, #1832]
  4281f4:	cmp	x0, #0x0
  4281f8:	b.eq	428208 <parse_token+0x6584>  // b.none
  4281fc:	ldr	x0, [sp, #1832]
  428200:	ldr	w0, [x0, #8]
  428204:	b	42820c <parse_token+0x6588>
  428208:	mov	w0, #0x0                   	// #0
  42820c:	ldr	x1, [sp, #128]
  428210:	str	x1, [sp, #40]
  428214:	adrp	x1, 454000 <__func__.10675+0xa0>
  428218:	add	x1, x1, #0x278
  42821c:	str	x1, [sp, #32]
  428220:	str	w0, [sp, #24]
  428224:	str	x2, [sp, #16]
  428228:	adrp	x0, 454000 <__func__.10675+0xa0>
  42822c:	add	x0, x0, #0x288
  428230:	str	x0, [sp, #8]
  428234:	str	xzr, [sp]
  428238:	mov	x7, #0x0                   	// #0
  42823c:	mov	x6, x21
  428240:	mov	x5, x19
  428244:	adrp	x0, 455000 <__func__.10675+0x10a0>
  428248:	add	x4, x0, #0x920
  42824c:	mov	w3, #0x34b                 	// #843
  428250:	mov	x2, x20
  428254:	ldr	w1, [sp, #356]
  428258:	ldr	w0, [sp, #352]
  42825c:	bl	40b020 <log_object_internal@plt>
  428260:	b	42a9c0 <parse_token+0x8d3c>
  428264:	ldrb	w0, [sp, #147]
  428268:	cmp	w0, #0x0
  42826c:	b.ne	42827c <parse_token+0x65f8>  // b.any
  428270:	ldr	w0, [sp, #116]
  428274:	cmp	w0, #0x3
  428278:	b.ne	4283ec <parse_token+0x6768>  // b.any
  42827c:	ldr	x0, [sp, #136]
  428280:	str	x0, [sp, #1776]
  428284:	ldr	x0, [sp, #1776]
  428288:	cmp	x0, #0x0
  42828c:	b.eq	42829c <parse_token+0x6618>  // b.none
  428290:	ldr	x0, [sp, #1776]
  428294:	ldr	x0, [x0, #32]
  428298:	b	4282a0 <parse_token+0x661c>
  42829c:	mov	x0, #0x0                   	// #0
  4282a0:	str	x0, [sp, #1784]
  4282a4:	ldr	x0, [sp, #1784]
  4282a8:	cmp	x0, #0x0
  4282ac:	b.eq	4282bc <parse_token+0x6638>  // b.none
  4282b0:	ldr	x0, [sp, #1784]
  4282b4:	ldr	x0, [x0, #8]
  4282b8:	b	4282c0 <parse_token+0x663c>
  4282bc:	mov	x0, #0x0                   	// #0
  4282c0:	str	x0, [sp, #1792]
  4282c4:	ldr	x0, [sp, #1784]
  4282c8:	cmp	x0, #0x0
  4282cc:	b.eq	4282dc <parse_token+0x6658>  // b.none
  4282d0:	ldr	x0, [sp, #1784]
  4282d4:	ldr	x0, [x0]
  4282d8:	b	4282e0 <parse_token+0x665c>
  4282dc:	mov	x0, #0x0                   	// #0
  4282e0:	str	x0, [sp, #1800]
  4282e4:	str	xzr, [sp, #840]
  4282e8:	str	xzr, [sp, #1808]
  4282ec:	mov	w0, #0x3                   	// #3
  4282f0:	str	w0, [sp, #344]
  4282f4:	mov	w0, #0x16                  	// #22
  4282f8:	movk	w0, #0x4000, lsl #16
  4282fc:	str	w0, [sp, #348]
  428300:	ldr	x0, [sp, #1808]
  428304:	cmp	x0, #0x0
  428308:	b.eq	428344 <parse_token+0x66c0>  // b.none
  42830c:	mov	w0, #0x1                   	// #1
  428310:	bl	40be30 <log_get_max_level_realm@plt>
  428314:	mov	w1, w0
  428318:	ldr	w0, [sp, #344]
  42831c:	cmp	w0, w1
  428320:	cset	w0, le
  428324:	and	w0, w0, #0xff
  428328:	and	x0, x0, #0xff
  42832c:	cmp	x0, #0x0
  428330:	b.eq	428344 <parse_token+0x66c0>  // b.none
  428334:	add	x0, sp, #0x348
  428338:	mov	x1, x0
  42833c:	ldr	x0, [sp, #1808]
  428340:	bl	40aba0 <sd_device_get_sysname@plt>
  428344:	adrp	x0, 454000 <__func__.10675+0xa0>
  428348:	add	x20, x0, #0xbb
  42834c:	ldr	x0, [sp, #840]
  428350:	cmp	x0, #0x0
  428354:	b.eq	428364 <parse_token+0x66e0>  // b.none
  428358:	adrp	x0, 454000 <__func__.10675+0xa0>
  42835c:	add	x19, x0, #0xd8
  428360:	b	428368 <parse_token+0x66e4>
  428364:	mov	x19, #0x0                   	// #0
  428368:	ldr	x21, [sp, #840]
  42836c:	ldr	x0, [sp, #1800]
  428370:	bl	41fb4c <strna>
  428374:	mov	x2, x0
  428378:	ldr	x0, [sp, #1792]
  42837c:	cmp	x0, #0x0
  428380:	b.eq	428390 <parse_token+0x670c>  // b.none
  428384:	ldr	x0, [sp, #1792]
  428388:	ldr	w0, [x0, #8]
  42838c:	b	428394 <parse_token+0x6710>
  428390:	mov	w0, #0x0                   	// #0
  428394:	ldr	x1, [sp, #128]
  428398:	str	x1, [sp, #40]
  42839c:	adrp	x1, 454000 <__func__.10675+0xa0>
  4283a0:	add	x1, x1, #0x348
  4283a4:	str	x1, [sp, #32]
  4283a8:	str	w0, [sp, #24]
  4283ac:	str	x2, [sp, #16]
  4283b0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4283b4:	add	x0, x0, #0x288
  4283b8:	str	x0, [sp, #8]
  4283bc:	str	xzr, [sp]
  4283c0:	mov	x7, #0x0                   	// #0
  4283c4:	mov	x6, x21
  4283c8:	mov	x5, x19
  4283cc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4283d0:	add	x4, x0, #0x920
  4283d4:	mov	w3, #0x34d                 	// #845
  4283d8:	mov	x2, x20
  4283dc:	ldr	w1, [sp, #348]
  4283e0:	ldr	w0, [sp, #344]
  4283e4:	bl	40b020 <log_object_internal@plt>
  4283e8:	b	42a9c0 <parse_token+0x8d3c>
  4283ec:	ldr	w0, [sp, #116]
  4283f0:	cmp	w0, #0x2
  4283f4:	b.ne	428558 <parse_token+0x68d4>  // b.any
  4283f8:	ldr	x0, [sp, #136]
  4283fc:	str	x0, [sp, #1656]
  428400:	ldr	x0, [sp, #1656]
  428404:	cmp	x0, #0x0
  428408:	b.eq	428418 <parse_token+0x6794>  // b.none
  42840c:	ldr	x0, [sp, #1656]
  428410:	ldr	x0, [x0, #32]
  428414:	b	42841c <parse_token+0x6798>
  428418:	mov	x0, #0x0                   	// #0
  42841c:	str	x0, [sp, #1664]
  428420:	ldr	x0, [sp, #1664]
  428424:	cmp	x0, #0x0
  428428:	b.eq	428438 <parse_token+0x67b4>  // b.none
  42842c:	ldr	x0, [sp, #1664]
  428430:	ldr	x0, [x0, #8]
  428434:	b	42843c <parse_token+0x67b8>
  428438:	mov	x0, #0x0                   	// #0
  42843c:	str	x0, [sp, #1672]
  428440:	ldr	x0, [sp, #1664]
  428444:	cmp	x0, #0x0
  428448:	b.eq	428458 <parse_token+0x67d4>  // b.none
  42844c:	ldr	x0, [sp, #1664]
  428450:	ldr	x0, [x0]
  428454:	b	42845c <parse_token+0x67d8>
  428458:	mov	x0, #0x0                   	// #0
  42845c:	str	x0, [sp, #1680]
  428460:	str	xzr, [sp, #840]
  428464:	str	xzr, [sp, #1688]
  428468:	mov	w0, #0x4                   	// #4
  42846c:	str	w0, [sp, #320]
  428470:	str	wzr, [sp, #324]
  428474:	ldr	x0, [sp, #1688]
  428478:	cmp	x0, #0x0
  42847c:	b.eq	4284b8 <parse_token+0x6834>  // b.none
  428480:	mov	w0, #0x1                   	// #1
  428484:	bl	40be30 <log_get_max_level_realm@plt>
  428488:	mov	w1, w0
  42848c:	ldr	w0, [sp, #320]
  428490:	cmp	w0, w1
  428494:	cset	w0, le
  428498:	and	w0, w0, #0xff
  42849c:	and	x0, x0, #0xff
  4284a0:	cmp	x0, #0x0
  4284a4:	b.eq	4284b8 <parse_token+0x6834>  // b.none
  4284a8:	add	x0, sp, #0x348
  4284ac:	mov	x1, x0
  4284b0:	ldr	x0, [sp, #1688]
  4284b4:	bl	40aba0 <sd_device_get_sysname@plt>
  4284b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4284bc:	add	x20, x0, #0xbb
  4284c0:	ldr	x0, [sp, #840]
  4284c4:	cmp	x0, #0x0
  4284c8:	b.eq	4284d8 <parse_token+0x6854>  // b.none
  4284cc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4284d0:	add	x19, x0, #0xd8
  4284d4:	b	4284dc <parse_token+0x6858>
  4284d8:	mov	x19, #0x0                   	// #0
  4284dc:	ldr	x21, [sp, #840]
  4284e0:	ldr	x0, [sp, #1680]
  4284e4:	bl	41fb4c <strna>
  4284e8:	mov	x2, x0
  4284ec:	ldr	x0, [sp, #1672]
  4284f0:	cmp	x0, #0x0
  4284f4:	b.eq	428504 <parse_token+0x6880>  // b.none
  4284f8:	ldr	x0, [sp, #1672]
  4284fc:	ldr	w0, [x0, #8]
  428500:	b	428508 <parse_token+0x6884>
  428504:	mov	w0, #0x0                   	// #0
  428508:	ldr	x1, [sp, #128]
  42850c:	str	x1, [sp, #32]
  428510:	str	w0, [sp, #24]
  428514:	str	x2, [sp, #16]
  428518:	adrp	x0, 454000 <__func__.10675+0xa0>
  42851c:	add	x0, x0, #0x8e8
  428520:	str	x0, [sp, #8]
  428524:	str	xzr, [sp]
  428528:	mov	x7, #0x0                   	// #0
  42852c:	mov	x6, x21
  428530:	mov	x5, x19
  428534:	adrp	x0, 455000 <__func__.10675+0x10a0>
  428538:	add	x4, x0, #0x920
  42853c:	mov	w3, #0x34f                 	// #847
  428540:	mov	x2, x20
  428544:	ldr	w1, [sp, #324]
  428548:	ldr	w0, [sp, #320]
  42854c:	bl	40b020 <log_object_internal@plt>
  428550:	mov	w0, #0x4                   	// #4
  428554:	str	w0, [sp, #116]
  428558:	add	x0, sp, #0x94
  42855c:	mov	x1, x0
  428560:	ldr	x0, [sp, #104]
  428564:	bl	40b6b0 <parse_uid@plt>
  428568:	cmp	w0, #0x0
  42856c:	b.lt	42859c <parse_token+0x6918>  // b.tstop
  428570:	ldr	w0, [sp, #148]
  428574:	mov	w0, w0
  428578:	add	x0, x0, #0x1
  42857c:	mov	x4, x0
  428580:	mov	x3, #0x0                   	// #0
  428584:	ldr	w2, [sp, #116]
  428588:	mov	w1, #0x22                  	// #34
  42858c:	ldr	x0, [sp, #848]
  428590:	bl	420e88 <rule_line_add_token>
  428594:	str	w0, [sp, #152]
  428598:	b	42a990 <parse_token+0x8d0c>
  42859c:	ldr	x0, [sp, #136]
  4285a0:	ldr	w0, [x0, #8]
  4285a4:	cmp	w0, #0x2
  4285a8:	b.ne	42876c <parse_token+0x6ae8>  // b.any
  4285ac:	ldr	x0, [sp, #104]
  4285b0:	bl	420a90 <rule_get_substitution_type>
  4285b4:	cmp	w0, #0x0
  4285b8:	b.ne	42876c <parse_token+0x6ae8>  // b.any
  4285bc:	add	x0, sp, #0x94
  4285c0:	mov	x2, x0
  4285c4:	ldr	x1, [sp, #104]
  4285c8:	ldr	x0, [sp, #136]
  4285cc:	bl	420634 <rule_resolve_user>
  4285d0:	str	w0, [sp, #152]
  4285d4:	ldr	w0, [sp, #152]
  4285d8:	cmp	w0, #0x0
  4285dc:	b.ge	428740 <parse_token+0x6abc>  // b.tcont
  4285e0:	ldr	x0, [sp, #136]
  4285e4:	str	x0, [sp, #1696]
  4285e8:	ldr	x0, [sp, #1696]
  4285ec:	cmp	x0, #0x0
  4285f0:	b.eq	428600 <parse_token+0x697c>  // b.none
  4285f4:	ldr	x0, [sp, #1696]
  4285f8:	ldr	x0, [x0, #32]
  4285fc:	b	428604 <parse_token+0x6980>
  428600:	mov	x0, #0x0                   	// #0
  428604:	str	x0, [sp, #1704]
  428608:	ldr	x0, [sp, #1704]
  42860c:	cmp	x0, #0x0
  428610:	b.eq	428620 <parse_token+0x699c>  // b.none
  428614:	ldr	x0, [sp, #1704]
  428618:	ldr	x0, [x0, #8]
  42861c:	b	428624 <parse_token+0x69a0>
  428620:	mov	x0, #0x0                   	// #0
  428624:	str	x0, [sp, #1712]
  428628:	ldr	x0, [sp, #1704]
  42862c:	cmp	x0, #0x0
  428630:	b.eq	428640 <parse_token+0x69bc>  // b.none
  428634:	ldr	x0, [sp, #1704]
  428638:	ldr	x0, [x0]
  42863c:	b	428644 <parse_token+0x69c0>
  428640:	mov	x0, #0x0                   	// #0
  428644:	str	x0, [sp, #1720]
  428648:	str	xzr, [sp, #840]
  42864c:	str	xzr, [sp, #1728]
  428650:	mov	w0, #0x3                   	// #3
  428654:	str	w0, [sp, #328]
  428658:	ldr	w0, [sp, #152]
  42865c:	str	w0, [sp, #332]
  428660:	ldr	x0, [sp, #1728]
  428664:	cmp	x0, #0x0
  428668:	b.eq	4286a4 <parse_token+0x6a20>  // b.none
  42866c:	mov	w0, #0x1                   	// #1
  428670:	bl	40be30 <log_get_max_level_realm@plt>
  428674:	mov	w1, w0
  428678:	ldr	w0, [sp, #328]
  42867c:	cmp	w0, w1
  428680:	cset	w0, le
  428684:	and	w0, w0, #0xff
  428688:	and	x0, x0, #0xff
  42868c:	cmp	x0, #0x0
  428690:	b.eq	4286a4 <parse_token+0x6a20>  // b.none
  428694:	add	x0, sp, #0x348
  428698:	mov	x1, x0
  42869c:	ldr	x0, [sp, #1728]
  4286a0:	bl	40aba0 <sd_device_get_sysname@plt>
  4286a4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4286a8:	add	x20, x0, #0xbb
  4286ac:	ldr	x0, [sp, #840]
  4286b0:	cmp	x0, #0x0
  4286b4:	b.eq	4286c4 <parse_token+0x6a40>  // b.none
  4286b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4286bc:	add	x19, x0, #0xd8
  4286c0:	b	4286c8 <parse_token+0x6a44>
  4286c4:	mov	x19, #0x0                   	// #0
  4286c8:	ldr	x21, [sp, #840]
  4286cc:	ldr	x0, [sp, #1720]
  4286d0:	bl	41fb4c <strna>
  4286d4:	mov	x2, x0
  4286d8:	ldr	x0, [sp, #1712]
  4286dc:	cmp	x0, #0x0
  4286e0:	b.eq	4286f0 <parse_token+0x6a6c>  // b.none
  4286e4:	ldr	x0, [sp, #1712]
  4286e8:	ldr	w0, [x0, #8]
  4286ec:	b	4286f4 <parse_token+0x6a70>
  4286f0:	mov	w0, #0x0                   	// #0
  4286f4:	ldr	x1, [sp, #104]
  4286f8:	str	x1, [sp, #32]
  4286fc:	str	w0, [sp, #24]
  428700:	str	x2, [sp, #16]
  428704:	adrp	x0, 454000 <__func__.10675+0xa0>
  428708:	add	x0, x0, #0x938
  42870c:	str	x0, [sp, #8]
  428710:	str	xzr, [sp]
  428714:	mov	x7, #0x0                   	// #0
  428718:	mov	x6, x21
  42871c:	mov	x5, x19
  428720:	adrp	x0, 455000 <__func__.10675+0x10a0>
  428724:	add	x4, x0, #0x920
  428728:	mov	w3, #0x359                 	// #857
  42872c:	mov	x2, x20
  428730:	ldr	w1, [sp, #332]
  428734:	ldr	w0, [sp, #328]
  428738:	bl	40b020 <log_object_internal@plt>
  42873c:	b	42a9c0 <parse_token+0x8d3c>
  428740:	ldr	w0, [sp, #148]
  428744:	mov	w0, w0
  428748:	add	x0, x0, #0x1
  42874c:	mov	x4, x0
  428750:	mov	x3, #0x0                   	// #0
  428754:	ldr	w2, [sp, #116]
  428758:	mov	w1, #0x22                  	// #34
  42875c:	ldr	x0, [sp, #848]
  428760:	bl	420e88 <rule_line_add_token>
  428764:	str	w0, [sp, #152]
  428768:	b	42a990 <parse_token+0x8d0c>
  42876c:	ldr	x0, [sp, #136]
  428770:	ldr	w0, [x0, #8]
  428774:	cmp	w0, #0x0
  428778:	b.eq	4287b0 <parse_token+0x6b2c>  // b.none
  42877c:	mov	w3, #0x1                   	// #1
  428780:	ldr	x2, [sp, #104]
  428784:	ldr	x1, [sp, #128]
  428788:	ldr	x0, [sp, #136]
  42878c:	bl	421544 <check_value_format_and_warn>
  428790:	mov	x4, #0x0                   	// #0
  428794:	ldr	x3, [sp, #104]
  428798:	ldr	w2, [sp, #116]
  42879c:	mov	w1, #0x1f                  	// #31
  4287a0:	ldr	x0, [sp, #848]
  4287a4:	bl	420e88 <rule_line_add_token>
  4287a8:	str	w0, [sp, #152]
  4287ac:	b	42a990 <parse_token+0x8d0c>
  4287b0:	ldr	x0, [sp, #136]
  4287b4:	str	x0, [sp, #1736]
  4287b8:	ldr	x0, [sp, #1736]
  4287bc:	cmp	x0, #0x0
  4287c0:	b.eq	4287d0 <parse_token+0x6b4c>  // b.none
  4287c4:	ldr	x0, [sp, #1736]
  4287c8:	ldr	x0, [x0, #32]
  4287cc:	b	4287d4 <parse_token+0x6b50>
  4287d0:	mov	x0, #0x0                   	// #0
  4287d4:	str	x0, [sp, #1744]
  4287d8:	ldr	x0, [sp, #1744]
  4287dc:	cmp	x0, #0x0
  4287e0:	b.eq	4287f0 <parse_token+0x6b6c>  // b.none
  4287e4:	ldr	x0, [sp, #1744]
  4287e8:	ldr	x0, [x0, #8]
  4287ec:	b	4287f4 <parse_token+0x6b70>
  4287f0:	mov	x0, #0x0                   	// #0
  4287f4:	str	x0, [sp, #1752]
  4287f8:	ldr	x0, [sp, #1744]
  4287fc:	cmp	x0, #0x0
  428800:	b.eq	428810 <parse_token+0x6b8c>  // b.none
  428804:	ldr	x0, [sp, #1744]
  428808:	ldr	x0, [x0]
  42880c:	b	428814 <parse_token+0x6b90>
  428810:	mov	x0, #0x0                   	// #0
  428814:	str	x0, [sp, #1760]
  428818:	str	xzr, [sp, #840]
  42881c:	str	xzr, [sp, #1768]
  428820:	mov	w0, #0x7                   	// #7
  428824:	str	w0, [sp, #336]
  428828:	str	wzr, [sp, #340]
  42882c:	ldr	x0, [sp, #1768]
  428830:	cmp	x0, #0x0
  428834:	b.eq	428870 <parse_token+0x6bec>  // b.none
  428838:	mov	w0, #0x1                   	// #1
  42883c:	bl	40be30 <log_get_max_level_realm@plt>
  428840:	mov	w1, w0
  428844:	ldr	w0, [sp, #336]
  428848:	cmp	w0, w1
  42884c:	cset	w0, le
  428850:	and	w0, w0, #0xff
  428854:	and	x0, x0, #0xff
  428858:	cmp	x0, #0x0
  42885c:	b.eq	428870 <parse_token+0x6bec>  // b.none
  428860:	add	x0, sp, #0x348
  428864:	mov	x1, x0
  428868:	ldr	x0, [sp, #1768]
  42886c:	bl	40aba0 <sd_device_get_sysname@plt>
  428870:	adrp	x0, 454000 <__func__.10675+0xa0>
  428874:	add	x20, x0, #0xbb
  428878:	ldr	x0, [sp, #840]
  42887c:	cmp	x0, #0x0
  428880:	b.eq	428890 <parse_token+0x6c0c>  // b.none
  428884:	adrp	x0, 454000 <__func__.10675+0xa0>
  428888:	add	x19, x0, #0xd8
  42888c:	b	428894 <parse_token+0x6c10>
  428890:	mov	x19, #0x0                   	// #0
  428894:	ldr	x21, [sp, #840]
  428898:	ldr	x0, [sp, #1760]
  42889c:	bl	41fb4c <strna>
  4288a0:	mov	x2, x0
  4288a4:	ldr	x0, [sp, #1752]
  4288a8:	cmp	x0, #0x0
  4288ac:	b.eq	4288bc <parse_token+0x6c38>  // b.none
  4288b0:	ldr	x0, [sp, #1752]
  4288b4:	ldr	w0, [x0, #8]
  4288b8:	b	4288c0 <parse_token+0x6c3c>
  4288bc:	mov	w0, #0x0                   	// #0
  4288c0:	ldr	x1, [sp, #104]
  4288c4:	str	x1, [sp, #40]
  4288c8:	ldr	x1, [sp, #128]
  4288cc:	str	x1, [sp, #32]
  4288d0:	str	w0, [sp, #24]
  4288d4:	str	x2, [sp, #16]
  4288d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4288dc:	add	x0, x0, #0x968
  4288e0:	str	x0, [sp, #8]
  4288e4:	str	xzr, [sp]
  4288e8:	mov	x7, #0x0                   	// #0
  4288ec:	mov	x6, x21
  4288f0:	mov	x5, x19
  4288f4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4288f8:	add	x4, x0, #0x920
  4288fc:	mov	w3, #0x360                 	// #864
  428900:	mov	x2, x20
  428904:	ldr	w1, [sp, #340]
  428908:	ldr	w0, [sp, #336]
  42890c:	bl	40b020 <log_object_internal@plt>
  428910:	mov	w0, #0x0                   	// #0
  428914:	b	42a9c0 <parse_token+0x8d3c>
  428918:	adrp	x0, 454000 <__func__.10675+0xa0>
  42891c:	add	x1, x0, #0x9a0
  428920:	ldr	x0, [sp, #128]
  428924:	bl	40b710 <strcmp@plt>
  428928:	cmp	w0, #0x0
  42892c:	b.ne	429160 <parse_token+0x74dc>  // b.any
  428930:	ldr	x0, [sp, #120]
  428934:	cmp	x0, #0x0
  428938:	b.eq	428aac <parse_token+0x6e28>  // b.none
  42893c:	ldr	x0, [sp, #136]
  428940:	str	x0, [sp, #1616]
  428944:	ldr	x0, [sp, #1616]
  428948:	cmp	x0, #0x0
  42894c:	b.eq	42895c <parse_token+0x6cd8>  // b.none
  428950:	ldr	x0, [sp, #1616]
  428954:	ldr	x0, [x0, #32]
  428958:	b	428960 <parse_token+0x6cdc>
  42895c:	mov	x0, #0x0                   	// #0
  428960:	str	x0, [sp, #1624]
  428964:	ldr	x0, [sp, #1624]
  428968:	cmp	x0, #0x0
  42896c:	b.eq	42897c <parse_token+0x6cf8>  // b.none
  428970:	ldr	x0, [sp, #1624]
  428974:	ldr	x0, [x0, #8]
  428978:	b	428980 <parse_token+0x6cfc>
  42897c:	mov	x0, #0x0                   	// #0
  428980:	str	x0, [sp, #1632]
  428984:	ldr	x0, [sp, #1624]
  428988:	cmp	x0, #0x0
  42898c:	b.eq	42899c <parse_token+0x6d18>  // b.none
  428990:	ldr	x0, [sp, #1624]
  428994:	ldr	x0, [x0]
  428998:	b	4289a0 <parse_token+0x6d1c>
  42899c:	mov	x0, #0x0                   	// #0
  4289a0:	str	x0, [sp, #1640]
  4289a4:	str	xzr, [sp, #840]
  4289a8:	str	xzr, [sp, #1648]
  4289ac:	mov	w0, #0x3                   	// #3
  4289b0:	str	w0, [sp, #312]
  4289b4:	mov	w0, #0x16                  	// #22
  4289b8:	movk	w0, #0x4000, lsl #16
  4289bc:	str	w0, [sp, #316]
  4289c0:	ldr	x0, [sp, #1648]
  4289c4:	cmp	x0, #0x0
  4289c8:	b.eq	428a04 <parse_token+0x6d80>  // b.none
  4289cc:	mov	w0, #0x1                   	// #1
  4289d0:	bl	40be30 <log_get_max_level_realm@plt>
  4289d4:	mov	w1, w0
  4289d8:	ldr	w0, [sp, #312]
  4289dc:	cmp	w0, w1
  4289e0:	cset	w0, le
  4289e4:	and	w0, w0, #0xff
  4289e8:	and	x0, x0, #0xff
  4289ec:	cmp	x0, #0x0
  4289f0:	b.eq	428a04 <parse_token+0x6d80>  // b.none
  4289f4:	add	x0, sp, #0x348
  4289f8:	mov	x1, x0
  4289fc:	ldr	x0, [sp, #1648]
  428a00:	bl	40aba0 <sd_device_get_sysname@plt>
  428a04:	adrp	x0, 454000 <__func__.10675+0xa0>
  428a08:	add	x20, x0, #0xbb
  428a0c:	ldr	x0, [sp, #840]
  428a10:	cmp	x0, #0x0
  428a14:	b.eq	428a24 <parse_token+0x6da0>  // b.none
  428a18:	adrp	x0, 454000 <__func__.10675+0xa0>
  428a1c:	add	x19, x0, #0xd8
  428a20:	b	428a28 <parse_token+0x6da4>
  428a24:	mov	x19, #0x0                   	// #0
  428a28:	ldr	x21, [sp, #840]
  428a2c:	ldr	x0, [sp, #1640]
  428a30:	bl	41fb4c <strna>
  428a34:	mov	x2, x0
  428a38:	ldr	x0, [sp, #1632]
  428a3c:	cmp	x0, #0x0
  428a40:	b.eq	428a50 <parse_token+0x6dcc>  // b.none
  428a44:	ldr	x0, [sp, #1632]
  428a48:	ldr	w0, [x0, #8]
  428a4c:	b	428a54 <parse_token+0x6dd0>
  428a50:	mov	w0, #0x0                   	// #0
  428a54:	ldr	x1, [sp, #128]
  428a58:	str	x1, [sp, #40]
  428a5c:	adrp	x1, 454000 <__func__.10675+0xa0>
  428a60:	add	x1, x1, #0x278
  428a64:	str	x1, [sp, #32]
  428a68:	str	w0, [sp, #24]
  428a6c:	str	x2, [sp, #16]
  428a70:	adrp	x0, 454000 <__func__.10675+0xa0>
  428a74:	add	x0, x0, #0x288
  428a78:	str	x0, [sp, #8]
  428a7c:	str	xzr, [sp]
  428a80:	mov	x7, #0x0                   	// #0
  428a84:	mov	x6, x21
  428a88:	mov	x5, x19
  428a8c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  428a90:	add	x4, x0, #0x920
  428a94:	mov	w3, #0x367                 	// #871
  428a98:	mov	x2, x20
  428a9c:	ldr	w1, [sp, #316]
  428aa0:	ldr	w0, [sp, #312]
  428aa4:	bl	40b020 <log_object_internal@plt>
  428aa8:	b	42a9c0 <parse_token+0x8d3c>
  428aac:	ldrb	w0, [sp, #147]
  428ab0:	cmp	w0, #0x0
  428ab4:	b.ne	428ac4 <parse_token+0x6e40>  // b.any
  428ab8:	ldr	w0, [sp, #116]
  428abc:	cmp	w0, #0x3
  428ac0:	b.ne	428c34 <parse_token+0x6fb0>  // b.any
  428ac4:	ldr	x0, [sp, #136]
  428ac8:	str	x0, [sp, #1576]
  428acc:	ldr	x0, [sp, #1576]
  428ad0:	cmp	x0, #0x0
  428ad4:	b.eq	428ae4 <parse_token+0x6e60>  // b.none
  428ad8:	ldr	x0, [sp, #1576]
  428adc:	ldr	x0, [x0, #32]
  428ae0:	b	428ae8 <parse_token+0x6e64>
  428ae4:	mov	x0, #0x0                   	// #0
  428ae8:	str	x0, [sp, #1584]
  428aec:	ldr	x0, [sp, #1584]
  428af0:	cmp	x0, #0x0
  428af4:	b.eq	428b04 <parse_token+0x6e80>  // b.none
  428af8:	ldr	x0, [sp, #1584]
  428afc:	ldr	x0, [x0, #8]
  428b00:	b	428b08 <parse_token+0x6e84>
  428b04:	mov	x0, #0x0                   	// #0
  428b08:	str	x0, [sp, #1592]
  428b0c:	ldr	x0, [sp, #1584]
  428b10:	cmp	x0, #0x0
  428b14:	b.eq	428b24 <parse_token+0x6ea0>  // b.none
  428b18:	ldr	x0, [sp, #1584]
  428b1c:	ldr	x0, [x0]
  428b20:	b	428b28 <parse_token+0x6ea4>
  428b24:	mov	x0, #0x0                   	// #0
  428b28:	str	x0, [sp, #1600]
  428b2c:	str	xzr, [sp, #840]
  428b30:	str	xzr, [sp, #1608]
  428b34:	mov	w0, #0x3                   	// #3
  428b38:	str	w0, [sp, #304]
  428b3c:	mov	w0, #0x16                  	// #22
  428b40:	movk	w0, #0x4000, lsl #16
  428b44:	str	w0, [sp, #308]
  428b48:	ldr	x0, [sp, #1608]
  428b4c:	cmp	x0, #0x0
  428b50:	b.eq	428b8c <parse_token+0x6f08>  // b.none
  428b54:	mov	w0, #0x1                   	// #1
  428b58:	bl	40be30 <log_get_max_level_realm@plt>
  428b5c:	mov	w1, w0
  428b60:	ldr	w0, [sp, #304]
  428b64:	cmp	w0, w1
  428b68:	cset	w0, le
  428b6c:	and	w0, w0, #0xff
  428b70:	and	x0, x0, #0xff
  428b74:	cmp	x0, #0x0
  428b78:	b.eq	428b8c <parse_token+0x6f08>  // b.none
  428b7c:	add	x0, sp, #0x348
  428b80:	mov	x1, x0
  428b84:	ldr	x0, [sp, #1608]
  428b88:	bl	40aba0 <sd_device_get_sysname@plt>
  428b8c:	adrp	x0, 454000 <__func__.10675+0xa0>
  428b90:	add	x20, x0, #0xbb
  428b94:	ldr	x0, [sp, #840]
  428b98:	cmp	x0, #0x0
  428b9c:	b.eq	428bac <parse_token+0x6f28>  // b.none
  428ba0:	adrp	x0, 454000 <__func__.10675+0xa0>
  428ba4:	add	x19, x0, #0xd8
  428ba8:	b	428bb0 <parse_token+0x6f2c>
  428bac:	mov	x19, #0x0                   	// #0
  428bb0:	ldr	x21, [sp, #840]
  428bb4:	ldr	x0, [sp, #1600]
  428bb8:	bl	41fb4c <strna>
  428bbc:	mov	x2, x0
  428bc0:	ldr	x0, [sp, #1592]
  428bc4:	cmp	x0, #0x0
  428bc8:	b.eq	428bd8 <parse_token+0x6f54>  // b.none
  428bcc:	ldr	x0, [sp, #1592]
  428bd0:	ldr	w0, [x0, #8]
  428bd4:	b	428bdc <parse_token+0x6f58>
  428bd8:	mov	w0, #0x0                   	// #0
  428bdc:	ldr	x1, [sp, #128]
  428be0:	str	x1, [sp, #40]
  428be4:	adrp	x1, 454000 <__func__.10675+0xa0>
  428be8:	add	x1, x1, #0x348
  428bec:	str	x1, [sp, #32]
  428bf0:	str	w0, [sp, #24]
  428bf4:	str	x2, [sp, #16]
  428bf8:	adrp	x0, 454000 <__func__.10675+0xa0>
  428bfc:	add	x0, x0, #0x288
  428c00:	str	x0, [sp, #8]
  428c04:	str	xzr, [sp]
  428c08:	mov	x7, #0x0                   	// #0
  428c0c:	mov	x6, x21
  428c10:	mov	x5, x19
  428c14:	adrp	x0, 455000 <__func__.10675+0x10a0>
  428c18:	add	x4, x0, #0x920
  428c1c:	mov	w3, #0x369                 	// #873
  428c20:	mov	x2, x20
  428c24:	ldr	w1, [sp, #308]
  428c28:	ldr	w0, [sp, #304]
  428c2c:	bl	40b020 <log_object_internal@plt>
  428c30:	b	42a9c0 <parse_token+0x8d3c>
  428c34:	ldr	w0, [sp, #116]
  428c38:	cmp	w0, #0x2
  428c3c:	b.ne	428da0 <parse_token+0x711c>  // b.any
  428c40:	ldr	x0, [sp, #136]
  428c44:	str	x0, [sp, #1456]
  428c48:	ldr	x0, [sp, #1456]
  428c4c:	cmp	x0, #0x0
  428c50:	b.eq	428c60 <parse_token+0x6fdc>  // b.none
  428c54:	ldr	x0, [sp, #1456]
  428c58:	ldr	x0, [x0, #32]
  428c5c:	b	428c64 <parse_token+0x6fe0>
  428c60:	mov	x0, #0x0                   	// #0
  428c64:	str	x0, [sp, #1464]
  428c68:	ldr	x0, [sp, #1464]
  428c6c:	cmp	x0, #0x0
  428c70:	b.eq	428c80 <parse_token+0x6ffc>  // b.none
  428c74:	ldr	x0, [sp, #1464]
  428c78:	ldr	x0, [x0, #8]
  428c7c:	b	428c84 <parse_token+0x7000>
  428c80:	mov	x0, #0x0                   	// #0
  428c84:	str	x0, [sp, #1472]
  428c88:	ldr	x0, [sp, #1464]
  428c8c:	cmp	x0, #0x0
  428c90:	b.eq	428ca0 <parse_token+0x701c>  // b.none
  428c94:	ldr	x0, [sp, #1464]
  428c98:	ldr	x0, [x0]
  428c9c:	b	428ca4 <parse_token+0x7020>
  428ca0:	mov	x0, #0x0                   	// #0
  428ca4:	str	x0, [sp, #1480]
  428ca8:	str	xzr, [sp, #840]
  428cac:	str	xzr, [sp, #1488]
  428cb0:	mov	w0, #0x4                   	// #4
  428cb4:	str	w0, [sp, #280]
  428cb8:	str	wzr, [sp, #284]
  428cbc:	ldr	x0, [sp, #1488]
  428cc0:	cmp	x0, #0x0
  428cc4:	b.eq	428d00 <parse_token+0x707c>  // b.none
  428cc8:	mov	w0, #0x1                   	// #1
  428ccc:	bl	40be30 <log_get_max_level_realm@plt>
  428cd0:	mov	w1, w0
  428cd4:	ldr	w0, [sp, #280]
  428cd8:	cmp	w0, w1
  428cdc:	cset	w0, le
  428ce0:	and	w0, w0, #0xff
  428ce4:	and	x0, x0, #0xff
  428ce8:	cmp	x0, #0x0
  428cec:	b.eq	428d00 <parse_token+0x707c>  // b.none
  428cf0:	add	x0, sp, #0x348
  428cf4:	mov	x1, x0
  428cf8:	ldr	x0, [sp, #1488]
  428cfc:	bl	40aba0 <sd_device_get_sysname@plt>
  428d00:	adrp	x0, 454000 <__func__.10675+0xa0>
  428d04:	add	x20, x0, #0xbb
  428d08:	ldr	x0, [sp, #840]
  428d0c:	cmp	x0, #0x0
  428d10:	b.eq	428d20 <parse_token+0x709c>  // b.none
  428d14:	adrp	x0, 454000 <__func__.10675+0xa0>
  428d18:	add	x19, x0, #0xd8
  428d1c:	b	428d24 <parse_token+0x70a0>
  428d20:	mov	x19, #0x0                   	// #0
  428d24:	ldr	x21, [sp, #840]
  428d28:	ldr	x0, [sp, #1480]
  428d2c:	bl	41fb4c <strna>
  428d30:	mov	x2, x0
  428d34:	ldr	x0, [sp, #1472]
  428d38:	cmp	x0, #0x0
  428d3c:	b.eq	428d4c <parse_token+0x70c8>  // b.none
  428d40:	ldr	x0, [sp, #1472]
  428d44:	ldr	w0, [x0, #8]
  428d48:	b	428d50 <parse_token+0x70cc>
  428d4c:	mov	w0, #0x0                   	// #0
  428d50:	ldr	x1, [sp, #128]
  428d54:	str	x1, [sp, #32]
  428d58:	str	w0, [sp, #24]
  428d5c:	str	x2, [sp, #16]
  428d60:	adrp	x0, 454000 <__func__.10675+0xa0>
  428d64:	add	x0, x0, #0x8e8
  428d68:	str	x0, [sp, #8]
  428d6c:	str	xzr, [sp]
  428d70:	mov	x7, #0x0                   	// #0
  428d74:	mov	x6, x21
  428d78:	mov	x5, x19
  428d7c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  428d80:	add	x4, x0, #0x920
  428d84:	mov	w3, #0x36b                 	// #875
  428d88:	mov	x2, x20
  428d8c:	ldr	w1, [sp, #284]
  428d90:	ldr	w0, [sp, #280]
  428d94:	bl	40b020 <log_object_internal@plt>
  428d98:	mov	w0, #0x4                   	// #4
  428d9c:	str	w0, [sp, #116]
  428da0:	add	x0, sp, #0x94
  428da4:	mov	x1, x0
  428da8:	ldr	x0, [sp, #104]
  428dac:	bl	41ff0c <parse_gid>
  428db0:	cmp	w0, #0x0
  428db4:	b.lt	428de4 <parse_token+0x7160>  // b.tstop
  428db8:	ldr	w0, [sp, #148]
  428dbc:	mov	w0, w0
  428dc0:	add	x0, x0, #0x1
  428dc4:	mov	x4, x0
  428dc8:	mov	x3, #0x0                   	// #0
  428dcc:	ldr	w2, [sp, #116]
  428dd0:	mov	w1, #0x23                  	// #35
  428dd4:	ldr	x0, [sp, #848]
  428dd8:	bl	420e88 <rule_line_add_token>
  428ddc:	str	w0, [sp, #152]
  428de0:	b	42a990 <parse_token+0x8d0c>
  428de4:	ldr	x0, [sp, #136]
  428de8:	ldr	w0, [x0, #8]
  428dec:	cmp	w0, #0x2
  428df0:	b.ne	428fb4 <parse_token+0x7330>  // b.any
  428df4:	ldr	x0, [sp, #104]
  428df8:	bl	420a90 <rule_get_substitution_type>
  428dfc:	cmp	w0, #0x0
  428e00:	b.ne	428fb4 <parse_token+0x7330>  // b.any
  428e04:	add	x0, sp, #0x94
  428e08:	mov	x2, x0
  428e0c:	ldr	x1, [sp, #104]
  428e10:	ldr	x0, [sp, #136]
  428e14:	bl	420868 <rule_resolve_group>
  428e18:	str	w0, [sp, #152]
  428e1c:	ldr	w0, [sp, #152]
  428e20:	cmp	w0, #0x0
  428e24:	b.ge	428f88 <parse_token+0x7304>  // b.tcont
  428e28:	ldr	x0, [sp, #136]
  428e2c:	str	x0, [sp, #1496]
  428e30:	ldr	x0, [sp, #1496]
  428e34:	cmp	x0, #0x0
  428e38:	b.eq	428e48 <parse_token+0x71c4>  // b.none
  428e3c:	ldr	x0, [sp, #1496]
  428e40:	ldr	x0, [x0, #32]
  428e44:	b	428e4c <parse_token+0x71c8>
  428e48:	mov	x0, #0x0                   	// #0
  428e4c:	str	x0, [sp, #1504]
  428e50:	ldr	x0, [sp, #1504]
  428e54:	cmp	x0, #0x0
  428e58:	b.eq	428e68 <parse_token+0x71e4>  // b.none
  428e5c:	ldr	x0, [sp, #1504]
  428e60:	ldr	x0, [x0, #8]
  428e64:	b	428e6c <parse_token+0x71e8>
  428e68:	mov	x0, #0x0                   	// #0
  428e6c:	str	x0, [sp, #1512]
  428e70:	ldr	x0, [sp, #1504]
  428e74:	cmp	x0, #0x0
  428e78:	b.eq	428e88 <parse_token+0x7204>  // b.none
  428e7c:	ldr	x0, [sp, #1504]
  428e80:	ldr	x0, [x0]
  428e84:	b	428e8c <parse_token+0x7208>
  428e88:	mov	x0, #0x0                   	// #0
  428e8c:	str	x0, [sp, #1520]
  428e90:	str	xzr, [sp, #840]
  428e94:	str	xzr, [sp, #1528]
  428e98:	mov	w0, #0x3                   	// #3
  428e9c:	str	w0, [sp, #288]
  428ea0:	ldr	w0, [sp, #152]
  428ea4:	str	w0, [sp, #292]
  428ea8:	ldr	x0, [sp, #1528]
  428eac:	cmp	x0, #0x0
  428eb0:	b.eq	428eec <parse_token+0x7268>  // b.none
  428eb4:	mov	w0, #0x1                   	// #1
  428eb8:	bl	40be30 <log_get_max_level_realm@plt>
  428ebc:	mov	w1, w0
  428ec0:	ldr	w0, [sp, #288]
  428ec4:	cmp	w0, w1
  428ec8:	cset	w0, le
  428ecc:	and	w0, w0, #0xff
  428ed0:	and	x0, x0, #0xff
  428ed4:	cmp	x0, #0x0
  428ed8:	b.eq	428eec <parse_token+0x7268>  // b.none
  428edc:	add	x0, sp, #0x348
  428ee0:	mov	x1, x0
  428ee4:	ldr	x0, [sp, #1528]
  428ee8:	bl	40aba0 <sd_device_get_sysname@plt>
  428eec:	adrp	x0, 454000 <__func__.10675+0xa0>
  428ef0:	add	x20, x0, #0xbb
  428ef4:	ldr	x0, [sp, #840]
  428ef8:	cmp	x0, #0x0
  428efc:	b.eq	428f0c <parse_token+0x7288>  // b.none
  428f00:	adrp	x0, 454000 <__func__.10675+0xa0>
  428f04:	add	x19, x0, #0xd8
  428f08:	b	428f10 <parse_token+0x728c>
  428f0c:	mov	x19, #0x0                   	// #0
  428f10:	ldr	x21, [sp, #840]
  428f14:	ldr	x0, [sp, #1520]
  428f18:	bl	41fb4c <strna>
  428f1c:	mov	x2, x0
  428f20:	ldr	x0, [sp, #1512]
  428f24:	cmp	x0, #0x0
  428f28:	b.eq	428f38 <parse_token+0x72b4>  // b.none
  428f2c:	ldr	x0, [sp, #1512]
  428f30:	ldr	w0, [x0, #8]
  428f34:	b	428f3c <parse_token+0x72b8>
  428f38:	mov	w0, #0x0                   	// #0
  428f3c:	ldr	x1, [sp, #104]
  428f40:	str	x1, [sp, #32]
  428f44:	str	w0, [sp, #24]
  428f48:	str	x2, [sp, #16]
  428f4c:	adrp	x0, 454000 <__func__.10675+0xa0>
  428f50:	add	x0, x0, #0x9a8
  428f54:	str	x0, [sp, #8]
  428f58:	str	xzr, [sp]
  428f5c:	mov	x7, #0x0                   	// #0
  428f60:	mov	x6, x21
  428f64:	mov	x5, x19
  428f68:	adrp	x0, 455000 <__func__.10675+0x10a0>
  428f6c:	add	x4, x0, #0x920
  428f70:	mov	w3, #0x375                 	// #885
  428f74:	mov	x2, x20
  428f78:	ldr	w1, [sp, #292]
  428f7c:	ldr	w0, [sp, #288]
  428f80:	bl	40b020 <log_object_internal@plt>
  428f84:	b	42a9c0 <parse_token+0x8d3c>
  428f88:	ldr	w0, [sp, #148]
  428f8c:	mov	w0, w0
  428f90:	add	x0, x0, #0x1
  428f94:	mov	x4, x0
  428f98:	mov	x3, #0x0                   	// #0
  428f9c:	ldr	w2, [sp, #116]
  428fa0:	mov	w1, #0x23                  	// #35
  428fa4:	ldr	x0, [sp, #848]
  428fa8:	bl	420e88 <rule_line_add_token>
  428fac:	str	w0, [sp, #152]
  428fb0:	b	42a990 <parse_token+0x8d0c>
  428fb4:	ldr	x0, [sp, #136]
  428fb8:	ldr	w0, [x0, #8]
  428fbc:	cmp	w0, #0x0
  428fc0:	b.eq	428ff8 <parse_token+0x7374>  // b.none
  428fc4:	mov	w3, #0x1                   	// #1
  428fc8:	ldr	x2, [sp, #104]
  428fcc:	ldr	x1, [sp, #128]
  428fd0:	ldr	x0, [sp, #136]
  428fd4:	bl	421544 <check_value_format_and_warn>
  428fd8:	mov	x4, #0x0                   	// #0
  428fdc:	ldr	x3, [sp, #104]
  428fe0:	ldr	w2, [sp, #116]
  428fe4:	mov	w1, #0x20                  	// #32
  428fe8:	ldr	x0, [sp, #848]
  428fec:	bl	420e88 <rule_line_add_token>
  428ff0:	str	w0, [sp, #152]
  428ff4:	b	42a990 <parse_token+0x8d0c>
  428ff8:	ldr	x0, [sp, #136]
  428ffc:	str	x0, [sp, #1536]
  429000:	ldr	x0, [sp, #1536]
  429004:	cmp	x0, #0x0
  429008:	b.eq	429018 <parse_token+0x7394>  // b.none
  42900c:	ldr	x0, [sp, #1536]
  429010:	ldr	x0, [x0, #32]
  429014:	b	42901c <parse_token+0x7398>
  429018:	mov	x0, #0x0                   	// #0
  42901c:	str	x0, [sp, #1544]
  429020:	ldr	x0, [sp, #1544]
  429024:	cmp	x0, #0x0
  429028:	b.eq	429038 <parse_token+0x73b4>  // b.none
  42902c:	ldr	x0, [sp, #1544]
  429030:	ldr	x0, [x0, #8]
  429034:	b	42903c <parse_token+0x73b8>
  429038:	mov	x0, #0x0                   	// #0
  42903c:	str	x0, [sp, #1552]
  429040:	ldr	x0, [sp, #1544]
  429044:	cmp	x0, #0x0
  429048:	b.eq	429058 <parse_token+0x73d4>  // b.none
  42904c:	ldr	x0, [sp, #1544]
  429050:	ldr	x0, [x0]
  429054:	b	42905c <parse_token+0x73d8>
  429058:	mov	x0, #0x0                   	// #0
  42905c:	str	x0, [sp, #1560]
  429060:	str	xzr, [sp, #840]
  429064:	str	xzr, [sp, #1568]
  429068:	mov	w0, #0x7                   	// #7
  42906c:	str	w0, [sp, #296]
  429070:	str	wzr, [sp, #300]
  429074:	ldr	x0, [sp, #1568]
  429078:	cmp	x0, #0x0
  42907c:	b.eq	4290b8 <parse_token+0x7434>  // b.none
  429080:	mov	w0, #0x1                   	// #1
  429084:	bl	40be30 <log_get_max_level_realm@plt>
  429088:	mov	w1, w0
  42908c:	ldr	w0, [sp, #296]
  429090:	cmp	w0, w1
  429094:	cset	w0, le
  429098:	and	w0, w0, #0xff
  42909c:	and	x0, x0, #0xff
  4290a0:	cmp	x0, #0x0
  4290a4:	b.eq	4290b8 <parse_token+0x7434>  // b.none
  4290a8:	add	x0, sp, #0x348
  4290ac:	mov	x1, x0
  4290b0:	ldr	x0, [sp, #1568]
  4290b4:	bl	40aba0 <sd_device_get_sysname@plt>
  4290b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4290bc:	add	x20, x0, #0xbb
  4290c0:	ldr	x0, [sp, #840]
  4290c4:	cmp	x0, #0x0
  4290c8:	b.eq	4290d8 <parse_token+0x7454>  // b.none
  4290cc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4290d0:	add	x19, x0, #0xd8
  4290d4:	b	4290dc <parse_token+0x7458>
  4290d8:	mov	x19, #0x0                   	// #0
  4290dc:	ldr	x21, [sp, #840]
  4290e0:	ldr	x0, [sp, #1560]
  4290e4:	bl	41fb4c <strna>
  4290e8:	mov	x2, x0
  4290ec:	ldr	x0, [sp, #1552]
  4290f0:	cmp	x0, #0x0
  4290f4:	b.eq	429104 <parse_token+0x7480>  // b.none
  4290f8:	ldr	x0, [sp, #1552]
  4290fc:	ldr	w0, [x0, #8]
  429100:	b	429108 <parse_token+0x7484>
  429104:	mov	w0, #0x0                   	// #0
  429108:	ldr	x1, [sp, #104]
  42910c:	str	x1, [sp, #40]
  429110:	ldr	x1, [sp, #128]
  429114:	str	x1, [sp, #32]
  429118:	str	w0, [sp, #24]
  42911c:	str	x2, [sp, #16]
  429120:	adrp	x0, 454000 <__func__.10675+0xa0>
  429124:	add	x0, x0, #0x9d8
  429128:	str	x0, [sp, #8]
  42912c:	str	xzr, [sp]
  429130:	mov	x7, #0x0                   	// #0
  429134:	mov	x6, x21
  429138:	mov	x5, x19
  42913c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  429140:	add	x4, x0, #0x920
  429144:	mov	w3, #0x37c                 	// #892
  429148:	mov	x2, x20
  42914c:	ldr	w1, [sp, #300]
  429150:	ldr	w0, [sp, #296]
  429154:	bl	40b020 <log_object_internal@plt>
  429158:	mov	w0, #0x0                   	// #0
  42915c:	b	42a9c0 <parse_token+0x8d3c>
  429160:	adrp	x0, 454000 <__func__.10675+0xa0>
  429164:	add	x1, x0, #0xa10
  429168:	ldr	x0, [sp, #128]
  42916c:	bl	40b710 <strcmp@plt>
  429170:	cmp	w0, #0x0
  429174:	b.ne	429660 <parse_token+0x79dc>  // b.any
  429178:	ldr	x0, [sp, #120]
  42917c:	cmp	x0, #0x0
  429180:	b.eq	4292f4 <parse_token+0x7670>  // b.none
  429184:	ldr	x0, [sp, #136]
  429188:	str	x0, [sp, #1416]
  42918c:	ldr	x0, [sp, #1416]
  429190:	cmp	x0, #0x0
  429194:	b.eq	4291a4 <parse_token+0x7520>  // b.none
  429198:	ldr	x0, [sp, #1416]
  42919c:	ldr	x0, [x0, #32]
  4291a0:	b	4291a8 <parse_token+0x7524>
  4291a4:	mov	x0, #0x0                   	// #0
  4291a8:	str	x0, [sp, #1424]
  4291ac:	ldr	x0, [sp, #1424]
  4291b0:	cmp	x0, #0x0
  4291b4:	b.eq	4291c4 <parse_token+0x7540>  // b.none
  4291b8:	ldr	x0, [sp, #1424]
  4291bc:	ldr	x0, [x0, #8]
  4291c0:	b	4291c8 <parse_token+0x7544>
  4291c4:	mov	x0, #0x0                   	// #0
  4291c8:	str	x0, [sp, #1432]
  4291cc:	ldr	x0, [sp, #1424]
  4291d0:	cmp	x0, #0x0
  4291d4:	b.eq	4291e4 <parse_token+0x7560>  // b.none
  4291d8:	ldr	x0, [sp, #1424]
  4291dc:	ldr	x0, [x0]
  4291e0:	b	4291e8 <parse_token+0x7564>
  4291e4:	mov	x0, #0x0                   	// #0
  4291e8:	str	x0, [sp, #1440]
  4291ec:	str	xzr, [sp, #840]
  4291f0:	str	xzr, [sp, #1448]
  4291f4:	mov	w0, #0x3                   	// #3
  4291f8:	str	w0, [sp, #272]
  4291fc:	mov	w0, #0x16                  	// #22
  429200:	movk	w0, #0x4000, lsl #16
  429204:	str	w0, [sp, #276]
  429208:	ldr	x0, [sp, #1448]
  42920c:	cmp	x0, #0x0
  429210:	b.eq	42924c <parse_token+0x75c8>  // b.none
  429214:	mov	w0, #0x1                   	// #1
  429218:	bl	40be30 <log_get_max_level_realm@plt>
  42921c:	mov	w1, w0
  429220:	ldr	w0, [sp, #272]
  429224:	cmp	w0, w1
  429228:	cset	w0, le
  42922c:	and	w0, w0, #0xff
  429230:	and	x0, x0, #0xff
  429234:	cmp	x0, #0x0
  429238:	b.eq	42924c <parse_token+0x75c8>  // b.none
  42923c:	add	x0, sp, #0x348
  429240:	mov	x1, x0
  429244:	ldr	x0, [sp, #1448]
  429248:	bl	40aba0 <sd_device_get_sysname@plt>
  42924c:	adrp	x0, 454000 <__func__.10675+0xa0>
  429250:	add	x20, x0, #0xbb
  429254:	ldr	x0, [sp, #840]
  429258:	cmp	x0, #0x0
  42925c:	b.eq	42926c <parse_token+0x75e8>  // b.none
  429260:	adrp	x0, 454000 <__func__.10675+0xa0>
  429264:	add	x19, x0, #0xd8
  429268:	b	429270 <parse_token+0x75ec>
  42926c:	mov	x19, #0x0                   	// #0
  429270:	ldr	x21, [sp, #840]
  429274:	ldr	x0, [sp, #1440]
  429278:	bl	41fb4c <strna>
  42927c:	mov	x2, x0
  429280:	ldr	x0, [sp, #1432]
  429284:	cmp	x0, #0x0
  429288:	b.eq	429298 <parse_token+0x7614>  // b.none
  42928c:	ldr	x0, [sp, #1432]
  429290:	ldr	w0, [x0, #8]
  429294:	b	42929c <parse_token+0x7618>
  429298:	mov	w0, #0x0                   	// #0
  42929c:	ldr	x1, [sp, #128]
  4292a0:	str	x1, [sp, #40]
  4292a4:	adrp	x1, 454000 <__func__.10675+0xa0>
  4292a8:	add	x1, x1, #0x278
  4292ac:	str	x1, [sp, #32]
  4292b0:	str	w0, [sp, #24]
  4292b4:	str	x2, [sp, #16]
  4292b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4292bc:	add	x0, x0, #0x288
  4292c0:	str	x0, [sp, #8]
  4292c4:	str	xzr, [sp]
  4292c8:	mov	x7, #0x0                   	// #0
  4292cc:	mov	x6, x21
  4292d0:	mov	x5, x19
  4292d4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4292d8:	add	x4, x0, #0x920
  4292dc:	mov	w3, #0x383                 	// #899
  4292e0:	mov	x2, x20
  4292e4:	ldr	w1, [sp, #276]
  4292e8:	ldr	w0, [sp, #272]
  4292ec:	bl	40b020 <log_object_internal@plt>
  4292f0:	b	42a9c0 <parse_token+0x8d3c>
  4292f4:	ldrb	w0, [sp, #147]
  4292f8:	cmp	w0, #0x0
  4292fc:	b.ne	42930c <parse_token+0x7688>  // b.any
  429300:	ldr	w0, [sp, #116]
  429304:	cmp	w0, #0x3
  429308:	b.ne	42947c <parse_token+0x77f8>  // b.any
  42930c:	ldr	x0, [sp, #136]
  429310:	str	x0, [sp, #1376]
  429314:	ldr	x0, [sp, #1376]
  429318:	cmp	x0, #0x0
  42931c:	b.eq	42932c <parse_token+0x76a8>  // b.none
  429320:	ldr	x0, [sp, #1376]
  429324:	ldr	x0, [x0, #32]
  429328:	b	429330 <parse_token+0x76ac>
  42932c:	mov	x0, #0x0                   	// #0
  429330:	str	x0, [sp, #1384]
  429334:	ldr	x0, [sp, #1384]
  429338:	cmp	x0, #0x0
  42933c:	b.eq	42934c <parse_token+0x76c8>  // b.none
  429340:	ldr	x0, [sp, #1384]
  429344:	ldr	x0, [x0, #8]
  429348:	b	429350 <parse_token+0x76cc>
  42934c:	mov	x0, #0x0                   	// #0
  429350:	str	x0, [sp, #1392]
  429354:	ldr	x0, [sp, #1384]
  429358:	cmp	x0, #0x0
  42935c:	b.eq	42936c <parse_token+0x76e8>  // b.none
  429360:	ldr	x0, [sp, #1384]
  429364:	ldr	x0, [x0]
  429368:	b	429370 <parse_token+0x76ec>
  42936c:	mov	x0, #0x0                   	// #0
  429370:	str	x0, [sp, #1400]
  429374:	str	xzr, [sp, #840]
  429378:	str	xzr, [sp, #1408]
  42937c:	mov	w0, #0x3                   	// #3
  429380:	str	w0, [sp, #264]
  429384:	mov	w0, #0x16                  	// #22
  429388:	movk	w0, #0x4000, lsl #16
  42938c:	str	w0, [sp, #268]
  429390:	ldr	x0, [sp, #1408]
  429394:	cmp	x0, #0x0
  429398:	b.eq	4293d4 <parse_token+0x7750>  // b.none
  42939c:	mov	w0, #0x1                   	// #1
  4293a0:	bl	40be30 <log_get_max_level_realm@plt>
  4293a4:	mov	w1, w0
  4293a8:	ldr	w0, [sp, #264]
  4293ac:	cmp	w0, w1
  4293b0:	cset	w0, le
  4293b4:	and	w0, w0, #0xff
  4293b8:	and	x0, x0, #0xff
  4293bc:	cmp	x0, #0x0
  4293c0:	b.eq	4293d4 <parse_token+0x7750>  // b.none
  4293c4:	add	x0, sp, #0x348
  4293c8:	mov	x1, x0
  4293cc:	ldr	x0, [sp, #1408]
  4293d0:	bl	40aba0 <sd_device_get_sysname@plt>
  4293d4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4293d8:	add	x20, x0, #0xbb
  4293dc:	ldr	x0, [sp, #840]
  4293e0:	cmp	x0, #0x0
  4293e4:	b.eq	4293f4 <parse_token+0x7770>  // b.none
  4293e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4293ec:	add	x19, x0, #0xd8
  4293f0:	b	4293f8 <parse_token+0x7774>
  4293f4:	mov	x19, #0x0                   	// #0
  4293f8:	ldr	x21, [sp, #840]
  4293fc:	ldr	x0, [sp, #1400]
  429400:	bl	41fb4c <strna>
  429404:	mov	x2, x0
  429408:	ldr	x0, [sp, #1392]
  42940c:	cmp	x0, #0x0
  429410:	b.eq	429420 <parse_token+0x779c>  // b.none
  429414:	ldr	x0, [sp, #1392]
  429418:	ldr	w0, [x0, #8]
  42941c:	b	429424 <parse_token+0x77a0>
  429420:	mov	w0, #0x0                   	// #0
  429424:	ldr	x1, [sp, #128]
  429428:	str	x1, [sp, #40]
  42942c:	adrp	x1, 454000 <__func__.10675+0xa0>
  429430:	add	x1, x1, #0x348
  429434:	str	x1, [sp, #32]
  429438:	str	w0, [sp, #24]
  42943c:	str	x2, [sp, #16]
  429440:	adrp	x0, 454000 <__func__.10675+0xa0>
  429444:	add	x0, x0, #0x288
  429448:	str	x0, [sp, #8]
  42944c:	str	xzr, [sp]
  429450:	mov	x7, #0x0                   	// #0
  429454:	mov	x6, x21
  429458:	mov	x5, x19
  42945c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  429460:	add	x4, x0, #0x920
  429464:	mov	w3, #0x385                 	// #901
  429468:	mov	x2, x20
  42946c:	ldr	w1, [sp, #268]
  429470:	ldr	w0, [sp, #264]
  429474:	bl	40b020 <log_object_internal@plt>
  429478:	b	42a9c0 <parse_token+0x8d3c>
  42947c:	ldr	w0, [sp, #116]
  429480:	cmp	w0, #0x2
  429484:	b.ne	4295e8 <parse_token+0x7964>  // b.any
  429488:	ldr	x0, [sp, #136]
  42948c:	str	x0, [sp, #1336]
  429490:	ldr	x0, [sp, #1336]
  429494:	cmp	x0, #0x0
  429498:	b.eq	4294a8 <parse_token+0x7824>  // b.none
  42949c:	ldr	x0, [sp, #1336]
  4294a0:	ldr	x0, [x0, #32]
  4294a4:	b	4294ac <parse_token+0x7828>
  4294a8:	mov	x0, #0x0                   	// #0
  4294ac:	str	x0, [sp, #1344]
  4294b0:	ldr	x0, [sp, #1344]
  4294b4:	cmp	x0, #0x0
  4294b8:	b.eq	4294c8 <parse_token+0x7844>  // b.none
  4294bc:	ldr	x0, [sp, #1344]
  4294c0:	ldr	x0, [x0, #8]
  4294c4:	b	4294cc <parse_token+0x7848>
  4294c8:	mov	x0, #0x0                   	// #0
  4294cc:	str	x0, [sp, #1352]
  4294d0:	ldr	x0, [sp, #1344]
  4294d4:	cmp	x0, #0x0
  4294d8:	b.eq	4294e8 <parse_token+0x7864>  // b.none
  4294dc:	ldr	x0, [sp, #1344]
  4294e0:	ldr	x0, [x0]
  4294e4:	b	4294ec <parse_token+0x7868>
  4294e8:	mov	x0, #0x0                   	// #0
  4294ec:	str	x0, [sp, #1360]
  4294f0:	str	xzr, [sp, #840]
  4294f4:	str	xzr, [sp, #1368]
  4294f8:	mov	w0, #0x4                   	// #4
  4294fc:	str	w0, [sp, #256]
  429500:	str	wzr, [sp, #260]
  429504:	ldr	x0, [sp, #1368]
  429508:	cmp	x0, #0x0
  42950c:	b.eq	429548 <parse_token+0x78c4>  // b.none
  429510:	mov	w0, #0x1                   	// #1
  429514:	bl	40be30 <log_get_max_level_realm@plt>
  429518:	mov	w1, w0
  42951c:	ldr	w0, [sp, #256]
  429520:	cmp	w0, w1
  429524:	cset	w0, le
  429528:	and	w0, w0, #0xff
  42952c:	and	x0, x0, #0xff
  429530:	cmp	x0, #0x0
  429534:	b.eq	429548 <parse_token+0x78c4>  // b.none
  429538:	add	x0, sp, #0x348
  42953c:	mov	x1, x0
  429540:	ldr	x0, [sp, #1368]
  429544:	bl	40aba0 <sd_device_get_sysname@plt>
  429548:	adrp	x0, 454000 <__func__.10675+0xa0>
  42954c:	add	x20, x0, #0xbb
  429550:	ldr	x0, [sp, #840]
  429554:	cmp	x0, #0x0
  429558:	b.eq	429568 <parse_token+0x78e4>  // b.none
  42955c:	adrp	x0, 454000 <__func__.10675+0xa0>
  429560:	add	x19, x0, #0xd8
  429564:	b	42956c <parse_token+0x78e8>
  429568:	mov	x19, #0x0                   	// #0
  42956c:	ldr	x21, [sp, #840]
  429570:	ldr	x0, [sp, #1360]
  429574:	bl	41fb4c <strna>
  429578:	mov	x2, x0
  42957c:	ldr	x0, [sp, #1352]
  429580:	cmp	x0, #0x0
  429584:	b.eq	429594 <parse_token+0x7910>  // b.none
  429588:	ldr	x0, [sp, #1352]
  42958c:	ldr	w0, [x0, #8]
  429590:	b	429598 <parse_token+0x7914>
  429594:	mov	w0, #0x0                   	// #0
  429598:	ldr	x1, [sp, #128]
  42959c:	str	x1, [sp, #32]
  4295a0:	str	w0, [sp, #24]
  4295a4:	str	x2, [sp, #16]
  4295a8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4295ac:	add	x0, x0, #0x8e8
  4295b0:	str	x0, [sp, #8]
  4295b4:	str	xzr, [sp]
  4295b8:	mov	x7, #0x0                   	// #0
  4295bc:	mov	x6, x21
  4295c0:	mov	x5, x19
  4295c4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4295c8:	add	x4, x0, #0x920
  4295cc:	mov	w3, #0x387                 	// #903
  4295d0:	mov	x2, x20
  4295d4:	ldr	w1, [sp, #260]
  4295d8:	ldr	w0, [sp, #256]
  4295dc:	bl	40b020 <log_object_internal@plt>
  4295e0:	mov	w0, #0x4                   	// #4
  4295e4:	str	w0, [sp, #116]
  4295e8:	add	x0, sp, #0x348
  4295ec:	mov	x1, x0
  4295f0:	ldr	x0, [sp, #104]
  4295f4:	bl	40ac80 <parse_mode@plt>
  4295f8:	cmp	w0, #0x0
  4295fc:	b.lt	42962c <parse_token+0x79a8>  // b.tstop
  429600:	ldr	w0, [sp, #840]
  429604:	mov	w0, w0
  429608:	add	x0, x0, #0x1
  42960c:	mov	x4, x0
  429610:	mov	x3, #0x0                   	// #0
  429614:	ldr	w2, [sp, #116]
  429618:	mov	w1, #0x24                  	// #36
  42961c:	ldr	x0, [sp, #848]
  429620:	bl	420e88 <rule_line_add_token>
  429624:	str	w0, [sp, #152]
  429628:	b	42a990 <parse_token+0x8d0c>
  42962c:	mov	w3, #0x1                   	// #1
  429630:	ldr	x2, [sp, #104]
  429634:	ldr	x1, [sp, #128]
  429638:	ldr	x0, [sp, #136]
  42963c:	bl	421544 <check_value_format_and_warn>
  429640:	mov	x4, #0x0                   	// #0
  429644:	ldr	x3, [sp, #104]
  429648:	ldr	w2, [sp, #116]
  42964c:	mov	w1, #0x21                  	// #33
  429650:	ldr	x0, [sp, #848]
  429654:	bl	420e88 <rule_line_add_token>
  429658:	str	w0, [sp, #152]
  42965c:	b	42a990 <parse_token+0x8d0c>
  429660:	adrp	x0, 454000 <__func__.10675+0xa0>
  429664:	add	x1, x0, #0xa18
  429668:	ldr	x0, [sp, #128]
  42966c:	bl	40b710 <strcmp@plt>
  429670:	cmp	w0, #0x0
  429674:	b.ne	429b24 <parse_token+0x7ea0>  // b.any
  429678:	ldr	x0, [sp, #120]
  42967c:	bl	41fb70 <isempty>
  429680:	and	w0, w0, #0xff
  429684:	cmp	w0, #0x0
  429688:	b.eq	4297fc <parse_token+0x7b78>  // b.none
  42968c:	ldr	x0, [sp, #136]
  429690:	str	x0, [sp, #1296]
  429694:	ldr	x0, [sp, #1296]
  429698:	cmp	x0, #0x0
  42969c:	b.eq	4296ac <parse_token+0x7a28>  // b.none
  4296a0:	ldr	x0, [sp, #1296]
  4296a4:	ldr	x0, [x0, #32]
  4296a8:	b	4296b0 <parse_token+0x7a2c>
  4296ac:	mov	x0, #0x0                   	// #0
  4296b0:	str	x0, [sp, #1304]
  4296b4:	ldr	x0, [sp, #1304]
  4296b8:	cmp	x0, #0x0
  4296bc:	b.eq	4296cc <parse_token+0x7a48>  // b.none
  4296c0:	ldr	x0, [sp, #1304]
  4296c4:	ldr	x0, [x0, #8]
  4296c8:	b	4296d0 <parse_token+0x7a4c>
  4296cc:	mov	x0, #0x0                   	// #0
  4296d0:	str	x0, [sp, #1312]
  4296d4:	ldr	x0, [sp, #1304]
  4296d8:	cmp	x0, #0x0
  4296dc:	b.eq	4296ec <parse_token+0x7a68>  // b.none
  4296e0:	ldr	x0, [sp, #1304]
  4296e4:	ldr	x0, [x0]
  4296e8:	b	4296f0 <parse_token+0x7a6c>
  4296ec:	mov	x0, #0x0                   	// #0
  4296f0:	str	x0, [sp, #1320]
  4296f4:	str	xzr, [sp, #840]
  4296f8:	str	xzr, [sp, #1328]
  4296fc:	mov	w0, #0x3                   	// #3
  429700:	str	w0, [sp, #248]
  429704:	mov	w0, #0x16                  	// #22
  429708:	movk	w0, #0x4000, lsl #16
  42970c:	str	w0, [sp, #252]
  429710:	ldr	x0, [sp, #1328]
  429714:	cmp	x0, #0x0
  429718:	b.eq	429754 <parse_token+0x7ad0>  // b.none
  42971c:	mov	w0, #0x1                   	// #1
  429720:	bl	40be30 <log_get_max_level_realm@plt>
  429724:	mov	w1, w0
  429728:	ldr	w0, [sp, #248]
  42972c:	cmp	w0, w1
  429730:	cset	w0, le
  429734:	and	w0, w0, #0xff
  429738:	and	x0, x0, #0xff
  42973c:	cmp	x0, #0x0
  429740:	b.eq	429754 <parse_token+0x7ad0>  // b.none
  429744:	add	x0, sp, #0x348
  429748:	mov	x1, x0
  42974c:	ldr	x0, [sp, #1328]
  429750:	bl	40aba0 <sd_device_get_sysname@plt>
  429754:	adrp	x0, 454000 <__func__.10675+0xa0>
  429758:	add	x20, x0, #0xbb
  42975c:	ldr	x0, [sp, #840]
  429760:	cmp	x0, #0x0
  429764:	b.eq	429774 <parse_token+0x7af0>  // b.none
  429768:	adrp	x0, 454000 <__func__.10675+0xa0>
  42976c:	add	x19, x0, #0xd8
  429770:	b	429778 <parse_token+0x7af4>
  429774:	mov	x19, #0x0                   	// #0
  429778:	ldr	x21, [sp, #840]
  42977c:	ldr	x0, [sp, #1320]
  429780:	bl	41fb4c <strna>
  429784:	mov	x2, x0
  429788:	ldr	x0, [sp, #1312]
  42978c:	cmp	x0, #0x0
  429790:	b.eq	4297a0 <parse_token+0x7b1c>  // b.none
  429794:	ldr	x0, [sp, #1312]
  429798:	ldr	w0, [x0, #8]
  42979c:	b	4297a4 <parse_token+0x7b20>
  4297a0:	mov	w0, #0x0                   	// #0
  4297a4:	ldr	x1, [sp, #128]
  4297a8:	str	x1, [sp, #40]
  4297ac:	adrp	x1, 454000 <__func__.10675+0xa0>
  4297b0:	add	x1, x1, #0x278
  4297b4:	str	x1, [sp, #32]
  4297b8:	str	w0, [sp, #24]
  4297bc:	str	x2, [sp, #16]
  4297c0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4297c4:	add	x0, x0, #0x288
  4297c8:	str	x0, [sp, #8]
  4297cc:	str	xzr, [sp]
  4297d0:	mov	x7, #0x0                   	// #0
  4297d4:	mov	x6, x21
  4297d8:	mov	x5, x19
  4297dc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4297e0:	add	x4, x0, #0x920
  4297e4:	mov	w3, #0x393                 	// #915
  4297e8:	mov	x2, x20
  4297ec:	ldr	w1, [sp, #252]
  4297f0:	ldr	w0, [sp, #248]
  4297f4:	bl	40b020 <log_object_internal@plt>
  4297f8:	b	42a9c0 <parse_token+0x8d3c>
  4297fc:	mov	w3, #0x1                   	// #1
  429800:	ldr	x2, [sp, #104]
  429804:	ldr	x1, [sp, #128]
  429808:	ldr	x0, [sp, #136]
  42980c:	bl	421544 <check_value_format_and_warn>
  429810:	ldrb	w0, [sp, #147]
  429814:	cmp	w0, #0x0
  429818:	b.ne	429828 <parse_token+0x7ba4>  // b.any
  42981c:	ldr	w0, [sp, #116]
  429820:	cmp	w0, #0x3
  429824:	b.ne	429998 <parse_token+0x7d14>  // b.any
  429828:	ldr	x0, [sp, #136]
  42982c:	str	x0, [sp, #1256]
  429830:	ldr	x0, [sp, #1256]
  429834:	cmp	x0, #0x0
  429838:	b.eq	429848 <parse_token+0x7bc4>  // b.none
  42983c:	ldr	x0, [sp, #1256]
  429840:	ldr	x0, [x0, #32]
  429844:	b	42984c <parse_token+0x7bc8>
  429848:	mov	x0, #0x0                   	// #0
  42984c:	str	x0, [sp, #1264]
  429850:	ldr	x0, [sp, #1264]
  429854:	cmp	x0, #0x0
  429858:	b.eq	429868 <parse_token+0x7be4>  // b.none
  42985c:	ldr	x0, [sp, #1264]
  429860:	ldr	x0, [x0, #8]
  429864:	b	42986c <parse_token+0x7be8>
  429868:	mov	x0, #0x0                   	// #0
  42986c:	str	x0, [sp, #1272]
  429870:	ldr	x0, [sp, #1264]
  429874:	cmp	x0, #0x0
  429878:	b.eq	429888 <parse_token+0x7c04>  // b.none
  42987c:	ldr	x0, [sp, #1264]
  429880:	ldr	x0, [x0]
  429884:	b	42988c <parse_token+0x7c08>
  429888:	mov	x0, #0x0                   	// #0
  42988c:	str	x0, [sp, #1280]
  429890:	str	xzr, [sp, #840]
  429894:	str	xzr, [sp, #1288]
  429898:	mov	w0, #0x3                   	// #3
  42989c:	str	w0, [sp, #240]
  4298a0:	mov	w0, #0x16                  	// #22
  4298a4:	movk	w0, #0x4000, lsl #16
  4298a8:	str	w0, [sp, #244]
  4298ac:	ldr	x0, [sp, #1288]
  4298b0:	cmp	x0, #0x0
  4298b4:	b.eq	4298f0 <parse_token+0x7c6c>  // b.none
  4298b8:	mov	w0, #0x1                   	// #1
  4298bc:	bl	40be30 <log_get_max_level_realm@plt>
  4298c0:	mov	w1, w0
  4298c4:	ldr	w0, [sp, #240]
  4298c8:	cmp	w0, w1
  4298cc:	cset	w0, le
  4298d0:	and	w0, w0, #0xff
  4298d4:	and	x0, x0, #0xff
  4298d8:	cmp	x0, #0x0
  4298dc:	b.eq	4298f0 <parse_token+0x7c6c>  // b.none
  4298e0:	add	x0, sp, #0x348
  4298e4:	mov	x1, x0
  4298e8:	ldr	x0, [sp, #1288]
  4298ec:	bl	40aba0 <sd_device_get_sysname@plt>
  4298f0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4298f4:	add	x20, x0, #0xbb
  4298f8:	ldr	x0, [sp, #840]
  4298fc:	cmp	x0, #0x0
  429900:	b.eq	429910 <parse_token+0x7c8c>  // b.none
  429904:	adrp	x0, 454000 <__func__.10675+0xa0>
  429908:	add	x19, x0, #0xd8
  42990c:	b	429914 <parse_token+0x7c90>
  429910:	mov	x19, #0x0                   	// #0
  429914:	ldr	x21, [sp, #840]
  429918:	ldr	x0, [sp, #1280]
  42991c:	bl	41fb4c <strna>
  429920:	mov	x2, x0
  429924:	ldr	x0, [sp, #1272]
  429928:	cmp	x0, #0x0
  42992c:	b.eq	42993c <parse_token+0x7cb8>  // b.none
  429930:	ldr	x0, [sp, #1272]
  429934:	ldr	w0, [x0, #8]
  429938:	b	429940 <parse_token+0x7cbc>
  42993c:	mov	w0, #0x0                   	// #0
  429940:	ldr	x1, [sp, #128]
  429944:	str	x1, [sp, #40]
  429948:	adrp	x1, 454000 <__func__.10675+0xa0>
  42994c:	add	x1, x1, #0x348
  429950:	str	x1, [sp, #32]
  429954:	str	w0, [sp, #24]
  429958:	str	x2, [sp, #16]
  42995c:	adrp	x0, 454000 <__func__.10675+0xa0>
  429960:	add	x0, x0, #0x288
  429964:	str	x0, [sp, #8]
  429968:	str	xzr, [sp]
  42996c:	mov	x7, #0x0                   	// #0
  429970:	mov	x6, x21
  429974:	mov	x5, x19
  429978:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42997c:	add	x4, x0, #0x920
  429980:	mov	w3, #0x396                 	// #918
  429984:	mov	x2, x20
  429988:	ldr	w1, [sp, #244]
  42998c:	ldr	w0, [sp, #240]
  429990:	bl	40b020 <log_object_internal@plt>
  429994:	b	42a9c0 <parse_token+0x8d3c>
  429998:	ldr	w0, [sp, #116]
  42999c:	cmp	w0, #0x5
  4299a0:	b.ne	429b04 <parse_token+0x7e80>  // b.any
  4299a4:	ldr	x0, [sp, #136]
  4299a8:	str	x0, [sp, #1216]
  4299ac:	ldr	x0, [sp, #1216]
  4299b0:	cmp	x0, #0x0
  4299b4:	b.eq	4299c4 <parse_token+0x7d40>  // b.none
  4299b8:	ldr	x0, [sp, #1216]
  4299bc:	ldr	x0, [x0, #32]
  4299c0:	b	4299c8 <parse_token+0x7d44>
  4299c4:	mov	x0, #0x0                   	// #0
  4299c8:	str	x0, [sp, #1224]
  4299cc:	ldr	x0, [sp, #1224]
  4299d0:	cmp	x0, #0x0
  4299d4:	b.eq	4299e4 <parse_token+0x7d60>  // b.none
  4299d8:	ldr	x0, [sp, #1224]
  4299dc:	ldr	x0, [x0, #8]
  4299e0:	b	4299e8 <parse_token+0x7d64>
  4299e4:	mov	x0, #0x0                   	// #0
  4299e8:	str	x0, [sp, #1232]
  4299ec:	ldr	x0, [sp, #1224]
  4299f0:	cmp	x0, #0x0
  4299f4:	b.eq	429a04 <parse_token+0x7d80>  // b.none
  4299f8:	ldr	x0, [sp, #1224]
  4299fc:	ldr	x0, [x0]
  429a00:	b	429a08 <parse_token+0x7d84>
  429a04:	mov	x0, #0x0                   	// #0
  429a08:	str	x0, [sp, #1240]
  429a0c:	str	xzr, [sp, #840]
  429a10:	str	xzr, [sp, #1248]
  429a14:	mov	w0, #0x4                   	// #4
  429a18:	str	w0, [sp, #232]
  429a1c:	str	wzr, [sp, #236]
  429a20:	ldr	x0, [sp, #1248]
  429a24:	cmp	x0, #0x0
  429a28:	b.eq	429a64 <parse_token+0x7de0>  // b.none
  429a2c:	mov	w0, #0x1                   	// #1
  429a30:	bl	40be30 <log_get_max_level_realm@plt>
  429a34:	mov	w1, w0
  429a38:	ldr	w0, [sp, #232]
  429a3c:	cmp	w0, w1
  429a40:	cset	w0, le
  429a44:	and	w0, w0, #0xff
  429a48:	and	x0, x0, #0xff
  429a4c:	cmp	x0, #0x0
  429a50:	b.eq	429a64 <parse_token+0x7de0>  // b.none
  429a54:	add	x0, sp, #0x348
  429a58:	mov	x1, x0
  429a5c:	ldr	x0, [sp, #1248]
  429a60:	bl	40aba0 <sd_device_get_sysname@plt>
  429a64:	adrp	x0, 454000 <__func__.10675+0xa0>
  429a68:	add	x20, x0, #0xbb
  429a6c:	ldr	x0, [sp, #840]
  429a70:	cmp	x0, #0x0
  429a74:	b.eq	429a84 <parse_token+0x7e00>  // b.none
  429a78:	adrp	x0, 454000 <__func__.10675+0xa0>
  429a7c:	add	x19, x0, #0xd8
  429a80:	b	429a88 <parse_token+0x7e04>
  429a84:	mov	x19, #0x0                   	// #0
  429a88:	ldr	x21, [sp, #840]
  429a8c:	ldr	x0, [sp, #1240]
  429a90:	bl	41fb4c <strna>
  429a94:	mov	x2, x0
  429a98:	ldr	x0, [sp, #1232]
  429a9c:	cmp	x0, #0x0
  429aa0:	b.eq	429ab0 <parse_token+0x7e2c>  // b.none
  429aa4:	ldr	x0, [sp, #1232]
  429aa8:	ldr	w0, [x0, #8]
  429aac:	b	429ab4 <parse_token+0x7e30>
  429ab0:	mov	w0, #0x0                   	// #0
  429ab4:	ldr	x1, [sp, #128]
  429ab8:	str	x1, [sp, #32]
  429abc:	str	w0, [sp, #24]
  429ac0:	str	x2, [sp, #16]
  429ac4:	adrp	x0, 454000 <__func__.10675+0xa0>
  429ac8:	add	x0, x0, #0xa28
  429acc:	str	x0, [sp, #8]
  429ad0:	str	xzr, [sp]
  429ad4:	mov	x7, #0x0                   	// #0
  429ad8:	mov	x6, x21
  429adc:	mov	x5, x19
  429ae0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  429ae4:	add	x4, x0, #0x920
  429ae8:	mov	w3, #0x398                 	// #920
  429aec:	mov	x2, x20
  429af0:	ldr	w1, [sp, #236]
  429af4:	ldr	w0, [sp, #232]
  429af8:	bl	40b020 <log_object_internal@plt>
  429afc:	mov	w0, #0x4                   	// #4
  429b00:	str	w0, [sp, #116]
  429b04:	mov	x4, #0x0                   	// #0
  429b08:	ldr	x3, [sp, #104]
  429b0c:	ldr	w2, [sp, #116]
  429b10:	mov	w1, #0x27                  	// #39
  429b14:	ldr	x0, [sp, #848]
  429b18:	bl	420e88 <rule_line_add_token>
  429b1c:	str	w0, [sp, #152]
  429b20:	b	42a990 <parse_token+0x8d0c>
  429b24:	adrp	x0, 454000 <__func__.10675+0xa0>
  429b28:	add	x1, x0, #0xa78
  429b2c:	ldr	x0, [sp, #128]
  429b30:	bl	40b710 <strcmp@plt>
  429b34:	cmp	w0, #0x0
  429b38:	b.ne	42a048 <parse_token+0x83c4>  // b.any
  429b3c:	ldrb	w0, [sp, #147]
  429b40:	cmp	w0, #0x0
  429b44:	b.ne	429b54 <parse_token+0x7ed0>  // b.any
  429b48:	ldr	w0, [sp, #116]
  429b4c:	cmp	w0, #0x3
  429b50:	b.ne	429cc4 <parse_token+0x8040>  // b.any
  429b54:	ldr	x0, [sp, #136]
  429b58:	str	x0, [sp, #1176]
  429b5c:	ldr	x0, [sp, #1176]
  429b60:	cmp	x0, #0x0
  429b64:	b.eq	429b74 <parse_token+0x7ef0>  // b.none
  429b68:	ldr	x0, [sp, #1176]
  429b6c:	ldr	x0, [x0, #32]
  429b70:	b	429b78 <parse_token+0x7ef4>
  429b74:	mov	x0, #0x0                   	// #0
  429b78:	str	x0, [sp, #1184]
  429b7c:	ldr	x0, [sp, #1184]
  429b80:	cmp	x0, #0x0
  429b84:	b.eq	429b94 <parse_token+0x7f10>  // b.none
  429b88:	ldr	x0, [sp, #1184]
  429b8c:	ldr	x0, [x0, #8]
  429b90:	b	429b98 <parse_token+0x7f14>
  429b94:	mov	x0, #0x0                   	// #0
  429b98:	str	x0, [sp, #1192]
  429b9c:	ldr	x0, [sp, #1184]
  429ba0:	cmp	x0, #0x0
  429ba4:	b.eq	429bb4 <parse_token+0x7f30>  // b.none
  429ba8:	ldr	x0, [sp, #1184]
  429bac:	ldr	x0, [x0]
  429bb0:	b	429bb8 <parse_token+0x7f34>
  429bb4:	mov	x0, #0x0                   	// #0
  429bb8:	str	x0, [sp, #1200]
  429bbc:	str	xzr, [sp, #840]
  429bc0:	str	xzr, [sp, #1208]
  429bc4:	mov	w0, #0x3                   	// #3
  429bc8:	str	w0, [sp, #224]
  429bcc:	mov	w0, #0x16                  	// #22
  429bd0:	movk	w0, #0x4000, lsl #16
  429bd4:	str	w0, [sp, #228]
  429bd8:	ldr	x0, [sp, #1208]
  429bdc:	cmp	x0, #0x0
  429be0:	b.eq	429c1c <parse_token+0x7f98>  // b.none
  429be4:	mov	w0, #0x1                   	// #1
  429be8:	bl	40be30 <log_get_max_level_realm@plt>
  429bec:	mov	w1, w0
  429bf0:	ldr	w0, [sp, #224]
  429bf4:	cmp	w0, w1
  429bf8:	cset	w0, le
  429bfc:	and	w0, w0, #0xff
  429c00:	and	x0, x0, #0xff
  429c04:	cmp	x0, #0x0
  429c08:	b.eq	429c1c <parse_token+0x7f98>  // b.none
  429c0c:	add	x0, sp, #0x348
  429c10:	mov	x1, x0
  429c14:	ldr	x0, [sp, #1208]
  429c18:	bl	40aba0 <sd_device_get_sysname@plt>
  429c1c:	adrp	x0, 454000 <__func__.10675+0xa0>
  429c20:	add	x20, x0, #0xbb
  429c24:	ldr	x0, [sp, #840]
  429c28:	cmp	x0, #0x0
  429c2c:	b.eq	429c3c <parse_token+0x7fb8>  // b.none
  429c30:	adrp	x0, 454000 <__func__.10675+0xa0>
  429c34:	add	x19, x0, #0xd8
  429c38:	b	429c40 <parse_token+0x7fbc>
  429c3c:	mov	x19, #0x0                   	// #0
  429c40:	ldr	x21, [sp, #840]
  429c44:	ldr	x0, [sp, #1200]
  429c48:	bl	41fb4c <strna>
  429c4c:	mov	x2, x0
  429c50:	ldr	x0, [sp, #1192]
  429c54:	cmp	x0, #0x0
  429c58:	b.eq	429c68 <parse_token+0x7fe4>  // b.none
  429c5c:	ldr	x0, [sp, #1192]
  429c60:	ldr	w0, [x0, #8]
  429c64:	b	429c6c <parse_token+0x7fe8>
  429c68:	mov	w0, #0x0                   	// #0
  429c6c:	ldr	x1, [sp, #128]
  429c70:	str	x1, [sp, #40]
  429c74:	adrp	x1, 454000 <__func__.10675+0xa0>
  429c78:	add	x1, x1, #0x348
  429c7c:	str	x1, [sp, #32]
  429c80:	str	w0, [sp, #24]
  429c84:	str	x2, [sp, #16]
  429c88:	adrp	x0, 454000 <__func__.10675+0xa0>
  429c8c:	add	x0, x0, #0x288
  429c90:	str	x0, [sp, #8]
  429c94:	str	xzr, [sp]
  429c98:	mov	x7, #0x0                   	// #0
  429c9c:	mov	x6, x21
  429ca0:	mov	x5, x19
  429ca4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  429ca8:	add	x4, x0, #0x920
  429cac:	mov	w3, #0x39f                 	// #927
  429cb0:	mov	x2, x20
  429cb4:	ldr	w1, [sp, #228]
  429cb8:	ldr	w0, [sp, #224]
  429cbc:	bl	40b020 <log_object_internal@plt>
  429cc0:	b	42a9c0 <parse_token+0x8d3c>
  429cc4:	mov	w3, #0x1                   	// #1
  429cc8:	ldr	x2, [sp, #104]
  429ccc:	ldr	x1, [sp, #128]
  429cd0:	ldr	x0, [sp, #136]
  429cd4:	bl	421544 <check_value_format_and_warn>
  429cd8:	ldr	x0, [sp, #120]
  429cdc:	cmp	x0, #0x0
  429ce0:	b.eq	429cfc <parse_token+0x8078>  // b.none
  429ce4:	adrp	x0, 454000 <__func__.10675+0xa0>
  429ce8:	add	x1, x0, #0x728
  429cec:	ldr	x0, [sp, #120]
  429cf0:	bl	40b710 <strcmp@plt>
  429cf4:	cmp	w0, #0x0
  429cf8:	b.ne	429d1c <parse_token+0x8098>  // b.any
  429cfc:	mov	x4, #0x0                   	// #0
  429d00:	ldr	x3, [sp, #104]
  429d04:	ldr	w2, [sp, #116]
  429d08:	mov	w1, #0x2e                  	// #46
  429d0c:	ldr	x0, [sp, #848]
  429d10:	bl	420e88 <rule_line_add_token>
  429d14:	str	w0, [sp, #152]
  429d18:	b	42a990 <parse_token+0x8d0c>
  429d1c:	adrp	x0, 454000 <__func__.10675+0xa0>
  429d20:	add	x1, x0, #0x770
  429d24:	ldr	x0, [sp, #120]
  429d28:	bl	40b710 <strcmp@plt>
  429d2c:	cmp	w0, #0x0
  429d30:	b.ne	429ed8 <parse_token+0x8254>  // b.any
  429d34:	ldr	x0, [sp, #104]
  429d38:	bl	43622c <udev_builtin_lookup>
  429d3c:	str	w0, [sp, #212]
  429d40:	ldr	w0, [sp, #212]
  429d44:	cmp	w0, #0x0
  429d48:	b.ge	429eb0 <parse_token+0x822c>  // b.tcont
  429d4c:	ldr	x0, [sp, #136]
  429d50:	str	x0, [sp, #1136]
  429d54:	ldr	x0, [sp, #1136]
  429d58:	cmp	x0, #0x0
  429d5c:	b.eq	429d6c <parse_token+0x80e8>  // b.none
  429d60:	ldr	x0, [sp, #1136]
  429d64:	ldr	x0, [x0, #32]
  429d68:	b	429d70 <parse_token+0x80ec>
  429d6c:	mov	x0, #0x0                   	// #0
  429d70:	str	x0, [sp, #1144]
  429d74:	ldr	x0, [sp, #1144]
  429d78:	cmp	x0, #0x0
  429d7c:	b.eq	429d8c <parse_token+0x8108>  // b.none
  429d80:	ldr	x0, [sp, #1144]
  429d84:	ldr	x0, [x0, #8]
  429d88:	b	429d90 <parse_token+0x810c>
  429d8c:	mov	x0, #0x0                   	// #0
  429d90:	str	x0, [sp, #1152]
  429d94:	ldr	x0, [sp, #1144]
  429d98:	cmp	x0, #0x0
  429d9c:	b.eq	429dac <parse_token+0x8128>  // b.none
  429da0:	ldr	x0, [sp, #1144]
  429da4:	ldr	x0, [x0]
  429da8:	b	429db0 <parse_token+0x812c>
  429dac:	mov	x0, #0x0                   	// #0
  429db0:	str	x0, [sp, #1160]
  429db4:	str	xzr, [sp, #840]
  429db8:	str	xzr, [sp, #1168]
  429dbc:	mov	w0, #0x3                   	// #3
  429dc0:	str	w0, [sp, #216]
  429dc4:	mov	w0, #0x16                  	// #22
  429dc8:	movk	w0, #0x4000, lsl #16
  429dcc:	str	w0, [sp, #220]
  429dd0:	ldr	x0, [sp, #1168]
  429dd4:	cmp	x0, #0x0
  429dd8:	b.eq	429e14 <parse_token+0x8190>  // b.none
  429ddc:	mov	w0, #0x1                   	// #1
  429de0:	bl	40be30 <log_get_max_level_realm@plt>
  429de4:	mov	w1, w0
  429de8:	ldr	w0, [sp, #216]
  429dec:	cmp	w0, w1
  429df0:	cset	w0, le
  429df4:	and	w0, w0, #0xff
  429df8:	and	x0, x0, #0xff
  429dfc:	cmp	x0, #0x0
  429e00:	b.eq	429e14 <parse_token+0x8190>  // b.none
  429e04:	add	x0, sp, #0x348
  429e08:	mov	x1, x0
  429e0c:	ldr	x0, [sp, #1168]
  429e10:	bl	40aba0 <sd_device_get_sysname@plt>
  429e14:	adrp	x0, 454000 <__func__.10675+0xa0>
  429e18:	add	x20, x0, #0xbb
  429e1c:	ldr	x0, [sp, #840]
  429e20:	cmp	x0, #0x0
  429e24:	b.eq	429e34 <parse_token+0x81b0>  // b.none
  429e28:	adrp	x0, 454000 <__func__.10675+0xa0>
  429e2c:	add	x19, x0, #0xd8
  429e30:	b	429e38 <parse_token+0x81b4>
  429e34:	mov	x19, #0x0                   	// #0
  429e38:	ldr	x21, [sp, #840]
  429e3c:	ldr	x0, [sp, #1160]
  429e40:	bl	41fb4c <strna>
  429e44:	mov	x2, x0
  429e48:	ldr	x0, [sp, #1152]
  429e4c:	cmp	x0, #0x0
  429e50:	b.eq	429e60 <parse_token+0x81dc>  // b.none
  429e54:	ldr	x0, [sp, #1152]
  429e58:	ldr	w0, [x0, #8]
  429e5c:	b	429e64 <parse_token+0x81e0>
  429e60:	mov	w0, #0x0                   	// #0
  429e64:	ldr	x1, [sp, #104]
  429e68:	str	x1, [sp, #32]
  429e6c:	str	w0, [sp, #24]
  429e70:	str	x2, [sp, #16]
  429e74:	adrp	x0, 454000 <__func__.10675+0xa0>
  429e78:	add	x0, x0, #0xa80
  429e7c:	str	x0, [sp, #8]
  429e80:	str	xzr, [sp]
  429e84:	mov	x7, #0x0                   	// #0
  429e88:	mov	x6, x21
  429e8c:	mov	x5, x19
  429e90:	adrp	x0, 455000 <__func__.10675+0x10a0>
  429e94:	add	x4, x0, #0x920
  429e98:	mov	w3, #0x3a8                 	// #936
  429e9c:	mov	x2, x20
  429ea0:	ldr	w1, [sp, #220]
  429ea4:	ldr	w0, [sp, #216]
  429ea8:	bl	40b020 <log_object_internal@plt>
  429eac:	b	42a9c0 <parse_token+0x8d3c>
  429eb0:	ldrsw	x0, [sp, #212]
  429eb4:	add	x0, x0, #0x1
  429eb8:	mov	x4, x0
  429ebc:	ldr	x3, [sp, #104]
  429ec0:	ldr	w2, [sp, #116]
  429ec4:	mov	w1, #0x2d                  	// #45
  429ec8:	ldr	x0, [sp, #848]
  429ecc:	bl	420e88 <rule_line_add_token>
  429ed0:	str	w0, [sp, #152]
  429ed4:	b	42a990 <parse_token+0x8d0c>
  429ed8:	ldr	x0, [sp, #136]
  429edc:	str	x0, [sp, #1096]
  429ee0:	ldr	x0, [sp, #1096]
  429ee4:	cmp	x0, #0x0
  429ee8:	b.eq	429ef8 <parse_token+0x8274>  // b.none
  429eec:	ldr	x0, [sp, #1096]
  429ef0:	ldr	x0, [x0, #32]
  429ef4:	b	429efc <parse_token+0x8278>
  429ef8:	mov	x0, #0x0                   	// #0
  429efc:	str	x0, [sp, #1104]
  429f00:	ldr	x0, [sp, #1104]
  429f04:	cmp	x0, #0x0
  429f08:	b.eq	429f18 <parse_token+0x8294>  // b.none
  429f0c:	ldr	x0, [sp, #1104]
  429f10:	ldr	x0, [x0, #8]
  429f14:	b	429f1c <parse_token+0x8298>
  429f18:	mov	x0, #0x0                   	// #0
  429f1c:	str	x0, [sp, #1112]
  429f20:	ldr	x0, [sp, #1104]
  429f24:	cmp	x0, #0x0
  429f28:	b.eq	429f38 <parse_token+0x82b4>  // b.none
  429f2c:	ldr	x0, [sp, #1104]
  429f30:	ldr	x0, [x0]
  429f34:	b	429f3c <parse_token+0x82b8>
  429f38:	mov	x0, #0x0                   	// #0
  429f3c:	str	x0, [sp, #1120]
  429f40:	str	xzr, [sp, #840]
  429f44:	str	xzr, [sp, #1128]
  429f48:	mov	w0, #0x3                   	// #3
  429f4c:	str	w0, [sp, #204]
  429f50:	mov	w0, #0x16                  	// #22
  429f54:	movk	w0, #0x4000, lsl #16
  429f58:	str	w0, [sp, #208]
  429f5c:	ldr	x0, [sp, #1128]
  429f60:	cmp	x0, #0x0
  429f64:	b.eq	429fa0 <parse_token+0x831c>  // b.none
  429f68:	mov	w0, #0x1                   	// #1
  429f6c:	bl	40be30 <log_get_max_level_realm@plt>
  429f70:	mov	w1, w0
  429f74:	ldr	w0, [sp, #204]
  429f78:	cmp	w0, w1
  429f7c:	cset	w0, le
  429f80:	and	w0, w0, #0xff
  429f84:	and	x0, x0, #0xff
  429f88:	cmp	x0, #0x0
  429f8c:	b.eq	429fa0 <parse_token+0x831c>  // b.none
  429f90:	add	x0, sp, #0x348
  429f94:	mov	x1, x0
  429f98:	ldr	x0, [sp, #1128]
  429f9c:	bl	40aba0 <sd_device_get_sysname@plt>
  429fa0:	adrp	x0, 454000 <__func__.10675+0xa0>
  429fa4:	add	x20, x0, #0xbb
  429fa8:	ldr	x0, [sp, #840]
  429fac:	cmp	x0, #0x0
  429fb0:	b.eq	429fc0 <parse_token+0x833c>  // b.none
  429fb4:	adrp	x0, 454000 <__func__.10675+0xa0>
  429fb8:	add	x19, x0, #0xd8
  429fbc:	b	429fc4 <parse_token+0x8340>
  429fc0:	mov	x19, #0x0                   	// #0
  429fc4:	ldr	x21, [sp, #840]
  429fc8:	ldr	x0, [sp, #1120]
  429fcc:	bl	41fb4c <strna>
  429fd0:	mov	x2, x0
  429fd4:	ldr	x0, [sp, #1112]
  429fd8:	cmp	x0, #0x0
  429fdc:	b.eq	429fec <parse_token+0x8368>  // b.none
  429fe0:	ldr	x0, [sp, #1112]
  429fe4:	ldr	w0, [x0, #8]
  429fe8:	b	429ff0 <parse_token+0x836c>
  429fec:	mov	w0, #0x0                   	// #0
  429ff0:	ldr	x1, [sp, #128]
  429ff4:	str	x1, [sp, #40]
  429ff8:	adrp	x1, 454000 <__func__.10675+0xa0>
  429ffc:	add	x1, x1, #0x278
  42a000:	str	x1, [sp, #32]
  42a004:	str	w0, [sp, #24]
  42a008:	str	x2, [sp, #16]
  42a00c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a010:	add	x0, x0, #0x288
  42a014:	str	x0, [sp, #8]
  42a018:	str	xzr, [sp]
  42a01c:	mov	x7, #0x0                   	// #0
  42a020:	mov	x6, x21
  42a024:	mov	x5, x19
  42a028:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42a02c:	add	x4, x0, #0x920
  42a030:	mov	w3, #0x3ac                 	// #940
  42a034:	mov	x2, x20
  42a038:	ldr	w1, [sp, #208]
  42a03c:	ldr	w0, [sp, #204]
  42a040:	bl	40b020 <log_object_internal@plt>
  42a044:	b	42a9c0 <parse_token+0x8d3c>
  42a048:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a04c:	add	x1, x0, #0xab0
  42a050:	ldr	x0, [sp, #128]
  42a054:	bl	40b710 <strcmp@plt>
  42a058:	cmp	w0, #0x0
  42a05c:	b.ne	42a4f4 <parse_token+0x8870>  // b.any
  42a060:	ldr	x0, [sp, #120]
  42a064:	cmp	x0, #0x0
  42a068:	b.eq	42a1dc <parse_token+0x8558>  // b.none
  42a06c:	ldr	x0, [sp, #136]
  42a070:	str	x0, [sp, #1056]
  42a074:	ldr	x0, [sp, #1056]
  42a078:	cmp	x0, #0x0
  42a07c:	b.eq	42a08c <parse_token+0x8408>  // b.none
  42a080:	ldr	x0, [sp, #1056]
  42a084:	ldr	x0, [x0, #32]
  42a088:	b	42a090 <parse_token+0x840c>
  42a08c:	mov	x0, #0x0                   	// #0
  42a090:	str	x0, [sp, #1064]
  42a094:	ldr	x0, [sp, #1064]
  42a098:	cmp	x0, #0x0
  42a09c:	b.eq	42a0ac <parse_token+0x8428>  // b.none
  42a0a0:	ldr	x0, [sp, #1064]
  42a0a4:	ldr	x0, [x0, #8]
  42a0a8:	b	42a0b0 <parse_token+0x842c>
  42a0ac:	mov	x0, #0x0                   	// #0
  42a0b0:	str	x0, [sp, #1072]
  42a0b4:	ldr	x0, [sp, #1064]
  42a0b8:	cmp	x0, #0x0
  42a0bc:	b.eq	42a0cc <parse_token+0x8448>  // b.none
  42a0c0:	ldr	x0, [sp, #1064]
  42a0c4:	ldr	x0, [x0]
  42a0c8:	b	42a0d0 <parse_token+0x844c>
  42a0cc:	mov	x0, #0x0                   	// #0
  42a0d0:	str	x0, [sp, #1080]
  42a0d4:	str	xzr, [sp, #840]
  42a0d8:	str	xzr, [sp, #1088]
  42a0dc:	mov	w0, #0x3                   	// #3
  42a0e0:	str	w0, [sp, #196]
  42a0e4:	mov	w0, #0x16                  	// #22
  42a0e8:	movk	w0, #0x4000, lsl #16
  42a0ec:	str	w0, [sp, #200]
  42a0f0:	ldr	x0, [sp, #1088]
  42a0f4:	cmp	x0, #0x0
  42a0f8:	b.eq	42a134 <parse_token+0x84b0>  // b.none
  42a0fc:	mov	w0, #0x1                   	// #1
  42a100:	bl	40be30 <log_get_max_level_realm@plt>
  42a104:	mov	w1, w0
  42a108:	ldr	w0, [sp, #196]
  42a10c:	cmp	w0, w1
  42a110:	cset	w0, le
  42a114:	and	w0, w0, #0xff
  42a118:	and	x0, x0, #0xff
  42a11c:	cmp	x0, #0x0
  42a120:	b.eq	42a134 <parse_token+0x84b0>  // b.none
  42a124:	add	x0, sp, #0x348
  42a128:	mov	x1, x0
  42a12c:	ldr	x0, [sp, #1088]
  42a130:	bl	40aba0 <sd_device_get_sysname@plt>
  42a134:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a138:	add	x20, x0, #0xbb
  42a13c:	ldr	x0, [sp, #840]
  42a140:	cmp	x0, #0x0
  42a144:	b.eq	42a154 <parse_token+0x84d0>  // b.none
  42a148:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a14c:	add	x19, x0, #0xd8
  42a150:	b	42a158 <parse_token+0x84d4>
  42a154:	mov	x19, #0x0                   	// #0
  42a158:	ldr	x21, [sp, #840]
  42a15c:	ldr	x0, [sp, #1080]
  42a160:	bl	41fb4c <strna>
  42a164:	mov	x2, x0
  42a168:	ldr	x0, [sp, #1072]
  42a16c:	cmp	x0, #0x0
  42a170:	b.eq	42a180 <parse_token+0x84fc>  // b.none
  42a174:	ldr	x0, [sp, #1072]
  42a178:	ldr	w0, [x0, #8]
  42a17c:	b	42a184 <parse_token+0x8500>
  42a180:	mov	w0, #0x0                   	// #0
  42a184:	ldr	x1, [sp, #128]
  42a188:	str	x1, [sp, #40]
  42a18c:	adrp	x1, 454000 <__func__.10675+0xa0>
  42a190:	add	x1, x1, #0x278
  42a194:	str	x1, [sp, #32]
  42a198:	str	w0, [sp, #24]
  42a19c:	str	x2, [sp, #16]
  42a1a0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a1a4:	add	x0, x0, #0x288
  42a1a8:	str	x0, [sp, #8]
  42a1ac:	str	xzr, [sp]
  42a1b0:	mov	x7, #0x0                   	// #0
  42a1b4:	mov	x6, x21
  42a1b8:	mov	x5, x19
  42a1bc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42a1c0:	add	x4, x0, #0x920
  42a1c4:	mov	w3, #0x3af                 	// #943
  42a1c8:	mov	x2, x20
  42a1cc:	ldr	w1, [sp, #200]
  42a1d0:	ldr	w0, [sp, #196]
  42a1d4:	bl	40b020 <log_object_internal@plt>
  42a1d8:	b	42a9c0 <parse_token+0x8d3c>
  42a1dc:	ldr	w0, [sp, #116]
  42a1e0:	cmp	w0, #0x4
  42a1e4:	b.eq	42a358 <parse_token+0x86d4>  // b.none
  42a1e8:	ldr	x0, [sp, #136]
  42a1ec:	str	x0, [sp, #1016]
  42a1f0:	ldr	x0, [sp, #1016]
  42a1f4:	cmp	x0, #0x0
  42a1f8:	b.eq	42a208 <parse_token+0x8584>  // b.none
  42a1fc:	ldr	x0, [sp, #1016]
  42a200:	ldr	x0, [x0, #32]
  42a204:	b	42a20c <parse_token+0x8588>
  42a208:	mov	x0, #0x0                   	// #0
  42a20c:	str	x0, [sp, #1024]
  42a210:	ldr	x0, [sp, #1024]
  42a214:	cmp	x0, #0x0
  42a218:	b.eq	42a228 <parse_token+0x85a4>  // b.none
  42a21c:	ldr	x0, [sp, #1024]
  42a220:	ldr	x0, [x0, #8]
  42a224:	b	42a22c <parse_token+0x85a8>
  42a228:	mov	x0, #0x0                   	// #0
  42a22c:	str	x0, [sp, #1032]
  42a230:	ldr	x0, [sp, #1024]
  42a234:	cmp	x0, #0x0
  42a238:	b.eq	42a248 <parse_token+0x85c4>  // b.none
  42a23c:	ldr	x0, [sp, #1024]
  42a240:	ldr	x0, [x0]
  42a244:	b	42a24c <parse_token+0x85c8>
  42a248:	mov	x0, #0x0                   	// #0
  42a24c:	str	x0, [sp, #1040]
  42a250:	str	xzr, [sp, #840]
  42a254:	str	xzr, [sp, #1048]
  42a258:	mov	w0, #0x3                   	// #3
  42a25c:	str	w0, [sp, #188]
  42a260:	mov	w0, #0x16                  	// #22
  42a264:	movk	w0, #0x4000, lsl #16
  42a268:	str	w0, [sp, #192]
  42a26c:	ldr	x0, [sp, #1048]
  42a270:	cmp	x0, #0x0
  42a274:	b.eq	42a2b0 <parse_token+0x862c>  // b.none
  42a278:	mov	w0, #0x1                   	// #1
  42a27c:	bl	40be30 <log_get_max_level_realm@plt>
  42a280:	mov	w1, w0
  42a284:	ldr	w0, [sp, #188]
  42a288:	cmp	w0, w1
  42a28c:	cset	w0, le
  42a290:	and	w0, w0, #0xff
  42a294:	and	x0, x0, #0xff
  42a298:	cmp	x0, #0x0
  42a29c:	b.eq	42a2b0 <parse_token+0x862c>  // b.none
  42a2a0:	add	x0, sp, #0x348
  42a2a4:	mov	x1, x0
  42a2a8:	ldr	x0, [sp, #1048]
  42a2ac:	bl	40aba0 <sd_device_get_sysname@plt>
  42a2b0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a2b4:	add	x20, x0, #0xbb
  42a2b8:	ldr	x0, [sp, #840]
  42a2bc:	cmp	x0, #0x0
  42a2c0:	b.eq	42a2d0 <parse_token+0x864c>  // b.none
  42a2c4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a2c8:	add	x19, x0, #0xd8
  42a2cc:	b	42a2d4 <parse_token+0x8650>
  42a2d0:	mov	x19, #0x0                   	// #0
  42a2d4:	ldr	x21, [sp, #840]
  42a2d8:	ldr	x0, [sp, #1040]
  42a2dc:	bl	41fb4c <strna>
  42a2e0:	mov	x2, x0
  42a2e4:	ldr	x0, [sp, #1032]
  42a2e8:	cmp	x0, #0x0
  42a2ec:	b.eq	42a2fc <parse_token+0x8678>  // b.none
  42a2f0:	ldr	x0, [sp, #1032]
  42a2f4:	ldr	w0, [x0, #8]
  42a2f8:	b	42a300 <parse_token+0x867c>
  42a2fc:	mov	w0, #0x0                   	// #0
  42a300:	ldr	x1, [sp, #128]
  42a304:	str	x1, [sp, #40]
  42a308:	adrp	x1, 454000 <__func__.10675+0xa0>
  42a30c:	add	x1, x1, #0x348
  42a310:	str	x1, [sp, #32]
  42a314:	str	w0, [sp, #24]
  42a318:	str	x2, [sp, #16]
  42a31c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a320:	add	x0, x0, #0x288
  42a324:	str	x0, [sp, #8]
  42a328:	str	xzr, [sp]
  42a32c:	mov	x7, #0x0                   	// #0
  42a330:	mov	x6, x21
  42a334:	mov	x5, x19
  42a338:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42a33c:	add	x4, x0, #0x920
  42a340:	mov	w3, #0x3b1                 	// #945
  42a344:	mov	x2, x20
  42a348:	ldr	w1, [sp, #192]
  42a34c:	ldr	w0, [sp, #188]
  42a350:	bl	40b020 <log_object_internal@plt>
  42a354:	b	42a9c0 <parse_token+0x8d3c>
  42a358:	ldr	x0, [sp, #848]
  42a35c:	ldr	w0, [x0, #12]
  42a360:	and	w0, w0, #0x8
  42a364:	cmp	w0, #0x0
  42a368:	b.eq	42a4cc <parse_token+0x8848>  // b.none
  42a36c:	ldr	x0, [sp, #136]
  42a370:	str	x0, [sp, #976]
  42a374:	ldr	x0, [sp, #976]
  42a378:	cmp	x0, #0x0
  42a37c:	b.eq	42a38c <parse_token+0x8708>  // b.none
  42a380:	ldr	x0, [sp, #976]
  42a384:	ldr	x0, [x0, #32]
  42a388:	b	42a390 <parse_token+0x870c>
  42a38c:	mov	x0, #0x0                   	// #0
  42a390:	str	x0, [sp, #984]
  42a394:	ldr	x0, [sp, #984]
  42a398:	cmp	x0, #0x0
  42a39c:	b.eq	42a3ac <parse_token+0x8728>  // b.none
  42a3a0:	ldr	x0, [sp, #984]
  42a3a4:	ldr	x0, [x0, #8]
  42a3a8:	b	42a3b0 <parse_token+0x872c>
  42a3ac:	mov	x0, #0x0                   	// #0
  42a3b0:	str	x0, [sp, #992]
  42a3b4:	ldr	x0, [sp, #984]
  42a3b8:	cmp	x0, #0x0
  42a3bc:	b.eq	42a3cc <parse_token+0x8748>  // b.none
  42a3c0:	ldr	x0, [sp, #984]
  42a3c4:	ldr	x0, [x0]
  42a3c8:	b	42a3d0 <parse_token+0x874c>
  42a3cc:	mov	x0, #0x0                   	// #0
  42a3d0:	str	x0, [sp, #1000]
  42a3d4:	str	xzr, [sp, #840]
  42a3d8:	str	xzr, [sp, #1008]
  42a3dc:	mov	w0, #0x4                   	// #4
  42a3e0:	str	w0, [sp, #180]
  42a3e4:	str	wzr, [sp, #184]
  42a3e8:	ldr	x0, [sp, #1008]
  42a3ec:	cmp	x0, #0x0
  42a3f0:	b.eq	42a42c <parse_token+0x87a8>  // b.none
  42a3f4:	mov	w0, #0x1                   	// #1
  42a3f8:	bl	40be30 <log_get_max_level_realm@plt>
  42a3fc:	mov	w1, w0
  42a400:	ldr	w0, [sp, #180]
  42a404:	cmp	w0, w1
  42a408:	cset	w0, le
  42a40c:	and	w0, w0, #0xff
  42a410:	and	x0, x0, #0xff
  42a414:	cmp	x0, #0x0
  42a418:	b.eq	42a42c <parse_token+0x87a8>  // b.none
  42a41c:	add	x0, sp, #0x348
  42a420:	mov	x1, x0
  42a424:	ldr	x0, [sp, #1008]
  42a428:	bl	40aba0 <sd_device_get_sysname@plt>
  42a42c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a430:	add	x20, x0, #0xbb
  42a434:	ldr	x0, [sp, #840]
  42a438:	cmp	x0, #0x0
  42a43c:	b.eq	42a44c <parse_token+0x87c8>  // b.none
  42a440:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a444:	add	x19, x0, #0xd8
  42a448:	b	42a450 <parse_token+0x87cc>
  42a44c:	mov	x19, #0x0                   	// #0
  42a450:	ldr	x21, [sp, #840]
  42a454:	ldr	x0, [sp, #1000]
  42a458:	bl	41fb4c <strna>
  42a45c:	mov	x2, x0
  42a460:	ldr	x0, [sp, #992]
  42a464:	cmp	x0, #0x0
  42a468:	b.eq	42a478 <parse_token+0x87f4>  // b.none
  42a46c:	ldr	x0, [sp, #992]
  42a470:	ldr	w0, [x0, #8]
  42a474:	b	42a47c <parse_token+0x87f8>
  42a478:	mov	w0, #0x0                   	// #0
  42a47c:	ldr	x1, [sp, #104]
  42a480:	str	x1, [sp, #32]
  42a484:	str	w0, [sp, #24]
  42a488:	str	x2, [sp, #16]
  42a48c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a490:	add	x0, x0, #0xab8
  42a494:	str	x0, [sp, #8]
  42a498:	str	xzr, [sp]
  42a49c:	mov	x7, #0x0                   	// #0
  42a4a0:	mov	x6, x21
  42a4a4:	mov	x5, x19
  42a4a8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42a4ac:	add	x4, x0, #0x920
  42a4b0:	mov	w3, #0x3b3                 	// #947
  42a4b4:	mov	x2, x20
  42a4b8:	ldr	w1, [sp, #184]
  42a4bc:	ldr	w0, [sp, #180]
  42a4c0:	bl	40b020 <log_object_internal@plt>
  42a4c4:	mov	w0, #0x0                   	// #0
  42a4c8:	b	42a9c0 <parse_token+0x8d3c>
  42a4cc:	ldr	x0, [sp, #848]
  42a4d0:	ldr	x1, [sp, #104]
  42a4d4:	str	x1, [x0, #24]
  42a4d8:	ldr	x0, [sp, #848]
  42a4dc:	ldr	w0, [x0, #12]
  42a4e0:	orr	w1, w0, #0x8
  42a4e4:	ldr	x0, [sp, #848]
  42a4e8:	str	w1, [x0, #12]
  42a4ec:	mov	w0, #0x1                   	// #1
  42a4f0:	b	42a9c0 <parse_token+0x8d3c>
  42a4f4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a4f8:	add	x1, x0, #0xaf0
  42a4fc:	ldr	x0, [sp, #128]
  42a500:	bl	40b710 <strcmp@plt>
  42a504:	cmp	w0, #0x0
  42a508:	b.ne	42a82c <parse_token+0x8ba8>  // b.any
  42a50c:	ldr	x0, [sp, #120]
  42a510:	cmp	x0, #0x0
  42a514:	b.eq	42a688 <parse_token+0x8a04>  // b.none
  42a518:	ldr	x0, [sp, #136]
  42a51c:	str	x0, [sp, #936]
  42a520:	ldr	x0, [sp, #936]
  42a524:	cmp	x0, #0x0
  42a528:	b.eq	42a538 <parse_token+0x88b4>  // b.none
  42a52c:	ldr	x0, [sp, #936]
  42a530:	ldr	x0, [x0, #32]
  42a534:	b	42a53c <parse_token+0x88b8>
  42a538:	mov	x0, #0x0                   	// #0
  42a53c:	str	x0, [sp, #944]
  42a540:	ldr	x0, [sp, #944]
  42a544:	cmp	x0, #0x0
  42a548:	b.eq	42a558 <parse_token+0x88d4>  // b.none
  42a54c:	ldr	x0, [sp, #944]
  42a550:	ldr	x0, [x0, #8]
  42a554:	b	42a55c <parse_token+0x88d8>
  42a558:	mov	x0, #0x0                   	// #0
  42a55c:	str	x0, [sp, #952]
  42a560:	ldr	x0, [sp, #944]
  42a564:	cmp	x0, #0x0
  42a568:	b.eq	42a578 <parse_token+0x88f4>  // b.none
  42a56c:	ldr	x0, [sp, #944]
  42a570:	ldr	x0, [x0]
  42a574:	b	42a57c <parse_token+0x88f8>
  42a578:	mov	x0, #0x0                   	// #0
  42a57c:	str	x0, [sp, #960]
  42a580:	str	xzr, [sp, #840]
  42a584:	str	xzr, [sp, #968]
  42a588:	mov	w0, #0x3                   	// #3
  42a58c:	str	w0, [sp, #172]
  42a590:	mov	w0, #0x16                  	// #22
  42a594:	movk	w0, #0x4000, lsl #16
  42a598:	str	w0, [sp, #176]
  42a59c:	ldr	x0, [sp, #968]
  42a5a0:	cmp	x0, #0x0
  42a5a4:	b.eq	42a5e0 <parse_token+0x895c>  // b.none
  42a5a8:	mov	w0, #0x1                   	// #1
  42a5ac:	bl	40be30 <log_get_max_level_realm@plt>
  42a5b0:	mov	w1, w0
  42a5b4:	ldr	w0, [sp, #172]
  42a5b8:	cmp	w0, w1
  42a5bc:	cset	w0, le
  42a5c0:	and	w0, w0, #0xff
  42a5c4:	and	x0, x0, #0xff
  42a5c8:	cmp	x0, #0x0
  42a5cc:	b.eq	42a5e0 <parse_token+0x895c>  // b.none
  42a5d0:	add	x0, sp, #0x348
  42a5d4:	mov	x1, x0
  42a5d8:	ldr	x0, [sp, #968]
  42a5dc:	bl	40aba0 <sd_device_get_sysname@plt>
  42a5e0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a5e4:	add	x20, x0, #0xbb
  42a5e8:	ldr	x0, [sp, #840]
  42a5ec:	cmp	x0, #0x0
  42a5f0:	b.eq	42a600 <parse_token+0x897c>  // b.none
  42a5f4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a5f8:	add	x19, x0, #0xd8
  42a5fc:	b	42a604 <parse_token+0x8980>
  42a600:	mov	x19, #0x0                   	// #0
  42a604:	ldr	x21, [sp, #840]
  42a608:	ldr	x0, [sp, #960]
  42a60c:	bl	41fb4c <strna>
  42a610:	mov	x2, x0
  42a614:	ldr	x0, [sp, #952]
  42a618:	cmp	x0, #0x0
  42a61c:	b.eq	42a62c <parse_token+0x89a8>  // b.none
  42a620:	ldr	x0, [sp, #952]
  42a624:	ldr	w0, [x0, #8]
  42a628:	b	42a630 <parse_token+0x89ac>
  42a62c:	mov	w0, #0x0                   	// #0
  42a630:	ldr	x1, [sp, #128]
  42a634:	str	x1, [sp, #40]
  42a638:	adrp	x1, 454000 <__func__.10675+0xa0>
  42a63c:	add	x1, x1, #0x278
  42a640:	str	x1, [sp, #32]
  42a644:	str	w0, [sp, #24]
  42a648:	str	x2, [sp, #16]
  42a64c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a650:	add	x0, x0, #0x288
  42a654:	str	x0, [sp, #8]
  42a658:	str	xzr, [sp]
  42a65c:	mov	x7, #0x0                   	// #0
  42a660:	mov	x6, x21
  42a664:	mov	x5, x19
  42a668:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42a66c:	add	x4, x0, #0x920
  42a670:	mov	w3, #0x3bc                 	// #956
  42a674:	mov	x2, x20
  42a678:	ldr	w1, [sp, #176]
  42a67c:	ldr	w0, [sp, #172]
  42a680:	bl	40b020 <log_object_internal@plt>
  42a684:	b	42a9c0 <parse_token+0x8d3c>
  42a688:	ldr	w0, [sp, #116]
  42a68c:	cmp	w0, #0x4
  42a690:	b.eq	42a804 <parse_token+0x8b80>  // b.none
  42a694:	ldr	x0, [sp, #136]
  42a698:	str	x0, [sp, #896]
  42a69c:	ldr	x0, [sp, #896]
  42a6a0:	cmp	x0, #0x0
  42a6a4:	b.eq	42a6b4 <parse_token+0x8a30>  // b.none
  42a6a8:	ldr	x0, [sp, #896]
  42a6ac:	ldr	x0, [x0, #32]
  42a6b0:	b	42a6b8 <parse_token+0x8a34>
  42a6b4:	mov	x0, #0x0                   	// #0
  42a6b8:	str	x0, [sp, #904]
  42a6bc:	ldr	x0, [sp, #904]
  42a6c0:	cmp	x0, #0x0
  42a6c4:	b.eq	42a6d4 <parse_token+0x8a50>  // b.none
  42a6c8:	ldr	x0, [sp, #904]
  42a6cc:	ldr	x0, [x0, #8]
  42a6d0:	b	42a6d8 <parse_token+0x8a54>
  42a6d4:	mov	x0, #0x0                   	// #0
  42a6d8:	str	x0, [sp, #912]
  42a6dc:	ldr	x0, [sp, #904]
  42a6e0:	cmp	x0, #0x0
  42a6e4:	b.eq	42a6f4 <parse_token+0x8a70>  // b.none
  42a6e8:	ldr	x0, [sp, #904]
  42a6ec:	ldr	x0, [x0]
  42a6f0:	b	42a6f8 <parse_token+0x8a74>
  42a6f4:	mov	x0, #0x0                   	// #0
  42a6f8:	str	x0, [sp, #920]
  42a6fc:	str	xzr, [sp, #840]
  42a700:	str	xzr, [sp, #928]
  42a704:	mov	w0, #0x3                   	// #3
  42a708:	str	w0, [sp, #164]
  42a70c:	mov	w0, #0x16                  	// #22
  42a710:	movk	w0, #0x4000, lsl #16
  42a714:	str	w0, [sp, #168]
  42a718:	ldr	x0, [sp, #928]
  42a71c:	cmp	x0, #0x0
  42a720:	b.eq	42a75c <parse_token+0x8ad8>  // b.none
  42a724:	mov	w0, #0x1                   	// #1
  42a728:	bl	40be30 <log_get_max_level_realm@plt>
  42a72c:	mov	w1, w0
  42a730:	ldr	w0, [sp, #164]
  42a734:	cmp	w0, w1
  42a738:	cset	w0, le
  42a73c:	and	w0, w0, #0xff
  42a740:	and	x0, x0, #0xff
  42a744:	cmp	x0, #0x0
  42a748:	b.eq	42a75c <parse_token+0x8ad8>  // b.none
  42a74c:	add	x0, sp, #0x348
  42a750:	mov	x1, x0
  42a754:	ldr	x0, [sp, #928]
  42a758:	bl	40aba0 <sd_device_get_sysname@plt>
  42a75c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a760:	add	x20, x0, #0xbb
  42a764:	ldr	x0, [sp, #840]
  42a768:	cmp	x0, #0x0
  42a76c:	b.eq	42a77c <parse_token+0x8af8>  // b.none
  42a770:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a774:	add	x19, x0, #0xd8
  42a778:	b	42a780 <parse_token+0x8afc>
  42a77c:	mov	x19, #0x0                   	// #0
  42a780:	ldr	x21, [sp, #840]
  42a784:	ldr	x0, [sp, #920]
  42a788:	bl	41fb4c <strna>
  42a78c:	mov	x2, x0
  42a790:	ldr	x0, [sp, #912]
  42a794:	cmp	x0, #0x0
  42a798:	b.eq	42a7a8 <parse_token+0x8b24>  // b.none
  42a79c:	ldr	x0, [sp, #912]
  42a7a0:	ldr	w0, [x0, #8]
  42a7a4:	b	42a7ac <parse_token+0x8b28>
  42a7a8:	mov	w0, #0x0                   	// #0
  42a7ac:	ldr	x1, [sp, #128]
  42a7b0:	str	x1, [sp, #40]
  42a7b4:	adrp	x1, 454000 <__func__.10675+0xa0>
  42a7b8:	add	x1, x1, #0x348
  42a7bc:	str	x1, [sp, #32]
  42a7c0:	str	w0, [sp, #24]
  42a7c4:	str	x2, [sp, #16]
  42a7c8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a7cc:	add	x0, x0, #0x288
  42a7d0:	str	x0, [sp, #8]
  42a7d4:	str	xzr, [sp]
  42a7d8:	mov	x7, #0x0                   	// #0
  42a7dc:	mov	x6, x21
  42a7e0:	mov	x5, x19
  42a7e4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42a7e8:	add	x4, x0, #0x920
  42a7ec:	mov	w3, #0x3be                 	// #958
  42a7f0:	mov	x2, x20
  42a7f4:	ldr	w1, [sp, #168]
  42a7f8:	ldr	w0, [sp, #164]
  42a7fc:	bl	40b020 <log_object_internal@plt>
  42a800:	b	42a9c0 <parse_token+0x8d3c>
  42a804:	ldr	x0, [sp, #848]
  42a808:	ldr	x1, [sp, #104]
  42a80c:	str	x1, [x0, #16]
  42a810:	ldr	x0, [sp, #848]
  42a814:	ldr	w0, [x0, #12]
  42a818:	orr	w1, w0, #0x10
  42a81c:	ldr	x0, [sp, #848]
  42a820:	str	w1, [x0, #12]
  42a824:	mov	w0, #0x1                   	// #1
  42a828:	b	42a9c0 <parse_token+0x8d3c>
  42a82c:	ldr	x0, [sp, #136]
  42a830:	str	x0, [sp, #856]
  42a834:	ldr	x0, [sp, #856]
  42a838:	cmp	x0, #0x0
  42a83c:	b.eq	42a84c <parse_token+0x8bc8>  // b.none
  42a840:	ldr	x0, [sp, #856]
  42a844:	ldr	x0, [x0, #32]
  42a848:	b	42a850 <parse_token+0x8bcc>
  42a84c:	mov	x0, #0x0                   	// #0
  42a850:	str	x0, [sp, #864]
  42a854:	ldr	x0, [sp, #864]
  42a858:	cmp	x0, #0x0
  42a85c:	b.eq	42a86c <parse_token+0x8be8>  // b.none
  42a860:	ldr	x0, [sp, #864]
  42a864:	ldr	x0, [x0, #8]
  42a868:	b	42a870 <parse_token+0x8bec>
  42a86c:	mov	x0, #0x0                   	// #0
  42a870:	str	x0, [sp, #872]
  42a874:	ldr	x0, [sp, #864]
  42a878:	cmp	x0, #0x0
  42a87c:	b.eq	42a88c <parse_token+0x8c08>  // b.none
  42a880:	ldr	x0, [sp, #864]
  42a884:	ldr	x0, [x0]
  42a888:	b	42a890 <parse_token+0x8c0c>
  42a88c:	mov	x0, #0x0                   	// #0
  42a890:	str	x0, [sp, #880]
  42a894:	str	xzr, [sp, #840]
  42a898:	str	xzr, [sp, #888]
  42a89c:	mov	w0, #0x3                   	// #3
  42a8a0:	str	w0, [sp, #156]
  42a8a4:	mov	w0, #0x16                  	// #22
  42a8a8:	movk	w0, #0x4000, lsl #16
  42a8ac:	str	w0, [sp, #160]
  42a8b0:	ldr	x0, [sp, #888]
  42a8b4:	cmp	x0, #0x0
  42a8b8:	b.eq	42a8f4 <parse_token+0x8c70>  // b.none
  42a8bc:	mov	w0, #0x1                   	// #1
  42a8c0:	bl	40be30 <log_get_max_level_realm@plt>
  42a8c4:	mov	w1, w0
  42a8c8:	ldr	w0, [sp, #156]
  42a8cc:	cmp	w0, w1
  42a8d0:	cset	w0, le
  42a8d4:	and	w0, w0, #0xff
  42a8d8:	and	x0, x0, #0xff
  42a8dc:	cmp	x0, #0x0
  42a8e0:	b.eq	42a8f4 <parse_token+0x8c70>  // b.none
  42a8e4:	add	x0, sp, #0x348
  42a8e8:	mov	x1, x0
  42a8ec:	ldr	x0, [sp, #888]
  42a8f0:	bl	40aba0 <sd_device_get_sysname@plt>
  42a8f4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a8f8:	add	x20, x0, #0xbb
  42a8fc:	ldr	x0, [sp, #840]
  42a900:	cmp	x0, #0x0
  42a904:	b.eq	42a914 <parse_token+0x8c90>  // b.none
  42a908:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a90c:	add	x19, x0, #0xd8
  42a910:	b	42a918 <parse_token+0x8c94>
  42a914:	mov	x19, #0x0                   	// #0
  42a918:	ldr	x21, [sp, #840]
  42a91c:	ldr	x0, [sp, #880]
  42a920:	bl	41fb4c <strna>
  42a924:	mov	x2, x0
  42a928:	ldr	x0, [sp, #872]
  42a92c:	cmp	x0, #0x0
  42a930:	b.eq	42a940 <parse_token+0x8cbc>  // b.none
  42a934:	ldr	x0, [sp, #872]
  42a938:	ldr	w0, [x0, #8]
  42a93c:	b	42a944 <parse_token+0x8cc0>
  42a940:	mov	w0, #0x0                   	// #0
  42a944:	ldr	x1, [sp, #128]
  42a948:	str	x1, [sp, #32]
  42a94c:	str	w0, [sp, #24]
  42a950:	str	x2, [sp, #16]
  42a954:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a958:	add	x0, x0, #0xaf8
  42a95c:	str	x0, [sp, #8]
  42a960:	str	xzr, [sp]
  42a964:	mov	x7, #0x0                   	// #0
  42a968:	mov	x6, x21
  42a96c:	mov	x5, x19
  42a970:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42a974:	add	x4, x0, #0x920
  42a978:	mov	w3, #0x3c4                 	// #964
  42a97c:	mov	x2, x20
  42a980:	ldr	w1, [sp, #160]
  42a984:	ldr	w0, [sp, #156]
  42a988:	bl	40b020 <log_object_internal@plt>
  42a98c:	b	42a9c0 <parse_token+0x8d3c>
  42a990:	ldr	w0, [sp, #152]
  42a994:	cmp	w0, #0x0
  42a998:	b.ge	42a9bc <parse_token+0x8d38>  // b.tcont
  42a99c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42a9a0:	add	x1, x0, #0xbb
  42a9a4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42a9a8:	add	x3, x0, #0x920
  42a9ac:	mov	w2, #0x3c6                 	// #966
  42a9b0:	mov	w0, #0x1                   	// #1
  42a9b4:	bl	40bda0 <log_oom_internal@plt>
  42a9b8:	b	42a9c0 <parse_token+0x8d3c>
  42a9bc:	mov	w0, #0x1                   	// #1
  42a9c0:	mov	w1, w0
  42a9c4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42a9c8:	ldr	x0, [x0, #4032]
  42a9cc:	ldr	x2, [sp, #4328]
  42a9d0:	ldr	x0, [x0]
  42a9d4:	eor	x0, x2, x0
  42a9d8:	cmp	x0, #0x0
  42a9dc:	b.eq	42a9e4 <parse_token+0x8d60>  // b.none
  42a9e0:	bl	40b280 <__stack_chk_fail@plt>
  42a9e4:	mov	w0, w1
  42a9e8:	ldp	x19, x20, [sp, #64]
  42a9ec:	ldr	x21, [sp, #80]
  42a9f0:	ldp	x29, x30, [sp, #48]
  42a9f4:	mov	x12, #0x10f0                	// #4336
  42a9f8:	add	sp, sp, x12
  42a9fc:	ret

000000000042aa00 <parse_operator>:
  42aa00:	stp	x29, x30, [sp, #-32]!
  42aa04:	mov	x29, sp
  42aa08:	str	x0, [sp, #24]
  42aa0c:	ldr	x0, [sp, #24]
  42aa10:	cmp	x0, #0x0
  42aa14:	cset	w0, eq  // eq = none
  42aa18:	and	w0, w0, #0xff
  42aa1c:	and	x0, x0, #0xff
  42aa20:	cmp	x0, #0x0
  42aa24:	b.eq	42aa50 <parse_operator+0x50>  // b.none
  42aa28:	adrp	x0, 454000 <__func__.10675+0xa0>
  42aa2c:	add	x1, x0, #0xbb
  42aa30:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42aa34:	add	x4, x0, #0x930
  42aa38:	mov	w3, #0x3cc                 	// #972
  42aa3c:	mov	x2, x1
  42aa40:	adrp	x0, 454000 <__func__.10675+0xa0>
  42aa44:	add	x1, x0, #0xb10
  42aa48:	mov	w0, #0x1                   	// #1
  42aa4c:	bl	40abb0 <log_assert_failed_realm@plt>
  42aa50:	adrp	x0, 454000 <__func__.10675+0xa0>
  42aa54:	add	x1, x0, #0xb18
  42aa58:	ldr	x0, [sp, #24]
  42aa5c:	bl	41fbb0 <startswith>
  42aa60:	cmp	x0, #0x0
  42aa64:	b.eq	42aa70 <parse_operator+0x70>  // b.none
  42aa68:	mov	w0, #0x0                   	// #0
  42aa6c:	b	42ab14 <parse_operator+0x114>
  42aa70:	adrp	x0, 454000 <__func__.10675+0xa0>
  42aa74:	add	x1, x0, #0xb20
  42aa78:	ldr	x0, [sp, #24]
  42aa7c:	bl	41fbb0 <startswith>
  42aa80:	cmp	x0, #0x0
  42aa84:	b.eq	42aa90 <parse_operator+0x90>  // b.none
  42aa88:	mov	w0, #0x1                   	// #1
  42aa8c:	b	42ab14 <parse_operator+0x114>
  42aa90:	adrp	x0, 454000 <__func__.10675+0xa0>
  42aa94:	add	x1, x0, #0xb28
  42aa98:	ldr	x0, [sp, #24]
  42aa9c:	bl	41fbb0 <startswith>
  42aaa0:	cmp	x0, #0x0
  42aaa4:	b.eq	42aab0 <parse_operator+0xb0>  // b.none
  42aaa8:	mov	w0, #0x2                   	// #2
  42aaac:	b	42ab14 <parse_operator+0x114>
  42aab0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42aab4:	add	x1, x0, #0xb30
  42aab8:	ldr	x0, [sp, #24]
  42aabc:	bl	41fbb0 <startswith>
  42aac0:	cmp	x0, #0x0
  42aac4:	b.eq	42aad0 <parse_operator+0xd0>  // b.none
  42aac8:	mov	w0, #0x3                   	// #3
  42aacc:	b	42ab14 <parse_operator+0x114>
  42aad0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42aad4:	add	x1, x0, #0xb38
  42aad8:	ldr	x0, [sp, #24]
  42aadc:	bl	41fbb0 <startswith>
  42aae0:	cmp	x0, #0x0
  42aae4:	b.eq	42aaf0 <parse_operator+0xf0>  // b.none
  42aae8:	mov	w0, #0x4                   	// #4
  42aaec:	b	42ab14 <parse_operator+0x114>
  42aaf0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42aaf4:	add	x1, x0, #0xb40
  42aaf8:	ldr	x0, [sp, #24]
  42aafc:	bl	41fbb0 <startswith>
  42ab00:	cmp	x0, #0x0
  42ab04:	b.eq	42ab10 <parse_operator+0x110>  // b.none
  42ab08:	mov	w0, #0x5                   	// #5
  42ab0c:	b	42ab14 <parse_operator+0x114>
  42ab10:	mov	w0, #0xffffffff            	// #-1
  42ab14:	ldp	x29, x30, [sp], #32
  42ab18:	ret

000000000042ab1c <parse_line>:
  42ab1c:	stp	x29, x30, [sp, #-128]!
  42ab20:	mov	x29, sp
  42ab24:	str	x0, [sp, #56]
  42ab28:	str	x1, [sp, #48]
  42ab2c:	str	x2, [sp, #40]
  42ab30:	str	x3, [sp, #32]
  42ab34:	str	x4, [sp, #24]
  42ab38:	ldr	x0, [sp, #56]
  42ab3c:	cmp	x0, #0x0
  42ab40:	cset	w0, eq  // eq = none
  42ab44:	and	w0, w0, #0xff
  42ab48:	and	x0, x0, #0xff
  42ab4c:	cmp	x0, #0x0
  42ab50:	b.eq	42ab7c <parse_line+0x60>  // b.none
  42ab54:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ab58:	add	x1, x0, #0xbb
  42ab5c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ab60:	add	x4, x0, #0x940
  42ab64:	mov	w3, #0x3e2                 	// #994
  42ab68:	mov	x2, x1
  42ab6c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ab70:	add	x1, x0, #0xb48
  42ab74:	mov	w0, #0x1                   	// #1
  42ab78:	bl	40abb0 <log_assert_failed_realm@plt>
  42ab7c:	ldr	x0, [sp, #56]
  42ab80:	ldr	x0, [x0]
  42ab84:	cmp	x0, #0x0
  42ab88:	cset	w0, eq  // eq = none
  42ab8c:	and	w0, w0, #0xff
  42ab90:	and	x0, x0, #0xff
  42ab94:	cmp	x0, #0x0
  42ab98:	b.eq	42abc4 <parse_line+0xa8>  // b.none
  42ab9c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42aba0:	add	x1, x0, #0xbb
  42aba4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42aba8:	add	x4, x0, #0x940
  42abac:	mov	w3, #0x3e3                 	// #995
  42abb0:	mov	x2, x1
  42abb4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42abb8:	add	x1, x0, #0xb50
  42abbc:	mov	w0, #0x1                   	// #1
  42abc0:	bl	40abb0 <log_assert_failed_realm@plt>
  42abc4:	ldr	x0, [sp, #48]
  42abc8:	cmp	x0, #0x0
  42abcc:	cset	w0, eq  // eq = none
  42abd0:	and	w0, w0, #0xff
  42abd4:	and	x0, x0, #0xff
  42abd8:	cmp	x0, #0x0
  42abdc:	b.eq	42ac08 <parse_line+0xec>  // b.none
  42abe0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42abe4:	add	x1, x0, #0xbb
  42abe8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42abec:	add	x4, x0, #0x940
  42abf0:	mov	w3, #0x3e4                 	// #996
  42abf4:	mov	x2, x1
  42abf8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42abfc:	add	x1, x0, #0xb58
  42ac00:	mov	w0, #0x1                   	// #1
  42ac04:	bl	40abb0 <log_assert_failed_realm@plt>
  42ac08:	ldr	x0, [sp, #32]
  42ac0c:	cmp	x0, #0x0
  42ac10:	cset	w0, eq  // eq = none
  42ac14:	and	w0, w0, #0xff
  42ac18:	and	x0, x0, #0xff
  42ac1c:	cmp	x0, #0x0
  42ac20:	b.eq	42ac4c <parse_line+0x130>  // b.none
  42ac24:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ac28:	add	x1, x0, #0xbb
  42ac2c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ac30:	add	x4, x0, #0x940
  42ac34:	mov	w3, #0x3e5                 	// #997
  42ac38:	mov	x2, x1
  42ac3c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ac40:	add	x1, x0, #0xb60
  42ac44:	mov	w0, #0x1                   	// #1
  42ac48:	bl	40abb0 <log_assert_failed_realm@plt>
  42ac4c:	ldr	x0, [sp, #24]
  42ac50:	cmp	x0, #0x0
  42ac54:	cset	w0, eq  // eq = none
  42ac58:	and	w0, w0, #0xff
  42ac5c:	and	x0, x0, #0xff
  42ac60:	cmp	x0, #0x0
  42ac64:	b.eq	42ac90 <parse_line+0x174>  // b.none
  42ac68:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ac6c:	add	x1, x0, #0xbb
  42ac70:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ac74:	add	x4, x0, #0x940
  42ac78:	mov	w3, #0x3e6                 	// #998
  42ac7c:	mov	x2, x1
  42ac80:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ac84:	add	x1, x0, #0xb68
  42ac88:	mov	w0, #0x1                   	// #1
  42ac8c:	bl	40abb0 <log_assert_failed_realm@plt>
  42ac90:	ldr	x0, [sp, #56]
  42ac94:	ldr	x2, [x0]
  42ac98:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ac9c:	add	x1, x0, #0xb78
  42aca0:	mov	x0, x2
  42aca4:	bl	41fc00 <skip_leading_chars>
  42aca8:	str	x0, [sp, #112]
  42acac:	ldr	x0, [sp, #112]
  42acb0:	bl	41fb70 <isempty>
  42acb4:	and	w0, w0, #0xff
  42acb8:	cmp	w0, #0x0
  42acbc:	b.eq	42acc8 <parse_line+0x1ac>  // b.none
  42acc0:	mov	w0, #0x0                   	// #0
  42acc4:	b	42af2c <parse_line+0x410>
  42acc8:	ldr	x0, [sp, #112]
  42accc:	str	x0, [sp, #72]
  42acd0:	ldr	x0, [sp, #72]
  42acd4:	ldrb	w0, [x0]
  42acd8:	cmp	w0, #0x0
  42acdc:	b.ne	42ace8 <parse_line+0x1cc>  // b.any
  42ace0:	mov	w0, #0xffffffea            	// #-22
  42ace4:	b	42af2c <parse_line+0x410>
  42ace8:	ldr	x0, [sp, #72]
  42acec:	ldrb	w0, [x0]
  42acf0:	mov	w1, w0
  42acf4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42acf8:	add	x0, x0, #0xb80
  42acfc:	bl	40b850 <strchr@plt>
  42ad00:	cmp	x0, #0x0
  42ad04:	b.ne	42ad4c <parse_line+0x230>  // b.any
  42ad08:	ldr	x0, [sp, #72]
  42ad0c:	ldrb	w0, [x0]
  42ad10:	mov	w1, w0
  42ad14:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ad18:	add	x0, x0, #0xb88
  42ad1c:	bl	40b850 <strchr@plt>
  42ad20:	cmp	x0, #0x0
  42ad24:	b.eq	42ad3c <parse_line+0x220>  // b.none
  42ad28:	ldr	x0, [sp, #72]
  42ad2c:	add	x0, x0, #0x1
  42ad30:	ldrb	w0, [x0]
  42ad34:	cmp	w0, #0x3d
  42ad38:	b.eq	42ad54 <parse_line+0x238>  // b.none
  42ad3c:	ldr	x0, [sp, #72]
  42ad40:	add	x0, x0, #0x1
  42ad44:	str	x0, [sp, #72]
  42ad48:	b	42acd0 <parse_line+0x1b4>
  42ad4c:	nop
  42ad50:	b	42ad58 <parse_line+0x23c>
  42ad54:	nop
  42ad58:	ldr	x0, [sp, #72]
  42ad5c:	ldrb	w0, [x0]
  42ad60:	cmp	w0, #0x7b
  42ad64:	b.ne	42adac <parse_line+0x290>  // b.any
  42ad68:	ldr	x0, [sp, #72]
  42ad6c:	add	x0, x0, #0x1
  42ad70:	str	x0, [sp, #80]
  42ad74:	mov	w1, #0x7d                  	// #125
  42ad78:	ldr	x0, [sp, #80]
  42ad7c:	bl	40b850 <strchr@plt>
  42ad80:	str	x0, [sp, #88]
  42ad84:	ldr	x0, [sp, #88]
  42ad88:	cmp	x0, #0x0
  42ad8c:	b.ne	42ad98 <parse_line+0x27c>  // b.any
  42ad90:	mov	w0, #0xffffffea            	// #-22
  42ad94:	b	42af2c <parse_line+0x410>
  42ad98:	ldr	x0, [sp, #88]
  42ad9c:	add	x1, x0, #0x1
  42ada0:	str	x1, [sp, #88]
  42ada4:	strb	wzr, [x0]
  42ada8:	b	42adb8 <parse_line+0x29c>
  42adac:	str	xzr, [sp, #80]
  42adb0:	ldr	x0, [sp, #72]
  42adb4:	str	x0, [sp, #88]
  42adb8:	mov	x1, #0x0                   	// #0
  42adbc:	ldr	x0, [sp, #88]
  42adc0:	bl	41fc00 <skip_leading_chars>
  42adc4:	str	x0, [sp, #88]
  42adc8:	ldr	x0, [sp, #88]
  42adcc:	bl	42aa00 <parse_operator>
  42add0:	str	w0, [sp, #68]
  42add4:	ldr	w0, [sp, #68]
  42add8:	cmp	w0, #0x0
  42addc:	b.ge	42ade8 <parse_line+0x2cc>  // b.tcont
  42ade0:	mov	w0, #0xffffffea            	// #-22
  42ade4:	b	42af2c <parse_line+0x410>
  42ade8:	ldr	x0, [sp, #72]
  42adec:	strb	wzr, [x0]
  42adf0:	ldr	w0, [sp, #68]
  42adf4:	cmp	w0, #0x4
  42adf8:	b.ne	42ae04 <parse_line+0x2e8>  // b.any
  42adfc:	mov	x0, #0x1                   	// #1
  42ae00:	b	42ae08 <parse_line+0x2ec>
  42ae04:	mov	x0, #0x2                   	// #2
  42ae08:	ldr	x1, [sp, #88]
  42ae0c:	add	x0, x1, x0
  42ae10:	str	x0, [sp, #88]
  42ae14:	mov	x1, #0x0                   	// #0
  42ae18:	ldr	x0, [sp, #88]
  42ae1c:	bl	41fc00 <skip_leading_chars>
  42ae20:	str	x0, [sp, #120]
  42ae24:	ldr	x0, [sp, #120]
  42ae28:	ldrb	w0, [x0]
  42ae2c:	cmp	w0, #0x22
  42ae30:	b.eq	42ae3c <parse_line+0x320>  // b.none
  42ae34:	mov	w0, #0xffffffea            	// #-22
  42ae38:	b	42af2c <parse_line+0x410>
  42ae3c:	ldr	x0, [sp, #120]
  42ae40:	add	x0, x0, #0x1
  42ae44:	str	x0, [sp, #120]
  42ae48:	ldr	x0, [sp, #120]
  42ae4c:	str	x0, [sp, #104]
  42ae50:	ldr	x0, [sp, #104]
  42ae54:	str	x0, [sp, #96]
  42ae58:	ldr	x0, [sp, #96]
  42ae5c:	ldrb	w0, [x0]
  42ae60:	cmp	w0, #0x22
  42ae64:	b.eq	42aedc <parse_line+0x3c0>  // b.none
  42ae68:	ldr	x0, [sp, #96]
  42ae6c:	ldrb	w0, [x0]
  42ae70:	cmp	w0, #0x0
  42ae74:	b.ne	42ae80 <parse_line+0x364>  // b.any
  42ae78:	mov	w0, #0xffffffea            	// #-22
  42ae7c:	b	42af2c <parse_line+0x410>
  42ae80:	ldr	x0, [sp, #96]
  42ae84:	ldrb	w0, [x0]
  42ae88:	cmp	w0, #0x5c
  42ae8c:	b.ne	42aeb0 <parse_line+0x394>  // b.any
  42ae90:	ldr	x0, [sp, #96]
  42ae94:	add	x0, x0, #0x1
  42ae98:	ldrb	w0, [x0]
  42ae9c:	cmp	w0, #0x22
  42aea0:	b.ne	42aeb0 <parse_line+0x394>  // b.any
  42aea4:	ldr	x0, [sp, #96]
  42aea8:	add	x0, x0, #0x1
  42aeac:	str	x0, [sp, #96]
  42aeb0:	ldr	x0, [sp, #96]
  42aeb4:	ldrb	w1, [x0]
  42aeb8:	ldr	x0, [sp, #104]
  42aebc:	strb	w1, [x0]
  42aec0:	ldr	x0, [sp, #96]
  42aec4:	add	x0, x0, #0x1
  42aec8:	str	x0, [sp, #96]
  42aecc:	ldr	x0, [sp, #104]
  42aed0:	add	x0, x0, #0x1
  42aed4:	str	x0, [sp, #104]
  42aed8:	b	42ae58 <parse_line+0x33c>
  42aedc:	nop
  42aee0:	ldr	x0, [sp, #104]
  42aee4:	strb	wzr, [x0]
  42aee8:	ldr	x0, [sp, #96]
  42aeec:	add	x1, x0, #0x1
  42aef0:	ldr	x0, [sp, #56]
  42aef4:	str	x1, [x0]
  42aef8:	ldr	x0, [sp, #48]
  42aefc:	ldr	x1, [sp, #112]
  42af00:	str	x1, [x0]
  42af04:	ldr	x0, [sp, #40]
  42af08:	ldr	x1, [sp, #80]
  42af0c:	str	x1, [x0]
  42af10:	ldr	x0, [sp, #32]
  42af14:	ldr	w1, [sp, #68]
  42af18:	str	w1, [x0]
  42af1c:	ldr	x0, [sp, #24]
  42af20:	ldr	x1, [sp, #120]
  42af24:	str	x1, [x0]
  42af28:	mov	w0, #0x1                   	// #1
  42af2c:	ldp	x29, x30, [sp], #128
  42af30:	ret

000000000042af34 <sort_tokens>:
  42af34:	stp	x29, x30, [sp, #-96]!
  42af38:	mov	x29, sp
  42af3c:	str	x0, [sp, #24]
  42af40:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42af44:	ldr	x0, [x0, #4032]
  42af48:	ldr	x1, [x0]
  42af4c:	str	x1, [sp, #88]
  42af50:	mov	x1, #0x0                   	// #0
  42af54:	ldr	x0, [sp, #24]
  42af58:	cmp	x0, #0x0
  42af5c:	cset	w0, eq  // eq = none
  42af60:	and	w0, w0, #0xff
  42af64:	and	x0, x0, #0xff
  42af68:	cmp	x0, #0x0
  42af6c:	b.eq	42af98 <sort_tokens+0x64>  // b.none
  42af70:	adrp	x0, 454000 <__func__.10675+0xa0>
  42af74:	add	x1, x0, #0xbb
  42af78:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42af7c:	add	x4, x0, #0x950
  42af80:	mov	w3, #0x426                 	// #1062
  42af84:	mov	x2, x1
  42af88:	adrp	x0, 454000 <__func__.10675+0xa0>
  42af8c:	add	x1, x0, #0x130
  42af90:	mov	w0, #0x1                   	// #1
  42af94:	bl	40abb0 <log_assert_failed_realm@plt>
  42af98:	ldr	x0, [sp, #24]
  42af9c:	ldr	x0, [x0, #56]
  42afa0:	str	x0, [sp, #64]
  42afa4:	ldr	x0, [sp, #24]
  42afa8:	str	xzr, [x0, #56]
  42afac:	ldr	x0, [sp, #64]
  42afb0:	str	x0, [sp, #40]
  42afb4:	ldr	x0, [sp, #24]
  42afb8:	str	xzr, [x0, #48]
  42afbc:	b	42b134 <sort_tokens+0x200>
  42afc0:	str	xzr, [sp, #56]
  42afc4:	ldr	x0, [sp, #40]
  42afc8:	str	x0, [sp, #48]
  42afcc:	b	42b008 <sort_tokens+0xd4>
  42afd0:	ldr	x0, [sp, #56]
  42afd4:	cmp	x0, #0x0
  42afd8:	b.eq	42aff4 <sort_tokens+0xc0>  // b.none
  42afdc:	ldr	x0, [sp, #56]
  42afe0:	ldrsb	w1, [x0]
  42afe4:	ldr	x0, [sp, #48]
  42afe8:	ldrsb	w0, [x0]
  42afec:	cmp	w1, w0
  42aff0:	b.le	42affc <sort_tokens+0xc8>
  42aff4:	ldr	x0, [sp, #48]
  42aff8:	str	x0, [sp, #56]
  42affc:	ldr	x0, [sp, #48]
  42b000:	ldr	x0, [x0, #24]
  42b004:	str	x0, [sp, #48]
  42b008:	ldr	x0, [sp, #48]
  42b00c:	cmp	x0, #0x0
  42b010:	b.ne	42afd0 <sort_tokens+0x9c>  // b.any
  42b014:	add	x0, sp, #0x28
  42b018:	str	x0, [sp, #72]
  42b01c:	ldr	x0, [sp, #56]
  42b020:	str	x0, [sp, #80]
  42b024:	ldr	x0, [sp, #80]
  42b028:	cmp	x0, #0x0
  42b02c:	cset	w0, eq  // eq = none
  42b030:	and	w0, w0, #0xff
  42b034:	and	x0, x0, #0xff
  42b038:	cmp	x0, #0x0
  42b03c:	b.eq	42b068 <sort_tokens+0x134>  // b.none
  42b040:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b044:	add	x1, x0, #0xbb
  42b048:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b04c:	add	x4, x0, #0x950
  42b050:	mov	w3, #0x432                 	// #1074
  42b054:	mov	x2, x1
  42b058:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b05c:	add	x1, x0, #0x140
  42b060:	mov	w0, #0x1                   	// #1
  42b064:	bl	40abb0 <log_assert_failed_realm@plt>
  42b068:	ldr	x0, [sp, #80]
  42b06c:	ldr	x0, [x0, #24]
  42b070:	cmp	x0, #0x0
  42b074:	b.eq	42b08c <sort_tokens+0x158>  // b.none
  42b078:	ldr	x0, [sp, #80]
  42b07c:	ldr	x0, [x0, #24]
  42b080:	ldr	x1, [sp, #80]
  42b084:	ldr	x1, [x1, #32]
  42b088:	str	x1, [x0, #32]
  42b08c:	ldr	x0, [sp, #80]
  42b090:	ldr	x0, [x0, #32]
  42b094:	cmp	x0, #0x0
  42b098:	b.eq	42b0b4 <sort_tokens+0x180>  // b.none
  42b09c:	ldr	x0, [sp, #80]
  42b0a0:	ldr	x0, [x0, #32]
  42b0a4:	ldr	x1, [sp, #80]
  42b0a8:	ldr	x1, [x1, #24]
  42b0ac:	str	x1, [x0, #24]
  42b0b0:	b	42b110 <sort_tokens+0x1dc>
  42b0b4:	ldr	x0, [sp, #72]
  42b0b8:	ldr	x0, [x0]
  42b0bc:	ldr	x1, [sp, #80]
  42b0c0:	cmp	x1, x0
  42b0c4:	cset	w0, ne  // ne = any
  42b0c8:	and	w0, w0, #0xff
  42b0cc:	and	x0, x0, #0xff
  42b0d0:	cmp	x0, #0x0
  42b0d4:	b.eq	42b100 <sort_tokens+0x1cc>  // b.none
  42b0d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b0dc:	add	x1, x0, #0xbb
  42b0e0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b0e4:	add	x4, x0, #0x950
  42b0e8:	mov	w3, #0x432                 	// #1074
  42b0ec:	mov	x2, x1
  42b0f0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b0f4:	add	x1, x0, #0x148
  42b0f8:	mov	w0, #0x1                   	// #1
  42b0fc:	bl	40abb0 <log_assert_failed_realm@plt>
  42b100:	ldr	x0, [sp, #80]
  42b104:	ldr	x1, [x0, #24]
  42b108:	ldr	x0, [sp, #72]
  42b10c:	str	x1, [x0]
  42b110:	ldr	x0, [sp, #80]
  42b114:	str	xzr, [x0, #32]
  42b118:	ldr	x0, [sp, #80]
  42b11c:	ldr	x1, [x0, #32]
  42b120:	ldr	x0, [sp, #80]
  42b124:	str	x1, [x0, #24]
  42b128:	ldr	x1, [sp, #56]
  42b12c:	ldr	x0, [sp, #24]
  42b130:	bl	420b34 <rule_line_append_token>
  42b134:	ldr	x0, [sp, #40]
  42b138:	cmp	x0, #0x0
  42b13c:	b.ne	42afc0 <sort_tokens+0x8c>  // b.any
  42b140:	nop
  42b144:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42b148:	ldr	x0, [x0, #4032]
  42b14c:	ldr	x1, [sp, #88]
  42b150:	ldr	x0, [x0]
  42b154:	eor	x0, x1, x0
  42b158:	cmp	x0, #0x0
  42b15c:	b.eq	42b164 <sort_tokens+0x230>  // b.none
  42b160:	bl	40b280 <__stack_chk_fail@plt>
  42b164:	ldp	x29, x30, [sp], #96
  42b168:	ret

000000000042b16c <rule_add_line>:
  42b16c:	sub	sp, sp, #0x1e0
  42b170:	stp	x29, x30, [sp, #32]
  42b174:	add	x29, sp, #0x20
  42b178:	stp	x19, x20, [sp, #48]
  42b17c:	str	x21, [sp, #64]
  42b180:	str	x0, [sp, #104]
  42b184:	str	x1, [sp, #96]
  42b188:	str	w2, [sp, #92]
  42b18c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42b190:	ldr	x0, [x0, #4032]
  42b194:	ldr	x1, [x0]
  42b198:	str	x1, [sp, #472]
  42b19c:	mov	x1, #0x0                   	// #0
  42b1a0:	str	xzr, [sp, #144]
  42b1a4:	str	xzr, [sp, #152]
  42b1a8:	ldr	x0, [sp, #104]
  42b1ac:	cmp	x0, #0x0
  42b1b0:	cset	w0, eq  // eq = none
  42b1b4:	and	w0, w0, #0xff
  42b1b8:	and	x0, x0, #0xff
  42b1bc:	cmp	x0, #0x0
  42b1c0:	b.eq	42b1ec <rule_add_line+0x80>  // b.none
  42b1c4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b1c8:	add	x1, x0, #0xbb
  42b1cc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b1d0:	add	x4, x0, #0x960
  42b1d4:	mov	w3, #0x43e                 	// #1086
  42b1d8:	mov	x2, x1
  42b1dc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b1e0:	add	x1, x0, #0x158
  42b1e4:	mov	w0, #0x1                   	// #1
  42b1e8:	bl	40abb0 <log_assert_failed_realm@plt>
  42b1ec:	ldr	x0, [sp, #104]
  42b1f0:	ldr	x0, [x0, #32]
  42b1f4:	cmp	x0, #0x0
  42b1f8:	cset	w0, eq  // eq = none
  42b1fc:	and	w0, w0, #0xff
  42b200:	and	x0, x0, #0xff
  42b204:	cmp	x0, #0x0
  42b208:	b.eq	42b234 <rule_add_line+0xc8>  // b.none
  42b20c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b210:	add	x1, x0, #0xbb
  42b214:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b218:	add	x4, x0, #0x960
  42b21c:	mov	w3, #0x43f                 	// #1087
  42b220:	mov	x2, x1
  42b224:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b228:	add	x1, x0, #0x300
  42b22c:	mov	w0, #0x1                   	// #1
  42b230:	bl	40abb0 <log_assert_failed_realm@plt>
  42b234:	ldr	x0, [sp, #96]
  42b238:	cmp	x0, #0x0
  42b23c:	cset	w0, eq  // eq = none
  42b240:	and	w0, w0, #0xff
  42b244:	and	x0, x0, #0xff
  42b248:	cmp	x0, #0x0
  42b24c:	b.eq	42b278 <rule_add_line+0x10c>  // b.none
  42b250:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b254:	add	x1, x0, #0xbb
  42b258:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b25c:	add	x4, x0, #0x960
  42b260:	mov	w3, #0x440                 	// #1088
  42b264:	mov	x2, x1
  42b268:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b26c:	add	x1, x0, #0xb90
  42b270:	mov	w0, #0x1                   	// #1
  42b274:	bl	40abb0 <log_assert_failed_realm@plt>
  42b278:	ldr	x0, [sp, #104]
  42b27c:	ldr	x0, [x0, #32]
  42b280:	str	x0, [sp, #224]
  42b284:	ldr	x0, [sp, #96]
  42b288:	bl	41fb70 <isempty>
  42b28c:	and	w0, w0, #0xff
  42b290:	cmp	w0, #0x0
  42b294:	b.eq	42b2a0 <rule_add_line+0x134>  // b.none
  42b298:	mov	w19, #0x0                   	// #0
  42b29c:	b	42b98c <rule_add_line+0x820>
  42b2a0:	ldr	x0, [sp, #96]
  42b2a4:	bl	40b7c0 <strdup@plt>
  42b2a8:	str	x0, [sp, #152]
  42b2ac:	ldr	x0, [sp, #152]
  42b2b0:	cmp	x0, #0x0
  42b2b4:	b.ne	42b2dc <rule_add_line+0x170>  // b.any
  42b2b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b2bc:	add	x1, x0, #0xbb
  42b2c0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b2c4:	add	x3, x0, #0x970
  42b2c8:	mov	w2, #0x449                 	// #1097
  42b2cc:	mov	w0, #0x1                   	// #1
  42b2d0:	bl	40bda0 <log_oom_internal@plt>
  42b2d4:	mov	w19, w0
  42b2d8:	b	42b98c <rule_add_line+0x820>
  42b2dc:	mov	x1, #0x1                   	// #1
  42b2e0:	mov	x0, #0x50                  	// #80
  42b2e4:	bl	41faa4 <malloc_multiply>
  42b2e8:	str	x0, [sp, #144]
  42b2ec:	ldr	x0, [sp, #144]
  42b2f0:	cmp	x0, #0x0
  42b2f4:	b.ne	42b31c <rule_add_line+0x1b0>  // b.any
  42b2f8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b2fc:	add	x1, x0, #0xbb
  42b300:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b304:	add	x3, x0, #0x970
  42b308:	mov	w2, #0x44d                 	// #1101
  42b30c:	mov	w0, #0x1                   	// #1
  42b310:	bl	40bda0 <log_oom_internal@plt>
  42b314:	mov	w19, w0
  42b318:	b	42b98c <rule_add_line+0x820>
  42b31c:	ldr	x0, [sp, #144]
  42b320:	ldr	x1, [sp, #152]
  42b324:	str	x1, [sp, #232]
  42b328:	str	xzr, [sp, #152]
  42b32c:	ldr	x1, [sp, #232]
  42b330:	stp	xzr, xzr, [x0]
  42b334:	stp	xzr, xzr, [x0, #16]
  42b338:	stp	xzr, xzr, [x0, #32]
  42b33c:	stp	xzr, xzr, [x0, #48]
  42b340:	stp	xzr, xzr, [x0, #64]
  42b344:	str	x1, [x0]
  42b348:	ldr	w1, [sp, #92]
  42b34c:	str	w1, [x0, #8]
  42b350:	ldr	x1, [sp, #224]
  42b354:	str	x1, [x0, #40]
  42b358:	ldr	x0, [sp, #224]
  42b35c:	ldr	x0, [x0, #8]
  42b360:	cmp	x0, #0x0
  42b364:	b.eq	42b4b4 <rule_add_line+0x348>  // b.none
  42b368:	ldr	x0, [sp, #224]
  42b36c:	add	x0, x0, #0x8
  42b370:	str	x0, [sp, #272]
  42b374:	ldr	x0, [sp, #272]
  42b378:	ldr	x0, [x0]
  42b37c:	str	x0, [sp, #200]
  42b380:	ldr	x0, [sp, #200]
  42b384:	cmp	x0, #0x0
  42b388:	b.ne	42b3a0 <rule_add_line+0x234>  // b.any
  42b38c:	str	xzr, [sp, #192]
  42b390:	b	42b3b8 <rule_add_line+0x24c>
  42b394:	ldr	x0, [sp, #200]
  42b398:	ldr	x0, [x0, #64]
  42b39c:	str	x0, [sp, #200]
  42b3a0:	ldr	x0, [sp, #200]
  42b3a4:	ldr	x0, [x0, #64]
  42b3a8:	cmp	x0, #0x0
  42b3ac:	b.ne	42b394 <rule_add_line+0x228>  // b.any
  42b3b0:	ldr	x0, [sp, #200]
  42b3b4:	str	x0, [sp, #192]
  42b3b8:	ldr	x0, [sp, #272]
  42b3bc:	str	x0, [sp, #280]
  42b3c0:	ldr	x0, [sp, #192]
  42b3c4:	str	x0, [sp, #288]
  42b3c8:	ldr	x0, [sp, #144]
  42b3cc:	str	x0, [sp, #296]
  42b3d0:	ldr	x0, [sp, #296]
  42b3d4:	cmp	x0, #0x0
  42b3d8:	cset	w0, eq  // eq = none
  42b3dc:	and	w0, w0, #0xff
  42b3e0:	and	x0, x0, #0xff
  42b3e4:	cmp	x0, #0x0
  42b3e8:	b.eq	42b414 <rule_add_line+0x2a8>  // b.none
  42b3ec:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b3f0:	add	x1, x0, #0xbb
  42b3f4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b3f8:	add	x4, x0, #0x960
  42b3fc:	mov	w3, #0x456                 	// #1110
  42b400:	mov	x2, x1
  42b404:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b408:	add	x1, x0, #0x188
  42b40c:	mov	w0, #0x1                   	// #1
  42b410:	bl	40abb0 <log_assert_failed_realm@plt>
  42b414:	ldr	x0, [sp, #288]
  42b418:	cmp	x0, #0x0
  42b41c:	b.ne	42b468 <rule_add_line+0x2fc>  // b.any
  42b420:	ldr	x0, [sp, #280]
  42b424:	ldr	x1, [x0]
  42b428:	ldr	x0, [sp, #296]
  42b42c:	str	x1, [x0, #64]
  42b430:	ldr	x0, [sp, #296]
  42b434:	ldr	x0, [x0, #64]
  42b438:	cmp	x0, #0x0
  42b43c:	b.eq	42b450 <rule_add_line+0x2e4>  // b.none
  42b440:	ldr	x0, [sp, #296]
  42b444:	ldr	x0, [x0, #64]
  42b448:	ldr	x1, [sp, #296]
  42b44c:	str	x1, [x0, #72]
  42b450:	ldr	x0, [sp, #296]
  42b454:	str	xzr, [x0, #72]
  42b458:	ldr	x0, [sp, #280]
  42b45c:	ldr	x1, [sp, #296]
  42b460:	str	x1, [x0]
  42b464:	b	42b5fc <rule_add_line+0x490>
  42b468:	ldr	x0, [sp, #288]
  42b46c:	ldr	x1, [x0, #64]
  42b470:	ldr	x0, [sp, #296]
  42b474:	str	x1, [x0, #64]
  42b478:	ldr	x0, [sp, #296]
  42b47c:	ldr	x0, [x0, #64]
  42b480:	cmp	x0, #0x0
  42b484:	b.eq	42b498 <rule_add_line+0x32c>  // b.none
  42b488:	ldr	x0, [sp, #296]
  42b48c:	ldr	x0, [x0, #64]
  42b490:	ldr	x1, [sp, #296]
  42b494:	str	x1, [x0, #72]
  42b498:	ldr	x0, [sp, #296]
  42b49c:	ldr	x1, [sp, #288]
  42b4a0:	str	x1, [x0, #72]
  42b4a4:	ldr	x0, [sp, #288]
  42b4a8:	ldr	x1, [sp, #296]
  42b4ac:	str	x1, [x0, #64]
  42b4b0:	b	42b5fc <rule_add_line+0x490>
  42b4b4:	ldr	x0, [sp, #224]
  42b4b8:	add	x0, x0, #0x10
  42b4bc:	str	x0, [sp, #240]
  42b4c0:	ldr	x0, [sp, #240]
  42b4c4:	ldr	x0, [x0]
  42b4c8:	str	x0, [sp, #216]
  42b4cc:	ldr	x0, [sp, #216]
  42b4d0:	cmp	x0, #0x0
  42b4d4:	b.ne	42b4ec <rule_add_line+0x380>  // b.any
  42b4d8:	str	xzr, [sp, #208]
  42b4dc:	b	42b504 <rule_add_line+0x398>
  42b4e0:	ldr	x0, [sp, #216]
  42b4e4:	ldr	x0, [x0, #64]
  42b4e8:	str	x0, [sp, #216]
  42b4ec:	ldr	x0, [sp, #216]
  42b4f0:	ldr	x0, [x0, #64]
  42b4f4:	cmp	x0, #0x0
  42b4f8:	b.ne	42b4e0 <rule_add_line+0x374>  // b.any
  42b4fc:	ldr	x0, [sp, #216]
  42b500:	str	x0, [sp, #208]
  42b504:	ldr	x0, [sp, #240]
  42b508:	str	x0, [sp, #248]
  42b50c:	ldr	x0, [sp, #208]
  42b510:	str	x0, [sp, #256]
  42b514:	ldr	x0, [sp, #144]
  42b518:	str	x0, [sp, #264]
  42b51c:	ldr	x0, [sp, #264]
  42b520:	cmp	x0, #0x0
  42b524:	cset	w0, eq  // eq = none
  42b528:	and	w0, w0, #0xff
  42b52c:	and	x0, x0, #0xff
  42b530:	cmp	x0, #0x0
  42b534:	b.eq	42b560 <rule_add_line+0x3f4>  // b.none
  42b538:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b53c:	add	x1, x0, #0xbb
  42b540:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b544:	add	x4, x0, #0x960
  42b548:	mov	w3, #0x458                 	// #1112
  42b54c:	mov	x2, x1
  42b550:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b554:	add	x1, x0, #0x188
  42b558:	mov	w0, #0x1                   	// #1
  42b55c:	bl	40abb0 <log_assert_failed_realm@plt>
  42b560:	ldr	x0, [sp, #256]
  42b564:	cmp	x0, #0x0
  42b568:	b.ne	42b5b4 <rule_add_line+0x448>  // b.any
  42b56c:	ldr	x0, [sp, #248]
  42b570:	ldr	x1, [x0]
  42b574:	ldr	x0, [sp, #264]
  42b578:	str	x1, [x0, #64]
  42b57c:	ldr	x0, [sp, #264]
  42b580:	ldr	x0, [x0, #64]
  42b584:	cmp	x0, #0x0
  42b588:	b.eq	42b59c <rule_add_line+0x430>  // b.none
  42b58c:	ldr	x0, [sp, #264]
  42b590:	ldr	x0, [x0, #64]
  42b594:	ldr	x1, [sp, #264]
  42b598:	str	x1, [x0, #72]
  42b59c:	ldr	x0, [sp, #264]
  42b5a0:	str	xzr, [x0, #72]
  42b5a4:	ldr	x0, [sp, #248]
  42b5a8:	ldr	x1, [sp, #264]
  42b5ac:	str	x1, [x0]
  42b5b0:	b	42b5fc <rule_add_line+0x490>
  42b5b4:	ldr	x0, [sp, #256]
  42b5b8:	ldr	x1, [x0, #64]
  42b5bc:	ldr	x0, [sp, #264]
  42b5c0:	str	x1, [x0, #64]
  42b5c4:	ldr	x0, [sp, #264]
  42b5c8:	ldr	x0, [x0, #64]
  42b5cc:	cmp	x0, #0x0
  42b5d0:	b.eq	42b5e4 <rule_add_line+0x478>  // b.none
  42b5d4:	ldr	x0, [sp, #264]
  42b5d8:	ldr	x0, [x0, #64]
  42b5dc:	ldr	x1, [sp, #264]
  42b5e0:	str	x1, [x0, #72]
  42b5e4:	ldr	x0, [sp, #264]
  42b5e8:	ldr	x1, [sp, #256]
  42b5ec:	str	x1, [x0, #72]
  42b5f0:	ldr	x0, [sp, #256]
  42b5f4:	ldr	x1, [sp, #264]
  42b5f8:	str	x1, [x0, #64]
  42b5fc:	ldr	x1, [sp, #144]
  42b600:	ldr	x0, [sp, #224]
  42b604:	str	x1, [x0, #8]
  42b608:	ldr	x0, [sp, #144]
  42b60c:	ldr	x0, [x0]
  42b610:	str	x0, [sp, #160]
  42b614:	b	42b7e8 <rule_add_line+0x67c>
  42b618:	add	x4, sp, #0xb8
  42b61c:	add	x3, sp, #0x78
  42b620:	add	x2, sp, #0xb0
  42b624:	add	x1, sp, #0xa8
  42b628:	add	x0, sp, #0xa0
  42b62c:	bl	42ab1c <parse_line>
  42b630:	str	w0, [sp, #124]
  42b634:	ldr	w0, [sp, #124]
  42b638:	cmp	w0, #0x0
  42b63c:	b.ge	42b79c <rule_add_line+0x630>  // b.tcont
  42b640:	ldr	x0, [sp, #104]
  42b644:	str	x0, [sp, #304]
  42b648:	ldr	x0, [sp, #304]
  42b64c:	cmp	x0, #0x0
  42b650:	b.eq	42b660 <rule_add_line+0x4f4>  // b.none
  42b654:	ldr	x0, [sp, #304]
  42b658:	ldr	x0, [x0, #32]
  42b65c:	b	42b664 <rule_add_line+0x4f8>
  42b660:	mov	x0, #0x0                   	// #0
  42b664:	str	x0, [sp, #312]
  42b668:	ldr	x0, [sp, #312]
  42b66c:	cmp	x0, #0x0
  42b670:	b.eq	42b680 <rule_add_line+0x514>  // b.none
  42b674:	ldr	x0, [sp, #312]
  42b678:	ldr	x0, [x0, #8]
  42b67c:	b	42b684 <rule_add_line+0x518>
  42b680:	mov	x0, #0x0                   	// #0
  42b684:	str	x0, [sp, #320]
  42b688:	ldr	x0, [sp, #312]
  42b68c:	cmp	x0, #0x0
  42b690:	b.eq	42b6a0 <rule_add_line+0x534>  // b.none
  42b694:	ldr	x0, [sp, #312]
  42b698:	ldr	x0, [x0]
  42b69c:	b	42b6a4 <rule_add_line+0x538>
  42b6a0:	mov	x0, #0x0                   	// #0
  42b6a4:	str	x0, [sp, #328]
  42b6a8:	str	xzr, [sp, #392]
  42b6ac:	str	xzr, [sp, #336]
  42b6b0:	mov	w0, #0x3                   	// #3
  42b6b4:	str	w0, [sp, #128]
  42b6b8:	ldr	w0, [sp, #124]
  42b6bc:	str	w0, [sp, #132]
  42b6c0:	ldr	x0, [sp, #336]
  42b6c4:	cmp	x0, #0x0
  42b6c8:	b.eq	42b704 <rule_add_line+0x598>  // b.none
  42b6cc:	mov	w0, #0x1                   	// #1
  42b6d0:	bl	40be30 <log_get_max_level_realm@plt>
  42b6d4:	mov	w1, w0
  42b6d8:	ldr	w0, [sp, #128]
  42b6dc:	cmp	w0, w1
  42b6e0:	cset	w0, le
  42b6e4:	and	w0, w0, #0xff
  42b6e8:	and	x0, x0, #0xff
  42b6ec:	cmp	x0, #0x0
  42b6f0:	b.eq	42b704 <rule_add_line+0x598>  // b.none
  42b6f4:	add	x0, sp, #0x188
  42b6f8:	mov	x1, x0
  42b6fc:	ldr	x0, [sp, #336]
  42b700:	bl	40aba0 <sd_device_get_sysname@plt>
  42b704:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b708:	add	x20, x0, #0xbb
  42b70c:	ldr	x0, [sp, #392]
  42b710:	cmp	x0, #0x0
  42b714:	b.eq	42b724 <rule_add_line+0x5b8>  // b.none
  42b718:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b71c:	add	x19, x0, #0xd8
  42b720:	b	42b728 <rule_add_line+0x5bc>
  42b724:	mov	x19, #0x0                   	// #0
  42b728:	ldr	x21, [sp, #392]
  42b72c:	ldr	x0, [sp, #328]
  42b730:	bl	41fb4c <strna>
  42b734:	mov	x1, x0
  42b738:	ldr	x0, [sp, #320]
  42b73c:	cmp	x0, #0x0
  42b740:	b.eq	42b750 <rule_add_line+0x5e4>  // b.none
  42b744:	ldr	x0, [sp, #320]
  42b748:	ldr	w0, [x0, #8]
  42b74c:	b	42b754 <rule_add_line+0x5e8>
  42b750:	mov	w0, #0x0                   	// #0
  42b754:	str	w0, [sp, #24]
  42b758:	str	x1, [sp, #16]
  42b75c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b760:	add	x0, x0, #0xba0
  42b764:	str	x0, [sp, #8]
  42b768:	str	xzr, [sp]
  42b76c:	mov	x7, #0x0                   	// #0
  42b770:	mov	x6, x21
  42b774:	mov	x5, x19
  42b778:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b77c:	add	x4, x0, #0x970
  42b780:	mov	w3, #0x462                 	// #1122
  42b784:	mov	x2, x20
  42b788:	ldr	w1, [sp, #132]
  42b78c:	ldr	w0, [sp, #128]
  42b790:	bl	40b020 <log_object_internal@plt>
  42b794:	mov	w19, w0
  42b798:	b	42b98c <rule_add_line+0x820>
  42b79c:	ldr	w0, [sp, #124]
  42b7a0:	cmp	w0, #0x0
  42b7a4:	b.eq	42b808 <rule_add_line+0x69c>  // b.none
  42b7a8:	ldr	x0, [sp, #168]
  42b7ac:	ldr	x1, [sp, #176]
  42b7b0:	ldr	w2, [sp, #120]
  42b7b4:	ldr	x3, [sp, #184]
  42b7b8:	mov	x4, x3
  42b7bc:	mov	w3, w2
  42b7c0:	mov	x2, x1
  42b7c4:	mov	x1, x0
  42b7c8:	ldr	x0, [sp, #104]
  42b7cc:	bl	421c84 <parse_token>
  42b7d0:	str	w0, [sp, #124]
  42b7d4:	ldr	w0, [sp, #124]
  42b7d8:	cmp	w0, #0x0
  42b7dc:	b.ge	42b7e8 <rule_add_line+0x67c>  // b.tcont
  42b7e0:	ldr	w19, [sp, #124]
  42b7e4:	b	42b98c <rule_add_line+0x820>
  42b7e8:	ldr	x0, [sp, #160]
  42b7ec:	bl	41fb70 <isempty>
  42b7f0:	and	w0, w0, #0xff
  42b7f4:	eor	w0, w0, #0x1
  42b7f8:	and	w0, w0, #0xff
  42b7fc:	cmp	w0, #0x0
  42b800:	b.ne	42b618 <rule_add_line+0x4ac>  // b.any
  42b804:	b	42b80c <rule_add_line+0x6a0>
  42b808:	nop
  42b80c:	ldr	x0, [sp, #144]
  42b810:	ldr	w0, [x0, #12]
  42b814:	cmp	w0, #0x0
  42b818:	b.ne	42b974 <rule_add_line+0x808>  // b.any
  42b81c:	ldr	x0, [sp, #104]
  42b820:	str	x0, [sp, #352]
  42b824:	ldr	x0, [sp, #352]
  42b828:	cmp	x0, #0x0
  42b82c:	b.eq	42b83c <rule_add_line+0x6d0>  // b.none
  42b830:	ldr	x0, [sp, #352]
  42b834:	ldr	x0, [x0, #32]
  42b838:	b	42b840 <rule_add_line+0x6d4>
  42b83c:	mov	x0, #0x0                   	// #0
  42b840:	str	x0, [sp, #360]
  42b844:	ldr	x0, [sp, #360]
  42b848:	cmp	x0, #0x0
  42b84c:	b.eq	42b85c <rule_add_line+0x6f0>  // b.none
  42b850:	ldr	x0, [sp, #360]
  42b854:	ldr	x0, [x0, #8]
  42b858:	b	42b860 <rule_add_line+0x6f4>
  42b85c:	mov	x0, #0x0                   	// #0
  42b860:	str	x0, [sp, #368]
  42b864:	ldr	x0, [sp, #360]
  42b868:	cmp	x0, #0x0
  42b86c:	b.eq	42b87c <rule_add_line+0x710>  // b.none
  42b870:	ldr	x0, [sp, #360]
  42b874:	ldr	x0, [x0]
  42b878:	b	42b880 <rule_add_line+0x714>
  42b87c:	mov	x0, #0x0                   	// #0
  42b880:	str	x0, [sp, #376]
  42b884:	str	xzr, [sp, #392]
  42b888:	str	xzr, [sp, #384]
  42b88c:	mov	w0, #0x4                   	// #4
  42b890:	str	w0, [sp, #136]
  42b894:	str	wzr, [sp, #140]
  42b898:	ldr	x0, [sp, #384]
  42b89c:	cmp	x0, #0x0
  42b8a0:	b.eq	42b8dc <rule_add_line+0x770>  // b.none
  42b8a4:	mov	w0, #0x1                   	// #1
  42b8a8:	bl	40be30 <log_get_max_level_realm@plt>
  42b8ac:	mov	w1, w0
  42b8b0:	ldr	w0, [sp, #136]
  42b8b4:	cmp	w0, w1
  42b8b8:	cset	w0, le
  42b8bc:	and	w0, w0, #0xff
  42b8c0:	and	x0, x0, #0xff
  42b8c4:	cmp	x0, #0x0
  42b8c8:	b.eq	42b8dc <rule_add_line+0x770>  // b.none
  42b8cc:	add	x0, sp, #0x188
  42b8d0:	mov	x1, x0
  42b8d4:	ldr	x0, [sp, #384]
  42b8d8:	bl	40aba0 <sd_device_get_sysname@plt>
  42b8dc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b8e0:	add	x20, x0, #0xbb
  42b8e4:	ldr	x0, [sp, #392]
  42b8e8:	cmp	x0, #0x0
  42b8ec:	b.eq	42b8fc <rule_add_line+0x790>  // b.none
  42b8f0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b8f4:	add	x19, x0, #0xd8
  42b8f8:	b	42b900 <rule_add_line+0x794>
  42b8fc:	mov	x19, #0x0                   	// #0
  42b900:	ldr	x21, [sp, #392]
  42b904:	ldr	x0, [sp, #376]
  42b908:	bl	41fb4c <strna>
  42b90c:	mov	x1, x0
  42b910:	ldr	x0, [sp, #368]
  42b914:	cmp	x0, #0x0
  42b918:	b.eq	42b928 <rule_add_line+0x7bc>  // b.none
  42b91c:	ldr	x0, [sp, #368]
  42b920:	ldr	w0, [x0, #8]
  42b924:	b	42b92c <rule_add_line+0x7c0>
  42b928:	mov	w0, #0x0                   	// #0
  42b92c:	str	w0, [sp, #24]
  42b930:	str	x1, [sp, #16]
  42b934:	adrp	x0, 454000 <__func__.10675+0xa0>
  42b938:	add	x0, x0, #0xbc8
  42b93c:	str	x0, [sp, #8]
  42b940:	str	xzr, [sp]
  42b944:	mov	x7, #0x0                   	// #0
  42b948:	mov	x6, x21
  42b94c:	mov	x5, x19
  42b950:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42b954:	add	x4, x0, #0x970
  42b958:	mov	w3, #0x46c                 	// #1132
  42b95c:	mov	x2, x20
  42b960:	ldr	w1, [sp, #140]
  42b964:	ldr	w0, [sp, #136]
  42b968:	bl	40b020 <log_object_internal@plt>
  42b96c:	mov	w19, #0x0                   	// #0
  42b970:	b	42b98c <rule_add_line+0x820>
  42b974:	ldr	x0, [sp, #144]
  42b978:	bl	42af34 <sort_tokens>
  42b97c:	ldr	x0, [sp, #144]
  42b980:	str	x0, [sp, #344]
  42b984:	str	xzr, [sp, #144]
  42b988:	mov	w19, #0x0                   	// #0
  42b98c:	add	x0, sp, #0x98
  42b990:	bl	41fa04 <freep>
  42b994:	add	x0, sp, #0x90
  42b998:	bl	420504 <udev_rule_line_freep>
  42b99c:	mov	w1, w19
  42b9a0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42b9a4:	ldr	x0, [x0, #4032]
  42b9a8:	ldr	x2, [sp, #472]
  42b9ac:	ldr	x0, [x0]
  42b9b0:	eor	x0, x2, x0
  42b9b4:	cmp	x0, #0x0
  42b9b8:	b.eq	42b9c0 <rule_add_line+0x854>  // b.none
  42b9bc:	bl	40b280 <__stack_chk_fail@plt>
  42b9c0:	mov	w0, w1
  42b9c4:	ldp	x19, x20, [sp, #48]
  42b9c8:	ldr	x21, [sp, #64]
  42b9cc:	ldp	x29, x30, [sp, #32]
  42b9d0:	add	sp, sp, #0x1e0
  42b9d4:	ret

000000000042b9d8 <rule_resolve_goto>:
  42b9d8:	sub	sp, sp, #0x60
  42b9dc:	stp	x29, x30, [sp, #16]
  42b9e0:	add	x29, sp, #0x10
  42b9e4:	str	x0, [sp, #40]
  42b9e8:	ldr	x0, [sp, #40]
  42b9ec:	cmp	x0, #0x0
  42b9f0:	cset	w0, eq  // eq = none
  42b9f4:	and	w0, w0, #0xff
  42b9f8:	and	x0, x0, #0xff
  42b9fc:	cmp	x0, #0x0
  42ba00:	b.eq	42ba2c <rule_resolve_goto+0x54>  // b.none
  42ba04:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ba08:	add	x1, x0, #0xbb
  42ba0c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ba10:	add	x4, x0, #0x980
  42ba14:	mov	w3, #0x478                 	// #1144
  42ba18:	mov	x2, x1
  42ba1c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ba20:	add	x1, x0, #0xbf8
  42ba24:	mov	w0, #0x1                   	// #1
  42ba28:	bl	40abb0 <log_assert_failed_realm@plt>
  42ba2c:	ldr	x0, [sp, #40]
  42ba30:	ldr	x0, [x0, #16]
  42ba34:	str	x0, [sp, #72]
  42ba38:	b	42bc34 <rule_resolve_goto+0x25c>
  42ba3c:	ldr	x0, [sp, #72]
  42ba40:	ldr	x0, [x0, #64]
  42ba44:	str	x0, [sp, #80]
  42ba48:	b	42ba90 <rule_resolve_goto+0xb8>
  42ba4c:	ldr	x0, [sp, #80]
  42ba50:	ldr	x2, [x0, #16]
  42ba54:	ldr	x0, [sp, #72]
  42ba58:	ldr	x0, [x0, #24]
  42ba5c:	mov	x1, x0
  42ba60:	mov	x0, x2
  42ba64:	bl	41faf8 <streq_ptr>
  42ba68:	and	w0, w0, #0xff
  42ba6c:	cmp	w0, #0x0
  42ba70:	b.eq	42ba84 <rule_resolve_goto+0xac>  // b.none
  42ba74:	ldr	x0, [sp, #72]
  42ba78:	ldr	x1, [sp, #80]
  42ba7c:	str	x1, [x0, #32]
  42ba80:	b	42ba9c <rule_resolve_goto+0xc4>
  42ba84:	ldr	x0, [sp, #80]
  42ba88:	ldr	x0, [x0, #64]
  42ba8c:	str	x0, [sp, #80]
  42ba90:	ldr	x0, [sp, #80]
  42ba94:	cmp	x0, #0x0
  42ba98:	b.ne	42ba4c <rule_resolve_goto+0x74>  // b.any
  42ba9c:	ldr	x0, [sp, #72]
  42baa0:	ldr	x0, [x0, #32]
  42baa4:	cmp	x0, #0x0
  42baa8:	b.ne	42bc2c <rule_resolve_goto+0x254>  // b.any
  42baac:	mov	w0, #0x3                   	// #3
  42bab0:	str	w0, [sp, #48]
  42bab4:	str	wzr, [sp, #52]
  42bab8:	mov	w0, #0x1                   	// #1
  42babc:	str	w0, [sp, #56]
  42bac0:	ldr	w0, [sp, #56]
  42bac4:	bl	40be30 <log_get_max_level_realm@plt>
  42bac8:	mov	w1, w0
  42bacc:	ldr	w0, [sp, #48]
  42bad0:	and	w0, w0, #0x7
  42bad4:	cmp	w1, w0
  42bad8:	b.lt	42bb40 <rule_resolve_goto+0x168>  // b.tstop
  42badc:	ldr	w0, [sp, #56]
  42bae0:	lsl	w1, w0, #10
  42bae4:	ldr	w0, [sp, #48]
  42bae8:	orr	w8, w1, w0
  42baec:	adrp	x0, 454000 <__func__.10675+0xa0>
  42baf0:	add	x1, x0, #0xbb
  42baf4:	ldr	x0, [sp, #40]
  42baf8:	ldr	x2, [x0]
  42bafc:	ldr	x0, [sp, #72]
  42bb00:	ldr	w3, [x0, #8]
  42bb04:	ldr	x0, [sp, #72]
  42bb08:	ldr	x0, [x0, #24]
  42bb0c:	str	x0, [sp]
  42bb10:	mov	w7, w3
  42bb14:	mov	x6, x2
  42bb18:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bb1c:	add	x5, x0, #0xc08
  42bb20:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42bb24:	add	x4, x0, #0x998
  42bb28:	mov	w3, #0x486                 	// #1158
  42bb2c:	mov	x2, x1
  42bb30:	ldr	w1, [sp, #52]
  42bb34:	mov	w0, w8
  42bb38:	bl	40b4f0 <log_internal_realm@plt>
  42bb3c:	b	42bb48 <rule_resolve_goto+0x170>
  42bb40:	ldr	w0, [sp, #52]
  42bb44:	cmp	w0, #0x0
  42bb48:	ldr	x0, [sp, #72]
  42bb4c:	ldr	w0, [x0, #12]
  42bb50:	and	w1, w0, #0xfffffff7
  42bb54:	ldr	x0, [sp, #72]
  42bb58:	str	w1, [x0, #12]
  42bb5c:	ldr	x0, [sp, #72]
  42bb60:	str	xzr, [x0, #24]
  42bb64:	ldr	x0, [sp, #72]
  42bb68:	ldr	w0, [x0, #12]
  42bb6c:	and	w0, w0, #0xffffffef
  42bb70:	cmp	w0, #0x0
  42bb74:	b.ne	42bc2c <rule_resolve_goto+0x254>  // b.any
  42bb78:	mov	w0, #0x5                   	// #5
  42bb7c:	str	w0, [sp, #60]
  42bb80:	str	wzr, [sp, #64]
  42bb84:	mov	w0, #0x1                   	// #1
  42bb88:	str	w0, [sp, #68]
  42bb8c:	ldr	w0, [sp, #68]
  42bb90:	bl	40be30 <log_get_max_level_realm@plt>
  42bb94:	mov	w1, w0
  42bb98:	ldr	w0, [sp, #60]
  42bb9c:	and	w0, w0, #0x7
  42bba0:	cmp	w1, w0
  42bba4:	b.lt	42bc00 <rule_resolve_goto+0x228>  // b.tstop
  42bba8:	ldr	w0, [sp, #68]
  42bbac:	lsl	w1, w0, #10
  42bbb0:	ldr	w0, [sp, #60]
  42bbb4:	orr	w8, w1, w0
  42bbb8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bbbc:	add	x1, x0, #0xbb
  42bbc0:	ldr	x0, [sp, #40]
  42bbc4:	ldr	x2, [x0]
  42bbc8:	ldr	x0, [sp, #72]
  42bbcc:	ldr	w0, [x0, #8]
  42bbd0:	mov	w7, w0
  42bbd4:	mov	x6, x2
  42bbd8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bbdc:	add	x5, x0, #0xc40
  42bbe0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42bbe4:	add	x4, x0, #0x998
  42bbe8:	mov	w3, #0x48d                 	// #1165
  42bbec:	mov	x2, x1
  42bbf0:	ldr	w1, [sp, #64]
  42bbf4:	mov	w0, w8
  42bbf8:	bl	40b4f0 <log_internal_realm@plt>
  42bbfc:	b	42bc08 <rule_resolve_goto+0x230>
  42bc00:	ldr	w0, [sp, #64]
  42bc04:	cmp	w0, #0x0
  42bc08:	ldr	x0, [sp, #72]
  42bc0c:	ldr	w0, [x0, #12]
  42bc10:	cmp	w0, #0x10
  42bc14:	b.ne	42bc24 <rule_resolve_goto+0x24c>  // b.any
  42bc18:	ldr	x0, [sp, #72]
  42bc1c:	bl	4202c8 <udev_rule_line_clear_tokens>
  42bc20:	b	42bc2c <rule_resolve_goto+0x254>
  42bc24:	ldr	x0, [sp, #72]
  42bc28:	bl	420368 <udev_rule_line_free>
  42bc2c:	ldr	x0, [sp, #88]
  42bc30:	str	x0, [sp, #72]
  42bc34:	ldr	x0, [sp, #72]
  42bc38:	cmp	x0, #0x0
  42bc3c:	b.eq	42bc64 <rule_resolve_goto+0x28c>  // b.none
  42bc40:	ldr	x0, [sp, #72]
  42bc44:	ldr	x0, [x0, #64]
  42bc48:	str	x0, [sp, #88]
  42bc4c:	ldr	x0, [sp, #72]
  42bc50:	ldr	w0, [x0, #12]
  42bc54:	and	w0, w0, #0x8
  42bc58:	cmp	w0, #0x0
  42bc5c:	b.ne	42ba3c <rule_resolve_goto+0x64>  // b.any
  42bc60:	b	42bc2c <rule_resolve_goto+0x254>
  42bc64:	nop
  42bc68:	ldp	x29, x30, [sp, #16]
  42bc6c:	add	sp, sp, #0x60
  42bc70:	ret

000000000042bc74 <parse_file>:
  42bc74:	stp	x29, x30, [sp, #-304]!
  42bc78:	mov	x29, sp
  42bc7c:	stp	x19, x20, [sp, #16]
  42bc80:	str	x0, [sp, #40]
  42bc84:	str	x1, [sp, #32]
  42bc88:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42bc8c:	ldr	x0, [x0, #4032]
  42bc90:	ldr	x1, [x0]
  42bc94:	str	x1, [sp, #296]
  42bc98:	mov	x1, #0x0                   	// #0
  42bc9c:	str	xzr, [sp, #104]
  42bca0:	str	xzr, [sp, #112]
  42bca4:	str	xzr, [sp, #120]
  42bca8:	strb	wzr, [sp, #59]
  42bcac:	str	wzr, [sp, #60]
  42bcb0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bcb4:	add	x1, x0, #0xc78
  42bcb8:	ldr	x0, [sp, #32]
  42bcbc:	bl	40bd60 <fopen64@plt>
  42bcc0:	str	x0, [sp, #120]
  42bcc4:	ldr	x0, [sp, #120]
  42bcc8:	cmp	x0, #0x0
  42bccc:	b.ne	42bcf8 <parse_file+0x84>  // b.any
  42bcd0:	bl	40b040 <__errno_location@plt>
  42bcd4:	ldr	w0, [x0]
  42bcd8:	cmp	w0, #0x2
  42bcdc:	b.ne	42bce8 <parse_file+0x74>  // b.any
  42bce0:	mov	w20, #0x0                   	// #0
  42bce4:	b	42c450 <parse_file+0x7dc>
  42bce8:	bl	40b040 <__errno_location@plt>
  42bcec:	ldr	w0, [x0]
  42bcf0:	neg	w20, w0
  42bcf4:	b	42c450 <parse_file+0x7dc>
  42bcf8:	ldr	x0, [sp, #120]
  42bcfc:	bl	40a6a0 <fileno@plt>
  42bd00:	mov	w1, w0
  42bd04:	ldr	x0, [sp, #32]
  42bd08:	bl	40b3a0 <fd_warn_permissions@plt>
  42bd0c:	ldr	x0, [sp, #120]
  42bd10:	bl	40a6a0 <fileno@plt>
  42bd14:	bl	40bd20 <null_or_empty_fd@plt>
  42bd18:	cmp	w0, #0x0
  42bd1c:	b.eq	42bda4 <parse_file+0x130>  // b.none
  42bd20:	mov	w0, #0x7                   	// #7
  42bd24:	str	w0, [sp, #92]
  42bd28:	str	wzr, [sp, #96]
  42bd2c:	mov	w0, #0x1                   	// #1
  42bd30:	str	w0, [sp, #100]
  42bd34:	ldr	w0, [sp, #100]
  42bd38:	bl	40be30 <log_get_max_level_realm@plt>
  42bd3c:	mov	w1, w0
  42bd40:	ldr	w0, [sp, #92]
  42bd44:	and	w0, w0, #0x7
  42bd48:	cmp	w1, w0
  42bd4c:	b.lt	42bd94 <parse_file+0x120>  // b.tstop
  42bd50:	ldr	w0, [sp, #100]
  42bd54:	lsl	w1, w0, #10
  42bd58:	ldr	w0, [sp, #92]
  42bd5c:	orr	w7, w1, w0
  42bd60:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bd64:	add	x1, x0, #0xbb
  42bd68:	ldr	x6, [sp, #32]
  42bd6c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bd70:	add	x5, x0, #0xc80
  42bd74:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42bd78:	add	x4, x0, #0x9b0
  42bd7c:	mov	w3, #0x4ab                 	// #1195
  42bd80:	mov	x2, x1
  42bd84:	ldr	w1, [sp, #96]
  42bd88:	mov	w0, w7
  42bd8c:	bl	40b4f0 <log_internal_realm@plt>
  42bd90:	b	42bd9c <parse_file+0x128>
  42bd94:	ldr	w0, [sp, #96]
  42bd98:	cmp	w0, #0x0
  42bd9c:	mov	w20, #0x0                   	// #0
  42bda0:	b	42c450 <parse_file+0x7dc>
  42bda4:	mov	w0, #0x7                   	// #7
  42bda8:	str	w0, [sp, #64]
  42bdac:	str	wzr, [sp, #68]
  42bdb0:	mov	w0, #0x1                   	// #1
  42bdb4:	str	w0, [sp, #72]
  42bdb8:	ldr	w0, [sp, #72]
  42bdbc:	bl	40be30 <log_get_max_level_realm@plt>
  42bdc0:	mov	w1, w0
  42bdc4:	ldr	w0, [sp, #64]
  42bdc8:	and	w0, w0, #0x7
  42bdcc:	cmp	w1, w0
  42bdd0:	b.lt	42be18 <parse_file+0x1a4>  // b.tstop
  42bdd4:	ldr	w0, [sp, #72]
  42bdd8:	lsl	w1, w0, #10
  42bddc:	ldr	w0, [sp, #64]
  42bde0:	orr	w7, w1, w0
  42bde4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bde8:	add	x1, x0, #0xbb
  42bdec:	ldr	x6, [sp, #32]
  42bdf0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bdf4:	add	x5, x0, #0xc98
  42bdf8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42bdfc:	add	x4, x0, #0x9b0
  42be00:	mov	w3, #0x4af                 	// #1199
  42be04:	mov	x2, x1
  42be08:	ldr	w1, [sp, #68]
  42be0c:	mov	w0, w7
  42be10:	bl	40b4f0 <log_internal_realm@plt>
  42be14:	b	42be20 <parse_file+0x1ac>
  42be18:	ldr	w0, [sp, #68]
  42be1c:	cmp	w0, #0x0
  42be20:	ldr	x0, [sp, #32]
  42be24:	bl	40b7c0 <strdup@plt>
  42be28:	str	x0, [sp, #112]
  42be2c:	ldr	x0, [sp, #112]
  42be30:	cmp	x0, #0x0
  42be34:	b.ne	42be5c <parse_file+0x1e8>  // b.any
  42be38:	adrp	x0, 454000 <__func__.10675+0xa0>
  42be3c:	add	x1, x0, #0xbb
  42be40:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42be44:	add	x3, x0, #0x9b0
  42be48:	mov	w2, #0x4b3                 	// #1203
  42be4c:	mov	w0, #0x1                   	// #1
  42be50:	bl	40bda0 <log_oom_internal@plt>
  42be54:	mov	w20, w0
  42be58:	b	42c450 <parse_file+0x7dc>
  42be5c:	mov	x1, #0x1                   	// #1
  42be60:	mov	x0, #0x28                  	// #40
  42be64:	bl	41faa4 <malloc_multiply>
  42be68:	str	x0, [sp, #176]
  42be6c:	ldr	x0, [sp, #176]
  42be70:	cmp	x0, #0x0
  42be74:	b.ne	42be9c <parse_file+0x228>  // b.any
  42be78:	adrp	x0, 454000 <__func__.10675+0xa0>
  42be7c:	add	x1, x0, #0xbb
  42be80:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42be84:	add	x3, x0, #0x9b0
  42be88:	mov	w2, #0x4b7                 	// #1207
  42be8c:	mov	w0, #0x1                   	// #1
  42be90:	bl	40bda0 <log_oom_internal@plt>
  42be94:	mov	w20, w0
  42be98:	b	42c450 <parse_file+0x7dc>
  42be9c:	ldr	x0, [sp, #112]
  42bea0:	str	x0, [sp, #184]
  42bea4:	str	xzr, [sp, #112]
  42bea8:	ldr	x1, [sp, #184]
  42beac:	ldr	x0, [sp, #176]
  42beb0:	stp	xzr, xzr, [x0]
  42beb4:	stp	xzr, xzr, [x0, #16]
  42beb8:	str	xzr, [x0, #32]
  42bebc:	ldr	x0, [sp, #176]
  42bec0:	str	x1, [x0]
  42bec4:	ldr	x0, [sp, #40]
  42bec8:	ldr	x0, [x0, #32]
  42becc:	cmp	x0, #0x0
  42bed0:	b.eq	42c020 <parse_file+0x3ac>  // b.none
  42bed4:	ldr	x0, [sp, #40]
  42bed8:	add	x0, x0, #0x20
  42bedc:	str	x0, [sp, #224]
  42bee0:	ldr	x0, [sp, #224]
  42bee4:	ldr	x0, [x0]
  42bee8:	str	x0, [sp, #136]
  42beec:	ldr	x0, [sp, #136]
  42bef0:	cmp	x0, #0x0
  42bef4:	b.ne	42bf0c <parse_file+0x298>  // b.any
  42bef8:	str	xzr, [sp, #128]
  42befc:	b	42bf24 <parse_file+0x2b0>
  42bf00:	ldr	x0, [sp, #136]
  42bf04:	ldr	x0, [x0, #24]
  42bf08:	str	x0, [sp, #136]
  42bf0c:	ldr	x0, [sp, #136]
  42bf10:	ldr	x0, [x0, #24]
  42bf14:	cmp	x0, #0x0
  42bf18:	b.ne	42bf00 <parse_file+0x28c>  // b.any
  42bf1c:	ldr	x0, [sp, #136]
  42bf20:	str	x0, [sp, #128]
  42bf24:	ldr	x0, [sp, #224]
  42bf28:	str	x0, [sp, #232]
  42bf2c:	ldr	x0, [sp, #128]
  42bf30:	str	x0, [sp, #240]
  42bf34:	ldr	x0, [sp, #176]
  42bf38:	str	x0, [sp, #248]
  42bf3c:	ldr	x0, [sp, #248]
  42bf40:	cmp	x0, #0x0
  42bf44:	cset	w0, eq  // eq = none
  42bf48:	and	w0, w0, #0xff
  42bf4c:	and	x0, x0, #0xff
  42bf50:	cmp	x0, #0x0
  42bf54:	b.eq	42bf80 <parse_file+0x30c>  // b.none
  42bf58:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bf5c:	add	x1, x0, #0xbb
  42bf60:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42bf64:	add	x4, x0, #0x9c0
  42bf68:	mov	w3, #0x4be                 	// #1214
  42bf6c:	mov	x2, x1
  42bf70:	adrp	x0, 454000 <__func__.10675+0xa0>
  42bf74:	add	x1, x0, #0x188
  42bf78:	mov	w0, #0x1                   	// #1
  42bf7c:	bl	40abb0 <log_assert_failed_realm@plt>
  42bf80:	ldr	x0, [sp, #240]
  42bf84:	cmp	x0, #0x0
  42bf88:	b.ne	42bfd4 <parse_file+0x360>  // b.any
  42bf8c:	ldr	x0, [sp, #232]
  42bf90:	ldr	x1, [x0]
  42bf94:	ldr	x0, [sp, #248]
  42bf98:	str	x1, [x0, #24]
  42bf9c:	ldr	x0, [sp, #248]
  42bfa0:	ldr	x0, [x0, #24]
  42bfa4:	cmp	x0, #0x0
  42bfa8:	b.eq	42bfbc <parse_file+0x348>  // b.none
  42bfac:	ldr	x0, [sp, #248]
  42bfb0:	ldr	x0, [x0, #24]
  42bfb4:	ldr	x1, [sp, #248]
  42bfb8:	str	x1, [x0, #32]
  42bfbc:	ldr	x0, [sp, #248]
  42bfc0:	str	xzr, [x0, #32]
  42bfc4:	ldr	x0, [sp, #232]
  42bfc8:	ldr	x1, [sp, #248]
  42bfcc:	str	x1, [x0]
  42bfd0:	b	42c168 <parse_file+0x4f4>
  42bfd4:	ldr	x0, [sp, #240]
  42bfd8:	ldr	x1, [x0, #24]
  42bfdc:	ldr	x0, [sp, #248]
  42bfe0:	str	x1, [x0, #24]
  42bfe4:	ldr	x0, [sp, #248]
  42bfe8:	ldr	x0, [x0, #24]
  42bfec:	cmp	x0, #0x0
  42bff0:	b.eq	42c004 <parse_file+0x390>  // b.none
  42bff4:	ldr	x0, [sp, #248]
  42bff8:	ldr	x0, [x0, #24]
  42bffc:	ldr	x1, [sp, #248]
  42c000:	str	x1, [x0, #32]
  42c004:	ldr	x0, [sp, #248]
  42c008:	ldr	x1, [sp, #240]
  42c00c:	str	x1, [x0, #32]
  42c010:	ldr	x0, [sp, #240]
  42c014:	ldr	x1, [sp, #248]
  42c018:	str	x1, [x0, #24]
  42c01c:	b	42c168 <parse_file+0x4f4>
  42c020:	ldr	x0, [sp, #40]
  42c024:	add	x0, x0, #0x28
  42c028:	str	x0, [sp, #192]
  42c02c:	ldr	x0, [sp, #192]
  42c030:	ldr	x0, [x0]
  42c034:	str	x0, [sp, #152]
  42c038:	ldr	x0, [sp, #152]
  42c03c:	cmp	x0, #0x0
  42c040:	b.ne	42c058 <parse_file+0x3e4>  // b.any
  42c044:	str	xzr, [sp, #144]
  42c048:	b	42c070 <parse_file+0x3fc>
  42c04c:	ldr	x0, [sp, #152]
  42c050:	ldr	x0, [x0, #24]
  42c054:	str	x0, [sp, #152]
  42c058:	ldr	x0, [sp, #152]
  42c05c:	ldr	x0, [x0, #24]
  42c060:	cmp	x0, #0x0
  42c064:	b.ne	42c04c <parse_file+0x3d8>  // b.any
  42c068:	ldr	x0, [sp, #152]
  42c06c:	str	x0, [sp, #144]
  42c070:	ldr	x0, [sp, #192]
  42c074:	str	x0, [sp, #200]
  42c078:	ldr	x0, [sp, #144]
  42c07c:	str	x0, [sp, #208]
  42c080:	ldr	x0, [sp, #176]
  42c084:	str	x0, [sp, #216]
  42c088:	ldr	x0, [sp, #216]
  42c08c:	cmp	x0, #0x0
  42c090:	cset	w0, eq  // eq = none
  42c094:	and	w0, w0, #0xff
  42c098:	and	x0, x0, #0xff
  42c09c:	cmp	x0, #0x0
  42c0a0:	b.eq	42c0cc <parse_file+0x458>  // b.none
  42c0a4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c0a8:	add	x1, x0, #0xbb
  42c0ac:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42c0b0:	add	x4, x0, #0x9c0
  42c0b4:	mov	w3, #0x4c0                 	// #1216
  42c0b8:	mov	x2, x1
  42c0bc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c0c0:	add	x1, x0, #0x188
  42c0c4:	mov	w0, #0x1                   	// #1
  42c0c8:	bl	40abb0 <log_assert_failed_realm@plt>
  42c0cc:	ldr	x0, [sp, #208]
  42c0d0:	cmp	x0, #0x0
  42c0d4:	b.ne	42c120 <parse_file+0x4ac>  // b.any
  42c0d8:	ldr	x0, [sp, #200]
  42c0dc:	ldr	x1, [x0]
  42c0e0:	ldr	x0, [sp, #216]
  42c0e4:	str	x1, [x0, #24]
  42c0e8:	ldr	x0, [sp, #216]
  42c0ec:	ldr	x0, [x0, #24]
  42c0f0:	cmp	x0, #0x0
  42c0f4:	b.eq	42c108 <parse_file+0x494>  // b.none
  42c0f8:	ldr	x0, [sp, #216]
  42c0fc:	ldr	x0, [x0, #24]
  42c100:	ldr	x1, [sp, #216]
  42c104:	str	x1, [x0, #32]
  42c108:	ldr	x0, [sp, #216]
  42c10c:	str	xzr, [x0, #32]
  42c110:	ldr	x0, [sp, #200]
  42c114:	ldr	x1, [sp, #216]
  42c118:	str	x1, [x0]
  42c11c:	b	42c168 <parse_file+0x4f4>
  42c120:	ldr	x0, [sp, #208]
  42c124:	ldr	x1, [x0, #24]
  42c128:	ldr	x0, [sp, #216]
  42c12c:	str	x1, [x0, #24]
  42c130:	ldr	x0, [sp, #216]
  42c134:	ldr	x0, [x0, #24]
  42c138:	cmp	x0, #0x0
  42c13c:	b.eq	42c150 <parse_file+0x4dc>  // b.none
  42c140:	ldr	x0, [sp, #216]
  42c144:	ldr	x0, [x0, #24]
  42c148:	ldr	x1, [sp, #216]
  42c14c:	str	x1, [x0, #32]
  42c150:	ldr	x0, [sp, #216]
  42c154:	ldr	x1, [sp, #208]
  42c158:	str	x1, [x0, #32]
  42c15c:	ldr	x0, [sp, #208]
  42c160:	ldr	x1, [sp, #216]
  42c164:	str	x1, [x0, #24]
  42c168:	ldr	x0, [sp, #40]
  42c16c:	ldr	x1, [sp, #176]
  42c170:	str	x1, [x0, #32]
  42c174:	str	xzr, [sp, #256]
  42c178:	ldr	x0, [sp, #120]
  42c17c:	add	x1, sp, #0x100
  42c180:	mov	x2, x1
  42c184:	mov	x1, #0x4000                	// #16384
  42c188:	bl	41fe58 <read_line>
  42c18c:	str	w0, [sp, #76]
  42c190:	ldr	w0, [sp, #76]
  42c194:	cmp	w0, #0x0
  42c198:	b.ge	42c1a8 <parse_file+0x534>  // b.tcont
  42c19c:	ldr	w20, [sp, #76]
  42c1a0:	mov	w19, #0x0                   	// #0
  42c1a4:	b	42c414 <parse_file+0x7a0>
  42c1a8:	ldr	w0, [sp, #76]
  42c1ac:	cmp	w0, #0x0
  42c1b0:	b.ne	42c1bc <parse_file+0x548>  // b.any
  42c1b4:	mov	w19, #0x1                   	// #1
  42c1b8:	b	42c414 <parse_file+0x7a0>
  42c1bc:	ldr	w0, [sp, #60]
  42c1c0:	add	w0, w0, #0x1
  42c1c4:	str	w0, [sp, #60]
  42c1c8:	ldr	x0, [sp, #256]
  42c1cc:	mov	x1, #0x0                   	// #0
  42c1d0:	bl	41fc00 <skip_leading_chars>
  42c1d4:	str	x0, [sp, #168]
  42c1d8:	ldr	x0, [sp, #168]
  42c1dc:	ldrb	w0, [x0]
  42c1e0:	cmp	w0, #0x23
  42c1e4:	b.ne	42c1f0 <parse_file+0x57c>  // b.any
  42c1e8:	mov	w19, #0x2                   	// #2
  42c1ec:	b	42c414 <parse_file+0x7a0>
  42c1f0:	ldr	x0, [sp, #168]
  42c1f4:	bl	40bd10 <strlen@plt>
  42c1f8:	str	x0, [sp, #160]
  42c1fc:	ldr	x0, [sp, #104]
  42c200:	cmp	x0, #0x0
  42c204:	b.eq	42c2b0 <parse_file+0x63c>  // b.none
  42c208:	ldrb	w0, [sp, #59]
  42c20c:	eor	w0, w0, #0x1
  42c210:	and	w0, w0, #0xff
  42c214:	cmp	w0, #0x0
  42c218:	b.eq	42c2b0 <parse_file+0x63c>  // b.none
  42c21c:	ldr	x0, [sp, #104]
  42c220:	bl	40bd10 <strlen@plt>
  42c224:	mov	x1, x0
  42c228:	ldr	x0, [sp, #160]
  42c22c:	add	x1, x1, x0
  42c230:	mov	x0, #0x3fff                	// #16383
  42c234:	cmp	x1, x0
  42c238:	b.ls	42c244 <parse_file+0x5d0>  // b.plast
  42c23c:	mov	w0, #0x1                   	// #1
  42c240:	strb	w0, [sp, #59]
  42c244:	add	x0, sp, #0x68
  42c248:	mov	x3, #0x0                   	// #0
  42c24c:	ldr	x2, [sp, #168]
  42c250:	mov	x1, #0x0                   	// #0
  42c254:	bl	40b190 <strextend_with_separator@plt>
  42c258:	cmp	x0, #0x0
  42c25c:	b.ne	42c288 <parse_file+0x614>  // b.any
  42c260:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c264:	add	x1, x0, #0xbb
  42c268:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42c26c:	add	x3, x0, #0x9b0
  42c270:	mov	w2, #0x4dc                 	// #1244
  42c274:	mov	w0, #0x1                   	// #1
  42c278:	bl	40bda0 <log_oom_internal@plt>
  42c27c:	mov	w20, w0
  42c280:	mov	w19, #0x0                   	// #0
  42c284:	b	42c414 <parse_file+0x7a0>
  42c288:	ldrb	w0, [sp, #59]
  42c28c:	eor	w0, w0, #0x1
  42c290:	and	w0, w0, #0xff
  42c294:	cmp	w0, #0x0
  42c298:	b.eq	42c2b0 <parse_file+0x63c>  // b.none
  42c29c:	ldr	x0, [sp, #104]
  42c2a0:	str	x0, [sp, #168]
  42c2a4:	ldr	x0, [sp, #168]
  42c2a8:	bl	40bd10 <strlen@plt>
  42c2ac:	str	x0, [sp, #160]
  42c2b0:	ldr	x0, [sp, #160]
  42c2b4:	cmp	x0, #0x0
  42c2b8:	b.eq	42c354 <parse_file+0x6e0>  // b.none
  42c2bc:	ldr	x0, [sp, #160]
  42c2c0:	sub	x0, x0, #0x1
  42c2c4:	ldr	x1, [sp, #168]
  42c2c8:	add	x0, x1, x0
  42c2cc:	ldrb	w0, [x0]
  42c2d0:	cmp	w0, #0x5c
  42c2d4:	b.ne	42c354 <parse_file+0x6e0>  // b.any
  42c2d8:	ldrb	w0, [sp, #59]
  42c2dc:	cmp	w0, #0x0
  42c2e0:	b.eq	42c2ec <parse_file+0x678>  // b.none
  42c2e4:	mov	w19, #0x2                   	// #2
  42c2e8:	b	42c414 <parse_file+0x7a0>
  42c2ec:	ldr	x0, [sp, #160]
  42c2f0:	sub	x0, x0, #0x1
  42c2f4:	ldr	x1, [sp, #168]
  42c2f8:	add	x0, x1, x0
  42c2fc:	strb	wzr, [x0]
  42c300:	ldr	x0, [sp, #104]
  42c304:	cmp	x0, #0x0
  42c308:	b.ne	42c34c <parse_file+0x6d8>  // b.any
  42c30c:	ldr	x0, [sp, #168]
  42c310:	bl	40b7c0 <strdup@plt>
  42c314:	str	x0, [sp, #104]
  42c318:	ldr	x0, [sp, #104]
  42c31c:	cmp	x0, #0x0
  42c320:	b.ne	42c34c <parse_file+0x6d8>  // b.any
  42c324:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c328:	add	x1, x0, #0xbb
  42c32c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42c330:	add	x3, x0, #0x9b0
  42c334:	mov	w2, #0x4ec                 	// #1260
  42c338:	mov	w0, #0x1                   	// #1
  42c33c:	bl	40bda0 <log_oom_internal@plt>
  42c340:	mov	w20, w0
  42c344:	mov	w19, #0x0                   	// #0
  42c348:	b	42c414 <parse_file+0x7a0>
  42c34c:	mov	w19, #0x2                   	// #2
  42c350:	b	42c414 <parse_file+0x7a0>
  42c354:	ldrb	w0, [sp, #59]
  42c358:	cmp	w0, #0x0
  42c35c:	b.eq	42c3e4 <parse_file+0x770>  // b.none
  42c360:	mov	w0, #0x3                   	// #3
  42c364:	str	w0, [sp, #80]
  42c368:	str	wzr, [sp, #84]
  42c36c:	mov	w0, #0x1                   	// #1
  42c370:	str	w0, [sp, #88]
  42c374:	ldr	w0, [sp, #88]
  42c378:	bl	40be30 <log_get_max_level_realm@plt>
  42c37c:	mov	w1, w0
  42c380:	ldr	w0, [sp, #80]
  42c384:	and	w0, w0, #0x7
  42c388:	cmp	w1, w0
  42c38c:	b.lt	42c3d8 <parse_file+0x764>  // b.tstop
  42c390:	ldr	w0, [sp, #88]
  42c394:	lsl	w1, w0, #10
  42c398:	ldr	w0, [sp, #80]
  42c39c:	orr	w8, w1, w0
  42c3a0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c3a4:	add	x1, x0, #0xbb
  42c3a8:	ldr	w7, [sp, #60]
  42c3ac:	ldr	x6, [sp, #32]
  42c3b0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c3b4:	add	x5, x0, #0xcb0
  42c3b8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42c3bc:	add	x4, x0, #0x9b0
  42c3c0:	mov	w3, #0x4f3                 	// #1267
  42c3c4:	mov	x2, x1
  42c3c8:	ldr	w1, [sp, #84]
  42c3cc:	mov	w0, w8
  42c3d0:	bl	40b4f0 <log_internal_realm@plt>
  42c3d4:	b	42c400 <parse_file+0x78c>
  42c3d8:	ldr	w0, [sp, #84]
  42c3dc:	cmp	w0, #0x0
  42c3e0:	b	42c400 <parse_file+0x78c>
  42c3e4:	ldr	x0, [sp, #160]
  42c3e8:	cmp	x0, #0x0
  42c3ec:	b.eq	42c400 <parse_file+0x78c>  // b.none
  42c3f0:	ldr	w2, [sp, #60]
  42c3f4:	ldr	x1, [sp, #168]
  42c3f8:	ldr	x0, [sp, #40]
  42c3fc:	bl	42b16c <rule_add_line>
  42c400:	ldr	x0, [sp, #104]
  42c404:	bl	41f9e4 <mfree>
  42c408:	str	x0, [sp, #104]
  42c40c:	strb	wzr, [sp, #59]
  42c410:	mov	w19, #0x3                   	// #3
  42c414:	add	x0, sp, #0x100
  42c418:	bl	41fa04 <freep>
  42c41c:	cmp	w19, #0x3
  42c420:	b.eq	42c44c <parse_file+0x7d8>  // b.none
  42c424:	cmp	w19, #0x3
  42c428:	b.gt	42c174 <parse_file+0x500>
  42c42c:	cmp	w19, #0x0
  42c430:	b.eq	42c450 <parse_file+0x7dc>  // b.none
  42c434:	cmp	w19, #0x1
  42c438:	b.ne	42c44c <parse_file+0x7d8>  // b.any
  42c43c:	ldr	x0, [sp, #176]
  42c440:	bl	42b9d8 <rule_resolve_goto>
  42c444:	mov	w20, #0x0                   	// #0
  42c448:	b	42c450 <parse_file+0x7dc>
  42c44c:	b	42c174 <parse_file+0x500>
  42c450:	add	x0, sp, #0x78
  42c454:	bl	41fdd0 <fclosep>
  42c458:	add	x0, sp, #0x70
  42c45c:	bl	41fa04 <freep>
  42c460:	add	x0, sp, #0x68
  42c464:	bl	41fa04 <freep>
  42c468:	mov	w1, w20
  42c46c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42c470:	ldr	x0, [x0, #4032]
  42c474:	ldr	x2, [sp, #296]
  42c478:	ldr	x0, [x0]
  42c47c:	eor	x0, x2, x0
  42c480:	cmp	x0, #0x0
  42c484:	b.eq	42c48c <parse_file+0x818>  // b.none
  42c488:	bl	40b280 <__stack_chk_fail@plt>
  42c48c:	mov	w0, w1
  42c490:	ldp	x19, x20, [sp, #16]
  42c494:	ldp	x29, x30, [sp], #304
  42c498:	ret

000000000042c49c <udev_rules_new>:
  42c49c:	stp	x29, x30, [sp, #-192]!
  42c4a0:	mov	x29, sp
  42c4a4:	str	x19, [sp, #16]
  42c4a8:	str	x0, [sp, #40]
  42c4ac:	str	w1, [sp, #36]
  42c4b0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42c4b4:	ldr	x0, [x0, #4032]
  42c4b8:	ldr	x1, [x0]
  42c4bc:	str	x1, [sp, #184]
  42c4c0:	mov	x1, #0x0                   	// #0
  42c4c4:	str	xzr, [sp, #64]
  42c4c8:	str	xzr, [sp, #88]
  42c4cc:	ldr	w0, [sp, #36]
  42c4d0:	lsr	w0, w0, #31
  42c4d4:	and	w0, w0, #0xff
  42c4d8:	and	x0, x0, #0xff
  42c4dc:	cmp	x0, #0x0
  42c4e0:	b.ne	42c500 <udev_rules_new+0x64>  // b.any
  42c4e4:	ldr	w0, [sp, #36]
  42c4e8:	cmp	w0, #0x2
  42c4ec:	cset	w0, gt
  42c4f0:	and	w0, w0, #0xff
  42c4f4:	and	x0, x0, #0xff
  42c4f8:	cmp	x0, #0x0
  42c4fc:	b.eq	42c528 <udev_rules_new+0x8c>  // b.none
  42c500:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c504:	add	x1, x0, #0xbb
  42c508:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42c50c:	add	x4, x0, #0x9d0
  42c510:	mov	w3, #0x505                 	// #1285
  42c514:	mov	x2, x1
  42c518:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c51c:	add	x1, x0, #0xcd8
  42c520:	mov	w0, #0x1                   	// #1
  42c524:	bl	40abb0 <log_assert_failed_realm@plt>
  42c528:	mov	x1, #0x1                   	// #1
  42c52c:	mov	x0, #0x30                  	// #48
  42c530:	bl	41faa4 <malloc_multiply>
  42c534:	str	x0, [sp, #64]
  42c538:	ldr	x0, [sp, #64]
  42c53c:	cmp	x0, #0x0
  42c540:	b.ne	42c54c <udev_rules_new+0xb0>  // b.any
  42c544:	mov	w19, #0xfffffff4            	// #-12
  42c548:	b	42c6bc <udev_rules_new+0x220>
  42c54c:	ldr	x0, [sp, #64]
  42c550:	stp	xzr, xzr, [x0]
  42c554:	stp	xzr, xzr, [x0, #16]
  42c558:	stp	xzr, xzr, [x0, #32]
  42c55c:	ldr	w1, [sp, #36]
  42c560:	str	w1, [x0, #8]
  42c564:	ldr	x0, [sp, #64]
  42c568:	bl	42c700 <udev_rules_check_timestamp>
  42c56c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  42c570:	add	x1, x0, #0xd0
  42c574:	add	x0, sp, #0x88
  42c578:	ldp	x2, x3, [x1]
  42c57c:	stp	x2, x3, [x0]
  42c580:	ldp	x2, x3, [x1, #16]
  42c584:	stp	x2, x3, [x0, #16]
  42c588:	ldp	x2, x3, [x1, #32]
  42c58c:	stp	x2, x3, [x0, #32]
  42c590:	add	x0, sp, #0x88
  42c594:	add	x5, sp, #0x58
  42c598:	mov	x4, x0
  42c59c:	mov	w3, #0x0                   	// #0
  42c5a0:	mov	x2, #0x0                   	// #0
  42c5a4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c5a8:	add	x1, x0, #0xd28
  42c5ac:	mov	x0, x5
  42c5b0:	bl	40bd40 <conf_files_list_strv@plt>
  42c5b4:	str	w0, [sp, #48]
  42c5b8:	ldr	w0, [sp, #48]
  42c5bc:	cmp	w0, #0x0
  42c5c0:	b.ge	42c654 <udev_rules_new+0x1b8>  // b.tcont
  42c5c4:	mov	w0, #0x3                   	// #3
  42c5c8:	str	w0, [sp, #52]
  42c5cc:	ldr	w0, [sp, #48]
  42c5d0:	str	w0, [sp, #56]
  42c5d4:	mov	w0, #0x1                   	// #1
  42c5d8:	str	w0, [sp, #60]
  42c5dc:	ldr	w0, [sp, #60]
  42c5e0:	bl	40be30 <log_get_max_level_realm@plt>
  42c5e4:	mov	w1, w0
  42c5e8:	ldr	w0, [sp, #52]
  42c5ec:	and	w0, w0, #0x7
  42c5f0:	cmp	w1, w0
  42c5f4:	b.lt	42c63c <udev_rules_new+0x1a0>  // b.tstop
  42c5f8:	ldr	w0, [sp, #60]
  42c5fc:	lsl	w1, w0, #10
  42c600:	ldr	w0, [sp, #52]
  42c604:	orr	w6, w1, w0
  42c608:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c60c:	add	x1, x0, #0xbb
  42c610:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c614:	add	x5, x0, #0xd30
  42c618:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42c61c:	add	x4, x0, #0x9e0
  42c620:	mov	w3, #0x513                 	// #1299
  42c624:	mov	x2, x1
  42c628:	ldr	w1, [sp, #56]
  42c62c:	mov	w0, w6
  42c630:	bl	40b4f0 <log_internal_realm@plt>
  42c634:	mov	w19, w0
  42c638:	b	42c6bc <udev_rules_new+0x220>
  42c63c:	ldr	w0, [sp, #56]
  42c640:	cmp	w0, #0x0
  42c644:	cneg	w0, w0, lt  // lt = tstop
  42c648:	and	w0, w0, #0xff
  42c64c:	neg	w19, w0
  42c650:	b	42c6bc <udev_rules_new+0x220>
  42c654:	ldr	x0, [sp, #88]
  42c658:	str	x0, [sp, #72]
  42c65c:	b	42c684 <udev_rules_new+0x1e8>
  42c660:	ldr	x2, [sp, #64]
  42c664:	ldr	x0, [sp, #72]
  42c668:	ldr	x0, [x0]
  42c66c:	mov	x1, x0
  42c670:	mov	x0, x2
  42c674:	bl	42bc74 <parse_file>
  42c678:	ldr	x0, [sp, #72]
  42c67c:	add	x0, x0, #0x8
  42c680:	str	x0, [sp, #72]
  42c684:	ldr	x0, [sp, #72]
  42c688:	cmp	x0, #0x0
  42c68c:	b.eq	42c6a0 <udev_rules_new+0x204>  // b.none
  42c690:	ldr	x0, [sp, #72]
  42c694:	ldr	x0, [x0]
  42c698:	cmp	x0, #0x0
  42c69c:	b.ne	42c660 <udev_rules_new+0x1c4>  // b.any
  42c6a0:	ldr	x0, [sp, #64]
  42c6a4:	str	x0, [sp, #80]
  42c6a8:	str	xzr, [sp, #64]
  42c6ac:	ldr	x1, [sp, #80]
  42c6b0:	ldr	x0, [sp, #40]
  42c6b4:	str	x1, [x0]
  42c6b8:	mov	w19, #0x0                   	// #0
  42c6bc:	add	x0, sp, #0x58
  42c6c0:	bl	41fd30 <strv_freep>
  42c6c4:	add	x0, sp, #0x40
  42c6c8:	bl	41feb8 <udev_rules_freep>
  42c6cc:	mov	w1, w19
  42c6d0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42c6d4:	ldr	x0, [x0, #4032]
  42c6d8:	ldr	x2, [sp, #184]
  42c6dc:	ldr	x0, [x0]
  42c6e0:	eor	x0, x2, x0
  42c6e4:	cmp	x0, #0x0
  42c6e8:	b.eq	42c6f0 <udev_rules_new+0x254>  // b.none
  42c6ec:	bl	40b280 <__stack_chk_fail@plt>
  42c6f0:	mov	w0, w1
  42c6f4:	ldr	x19, [sp, #16]
  42c6f8:	ldp	x29, x30, [sp], #192
  42c6fc:	ret

000000000042c700 <udev_rules_check_timestamp>:
  42c700:	stp	x29, x30, [sp, #-96]!
  42c704:	mov	x29, sp
  42c708:	str	x0, [sp, #24]
  42c70c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42c710:	ldr	x0, [x0, #4032]
  42c714:	ldr	x1, [x0]
  42c718:	str	x1, [sp, #88]
  42c71c:	mov	x1, #0x0                   	// #0
  42c720:	ldr	x0, [sp, #24]
  42c724:	cmp	x0, #0x0
  42c728:	b.ne	42c734 <udev_rules_check_timestamp+0x34>  // b.any
  42c72c:	mov	w0, #0x0                   	// #0
  42c730:	b	42c76c <udev_rules_check_timestamp+0x6c>
  42c734:	adrp	x0, 48d000 <arg_resolve_name_timing>
  42c738:	add	x1, x0, #0xd0
  42c73c:	add	x0, sp, #0x28
  42c740:	ldp	x2, x3, [x1]
  42c744:	stp	x2, x3, [x0]
  42c748:	ldp	x2, x3, [x1, #16]
  42c74c:	stp	x2, x3, [x0, #16]
  42c750:	ldp	x2, x3, [x1, #32]
  42c754:	stp	x2, x3, [x0, #32]
  42c758:	ldr	x1, [sp, #24]
  42c75c:	add	x0, sp, #0x28
  42c760:	mov	w2, #0x1                   	// #1
  42c764:	bl	40ba50 <paths_check_timestamp@plt>
  42c768:	and	w0, w0, #0xff
  42c76c:	mov	w1, w0
  42c770:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42c774:	ldr	x0, [x0, #4032]
  42c778:	ldr	x2, [sp, #88]
  42c77c:	ldr	x0, [x0]
  42c780:	eor	x0, x2, x0
  42c784:	cmp	x0, #0x0
  42c788:	b.eq	42c790 <udev_rules_check_timestamp+0x90>  // b.none
  42c78c:	bl	40b280 <__stack_chk_fail@plt>
  42c790:	mov	w0, w1
  42c794:	ldp	x29, x30, [sp], #96
  42c798:	ret

000000000042c79c <token_match_string>:
  42c79c:	stp	x29, x30, [sp, #-64]!
  42c7a0:	mov	x29, sp
  42c7a4:	str	x0, [sp, #24]
  42c7a8:	str	x1, [sp, #16]
  42c7ac:	strb	wzr, [sp, #47]
  42c7b0:	ldr	x0, [sp, #24]
  42c7b4:	cmp	x0, #0x0
  42c7b8:	cset	w0, eq  // eq = none
  42c7bc:	and	w0, w0, #0xff
  42c7c0:	and	x0, x0, #0xff
  42c7c4:	cmp	x0, #0x0
  42c7c8:	b.eq	42c7f4 <token_match_string+0x58>  // b.none
  42c7cc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c7d0:	add	x1, x0, #0xbb
  42c7d4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42c7d8:	add	x4, x0, #0x9f0
  42c7dc:	mov	w3, #0x527                 	// #1319
  42c7e0:	mov	x2, x1
  42c7e4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c7e8:	add	x1, x0, #0x180
  42c7ec:	mov	w0, #0x1                   	// #1
  42c7f0:	bl	40abb0 <log_assert_failed_realm@plt>
  42c7f4:	ldr	x0, [sp, #24]
  42c7f8:	ldr	x0, [x0, #8]
  42c7fc:	cmp	x0, #0x0
  42c800:	cset	w0, eq  // eq = none
  42c804:	and	w0, w0, #0xff
  42c808:	and	x0, x0, #0xff
  42c80c:	cmp	x0, #0x0
  42c810:	b.eq	42c83c <token_match_string+0xa0>  // b.none
  42c814:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c818:	add	x1, x0, #0xbb
  42c81c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42c820:	add	x4, x0, #0x9f0
  42c824:	mov	w3, #0x528                 	// #1320
  42c828:	mov	x2, x1
  42c82c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c830:	add	x1, x0, #0xd58
  42c834:	mov	w0, #0x1                   	// #1
  42c838:	bl	40abb0 <log_assert_failed_realm@plt>
  42c83c:	ldr	x0, [sp, #24]
  42c840:	ldrsb	w0, [x0]
  42c844:	cmp	w0, #0x19
  42c848:	cset	w0, gt
  42c84c:	and	w0, w0, #0xff
  42c850:	and	x0, x0, #0xff
  42c854:	cmp	x0, #0x0
  42c858:	b.eq	42c884 <token_match_string+0xe8>  // b.none
  42c85c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c860:	add	x1, x0, #0xbb
  42c864:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42c868:	add	x4, x0, #0x9f0
  42c86c:	mov	w3, #0x529                 	// #1321
  42c870:	mov	x2, x1
  42c874:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c878:	add	x1, x0, #0xd68
  42c87c:	mov	w0, #0x1                   	// #1
  42c880:	bl	40abb0 <log_assert_failed_realm@plt>
  42c884:	ldr	x0, [sp, #16]
  42c888:	bl	41fb28 <strempty>
  42c88c:	str	x0, [sp, #16]
  42c890:	ldr	x0, [sp, #24]
  42c894:	ldr	x0, [x0, #8]
  42c898:	str	x0, [sp, #56]
  42c89c:	ldr	x0, [sp, #24]
  42c8a0:	ldrsb	w0, [x0, #2]
  42c8a4:	cmp	w0, #0x5
  42c8a8:	b.eq	42c908 <token_match_string+0x16c>  // b.none
  42c8ac:	cmp	w0, #0x5
  42c8b0:	b.gt	42ca94 <token_match_string+0x2f8>
  42c8b4:	cmp	w0, #0x4
  42c8b8:	b.eq	42ca04 <token_match_string+0x268>  // b.none
  42c8bc:	cmp	w0, #0x4
  42c8c0:	b.gt	42ca94 <token_match_string+0x2f8>
  42c8c4:	cmp	w0, #0x3
  42c8c8:	b.eq	42ca24 <token_match_string+0x288>  // b.none
  42c8cc:	cmp	w0, #0x3
  42c8d0:	b.gt	42ca94 <token_match_string+0x2f8>
  42c8d4:	cmp	w0, #0x2
  42c8d8:	b.eq	42c978 <token_match_string+0x1dc>  // b.none
  42c8dc:	cmp	w0, #0x2
  42c8e0:	b.gt	42ca94 <token_match_string+0x2f8>
  42c8e4:	cmp	w0, #0x0
  42c8e8:	b.eq	42c8f8 <token_match_string+0x15c>  // b.none
  42c8ec:	cmp	w0, #0x1
  42c8f0:	b.eq	42c998 <token_match_string+0x1fc>  // b.none
  42c8f4:	b	42ca94 <token_match_string+0x2f8>
  42c8f8:	ldr	x0, [sp, #16]
  42c8fc:	bl	41fb70 <isempty>
  42c900:	strb	w0, [sp, #47]
  42c904:	b	42cad0 <token_match_string+0x334>
  42c908:	adrp	x0, 454000 <__func__.10675+0xa0>
  42c90c:	add	x0, x0, #0xd80
  42c910:	str	x0, [sp, #48]
  42c914:	b	42c958 <token_match_string+0x1bc>
  42c918:	ldr	x1, [sp, #16]
  42c91c:	ldr	x0, [sp, #48]
  42c920:	bl	40b710 <strcmp@plt>
  42c924:	cmp	w0, #0x0
  42c928:	b.ne	42c93c <token_match_string+0x1a0>  // b.any
  42c92c:	mov	w0, #0x1                   	// #1
  42c930:	strb	w0, [sp, #47]
  42c934:	nop
  42c938:	b	42cabc <token_match_string+0x320>
  42c93c:	ldr	x0, [sp, #48]
  42c940:	bl	40bd10 <strlen@plt>
  42c944:	mov	x1, x0
  42c948:	ldr	x0, [sp, #48]
  42c94c:	add	x0, x0, x1
  42c950:	add	x0, x0, #0x1
  42c954:	str	x0, [sp, #48]
  42c958:	ldr	x0, [sp, #48]
  42c95c:	cmp	x0, #0x0
  42c960:	b.eq	42cabc <token_match_string+0x320>  // b.none
  42c964:	ldr	x0, [sp, #48]
  42c968:	ldrb	w0, [x0]
  42c96c:	cmp	w0, #0x0
  42c970:	b.ne	42c918 <token_match_string+0x17c>  // b.any
  42c974:	b	42cabc <token_match_string+0x320>
  42c978:	ldr	x0, [sp, #16]
  42c97c:	bl	41fb70 <isempty>
  42c980:	and	w0, w0, #0xff
  42c984:	cmp	w0, #0x0
  42c988:	b.eq	42c998 <token_match_string+0x1fc>  // b.none
  42c98c:	mov	w0, #0x1                   	// #1
  42c990:	strb	w0, [sp, #47]
  42c994:	b	42cad0 <token_match_string+0x334>
  42c998:	ldr	x0, [sp, #56]
  42c99c:	str	x0, [sp, #48]
  42c9a0:	b	42c9e4 <token_match_string+0x248>
  42c9a4:	ldr	x1, [sp, #16]
  42c9a8:	ldr	x0, [sp, #48]
  42c9ac:	bl	40b710 <strcmp@plt>
  42c9b0:	cmp	w0, #0x0
  42c9b4:	b.ne	42c9c8 <token_match_string+0x22c>  // b.any
  42c9b8:	mov	w0, #0x1                   	// #1
  42c9bc:	strb	w0, [sp, #47]
  42c9c0:	nop
  42c9c4:	b	42cac4 <token_match_string+0x328>
  42c9c8:	ldr	x0, [sp, #48]
  42c9cc:	bl	40bd10 <strlen@plt>
  42c9d0:	mov	x1, x0
  42c9d4:	ldr	x0, [sp, #48]
  42c9d8:	add	x0, x0, x1
  42c9dc:	add	x0, x0, #0x1
  42c9e0:	str	x0, [sp, #48]
  42c9e4:	ldr	x0, [sp, #48]
  42c9e8:	cmp	x0, #0x0
  42c9ec:	b.eq	42cac4 <token_match_string+0x328>  // b.none
  42c9f0:	ldr	x0, [sp, #48]
  42c9f4:	ldrb	w0, [x0]
  42c9f8:	cmp	w0, #0x0
  42c9fc:	b.ne	42c9a4 <token_match_string+0x208>  // b.any
  42ca00:	b	42cac4 <token_match_string+0x328>
  42ca04:	ldr	x0, [sp, #16]
  42ca08:	bl	41fb70 <isempty>
  42ca0c:	and	w0, w0, #0xff
  42ca10:	cmp	w0, #0x0
  42ca14:	b.eq	42ca24 <token_match_string+0x288>  // b.none
  42ca18:	mov	w0, #0x1                   	// #1
  42ca1c:	strb	w0, [sp, #47]
  42ca20:	b	42cad0 <token_match_string+0x334>
  42ca24:	ldr	x0, [sp, #56]
  42ca28:	str	x0, [sp, #48]
  42ca2c:	b	42ca74 <token_match_string+0x2d8>
  42ca30:	mov	w2, #0x0                   	// #0
  42ca34:	ldr	x1, [sp, #16]
  42ca38:	ldr	x0, [sp, #48]
  42ca3c:	bl	40ae80 <fnmatch@plt>
  42ca40:	cmp	w0, #0x0
  42ca44:	b.ne	42ca58 <token_match_string+0x2bc>  // b.any
  42ca48:	mov	w0, #0x1                   	// #1
  42ca4c:	strb	w0, [sp, #47]
  42ca50:	nop
  42ca54:	b	42cacc <token_match_string+0x330>
  42ca58:	ldr	x0, [sp, #48]
  42ca5c:	bl	40bd10 <strlen@plt>
  42ca60:	mov	x1, x0
  42ca64:	ldr	x0, [sp, #48]
  42ca68:	add	x0, x0, x1
  42ca6c:	add	x0, x0, #0x1
  42ca70:	str	x0, [sp, #48]
  42ca74:	ldr	x0, [sp, #48]
  42ca78:	cmp	x0, #0x0
  42ca7c:	b.eq	42cacc <token_match_string+0x330>  // b.none
  42ca80:	ldr	x0, [sp, #48]
  42ca84:	ldrb	w0, [x0]
  42ca88:	cmp	w0, #0x0
  42ca8c:	b.ne	42ca30 <token_match_string+0x294>  // b.any
  42ca90:	b	42cacc <token_match_string+0x330>
  42ca94:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ca98:	add	x1, x0, #0xbb
  42ca9c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42caa0:	add	x4, x0, #0x9f0
  42caa4:	mov	w3, #0x554                 	// #1364
  42caa8:	mov	x2, x1
  42caac:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cab0:	add	x1, x0, #0xd98
  42cab4:	mov	w0, #0x1                   	// #1
  42cab8:	bl	40aca0 <log_assert_failed_unreachable_realm@plt>
  42cabc:	nop
  42cac0:	b	42cad0 <token_match_string+0x334>
  42cac4:	nop
  42cac8:	b	42cad0 <token_match_string+0x334>
  42cacc:	nop
  42cad0:	ldr	x0, [sp, #24]
  42cad4:	ldrsb	w0, [x0, #1]
  42cad8:	mov	w1, w0
  42cadc:	ldrb	w0, [sp, #47]
  42cae0:	eor	w0, w0, #0x1
  42cae4:	and	w0, w0, #0xff
  42cae8:	cmp	w1, w0
  42caec:	cset	w0, eq  // eq = none
  42caf0:	and	w0, w0, #0xff
  42caf4:	ldp	x29, x30, [sp], #64
  42caf8:	ret

000000000042cafc <token_match_attr>:
  42cafc:	sub	sp, sp, #0x450
  42cb00:	stp	x29, x30, [sp]
  42cb04:	mov	x29, sp
  42cb08:	str	x0, [sp, #40]
  42cb0c:	str	x1, [sp, #32]
  42cb10:	str	x2, [sp, #24]
  42cb14:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42cb18:	ldr	x0, [x0, #4032]
  42cb1c:	ldr	x1, [x0]
  42cb20:	str	x1, [sp, #1096]
  42cb24:	mov	x1, #0x0                   	// #0
  42cb28:	ldr	x0, [sp, #40]
  42cb2c:	cmp	x0, #0x0
  42cb30:	cset	w0, eq  // eq = none
  42cb34:	and	w0, w0, #0xff
  42cb38:	and	x0, x0, #0xff
  42cb3c:	cmp	x0, #0x0
  42cb40:	b.eq	42cb6c <token_match_attr+0x70>  // b.none
  42cb44:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cb48:	add	x1, x0, #0xbb
  42cb4c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42cb50:	add	x4, x0, #0xa08
  42cb54:	mov	w3, #0x55e                 	// #1374
  42cb58:	mov	x2, x1
  42cb5c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cb60:	add	x1, x0, #0x180
  42cb64:	mov	w0, #0x1                   	// #1
  42cb68:	bl	40abb0 <log_assert_failed_realm@plt>
  42cb6c:	ldr	x0, [sp, #32]
  42cb70:	cmp	x0, #0x0
  42cb74:	cset	w0, eq  // eq = none
  42cb78:	and	w0, w0, #0xff
  42cb7c:	and	x0, x0, #0xff
  42cb80:	cmp	x0, #0x0
  42cb84:	b.eq	42cbb0 <token_match_attr+0xb4>  // b.none
  42cb88:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cb8c:	add	x1, x0, #0xbb
  42cb90:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42cb94:	add	x4, x0, #0xa08
  42cb98:	mov	w3, #0x55f                 	// #1375
  42cb9c:	mov	x2, x1
  42cba0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cba4:	add	x1, x0, #0xdb0
  42cba8:	mov	w0, #0x1                   	// #1
  42cbac:	bl	40abb0 <log_assert_failed_realm@plt>
  42cbb0:	ldr	x0, [sp, #24]
  42cbb4:	cmp	x0, #0x0
  42cbb8:	cset	w0, eq  // eq = none
  42cbbc:	and	w0, w0, #0xff
  42cbc0:	and	x0, x0, #0xff
  42cbc4:	cmp	x0, #0x0
  42cbc8:	b.eq	42cbf4 <token_match_attr+0xf8>  // b.none
  42cbcc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cbd0:	add	x1, x0, #0xbb
  42cbd4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42cbd8:	add	x4, x0, #0xa08
  42cbdc:	mov	w3, #0x560                 	// #1376
  42cbe0:	mov	x2, x1
  42cbe4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cbe8:	add	x1, x0, #0xdb8
  42cbec:	mov	w0, #0x1                   	// #1
  42cbf0:	bl	40abb0 <log_assert_failed_realm@plt>
  42cbf4:	ldr	x0, [sp, #40]
  42cbf8:	ldr	x0, [x0, #16]
  42cbfc:	str	x0, [sp, #64]
  42cc00:	ldr	x0, [sp, #40]
  42cc04:	ldrb	w0, [x0, #3]
  42cc08:	sbfx	x0, x0, #0, #7
  42cc0c:	sxtb	w0, w0
  42cc10:	cmp	w0, #0x2
  42cc14:	b.eq	42cc78 <token_match_attr+0x17c>  // b.none
  42cc18:	cmp	w0, #0x2
  42cc1c:	b.gt	42ccac <token_match_attr+0x1b0>
  42cc20:	cmp	w0, #0x0
  42cc24:	b.eq	42cc54 <token_match_attr+0x158>  // b.none
  42cc28:	cmp	w0, #0x1
  42cc2c:	b.ne	42ccac <token_match_attr+0x1b0>  // b.any
  42cc30:	add	x0, sp, #0x48
  42cc34:	mov	w4, #0x0                   	// #0
  42cc38:	mov	x3, #0x200                 	// #512
  42cc3c:	mov	x2, x0
  42cc40:	ldr	x1, [sp, #64]
  42cc44:	ldr	x0, [sp, #24]
  42cc48:	bl	4185d8 <udev_event_apply_format>
  42cc4c:	add	x0, sp, #0x48
  42cc50:	str	x0, [sp, #64]
  42cc54:	add	x0, sp, #0x38
  42cc58:	mov	x2, x0
  42cc5c:	ldr	x1, [sp, #64]
  42cc60:	ldr	x0, [sp, #32]
  42cc64:	bl	40b870 <sd_device_get_sysattr_value@plt>
  42cc68:	cmp	w0, #0x0
  42cc6c:	b.ge	42ccd4 <token_match_attr+0x1d8>  // b.tcont
  42cc70:	mov	w0, #0x0                   	// #0
  42cc74:	b	42cd3c <token_match_attr+0x240>
  42cc78:	add	x0, sp, #0x248
  42cc7c:	mov	w3, #0x1                   	// #1
  42cc80:	mov	x2, #0x200                 	// #512
  42cc84:	mov	x1, x0
  42cc88:	ldr	x0, [sp, #64]
  42cc8c:	bl	40ba90 <util_resolve_subsys_kernel@plt>
  42cc90:	cmp	w0, #0x0
  42cc94:	b.ge	42cca0 <token_match_attr+0x1a4>  // b.tcont
  42cc98:	mov	w0, #0x0                   	// #0
  42cc9c:	b	42cd3c <token_match_attr+0x240>
  42cca0:	add	x0, sp, #0x248
  42cca4:	str	x0, [sp, #56]
  42cca8:	b	42ccd8 <token_match_attr+0x1dc>
  42ccac:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ccb0:	add	x1, x0, #0xbb
  42ccb4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ccb8:	add	x4, x0, #0xa08
  42ccbc:	mov	w3, #0x573                 	// #1395
  42ccc0:	mov	x2, x1
  42ccc4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ccc8:	add	x1, x0, #0xdc0
  42cccc:	mov	w0, #0x1                   	// #1
  42ccd0:	bl	40aca0 <log_assert_failed_unreachable_realm@plt>
  42ccd4:	nop
  42ccd8:	ldr	x0, [sp, #40]
  42ccdc:	ldrb	w0, [x0, #3]
  42cce0:	and	w0, w0, #0xffffff80
  42cce4:	and	w0, w0, #0xff
  42cce8:	cmp	w0, #0x0
  42ccec:	b.eq	42cd28 <token_match_attr+0x22c>  // b.none
  42ccf0:	ldr	x1, [sp, #56]
  42ccf4:	add	x0, sp, #0x248
  42ccf8:	cmp	x1, x0
  42ccfc:	b.eq	42cd1c <token_match_attr+0x220>  // b.none
  42cd00:	ldr	x1, [sp, #56]
  42cd04:	add	x0, sp, #0x248
  42cd08:	mov	x2, x1
  42cd0c:	mov	x1, #0x200                 	// #512
  42cd10:	bl	40a300 <strscpy@plt>
  42cd14:	add	x0, sp, #0x248
  42cd18:	str	x0, [sp, #56]
  42cd1c:	add	x0, sp, #0x248
  42cd20:	mov	x1, #0x0                   	// #0
  42cd24:	bl	40acd0 <delete_trailing_chars@plt>
  42cd28:	ldr	x0, [sp, #56]
  42cd2c:	mov	x1, x0
  42cd30:	ldr	x0, [sp, #40]
  42cd34:	bl	42c79c <token_match_string>
  42cd38:	and	w0, w0, #0xff
  42cd3c:	mov	w1, w0
  42cd40:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42cd44:	ldr	x0, [x0, #4032]
  42cd48:	ldr	x2, [sp, #1096]
  42cd4c:	ldr	x0, [x0]
  42cd50:	eor	x0, x2, x0
  42cd54:	cmp	x0, #0x0
  42cd58:	b.eq	42cd60 <token_match_attr+0x264>  // b.none
  42cd5c:	bl	40b280 <__stack_chk_fail@plt>
  42cd60:	mov	w0, w1
  42cd64:	ldp	x29, x30, [sp]
  42cd68:	add	sp, sp, #0x450
  42cd6c:	ret

000000000042cd70 <get_property_from_string>:
  42cd70:	stp	x29, x30, [sp, #-80]!
  42cd74:	mov	x29, sp
  42cd78:	str	x0, [sp, #40]
  42cd7c:	str	x1, [sp, #32]
  42cd80:	str	x2, [sp, #24]
  42cd84:	ldr	x0, [sp, #40]
  42cd88:	cmp	x0, #0x0
  42cd8c:	cset	w0, eq  // eq = none
  42cd90:	and	w0, w0, #0xff
  42cd94:	and	x0, x0, #0xff
  42cd98:	cmp	x0, #0x0
  42cd9c:	b.eq	42cdc8 <get_property_from_string+0x58>  // b.none
  42cda0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cda4:	add	x1, x0, #0xbb
  42cda8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42cdac:	add	x4, x0, #0xa20
  42cdb0:	mov	w3, #0x587                 	// #1415
  42cdb4:	mov	x2, x1
  42cdb8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cdbc:	add	x1, x0, #0xb48
  42cdc0:	mov	w0, #0x1                   	// #1
  42cdc4:	bl	40abb0 <log_assert_failed_realm@plt>
  42cdc8:	ldr	x0, [sp, #32]
  42cdcc:	cmp	x0, #0x0
  42cdd0:	cset	w0, eq  // eq = none
  42cdd4:	and	w0, w0, #0xff
  42cdd8:	and	x0, x0, #0xff
  42cddc:	cmp	x0, #0x0
  42cde0:	b.eq	42ce0c <get_property_from_string+0x9c>  // b.none
  42cde4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42cde8:	add	x1, x0, #0xbb
  42cdec:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42cdf0:	add	x4, x0, #0xa20
  42cdf4:	mov	w3, #0x588                 	// #1416
  42cdf8:	mov	x2, x1
  42cdfc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ce00:	add	x1, x0, #0xb58
  42ce04:	mov	w0, #0x1                   	// #1
  42ce08:	bl	40abb0 <log_assert_failed_realm@plt>
  42ce0c:	ldr	x0, [sp, #24]
  42ce10:	cmp	x0, #0x0
  42ce14:	cset	w0, eq  // eq = none
  42ce18:	and	w0, w0, #0xff
  42ce1c:	and	x0, x0, #0xff
  42ce20:	cmp	x0, #0x0
  42ce24:	b.eq	42ce50 <get_property_from_string+0xe0>  // b.none
  42ce28:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ce2c:	add	x1, x0, #0xbb
  42ce30:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ce34:	add	x4, x0, #0xa20
  42ce38:	mov	w3, #0x589                 	// #1417
  42ce3c:	mov	x2, x1
  42ce40:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ce44:	add	x1, x0, #0xb68
  42ce48:	mov	w0, #0x1                   	// #1
  42ce4c:	bl	40abb0 <log_assert_failed_realm@plt>
  42ce50:	mov	x1, #0x0                   	// #0
  42ce54:	ldr	x0, [sp, #40]
  42ce58:	bl	41fc00 <skip_leading_chars>
  42ce5c:	str	x0, [sp, #64]
  42ce60:	strb	wzr, [sp, #54]
  42ce64:	ldr	x0, [sp, #64]
  42ce68:	ldrb	w0, [x0]
  42ce6c:	cmp	w0, #0x0
  42ce70:	b.eq	42ce7c <get_property_from_string+0x10c>  // b.none
  42ce74:	cmp	w0, #0x23
  42ce78:	b.ne	42ce84 <get_property_from_string+0x114>  // b.any
  42ce7c:	mov	w0, #0x1                   	// #1
  42ce80:	strb	w0, [sp, #54]
  42ce84:	nop
  42ce88:	ldrb	w0, [sp, #54]
  42ce8c:	cmp	w0, #0x0
  42ce90:	b.eq	42ceb4 <get_property_from_string+0x144>  // b.none
  42ce94:	ldr	x0, [sp, #24]
  42ce98:	str	xzr, [x0]
  42ce9c:	ldr	x0, [sp, #24]
  42cea0:	ldr	x1, [x0]
  42cea4:	ldr	x0, [sp, #32]
  42cea8:	str	x1, [x0]
  42ceac:	mov	w0, #0x0                   	// #0
  42ceb0:	b	42cfec <get_property_from_string+0x27c>
  42ceb4:	mov	w1, #0x3d                  	// #61
  42ceb8:	ldr	x0, [sp, #64]
  42cebc:	bl	40b850 <strchr@plt>
  42cec0:	str	x0, [sp, #56]
  42cec4:	ldr	x0, [sp, #56]
  42cec8:	cmp	x0, #0x0
  42cecc:	b.ne	42ced8 <get_property_from_string+0x168>  // b.any
  42ced0:	mov	w0, #0xffffffea            	// #-22
  42ced4:	b	42cfec <get_property_from_string+0x27c>
  42ced8:	ldr	x0, [sp, #56]
  42cedc:	add	x1, x0, #0x1
  42cee0:	str	x1, [sp, #56]
  42cee4:	strb	wzr, [x0]
  42cee8:	ldr	x0, [sp, #64]
  42ceec:	bl	40ba00 <strstrip@plt>
  42cef0:	str	x0, [sp, #64]
  42cef4:	ldr	x0, [sp, #64]
  42cef8:	bl	41fb70 <isempty>
  42cefc:	and	w0, w0, #0xff
  42cf00:	cmp	w0, #0x0
  42cf04:	b.eq	42cf10 <get_property_from_string+0x1a0>  // b.none
  42cf08:	mov	w0, #0xffffffea            	// #-22
  42cf0c:	b	42cfec <get_property_from_string+0x27c>
  42cf10:	ldr	x0, [sp, #56]
  42cf14:	bl	40ba00 <strstrip@plt>
  42cf18:	str	x0, [sp, #56]
  42cf1c:	ldr	x0, [sp, #56]
  42cf20:	bl	41fb70 <isempty>
  42cf24:	and	w0, w0, #0xff
  42cf28:	cmp	w0, #0x0
  42cf2c:	b.eq	42cf38 <get_property_from_string+0x1c8>  // b.none
  42cf30:	mov	w0, #0xffffffea            	// #-22
  42cf34:	b	42cfec <get_property_from_string+0x27c>
  42cf38:	strb	wzr, [sp, #55]
  42cf3c:	ldr	x0, [sp, #56]
  42cf40:	ldrb	w0, [x0]
  42cf44:	cmp	w0, #0x22
  42cf48:	b.eq	42cf54 <get_property_from_string+0x1e4>  // b.none
  42cf4c:	cmp	w0, #0x27
  42cf50:	b.ne	42cf5c <get_property_from_string+0x1ec>  // b.any
  42cf54:	mov	w0, #0x1                   	// #1
  42cf58:	strb	w0, [sp, #55]
  42cf5c:	nop
  42cf60:	ldrb	w0, [sp, #55]
  42cf64:	cmp	w0, #0x0
  42cf68:	b.eq	42cfd0 <get_property_from_string+0x260>  // b.none
  42cf6c:	ldr	x0, [sp, #56]
  42cf70:	bl	40bd10 <strlen@plt>
  42cf74:	str	x0, [sp, #72]
  42cf78:	ldr	x0, [sp, #72]
  42cf7c:	cmp	x0, #0x1
  42cf80:	b.eq	42cfa8 <get_property_from_string+0x238>  // b.none
  42cf84:	ldr	x0, [sp, #72]
  42cf88:	sub	x0, x0, #0x1
  42cf8c:	ldr	x1, [sp, #56]
  42cf90:	add	x0, x1, x0
  42cf94:	ldrb	w1, [x0]
  42cf98:	ldr	x0, [sp, #56]
  42cf9c:	ldrb	w0, [x0]
  42cfa0:	cmp	w1, w0
  42cfa4:	b.eq	42cfb0 <get_property_from_string+0x240>  // b.none
  42cfa8:	mov	w0, #0xffffffea            	// #-22
  42cfac:	b	42cfec <get_property_from_string+0x27c>
  42cfb0:	ldr	x0, [sp, #72]
  42cfb4:	sub	x0, x0, #0x1
  42cfb8:	ldr	x1, [sp, #56]
  42cfbc:	add	x0, x1, x0
  42cfc0:	strb	wzr, [x0]
  42cfc4:	ldr	x0, [sp, #56]
  42cfc8:	add	x0, x0, #0x1
  42cfcc:	str	x0, [sp, #56]
  42cfd0:	ldr	x0, [sp, #32]
  42cfd4:	ldr	x1, [sp, #64]
  42cfd8:	str	x1, [x0]
  42cfdc:	ldr	x0, [sp, #24]
  42cfe0:	ldr	x1, [sp, #56]
  42cfe4:	str	x1, [x0]
  42cfe8:	mov	w0, #0x1                   	// #1
  42cfec:	ldp	x29, x30, [sp], #80
  42cff0:	ret

000000000042cff4 <import_parent_into_properties>:
  42cff4:	stp	x29, x30, [sp, #-80]!
  42cff8:	mov	x29, sp
  42cffc:	str	x0, [sp, #24]
  42d000:	str	x1, [sp, #16]
  42d004:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42d008:	ldr	x0, [x0, #4032]
  42d00c:	ldr	x1, [x0]
  42d010:	str	x1, [sp, #72]
  42d014:	mov	x1, #0x0                   	// #0
  42d018:	ldr	x0, [sp, #24]
  42d01c:	cmp	x0, #0x0
  42d020:	cset	w0, eq  // eq = none
  42d024:	and	w0, w0, #0xff
  42d028:	and	x0, x0, #0xff
  42d02c:	cmp	x0, #0x0
  42d030:	b.eq	42d05c <import_parent_into_properties+0x68>  // b.none
  42d034:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d038:	add	x1, x0, #0xbb
  42d03c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42d040:	add	x4, x0, #0xa40
  42d044:	mov	w3, #0x5b5                 	// #1461
  42d048:	mov	x2, x1
  42d04c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d050:	add	x1, x0, #0xdb0
  42d054:	mov	w0, #0x1                   	// #1
  42d058:	bl	40abb0 <log_assert_failed_realm@plt>
  42d05c:	ldr	x0, [sp, #16]
  42d060:	cmp	x0, #0x0
  42d064:	cset	w0, eq  // eq = none
  42d068:	and	w0, w0, #0xff
  42d06c:	and	x0, x0, #0xff
  42d070:	cmp	x0, #0x0
  42d074:	b.eq	42d0a0 <import_parent_into_properties+0xac>  // b.none
  42d078:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d07c:	add	x1, x0, #0xbb
  42d080:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42d084:	add	x4, x0, #0xa40
  42d088:	mov	w3, #0x5b6                 	// #1462
  42d08c:	mov	x2, x1
  42d090:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d094:	add	x1, x0, #0xde8
  42d098:	mov	w0, #0x1                   	// #1
  42d09c:	bl	40abb0 <log_assert_failed_realm@plt>
  42d0a0:	add	x0, sp, #0x38
  42d0a4:	mov	x1, x0
  42d0a8:	ldr	x0, [sp, #24]
  42d0ac:	bl	40be60 <sd_device_get_parent@plt>
  42d0b0:	str	w0, [sp, #44]
  42d0b4:	ldr	w0, [sp, #44]
  42d0b8:	cmn	w0, #0x2
  42d0bc:	b.ne	42d0c8 <import_parent_into_properties+0xd4>  // b.any
  42d0c0:	mov	w0, #0x0                   	// #0
  42d0c4:	b	42d158 <import_parent_into_properties+0x164>
  42d0c8:	ldr	w0, [sp, #44]
  42d0cc:	cmp	w0, #0x0
  42d0d0:	b.ge	42d0dc <import_parent_into_properties+0xe8>  // b.tcont
  42d0d4:	ldr	w0, [sp, #44]
  42d0d8:	b	42d158 <import_parent_into_properties+0x164>
  42d0dc:	ldr	x0, [sp, #56]
  42d0e0:	add	x1, sp, #0x30
  42d0e4:	bl	40a430 <sd_device_get_property_first@plt>
  42d0e8:	str	x0, [sp, #64]
  42d0ec:	b	42d148 <import_parent_into_properties+0x154>
  42d0f0:	mov	w2, #0x0                   	// #0
  42d0f4:	ldr	x1, [sp, #64]
  42d0f8:	ldr	x0, [sp, #16]
  42d0fc:	bl	40ae80 <fnmatch@plt>
  42d100:	cmp	w0, #0x0
  42d104:	b.ne	42d134 <import_parent_into_properties+0x140>  // b.any
  42d108:	ldr	x0, [sp, #48]
  42d10c:	mov	x2, x0
  42d110:	ldr	x1, [sp, #64]
  42d114:	ldr	x0, [sp, #24]
  42d118:	bl	40bab0 <device_add_property@plt>
  42d11c:	str	w0, [sp, #44]
  42d120:	ldr	w0, [sp, #44]
  42d124:	cmp	w0, #0x0
  42d128:	b.ge	42d138 <import_parent_into_properties+0x144>  // b.tcont
  42d12c:	ldr	w0, [sp, #44]
  42d130:	b	42d158 <import_parent_into_properties+0x164>
  42d134:	nop
  42d138:	ldr	x0, [sp, #56]
  42d13c:	add	x1, sp, #0x30
  42d140:	bl	40a5a0 <sd_device_get_property_next@plt>
  42d144:	str	x0, [sp, #64]
  42d148:	ldr	x0, [sp, #64]
  42d14c:	cmp	x0, #0x0
  42d150:	b.ne	42d0f0 <import_parent_into_properties+0xfc>  // b.any
  42d154:	mov	w0, #0x1                   	// #1
  42d158:	mov	w1, w0
  42d15c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42d160:	ldr	x0, [x0, #4032]
  42d164:	ldr	x2, [sp, #72]
  42d168:	ldr	x0, [x0]
  42d16c:	eor	x0, x2, x0
  42d170:	cmp	x0, #0x0
  42d174:	b.eq	42d17c <import_parent_into_properties+0x188>  // b.none
  42d178:	bl	40b280 <__stack_chk_fail@plt>
  42d17c:	mov	w0, w1
  42d180:	ldp	x29, x30, [sp], #80
  42d184:	ret

000000000042d188 <attr_subst_subdir>:
  42d188:	sub	sp, sp, #0x470
  42d18c:	stp	x29, x30, [sp]
  42d190:	mov	x29, sp
  42d194:	str	x19, [sp, #16]
  42d198:	str	x0, [sp, #40]
  42d19c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42d1a0:	ldr	x0, [x0, #4032]
  42d1a4:	ldr	x1, [x0]
  42d1a8:	str	x1, [sp, #1128]
  42d1ac:	mov	x1, #0x0                   	// #0
  42d1b0:	str	xzr, [sp, #56]
  42d1b4:	ldr	x0, [sp, #40]
  42d1b8:	cmp	x0, #0x0
  42d1bc:	cset	w0, eq  // eq = none
  42d1c0:	and	w0, w0, #0xff
  42d1c4:	and	x0, x0, #0xff
  42d1c8:	cmp	x0, #0x0
  42d1cc:	b.eq	42d1f8 <attr_subst_subdir+0x70>  // b.none
  42d1d0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d1d4:	add	x1, x0, #0xbb
  42d1d8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42d1dc:	add	x4, x0, #0xa60
  42d1e0:	mov	w3, #0x5d0                 	// #1488
  42d1e4:	mov	x2, x1
  42d1e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d1ec:	add	x1, x0, #0xdf0
  42d1f0:	mov	w0, #0x1                   	// #1
  42d1f4:	bl	40abb0 <log_assert_failed_realm@plt>
  42d1f8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d1fc:	add	x1, x0, #0xdf8
  42d200:	ldr	x0, [sp, #40]
  42d204:	bl	40ac30 <strstr@plt>
  42d208:	str	x0, [sp, #80]
  42d20c:	ldr	x0, [sp, #80]
  42d210:	cmp	x0, #0x0
  42d214:	b.ne	42d220 <attr_subst_subdir+0x98>  // b.any
  42d218:	mov	w19, #0x0                   	// #0
  42d21c:	b	42d370 <attr_subst_subdir+0x1e8>
  42d220:	ldr	x1, [sp, #80]
  42d224:	ldr	x0, [sp, #40]
  42d228:	sub	x0, x1, x0
  42d22c:	add	x0, x0, #0x1
  42d230:	str	x0, [sp, #88]
  42d234:	ldr	x0, [sp, #80]
  42d238:	add	x0, x0, #0x2
  42d23c:	str	x0, [sp, #80]
  42d240:	add	x0, sp, #0x68
  42d244:	str	x0, [sp, #64]
  42d248:	mov	x0, #0x400                 	// #1024
  42d24c:	str	x0, [sp, #96]
  42d250:	add	x0, sp, #0x40
  42d254:	ldr	x3, [sp, #88]
  42d258:	ldr	x2, [sp, #40]
  42d25c:	ldr	x1, [sp, #96]
  42d260:	bl	40b150 <strnpcpy@plt>
  42d264:	mov	x1, x0
  42d268:	ldr	x0, [sp, #96]
  42d26c:	sub	x0, x0, x1
  42d270:	str	x0, [sp, #96]
  42d274:	add	x0, sp, #0x68
  42d278:	bl	40b770 <opendir@plt>
  42d27c:	str	x0, [sp, #56]
  42d280:	ldr	x0, [sp, #56]
  42d284:	cmp	x0, #0x0
  42d288:	b.ne	42d29c <attr_subst_subdir+0x114>  // b.any
  42d28c:	bl	40b040 <__errno_location@plt>
  42d290:	ldr	w0, [x0]
  42d294:	neg	w19, w0
  42d298:	b	42d370 <attr_subst_subdir+0x1e8>
  42d29c:	bl	40b040 <__errno_location@plt>
  42d2a0:	str	wzr, [x0]
  42d2a4:	ldr	x0, [sp, #56]
  42d2a8:	bl	40abe0 <readdir64@plt>
  42d2ac:	str	x0, [sp, #72]
  42d2b0:	ldr	x0, [sp, #72]
  42d2b4:	cmp	x0, #0x0
  42d2b8:	b.ne	42d2d4 <attr_subst_subdir+0x14c>  // b.any
  42d2bc:	bl	40b040 <__errno_location@plt>
  42d2c0:	ldr	w0, [x0]
  42d2c4:	cmp	w0, #0x0
  42d2c8:	nop
  42d2cc:	mov	w19, #0xfffffffe            	// #-2
  42d2d0:	b	42d370 <attr_subst_subdir+0x1e8>
  42d2d4:	ldr	x0, [sp, #72]
  42d2d8:	ldrb	w0, [x0, #19]
  42d2dc:	cmp	w0, #0x2e
  42d2e0:	b.eq	42d34c <attr_subst_subdir+0x1c4>  // b.none
  42d2e4:	ldr	x5, [sp, #64]
  42d2e8:	ldr	x0, [sp, #72]
  42d2ec:	add	x0, x0, #0x13
  42d2f0:	mov	x4, #0x0                   	// #0
  42d2f4:	ldr	x3, [sp, #80]
  42d2f8:	mov	x2, x0
  42d2fc:	ldr	x1, [sp, #96]
  42d300:	mov	x0, x5
  42d304:	bl	40a790 <strscpyl@plt>
  42d308:	ldr	x0, [sp, #56]
  42d30c:	bl	40ab70 <dirfd@plt>
  42d310:	mov	w4, w0
  42d314:	ldr	x0, [sp, #64]
  42d318:	mov	w3, #0x0                   	// #0
  42d31c:	mov	w2, #0x0                   	// #0
  42d320:	mov	x1, x0
  42d324:	mov	w0, w4
  42d328:	bl	40abc0 <faccessat@plt>
  42d32c:	cmp	w0, #0x0
  42d330:	b.lt	42d354 <attr_subst_subdir+0x1cc>  // b.tstop
  42d334:	add	x0, sp, #0x68
  42d338:	mov	x1, x0
  42d33c:	ldr	x0, [sp, #40]
  42d340:	bl	40bc20 <strcpy@plt>
  42d344:	mov	w19, #0x0                   	// #0
  42d348:	b	42d370 <attr_subst_subdir+0x1e8>
  42d34c:	nop
  42d350:	b	42d358 <attr_subst_subdir+0x1d0>
  42d354:	nop
  42d358:	bl	40b040 <__errno_location@plt>
  42d35c:	str	wzr, [x0]
  42d360:	ldr	x0, [sp, #56]
  42d364:	bl	40abe0 <readdir64@plt>
  42d368:	str	x0, [sp, #72]
  42d36c:	b	42d2b0 <attr_subst_subdir+0x128>
  42d370:	add	x0, sp, #0x38
  42d374:	bl	41fdf4 <closedirp>
  42d378:	mov	w1, w19
  42d37c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42d380:	ldr	x0, [x0, #4032]
  42d384:	ldr	x2, [sp, #1128]
  42d388:	ldr	x0, [x0]
  42d38c:	eor	x0, x2, x0
  42d390:	cmp	x0, #0x0
  42d394:	b.eq	42d39c <attr_subst_subdir+0x214>  // b.none
  42d398:	bl	40b280 <__stack_chk_fail@plt>
  42d39c:	mov	w0, w1
  42d3a0:	ldr	x19, [sp, #16]
  42d3a4:	ldp	x29, x30, [sp]
  42d3a8:	add	sp, sp, #0x470
  42d3ac:	ret

000000000042d3b0 <udev_rule_apply_token_to_event>:
  42d3b0:	mov	x12, #0x4fe0                	// #20448
  42d3b4:	sub	sp, sp, x12
  42d3b8:	stp	x29, x30, [sp, #48]
  42d3bc:	add	x29, sp, #0x30
  42d3c0:	stp	x19, x20, [sp, #64]
  42d3c4:	stp	x21, x22, [sp, #80]
  42d3c8:	str	x23, [sp, #96]
  42d3cc:	str	x0, [sp, #152]
  42d3d0:	str	x1, [sp, #144]
  42d3d4:	str	x2, [sp, #136]
  42d3d8:	str	x3, [sp, #128]
  42d3dc:	str	x4, [sp, #120]
  42d3e0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  42d3e4:	ldr	x0, [x0, #4032]
  42d3e8:	ldr	x1, [x0]
  42d3ec:	str	x1, [sp, #20440]
  42d3f0:	mov	x1, #0x0                   	// #0
  42d3f4:	ldr	x0, [sp, #152]
  42d3f8:	cmp	x0, #0x0
  42d3fc:	cset	w0, eq  // eq = none
  42d400:	and	w0, w0, #0xff
  42d404:	and	x0, x0, #0xff
  42d408:	cmp	x0, #0x0
  42d40c:	b.eq	42d438 <udev_rule_apply_token_to_event+0x88>  // b.none
  42d410:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d414:	add	x1, x0, #0xbb
  42d418:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42d41c:	add	x4, x0, #0xa78
  42d420:	mov	w3, #0x5fe                 	// #1534
  42d424:	mov	x2, x1
  42d428:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d42c:	add	x1, x0, #0x158
  42d430:	mov	w0, #0x1                   	// #1
  42d434:	bl	40abb0 <log_assert_failed_realm@plt>
  42d438:	ldr	x0, [sp, #144]
  42d43c:	cmp	x0, #0x0
  42d440:	cset	w0, eq  // eq = none
  42d444:	and	w0, w0, #0xff
  42d448:	and	x0, x0, #0xff
  42d44c:	cmp	x0, #0x0
  42d450:	b.eq	42d47c <udev_rule_apply_token_to_event+0xcc>  // b.none
  42d454:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d458:	add	x1, x0, #0xbb
  42d45c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42d460:	add	x4, x0, #0xa78
  42d464:	mov	w3, #0x5ff                 	// #1535
  42d468:	mov	x2, x1
  42d46c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d470:	add	x1, x0, #0xdb0
  42d474:	mov	w0, #0x1                   	// #1
  42d478:	bl	40abb0 <log_assert_failed_realm@plt>
  42d47c:	ldr	x0, [sp, #136]
  42d480:	cmp	x0, #0x0
  42d484:	cset	w0, eq  // eq = none
  42d488:	and	w0, w0, #0xff
  42d48c:	and	x0, x0, #0xff
  42d490:	cmp	x0, #0x0
  42d494:	b.eq	42d4c0 <udev_rule_apply_token_to_event+0x110>  // b.none
  42d498:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d49c:	add	x1, x0, #0xbb
  42d4a0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42d4a4:	add	x4, x0, #0xa78
  42d4a8:	mov	w3, #0x600                 	// #1536
  42d4ac:	mov	x2, x1
  42d4b0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d4b4:	add	x1, x0, #0xdb8
  42d4b8:	mov	w0, #0x1                   	// #1
  42d4bc:	bl	40abb0 <log_assert_failed_realm@plt>
  42d4c0:	ldr	x0, [sp, #152]
  42d4c4:	ldr	x0, [x0, #32]
  42d4c8:	ldr	x0, [x0, #8]
  42d4cc:	ldr	x0, [x0, #48]
  42d4d0:	str	x0, [sp, #704]
  42d4d4:	ldr	x0, [sp, #704]
  42d4d8:	ldrsb	w0, [x0]
  42d4dc:	cmp	w0, #0x2e
  42d4e0:	b.hi	433a88 <udev_rule_apply_token_to_event+0x66d8>  // b.pmore
  42d4e4:	adrp	x1, 455000 <__func__.10675+0x10a0>
  42d4e8:	add	x1, x1, #0x740
  42d4ec:	ldr	w0, [x1, w0, uxtw #2]
  42d4f0:	adr	x1, 42d4fc <udev_rule_apply_token_to_event+0x14c>
  42d4f4:	add	x0, x1, w0, sxtw #2
  42d4f8:	br	x0
  42d4fc:	add	x0, sp, #0x280
  42d500:	mov	x1, x0
  42d504:	ldr	x0, [sp, #144]
  42d508:	bl	40b4b0 <device_get_action@plt>
  42d50c:	str	w0, [sp, #168]
  42d510:	ldr	w0, [sp, #168]
  42d514:	cmp	w0, #0x0
  42d518:	b.ge	42d67c <udev_rule_apply_token_to_event+0x2cc>  // b.tcont
  42d51c:	ldr	x0, [sp, #152]
  42d520:	str	x0, [sp, #2864]
  42d524:	ldr	x0, [sp, #2864]
  42d528:	cmp	x0, #0x0
  42d52c:	b.eq	42d53c <udev_rule_apply_token_to_event+0x18c>  // b.none
  42d530:	ldr	x0, [sp, #2864]
  42d534:	ldr	x0, [x0, #32]
  42d538:	b	42d540 <udev_rule_apply_token_to_event+0x190>
  42d53c:	mov	x0, #0x0                   	// #0
  42d540:	str	x0, [sp, #2872]
  42d544:	ldr	x0, [sp, #2872]
  42d548:	cmp	x0, #0x0
  42d54c:	b.eq	42d55c <udev_rule_apply_token_to_event+0x1ac>  // b.none
  42d550:	ldr	x0, [sp, #2872]
  42d554:	ldr	x0, [x0, #8]
  42d558:	b	42d560 <udev_rule_apply_token_to_event+0x1b0>
  42d55c:	mov	x0, #0x0                   	// #0
  42d560:	str	x0, [sp, #2880]
  42d564:	ldr	x0, [sp, #2872]
  42d568:	cmp	x0, #0x0
  42d56c:	b.eq	42d57c <udev_rule_apply_token_to_event+0x1cc>  // b.none
  42d570:	ldr	x0, [sp, #2872]
  42d574:	ldr	x0, [x0]
  42d578:	b	42d580 <udev_rule_apply_token_to_event+0x1d0>
  42d57c:	mov	x0, #0x0                   	// #0
  42d580:	str	x0, [sp, #2888]
  42d584:	str	xzr, [sp, #648]
  42d588:	ldr	x0, [sp, #144]
  42d58c:	str	x0, [sp, #2896]
  42d590:	mov	w0, #0x3                   	// #3
  42d594:	str	w0, [sp, #608]
  42d598:	ldr	w0, [sp, #168]
  42d59c:	str	w0, [sp, #612]
  42d5a0:	ldr	x0, [sp, #2896]
  42d5a4:	cmp	x0, #0x0
  42d5a8:	b.eq	42d5e4 <udev_rule_apply_token_to_event+0x234>  // b.none
  42d5ac:	mov	w0, #0x1                   	// #1
  42d5b0:	bl	40be30 <log_get_max_level_realm@plt>
  42d5b4:	mov	w1, w0
  42d5b8:	ldr	w0, [sp, #608]
  42d5bc:	cmp	w0, w1
  42d5c0:	cset	w0, le
  42d5c4:	and	w0, w0, #0xff
  42d5c8:	and	x0, x0, #0xff
  42d5cc:	cmp	x0, #0x0
  42d5d0:	b.eq	42d5e4 <udev_rule_apply_token_to_event+0x234>  // b.none
  42d5d4:	add	x0, sp, #0x288
  42d5d8:	mov	x1, x0
  42d5dc:	ldr	x0, [sp, #2896]
  42d5e0:	bl	40aba0 <sd_device_get_sysname@plt>
  42d5e4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d5e8:	add	x20, x0, #0xbb
  42d5ec:	ldr	x0, [sp, #648]
  42d5f0:	cmp	x0, #0x0
  42d5f4:	b.eq	42d604 <udev_rule_apply_token_to_event+0x254>  // b.none
  42d5f8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d5fc:	add	x19, x0, #0xd8
  42d600:	b	42d608 <udev_rule_apply_token_to_event+0x258>
  42d604:	mov	x19, #0x0                   	// #0
  42d608:	ldr	x21, [sp, #648]
  42d60c:	ldr	x0, [sp, #2888]
  42d610:	bl	41fb4c <strna>
  42d614:	mov	x1, x0
  42d618:	ldr	x0, [sp, #2880]
  42d61c:	cmp	x0, #0x0
  42d620:	b.eq	42d630 <udev_rule_apply_token_to_event+0x280>  // b.none
  42d624:	ldr	x0, [sp, #2880]
  42d628:	ldr	w0, [x0, #8]
  42d62c:	b	42d634 <udev_rule_apply_token_to_event+0x284>
  42d630:	mov	w0, #0x0                   	// #0
  42d634:	str	w0, [sp, #24]
  42d638:	str	x1, [sp, #16]
  42d63c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d640:	add	x0, x0, #0xe00
  42d644:	str	x0, [sp, #8]
  42d648:	str	xzr, [sp]
  42d64c:	mov	x7, #0x0                   	// #0
  42d650:	mov	x6, x21
  42d654:	mov	x5, x19
  42d658:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42d65c:	add	x4, x0, #0xa98
  42d660:	mov	w3, #0x60f                 	// #1551
  42d664:	mov	x2, x20
  42d668:	ldr	w1, [sp, #612]
  42d66c:	ldr	w0, [sp, #608]
  42d670:	bl	40b020 <log_object_internal@plt>
  42d674:	mov	w19, w0
  42d678:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42d67c:	ldr	w0, [sp, #640]
  42d680:	bl	40a370 <device_action_to_string@plt>
  42d684:	mov	x1, x0
  42d688:	ldr	x0, [sp, #704]
  42d68c:	bl	42c79c <token_match_string>
  42d690:	and	w0, w0, #0xff
  42d694:	mov	w19, w0
  42d698:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42d69c:	add	x0, sp, #0x278
  42d6a0:	mov	x1, x0
  42d6a4:	ldr	x0, [sp, #144]
  42d6a8:	bl	40b600 <sd_device_get_devpath@plt>
  42d6ac:	str	w0, [sp, #168]
  42d6b0:	ldr	w0, [sp, #168]
  42d6b4:	cmp	w0, #0x0
  42d6b8:	b.ge	42d81c <udev_rule_apply_token_to_event+0x46c>  // b.tcont
  42d6bc:	ldr	x0, [sp, #152]
  42d6c0:	str	x0, [sp, #2824]
  42d6c4:	ldr	x0, [sp, #2824]
  42d6c8:	cmp	x0, #0x0
  42d6cc:	b.eq	42d6dc <udev_rule_apply_token_to_event+0x32c>  // b.none
  42d6d0:	ldr	x0, [sp, #2824]
  42d6d4:	ldr	x0, [x0, #32]
  42d6d8:	b	42d6e0 <udev_rule_apply_token_to_event+0x330>
  42d6dc:	mov	x0, #0x0                   	// #0
  42d6e0:	str	x0, [sp, #2832]
  42d6e4:	ldr	x0, [sp, #2832]
  42d6e8:	cmp	x0, #0x0
  42d6ec:	b.eq	42d6fc <udev_rule_apply_token_to_event+0x34c>  // b.none
  42d6f0:	ldr	x0, [sp, #2832]
  42d6f4:	ldr	x0, [x0, #8]
  42d6f8:	b	42d700 <udev_rule_apply_token_to_event+0x350>
  42d6fc:	mov	x0, #0x0                   	// #0
  42d700:	str	x0, [sp, #2840]
  42d704:	ldr	x0, [sp, #2832]
  42d708:	cmp	x0, #0x0
  42d70c:	b.eq	42d71c <udev_rule_apply_token_to_event+0x36c>  // b.none
  42d710:	ldr	x0, [sp, #2832]
  42d714:	ldr	x0, [x0]
  42d718:	b	42d720 <udev_rule_apply_token_to_event+0x370>
  42d71c:	mov	x0, #0x0                   	// #0
  42d720:	str	x0, [sp, #2848]
  42d724:	str	xzr, [sp, #648]
  42d728:	ldr	x0, [sp, #144]
  42d72c:	str	x0, [sp, #2856]
  42d730:	mov	w0, #0x3                   	// #3
  42d734:	str	w0, [sp, #600]
  42d738:	ldr	w0, [sp, #168]
  42d73c:	str	w0, [sp, #604]
  42d740:	ldr	x0, [sp, #2856]
  42d744:	cmp	x0, #0x0
  42d748:	b.eq	42d784 <udev_rule_apply_token_to_event+0x3d4>  // b.none
  42d74c:	mov	w0, #0x1                   	// #1
  42d750:	bl	40be30 <log_get_max_level_realm@plt>
  42d754:	mov	w1, w0
  42d758:	ldr	w0, [sp, #600]
  42d75c:	cmp	w0, w1
  42d760:	cset	w0, le
  42d764:	and	w0, w0, #0xff
  42d768:	and	x0, x0, #0xff
  42d76c:	cmp	x0, #0x0
  42d770:	b.eq	42d784 <udev_rule_apply_token_to_event+0x3d4>  // b.none
  42d774:	add	x0, sp, #0x288
  42d778:	mov	x1, x0
  42d77c:	ldr	x0, [sp, #2856]
  42d780:	bl	40aba0 <sd_device_get_sysname@plt>
  42d784:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d788:	add	x20, x0, #0xbb
  42d78c:	ldr	x0, [sp, #648]
  42d790:	cmp	x0, #0x0
  42d794:	b.eq	42d7a4 <udev_rule_apply_token_to_event+0x3f4>  // b.none
  42d798:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d79c:	add	x19, x0, #0xd8
  42d7a0:	b	42d7a8 <udev_rule_apply_token_to_event+0x3f8>
  42d7a4:	mov	x19, #0x0                   	// #0
  42d7a8:	ldr	x21, [sp, #648]
  42d7ac:	ldr	x0, [sp, #2848]
  42d7b0:	bl	41fb4c <strna>
  42d7b4:	mov	x1, x0
  42d7b8:	ldr	x0, [sp, #2840]
  42d7bc:	cmp	x0, #0x0
  42d7c0:	b.eq	42d7d0 <udev_rule_apply_token_to_event+0x420>  // b.none
  42d7c4:	ldr	x0, [sp, #2840]
  42d7c8:	ldr	w0, [x0, #8]
  42d7cc:	b	42d7d4 <udev_rule_apply_token_to_event+0x424>
  42d7d0:	mov	w0, #0x0                   	// #0
  42d7d4:	str	w0, [sp, #24]
  42d7d8:	str	x1, [sp, #16]
  42d7dc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d7e0:	add	x0, x0, #0xe30
  42d7e4:	str	x0, [sp, #8]
  42d7e8:	str	xzr, [sp]
  42d7ec:	mov	x7, #0x0                   	// #0
  42d7f0:	mov	x6, x21
  42d7f4:	mov	x5, x19
  42d7f8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42d7fc:	add	x4, x0, #0xa98
  42d800:	mov	w3, #0x616                 	// #1558
  42d804:	mov	x2, x20
  42d808:	ldr	w1, [sp, #604]
  42d80c:	ldr	w0, [sp, #600]
  42d810:	bl	40b020 <log_object_internal@plt>
  42d814:	mov	w19, w0
  42d818:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42d81c:	ldr	x0, [sp, #632]
  42d820:	mov	x1, x0
  42d824:	ldr	x0, [sp, #704]
  42d828:	bl	42c79c <token_match_string>
  42d82c:	and	w0, w0, #0xff
  42d830:	mov	w19, w0
  42d834:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42d838:	add	x0, sp, #0x278
  42d83c:	mov	x1, x0
  42d840:	ldr	x0, [sp, #144]
  42d844:	bl	40aba0 <sd_device_get_sysname@plt>
  42d848:	str	w0, [sp, #168]
  42d84c:	ldr	w0, [sp, #168]
  42d850:	cmp	w0, #0x0
  42d854:	b.ge	42d9b8 <udev_rule_apply_token_to_event+0x608>  // b.tcont
  42d858:	ldr	x0, [sp, #152]
  42d85c:	str	x0, [sp, #2784]
  42d860:	ldr	x0, [sp, #2784]
  42d864:	cmp	x0, #0x0
  42d868:	b.eq	42d878 <udev_rule_apply_token_to_event+0x4c8>  // b.none
  42d86c:	ldr	x0, [sp, #2784]
  42d870:	ldr	x0, [x0, #32]
  42d874:	b	42d87c <udev_rule_apply_token_to_event+0x4cc>
  42d878:	mov	x0, #0x0                   	// #0
  42d87c:	str	x0, [sp, #2792]
  42d880:	ldr	x0, [sp, #2792]
  42d884:	cmp	x0, #0x0
  42d888:	b.eq	42d898 <udev_rule_apply_token_to_event+0x4e8>  // b.none
  42d88c:	ldr	x0, [sp, #2792]
  42d890:	ldr	x0, [x0, #8]
  42d894:	b	42d89c <udev_rule_apply_token_to_event+0x4ec>
  42d898:	mov	x0, #0x0                   	// #0
  42d89c:	str	x0, [sp, #2800]
  42d8a0:	ldr	x0, [sp, #2792]
  42d8a4:	cmp	x0, #0x0
  42d8a8:	b.eq	42d8b8 <udev_rule_apply_token_to_event+0x508>  // b.none
  42d8ac:	ldr	x0, [sp, #2792]
  42d8b0:	ldr	x0, [x0]
  42d8b4:	b	42d8bc <udev_rule_apply_token_to_event+0x50c>
  42d8b8:	mov	x0, #0x0                   	// #0
  42d8bc:	str	x0, [sp, #2808]
  42d8c0:	str	xzr, [sp, #648]
  42d8c4:	ldr	x0, [sp, #144]
  42d8c8:	str	x0, [sp, #2816]
  42d8cc:	mov	w0, #0x3                   	// #3
  42d8d0:	str	w0, [sp, #592]
  42d8d4:	ldr	w0, [sp, #168]
  42d8d8:	str	w0, [sp, #596]
  42d8dc:	ldr	x0, [sp, #2816]
  42d8e0:	cmp	x0, #0x0
  42d8e4:	b.eq	42d920 <udev_rule_apply_token_to_event+0x570>  // b.none
  42d8e8:	mov	w0, #0x1                   	// #1
  42d8ec:	bl	40be30 <log_get_max_level_realm@plt>
  42d8f0:	mov	w1, w0
  42d8f4:	ldr	w0, [sp, #592]
  42d8f8:	cmp	w0, w1
  42d8fc:	cset	w0, le
  42d900:	and	w0, w0, #0xff
  42d904:	and	x0, x0, #0xff
  42d908:	cmp	x0, #0x0
  42d90c:	b.eq	42d920 <udev_rule_apply_token_to_event+0x570>  // b.none
  42d910:	add	x0, sp, #0x288
  42d914:	mov	x1, x0
  42d918:	ldr	x0, [sp, #2816]
  42d91c:	bl	40aba0 <sd_device_get_sysname@plt>
  42d920:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d924:	add	x20, x0, #0xbb
  42d928:	ldr	x0, [sp, #648]
  42d92c:	cmp	x0, #0x0
  42d930:	b.eq	42d940 <udev_rule_apply_token_to_event+0x590>  // b.none
  42d934:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d938:	add	x19, x0, #0xd8
  42d93c:	b	42d944 <udev_rule_apply_token_to_event+0x594>
  42d940:	mov	x19, #0x0                   	// #0
  42d944:	ldr	x21, [sp, #648]
  42d948:	ldr	x0, [sp, #2808]
  42d94c:	bl	41fb4c <strna>
  42d950:	mov	x1, x0
  42d954:	ldr	x0, [sp, #2800]
  42d958:	cmp	x0, #0x0
  42d95c:	b.eq	42d96c <udev_rule_apply_token_to_event+0x5bc>  // b.none
  42d960:	ldr	x0, [sp, #2800]
  42d964:	ldr	w0, [x0, #8]
  42d968:	b	42d970 <udev_rule_apply_token_to_event+0x5c0>
  42d96c:	mov	w0, #0x0                   	// #0
  42d970:	str	w0, [sp, #24]
  42d974:	str	x1, [sp, #16]
  42d978:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d97c:	add	x0, x0, #0xe50
  42d980:	str	x0, [sp, #8]
  42d984:	str	xzr, [sp]
  42d988:	mov	x7, #0x0                   	// #0
  42d98c:	mov	x6, x21
  42d990:	mov	x5, x19
  42d994:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42d998:	add	x4, x0, #0xa98
  42d99c:	mov	w3, #0x61d                 	// #1565
  42d9a0:	mov	x2, x20
  42d9a4:	ldr	w1, [sp, #596]
  42d9a8:	ldr	w0, [sp, #592]
  42d9ac:	bl	40b020 <log_object_internal@plt>
  42d9b0:	mov	w19, w0
  42d9b4:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42d9b8:	ldr	x0, [sp, #632]
  42d9bc:	mov	x1, x0
  42d9c0:	ldr	x0, [sp, #704]
  42d9c4:	bl	42c79c <token_match_string>
  42d9c8:	and	w0, w0, #0xff
  42d9cc:	mov	w19, w0
  42d9d0:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42d9d4:	ldr	x0, [sp, #144]
  42d9d8:	bl	40ad70 <sd_device_get_devlink_first@plt>
  42d9dc:	str	x0, [sp, #632]
  42d9e0:	b	42da3c <udev_rule_apply_token_to_event+0x68c>
  42d9e4:	ldr	x2, [sp, #632]
  42d9e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42d9ec:	add	x1, x0, #0xe70
  42d9f0:	mov	x0, x2
  42d9f4:	bl	41fbb0 <startswith>
  42d9f8:	bl	41fb28 <strempty>
  42d9fc:	mov	x1, x0
  42da00:	ldr	x0, [sp, #704]
  42da04:	bl	42c79c <token_match_string>
  42da08:	and	w0, w0, #0xff
  42da0c:	cmp	w0, #0x0
  42da10:	b.eq	42da30 <udev_rule_apply_token_to_event+0x680>  // b.none
  42da14:	ldr	x0, [sp, #704]
  42da18:	ldrsb	w0, [x0, #1]
  42da1c:	cmp	w0, #0x0
  42da20:	cset	w0, eq  // eq = none
  42da24:	and	w0, w0, #0xff
  42da28:	mov	w19, w0
  42da2c:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42da30:	ldr	x0, [sp, #144]
  42da34:	bl	40bde0 <sd_device_get_devlink_next@plt>
  42da38:	str	x0, [sp, #632]
  42da3c:	ldr	x0, [sp, #632]
  42da40:	cmp	x0, #0x0
  42da44:	b.ne	42d9e4 <udev_rule_apply_token_to_event+0x634>  // b.any
  42da48:	ldr	x0, [sp, #704]
  42da4c:	ldrsb	w0, [x0, #1]
  42da50:	cmp	w0, #0x1
  42da54:	cset	w0, eq  // eq = none
  42da58:	and	w0, w0, #0xff
  42da5c:	mov	w19, w0
  42da60:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42da64:	ldr	x0, [sp, #136]
  42da68:	ldr	x0, [x0, #24]
  42da6c:	mov	x1, x0
  42da70:	ldr	x0, [sp, #704]
  42da74:	bl	42c79c <token_match_string>
  42da78:	and	w0, w0, #0xff
  42da7c:	mov	w19, w0
  42da80:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42da84:	ldr	x0, [sp, #704]
  42da88:	ldr	x0, [x0, #16]
  42da8c:	add	x1, sp, #0x278
  42da90:	mov	x2, x1
  42da94:	mov	x1, x0
  42da98:	ldr	x0, [sp, #144]
  42da9c:	bl	40a310 <sd_device_get_property_value@plt>
  42daa0:	cmp	w0, #0x0
  42daa4:	b.ge	42dac0 <udev_rule_apply_token_to_event+0x710>  // b.tcont
  42daa8:	ldr	x0, [sp, #704]
  42daac:	ldr	x0, [x0, #16]
  42dab0:	mov	x1, x0
  42dab4:	ldr	x0, [sp, #120]
  42dab8:	bl	41fcb0 <hashmap_get>
  42dabc:	str	x0, [sp, #632]
  42dac0:	ldr	x0, [sp, #632]
  42dac4:	mov	x1, x0
  42dac8:	ldr	x0, [sp, #704]
  42dacc:	bl	42c79c <token_match_string>
  42dad0:	and	w0, w0, #0xff
  42dad4:	mov	w19, w0
  42dad8:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42dadc:	ldr	x0, [sp, #704]
  42dae0:	ldr	x0, [x0, #16]
  42dae4:	str	x0, [sp, #2776]
  42dae8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42daec:	add	x1, x0, #0x8
  42daf0:	ldr	x0, [sp, #2776]
  42daf4:	bl	40b710 <strcmp@plt>
  42daf8:	cmp	w0, #0x0
  42dafc:	b.ne	42db10 <udev_rule_apply_token_to_event+0x760>  // b.any
  42db00:	bl	40ad50 <uname_architecture@plt>
  42db04:	bl	40a500 <architecture_to_string@plt>
  42db08:	str	x0, [sp, #632]
  42db0c:	b	42db60 <udev_rule_apply_token_to_event+0x7b0>
  42db10:	adrp	x0, 454000 <__func__.10675+0xa0>
  42db14:	add	x1, x0, #0x10
  42db18:	ldr	x0, [sp, #2776]
  42db1c:	bl	40b710 <strcmp@plt>
  42db20:	cmp	w0, #0x0
  42db24:	b.ne	42db38 <udev_rule_apply_token_to_event+0x788>  // b.any
  42db28:	bl	40a410 <detect_virtualization@plt>
  42db2c:	bl	40afc0 <virtualization_to_string@plt>
  42db30:	str	x0, [sp, #632]
  42db34:	b	42db60 <udev_rule_apply_token_to_event+0x7b0>
  42db38:	adrp	x0, 454000 <__func__.10675+0xa0>
  42db3c:	add	x1, x0, #0xbb
  42db40:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42db44:	add	x4, x0, #0xa78
  42db48:	mov	w3, #0x634                 	// #1588
  42db4c:	mov	x2, x1
  42db50:	adrp	x0, 454000 <__func__.10675+0xa0>
  42db54:	add	x1, x0, #0xe78
  42db58:	mov	w0, #0x1                   	// #1
  42db5c:	bl	40aca0 <log_assert_failed_unreachable_realm@plt>
  42db60:	ldr	x0, [sp, #632]
  42db64:	mov	x1, x0
  42db68:	ldr	x0, [sp, #704]
  42db6c:	bl	42c79c <token_match_string>
  42db70:	and	w0, w0, #0xff
  42db74:	mov	w19, w0
  42db78:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42db7c:	ldr	x0, [sp, #144]
  42db80:	bl	40b780 <sd_device_get_tag_first@plt>
  42db84:	str	x0, [sp, #632]
  42db88:	b	42dbd0 <udev_rule_apply_token_to_event+0x820>
  42db8c:	ldr	x0, [sp, #632]
  42db90:	mov	x1, x0
  42db94:	ldr	x0, [sp, #704]
  42db98:	bl	42c79c <token_match_string>
  42db9c:	and	w0, w0, #0xff
  42dba0:	cmp	w0, #0x0
  42dba4:	b.eq	42dbc4 <udev_rule_apply_token_to_event+0x814>  // b.none
  42dba8:	ldr	x0, [sp, #704]
  42dbac:	ldrsb	w0, [x0, #1]
  42dbb0:	cmp	w0, #0x0
  42dbb4:	cset	w0, eq  // eq = none
  42dbb8:	and	w0, w0, #0xff
  42dbbc:	mov	w19, w0
  42dbc0:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42dbc4:	ldr	x0, [sp, #144]
  42dbc8:	bl	40a420 <sd_device_get_tag_next@plt>
  42dbcc:	str	x0, [sp, #632]
  42dbd0:	ldr	x0, [sp, #632]
  42dbd4:	cmp	x0, #0x0
  42dbd8:	b.ne	42db8c <udev_rule_apply_token_to_event+0x7dc>  // b.any
  42dbdc:	ldr	x0, [sp, #704]
  42dbe0:	ldrsb	w0, [x0, #1]
  42dbe4:	cmp	w0, #0x1
  42dbe8:	cset	w0, eq  // eq = none
  42dbec:	and	w0, w0, #0xff
  42dbf0:	mov	w19, w0
  42dbf4:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42dbf8:	add	x0, sp, #0x278
  42dbfc:	mov	x1, x0
  42dc00:	ldr	x0, [sp, #144]
  42dc04:	bl	40af80 <sd_device_get_subsystem@plt>
  42dc08:	str	w0, [sp, #168]
  42dc0c:	ldr	w0, [sp, #168]
  42dc10:	cmn	w0, #0x2
  42dc14:	b.ne	42dc20 <udev_rule_apply_token_to_event+0x870>  // b.any
  42dc18:	str	xzr, [sp, #632]
  42dc1c:	b	42dd8c <udev_rule_apply_token_to_event+0x9dc>
  42dc20:	ldr	w0, [sp, #168]
  42dc24:	cmp	w0, #0x0
  42dc28:	b.ge	42dd8c <udev_rule_apply_token_to_event+0x9dc>  // b.tcont
  42dc2c:	ldr	x0, [sp, #152]
  42dc30:	str	x0, [sp, #2736]
  42dc34:	ldr	x0, [sp, #2736]
  42dc38:	cmp	x0, #0x0
  42dc3c:	b.eq	42dc4c <udev_rule_apply_token_to_event+0x89c>  // b.none
  42dc40:	ldr	x0, [sp, #2736]
  42dc44:	ldr	x0, [x0, #32]
  42dc48:	b	42dc50 <udev_rule_apply_token_to_event+0x8a0>
  42dc4c:	mov	x0, #0x0                   	// #0
  42dc50:	str	x0, [sp, #2744]
  42dc54:	ldr	x0, [sp, #2744]
  42dc58:	cmp	x0, #0x0
  42dc5c:	b.eq	42dc6c <udev_rule_apply_token_to_event+0x8bc>  // b.none
  42dc60:	ldr	x0, [sp, #2744]
  42dc64:	ldr	x0, [x0, #8]
  42dc68:	b	42dc70 <udev_rule_apply_token_to_event+0x8c0>
  42dc6c:	mov	x0, #0x0                   	// #0
  42dc70:	str	x0, [sp, #2752]
  42dc74:	ldr	x0, [sp, #2744]
  42dc78:	cmp	x0, #0x0
  42dc7c:	b.eq	42dc8c <udev_rule_apply_token_to_event+0x8dc>  // b.none
  42dc80:	ldr	x0, [sp, #2744]
  42dc84:	ldr	x0, [x0]
  42dc88:	b	42dc90 <udev_rule_apply_token_to_event+0x8e0>
  42dc8c:	mov	x0, #0x0                   	// #0
  42dc90:	str	x0, [sp, #2760]
  42dc94:	str	xzr, [sp, #648]
  42dc98:	ldr	x0, [sp, #144]
  42dc9c:	str	x0, [sp, #2768]
  42dca0:	mov	w0, #0x3                   	// #3
  42dca4:	str	w0, [sp, #584]
  42dca8:	ldr	w0, [sp, #168]
  42dcac:	str	w0, [sp, #588]
  42dcb0:	ldr	x0, [sp, #2768]
  42dcb4:	cmp	x0, #0x0
  42dcb8:	b.eq	42dcf4 <udev_rule_apply_token_to_event+0x944>  // b.none
  42dcbc:	mov	w0, #0x1                   	// #1
  42dcc0:	bl	40be30 <log_get_max_level_realm@plt>
  42dcc4:	mov	w1, w0
  42dcc8:	ldr	w0, [sp, #584]
  42dccc:	cmp	w0, w1
  42dcd0:	cset	w0, le
  42dcd4:	and	w0, w0, #0xff
  42dcd8:	and	x0, x0, #0xff
  42dcdc:	cmp	x0, #0x0
  42dce0:	b.eq	42dcf4 <udev_rule_apply_token_to_event+0x944>  // b.none
  42dce4:	add	x0, sp, #0x288
  42dce8:	mov	x1, x0
  42dcec:	ldr	x0, [sp, #2768]
  42dcf0:	bl	40aba0 <sd_device_get_sysname@plt>
  42dcf4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42dcf8:	add	x20, x0, #0xbb
  42dcfc:	ldr	x0, [sp, #648]
  42dd00:	cmp	x0, #0x0
  42dd04:	b.eq	42dd14 <udev_rule_apply_token_to_event+0x964>  // b.none
  42dd08:	adrp	x0, 454000 <__func__.10675+0xa0>
  42dd0c:	add	x19, x0, #0xd8
  42dd10:	b	42dd18 <udev_rule_apply_token_to_event+0x968>
  42dd14:	mov	x19, #0x0                   	// #0
  42dd18:	ldr	x21, [sp, #648]
  42dd1c:	ldr	x0, [sp, #2760]
  42dd20:	bl	41fb4c <strna>
  42dd24:	mov	x1, x0
  42dd28:	ldr	x0, [sp, #2752]
  42dd2c:	cmp	x0, #0x0
  42dd30:	b.eq	42dd40 <udev_rule_apply_token_to_event+0x990>  // b.none
  42dd34:	ldr	x0, [sp, #2752]
  42dd38:	ldr	w0, [x0, #8]
  42dd3c:	b	42dd44 <udev_rule_apply_token_to_event+0x994>
  42dd40:	mov	w0, #0x0                   	// #0
  42dd44:	str	w0, [sp, #24]
  42dd48:	str	x1, [sp, #16]
  42dd4c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42dd50:	add	x0, x0, #0xe90
  42dd54:	str	x0, [sp, #8]
  42dd58:	str	xzr, [sp]
  42dd5c:	mov	x7, #0x0                   	// #0
  42dd60:	mov	x6, x21
  42dd64:	mov	x5, x19
  42dd68:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42dd6c:	add	x4, x0, #0xa98
  42dd70:	mov	w3, #0x643                 	// #1603
  42dd74:	mov	x2, x20
  42dd78:	ldr	w1, [sp, #588]
  42dd7c:	ldr	w0, [sp, #584]
  42dd80:	bl	40b020 <log_object_internal@plt>
  42dd84:	mov	w19, w0
  42dd88:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42dd8c:	ldr	x0, [sp, #632]
  42dd90:	mov	x1, x0
  42dd94:	ldr	x0, [sp, #704]
  42dd98:	bl	42c79c <token_match_string>
  42dd9c:	and	w0, w0, #0xff
  42dda0:	mov	w19, w0
  42dda4:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42dda8:	add	x0, sp, #0x278
  42ddac:	mov	x1, x0
  42ddb0:	ldr	x0, [sp, #144]
  42ddb4:	bl	40bcf0 <sd_device_get_driver@plt>
  42ddb8:	str	w0, [sp, #168]
  42ddbc:	ldr	w0, [sp, #168]
  42ddc0:	cmn	w0, #0x2
  42ddc4:	b.ne	42ddd0 <udev_rule_apply_token_to_event+0xa20>  // b.any
  42ddc8:	str	xzr, [sp, #632]
  42ddcc:	b	42df3c <udev_rule_apply_token_to_event+0xb8c>
  42ddd0:	ldr	w0, [sp, #168]
  42ddd4:	cmp	w0, #0x0
  42ddd8:	b.ge	42df3c <udev_rule_apply_token_to_event+0xb8c>  // b.tcont
  42dddc:	ldr	x0, [sp, #152]
  42dde0:	str	x0, [sp, #2696]
  42dde4:	ldr	x0, [sp, #2696]
  42dde8:	cmp	x0, #0x0
  42ddec:	b.eq	42ddfc <udev_rule_apply_token_to_event+0xa4c>  // b.none
  42ddf0:	ldr	x0, [sp, #2696]
  42ddf4:	ldr	x0, [x0, #32]
  42ddf8:	b	42de00 <udev_rule_apply_token_to_event+0xa50>
  42ddfc:	mov	x0, #0x0                   	// #0
  42de00:	str	x0, [sp, #2704]
  42de04:	ldr	x0, [sp, #2704]
  42de08:	cmp	x0, #0x0
  42de0c:	b.eq	42de1c <udev_rule_apply_token_to_event+0xa6c>  // b.none
  42de10:	ldr	x0, [sp, #2704]
  42de14:	ldr	x0, [x0, #8]
  42de18:	b	42de20 <udev_rule_apply_token_to_event+0xa70>
  42de1c:	mov	x0, #0x0                   	// #0
  42de20:	str	x0, [sp, #2712]
  42de24:	ldr	x0, [sp, #2704]
  42de28:	cmp	x0, #0x0
  42de2c:	b.eq	42de3c <udev_rule_apply_token_to_event+0xa8c>  // b.none
  42de30:	ldr	x0, [sp, #2704]
  42de34:	ldr	x0, [x0]
  42de38:	b	42de40 <udev_rule_apply_token_to_event+0xa90>
  42de3c:	mov	x0, #0x0                   	// #0
  42de40:	str	x0, [sp, #2720]
  42de44:	str	xzr, [sp, #648]
  42de48:	ldr	x0, [sp, #144]
  42de4c:	str	x0, [sp, #2728]
  42de50:	mov	w0, #0x3                   	// #3
  42de54:	str	w0, [sp, #576]
  42de58:	ldr	w0, [sp, #168]
  42de5c:	str	w0, [sp, #580]
  42de60:	ldr	x0, [sp, #2728]
  42de64:	cmp	x0, #0x0
  42de68:	b.eq	42dea4 <udev_rule_apply_token_to_event+0xaf4>  // b.none
  42de6c:	mov	w0, #0x1                   	// #1
  42de70:	bl	40be30 <log_get_max_level_realm@plt>
  42de74:	mov	w1, w0
  42de78:	ldr	w0, [sp, #576]
  42de7c:	cmp	w0, w1
  42de80:	cset	w0, le
  42de84:	and	w0, w0, #0xff
  42de88:	and	x0, x0, #0xff
  42de8c:	cmp	x0, #0x0
  42de90:	b.eq	42dea4 <udev_rule_apply_token_to_event+0xaf4>  // b.none
  42de94:	add	x0, sp, #0x288
  42de98:	mov	x1, x0
  42de9c:	ldr	x0, [sp, #2728]
  42dea0:	bl	40aba0 <sd_device_get_sysname@plt>
  42dea4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42dea8:	add	x20, x0, #0xbb
  42deac:	ldr	x0, [sp, #648]
  42deb0:	cmp	x0, #0x0
  42deb4:	b.eq	42dec4 <udev_rule_apply_token_to_event+0xb14>  // b.none
  42deb8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42debc:	add	x19, x0, #0xd8
  42dec0:	b	42dec8 <udev_rule_apply_token_to_event+0xb18>
  42dec4:	mov	x19, #0x0                   	// #0
  42dec8:	ldr	x21, [sp, #648]
  42decc:	ldr	x0, [sp, #2720]
  42ded0:	bl	41fb4c <strna>
  42ded4:	mov	x1, x0
  42ded8:	ldr	x0, [sp, #2712]
  42dedc:	cmp	x0, #0x0
  42dee0:	b.eq	42def0 <udev_rule_apply_token_to_event+0xb40>  // b.none
  42dee4:	ldr	x0, [sp, #2712]
  42dee8:	ldr	w0, [x0, #8]
  42deec:	b	42def4 <udev_rule_apply_token_to_event+0xb44>
  42def0:	mov	w0, #0x0                   	// #0
  42def4:	str	w0, [sp, #24]
  42def8:	str	x1, [sp, #16]
  42defc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42df00:	add	x0, x0, #0xeb8
  42df04:	str	x0, [sp, #8]
  42df08:	str	xzr, [sp]
  42df0c:	mov	x7, #0x0                   	// #0
  42df10:	mov	x6, x21
  42df14:	mov	x5, x19
  42df18:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42df1c:	add	x4, x0, #0xa98
  42df20:	mov	w3, #0x64c                 	// #1612
  42df24:	mov	x2, x20
  42df28:	ldr	w1, [sp, #580]
  42df2c:	ldr	w0, [sp, #576]
  42df30:	bl	40b020 <log_object_internal@plt>
  42df34:	mov	w19, w0
  42df38:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42df3c:	ldr	x0, [sp, #632]
  42df40:	mov	x1, x0
  42df44:	ldr	x0, [sp, #704]
  42df48:	bl	42c79c <token_match_string>
  42df4c:	and	w0, w0, #0xff
  42df50:	mov	w19, w0
  42df54:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42df58:	ldr	x2, [sp, #136]
  42df5c:	ldr	x1, [sp, #144]
  42df60:	ldr	x0, [sp, #704]
  42df64:	bl	42cafc <token_match_attr>
  42df68:	and	w0, w0, #0xff
  42df6c:	mov	w19, w0
  42df70:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42df74:	str	xzr, [sp, #640]
  42df78:	ldr	x0, [sp, #704]
  42df7c:	ldr	x0, [x0, #16]
  42df80:	add	x1, sp, #0xbd8
  42df84:	mov	w4, #0x0                   	// #0
  42df88:	mov	x3, #0x400                 	// #1024
  42df8c:	mov	x2, x1
  42df90:	mov	x1, x0
  42df94:	ldr	x0, [sp, #136]
  42df98:	bl	4185d8 <udev_event_apply_format>
  42df9c:	add	x0, sp, #0xbd8
  42dfa0:	bl	40b370 <sysctl_normalize@plt>
  42dfa4:	mov	x2, x0
  42dfa8:	add	x0, sp, #0x280
  42dfac:	mov	x1, x0
  42dfb0:	mov	x0, x2
  42dfb4:	bl	40aff0 <sysctl_read@plt>
  42dfb8:	str	w0, [sp, #168]
  42dfbc:	ldr	w0, [sp, #168]
  42dfc0:	cmp	w0, #0x0
  42dfc4:	b.ge	42e13c <udev_rule_apply_token_to_event+0xd8c>  // b.tcont
  42dfc8:	ldr	w0, [sp, #168]
  42dfcc:	cmn	w0, #0x2
  42dfd0:	b.eq	42e13c <udev_rule_apply_token_to_event+0xd8c>  // b.none
  42dfd4:	ldr	x0, [sp, #152]
  42dfd8:	str	x0, [sp, #2656]
  42dfdc:	ldr	x0, [sp, #2656]
  42dfe0:	cmp	x0, #0x0
  42dfe4:	b.eq	42dff4 <udev_rule_apply_token_to_event+0xc44>  // b.none
  42dfe8:	ldr	x0, [sp, #2656]
  42dfec:	ldr	x0, [x0, #32]
  42dff0:	b	42dff8 <udev_rule_apply_token_to_event+0xc48>
  42dff4:	mov	x0, #0x0                   	// #0
  42dff8:	str	x0, [sp, #2664]
  42dffc:	ldr	x0, [sp, #2664]
  42e000:	cmp	x0, #0x0
  42e004:	b.eq	42e014 <udev_rule_apply_token_to_event+0xc64>  // b.none
  42e008:	ldr	x0, [sp, #2664]
  42e00c:	ldr	x0, [x0, #8]
  42e010:	b	42e018 <udev_rule_apply_token_to_event+0xc68>
  42e014:	mov	x0, #0x0                   	// #0
  42e018:	str	x0, [sp, #2672]
  42e01c:	ldr	x0, [sp, #2664]
  42e020:	cmp	x0, #0x0
  42e024:	b.eq	42e034 <udev_rule_apply_token_to_event+0xc84>  // b.none
  42e028:	ldr	x0, [sp, #2664]
  42e02c:	ldr	x0, [x0]
  42e030:	b	42e038 <udev_rule_apply_token_to_event+0xc88>
  42e034:	mov	x0, #0x0                   	// #0
  42e038:	str	x0, [sp, #2680]
  42e03c:	str	xzr, [sp, #648]
  42e040:	ldr	x0, [sp, #144]
  42e044:	str	x0, [sp, #2688]
  42e048:	mov	w0, #0x3                   	// #3
  42e04c:	str	w0, [sp, #568]
  42e050:	ldr	w0, [sp, #168]
  42e054:	str	w0, [sp, #572]
  42e058:	ldr	x0, [sp, #2688]
  42e05c:	cmp	x0, #0x0
  42e060:	b.eq	42e09c <udev_rule_apply_token_to_event+0xcec>  // b.none
  42e064:	mov	w0, #0x1                   	// #1
  42e068:	bl	40be30 <log_get_max_level_realm@plt>
  42e06c:	mov	w1, w0
  42e070:	ldr	w0, [sp, #568]
  42e074:	cmp	w0, w1
  42e078:	cset	w0, le
  42e07c:	and	w0, w0, #0xff
  42e080:	and	x0, x0, #0xff
  42e084:	cmp	x0, #0x0
  42e088:	b.eq	42e09c <udev_rule_apply_token_to_event+0xcec>  // b.none
  42e08c:	add	x0, sp, #0x288
  42e090:	mov	x1, x0
  42e094:	ldr	x0, [sp, #2688]
  42e098:	bl	40aba0 <sd_device_get_sysname@plt>
  42e09c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e0a0:	add	x20, x0, #0xbb
  42e0a4:	ldr	x0, [sp, #648]
  42e0a8:	cmp	x0, #0x0
  42e0ac:	b.eq	42e0bc <udev_rule_apply_token_to_event+0xd0c>  // b.none
  42e0b0:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e0b4:	add	x19, x0, #0xd8
  42e0b8:	b	42e0c0 <udev_rule_apply_token_to_event+0xd10>
  42e0bc:	mov	x19, #0x0                   	// #0
  42e0c0:	ldr	x21, [sp, #648]
  42e0c4:	ldr	x0, [sp, #2680]
  42e0c8:	bl	41fb4c <strna>
  42e0cc:	mov	x2, x0
  42e0d0:	ldr	x0, [sp, #2672]
  42e0d4:	cmp	x0, #0x0
  42e0d8:	b.eq	42e0e8 <udev_rule_apply_token_to_event+0xd38>  // b.none
  42e0dc:	ldr	x0, [sp, #2672]
  42e0e0:	ldr	w0, [x0, #8]
  42e0e4:	b	42e0ec <udev_rule_apply_token_to_event+0xd3c>
  42e0e8:	mov	w0, #0x0                   	// #0
  42e0ec:	add	x1, sp, #0xbd8
  42e0f0:	str	x1, [sp, #32]
  42e0f4:	str	w0, [sp, #24]
  42e0f8:	str	x2, [sp, #16]
  42e0fc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e100:	add	x0, x0, #0xed8
  42e104:	str	x0, [sp, #8]
  42e108:	str	xzr, [sp]
  42e10c:	mov	x7, #0x0                   	// #0
  42e110:	mov	x6, x21
  42e114:	mov	x5, x19
  42e118:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42e11c:	add	x4, x0, #0xa98
  42e120:	mov	w3, #0x658                 	// #1624
  42e124:	mov	x2, x20
  42e128:	ldr	w1, [sp, #572]
  42e12c:	ldr	w0, [sp, #568]
  42e130:	bl	40b020 <log_object_internal@plt>
  42e134:	mov	w19, w0
  42e138:	b	42e158 <udev_rule_apply_token_to_event+0xda8>
  42e13c:	ldr	x0, [sp, #640]
  42e140:	bl	40ba00 <strstrip@plt>
  42e144:	mov	x1, x0
  42e148:	ldr	x0, [sp, #704]
  42e14c:	bl	42c79c <token_match_string>
  42e150:	and	w0, w0, #0xff
  42e154:	mov	w19, w0
  42e158:	add	x0, sp, #0x280
  42e15c:	bl	41fa04 <freep>
  42e160:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42e164:	ldr	x0, [sp, #704]
  42e168:	ldr	x0, [x0, #16]
  42e16c:	sub	w0, w0, #0x1
  42e170:	str	w0, [sp, #548]
  42e174:	ldr	x0, [sp, #704]
  42e178:	ldr	x0, [x0, #8]
  42e17c:	add	x1, sp, #0xbd8
  42e180:	mov	w4, #0x0                   	// #0
  42e184:	mov	x3, #0x400                 	// #1024
  42e188:	mov	x2, x1
  42e18c:	mov	x1, x0
  42e190:	ldr	x0, [sp, #136]
  42e194:	bl	4185d8 <udev_event_apply_format>
  42e198:	add	x0, sp, #0xbd8
  42e19c:	bl	40ad10 <path_is_absolute@plt>
  42e1a0:	and	w0, w0, #0xff
  42e1a4:	eor	w0, w0, #0x1
  42e1a8:	and	w0, w0, #0xff
  42e1ac:	cmp	w0, #0x0
  42e1b0:	b.eq	42e390 <udev_rule_apply_token_to_event+0xfe0>  // b.none
  42e1b4:	add	x1, sp, #0xbd8
  42e1b8:	add	x0, sp, #0xbd8
  42e1bc:	mov	w3, #0x0                   	// #0
  42e1c0:	mov	x2, #0x400                 	// #1024
  42e1c4:	bl	40ba90 <util_resolve_subsys_kernel@plt>
  42e1c8:	cmp	w0, #0x0
  42e1cc:	b.ge	42e390 <udev_rule_apply_token_to_event+0xfe0>  // b.tcont
  42e1d0:	add	x0, sp, #0x278
  42e1d4:	mov	x1, x0
  42e1d8:	ldr	x0, [sp, #144]
  42e1dc:	bl	40bd50 <sd_device_get_syspath@plt>
  42e1e0:	str	w0, [sp, #168]
  42e1e4:	ldr	w0, [sp, #168]
  42e1e8:	cmp	w0, #0x0
  42e1ec:	b.ge	42e350 <udev_rule_apply_token_to_event+0xfa0>  // b.tcont
  42e1f0:	ldr	x0, [sp, #152]
  42e1f4:	str	x0, [sp, #2576]
  42e1f8:	ldr	x0, [sp, #2576]
  42e1fc:	cmp	x0, #0x0
  42e200:	b.eq	42e210 <udev_rule_apply_token_to_event+0xe60>  // b.none
  42e204:	ldr	x0, [sp, #2576]
  42e208:	ldr	x0, [x0, #32]
  42e20c:	b	42e214 <udev_rule_apply_token_to_event+0xe64>
  42e210:	mov	x0, #0x0                   	// #0
  42e214:	str	x0, [sp, #2584]
  42e218:	ldr	x0, [sp, #2584]
  42e21c:	cmp	x0, #0x0
  42e220:	b.eq	42e230 <udev_rule_apply_token_to_event+0xe80>  // b.none
  42e224:	ldr	x0, [sp, #2584]
  42e228:	ldr	x0, [x0, #8]
  42e22c:	b	42e234 <udev_rule_apply_token_to_event+0xe84>
  42e230:	mov	x0, #0x0                   	// #0
  42e234:	str	x0, [sp, #2592]
  42e238:	ldr	x0, [sp, #2584]
  42e23c:	cmp	x0, #0x0
  42e240:	b.eq	42e250 <udev_rule_apply_token_to_event+0xea0>  // b.none
  42e244:	ldr	x0, [sp, #2584]
  42e248:	ldr	x0, [x0]
  42e24c:	b	42e254 <udev_rule_apply_token_to_event+0xea4>
  42e250:	mov	x0, #0x0                   	// #0
  42e254:	str	x0, [sp, #2600]
  42e258:	str	xzr, [sp, #648]
  42e25c:	ldr	x0, [sp, #144]
  42e260:	str	x0, [sp, #2608]
  42e264:	mov	w0, #0x3                   	// #3
  42e268:	str	w0, [sp, #552]
  42e26c:	ldr	w0, [sp, #168]
  42e270:	str	w0, [sp, #556]
  42e274:	ldr	x0, [sp, #2608]
  42e278:	cmp	x0, #0x0
  42e27c:	b.eq	42e2b8 <udev_rule_apply_token_to_event+0xf08>  // b.none
  42e280:	mov	w0, #0x1                   	// #1
  42e284:	bl	40be30 <log_get_max_level_realm@plt>
  42e288:	mov	w1, w0
  42e28c:	ldr	w0, [sp, #552]
  42e290:	cmp	w0, w1
  42e294:	cset	w0, le
  42e298:	and	w0, w0, #0xff
  42e29c:	and	x0, x0, #0xff
  42e2a0:	cmp	x0, #0x0
  42e2a4:	b.eq	42e2b8 <udev_rule_apply_token_to_event+0xf08>  // b.none
  42e2a8:	add	x0, sp, #0x288
  42e2ac:	mov	x1, x0
  42e2b0:	ldr	x0, [sp, #2608]
  42e2b4:	bl	40aba0 <sd_device_get_sysname@plt>
  42e2b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e2bc:	add	x20, x0, #0xbb
  42e2c0:	ldr	x0, [sp, #648]
  42e2c4:	cmp	x0, #0x0
  42e2c8:	b.eq	42e2d8 <udev_rule_apply_token_to_event+0xf28>  // b.none
  42e2cc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e2d0:	add	x19, x0, #0xd8
  42e2d4:	b	42e2dc <udev_rule_apply_token_to_event+0xf2c>
  42e2d8:	mov	x19, #0x0                   	// #0
  42e2dc:	ldr	x21, [sp, #648]
  42e2e0:	ldr	x0, [sp, #2600]
  42e2e4:	bl	41fb4c <strna>
  42e2e8:	mov	x1, x0
  42e2ec:	ldr	x0, [sp, #2592]
  42e2f0:	cmp	x0, #0x0
  42e2f4:	b.eq	42e304 <udev_rule_apply_token_to_event+0xf54>  // b.none
  42e2f8:	ldr	x0, [sp, #2592]
  42e2fc:	ldr	w0, [x0, #8]
  42e300:	b	42e308 <udev_rule_apply_token_to_event+0xf58>
  42e304:	mov	w0, #0x0                   	// #0
  42e308:	str	w0, [sp, #24]
  42e30c:	str	x1, [sp, #16]
  42e310:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e314:	add	x0, x0, #0xf00
  42e318:	str	x0, [sp, #8]
  42e31c:	str	xzr, [sp]
  42e320:	mov	x7, #0x0                   	// #0
  42e324:	mov	x6, x21
  42e328:	mov	x5, x19
  42e32c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42e330:	add	x4, x0, #0xa98
  42e334:	mov	w3, #0x667                 	// #1639
  42e338:	mov	x2, x20
  42e33c:	ldr	w1, [sp, #556]
  42e340:	ldr	w0, [sp, #552]
  42e344:	bl	40b020 <log_object_internal@plt>
  42e348:	mov	w19, w0
  42e34c:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42e350:	add	x1, sp, #0xbd8
  42e354:	add	x0, sp, #0xfd8
  42e358:	mov	x2, x1
  42e35c:	mov	x1, #0x400                 	// #1024
  42e360:	bl	40a300 <strscpy@plt>
  42e364:	ldr	x1, [sp, #632]
  42e368:	add	x0, sp, #0xfd8
  42e36c:	add	x6, sp, #0xbd8
  42e370:	mov	x5, #0x0                   	// #0
  42e374:	mov	x4, x0
  42e378:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e37c:	add	x3, x0, #0xf20
  42e380:	mov	x2, x1
  42e384:	mov	x1, #0x400                 	// #1024
  42e388:	mov	x0, x6
  42e38c:	bl	40a790 <strscpyl@plt>
  42e390:	add	x0, sp, #0xbd8
  42e394:	bl	42d188 <attr_subst_subdir>
  42e398:	str	w0, [sp, #168]
  42e39c:	ldr	w0, [sp, #168]
  42e3a0:	cmn	w0, #0x2
  42e3a4:	b.ne	42e3c4 <udev_rule_apply_token_to_event+0x1014>  // b.any
  42e3a8:	ldr	x0, [sp, #704]
  42e3ac:	ldrsb	w0, [x0, #1]
  42e3b0:	cmp	w0, #0x1
  42e3b4:	cset	w0, eq  // eq = none
  42e3b8:	and	w0, w0, #0xff
  42e3bc:	mov	w19, w0
  42e3c0:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42e3c4:	ldr	w0, [sp, #168]
  42e3c8:	cmp	w0, #0x0
  42e3cc:	b.ge	42e538 <udev_rule_apply_token_to_event+0x1188>  // b.tcont
  42e3d0:	ldr	x0, [sp, #152]
  42e3d4:	str	x0, [sp, #2616]
  42e3d8:	ldr	x0, [sp, #2616]
  42e3dc:	cmp	x0, #0x0
  42e3e0:	b.eq	42e3f0 <udev_rule_apply_token_to_event+0x1040>  // b.none
  42e3e4:	ldr	x0, [sp, #2616]
  42e3e8:	ldr	x0, [x0, #32]
  42e3ec:	b	42e3f4 <udev_rule_apply_token_to_event+0x1044>
  42e3f0:	mov	x0, #0x0                   	// #0
  42e3f4:	str	x0, [sp, #2624]
  42e3f8:	ldr	x0, [sp, #2624]
  42e3fc:	cmp	x0, #0x0
  42e400:	b.eq	42e410 <udev_rule_apply_token_to_event+0x1060>  // b.none
  42e404:	ldr	x0, [sp, #2624]
  42e408:	ldr	x0, [x0, #8]
  42e40c:	b	42e414 <udev_rule_apply_token_to_event+0x1064>
  42e410:	mov	x0, #0x0                   	// #0
  42e414:	str	x0, [sp, #2632]
  42e418:	ldr	x0, [sp, #2624]
  42e41c:	cmp	x0, #0x0
  42e420:	b.eq	42e430 <udev_rule_apply_token_to_event+0x1080>  // b.none
  42e424:	ldr	x0, [sp, #2624]
  42e428:	ldr	x0, [x0]
  42e42c:	b	42e434 <udev_rule_apply_token_to_event+0x1084>
  42e430:	mov	x0, #0x0                   	// #0
  42e434:	str	x0, [sp, #2640]
  42e438:	str	xzr, [sp, #648]
  42e43c:	ldr	x0, [sp, #144]
  42e440:	str	x0, [sp, #2648]
  42e444:	mov	w0, #0x3                   	// #3
  42e448:	str	w0, [sp, #560]
  42e44c:	ldr	w0, [sp, #168]
  42e450:	str	w0, [sp, #564]
  42e454:	ldr	x0, [sp, #2648]
  42e458:	cmp	x0, #0x0
  42e45c:	b.eq	42e498 <udev_rule_apply_token_to_event+0x10e8>  // b.none
  42e460:	mov	w0, #0x1                   	// #1
  42e464:	bl	40be30 <log_get_max_level_realm@plt>
  42e468:	mov	w1, w0
  42e46c:	ldr	w0, [sp, #560]
  42e470:	cmp	w0, w1
  42e474:	cset	w0, le
  42e478:	and	w0, w0, #0xff
  42e47c:	and	x0, x0, #0xff
  42e480:	cmp	x0, #0x0
  42e484:	b.eq	42e498 <udev_rule_apply_token_to_event+0x10e8>  // b.none
  42e488:	add	x0, sp, #0x288
  42e48c:	mov	x1, x0
  42e490:	ldr	x0, [sp, #2648]
  42e494:	bl	40aba0 <sd_device_get_sysname@plt>
  42e498:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e49c:	add	x20, x0, #0xbb
  42e4a0:	ldr	x0, [sp, #648]
  42e4a4:	cmp	x0, #0x0
  42e4a8:	b.eq	42e4b8 <udev_rule_apply_token_to_event+0x1108>  // b.none
  42e4ac:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e4b0:	add	x19, x0, #0xd8
  42e4b4:	b	42e4bc <udev_rule_apply_token_to_event+0x110c>
  42e4b8:	mov	x19, #0x0                   	// #0
  42e4bc:	ldr	x21, [sp, #648]
  42e4c0:	ldr	x0, [sp, #2640]
  42e4c4:	bl	41fb4c <strna>
  42e4c8:	mov	x2, x0
  42e4cc:	ldr	x0, [sp, #2632]
  42e4d0:	cmp	x0, #0x0
  42e4d4:	b.eq	42e4e4 <udev_rule_apply_token_to_event+0x1134>  // b.none
  42e4d8:	ldr	x0, [sp, #2632]
  42e4dc:	ldr	w0, [x0, #8]
  42e4e0:	b	42e4e8 <udev_rule_apply_token_to_event+0x1138>
  42e4e4:	mov	w0, #0x0                   	// #0
  42e4e8:	add	x1, sp, #0xbd8
  42e4ec:	str	x1, [sp, #32]
  42e4f0:	str	w0, [sp, #24]
  42e4f4:	str	x2, [sp, #16]
  42e4f8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e4fc:	add	x0, x0, #0xf28
  42e500:	str	x0, [sp, #8]
  42e504:	str	xzr, [sp]
  42e508:	mov	x7, #0x0                   	// #0
  42e50c:	mov	x6, x21
  42e510:	mov	x5, x19
  42e514:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42e518:	add	x4, x0, #0xa98
  42e51c:	mov	w3, #0x671                 	// #1649
  42e520:	mov	x2, x20
  42e524:	ldr	w1, [sp, #564]
  42e528:	ldr	w0, [sp, #560]
  42e52c:	bl	40b020 <log_object_internal@plt>
  42e530:	mov	w19, w0
  42e534:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42e538:	add	x1, sp, #0xb58
  42e53c:	add	x0, sp, #0xbd8
  42e540:	bl	4505a0 <stat64>
  42e544:	cmp	w0, #0x0
  42e548:	b.ge	42e568 <udev_rule_apply_token_to_event+0x11b8>  // b.tcont
  42e54c:	ldr	x0, [sp, #704]
  42e550:	ldrsb	w0, [x0, #1]
  42e554:	cmp	w0, #0x1
  42e558:	cset	w0, eq  // eq = none
  42e55c:	and	w0, w0, #0xff
  42e560:	mov	w19, w0
  42e564:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42e568:	ldr	w0, [sp, #548]
  42e56c:	cmn	w0, #0x1
  42e570:	b.ne	42e590 <udev_rule_apply_token_to_event+0x11e0>  // b.any
  42e574:	ldr	x0, [sp, #704]
  42e578:	ldrsb	w0, [x0, #1]
  42e57c:	cmp	w0, #0x0
  42e580:	cset	w0, eq  // eq = none
  42e584:	and	w0, w0, #0xff
  42e588:	mov	w19, w0
  42e58c:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42e590:	ldr	w1, [sp, #2920]
  42e594:	ldr	w0, [sp, #548]
  42e598:	eor	w0, w1, w0
  42e59c:	and	w0, w0, #0xfff
  42e5a0:	cmp	w0, #0x0
  42e5a4:	cset	w0, eq  // eq = none
  42e5a8:	strb	w0, [sp, #167]
  42e5ac:	ldr	x0, [sp, #704]
  42e5b0:	ldrsb	w0, [x0, #1]
  42e5b4:	mov	w1, w0
  42e5b8:	ldrb	w0, [sp, #167]
  42e5bc:	eor	w0, w0, #0x1
  42e5c0:	and	w0, w0, #0xff
  42e5c4:	cmp	w1, w0
  42e5c8:	cset	w0, eq  // eq = none
  42e5cc:	and	w0, w0, #0xff
  42e5d0:	mov	w19, w0
  42e5d4:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42e5d8:	ldr	x0, [sp, #136]
  42e5dc:	ldr	x0, [x0, #32]
  42e5e0:	bl	41f9e4 <mfree>
  42e5e4:	mov	x1, x0
  42e5e8:	ldr	x0, [sp, #136]
  42e5ec:	str	x1, [x0, #32]
  42e5f0:	ldr	x0, [sp, #704]
  42e5f4:	ldr	x0, [x0, #8]
  42e5f8:	add	x1, sp, #0xbd8
  42e5fc:	mov	w4, #0x0                   	// #0
  42e600:	mov	x3, #0x400                 	// #1024
  42e604:	mov	x2, x1
  42e608:	mov	x1, x0
  42e60c:	ldr	x0, [sp, #136]
  42e610:	bl	4185d8 <udev_event_apply_format>
  42e614:	ldr	x0, [sp, #152]
  42e618:	str	x0, [sp, #2416]
  42e61c:	ldr	x0, [sp, #2416]
  42e620:	cmp	x0, #0x0
  42e624:	b.eq	42e634 <udev_rule_apply_token_to_event+0x1284>  // b.none
  42e628:	ldr	x0, [sp, #2416]
  42e62c:	ldr	x0, [x0, #32]
  42e630:	b	42e638 <udev_rule_apply_token_to_event+0x1288>
  42e634:	mov	x0, #0x0                   	// #0
  42e638:	str	x0, [sp, #2424]
  42e63c:	ldr	x0, [sp, #2424]
  42e640:	cmp	x0, #0x0
  42e644:	b.eq	42e654 <udev_rule_apply_token_to_event+0x12a4>  // b.none
  42e648:	ldr	x0, [sp, #2424]
  42e64c:	ldr	x0, [x0, #8]
  42e650:	b	42e658 <udev_rule_apply_token_to_event+0x12a8>
  42e654:	mov	x0, #0x0                   	// #0
  42e658:	str	x0, [sp, #2432]
  42e65c:	ldr	x0, [sp, #2424]
  42e660:	cmp	x0, #0x0
  42e664:	b.eq	42e674 <udev_rule_apply_token_to_event+0x12c4>  // b.none
  42e668:	ldr	x0, [sp, #2424]
  42e66c:	ldr	x0, [x0]
  42e670:	b	42e678 <udev_rule_apply_token_to_event+0x12c8>
  42e674:	mov	x0, #0x0                   	// #0
  42e678:	str	x0, [sp, #2440]
  42e67c:	str	xzr, [sp, #648]
  42e680:	ldr	x0, [sp, #144]
  42e684:	str	x0, [sp, #2448]
  42e688:	mov	w0, #0x7                   	// #7
  42e68c:	str	w0, [sp, #516]
  42e690:	str	wzr, [sp, #520]
  42e694:	ldr	x0, [sp, #2448]
  42e698:	cmp	x0, #0x0
  42e69c:	b.eq	42e6d8 <udev_rule_apply_token_to_event+0x1328>  // b.none
  42e6a0:	mov	w0, #0x1                   	// #1
  42e6a4:	bl	40be30 <log_get_max_level_realm@plt>
  42e6a8:	mov	w1, w0
  42e6ac:	ldr	w0, [sp, #516]
  42e6b0:	cmp	w0, w1
  42e6b4:	cset	w0, le
  42e6b8:	and	w0, w0, #0xff
  42e6bc:	and	x0, x0, #0xff
  42e6c0:	cmp	x0, #0x0
  42e6c4:	b.eq	42e6d8 <udev_rule_apply_token_to_event+0x1328>  // b.none
  42e6c8:	add	x0, sp, #0x288
  42e6cc:	mov	x1, x0
  42e6d0:	ldr	x0, [sp, #2448]
  42e6d4:	bl	40aba0 <sd_device_get_sysname@plt>
  42e6d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e6dc:	add	x20, x0, #0xbb
  42e6e0:	ldr	x0, [sp, #648]
  42e6e4:	cmp	x0, #0x0
  42e6e8:	b.eq	42e6f8 <udev_rule_apply_token_to_event+0x1348>  // b.none
  42e6ec:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e6f0:	add	x19, x0, #0xd8
  42e6f4:	b	42e6fc <udev_rule_apply_token_to_event+0x134c>
  42e6f8:	mov	x19, #0x0                   	// #0
  42e6fc:	ldr	x21, [sp, #648]
  42e700:	ldr	x0, [sp, #2440]
  42e704:	bl	41fb4c <strna>
  42e708:	mov	x2, x0
  42e70c:	ldr	x0, [sp, #2432]
  42e710:	cmp	x0, #0x0
  42e714:	b.eq	42e724 <udev_rule_apply_token_to_event+0x1374>  // b.none
  42e718:	ldr	x0, [sp, #2432]
  42e71c:	ldr	w0, [x0, #8]
  42e720:	b	42e728 <udev_rule_apply_token_to_event+0x1378>
  42e724:	mov	w0, #0x0                   	// #0
  42e728:	add	x1, sp, #0xbd8
  42e72c:	str	x1, [sp, #32]
  42e730:	str	w0, [sp, #24]
  42e734:	str	x2, [sp, #16]
  42e738:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e73c:	add	x0, x0, #0xf58
  42e740:	str	x0, [sp, #8]
  42e744:	str	xzr, [sp]
  42e748:	mov	x7, #0x0                   	// #0
  42e74c:	mov	x6, x21
  42e750:	mov	x5, x19
  42e754:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42e758:	add	x4, x0, #0xa98
  42e75c:	mov	w3, #0x681                 	// #1665
  42e760:	mov	x2, x20
  42e764:	ldr	w1, [sp, #520]
  42e768:	ldr	w0, [sp, #516]
  42e76c:	bl	40b020 <log_object_internal@plt>
  42e770:	add	x1, sp, #0xfd8
  42e774:	add	x0, sp, #0xbd8
  42e778:	mov	x5, #0x4000                	// #16384
  42e77c:	mov	x4, x1
  42e780:	mov	x3, x0
  42e784:	mov	w2, #0x1                   	// #1
  42e788:	ldr	x1, [sp, #128]
  42e78c:	ldr	x0, [sp, #136]
  42e790:	bl	419d18 <udev_event_spawn>
  42e794:	str	w0, [sp, #168]
  42e798:	ldr	w0, [sp, #168]
  42e79c:	cmp	w0, #0x0
  42e7a0:	b.eq	42ea94 <udev_rule_apply_token_to_event+0x16e4>  // b.none
  42e7a4:	ldr	w0, [sp, #168]
  42e7a8:	cmp	w0, #0x0
  42e7ac:	b.ge	42e914 <udev_rule_apply_token_to_event+0x1564>  // b.tcont
  42e7b0:	ldr	x0, [sp, #152]
  42e7b4:	str	x0, [sp, #2536]
  42e7b8:	ldr	x0, [sp, #2536]
  42e7bc:	cmp	x0, #0x0
  42e7c0:	b.eq	42e7d0 <udev_rule_apply_token_to_event+0x1420>  // b.none
  42e7c4:	ldr	x0, [sp, #2536]
  42e7c8:	ldr	x0, [x0, #32]
  42e7cc:	b	42e7d4 <udev_rule_apply_token_to_event+0x1424>
  42e7d0:	mov	x0, #0x0                   	// #0
  42e7d4:	str	x0, [sp, #2544]
  42e7d8:	ldr	x0, [sp, #2544]
  42e7dc:	cmp	x0, #0x0
  42e7e0:	b.eq	42e7f0 <udev_rule_apply_token_to_event+0x1440>  // b.none
  42e7e4:	ldr	x0, [sp, #2544]
  42e7e8:	ldr	x0, [x0, #8]
  42e7ec:	b	42e7f4 <udev_rule_apply_token_to_event+0x1444>
  42e7f0:	mov	x0, #0x0                   	// #0
  42e7f4:	str	x0, [sp, #2552]
  42e7f8:	ldr	x0, [sp, #2544]
  42e7fc:	cmp	x0, #0x0
  42e800:	b.eq	42e810 <udev_rule_apply_token_to_event+0x1460>  // b.none
  42e804:	ldr	x0, [sp, #2544]
  42e808:	ldr	x0, [x0]
  42e80c:	b	42e814 <udev_rule_apply_token_to_event+0x1464>
  42e810:	mov	x0, #0x0                   	// #0
  42e814:	str	x0, [sp, #2560]
  42e818:	str	xzr, [sp, #648]
  42e81c:	ldr	x0, [sp, #144]
  42e820:	str	x0, [sp, #2568]
  42e824:	mov	w0, #0x4                   	// #4
  42e828:	str	w0, [sp, #540]
  42e82c:	ldr	w0, [sp, #168]
  42e830:	str	w0, [sp, #544]
  42e834:	ldr	x0, [sp, #2568]
  42e838:	cmp	x0, #0x0
  42e83c:	b.eq	42e878 <udev_rule_apply_token_to_event+0x14c8>  // b.none
  42e840:	mov	w0, #0x1                   	// #1
  42e844:	bl	40be30 <log_get_max_level_realm@plt>
  42e848:	mov	w1, w0
  42e84c:	ldr	w0, [sp, #540]
  42e850:	cmp	w0, w1
  42e854:	cset	w0, le
  42e858:	and	w0, w0, #0xff
  42e85c:	and	x0, x0, #0xff
  42e860:	cmp	x0, #0x0
  42e864:	b.eq	42e878 <udev_rule_apply_token_to_event+0x14c8>  // b.none
  42e868:	add	x0, sp, #0x288
  42e86c:	mov	x1, x0
  42e870:	ldr	x0, [sp, #2568]
  42e874:	bl	40aba0 <sd_device_get_sysname@plt>
  42e878:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e87c:	add	x20, x0, #0xbb
  42e880:	ldr	x0, [sp, #648]
  42e884:	cmp	x0, #0x0
  42e888:	b.eq	42e898 <udev_rule_apply_token_to_event+0x14e8>  // b.none
  42e88c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e890:	add	x19, x0, #0xd8
  42e894:	b	42e89c <udev_rule_apply_token_to_event+0x14ec>
  42e898:	mov	x19, #0x0                   	// #0
  42e89c:	ldr	x21, [sp, #648]
  42e8a0:	ldr	x0, [sp, #2560]
  42e8a4:	bl	41fb4c <strna>
  42e8a8:	mov	x2, x0
  42e8ac:	ldr	x0, [sp, #2552]
  42e8b0:	cmp	x0, #0x0
  42e8b4:	b.eq	42e8c4 <udev_rule_apply_token_to_event+0x1514>  // b.none
  42e8b8:	ldr	x0, [sp, #2552]
  42e8bc:	ldr	w0, [x0, #8]
  42e8c0:	b	42e8c8 <udev_rule_apply_token_to_event+0x1518>
  42e8c4:	mov	w0, #0x0                   	// #0
  42e8c8:	add	x1, sp, #0xbd8
  42e8cc:	str	x1, [sp, #32]
  42e8d0:	str	w0, [sp, #24]
  42e8d4:	str	x2, [sp, #16]
  42e8d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e8dc:	add	x0, x0, #0xf78
  42e8e0:	str	x0, [sp, #8]
  42e8e4:	str	xzr, [sp]
  42e8e8:	mov	x7, #0x0                   	// #0
  42e8ec:	mov	x6, x21
  42e8f0:	mov	x5, x19
  42e8f4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42e8f8:	add	x4, x0, #0xa98
  42e8fc:	mov	w3, #0x686                 	// #1670
  42e900:	mov	x2, x20
  42e904:	ldr	w1, [sp, #544]
  42e908:	ldr	w0, [sp, #540]
  42e90c:	bl	40b020 <log_object_internal@plt>
  42e910:	b	42ea78 <udev_rule_apply_token_to_event+0x16c8>
  42e914:	ldr	x0, [sp, #152]
  42e918:	str	x0, [sp, #2496]
  42e91c:	ldr	x0, [sp, #2496]
  42e920:	cmp	x0, #0x0
  42e924:	b.eq	42e934 <udev_rule_apply_token_to_event+0x1584>  // b.none
  42e928:	ldr	x0, [sp, #2496]
  42e92c:	ldr	x0, [x0, #32]
  42e930:	b	42e938 <udev_rule_apply_token_to_event+0x1588>
  42e934:	mov	x0, #0x0                   	// #0
  42e938:	str	x0, [sp, #2504]
  42e93c:	ldr	x0, [sp, #2504]
  42e940:	cmp	x0, #0x0
  42e944:	b.eq	42e954 <udev_rule_apply_token_to_event+0x15a4>  // b.none
  42e948:	ldr	x0, [sp, #2504]
  42e94c:	ldr	x0, [x0, #8]
  42e950:	b	42e958 <udev_rule_apply_token_to_event+0x15a8>
  42e954:	mov	x0, #0x0                   	// #0
  42e958:	str	x0, [sp, #2512]
  42e95c:	ldr	x0, [sp, #2504]
  42e960:	cmp	x0, #0x0
  42e964:	b.eq	42e974 <udev_rule_apply_token_to_event+0x15c4>  // b.none
  42e968:	ldr	x0, [sp, #2504]
  42e96c:	ldr	x0, [x0]
  42e970:	b	42e978 <udev_rule_apply_token_to_event+0x15c8>
  42e974:	mov	x0, #0x0                   	// #0
  42e978:	str	x0, [sp, #2520]
  42e97c:	str	xzr, [sp, #648]
  42e980:	ldr	x0, [sp, #144]
  42e984:	str	x0, [sp, #2528]
  42e988:	mov	w0, #0x7                   	// #7
  42e98c:	str	w0, [sp, #532]
  42e990:	str	wzr, [sp, #536]
  42e994:	ldr	x0, [sp, #2528]
  42e998:	cmp	x0, #0x0
  42e99c:	b.eq	42e9d8 <udev_rule_apply_token_to_event+0x1628>  // b.none
  42e9a0:	mov	w0, #0x1                   	// #1
  42e9a4:	bl	40be30 <log_get_max_level_realm@plt>
  42e9a8:	mov	w1, w0
  42e9ac:	ldr	w0, [sp, #532]
  42e9b0:	cmp	w0, w1
  42e9b4:	cset	w0, le
  42e9b8:	and	w0, w0, #0xff
  42e9bc:	and	x0, x0, #0xff
  42e9c0:	cmp	x0, #0x0
  42e9c4:	b.eq	42e9d8 <udev_rule_apply_token_to_event+0x1628>  // b.none
  42e9c8:	add	x0, sp, #0x288
  42e9cc:	mov	x1, x0
  42e9d0:	ldr	x0, [sp, #2528]
  42e9d4:	bl	40aba0 <sd_device_get_sysname@plt>
  42e9d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e9dc:	add	x20, x0, #0xbb
  42e9e0:	ldr	x0, [sp, #648]
  42e9e4:	cmp	x0, #0x0
  42e9e8:	b.eq	42e9f8 <udev_rule_apply_token_to_event+0x1648>  // b.none
  42e9ec:	adrp	x0, 454000 <__func__.10675+0xa0>
  42e9f0:	add	x19, x0, #0xd8
  42e9f4:	b	42e9fc <udev_rule_apply_token_to_event+0x164c>
  42e9f8:	mov	x19, #0x0                   	// #0
  42e9fc:	ldr	x21, [sp, #648]
  42ea00:	ldr	x0, [sp, #2520]
  42ea04:	bl	41fb4c <strna>
  42ea08:	mov	x2, x0
  42ea0c:	ldr	x0, [sp, #2512]
  42ea10:	cmp	x0, #0x0
  42ea14:	b.eq	42ea24 <udev_rule_apply_token_to_event+0x1674>  // b.none
  42ea18:	ldr	x0, [sp, #2512]
  42ea1c:	ldr	w0, [x0, #8]
  42ea20:	b	42ea28 <udev_rule_apply_token_to_event+0x1678>
  42ea24:	mov	w0, #0x0                   	// #0
  42ea28:	ldr	w1, [sp, #168]
  42ea2c:	str	w1, [sp, #40]
  42ea30:	add	x1, sp, #0xbd8
  42ea34:	str	x1, [sp, #32]
  42ea38:	str	w0, [sp, #24]
  42ea3c:	str	x2, [sp, #16]
  42ea40:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ea44:	add	x0, x0, #0xfa8
  42ea48:	str	x0, [sp, #8]
  42ea4c:	str	xzr, [sp]
  42ea50:	mov	x7, #0x0                   	// #0
  42ea54:	mov	x6, x21
  42ea58:	mov	x5, x19
  42ea5c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ea60:	add	x4, x0, #0xa98
  42ea64:	mov	w3, #0x688                 	// #1672
  42ea68:	mov	x2, x20
  42ea6c:	ldr	w1, [sp, #536]
  42ea70:	ldr	w0, [sp, #532]
  42ea74:	bl	40b020 <log_object_internal@plt>
  42ea78:	ldr	x0, [sp, #704]
  42ea7c:	ldrsb	w0, [x0, #1]
  42ea80:	cmp	w0, #0x1
  42ea84:	cset	w0, eq  // eq = none
  42ea88:	and	w0, w0, #0xff
  42ea8c:	mov	w19, w0
  42ea90:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42ea94:	add	x2, sp, #0xfd8
  42ea98:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ea9c:	add	x1, x0, #0xfe0
  42eaa0:	mov	x0, x2
  42eaa4:	bl	40acd0 <delete_trailing_chars@plt>
  42eaa8:	add	x2, sp, #0xfd8
  42eaac:	adrp	x0, 454000 <__func__.10675+0xa0>
  42eab0:	add	x1, x0, #0xfe8
  42eab4:	mov	x0, x2
  42eab8:	bl	40a7d0 <util_replace_chars@plt>
  42eabc:	str	x0, [sp, #656]
  42eac0:	ldr	x0, [sp, #656]
  42eac4:	cmp	x0, #0x0
  42eac8:	b.eq	42ec30 <udev_rule_apply_token_to_event+0x1880>  // b.none
  42eacc:	ldr	x0, [sp, #152]
  42ead0:	str	x0, [sp, #2456]
  42ead4:	ldr	x0, [sp, #2456]
  42ead8:	cmp	x0, #0x0
  42eadc:	b.eq	42eaec <udev_rule_apply_token_to_event+0x173c>  // b.none
  42eae0:	ldr	x0, [sp, #2456]
  42eae4:	ldr	x0, [x0, #32]
  42eae8:	b	42eaf0 <udev_rule_apply_token_to_event+0x1740>
  42eaec:	mov	x0, #0x0                   	// #0
  42eaf0:	str	x0, [sp, #2464]
  42eaf4:	ldr	x0, [sp, #2464]
  42eaf8:	cmp	x0, #0x0
  42eafc:	b.eq	42eb0c <udev_rule_apply_token_to_event+0x175c>  // b.none
  42eb00:	ldr	x0, [sp, #2464]
  42eb04:	ldr	x0, [x0, #8]
  42eb08:	b	42eb10 <udev_rule_apply_token_to_event+0x1760>
  42eb0c:	mov	x0, #0x0                   	// #0
  42eb10:	str	x0, [sp, #2472]
  42eb14:	ldr	x0, [sp, #2464]
  42eb18:	cmp	x0, #0x0
  42eb1c:	b.eq	42eb2c <udev_rule_apply_token_to_event+0x177c>  // b.none
  42eb20:	ldr	x0, [sp, #2464]
  42eb24:	ldr	x0, [x0]
  42eb28:	b	42eb30 <udev_rule_apply_token_to_event+0x1780>
  42eb2c:	mov	x0, #0x0                   	// #0
  42eb30:	str	x0, [sp, #2480]
  42eb34:	str	xzr, [sp, #648]
  42eb38:	ldr	x0, [sp, #144]
  42eb3c:	str	x0, [sp, #2488]
  42eb40:	mov	w0, #0x7                   	// #7
  42eb44:	str	w0, [sp, #524]
  42eb48:	str	wzr, [sp, #528]
  42eb4c:	ldr	x0, [sp, #2488]
  42eb50:	cmp	x0, #0x0
  42eb54:	b.eq	42eb90 <udev_rule_apply_token_to_event+0x17e0>  // b.none
  42eb58:	mov	w0, #0x1                   	// #1
  42eb5c:	bl	40be30 <log_get_max_level_realm@plt>
  42eb60:	mov	w1, w0
  42eb64:	ldr	w0, [sp, #524]
  42eb68:	cmp	w0, w1
  42eb6c:	cset	w0, le
  42eb70:	and	w0, w0, #0xff
  42eb74:	and	x0, x0, #0xff
  42eb78:	cmp	x0, #0x0
  42eb7c:	b.eq	42eb90 <udev_rule_apply_token_to_event+0x17e0>  // b.none
  42eb80:	add	x0, sp, #0x288
  42eb84:	mov	x1, x0
  42eb88:	ldr	x0, [sp, #2488]
  42eb8c:	bl	40aba0 <sd_device_get_sysname@plt>
  42eb90:	adrp	x0, 454000 <__func__.10675+0xa0>
  42eb94:	add	x20, x0, #0xbb
  42eb98:	ldr	x0, [sp, #648]
  42eb9c:	cmp	x0, #0x0
  42eba0:	b.eq	42ebb0 <udev_rule_apply_token_to_event+0x1800>  // b.none
  42eba4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42eba8:	add	x19, x0, #0xd8
  42ebac:	b	42ebb4 <udev_rule_apply_token_to_event+0x1804>
  42ebb0:	mov	x19, #0x0                   	// #0
  42ebb4:	ldr	x21, [sp, #648]
  42ebb8:	ldr	x0, [sp, #2480]
  42ebbc:	bl	41fb4c <strna>
  42ebc0:	mov	x2, x0
  42ebc4:	ldr	x0, [sp, #2472]
  42ebc8:	cmp	x0, #0x0
  42ebcc:	b.eq	42ebdc <udev_rule_apply_token_to_event+0x182c>  // b.none
  42ebd0:	ldr	x0, [sp, #2472]
  42ebd4:	ldr	w0, [x0, #8]
  42ebd8:	b	42ebe0 <udev_rule_apply_token_to_event+0x1830>
  42ebdc:	mov	w0, #0x0                   	// #0
  42ebe0:	add	x1, sp, #0xbd8
  42ebe4:	str	x1, [sp, #40]
  42ebe8:	ldr	x1, [sp, #656]
  42ebec:	str	x1, [sp, #32]
  42ebf0:	str	w0, [sp, #24]
  42ebf4:	str	x2, [sp, #16]
  42ebf8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ebfc:	add	x0, x0, #0xff0
  42ec00:	str	x0, [sp, #8]
  42ec04:	str	xzr, [sp]
  42ec08:	mov	x7, #0x0                   	// #0
  42ec0c:	mov	x6, x21
  42ec10:	mov	x5, x19
  42ec14:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ec18:	add	x4, x0, #0xa98
  42ec1c:	mov	w3, #0x68f                 	// #1679
  42ec20:	mov	x2, x20
  42ec24:	ldr	w1, [sp, #528]
  42ec28:	ldr	w0, [sp, #524]
  42ec2c:	bl	40b020 <log_object_internal@plt>
  42ec30:	add	x0, sp, #0xfd8
  42ec34:	bl	40b7c0 <strdup@plt>
  42ec38:	mov	x1, x0
  42ec3c:	ldr	x0, [sp, #136]
  42ec40:	str	x1, [x0, #32]
  42ec44:	ldr	x0, [sp, #704]
  42ec48:	ldrsb	w0, [x0, #1]
  42ec4c:	cmp	w0, #0x0
  42ec50:	cset	w0, eq  // eq = none
  42ec54:	and	w0, w0, #0xff
  42ec58:	mov	w19, w0
  42ec5c:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42ec60:	str	xzr, [sp, #616]
  42ec64:	ldr	x0, [sp, #704]
  42ec68:	ldr	x0, [x0, #8]
  42ec6c:	add	x1, sp, #0xbd8
  42ec70:	mov	w4, #0x0                   	// #0
  42ec74:	mov	x3, #0x400                 	// #1024
  42ec78:	mov	x2, x1
  42ec7c:	mov	x1, x0
  42ec80:	ldr	x0, [sp, #136]
  42ec84:	bl	4185d8 <udev_event_apply_format>
  42ec88:	ldr	x0, [sp, #152]
  42ec8c:	str	x0, [sp, #2216]
  42ec90:	ldr	x0, [sp, #2216]
  42ec94:	cmp	x0, #0x0
  42ec98:	b.eq	42eca8 <udev_rule_apply_token_to_event+0x18f8>  // b.none
  42ec9c:	ldr	x0, [sp, #2216]
  42eca0:	ldr	x0, [x0, #32]
  42eca4:	b	42ecac <udev_rule_apply_token_to_event+0x18fc>
  42eca8:	mov	x0, #0x0                   	// #0
  42ecac:	str	x0, [sp, #2224]
  42ecb0:	ldr	x0, [sp, #2224]
  42ecb4:	cmp	x0, #0x0
  42ecb8:	b.eq	42ecc8 <udev_rule_apply_token_to_event+0x1918>  // b.none
  42ecbc:	ldr	x0, [sp, #2224]
  42ecc0:	ldr	x0, [x0, #8]
  42ecc4:	b	42eccc <udev_rule_apply_token_to_event+0x191c>
  42ecc8:	mov	x0, #0x0                   	// #0
  42eccc:	str	x0, [sp, #2232]
  42ecd0:	ldr	x0, [sp, #2224]
  42ecd4:	cmp	x0, #0x0
  42ecd8:	b.eq	42ece8 <udev_rule_apply_token_to_event+0x1938>  // b.none
  42ecdc:	ldr	x0, [sp, #2224]
  42ece0:	ldr	x0, [x0]
  42ece4:	b	42ecec <udev_rule_apply_token_to_event+0x193c>
  42ece8:	mov	x0, #0x0                   	// #0
  42ecec:	str	x0, [sp, #2240]
  42ecf0:	str	xzr, [sp, #648]
  42ecf4:	ldr	x0, [sp, #144]
  42ecf8:	str	x0, [sp, #2248]
  42ecfc:	mov	w0, #0x7                   	// #7
  42ed00:	str	w0, [sp, #476]
  42ed04:	str	wzr, [sp, #480]
  42ed08:	ldr	x0, [sp, #2248]
  42ed0c:	cmp	x0, #0x0
  42ed10:	b.eq	42ed4c <udev_rule_apply_token_to_event+0x199c>  // b.none
  42ed14:	mov	w0, #0x1                   	// #1
  42ed18:	bl	40be30 <log_get_max_level_realm@plt>
  42ed1c:	mov	w1, w0
  42ed20:	ldr	w0, [sp, #476]
  42ed24:	cmp	w0, w1
  42ed28:	cset	w0, le
  42ed2c:	and	w0, w0, #0xff
  42ed30:	and	x0, x0, #0xff
  42ed34:	cmp	x0, #0x0
  42ed38:	b.eq	42ed4c <udev_rule_apply_token_to_event+0x199c>  // b.none
  42ed3c:	add	x0, sp, #0x288
  42ed40:	mov	x1, x0
  42ed44:	ldr	x0, [sp, #2248]
  42ed48:	bl	40aba0 <sd_device_get_sysname@plt>
  42ed4c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ed50:	add	x21, x0, #0xbb
  42ed54:	ldr	x0, [sp, #648]
  42ed58:	cmp	x0, #0x0
  42ed5c:	b.eq	42ed6c <udev_rule_apply_token_to_event+0x19bc>  // b.none
  42ed60:	adrp	x0, 454000 <__func__.10675+0xa0>
  42ed64:	add	x20, x0, #0xd8
  42ed68:	b	42ed70 <udev_rule_apply_token_to_event+0x19c0>
  42ed6c:	mov	x20, #0x0                   	// #0
  42ed70:	ldr	x22, [sp, #648]
  42ed74:	ldr	x0, [sp, #2240]
  42ed78:	bl	41fb4c <strna>
  42ed7c:	mov	x2, x0
  42ed80:	ldr	x0, [sp, #2232]
  42ed84:	cmp	x0, #0x0
  42ed88:	b.eq	42ed98 <udev_rule_apply_token_to_event+0x19e8>  // b.none
  42ed8c:	ldr	x0, [sp, #2232]
  42ed90:	ldr	w0, [x0, #8]
  42ed94:	b	42ed9c <udev_rule_apply_token_to_event+0x19ec>
  42ed98:	mov	w0, #0x0                   	// #0
  42ed9c:	add	x1, sp, #0xbd8
  42eda0:	str	x1, [sp, #32]
  42eda4:	str	w0, [sp, #24]
  42eda8:	str	x2, [sp, #16]
  42edac:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42edb0:	add	x0, x0, #0x28
  42edb4:	str	x0, [sp, #8]
  42edb8:	str	xzr, [sp]
  42edbc:	mov	x7, #0x0                   	// #0
  42edc0:	mov	x6, x22
  42edc4:	mov	x5, x20
  42edc8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42edcc:	add	x4, x0, #0xa98
  42edd0:	mov	w3, #0x699                 	// #1689
  42edd4:	mov	x2, x21
  42edd8:	ldr	w1, [sp, #480]
  42eddc:	ldr	w0, [sp, #476]
  42ede0:	bl	40b020 <log_object_internal@plt>
  42ede4:	add	x2, sp, #0xbd8
  42ede8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42edec:	add	x1, x0, #0xc78
  42edf0:	mov	x0, x2
  42edf4:	bl	40bd60 <fopen64@plt>
  42edf8:	str	x0, [sp, #616]
  42edfc:	ldr	x0, [sp, #616]
  42ee00:	cmp	x0, #0x0
  42ee04:	b.ne	42efa0 <udev_rule_apply_token_to_event+0x1bf0>  // b.any
  42ee08:	bl	40b040 <__errno_location@plt>
  42ee0c:	ldr	w0, [x0]
  42ee10:	cmp	w0, #0x2
  42ee14:	b.eq	42ef84 <udev_rule_apply_token_to_event+0x1bd4>  // b.none
  42ee18:	ldr	x0, [sp, #152]
  42ee1c:	str	x0, [sp, #2376]
  42ee20:	ldr	x0, [sp, #2376]
  42ee24:	cmp	x0, #0x0
  42ee28:	b.eq	42ee38 <udev_rule_apply_token_to_event+0x1a88>  // b.none
  42ee2c:	ldr	x0, [sp, #2376]
  42ee30:	ldr	x0, [x0, #32]
  42ee34:	b	42ee3c <udev_rule_apply_token_to_event+0x1a8c>
  42ee38:	mov	x0, #0x0                   	// #0
  42ee3c:	str	x0, [sp, #2384]
  42ee40:	ldr	x0, [sp, #2384]
  42ee44:	cmp	x0, #0x0
  42ee48:	b.eq	42ee58 <udev_rule_apply_token_to_event+0x1aa8>  // b.none
  42ee4c:	ldr	x0, [sp, #2384]
  42ee50:	ldr	x0, [x0, #8]
  42ee54:	b	42ee5c <udev_rule_apply_token_to_event+0x1aac>
  42ee58:	mov	x0, #0x0                   	// #0
  42ee5c:	str	x0, [sp, #2392]
  42ee60:	ldr	x0, [sp, #2384]
  42ee64:	cmp	x0, #0x0
  42ee68:	b.eq	42ee78 <udev_rule_apply_token_to_event+0x1ac8>  // b.none
  42ee6c:	ldr	x0, [sp, #2384]
  42ee70:	ldr	x0, [x0]
  42ee74:	b	42ee7c <udev_rule_apply_token_to_event+0x1acc>
  42ee78:	mov	x0, #0x0                   	// #0
  42ee7c:	str	x0, [sp, #2400]
  42ee80:	str	xzr, [sp, #648]
  42ee84:	ldr	x0, [sp, #144]
  42ee88:	str	x0, [sp, #2408]
  42ee8c:	mov	w0, #0x3                   	// #3
  42ee90:	str	w0, [sp, #508]
  42ee94:	bl	40b040 <__errno_location@plt>
  42ee98:	ldr	w0, [x0]
  42ee9c:	str	w0, [sp, #512]
  42eea0:	ldr	x0, [sp, #2408]
  42eea4:	cmp	x0, #0x0
  42eea8:	b.eq	42eee4 <udev_rule_apply_token_to_event+0x1b34>  // b.none
  42eeac:	mov	w0, #0x1                   	// #1
  42eeb0:	bl	40be30 <log_get_max_level_realm@plt>
  42eeb4:	mov	w1, w0
  42eeb8:	ldr	w0, [sp, #508]
  42eebc:	cmp	w0, w1
  42eec0:	cset	w0, le
  42eec4:	and	w0, w0, #0xff
  42eec8:	and	x0, x0, #0xff
  42eecc:	cmp	x0, #0x0
  42eed0:	b.eq	42eee4 <udev_rule_apply_token_to_event+0x1b34>  // b.none
  42eed4:	add	x0, sp, #0x288
  42eed8:	mov	x1, x0
  42eedc:	ldr	x0, [sp, #2408]
  42eee0:	bl	40aba0 <sd_device_get_sysname@plt>
  42eee4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42eee8:	add	x20, x0, #0xbb
  42eeec:	ldr	x0, [sp, #648]
  42eef0:	cmp	x0, #0x0
  42eef4:	b.eq	42ef04 <udev_rule_apply_token_to_event+0x1b54>  // b.none
  42eef8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42eefc:	add	x19, x0, #0xd8
  42ef00:	b	42ef08 <udev_rule_apply_token_to_event+0x1b58>
  42ef04:	mov	x19, #0x0                   	// #0
  42ef08:	ldr	x21, [sp, #648]
  42ef0c:	ldr	x0, [sp, #2400]
  42ef10:	bl	41fb4c <strna>
  42ef14:	mov	x2, x0
  42ef18:	ldr	x0, [sp, #2392]
  42ef1c:	cmp	x0, #0x0
  42ef20:	b.eq	42ef30 <udev_rule_apply_token_to_event+0x1b80>  // b.none
  42ef24:	ldr	x0, [sp, #2392]
  42ef28:	ldr	w0, [x0, #8]
  42ef2c:	b	42ef34 <udev_rule_apply_token_to_event+0x1b84>
  42ef30:	mov	w0, #0x0                   	// #0
  42ef34:	add	x1, sp, #0xbd8
  42ef38:	str	x1, [sp, #32]
  42ef3c:	str	w0, [sp, #24]
  42ef40:	str	x2, [sp, #16]
  42ef44:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ef48:	add	x0, x0, #0x50
  42ef4c:	str	x0, [sp, #8]
  42ef50:	str	xzr, [sp]
  42ef54:	mov	x7, #0x0                   	// #0
  42ef58:	mov	x6, x21
  42ef5c:	mov	x5, x19
  42ef60:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42ef64:	add	x4, x0, #0xa98
  42ef68:	mov	w3, #0x69e                 	// #1694
  42ef6c:	mov	x2, x20
  42ef70:	ldr	w1, [sp, #512]
  42ef74:	ldr	w0, [sp, #508]
  42ef78:	bl	40b020 <log_object_internal@plt>
  42ef7c:	mov	w19, w0
  42ef80:	b	42f4e0 <udev_rule_apply_token_to_event+0x2130>
  42ef84:	ldr	x0, [sp, #704]
  42ef88:	ldrsb	w0, [x0, #1]
  42ef8c:	cmp	w0, #0x1
  42ef90:	cset	w0, eq  // eq = none
  42ef94:	and	w0, w0, #0xff
  42ef98:	mov	w19, w0
  42ef9c:	b	42f4e0 <udev_rule_apply_token_to_event+0x2130>
  42efa0:	str	xzr, [sp, #624]
  42efa4:	ldr	x0, [sp, #616]
  42efa8:	add	x1, sp, #0x270
  42efac:	mov	x2, x1
  42efb0:	mov	x1, #0x100000              	// #1048576
  42efb4:	bl	41fe58 <read_line>
  42efb8:	str	w0, [sp, #168]
  42efbc:	ldr	w0, [sp, #168]
  42efc0:	cmp	w0, #0x0
  42efc4:	b.ge	42f148 <udev_rule_apply_token_to_event+0x1d98>  // b.tcont
  42efc8:	ldr	x0, [sp, #152]
  42efcc:	str	x0, [sp, #2336]
  42efd0:	ldr	x0, [sp, #2336]
  42efd4:	cmp	x0, #0x0
  42efd8:	b.eq	42efe8 <udev_rule_apply_token_to_event+0x1c38>  // b.none
  42efdc:	ldr	x0, [sp, #2336]
  42efe0:	ldr	x0, [x0, #32]
  42efe4:	b	42efec <udev_rule_apply_token_to_event+0x1c3c>
  42efe8:	mov	x0, #0x0                   	// #0
  42efec:	str	x0, [sp, #2344]
  42eff0:	ldr	x0, [sp, #2344]
  42eff4:	cmp	x0, #0x0
  42eff8:	b.eq	42f008 <udev_rule_apply_token_to_event+0x1c58>  // b.none
  42effc:	ldr	x0, [sp, #2344]
  42f000:	ldr	x0, [x0, #8]
  42f004:	b	42f00c <udev_rule_apply_token_to_event+0x1c5c>
  42f008:	mov	x0, #0x0                   	// #0
  42f00c:	str	x0, [sp, #2352]
  42f010:	ldr	x0, [sp, #2344]
  42f014:	cmp	x0, #0x0
  42f018:	b.eq	42f028 <udev_rule_apply_token_to_event+0x1c78>  // b.none
  42f01c:	ldr	x0, [sp, #2344]
  42f020:	ldr	x0, [x0]
  42f024:	b	42f02c <udev_rule_apply_token_to_event+0x1c7c>
  42f028:	mov	x0, #0x0                   	// #0
  42f02c:	str	x0, [sp, #2360]
  42f030:	str	xzr, [sp, #648]
  42f034:	ldr	x0, [sp, #144]
  42f038:	str	x0, [sp, #2368]
  42f03c:	mov	w0, #0x7                   	// #7
  42f040:	str	w0, [sp, #500]
  42f044:	ldr	w0, [sp, #168]
  42f048:	str	w0, [sp, #504]
  42f04c:	ldr	x0, [sp, #2368]
  42f050:	cmp	x0, #0x0
  42f054:	b.eq	42f090 <udev_rule_apply_token_to_event+0x1ce0>  // b.none
  42f058:	mov	w0, #0x1                   	// #1
  42f05c:	bl	40be30 <log_get_max_level_realm@plt>
  42f060:	mov	w1, w0
  42f064:	ldr	w0, [sp, #500]
  42f068:	cmp	w0, w1
  42f06c:	cset	w0, le
  42f070:	and	w0, w0, #0xff
  42f074:	and	x0, x0, #0xff
  42f078:	cmp	x0, #0x0
  42f07c:	b.eq	42f090 <udev_rule_apply_token_to_event+0x1ce0>  // b.none
  42f080:	add	x0, sp, #0x288
  42f084:	mov	x1, x0
  42f088:	ldr	x0, [sp, #2368]
  42f08c:	bl	40aba0 <sd_device_get_sysname@plt>
  42f090:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f094:	add	x20, x0, #0xbb
  42f098:	ldr	x0, [sp, #648]
  42f09c:	cmp	x0, #0x0
  42f0a0:	b.eq	42f0b0 <udev_rule_apply_token_to_event+0x1d00>  // b.none
  42f0a4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f0a8:	add	x19, x0, #0xd8
  42f0ac:	b	42f0b4 <udev_rule_apply_token_to_event+0x1d04>
  42f0b0:	mov	x19, #0x0                   	// #0
  42f0b4:	ldr	x21, [sp, #648]
  42f0b8:	ldr	x0, [sp, #2360]
  42f0bc:	bl	41fb4c <strna>
  42f0c0:	mov	x2, x0
  42f0c4:	ldr	x0, [sp, #2352]
  42f0c8:	cmp	x0, #0x0
  42f0cc:	b.eq	42f0dc <udev_rule_apply_token_to_event+0x1d2c>  // b.none
  42f0d0:	ldr	x0, [sp, #2352]
  42f0d4:	ldr	w0, [x0, #8]
  42f0d8:	b	42f0e0 <udev_rule_apply_token_to_event+0x1d30>
  42f0dc:	mov	w0, #0x0                   	// #0
  42f0e0:	add	x1, sp, #0xbd8
  42f0e4:	str	x1, [sp, #32]
  42f0e8:	str	w0, [sp, #24]
  42f0ec:	str	x2, [sp, #16]
  42f0f0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f0f4:	add	x0, x0, #0x70
  42f0f8:	str	x0, [sp, #8]
  42f0fc:	str	xzr, [sp]
  42f100:	mov	x7, #0x0                   	// #0
  42f104:	mov	x6, x21
  42f108:	mov	x5, x19
  42f10c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f110:	add	x4, x0, #0xa98
  42f114:	mov	w3, #0x6a9                 	// #1705
  42f118:	mov	x2, x20
  42f11c:	ldr	w1, [sp, #504]
  42f120:	ldr	w0, [sp, #500]
  42f124:	bl	40b020 <log_object_internal@plt>
  42f128:	ldr	x0, [sp, #704]
  42f12c:	ldrsb	w0, [x0, #1]
  42f130:	cmp	w0, #0x1
  42f134:	cset	w0, eq  // eq = none
  42f138:	and	w0, w0, #0xff
  42f13c:	mov	w19, w0
  42f140:	mov	w20, #0x0                   	// #0
  42f144:	b	42f498 <udev_rule_apply_token_to_event+0x20e8>
  42f148:	ldr	w0, [sp, #168]
  42f14c:	cmp	w0, #0x0
  42f150:	b.ne	42f15c <udev_rule_apply_token_to_event+0x1dac>  // b.any
  42f154:	mov	w20, #0x1                   	// #1
  42f158:	b	42f498 <udev_rule_apply_token_to_event+0x20e8>
  42f15c:	ldr	x0, [sp, #624]
  42f160:	add	x2, sp, #0x280
  42f164:	add	x1, sp, #0x278
  42f168:	bl	42cd70 <get_property_from_string>
  42f16c:	str	w0, [sp, #168]
  42f170:	ldr	w0, [sp, #168]
  42f174:	cmp	w0, #0x0
  42f178:	b.ge	42f2e4 <udev_rule_apply_token_to_event+0x1f34>  // b.tcont
  42f17c:	ldr	x0, [sp, #152]
  42f180:	str	x0, [sp, #2296]
  42f184:	ldr	x0, [sp, #2296]
  42f188:	cmp	x0, #0x0
  42f18c:	b.eq	42f19c <udev_rule_apply_token_to_event+0x1dec>  // b.none
  42f190:	ldr	x0, [sp, #2296]
  42f194:	ldr	x0, [x0, #32]
  42f198:	b	42f1a0 <udev_rule_apply_token_to_event+0x1df0>
  42f19c:	mov	x0, #0x0                   	// #0
  42f1a0:	str	x0, [sp, #2304]
  42f1a4:	ldr	x0, [sp, #2304]
  42f1a8:	cmp	x0, #0x0
  42f1ac:	b.eq	42f1bc <udev_rule_apply_token_to_event+0x1e0c>  // b.none
  42f1b0:	ldr	x0, [sp, #2304]
  42f1b4:	ldr	x0, [x0, #8]
  42f1b8:	b	42f1c0 <udev_rule_apply_token_to_event+0x1e10>
  42f1bc:	mov	x0, #0x0                   	// #0
  42f1c0:	str	x0, [sp, #2312]
  42f1c4:	ldr	x0, [sp, #2304]
  42f1c8:	cmp	x0, #0x0
  42f1cc:	b.eq	42f1dc <udev_rule_apply_token_to_event+0x1e2c>  // b.none
  42f1d0:	ldr	x0, [sp, #2304]
  42f1d4:	ldr	x0, [x0]
  42f1d8:	b	42f1e0 <udev_rule_apply_token_to_event+0x1e30>
  42f1dc:	mov	x0, #0x0                   	// #0
  42f1e0:	str	x0, [sp, #2320]
  42f1e4:	str	xzr, [sp, #648]
  42f1e8:	ldr	x0, [sp, #144]
  42f1ec:	str	x0, [sp, #2328]
  42f1f0:	mov	w0, #0x7                   	// #7
  42f1f4:	str	w0, [sp, #492]
  42f1f8:	ldr	w0, [sp, #168]
  42f1fc:	str	w0, [sp, #496]
  42f200:	ldr	x0, [sp, #2328]
  42f204:	cmp	x0, #0x0
  42f208:	b.eq	42f244 <udev_rule_apply_token_to_event+0x1e94>  // b.none
  42f20c:	mov	w0, #0x1                   	// #1
  42f210:	bl	40be30 <log_get_max_level_realm@plt>
  42f214:	mov	w1, w0
  42f218:	ldr	w0, [sp, #492]
  42f21c:	cmp	w0, w1
  42f220:	cset	w0, le
  42f224:	and	w0, w0, #0xff
  42f228:	and	x0, x0, #0xff
  42f22c:	cmp	x0, #0x0
  42f230:	b.eq	42f244 <udev_rule_apply_token_to_event+0x1e94>  // b.none
  42f234:	add	x0, sp, #0x288
  42f238:	mov	x1, x0
  42f23c:	ldr	x0, [sp, #2328]
  42f240:	bl	40aba0 <sd_device_get_sysname@plt>
  42f244:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f248:	add	x21, x0, #0xbb
  42f24c:	ldr	x0, [sp, #648]
  42f250:	cmp	x0, #0x0
  42f254:	b.eq	42f264 <udev_rule_apply_token_to_event+0x1eb4>  // b.none
  42f258:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f25c:	add	x20, x0, #0xd8
  42f260:	b	42f268 <udev_rule_apply_token_to_event+0x1eb8>
  42f264:	mov	x20, #0x0                   	// #0
  42f268:	ldr	x22, [sp, #648]
  42f26c:	ldr	x0, [sp, #2320]
  42f270:	bl	41fb4c <strna>
  42f274:	mov	x2, x0
  42f278:	ldr	x0, [sp, #2312]
  42f27c:	cmp	x0, #0x0
  42f280:	b.eq	42f290 <udev_rule_apply_token_to_event+0x1ee0>  // b.none
  42f284:	ldr	x0, [sp, #2312]
  42f288:	ldr	w0, [x0, #8]
  42f28c:	b	42f294 <udev_rule_apply_token_to_event+0x1ee4>
  42f290:	mov	w0, #0x0                   	// #0
  42f294:	ldr	x1, [sp, #624]
  42f298:	str	x1, [sp, #32]
  42f29c:	str	w0, [sp, #24]
  42f2a0:	str	x2, [sp, #16]
  42f2a4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f2a8:	add	x0, x0, #0x98
  42f2ac:	str	x0, [sp, #8]
  42f2b0:	str	xzr, [sp]
  42f2b4:	mov	x7, #0x0                   	// #0
  42f2b8:	mov	x6, x22
  42f2bc:	mov	x5, x20
  42f2c0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f2c4:	add	x4, x0, #0xa98
  42f2c8:	mov	w3, #0x6b2                 	// #1714
  42f2cc:	mov	x2, x21
  42f2d0:	ldr	w1, [sp, #496]
  42f2d4:	ldr	w0, [sp, #492]
  42f2d8:	bl	40b020 <log_object_internal@plt>
  42f2dc:	mov	w20, #0x2                   	// #2
  42f2e0:	b	42f498 <udev_rule_apply_token_to_event+0x20e8>
  42f2e4:	ldr	w0, [sp, #168]
  42f2e8:	cmp	w0, #0x0
  42f2ec:	b.ne	42f2f8 <udev_rule_apply_token_to_event+0x1f48>  // b.any
  42f2f0:	mov	w20, #0x2                   	// #2
  42f2f4:	b	42f498 <udev_rule_apply_token_to_event+0x20e8>
  42f2f8:	ldr	x0, [sp, #632]
  42f2fc:	ldr	x1, [sp, #640]
  42f300:	mov	x2, x1
  42f304:	mov	x1, x0
  42f308:	ldr	x0, [sp, #144]
  42f30c:	bl	40bab0 <device_add_property@plt>
  42f310:	str	w0, [sp, #168]
  42f314:	ldr	w0, [sp, #168]
  42f318:	cmp	w0, #0x0
  42f31c:	b.ge	42f494 <udev_rule_apply_token_to_event+0x20e4>  // b.tcont
  42f320:	ldr	x0, [sp, #152]
  42f324:	str	x0, [sp, #2256]
  42f328:	ldr	x0, [sp, #2256]
  42f32c:	cmp	x0, #0x0
  42f330:	b.eq	42f340 <udev_rule_apply_token_to_event+0x1f90>  // b.none
  42f334:	ldr	x0, [sp, #2256]
  42f338:	ldr	x0, [x0, #32]
  42f33c:	b	42f344 <udev_rule_apply_token_to_event+0x1f94>
  42f340:	mov	x0, #0x0                   	// #0
  42f344:	str	x0, [sp, #2264]
  42f348:	ldr	x0, [sp, #2264]
  42f34c:	cmp	x0, #0x0
  42f350:	b.eq	42f360 <udev_rule_apply_token_to_event+0x1fb0>  // b.none
  42f354:	ldr	x0, [sp, #2264]
  42f358:	ldr	x0, [x0, #8]
  42f35c:	b	42f364 <udev_rule_apply_token_to_event+0x1fb4>
  42f360:	mov	x0, #0x0                   	// #0
  42f364:	str	x0, [sp, #2272]
  42f368:	ldr	x0, [sp, #2264]
  42f36c:	cmp	x0, #0x0
  42f370:	b.eq	42f380 <udev_rule_apply_token_to_event+0x1fd0>  // b.none
  42f374:	ldr	x0, [sp, #2264]
  42f378:	ldr	x0, [x0]
  42f37c:	b	42f384 <udev_rule_apply_token_to_event+0x1fd4>
  42f380:	mov	x0, #0x0                   	// #0
  42f384:	str	x0, [sp, #2280]
  42f388:	str	xzr, [sp, #648]
  42f38c:	ldr	x0, [sp, #144]
  42f390:	str	x0, [sp, #2288]
  42f394:	mov	w0, #0x3                   	// #3
  42f398:	str	w0, [sp, #484]
  42f39c:	ldr	w0, [sp, #168]
  42f3a0:	str	w0, [sp, #488]
  42f3a4:	ldr	x0, [sp, #2288]
  42f3a8:	cmp	x0, #0x0
  42f3ac:	b.eq	42f3e8 <udev_rule_apply_token_to_event+0x2038>  // b.none
  42f3b0:	mov	w0, #0x1                   	// #1
  42f3b4:	bl	40be30 <log_get_max_level_realm@plt>
  42f3b8:	mov	w1, w0
  42f3bc:	ldr	w0, [sp, #484]
  42f3c0:	cmp	w0, w1
  42f3c4:	cset	w0, le
  42f3c8:	and	w0, w0, #0xff
  42f3cc:	and	x0, x0, #0xff
  42f3d0:	cmp	x0, #0x0
  42f3d4:	b.eq	42f3e8 <udev_rule_apply_token_to_event+0x2038>  // b.none
  42f3d8:	add	x0, sp, #0x288
  42f3dc:	mov	x1, x0
  42f3e0:	ldr	x0, [sp, #2288]
  42f3e4:	bl	40aba0 <sd_device_get_sysname@plt>
  42f3e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f3ec:	add	x20, x0, #0xbb
  42f3f0:	ldr	x0, [sp, #648]
  42f3f4:	cmp	x0, #0x0
  42f3f8:	b.eq	42f408 <udev_rule_apply_token_to_event+0x2058>  // b.none
  42f3fc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f400:	add	x19, x0, #0xd8
  42f404:	b	42f40c <udev_rule_apply_token_to_event+0x205c>
  42f408:	mov	x19, #0x0                   	// #0
  42f40c:	ldr	x21, [sp, #648]
  42f410:	ldr	x0, [sp, #2280]
  42f414:	bl	41fb4c <strna>
  42f418:	mov	x3, x0
  42f41c:	ldr	x0, [sp, #2272]
  42f420:	cmp	x0, #0x0
  42f424:	b.eq	42f434 <udev_rule_apply_token_to_event+0x2084>  // b.none
  42f428:	ldr	x0, [sp, #2272]
  42f42c:	ldr	w0, [x0, #8]
  42f430:	b	42f438 <udev_rule_apply_token_to_event+0x2088>
  42f434:	mov	w0, #0x0                   	// #0
  42f438:	ldr	x1, [sp, #632]
  42f43c:	ldr	x2, [sp, #640]
  42f440:	str	x2, [sp, #40]
  42f444:	str	x1, [sp, #32]
  42f448:	str	w0, [sp, #24]
  42f44c:	str	x3, [sp, #16]
  42f450:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f454:	add	x0, x0, #0xd8
  42f458:	str	x0, [sp, #8]
  42f45c:	str	xzr, [sp]
  42f460:	mov	x7, #0x0                   	// #0
  42f464:	mov	x6, x21
  42f468:	mov	x5, x19
  42f46c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f470:	add	x4, x0, #0xa98
  42f474:	mov	w3, #0x6bc                 	// #1724
  42f478:	mov	x2, x20
  42f47c:	ldr	w1, [sp, #488]
  42f480:	ldr	w0, [sp, #484]
  42f484:	bl	40b020 <log_object_internal@plt>
  42f488:	mov	w19, w0
  42f48c:	mov	w20, #0x0                   	// #0
  42f490:	b	42f498 <udev_rule_apply_token_to_event+0x20e8>
  42f494:	mov	w20, #0x3                   	// #3
  42f498:	add	x0, sp, #0x270
  42f49c:	bl	41fa04 <freep>
  42f4a0:	cmp	w20, #0x3
  42f4a4:	b.eq	42f4dc <udev_rule_apply_token_to_event+0x212c>  // b.none
  42f4a8:	cmp	w20, #0x3
  42f4ac:	b.gt	42efa0 <udev_rule_apply_token_to_event+0x1bf0>
  42f4b0:	cmp	w20, #0x0
  42f4b4:	b.eq	42f4e0 <udev_rule_apply_token_to_event+0x2130>  // b.none
  42f4b8:	cmp	w20, #0x1
  42f4bc:	b.ne	42f4dc <udev_rule_apply_token_to_event+0x212c>  // b.any
  42f4c0:	ldr	x0, [sp, #704]
  42f4c4:	ldrsb	w0, [x0, #1]
  42f4c8:	cmp	w0, #0x0
  42f4cc:	cset	w0, eq  // eq = none
  42f4d0:	and	w0, w0, #0xff
  42f4d4:	mov	w19, w0
  42f4d8:	b	42f4e0 <udev_rule_apply_token_to_event+0x2130>
  42f4dc:	b	42efa0 <udev_rule_apply_token_to_event+0x1bf0>
  42f4e0:	add	x0, sp, #0x268
  42f4e4:	bl	41fdd0 <fclosep>
  42f4e8:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42f4ec:	ldr	x0, [sp, #704]
  42f4f0:	ldr	x0, [x0, #8]
  42f4f4:	add	x1, sp, #0xbd8
  42f4f8:	mov	w4, #0x0                   	// #0
  42f4fc:	mov	x3, #0x400                 	// #1024
  42f500:	mov	x2, x1
  42f504:	mov	x1, x0
  42f508:	ldr	x0, [sp, #136]
  42f50c:	bl	4185d8 <udev_event_apply_format>
  42f510:	ldr	x0, [sp, #152]
  42f514:	str	x0, [sp, #2016]
  42f518:	ldr	x0, [sp, #2016]
  42f51c:	cmp	x0, #0x0
  42f520:	b.eq	42f530 <udev_rule_apply_token_to_event+0x2180>  // b.none
  42f524:	ldr	x0, [sp, #2016]
  42f528:	ldr	x0, [x0, #32]
  42f52c:	b	42f534 <udev_rule_apply_token_to_event+0x2184>
  42f530:	mov	x0, #0x0                   	// #0
  42f534:	str	x0, [sp, #2024]
  42f538:	ldr	x0, [sp, #2024]
  42f53c:	cmp	x0, #0x0
  42f540:	b.eq	42f550 <udev_rule_apply_token_to_event+0x21a0>  // b.none
  42f544:	ldr	x0, [sp, #2024]
  42f548:	ldr	x0, [x0, #8]
  42f54c:	b	42f554 <udev_rule_apply_token_to_event+0x21a4>
  42f550:	mov	x0, #0x0                   	// #0
  42f554:	str	x0, [sp, #2032]
  42f558:	ldr	x0, [sp, #2024]
  42f55c:	cmp	x0, #0x0
  42f560:	b.eq	42f570 <udev_rule_apply_token_to_event+0x21c0>  // b.none
  42f564:	ldr	x0, [sp, #2024]
  42f568:	ldr	x0, [x0]
  42f56c:	b	42f574 <udev_rule_apply_token_to_event+0x21c4>
  42f570:	mov	x0, #0x0                   	// #0
  42f574:	str	x0, [sp, #2040]
  42f578:	str	xzr, [sp, #648]
  42f57c:	ldr	x0, [sp, #144]
  42f580:	str	x0, [sp, #2048]
  42f584:	mov	w0, #0x7                   	// #7
  42f588:	str	w0, [sp, #436]
  42f58c:	str	wzr, [sp, #440]
  42f590:	ldr	x0, [sp, #2048]
  42f594:	cmp	x0, #0x0
  42f598:	b.eq	42f5d4 <udev_rule_apply_token_to_event+0x2224>  // b.none
  42f59c:	mov	w0, #0x1                   	// #1
  42f5a0:	bl	40be30 <log_get_max_level_realm@plt>
  42f5a4:	mov	w1, w0
  42f5a8:	ldr	w0, [sp, #436]
  42f5ac:	cmp	w0, w1
  42f5b0:	cset	w0, le
  42f5b4:	and	w0, w0, #0xff
  42f5b8:	and	x0, x0, #0xff
  42f5bc:	cmp	x0, #0x0
  42f5c0:	b.eq	42f5d4 <udev_rule_apply_token_to_event+0x2224>  // b.none
  42f5c4:	add	x0, sp, #0x288
  42f5c8:	mov	x1, x0
  42f5cc:	ldr	x0, [sp, #2048]
  42f5d0:	bl	40aba0 <sd_device_get_sysname@plt>
  42f5d4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f5d8:	add	x20, x0, #0xbb
  42f5dc:	ldr	x0, [sp, #648]
  42f5e0:	cmp	x0, #0x0
  42f5e4:	b.eq	42f5f4 <udev_rule_apply_token_to_event+0x2244>  // b.none
  42f5e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f5ec:	add	x19, x0, #0xd8
  42f5f0:	b	42f5f8 <udev_rule_apply_token_to_event+0x2248>
  42f5f4:	mov	x19, #0x0                   	// #0
  42f5f8:	ldr	x21, [sp, #648]
  42f5fc:	ldr	x0, [sp, #2040]
  42f600:	bl	41fb4c <strna>
  42f604:	mov	x2, x0
  42f608:	ldr	x0, [sp, #2032]
  42f60c:	cmp	x0, #0x0
  42f610:	b.eq	42f620 <udev_rule_apply_token_to_event+0x2270>  // b.none
  42f614:	ldr	x0, [sp, #2032]
  42f618:	ldr	w0, [x0, #8]
  42f61c:	b	42f624 <udev_rule_apply_token_to_event+0x2274>
  42f620:	mov	w0, #0x0                   	// #0
  42f624:	add	x1, sp, #0xbd8
  42f628:	str	x1, [sp, #32]
  42f62c:	str	w0, [sp, #24]
  42f630:	str	x2, [sp, #16]
  42f634:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f638:	add	x0, x0, #0x100
  42f63c:	str	x0, [sp, #8]
  42f640:	str	xzr, [sp]
  42f644:	mov	x7, #0x0                   	// #0
  42f648:	mov	x6, x21
  42f64c:	mov	x5, x19
  42f650:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f654:	add	x4, x0, #0xa98
  42f658:	mov	w3, #0x6c7                 	// #1735
  42f65c:	mov	x2, x20
  42f660:	ldr	w1, [sp, #440]
  42f664:	ldr	w0, [sp, #436]
  42f668:	bl	40b020 <log_object_internal@plt>
  42f66c:	add	x1, sp, #0xfd8
  42f670:	add	x0, sp, #0xbd8
  42f674:	mov	x5, #0x4000                	// #16384
  42f678:	mov	x4, x1
  42f67c:	mov	x3, x0
  42f680:	mov	w2, #0x1                   	// #1
  42f684:	ldr	x1, [sp, #128]
  42f688:	ldr	x0, [sp, #136]
  42f68c:	bl	419d18 <udev_event_spawn>
  42f690:	str	w0, [sp, #168]
  42f694:	ldr	w0, [sp, #168]
  42f698:	cmp	w0, #0x0
  42f69c:	b.eq	42f990 <udev_rule_apply_token_to_event+0x25e0>  // b.none
  42f6a0:	ldr	w0, [sp, #168]
  42f6a4:	cmp	w0, #0x0
  42f6a8:	b.ge	42f810 <udev_rule_apply_token_to_event+0x2460>  // b.tcont
  42f6ac:	ldr	x0, [sp, #152]
  42f6b0:	str	x0, [sp, #2176]
  42f6b4:	ldr	x0, [sp, #2176]
  42f6b8:	cmp	x0, #0x0
  42f6bc:	b.eq	42f6cc <udev_rule_apply_token_to_event+0x231c>  // b.none
  42f6c0:	ldr	x0, [sp, #2176]
  42f6c4:	ldr	x0, [x0, #32]
  42f6c8:	b	42f6d0 <udev_rule_apply_token_to_event+0x2320>
  42f6cc:	mov	x0, #0x0                   	// #0
  42f6d0:	str	x0, [sp, #2184]
  42f6d4:	ldr	x0, [sp, #2184]
  42f6d8:	cmp	x0, #0x0
  42f6dc:	b.eq	42f6ec <udev_rule_apply_token_to_event+0x233c>  // b.none
  42f6e0:	ldr	x0, [sp, #2184]
  42f6e4:	ldr	x0, [x0, #8]
  42f6e8:	b	42f6f0 <udev_rule_apply_token_to_event+0x2340>
  42f6ec:	mov	x0, #0x0                   	// #0
  42f6f0:	str	x0, [sp, #2192]
  42f6f4:	ldr	x0, [sp, #2184]
  42f6f8:	cmp	x0, #0x0
  42f6fc:	b.eq	42f70c <udev_rule_apply_token_to_event+0x235c>  // b.none
  42f700:	ldr	x0, [sp, #2184]
  42f704:	ldr	x0, [x0]
  42f708:	b	42f710 <udev_rule_apply_token_to_event+0x2360>
  42f70c:	mov	x0, #0x0                   	// #0
  42f710:	str	x0, [sp, #2200]
  42f714:	str	xzr, [sp, #648]
  42f718:	ldr	x0, [sp, #144]
  42f71c:	str	x0, [sp, #2208]
  42f720:	mov	w0, #0x4                   	// #4
  42f724:	str	w0, [sp, #468]
  42f728:	ldr	w0, [sp, #168]
  42f72c:	str	w0, [sp, #472]
  42f730:	ldr	x0, [sp, #2208]
  42f734:	cmp	x0, #0x0
  42f738:	b.eq	42f774 <udev_rule_apply_token_to_event+0x23c4>  // b.none
  42f73c:	mov	w0, #0x1                   	// #1
  42f740:	bl	40be30 <log_get_max_level_realm@plt>
  42f744:	mov	w1, w0
  42f748:	ldr	w0, [sp, #468]
  42f74c:	cmp	w0, w1
  42f750:	cset	w0, le
  42f754:	and	w0, w0, #0xff
  42f758:	and	x0, x0, #0xff
  42f75c:	cmp	x0, #0x0
  42f760:	b.eq	42f774 <udev_rule_apply_token_to_event+0x23c4>  // b.none
  42f764:	add	x0, sp, #0x288
  42f768:	mov	x1, x0
  42f76c:	ldr	x0, [sp, #2208]
  42f770:	bl	40aba0 <sd_device_get_sysname@plt>
  42f774:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f778:	add	x20, x0, #0xbb
  42f77c:	ldr	x0, [sp, #648]
  42f780:	cmp	x0, #0x0
  42f784:	b.eq	42f794 <udev_rule_apply_token_to_event+0x23e4>  // b.none
  42f788:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f78c:	add	x19, x0, #0xd8
  42f790:	b	42f798 <udev_rule_apply_token_to_event+0x23e8>
  42f794:	mov	x19, #0x0                   	// #0
  42f798:	ldr	x21, [sp, #648]
  42f79c:	ldr	x0, [sp, #2200]
  42f7a0:	bl	41fb4c <strna>
  42f7a4:	mov	x2, x0
  42f7a8:	ldr	x0, [sp, #2192]
  42f7ac:	cmp	x0, #0x0
  42f7b0:	b.eq	42f7c0 <udev_rule_apply_token_to_event+0x2410>  // b.none
  42f7b4:	ldr	x0, [sp, #2192]
  42f7b8:	ldr	w0, [x0, #8]
  42f7bc:	b	42f7c4 <udev_rule_apply_token_to_event+0x2414>
  42f7c0:	mov	w0, #0x0                   	// #0
  42f7c4:	add	x1, sp, #0xbd8
  42f7c8:	str	x1, [sp, #32]
  42f7cc:	str	w0, [sp, #24]
  42f7d0:	str	x2, [sp, #16]
  42f7d4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f7d8:	add	x0, x0, #0xf78
  42f7dc:	str	x0, [sp, #8]
  42f7e0:	str	xzr, [sp]
  42f7e4:	mov	x7, #0x0                   	// #0
  42f7e8:	mov	x6, x21
  42f7ec:	mov	x5, x19
  42f7f0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f7f4:	add	x4, x0, #0xa98
  42f7f8:	mov	w3, #0x6cc                 	// #1740
  42f7fc:	mov	x2, x20
  42f800:	ldr	w1, [sp, #472]
  42f804:	ldr	w0, [sp, #468]
  42f808:	bl	40b020 <log_object_internal@plt>
  42f80c:	b	42f974 <udev_rule_apply_token_to_event+0x25c4>
  42f810:	ldr	x0, [sp, #152]
  42f814:	str	x0, [sp, #2136]
  42f818:	ldr	x0, [sp, #2136]
  42f81c:	cmp	x0, #0x0
  42f820:	b.eq	42f830 <udev_rule_apply_token_to_event+0x2480>  // b.none
  42f824:	ldr	x0, [sp, #2136]
  42f828:	ldr	x0, [x0, #32]
  42f82c:	b	42f834 <udev_rule_apply_token_to_event+0x2484>
  42f830:	mov	x0, #0x0                   	// #0
  42f834:	str	x0, [sp, #2144]
  42f838:	ldr	x0, [sp, #2144]
  42f83c:	cmp	x0, #0x0
  42f840:	b.eq	42f850 <udev_rule_apply_token_to_event+0x24a0>  // b.none
  42f844:	ldr	x0, [sp, #2144]
  42f848:	ldr	x0, [x0, #8]
  42f84c:	b	42f854 <udev_rule_apply_token_to_event+0x24a4>
  42f850:	mov	x0, #0x0                   	// #0
  42f854:	str	x0, [sp, #2152]
  42f858:	ldr	x0, [sp, #2144]
  42f85c:	cmp	x0, #0x0
  42f860:	b.eq	42f870 <udev_rule_apply_token_to_event+0x24c0>  // b.none
  42f864:	ldr	x0, [sp, #2144]
  42f868:	ldr	x0, [x0]
  42f86c:	b	42f874 <udev_rule_apply_token_to_event+0x24c4>
  42f870:	mov	x0, #0x0                   	// #0
  42f874:	str	x0, [sp, #2160]
  42f878:	str	xzr, [sp, #648]
  42f87c:	ldr	x0, [sp, #144]
  42f880:	str	x0, [sp, #2168]
  42f884:	mov	w0, #0x7                   	// #7
  42f888:	str	w0, [sp, #460]
  42f88c:	str	wzr, [sp, #464]
  42f890:	ldr	x0, [sp, #2168]
  42f894:	cmp	x0, #0x0
  42f898:	b.eq	42f8d4 <udev_rule_apply_token_to_event+0x2524>  // b.none
  42f89c:	mov	w0, #0x1                   	// #1
  42f8a0:	bl	40be30 <log_get_max_level_realm@plt>
  42f8a4:	mov	w1, w0
  42f8a8:	ldr	w0, [sp, #460]
  42f8ac:	cmp	w0, w1
  42f8b0:	cset	w0, le
  42f8b4:	and	w0, w0, #0xff
  42f8b8:	and	x0, x0, #0xff
  42f8bc:	cmp	x0, #0x0
  42f8c0:	b.eq	42f8d4 <udev_rule_apply_token_to_event+0x2524>  // b.none
  42f8c4:	add	x0, sp, #0x288
  42f8c8:	mov	x1, x0
  42f8cc:	ldr	x0, [sp, #2168]
  42f8d0:	bl	40aba0 <sd_device_get_sysname@plt>
  42f8d4:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f8d8:	add	x20, x0, #0xbb
  42f8dc:	ldr	x0, [sp, #648]
  42f8e0:	cmp	x0, #0x0
  42f8e4:	b.eq	42f8f4 <udev_rule_apply_token_to_event+0x2544>  // b.none
  42f8e8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f8ec:	add	x19, x0, #0xd8
  42f8f0:	b	42f8f8 <udev_rule_apply_token_to_event+0x2548>
  42f8f4:	mov	x19, #0x0                   	// #0
  42f8f8:	ldr	x21, [sp, #648]
  42f8fc:	ldr	x0, [sp, #2160]
  42f900:	bl	41fb4c <strna>
  42f904:	mov	x2, x0
  42f908:	ldr	x0, [sp, #2152]
  42f90c:	cmp	x0, #0x0
  42f910:	b.eq	42f920 <udev_rule_apply_token_to_event+0x2570>  // b.none
  42f914:	ldr	x0, [sp, #2152]
  42f918:	ldr	w0, [x0, #8]
  42f91c:	b	42f924 <udev_rule_apply_token_to_event+0x2574>
  42f920:	mov	w0, #0x0                   	// #0
  42f924:	ldr	w1, [sp, #168]
  42f928:	str	w1, [sp, #40]
  42f92c:	add	x1, sp, #0xbd8
  42f930:	str	x1, [sp, #32]
  42f934:	str	w0, [sp, #24]
  42f938:	str	x2, [sp, #16]
  42f93c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42f940:	add	x0, x0, #0xfa8
  42f944:	str	x0, [sp, #8]
  42f948:	str	xzr, [sp]
  42f94c:	mov	x7, #0x0                   	// #0
  42f950:	mov	x6, x21
  42f954:	mov	x5, x19
  42f958:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42f95c:	add	x4, x0, #0xa98
  42f960:	mov	w3, #0x6ce                 	// #1742
  42f964:	mov	x2, x20
  42f968:	ldr	w1, [sp, #464]
  42f96c:	ldr	w0, [sp, #460]
  42f970:	bl	40b020 <log_object_internal@plt>
  42f974:	ldr	x0, [sp, #704]
  42f978:	ldrsb	w0, [x0, #1]
  42f97c:	cmp	w0, #0x1
  42f980:	cset	w0, eq  // eq = none
  42f984:	and	w0, w0, #0xff
  42f988:	mov	w19, w0
  42f98c:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42f990:	add	x0, sp, #0xfd8
  42f994:	str	x0, [sp, #664]
  42f998:	b	42fd04 <udev_rule_apply_token_to_event+0x2954>
  42f99c:	mov	w1, #0xa                   	// #10
  42f9a0:	ldr	x0, [sp, #664]
  42f9a4:	bl	40b850 <strchr@plt>
  42f9a8:	str	x0, [sp, #672]
  42f9ac:	ldr	x0, [sp, #672]
  42f9b0:	cmp	x0, #0x0
  42f9b4:	b.eq	42f9c8 <udev_rule_apply_token_to_event+0x2618>  // b.none
  42f9b8:	ldr	x0, [sp, #672]
  42f9bc:	add	x1, x0, #0x1
  42f9c0:	str	x1, [sp, #672]
  42f9c4:	strb	wzr, [x0]
  42f9c8:	add	x1, sp, #0x280
  42f9cc:	add	x0, sp, #0x278
  42f9d0:	mov	x2, x1
  42f9d4:	mov	x1, x0
  42f9d8:	ldr	x0, [sp, #664]
  42f9dc:	bl	42cd70 <get_property_from_string>
  42f9e0:	str	w0, [sp, #168]
  42f9e4:	ldr	w0, [sp, #168]
  42f9e8:	cmp	w0, #0x0
  42f9ec:	b.ge	42fb54 <udev_rule_apply_token_to_event+0x27a4>  // b.tcont
  42f9f0:	ldr	x0, [sp, #152]
  42f9f4:	str	x0, [sp, #2096]
  42f9f8:	ldr	x0, [sp, #2096]
  42f9fc:	cmp	x0, #0x0
  42fa00:	b.eq	42fa10 <udev_rule_apply_token_to_event+0x2660>  // b.none
  42fa04:	ldr	x0, [sp, #2096]
  42fa08:	ldr	x0, [x0, #32]
  42fa0c:	b	42fa14 <udev_rule_apply_token_to_event+0x2664>
  42fa10:	mov	x0, #0x0                   	// #0
  42fa14:	str	x0, [sp, #2104]
  42fa18:	ldr	x0, [sp, #2104]
  42fa1c:	cmp	x0, #0x0
  42fa20:	b.eq	42fa30 <udev_rule_apply_token_to_event+0x2680>  // b.none
  42fa24:	ldr	x0, [sp, #2104]
  42fa28:	ldr	x0, [x0, #8]
  42fa2c:	b	42fa34 <udev_rule_apply_token_to_event+0x2684>
  42fa30:	mov	x0, #0x0                   	// #0
  42fa34:	str	x0, [sp, #2112]
  42fa38:	ldr	x0, [sp, #2104]
  42fa3c:	cmp	x0, #0x0
  42fa40:	b.eq	42fa50 <udev_rule_apply_token_to_event+0x26a0>  // b.none
  42fa44:	ldr	x0, [sp, #2104]
  42fa48:	ldr	x0, [x0]
  42fa4c:	b	42fa54 <udev_rule_apply_token_to_event+0x26a4>
  42fa50:	mov	x0, #0x0                   	// #0
  42fa54:	str	x0, [sp, #2120]
  42fa58:	str	xzr, [sp, #648]
  42fa5c:	ldr	x0, [sp, #144]
  42fa60:	str	x0, [sp, #2128]
  42fa64:	mov	w0, #0x7                   	// #7
  42fa68:	str	w0, [sp, #452]
  42fa6c:	ldr	w0, [sp, #168]
  42fa70:	str	w0, [sp, #456]
  42fa74:	ldr	x0, [sp, #2128]
  42fa78:	cmp	x0, #0x0
  42fa7c:	b.eq	42fab8 <udev_rule_apply_token_to_event+0x2708>  // b.none
  42fa80:	mov	w0, #0x1                   	// #1
  42fa84:	bl	40be30 <log_get_max_level_realm@plt>
  42fa88:	mov	w1, w0
  42fa8c:	ldr	w0, [sp, #452]
  42fa90:	cmp	w0, w1
  42fa94:	cset	w0, le
  42fa98:	and	w0, w0, #0xff
  42fa9c:	and	x0, x0, #0xff
  42faa0:	cmp	x0, #0x0
  42faa4:	b.eq	42fab8 <udev_rule_apply_token_to_event+0x2708>  // b.none
  42faa8:	add	x0, sp, #0x288
  42faac:	mov	x1, x0
  42fab0:	ldr	x0, [sp, #2128]
  42fab4:	bl	40aba0 <sd_device_get_sysname@plt>
  42fab8:	adrp	x0, 454000 <__func__.10675+0xa0>
  42fabc:	add	x20, x0, #0xbb
  42fac0:	ldr	x0, [sp, #648]
  42fac4:	cmp	x0, #0x0
  42fac8:	b.eq	42fad8 <udev_rule_apply_token_to_event+0x2728>  // b.none
  42facc:	adrp	x0, 454000 <__func__.10675+0xa0>
  42fad0:	add	x19, x0, #0xd8
  42fad4:	b	42fadc <udev_rule_apply_token_to_event+0x272c>
  42fad8:	mov	x19, #0x0                   	// #0
  42fadc:	ldr	x21, [sp, #648]
  42fae0:	ldr	x0, [sp, #2120]
  42fae4:	bl	41fb4c <strna>
  42fae8:	mov	x2, x0
  42faec:	ldr	x0, [sp, #2112]
  42faf0:	cmp	x0, #0x0
  42faf4:	b.eq	42fb04 <udev_rule_apply_token_to_event+0x2754>  // b.none
  42faf8:	ldr	x0, [sp, #2112]
  42fafc:	ldr	w0, [x0, #8]
  42fb00:	b	42fb08 <udev_rule_apply_token_to_event+0x2758>
  42fb04:	mov	w0, #0x0                   	// #0
  42fb08:	ldr	x1, [sp, #664]
  42fb0c:	str	x1, [sp, #32]
  42fb10:	str	w0, [sp, #24]
  42fb14:	str	x2, [sp, #16]
  42fb18:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42fb1c:	add	x0, x0, #0x98
  42fb20:	str	x0, [sp, #8]
  42fb24:	str	xzr, [sp]
  42fb28:	mov	x7, #0x0                   	// #0
  42fb2c:	mov	x6, x21
  42fb30:	mov	x5, x19
  42fb34:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42fb38:	add	x4, x0, #0xa98
  42fb3c:	mov	w3, #0x6db                 	// #1755
  42fb40:	mov	x2, x20
  42fb44:	ldr	w1, [sp, #456]
  42fb48:	ldr	w0, [sp, #452]
  42fb4c:	bl	40b020 <log_object_internal@plt>
  42fb50:	b	42fcfc <udev_rule_apply_token_to_event+0x294c>
  42fb54:	ldr	w0, [sp, #168]
  42fb58:	cmp	w0, #0x0
  42fb5c:	b.eq	42fcf8 <udev_rule_apply_token_to_event+0x2948>  // b.none
  42fb60:	ldr	x0, [sp, #632]
  42fb64:	ldr	x1, [sp, #640]
  42fb68:	mov	x2, x1
  42fb6c:	mov	x1, x0
  42fb70:	ldr	x0, [sp, #144]
  42fb74:	bl	40bab0 <device_add_property@plt>
  42fb78:	str	w0, [sp, #168]
  42fb7c:	ldr	w0, [sp, #168]
  42fb80:	cmp	w0, #0x0
  42fb84:	b.ge	42fcfc <udev_rule_apply_token_to_event+0x294c>  // b.tcont
  42fb88:	ldr	x0, [sp, #152]
  42fb8c:	str	x0, [sp, #2056]
  42fb90:	ldr	x0, [sp, #2056]
  42fb94:	cmp	x0, #0x0
  42fb98:	b.eq	42fba8 <udev_rule_apply_token_to_event+0x27f8>  // b.none
  42fb9c:	ldr	x0, [sp, #2056]
  42fba0:	ldr	x0, [x0, #32]
  42fba4:	b	42fbac <udev_rule_apply_token_to_event+0x27fc>
  42fba8:	mov	x0, #0x0                   	// #0
  42fbac:	str	x0, [sp, #2064]
  42fbb0:	ldr	x0, [sp, #2064]
  42fbb4:	cmp	x0, #0x0
  42fbb8:	b.eq	42fbc8 <udev_rule_apply_token_to_event+0x2818>  // b.none
  42fbbc:	ldr	x0, [sp, #2064]
  42fbc0:	ldr	x0, [x0, #8]
  42fbc4:	b	42fbcc <udev_rule_apply_token_to_event+0x281c>
  42fbc8:	mov	x0, #0x0                   	// #0
  42fbcc:	str	x0, [sp, #2072]
  42fbd0:	ldr	x0, [sp, #2064]
  42fbd4:	cmp	x0, #0x0
  42fbd8:	b.eq	42fbe8 <udev_rule_apply_token_to_event+0x2838>  // b.none
  42fbdc:	ldr	x0, [sp, #2064]
  42fbe0:	ldr	x0, [x0]
  42fbe4:	b	42fbec <udev_rule_apply_token_to_event+0x283c>
  42fbe8:	mov	x0, #0x0                   	// #0
  42fbec:	str	x0, [sp, #2080]
  42fbf0:	str	xzr, [sp, #648]
  42fbf4:	ldr	x0, [sp, #144]
  42fbf8:	str	x0, [sp, #2088]
  42fbfc:	mov	w0, #0x3                   	// #3
  42fc00:	str	w0, [sp, #444]
  42fc04:	ldr	w0, [sp, #168]
  42fc08:	str	w0, [sp, #448]
  42fc0c:	ldr	x0, [sp, #2088]
  42fc10:	cmp	x0, #0x0
  42fc14:	b.eq	42fc50 <udev_rule_apply_token_to_event+0x28a0>  // b.none
  42fc18:	mov	w0, #0x1                   	// #1
  42fc1c:	bl	40be30 <log_get_max_level_realm@plt>
  42fc20:	mov	w1, w0
  42fc24:	ldr	w0, [sp, #444]
  42fc28:	cmp	w0, w1
  42fc2c:	cset	w0, le
  42fc30:	and	w0, w0, #0xff
  42fc34:	and	x0, x0, #0xff
  42fc38:	cmp	x0, #0x0
  42fc3c:	b.eq	42fc50 <udev_rule_apply_token_to_event+0x28a0>  // b.none
  42fc40:	add	x0, sp, #0x288
  42fc44:	mov	x1, x0
  42fc48:	ldr	x0, [sp, #2088]
  42fc4c:	bl	40aba0 <sd_device_get_sysname@plt>
  42fc50:	adrp	x0, 454000 <__func__.10675+0xa0>
  42fc54:	add	x20, x0, #0xbb
  42fc58:	ldr	x0, [sp, #648]
  42fc5c:	cmp	x0, #0x0
  42fc60:	b.eq	42fc70 <udev_rule_apply_token_to_event+0x28c0>  // b.none
  42fc64:	adrp	x0, 454000 <__func__.10675+0xa0>
  42fc68:	add	x19, x0, #0xd8
  42fc6c:	b	42fc74 <udev_rule_apply_token_to_event+0x28c4>
  42fc70:	mov	x19, #0x0                   	// #0
  42fc74:	ldr	x21, [sp, #648]
  42fc78:	ldr	x0, [sp, #2080]
  42fc7c:	bl	41fb4c <strna>
  42fc80:	mov	x3, x0
  42fc84:	ldr	x0, [sp, #2072]
  42fc88:	cmp	x0, #0x0
  42fc8c:	b.eq	42fc9c <udev_rule_apply_token_to_event+0x28ec>  // b.none
  42fc90:	ldr	x0, [sp, #2072]
  42fc94:	ldr	w0, [x0, #8]
  42fc98:	b	42fca0 <udev_rule_apply_token_to_event+0x28f0>
  42fc9c:	mov	w0, #0x0                   	// #0
  42fca0:	ldr	x1, [sp, #632]
  42fca4:	ldr	x2, [sp, #640]
  42fca8:	str	x2, [sp, #40]
  42fcac:	str	x1, [sp, #32]
  42fcb0:	str	w0, [sp, #24]
  42fcb4:	str	x3, [sp, #16]
  42fcb8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42fcbc:	add	x0, x0, #0xd8
  42fcc0:	str	x0, [sp, #8]
  42fcc4:	str	xzr, [sp]
  42fcc8:	mov	x7, #0x0                   	// #0
  42fccc:	mov	x6, x21
  42fcd0:	mov	x5, x19
  42fcd4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42fcd8:	add	x4, x0, #0xa98
  42fcdc:	mov	w3, #0x6e5                 	// #1765
  42fce0:	mov	x2, x20
  42fce4:	ldr	w1, [sp, #448]
  42fce8:	ldr	w0, [sp, #444]
  42fcec:	bl	40b020 <log_object_internal@plt>
  42fcf0:	mov	w19, w0
  42fcf4:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42fcf8:	nop
  42fcfc:	ldr	x0, [sp, #672]
  42fd00:	str	x0, [sp, #664]
  42fd04:	ldr	x0, [sp, #664]
  42fd08:	bl	41fb70 <isempty>
  42fd0c:	and	w0, w0, #0xff
  42fd10:	eor	w0, w0, #0x1
  42fd14:	and	w0, w0, #0xff
  42fd18:	cmp	w0, #0x0
  42fd1c:	b.ne	42f99c <udev_rule_apply_token_to_event+0x25ec>  // b.any
  42fd20:	ldr	x0, [sp, #704]
  42fd24:	ldrsb	w0, [x0, #1]
  42fd28:	cmp	w0, #0x0
  42fd2c:	cset	w0, eq  // eq = none
  42fd30:	and	w0, w0, #0xff
  42fd34:	mov	w19, w0
  42fd38:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42fd3c:	ldr	x0, [sp, #704]
  42fd40:	ldr	x0, [x0, #16]
  42fd44:	sub	w0, w0, #0x1
  42fd48:	str	w0, [sp, #404]
  42fd4c:	ldr	w0, [sp, #404]
  42fd50:	mov	w1, #0x1                   	// #1
  42fd54:	lsl	w0, w1, w0
  42fd58:	str	w0, [sp, #408]
  42fd5c:	ldr	w0, [sp, #404]
  42fd60:	bl	436188 <udev_builtin_run_once>
  42fd64:	and	w0, w0, #0xff
  42fd68:	cmp	w0, #0x0
  42fd6c:	b.eq	42ff3c <udev_rule_apply_token_to_event+0x2b8c>  // b.none
  42fd70:	ldr	x0, [sp, #136]
  42fd74:	ldr	w1, [x0, #96]
  42fd78:	ldr	w0, [sp, #408]
  42fd7c:	and	w0, w1, w0
  42fd80:	cmp	w0, #0x0
  42fd84:	b.eq	42ff24 <udev_rule_apply_token_to_event+0x2b74>  // b.none
  42fd88:	ldr	x0, [sp, #152]
  42fd8c:	str	x0, [sp, #1896]
  42fd90:	ldr	x0, [sp, #1896]
  42fd94:	cmp	x0, #0x0
  42fd98:	b.eq	42fda8 <udev_rule_apply_token_to_event+0x29f8>  // b.none
  42fd9c:	ldr	x0, [sp, #1896]
  42fda0:	ldr	x0, [x0, #32]
  42fda4:	b	42fdac <udev_rule_apply_token_to_event+0x29fc>
  42fda8:	mov	x0, #0x0                   	// #0
  42fdac:	str	x0, [sp, #1904]
  42fdb0:	ldr	x0, [sp, #1904]
  42fdb4:	cmp	x0, #0x0
  42fdb8:	b.eq	42fdc8 <udev_rule_apply_token_to_event+0x2a18>  // b.none
  42fdbc:	ldr	x0, [sp, #1904]
  42fdc0:	ldr	x0, [x0, #8]
  42fdc4:	b	42fdcc <udev_rule_apply_token_to_event+0x2a1c>
  42fdc8:	mov	x0, #0x0                   	// #0
  42fdcc:	str	x0, [sp, #1912]
  42fdd0:	ldr	x0, [sp, #1904]
  42fdd4:	cmp	x0, #0x0
  42fdd8:	b.eq	42fde8 <udev_rule_apply_token_to_event+0x2a38>  // b.none
  42fddc:	ldr	x0, [sp, #1904]
  42fde0:	ldr	x0, [x0]
  42fde4:	b	42fdec <udev_rule_apply_token_to_event+0x2a3c>
  42fde8:	mov	x0, #0x0                   	// #0
  42fdec:	str	x0, [sp, #1920]
  42fdf0:	str	xzr, [sp, #648]
  42fdf4:	ldr	x0, [sp, #144]
  42fdf8:	str	x0, [sp, #1928]
  42fdfc:	mov	w0, #0x7                   	// #7
  42fe00:	str	w0, [sp, #412]
  42fe04:	str	wzr, [sp, #416]
  42fe08:	ldr	x0, [sp, #1928]
  42fe0c:	cmp	x0, #0x0
  42fe10:	b.eq	42fe4c <udev_rule_apply_token_to_event+0x2a9c>  // b.none
  42fe14:	mov	w0, #0x1                   	// #1
  42fe18:	bl	40be30 <log_get_max_level_realm@plt>
  42fe1c:	mov	w1, w0
  42fe20:	ldr	w0, [sp, #412]
  42fe24:	cmp	w0, w1
  42fe28:	cset	w0, le
  42fe2c:	and	w0, w0, #0xff
  42fe30:	and	x0, x0, #0xff
  42fe34:	cmp	x0, #0x0
  42fe38:	b.eq	42fe4c <udev_rule_apply_token_to_event+0x2a9c>  // b.none
  42fe3c:	add	x0, sp, #0x288
  42fe40:	mov	x1, x0
  42fe44:	ldr	x0, [sp, #1928]
  42fe48:	bl	40aba0 <sd_device_get_sysname@plt>
  42fe4c:	adrp	x0, 454000 <__func__.10675+0xa0>
  42fe50:	add	x21, x0, #0xbb
  42fe54:	ldr	x0, [sp, #648]
  42fe58:	cmp	x0, #0x0
  42fe5c:	b.eq	42fe6c <udev_rule_apply_token_to_event+0x2abc>  // b.none
  42fe60:	adrp	x0, 454000 <__func__.10675+0xa0>
  42fe64:	add	x20, x0, #0xd8
  42fe68:	b	42fe70 <udev_rule_apply_token_to_event+0x2ac0>
  42fe6c:	mov	x20, #0x0                   	// #0
  42fe70:	ldr	x22, [sp, #648]
  42fe74:	ldr	x0, [sp, #1920]
  42fe78:	bl	41fb4c <strna>
  42fe7c:	mov	x23, x0
  42fe80:	ldr	x0, [sp, #1912]
  42fe84:	cmp	x0, #0x0
  42fe88:	b.eq	42fe98 <udev_rule_apply_token_to_event+0x2ae8>  // b.none
  42fe8c:	ldr	x0, [sp, #1912]
  42fe90:	ldr	w19, [x0, #8]
  42fe94:	b	42fe9c <udev_rule_apply_token_to_event+0x2aec>
  42fe98:	mov	w19, #0x0                   	// #0
  42fe9c:	ldr	w0, [sp, #404]
  42fea0:	bl	4360e4 <udev_builtin_name>
  42fea4:	str	x0, [sp, #32]
  42fea8:	str	w19, [sp, #24]
  42feac:	str	x23, [sp, #16]
  42feb0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42feb4:	add	x0, x0, #0x130
  42feb8:	str	x0, [sp, #8]
  42febc:	str	xzr, [sp]
  42fec0:	mov	x7, #0x0                   	// #0
  42fec4:	mov	x6, x22
  42fec8:	mov	x5, x20
  42fecc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  42fed0:	add	x4, x0, #0xa98
  42fed4:	mov	w3, #0x6f3                 	// #1779
  42fed8:	mov	x2, x21
  42fedc:	ldr	w1, [sp, #416]
  42fee0:	ldr	w0, [sp, #412]
  42fee4:	bl	40b020 <log_object_internal@plt>
  42fee8:	ldr	x0, [sp, #704]
  42feec:	ldrsb	w0, [x0, #1]
  42fef0:	mov	w2, w0
  42fef4:	ldr	x0, [sp, #136]
  42fef8:	ldr	w1, [x0, #100]
  42fefc:	ldr	w0, [sp, #408]
  42ff00:	and	w0, w1, w0
  42ff04:	cmp	w0, #0x0
  42ff08:	cset	w0, ne  // ne = any
  42ff0c:	and	w0, w0, #0xff
  42ff10:	cmp	w2, w0
  42ff14:	cset	w0, eq  // eq = none
  42ff18:	and	w0, w0, #0xff
  42ff1c:	mov	w19, w0
  42ff20:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  42ff24:	ldr	x0, [sp, #136]
  42ff28:	ldr	w1, [x0, #96]
  42ff2c:	ldr	w0, [sp, #408]
  42ff30:	orr	w1, w1, w0
  42ff34:	ldr	x0, [sp, #136]
  42ff38:	str	w1, [x0, #96]
  42ff3c:	ldr	x0, [sp, #704]
  42ff40:	ldr	x0, [x0, #8]
  42ff44:	add	x1, sp, #0xbd8
  42ff48:	mov	w4, #0x0                   	// #0
  42ff4c:	mov	x3, #0x400                 	// #1024
  42ff50:	mov	x2, x1
  42ff54:	mov	x1, x0
  42ff58:	ldr	x0, [sp, #136]
  42ff5c:	bl	4185d8 <udev_event_apply_format>
  42ff60:	ldr	x0, [sp, #152]
  42ff64:	str	x0, [sp, #1936]
  42ff68:	ldr	x0, [sp, #1936]
  42ff6c:	cmp	x0, #0x0
  42ff70:	b.eq	42ff80 <udev_rule_apply_token_to_event+0x2bd0>  // b.none
  42ff74:	ldr	x0, [sp, #1936]
  42ff78:	ldr	x0, [x0, #32]
  42ff7c:	b	42ff84 <udev_rule_apply_token_to_event+0x2bd4>
  42ff80:	mov	x0, #0x0                   	// #0
  42ff84:	str	x0, [sp, #1944]
  42ff88:	ldr	x0, [sp, #1944]
  42ff8c:	cmp	x0, #0x0
  42ff90:	b.eq	42ffa0 <udev_rule_apply_token_to_event+0x2bf0>  // b.none
  42ff94:	ldr	x0, [sp, #1944]
  42ff98:	ldr	x0, [x0, #8]
  42ff9c:	b	42ffa4 <udev_rule_apply_token_to_event+0x2bf4>
  42ffa0:	mov	x0, #0x0                   	// #0
  42ffa4:	str	x0, [sp, #1952]
  42ffa8:	ldr	x0, [sp, #1944]
  42ffac:	cmp	x0, #0x0
  42ffb0:	b.eq	42ffc0 <udev_rule_apply_token_to_event+0x2c10>  // b.none
  42ffb4:	ldr	x0, [sp, #1944]
  42ffb8:	ldr	x0, [x0]
  42ffbc:	b	42ffc4 <udev_rule_apply_token_to_event+0x2c14>
  42ffc0:	mov	x0, #0x0                   	// #0
  42ffc4:	str	x0, [sp, #1960]
  42ffc8:	str	xzr, [sp, #648]
  42ffcc:	ldr	x0, [sp, #144]
  42ffd0:	str	x0, [sp, #1968]
  42ffd4:	mov	w0, #0x7                   	// #7
  42ffd8:	str	w0, [sp, #420]
  42ffdc:	str	wzr, [sp, #424]
  42ffe0:	ldr	x0, [sp, #1968]
  42ffe4:	cmp	x0, #0x0
  42ffe8:	b.eq	430024 <udev_rule_apply_token_to_event+0x2c74>  // b.none
  42ffec:	mov	w0, #0x1                   	// #1
  42fff0:	bl	40be30 <log_get_max_level_realm@plt>
  42fff4:	mov	w1, w0
  42fff8:	ldr	w0, [sp, #420]
  42fffc:	cmp	w0, w1
  430000:	cset	w0, le
  430004:	and	w0, w0, #0xff
  430008:	and	x0, x0, #0xff
  43000c:	cmp	x0, #0x0
  430010:	b.eq	430024 <udev_rule_apply_token_to_event+0x2c74>  // b.none
  430014:	add	x0, sp, #0x288
  430018:	mov	x1, x0
  43001c:	ldr	x0, [sp, #1968]
  430020:	bl	40aba0 <sd_device_get_sysname@plt>
  430024:	adrp	x0, 454000 <__func__.10675+0xa0>
  430028:	add	x20, x0, #0xbb
  43002c:	ldr	x0, [sp, #648]
  430030:	cmp	x0, #0x0
  430034:	b.eq	430044 <udev_rule_apply_token_to_event+0x2c94>  // b.none
  430038:	adrp	x0, 454000 <__func__.10675+0xa0>
  43003c:	add	x19, x0, #0xd8
  430040:	b	430048 <udev_rule_apply_token_to_event+0x2c98>
  430044:	mov	x19, #0x0                   	// #0
  430048:	ldr	x21, [sp, #648]
  43004c:	ldr	x0, [sp, #1960]
  430050:	bl	41fb4c <strna>
  430054:	mov	x2, x0
  430058:	ldr	x0, [sp, #1952]
  43005c:	cmp	x0, #0x0
  430060:	b.eq	430070 <udev_rule_apply_token_to_event+0x2cc0>  // b.none
  430064:	ldr	x0, [sp, #1952]
  430068:	ldr	w0, [x0, #8]
  43006c:	b	430074 <udev_rule_apply_token_to_event+0x2cc4>
  430070:	mov	w0, #0x0                   	// #0
  430074:	add	x1, sp, #0xbd8
  430078:	str	x1, [sp, #32]
  43007c:	str	w0, [sp, #24]
  430080:	str	x2, [sp, #16]
  430084:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430088:	add	x0, x0, #0x160
  43008c:	str	x0, [sp, #8]
  430090:	str	xzr, [sp]
  430094:	mov	x7, #0x0                   	// #0
  430098:	mov	x6, x21
  43009c:	mov	x5, x19
  4300a0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4300a4:	add	x4, x0, #0xa98
  4300a8:	mov	w3, #0x6fd                 	// #1789
  4300ac:	mov	x2, x20
  4300b0:	ldr	w1, [sp, #424]
  4300b4:	ldr	w0, [sp, #420]
  4300b8:	bl	40b020 <log_object_internal@plt>
  4300bc:	add	x0, sp, #0xbd8
  4300c0:	mov	w3, #0x0                   	// #0
  4300c4:	mov	x2, x0
  4300c8:	ldr	w1, [sp, #404]
  4300cc:	ldr	x0, [sp, #144]
  4300d0:	bl	436324 <udev_builtin_run>
  4300d4:	str	w0, [sp, #168]
  4300d8:	ldr	w0, [sp, #168]
  4300dc:	cmp	w0, #0x0
  4300e0:	b.ge	43025c <udev_rule_apply_token_to_event+0x2eac>  // b.tcont
  4300e4:	ldr	x0, [sp, #152]
  4300e8:	str	x0, [sp, #1976]
  4300ec:	ldr	x0, [sp, #1976]
  4300f0:	cmp	x0, #0x0
  4300f4:	b.eq	430104 <udev_rule_apply_token_to_event+0x2d54>  // b.none
  4300f8:	ldr	x0, [sp, #1976]
  4300fc:	ldr	x0, [x0, #32]
  430100:	b	430108 <udev_rule_apply_token_to_event+0x2d58>
  430104:	mov	x0, #0x0                   	// #0
  430108:	str	x0, [sp, #1984]
  43010c:	ldr	x0, [sp, #1984]
  430110:	cmp	x0, #0x0
  430114:	b.eq	430124 <udev_rule_apply_token_to_event+0x2d74>  // b.none
  430118:	ldr	x0, [sp, #1984]
  43011c:	ldr	x0, [x0, #8]
  430120:	b	430128 <udev_rule_apply_token_to_event+0x2d78>
  430124:	mov	x0, #0x0                   	// #0
  430128:	str	x0, [sp, #1992]
  43012c:	ldr	x0, [sp, #1984]
  430130:	cmp	x0, #0x0
  430134:	b.eq	430144 <udev_rule_apply_token_to_event+0x2d94>  // b.none
  430138:	ldr	x0, [sp, #1984]
  43013c:	ldr	x0, [x0]
  430140:	b	430148 <udev_rule_apply_token_to_event+0x2d98>
  430144:	mov	x0, #0x0                   	// #0
  430148:	str	x0, [sp, #2000]
  43014c:	str	xzr, [sp, #648]
  430150:	ldr	x0, [sp, #144]
  430154:	str	x0, [sp, #2008]
  430158:	mov	w0, #0x7                   	// #7
  43015c:	str	w0, [sp, #428]
  430160:	ldr	w0, [sp, #168]
  430164:	str	w0, [sp, #432]
  430168:	ldr	x0, [sp, #2008]
  43016c:	cmp	x0, #0x0
  430170:	b.eq	4301ac <udev_rule_apply_token_to_event+0x2dfc>  // b.none
  430174:	mov	w0, #0x1                   	// #1
  430178:	bl	40be30 <log_get_max_level_realm@plt>
  43017c:	mov	w1, w0
  430180:	ldr	w0, [sp, #428]
  430184:	cmp	w0, w1
  430188:	cset	w0, le
  43018c:	and	w0, w0, #0xff
  430190:	and	x0, x0, #0xff
  430194:	cmp	x0, #0x0
  430198:	b.eq	4301ac <udev_rule_apply_token_to_event+0x2dfc>  // b.none
  43019c:	add	x0, sp, #0x288
  4301a0:	mov	x1, x0
  4301a4:	ldr	x0, [sp, #2008]
  4301a8:	bl	40aba0 <sd_device_get_sysname@plt>
  4301ac:	adrp	x0, 454000 <__func__.10675+0xa0>
  4301b0:	add	x20, x0, #0xbb
  4301b4:	ldr	x0, [sp, #648]
  4301b8:	cmp	x0, #0x0
  4301bc:	b.eq	4301cc <udev_rule_apply_token_to_event+0x2e1c>  // b.none
  4301c0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4301c4:	add	x19, x0, #0xd8
  4301c8:	b	4301d0 <udev_rule_apply_token_to_event+0x2e20>
  4301cc:	mov	x19, #0x0                   	// #0
  4301d0:	ldr	x21, [sp, #648]
  4301d4:	ldr	x0, [sp, #2000]
  4301d8:	bl	41fb4c <strna>
  4301dc:	mov	x2, x0
  4301e0:	ldr	x0, [sp, #1992]
  4301e4:	cmp	x0, #0x0
  4301e8:	b.eq	4301f8 <udev_rule_apply_token_to_event+0x2e48>  // b.none
  4301ec:	ldr	x0, [sp, #1992]
  4301f0:	ldr	w0, [x0, #8]
  4301f4:	b	4301fc <udev_rule_apply_token_to_event+0x2e4c>
  4301f8:	mov	w0, #0x0                   	// #0
  4301fc:	add	x1, sp, #0xbd8
  430200:	str	x1, [sp, #32]
  430204:	str	w0, [sp, #24]
  430208:	str	x2, [sp, #16]
  43020c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430210:	add	x0, x0, #0x1a0
  430214:	str	x0, [sp, #8]
  430218:	str	xzr, [sp]
  43021c:	mov	x7, #0x0                   	// #0
  430220:	mov	x6, x21
  430224:	mov	x5, x19
  430228:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43022c:	add	x4, x0, #0xa98
  430230:	mov	w3, #0x702                 	// #1794
  430234:	mov	x2, x20
  430238:	ldr	w1, [sp, #432]
  43023c:	ldr	w0, [sp, #428]
  430240:	bl	40b020 <log_object_internal@plt>
  430244:	ldr	x0, [sp, #136]
  430248:	ldr	w1, [x0, #100]
  43024c:	ldr	w0, [sp, #408]
  430250:	orr	w1, w1, w0
  430254:	ldr	x0, [sp, #136]
  430258:	str	w1, [x0, #100]
  43025c:	ldr	x0, [sp, #704]
  430260:	ldrsb	w0, [x0, #1]
  430264:	mov	w1, w0
  430268:	ldr	w0, [sp, #168]
  43026c:	lsr	w0, w0, #31
  430270:	and	w0, w0, #0xff
  430274:	cmp	w1, w0
  430278:	cset	w0, eq  // eq = none
  43027c:	and	w0, w0, #0xff
  430280:	mov	w19, w0
  430284:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  430288:	ldr	x0, [sp, #136]
  43028c:	ldr	x0, [x0, #16]
  430290:	cmp	x0, #0x0
  430294:	b.ne	4302b4 <udev_rule_apply_token_to_event+0x2f04>  // b.any
  430298:	ldr	x0, [sp, #704]
  43029c:	ldrsb	w0, [x0, #1]
  4302a0:	cmp	w0, #0x1
  4302a4:	cset	w0, eq  // eq = none
  4302a8:	and	w0, w0, #0xff
  4302ac:	mov	w19, w0
  4302b0:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  4302b4:	ldr	x0, [sp, #136]
  4302b8:	ldr	x3, [x0, #16]
  4302bc:	ldr	x0, [sp, #704]
  4302c0:	ldr	x0, [x0, #8]
  4302c4:	add	x1, sp, #0x278
  4302c8:	mov	x2, x1
  4302cc:	mov	x1, x0
  4302d0:	mov	x0, x3
  4302d4:	bl	40a310 <sd_device_get_property_value@plt>
  4302d8:	str	w0, [sp, #168]
  4302dc:	ldr	w0, [sp, #168]
  4302e0:	cmn	w0, #0x2
  4302e4:	b.ne	430304 <udev_rule_apply_token_to_event+0x2f54>  // b.any
  4302e8:	ldr	x0, [sp, #704]
  4302ec:	ldrsb	w0, [x0, #1]
  4302f0:	cmp	w0, #0x1
  4302f4:	cset	w0, eq  // eq = none
  4302f8:	and	w0, w0, #0xff
  4302fc:	mov	w19, w0
  430300:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  430304:	ldr	w0, [sp, #168]
  430308:	cmp	w0, #0x0
  43030c:	b.ge	43047c <udev_rule_apply_token_to_event+0x30cc>  // b.tcont
  430310:	ldr	x0, [sp, #152]
  430314:	str	x0, [sp, #1856]
  430318:	ldr	x0, [sp, #1856]
  43031c:	cmp	x0, #0x0
  430320:	b.eq	430330 <udev_rule_apply_token_to_event+0x2f80>  // b.none
  430324:	ldr	x0, [sp, #1856]
  430328:	ldr	x0, [x0, #32]
  43032c:	b	430334 <udev_rule_apply_token_to_event+0x2f84>
  430330:	mov	x0, #0x0                   	// #0
  430334:	str	x0, [sp, #1864]
  430338:	ldr	x0, [sp, #1864]
  43033c:	cmp	x0, #0x0
  430340:	b.eq	430350 <udev_rule_apply_token_to_event+0x2fa0>  // b.none
  430344:	ldr	x0, [sp, #1864]
  430348:	ldr	x0, [x0, #8]
  43034c:	b	430354 <udev_rule_apply_token_to_event+0x2fa4>
  430350:	mov	x0, #0x0                   	// #0
  430354:	str	x0, [sp, #1872]
  430358:	ldr	x0, [sp, #1864]
  43035c:	cmp	x0, #0x0
  430360:	b.eq	430370 <udev_rule_apply_token_to_event+0x2fc0>  // b.none
  430364:	ldr	x0, [sp, #1864]
  430368:	ldr	x0, [x0]
  43036c:	b	430374 <udev_rule_apply_token_to_event+0x2fc4>
  430370:	mov	x0, #0x0                   	// #0
  430374:	str	x0, [sp, #1880]
  430378:	str	xzr, [sp, #648]
  43037c:	ldr	x0, [sp, #144]
  430380:	str	x0, [sp, #1888]
  430384:	mov	w0, #0x3                   	// #3
  430388:	str	w0, [sp, #396]
  43038c:	ldr	w0, [sp, #168]
  430390:	str	w0, [sp, #400]
  430394:	ldr	x0, [sp, #1888]
  430398:	cmp	x0, #0x0
  43039c:	b.eq	4303d8 <udev_rule_apply_token_to_event+0x3028>  // b.none
  4303a0:	mov	w0, #0x1                   	// #1
  4303a4:	bl	40be30 <log_get_max_level_realm@plt>
  4303a8:	mov	w1, w0
  4303ac:	ldr	w0, [sp, #396]
  4303b0:	cmp	w0, w1
  4303b4:	cset	w0, le
  4303b8:	and	w0, w0, #0xff
  4303bc:	and	x0, x0, #0xff
  4303c0:	cmp	x0, #0x0
  4303c4:	b.eq	4303d8 <udev_rule_apply_token_to_event+0x3028>  // b.none
  4303c8:	add	x0, sp, #0x288
  4303cc:	mov	x1, x0
  4303d0:	ldr	x0, [sp, #1888]
  4303d4:	bl	40aba0 <sd_device_get_sysname@plt>
  4303d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4303dc:	add	x20, x0, #0xbb
  4303e0:	ldr	x0, [sp, #648]
  4303e4:	cmp	x0, #0x0
  4303e8:	b.eq	4303f8 <udev_rule_apply_token_to_event+0x3048>  // b.none
  4303ec:	adrp	x0, 454000 <__func__.10675+0xa0>
  4303f0:	add	x19, x0, #0xd8
  4303f4:	b	4303fc <udev_rule_apply_token_to_event+0x304c>
  4303f8:	mov	x19, #0x0                   	// #0
  4303fc:	ldr	x21, [sp, #648]
  430400:	ldr	x0, [sp, #1880]
  430404:	bl	41fb4c <strna>
  430408:	mov	x2, x0
  43040c:	ldr	x0, [sp, #1872]
  430410:	cmp	x0, #0x0
  430414:	b.eq	430424 <udev_rule_apply_token_to_event+0x3074>  // b.none
  430418:	ldr	x0, [sp, #1872]
  43041c:	ldr	w0, [x0, #8]
  430420:	b	430428 <udev_rule_apply_token_to_event+0x3078>
  430424:	mov	w0, #0x0                   	// #0
  430428:	ldr	x1, [sp, #704]
  43042c:	ldr	x1, [x1, #8]
  430430:	str	x1, [sp, #32]
  430434:	str	w0, [sp, #24]
  430438:	str	x2, [sp, #16]
  43043c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430440:	add	x0, x0, #0x1c8
  430444:	str	x0, [sp, #8]
  430448:	str	xzr, [sp]
  43044c:	mov	x7, #0x0                   	// #0
  430450:	mov	x6, x21
  430454:	mov	x5, x19
  430458:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43045c:	add	x4, x0, #0xa98
  430460:	mov	w3, #0x70e                 	// #1806
  430464:	mov	x2, x20
  430468:	ldr	w1, [sp, #400]
  43046c:	ldr	w0, [sp, #396]
  430470:	bl	40b020 <log_object_internal@plt>
  430474:	mov	w19, w0
  430478:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  43047c:	ldr	x0, [sp, #704]
  430480:	ldr	x0, [x0, #8]
  430484:	ldr	x1, [sp, #632]
  430488:	mov	x2, x1
  43048c:	mov	x1, x0
  430490:	ldr	x0, [sp, #144]
  430494:	bl	40bab0 <device_add_property@plt>
  430498:	str	w0, [sp, #168]
  43049c:	ldr	w0, [sp, #168]
  4304a0:	cmp	w0, #0x0
  4304a4:	b.ge	43061c <udev_rule_apply_token_to_event+0x326c>  // b.tcont
  4304a8:	ldr	x0, [sp, #152]
  4304ac:	str	x0, [sp, #1816]
  4304b0:	ldr	x0, [sp, #1816]
  4304b4:	cmp	x0, #0x0
  4304b8:	b.eq	4304c8 <udev_rule_apply_token_to_event+0x3118>  // b.none
  4304bc:	ldr	x0, [sp, #1816]
  4304c0:	ldr	x0, [x0, #32]
  4304c4:	b	4304cc <udev_rule_apply_token_to_event+0x311c>
  4304c8:	mov	x0, #0x0                   	// #0
  4304cc:	str	x0, [sp, #1824]
  4304d0:	ldr	x0, [sp, #1824]
  4304d4:	cmp	x0, #0x0
  4304d8:	b.eq	4304e8 <udev_rule_apply_token_to_event+0x3138>  // b.none
  4304dc:	ldr	x0, [sp, #1824]
  4304e0:	ldr	x0, [x0, #8]
  4304e4:	b	4304ec <udev_rule_apply_token_to_event+0x313c>
  4304e8:	mov	x0, #0x0                   	// #0
  4304ec:	str	x0, [sp, #1832]
  4304f0:	ldr	x0, [sp, #1824]
  4304f4:	cmp	x0, #0x0
  4304f8:	b.eq	430508 <udev_rule_apply_token_to_event+0x3158>  // b.none
  4304fc:	ldr	x0, [sp, #1824]
  430500:	ldr	x0, [x0]
  430504:	b	43050c <udev_rule_apply_token_to_event+0x315c>
  430508:	mov	x0, #0x0                   	// #0
  43050c:	str	x0, [sp, #1840]
  430510:	str	xzr, [sp, #648]
  430514:	ldr	x0, [sp, #144]
  430518:	str	x0, [sp, #1848]
  43051c:	mov	w0, #0x3                   	// #3
  430520:	str	w0, [sp, #388]
  430524:	ldr	w0, [sp, #168]
  430528:	str	w0, [sp, #392]
  43052c:	ldr	x0, [sp, #1848]
  430530:	cmp	x0, #0x0
  430534:	b.eq	430570 <udev_rule_apply_token_to_event+0x31c0>  // b.none
  430538:	mov	w0, #0x1                   	// #1
  43053c:	bl	40be30 <log_get_max_level_realm@plt>
  430540:	mov	w1, w0
  430544:	ldr	w0, [sp, #388]
  430548:	cmp	w0, w1
  43054c:	cset	w0, le
  430550:	and	w0, w0, #0xff
  430554:	and	x0, x0, #0xff
  430558:	cmp	x0, #0x0
  43055c:	b.eq	430570 <udev_rule_apply_token_to_event+0x31c0>  // b.none
  430560:	add	x0, sp, #0x288
  430564:	mov	x1, x0
  430568:	ldr	x0, [sp, #1848]
  43056c:	bl	40aba0 <sd_device_get_sysname@plt>
  430570:	adrp	x0, 454000 <__func__.10675+0xa0>
  430574:	add	x20, x0, #0xbb
  430578:	ldr	x0, [sp, #648]
  43057c:	cmp	x0, #0x0
  430580:	b.eq	430590 <udev_rule_apply_token_to_event+0x31e0>  // b.none
  430584:	adrp	x0, 454000 <__func__.10675+0xa0>
  430588:	add	x19, x0, #0xd8
  43058c:	b	430594 <udev_rule_apply_token_to_event+0x31e4>
  430590:	mov	x19, #0x0                   	// #0
  430594:	ldr	x21, [sp, #648]
  430598:	ldr	x0, [sp, #1840]
  43059c:	bl	41fb4c <strna>
  4305a0:	mov	x3, x0
  4305a4:	ldr	x0, [sp, #1832]
  4305a8:	cmp	x0, #0x0
  4305ac:	b.eq	4305bc <udev_rule_apply_token_to_event+0x320c>  // b.none
  4305b0:	ldr	x0, [sp, #1832]
  4305b4:	ldr	w0, [x0, #8]
  4305b8:	b	4305c0 <udev_rule_apply_token_to_event+0x3210>
  4305bc:	mov	w0, #0x0                   	// #0
  4305c0:	ldr	x1, [sp, #704]
  4305c4:	ldr	x1, [x1, #8]
  4305c8:	ldr	x2, [sp, #632]
  4305cc:	str	x2, [sp, #40]
  4305d0:	str	x1, [sp, #32]
  4305d4:	str	w0, [sp, #24]
  4305d8:	str	x3, [sp, #16]
  4305dc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4305e0:	add	x0, x0, #0x200
  4305e4:	str	x0, [sp, #8]
  4305e8:	str	xzr, [sp]
  4305ec:	mov	x7, #0x0                   	// #0
  4305f0:	mov	x6, x21
  4305f4:	mov	x5, x19
  4305f8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4305fc:	add	x4, x0, #0xa98
  430600:	mov	w3, #0x714                 	// #1812
  430604:	mov	x2, x20
  430608:	ldr	w1, [sp, #392]
  43060c:	ldr	w0, [sp, #388]
  430610:	bl	40b020 <log_object_internal@plt>
  430614:	mov	w19, w0
  430618:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  43061c:	ldr	x0, [sp, #704]
  430620:	ldrsb	w0, [x0, #1]
  430624:	cmp	w0, #0x0
  430628:	cset	w0, eq  // eq = none
  43062c:	and	w0, w0, #0xff
  430630:	mov	w19, w0
  430634:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  430638:	str	xzr, [sp, #640]
  43063c:	ldr	x0, [sp, #704]
  430640:	ldr	x0, [x0, #8]
  430644:	add	x1, sp, #0x280
  430648:	mov	x2, x1
  43064c:	mov	w1, #0x2                   	// #2
  430650:	bl	40b440 <proc_cmdline_get_key@plt>
  430654:	str	w0, [sp, #168]
  430658:	ldr	w0, [sp, #168]
  43065c:	cmp	w0, #0x0
  430660:	b.ge	4307d0 <udev_rule_apply_token_to_event+0x3420>  // b.tcont
  430664:	ldr	x0, [sp, #152]
  430668:	str	x0, [sp, #1776]
  43066c:	ldr	x0, [sp, #1776]
  430670:	cmp	x0, #0x0
  430674:	b.eq	430684 <udev_rule_apply_token_to_event+0x32d4>  // b.none
  430678:	ldr	x0, [sp, #1776]
  43067c:	ldr	x0, [x0, #32]
  430680:	b	430688 <udev_rule_apply_token_to_event+0x32d8>
  430684:	mov	x0, #0x0                   	// #0
  430688:	str	x0, [sp, #1784]
  43068c:	ldr	x0, [sp, #1784]
  430690:	cmp	x0, #0x0
  430694:	b.eq	4306a4 <udev_rule_apply_token_to_event+0x32f4>  // b.none
  430698:	ldr	x0, [sp, #1784]
  43069c:	ldr	x0, [x0, #8]
  4306a0:	b	4306a8 <udev_rule_apply_token_to_event+0x32f8>
  4306a4:	mov	x0, #0x0                   	// #0
  4306a8:	str	x0, [sp, #1792]
  4306ac:	ldr	x0, [sp, #1784]
  4306b0:	cmp	x0, #0x0
  4306b4:	b.eq	4306c4 <udev_rule_apply_token_to_event+0x3314>  // b.none
  4306b8:	ldr	x0, [sp, #1784]
  4306bc:	ldr	x0, [x0]
  4306c0:	b	4306c8 <udev_rule_apply_token_to_event+0x3318>
  4306c4:	mov	x0, #0x0                   	// #0
  4306c8:	str	x0, [sp, #1800]
  4306cc:	str	xzr, [sp, #648]
  4306d0:	ldr	x0, [sp, #144]
  4306d4:	str	x0, [sp, #1808]
  4306d8:	mov	w0, #0x3                   	// #3
  4306dc:	str	w0, [sp, #380]
  4306e0:	ldr	w0, [sp, #168]
  4306e4:	str	w0, [sp, #384]
  4306e8:	ldr	x0, [sp, #1808]
  4306ec:	cmp	x0, #0x0
  4306f0:	b.eq	43072c <udev_rule_apply_token_to_event+0x337c>  // b.none
  4306f4:	mov	w0, #0x1                   	// #1
  4306f8:	bl	40be30 <log_get_max_level_realm@plt>
  4306fc:	mov	w1, w0
  430700:	ldr	w0, [sp, #380]
  430704:	cmp	w0, w1
  430708:	cset	w0, le
  43070c:	and	w0, w0, #0xff
  430710:	and	x0, x0, #0xff
  430714:	cmp	x0, #0x0
  430718:	b.eq	43072c <udev_rule_apply_token_to_event+0x337c>  // b.none
  43071c:	add	x0, sp, #0x288
  430720:	mov	x1, x0
  430724:	ldr	x0, [sp, #1808]
  430728:	bl	40aba0 <sd_device_get_sysname@plt>
  43072c:	adrp	x0, 454000 <__func__.10675+0xa0>
  430730:	add	x20, x0, #0xbb
  430734:	ldr	x0, [sp, #648]
  430738:	cmp	x0, #0x0
  43073c:	b.eq	43074c <udev_rule_apply_token_to_event+0x339c>  // b.none
  430740:	adrp	x0, 454000 <__func__.10675+0xa0>
  430744:	add	x19, x0, #0xd8
  430748:	b	430750 <udev_rule_apply_token_to_event+0x33a0>
  43074c:	mov	x19, #0x0                   	// #0
  430750:	ldr	x21, [sp, #648]
  430754:	ldr	x0, [sp, #1800]
  430758:	bl	41fb4c <strna>
  43075c:	mov	x2, x0
  430760:	ldr	x0, [sp, #1792]
  430764:	cmp	x0, #0x0
  430768:	b.eq	430778 <udev_rule_apply_token_to_event+0x33c8>  // b.none
  43076c:	ldr	x0, [sp, #1792]
  430770:	ldr	w0, [x0, #8]
  430774:	b	43077c <udev_rule_apply_token_to_event+0x33cc>
  430778:	mov	w0, #0x0                   	// #0
  43077c:	ldr	x1, [sp, #704]
  430780:	ldr	x1, [x1, #8]
  430784:	str	x1, [sp, #32]
  430788:	str	w0, [sp, #24]
  43078c:	str	x2, [sp, #16]
  430790:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430794:	add	x0, x0, #0x230
  430798:	str	x0, [sp, #8]
  43079c:	str	xzr, [sp]
  4307a0:	mov	x7, #0x0                   	// #0
  4307a4:	mov	x6, x21
  4307a8:	mov	x5, x19
  4307ac:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4307b0:	add	x4, x0, #0xa98
  4307b4:	mov	w3, #0x71d                 	// #1821
  4307b8:	mov	x2, x20
  4307bc:	ldr	w1, [sp, #384]
  4307c0:	ldr	w0, [sp, #380]
  4307c4:	bl	40b020 <log_object_internal@plt>
  4307c8:	mov	w19, w0
  4307cc:	b	4309cc <udev_rule_apply_token_to_event+0x361c>
  4307d0:	ldr	w0, [sp, #168]
  4307d4:	cmp	w0, #0x0
  4307d8:	b.ne	4307f8 <udev_rule_apply_token_to_event+0x3448>  // b.any
  4307dc:	ldr	x0, [sp, #704]
  4307e0:	ldrsb	w0, [x0, #1]
  4307e4:	cmp	w0, #0x1
  4307e8:	cset	w0, eq  // eq = none
  4307ec:	and	w0, w0, #0xff
  4307f0:	mov	w19, w0
  4307f4:	b	4309cc <udev_rule_apply_token_to_event+0x361c>
  4307f8:	ldr	x0, [sp, #704]
  4307fc:	ldr	x1, [x0, #8]
  430800:	ldr	x0, [sp, #640]
  430804:	cmp	x0, #0x0
  430808:	b.ne	430814 <udev_rule_apply_token_to_event+0x3464>  // b.any
  43080c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430810:	add	x0, x0, #0x268
  430814:	mov	x2, x0
  430818:	ldr	x0, [sp, #144]
  43081c:	bl	40bab0 <device_add_property@plt>
  430820:	str	w0, [sp, #168]
  430824:	ldr	w0, [sp, #168]
  430828:	cmp	w0, #0x0
  43082c:	b.ge	4309b4 <udev_rule_apply_token_to_event+0x3604>  // b.tcont
  430830:	ldr	x0, [sp, #152]
  430834:	str	x0, [sp, #1736]
  430838:	ldr	x0, [sp, #1736]
  43083c:	cmp	x0, #0x0
  430840:	b.eq	430850 <udev_rule_apply_token_to_event+0x34a0>  // b.none
  430844:	ldr	x0, [sp, #1736]
  430848:	ldr	x0, [x0, #32]
  43084c:	b	430854 <udev_rule_apply_token_to_event+0x34a4>
  430850:	mov	x0, #0x0                   	// #0
  430854:	str	x0, [sp, #1744]
  430858:	ldr	x0, [sp, #1744]
  43085c:	cmp	x0, #0x0
  430860:	b.eq	430870 <udev_rule_apply_token_to_event+0x34c0>  // b.none
  430864:	ldr	x0, [sp, #1744]
  430868:	ldr	x0, [x0, #8]
  43086c:	b	430874 <udev_rule_apply_token_to_event+0x34c4>
  430870:	mov	x0, #0x0                   	// #0
  430874:	str	x0, [sp, #1752]
  430878:	ldr	x0, [sp, #1744]
  43087c:	cmp	x0, #0x0
  430880:	b.eq	430890 <udev_rule_apply_token_to_event+0x34e0>  // b.none
  430884:	ldr	x0, [sp, #1744]
  430888:	ldr	x0, [x0]
  43088c:	b	430894 <udev_rule_apply_token_to_event+0x34e4>
  430890:	mov	x0, #0x0                   	// #0
  430894:	str	x0, [sp, #1760]
  430898:	str	xzr, [sp, #648]
  43089c:	ldr	x0, [sp, #144]
  4308a0:	str	x0, [sp, #1768]
  4308a4:	mov	w0, #0x3                   	// #3
  4308a8:	str	w0, [sp, #372]
  4308ac:	ldr	w0, [sp, #168]
  4308b0:	str	w0, [sp, #376]
  4308b4:	ldr	x0, [sp, #1768]
  4308b8:	cmp	x0, #0x0
  4308bc:	b.eq	4308f8 <udev_rule_apply_token_to_event+0x3548>  // b.none
  4308c0:	mov	w0, #0x1                   	// #1
  4308c4:	bl	40be30 <log_get_max_level_realm@plt>
  4308c8:	mov	w1, w0
  4308cc:	ldr	w0, [sp, #372]
  4308d0:	cmp	w0, w1
  4308d4:	cset	w0, le
  4308d8:	and	w0, w0, #0xff
  4308dc:	and	x0, x0, #0xff
  4308e0:	cmp	x0, #0x0
  4308e4:	b.eq	4308f8 <udev_rule_apply_token_to_event+0x3548>  // b.none
  4308e8:	add	x0, sp, #0x288
  4308ec:	mov	x1, x0
  4308f0:	ldr	x0, [sp, #1768]
  4308f4:	bl	40aba0 <sd_device_get_sysname@plt>
  4308f8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4308fc:	add	x20, x0, #0xbb
  430900:	ldr	x0, [sp, #648]
  430904:	cmp	x0, #0x0
  430908:	b.eq	430918 <udev_rule_apply_token_to_event+0x3568>  // b.none
  43090c:	adrp	x0, 454000 <__func__.10675+0xa0>
  430910:	add	x19, x0, #0xd8
  430914:	b	43091c <udev_rule_apply_token_to_event+0x356c>
  430918:	mov	x19, #0x0                   	// #0
  43091c:	ldr	x21, [sp, #648]
  430920:	ldr	x0, [sp, #1760]
  430924:	bl	41fb4c <strna>
  430928:	mov	x3, x0
  43092c:	ldr	x0, [sp, #1752]
  430930:	cmp	x0, #0x0
  430934:	b.eq	430944 <udev_rule_apply_token_to_event+0x3594>  // b.none
  430938:	ldr	x0, [sp, #1752]
  43093c:	ldr	w1, [x0, #8]
  430940:	b	430948 <udev_rule_apply_token_to_event+0x3598>
  430944:	mov	w1, #0x0                   	// #0
  430948:	ldr	x0, [sp, #704]
  43094c:	ldr	x2, [x0, #8]
  430950:	ldr	x0, [sp, #640]
  430954:	cmp	x0, #0x0
  430958:	b.ne	430964 <udev_rule_apply_token_to_event+0x35b4>  // b.any
  43095c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430960:	add	x0, x0, #0x268
  430964:	str	x0, [sp, #40]
  430968:	str	x2, [sp, #32]
  43096c:	str	w1, [sp, #24]
  430970:	str	x3, [sp, #16]
  430974:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430978:	add	x0, x0, #0x200
  43097c:	str	x0, [sp, #8]
  430980:	str	xzr, [sp]
  430984:	mov	x7, #0x0                   	// #0
  430988:	mov	x6, x21
  43098c:	mov	x5, x19
  430990:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430994:	add	x4, x0, #0xa98
  430998:	mov	w3, #0x725                 	// #1829
  43099c:	mov	x2, x20
  4309a0:	ldr	w1, [sp, #376]
  4309a4:	ldr	w0, [sp, #372]
  4309a8:	bl	40b020 <log_object_internal@plt>
  4309ac:	mov	w19, w0
  4309b0:	b	4309cc <udev_rule_apply_token_to_event+0x361c>
  4309b4:	ldr	x0, [sp, #704]
  4309b8:	ldrsb	w0, [x0, #1]
  4309bc:	cmp	w0, #0x0
  4309c0:	cset	w0, eq  // eq = none
  4309c4:	and	w0, w0, #0xff
  4309c8:	mov	w19, w0
  4309cc:	add	x0, sp, #0x280
  4309d0:	bl	41fa04 <freep>
  4309d4:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  4309d8:	ldr	x0, [sp, #704]
  4309dc:	ldr	x0, [x0, #8]
  4309e0:	add	x1, sp, #0xbd8
  4309e4:	mov	w4, #0x0                   	// #0
  4309e8:	mov	x3, #0x400                 	// #1024
  4309ec:	mov	x2, x1
  4309f0:	mov	x1, x0
  4309f4:	ldr	x0, [sp, #136]
  4309f8:	bl	4185d8 <udev_event_apply_format>
  4309fc:	add	x0, sp, #0xbd8
  430a00:	mov	x1, x0
  430a04:	ldr	x0, [sp, #144]
  430a08:	bl	42cff4 <import_parent_into_properties>
  430a0c:	str	w0, [sp, #168]
  430a10:	ldr	w0, [sp, #168]
  430a14:	cmp	w0, #0x0
  430a18:	b.ge	430b84 <udev_rule_apply_token_to_event+0x37d4>  // b.tcont
  430a1c:	ldr	x0, [sp, #152]
  430a20:	str	x0, [sp, #1696]
  430a24:	ldr	x0, [sp, #1696]
  430a28:	cmp	x0, #0x0
  430a2c:	b.eq	430a3c <udev_rule_apply_token_to_event+0x368c>  // b.none
  430a30:	ldr	x0, [sp, #1696]
  430a34:	ldr	x0, [x0, #32]
  430a38:	b	430a40 <udev_rule_apply_token_to_event+0x3690>
  430a3c:	mov	x0, #0x0                   	// #0
  430a40:	str	x0, [sp, #1704]
  430a44:	ldr	x0, [sp, #1704]
  430a48:	cmp	x0, #0x0
  430a4c:	b.eq	430a5c <udev_rule_apply_token_to_event+0x36ac>  // b.none
  430a50:	ldr	x0, [sp, #1704]
  430a54:	ldr	x0, [x0, #8]
  430a58:	b	430a60 <udev_rule_apply_token_to_event+0x36b0>
  430a5c:	mov	x0, #0x0                   	// #0
  430a60:	str	x0, [sp, #1712]
  430a64:	ldr	x0, [sp, #1704]
  430a68:	cmp	x0, #0x0
  430a6c:	b.eq	430a7c <udev_rule_apply_token_to_event+0x36cc>  // b.none
  430a70:	ldr	x0, [sp, #1704]
  430a74:	ldr	x0, [x0]
  430a78:	b	430a80 <udev_rule_apply_token_to_event+0x36d0>
  430a7c:	mov	x0, #0x0                   	// #0
  430a80:	str	x0, [sp, #1720]
  430a84:	str	xzr, [sp, #648]
  430a88:	ldr	x0, [sp, #144]
  430a8c:	str	x0, [sp, #1728]
  430a90:	mov	w0, #0x3                   	// #3
  430a94:	str	w0, [sp, #364]
  430a98:	ldr	w0, [sp, #168]
  430a9c:	str	w0, [sp, #368]
  430aa0:	ldr	x0, [sp, #1728]
  430aa4:	cmp	x0, #0x0
  430aa8:	b.eq	430ae4 <udev_rule_apply_token_to_event+0x3734>  // b.none
  430aac:	mov	w0, #0x1                   	// #1
  430ab0:	bl	40be30 <log_get_max_level_realm@plt>
  430ab4:	mov	w1, w0
  430ab8:	ldr	w0, [sp, #364]
  430abc:	cmp	w0, w1
  430ac0:	cset	w0, le
  430ac4:	and	w0, w0, #0xff
  430ac8:	and	x0, x0, #0xff
  430acc:	cmp	x0, #0x0
  430ad0:	b.eq	430ae4 <udev_rule_apply_token_to_event+0x3734>  // b.none
  430ad4:	add	x0, sp, #0x288
  430ad8:	mov	x1, x0
  430adc:	ldr	x0, [sp, #1728]
  430ae0:	bl	40aba0 <sd_device_get_sysname@plt>
  430ae4:	adrp	x0, 454000 <__func__.10675+0xa0>
  430ae8:	add	x20, x0, #0xbb
  430aec:	ldr	x0, [sp, #648]
  430af0:	cmp	x0, #0x0
  430af4:	b.eq	430b04 <udev_rule_apply_token_to_event+0x3754>  // b.none
  430af8:	adrp	x0, 454000 <__func__.10675+0xa0>
  430afc:	add	x19, x0, #0xd8
  430b00:	b	430b08 <udev_rule_apply_token_to_event+0x3758>
  430b04:	mov	x19, #0x0                   	// #0
  430b08:	ldr	x21, [sp, #648]
  430b0c:	ldr	x0, [sp, #1720]
  430b10:	bl	41fb4c <strna>
  430b14:	mov	x2, x0
  430b18:	ldr	x0, [sp, #1712]
  430b1c:	cmp	x0, #0x0
  430b20:	b.eq	430b30 <udev_rule_apply_token_to_event+0x3780>  // b.none
  430b24:	ldr	x0, [sp, #1712]
  430b28:	ldr	w0, [x0, #8]
  430b2c:	b	430b34 <udev_rule_apply_token_to_event+0x3784>
  430b30:	mov	w0, #0x0                   	// #0
  430b34:	add	x1, sp, #0xbd8
  430b38:	str	x1, [sp, #32]
  430b3c:	str	w0, [sp, #24]
  430b40:	str	x2, [sp, #16]
  430b44:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430b48:	add	x0, x0, #0x270
  430b4c:	str	x0, [sp, #8]
  430b50:	str	xzr, [sp]
  430b54:	mov	x7, #0x0                   	// #0
  430b58:	mov	x6, x21
  430b5c:	mov	x5, x19
  430b60:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430b64:	add	x4, x0, #0xa98
  430b68:	mov	w3, #0x72d                 	// #1837
  430b6c:	mov	x2, x20
  430b70:	ldr	w1, [sp, #368]
  430b74:	ldr	w0, [sp, #364]
  430b78:	bl	40b020 <log_object_internal@plt>
  430b7c:	mov	w19, w0
  430b80:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  430b84:	ldr	x0, [sp, #704]
  430b88:	ldrsb	w0, [x0, #1]
  430b8c:	mov	w1, w0
  430b90:	ldr	w0, [sp, #168]
  430b94:	cmp	w0, #0x0
  430b98:	cset	w0, le
  430b9c:	and	w0, w0, #0xff
  430ba0:	cmp	w1, w0
  430ba4:	cset	w0, eq  // eq = none
  430ba8:	and	w0, w0, #0xff
  430bac:	mov	w19, w0
  430bb0:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  430bb4:	ldr	x0, [sp, #136]
  430bb8:	ldr	x0, [x0, #32]
  430bbc:	mov	x1, x0
  430bc0:	ldr	x0, [sp, #704]
  430bc4:	bl	42c79c <token_match_string>
  430bc8:	and	w0, w0, #0xff
  430bcc:	mov	w19, w0
  430bd0:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  430bd4:	ldr	x0, [sp, #136]
  430bd8:	mov	w1, #0x1                   	// #1
  430bdc:	strb	w1, [x0, #104]
  430be0:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  430be4:	ldr	x0, [sp, #136]
  430be8:	mov	w1, #0x2                   	// #2
  430bec:	strb	w1, [x0, #104]
  430bf0:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  430bf4:	ldr	x0, [sp, #144]
  430bf8:	bl	40b930 <device_set_db_persist@plt>
  430bfc:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  430c00:	ldr	x0, [sp, #136]
  430c04:	ldrb	w0, [x0, #105]
  430c08:	and	w0, w0, #0x2
  430c0c:	and	w0, w0, #0xff
  430c10:	cmp	w0, #0x0
  430c14:	b.ne	433ab8 <udev_rule_apply_token_to_event+0x6708>  // b.any
  430c18:	ldr	x0, [sp, #704]
  430c1c:	ldrsb	w0, [x0, #1]
  430c20:	cmp	w0, #0x5
  430c24:	b.ne	430c38 <udev_rule_apply_token_to_event+0x3888>  // b.any
  430c28:	ldr	x0, [sp, #136]
  430c2c:	ldrb	w1, [x0, #105]
  430c30:	orr	w1, w1, #0x2
  430c34:	strb	w1, [x0, #105]
  430c38:	ldr	x0, [sp, #704]
  430c3c:	ldr	x0, [x0, #16]
  430c40:	cmp	x0, #0x0
  430c44:	cset	w0, ne  // ne = any
  430c48:	and	w2, w0, #0xff
  430c4c:	ldr	x1, [sp, #136]
  430c50:	ldrb	w0, [x1, #105]
  430c54:	bfxil	w0, w2, #0, #1
  430c58:	strb	w0, [x1, #105]
  430c5c:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  430c60:	ldr	x0, [sp, #704]
  430c64:	ldr	x0, [x0, #16]
  430c68:	mov	w1, w0
  430c6c:	ldr	x0, [sp, #144]
  430c70:	bl	40b8c0 <device_set_devlink_priority@plt>
  430c74:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  430c78:	add	x0, sp, #0xfd8
  430c7c:	str	x0, [sp, #640]
  430c80:	ldr	x0, [sp, #136]
  430c84:	ldrb	w0, [x0, #105]
  430c88:	and	w0, w0, #0x8
  430c8c:	and	w0, w0, #0xff
  430c90:	cmp	w0, #0x0
  430c94:	b.ne	433ac0 <udev_rule_apply_token_to_event+0x6710>  // b.any
  430c98:	ldr	x0, [sp, #704]
  430c9c:	ldrsb	w0, [x0, #1]
  430ca0:	cmp	w0, #0x5
  430ca4:	b.ne	430cb8 <udev_rule_apply_token_to_event+0x3908>  // b.any
  430ca8:	ldr	x0, [sp, #136]
  430cac:	ldrb	w1, [x0, #105]
  430cb0:	orr	w1, w1, #0x8
  430cb4:	strb	w1, [x0, #105]
  430cb8:	ldr	x0, [sp, #704]
  430cbc:	ldr	x0, [x0, #8]
  430cc0:	add	x1, sp, #0xfd8
  430cc4:	mov	w4, #0x0                   	// #0
  430cc8:	mov	x3, #0x200                 	// #512
  430ccc:	mov	x2, x1
  430cd0:	mov	x1, x0
  430cd4:	ldr	x0, [sp, #136]
  430cd8:	bl	4185d8 <udev_event_apply_format>
  430cdc:	ldr	x0, [sp, #136]
  430ce0:	add	x1, x0, #0x2c
  430ce4:	add	x0, sp, #0x280
  430ce8:	mov	w5, #0x2                   	// #2
  430cec:	mov	x4, #0x0                   	// #0
  430cf0:	mov	x3, #0x0                   	// #0
  430cf4:	mov	x2, #0x0                   	// #0
  430cf8:	bl	40b5e0 <get_user_creds@plt>
  430cfc:	str	w0, [sp, #168]
  430d00:	ldr	w0, [sp, #168]
  430d04:	cmp	w0, #0x0
  430d08:	b.ge	430d30 <udev_rule_apply_token_to_event+0x3980>  // b.tcont
  430d0c:	add	x0, sp, #0xfd8
  430d10:	mov	x4, x0
  430d14:	adrp	x0, 454000 <__func__.10675+0xa0>
  430d18:	add	x3, x0, #0x168
  430d1c:	ldr	w2, [sp, #168]
  430d20:	ldr	x1, [sp, #152]
  430d24:	ldr	x0, [sp, #144]
  430d28:	bl	41ff30 <log_unknown_owner>
  430d2c:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  430d30:	ldr	x0, [sp, #152]
  430d34:	str	x0, [sp, #1656]
  430d38:	ldr	x0, [sp, #1656]
  430d3c:	cmp	x0, #0x0
  430d40:	b.eq	430d50 <udev_rule_apply_token_to_event+0x39a0>  // b.none
  430d44:	ldr	x0, [sp, #1656]
  430d48:	ldr	x0, [x0, #32]
  430d4c:	b	430d54 <udev_rule_apply_token_to_event+0x39a4>
  430d50:	mov	x0, #0x0                   	// #0
  430d54:	str	x0, [sp, #1664]
  430d58:	ldr	x0, [sp, #1664]
  430d5c:	cmp	x0, #0x0
  430d60:	b.eq	430d70 <udev_rule_apply_token_to_event+0x39c0>  // b.none
  430d64:	ldr	x0, [sp, #1664]
  430d68:	ldr	x0, [x0, #8]
  430d6c:	b	430d74 <udev_rule_apply_token_to_event+0x39c4>
  430d70:	mov	x0, #0x0                   	// #0
  430d74:	str	x0, [sp, #1672]
  430d78:	ldr	x0, [sp, #1664]
  430d7c:	cmp	x0, #0x0
  430d80:	b.eq	430d90 <udev_rule_apply_token_to_event+0x39e0>  // b.none
  430d84:	ldr	x0, [sp, #1664]
  430d88:	ldr	x0, [x0]
  430d8c:	b	430d94 <udev_rule_apply_token_to_event+0x39e4>
  430d90:	mov	x0, #0x0                   	// #0
  430d94:	str	x0, [sp, #1680]
  430d98:	str	xzr, [sp, #648]
  430d9c:	ldr	x0, [sp, #144]
  430da0:	str	x0, [sp, #1688]
  430da4:	mov	w0, #0x7                   	// #7
  430da8:	str	w0, [sp, #356]
  430dac:	str	wzr, [sp, #360]
  430db0:	ldr	x0, [sp, #1688]
  430db4:	cmp	x0, #0x0
  430db8:	b.eq	430df4 <udev_rule_apply_token_to_event+0x3a44>  // b.none
  430dbc:	mov	w0, #0x1                   	// #1
  430dc0:	bl	40be30 <log_get_max_level_realm@plt>
  430dc4:	mov	w1, w0
  430dc8:	ldr	w0, [sp, #356]
  430dcc:	cmp	w0, w1
  430dd0:	cset	w0, le
  430dd4:	and	w0, w0, #0xff
  430dd8:	and	x0, x0, #0xff
  430ddc:	cmp	x0, #0x0
  430de0:	b.eq	430df4 <udev_rule_apply_token_to_event+0x3a44>  // b.none
  430de4:	add	x0, sp, #0x288
  430de8:	mov	x1, x0
  430dec:	ldr	x0, [sp, #1688]
  430df0:	bl	40aba0 <sd_device_get_sysname@plt>
  430df4:	adrp	x0, 454000 <__func__.10675+0xa0>
  430df8:	add	x20, x0, #0xbb
  430dfc:	ldr	x0, [sp, #648]
  430e00:	cmp	x0, #0x0
  430e04:	b.eq	430e14 <udev_rule_apply_token_to_event+0x3a64>  // b.none
  430e08:	adrp	x0, 454000 <__func__.10675+0xa0>
  430e0c:	add	x19, x0, #0xd8
  430e10:	b	430e18 <udev_rule_apply_token_to_event+0x3a68>
  430e14:	mov	x19, #0x0                   	// #0
  430e18:	ldr	x21, [sp, #648]
  430e1c:	ldr	x0, [sp, #1680]
  430e20:	bl	41fb4c <strna>
  430e24:	mov	x2, x0
  430e28:	ldr	x0, [sp, #1672]
  430e2c:	cmp	x0, #0x0
  430e30:	b.eq	430e40 <udev_rule_apply_token_to_event+0x3a90>  // b.none
  430e34:	ldr	x0, [sp, #1672]
  430e38:	ldr	w0, [x0, #8]
  430e3c:	b	430e44 <udev_rule_apply_token_to_event+0x3a94>
  430e40:	mov	w0, #0x0                   	// #0
  430e44:	ldr	x1, [sp, #136]
  430e48:	ldr	w1, [x1, #44]
  430e4c:	str	w1, [sp, #40]
  430e50:	add	x1, sp, #0xfd8
  430e54:	str	x1, [sp, #32]
  430e58:	str	w0, [sp, #24]
  430e5c:	str	x2, [sp, #16]
  430e60:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430e64:	add	x0, x0, #0x2a8
  430e68:	str	x0, [sp, #8]
  430e6c:	str	xzr, [sp]
  430e70:	mov	x7, #0x0                   	// #0
  430e74:	mov	x6, x21
  430e78:	mov	x5, x19
  430e7c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  430e80:	add	x4, x0, #0xa98
  430e84:	mov	w3, #0x756                 	// #1878
  430e88:	mov	x2, x20
  430e8c:	ldr	w1, [sp, #360]
  430e90:	ldr	w0, [sp, #356]
  430e94:	bl	40b020 <log_object_internal@plt>
  430e98:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  430e9c:	add	x0, sp, #0xfd8
  430ea0:	str	x0, [sp, #640]
  430ea4:	ldr	x0, [sp, #136]
  430ea8:	ldrb	w0, [x0, #105]
  430eac:	and	w0, w0, #0x4
  430eb0:	and	w0, w0, #0xff
  430eb4:	cmp	w0, #0x0
  430eb8:	b.ne	433ac8 <udev_rule_apply_token_to_event+0x6718>  // b.any
  430ebc:	ldr	x0, [sp, #704]
  430ec0:	ldrsb	w0, [x0, #1]
  430ec4:	cmp	w0, #0x5
  430ec8:	b.ne	430edc <udev_rule_apply_token_to_event+0x3b2c>  // b.any
  430ecc:	ldr	x0, [sp, #136]
  430ed0:	ldrb	w1, [x0, #105]
  430ed4:	orr	w1, w1, #0x4
  430ed8:	strb	w1, [x0, #105]
  430edc:	ldr	x0, [sp, #704]
  430ee0:	ldr	x0, [x0, #8]
  430ee4:	add	x1, sp, #0xfd8
  430ee8:	mov	w4, #0x0                   	// #0
  430eec:	mov	x3, #0x200                 	// #512
  430ef0:	mov	x2, x1
  430ef4:	mov	x1, x0
  430ef8:	ldr	x0, [sp, #136]
  430efc:	bl	4185d8 <udev_event_apply_format>
  430f00:	ldr	x0, [sp, #136]
  430f04:	add	x1, x0, #0x30
  430f08:	add	x0, sp, #0x280
  430f0c:	mov	w2, #0x2                   	// #2
  430f10:	bl	40b980 <get_group_creds@plt>
  430f14:	str	w0, [sp, #168]
  430f18:	ldr	w0, [sp, #168]
  430f1c:	cmp	w0, #0x0
  430f20:	b.ge	430f48 <udev_rule_apply_token_to_event+0x3b98>  // b.tcont
  430f24:	add	x0, sp, #0xfd8
  430f28:	mov	x4, x0
  430f2c:	adrp	x0, 454000 <__func__.10675+0xa0>
  430f30:	add	x3, x0, #0x170
  430f34:	ldr	w2, [sp, #168]
  430f38:	ldr	x1, [sp, #152]
  430f3c:	ldr	x0, [sp, #144]
  430f40:	bl	41ff30 <log_unknown_owner>
  430f44:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  430f48:	ldr	x0, [sp, #152]
  430f4c:	str	x0, [sp, #1616]
  430f50:	ldr	x0, [sp, #1616]
  430f54:	cmp	x0, #0x0
  430f58:	b.eq	430f68 <udev_rule_apply_token_to_event+0x3bb8>  // b.none
  430f5c:	ldr	x0, [sp, #1616]
  430f60:	ldr	x0, [x0, #32]
  430f64:	b	430f6c <udev_rule_apply_token_to_event+0x3bbc>
  430f68:	mov	x0, #0x0                   	// #0
  430f6c:	str	x0, [sp, #1624]
  430f70:	ldr	x0, [sp, #1624]
  430f74:	cmp	x0, #0x0
  430f78:	b.eq	430f88 <udev_rule_apply_token_to_event+0x3bd8>  // b.none
  430f7c:	ldr	x0, [sp, #1624]
  430f80:	ldr	x0, [x0, #8]
  430f84:	b	430f8c <udev_rule_apply_token_to_event+0x3bdc>
  430f88:	mov	x0, #0x0                   	// #0
  430f8c:	str	x0, [sp, #1632]
  430f90:	ldr	x0, [sp, #1624]
  430f94:	cmp	x0, #0x0
  430f98:	b.eq	430fa8 <udev_rule_apply_token_to_event+0x3bf8>  // b.none
  430f9c:	ldr	x0, [sp, #1624]
  430fa0:	ldr	x0, [x0]
  430fa4:	b	430fac <udev_rule_apply_token_to_event+0x3bfc>
  430fa8:	mov	x0, #0x0                   	// #0
  430fac:	str	x0, [sp, #1640]
  430fb0:	str	xzr, [sp, #648]
  430fb4:	ldr	x0, [sp, #144]
  430fb8:	str	x0, [sp, #1648]
  430fbc:	mov	w0, #0x7                   	// #7
  430fc0:	str	w0, [sp, #348]
  430fc4:	str	wzr, [sp, #352]
  430fc8:	ldr	x0, [sp, #1648]
  430fcc:	cmp	x0, #0x0
  430fd0:	b.eq	43100c <udev_rule_apply_token_to_event+0x3c5c>  // b.none
  430fd4:	mov	w0, #0x1                   	// #1
  430fd8:	bl	40be30 <log_get_max_level_realm@plt>
  430fdc:	mov	w1, w0
  430fe0:	ldr	w0, [sp, #348]
  430fe4:	cmp	w0, w1
  430fe8:	cset	w0, le
  430fec:	and	w0, w0, #0xff
  430ff0:	and	x0, x0, #0xff
  430ff4:	cmp	x0, #0x0
  430ff8:	b.eq	43100c <udev_rule_apply_token_to_event+0x3c5c>  // b.none
  430ffc:	add	x0, sp, #0x288
  431000:	mov	x1, x0
  431004:	ldr	x0, [sp, #1648]
  431008:	bl	40aba0 <sd_device_get_sysname@plt>
  43100c:	adrp	x0, 454000 <__func__.10675+0xa0>
  431010:	add	x20, x0, #0xbb
  431014:	ldr	x0, [sp, #648]
  431018:	cmp	x0, #0x0
  43101c:	b.eq	43102c <udev_rule_apply_token_to_event+0x3c7c>  // b.none
  431020:	adrp	x0, 454000 <__func__.10675+0xa0>
  431024:	add	x19, x0, #0xd8
  431028:	b	431030 <udev_rule_apply_token_to_event+0x3c80>
  43102c:	mov	x19, #0x0                   	// #0
  431030:	ldr	x21, [sp, #648]
  431034:	ldr	x0, [sp, #1640]
  431038:	bl	41fb4c <strna>
  43103c:	mov	x2, x0
  431040:	ldr	x0, [sp, #1632]
  431044:	cmp	x0, #0x0
  431048:	b.eq	431058 <udev_rule_apply_token_to_event+0x3ca8>  // b.none
  43104c:	ldr	x0, [sp, #1632]
  431050:	ldr	w0, [x0, #8]
  431054:	b	43105c <udev_rule_apply_token_to_event+0x3cac>
  431058:	mov	w0, #0x0                   	// #0
  43105c:	ldr	x1, [sp, #136]
  431060:	ldr	w1, [x1, #48]
  431064:	str	w1, [sp, #40]
  431068:	add	x1, sp, #0xfd8
  43106c:	str	x1, [sp, #32]
  431070:	str	w0, [sp, #24]
  431074:	str	x2, [sp, #16]
  431078:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43107c:	add	x0, x0, #0x2c0
  431080:	str	x0, [sp, #8]
  431084:	str	xzr, [sp]
  431088:	mov	x7, #0x0                   	// #0
  43108c:	mov	x6, x21
  431090:	mov	x5, x19
  431094:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431098:	add	x4, x0, #0xa98
  43109c:	mov	w3, #0x767                 	// #1895
  4310a0:	mov	x2, x20
  4310a4:	ldr	w1, [sp, #352]
  4310a8:	ldr	w0, [sp, #348]
  4310ac:	bl	40b020 <log_object_internal@plt>
  4310b0:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  4310b4:	ldr	x0, [sp, #136]
  4310b8:	ldrb	w0, [x0, #105]
  4310bc:	and	w0, w0, #0x10
  4310c0:	and	w0, w0, #0xff
  4310c4:	cmp	w0, #0x0
  4310c8:	b.ne	433ad0 <udev_rule_apply_token_to_event+0x6720>  // b.any
  4310cc:	ldr	x0, [sp, #704]
  4310d0:	ldrsb	w0, [x0, #1]
  4310d4:	cmp	w0, #0x5
  4310d8:	b.ne	4310ec <udev_rule_apply_token_to_event+0x3d3c>  // b.any
  4310dc:	ldr	x0, [sp, #136]
  4310e0:	ldrb	w1, [x0, #105]
  4310e4:	orr	w1, w1, #0x10
  4310e8:	strb	w1, [x0, #105]
  4310ec:	ldr	x0, [sp, #704]
  4310f0:	ldr	x0, [x0, #8]
  4310f4:	add	x1, sp, #0xfd8
  4310f8:	mov	w4, #0x0                   	// #0
  4310fc:	mov	x3, #0x200                 	// #512
  431100:	mov	x2, x1
  431104:	mov	x1, x0
  431108:	ldr	x0, [sp, #136]
  43110c:	bl	4185d8 <udev_event_apply_format>
  431110:	ldr	x0, [sp, #136]
  431114:	add	x1, x0, #0x28
  431118:	add	x0, sp, #0xfd8
  43111c:	bl	40ac80 <parse_mode@plt>
  431120:	str	w0, [sp, #168]
  431124:	ldr	w0, [sp, #168]
  431128:	cmp	w0, #0x0
  43112c:	b.ge	431294 <udev_rule_apply_token_to_event+0x3ee4>  // b.tcont
  431130:	ldr	x0, [sp, #152]
  431134:	str	x0, [sp, #1576]
  431138:	ldr	x0, [sp, #1576]
  43113c:	cmp	x0, #0x0
  431140:	b.eq	431150 <udev_rule_apply_token_to_event+0x3da0>  // b.none
  431144:	ldr	x0, [sp, #1576]
  431148:	ldr	x0, [x0, #32]
  43114c:	b	431154 <udev_rule_apply_token_to_event+0x3da4>
  431150:	mov	x0, #0x0                   	// #0
  431154:	str	x0, [sp, #1584]
  431158:	ldr	x0, [sp, #1584]
  43115c:	cmp	x0, #0x0
  431160:	b.eq	431170 <udev_rule_apply_token_to_event+0x3dc0>  // b.none
  431164:	ldr	x0, [sp, #1584]
  431168:	ldr	x0, [x0, #8]
  43116c:	b	431174 <udev_rule_apply_token_to_event+0x3dc4>
  431170:	mov	x0, #0x0                   	// #0
  431174:	str	x0, [sp, #1592]
  431178:	ldr	x0, [sp, #1584]
  43117c:	cmp	x0, #0x0
  431180:	b.eq	431190 <udev_rule_apply_token_to_event+0x3de0>  // b.none
  431184:	ldr	x0, [sp, #1584]
  431188:	ldr	x0, [x0]
  43118c:	b	431194 <udev_rule_apply_token_to_event+0x3de4>
  431190:	mov	x0, #0x0                   	// #0
  431194:	str	x0, [sp, #1600]
  431198:	str	xzr, [sp, #648]
  43119c:	ldr	x0, [sp, #144]
  4311a0:	str	x0, [sp, #1608]
  4311a4:	mov	w0, #0x3                   	// #3
  4311a8:	str	w0, [sp, #340]
  4311ac:	ldr	w0, [sp, #168]
  4311b0:	str	w0, [sp, #344]
  4311b4:	ldr	x0, [sp, #1608]
  4311b8:	cmp	x0, #0x0
  4311bc:	b.eq	4311f8 <udev_rule_apply_token_to_event+0x3e48>  // b.none
  4311c0:	mov	w0, #0x1                   	// #1
  4311c4:	bl	40be30 <log_get_max_level_realm@plt>
  4311c8:	mov	w1, w0
  4311cc:	ldr	w0, [sp, #340]
  4311d0:	cmp	w0, w1
  4311d4:	cset	w0, le
  4311d8:	and	w0, w0, #0xff
  4311dc:	and	x0, x0, #0xff
  4311e0:	cmp	x0, #0x0
  4311e4:	b.eq	4311f8 <udev_rule_apply_token_to_event+0x3e48>  // b.none
  4311e8:	add	x0, sp, #0x288
  4311ec:	mov	x1, x0
  4311f0:	ldr	x0, [sp, #1608]
  4311f4:	bl	40aba0 <sd_device_get_sysname@plt>
  4311f8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4311fc:	add	x20, x0, #0xbb
  431200:	ldr	x0, [sp, #648]
  431204:	cmp	x0, #0x0
  431208:	b.eq	431218 <udev_rule_apply_token_to_event+0x3e68>  // b.none
  43120c:	adrp	x0, 454000 <__func__.10675+0xa0>
  431210:	add	x19, x0, #0xd8
  431214:	b	43121c <udev_rule_apply_token_to_event+0x3e6c>
  431218:	mov	x19, #0x0                   	// #0
  43121c:	ldr	x21, [sp, #648]
  431220:	ldr	x0, [sp, #1600]
  431224:	bl	41fb4c <strna>
  431228:	mov	x2, x0
  43122c:	ldr	x0, [sp, #1592]
  431230:	cmp	x0, #0x0
  431234:	b.eq	431244 <udev_rule_apply_token_to_event+0x3e94>  // b.none
  431238:	ldr	x0, [sp, #1592]
  43123c:	ldr	w0, [x0, #8]
  431240:	b	431248 <udev_rule_apply_token_to_event+0x3e98>
  431244:	mov	w0, #0x0                   	// #0
  431248:	add	x1, sp, #0xfd8
  43124c:	str	x1, [sp, #32]
  431250:	str	w0, [sp, #24]
  431254:	str	x2, [sp, #16]
  431258:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43125c:	add	x0, x0, #0x2d8
  431260:	str	x0, [sp, #8]
  431264:	str	xzr, [sp]
  431268:	mov	x7, #0x0                   	// #0
  43126c:	mov	x6, x21
  431270:	mov	x5, x19
  431274:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431278:	add	x4, x0, #0xa98
  43127c:	mov	w3, #0x775                 	// #1909
  431280:	mov	x2, x20
  431284:	ldr	w1, [sp, #344]
  431288:	ldr	w0, [sp, #340]
  43128c:	bl	40b020 <log_object_internal@plt>
  431290:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  431294:	ldr	x0, [sp, #152]
  431298:	str	x0, [sp, #1536]
  43129c:	ldr	x0, [sp, #1536]
  4312a0:	cmp	x0, #0x0
  4312a4:	b.eq	4312b4 <udev_rule_apply_token_to_event+0x3f04>  // b.none
  4312a8:	ldr	x0, [sp, #1536]
  4312ac:	ldr	x0, [x0, #32]
  4312b0:	b	4312b8 <udev_rule_apply_token_to_event+0x3f08>
  4312b4:	mov	x0, #0x0                   	// #0
  4312b8:	str	x0, [sp, #1544]
  4312bc:	ldr	x0, [sp, #1544]
  4312c0:	cmp	x0, #0x0
  4312c4:	b.eq	4312d4 <udev_rule_apply_token_to_event+0x3f24>  // b.none
  4312c8:	ldr	x0, [sp, #1544]
  4312cc:	ldr	x0, [x0, #8]
  4312d0:	b	4312d8 <udev_rule_apply_token_to_event+0x3f28>
  4312d4:	mov	x0, #0x0                   	// #0
  4312d8:	str	x0, [sp, #1552]
  4312dc:	ldr	x0, [sp, #1544]
  4312e0:	cmp	x0, #0x0
  4312e4:	b.eq	4312f4 <udev_rule_apply_token_to_event+0x3f44>  // b.none
  4312e8:	ldr	x0, [sp, #1544]
  4312ec:	ldr	x0, [x0]
  4312f0:	b	4312f8 <udev_rule_apply_token_to_event+0x3f48>
  4312f4:	mov	x0, #0x0                   	// #0
  4312f8:	str	x0, [sp, #1560]
  4312fc:	str	xzr, [sp, #648]
  431300:	ldr	x0, [sp, #144]
  431304:	str	x0, [sp, #1568]
  431308:	mov	w0, #0x7                   	// #7
  43130c:	str	w0, [sp, #332]
  431310:	str	wzr, [sp, #336]
  431314:	ldr	x0, [sp, #1568]
  431318:	cmp	x0, #0x0
  43131c:	b.eq	431358 <udev_rule_apply_token_to_event+0x3fa8>  // b.none
  431320:	mov	w0, #0x1                   	// #1
  431324:	bl	40be30 <log_get_max_level_realm@plt>
  431328:	mov	w1, w0
  43132c:	ldr	w0, [sp, #332]
  431330:	cmp	w0, w1
  431334:	cset	w0, le
  431338:	and	w0, w0, #0xff
  43133c:	and	x0, x0, #0xff
  431340:	cmp	x0, #0x0
  431344:	b.eq	431358 <udev_rule_apply_token_to_event+0x3fa8>  // b.none
  431348:	add	x0, sp, #0x288
  43134c:	mov	x1, x0
  431350:	ldr	x0, [sp, #1568]
  431354:	bl	40aba0 <sd_device_get_sysname@plt>
  431358:	adrp	x0, 454000 <__func__.10675+0xa0>
  43135c:	add	x20, x0, #0xbb
  431360:	ldr	x0, [sp, #648]
  431364:	cmp	x0, #0x0
  431368:	b.eq	431378 <udev_rule_apply_token_to_event+0x3fc8>  // b.none
  43136c:	adrp	x0, 454000 <__func__.10675+0xa0>
  431370:	add	x19, x0, #0xd8
  431374:	b	43137c <udev_rule_apply_token_to_event+0x3fcc>
  431378:	mov	x19, #0x0                   	// #0
  43137c:	ldr	x21, [sp, #648]
  431380:	ldr	x0, [sp, #1560]
  431384:	bl	41fb4c <strna>
  431388:	mov	x2, x0
  43138c:	ldr	x0, [sp, #1552]
  431390:	cmp	x0, #0x0
  431394:	b.eq	4313a4 <udev_rule_apply_token_to_event+0x3ff4>  // b.none
  431398:	ldr	x0, [sp, #1552]
  43139c:	ldr	w0, [x0, #8]
  4313a0:	b	4313a8 <udev_rule_apply_token_to_event+0x3ff8>
  4313a4:	mov	w0, #0x0                   	// #0
  4313a8:	ldr	x1, [sp, #136]
  4313ac:	ldr	w1, [x1, #40]
  4313b0:	str	w1, [sp, #32]
  4313b4:	str	w0, [sp, #24]
  4313b8:	str	x2, [sp, #16]
  4313bc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4313c0:	add	x0, x0, #0x308
  4313c4:	str	x0, [sp, #8]
  4313c8:	str	xzr, [sp]
  4313cc:	mov	x7, #0x0                   	// #0
  4313d0:	mov	x6, x21
  4313d4:	mov	x5, x19
  4313d8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4313dc:	add	x4, x0, #0xa98
  4313e0:	mov	w3, #0x777                 	// #1911
  4313e4:	mov	x2, x20
  4313e8:	ldr	w1, [sp, #336]
  4313ec:	ldr	w0, [sp, #332]
  4313f0:	bl	40b020 <log_object_internal@plt>
  4313f4:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  4313f8:	ldr	x0, [sp, #136]
  4313fc:	ldrb	w0, [x0, #105]
  431400:	and	w0, w0, #0x8
  431404:	and	w0, w0, #0xff
  431408:	cmp	w0, #0x0
  43140c:	b.ne	433ad8 <udev_rule_apply_token_to_event+0x6728>  // b.any
  431410:	ldr	x0, [sp, #704]
  431414:	ldrsb	w0, [x0, #1]
  431418:	cmp	w0, #0x5
  43141c:	b.ne	431430 <udev_rule_apply_token_to_event+0x4080>  // b.any
  431420:	ldr	x0, [sp, #136]
  431424:	ldrb	w1, [x0, #105]
  431428:	orr	w1, w1, #0x8
  43142c:	strb	w1, [x0, #105]
  431430:	ldr	x0, [sp, #704]
  431434:	ldr	x0, [x0, #16]
  431438:	cmp	x0, #0x0
  43143c:	b.eq	433ae0 <udev_rule_apply_token_to_event+0x6730>  // b.none
  431440:	ldr	x0, [sp, #704]
  431444:	ldr	x0, [x0, #16]
  431448:	sub	w1, w0, #0x1
  43144c:	ldr	x0, [sp, #136]
  431450:	str	w1, [x0, #44]
  431454:	ldr	x0, [sp, #152]
  431458:	str	x0, [sp, #1496]
  43145c:	ldr	x0, [sp, #1496]
  431460:	cmp	x0, #0x0
  431464:	b.eq	431474 <udev_rule_apply_token_to_event+0x40c4>  // b.none
  431468:	ldr	x0, [sp, #1496]
  43146c:	ldr	x0, [x0, #32]
  431470:	b	431478 <udev_rule_apply_token_to_event+0x40c8>
  431474:	mov	x0, #0x0                   	// #0
  431478:	str	x0, [sp, #1504]
  43147c:	ldr	x0, [sp, #1504]
  431480:	cmp	x0, #0x0
  431484:	b.eq	431494 <udev_rule_apply_token_to_event+0x40e4>  // b.none
  431488:	ldr	x0, [sp, #1504]
  43148c:	ldr	x0, [x0, #8]
  431490:	b	431498 <udev_rule_apply_token_to_event+0x40e8>
  431494:	mov	x0, #0x0                   	// #0
  431498:	str	x0, [sp, #1512]
  43149c:	ldr	x0, [sp, #1504]
  4314a0:	cmp	x0, #0x0
  4314a4:	b.eq	4314b4 <udev_rule_apply_token_to_event+0x4104>  // b.none
  4314a8:	ldr	x0, [sp, #1504]
  4314ac:	ldr	x0, [x0]
  4314b0:	b	4314b8 <udev_rule_apply_token_to_event+0x4108>
  4314b4:	mov	x0, #0x0                   	// #0
  4314b8:	str	x0, [sp, #1520]
  4314bc:	str	xzr, [sp, #648]
  4314c0:	ldr	x0, [sp, #144]
  4314c4:	str	x0, [sp, #1528]
  4314c8:	mov	w0, #0x7                   	// #7
  4314cc:	str	w0, [sp, #324]
  4314d0:	str	wzr, [sp, #328]
  4314d4:	ldr	x0, [sp, #1528]
  4314d8:	cmp	x0, #0x0
  4314dc:	b.eq	431518 <udev_rule_apply_token_to_event+0x4168>  // b.none
  4314e0:	mov	w0, #0x1                   	// #1
  4314e4:	bl	40be30 <log_get_max_level_realm@plt>
  4314e8:	mov	w1, w0
  4314ec:	ldr	w0, [sp, #324]
  4314f0:	cmp	w0, w1
  4314f4:	cset	w0, le
  4314f8:	and	w0, w0, #0xff
  4314fc:	and	x0, x0, #0xff
  431500:	cmp	x0, #0x0
  431504:	b.eq	431518 <udev_rule_apply_token_to_event+0x4168>  // b.none
  431508:	add	x0, sp, #0x288
  43150c:	mov	x1, x0
  431510:	ldr	x0, [sp, #1528]
  431514:	bl	40aba0 <sd_device_get_sysname@plt>
  431518:	adrp	x0, 454000 <__func__.10675+0xa0>
  43151c:	add	x20, x0, #0xbb
  431520:	ldr	x0, [sp, #648]
  431524:	cmp	x0, #0x0
  431528:	b.eq	431538 <udev_rule_apply_token_to_event+0x4188>  // b.none
  43152c:	adrp	x0, 454000 <__func__.10675+0xa0>
  431530:	add	x19, x0, #0xd8
  431534:	b	43153c <udev_rule_apply_token_to_event+0x418c>
  431538:	mov	x19, #0x0                   	// #0
  43153c:	ldr	x21, [sp, #648]
  431540:	ldr	x0, [sp, #1520]
  431544:	bl	41fb4c <strna>
  431548:	mov	x2, x0
  43154c:	ldr	x0, [sp, #1512]
  431550:	cmp	x0, #0x0
  431554:	b.eq	431564 <udev_rule_apply_token_to_event+0x41b4>  // b.none
  431558:	ldr	x0, [sp, #1512]
  43155c:	ldr	w0, [x0, #8]
  431560:	b	431568 <udev_rule_apply_token_to_event+0x41b8>
  431564:	mov	w0, #0x0                   	// #0
  431568:	ldr	x1, [sp, #136]
  43156c:	ldr	w1, [x1, #44]
  431570:	str	w1, [sp, #32]
  431574:	str	w0, [sp, #24]
  431578:	str	x2, [sp, #16]
  43157c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431580:	add	x0, x0, #0x318
  431584:	str	x0, [sp, #8]
  431588:	str	xzr, [sp]
  43158c:	mov	x7, #0x0                   	// #0
  431590:	mov	x6, x21
  431594:	mov	x5, x19
  431598:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43159c:	add	x4, x0, #0xa98
  4315a0:	mov	w3, #0x782                 	// #1922
  4315a4:	mov	x2, x20
  4315a8:	ldr	w1, [sp, #328]
  4315ac:	ldr	w0, [sp, #324]
  4315b0:	bl	40b020 <log_object_internal@plt>
  4315b4:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  4315b8:	ldr	x0, [sp, #136]
  4315bc:	ldrb	w0, [x0, #105]
  4315c0:	and	w0, w0, #0x4
  4315c4:	and	w0, w0, #0xff
  4315c8:	cmp	w0, #0x0
  4315cc:	b.ne	433ae8 <udev_rule_apply_token_to_event+0x6738>  // b.any
  4315d0:	ldr	x0, [sp, #704]
  4315d4:	ldrsb	w0, [x0, #1]
  4315d8:	cmp	w0, #0x5
  4315dc:	b.ne	4315f0 <udev_rule_apply_token_to_event+0x4240>  // b.any
  4315e0:	ldr	x0, [sp, #136]
  4315e4:	ldrb	w1, [x0, #105]
  4315e8:	orr	w1, w1, #0x4
  4315ec:	strb	w1, [x0, #105]
  4315f0:	ldr	x0, [sp, #704]
  4315f4:	ldr	x0, [x0, #16]
  4315f8:	cmp	x0, #0x0
  4315fc:	b.eq	433af0 <udev_rule_apply_token_to_event+0x6740>  // b.none
  431600:	ldr	x0, [sp, #704]
  431604:	ldr	x0, [x0, #16]
  431608:	sub	w1, w0, #0x1
  43160c:	ldr	x0, [sp, #136]
  431610:	str	w1, [x0, #48]
  431614:	ldr	x0, [sp, #152]
  431618:	str	x0, [sp, #1456]
  43161c:	ldr	x0, [sp, #1456]
  431620:	cmp	x0, #0x0
  431624:	b.eq	431634 <udev_rule_apply_token_to_event+0x4284>  // b.none
  431628:	ldr	x0, [sp, #1456]
  43162c:	ldr	x0, [x0, #32]
  431630:	b	431638 <udev_rule_apply_token_to_event+0x4288>
  431634:	mov	x0, #0x0                   	// #0
  431638:	str	x0, [sp, #1464]
  43163c:	ldr	x0, [sp, #1464]
  431640:	cmp	x0, #0x0
  431644:	b.eq	431654 <udev_rule_apply_token_to_event+0x42a4>  // b.none
  431648:	ldr	x0, [sp, #1464]
  43164c:	ldr	x0, [x0, #8]
  431650:	b	431658 <udev_rule_apply_token_to_event+0x42a8>
  431654:	mov	x0, #0x0                   	// #0
  431658:	str	x0, [sp, #1472]
  43165c:	ldr	x0, [sp, #1464]
  431660:	cmp	x0, #0x0
  431664:	b.eq	431674 <udev_rule_apply_token_to_event+0x42c4>  // b.none
  431668:	ldr	x0, [sp, #1464]
  43166c:	ldr	x0, [x0]
  431670:	b	431678 <udev_rule_apply_token_to_event+0x42c8>
  431674:	mov	x0, #0x0                   	// #0
  431678:	str	x0, [sp, #1480]
  43167c:	str	xzr, [sp, #648]
  431680:	ldr	x0, [sp, #144]
  431684:	str	x0, [sp, #1488]
  431688:	mov	w0, #0x7                   	// #7
  43168c:	str	w0, [sp, #316]
  431690:	str	wzr, [sp, #320]
  431694:	ldr	x0, [sp, #1488]
  431698:	cmp	x0, #0x0
  43169c:	b.eq	4316d8 <udev_rule_apply_token_to_event+0x4328>  // b.none
  4316a0:	mov	w0, #0x1                   	// #1
  4316a4:	bl	40be30 <log_get_max_level_realm@plt>
  4316a8:	mov	w1, w0
  4316ac:	ldr	w0, [sp, #316]
  4316b0:	cmp	w0, w1
  4316b4:	cset	w0, le
  4316b8:	and	w0, w0, #0xff
  4316bc:	and	x0, x0, #0xff
  4316c0:	cmp	x0, #0x0
  4316c4:	b.eq	4316d8 <udev_rule_apply_token_to_event+0x4328>  // b.none
  4316c8:	add	x0, sp, #0x288
  4316cc:	mov	x1, x0
  4316d0:	ldr	x0, [sp, #1488]
  4316d4:	bl	40aba0 <sd_device_get_sysname@plt>
  4316d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4316dc:	add	x20, x0, #0xbb
  4316e0:	ldr	x0, [sp, #648]
  4316e4:	cmp	x0, #0x0
  4316e8:	b.eq	4316f8 <udev_rule_apply_token_to_event+0x4348>  // b.none
  4316ec:	adrp	x0, 454000 <__func__.10675+0xa0>
  4316f0:	add	x19, x0, #0xd8
  4316f4:	b	4316fc <udev_rule_apply_token_to_event+0x434c>
  4316f8:	mov	x19, #0x0                   	// #0
  4316fc:	ldr	x21, [sp, #648]
  431700:	ldr	x0, [sp, #1480]
  431704:	bl	41fb4c <strna>
  431708:	mov	x2, x0
  43170c:	ldr	x0, [sp, #1472]
  431710:	cmp	x0, #0x0
  431714:	b.eq	431724 <udev_rule_apply_token_to_event+0x4374>  // b.none
  431718:	ldr	x0, [sp, #1472]
  43171c:	ldr	w0, [x0, #8]
  431720:	b	431728 <udev_rule_apply_token_to_event+0x4378>
  431724:	mov	w0, #0x0                   	// #0
  431728:	ldr	x1, [sp, #136]
  43172c:	ldr	w1, [x1, #48]
  431730:	str	w1, [sp, #32]
  431734:	str	w0, [sp, #24]
  431738:	str	x2, [sp, #16]
  43173c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431740:	add	x0, x0, #0x328
  431744:	str	x0, [sp, #8]
  431748:	str	xzr, [sp]
  43174c:	mov	x7, #0x0                   	// #0
  431750:	mov	x6, x21
  431754:	mov	x5, x19
  431758:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43175c:	add	x4, x0, #0xa98
  431760:	mov	w3, #0x78c                 	// #1932
  431764:	mov	x2, x20
  431768:	ldr	w1, [sp, #320]
  43176c:	ldr	w0, [sp, #316]
  431770:	bl	40b020 <log_object_internal@plt>
  431774:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  431778:	ldr	x0, [sp, #136]
  43177c:	ldrb	w0, [x0, #105]
  431780:	and	w0, w0, #0x10
  431784:	and	w0, w0, #0xff
  431788:	cmp	w0, #0x0
  43178c:	b.ne	433af8 <udev_rule_apply_token_to_event+0x6748>  // b.any
  431790:	ldr	x0, [sp, #704]
  431794:	ldrsb	w0, [x0, #1]
  431798:	cmp	w0, #0x5
  43179c:	b.ne	4317b0 <udev_rule_apply_token_to_event+0x4400>  // b.any
  4317a0:	ldr	x0, [sp, #136]
  4317a4:	ldrb	w1, [x0, #105]
  4317a8:	orr	w1, w1, #0x10
  4317ac:	strb	w1, [x0, #105]
  4317b0:	ldr	x0, [sp, #704]
  4317b4:	ldr	x0, [x0, #16]
  4317b8:	cmp	x0, #0x0
  4317bc:	b.eq	433b00 <udev_rule_apply_token_to_event+0x6750>  // b.none
  4317c0:	ldr	x0, [sp, #704]
  4317c4:	ldr	x0, [x0, #16]
  4317c8:	sub	w1, w0, #0x1
  4317cc:	ldr	x0, [sp, #136]
  4317d0:	str	w1, [x0, #40]
  4317d4:	ldr	x0, [sp, #152]
  4317d8:	str	x0, [sp, #1416]
  4317dc:	ldr	x0, [sp, #1416]
  4317e0:	cmp	x0, #0x0
  4317e4:	b.eq	4317f4 <udev_rule_apply_token_to_event+0x4444>  // b.none
  4317e8:	ldr	x0, [sp, #1416]
  4317ec:	ldr	x0, [x0, #32]
  4317f0:	b	4317f8 <udev_rule_apply_token_to_event+0x4448>
  4317f4:	mov	x0, #0x0                   	// #0
  4317f8:	str	x0, [sp, #1424]
  4317fc:	ldr	x0, [sp, #1424]
  431800:	cmp	x0, #0x0
  431804:	b.eq	431814 <udev_rule_apply_token_to_event+0x4464>  // b.none
  431808:	ldr	x0, [sp, #1424]
  43180c:	ldr	x0, [x0, #8]
  431810:	b	431818 <udev_rule_apply_token_to_event+0x4468>
  431814:	mov	x0, #0x0                   	// #0
  431818:	str	x0, [sp, #1432]
  43181c:	ldr	x0, [sp, #1424]
  431820:	cmp	x0, #0x0
  431824:	b.eq	431834 <udev_rule_apply_token_to_event+0x4484>  // b.none
  431828:	ldr	x0, [sp, #1424]
  43182c:	ldr	x0, [x0]
  431830:	b	431838 <udev_rule_apply_token_to_event+0x4488>
  431834:	mov	x0, #0x0                   	// #0
  431838:	str	x0, [sp, #1440]
  43183c:	str	xzr, [sp, #648]
  431840:	ldr	x0, [sp, #144]
  431844:	str	x0, [sp, #1448]
  431848:	mov	w0, #0x7                   	// #7
  43184c:	str	w0, [sp, #308]
  431850:	str	wzr, [sp, #312]
  431854:	ldr	x0, [sp, #1448]
  431858:	cmp	x0, #0x0
  43185c:	b.eq	431898 <udev_rule_apply_token_to_event+0x44e8>  // b.none
  431860:	mov	w0, #0x1                   	// #1
  431864:	bl	40be30 <log_get_max_level_realm@plt>
  431868:	mov	w1, w0
  43186c:	ldr	w0, [sp, #308]
  431870:	cmp	w0, w1
  431874:	cset	w0, le
  431878:	and	w0, w0, #0xff
  43187c:	and	x0, x0, #0xff
  431880:	cmp	x0, #0x0
  431884:	b.eq	431898 <udev_rule_apply_token_to_event+0x44e8>  // b.none
  431888:	add	x0, sp, #0x288
  43188c:	mov	x1, x0
  431890:	ldr	x0, [sp, #1448]
  431894:	bl	40aba0 <sd_device_get_sysname@plt>
  431898:	adrp	x0, 454000 <__func__.10675+0xa0>
  43189c:	add	x20, x0, #0xbb
  4318a0:	ldr	x0, [sp, #648]
  4318a4:	cmp	x0, #0x0
  4318a8:	b.eq	4318b8 <udev_rule_apply_token_to_event+0x4508>  // b.none
  4318ac:	adrp	x0, 454000 <__func__.10675+0xa0>
  4318b0:	add	x19, x0, #0xd8
  4318b4:	b	4318bc <udev_rule_apply_token_to_event+0x450c>
  4318b8:	mov	x19, #0x0                   	// #0
  4318bc:	ldr	x21, [sp, #648]
  4318c0:	ldr	x0, [sp, #1440]
  4318c4:	bl	41fb4c <strna>
  4318c8:	mov	x2, x0
  4318cc:	ldr	x0, [sp, #1432]
  4318d0:	cmp	x0, #0x0
  4318d4:	b.eq	4318e4 <udev_rule_apply_token_to_event+0x4534>  // b.none
  4318d8:	ldr	x0, [sp, #1432]
  4318dc:	ldr	w0, [x0, #8]
  4318e0:	b	4318e8 <udev_rule_apply_token_to_event+0x4538>
  4318e4:	mov	w0, #0x0                   	// #0
  4318e8:	ldr	x1, [sp, #136]
  4318ec:	ldr	w1, [x1, #40]
  4318f0:	str	w1, [sp, #32]
  4318f4:	str	w0, [sp, #24]
  4318f8:	str	x2, [sp, #16]
  4318fc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431900:	add	x0, x0, #0x308
  431904:	str	x0, [sp, #8]
  431908:	str	xzr, [sp]
  43190c:	mov	x7, #0x0                   	// #0
  431910:	mov	x6, x21
  431914:	mov	x5, x19
  431918:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43191c:	add	x4, x0, #0xa98
  431920:	mov	w3, #0x796                 	// #1942
  431924:	mov	x2, x20
  431928:	ldr	w1, [sp, #312]
  43192c:	ldr	w0, [sp, #308]
  431930:	bl	40b020 <log_object_internal@plt>
  431934:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  431938:	str	xzr, [sp, #632]
  43193c:	str	xzr, [sp, #640]
  431940:	add	x0, sp, #0x1, lsl #12
  431944:	stp	xzr, xzr, [x0, #-40]
  431948:	add	x0, sp, #0xfe8
  43194c:	mov	x1, #0x3ff0                	// #16368
  431950:	mov	x2, x1
  431954:	mov	w1, #0x0                   	// #0
  431958:	bl	40be00 <memset@plt>
  43195c:	ldr	x0, [sp, #704]
  431960:	ldr	x0, [x0, #16]
  431964:	bl	40b7c0 <strdup@plt>
  431968:	str	x0, [sp, #632]
  43196c:	ldr	x0, [sp, #632]
  431970:	cmp	x0, #0x0
  431974:	b.ne	4319a0 <udev_rule_apply_token_to_event+0x45f0>  // b.any
  431978:	adrp	x0, 454000 <__func__.10675+0xa0>
  43197c:	add	x1, x0, #0xbb
  431980:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431984:	add	x3, x0, #0xa98
  431988:	mov	w2, #0x79e                 	// #1950
  43198c:	mov	w0, #0x1                   	// #1
  431990:	bl	40bda0 <log_oom_internal@plt>
  431994:	mov	w19, w0
  431998:	mov	w20, #0x0                   	// #0
  43199c:	b	431c5c <udev_rule_apply_token_to_event+0x48ac>
  4319a0:	ldr	x0, [sp, #704]
  4319a4:	ldr	x0, [x0, #8]
  4319a8:	add	x1, sp, #0xfd8
  4319ac:	mov	w4, #0x0                   	// #0
  4319b0:	mov	x3, #0x4000                	// #16384
  4319b4:	mov	x2, x1
  4319b8:	mov	x1, x0
  4319bc:	ldr	x0, [sp, #136]
  4319c0:	bl	4185d8 <udev_event_apply_format>
  4319c4:	add	x0, sp, #0xfd8
  4319c8:	bl	41fb70 <isempty>
  4319cc:	and	w0, w0, #0xff
  4319d0:	eor	w0, w0, #0x1
  4319d4:	and	w0, w0, #0xff
  4319d8:	cmp	w0, #0x0
  4319dc:	b.eq	4319f0 <udev_rule_apply_token_to_event+0x4640>  // b.none
  4319e0:	add	x0, sp, #0xfd8
  4319e4:	bl	40b7c0 <strdup@plt>
  4319e8:	str	x0, [sp, #640]
  4319ec:	b	431a00 <udev_rule_apply_token_to_event+0x4650>
  4319f0:	ldr	x0, [sp, #704]
  4319f4:	ldr	x0, [x0, #8]
  4319f8:	bl	40b7c0 <strdup@plt>
  4319fc:	str	x0, [sp, #640]
  431a00:	ldr	x0, [sp, #640]
  431a04:	cmp	x0, #0x0
  431a08:	b.ne	431a34 <udev_rule_apply_token_to_event+0x4684>  // b.any
  431a0c:	adrp	x0, 454000 <__func__.10675+0xa0>
  431a10:	add	x1, x0, #0xbb
  431a14:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431a18:	add	x3, x0, #0xa98
  431a1c:	mov	w2, #0x7a6                 	// #1958
  431a20:	mov	w0, #0x1                   	// #1
  431a24:	bl	40bda0 <log_oom_internal@plt>
  431a28:	mov	w19, w0
  431a2c:	mov	w20, #0x0                   	// #0
  431a30:	b	431c5c <udev_rule_apply_token_to_event+0x48ac>
  431a34:	ldr	x0, [sp, #704]
  431a38:	ldrsb	w0, [x0, #1]
  431a3c:	cmp	w0, #0x4
  431a40:	b.ne	431a50 <udev_rule_apply_token_to_event+0x46a0>  // b.any
  431a44:	ldr	x0, [sp, #136]
  431a48:	ldr	x0, [x0, #56]
  431a4c:	bl	41fd00 <ordered_hashmap_clear_free_free>
  431a50:	ldr	x0, [sp, #136]
  431a54:	add	x0, x0, #0x38
  431a58:	mov	x1, #0x0                   	// #0
  431a5c:	bl	40a450 <internal_ordered_hashmap_ensure_allocated@plt>
  431a60:	str	w0, [sp, #168]
  431a64:	ldr	w0, [sp, #168]
  431a68:	cmp	w0, #0x0
  431a6c:	b.ge	431a98 <udev_rule_apply_token_to_event+0x46e8>  // b.tcont
  431a70:	adrp	x0, 454000 <__func__.10675+0xa0>
  431a74:	add	x1, x0, #0xbb
  431a78:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431a7c:	add	x3, x0, #0xa98
  431a80:	mov	w2, #0x7ad                 	// #1965
  431a84:	mov	w0, #0x1                   	// #1
  431a88:	bl	40bda0 <log_oom_internal@plt>
  431a8c:	mov	w19, w0
  431a90:	mov	w20, #0x0                   	// #0
  431a94:	b	431c5c <udev_rule_apply_token_to_event+0x48ac>
  431a98:	ldr	x0, [sp, #136]
  431a9c:	ldr	x0, [x0, #56]
  431aa0:	ldr	x1, [sp, #632]
  431aa4:	ldr	x2, [sp, #640]
  431aa8:	bl	41fc84 <ordered_hashmap_put>
  431aac:	str	w0, [sp, #168]
  431ab0:	ldr	w0, [sp, #168]
  431ab4:	cmp	w0, #0x0
  431ab8:	b.ge	431ae4 <udev_rule_apply_token_to_event+0x4734>  // b.tcont
  431abc:	adrp	x0, 454000 <__func__.10675+0xa0>
  431ac0:	add	x1, x0, #0xbb
  431ac4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431ac8:	add	x3, x0, #0xa98
  431acc:	mov	w2, #0x7b1                 	// #1969
  431ad0:	mov	w0, #0x1                   	// #1
  431ad4:	bl	40bda0 <log_oom_internal@plt>
  431ad8:	mov	w19, w0
  431adc:	mov	w20, #0x0                   	// #0
  431ae0:	b	431c5c <udev_rule_apply_token_to_event+0x48ac>
  431ae4:	ldr	x0, [sp, #152]
  431ae8:	str	x0, [sp, #1296]
  431aec:	ldr	x0, [sp, #1296]
  431af0:	cmp	x0, #0x0
  431af4:	b.eq	431b04 <udev_rule_apply_token_to_event+0x4754>  // b.none
  431af8:	ldr	x0, [sp, #1296]
  431afc:	ldr	x0, [x0, #32]
  431b00:	b	431b08 <udev_rule_apply_token_to_event+0x4758>
  431b04:	mov	x0, #0x0                   	// #0
  431b08:	str	x0, [sp, #1304]
  431b0c:	ldr	x0, [sp, #1304]
  431b10:	cmp	x0, #0x0
  431b14:	b.eq	431b24 <udev_rule_apply_token_to_event+0x4774>  // b.none
  431b18:	ldr	x0, [sp, #1304]
  431b1c:	ldr	x0, [x0, #8]
  431b20:	b	431b28 <udev_rule_apply_token_to_event+0x4778>
  431b24:	mov	x0, #0x0                   	// #0
  431b28:	str	x0, [sp, #1312]
  431b2c:	ldr	x0, [sp, #1304]
  431b30:	cmp	x0, #0x0
  431b34:	b.eq	431b44 <udev_rule_apply_token_to_event+0x4794>  // b.none
  431b38:	ldr	x0, [sp, #1304]
  431b3c:	ldr	x0, [x0]
  431b40:	b	431b48 <udev_rule_apply_token_to_event+0x4798>
  431b44:	mov	x0, #0x0                   	// #0
  431b48:	str	x0, [sp, #1320]
  431b4c:	str	xzr, [sp, #648]
  431b50:	ldr	x0, [sp, #144]
  431b54:	str	x0, [sp, #1328]
  431b58:	mov	w0, #0x7                   	// #7
  431b5c:	str	w0, [sp, #284]
  431b60:	str	wzr, [sp, #288]
  431b64:	ldr	x0, [sp, #1328]
  431b68:	cmp	x0, #0x0
  431b6c:	b.eq	431ba8 <udev_rule_apply_token_to_event+0x47f8>  // b.none
  431b70:	mov	w0, #0x1                   	// #1
  431b74:	bl	40be30 <log_get_max_level_realm@plt>
  431b78:	mov	w1, w0
  431b7c:	ldr	w0, [sp, #284]
  431b80:	cmp	w0, w1
  431b84:	cset	w0, le
  431b88:	and	w0, w0, #0xff
  431b8c:	and	x0, x0, #0xff
  431b90:	cmp	x0, #0x0
  431b94:	b.eq	431ba8 <udev_rule_apply_token_to_event+0x47f8>  // b.none
  431b98:	add	x0, sp, #0x288
  431b9c:	mov	x1, x0
  431ba0:	ldr	x0, [sp, #1328]
  431ba4:	bl	40aba0 <sd_device_get_sysname@plt>
  431ba8:	adrp	x0, 454000 <__func__.10675+0xa0>
  431bac:	add	x21, x0, #0xbb
  431bb0:	ldr	x0, [sp, #648]
  431bb4:	cmp	x0, #0x0
  431bb8:	b.eq	431bc8 <udev_rule_apply_token_to_event+0x4818>  // b.none
  431bbc:	adrp	x0, 454000 <__func__.10675+0xa0>
  431bc0:	add	x20, x0, #0xd8
  431bc4:	b	431bcc <udev_rule_apply_token_to_event+0x481c>
  431bc8:	mov	x20, #0x0                   	// #0
  431bcc:	ldr	x22, [sp, #648]
  431bd0:	ldr	x0, [sp, #1320]
  431bd4:	bl	41fb4c <strna>
  431bd8:	mov	x3, x0
  431bdc:	ldr	x0, [sp, #1312]
  431be0:	cmp	x0, #0x0
  431be4:	b.eq	431bf4 <udev_rule_apply_token_to_event+0x4844>  // b.none
  431be8:	ldr	x0, [sp, #1312]
  431bec:	ldr	w0, [x0, #8]
  431bf0:	b	431bf8 <udev_rule_apply_token_to_event+0x4848>
  431bf4:	mov	w0, #0x0                   	// #0
  431bf8:	ldr	x1, [sp, #632]
  431bfc:	ldr	x2, [sp, #640]
  431c00:	str	x2, [sp, #40]
  431c04:	str	x1, [sp, #32]
  431c08:	str	w0, [sp, #24]
  431c0c:	str	x3, [sp, #16]
  431c10:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431c14:	add	x0, x0, #0x338
  431c18:	str	x0, [sp, #8]
  431c1c:	str	xzr, [sp]
  431c20:	mov	x7, #0x0                   	// #0
  431c24:	mov	x6, x22
  431c28:	mov	x5, x20
  431c2c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431c30:	add	x4, x0, #0xa98
  431c34:	mov	w3, #0x7b2                 	// #1970
  431c38:	mov	x2, x21
  431c3c:	ldr	w1, [sp, #288]
  431c40:	ldr	w0, [sp, #284]
  431c44:	bl	40b020 <log_object_internal@plt>
  431c48:	str	xzr, [sp, #640]
  431c4c:	ldr	x0, [sp, #640]
  431c50:	str	x0, [sp, #632]
  431c54:	mov	w20, #0x1                   	// #1
  431c58:	nop
  431c5c:	add	x0, sp, #0x280
  431c60:	bl	41fa04 <freep>
  431c64:	cmp	w20, #0x0
  431c68:	b.ne	431c74 <udev_rule_apply_token_to_event+0x48c4>  // b.any
  431c6c:	mov	w20, #0x0                   	// #0
  431c70:	b	431c78 <udev_rule_apply_token_to_event+0x48c8>
  431c74:	mov	w20, #0x1                   	// #1
  431c78:	add	x0, sp, #0x278
  431c7c:	bl	41fa04 <freep>
  431c80:	cmp	w20, #0x0
  431c84:	b.ne	433b4c <udev_rule_apply_token_to_event+0x679c>  // b.any
  431c88:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  431c8c:	ldr	x0, [sp, #704]
  431c90:	ldr	x0, [x0, #16]
  431c94:	str	x0, [sp, #1208]
  431c98:	add	x0, sp, #0xfd8
  431c9c:	str	x0, [sp, #640]
  431ca0:	mov	x0, #0x200                 	// #512
  431ca4:	str	x0, [sp, #680]
  431ca8:	ldr	x0, [sp, #704]
  431cac:	ldr	x0, [x0, #8]
  431cb0:	bl	41fb70 <isempty>
  431cb4:	and	w0, w0, #0xff
  431cb8:	cmp	w0, #0x0
  431cbc:	b.eq	431e58 <udev_rule_apply_token_to_event+0x4aa8>  // b.none
  431cc0:	ldr	x0, [sp, #704]
  431cc4:	ldrsb	w0, [x0, #1]
  431cc8:	cmp	w0, #0x2
  431ccc:	b.eq	433b08 <udev_rule_apply_token_to_event+0x6758>  // b.none
  431cd0:	mov	x2, #0x0                   	// #0
  431cd4:	ldr	x1, [sp, #1208]
  431cd8:	ldr	x0, [sp, #144]
  431cdc:	bl	40bab0 <device_add_property@plt>
  431ce0:	str	w0, [sp, #168]
  431ce4:	ldr	w0, [sp, #168]
  431ce8:	cmp	w0, #0x0
  431cec:	b.ge	433b10 <udev_rule_apply_token_to_event+0x6760>  // b.tcont
  431cf0:	ldr	x0, [sp, #152]
  431cf4:	str	x0, [sp, #1256]
  431cf8:	ldr	x0, [sp, #1256]
  431cfc:	cmp	x0, #0x0
  431d00:	b.eq	431d10 <udev_rule_apply_token_to_event+0x4960>  // b.none
  431d04:	ldr	x0, [sp, #1256]
  431d08:	ldr	x0, [x0, #32]
  431d0c:	b	431d14 <udev_rule_apply_token_to_event+0x4964>
  431d10:	mov	x0, #0x0                   	// #0
  431d14:	str	x0, [sp, #1264]
  431d18:	ldr	x0, [sp, #1264]
  431d1c:	cmp	x0, #0x0
  431d20:	b.eq	431d30 <udev_rule_apply_token_to_event+0x4980>  // b.none
  431d24:	ldr	x0, [sp, #1264]
  431d28:	ldr	x0, [x0, #8]
  431d2c:	b	431d34 <udev_rule_apply_token_to_event+0x4984>
  431d30:	mov	x0, #0x0                   	// #0
  431d34:	str	x0, [sp, #1272]
  431d38:	ldr	x0, [sp, #1264]
  431d3c:	cmp	x0, #0x0
  431d40:	b.eq	431d50 <udev_rule_apply_token_to_event+0x49a0>  // b.none
  431d44:	ldr	x0, [sp, #1264]
  431d48:	ldr	x0, [x0]
  431d4c:	b	431d54 <udev_rule_apply_token_to_event+0x49a4>
  431d50:	mov	x0, #0x0                   	// #0
  431d54:	str	x0, [sp, #1280]
  431d58:	str	xzr, [sp, #648]
  431d5c:	ldr	x0, [sp, #144]
  431d60:	str	x0, [sp, #1288]
  431d64:	mov	w0, #0x3                   	// #3
  431d68:	str	w0, [sp, #276]
  431d6c:	ldr	w0, [sp, #168]
  431d70:	str	w0, [sp, #280]
  431d74:	ldr	x0, [sp, #1288]
  431d78:	cmp	x0, #0x0
  431d7c:	b.eq	431db8 <udev_rule_apply_token_to_event+0x4a08>  // b.none
  431d80:	mov	w0, #0x1                   	// #1
  431d84:	bl	40be30 <log_get_max_level_realm@plt>
  431d88:	mov	w1, w0
  431d8c:	ldr	w0, [sp, #276]
  431d90:	cmp	w0, w1
  431d94:	cset	w0, le
  431d98:	and	w0, w0, #0xff
  431d9c:	and	x0, x0, #0xff
  431da0:	cmp	x0, #0x0
  431da4:	b.eq	431db8 <udev_rule_apply_token_to_event+0x4a08>  // b.none
  431da8:	add	x0, sp, #0x288
  431dac:	mov	x1, x0
  431db0:	ldr	x0, [sp, #1288]
  431db4:	bl	40aba0 <sd_device_get_sysname@plt>
  431db8:	adrp	x0, 454000 <__func__.10675+0xa0>
  431dbc:	add	x20, x0, #0xbb
  431dc0:	ldr	x0, [sp, #648]
  431dc4:	cmp	x0, #0x0
  431dc8:	b.eq	431dd8 <udev_rule_apply_token_to_event+0x4a28>  // b.none
  431dcc:	adrp	x0, 454000 <__func__.10675+0xa0>
  431dd0:	add	x19, x0, #0xd8
  431dd4:	b	431ddc <udev_rule_apply_token_to_event+0x4a2c>
  431dd8:	mov	x19, #0x0                   	// #0
  431ddc:	ldr	x21, [sp, #648]
  431de0:	ldr	x0, [sp, #1280]
  431de4:	bl	41fb4c <strna>
  431de8:	mov	x2, x0
  431dec:	ldr	x0, [sp, #1272]
  431df0:	cmp	x0, #0x0
  431df4:	b.eq	431e04 <udev_rule_apply_token_to_event+0x4a54>  // b.none
  431df8:	ldr	x0, [sp, #1272]
  431dfc:	ldr	w0, [x0, #8]
  431e00:	b	431e08 <udev_rule_apply_token_to_event+0x4a58>
  431e04:	mov	w0, #0x0                   	// #0
  431e08:	ldr	x1, [sp, #1208]
  431e0c:	str	x1, [sp, #32]
  431e10:	str	w0, [sp, #24]
  431e14:	str	x2, [sp, #16]
  431e18:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431e1c:	add	x0, x0, #0x350
  431e20:	str	x0, [sp, #8]
  431e24:	str	xzr, [sp]
  431e28:	mov	x7, #0x0                   	// #0
  431e2c:	mov	x6, x21
  431e30:	mov	x5, x19
  431e34:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431e38:	add	x4, x0, #0xa98
  431e3c:	mov	w3, #0x7c0                 	// #1984
  431e40:	mov	x2, x20
  431e44:	ldr	w1, [sp, #280]
  431e48:	ldr	w0, [sp, #276]
  431e4c:	bl	40b020 <log_object_internal@plt>
  431e50:	mov	w19, w0
  431e54:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  431e58:	ldr	x0, [sp, #704]
  431e5c:	ldrsb	w0, [x0, #1]
  431e60:	cmp	w0, #0x2
  431e64:	b.ne	431eac <udev_rule_apply_token_to_event+0x4afc>  // b.any
  431e68:	add	x0, sp, #0x278
  431e6c:	mov	x2, x0
  431e70:	ldr	x1, [sp, #1208]
  431e74:	ldr	x0, [sp, #144]
  431e78:	bl	40a310 <sd_device_get_property_value@plt>
  431e7c:	cmp	w0, #0x0
  431e80:	b.lt	431eac <udev_rule_apply_token_to_event+0x4afc>  // b.tstop
  431e84:	ldr	x1, [sp, #632]
  431e88:	add	x5, sp, #0x280
  431e8c:	mov	x4, #0x0                   	// #0
  431e90:	adrp	x0, 455000 <__func__.10675+0x10a0>
  431e94:	add	x3, x0, #0x380
  431e98:	mov	x2, x1
  431e9c:	ldr	x1, [sp, #680]
  431ea0:	mov	x0, x5
  431ea4:	bl	40aa50 <strpcpyl@plt>
  431ea8:	str	x0, [sp, #680]
  431eac:	ldr	x0, [sp, #704]
  431eb0:	ldr	x0, [x0, #8]
  431eb4:	ldr	x1, [sp, #640]
  431eb8:	mov	w4, #0x0                   	// #0
  431ebc:	ldr	x3, [sp, #680]
  431ec0:	mov	x2, x1
  431ec4:	mov	x1, x0
  431ec8:	ldr	x0, [sp, #136]
  431ecc:	bl	4185d8 <udev_event_apply_format>
  431ed0:	add	x0, sp, #0xfd8
  431ed4:	mov	x2, x0
  431ed8:	ldr	x1, [sp, #1208]
  431edc:	ldr	x0, [sp, #144]
  431ee0:	bl	40bab0 <device_add_property@plt>
  431ee4:	str	w0, [sp, #168]
  431ee8:	ldr	w0, [sp, #168]
  431eec:	cmp	w0, #0x0
  431ef0:	b.ge	433b18 <udev_rule_apply_token_to_event+0x6768>  // b.tcont
  431ef4:	ldr	x0, [sp, #152]
  431ef8:	str	x0, [sp, #1216]
  431efc:	ldr	x0, [sp, #1216]
  431f00:	cmp	x0, #0x0
  431f04:	b.eq	431f14 <udev_rule_apply_token_to_event+0x4b64>  // b.none
  431f08:	ldr	x0, [sp, #1216]
  431f0c:	ldr	x0, [x0, #32]
  431f10:	b	431f18 <udev_rule_apply_token_to_event+0x4b68>
  431f14:	mov	x0, #0x0                   	// #0
  431f18:	str	x0, [sp, #1224]
  431f1c:	ldr	x0, [sp, #1224]
  431f20:	cmp	x0, #0x0
  431f24:	b.eq	431f34 <udev_rule_apply_token_to_event+0x4b84>  // b.none
  431f28:	ldr	x0, [sp, #1224]
  431f2c:	ldr	x0, [x0, #8]
  431f30:	b	431f38 <udev_rule_apply_token_to_event+0x4b88>
  431f34:	mov	x0, #0x0                   	// #0
  431f38:	str	x0, [sp, #1232]
  431f3c:	ldr	x0, [sp, #1224]
  431f40:	cmp	x0, #0x0
  431f44:	b.eq	431f54 <udev_rule_apply_token_to_event+0x4ba4>  // b.none
  431f48:	ldr	x0, [sp, #1224]
  431f4c:	ldr	x0, [x0]
  431f50:	b	431f58 <udev_rule_apply_token_to_event+0x4ba8>
  431f54:	mov	x0, #0x0                   	// #0
  431f58:	str	x0, [sp, #1240]
  431f5c:	str	xzr, [sp, #648]
  431f60:	ldr	x0, [sp, #144]
  431f64:	str	x0, [sp, #1248]
  431f68:	mov	w0, #0x3                   	// #3
  431f6c:	str	w0, [sp, #268]
  431f70:	ldr	w0, [sp, #168]
  431f74:	str	w0, [sp, #272]
  431f78:	ldr	x0, [sp, #1248]
  431f7c:	cmp	x0, #0x0
  431f80:	b.eq	431fbc <udev_rule_apply_token_to_event+0x4c0c>  // b.none
  431f84:	mov	w0, #0x1                   	// #1
  431f88:	bl	40be30 <log_get_max_level_realm@plt>
  431f8c:	mov	w1, w0
  431f90:	ldr	w0, [sp, #268]
  431f94:	cmp	w0, w1
  431f98:	cset	w0, le
  431f9c:	and	w0, w0, #0xff
  431fa0:	and	x0, x0, #0xff
  431fa4:	cmp	x0, #0x0
  431fa8:	b.eq	431fbc <udev_rule_apply_token_to_event+0x4c0c>  // b.none
  431fac:	add	x0, sp, #0x288
  431fb0:	mov	x1, x0
  431fb4:	ldr	x0, [sp, #1248]
  431fb8:	bl	40aba0 <sd_device_get_sysname@plt>
  431fbc:	adrp	x0, 454000 <__func__.10675+0xa0>
  431fc0:	add	x20, x0, #0xbb
  431fc4:	ldr	x0, [sp, #648]
  431fc8:	cmp	x0, #0x0
  431fcc:	b.eq	431fdc <udev_rule_apply_token_to_event+0x4c2c>  // b.none
  431fd0:	adrp	x0, 454000 <__func__.10675+0xa0>
  431fd4:	add	x19, x0, #0xd8
  431fd8:	b	431fe0 <udev_rule_apply_token_to_event+0x4c30>
  431fdc:	mov	x19, #0x0                   	// #0
  431fe0:	ldr	x21, [sp, #648]
  431fe4:	ldr	x0, [sp, #1240]
  431fe8:	bl	41fb4c <strna>
  431fec:	mov	x2, x0
  431ff0:	ldr	x0, [sp, #1232]
  431ff4:	cmp	x0, #0x0
  431ff8:	b.eq	432008 <udev_rule_apply_token_to_event+0x4c58>  // b.none
  431ffc:	ldr	x0, [sp, #1232]
  432000:	ldr	w0, [x0, #8]
  432004:	b	43200c <udev_rule_apply_token_to_event+0x4c5c>
  432008:	mov	w0, #0x0                   	// #0
  43200c:	add	x1, sp, #0xfd8
  432010:	str	x1, [sp, #40]
  432014:	ldr	x1, [sp, #1208]
  432018:	str	x1, [sp, #32]
  43201c:	str	w0, [sp, #24]
  432020:	str	x2, [sp, #16]
  432024:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432028:	add	x0, x0, #0x200
  43202c:	str	x0, [sp, #8]
  432030:	str	xzr, [sp]
  432034:	mov	x7, #0x0                   	// #0
  432038:	mov	x6, x21
  43203c:	mov	x5, x19
  432040:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432044:	add	x4, x0, #0xa98
  432048:	mov	w3, #0x7cc                 	// #1996
  43204c:	mov	x2, x20
  432050:	ldr	w1, [sp, #272]
  432054:	ldr	w0, [sp, #268]
  432058:	bl	40b020 <log_object_internal@plt>
  43205c:	mov	w19, w0
  432060:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  432064:	ldr	x0, [sp, #704]
  432068:	ldr	x0, [x0, #8]
  43206c:	add	x1, sp, #0xbd8
  432070:	mov	w4, #0x0                   	// #0
  432074:	mov	x3, #0x400                 	// #1024
  432078:	mov	x2, x1
  43207c:	mov	x1, x0
  432080:	ldr	x0, [sp, #136]
  432084:	bl	4185d8 <udev_event_apply_format>
  432088:	ldr	x0, [sp, #704]
  43208c:	ldrsb	w0, [x0, #1]
  432090:	cmp	w0, #0x4
  432094:	b.ne	4320a0 <udev_rule_apply_token_to_event+0x4cf0>  // b.any
  432098:	ldr	x0, [sp, #144]
  43209c:	bl	40b140 <device_cleanup_tags@plt>
  4320a0:	add	x2, sp, #0xbd8
  4320a4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4320a8:	add	x1, x0, #0x388
  4320ac:	mov	x0, x2
  4320b0:	bl	40aeb0 <strspn@plt>
  4320b4:	mov	x1, x0
  4320b8:	add	x0, sp, #0xbd8
  4320bc:	ldrb	w0, [x0, x1]
  4320c0:	cmp	w0, #0x0
  4320c4:	b.eq	432228 <udev_rule_apply_token_to_event+0x4e78>  // b.none
  4320c8:	ldr	x0, [sp, #152]
  4320cc:	str	x0, [sp, #1376]
  4320d0:	ldr	x0, [sp, #1376]
  4320d4:	cmp	x0, #0x0
  4320d8:	b.eq	4320e8 <udev_rule_apply_token_to_event+0x4d38>  // b.none
  4320dc:	ldr	x0, [sp, #1376]
  4320e0:	ldr	x0, [x0, #32]
  4320e4:	b	4320ec <udev_rule_apply_token_to_event+0x4d3c>
  4320e8:	mov	x0, #0x0                   	// #0
  4320ec:	str	x0, [sp, #1384]
  4320f0:	ldr	x0, [sp, #1384]
  4320f4:	cmp	x0, #0x0
  4320f8:	b.eq	432108 <udev_rule_apply_token_to_event+0x4d58>  // b.none
  4320fc:	ldr	x0, [sp, #1384]
  432100:	ldr	x0, [x0, #8]
  432104:	b	43210c <udev_rule_apply_token_to_event+0x4d5c>
  432108:	mov	x0, #0x0                   	// #0
  43210c:	str	x0, [sp, #1392]
  432110:	ldr	x0, [sp, #1384]
  432114:	cmp	x0, #0x0
  432118:	b.eq	432128 <udev_rule_apply_token_to_event+0x4d78>  // b.none
  43211c:	ldr	x0, [sp, #1384]
  432120:	ldr	x0, [x0]
  432124:	b	43212c <udev_rule_apply_token_to_event+0x4d7c>
  432128:	mov	x0, #0x0                   	// #0
  43212c:	str	x0, [sp, #1400]
  432130:	str	xzr, [sp, #648]
  432134:	ldr	x0, [sp, #144]
  432138:	str	x0, [sp, #1408]
  43213c:	mov	w0, #0x3                   	// #3
  432140:	str	w0, [sp, #300]
  432144:	str	wzr, [sp, #304]
  432148:	ldr	x0, [sp, #1408]
  43214c:	cmp	x0, #0x0
  432150:	b.eq	43218c <udev_rule_apply_token_to_event+0x4ddc>  // b.none
  432154:	mov	w0, #0x1                   	// #1
  432158:	bl	40be30 <log_get_max_level_realm@plt>
  43215c:	mov	w1, w0
  432160:	ldr	w0, [sp, #300]
  432164:	cmp	w0, w1
  432168:	cset	w0, le
  43216c:	and	w0, w0, #0xff
  432170:	and	x0, x0, #0xff
  432174:	cmp	x0, #0x0
  432178:	b.eq	43218c <udev_rule_apply_token_to_event+0x4ddc>  // b.none
  43217c:	add	x0, sp, #0x288
  432180:	mov	x1, x0
  432184:	ldr	x0, [sp, #1408]
  432188:	bl	40aba0 <sd_device_get_sysname@plt>
  43218c:	adrp	x0, 454000 <__func__.10675+0xa0>
  432190:	add	x20, x0, #0xbb
  432194:	ldr	x0, [sp, #648]
  432198:	cmp	x0, #0x0
  43219c:	b.eq	4321ac <udev_rule_apply_token_to_event+0x4dfc>  // b.none
  4321a0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4321a4:	add	x19, x0, #0xd8
  4321a8:	b	4321b0 <udev_rule_apply_token_to_event+0x4e00>
  4321ac:	mov	x19, #0x0                   	// #0
  4321b0:	ldr	x21, [sp, #648]
  4321b4:	ldr	x0, [sp, #1400]
  4321b8:	bl	41fb4c <strna>
  4321bc:	mov	x2, x0
  4321c0:	ldr	x0, [sp, #1392]
  4321c4:	cmp	x0, #0x0
  4321c8:	b.eq	4321d8 <udev_rule_apply_token_to_event+0x4e28>  // b.none
  4321cc:	ldr	x0, [sp, #1392]
  4321d0:	ldr	w0, [x0, #8]
  4321d4:	b	4321dc <udev_rule_apply_token_to_event+0x4e2c>
  4321d8:	mov	w0, #0x0                   	// #0
  4321dc:	add	x1, sp, #0xbd8
  4321e0:	str	x1, [sp, #32]
  4321e4:	str	w0, [sp, #24]
  4321e8:	str	x2, [sp, #16]
  4321ec:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4321f0:	add	x0, x0, #0x3d0
  4321f4:	str	x0, [sp, #8]
  4321f8:	str	xzr, [sp]
  4321fc:	mov	x7, #0x0                   	// #0
  432200:	mov	x6, x21
  432204:	mov	x5, x19
  432208:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43220c:	add	x4, x0, #0xa98
  432210:	mov	w3, #0x7d5                 	// #2005
  432214:	mov	x2, x20
  432218:	ldr	w1, [sp, #304]
  43221c:	ldr	w0, [sp, #300]
  432220:	bl	40b020 <log_object_internal@plt>
  432224:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  432228:	ldr	x0, [sp, #704]
  43222c:	ldrsb	w0, [x0, #1]
  432230:	cmp	w0, #0x3
  432234:	b.ne	43224c <udev_rule_apply_token_to_event+0x4e9c>  // b.any
  432238:	add	x0, sp, #0xbd8
  43223c:	mov	x1, x0
  432240:	ldr	x0, [sp, #144]
  432244:	bl	40a5e0 <device_remove_tag@plt>
  432248:	b	433b20 <udev_rule_apply_token_to_event+0x6770>
  43224c:	add	x0, sp, #0xbd8
  432250:	mov	x1, x0
  432254:	ldr	x0, [sp, #144]
  432258:	bl	40b520 <device_add_tag@plt>
  43225c:	str	w0, [sp, #168]
  432260:	ldr	w0, [sp, #168]
  432264:	cmp	w0, #0x0
  432268:	b.ge	433b20 <udev_rule_apply_token_to_event+0x6770>  // b.tcont
  43226c:	ldr	x0, [sp, #152]
  432270:	str	x0, [sp, #1336]
  432274:	ldr	x0, [sp, #1336]
  432278:	cmp	x0, #0x0
  43227c:	b.eq	43228c <udev_rule_apply_token_to_event+0x4edc>  // b.none
  432280:	ldr	x0, [sp, #1336]
  432284:	ldr	x0, [x0, #32]
  432288:	b	432290 <udev_rule_apply_token_to_event+0x4ee0>
  43228c:	mov	x0, #0x0                   	// #0
  432290:	str	x0, [sp, #1344]
  432294:	ldr	x0, [sp, #1344]
  432298:	cmp	x0, #0x0
  43229c:	b.eq	4322ac <udev_rule_apply_token_to_event+0x4efc>  // b.none
  4322a0:	ldr	x0, [sp, #1344]
  4322a4:	ldr	x0, [x0, #8]
  4322a8:	b	4322b0 <udev_rule_apply_token_to_event+0x4f00>
  4322ac:	mov	x0, #0x0                   	// #0
  4322b0:	str	x0, [sp, #1352]
  4322b4:	ldr	x0, [sp, #1344]
  4322b8:	cmp	x0, #0x0
  4322bc:	b.eq	4322cc <udev_rule_apply_token_to_event+0x4f1c>  // b.none
  4322c0:	ldr	x0, [sp, #1344]
  4322c4:	ldr	x0, [x0]
  4322c8:	b	4322d0 <udev_rule_apply_token_to_event+0x4f20>
  4322cc:	mov	x0, #0x0                   	// #0
  4322d0:	str	x0, [sp, #1360]
  4322d4:	str	xzr, [sp, #648]
  4322d8:	ldr	x0, [sp, #144]
  4322dc:	str	x0, [sp, #1368]
  4322e0:	mov	w0, #0x3                   	// #3
  4322e4:	str	w0, [sp, #292]
  4322e8:	ldr	w0, [sp, #168]
  4322ec:	str	w0, [sp, #296]
  4322f0:	ldr	x0, [sp, #1368]
  4322f4:	cmp	x0, #0x0
  4322f8:	b.eq	432334 <udev_rule_apply_token_to_event+0x4f84>  // b.none
  4322fc:	mov	w0, #0x1                   	// #1
  432300:	bl	40be30 <log_get_max_level_realm@plt>
  432304:	mov	w1, w0
  432308:	ldr	w0, [sp, #292]
  43230c:	cmp	w0, w1
  432310:	cset	w0, le
  432314:	and	w0, w0, #0xff
  432318:	and	x0, x0, #0xff
  43231c:	cmp	x0, #0x0
  432320:	b.eq	432334 <udev_rule_apply_token_to_event+0x4f84>  // b.none
  432324:	add	x0, sp, #0x288
  432328:	mov	x1, x0
  43232c:	ldr	x0, [sp, #1368]
  432330:	bl	40aba0 <sd_device_get_sysname@plt>
  432334:	adrp	x0, 454000 <__func__.10675+0xa0>
  432338:	add	x20, x0, #0xbb
  43233c:	ldr	x0, [sp, #648]
  432340:	cmp	x0, #0x0
  432344:	b.eq	432354 <udev_rule_apply_token_to_event+0x4fa4>  // b.none
  432348:	adrp	x0, 454000 <__func__.10675+0xa0>
  43234c:	add	x19, x0, #0xd8
  432350:	b	432358 <udev_rule_apply_token_to_event+0x4fa8>
  432354:	mov	x19, #0x0                   	// #0
  432358:	ldr	x21, [sp, #648]
  43235c:	ldr	x0, [sp, #1360]
  432360:	bl	41fb4c <strna>
  432364:	mov	x2, x0
  432368:	ldr	x0, [sp, #1352]
  43236c:	cmp	x0, #0x0
  432370:	b.eq	432380 <udev_rule_apply_token_to_event+0x4fd0>  // b.none
  432374:	ldr	x0, [sp, #1352]
  432378:	ldr	w0, [x0, #8]
  43237c:	b	432384 <udev_rule_apply_token_to_event+0x4fd4>
  432380:	mov	w0, #0x0                   	// #0
  432384:	add	x1, sp, #0xbd8
  432388:	str	x1, [sp, #32]
  43238c:	str	w0, [sp, #24]
  432390:	str	x2, [sp, #16]
  432394:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432398:	add	x0, x0, #0x3f8
  43239c:	str	x0, [sp, #8]
  4323a0:	str	xzr, [sp]
  4323a4:	mov	x7, #0x0                   	// #0
  4323a8:	mov	x6, x21
  4323ac:	mov	x5, x19
  4323b0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4323b4:	add	x4, x0, #0xa98
  4323b8:	mov	w3, #0x7dd                 	// #2013
  4323bc:	mov	x2, x20
  4323c0:	ldr	w1, [sp, #296]
  4323c4:	ldr	w0, [sp, #292]
  4323c8:	bl	40b020 <log_object_internal@plt>
  4323cc:	mov	w19, w0
  4323d0:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  4323d4:	ldr	x0, [sp, #136]
  4323d8:	ldrb	w0, [x0, #105]
  4323dc:	and	w0, w0, #0x20
  4323e0:	and	w0, w0, #0xff
  4323e4:	cmp	w0, #0x0
  4323e8:	b.ne	433b28 <udev_rule_apply_token_to_event+0x6778>  // b.any
  4323ec:	ldr	x0, [sp, #704]
  4323f0:	ldrsb	w0, [x0, #1]
  4323f4:	cmp	w0, #0x5
  4323f8:	b.ne	43240c <udev_rule_apply_token_to_event+0x505c>  // b.any
  4323fc:	ldr	x0, [sp, #136]
  432400:	ldrb	w1, [x0, #105]
  432404:	orr	w1, w1, #0x20
  432408:	strb	w1, [x0, #105]
  43240c:	ldr	x0, [sp, #704]
  432410:	ldr	x0, [x0, #8]
  432414:	add	x1, sp, #0xbd8
  432418:	mov	w4, #0x0                   	// #0
  43241c:	mov	x3, #0x400                 	// #1024
  432420:	mov	x2, x1
  432424:	mov	x1, x0
  432428:	ldr	x0, [sp, #136]
  43242c:	bl	4185d8 <udev_event_apply_format>
  432430:	strb	wzr, [sp, #164]
  432434:	ldr	x0, [sp, #136]
  432438:	ldrsb	w0, [x0, #104]
  43243c:	cmp	w0, #0x0
  432440:	b.eq	43244c <udev_rule_apply_token_to_event+0x509c>  // b.none
  432444:	cmp	w0, #0x2
  432448:	b.ne	432454 <udev_rule_apply_token_to_event+0x50a4>  // b.any
  43244c:	mov	w0, #0x1                   	// #1
  432450:	strb	w0, [sp, #164]
  432454:	nop
  432458:	ldrb	w0, [sp, #164]
  43245c:	cmp	w0, #0x0
  432460:	b.eq	4325f0 <udev_rule_apply_token_to_event+0x5240>  // b.none
  432464:	add	x2, sp, #0xbd8
  432468:	adrp	x0, 454000 <__func__.10675+0xa0>
  43246c:	add	x1, x0, #0xf20
  432470:	mov	x0, x2
  432474:	bl	40a7d0 <util_replace_chars@plt>
  432478:	str	x0, [sp, #656]
  43247c:	ldr	x0, [sp, #656]
  432480:	cmp	x0, #0x0
  432484:	b.eq	4325f0 <udev_rule_apply_token_to_event+0x5240>  // b.none
  432488:	ldr	x0, [sp, #152]
  43248c:	str	x0, [sp, #1088]
  432490:	ldr	x0, [sp, #1088]
  432494:	cmp	x0, #0x0
  432498:	b.eq	4324a8 <udev_rule_apply_token_to_event+0x50f8>  // b.none
  43249c:	ldr	x0, [sp, #1088]
  4324a0:	ldr	x0, [x0, #32]
  4324a4:	b	4324ac <udev_rule_apply_token_to_event+0x50fc>
  4324a8:	mov	x0, #0x0                   	// #0
  4324ac:	str	x0, [sp, #1096]
  4324b0:	ldr	x0, [sp, #1096]
  4324b4:	cmp	x0, #0x0
  4324b8:	b.eq	4324c8 <udev_rule_apply_token_to_event+0x5118>  // b.none
  4324bc:	ldr	x0, [sp, #1096]
  4324c0:	ldr	x0, [x0, #8]
  4324c4:	b	4324cc <udev_rule_apply_token_to_event+0x511c>
  4324c8:	mov	x0, #0x0                   	// #0
  4324cc:	str	x0, [sp, #1104]
  4324d0:	ldr	x0, [sp, #1096]
  4324d4:	cmp	x0, #0x0
  4324d8:	b.eq	4324e8 <udev_rule_apply_token_to_event+0x5138>  // b.none
  4324dc:	ldr	x0, [sp, #1096]
  4324e0:	ldr	x0, [x0]
  4324e4:	b	4324ec <udev_rule_apply_token_to_event+0x513c>
  4324e8:	mov	x0, #0x0                   	// #0
  4324ec:	str	x0, [sp, #1112]
  4324f0:	str	xzr, [sp, #648]
  4324f4:	ldr	x0, [sp, #144]
  4324f8:	str	x0, [sp, #1120]
  4324fc:	mov	w0, #0x7                   	// #7
  432500:	str	w0, [sp, #244]
  432504:	str	wzr, [sp, #248]
  432508:	ldr	x0, [sp, #1120]
  43250c:	cmp	x0, #0x0
  432510:	b.eq	43254c <udev_rule_apply_token_to_event+0x519c>  // b.none
  432514:	mov	w0, #0x1                   	// #1
  432518:	bl	40be30 <log_get_max_level_realm@plt>
  43251c:	mov	w1, w0
  432520:	ldr	w0, [sp, #244]
  432524:	cmp	w0, w1
  432528:	cset	w0, le
  43252c:	and	w0, w0, #0xff
  432530:	and	x0, x0, #0xff
  432534:	cmp	x0, #0x0
  432538:	b.eq	43254c <udev_rule_apply_token_to_event+0x519c>  // b.none
  43253c:	add	x0, sp, #0x288
  432540:	mov	x1, x0
  432544:	ldr	x0, [sp, #1120]
  432548:	bl	40aba0 <sd_device_get_sysname@plt>
  43254c:	adrp	x0, 454000 <__func__.10675+0xa0>
  432550:	add	x20, x0, #0xbb
  432554:	ldr	x0, [sp, #648]
  432558:	cmp	x0, #0x0
  43255c:	b.eq	43256c <udev_rule_apply_token_to_event+0x51bc>  // b.none
  432560:	adrp	x0, 454000 <__func__.10675+0xa0>
  432564:	add	x19, x0, #0xd8
  432568:	b	432570 <udev_rule_apply_token_to_event+0x51c0>
  43256c:	mov	x19, #0x0                   	// #0
  432570:	ldr	x21, [sp, #648]
  432574:	ldr	x0, [sp, #1112]
  432578:	bl	41fb4c <strna>
  43257c:	mov	x2, x0
  432580:	ldr	x0, [sp, #1104]
  432584:	cmp	x0, #0x0
  432588:	b.eq	432598 <udev_rule_apply_token_to_event+0x51e8>  // b.none
  43258c:	ldr	x0, [sp, #1104]
  432590:	ldr	w0, [x0, #8]
  432594:	b	43259c <udev_rule_apply_token_to_event+0x51ec>
  432598:	mov	w0, #0x0                   	// #0
  43259c:	ldr	x1, [sp, #704]
  4325a0:	ldr	x1, [x1, #8]
  4325a4:	str	x1, [sp, #40]
  4325a8:	ldr	x1, [sp, #656]
  4325ac:	str	x1, [sp, #32]
  4325b0:	str	w0, [sp, #24]
  4325b4:	str	x2, [sp, #16]
  4325b8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4325bc:	add	x0, x0, #0x420
  4325c0:	str	x0, [sp, #8]
  4325c4:	str	xzr, [sp]
  4325c8:	mov	x7, #0x0                   	// #0
  4325cc:	mov	x6, x21
  4325d0:	mov	x5, x19
  4325d4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4325d8:	add	x4, x0, #0xa98
  4325dc:	mov	w3, #0x7eb                 	// #2027
  4325e0:	mov	x2, x20
  4325e4:	ldr	w1, [sp, #248]
  4325e8:	ldr	w0, [sp, #244]
  4325ec:	bl	40b020 <log_object_internal@plt>
  4325f0:	mov	x1, #0x0                   	// #0
  4325f4:	ldr	x0, [sp, #144]
  4325f8:	bl	40b3d0 <sd_device_get_devnum@plt>
  4325fc:	cmp	w0, #0x0
  432600:	b.lt	4327b4 <udev_rule_apply_token_to_event+0x5404>  // b.tstop
  432604:	add	x0, sp, #0x278
  432608:	mov	x1, x0
  43260c:	ldr	x0, [sp, #144]
  432610:	bl	40a6f0 <sd_device_get_devname@plt>
  432614:	cmp	w0, #0x0
  432618:	b.lt	432650 <udev_rule_apply_token_to_event+0x52a0>  // b.tstop
  43261c:	ldr	x2, [sp, #632]
  432620:	adrp	x0, 454000 <__func__.10675+0xa0>
  432624:	add	x1, x0, #0xe70
  432628:	mov	x0, x2
  43262c:	bl	41fbb0 <startswith>
  432630:	mov	x1, x0
  432634:	add	x0, sp, #0xbd8
  432638:	bl	41faf8 <streq_ptr>
  43263c:	and	w0, w0, #0xff
  432640:	eor	w0, w0, #0x1
  432644:	and	w0, w0, #0xff
  432648:	cmp	w0, #0x0
  43264c:	b.eq	4327b4 <udev_rule_apply_token_to_event+0x5404>  // b.none
  432650:	ldr	x0, [sp, #152]
  432654:	str	x0, [sp, #1128]
  432658:	ldr	x0, [sp, #1128]
  43265c:	cmp	x0, #0x0
  432660:	b.eq	432670 <udev_rule_apply_token_to_event+0x52c0>  // b.none
  432664:	ldr	x0, [sp, #1128]
  432668:	ldr	x0, [x0, #32]
  43266c:	b	432674 <udev_rule_apply_token_to_event+0x52c4>
  432670:	mov	x0, #0x0                   	// #0
  432674:	str	x0, [sp, #1136]
  432678:	ldr	x0, [sp, #1136]
  43267c:	cmp	x0, #0x0
  432680:	b.eq	432690 <udev_rule_apply_token_to_event+0x52e0>  // b.none
  432684:	ldr	x0, [sp, #1136]
  432688:	ldr	x0, [x0, #8]
  43268c:	b	432694 <udev_rule_apply_token_to_event+0x52e4>
  432690:	mov	x0, #0x0                   	// #0
  432694:	str	x0, [sp, #1144]
  432698:	ldr	x0, [sp, #1136]
  43269c:	cmp	x0, #0x0
  4326a0:	b.eq	4326b0 <udev_rule_apply_token_to_event+0x5300>  // b.none
  4326a4:	ldr	x0, [sp, #1136]
  4326a8:	ldr	x0, [x0]
  4326ac:	b	4326b4 <udev_rule_apply_token_to_event+0x5304>
  4326b0:	mov	x0, #0x0                   	// #0
  4326b4:	str	x0, [sp, #1152]
  4326b8:	str	xzr, [sp, #648]
  4326bc:	ldr	x0, [sp, #144]
  4326c0:	str	x0, [sp, #1160]
  4326c4:	mov	w0, #0x3                   	// #3
  4326c8:	str	w0, [sp, #252]
  4326cc:	str	wzr, [sp, #256]
  4326d0:	ldr	x0, [sp, #1160]
  4326d4:	cmp	x0, #0x0
  4326d8:	b.eq	432714 <udev_rule_apply_token_to_event+0x5364>  // b.none
  4326dc:	mov	w0, #0x1                   	// #1
  4326e0:	bl	40be30 <log_get_max_level_realm@plt>
  4326e4:	mov	w1, w0
  4326e8:	ldr	w0, [sp, #252]
  4326ec:	cmp	w0, w1
  4326f0:	cset	w0, le
  4326f4:	and	w0, w0, #0xff
  4326f8:	and	x0, x0, #0xff
  4326fc:	cmp	x0, #0x0
  432700:	b.eq	432714 <udev_rule_apply_token_to_event+0x5364>  // b.none
  432704:	add	x0, sp, #0x288
  432708:	mov	x1, x0
  43270c:	ldr	x0, [sp, #1160]
  432710:	bl	40aba0 <sd_device_get_sysname@plt>
  432714:	adrp	x0, 454000 <__func__.10675+0xa0>
  432718:	add	x20, x0, #0xbb
  43271c:	ldr	x0, [sp, #648]
  432720:	cmp	x0, #0x0
  432724:	b.eq	432734 <udev_rule_apply_token_to_event+0x5384>  // b.none
  432728:	adrp	x0, 454000 <__func__.10675+0xa0>
  43272c:	add	x19, x0, #0xd8
  432730:	b	432738 <udev_rule_apply_token_to_event+0x5388>
  432734:	mov	x19, #0x0                   	// #0
  432738:	ldr	x21, [sp, #648]
  43273c:	ldr	x0, [sp, #1152]
  432740:	bl	41fb4c <strna>
  432744:	mov	x2, x0
  432748:	ldr	x0, [sp, #1144]
  43274c:	cmp	x0, #0x0
  432750:	b.eq	432760 <udev_rule_apply_token_to_event+0x53b0>  // b.none
  432754:	ldr	x0, [sp, #1144]
  432758:	ldr	w0, [x0, #8]
  43275c:	b	432764 <udev_rule_apply_token_to_event+0x53b4>
  432760:	mov	w0, #0x0                   	// #0
  432764:	ldr	x1, [sp, #704]
  432768:	ldr	x1, [x1, #8]
  43276c:	str	x1, [sp, #32]
  432770:	str	w0, [sp, #24]
  432774:	str	x2, [sp, #16]
  432778:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43277c:	add	x0, x0, #0x460
  432780:	str	x0, [sp, #8]
  432784:	str	xzr, [sp]
  432788:	mov	x7, #0x0                   	// #0
  43278c:	mov	x6, x21
  432790:	mov	x5, x19
  432794:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432798:	add	x4, x0, #0xa98
  43279c:	mov	w3, #0x7f1                 	// #2033
  4327a0:	mov	x2, x20
  4327a4:	ldr	w1, [sp, #256]
  4327a8:	ldr	w0, [sp, #252]
  4327ac:	bl	40b020 <log_object_internal@plt>
  4327b0:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  4327b4:	ldr	x0, [sp, #136]
  4327b8:	add	x0, x0, #0x18
  4327bc:	add	x1, sp, #0xbd8
  4327c0:	bl	40a810 <free_and_strdup@plt>
  4327c4:	cmp	w0, #0x0
  4327c8:	b.ge	4327f0 <udev_rule_apply_token_to_event+0x5440>  // b.tcont
  4327cc:	adrp	x0, 454000 <__func__.10675+0xa0>
  4327d0:	add	x1, x0, #0xbb
  4327d4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4327d8:	add	x3, x0, #0xa98
  4327dc:	mov	w2, #0x7f7                 	// #2039
  4327e0:	mov	w0, #0x1                   	// #1
  4327e4:	bl	40bda0 <log_oom_internal@plt>
  4327e8:	mov	w19, w0
  4327ec:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  4327f0:	ldr	x0, [sp, #152]
  4327f4:	str	x0, [sp, #1168]
  4327f8:	ldr	x0, [sp, #1168]
  4327fc:	cmp	x0, #0x0
  432800:	b.eq	432810 <udev_rule_apply_token_to_event+0x5460>  // b.none
  432804:	ldr	x0, [sp, #1168]
  432808:	ldr	x0, [x0, #32]
  43280c:	b	432814 <udev_rule_apply_token_to_event+0x5464>
  432810:	mov	x0, #0x0                   	// #0
  432814:	str	x0, [sp, #1176]
  432818:	ldr	x0, [sp, #1176]
  43281c:	cmp	x0, #0x0
  432820:	b.eq	432830 <udev_rule_apply_token_to_event+0x5480>  // b.none
  432824:	ldr	x0, [sp, #1176]
  432828:	ldr	x0, [x0, #8]
  43282c:	b	432834 <udev_rule_apply_token_to_event+0x5484>
  432830:	mov	x0, #0x0                   	// #0
  432834:	str	x0, [sp, #1184]
  432838:	ldr	x0, [sp, #1176]
  43283c:	cmp	x0, #0x0
  432840:	b.eq	432850 <udev_rule_apply_token_to_event+0x54a0>  // b.none
  432844:	ldr	x0, [sp, #1176]
  432848:	ldr	x0, [x0]
  43284c:	b	432854 <udev_rule_apply_token_to_event+0x54a4>
  432850:	mov	x0, #0x0                   	// #0
  432854:	str	x0, [sp, #1192]
  432858:	str	xzr, [sp, #648]
  43285c:	ldr	x0, [sp, #144]
  432860:	str	x0, [sp, #1200]
  432864:	mov	w0, #0x7                   	// #7
  432868:	str	w0, [sp, #260]
  43286c:	str	wzr, [sp, #264]
  432870:	ldr	x0, [sp, #1200]
  432874:	cmp	x0, #0x0
  432878:	b.eq	4328b4 <udev_rule_apply_token_to_event+0x5504>  // b.none
  43287c:	mov	w0, #0x1                   	// #1
  432880:	bl	40be30 <log_get_max_level_realm@plt>
  432884:	mov	w1, w0
  432888:	ldr	w0, [sp, #260]
  43288c:	cmp	w0, w1
  432890:	cset	w0, le
  432894:	and	w0, w0, #0xff
  432898:	and	x0, x0, #0xff
  43289c:	cmp	x0, #0x0
  4328a0:	b.eq	4328b4 <udev_rule_apply_token_to_event+0x5504>  // b.none
  4328a4:	add	x0, sp, #0x288
  4328a8:	mov	x1, x0
  4328ac:	ldr	x0, [sp, #1200]
  4328b0:	bl	40aba0 <sd_device_get_sysname@plt>
  4328b4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4328b8:	add	x20, x0, #0xbb
  4328bc:	ldr	x0, [sp, #648]
  4328c0:	cmp	x0, #0x0
  4328c4:	b.eq	4328d4 <udev_rule_apply_token_to_event+0x5524>  // b.none
  4328c8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4328cc:	add	x19, x0, #0xd8
  4328d0:	b	4328d8 <udev_rule_apply_token_to_event+0x5528>
  4328d4:	mov	x19, #0x0                   	// #0
  4328d8:	ldr	x21, [sp, #648]
  4328dc:	ldr	x0, [sp, #1192]
  4328e0:	bl	41fb4c <strna>
  4328e4:	mov	x2, x0
  4328e8:	ldr	x0, [sp, #1184]
  4328ec:	cmp	x0, #0x0
  4328f0:	b.eq	432900 <udev_rule_apply_token_to_event+0x5550>  // b.none
  4328f4:	ldr	x0, [sp, #1184]
  4328f8:	ldr	w0, [x0, #8]
  4328fc:	b	432904 <udev_rule_apply_token_to_event+0x5554>
  432900:	mov	w0, #0x0                   	// #0
  432904:	ldr	x1, [sp, #136]
  432908:	ldr	x1, [x1, #24]
  43290c:	str	x1, [sp, #32]
  432910:	str	w0, [sp, #24]
  432914:	str	x2, [sp, #16]
  432918:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43291c:	add	x0, x0, #0x4b0
  432920:	str	x0, [sp, #8]
  432924:	str	xzr, [sp]
  432928:	mov	x7, #0x0                   	// #0
  43292c:	mov	x6, x21
  432930:	mov	x5, x19
  432934:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432938:	add	x4, x0, #0xa98
  43293c:	mov	w3, #0x7f9                 	// #2041
  432940:	mov	x2, x20
  432944:	ldr	w1, [sp, #264]
  432948:	ldr	w0, [sp, #260]
  43294c:	bl	40b020 <log_object_internal@plt>
  432950:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  432954:	ldr	x0, [sp, #136]
  432958:	ldrb	w0, [x0, #105]
  43295c:	and	w0, w0, #0x40
  432960:	and	w0, w0, #0xff
  432964:	cmp	w0, #0x0
  432968:	b.ne	433b30 <udev_rule_apply_token_to_event+0x6780>  // b.any
  43296c:	mov	x1, #0x0                   	// #0
  432970:	ldr	x0, [sp, #144]
  432974:	bl	40b3d0 <sd_device_get_devnum@plt>
  432978:	cmp	w0, #0x0
  43297c:	b.lt	433b38 <udev_rule_apply_token_to_event+0x6788>  // b.tstop
  432980:	ldr	x0, [sp, #704]
  432984:	ldrsb	w0, [x0, #1]
  432988:	cmp	w0, #0x5
  43298c:	b.ne	4329a0 <udev_rule_apply_token_to_event+0x55f0>  // b.any
  432990:	ldr	x0, [sp, #136]
  432994:	ldrb	w1, [x0, #105]
  432998:	orr	w1, w1, #0x40
  43299c:	strb	w1, [x0, #105]
  4329a0:	strb	wzr, [sp, #165]
  4329a4:	ldr	x0, [sp, #704]
  4329a8:	ldrsb	w0, [x0, #1]
  4329ac:	sub	w0, w0, #0x4
  4329b0:	cmp	w0, #0x1
  4329b4:	b.hi	4329c0 <udev_rule_apply_token_to_event+0x5610>  // b.pmore
  4329b8:	mov	w0, #0x1                   	// #1
  4329bc:	strb	w0, [sp, #165]
  4329c0:	nop
  4329c4:	ldrb	w0, [sp, #165]
  4329c8:	cmp	w0, #0x0
  4329cc:	b.eq	4329d8 <udev_rule_apply_token_to_event+0x5628>  // b.none
  4329d0:	ldr	x0, [sp, #144]
  4329d4:	bl	40a440 <device_cleanup_devlinks@plt>
  4329d8:	ldr	x0, [sp, #704]
  4329dc:	ldr	x1, [x0, #8]
  4329e0:	ldr	x0, [sp, #136]
  4329e4:	ldrsb	w0, [x0, #104]
  4329e8:	cmp	w0, #0x1
  4329ec:	cset	w0, ne  // ne = any
  4329f0:	and	w2, w0, #0xff
  4329f4:	add	x0, sp, #0xbd8
  4329f8:	mov	w4, w2
  4329fc:	mov	x3, #0x400                 	// #1024
  432a00:	mov	x2, x0
  432a04:	ldr	x0, [sp, #136]
  432a08:	bl	4185d8 <udev_event_apply_format>
  432a0c:	ldr	x0, [sp, #136]
  432a10:	ldrsb	w0, [x0, #104]
  432a14:	cmp	w0, #0x0
  432a18:	b.ne	432a38 <udev_rule_apply_token_to_event+0x5688>  // b.any
  432a1c:	add	x2, sp, #0xbd8
  432a20:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432a24:	add	x1, x0, #0x4c0
  432a28:	mov	x0, x2
  432a2c:	bl	40a7d0 <util_replace_chars@plt>
  432a30:	str	x0, [sp, #656]
  432a34:	b	432a68 <udev_rule_apply_token_to_event+0x56b8>
  432a38:	ldr	x0, [sp, #136]
  432a3c:	ldrsb	w0, [x0, #104]
  432a40:	cmp	w0, #0x2
  432a44:	b.ne	432a64 <udev_rule_apply_token_to_event+0x56b4>  // b.any
  432a48:	add	x2, sp, #0xbd8
  432a4c:	adrp	x0, 454000 <__func__.10675+0xa0>
  432a50:	add	x1, x0, #0xf20
  432a54:	mov	x0, x2
  432a58:	bl	40a7d0 <util_replace_chars@plt>
  432a5c:	str	x0, [sp, #656]
  432a60:	b	432a68 <udev_rule_apply_token_to_event+0x56b8>
  432a64:	str	xzr, [sp, #656]
  432a68:	ldr	x0, [sp, #656]
  432a6c:	cmp	x0, #0x0
  432a70:	b.eq	432bd0 <udev_rule_apply_token_to_event+0x5820>  // b.none
  432a74:	ldr	x0, [sp, #152]
  432a78:	str	x0, [sp, #968]
  432a7c:	ldr	x0, [sp, #968]
  432a80:	cmp	x0, #0x0
  432a84:	b.eq	432a94 <udev_rule_apply_token_to_event+0x56e4>  // b.none
  432a88:	ldr	x0, [sp, #968]
  432a8c:	ldr	x0, [x0, #32]
  432a90:	b	432a98 <udev_rule_apply_token_to_event+0x56e8>
  432a94:	mov	x0, #0x0                   	// #0
  432a98:	str	x0, [sp, #976]
  432a9c:	ldr	x0, [sp, #976]
  432aa0:	cmp	x0, #0x0
  432aa4:	b.eq	432ab4 <udev_rule_apply_token_to_event+0x5704>  // b.none
  432aa8:	ldr	x0, [sp, #976]
  432aac:	ldr	x0, [x0, #8]
  432ab0:	b	432ab8 <udev_rule_apply_token_to_event+0x5708>
  432ab4:	mov	x0, #0x0                   	// #0
  432ab8:	str	x0, [sp, #984]
  432abc:	ldr	x0, [sp, #976]
  432ac0:	cmp	x0, #0x0
  432ac4:	b.eq	432ad4 <udev_rule_apply_token_to_event+0x5724>  // b.none
  432ac8:	ldr	x0, [sp, #976]
  432acc:	ldr	x0, [x0]
  432ad0:	b	432ad8 <udev_rule_apply_token_to_event+0x5728>
  432ad4:	mov	x0, #0x0                   	// #0
  432ad8:	str	x0, [sp, #992]
  432adc:	str	xzr, [sp, #648]
  432ae0:	ldr	x0, [sp, #144]
  432ae4:	str	x0, [sp, #1000]
  432ae8:	mov	w0, #0x7                   	// #7
  432aec:	str	w0, [sp, #220]
  432af0:	str	wzr, [sp, #224]
  432af4:	ldr	x0, [sp, #1000]
  432af8:	cmp	x0, #0x0
  432afc:	b.eq	432b38 <udev_rule_apply_token_to_event+0x5788>  // b.none
  432b00:	mov	w0, #0x1                   	// #1
  432b04:	bl	40be30 <log_get_max_level_realm@plt>
  432b08:	mov	w1, w0
  432b0c:	ldr	w0, [sp, #220]
  432b10:	cmp	w0, w1
  432b14:	cset	w0, le
  432b18:	and	w0, w0, #0xff
  432b1c:	and	x0, x0, #0xff
  432b20:	cmp	x0, #0x0
  432b24:	b.eq	432b38 <udev_rule_apply_token_to_event+0x5788>  // b.none
  432b28:	add	x0, sp, #0x288
  432b2c:	mov	x1, x0
  432b30:	ldr	x0, [sp, #1000]
  432b34:	bl	40aba0 <sd_device_get_sysname@plt>
  432b38:	adrp	x0, 454000 <__func__.10675+0xa0>
  432b3c:	add	x20, x0, #0xbb
  432b40:	ldr	x0, [sp, #648]
  432b44:	cmp	x0, #0x0
  432b48:	b.eq	432b58 <udev_rule_apply_token_to_event+0x57a8>  // b.none
  432b4c:	adrp	x0, 454000 <__func__.10675+0xa0>
  432b50:	add	x19, x0, #0xd8
  432b54:	b	432b5c <udev_rule_apply_token_to_event+0x57ac>
  432b58:	mov	x19, #0x0                   	// #0
  432b5c:	ldr	x21, [sp, #648]
  432b60:	ldr	x0, [sp, #992]
  432b64:	bl	41fb4c <strna>
  432b68:	mov	x2, x0
  432b6c:	ldr	x0, [sp, #984]
  432b70:	cmp	x0, #0x0
  432b74:	b.eq	432b84 <udev_rule_apply_token_to_event+0x57d4>  // b.none
  432b78:	ldr	x0, [sp, #984]
  432b7c:	ldr	w0, [x0, #8]
  432b80:	b	432b88 <udev_rule_apply_token_to_event+0x57d8>
  432b84:	mov	w0, #0x0                   	// #0
  432b88:	ldr	x1, [sp, #656]
  432b8c:	str	x1, [sp, #32]
  432b90:	str	w0, [sp, #24]
  432b94:	str	x2, [sp, #16]
  432b98:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432b9c:	add	x0, x0, #0x4c8
  432ba0:	str	x0, [sp, #8]
  432ba4:	str	xzr, [sp]
  432ba8:	mov	x7, #0x0                   	// #0
  432bac:	mov	x6, x21
  432bb0:	mov	x5, x19
  432bb4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432bb8:	add	x4, x0, #0xa98
  432bbc:	mov	w3, #0x811                 	// #2065
  432bc0:	mov	x2, x20
  432bc4:	ldr	w1, [sp, #224]
  432bc8:	ldr	w0, [sp, #220]
  432bcc:	bl	40b020 <log_object_internal@plt>
  432bd0:	add	x0, sp, #0xbd8
  432bd4:	mov	x1, #0x0                   	// #0
  432bd8:	bl	41fc00 <skip_leading_chars>
  432bdc:	str	x0, [sp, #688]
  432be0:	b	432f2c <udev_rule_apply_token_to_event+0x5b7c>
  432be4:	mov	w1, #0x20                  	// #32
  432be8:	ldr	x0, [sp, #688]
  432bec:	bl	40b850 <strchr@plt>
  432bf0:	str	x0, [sp, #696]
  432bf4:	ldr	x0, [sp, #696]
  432bf8:	cmp	x0, #0x0
  432bfc:	b.eq	432c20 <udev_rule_apply_token_to_event+0x5870>  // b.none
  432c00:	ldr	x0, [sp, #696]
  432c04:	add	x1, x0, #0x1
  432c08:	str	x1, [sp, #696]
  432c0c:	strb	wzr, [x0]
  432c10:	mov	x1, #0x0                   	// #0
  432c14:	ldr	x0, [sp, #696]
  432c18:	bl	41fc00 <skip_leading_chars>
  432c1c:	str	x0, [sp, #696]
  432c20:	add	x5, sp, #0xfd8
  432c24:	mov	x4, #0x0                   	// #0
  432c28:	ldr	x3, [sp, #688]
  432c2c:	adrp	x0, 454000 <__func__.10675+0xa0>
  432c30:	add	x2, x0, #0xe70
  432c34:	mov	x1, #0x400                 	// #1024
  432c38:	mov	x0, x5
  432c3c:	bl	40a790 <strscpyl@plt>
  432c40:	add	x0, sp, #0xfd8
  432c44:	mov	x1, x0
  432c48:	ldr	x0, [sp, #144]
  432c4c:	bl	40a550 <device_add_devlink@plt>
  432c50:	str	w0, [sp, #168]
  432c54:	ldr	w0, [sp, #168]
  432c58:	cmp	w0, #0x0
  432c5c:	b.ge	432dc8 <udev_rule_apply_token_to_event+0x5a18>  // b.tcont
  432c60:	ldr	x0, [sp, #152]
  432c64:	str	x0, [sp, #1048]
  432c68:	ldr	x0, [sp, #1048]
  432c6c:	cmp	x0, #0x0
  432c70:	b.eq	432c80 <udev_rule_apply_token_to_event+0x58d0>  // b.none
  432c74:	ldr	x0, [sp, #1048]
  432c78:	ldr	x0, [x0, #32]
  432c7c:	b	432c84 <udev_rule_apply_token_to_event+0x58d4>
  432c80:	mov	x0, #0x0                   	// #0
  432c84:	str	x0, [sp, #1056]
  432c88:	ldr	x0, [sp, #1056]
  432c8c:	cmp	x0, #0x0
  432c90:	b.eq	432ca0 <udev_rule_apply_token_to_event+0x58f0>  // b.none
  432c94:	ldr	x0, [sp, #1056]
  432c98:	ldr	x0, [x0, #8]
  432c9c:	b	432ca4 <udev_rule_apply_token_to_event+0x58f4>
  432ca0:	mov	x0, #0x0                   	// #0
  432ca4:	str	x0, [sp, #1064]
  432ca8:	ldr	x0, [sp, #1056]
  432cac:	cmp	x0, #0x0
  432cb0:	b.eq	432cc0 <udev_rule_apply_token_to_event+0x5910>  // b.none
  432cb4:	ldr	x0, [sp, #1056]
  432cb8:	ldr	x0, [x0]
  432cbc:	b	432cc4 <udev_rule_apply_token_to_event+0x5914>
  432cc0:	mov	x0, #0x0                   	// #0
  432cc4:	str	x0, [sp, #1072]
  432cc8:	str	xzr, [sp, #648]
  432ccc:	ldr	x0, [sp, #144]
  432cd0:	str	x0, [sp, #1080]
  432cd4:	mov	w0, #0x3                   	// #3
  432cd8:	str	w0, [sp, #236]
  432cdc:	ldr	w0, [sp, #168]
  432ce0:	str	w0, [sp, #240]
  432ce4:	ldr	x0, [sp, #1080]
  432ce8:	cmp	x0, #0x0
  432cec:	b.eq	432d28 <udev_rule_apply_token_to_event+0x5978>  // b.none
  432cf0:	mov	w0, #0x1                   	// #1
  432cf4:	bl	40be30 <log_get_max_level_realm@plt>
  432cf8:	mov	w1, w0
  432cfc:	ldr	w0, [sp, #236]
  432d00:	cmp	w0, w1
  432d04:	cset	w0, le
  432d08:	and	w0, w0, #0xff
  432d0c:	and	x0, x0, #0xff
  432d10:	cmp	x0, #0x0
  432d14:	b.eq	432d28 <udev_rule_apply_token_to_event+0x5978>  // b.none
  432d18:	add	x0, sp, #0x288
  432d1c:	mov	x1, x0
  432d20:	ldr	x0, [sp, #1080]
  432d24:	bl	40aba0 <sd_device_get_sysname@plt>
  432d28:	adrp	x0, 454000 <__func__.10675+0xa0>
  432d2c:	add	x20, x0, #0xbb
  432d30:	ldr	x0, [sp, #648]
  432d34:	cmp	x0, #0x0
  432d38:	b.eq	432d48 <udev_rule_apply_token_to_event+0x5998>  // b.none
  432d3c:	adrp	x0, 454000 <__func__.10675+0xa0>
  432d40:	add	x19, x0, #0xd8
  432d44:	b	432d4c <udev_rule_apply_token_to_event+0x599c>
  432d48:	mov	x19, #0x0                   	// #0
  432d4c:	ldr	x21, [sp, #648]
  432d50:	ldr	x0, [sp, #1072]
  432d54:	bl	41fb4c <strna>
  432d58:	mov	x2, x0
  432d5c:	ldr	x0, [sp, #1064]
  432d60:	cmp	x0, #0x0
  432d64:	b.eq	432d74 <udev_rule_apply_token_to_event+0x59c4>  // b.none
  432d68:	ldr	x0, [sp, #1064]
  432d6c:	ldr	w0, [x0, #8]
  432d70:	b	432d78 <udev_rule_apply_token_to_event+0x59c8>
  432d74:	mov	w0, #0x0                   	// #0
  432d78:	add	x1, sp, #0xfd8
  432d7c:	str	x1, [sp, #32]
  432d80:	str	w0, [sp, #24]
  432d84:	str	x2, [sp, #16]
  432d88:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432d8c:	add	x0, x0, #0x500
  432d90:	str	x0, [sp, #8]
  432d94:	str	xzr, [sp]
  432d98:	mov	x7, #0x0                   	// #0
  432d9c:	mov	x6, x21
  432da0:	mov	x5, x19
  432da4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432da8:	add	x4, x0, #0xa98
  432dac:	mov	w3, #0x820                 	// #2080
  432db0:	mov	x2, x20
  432db4:	ldr	w1, [sp, #240]
  432db8:	ldr	w0, [sp, #236]
  432dbc:	bl	40b020 <log_object_internal@plt>
  432dc0:	mov	w19, w0
  432dc4:	b	433b50 <udev_rule_apply_token_to_event+0x67a0>
  432dc8:	ldr	x0, [sp, #152]
  432dcc:	str	x0, [sp, #1008]
  432dd0:	ldr	x0, [sp, #1008]
  432dd4:	cmp	x0, #0x0
  432dd8:	b.eq	432de8 <udev_rule_apply_token_to_event+0x5a38>  // b.none
  432ddc:	ldr	x0, [sp, #1008]
  432de0:	ldr	x0, [x0, #32]
  432de4:	b	432dec <udev_rule_apply_token_to_event+0x5a3c>
  432de8:	mov	x0, #0x0                   	// #0
  432dec:	str	x0, [sp, #1016]
  432df0:	ldr	x0, [sp, #1016]
  432df4:	cmp	x0, #0x0
  432df8:	b.eq	432e08 <udev_rule_apply_token_to_event+0x5a58>  // b.none
  432dfc:	ldr	x0, [sp, #1016]
  432e00:	ldr	x0, [x0, #8]
  432e04:	b	432e0c <udev_rule_apply_token_to_event+0x5a5c>
  432e08:	mov	x0, #0x0                   	// #0
  432e0c:	str	x0, [sp, #1024]
  432e10:	ldr	x0, [sp, #1016]
  432e14:	cmp	x0, #0x0
  432e18:	b.eq	432e28 <udev_rule_apply_token_to_event+0x5a78>  // b.none
  432e1c:	ldr	x0, [sp, #1016]
  432e20:	ldr	x0, [x0]
  432e24:	b	432e2c <udev_rule_apply_token_to_event+0x5a7c>
  432e28:	mov	x0, #0x0                   	// #0
  432e2c:	str	x0, [sp, #1032]
  432e30:	str	xzr, [sp, #648]
  432e34:	ldr	x0, [sp, #144]
  432e38:	str	x0, [sp, #1040]
  432e3c:	mov	w0, #0x7                   	// #7
  432e40:	str	w0, [sp, #228]
  432e44:	str	wzr, [sp, #232]
  432e48:	ldr	x0, [sp, #1040]
  432e4c:	cmp	x0, #0x0
  432e50:	b.eq	432e8c <udev_rule_apply_token_to_event+0x5adc>  // b.none
  432e54:	mov	w0, #0x1                   	// #1
  432e58:	bl	40be30 <log_get_max_level_realm@plt>
  432e5c:	mov	w1, w0
  432e60:	ldr	w0, [sp, #228]
  432e64:	cmp	w0, w1
  432e68:	cset	w0, le
  432e6c:	and	w0, w0, #0xff
  432e70:	and	x0, x0, #0xff
  432e74:	cmp	x0, #0x0
  432e78:	b.eq	432e8c <udev_rule_apply_token_to_event+0x5adc>  // b.none
  432e7c:	add	x0, sp, #0x288
  432e80:	mov	x1, x0
  432e84:	ldr	x0, [sp, #1040]
  432e88:	bl	40aba0 <sd_device_get_sysname@plt>
  432e8c:	adrp	x0, 454000 <__func__.10675+0xa0>
  432e90:	add	x20, x0, #0xbb
  432e94:	ldr	x0, [sp, #648]
  432e98:	cmp	x0, #0x0
  432e9c:	b.eq	432eac <udev_rule_apply_token_to_event+0x5afc>  // b.none
  432ea0:	adrp	x0, 454000 <__func__.10675+0xa0>
  432ea4:	add	x19, x0, #0xd8
  432ea8:	b	432eb0 <udev_rule_apply_token_to_event+0x5b00>
  432eac:	mov	x19, #0x0                   	// #0
  432eb0:	ldr	x21, [sp, #648]
  432eb4:	ldr	x0, [sp, #1032]
  432eb8:	bl	41fb4c <strna>
  432ebc:	mov	x2, x0
  432ec0:	ldr	x0, [sp, #1024]
  432ec4:	cmp	x0, #0x0
  432ec8:	b.eq	432ed8 <udev_rule_apply_token_to_event+0x5b28>  // b.none
  432ecc:	ldr	x0, [sp, #1024]
  432ed0:	ldr	w0, [x0, #8]
  432ed4:	b	432edc <udev_rule_apply_token_to_event+0x5b2c>
  432ed8:	mov	w0, #0x0                   	// #0
  432edc:	ldr	x1, [sp, #688]
  432ee0:	str	x1, [sp, #32]
  432ee4:	str	w0, [sp, #24]
  432ee8:	str	x2, [sp, #16]
  432eec:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432ef0:	add	x0, x0, #0x528
  432ef4:	str	x0, [sp, #8]
  432ef8:	str	xzr, [sp]
  432efc:	mov	x7, #0x0                   	// #0
  432f00:	mov	x6, x21
  432f04:	mov	x5, x19
  432f08:	adrp	x0, 455000 <__func__.10675+0x10a0>
  432f0c:	add	x4, x0, #0xa98
  432f10:	mov	w3, #0x822                 	// #2082
  432f14:	mov	x2, x20
  432f18:	ldr	w1, [sp, #232]
  432f1c:	ldr	w0, [sp, #228]
  432f20:	bl	40b020 <log_object_internal@plt>
  432f24:	ldr	x0, [sp, #696]
  432f28:	str	x0, [sp, #688]
  432f2c:	ldr	x0, [sp, #688]
  432f30:	bl	41fb70 <isempty>
  432f34:	and	w0, w0, #0xff
  432f38:	eor	w0, w0, #0x1
  432f3c:	and	w0, w0, #0xff
  432f40:	cmp	w0, #0x0
  432f44:	b.ne	432be4 <udev_rule_apply_token_to_event+0x5834>  // b.any
  432f48:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  432f4c:	ldr	x0, [sp, #704]
  432f50:	ldr	x0, [x0, #16]
  432f54:	str	x0, [sp, #840]
  432f58:	add	x0, sp, #0xbd8
  432f5c:	mov	w3, #0x0                   	// #0
  432f60:	mov	x2, #0x400                 	// #1024
  432f64:	mov	x1, x0
  432f68:	ldr	x0, [sp, #840]
  432f6c:	bl	40ba90 <util_resolve_subsys_kernel@plt>
  432f70:	cmp	w0, #0x0
  432f74:	b.ge	432fb8 <udev_rule_apply_token_to_event+0x5c08>  // b.tcont
  432f78:	add	x0, sp, #0x278
  432f7c:	mov	x1, x0
  432f80:	ldr	x0, [sp, #144]
  432f84:	bl	40bd50 <sd_device_get_syspath@plt>
  432f88:	cmp	w0, #0x0
  432f8c:	b.lt	432fb8 <udev_rule_apply_token_to_event+0x5c08>  // b.tstop
  432f90:	ldr	x1, [sp, #632]
  432f94:	add	x6, sp, #0xbd8
  432f98:	mov	x5, #0x0                   	// #0
  432f9c:	ldr	x4, [sp, #840]
  432fa0:	adrp	x0, 454000 <__func__.10675+0xa0>
  432fa4:	add	x3, x0, #0xf20
  432fa8:	mov	x2, x1
  432fac:	mov	x1, #0x400                 	// #1024
  432fb0:	mov	x0, x6
  432fb4:	bl	40a790 <strscpyl@plt>
  432fb8:	add	x0, sp, #0xbd8
  432fbc:	bl	42d188 <attr_subst_subdir>
  432fc0:	str	w0, [sp, #168]
  432fc4:	ldr	w0, [sp, #168]
  432fc8:	cmp	w0, #0x0
  432fcc:	b.ge	433134 <udev_rule_apply_token_to_event+0x5d84>  // b.tcont
  432fd0:	ldr	x0, [sp, #152]
  432fd4:	str	x0, [sp, #928]
  432fd8:	ldr	x0, [sp, #928]
  432fdc:	cmp	x0, #0x0
  432fe0:	b.eq	432ff0 <udev_rule_apply_token_to_event+0x5c40>  // b.none
  432fe4:	ldr	x0, [sp, #928]
  432fe8:	ldr	x0, [x0, #32]
  432fec:	b	432ff4 <udev_rule_apply_token_to_event+0x5c44>
  432ff0:	mov	x0, #0x0                   	// #0
  432ff4:	str	x0, [sp, #936]
  432ff8:	ldr	x0, [sp, #936]
  432ffc:	cmp	x0, #0x0
  433000:	b.eq	433010 <udev_rule_apply_token_to_event+0x5c60>  // b.none
  433004:	ldr	x0, [sp, #936]
  433008:	ldr	x0, [x0, #8]
  43300c:	b	433014 <udev_rule_apply_token_to_event+0x5c64>
  433010:	mov	x0, #0x0                   	// #0
  433014:	str	x0, [sp, #944]
  433018:	ldr	x0, [sp, #936]
  43301c:	cmp	x0, #0x0
  433020:	b.eq	433030 <udev_rule_apply_token_to_event+0x5c80>  // b.none
  433024:	ldr	x0, [sp, #936]
  433028:	ldr	x0, [x0]
  43302c:	b	433034 <udev_rule_apply_token_to_event+0x5c84>
  433030:	mov	x0, #0x0                   	// #0
  433034:	str	x0, [sp, #952]
  433038:	str	xzr, [sp, #648]
  43303c:	ldr	x0, [sp, #144]
  433040:	str	x0, [sp, #960]
  433044:	mov	w0, #0x3                   	// #3
  433048:	str	w0, [sp, #212]
  43304c:	ldr	w0, [sp, #168]
  433050:	str	w0, [sp, #216]
  433054:	ldr	x0, [sp, #960]
  433058:	cmp	x0, #0x0
  43305c:	b.eq	433098 <udev_rule_apply_token_to_event+0x5ce8>  // b.none
  433060:	mov	w0, #0x1                   	// #1
  433064:	bl	40be30 <log_get_max_level_realm@plt>
  433068:	mov	w1, w0
  43306c:	ldr	w0, [sp, #212]
  433070:	cmp	w0, w1
  433074:	cset	w0, le
  433078:	and	w0, w0, #0xff
  43307c:	and	x0, x0, #0xff
  433080:	cmp	x0, #0x0
  433084:	b.eq	433098 <udev_rule_apply_token_to_event+0x5ce8>  // b.none
  433088:	add	x0, sp, #0x288
  43308c:	mov	x1, x0
  433090:	ldr	x0, [sp, #960]
  433094:	bl	40aba0 <sd_device_get_sysname@plt>
  433098:	adrp	x0, 454000 <__func__.10675+0xa0>
  43309c:	add	x20, x0, #0xbb
  4330a0:	ldr	x0, [sp, #648]
  4330a4:	cmp	x0, #0x0
  4330a8:	b.eq	4330b8 <udev_rule_apply_token_to_event+0x5d08>  // b.none
  4330ac:	adrp	x0, 454000 <__func__.10675+0xa0>
  4330b0:	add	x19, x0, #0xd8
  4330b4:	b	4330bc <udev_rule_apply_token_to_event+0x5d0c>
  4330b8:	mov	x19, #0x0                   	// #0
  4330bc:	ldr	x21, [sp, #648]
  4330c0:	ldr	x0, [sp, #952]
  4330c4:	bl	41fb4c <strna>
  4330c8:	mov	x2, x0
  4330cc:	ldr	x0, [sp, #944]
  4330d0:	cmp	x0, #0x0
  4330d4:	b.eq	4330e4 <udev_rule_apply_token_to_event+0x5d34>  // b.none
  4330d8:	ldr	x0, [sp, #944]
  4330dc:	ldr	w0, [x0, #8]
  4330e0:	b	4330e8 <udev_rule_apply_token_to_event+0x5d38>
  4330e4:	mov	w0, #0x0                   	// #0
  4330e8:	add	x1, sp, #0xbd8
  4330ec:	str	x1, [sp, #32]
  4330f0:	str	w0, [sp, #24]
  4330f4:	str	x2, [sp, #16]
  4330f8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4330fc:	add	x0, x0, #0x538
  433100:	str	x0, [sp, #8]
  433104:	str	xzr, [sp]
  433108:	mov	x7, #0x0                   	// #0
  43310c:	mov	x6, x21
  433110:	mov	x5, x19
  433114:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433118:	add	x4, x0, #0xa98
  43311c:	mov	w3, #0x831                 	// #2097
  433120:	mov	x2, x20
  433124:	ldr	w1, [sp, #216]
  433128:	ldr	w0, [sp, #212]
  43312c:	bl	40b020 <log_object_internal@plt>
  433130:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433134:	ldr	x0, [sp, #704]
  433138:	ldr	x0, [x0, #8]
  43313c:	add	x1, sp, #0xfd8
  433140:	mov	w4, #0x0                   	// #0
  433144:	mov	x3, #0x200                 	// #512
  433148:	mov	x2, x1
  43314c:	mov	x1, x0
  433150:	ldr	x0, [sp, #136]
  433154:	bl	4185d8 <udev_event_apply_format>
  433158:	ldr	x0, [sp, #152]
  43315c:	str	x0, [sp, #848]
  433160:	ldr	x0, [sp, #848]
  433164:	cmp	x0, #0x0
  433168:	b.eq	433178 <udev_rule_apply_token_to_event+0x5dc8>  // b.none
  43316c:	ldr	x0, [sp, #848]
  433170:	ldr	x0, [x0, #32]
  433174:	b	43317c <udev_rule_apply_token_to_event+0x5dcc>
  433178:	mov	x0, #0x0                   	// #0
  43317c:	str	x0, [sp, #856]
  433180:	ldr	x0, [sp, #856]
  433184:	cmp	x0, #0x0
  433188:	b.eq	433198 <udev_rule_apply_token_to_event+0x5de8>  // b.none
  43318c:	ldr	x0, [sp, #856]
  433190:	ldr	x0, [x0, #8]
  433194:	b	43319c <udev_rule_apply_token_to_event+0x5dec>
  433198:	mov	x0, #0x0                   	// #0
  43319c:	str	x0, [sp, #864]
  4331a0:	ldr	x0, [sp, #856]
  4331a4:	cmp	x0, #0x0
  4331a8:	b.eq	4331b8 <udev_rule_apply_token_to_event+0x5e08>  // b.none
  4331ac:	ldr	x0, [sp, #856]
  4331b0:	ldr	x0, [x0]
  4331b4:	b	4331bc <udev_rule_apply_token_to_event+0x5e0c>
  4331b8:	mov	x0, #0x0                   	// #0
  4331bc:	str	x0, [sp, #872]
  4331c0:	str	xzr, [sp, #648]
  4331c4:	ldr	x0, [sp, #144]
  4331c8:	str	x0, [sp, #880]
  4331cc:	mov	w0, #0x7                   	// #7
  4331d0:	str	w0, [sp, #196]
  4331d4:	str	wzr, [sp, #200]
  4331d8:	ldr	x0, [sp, #880]
  4331dc:	cmp	x0, #0x0
  4331e0:	b.eq	43321c <udev_rule_apply_token_to_event+0x5e6c>  // b.none
  4331e4:	mov	w0, #0x1                   	// #1
  4331e8:	bl	40be30 <log_get_max_level_realm@plt>
  4331ec:	mov	w1, w0
  4331f0:	ldr	w0, [sp, #196]
  4331f4:	cmp	w0, w1
  4331f8:	cset	w0, le
  4331fc:	and	w0, w0, #0xff
  433200:	and	x0, x0, #0xff
  433204:	cmp	x0, #0x0
  433208:	b.eq	43321c <udev_rule_apply_token_to_event+0x5e6c>  // b.none
  43320c:	add	x0, sp, #0x288
  433210:	mov	x1, x0
  433214:	ldr	x0, [sp, #880]
  433218:	bl	40aba0 <sd_device_get_sysname@plt>
  43321c:	adrp	x0, 454000 <__func__.10675+0xa0>
  433220:	add	x20, x0, #0xbb
  433224:	ldr	x0, [sp, #648]
  433228:	cmp	x0, #0x0
  43322c:	b.eq	43323c <udev_rule_apply_token_to_event+0x5e8c>  // b.none
  433230:	adrp	x0, 454000 <__func__.10675+0xa0>
  433234:	add	x19, x0, #0xd8
  433238:	b	433240 <udev_rule_apply_token_to_event+0x5e90>
  43323c:	mov	x19, #0x0                   	// #0
  433240:	ldr	x21, [sp, #648]
  433244:	ldr	x0, [sp, #872]
  433248:	bl	41fb4c <strna>
  43324c:	mov	x2, x0
  433250:	ldr	x0, [sp, #864]
  433254:	cmp	x0, #0x0
  433258:	b.eq	433268 <udev_rule_apply_token_to_event+0x5eb8>  // b.none
  43325c:	ldr	x0, [sp, #864]
  433260:	ldr	w0, [x0, #8]
  433264:	b	43326c <udev_rule_apply_token_to_event+0x5ebc>
  433268:	mov	w0, #0x0                   	// #0
  43326c:	add	x1, sp, #0xfd8
  433270:	str	x1, [sp, #40]
  433274:	add	x1, sp, #0xbd8
  433278:	str	x1, [sp, #32]
  43327c:	str	w0, [sp, #24]
  433280:	str	x2, [sp, #16]
  433284:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433288:	add	x0, x0, #0x570
  43328c:	str	x0, [sp, #8]
  433290:	str	xzr, [sp]
  433294:	mov	x7, #0x0                   	// #0
  433298:	mov	x6, x21
  43329c:	mov	x5, x19
  4332a0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4332a4:	add	x4, x0, #0xa98
  4332a8:	mov	w3, #0x836                 	// #2102
  4332ac:	mov	x2, x20
  4332b0:	ldr	w1, [sp, #200]
  4332b4:	ldr	w0, [sp, #196]
  4332b8:	bl	40b020 <log_object_internal@plt>
  4332bc:	add	x1, sp, #0xfd8
  4332c0:	add	x0, sp, #0xbd8
  4332c4:	mov	w2, #0x2c                  	// #44
  4332c8:	bl	41fe28 <write_string_file>
  4332cc:	str	w0, [sp, #168]
  4332d0:	ldr	w0, [sp, #168]
  4332d4:	cmp	w0, #0x0
  4332d8:	b.ge	433b40 <udev_rule_apply_token_to_event+0x6790>  // b.tcont
  4332dc:	ldr	x0, [sp, #152]
  4332e0:	str	x0, [sp, #888]
  4332e4:	ldr	x0, [sp, #888]
  4332e8:	cmp	x0, #0x0
  4332ec:	b.eq	4332fc <udev_rule_apply_token_to_event+0x5f4c>  // b.none
  4332f0:	ldr	x0, [sp, #888]
  4332f4:	ldr	x0, [x0, #32]
  4332f8:	b	433300 <udev_rule_apply_token_to_event+0x5f50>
  4332fc:	mov	x0, #0x0                   	// #0
  433300:	str	x0, [sp, #896]
  433304:	ldr	x0, [sp, #896]
  433308:	cmp	x0, #0x0
  43330c:	b.eq	43331c <udev_rule_apply_token_to_event+0x5f6c>  // b.none
  433310:	ldr	x0, [sp, #896]
  433314:	ldr	x0, [x0, #8]
  433318:	b	433320 <udev_rule_apply_token_to_event+0x5f70>
  43331c:	mov	x0, #0x0                   	// #0
  433320:	str	x0, [sp, #904]
  433324:	ldr	x0, [sp, #896]
  433328:	cmp	x0, #0x0
  43332c:	b.eq	43333c <udev_rule_apply_token_to_event+0x5f8c>  // b.none
  433330:	ldr	x0, [sp, #896]
  433334:	ldr	x0, [x0]
  433338:	b	433340 <udev_rule_apply_token_to_event+0x5f90>
  43333c:	mov	x0, #0x0                   	// #0
  433340:	str	x0, [sp, #912]
  433344:	str	xzr, [sp, #648]
  433348:	ldr	x0, [sp, #144]
  43334c:	str	x0, [sp, #920]
  433350:	mov	w0, #0x3                   	// #3
  433354:	str	w0, [sp, #204]
  433358:	ldr	w0, [sp, #168]
  43335c:	str	w0, [sp, #208]
  433360:	ldr	x0, [sp, #920]
  433364:	cmp	x0, #0x0
  433368:	b.eq	4333a4 <udev_rule_apply_token_to_event+0x5ff4>  // b.none
  43336c:	mov	w0, #0x1                   	// #1
  433370:	bl	40be30 <log_get_max_level_realm@plt>
  433374:	mov	w1, w0
  433378:	ldr	w0, [sp, #204]
  43337c:	cmp	w0, w1
  433380:	cset	w0, le
  433384:	and	w0, w0, #0xff
  433388:	and	x0, x0, #0xff
  43338c:	cmp	x0, #0x0
  433390:	b.eq	4333a4 <udev_rule_apply_token_to_event+0x5ff4>  // b.none
  433394:	add	x0, sp, #0x288
  433398:	mov	x1, x0
  43339c:	ldr	x0, [sp, #920]
  4333a0:	bl	40aba0 <sd_device_get_sysname@plt>
  4333a4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4333a8:	add	x20, x0, #0xbb
  4333ac:	ldr	x0, [sp, #648]
  4333b0:	cmp	x0, #0x0
  4333b4:	b.eq	4333c4 <udev_rule_apply_token_to_event+0x6014>  // b.none
  4333b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4333bc:	add	x19, x0, #0xd8
  4333c0:	b	4333c8 <udev_rule_apply_token_to_event+0x6018>
  4333c4:	mov	x19, #0x0                   	// #0
  4333c8:	ldr	x21, [sp, #648]
  4333cc:	ldr	x0, [sp, #912]
  4333d0:	bl	41fb4c <strna>
  4333d4:	mov	x2, x0
  4333d8:	ldr	x0, [sp, #904]
  4333dc:	cmp	x0, #0x0
  4333e0:	b.eq	4333f0 <udev_rule_apply_token_to_event+0x6040>  // b.none
  4333e4:	ldr	x0, [sp, #904]
  4333e8:	ldr	w0, [x0, #8]
  4333ec:	b	4333f4 <udev_rule_apply_token_to_event+0x6044>
  4333f0:	mov	w0, #0x0                   	// #0
  4333f4:	add	x1, sp, #0xbd8
  4333f8:	str	x1, [sp, #32]
  4333fc:	str	w0, [sp, #24]
  433400:	str	x2, [sp, #16]
  433404:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433408:	add	x0, x0, #0x590
  43340c:	str	x0, [sp, #8]
  433410:	str	xzr, [sp]
  433414:	mov	x7, #0x0                   	// #0
  433418:	mov	x6, x21
  43341c:	mov	x5, x19
  433420:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433424:	add	x4, x0, #0xa98
  433428:	mov	w3, #0x839                 	// #2105
  43342c:	mov	x2, x20
  433430:	ldr	w1, [sp, #208]
  433434:	ldr	w0, [sp, #204]
  433438:	bl	40b020 <log_object_internal@plt>
  43343c:	b	433b40 <udev_rule_apply_token_to_event+0x6790>
  433440:	ldr	x0, [sp, #704]
  433444:	ldr	x0, [x0, #16]
  433448:	add	x1, sp, #0xbd8
  43344c:	mov	w4, #0x0                   	// #0
  433450:	mov	x3, #0x400                 	// #1024
  433454:	mov	x2, x1
  433458:	mov	x1, x0
  43345c:	ldr	x0, [sp, #136]
  433460:	bl	4185d8 <udev_event_apply_format>
  433464:	ldr	x0, [sp, #704]
  433468:	ldr	x0, [x0, #8]
  43346c:	add	x1, sp, #0xfd8
  433470:	mov	w4, #0x0                   	// #0
  433474:	mov	x3, #0x200                 	// #512
  433478:	mov	x2, x1
  43347c:	mov	x1, x0
  433480:	ldr	x0, [sp, #136]
  433484:	bl	4185d8 <udev_event_apply_format>
  433488:	add	x0, sp, #0xbd8
  43348c:	bl	40b370 <sysctl_normalize@plt>
  433490:	ldr	x0, [sp, #152]
  433494:	str	x0, [sp, #760]
  433498:	ldr	x0, [sp, #760]
  43349c:	cmp	x0, #0x0
  4334a0:	b.eq	4334b0 <udev_rule_apply_token_to_event+0x6100>  // b.none
  4334a4:	ldr	x0, [sp, #760]
  4334a8:	ldr	x0, [x0, #32]
  4334ac:	b	4334b4 <udev_rule_apply_token_to_event+0x6104>
  4334b0:	mov	x0, #0x0                   	// #0
  4334b4:	str	x0, [sp, #768]
  4334b8:	ldr	x0, [sp, #768]
  4334bc:	cmp	x0, #0x0
  4334c0:	b.eq	4334d0 <udev_rule_apply_token_to_event+0x6120>  // b.none
  4334c4:	ldr	x0, [sp, #768]
  4334c8:	ldr	x0, [x0, #8]
  4334cc:	b	4334d4 <udev_rule_apply_token_to_event+0x6124>
  4334d0:	mov	x0, #0x0                   	// #0
  4334d4:	str	x0, [sp, #776]
  4334d8:	ldr	x0, [sp, #768]
  4334dc:	cmp	x0, #0x0
  4334e0:	b.eq	4334f0 <udev_rule_apply_token_to_event+0x6140>  // b.none
  4334e4:	ldr	x0, [sp, #768]
  4334e8:	ldr	x0, [x0]
  4334ec:	b	4334f4 <udev_rule_apply_token_to_event+0x6144>
  4334f0:	mov	x0, #0x0                   	// #0
  4334f4:	str	x0, [sp, #784]
  4334f8:	str	xzr, [sp, #648]
  4334fc:	ldr	x0, [sp, #144]
  433500:	str	x0, [sp, #792]
  433504:	mov	w0, #0x7                   	// #7
  433508:	str	w0, [sp, #180]
  43350c:	str	wzr, [sp, #184]
  433510:	ldr	x0, [sp, #792]
  433514:	cmp	x0, #0x0
  433518:	b.eq	433554 <udev_rule_apply_token_to_event+0x61a4>  // b.none
  43351c:	mov	w0, #0x1                   	// #1
  433520:	bl	40be30 <log_get_max_level_realm@plt>
  433524:	mov	w1, w0
  433528:	ldr	w0, [sp, #180]
  43352c:	cmp	w0, w1
  433530:	cset	w0, le
  433534:	and	w0, w0, #0xff
  433538:	and	x0, x0, #0xff
  43353c:	cmp	x0, #0x0
  433540:	b.eq	433554 <udev_rule_apply_token_to_event+0x61a4>  // b.none
  433544:	add	x0, sp, #0x288
  433548:	mov	x1, x0
  43354c:	ldr	x0, [sp, #792]
  433550:	bl	40aba0 <sd_device_get_sysname@plt>
  433554:	adrp	x0, 454000 <__func__.10675+0xa0>
  433558:	add	x20, x0, #0xbb
  43355c:	ldr	x0, [sp, #648]
  433560:	cmp	x0, #0x0
  433564:	b.eq	433574 <udev_rule_apply_token_to_event+0x61c4>  // b.none
  433568:	adrp	x0, 454000 <__func__.10675+0xa0>
  43356c:	add	x19, x0, #0xd8
  433570:	b	433578 <udev_rule_apply_token_to_event+0x61c8>
  433574:	mov	x19, #0x0                   	// #0
  433578:	ldr	x21, [sp, #648]
  43357c:	ldr	x0, [sp, #784]
  433580:	bl	41fb4c <strna>
  433584:	mov	x2, x0
  433588:	ldr	x0, [sp, #776]
  43358c:	cmp	x0, #0x0
  433590:	b.eq	4335a0 <udev_rule_apply_token_to_event+0x61f0>  // b.none
  433594:	ldr	x0, [sp, #776]
  433598:	ldr	w0, [x0, #8]
  43359c:	b	4335a4 <udev_rule_apply_token_to_event+0x61f4>
  4335a0:	mov	w0, #0x0                   	// #0
  4335a4:	add	x1, sp, #0xfd8
  4335a8:	str	x1, [sp, #40]
  4335ac:	add	x1, sp, #0xbd8
  4335b0:	str	x1, [sp, #32]
  4335b4:	str	w0, [sp, #24]
  4335b8:	str	x2, [sp, #16]
  4335bc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4335c0:	add	x0, x0, #0x5c0
  4335c4:	str	x0, [sp, #8]
  4335c8:	str	xzr, [sp]
  4335cc:	mov	x7, #0x0                   	// #0
  4335d0:	mov	x6, x21
  4335d4:	mov	x5, x19
  4335d8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4335dc:	add	x4, x0, #0xa98
  4335e0:	mov	w3, #0x842                 	// #2114
  4335e4:	mov	x2, x20
  4335e8:	ldr	w1, [sp, #184]
  4335ec:	ldr	w0, [sp, #180]
  4335f0:	bl	40b020 <log_object_internal@plt>
  4335f4:	add	x1, sp, #0xfd8
  4335f8:	add	x0, sp, #0xbd8
  4335fc:	bl	40ac60 <sysctl_write@plt>
  433600:	str	w0, [sp, #168]
  433604:	ldr	w0, [sp, #168]
  433608:	cmp	w0, #0x0
  43360c:	b.ge	433b48 <udev_rule_apply_token_to_event+0x6798>  // b.tcont
  433610:	ldr	x0, [sp, #152]
  433614:	str	x0, [sp, #800]
  433618:	ldr	x0, [sp, #800]
  43361c:	cmp	x0, #0x0
  433620:	b.eq	433630 <udev_rule_apply_token_to_event+0x6280>  // b.none
  433624:	ldr	x0, [sp, #800]
  433628:	ldr	x0, [x0, #32]
  43362c:	b	433634 <udev_rule_apply_token_to_event+0x6284>
  433630:	mov	x0, #0x0                   	// #0
  433634:	str	x0, [sp, #808]
  433638:	ldr	x0, [sp, #808]
  43363c:	cmp	x0, #0x0
  433640:	b.eq	433650 <udev_rule_apply_token_to_event+0x62a0>  // b.none
  433644:	ldr	x0, [sp, #808]
  433648:	ldr	x0, [x0, #8]
  43364c:	b	433654 <udev_rule_apply_token_to_event+0x62a4>
  433650:	mov	x0, #0x0                   	// #0
  433654:	str	x0, [sp, #816]
  433658:	ldr	x0, [sp, #808]
  43365c:	cmp	x0, #0x0
  433660:	b.eq	433670 <udev_rule_apply_token_to_event+0x62c0>  // b.none
  433664:	ldr	x0, [sp, #808]
  433668:	ldr	x0, [x0]
  43366c:	b	433674 <udev_rule_apply_token_to_event+0x62c4>
  433670:	mov	x0, #0x0                   	// #0
  433674:	str	x0, [sp, #824]
  433678:	str	xzr, [sp, #648]
  43367c:	ldr	x0, [sp, #144]
  433680:	str	x0, [sp, #832]
  433684:	mov	w0, #0x3                   	// #3
  433688:	str	w0, [sp, #188]
  43368c:	ldr	w0, [sp, #168]
  433690:	str	w0, [sp, #192]
  433694:	ldr	x0, [sp, #832]
  433698:	cmp	x0, #0x0
  43369c:	b.eq	4336d8 <udev_rule_apply_token_to_event+0x6328>  // b.none
  4336a0:	mov	w0, #0x1                   	// #1
  4336a4:	bl	40be30 <log_get_max_level_realm@plt>
  4336a8:	mov	w1, w0
  4336ac:	ldr	w0, [sp, #188]
  4336b0:	cmp	w0, w1
  4336b4:	cset	w0, le
  4336b8:	and	w0, w0, #0xff
  4336bc:	and	x0, x0, #0xff
  4336c0:	cmp	x0, #0x0
  4336c4:	b.eq	4336d8 <udev_rule_apply_token_to_event+0x6328>  // b.none
  4336c8:	add	x0, sp, #0x288
  4336cc:	mov	x1, x0
  4336d0:	ldr	x0, [sp, #832]
  4336d4:	bl	40aba0 <sd_device_get_sysname@plt>
  4336d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4336dc:	add	x20, x0, #0xbb
  4336e0:	ldr	x0, [sp, #648]
  4336e4:	cmp	x0, #0x0
  4336e8:	b.eq	4336f8 <udev_rule_apply_token_to_event+0x6348>  // b.none
  4336ec:	adrp	x0, 454000 <__func__.10675+0xa0>
  4336f0:	add	x19, x0, #0xd8
  4336f4:	b	4336fc <udev_rule_apply_token_to_event+0x634c>
  4336f8:	mov	x19, #0x0                   	// #0
  4336fc:	ldr	x21, [sp, #648]
  433700:	ldr	x0, [sp, #824]
  433704:	bl	41fb4c <strna>
  433708:	mov	x2, x0
  43370c:	ldr	x0, [sp, #816]
  433710:	cmp	x0, #0x0
  433714:	b.eq	433724 <udev_rule_apply_token_to_event+0x6374>  // b.none
  433718:	ldr	x0, [sp, #816]
  43371c:	ldr	w0, [x0, #8]
  433720:	b	433728 <udev_rule_apply_token_to_event+0x6378>
  433724:	mov	w0, #0x0                   	// #0
  433728:	add	x1, sp, #0xfd8
  43372c:	str	x1, [sp, #40]
  433730:	add	x1, sp, #0xbd8
  433734:	str	x1, [sp, #32]
  433738:	str	w0, [sp, #24]
  43373c:	str	x2, [sp, #16]
  433740:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433744:	add	x0, x0, #0x5e0
  433748:	str	x0, [sp, #8]
  43374c:	str	xzr, [sp]
  433750:	mov	x7, #0x0                   	// #0
  433754:	mov	x6, x21
  433758:	mov	x5, x19
  43375c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433760:	add	x4, x0, #0xa98
  433764:	mov	w3, #0x845                 	// #2117
  433768:	mov	x2, x20
  43376c:	ldr	w1, [sp, #192]
  433770:	ldr	w0, [sp, #188]
  433774:	bl	40b020 <log_object_internal@plt>
  433778:	b	433b48 <udev_rule_apply_token_to_event+0x6798>
  43377c:	str	xzr, [sp, #640]
  433780:	ldr	x0, [sp, #136]
  433784:	ldrb	w0, [x0, #105]
  433788:	and	w0, w0, #0xffffff80
  43378c:	and	w0, w0, #0xff
  433790:	cmp	w0, #0x0
  433794:	b.eq	4337a0 <udev_rule_apply_token_to_event+0x63f0>  // b.none
  433798:	mov	w20, #0x0                   	// #0
  43379c:	b	433a74 <udev_rule_apply_token_to_event+0x66c4>
  4337a0:	ldr	x0, [sp, #704]
  4337a4:	ldrsb	w0, [x0, #1]
  4337a8:	cmp	w0, #0x5
  4337ac:	b.ne	4337c0 <udev_rule_apply_token_to_event+0x6410>  // b.any
  4337b0:	ldr	x0, [sp, #136]
  4337b4:	ldrb	w1, [x0, #105]
  4337b8:	orr	w1, w1, #0xffffff80
  4337bc:	strb	w1, [x0, #105]
  4337c0:	strb	wzr, [sp, #166]
  4337c4:	ldr	x0, [sp, #704]
  4337c8:	ldrsb	w0, [x0, #1]
  4337cc:	sub	w0, w0, #0x4
  4337d0:	cmp	w0, #0x1
  4337d4:	b.hi	4337e0 <udev_rule_apply_token_to_event+0x6430>  // b.pmore
  4337d8:	mov	w0, #0x1                   	// #1
  4337dc:	strb	w0, [sp, #166]
  4337e0:	nop
  4337e4:	ldrb	w0, [sp, #166]
  4337e8:	cmp	w0, #0x0
  4337ec:	b.eq	4337fc <udev_rule_apply_token_to_event+0x644c>  // b.none
  4337f0:	ldr	x0, [sp, #136]
  4337f4:	ldr	x0, [x0, #64]
  4337f8:	bl	41fcd4 <ordered_hashmap_clear_free_key>
  4337fc:	ldr	x0, [sp, #136]
  433800:	add	x0, x0, #0x40
  433804:	mov	x1, #0x0                   	// #0
  433808:	bl	40a450 <internal_ordered_hashmap_ensure_allocated@plt>
  43380c:	str	w0, [sp, #168]
  433810:	ldr	w0, [sp, #168]
  433814:	cmp	w0, #0x0
  433818:	b.ge	433844 <udev_rule_apply_token_to_event+0x6494>  // b.tcont
  43381c:	adrp	x0, 454000 <__func__.10675+0xa0>
  433820:	add	x1, x0, #0xbb
  433824:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433828:	add	x3, x0, #0xa98
  43382c:	mov	w2, #0x856                 	// #2134
  433830:	mov	w0, #0x1                   	// #1
  433834:	bl	40bda0 <log_oom_internal@plt>
  433838:	mov	w19, w0
  43383c:	mov	w20, #0x1                   	// #1
  433840:	b	433a74 <udev_rule_apply_token_to_event+0x66c4>
  433844:	ldr	x0, [sp, #704]
  433848:	ldr	x0, [x0, #8]
  43384c:	add	x1, sp, #0xbd8
  433850:	mov	w4, #0x0                   	// #0
  433854:	mov	x3, #0x400                 	// #1024
  433858:	mov	x2, x1
  43385c:	mov	x1, x0
  433860:	ldr	x0, [sp, #136]
  433864:	bl	4185d8 <udev_event_apply_format>
  433868:	add	x0, sp, #0xbd8
  43386c:	bl	40b7c0 <strdup@plt>
  433870:	str	x0, [sp, #640]
  433874:	ldr	x0, [sp, #640]
  433878:	cmp	x0, #0x0
  43387c:	b.ne	4338a8 <udev_rule_apply_token_to_event+0x64f8>  // b.any
  433880:	adrp	x0, 454000 <__func__.10675+0xa0>
  433884:	add	x1, x0, #0xbb
  433888:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43388c:	add	x3, x0, #0xa98
  433890:	mov	w2, #0x85c                 	// #2140
  433894:	mov	w0, #0x1                   	// #1
  433898:	bl	40bda0 <log_oom_internal@plt>
  43389c:	mov	w19, w0
  4338a0:	mov	w20, #0x1                   	// #1
  4338a4:	b	433a74 <udev_rule_apply_token_to_event+0x66c4>
  4338a8:	ldr	x0, [sp, #136]
  4338ac:	ldr	x3, [x0, #64]
  4338b0:	ldr	x1, [sp, #640]
  4338b4:	ldr	x0, [sp, #704]
  4338b8:	ldr	x0, [x0, #16]
  4338bc:	mov	x2, x0
  4338c0:	mov	x0, x3
  4338c4:	bl	41fc84 <ordered_hashmap_put>
  4338c8:	str	w0, [sp, #168]
  4338cc:	ldr	w0, [sp, #168]
  4338d0:	cmp	w0, #0x0
  4338d4:	b.ge	433900 <udev_rule_apply_token_to_event+0x6550>  // b.tcont
  4338d8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4338dc:	add	x1, x0, #0xbb
  4338e0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4338e4:	add	x3, x0, #0xa98
  4338e8:	mov	w2, #0x860                 	// #2144
  4338ec:	mov	w0, #0x1                   	// #1
  4338f0:	bl	40bda0 <log_oom_internal@plt>
  4338f4:	mov	w19, w0
  4338f8:	mov	w20, #0x1                   	// #1
  4338fc:	b	433a74 <udev_rule_apply_token_to_event+0x66c4>
  433900:	ldr	x0, [sp, #640]
  433904:	str	x0, [sp, #712]
  433908:	str	xzr, [sp, #640]
  43390c:	ldr	x0, [sp, #152]
  433910:	str	x0, [sp, #720]
  433914:	ldr	x0, [sp, #720]
  433918:	cmp	x0, #0x0
  43391c:	b.eq	43392c <udev_rule_apply_token_to_event+0x657c>  // b.none
  433920:	ldr	x0, [sp, #720]
  433924:	ldr	x0, [x0, #32]
  433928:	b	433930 <udev_rule_apply_token_to_event+0x6580>
  43392c:	mov	x0, #0x0                   	// #0
  433930:	str	x0, [sp, #728]
  433934:	ldr	x0, [sp, #728]
  433938:	cmp	x0, #0x0
  43393c:	b.eq	43394c <udev_rule_apply_token_to_event+0x659c>  // b.none
  433940:	ldr	x0, [sp, #728]
  433944:	ldr	x0, [x0, #8]
  433948:	b	433950 <udev_rule_apply_token_to_event+0x65a0>
  43394c:	mov	x0, #0x0                   	// #0
  433950:	str	x0, [sp, #736]
  433954:	ldr	x0, [sp, #728]
  433958:	cmp	x0, #0x0
  43395c:	b.eq	43396c <udev_rule_apply_token_to_event+0x65bc>  // b.none
  433960:	ldr	x0, [sp, #728]
  433964:	ldr	x0, [x0]
  433968:	b	433970 <udev_rule_apply_token_to_event+0x65c0>
  43396c:	mov	x0, #0x0                   	// #0
  433970:	str	x0, [sp, #744]
  433974:	str	xzr, [sp, #648]
  433978:	ldr	x0, [sp, #144]
  43397c:	str	x0, [sp, #752]
  433980:	mov	w0, #0x7                   	// #7
  433984:	str	w0, [sp, #172]
  433988:	str	wzr, [sp, #176]
  43398c:	ldr	x0, [sp, #752]
  433990:	cmp	x0, #0x0
  433994:	b.eq	4339d0 <udev_rule_apply_token_to_event+0x6620>  // b.none
  433998:	mov	w0, #0x1                   	// #1
  43399c:	bl	40be30 <log_get_max_level_realm@plt>
  4339a0:	mov	w1, w0
  4339a4:	ldr	w0, [sp, #172]
  4339a8:	cmp	w0, w1
  4339ac:	cset	w0, le
  4339b0:	and	w0, w0, #0xff
  4339b4:	and	x0, x0, #0xff
  4339b8:	cmp	x0, #0x0
  4339bc:	b.eq	4339d0 <udev_rule_apply_token_to_event+0x6620>  // b.none
  4339c0:	add	x0, sp, #0x288
  4339c4:	mov	x1, x0
  4339c8:	ldr	x0, [sp, #752]
  4339cc:	bl	40aba0 <sd_device_get_sysname@plt>
  4339d0:	adrp	x0, 454000 <__func__.10675+0xa0>
  4339d4:	add	x21, x0, #0xbb
  4339d8:	ldr	x0, [sp, #648]
  4339dc:	cmp	x0, #0x0
  4339e0:	b.eq	4339f0 <udev_rule_apply_token_to_event+0x6640>  // b.none
  4339e4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4339e8:	add	x20, x0, #0xd8
  4339ec:	b	4339f4 <udev_rule_apply_token_to_event+0x6644>
  4339f0:	mov	x20, #0x0                   	// #0
  4339f4:	ldr	x22, [sp, #648]
  4339f8:	ldr	x0, [sp, #744]
  4339fc:	bl	41fb4c <strna>
  433a00:	mov	x2, x0
  433a04:	ldr	x0, [sp, #736]
  433a08:	cmp	x0, #0x0
  433a0c:	b.eq	433a1c <udev_rule_apply_token_to_event+0x666c>  // b.none
  433a10:	ldr	x0, [sp, #736]
  433a14:	ldr	w0, [x0, #8]
  433a18:	b	433a20 <udev_rule_apply_token_to_event+0x6670>
  433a1c:	mov	w0, #0x0                   	// #0
  433a20:	ldr	x1, [sp, #704]
  433a24:	ldr	x1, [x1, #8]
  433a28:	str	x1, [sp, #32]
  433a2c:	str	w0, [sp, #24]
  433a30:	str	x2, [sp, #16]
  433a34:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433a38:	add	x0, x0, #0x618
  433a3c:	str	x0, [sp, #8]
  433a40:	str	xzr, [sp]
  433a44:	mov	x7, #0x0                   	// #0
  433a48:	mov	x6, x22
  433a4c:	mov	x5, x20
  433a50:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433a54:	add	x4, x0, #0xa98
  433a58:	mov	w3, #0x864                 	// #2148
  433a5c:	mov	x2, x21
  433a60:	ldr	w1, [sp, #176]
  433a64:	ldr	w0, [sp, #172]
  433a68:	bl	40b020 <log_object_internal@plt>
  433a6c:	mov	w20, #0x0                   	// #0
  433a70:	nop
  433a74:	add	x0, sp, #0x280
  433a78:	bl	41fa04 <freep>
  433a7c:	cmp	w20, #0x0
  433a80:	b.ne	433b50 <udev_rule_apply_token_to_event+0x67a0>  // b.any
  433a84:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433a88:	adrp	x0, 454000 <__func__.10675+0xa0>
  433a8c:	add	x1, x0, #0xbb
  433a90:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433a94:	add	x4, x0, #0xa78
  433a98:	mov	w3, #0x86b                 	// #2155
  433a9c:	mov	x2, x1
  433aa0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433aa4:	add	x1, x0, #0x628
  433aa8:	mov	w0, #0x1                   	// #1
  433aac:	bl	40aca0 <log_assert_failed_unreachable_realm@plt>
  433ab0:	nop
  433ab4:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433ab8:	nop
  433abc:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433ac0:	nop
  433ac4:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433ac8:	nop
  433acc:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433ad0:	nop
  433ad4:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433ad8:	nop
  433adc:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433ae0:	nop
  433ae4:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433ae8:	nop
  433aec:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433af0:	nop
  433af4:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433af8:	nop
  433afc:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b00:	nop
  433b04:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b08:	nop
  433b0c:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b10:	nop
  433b14:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b18:	nop
  433b1c:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b20:	nop
  433b24:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b28:	nop
  433b2c:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b30:	nop
  433b34:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b38:	nop
  433b3c:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b40:	nop
  433b44:	b	433b4c <udev_rule_apply_token_to_event+0x679c>
  433b48:	nop
  433b4c:	mov	w19, #0x1                   	// #1
  433b50:	mov	w1, w19
  433b54:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  433b58:	ldr	x0, [x0, #4032]
  433b5c:	ldr	x2, [sp, #20440]
  433b60:	ldr	x0, [x0]
  433b64:	eor	x0, x2, x0
  433b68:	cmp	x0, #0x0
  433b6c:	b.eq	433b74 <udev_rule_apply_token_to_event+0x67c4>  // b.none
  433b70:	bl	40b280 <__stack_chk_fail@plt>
  433b74:	mov	w0, w1
  433b78:	ldp	x19, x20, [sp, #64]
  433b7c:	ldp	x21, x22, [sp, #80]
  433b80:	ldr	x23, [sp, #96]
  433b84:	ldp	x29, x30, [sp, #48]
  433b88:	mov	x12, #0x4fe0                	// #20448
  433b8c:	add	sp, sp, x12
  433b90:	ret

0000000000433b94 <token_is_for_parents>:
  433b94:	sub	sp, sp, #0x10
  433b98:	str	x0, [sp, #8]
  433b9c:	ldr	x0, [sp, #8]
  433ba0:	ldrsb	w0, [x0]
  433ba4:	cmp	w0, #0xb
  433ba8:	b.le	433bc4 <token_is_for_parents+0x30>
  433bac:	ldr	x0, [sp, #8]
  433bb0:	ldrsb	w0, [x0]
  433bb4:	cmp	w0, #0x10
  433bb8:	b.gt	433bc4 <token_is_for_parents+0x30>
  433bbc:	mov	w0, #0x1                   	// #1
  433bc0:	b	433bc8 <token_is_for_parents+0x34>
  433bc4:	mov	w0, #0x0                   	// #0
  433bc8:	and	w0, w0, #0x1
  433bcc:	and	w0, w0, #0xff
  433bd0:	add	sp, sp, #0x10
  433bd4:	ret

0000000000433bd8 <udev_rule_apply_parent_token_to_event>:
  433bd8:	stp	x29, x30, [sp, #-64]!
  433bdc:	mov	x29, sp
  433be0:	str	x0, [sp, #24]
  433be4:	str	x1, [sp, #16]
  433be8:	ldr	x0, [sp, #24]
  433bec:	ldr	x0, [x0, #32]
  433bf0:	ldr	x0, [x0, #8]
  433bf4:	str	x0, [sp, #48]
  433bf8:	ldr	x0, [sp, #24]
  433bfc:	ldr	x0, [x0, #32]
  433c00:	ldr	x0, [x0, #8]
  433c04:	ldr	x0, [x0, #48]
  433c08:	str	x0, [sp, #56]
  433c0c:	ldr	x0, [sp, #16]
  433c10:	ldr	x1, [x0]
  433c14:	ldr	x0, [sp, #16]
  433c18:	str	x1, [x0, #8]
  433c1c:	ldr	x0, [sp, #48]
  433c20:	ldr	x1, [sp, #56]
  433c24:	str	x1, [x0, #48]
  433c28:	b	433cac <udev_rule_apply_parent_token_to_event+0xd4>
  433c2c:	ldr	x0, [sp, #48]
  433c30:	ldr	x0, [x0, #48]
  433c34:	bl	433b94 <token_is_for_parents>
  433c38:	and	w0, w0, #0xff
  433c3c:	eor	w0, w0, #0x1
  433c40:	and	w0, w0, #0xff
  433c44:	cmp	w0, #0x0
  433c48:	b.eq	433c54 <udev_rule_apply_parent_token_to_event+0x7c>  // b.none
  433c4c:	mov	w0, #0x1                   	// #1
  433c50:	b	433d0c <udev_rule_apply_parent_token_to_event+0x134>
  433c54:	ldr	x0, [sp, #16]
  433c58:	ldr	x0, [x0, #8]
  433c5c:	mov	x4, #0x0                   	// #0
  433c60:	mov	x3, #0x0                   	// #0
  433c64:	ldr	x2, [sp, #16]
  433c68:	mov	x1, x0
  433c6c:	ldr	x0, [sp, #24]
  433c70:	bl	42d3b0 <udev_rule_apply_token_to_event>
  433c74:	str	w0, [sp, #44]
  433c78:	ldr	w0, [sp, #44]
  433c7c:	cmp	w0, #0x0
  433c80:	b.ge	433c8c <udev_rule_apply_parent_token_to_event+0xb4>  // b.tcont
  433c84:	ldr	w0, [sp, #44]
  433c88:	b	433d0c <udev_rule_apply_parent_token_to_event+0x134>
  433c8c:	ldr	w0, [sp, #44]
  433c90:	cmp	w0, #0x0
  433c94:	b.eq	433cc0 <udev_rule_apply_parent_token_to_event+0xe8>  // b.none
  433c98:	ldr	x0, [sp, #48]
  433c9c:	ldr	x0, [x0, #48]
  433ca0:	ldr	x1, [x0, #24]
  433ca4:	ldr	x0, [sp, #48]
  433ca8:	str	x1, [x0, #48]
  433cac:	ldr	x0, [sp, #48]
  433cb0:	ldr	x0, [x0, #48]
  433cb4:	cmp	x0, #0x0
  433cb8:	b.ne	433c2c <udev_rule_apply_parent_token_to_event+0x54>  // b.any
  433cbc:	b	433cc4 <udev_rule_apply_parent_token_to_event+0xec>
  433cc0:	nop
  433cc4:	ldr	x0, [sp, #48]
  433cc8:	ldr	x0, [x0, #48]
  433ccc:	cmp	x0, #0x0
  433cd0:	b.ne	433cdc <udev_rule_apply_parent_token_to_event+0x104>  // b.any
  433cd4:	mov	w0, #0x1                   	// #1
  433cd8:	b	433d0c <udev_rule_apply_parent_token_to_event+0x134>
  433cdc:	ldr	x0, [sp, #16]
  433ce0:	ldr	x2, [x0, #8]
  433ce4:	ldr	x0, [sp, #16]
  433ce8:	add	x0, x0, #0x8
  433cec:	mov	x1, x0
  433cf0:	mov	x0, x2
  433cf4:	bl	40be60 <sd_device_get_parent@plt>
  433cf8:	cmp	w0, #0x0
  433cfc:	b.ge	433c1c <udev_rule_apply_parent_token_to_event+0x44>  // b.tcont
  433d00:	ldr	x0, [sp, #16]
  433d04:	str	xzr, [x0, #8]
  433d08:	mov	w0, #0x0                   	// #0
  433d0c:	ldp	x29, x30, [sp], #64
  433d10:	ret

0000000000433d14 <udev_rule_apply_line_to_event>:
  433d14:	stp	x29, x30, [sp, #-112]!
  433d18:	mov	x29, sp
  433d1c:	str	x0, [sp, #56]
  433d20:	str	x1, [sp, #48]
  433d24:	str	x2, [sp, #40]
  433d28:	str	x3, [sp, #32]
  433d2c:	str	x4, [sp, #24]
  433d30:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  433d34:	ldr	x0, [x0, #4032]
  433d38:	ldr	x1, [x0]
  433d3c:	str	x1, [sp, #104]
  433d40:	mov	x1, #0x0                   	// #0
  433d44:	ldr	x0, [sp, #56]
  433d48:	ldr	x0, [x0, #32]
  433d4c:	ldr	x0, [x0, #8]
  433d50:	str	x0, [sp, #88]
  433d54:	mov	w0, #0x28                  	// #40
  433d58:	str	w0, [sp, #72]
  433d5c:	strb	wzr, [sp, #67]
  433d60:	ldr	x0, [sp, #48]
  433d64:	ldr	x0, [x0]
  433d68:	add	x1, sp, #0x44
  433d6c:	bl	40b4b0 <device_get_action@plt>
  433d70:	str	w0, [sp, #76]
  433d74:	ldr	w0, [sp, #76]
  433d78:	cmp	w0, #0x0
  433d7c:	b.ge	433d88 <udev_rule_apply_line_to_event+0x74>  // b.tcont
  433d80:	ldr	w0, [sp, #76]
  433d84:	b	433ef4 <udev_rule_apply_line_to_event+0x1e0>
  433d88:	ldr	w0, [sp, #68]
  433d8c:	cmp	w0, #0x1
  433d90:	b.eq	433ddc <udev_rule_apply_line_to_event+0xc8>  // b.none
  433d94:	ldr	x0, [sp, #48]
  433d98:	ldr	x0, [x0]
  433d9c:	mov	x1, #0x0                   	// #0
  433da0:	bl	40b3d0 <sd_device_get_devnum@plt>
  433da4:	cmp	w0, #0x0
  433da8:	b.lt	433db8 <udev_rule_apply_line_to_event+0xa4>  // b.tstop
  433dac:	ldr	w0, [sp, #72]
  433db0:	orr	w0, w0, #0x2
  433db4:	str	w0, [sp, #72]
  433db8:	ldr	x0, [sp, #48]
  433dbc:	ldr	x0, [x0]
  433dc0:	mov	x1, #0x0                   	// #0
  433dc4:	bl	40bb00 <sd_device_get_ifindex@plt>
  433dc8:	cmp	w0, #0x0
  433dcc:	b.lt	433ddc <udev_rule_apply_line_to_event+0xc8>  // b.tstop
  433dd0:	ldr	w0, [sp, #72]
  433dd4:	orr	w0, w0, #0x1
  433dd8:	str	w0, [sp, #72]
  433ddc:	ldr	x0, [sp, #88]
  433de0:	ldr	w1, [x0, #12]
  433de4:	ldr	w0, [sp, #72]
  433de8:	and	w0, w1, w0
  433dec:	cmp	w0, #0x0
  433df0:	b.ne	433dfc <udev_rule_apply_line_to_event+0xe8>  // b.any
  433df4:	mov	w0, #0x0                   	// #0
  433df8:	b	433ef4 <udev_rule_apply_line_to_event+0x1e0>
  433dfc:	ldr	x0, [sp, #48]
  433e00:	strb	wzr, [x0, #104]
  433e04:	ldr	x0, [sp, #88]
  433e08:	ldr	x0, [x0, #56]
  433e0c:	str	x0, [sp, #80]
  433e10:	b	433e94 <udev_rule_apply_line_to_event+0x180>
  433e14:	ldrb	w0, [sp, #67]
  433e18:	cmp	w0, #0x0
  433e1c:	b.ne	433e88 <udev_rule_apply_line_to_event+0x174>  // b.any
  433e20:	ldr	x1, [sp, #48]
  433e24:	ldr	x0, [sp, #56]
  433e28:	bl	433bd8 <udev_rule_apply_parent_token_to_event>
  433e2c:	str	w0, [sp, #76]
  433e30:	ldr	w0, [sp, #76]
  433e34:	cmp	w0, #0x0
  433e38:	b.gt	433e44 <udev_rule_apply_line_to_event+0x130>
  433e3c:	ldr	w0, [sp, #76]
  433e40:	b	433ef4 <udev_rule_apply_line_to_event+0x1e0>
  433e44:	mov	w0, #0x1                   	// #1
  433e48:	strb	w0, [sp, #67]
  433e4c:	b	433e8c <udev_rule_apply_line_to_event+0x178>
  433e50:	ldr	x0, [sp, #48]
  433e54:	ldr	x0, [x0]
  433e58:	ldr	x4, [sp, #32]
  433e5c:	ldr	x3, [sp, #40]
  433e60:	ldr	x2, [sp, #48]
  433e64:	mov	x1, x0
  433e68:	ldr	x0, [sp, #56]
  433e6c:	bl	42d3b0 <udev_rule_apply_token_to_event>
  433e70:	str	w0, [sp, #76]
  433e74:	ldr	w0, [sp, #76]
  433e78:	cmp	w0, #0x0
  433e7c:	b.gt	433e8c <udev_rule_apply_line_to_event+0x178>
  433e80:	ldr	w0, [sp, #76]
  433e84:	b	433ef4 <udev_rule_apply_line_to_event+0x1e0>
  433e88:	nop
  433e8c:	ldr	x0, [sp, #96]
  433e90:	str	x0, [sp, #80]
  433e94:	ldr	x0, [sp, #80]
  433e98:	cmp	x0, #0x0
  433e9c:	b.eq	433ed0 <udev_rule_apply_line_to_event+0x1bc>  // b.none
  433ea0:	ldr	x0, [sp, #80]
  433ea4:	ldr	x0, [x0, #24]
  433ea8:	str	x0, [sp, #96]
  433eac:	ldr	x0, [sp, #88]
  433eb0:	ldr	x1, [sp, #80]
  433eb4:	str	x1, [x0, #48]
  433eb8:	ldr	x0, [sp, #80]
  433ebc:	bl	433b94 <token_is_for_parents>
  433ec0:	and	w0, w0, #0xff
  433ec4:	cmp	w0, #0x0
  433ec8:	b.eq	433e50 <udev_rule_apply_line_to_event+0x13c>  // b.none
  433ecc:	b	433e14 <udev_rule_apply_line_to_event+0x100>
  433ed0:	ldr	x0, [sp, #88]
  433ed4:	ldr	x0, [x0, #32]
  433ed8:	cmp	x0, #0x0
  433edc:	b.eq	433ef0 <udev_rule_apply_line_to_event+0x1dc>  // b.none
  433ee0:	ldr	x0, [sp, #88]
  433ee4:	ldr	x1, [x0, #32]
  433ee8:	ldr	x0, [sp, #24]
  433eec:	str	x1, [x0]
  433ef0:	mov	w0, #0x0                   	// #0
  433ef4:	mov	w1, w0
  433ef8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  433efc:	ldr	x0, [x0, #4032]
  433f00:	ldr	x2, [sp, #104]
  433f04:	ldr	x0, [x0]
  433f08:	eor	x0, x2, x0
  433f0c:	cmp	x0, #0x0
  433f10:	b.eq	433f18 <udev_rule_apply_line_to_event+0x204>  // b.none
  433f14:	bl	40b280 <__stack_chk_fail@plt>
  433f18:	mov	w0, w1
  433f1c:	ldp	x29, x30, [sp], #112
  433f20:	ret

0000000000433f24 <udev_rules_apply_to_event>:
  433f24:	stp	x29, x30, [sp, #-80]!
  433f28:	mov	x29, sp
  433f2c:	str	x0, [sp, #40]
  433f30:	str	x1, [sp, #32]
  433f34:	str	x2, [sp, #24]
  433f38:	str	x3, [sp, #16]
  433f3c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  433f40:	ldr	x0, [x0, #4032]
  433f44:	ldr	x1, [x0]
  433f48:	str	x1, [sp, #72]
  433f4c:	mov	x1, #0x0                   	// #0
  433f50:	ldr	x0, [sp, #40]
  433f54:	cmp	x0, #0x0
  433f58:	cset	w0, eq  // eq = none
  433f5c:	and	w0, w0, #0xff
  433f60:	and	x0, x0, #0xff
  433f64:	cmp	x0, #0x0
  433f68:	b.eq	433f94 <udev_rules_apply_to_event+0x70>  // b.none
  433f6c:	adrp	x0, 454000 <__func__.10675+0xa0>
  433f70:	add	x1, x0, #0xbb
  433f74:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433f78:	add	x4, x0, #0xab8
  433f7c:	mov	w3, #0x8d7                 	// #2263
  433f80:	mov	x2, x1
  433f84:	adrp	x0, 454000 <__func__.10675+0xa0>
  433f88:	add	x1, x0, #0x158
  433f8c:	mov	w0, #0x1                   	// #1
  433f90:	bl	40abb0 <log_assert_failed_realm@plt>
  433f94:	ldr	x0, [sp, #32]
  433f98:	cmp	x0, #0x0
  433f9c:	cset	w0, eq  // eq = none
  433fa0:	and	w0, w0, #0xff
  433fa4:	and	x0, x0, #0xff
  433fa8:	cmp	x0, #0x0
  433fac:	b.eq	433fd8 <udev_rules_apply_to_event+0xb4>  // b.none
  433fb0:	adrp	x0, 454000 <__func__.10675+0xa0>
  433fb4:	add	x1, x0, #0xbb
  433fb8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  433fbc:	add	x4, x0, #0xab8
  433fc0:	mov	w3, #0x8d8                 	// #2264
  433fc4:	mov	x2, x1
  433fc8:	adrp	x0, 454000 <__func__.10675+0xa0>
  433fcc:	add	x1, x0, #0xdb8
  433fd0:	mov	w0, #0x1                   	// #1
  433fd4:	bl	40abb0 <log_assert_failed_realm@plt>
  433fd8:	ldr	x0, [sp, #40]
  433fdc:	ldr	x0, [x0, #40]
  433fe0:	str	x0, [sp, #64]
  433fe4:	b	434078 <udev_rules_apply_to_event+0x154>
  433fe8:	ldr	x0, [sp, #40]
  433fec:	ldr	x1, [sp, #64]
  433ff0:	str	x1, [x0, #32]
  433ff4:	ldr	x0, [sp, #64]
  433ff8:	ldr	x1, [x0, #16]
  433ffc:	ldr	x0, [sp, #64]
  434000:	str	x1, [x0, #8]
  434004:	b	43401c <udev_rules_apply_to_event+0xf8>
  434008:	ldr	w0, [sp, #52]
  43400c:	b	434088 <udev_rules_apply_to_event+0x164>
  434010:	ldr	x1, [sp, #56]
  434014:	ldr	x0, [sp, #64]
  434018:	str	x1, [x0, #8]
  43401c:	ldr	x0, [sp, #64]
  434020:	ldr	x0, [x0, #8]
  434024:	cmp	x0, #0x0
  434028:	b.eq	43406c <udev_rules_apply_to_event+0x148>  // b.none
  43402c:	ldr	x0, [sp, #64]
  434030:	ldr	x0, [x0, #8]
  434034:	ldr	x0, [x0, #64]
  434038:	str	x0, [sp, #56]
  43403c:	add	x0, sp, #0x38
  434040:	mov	x4, x0
  434044:	ldr	x3, [sp, #16]
  434048:	ldr	x2, [sp, #24]
  43404c:	ldr	x1, [sp, #32]
  434050:	ldr	x0, [sp, #40]
  434054:	bl	433d14 <udev_rule_apply_line_to_event>
  434058:	str	w0, [sp, #52]
  43405c:	ldr	w0, [sp, #52]
  434060:	cmp	w0, #0x0
  434064:	b.ge	434010 <udev_rules_apply_to_event+0xec>  // b.tcont
  434068:	b	434008 <udev_rules_apply_to_event+0xe4>
  43406c:	ldr	x0, [sp, #64]
  434070:	ldr	x0, [x0, #24]
  434074:	str	x0, [sp, #64]
  434078:	ldr	x0, [sp, #64]
  43407c:	cmp	x0, #0x0
  434080:	b.ne	433fe8 <udev_rules_apply_to_event+0xc4>  // b.any
  434084:	mov	w0, #0x0                   	// #0
  434088:	mov	w1, w0
  43408c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  434090:	ldr	x0, [x0, #4032]
  434094:	ldr	x2, [sp, #72]
  434098:	ldr	x0, [x0]
  43409c:	eor	x0, x2, x0
  4340a0:	cmp	x0, #0x0
  4340a4:	b.eq	4340ac <udev_rules_apply_to_event+0x188>  // b.none
  4340a8:	bl	40b280 <__stack_chk_fail@plt>
  4340ac:	mov	w0, w1
  4340b0:	ldp	x29, x30, [sp], #80
  4340b4:	ret

00000000004340b8 <apply_static_dev_perms>:
  4340b8:	sub	sp, sp, #0xd40
  4340bc:	stp	x29, x30, [sp, #16]
  4340c0:	add	x29, sp, #0x10
  4340c4:	str	x19, [sp, #32]
  4340c8:	str	x0, [sp, #72]
  4340cc:	str	w1, [sp, #68]
  4340d0:	str	w2, [sp, #64]
  4340d4:	str	w3, [sp, #60]
  4340d8:	str	x4, [sp, #48]
  4340dc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4340e0:	ldr	x0, [x0, #4032]
  4340e4:	ldr	x1, [x0]
  4340e8:	str	x1, [sp, #3384]
  4340ec:	mov	x1, #0x0                   	// #0
  4340f0:	str	xzr, [sp, #168]
  4340f4:	ldr	x0, [sp, #72]
  4340f8:	cmp	x0, #0x0
  4340fc:	cset	w0, eq  // eq = none
  434100:	and	w0, w0, #0xff
  434104:	and	x0, x0, #0xff
  434108:	cmp	x0, #0x0
  43410c:	b.eq	434138 <apply_static_dev_perms+0x80>  // b.none
  434110:	adrp	x0, 454000 <__func__.10675+0xa0>
  434114:	add	x1, x0, #0xbb
  434118:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43411c:	add	x4, x0, #0xad8
  434120:	mov	w3, #0x8ed                 	// #2285
  434124:	mov	x2, x1
  434128:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43412c:	add	x1, x0, #0x640
  434130:	mov	w0, #0x1                   	// #1
  434134:	bl	40abb0 <log_assert_failed_realm@plt>
  434138:	ldr	w0, [sp, #68]
  43413c:	cmn	w0, #0x1
  434140:	b.ne	434170 <apply_static_dev_perms+0xb8>  // b.any
  434144:	ldr	w0, [sp, #64]
  434148:	cmn	w0, #0x1
  43414c:	b.ne	434170 <apply_static_dev_perms+0xb8>  // b.any
  434150:	ldr	w0, [sp, #60]
  434154:	cmn	w0, #0x1
  434158:	b.ne	434170 <apply_static_dev_perms+0xb8>  // b.any
  43415c:	ldr	x0, [sp, #48]
  434160:	cmp	x0, #0x0
  434164:	b.ne	434170 <apply_static_dev_perms+0xb8>  // b.any
  434168:	mov	w19, #0x0                   	// #0
  43416c:	b	434790 <apply_static_dev_perms+0x6d8>
  434170:	add	x5, sp, #0x138
  434174:	mov	x4, #0x0                   	// #0
  434178:	ldr	x3, [sp, #72]
  43417c:	adrp	x0, 454000 <__func__.10675+0xa0>
  434180:	add	x2, x0, #0xe70
  434184:	mov	x1, #0x400                 	// #1024
  434188:	mov	x0, x5
  43418c:	bl	40a790 <strscpyl@plt>
  434190:	add	x1, sp, #0xb8
  434194:	add	x0, sp, #0x138
  434198:	bl	4505a0 <stat64>
  43419c:	cmp	w0, #0x0
  4341a0:	b.ge	434258 <apply_static_dev_perms+0x1a0>  // b.tcont
  4341a4:	bl	40b040 <__errno_location@plt>
  4341a8:	ldr	w0, [x0]
  4341ac:	cmp	w0, #0x2
  4341b0:	b.eq	434250 <apply_static_dev_perms+0x198>  // b.none
  4341b4:	mov	w0, #0x3                   	// #3
  4341b8:	str	w0, [sp, #156]
  4341bc:	bl	40b040 <__errno_location@plt>
  4341c0:	ldr	w0, [x0]
  4341c4:	str	w0, [sp, #160]
  4341c8:	mov	w0, #0x1                   	// #1
  4341cc:	str	w0, [sp, #164]
  4341d0:	ldr	w0, [sp, #164]
  4341d4:	bl	40be30 <log_get_max_level_realm@plt>
  4341d8:	mov	w1, w0
  4341dc:	ldr	w0, [sp, #156]
  4341e0:	and	w0, w0, #0x7
  4341e4:	cmp	w1, w0
  4341e8:	b.lt	434238 <apply_static_dev_perms+0x180>  // b.tstop
  4341ec:	ldr	w0, [sp, #164]
  4341f0:	lsl	w1, w0, #10
  4341f4:	ldr	w0, [sp, #156]
  4341f8:	orr	w7, w1, w0
  4341fc:	adrp	x0, 454000 <__func__.10675+0xa0>
  434200:	add	x1, x0, #0xbb
  434204:	add	x0, sp, #0x138
  434208:	mov	x6, x0
  43420c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434210:	add	x5, x0, #0x648
  434214:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434218:	add	x4, x0, #0xaf0
  43421c:	mov	w3, #0x8f5                 	// #2293
  434220:	mov	x2, x1
  434224:	ldr	w1, [sp, #160]
  434228:	mov	w0, w7
  43422c:	bl	40b4f0 <log_internal_realm@plt>
  434230:	mov	w19, w0
  434234:	b	434790 <apply_static_dev_perms+0x6d8>
  434238:	ldr	w0, [sp, #160]
  43423c:	cmp	w0, #0x0
  434240:	cneg	w0, w0, lt  // lt = tstop
  434244:	and	w0, w0, #0xff
  434248:	neg	w19, w0
  43424c:	b	434790 <apply_static_dev_perms+0x6d8>
  434250:	mov	w19, #0x0                   	// #0
  434254:	b	434790 <apply_static_dev_perms+0x6d8>
  434258:	ldr	w0, [sp, #200]
  43425c:	and	w0, w0, #0xf000
  434260:	cmp	w0, #0x6, lsl #12
  434264:	b.eq	434300 <apply_static_dev_perms+0x248>  // b.none
  434268:	ldr	w0, [sp, #200]
  43426c:	and	w0, w0, #0xf000
  434270:	cmp	w0, #0x2, lsl #12
  434274:	b.eq	434300 <apply_static_dev_perms+0x248>  // b.none
  434278:	mov	w0, #0x4                   	// #4
  43427c:	str	w0, [sp, #92]
  434280:	str	wzr, [sp, #96]
  434284:	mov	w0, #0x1                   	// #1
  434288:	str	w0, [sp, #100]
  43428c:	ldr	w0, [sp, #100]
  434290:	bl	40be30 <log_get_max_level_realm@plt>
  434294:	mov	w1, w0
  434298:	ldr	w0, [sp, #92]
  43429c:	and	w0, w0, #0x7
  4342a0:	cmp	w1, w0
  4342a4:	b.lt	4342f0 <apply_static_dev_perms+0x238>  // b.tstop
  4342a8:	ldr	w0, [sp, #100]
  4342ac:	lsl	w1, w0, #10
  4342b0:	ldr	w0, [sp, #92]
  4342b4:	orr	w7, w1, w0
  4342b8:	adrp	x0, 454000 <__func__.10675+0xa0>
  4342bc:	add	x1, x0, #0xbb
  4342c0:	add	x0, sp, #0x138
  4342c4:	mov	x6, x0
  4342c8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4342cc:	add	x5, x0, #0x660
  4342d0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4342d4:	add	x4, x0, #0xaf0
  4342d8:	mov	w3, #0x8fa                 	// #2298
  4342dc:	mov	x2, x1
  4342e0:	ldr	w1, [sp, #96]
  4342e4:	mov	w0, w7
  4342e8:	bl	40b4f0 <log_internal_realm@plt>
  4342ec:	b	4342f8 <apply_static_dev_perms+0x240>
  4342f0:	ldr	w0, [sp, #96]
  4342f4:	cmp	w0, #0x0
  4342f8:	mov	w19, #0x0                   	// #0
  4342fc:	b	434790 <apply_static_dev_perms+0x6d8>
  434300:	ldr	x0, [sp, #48]
  434304:	bl	41fd64 <strv_isempty>
  434308:	and	w0, w0, #0xff
  43430c:	eor	w0, w0, #0x1
  434310:	and	w0, w0, #0xff
  434314:	cmp	w0, #0x0
  434318:	b.eq	434360 <apply_static_dev_perms+0x2a8>  // b.none
  43431c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434320:	add	x1, x0, #0x698
  434324:	ldr	x0, [sp, #72]
  434328:	bl	41fda4 <xescape>
  43432c:	str	x0, [sp, #168]
  434330:	ldr	x0, [sp, #168]
  434334:	cmp	x0, #0x0
  434338:	b.ne	434360 <apply_static_dev_perms+0x2a8>  // b.any
  43433c:	adrp	x0, 454000 <__func__.10675+0xa0>
  434340:	add	x1, x0, #0xbb
  434344:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434348:	add	x3, x0, #0xaf0
  43434c:	mov	w2, #0x901                 	// #2305
  434350:	mov	w0, #0x1                   	// #1
  434354:	bl	40bda0 <log_oom_internal@plt>
  434358:	mov	w19, w0
  43435c:	b	434790 <apply_static_dev_perms+0x6d8>
  434360:	ldr	x0, [sp, #48]
  434364:	str	x0, [sp, #176]
  434368:	b	43454c <apply_static_dev_perms+0x494>
  43436c:	ldr	x0, [sp, #176]
  434370:	ldr	x1, [x0]
  434374:	add	x6, sp, #0x538
  434378:	mov	x5, #0x0                   	// #0
  43437c:	adrp	x0, 454000 <__func__.10675+0xa0>
  434380:	add	x4, x0, #0xf20
  434384:	mov	x3, x1
  434388:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43438c:	add	x2, x0, #0x6a0
  434390:	mov	x1, #0x400                 	// #1024
  434394:	mov	x0, x6
  434398:	bl	40a790 <strscpyl@plt>
  43439c:	add	x0, sp, #0x538
  4343a0:	mov	w1, #0x1ed                 	// #493
  4343a4:	bl	40bbc0 <mkdir_p@plt>
  4343a8:	str	w0, [sp, #104]
  4343ac:	ldr	w0, [sp, #104]
  4343b0:	cmp	w0, #0x0
  4343b4:	b.ge	434450 <apply_static_dev_perms+0x398>  // b.tcont
  4343b8:	mov	w0, #0x3                   	// #3
  4343bc:	str	w0, [sp, #120]
  4343c0:	ldr	w0, [sp, #104]
  4343c4:	str	w0, [sp, #124]
  4343c8:	mov	w0, #0x1                   	// #1
  4343cc:	str	w0, [sp, #128]
  4343d0:	ldr	w0, [sp, #128]
  4343d4:	bl	40be30 <log_get_max_level_realm@plt>
  4343d8:	mov	w1, w0
  4343dc:	ldr	w0, [sp, #120]
  4343e0:	and	w0, w0, #0x7
  4343e4:	cmp	w1, w0
  4343e8:	b.lt	434438 <apply_static_dev_perms+0x380>  // b.tstop
  4343ec:	ldr	w0, [sp, #128]
  4343f0:	lsl	w1, w0, #10
  4343f4:	ldr	w0, [sp, #120]
  4343f8:	orr	w7, w1, w0
  4343fc:	adrp	x0, 454000 <__func__.10675+0xa0>
  434400:	add	x1, x0, #0xbb
  434404:	add	x0, sp, #0x538
  434408:	mov	x6, x0
  43440c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434410:	add	x5, x0, #0x6c0
  434414:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434418:	add	x4, x0, #0xaf0
  43441c:	mov	w3, #0x909                 	// #2313
  434420:	mov	x2, x1
  434424:	ldr	w1, [sp, #124]
  434428:	mov	w0, w7
  43442c:	bl	40b4f0 <log_internal_realm@plt>
  434430:	mov	w19, w0
  434434:	b	434790 <apply_static_dev_perms+0x6d8>
  434438:	ldr	w0, [sp, #124]
  43443c:	cmp	w0, #0x0
  434440:	cneg	w0, w0, lt  // lt = tstop
  434444:	and	w0, w0, #0xff
  434448:	neg	w19, w0
  43444c:	b	434790 <apply_static_dev_perms+0x6d8>
  434450:	ldr	x2, [sp, #168]
  434454:	add	x1, sp, #0x538
  434458:	add	x0, sp, #0x938
  43445c:	mov	x4, #0x0                   	// #0
  434460:	mov	x3, x2
  434464:	mov	x2, x1
  434468:	mov	x1, #0x400                 	// #1024
  43446c:	bl	40a790 <strscpyl@plt>
  434470:	add	x1, sp, #0x938
  434474:	add	x0, sp, #0x138
  434478:	bl	40aa00 <symlink@plt>
  43447c:	str	w0, [sp, #104]
  434480:	ldr	w0, [sp, #104]
  434484:	cmp	w0, #0x0
  434488:	b.ge	434540 <apply_static_dev_perms+0x488>  // b.tcont
  43448c:	bl	40b040 <__errno_location@plt>
  434490:	ldr	w0, [x0]
  434494:	cmp	w0, #0x11
  434498:	b.eq	434540 <apply_static_dev_perms+0x488>  // b.none
  43449c:	mov	w0, #0x3                   	// #3
  4344a0:	str	w0, [sp, #108]
  4344a4:	bl	40b040 <__errno_location@plt>
  4344a8:	ldr	w0, [x0]
  4344ac:	str	w0, [sp, #112]
  4344b0:	mov	w0, #0x1                   	// #1
  4344b4:	str	w0, [sp, #116]
  4344b8:	ldr	w0, [sp, #116]
  4344bc:	bl	40be30 <log_get_max_level_realm@plt>
  4344c0:	mov	w1, w0
  4344c4:	ldr	w0, [sp, #108]
  4344c8:	and	w0, w0, #0x7
  4344cc:	cmp	w1, w0
  4344d0:	b.lt	434528 <apply_static_dev_perms+0x470>  // b.tstop
  4344d4:	ldr	w0, [sp, #116]
  4344d8:	lsl	w1, w0, #10
  4344dc:	ldr	w0, [sp, #108]
  4344e0:	orr	w8, w1, w0
  4344e4:	adrp	x0, 454000 <__func__.10675+0xa0>
  4344e8:	add	x1, x0, #0xbb
  4344ec:	add	x2, sp, #0x138
  4344f0:	add	x0, sp, #0x938
  4344f4:	mov	x7, x2
  4344f8:	mov	x6, x0
  4344fc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434500:	add	x5, x0, #0x6d8
  434504:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434508:	add	x4, x0, #0xaf0
  43450c:	mov	w3, #0x90e                 	// #2318
  434510:	mov	x2, x1
  434514:	ldr	w1, [sp, #112]
  434518:	mov	w0, w8
  43451c:	bl	40b4f0 <log_internal_realm@plt>
  434520:	mov	w19, w0
  434524:	b	434790 <apply_static_dev_perms+0x6d8>
  434528:	ldr	w0, [sp, #112]
  43452c:	cmp	w0, #0x0
  434530:	cneg	w0, w0, lt  // lt = tstop
  434534:	and	w0, w0, #0xff
  434538:	neg	w19, w0
  43453c:	b	434790 <apply_static_dev_perms+0x6d8>
  434540:	ldr	x0, [sp, #176]
  434544:	add	x0, x0, #0x8
  434548:	str	x0, [sp, #176]
  43454c:	ldr	x0, [sp, #176]
  434550:	cmp	x0, #0x0
  434554:	b.eq	434568 <apply_static_dev_perms+0x4b0>  // b.none
  434558:	ldr	x0, [sp, #176]
  43455c:	ldr	x0, [x0]
  434560:	cmp	x0, #0x0
  434564:	b.ne	43436c <apply_static_dev_perms+0x2b4>  // b.any
  434568:	ldr	w0, [sp, #68]
  43456c:	cmn	w0, #0x1
  434570:	b.ne	434594 <apply_static_dev_perms+0x4dc>  // b.any
  434574:	ldr	w0, [sp, #64]
  434578:	cmn	w0, #0x1
  43457c:	b.ne	434594 <apply_static_dev_perms+0x4dc>  // b.any
  434580:	ldr	w0, [sp, #60]
  434584:	cmn	w0, #0x1
  434588:	b.ne	434594 <apply_static_dev_perms+0x4dc>  // b.any
  43458c:	mov	w19, #0x0                   	// #0
  434590:	b	434790 <apply_static_dev_perms+0x6d8>
  434594:	ldr	w0, [sp, #60]
  434598:	cmn	w0, #0x1
  43459c:	b.ne	4345c4 <apply_static_dev_perms+0x50c>  // b.any
  4345a0:	ldr	w0, [sp, #64]
  4345a4:	bl	41feec <gid_is_valid>
  4345a8:	and	w0, w0, #0xff
  4345ac:	cmp	w0, #0x0
  4345b0:	b.eq	4345bc <apply_static_dev_perms+0x504>  // b.none
  4345b4:	mov	w0, #0x1b0                 	// #432
  4345b8:	b	4345c0 <apply_static_dev_perms+0x508>
  4345bc:	mov	w0, #0x180                 	// #384
  4345c0:	str	w0, [sp, #60]
  4345c4:	ldr	w0, [sp, #68]
  4345c8:	bl	40aea0 <uid_is_valid@plt>
  4345cc:	and	w0, w0, #0xff
  4345d0:	eor	w0, w0, #0x1
  4345d4:	and	w0, w0, #0xff
  4345d8:	cmp	w0, #0x0
  4345dc:	b.eq	4345e4 <apply_static_dev_perms+0x52c>  // b.none
  4345e0:	str	wzr, [sp, #68]
  4345e4:	ldr	w0, [sp, #64]
  4345e8:	bl	41feec <gid_is_valid>
  4345ec:	and	w0, w0, #0xff
  4345f0:	eor	w0, w0, #0x1
  4345f4:	and	w0, w0, #0xff
  4345f8:	cmp	w0, #0x0
  4345fc:	b.eq	434604 <apply_static_dev_perms+0x54c>  // b.none
  434600:	str	wzr, [sp, #64]
  434604:	add	x0, sp, #0x138
  434608:	ldr	w3, [sp, #64]
  43460c:	ldr	w2, [sp, #68]
  434610:	ldr	w1, [sp, #60]
  434614:	bl	40ab90 <chmod_and_chown@plt>
  434618:	str	w0, [sp, #104]
  43461c:	ldr	w0, [sp, #104]
  434620:	cmn	w0, #0x2
  434624:	b.ne	434630 <apply_static_dev_perms+0x578>  // b.any
  434628:	mov	w19, #0x0                   	// #0
  43462c:	b	434790 <apply_static_dev_perms+0x6d8>
  434630:	ldr	w0, [sp, #104]
  434634:	cmp	w0, #0x0
  434638:	b.ge	4346e0 <apply_static_dev_perms+0x628>  // b.tcont
  43463c:	mov	w0, #0x3                   	// #3
  434640:	str	w0, [sp, #144]
  434644:	ldr	w0, [sp, #104]
  434648:	str	w0, [sp, #148]
  43464c:	mov	w0, #0x1                   	// #1
  434650:	str	w0, [sp, #152]
  434654:	ldr	w0, [sp, #152]
  434658:	bl	40be30 <log_get_max_level_realm@plt>
  43465c:	mov	w1, w0
  434660:	ldr	w0, [sp, #144]
  434664:	and	w0, w0, #0x7
  434668:	cmp	w1, w0
  43466c:	b.lt	4346c8 <apply_static_dev_perms+0x610>  // b.tstop
  434670:	ldr	w0, [sp, #152]
  434674:	lsl	w1, w0, #10
  434678:	ldr	w0, [sp, #144]
  43467c:	orr	w8, w1, w0
  434680:	adrp	x0, 454000 <__func__.10675+0xa0>
  434684:	add	x1, x0, #0xbb
  434688:	add	x2, sp, #0x138
  43468c:	ldr	w0, [sp, #64]
  434690:	str	w0, [sp]
  434694:	ldr	w7, [sp, #68]
  434698:	mov	x6, x2
  43469c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4346a0:	add	x5, x0, #0x700
  4346a4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4346a8:	add	x4, x0, #0xaf0
  4346ac:	mov	w3, #0x921                 	// #2337
  4346b0:	mov	x2, x1
  4346b4:	ldr	w1, [sp, #148]
  4346b8:	mov	w0, w8
  4346bc:	bl	40b4f0 <log_internal_realm@plt>
  4346c0:	mov	w19, w0
  4346c4:	b	434790 <apply_static_dev_perms+0x6d8>
  4346c8:	ldr	w0, [sp, #148]
  4346cc:	cmp	w0, #0x0
  4346d0:	cneg	w0, w0, lt  // lt = tstop
  4346d4:	and	w0, w0, #0xff
  4346d8:	neg	w19, w0
  4346dc:	b	434790 <apply_static_dev_perms+0x6d8>
  4346e0:	mov	w0, #0x7                   	// #7
  4346e4:	str	w0, [sp, #132]
  4346e8:	str	wzr, [sp, #136]
  4346ec:	mov	w0, #0x1                   	// #1
  4346f0:	str	w0, [sp, #140]
  4346f4:	ldr	w0, [sp, #140]
  4346f8:	bl	40be30 <log_get_max_level_realm@plt>
  4346fc:	mov	w1, w0
  434700:	ldr	w0, [sp, #132]
  434704:	and	w0, w0, #0x7
  434708:	cmp	w1, w0
  43470c:	b.lt	43476c <apply_static_dev_perms+0x6b4>  // b.tstop
  434710:	ldr	w0, [sp, #140]
  434714:	lsl	w1, w0, #10
  434718:	ldr	w0, [sp, #132]
  43471c:	orr	w8, w1, w0
  434720:	adrp	x0, 454000 <__func__.10675+0xa0>
  434724:	add	x1, x0, #0xbb
  434728:	add	x2, sp, #0x138
  43472c:	ldr	w0, [sp, #60]
  434730:	str	w0, [sp, #8]
  434734:	ldr	w0, [sp, #64]
  434738:	str	w0, [sp]
  43473c:	ldr	w7, [sp, #68]
  434740:	mov	x6, x2
  434744:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434748:	add	x5, x0, #0x720
  43474c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434750:	add	x4, x0, #0xaf0
  434754:	mov	w3, #0x923                 	// #2339
  434758:	mov	x2, x1
  43475c:	ldr	w1, [sp, #136]
  434760:	mov	w0, w8
  434764:	bl	40b4f0 <log_internal_realm@plt>
  434768:	b	434774 <apply_static_dev_perms+0x6bc>
  43476c:	ldr	w0, [sp, #136]
  434770:	cmp	w0, #0x0
  434774:	add	x0, sp, #0x138
  434778:	mov	w3, #0x0                   	// #0
  43477c:	mov	x2, #0x0                   	// #0
  434780:	mov	x1, x0
  434784:	mov	w0, #0xffffff9c            	// #-100
  434788:	bl	40b340 <utimensat@plt>
  43478c:	mov	w19, #0x0                   	// #0
  434790:	add	x0, sp, #0xa8
  434794:	bl	41fa04 <freep>
  434798:	mov	w1, w19
  43479c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4347a0:	ldr	x0, [x0, #4032]
  4347a4:	ldr	x2, [sp, #3384]
  4347a8:	ldr	x0, [x0]
  4347ac:	eor	x0, x2, x0
  4347b0:	cmp	x0, #0x0
  4347b4:	b.eq	4347bc <apply_static_dev_perms+0x704>  // b.none
  4347b8:	bl	40b280 <__stack_chk_fail@plt>
  4347bc:	mov	w0, w1
  4347c0:	ldr	x19, [sp, #32]
  4347c4:	ldp	x29, x30, [sp, #16]
  4347c8:	add	sp, sp, #0xd40
  4347cc:	ret

00000000004347d0 <udev_rule_line_apply_static_dev_perms>:
  4347d0:	stp	x29, x30, [sp, #-96]!
  4347d4:	mov	x29, sp
  4347d8:	str	x19, [sp, #16]
  4347dc:	str	x0, [sp, #40]
  4347e0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4347e4:	ldr	x0, [x0, #4032]
  4347e8:	ldr	x1, [x0]
  4347ec:	str	x1, [sp, #88]
  4347f0:	mov	x1, #0x0                   	// #0
  4347f4:	str	xzr, [sp, #72]
  4347f8:	mov	w0, #0xffffffff            	// #-1
  4347fc:	str	w0, [sp, #56]
  434800:	mov	w0, #0xffffffff            	// #-1
  434804:	str	w0, [sp, #60]
  434808:	mov	w0, #0xffffffff            	// #-1
  43480c:	str	w0, [sp, #64]
  434810:	ldr	x0, [sp, #40]
  434814:	cmp	x0, #0x0
  434818:	cset	w0, eq  // eq = none
  43481c:	and	w0, w0, #0xff
  434820:	and	x0, x0, #0xff
  434824:	cmp	x0, #0x0
  434828:	b.eq	434854 <udev_rule_line_apply_static_dev_perms+0x84>  // b.none
  43482c:	adrp	x0, 454000 <__func__.10675+0xa0>
  434830:	add	x1, x0, #0xbb
  434834:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434838:	add	x4, x0, #0xb08
  43483c:	mov	w3, #0x931                 	// #2353
  434840:	mov	x2, x1
  434844:	adrp	x0, 454000 <__func__.10675+0xa0>
  434848:	add	x1, x0, #0x130
  43484c:	mov	w0, #0x1                   	// #1
  434850:	bl	40abb0 <log_assert_failed_realm@plt>
  434854:	ldr	x0, [sp, #40]
  434858:	ldr	w0, [x0, #12]
  43485c:	and	w0, w0, #0x4
  434860:	cmp	w0, #0x0
  434864:	b.ne	434870 <udev_rule_line_apply_static_dev_perms+0xa0>  // b.any
  434868:	mov	w19, #0x0                   	// #0
  43486c:	b	4349a4 <udev_rule_line_apply_static_dev_perms+0x1d4>
  434870:	ldr	x0, [sp, #40]
  434874:	ldr	x0, [x0, #56]
  434878:	str	x0, [sp, #80]
  43487c:	b	434994 <udev_rule_line_apply_static_dev_perms+0x1c4>
  434880:	ldr	x0, [sp, #80]
  434884:	ldrsb	w0, [x0]
  434888:	cmp	w0, #0x22
  43488c:	b.ne	4348a4 <udev_rule_line_apply_static_dev_perms+0xd4>  // b.any
  434890:	ldr	x0, [sp, #80]
  434894:	ldr	x0, [x0, #16]
  434898:	sub	w0, w0, #0x1
  43489c:	str	w0, [sp, #56]
  4348a0:	b	434988 <udev_rule_line_apply_static_dev_perms+0x1b8>
  4348a4:	ldr	x0, [sp, #80]
  4348a8:	ldrsb	w0, [x0]
  4348ac:	cmp	w0, #0x23
  4348b0:	b.ne	4348c8 <udev_rule_line_apply_static_dev_perms+0xf8>  // b.any
  4348b4:	ldr	x0, [sp, #80]
  4348b8:	ldr	x0, [x0, #16]
  4348bc:	sub	w0, w0, #0x1
  4348c0:	str	w0, [sp, #60]
  4348c4:	b	434988 <udev_rule_line_apply_static_dev_perms+0x1b8>
  4348c8:	ldr	x0, [sp, #80]
  4348cc:	ldrsb	w0, [x0]
  4348d0:	cmp	w0, #0x24
  4348d4:	b.ne	4348ec <udev_rule_line_apply_static_dev_perms+0x11c>  // b.any
  4348d8:	ldr	x0, [sp, #80]
  4348dc:	ldr	x0, [x0, #16]
  4348e0:	sub	w0, w0, #0x1
  4348e4:	str	w0, [sp, #64]
  4348e8:	b	434988 <udev_rule_line_apply_static_dev_perms+0x1b8>
  4348ec:	ldr	x0, [sp, #80]
  4348f0:	ldrsb	w0, [x0]
  4348f4:	cmp	w0, #0x25
  4348f8:	b.ne	434940 <udev_rule_line_apply_static_dev_perms+0x170>  // b.any
  4348fc:	ldr	x0, [sp, #80]
  434900:	ldr	x1, [x0, #8]
  434904:	add	x0, sp, #0x48
  434908:	bl	40b160 <strv_extend@plt>
  43490c:	str	w0, [sp, #68]
  434910:	ldr	w0, [sp, #68]
  434914:	cmp	w0, #0x0
  434918:	b.ge	434988 <udev_rule_line_apply_static_dev_perms+0x1b8>  // b.tcont
  43491c:	adrp	x0, 454000 <__func__.10675+0xa0>
  434920:	add	x1, x0, #0xbb
  434924:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434928:	add	x3, x0, #0xb30
  43492c:	mov	w2, #0x940                 	// #2368
  434930:	mov	w0, #0x1                   	// #1
  434934:	bl	40bda0 <log_oom_internal@plt>
  434938:	mov	w19, w0
  43493c:	b	4349a4 <udev_rule_line_apply_static_dev_perms+0x1d4>
  434940:	ldr	x0, [sp, #80]
  434944:	ldrsb	w0, [x0]
  434948:	cmp	w0, #0x26
  43494c:	b.ne	434988 <udev_rule_line_apply_static_dev_perms+0x1b8>  // b.any
  434950:	ldr	x0, [sp, #80]
  434954:	ldr	x0, [x0, #8]
  434958:	ldr	x1, [sp, #72]
  43495c:	mov	x4, x1
  434960:	ldr	w3, [sp, #64]
  434964:	ldr	w2, [sp, #60]
  434968:	ldr	w1, [sp, #56]
  43496c:	bl	4340b8 <apply_static_dev_perms>
  434970:	str	w0, [sp, #68]
  434974:	ldr	w0, [sp, #68]
  434978:	cmp	w0, #0x0
  43497c:	b.ge	434988 <udev_rule_line_apply_static_dev_perms+0x1b8>  // b.tcont
  434980:	ldr	w19, [sp, #68]
  434984:	b	4349a4 <udev_rule_line_apply_static_dev_perms+0x1d4>
  434988:	ldr	x0, [sp, #80]
  43498c:	ldr	x0, [x0, #24]
  434990:	str	x0, [sp, #80]
  434994:	ldr	x0, [sp, #80]
  434998:	cmp	x0, #0x0
  43499c:	b.ne	434880 <udev_rule_line_apply_static_dev_perms+0xb0>  // b.any
  4349a0:	mov	w19, #0x0                   	// #0
  4349a4:	add	x0, sp, #0x48
  4349a8:	bl	41fd30 <strv_freep>
  4349ac:	mov	w1, w19
  4349b0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4349b4:	ldr	x0, [x0, #4032]
  4349b8:	ldr	x2, [sp, #88]
  4349bc:	ldr	x0, [x0]
  4349c0:	eor	x0, x2, x0
  4349c4:	cmp	x0, #0x0
  4349c8:	b.eq	4349d0 <udev_rule_line_apply_static_dev_perms+0x200>  // b.none
  4349cc:	bl	40b280 <__stack_chk_fail@plt>
  4349d0:	mov	w0, w1
  4349d4:	ldr	x19, [sp, #16]
  4349d8:	ldp	x29, x30, [sp], #96
  4349dc:	ret

00000000004349e0 <udev_rules_apply_static_dev_perms>:
  4349e0:	stp	x29, x30, [sp, #-64]!
  4349e4:	mov	x29, sp
  4349e8:	str	x0, [sp, #24]
  4349ec:	ldr	x0, [sp, #24]
  4349f0:	cmp	x0, #0x0
  4349f4:	cset	w0, eq  // eq = none
  4349f8:	and	w0, w0, #0xff
  4349fc:	and	x0, x0, #0xff
  434a00:	cmp	x0, #0x0
  434a04:	b.eq	434a30 <udev_rules_apply_static_dev_perms+0x50>  // b.none
  434a08:	adrp	x0, 454000 <__func__.10675+0xa0>
  434a0c:	add	x1, x0, #0xbb
  434a10:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434a14:	add	x4, x0, #0xb58
  434a18:	mov	w3, #0x94f                 	// #2383
  434a1c:	mov	x2, x1
  434a20:	adrp	x0, 454000 <__func__.10675+0xa0>
  434a24:	add	x1, x0, #0x158
  434a28:	mov	w0, #0x1                   	// #1
  434a2c:	bl	40abb0 <log_assert_failed_realm@plt>
  434a30:	ldr	x0, [sp, #24]
  434a34:	ldr	x0, [x0, #40]
  434a38:	str	x0, [sp, #48]
  434a3c:	b	434a94 <udev_rules_apply_static_dev_perms+0xb4>
  434a40:	ldr	x0, [sp, #48]
  434a44:	ldr	x0, [x0, #16]
  434a48:	str	x0, [sp, #56]
  434a4c:	b	434a7c <udev_rules_apply_static_dev_perms+0x9c>
  434a50:	ldr	x0, [sp, #56]
  434a54:	bl	4347d0 <udev_rule_line_apply_static_dev_perms>
  434a58:	str	w0, [sp, #44]
  434a5c:	ldr	w0, [sp, #44]
  434a60:	cmp	w0, #0x0
  434a64:	b.ge	434a70 <udev_rules_apply_static_dev_perms+0x90>  // b.tcont
  434a68:	ldr	w0, [sp, #44]
  434a6c:	b	434aa4 <udev_rules_apply_static_dev_perms+0xc4>
  434a70:	ldr	x0, [sp, #56]
  434a74:	ldr	x0, [x0, #64]
  434a78:	str	x0, [sp, #56]
  434a7c:	ldr	x0, [sp, #56]
  434a80:	cmp	x0, #0x0
  434a84:	b.ne	434a50 <udev_rules_apply_static_dev_perms+0x70>  // b.any
  434a88:	ldr	x0, [sp, #48]
  434a8c:	ldr	x0, [x0, #24]
  434a90:	str	x0, [sp, #48]
  434a94:	ldr	x0, [sp, #48]
  434a98:	cmp	x0, #0x0
  434a9c:	b.ne	434a40 <udev_rules_apply_static_dev_perms+0x60>  // b.any
  434aa0:	mov	w0, #0x0                   	// #0
  434aa4:	ldp	x29, x30, [sp], #64
  434aa8:	ret

0000000000434aac <freep>:
  434aac:	stp	x29, x30, [sp, #-32]!
  434ab0:	mov	x29, sp
  434ab4:	str	x0, [sp, #24]
  434ab8:	ldr	x0, [sp, #24]
  434abc:	ldr	x0, [x0]
  434ac0:	bl	40ba20 <free@plt>
  434ac4:	nop
  434ac8:	ldp	x29, x30, [sp], #32
  434acc:	ret

0000000000434ad0 <sd_device_unrefp>:
  434ad0:	stp	x29, x30, [sp, #-32]!
  434ad4:	mov	x29, sp
  434ad8:	str	x0, [sp, #24]
  434adc:	ldr	x0, [sp, #24]
  434ae0:	ldr	x0, [x0]
  434ae4:	cmp	x0, #0x0
  434ae8:	b.eq	434af8 <sd_device_unrefp+0x28>  // b.none
  434aec:	ldr	x0, [sp, #24]
  434af0:	ldr	x0, [x0]
  434af4:	bl	40baf0 <sd_device_unref@plt>
  434af8:	nop
  434afc:	ldp	x29, x30, [sp], #32
  434b00:	ret

0000000000434b04 <udev_watch_init>:
  434b04:	stp	x29, x30, [sp, #-16]!
  434b08:	mov	x29, sp
  434b0c:	mov	w0, #0x80000               	// #524288
  434b10:	bl	40b910 <inotify_init1@plt>
  434b14:	mov	w1, w0
  434b18:	adrp	x0, 48d000 <arg_resolve_name_timing>
  434b1c:	add	x0, x0, #0x100
  434b20:	str	w1, [x0]
  434b24:	adrp	x0, 48d000 <arg_resolve_name_timing>
  434b28:	add	x0, x0, #0x100
  434b2c:	ldr	w0, [x0]
  434b30:	cmp	w0, #0x0
  434b34:	b.ge	434b48 <udev_watch_init+0x44>  // b.tcont
  434b38:	bl	40b040 <__errno_location@plt>
  434b3c:	ldr	w0, [x0]
  434b40:	neg	w0, w0
  434b44:	b	434b54 <udev_watch_init+0x50>
  434b48:	adrp	x0, 48d000 <arg_resolve_name_timing>
  434b4c:	add	x0, x0, #0x100
  434b50:	ldr	w0, [x0]
  434b54:	ldp	x29, x30, [sp], #16
  434b58:	ret

0000000000434b5c <udev_watch_restore>:
  434b5c:	sub	sp, sp, #0xb0
  434b60:	stp	x29, x30, [sp, #16]
  434b64:	add	x29, sp, #0x10
  434b68:	str	x19, [sp, #32]
  434b6c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  434b70:	ldr	x0, [x0, #4032]
  434b74:	ldr	x1, [x0]
  434b78:	str	x1, [sp, #168]
  434b7c:	mov	x1, #0x0                   	// #0
  434b80:	adrp	x0, 48d000 <arg_resolve_name_timing>
  434b84:	add	x0, x0, #0x100
  434b88:	ldr	w0, [x0]
  434b8c:	cmp	w0, #0x0
  434b90:	b.ge	434c24 <udev_watch_restore+0xc8>  // b.tcont
  434b94:	mov	w0, #0x7                   	// #7
  434b98:	str	w0, [sp, #108]
  434b9c:	mov	w0, #0x16                  	// #22
  434ba0:	movk	w0, #0x4000, lsl #16
  434ba4:	str	w0, [sp, #112]
  434ba8:	mov	w0, #0x1                   	// #1
  434bac:	str	w0, [sp, #116]
  434bb0:	ldr	w0, [sp, #116]
  434bb4:	bl	40be30 <log_get_max_level_realm@plt>
  434bb8:	mov	w1, w0
  434bbc:	ldr	w0, [sp, #108]
  434bc0:	and	w0, w0, #0x7
  434bc4:	cmp	w1, w0
  434bc8:	b.lt	434c0c <udev_watch_restore+0xb0>  // b.tstop
  434bcc:	ldr	w0, [sp, #116]
  434bd0:	lsl	w1, w0, #10
  434bd4:	ldr	w0, [sp, #108]
  434bd8:	orr	w6, w1, w0
  434bdc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434be0:	add	x1, x0, #0xb83
  434be4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434be8:	add	x5, x0, #0xba0
  434bec:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434bf0:	add	x4, x0, #0xf08
  434bf4:	mov	w3, #0x27                  	// #39
  434bf8:	mov	x2, x1
  434bfc:	ldr	w1, [sp, #112]
  434c00:	mov	w0, w6
  434c04:	bl	40b4f0 <log_internal_realm@plt>
  434c08:	b	435090 <udev_watch_restore+0x534>
  434c0c:	ldr	w0, [sp, #112]
  434c10:	cmp	w0, #0x0
  434c14:	cneg	w0, w0, lt  // lt = tstop
  434c18:	and	w0, w0, #0xff
  434c1c:	neg	w0, w0
  434c20:	b	435090 <udev_watch_restore+0x534>
  434c24:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434c28:	add	x1, x0, #0xbc0
  434c2c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434c30:	add	x0, x0, #0xbd8
  434c34:	bl	40a730 <rename@plt>
  434c38:	cmp	w0, #0x0
  434c3c:	b.ge	434ce8 <udev_watch_restore+0x18c>  // b.tcont
  434c40:	bl	40b040 <__errno_location@plt>
  434c44:	ldr	w0, [x0]
  434c48:	cmp	w0, #0x2
  434c4c:	b.eq	434ce0 <udev_watch_restore+0x184>  // b.none
  434c50:	mov	w0, #0x4                   	// #4
  434c54:	str	w0, [sp, #96]
  434c58:	bl	40b040 <__errno_location@plt>
  434c5c:	ldr	w0, [x0]
  434c60:	str	w0, [sp, #100]
  434c64:	mov	w0, #0x1                   	// #1
  434c68:	str	w0, [sp, #104]
  434c6c:	ldr	w0, [sp, #104]
  434c70:	bl	40be30 <log_get_max_level_realm@plt>
  434c74:	mov	w1, w0
  434c78:	ldr	w0, [sp, #96]
  434c7c:	and	w0, w0, #0x7
  434c80:	cmp	w1, w0
  434c84:	b.lt	434cc8 <udev_watch_restore+0x16c>  // b.tstop
  434c88:	ldr	w0, [sp, #104]
  434c8c:	lsl	w1, w0, #10
  434c90:	ldr	w0, [sp, #96]
  434c94:	orr	w6, w1, w0
  434c98:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434c9c:	add	x1, x0, #0xb83
  434ca0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434ca4:	add	x5, x0, #0xbe8
  434ca8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434cac:	add	x4, x0, #0xf08
  434cb0:	mov	w3, #0x2c                  	// #44
  434cb4:	mov	x2, x1
  434cb8:	ldr	w1, [sp, #100]
  434cbc:	mov	w0, w6
  434cc0:	bl	40b4f0 <log_internal_realm@plt>
  434cc4:	b	435090 <udev_watch_restore+0x534>
  434cc8:	ldr	w0, [sp, #100]
  434ccc:	cmp	w0, #0x0
  434cd0:	cneg	w0, w0, lt  // lt = tstop
  434cd4:	and	w0, w0, #0xff
  434cd8:	neg	w0, w0
  434cdc:	b	435090 <udev_watch_restore+0x534>
  434ce0:	mov	w0, #0x0                   	// #0
  434ce4:	b	435090 <udev_watch_restore+0x534>
  434ce8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434cec:	add	x0, x0, #0xbc0
  434cf0:	bl	40b770 <opendir@plt>
  434cf4:	str	x0, [sp, #152]
  434cf8:	ldr	x0, [sp, #152]
  434cfc:	cmp	x0, #0x0
  434d00:	b.ne	434d94 <udev_watch_restore+0x238>  // b.any
  434d04:	mov	w0, #0x4                   	// #4
  434d08:	str	w0, [sp, #84]
  434d0c:	bl	40b040 <__errno_location@plt>
  434d10:	ldr	w0, [x0]
  434d14:	str	w0, [sp, #88]
  434d18:	mov	w0, #0x1                   	// #1
  434d1c:	str	w0, [sp, #92]
  434d20:	ldr	w0, [sp, #92]
  434d24:	bl	40be30 <log_get_max_level_realm@plt>
  434d28:	mov	w1, w0
  434d2c:	ldr	w0, [sp, #84]
  434d30:	and	w0, w0, #0x7
  434d34:	cmp	w1, w0
  434d38:	b.lt	434d7c <udev_watch_restore+0x220>  // b.tstop
  434d3c:	ldr	w0, [sp, #92]
  434d40:	lsl	w1, w0, #10
  434d44:	ldr	w0, [sp, #84]
  434d48:	orr	w6, w1, w0
  434d4c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434d50:	add	x1, x0, #0xb83
  434d54:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434d58:	add	x5, x0, #0xc40
  434d5c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434d60:	add	x4, x0, #0xf08
  434d64:	mov	w3, #0x33                  	// #51
  434d68:	mov	x2, x1
  434d6c:	ldr	w1, [sp, #88]
  434d70:	mov	w0, w6
  434d74:	bl	40b4f0 <log_internal_realm@plt>
  434d78:	b	435090 <udev_watch_restore+0x534>
  434d7c:	ldr	w0, [sp, #88]
  434d80:	cmp	w0, #0x0
  434d84:	cneg	w0, w0, lt  // lt = tstop
  434d88:	and	w0, w0, #0xff
  434d8c:	neg	w0, w0
  434d90:	b	435090 <udev_watch_restore+0x534>
  434d94:	bl	40b040 <__errno_location@plt>
  434d98:	str	wzr, [x0]
  434d9c:	ldr	x0, [sp, #152]
  434da0:	bl	40abe0 <readdir64@plt>
  434da4:	str	x0, [sp, #144]
  434da8:	ldr	x0, [sp, #144]
  434dac:	cmp	x0, #0x0
  434db0:	b.ne	434de0 <udev_watch_restore+0x284>  // b.any
  434db4:	bl	40b040 <__errno_location@plt>
  434db8:	ldr	w0, [x0]
  434dbc:	cmp	w0, #0x0
  434dc0:	nop
  434dc4:	ldr	x0, [sp, #152]
  434dc8:	bl	40adc0 <closedir@plt>
  434dcc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434dd0:	add	x0, x0, #0xbc0
  434dd4:	bl	40af10 <rmdir@plt>
  434dd8:	mov	w0, #0x0                   	// #0
  434ddc:	b	435090 <udev_watch_restore+0x534>
  434de0:	str	xzr, [sp, #120]
  434de4:	str	xzr, [sp, #128]
  434de8:	ldr	x0, [sp, #144]
  434dec:	ldrb	w0, [x0, #19]
  434df0:	cmp	w0, #0x2e
  434df4:	b.ne	434e00 <udev_watch_restore+0x2a4>  // b.any
  434df8:	mov	w19, #0x0                   	// #0
  434dfc:	b	435050 <udev_watch_restore+0x4f4>
  434e00:	ldr	x0, [sp, #152]
  434e04:	bl	40ab70 <dirfd@plt>
  434e08:	mov	w3, w0
  434e0c:	ldr	x0, [sp, #144]
  434e10:	add	x0, x0, #0x13
  434e14:	add	x1, sp, #0x80
  434e18:	mov	x2, x1
  434e1c:	mov	x1, x0
  434e20:	mov	w0, w3
  434e24:	bl	40b790 <readlinkat_malloc@plt>
  434e28:	str	w0, [sp, #48]
  434e2c:	ldr	w0, [sp, #48]
  434e30:	cmp	w0, #0x0
  434e34:	b.ge	434ec4 <udev_watch_restore+0x368>  // b.tcont
  434e38:	mov	w0, #0x7                   	// #7
  434e3c:	str	w0, [sp, #72]
  434e40:	ldr	w0, [sp, #48]
  434e44:	str	w0, [sp, #76]
  434e48:	mov	w0, #0x1                   	// #1
  434e4c:	str	w0, [sp, #80]
  434e50:	ldr	w0, [sp, #80]
  434e54:	bl	40be30 <log_get_max_level_realm@plt>
  434e58:	mov	w1, w0
  434e5c:	ldr	w0, [sp, #72]
  434e60:	and	w0, w0, #0x7
  434e64:	cmp	w1, w0
  434e68:	b.lt	434eb8 <udev_watch_restore+0x35c>  // b.tstop
  434e6c:	ldr	w0, [sp, #80]
  434e70:	lsl	w1, w0, #10
  434e74:	ldr	w0, [sp, #72]
  434e78:	orr	w7, w1, w0
  434e7c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434e80:	add	x1, x0, #0xb83
  434e84:	ldr	x0, [sp, #144]
  434e88:	add	x0, x0, #0x13
  434e8c:	mov	x6, x0
  434e90:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434e94:	add	x5, x0, #0xca0
  434e98:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434e9c:	add	x4, x0, #0xf08
  434ea0:	mov	w3, #0x3e                  	// #62
  434ea4:	mov	x2, x1
  434ea8:	ldr	w1, [sp, #76]
  434eac:	mov	w0, w7
  434eb0:	bl	40b4f0 <log_internal_realm@plt>
  434eb4:	b	435028 <udev_watch_restore+0x4cc>
  434eb8:	ldr	w0, [sp, #76]
  434ebc:	cmp	w0, #0x0
  434ec0:	b	435028 <udev_watch_restore+0x4cc>
  434ec4:	ldr	x1, [sp, #128]
  434ec8:	add	x0, sp, #0x78
  434ecc:	bl	40bcc0 <sd_device_new_from_device_id@plt>
  434ed0:	str	w0, [sp, #48]
  434ed4:	ldr	w0, [sp, #48]
  434ed8:	cmp	w0, #0x0
  434edc:	b.ge	434f68 <udev_watch_restore+0x40c>  // b.tcont
  434ee0:	mov	w0, #0x7                   	// #7
  434ee4:	str	w0, [sp, #60]
  434ee8:	ldr	w0, [sp, #48]
  434eec:	str	w0, [sp, #64]
  434ef0:	mov	w0, #0x1                   	// #1
  434ef4:	str	w0, [sp, #68]
  434ef8:	ldr	w0, [sp, #68]
  434efc:	bl	40be30 <log_get_max_level_realm@plt>
  434f00:	mov	w1, w0
  434f04:	ldr	w0, [sp, #60]
  434f08:	and	w0, w0, #0x7
  434f0c:	cmp	w1, w0
  434f10:	b.lt	434f5c <udev_watch_restore+0x400>  // b.tstop
  434f14:	ldr	w0, [sp, #68]
  434f18:	lsl	w1, w0, #10
  434f1c:	ldr	w0, [sp, #60]
  434f20:	orr	w7, w1, w0
  434f24:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434f28:	add	x1, x0, #0xb83
  434f2c:	ldr	x0, [sp, #128]
  434f30:	mov	x6, x0
  434f34:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434f38:	add	x5, x0, #0xce0
  434f3c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434f40:	add	x4, x0, #0xf08
  434f44:	mov	w3, #0x44                  	// #68
  434f48:	mov	x2, x1
  434f4c:	ldr	w1, [sp, #64]
  434f50:	mov	w0, w7
  434f54:	bl	40b4f0 <log_internal_realm@plt>
  434f58:	b	435028 <udev_watch_restore+0x4cc>
  434f5c:	ldr	w0, [sp, #64]
  434f60:	cmp	w0, #0x0
  434f64:	b	435028 <udev_watch_restore+0x4cc>
  434f68:	str	xzr, [sp, #136]
  434f6c:	ldr	x0, [sp, #120]
  434f70:	str	x0, [sp, #160]
  434f74:	mov	w0, #0x7                   	// #7
  434f78:	str	w0, [sp, #52]
  434f7c:	str	wzr, [sp, #56]
  434f80:	ldr	x0, [sp, #160]
  434f84:	cmp	x0, #0x0
  434f88:	b.eq	434fc4 <udev_watch_restore+0x468>  // b.none
  434f8c:	mov	w0, #0x1                   	// #1
  434f90:	bl	40be30 <log_get_max_level_realm@plt>
  434f94:	mov	w1, w0
  434f98:	ldr	w0, [sp, #52]
  434f9c:	cmp	w0, w1
  434fa0:	cset	w0, le
  434fa4:	and	w0, w0, #0xff
  434fa8:	and	x0, x0, #0xff
  434fac:	cmp	x0, #0x0
  434fb0:	b.eq	434fc4 <udev_watch_restore+0x468>  // b.none
  434fb4:	add	x0, sp, #0x88
  434fb8:	mov	x1, x0
  434fbc:	ldr	x0, [sp, #160]
  434fc0:	bl	40aba0 <sd_device_get_sysname@plt>
  434fc4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434fc8:	add	x2, x0, #0xb83
  434fcc:	ldr	x0, [sp, #136]
  434fd0:	cmp	x0, #0x0
  434fd4:	b.eq	434fe4 <udev_watch_restore+0x488>  // b.none
  434fd8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  434fdc:	add	x0, x0, #0xd20
  434fe0:	b	434fe8 <udev_watch_restore+0x48c>
  434fe4:	mov	x0, #0x0                   	// #0
  434fe8:	ldr	x3, [sp, #136]
  434fec:	adrp	x1, 455000 <__func__.10675+0x10a0>
  434ff0:	add	x1, x1, #0xd28
  434ff4:	str	x1, [sp, #8]
  434ff8:	str	xzr, [sp]
  434ffc:	mov	x7, #0x0                   	// #0
  435000:	mov	x6, x3
  435004:	mov	x5, x0
  435008:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43500c:	add	x4, x0, #0xf08
  435010:	mov	w3, #0x48                  	// #72
  435014:	ldr	w1, [sp, #56]
  435018:	ldr	w0, [sp, #52]
  43501c:	bl	40b020 <log_object_internal@plt>
  435020:	ldr	x0, [sp, #120]
  435024:	bl	4350c8 <udev_watch_begin>
  435028:	ldr	x0, [sp, #152]
  43502c:	bl	40ab70 <dirfd@plt>
  435030:	mov	w3, w0
  435034:	ldr	x0, [sp, #144]
  435038:	add	x0, x0, #0x13
  43503c:	mov	w2, #0x0                   	// #0
  435040:	mov	x1, x0
  435044:	mov	w0, w3
  435048:	bl	40ba10 <unlinkat@plt>
  43504c:	mov	w19, #0x1                   	// #1
  435050:	add	x0, sp, #0x80
  435054:	bl	434aac <freep>
  435058:	cmp	w19, #0x1
  43505c:	b.eq	435068 <udev_watch_restore+0x50c>  // b.none
  435060:	mov	w19, #0x0                   	// #0
  435064:	b	43506c <udev_watch_restore+0x510>
  435068:	mov	w19, #0x1                   	// #1
  43506c:	add	x0, sp, #0x78
  435070:	bl	434ad0 <sd_device_unrefp>
  435074:	cmp	w19, #0x1
  435078:	bl	40b040 <__errno_location@plt>
  43507c:	str	wzr, [x0]
  435080:	ldr	x0, [sp, #152]
  435084:	bl	40abe0 <readdir64@plt>
  435088:	str	x0, [sp, #144]
  43508c:	b	434da8 <udev_watch_restore+0x24c>
  435090:	mov	w1, w0
  435094:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  435098:	ldr	x0, [x0, #4032]
  43509c:	ldr	x2, [sp, #168]
  4350a0:	ldr	x0, [x0]
  4350a4:	eor	x0, x2, x0
  4350a8:	cmp	x0, #0x0
  4350ac:	b.eq	4350b4 <udev_watch_restore+0x558>  // b.none
  4350b0:	bl	40b280 <__stack_chk_fail@plt>
  4350b4:	mov	w0, w1
  4350b8:	ldr	x19, [sp, #32]
  4350bc:	ldp	x29, x30, [sp, #16]
  4350c0:	add	sp, sp, #0xb0
  4350c4:	ret

00000000004350c8 <udev_watch_begin>:
  4350c8:	sub	sp, sp, #0x100
  4350cc:	stp	x29, x30, [sp, #32]
  4350d0:	add	x29, sp, #0x20
  4350d4:	str	x0, [sp, #56]
  4350d8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4350dc:	ldr	x0, [x0, #4032]
  4350e0:	ldr	x1, [x0]
  4350e4:	str	x1, [sp, #248]
  4350e8:	mov	x1, #0x0                   	// #0
  4350ec:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4350f0:	add	x0, x0, #0x100
  4350f4:	ldr	w0, [x0]
  4350f8:	cmp	w0, #0x0
  4350fc:	b.ge	435190 <udev_watch_begin+0xc8>  // b.tcont
  435100:	mov	w0, #0x7                   	// #7
  435104:	str	w0, [sp, #132]
  435108:	mov	w0, #0x16                  	// #22
  43510c:	movk	w0, #0x4000, lsl #16
  435110:	str	w0, [sp, #136]
  435114:	mov	w0, #0x1                   	// #1
  435118:	str	w0, [sp, #140]
  43511c:	ldr	w0, [sp, #140]
  435120:	bl	40be30 <log_get_max_level_realm@plt>
  435124:	mov	w1, w0
  435128:	ldr	w0, [sp, #132]
  43512c:	and	w0, w0, #0x7
  435130:	cmp	w1, w0
  435134:	b.lt	435178 <udev_watch_begin+0xb0>  // b.tstop
  435138:	ldr	w0, [sp, #140]
  43513c:	lsl	w1, w0, #10
  435140:	ldr	w0, [sp, #132]
  435144:	orr	w6, w1, w0
  435148:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43514c:	add	x1, x0, #0xb83
  435150:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435154:	add	x5, x0, #0xba0
  435158:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43515c:	add	x4, x0, #0xf20
  435160:	mov	w3, #0x5a                  	// #90
  435164:	mov	x2, x1
  435168:	ldr	w1, [sp, #136]
  43516c:	mov	w0, w6
  435170:	bl	40b4f0 <log_internal_realm@plt>
  435174:	b	435754 <udev_watch_begin+0x68c>
  435178:	ldr	w0, [sp, #136]
  43517c:	cmp	w0, #0x0
  435180:	cneg	w0, w0, lt  // lt = tstop
  435184:	and	w0, w0, #0xff
  435188:	neg	w0, w0
  43518c:	b	435754 <udev_watch_begin+0x68c>
  435190:	add	x0, sp, #0x90
  435194:	mov	x1, x0
  435198:	ldr	x0, [sp, #56]
  43519c:	bl	40a6f0 <sd_device_get_devname@plt>
  4351a0:	str	w0, [sp, #76]
  4351a4:	ldr	w0, [sp, #76]
  4351a8:	cmp	w0, #0x0
  4351ac:	b.ge	435270 <udev_watch_begin+0x1a8>  // b.tcont
  4351b0:	str	xzr, [sp, #160]
  4351b4:	ldr	x0, [sp, #56]
  4351b8:	str	x0, [sp, #208]
  4351bc:	mov	w0, #0x3                   	// #3
  4351c0:	str	w0, [sp, #124]
  4351c4:	ldr	w0, [sp, #76]
  4351c8:	str	w0, [sp, #128]
  4351cc:	ldr	x0, [sp, #208]
  4351d0:	cmp	x0, #0x0
  4351d4:	b.eq	435210 <udev_watch_begin+0x148>  // b.none
  4351d8:	mov	w0, #0x1                   	// #1
  4351dc:	bl	40be30 <log_get_max_level_realm@plt>
  4351e0:	mov	w1, w0
  4351e4:	ldr	w0, [sp, #124]
  4351e8:	cmp	w0, w1
  4351ec:	cset	w0, le
  4351f0:	and	w0, w0, #0xff
  4351f4:	and	x0, x0, #0xff
  4351f8:	cmp	x0, #0x0
  4351fc:	b.eq	435210 <udev_watch_begin+0x148>  // b.none
  435200:	add	x0, sp, #0xa0
  435204:	mov	x1, x0
  435208:	ldr	x0, [sp, #208]
  43520c:	bl	40aba0 <sd_device_get_sysname@plt>
  435210:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435214:	add	x2, x0, #0xb83
  435218:	ldr	x0, [sp, #160]
  43521c:	cmp	x0, #0x0
  435220:	b.eq	435230 <udev_watch_begin+0x168>  // b.none
  435224:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435228:	add	x0, x0, #0xd20
  43522c:	b	435234 <udev_watch_begin+0x16c>
  435230:	mov	x0, #0x0                   	// #0
  435234:	ldr	x3, [sp, #160]
  435238:	adrp	x1, 455000 <__func__.10675+0x10a0>
  43523c:	add	x1, x1, #0xd40
  435240:	str	x1, [sp, #8]
  435244:	str	xzr, [sp]
  435248:	mov	x7, #0x0                   	// #0
  43524c:	mov	x6, x3
  435250:	mov	x5, x0
  435254:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435258:	add	x4, x0, #0xf20
  43525c:	mov	w3, #0x5f                  	// #95
  435260:	ldr	w1, [sp, #128]
  435264:	ldr	w0, [sp, #124]
  435268:	bl	40b020 <log_object_internal@plt>
  43526c:	b	435754 <udev_watch_begin+0x68c>
  435270:	str	xzr, [sp, #160]
  435274:	ldr	x0, [sp, #56]
  435278:	str	x0, [sp, #168]
  43527c:	mov	w0, #0x7                   	// #7
  435280:	str	w0, [sp, #80]
  435284:	str	wzr, [sp, #84]
  435288:	ldr	x0, [sp, #168]
  43528c:	cmp	x0, #0x0
  435290:	b.eq	4352cc <udev_watch_begin+0x204>  // b.none
  435294:	mov	w0, #0x1                   	// #1
  435298:	bl	40be30 <log_get_max_level_realm@plt>
  43529c:	mov	w1, w0
  4352a0:	ldr	w0, [sp, #80]
  4352a4:	cmp	w0, w1
  4352a8:	cset	w0, le
  4352ac:	and	w0, w0, #0xff
  4352b0:	and	x0, x0, #0xff
  4352b4:	cmp	x0, #0x0
  4352b8:	b.eq	4352cc <udev_watch_begin+0x204>  // b.none
  4352bc:	add	x0, sp, #0xa0
  4352c0:	mov	x1, x0
  4352c4:	ldr	x0, [sp, #168]
  4352c8:	bl	40aba0 <sd_device_get_sysname@plt>
  4352cc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4352d0:	add	x2, x0, #0xb83
  4352d4:	ldr	x0, [sp, #160]
  4352d8:	cmp	x0, #0x0
  4352dc:	b.eq	4352ec <udev_watch_begin+0x224>  // b.none
  4352e0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4352e4:	add	x0, x0, #0xd20
  4352e8:	b	4352f0 <udev_watch_begin+0x228>
  4352ec:	mov	x0, #0x0                   	// #0
  4352f0:	ldr	x3, [sp, #160]
  4352f4:	ldr	x1, [sp, #144]
  4352f8:	str	x1, [sp, #16]
  4352fc:	adrp	x1, 455000 <__func__.10675+0x10a0>
  435300:	add	x1, x1, #0xd60
  435304:	str	x1, [sp, #8]
  435308:	str	xzr, [sp]
  43530c:	mov	x7, #0x0                   	// #0
  435310:	mov	x6, x3
  435314:	mov	x5, x0
  435318:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43531c:	add	x4, x0, #0xf20
  435320:	mov	w3, #0x61                  	// #97
  435324:	ldr	w1, [sp, #84]
  435328:	ldr	w0, [sp, #80]
  43532c:	bl	40b020 <log_object_internal@plt>
  435330:	adrp	x0, 48d000 <arg_resolve_name_timing>
  435334:	add	x0, x0, #0x100
  435338:	ldr	w0, [x0]
  43533c:	ldr	x1, [sp, #144]
  435340:	mov	w2, #0x8                   	// #8
  435344:	bl	40b010 <inotify_add_watch@plt>
  435348:	str	w0, [sp, #88]
  43534c:	ldr	w0, [sp, #88]
  435350:	cmp	w0, #0x0
  435354:	b.ge	43543c <udev_watch_begin+0x374>  // b.tcont
  435358:	str	xzr, [sp, #160]
  43535c:	ldr	x0, [sp, #56]
  435360:	str	x0, [sp, #200]
  435364:	bl	40b040 <__errno_location@plt>
  435368:	ldr	w0, [x0]
  43536c:	cmp	w0, #0x2
  435370:	b.ne	43537c <udev_watch_begin+0x2b4>  // b.any
  435374:	mov	w0, #0x7                   	// #7
  435378:	b	435380 <udev_watch_begin+0x2b8>
  43537c:	mov	w0, #0x3                   	// #3
  435380:	str	w0, [sp, #116]
  435384:	bl	40b040 <__errno_location@plt>
  435388:	ldr	w0, [x0]
  43538c:	str	w0, [sp, #120]
  435390:	ldr	x0, [sp, #200]
  435394:	cmp	x0, #0x0
  435398:	b.eq	4353d4 <udev_watch_begin+0x30c>  // b.none
  43539c:	mov	w0, #0x1                   	// #1
  4353a0:	bl	40be30 <log_get_max_level_realm@plt>
  4353a4:	mov	w1, w0
  4353a8:	ldr	w0, [sp, #116]
  4353ac:	cmp	w0, w1
  4353b0:	cset	w0, le
  4353b4:	and	w0, w0, #0xff
  4353b8:	and	x0, x0, #0xff
  4353bc:	cmp	x0, #0x0
  4353c0:	b.eq	4353d4 <udev_watch_begin+0x30c>  // b.none
  4353c4:	add	x0, sp, #0xa0
  4353c8:	mov	x1, x0
  4353cc:	ldr	x0, [sp, #200]
  4353d0:	bl	40aba0 <sd_device_get_sysname@plt>
  4353d4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4353d8:	add	x2, x0, #0xb83
  4353dc:	ldr	x0, [sp, #160]
  4353e0:	cmp	x0, #0x0
  4353e4:	b.eq	4353f4 <udev_watch_begin+0x32c>  // b.none
  4353e8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4353ec:	add	x0, x0, #0xd20
  4353f0:	b	4353f8 <udev_watch_begin+0x330>
  4353f4:	mov	x0, #0x0                   	// #0
  4353f8:	ldr	x3, [sp, #160]
  4353fc:	ldr	x1, [sp, #144]
  435400:	str	x1, [sp, #16]
  435404:	adrp	x1, 455000 <__func__.10675+0x10a0>
  435408:	add	x1, x1, #0xd78
  43540c:	str	x1, [sp, #8]
  435410:	str	xzr, [sp]
  435414:	mov	x7, #0x0                   	// #0
  435418:	mov	x6, x3
  43541c:	mov	x5, x0
  435420:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435424:	add	x4, x0, #0xf20
  435428:	mov	w3, #0x64                  	// #100
  43542c:	ldr	w1, [sp, #120]
  435430:	ldr	w0, [sp, #116]
  435434:	bl	40b020 <log_object_internal@plt>
  435438:	b	435754 <udev_watch_begin+0x68c>
  43543c:	ldr	w1, [sp, #88]
  435440:	ldr	x0, [sp, #56]
  435444:	bl	40be80 <device_set_watch_handle@plt>
  435448:	add	x4, sp, #0xd8
  43544c:	ldr	w3, [sp, #88]
  435450:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435454:	add	x2, x0, #0xda0
  435458:	mov	x1, #0x1c                  	// #28
  43545c:	mov	x0, x4
  435460:	bl	40a870 <snprintf@plt>
  435464:	cmp	w0, #0x1b
  435468:	cset	w0, hi  // hi = pmore
  43546c:	and	w0, w0, #0xff
  435470:	and	x0, x0, #0xff
  435474:	cmp	x0, #0x0
  435478:	b.eq	4354a4 <udev_watch_begin+0x3dc>  // b.none
  43547c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435480:	add	x1, x0, #0xb83
  435484:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435488:	add	x4, x0, #0xf38
  43548c:	mov	w3, #0x6b                  	// #107
  435490:	mov	x2, x1
  435494:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435498:	add	x1, x0, #0xdb8
  43549c:	mov	w0, #0x1                   	// #1
  4354a0:	bl	40abb0 <log_assert_failed_realm@plt>
  4354a4:	add	x0, sp, #0xd8
  4354a8:	mov	w1, #0x1ed                 	// #493
  4354ac:	bl	40bd30 <mkdir_parents@plt>
  4354b0:	str	w0, [sp, #76]
  4354b4:	ldr	w0, [sp, #76]
  4354b8:	cmp	w0, #0x0
  4354bc:	b.ge	435588 <udev_watch_begin+0x4c0>  // b.tcont
  4354c0:	str	xzr, [sp, #160]
  4354c4:	ldr	x0, [sp, #56]
  4354c8:	str	x0, [sp, #192]
  4354cc:	mov	w0, #0x3                   	// #3
  4354d0:	str	w0, [sp, #108]
  4354d4:	ldr	w0, [sp, #76]
  4354d8:	str	w0, [sp, #112]
  4354dc:	ldr	x0, [sp, #192]
  4354e0:	cmp	x0, #0x0
  4354e4:	b.eq	435520 <udev_watch_begin+0x458>  // b.none
  4354e8:	mov	w0, #0x1                   	// #1
  4354ec:	bl	40be30 <log_get_max_level_realm@plt>
  4354f0:	mov	w1, w0
  4354f4:	ldr	w0, [sp, #108]
  4354f8:	cmp	w0, w1
  4354fc:	cset	w0, le
  435500:	and	w0, w0, #0xff
  435504:	and	x0, x0, #0xff
  435508:	cmp	x0, #0x0
  43550c:	b.eq	435520 <udev_watch_begin+0x458>  // b.none
  435510:	add	x0, sp, #0xa0
  435514:	mov	x1, x0
  435518:	ldr	x0, [sp, #192]
  43551c:	bl	40aba0 <sd_device_get_sysname@plt>
  435520:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435524:	add	x2, x0, #0xb83
  435528:	ldr	x0, [sp, #160]
  43552c:	cmp	x0, #0x0
  435530:	b.eq	435540 <udev_watch_begin+0x478>  // b.none
  435534:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435538:	add	x0, x0, #0xd20
  43553c:	b	435544 <udev_watch_begin+0x47c>
  435540:	mov	x0, #0x0                   	// #0
  435544:	ldr	x3, [sp, #160]
  435548:	add	x1, sp, #0xd8
  43554c:	str	x1, [sp, #16]
  435550:	adrp	x1, 455000 <__func__.10675+0x10a0>
  435554:	add	x1, x1, #0xde0
  435558:	str	x1, [sp, #8]
  43555c:	str	xzr, [sp]
  435560:	mov	x7, #0x0                   	// #0
  435564:	mov	x6, x3
  435568:	mov	x5, x0
  43556c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435570:	add	x4, x0, #0xf20
  435574:	mov	w3, #0x6e                  	// #110
  435578:	ldr	w1, [sp, #112]
  43557c:	ldr	w0, [sp, #108]
  435580:	bl	40b020 <log_object_internal@plt>
  435584:	b	435754 <udev_watch_begin+0x68c>
  435588:	add	x0, sp, #0xd8
  43558c:	bl	40a3f0 <unlink@plt>
  435590:	add	x0, sp, #0x98
  435594:	mov	x1, x0
  435598:	ldr	x0, [sp, #56]
  43559c:	bl	40bd00 <device_get_id_filename@plt>
  4355a0:	str	w0, [sp, #76]
  4355a4:	ldr	w0, [sp, #76]
  4355a8:	cmp	w0, #0x0
  4355ac:	b.ge	435670 <udev_watch_begin+0x5a8>  // b.tcont
  4355b0:	str	xzr, [sp, #160]
  4355b4:	ldr	x0, [sp, #56]
  4355b8:	str	x0, [sp, #184]
  4355bc:	mov	w0, #0x3                   	// #3
  4355c0:	str	w0, [sp, #100]
  4355c4:	ldr	w0, [sp, #76]
  4355c8:	str	w0, [sp, #104]
  4355cc:	ldr	x0, [sp, #184]
  4355d0:	cmp	x0, #0x0
  4355d4:	b.eq	435610 <udev_watch_begin+0x548>  // b.none
  4355d8:	mov	w0, #0x1                   	// #1
  4355dc:	bl	40be30 <log_get_max_level_realm@plt>
  4355e0:	mov	w1, w0
  4355e4:	ldr	w0, [sp, #100]
  4355e8:	cmp	w0, w1
  4355ec:	cset	w0, le
  4355f0:	and	w0, w0, #0xff
  4355f4:	and	x0, x0, #0xff
  4355f8:	cmp	x0, #0x0
  4355fc:	b.eq	435610 <udev_watch_begin+0x548>  // b.none
  435600:	add	x0, sp, #0xa0
  435604:	mov	x1, x0
  435608:	ldr	x0, [sp, #184]
  43560c:	bl	40aba0 <sd_device_get_sysname@plt>
  435610:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435614:	add	x2, x0, #0xb83
  435618:	ldr	x0, [sp, #160]
  43561c:	cmp	x0, #0x0
  435620:	b.eq	435630 <udev_watch_begin+0x568>  // b.none
  435624:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435628:	add	x0, x0, #0xd20
  43562c:	b	435634 <udev_watch_begin+0x56c>
  435630:	mov	x0, #0x0                   	// #0
  435634:	ldr	x3, [sp, #160]
  435638:	adrp	x1, 455000 <__func__.10675+0x10a0>
  43563c:	add	x1, x1, #0xe10
  435640:	str	x1, [sp, #8]
  435644:	str	xzr, [sp]
  435648:	mov	x7, #0x0                   	// #0
  43564c:	mov	x6, x3
  435650:	mov	x5, x0
  435654:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435658:	add	x4, x0, #0xf20
  43565c:	mov	w3, #0x73                  	// #115
  435660:	ldr	w1, [sp, #104]
  435664:	ldr	w0, [sp, #100]
  435668:	bl	40b020 <log_object_internal@plt>
  43566c:	b	435754 <udev_watch_begin+0x68c>
  435670:	ldr	x0, [sp, #152]
  435674:	add	x1, sp, #0xd8
  435678:	bl	40aa00 <symlink@plt>
  43567c:	cmp	w0, #0x0
  435680:	b.ge	435750 <udev_watch_begin+0x688>  // b.tcont
  435684:	str	xzr, [sp, #160]
  435688:	ldr	x0, [sp, #56]
  43568c:	str	x0, [sp, #176]
  435690:	mov	w0, #0x3                   	// #3
  435694:	str	w0, [sp, #92]
  435698:	bl	40b040 <__errno_location@plt>
  43569c:	ldr	w0, [x0]
  4356a0:	str	w0, [sp, #96]
  4356a4:	ldr	x0, [sp, #176]
  4356a8:	cmp	x0, #0x0
  4356ac:	b.eq	4356e8 <udev_watch_begin+0x620>  // b.none
  4356b0:	mov	w0, #0x1                   	// #1
  4356b4:	bl	40be30 <log_get_max_level_realm@plt>
  4356b8:	mov	w1, w0
  4356bc:	ldr	w0, [sp, #92]
  4356c0:	cmp	w0, w1
  4356c4:	cset	w0, le
  4356c8:	and	w0, w0, #0xff
  4356cc:	and	x0, x0, #0xff
  4356d0:	cmp	x0, #0x0
  4356d4:	b.eq	4356e8 <udev_watch_begin+0x620>  // b.none
  4356d8:	add	x0, sp, #0xa0
  4356dc:	mov	x1, x0
  4356e0:	ldr	x0, [sp, #176]
  4356e4:	bl	40aba0 <sd_device_get_sysname@plt>
  4356e8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4356ec:	add	x2, x0, #0xb83
  4356f0:	ldr	x0, [sp, #160]
  4356f4:	cmp	x0, #0x0
  4356f8:	b.eq	435708 <udev_watch_begin+0x640>  // b.none
  4356fc:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435700:	add	x0, x0, #0xd20
  435704:	b	43570c <udev_watch_begin+0x644>
  435708:	mov	x0, #0x0                   	// #0
  43570c:	ldr	x3, [sp, #160]
  435710:	add	x1, sp, #0xd8
  435714:	str	x1, [sp, #16]
  435718:	adrp	x1, 455000 <__func__.10675+0x10a0>
  43571c:	add	x1, x1, #0xe38
  435720:	str	x1, [sp, #8]
  435724:	str	xzr, [sp]
  435728:	mov	x7, #0x0                   	// #0
  43572c:	mov	x6, x3
  435730:	mov	x5, x0
  435734:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435738:	add	x4, x0, #0xf20
  43573c:	mov	w3, #0x76                  	// #118
  435740:	ldr	w1, [sp, #96]
  435744:	ldr	w0, [sp, #92]
  435748:	bl	40b020 <log_object_internal@plt>
  43574c:	b	435754 <udev_watch_begin+0x68c>
  435750:	mov	w0, #0x0                   	// #0
  435754:	mov	w1, w0
  435758:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43575c:	ldr	x0, [x0, #4032]
  435760:	ldr	x2, [sp, #248]
  435764:	ldr	x0, [x0]
  435768:	eor	x0, x2, x0
  43576c:	cmp	x0, #0x0
  435770:	b.eq	435778 <udev_watch_begin+0x6b0>  // b.none
  435774:	bl	40b280 <__stack_chk_fail@plt>
  435778:	mov	w0, w1
  43577c:	ldp	x29, x30, [sp, #32]
  435780:	add	sp, sp, #0x100
  435784:	ret

0000000000435788 <udev_watch_end>:
  435788:	sub	sp, sp, #0xa0
  43578c:	stp	x29, x30, [sp, #16]
  435790:	add	x29, sp, #0x10
  435794:	str	x0, [sp, #40]
  435798:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43579c:	ldr	x0, [x0, #4032]
  4357a0:	ldr	x1, [x0]
  4357a4:	str	x1, [sp, #152]
  4357a8:	mov	x1, #0x0                   	// #0
  4357ac:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4357b0:	add	x0, x0, #0x100
  4357b4:	ldr	w0, [x0]
  4357b8:	cmp	w0, #0x0
  4357bc:	b.ge	435850 <udev_watch_end+0xc8>  // b.tcont
  4357c0:	mov	w0, #0x7                   	// #7
  4357c4:	str	w0, [sp, #84]
  4357c8:	mov	w0, #0x16                  	// #22
  4357cc:	movk	w0, #0x4000, lsl #16
  4357d0:	str	w0, [sp, #88]
  4357d4:	mov	w0, #0x1                   	// #1
  4357d8:	str	w0, [sp, #92]
  4357dc:	ldr	w0, [sp, #92]
  4357e0:	bl	40be30 <log_get_max_level_realm@plt>
  4357e4:	mov	w1, w0
  4357e8:	ldr	w0, [sp, #84]
  4357ec:	and	w0, w0, #0x7
  4357f0:	cmp	w1, w0
  4357f4:	b.lt	435838 <udev_watch_end+0xb0>  // b.tstop
  4357f8:	ldr	w0, [sp, #92]
  4357fc:	lsl	w1, w0, #10
  435800:	ldr	w0, [sp, #84]
  435804:	orr	w6, w1, w0
  435808:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43580c:	add	x1, x0, #0xb83
  435810:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435814:	add	x5, x0, #0xba0
  435818:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43581c:	add	x4, x0, #0xf50
  435820:	mov	w3, #0x80                  	// #128
  435824:	mov	x2, x1
  435828:	ldr	w1, [sp, #88]
  43582c:	mov	w0, w6
  435830:	bl	40b4f0 <log_internal_realm@plt>
  435834:	b	435a88 <udev_watch_end+0x300>
  435838:	ldr	w0, [sp, #88]
  43583c:	cmp	w0, #0x0
  435840:	cneg	w0, w0, lt  // lt = tstop
  435844:	and	w0, w0, #0xff
  435848:	neg	w0, w0
  43584c:	b	435a88 <udev_watch_end+0x300>
  435850:	add	x0, sp, #0x3c
  435854:	mov	x1, x0
  435858:	ldr	x0, [sp, #40]
  43585c:	bl	40b8e0 <device_get_watch_handle@plt>
  435860:	str	w0, [sp, #64]
  435864:	ldr	w0, [sp, #64]
  435868:	cmn	w0, #0x2
  43586c:	b.ne	435878 <udev_watch_end+0xf0>  // b.any
  435870:	mov	w0, #0x0                   	// #0
  435874:	b	435a88 <udev_watch_end+0x300>
  435878:	ldr	w0, [sp, #64]
  43587c:	cmp	w0, #0x0
  435880:	b.ge	435944 <udev_watch_end+0x1bc>  // b.tcont
  435884:	str	xzr, [sp, #96]
  435888:	ldr	x0, [sp, #40]
  43588c:	str	x0, [sp, #112]
  435890:	mov	w0, #0x7                   	// #7
  435894:	str	w0, [sp, #76]
  435898:	ldr	w0, [sp, #64]
  43589c:	str	w0, [sp, #80]
  4358a0:	ldr	x0, [sp, #112]
  4358a4:	cmp	x0, #0x0
  4358a8:	b.eq	4358e4 <udev_watch_end+0x15c>  // b.none
  4358ac:	mov	w0, #0x1                   	// #1
  4358b0:	bl	40be30 <log_get_max_level_realm@plt>
  4358b4:	mov	w1, w0
  4358b8:	ldr	w0, [sp, #76]
  4358bc:	cmp	w0, w1
  4358c0:	cset	w0, le
  4358c4:	and	w0, w0, #0xff
  4358c8:	and	x0, x0, #0xff
  4358cc:	cmp	x0, #0x0
  4358d0:	b.eq	4358e4 <udev_watch_end+0x15c>  // b.none
  4358d4:	add	x0, sp, #0x60
  4358d8:	mov	x1, x0
  4358dc:	ldr	x0, [sp, #112]
  4358e0:	bl	40aba0 <sd_device_get_sysname@plt>
  4358e4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4358e8:	add	x2, x0, #0xb83
  4358ec:	ldr	x0, [sp, #96]
  4358f0:	cmp	x0, #0x0
  4358f4:	b.eq	435904 <udev_watch_end+0x17c>  // b.none
  4358f8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4358fc:	add	x0, x0, #0xd20
  435900:	b	435908 <udev_watch_end+0x180>
  435904:	mov	x0, #0x0                   	// #0
  435908:	ldr	x3, [sp, #96]
  43590c:	adrp	x1, 455000 <__func__.10675+0x10a0>
  435910:	add	x1, x1, #0xe58
  435914:	str	x1, [sp, #8]
  435918:	str	xzr, [sp]
  43591c:	mov	x7, #0x0                   	// #0
  435920:	mov	x6, x3
  435924:	mov	x5, x0
  435928:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43592c:	add	x4, x0, #0xf50
  435930:	mov	w3, #0x87                  	// #135
  435934:	ldr	w1, [sp, #80]
  435938:	ldr	w0, [sp, #76]
  43593c:	bl	40b020 <log_object_internal@plt>
  435940:	b	435a88 <udev_watch_end+0x300>
  435944:	str	xzr, [sp, #96]
  435948:	ldr	x0, [sp, #40]
  43594c:	str	x0, [sp, #104]
  435950:	mov	w0, #0x7                   	// #7
  435954:	str	w0, [sp, #68]
  435958:	str	wzr, [sp, #72]
  43595c:	ldr	x0, [sp, #104]
  435960:	cmp	x0, #0x0
  435964:	b.eq	4359a0 <udev_watch_end+0x218>  // b.none
  435968:	mov	w0, #0x1                   	// #1
  43596c:	bl	40be30 <log_get_max_level_realm@plt>
  435970:	mov	w1, w0
  435974:	ldr	w0, [sp, #68]
  435978:	cmp	w0, w1
  43597c:	cset	w0, le
  435980:	and	w0, w0, #0xff
  435984:	and	x0, x0, #0xff
  435988:	cmp	x0, #0x0
  43598c:	b.eq	4359a0 <udev_watch_end+0x218>  // b.none
  435990:	add	x0, sp, #0x60
  435994:	mov	x1, x0
  435998:	ldr	x0, [sp, #104]
  43599c:	bl	40aba0 <sd_device_get_sysname@plt>
  4359a0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4359a4:	add	x2, x0, #0xb83
  4359a8:	ldr	x0, [sp, #96]
  4359ac:	cmp	x0, #0x0
  4359b0:	b.eq	4359c0 <udev_watch_end+0x238>  // b.none
  4359b4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4359b8:	add	x0, x0, #0xd20
  4359bc:	b	4359c4 <udev_watch_end+0x23c>
  4359c0:	mov	x0, #0x0                   	// #0
  4359c4:	ldr	x3, [sp, #96]
  4359c8:	adrp	x1, 455000 <__func__.10675+0x10a0>
  4359cc:	add	x1, x1, #0xe88
  4359d0:	str	x1, [sp, #8]
  4359d4:	str	xzr, [sp]
  4359d8:	mov	x7, #0x0                   	// #0
  4359dc:	mov	x6, x3
  4359e0:	mov	x5, x0
  4359e4:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4359e8:	add	x4, x0, #0xf50
  4359ec:	mov	w3, #0x89                  	// #137
  4359f0:	ldr	w1, [sp, #72]
  4359f4:	ldr	w0, [sp, #68]
  4359f8:	bl	40b020 <log_object_internal@plt>
  4359fc:	adrp	x0, 48d000 <arg_resolve_name_timing>
  435a00:	add	x0, x0, #0x100
  435a04:	ldr	w0, [x0]
  435a08:	ldr	w1, [sp, #60]
  435a0c:	bl	40a9b0 <inotify_rm_watch@plt>
  435a10:	ldr	w0, [sp, #60]
  435a14:	add	x4, sp, #0x78
  435a18:	mov	w3, w0
  435a1c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435a20:	add	x2, x0, #0xda0
  435a24:	mov	x1, #0x1c                  	// #28
  435a28:	mov	x0, x4
  435a2c:	bl	40a870 <snprintf@plt>
  435a30:	cmp	w0, #0x1b
  435a34:	cset	w0, hi  // hi = pmore
  435a38:	and	w0, w0, #0xff
  435a3c:	and	x0, x0, #0xff
  435a40:	cmp	x0, #0x0
  435a44:	b.eq	435a70 <udev_watch_end+0x2e8>  // b.none
  435a48:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435a4c:	add	x1, x0, #0xb83
  435a50:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435a54:	add	x4, x0, #0xf60
  435a58:	mov	w3, #0x8c                  	// #140
  435a5c:	mov	x2, x1
  435a60:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435a64:	add	x1, x0, #0xdb8
  435a68:	mov	w0, #0x1                   	// #1
  435a6c:	bl	40abb0 <log_assert_failed_realm@plt>
  435a70:	add	x0, sp, #0x78
  435a74:	bl	40a3f0 <unlink@plt>
  435a78:	mov	w1, #0xffffffff            	// #-1
  435a7c:	ldr	x0, [sp, #40]
  435a80:	bl	40be80 <device_set_watch_handle@plt>
  435a84:	mov	w0, #0x0                   	// #0
  435a88:	mov	w1, w0
  435a8c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  435a90:	ldr	x0, [x0, #4032]
  435a94:	ldr	x2, [sp, #152]
  435a98:	ldr	x0, [x0]
  435a9c:	eor	x0, x2, x0
  435aa0:	cmp	x0, #0x0
  435aa4:	b.eq	435aac <udev_watch_end+0x324>  // b.none
  435aa8:	bl	40b280 <__stack_chk_fail@plt>
  435aac:	mov	w0, w1
  435ab0:	ldp	x29, x30, [sp, #16]
  435ab4:	add	sp, sp, #0xa0
  435ab8:	ret

0000000000435abc <udev_watch_lookup>:
  435abc:	stp	x29, x30, [sp, #-160]!
  435ac0:	mov	x29, sp
  435ac4:	str	x19, [sp, #16]
  435ac8:	str	w0, [sp, #44]
  435acc:	str	x1, [sp, #32]
  435ad0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  435ad4:	ldr	x0, [x0, #4032]
  435ad8:	ldr	x1, [x0]
  435adc:	str	x1, [sp, #152]
  435ae0:	mov	x1, #0x0                   	// #0
  435ae4:	str	xzr, [sp, #112]
  435ae8:	ldr	x0, [sp, #32]
  435aec:	cmp	x0, #0x0
  435af0:	cset	w0, eq  // eq = none
  435af4:	and	w0, w0, #0xff
  435af8:	and	x0, x0, #0xff
  435afc:	cmp	x0, #0x0
  435b00:	b.eq	435b2c <udev_watch_lookup+0x70>  // b.none
  435b04:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435b08:	add	x1, x0, #0xb83
  435b0c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435b10:	add	x4, x0, #0xf70
  435b14:	mov	w3, #0x99                  	// #153
  435b18:	mov	x2, x1
  435b1c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435b20:	add	x1, x0, #0xe98
  435b24:	mov	w0, #0x1                   	// #1
  435b28:	bl	40abb0 <log_assert_failed_realm@plt>
  435b2c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  435b30:	add	x0, x0, #0x100
  435b34:	ldr	w0, [x0]
  435b38:	cmp	w0, #0x0
  435b3c:	b.ge	435bd4 <udev_watch_lookup+0x118>  // b.tcont
  435b40:	mov	w0, #0x7                   	// #7
  435b44:	str	w0, [sp, #100]
  435b48:	mov	w0, #0x16                  	// #22
  435b4c:	movk	w0, #0x4000, lsl #16
  435b50:	str	w0, [sp, #104]
  435b54:	mov	w0, #0x1                   	// #1
  435b58:	str	w0, [sp, #108]
  435b5c:	ldr	w0, [sp, #108]
  435b60:	bl	40be30 <log_get_max_level_realm@plt>
  435b64:	mov	w1, w0
  435b68:	ldr	w0, [sp, #100]
  435b6c:	and	w0, w0, #0x7
  435b70:	cmp	w1, w0
  435b74:	b.lt	435bbc <udev_watch_lookup+0x100>  // b.tstop
  435b78:	ldr	w0, [sp, #108]
  435b7c:	lsl	w1, w0, #10
  435b80:	ldr	w0, [sp, #100]
  435b84:	orr	w6, w1, w0
  435b88:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435b8c:	add	x1, x0, #0xb83
  435b90:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435b94:	add	x5, x0, #0xba0
  435b98:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435b9c:	add	x4, x0, #0xf88
  435ba0:	mov	w3, #0x9c                  	// #156
  435ba4:	mov	x2, x1
  435ba8:	ldr	w1, [sp, #104]
  435bac:	mov	w0, w6
  435bb0:	bl	40b4f0 <log_internal_realm@plt>
  435bb4:	mov	w19, w0
  435bb8:	b	435e68 <udev_watch_lookup+0x3ac>
  435bbc:	ldr	w0, [sp, #104]
  435bc0:	cmp	w0, #0x0
  435bc4:	cneg	w0, w0, lt  // lt = tstop
  435bc8:	and	w0, w0, #0xff
  435bcc:	neg	w19, w0
  435bd0:	b	435e68 <udev_watch_lookup+0x3ac>
  435bd4:	ldr	w0, [sp, #44]
  435bd8:	cmp	w0, #0x0
  435bdc:	b.ge	435c74 <udev_watch_lookup+0x1b8>  // b.tcont
  435be0:	mov	w0, #0x7                   	// #7
  435be4:	str	w0, [sp, #88]
  435be8:	mov	w0, #0x16                  	// #22
  435bec:	movk	w0, #0x4000, lsl #16
  435bf0:	str	w0, [sp, #92]
  435bf4:	mov	w0, #0x1                   	// #1
  435bf8:	str	w0, [sp, #96]
  435bfc:	ldr	w0, [sp, #96]
  435c00:	bl	40be30 <log_get_max_level_realm@plt>
  435c04:	mov	w1, w0
  435c08:	ldr	w0, [sp, #88]
  435c0c:	and	w0, w0, #0x7
  435c10:	cmp	w1, w0
  435c14:	b.lt	435c5c <udev_watch_lookup+0x1a0>  // b.tstop
  435c18:	ldr	w0, [sp, #96]
  435c1c:	lsl	w1, w0, #10
  435c20:	ldr	w0, [sp, #88]
  435c24:	orr	w6, w1, w0
  435c28:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435c2c:	add	x1, x0, #0xb83
  435c30:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435c34:	add	x5, x0, #0xea0
  435c38:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435c3c:	add	x4, x0, #0xf88
  435c40:	mov	w3, #0xa0                  	// #160
  435c44:	mov	x2, x1
  435c48:	ldr	w1, [sp, #92]
  435c4c:	mov	w0, w6
  435c50:	bl	40b4f0 <log_internal_realm@plt>
  435c54:	mov	w19, w0
  435c58:	b	435e68 <udev_watch_lookup+0x3ac>
  435c5c:	ldr	w0, [sp, #92]
  435c60:	cmp	w0, #0x0
  435c64:	cneg	w0, w0, lt  // lt = tstop
  435c68:	and	w0, w0, #0xff
  435c6c:	neg	w19, w0
  435c70:	b	435e68 <udev_watch_lookup+0x3ac>
  435c74:	add	x4, sp, #0x78
  435c78:	ldr	w3, [sp, #44]
  435c7c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435c80:	add	x2, x0, #0xda0
  435c84:	mov	x1, #0x1c                  	// #28
  435c88:	mov	x0, x4
  435c8c:	bl	40a870 <snprintf@plt>
  435c90:	cmp	w0, #0x1b
  435c94:	cset	w0, hi  // hi = pmore
  435c98:	and	w0, w0, #0xff
  435c9c:	and	x0, x0, #0xff
  435ca0:	cmp	x0, #0x0
  435ca4:	b.eq	435cd0 <udev_watch_lookup+0x214>  // b.none
  435ca8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435cac:	add	x1, x0, #0xb83
  435cb0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435cb4:	add	x4, x0, #0xf70
  435cb8:	mov	w3, #0xa3                  	// #163
  435cbc:	mov	x2, x1
  435cc0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435cc4:	add	x1, x0, #0xdb8
  435cc8:	mov	w0, #0x1                   	// #1
  435ccc:	bl	40abb0 <log_assert_failed_realm@plt>
  435cd0:	add	x1, sp, #0x70
  435cd4:	add	x0, sp, #0x78
  435cd8:	bl	40bb40 <readlink_malloc@plt>
  435cdc:	str	w0, [sp, #60]
  435ce0:	ldr	w0, [sp, #60]
  435ce4:	cmn	w0, #0x2
  435ce8:	b.ne	435cf4 <udev_watch_lookup+0x238>  // b.any
  435cec:	mov	w19, #0x0                   	// #0
  435cf0:	b	435e68 <udev_watch_lookup+0x3ac>
  435cf4:	ldr	w0, [sp, #60]
  435cf8:	cmp	w0, #0x0
  435cfc:	b.ge	435d98 <udev_watch_lookup+0x2dc>  // b.tcont
  435d00:	mov	w0, #0x7                   	// #7
  435d04:	str	w0, [sp, #76]
  435d08:	ldr	w0, [sp, #60]
  435d0c:	str	w0, [sp, #80]
  435d10:	mov	w0, #0x1                   	// #1
  435d14:	str	w0, [sp, #84]
  435d18:	ldr	w0, [sp, #84]
  435d1c:	bl	40be30 <log_get_max_level_realm@plt>
  435d20:	mov	w1, w0
  435d24:	ldr	w0, [sp, #76]
  435d28:	and	w0, w0, #0x7
  435d2c:	cmp	w1, w0
  435d30:	b.lt	435d80 <udev_watch_lookup+0x2c4>  // b.tstop
  435d34:	ldr	w0, [sp, #84]
  435d38:	lsl	w1, w0, #10
  435d3c:	ldr	w0, [sp, #76]
  435d40:	orr	w7, w1, w0
  435d44:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435d48:	add	x1, x0, #0xb83
  435d4c:	add	x0, sp, #0x78
  435d50:	mov	x6, x0
  435d54:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435d58:	add	x5, x0, #0xeb8
  435d5c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435d60:	add	x4, x0, #0xf88
  435d64:	mov	w3, #0xa8                  	// #168
  435d68:	mov	x2, x1
  435d6c:	ldr	w1, [sp, #80]
  435d70:	mov	w0, w7
  435d74:	bl	40b4f0 <log_internal_realm@plt>
  435d78:	mov	w19, w0
  435d7c:	b	435e68 <udev_watch_lookup+0x3ac>
  435d80:	ldr	w0, [sp, #80]
  435d84:	cmp	w0, #0x0
  435d88:	cneg	w0, w0, lt  // lt = tstop
  435d8c:	and	w0, w0, #0xff
  435d90:	neg	w19, w0
  435d94:	b	435e68 <udev_watch_lookup+0x3ac>
  435d98:	ldr	x0, [sp, #112]
  435d9c:	mov	x1, x0
  435da0:	ldr	x0, [sp, #32]
  435da4:	bl	40bcc0 <sd_device_new_from_device_id@plt>
  435da8:	str	w0, [sp, #60]
  435dac:	ldr	w0, [sp, #60]
  435db0:	cmn	w0, #0x13
  435db4:	b.ne	435dc0 <udev_watch_lookup+0x304>  // b.any
  435db8:	mov	w19, #0x0                   	// #0
  435dbc:	b	435e68 <udev_watch_lookup+0x3ac>
  435dc0:	ldr	w0, [sp, #60]
  435dc4:	cmp	w0, #0x0
  435dc8:	b.ge	435e64 <udev_watch_lookup+0x3a8>  // b.tcont
  435dcc:	mov	w0, #0x7                   	// #7
  435dd0:	str	w0, [sp, #64]
  435dd4:	ldr	w0, [sp, #60]
  435dd8:	str	w0, [sp, #68]
  435ddc:	mov	w0, #0x1                   	// #1
  435de0:	str	w0, [sp, #72]
  435de4:	ldr	w0, [sp, #72]
  435de8:	bl	40be30 <log_get_max_level_realm@plt>
  435dec:	mov	w1, w0
  435df0:	ldr	w0, [sp, #64]
  435df4:	and	w0, w0, #0x7
  435df8:	cmp	w1, w0
  435dfc:	b.lt	435e4c <udev_watch_lookup+0x390>  // b.tstop
  435e00:	ldr	w0, [sp, #72]
  435e04:	lsl	w1, w0, #10
  435e08:	ldr	w0, [sp, #64]
  435e0c:	orr	w7, w1, w0
  435e10:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435e14:	add	x1, x0, #0xb83
  435e18:	ldr	x0, [sp, #112]
  435e1c:	mov	x6, x0
  435e20:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435e24:	add	x5, x0, #0xed8
  435e28:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435e2c:	add	x4, x0, #0xf88
  435e30:	mov	w3, #0xae                  	// #174
  435e34:	mov	x2, x1
  435e38:	ldr	w1, [sp, #68]
  435e3c:	mov	w0, w7
  435e40:	bl	40b4f0 <log_internal_realm@plt>
  435e44:	mov	w19, w0
  435e48:	b	435e68 <udev_watch_lookup+0x3ac>
  435e4c:	ldr	w0, [sp, #68]
  435e50:	cmp	w0, #0x0
  435e54:	cneg	w0, w0, lt  // lt = tstop
  435e58:	and	w0, w0, #0xff
  435e5c:	neg	w19, w0
  435e60:	b	435e68 <udev_watch_lookup+0x3ac>
  435e64:	mov	w19, #0x1                   	// #1
  435e68:	add	x0, sp, #0x70
  435e6c:	bl	434aac <freep>
  435e70:	mov	w1, w19
  435e74:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  435e78:	ldr	x0, [x0, #4032]
  435e7c:	ldr	x2, [sp, #152]
  435e80:	ldr	x0, [x0]
  435e84:	eor	x0, x2, x0
  435e88:	cmp	x0, #0x0
  435e8c:	b.eq	435e94 <udev_watch_lookup+0x3d8>  // b.none
  435e90:	bl	40b280 <__stack_chk_fail@plt>
  435e94:	mov	w0, w1
  435e98:	ldr	x19, [sp, #16]
  435e9c:	ldp	x29, x30, [sp], #160
  435ea0:	ret

0000000000435ea4 <strempty>:
  435ea4:	sub	sp, sp, #0x10
  435ea8:	str	x0, [sp, #8]
  435eac:	ldr	x0, [sp, #8]
  435eb0:	cmp	x0, #0x0
  435eb4:	b.ne	435ec0 <strempty+0x1c>  // b.any
  435eb8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  435ebc:	add	x0, x0, #0xfa0
  435ec0:	add	sp, sp, #0x10
  435ec4:	ret

0000000000435ec8 <strv_freep>:
  435ec8:	stp	x29, x30, [sp, #-32]!
  435ecc:	mov	x29, sp
  435ed0:	str	x0, [sp, #24]
  435ed4:	ldr	x0, [sp, #24]
  435ed8:	ldr	x0, [x0]
  435edc:	cmp	x0, #0x0
  435ee0:	b.eq	435ef0 <strv_freep+0x28>  // b.none
  435ee4:	ldr	x0, [sp, #24]
  435ee8:	ldr	x0, [x0]
  435eec:	bl	40b080 <strv_free@plt>
  435ef0:	nop
  435ef4:	ldp	x29, x30, [sp], #32
  435ef8:	ret

0000000000435efc <udev_builtin_init>:
  435efc:	stp	x29, x30, [sp, #-32]!
  435f00:	mov	x29, sp
  435f04:	adrp	x0, 48d000 <arg_resolve_name_timing>
  435f08:	add	x0, x0, #0x1a0
  435f0c:	ldrb	w0, [x0]
  435f10:	cmp	w0, #0x0
  435f14:	b.ne	435f98 <udev_builtin_init+0x9c>  // b.any
  435f18:	str	wzr, [sp, #28]
  435f1c:	b	435f78 <udev_builtin_init+0x7c>
  435f20:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  435f24:	add	x0, x0, #0x7d0
  435f28:	ldr	w1, [sp, #28]
  435f2c:	ldr	x0, [x0, x1, lsl #3]
  435f30:	cmp	x0, #0x0
  435f34:	b.eq	435f6c <udev_builtin_init+0x70>  // b.none
  435f38:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  435f3c:	add	x0, x0, #0x7d0
  435f40:	ldr	w1, [sp, #28]
  435f44:	ldr	x0, [x0, x1, lsl #3]
  435f48:	ldr	x0, [x0, #24]
  435f4c:	cmp	x0, #0x0
  435f50:	b.eq	435f6c <udev_builtin_init+0x70>  // b.none
  435f54:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  435f58:	add	x0, x0, #0x7d0
  435f5c:	ldr	w1, [sp, #28]
  435f60:	ldr	x0, [x0, x1, lsl #3]
  435f64:	ldr	x0, [x0, #24]
  435f68:	blr	x0
  435f6c:	ldr	w0, [sp, #28]
  435f70:	add	w0, w0, #0x1
  435f74:	str	w0, [sp, #28]
  435f78:	ldr	w0, [sp, #28]
  435f7c:	cmp	w0, #0xa
  435f80:	b.ls	435f20 <udev_builtin_init+0x24>  // b.plast
  435f84:	adrp	x0, 48d000 <arg_resolve_name_timing>
  435f88:	add	x0, x0, #0x1a0
  435f8c:	mov	w1, #0x1                   	// #1
  435f90:	strb	w1, [x0]
  435f94:	b	435f9c <udev_builtin_init+0xa0>
  435f98:	nop
  435f9c:	ldp	x29, x30, [sp], #32
  435fa0:	ret

0000000000435fa4 <udev_builtin_exit>:
  435fa4:	stp	x29, x30, [sp, #-32]!
  435fa8:	mov	x29, sp
  435fac:	adrp	x0, 48d000 <arg_resolve_name_timing>
  435fb0:	add	x0, x0, #0x1a0
  435fb4:	ldrb	w0, [x0]
  435fb8:	eor	w0, w0, #0x1
  435fbc:	and	w0, w0, #0xff
  435fc0:	cmp	w0, #0x0
  435fc4:	b.ne	436044 <udev_builtin_exit+0xa0>  // b.any
  435fc8:	str	wzr, [sp, #28]
  435fcc:	b	436028 <udev_builtin_exit+0x84>
  435fd0:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  435fd4:	add	x0, x0, #0x7d0
  435fd8:	ldr	w1, [sp, #28]
  435fdc:	ldr	x0, [x0, x1, lsl #3]
  435fe0:	cmp	x0, #0x0
  435fe4:	b.eq	43601c <udev_builtin_exit+0x78>  // b.none
  435fe8:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  435fec:	add	x0, x0, #0x7d0
  435ff0:	ldr	w1, [sp, #28]
  435ff4:	ldr	x0, [x0, x1, lsl #3]
  435ff8:	ldr	x0, [x0, #32]
  435ffc:	cmp	x0, #0x0
  436000:	b.eq	43601c <udev_builtin_exit+0x78>  // b.none
  436004:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  436008:	add	x0, x0, #0x7d0
  43600c:	ldr	w1, [sp, #28]
  436010:	ldr	x0, [x0, x1, lsl #3]
  436014:	ldr	x0, [x0, #32]
  436018:	blr	x0
  43601c:	ldr	w0, [sp, #28]
  436020:	add	w0, w0, #0x1
  436024:	str	w0, [sp, #28]
  436028:	ldr	w0, [sp, #28]
  43602c:	cmp	w0, #0xa
  436030:	b.ls	435fd0 <udev_builtin_exit+0x2c>  // b.plast
  436034:	adrp	x0, 48d000 <arg_resolve_name_timing>
  436038:	add	x0, x0, #0x1a0
  43603c:	strb	wzr, [x0]
  436040:	b	436048 <udev_builtin_exit+0xa4>
  436044:	nop
  436048:	ldp	x29, x30, [sp], #32
  43604c:	ret

0000000000436050 <udev_builtin_validate>:
  436050:	stp	x29, x30, [sp, #-32]!
  436054:	mov	x29, sp
  436058:	str	wzr, [sp, #28]
  43605c:	b	4360cc <udev_builtin_validate+0x7c>
  436060:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  436064:	add	x0, x0, #0x7d0
  436068:	ldr	w1, [sp, #28]
  43606c:	ldr	x0, [x0, x1, lsl #3]
  436070:	cmp	x0, #0x0
  436074:	b.eq	4360c0 <udev_builtin_validate+0x70>  // b.none
  436078:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  43607c:	add	x0, x0, #0x7d0
  436080:	ldr	w1, [sp, #28]
  436084:	ldr	x0, [x0, x1, lsl #3]
  436088:	ldr	x0, [x0, #40]
  43608c:	cmp	x0, #0x0
  436090:	b.eq	4360c0 <udev_builtin_validate+0x70>  // b.none
  436094:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  436098:	add	x0, x0, #0x7d0
  43609c:	ldr	w1, [sp, #28]
  4360a0:	ldr	x0, [x0, x1, lsl #3]
  4360a4:	ldr	x0, [x0, #40]
  4360a8:	blr	x0
  4360ac:	and	w0, w0, #0xff
  4360b0:	cmp	w0, #0x0
  4360b4:	b.eq	4360c0 <udev_builtin_validate+0x70>  // b.none
  4360b8:	mov	w0, #0x1                   	// #1
  4360bc:	b	4360dc <udev_builtin_validate+0x8c>
  4360c0:	ldr	w0, [sp, #28]
  4360c4:	add	w0, w0, #0x1
  4360c8:	str	w0, [sp, #28]
  4360cc:	ldr	w0, [sp, #28]
  4360d0:	cmp	w0, #0xa
  4360d4:	b.ls	436060 <udev_builtin_validate+0x10>  // b.plast
  4360d8:	mov	w0, #0x0                   	// #0
  4360dc:	ldp	x29, x30, [sp], #32
  4360e0:	ret

00000000004360e4 <udev_builtin_name>:
  4360e4:	stp	x29, x30, [sp, #-32]!
  4360e8:	mov	x29, sp
  4360ec:	str	w0, [sp, #28]
  4360f0:	ldr	w0, [sp, #28]
  4360f4:	lsr	w0, w0, #31
  4360f8:	and	w0, w0, #0xff
  4360fc:	and	x0, x0, #0xff
  436100:	cmp	x0, #0x0
  436104:	b.ne	436124 <udev_builtin_name+0x40>  // b.any
  436108:	ldr	w0, [sp, #28]
  43610c:	cmp	w0, #0xa
  436110:	cset	w0, gt
  436114:	and	w0, w0, #0xff
  436118:	and	x0, x0, #0xff
  43611c:	cmp	x0, #0x0
  436120:	b.eq	43614c <udev_builtin_name+0x68>  // b.none
  436124:	adrp	x0, 455000 <__func__.10675+0x10a0>
  436128:	add	x1, x0, #0xfbb
  43612c:	adrp	x0, 456000 <__func__.9297+0x78>
  436130:	add	x4, x0, #0x58
  436134:	mov	w3, #0x4e                  	// #78
  436138:	mov	x2, x1
  43613c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  436140:	add	x1, x0, #0xfd8
  436144:	mov	w0, #0x1                   	// #1
  436148:	bl	40abb0 <log_assert_failed_realm@plt>
  43614c:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  436150:	add	x0, x0, #0x7d0
  436154:	ldrsw	x1, [sp, #28]
  436158:	ldr	x0, [x0, x1, lsl #3]
  43615c:	cmp	x0, #0x0
  436160:	b.ne	43616c <udev_builtin_name+0x88>  // b.any
  436164:	mov	x0, #0x0                   	// #0
  436168:	b	436180 <udev_builtin_name+0x9c>
  43616c:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  436170:	add	x0, x0, #0x7d0
  436174:	ldrsw	x1, [sp, #28]
  436178:	ldr	x0, [x0, x1, lsl #3]
  43617c:	ldr	x0, [x0]
  436180:	ldp	x29, x30, [sp], #32
  436184:	ret

0000000000436188 <udev_builtin_run_once>:
  436188:	stp	x29, x30, [sp, #-32]!
  43618c:	mov	x29, sp
  436190:	str	w0, [sp, #28]
  436194:	ldr	w0, [sp, #28]
  436198:	lsr	w0, w0, #31
  43619c:	and	w0, w0, #0xff
  4361a0:	and	x0, x0, #0xff
  4361a4:	cmp	x0, #0x0
  4361a8:	b.ne	4361c8 <udev_builtin_run_once+0x40>  // b.any
  4361ac:	ldr	w0, [sp, #28]
  4361b0:	cmp	w0, #0xa
  4361b4:	cset	w0, gt
  4361b8:	and	w0, w0, #0xff
  4361bc:	and	x0, x0, #0xff
  4361c0:	cmp	x0, #0x0
  4361c4:	b.eq	4361f0 <udev_builtin_run_once+0x68>  // b.none
  4361c8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4361cc:	add	x1, x0, #0xfbb
  4361d0:	adrp	x0, 456000 <__func__.9297+0x78>
  4361d4:	add	x4, x0, #0x70
  4361d8:	mov	w3, #0x57                  	// #87
  4361dc:	mov	x2, x1
  4361e0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4361e4:	add	x1, x0, #0xfd8
  4361e8:	mov	w0, #0x1                   	// #1
  4361ec:	bl	40abb0 <log_assert_failed_realm@plt>
  4361f0:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  4361f4:	add	x0, x0, #0x7d0
  4361f8:	ldrsw	x1, [sp, #28]
  4361fc:	ldr	x0, [x0, x1, lsl #3]
  436200:	cmp	x0, #0x0
  436204:	b.ne	436210 <udev_builtin_run_once+0x88>  // b.any
  436208:	mov	w0, #0x0                   	// #0
  43620c:	b	436224 <udev_builtin_run_once+0x9c>
  436210:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  436214:	add	x0, x0, #0x7d0
  436218:	ldrsw	x1, [sp, #28]
  43621c:	ldr	x0, [x0, x1, lsl #3]
  436220:	ldrb	w0, [x0, #48]
  436224:	ldp	x29, x30, [sp], #32
  436228:	ret

000000000043622c <udev_builtin_lookup>:
  43622c:	stp	x29, x30, [sp, #-48]!
  436230:	mov	x29, sp
  436234:	str	x0, [sp, #24]
  436238:	ldr	x0, [sp, #24]
  43623c:	cmp	x0, #0x0
  436240:	cset	w0, eq  // eq = none
  436244:	and	w0, w0, #0xff
  436248:	and	x0, x0, #0xff
  43624c:	cmp	x0, #0x0
  436250:	b.eq	43627c <udev_builtin_lookup+0x50>  // b.none
  436254:	adrp	x0, 455000 <__func__.10675+0x10a0>
  436258:	add	x1, x0, #0xfbb
  43625c:	adrp	x0, 456000 <__func__.9297+0x78>
  436260:	add	x4, x0, #0x88
  436264:	mov	w3, #0x63                  	// #99
  436268:	mov	x2, x1
  43626c:	adrp	x0, 456000 <__func__.9297+0x78>
  436270:	add	x1, x0, #0x0
  436274:	mov	w0, #0x1                   	// #1
  436278:	bl	40abb0 <log_assert_failed_realm@plt>
  43627c:	adrp	x0, 456000 <__func__.9297+0x78>
  436280:	add	x1, x0, #0x8
  436284:	ldr	x0, [sp, #24]
  436288:	bl	40aeb0 <strspn@plt>
  43628c:	mov	x1, x0
  436290:	ldr	x0, [sp, #24]
  436294:	add	x0, x0, x1
  436298:	str	x0, [sp, #24]
  43629c:	adrp	x0, 456000 <__func__.9297+0x78>
  4362a0:	add	x1, x0, #0x8
  4362a4:	ldr	x0, [sp, #24]
  4362a8:	bl	40a470 <strcspn@plt>
  4362ac:	str	x0, [sp, #40]
  4362b0:	str	wzr, [sp, #36]
  4362b4:	b	43630c <udev_builtin_lookup+0xe0>
  4362b8:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  4362bc:	add	x0, x0, #0x7d0
  4362c0:	ldrsw	x1, [sp, #36]
  4362c4:	ldr	x0, [x0, x1, lsl #3]
  4362c8:	cmp	x0, #0x0
  4362cc:	b.eq	436300 <udev_builtin_lookup+0xd4>  // b.none
  4362d0:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  4362d4:	add	x0, x0, #0x7d0
  4362d8:	ldrsw	x1, [sp, #36]
  4362dc:	ldr	x0, [x0, x1, lsl #3]
  4362e0:	ldr	x0, [x0]
  4362e4:	ldr	x2, [sp, #40]
  4362e8:	ldr	x1, [sp, #24]
  4362ec:	bl	40ae00 <strncmp@plt>
  4362f0:	cmp	w0, #0x0
  4362f4:	b.ne	436300 <udev_builtin_lookup+0xd4>  // b.any
  4362f8:	ldr	w0, [sp, #36]
  4362fc:	b	43631c <udev_builtin_lookup+0xf0>
  436300:	ldr	w0, [sp, #36]
  436304:	add	w0, w0, #0x1
  436308:	str	w0, [sp, #36]
  43630c:	ldr	w0, [sp, #36]
  436310:	cmp	w0, #0xa
  436314:	b.le	4362b8 <udev_builtin_lookup+0x8c>
  436318:	mov	w0, #0xffffffff            	// #-1
  43631c:	ldp	x29, x30, [sp], #48
  436320:	ret

0000000000436324 <udev_builtin_run>:
  436324:	stp	x29, x30, [sp, #-80]!
  436328:	mov	x29, sp
  43632c:	str	x19, [sp, #16]
  436330:	str	x0, [sp, #56]
  436334:	str	w1, [sp, #52]
  436338:	str	x2, [sp, #40]
  43633c:	strb	w3, [sp, #51]
  436340:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  436344:	ldr	x0, [x0, #4032]
  436348:	ldr	x1, [x0]
  43634c:	str	x1, [sp, #72]
  436350:	mov	x1, #0x0                   	// #0
  436354:	str	xzr, [sp, #64]
  436358:	ldr	x0, [sp, #56]
  43635c:	cmp	x0, #0x0
  436360:	cset	w0, eq  // eq = none
  436364:	and	w0, w0, #0xff
  436368:	and	x0, x0, #0xff
  43636c:	cmp	x0, #0x0
  436370:	b.eq	43639c <udev_builtin_run+0x78>  // b.none
  436374:	adrp	x0, 455000 <__func__.10675+0x10a0>
  436378:	add	x1, x0, #0xfbb
  43637c:	adrp	x0, 456000 <__func__.9297+0x78>
  436380:	add	x4, x0, #0xa0
  436384:	mov	w3, #0x71                  	// #113
  436388:	mov	x2, x1
  43638c:	adrp	x0, 456000 <__func__.9297+0x78>
  436390:	add	x1, x0, #0x10
  436394:	mov	w0, #0x1                   	// #1
  436398:	bl	40abb0 <log_assert_failed_realm@plt>
  43639c:	ldr	w0, [sp, #52]
  4363a0:	lsr	w0, w0, #31
  4363a4:	and	w0, w0, #0xff
  4363a8:	and	x0, x0, #0xff
  4363ac:	cmp	x0, #0x0
  4363b0:	b.ne	4363d0 <udev_builtin_run+0xac>  // b.any
  4363b4:	ldr	w0, [sp, #52]
  4363b8:	cmp	w0, #0xa
  4363bc:	cset	w0, gt
  4363c0:	and	w0, w0, #0xff
  4363c4:	and	x0, x0, #0xff
  4363c8:	cmp	x0, #0x0
  4363cc:	b.eq	4363f8 <udev_builtin_run+0xd4>  // b.none
  4363d0:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4363d4:	add	x1, x0, #0xfbb
  4363d8:	adrp	x0, 456000 <__func__.9297+0x78>
  4363dc:	add	x4, x0, #0xa0
  4363e0:	mov	w3, #0x72                  	// #114
  4363e4:	mov	x2, x1
  4363e8:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4363ec:	add	x1, x0, #0xfd8
  4363f0:	mov	w0, #0x1                   	// #1
  4363f4:	bl	40abb0 <log_assert_failed_realm@plt>
  4363f8:	ldr	x0, [sp, #40]
  4363fc:	cmp	x0, #0x0
  436400:	cset	w0, eq  // eq = none
  436404:	and	w0, w0, #0xff
  436408:	and	x0, x0, #0xff
  43640c:	cmp	x0, #0x0
  436410:	b.eq	43643c <udev_builtin_run+0x118>  // b.none
  436414:	adrp	x0, 455000 <__func__.10675+0x10a0>
  436418:	add	x1, x0, #0xfbb
  43641c:	adrp	x0, 456000 <__func__.9297+0x78>
  436420:	add	x4, x0, #0xa0
  436424:	mov	w3, #0x73                  	// #115
  436428:	mov	x2, x1
  43642c:	adrp	x0, 456000 <__func__.9297+0x78>
  436430:	add	x1, x0, #0x0
  436434:	mov	w0, #0x1                   	// #1
  436438:	bl	40abb0 <log_assert_failed_realm@plt>
  43643c:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  436440:	add	x0, x0, #0x7d0
  436444:	ldrsw	x1, [sp, #52]
  436448:	ldr	x0, [x0, x1, lsl #3]
  43644c:	cmp	x0, #0x0
  436450:	b.ne	43645c <udev_builtin_run+0x138>  // b.any
  436454:	mov	w19, #0xffffffa1            	// #-95
  436458:	b	4364c8 <udev_builtin_run+0x1a4>
  43645c:	mov	w2, #0x3                   	// #3
  436460:	mov	x1, #0x0                   	// #0
  436464:	ldr	x0, [sp, #40]
  436468:	bl	40a7f0 <strv_split_full@plt>
  43646c:	str	x0, [sp, #64]
  436470:	ldr	x0, [sp, #64]
  436474:	cmp	x0, #0x0
  436478:	b.ne	436484 <udev_builtin_run+0x160>  // b.any
  43647c:	mov	w19, #0xfffffff4            	// #-12
  436480:	b	4364c8 <udev_builtin_run+0x1a4>
  436484:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  436488:	ldr	x0, [x0, #4064]
  43648c:	str	wzr, [x0]
  436490:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  436494:	add	x0, x0, #0x7d0
  436498:	ldrsw	x1, [sp, #52]
  43649c:	ldr	x0, [x0, x1, lsl #3]
  4364a0:	ldr	x19, [x0, #8]
  4364a4:	ldr	x0, [sp, #64]
  4364a8:	bl	40b3f0 <strv_length@plt>
  4364ac:	mov	w1, w0
  4364b0:	ldr	x0, [sp, #64]
  4364b4:	ldrb	w3, [sp, #51]
  4364b8:	mov	x2, x0
  4364bc:	ldr	x0, [sp, #56]
  4364c0:	blr	x19
  4364c4:	mov	w19, w0
  4364c8:	add	x0, sp, #0x40
  4364cc:	bl	435ec8 <strv_freep>
  4364d0:	mov	w1, w19
  4364d4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4364d8:	ldr	x0, [x0, #4032]
  4364dc:	ldr	x2, [sp, #72]
  4364e0:	ldr	x0, [x0]
  4364e4:	eor	x0, x2, x0
  4364e8:	cmp	x0, #0x0
  4364ec:	b.eq	4364f4 <udev_builtin_run+0x1d0>  // b.none
  4364f0:	bl	40b280 <__stack_chk_fail@plt>
  4364f4:	mov	w0, w1
  4364f8:	ldr	x19, [sp, #16]
  4364fc:	ldp	x29, x30, [sp], #80
  436500:	ret

0000000000436504 <udev_builtin_add_property>:
  436504:	sub	sp, sp, #0xb0
  436508:	stp	x29, x30, [sp, #48]
  43650c:	add	x29, sp, #0x30
  436510:	stp	x19, x20, [sp, #64]
  436514:	stp	x21, x22, [sp, #80]
  436518:	str	x0, [sp, #120]
  43651c:	strb	w1, [sp, #119]
  436520:	str	x2, [sp, #104]
  436524:	str	x3, [sp, #96]
  436528:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43652c:	ldr	x0, [x0, #4032]
  436530:	ldr	x1, [x0]
  436534:	str	x1, [sp, #168]
  436538:	mov	x1, #0x0                   	// #0
  43653c:	ldr	x0, [sp, #120]
  436540:	cmp	x0, #0x0
  436544:	cset	w0, eq  // eq = none
  436548:	and	w0, w0, #0xff
  43654c:	and	x0, x0, #0xff
  436550:	cmp	x0, #0x0
  436554:	b.eq	436580 <udev_builtin_add_property+0x7c>  // b.none
  436558:	adrp	x0, 455000 <__func__.10675+0x10a0>
  43655c:	add	x1, x0, #0xfbb
  436560:	adrp	x0, 456000 <__func__.9297+0x78>
  436564:	add	x4, x0, #0xb8
  436568:	mov	w3, #0x84                  	// #132
  43656c:	mov	x2, x1
  436570:	adrp	x0, 456000 <__func__.9297+0x78>
  436574:	add	x1, x0, #0x10
  436578:	mov	w0, #0x1                   	// #1
  43657c:	bl	40abb0 <log_assert_failed_realm@plt>
  436580:	ldr	x0, [sp, #104]
  436584:	cmp	x0, #0x0
  436588:	cset	w0, eq  // eq = none
  43658c:	and	w0, w0, #0xff
  436590:	and	x0, x0, #0xff
  436594:	cmp	x0, #0x0
  436598:	b.eq	4365c4 <udev_builtin_add_property+0xc0>  // b.none
  43659c:	adrp	x0, 455000 <__func__.10675+0x10a0>
  4365a0:	add	x1, x0, #0xfbb
  4365a4:	adrp	x0, 456000 <__func__.9297+0x78>
  4365a8:	add	x4, x0, #0xb8
  4365ac:	mov	w3, #0x85                  	// #133
  4365b0:	mov	x2, x1
  4365b4:	adrp	x0, 456000 <__func__.9297+0x78>
  4365b8:	add	x1, x0, #0x18
  4365bc:	mov	w0, #0x1                   	// #1
  4365c0:	bl	40abb0 <log_assert_failed_realm@plt>
  4365c4:	ldr	x2, [sp, #96]
  4365c8:	ldr	x1, [sp, #104]
  4365cc:	ldr	x0, [sp, #120]
  4365d0:	bl	40bab0 <device_add_property@plt>
  4365d4:	str	w0, [sp, #140]
  4365d8:	ldr	w0, [sp, #140]
  4365dc:	cmp	w0, #0x0
  4365e0:	b.ge	4366e0 <udev_builtin_add_property+0x1dc>  // b.tcont
  4365e4:	str	xzr, [sp, #152]
  4365e8:	ldr	x0, [sp, #120]
  4365ec:	str	x0, [sp, #160]
  4365f0:	mov	w0, #0x7                   	// #7
  4365f4:	str	w0, [sp, #144]
  4365f8:	ldr	w0, [sp, #140]
  4365fc:	str	w0, [sp, #148]
  436600:	ldr	x0, [sp, #160]
  436604:	cmp	x0, #0x0
  436608:	b.eq	436644 <udev_builtin_add_property+0x140>  // b.none
  43660c:	mov	w0, #0x1                   	// #1
  436610:	bl	40be30 <log_get_max_level_realm@plt>
  436614:	mov	w1, w0
  436618:	ldr	w0, [sp, #144]
  43661c:	cmp	w0, w1
  436620:	cset	w0, le
  436624:	and	w0, w0, #0xff
  436628:	and	x0, x0, #0xff
  43662c:	cmp	x0, #0x0
  436630:	b.eq	436644 <udev_builtin_add_property+0x140>  // b.none
  436634:	add	x0, sp, #0x98
  436638:	mov	x1, x0
  43663c:	ldr	x0, [sp, #160]
  436640:	bl	40aba0 <sd_device_get_sysname@plt>
  436644:	adrp	x0, 455000 <__func__.10675+0x10a0>
  436648:	add	x21, x0, #0xfbb
  43664c:	ldr	x0, [sp, #152]
  436650:	cmp	x0, #0x0
  436654:	b.eq	436664 <udev_builtin_add_property+0x160>  // b.none
  436658:	adrp	x0, 456000 <__func__.9297+0x78>
  43665c:	add	x20, x0, #0x20
  436660:	b	436668 <udev_builtin_add_property+0x164>
  436664:	mov	x20, #0x0                   	// #0
  436668:	ldr	x22, [sp, #152]
  43666c:	ldr	x0, [sp, #96]
  436670:	cmp	x0, #0x0
  436674:	b.eq	436684 <udev_builtin_add_property+0x180>  // b.none
  436678:	adrp	x0, 456000 <__func__.9297+0x78>
  43667c:	add	x19, x0, #0x28
  436680:	b	43668c <udev_builtin_add_property+0x188>
  436684:	adrp	x0, 455000 <__func__.10675+0x10a0>
  436688:	add	x19, x0, #0xfa0
  43668c:	ldr	x0, [sp, #96]
  436690:	bl	435ea4 <strempty>
  436694:	str	x0, [sp, #32]
  436698:	str	x19, [sp, #24]
  43669c:	ldr	x0, [sp, #104]
  4366a0:	str	x0, [sp, #16]
  4366a4:	adrp	x0, 456000 <__func__.9297+0x78>
  4366a8:	add	x0, x0, #0x30
  4366ac:	str	x0, [sp, #8]
  4366b0:	str	xzr, [sp]
  4366b4:	mov	x7, #0x0                   	// #0
  4366b8:	mov	x6, x22
  4366bc:	mov	x5, x20
  4366c0:	adrp	x0, 456000 <__func__.9297+0x78>
  4366c4:	add	x4, x0, #0xd8
  4366c8:	mov	w3, #0x89                  	// #137
  4366cc:	mov	x2, x21
  4366d0:	ldr	w1, [sp, #148]
  4366d4:	ldr	w0, [sp, #144]
  4366d8:	bl	40b020 <log_object_internal@plt>
  4366dc:	b	43670c <udev_builtin_add_property+0x208>
  4366e0:	ldrb	w0, [sp, #119]
  4366e4:	cmp	w0, #0x0
  4366e8:	b.eq	436708 <udev_builtin_add_property+0x204>  // b.none
  4366ec:	ldr	x0, [sp, #96]
  4366f0:	bl	435ea4 <strempty>
  4366f4:	mov	x2, x0
  4366f8:	ldr	x1, [sp, #104]
  4366fc:	adrp	x0, 456000 <__func__.9297+0x78>
  436700:	add	x0, x0, #0x50
  436704:	bl	40bc00 <printf@plt>
  436708:	mov	w0, #0x0                   	// #0
  43670c:	mov	w1, w0
  436710:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  436714:	ldr	x0, [x0, #4032]
  436718:	ldr	x2, [sp, #168]
  43671c:	ldr	x0, [x0]
  436720:	eor	x0, x2, x0
  436724:	cmp	x0, #0x0
  436728:	b.eq	436730 <udev_builtin_add_property+0x22c>  // b.none
  43672c:	bl	40b280 <__stack_chk_fail@plt>
  436730:	mov	w0, w1
  436734:	ldp	x19, x20, [sp, #64]
  436738:	ldp	x21, x22, [sp, #80]
  43673c:	ldp	x29, x30, [sp, #48]
  436740:	add	sp, sp, #0xb0
  436744:	ret

0000000000436748 <closep>:
  436748:	stp	x29, x30, [sp, #-32]!
  43674c:	mov	x29, sp
  436750:	str	x0, [sp, #24]
  436754:	ldr	x0, [sp, #24]
  436758:	ldr	w0, [x0]
  43675c:	bl	40aad0 <safe_close@plt>
  436760:	nop
  436764:	ldp	x29, x30, [sp], #32
  436768:	ret

000000000043676c <one_zero>:
  43676c:	sub	sp, sp, #0x10
  436770:	strb	w0, [sp, #15]
  436774:	ldrb	w0, [sp, #15]
  436778:	cmp	w0, #0x0
  43677c:	b.eq	43678c <one_zero+0x20>  // b.none
  436780:	adrp	x0, 456000 <__func__.9297+0x78>
  436784:	add	x0, x0, #0xf8
  436788:	b	436794 <one_zero+0x28>
  43678c:	adrp	x0, 456000 <__func__.9297+0x78>
  436790:	add	x0, x0, #0x100
  436794:	add	sp, sp, #0x10
  436798:	ret

000000000043679c <builtin_btrfs>:
  43679c:	mov	x12, #0x10a0                	// #4256
  4367a0:	sub	sp, sp, x12
  4367a4:	stp	x29, x30, [sp, #16]
  4367a8:	add	x29, sp, #0x10
  4367ac:	str	x19, [sp, #32]
  4367b0:	str	x0, [sp, #72]
  4367b4:	str	w1, [sp, #68]
  4367b8:	str	x2, [sp, #56]
  4367bc:	strb	w3, [sp, #67]
  4367c0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4367c4:	ldr	x0, [x0, #4032]
  4367c8:	ldr	x1, [x0]
  4367cc:	str	x1, [sp, #4248]
  4367d0:	mov	x1, #0x0                   	// #0
  4367d4:	add	x0, sp, #0x98
  4367d8:	mov	x1, #0x1000                	// #4096
  4367dc:	mov	x2, x1
  4367e0:	mov	w1, #0x0                   	// #0
  4367e4:	bl	40be00 <memset@plt>
  4367e8:	mov	w0, #0xffffffff            	// #-1
  4367ec:	str	w0, [sp, #88]
  4367f0:	ldr	w0, [sp, #68]
  4367f4:	cmp	w0, #0x3
  4367f8:	b.ne	436820 <builtin_btrfs+0x84>  // b.any
  4367fc:	ldr	x0, [sp, #56]
  436800:	add	x0, x0, #0x8
  436804:	ldr	x2, [x0]
  436808:	adrp	x0, 456000 <__func__.9297+0x78>
  43680c:	add	x1, x0, #0x108
  436810:	mov	x0, x2
  436814:	bl	40b710 <strcmp@plt>
  436818:	cmp	w0, #0x0
  43681c:	b.eq	4368e8 <builtin_btrfs+0x14c>  // b.none
  436820:	str	xzr, [sp, #120]
  436824:	ldr	x0, [sp, #72]
  436828:	str	x0, [sp, #144]
  43682c:	mov	w0, #0x3                   	// #3
  436830:	str	w0, [sp, #112]
  436834:	mov	w0, #0x16                  	// #22
  436838:	movk	w0, #0x4000, lsl #16
  43683c:	str	w0, [sp, #116]
  436840:	ldr	x0, [sp, #144]
  436844:	cmp	x0, #0x0
  436848:	b.eq	436884 <builtin_btrfs+0xe8>  // b.none
  43684c:	mov	w0, #0x1                   	// #1
  436850:	bl	40be30 <log_get_max_level_realm@plt>
  436854:	mov	w1, w0
  436858:	ldr	w0, [sp, #112]
  43685c:	cmp	w0, w1
  436860:	cset	w0, le
  436864:	and	w0, w0, #0xff
  436868:	and	x0, x0, #0xff
  43686c:	cmp	x0, #0x0
  436870:	b.eq	436884 <builtin_btrfs+0xe8>  // b.none
  436874:	add	x0, sp, #0x78
  436878:	mov	x1, x0
  43687c:	ldr	x0, [sp, #144]
  436880:	bl	40aba0 <sd_device_get_sysname@plt>
  436884:	adrp	x0, 456000 <__func__.9297+0x78>
  436888:	add	x2, x0, #0x113
  43688c:	ldr	x0, [sp, #120]
  436890:	cmp	x0, #0x0
  436894:	b.eq	4368a4 <builtin_btrfs+0x108>  // b.none
  436898:	adrp	x0, 456000 <__func__.9297+0x78>
  43689c:	add	x0, x0, #0x138
  4368a0:	b	4368a8 <builtin_btrfs+0x10c>
  4368a4:	mov	x0, #0x0                   	// #0
  4368a8:	ldr	x3, [sp, #120]
  4368ac:	adrp	x1, 456000 <__func__.9297+0x78>
  4368b0:	add	x1, x1, #0x140
  4368b4:	str	x1, [sp, #8]
  4368b8:	str	xzr, [sp]
  4368bc:	mov	x7, #0x0                   	// #0
  4368c0:	mov	x6, x3
  4368c4:	mov	x5, x0
  4368c8:	adrp	x0, 456000 <__func__.9297+0x78>
  4368cc:	add	x4, x0, #0x1f8
  4368d0:	mov	w3, #0x15                  	// #21
  4368d4:	ldr	w1, [sp, #116]
  4368d8:	ldr	w0, [sp, #112]
  4368dc:	bl	40b020 <log_object_internal@plt>
  4368e0:	mov	w19, w0
  4368e4:	b	436b14 <builtin_btrfs+0x378>
  4368e8:	mov	w1, #0x2                   	// #2
  4368ec:	movk	w1, #0x8, lsl #16
  4368f0:	adrp	x0, 456000 <__func__.9297+0x78>
  4368f4:	add	x0, x0, #0x158
  4368f8:	bl	40bcb0 <open64@plt>
  4368fc:	str	w0, [sp, #88]
  436900:	ldr	w0, [sp, #88]
  436904:	cmp	w0, #0x0
  436908:	b.ge	4369d4 <builtin_btrfs+0x238>  // b.tcont
  43690c:	str	xzr, [sp, #120]
  436910:	ldr	x0, [sp, #72]
  436914:	str	x0, [sp, #136]
  436918:	mov	w0, #0x7                   	// #7
  43691c:	str	w0, [sp, #104]
  436920:	bl	40b040 <__errno_location@plt>
  436924:	ldr	w0, [x0]
  436928:	str	w0, [sp, #108]
  43692c:	ldr	x0, [sp, #136]
  436930:	cmp	x0, #0x0
  436934:	b.eq	436970 <builtin_btrfs+0x1d4>  // b.none
  436938:	mov	w0, #0x1                   	// #1
  43693c:	bl	40be30 <log_get_max_level_realm@plt>
  436940:	mov	w1, w0
  436944:	ldr	w0, [sp, #104]
  436948:	cmp	w0, w1
  43694c:	cset	w0, le
  436950:	and	w0, w0, #0xff
  436954:	and	x0, x0, #0xff
  436958:	cmp	x0, #0x0
  43695c:	b.eq	436970 <builtin_btrfs+0x1d4>  // b.none
  436960:	add	x0, sp, #0x78
  436964:	mov	x1, x0
  436968:	ldr	x0, [sp, #136]
  43696c:	bl	40aba0 <sd_device_get_sysname@plt>
  436970:	adrp	x0, 456000 <__func__.9297+0x78>
  436974:	add	x2, x0, #0x113
  436978:	ldr	x0, [sp, #120]
  43697c:	cmp	x0, #0x0
  436980:	b.eq	436990 <builtin_btrfs+0x1f4>  // b.none
  436984:	adrp	x0, 456000 <__func__.9297+0x78>
  436988:	add	x0, x0, #0x138
  43698c:	b	436994 <builtin_btrfs+0x1f8>
  436990:	mov	x0, #0x0                   	// #0
  436994:	ldr	x3, [sp, #120]
  436998:	adrp	x1, 456000 <__func__.9297+0x78>
  43699c:	add	x1, x1, #0x170
  4369a0:	str	x1, [sp, #8]
  4369a4:	str	xzr, [sp]
  4369a8:	mov	x7, #0x0                   	// #0
  4369ac:	mov	x6, x3
  4369b0:	mov	x5, x0
  4369b4:	adrp	x0, 456000 <__func__.9297+0x78>
  4369b8:	add	x4, x0, #0x1f8
  4369bc:	mov	w3, #0x19                  	// #25
  4369c0:	ldr	w1, [sp, #108]
  4369c4:	ldr	w0, [sp, #104]
  4369c8:	bl	40b020 <log_object_internal@plt>
  4369cc:	mov	w19, w0
  4369d0:	b	436b14 <builtin_btrfs+0x378>
  4369d4:	ldr	x0, [sp, #56]
  4369d8:	add	x0, x0, #0x10
  4369dc:	ldr	x1, [x0]
  4369e0:	add	x0, sp, #0x98
  4369e4:	add	x0, x0, #0x8
  4369e8:	mov	x2, x1
  4369ec:	mov	x1, #0xff8                 	// #4088
  4369f0:	bl	40a300 <strscpy@plt>
  4369f4:	ldr	w0, [sp, #88]
  4369f8:	add	x1, sp, #0x98
  4369fc:	mov	x2, x1
  436a00:	mov	x1, #0x9427                	// #37927
  436a04:	movk	x1, #0x9000, lsl #16
  436a08:	bl	40b5f0 <ioctl@plt>
  436a0c:	str	w0, [sp, #92]
  436a10:	ldr	w0, [sp, #92]
  436a14:	cmp	w0, #0x0
  436a18:	b.ge	436ae4 <builtin_btrfs+0x348>  // b.tcont
  436a1c:	str	xzr, [sp, #120]
  436a20:	ldr	x0, [sp, #72]
  436a24:	str	x0, [sp, #128]
  436a28:	mov	w0, #0x7                   	// #7
  436a2c:	str	w0, [sp, #96]
  436a30:	bl	40b040 <__errno_location@plt>
  436a34:	ldr	w0, [x0]
  436a38:	str	w0, [sp, #100]
  436a3c:	ldr	x0, [sp, #128]
  436a40:	cmp	x0, #0x0
  436a44:	b.eq	436a80 <builtin_btrfs+0x2e4>  // b.none
  436a48:	mov	w0, #0x1                   	// #1
  436a4c:	bl	40be30 <log_get_max_level_realm@plt>
  436a50:	mov	w1, w0
  436a54:	ldr	w0, [sp, #96]
  436a58:	cmp	w0, w1
  436a5c:	cset	w0, le
  436a60:	and	w0, w0, #0xff
  436a64:	and	x0, x0, #0xff
  436a68:	cmp	x0, #0x0
  436a6c:	b.eq	436a80 <builtin_btrfs+0x2e4>  // b.none
  436a70:	add	x0, sp, #0x78
  436a74:	mov	x1, x0
  436a78:	ldr	x0, [sp, #128]
  436a7c:	bl	40aba0 <sd_device_get_sysname@plt>
  436a80:	adrp	x0, 456000 <__func__.9297+0x78>
  436a84:	add	x2, x0, #0x113
  436a88:	ldr	x0, [sp, #120]
  436a8c:	cmp	x0, #0x0
  436a90:	b.eq	436aa0 <builtin_btrfs+0x304>  // b.none
  436a94:	adrp	x0, 456000 <__func__.9297+0x78>
  436a98:	add	x0, x0, #0x138
  436a9c:	b	436aa4 <builtin_btrfs+0x308>
  436aa0:	mov	x0, #0x0                   	// #0
  436aa4:	ldr	x3, [sp, #120]
  436aa8:	adrp	x1, 456000 <__func__.9297+0x78>
  436aac:	add	x1, x1, #0x198
  436ab0:	str	x1, [sp, #8]
  436ab4:	str	xzr, [sp]
  436ab8:	mov	x7, #0x0                   	// #0
  436abc:	mov	x6, x3
  436ac0:	mov	x5, x0
  436ac4:	adrp	x0, 456000 <__func__.9297+0x78>
  436ac8:	add	x4, x0, #0x1f8
  436acc:	mov	w3, #0x1e                  	// #30
  436ad0:	ldr	w1, [sp, #100]
  436ad4:	ldr	w0, [sp, #96]
  436ad8:	bl	40b020 <log_object_internal@plt>
  436adc:	mov	w19, w0
  436ae0:	b	436b14 <builtin_btrfs+0x378>
  436ae4:	ldr	w0, [sp, #92]
  436ae8:	cmp	w0, #0x0
  436aec:	cset	w0, eq  // eq = none
  436af0:	and	w0, w0, #0xff
  436af4:	bl	43676c <one_zero>
  436af8:	mov	x3, x0
  436afc:	adrp	x0, 456000 <__func__.9297+0x78>
  436b00:	add	x2, x0, #0x1c8
  436b04:	ldrb	w1, [sp, #67]
  436b08:	ldr	x0, [sp, #72]
  436b0c:	bl	436504 <udev_builtin_add_property>
  436b10:	mov	w19, #0x0                   	// #0
  436b14:	add	x0, sp, #0x58
  436b18:	bl	436748 <closep>
  436b1c:	mov	w1, w19
  436b20:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  436b24:	ldr	x0, [x0, #4032]
  436b28:	ldr	x2, [sp, #4248]
  436b2c:	ldr	x0, [x0]
  436b30:	eor	x0, x2, x0
  436b34:	cmp	x0, #0x0
  436b38:	b.eq	436b40 <builtin_btrfs+0x3a4>  // b.none
  436b3c:	bl	40b280 <__stack_chk_fail@plt>
  436b40:	mov	w0, w1
  436b44:	ldr	x19, [sp, #32]
  436b48:	ldp	x29, x30, [sp, #16]
  436b4c:	mov	x12, #0x10a0                	// #4256
  436b50:	add	sp, sp, x12
  436b54:	ret

0000000000436b58 <freep>:
  436b58:	stp	x29, x30, [sp, #-32]!
  436b5c:	mov	x29, sp
  436b60:	str	x0, [sp, #24]
  436b64:	ldr	x0, [sp, #24]
  436b68:	ldr	x0, [x0]
  436b6c:	bl	40ba20 <free@plt>
  436b70:	nop
  436b74:	ldp	x29, x30, [sp], #32
  436b78:	ret

0000000000436b7c <safe_atoux16>:
  436b7c:	stp	x29, x30, [sp, #-32]!
  436b80:	mov	x29, sp
  436b84:	str	x0, [sp, #24]
  436b88:	str	x1, [sp, #16]
  436b8c:	ldr	x2, [sp, #16]
  436b90:	mov	w1, #0x10                  	// #16
  436b94:	ldr	x0, [sp, #24]
  436b98:	bl	40bb30 <safe_atou16_full@plt>
  436b9c:	ldp	x29, x30, [sp], #32
  436ba0:	ret

0000000000436ba4 <sd_device_unrefp>:
  436ba4:	stp	x29, x30, [sp, #-32]!
  436ba8:	mov	x29, sp
  436bac:	str	x0, [sp, #24]
  436bb0:	ldr	x0, [sp, #24]
  436bb4:	ldr	x0, [x0]
  436bb8:	cmp	x0, #0x0
  436bbc:	b.eq	436bcc <sd_device_unrefp+0x28>  // b.none
  436bc0:	ldr	x0, [sp, #24]
  436bc4:	ldr	x0, [x0]
  436bc8:	bl	40baf0 <sd_device_unref@plt>
  436bcc:	nop
  436bd0:	ldp	x29, x30, [sp], #32
  436bd4:	ret

0000000000436bd8 <udev_builtin_hwdb_lookup>:
  436bd8:	stp	x29, x30, [sp, #-128]!
  436bdc:	mov	x29, sp
  436be0:	str	x19, [sp, #16]
  436be4:	str	x0, [sp, #72]
  436be8:	str	x1, [sp, #64]
  436bec:	str	x2, [sp, #56]
  436bf0:	str	x3, [sp, #48]
  436bf4:	strb	w4, [sp, #47]
  436bf8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  436bfc:	ldr	x0, [x0, #4032]
  436c00:	ldr	x1, [x0]
  436c04:	str	x1, [sp, #120]
  436c08:	mov	x1, #0x0                   	// #0
  436c0c:	str	xzr, [sp, #96]
  436c10:	str	wzr, [sp, #88]
  436c14:	adrp	x0, 48d000 <arg_resolve_name_timing>
  436c18:	add	x0, x0, #0x1a8
  436c1c:	ldr	x0, [x0]
  436c20:	cmp	x0, #0x0
  436c24:	b.ne	436c30 <udev_builtin_hwdb_lookup+0x58>  // b.any
  436c28:	mov	w19, #0xfffffffe            	// #-2
  436c2c:	b	436d1c <udev_builtin_hwdb_lookup+0x144>
  436c30:	ldr	x0, [sp, #64]
  436c34:	cmp	x0, #0x0
  436c38:	b.eq	436c6c <udev_builtin_hwdb_lookup+0x94>  // b.none
  436c3c:	mov	x2, #0x0                   	// #0
  436c40:	ldr	x1, [sp, #56]
  436c44:	ldr	x0, [sp, #64]
  436c48:	bl	40aac0 <strjoin_real@plt>
  436c4c:	str	x0, [sp, #96]
  436c50:	ldr	x0, [sp, #96]
  436c54:	cmp	x0, #0x0
  436c58:	b.ne	436c64 <udev_builtin_hwdb_lookup+0x8c>  // b.any
  436c5c:	mov	w19, #0xfffffff4            	// #-12
  436c60:	b	436d1c <udev_builtin_hwdb_lookup+0x144>
  436c64:	ldr	x0, [sp, #96]
  436c68:	str	x0, [sp, #56]
  436c6c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  436c70:	add	x0, x0, #0x1a8
  436c74:	ldr	x0, [x0]
  436c78:	ldr	x1, [sp, #56]
  436c7c:	bl	40a640 <sd_hwdb_seek@plt>
  436c80:	cmp	w0, #0x0
  436c84:	b.lt	436d18 <udev_builtin_hwdb_lookup+0x140>  // b.tstop
  436c88:	b	436cf8 <udev_builtin_hwdb_lookup+0x120>
  436c8c:	ldr	x0, [sp, #48]
  436c90:	cmp	x0, #0x0
  436c94:	b.eq	436cb8 <udev_builtin_hwdb_lookup+0xe0>  // b.none
  436c98:	ldr	x0, [sp, #104]
  436c9c:	mov	w2, #0x2                   	// #2
  436ca0:	mov	x1, x0
  436ca4:	ldr	x0, [sp, #48]
  436ca8:	bl	40ae80 <fnmatch@plt>
  436cac:	cmp	w0, #0x0
  436cb0:	b.eq	436cb8 <udev_builtin_hwdb_lookup+0xe0>  // b.none
  436cb4:	b	436cf8 <udev_builtin_hwdb_lookup+0x120>
  436cb8:	ldr	x0, [sp, #104]
  436cbc:	ldr	x1, [sp, #112]
  436cc0:	mov	x3, x1
  436cc4:	mov	x2, x0
  436cc8:	ldrb	w1, [sp, #47]
  436ccc:	ldr	x0, [sp, #72]
  436cd0:	bl	436504 <udev_builtin_add_property>
  436cd4:	str	w0, [sp, #92]
  436cd8:	ldr	w0, [sp, #92]
  436cdc:	cmp	w0, #0x0
  436ce0:	b.ge	436cec <udev_builtin_hwdb_lookup+0x114>  // b.tcont
  436ce4:	ldr	w19, [sp, #92]
  436ce8:	b	436d1c <udev_builtin_hwdb_lookup+0x144>
  436cec:	ldr	w0, [sp, #88]
  436cf0:	add	w0, w0, #0x1
  436cf4:	str	w0, [sp, #88]
  436cf8:	adrp	x0, 48d000 <arg_resolve_name_timing>
  436cfc:	add	x0, x0, #0x1a8
  436d00:	ldr	x0, [x0]
  436d04:	add	x2, sp, #0x70
  436d08:	add	x1, sp, #0x68
  436d0c:	bl	40bb70 <sd_hwdb_enumerate@plt>
  436d10:	cmp	w0, #0x0
  436d14:	b.gt	436c8c <udev_builtin_hwdb_lookup+0xb4>
  436d18:	ldr	w19, [sp, #88]
  436d1c:	add	x0, sp, #0x60
  436d20:	bl	436b58 <freep>
  436d24:	mov	w1, w19
  436d28:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  436d2c:	ldr	x0, [x0, #4032]
  436d30:	ldr	x2, [sp, #120]
  436d34:	ldr	x0, [x0]
  436d38:	eor	x0, x2, x0
  436d3c:	cmp	x0, #0x0
  436d40:	b.eq	436d48 <udev_builtin_hwdb_lookup+0x170>  // b.none
  436d44:	bl	40b280 <__stack_chk_fail@plt>
  436d48:	mov	w0, w1
  436d4c:	ldr	x19, [sp, #16]
  436d50:	ldp	x29, x30, [sp], #128
  436d54:	ret

0000000000436d58 <modalias_usb>:
  436d58:	stp	x29, x30, [sp, #-80]!
  436d5c:	mov	x29, sp
  436d60:	str	x0, [sp, #40]
  436d64:	str	x1, [sp, #32]
  436d68:	str	x2, [sp, #24]
  436d6c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  436d70:	ldr	x0, [x0, #4032]
  436d74:	ldr	x1, [x0]
  436d78:	str	x1, [sp, #72]
  436d7c:	mov	x1, #0x0                   	// #0
  436d80:	add	x0, sp, #0x38
  436d84:	mov	x2, x0
  436d88:	adrp	x0, 456000 <__func__.9297+0x78>
  436d8c:	add	x1, x0, #0x208
  436d90:	ldr	x0, [sp, #40]
  436d94:	bl	40b870 <sd_device_get_sysattr_value@plt>
  436d98:	cmp	w0, #0x0
  436d9c:	b.ge	436da8 <modalias_usb+0x50>  // b.tcont
  436da0:	mov	x0, #0x0                   	// #0
  436da4:	b	436e34 <modalias_usb+0xdc>
  436da8:	add	x0, sp, #0x40
  436dac:	mov	x2, x0
  436db0:	adrp	x0, 456000 <__func__.9297+0x78>
  436db4:	add	x1, x0, #0x218
  436db8:	ldr	x0, [sp, #40]
  436dbc:	bl	40b870 <sd_device_get_sysattr_value@plt>
  436dc0:	cmp	w0, #0x0
  436dc4:	b.ge	436dd0 <modalias_usb+0x78>  // b.tcont
  436dc8:	mov	x0, #0x0                   	// #0
  436dcc:	b	436e34 <modalias_usb+0xdc>
  436dd0:	ldr	x0, [sp, #56]
  436dd4:	add	x1, sp, #0x34
  436dd8:	bl	436b7c <safe_atoux16>
  436ddc:	cmp	w0, #0x0
  436de0:	b.ge	436dec <modalias_usb+0x94>  // b.tcont
  436de4:	mov	x0, #0x0                   	// #0
  436de8:	b	436e34 <modalias_usb+0xdc>
  436dec:	ldr	x0, [sp, #64]
  436df0:	add	x1, sp, #0x36
  436df4:	bl	436b7c <safe_atoux16>
  436df8:	cmp	w0, #0x0
  436dfc:	b.ge	436e08 <modalias_usb+0xb0>  // b.tcont
  436e00:	mov	x0, #0x0                   	// #0
  436e04:	b	436e34 <modalias_usb+0xdc>
  436e08:	ldrh	w0, [sp, #52]
  436e0c:	mov	w1, w0
  436e10:	ldrh	w0, [sp, #54]
  436e14:	mov	w4, w0
  436e18:	mov	w3, w1
  436e1c:	adrp	x0, 456000 <__func__.9297+0x78>
  436e20:	add	x2, x0, #0x228
  436e24:	ldr	x1, [sp, #24]
  436e28:	ldr	x0, [sp, #32]
  436e2c:	bl	40a870 <snprintf@plt>
  436e30:	ldr	x0, [sp, #32]
  436e34:	mov	x1, x0
  436e38:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  436e3c:	ldr	x0, [x0, #4032]
  436e40:	ldr	x2, [sp, #72]
  436e44:	ldr	x0, [x0]
  436e48:	eor	x0, x2, x0
  436e4c:	cmp	x0, #0x0
  436e50:	b.eq	436e58 <modalias_usb+0x100>  // b.none
  436e54:	bl	40b280 <__stack_chk_fail@plt>
  436e58:	mov	x0, x1
  436e5c:	ldp	x29, x30, [sp], #80
  436e60:	ret

0000000000436e64 <udev_builtin_hwdb_search>:
  436e64:	stp	x29, x30, [sp, #-128]!
  436e68:	mov	x29, sp
  436e6c:	str	x0, [sp, #56]
  436e70:	str	x1, [sp, #48]
  436e74:	str	x2, [sp, #40]
  436e78:	str	x3, [sp, #32]
  436e7c:	str	x4, [sp, #24]
  436e80:	strb	w5, [sp, #23]
  436e84:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  436e88:	ldr	x0, [x0, #4032]
  436e8c:	ldr	x1, [x0]
  436e90:	str	x1, [sp, #120]
  436e94:	mov	x1, #0x0                   	// #0
  436e98:	strb	wzr, [sp, #67]
  436e9c:	str	wzr, [sp, #68]
  436ea0:	ldr	x0, [sp, #56]
  436ea4:	cmp	x0, #0x0
  436ea8:	cset	w0, eq  // eq = none
  436eac:	and	w0, w0, #0xff
  436eb0:	and	x0, x0, #0xff
  436eb4:	cmp	x0, #0x0
  436eb8:	b.eq	436ee4 <udev_builtin_hwdb_search+0x80>  // b.none
  436ebc:	adrp	x0, 456000 <__func__.9297+0x78>
  436ec0:	add	x1, x0, #0x23b
  436ec4:	adrp	x0, 456000 <__func__.9297+0x78>
  436ec8:	add	x4, x0, #0x360
  436ecc:	mov	w3, #0x49                  	// #73
  436ed0:	mov	x2, x1
  436ed4:	adrp	x0, 456000 <__func__.9297+0x78>
  436ed8:	add	x1, x0, #0x258
  436edc:	mov	w0, #0x1                   	// #1
  436ee0:	bl	40abb0 <log_assert_failed_realm@plt>
  436ee4:	ldr	x0, [sp, #48]
  436ee8:	cmp	x0, #0x0
  436eec:	b.ne	436ef8 <udev_builtin_hwdb_search+0x94>  // b.any
  436ef0:	ldr	x0, [sp, #56]
  436ef4:	str	x0, [sp, #48]
  436ef8:	ldr	x0, [sp, #48]
  436efc:	str	x0, [sp, #72]
  436f00:	b	43703c <udev_builtin_hwdb_search+0x1d8>
  436f04:	str	xzr, [sp, #96]
  436f08:	ldr	x0, [sp, #72]
  436f0c:	add	x1, sp, #0x50
  436f10:	bl	40af80 <sd_device_get_subsystem@plt>
  436f14:	cmp	w0, #0x0
  436f18:	b.lt	437014 <udev_builtin_hwdb_search+0x1b0>  // b.tstop
  436f1c:	ldr	x0, [sp, #40]
  436f20:	cmp	x0, #0x0
  436f24:	b.eq	436f3c <udev_builtin_hwdb_search+0xd8>  // b.none
  436f28:	ldr	x0, [sp, #80]
  436f2c:	ldr	x1, [sp, #40]
  436f30:	bl	40b710 <strcmp@plt>
  436f34:	cmp	w0, #0x0
  436f38:	b.ne	43701c <udev_builtin_hwdb_search+0x1b8>  // b.any
  436f3c:	ldr	x3, [sp, #72]
  436f40:	add	x0, sp, #0x60
  436f44:	mov	x2, x0
  436f48:	adrp	x0, 456000 <__func__.9297+0x78>
  436f4c:	add	x1, x0, #0x260
  436f50:	mov	x0, x3
  436f54:	bl	40a310 <sd_device_get_property_value@plt>
  436f58:	ldr	x2, [sp, #80]
  436f5c:	adrp	x0, 456000 <__func__.9297+0x78>
  436f60:	add	x1, x0, #0x270
  436f64:	mov	x0, x2
  436f68:	bl	40b710 <strcmp@plt>
  436f6c:	cmp	w0, #0x0
  436f70:	b.ne	436fcc <udev_builtin_hwdb_search+0x168>  // b.any
  436f74:	ldr	x0, [sp, #72]
  436f78:	add	x1, sp, #0x58
  436f7c:	bl	40a460 <sd_device_get_devtype@plt>
  436f80:	cmp	w0, #0x0
  436f84:	b.lt	436fcc <udev_builtin_hwdb_search+0x168>  // b.tstop
  436f88:	ldr	x2, [sp, #88]
  436f8c:	adrp	x0, 456000 <__func__.9297+0x78>
  436f90:	add	x1, x0, #0x278
  436f94:	mov	x0, x2
  436f98:	bl	40b710 <strcmp@plt>
  436f9c:	cmp	w0, #0x0
  436fa0:	b.ne	436fcc <udev_builtin_hwdb_search+0x168>  // b.any
  436fa4:	ldr	x0, [sp, #96]
  436fa8:	cmp	x0, #0x0
  436fac:	b.ne	436fc4 <udev_builtin_hwdb_search+0x160>  // b.any
  436fb0:	ldr	x0, [sp, #72]
  436fb4:	add	x1, sp, #0x68
  436fb8:	mov	x2, #0x10                  	// #16
  436fbc:	bl	436d58 <modalias_usb>
  436fc0:	str	x0, [sp, #96]
  436fc4:	mov	w0, #0x1                   	// #1
  436fc8:	strb	w0, [sp, #67]
  436fcc:	ldr	x0, [sp, #96]
  436fd0:	cmp	x0, #0x0
  436fd4:	b.eq	437024 <udev_builtin_hwdb_search+0x1c0>  // b.none
  436fd8:	ldr	x0, [sp, #96]
  436fdc:	ldrb	w4, [sp, #23]
  436fe0:	ldr	x3, [sp, #24]
  436fe4:	mov	x2, x0
  436fe8:	ldr	x1, [sp, #32]
  436fec:	ldr	x0, [sp, #56]
  436ff0:	bl	436bd8 <udev_builtin_hwdb_lookup>
  436ff4:	str	w0, [sp, #68]
  436ff8:	ldr	w0, [sp, #68]
  436ffc:	cmp	w0, #0x0
  437000:	b.gt	43704c <udev_builtin_hwdb_search+0x1e8>
  437004:	ldrb	w0, [sp, #67]
  437008:	cmp	w0, #0x0
  43700c:	b.ne	437054 <udev_builtin_hwdb_search+0x1f0>  // b.any
  437010:	b	437028 <udev_builtin_hwdb_search+0x1c4>
  437014:	nop
  437018:	b	437028 <udev_builtin_hwdb_search+0x1c4>
  43701c:	nop
  437020:	b	437028 <udev_builtin_hwdb_search+0x1c4>
  437024:	nop
  437028:	ldr	x0, [sp, #72]
  43702c:	add	x1, sp, #0x48
  437030:	bl	40be60 <sd_device_get_parent@plt>
  437034:	cmp	w0, #0x0
  437038:	b.lt	43705c <udev_builtin_hwdb_search+0x1f8>  // b.tstop
  43703c:	ldr	x0, [sp, #72]
  437040:	cmp	x0, #0x0
  437044:	b.ne	436f04 <udev_builtin_hwdb_search+0xa0>  // b.any
  437048:	b	437060 <udev_builtin_hwdb_search+0x1fc>
  43704c:	nop
  437050:	b	437060 <udev_builtin_hwdb_search+0x1fc>
  437054:	nop
  437058:	b	437060 <udev_builtin_hwdb_search+0x1fc>
  43705c:	nop
  437060:	ldr	w0, [sp, #68]
  437064:	mov	w1, w0
  437068:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43706c:	ldr	x0, [x0, #4032]
  437070:	ldr	x2, [sp, #120]
  437074:	ldr	x0, [x0]
  437078:	eor	x0, x2, x0
  43707c:	cmp	x0, #0x0
  437080:	b.eq	437088 <udev_builtin_hwdb_search+0x224>  // b.none
  437084:	bl	40b280 <__stack_chk_fail@plt>
  437088:	mov	w0, w1
  43708c:	ldp	x29, x30, [sp], #128
  437090:	ret

0000000000437094 <builtin_hwdb>:
  437094:	sub	sp, sp, #0xf0
  437098:	stp	x29, x30, [sp, #32]
  43709c:	add	x29, sp, #0x20
  4370a0:	str	x19, [sp, #48]
  4370a4:	str	x0, [sp, #88]
  4370a8:	str	w1, [sp, #84]
  4370ac:	str	x2, [sp, #72]
  4370b0:	strb	w3, [sp, #83]
  4370b4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4370b8:	ldr	x0, [x0, #4032]
  4370bc:	ldr	x1, [x0]
  4370c0:	str	x1, [sp, #232]
  4370c4:	mov	x1, #0x0                   	// #0
  4370c8:	str	xzr, [sp, #160]
  4370cc:	str	xzr, [sp, #168]
  4370d0:	str	xzr, [sp, #176]
  4370d4:	str	xzr, [sp, #184]
  4370d8:	str	xzr, [sp, #144]
  4370dc:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4370e0:	add	x0, x0, #0x1a8
  4370e4:	ldr	x0, [x0]
  4370e8:	cmp	x0, #0x0
  4370ec:	b.ne	4370f8 <builtin_hwdb+0x64>  // b.any
  4370f0:	mov	w19, #0xffffffea            	// #-22
  4370f4:	b	437698 <builtin_hwdb+0x604>
  4370f8:	mov	x4, #0x0                   	// #0
  4370fc:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  437100:	add	x3, x0, #0x4f8
  437104:	adrp	x0, 456000 <__func__.9297+0x78>
  437108:	add	x2, x0, #0x288
  43710c:	ldr	x1, [sp, #72]
  437110:	ldr	w0, [sp, #84]
  437114:	bl	40abf0 <getopt_long@plt>
  437118:	str	w0, [sp, #96]
  43711c:	ldr	w0, [sp, #96]
  437120:	cmn	w0, #0x1
  437124:	b.eq	4371c4 <builtin_hwdb+0x130>  // b.none
  437128:	ldr	w0, [sp, #96]
  43712c:	cmp	w0, #0x73
  437130:	b.eq	437198 <builtin_hwdb+0x104>  // b.none
  437134:	ldr	w0, [sp, #96]
  437138:	cmp	w0, #0x73
  43713c:	b.gt	4370f8 <builtin_hwdb+0x64>
  437140:	ldr	w0, [sp, #96]
  437144:	cmp	w0, #0x70
  437148:	b.eq	4371ac <builtin_hwdb+0x118>  // b.none
  43714c:	ldr	w0, [sp, #96]
  437150:	cmp	w0, #0x70
  437154:	b.gt	4370f8 <builtin_hwdb+0x64>
  437158:	ldr	w0, [sp, #96]
  43715c:	cmp	w0, #0x64
  437160:	b.eq	437184 <builtin_hwdb+0xf0>  // b.none
  437164:	ldr	w0, [sp, #96]
  437168:	cmp	w0, #0x66
  43716c:	b.ne	4370f8 <builtin_hwdb+0x64>  // b.any
  437170:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  437174:	ldr	x0, [x0, #4072]
  437178:	ldr	x0, [x0]
  43717c:	str	x0, [sp, #160]
  437180:	b	4371c0 <builtin_hwdb+0x12c>
  437184:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  437188:	ldr	x0, [x0, #4072]
  43718c:	ldr	x0, [x0]
  437190:	str	x0, [sp, #168]
  437194:	b	4371c0 <builtin_hwdb+0x12c>
  437198:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43719c:	ldr	x0, [x0, #4072]
  4371a0:	ldr	x0, [x0]
  4371a4:	str	x0, [sp, #176]
  4371a8:	b	4371c0 <builtin_hwdb+0x12c>
  4371ac:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4371b0:	ldr	x0, [x0, #4072]
  4371b4:	ldr	x0, [x0]
  4371b8:	str	x0, [sp, #184]
  4371bc:	nop
  4371c0:	b	4370f8 <builtin_hwdb+0x64>
  4371c4:	nop
  4371c8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4371cc:	ldr	x0, [x0, #4064]
  4371d0:	ldr	w0, [x0]
  4371d4:	sxtw	x0, w0
  4371d8:	lsl	x0, x0, #3
  4371dc:	ldr	x1, [sp, #72]
  4371e0:	add	x0, x1, x0
  4371e4:	ldr	x0, [x0]
  4371e8:	cmp	x0, #0x0
  4371ec:	b.eq	4373d8 <builtin_hwdb+0x344>  // b.none
  4371f0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4371f4:	ldr	x0, [x0, #4064]
  4371f8:	ldr	w0, [x0]
  4371fc:	sxtw	x0, w0
  437200:	lsl	x0, x0, #3
  437204:	ldr	x1, [sp, #72]
  437208:	add	x0, x1, x0
  43720c:	ldr	x0, [x0]
  437210:	ldrb	w4, [sp, #83]
  437214:	ldr	x3, [sp, #160]
  437218:	mov	x2, x0
  43721c:	ldr	x1, [sp, #184]
  437220:	ldr	x0, [sp, #88]
  437224:	bl	436bd8 <udev_builtin_hwdb_lookup>
  437228:	str	w0, [sp, #100]
  43722c:	ldr	w0, [sp, #100]
  437230:	cmp	w0, #0x0
  437234:	b.ge	4372fc <builtin_hwdb+0x268>  // b.tcont
  437238:	str	xzr, [sp, #152]
  43723c:	ldr	x0, [sp, #88]
  437240:	str	x0, [sp, #224]
  437244:	mov	w0, #0x7                   	// #7
  437248:	str	w0, [sp, #136]
  43724c:	ldr	w0, [sp, #100]
  437250:	str	w0, [sp, #140]
  437254:	ldr	x0, [sp, #224]
  437258:	cmp	x0, #0x0
  43725c:	b.eq	437298 <builtin_hwdb+0x204>  // b.none
  437260:	mov	w0, #0x1                   	// #1
  437264:	bl	40be30 <log_get_max_level_realm@plt>
  437268:	mov	w1, w0
  43726c:	ldr	w0, [sp, #136]
  437270:	cmp	w0, w1
  437274:	cset	w0, le
  437278:	and	w0, w0, #0xff
  43727c:	and	x0, x0, #0xff
  437280:	cmp	x0, #0x0
  437284:	b.eq	437298 <builtin_hwdb+0x204>  // b.none
  437288:	add	x0, sp, #0x98
  43728c:	mov	x1, x0
  437290:	ldr	x0, [sp, #224]
  437294:	bl	40aba0 <sd_device_get_sysname@plt>
  437298:	adrp	x0, 456000 <__func__.9297+0x78>
  43729c:	add	x2, x0, #0x23b
  4372a0:	ldr	x0, [sp, #152]
  4372a4:	cmp	x0, #0x0
  4372a8:	b.eq	4372b8 <builtin_hwdb+0x224>  // b.none
  4372ac:	adrp	x0, 456000 <__func__.9297+0x78>
  4372b0:	add	x0, x0, #0x298
  4372b4:	b	4372bc <builtin_hwdb+0x228>
  4372b8:	mov	x0, #0x0                   	// #0
  4372bc:	ldr	x3, [sp, #152]
  4372c0:	adrp	x1, 456000 <__func__.9297+0x78>
  4372c4:	add	x1, x1, #0x2a0
  4372c8:	str	x1, [sp, #8]
  4372cc:	str	xzr, [sp]
  4372d0:	mov	x7, #0x0                   	// #0
  4372d4:	mov	x6, x3
  4372d8:	mov	x5, x0
  4372dc:	adrp	x0, 456000 <__func__.9297+0x78>
  4372e0:	add	x4, x0, #0x380
  4372e4:	mov	w3, #0xa6                  	// #166
  4372e8:	ldr	w1, [sp, #140]
  4372ec:	ldr	w0, [sp, #136]
  4372f0:	bl	40b020 <log_object_internal@plt>
  4372f4:	mov	w19, w0
  4372f8:	b	437698 <builtin_hwdb+0x604>
  4372fc:	ldr	w0, [sp, #100]
  437300:	cmp	w0, #0x0
  437304:	b.ne	4373d0 <builtin_hwdb+0x33c>  // b.any
  437308:	str	xzr, [sp, #152]
  43730c:	ldr	x0, [sp, #88]
  437310:	str	x0, [sp, #216]
  437314:	mov	w0, #0x7                   	// #7
  437318:	str	w0, [sp, #128]
  43731c:	mov	w0, #0x3d                  	// #61
  437320:	movk	w0, #0x4000, lsl #16
  437324:	str	w0, [sp, #132]
  437328:	ldr	x0, [sp, #216]
  43732c:	cmp	x0, #0x0
  437330:	b.eq	43736c <builtin_hwdb+0x2d8>  // b.none
  437334:	mov	w0, #0x1                   	// #1
  437338:	bl	40be30 <log_get_max_level_realm@plt>
  43733c:	mov	w1, w0
  437340:	ldr	w0, [sp, #128]
  437344:	cmp	w0, w1
  437348:	cset	w0, le
  43734c:	and	w0, w0, #0xff
  437350:	and	x0, x0, #0xff
  437354:	cmp	x0, #0x0
  437358:	b.eq	43736c <builtin_hwdb+0x2d8>  // b.none
  43735c:	add	x0, sp, #0x98
  437360:	mov	x1, x0
  437364:	ldr	x0, [sp, #216]
  437368:	bl	40aba0 <sd_device_get_sysname@plt>
  43736c:	adrp	x0, 456000 <__func__.9297+0x78>
  437370:	add	x2, x0, #0x23b
  437374:	ldr	x0, [sp, #152]
  437378:	cmp	x0, #0x0
  43737c:	b.eq	43738c <builtin_hwdb+0x2f8>  // b.none
  437380:	adrp	x0, 456000 <__func__.9297+0x78>
  437384:	add	x0, x0, #0x298
  437388:	b	437390 <builtin_hwdb+0x2fc>
  43738c:	mov	x0, #0x0                   	// #0
  437390:	ldr	x3, [sp, #152]
  437394:	adrp	x1, 456000 <__func__.9297+0x78>
  437398:	add	x1, x1, #0x2c0
  43739c:	str	x1, [sp, #8]
  4373a0:	str	xzr, [sp]
  4373a4:	mov	x7, #0x0                   	// #0
  4373a8:	mov	x6, x3
  4373ac:	mov	x5, x0
  4373b0:	adrp	x0, 456000 <__func__.9297+0x78>
  4373b4:	add	x4, x0, #0x380
  4373b8:	mov	w3, #0xa8                  	// #168
  4373bc:	ldr	w1, [sp, #132]
  4373c0:	ldr	w0, [sp, #128]
  4373c4:	bl	40b020 <log_object_internal@plt>
  4373c8:	mov	w19, w0
  4373cc:	b	437698 <builtin_hwdb+0x604>
  4373d0:	ldr	w19, [sp, #100]
  4373d4:	b	437698 <builtin_hwdb+0x604>
  4373d8:	ldr	x0, [sp, #168]
  4373dc:	cmp	x0, #0x0
  4373e0:	b.eq	4374cc <builtin_hwdb+0x438>  // b.none
  4373e4:	add	x0, sp, #0x90
  4373e8:	ldr	x1, [sp, #168]
  4373ec:	bl	40bcc0 <sd_device_new_from_device_id@plt>
  4373f0:	str	w0, [sp, #100]
  4373f4:	ldr	w0, [sp, #100]
  4373f8:	cmp	w0, #0x0
  4373fc:	b.ge	4374cc <builtin_hwdb+0x438>  // b.tcont
  437400:	str	xzr, [sp, #152]
  437404:	ldr	x0, [sp, #88]
  437408:	str	x0, [sp, #192]
  43740c:	mov	w0, #0x7                   	// #7
  437410:	str	w0, [sp, #104]
  437414:	ldr	w0, [sp, #100]
  437418:	str	w0, [sp, #108]
  43741c:	ldr	x0, [sp, #192]
  437420:	cmp	x0, #0x0
  437424:	b.eq	437460 <builtin_hwdb+0x3cc>  // b.none
  437428:	mov	w0, #0x1                   	// #1
  43742c:	bl	40be30 <log_get_max_level_realm@plt>
  437430:	mov	w1, w0
  437434:	ldr	w0, [sp, #104]
  437438:	cmp	w0, w1
  43743c:	cset	w0, le
  437440:	and	w0, w0, #0xff
  437444:	and	x0, x0, #0xff
  437448:	cmp	x0, #0x0
  43744c:	b.eq	437460 <builtin_hwdb+0x3cc>  // b.none
  437450:	add	x0, sp, #0x98
  437454:	mov	x1, x0
  437458:	ldr	x0, [sp, #192]
  43745c:	bl	40aba0 <sd_device_get_sysname@plt>
  437460:	adrp	x0, 456000 <__func__.9297+0x78>
  437464:	add	x2, x0, #0x23b
  437468:	ldr	x0, [sp, #152]
  43746c:	cmp	x0, #0x0
  437470:	b.eq	437480 <builtin_hwdb+0x3ec>  // b.none
  437474:	adrp	x0, 456000 <__func__.9297+0x78>
  437478:	add	x0, x0, #0x298
  43747c:	b	437484 <builtin_hwdb+0x3f0>
  437480:	mov	x0, #0x0                   	// #0
  437484:	ldr	x3, [sp, #152]
  437488:	ldr	x1, [sp, #168]
  43748c:	str	x1, [sp, #16]
  437490:	adrp	x1, 456000 <__func__.9297+0x78>
  437494:	add	x1, x1, #0x2e0
  437498:	str	x1, [sp, #8]
  43749c:	str	xzr, [sp]
  4374a0:	mov	x7, #0x0                   	// #0
  4374a4:	mov	x6, x3
  4374a8:	mov	x5, x0
  4374ac:	adrp	x0, 456000 <__func__.9297+0x78>
  4374b0:	add	x4, x0, #0x380
  4374b4:	mov	w3, #0xb0                  	// #176
  4374b8:	ldr	w1, [sp, #108]
  4374bc:	ldr	w0, [sp, #104]
  4374c0:	bl	40b020 <log_object_internal@plt>
  4374c4:	mov	w19, w0
  4374c8:	b	437698 <builtin_hwdb+0x604>
  4374cc:	ldr	x0, [sp, #144]
  4374d0:	ldrb	w5, [sp, #83]
  4374d4:	ldr	x4, [sp, #160]
  4374d8:	ldr	x3, [sp, #184]
  4374dc:	ldr	x2, [sp, #176]
  4374e0:	mov	x1, x0
  4374e4:	ldr	x0, [sp, #88]
  4374e8:	bl	436e64 <udev_builtin_hwdb_search>
  4374ec:	str	w0, [sp, #100]
  4374f0:	ldr	w0, [sp, #100]
  4374f4:	cmp	w0, #0x0
  4374f8:	b.ge	4375c0 <builtin_hwdb+0x52c>  // b.tcont
  4374fc:	str	xzr, [sp, #152]
  437500:	ldr	x0, [sp, #88]
  437504:	str	x0, [sp, #208]
  437508:	mov	w0, #0x7                   	// #7
  43750c:	str	w0, [sp, #120]
  437510:	ldr	w0, [sp, #100]
  437514:	str	w0, [sp, #124]
  437518:	ldr	x0, [sp, #208]
  43751c:	cmp	x0, #0x0
  437520:	b.eq	43755c <builtin_hwdb+0x4c8>  // b.none
  437524:	mov	w0, #0x1                   	// #1
  437528:	bl	40be30 <log_get_max_level_realm@plt>
  43752c:	mov	w1, w0
  437530:	ldr	w0, [sp, #120]
  437534:	cmp	w0, w1
  437538:	cset	w0, le
  43753c:	and	w0, w0, #0xff
  437540:	and	x0, x0, #0xff
  437544:	cmp	x0, #0x0
  437548:	b.eq	43755c <builtin_hwdb+0x4c8>  // b.none
  43754c:	add	x0, sp, #0x98
  437550:	mov	x1, x0
  437554:	ldr	x0, [sp, #208]
  437558:	bl	40aba0 <sd_device_get_sysname@plt>
  43755c:	adrp	x0, 456000 <__func__.9297+0x78>
  437560:	add	x2, x0, #0x23b
  437564:	ldr	x0, [sp, #152]
  437568:	cmp	x0, #0x0
  43756c:	b.eq	43757c <builtin_hwdb+0x4e8>  // b.none
  437570:	adrp	x0, 456000 <__func__.9297+0x78>
  437574:	add	x0, x0, #0x298
  437578:	b	437580 <builtin_hwdb+0x4ec>
  43757c:	mov	x0, #0x0                   	// #0
  437580:	ldr	x3, [sp, #152]
  437584:	adrp	x1, 456000 <__func__.9297+0x78>
  437588:	add	x1, x1, #0x2a0
  43758c:	str	x1, [sp, #8]
  437590:	str	xzr, [sp]
  437594:	mov	x7, #0x0                   	// #0
  437598:	mov	x6, x3
  43759c:	mov	x5, x0
  4375a0:	adrp	x0, 456000 <__func__.9297+0x78>
  4375a4:	add	x4, x0, #0x380
  4375a8:	mov	w3, #0xb5                  	// #181
  4375ac:	ldr	w1, [sp, #124]
  4375b0:	ldr	w0, [sp, #120]
  4375b4:	bl	40b020 <log_object_internal@plt>
  4375b8:	mov	w19, w0
  4375bc:	b	437698 <builtin_hwdb+0x604>
  4375c0:	ldr	w0, [sp, #100]
  4375c4:	cmp	w0, #0x0
  4375c8:	b.ne	437694 <builtin_hwdb+0x600>  // b.any
  4375cc:	str	xzr, [sp, #152]
  4375d0:	ldr	x0, [sp, #88]
  4375d4:	str	x0, [sp, #200]
  4375d8:	mov	w0, #0x7                   	// #7
  4375dc:	str	w0, [sp, #112]
  4375e0:	mov	w0, #0x3d                  	// #61
  4375e4:	movk	w0, #0x4000, lsl #16
  4375e8:	str	w0, [sp, #116]
  4375ec:	ldr	x0, [sp, #200]
  4375f0:	cmp	x0, #0x0
  4375f4:	b.eq	437630 <builtin_hwdb+0x59c>  // b.none
  4375f8:	mov	w0, #0x1                   	// #1
  4375fc:	bl	40be30 <log_get_max_level_realm@plt>
  437600:	mov	w1, w0
  437604:	ldr	w0, [sp, #112]
  437608:	cmp	w0, w1
  43760c:	cset	w0, le
  437610:	and	w0, w0, #0xff
  437614:	and	x0, x0, #0xff
  437618:	cmp	x0, #0x0
  43761c:	b.eq	437630 <builtin_hwdb+0x59c>  // b.none
  437620:	add	x0, sp, #0x98
  437624:	mov	x1, x0
  437628:	ldr	x0, [sp, #200]
  43762c:	bl	40aba0 <sd_device_get_sysname@plt>
  437630:	adrp	x0, 456000 <__func__.9297+0x78>
  437634:	add	x2, x0, #0x23b
  437638:	ldr	x0, [sp, #152]
  43763c:	cmp	x0, #0x0
  437640:	b.eq	437650 <builtin_hwdb+0x5bc>  // b.none
  437644:	adrp	x0, 456000 <__func__.9297+0x78>
  437648:	add	x0, x0, #0x298
  43764c:	b	437654 <builtin_hwdb+0x5c0>
  437650:	mov	x0, #0x0                   	// #0
  437654:	ldr	x3, [sp, #152]
  437658:	adrp	x1, 456000 <__func__.9297+0x78>
  43765c:	add	x1, x1, #0x2c0
  437660:	str	x1, [sp, #8]
  437664:	str	xzr, [sp]
  437668:	mov	x7, #0x0                   	// #0
  43766c:	mov	x6, x3
  437670:	mov	x5, x0
  437674:	adrp	x0, 456000 <__func__.9297+0x78>
  437678:	add	x4, x0, #0x380
  43767c:	mov	w3, #0xb7                  	// #183
  437680:	ldr	w1, [sp, #116]
  437684:	ldr	w0, [sp, #112]
  437688:	bl	40b020 <log_object_internal@plt>
  43768c:	mov	w19, w0
  437690:	b	437698 <builtin_hwdb+0x604>
  437694:	ldr	w19, [sp, #100]
  437698:	add	x0, sp, #0x90
  43769c:	bl	436ba4 <sd_device_unrefp>
  4376a0:	mov	w1, w19
  4376a4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4376a8:	ldr	x0, [x0, #4032]
  4376ac:	ldr	x2, [sp, #232]
  4376b0:	ldr	x0, [x0]
  4376b4:	eor	x0, x2, x0
  4376b8:	cmp	x0, #0x0
  4376bc:	b.eq	4376c4 <builtin_hwdb+0x630>  // b.none
  4376c0:	bl	40b280 <__stack_chk_fail@plt>
  4376c4:	mov	w0, w1
  4376c8:	ldr	x19, [sp, #48]
  4376cc:	ldp	x29, x30, [sp, #32]
  4376d0:	add	sp, sp, #0xf0
  4376d4:	ret

00000000004376d8 <builtin_hwdb_init>:
  4376d8:	stp	x29, x30, [sp, #-32]!
  4376dc:	mov	x29, sp
  4376e0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4376e4:	add	x0, x0, #0x1a8
  4376e8:	ldr	x0, [x0]
  4376ec:	cmp	x0, #0x0
  4376f0:	b.eq	4376fc <builtin_hwdb_init+0x24>  // b.none
  4376f4:	mov	w0, #0x0                   	// #0
  4376f8:	b	437724 <builtin_hwdb_init+0x4c>
  4376fc:	adrp	x0, 48d000 <arg_resolve_name_timing>
  437700:	add	x0, x0, #0x1a8
  437704:	bl	40b6e0 <sd_hwdb_new@plt>
  437708:	str	w0, [sp, #28]
  43770c:	ldr	w0, [sp, #28]
  437710:	cmp	w0, #0x0
  437714:	b.ge	437720 <builtin_hwdb_init+0x48>  // b.tcont
  437718:	ldr	w0, [sp, #28]
  43771c:	b	437724 <builtin_hwdb_init+0x4c>
  437720:	mov	w0, #0x0                   	// #0
  437724:	ldp	x29, x30, [sp], #32
  437728:	ret

000000000043772c <builtin_hwdb_exit>:
  43772c:	stp	x29, x30, [sp, #-16]!
  437730:	mov	x29, sp
  437734:	adrp	x0, 48d000 <arg_resolve_name_timing>
  437738:	add	x0, x0, #0x1a8
  43773c:	ldr	x0, [x0]
  437740:	bl	40be40 <sd_hwdb_unref@plt>
  437744:	mov	x1, x0
  437748:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43774c:	add	x0, x0, #0x1a8
  437750:	str	x1, [x0]
  437754:	nop
  437758:	ldp	x29, x30, [sp], #16
  43775c:	ret

0000000000437760 <builtin_hwdb_validate>:
  437760:	stp	x29, x30, [sp, #-16]!
  437764:	mov	x29, sp
  437768:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43776c:	add	x0, x0, #0x1a8
  437770:	ldr	x0, [x0]
  437774:	bl	40a910 <hwdb_validate@plt>
  437778:	and	w0, w0, #0xff
  43777c:	ldp	x29, x30, [sp], #16
  437780:	ret

0000000000437784 <closep>:
  437784:	stp	x29, x30, [sp, #-32]!
  437788:	mov	x29, sp
  43778c:	str	x0, [sp, #24]
  437790:	ldr	x0, [sp, #24]
  437794:	ldr	w0, [x0]
  437798:	bl	40aad0 <safe_close@plt>
  43779c:	nop
  4377a0:	ldp	x29, x30, [sp], #32
  4377a4:	ret

00000000004377a8 <startswith>:
  4377a8:	stp	x29, x30, [sp, #-48]!
  4377ac:	mov	x29, sp
  4377b0:	str	x0, [sp, #24]
  4377b4:	str	x1, [sp, #16]
  4377b8:	ldr	x0, [sp, #16]
  4377bc:	bl	40bd10 <strlen@plt>
  4377c0:	str	x0, [sp, #40]
  4377c4:	ldr	x2, [sp, #40]
  4377c8:	ldr	x1, [sp, #16]
  4377cc:	ldr	x0, [sp, #24]
  4377d0:	bl	40ae00 <strncmp@plt>
  4377d4:	cmp	w0, #0x0
  4377d8:	b.ne	4377ec <startswith+0x44>  // b.any
  4377dc:	ldr	x1, [sp, #24]
  4377e0:	ldr	x0, [sp, #40]
  4377e4:	add	x0, x1, x0
  4377e8:	b	4377f0 <startswith+0x48>
  4377ec:	mov	x0, #0x0                   	// #0
  4377f0:	ldp	x29, x30, [sp], #48
  4377f4:	ret

00000000004377f8 <abs_size_mm>:
  4377f8:	sub	sp, sp, #0x10
  4377fc:	str	x0, [sp, #8]
  437800:	ldr	x0, [sp, #8]
  437804:	ldr	w1, [x0, #8]
  437808:	ldr	x0, [sp, #8]
  43780c:	ldr	w0, [x0, #4]
  437810:	sub	w1, w1, w0
  437814:	ldr	x0, [sp, #8]
  437818:	ldr	w0, [x0, #20]
  43781c:	sdiv	w0, w1, w0
  437820:	add	sp, sp, #0x10
  437824:	ret

0000000000437828 <extract_info>:
  437828:	stp	x29, x30, [sp, #-160]!
  43782c:	mov	x29, sp
  437830:	str	x19, [sp, #16]
  437834:	str	x0, [sp, #56]
  437838:	str	x1, [sp, #48]
  43783c:	strb	w2, [sp, #47]
  437840:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  437844:	ldr	x0, [x0, #4032]
  437848:	ldr	x1, [x0]
  43784c:	str	x1, [sp, #152]
  437850:	mov	x1, #0x0                   	// #0
  437854:	stp	xzr, xzr, [sp, #72]
  437858:	str	xzr, [sp, #88]
  43785c:	stp	xzr, xzr, [sp, #96]
  437860:	str	xzr, [sp, #112]
  437864:	mov	w0, #0xffffffff            	// #-1
  437868:	str	w0, [sp, #68]
  43786c:	mov	w1, #0x80000               	// #524288
  437870:	ldr	x0, [sp, #48]
  437874:	bl	40bcb0 <open64@plt>
  437878:	str	w0, [sp, #68]
  43787c:	ldr	w0, [sp, #68]
  437880:	cmp	w0, #0x0
  437884:	b.ge	437890 <extract_info+0x68>  // b.tcont
  437888:	mov	w19, #0x0                   	// #0
  43788c:	b	4379fc <extract_info+0x1d4>
  437890:	ldr	w0, [sp, #68]
  437894:	add	x1, sp, #0x48
  437898:	mov	x2, x1
  43789c:	mov	x1, #0x4540                	// #17728
  4378a0:	movk	x1, #0x8018, lsl #16
  4378a4:	bl	40b5f0 <ioctl@plt>
  4378a8:	cmp	w0, #0x0
  4378ac:	b.lt	4378d0 <extract_info+0xa8>  // b.tstop
  4378b0:	ldr	w0, [sp, #68]
  4378b4:	add	x1, sp, #0x60
  4378b8:	mov	x2, x1
  4378bc:	mov	x1, #0x4541                	// #17729
  4378c0:	movk	x1, #0x8018, lsl #16
  4378c4:	bl	40b5f0 <ioctl@plt>
  4378c8:	cmp	w0, #0x0
  4378cc:	b.ge	4378d8 <extract_info+0xb0>  // b.tcont
  4378d0:	mov	w19, #0x0                   	// #0
  4378d4:	b	4379fc <extract_info+0x1d4>
  4378d8:	ldr	w0, [sp, #92]
  4378dc:	cmp	w0, #0x0
  4378e0:	b.le	4378f0 <extract_info+0xc8>
  4378e4:	ldr	w0, [sp, #116]
  4378e8:	cmp	w0, #0x0
  4378ec:	b.gt	4378f8 <extract_info+0xd0>
  4378f0:	mov	w19, #0x0                   	// #0
  4378f4:	b	4379fc <extract_info+0x1d4>
  4378f8:	add	x0, sp, #0x48
  4378fc:	bl	4377f8 <abs_size_mm>
  437900:	add	x4, sp, #0x78
  437904:	mov	w3, w0
  437908:	adrp	x0, 456000 <__func__.9297+0x78>
  43790c:	add	x2, x0, #0x3a0
  437910:	mov	x1, #0xc                   	// #12
  437914:	mov	x0, x4
  437918:	bl	40a870 <snprintf@plt>
  43791c:	cmp	w0, #0xb
  437920:	cset	w0, hi  // hi = pmore
  437924:	and	w0, w0, #0xff
  437928:	and	x0, x0, #0xff
  43792c:	cmp	x0, #0x0
  437930:	b.eq	43795c <extract_info+0x134>  // b.none
  437934:	adrp	x0, 456000 <__func__.9297+0x78>
  437938:	add	x1, x0, #0x3ab
  43793c:	adrp	x0, 456000 <__func__.9297+0x78>
  437940:	add	x4, x0, #0x728
  437944:	mov	w3, #0x40                  	// #64
  437948:	mov	x2, x1
  43794c:	adrp	x0, 456000 <__func__.9297+0x78>
  437950:	add	x1, x0, #0x3d0
  437954:	mov	w0, #0x1                   	// #1
  437958:	bl	40abb0 <log_assert_failed_realm@plt>
  43795c:	add	x0, sp, #0x60
  437960:	bl	4377f8 <abs_size_mm>
  437964:	add	x4, sp, #0x88
  437968:	mov	w3, w0
  43796c:	adrp	x0, 456000 <__func__.9297+0x78>
  437970:	add	x2, x0, #0x3a0
  437974:	mov	x1, #0xc                   	// #12
  437978:	mov	x0, x4
  43797c:	bl	40a870 <snprintf@plt>
  437980:	cmp	w0, #0xb
  437984:	cset	w0, hi  // hi = pmore
  437988:	and	w0, w0, #0xff
  43798c:	and	x0, x0, #0xff
  437990:	cmp	x0, #0x0
  437994:	b.eq	4379c0 <extract_info+0x198>  // b.none
  437998:	adrp	x0, 456000 <__func__.9297+0x78>
  43799c:	add	x1, x0, #0x3ab
  4379a0:	adrp	x0, 456000 <__func__.9297+0x78>
  4379a4:	add	x4, x0, #0x728
  4379a8:	mov	w3, #0x41                  	// #65
  4379ac:	mov	x2, x1
  4379b0:	adrp	x0, 456000 <__func__.9297+0x78>
  4379b4:	add	x1, x0, #0x3f8
  4379b8:	mov	w0, #0x1                   	// #1
  4379bc:	bl	40abb0 <log_assert_failed_realm@plt>
  4379c0:	add	x0, sp, #0x78
  4379c4:	mov	x3, x0
  4379c8:	adrp	x0, 456000 <__func__.9297+0x78>
  4379cc:	add	x2, x0, #0x420
  4379d0:	ldrb	w1, [sp, #47]
  4379d4:	ldr	x0, [sp, #56]
  4379d8:	bl	436504 <udev_builtin_add_property>
  4379dc:	add	x0, sp, #0x88
  4379e0:	mov	x3, x0
  4379e4:	adrp	x0, 456000 <__func__.9297+0x78>
  4379e8:	add	x2, x0, #0x438
  4379ec:	ldrb	w1, [sp, #47]
  4379f0:	ldr	x0, [sp, #56]
  4379f4:	bl	436504 <udev_builtin_add_property>
  4379f8:	mov	w19, #0x1                   	// #1
  4379fc:	add	x0, sp, #0x44
  437a00:	bl	437784 <closep>
  437a04:	cmp	w19, #0x1
  437a08:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  437a0c:	ldr	x0, [x0, #4032]
  437a10:	ldr	x1, [sp, #152]
  437a14:	ldr	x0, [x0]
  437a18:	eor	x0, x1, x0
  437a1c:	cmp	x0, #0x0
  437a20:	b.eq	437a28 <extract_info+0x200>  // b.none
  437a24:	bl	40b280 <__stack_chk_fail@plt>
  437a28:	ldr	x19, [sp, #16]
  437a2c:	ldp	x29, x30, [sp], #160
  437a30:	ret

0000000000437a34 <get_cap_mask>:
  437a34:	mov	x12, #0x10f0                	// #4336
  437a38:	sub	sp, sp, x12
  437a3c:	stp	x29, x30, [sp, #32]
  437a40:	add	x29, sp, #0x20
  437a44:	str	x0, [sp, #88]
  437a48:	str	x1, [sp, #80]
  437a4c:	str	x2, [sp, #72]
  437a50:	str	x3, [sp, #64]
  437a54:	strb	w4, [sp, #63]
  437a58:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  437a5c:	ldr	x0, [x0, #4032]
  437a60:	ldr	x1, [x0]
  437a64:	str	x1, [sp, #4328]
  437a68:	mov	x1, #0x0                   	// #0
  437a6c:	add	x0, sp, #0x98
  437a70:	mov	x2, x0
  437a74:	ldr	x1, [sp, #80]
  437a78:	ldr	x0, [sp, #88]
  437a7c:	bl	40b870 <sd_device_get_sysattr_value@plt>
  437a80:	cmp	w0, #0x0
  437a84:	b.ge	437a94 <get_cap_mask+0x60>  // b.tcont
  437a88:	adrp	x0, 456000 <__func__.9297+0x78>
  437a8c:	add	x0, x0, #0x450
  437a90:	str	x0, [sp, #152]
  437a94:	ldr	x0, [sp, #152]
  437a98:	add	x4, sp, #0xe8
  437a9c:	mov	x3, x0
  437aa0:	adrp	x0, 456000 <__func__.9297+0x78>
  437aa4:	add	x2, x0, #0x458
  437aa8:	mov	x1, #0x1000                	// #4096
  437aac:	mov	x0, x4
  437ab0:	bl	40a870 <snprintf@plt>
  437ab4:	cmp	w0, #0xfff
  437ab8:	cset	w0, hi  // hi = pmore
  437abc:	and	w0, w0, #0xff
  437ac0:	and	x0, x0, #0xff
  437ac4:	cmp	x0, #0x0
  437ac8:	b.eq	437af4 <get_cap_mask+0xc0>  // b.none
  437acc:	adrp	x0, 456000 <__func__.9297+0x78>
  437ad0:	add	x1, x0, #0x3ab
  437ad4:	adrp	x0, 456000 <__func__.9297+0x78>
  437ad8:	add	x4, x0, #0x738
  437adc:	mov	w3, #0x59                  	// #89
  437ae0:	mov	x2, x1
  437ae4:	adrp	x0, 456000 <__func__.9297+0x78>
  437ae8:	add	x1, x0, #0x460
  437aec:	mov	w0, #0x1                   	// #1
  437af0:	bl	40abb0 <log_assert_failed_realm@plt>
  437af4:	str	xzr, [sp, #160]
  437af8:	ldr	x0, [sp, #88]
  437afc:	str	x0, [sp, #176]
  437b00:	mov	w0, #0x7                   	// #7
  437b04:	str	w0, [sp, #112]
  437b08:	str	wzr, [sp, #116]
  437b0c:	ldr	x0, [sp, #176]
  437b10:	cmp	x0, #0x0
  437b14:	b.eq	437b50 <get_cap_mask+0x11c>  // b.none
  437b18:	mov	w0, #0x1                   	// #1
  437b1c:	bl	40be30 <log_get_max_level_realm@plt>
  437b20:	mov	w1, w0
  437b24:	ldr	w0, [sp, #112]
  437b28:	cmp	w0, w1
  437b2c:	cset	w0, le
  437b30:	and	w0, w0, #0xff
  437b34:	and	x0, x0, #0xff
  437b38:	cmp	x0, #0x0
  437b3c:	b.eq	437b50 <get_cap_mask+0x11c>  // b.none
  437b40:	add	x0, sp, #0xa0
  437b44:	mov	x1, x0
  437b48:	ldr	x0, [sp, #176]
  437b4c:	bl	40aba0 <sd_device_get_sysname@plt>
  437b50:	adrp	x0, 456000 <__func__.9297+0x78>
  437b54:	add	x2, x0, #0x3ab
  437b58:	ldr	x0, [sp, #160]
  437b5c:	cmp	x0, #0x0
  437b60:	b.eq	437b70 <get_cap_mask+0x13c>  // b.none
  437b64:	adrp	x0, 456000 <__func__.9297+0x78>
  437b68:	add	x0, x0, #0x488
  437b6c:	b	437b74 <get_cap_mask+0x140>
  437b70:	mov	x0, #0x0                   	// #0
  437b74:	ldr	x3, [sp, #160]
  437b78:	add	x1, sp, #0xe8
  437b7c:	str	x1, [sp, #24]
  437b80:	ldr	x1, [sp, #80]
  437b84:	str	x1, [sp, #16]
  437b88:	adrp	x1, 456000 <__func__.9297+0x78>
  437b8c:	add	x1, x1, #0x490
  437b90:	str	x1, [sp, #8]
  437b94:	str	xzr, [sp]
  437b98:	mov	x7, #0x0                   	// #0
  437b9c:	mov	x6, x3
  437ba0:	mov	x5, x0
  437ba4:	adrp	x0, 456000 <__func__.9297+0x78>
  437ba8:	add	x4, x0, #0x748
  437bac:	mov	w3, #0x5a                  	// #90
  437bb0:	ldr	w1, [sp, #116]
  437bb4:	ldr	w0, [sp, #112]
  437bb8:	bl	40b020 <log_object_internal@plt>
  437bbc:	ldr	x0, [sp, #64]
  437bc0:	str	x0, [sp, #184]
  437bc4:	ldr	x0, [sp, #184]
  437bc8:	cmp	x0, #0x0
  437bcc:	b.eq	437be0 <get_cap_mask+0x1ac>  // b.none
  437bd0:	ldr	x2, [sp, #184]
  437bd4:	mov	w1, #0x0                   	// #0
  437bd8:	ldr	x0, [sp, #72]
  437bdc:	bl	40be00 <memset@plt>
  437be0:	str	wzr, [sp, #108]
  437be4:	b	437d0c <get_cap_mask+0x2d8>
  437be8:	ldr	x0, [sp, #192]
  437bec:	add	x0, x0, #0x1
  437bf0:	mov	w2, #0x10                  	// #16
  437bf4:	mov	x1, #0x0                   	// #0
  437bf8:	bl	40b630 <strtoul@plt>
  437bfc:	str	x0, [sp, #168]
  437c00:	ldr	w1, [sp, #108]
  437c04:	ldr	x0, [sp, #64]
  437c08:	lsr	x0, x0, #3
  437c0c:	cmp	x1, x0
  437c10:	b.cs	437c30 <get_cap_mask+0x1fc>  // b.hs, b.nlast
  437c14:	ldr	w0, [sp, #108]
  437c18:	lsl	x0, x0, #3
  437c1c:	ldr	x1, [sp, #72]
  437c20:	add	x0, x1, x0
  437c24:	ldr	x1, [sp, #168]
  437c28:	str	x1, [x0]
  437c2c:	b	437cf8 <get_cap_mask+0x2c4>
  437c30:	str	xzr, [sp, #160]
  437c34:	ldr	x0, [sp, #88]
  437c38:	str	x0, [sp, #224]
  437c3c:	mov	w0, #0x7                   	// #7
  437c40:	str	w0, [sp, #144]
  437c44:	str	wzr, [sp, #148]
  437c48:	ldr	x0, [sp, #224]
  437c4c:	cmp	x0, #0x0
  437c50:	b.eq	437c8c <get_cap_mask+0x258>  // b.none
  437c54:	mov	w0, #0x1                   	// #1
  437c58:	bl	40be30 <log_get_max_level_realm@plt>
  437c5c:	mov	w1, w0
  437c60:	ldr	w0, [sp, #144]
  437c64:	cmp	w0, w1
  437c68:	cset	w0, le
  437c6c:	and	w0, w0, #0xff
  437c70:	and	x0, x0, #0xff
  437c74:	cmp	x0, #0x0
  437c78:	b.eq	437c8c <get_cap_mask+0x258>  // b.none
  437c7c:	add	x0, sp, #0xa0
  437c80:	mov	x1, x0
  437c84:	ldr	x0, [sp, #224]
  437c88:	bl	40aba0 <sd_device_get_sysname@plt>
  437c8c:	adrp	x0, 456000 <__func__.9297+0x78>
  437c90:	add	x2, x0, #0x3ab
  437c94:	ldr	x0, [sp, #160]
  437c98:	cmp	x0, #0x0
  437c9c:	b.eq	437cac <get_cap_mask+0x278>  // b.none
  437ca0:	adrp	x0, 456000 <__func__.9297+0x78>
  437ca4:	add	x0, x0, #0x488
  437ca8:	b	437cb0 <get_cap_mask+0x27c>
  437cac:	mov	x0, #0x0                   	// #0
  437cb0:	ldr	x3, [sp, #160]
  437cb4:	ldr	x1, [sp, #168]
  437cb8:	str	x1, [sp, #24]
  437cbc:	ldr	x1, [sp, #80]
  437cc0:	str	x1, [sp, #16]
  437cc4:	adrp	x1, 456000 <__func__.9297+0x78>
  437cc8:	add	x1, x1, #0x4b0
  437ccc:	str	x1, [sp, #8]
  437cd0:	str	xzr, [sp]
  437cd4:	mov	x7, #0x0                   	// #0
  437cd8:	mov	x6, x3
  437cdc:	mov	x5, x0
  437ce0:	adrp	x0, 456000 <__func__.9297+0x78>
  437ce4:	add	x4, x0, #0x748
  437ce8:	mov	w3, #0x63                  	// #99
  437cec:	ldr	w1, [sp, #148]
  437cf0:	ldr	w0, [sp, #144]
  437cf4:	bl	40b020 <log_object_internal@plt>
  437cf8:	ldr	x0, [sp, #192]
  437cfc:	strb	wzr, [x0]
  437d00:	ldr	w0, [sp, #108]
  437d04:	add	w0, w0, #0x1
  437d08:	str	w0, [sp, #108]
  437d0c:	add	x0, sp, #0xe8
  437d10:	mov	w1, #0x20                  	// #32
  437d14:	bl	40ab50 <strrchr@plt>
  437d18:	str	x0, [sp, #192]
  437d1c:	ldr	x0, [sp, #192]
  437d20:	cmp	x0, #0x0
  437d24:	b.ne	437be8 <get_cap_mask+0x1b4>  // b.any
  437d28:	add	x0, sp, #0xe8
  437d2c:	mov	w2, #0x10                  	// #16
  437d30:	mov	x1, #0x0                   	// #0
  437d34:	bl	40b630 <strtoul@plt>
  437d38:	str	x0, [sp, #168]
  437d3c:	ldr	w1, [sp, #108]
  437d40:	ldr	x0, [sp, #64]
  437d44:	lsr	x0, x0, #3
  437d48:	cmp	x1, x0
  437d4c:	b.cs	437d6c <get_cap_mask+0x338>  // b.hs, b.nlast
  437d50:	ldr	w0, [sp, #108]
  437d54:	lsl	x0, x0, #3
  437d58:	ldr	x1, [sp, #72]
  437d5c:	add	x0, x1, x0
  437d60:	ldr	x1, [sp, #168]
  437d64:	str	x1, [x0]
  437d68:	b	437e34 <get_cap_mask+0x400>
  437d6c:	str	xzr, [sp, #160]
  437d70:	ldr	x0, [sp, #88]
  437d74:	str	x0, [sp, #200]
  437d78:	mov	w0, #0x7                   	// #7
  437d7c:	str	w0, [sp, #120]
  437d80:	str	wzr, [sp, #124]
  437d84:	ldr	x0, [sp, #200]
  437d88:	cmp	x0, #0x0
  437d8c:	b.eq	437dc8 <get_cap_mask+0x394>  // b.none
  437d90:	mov	w0, #0x1                   	// #1
  437d94:	bl	40be30 <log_get_max_level_realm@plt>
  437d98:	mov	w1, w0
  437d9c:	ldr	w0, [sp, #120]
  437da0:	cmp	w0, w1
  437da4:	cset	w0, le
  437da8:	and	w0, w0, #0xff
  437dac:	and	x0, x0, #0xff
  437db0:	cmp	x0, #0x0
  437db4:	b.eq	437dc8 <get_cap_mask+0x394>  // b.none
  437db8:	add	x0, sp, #0xa0
  437dbc:	mov	x1, x0
  437dc0:	ldr	x0, [sp, #200]
  437dc4:	bl	40aba0 <sd_device_get_sysname@plt>
  437dc8:	adrp	x0, 456000 <__func__.9297+0x78>
  437dcc:	add	x2, x0, #0x3ab
  437dd0:	ldr	x0, [sp, #160]
  437dd4:	cmp	x0, #0x0
  437dd8:	b.eq	437de8 <get_cap_mask+0x3b4>  // b.none
  437ddc:	adrp	x0, 456000 <__func__.9297+0x78>
  437de0:	add	x0, x0, #0x488
  437de4:	b	437dec <get_cap_mask+0x3b8>
  437de8:	mov	x0, #0x0                   	// #0
  437dec:	ldr	x3, [sp, #160]
  437df0:	ldr	x1, [sp, #168]
  437df4:	str	x1, [sp, #24]
  437df8:	ldr	x1, [sp, #80]
  437dfc:	str	x1, [sp, #16]
  437e00:	adrp	x1, 456000 <__func__.9297+0x78>
  437e04:	add	x1, x1, #0x4b0
  437e08:	str	x1, [sp, #8]
  437e0c:	str	xzr, [sp]
  437e10:	mov	x7, #0x0                   	// #0
  437e14:	mov	x6, x3
  437e18:	mov	x5, x0
  437e1c:	adrp	x0, 456000 <__func__.9297+0x78>
  437e20:	add	x4, x0, #0x748
  437e24:	mov	w3, #0x6b                  	// #107
  437e28:	ldr	w1, [sp, #124]
  437e2c:	ldr	w0, [sp, #120]
  437e30:	bl	40b020 <log_object_internal@plt>
  437e34:	ldrb	w0, [sp, #63]
  437e38:	cmp	w0, #0x0
  437e3c:	b.eq	4380a4 <get_cap_mask+0x670>  // b.none
  437e40:	add	x4, sp, #0xe8
  437e44:	mov	x3, #0x10                  	// #16
  437e48:	adrp	x0, 456000 <__func__.9297+0x78>
  437e4c:	add	x2, x0, #0x4e8
  437e50:	mov	x1, #0x1000                	// #4096
  437e54:	mov	x0, x4
  437e58:	bl	40a870 <snprintf@plt>
  437e5c:	cmp	w0, #0xfff
  437e60:	cset	w0, hi  // hi = pmore
  437e64:	and	w0, w0, #0xff
  437e68:	and	x0, x0, #0xff
  437e6c:	cmp	x0, #0x0
  437e70:	b.eq	437e9c <get_cap_mask+0x468>  // b.none
  437e74:	adrp	x0, 456000 <__func__.9297+0x78>
  437e78:	add	x1, x0, #0x3ab
  437e7c:	adrp	x0, 456000 <__func__.9297+0x78>
  437e80:	add	x4, x0, #0x738
  437e84:	mov	w3, #0x6f                  	// #111
  437e88:	mov	x2, x1
  437e8c:	adrp	x0, 456000 <__func__.9297+0x78>
  437e90:	add	x1, x0, #0x460
  437e94:	mov	w0, #0x1                   	// #1
  437e98:	bl	40abb0 <log_assert_failed_realm@plt>
  437e9c:	str	xzr, [sp, #160]
  437ea0:	ldr	x0, [sp, #88]
  437ea4:	str	x0, [sp, #208]
  437ea8:	mov	w0, #0x7                   	// #7
  437eac:	str	w0, [sp, #128]
  437eb0:	str	wzr, [sp, #132]
  437eb4:	ldr	x0, [sp, #208]
  437eb8:	cmp	x0, #0x0
  437ebc:	b.eq	437ef8 <get_cap_mask+0x4c4>  // b.none
  437ec0:	mov	w0, #0x1                   	// #1
  437ec4:	bl	40be30 <log_get_max_level_realm@plt>
  437ec8:	mov	w1, w0
  437ecc:	ldr	w0, [sp, #128]
  437ed0:	cmp	w0, w1
  437ed4:	cset	w0, le
  437ed8:	and	w0, w0, #0xff
  437edc:	and	x0, x0, #0xff
  437ee0:	cmp	x0, #0x0
  437ee4:	b.eq	437ef8 <get_cap_mask+0x4c4>  // b.none
  437ee8:	add	x0, sp, #0xa0
  437eec:	mov	x1, x0
  437ef0:	ldr	x0, [sp, #208]
  437ef4:	bl	40aba0 <sd_device_get_sysname@plt>
  437ef8:	adrp	x0, 456000 <__func__.9297+0x78>
  437efc:	add	x2, x0, #0x3ab
  437f00:	ldr	x0, [sp, #160]
  437f04:	cmp	x0, #0x0
  437f08:	b.eq	437f18 <get_cap_mask+0x4e4>  // b.none
  437f0c:	adrp	x0, 456000 <__func__.9297+0x78>
  437f10:	add	x0, x0, #0x488
  437f14:	b	437f1c <get_cap_mask+0x4e8>
  437f18:	mov	x0, #0x0                   	// #0
  437f1c:	ldr	x3, [sp, #160]
  437f20:	ldr	x1, [sp, #80]
  437f24:	str	x1, [sp, #16]
  437f28:	adrp	x1, 456000 <__func__.9297+0x78>
  437f2c:	add	x1, x1, #0x500
  437f30:	str	x1, [sp, #8]
  437f34:	str	xzr, [sp]
  437f38:	mov	x7, #0x0                   	// #0
  437f3c:	mov	x6, x3
  437f40:	mov	x5, x0
  437f44:	adrp	x0, 456000 <__func__.9297+0x78>
  437f48:	add	x4, x0, #0x748
  437f4c:	mov	w3, #0x71                  	// #113
  437f50:	ldr	w1, [sp, #132]
  437f54:	ldr	w0, [sp, #128]
  437f58:	bl	40b020 <log_object_internal@plt>
  437f5c:	ldr	x0, [sp, #64]
  437f60:	lsr	x0, x0, #3
  437f64:	str	x0, [sp, #168]
  437f68:	b	437f78 <get_cap_mask+0x544>
  437f6c:	ldr	x0, [sp, #168]
  437f70:	sub	x0, x0, #0x1
  437f74:	str	x0, [sp, #168]
  437f78:	ldr	x0, [sp, #168]
  437f7c:	lsl	x0, x0, #3
  437f80:	sub	x0, x0, #0x8
  437f84:	ldr	x1, [sp, #72]
  437f88:	add	x0, x1, x0
  437f8c:	ldr	x0, [x0]
  437f90:	cmp	x0, #0x0
  437f94:	b.ne	437fa4 <get_cap_mask+0x570>  // b.any
  437f98:	ldr	x0, [sp, #168]
  437f9c:	cmp	x0, #0x0
  437fa0:	b.ne	437f6c <get_cap_mask+0x538>  // b.any
  437fa4:	str	wzr, [sp, #108]
  437fa8:	b	438094 <get_cap_mask+0x660>
  437fac:	str	xzr, [sp, #160]
  437fb0:	ldr	x0, [sp, #88]
  437fb4:	str	x0, [sp, #216]
  437fb8:	mov	w0, #0x7                   	// #7
  437fbc:	str	w0, [sp, #136]
  437fc0:	str	wzr, [sp, #140]
  437fc4:	ldr	x0, [sp, #216]
  437fc8:	cmp	x0, #0x0
  437fcc:	b.eq	438008 <get_cap_mask+0x5d4>  // b.none
  437fd0:	mov	w0, #0x1                   	// #1
  437fd4:	bl	40be30 <log_get_max_level_realm@plt>
  437fd8:	mov	w1, w0
  437fdc:	ldr	w0, [sp, #136]
  437fe0:	cmp	w0, w1
  437fe4:	cset	w0, le
  437fe8:	and	w0, w0, #0xff
  437fec:	and	x0, x0, #0xff
  437ff0:	cmp	x0, #0x0
  437ff4:	b.eq	438008 <get_cap_mask+0x5d4>  // b.none
  437ff8:	add	x0, sp, #0xa0
  437ffc:	mov	x1, x0
  438000:	ldr	x0, [sp, #216]
  438004:	bl	40aba0 <sd_device_get_sysname@plt>
  438008:	adrp	x0, 456000 <__func__.9297+0x78>
  43800c:	add	x8, x0, #0x3ab
  438010:	ldr	x0, [sp, #160]
  438014:	cmp	x0, #0x0
  438018:	b.eq	438028 <get_cap_mask+0x5f4>  // b.none
  43801c:	adrp	x0, 456000 <__func__.9297+0x78>
  438020:	add	x0, x0, #0x488
  438024:	b	43802c <get_cap_mask+0x5f8>
  438028:	mov	x0, #0x0                   	// #0
  43802c:	ldr	x4, [sp, #160]
  438030:	ldr	w1, [sp, #108]
  438034:	lsl	x1, x1, #6
  438038:	ldr	w2, [sp, #108]
  43803c:	lsl	x2, x2, #3
  438040:	ldr	x3, [sp, #72]
  438044:	add	x2, x3, x2
  438048:	ldr	x2, [x2]
  43804c:	str	x2, [sp, #24]
  438050:	str	x1, [sp, #16]
  438054:	add	x1, sp, #0xe8
  438058:	str	x1, [sp, #8]
  43805c:	str	xzr, [sp]
  438060:	mov	x7, #0x0                   	// #0
  438064:	mov	x6, x4
  438068:	mov	x5, x0
  43806c:	adrp	x0, 456000 <__func__.9297+0x78>
  438070:	add	x4, x0, #0x748
  438074:	mov	w3, #0x78                  	// #120
  438078:	mov	x2, x8
  43807c:	ldr	w1, [sp, #140]
  438080:	ldr	w0, [sp, #136]
  438084:	bl	40b020 <log_object_internal@plt>
  438088:	ldr	w0, [sp, #108]
  43808c:	add	w0, w0, #0x1
  438090:	str	w0, [sp, #108]
  438094:	ldr	w0, [sp, #108]
  438098:	ldr	x1, [sp, #168]
  43809c:	cmp	x1, x0
  4380a0:	b.hi	437fac <get_cap_mask+0x578>  // b.pmore
  4380a4:	nop
  4380a8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4380ac:	ldr	x0, [x0, #4032]
  4380b0:	ldr	x1, [sp, #4328]
  4380b4:	ldr	x0, [x0]
  4380b8:	eor	x0, x1, x0
  4380bc:	cmp	x0, #0x0
  4380c0:	b.eq	4380c8 <get_cap_mask+0x694>  // b.none
  4380c4:	bl	40b280 <__stack_chk_fail@plt>
  4380c8:	ldp	x29, x30, [sp, #32]
  4380cc:	mov	x12, #0x10f0                	// #4336
  4380d0:	add	sp, sp, x12
  4380d4:	ret

00000000004380d8 <test_pointers>:
  4380d8:	stp	x29, x30, [sp, #-112]!
  4380dc:	mov	x29, sp
  4380e0:	str	x0, [sp, #72]
  4380e4:	str	x1, [sp, #64]
  4380e8:	str	x2, [sp, #56]
  4380ec:	str	x3, [sp, #48]
  4380f0:	str	x4, [sp, #40]
  4380f4:	str	x5, [sp, #32]
  4380f8:	strb	w6, [sp, #31]
  4380fc:	strb	wzr, [sp, #95]
  438100:	strb	wzr, [sp, #96]
  438104:	strb	wzr, [sp, #86]
  438108:	strb	wzr, [sp, #87]
  43810c:	strb	wzr, [sp, #97]
  438110:	strb	wzr, [sp, #98]
  438114:	strb	wzr, [sp, #99]
  438118:	strb	wzr, [sp, #100]
  43811c:	strb	wzr, [sp, #101]
  438120:	strb	wzr, [sp, #102]
  438124:	strb	wzr, [sp, #88]
  438128:	strb	wzr, [sp, #89]
  43812c:	strb	wzr, [sp, #90]
  438130:	strb	wzr, [sp, #91]
  438134:	strb	wzr, [sp, #92]
  438138:	strb	wzr, [sp, #93]
  43813c:	strb	wzr, [sp, #94]
  438140:	strb	wzr, [sp, #103]
  438144:	ldr	x0, [sp, #64]
  438148:	ldr	x0, [x0]
  43814c:	lsr	x0, x0, #1
  438150:	and	x0, x0, #0x1
  438154:	cmp	x0, #0x0
  438158:	cset	w0, ne  // ne = any
  43815c:	strb	w0, [sp, #100]
  438160:	ldr	x0, [sp, #56]
  438164:	ldr	x0, [x0]
  438168:	and	x0, x0, #0x1
  43816c:	cmp	x0, #0x0
  438170:	b.eq	438194 <test_pointers+0xbc>  // b.none
  438174:	ldr	x0, [sp, #56]
  438178:	ldr	x0, [x0]
  43817c:	lsr	x0, x0, #1
  438180:	and	x0, x0, #0x1
  438184:	cmp	x0, #0x0
  438188:	b.eq	438194 <test_pointers+0xbc>  // b.none
  43818c:	mov	w0, #0x1                   	// #1
  438190:	b	438198 <test_pointers+0xc0>
  438194:	mov	w0, #0x0                   	// #0
  438198:	strb	w0, [sp, #95]
  43819c:	ldrb	w0, [sp, #95]
  4381a0:	and	w0, w0, #0x1
  4381a4:	strb	w0, [sp, #95]
  4381a8:	ldrb	w0, [sp, #95]
  4381ac:	cmp	w0, #0x0
  4381b0:	b.eq	4381d4 <test_pointers+0xfc>  // b.none
  4381b4:	ldr	x0, [sp, #56]
  4381b8:	ldr	x0, [x0]
  4381bc:	lsr	x0, x0, #2
  4381c0:	and	x0, x0, #0x1
  4381c4:	cmp	x0, #0x0
  4381c8:	b.eq	4381d4 <test_pointers+0xfc>  // b.none
  4381cc:	mov	w0, #0x1                   	// #1
  4381d0:	b	4381d8 <test_pointers+0x100>
  4381d4:	mov	w0, #0x0                   	// #0
  4381d8:	strb	w0, [sp, #99]
  4381dc:	ldrb	w0, [sp, #99]
  4381e0:	and	w0, w0, #0x1
  4381e4:	strb	w0, [sp, #99]
  4381e8:	ldr	x0, [sp, #32]
  4381ec:	ldr	x0, [x0]
  4381f0:	lsr	x0, x0, #6
  4381f4:	and	x0, x0, #0x1
  4381f8:	cmp	x0, #0x0
  4381fc:	cset	w0, ne  // ne = any
  438200:	strb	w0, [sp, #94]
  438204:	ldrb	w0, [sp, #100]
  438208:	eor	w0, w0, #0x1
  43820c:	and	w0, w0, #0xff
  438210:	cmp	w0, #0x0
  438214:	b.eq	43822c <test_pointers+0x154>  // b.none
  438218:	ldrb	w0, [sp, #99]
  43821c:	cmp	w0, #0x0
  438220:	b.eq	43822c <test_pointers+0x154>  // b.none
  438224:	mov	w0, #0x1                   	// #1
  438228:	strb	w0, [sp, #94]
  43822c:	ldrb	w0, [sp, #94]
  438230:	cmp	w0, #0x0
  438234:	b.eq	43825c <test_pointers+0x184>  // b.none
  438238:	adrp	x0, 456000 <__func__.9297+0x78>
  43823c:	add	x3, x0, #0x518
  438240:	adrp	x0, 456000 <__func__.9297+0x78>
  438244:	add	x2, x0, #0x520
  438248:	ldrb	w1, [sp, #31]
  43824c:	ldr	x0, [sp, #72]
  438250:	bl	436504 <udev_builtin_add_property>
  438254:	mov	w0, #0x1                   	// #1
  438258:	b	43895c <test_pointers+0x884>
  43825c:	ldr	x0, [sp, #32]
  438260:	ldr	x0, [x0]
  438264:	lsr	x0, x0, #5
  438268:	and	x0, x0, #0x1
  43826c:	cmp	x0, #0x0
  438270:	cset	w0, ne  // ne = any
  438274:	strb	w0, [sp, #103]
  438278:	ldr	x0, [sp, #48]
  43827c:	add	x0, x0, #0x28
  438280:	ldr	x0, [x0]
  438284:	lsr	x0, x0, #11
  438288:	and	x0, x0, #0x1
  43828c:	cmp	x0, #0x0
  438290:	b.ne	4382ac <test_pointers+0x1d4>  // b.any
  438294:	ldr	x0, [sp, #48]
  438298:	add	x0, x0, #0x28
  43829c:	ldr	x0, [x0]
  4382a0:	and	x0, x0, #0x1
  4382a4:	cmp	x0, #0x0
  4382a8:	b.eq	4382b4 <test_pointers+0x1dc>  // b.none
  4382ac:	mov	w0, #0x1                   	// #1
  4382b0:	b	4382b8 <test_pointers+0x1e0>
  4382b4:	mov	w0, #0x0                   	// #0
  4382b8:	strb	w0, [sp, #101]
  4382bc:	ldrb	w0, [sp, #101]
  4382c0:	and	w0, w0, #0x1
  4382c4:	strb	w0, [sp, #101]
  4382c8:	ldr	x0, [sp, #48]
  4382cc:	add	x0, x0, #0x28
  4382d0:	ldr	x0, [x0]
  4382d4:	lsr	x0, x0, #5
  4382d8:	and	x0, x0, #0x1
  4382dc:	cmp	x0, #0x0
  4382e0:	b.eq	438304 <test_pointers+0x22c>  // b.none
  4382e4:	ldr	x0, [sp, #48]
  4382e8:	add	x0, x0, #0x28
  4382ec:	ldr	x0, [x0]
  4382f0:	and	x0, x0, #0x1
  4382f4:	cmp	x0, #0x0
  4382f8:	b.ne	438304 <test_pointers+0x22c>  // b.any
  4382fc:	mov	w0, #0x1                   	// #1
  438300:	b	438308 <test_pointers+0x230>
  438304:	mov	w0, #0x0                   	// #0
  438308:	strb	w0, [sp, #102]
  43830c:	ldrb	w0, [sp, #102]
  438310:	and	w0, w0, #0x1
  438314:	strb	w0, [sp, #102]
  438318:	mov	w0, #0x110                 	// #272
  43831c:	str	w0, [sp, #104]
  438320:	b	438364 <test_pointers+0x28c>
  438324:	ldrsw	x0, [sp, #104]
  438328:	lsr	x0, x0, #6
  43832c:	lsl	x0, x0, #3
  438330:	ldr	x1, [sp, #48]
  438334:	add	x0, x1, x0
  438338:	ldr	x1, [x0]
  43833c:	ldr	w0, [sp, #104]
  438340:	and	w0, w0, #0x3f
  438344:	lsr	x0, x1, x0
  438348:	and	x0, x0, #0x1
  43834c:	cmp	x0, #0x0
  438350:	cset	w0, ne  // ne = any
  438354:	strb	w0, [sp, #88]
  438358:	ldr	w0, [sp, #104]
  43835c:	add	w0, w0, #0x1
  438360:	str	w0, [sp, #104]
  438364:	ldr	w0, [sp, #104]
  438368:	cmp	w0, #0x11f
  43836c:	b.gt	438384 <test_pointers+0x2ac>
  438370:	ldrb	w0, [sp, #88]
  438374:	eor	w0, w0, #0x1
  438378:	and	w0, w0, #0xff
  43837c:	cmp	w0, #0x0
  438380:	b.ne	438324 <test_pointers+0x24c>  // b.any
  438384:	ldr	x0, [sp, #64]
  438388:	ldr	x0, [x0]
  43838c:	lsr	x0, x0, #2
  438390:	and	x0, x0, #0x1
  438394:	cmp	x0, #0x0
  438398:	b.eq	4383d0 <test_pointers+0x2f8>  // b.none
  43839c:	ldr	x0, [sp, #40]
  4383a0:	ldr	x0, [x0]
  4383a4:	and	x0, x0, #0x1
  4383a8:	cmp	x0, #0x0
  4383ac:	b.eq	4383d0 <test_pointers+0x2f8>  // b.none
  4383b0:	ldr	x0, [sp, #40]
  4383b4:	ldr	x0, [x0]
  4383b8:	lsr	x0, x0, #1
  4383bc:	and	x0, x0, #0x1
  4383c0:	cmp	x0, #0x0
  4383c4:	b.eq	4383d0 <test_pointers+0x2f8>  // b.none
  4383c8:	mov	w0, #0x1                   	// #1
  4383cc:	b	4383d4 <test_pointers+0x2fc>
  4383d0:	mov	w0, #0x0                   	// #0
  4383d4:	strb	w0, [sp, #96]
  4383d8:	ldrb	w0, [sp, #96]
  4383dc:	and	w0, w0, #0x1
  4383e0:	strb	w0, [sp, #96]
  4383e4:	ldr	x0, [sp, #56]
  4383e8:	ldr	x0, [x0]
  4383ec:	lsr	x0, x0, #53
  4383f0:	and	x0, x0, #0x1
  4383f4:	cmp	x0, #0x0
  4383f8:	b.eq	43841c <test_pointers+0x344>  // b.none
  4383fc:	ldr	x0, [sp, #56]
  438400:	ldr	x0, [x0]
  438404:	lsr	x0, x0, #54
  438408:	and	x0, x0, #0x1
  43840c:	cmp	x0, #0x0
  438410:	b.eq	43841c <test_pointers+0x344>  // b.none
  438414:	mov	w0, #0x1                   	// #1
  438418:	b	438420 <test_pointers+0x348>
  43841c:	mov	w0, #0x0                   	// #0
  438420:	strb	w0, [sp, #86]
  438424:	ldrb	w0, [sp, #86]
  438428:	and	w0, w0, #0x1
  43842c:	strb	w0, [sp, #86]
  438430:	ldrb	w0, [sp, #86]
  438434:	cmp	w0, #0x0
  438438:	b.eq	438470 <test_pointers+0x398>  // b.none
  43843c:	ldr	x0, [sp, #56]
  438440:	ldr	x0, [x0]
  438444:	lsr	x0, x0, #47
  438448:	and	x0, x0, #0x1
  43844c:	cmp	x0, #0x0
  438450:	b.eq	438470 <test_pointers+0x398>  // b.none
  438454:	ldr	x0, [sp, #56]
  438458:	ldr	x0, [x0]
  43845c:	lsr	x0, x0, #46
  438460:	and	x0, x0, #0x1
  438464:	cmp	x0, #0x0
  438468:	b.eq	438470 <test_pointers+0x398>  // b.none
  43846c:	strb	wzr, [sp, #86]
  438470:	ldr	x0, [sp, #32]
  438474:	ldr	x0, [x0]
  438478:	lsr	x0, x0, #1
  43847c:	and	x0, x0, #0x1
  438480:	cmp	x0, #0x0
  438484:	cset	w0, ne  // ne = any
  438488:	strb	w0, [sp, #97]
  43848c:	ldr	x0, [sp, #48]
  438490:	add	x0, x0, #0x28
  438494:	ldr	x0, [x0]
  438498:	lsr	x0, x0, #10
  43849c:	and	x0, x0, #0x1
  4384a0:	cmp	x0, #0x0
  4384a4:	cset	w0, ne  // ne = any
  4384a8:	strb	w0, [sp, #98]
  4384ac:	ldr	x0, [sp, #48]
  4384b0:	add	x0, x0, #0x20
  4384b4:	ldr	x0, [x0]
  4384b8:	lsr	x0, x0, #31
  4384bc:	and	x0, x0, #0x1
  4384c0:	cmp	x0, #0x0
  4384c4:	b.ne	43860c <test_pointers+0x534>  // b.any
  4384c8:	mov	w0, #0x120                 	// #288
  4384cc:	str	w0, [sp, #104]
  4384d0:	b	438514 <test_pointers+0x43c>
  4384d4:	ldrsw	x0, [sp, #104]
  4384d8:	lsr	x0, x0, #6
  4384dc:	lsl	x0, x0, #3
  4384e0:	ldr	x1, [sp, #48]
  4384e4:	add	x0, x1, x0
  4384e8:	ldr	x1, [x0]
  4384ec:	ldr	w0, [sp, #104]
  4384f0:	and	w0, w0, #0x3f
  4384f4:	lsr	x0, x1, x0
  4384f8:	and	x0, x0, #0x1
  4384fc:	cmp	x0, #0x0
  438500:	cset	w0, ne  // ne = any
  438504:	strb	w0, [sp, #87]
  438508:	ldr	w0, [sp, #104]
  43850c:	add	w0, w0, #0x1
  438510:	str	w0, [sp, #104]
  438514:	ldr	w0, [sp, #104]
  438518:	cmp	w0, #0x13f
  43851c:	b.gt	438534 <test_pointers+0x45c>
  438520:	ldrb	w0, [sp, #87]
  438524:	eor	w0, w0, #0x1
  438528:	and	w0, w0, #0xff
  43852c:	cmp	w0, #0x0
  438530:	b.ne	4384d4 <test_pointers+0x3fc>  // b.any
  438534:	mov	w0, #0x2c0                 	// #704
  438538:	str	w0, [sp, #104]
  43853c:	b	438580 <test_pointers+0x4a8>
  438540:	ldrsw	x0, [sp, #104]
  438544:	lsr	x0, x0, #6
  438548:	lsl	x0, x0, #3
  43854c:	ldr	x1, [sp, #48]
  438550:	add	x0, x1, x0
  438554:	ldr	x1, [x0]
  438558:	ldr	w0, [sp, #104]
  43855c:	and	w0, w0, #0x3f
  438560:	lsr	x0, x1, x0
  438564:	and	x0, x0, #0x1
  438568:	cmp	x0, #0x0
  43856c:	cset	w0, ne  // ne = any
  438570:	strb	w0, [sp, #87]
  438574:	ldr	w0, [sp, #104]
  438578:	add	w0, w0, #0x1
  43857c:	str	w0, [sp, #104]
  438580:	ldr	w0, [sp, #104]
  438584:	cmp	w0, #0x2e7
  438588:	b.gt	4385a0 <test_pointers+0x4c8>
  43858c:	ldrb	w0, [sp, #87]
  438590:	eor	w0, w0, #0x1
  438594:	and	w0, w0, #0xff
  438598:	cmp	w0, #0x0
  43859c:	b.ne	438540 <test_pointers+0x468>  // b.any
  4385a0:	mov	w0, #0x220                 	// #544
  4385a4:	str	w0, [sp, #104]
  4385a8:	b	4385ec <test_pointers+0x514>
  4385ac:	ldrsw	x0, [sp, #104]
  4385b0:	lsr	x0, x0, #6
  4385b4:	lsl	x0, x0, #3
  4385b8:	ldr	x1, [sp, #48]
  4385bc:	add	x0, x1, x0
  4385c0:	ldr	x1, [x0]
  4385c4:	ldr	w0, [sp, #104]
  4385c8:	and	w0, w0, #0x3f
  4385cc:	lsr	x0, x1, x0
  4385d0:	and	x0, x0, #0x1
  4385d4:	cmp	x0, #0x0
  4385d8:	cset	w0, ne  // ne = any
  4385dc:	strb	w0, [sp, #87]
  4385e0:	ldr	w0, [sp, #104]
  4385e4:	add	w0, w0, #0x1
  4385e8:	str	w0, [sp, #104]
  4385ec:	ldr	w0, [sp, #104]
  4385f0:	cmp	w0, #0x223
  4385f4:	b.gt	43860c <test_pointers+0x534>
  4385f8:	ldrb	w0, [sp, #87]
  4385fc:	eor	w0, w0, #0x1
  438600:	and	w0, w0, #0xff
  438604:	cmp	w0, #0x0
  438608:	b.ne	4385ac <test_pointers+0x4d4>  // b.any
  43860c:	mov	w0, #0x3                   	// #3
  438610:	str	w0, [sp, #108]
  438614:	b	438658 <test_pointers+0x580>
  438618:	ldrsw	x0, [sp, #108]
  43861c:	lsr	x0, x0, #6
  438620:	lsl	x0, x0, #3
  438624:	ldr	x1, [sp, #56]
  438628:	add	x0, x1, x0
  43862c:	ldr	x1, [x0]
  438630:	ldr	w0, [sp, #108]
  438634:	and	w0, w0, #0x3f
  438638:	lsr	x0, x1, x0
  43863c:	and	x0, x0, #0x1
  438640:	cmp	x0, #0x0
  438644:	cset	w0, ne  // ne = any
  438648:	strb	w0, [sp, #87]
  43864c:	ldr	w0, [sp, #108]
  438650:	add	w0, w0, #0x1
  438654:	str	w0, [sp, #108]
  438658:	ldr	w0, [sp, #108]
  43865c:	cmp	w0, #0x17
  438660:	b.gt	438678 <test_pointers+0x5a0>
  438664:	ldrb	w0, [sp, #87]
  438668:	eor	w0, w0, #0x1
  43866c:	and	w0, w0, #0xff
  438670:	cmp	w0, #0x0
  438674:	b.ne	438618 <test_pointers+0x540>  // b.any
  438678:	ldrb	w0, [sp, #95]
  43867c:	cmp	w0, #0x0
  438680:	b.eq	43871c <test_pointers+0x644>  // b.none
  438684:	ldrb	w0, [sp, #101]
  438688:	cmp	w0, #0x0
  43868c:	b.eq	43869c <test_pointers+0x5c4>  // b.none
  438690:	mov	w0, #0x1                   	// #1
  438694:	strb	w0, [sp, #92]
  438698:	b	438730 <test_pointers+0x658>
  43869c:	ldrb	w0, [sp, #102]
  4386a0:	cmp	w0, #0x0
  4386a4:	b.eq	4386c8 <test_pointers+0x5f0>  // b.none
  4386a8:	ldrb	w0, [sp, #97]
  4386ac:	eor	w0, w0, #0x1
  4386b0:	and	w0, w0, #0xff
  4386b4:	cmp	w0, #0x0
  4386b8:	b.eq	4386c8 <test_pointers+0x5f0>  // b.none
  4386bc:	mov	w0, #0x1                   	// #1
  4386c0:	strb	w0, [sp, #90]
  4386c4:	b	438730 <test_pointers+0x658>
  4386c8:	ldrb	w0, [sp, #88]
  4386cc:	cmp	w0, #0x0
  4386d0:	b.eq	4386e0 <test_pointers+0x608>  // b.none
  4386d4:	mov	w0, #0x1                   	// #1
  4386d8:	strb	w0, [sp, #89]
  4386dc:	b	438730 <test_pointers+0x658>
  4386e0:	ldrb	w0, [sp, #98]
  4386e4:	cmp	w0, #0x0
  4386e8:	b.ne	4386f8 <test_pointers+0x620>  // b.any
  4386ec:	ldrb	w0, [sp, #97]
  4386f0:	cmp	w0, #0x0
  4386f4:	b.eq	438704 <test_pointers+0x62c>  // b.none
  4386f8:	mov	w0, #0x1                   	// #1
  4386fc:	strb	w0, [sp, #91]
  438700:	b	438730 <test_pointers+0x658>
  438704:	ldrb	w0, [sp, #87]
  438708:	cmp	w0, #0x0
  43870c:	b.eq	438730 <test_pointers+0x658>  // b.none
  438710:	mov	w0, #0x1                   	// #1
  438714:	strb	w0, [sp, #93]
  438718:	b	438730 <test_pointers+0x658>
  43871c:	ldrb	w0, [sp, #87]
  438720:	cmp	w0, #0x0
  438724:	b.eq	438730 <test_pointers+0x658>  // b.none
  438728:	mov	w0, #0x1                   	// #1
  43872c:	strb	w0, [sp, #93]
  438730:	ldrb	w0, [sp, #86]
  438734:	cmp	w0, #0x0
  438738:	b.eq	4387a0 <test_pointers+0x6c8>  // b.none
  43873c:	ldrb	w0, [sp, #101]
  438740:	cmp	w0, #0x0
  438744:	b.eq	438754 <test_pointers+0x67c>  // b.none
  438748:	mov	w0, #0x1                   	// #1
  43874c:	strb	w0, [sp, #92]
  438750:	b	4387a0 <test_pointers+0x6c8>
  438754:	ldrb	w0, [sp, #102]
  438758:	cmp	w0, #0x0
  43875c:	b.eq	438780 <test_pointers+0x6a8>  // b.none
  438760:	ldrb	w0, [sp, #97]
  438764:	eor	w0, w0, #0x1
  438768:	and	w0, w0, #0xff
  43876c:	cmp	w0, #0x0
  438770:	b.eq	438780 <test_pointers+0x6a8>  // b.none
  438774:	mov	w0, #0x1                   	// #1
  438778:	strb	w0, [sp, #90]
  43877c:	b	4387a0 <test_pointers+0x6c8>
  438780:	ldrb	w0, [sp, #98]
  438784:	cmp	w0, #0x0
  438788:	b.ne	438798 <test_pointers+0x6c0>  // b.any
  43878c:	ldrb	w0, [sp, #97]
  438790:	cmp	w0, #0x0
  438794:	b.eq	4387a0 <test_pointers+0x6c8>  // b.none
  438798:	mov	w0, #0x1                   	// #1
  43879c:	strb	w0, [sp, #91]
  4387a0:	ldrb	w0, [sp, #92]
  4387a4:	eor	w0, w0, #0x1
  4387a8:	and	w0, w0, #0xff
  4387ac:	cmp	w0, #0x0
  4387b0:	b.eq	438810 <test_pointers+0x738>  // b.none
  4387b4:	ldrb	w0, [sp, #90]
  4387b8:	eor	w0, w0, #0x1
  4387bc:	and	w0, w0, #0xff
  4387c0:	cmp	w0, #0x0
  4387c4:	b.eq	438810 <test_pointers+0x738>  // b.none
  4387c8:	ldrb	w0, [sp, #93]
  4387cc:	eor	w0, w0, #0x1
  4387d0:	and	w0, w0, #0xff
  4387d4:	cmp	w0, #0x0
  4387d8:	b.eq	438810 <test_pointers+0x738>  // b.none
  4387dc:	ldrb	w0, [sp, #88]
  4387e0:	cmp	w0, #0x0
  4387e4:	b.eq	438810 <test_pointers+0x738>  // b.none
  4387e8:	ldrb	w0, [sp, #96]
  4387ec:	cmp	w0, #0x0
  4387f0:	b.ne	438808 <test_pointers+0x730>  // b.any
  4387f4:	ldrb	w0, [sp, #95]
  4387f8:	eor	w0, w0, #0x1
  4387fc:	and	w0, w0, #0xff
  438800:	cmp	w0, #0x0
  438804:	b.eq	438810 <test_pointers+0x738>  // b.none
  438808:	mov	w0, #0x1                   	// #1
  43880c:	strb	w0, [sp, #89]
  438810:	ldrb	w0, [sp, #103]
  438814:	cmp	w0, #0x0
  438818:	b.eq	438838 <test_pointers+0x760>  // b.none
  43881c:	adrp	x0, 456000 <__func__.9297+0x78>
  438820:	add	x3, x0, #0x518
  438824:	adrp	x0, 456000 <__func__.9297+0x78>
  438828:	add	x2, x0, #0x538
  43882c:	ldrb	w1, [sp, #31]
  438830:	ldr	x0, [sp, #72]
  438834:	bl	436504 <udev_builtin_add_property>
  438838:	ldrb	w0, [sp, #89]
  43883c:	cmp	w0, #0x0
  438840:	b.eq	438860 <test_pointers+0x788>  // b.none
  438844:	adrp	x0, 456000 <__func__.9297+0x78>
  438848:	add	x3, x0, #0x518
  43884c:	adrp	x0, 456000 <__func__.9297+0x78>
  438850:	add	x2, x0, #0x550
  438854:	ldrb	w1, [sp, #31]
  438858:	ldr	x0, [sp, #72]
  43885c:	bl	436504 <udev_builtin_add_property>
  438860:	ldrb	w0, [sp, #90]
  438864:	cmp	w0, #0x0
  438868:	b.eq	438888 <test_pointers+0x7b0>  // b.none
  43886c:	adrp	x0, 456000 <__func__.9297+0x78>
  438870:	add	x3, x0, #0x518
  438874:	adrp	x0, 456000 <__func__.9297+0x78>
  438878:	add	x2, x0, #0x560
  43887c:	ldrb	w1, [sp, #31]
  438880:	ldr	x0, [sp, #72]
  438884:	bl	436504 <udev_builtin_add_property>
  438888:	ldrb	w0, [sp, #91]
  43888c:	cmp	w0, #0x0
  438890:	b.eq	4388b0 <test_pointers+0x7d8>  // b.none
  438894:	adrp	x0, 456000 <__func__.9297+0x78>
  438898:	add	x3, x0, #0x518
  43889c:	adrp	x0, 456000 <__func__.9297+0x78>
  4388a0:	add	x2, x0, #0x578
  4388a4:	ldrb	w1, [sp, #31]
  4388a8:	ldr	x0, [sp, #72]
  4388ac:	bl	436504 <udev_builtin_add_property>
  4388b0:	ldrb	w0, [sp, #93]
  4388b4:	cmp	w0, #0x0
  4388b8:	b.eq	4388d8 <test_pointers+0x800>  // b.none
  4388bc:	adrp	x0, 456000 <__func__.9297+0x78>
  4388c0:	add	x3, x0, #0x518
  4388c4:	adrp	x0, 456000 <__func__.9297+0x78>
  4388c8:	add	x2, x0, #0x590
  4388cc:	ldrb	w1, [sp, #31]
  4388d0:	ldr	x0, [sp, #72]
  4388d4:	bl	436504 <udev_builtin_add_property>
  4388d8:	ldrb	w0, [sp, #92]
  4388dc:	cmp	w0, #0x0
  4388e0:	b.eq	438900 <test_pointers+0x828>  // b.none
  4388e4:	adrp	x0, 456000 <__func__.9297+0x78>
  4388e8:	add	x3, x0, #0x518
  4388ec:	adrp	x0, 456000 <__func__.9297+0x78>
  4388f0:	add	x2, x0, #0x5a8
  4388f4:	ldrb	w1, [sp, #31]
  4388f8:	ldr	x0, [sp, #72]
  4388fc:	bl	436504 <udev_builtin_add_property>
  438900:	ldrb	w0, [sp, #92]
  438904:	cmp	w0, #0x0
  438908:	b.ne	438948 <test_pointers+0x870>  // b.any
  43890c:	ldrb	w0, [sp, #89]
  438910:	cmp	w0, #0x0
  438914:	b.ne	438948 <test_pointers+0x870>  // b.any
  438918:	ldrb	w0, [sp, #90]
  43891c:	cmp	w0, #0x0
  438920:	b.ne	438948 <test_pointers+0x870>  // b.any
  438924:	ldrb	w0, [sp, #91]
  438928:	cmp	w0, #0x0
  43892c:	b.ne	438948 <test_pointers+0x870>  // b.any
  438930:	ldrb	w0, [sp, #93]
  438934:	cmp	w0, #0x0
  438938:	b.ne	438948 <test_pointers+0x870>  // b.any
  43893c:	ldrb	w0, [sp, #103]
  438940:	cmp	w0, #0x0
  438944:	b.eq	438950 <test_pointers+0x878>  // b.none
  438948:	mov	w0, #0x1                   	// #1
  43894c:	b	438954 <test_pointers+0x87c>
  438950:	mov	w0, #0x0                   	// #0
  438954:	and	w0, w0, #0x1
  438958:	and	w0, w0, #0xff
  43895c:	ldp	x29, x30, [sp], #112
  438960:	ret

0000000000438964 <test_key>:
  438964:	sub	sp, sp, #0xb0
  438968:	stp	x29, x30, [sp, #32]
  43896c:	add	x29, sp, #0x20
  438970:	str	x0, [sp, #72]
  438974:	str	x1, [sp, #64]
  438978:	str	x2, [sp, #56]
  43897c:	strb	w3, [sp, #55]
  438980:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  438984:	ldr	x0, [x0, #4032]
  438988:	ldr	x1, [x0]
  43898c:	str	x1, [sp, #168]
  438990:	mov	x1, #0x0                   	// #0
  438994:	strb	wzr, [sp, #87]
  438998:	ldr	x0, [sp, #64]
  43899c:	ldr	x0, [x0]
  4389a0:	lsr	x0, x0, #1
  4389a4:	and	x0, x0, #0x1
  4389a8:	cmp	x0, #0x0
  4389ac:	b.ne	438a70 <test_key+0x10c>  // b.any
  4389b0:	str	xzr, [sp, #120]
  4389b4:	ldr	x0, [sp, #72]
  4389b8:	str	x0, [sp, #160]
  4389bc:	mov	w0, #0x7                   	// #7
  4389c0:	str	w0, [sp, #112]
  4389c4:	str	wzr, [sp, #116]
  4389c8:	ldr	x0, [sp, #160]
  4389cc:	cmp	x0, #0x0
  4389d0:	b.eq	438a0c <test_key+0xa8>  // b.none
  4389d4:	mov	w0, #0x1                   	// #1
  4389d8:	bl	40be30 <log_get_max_level_realm@plt>
  4389dc:	mov	w1, w0
  4389e0:	ldr	w0, [sp, #112]
  4389e4:	cmp	w0, w1
  4389e8:	cset	w0, le
  4389ec:	and	w0, w0, #0xff
  4389f0:	and	x0, x0, #0xff
  4389f4:	cmp	x0, #0x0
  4389f8:	b.eq	438a0c <test_key+0xa8>  // b.none
  4389fc:	add	x0, sp, #0x78
  438a00:	mov	x1, x0
  438a04:	ldr	x0, [sp, #160]
  438a08:	bl	40aba0 <sd_device_get_sysname@plt>
  438a0c:	adrp	x0, 456000 <__func__.9297+0x78>
  438a10:	add	x2, x0, #0x3ab
  438a14:	ldr	x0, [sp, #120]
  438a18:	cmp	x0, #0x0
  438a1c:	b.eq	438a2c <test_key+0xc8>  // b.none
  438a20:	adrp	x0, 456000 <__func__.9297+0x78>
  438a24:	add	x0, x0, #0x488
  438a28:	b	438a30 <test_key+0xcc>
  438a2c:	mov	x0, #0x0                   	// #0
  438a30:	ldr	x3, [sp, #120]
  438a34:	adrp	x1, 456000 <__func__.9297+0x78>
  438a38:	add	x1, x1, #0x5b8
  438a3c:	str	x1, [sp, #8]
  438a40:	str	xzr, [sp]
  438a44:	mov	x7, #0x0                   	// #0
  438a48:	mov	x6, x3
  438a4c:	mov	x5, x0
  438a50:	adrp	x0, 456000 <__func__.9297+0x78>
  438a54:	add	x4, x0, #0x758
  438a58:	mov	w3, #0x104                 	// #260
  438a5c:	ldr	w1, [sp, #116]
  438a60:	ldr	w0, [sp, #112]
  438a64:	bl	40b020 <log_object_internal@plt>
  438a68:	mov	w0, #0x0                   	// #0
  438a6c:	b	438d88 <test_key+0x424>
  438a70:	str	xzr, [sp, #128]
  438a74:	str	wzr, [sp, #88]
  438a78:	b	438b84 <test_key+0x220>
  438a7c:	ldr	w0, [sp, #88]
  438a80:	lsl	x0, x0, #3
  438a84:	ldr	x1, [sp, #56]
  438a88:	add	x0, x1, x0
  438a8c:	ldr	x0, [x0]
  438a90:	ldr	x1, [sp, #128]
  438a94:	orr	x0, x1, x0
  438a98:	str	x0, [sp, #128]
  438a9c:	str	xzr, [sp, #120]
  438aa0:	ldr	x0, [sp, #72]
  438aa4:	str	x0, [sp, #152]
  438aa8:	mov	w0, #0x7                   	// #7
  438aac:	str	w0, [sp, #104]
  438ab0:	str	wzr, [sp, #108]
  438ab4:	ldr	x0, [sp, #152]
  438ab8:	cmp	x0, #0x0
  438abc:	b.eq	438af8 <test_key+0x194>  // b.none
  438ac0:	mov	w0, #0x1                   	// #1
  438ac4:	bl	40be30 <log_get_max_level_realm@plt>
  438ac8:	mov	w1, w0
  438acc:	ldr	w0, [sp, #104]
  438ad0:	cmp	w0, w1
  438ad4:	cset	w0, le
  438ad8:	and	w0, w0, #0xff
  438adc:	and	x0, x0, #0xff
  438ae0:	cmp	x0, #0x0
  438ae4:	b.eq	438af8 <test_key+0x194>  // b.none
  438ae8:	add	x0, sp, #0x78
  438aec:	mov	x1, x0
  438af0:	ldr	x0, [sp, #152]
  438af4:	bl	40aba0 <sd_device_get_sysname@plt>
  438af8:	adrp	x0, 456000 <__func__.9297+0x78>
  438afc:	add	x8, x0, #0x3ab
  438b00:	ldr	x0, [sp, #120]
  438b04:	cmp	x0, #0x0
  438b08:	b.eq	438b18 <test_key+0x1b4>  // b.none
  438b0c:	adrp	x0, 456000 <__func__.9297+0x78>
  438b10:	add	x0, x0, #0x488
  438b14:	b	438b1c <test_key+0x1b8>
  438b18:	mov	x0, #0x0                   	// #0
  438b1c:	ldr	x3, [sp, #120]
  438b20:	ldr	w1, [sp, #88]
  438b24:	lsl	x1, x1, #6
  438b28:	ldr	x2, [sp, #128]
  438b2c:	cmp	x2, #0x0
  438b30:	cset	w2, ne  // ne = any
  438b34:	and	w2, w2, #0xff
  438b38:	str	w2, [sp, #24]
  438b3c:	str	x1, [sp, #16]
  438b40:	adrp	x1, 456000 <__func__.9297+0x78>
  438b44:	add	x1, x1, #0x5d8
  438b48:	str	x1, [sp, #8]
  438b4c:	str	xzr, [sp]
  438b50:	mov	x7, #0x0                   	// #0
  438b54:	mov	x6, x3
  438b58:	mov	x5, x0
  438b5c:	adrp	x0, 456000 <__func__.9297+0x78>
  438b60:	add	x4, x0, #0x758
  438b64:	mov	w3, #0x10c                 	// #268
  438b68:	mov	x2, x8
  438b6c:	ldr	w1, [sp, #108]
  438b70:	ldr	w0, [sp, #104]
  438b74:	bl	40b020 <log_object_internal@plt>
  438b78:	ldr	w0, [sp, #88]
  438b7c:	add	w0, w0, #0x1
  438b80:	str	w0, [sp, #88]
  438b84:	ldr	w0, [sp, #88]
  438b88:	cmp	w0, #0x3
  438b8c:	b.ls	438a7c <test_key+0x118>  // b.plast
  438b90:	ldr	x0, [sp, #128]
  438b94:	cmp	x0, #0x0
  438b98:	b.ne	438d0c <test_key+0x3a8>  // b.any
  438b9c:	str	wzr, [sp, #92]
  438ba0:	b	438d00 <test_key+0x39c>
  438ba4:	adrp	x0, 456000 <__func__.9297+0x78>
  438ba8:	add	x1, x0, #0x390
  438bac:	ldr	w0, [sp, #92]
  438bb0:	lsl	x0, x0, #3
  438bb4:	add	x0, x1, x0
  438bb8:	ldr	w0, [x0]
  438bbc:	str	w0, [sp, #88]
  438bc0:	b	438cd0 <test_key+0x36c>
  438bc4:	ldr	w0, [sp, #88]
  438bc8:	lsr	w0, w0, #6
  438bcc:	mov	w0, w0
  438bd0:	lsl	x0, x0, #3
  438bd4:	ldr	x1, [sp, #56]
  438bd8:	add	x0, x1, x0
  438bdc:	ldr	x1, [x0]
  438be0:	ldr	w0, [sp, #88]
  438be4:	and	w0, w0, #0x3f
  438be8:	lsr	x0, x1, x0
  438bec:	and	x0, x0, #0x1
  438bf0:	cmp	x0, #0x0
  438bf4:	b.eq	438cc4 <test_key+0x360>  // b.none
  438bf8:	str	xzr, [sp, #120]
  438bfc:	ldr	x0, [sp, #72]
  438c00:	str	x0, [sp, #136]
  438c04:	mov	w0, #0x7                   	// #7
  438c08:	str	w0, [sp, #96]
  438c0c:	str	wzr, [sp, #100]
  438c10:	ldr	x0, [sp, #136]
  438c14:	cmp	x0, #0x0
  438c18:	b.eq	438c54 <test_key+0x2f0>  // b.none
  438c1c:	mov	w0, #0x1                   	// #1
  438c20:	bl	40be30 <log_get_max_level_realm@plt>
  438c24:	mov	w1, w0
  438c28:	ldr	w0, [sp, #96]
  438c2c:	cmp	w0, w1
  438c30:	cset	w0, le
  438c34:	and	w0, w0, #0xff
  438c38:	and	x0, x0, #0xff
  438c3c:	cmp	x0, #0x0
  438c40:	b.eq	438c54 <test_key+0x2f0>  // b.none
  438c44:	add	x0, sp, #0x78
  438c48:	mov	x1, x0
  438c4c:	ldr	x0, [sp, #136]
  438c50:	bl	40aba0 <sd_device_get_sysname@plt>
  438c54:	adrp	x0, 456000 <__func__.9297+0x78>
  438c58:	add	x2, x0, #0x3ab
  438c5c:	ldr	x0, [sp, #120]
  438c60:	cmp	x0, #0x0
  438c64:	b.eq	438c74 <test_key+0x310>  // b.none
  438c68:	adrp	x0, 456000 <__func__.9297+0x78>
  438c6c:	add	x0, x0, #0x488
  438c70:	b	438c78 <test_key+0x314>
  438c74:	mov	x0, #0x0                   	// #0
  438c78:	ldr	x3, [sp, #120]
  438c7c:	ldr	w1, [sp, #88]
  438c80:	str	w1, [sp, #16]
  438c84:	adrp	x1, 456000 <__func__.9297+0x78>
  438c88:	add	x1, x1, #0x610
  438c8c:	str	x1, [sp, #8]
  438c90:	str	xzr, [sp]
  438c94:	mov	x7, #0x0                   	// #0
  438c98:	mov	x6, x3
  438c9c:	mov	x5, x0
  438ca0:	adrp	x0, 456000 <__func__.9297+0x78>
  438ca4:	add	x4, x0, #0x758
  438ca8:	mov	w3, #0x114                 	// #276
  438cac:	ldr	w1, [sp, #100]
  438cb0:	ldr	w0, [sp, #96]
  438cb4:	bl	40b020 <log_object_internal@plt>
  438cb8:	mov	x0, #0x1                   	// #1
  438cbc:	str	x0, [sp, #128]
  438cc0:	b	438cf4 <test_key+0x390>
  438cc4:	ldr	w0, [sp, #88]
  438cc8:	add	w0, w0, #0x1
  438ccc:	str	w0, [sp, #88]
  438cd0:	adrp	x0, 456000 <__func__.9297+0x78>
  438cd4:	add	x1, x0, #0x390
  438cd8:	ldr	w0, [sp, #92]
  438cdc:	lsl	x0, x0, #3
  438ce0:	add	x0, x1, x0
  438ce4:	ldr	w0, [x0, #4]
  438ce8:	ldr	w1, [sp, #88]
  438cec:	cmp	w1, w0
  438cf0:	b.cc	438bc4 <test_key+0x260>  // b.lo, b.ul, b.last
  438cf4:	ldr	w0, [sp, #92]
  438cf8:	add	w0, w0, #0x1
  438cfc:	str	w0, [sp, #92]
  438d00:	ldr	w0, [sp, #92]
  438d04:	cmp	w0, #0x1
  438d08:	b.ls	438ba4 <test_key+0x240>  // b.plast
  438d0c:	ldr	x0, [sp, #128]
  438d10:	cmp	x0, #0x0
  438d14:	b.eq	438d3c <test_key+0x3d8>  // b.none
  438d18:	adrp	x0, 456000 <__func__.9297+0x78>
  438d1c:	add	x3, x0, #0x518
  438d20:	adrp	x0, 456000 <__func__.9297+0x78>
  438d24:	add	x2, x0, #0x638
  438d28:	ldrb	w1, [sp, #55]
  438d2c:	ldr	x0, [sp, #72]
  438d30:	bl	436504 <udev_builtin_add_property>
  438d34:	mov	w0, #0x1                   	// #1
  438d38:	strb	w0, [sp, #87]
  438d3c:	mov	x0, #0xfffffffe            	// #4294967294
  438d40:	str	x0, [sp, #144]
  438d44:	ldr	x0, [sp, #56]
  438d48:	ldr	x0, [x0]
  438d4c:	mvn	x1, x0
  438d50:	ldr	x0, [sp, #144]
  438d54:	and	x0, x1, x0
  438d58:	cmp	x0, #0x0
  438d5c:	b.ne	438d84 <test_key+0x420>  // b.any
  438d60:	adrp	x0, 456000 <__func__.9297+0x78>
  438d64:	add	x3, x0, #0x518
  438d68:	adrp	x0, 456000 <__func__.9297+0x78>
  438d6c:	add	x2, x0, #0x648
  438d70:	ldrb	w1, [sp, #55]
  438d74:	ldr	x0, [sp, #72]
  438d78:	bl	436504 <udev_builtin_add_property>
  438d7c:	mov	w0, #0x1                   	// #1
  438d80:	strb	w0, [sp, #87]
  438d84:	ldrb	w0, [sp, #87]
  438d88:	mov	w1, w0
  438d8c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  438d90:	ldr	x0, [x0, #4032]
  438d94:	ldr	x2, [sp, #168]
  438d98:	ldr	x0, [x0]
  438d9c:	eor	x0, x2, x0
  438da0:	cmp	x0, #0x0
  438da4:	b.eq	438dac <test_key+0x448>  // b.none
  438da8:	bl	40b280 <__stack_chk_fail@plt>
  438dac:	mov	w0, w1
  438db0:	ldp	x29, x30, [sp, #32]
  438db4:	add	sp, sp, #0xb0
  438db8:	ret

0000000000438dbc <builtin_input_id>:
  438dbc:	stp	x29, x30, [sp, #-224]!
  438dc0:	mov	x29, sp
  438dc4:	str	x0, [sp, #40]
  438dc8:	str	w1, [sp, #36]
  438dcc:	str	x2, [sp, #24]
  438dd0:	strb	w3, [sp, #35]
  438dd4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  438dd8:	ldr	x0, [x0, #4032]
  438ddc:	ldr	x1, [x0]
  438de0:	str	x1, [sp, #216]
  438de4:	mov	x1, #0x0                   	// #0
  438de8:	ldr	x0, [sp, #40]
  438dec:	cmp	x0, #0x0
  438df0:	cset	w0, eq  // eq = none
  438df4:	and	w0, w0, #0xff
  438df8:	and	x0, x0, #0xff
  438dfc:	cmp	x0, #0x0
  438e00:	b.eq	438e2c <builtin_input_id+0x70>  // b.none
  438e04:	adrp	x0, 456000 <__func__.9297+0x78>
  438e08:	add	x1, x0, #0x3ab
  438e0c:	adrp	x0, 456000 <__func__.9297+0x78>
  438e10:	add	x4, x0, #0x768
  438e14:	mov	w3, #0x137                 	// #311
  438e18:	mov	x2, x1
  438e1c:	adrp	x0, 456000 <__func__.9297+0x78>
  438e20:	add	x1, x0, #0x660
  438e24:	mov	w0, #0x1                   	// #1
  438e28:	bl	40abb0 <log_assert_failed_realm@plt>
  438e2c:	ldr	x0, [sp, #40]
  438e30:	str	x0, [sp, #64]
  438e34:	b	438e90 <builtin_input_id+0xd4>
  438e38:	ldr	x3, [sp, #64]
  438e3c:	add	x0, sp, #0x50
  438e40:	mov	x2, x0
  438e44:	adrp	x0, 456000 <__func__.9297+0x78>
  438e48:	add	x1, x0, #0x668
  438e4c:	mov	x0, x3
  438e50:	bl	40b870 <sd_device_get_sysattr_value@plt>
  438e54:	cmp	w0, #0x0
  438e58:	b.ge	438ea0 <builtin_input_id+0xe4>  // b.tcont
  438e5c:	ldr	x4, [sp, #64]
  438e60:	add	x0, sp, #0x40
  438e64:	mov	x3, x0
  438e68:	mov	x2, #0x0                   	// #0
  438e6c:	adrp	x0, 456000 <__func__.9297+0x78>
  438e70:	add	x1, x0, #0x678
  438e74:	mov	x0, x4
  438e78:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  438e7c:	cmp	w0, #0x0
  438e80:	b.lt	438e88 <builtin_input_id+0xcc>  // b.tstop
  438e84:	b	438e90 <builtin_input_id+0xd4>
  438e88:	str	xzr, [sp, #64]
  438e8c:	b	438ea4 <builtin_input_id+0xe8>
  438e90:	ldr	x0, [sp, #64]
  438e94:	cmp	x0, #0x0
  438e98:	b.ne	438e38 <builtin_input_id+0x7c>  // b.any
  438e9c:	b	438ea4 <builtin_input_id+0xe8>
  438ea0:	nop
  438ea4:	ldr	x0, [sp, #64]
  438ea8:	cmp	x0, #0x0
  438eac:	b.eq	439078 <builtin_input_id+0x2bc>  // b.none
  438eb0:	adrp	x0, 456000 <__func__.9297+0x78>
  438eb4:	add	x3, x0, #0x518
  438eb8:	adrp	x0, 456000 <__func__.9297+0x78>
  438ebc:	add	x2, x0, #0x680
  438ec0:	ldrb	w1, [sp, #35]
  438ec4:	ldr	x0, [sp, #40]
  438ec8:	bl	436504 <udev_builtin_add_property>
  438ecc:	ldr	x5, [sp, #64]
  438ed0:	add	x0, sp, #0x58
  438ed4:	ldrb	w4, [sp, #35]
  438ed8:	mov	x3, #0x8                   	// #8
  438edc:	mov	x2, x0
  438ee0:	adrp	x0, 456000 <__func__.9297+0x78>
  438ee4:	add	x1, x0, #0x668
  438ee8:	mov	x0, x5
  438eec:	bl	437a34 <get_cap_mask>
  438ef0:	ldr	x5, [sp, #64]
  438ef4:	add	x0, sp, #0x60
  438ef8:	ldrb	w4, [sp, #35]
  438efc:	mov	x3, #0x8                   	// #8
  438f00:	mov	x2, x0
  438f04:	adrp	x0, 456000 <__func__.9297+0x78>
  438f08:	add	x1, x0, #0x690
  438f0c:	mov	x0, x5
  438f10:	bl	437a34 <get_cap_mask>
  438f14:	ldr	x5, [sp, #64]
  438f18:	add	x0, sp, #0x68
  438f1c:	ldrb	w4, [sp, #35]
  438f20:	mov	x3, #0x8                   	// #8
  438f24:	mov	x2, x0
  438f28:	adrp	x0, 456000 <__func__.9297+0x78>
  438f2c:	add	x1, x0, #0x6a8
  438f30:	mov	x0, x5
  438f34:	bl	437a34 <get_cap_mask>
  438f38:	ldr	x5, [sp, #64]
  438f3c:	add	x0, sp, #0x78
  438f40:	ldrb	w4, [sp, #35]
  438f44:	mov	x3, #0x60                  	// #96
  438f48:	mov	x2, x0
  438f4c:	adrp	x0, 456000 <__func__.9297+0x78>
  438f50:	add	x1, x0, #0x6c0
  438f54:	mov	x0, x5
  438f58:	bl	437a34 <get_cap_mask>
  438f5c:	ldr	x5, [sp, #64]
  438f60:	add	x0, sp, #0x70
  438f64:	ldrb	w4, [sp, #35]
  438f68:	mov	x3, #0x8                   	// #8
  438f6c:	mov	x2, x0
  438f70:	adrp	x0, 456000 <__func__.9297+0x78>
  438f74:	add	x1, x0, #0x6d8
  438f78:	mov	x0, x5
  438f7c:	bl	437a34 <get_cap_mask>
  438f80:	add	x4, sp, #0x70
  438f84:	add	x3, sp, #0x68
  438f88:	add	x2, sp, #0x78
  438f8c:	add	x1, sp, #0x60
  438f90:	add	x0, sp, #0x58
  438f94:	ldrb	w6, [sp, #35]
  438f98:	mov	x5, x4
  438f9c:	mov	x4, x3
  438fa0:	mov	x3, x2
  438fa4:	mov	x2, x1
  438fa8:	mov	x1, x0
  438fac:	ldr	x0, [sp, #40]
  438fb0:	bl	4380d8 <test_pointers>
  438fb4:	strb	w0, [sp, #62]
  438fb8:	add	x1, sp, #0x78
  438fbc:	add	x0, sp, #0x58
  438fc0:	ldrb	w3, [sp, #35]
  438fc4:	mov	x2, x1
  438fc8:	mov	x1, x0
  438fcc:	ldr	x0, [sp, #40]
  438fd0:	bl	438964 <test_key>
  438fd4:	strb	w0, [sp, #63]
  438fd8:	ldrb	w0, [sp, #62]
  438fdc:	eor	w0, w0, #0x1
  438fe0:	and	w0, w0, #0xff
  438fe4:	cmp	w0, #0x0
  438fe8:	b.eq	43904c <builtin_input_id+0x290>  // b.none
  438fec:	ldrb	w0, [sp, #63]
  438ff0:	eor	w0, w0, #0x1
  438ff4:	and	w0, w0, #0xff
  438ff8:	cmp	w0, #0x0
  438ffc:	b.eq	43904c <builtin_input_id+0x290>  // b.none
  439000:	ldr	x0, [sp, #88]
  439004:	and	x0, x0, #0x4
  439008:	cmp	x0, #0x0
  43900c:	b.eq	43904c <builtin_input_id+0x290>  // b.none
  439010:	ldr	x0, [sp, #104]
  439014:	and	x0, x0, #0x100
  439018:	cmp	x0, #0x0
  43901c:	b.ne	439030 <builtin_input_id+0x274>  // b.any
  439020:	ldr	x0, [sp, #104]
  439024:	and	x0, x0, #0x40
  439028:	cmp	x0, #0x0
  43902c:	b.eq	43904c <builtin_input_id+0x290>  // b.none
  439030:	adrp	x0, 456000 <__func__.9297+0x78>
  439034:	add	x3, x0, #0x518
  439038:	adrp	x0, 456000 <__func__.9297+0x78>
  43903c:	add	x2, x0, #0x638
  439040:	ldrb	w1, [sp, #35]
  439044:	ldr	x0, [sp, #40]
  439048:	bl	436504 <udev_builtin_add_property>
  43904c:	ldr	x0, [sp, #88]
  439050:	and	x0, x0, #0x20
  439054:	cmp	x0, #0x0
  439058:	b.eq	439078 <builtin_input_id+0x2bc>  // b.none
  43905c:	adrp	x0, 456000 <__func__.9297+0x78>
  439060:	add	x3, x0, #0x518
  439064:	adrp	x0, 456000 <__func__.9297+0x78>
  439068:	add	x2, x0, #0x6e8
  43906c:	ldrb	w1, [sp, #35]
  439070:	ldr	x0, [sp, #40]
  439074:	bl	436504 <udev_builtin_add_property>
  439078:	add	x0, sp, #0x50
  43907c:	mov	x1, x0
  439080:	ldr	x0, [sp, #40]
  439084:	bl	40a6f0 <sd_device_get_devname@plt>
  439088:	cmp	w0, #0x0
  43908c:	b.lt	4390d8 <builtin_input_id+0x31c>  // b.tstop
  439090:	add	x0, sp, #0x48
  439094:	mov	x1, x0
  439098:	ldr	x0, [sp, #40]
  43909c:	bl	40aba0 <sd_device_get_sysname@plt>
  4390a0:	cmp	w0, #0x0
  4390a4:	b.lt	4390d8 <builtin_input_id+0x31c>  // b.tstop
  4390a8:	ldr	x2, [sp, #72]
  4390ac:	adrp	x0, 456000 <__func__.9297+0x78>
  4390b0:	add	x1, x0, #0x6f8
  4390b4:	mov	x0, x2
  4390b8:	bl	4377a8 <startswith>
  4390bc:	cmp	x0, #0x0
  4390c0:	b.eq	4390d8 <builtin_input_id+0x31c>  // b.none
  4390c4:	ldr	x0, [sp, #80]
  4390c8:	ldrb	w2, [sp, #35]
  4390cc:	mov	x1, x0
  4390d0:	ldr	x0, [sp, #40]
  4390d4:	bl	437828 <extract_info>
  4390d8:	mov	w0, #0x0                   	// #0
  4390dc:	mov	w1, w0
  4390e0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4390e4:	ldr	x0, [x0, #4032]
  4390e8:	ldr	x2, [sp, #216]
  4390ec:	ldr	x0, [x0]
  4390f0:	eor	x0, x2, x0
  4390f4:	cmp	x0, #0x0
  4390f8:	b.eq	439100 <builtin_input_id+0x344>  // b.none
  4390fc:	bl	40b280 <__stack_chk_fail@plt>
  439100:	mov	w0, w1
  439104:	ldp	x29, x30, [sp], #224
  439108:	ret

000000000043910c <closep>:
  43910c:	stp	x29, x30, [sp, #-32]!
  439110:	mov	x29, sp
  439114:	str	x0, [sp, #24]
  439118:	ldr	x0, [sp, #24]
  43911c:	ldr	w0, [x0]
  439120:	bl	40aad0 <safe_close@plt>
  439124:	nop
  439128:	ldp	x29, x30, [sp], #32
  43912c:	ret

0000000000439130 <startswith>:
  439130:	stp	x29, x30, [sp, #-48]!
  439134:	mov	x29, sp
  439138:	str	x0, [sp, #24]
  43913c:	str	x1, [sp, #16]
  439140:	ldr	x0, [sp, #16]
  439144:	bl	40bd10 <strlen@plt>
  439148:	str	x0, [sp, #40]
  43914c:	ldr	x2, [sp, #40]
  439150:	ldr	x1, [sp, #16]
  439154:	ldr	x0, [sp, #24]
  439158:	bl	40ae00 <strncmp@plt>
  43915c:	cmp	w0, #0x0
  439160:	b.ne	439174 <startswith+0x44>  // b.any
  439164:	ldr	x1, [sp, #24]
  439168:	ldr	x0, [sp, #40]
  43916c:	add	x0, x1, x0
  439170:	b	439178 <startswith+0x48>
  439174:	mov	x0, #0x0                   	// #0
  439178:	ldp	x29, x30, [sp], #48
  43917c:	ret

0000000000439180 <hash_key_name>:
  439180:	str	x19, [sp, #-16]!
  439184:	mov	w19, w1
  439188:	cmp	w19, #0x13
  43918c:	b.hi	439218 <hash_key_name+0x98>  // b.pmore
  439190:	cmp	w19, #0x12
  439194:	b.cs	439238 <hash_key_name+0xb8>  // b.hs, b.nlast
  439198:	cmp	w19, #0x11
  43919c:	b.hi	439218 <hash_key_name+0x98>  // b.pmore
  4391a0:	cmp	w19, #0xf
  4391a4:	b.cs	439258 <hash_key_name+0xd8>  // b.hs, b.nlast
  4391a8:	cmp	w19, #0xe
  4391ac:	b.hi	439218 <hash_key_name+0x98>  // b.pmore
  4391b0:	cmp	w19, #0xc
  4391b4:	b.cs	439278 <hash_key_name+0xf8>  // b.hs, b.nlast
  4391b8:	cmp	w19, #0xb
  4391bc:	b.hi	439218 <hash_key_name+0x98>  // b.pmore
  4391c0:	cmp	w19, #0xa
  4391c4:	b.cs	439298 <hash_key_name+0x118>  // b.hs, b.nlast
  4391c8:	cmp	w19, #0x9
  4391cc:	b.hi	439218 <hash_key_name+0x98>  // b.pmore
  4391d0:	cmp	w19, #0x7
  4391d4:	b.cs	4392b8 <hash_key_name+0x138>  // b.hs, b.nlast
  4391d8:	cmp	w19, #0x6
  4391dc:	b.eq	4392d8 <hash_key_name+0x158>  // b.none
  4391e0:	cmp	w19, #0x6
  4391e4:	b.hi	439218 <hash_key_name+0x98>  // b.pmore
  4391e8:	cmp	w19, #0x5
  4391ec:	b.eq	4392f8 <hash_key_name+0x178>  // b.none
  4391f0:	cmp	w19, #0x5
  4391f4:	b.hi	439218 <hash_key_name+0x98>  // b.pmore
  4391f8:	cmp	w19, #0x4
  4391fc:	b.hi	439218 <hash_key_name+0x98>  // b.pmore
  439200:	cmp	w19, #0x3
  439204:	b.cs	439318 <hash_key_name+0x198>  // b.hs, b.nlast
  439208:	cmp	w19, #0x1
  43920c:	b.eq	439358 <hash_key_name+0x1d8>  // b.none
  439210:	cmp	w19, #0x2
  439214:	b.eq	439338 <hash_key_name+0x1b8>  // b.none
  439218:	add	x2, x0, #0x13
  43921c:	ldrb	w2, [x2]
  439220:	mov	w3, w2
  439224:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439228:	add	x2, x2, #0x6f8
  43922c:	sxtw	x3, w3
  439230:	ldrh	w2, [x2, x3, lsl #1]
  439234:	add	w19, w19, w2
  439238:	add	x2, x0, #0x11
  43923c:	ldrb	w2, [x2]
  439240:	add	w3, w2, #0x8
  439244:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439248:	add	x2, x2, #0x6f8
  43924c:	sxtw	x3, w3
  439250:	ldrh	w2, [x2, x3, lsl #1]
  439254:	add	w19, w19, w2
  439258:	add	x2, x0, #0xe
  43925c:	ldrb	w2, [x2]
  439260:	mov	w3, w2
  439264:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439268:	add	x2, x2, #0x6f8
  43926c:	sxtw	x3, w3
  439270:	ldrh	w2, [x2, x3, lsl #1]
  439274:	add	w19, w19, w2
  439278:	add	x2, x0, #0xb
  43927c:	ldrb	w2, [x2]
  439280:	mov	w3, w2
  439284:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439288:	add	x2, x2, #0x6f8
  43928c:	sxtw	x3, w3
  439290:	ldrh	w2, [x2, x3, lsl #1]
  439294:	add	w19, w19, w2
  439298:	add	x2, x0, #0x9
  43929c:	ldrb	w2, [x2]
  4392a0:	add	w3, w2, #0x8
  4392a4:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  4392a8:	add	x2, x2, #0x6f8
  4392ac:	sxtw	x3, w3
  4392b0:	ldrh	w2, [x2, x3, lsl #1]
  4392b4:	add	w19, w19, w2
  4392b8:	add	x2, x0, #0x6
  4392bc:	ldrb	w2, [x2]
  4392c0:	mov	w3, w2
  4392c4:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  4392c8:	add	x2, x2, #0x6f8
  4392cc:	sxtw	x3, w3
  4392d0:	ldrh	w2, [x2, x3, lsl #1]
  4392d4:	add	w19, w19, w2
  4392d8:	add	x2, x0, #0x5
  4392dc:	ldrb	w2, [x2]
  4392e0:	add	w3, w2, #0x1
  4392e4:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  4392e8:	add	x2, x2, #0x6f8
  4392ec:	sxtw	x3, w3
  4392f0:	ldrh	w2, [x2, x3, lsl #1]
  4392f4:	add	w19, w19, w2
  4392f8:	add	x2, x0, #0x4
  4392fc:	ldrb	w2, [x2]
  439300:	mov	w3, w2
  439304:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439308:	add	x2, x2, #0x6f8
  43930c:	sxtw	x3, w3
  439310:	ldrh	w2, [x2, x3, lsl #1]
  439314:	add	w19, w19, w2
  439318:	add	x2, x0, #0x2
  43931c:	ldrb	w2, [x2]
  439320:	add	w3, w2, #0x1
  439324:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439328:	add	x2, x2, #0x6f8
  43932c:	sxtw	x3, w3
  439330:	ldrh	w2, [x2, x3, lsl #1]
  439334:	add	w19, w19, w2
  439338:	add	x2, x0, #0x1
  43933c:	ldrb	w2, [x2]
  439340:	mov	w3, w2
  439344:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439348:	add	x2, x2, #0x6f8
  43934c:	sxtw	x3, w3
  439350:	ldrh	w2, [x2, x3, lsl #1]
  439354:	add	w19, w19, w2
  439358:	ldrb	w2, [x0]
  43935c:	mov	w3, w2
  439360:	adrp	x2, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439364:	add	x2, x2, #0x6f8
  439368:	sxtw	x3, w3
  43936c:	ldrh	w2, [x2, x3, lsl #1]
  439370:	add	w19, w19, w2
  439374:	nop
  439378:	sub	x1, x1, #0x1
  43937c:	add	x0, x0, x1
  439380:	ldrb	w0, [x0]
  439384:	mov	w1, w0
  439388:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43938c:	add	x0, x0, #0x6f8
  439390:	sxtw	x1, w1
  439394:	ldrh	w0, [x0, x1, lsl #1]
  439398:	add	w0, w19, w0
  43939c:	ldr	x19, [sp], #16
  4393a0:	ret

00000000004393a4 <keyboard_lookup_key>:
  4393a4:	stp	x29, x30, [sp, #-48]!
  4393a8:	mov	x29, sp
  4393ac:	stp	x19, x20, [sp, #16]
  4393b0:	str	x21, [sp, #32]
  4393b4:	mov	x20, x0
  4393b8:	mov	x0, x1
  4393bc:	cmp	x0, #0x1c
  4393c0:	b.hi	439444 <keyboard_lookup_key+0xa0>  // b.pmore
  4393c4:	cmp	x0, #0x0
  4393c8:	b.eq	439444 <keyboard_lookup_key+0xa0>  // b.none
  4393cc:	mov	x1, x0
  4393d0:	mov	x0, x20
  4393d4:	bl	439180 <hash_key_name>
  4393d8:	mov	w21, w0
  4393dc:	mov	w0, #0x16ea                	// #5866
  4393e0:	cmp	w21, w0
  4393e4:	b.hi	439444 <keyboard_lookup_key+0xa0>  // b.pmore
  4393e8:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  4393ec:	add	x1, x0, #0x608
  4393f0:	mov	w0, w21
  4393f4:	lsl	x0, x0, #4
  4393f8:	add	x0, x1, x0
  4393fc:	ldr	x19, [x0]
  439400:	cmp	x19, #0x0
  439404:	b.eq	439444 <keyboard_lookup_key+0xa0>  // b.none
  439408:	ldrb	w1, [x20]
  43940c:	ldrb	w0, [x19]
  439410:	cmp	w1, w0
  439414:	b.ne	439444 <keyboard_lookup_key+0xa0>  // b.any
  439418:	add	x0, x20, #0x1
  43941c:	add	x1, x19, #0x1
  439420:	bl	40b710 <strcmp@plt>
  439424:	cmp	w0, #0x0
  439428:	b.ne	439444 <keyboard_lookup_key+0xa0>  // b.any
  43942c:	mov	w0, w21
  439430:	lsl	x1, x0, #4
  439434:	adrp	x0, 474000 <__FRAME_END__+0x10c9c>
  439438:	add	x0, x0, #0x608
  43943c:	add	x0, x1, x0
  439440:	b	439448 <keyboard_lookup_key+0xa4>
  439444:	mov	x0, #0x0                   	// #0
  439448:	ldp	x19, x20, [sp, #16]
  43944c:	ldr	x21, [sp, #32]
  439450:	ldp	x29, x30, [sp], #48
  439454:	ret

0000000000439458 <install_force_release>:
  439458:	mov	x12, #0x10d0                	// #4304
  43945c:	sub	sp, sp, x12
  439460:	stp	x29, x30, [sp, #32]
  439464:	add	x29, sp, #0x20
  439468:	str	x0, [sp, #72]
  43946c:	str	x1, [sp, #64]
  439470:	str	w2, [sp, #60]
  439474:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  439478:	ldr	x0, [x0, #4032]
  43947c:	ldr	x1, [x0]
  439480:	str	x1, [sp, #4296]
  439484:	mov	x1, #0x0                   	// #0
  439488:	ldr	x0, [sp, #72]
  43948c:	cmp	x0, #0x0
  439490:	cset	w0, eq  // eq = none
  439494:	and	w0, w0, #0xff
  439498:	and	x0, x0, #0xff
  43949c:	cmp	x0, #0x0
  4394a0:	b.eq	4394cc <install_force_release+0x74>  // b.none
  4394a4:	adrp	x0, 456000 <__func__.9297+0x78>
  4394a8:	add	x1, x0, #0x783
  4394ac:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  4394b0:	add	x4, x0, #0x908
  4394b4:	mov	w3, #0x1d                  	// #29
  4394b8:	mov	x2, x1
  4394bc:	adrp	x0, 456000 <__func__.9297+0x78>
  4394c0:	add	x1, x0, #0x7a8
  4394c4:	mov	w0, #0x1                   	// #1
  4394c8:	bl	40abb0 <log_assert_failed_realm@plt>
  4394cc:	ldr	x0, [sp, #64]
  4394d0:	cmp	x0, #0x0
  4394d4:	cset	w0, eq  // eq = none
  4394d8:	and	w0, w0, #0xff
  4394dc:	and	x0, x0, #0xff
  4394e0:	cmp	x0, #0x0
  4394e4:	b.eq	439510 <install_force_release+0xb8>  // b.none
  4394e8:	adrp	x0, 456000 <__func__.9297+0x78>
  4394ec:	add	x1, x0, #0x783
  4394f0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  4394f4:	add	x4, x0, #0x908
  4394f8:	mov	w3, #0x1e                  	// #30
  4394fc:	mov	x2, x1
  439500:	adrp	x0, 456000 <__func__.9297+0x78>
  439504:	add	x1, x0, #0x7b0
  439508:	mov	w0, #0x1                   	// #1
  43950c:	bl	40abb0 <log_assert_failed_realm@plt>
  439510:	add	x0, sp, #0x80
  439514:	mov	x3, x0
  439518:	mov	x2, #0x0                   	// #0
  43951c:	adrp	x0, 456000 <__func__.9297+0x78>
  439520:	add	x1, x0, #0x7b8
  439524:	ldr	x0, [sp, #72]
  439528:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43952c:	str	w0, [sp, #92]
  439530:	ldr	w0, [sp, #92]
  439534:	cmp	w0, #0x0
  439538:	b.ge	4395fc <install_force_release+0x1a4>  // b.tcont
  43953c:	str	xzr, [sp, #152]
  439540:	ldr	x0, [sp, #72]
  439544:	str	x0, [sp, #192]
  439548:	mov	w0, #0x3                   	// #3
  43954c:	str	w0, [sp, #120]
  439550:	ldr	w0, [sp, #92]
  439554:	str	w0, [sp, #124]
  439558:	ldr	x0, [sp, #192]
  43955c:	cmp	x0, #0x0
  439560:	b.eq	43959c <install_force_release+0x144>  // b.none
  439564:	mov	w0, #0x1                   	// #1
  439568:	bl	40be30 <log_get_max_level_realm@plt>
  43956c:	mov	w1, w0
  439570:	ldr	w0, [sp, #120]
  439574:	cmp	w0, w1
  439578:	cset	w0, le
  43957c:	and	w0, w0, #0xff
  439580:	and	x0, x0, #0xff
  439584:	cmp	x0, #0x0
  439588:	b.eq	43959c <install_force_release+0x144>  // b.none
  43958c:	add	x0, sp, #0x98
  439590:	mov	x1, x0
  439594:	ldr	x0, [sp, #192]
  439598:	bl	40aba0 <sd_device_get_sysname@plt>
  43959c:	adrp	x0, 456000 <__func__.9297+0x78>
  4395a0:	add	x2, x0, #0x783
  4395a4:	ldr	x0, [sp, #152]
  4395a8:	cmp	x0, #0x0
  4395ac:	b.eq	4395bc <install_force_release+0x164>  // b.none
  4395b0:	adrp	x0, 456000 <__func__.9297+0x78>
  4395b4:	add	x0, x0, #0x7c0
  4395b8:	b	4395c0 <install_force_release+0x168>
  4395bc:	mov	x0, #0x0                   	// #0
  4395c0:	ldr	x3, [sp, #152]
  4395c4:	adrp	x1, 456000 <__func__.9297+0x78>
  4395c8:	add	x1, x1, #0x7c8
  4395cc:	str	x1, [sp, #8]
  4395d0:	str	xzr, [sp]
  4395d4:	mov	x7, #0x0                   	// #0
  4395d8:	mov	x6, x3
  4395dc:	mov	x5, x0
  4395e0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  4395e4:	add	x4, x0, #0x920
  4395e8:	mov	w3, #0x22                  	// #34
  4395ec:	ldr	w1, [sp, #124]
  4395f0:	ldr	w0, [sp, #120]
  4395f4:	bl	40b020 <log_object_internal@plt>
  4395f8:	b	439918 <install_force_release+0x4c0>
  4395fc:	ldr	x3, [sp, #128]
  439600:	add	x0, sp, #0x88
  439604:	mov	x2, x0
  439608:	adrp	x0, 456000 <__func__.9297+0x78>
  43960c:	add	x1, x0, #0x7e8
  439610:	mov	x0, x3
  439614:	bl	40b870 <sd_device_get_sysattr_value@plt>
  439618:	str	w0, [sp, #92]
  43961c:	ldr	w0, [sp, #92]
  439620:	cmp	w0, #0x0
  439624:	b.ge	4396e8 <install_force_release+0x290>  // b.tcont
  439628:	str	xzr, [sp, #152]
  43962c:	ldr	x0, [sp, #128]
  439630:	str	x0, [sp, #184]
  439634:	mov	w0, #0x3                   	// #3
  439638:	str	w0, [sp, #112]
  43963c:	ldr	w0, [sp, #92]
  439640:	str	w0, [sp, #116]
  439644:	ldr	x0, [sp, #184]
  439648:	cmp	x0, #0x0
  43964c:	b.eq	439688 <install_force_release+0x230>  // b.none
  439650:	mov	w0, #0x1                   	// #1
  439654:	bl	40be30 <log_get_max_level_realm@plt>
  439658:	mov	w1, w0
  43965c:	ldr	w0, [sp, #112]
  439660:	cmp	w0, w1
  439664:	cset	w0, le
  439668:	and	w0, w0, #0xff
  43966c:	and	x0, x0, #0xff
  439670:	cmp	x0, #0x0
  439674:	b.eq	439688 <install_force_release+0x230>  // b.none
  439678:	add	x0, sp, #0x98
  43967c:	mov	x1, x0
  439680:	ldr	x0, [sp, #184]
  439684:	bl	40aba0 <sd_device_get_sysname@plt>
  439688:	adrp	x0, 456000 <__func__.9297+0x78>
  43968c:	add	x2, x0, #0x783
  439690:	ldr	x0, [sp, #152]
  439694:	cmp	x0, #0x0
  439698:	b.eq	4396a8 <install_force_release+0x250>  // b.none
  43969c:	adrp	x0, 456000 <__func__.9297+0x78>
  4396a0:	add	x0, x0, #0x7c0
  4396a4:	b	4396ac <install_force_release+0x254>
  4396a8:	mov	x0, #0x0                   	// #0
  4396ac:	ldr	x3, [sp, #152]
  4396b0:	adrp	x1, 456000 <__func__.9297+0x78>
  4396b4:	add	x1, x1, #0x7f8
  4396b8:	str	x1, [sp, #8]
  4396bc:	str	xzr, [sp]
  4396c0:	mov	x7, #0x0                   	// #0
  4396c4:	mov	x6, x3
  4396c8:	mov	x5, x0
  4396cc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  4396d0:	add	x4, x0, #0x920
  4396d4:	mov	w3, #0x26                  	// #38
  4396d8:	ldr	w1, [sp, #116]
  4396dc:	ldr	w0, [sp, #112]
  4396e0:	bl	40b020 <log_object_internal@plt>
  4396e4:	b	439918 <install_force_release+0x4c0>
  4396e8:	add	x0, sp, #0xc8
  4396ec:	str	x0, [sp, #144]
  4396f0:	mov	x0, #0x1000                	// #4096
  4396f4:	str	x0, [sp, #160]
  4396f8:	ldr	x1, [sp, #136]
  4396fc:	add	x0, sp, #0x90
  439700:	mov	x2, x1
  439704:	ldr	x1, [sp, #160]
  439708:	bl	40a5d0 <strpcpy@plt>
  43970c:	str	x0, [sp, #160]
  439710:	str	wzr, [sp, #88]
  439714:	b	439758 <install_force_release+0x300>
  439718:	ldr	w0, [sp, #88]
  43971c:	lsl	x0, x0, #2
  439720:	ldr	x1, [sp, #64]
  439724:	add	x0, x1, x0
  439728:	ldr	w0, [x0]
  43972c:	add	x4, sp, #0x90
  439730:	mov	w3, w0
  439734:	adrp	x0, 456000 <__func__.9297+0x78>
  439738:	add	x2, x0, #0x828
  43973c:	ldr	x1, [sp, #160]
  439740:	mov	x0, x4
  439744:	bl	40a3e0 <strpcpyf@plt>
  439748:	str	x0, [sp, #160]
  43974c:	ldr	w0, [sp, #88]
  439750:	add	w0, w0, #0x1
  439754:	str	w0, [sp, #88]
  439758:	ldr	w1, [sp, #88]
  43975c:	ldr	w0, [sp, #60]
  439760:	cmp	w1, w0
  439764:	b.cc	439718 <install_force_release+0x2c0>  // b.lo, b.ul, b.last
  439768:	str	xzr, [sp, #152]
  43976c:	ldr	x0, [sp, #128]
  439770:	str	x0, [sp, #168]
  439774:	mov	w0, #0x7                   	// #7
  439778:	str	w0, [sp, #96]
  43977c:	str	wzr, [sp, #100]
  439780:	ldr	x0, [sp, #168]
  439784:	cmp	x0, #0x0
  439788:	b.eq	4397c4 <install_force_release+0x36c>  // b.none
  43978c:	mov	w0, #0x1                   	// #1
  439790:	bl	40be30 <log_get_max_level_realm@plt>
  439794:	mov	w1, w0
  439798:	ldr	w0, [sp, #96]
  43979c:	cmp	w0, w1
  4397a0:	cset	w0, le
  4397a4:	and	w0, w0, #0xff
  4397a8:	and	x0, x0, #0xff
  4397ac:	cmp	x0, #0x0
  4397b0:	b.eq	4397c4 <install_force_release+0x36c>  // b.none
  4397b4:	add	x0, sp, #0x98
  4397b8:	mov	x1, x0
  4397bc:	ldr	x0, [sp, #168]
  4397c0:	bl	40aba0 <sd_device_get_sysname@plt>
  4397c4:	adrp	x0, 456000 <__func__.9297+0x78>
  4397c8:	add	x2, x0, #0x783
  4397cc:	ldr	x0, [sp, #152]
  4397d0:	cmp	x0, #0x0
  4397d4:	b.eq	4397e4 <install_force_release+0x38c>  // b.none
  4397d8:	adrp	x0, 456000 <__func__.9297+0x78>
  4397dc:	add	x0, x0, #0x7c0
  4397e0:	b	4397e8 <install_force_release+0x390>
  4397e4:	mov	x0, #0x0                   	// #0
  4397e8:	ldr	x3, [sp, #152]
  4397ec:	add	x1, sp, #0xc8
  4397f0:	str	x1, [sp, #16]
  4397f4:	adrp	x1, 456000 <__func__.9297+0x78>
  4397f8:	add	x1, x1, #0x830
  4397fc:	str	x1, [sp, #8]
  439800:	str	xzr, [sp]
  439804:	mov	x7, #0x0                   	// #0
  439808:	mov	x6, x3
  43980c:	mov	x5, x0
  439810:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439814:	add	x4, x0, #0x920
  439818:	mov	w3, #0x32                  	// #50
  43981c:	ldr	w1, [sp, #100]
  439820:	ldr	w0, [sp, #96]
  439824:	bl	40b020 <log_object_internal@plt>
  439828:	ldr	x3, [sp, #128]
  43982c:	add	x0, sp, #0xc8
  439830:	mov	x2, x0
  439834:	adrp	x0, 456000 <__func__.9297+0x78>
  439838:	add	x1, x0, #0x7e8
  43983c:	mov	x0, x3
  439840:	bl	40b8b0 <sd_device_set_sysattr_value@plt>
  439844:	str	w0, [sp, #92]
  439848:	ldr	w0, [sp, #92]
  43984c:	cmp	w0, #0x0
  439850:	b.ge	439914 <install_force_release+0x4bc>  // b.tcont
  439854:	str	xzr, [sp, #152]
  439858:	ldr	x0, [sp, #128]
  43985c:	str	x0, [sp, #176]
  439860:	mov	w0, #0x3                   	// #3
  439864:	str	w0, [sp, #104]
  439868:	ldr	w0, [sp, #92]
  43986c:	str	w0, [sp, #108]
  439870:	ldr	x0, [sp, #176]
  439874:	cmp	x0, #0x0
  439878:	b.eq	4398b4 <install_force_release+0x45c>  // b.none
  43987c:	mov	w0, #0x1                   	// #1
  439880:	bl	40be30 <log_get_max_level_realm@plt>
  439884:	mov	w1, w0
  439888:	ldr	w0, [sp, #104]
  43988c:	cmp	w0, w1
  439890:	cset	w0, le
  439894:	and	w0, w0, #0xff
  439898:	and	x0, x0, #0xff
  43989c:	cmp	x0, #0x0
  4398a0:	b.eq	4398b4 <install_force_release+0x45c>  // b.none
  4398a4:	add	x0, sp, #0x98
  4398a8:	mov	x1, x0
  4398ac:	ldr	x0, [sp, #176]
  4398b0:	bl	40aba0 <sd_device_get_sysname@plt>
  4398b4:	adrp	x0, 456000 <__func__.9297+0x78>
  4398b8:	add	x2, x0, #0x783
  4398bc:	ldr	x0, [sp, #152]
  4398c0:	cmp	x0, #0x0
  4398c4:	b.eq	4398d4 <install_force_release+0x47c>  // b.none
  4398c8:	adrp	x0, 456000 <__func__.9297+0x78>
  4398cc:	add	x0, x0, #0x7c0
  4398d0:	b	4398d8 <install_force_release+0x480>
  4398d4:	mov	x0, #0x0                   	// #0
  4398d8:	ldr	x3, [sp, #152]
  4398dc:	adrp	x1, 456000 <__func__.9297+0x78>
  4398e0:	add	x1, x1, #0x860
  4398e4:	str	x1, [sp, #8]
  4398e8:	str	xzr, [sp]
  4398ec:	mov	x7, #0x0                   	// #0
  4398f0:	mov	x6, x3
  4398f4:	mov	x5, x0
  4398f8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  4398fc:	add	x4, x0, #0x920
  439900:	mov	w3, #0x35                  	// #53
  439904:	ldr	w1, [sp, #108]
  439908:	ldr	w0, [sp, #104]
  43990c:	bl	40b020 <log_object_internal@plt>
  439910:	b	439918 <install_force_release+0x4c0>
  439914:	mov	w0, #0x0                   	// #0
  439918:	mov	w1, w0
  43991c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  439920:	ldr	x0, [x0, #4032]
  439924:	ldr	x2, [sp, #4296]
  439928:	ldr	x0, [x0]
  43992c:	eor	x0, x2, x0
  439930:	cmp	x0, #0x0
  439934:	b.eq	43993c <install_force_release+0x4e4>  // b.none
  439938:	bl	40b280 <__stack_chk_fail@plt>
  43993c:	mov	w0, w1
  439940:	ldp	x29, x30, [sp, #32]
  439944:	mov	x12, #0x10d0                	// #4304
  439948:	add	sp, sp, x12
  43994c:	ret

0000000000439950 <map_keycode>:
  439950:	sub	sp, sp, #0xc0
  439954:	stp	x29, x30, [sp, #48]
  439958:	add	x29, sp, #0x30
  43995c:	str	x0, [sp, #88]
  439960:	str	w1, [sp, #84]
  439964:	str	w2, [sp, #80]
  439968:	str	x3, [sp, #72]
  43996c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  439970:	ldr	x0, [x0, #4032]
  439974:	ldr	x1, [x0]
  439978:	str	x1, [sp, #184]
  43997c:	mov	x1, #0x0                   	// #0
  439980:	ldr	x0, [sp, #72]
  439984:	bl	40bd10 <strlen@plt>
  439988:	mov	x1, x0
  43998c:	ldr	x0, [sp, #72]
  439990:	bl	4393a4 <keyboard_lookup_key>
  439994:	str	x0, [sp, #152]
  439998:	ldr	x0, [sp, #152]
  43999c:	cmp	x0, #0x0
  4399a0:	b.eq	4399b4 <map_keycode+0x64>  // b.none
  4399a4:	ldr	x0, [sp, #152]
  4399a8:	ldrh	w0, [x0, #8]
  4399ac:	str	w0, [sp, #100]
  4399b0:	b	439aa8 <map_keycode+0x158>
  4399b4:	add	x0, sp, #0x88
  4399b8:	mov	w2, #0x0                   	// #0
  4399bc:	mov	x1, x0
  4399c0:	ldr	x0, [sp, #72]
  4399c4:	bl	40b630 <strtoul@plt>
  4399c8:	str	w0, [sp, #100]
  4399cc:	ldr	x0, [sp, #136]
  4399d0:	ldrb	w0, [x0]
  4399d4:	cmp	w0, #0x0
  4399d8:	b.eq	439aa8 <map_keycode+0x158>  // b.none
  4399dc:	str	xzr, [sp, #144]
  4399e0:	ldr	x0, [sp, #88]
  4399e4:	str	x0, [sp, #160]
  4399e8:	mov	w0, #0x3                   	// #3
  4399ec:	str	w0, [sp, #104]
  4399f0:	mov	w0, #0x16                  	// #22
  4399f4:	movk	w0, #0x4000, lsl #16
  4399f8:	str	w0, [sp, #108]
  4399fc:	ldr	x0, [sp, #160]
  439a00:	cmp	x0, #0x0
  439a04:	b.eq	439a40 <map_keycode+0xf0>  // b.none
  439a08:	mov	w0, #0x1                   	// #1
  439a0c:	bl	40be30 <log_get_max_level_realm@plt>
  439a10:	mov	w1, w0
  439a14:	ldr	w0, [sp, #104]
  439a18:	cmp	w0, w1
  439a1c:	cset	w0, le
  439a20:	and	w0, w0, #0xff
  439a24:	and	x0, x0, #0xff
  439a28:	cmp	x0, #0x0
  439a2c:	b.eq	439a40 <map_keycode+0xf0>  // b.none
  439a30:	add	x0, sp, #0x90
  439a34:	mov	x1, x0
  439a38:	ldr	x0, [sp, #160]
  439a3c:	bl	40aba0 <sd_device_get_sysname@plt>
  439a40:	adrp	x0, 456000 <__func__.9297+0x78>
  439a44:	add	x2, x0, #0x783
  439a48:	ldr	x0, [sp, #144]
  439a4c:	cmp	x0, #0x0
  439a50:	b.eq	439a60 <map_keycode+0x110>  // b.none
  439a54:	adrp	x0, 456000 <__func__.9297+0x78>
  439a58:	add	x0, x0, #0x7c0
  439a5c:	b	439a64 <map_keycode+0x114>
  439a60:	mov	x0, #0x0                   	// #0
  439a64:	ldr	x3, [sp, #144]
  439a68:	ldr	x1, [sp, #72]
  439a6c:	str	x1, [sp, #16]
  439a70:	adrp	x1, 456000 <__func__.9297+0x78>
  439a74:	add	x1, x1, #0x890
  439a78:	str	x1, [sp, #8]
  439a7c:	str	xzr, [sp]
  439a80:	mov	x7, #0x0                   	// #0
  439a84:	mov	x6, x3
  439a88:	mov	x5, x0
  439a8c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439a90:	add	x4, x0, #0x938
  439a94:	mov	w3, #0x4b                  	// #75
  439a98:	ldr	w1, [sp, #108]
  439a9c:	ldr	w0, [sp, #104]
  439aa0:	bl	40b020 <log_object_internal@plt>
  439aa4:	b	439c90 <map_keycode+0x340>
  439aa8:	ldr	w0, [sp, #80]
  439aac:	str	w0, [sp, #128]
  439ab0:	ldr	w0, [sp, #100]
  439ab4:	str	w0, [sp, #132]
  439ab8:	str	xzr, [sp, #144]
  439abc:	ldr	x0, [sp, #88]
  439ac0:	str	x0, [sp, #168]
  439ac4:	mov	w0, #0x7                   	// #7
  439ac8:	str	w0, [sp, #112]
  439acc:	str	wzr, [sp, #116]
  439ad0:	ldr	x0, [sp, #168]
  439ad4:	cmp	x0, #0x0
  439ad8:	b.eq	439b14 <map_keycode+0x1c4>  // b.none
  439adc:	mov	w0, #0x1                   	// #1
  439ae0:	bl	40be30 <log_get_max_level_realm@plt>
  439ae4:	mov	w1, w0
  439ae8:	ldr	w0, [sp, #112]
  439aec:	cmp	w0, w1
  439af0:	cset	w0, le
  439af4:	and	w0, w0, #0xff
  439af8:	and	x0, x0, #0xff
  439afc:	cmp	x0, #0x0
  439b00:	b.eq	439b14 <map_keycode+0x1c4>  // b.none
  439b04:	add	x0, sp, #0x90
  439b08:	mov	x1, x0
  439b0c:	ldr	x0, [sp, #168]
  439b10:	bl	40aba0 <sd_device_get_sysname@plt>
  439b14:	adrp	x0, 456000 <__func__.9297+0x78>
  439b18:	add	x8, x0, #0x783
  439b1c:	ldr	x0, [sp, #144]
  439b20:	cmp	x0, #0x0
  439b24:	b.eq	439b34 <map_keycode+0x1e4>  // b.none
  439b28:	adrp	x0, 456000 <__func__.9297+0x78>
  439b2c:	add	x0, x0, #0x7c0
  439b30:	b	439b38 <map_keycode+0x1e8>
  439b34:	mov	x0, #0x0                   	// #0
  439b38:	ldr	x5, [sp, #144]
  439b3c:	ldr	w1, [sp, #128]
  439b40:	ldr	w2, [sp, #128]
  439b44:	ldr	w3, [sp, #132]
  439b48:	ldr	w4, [sp, #132]
  439b4c:	str	w4, [sp, #40]
  439b50:	str	w3, [sp, #32]
  439b54:	str	w2, [sp, #24]
  439b58:	str	w1, [sp, #16]
  439b5c:	adrp	x1, 456000 <__func__.9297+0x78>
  439b60:	add	x1, x1, #0x8b8
  439b64:	str	x1, [sp, #8]
  439b68:	str	xzr, [sp]
  439b6c:	mov	x7, #0x0                   	// #0
  439b70:	mov	x6, x5
  439b74:	mov	x5, x0
  439b78:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439b7c:	add	x4, x0, #0x938
  439b80:	mov	w3, #0x51                  	// #81
  439b84:	mov	x2, x8
  439b88:	ldr	w1, [sp, #116]
  439b8c:	ldr	w0, [sp, #112]
  439b90:	bl	40b020 <log_object_internal@plt>
  439b94:	add	x0, sp, #0x80
  439b98:	mov	x2, x0
  439b9c:	mov	x1, #0x4504                	// #17668
  439ba0:	movk	x1, #0x4008, lsl #16
  439ba4:	ldr	w0, [sp, #84]
  439ba8:	bl	40b5f0 <ioctl@plt>
  439bac:	cmp	w0, #0x0
  439bb0:	b.ge	439c8c <map_keycode+0x33c>  // b.tcont
  439bb4:	str	xzr, [sp, #144]
  439bb8:	ldr	x0, [sp, #88]
  439bbc:	str	x0, [sp, #176]
  439bc0:	mov	w0, #0x3                   	// #3
  439bc4:	str	w0, [sp, #120]
  439bc8:	bl	40b040 <__errno_location@plt>
  439bcc:	ldr	w0, [x0]
  439bd0:	str	w0, [sp, #124]
  439bd4:	ldr	x0, [sp, #176]
  439bd8:	cmp	x0, #0x0
  439bdc:	b.eq	439c18 <map_keycode+0x2c8>  // b.none
  439be0:	mov	w0, #0x1                   	// #1
  439be4:	bl	40be30 <log_get_max_level_realm@plt>
  439be8:	mov	w1, w0
  439bec:	ldr	w0, [sp, #120]
  439bf0:	cmp	w0, w1
  439bf4:	cset	w0, le
  439bf8:	and	w0, w0, #0xff
  439bfc:	and	x0, x0, #0xff
  439c00:	cmp	x0, #0x0
  439c04:	b.eq	439c18 <map_keycode+0x2c8>  // b.none
  439c08:	add	x0, sp, #0x90
  439c0c:	mov	x1, x0
  439c10:	ldr	x0, [sp, #176]
  439c14:	bl	40aba0 <sd_device_get_sysname@plt>
  439c18:	adrp	x0, 456000 <__func__.9297+0x78>
  439c1c:	add	x8, x0, #0x783
  439c20:	ldr	x0, [sp, #144]
  439c24:	cmp	x0, #0x0
  439c28:	b.eq	439c38 <map_keycode+0x2e8>  // b.none
  439c2c:	adrp	x0, 456000 <__func__.9297+0x78>
  439c30:	add	x0, x0, #0x7c0
  439c34:	b	439c3c <map_keycode+0x2ec>
  439c38:	mov	x0, #0x0                   	// #0
  439c3c:	ldr	x3, [sp, #144]
  439c40:	ldr	w1, [sp, #128]
  439c44:	ldr	w2, [sp, #132]
  439c48:	str	w2, [sp, #24]
  439c4c:	str	w1, [sp, #16]
  439c50:	adrp	x1, 456000 <__func__.9297+0x78>
  439c54:	add	x1, x1, #0x8f8
  439c58:	str	x1, [sp, #8]
  439c5c:	str	xzr, [sp]
  439c60:	mov	x7, #0x0                   	// #0
  439c64:	mov	x6, x3
  439c68:	mov	x5, x0
  439c6c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439c70:	add	x4, x0, #0x938
  439c74:	mov	w3, #0x55                  	// #85
  439c78:	mov	x2, x8
  439c7c:	ldr	w1, [sp, #124]
  439c80:	ldr	w0, [sp, #120]
  439c84:	bl	40b020 <log_object_internal@plt>
  439c88:	b	439c90 <map_keycode+0x340>
  439c8c:	mov	w0, #0x0                   	// #0
  439c90:	mov	w1, w0
  439c94:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  439c98:	ldr	x0, [x0, #4032]
  439c9c:	ldr	x2, [sp, #184]
  439ca0:	ldr	x0, [x0]
  439ca4:	eor	x0, x2, x0
  439ca8:	cmp	x0, #0x0
  439cac:	b.eq	439cb4 <map_keycode+0x364>  // b.none
  439cb0:	bl	40b280 <__stack_chk_fail@plt>
  439cb4:	mov	w0, w1
  439cb8:	ldp	x29, x30, [sp, #48]
  439cbc:	add	sp, sp, #0xc0
  439cc0:	ret

0000000000439cc4 <parse_token>:
  439cc4:	stp	x29, x30, [sp, #-64]!
  439cc8:	mov	x29, sp
  439ccc:	str	x0, [sp, #24]
  439cd0:	str	x1, [sp, #16]
  439cd4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  439cd8:	ldr	x0, [x0, #4032]
  439cdc:	ldr	x1, [x0]
  439ce0:	str	x1, [sp, #56]
  439ce4:	mov	x1, #0x0                   	// #0
  439ce8:	ldr	x0, [sp, #24]
  439cec:	cmp	x0, #0x0
  439cf0:	b.ne	439cfc <parse_token+0x38>  // b.any
  439cf4:	mov	x0, #0x0                   	// #0
  439cf8:	b	439d78 <parse_token+0xb4>
  439cfc:	add	x0, sp, #0x30
  439d00:	mov	w2, #0x0                   	// #0
  439d04:	mov	x1, x0
  439d08:	ldr	x0, [sp, #24]
  439d0c:	bl	40b720 <strtol@plt>
  439d10:	str	w0, [sp, #44]
  439d14:	ldr	x0, [sp, #48]
  439d18:	ldrb	w0, [x0]
  439d1c:	cmp	w0, #0x0
  439d20:	b.eq	439d3c <parse_token+0x78>  // b.none
  439d24:	ldr	x0, [sp, #48]
  439d28:	ldrb	w0, [x0]
  439d2c:	cmp	w0, #0x3a
  439d30:	b.eq	439d3c <parse_token+0x78>  // b.none
  439d34:	mov	x0, #0x0                   	// #0
  439d38:	b	439d78 <parse_token+0xb4>
  439d3c:	ldr	x0, [sp, #48]
  439d40:	ldr	x1, [sp, #24]
  439d44:	cmp	x1, x0
  439d48:	b.eq	439d58 <parse_token+0x94>  // b.none
  439d4c:	ldr	x0, [sp, #16]
  439d50:	ldr	w1, [sp, #44]
  439d54:	str	w1, [x0]
  439d58:	ldr	x0, [sp, #48]
  439d5c:	ldrb	w0, [x0]
  439d60:	cmp	w0, #0x0
  439d64:	b.eq	439d74 <parse_token+0xb0>  // b.none
  439d68:	ldr	x0, [sp, #48]
  439d6c:	add	x0, x0, #0x1
  439d70:	str	x0, [sp, #48]
  439d74:	ldr	x0, [sp, #48]
  439d78:	mov	x1, x0
  439d7c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  439d80:	ldr	x0, [x0, #4032]
  439d84:	ldr	x2, [sp, #56]
  439d88:	ldr	x0, [x0]
  439d8c:	eor	x0, x2, x0
  439d90:	cmp	x0, #0x0
  439d94:	b.eq	439d9c <parse_token+0xd8>  // b.none
  439d98:	bl	40b280 <__stack_chk_fail@plt>
  439d9c:	mov	x0, x1
  439da0:	ldp	x29, x30, [sp], #64
  439da4:	ret

0000000000439da8 <override_abs>:
  439da8:	sub	sp, sp, #0xf0
  439dac:	stp	x29, x30, [sp, #64]
  439db0:	add	x29, sp, #0x40
  439db4:	str	x0, [sp, #104]
  439db8:	str	w1, [sp, #100]
  439dbc:	str	w2, [sp, #96]
  439dc0:	str	x3, [sp, #88]
  439dc4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  439dc8:	ldr	x0, [x0, #4032]
  439dcc:	ldr	x1, [x0]
  439dd0:	str	x1, [sp, #232]
  439dd4:	mov	x1, #0x0                   	// #0
  439dd8:	ldr	w0, [sp, #96]
  439ddc:	add	w1, w0, #0x40
  439de0:	mov	w0, #0x4500                	// #17664
  439de4:	movk	w0, #0x8018, lsl #16
  439de8:	orr	w0, w1, w0
  439dec:	mov	w0, w0
  439df0:	add	x1, sp, #0xd0
  439df4:	mov	x2, x1
  439df8:	mov	x1, x0
  439dfc:	ldr	w0, [sp, #100]
  439e00:	bl	40b5f0 <ioctl@plt>
  439e04:	str	w0, [sp, #124]
  439e08:	ldr	w0, [sp, #124]
  439e0c:	cmp	w0, #0x0
  439e10:	b.ge	439ed8 <override_abs+0x130>  // b.tcont
  439e14:	str	xzr, [sp, #160]
  439e18:	ldr	x0, [sp, #104]
  439e1c:	str	x0, [sp, #200]
  439e20:	mov	w0, #0x3                   	// #3
  439e24:	str	w0, [sp, #152]
  439e28:	bl	40b040 <__errno_location@plt>
  439e2c:	ldr	w0, [x0]
  439e30:	str	w0, [sp, #156]
  439e34:	ldr	x0, [sp, #200]
  439e38:	cmp	x0, #0x0
  439e3c:	b.eq	439e78 <override_abs+0xd0>  // b.none
  439e40:	mov	w0, #0x1                   	// #1
  439e44:	bl	40be30 <log_get_max_level_realm@plt>
  439e48:	mov	w1, w0
  439e4c:	ldr	w0, [sp, #152]
  439e50:	cmp	w0, w1
  439e54:	cset	w0, le
  439e58:	and	w0, w0, #0xff
  439e5c:	and	x0, x0, #0xff
  439e60:	cmp	x0, #0x0
  439e64:	b.eq	439e78 <override_abs+0xd0>  // b.none
  439e68:	add	x0, sp, #0xa0
  439e6c:	mov	x1, x0
  439e70:	ldr	x0, [sp, #200]
  439e74:	bl	40aba0 <sd_device_get_sysname@plt>
  439e78:	adrp	x0, 456000 <__func__.9297+0x78>
  439e7c:	add	x2, x0, #0x783
  439e80:	ldr	x0, [sp, #160]
  439e84:	cmp	x0, #0x0
  439e88:	b.eq	439e98 <override_abs+0xf0>  // b.none
  439e8c:	adrp	x0, 456000 <__func__.9297+0x78>
  439e90:	add	x0, x0, #0x7c0
  439e94:	b	439e9c <override_abs+0xf4>
  439e98:	mov	x0, #0x0                   	// #0
  439e9c:	ldr	x3, [sp, #160]
  439ea0:	adrp	x1, 456000 <__func__.9297+0x78>
  439ea4:	add	x1, x1, #0x940
  439ea8:	str	x1, [sp, #8]
  439eac:	str	xzr, [sp]
  439eb0:	mov	x7, #0x0                   	// #0
  439eb4:	mov	x6, x3
  439eb8:	mov	x5, x0
  439ebc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  439ec0:	add	x4, x0, #0x948
  439ec4:	mov	w3, #0x75                  	// #117
  439ec8:	ldr	w1, [sp, #156]
  439ecc:	ldr	w0, [sp, #152]
  439ed0:	bl	40b020 <log_object_internal@plt>
  439ed4:	b	43a20c <override_abs+0x464>
  439ed8:	add	x0, sp, #0xd0
  439edc:	add	x0, x0, #0x4
  439ee0:	mov	x1, x0
  439ee4:	ldr	x0, [sp, #88]
  439ee8:	bl	439cc4 <parse_token>
  439eec:	str	x0, [sp, #168]
  439ef0:	add	x0, sp, #0xd0
  439ef4:	add	x0, x0, #0x8
  439ef8:	mov	x1, x0
  439efc:	ldr	x0, [sp, #168]
  439f00:	bl	439cc4 <parse_token>
  439f04:	str	x0, [sp, #168]
  439f08:	add	x0, sp, #0xd0
  439f0c:	add	x0, x0, #0x14
  439f10:	mov	x1, x0
  439f14:	ldr	x0, [sp, #168]
  439f18:	bl	439cc4 <parse_token>
  439f1c:	str	x0, [sp, #168]
  439f20:	add	x0, sp, #0xd0
  439f24:	add	x0, x0, #0xc
  439f28:	mov	x1, x0
  439f2c:	ldr	x0, [sp, #168]
  439f30:	bl	439cc4 <parse_token>
  439f34:	str	x0, [sp, #168]
  439f38:	add	x0, sp, #0xd0
  439f3c:	add	x0, x0, #0x10
  439f40:	mov	x1, x0
  439f44:	ldr	x0, [sp, #168]
  439f48:	bl	439cc4 <parse_token>
  439f4c:	str	x0, [sp, #168]
  439f50:	ldr	x0, [sp, #168]
  439f54:	cmp	x0, #0x0
  439f58:	b.ne	43a020 <override_abs+0x278>  // b.any
  439f5c:	str	xzr, [sp, #160]
  439f60:	ldr	x0, [sp, #104]
  439f64:	str	x0, [sp, #192]
  439f68:	mov	w0, #0x3                   	// #3
  439f6c:	str	w0, [sp, #144]
  439f70:	str	wzr, [sp, #148]
  439f74:	ldr	x0, [sp, #192]
  439f78:	cmp	x0, #0x0
  439f7c:	b.eq	439fb8 <override_abs+0x210>  // b.none
  439f80:	mov	w0, #0x1                   	// #1
  439f84:	bl	40be30 <log_get_max_level_realm@plt>
  439f88:	mov	w1, w0
  439f8c:	ldr	w0, [sp, #144]
  439f90:	cmp	w0, w1
  439f94:	cset	w0, le
  439f98:	and	w0, w0, #0xff
  439f9c:	and	x0, x0, #0xff
  439fa0:	cmp	x0, #0x0
  439fa4:	b.eq	439fb8 <override_abs+0x210>  // b.none
  439fa8:	add	x0, sp, #0xa0
  439fac:	mov	x1, x0
  439fb0:	ldr	x0, [sp, #192]
  439fb4:	bl	40aba0 <sd_device_get_sysname@plt>
  439fb8:	adrp	x0, 456000 <__func__.9297+0x78>
  439fbc:	add	x2, x0, #0x783
  439fc0:	ldr	x0, [sp, #160]
  439fc4:	cmp	x0, #0x0
  439fc8:	b.eq	439fd8 <override_abs+0x230>  // b.none
  439fcc:	adrp	x0, 456000 <__func__.9297+0x78>
  439fd0:	add	x0, x0, #0x7c0
  439fd4:	b	439fdc <override_abs+0x234>
  439fd8:	mov	x0, #0x0                   	// #0
  439fdc:	ldr	x3, [sp, #160]
  439fe0:	ldr	x1, [sp, #88]
  439fe4:	str	x1, [sp, #16]
  439fe8:	adrp	x1, 456000 <__func__.9297+0x78>
  439fec:	add	x1, x1, #0x960
  439ff0:	str	x1, [sp, #8]
  439ff4:	str	xzr, [sp]
  439ff8:	mov	x7, #0x0                   	// #0
  439ffc:	mov	x6, x3
  43a000:	mov	x5, x0
  43a004:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a008:	add	x4, x0, #0x948
  43a00c:	mov	w3, #0x7d                  	// #125
  43a010:	ldr	w1, [sp, #148]
  43a014:	ldr	w0, [sp, #144]
  43a018:	bl	40b020 <log_object_internal@plt>
  43a01c:	b	43a20c <override_abs+0x464>
  43a020:	str	xzr, [sp, #160]
  43a024:	ldr	x0, [sp, #104]
  43a028:	str	x0, [sp, #176]
  43a02c:	mov	w0, #0x7                   	// #7
  43a030:	str	w0, [sp, #128]
  43a034:	str	wzr, [sp, #132]
  43a038:	ldr	x0, [sp, #176]
  43a03c:	cmp	x0, #0x0
  43a040:	b.eq	43a07c <override_abs+0x2d4>  // b.none
  43a044:	mov	w0, #0x1                   	// #1
  43a048:	bl	40be30 <log_get_max_level_realm@plt>
  43a04c:	mov	w1, w0
  43a050:	ldr	w0, [sp, #128]
  43a054:	cmp	w0, w1
  43a058:	cset	w0, le
  43a05c:	and	w0, w0, #0xff
  43a060:	and	x0, x0, #0xff
  43a064:	cmp	x0, #0x0
  43a068:	b.eq	43a07c <override_abs+0x2d4>  // b.none
  43a06c:	add	x0, sp, #0xa0
  43a070:	mov	x1, x0
  43a074:	ldr	x0, [sp, #176]
  43a078:	bl	40aba0 <sd_device_get_sysname@plt>
  43a07c:	adrp	x0, 456000 <__func__.9297+0x78>
  43a080:	add	x8, x0, #0x783
  43a084:	ldr	x0, [sp, #160]
  43a088:	cmp	x0, #0x0
  43a08c:	b.eq	43a09c <override_abs+0x2f4>  // b.none
  43a090:	adrp	x0, 456000 <__func__.9297+0x78>
  43a094:	add	x0, x0, #0x7c0
  43a098:	b	43a0a0 <override_abs+0x2f8>
  43a09c:	mov	x0, #0x0                   	// #0
  43a0a0:	ldr	x6, [sp, #160]
  43a0a4:	ldr	w1, [sp, #212]
  43a0a8:	ldr	w2, [sp, #216]
  43a0ac:	ldr	w3, [sp, #228]
  43a0b0:	ldr	w4, [sp, #220]
  43a0b4:	ldr	w5, [sp, #224]
  43a0b8:	str	w5, [sp, #56]
  43a0bc:	str	w4, [sp, #48]
  43a0c0:	str	w3, [sp, #40]
  43a0c4:	str	w2, [sp, #32]
  43a0c8:	str	w1, [sp, #24]
  43a0cc:	ldr	w1, [sp, #96]
  43a0d0:	str	w1, [sp, #16]
  43a0d4:	adrp	x1, 456000 <__func__.9297+0x78>
  43a0d8:	add	x1, x1, #0x988
  43a0dc:	str	x1, [sp, #8]
  43a0e0:	str	xzr, [sp]
  43a0e4:	mov	x7, #0x0                   	// #0
  43a0e8:	mov	x5, x0
  43a0ec:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a0f0:	add	x4, x0, #0x948
  43a0f4:	mov	w3, #0x7f                  	// #127
  43a0f8:	mov	x2, x8
  43a0fc:	ldr	w1, [sp, #132]
  43a100:	ldr	w0, [sp, #128]
  43a104:	bl	40b020 <log_object_internal@plt>
  43a108:	ldr	w0, [sp, #96]
  43a10c:	add	w1, w0, #0xc0
  43a110:	mov	w0, #0x4500                	// #17664
  43a114:	movk	w0, #0x4018, lsl #16
  43a118:	orr	w0, w1, w0
  43a11c:	mov	w0, w0
  43a120:	add	x1, sp, #0xd0
  43a124:	mov	x2, x1
  43a128:	mov	x1, x0
  43a12c:	ldr	w0, [sp, #100]
  43a130:	bl	40b5f0 <ioctl@plt>
  43a134:	str	w0, [sp, #124]
  43a138:	ldr	w0, [sp, #124]
  43a13c:	cmp	w0, #0x0
  43a140:	b.ge	43a208 <override_abs+0x460>  // b.tcont
  43a144:	str	xzr, [sp, #160]
  43a148:	ldr	x0, [sp, #104]
  43a14c:	str	x0, [sp, #184]
  43a150:	mov	w0, #0x3                   	// #3
  43a154:	str	w0, [sp, #136]
  43a158:	bl	40b040 <__errno_location@plt>
  43a15c:	ldr	w0, [x0]
  43a160:	str	w0, [sp, #140]
  43a164:	ldr	x0, [sp, #184]
  43a168:	cmp	x0, #0x0
  43a16c:	b.eq	43a1a8 <override_abs+0x400>  // b.none
  43a170:	mov	w0, #0x1                   	// #1
  43a174:	bl	40be30 <log_get_max_level_realm@plt>
  43a178:	mov	w1, w0
  43a17c:	ldr	w0, [sp, #136]
  43a180:	cmp	w0, w1
  43a184:	cset	w0, le
  43a188:	and	w0, w0, #0xff
  43a18c:	and	x0, x0, #0xff
  43a190:	cmp	x0, #0x0
  43a194:	b.eq	43a1a8 <override_abs+0x400>  // b.none
  43a198:	add	x0, sp, #0xa0
  43a19c:	mov	x1, x0
  43a1a0:	ldr	x0, [sp, #184]
  43a1a4:	bl	40aba0 <sd_device_get_sysname@plt>
  43a1a8:	adrp	x0, 456000 <__func__.9297+0x78>
  43a1ac:	add	x2, x0, #0x783
  43a1b0:	ldr	x0, [sp, #160]
  43a1b4:	cmp	x0, #0x0
  43a1b8:	b.eq	43a1c8 <override_abs+0x420>  // b.none
  43a1bc:	adrp	x0, 456000 <__func__.9297+0x78>
  43a1c0:	add	x0, x0, #0x7c0
  43a1c4:	b	43a1cc <override_abs+0x424>
  43a1c8:	mov	x0, #0x0                   	// #0
  43a1cc:	ldr	x3, [sp, #160]
  43a1d0:	adrp	x1, 456000 <__func__.9297+0x78>
  43a1d4:	add	x1, x1, #0x9b8
  43a1d8:	str	x1, [sp, #8]
  43a1dc:	str	xzr, [sp]
  43a1e0:	mov	x7, #0x0                   	// #0
  43a1e4:	mov	x6, x3
  43a1e8:	mov	x5, x0
  43a1ec:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a1f0:	add	x4, x0, #0x948
  43a1f4:	mov	w3, #0x83                  	// #131
  43a1f8:	ldr	w1, [sp, #140]
  43a1fc:	ldr	w0, [sp, #136]
  43a200:	bl	40b020 <log_object_internal@plt>
  43a204:	b	43a20c <override_abs+0x464>
  43a208:	mov	w0, #0x0                   	// #0
  43a20c:	mov	w1, w0
  43a210:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43a214:	ldr	x0, [x0, #4032]
  43a218:	ldr	x2, [sp, #232]
  43a21c:	ldr	x0, [x0]
  43a220:	eor	x0, x2, x0
  43a224:	cmp	x0, #0x0
  43a228:	b.eq	43a230 <override_abs+0x488>  // b.none
  43a22c:	bl	40b280 <__stack_chk_fail@plt>
  43a230:	mov	w0, w1
  43a234:	ldp	x29, x30, [sp, #64]
  43a238:	add	sp, sp, #0xf0
  43a23c:	ret

000000000043a240 <set_trackpoint_sensitivity>:
  43a240:	sub	sp, sp, #0xb0
  43a244:	stp	x29, x30, [sp, #32]
  43a248:	add	x29, sp, #0x20
  43a24c:	str	x0, [sp, #56]
  43a250:	str	x1, [sp, #48]
  43a254:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43a258:	ldr	x0, [x0, #4032]
  43a25c:	ldr	x1, [x0]
  43a260:	str	x1, [sp, #168]
  43a264:	mov	x1, #0x0                   	// #0
  43a268:	ldr	x0, [sp, #56]
  43a26c:	cmp	x0, #0x0
  43a270:	cset	w0, eq  // eq = none
  43a274:	and	w0, w0, #0xff
  43a278:	and	x0, x0, #0xff
  43a27c:	cmp	x0, #0x0
  43a280:	b.eq	43a2ac <set_trackpoint_sensitivity+0x6c>  // b.none
  43a284:	adrp	x0, 456000 <__func__.9297+0x78>
  43a288:	add	x1, x0, #0x783
  43a28c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a290:	add	x4, x0, #0x958
  43a294:	mov	w3, #0x8d                  	// #141
  43a298:	mov	x2, x1
  43a29c:	adrp	x0, 456000 <__func__.9297+0x78>
  43a2a0:	add	x1, x0, #0x7a8
  43a2a4:	mov	w0, #0x1                   	// #1
  43a2a8:	bl	40abb0 <log_assert_failed_realm@plt>
  43a2ac:	ldr	x0, [sp, #48]
  43a2b0:	cmp	x0, #0x0
  43a2b4:	cset	w0, eq  // eq = none
  43a2b8:	and	w0, w0, #0xff
  43a2bc:	and	x0, x0, #0xff
  43a2c0:	cmp	x0, #0x0
  43a2c4:	b.eq	43a2f0 <set_trackpoint_sensitivity+0xb0>  // b.none
  43a2c8:	adrp	x0, 456000 <__func__.9297+0x78>
  43a2cc:	add	x1, x0, #0x783
  43a2d0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a2d4:	add	x4, x0, #0x958
  43a2d8:	mov	w3, #0x8e                  	// #142
  43a2dc:	mov	x2, x1
  43a2e0:	adrp	x0, 456000 <__func__.9297+0x78>
  43a2e4:	add	x1, x0, #0x9d8
  43a2e8:	mov	w0, #0x1                   	// #1
  43a2ec:	bl	40abb0 <log_assert_failed_realm@plt>
  43a2f0:	add	x0, sp, #0x68
  43a2f4:	mov	x3, x0
  43a2f8:	mov	x2, #0x0                   	// #0
  43a2fc:	adrp	x0, 456000 <__func__.9297+0x78>
  43a300:	add	x1, x0, #0x7b8
  43a304:	ldr	x0, [sp, #56]
  43a308:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43a30c:	str	w0, [sp, #68]
  43a310:	ldr	w0, [sp, #68]
  43a314:	cmp	w0, #0x0
  43a318:	b.ge	43a3dc <set_trackpoint_sensitivity+0x19c>  // b.tcont
  43a31c:	str	xzr, [sp, #112]
  43a320:	ldr	x0, [sp, #56]
  43a324:	str	x0, [sp, #144]
  43a328:	mov	w0, #0x3                   	// #3
  43a32c:	str	w0, [sp, #96]
  43a330:	ldr	w0, [sp, #68]
  43a334:	str	w0, [sp, #100]
  43a338:	ldr	x0, [sp, #144]
  43a33c:	cmp	x0, #0x0
  43a340:	b.eq	43a37c <set_trackpoint_sensitivity+0x13c>  // b.none
  43a344:	mov	w0, #0x1                   	// #1
  43a348:	bl	40be30 <log_get_max_level_realm@plt>
  43a34c:	mov	w1, w0
  43a350:	ldr	w0, [sp, #96]
  43a354:	cmp	w0, w1
  43a358:	cset	w0, le
  43a35c:	and	w0, w0, #0xff
  43a360:	and	x0, x0, #0xff
  43a364:	cmp	x0, #0x0
  43a368:	b.eq	43a37c <set_trackpoint_sensitivity+0x13c>  // b.none
  43a36c:	add	x0, sp, #0x70
  43a370:	mov	x1, x0
  43a374:	ldr	x0, [sp, #144]
  43a378:	bl	40aba0 <sd_device_get_sysname@plt>
  43a37c:	adrp	x0, 456000 <__func__.9297+0x78>
  43a380:	add	x2, x0, #0x783
  43a384:	ldr	x0, [sp, #112]
  43a388:	cmp	x0, #0x0
  43a38c:	b.eq	43a39c <set_trackpoint_sensitivity+0x15c>  // b.none
  43a390:	adrp	x0, 456000 <__func__.9297+0x78>
  43a394:	add	x0, x0, #0x7c0
  43a398:	b	43a3a0 <set_trackpoint_sensitivity+0x160>
  43a39c:	mov	x0, #0x0                   	// #0
  43a3a0:	ldr	x3, [sp, #112]
  43a3a4:	adrp	x1, 456000 <__func__.9297+0x78>
  43a3a8:	add	x1, x1, #0x7c8
  43a3ac:	str	x1, [sp, #8]
  43a3b0:	str	xzr, [sp]
  43a3b4:	mov	x7, #0x0                   	// #0
  43a3b8:	mov	x6, x3
  43a3bc:	mov	x5, x0
  43a3c0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a3c4:	add	x4, x0, #0x978
  43a3c8:	mov	w3, #0x93                  	// #147
  43a3cc:	ldr	w1, [sp, #100]
  43a3d0:	ldr	w0, [sp, #96]
  43a3d4:	bl	40b020 <log_object_internal@plt>
  43a3d8:	b	43a6f8 <set_trackpoint_sensitivity+0x4b8>
  43a3dc:	add	x0, sp, #0x40
  43a3e0:	mov	x1, x0
  43a3e4:	ldr	x0, [sp, #48]
  43a3e8:	bl	40b0e0 <safe_atoi@plt>
  43a3ec:	str	w0, [sp, #68]
  43a3f0:	ldr	w0, [sp, #68]
  43a3f4:	cmp	w0, #0x0
  43a3f8:	b.ge	43a4c4 <set_trackpoint_sensitivity+0x284>  // b.tcont
  43a3fc:	str	xzr, [sp, #112]
  43a400:	ldr	x0, [sp, #56]
  43a404:	str	x0, [sp, #136]
  43a408:	mov	w0, #0x3                   	// #3
  43a40c:	str	w0, [sp, #88]
  43a410:	ldr	w0, [sp, #68]
  43a414:	str	w0, [sp, #92]
  43a418:	ldr	x0, [sp, #136]
  43a41c:	cmp	x0, #0x0
  43a420:	b.eq	43a45c <set_trackpoint_sensitivity+0x21c>  // b.none
  43a424:	mov	w0, #0x1                   	// #1
  43a428:	bl	40be30 <log_get_max_level_realm@plt>
  43a42c:	mov	w1, w0
  43a430:	ldr	w0, [sp, #88]
  43a434:	cmp	w0, w1
  43a438:	cset	w0, le
  43a43c:	and	w0, w0, #0xff
  43a440:	and	x0, x0, #0xff
  43a444:	cmp	x0, #0x0
  43a448:	b.eq	43a45c <set_trackpoint_sensitivity+0x21c>  // b.none
  43a44c:	add	x0, sp, #0x70
  43a450:	mov	x1, x0
  43a454:	ldr	x0, [sp, #136]
  43a458:	bl	40aba0 <sd_device_get_sysname@plt>
  43a45c:	adrp	x0, 456000 <__func__.9297+0x78>
  43a460:	add	x2, x0, #0x783
  43a464:	ldr	x0, [sp, #112]
  43a468:	cmp	x0, #0x0
  43a46c:	b.eq	43a47c <set_trackpoint_sensitivity+0x23c>  // b.none
  43a470:	adrp	x0, 456000 <__func__.9297+0x78>
  43a474:	add	x0, x0, #0x7c0
  43a478:	b	43a480 <set_trackpoint_sensitivity+0x240>
  43a47c:	mov	x0, #0x0                   	// #0
  43a480:	ldr	x3, [sp, #112]
  43a484:	ldr	x1, [sp, #48]
  43a488:	str	x1, [sp, #16]
  43a48c:	adrp	x1, 456000 <__func__.9297+0x78>
  43a490:	add	x1, x1, #0x9e0
  43a494:	str	x1, [sp, #8]
  43a498:	str	xzr, [sp]
  43a49c:	mov	x7, #0x0                   	// #0
  43a4a0:	mov	x6, x3
  43a4a4:	mov	x5, x0
  43a4a8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a4ac:	add	x4, x0, #0x978
  43a4b0:	mov	w3, #0x97                  	// #151
  43a4b4:	ldr	w1, [sp, #92]
  43a4b8:	ldr	w0, [sp, #88]
  43a4bc:	bl	40b020 <log_object_internal@plt>
  43a4c0:	b	43a6f8 <set_trackpoint_sensitivity+0x4b8>
  43a4c4:	ldr	w0, [sp, #64]
  43a4c8:	cmp	w0, #0x0
  43a4cc:	b.lt	43a4dc <set_trackpoint_sensitivity+0x29c>  // b.tstop
  43a4d0:	ldr	w0, [sp, #64]
  43a4d4:	cmp	w0, #0xff
  43a4d8:	b.le	43a5a8 <set_trackpoint_sensitivity+0x368>
  43a4dc:	str	xzr, [sp, #112]
  43a4e0:	ldr	x0, [sp, #56]
  43a4e4:	str	x0, [sp, #128]
  43a4e8:	mov	w0, #0x3                   	// #3
  43a4ec:	str	w0, [sp, #80]
  43a4f0:	mov	w0, #0x22                  	// #34
  43a4f4:	movk	w0, #0x4000, lsl #16
  43a4f8:	str	w0, [sp, #84]
  43a4fc:	ldr	x0, [sp, #128]
  43a500:	cmp	x0, #0x0
  43a504:	b.eq	43a540 <set_trackpoint_sensitivity+0x300>  // b.none
  43a508:	mov	w0, #0x1                   	// #1
  43a50c:	bl	40be30 <log_get_max_level_realm@plt>
  43a510:	mov	w1, w0
  43a514:	ldr	w0, [sp, #80]
  43a518:	cmp	w0, w1
  43a51c:	cset	w0, le
  43a520:	and	w0, w0, #0xff
  43a524:	and	x0, x0, #0xff
  43a528:	cmp	x0, #0x0
  43a52c:	b.eq	43a540 <set_trackpoint_sensitivity+0x300>  // b.none
  43a530:	add	x0, sp, #0x70
  43a534:	mov	x1, x0
  43a538:	ldr	x0, [sp, #128]
  43a53c:	bl	40aba0 <sd_device_get_sysname@plt>
  43a540:	adrp	x0, 456000 <__func__.9297+0x78>
  43a544:	add	x2, x0, #0x783
  43a548:	ldr	x0, [sp, #112]
  43a54c:	cmp	x0, #0x0
  43a550:	b.eq	43a560 <set_trackpoint_sensitivity+0x320>  // b.none
  43a554:	adrp	x0, 456000 <__func__.9297+0x78>
  43a558:	add	x0, x0, #0x7c0
  43a55c:	b	43a564 <set_trackpoint_sensitivity+0x324>
  43a560:	mov	x0, #0x0                   	// #0
  43a564:	ldr	x3, [sp, #112]
  43a568:	ldr	w1, [sp, #64]
  43a56c:	str	w1, [sp, #16]
  43a570:	adrp	x1, 456000 <__func__.9297+0x78>
  43a574:	add	x1, x1, #0xa18
  43a578:	str	x1, [sp, #8]
  43a57c:	str	xzr, [sp]
  43a580:	mov	x7, #0x0                   	// #0
  43a584:	mov	x6, x3
  43a588:	mov	x5, x0
  43a58c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a590:	add	x4, x0, #0x978
  43a594:	mov	w3, #0x99                  	// #153
  43a598:	ldr	w1, [sp, #84]
  43a59c:	ldr	w0, [sp, #80]
  43a5a0:	bl	40b020 <log_object_internal@plt>
  43a5a4:	b	43a6f8 <set_trackpoint_sensitivity+0x4b8>
  43a5a8:	ldr	w0, [sp, #64]
  43a5ac:	add	x4, sp, #0x98
  43a5b0:	mov	w3, w0
  43a5b4:	adrp	x0, 456000 <__func__.9297+0x78>
  43a5b8:	add	x2, x0, #0xa50
  43a5bc:	mov	x1, #0xc                   	// #12
  43a5c0:	mov	x0, x4
  43a5c4:	bl	40a870 <snprintf@plt>
  43a5c8:	cmp	w0, #0xb
  43a5cc:	cset	w0, hi  // hi = pmore
  43a5d0:	and	w0, w0, #0xff
  43a5d4:	and	x0, x0, #0xff
  43a5d8:	cmp	x0, #0x0
  43a5dc:	b.eq	43a608 <set_trackpoint_sensitivity+0x3c8>  // b.none
  43a5e0:	adrp	x0, 456000 <__func__.9297+0x78>
  43a5e4:	add	x1, x0, #0x783
  43a5e8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a5ec:	add	x4, x0, #0x958
  43a5f0:	mov	w3, #0x9b                  	// #155
  43a5f4:	mov	x2, x1
  43a5f8:	adrp	x0, 456000 <__func__.9297+0x78>
  43a5fc:	add	x1, x0, #0xa58
  43a600:	mov	w0, #0x1                   	// #1
  43a604:	bl	40abb0 <log_assert_failed_realm@plt>
  43a608:	ldr	x3, [sp, #104]
  43a60c:	add	x0, sp, #0x98
  43a610:	mov	x2, x0
  43a614:	adrp	x0, 456000 <__func__.9297+0x78>
  43a618:	add	x1, x0, #0xa80
  43a61c:	mov	x0, x3
  43a620:	bl	40b8b0 <sd_device_set_sysattr_value@plt>
  43a624:	str	w0, [sp, #68]
  43a628:	ldr	w0, [sp, #68]
  43a62c:	cmp	w0, #0x0
  43a630:	b.ge	43a6f4 <set_trackpoint_sensitivity+0x4b4>  // b.tcont
  43a634:	str	xzr, [sp, #112]
  43a638:	ldr	x0, [sp, #56]
  43a63c:	str	x0, [sp, #120]
  43a640:	mov	w0, #0x3                   	// #3
  43a644:	str	w0, [sp, #72]
  43a648:	ldr	w0, [sp, #68]
  43a64c:	str	w0, [sp, #76]
  43a650:	ldr	x0, [sp, #120]
  43a654:	cmp	x0, #0x0
  43a658:	b.eq	43a694 <set_trackpoint_sensitivity+0x454>  // b.none
  43a65c:	mov	w0, #0x1                   	// #1
  43a660:	bl	40be30 <log_get_max_level_realm@plt>
  43a664:	mov	w1, w0
  43a668:	ldr	w0, [sp, #72]
  43a66c:	cmp	w0, w1
  43a670:	cset	w0, le
  43a674:	and	w0, w0, #0xff
  43a678:	and	x0, x0, #0xff
  43a67c:	cmp	x0, #0x0
  43a680:	b.eq	43a694 <set_trackpoint_sensitivity+0x454>  // b.none
  43a684:	add	x0, sp, #0x70
  43a688:	mov	x1, x0
  43a68c:	ldr	x0, [sp, #120]
  43a690:	bl	40aba0 <sd_device_get_sysname@plt>
  43a694:	adrp	x0, 456000 <__func__.9297+0x78>
  43a698:	add	x2, x0, #0x783
  43a69c:	ldr	x0, [sp, #112]
  43a6a0:	cmp	x0, #0x0
  43a6a4:	b.eq	43a6b4 <set_trackpoint_sensitivity+0x474>  // b.none
  43a6a8:	adrp	x0, 456000 <__func__.9297+0x78>
  43a6ac:	add	x0, x0, #0x7c0
  43a6b0:	b	43a6b8 <set_trackpoint_sensitivity+0x478>
  43a6b4:	mov	x0, #0x0                   	// #0
  43a6b8:	ldr	x3, [sp, #112]
  43a6bc:	adrp	x1, 456000 <__func__.9297+0x78>
  43a6c0:	add	x1, x1, #0xa90
  43a6c4:	str	x1, [sp, #8]
  43a6c8:	str	xzr, [sp]
  43a6cc:	mov	x7, #0x0                   	// #0
  43a6d0:	mov	x6, x3
  43a6d4:	mov	x5, x0
  43a6d8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a6dc:	add	x4, x0, #0x978
  43a6e0:	mov	w3, #0x9f                  	// #159
  43a6e4:	ldr	w1, [sp, #76]
  43a6e8:	ldr	w0, [sp, #72]
  43a6ec:	bl	40b020 <log_object_internal@plt>
  43a6f0:	b	43a6f8 <set_trackpoint_sensitivity+0x4b8>
  43a6f4:	mov	w0, #0x0                   	// #0
  43a6f8:	mov	w1, w0
  43a6fc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43a700:	ldr	x0, [x0, #4032]
  43a704:	ldr	x2, [sp, #168]
  43a708:	ldr	x0, [x0]
  43a70c:	eor	x0, x2, x0
  43a710:	cmp	x0, #0x0
  43a714:	b.eq	43a71c <set_trackpoint_sensitivity+0x4dc>  // b.none
  43a718:	bl	40b280 <__stack_chk_fail@plt>
  43a71c:	mov	w0, w1
  43a720:	ldp	x29, x30, [sp, #32]
  43a724:	add	sp, sp, #0xb0
  43a728:	ret

000000000043a72c <builtin_keyboard>:
  43a72c:	mov	x12, #0x1130                	// #4400
  43a730:	sub	sp, sp, x12
  43a734:	stp	x29, x30, [sp, #32]
  43a738:	add	x29, sp, #0x20
  43a73c:	str	x19, [sp, #48]
  43a740:	str	x0, [sp, #88]
  43a744:	str	w1, [sp, #84]
  43a748:	str	x2, [sp, #72]
  43a74c:	strb	w3, [sp, #83]
  43a750:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43a754:	ldr	x0, [x0, #4032]
  43a758:	ldr	x1, [x0]
  43a75c:	str	x1, [sp, #4392]
  43a760:	mov	x1, #0x0                   	// #0
  43a764:	str	wzr, [sp, #104]
  43a768:	mov	w0, #0xffffffff            	// #-1
  43a76c:	str	w0, [sp, #100]
  43a770:	mov	w0, #0xffffffff            	// #-1
  43a774:	str	w0, [sp, #108]
  43a778:	add	x0, sp, #0xb8
  43a77c:	mov	x1, x0
  43a780:	ldr	x0, [sp, #88]
  43a784:	bl	40a6f0 <sd_device_get_devname@plt>
  43a788:	str	w0, [sp, #112]
  43a78c:	ldr	w0, [sp, #112]
  43a790:	cmp	w0, #0x0
  43a794:	b.ge	43a85c <builtin_keyboard+0x130>  // b.tcont
  43a798:	str	xzr, [sp, #216]
  43a79c:	ldr	x0, [sp, #88]
  43a7a0:	str	x0, [sp, #288]
  43a7a4:	mov	w0, #0x3                   	// #3
  43a7a8:	str	w0, [sp, #176]
  43a7ac:	ldr	w0, [sp, #112]
  43a7b0:	str	w0, [sp, #180]
  43a7b4:	ldr	x0, [sp, #288]
  43a7b8:	cmp	x0, #0x0
  43a7bc:	b.eq	43a7f8 <builtin_keyboard+0xcc>  // b.none
  43a7c0:	mov	w0, #0x1                   	// #1
  43a7c4:	bl	40be30 <log_get_max_level_realm@plt>
  43a7c8:	mov	w1, w0
  43a7cc:	ldr	w0, [sp, #176]
  43a7d0:	cmp	w0, w1
  43a7d4:	cset	w0, le
  43a7d8:	and	w0, w0, #0xff
  43a7dc:	and	x0, x0, #0xff
  43a7e0:	cmp	x0, #0x0
  43a7e4:	b.eq	43a7f8 <builtin_keyboard+0xcc>  // b.none
  43a7e8:	add	x0, sp, #0xd8
  43a7ec:	mov	x1, x0
  43a7f0:	ldr	x0, [sp, #288]
  43a7f4:	bl	40aba0 <sd_device_get_sysname@plt>
  43a7f8:	adrp	x0, 456000 <__func__.9297+0x78>
  43a7fc:	add	x2, x0, #0x783
  43a800:	ldr	x0, [sp, #216]
  43a804:	cmp	x0, #0x0
  43a808:	b.eq	43a818 <builtin_keyboard+0xec>  // b.none
  43a80c:	adrp	x0, 456000 <__func__.9297+0x78>
  43a810:	add	x0, x0, #0x7c0
  43a814:	b	43a81c <builtin_keyboard+0xf0>
  43a818:	mov	x0, #0x0                   	// #0
  43a81c:	ldr	x3, [sp, #216]
  43a820:	adrp	x1, 456000 <__func__.9297+0x78>
  43a824:	add	x1, x1, #0xac0
  43a828:	str	x1, [sp, #8]
  43a82c:	str	xzr, [sp]
  43a830:	mov	x7, #0x0                   	// #0
  43a834:	mov	x6, x3
  43a838:	mov	x5, x0
  43a83c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a840:	add	x4, x0, #0x998
  43a844:	mov	w3, #0xad                  	// #173
  43a848:	ldr	w1, [sp, #180]
  43a84c:	ldr	w0, [sp, #176]
  43a850:	bl	40b020 <log_object_internal@plt>
  43a854:	mov	w19, w0
  43a858:	b	43af74 <builtin_keyboard+0x848>
  43a85c:	add	x0, sp, #0xc0
  43a860:	mov	x1, x0
  43a864:	ldr	x0, [sp, #88]
  43a868:	bl	40a430 <sd_device_get_property_first@plt>
  43a86c:	str	x0, [sp, #224]
  43a870:	b	43af44 <builtin_keyboard+0x818>
  43a874:	adrp	x0, 456000 <__func__.9297+0x78>
  43a878:	add	x1, x0, #0xae0
  43a87c:	ldr	x0, [sp, #224]
  43a880:	bl	439130 <startswith>
  43a884:	cmp	x0, #0x0
  43a888:	b.eq	43aaf4 <builtin_keyboard+0x3c8>  // b.none
  43a88c:	ldr	x0, [sp, #192]
  43a890:	str	x0, [sp, #232]
  43a894:	ldr	x0, [sp, #224]
  43a898:	add	x0, x0, #0xd
  43a89c:	add	x1, sp, #0xc8
  43a8a0:	mov	w2, #0x10                  	// #16
  43a8a4:	bl	40b630 <strtoul@plt>
  43a8a8:	str	w0, [sp, #156]
  43a8ac:	ldr	x0, [sp, #200]
  43a8b0:	ldrb	w0, [x0]
  43a8b4:	cmp	w0, #0x0
  43a8b8:	b.eq	43a980 <builtin_keyboard+0x254>  // b.none
  43a8bc:	str	xzr, [sp, #216]
  43a8c0:	ldr	x0, [sp, #88]
  43a8c4:	str	x0, [sp, #280]
  43a8c8:	mov	w0, #0x4                   	// #4
  43a8cc:	str	w0, [sp, #168]
  43a8d0:	str	wzr, [sp, #172]
  43a8d4:	ldr	x0, [sp, #280]
  43a8d8:	cmp	x0, #0x0
  43a8dc:	b.eq	43a918 <builtin_keyboard+0x1ec>  // b.none
  43a8e0:	mov	w0, #0x1                   	// #1
  43a8e4:	bl	40be30 <log_get_max_level_realm@plt>
  43a8e8:	mov	w1, w0
  43a8ec:	ldr	w0, [sp, #168]
  43a8f0:	cmp	w0, w1
  43a8f4:	cset	w0, le
  43a8f8:	and	w0, w0, #0xff
  43a8fc:	and	x0, x0, #0xff
  43a900:	cmp	x0, #0x0
  43a904:	b.eq	43a918 <builtin_keyboard+0x1ec>  // b.none
  43a908:	add	x0, sp, #0xd8
  43a90c:	mov	x1, x0
  43a910:	ldr	x0, [sp, #280]
  43a914:	bl	40aba0 <sd_device_get_sysname@plt>
  43a918:	adrp	x0, 456000 <__func__.9297+0x78>
  43a91c:	add	x2, x0, #0x783
  43a920:	ldr	x0, [sp, #216]
  43a924:	cmp	x0, #0x0
  43a928:	b.eq	43a938 <builtin_keyboard+0x20c>  // b.none
  43a92c:	adrp	x0, 456000 <__func__.9297+0x78>
  43a930:	add	x0, x0, #0x7c0
  43a934:	b	43a93c <builtin_keyboard+0x210>
  43a938:	mov	x0, #0x0                   	// #0
  43a93c:	ldr	x3, [sp, #216]
  43a940:	ldr	x1, [sp, #224]
  43a944:	str	x1, [sp, #16]
  43a948:	adrp	x1, 456000 <__func__.9297+0x78>
  43a94c:	add	x1, x1, #0xaf0
  43a950:	str	x1, [sp, #8]
  43a954:	str	xzr, [sp]
  43a958:	mov	x7, #0x0                   	// #0
  43a95c:	mov	x6, x3
  43a960:	mov	x5, x0
  43a964:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43a968:	add	x4, x0, #0x998
  43a96c:	mov	w3, #0xb9                  	// #185
  43a970:	ldr	w1, [sp, #172]
  43a974:	ldr	w0, [sp, #168]
  43a978:	bl	40b020 <log_object_internal@plt>
  43a97c:	b	43af30 <builtin_keyboard+0x804>
  43a980:	ldr	x0, [sp, #232]
  43a984:	ldrb	w0, [x0]
  43a988:	cmp	w0, #0x21
  43a98c:	b.ne	43a9d8 <builtin_keyboard+0x2ac>  // b.any
  43a990:	ldr	x0, [sp, #232]
  43a994:	add	x0, x0, #0x1
  43a998:	str	x0, [sp, #232]
  43a99c:	ldr	w0, [sp, #104]
  43a9a0:	lsl	x0, x0, #2
  43a9a4:	add	x1, sp, #0x128
  43a9a8:	ldr	w2, [sp, #156]
  43a9ac:	str	w2, [x1, x0]
  43a9b0:	ldr	w0, [sp, #104]
  43a9b4:	cmp	w0, #0x3fe
  43a9b8:	b.hi	43a9c8 <builtin_keyboard+0x29c>  // b.pmore
  43a9bc:	ldr	w0, [sp, #104]
  43a9c0:	add	w0, w0, #0x1
  43a9c4:	str	w0, [sp, #104]
  43a9c8:	ldr	x0, [sp, #232]
  43a9cc:	ldrb	w0, [x0]
  43a9d0:	cmp	w0, #0x0
  43a9d4:	b.eq	43af24 <builtin_keyboard+0x7f8>  // b.none
  43a9d8:	ldr	w0, [sp, #100]
  43a9dc:	cmp	w0, #0x0
  43a9e0:	b.ge	43aad4 <builtin_keyboard+0x3a8>  // b.tcont
  43a9e4:	ldr	x0, [sp, #184]
  43a9e8:	mov	w1, #0x902                 	// #2306
  43a9ec:	movk	w1, #0x8, lsl #16
  43a9f0:	bl	40bcb0 <open64@plt>
  43a9f4:	str	w0, [sp, #100]
  43a9f8:	ldr	w0, [sp, #100]
  43a9fc:	cmp	w0, #0x0
  43aa00:	b.ge	43aad4 <builtin_keyboard+0x3a8>  // b.tcont
  43aa04:	str	xzr, [sp, #216]
  43aa08:	ldr	x0, [sp, #88]
  43aa0c:	str	x0, [sp, #272]
  43aa10:	mov	w0, #0x3                   	// #3
  43aa14:	str	w0, [sp, #160]
  43aa18:	bl	40b040 <__errno_location@plt>
  43aa1c:	ldr	w0, [x0]
  43aa20:	str	w0, [sp, #164]
  43aa24:	ldr	x0, [sp, #272]
  43aa28:	cmp	x0, #0x0
  43aa2c:	b.eq	43aa68 <builtin_keyboard+0x33c>  // b.none
  43aa30:	mov	w0, #0x1                   	// #1
  43aa34:	bl	40be30 <log_get_max_level_realm@plt>
  43aa38:	mov	w1, w0
  43aa3c:	ldr	w0, [sp, #160]
  43aa40:	cmp	w0, w1
  43aa44:	cset	w0, le
  43aa48:	and	w0, w0, #0xff
  43aa4c:	and	x0, x0, #0xff
  43aa50:	cmp	x0, #0x0
  43aa54:	b.eq	43aa68 <builtin_keyboard+0x33c>  // b.none
  43aa58:	add	x0, sp, #0xd8
  43aa5c:	mov	x1, x0
  43aa60:	ldr	x0, [sp, #272]
  43aa64:	bl	40aba0 <sd_device_get_sysname@plt>
  43aa68:	adrp	x0, 456000 <__func__.9297+0x78>
  43aa6c:	add	x2, x0, #0x783
  43aa70:	ldr	x0, [sp, #216]
  43aa74:	cmp	x0, #0x0
  43aa78:	b.eq	43aa88 <builtin_keyboard+0x35c>  // b.none
  43aa7c:	adrp	x0, 456000 <__func__.9297+0x78>
  43aa80:	add	x0, x0, #0x7c0
  43aa84:	b	43aa8c <builtin_keyboard+0x360>
  43aa88:	mov	x0, #0x0                   	// #0
  43aa8c:	ldr	x3, [sp, #216]
  43aa90:	ldr	x1, [sp, #184]
  43aa94:	str	x1, [sp, #16]
  43aa98:	adrp	x1, 456000 <__func__.9297+0x78>
  43aa9c:	add	x1, x1, #0xb20
  43aaa0:	str	x1, [sp, #8]
  43aaa4:	str	xzr, [sp]
  43aaa8:	mov	x7, #0x0                   	// #0
  43aaac:	mov	x6, x3
  43aab0:	mov	x5, x0
  43aab4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43aab8:	add	x4, x0, #0x998
  43aabc:	mov	w3, #0xcc                  	// #204
  43aac0:	ldr	w1, [sp, #164]
  43aac4:	ldr	w0, [sp, #160]
  43aac8:	bl	40b020 <log_object_internal@plt>
  43aacc:	mov	w19, w0
  43aad0:	b	43af74 <builtin_keyboard+0x848>
  43aad4:	ldr	w0, [sp, #100]
  43aad8:	ldr	w1, [sp, #156]
  43aadc:	ldr	x3, [sp, #232]
  43aae0:	mov	w2, w1
  43aae4:	mov	w1, w0
  43aae8:	ldr	x0, [sp, #88]
  43aaec:	bl	439950 <map_keycode>
  43aaf0:	b	43af30 <builtin_keyboard+0x804>
  43aaf4:	adrp	x0, 456000 <__func__.9297+0x78>
  43aaf8:	add	x1, x0, #0xb40
  43aafc:	ldr	x0, [sp, #224]
  43ab00:	bl	439130 <startswith>
  43ab04:	cmp	x0, #0x0
  43ab08:	b.eq	43aef8 <builtin_keyboard+0x7cc>  // b.none
  43ab0c:	ldr	x0, [sp, #224]
  43ab10:	add	x0, x0, #0xa
  43ab14:	add	x1, sp, #0xc8
  43ab18:	mov	w2, #0x10                  	// #16
  43ab1c:	bl	40b630 <strtoul@plt>
  43ab20:	str	w0, [sp, #116]
  43ab24:	ldr	x0, [sp, #200]
  43ab28:	ldrb	w0, [x0]
  43ab2c:	cmp	w0, #0x0
  43ab30:	b.eq	43abf8 <builtin_keyboard+0x4cc>  // b.none
  43ab34:	str	xzr, [sp, #216]
  43ab38:	ldr	x0, [sp, #88]
  43ab3c:	str	x0, [sp, #264]
  43ab40:	mov	w0, #0x4                   	// #4
  43ab44:	str	w0, [sp, #148]
  43ab48:	str	wzr, [sp, #152]
  43ab4c:	ldr	x0, [sp, #264]
  43ab50:	cmp	x0, #0x0
  43ab54:	b.eq	43ab90 <builtin_keyboard+0x464>  // b.none
  43ab58:	mov	w0, #0x1                   	// #1
  43ab5c:	bl	40be30 <log_get_max_level_realm@plt>
  43ab60:	mov	w1, w0
  43ab64:	ldr	w0, [sp, #148]
  43ab68:	cmp	w0, w1
  43ab6c:	cset	w0, le
  43ab70:	and	w0, w0, #0xff
  43ab74:	and	x0, x0, #0xff
  43ab78:	cmp	x0, #0x0
  43ab7c:	b.eq	43ab90 <builtin_keyboard+0x464>  // b.none
  43ab80:	add	x0, sp, #0xd8
  43ab84:	mov	x1, x0
  43ab88:	ldr	x0, [sp, #264]
  43ab8c:	bl	40aba0 <sd_device_get_sysname@plt>
  43ab90:	adrp	x0, 456000 <__func__.9297+0x78>
  43ab94:	add	x2, x0, #0x783
  43ab98:	ldr	x0, [sp, #216]
  43ab9c:	cmp	x0, #0x0
  43aba0:	b.eq	43abb0 <builtin_keyboard+0x484>  // b.none
  43aba4:	adrp	x0, 456000 <__func__.9297+0x78>
  43aba8:	add	x0, x0, #0x7c0
  43abac:	b	43abb4 <builtin_keyboard+0x488>
  43abb0:	mov	x0, #0x0                   	// #0
  43abb4:	ldr	x3, [sp, #216]
  43abb8:	ldr	x1, [sp, #224]
  43abbc:	str	x1, [sp, #16]
  43abc0:	adrp	x1, 456000 <__func__.9297+0x78>
  43abc4:	add	x1, x1, #0xb50
  43abc8:	str	x1, [sp, #8]
  43abcc:	str	xzr, [sp]
  43abd0:	mov	x7, #0x0                   	// #0
  43abd4:	mov	x6, x3
  43abd8:	mov	x5, x0
  43abdc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43abe0:	add	x4, x0, #0x998
  43abe4:	mov	w3, #0xd6                  	// #214
  43abe8:	ldr	w1, [sp, #152]
  43abec:	ldr	w0, [sp, #148]
  43abf0:	bl	40b020 <log_object_internal@plt>
  43abf4:	b	43af30 <builtin_keyboard+0x804>
  43abf8:	ldr	w0, [sp, #100]
  43abfc:	cmp	w0, #0x0
  43ac00:	b.ge	43acf4 <builtin_keyboard+0x5c8>  // b.tcont
  43ac04:	ldr	x0, [sp, #184]
  43ac08:	mov	w1, #0x902                 	// #2306
  43ac0c:	movk	w1, #0x8, lsl #16
  43ac10:	bl	40bcb0 <open64@plt>
  43ac14:	str	w0, [sp, #100]
  43ac18:	ldr	w0, [sp, #100]
  43ac1c:	cmp	w0, #0x0
  43ac20:	b.ge	43acf4 <builtin_keyboard+0x5c8>  // b.tcont
  43ac24:	str	xzr, [sp, #216]
  43ac28:	ldr	x0, [sp, #88]
  43ac2c:	str	x0, [sp, #240]
  43ac30:	mov	w0, #0x3                   	// #3
  43ac34:	str	w0, [sp, #120]
  43ac38:	bl	40b040 <__errno_location@plt>
  43ac3c:	ldr	w0, [x0]
  43ac40:	str	w0, [sp, #124]
  43ac44:	ldr	x0, [sp, #240]
  43ac48:	cmp	x0, #0x0
  43ac4c:	b.eq	43ac88 <builtin_keyboard+0x55c>  // b.none
  43ac50:	mov	w0, #0x1                   	// #1
  43ac54:	bl	40be30 <log_get_max_level_realm@plt>
  43ac58:	mov	w1, w0
  43ac5c:	ldr	w0, [sp, #120]
  43ac60:	cmp	w0, w1
  43ac64:	cset	w0, le
  43ac68:	and	w0, w0, #0xff
  43ac6c:	and	x0, x0, #0xff
  43ac70:	cmp	x0, #0x0
  43ac74:	b.eq	43ac88 <builtin_keyboard+0x55c>  // b.none
  43ac78:	add	x0, sp, #0xd8
  43ac7c:	mov	x1, x0
  43ac80:	ldr	x0, [sp, #240]
  43ac84:	bl	40aba0 <sd_device_get_sysname@plt>
  43ac88:	adrp	x0, 456000 <__func__.9297+0x78>
  43ac8c:	add	x2, x0, #0x783
  43ac90:	ldr	x0, [sp, #216]
  43ac94:	cmp	x0, #0x0
  43ac98:	b.eq	43aca8 <builtin_keyboard+0x57c>  // b.none
  43ac9c:	adrp	x0, 456000 <__func__.9297+0x78>
  43aca0:	add	x0, x0, #0x7c0
  43aca4:	b	43acac <builtin_keyboard+0x580>
  43aca8:	mov	x0, #0x0                   	// #0
  43acac:	ldr	x3, [sp, #216]
  43acb0:	ldr	x1, [sp, #184]
  43acb4:	str	x1, [sp, #16]
  43acb8:	adrp	x1, 456000 <__func__.9297+0x78>
  43acbc:	add	x1, x1, #0xb20
  43acc0:	str	x1, [sp, #8]
  43acc4:	str	xzr, [sp]
  43acc8:	mov	x7, #0x0                   	// #0
  43accc:	mov	x6, x3
  43acd0:	mov	x5, x0
  43acd4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43acd8:	add	x4, x0, #0x998
  43acdc:	mov	w3, #0xdd                  	// #221
  43ace0:	ldr	w1, [sp, #124]
  43ace4:	ldr	w0, [sp, #120]
  43ace8:	bl	40b020 <log_object_internal@plt>
  43acec:	mov	w19, w0
  43acf0:	b	43af74 <builtin_keyboard+0x848>
  43acf4:	ldr	w0, [sp, #108]
  43acf8:	cmn	w0, #0x1
  43acfc:	b.ne	43aecc <builtin_keyboard+0x7a0>  // b.any
  43ad00:	ldr	w0, [sp, #100]
  43ad04:	add	x1, sp, #0xd0
  43ad08:	mov	x2, x1
  43ad0c:	mov	x1, #0x4520                	// #17696
  43ad10:	movk	x1, #0x8008, lsl #16
  43ad14:	bl	40b5f0 <ioctl@plt>
  43ad18:	str	w0, [sp, #128]
  43ad1c:	ldr	w0, [sp, #128]
  43ad20:	cmp	w0, #0x0
  43ad24:	b.ge	43adf0 <builtin_keyboard+0x6c4>  // b.tcont
  43ad28:	str	xzr, [sp, #216]
  43ad2c:	ldr	x0, [sp, #88]
  43ad30:	str	x0, [sp, #256]
  43ad34:	mov	w0, #0x3                   	// #3
  43ad38:	str	w0, [sp, #140]
  43ad3c:	bl	40b040 <__errno_location@plt>
  43ad40:	ldr	w0, [x0]
  43ad44:	str	w0, [sp, #144]
  43ad48:	ldr	x0, [sp, #256]
  43ad4c:	cmp	x0, #0x0
  43ad50:	b.eq	43ad8c <builtin_keyboard+0x660>  // b.none
  43ad54:	mov	w0, #0x1                   	// #1
  43ad58:	bl	40be30 <log_get_max_level_realm@plt>
  43ad5c:	mov	w1, w0
  43ad60:	ldr	w0, [sp, #140]
  43ad64:	cmp	w0, w1
  43ad68:	cset	w0, le
  43ad6c:	and	w0, w0, #0xff
  43ad70:	and	x0, x0, #0xff
  43ad74:	cmp	x0, #0x0
  43ad78:	b.eq	43ad8c <builtin_keyboard+0x660>  // b.none
  43ad7c:	add	x0, sp, #0xd8
  43ad80:	mov	x1, x0
  43ad84:	ldr	x0, [sp, #256]
  43ad88:	bl	40aba0 <sd_device_get_sysname@plt>
  43ad8c:	adrp	x0, 456000 <__func__.9297+0x78>
  43ad90:	add	x2, x0, #0x783
  43ad94:	ldr	x0, [sp, #216]
  43ad98:	cmp	x0, #0x0
  43ad9c:	b.eq	43adac <builtin_keyboard+0x680>  // b.none
  43ada0:	adrp	x0, 456000 <__func__.9297+0x78>
  43ada4:	add	x0, x0, #0x7c0
  43ada8:	b	43adb0 <builtin_keyboard+0x684>
  43adac:	mov	x0, #0x0                   	// #0
  43adb0:	ldr	x3, [sp, #216]
  43adb4:	adrp	x1, 456000 <__func__.9297+0x78>
  43adb8:	add	x1, x1, #0xb80
  43adbc:	str	x1, [sp, #8]
  43adc0:	str	xzr, [sp]
  43adc4:	mov	x7, #0x0                   	// #0
  43adc8:	mov	x6, x3
  43adcc:	mov	x5, x0
  43add0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43add4:	add	x4, x0, #0x998
  43add8:	mov	w3, #0xe6                  	// #230
  43addc:	ldr	w1, [sp, #144]
  43ade0:	ldr	w0, [sp, #140]
  43ade4:	bl	40b020 <log_object_internal@plt>
  43ade8:	mov	w19, w0
  43adec:	b	43af74 <builtin_keyboard+0x848>
  43adf0:	ldr	x0, [sp, #208]
  43adf4:	and	x0, x0, #0x8
  43adf8:	cmp	x0, #0x0
  43adfc:	cset	w0, ne  // ne = any
  43ae00:	and	w0, w0, #0xff
  43ae04:	str	w0, [sp, #108]
  43ae08:	ldr	w0, [sp, #108]
  43ae0c:	cmp	w0, #0x0
  43ae10:	b.ne	43aecc <builtin_keyboard+0x7a0>  // b.any
  43ae14:	str	xzr, [sp, #216]
  43ae18:	ldr	x0, [sp, #88]
  43ae1c:	str	x0, [sp, #248]
  43ae20:	mov	w0, #0x4                   	// #4
  43ae24:	str	w0, [sp, #132]
  43ae28:	str	wzr, [sp, #136]
  43ae2c:	ldr	x0, [sp, #248]
  43ae30:	cmp	x0, #0x0
  43ae34:	b.eq	43ae70 <builtin_keyboard+0x744>  // b.none
  43ae38:	mov	w0, #0x1                   	// #1
  43ae3c:	bl	40be30 <log_get_max_level_realm@plt>
  43ae40:	mov	w1, w0
  43ae44:	ldr	w0, [sp, #132]
  43ae48:	cmp	w0, w1
  43ae4c:	cset	w0, le
  43ae50:	and	w0, w0, #0xff
  43ae54:	and	x0, x0, #0xff
  43ae58:	cmp	x0, #0x0
  43ae5c:	b.eq	43ae70 <builtin_keyboard+0x744>  // b.none
  43ae60:	add	x0, sp, #0xd8
  43ae64:	mov	x1, x0
  43ae68:	ldr	x0, [sp, #248]
  43ae6c:	bl	40aba0 <sd_device_get_sysname@plt>
  43ae70:	adrp	x0, 456000 <__func__.9297+0x78>
  43ae74:	add	x2, x0, #0x783
  43ae78:	ldr	x0, [sp, #216]
  43ae7c:	cmp	x0, #0x0
  43ae80:	b.eq	43ae90 <builtin_keyboard+0x764>  // b.none
  43ae84:	adrp	x0, 456000 <__func__.9297+0x78>
  43ae88:	add	x0, x0, #0x7c0
  43ae8c:	b	43ae94 <builtin_keyboard+0x768>
  43ae90:	mov	x0, #0x0                   	// #0
  43ae94:	ldr	x3, [sp, #216]
  43ae98:	adrp	x1, 456000 <__func__.9297+0x78>
  43ae9c:	add	x1, x1, #0xb98
  43aea0:	str	x1, [sp, #8]
  43aea4:	str	xzr, [sp]
  43aea8:	mov	x7, #0x0                   	// #0
  43aeac:	mov	x6, x3
  43aeb0:	mov	x5, x0
  43aeb4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43aeb8:	add	x4, x0, #0x998
  43aebc:	mov	w3, #0xea                  	// #234
  43aec0:	ldr	w1, [sp, #136]
  43aec4:	ldr	w0, [sp, #132]
  43aec8:	bl	40b020 <log_object_internal@plt>
  43aecc:	ldr	w0, [sp, #108]
  43aed0:	cmp	w0, #0x0
  43aed4:	b.eq	43af2c <builtin_keyboard+0x800>  // b.none
  43aed8:	ldr	w0, [sp, #100]
  43aedc:	ldr	x1, [sp, #192]
  43aee0:	mov	x3, x1
  43aee4:	ldr	w2, [sp, #116]
  43aee8:	mov	w1, w0
  43aeec:	ldr	x0, [sp, #88]
  43aef0:	bl	439da8 <override_abs>
  43aef4:	b	43af30 <builtin_keyboard+0x804>
  43aef8:	adrp	x0, 456000 <__func__.9297+0x78>
  43aefc:	add	x1, x0, #0xbd0
  43af00:	ldr	x0, [sp, #224]
  43af04:	bl	40b710 <strcmp@plt>
  43af08:	cmp	w0, #0x0
  43af0c:	b.ne	43af30 <builtin_keyboard+0x804>  // b.any
  43af10:	ldr	x0, [sp, #192]
  43af14:	mov	x1, x0
  43af18:	ldr	x0, [sp, #88]
  43af1c:	bl	43a240 <set_trackpoint_sensitivity>
  43af20:	b	43af30 <builtin_keyboard+0x804>
  43af24:	nop
  43af28:	b	43af30 <builtin_keyboard+0x804>
  43af2c:	nop
  43af30:	add	x0, sp, #0xc0
  43af34:	mov	x1, x0
  43af38:	ldr	x0, [sp, #88]
  43af3c:	bl	40a5a0 <sd_device_get_property_next@plt>
  43af40:	str	x0, [sp, #224]
  43af44:	ldr	x0, [sp, #224]
  43af48:	cmp	x0, #0x0
  43af4c:	b.ne	43a874 <builtin_keyboard+0x148>  // b.any
  43af50:	ldr	w0, [sp, #104]
  43af54:	cmp	w0, #0x0
  43af58:	b.eq	43af70 <builtin_keyboard+0x844>  // b.none
  43af5c:	add	x0, sp, #0x128
  43af60:	ldr	w2, [sp, #104]
  43af64:	mov	x1, x0
  43af68:	ldr	x0, [sp, #88]
  43af6c:	bl	439458 <install_force_release>
  43af70:	mov	w19, #0x0                   	// #0
  43af74:	add	x0, sp, #0x64
  43af78:	bl	43910c <closep>
  43af7c:	mov	w1, w19
  43af80:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43af84:	ldr	x0, [x0, #4032]
  43af88:	ldr	x2, [sp, #4392]
  43af8c:	ldr	x0, [x0]
  43af90:	eor	x0, x2, x0
  43af94:	cmp	x0, #0x0
  43af98:	b.eq	43afa0 <builtin_keyboard+0x874>  // b.none
  43af9c:	bl	40b280 <__stack_chk_fail@plt>
  43afa0:	mov	w0, w1
  43afa4:	ldr	x19, [sp, #48]
  43afa8:	ldp	x29, x30, [sp, #32]
  43afac:	mov	x12, #0x1130                	// #4400
  43afb0:	add	sp, sp, x12
  43afb4:	ret

000000000043afb8 <freep>:
  43afb8:	stp	x29, x30, [sp, #-32]!
  43afbc:	mov	x29, sp
  43afc0:	str	x0, [sp, #24]
  43afc4:	ldr	x0, [sp, #24]
  43afc8:	ldr	x0, [x0]
  43afcc:	bl	40ba20 <free@plt>
  43afd0:	nop
  43afd4:	ldp	x29, x30, [sp], #32
  43afd8:	ret

000000000043afdc <size_multiply_overflow>:
  43afdc:	sub	sp, sp, #0x10
  43afe0:	str	x0, [sp, #8]
  43afe4:	str	x1, [sp]
  43afe8:	ldr	x0, [sp]
  43afec:	cmp	x0, #0x0
  43aff0:	cset	w0, ne  // ne = any
  43aff4:	and	w0, w0, #0xff
  43aff8:	and	x0, x0, #0xff
  43affc:	cmp	x0, #0x0
  43b000:	b.eq	43b044 <size_multiply_overflow+0x68>  // b.none
  43b004:	mov	x2, #0x0                   	// #0
  43b008:	ldr	x1, [sp, #8]
  43b00c:	ldr	x0, [sp]
  43b010:	umulh	x0, x1, x0
  43b014:	cmp	x0, #0x0
  43b018:	b.eq	43b020 <size_multiply_overflow+0x44>  // b.none
  43b01c:	mov	x2, #0x1                   	// #1
  43b020:	mov	x0, x2
  43b024:	cmp	x0, #0x0
  43b028:	cset	w0, ne  // ne = any
  43b02c:	and	w0, w0, #0xff
  43b030:	and	x0, x0, #0xff
  43b034:	cmp	x0, #0x0
  43b038:	b.eq	43b044 <size_multiply_overflow+0x68>  // b.none
  43b03c:	mov	w0, #0x1                   	// #1
  43b040:	b	43b048 <size_multiply_overflow+0x6c>
  43b044:	mov	w0, #0x0                   	// #0
  43b048:	and	w0, w0, #0x1
  43b04c:	and	w0, w0, #0xff
  43b050:	add	sp, sp, #0x10
  43b054:	ret

000000000043b058 <isempty>:
  43b058:	sub	sp, sp, #0x10
  43b05c:	str	x0, [sp, #8]
  43b060:	ldr	x0, [sp, #8]
  43b064:	cmp	x0, #0x0
  43b068:	b.eq	43b07c <isempty+0x24>  // b.none
  43b06c:	ldr	x0, [sp, #8]
  43b070:	ldrb	w0, [x0]
  43b074:	cmp	w0, #0x0
  43b078:	b.ne	43b084 <isempty+0x2c>  // b.any
  43b07c:	mov	w0, #0x1                   	// #1
  43b080:	b	43b088 <isempty+0x30>
  43b084:	mov	w0, #0x0                   	// #0
  43b088:	and	w0, w0, #0x1
  43b08c:	and	w0, w0, #0xff
  43b090:	add	sp, sp, #0x10
  43b094:	ret

000000000043b098 <startswith>:
  43b098:	stp	x29, x30, [sp, #-48]!
  43b09c:	mov	x29, sp
  43b0a0:	str	x0, [sp, #24]
  43b0a4:	str	x1, [sp, #16]
  43b0a8:	ldr	x0, [sp, #16]
  43b0ac:	bl	40bd10 <strlen@plt>
  43b0b0:	str	x0, [sp, #40]
  43b0b4:	ldr	x2, [sp, #40]
  43b0b8:	ldr	x1, [sp, #16]
  43b0bc:	ldr	x0, [sp, #24]
  43b0c0:	bl	40ae00 <strncmp@plt>
  43b0c4:	cmp	w0, #0x0
  43b0c8:	b.ne	43b0dc <startswith+0x44>  // b.any
  43b0cc:	ldr	x1, [sp, #24]
  43b0d0:	ldr	x0, [sp, #40]
  43b0d4:	add	x0, x1, x0
  43b0d8:	b	43b0e0 <startswith+0x48>
  43b0dc:	mov	x0, #0x0                   	// #0
  43b0e0:	ldp	x29, x30, [sp], #48
  43b0e4:	ret

000000000043b0e8 <in_charset>:
  43b0e8:	stp	x29, x30, [sp, #-32]!
  43b0ec:	mov	x29, sp
  43b0f0:	str	x0, [sp, #24]
  43b0f4:	str	x1, [sp, #16]
  43b0f8:	ldr	x0, [sp, #24]
  43b0fc:	cmp	x0, #0x0
  43b100:	cset	w0, eq  // eq = none
  43b104:	and	w0, w0, #0xff
  43b108:	and	x0, x0, #0xff
  43b10c:	cmp	x0, #0x0
  43b110:	b.eq	43b13c <in_charset+0x54>  // b.none
  43b114:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b118:	add	x1, x0, #0x9cb
  43b11c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b120:	add	x4, x0, #0xfd0
  43b124:	mov	w3, #0xaf                  	// #175
  43b128:	mov	x2, x1
  43b12c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b130:	add	x1, x0, #0x9e8
  43b134:	mov	w0, #0x1                   	// #1
  43b138:	bl	40abb0 <log_assert_failed_realm@plt>
  43b13c:	ldr	x0, [sp, #16]
  43b140:	cmp	x0, #0x0
  43b144:	cset	w0, eq  // eq = none
  43b148:	and	w0, w0, #0xff
  43b14c:	and	x0, x0, #0xff
  43b150:	cmp	x0, #0x0
  43b154:	b.eq	43b180 <in_charset+0x98>  // b.none
  43b158:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b15c:	add	x1, x0, #0x9cb
  43b160:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b164:	add	x4, x0, #0xfd0
  43b168:	mov	w3, #0xb0                  	// #176
  43b16c:	mov	x2, x1
  43b170:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b174:	add	x1, x0, #0x9f0
  43b178:	mov	w0, #0x1                   	// #1
  43b17c:	bl	40abb0 <log_assert_failed_realm@plt>
  43b180:	ldr	x1, [sp, #16]
  43b184:	ldr	x0, [sp, #24]
  43b188:	bl	40aeb0 <strspn@plt>
  43b18c:	mov	x1, x0
  43b190:	ldr	x0, [sp, #24]
  43b194:	add	x0, x0, x1
  43b198:	ldrb	w0, [x0]
  43b19c:	cmp	w0, #0x0
  43b1a0:	cset	w0, eq  // eq = none
  43b1a4:	and	w0, w0, #0xff
  43b1a8:	ldp	x29, x30, [sp], #32
  43b1ac:	ret

000000000043b1b0 <closep>:
  43b1b0:	stp	x29, x30, [sp, #-32]!
  43b1b4:	mov	x29, sp
  43b1b8:	str	x0, [sp, #24]
  43b1bc:	ldr	x0, [sp, #24]
  43b1c0:	ldr	w0, [x0]
  43b1c4:	bl	40aad0 <safe_close@plt>
  43b1c8:	nop
  43b1cc:	ldp	x29, x30, [sp], #32
  43b1d0:	ret

000000000043b1d4 <closedirp>:
  43b1d4:	stp	x29, x30, [sp, #-32]!
  43b1d8:	mov	x29, sp
  43b1dc:	str	x0, [sp, #24]
  43b1e0:	ldr	x0, [sp, #24]
  43b1e4:	ldr	x0, [x0]
  43b1e8:	cmp	x0, #0x0
  43b1ec:	b.eq	43b1fc <closedirp+0x28>  // b.none
  43b1f0:	ldr	x0, [sp, #24]
  43b1f4:	ldr	x0, [x0]
  43b1f8:	bl	40adc0 <closedir@plt>
  43b1fc:	nop
  43b200:	ldp	x29, x30, [sp], #32
  43b204:	ret

000000000043b208 <naming_scheme_has>:
  43b208:	stp	x29, x30, [sp, #-32]!
  43b20c:	mov	x29, sp
  43b210:	str	w0, [sp, #28]
  43b214:	bl	446dec <naming_scheme>
  43b218:	ldr	w0, [x0, #8]
  43b21c:	mvn	w1, w0
  43b220:	ldr	w0, [sp, #28]
  43b224:	and	w0, w1, w0
  43b228:	cmp	w0, #0x0
  43b22c:	cset	w0, eq  // eq = none
  43b230:	and	w0, w0, #0xff
  43b234:	ldp	x29, x30, [sp], #32
  43b238:	ret

000000000043b23c <safe_atolu>:
  43b23c:	stp	x29, x30, [sp, #-32]!
  43b240:	mov	x29, sp
  43b244:	str	x0, [sp, #24]
  43b248:	str	x1, [sp, #16]
  43b24c:	ldr	x1, [sp, #16]
  43b250:	ldr	x0, [sp, #24]
  43b254:	bl	40a610 <safe_atollu@plt>
  43b258:	ldp	x29, x30, [sp], #32
  43b25c:	ret

000000000043b260 <sd_device_unrefp>:
  43b260:	stp	x29, x30, [sp, #-32]!
  43b264:	mov	x29, sp
  43b268:	str	x0, [sp, #24]
  43b26c:	ldr	x0, [sp, #24]
  43b270:	ldr	x0, [x0]
  43b274:	cmp	x0, #0x0
  43b278:	b.eq	43b288 <sd_device_unrefp+0x28>  // b.none
  43b27c:	ldr	x0, [sp, #24]
  43b280:	ldr	x0, [x0]
  43b284:	bl	40baf0 <sd_device_unref@plt>
  43b288:	nop
  43b28c:	ldp	x29, x30, [sp], #32
  43b290:	ret

000000000043b294 <skip_virtio>:
  43b294:	stp	x29, x30, [sp, #-64]!
  43b298:	mov	x29, sp
  43b29c:	str	x0, [sp, #24]
  43b2a0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43b2a4:	ldr	x0, [x0, #4032]
  43b2a8:	ldr	x1, [x0]
  43b2ac:	str	x1, [sp, #56]
  43b2b0:	mov	x1, #0x0                   	// #0
  43b2b4:	ldr	x0, [sp, #24]
  43b2b8:	str	x0, [sp, #40]
  43b2bc:	b	43b30c <skip_virtio+0x78>
  43b2c0:	ldr	x0, [sp, #40]
  43b2c4:	add	x1, sp, #0x30
  43b2c8:	bl	40af80 <sd_device_get_subsystem@plt>
  43b2cc:	cmp	w0, #0x0
  43b2d0:	b.lt	43b31c <skip_virtio+0x88>  // b.tstop
  43b2d4:	ldr	x2, [sp, #48]
  43b2d8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b2dc:	add	x1, x0, #0x9f8
  43b2e0:	mov	x0, x2
  43b2e4:	bl	40b710 <strcmp@plt>
  43b2e8:	cmp	w0, #0x0
  43b2ec:	b.ne	43b324 <skip_virtio+0x90>  // b.any
  43b2f0:	ldr	x0, [sp, #40]
  43b2f4:	add	x1, sp, #0x28
  43b2f8:	bl	40be60 <sd_device_get_parent@plt>
  43b2fc:	cmp	w0, #0x0
  43b300:	b.ge	43b30c <skip_virtio+0x78>  // b.tcont
  43b304:	mov	x0, #0x0                   	// #0
  43b308:	b	43b32c <skip_virtio+0x98>
  43b30c:	ldr	x0, [sp, #40]
  43b310:	cmp	x0, #0x0
  43b314:	b.ne	43b2c0 <skip_virtio+0x2c>  // b.any
  43b318:	b	43b328 <skip_virtio+0x94>
  43b31c:	nop
  43b320:	b	43b328 <skip_virtio+0x94>
  43b324:	nop
  43b328:	ldr	x0, [sp, #40]
  43b32c:	mov	x1, x0
  43b330:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43b334:	ldr	x0, [x0, #4032]
  43b338:	ldr	x2, [sp, #56]
  43b33c:	ldr	x0, [x0]
  43b340:	eor	x0, x2, x0
  43b344:	cmp	x0, #0x0
  43b348:	b.eq	43b350 <skip_virtio+0xbc>  // b.none
  43b34c:	bl	40b280 <__stack_chk_fail@plt>
  43b350:	mov	x0, x1
  43b354:	ldp	x29, x30, [sp], #64
  43b358:	ret

000000000043b35c <get_virtfn_info>:
  43b35c:	stp	x29, x30, [sp, #-224]!
  43b360:	mov	x29, sp
  43b364:	stp	x19, x20, [sp, #16]
  43b368:	str	x0, [x29, #56]
  43b36c:	str	x1, [x29, #48]
  43b370:	str	x2, [x29, #40]
  43b374:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43b378:	ldr	x0, [x0, #4032]
  43b37c:	ldr	x1, [x0]
  43b380:	str	x1, [x29, #216]
  43b384:	mov	x1, #0x0                   	// #0
  43b388:	str	xzr, [x29, #72]
  43b38c:	str	xzr, [x29, #88]
  43b390:	str	xzr, [x29, #96]
  43b394:	str	xzr, [x29, #104]
  43b398:	ldr	x0, [x29, #56]
  43b39c:	cmp	x0, #0x0
  43b3a0:	cset	w0, eq  // eq = none
  43b3a4:	and	w0, w0, #0xff
  43b3a8:	and	x0, x0, #0xff
  43b3ac:	cmp	x0, #0x0
  43b3b0:	b.eq	43b3dc <get_virtfn_info+0x80>  // b.none
  43b3b4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b3b8:	add	x1, x0, #0xa03
  43b3bc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b3c0:	add	x4, x0, #0xf88
  43b3c4:	mov	w3, #0x6e                  	// #110
  43b3c8:	mov	x2, x1
  43b3cc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b3d0:	add	x1, x0, #0xa28
  43b3d4:	mov	w0, #0x1                   	// #1
  43b3d8:	bl	40abb0 <log_assert_failed_realm@plt>
  43b3dc:	ldr	x0, [x29, #48]
  43b3e0:	cmp	x0, #0x0
  43b3e4:	cset	w0, eq  // eq = none
  43b3e8:	and	w0, w0, #0xff
  43b3ec:	and	x0, x0, #0xff
  43b3f0:	cmp	x0, #0x0
  43b3f4:	b.eq	43b420 <get_virtfn_info+0xc4>  // b.none
  43b3f8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b3fc:	add	x1, x0, #0xa03
  43b400:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b404:	add	x4, x0, #0xf88
  43b408:	mov	w3, #0x6f                  	// #111
  43b40c:	mov	x2, x1
  43b410:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b414:	add	x1, x0, #0xa30
  43b418:	mov	w0, #0x1                   	// #1
  43b41c:	bl	40abb0 <log_assert_failed_realm@plt>
  43b420:	ldr	x0, [x29, #40]
  43b424:	cmp	x0, #0x0
  43b428:	cset	w0, eq  // eq = none
  43b42c:	and	w0, w0, #0xff
  43b430:	and	x0, x0, #0xff
  43b434:	cmp	x0, #0x0
  43b438:	b.eq	43b464 <get_virtfn_info+0x108>  // b.none
  43b43c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b440:	add	x1, x0, #0xa03
  43b444:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b448:	add	x4, x0, #0xf88
  43b44c:	mov	w3, #0x70                  	// #112
  43b450:	mov	x2, x1
  43b454:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b458:	add	x1, x0, #0xa38
  43b45c:	mov	w0, #0x1                   	// #1
  43b460:	bl	40abb0 <log_assert_failed_realm@plt>
  43b464:	ldr	x0, [x29, #48]
  43b468:	ldr	x0, [x0, #16]
  43b46c:	add	x1, x29, #0x50
  43b470:	bl	40bd50 <sd_device_get_syspath@plt>
  43b474:	str	w0, [x29, #68]
  43b478:	ldr	w0, [x29, #68]
  43b47c:	cmp	w0, #0x0
  43b480:	b.ge	43b48c <get_virtfn_info+0x130>  // b.tcont
  43b484:	ldr	w20, [x29, #68]
  43b488:	b	43b854 <get_virtfn_info+0x4f8>
  43b48c:	ldr	x0, [x29, #80]
  43b490:	str	x0, [x29, #184]
  43b494:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b498:	add	x0, x0, #0xa40
  43b49c:	str	x0, [x29, #192]
  43b4a0:	str	xzr, [x29, #136]
  43b4a4:	str	xzr, [x29, #144]
  43b4a8:	b	43b4dc <get_virtfn_info+0x180>
  43b4ac:	ldr	x0, [x29, #144]
  43b4b0:	lsl	x0, x0, #3
  43b4b4:	add	x1, x29, #0xb8
  43b4b8:	ldr	x0, [x1, x0]
  43b4bc:	bl	40bd10 <strlen@plt>
  43b4c0:	mov	x1, x0
  43b4c4:	ldr	x0, [x29, #136]
  43b4c8:	add	x0, x0, x1
  43b4cc:	str	x0, [x29, #136]
  43b4d0:	ldr	x0, [x29, #144]
  43b4d4:	add	x0, x0, #0x1
  43b4d8:	str	x0, [x29, #144]
  43b4dc:	ldr	x0, [x29, #144]
  43b4e0:	cmp	x0, #0x1
  43b4e4:	b.hi	43b500 <get_virtfn_info+0x1a4>  // b.pmore
  43b4e8:	ldr	x0, [x29, #144]
  43b4ec:	lsl	x0, x0, #3
  43b4f0:	add	x1, x29, #0xb8
  43b4f4:	ldr	x0, [x1, x0]
  43b4f8:	cmp	x0, #0x0
  43b4fc:	b.ne	43b4ac <get_virtfn_info+0x150>  // b.any
  43b500:	ldr	x0, [x29, #136]
  43b504:	add	x0, x0, #0x1
  43b508:	str	x0, [x29, #152]
  43b50c:	ldr	x1, [x29, #152]
  43b510:	mov	x0, #0x1                   	// #1
  43b514:	bl	43afdc <size_multiply_overflow>
  43b518:	and	w0, w0, #0xff
  43b51c:	and	x0, x0, #0xff
  43b520:	cmp	x0, #0x0
  43b524:	b.eq	43b550 <get_virtfn_info+0x1f4>  // b.none
  43b528:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b52c:	add	x1, x0, #0xa03
  43b530:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b534:	add	x4, x0, #0xf88
  43b538:	mov	w3, #0x77                  	// #119
  43b53c:	mov	x2, x1
  43b540:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b544:	add	x1, x0, #0xa48
  43b548:	mov	w0, #0x1                   	// #1
  43b54c:	bl	40abb0 <log_assert_failed_realm@plt>
  43b550:	ldr	x0, [x29, #152]
  43b554:	cmp	x0, #0x400, lsl #12
  43b558:	cset	w0, hi  // hi = pmore
  43b55c:	and	w0, w0, #0xff
  43b560:	and	x0, x0, #0xff
  43b564:	cmp	x0, #0x0
  43b568:	b.eq	43b594 <get_virtfn_info+0x238>  // b.none
  43b56c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b570:	add	x1, x0, #0xa03
  43b574:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b578:	add	x4, x0, #0xf88
  43b57c:	mov	w3, #0x77                  	// #119
  43b580:	mov	x2, x1
  43b584:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b588:	add	x1, x0, #0xa78
  43b58c:	mov	w0, #0x1                   	// #1
  43b590:	bl	40abb0 <log_assert_failed_realm@plt>
  43b594:	ldr	x0, [x29, #152]
  43b598:	add	x0, x0, #0xf
  43b59c:	lsr	x0, x0, #4
  43b5a0:	lsl	x0, x0, #4
  43b5a4:	sub	sp, sp, x0
  43b5a8:	mov	x0, sp
  43b5ac:	add	x0, x0, #0xf
  43b5b0:	lsr	x0, x0, #4
  43b5b4:	lsl	x0, x0, #4
  43b5b8:	str	x0, [x29, #160]
  43b5bc:	ldr	x0, [x29, #160]
  43b5c0:	str	x0, [x29, #128]
  43b5c4:	str	xzr, [x29, #144]
  43b5c8:	b	43b5f8 <get_virtfn_info+0x29c>
  43b5cc:	ldr	x0, [x29, #144]
  43b5d0:	lsl	x0, x0, #3
  43b5d4:	add	x1, x29, #0xb8
  43b5d8:	ldr	x0, [x1, x0]
  43b5dc:	mov	x1, x0
  43b5e0:	ldr	x0, [x29, #128]
  43b5e4:	bl	40a510 <stpcpy@plt>
  43b5e8:	str	x0, [x29, #128]
  43b5ec:	ldr	x0, [x29, #144]
  43b5f0:	add	x0, x0, #0x1
  43b5f4:	str	x0, [x29, #144]
  43b5f8:	ldr	x0, [x29, #144]
  43b5fc:	cmp	x0, #0x1
  43b600:	b.hi	43b61c <get_virtfn_info+0x2c0>  // b.pmore
  43b604:	ldr	x0, [x29, #144]
  43b608:	lsl	x0, x0, #3
  43b60c:	add	x1, x29, #0xb8
  43b610:	ldr	x0, [x1, x0]
  43b614:	cmp	x0, #0x0
  43b618:	b.ne	43b5cc <get_virtfn_info+0x270>  // b.any
  43b61c:	ldr	x0, [x29, #128]
  43b620:	strb	wzr, [x0]
  43b624:	ldr	x0, [x29, #160]
  43b628:	str	x0, [x29, #168]
  43b62c:	add	x0, x29, #0x58
  43b630:	mov	x4, #0x0                   	// #0
  43b634:	mov	x3, x0
  43b638:	mov	w2, #0x0                   	// #0
  43b63c:	mov	x1, #0x0                   	// #0
  43b640:	ldr	x0, [x29, #168]
  43b644:	bl	40a700 <chase_symlinks@plt>
  43b648:	str	w0, [x29, #68]
  43b64c:	ldr	w0, [x29, #68]
  43b650:	cmp	w0, #0x0
  43b654:	b.ge	43b660 <get_virtfn_info+0x304>  // b.tcont
  43b658:	ldr	w20, [x29, #68]
  43b65c:	b	43b854 <get_virtfn_info+0x4f8>
  43b660:	ldr	x1, [x29, #88]
  43b664:	add	x0, x29, #0x48
  43b668:	bl	40bc40 <sd_device_new_from_syspath@plt>
  43b66c:	str	w0, [x29, #68]
  43b670:	ldr	w0, [x29, #68]
  43b674:	cmp	w0, #0x0
  43b678:	b.ge	43b684 <get_virtfn_info+0x328>  // b.tcont
  43b67c:	ldr	w20, [x29, #68]
  43b680:	b	43b854 <get_virtfn_info+0x4f8>
  43b684:	ldr	x0, [x29, #88]
  43b688:	bl	40b770 <opendir@plt>
  43b68c:	str	x0, [x29, #104]
  43b690:	ldr	x0, [x29, #104]
  43b694:	cmp	x0, #0x0
  43b698:	b.ne	43b6ac <get_virtfn_info+0x350>  // b.any
  43b69c:	bl	40b040 <__errno_location@plt>
  43b6a0:	ldr	w0, [x0]
  43b6a4:	neg	w20, w0
  43b6a8:	b	43b854 <get_virtfn_info+0x4f8>
  43b6ac:	bl	40b040 <__errno_location@plt>
  43b6b0:	str	wzr, [x0]
  43b6b4:	ldr	x0, [x29, #104]
  43b6b8:	bl	40abe0 <readdir64@plt>
  43b6bc:	str	x0, [x29, #120]
  43b6c0:	ldr	x0, [x29, #120]
  43b6c4:	cmp	x0, #0x0
  43b6c8:	b.ne	43b6dc <get_virtfn_info+0x380>  // b.any
  43b6cc:	bl	40b040 <__errno_location@plt>
  43b6d0:	ldr	w0, [x0]
  43b6d4:	cmp	w0, #0x0
  43b6d8:	b	43b808 <get_virtfn_info+0x4ac>
  43b6dc:	str	xzr, [x29, #112]
  43b6e0:	ldr	x0, [x29, #120]
  43b6e4:	add	x2, x0, #0x13
  43b6e8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b6ec:	add	x1, x0, #0xa98
  43b6f0:	mov	x0, x2
  43b6f4:	bl	43b098 <startswith>
  43b6f8:	cmp	x0, #0x0
  43b6fc:	b.ne	43b708 <get_virtfn_info+0x3ac>  // b.any
  43b700:	mov	w19, #0x0                   	// #0
  43b704:	b	43b7c4 <get_virtfn_info+0x468>
  43b708:	ldr	x3, [x29, #88]
  43b70c:	ldr	x0, [x29, #120]
  43b710:	add	x0, x0, #0x13
  43b714:	mov	x2, #0xffffffffffffffff    	// #-1
  43b718:	mov	x1, x0
  43b71c:	mov	x0, x3
  43b720:	bl	40b2f0 <path_join_internal@plt>
  43b724:	str	x0, [x29, #112]
  43b728:	ldr	x0, [x29, #112]
  43b72c:	cmp	x0, #0x0
  43b730:	b.ne	43b740 <get_virtfn_info+0x3e4>  // b.any
  43b734:	mov	w20, #0xfffffff4            	// #-12
  43b738:	mov	w19, #0x1                   	// #1
  43b73c:	b	43b7c4 <get_virtfn_info+0x468>
  43b740:	ldr	x0, [x29, #112]
  43b744:	add	x1, x29, #0x60
  43b748:	mov	x4, #0x0                   	// #0
  43b74c:	mov	x3, x1
  43b750:	mov	w2, #0x0                   	// #0
  43b754:	mov	x1, #0x0                   	// #0
  43b758:	bl	40a700 <chase_symlinks@plt>
  43b75c:	cmp	w0, #0x0
  43b760:	b.ge	43b76c <get_virtfn_info+0x410>  // b.tcont
  43b764:	mov	w19, #0x0                   	// #0
  43b768:	b	43b7c4 <get_virtfn_info+0x468>
  43b76c:	ldr	x0, [x29, #80]
  43b770:	ldr	x1, [x29, #96]
  43b774:	bl	40b710 <strcmp@plt>
  43b778:	cmp	w0, #0x0
  43b77c:	b.ne	43b7c0 <get_virtfn_info+0x464>  // b.any
  43b780:	ldr	x0, [x29, #120]
  43b784:	add	x0, x0, #0x19
  43b788:	add	x4, x29, #0xc8
  43b78c:	mov	x3, x0
  43b790:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b794:	add	x2, x0, #0xaa0
  43b798:	mov	x1, #0x10                  	// #16
  43b79c:	mov	x0, x4
  43b7a0:	bl	40a870 <snprintf@plt>
  43b7a4:	cmp	w0, #0xf
  43b7a8:	b.ls	43b7b8 <get_virtfn_info+0x45c>  // b.plast
  43b7ac:	mov	w20, #0xfffffffe            	// #-2
  43b7b0:	mov	w19, #0x1                   	// #1
  43b7b4:	b	43b7c4 <get_virtfn_info+0x468>
  43b7b8:	mov	w19, #0x2                   	// #2
  43b7bc:	b	43b7c4 <get_virtfn_info+0x468>
  43b7c0:	mov	w19, #0x3                   	// #3
  43b7c4:	add	x0, x29, #0x70
  43b7c8:	bl	43afb8 <freep>
  43b7cc:	cmp	w19, #0x3
  43b7d0:	b.eq	43b7f0 <get_virtfn_info+0x494>  // b.none
  43b7d4:	cmp	w19, #0x3
  43b7d8:	b.gt	43b808 <get_virtfn_info+0x4ac>
  43b7dc:	cmp	w19, #0x0
  43b7e0:	b.eq	43b7f0 <get_virtfn_info+0x494>  // b.none
  43b7e4:	cmp	w19, #0x1
  43b7e8:	b.eq	43b854 <get_virtfn_info+0x4f8>  // b.none
  43b7ec:	b	43b808 <get_virtfn_info+0x4ac>
  43b7f0:	bl	40b040 <__errno_location@plt>
  43b7f4:	str	wzr, [x0]
  43b7f8:	ldr	x0, [x29, #104]
  43b7fc:	bl	40abe0 <readdir64@plt>
  43b800:	str	x0, [x29, #120]
  43b804:	b	43b6c0 <get_virtfn_info+0x364>
  43b808:	add	x0, x29, #0xc8
  43b80c:	bl	43b058 <isempty>
  43b810:	and	w0, w0, #0xff
  43b814:	cmp	w0, #0x0
  43b818:	b.eq	43b824 <get_virtfn_info+0x4c8>  // b.none
  43b81c:	mov	w20, #0xfffffffe            	// #-2
  43b820:	b	43b854 <get_virtfn_info+0x4f8>
  43b824:	ldr	x0, [x29, #72]
  43b828:	str	x0, [x29, #176]
  43b82c:	str	xzr, [x29, #72]
  43b830:	ldr	x1, [x29, #176]
  43b834:	ldr	x0, [x29, #40]
  43b838:	str	x1, [x0]
  43b83c:	ldr	x0, [x29, #40]
  43b840:	add	x0, x0, #0x8
  43b844:	add	x1, x29, #0xc8
  43b848:	mov	x2, #0x10                  	// #16
  43b84c:	bl	40aa90 <strncpy@plt>
  43b850:	mov	w20, #0x0                   	// #0
  43b854:	add	x0, x29, #0x68
  43b858:	bl	43b1d4 <closedirp>
  43b85c:	add	x0, x29, #0x60
  43b860:	bl	43afb8 <freep>
  43b864:	add	x0, x29, #0x58
  43b868:	bl	43afb8 <freep>
  43b86c:	add	x0, x29, #0x48
  43b870:	bl	43b260 <sd_device_unrefp>
  43b874:	mov	w1, w20
  43b878:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43b87c:	ldr	x0, [x0, #4032]
  43b880:	ldr	x2, [x29, #216]
  43b884:	ldr	x0, [x0]
  43b888:	eor	x0, x2, x0
  43b88c:	cmp	x0, #0x0
  43b890:	b.eq	43b898 <get_virtfn_info+0x53c>  // b.none
  43b894:	bl	40b280 <__stack_chk_fail@plt>
  43b898:	mov	w0, w1
  43b89c:	mov	sp, x29
  43b8a0:	ldp	x19, x20, [sp, #16]
  43b8a4:	ldp	x29, x30, [sp], #224
  43b8a8:	ret

000000000043b8ac <dev_pci_onboard>:
  43b8ac:	stp	x29, x30, [sp, #-96]!
  43b8b0:	mov	x29, sp
  43b8b4:	str	x0, [sp, #24]
  43b8b8:	str	x1, [sp, #16]
  43b8bc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43b8c0:	ldr	x0, [x0, #4032]
  43b8c4:	ldr	x1, [x0]
  43b8c8:	str	x1, [sp, #88]
  43b8cc:	mov	x1, #0x0                   	// #0
  43b8d0:	str	xzr, [sp, #72]
  43b8d4:	str	xzr, [sp, #56]
  43b8d8:	ldr	x0, [sp, #16]
  43b8dc:	ldr	x3, [x0, #16]
  43b8e0:	add	x0, sp, #0x30
  43b8e4:	mov	x2, x0
  43b8e8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b8ec:	add	x1, x0, #0xaa8
  43b8f0:	mov	x0, x3
  43b8f4:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43b8f8:	cmp	w0, #0x0
  43b8fc:	b.ge	43b938 <dev_pci_onboard+0x8c>  // b.tcont
  43b900:	ldr	x0, [sp, #16]
  43b904:	ldr	x3, [x0, #16]
  43b908:	add	x0, sp, #0x30
  43b90c:	mov	x2, x0
  43b910:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b914:	add	x1, x0, #0xab8
  43b918:	mov	x0, x3
  43b91c:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43b920:	str	w0, [sp, #36]
  43b924:	ldr	w0, [sp, #36]
  43b928:	cmp	w0, #0x0
  43b92c:	b.ge	43b938 <dev_pci_onboard+0x8c>  // b.tcont
  43b930:	ldr	w0, [sp, #36]
  43b934:	b	43bad4 <dev_pci_onboard+0x228>
  43b938:	ldr	x0, [sp, #48]
  43b93c:	add	x1, sp, #0x28
  43b940:	bl	43b23c <safe_atolu>
  43b944:	str	w0, [sp, #36]
  43b948:	ldr	w0, [sp, #36]
  43b94c:	cmp	w0, #0x0
  43b950:	b.ge	43b95c <dev_pci_onboard+0xb0>  // b.tcont
  43b954:	ldr	w0, [sp, #36]
  43b958:	b	43bad4 <dev_pci_onboard+0x228>
  43b95c:	ldr	x0, [sp, #40]
  43b960:	cmp	x0, #0x0
  43b964:	b.ne	43b98c <dev_pci_onboard+0xe0>  // b.any
  43b968:	mov	w0, #0x8                   	// #8
  43b96c:	bl	43b208 <naming_scheme_has>
  43b970:	and	w0, w0, #0xff
  43b974:	eor	w0, w0, #0x1
  43b978:	and	w0, w0, #0xff
  43b97c:	cmp	w0, #0x0
  43b980:	b.eq	43b98c <dev_pci_onboard+0xe0>  // b.none
  43b984:	mov	w0, #0xffffffea            	// #-22
  43b988:	b	43bad4 <dev_pci_onboard+0x228>
  43b98c:	ldr	x1, [sp, #40]
  43b990:	mov	x0, #0x3fff                	// #16383
  43b994:	cmp	x1, x0
  43b998:	b.ls	43b9a4 <dev_pci_onboard+0xf8>  // b.plast
  43b99c:	mov	w0, #0xfffffffe            	// #-2
  43b9a0:	b	43bad4 <dev_pci_onboard+0x228>
  43b9a4:	add	x0, sp, #0x30
  43b9a8:	mov	x2, x0
  43b9ac:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b9b0:	add	x1, x0, #0xac0
  43b9b4:	ldr	x0, [sp, #24]
  43b9b8:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43b9bc:	cmp	w0, #0x0
  43b9c0:	b.lt	43b9d8 <dev_pci_onboard+0x12c>  // b.tstop
  43b9c4:	ldr	x0, [sp, #48]
  43b9c8:	mov	w2, #0xa                   	// #10
  43b9cc:	mov	x1, #0x0                   	// #0
  43b9d0:	bl	40b630 <strtoul@plt>
  43b9d4:	str	x0, [sp, #72]
  43b9d8:	add	x0, sp, #0x38
  43b9dc:	mov	x2, x0
  43b9e0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43b9e4:	add	x1, x0, #0xad0
  43b9e8:	ldr	x0, [sp, #24]
  43b9ec:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43b9f0:	ldr	x0, [sp, #16]
  43b9f4:	add	x0, x0, #0x38
  43b9f8:	str	x0, [sp, #64]
  43b9fc:	mov	x0, #0x10                  	// #16
  43ba00:	str	x0, [sp, #80]
  43ba04:	ldr	x0, [sp, #40]
  43ba08:	add	x4, sp, #0x40
  43ba0c:	mov	x3, x0
  43ba10:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ba14:	add	x2, x0, #0xae0
  43ba18:	ldr	x1, [sp, #80]
  43ba1c:	mov	x0, x4
  43ba20:	bl	40a3e0 <strpcpyf@plt>
  43ba24:	str	x0, [sp, #80]
  43ba28:	ldr	x0, [sp, #56]
  43ba2c:	cmp	x0, #0x0
  43ba30:	b.eq	43ba5c <dev_pci_onboard+0x1b0>  // b.none
  43ba34:	ldr	x0, [sp, #56]
  43ba38:	add	x4, sp, #0x40
  43ba3c:	mov	x3, x0
  43ba40:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ba44:	add	x2, x0, #0xae8
  43ba48:	ldr	x1, [sp, #80]
  43ba4c:	mov	x0, x4
  43ba50:	bl	40a3e0 <strpcpyf@plt>
  43ba54:	str	x0, [sp, #80]
  43ba58:	b	43ba88 <dev_pci_onboard+0x1dc>
  43ba5c:	ldr	x0, [sp, #72]
  43ba60:	cmp	x0, #0x0
  43ba64:	b.eq	43ba88 <dev_pci_onboard+0x1dc>  // b.none
  43ba68:	add	x4, sp, #0x40
  43ba6c:	ldr	x3, [sp, #72]
  43ba70:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ba74:	add	x2, x0, #0xaf0
  43ba78:	ldr	x1, [sp, #80]
  43ba7c:	mov	x0, x4
  43ba80:	bl	40a3e0 <strpcpyf@plt>
  43ba84:	str	x0, [sp, #80]
  43ba88:	ldr	x0, [sp, #80]
  43ba8c:	cmp	x0, #0x0
  43ba90:	b.ne	43ba9c <dev_pci_onboard+0x1f0>  // b.any
  43ba94:	ldr	x0, [sp, #16]
  43ba98:	strb	wzr, [x0, #56]
  43ba9c:	ldr	x0, [sp, #16]
  43baa0:	ldr	x3, [x0, #16]
  43baa4:	ldr	x0, [sp, #16]
  43baa8:	add	x0, x0, #0x48
  43baac:	mov	x2, x0
  43bab0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bab4:	add	x1, x0, #0xaf8
  43bab8:	mov	x0, x3
  43babc:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43bac0:	cmp	w0, #0x0
  43bac4:	b.ge	43bad0 <dev_pci_onboard+0x224>  // b.tcont
  43bac8:	ldr	x0, [sp, #16]
  43bacc:	str	xzr, [x0, #72]
  43bad0:	mov	w0, #0x0                   	// #0
  43bad4:	mov	w1, w0
  43bad8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43badc:	ldr	x0, [x0, #4032]
  43bae0:	ldr	x2, [sp, #88]
  43bae4:	ldr	x0, [x0]
  43bae8:	eor	x0, x2, x0
  43baec:	cmp	x0, #0x0
  43baf0:	b.eq	43baf8 <dev_pci_onboard+0x24c>  // b.none
  43baf4:	bl	40b280 <__stack_chk_fail@plt>
  43baf8:	mov	w0, w1
  43bafc:	ldp	x29, x30, [sp], #96
  43bb00:	ret

000000000043bb04 <is_pci_multifunction>:
  43bb04:	stp	x29, x30, [sp, #-208]!
  43bb08:	mov	x29, sp
  43bb0c:	str	x19, [sp, #16]
  43bb10:	str	x0, [x29, #40]
  43bb14:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43bb18:	ldr	x0, [x0, #4032]
  43bb1c:	ldr	x1, [x0]
  43bb20:	str	x1, [x29, #200]
  43bb24:	mov	x1, #0x0                   	// #0
  43bb28:	mov	w0, #0xffffffff            	// #-1
  43bb2c:	str	w0, [x29, #60]
  43bb30:	add	x0, x29, #0x40
  43bb34:	mov	x1, x0
  43bb38:	ldr	x0, [x29, #40]
  43bb3c:	bl	40bd50 <sd_device_get_syspath@plt>
  43bb40:	cmp	w0, #0x0
  43bb44:	b.ge	43bb50 <is_pci_multifunction+0x4c>  // b.tcont
  43bb48:	mov	w19, #0x0                   	// #0
  43bb4c:	b	43bd48 <is_pci_multifunction+0x244>
  43bb50:	ldr	x0, [x29, #64]
  43bb54:	str	x0, [x29, #120]
  43bb58:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bb5c:	add	x0, x0, #0xb00
  43bb60:	str	x0, [x29, #128]
  43bb64:	str	xzr, [x29, #80]
  43bb68:	str	xzr, [x29, #88]
  43bb6c:	b	43bba0 <is_pci_multifunction+0x9c>
  43bb70:	ldr	x0, [x29, #88]
  43bb74:	lsl	x0, x0, #3
  43bb78:	add	x1, x29, #0x78
  43bb7c:	ldr	x0, [x1, x0]
  43bb80:	bl	40bd10 <strlen@plt>
  43bb84:	mov	x1, x0
  43bb88:	ldr	x0, [x29, #80]
  43bb8c:	add	x0, x0, x1
  43bb90:	str	x0, [x29, #80]
  43bb94:	ldr	x0, [x29, #88]
  43bb98:	add	x0, x0, #0x1
  43bb9c:	str	x0, [x29, #88]
  43bba0:	ldr	x0, [x29, #88]
  43bba4:	cmp	x0, #0x1
  43bba8:	b.hi	43bbc4 <is_pci_multifunction+0xc0>  // b.pmore
  43bbac:	ldr	x0, [x29, #88]
  43bbb0:	lsl	x0, x0, #3
  43bbb4:	add	x1, x29, #0x78
  43bbb8:	ldr	x0, [x1, x0]
  43bbbc:	cmp	x0, #0x0
  43bbc0:	b.ne	43bb70 <is_pci_multifunction+0x6c>  // b.any
  43bbc4:	ldr	x0, [x29, #80]
  43bbc8:	add	x0, x0, #0x1
  43bbcc:	str	x0, [x29, #96]
  43bbd0:	ldr	x1, [x29, #96]
  43bbd4:	mov	x0, #0x1                   	// #1
  43bbd8:	bl	43afdc <size_multiply_overflow>
  43bbdc:	and	w0, w0, #0xff
  43bbe0:	and	x0, x0, #0xff
  43bbe4:	cmp	x0, #0x0
  43bbe8:	b.eq	43bc14 <is_pci_multifunction+0x110>  // b.none
  43bbec:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bbf0:	add	x1, x0, #0xa03
  43bbf4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bbf8:	add	x4, x0, #0xf98
  43bbfc:	mov	w3, #0xe1                  	// #225
  43bc00:	mov	x2, x1
  43bc04:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bc08:	add	x1, x0, #0xa48
  43bc0c:	mov	w0, #0x1                   	// #1
  43bc10:	bl	40abb0 <log_assert_failed_realm@plt>
  43bc14:	ldr	x0, [x29, #96]
  43bc18:	cmp	x0, #0x400, lsl #12
  43bc1c:	cset	w0, hi  // hi = pmore
  43bc20:	and	w0, w0, #0xff
  43bc24:	and	x0, x0, #0xff
  43bc28:	cmp	x0, #0x0
  43bc2c:	b.eq	43bc58 <is_pci_multifunction+0x154>  // b.none
  43bc30:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bc34:	add	x1, x0, #0xa03
  43bc38:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bc3c:	add	x4, x0, #0xf98
  43bc40:	mov	w3, #0xe1                  	// #225
  43bc44:	mov	x2, x1
  43bc48:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bc4c:	add	x1, x0, #0xa78
  43bc50:	mov	w0, #0x1                   	// #1
  43bc54:	bl	40abb0 <log_assert_failed_realm@plt>
  43bc58:	ldr	x0, [x29, #96]
  43bc5c:	add	x0, x0, #0xf
  43bc60:	lsr	x0, x0, #4
  43bc64:	lsl	x0, x0, #4
  43bc68:	sub	sp, sp, x0
  43bc6c:	mov	x0, sp
  43bc70:	add	x0, x0, #0xf
  43bc74:	lsr	x0, x0, #4
  43bc78:	lsl	x0, x0, #4
  43bc7c:	str	x0, [x29, #104]
  43bc80:	ldr	x0, [x29, #104]
  43bc84:	str	x0, [x29, #72]
  43bc88:	str	xzr, [x29, #88]
  43bc8c:	b	43bcbc <is_pci_multifunction+0x1b8>
  43bc90:	ldr	x0, [x29, #88]
  43bc94:	lsl	x0, x0, #3
  43bc98:	add	x1, x29, #0x78
  43bc9c:	ldr	x0, [x1, x0]
  43bca0:	mov	x1, x0
  43bca4:	ldr	x0, [x29, #72]
  43bca8:	bl	40a510 <stpcpy@plt>
  43bcac:	str	x0, [x29, #72]
  43bcb0:	ldr	x0, [x29, #88]
  43bcb4:	add	x0, x0, #0x1
  43bcb8:	str	x0, [x29, #88]
  43bcbc:	ldr	x0, [x29, #88]
  43bcc0:	cmp	x0, #0x1
  43bcc4:	b.hi	43bce0 <is_pci_multifunction+0x1dc>  // b.pmore
  43bcc8:	ldr	x0, [x29, #88]
  43bccc:	lsl	x0, x0, #3
  43bcd0:	add	x1, x29, #0x78
  43bcd4:	ldr	x0, [x1, x0]
  43bcd8:	cmp	x0, #0x0
  43bcdc:	b.ne	43bc90 <is_pci_multifunction+0x18c>  // b.any
  43bce0:	ldr	x0, [x29, #72]
  43bce4:	strb	wzr, [x0]
  43bce8:	ldr	x0, [x29, #104]
  43bcec:	str	x0, [x29, #112]
  43bcf0:	mov	w1, #0x80000               	// #524288
  43bcf4:	ldr	x0, [x29, #112]
  43bcf8:	bl	40bcb0 <open64@plt>
  43bcfc:	str	w0, [x29, #60]
  43bd00:	ldr	w0, [x29, #60]
  43bd04:	cmp	w0, #0x0
  43bd08:	b.ge	43bd14 <is_pci_multifunction+0x210>  // b.tcont
  43bd0c:	mov	w19, #0x0                   	// #0
  43bd10:	b	43bd48 <is_pci_multifunction+0x244>
  43bd14:	ldr	w0, [x29, #60]
  43bd18:	add	x1, x29, #0x88
  43bd1c:	mov	x2, #0x40                  	// #64
  43bd20:	bl	40b0b0 <read@plt>
  43bd24:	cmp	x0, #0x40
  43bd28:	b.eq	43bd34 <is_pci_multifunction+0x230>  // b.none
  43bd2c:	mov	w19, #0x0                   	// #0
  43bd30:	b	43bd48 <is_pci_multifunction+0x244>
  43bd34:	ldrb	w0, [x29, #150]
  43bd38:	and	w0, w0, #0x80
  43bd3c:	cmp	w0, #0x0
  43bd40:	cset	w0, ne  // ne = any
  43bd44:	and	w19, w0, #0xff
  43bd48:	add	x0, x29, #0x3c
  43bd4c:	bl	43b1b0 <closep>
  43bd50:	mov	w1, w19
  43bd54:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43bd58:	ldr	x0, [x0, #4032]
  43bd5c:	ldr	x2, [x29, #200]
  43bd60:	ldr	x0, [x0]
  43bd64:	eor	x0, x2, x0
  43bd68:	cmp	x0, #0x0
  43bd6c:	b.eq	43bd74 <is_pci_multifunction+0x270>  // b.none
  43bd70:	bl	40b280 <__stack_chk_fail@plt>
  43bd74:	mov	w0, w1
  43bd78:	mov	sp, x29
  43bd7c:	ldr	x19, [sp, #16]
  43bd80:	ldp	x29, x30, [sp], #208
  43bd84:	ret

000000000043bd88 <is_pci_ari_enabled>:
  43bd88:	stp	x29, x30, [sp, #-48]!
  43bd8c:	mov	x29, sp
  43bd90:	str	x0, [sp, #24]
  43bd94:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43bd98:	ldr	x0, [x0, #4032]
  43bd9c:	ldr	x1, [x0]
  43bda0:	str	x1, [sp, #40]
  43bda4:	mov	x1, #0x0                   	// #0
  43bda8:	add	x0, sp, #0x20
  43bdac:	mov	x2, x0
  43bdb0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bdb4:	add	x1, x0, #0xb08
  43bdb8:	ldr	x0, [sp, #24]
  43bdbc:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43bdc0:	cmp	w0, #0x0
  43bdc4:	b.ge	43bdd0 <is_pci_ari_enabled+0x48>  // b.tcont
  43bdc8:	mov	w0, #0x0                   	// #0
  43bdcc:	b	43bdf0 <is_pci_ari_enabled+0x68>
  43bdd0:	ldr	x2, [sp, #32]
  43bdd4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bdd8:	add	x1, x0, #0xb18
  43bddc:	mov	x0, x2
  43bde0:	bl	40b710 <strcmp@plt>
  43bde4:	cmp	w0, #0x0
  43bde8:	cset	w0, eq  // eq = none
  43bdec:	and	w0, w0, #0xff
  43bdf0:	mov	w1, w0
  43bdf4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43bdf8:	ldr	x0, [x0, #4032]
  43bdfc:	ldr	x2, [sp, #40]
  43be00:	ldr	x0, [x0]
  43be04:	eor	x0, x2, x0
  43be08:	cmp	x0, #0x0
  43be0c:	b.eq	43be14 <is_pci_ari_enabled+0x8c>  // b.none
  43be10:	bl	40b280 <__stack_chk_fail@plt>
  43be14:	mov	w0, w1
  43be18:	ldp	x29, x30, [sp], #48
  43be1c:	ret

000000000043be20 <dev_pci_slot>:
  43be20:	mov	x12, #0x20c0                	// #8384
  43be24:	sub	sp, sp, x12
  43be28:	stp	x29, x30, [sp]
  43be2c:	mov	x29, sp
  43be30:	str	x19, [sp, #16]
  43be34:	str	x0, [sp, #40]
  43be38:	str	x1, [sp, #32]
  43be3c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43be40:	ldr	x0, [x0, #4032]
  43be44:	ldr	x1, [x0]
  43be48:	str	x1, [sp, #8376]
  43be4c:	mov	x1, #0x0                   	// #0
  43be50:	str	xzr, [sp, #152]
  43be54:	str	wzr, [sp, #72]
  43be58:	str	xzr, [sp, #104]
  43be5c:	str	xzr, [sp, #120]
  43be60:	str	xzr, [sp, #136]
  43be64:	ldr	x0, [sp, #32]
  43be68:	ldr	x0, [x0, #16]
  43be6c:	add	x1, sp, #0x58
  43be70:	bl	40aba0 <sd_device_get_sysname@plt>
  43be74:	str	w0, [sp, #76]
  43be78:	ldr	w0, [sp, #76]
  43be7c:	cmp	w0, #0x0
  43be80:	b.ge	43be8c <dev_pci_slot+0x6c>  // b.tcont
  43be84:	ldr	w19, [sp, #76]
  43be88:	b	43c498 <dev_pci_slot+0x678>
  43be8c:	ldr	x6, [sp, #88]
  43be90:	add	x3, sp, #0x40
  43be94:	add	x2, sp, #0x3c
  43be98:	add	x1, sp, #0x38
  43be9c:	add	x0, sp, #0x34
  43bea0:	mov	x5, x3
  43bea4:	mov	x4, x2
  43bea8:	mov	x3, x1
  43beac:	mov	x2, x0
  43beb0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43beb4:	add	x1, x0, #0xb20
  43beb8:	mov	x0, x6
  43bebc:	bl	40add0 <__isoc99_sscanf@plt>
  43bec0:	cmp	w0, #0x4
  43bec4:	b.eq	43bed0 <dev_pci_slot+0xb0>  // b.none
  43bec8:	mov	w19, #0xfffffffe            	// #-2
  43becc:	b	43c498 <dev_pci_slot+0x678>
  43bed0:	mov	w0, #0x2                   	// #2
  43bed4:	bl	43b208 <naming_scheme_has>
  43bed8:	and	w0, w0, #0xff
  43bedc:	cmp	w0, #0x0
  43bee0:	b.eq	43bf10 <dev_pci_slot+0xf0>  // b.none
  43bee4:	ldr	x0, [sp, #32]
  43bee8:	ldr	x0, [x0, #16]
  43beec:	bl	43bd88 <is_pci_ari_enabled>
  43bef0:	and	w0, w0, #0xff
  43bef4:	cmp	w0, #0x0
  43bef8:	b.eq	43bf10 <dev_pci_slot+0xf0>  // b.none
  43befc:	ldr	w0, [sp, #60]
  43bf00:	lsl	w1, w0, #3
  43bf04:	ldr	w0, [sp, #64]
  43bf08:	add	w0, w1, w0
  43bf0c:	str	w0, [sp, #64]
  43bf10:	add	x0, sp, #0x60
  43bf14:	mov	x2, x0
  43bf18:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bf1c:	add	x1, x0, #0xac0
  43bf20:	ldr	x0, [sp, #40]
  43bf24:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43bf28:	cmp	w0, #0x0
  43bf2c:	b.lt	43bfc4 <dev_pci_slot+0x1a4>  // b.tstop
  43bf30:	ldr	x0, [sp, #96]
  43bf34:	mov	w2, #0xa                   	// #10
  43bf38:	mov	x1, #0x0                   	// #0
  43bf3c:	bl	40b630 <strtoul@plt>
  43bf40:	str	x0, [sp, #152]
  43bf44:	ldr	x0, [sp, #152]
  43bf48:	cmp	x0, #0x0
  43bf4c:	b.ne	43bfc4 <dev_pci_slot+0x1a4>  // b.any
  43bf50:	add	x0, sp, #0x60
  43bf54:	mov	x2, x0
  43bf58:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bf5c:	add	x1, x0, #0xb30
  43bf60:	ldr	x0, [sp, #40]
  43bf64:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43bf68:	cmp	w0, #0x0
  43bf6c:	b.lt	43bfc4 <dev_pci_slot+0x1a4>  // b.tstop
  43bf70:	ldr	x0, [sp, #96]
  43bf74:	mov	w2, #0xa                   	// #10
  43bf78:	mov	x1, #0x0                   	// #0
  43bf7c:	bl	40b630 <strtoul@plt>
  43bf80:	str	x0, [sp, #176]
  43bf84:	ldr	x0, [sp, #176]
  43bf88:	cmp	x0, #0x20
  43bf8c:	b.ne	43bfc4 <dev_pci_slot+0x1a4>  // b.any
  43bf90:	add	x0, sp, #0x60
  43bf94:	mov	x2, x0
  43bf98:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bf9c:	add	x1, x0, #0xb38
  43bfa0:	ldr	x0, [sp, #40]
  43bfa4:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43bfa8:	cmp	w0, #0x0
  43bfac:	b.lt	43bfc4 <dev_pci_slot+0x1a4>  // b.tstop
  43bfb0:	ldr	x0, [sp, #96]
  43bfb4:	mov	w2, #0x10                  	// #16
  43bfb8:	mov	x1, #0x0                   	// #0
  43bfbc:	bl	40b630 <strtoul@plt>
  43bfc0:	str	x0, [sp, #152]
  43bfc4:	add	x0, sp, #0x68
  43bfc8:	mov	x2, x0
  43bfcc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43bfd0:	add	x1, x0, #0xad0
  43bfd4:	ldr	x0, [sp, #40]
  43bfd8:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43bfdc:	ldr	x0, [sp, #32]
  43bfe0:	add	x0, x0, #0x28
  43bfe4:	str	x0, [sp, #80]
  43bfe8:	mov	x0, #0x10                  	// #16
  43bfec:	str	x0, [sp, #160]
  43bff0:	ldr	w0, [sp, #52]
  43bff4:	cmp	w0, #0x0
  43bff8:	b.eq	43c020 <dev_pci_slot+0x200>  // b.none
  43bffc:	ldr	w0, [sp, #52]
  43c000:	add	x4, sp, #0x50
  43c004:	mov	w3, w0
  43c008:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c00c:	add	x2, x0, #0xb40
  43c010:	ldr	x1, [sp, #160]
  43c014:	mov	x0, x4
  43c018:	bl	40a3e0 <strpcpyf@plt>
  43c01c:	str	x0, [sp, #160]
  43c020:	ldr	w0, [sp, #56]
  43c024:	ldr	w1, [sp, #60]
  43c028:	add	x5, sp, #0x50
  43c02c:	mov	w4, w1
  43c030:	mov	w3, w0
  43c034:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c038:	add	x2, x0, #0xb48
  43c03c:	ldr	x1, [sp, #160]
  43c040:	mov	x0, x5
  43c044:	bl	40a3e0 <strpcpyf@plt>
  43c048:	str	x0, [sp, #160]
  43c04c:	ldr	w0, [sp, #64]
  43c050:	cmp	w0, #0x0
  43c054:	b.ne	43c070 <dev_pci_slot+0x250>  // b.any
  43c058:	ldr	x0, [sp, #32]
  43c05c:	ldr	x0, [x0, #16]
  43c060:	bl	43bb04 <is_pci_multifunction>
  43c064:	and	w0, w0, #0xff
  43c068:	cmp	w0, #0x0
  43c06c:	b.eq	43c094 <dev_pci_slot+0x274>  // b.none
  43c070:	ldr	w0, [sp, #64]
  43c074:	add	x4, sp, #0x50
  43c078:	mov	w3, w0
  43c07c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c080:	add	x2, x0, #0xb50
  43c084:	ldr	x1, [sp, #160]
  43c088:	mov	x0, x4
  43c08c:	bl	40a3e0 <strpcpyf@plt>
  43c090:	str	x0, [sp, #160]
  43c094:	ldr	x0, [sp, #104]
  43c098:	cmp	x0, #0x0
  43c09c:	b.eq	43c0c8 <dev_pci_slot+0x2a8>  // b.none
  43c0a0:	ldr	x0, [sp, #104]
  43c0a4:	add	x4, sp, #0x50
  43c0a8:	mov	x3, x0
  43c0ac:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c0b0:	add	x2, x0, #0xae8
  43c0b4:	ldr	x1, [sp, #160]
  43c0b8:	mov	x0, x4
  43c0bc:	bl	40a3e0 <strpcpyf@plt>
  43c0c0:	str	x0, [sp, #160]
  43c0c4:	b	43c0f4 <dev_pci_slot+0x2d4>
  43c0c8:	ldr	x0, [sp, #152]
  43c0cc:	cmp	x0, #0x0
  43c0d0:	b.eq	43c0f4 <dev_pci_slot+0x2d4>  // b.none
  43c0d4:	add	x4, sp, #0x50
  43c0d8:	ldr	x3, [sp, #152]
  43c0dc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c0e0:	add	x2, x0, #0xaf0
  43c0e4:	ldr	x1, [sp, #160]
  43c0e8:	mov	x0, x4
  43c0ec:	bl	40a3e0 <strpcpyf@plt>
  43c0f0:	str	x0, [sp, #160]
  43c0f4:	ldr	x0, [sp, #160]
  43c0f8:	cmp	x0, #0x0
  43c0fc:	b.ne	43c108 <dev_pci_slot+0x2e8>  // b.any
  43c100:	ldr	x0, [sp, #32]
  43c104:	strb	wzr, [x0, #40]
  43c108:	add	x3, sp, #0x78
  43c10c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c110:	add	x2, x0, #0xb58
  43c114:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c118:	add	x1, x0, #0xb60
  43c11c:	mov	x0, x3
  43c120:	bl	40a930 <sd_device_new_from_subsystem_sysname@plt>
  43c124:	str	w0, [sp, #76]
  43c128:	ldr	w0, [sp, #76]
  43c12c:	cmp	w0, #0x0
  43c130:	b.ge	43c13c <dev_pci_slot+0x31c>  // b.tcont
  43c134:	ldr	w19, [sp, #76]
  43c138:	b	43c498 <dev_pci_slot+0x678>
  43c13c:	ldr	x0, [sp, #120]
  43c140:	add	x1, sp, #0x70
  43c144:	bl	40bd50 <sd_device_get_syspath@plt>
  43c148:	str	w0, [sp, #76]
  43c14c:	ldr	w0, [sp, #76]
  43c150:	cmp	w0, #0x0
  43c154:	b.ge	43c160 <dev_pci_slot+0x340>  // b.tcont
  43c158:	ldr	w19, [sp, #76]
  43c15c:	b	43c498 <dev_pci_slot+0x678>
  43c160:	ldr	x0, [sp, #112]
  43c164:	add	x4, sp, #0xb8
  43c168:	mov	x3, x0
  43c16c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c170:	add	x2, x0, #0xb70
  43c174:	mov	x1, #0x1000                	// #4096
  43c178:	mov	x0, x4
  43c17c:	bl	40a870 <snprintf@plt>
  43c180:	cmp	w0, #0xfff
  43c184:	b.ls	43c190 <dev_pci_slot+0x370>  // b.plast
  43c188:	mov	w19, #0xffffffdc            	// #-36
  43c18c:	b	43c498 <dev_pci_slot+0x678>
  43c190:	add	x0, sp, #0xb8
  43c194:	bl	40b770 <opendir@plt>
  43c198:	str	x0, [sp, #136]
  43c19c:	ldr	x0, [sp, #136]
  43c1a0:	cmp	x0, #0x0
  43c1a4:	b.ne	43c1b8 <dev_pci_slot+0x398>  // b.any
  43c1a8:	bl	40b040 <__errno_location@plt>
  43c1ac:	ldr	w0, [x0]
  43c1b0:	neg	w19, w0
  43c1b4:	b	43c498 <dev_pci_slot+0x678>
  43c1b8:	ldr	x0, [sp, #32]
  43c1bc:	ldr	x0, [x0, #16]
  43c1c0:	str	x0, [sp, #128]
  43c1c4:	b	43c34c <dev_pci_slot+0x52c>
  43c1c8:	ldr	x0, [sp, #128]
  43c1cc:	add	x1, sp, #0x58
  43c1d0:	bl	40aba0 <sd_device_get_sysname@plt>
  43c1d4:	cmp	w0, #0x0
  43c1d8:	b.ge	43c1e0 <dev_pci_slot+0x3c0>  // b.tcont
  43c1dc:	b	43c34c <dev_pci_slot+0x52c>
  43c1e0:	bl	40b040 <__errno_location@plt>
  43c1e4:	str	wzr, [x0]
  43c1e8:	ldr	x0, [sp, #136]
  43c1ec:	bl	40abe0 <readdir64@plt>
  43c1f0:	str	x0, [sp, #168]
  43c1f4:	ldr	x0, [sp, #168]
  43c1f8:	cmp	x0, #0x0
  43c1fc:	b.ne	43c210 <dev_pci_slot+0x3f0>  // b.any
  43c200:	bl	40b040 <__errno_location@plt>
  43c204:	ldr	w0, [x0]
  43c208:	cmp	w0, #0x0
  43c20c:	b	43c310 <dev_pci_slot+0x4f0>
  43c210:	str	xzr, [sp, #144]
  43c214:	ldr	x0, [sp, #168]
  43c218:	ldrb	w0, [x0, #19]
  43c21c:	cmp	w0, #0x2e
  43c220:	b.ne	43c22c <dev_pci_slot+0x40c>  // b.any
  43c224:	mov	w19, #0x0                   	// #0
  43c228:	b	43c2e0 <dev_pci_slot+0x4c0>
  43c22c:	ldr	x0, [sp, #168]
  43c230:	add	x0, x0, #0x13
  43c234:	add	x1, sp, #0x44
  43c238:	mov	x2, x1
  43c23c:	mov	w1, #0xa                   	// #10
  43c240:	bl	40b4a0 <safe_atou_full@plt>
  43c244:	str	w0, [sp, #76]
  43c248:	ldr	w0, [sp, #76]
  43c24c:	cmp	w0, #0x0
  43c250:	b.lt	43c260 <dev_pci_slot+0x440>  // b.tstop
  43c254:	ldr	w0, [sp, #68]
  43c258:	cmp	w0, #0x0
  43c25c:	b.ne	43c268 <dev_pci_slot+0x448>  // b.any
  43c260:	mov	w19, #0x0                   	// #0
  43c264:	b	43c2e0 <dev_pci_slot+0x4c0>
  43c268:	ldr	x0, [sp, #168]
  43c26c:	add	x1, x0, #0x13
  43c270:	add	x0, sp, #0xb8
  43c274:	add	x5, sp, #0x1, lsl #12
  43c278:	add	x5, x5, #0xb8
  43c27c:	mov	x4, x1
  43c280:	mov	x3, x0
  43c284:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c288:	add	x2, x0, #0xb80
  43c28c:	mov	x1, #0x1000                	// #4096
  43c290:	mov	x0, x5
  43c294:	bl	40a870 <snprintf@plt>
  43c298:	cmp	w0, #0xfff
  43c29c:	b.hi	43c2dc <dev_pci_slot+0x4bc>  // b.pmore
  43c2a0:	add	x1, sp, #0x90
  43c2a4:	add	x0, sp, #0x1, lsl #12
  43c2a8:	add	x0, x0, #0xb8
  43c2ac:	bl	40b1b0 <read_one_line_file@plt>
  43c2b0:	cmp	w0, #0x0
  43c2b4:	b.lt	43c2dc <dev_pci_slot+0x4bc>  // b.tstop
  43c2b8:	ldr	x0, [sp, #88]
  43c2bc:	ldr	x1, [sp, #144]
  43c2c0:	bl	43b098 <startswith>
  43c2c4:	cmp	x0, #0x0
  43c2c8:	b.eq	43c2dc <dev_pci_slot+0x4bc>  // b.none
  43c2cc:	ldr	w0, [sp, #68]
  43c2d0:	str	w0, [sp, #72]
  43c2d4:	mov	w19, #0x1                   	// #1
  43c2d8:	b	43c2e0 <dev_pci_slot+0x4c0>
  43c2dc:	mov	w19, #0x2                   	// #2
  43c2e0:	add	x0, sp, #0x90
  43c2e4:	bl	43afb8 <freep>
  43c2e8:	cmp	w19, #0x0
  43c2ec:	b.eq	43c2f8 <dev_pci_slot+0x4d8>  // b.none
  43c2f0:	cmp	w19, #0x2
  43c2f4:	b.ne	43c310 <dev_pci_slot+0x4f0>  // b.any
  43c2f8:	bl	40b040 <__errno_location@plt>
  43c2fc:	str	wzr, [x0]
  43c300:	ldr	x0, [sp, #136]
  43c304:	bl	40abe0 <readdir64@plt>
  43c308:	str	x0, [sp, #168]
  43c30c:	b	43c1f4 <dev_pci_slot+0x3d4>
  43c310:	ldr	w0, [sp, #72]
  43c314:	cmp	w0, #0x0
  43c318:	b.ne	43c35c <dev_pci_slot+0x53c>  // b.any
  43c31c:	ldr	x4, [sp, #128]
  43c320:	add	x0, sp, #0x80
  43c324:	mov	x3, x0
  43c328:	mov	x2, #0x0                   	// #0
  43c32c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c330:	add	x1, x0, #0xb58
  43c334:	mov	x0, x4
  43c338:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43c33c:	cmp	w0, #0x0
  43c340:	b.lt	43c364 <dev_pci_slot+0x544>  // b.tstop
  43c344:	ldr	x0, [sp, #136]
  43c348:	bl	40b1c0 <rewinddir@plt>
  43c34c:	ldr	x0, [sp, #128]
  43c350:	cmp	x0, #0x0
  43c354:	b.ne	43c1c8 <dev_pci_slot+0x3a8>  // b.any
  43c358:	b	43c368 <dev_pci_slot+0x548>
  43c35c:	nop
  43c360:	b	43c368 <dev_pci_slot+0x548>
  43c364:	nop
  43c368:	ldr	w0, [sp, #72]
  43c36c:	cmp	w0, #0x0
  43c370:	b.eq	43c494 <dev_pci_slot+0x674>  // b.none
  43c374:	ldr	x0, [sp, #32]
  43c378:	add	x0, x0, #0x18
  43c37c:	str	x0, [sp, #80]
  43c380:	mov	x0, #0x10                  	// #16
  43c384:	str	x0, [sp, #160]
  43c388:	ldr	w0, [sp, #52]
  43c38c:	cmp	w0, #0x0
  43c390:	b.eq	43c3b8 <dev_pci_slot+0x598>  // b.none
  43c394:	ldr	w0, [sp, #52]
  43c398:	add	x4, sp, #0x50
  43c39c:	mov	w3, w0
  43c3a0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c3a4:	add	x2, x0, #0xb90
  43c3a8:	ldr	x1, [sp, #160]
  43c3ac:	mov	x0, x4
  43c3b0:	bl	40a3e0 <strpcpyf@plt>
  43c3b4:	str	x0, [sp, #160]
  43c3b8:	add	x4, sp, #0x50
  43c3bc:	ldr	w3, [sp, #72]
  43c3c0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c3c4:	add	x2, x0, #0xb98
  43c3c8:	ldr	x1, [sp, #160]
  43c3cc:	mov	x0, x4
  43c3d0:	bl	40a3e0 <strpcpyf@plt>
  43c3d4:	str	x0, [sp, #160]
  43c3d8:	ldr	w0, [sp, #64]
  43c3dc:	cmp	w0, #0x0
  43c3e0:	b.ne	43c3fc <dev_pci_slot+0x5dc>  // b.any
  43c3e4:	ldr	x0, [sp, #32]
  43c3e8:	ldr	x0, [x0, #16]
  43c3ec:	bl	43bb04 <is_pci_multifunction>
  43c3f0:	and	w0, w0, #0xff
  43c3f4:	cmp	w0, #0x0
  43c3f8:	b.eq	43c420 <dev_pci_slot+0x600>  // b.none
  43c3fc:	ldr	w0, [sp, #64]
  43c400:	add	x4, sp, #0x50
  43c404:	mov	w3, w0
  43c408:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c40c:	add	x2, x0, #0xba0
  43c410:	ldr	x1, [sp, #160]
  43c414:	mov	x0, x4
  43c418:	bl	40a3e0 <strpcpyf@plt>
  43c41c:	str	x0, [sp, #160]
  43c420:	ldr	x0, [sp, #104]
  43c424:	cmp	x0, #0x0
  43c428:	b.eq	43c454 <dev_pci_slot+0x634>  // b.none
  43c42c:	ldr	x0, [sp, #104]
  43c430:	add	x4, sp, #0x50
  43c434:	mov	x3, x0
  43c438:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c43c:	add	x2, x0, #0xae8
  43c440:	ldr	x1, [sp, #160]
  43c444:	mov	x0, x4
  43c448:	bl	40a3e0 <strpcpyf@plt>
  43c44c:	str	x0, [sp, #160]
  43c450:	b	43c480 <dev_pci_slot+0x660>
  43c454:	ldr	x0, [sp, #152]
  43c458:	cmp	x0, #0x0
  43c45c:	b.eq	43c480 <dev_pci_slot+0x660>  // b.none
  43c460:	add	x4, sp, #0x50
  43c464:	ldr	x3, [sp, #152]
  43c468:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c46c:	add	x2, x0, #0xaf0
  43c470:	ldr	x1, [sp, #160]
  43c474:	mov	x0, x4
  43c478:	bl	40a3e0 <strpcpyf@plt>
  43c47c:	str	x0, [sp, #160]
  43c480:	ldr	x0, [sp, #160]
  43c484:	cmp	x0, #0x0
  43c488:	b.ne	43c494 <dev_pci_slot+0x674>  // b.any
  43c48c:	ldr	x0, [sp, #32]
  43c490:	strb	wzr, [x0, #24]
  43c494:	mov	w19, #0x0                   	// #0
  43c498:	add	x0, sp, #0x88
  43c49c:	bl	43b1d4 <closedirp>
  43c4a0:	add	x0, sp, #0x78
  43c4a4:	bl	43b260 <sd_device_unrefp>
  43c4a8:	mov	w1, w19
  43c4ac:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43c4b0:	ldr	x0, [x0, #4032]
  43c4b4:	ldr	x2, [sp, #8376]
  43c4b8:	ldr	x0, [x0]
  43c4bc:	eor	x0, x2, x0
  43c4c0:	cmp	x0, #0x0
  43c4c4:	b.eq	43c4cc <dev_pci_slot+0x6ac>  // b.none
  43c4c8:	bl	40b280 <__stack_chk_fail@plt>
  43c4cc:	mov	w0, w1
  43c4d0:	ldr	x19, [sp, #16]
  43c4d4:	ldp	x29, x30, [sp]
  43c4d8:	mov	x12, #0x20c0                	// #8384
  43c4dc:	add	sp, sp, x12
  43c4e0:	ret

000000000043c4e4 <names_vio>:
  43c4e4:	stp	x29, x30, [sp, #-80]!
  43c4e8:	mov	x29, sp
  43c4ec:	str	x0, [sp, #24]
  43c4f0:	str	x1, [sp, #16]
  43c4f4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43c4f8:	ldr	x0, [x0, #4032]
  43c4fc:	ldr	x1, [x0]
  43c500:	str	x1, [sp, #72]
  43c504:	mov	x1, #0x0                   	// #0
  43c508:	add	x0, sp, #0x30
  43c50c:	mov	x1, x0
  43c510:	ldr	x0, [sp, #24]
  43c514:	bl	40be60 <sd_device_get_parent@plt>
  43c518:	str	w0, [sp, #44]
  43c51c:	ldr	w0, [sp, #44]
  43c520:	cmp	w0, #0x0
  43c524:	b.ge	43c530 <names_vio+0x4c>  // b.tcont
  43c528:	ldr	w0, [sp, #44]
  43c52c:	b	43c650 <names_vio+0x16c>
  43c530:	ldr	x0, [sp, #48]
  43c534:	add	x1, sp, #0x40
  43c538:	bl	40af80 <sd_device_get_subsystem@plt>
  43c53c:	str	w0, [sp, #44]
  43c540:	ldr	w0, [sp, #44]
  43c544:	cmp	w0, #0x0
  43c548:	b.ge	43c554 <names_vio+0x70>  // b.tcont
  43c54c:	ldr	w0, [sp, #44]
  43c550:	b	43c650 <names_vio+0x16c>
  43c554:	ldr	x0, [sp, #64]
  43c558:	mov	x1, x0
  43c55c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c560:	add	x0, x0, #0xba8
  43c564:	bl	40b710 <strcmp@plt>
  43c568:	cmp	w0, #0x0
  43c56c:	b.eq	43c578 <names_vio+0x94>  // b.none
  43c570:	mov	w0, #0xfffffffe            	// #-2
  43c574:	b	43c650 <names_vio+0x16c>
  43c578:	add	x0, sp, #0x38
  43c57c:	mov	x1, x0
  43c580:	ldr	x0, [sp, #24]
  43c584:	bl	40bd50 <sd_device_get_syspath@plt>
  43c588:	str	w0, [sp, #44]
  43c58c:	ldr	w0, [sp, #44]
  43c590:	cmp	w0, #0x0
  43c594:	b.ge	43c5a0 <names_vio+0xbc>  // b.tcont
  43c598:	ldr	w0, [sp, #44]
  43c59c:	b	43c650 <names_vio+0x16c>
  43c5a0:	ldr	x5, [sp, #56]
  43c5a4:	add	x2, sp, #0x28
  43c5a8:	add	x1, sp, #0x24
  43c5ac:	add	x0, sp, #0x20
  43c5b0:	mov	x4, x2
  43c5b4:	mov	x3, x1
  43c5b8:	mov	x2, x0
  43c5bc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c5c0:	add	x1, x0, #0xbb0
  43c5c4:	mov	x0, x5
  43c5c8:	bl	40add0 <__isoc99_sscanf@plt>
  43c5cc:	cmp	w0, #0x3
  43c5d0:	b.eq	43c5dc <names_vio+0xf8>  // b.none
  43c5d4:	mov	w0, #0xffffffea            	// #-22
  43c5d8:	b	43c650 <names_vio+0x16c>
  43c5dc:	ldr	x0, [sp, #16]
  43c5e0:	add	x4, x0, #0x80
  43c5e4:	ldr	w0, [sp, #36]
  43c5e8:	mov	w3, w0
  43c5ec:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c5f0:	add	x2, x0, #0xbd8
  43c5f4:	mov	x1, #0x10                  	// #16
  43c5f8:	mov	x0, x4
  43c5fc:	bl	40a870 <snprintf@plt>
  43c600:	cmp	w0, #0xf
  43c604:	cset	w0, hi  // hi = pmore
  43c608:	and	w0, w0, #0xff
  43c60c:	and	x0, x0, #0xff
  43c610:	cmp	x0, #0x0
  43c614:	b.eq	43c640 <names_vio+0x15c>  // b.none
  43c618:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c61c:	add	x1, x0, #0xa03
  43c620:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c624:	add	x4, x0, #0xfb0
  43c628:	mov	w3, #0x190                 	// #400
  43c62c:	mov	x2, x1
  43c630:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c634:	add	x1, x0, #0xbe0
  43c638:	mov	w0, #0x1                   	// #1
  43c63c:	bl	40abb0 <log_assert_failed_realm@plt>
  43c640:	ldr	x0, [sp, #16]
  43c644:	mov	w1, #0x6                   	// #6
  43c648:	str	w1, [x0]
  43c64c:	mov	w0, #0x0                   	// #0
  43c650:	mov	w1, w0
  43c654:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43c658:	ldr	x0, [x0, #4032]
  43c65c:	ldr	x2, [sp, #72]
  43c660:	ldr	x0, [x0]
  43c664:	eor	x0, x2, x0
  43c668:	cmp	x0, #0x0
  43c66c:	b.eq	43c674 <names_vio+0x190>  // b.none
  43c670:	bl	40b280 <__stack_chk_fail@plt>
  43c674:	mov	w0, w1
  43c678:	ldp	x29, x30, [sp], #80
  43c67c:	ret

000000000043c680 <names_platform>:
  43c680:	stp	x29, x30, [sp, #-128]!
  43c684:	mov	x29, sp
  43c688:	str	x0, [sp, #40]
  43c68c:	str	x1, [sp, #32]
  43c690:	strb	w2, [sp, #31]
  43c694:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43c698:	ldr	x0, [x0, #4032]
  43c69c:	ldr	x1, [x0]
  43c6a0:	str	x1, [sp, #120]
  43c6a4:	mov	x1, #0x0                   	// #0
  43c6a8:	add	x0, sp, #0x48
  43c6ac:	mov	x1, x0
  43c6b0:	ldr	x0, [sp, #40]
  43c6b4:	bl	40be60 <sd_device_get_parent@plt>
  43c6b8:	str	w0, [sp, #68]
  43c6bc:	ldr	w0, [sp, #68]
  43c6c0:	cmp	w0, #0x0
  43c6c4:	b.ge	43c6d0 <names_platform+0x50>  // b.tcont
  43c6c8:	ldr	w0, [sp, #68]
  43c6cc:	b	43c890 <names_platform+0x210>
  43c6d0:	ldr	x0, [sp, #72]
  43c6d4:	add	x1, sp, #0x58
  43c6d8:	bl	40af80 <sd_device_get_subsystem@plt>
  43c6dc:	str	w0, [sp, #68]
  43c6e0:	ldr	w0, [sp, #68]
  43c6e4:	cmp	w0, #0x0
  43c6e8:	b.ge	43c6f4 <names_platform+0x74>  // b.tcont
  43c6ec:	ldr	w0, [sp, #68]
  43c6f0:	b	43c890 <names_platform+0x210>
  43c6f4:	ldr	x0, [sp, #88]
  43c6f8:	mov	x1, x0
  43c6fc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c700:	add	x0, x0, #0xc10
  43c704:	bl	40b710 <strcmp@plt>
  43c708:	cmp	w0, #0x0
  43c70c:	b.eq	43c718 <names_platform+0x98>  // b.none
  43c710:	mov	w0, #0xfffffffe            	// #-2
  43c714:	b	43c890 <names_platform+0x210>
  43c718:	add	x0, sp, #0x50
  43c71c:	mov	x1, x0
  43c720:	ldr	x0, [sp, #40]
  43c724:	bl	40bd50 <sd_device_get_syspath@plt>
  43c728:	str	w0, [sp, #68]
  43c72c:	ldr	w0, [sp, #68]
  43c730:	cmp	w0, #0x0
  43c734:	b.ge	43c740 <names_platform+0xc0>  // b.tcont
  43c738:	ldr	w0, [sp, #68]
  43c73c:	b	43c890 <names_platform+0x210>
  43c740:	ldr	x0, [sp, #80]
  43c744:	bl	40bd10 <strlen@plt>
  43c748:	cmp	x0, #0x1e
  43c74c:	b.hi	43c758 <names_platform+0xd8>  // b.pmore
  43c750:	mov	w0, #0xffffffea            	// #-22
  43c754:	b	43c890 <names_platform+0x210>
  43c758:	ldr	x0, [sp, #80]
  43c75c:	add	x0, x0, #0x1e
  43c760:	ldrb	w0, [x0]
  43c764:	cmp	w0, #0x3a
  43c768:	b.ne	43c788 <names_platform+0x108>  // b.any
  43c76c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c770:	add	x0, x0, #0xc20
  43c774:	str	x0, [sp, #96]
  43c778:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c77c:	add	x0, x0, #0xc50
  43c780:	str	x0, [sp, #104]
  43c784:	b	43c7a0 <names_platform+0x120>
  43c788:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c78c:	add	x0, x0, #0xc78
  43c790:	str	x0, [sp, #96]
  43c794:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c798:	add	x0, x0, #0xca8
  43c79c:	str	x0, [sp, #104]
  43c7a0:	ldr	x0, [sp, #80]
  43c7a4:	add	x4, sp, #0x40
  43c7a8:	add	x3, sp, #0x3c
  43c7ac:	add	x2, sp, #0x38
  43c7b0:	add	x1, sp, #0x70
  43c7b4:	mov	x5, x4
  43c7b8:	mov	x4, x3
  43c7bc:	mov	x3, x2
  43c7c0:	mov	x2, x1
  43c7c4:	ldr	x1, [sp, #96]
  43c7c8:	bl	40add0 <__isoc99_sscanf@plt>
  43c7cc:	cmp	w0, #0x4
  43c7d0:	b.eq	43c7dc <names_platform+0x15c>  // b.none
  43c7d4:	mov	w0, #0xffffffea            	// #-22
  43c7d8:	b	43c890 <names_platform+0x210>
  43c7dc:	add	x0, sp, #0x70
  43c7e0:	ldr	x1, [sp, #104]
  43c7e4:	bl	43b0e8 <in_charset>
  43c7e8:	and	w0, w0, #0xff
  43c7ec:	eor	w0, w0, #0x1
  43c7f0:	and	w0, w0, #0xff
  43c7f4:	cmp	w0, #0x0
  43c7f8:	b.eq	43c804 <names_platform+0x184>  // b.none
  43c7fc:	mov	w0, #0xfffffffe            	// #-2
  43c800:	b	43c890 <names_platform+0x210>
  43c804:	add	x0, sp, #0x70
  43c808:	bl	40a600 <ascii_strlower@plt>
  43c80c:	ldr	x0, [sp, #32]
  43c810:	add	x6, x0, #0x90
  43c814:	ldr	w1, [sp, #56]
  43c818:	ldr	w2, [sp, #60]
  43c81c:	add	x0, sp, #0x70
  43c820:	mov	w5, w2
  43c824:	mov	w4, w1
  43c828:	mov	x3, x0
  43c82c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c830:	add	x2, x0, #0xcc8
  43c834:	mov	x1, #0x10                  	// #16
  43c838:	mov	x0, x6
  43c83c:	bl	40a870 <snprintf@plt>
  43c840:	cmp	w0, #0xf
  43c844:	cset	w0, hi  // hi = pmore
  43c848:	and	w0, w0, #0xff
  43c84c:	and	x0, x0, #0xff
  43c850:	cmp	x0, #0x0
  43c854:	b.eq	43c880 <names_platform+0x200>  // b.none
  43c858:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c85c:	add	x1, x0, #0xa03
  43c860:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c864:	add	x4, x0, #0xfc0
  43c868:	mov	w3, #0x1cd                 	// #461
  43c86c:	mov	x2, x1
  43c870:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c874:	add	x1, x0, #0xcd8
  43c878:	mov	w0, #0x1                   	// #1
  43c87c:	bl	40abb0 <log_assert_failed_realm@plt>
  43c880:	ldr	x0, [sp, #32]
  43c884:	mov	w1, #0x7                   	// #7
  43c888:	str	w1, [x0]
  43c88c:	mov	w0, #0x0                   	// #0
  43c890:	mov	w1, w0
  43c894:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43c898:	ldr	x0, [x0, #4032]
  43c89c:	ldr	x2, [sp, #120]
  43c8a0:	ldr	x0, [x0]
  43c8a4:	eor	x0, x2, x0
  43c8a8:	cmp	x0, #0x0
  43c8ac:	b.eq	43c8b4 <names_platform+0x234>  // b.none
  43c8b0:	bl	40b280 <__stack_chk_fail@plt>
  43c8b4:	mov	w0, w1
  43c8b8:	ldp	x29, x30, [sp], #128
  43c8bc:	ret

000000000043c8c0 <names_pci>:
  43c8c0:	stp	x29, x30, [sp, #-288]!
  43c8c4:	mov	x29, sp
  43c8c8:	str	x19, [sp, #16]
  43c8cc:	str	x0, [sp, #40]
  43c8d0:	str	x1, [sp, #32]
  43c8d4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43c8d8:	ldr	x0, [x0, #4032]
  43c8dc:	ldr	x1, [x0]
  43c8e0:	str	x1, [sp, #280]
  43c8e4:	mov	x1, #0x0                   	// #0
  43c8e8:	stp	xzr, xzr, [sp, #104]
  43c8ec:	stp	xzr, xzr, [sp, #120]
  43c8f0:	stp	xzr, xzr, [sp, #136]
  43c8f4:	stp	xzr, xzr, [sp, #152]
  43c8f8:	stp	xzr, xzr, [sp, #168]
  43c8fc:	stp	xzr, xzr, [sp, #184]
  43c900:	stp	xzr, xzr, [sp, #200]
  43c904:	stp	xzr, xzr, [sp, #216]
  43c908:	stp	xzr, xzr, [sp, #232]
  43c90c:	stp	xzr, xzr, [sp, #248]
  43c910:	add	x0, sp, #0x200
  43c914:	stp	xzr, xzr, [x0, #-248]
  43c918:	stp	xzr, xzr, [sp, #80]
  43c91c:	str	xzr, [sp, #96]
  43c920:	ldr	x0, [sp, #40]
  43c924:	cmp	x0, #0x0
  43c928:	cset	w0, eq  // eq = none
  43c92c:	and	w0, w0, #0xff
  43c930:	and	x0, x0, #0xff
  43c934:	cmp	x0, #0x0
  43c938:	b.eq	43c964 <names_pci+0xa4>  // b.none
  43c93c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c940:	add	x1, x0, #0xa03
  43c944:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c948:	add	x4, x0, #0xfe0
  43c94c:	mov	w3, #0x1d9                 	// #473
  43c950:	mov	x2, x1
  43c954:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c958:	add	x1, x0, #0xa28
  43c95c:	mov	w0, #0x1                   	// #1
  43c960:	bl	40abb0 <log_assert_failed_realm@plt>
  43c964:	ldr	x0, [sp, #32]
  43c968:	cmp	x0, #0x0
  43c96c:	cset	w0, eq  // eq = none
  43c970:	and	w0, w0, #0xff
  43c974:	and	x0, x0, #0xff
  43c978:	cmp	x0, #0x0
  43c97c:	b.eq	43c9a8 <names_pci+0xe8>  // b.none
  43c980:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c984:	add	x1, x0, #0xa03
  43c988:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c98c:	add	x4, x0, #0xfe0
  43c990:	mov	w3, #0x1da                 	// #474
  43c994:	mov	x2, x1
  43c998:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43c99c:	add	x1, x0, #0xa30
  43c9a0:	mov	w0, #0x1                   	// #1
  43c9a4:	bl	40abb0 <log_assert_failed_realm@plt>
  43c9a8:	add	x0, sp, #0x40
  43c9ac:	mov	x1, x0
  43c9b0:	ldr	x0, [sp, #40]
  43c9b4:	bl	40be60 <sd_device_get_parent@plt>
  43c9b8:	str	w0, [sp, #60]
  43c9bc:	ldr	w0, [sp, #60]
  43c9c0:	cmp	w0, #0x0
  43c9c4:	b.ge	43c9d0 <names_pci+0x110>  // b.tcont
  43c9c8:	ldr	w0, [sp, #60]
  43c9cc:	b	43cc20 <names_pci+0x360>
  43c9d0:	ldr	x0, [sp, #64]
  43c9d4:	bl	43b294 <skip_virtio>
  43c9d8:	str	x0, [sp, #64]
  43c9dc:	ldr	x0, [sp, #64]
  43c9e0:	cmp	x0, #0x0
  43c9e4:	b.ne	43c9f0 <names_pci+0x130>  // b.any
  43c9e8:	mov	w0, #0xfffffffe            	// #-2
  43c9ec:	b	43cc20 <names_pci+0x360>
  43c9f0:	ldr	x0, [sp, #64]
  43c9f4:	add	x1, sp, #0x48
  43c9f8:	bl	40af80 <sd_device_get_subsystem@plt>
  43c9fc:	cmp	w0, #0x0
  43ca00:	b.lt	43ca3c <names_pci+0x17c>  // b.tstop
  43ca04:	ldr	x0, [sp, #72]
  43ca08:	mov	x1, x0
  43ca0c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ca10:	add	x0, x0, #0xb58
  43ca14:	bl	40b710 <strcmp@plt>
  43ca18:	cmp	w0, #0x0
  43ca1c:	b.ne	43ca3c <names_pci+0x17c>  // b.any
  43ca20:	ldr	x0, [sp, #32]
  43ca24:	mov	w1, #0x1                   	// #1
  43ca28:	str	w1, [x0]
  43ca2c:	ldr	x1, [sp, #64]
  43ca30:	ldr	x0, [sp, #32]
  43ca34:	str	x1, [x0, #16]
  43ca38:	b	43ca74 <names_pci+0x1b4>
  43ca3c:	ldr	x0, [sp, #32]
  43ca40:	add	x0, x0, #0x10
  43ca44:	mov	x3, x0
  43ca48:	mov	x2, #0x0                   	// #0
  43ca4c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ca50:	add	x1, x0, #0xb58
  43ca54:	ldr	x0, [sp, #40]
  43ca58:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43ca5c:	str	w0, [sp, #60]
  43ca60:	ldr	w0, [sp, #60]
  43ca64:	cmp	w0, #0x0
  43ca68:	b.ge	43ca74 <names_pci+0x1b4>  // b.tcont
  43ca6c:	ldr	w0, [sp, #60]
  43ca70:	b	43cc20 <names_pci+0x360>
  43ca74:	mov	w0, #0x1                   	// #1
  43ca78:	bl	43b208 <naming_scheme_has>
  43ca7c:	and	w0, w0, #0xff
  43ca80:	cmp	w0, #0x0
  43ca84:	b.eq	43cc04 <names_pci+0x344>  // b.none
  43ca88:	add	x0, sp, #0x50
  43ca8c:	mov	x2, x0
  43ca90:	ldr	x1, [sp, #32]
  43ca94:	ldr	x0, [sp, #40]
  43ca98:	bl	43b35c <get_virtfn_info>
  43ca9c:	cmp	w0, #0x0
  43caa0:	b.lt	43cc04 <names_pci+0x344>  // b.tstop
  43caa4:	ldr	x0, [sp, #80]
  43caa8:	str	x0, [sp, #120]
  43caac:	add	x0, sp, #0x68
  43cab0:	mov	x1, x0
  43cab4:	ldr	x0, [sp, #40]
  43cab8:	bl	43b8ac <dev_pci_onboard>
  43cabc:	add	x0, sp, #0x68
  43cac0:	mov	x1, x0
  43cac4:	ldr	x0, [sp, #40]
  43cac8:	bl	43be20 <dev_pci_slot>
  43cacc:	ldrb	w0, [sp, #160]
  43cad0:	cmp	w0, #0x0
  43cad4:	b.eq	43cb30 <names_pci+0x270>  // b.none
  43cad8:	add	x0, sp, #0x68
  43cadc:	add	x0, x0, #0x38
  43cae0:	bl	40bd10 <strlen@plt>
  43cae4:	mov	x19, x0
  43cae8:	add	x0, sp, #0x50
  43caec:	add	x0, x0, #0x8
  43caf0:	bl	40bd10 <strlen@plt>
  43caf4:	add	x0, x19, x0
  43caf8:	cmp	x0, #0xf
  43cafc:	b.hi	43cb30 <names_pci+0x270>  // b.pmore
  43cb00:	ldr	x0, [sp, #32]
  43cb04:	add	x5, x0, #0x38
  43cb08:	add	x0, sp, #0x50
  43cb0c:	add	x1, x0, #0x8
  43cb10:	add	x0, sp, #0x68
  43cb14:	add	x0, x0, #0x38
  43cb18:	mov	x4, #0x0                   	// #0
  43cb1c:	mov	x3, x1
  43cb20:	mov	x2, x0
  43cb24:	mov	x1, #0x10                  	// #16
  43cb28:	mov	x0, x5
  43cb2c:	bl	40a790 <strscpyl@plt>
  43cb30:	ldrb	w0, [sp, #128]
  43cb34:	cmp	w0, #0x0
  43cb38:	b.eq	43cb94 <names_pci+0x2d4>  // b.none
  43cb3c:	add	x0, sp, #0x68
  43cb40:	add	x0, x0, #0x18
  43cb44:	bl	40bd10 <strlen@plt>
  43cb48:	mov	x19, x0
  43cb4c:	add	x0, sp, #0x50
  43cb50:	add	x0, x0, #0x8
  43cb54:	bl	40bd10 <strlen@plt>
  43cb58:	add	x0, x19, x0
  43cb5c:	cmp	x0, #0xf
  43cb60:	b.hi	43cb94 <names_pci+0x2d4>  // b.pmore
  43cb64:	ldr	x0, [sp, #32]
  43cb68:	add	x5, x0, #0x18
  43cb6c:	add	x0, sp, #0x50
  43cb70:	add	x1, x0, #0x8
  43cb74:	add	x0, sp, #0x68
  43cb78:	add	x0, x0, #0x18
  43cb7c:	mov	x4, #0x0                   	// #0
  43cb80:	mov	x3, x1
  43cb84:	mov	x2, x0
  43cb88:	mov	x1, #0x10                  	// #16
  43cb8c:	mov	x0, x5
  43cb90:	bl	40a790 <strscpyl@plt>
  43cb94:	ldrb	w0, [sp, #144]
  43cb98:	cmp	w0, #0x0
  43cb9c:	b.eq	43cbf8 <names_pci+0x338>  // b.none
  43cba0:	add	x0, sp, #0x68
  43cba4:	add	x0, x0, #0x28
  43cba8:	bl	40bd10 <strlen@plt>
  43cbac:	mov	x19, x0
  43cbb0:	add	x0, sp, #0x50
  43cbb4:	add	x0, x0, #0x8
  43cbb8:	bl	40bd10 <strlen@plt>
  43cbbc:	add	x0, x19, x0
  43cbc0:	cmp	x0, #0xf
  43cbc4:	b.hi	43cbf8 <names_pci+0x338>  // b.pmore
  43cbc8:	ldr	x0, [sp, #32]
  43cbcc:	add	x5, x0, #0x28
  43cbd0:	add	x0, sp, #0x50
  43cbd4:	add	x1, x0, #0x8
  43cbd8:	add	x0, sp, #0x68
  43cbdc:	add	x0, x0, #0x28
  43cbe0:	mov	x4, #0x0                   	// #0
  43cbe4:	mov	x3, x1
  43cbe8:	mov	x2, x0
  43cbec:	mov	x1, #0x10                  	// #16
  43cbf0:	mov	x0, x5
  43cbf4:	bl	40a790 <strscpyl@plt>
  43cbf8:	ldr	x0, [sp, #80]
  43cbfc:	bl	40baf0 <sd_device_unref@plt>
  43cc00:	b	43cc1c <names_pci+0x35c>
  43cc04:	ldr	x1, [sp, #32]
  43cc08:	ldr	x0, [sp, #40]
  43cc0c:	bl	43b8ac <dev_pci_onboard>
  43cc10:	ldr	x1, [sp, #32]
  43cc14:	ldr	x0, [sp, #40]
  43cc18:	bl	43be20 <dev_pci_slot>
  43cc1c:	mov	w0, #0x0                   	// #0
  43cc20:	mov	w1, w0
  43cc24:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43cc28:	ldr	x0, [x0, #4032]
  43cc2c:	ldr	x2, [sp, #280]
  43cc30:	ldr	x0, [x0]
  43cc34:	eor	x0, x2, x0
  43cc38:	cmp	x0, #0x0
  43cc3c:	b.eq	43cc44 <names_pci+0x384>  // b.none
  43cc40:	bl	40b280 <__stack_chk_fail@plt>
  43cc44:	mov	w0, w1
  43cc48:	ldr	x19, [sp, #16]
  43cc4c:	ldp	x29, x30, [sp], #288
  43cc50:	ret

000000000043cc54 <names_usb>:
  43cc54:	stp	x29, x30, [sp, #-368]!
  43cc58:	mov	x29, sp
  43cc5c:	str	x0, [sp, #24]
  43cc60:	str	x1, [sp, #16]
  43cc64:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43cc68:	ldr	x0, [x0, #4032]
  43cc6c:	ldr	x1, [x0]
  43cc70:	str	x1, [sp, #360]
  43cc74:	mov	x1, #0x0                   	// #0
  43cc78:	ldr	x0, [sp, #24]
  43cc7c:	cmp	x0, #0x0
  43cc80:	cset	w0, eq  // eq = none
  43cc84:	and	w0, w0, #0xff
  43cc88:	and	x0, x0, #0xff
  43cc8c:	cmp	x0, #0x0
  43cc90:	b.eq	43ccbc <names_usb+0x68>  // b.none
  43cc94:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cc98:	add	x1, x0, #0xa03
  43cc9c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cca0:	add	x4, x0, #0xff0
  43cca4:	mov	w3, #0x212                 	// #530
  43cca8:	mov	x2, x1
  43ccac:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ccb0:	add	x1, x0, #0xa28
  43ccb4:	mov	w0, #0x1                   	// #1
  43ccb8:	bl	40abb0 <log_assert_failed_realm@plt>
  43ccbc:	ldr	x0, [sp, #16]
  43ccc0:	cmp	x0, #0x0
  43ccc4:	cset	w0, eq  // eq = none
  43ccc8:	and	w0, w0, #0xff
  43cccc:	and	x0, x0, #0xff
  43ccd0:	cmp	x0, #0x0
  43ccd4:	b.eq	43cd00 <names_usb+0xac>  // b.none
  43ccd8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ccdc:	add	x1, x0, #0xa03
  43cce0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cce4:	add	x4, x0, #0xff0
  43cce8:	mov	w3, #0x213                 	// #531
  43ccec:	mov	x2, x1
  43ccf0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ccf4:	add	x1, x0, #0xa30
  43ccf8:	mov	w0, #0x1                   	// #1
  43ccfc:	bl	40abb0 <log_assert_failed_realm@plt>
  43cd00:	add	x0, sp, #0x30
  43cd04:	mov	x3, x0
  43cd08:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cd0c:	add	x2, x0, #0xd10
  43cd10:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cd14:	add	x1, x0, #0xd20
  43cd18:	ldr	x0, [sp, #24]
  43cd1c:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43cd20:	str	w0, [sp, #44]
  43cd24:	ldr	w0, [sp, #44]
  43cd28:	cmp	w0, #0x0
  43cd2c:	b.ge	43cd38 <names_usb+0xe4>  // b.tcont
  43cd30:	ldr	w0, [sp, #44]
  43cd34:	b	43cf10 <names_usb+0x2bc>
  43cd38:	ldr	x0, [sp, #48]
  43cd3c:	add	x1, sp, #0x40
  43cd40:	bl	40aba0 <sd_device_get_sysname@plt>
  43cd44:	str	w0, [sp, #44]
  43cd48:	ldr	w0, [sp, #44]
  43cd4c:	cmp	w0, #0x0
  43cd50:	b.ge	43cd5c <names_usb+0x108>  // b.tcont
  43cd54:	ldr	w0, [sp, #44]
  43cd58:	b	43cf10 <names_usb+0x2bc>
  43cd5c:	ldr	x1, [sp, #64]
  43cd60:	add	x0, sp, #0x68
  43cd64:	mov	x2, x1
  43cd68:	mov	x1, #0x100                 	// #256
  43cd6c:	bl	40a300 <strscpy@plt>
  43cd70:	add	x0, sp, #0x68
  43cd74:	mov	w1, #0x2d                  	// #45
  43cd78:	bl	40b850 <strchr@plt>
  43cd7c:	str	x0, [sp, #56]
  43cd80:	ldr	x0, [sp, #56]
  43cd84:	cmp	x0, #0x0
  43cd88:	b.ne	43cd94 <names_usb+0x140>  // b.any
  43cd8c:	mov	w0, #0xffffffea            	// #-22
  43cd90:	b	43cf10 <names_usb+0x2bc>
  43cd94:	ldr	x0, [sp, #56]
  43cd98:	add	x0, x0, #0x1
  43cd9c:	str	x0, [sp, #80]
  43cda0:	mov	w1, #0x3a                  	// #58
  43cda4:	ldr	x0, [sp, #80]
  43cda8:	bl	40b850 <strchr@plt>
  43cdac:	str	x0, [sp, #56]
  43cdb0:	ldr	x0, [sp, #56]
  43cdb4:	cmp	x0, #0x0
  43cdb8:	b.ne	43cdc4 <names_usb+0x170>  // b.any
  43cdbc:	mov	w0, #0xffffffea            	// #-22
  43cdc0:	b	43cf10 <names_usb+0x2bc>
  43cdc4:	ldr	x0, [sp, #56]
  43cdc8:	strb	wzr, [x0]
  43cdcc:	ldr	x0, [sp, #56]
  43cdd0:	add	x0, x0, #0x1
  43cdd4:	str	x0, [sp, #88]
  43cdd8:	mov	w1, #0x2e                  	// #46
  43cddc:	ldr	x0, [sp, #88]
  43cde0:	bl	40b850 <strchr@plt>
  43cde4:	str	x0, [sp, #56]
  43cde8:	ldr	x0, [sp, #56]
  43cdec:	cmp	x0, #0x0
  43cdf0:	b.ne	43cdfc <names_usb+0x1a8>  // b.any
  43cdf4:	mov	w0, #0xffffffea            	// #-22
  43cdf8:	b	43cf10 <names_usb+0x2bc>
  43cdfc:	ldr	x0, [sp, #56]
  43ce00:	strb	wzr, [x0]
  43ce04:	ldr	x0, [sp, #56]
  43ce08:	add	x0, x0, #0x1
  43ce0c:	str	x0, [sp, #96]
  43ce10:	ldr	x0, [sp, #80]
  43ce14:	str	x0, [sp, #56]
  43ce18:	b	43ce28 <names_usb+0x1d4>
  43ce1c:	ldr	x0, [sp, #56]
  43ce20:	mov	w1, #0x75                  	// #117
  43ce24:	strb	w1, [x0]
  43ce28:	ldr	x0, [sp, #56]
  43ce2c:	mov	w1, #0x2e                  	// #46
  43ce30:	bl	40b850 <strchr@plt>
  43ce34:	str	x0, [sp, #56]
  43ce38:	ldr	x0, [sp, #56]
  43ce3c:	cmp	x0, #0x0
  43ce40:	b.ne	43ce1c <names_usb+0x1c8>  // b.any
  43ce44:	ldr	x0, [sp, #16]
  43ce48:	add	x0, x0, #0x50
  43ce4c:	str	x0, [sp, #56]
  43ce50:	add	x5, sp, #0x38
  43ce54:	mov	x4, #0x0                   	// #0
  43ce58:	ldr	x3, [sp, #80]
  43ce5c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ce60:	add	x2, x0, #0xd28
  43ce64:	mov	x1, #0x10                  	// #16
  43ce68:	mov	x0, x5
  43ce6c:	bl	40aa50 <strpcpyl@plt>
  43ce70:	str	x0, [sp, #72]
  43ce74:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ce78:	add	x1, x0, #0xb18
  43ce7c:	ldr	x0, [sp, #88]
  43ce80:	bl	40b710 <strcmp@plt>
  43ce84:	cmp	w0, #0x0
  43ce88:	b.eq	43ceb0 <names_usb+0x25c>  // b.none
  43ce8c:	add	x5, sp, #0x38
  43ce90:	mov	x4, #0x0                   	// #0
  43ce94:	ldr	x3, [sp, #88]
  43ce98:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ce9c:	add	x2, x0, #0xd30
  43cea0:	mov	x1, #0x10                  	// #16
  43cea4:	mov	x0, x5
  43cea8:	bl	40aa50 <strpcpyl@plt>
  43ceac:	str	x0, [sp, #72]
  43ceb0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ceb4:	add	x1, x0, #0xd38
  43ceb8:	ldr	x0, [sp, #96]
  43cebc:	bl	40b710 <strcmp@plt>
  43cec0:	cmp	w0, #0x0
  43cec4:	b.eq	43ceec <names_usb+0x298>  // b.none
  43cec8:	add	x5, sp, #0x38
  43cecc:	mov	x4, #0x0                   	// #0
  43ced0:	ldr	x3, [sp, #96]
  43ced4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ced8:	add	x2, x0, #0xd40
  43cedc:	mov	x1, #0x10                  	// #16
  43cee0:	mov	x0, x5
  43cee4:	bl	40aa50 <strpcpyl@plt>
  43cee8:	str	x0, [sp, #72]
  43ceec:	ldr	x0, [sp, #72]
  43cef0:	cmp	x0, #0x0
  43cef4:	b.ne	43cf00 <names_usb+0x2ac>  // b.any
  43cef8:	mov	w0, #0xffffffdc            	// #-36
  43cefc:	b	43cf10 <names_usb+0x2bc>
  43cf00:	ldr	x0, [sp, #16]
  43cf04:	mov	w1, #0x2                   	// #2
  43cf08:	str	w1, [x0]
  43cf0c:	mov	w0, #0x0                   	// #0
  43cf10:	mov	w1, w0
  43cf14:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43cf18:	ldr	x0, [x0, #4032]
  43cf1c:	ldr	x2, [sp, #360]
  43cf20:	ldr	x0, [x0]
  43cf24:	eor	x0, x2, x0
  43cf28:	cmp	x0, #0x0
  43cf2c:	b.eq	43cf34 <names_usb+0x2e0>  // b.none
  43cf30:	bl	40b280 <__stack_chk_fail@plt>
  43cf34:	mov	w0, w1
  43cf38:	ldp	x29, x30, [sp], #368
  43cf3c:	ret

000000000043cf40 <names_bcma>:
  43cf40:	stp	x29, x30, [sp, #-64]!
  43cf44:	mov	x29, sp
  43cf48:	str	x0, [sp, #24]
  43cf4c:	str	x1, [sp, #16]
  43cf50:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43cf54:	ldr	x0, [x0, #4032]
  43cf58:	ldr	x1, [x0]
  43cf5c:	str	x1, [sp, #56]
  43cf60:	mov	x1, #0x0                   	// #0
  43cf64:	ldr	x0, [sp, #24]
  43cf68:	cmp	x0, #0x0
  43cf6c:	cset	w0, eq  // eq = none
  43cf70:	and	w0, w0, #0xff
  43cf74:	and	x0, x0, #0xff
  43cf78:	cmp	x0, #0x0
  43cf7c:	b.eq	43cfa8 <names_bcma+0x68>  // b.none
  43cf80:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cf84:	add	x1, x0, #0xa03
  43cf88:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43cf8c:	add	x4, x0, #0x0
  43cf90:	mov	w3, #0x24b                 	// #587
  43cf94:	mov	x2, x1
  43cf98:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cf9c:	add	x1, x0, #0xa28
  43cfa0:	mov	w0, #0x1                   	// #1
  43cfa4:	bl	40abb0 <log_assert_failed_realm@plt>
  43cfa8:	ldr	x0, [sp, #16]
  43cfac:	cmp	x0, #0x0
  43cfb0:	cset	w0, eq  // eq = none
  43cfb4:	and	w0, w0, #0xff
  43cfb8:	and	x0, x0, #0xff
  43cfbc:	cmp	x0, #0x0
  43cfc0:	b.eq	43cfec <names_bcma+0xac>  // b.none
  43cfc4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cfc8:	add	x1, x0, #0xa03
  43cfcc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43cfd0:	add	x4, x0, #0x0
  43cfd4:	mov	w3, #0x24c                 	// #588
  43cfd8:	mov	x2, x1
  43cfdc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cfe0:	add	x1, x0, #0xa30
  43cfe4:	mov	w0, #0x1                   	// #1
  43cfe8:	bl	40abb0 <log_assert_failed_realm@plt>
  43cfec:	add	x0, sp, #0x28
  43cff0:	mov	x3, x0
  43cff4:	mov	x2, #0x0                   	// #0
  43cff8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43cffc:	add	x1, x0, #0xd48
  43d000:	ldr	x0, [sp, #24]
  43d004:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43d008:	str	w0, [sp, #36]
  43d00c:	ldr	w0, [sp, #36]
  43d010:	cmp	w0, #0x0
  43d014:	b.ge	43d020 <names_bcma+0xe0>  // b.tcont
  43d018:	ldr	w0, [sp, #36]
  43d01c:	b	43d0f0 <names_bcma+0x1b0>
  43d020:	ldr	x0, [sp, #40]
  43d024:	add	x1, sp, #0x30
  43d028:	bl	40aba0 <sd_device_get_sysname@plt>
  43d02c:	str	w0, [sp, #36]
  43d030:	ldr	w0, [sp, #36]
  43d034:	cmp	w0, #0x0
  43d038:	b.ge	43d044 <names_bcma+0x104>  // b.tcont
  43d03c:	ldr	w0, [sp, #36]
  43d040:	b	43d0f0 <names_bcma+0x1b0>
  43d044:	ldr	x3, [sp, #48]
  43d048:	add	x0, sp, #0x20
  43d04c:	mov	x2, x0
  43d050:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d054:	add	x1, x0, #0xd50
  43d058:	mov	x0, x3
  43d05c:	bl	40add0 <__isoc99_sscanf@plt>
  43d060:	cmp	w0, #0x1
  43d064:	b.eq	43d070 <names_bcma+0x130>  // b.none
  43d068:	mov	w0, #0xffffffea            	// #-22
  43d06c:	b	43d0f0 <names_bcma+0x1b0>
  43d070:	ldr	w0, [sp, #32]
  43d074:	cmp	w0, #0x0
  43d078:	b.eq	43d0e0 <names_bcma+0x1a0>  // b.none
  43d07c:	ldr	x0, [sp, #16]
  43d080:	add	x4, x0, #0x60
  43d084:	ldr	w0, [sp, #32]
  43d088:	mov	w3, w0
  43d08c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d090:	add	x2, x0, #0xd60
  43d094:	mov	x1, #0x10                  	// #16
  43d098:	mov	x0, x4
  43d09c:	bl	40a870 <snprintf@plt>
  43d0a0:	cmp	w0, #0xf
  43d0a4:	cset	w0, hi  // hi = pmore
  43d0a8:	and	w0, w0, #0xff
  43d0ac:	and	x0, x0, #0xff
  43d0b0:	cmp	x0, #0x0
  43d0b4:	b.eq	43d0e0 <names_bcma+0x1a0>  // b.none
  43d0b8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d0bc:	add	x1, x0, #0xa03
  43d0c0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43d0c4:	add	x4, x0, #0x0
  43d0c8:	mov	w3, #0x25b                 	// #603
  43d0cc:	mov	x2, x1
  43d0d0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d0d4:	add	x1, x0, #0xd68
  43d0d8:	mov	w0, #0x1                   	// #1
  43d0dc:	bl	40abb0 <log_assert_failed_realm@plt>
  43d0e0:	ldr	x0, [sp, #16]
  43d0e4:	mov	w1, #0x3                   	// #3
  43d0e8:	str	w1, [x0]
  43d0ec:	mov	w0, #0x0                   	// #0
  43d0f0:	mov	w1, w0
  43d0f4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d0f8:	ldr	x0, [x0, #4032]
  43d0fc:	ldr	x2, [sp, #56]
  43d100:	ldr	x0, [x0]
  43d104:	eor	x0, x2, x0
  43d108:	cmp	x0, #0x0
  43d10c:	b.eq	43d114 <names_bcma+0x1d4>  // b.none
  43d110:	bl	40b280 <__stack_chk_fail@plt>
  43d114:	mov	w0, w1
  43d118:	ldp	x29, x30, [sp], #64
  43d11c:	ret

000000000043d120 <names_ccw>:
  43d120:	stp	x29, x30, [sp, #-112]!
  43d124:	mov	x29, sp
  43d128:	str	x0, [sp, #24]
  43d12c:	str	x1, [sp, #16]
  43d130:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d134:	ldr	x0, [x0, #4032]
  43d138:	ldr	x1, [x0]
  43d13c:	str	x1, [sp, #104]
  43d140:	mov	x1, #0x0                   	// #0
  43d144:	ldr	x0, [sp, #24]
  43d148:	cmp	x0, #0x0
  43d14c:	cset	w0, eq  // eq = none
  43d150:	and	w0, w0, #0xff
  43d154:	and	x0, x0, #0xff
  43d158:	cmp	x0, #0x0
  43d15c:	b.eq	43d188 <names_ccw+0x68>  // b.none
  43d160:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d164:	add	x1, x0, #0xa03
  43d168:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43d16c:	add	x4, x0, #0x10
  43d170:	mov	w3, #0x268                 	// #616
  43d174:	mov	x2, x1
  43d178:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d17c:	add	x1, x0, #0xa28
  43d180:	mov	w0, #0x1                   	// #1
  43d184:	bl	40abb0 <log_assert_failed_realm@plt>
  43d188:	ldr	x0, [sp, #16]
  43d18c:	cmp	x0, #0x0
  43d190:	cset	w0, eq  // eq = none
  43d194:	and	w0, w0, #0xff
  43d198:	and	x0, x0, #0xff
  43d19c:	cmp	x0, #0x0
  43d1a0:	b.eq	43d1cc <names_ccw+0xac>  // b.none
  43d1a4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d1a8:	add	x1, x0, #0xa03
  43d1ac:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43d1b0:	add	x4, x0, #0x10
  43d1b4:	mov	w3, #0x269                 	// #617
  43d1b8:	mov	x2, x1
  43d1bc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d1c0:	add	x1, x0, #0xa30
  43d1c4:	mov	w0, #0x1                   	// #1
  43d1c8:	bl	40abb0 <log_assert_failed_realm@plt>
  43d1cc:	add	x0, sp, #0x28
  43d1d0:	mov	x1, x0
  43d1d4:	ldr	x0, [sp, #24]
  43d1d8:	bl	40be60 <sd_device_get_parent@plt>
  43d1dc:	str	w0, [sp, #36]
  43d1e0:	ldr	w0, [sp, #36]
  43d1e4:	cmp	w0, #0x0
  43d1e8:	b.ge	43d1f4 <names_ccw+0xd4>  // b.tcont
  43d1ec:	ldr	w0, [sp, #36]
  43d1f0:	b	43d360 <names_ccw+0x240>
  43d1f4:	ldr	x0, [sp, #40]
  43d1f8:	bl	43b294 <skip_virtio>
  43d1fc:	str	x0, [sp, #40]
  43d200:	ldr	x0, [sp, #40]
  43d204:	cmp	x0, #0x0
  43d208:	b.ne	43d214 <names_ccw+0xf4>  // b.any
  43d20c:	mov	w0, #0xfffffffe            	// #-2
  43d210:	b	43d360 <names_ccw+0x240>
  43d214:	ldr	x0, [sp, #40]
  43d218:	add	x1, sp, #0x38
  43d21c:	bl	40af80 <sd_device_get_subsystem@plt>
  43d220:	str	w0, [sp, #36]
  43d224:	ldr	w0, [sp, #36]
  43d228:	cmp	w0, #0x0
  43d22c:	b.ge	43d238 <names_ccw+0x118>  // b.tcont
  43d230:	ldr	w0, [sp, #36]
  43d234:	b	43d360 <names_ccw+0x240>
  43d238:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43d23c:	add	x0, x0, #0x108
  43d240:	add	x2, sp, #0x50
  43d244:	mov	x3, x0
  43d248:	ldp	x0, x1, [x3]
  43d24c:	stp	x0, x1, [x2]
  43d250:	ldr	x0, [x3, #16]
  43d254:	str	x0, [x2, #16]
  43d258:	ldr	x1, [sp, #56]
  43d25c:	add	x0, sp, #0x50
  43d260:	bl	40b450 <strv_find@plt>
  43d264:	cmp	x0, #0x0
  43d268:	b.ne	43d274 <names_ccw+0x154>  // b.any
  43d26c:	mov	w0, #0xfffffffe            	// #-2
  43d270:	b	43d360 <names_ccw+0x240>
  43d274:	ldr	x0, [sp, #40]
  43d278:	add	x1, sp, #0x30
  43d27c:	bl	40aba0 <sd_device_get_sysname@plt>
  43d280:	str	w0, [sp, #36]
  43d284:	ldr	w0, [sp, #36]
  43d288:	cmp	w0, #0x0
  43d28c:	b.ge	43d298 <names_ccw+0x178>  // b.tcont
  43d290:	ldr	w0, [sp, #36]
  43d294:	b	43d360 <names_ccw+0x240>
  43d298:	ldr	x0, [sp, #48]
  43d29c:	bl	40bd10 <strlen@plt>
  43d2a0:	str	x0, [sp, #64]
  43d2a4:	strb	wzr, [sp, #35]
  43d2a8:	ldr	x0, [sp, #64]
  43d2ac:	sub	x0, x0, #0x8
  43d2b0:	cmp	x0, #0x1
  43d2b4:	b.hi	43d2c0 <names_ccw+0x1a0>  // b.pmore
  43d2b8:	mov	w0, #0x1                   	// #1
  43d2bc:	strb	w0, [sp, #35]
  43d2c0:	nop
  43d2c4:	ldrb	w0, [sp, #35]
  43d2c8:	eor	w0, w0, #0x1
  43d2cc:	and	w0, w0, #0xff
  43d2d0:	cmp	w0, #0x0
  43d2d4:	b.eq	43d2e0 <names_ccw+0x1c0>  // b.none
  43d2d8:	mov	w0, #0xffffffea            	// #-22
  43d2dc:	b	43d360 <names_ccw+0x240>
  43d2e0:	ldr	x2, [sp, #48]
  43d2e4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d2e8:	add	x1, x0, #0xd98
  43d2ec:	mov	x0, x2
  43d2f0:	bl	40aeb0 <strspn@plt>
  43d2f4:	str	x0, [sp, #72]
  43d2f8:	ldr	x1, [sp, #48]
  43d2fc:	ldr	x2, [sp, #72]
  43d300:	ldr	x0, [sp, #64]
  43d304:	cmp	x2, x0
  43d308:	b.cc	43d318 <names_ccw+0x1f8>  // b.lo, b.ul, b.last
  43d30c:	ldr	x0, [sp, #64]
  43d310:	sub	x0, x0, #0x1
  43d314:	b	43d31c <names_ccw+0x1fc>
  43d318:	ldr	x0, [sp, #72]
  43d31c:	add	x0, x1, x0
  43d320:	str	x0, [sp, #48]
  43d324:	ldr	x0, [sp, #16]
  43d328:	add	x4, x0, #0x70
  43d32c:	ldr	x0, [sp, #48]
  43d330:	mov	x3, x0
  43d334:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d338:	add	x2, x0, #0xda0
  43d33c:	mov	x1, #0x10                  	// #16
  43d340:	mov	x0, x4
  43d344:	bl	40a870 <snprintf@plt>
  43d348:	cmp	w0, #0xf
  43d34c:	b.hi	43d35c <names_ccw+0x23c>  // b.pmore
  43d350:	ldr	x0, [sp, #16]
  43d354:	mov	w1, #0x5                   	// #5
  43d358:	str	w1, [x0]
  43d35c:	mov	w0, #0x0                   	// #0
  43d360:	mov	w1, w0
  43d364:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d368:	ldr	x0, [x0, #4032]
  43d36c:	ldr	x2, [sp, #104]
  43d370:	ldr	x0, [x0]
  43d374:	eor	x0, x2, x0
  43d378:	cmp	x0, #0x0
  43d37c:	b.eq	43d384 <names_ccw+0x264>  // b.none
  43d380:	bl	40b280 <__stack_chk_fail@plt>
  43d384:	mov	w0, w1
  43d388:	ldp	x29, x30, [sp], #112
  43d38c:	ret

000000000043d390 <names_mac>:
  43d390:	stp	x29, x30, [sp, #-96]!
  43d394:	mov	x29, sp
  43d398:	str	x0, [sp, #24]
  43d39c:	str	x1, [sp, #16]
  43d3a0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d3a4:	ldr	x0, [x0, #4032]
  43d3a8:	ldr	x1, [x0]
  43d3ac:	str	x1, [sp, #88]
  43d3b0:	mov	x1, #0x0                   	// #0
  43d3b4:	add	x0, sp, #0x48
  43d3b8:	mov	x2, x0
  43d3bc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d3c0:	add	x1, x0, #0xb30
  43d3c4:	ldr	x0, [sp, #24]
  43d3c8:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43d3cc:	str	w0, [sp, #68]
  43d3d0:	ldr	w0, [sp, #68]
  43d3d4:	cmp	w0, #0x0
  43d3d8:	b.ge	43d3e4 <names_mac+0x54>  // b.tcont
  43d3dc:	ldr	w0, [sp, #68]
  43d3e0:	b	43d598 <names_mac+0x208>
  43d3e4:	ldr	x0, [sp, #72]
  43d3e8:	mov	w2, #0x0                   	// #0
  43d3ec:	mov	x1, #0x0                   	// #0
  43d3f0:	bl	40b630 <strtoul@plt>
  43d3f4:	str	x0, [sp, #80]
  43d3f8:	ldr	x0, [sp, #80]
  43d3fc:	cmp	x0, #0x20
  43d400:	b.ne	43d40c <names_mac+0x7c>  // b.any
  43d404:	mov	w0, #0xffffffea            	// #-22
  43d408:	b	43d598 <names_mac+0x208>
  43d40c:	nop
  43d410:	add	x0, sp, #0x48
  43d414:	mov	x2, x0
  43d418:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d41c:	add	x1, x0, #0xda8
  43d420:	ldr	x0, [sp, #24]
  43d424:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43d428:	str	w0, [sp, #68]
  43d42c:	ldr	w0, [sp, #68]
  43d430:	cmp	w0, #0x0
  43d434:	b.ge	43d440 <names_mac+0xb0>  // b.tcont
  43d438:	ldr	w0, [sp, #68]
  43d43c:	b	43d598 <names_mac+0x208>
  43d440:	ldr	x0, [sp, #72]
  43d444:	mov	w2, #0x0                   	// #0
  43d448:	mov	x1, #0x0                   	// #0
  43d44c:	bl	40b630 <strtoul@plt>
  43d450:	str	x0, [sp, #80]
  43d454:	ldr	x0, [sp, #80]
  43d458:	cmp	x0, #0x0
  43d45c:	b.eq	43d468 <names_mac+0xd8>  // b.none
  43d460:	mov	w0, #0x0                   	// #0
  43d464:	b	43d598 <names_mac+0x208>
  43d468:	add	x0, sp, #0x48
  43d46c:	mov	x2, x0
  43d470:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d474:	add	x1, x0, #0xdc0
  43d478:	ldr	x0, [sp, #24]
  43d47c:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43d480:	str	w0, [sp, #68]
  43d484:	ldr	w0, [sp, #68]
  43d488:	cmp	w0, #0x0
  43d48c:	b.ge	43d498 <names_mac+0x108>  // b.tcont
  43d490:	ldr	w0, [sp, #68]
  43d494:	b	43d598 <names_mac+0x208>
  43d498:	ldr	x8, [sp, #72]
  43d49c:	add	x5, sp, #0x40
  43d4a0:	add	x4, sp, #0x3c
  43d4a4:	add	x3, sp, #0x38
  43d4a8:	add	x2, sp, #0x34
  43d4ac:	add	x1, sp, #0x30
  43d4b0:	add	x0, sp, #0x2c
  43d4b4:	mov	x7, x5
  43d4b8:	mov	x6, x4
  43d4bc:	mov	x5, x3
  43d4c0:	mov	x4, x2
  43d4c4:	mov	x3, x1
  43d4c8:	mov	x2, x0
  43d4cc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d4d0:	add	x1, x0, #0xdc8
  43d4d4:	mov	x0, x8
  43d4d8:	bl	40add0 <__isoc99_sscanf@plt>
  43d4dc:	cmp	w0, #0x6
  43d4e0:	b.eq	43d4ec <names_mac+0x15c>  // b.none
  43d4e4:	mov	w0, #0xffffffea            	// #-22
  43d4e8:	b	43d598 <names_mac+0x208>
  43d4ec:	ldr	w1, [sp, #44]
  43d4f0:	ldr	w0, [sp, #48]
  43d4f4:	add	w1, w1, w0
  43d4f8:	ldr	w0, [sp, #52]
  43d4fc:	add	w1, w1, w0
  43d500:	ldr	w0, [sp, #56]
  43d504:	add	w1, w1, w0
  43d508:	ldr	w0, [sp, #60]
  43d50c:	add	w1, w1, w0
  43d510:	ldr	w0, [sp, #64]
  43d514:	add	w0, w1, w0
  43d518:	cmp	w0, #0x0
  43d51c:	b.ne	43d528 <names_mac+0x198>  // b.any
  43d520:	mov	w0, #0xffffffea            	// #-22
  43d524:	b	43d598 <names_mac+0x208>
  43d528:	ldr	w0, [sp, #44]
  43d52c:	and	w1, w0, #0xff
  43d530:	ldr	x0, [sp, #16]
  43d534:	strb	w1, [x0, #4]
  43d538:	ldr	w0, [sp, #48]
  43d53c:	and	w1, w0, #0xff
  43d540:	ldr	x0, [sp, #16]
  43d544:	strb	w1, [x0, #5]
  43d548:	ldr	w0, [sp, #52]
  43d54c:	and	w1, w0, #0xff
  43d550:	ldr	x0, [sp, #16]
  43d554:	strb	w1, [x0, #6]
  43d558:	ldr	w0, [sp, #56]
  43d55c:	and	w1, w0, #0xff
  43d560:	ldr	x0, [sp, #16]
  43d564:	strb	w1, [x0, #7]
  43d568:	ldr	w0, [sp, #60]
  43d56c:	and	w1, w0, #0xff
  43d570:	ldr	x0, [sp, #16]
  43d574:	strb	w1, [x0, #8]
  43d578:	ldr	w0, [sp, #64]
  43d57c:	and	w1, w0, #0xff
  43d580:	ldr	x0, [sp, #16]
  43d584:	strb	w1, [x0, #9]
  43d588:	ldr	x0, [sp, #16]
  43d58c:	mov	w1, #0x1                   	// #1
  43d590:	strb	w1, [x0, #10]
  43d594:	mov	w0, #0x0                   	// #0
  43d598:	mov	w1, w0
  43d59c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d5a0:	ldr	x0, [x0, #4032]
  43d5a4:	ldr	x2, [sp, #88]
  43d5a8:	ldr	x0, [x0]
  43d5ac:	eor	x0, x2, x0
  43d5b0:	cmp	x0, #0x0
  43d5b4:	b.eq	43d5bc <names_mac+0x22c>  // b.none
  43d5b8:	bl	40b280 <__stack_chk_fail@plt>
  43d5bc:	mov	w0, w1
  43d5c0:	ldp	x29, x30, [sp], #96
  43d5c4:	ret

000000000043d5c8 <names_netdevsim>:
  43d5c8:	stp	x29, x30, [sp, #-80]!
  43d5cc:	mov	x29, sp
  43d5d0:	str	x0, [sp, #24]
  43d5d4:	str	x1, [sp, #16]
  43d5d8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d5dc:	ldr	x0, [x0, #4032]
  43d5e0:	ldr	x1, [x0]
  43d5e4:	str	x1, [sp, #72]
  43d5e8:	mov	x1, #0x0                   	// #0
  43d5ec:	str	xzr, [sp, #64]
  43d5f0:	mov	w0, #0x40                  	// #64
  43d5f4:	bl	43b208 <naming_scheme_has>
  43d5f8:	and	w0, w0, #0xff
  43d5fc:	eor	w0, w0, #0x1
  43d600:	and	w0, w0, #0xff
  43d604:	cmp	w0, #0x0
  43d608:	b.eq	43d614 <names_netdevsim+0x4c>  // b.none
  43d60c:	mov	w0, #0x0                   	// #0
  43d610:	b	43d7b4 <names_netdevsim+0x1ec>
  43d614:	ldr	x0, [sp, #24]
  43d618:	cmp	x0, #0x0
  43d61c:	cset	w0, eq  // eq = none
  43d620:	and	w0, w0, #0xff
  43d624:	and	x0, x0, #0xff
  43d628:	cmp	x0, #0x0
  43d62c:	b.eq	43d658 <names_netdevsim+0x90>  // b.none
  43d630:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d634:	add	x1, x0, #0xa03
  43d638:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43d63c:	add	x4, x0, #0x20
  43d640:	mov	w3, #0x2da                 	// #730
  43d644:	mov	x2, x1
  43d648:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d64c:	add	x1, x0, #0xa28
  43d650:	mov	w0, #0x1                   	// #1
  43d654:	bl	40abb0 <log_assert_failed_realm@plt>
  43d658:	ldr	x0, [sp, #16]
  43d65c:	cmp	x0, #0x0
  43d660:	cset	w0, eq  // eq = none
  43d664:	and	w0, w0, #0xff
  43d668:	and	x0, x0, #0xff
  43d66c:	cmp	x0, #0x0
  43d670:	b.eq	43d69c <names_netdevsim+0xd4>  // b.none
  43d674:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d678:	add	x1, x0, #0xa03
  43d67c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43d680:	add	x4, x0, #0x20
  43d684:	mov	w3, #0x2db                 	// #731
  43d688:	mov	x2, x1
  43d68c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d690:	add	x1, x0, #0xa30
  43d694:	mov	w0, #0x1                   	// #1
  43d698:	bl	40abb0 <log_assert_failed_realm@plt>
  43d69c:	add	x0, sp, #0x30
  43d6a0:	mov	x3, x0
  43d6a4:	mov	x2, #0x0                   	// #0
  43d6a8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d6ac:	add	x1, x0, #0xde0
  43d6b0:	ldr	x0, [sp, #24]
  43d6b4:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43d6b8:	str	w0, [sp, #44]
  43d6bc:	ldr	w0, [sp, #44]
  43d6c0:	cmp	w0, #0x0
  43d6c4:	b.ge	43d6d0 <names_netdevsim+0x108>  // b.tcont
  43d6c8:	ldr	w0, [sp, #44]
  43d6cc:	b	43d7b4 <names_netdevsim+0x1ec>
  43d6d0:	ldr	x0, [sp, #48]
  43d6d4:	add	x1, sp, #0x38
  43d6d8:	bl	40aba0 <sd_device_get_sysname@plt>
  43d6dc:	str	w0, [sp, #44]
  43d6e0:	ldr	w0, [sp, #44]
  43d6e4:	cmp	w0, #0x0
  43d6e8:	b.ge	43d6f4 <names_netdevsim+0x12c>  // b.tcont
  43d6ec:	ldr	w0, [sp, #44]
  43d6f0:	b	43d7b4 <names_netdevsim+0x1ec>
  43d6f4:	ldr	x3, [sp, #56]
  43d6f8:	add	x0, sp, #0x28
  43d6fc:	mov	x2, x0
  43d700:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d704:	add	x1, x0, #0xdf0
  43d708:	mov	x0, x3
  43d70c:	bl	40add0 <__isoc99_sscanf@plt>
  43d710:	cmp	w0, #0x1
  43d714:	b.eq	43d720 <names_netdevsim+0x158>  // b.none
  43d718:	mov	w0, #0xffffffea            	// #-22
  43d71c:	b	43d7b4 <names_netdevsim+0x1ec>
  43d720:	add	x0, sp, #0x40
  43d724:	mov	x2, x0
  43d728:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d72c:	add	x1, x0, #0xad0
  43d730:	ldr	x0, [sp, #24]
  43d734:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43d738:	str	w0, [sp, #44]
  43d73c:	ldr	w0, [sp, #44]
  43d740:	cmp	w0, #0x0
  43d744:	b.ge	43d750 <names_netdevsim+0x188>  // b.tcont
  43d748:	ldr	w0, [sp, #44]
  43d74c:	b	43d7b4 <names_netdevsim+0x1ec>
  43d750:	ldr	x0, [sp, #16]
  43d754:	add	x5, x0, #0xa0
  43d758:	ldr	w0, [sp, #40]
  43d75c:	ldr	x1, [sp, #64]
  43d760:	mov	x4, x1
  43d764:	mov	w3, w0
  43d768:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d76c:	add	x2, x0, #0xe00
  43d770:	mov	x1, #0x10                  	// #16
  43d774:	mov	x0, x5
  43d778:	bl	40a870 <snprintf@plt>
  43d77c:	cmp	w0, #0xf
  43d780:	cset	w0, ls  // ls = plast
  43d784:	strb	w0, [sp, #39]
  43d788:	ldrb	w0, [sp, #39]
  43d78c:	eor	w0, w0, #0x1
  43d790:	and	w0, w0, #0xff
  43d794:	cmp	w0, #0x0
  43d798:	b.eq	43d7a4 <names_netdevsim+0x1dc>  // b.none
  43d79c:	mov	w0, #0xffffff97            	// #-105
  43d7a0:	b	43d7b4 <names_netdevsim+0x1ec>
  43d7a4:	ldr	x0, [sp, #16]
  43d7a8:	mov	w1, #0x8                   	// #8
  43d7ac:	str	w1, [x0]
  43d7b0:	mov	w0, #0x0                   	// #0
  43d7b4:	mov	w1, w0
  43d7b8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d7bc:	ldr	x0, [x0, #4032]
  43d7c0:	ldr	x2, [sp, #72]
  43d7c4:	ldr	x0, [x0]
  43d7c8:	eor	x0, x2, x0
  43d7cc:	cmp	x0, #0x0
  43d7d0:	b.eq	43d7d8 <names_netdevsim+0x210>  // b.none
  43d7d4:	bl	40b280 <__stack_chk_fail@plt>
  43d7d8:	mov	w0, w1
  43d7dc:	ldp	x29, x30, [sp], #80
  43d7e0:	ret

000000000043d7e4 <ieee_oui>:
  43d7e4:	sub	sp, sp, #0x70
  43d7e8:	stp	x29, x30, [sp, #16]
  43d7ec:	add	x29, sp, #0x10
  43d7f0:	str	x0, [sp, #56]
  43d7f4:	str	x1, [sp, #48]
  43d7f8:	strb	w2, [sp, #47]
  43d7fc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d800:	ldr	x0, [x0, #4032]
  43d804:	ldr	x1, [x0]
  43d808:	str	x1, [sp, #104]
  43d80c:	mov	x1, #0x0                   	// #0
  43d810:	ldr	x0, [sp, #48]
  43d814:	ldrb	w0, [x0, #10]
  43d818:	eor	w0, w0, #0x1
  43d81c:	and	w0, w0, #0xff
  43d820:	cmp	w0, #0x0
  43d824:	b.eq	43d830 <ieee_oui+0x4c>  // b.none
  43d828:	mov	w0, #0xfffffffe            	// #-2
  43d82c:	b	43d930 <ieee_oui+0x14c>
  43d830:	ldr	x0, [sp, #48]
  43d834:	add	x3, x0, #0x4
  43d838:	mov	x2, #0x3                   	// #3
  43d83c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d840:	add	x1, x0, #0xe08
  43d844:	mov	x0, x3
  43d848:	bl	40b410 <memcmp@plt>
  43d84c:	cmp	w0, #0x0
  43d850:	b.ne	43d85c <ieee_oui+0x78>  // b.any
  43d854:	mov	w0, #0xffffffea            	// #-22
  43d858:	b	43d930 <ieee_oui+0x14c>
  43d85c:	ldr	x0, [sp, #48]
  43d860:	ldrb	w0, [x0, #4]
  43d864:	mov	w1, w0
  43d868:	ldr	x0, [sp, #48]
  43d86c:	ldrb	w0, [x0, #5]
  43d870:	mov	w2, w0
  43d874:	ldr	x0, [sp, #48]
  43d878:	ldrb	w0, [x0, #6]
  43d87c:	mov	w3, w0
  43d880:	ldr	x0, [sp, #48]
  43d884:	ldrb	w0, [x0, #7]
  43d888:	mov	w4, w0
  43d88c:	ldr	x0, [sp, #48]
  43d890:	ldrb	w0, [x0, #8]
  43d894:	mov	w5, w0
  43d898:	ldr	x0, [sp, #48]
  43d89c:	ldrb	w0, [x0, #9]
  43d8a0:	add	x8, sp, #0x48
  43d8a4:	str	w0, [sp]
  43d8a8:	mov	w7, w5
  43d8ac:	mov	w6, w4
  43d8b0:	mov	w5, w3
  43d8b4:	mov	w4, w2
  43d8b8:	mov	w3, w1
  43d8bc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d8c0:	add	x2, x0, #0xe10
  43d8c4:	mov	x1, #0x20                  	// #32
  43d8c8:	mov	x0, x8
  43d8cc:	bl	40a870 <snprintf@plt>
  43d8d0:	cmp	w0, #0x1f
  43d8d4:	cset	w0, hi  // hi = pmore
  43d8d8:	and	w0, w0, #0xff
  43d8dc:	and	x0, x0, #0xff
  43d8e0:	cmp	x0, #0x0
  43d8e4:	b.eq	43d910 <ieee_oui+0x12c>  // b.none
  43d8e8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d8ec:	add	x1, x0, #0xa03
  43d8f0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43d8f4:	add	x4, x0, #0x30
  43d8f8:	mov	w3, #0x2fd                 	// #765
  43d8fc:	mov	x2, x1
  43d900:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d904:	add	x1, x0, #0xe30
  43d908:	mov	w0, #0x1                   	// #1
  43d90c:	bl	40abb0 <log_assert_failed_realm@plt>
  43d910:	add	x0, sp, #0x48
  43d914:	ldrb	w4, [sp, #47]
  43d918:	mov	x3, #0x0                   	// #0
  43d91c:	mov	x2, x0
  43d920:	mov	x1, #0x0                   	// #0
  43d924:	ldr	x0, [sp, #56]
  43d928:	bl	436bd8 <udev_builtin_hwdb_lookup>
  43d92c:	mov	w0, #0x0                   	// #0
  43d930:	mov	w1, w0
  43d934:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d938:	ldr	x0, [x0, #4032]
  43d93c:	ldr	x2, [sp, #104]
  43d940:	ldr	x0, [x0]
  43d944:	eor	x0, x2, x0
  43d948:	cmp	x0, #0x0
  43d94c:	b.eq	43d954 <ieee_oui+0x170>  // b.none
  43d950:	bl	40b280 <__stack_chk_fail@plt>
  43d954:	mov	w0, w1
  43d958:	ldp	x29, x30, [sp, #16]
  43d95c:	add	sp, sp, #0x70
  43d960:	ret

000000000043d964 <builtin_net_id>:
  43d964:	sub	sp, sp, #0x140
  43d968:	stp	x29, x30, [sp, #16]
  43d96c:	add	x29, sp, #0x10
  43d970:	str	x0, [sp, #56]
  43d974:	str	w1, [sp, #52]
  43d978:	str	x2, [sp, #40]
  43d97c:	strb	w3, [sp, #51]
  43d980:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43d984:	ldr	x0, [x0, #4032]
  43d988:	ldr	x1, [x0]
  43d98c:	str	x1, [sp, #312]
  43d990:	mov	x1, #0x0                   	// #0
  43d994:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d998:	add	x0, x0, #0xe58
  43d99c:	str	x0, [sp, #104]
  43d9a0:	stp	xzr, xzr, [sp, #120]
  43d9a4:	stp	xzr, xzr, [sp, #136]
  43d9a8:	stp	xzr, xzr, [sp, #152]
  43d9ac:	stp	xzr, xzr, [sp, #168]
  43d9b0:	stp	xzr, xzr, [sp, #184]
  43d9b4:	stp	xzr, xzr, [sp, #200]
  43d9b8:	stp	xzr, xzr, [sp, #216]
  43d9bc:	stp	xzr, xzr, [sp, #232]
  43d9c0:	stp	xzr, xzr, [sp, #248]
  43d9c4:	add	x0, sp, #0x200
  43d9c8:	stp	xzr, xzr, [x0, #-248]
  43d9cc:	add	x0, sp, #0x200
  43d9d0:	stp	xzr, xzr, [x0, #-232]
  43d9d4:	add	x0, sp, #0x50
  43d9d8:	mov	x2, x0
  43d9dc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43d9e0:	add	x1, x0, #0xb30
  43d9e4:	ldr	x0, [sp, #56]
  43d9e8:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43d9ec:	str	w0, [sp, #76]
  43d9f0:	ldr	w0, [sp, #76]
  43d9f4:	cmp	w0, #0x0
  43d9f8:	b.ge	43da04 <builtin_net_id+0xa0>  // b.tcont
  43d9fc:	ldr	w0, [sp, #76]
  43da00:	b	43e224 <builtin_net_id+0x8c0>
  43da04:	ldr	x0, [sp, #80]
  43da08:	mov	w2, #0x0                   	// #0
  43da0c:	mov	x1, #0x0                   	// #0
  43da10:	bl	40b630 <strtoul@plt>
  43da14:	str	x0, [sp, #112]
  43da18:	ldr	x0, [sp, #112]
  43da1c:	cmp	x0, #0x100
  43da20:	b.eq	43da88 <builtin_net_id+0x124>  // b.none
  43da24:	ldr	x0, [sp, #112]
  43da28:	cmp	x0, #0x100
  43da2c:	b.hi	43da98 <builtin_net_id+0x134>  // b.pmore
  43da30:	ldr	x0, [sp, #112]
  43da34:	cmp	x0, #0x1
  43da38:	b.eq	43da4c <builtin_net_id+0xe8>  // b.none
  43da3c:	ldr	x0, [sp, #112]
  43da40:	cmp	x0, #0x20
  43da44:	b.eq	43da5c <builtin_net_id+0xf8>  // b.none
  43da48:	b	43da98 <builtin_net_id+0x134>
  43da4c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43da50:	add	x0, x0, #0xe58
  43da54:	str	x0, [sp, #104]
  43da58:	b	43daa0 <builtin_net_id+0x13c>
  43da5c:	mov	w0, #0x4                   	// #4
  43da60:	bl	43b208 <naming_scheme_has>
  43da64:	and	w0, w0, #0xff
  43da68:	cmp	w0, #0x0
  43da6c:	b.eq	43da80 <builtin_net_id+0x11c>  // b.none
  43da70:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43da74:	add	x0, x0, #0xe60
  43da78:	str	x0, [sp, #104]
  43da7c:	b	43daa0 <builtin_net_id+0x13c>
  43da80:	mov	w0, #0x0                   	// #0
  43da84:	b	43e224 <builtin_net_id+0x8c0>
  43da88:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43da8c:	add	x0, x0, #0xe68
  43da90:	str	x0, [sp, #104]
  43da94:	b	43daa0 <builtin_net_id+0x13c>
  43da98:	mov	w0, #0x0                   	// #0
  43da9c:	b	43e224 <builtin_net_id+0x8c0>
  43daa0:	add	x0, sp, #0x50
  43daa4:	mov	x2, x0
  43daa8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43daac:	add	x1, x0, #0xe70
  43dab0:	ldr	x0, [sp, #56]
  43dab4:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43dab8:	str	w0, [sp, #76]
  43dabc:	ldr	w0, [sp, #76]
  43dac0:	cmp	w0, #0x0
  43dac4:	b.ge	43dad0 <builtin_net_id+0x16c>  // b.tcont
  43dac8:	ldr	w0, [sp, #76]
  43dacc:	b	43e224 <builtin_net_id+0x8c0>
  43dad0:	add	x0, sp, #0x58
  43dad4:	mov	x2, x0
  43dad8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dadc:	add	x1, x0, #0xe78
  43dae0:	ldr	x0, [sp, #56]
  43dae4:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43dae8:	str	w0, [sp, #76]
  43daec:	ldr	w0, [sp, #76]
  43daf0:	cmp	w0, #0x0
  43daf4:	b.ge	43db00 <builtin_net_id+0x19c>  // b.tcont
  43daf8:	ldr	w0, [sp, #76]
  43dafc:	b	43e224 <builtin_net_id+0x8c0>
  43db00:	ldr	x0, [sp, #80]
  43db04:	ldr	x1, [sp, #88]
  43db08:	bl	40b710 <strcmp@plt>
  43db0c:	cmp	w0, #0x0
  43db10:	b.eq	43db1c <builtin_net_id+0x1b8>  // b.none
  43db14:	mov	w0, #0x0                   	// #0
  43db18:	b	43e224 <builtin_net_id+0x8c0>
  43db1c:	add	x0, sp, #0x60
  43db20:	mov	x1, x0
  43db24:	ldr	x0, [sp, #56]
  43db28:	bl	40a460 <sd_device_get_devtype@plt>
  43db2c:	cmp	w0, #0x0
  43db30:	b.lt	43db88 <builtin_net_id+0x224>  // b.tstop
  43db34:	ldr	x0, [sp, #96]
  43db38:	mov	x1, x0
  43db3c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43db40:	add	x0, x0, #0xe80
  43db44:	bl	40b710 <strcmp@plt>
  43db48:	cmp	w0, #0x0
  43db4c:	b.ne	43db60 <builtin_net_id+0x1fc>  // b.any
  43db50:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43db54:	add	x0, x0, #0xe88
  43db58:	str	x0, [sp, #104]
  43db5c:	b	43db88 <builtin_net_id+0x224>
  43db60:	ldr	x0, [sp, #96]
  43db64:	mov	x1, x0
  43db68:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43db6c:	add	x0, x0, #0xe90
  43db70:	bl	40b710 <strcmp@plt>
  43db74:	cmp	w0, #0x0
  43db78:	b.ne	43db88 <builtin_net_id+0x224>  // b.any
  43db7c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43db80:	add	x0, x0, #0xe98
  43db84:	str	x0, [sp, #104]
  43db88:	bl	446dec <naming_scheme>
  43db8c:	ldr	x0, [x0]
  43db90:	mov	x3, x0
  43db94:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43db98:	add	x2, x0, #0xea0
  43db9c:	ldrb	w1, [sp, #51]
  43dba0:	ldr	x0, [sp, #56]
  43dba4:	bl	436504 <udev_builtin_add_property>
  43dba8:	add	x0, sp, #0x78
  43dbac:	mov	x1, x0
  43dbb0:	ldr	x0, [sp, #56]
  43dbb4:	bl	43d390 <names_mac>
  43dbb8:	str	w0, [sp, #76]
  43dbbc:	ldr	w0, [sp, #76]
  43dbc0:	cmp	w0, #0x0
  43dbc4:	b.lt	43dca0 <builtin_net_id+0x33c>  // b.tstop
  43dbc8:	ldrb	w0, [sp, #130]
  43dbcc:	cmp	w0, #0x0
  43dbd0:	b.eq	43dca0 <builtin_net_id+0x33c>  // b.none
  43dbd4:	ldrb	w0, [sp, #124]
  43dbd8:	mov	w2, w0
  43dbdc:	ldrb	w0, [sp, #125]
  43dbe0:	mov	w3, w0
  43dbe4:	ldrb	w0, [sp, #126]
  43dbe8:	mov	w4, w0
  43dbec:	ldrb	w0, [sp, #127]
  43dbf0:	mov	w5, w0
  43dbf4:	ldrb	w0, [sp, #128]
  43dbf8:	ldrb	w1, [sp, #129]
  43dbfc:	add	x8, sp, #0x128
  43dc00:	str	w1, [sp, #8]
  43dc04:	str	w0, [sp]
  43dc08:	mov	w7, w5
  43dc0c:	mov	w6, w4
  43dc10:	mov	w5, w3
  43dc14:	mov	w4, w2
  43dc18:	ldr	x3, [sp, #104]
  43dc1c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dc20:	add	x2, x0, #0xeb8
  43dc24:	mov	x1, #0x10                  	// #16
  43dc28:	mov	x0, x8
  43dc2c:	bl	40a870 <snprintf@plt>
  43dc30:	cmp	w0, #0xf
  43dc34:	cset	w0, hi  // hi = pmore
  43dc38:	and	w0, w0, #0xff
  43dc3c:	and	x0, x0, #0xff
  43dc40:	cmp	x0, #0x0
  43dc44:	b.eq	43dc70 <builtin_net_id+0x30c>  // b.none
  43dc48:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dc4c:	add	x1, x0, #0xa03
  43dc50:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43dc54:	add	x4, x0, #0x40
  43dc58:	mov	w3, #0x338                 	// #824
  43dc5c:	mov	x2, x1
  43dc60:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dc64:	add	x1, x0, #0xe30
  43dc68:	mov	w0, #0x1                   	// #1
  43dc6c:	bl	40abb0 <log_assert_failed_realm@plt>
  43dc70:	add	x0, sp, #0x128
  43dc74:	mov	x3, x0
  43dc78:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dc7c:	add	x2, x0, #0xed8
  43dc80:	ldrb	w1, [sp, #51]
  43dc84:	ldr	x0, [sp, #56]
  43dc88:	bl	436504 <udev_builtin_add_property>
  43dc8c:	add	x0, sp, #0x78
  43dc90:	ldrb	w2, [sp, #51]
  43dc94:	mov	x1, x0
  43dc98:	ldr	x0, [sp, #56]
  43dc9c:	bl	43d7e4 <ieee_oui>
  43dca0:	add	x0, sp, #0x78
  43dca4:	mov	x1, x0
  43dca8:	ldr	x0, [sp, #56]
  43dcac:	bl	43d120 <names_ccw>
  43dcb0:	cmp	w0, #0x0
  43dcb4:	b.lt	43dd18 <builtin_net_id+0x3b4>  // b.tstop
  43dcb8:	ldr	w0, [sp, #120]
  43dcbc:	cmp	w0, #0x5
  43dcc0:	b.ne	43dd18 <builtin_net_id+0x3b4>  // b.any
  43dcc4:	add	x0, sp, #0x78
  43dcc8:	add	x0, x0, #0x70
  43dccc:	add	x5, sp, #0x128
  43dcd0:	mov	x4, x0
  43dcd4:	ldr	x3, [sp, #104]
  43dcd8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dcdc:	add	x2, x0, #0xee8
  43dce0:	mov	x1, #0x10                  	// #16
  43dce4:	mov	x0, x5
  43dce8:	bl	40a870 <snprintf@plt>
  43dcec:	cmp	w0, #0xf
  43dcf0:	b.hi	43dd10 <builtin_net_id+0x3ac>  // b.pmore
  43dcf4:	add	x0, sp, #0x128
  43dcf8:	mov	x3, x0
  43dcfc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dd00:	add	x2, x0, #0xef0
  43dd04:	ldrb	w1, [sp, #51]
  43dd08:	ldr	x0, [sp, #56]
  43dd0c:	bl	436504 <udev_builtin_add_property>
  43dd10:	mov	w0, #0x0                   	// #0
  43dd14:	b	43e224 <builtin_net_id+0x8c0>
  43dd18:	add	x0, sp, #0x78
  43dd1c:	mov	x1, x0
  43dd20:	ldr	x0, [sp, #56]
  43dd24:	bl	43c4e4 <names_vio>
  43dd28:	cmp	w0, #0x0
  43dd2c:	b.lt	43dd90 <builtin_net_id+0x42c>  // b.tstop
  43dd30:	ldr	w0, [sp, #120]
  43dd34:	cmp	w0, #0x6
  43dd38:	b.ne	43dd90 <builtin_net_id+0x42c>  // b.any
  43dd3c:	add	x0, sp, #0x78
  43dd40:	add	x0, x0, #0x80
  43dd44:	add	x5, sp, #0x128
  43dd48:	mov	x4, x0
  43dd4c:	ldr	x3, [sp, #104]
  43dd50:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dd54:	add	x2, x0, #0xee8
  43dd58:	mov	x1, #0x10                  	// #16
  43dd5c:	mov	x0, x5
  43dd60:	bl	40a870 <snprintf@plt>
  43dd64:	cmp	w0, #0xf
  43dd68:	b.hi	43dd88 <builtin_net_id+0x424>  // b.pmore
  43dd6c:	add	x0, sp, #0x128
  43dd70:	mov	x3, x0
  43dd74:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dd78:	add	x2, x0, #0xf08
  43dd7c:	ldrb	w1, [sp, #51]
  43dd80:	ldr	x0, [sp, #56]
  43dd84:	bl	436504 <udev_builtin_add_property>
  43dd88:	mov	w0, #0x0                   	// #0
  43dd8c:	b	43e224 <builtin_net_id+0x8c0>
  43dd90:	add	x0, sp, #0x78
  43dd94:	ldrb	w2, [sp, #51]
  43dd98:	mov	x1, x0
  43dd9c:	ldr	x0, [sp, #56]
  43dda0:	bl	43c680 <names_platform>
  43dda4:	cmp	w0, #0x0
  43dda8:	b.lt	43de0c <builtin_net_id+0x4a8>  // b.tstop
  43ddac:	ldr	w0, [sp, #120]
  43ddb0:	cmp	w0, #0x7
  43ddb4:	b.ne	43de0c <builtin_net_id+0x4a8>  // b.any
  43ddb8:	add	x0, sp, #0x78
  43ddbc:	add	x0, x0, #0x90
  43ddc0:	add	x5, sp, #0x128
  43ddc4:	mov	x4, x0
  43ddc8:	ldr	x3, [sp, #104]
  43ddcc:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ddd0:	add	x2, x0, #0xee8
  43ddd4:	mov	x1, #0x10                  	// #16
  43ddd8:	mov	x0, x5
  43dddc:	bl	40a870 <snprintf@plt>
  43dde0:	cmp	w0, #0xf
  43dde4:	b.hi	43de04 <builtin_net_id+0x4a0>  // b.pmore
  43dde8:	add	x0, sp, #0x128
  43ddec:	mov	x3, x0
  43ddf0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ddf4:	add	x2, x0, #0xef0
  43ddf8:	ldrb	w1, [sp, #51]
  43ddfc:	ldr	x0, [sp, #56]
  43de00:	bl	436504 <udev_builtin_add_property>
  43de04:	mov	w0, #0x0                   	// #0
  43de08:	b	43e224 <builtin_net_id+0x8c0>
  43de0c:	add	x0, sp, #0x78
  43de10:	mov	x1, x0
  43de14:	ldr	x0, [sp, #56]
  43de18:	bl	43d5c8 <names_netdevsim>
  43de1c:	cmp	w0, #0x0
  43de20:	b.lt	43de84 <builtin_net_id+0x520>  // b.tstop
  43de24:	ldr	w0, [sp, #120]
  43de28:	cmp	w0, #0x8
  43de2c:	b.ne	43de84 <builtin_net_id+0x520>  // b.any
  43de30:	add	x0, sp, #0x78
  43de34:	add	x0, x0, #0xa0
  43de38:	add	x5, sp, #0x128
  43de3c:	mov	x4, x0
  43de40:	ldr	x3, [sp, #104]
  43de44:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43de48:	add	x2, x0, #0xee8
  43de4c:	mov	x1, #0x10                  	// #16
  43de50:	mov	x0, x5
  43de54:	bl	40a870 <snprintf@plt>
  43de58:	cmp	w0, #0xf
  43de5c:	b.hi	43de7c <builtin_net_id+0x518>  // b.pmore
  43de60:	add	x0, sp, #0x128
  43de64:	mov	x3, x0
  43de68:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43de6c:	add	x2, x0, #0xef0
  43de70:	ldrb	w1, [sp, #51]
  43de74:	ldr	x0, [sp, #56]
  43de78:	bl	436504 <udev_builtin_add_property>
  43de7c:	mov	w0, #0x0                   	// #0
  43de80:	b	43e224 <builtin_net_id+0x8c0>
  43de84:	add	x0, sp, #0x78
  43de88:	mov	x1, x0
  43de8c:	ldr	x0, [sp, #56]
  43de90:	bl	43c8c0 <names_pci>
  43de94:	cmp	w0, #0x0
  43de98:	b.ge	43dea4 <builtin_net_id+0x540>  // b.tcont
  43de9c:	mov	w0, #0x0                   	// #0
  43dea0:	b	43e224 <builtin_net_id+0x8c0>
  43dea4:	ldr	w0, [sp, #120]
  43dea8:	cmp	w0, #0x1
  43deac:	b.ne	43e038 <builtin_net_id+0x6d4>  // b.any
  43deb0:	ldrb	w0, [sp, #176]
  43deb4:	cmp	w0, #0x0
  43deb8:	b.eq	43df08 <builtin_net_id+0x5a4>  // b.none
  43debc:	add	x0, sp, #0x78
  43dec0:	add	x0, x0, #0x38
  43dec4:	add	x5, sp, #0x128
  43dec8:	mov	x4, x0
  43decc:	ldr	x3, [sp, #104]
  43ded0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43ded4:	add	x2, x0, #0xee8
  43ded8:	mov	x1, #0x10                  	// #16
  43dedc:	mov	x0, x5
  43dee0:	bl	40a870 <snprintf@plt>
  43dee4:	cmp	w0, #0xf
  43dee8:	b.hi	43df08 <builtin_net_id+0x5a4>  // b.pmore
  43deec:	add	x0, sp, #0x128
  43def0:	mov	x3, x0
  43def4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43def8:	add	x2, x0, #0xf20
  43defc:	ldrb	w1, [sp, #51]
  43df00:	ldr	x0, [sp, #56]
  43df04:	bl	436504 <udev_builtin_add_property>
  43df08:	ldr	x0, [sp, #192]
  43df0c:	cmp	x0, #0x0
  43df10:	b.eq	43df80 <builtin_net_id+0x61c>  // b.none
  43df14:	mov	w0, #0x80                  	// #128
  43df18:	bl	43b208 <naming_scheme_has>
  43df1c:	and	w0, w0, #0xff
  43df20:	cmp	w0, #0x0
  43df24:	b.ne	43df30 <builtin_net_id+0x5cc>  // b.any
  43df28:	ldr	x0, [sp, #104]
  43df2c:	b	43df38 <builtin_net_id+0x5d4>
  43df30:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43df34:	add	x0, x0, #0xf38
  43df38:	ldr	x1, [sp, #192]
  43df3c:	add	x5, sp, #0x128
  43df40:	mov	x4, x1
  43df44:	mov	x3, x0
  43df48:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43df4c:	add	x2, x0, #0xee8
  43df50:	mov	x1, #0x10                  	// #16
  43df54:	mov	x0, x5
  43df58:	bl	40a870 <snprintf@plt>
  43df5c:	cmp	w0, #0xf
  43df60:	b.hi	43df80 <builtin_net_id+0x61c>  // b.pmore
  43df64:	add	x0, sp, #0x128
  43df68:	mov	x3, x0
  43df6c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43df70:	add	x2, x0, #0xf40
  43df74:	ldrb	w1, [sp, #51]
  43df78:	ldr	x0, [sp, #56]
  43df7c:	bl	436504 <udev_builtin_add_property>
  43df80:	ldrb	w0, [sp, #160]
  43df84:	cmp	w0, #0x0
  43df88:	b.eq	43dfd8 <builtin_net_id+0x674>  // b.none
  43df8c:	add	x0, sp, #0x78
  43df90:	add	x0, x0, #0x28
  43df94:	add	x5, sp, #0x128
  43df98:	mov	x4, x0
  43df9c:	ldr	x3, [sp, #104]
  43dfa0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dfa4:	add	x2, x0, #0xee8
  43dfa8:	mov	x1, #0x10                  	// #16
  43dfac:	mov	x0, x5
  43dfb0:	bl	40a870 <snprintf@plt>
  43dfb4:	cmp	w0, #0xf
  43dfb8:	b.hi	43dfd8 <builtin_net_id+0x674>  // b.pmore
  43dfbc:	add	x0, sp, #0x128
  43dfc0:	mov	x3, x0
  43dfc4:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dfc8:	add	x2, x0, #0xef0
  43dfcc:	ldrb	w1, [sp, #51]
  43dfd0:	ldr	x0, [sp, #56]
  43dfd4:	bl	436504 <udev_builtin_add_property>
  43dfd8:	ldrb	w0, [sp, #144]
  43dfdc:	cmp	w0, #0x0
  43dfe0:	b.eq	43e030 <builtin_net_id+0x6cc>  // b.none
  43dfe4:	add	x0, sp, #0x78
  43dfe8:	add	x0, x0, #0x18
  43dfec:	add	x5, sp, #0x128
  43dff0:	mov	x4, x0
  43dff4:	ldr	x3, [sp, #104]
  43dff8:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43dffc:	add	x2, x0, #0xee8
  43e000:	mov	x1, #0x10                  	// #16
  43e004:	mov	x0, x5
  43e008:	bl	40a870 <snprintf@plt>
  43e00c:	cmp	w0, #0xf
  43e010:	b.hi	43e030 <builtin_net_id+0x6cc>  // b.pmore
  43e014:	add	x0, sp, #0x128
  43e018:	mov	x3, x0
  43e01c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43e020:	add	x2, x0, #0xf08
  43e024:	ldrb	w1, [sp, #51]
  43e028:	ldr	x0, [sp, #56]
  43e02c:	bl	436504 <udev_builtin_add_property>
  43e030:	mov	w0, #0x0                   	// #0
  43e034:	b	43e224 <builtin_net_id+0x8c0>
  43e038:	add	x0, sp, #0x78
  43e03c:	mov	x1, x0
  43e040:	ldr	x0, [sp, #56]
  43e044:	bl	43cc54 <names_usb>
  43e048:	cmp	w0, #0x0
  43e04c:	b.lt	43e12c <builtin_net_id+0x7c8>  // b.tstop
  43e050:	ldr	w0, [sp, #120]
  43e054:	cmp	w0, #0x2
  43e058:	b.ne	43e12c <builtin_net_id+0x7c8>  // b.any
  43e05c:	ldrb	w0, [sp, #160]
  43e060:	cmp	w0, #0x0
  43e064:	b.eq	43e0c0 <builtin_net_id+0x75c>  // b.none
  43e068:	add	x0, sp, #0x78
  43e06c:	add	x1, x0, #0x50
  43e070:	add	x0, sp, #0x78
  43e074:	add	x0, x0, #0x28
  43e078:	add	x6, sp, #0x128
  43e07c:	mov	x5, x1
  43e080:	mov	x4, x0
  43e084:	ldr	x3, [sp, #104]
  43e088:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43e08c:	add	x2, x0, #0xf58
  43e090:	mov	x1, #0x10                  	// #16
  43e094:	mov	x0, x6
  43e098:	bl	40a870 <snprintf@plt>
  43e09c:	cmp	w0, #0xf
  43e0a0:	b.hi	43e0c0 <builtin_net_id+0x75c>  // b.pmore
  43e0a4:	add	x0, sp, #0x128
  43e0a8:	mov	x3, x0
  43e0ac:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43e0b0:	add	x2, x0, #0xef0
  43e0b4:	ldrb	w1, [sp, #51]
  43e0b8:	ldr	x0, [sp, #56]
  43e0bc:	bl	436504 <udev_builtin_add_property>
  43e0c0:	ldrb	w0, [sp, #144]
  43e0c4:	cmp	w0, #0x0
  43e0c8:	b.eq	43e124 <builtin_net_id+0x7c0>  // b.none
  43e0cc:	add	x0, sp, #0x78
  43e0d0:	add	x1, x0, #0x50
  43e0d4:	add	x0, sp, #0x78
  43e0d8:	add	x0, x0, #0x18
  43e0dc:	add	x6, sp, #0x128
  43e0e0:	mov	x5, x1
  43e0e4:	mov	x4, x0
  43e0e8:	ldr	x3, [sp, #104]
  43e0ec:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43e0f0:	add	x2, x0, #0xf58
  43e0f4:	mov	x1, #0x10                  	// #16
  43e0f8:	mov	x0, x6
  43e0fc:	bl	40a870 <snprintf@plt>
  43e100:	cmp	w0, #0xf
  43e104:	b.hi	43e124 <builtin_net_id+0x7c0>  // b.pmore
  43e108:	add	x0, sp, #0x128
  43e10c:	mov	x3, x0
  43e110:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43e114:	add	x2, x0, #0xf08
  43e118:	ldrb	w1, [sp, #51]
  43e11c:	ldr	x0, [sp, #56]
  43e120:	bl	436504 <udev_builtin_add_property>
  43e124:	mov	w0, #0x0                   	// #0
  43e128:	b	43e224 <builtin_net_id+0x8c0>
  43e12c:	add	x0, sp, #0x78
  43e130:	mov	x1, x0
  43e134:	ldr	x0, [sp, #56]
  43e138:	bl	43cf40 <names_bcma>
  43e13c:	cmp	w0, #0x0
  43e140:	b.lt	43e220 <builtin_net_id+0x8bc>  // b.tstop
  43e144:	ldr	w0, [sp, #120]
  43e148:	cmp	w0, #0x3
  43e14c:	b.ne	43e220 <builtin_net_id+0x8bc>  // b.any
  43e150:	ldrb	w0, [sp, #160]
  43e154:	cmp	w0, #0x0
  43e158:	b.eq	43e1b4 <builtin_net_id+0x850>  // b.none
  43e15c:	add	x0, sp, #0x78
  43e160:	add	x1, x0, #0x60
  43e164:	add	x0, sp, #0x78
  43e168:	add	x0, x0, #0x28
  43e16c:	add	x6, sp, #0x128
  43e170:	mov	x5, x1
  43e174:	mov	x4, x0
  43e178:	ldr	x3, [sp, #104]
  43e17c:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43e180:	add	x2, x0, #0xf58
  43e184:	mov	x1, #0x10                  	// #16
  43e188:	mov	x0, x6
  43e18c:	bl	40a870 <snprintf@plt>
  43e190:	cmp	w0, #0xf
  43e194:	b.hi	43e1b4 <builtin_net_id+0x850>  // b.pmore
  43e198:	add	x0, sp, #0x128
  43e19c:	mov	x3, x0
  43e1a0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43e1a4:	add	x2, x0, #0xef0
  43e1a8:	ldrb	w1, [sp, #51]
  43e1ac:	ldr	x0, [sp, #56]
  43e1b0:	bl	436504 <udev_builtin_add_property>
  43e1b4:	ldrb	w0, [sp, #144]
  43e1b8:	cmp	w0, #0x0
  43e1bc:	b.eq	43e218 <builtin_net_id+0x8b4>  // b.none
  43e1c0:	add	x0, sp, #0x78
  43e1c4:	add	x1, x0, #0x60
  43e1c8:	add	x0, sp, #0x78
  43e1cc:	add	x0, x0, #0x18
  43e1d0:	add	x6, sp, #0x128
  43e1d4:	mov	x5, x1
  43e1d8:	mov	x4, x0
  43e1dc:	ldr	x3, [sp, #104]
  43e1e0:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43e1e4:	add	x2, x0, #0xf58
  43e1e8:	mov	x1, #0x10                  	// #16
  43e1ec:	mov	x0, x6
  43e1f0:	bl	40a870 <snprintf@plt>
  43e1f4:	cmp	w0, #0x0
  43e1f8:	b.eq	43e218 <builtin_net_id+0x8b4>  // b.none
  43e1fc:	add	x0, sp, #0x128
  43e200:	mov	x3, x0
  43e204:	adrp	x0, 45a000 <__PRETTY_FUNCTION__.8324+0x3898>
  43e208:	add	x2, x0, #0xf08
  43e20c:	ldrb	w1, [sp, #51]
  43e210:	ldr	x0, [sp, #56]
  43e214:	bl	436504 <udev_builtin_add_property>
  43e218:	mov	w0, #0x0                   	// #0
  43e21c:	b	43e224 <builtin_net_id+0x8c0>
  43e220:	mov	w0, #0x0                   	// #0
  43e224:	mov	w1, w0
  43e228:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43e22c:	ldr	x0, [x0, #4032]
  43e230:	ldr	x2, [sp, #312]
  43e234:	ldr	x0, [x0]
  43e238:	eor	x0, x2, x0
  43e23c:	cmp	x0, #0x0
  43e240:	b.eq	43e248 <builtin_net_id+0x8e4>  // b.none
  43e244:	bl	40b280 <__stack_chk_fail@plt>
  43e248:	mov	w0, w1
  43e24c:	ldp	x29, x30, [sp, #16]
  43e250:	add	sp, sp, #0x140
  43e254:	ret

000000000043e258 <freep>:
  43e258:	stp	x29, x30, [sp, #-32]!
  43e25c:	mov	x29, sp
  43e260:	str	x0, [sp, #24]
  43e264:	ldr	x0, [sp, #24]
  43e268:	ldr	x0, [x0]
  43e26c:	bl	40ba20 <free@plt>
  43e270:	nop
  43e274:	ldp	x29, x30, [sp], #32
  43e278:	ret

000000000043e27c <builtin_net_setup_link>:
  43e27c:	sub	sp, sp, #0xc0
  43e280:	stp	x29, x30, [sp, #16]
  43e284:	add	x29, sp, #0x10
  43e288:	str	x19, [sp, #32]
  43e28c:	str	x0, [sp, #72]
  43e290:	str	w1, [sp, #68]
  43e294:	str	x2, [sp, #56]
  43e298:	strb	w3, [sp, #67]
  43e29c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43e2a0:	ldr	x0, [x0, #4032]
  43e2a4:	ldr	x1, [x0]
  43e2a8:	str	x1, [sp, #184]
  43e2ac:	mov	x1, #0x0                   	// #0
  43e2b0:	str	xzr, [sp, #120]
  43e2b4:	str	xzr, [sp, #128]
  43e2b8:	ldr	w0, [sp, #68]
  43e2bc:	cmp	w0, #0x1
  43e2c0:	b.le	43e38c <builtin_net_setup_link+0x110>
  43e2c4:	str	xzr, [sp, #144]
  43e2c8:	ldr	x0, [sp, #72]
  43e2cc:	str	x0, [sp, #176]
  43e2d0:	mov	w0, #0x3                   	// #3
  43e2d4:	str	w0, [sp, #112]
  43e2d8:	mov	w0, #0x16                  	// #22
  43e2dc:	movk	w0, #0x4000, lsl #16
  43e2e0:	str	w0, [sp, #116]
  43e2e4:	ldr	x0, [sp, #176]
  43e2e8:	cmp	x0, #0x0
  43e2ec:	b.eq	43e328 <builtin_net_setup_link+0xac>  // b.none
  43e2f0:	mov	w0, #0x1                   	// #1
  43e2f4:	bl	40be30 <log_get_max_level_realm@plt>
  43e2f8:	mov	w1, w0
  43e2fc:	ldr	w0, [sp, #112]
  43e300:	cmp	w0, w1
  43e304:	cset	w0, le
  43e308:	and	w0, w0, #0xff
  43e30c:	and	x0, x0, #0xff
  43e310:	cmp	x0, #0x0
  43e314:	b.eq	43e328 <builtin_net_setup_link+0xac>  // b.none
  43e318:	add	x0, sp, #0x90
  43e31c:	mov	x1, x0
  43e320:	ldr	x0, [sp, #176]
  43e324:	bl	40aba0 <sd_device_get_sysname@plt>
  43e328:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e32c:	add	x2, x0, #0x53
  43e330:	ldr	x0, [sp, #144]
  43e334:	cmp	x0, #0x0
  43e338:	b.eq	43e348 <builtin_net_setup_link+0xcc>  // b.none
  43e33c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e340:	add	x0, x0, #0x80
  43e344:	b	43e34c <builtin_net_setup_link+0xd0>
  43e348:	mov	x0, #0x0                   	// #0
  43e34c:	ldr	x3, [sp, #144]
  43e350:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  43e354:	add	x1, x1, #0x88
  43e358:	str	x1, [sp, #8]
  43e35c:	str	xzr, [sp]
  43e360:	mov	x7, #0x0                   	// #0
  43e364:	mov	x6, x3
  43e368:	mov	x5, x0
  43e36c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e370:	add	x4, x0, #0x208
  43e374:	mov	w3, #0x13                  	// #19
  43e378:	ldr	w1, [sp, #116]
  43e37c:	ldr	w0, [sp, #112]
  43e380:	bl	40b020 <log_object_internal@plt>
  43e384:	mov	w19, w0
  43e388:	b	43e6cc <builtin_net_setup_link+0x450>
  43e38c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e390:	add	x0, x0, #0x1b0
  43e394:	ldr	x0, [x0]
  43e398:	add	x1, sp, #0x78
  43e39c:	mov	x2, x1
  43e3a0:	ldr	x1, [sp, #72]
  43e3a4:	bl	446510 <link_get_driver>
  43e3a8:	str	w0, [sp, #84]
  43e3ac:	ldr	w0, [sp, #84]
  43e3b0:	cmp	w0, #0x0
  43e3b4:	b.lt	43e3d4 <builtin_net_setup_link+0x158>  // b.tstop
  43e3b8:	ldr	x0, [sp, #120]
  43e3bc:	mov	x3, x0
  43e3c0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e3c4:	add	x2, x0, #0xb0
  43e3c8:	ldrb	w1, [sp, #67]
  43e3cc:	ldr	x0, [sp, #72]
  43e3d0:	bl	436504 <udev_builtin_add_property>
  43e3d4:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e3d8:	add	x0, x0, #0x1b0
  43e3dc:	ldr	x0, [x0]
  43e3e0:	add	x1, sp, #0x88
  43e3e4:	mov	x2, x1
  43e3e8:	ldr	x1, [sp, #72]
  43e3ec:	bl	4447a4 <link_config_get>
  43e3f0:	str	w0, [sp, #84]
  43e3f4:	ldr	w0, [sp, #84]
  43e3f8:	cmp	w0, #0x0
  43e3fc:	b.ge	43e594 <builtin_net_setup_link+0x318>  // b.tcont
  43e400:	ldr	w0, [sp, #84]
  43e404:	cmn	w0, #0x2
  43e408:	b.ne	43e4d0 <builtin_net_setup_link+0x254>  // b.any
  43e40c:	str	xzr, [sp, #144]
  43e410:	ldr	x0, [sp, #72]
  43e414:	str	x0, [sp, #168]
  43e418:	mov	w0, #0x7                   	// #7
  43e41c:	str	w0, [sp, #104]
  43e420:	ldr	w0, [sp, #84]
  43e424:	str	w0, [sp, #108]
  43e428:	ldr	x0, [sp, #168]
  43e42c:	cmp	x0, #0x0
  43e430:	b.eq	43e46c <builtin_net_setup_link+0x1f0>  // b.none
  43e434:	mov	w0, #0x1                   	// #1
  43e438:	bl	40be30 <log_get_max_level_realm@plt>
  43e43c:	mov	w1, w0
  43e440:	ldr	w0, [sp, #104]
  43e444:	cmp	w0, w1
  43e448:	cset	w0, le
  43e44c:	and	w0, w0, #0xff
  43e450:	and	x0, x0, #0xff
  43e454:	cmp	x0, #0x0
  43e458:	b.eq	43e46c <builtin_net_setup_link+0x1f0>  // b.none
  43e45c:	add	x0, sp, #0x90
  43e460:	mov	x1, x0
  43e464:	ldr	x0, [sp, #168]
  43e468:	bl	40aba0 <sd_device_get_sysname@plt>
  43e46c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e470:	add	x2, x0, #0x53
  43e474:	ldr	x0, [sp, #144]
  43e478:	cmp	x0, #0x0
  43e47c:	b.eq	43e48c <builtin_net_setup_link+0x210>  // b.none
  43e480:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e484:	add	x0, x0, #0x80
  43e488:	b	43e490 <builtin_net_setup_link+0x214>
  43e48c:	mov	x0, #0x0                   	// #0
  43e490:	ldr	x3, [sp, #144]
  43e494:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  43e498:	add	x1, x1, #0xc0
  43e49c:	str	x1, [sp, #8]
  43e4a0:	str	xzr, [sp]
  43e4a4:	mov	x7, #0x0                   	// #0
  43e4a8:	mov	x6, x3
  43e4ac:	mov	x5, x0
  43e4b0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e4b4:	add	x4, x0, #0x208
  43e4b8:	mov	w3, #0x1c                  	// #28
  43e4bc:	ldr	w1, [sp, #108]
  43e4c0:	ldr	w0, [sp, #104]
  43e4c4:	bl	40b020 <log_object_internal@plt>
  43e4c8:	mov	w19, w0
  43e4cc:	b	43e6cc <builtin_net_setup_link+0x450>
  43e4d0:	str	xzr, [sp, #144]
  43e4d4:	ldr	x0, [sp, #72]
  43e4d8:	str	x0, [sp, #160]
  43e4dc:	mov	w0, #0x3                   	// #3
  43e4e0:	str	w0, [sp, #96]
  43e4e4:	ldr	w0, [sp, #84]
  43e4e8:	str	w0, [sp, #100]
  43e4ec:	ldr	x0, [sp, #160]
  43e4f0:	cmp	x0, #0x0
  43e4f4:	b.eq	43e530 <builtin_net_setup_link+0x2b4>  // b.none
  43e4f8:	mov	w0, #0x1                   	// #1
  43e4fc:	bl	40be30 <log_get_max_level_realm@plt>
  43e500:	mov	w1, w0
  43e504:	ldr	w0, [sp, #96]
  43e508:	cmp	w0, w1
  43e50c:	cset	w0, le
  43e510:	and	w0, w0, #0xff
  43e514:	and	x0, x0, #0xff
  43e518:	cmp	x0, #0x0
  43e51c:	b.eq	43e530 <builtin_net_setup_link+0x2b4>  // b.none
  43e520:	add	x0, sp, #0x90
  43e524:	mov	x1, x0
  43e528:	ldr	x0, [sp, #160]
  43e52c:	bl	40aba0 <sd_device_get_sysname@plt>
  43e530:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e534:	add	x2, x0, #0x53
  43e538:	ldr	x0, [sp, #144]
  43e53c:	cmp	x0, #0x0
  43e540:	b.eq	43e550 <builtin_net_setup_link+0x2d4>  // b.none
  43e544:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e548:	add	x0, x0, #0x80
  43e54c:	b	43e554 <builtin_net_setup_link+0x2d8>
  43e550:	mov	x0, #0x0                   	// #0
  43e554:	ldr	x3, [sp, #144]
  43e558:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  43e55c:	add	x1, x1, #0xe8
  43e560:	str	x1, [sp, #8]
  43e564:	str	xzr, [sp]
  43e568:	mov	x7, #0x0                   	// #0
  43e56c:	mov	x6, x3
  43e570:	mov	x5, x0
  43e574:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e578:	add	x4, x0, #0x208
  43e57c:	mov	w3, #0x1e                  	// #30
  43e580:	ldr	w1, [sp, #100]
  43e584:	ldr	w0, [sp, #96]
  43e588:	bl	40b020 <log_object_internal@plt>
  43e58c:	mov	w19, w0
  43e590:	b	43e6cc <builtin_net_setup_link+0x450>
  43e594:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e598:	add	x0, x0, #0x1b0
  43e59c:	ldr	x0, [x0]
  43e5a0:	ldr	x1, [sp, #136]
  43e5a4:	add	x2, sp, #0x80
  43e5a8:	mov	x3, x2
  43e5ac:	ldr	x2, [sp, #72]
  43e5b0:	bl	445364 <link_config_apply>
  43e5b4:	str	w0, [sp, #84]
  43e5b8:	ldr	w0, [sp, #84]
  43e5bc:	cmp	w0, #0x0
  43e5c0:	b.ge	43e680 <builtin_net_setup_link+0x404>  // b.tcont
  43e5c4:	str	xzr, [sp, #144]
  43e5c8:	ldr	x0, [sp, #72]
  43e5cc:	str	x0, [sp, #152]
  43e5d0:	mov	w0, #0x4                   	// #4
  43e5d4:	str	w0, [sp, #88]
  43e5d8:	ldr	w0, [sp, #84]
  43e5dc:	str	w0, [sp, #92]
  43e5e0:	ldr	x0, [sp, #152]
  43e5e4:	cmp	x0, #0x0
  43e5e8:	b.eq	43e624 <builtin_net_setup_link+0x3a8>  // b.none
  43e5ec:	mov	w0, #0x1                   	// #1
  43e5f0:	bl	40be30 <log_get_max_level_realm@plt>
  43e5f4:	mov	w1, w0
  43e5f8:	ldr	w0, [sp, #88]
  43e5fc:	cmp	w0, w1
  43e600:	cset	w0, le
  43e604:	and	w0, w0, #0xff
  43e608:	and	x0, x0, #0xff
  43e60c:	cmp	x0, #0x0
  43e610:	b.eq	43e624 <builtin_net_setup_link+0x3a8>  // b.none
  43e614:	add	x0, sp, #0x90
  43e618:	mov	x1, x0
  43e61c:	ldr	x0, [sp, #152]
  43e620:	bl	40aba0 <sd_device_get_sysname@plt>
  43e624:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e628:	add	x2, x0, #0x53
  43e62c:	ldr	x0, [sp, #144]
  43e630:	cmp	x0, #0x0
  43e634:	b.eq	43e644 <builtin_net_setup_link+0x3c8>  // b.none
  43e638:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e63c:	add	x0, x0, #0x80
  43e640:	b	43e648 <builtin_net_setup_link+0x3cc>
  43e644:	mov	x0, #0x0                   	// #0
  43e648:	ldr	x3, [sp, #144]
  43e64c:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  43e650:	add	x1, x1, #0x108
  43e654:	str	x1, [sp, #8]
  43e658:	str	xzr, [sp]
  43e65c:	mov	x7, #0x0                   	// #0
  43e660:	mov	x6, x3
  43e664:	mov	x5, x0
  43e668:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e66c:	add	x4, x0, #0x208
  43e670:	mov	w3, #0x23                  	// #35
  43e674:	ldr	w1, [sp, #92]
  43e678:	ldr	w0, [sp, #88]
  43e67c:	bl	40b020 <log_object_internal@plt>
  43e680:	ldr	x0, [sp, #136]
  43e684:	ldr	x0, [x0]
  43e688:	mov	x3, x0
  43e68c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e690:	add	x2, x0, #0x138
  43e694:	ldrb	w1, [sp, #67]
  43e698:	ldr	x0, [sp, #72]
  43e69c:	bl	436504 <udev_builtin_add_property>
  43e6a0:	ldr	x0, [sp, #128]
  43e6a4:	cmp	x0, #0x0
  43e6a8:	b.eq	43e6c8 <builtin_net_setup_link+0x44c>  // b.none
  43e6ac:	ldr	x0, [sp, #128]
  43e6b0:	mov	x3, x0
  43e6b4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e6b8:	add	x2, x0, #0x150
  43e6bc:	ldrb	w1, [sp, #67]
  43e6c0:	ldr	x0, [sp, #72]
  43e6c4:	bl	436504 <udev_builtin_add_property>
  43e6c8:	mov	w19, #0x0                   	// #0
  43e6cc:	add	x0, sp, #0x78
  43e6d0:	bl	43e258 <freep>
  43e6d4:	mov	w1, w19
  43e6d8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43e6dc:	ldr	x0, [x0, #4032]
  43e6e0:	ldr	x2, [sp, #184]
  43e6e4:	ldr	x0, [x0]
  43e6e8:	eor	x0, x2, x0
  43e6ec:	cmp	x0, #0x0
  43e6f0:	b.eq	43e6f8 <builtin_net_setup_link+0x47c>  // b.none
  43e6f4:	bl	40b280 <__stack_chk_fail@plt>
  43e6f8:	mov	w0, w1
  43e6fc:	ldr	x19, [sp, #32]
  43e700:	ldp	x29, x30, [sp, #16]
  43e704:	add	sp, sp, #0xc0
  43e708:	ret

000000000043e70c <builtin_net_setup_link_init>:
  43e70c:	stp	x29, x30, [sp, #-32]!
  43e710:	mov	x29, sp
  43e714:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e718:	add	x0, x0, #0x1b0
  43e71c:	ldr	x0, [x0]
  43e720:	cmp	x0, #0x0
  43e724:	b.eq	43e730 <builtin_net_setup_link_init+0x24>  // b.none
  43e728:	mov	w0, #0x0                   	// #0
  43e72c:	b	43e7f8 <builtin_net_setup_link_init+0xec>
  43e730:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e734:	add	x0, x0, #0x1b0
  43e738:	bl	443940 <link_config_ctx_new>
  43e73c:	str	w0, [sp, #16]
  43e740:	ldr	w0, [sp, #16]
  43e744:	cmp	w0, #0x0
  43e748:	b.ge	43e754 <builtin_net_setup_link_init+0x48>  // b.tcont
  43e74c:	ldr	w0, [sp, #16]
  43e750:	b	43e7f8 <builtin_net_setup_link_init+0xec>
  43e754:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e758:	add	x0, x0, #0x1b0
  43e75c:	ldr	x0, [x0]
  43e760:	bl	4443e4 <link_config_load>
  43e764:	str	w0, [sp, #16]
  43e768:	ldr	w0, [sp, #16]
  43e76c:	cmp	w0, #0x0
  43e770:	b.ge	43e77c <builtin_net_setup_link_init+0x70>  // b.tcont
  43e774:	ldr	w0, [sp, #16]
  43e778:	b	43e7f8 <builtin_net_setup_link_init+0xec>
  43e77c:	mov	w0, #0x7                   	// #7
  43e780:	str	w0, [sp, #20]
  43e784:	str	wzr, [sp, #24]
  43e788:	mov	w0, #0x1                   	// #1
  43e78c:	str	w0, [sp, #28]
  43e790:	ldr	w0, [sp, #28]
  43e794:	bl	40be30 <log_get_max_level_realm@plt>
  43e798:	mov	w1, w0
  43e79c:	ldr	w0, [sp, #20]
  43e7a0:	and	w0, w0, #0x7
  43e7a4:	cmp	w1, w0
  43e7a8:	b.lt	43e7ec <builtin_net_setup_link_init+0xe0>  // b.tstop
  43e7ac:	ldr	w0, [sp, #28]
  43e7b0:	lsl	w1, w0, #10
  43e7b4:	ldr	w0, [sp, #20]
  43e7b8:	orr	w6, w1, w0
  43e7bc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e7c0:	add	x1, x0, #0x53
  43e7c4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e7c8:	add	x5, x0, #0x160
  43e7cc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e7d0:	add	x4, x0, #0x220
  43e7d4:	mov	w3, #0x3b                  	// #59
  43e7d8:	mov	x2, x1
  43e7dc:	ldr	w1, [sp, #24]
  43e7e0:	mov	w0, w6
  43e7e4:	bl	40b4f0 <log_internal_realm@plt>
  43e7e8:	b	43e7f4 <builtin_net_setup_link_init+0xe8>
  43e7ec:	ldr	w0, [sp, #24]
  43e7f0:	cmp	w0, #0x0
  43e7f4:	mov	w0, #0x0                   	// #0
  43e7f8:	ldp	x29, x30, [sp], #32
  43e7fc:	ret

000000000043e800 <builtin_net_setup_link_exit>:
  43e800:	stp	x29, x30, [sp, #-32]!
  43e804:	mov	x29, sp
  43e808:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e80c:	add	x0, x0, #0x1b0
  43e810:	ldr	x0, [x0]
  43e814:	bl	4438f0 <link_config_ctx_free>
  43e818:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e81c:	add	x0, x0, #0x1b0
  43e820:	str	xzr, [x0]
  43e824:	mov	w0, #0x7                   	// #7
  43e828:	str	w0, [sp, #20]
  43e82c:	str	wzr, [sp, #24]
  43e830:	mov	w0, #0x1                   	// #1
  43e834:	str	w0, [sp, #28]
  43e838:	ldr	w0, [sp, #28]
  43e83c:	bl	40be30 <log_get_max_level_realm@plt>
  43e840:	mov	w1, w0
  43e844:	ldr	w0, [sp, #20]
  43e848:	and	w0, w0, #0x7
  43e84c:	cmp	w1, w0
  43e850:	b.lt	43e894 <builtin_net_setup_link_exit+0x94>  // b.tstop
  43e854:	ldr	w0, [sp, #28]
  43e858:	lsl	w1, w0, #10
  43e85c:	ldr	w0, [sp, #20]
  43e860:	orr	w6, w1, w0
  43e864:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e868:	add	x1, x0, #0x53
  43e86c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e870:	add	x5, x0, #0x188
  43e874:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e878:	add	x4, x0, #0x240
  43e87c:	mov	w3, #0x42                  	// #66
  43e880:	mov	x2, x1
  43e884:	ldr	w1, [sp, #24]
  43e888:	mov	w0, w6
  43e88c:	bl	40b4f0 <log_internal_realm@plt>
  43e890:	b	43e89c <builtin_net_setup_link_exit+0x9c>
  43e894:	ldr	w0, [sp, #24]
  43e898:	cmp	w0, #0x0
  43e89c:	nop
  43e8a0:	ldp	x29, x30, [sp], #32
  43e8a4:	ret

000000000043e8a8 <builtin_net_setup_link_validate>:
  43e8a8:	stp	x29, x30, [sp, #-32]!
  43e8ac:	mov	x29, sp
  43e8b0:	mov	w0, #0x7                   	// #7
  43e8b4:	str	w0, [sp, #20]
  43e8b8:	str	wzr, [sp, #24]
  43e8bc:	mov	w0, #0x1                   	// #1
  43e8c0:	str	w0, [sp, #28]
  43e8c4:	ldr	w0, [sp, #28]
  43e8c8:	bl	40be30 <log_get_max_level_realm@plt>
  43e8cc:	mov	w1, w0
  43e8d0:	ldr	w0, [sp, #20]
  43e8d4:	and	w0, w0, #0x7
  43e8d8:	cmp	w1, w0
  43e8dc:	b.lt	43e920 <builtin_net_setup_link_validate+0x78>  // b.tstop
  43e8e0:	ldr	w0, [sp, #28]
  43e8e4:	lsl	w1, w0, #10
  43e8e8:	ldr	w0, [sp, #20]
  43e8ec:	orr	w6, w1, w0
  43e8f0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e8f4:	add	x1, x0, #0x53
  43e8f8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e8fc:	add	x5, x0, #0x1b0
  43e900:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43e904:	add	x4, x0, #0x260
  43e908:	mov	w3, #0x46                  	// #70
  43e90c:	mov	x2, x1
  43e910:	ldr	w1, [sp, #24]
  43e914:	mov	w0, w6
  43e918:	bl	40b4f0 <log_internal_realm@plt>
  43e91c:	b	43e928 <builtin_net_setup_link_validate+0x80>
  43e920:	ldr	w0, [sp, #24]
  43e924:	cmp	w0, #0x0
  43e928:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e92c:	add	x0, x0, #0x1b0
  43e930:	ldr	x0, [x0]
  43e934:	cmp	x0, #0x0
  43e938:	b.ne	43e944 <builtin_net_setup_link_validate+0x9c>  // b.any
  43e93c:	mov	w0, #0x0                   	// #0
  43e940:	b	43e958 <builtin_net_setup_link_validate+0xb0>
  43e944:	adrp	x0, 48d000 <arg_resolve_name_timing>
  43e948:	add	x0, x0, #0x1b0
  43e94c:	ldr	x0, [x0]
  43e950:	bl	444718 <link_config_should_reload>
  43e954:	and	w0, w0, #0xff
  43e958:	ldp	x29, x30, [sp], #32
  43e95c:	ret

000000000043e960 <freep>:
  43e960:	stp	x29, x30, [sp, #-32]!
  43e964:	mov	x29, sp
  43e968:	str	x0, [sp, #24]
  43e96c:	ldr	x0, [sp, #24]
  43e970:	ldr	x0, [x0]
  43e974:	bl	40ba20 <free@plt>
  43e978:	nop
  43e97c:	ldp	x29, x30, [sp], #32
  43e980:	ret

000000000043e984 <size_multiply_overflow>:
  43e984:	sub	sp, sp, #0x10
  43e988:	str	x0, [sp, #8]
  43e98c:	str	x1, [sp]
  43e990:	ldr	x0, [sp]
  43e994:	cmp	x0, #0x0
  43e998:	cset	w0, ne  // ne = any
  43e99c:	and	w0, w0, #0xff
  43e9a0:	and	x0, x0, #0xff
  43e9a4:	cmp	x0, #0x0
  43e9a8:	b.eq	43e9ec <size_multiply_overflow+0x68>  // b.none
  43e9ac:	mov	x2, #0x0                   	// #0
  43e9b0:	ldr	x1, [sp, #8]
  43e9b4:	ldr	x0, [sp]
  43e9b8:	umulh	x0, x1, x0
  43e9bc:	cmp	x0, #0x0
  43e9c0:	b.eq	43e9c8 <size_multiply_overflow+0x44>  // b.none
  43e9c4:	mov	x2, #0x1                   	// #1
  43e9c8:	mov	x0, x2
  43e9cc:	cmp	x0, #0x0
  43e9d0:	cset	w0, ne  // ne = any
  43e9d4:	and	w0, w0, #0xff
  43e9d8:	and	x0, x0, #0xff
  43e9dc:	cmp	x0, #0x0
  43e9e0:	b.eq	43e9ec <size_multiply_overflow+0x68>  // b.none
  43e9e4:	mov	w0, #0x1                   	// #1
  43e9e8:	b	43e9f0 <size_multiply_overflow+0x6c>
  43e9ec:	mov	w0, #0x0                   	// #0
  43e9f0:	and	w0, w0, #0x1
  43e9f4:	and	w0, w0, #0xff
  43e9f8:	add	sp, sp, #0x10
  43e9fc:	ret

000000000043ea00 <startswith>:
  43ea00:	stp	x29, x30, [sp, #-48]!
  43ea04:	mov	x29, sp
  43ea08:	str	x0, [sp, #24]
  43ea0c:	str	x1, [sp, #16]
  43ea10:	ldr	x0, [sp, #16]
  43ea14:	bl	40bd10 <strlen@plt>
  43ea18:	str	x0, [sp, #40]
  43ea1c:	ldr	x2, [sp, #40]
  43ea20:	ldr	x1, [sp, #16]
  43ea24:	ldr	x0, [sp, #24]
  43ea28:	bl	40ae00 <strncmp@plt>
  43ea2c:	cmp	w0, #0x0
  43ea30:	b.ne	43ea44 <startswith+0x44>  // b.any
  43ea34:	ldr	x1, [sp, #24]
  43ea38:	ldr	x0, [sp, #40]
  43ea3c:	add	x0, x1, x0
  43ea40:	b	43ea48 <startswith+0x48>
  43ea44:	mov	x0, #0x0                   	// #0
  43ea48:	ldp	x29, x30, [sp], #48
  43ea4c:	ret

000000000043ea50 <closedirp>:
  43ea50:	stp	x29, x30, [sp, #-32]!
  43ea54:	mov	x29, sp
  43ea58:	str	x0, [sp, #24]
  43ea5c:	ldr	x0, [sp, #24]
  43ea60:	ldr	x0, [x0]
  43ea64:	cmp	x0, #0x0
  43ea68:	b.eq	43ea78 <closedirp+0x28>  // b.none
  43ea6c:	ldr	x0, [sp, #24]
  43ea70:	ldr	x0, [x0]
  43ea74:	bl	40adc0 <closedir@plt>
  43ea78:	nop
  43ea7c:	ldp	x29, x30, [sp], #32
  43ea80:	ret

000000000043ea84 <sd_device_unrefp>:
  43ea84:	stp	x29, x30, [sp, #-32]!
  43ea88:	mov	x29, sp
  43ea8c:	str	x0, [sp, #24]
  43ea90:	ldr	x0, [sp, #24]
  43ea94:	ldr	x0, [x0]
  43ea98:	cmp	x0, #0x0
  43ea9c:	b.eq	43eaac <sd_device_unrefp+0x28>  // b.none
  43eaa0:	ldr	x0, [sp, #24]
  43eaa4:	ldr	x0, [x0]
  43eaa8:	bl	40baf0 <sd_device_unref@plt>
  43eaac:	nop
  43eab0:	ldp	x29, x30, [sp], #32
  43eab4:	ret

000000000043eab8 <path_prepend>:
  43eab8:	stp	x29, x30, [sp, #-320]!
  43eabc:	mov	x29, sp
  43eac0:	str	x0, [sp, #56]
  43eac4:	str	x1, [sp, #48]
  43eac8:	str	x2, [sp, #272]
  43eacc:	str	x3, [sp, #280]
  43ead0:	str	x4, [sp, #288]
  43ead4:	str	x5, [sp, #296]
  43ead8:	str	x6, [sp, #304]
  43eadc:	str	x7, [sp, #312]
  43eae0:	str	q0, [sp, #144]
  43eae4:	str	q1, [sp, #160]
  43eae8:	str	q2, [sp, #176]
  43eaec:	str	q3, [sp, #192]
  43eaf0:	str	q4, [sp, #208]
  43eaf4:	str	q5, [sp, #224]
  43eaf8:	str	q6, [sp, #240]
  43eafc:	str	q7, [sp, #256]
  43eb00:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43eb04:	ldr	x0, [x0, #4032]
  43eb08:	ldr	x1, [x0]
  43eb0c:	str	x1, [sp, #136]
  43eb10:	mov	x1, #0x0                   	// #0
  43eb14:	str	xzr, [sp, #80]
  43eb18:	add	x0, sp, #0x140
  43eb1c:	str	x0, [sp, #104]
  43eb20:	add	x0, sp, #0x140
  43eb24:	str	x0, [sp, #112]
  43eb28:	add	x0, sp, #0x110
  43eb2c:	str	x0, [sp, #120]
  43eb30:	mov	w0, #0xffffffd0            	// #-48
  43eb34:	str	w0, [sp, #128]
  43eb38:	mov	w0, #0xffffff80            	// #-128
  43eb3c:	str	w0, [sp, #132]
  43eb40:	add	x2, sp, #0x10
  43eb44:	add	x3, sp, #0x68
  43eb48:	ldp	x0, x1, [x3]
  43eb4c:	stp	x0, x1, [x2]
  43eb50:	ldp	x0, x1, [x3, #16]
  43eb54:	stp	x0, x1, [x2, #16]
  43eb58:	add	x1, sp, #0x10
  43eb5c:	add	x0, sp, #0x50
  43eb60:	mov	x2, x1
  43eb64:	ldr	x1, [sp, #48]
  43eb68:	bl	40ac40 <vasprintf@plt>
  43eb6c:	str	w0, [sp, #76]
  43eb70:	ldr	w0, [sp, #76]
  43eb74:	cmp	w0, #0x0
  43eb78:	b.ge	43eba0 <path_prepend+0xe8>  // b.tcont
  43eb7c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43eb80:	add	x1, x0, #0x2a3
  43eb84:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43eb88:	add	x3, x0, #0x7d8
  43eb8c:	mov	w2, #0x24                  	// #36
  43eb90:	mov	w0, #0x1                   	// #1
  43eb94:	bl	40bda0 <log_oom_internal@plt>
  43eb98:	mov	w0, #0x47                  	// #71
  43eb9c:	bl	40aaf0 <exit@plt>
  43eba0:	ldr	x0, [sp, #56]
  43eba4:	ldr	x0, [x0]
  43eba8:	cmp	x0, #0x0
  43ebac:	b.eq	43ec28 <path_prepend+0x170>  // b.none
  43ebb0:	ldr	x4, [sp, #80]
  43ebb4:	ldr	x0, [sp, #56]
  43ebb8:	ldr	x0, [x0]
  43ebbc:	mov	x3, #0x0                   	// #0
  43ebc0:	mov	x2, x0
  43ebc4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ebc8:	add	x1, x0, #0x2c8
  43ebcc:	mov	x0, x4
  43ebd0:	bl	40aac0 <strjoin_real@plt>
  43ebd4:	str	x0, [sp, #96]
  43ebd8:	ldr	x0, [sp, #96]
  43ebdc:	cmp	x0, #0x0
  43ebe0:	b.ne	43ec08 <path_prepend+0x150>  // b.any
  43ebe4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ebe8:	add	x1, x0, #0x2a3
  43ebec:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ebf0:	add	x3, x0, #0x7d8
  43ebf4:	mov	w2, #0x2d                  	// #45
  43ebf8:	mov	w0, #0x1                   	// #1
  43ebfc:	bl	40bda0 <log_oom_internal@plt>
  43ec00:	mov	w0, #0x47                  	// #71
  43ec04:	bl	40aaf0 <exit@plt>
  43ec08:	ldr	x0, [sp, #56]
  43ec0c:	ldr	x0, [x0]
  43ec10:	bl	40ba20 <free@plt>
  43ec14:	ldr	x0, [sp, #56]
  43ec18:	ldr	x1, [sp, #96]
  43ec1c:	str	x1, [x0]
  43ec20:	str	xzr, [sp, #96]
  43ec24:	b	43ec40 <path_prepend+0x188>
  43ec28:	ldr	x0, [sp, #80]
  43ec2c:	str	x0, [sp, #88]
  43ec30:	str	xzr, [sp, #80]
  43ec34:	ldr	x1, [sp, #88]
  43ec38:	ldr	x0, [sp, #56]
  43ec3c:	str	x1, [x0]
  43ec40:	add	x0, sp, #0x50
  43ec44:	bl	43e960 <freep>
  43ec48:	nop
  43ec4c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43ec50:	ldr	x0, [x0, #4032]
  43ec54:	ldr	x1, [sp, #136]
  43ec58:	ldr	x0, [x0]
  43ec5c:	eor	x0, x1, x0
  43ec60:	cmp	x0, #0x0
  43ec64:	b.eq	43ec6c <path_prepend+0x1b4>  // b.none
  43ec68:	bl	40b280 <__stack_chk_fail@plt>
  43ec6c:	ldp	x29, x30, [sp], #320
  43ec70:	ret

000000000043ec74 <format_lun_number>:
  43ec74:	stp	x29, x30, [sp, #-64]!
  43ec78:	mov	x29, sp
  43ec7c:	str	x0, [sp, #24]
  43ec80:	str	x1, [sp, #16]
  43ec84:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43ec88:	ldr	x0, [x0, #4032]
  43ec8c:	ldr	x1, [x0]
  43ec90:	str	x1, [sp, #56]
  43ec94:	mov	x1, #0x0                   	// #0
  43ec98:	add	x0, sp, #0x28
  43ec9c:	mov	x1, x0
  43eca0:	ldr	x0, [sp, #24]
  43eca4:	bl	40bc60 <sd_device_get_sysnum@plt>
  43eca8:	str	w0, [sp, #36]
  43ecac:	ldr	w0, [sp, #36]
  43ecb0:	cmp	w0, #0x0
  43ecb4:	b.ge	43ecc0 <format_lun_number+0x4c>  // b.tcont
  43ecb8:	ldr	w0, [sp, #36]
  43ecbc:	b	43ed3c <format_lun_number+0xc8>
  43ecc0:	ldr	x0, [sp, #40]
  43ecc4:	cmp	x0, #0x0
  43ecc8:	b.ne	43ecd4 <format_lun_number+0x60>  // b.any
  43eccc:	mov	w0, #0xfffffffe            	// #-2
  43ecd0:	b	43ed3c <format_lun_number+0xc8>
  43ecd4:	ldr	x0, [sp, #40]
  43ecd8:	mov	w2, #0xa                   	// #10
  43ecdc:	mov	x1, #0x0                   	// #0
  43ece0:	bl	40b630 <strtoul@plt>
  43ece4:	str	x0, [sp, #48]
  43ece8:	ldr	x0, [sp, #48]
  43ecec:	cmp	x0, #0xff
  43ecf0:	b.hi	43ed0c <format_lun_number+0x98>  // b.pmore
  43ecf4:	ldr	x2, [sp, #48]
  43ecf8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ecfc:	add	x1, x0, #0x2d0
  43ed00:	ldr	x0, [sp, #16]
  43ed04:	bl	43eab8 <path_prepend>
  43ed08:	b	43ed38 <format_lun_number+0xc4>
  43ed0c:	ldr	x0, [sp, #48]
  43ed10:	and	x1, x0, #0xffff
  43ed14:	ldr	x0, [sp, #48]
  43ed18:	lsr	x0, x0, #16
  43ed1c:	and	x0, x0, #0xffff
  43ed20:	mov	x3, x0
  43ed24:	mov	x2, x1
  43ed28:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ed2c:	add	x1, x0, #0x2d8
  43ed30:	ldr	x0, [sp, #16]
  43ed34:	bl	43eab8 <path_prepend>
  43ed38:	mov	w0, #0x0                   	// #0
  43ed3c:	mov	w1, w0
  43ed40:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43ed44:	ldr	x0, [x0, #4032]
  43ed48:	ldr	x2, [sp, #56]
  43ed4c:	ldr	x0, [x0]
  43ed50:	eor	x0, x2, x0
  43ed54:	cmp	x0, #0x0
  43ed58:	b.eq	43ed60 <format_lun_number+0xec>  // b.none
  43ed5c:	bl	40b280 <__stack_chk_fail@plt>
  43ed60:	mov	w0, w1
  43ed64:	ldp	x29, x30, [sp], #64
  43ed68:	ret

000000000043ed6c <skip_subsystem>:
  43ed6c:	stp	x29, x30, [sp, #-64]!
  43ed70:	mov	x29, sp
  43ed74:	str	x0, [sp, #24]
  43ed78:	str	x1, [sp, #16]
  43ed7c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43ed80:	ldr	x0, [x0, #4032]
  43ed84:	ldr	x1, [x0]
  43ed88:	str	x1, [sp, #56]
  43ed8c:	mov	x1, #0x0                   	// #0
  43ed90:	ldr	x0, [sp, #24]
  43ed94:	cmp	x0, #0x0
  43ed98:	cset	w0, eq  // eq = none
  43ed9c:	and	w0, w0, #0xff
  43eda0:	and	x0, x0, #0xff
  43eda4:	cmp	x0, #0x0
  43eda8:	b.eq	43edd4 <skip_subsystem+0x68>  // b.none
  43edac:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43edb0:	add	x1, x0, #0x2a3
  43edb4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43edb8:	add	x4, x0, #0x7e8
  43edbc:	mov	w3, #0x53                  	// #83
  43edc0:	mov	x2, x1
  43edc4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43edc8:	add	x1, x0, #0x2f8
  43edcc:	mov	w0, #0x1                   	// #1
  43edd0:	bl	40abb0 <log_assert_failed_realm@plt>
  43edd4:	ldr	x0, [sp, #16]
  43edd8:	cmp	x0, #0x0
  43eddc:	cset	w0, eq  // eq = none
  43ede0:	and	w0, w0, #0xff
  43ede4:	and	x0, x0, #0xff
  43ede8:	cmp	x0, #0x0
  43edec:	b.eq	43ee18 <skip_subsystem+0xac>  // b.none
  43edf0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43edf4:	add	x1, x0, #0x2a3
  43edf8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43edfc:	add	x4, x0, #0x7e8
  43ee00:	mov	w3, #0x54                  	// #84
  43ee04:	mov	x2, x1
  43ee08:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ee0c:	add	x1, x0, #0x300
  43ee10:	mov	w0, #0x1                   	// #1
  43ee14:	bl	40abb0 <log_assert_failed_realm@plt>
  43ee18:	ldr	x0, [sp, #24]
  43ee1c:	str	x0, [sp, #40]
  43ee20:	ldr	x0, [sp, #40]
  43ee24:	add	x1, sp, #0x30
  43ee28:	bl	40af80 <sd_device_get_subsystem@plt>
  43ee2c:	cmp	w0, #0x0
  43ee30:	b.lt	43ee6c <skip_subsystem+0x100>  // b.tstop
  43ee34:	ldr	x0, [sp, #48]
  43ee38:	ldr	x1, [sp, #16]
  43ee3c:	bl	40b710 <strcmp@plt>
  43ee40:	cmp	w0, #0x0
  43ee44:	b.ne	43ee74 <skip_subsystem+0x108>  // b.any
  43ee48:	ldr	x0, [sp, #40]
  43ee4c:	str	x0, [sp, #24]
  43ee50:	add	x0, sp, #0x28
  43ee54:	mov	x1, x0
  43ee58:	ldr	x0, [sp, #24]
  43ee5c:	bl	40be60 <sd_device_get_parent@plt>
  43ee60:	cmp	w0, #0x0
  43ee64:	b.lt	43ee7c <skip_subsystem+0x110>  // b.tstop
  43ee68:	b	43ee20 <skip_subsystem+0xb4>
  43ee6c:	nop
  43ee70:	b	43ee80 <skip_subsystem+0x114>
  43ee74:	nop
  43ee78:	b	43ee80 <skip_subsystem+0x114>
  43ee7c:	nop
  43ee80:	ldr	x0, [sp, #24]
  43ee84:	mov	x1, x0
  43ee88:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43ee8c:	ldr	x0, [x0, #4032]
  43ee90:	ldr	x2, [sp, #56]
  43ee94:	ldr	x0, [x0]
  43ee98:	eor	x0, x2, x0
  43ee9c:	cmp	x0, #0x0
  43eea0:	b.eq	43eea8 <skip_subsystem+0x13c>  // b.none
  43eea4:	bl	40b280 <__stack_chk_fail@plt>
  43eea8:	mov	x0, x1
  43eeac:	ldp	x29, x30, [sp], #64
  43eeb0:	ret

000000000043eeb4 <handle_scsi_fibre_channel>:
  43eeb4:	stp	x29, x30, [sp, #-96]!
  43eeb8:	mov	x29, sp
  43eebc:	str	x19, [sp, #16]
  43eec0:	str	x0, [sp, #40]
  43eec4:	str	x1, [sp, #32]
  43eec8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43eecc:	ldr	x0, [x0, #4032]
  43eed0:	ldr	x1, [x0]
  43eed4:	str	x1, [sp, #88]
  43eed8:	mov	x1, #0x0                   	// #0
  43eedc:	str	xzr, [sp, #56]
  43eee0:	str	xzr, [sp, #80]
  43eee4:	ldr	x0, [sp, #40]
  43eee8:	cmp	x0, #0x0
  43eeec:	cset	w0, eq  // eq = none
  43eef0:	and	w0, w0, #0xff
  43eef4:	and	x0, x0, #0xff
  43eef8:	cmp	x0, #0x0
  43eefc:	b.eq	43ef28 <handle_scsi_fibre_channel+0x74>  // b.none
  43ef00:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ef04:	add	x1, x0, #0x2a3
  43ef08:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ef0c:	add	x4, x0, #0x7f8
  43ef10:	mov	w3, #0x6d                  	// #109
  43ef14:	mov	x2, x1
  43ef18:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ef1c:	add	x1, x0, #0x308
  43ef20:	mov	w0, #0x1                   	// #1
  43ef24:	bl	40abb0 <log_assert_failed_realm@plt>
  43ef28:	ldr	x0, [sp, #32]
  43ef2c:	cmp	x0, #0x0
  43ef30:	cset	w0, eq  // eq = none
  43ef34:	and	w0, w0, #0xff
  43ef38:	and	x0, x0, #0xff
  43ef3c:	cmp	x0, #0x0
  43ef40:	b.eq	43ef6c <handle_scsi_fibre_channel+0xb8>  // b.none
  43ef44:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ef48:	add	x1, x0, #0x2a3
  43ef4c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ef50:	add	x4, x0, #0x7f8
  43ef54:	mov	w3, #0x6e                  	// #110
  43ef58:	mov	x2, x1
  43ef5c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ef60:	add	x1, x0, #0x310
  43ef64:	mov	w0, #0x1                   	// #1
  43ef68:	bl	40abb0 <log_assert_failed_realm@plt>
  43ef6c:	add	x0, sp, #0x30
  43ef70:	mov	x3, x0
  43ef74:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ef78:	add	x2, x0, #0x318
  43ef7c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ef80:	add	x1, x0, #0x328
  43ef84:	ldr	x0, [sp, #40]
  43ef88:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43ef8c:	cmp	w0, #0x0
  43ef90:	b.ge	43ef9c <handle_scsi_fibre_channel+0xe8>  // b.tcont
  43ef94:	mov	x19, #0x0                   	// #0
  43ef98:	b	43f044 <handle_scsi_fibre_channel+0x190>
  43ef9c:	ldr	x0, [sp, #48]
  43efa0:	add	x1, sp, #0x48
  43efa4:	bl	40aba0 <sd_device_get_sysname@plt>
  43efa8:	cmp	w0, #0x0
  43efac:	b.ge	43efb8 <handle_scsi_fibre_channel+0x104>  // b.tcont
  43efb0:	mov	x19, #0x0                   	// #0
  43efb4:	b	43f044 <handle_scsi_fibre_channel+0x190>
  43efb8:	ldr	x0, [sp, #72]
  43efbc:	add	x3, sp, #0x38
  43efc0:	mov	x2, x0
  43efc4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43efc8:	add	x1, x0, #0x330
  43efcc:	mov	x0, x3
  43efd0:	bl	40a930 <sd_device_new_from_subsystem_sysname@plt>
  43efd4:	cmp	w0, #0x0
  43efd8:	b.ge	43efe4 <handle_scsi_fibre_channel+0x130>  // b.tcont
  43efdc:	mov	x19, #0x0                   	// #0
  43efe0:	b	43f044 <handle_scsi_fibre_channel+0x190>
  43efe4:	ldr	x3, [sp, #56]
  43efe8:	add	x0, sp, #0x40
  43efec:	mov	x2, x0
  43eff0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43eff4:	add	x1, x0, #0x340
  43eff8:	mov	x0, x3
  43effc:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43f000:	cmp	w0, #0x0
  43f004:	b.ge	43f010 <handle_scsi_fibre_channel+0x15c>  // b.tcont
  43f008:	mov	x19, #0x0                   	// #0
  43f00c:	b	43f044 <handle_scsi_fibre_channel+0x190>
  43f010:	add	x0, sp, #0x50
  43f014:	mov	x1, x0
  43f018:	ldr	x0, [sp, #40]
  43f01c:	bl	43ec74 <format_lun_number>
  43f020:	ldr	x0, [sp, #64]
  43f024:	ldr	x1, [sp, #80]
  43f028:	mov	x3, x1
  43f02c:	mov	x2, x0
  43f030:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f034:	add	x1, x0, #0x350
  43f038:	ldr	x0, [sp, #32]
  43f03c:	bl	43eab8 <path_prepend>
  43f040:	ldr	x19, [sp, #40]
  43f044:	add	x0, sp, #0x50
  43f048:	bl	43e960 <freep>
  43f04c:	add	x0, sp, #0x38
  43f050:	bl	43ea84 <sd_device_unrefp>
  43f054:	mov	x1, x19
  43f058:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43f05c:	ldr	x0, [x0, #4032]
  43f060:	ldr	x2, [sp, #88]
  43f064:	ldr	x0, [x0]
  43f068:	eor	x0, x2, x0
  43f06c:	cmp	x0, #0x0
  43f070:	b.eq	43f078 <handle_scsi_fibre_channel+0x1c4>  // b.none
  43f074:	bl	40b280 <__stack_chk_fail@plt>
  43f078:	mov	x0, x1
  43f07c:	ldr	x19, [sp, #16]
  43f080:	ldp	x29, x30, [sp], #96
  43f084:	ret

000000000043f088 <handle_scsi_sas_wide_port>:
  43f088:	stp	x29, x30, [sp, #-112]!
  43f08c:	mov	x29, sp
  43f090:	str	x19, [sp, #16]
  43f094:	str	x0, [sp, #40]
  43f098:	str	x1, [sp, #32]
  43f09c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43f0a0:	ldr	x0, [x0, #4032]
  43f0a4:	ldr	x1, [x0]
  43f0a8:	str	x1, [sp, #104]
  43f0ac:	mov	x1, #0x0                   	// #0
  43f0b0:	str	xzr, [sp, #72]
  43f0b4:	str	xzr, [sp, #96]
  43f0b8:	ldr	x0, [sp, #40]
  43f0bc:	cmp	x0, #0x0
  43f0c0:	cset	w0, eq  // eq = none
  43f0c4:	and	w0, w0, #0xff
  43f0c8:	and	x0, x0, #0xff
  43f0cc:	cmp	x0, #0x0
  43f0d0:	b.eq	43f0fc <handle_scsi_sas_wide_port+0x74>  // b.none
  43f0d4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f0d8:	add	x1, x0, #0x2a3
  43f0dc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f0e0:	add	x4, x0, #0x818
  43f0e4:	mov	w3, #0x84                  	// #132
  43f0e8:	mov	x2, x1
  43f0ec:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f0f0:	add	x1, x0, #0x308
  43f0f4:	mov	w0, #0x1                   	// #1
  43f0f8:	bl	40abb0 <log_assert_failed_realm@plt>
  43f0fc:	ldr	x0, [sp, #32]
  43f100:	cmp	x0, #0x0
  43f104:	cset	w0, eq  // eq = none
  43f108:	and	w0, w0, #0xff
  43f10c:	and	x0, x0, #0xff
  43f110:	cmp	x0, #0x0
  43f114:	b.eq	43f140 <handle_scsi_sas_wide_port+0xb8>  // b.none
  43f118:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f11c:	add	x1, x0, #0x2a3
  43f120:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f124:	add	x4, x0, #0x818
  43f128:	mov	w3, #0x85                  	// #133
  43f12c:	mov	x2, x1
  43f130:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f134:	add	x1, x0, #0x310
  43f138:	mov	w0, #0x1                   	// #1
  43f13c:	bl	40abb0 <log_assert_failed_realm@plt>
  43f140:	add	x0, sp, #0x38
  43f144:	mov	x3, x0
  43f148:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f14c:	add	x2, x0, #0x318
  43f150:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f154:	add	x1, x0, #0x328
  43f158:	ldr	x0, [sp, #40]
  43f15c:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43f160:	cmp	w0, #0x0
  43f164:	b.ge	43f170 <handle_scsi_sas_wide_port+0xe8>  // b.tcont
  43f168:	mov	x19, #0x0                   	// #0
  43f16c:	b	43f234 <handle_scsi_sas_wide_port+0x1ac>
  43f170:	ldr	x0, [sp, #56]
  43f174:	add	x1, sp, #0x40
  43f178:	bl	40be60 <sd_device_get_parent@plt>
  43f17c:	cmp	w0, #0x0
  43f180:	b.ge	43f18c <handle_scsi_sas_wide_port+0x104>  // b.tcont
  43f184:	mov	x19, #0x0                   	// #0
  43f188:	b	43f234 <handle_scsi_sas_wide_port+0x1ac>
  43f18c:	ldr	x0, [sp, #64]
  43f190:	add	x1, sp, #0x58
  43f194:	bl	40aba0 <sd_device_get_sysname@plt>
  43f198:	cmp	w0, #0x0
  43f19c:	b.ge	43f1a8 <handle_scsi_sas_wide_port+0x120>  // b.tcont
  43f1a0:	mov	x19, #0x0                   	// #0
  43f1a4:	b	43f234 <handle_scsi_sas_wide_port+0x1ac>
  43f1a8:	ldr	x0, [sp, #88]
  43f1ac:	add	x3, sp, #0x48
  43f1b0:	mov	x2, x0
  43f1b4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f1b8:	add	x1, x0, #0x360
  43f1bc:	mov	x0, x3
  43f1c0:	bl	40a930 <sd_device_new_from_subsystem_sysname@plt>
  43f1c4:	cmp	w0, #0x0
  43f1c8:	b.ge	43f1d4 <handle_scsi_sas_wide_port+0x14c>  // b.tcont
  43f1cc:	mov	x19, #0x0                   	// #0
  43f1d0:	b	43f234 <handle_scsi_sas_wide_port+0x1ac>
  43f1d4:	ldr	x3, [sp, #72]
  43f1d8:	add	x0, sp, #0x50
  43f1dc:	mov	x2, x0
  43f1e0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f1e4:	add	x1, x0, #0x370
  43f1e8:	mov	x0, x3
  43f1ec:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43f1f0:	cmp	w0, #0x0
  43f1f4:	b.ge	43f200 <handle_scsi_sas_wide_port+0x178>  // b.tcont
  43f1f8:	mov	x19, #0x0                   	// #0
  43f1fc:	b	43f234 <handle_scsi_sas_wide_port+0x1ac>
  43f200:	add	x0, sp, #0x60
  43f204:	mov	x1, x0
  43f208:	ldr	x0, [sp, #40]
  43f20c:	bl	43ec74 <format_lun_number>
  43f210:	ldr	x0, [sp, #80]
  43f214:	ldr	x1, [sp, #96]
  43f218:	mov	x3, x1
  43f21c:	mov	x2, x0
  43f220:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f224:	add	x1, x0, #0x380
  43f228:	ldr	x0, [sp, #32]
  43f22c:	bl	43eab8 <path_prepend>
  43f230:	ldr	x19, [sp, #40]
  43f234:	add	x0, sp, #0x60
  43f238:	bl	43e960 <freep>
  43f23c:	add	x0, sp, #0x48
  43f240:	bl	43ea84 <sd_device_unrefp>
  43f244:	mov	x1, x19
  43f248:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43f24c:	ldr	x0, [x0, #4032]
  43f250:	ldr	x2, [sp, #104]
  43f254:	ldr	x0, [x0]
  43f258:	eor	x0, x2, x0
  43f25c:	cmp	x0, #0x0
  43f260:	b.eq	43f268 <handle_scsi_sas_wide_port+0x1e0>  // b.none
  43f264:	bl	40b280 <__stack_chk_fail@plt>
  43f268:	mov	x0, x1
  43f26c:	ldr	x19, [sp, #16]
  43f270:	ldp	x29, x30, [sp], #112
  43f274:	ret

000000000043f278 <handle_scsi_sas>:
  43f278:	stp	x29, x30, [sp, #-160]!
  43f27c:	mov	x29, sp
  43f280:	str	x19, [sp, #16]
  43f284:	str	x0, [sp, #40]
  43f288:	str	x1, [sp, #32]
  43f28c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43f290:	ldr	x0, [x0, #4032]
  43f294:	ldr	x1, [x0]
  43f298:	str	x1, [sp, #152]
  43f29c:	mov	x1, #0x0                   	// #0
  43f2a0:	str	xzr, [sp, #88]
  43f2a4:	str	xzr, [sp, #96]
  43f2a8:	str	xzr, [sp, #104]
  43f2ac:	str	xzr, [sp, #112]
  43f2b0:	str	xzr, [sp, #144]
  43f2b4:	ldr	x0, [sp, #40]
  43f2b8:	cmp	x0, #0x0
  43f2bc:	cset	w0, eq  // eq = none
  43f2c0:	and	w0, w0, #0xff
  43f2c4:	and	x0, x0, #0xff
  43f2c8:	cmp	x0, #0x0
  43f2cc:	b.eq	43f2f8 <handle_scsi_sas+0x80>  // b.none
  43f2d0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f2d4:	add	x1, x0, #0x2a3
  43f2d8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f2dc:	add	x4, x0, #0x838
  43f2e0:	mov	w3, #0x9f                  	// #159
  43f2e4:	mov	x2, x1
  43f2e8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f2ec:	add	x1, x0, #0x308
  43f2f0:	mov	w0, #0x1                   	// #1
  43f2f4:	bl	40abb0 <log_assert_failed_realm@plt>
  43f2f8:	ldr	x0, [sp, #32]
  43f2fc:	cmp	x0, #0x0
  43f300:	cset	w0, eq  // eq = none
  43f304:	and	w0, w0, #0xff
  43f308:	and	x0, x0, #0xff
  43f30c:	cmp	x0, #0x0
  43f310:	b.eq	43f33c <handle_scsi_sas+0xc4>  // b.none
  43f314:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f318:	add	x1, x0, #0x2a3
  43f31c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f320:	add	x4, x0, #0x838
  43f324:	mov	w3, #0xa0                  	// #160
  43f328:	mov	x2, x1
  43f32c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f330:	add	x1, x0, #0x310
  43f334:	mov	w0, #0x1                   	// #1
  43f338:	bl	40abb0 <log_assert_failed_realm@plt>
  43f33c:	add	x0, sp, #0x38
  43f340:	mov	x3, x0
  43f344:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f348:	add	x2, x0, #0x318
  43f34c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f350:	add	x1, x0, #0x328
  43f354:	ldr	x0, [sp, #40]
  43f358:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43f35c:	cmp	w0, #0x0
  43f360:	b.ge	43f36c <handle_scsi_sas+0xf4>  // b.tcont
  43f364:	mov	x19, #0x0                   	// #0
  43f368:	b	43f5b0 <handle_scsi_sas+0x338>
  43f36c:	ldr	x0, [sp, #56]
  43f370:	add	x1, sp, #0x40
  43f374:	bl	40be60 <sd_device_get_parent@plt>
  43f378:	cmp	w0, #0x0
  43f37c:	b.ge	43f388 <handle_scsi_sas+0x110>  // b.tcont
  43f380:	mov	x19, #0x0                   	// #0
  43f384:	b	43f5b0 <handle_scsi_sas+0x338>
  43f388:	ldr	x0, [sp, #64]
  43f38c:	add	x1, sp, #0x88
  43f390:	bl	40aba0 <sd_device_get_sysname@plt>
  43f394:	cmp	w0, #0x0
  43f398:	b.ge	43f3a4 <handle_scsi_sas+0x12c>  // b.tcont
  43f39c:	mov	x19, #0x0                   	// #0
  43f3a0:	b	43f5b0 <handle_scsi_sas+0x338>
  43f3a4:	ldr	x0, [sp, #136]
  43f3a8:	add	x3, sp, #0x58
  43f3ac:	mov	x2, x0
  43f3b0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f3b4:	add	x1, x0, #0x360
  43f3b8:	mov	x0, x3
  43f3bc:	bl	40a930 <sd_device_new_from_subsystem_sysname@plt>
  43f3c0:	cmp	w0, #0x0
  43f3c4:	b.ge	43f3d0 <handle_scsi_sas+0x158>  // b.tcont
  43f3c8:	mov	x19, #0x0                   	// #0
  43f3cc:	b	43f5b0 <handle_scsi_sas+0x338>
  43f3d0:	ldr	x0, [sp, #64]
  43f3d4:	add	x1, sp, #0x48
  43f3d8:	bl	40be60 <sd_device_get_parent@plt>
  43f3dc:	cmp	w0, #0x0
  43f3e0:	b.ge	43f3ec <handle_scsi_sas+0x174>  // b.tcont
  43f3e4:	mov	x19, #0x0                   	// #0
  43f3e8:	b	43f5b0 <handle_scsi_sas+0x338>
  43f3ec:	ldr	x0, [sp, #72]
  43f3f0:	add	x1, sp, #0x88
  43f3f4:	bl	40aba0 <sd_device_get_sysname@plt>
  43f3f8:	cmp	w0, #0x0
  43f3fc:	b.ge	43f408 <handle_scsi_sas+0x190>  // b.tcont
  43f400:	mov	x19, #0x0                   	// #0
  43f404:	b	43f5b0 <handle_scsi_sas+0x338>
  43f408:	ldr	x0, [sp, #136]
  43f40c:	add	x3, sp, #0x68
  43f410:	mov	x2, x0
  43f414:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f418:	add	x1, x0, #0x390
  43f41c:	mov	x0, x3
  43f420:	bl	40a930 <sd_device_new_from_subsystem_sysname@plt>
  43f424:	cmp	w0, #0x0
  43f428:	b.ge	43f434 <handle_scsi_sas+0x1bc>  // b.tcont
  43f42c:	mov	x19, #0x0                   	// #0
  43f430:	b	43f5b0 <handle_scsi_sas+0x338>
  43f434:	ldr	x3, [sp, #104]
  43f438:	add	x0, sp, #0x80
  43f43c:	mov	x2, x0
  43f440:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f444:	add	x1, x0, #0x3a0
  43f448:	mov	x0, x3
  43f44c:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43f450:	cmp	w0, #0x0
  43f454:	b.ge	43f460 <handle_scsi_sas+0x1e8>  // b.tcont
  43f458:	mov	x19, #0x0                   	// #0
  43f45c:	b	43f5b0 <handle_scsi_sas+0x338>
  43f460:	ldr	x2, [sp, #128]
  43f464:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f468:	add	x1, x0, #0x3b0
  43f46c:	mov	x0, x2
  43f470:	bl	40b710 <strcmp@plt>
  43f474:	cmp	w0, #0x0
  43f478:	b.eq	43f490 <handle_scsi_sas+0x218>  // b.none
  43f47c:	ldr	x1, [sp, #32]
  43f480:	ldr	x0, [sp, #40]
  43f484:	bl	43f088 <handle_scsi_sas_wide_port>
  43f488:	mov	x19, x0
  43f48c:	b	43f5b0 <handle_scsi_sas+0x338>
  43f490:	ldr	x3, [sp, #88]
  43f494:	add	x0, sp, #0x78
  43f498:	mov	x2, x0
  43f49c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f4a0:	add	x1, x0, #0x3b8
  43f4a4:	mov	x0, x3
  43f4a8:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43f4ac:	cmp	w0, #0x0
  43f4b0:	b.ge	43f4bc <handle_scsi_sas+0x244>  // b.tcont
  43f4b4:	mov	x19, #0x0                   	// #0
  43f4b8:	b	43f5b0 <handle_scsi_sas+0x338>
  43f4bc:	ldr	x0, [sp, #72]
  43f4c0:	add	x1, sp, #0x50
  43f4c4:	bl	40be60 <sd_device_get_parent@plt>
  43f4c8:	cmp	w0, #0x0
  43f4cc:	b.ge	43f4d8 <handle_scsi_sas+0x260>  // b.tcont
  43f4d0:	mov	x19, #0x0                   	// #0
  43f4d4:	b	43f5b0 <handle_scsi_sas+0x338>
  43f4d8:	ldr	x0, [sp, #80]
  43f4dc:	add	x1, sp, #0x88
  43f4e0:	bl	40aba0 <sd_device_get_sysname@plt>
  43f4e4:	cmp	w0, #0x0
  43f4e8:	b.ge	43f4f4 <handle_scsi_sas+0x27c>  // b.tcont
  43f4ec:	mov	x19, #0x0                   	// #0
  43f4f0:	b	43f5b0 <handle_scsi_sas+0x338>
  43f4f4:	ldr	x0, [sp, #136]
  43f4f8:	add	x3, sp, #0x60
  43f4fc:	mov	x2, x0
  43f500:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f504:	add	x1, x0, #0x360
  43f508:	mov	x0, x3
  43f50c:	bl	40a930 <sd_device_new_from_subsystem_sysname@plt>
  43f510:	cmp	w0, #0x0
  43f514:	b.lt	43f544 <handle_scsi_sas+0x2cc>  // b.tstop
  43f518:	ldr	x3, [sp, #96]
  43f51c:	add	x0, sp, #0x70
  43f520:	mov	x2, x0
  43f524:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f528:	add	x1, x0, #0x370
  43f52c:	mov	x0, x3
  43f530:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43f534:	cmp	w0, #0x0
  43f538:	b.ge	43f544 <handle_scsi_sas+0x2cc>  // b.tcont
  43f53c:	mov	x19, #0x0                   	// #0
  43f540:	b	43f5b0 <handle_scsi_sas+0x338>
  43f544:	add	x0, sp, #0x90
  43f548:	mov	x1, x0
  43f54c:	ldr	x0, [sp, #40]
  43f550:	bl	43ec74 <format_lun_number>
  43f554:	ldr	x0, [sp, #112]
  43f558:	cmp	x0, #0x0
  43f55c:	b.eq	43f58c <handle_scsi_sas+0x314>  // b.none
  43f560:	ldr	x0, [sp, #112]
  43f564:	ldr	x1, [sp, #120]
  43f568:	ldr	x2, [sp, #144]
  43f56c:	mov	x4, x2
  43f570:	mov	x3, x1
  43f574:	mov	x2, x0
  43f578:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f57c:	add	x1, x0, #0x3c8
  43f580:	ldr	x0, [sp, #32]
  43f584:	bl	43eab8 <path_prepend>
  43f588:	b	43f5ac <handle_scsi_sas+0x334>
  43f58c:	ldr	x0, [sp, #120]
  43f590:	ldr	x1, [sp, #144]
  43f594:	mov	x3, x1
  43f598:	mov	x2, x0
  43f59c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f5a0:	add	x1, x0, #0x3e0
  43f5a4:	ldr	x0, [sp, #32]
  43f5a8:	bl	43eab8 <path_prepend>
  43f5ac:	ldr	x19, [sp, #40]
  43f5b0:	add	x0, sp, #0x90
  43f5b4:	bl	43e960 <freep>
  43f5b8:	add	x0, sp, #0x68
  43f5bc:	bl	43ea84 <sd_device_unrefp>
  43f5c0:	add	x0, sp, #0x60
  43f5c4:	bl	43ea84 <sd_device_unrefp>
  43f5c8:	add	x0, sp, #0x58
  43f5cc:	bl	43ea84 <sd_device_unrefp>
  43f5d0:	mov	x1, x19
  43f5d4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43f5d8:	ldr	x0, [x0, #4032]
  43f5dc:	ldr	x2, [sp, #152]
  43f5e0:	ldr	x0, [x0]
  43f5e4:	eor	x0, x2, x0
  43f5e8:	cmp	x0, #0x0
  43f5ec:	b.eq	43f5f4 <handle_scsi_sas+0x37c>  // b.none
  43f5f0:	bl	40b280 <__stack_chk_fail@plt>
  43f5f4:	mov	x0, x1
  43f5f8:	ldr	x19, [sp, #16]
  43f5fc:	ldp	x29, x30, [sp], #160
  43f600:	ret

000000000043f604 <handle_scsi_iscsi>:
  43f604:	stp	x29, x30, [sp, #-208]!
  43f608:	mov	x29, sp
  43f60c:	str	x19, [sp, #16]
  43f610:	str	x0, [x29, #40]
  43f614:	str	x1, [x29, #32]
  43f618:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43f61c:	ldr	x0, [x0, #4032]
  43f620:	ldr	x1, [x0]
  43f624:	str	x1, [x29, #200]
  43f628:	mov	x1, #0x0                   	// #0
  43f62c:	str	xzr, [x29, #64]
  43f630:	str	xzr, [x29, #72]
  43f634:	str	xzr, [x29, #104]
  43f638:	ldr	x0, [x29, #40]
  43f63c:	cmp	x0, #0x0
  43f640:	cset	w0, eq  // eq = none
  43f644:	and	w0, w0, #0xff
  43f648:	and	x0, x0, #0xff
  43f64c:	cmp	x0, #0x0
  43f650:	b.eq	43f67c <handle_scsi_iscsi+0x78>  // b.none
  43f654:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f658:	add	x1, x0, #0x2a3
  43f65c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f660:	add	x4, x0, #0x848
  43f664:	mov	w3, #0xdb                  	// #219
  43f668:	mov	x2, x1
  43f66c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f670:	add	x1, x0, #0x308
  43f674:	mov	w0, #0x1                   	// #1
  43f678:	bl	40abb0 <log_assert_failed_realm@plt>
  43f67c:	ldr	x0, [x29, #32]
  43f680:	cmp	x0, #0x0
  43f684:	cset	w0, eq  // eq = none
  43f688:	and	w0, w0, #0xff
  43f68c:	and	x0, x0, #0xff
  43f690:	cmp	x0, #0x0
  43f694:	b.eq	43f6c0 <handle_scsi_iscsi+0xbc>  // b.none
  43f698:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f69c:	add	x1, x0, #0x2a3
  43f6a0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f6a4:	add	x4, x0, #0x848
  43f6a8:	mov	w3, #0xdc                  	// #220
  43f6ac:	mov	x2, x1
  43f6b0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f6b4:	add	x1, x0, #0x310
  43f6b8:	mov	w0, #0x1                   	// #1
  43f6bc:	bl	40abb0 <log_assert_failed_realm@plt>
  43f6c0:	ldr	x0, [x29, #40]
  43f6c4:	str	x0, [x29, #56]
  43f6c8:	ldr	x0, [x29, #56]
  43f6cc:	add	x1, x29, #0x38
  43f6d0:	bl	40be60 <sd_device_get_parent@plt>
  43f6d4:	cmp	w0, #0x0
  43f6d8:	b.ge	43f6e4 <handle_scsi_iscsi+0xe0>  // b.tcont
  43f6dc:	mov	x19, #0x0                   	// #0
  43f6e0:	b	43fa14 <handle_scsi_iscsi+0x410>
  43f6e4:	ldr	x0, [x29, #56]
  43f6e8:	add	x1, x29, #0x70
  43f6ec:	bl	40aba0 <sd_device_get_sysname@plt>
  43f6f0:	cmp	w0, #0x0
  43f6f4:	b.ge	43f700 <handle_scsi_iscsi+0xfc>  // b.tcont
  43f6f8:	mov	x19, #0x0                   	// #0
  43f6fc:	b	43fa14 <handle_scsi_iscsi+0x410>
  43f700:	ldr	x2, [x29, #112]
  43f704:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f708:	add	x1, x0, #0x3f0
  43f70c:	mov	x0, x2
  43f710:	bl	43ea00 <startswith>
  43f714:	cmp	x0, #0x0
  43f718:	b.ne	43f720 <handle_scsi_iscsi+0x11c>  // b.any
  43f71c:	b	43f6c8 <handle_scsi_iscsi+0xc4>
  43f720:	nop
  43f724:	ldr	x0, [x29, #112]
  43f728:	add	x3, x29, #0x40
  43f72c:	mov	x2, x0
  43f730:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f734:	add	x1, x0, #0x3f8
  43f738:	mov	x0, x3
  43f73c:	bl	40a930 <sd_device_new_from_subsystem_sysname@plt>
  43f740:	cmp	w0, #0x0
  43f744:	b.ge	43f750 <handle_scsi_iscsi+0x14c>  // b.tcont
  43f748:	mov	x19, #0x0                   	// #0
  43f74c:	b	43fa14 <handle_scsi_iscsi+0x410>
  43f750:	ldr	x3, [x29, #64]
  43f754:	add	x0, x29, #0x50
  43f758:	mov	x2, x0
  43f75c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f760:	add	x1, x0, #0x408
  43f764:	mov	x0, x3
  43f768:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43f76c:	cmp	w0, #0x0
  43f770:	b.ge	43f77c <handle_scsi_iscsi+0x178>  // b.tcont
  43f774:	mov	x19, #0x0                   	// #0
  43f778:	b	43fa14 <handle_scsi_iscsi+0x410>
  43f77c:	ldr	x0, [x29, #56]
  43f780:	add	x1, x29, #0x78
  43f784:	bl	40bc60 <sd_device_get_sysnum@plt>
  43f788:	cmp	w0, #0x0
  43f78c:	b.lt	43f79c <handle_scsi_iscsi+0x198>  // b.tstop
  43f790:	ldr	x0, [x29, #120]
  43f794:	cmp	x0, #0x0
  43f798:	b.ne	43f7a4 <handle_scsi_iscsi+0x1a0>  // b.any
  43f79c:	mov	x19, #0x0                   	// #0
  43f7a0:	b	43fa14 <handle_scsi_iscsi+0x410>
  43f7a4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f7a8:	add	x0, x0, #0x418
  43f7ac:	str	x0, [x29, #176]
  43f7b0:	ldr	x0, [x29, #120]
  43f7b4:	str	x0, [x29, #184]
  43f7b8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f7bc:	add	x0, x0, #0x428
  43f7c0:	str	x0, [x29, #192]
  43f7c4:	str	xzr, [x29, #136]
  43f7c8:	str	xzr, [x29, #144]
  43f7cc:	b	43f800 <handle_scsi_iscsi+0x1fc>
  43f7d0:	ldr	x0, [x29, #144]
  43f7d4:	lsl	x0, x0, #3
  43f7d8:	add	x1, x29, #0xb0
  43f7dc:	ldr	x0, [x1, x0]
  43f7e0:	bl	40bd10 <strlen@plt>
  43f7e4:	mov	x1, x0
  43f7e8:	ldr	x0, [x29, #136]
  43f7ec:	add	x0, x0, x1
  43f7f0:	str	x0, [x29, #136]
  43f7f4:	ldr	x0, [x29, #144]
  43f7f8:	add	x0, x0, #0x1
  43f7fc:	str	x0, [x29, #144]
  43f800:	ldr	x0, [x29, #144]
  43f804:	cmp	x0, #0x2
  43f808:	b.hi	43f824 <handle_scsi_iscsi+0x220>  // b.pmore
  43f80c:	ldr	x0, [x29, #144]
  43f810:	lsl	x0, x0, #3
  43f814:	add	x1, x29, #0xb0
  43f818:	ldr	x0, [x1, x0]
  43f81c:	cmp	x0, #0x0
  43f820:	b.ne	43f7d0 <handle_scsi_iscsi+0x1cc>  // b.any
  43f824:	ldr	x0, [x29, #136]
  43f828:	add	x0, x0, #0x1
  43f82c:	str	x0, [x29, #152]
  43f830:	ldr	x1, [x29, #152]
  43f834:	mov	x0, #0x1                   	// #1
  43f838:	bl	43e984 <size_multiply_overflow>
  43f83c:	and	w0, w0, #0xff
  43f840:	and	x0, x0, #0xff
  43f844:	cmp	x0, #0x0
  43f848:	b.eq	43f874 <handle_scsi_iscsi+0x270>  // b.none
  43f84c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f850:	add	x1, x0, #0x2a3
  43f854:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f858:	add	x4, x0, #0x848
  43f85c:	mov	w3, #0xf2                  	// #242
  43f860:	mov	x2, x1
  43f864:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f868:	add	x1, x0, #0x430
  43f86c:	mov	w0, #0x1                   	// #1
  43f870:	bl	40abb0 <log_assert_failed_realm@plt>
  43f874:	ldr	x0, [x29, #152]
  43f878:	cmp	x0, #0x400, lsl #12
  43f87c:	cset	w0, hi  // hi = pmore
  43f880:	and	w0, w0, #0xff
  43f884:	and	x0, x0, #0xff
  43f888:	cmp	x0, #0x0
  43f88c:	b.eq	43f8b8 <handle_scsi_iscsi+0x2b4>  // b.none
  43f890:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f894:	add	x1, x0, #0x2a3
  43f898:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f89c:	add	x4, x0, #0x848
  43f8a0:	mov	w3, #0xf2                  	// #242
  43f8a4:	mov	x2, x1
  43f8a8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f8ac:	add	x1, x0, #0x460
  43f8b0:	mov	w0, #0x1                   	// #1
  43f8b4:	bl	40abb0 <log_assert_failed_realm@plt>
  43f8b8:	ldr	x0, [x29, #152]
  43f8bc:	add	x0, x0, #0xf
  43f8c0:	lsr	x0, x0, #4
  43f8c4:	lsl	x0, x0, #4
  43f8c8:	sub	sp, sp, x0
  43f8cc:	mov	x0, sp
  43f8d0:	add	x0, x0, #0xf
  43f8d4:	lsr	x0, x0, #4
  43f8d8:	lsl	x0, x0, #4
  43f8dc:	str	x0, [x29, #160]
  43f8e0:	ldr	x0, [x29, #160]
  43f8e4:	str	x0, [x29, #128]
  43f8e8:	str	xzr, [x29, #144]
  43f8ec:	b	43f91c <handle_scsi_iscsi+0x318>
  43f8f0:	ldr	x0, [x29, #144]
  43f8f4:	lsl	x0, x0, #3
  43f8f8:	add	x1, x29, #0xb0
  43f8fc:	ldr	x0, [x1, x0]
  43f900:	mov	x1, x0
  43f904:	ldr	x0, [x29, #128]
  43f908:	bl	40a510 <stpcpy@plt>
  43f90c:	str	x0, [x29, #128]
  43f910:	ldr	x0, [x29, #144]
  43f914:	add	x0, x0, #0x1
  43f918:	str	x0, [x29, #144]
  43f91c:	ldr	x0, [x29, #144]
  43f920:	cmp	x0, #0x2
  43f924:	b.hi	43f940 <handle_scsi_iscsi+0x33c>  // b.pmore
  43f928:	ldr	x0, [x29, #144]
  43f92c:	lsl	x0, x0, #3
  43f930:	add	x1, x29, #0xb0
  43f934:	ldr	x0, [x1, x0]
  43f938:	cmp	x0, #0x0
  43f93c:	b.ne	43f8f0 <handle_scsi_iscsi+0x2ec>  // b.any
  43f940:	ldr	x0, [x29, #128]
  43f944:	strb	wzr, [x0]
  43f948:	ldr	x0, [x29, #160]
  43f94c:	str	x0, [x29, #168]
  43f950:	add	x3, x29, #0x48
  43f954:	ldr	x2, [x29, #168]
  43f958:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f95c:	add	x1, x0, #0x480
  43f960:	mov	x0, x3
  43f964:	bl	40a930 <sd_device_new_from_subsystem_sysname@plt>
  43f968:	cmp	w0, #0x0
  43f96c:	b.ge	43f978 <handle_scsi_iscsi+0x374>  // b.tcont
  43f970:	mov	x19, #0x0                   	// #0
  43f974:	b	43fa14 <handle_scsi_iscsi+0x410>
  43f978:	ldr	x3, [x29, #72]
  43f97c:	add	x0, x29, #0x58
  43f980:	mov	x2, x0
  43f984:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f988:	add	x1, x0, #0x498
  43f98c:	mov	x0, x3
  43f990:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43f994:	cmp	w0, #0x0
  43f998:	b.ge	43f9a4 <handle_scsi_iscsi+0x3a0>  // b.tcont
  43f99c:	mov	x19, #0x0                   	// #0
  43f9a0:	b	43fa14 <handle_scsi_iscsi+0x410>
  43f9a4:	ldr	x3, [x29, #72]
  43f9a8:	add	x0, x29, #0x60
  43f9ac:	mov	x2, x0
  43f9b0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43f9b4:	add	x1, x0, #0x4b0
  43f9b8:	mov	x0, x3
  43f9bc:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43f9c0:	cmp	w0, #0x0
  43f9c4:	b.ge	43f9d0 <handle_scsi_iscsi+0x3cc>  // b.tcont
  43f9c8:	mov	x19, #0x0                   	// #0
  43f9cc:	b	43fa14 <handle_scsi_iscsi+0x410>
  43f9d0:	add	x0, x29, #0x68
  43f9d4:	mov	x1, x0
  43f9d8:	ldr	x0, [x29, #40]
  43f9dc:	bl	43ec74 <format_lun_number>
  43f9e0:	ldr	x0, [x29, #88]
  43f9e4:	ldr	x1, [x29, #96]
  43f9e8:	ldr	x2, [x29, #80]
  43f9ec:	ldr	x3, [x29, #104]
  43f9f0:	mov	x5, x3
  43f9f4:	mov	x4, x2
  43f9f8:	mov	x3, x1
  43f9fc:	mov	x2, x0
  43fa00:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fa04:	add	x1, x0, #0x4c0
  43fa08:	ldr	x0, [x29, #32]
  43fa0c:	bl	43eab8 <path_prepend>
  43fa10:	ldr	x19, [x29, #40]
  43fa14:	add	x0, x29, #0x68
  43fa18:	bl	43e960 <freep>
  43fa1c:	add	x0, x29, #0x48
  43fa20:	bl	43ea84 <sd_device_unrefp>
  43fa24:	add	x0, x29, #0x40
  43fa28:	bl	43ea84 <sd_device_unrefp>
  43fa2c:	mov	x1, x19
  43fa30:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43fa34:	ldr	x0, [x0, #4032]
  43fa38:	ldr	x2, [x29, #200]
  43fa3c:	ldr	x0, [x0]
  43fa40:	eor	x0, x2, x0
  43fa44:	cmp	x0, #0x0
  43fa48:	b.eq	43fa50 <handle_scsi_iscsi+0x44c>  // b.none
  43fa4c:	bl	40b280 <__stack_chk_fail@plt>
  43fa50:	mov	x0, x1
  43fa54:	mov	sp, x29
  43fa58:	ldr	x19, [sp, #16]
  43fa5c:	ldp	x29, x30, [sp], #208
  43fa60:	ret

000000000043fa64 <handle_scsi_ata>:
  43fa64:	stp	x29, x30, [sp, #-96]!
  43fa68:	mov	x29, sp
  43fa6c:	str	x19, [sp, #16]
  43fa70:	str	x0, [sp, #40]
  43fa74:	str	x1, [sp, #32]
  43fa78:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43fa7c:	ldr	x0, [x0, #4032]
  43fa80:	ldr	x1, [x0]
  43fa84:	str	x1, [sp, #88]
  43fa88:	mov	x1, #0x0                   	// #0
  43fa8c:	str	xzr, [sp, #64]
  43fa90:	ldr	x0, [sp, #40]
  43fa94:	cmp	x0, #0x0
  43fa98:	cset	w0, eq  // eq = none
  43fa9c:	and	w0, w0, #0xff
  43faa0:	and	x0, x0, #0xff
  43faa4:	cmp	x0, #0x0
  43faa8:	b.eq	43fad4 <handle_scsi_ata+0x70>  // b.none
  43faac:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fab0:	add	x1, x0, #0x2a3
  43fab4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fab8:	add	x4, x0, #0x860
  43fabc:	mov	w3, #0x105                 	// #261
  43fac0:	mov	x2, x1
  43fac4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fac8:	add	x1, x0, #0x308
  43facc:	mov	w0, #0x1                   	// #1
  43fad0:	bl	40abb0 <log_assert_failed_realm@plt>
  43fad4:	ldr	x0, [sp, #32]
  43fad8:	cmp	x0, #0x0
  43fadc:	cset	w0, eq  // eq = none
  43fae0:	and	w0, w0, #0xff
  43fae4:	and	x0, x0, #0xff
  43fae8:	cmp	x0, #0x0
  43faec:	b.eq	43fb18 <handle_scsi_ata+0xb4>  // b.none
  43faf0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43faf4:	add	x1, x0, #0x2a3
  43faf8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fafc:	add	x4, x0, #0x860
  43fb00:	mov	w3, #0x106                 	// #262
  43fb04:	mov	x2, x1
  43fb08:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fb0c:	add	x1, x0, #0x310
  43fb10:	mov	w0, #0x1                   	// #1
  43fb14:	bl	40abb0 <log_assert_failed_realm@plt>
  43fb18:	add	x0, sp, #0x30
  43fb1c:	mov	x3, x0
  43fb20:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fb24:	add	x2, x0, #0x4d8
  43fb28:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fb2c:	add	x1, x0, #0x328
  43fb30:	ldr	x0, [sp, #40]
  43fb34:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43fb38:	cmp	w0, #0x0
  43fb3c:	b.ge	43fb48 <handle_scsi_ata+0xe4>  // b.tcont
  43fb40:	mov	x19, #0x0                   	// #0
  43fb44:	b	43fbf4 <handle_scsi_ata+0x190>
  43fb48:	ldr	x0, [sp, #48]
  43fb4c:	add	x1, sp, #0x38
  43fb50:	bl	40be60 <sd_device_get_parent@plt>
  43fb54:	cmp	w0, #0x0
  43fb58:	b.ge	43fb64 <handle_scsi_ata+0x100>  // b.tcont
  43fb5c:	mov	x19, #0x0                   	// #0
  43fb60:	b	43fbf4 <handle_scsi_ata+0x190>
  43fb64:	ldr	x0, [sp, #56]
  43fb68:	add	x1, sp, #0x50
  43fb6c:	bl	40aba0 <sd_device_get_sysname@plt>
  43fb70:	cmp	w0, #0x0
  43fb74:	b.ge	43fb80 <handle_scsi_ata+0x11c>  // b.tcont
  43fb78:	mov	x19, #0x0                   	// #0
  43fb7c:	b	43fbf4 <handle_scsi_ata+0x190>
  43fb80:	ldr	x0, [sp, #80]
  43fb84:	add	x3, sp, #0x40
  43fb88:	mov	x2, x0
  43fb8c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fb90:	add	x1, x0, #0x4e8
  43fb94:	mov	x0, x3
  43fb98:	bl	40a930 <sd_device_new_from_subsystem_sysname@plt>
  43fb9c:	cmp	w0, #0x0
  43fba0:	b.ge	43fbac <handle_scsi_ata+0x148>  // b.tcont
  43fba4:	mov	x19, #0x0                   	// #0
  43fba8:	b	43fbf4 <handle_scsi_ata+0x190>
  43fbac:	ldr	x3, [sp, #64]
  43fbb0:	add	x0, sp, #0x48
  43fbb4:	mov	x2, x0
  43fbb8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fbbc:	add	x1, x0, #0x4f8
  43fbc0:	mov	x0, x3
  43fbc4:	bl	40b870 <sd_device_get_sysattr_value@plt>
  43fbc8:	cmp	w0, #0x0
  43fbcc:	b.ge	43fbd8 <handle_scsi_ata+0x174>  // b.tcont
  43fbd0:	mov	x19, #0x0                   	// #0
  43fbd4:	b	43fbf4 <handle_scsi_ata+0x190>
  43fbd8:	ldr	x0, [sp, #72]
  43fbdc:	mov	x2, x0
  43fbe0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fbe4:	add	x1, x0, #0x500
  43fbe8:	ldr	x0, [sp, #32]
  43fbec:	bl	43eab8 <path_prepend>
  43fbf0:	ldr	x19, [sp, #40]
  43fbf4:	add	x0, sp, #0x40
  43fbf8:	bl	43ea84 <sd_device_unrefp>
  43fbfc:	mov	x1, x19
  43fc00:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43fc04:	ldr	x0, [x0, #4032]
  43fc08:	ldr	x2, [sp, #88]
  43fc0c:	ldr	x0, [x0]
  43fc10:	eor	x0, x2, x0
  43fc14:	cmp	x0, #0x0
  43fc18:	b.eq	43fc20 <handle_scsi_ata+0x1bc>  // b.none
  43fc1c:	bl	40b280 <__stack_chk_fail@plt>
  43fc20:	mov	x0, x1
  43fc24:	ldr	x19, [sp, #16]
  43fc28:	ldp	x29, x30, [sp], #96
  43fc2c:	ret

000000000043fc30 <handle_scsi_default>:
  43fc30:	stp	x29, x30, [sp, #-176]!
  43fc34:	mov	x29, sp
  43fc38:	str	x19, [sp, #16]
  43fc3c:	str	x0, [x29, #40]
  43fc40:	str	x1, [x29, #32]
  43fc44:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43fc48:	ldr	x0, [x0, #4032]
  43fc4c:	ldr	x1, [x0]
  43fc50:	str	x1, [x29, #168]
  43fc54:	mov	x1, #0x0                   	// #0
  43fc58:	str	xzr, [x29, #112]
  43fc5c:	mov	w0, #0xffffffff            	// #-1
  43fc60:	str	w0, [x29, #80]
  43fc64:	ldr	x0, [x29, #40]
  43fc68:	cmp	x0, #0x0
  43fc6c:	cset	w0, eq  // eq = none
  43fc70:	and	w0, w0, #0xff
  43fc74:	and	x0, x0, #0xff
  43fc78:	cmp	x0, #0x0
  43fc7c:	b.eq	43fca8 <handle_scsi_default+0x78>  // b.none
  43fc80:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fc84:	add	x1, x0, #0x2a3
  43fc88:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fc8c:	add	x4, x0, #0x870
  43fc90:	mov	w3, #0x122                 	// #290
  43fc94:	mov	x2, x1
  43fc98:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fc9c:	add	x1, x0, #0x308
  43fca0:	mov	w0, #0x1                   	// #1
  43fca4:	bl	40abb0 <log_assert_failed_realm@plt>
  43fca8:	ldr	x0, [x29, #32]
  43fcac:	cmp	x0, #0x0
  43fcb0:	cset	w0, eq  // eq = none
  43fcb4:	and	w0, w0, #0xff
  43fcb8:	and	x0, x0, #0xff
  43fcbc:	cmp	x0, #0x0
  43fcc0:	b.eq	43fcec <handle_scsi_default+0xbc>  // b.none
  43fcc4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fcc8:	add	x1, x0, #0x2a3
  43fccc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fcd0:	add	x4, x0, #0x870
  43fcd4:	mov	w3, #0x123                 	// #291
  43fcd8:	mov	x2, x1
  43fcdc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fce0:	add	x1, x0, #0x310
  43fce4:	mov	w0, #0x1                   	// #1
  43fce8:	bl	40abb0 <log_assert_failed_realm@plt>
  43fcec:	add	x0, x29, #0x58
  43fcf0:	mov	x3, x0
  43fcf4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fcf8:	add	x2, x0, #0x4d8
  43fcfc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fd00:	add	x1, x0, #0x328
  43fd04:	ldr	x0, [x29, #40]
  43fd08:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  43fd0c:	cmp	w0, #0x0
  43fd10:	b.ge	43fd1c <handle_scsi_default+0xec>  // b.tcont
  43fd14:	mov	x19, #0x0                   	// #0
  43fd18:	b	43ffd0 <handle_scsi_default+0x3a0>
  43fd1c:	add	x0, x29, #0x60
  43fd20:	mov	x1, x0
  43fd24:	ldr	x0, [x29, #40]
  43fd28:	bl	40aba0 <sd_device_get_sysname@plt>
  43fd2c:	cmp	w0, #0x0
  43fd30:	b.ge	43fd3c <handle_scsi_default+0x10c>  // b.tcont
  43fd34:	mov	x19, #0x0                   	// #0
  43fd38:	b	43ffd0 <handle_scsi_default+0x3a0>
  43fd3c:	ldr	x6, [x29, #96]
  43fd40:	add	x3, x29, #0x4c
  43fd44:	add	x2, x29, #0x48
  43fd48:	add	x1, x29, #0x44
  43fd4c:	add	x0, x29, #0x40
  43fd50:	mov	x5, x3
  43fd54:	mov	x4, x2
  43fd58:	mov	x3, x1
  43fd5c:	mov	x2, x0
  43fd60:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43fd64:	add	x1, x0, #0x508
  43fd68:	mov	x0, x6
  43fd6c:	bl	40add0 <__isoc99_sscanf@plt>
  43fd70:	cmp	w0, #0x4
  43fd74:	b.eq	43fd80 <handle_scsi_default+0x150>  // b.none
  43fd78:	mov	x19, #0x0                   	// #0
  43fd7c:	b	43ffd0 <handle_scsi_default+0x3a0>
  43fd80:	ldr	x0, [x29, #88]
  43fd84:	add	x1, x29, #0x68
  43fd88:	bl	40bd50 <sd_device_get_syspath@plt>
  43fd8c:	cmp	w0, #0x0
  43fd90:	b.ge	43fd9c <handle_scsi_default+0x16c>  // b.tcont
  43fd94:	mov	x19, #0x0                   	// #0
  43fd98:	b	43ffd0 <handle_scsi_default+0x3a0>
  43fd9c:	ldr	x0, [x29, #104]
  43fda0:	mov	w1, #0x2f                  	// #47
  43fda4:	bl	40ab50 <strrchr@plt>
  43fda8:	str	x0, [x29, #136]
  43fdac:	ldr	x0, [x29, #136]
  43fdb0:	cmp	x0, #0x0
  43fdb4:	b.ne	43fdc0 <handle_scsi_default+0x190>  // b.any
  43fdb8:	mov	x19, #0x0                   	// #0
  43fdbc:	b	43ffd0 <handle_scsi_default+0x3a0>
  43fdc0:	ldr	x0, [x29, #104]
  43fdc4:	str	x0, [x29, #144]
  43fdc8:	ldr	x0, [x29, #104]
  43fdcc:	ldr	x1, [x29, #136]
  43fdd0:	sub	x0, x1, x0
  43fdd4:	mov	x1, x0
  43fdd8:	ldr	x0, [x29, #144]
  43fddc:	bl	40a800 <strnlen@plt>
  43fde0:	str	x0, [x29, #152]
  43fde4:	ldr	x0, [x29, #152]
  43fde8:	add	x0, x0, #0x1
  43fdec:	add	x0, x0, #0xf
  43fdf0:	lsr	x0, x0, #4
  43fdf4:	lsl	x0, x0, #4
  43fdf8:	sub	sp, sp, x0
  43fdfc:	mov	x0, sp
  43fe00:	add	x0, x0, #0xf
  43fe04:	lsr	x0, x0, #4
  43fe08:	lsl	x0, x0, #4
  43fe0c:	str	x0, [x29, #160]
  43fe10:	ldr	x1, [x29, #160]
  43fe14:	ldr	x0, [x29, #152]
  43fe18:	add	x0, x1, x0
  43fe1c:	strb	wzr, [x0]
  43fe20:	ldr	x2, [x29, #152]
  43fe24:	ldr	x1, [x29, #144]
  43fe28:	ldr	x0, [x29, #160]
  43fe2c:	bl	40a980 <memcpy@plt>
  43fe30:	str	x0, [x29, #104]
  43fe34:	ldr	x0, [x29, #104]
  43fe38:	bl	40b770 <opendir@plt>
  43fe3c:	str	x0, [x29, #112]
  43fe40:	ldr	x0, [x29, #112]
  43fe44:	cmp	x0, #0x0
  43fe48:	b.ne	43fe54 <handle_scsi_default+0x224>  // b.any
  43fe4c:	mov	x19, #0x0                   	// #0
  43fe50:	b	43ffd0 <handle_scsi_default+0x3a0>
  43fe54:	bl	40b040 <__errno_location@plt>
  43fe58:	str	wzr, [x0]
  43fe5c:	ldr	x0, [x29, #112]
  43fe60:	bl	40abe0 <readdir64@plt>
  43fe64:	str	x0, [x29, #128]
  43fe68:	ldr	x0, [x29, #128]
  43fe6c:	cmp	x0, #0x0
  43fe70:	b.ne	43fe94 <handle_scsi_default+0x264>  // b.any
  43fe74:	bl	40b040 <__errno_location@plt>
  43fe78:	ldr	w0, [x0]
  43fe7c:	cmp	w0, #0x0
  43fe80:	nop
  43fe84:	ldr	w0, [x29, #80]
  43fe88:	cmn	w0, #0x1
  43fe8c:	b.ne	43ff8c <handle_scsi_default+0x35c>  // b.any
  43fe90:	b	43ff84 <handle_scsi_default+0x354>
  43fe94:	ldr	x0, [x29, #128]
  43fe98:	ldrb	w0, [x0, #19]
  43fe9c:	cmp	w0, #0x2e
  43fea0:	b.eq	43ff50 <handle_scsi_default+0x320>  // b.none
  43fea4:	strb	wzr, [x29, #63]
  43fea8:	ldr	x0, [x29, #128]
  43feac:	ldrb	w0, [x0, #18]
  43feb0:	cmp	w0, #0x4
  43feb4:	b.eq	43fec0 <handle_scsi_default+0x290>  // b.none
  43feb8:	cmp	w0, #0xa
  43febc:	b.ne	43fec8 <handle_scsi_default+0x298>  // b.any
  43fec0:	mov	w0, #0x1                   	// #1
  43fec4:	strb	w0, [x29, #63]
  43fec8:	nop
  43fecc:	ldrb	w0, [x29, #63]
  43fed0:	eor	w0, w0, #0x1
  43fed4:	and	w0, w0, #0xff
  43fed8:	cmp	w0, #0x0
  43fedc:	b.ne	43ff58 <handle_scsi_default+0x328>  // b.any
  43fee0:	ldr	x0, [x29, #128]
  43fee4:	add	x2, x0, #0x13
  43fee8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43feec:	add	x1, x0, #0x518
  43fef0:	mov	x0, x2
  43fef4:	bl	43ea00 <startswith>
  43fef8:	cmp	x0, #0x0
  43fefc:	b.eq	43ff60 <handle_scsi_default+0x330>  // b.none
  43ff00:	ldr	x0, [x29, #128]
  43ff04:	add	x0, x0, #0x17
  43ff08:	add	x1, x29, #0x78
  43ff0c:	mov	w2, #0xa                   	// #10
  43ff10:	bl	40b630 <strtoul@plt>
  43ff14:	str	w0, [x29, #84]
  43ff18:	ldr	x0, [x29, #120]
  43ff1c:	ldrb	w0, [x0]
  43ff20:	cmp	w0, #0x0
  43ff24:	b.ne	43ff68 <handle_scsi_default+0x338>  // b.any
  43ff28:	ldr	w0, [x29, #80]
  43ff2c:	cmn	w0, #0x1
  43ff30:	b.eq	43ff44 <handle_scsi_default+0x314>  // b.none
  43ff34:	ldr	w1, [x29, #84]
  43ff38:	ldr	w0, [x29, #80]
  43ff3c:	cmp	w1, w0
  43ff40:	b.ge	43ff6c <handle_scsi_default+0x33c>  // b.tcont
  43ff44:	ldr	w0, [x29, #84]
  43ff48:	str	w0, [x29, #80]
  43ff4c:	b	43ff6c <handle_scsi_default+0x33c>
  43ff50:	nop
  43ff54:	b	43ff6c <handle_scsi_default+0x33c>
  43ff58:	nop
  43ff5c:	b	43ff6c <handle_scsi_default+0x33c>
  43ff60:	nop
  43ff64:	b	43ff6c <handle_scsi_default+0x33c>
  43ff68:	nop
  43ff6c:	bl	40b040 <__errno_location@plt>
  43ff70:	str	wzr, [x0]
  43ff74:	ldr	x0, [x29, #112]
  43ff78:	bl	40abe0 <readdir64@plt>
  43ff7c:	str	x0, [x29, #128]
  43ff80:	b	43fe68 <handle_scsi_default+0x238>
  43ff84:	ldr	x19, [x29, #88]
  43ff88:	b	43ffd0 <handle_scsi_default+0x3a0>
  43ff8c:	ldr	w1, [x29, #64]
  43ff90:	ldr	w0, [x29, #80]
  43ff94:	sub	w0, w1, w0
  43ff98:	str	w0, [x29, #64]
  43ff9c:	ldr	w0, [x29, #64]
  43ffa0:	ldr	w1, [x29, #68]
  43ffa4:	ldr	w2, [x29, #72]
  43ffa8:	ldr	w3, [x29, #76]
  43ffac:	mov	w5, w3
  43ffb0:	mov	w4, w2
  43ffb4:	mov	w3, w1
  43ffb8:	mov	w2, w0
  43ffbc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  43ffc0:	add	x1, x0, #0x520
  43ffc4:	ldr	x0, [x29, #32]
  43ffc8:	bl	43eab8 <path_prepend>
  43ffcc:	ldr	x19, [x29, #88]
  43ffd0:	add	x0, x29, #0x70
  43ffd4:	bl	43ea50 <closedirp>
  43ffd8:	mov	x1, x19
  43ffdc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  43ffe0:	ldr	x0, [x0, #4032]
  43ffe4:	ldr	x2, [x29, #168]
  43ffe8:	ldr	x0, [x0]
  43ffec:	eor	x0, x2, x0
  43fff0:	cmp	x0, #0x0
  43fff4:	b.eq	43fffc <handle_scsi_default+0x3cc>  // b.none
  43fff8:	bl	40b280 <__stack_chk_fail@plt>
  43fffc:	mov	x0, x1
  440000:	mov	sp, x29
  440004:	ldr	x19, [sp, #16]
  440008:	ldp	x29, x30, [sp], #176
  44000c:	ret

0000000000440010 <handle_scsi_hyperv>:
  440010:	stp	x29, x30, [sp, #-160]!
  440014:	mov	x29, sp
  440018:	str	x19, [sp, #16]
  44001c:	str	x0, [sp, #56]
  440020:	str	x1, [sp, #48]
  440024:	str	x2, [sp, #40]
  440028:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44002c:	ldr	x0, [x0, #4032]
  440030:	ldr	x1, [x0]
  440034:	str	x1, [sp, #152]
  440038:	mov	x1, #0x0                   	// #0
  44003c:	str	xzr, [sp, #88]
  440040:	ldr	x0, [sp, #56]
  440044:	cmp	x0, #0x0
  440048:	cset	w0, eq  // eq = none
  44004c:	and	w0, w0, #0xff
  440050:	and	x0, x0, #0xff
  440054:	cmp	x0, #0x0
  440058:	b.eq	440084 <handle_scsi_hyperv+0x74>  // b.none
  44005c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440060:	add	x1, x0, #0x2a3
  440064:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440068:	add	x4, x0, #0x888
  44006c:	mov	w3, #0x16f                 	// #367
  440070:	mov	x2, x1
  440074:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440078:	add	x1, x0, #0x308
  44007c:	mov	w0, #0x1                   	// #1
  440080:	bl	40abb0 <log_assert_failed_realm@plt>
  440084:	ldr	x0, [sp, #48]
  440088:	cmp	x0, #0x0
  44008c:	cset	w0, eq  // eq = none
  440090:	and	w0, w0, #0xff
  440094:	and	x0, x0, #0xff
  440098:	cmp	x0, #0x0
  44009c:	b.eq	4400c8 <handle_scsi_hyperv+0xb8>  // b.none
  4400a0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4400a4:	add	x1, x0, #0x2a3
  4400a8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4400ac:	add	x4, x0, #0x888
  4400b0:	mov	w3, #0x170                 	// #368
  4400b4:	mov	x2, x1
  4400b8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4400bc:	add	x1, x0, #0x310
  4400c0:	mov	w0, #0x1                   	// #1
  4400c4:	bl	40abb0 <log_assert_failed_realm@plt>
  4400c8:	ldr	x0, [sp, #40]
  4400cc:	cmp	x0, #0x26
  4400d0:	cset	w0, hi  // hi = pmore
  4400d4:	and	w0, w0, #0xff
  4400d8:	and	x0, x0, #0xff
  4400dc:	cmp	x0, #0x0
  4400e0:	b.eq	44010c <handle_scsi_hyperv+0xfc>  // b.none
  4400e4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4400e8:	add	x1, x0, #0x2a3
  4400ec:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4400f0:	add	x4, x0, #0x888
  4400f4:	mov	w3, #0x171                 	// #369
  4400f8:	mov	x2, x1
  4400fc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440100:	add	x1, x0, #0x538
  440104:	mov	w0, #0x1                   	// #1
  440108:	bl	40abb0 <log_assert_failed_realm@plt>
  44010c:	add	x0, sp, #0x40
  440110:	mov	x3, x0
  440114:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440118:	add	x2, x0, #0x4d8
  44011c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440120:	add	x1, x0, #0x328
  440124:	ldr	x0, [sp, #56]
  440128:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  44012c:	cmp	w0, #0x0
  440130:	b.ge	44013c <handle_scsi_hyperv+0x12c>  // b.tcont
  440134:	mov	x19, #0x0                   	// #0
  440138:	b	440284 <handle_scsi_hyperv+0x274>
  44013c:	ldr	x0, [sp, #64]
  440140:	add	x1, sp, #0x48
  440144:	bl	40be60 <sd_device_get_parent@plt>
  440148:	cmp	w0, #0x0
  44014c:	b.ge	440158 <handle_scsi_hyperv+0x148>  // b.tcont
  440150:	mov	x19, #0x0                   	// #0
  440154:	b	440284 <handle_scsi_hyperv+0x274>
  440158:	ldr	x3, [sp, #72]
  44015c:	add	x0, sp, #0x50
  440160:	mov	x2, x0
  440164:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440168:	add	x1, x0, #0x558
  44016c:	mov	x0, x3
  440170:	bl	40b870 <sd_device_get_sysattr_value@plt>
  440174:	cmp	w0, #0x0
  440178:	b.ge	440184 <handle_scsi_hyperv+0x174>  // b.tcont
  44017c:	mov	x19, #0x0                   	// #0
  440180:	b	440284 <handle_scsi_hyperv+0x274>
  440184:	ldr	x0, [sp, #80]
  440188:	bl	40bd10 <strlen@plt>
  44018c:	mov	x1, x0
  440190:	ldr	x0, [sp, #40]
  440194:	cmp	x0, x1
  440198:	b.hi	4401c8 <handle_scsi_hyperv+0x1b8>  // b.pmore
  44019c:	ldr	x0, [sp, #80]
  4401a0:	ldrb	w0, [x0]
  4401a4:	cmp	w0, #0x7b
  4401a8:	b.ne	4401c8 <handle_scsi_hyperv+0x1b8>  // b.any
  4401ac:	ldr	x1, [sp, #80]
  4401b0:	ldr	x0, [sp, #40]
  4401b4:	sub	x0, x0, #0x1
  4401b8:	add	x0, x1, x0
  4401bc:	ldrb	w0, [x0]
  4401c0:	cmp	w0, #0x7d
  4401c4:	b.eq	4401d0 <handle_scsi_hyperv+0x1c0>  // b.none
  4401c8:	mov	x19, #0x0                   	// #0
  4401cc:	b	440284 <handle_scsi_hyperv+0x274>
  4401d0:	mov	x0, #0x1                   	// #1
  4401d4:	str	x0, [sp, #96]
  4401d8:	str	xzr, [sp, #104]
  4401dc:	b	440230 <handle_scsi_hyperv+0x220>
  4401e0:	ldr	x1, [sp, #80]
  4401e4:	ldr	x0, [sp, #96]
  4401e8:	add	x0, x1, x0
  4401ec:	ldrb	w0, [x0]
  4401f0:	cmp	w0, #0x2d
  4401f4:	b.eq	440220 <handle_scsi_hyperv+0x210>  // b.none
  4401f8:	ldr	x1, [sp, #80]
  4401fc:	ldr	x0, [sp, #96]
  440200:	add	x1, x1, x0
  440204:	ldr	x0, [sp, #104]
  440208:	add	x2, x0, #0x1
  44020c:	str	x2, [sp, #104]
  440210:	ldrb	w2, [x1]
  440214:	add	x1, sp, #0x70
  440218:	strb	w2, [x1, x0]
  44021c:	b	440224 <handle_scsi_hyperv+0x214>
  440220:	nop
  440224:	ldr	x0, [sp, #96]
  440228:	add	x0, x0, #0x1
  44022c:	str	x0, [sp, #96]
  440230:	ldr	x0, [sp, #40]
  440234:	sub	x0, x0, #0x1
  440238:	ldr	x1, [sp, #96]
  44023c:	cmp	x1, x0
  440240:	b.cc	4401e0 <handle_scsi_hyperv+0x1d0>  // b.lo, b.ul, b.last
  440244:	ldr	x0, [sp, #104]
  440248:	add	x1, sp, #0x70
  44024c:	strb	wzr, [x1, x0]
  440250:	add	x0, sp, #0x58
  440254:	mov	x1, x0
  440258:	ldr	x0, [sp, #56]
  44025c:	bl	43ec74 <format_lun_number>
  440260:	ldr	x1, [sp, #88]
  440264:	add	x0, sp, #0x70
  440268:	mov	x3, x1
  44026c:	mov	x2, x0
  440270:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440274:	add	x1, x0, #0x568
  440278:	ldr	x0, [sp, #48]
  44027c:	bl	43eab8 <path_prepend>
  440280:	ldr	x19, [sp, #56]
  440284:	add	x0, sp, #0x58
  440288:	bl	43e960 <freep>
  44028c:	mov	x1, x19
  440290:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  440294:	ldr	x0, [x0, #4032]
  440298:	ldr	x2, [sp, #152]
  44029c:	ldr	x0, [x0]
  4402a0:	eor	x0, x2, x0
  4402a4:	cmp	x0, #0x0
  4402a8:	b.eq	4402b0 <handle_scsi_hyperv+0x2a0>  // b.none
  4402ac:	bl	40b280 <__stack_chk_fail@plt>
  4402b0:	mov	x0, x1
  4402b4:	ldr	x19, [sp, #16]
  4402b8:	ldp	x29, x30, [sp], #160
  4402bc:	ret

00000000004402c0 <handle_scsi>:
  4402c0:	stp	x29, x30, [sp, #-80]!
  4402c4:	mov	x29, sp
  4402c8:	str	x0, [sp, #40]
  4402cc:	str	x1, [sp, #32]
  4402d0:	str	x2, [sp, #24]
  4402d4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4402d8:	ldr	x0, [x0, #4032]
  4402dc:	ldr	x1, [x0]
  4402e0:	str	x1, [sp, #72]
  4402e4:	mov	x1, #0x0                   	// #0
  4402e8:	add	x0, sp, #0x30
  4402ec:	mov	x1, x0
  4402f0:	ldr	x0, [sp, #40]
  4402f4:	bl	40a460 <sd_device_get_devtype@plt>
  4402f8:	cmp	w0, #0x0
  4402fc:	b.lt	44031c <handle_scsi+0x5c>  // b.tstop
  440300:	ldr	x2, [sp, #48]
  440304:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440308:	add	x1, x0, #0x578
  44030c:	mov	x0, x2
  440310:	bl	40b710 <strcmp@plt>
  440314:	cmp	w0, #0x0
  440318:	b.eq	440324 <handle_scsi+0x64>  // b.none
  44031c:	ldr	x0, [sp, #40]
  440320:	b	4404dc <handle_scsi+0x21c>
  440324:	add	x0, sp, #0x38
  440328:	mov	x2, x0
  44032c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440330:	add	x1, x0, #0x588
  440334:	ldr	x0, [sp, #40]
  440338:	bl	40b870 <sd_device_get_sysattr_value@plt>
  44033c:	cmp	w0, #0x0
  440340:	b.lt	44037c <handle_scsi+0xbc>  // b.tstop
  440344:	ldr	x0, [sp, #56]
  440348:	mov	x2, x0
  44034c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440350:	add	x1, x0, #0x598
  440354:	ldr	x0, [sp, #32]
  440358:	bl	43eab8 <path_prepend>
  44035c:	ldr	x0, [sp, #24]
  440360:	mov	w1, #0x1                   	// #1
  440364:	strb	w1, [x0]
  440368:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44036c:	add	x1, x0, #0x328
  440370:	ldr	x0, [sp, #40]
  440374:	bl	43ed6c <skip_subsystem>
  440378:	b	4404dc <handle_scsi+0x21c>
  44037c:	add	x0, sp, #0x40
  440380:	mov	x1, x0
  440384:	ldr	x0, [sp, #40]
  440388:	bl	40bd50 <sd_device_get_syspath@plt>
  44038c:	cmp	w0, #0x0
  440390:	b.ge	44039c <handle_scsi+0xdc>  // b.tcont
  440394:	mov	x0, #0x0                   	// #0
  440398:	b	4404dc <handle_scsi+0x21c>
  44039c:	ldr	x2, [sp, #64]
  4403a0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4403a4:	add	x1, x0, #0x5a8
  4403a8:	mov	x0, x2
  4403ac:	bl	40ac30 <strstr@plt>
  4403b0:	cmp	x0, #0x0
  4403b4:	b.eq	4403d4 <handle_scsi+0x114>  // b.none
  4403b8:	ldr	x0, [sp, #24]
  4403bc:	mov	w1, #0x1                   	// #1
  4403c0:	strb	w1, [x0]
  4403c4:	ldr	x1, [sp, #32]
  4403c8:	ldr	x0, [sp, #40]
  4403cc:	bl	43eeb4 <handle_scsi_fibre_channel>
  4403d0:	b	4404dc <handle_scsi+0x21c>
  4403d4:	ldr	x2, [sp, #64]
  4403d8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4403dc:	add	x1, x0, #0x5b0
  4403e0:	mov	x0, x2
  4403e4:	bl	40ac30 <strstr@plt>
  4403e8:	cmp	x0, #0x0
  4403ec:	b.eq	44040c <handle_scsi+0x14c>  // b.none
  4403f0:	ldr	x0, [sp, #24]
  4403f4:	mov	w1, #0x1                   	// #1
  4403f8:	strb	w1, [x0]
  4403fc:	ldr	x1, [sp, #32]
  440400:	ldr	x0, [sp, #40]
  440404:	bl	43f278 <handle_scsi_sas>
  440408:	b	4404dc <handle_scsi+0x21c>
  44040c:	ldr	x2, [sp, #64]
  440410:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440414:	add	x1, x0, #0x5c0
  440418:	mov	x0, x2
  44041c:	bl	40ac30 <strstr@plt>
  440420:	cmp	x0, #0x0
  440424:	b.eq	440444 <handle_scsi+0x184>  // b.none
  440428:	ldr	x0, [sp, #24]
  44042c:	mov	w1, #0x1                   	// #1
  440430:	strb	w1, [x0]
  440434:	ldr	x1, [sp, #32]
  440438:	ldr	x0, [sp, #40]
  44043c:	bl	43f604 <handle_scsi_iscsi>
  440440:	b	4404dc <handle_scsi+0x21c>
  440444:	ldr	x2, [sp, #64]
  440448:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44044c:	add	x1, x0, #0x5d0
  440450:	mov	x0, x2
  440454:	bl	40ac30 <strstr@plt>
  440458:	cmp	x0, #0x0
  44045c:	b.eq	440470 <handle_scsi+0x1b0>  // b.none
  440460:	ldr	x1, [sp, #32]
  440464:	ldr	x0, [sp, #40]
  440468:	bl	43fa64 <handle_scsi_ata>
  44046c:	b	4404dc <handle_scsi+0x21c>
  440470:	ldr	x2, [sp, #64]
  440474:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440478:	add	x1, x0, #0x5d8
  44047c:	mov	x0, x2
  440480:	bl	40ac30 <strstr@plt>
  440484:	cmp	x0, #0x0
  440488:	b.eq	4404a0 <handle_scsi+0x1e0>  // b.none
  44048c:	mov	x2, #0x25                  	// #37
  440490:	ldr	x1, [sp, #32]
  440494:	ldr	x0, [sp, #40]
  440498:	bl	440010 <handle_scsi_hyperv>
  44049c:	b	4404dc <handle_scsi+0x21c>
  4404a0:	ldr	x2, [sp, #64]
  4404a4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4404a8:	add	x1, x0, #0x5e0
  4404ac:	mov	x0, x2
  4404b0:	bl	40ac30 <strstr@plt>
  4404b4:	cmp	x0, #0x0
  4404b8:	b.eq	4404d0 <handle_scsi+0x210>  // b.none
  4404bc:	mov	x2, #0x26                  	// #38
  4404c0:	ldr	x1, [sp, #32]
  4404c4:	ldr	x0, [sp, #40]
  4404c8:	bl	440010 <handle_scsi_hyperv>
  4404cc:	b	4404dc <handle_scsi+0x21c>
  4404d0:	ldr	x1, [sp, #32]
  4404d4:	ldr	x0, [sp, #40]
  4404d8:	bl	43fc30 <handle_scsi_default>
  4404dc:	mov	x1, x0
  4404e0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4404e4:	ldr	x0, [x0, #4032]
  4404e8:	ldr	x2, [sp, #72]
  4404ec:	ldr	x0, [x0]
  4404f0:	eor	x0, x2, x0
  4404f4:	cmp	x0, #0x0
  4404f8:	b.eq	440500 <handle_scsi+0x240>  // b.none
  4404fc:	bl	40b280 <__stack_chk_fail@plt>
  440500:	mov	x0, x1
  440504:	ldp	x29, x30, [sp], #80
  440508:	ret

000000000044050c <handle_cciss>:
  44050c:	stp	x29, x30, [sp, #-64]!
  440510:	mov	x29, sp
  440514:	str	x0, [sp, #24]
  440518:	str	x1, [sp, #16]
  44051c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  440520:	ldr	x0, [x0, #4032]
  440524:	ldr	x1, [x0]
  440528:	str	x1, [sp, #56]
  44052c:	mov	x1, #0x0                   	// #0
  440530:	add	x0, sp, #0x30
  440534:	mov	x1, x0
  440538:	ldr	x0, [sp, #24]
  44053c:	bl	40aba0 <sd_device_get_sysname@plt>
  440540:	cmp	w0, #0x0
  440544:	b.ge	440550 <handle_cciss+0x44>  // b.tcont
  440548:	mov	x0, #0x0                   	// #0
  44054c:	b	4405ac <handle_cciss+0xa0>
  440550:	ldr	x4, [sp, #48]
  440554:	add	x1, sp, #0x2c
  440558:	add	x0, sp, #0x28
  44055c:	mov	x3, x1
  440560:	mov	x2, x0
  440564:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440568:	add	x1, x0, #0x5e8
  44056c:	mov	x0, x4
  440570:	bl	40add0 <__isoc99_sscanf@plt>
  440574:	cmp	w0, #0x2
  440578:	b.eq	440584 <handle_cciss+0x78>  // b.none
  44057c:	mov	x0, #0x0                   	// #0
  440580:	b	4405ac <handle_cciss+0xa0>
  440584:	ldr	w0, [sp, #44]
  440588:	mov	w2, w0
  44058c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440590:	add	x1, x0, #0x5f8
  440594:	ldr	x0, [sp, #16]
  440598:	bl	43eab8 <path_prepend>
  44059c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4405a0:	add	x1, x0, #0x608
  4405a4:	ldr	x0, [sp, #24]
  4405a8:	bl	43ed6c <skip_subsystem>
  4405ac:	mov	x1, x0
  4405b0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4405b4:	ldr	x0, [x0, #4032]
  4405b8:	ldr	x2, [sp, #56]
  4405bc:	ldr	x0, [x0]
  4405c0:	eor	x0, x2, x0
  4405c4:	cmp	x0, #0x0
  4405c8:	b.eq	4405d0 <handle_cciss+0xc4>  // b.none
  4405cc:	bl	40b280 <__stack_chk_fail@plt>
  4405d0:	mov	x0, x1
  4405d4:	ldp	x29, x30, [sp], #64
  4405d8:	ret

00000000004405dc <handle_scsi_tape>:
  4405dc:	stp	x29, x30, [sp, #-48]!
  4405e0:	mov	x29, sp
  4405e4:	str	x0, [sp, #24]
  4405e8:	str	x1, [sp, #16]
  4405ec:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4405f0:	ldr	x0, [x0, #4032]
  4405f4:	ldr	x1, [x0]
  4405f8:	str	x1, [sp, #40]
  4405fc:	mov	x1, #0x0                   	// #0
  440600:	ldr	x0, [sp, #16]
  440604:	ldr	x0, [x0]
  440608:	cmp	x0, #0x0
  44060c:	b.ne	4406f0 <handle_scsi_tape+0x114>  // b.any
  440610:	add	x0, sp, #0x20
  440614:	mov	x1, x0
  440618:	ldr	x0, [sp, #24]
  44061c:	bl	40aba0 <sd_device_get_sysname@plt>
  440620:	cmp	w0, #0x0
  440624:	b.lt	4406f8 <handle_scsi_tape+0x11c>  // b.tstop
  440628:	ldr	x2, [sp, #32]
  44062c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440630:	add	x1, x0, #0x610
  440634:	mov	x0, x2
  440638:	bl	43ea00 <startswith>
  44063c:	cmp	x0, #0x0
  440640:	b.eq	44068c <handle_scsi_tape+0xb0>  // b.none
  440644:	ldr	x0, [sp, #32]
  440648:	add	x0, x0, #0x3
  44064c:	ldrb	w0, [x0]
  440650:	mov	w1, w0
  440654:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440658:	add	x0, x0, #0x618
  44065c:	bl	40b850 <strchr@plt>
  440660:	cmp	x0, #0x0
  440664:	b.eq	44068c <handle_scsi_tape+0xb0>  // b.none
  440668:	ldr	x0, [sp, #32]
  44066c:	add	x0, x0, #0x3
  440670:	ldrb	w0, [x0]
  440674:	mov	w2, w0
  440678:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44067c:	add	x1, x0, #0x620
  440680:	ldr	x0, [sp, #16]
  440684:	bl	43eab8 <path_prepend>
  440688:	b	4406fc <handle_scsi_tape+0x120>
  44068c:	ldr	x2, [sp, #32]
  440690:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440694:	add	x1, x0, #0x628
  440698:	mov	x0, x2
  44069c:	bl	43ea00 <startswith>
  4406a0:	cmp	x0, #0x0
  4406a4:	b.eq	4406fc <handle_scsi_tape+0x120>  // b.none
  4406a8:	ldr	x0, [sp, #32]
  4406ac:	add	x0, x0, #0x2
  4406b0:	ldrb	w0, [x0]
  4406b4:	mov	w1, w0
  4406b8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4406bc:	add	x0, x0, #0x618
  4406c0:	bl	40b850 <strchr@plt>
  4406c4:	cmp	x0, #0x0
  4406c8:	b.eq	4406fc <handle_scsi_tape+0x120>  // b.none
  4406cc:	ldr	x0, [sp, #32]
  4406d0:	add	x0, x0, #0x2
  4406d4:	ldrb	w0, [x0]
  4406d8:	mov	w2, w0
  4406dc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4406e0:	add	x1, x0, #0x630
  4406e4:	ldr	x0, [sp, #16]
  4406e8:	bl	43eab8 <path_prepend>
  4406ec:	b	4406fc <handle_scsi_tape+0x120>
  4406f0:	nop
  4406f4:	b	4406fc <handle_scsi_tape+0x120>
  4406f8:	nop
  4406fc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  440700:	ldr	x0, [x0, #4032]
  440704:	ldr	x1, [sp, #40]
  440708:	ldr	x0, [x0]
  44070c:	eor	x0, x1, x0
  440710:	cmp	x0, #0x0
  440714:	b.eq	44071c <handle_scsi_tape+0x140>  // b.none
  440718:	bl	40b280 <__stack_chk_fail@plt>
  44071c:	ldp	x29, x30, [sp], #48
  440720:	ret

0000000000440724 <handle_usb>:
  440724:	stp	x29, x30, [sp, #-96]!
  440728:	mov	x29, sp
  44072c:	str	x0, [sp, #24]
  440730:	str	x1, [sp, #16]
  440734:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  440738:	ldr	x0, [x0, #4032]
  44073c:	ldr	x1, [x0]
  440740:	str	x1, [sp, #88]
  440744:	mov	x1, #0x0                   	// #0
  440748:	add	x0, sp, #0x28
  44074c:	mov	x1, x0
  440750:	ldr	x0, [sp, #24]
  440754:	bl	40a460 <sd_device_get_devtype@plt>
  440758:	cmp	w0, #0x0
  44075c:	b.ge	440768 <handle_usb+0x44>  // b.tcont
  440760:	ldr	x0, [sp, #24]
  440764:	b	440818 <handle_usb+0xf4>
  440768:	adrp	x0, 48d000 <arg_resolve_name_timing>
  44076c:	add	x0, x0, #0x120
  440770:	add	x2, sp, #0x40
  440774:	mov	x3, x0
  440778:	ldp	x0, x1, [x3]
  44077c:	stp	x0, x1, [x2]
  440780:	ldr	x0, [x3, #16]
  440784:	str	x0, [x2, #16]
  440788:	ldr	x1, [sp, #40]
  44078c:	add	x0, sp, #0x40
  440790:	bl	40b450 <strv_find@plt>
  440794:	cmp	x0, #0x0
  440798:	b.ne	4407a4 <handle_usb+0x80>  // b.any
  44079c:	ldr	x0, [sp, #24]
  4407a0:	b	440818 <handle_usb+0xf4>
  4407a4:	add	x0, sp, #0x30
  4407a8:	mov	x1, x0
  4407ac:	ldr	x0, [sp, #24]
  4407b0:	bl	40aba0 <sd_device_get_sysname@plt>
  4407b4:	cmp	w0, #0x0
  4407b8:	b.ge	4407c4 <handle_usb+0xa0>  // b.tcont
  4407bc:	ldr	x0, [sp, #24]
  4407c0:	b	440818 <handle_usb+0xf4>
  4407c4:	ldr	x0, [sp, #48]
  4407c8:	mov	w1, #0x2d                  	// #45
  4407cc:	bl	40b850 <strchr@plt>
  4407d0:	str	x0, [sp, #56]
  4407d4:	ldr	x0, [sp, #56]
  4407d8:	cmp	x0, #0x0
  4407dc:	b.ne	4407e8 <handle_usb+0xc4>  // b.any
  4407e0:	ldr	x0, [sp, #24]
  4407e4:	b	440818 <handle_usb+0xf4>
  4407e8:	ldr	x0, [sp, #56]
  4407ec:	add	x0, x0, #0x1
  4407f0:	str	x0, [sp, #56]
  4407f4:	ldr	x2, [sp, #56]
  4407f8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4407fc:	add	x1, x0, #0x638
  440800:	ldr	x0, [sp, #16]
  440804:	bl	43eab8 <path_prepend>
  440808:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44080c:	add	x1, x0, #0x648
  440810:	ldr	x0, [sp, #24]
  440814:	bl	43ed6c <skip_subsystem>
  440818:	mov	x1, x0
  44081c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  440820:	ldr	x0, [x0, #4032]
  440824:	ldr	x2, [sp, #88]
  440828:	ldr	x0, [x0]
  44082c:	eor	x0, x2, x0
  440830:	cmp	x0, #0x0
  440834:	b.eq	44083c <handle_usb+0x118>  // b.none
  440838:	bl	40b280 <__stack_chk_fail@plt>
  44083c:	mov	x0, x1
  440840:	ldp	x29, x30, [sp], #96
  440844:	ret

0000000000440848 <handle_bcma>:
  440848:	stp	x29, x30, [sp, #-64]!
  44084c:	mov	x29, sp
  440850:	str	x0, [sp, #24]
  440854:	str	x1, [sp, #16]
  440858:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44085c:	ldr	x0, [x0, #4032]
  440860:	ldr	x1, [x0]
  440864:	str	x1, [sp, #56]
  440868:	mov	x1, #0x0                   	// #0
  44086c:	add	x0, sp, #0x30
  440870:	mov	x1, x0
  440874:	ldr	x0, [sp, #24]
  440878:	bl	40aba0 <sd_device_get_sysname@plt>
  44087c:	cmp	w0, #0x0
  440880:	b.ge	44088c <handle_bcma+0x44>  // b.tcont
  440884:	mov	x0, #0x0                   	// #0
  440888:	b	4408d4 <handle_bcma+0x8c>
  44088c:	ldr	x3, [sp, #48]
  440890:	add	x0, sp, #0x2c
  440894:	mov	x2, x0
  440898:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44089c:	add	x1, x0, #0x650
  4408a0:	mov	x0, x3
  4408a4:	bl	40add0 <__isoc99_sscanf@plt>
  4408a8:	cmp	w0, #0x1
  4408ac:	b.eq	4408b8 <handle_bcma+0x70>  // b.none
  4408b0:	mov	x0, #0x0                   	// #0
  4408b4:	b	4408d4 <handle_bcma+0x8c>
  4408b8:	ldr	w0, [sp, #44]
  4408bc:	mov	w2, w0
  4408c0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4408c4:	add	x1, x0, #0x660
  4408c8:	ldr	x0, [sp, #16]
  4408cc:	bl	43eab8 <path_prepend>
  4408d0:	ldr	x0, [sp, #24]
  4408d4:	mov	x1, x0
  4408d8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4408dc:	ldr	x0, [x0, #4032]
  4408e0:	ldr	x2, [sp, #56]
  4408e4:	ldr	x0, [x0]
  4408e8:	eor	x0, x2, x0
  4408ec:	cmp	x0, #0x0
  4408f0:	b.eq	4408f8 <handle_bcma+0xb0>  // b.none
  4408f4:	bl	40b280 <__stack_chk_fail@plt>
  4408f8:	mov	x0, x1
  4408fc:	ldp	x29, x30, [sp], #64
  440900:	ret

0000000000440904 <handle_ap>:
  440904:	stp	x29, x30, [sp, #-64]!
  440908:	mov	x29, sp
  44090c:	str	x0, [sp, #24]
  440910:	str	x1, [sp, #16]
  440914:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  440918:	ldr	x0, [x0, #4032]
  44091c:	ldr	x1, [x0]
  440920:	str	x1, [sp, #56]
  440924:	mov	x1, #0x0                   	// #0
  440928:	ldr	x0, [sp, #24]
  44092c:	cmp	x0, #0x0
  440930:	cset	w0, eq  // eq = none
  440934:	and	w0, w0, #0xff
  440938:	and	x0, x0, #0xff
  44093c:	cmp	x0, #0x0
  440940:	b.eq	44096c <handle_ap+0x68>  // b.none
  440944:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440948:	add	x1, x0, #0x2a3
  44094c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440950:	add	x4, x0, #0x8a0
  440954:	mov	w3, #0x1f8                 	// #504
  440958:	mov	x2, x1
  44095c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440960:	add	x1, x0, #0x308
  440964:	mov	w0, #0x1                   	// #1
  440968:	bl	40abb0 <log_assert_failed_realm@plt>
  44096c:	ldr	x0, [sp, #16]
  440970:	cmp	x0, #0x0
  440974:	cset	w0, eq  // eq = none
  440978:	and	w0, w0, #0xff
  44097c:	and	x0, x0, #0xff
  440980:	cmp	x0, #0x0
  440984:	b.eq	4409b0 <handle_ap+0xac>  // b.none
  440988:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44098c:	add	x1, x0, #0x2a3
  440990:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440994:	add	x4, x0, #0x8a0
  440998:	mov	w3, #0x1f9                 	// #505
  44099c:	mov	x2, x1
  4409a0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4409a4:	add	x1, x0, #0x310
  4409a8:	mov	w0, #0x1                   	// #1
  4409ac:	bl	40abb0 <log_assert_failed_realm@plt>
  4409b0:	add	x0, sp, #0x20
  4409b4:	mov	x2, x0
  4409b8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4409bc:	add	x1, x0, #0x668
  4409c0:	ldr	x0, [sp, #24]
  4409c4:	bl	40b870 <sd_device_get_sysattr_value@plt>
  4409c8:	cmp	w0, #0x0
  4409cc:	b.lt	440a14 <handle_ap+0x110>  // b.tstop
  4409d0:	add	x0, sp, #0x28
  4409d4:	mov	x2, x0
  4409d8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4409dc:	add	x1, x0, #0x670
  4409e0:	ldr	x0, [sp, #24]
  4409e4:	bl	40b870 <sd_device_get_sysattr_value@plt>
  4409e8:	cmp	w0, #0x0
  4409ec:	b.lt	440a14 <handle_ap+0x110>  // b.tstop
  4409f0:	ldr	x0, [sp, #32]
  4409f4:	ldr	x1, [sp, #40]
  4409f8:	mov	x3, x1
  4409fc:	mov	x2, x0
  440a00:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440a04:	add	x1, x0, #0x680
  440a08:	ldr	x0, [sp, #16]
  440a0c:	bl	43eab8 <path_prepend>
  440a10:	b	440a44 <handle_ap+0x140>
  440a14:	add	x0, sp, #0x30
  440a18:	mov	x1, x0
  440a1c:	ldr	x0, [sp, #24]
  440a20:	bl	40aba0 <sd_device_get_sysname@plt>
  440a24:	cmp	w0, #0x0
  440a28:	b.lt	440a44 <handle_ap+0x140>  // b.tstop
  440a2c:	ldr	x0, [sp, #48]
  440a30:	mov	x2, x0
  440a34:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440a38:	add	x1, x0, #0x690
  440a3c:	ldr	x0, [sp, #16]
  440a40:	bl	43eab8 <path_prepend>
  440a44:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440a48:	add	x1, x0, #0x698
  440a4c:	ldr	x0, [sp, #24]
  440a50:	bl	43ed6c <skip_subsystem>
  440a54:	mov	x1, x0
  440a58:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  440a5c:	ldr	x0, [x0, #4032]
  440a60:	ldr	x2, [sp, #56]
  440a64:	ldr	x0, [x0]
  440a68:	eor	x0, x2, x0
  440a6c:	cmp	x0, #0x0
  440a70:	b.eq	440a78 <handle_ap+0x174>  // b.none
  440a74:	bl	40b280 <__stack_chk_fail@plt>
  440a78:	mov	x0, x1
  440a7c:	ldp	x29, x30, [sp], #64
  440a80:	ret

0000000000440a84 <builtin_path_id>:
  440a84:	sub	sp, sp, #0x290
  440a88:	stp	x29, x30, [sp]
  440a8c:	mov	x29, sp
  440a90:	str	x19, [sp, #16]
  440a94:	str	x0, [sp, #56]
  440a98:	str	w1, [sp, #52]
  440a9c:	str	x2, [sp, #40]
  440aa0:	strb	w3, [sp, #51]
  440aa4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  440aa8:	ldr	x0, [x0, #4032]
  440aac:	ldr	x1, [x0]
  440ab0:	str	x1, [sp, #648]
  440ab4:	mov	x1, #0x0                   	// #0
  440ab8:	str	xzr, [sp, #88]
  440abc:	strb	wzr, [sp, #79]
  440ac0:	strb	wzr, [sp, #78]
  440ac4:	ldr	x0, [sp, #56]
  440ac8:	cmp	x0, #0x0
  440acc:	cset	w0, eq  // eq = none
  440ad0:	and	w0, w0, #0xff
  440ad4:	and	x0, x0, #0xff
  440ad8:	cmp	x0, #0x0
  440adc:	b.eq	440b08 <builtin_path_id+0x84>  // b.none
  440ae0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440ae4:	add	x1, x0, #0x2a3
  440ae8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440aec:	add	x4, x0, #0x8b0
  440af0:	mov	w3, #0x20f                 	// #527
  440af4:	mov	x2, x1
  440af8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440afc:	add	x1, x0, #0x2f8
  440b00:	mov	w0, #0x1                   	// #1
  440b04:	bl	40abb0 <log_assert_failed_realm@plt>
  440b08:	ldr	x0, [sp, #56]
  440b0c:	str	x0, [sp, #80]
  440b10:	b	4410e8 <builtin_path_id+0x664>
  440b14:	ldr	x0, [sp, #80]
  440b18:	add	x1, sp, #0x60
  440b1c:	bl	40af80 <sd_device_get_subsystem@plt>
  440b20:	cmp	w0, #0x0
  440b24:	b.lt	4410c8 <builtin_path_id+0x644>  // b.tstop
  440b28:	ldr	x0, [sp, #80]
  440b2c:	add	x1, sp, #0x68
  440b30:	bl	40aba0 <sd_device_get_sysname@plt>
  440b34:	cmp	w0, #0x0
  440b38:	b.lt	4410c8 <builtin_path_id+0x644>  // b.tstop
  440b3c:	ldr	x2, [sp, #96]
  440b40:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440b44:	add	x1, x0, #0x6a0
  440b48:	mov	x0, x2
  440b4c:	bl	40b710 <strcmp@plt>
  440b50:	cmp	w0, #0x0
  440b54:	b.ne	440b68 <builtin_path_id+0xe4>  // b.any
  440b58:	ldr	x0, [sp, #80]
  440b5c:	add	x1, sp, #0x58
  440b60:	bl	4405dc <handle_scsi_tape>
  440b64:	b	4410c8 <builtin_path_id+0x644>
  440b68:	ldr	x2, [sp, #96]
  440b6c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440b70:	add	x1, x0, #0x328
  440b74:	mov	x0, x2
  440b78:	bl	40b710 <strcmp@plt>
  440b7c:	cmp	w0, #0x0
  440b80:	b.ne	440ba4 <builtin_path_id+0x120>  // b.any
  440b84:	ldr	x0, [sp, #80]
  440b88:	add	x2, sp, #0x4e
  440b8c:	add	x1, sp, #0x58
  440b90:	bl	4402c0 <handle_scsi>
  440b94:	str	x0, [sp, #80]
  440b98:	mov	w0, #0x1                   	// #1
  440b9c:	strb	w0, [sp, #79]
  440ba0:	b	4410c8 <builtin_path_id+0x644>
  440ba4:	ldr	x2, [sp, #96]
  440ba8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440bac:	add	x1, x0, #0x608
  440bb0:	mov	x0, x2
  440bb4:	bl	40b710 <strcmp@plt>
  440bb8:	cmp	w0, #0x0
  440bbc:	b.ne	440bdc <builtin_path_id+0x158>  // b.any
  440bc0:	ldr	x0, [sp, #80]
  440bc4:	add	x1, sp, #0x58
  440bc8:	bl	44050c <handle_cciss>
  440bcc:	str	x0, [sp, #80]
  440bd0:	mov	w0, #0x1                   	// #1
  440bd4:	strb	w0, [sp, #79]
  440bd8:	b	4410c8 <builtin_path_id+0x644>
  440bdc:	ldr	x2, [sp, #96]
  440be0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440be4:	add	x1, x0, #0x648
  440be8:	mov	x0, x2
  440bec:	bl	40b710 <strcmp@plt>
  440bf0:	cmp	w0, #0x0
  440bf4:	b.ne	440c14 <builtin_path_id+0x190>  // b.any
  440bf8:	ldr	x0, [sp, #80]
  440bfc:	add	x1, sp, #0x58
  440c00:	bl	440724 <handle_usb>
  440c04:	str	x0, [sp, #80]
  440c08:	mov	w0, #0x1                   	// #1
  440c0c:	strb	w0, [sp, #79]
  440c10:	b	4410c8 <builtin_path_id+0x644>
  440c14:	ldr	x2, [sp, #96]
  440c18:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440c1c:	add	x1, x0, #0x6b0
  440c20:	mov	x0, x2
  440c24:	bl	40b710 <strcmp@plt>
  440c28:	cmp	w0, #0x0
  440c2c:	b.ne	440c4c <builtin_path_id+0x1c8>  // b.any
  440c30:	ldr	x0, [sp, #80]
  440c34:	add	x1, sp, #0x58
  440c38:	bl	440848 <handle_bcma>
  440c3c:	str	x0, [sp, #80]
  440c40:	mov	w0, #0x1                   	// #1
  440c44:	strb	w0, [sp, #79]
  440c48:	b	4410c8 <builtin_path_id+0x644>
  440c4c:	ldr	x2, [sp, #96]
  440c50:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440c54:	add	x1, x0, #0x6b8
  440c58:	mov	x0, x2
  440c5c:	bl	40b710 <strcmp@plt>
  440c60:	cmp	w0, #0x0
  440c64:	b.ne	440cc0 <builtin_path_id+0x23c>  // b.any
  440c68:	ldr	x0, [sp, #80]
  440c6c:	add	x1, sp, #0x70
  440c70:	bl	40bc60 <sd_device_get_sysnum@plt>
  440c74:	cmp	w0, #0x0
  440c78:	b.lt	4410c8 <builtin_path_id+0x644>  // b.tstop
  440c7c:	ldr	x0, [sp, #112]
  440c80:	cmp	x0, #0x0
  440c84:	b.eq	4410c8 <builtin_path_id+0x644>  // b.none
  440c88:	ldr	x0, [sp, #112]
  440c8c:	add	x3, sp, #0x58
  440c90:	mov	x2, x0
  440c94:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440c98:	add	x1, x0, #0x6c0
  440c9c:	mov	x0, x3
  440ca0:	bl	43eab8 <path_prepend>
  440ca4:	ldr	x2, [sp, #80]
  440ca8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440cac:	add	x1, x0, #0x6b8
  440cb0:	mov	x0, x2
  440cb4:	bl	43ed6c <skip_subsystem>
  440cb8:	str	x0, [sp, #80]
  440cbc:	b	4410c8 <builtin_path_id+0x644>
  440cc0:	ldr	x2, [sp, #96]
  440cc4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440cc8:	add	x1, x0, #0x6d0
  440ccc:	mov	x0, x2
  440cd0:	bl	40b710 <strcmp@plt>
  440cd4:	cmp	w0, #0x0
  440cd8:	b.ne	440d1c <builtin_path_id+0x298>  // b.any
  440cdc:	ldr	x0, [sp, #104]
  440ce0:	add	x3, sp, #0x58
  440ce4:	mov	x2, x0
  440ce8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440cec:	add	x1, x0, #0x6d8
  440cf0:	mov	x0, x3
  440cf4:	bl	43eab8 <path_prepend>
  440cf8:	ldr	x2, [sp, #80]
  440cfc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440d00:	add	x1, x0, #0x6d0
  440d04:	mov	x0, x2
  440d08:	bl	43ed6c <skip_subsystem>
  440d0c:	str	x0, [sp, #80]
  440d10:	mov	w0, #0x1                   	// #1
  440d14:	strb	w0, [sp, #78]
  440d18:	b	4410c8 <builtin_path_id+0x644>
  440d1c:	ldr	x2, [sp, #96]
  440d20:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440d24:	add	x1, x0, #0x6e0
  440d28:	mov	x0, x2
  440d2c:	bl	40b710 <strcmp@plt>
  440d30:	cmp	w0, #0x0
  440d34:	b.ne	440d80 <builtin_path_id+0x2fc>  // b.any
  440d38:	ldr	x0, [sp, #104]
  440d3c:	add	x3, sp, #0x58
  440d40:	mov	x2, x0
  440d44:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440d48:	add	x1, x0, #0x6f0
  440d4c:	mov	x0, x3
  440d50:	bl	43eab8 <path_prepend>
  440d54:	ldr	x2, [sp, #80]
  440d58:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440d5c:	add	x1, x0, #0x6e0
  440d60:	mov	x0, x2
  440d64:	bl	43ed6c <skip_subsystem>
  440d68:	str	x0, [sp, #80]
  440d6c:	mov	w0, #0x1                   	// #1
  440d70:	strb	w0, [sp, #79]
  440d74:	mov	w0, #0x1                   	// #1
  440d78:	strb	w0, [sp, #78]
  440d7c:	b	4410c8 <builtin_path_id+0x644>
  440d80:	ldr	x2, [sp, #96]
  440d84:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440d88:	add	x1, x0, #0x700
  440d8c:	mov	x0, x2
  440d90:	bl	40b710 <strcmp@plt>
  440d94:	cmp	w0, #0x0
  440d98:	b.ne	440ddc <builtin_path_id+0x358>  // b.any
  440d9c:	ldr	x0, [sp, #104]
  440da0:	add	x3, sp, #0x58
  440da4:	mov	x2, x0
  440da8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440dac:	add	x1, x0, #0x708
  440db0:	mov	x0, x3
  440db4:	bl	43eab8 <path_prepend>
  440db8:	ldr	x2, [sp, #80]
  440dbc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440dc0:	add	x1, x0, #0x700
  440dc4:	mov	x0, x2
  440dc8:	bl	43ed6c <skip_subsystem>
  440dcc:	str	x0, [sp, #80]
  440dd0:	mov	w0, #0x1                   	// #1
  440dd4:	strb	w0, [sp, #78]
  440dd8:	b	4410c8 <builtin_path_id+0x644>
  440ddc:	ldr	x2, [sp, #96]
  440de0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440de4:	add	x1, x0, #0x710
  440de8:	mov	x0, x2
  440dec:	bl	40b710 <strcmp@plt>
  440df0:	cmp	w0, #0x0
  440df4:	b.ne	440e38 <builtin_path_id+0x3b4>  // b.any
  440df8:	ldr	x0, [sp, #104]
  440dfc:	add	x3, sp, #0x58
  440e00:	mov	x2, x0
  440e04:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440e08:	add	x1, x0, #0x718
  440e0c:	mov	x0, x3
  440e10:	bl	43eab8 <path_prepend>
  440e14:	ldr	x2, [sp, #80]
  440e18:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440e1c:	add	x1, x0, #0x710
  440e20:	mov	x0, x2
  440e24:	bl	43ed6c <skip_subsystem>
  440e28:	str	x0, [sp, #80]
  440e2c:	mov	w0, #0x1                   	// #1
  440e30:	strb	w0, [sp, #78]
  440e34:	b	4410c8 <builtin_path_id+0x644>
  440e38:	ldr	x2, [sp, #96]
  440e3c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440e40:	add	x1, x0, #0x720
  440e44:	mov	x0, x2
  440e48:	bl	40b710 <strcmp@plt>
  440e4c:	cmp	w0, #0x0
  440e50:	b.ne	440e78 <builtin_path_id+0x3f4>  // b.any
  440e54:	ldr	x2, [sp, #80]
  440e58:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440e5c:	add	x1, x0, #0x720
  440e60:	mov	x0, x2
  440e64:	bl	43ed6c <skip_subsystem>
  440e68:	str	x0, [sp, #80]
  440e6c:	mov	w0, #0x1                   	// #1
  440e70:	strb	w0, [sp, #79]
  440e74:	b	4410c8 <builtin_path_id+0x644>
  440e78:	ldr	x2, [sp, #96]
  440e7c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440e80:	add	x1, x0, #0x728
  440e84:	mov	x0, x2
  440e88:	bl	40b710 <strcmp@plt>
  440e8c:	cmp	w0, #0x0
  440e90:	b.ne	440edc <builtin_path_id+0x458>  // b.any
  440e94:	ldr	x0, [sp, #104]
  440e98:	add	x3, sp, #0x58
  440e9c:	mov	x2, x0
  440ea0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440ea4:	add	x1, x0, #0x730
  440ea8:	mov	x0, x3
  440eac:	bl	43eab8 <path_prepend>
  440eb0:	ldr	x2, [sp, #80]
  440eb4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440eb8:	add	x1, x0, #0x728
  440ebc:	mov	x0, x2
  440ec0:	bl	43ed6c <skip_subsystem>
  440ec4:	str	x0, [sp, #80]
  440ec8:	mov	w0, #0x1                   	// #1
  440ecc:	strb	w0, [sp, #79]
  440ed0:	mov	w0, #0x1                   	// #1
  440ed4:	strb	w0, [sp, #78]
  440ed8:	b	4410c8 <builtin_path_id+0x644>
  440edc:	ldr	x2, [sp, #96]
  440ee0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440ee4:	add	x1, x0, #0x738
  440ee8:	mov	x0, x2
  440eec:	bl	40b710 <strcmp@plt>
  440ef0:	cmp	w0, #0x0
  440ef4:	b.ne	440f40 <builtin_path_id+0x4bc>  // b.any
  440ef8:	ldr	x0, [sp, #104]
  440efc:	add	x3, sp, #0x58
  440f00:	mov	x2, x0
  440f04:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440f08:	add	x1, x0, #0x740
  440f0c:	mov	x0, x3
  440f10:	bl	43eab8 <path_prepend>
  440f14:	ldr	x2, [sp, #80]
  440f18:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440f1c:	add	x1, x0, #0x738
  440f20:	mov	x0, x2
  440f24:	bl	43ed6c <skip_subsystem>
  440f28:	str	x0, [sp, #80]
  440f2c:	mov	w0, #0x1                   	// #1
  440f30:	strb	w0, [sp, #79]
  440f34:	mov	w0, #0x1                   	// #1
  440f38:	strb	w0, [sp, #78]
  440f3c:	b	4410c8 <builtin_path_id+0x644>
  440f40:	ldr	x2, [sp, #96]
  440f44:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440f48:	add	x1, x0, #0x748
  440f4c:	mov	x0, x2
  440f50:	bl	40b710 <strcmp@plt>
  440f54:	cmp	w0, #0x0
  440f58:	b.ne	440fa4 <builtin_path_id+0x520>  // b.any
  440f5c:	ldr	x0, [sp, #104]
  440f60:	add	x3, sp, #0x58
  440f64:	mov	x2, x0
  440f68:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440f6c:	add	x1, x0, #0x758
  440f70:	mov	x0, x3
  440f74:	bl	43eab8 <path_prepend>
  440f78:	ldr	x2, [sp, #80]
  440f7c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440f80:	add	x1, x0, #0x748
  440f84:	mov	x0, x2
  440f88:	bl	43ed6c <skip_subsystem>
  440f8c:	str	x0, [sp, #80]
  440f90:	mov	w0, #0x1                   	// #1
  440f94:	strb	w0, [sp, #79]
  440f98:	mov	w0, #0x1                   	// #1
  440f9c:	strb	w0, [sp, #78]
  440fa0:	b	4410c8 <builtin_path_id+0x644>
  440fa4:	ldr	x2, [sp, #96]
  440fa8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440fac:	add	x1, x0, #0x698
  440fb0:	mov	x0, x2
  440fb4:	bl	40b710 <strcmp@plt>
  440fb8:	cmp	w0, #0x0
  440fbc:	b.ne	440fe4 <builtin_path_id+0x560>  // b.any
  440fc0:	ldr	x0, [sp, #80]
  440fc4:	add	x1, sp, #0x58
  440fc8:	bl	440904 <handle_ap>
  440fcc:	str	x0, [sp, #80]
  440fd0:	mov	w0, #0x1                   	// #1
  440fd4:	strb	w0, [sp, #79]
  440fd8:	mov	w0, #0x1                   	// #1
  440fdc:	strb	w0, [sp, #78]
  440fe0:	b	4410c8 <builtin_path_id+0x644>
  440fe4:	ldr	x2, [sp, #96]
  440fe8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  440fec:	add	x1, x0, #0x768
  440ff0:	mov	x0, x2
  440ff4:	bl	40b710 <strcmp@plt>
  440ff8:	cmp	w0, #0x0
  440ffc:	b.ne	441048 <builtin_path_id+0x5c4>  // b.any
  441000:	ldr	x0, [sp, #104]
  441004:	add	x3, sp, #0x58
  441008:	mov	x2, x0
  44100c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441010:	add	x1, x0, #0x770
  441014:	mov	x0, x3
  441018:	bl	43eab8 <path_prepend>
  44101c:	ldr	x2, [sp, #80]
  441020:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441024:	add	x1, x0, #0x768
  441028:	mov	x0, x2
  44102c:	bl	43ed6c <skip_subsystem>
  441030:	str	x0, [sp, #80]
  441034:	mov	w0, #0x1                   	// #1
  441038:	strb	w0, [sp, #79]
  44103c:	mov	w0, #0x1                   	// #1
  441040:	strb	w0, [sp, #78]
  441044:	b	4410c8 <builtin_path_id+0x644>
  441048:	ldr	x2, [sp, #96]
  44104c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441050:	add	x1, x0, #0x778
  441054:	mov	x0, x2
  441058:	bl	40b710 <strcmp@plt>
  44105c:	cmp	w0, #0x0
  441060:	b.ne	4410c8 <builtin_path_id+0x644>  // b.any
  441064:	add	x0, sp, #0x70
  441068:	mov	x2, x0
  44106c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441070:	add	x1, x0, #0x780
  441074:	ldr	x0, [sp, #56]
  441078:	bl	40b870 <sd_device_get_sysattr_value@plt>
  44107c:	cmp	w0, #0x0
  441080:	b.lt	4410c8 <builtin_path_id+0x644>  // b.tstop
  441084:	ldr	x0, [sp, #112]
  441088:	add	x3, sp, #0x58
  44108c:	mov	x2, x0
  441090:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441094:	add	x1, x0, #0x788
  441098:	mov	x0, x3
  44109c:	bl	43eab8 <path_prepend>
  4410a0:	ldr	x2, [sp, #80]
  4410a4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4410a8:	add	x1, x0, #0x778
  4410ac:	mov	x0, x2
  4410b0:	bl	43ed6c <skip_subsystem>
  4410b4:	str	x0, [sp, #80]
  4410b8:	mov	w0, #0x1                   	// #1
  4410bc:	strb	w0, [sp, #78]
  4410c0:	mov	w0, #0x1                   	// #1
  4410c4:	strb	w0, [sp, #79]
  4410c8:	ldr	x0, [sp, #80]
  4410cc:	cmp	x0, #0x0
  4410d0:	b.eq	4410f8 <builtin_path_id+0x674>  // b.none
  4410d4:	ldr	x0, [sp, #80]
  4410d8:	add	x1, sp, #0x50
  4410dc:	bl	40be60 <sd_device_get_parent@plt>
  4410e0:	cmp	w0, #0x0
  4410e4:	b.lt	441100 <builtin_path_id+0x67c>  // b.tstop
  4410e8:	ldr	x0, [sp, #80]
  4410ec:	cmp	x0, #0x0
  4410f0:	b.ne	440b14 <builtin_path_id+0x90>  // b.any
  4410f4:	b	441104 <builtin_path_id+0x680>
  4410f8:	nop
  4410fc:	b	441104 <builtin_path_id+0x680>
  441100:	nop
  441104:	ldr	x0, [sp, #88]
  441108:	cmp	x0, #0x0
  44110c:	b.ne	441118 <builtin_path_id+0x694>  // b.any
  441110:	mov	w19, #0xfffffffe            	// #-2
  441114:	b	441308 <builtin_path_id+0x884>
  441118:	ldrb	w0, [sp, #78]
  44111c:	eor	w0, w0, #0x1
  441120:	and	w0, w0, #0xff
  441124:	cmp	w0, #0x0
  441128:	b.eq	441134 <builtin_path_id+0x6b0>  // b.none
  44112c:	mov	w19, #0xfffffffe            	// #-2
  441130:	b	441308 <builtin_path_id+0x884>
  441134:	add	x0, sp, #0x70
  441138:	mov	x1, x0
  44113c:	ldr	x0, [sp, #56]
  441140:	bl	40af80 <sd_device_get_subsystem@plt>
  441144:	cmp	w0, #0x0
  441148:	b.lt	441184 <builtin_path_id+0x700>  // b.tstop
  44114c:	ldr	x2, [sp, #112]
  441150:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441154:	add	x1, x0, #0x790
  441158:	mov	x0, x2
  44115c:	bl	40b710 <strcmp@plt>
  441160:	cmp	w0, #0x0
  441164:	b.ne	441184 <builtin_path_id+0x700>  // b.any
  441168:	ldrb	w0, [sp, #79]
  44116c:	eor	w0, w0, #0x1
  441170:	and	w0, w0, #0xff
  441174:	cmp	w0, #0x0
  441178:	b.eq	441184 <builtin_path_id+0x700>  // b.none
  44117c:	mov	w19, #0xfffffffe            	// #-2
  441180:	b	441308 <builtin_path_id+0x884>
  441184:	ldr	x0, [sp, #88]
  441188:	str	x0, [sp, #128]
  44118c:	str	xzr, [sp, #120]
  441190:	b	44127c <builtin_path_id+0x7f8>
  441194:	ldr	x0, [sp, #128]
  441198:	ldrb	w0, [x0]
  44119c:	cmp	w0, #0x2f
  4411a0:	b.ls	4411b4 <builtin_path_id+0x730>  // b.plast
  4411a4:	ldr	x0, [sp, #128]
  4411a8:	ldrb	w0, [x0]
  4411ac:	cmp	w0, #0x39
  4411b0:	b.ls	441204 <builtin_path_id+0x780>  // b.plast
  4411b4:	ldr	x0, [sp, #128]
  4411b8:	ldrb	w0, [x0]
  4411bc:	cmp	w0, #0x40
  4411c0:	b.ls	4411d4 <builtin_path_id+0x750>  // b.plast
  4411c4:	ldr	x0, [sp, #128]
  4411c8:	ldrb	w0, [x0]
  4411cc:	cmp	w0, #0x5a
  4411d0:	b.ls	441204 <builtin_path_id+0x780>  // b.plast
  4411d4:	ldr	x0, [sp, #128]
  4411d8:	ldrb	w0, [x0]
  4411dc:	cmp	w0, #0x60
  4411e0:	b.ls	4411f4 <builtin_path_id+0x770>  // b.plast
  4411e4:	ldr	x0, [sp, #128]
  4411e8:	ldrb	w0, [x0]
  4411ec:	cmp	w0, #0x7a
  4411f0:	b.ls	441204 <builtin_path_id+0x780>  // b.plast
  4411f4:	ldr	x0, [sp, #128]
  4411f8:	ldrb	w0, [x0]
  4411fc:	cmp	w0, #0x2d
  441200:	b.ne	441224 <builtin_path_id+0x7a0>  // b.any
  441204:	ldr	x0, [sp, #120]
  441208:	add	x1, x0, #0x1
  44120c:	str	x1, [sp, #120]
  441210:	ldr	x1, [sp, #128]
  441214:	ldrb	w2, [x1]
  441218:	add	x1, sp, #0x88
  44121c:	strb	w2, [x1, x0]
  441220:	b	441270 <builtin_path_id+0x7ec>
  441224:	ldr	x0, [sp, #120]
  441228:	cmp	x0, #0x0
  44122c:	b.eq	441264 <builtin_path_id+0x7e0>  // b.none
  441230:	ldr	x0, [sp, #120]
  441234:	sub	x0, x0, #0x1
  441238:	add	x1, sp, #0x88
  44123c:	ldrb	w0, [x1, x0]
  441240:	cmp	w0, #0x5f
  441244:	b.eq	44126c <builtin_path_id+0x7e8>  // b.none
  441248:	ldr	x0, [sp, #120]
  44124c:	add	x1, x0, #0x1
  441250:	str	x1, [sp, #120]
  441254:	add	x1, sp, #0x88
  441258:	mov	w2, #0x5f                  	// #95
  44125c:	strb	w2, [x1, x0]
  441260:	b	441270 <builtin_path_id+0x7ec>
  441264:	nop
  441268:	b	441270 <builtin_path_id+0x7ec>
  44126c:	nop
  441270:	ldr	x0, [sp, #128]
  441274:	add	x0, x0, #0x1
  441278:	str	x0, [sp, #128]
  44127c:	ldr	x0, [sp, #128]
  441280:	ldrb	w0, [x0]
  441284:	cmp	w0, #0x0
  441288:	b.ne	441194 <builtin_path_id+0x710>  // b.any
  44128c:	b	44129c <builtin_path_id+0x818>
  441290:	ldr	x0, [sp, #120]
  441294:	sub	x0, x0, #0x1
  441298:	str	x0, [sp, #120]
  44129c:	ldr	x0, [sp, #120]
  4412a0:	cmp	x0, #0x0
  4412a4:	b.eq	4412c0 <builtin_path_id+0x83c>  // b.none
  4412a8:	ldr	x0, [sp, #120]
  4412ac:	sub	x0, x0, #0x1
  4412b0:	add	x1, sp, #0x88
  4412b4:	ldrb	w0, [x1, x0]
  4412b8:	cmp	w0, #0x5f
  4412bc:	b.eq	441290 <builtin_path_id+0x80c>  // b.none
  4412c0:	ldr	x0, [sp, #120]
  4412c4:	add	x1, sp, #0x88
  4412c8:	strb	wzr, [x1, x0]
  4412cc:	ldr	x0, [sp, #88]
  4412d0:	mov	x3, x0
  4412d4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4412d8:	add	x2, x0, #0x798
  4412dc:	ldrb	w1, [sp, #51]
  4412e0:	ldr	x0, [sp, #56]
  4412e4:	bl	436504 <udev_builtin_add_property>
  4412e8:	add	x0, sp, #0x88
  4412ec:	mov	x3, x0
  4412f0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4412f4:	add	x2, x0, #0x7a0
  4412f8:	ldrb	w1, [sp, #51]
  4412fc:	ldr	x0, [sp, #56]
  441300:	bl	436504 <udev_builtin_add_property>
  441304:	mov	w19, #0x0                   	// #0
  441308:	add	x0, sp, #0x58
  44130c:	bl	43e960 <freep>
  441310:	mov	w1, w19
  441314:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  441318:	ldr	x0, [x0, #4032]
  44131c:	ldr	x2, [sp, #648]
  441320:	ldr	x0, [x0]
  441324:	eor	x0, x2, x0
  441328:	cmp	x0, #0x0
  44132c:	b.eq	441334 <builtin_path_id+0x8b0>  // b.none
  441330:	bl	40b280 <__stack_chk_fail@plt>
  441334:	mov	w0, w1
  441338:	ldr	x19, [sp, #16]
  44133c:	ldp	x29, x30, [sp]
  441340:	add	sp, sp, #0x290
  441344:	ret

0000000000441348 <size_multiply_overflow>:
  441348:	sub	sp, sp, #0x10
  44134c:	str	x0, [sp, #8]
  441350:	str	x1, [sp]
  441354:	ldr	x0, [sp]
  441358:	cmp	x0, #0x0
  44135c:	cset	w0, ne  // ne = any
  441360:	and	w0, w0, #0xff
  441364:	and	x0, x0, #0xff
  441368:	cmp	x0, #0x0
  44136c:	b.eq	4413b0 <size_multiply_overflow+0x68>  // b.none
  441370:	mov	x2, #0x0                   	// #0
  441374:	ldr	x1, [sp, #8]
  441378:	ldr	x0, [sp]
  44137c:	umulh	x0, x1, x0
  441380:	cmp	x0, #0x0
  441384:	b.eq	44138c <size_multiply_overflow+0x44>  // b.none
  441388:	mov	x2, #0x1                   	// #1
  44138c:	mov	x0, x2
  441390:	cmp	x0, #0x0
  441394:	cset	w0, ne  // ne = any
  441398:	and	w0, w0, #0xff
  44139c:	and	x0, x0, #0xff
  4413a0:	cmp	x0, #0x0
  4413a4:	b.eq	4413b0 <size_multiply_overflow+0x68>  // b.none
  4413a8:	mov	w0, #0x1                   	// #1
  4413ac:	b	4413b4 <size_multiply_overflow+0x6c>
  4413b0:	mov	w0, #0x0                   	// #0
  4413b4:	and	w0, w0, #0x1
  4413b8:	and	w0, w0, #0xff
  4413bc:	add	sp, sp, #0x10
  4413c0:	ret

00000000004413c4 <closep>:
  4413c4:	stp	x29, x30, [sp, #-32]!
  4413c8:	mov	x29, sp
  4413cc:	str	x0, [sp, #24]
  4413d0:	ldr	x0, [sp, #24]
  4413d4:	ldr	w0, [x0]
  4413d8:	bl	40aad0 <safe_close@plt>
  4413dc:	nop
  4413e0:	ldp	x29, x30, [sp], #32
  4413e4:	ret

00000000004413e8 <isempty>:
  4413e8:	sub	sp, sp, #0x10
  4413ec:	str	x0, [sp, #8]
  4413f0:	ldr	x0, [sp, #8]
  4413f4:	cmp	x0, #0x0
  4413f8:	b.eq	44140c <isempty+0x24>  // b.none
  4413fc:	ldr	x0, [sp, #8]
  441400:	ldrb	w0, [x0]
  441404:	cmp	w0, #0x0
  441408:	b.ne	441414 <isempty+0x2c>  // b.any
  44140c:	mov	w0, #0x1                   	// #1
  441410:	b	441418 <isempty+0x30>
  441414:	mov	w0, #0x0                   	// #0
  441418:	and	w0, w0, #0x1
  44141c:	and	w0, w0, #0xff
  441420:	add	sp, sp, #0x10
  441424:	ret

0000000000441428 <set_usb_iftype>:
  441428:	stp	x29, x30, [sp, #-64]!
  44142c:	mov	x29, sp
  441430:	str	x0, [sp, #40]
  441434:	str	w1, [sp, #36]
  441438:	str	x2, [sp, #24]
  44143c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441440:	add	x0, x0, #0x8c0
  441444:	str	x0, [sp, #56]
  441448:	ldr	w0, [sp, #36]
  44144c:	cmp	w0, #0xff
  441450:	b.eq	441624 <set_usb_iftype+0x1fc>  // b.none
  441454:	ldr	w0, [sp, #36]
  441458:	cmp	w0, #0xff
  44145c:	b.gt	44162c <set_usb_iftype+0x204>
  441460:	ldr	w0, [sp, #36]
  441464:	cmp	w0, #0xfe
  441468:	b.eq	441634 <set_usb_iftype+0x20c>  // b.none
  44146c:	ldr	w0, [sp, #36]
  441470:	cmp	w0, #0xfe
  441474:	b.gt	44162c <set_usb_iftype+0x204>
  441478:	ldr	w0, [sp, #36]
  44147c:	cmp	w0, #0xe0
  441480:	b.eq	44163c <set_usb_iftype+0x214>  // b.none
  441484:	ldr	w0, [sp, #36]
  441488:	cmp	w0, #0xe0
  44148c:	b.gt	44162c <set_usb_iftype+0x204>
  441490:	ldr	w0, [sp, #36]
  441494:	cmp	w0, #0xdc
  441498:	b.eq	441644 <set_usb_iftype+0x21c>  // b.none
  44149c:	ldr	w0, [sp, #36]
  4414a0:	cmp	w0, #0xdc
  4414a4:	b.gt	44162c <set_usb_iftype+0x204>
  4414a8:	ldr	w0, [sp, #36]
  4414ac:	cmp	w0, #0xe
  4414b0:	b.eq	441614 <set_usb_iftype+0x1ec>  // b.none
  4414b4:	ldr	w0, [sp, #36]
  4414b8:	cmp	w0, #0xe
  4414bc:	b.gt	44162c <set_usb_iftype+0x204>
  4414c0:	ldr	w0, [sp, #36]
  4414c4:	cmp	w0, #0xd
  4414c8:	b.eq	44164c <set_usb_iftype+0x224>  // b.none
  4414cc:	ldr	w0, [sp, #36]
  4414d0:	cmp	w0, #0xd
  4414d4:	b.gt	44162c <set_usb_iftype+0x204>
  4414d8:	ldr	w0, [sp, #36]
  4414dc:	cmp	w0, #0xb
  4414e0:	b.eq	441654 <set_usb_iftype+0x22c>  // b.none
  4414e4:	ldr	w0, [sp, #36]
  4414e8:	cmp	w0, #0xb
  4414ec:	b.gt	44162c <set_usb_iftype+0x204>
  4414f0:	ldr	w0, [sp, #36]
  4414f4:	cmp	w0, #0xa
  4414f8:	b.eq	44165c <set_usb_iftype+0x234>  // b.none
  4414fc:	ldr	w0, [sp, #36]
  441500:	cmp	w0, #0xa
  441504:	b.gt	44162c <set_usb_iftype+0x204>
  441508:	ldr	w0, [sp, #36]
  44150c:	cmp	w0, #0x9
  441510:	b.eq	441604 <set_usb_iftype+0x1dc>  // b.none
  441514:	ldr	w0, [sp, #36]
  441518:	cmp	w0, #0x9
  44151c:	b.gt	44162c <set_usb_iftype+0x204>
  441520:	ldr	w0, [sp, #36]
  441524:	cmp	w0, #0x8
  441528:	b.eq	4415f4 <set_usb_iftype+0x1cc>  // b.none
  44152c:	ldr	w0, [sp, #36]
  441530:	cmp	w0, #0x8
  441534:	b.gt	44162c <set_usb_iftype+0x204>
  441538:	ldr	w0, [sp, #36]
  44153c:	cmp	w0, #0x7
  441540:	b.eq	4415e4 <set_usb_iftype+0x1bc>  // b.none
  441544:	ldr	w0, [sp, #36]
  441548:	cmp	w0, #0x7
  44154c:	b.gt	44162c <set_usb_iftype+0x204>
  441550:	ldr	w0, [sp, #36]
  441554:	cmp	w0, #0x6
  441558:	b.eq	4415d4 <set_usb_iftype+0x1ac>  // b.none
  44155c:	ldr	w0, [sp, #36]
  441560:	cmp	w0, #0x6
  441564:	b.gt	44162c <set_usb_iftype+0x204>
  441568:	ldr	w0, [sp, #36]
  44156c:	cmp	w0, #0x5
  441570:	b.eq	441664 <set_usb_iftype+0x23c>  // b.none
  441574:	ldr	w0, [sp, #36]
  441578:	cmp	w0, #0x5
  44157c:	b.gt	44162c <set_usb_iftype+0x204>
  441580:	ldr	w0, [sp, #36]
  441584:	cmp	w0, #0x3
  441588:	b.eq	4415c4 <set_usb_iftype+0x19c>  // b.none
  44158c:	ldr	w0, [sp, #36]
  441590:	cmp	w0, #0x3
  441594:	b.gt	44162c <set_usb_iftype+0x204>
  441598:	ldr	w0, [sp, #36]
  44159c:	cmp	w0, #0x1
  4415a0:	b.eq	4415b4 <set_usb_iftype+0x18c>  // b.none
  4415a4:	ldr	w0, [sp, #36]
  4415a8:	cmp	w0, #0x2
  4415ac:	b.eq	44166c <set_usb_iftype+0x244>  // b.none
  4415b0:	b	44162c <set_usb_iftype+0x204>
  4415b4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4415b8:	add	x0, x0, #0x8c8
  4415bc:	str	x0, [sp, #56]
  4415c0:	b	441670 <set_usb_iftype+0x248>
  4415c4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4415c8:	add	x0, x0, #0x8d0
  4415cc:	str	x0, [sp, #56]
  4415d0:	b	441670 <set_usb_iftype+0x248>
  4415d4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4415d8:	add	x0, x0, #0x8d8
  4415dc:	str	x0, [sp, #56]
  4415e0:	b	441670 <set_usb_iftype+0x248>
  4415e4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4415e8:	add	x0, x0, #0x8e0
  4415ec:	str	x0, [sp, #56]
  4415f0:	b	441670 <set_usb_iftype+0x248>
  4415f4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4415f8:	add	x0, x0, #0x8e8
  4415fc:	str	x0, [sp, #56]
  441600:	b	441670 <set_usb_iftype+0x248>
  441604:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441608:	add	x0, x0, #0x8f0
  44160c:	str	x0, [sp, #56]
  441610:	b	441670 <set_usb_iftype+0x248>
  441614:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441618:	add	x0, x0, #0x8f8
  44161c:	str	x0, [sp, #56]
  441620:	b	441670 <set_usb_iftype+0x248>
  441624:	nop
  441628:	b	441670 <set_usb_iftype+0x248>
  44162c:	nop
  441630:	b	441670 <set_usb_iftype+0x248>
  441634:	nop
  441638:	b	441670 <set_usb_iftype+0x248>
  44163c:	nop
  441640:	b	441670 <set_usb_iftype+0x248>
  441644:	nop
  441648:	b	441670 <set_usb_iftype+0x248>
  44164c:	nop
  441650:	b	441670 <set_usb_iftype+0x248>
  441654:	nop
  441658:	b	441670 <set_usb_iftype+0x248>
  44165c:	nop
  441660:	b	441670 <set_usb_iftype+0x248>
  441664:	nop
  441668:	b	441670 <set_usb_iftype+0x248>
  44166c:	nop
  441670:	ldr	x2, [sp, #24]
  441674:	ldr	x1, [sp, #56]
  441678:	ldr	x0, [sp, #40]
  44167c:	bl	40aa90 <strncpy@plt>
  441680:	ldr	x0, [sp, #24]
  441684:	sub	x0, x0, #0x1
  441688:	ldr	x1, [sp, #40]
  44168c:	add	x0, x1, x0
  441690:	strb	wzr, [x0]
  441694:	nop
  441698:	ldp	x29, x30, [sp], #64
  44169c:	ret

00000000004416a0 <set_usb_mass_storage_ifsubtype>:
  4416a0:	stp	x29, x30, [sp, #-80]!
  4416a4:	mov	x29, sp
  4416a8:	str	x0, [sp, #40]
  4416ac:	str	x1, [sp, #32]
  4416b0:	str	x2, [sp, #24]
  4416b4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4416b8:	ldr	x0, [x0, #4032]
  4416bc:	ldr	x1, [x0]
  4416c0:	str	x1, [sp, #72]
  4416c4:	mov	x1, #0x0                   	// #0
  4416c8:	str	wzr, [sp, #52]
  4416cc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4416d0:	add	x0, x0, #0x8c0
  4416d4:	str	x0, [sp, #64]
  4416d8:	add	x0, sp, #0x38
  4416dc:	mov	w2, #0x0                   	// #0
  4416e0:	mov	x1, x0
  4416e4:	ldr	x0, [sp, #32]
  4416e8:	bl	40b630 <strtoul@plt>
  4416ec:	str	w0, [sp, #52]
  4416f0:	ldr	x0, [sp, #56]
  4416f4:	ldr	x1, [sp, #32]
  4416f8:	cmp	x1, x0
  4416fc:	b.eq	4417b4 <set_usb_mass_storage_ifsubtype+0x114>  // b.none
  441700:	ldr	w0, [sp, #52]
  441704:	cmp	w0, #0x6
  441708:	b.eq	4417a4 <set_usb_mass_storage_ifsubtype+0x104>  // b.none
  44170c:	ldr	w0, [sp, #52]
  441710:	cmp	w0, #0x6
  441714:	b.gt	4417bc <set_usb_mass_storage_ifsubtype+0x11c>
  441718:	ldr	w0, [sp, #52]
  44171c:	cmp	w0, #0x4
  441720:	b.eq	441794 <set_usb_mass_storage_ifsubtype+0xf4>  // b.none
  441724:	ldr	w0, [sp, #52]
  441728:	cmp	w0, #0x4
  44172c:	b.gt	4417bc <set_usb_mass_storage_ifsubtype+0x11c>
  441730:	ldr	w0, [sp, #52]
  441734:	cmp	w0, #0x3
  441738:	b.eq	441784 <set_usb_mass_storage_ifsubtype+0xe4>  // b.none
  44173c:	ldr	w0, [sp, #52]
  441740:	cmp	w0, #0x3
  441744:	b.gt	4417bc <set_usb_mass_storage_ifsubtype+0x11c>
  441748:	ldr	w0, [sp, #52]
  44174c:	cmp	w0, #0x1
  441750:	b.eq	441764 <set_usb_mass_storage_ifsubtype+0xc4>  // b.none
  441754:	ldr	w0, [sp, #52]
  441758:	cmp	w0, #0x2
  44175c:	b.eq	441774 <set_usb_mass_storage_ifsubtype+0xd4>  // b.none
  441760:	b	4417bc <set_usb_mass_storage_ifsubtype+0x11c>
  441764:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441768:	add	x0, x0, #0x900
  44176c:	str	x0, [sp, #64]
  441770:	b	4417c0 <set_usb_mass_storage_ifsubtype+0x120>
  441774:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441778:	add	x0, x0, #0x908
  44177c:	str	x0, [sp, #64]
  441780:	b	4417c0 <set_usb_mass_storage_ifsubtype+0x120>
  441784:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441788:	add	x0, x0, #0x910
  44178c:	str	x0, [sp, #64]
  441790:	b	4417c0 <set_usb_mass_storage_ifsubtype+0x120>
  441794:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441798:	add	x0, x0, #0x918
  44179c:	str	x0, [sp, #64]
  4417a0:	b	4417c0 <set_usb_mass_storage_ifsubtype+0x120>
  4417a4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4417a8:	add	x0, x0, #0x920
  4417ac:	str	x0, [sp, #64]
  4417b0:	b	4417c0 <set_usb_mass_storage_ifsubtype+0x120>
  4417b4:	nop
  4417b8:	b	4417c0 <set_usb_mass_storage_ifsubtype+0x120>
  4417bc:	nop
  4417c0:	ldr	x2, [sp, #64]
  4417c4:	ldr	x1, [sp, #24]
  4417c8:	ldr	x0, [sp, #40]
  4417cc:	bl	40a300 <strscpy@plt>
  4417d0:	ldr	w0, [sp, #52]
  4417d4:	mov	w1, w0
  4417d8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4417dc:	ldr	x0, [x0, #4032]
  4417e0:	ldr	x2, [sp, #72]
  4417e4:	ldr	x0, [x0]
  4417e8:	eor	x0, x2, x0
  4417ec:	cmp	x0, #0x0
  4417f0:	b.eq	4417f8 <set_usb_mass_storage_ifsubtype+0x158>  // b.none
  4417f4:	bl	40b280 <__stack_chk_fail@plt>
  4417f8:	mov	w0, w1
  4417fc:	ldp	x29, x30, [sp], #80
  441800:	ret

0000000000441804 <set_scsi_type>:
  441804:	stp	x29, x30, [sp, #-80]!
  441808:	mov	x29, sp
  44180c:	str	x0, [sp, #40]
  441810:	str	x1, [sp, #32]
  441814:	str	x2, [sp, #24]
  441818:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44181c:	ldr	x0, [x0, #4032]
  441820:	ldr	x1, [x0]
  441824:	str	x1, [sp, #72]
  441828:	mov	x1, #0x0                   	// #0
  44182c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441830:	add	x0, x0, #0x8c0
  441834:	str	x0, [sp, #64]
  441838:	add	x0, sp, #0x38
  44183c:	mov	w2, #0x0                   	// #0
  441840:	mov	x1, x0
  441844:	ldr	x0, [sp, #32]
  441848:	bl	40b630 <strtoul@plt>
  44184c:	str	w0, [sp, #52]
  441850:	ldr	x0, [sp, #56]
  441854:	ldr	x1, [sp, #32]
  441858:	cmp	x1, x0
  44185c:	b.eq	441934 <set_scsi_type+0x130>  // b.none
  441860:	ldr	w0, [sp, #52]
  441864:	cmp	w0, #0xf
  441868:	b.eq	441914 <set_scsi_type+0x110>  // b.none
  44186c:	ldr	w0, [sp, #52]
  441870:	cmp	w0, #0xf
  441874:	b.gt	44193c <set_scsi_type+0x138>
  441878:	ldr	w0, [sp, #52]
  44187c:	cmp	w0, #0xe
  441880:	b.eq	4418f4 <set_scsi_type+0xf0>  // b.none
  441884:	ldr	w0, [sp, #52]
  441888:	cmp	w0, #0xe
  44188c:	b.gt	44193c <set_scsi_type+0x138>
  441890:	ldr	w0, [sp, #52]
  441894:	cmp	w0, #0x7
  441898:	b.eq	441914 <set_scsi_type+0x110>  // b.none
  44189c:	ldr	w0, [sp, #52]
  4418a0:	cmp	w0, #0x7
  4418a4:	b.gt	44193c <set_scsi_type+0x138>
  4418a8:	ldr	w0, [sp, #52]
  4418ac:	cmp	w0, #0x5
  4418b0:	b.eq	441924 <set_scsi_type+0x120>  // b.none
  4418b4:	ldr	w0, [sp, #52]
  4418b8:	cmp	w0, #0x5
  4418bc:	b.gt	44193c <set_scsi_type+0x138>
  4418c0:	ldr	w0, [sp, #52]
  4418c4:	cmp	w0, #0x4
  4418c8:	b.eq	441914 <set_scsi_type+0x110>  // b.none
  4418cc:	ldr	w0, [sp, #52]
  4418d0:	cmp	w0, #0x4
  4418d4:	b.gt	44193c <set_scsi_type+0x138>
  4418d8:	ldr	w0, [sp, #52]
  4418dc:	cmp	w0, #0x0
  4418e0:	b.eq	4418f4 <set_scsi_type+0xf0>  // b.none
  4418e4:	ldr	w0, [sp, #52]
  4418e8:	cmp	w0, #0x1
  4418ec:	b.eq	441904 <set_scsi_type+0x100>  // b.none
  4418f0:	b	44193c <set_scsi_type+0x138>
  4418f4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4418f8:	add	x0, x0, #0x928
  4418fc:	str	x0, [sp, #64]
  441900:	b	441940 <set_scsi_type+0x13c>
  441904:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441908:	add	x0, x0, #0x910
  44190c:	str	x0, [sp, #64]
  441910:	b	441940 <set_scsi_type+0x13c>
  441914:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441918:	add	x0, x0, #0x930
  44191c:	str	x0, [sp, #64]
  441920:	b	441940 <set_scsi_type+0x13c>
  441924:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441928:	add	x0, x0, #0x938
  44192c:	str	x0, [sp, #64]
  441930:	b	441940 <set_scsi_type+0x13c>
  441934:	nop
  441938:	b	441940 <set_scsi_type+0x13c>
  44193c:	nop
  441940:	ldr	x2, [sp, #64]
  441944:	ldr	x1, [sp, #24]
  441948:	ldr	x0, [sp, #40]
  44194c:	bl	40a300 <strscpy@plt>
  441950:	nop
  441954:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  441958:	ldr	x0, [x0, #4032]
  44195c:	ldr	x1, [sp, #72]
  441960:	ldr	x0, [x0]
  441964:	eor	x0, x1, x0
  441968:	cmp	x0, #0x0
  44196c:	b.eq	441974 <set_scsi_type+0x170>  // b.none
  441970:	bl	40b280 <__stack_chk_fail@plt>
  441974:	ldp	x29, x30, [sp], #80
  441978:	ret

000000000044197c <dev_if_packed_info>:
  44197c:	sub	sp, sp, #0x130
  441980:	sub	sp, sp, #0x10, lsl #12
  441984:	stp	x29, x30, [sp, #32]
  441988:	add	x29, sp, #0x20
  44198c:	str	x19, [sp, #48]
  441990:	str	x0, [x29, #56]
  441994:	str	x1, [x29, #48]
  441998:	str	x2, [x29, #40]
  44199c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4419a0:	ldr	x0, [x0, #4032]
  4419a4:	add	x1, x29, #0x10, lsl #12
  4419a8:	ldr	x2, [x0]
  4419ac:	str	x2, [x1, #264]
  4419b0:	mov	x2, #0x0                   	// #0
  4419b4:	mov	w0, #0xffffffff            	// #-1
  4419b8:	str	w0, [x29, #68]
  4419bc:	str	xzr, [x29, #120]
  4419c0:	str	wzr, [x29, #72]
  4419c4:	add	x0, x29, #0x68
  4419c8:	mov	x1, x0
  4419cc:	ldr	x0, [x29, #56]
  4419d0:	bl	40bd50 <sd_device_get_syspath@plt>
  4419d4:	str	w0, [x29, #76]
  4419d8:	ldr	w0, [x29, #76]
  4419dc:	cmp	w0, #0x0
  4419e0:	b.ge	4419ec <dev_if_packed_info+0x70>  // b.tcont
  4419e4:	ldr	w19, [x29, #76]
  4419e8:	b	442018 <dev_if_packed_info+0x69c>
  4419ec:	ldr	x0, [x29, #104]
  4419f0:	str	x0, [x29, #216]
  4419f4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4419f8:	add	x0, x0, #0x940
  4419fc:	str	x0, [x29, #224]
  441a00:	str	xzr, [x29, #136]
  441a04:	str	xzr, [x29, #144]
  441a08:	b	441a3c <dev_if_packed_info+0xc0>
  441a0c:	ldr	x0, [x29, #144]
  441a10:	lsl	x0, x0, #3
  441a14:	add	x1, x29, #0xd8
  441a18:	ldr	x0, [x1, x0]
  441a1c:	bl	40bd10 <strlen@plt>
  441a20:	mov	x1, x0
  441a24:	ldr	x0, [x29, #136]
  441a28:	add	x0, x0, x1
  441a2c:	str	x0, [x29, #136]
  441a30:	ldr	x0, [x29, #144]
  441a34:	add	x0, x0, #0x1
  441a38:	str	x0, [x29, #144]
  441a3c:	ldr	x0, [x29, #144]
  441a40:	cmp	x0, #0x1
  441a44:	b.hi	441a60 <dev_if_packed_info+0xe4>  // b.pmore
  441a48:	ldr	x0, [x29, #144]
  441a4c:	lsl	x0, x0, #3
  441a50:	add	x1, x29, #0xd8
  441a54:	ldr	x0, [x1, x0]
  441a58:	cmp	x0, #0x0
  441a5c:	b.ne	441a0c <dev_if_packed_info+0x90>  // b.any
  441a60:	ldr	x0, [x29, #136]
  441a64:	add	x0, x0, #0x1
  441a68:	str	x0, [x29, #152]
  441a6c:	ldr	x1, [x29, #152]
  441a70:	mov	x0, #0x1                   	// #1
  441a74:	bl	441348 <size_multiply_overflow>
  441a78:	and	w0, w0, #0xff
  441a7c:	and	x0, x0, #0xff
  441a80:	cmp	x0, #0x0
  441a84:	b.eq	441ab0 <dev_if_packed_info+0x134>  // b.none
  441a88:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441a8c:	add	x1, x0, #0x953
  441a90:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441a94:	add	x4, x0, #0xe70
  441a98:	mov	w3, #0xa3                  	// #163
  441a9c:	mov	x2, x1
  441aa0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441aa4:	add	x1, x0, #0x978
  441aa8:	mov	w0, #0x1                   	// #1
  441aac:	bl	40abb0 <log_assert_failed_realm@plt>
  441ab0:	ldr	x0, [x29, #152]
  441ab4:	cmp	x0, #0x400, lsl #12
  441ab8:	cset	w0, hi  // hi = pmore
  441abc:	and	w0, w0, #0xff
  441ac0:	and	x0, x0, #0xff
  441ac4:	cmp	x0, #0x0
  441ac8:	b.eq	441af4 <dev_if_packed_info+0x178>  // b.none
  441acc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441ad0:	add	x1, x0, #0x953
  441ad4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441ad8:	add	x4, x0, #0xe70
  441adc:	mov	w3, #0xa3                  	// #163
  441ae0:	mov	x2, x1
  441ae4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441ae8:	add	x1, x0, #0x9a8
  441aec:	mov	w0, #0x1                   	// #1
  441af0:	bl	40abb0 <log_assert_failed_realm@plt>
  441af4:	ldr	x0, [x29, #152]
  441af8:	add	x0, x0, #0xf
  441afc:	lsr	x0, x0, #4
  441b00:	lsl	x0, x0, #4
  441b04:	sub	sp, sp, x0
  441b08:	add	x0, sp, #0x20
  441b0c:	add	x0, x0, #0xf
  441b10:	lsr	x0, x0, #4
  441b14:	lsl	x0, x0, #4
  441b18:	str	x0, [x29, #160]
  441b1c:	ldr	x0, [x29, #160]
  441b20:	str	x0, [x29, #128]
  441b24:	str	xzr, [x29, #144]
  441b28:	b	441b58 <dev_if_packed_info+0x1dc>
  441b2c:	ldr	x0, [x29, #144]
  441b30:	lsl	x0, x0, #3
  441b34:	add	x1, x29, #0xd8
  441b38:	ldr	x0, [x1, x0]
  441b3c:	mov	x1, x0
  441b40:	ldr	x0, [x29, #128]
  441b44:	bl	40a510 <stpcpy@plt>
  441b48:	str	x0, [x29, #128]
  441b4c:	ldr	x0, [x29, #144]
  441b50:	add	x0, x0, #0x1
  441b54:	str	x0, [x29, #144]
  441b58:	ldr	x0, [x29, #144]
  441b5c:	cmp	x0, #0x1
  441b60:	b.hi	441b7c <dev_if_packed_info+0x200>  // b.pmore
  441b64:	ldr	x0, [x29, #144]
  441b68:	lsl	x0, x0, #3
  441b6c:	add	x1, x29, #0xd8
  441b70:	ldr	x0, [x1, x0]
  441b74:	cmp	x0, #0x0
  441b78:	b.ne	441b2c <dev_if_packed_info+0x1b0>  // b.any
  441b7c:	ldr	x0, [x29, #128]
  441b80:	strb	wzr, [x0]
  441b84:	ldr	x0, [x29, #160]
  441b88:	str	x0, [x29, #168]
  441b8c:	mov	w1, #0x80000               	// #524288
  441b90:	ldr	x0, [x29, #168]
  441b94:	bl	40bcb0 <open64@plt>
  441b98:	str	w0, [x29, #68]
  441b9c:	ldr	w0, [x29, #68]
  441ba0:	cmp	w0, #0x0
  441ba4:	b.ge	441c78 <dev_if_packed_info+0x2fc>  // b.tcont
  441ba8:	str	xzr, [x29, #112]
  441bac:	ldr	x0, [x29, #56]
  441bb0:	str	x0, [x29, #208]
  441bb4:	mov	w0, #0x7                   	// #7
  441bb8:	str	w0, [x29, #96]
  441bbc:	bl	40b040 <__errno_location@plt>
  441bc0:	ldr	w0, [x0]
  441bc4:	str	w0, [x29, #100]
  441bc8:	ldr	x0, [x29, #208]
  441bcc:	cmp	x0, #0x0
  441bd0:	b.eq	441c0c <dev_if_packed_info+0x290>  // b.none
  441bd4:	mov	w0, #0x1                   	// #1
  441bd8:	bl	40be30 <log_get_max_level_realm@plt>
  441bdc:	mov	w1, w0
  441be0:	ldr	w0, [x29, #96]
  441be4:	cmp	w0, w1
  441be8:	cset	w0, le
  441bec:	and	w0, w0, #0xff
  441bf0:	and	x0, x0, #0xff
  441bf4:	cmp	x0, #0x0
  441bf8:	b.eq	441c0c <dev_if_packed_info+0x290>  // b.none
  441bfc:	add	x0, x29, #0x70
  441c00:	mov	x1, x0
  441c04:	ldr	x0, [x29, #208]
  441c08:	bl	40aba0 <sd_device_get_sysname@plt>
  441c0c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441c10:	add	x2, x0, #0x953
  441c14:	ldr	x0, [x29, #112]
  441c18:	cmp	x0, #0x0
  441c1c:	b.eq	441c2c <dev_if_packed_info+0x2b0>  // b.none
  441c20:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441c24:	add	x0, x0, #0x9c8
  441c28:	b	441c30 <dev_if_packed_info+0x2b4>
  441c2c:	mov	x0, #0x0                   	// #0
  441c30:	ldr	x3, [x29, #112]
  441c34:	ldr	x1, [x29, #168]
  441c38:	str	x1, [sp, #16]
  441c3c:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  441c40:	add	x1, x1, #0x9d0
  441c44:	str	x1, [sp, #8]
  441c48:	str	xzr, [sp]
  441c4c:	mov	x7, #0x0                   	// #0
  441c50:	mov	x6, x3
  441c54:	mov	x5, x0
  441c58:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441c5c:	add	x4, x0, #0xe88
  441c60:	mov	w3, #0xa6                  	// #166
  441c64:	ldr	w1, [x29, #100]
  441c68:	ldr	w0, [x29, #96]
  441c6c:	bl	40b020 <log_object_internal@plt>
  441c70:	mov	w19, w0
  441c74:	b	442018 <dev_if_packed_info+0x69c>
  441c78:	ldr	w0, [x29, #68]
  441c7c:	add	x1, x29, #0xf0
  441c80:	mov	x2, #0x11                  	// #17
  441c84:	movk	x2, #0x1, lsl #16
  441c88:	bl	40b0b0 <read@plt>
  441c8c:	str	x0, [x29, #176]
  441c90:	ldr	x0, [x29, #176]
  441c94:	cmp	x0, #0x11
  441c98:	b.gt	441d6c <dev_if_packed_info+0x3f0>
  441c9c:	str	xzr, [x29, #112]
  441ca0:	ldr	x0, [x29, #56]
  441ca4:	str	x0, [x29, #200]
  441ca8:	mov	w0, #0x4                   	// #4
  441cac:	str	w0, [x29, #88]
  441cb0:	mov	w0, #0x5                   	// #5
  441cb4:	movk	w0, #0x4000, lsl #16
  441cb8:	str	w0, [x29, #92]
  441cbc:	ldr	x0, [x29, #200]
  441cc0:	cmp	x0, #0x0
  441cc4:	b.eq	441d00 <dev_if_packed_info+0x384>  // b.none
  441cc8:	mov	w0, #0x1                   	// #1
  441ccc:	bl	40be30 <log_get_max_level_realm@plt>
  441cd0:	mov	w1, w0
  441cd4:	ldr	w0, [x29, #88]
  441cd8:	cmp	w0, w1
  441cdc:	cset	w0, le
  441ce0:	and	w0, w0, #0xff
  441ce4:	and	x0, x0, #0xff
  441ce8:	cmp	x0, #0x0
  441cec:	b.eq	441d00 <dev_if_packed_info+0x384>  // b.none
  441cf0:	add	x0, x29, #0x70
  441cf4:	mov	x1, x0
  441cf8:	ldr	x0, [x29, #200]
  441cfc:	bl	40aba0 <sd_device_get_sysname@plt>
  441d00:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441d04:	add	x2, x0, #0x953
  441d08:	ldr	x0, [x29, #112]
  441d0c:	cmp	x0, #0x0
  441d10:	b.eq	441d20 <dev_if_packed_info+0x3a4>  // b.none
  441d14:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441d18:	add	x0, x0, #0x9c8
  441d1c:	b	441d24 <dev_if_packed_info+0x3a8>
  441d20:	mov	x0, #0x0                   	// #0
  441d24:	ldr	x3, [x29, #112]
  441d28:	ldr	x1, [x29, #168]
  441d2c:	str	x1, [sp, #16]
  441d30:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  441d34:	add	x1, x1, #0x9e8
  441d38:	str	x1, [sp, #8]
  441d3c:	str	xzr, [sp]
  441d40:	mov	x7, #0x0                   	// #0
  441d44:	mov	x6, x3
  441d48:	mov	x5, x0
  441d4c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441d50:	add	x4, x0, #0xe88
  441d54:	mov	w3, #0xaa                  	// #170
  441d58:	ldr	w1, [x29, #92]
  441d5c:	ldr	w0, [x29, #88]
  441d60:	bl	40b020 <log_object_internal@plt>
  441d64:	mov	w19, w0
  441d68:	b	442018 <dev_if_packed_info+0x69c>
  441d6c:	ldr	x1, [x29, #176]
  441d70:	mov	x0, #0x11                  	// #17
  441d74:	movk	x0, #0x1, lsl #16
  441d78:	cmp	x1, x0
  441d7c:	cset	w0, hi  // hi = pmore
  441d80:	and	w0, w0, #0xff
  441d84:	and	x0, x0, #0xff
  441d88:	cmp	x0, #0x0
  441d8c:	b.eq	441db8 <dev_if_packed_info+0x43c>  // b.none
  441d90:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441d94:	add	x1, x0, #0x953
  441d98:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441d9c:	add	x4, x0, #0xe70
  441da0:	mov	w3, #0xac                  	// #172
  441da4:	mov	x2, x1
  441da8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441dac:	add	x1, x0, #0xa00
  441db0:	mov	w0, #0x1                   	// #1
  441db4:	bl	40abb0 <log_assert_failed_realm@plt>
  441db8:	ldr	x0, [x29, #48]
  441dbc:	strb	wzr, [x0]
  441dc0:	b	441f94 <dev_if_packed_info+0x618>
  441dc4:	add	x1, x29, #0xf0
  441dc8:	ldr	x0, [x29, #120]
  441dcc:	add	x0, x1, x0
  441dd0:	str	x0, [x29, #184]
  441dd4:	ldr	x0, [x29, #184]
  441dd8:	ldrb	w0, [x0]
  441ddc:	cmp	w0, #0x2
  441de0:	b.ls	441fc8 <dev_if_packed_info+0x64c>  // b.plast
  441de4:	ldr	x0, [x29, #184]
  441de8:	ldrb	w0, [x0]
  441dec:	and	x1, x0, #0xff
  441df0:	ldr	x0, [x29, #176]
  441df4:	sub	x0, x0, #0x9
  441df8:	cmp	x1, x0
  441dfc:	b.ls	441ed0 <dev_if_packed_info+0x554>  // b.plast
  441e00:	str	xzr, [x29, #112]
  441e04:	ldr	x0, [x29, #56]
  441e08:	str	x0, [x29, #192]
  441e0c:	mov	w0, #0x7                   	// #7
  441e10:	str	w0, [x29, #80]
  441e14:	mov	w0, #0x5                   	// #5
  441e18:	movk	w0, #0x4000, lsl #16
  441e1c:	str	w0, [x29, #84]
  441e20:	ldr	x0, [x29, #192]
  441e24:	cmp	x0, #0x0
  441e28:	b.eq	441e64 <dev_if_packed_info+0x4e8>  // b.none
  441e2c:	mov	w0, #0x1                   	// #1
  441e30:	bl	40be30 <log_get_max_level_realm@plt>
  441e34:	mov	w1, w0
  441e38:	ldr	w0, [x29, #80]
  441e3c:	cmp	w0, w1
  441e40:	cset	w0, le
  441e44:	and	w0, w0, #0xff
  441e48:	and	x0, x0, #0xff
  441e4c:	cmp	x0, #0x0
  441e50:	b.eq	441e64 <dev_if_packed_info+0x4e8>  // b.none
  441e54:	add	x0, x29, #0x70
  441e58:	mov	x1, x0
  441e5c:	ldr	x0, [x29, #192]
  441e60:	bl	40aba0 <sd_device_get_sysname@plt>
  441e64:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441e68:	add	x2, x0, #0x953
  441e6c:	ldr	x0, [x29, #112]
  441e70:	cmp	x0, #0x0
  441e74:	b.eq	441e84 <dev_if_packed_info+0x508>  // b.none
  441e78:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441e7c:	add	x0, x0, #0x9c8
  441e80:	b	441e88 <dev_if_packed_info+0x50c>
  441e84:	mov	x0, #0x0                   	// #0
  441e88:	ldr	x3, [x29, #112]
  441e8c:	ldr	x1, [x29, #168]
  441e90:	str	x1, [sp, #16]
  441e94:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  441e98:	add	x1, x1, #0xa20
  441e9c:	str	x1, [sp, #8]
  441ea0:	str	xzr, [sp]
  441ea4:	mov	x7, #0x0                   	// #0
  441ea8:	mov	x6, x3
  441eac:	mov	x5, x0
  441eb0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441eb4:	add	x4, x0, #0xe88
  441eb8:	mov	w3, #0xb9                  	// #185
  441ebc:	ldr	w1, [x29, #84]
  441ec0:	ldr	w0, [x29, #80]
  441ec4:	bl	40b020 <log_object_internal@plt>
  441ec8:	mov	w19, w0
  441ecc:	b	442018 <dev_if_packed_info+0x69c>
  441ed0:	ldr	x0, [x29, #184]
  441ed4:	ldrb	w0, [x0]
  441ed8:	and	x0, x0, #0xff
  441edc:	ldr	x1, [x29, #120]
  441ee0:	add	x0, x1, x0
  441ee4:	str	x0, [x29, #120]
  441ee8:	ldr	x0, [x29, #184]
  441eec:	ldrb	w0, [x0, #1]
  441ef0:	cmp	w0, #0x4
  441ef4:	b.ne	441f80 <dev_if_packed_info+0x604>  // b.any
  441ef8:	ldr	x0, [x29, #184]
  441efc:	ldrb	w0, [x0, #5]
  441f00:	mov	w1, w0
  441f04:	ldr	x0, [x29, #184]
  441f08:	ldrb	w0, [x0, #6]
  441f0c:	mov	w2, w0
  441f10:	ldr	x0, [x29, #184]
  441f14:	ldrb	w0, [x0, #7]
  441f18:	add	x6, x29, #0xe8
  441f1c:	mov	w5, w0
  441f20:	mov	w4, w2
  441f24:	mov	w3, w1
  441f28:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  441f2c:	add	x2, x0, #0xa40
  441f30:	mov	x1, #0x8                   	// #8
  441f34:	mov	x0, x6
  441f38:	bl	40a870 <snprintf@plt>
  441f3c:	cmp	w0, #0x7
  441f40:	b.ne	441f88 <dev_if_packed_info+0x60c>  // b.any
  441f44:	add	x0, x29, #0xe8
  441f48:	mov	x1, x0
  441f4c:	ldr	x0, [x29, #48]
  441f50:	bl	40ac30 <strstr@plt>
  441f54:	cmp	x0, #0x0
  441f58:	b.ne	441f90 <dev_if_packed_info+0x614>  // b.any
  441f5c:	ldr	w0, [x29, #72]
  441f60:	ldr	x1, [x29, #48]
  441f64:	add	x0, x1, x0
  441f68:	ldr	x1, [x29, #232]
  441f6c:	str	x1, [x0]
  441f70:	ldr	w0, [x29, #72]
  441f74:	add	w0, w0, #0x7
  441f78:	str	w0, [x29, #72]
  441f7c:	b	441f94 <dev_if_packed_info+0x618>
  441f80:	nop
  441f84:	b	441f94 <dev_if_packed_info+0x618>
  441f88:	nop
  441f8c:	b	441f94 <dev_if_packed_info+0x618>
  441f90:	nop
  441f94:	ldr	x0, [x29, #120]
  441f98:	add	x1, x0, #0x9
  441f9c:	ldr	x0, [x29, #176]
  441fa0:	cmp	x1, x0
  441fa4:	b.cs	441fcc <dev_if_packed_info+0x650>  // b.hs, b.nlast
  441fa8:	ldr	w0, [x29, #72]
  441fac:	add	w0, w0, #0x7
  441fb0:	mov	w1, w0
  441fb4:	ldr	x0, [x29, #40]
  441fb8:	sub	x0, x0, #0x2
  441fbc:	cmp	x1, x0
  441fc0:	b.cc	441dc4 <dev_if_packed_info+0x448>  // b.lo, b.ul, b.last
  441fc4:	b	441fcc <dev_if_packed_info+0x650>
  441fc8:	nop
  441fcc:	ldr	w0, [x29, #72]
  441fd0:	cmp	w0, #0x0
  441fd4:	b.eq	442014 <dev_if_packed_info+0x698>  // b.none
  441fd8:	ldr	w0, [x29, #72]
  441fdc:	add	w1, w0, #0x1
  441fe0:	str	w1, [x29, #72]
  441fe4:	mov	w0, w0
  441fe8:	ldr	x1, [x29, #48]
  441fec:	add	x0, x1, x0
  441ff0:	mov	w1, #0x3a                  	// #58
  441ff4:	strb	w1, [x0]
  441ff8:	ldr	w0, [x29, #72]
  441ffc:	add	w1, w0, #0x1
  442000:	str	w1, [x29, #72]
  442004:	mov	w0, w0
  442008:	ldr	x1, [x29, #48]
  44200c:	add	x0, x1, x0
  442010:	strb	wzr, [x0]
  442014:	mov	w19, #0x0                   	// #0
  442018:	add	x0, x29, #0x44
  44201c:	bl	4413c4 <closep>
  442020:	mov	w1, w19
  442024:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  442028:	ldr	x0, [x0, #4032]
  44202c:	add	x2, x29, #0x10, lsl #12
  442030:	ldr	x3, [x2, #264]
  442034:	ldr	x0, [x0]
  442038:	eor	x0, x3, x0
  44203c:	cmp	x0, #0x0
  442040:	b.eq	442048 <dev_if_packed_info+0x6cc>  // b.none
  442044:	bl	40b280 <__stack_chk_fail@plt>
  442048:	mov	w0, w1
  44204c:	sub	sp, x29, #0x20
  442050:	ldr	x19, [sp, #48]
  442054:	ldp	x29, x30, [sp, #32]
  442058:	add	sp, sp, #0x130
  44205c:	add	sp, sp, #0x10, lsl #12
  442060:	ret

0000000000442064 <builtin_usb_id>:
  442064:	sub	sp, sp, #0xa20
  442068:	stp	x29, x30, [sp, #32]
  44206c:	add	x29, sp, #0x20
  442070:	str	x0, [sp, #72]
  442074:	str	w1, [sp, #68]
  442078:	str	x2, [sp, #56]
  44207c:	strb	w3, [sp, #67]
  442080:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  442084:	ldr	x0, [x0, #4032]
  442088:	ldr	x1, [x0]
  44208c:	str	x1, [sp, #2584]
  442090:	mov	x1, #0x0                   	// #0
  442094:	add	x0, sp, #0x200
  442098:	stp	xzr, xzr, [x0, #-40]
  44209c:	add	x0, sp, #0x200
  4420a0:	stp	xzr, xzr, [x0, #-24]
  4420a4:	add	x0, sp, #0x200
  4420a8:	stp	xzr, xzr, [x0, #-8]
  4420ac:	add	x0, sp, #0x200
  4420b0:	stp	xzr, xzr, [x0, #8]
  4420b4:	add	x0, sp, #0x200
  4420b8:	stp	xzr, xzr, [x0, #24]
  4420bc:	add	x0, sp, #0x200
  4420c0:	stp	xzr, xzr, [x0, #40]
  4420c4:	add	x0, sp, #0x200
  4420c8:	stp	xzr, xzr, [x0, #56]
  4420cc:	add	x0, sp, #0x200
  4420d0:	stp	xzr, xzr, [x0, #72]
  4420d4:	add	x0, sp, #0x600
  4420d8:	stp	xzr, xzr, [x0, #24]
  4420dc:	add	x0, sp, #0x628
  4420e0:	mov	x1, #0x1f0                 	// #496
  4420e4:	mov	x2, x1
  4420e8:	mov	w1, #0x0                   	// #0
  4420ec:	bl	40be00 <memset@plt>
  4420f0:	add	x0, sp, #0x800
  4420f4:	stp	xzr, xzr, [x0, #24]
  4420f8:	add	x0, sp, #0x828
  4420fc:	mov	x1, #0x1f0                 	// #496
  442100:	mov	x2, x1
  442104:	mov	w1, #0x0                   	// #0
  442108:	bl	40be00 <memset@plt>
  44210c:	add	x0, sp, #0x200
  442110:	stp	xzr, xzr, [x0, #88]
  442114:	add	x0, sp, #0x200
  442118:	stp	xzr, xzr, [x0, #104]
  44211c:	add	x0, sp, #0x200
  442120:	stp	xzr, xzr, [x0, #120]
  442124:	add	x0, sp, #0x200
  442128:	stp	xzr, xzr, [x0, #136]
  44212c:	add	x0, sp, #0x200
  442130:	stp	xzr, xzr, [x0, #152]
  442134:	add	x0, sp, #0x200
  442138:	stp	xzr, xzr, [x0, #168]
  44213c:	add	x0, sp, #0x200
  442140:	stp	xzr, xzr, [x0, #184]
  442144:	add	x0, sp, #0x200
  442148:	stp	xzr, xzr, [x0, #200]
  44214c:	add	x0, sp, #0x200
  442150:	stp	xzr, xzr, [x0, #216]
  442154:	add	x0, sp, #0x200
  442158:	stp	xzr, xzr, [x0, #232]
  44215c:	add	x0, sp, #0x200
  442160:	stp	xzr, xzr, [x0, #248]
  442164:	add	x0, sp, #0x400
  442168:	stp	xzr, xzr, [x0, #-248]
  44216c:	str	xzr, [sp, #216]
  442170:	str	xzr, [sp, #224]
  442174:	str	wzr, [sp, #100]
  442178:	ldr	x0, [sp, #72]
  44217c:	cmp	x0, #0x0
  442180:	cset	w0, eq  // eq = none
  442184:	and	w0, w0, #0xff
  442188:	and	x0, x0, #0xff
  44218c:	cmp	x0, #0x0
  442190:	b.eq	4421bc <builtin_usb_id+0x158>  // b.none
  442194:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442198:	add	x1, x0, #0x953
  44219c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4421a0:	add	x4, x0, #0xea0
  4421a4:	mov	w3, #0x100                 	// #256
  4421a8:	mov	x2, x1
  4421ac:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4421b0:	add	x1, x0, #0xa50
  4421b4:	mov	w0, #0x1                   	// #1
  4421b8:	bl	40abb0 <log_assert_failed_realm@plt>
  4421bc:	add	x0, sp, #0x108
  4421c0:	mov	x1, x0
  4421c4:	ldr	x0, [sp, #72]
  4421c8:	bl	40bd50 <sd_device_get_syspath@plt>
  4421cc:	str	w0, [sp, #104]
  4421d0:	ldr	w0, [sp, #104]
  4421d4:	cmp	w0, #0x0
  4421d8:	b.ge	4421e4 <builtin_usb_id+0x180>  // b.tcont
  4421dc:	ldr	w0, [sp, #104]
  4421e0:	b	4434b4 <builtin_usb_id+0x1450>
  4421e4:	add	x0, sp, #0x110
  4421e8:	mov	x1, x0
  4421ec:	ldr	x0, [sp, #72]
  4421f0:	bl	40aba0 <sd_device_get_sysname@plt>
  4421f4:	str	w0, [sp, #104]
  4421f8:	ldr	w0, [sp, #104]
  4421fc:	cmp	w0, #0x0
  442200:	b.ge	44220c <builtin_usb_id+0x1a8>  // b.tcont
  442204:	ldr	w0, [sp, #104]
  442208:	b	4434b4 <builtin_usb_id+0x1450>
  44220c:	add	x0, sp, #0x118
  442210:	mov	x1, x0
  442214:	ldr	x0, [sp, #72]
  442218:	bl	40a460 <sd_device_get_devtype@plt>
  44221c:	cmp	w0, #0x0
  442220:	b.lt	442260 <builtin_usb_id+0x1fc>  // b.tstop
  442224:	ldr	x2, [sp, #280]
  442228:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44222c:	add	x1, x0, #0xa58
  442230:	mov	x0, x2
  442234:	bl	40b710 <strcmp@plt>
  442238:	cmp	w0, #0x0
  44223c:	b.ne	442260 <builtin_usb_id+0x1fc>  // b.any
  442240:	add	x0, sp, #0x818
  442244:	mov	x2, #0x200                 	// #512
  442248:	mov	x1, x0
  44224c:	ldr	x0, [sp, #72]
  442250:	bl	44197c <dev_if_packed_info>
  442254:	ldr	x0, [sp, #72]
  442258:	str	x0, [sp, #240]
  44225c:	b	442e20 <builtin_usb_id+0xdbc>
  442260:	add	x0, sp, #0xe8
  442264:	mov	x3, x0
  442268:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44226c:	add	x2, x0, #0xa68
  442270:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442274:	add	x1, x0, #0xa78
  442278:	ldr	x0, [sp, #72]
  44227c:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  442280:	str	w0, [sp, #104]
  442284:	ldr	w0, [sp, #104]
  442288:	cmp	w0, #0x0
  44228c:	b.ge	442350 <builtin_usb_id+0x2ec>  // b.tcont
  442290:	str	xzr, [sp, #344]
  442294:	ldr	x0, [sp, #72]
  442298:	str	x0, [sp, #448]
  44229c:	mov	w0, #0x7                   	// #7
  4422a0:	str	w0, [sp, #192]
  4422a4:	ldr	w0, [sp, #104]
  4422a8:	str	w0, [sp, #196]
  4422ac:	ldr	x0, [sp, #448]
  4422b0:	cmp	x0, #0x0
  4422b4:	b.eq	4422f0 <builtin_usb_id+0x28c>  // b.none
  4422b8:	mov	w0, #0x1                   	// #1
  4422bc:	bl	40be30 <log_get_max_level_realm@plt>
  4422c0:	mov	w1, w0
  4422c4:	ldr	w0, [sp, #192]
  4422c8:	cmp	w0, w1
  4422cc:	cset	w0, le
  4422d0:	and	w0, w0, #0xff
  4422d4:	and	x0, x0, #0xff
  4422d8:	cmp	x0, #0x0
  4422dc:	b.eq	4422f0 <builtin_usb_id+0x28c>  // b.none
  4422e0:	add	x0, sp, #0x158
  4422e4:	mov	x1, x0
  4422e8:	ldr	x0, [sp, #448]
  4422ec:	bl	40aba0 <sd_device_get_sysname@plt>
  4422f0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4422f4:	add	x2, x0, #0x953
  4422f8:	ldr	x0, [sp, #344]
  4422fc:	cmp	x0, #0x0
  442300:	b.eq	442310 <builtin_usb_id+0x2ac>  // b.none
  442304:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442308:	add	x0, x0, #0x9c8
  44230c:	b	442314 <builtin_usb_id+0x2b0>
  442310:	mov	x0, #0x0                   	// #0
  442314:	ldr	x3, [sp, #344]
  442318:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  44231c:	add	x1, x1, #0xa80
  442320:	str	x1, [sp, #8]
  442324:	str	xzr, [sp]
  442328:	mov	x7, #0x0                   	// #0
  44232c:	mov	x6, x3
  442330:	mov	x5, x0
  442334:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442338:	add	x4, x0, #0xeb0
  44233c:	mov	w3, #0x114                 	// #276
  442340:	ldr	w1, [sp, #196]
  442344:	ldr	w0, [sp, #192]
  442348:	bl	40b020 <log_object_internal@plt>
  44234c:	b	4434b4 <builtin_usb_id+0x1450>
  442350:	ldr	x0, [sp, #232]
  442354:	add	x1, sp, #0x120
  442358:	bl	40bd50 <sd_device_get_syspath@plt>
  44235c:	str	w0, [sp, #104]
  442360:	ldr	w0, [sp, #104]
  442364:	cmp	w0, #0x0
  442368:	b.ge	44242c <builtin_usb_id+0x3c8>  // b.tcont
  44236c:	str	xzr, [sp, #344]
  442370:	ldr	x0, [sp, #232]
  442374:	str	x0, [sp, #440]
  442378:	mov	w0, #0x7                   	// #7
  44237c:	str	w0, [sp, #184]
  442380:	ldr	w0, [sp, #104]
  442384:	str	w0, [sp, #188]
  442388:	ldr	x0, [sp, #440]
  44238c:	cmp	x0, #0x0
  442390:	b.eq	4423cc <builtin_usb_id+0x368>  // b.none
  442394:	mov	w0, #0x1                   	// #1
  442398:	bl	40be30 <log_get_max_level_realm@plt>
  44239c:	mov	w1, w0
  4423a0:	ldr	w0, [sp, #184]
  4423a4:	cmp	w0, w1
  4423a8:	cset	w0, le
  4423ac:	and	w0, w0, #0xff
  4423b0:	and	x0, x0, #0xff
  4423b4:	cmp	x0, #0x0
  4423b8:	b.eq	4423cc <builtin_usb_id+0x368>  // b.none
  4423bc:	add	x0, sp, #0x158
  4423c0:	mov	x1, x0
  4423c4:	ldr	x0, [sp, #440]
  4423c8:	bl	40aba0 <sd_device_get_sysname@plt>
  4423cc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4423d0:	add	x2, x0, #0x953
  4423d4:	ldr	x0, [sp, #344]
  4423d8:	cmp	x0, #0x0
  4423dc:	b.eq	4423ec <builtin_usb_id+0x388>  // b.none
  4423e0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4423e4:	add	x0, x0, #0x9c8
  4423e8:	b	4423f0 <builtin_usb_id+0x38c>
  4423ec:	mov	x0, #0x0                   	// #0
  4423f0:	ldr	x3, [sp, #344]
  4423f4:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  4423f8:	add	x1, x1, #0xaa8
  4423fc:	str	x1, [sp, #8]
  442400:	str	xzr, [sp]
  442404:	mov	x7, #0x0                   	// #0
  442408:	mov	x6, x3
  44240c:	mov	x5, x0
  442410:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442414:	add	x4, x0, #0xeb0
  442418:	mov	w3, #0x118                 	// #280
  44241c:	ldr	w1, [sp, #188]
  442420:	ldr	w0, [sp, #184]
  442424:	bl	40b020 <log_object_internal@plt>
  442428:	b	4434b4 <builtin_usb_id+0x1450>
  44242c:	ldr	x3, [sp, #232]
  442430:	add	x0, sp, #0xd8
  442434:	mov	x2, x0
  442438:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44243c:	add	x1, x0, #0xac8
  442440:	mov	x0, x3
  442444:	bl	40b870 <sd_device_get_sysattr_value@plt>
  442448:	ldr	x3, [sp, #232]
  44244c:	add	x0, sp, #0xe0
  442450:	mov	x2, x0
  442454:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442458:	add	x1, x0, #0xae0
  44245c:	mov	x0, x3
  442460:	bl	40b870 <sd_device_get_sysattr_value@plt>
  442464:	ldr	x3, [sp, #232]
  442468:	add	x0, sp, #0xf8
  44246c:	mov	x2, x0
  442470:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442474:	add	x1, x0, #0xae8
  442478:	mov	x0, x3
  44247c:	bl	40b870 <sd_device_get_sysattr_value@plt>
  442480:	str	w0, [sp, #104]
  442484:	ldr	w0, [sp, #104]
  442488:	cmp	w0, #0x0
  44248c:	b.ge	442550 <builtin_usb_id+0x4ec>  // b.tcont
  442490:	str	xzr, [sp, #344]
  442494:	ldr	x0, [sp, #232]
  442498:	str	x0, [sp, #432]
  44249c:	mov	w0, #0x7                   	// #7
  4424a0:	str	w0, [sp, #176]
  4424a4:	ldr	w0, [sp, #104]
  4424a8:	str	w0, [sp, #180]
  4424ac:	ldr	x0, [sp, #432]
  4424b0:	cmp	x0, #0x0
  4424b4:	b.eq	4424f0 <builtin_usb_id+0x48c>  // b.none
  4424b8:	mov	w0, #0x1                   	// #1
  4424bc:	bl	40be30 <log_get_max_level_realm@plt>
  4424c0:	mov	w1, w0
  4424c4:	ldr	w0, [sp, #176]
  4424c8:	cmp	w0, w1
  4424cc:	cset	w0, le
  4424d0:	and	w0, w0, #0xff
  4424d4:	and	x0, x0, #0xff
  4424d8:	cmp	x0, #0x0
  4424dc:	b.eq	4424f0 <builtin_usb_id+0x48c>  // b.none
  4424e0:	add	x0, sp, #0x158
  4424e4:	mov	x1, x0
  4424e8:	ldr	x0, [sp, #432]
  4424ec:	bl	40aba0 <sd_device_get_sysname@plt>
  4424f0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4424f4:	add	x2, x0, #0x953
  4424f8:	ldr	x0, [sp, #344]
  4424fc:	cmp	x0, #0x0
  442500:	b.eq	442510 <builtin_usb_id+0x4ac>  // b.none
  442504:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442508:	add	x0, x0, #0x9c8
  44250c:	b	442514 <builtin_usb_id+0x4b0>
  442510:	mov	x0, #0x0                   	// #0
  442514:	ldr	x3, [sp, #344]
  442518:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  44251c:	add	x1, x1, #0xaf8
  442520:	str	x1, [sp, #8]
  442524:	str	xzr, [sp]
  442528:	mov	x7, #0x0                   	// #0
  44252c:	mov	x6, x3
  442530:	mov	x5, x0
  442534:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442538:	add	x4, x0, #0xeb0
  44253c:	mov	w3, #0x11e                 	// #286
  442540:	ldr	w1, [sp, #180]
  442544:	ldr	w0, [sp, #176]
  442548:	bl	40b020 <log_object_internal@plt>
  44254c:	b	4434b4 <builtin_usb_id+0x1450>
  442550:	ldr	x0, [sp, #248]
  442554:	mov	w2, #0x10                  	// #16
  442558:	mov	x1, #0x0                   	// #0
  44255c:	bl	40b630 <strtoul@plt>
  442560:	str	w0, [sp, #108]
  442564:	ldr	w0, [sp, #108]
  442568:	cmp	w0, #0x8
  44256c:	b.ne	4425ac <builtin_usb_id+0x548>  // b.any
  442570:	ldr	x3, [sp, #232]
  442574:	add	x0, sp, #0x100
  442578:	mov	x2, x0
  44257c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442580:	add	x1, x0, #0xb28
  442584:	mov	x0, x3
  442588:	bl	40b870 <sd_device_get_sysattr_value@plt>
  44258c:	cmp	w0, #0x0
  442590:	b.lt	4425bc <builtin_usb_id+0x558>  // b.tstop
  442594:	ldr	x1, [sp, #256]
  442598:	add	x0, sp, #0x298
  44259c:	mov	x2, #0x3f                  	// #63
  4425a0:	bl	4416a0 <set_usb_mass_storage_ifsubtype>
  4425a4:	str	w0, [sp, #100]
  4425a8:	b	4425bc <builtin_usb_id+0x558>
  4425ac:	add	x0, sp, #0x298
  4425b0:	mov	x2, #0x3f                  	// #63
  4425b4:	ldr	w1, [sp, #108]
  4425b8:	bl	441428 <set_usb_iftype>
  4425bc:	str	xzr, [sp, #344]
  4425c0:	ldr	x0, [sp, #232]
  4425c4:	str	x0, [sp, #368]
  4425c8:	mov	w0, #0x7                   	// #7
  4425cc:	str	w0, [sp, #112]
  4425d0:	str	wzr, [sp, #116]
  4425d4:	ldr	x0, [sp, #368]
  4425d8:	cmp	x0, #0x0
  4425dc:	b.eq	442618 <builtin_usb_id+0x5b4>  // b.none
  4425e0:	mov	w0, #0x1                   	// #1
  4425e4:	bl	40be30 <log_get_max_level_realm@plt>
  4425e8:	mov	w1, w0
  4425ec:	ldr	w0, [sp, #112]
  4425f0:	cmp	w0, w1
  4425f4:	cset	w0, le
  4425f8:	and	w0, w0, #0xff
  4425fc:	and	x0, x0, #0xff
  442600:	cmp	x0, #0x0
  442604:	b.eq	442618 <builtin_usb_id+0x5b4>  // b.none
  442608:	add	x0, sp, #0x158
  44260c:	mov	x1, x0
  442610:	ldr	x0, [sp, #368]
  442614:	bl	40aba0 <sd_device_get_sysname@plt>
  442618:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44261c:	add	x2, x0, #0x953
  442620:	ldr	x0, [sp, #344]
  442624:	cmp	x0, #0x0
  442628:	b.eq	442638 <builtin_usb_id+0x5d4>  // b.none
  44262c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442630:	add	x0, x0, #0x9c8
  442634:	b	44263c <builtin_usb_id+0x5d8>
  442638:	mov	x0, #0x0                   	// #0
  44263c:	ldr	x3, [sp, #344]
  442640:	ldr	w1, [sp, #100]
  442644:	str	w1, [sp, #24]
  442648:	ldr	w1, [sp, #108]
  44264c:	str	w1, [sp, #16]
  442650:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442654:	add	x1, x1, #0xb40
  442658:	str	x1, [sp, #8]
  44265c:	str	xzr, [sp]
  442660:	mov	x7, #0x0                   	// #0
  442664:	mov	x6, x3
  442668:	mov	x5, x0
  44266c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442670:	add	x4, x0, #0xeb0
  442674:	mov	w3, #0x128                 	// #296
  442678:	ldr	w1, [sp, #116]
  44267c:	ldr	w0, [sp, #112]
  442680:	bl	40b020 <log_object_internal@plt>
  442684:	ldr	x4, [sp, #232]
  442688:	add	x0, sp, #0xf0
  44268c:	mov	x3, x0
  442690:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442694:	add	x2, x0, #0xa58
  442698:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44269c:	add	x1, x0, #0xa78
  4426a0:	mov	x0, x4
  4426a4:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  4426a8:	str	w0, [sp, #104]
  4426ac:	ldr	w0, [sp, #104]
  4426b0:	cmp	w0, #0x0
  4426b4:	b.ge	442778 <builtin_usb_id+0x714>  // b.tcont
  4426b8:	str	xzr, [sp, #344]
  4426bc:	ldr	x0, [sp, #232]
  4426c0:	str	x0, [sp, #424]
  4426c4:	mov	w0, #0x7                   	// #7
  4426c8:	str	w0, [sp, #168]
  4426cc:	ldr	w0, [sp, #104]
  4426d0:	str	w0, [sp, #172]
  4426d4:	ldr	x0, [sp, #424]
  4426d8:	cmp	x0, #0x0
  4426dc:	b.eq	442718 <builtin_usb_id+0x6b4>  // b.none
  4426e0:	mov	w0, #0x1                   	// #1
  4426e4:	bl	40be30 <log_get_max_level_realm@plt>
  4426e8:	mov	w1, w0
  4426ec:	ldr	w0, [sp, #168]
  4426f0:	cmp	w0, w1
  4426f4:	cset	w0, le
  4426f8:	and	w0, w0, #0xff
  4426fc:	and	x0, x0, #0xff
  442700:	cmp	x0, #0x0
  442704:	b.eq	442718 <builtin_usb_id+0x6b4>  // b.none
  442708:	add	x0, sp, #0x158
  44270c:	mov	x1, x0
  442710:	ldr	x0, [sp, #424]
  442714:	bl	40aba0 <sd_device_get_sysname@plt>
  442718:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44271c:	add	x2, x0, #0x953
  442720:	ldr	x0, [sp, #344]
  442724:	cmp	x0, #0x0
  442728:	b.eq	442738 <builtin_usb_id+0x6d4>  // b.none
  44272c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442730:	add	x0, x0, #0x9c8
  442734:	b	44273c <builtin_usb_id+0x6d8>
  442738:	mov	x0, #0x0                   	// #0
  44273c:	ldr	x3, [sp, #344]
  442740:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442744:	add	x1, x1, #0xb58
  442748:	str	x1, [sp, #8]
  44274c:	str	xzr, [sp]
  442750:	mov	x7, #0x0                   	// #0
  442754:	mov	x6, x3
  442758:	mov	x5, x0
  44275c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442760:	add	x4, x0, #0xeb0
  442764:	mov	w3, #0x12d                 	// #301
  442768:	ldr	w1, [sp, #172]
  44276c:	ldr	w0, [sp, #168]
  442770:	bl	40b020 <log_object_internal@plt>
  442774:	b	4434b4 <builtin_usb_id+0x1450>
  442778:	ldr	x0, [sp, #240]
  44277c:	add	x1, sp, #0x818
  442780:	mov	x2, #0x200                 	// #512
  442784:	bl	44197c <dev_if_packed_info>
  442788:	strb	wzr, [sp, #83]
  44278c:	ldr	w0, [sp, #100]
  442790:	cmp	w0, #0x2
  442794:	b.eq	4427a4 <builtin_usb_id+0x740>  // b.none
  442798:	ldr	w0, [sp, #100]
  44279c:	cmp	w0, #0x6
  4427a0:	b.ne	4427ac <builtin_usb_id+0x748>  // b.any
  4427a4:	mov	w0, #0x1                   	// #1
  4427a8:	strb	w0, [sp, #83]
  4427ac:	nop
  4427b0:	ldrb	w0, [sp, #83]
  4427b4:	cmp	w0, #0x0
  4427b8:	b.eq	442e14 <builtin_usb_id+0xdb0>  // b.none
  4427bc:	add	x0, sp, #0x128
  4427c0:	mov	x3, x0
  4427c4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4427c8:	add	x2, x0, #0xb80
  4427cc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4427d0:	add	x1, x0, #0x920
  4427d4:	ldr	x0, [sp, #72]
  4427d8:	bl	40a4e0 <sd_device_get_parent_with_subsystem_devtype@plt>
  4427dc:	str	w0, [sp, #104]
  4427e0:	ldr	w0, [sp, #104]
  4427e4:	cmp	w0, #0x0
  4427e8:	b.ge	4428ac <builtin_usb_id+0x848>  // b.tcont
  4427ec:	str	xzr, [sp, #344]
  4427f0:	ldr	x0, [sp, #72]
  4427f4:	str	x0, [sp, #416]
  4427f8:	mov	w0, #0x7                   	// #7
  4427fc:	str	w0, [sp, #160]
  442800:	ldr	w0, [sp, #104]
  442804:	str	w0, [sp, #164]
  442808:	ldr	x0, [sp, #416]
  44280c:	cmp	x0, #0x0
  442810:	b.eq	44284c <builtin_usb_id+0x7e8>  // b.none
  442814:	mov	w0, #0x1                   	// #1
  442818:	bl	40be30 <log_get_max_level_realm@plt>
  44281c:	mov	w1, w0
  442820:	ldr	w0, [sp, #160]
  442824:	cmp	w0, w1
  442828:	cset	w0, le
  44282c:	and	w0, w0, #0xff
  442830:	and	x0, x0, #0xff
  442834:	cmp	x0, #0x0
  442838:	b.eq	44284c <builtin_usb_id+0x7e8>  // b.none
  44283c:	add	x0, sp, #0x158
  442840:	mov	x1, x0
  442844:	ldr	x0, [sp, #416]
  442848:	bl	40aba0 <sd_device_get_sysname@plt>
  44284c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442850:	add	x2, x0, #0x953
  442854:	ldr	x0, [sp, #344]
  442858:	cmp	x0, #0x0
  44285c:	b.eq	44286c <builtin_usb_id+0x808>  // b.none
  442860:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442864:	add	x0, x0, #0x9c8
  442868:	b	442870 <builtin_usb_id+0x80c>
  44286c:	mov	x0, #0x0                   	// #0
  442870:	ldr	x3, [sp, #344]
  442874:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442878:	add	x1, x1, #0xb90
  44287c:	str	x1, [sp, #8]
  442880:	str	xzr, [sp]
  442884:	mov	x7, #0x0                   	// #0
  442888:	mov	x6, x3
  44288c:	mov	x5, x0
  442890:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442894:	add	x4, x0, #0xeb0
  442898:	mov	w3, #0x13b                 	// #315
  44289c:	ldr	w1, [sp, #164]
  4428a0:	ldr	w0, [sp, #160]
  4428a4:	bl	40b020 <log_object_internal@plt>
  4428a8:	b	442e20 <builtin_usb_id+0xdbc>
  4428ac:	ldr	x0, [sp, #296]
  4428b0:	add	x1, sp, #0x130
  4428b4:	bl	40aba0 <sd_device_get_sysname@plt>
  4428b8:	cmp	w0, #0x0
  4428bc:	b.lt	442e1c <builtin_usb_id+0xdb8>  // b.tstop
  4428c0:	ldr	x6, [sp, #304]
  4428c4:	add	x3, sp, #0x60
  4428c8:	add	x2, sp, #0x5c
  4428cc:	add	x1, sp, #0x58
  4428d0:	add	x0, sp, #0x54
  4428d4:	mov	x5, x3
  4428d8:	mov	x4, x2
  4428dc:	mov	x3, x1
  4428e0:	mov	x2, x0
  4428e4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4428e8:	add	x1, x0, #0xbb8
  4428ec:	mov	x0, x6
  4428f0:	bl	40add0 <__isoc99_sscanf@plt>
  4428f4:	cmp	w0, #0x4
  4428f8:	b.eq	4429b8 <builtin_usb_id+0x954>  // b.none
  4428fc:	str	xzr, [sp, #344]
  442900:	ldr	x0, [sp, #296]
  442904:	str	x0, [sp, #408]
  442908:	mov	w0, #0x7                   	// #7
  44290c:	str	w0, [sp, #152]
  442910:	str	wzr, [sp, #156]
  442914:	ldr	x0, [sp, #408]
  442918:	cmp	x0, #0x0
  44291c:	b.eq	442958 <builtin_usb_id+0x8f4>  // b.none
  442920:	mov	w0, #0x1                   	// #1
  442924:	bl	40be30 <log_get_max_level_realm@plt>
  442928:	mov	w1, w0
  44292c:	ldr	w0, [sp, #152]
  442930:	cmp	w0, w1
  442934:	cset	w0, le
  442938:	and	w0, w0, #0xff
  44293c:	and	x0, x0, #0xff
  442940:	cmp	x0, #0x0
  442944:	b.eq	442958 <builtin_usb_id+0x8f4>  // b.none
  442948:	add	x0, sp, #0x158
  44294c:	mov	x1, x0
  442950:	ldr	x0, [sp, #408]
  442954:	bl	40aba0 <sd_device_get_sysname@plt>
  442958:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44295c:	add	x2, x0, #0x953
  442960:	ldr	x0, [sp, #344]
  442964:	cmp	x0, #0x0
  442968:	b.eq	442978 <builtin_usb_id+0x914>  // b.none
  44296c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442970:	add	x0, x0, #0x9c8
  442974:	b	44297c <builtin_usb_id+0x918>
  442978:	mov	x0, #0x0                   	// #0
  44297c:	ldr	x3, [sp, #344]
  442980:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442984:	add	x1, x1, #0xbc8
  442988:	str	x1, [sp, #8]
  44298c:	str	xzr, [sp]
  442990:	mov	x7, #0x0                   	// #0
  442994:	mov	x6, x3
  442998:	mov	x5, x0
  44299c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4429a0:	add	x4, x0, #0xeb0
  4429a4:	mov	w3, #0x141                 	// #321
  4429a8:	ldr	w1, [sp, #156]
  4429ac:	ldr	w0, [sp, #152]
  4429b0:	bl	40b020 <log_object_internal@plt>
  4429b4:	b	442e20 <builtin_usb_id+0xdbc>
  4429b8:	ldr	x3, [sp, #296]
  4429bc:	add	x0, sp, #0x140
  4429c0:	mov	x2, x0
  4429c4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4429c8:	add	x1, x0, #0xbe0
  4429cc:	mov	x0, x3
  4429d0:	bl	40b870 <sd_device_get_sysattr_value@plt>
  4429d4:	str	w0, [sp, #104]
  4429d8:	ldr	w0, [sp, #104]
  4429dc:	cmp	w0, #0x0
  4429e0:	b.ge	442aa4 <builtin_usb_id+0xa40>  // b.tcont
  4429e4:	str	xzr, [sp, #344]
  4429e8:	ldr	x0, [sp, #296]
  4429ec:	str	x0, [sp, #400]
  4429f0:	mov	w0, #0x7                   	// #7
  4429f4:	str	w0, [sp, #144]
  4429f8:	ldr	w0, [sp, #104]
  4429fc:	str	w0, [sp, #148]
  442a00:	ldr	x0, [sp, #400]
  442a04:	cmp	x0, #0x0
  442a08:	b.eq	442a44 <builtin_usb_id+0x9e0>  // b.none
  442a0c:	mov	w0, #0x1                   	// #1
  442a10:	bl	40be30 <log_get_max_level_realm@plt>
  442a14:	mov	w1, w0
  442a18:	ldr	w0, [sp, #144]
  442a1c:	cmp	w0, w1
  442a20:	cset	w0, le
  442a24:	and	w0, w0, #0xff
  442a28:	and	x0, x0, #0xff
  442a2c:	cmp	x0, #0x0
  442a30:	b.eq	442a44 <builtin_usb_id+0x9e0>  // b.none
  442a34:	add	x0, sp, #0x158
  442a38:	mov	x1, x0
  442a3c:	ldr	x0, [sp, #400]
  442a40:	bl	40aba0 <sd_device_get_sysname@plt>
  442a44:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442a48:	add	x2, x0, #0x953
  442a4c:	ldr	x0, [sp, #344]
  442a50:	cmp	x0, #0x0
  442a54:	b.eq	442a64 <builtin_usb_id+0xa00>  // b.none
  442a58:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442a5c:	add	x0, x0, #0x9c8
  442a60:	b	442a68 <builtin_usb_id+0xa04>
  442a64:	mov	x0, #0x0                   	// #0
  442a68:	ldr	x3, [sp, #344]
  442a6c:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442a70:	add	x1, x1, #0xbe8
  442a74:	str	x1, [sp, #8]
  442a78:	str	xzr, [sp]
  442a7c:	mov	x7, #0x0                   	// #0
  442a80:	mov	x6, x3
  442a84:	mov	x5, x0
  442a88:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442a8c:	add	x4, x0, #0xeb0
  442a90:	mov	w3, #0x148                 	// #328
  442a94:	ldr	w1, [sp, #148]
  442a98:	ldr	w0, [sp, #144]
  442a9c:	bl	40b020 <log_object_internal@plt>
  442aa0:	b	442e20 <builtin_usb_id+0xdbc>
  442aa4:	ldr	x0, [sp, #320]
  442aa8:	add	x1, sp, #0x318
  442aac:	mov	x2, #0x100                 	// #256
  442ab0:	bl	40b0c0 <udev_util_encode_string@plt>
  442ab4:	ldr	x0, [sp, #320]
  442ab8:	add	x1, sp, #0x1d8
  442abc:	mov	x2, #0x3f                  	// #63
  442ac0:	bl	40a3a0 <util_replace_whitespace@plt>
  442ac4:	add	x0, sp, #0x1d8
  442ac8:	mov	x1, #0x0                   	// #0
  442acc:	bl	40a7d0 <util_replace_chars@plt>
  442ad0:	ldr	x3, [sp, #296]
  442ad4:	add	x0, sp, #0x138
  442ad8:	mov	x2, x0
  442adc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442ae0:	add	x1, x0, #0xc10
  442ae4:	mov	x0, x3
  442ae8:	bl	40b870 <sd_device_get_sysattr_value@plt>
  442aec:	str	w0, [sp, #104]
  442af0:	ldr	w0, [sp, #104]
  442af4:	cmp	w0, #0x0
  442af8:	b.ge	442bbc <builtin_usb_id+0xb58>  // b.tcont
  442afc:	str	xzr, [sp, #344]
  442b00:	ldr	x0, [sp, #296]
  442b04:	str	x0, [sp, #392]
  442b08:	mov	w0, #0x7                   	// #7
  442b0c:	str	w0, [sp, #136]
  442b10:	ldr	w0, [sp, #104]
  442b14:	str	w0, [sp, #140]
  442b18:	ldr	x0, [sp, #392]
  442b1c:	cmp	x0, #0x0
  442b20:	b.eq	442b5c <builtin_usb_id+0xaf8>  // b.none
  442b24:	mov	w0, #0x1                   	// #1
  442b28:	bl	40be30 <log_get_max_level_realm@plt>
  442b2c:	mov	w1, w0
  442b30:	ldr	w0, [sp, #136]
  442b34:	cmp	w0, w1
  442b38:	cset	w0, le
  442b3c:	and	w0, w0, #0xff
  442b40:	and	x0, x0, #0xff
  442b44:	cmp	x0, #0x0
  442b48:	b.eq	442b5c <builtin_usb_id+0xaf8>  // b.none
  442b4c:	add	x0, sp, #0x158
  442b50:	mov	x1, x0
  442b54:	ldr	x0, [sp, #392]
  442b58:	bl	40aba0 <sd_device_get_sysname@plt>
  442b5c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442b60:	add	x2, x0, #0x953
  442b64:	ldr	x0, [sp, #344]
  442b68:	cmp	x0, #0x0
  442b6c:	b.eq	442b7c <builtin_usb_id+0xb18>  // b.none
  442b70:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442b74:	add	x0, x0, #0x9c8
  442b78:	b	442b80 <builtin_usb_id+0xb1c>
  442b7c:	mov	x0, #0x0                   	// #0
  442b80:	ldr	x3, [sp, #344]
  442b84:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442b88:	add	x1, x1, #0xc18
  442b8c:	str	x1, [sp, #8]
  442b90:	str	xzr, [sp]
  442b94:	mov	x7, #0x0                   	// #0
  442b98:	mov	x6, x3
  442b9c:	mov	x5, x0
  442ba0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442ba4:	add	x4, x0, #0xeb0
  442ba8:	mov	w3, #0x151                 	// #337
  442bac:	ldr	w1, [sp, #140]
  442bb0:	ldr	w0, [sp, #136]
  442bb4:	bl	40b020 <log_object_internal@plt>
  442bb8:	b	442e20 <builtin_usb_id+0xdbc>
  442bbc:	ldr	x0, [sp, #312]
  442bc0:	add	x1, sp, #0x418
  442bc4:	mov	x2, #0x100                 	// #256
  442bc8:	bl	40b0c0 <udev_util_encode_string@plt>
  442bcc:	ldr	x0, [sp, #312]
  442bd0:	add	x1, sp, #0x218
  442bd4:	mov	x2, #0x3f                  	// #63
  442bd8:	bl	40a3a0 <util_replace_whitespace@plt>
  442bdc:	add	x0, sp, #0x218
  442be0:	mov	x1, #0x0                   	// #0
  442be4:	bl	40a7d0 <util_replace_chars@plt>
  442be8:	ldr	x3, [sp, #296]
  442bec:	add	x0, sp, #0x148
  442bf0:	mov	x2, x0
  442bf4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442bf8:	add	x1, x0, #0xc40
  442bfc:	mov	x0, x3
  442c00:	bl	40b870 <sd_device_get_sysattr_value@plt>
  442c04:	str	w0, [sp, #104]
  442c08:	ldr	w0, [sp, #104]
  442c0c:	cmp	w0, #0x0
  442c10:	b.ge	442cd4 <builtin_usb_id+0xc70>  // b.tcont
  442c14:	str	xzr, [sp, #344]
  442c18:	ldr	x0, [sp, #296]
  442c1c:	str	x0, [sp, #384]
  442c20:	mov	w0, #0x7                   	// #7
  442c24:	str	w0, [sp, #128]
  442c28:	ldr	w0, [sp, #104]
  442c2c:	str	w0, [sp, #132]
  442c30:	ldr	x0, [sp, #384]
  442c34:	cmp	x0, #0x0
  442c38:	b.eq	442c74 <builtin_usb_id+0xc10>  // b.none
  442c3c:	mov	w0, #0x1                   	// #1
  442c40:	bl	40be30 <log_get_max_level_realm@plt>
  442c44:	mov	w1, w0
  442c48:	ldr	w0, [sp, #128]
  442c4c:	cmp	w0, w1
  442c50:	cset	w0, le
  442c54:	and	w0, w0, #0xff
  442c58:	and	x0, x0, #0xff
  442c5c:	cmp	x0, #0x0
  442c60:	b.eq	442c74 <builtin_usb_id+0xc10>  // b.none
  442c64:	add	x0, sp, #0x158
  442c68:	mov	x1, x0
  442c6c:	ldr	x0, [sp, #384]
  442c70:	bl	40aba0 <sd_device_get_sysname@plt>
  442c74:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442c78:	add	x2, x0, #0x953
  442c7c:	ldr	x0, [sp, #344]
  442c80:	cmp	x0, #0x0
  442c84:	b.eq	442c94 <builtin_usb_id+0xc30>  // b.none
  442c88:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442c8c:	add	x0, x0, #0x9c8
  442c90:	b	442c98 <builtin_usb_id+0xc34>
  442c94:	mov	x0, #0x0                   	// #0
  442c98:	ldr	x3, [sp, #344]
  442c9c:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442ca0:	add	x1, x1, #0xc48
  442ca4:	str	x1, [sp, #8]
  442ca8:	str	xzr, [sp]
  442cac:	mov	x7, #0x0                   	// #0
  442cb0:	mov	x6, x3
  442cb4:	mov	x5, x0
  442cb8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442cbc:	add	x4, x0, #0xeb0
  442cc0:	mov	w3, #0x15a                 	// #346
  442cc4:	ldr	w1, [sp, #132]
  442cc8:	ldr	w0, [sp, #128]
  442ccc:	bl	40b020 <log_object_internal@plt>
  442cd0:	b	442e20 <builtin_usb_id+0xdbc>
  442cd4:	ldr	x1, [sp, #328]
  442cd8:	add	x0, sp, #0x298
  442cdc:	mov	x2, #0x3f                  	// #63
  442ce0:	bl	441804 <set_scsi_type>
  442ce4:	ldr	x3, [sp, #296]
  442ce8:	add	x0, sp, #0x150
  442cec:	mov	x2, x0
  442cf0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442cf4:	add	x1, x0, #0xc70
  442cf8:	mov	x0, x3
  442cfc:	bl	40b870 <sd_device_get_sysattr_value@plt>
  442d00:	str	w0, [sp, #104]
  442d04:	ldr	w0, [sp, #104]
  442d08:	cmp	w0, #0x0
  442d0c:	b.ge	442dd0 <builtin_usb_id+0xd6c>  // b.tcont
  442d10:	str	xzr, [sp, #344]
  442d14:	ldr	x0, [sp, #296]
  442d18:	str	x0, [sp, #376]
  442d1c:	mov	w0, #0x7                   	// #7
  442d20:	str	w0, [sp, #120]
  442d24:	ldr	w0, [sp, #104]
  442d28:	str	w0, [sp, #124]
  442d2c:	ldr	x0, [sp, #376]
  442d30:	cmp	x0, #0x0
  442d34:	b.eq	442d70 <builtin_usb_id+0xd0c>  // b.none
  442d38:	mov	w0, #0x1                   	// #1
  442d3c:	bl	40be30 <log_get_max_level_realm@plt>
  442d40:	mov	w1, w0
  442d44:	ldr	w0, [sp, #120]
  442d48:	cmp	w0, w1
  442d4c:	cset	w0, le
  442d50:	and	w0, w0, #0xff
  442d54:	and	x0, x0, #0xff
  442d58:	cmp	x0, #0x0
  442d5c:	b.eq	442d70 <builtin_usb_id+0xd0c>  // b.none
  442d60:	add	x0, sp, #0x158
  442d64:	mov	x1, x0
  442d68:	ldr	x0, [sp, #376]
  442d6c:	bl	40aba0 <sd_device_get_sysname@plt>
  442d70:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442d74:	add	x2, x0, #0x953
  442d78:	ldr	x0, [sp, #344]
  442d7c:	cmp	x0, #0x0
  442d80:	b.eq	442d90 <builtin_usb_id+0xd2c>  // b.none
  442d84:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442d88:	add	x0, x0, #0x9c8
  442d8c:	b	442d94 <builtin_usb_id+0xd30>
  442d90:	mov	x0, #0x0                   	// #0
  442d94:	ldr	x3, [sp, #344]
  442d98:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442d9c:	add	x1, x1, #0xc78
  442da0:	str	x1, [sp, #8]
  442da4:	str	xzr, [sp]
  442da8:	mov	x7, #0x0                   	// #0
  442dac:	mov	x6, x3
  442db0:	mov	x5, x0
  442db4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442db8:	add	x4, x0, #0xeb0
  442dbc:	mov	w3, #0x161                 	// #353
  442dc0:	ldr	w1, [sp, #124]
  442dc4:	ldr	w0, [sp, #120]
  442dc8:	bl	40b020 <log_object_internal@plt>
  442dcc:	b	442e20 <builtin_usb_id+0xdbc>
  442dd0:	ldr	x0, [sp, #336]
  442dd4:	add	x1, sp, #0x258
  442dd8:	mov	x2, #0x3f                  	// #63
  442ddc:	bl	40a3a0 <util_replace_whitespace@plt>
  442de0:	add	x0, sp, #0x258
  442de4:	mov	x1, #0x0                   	// #0
  442de8:	bl	40a7d0 <util_replace_chars@plt>
  442dec:	ldr	w0, [sp, #92]
  442df0:	ldr	w1, [sp, #96]
  442df4:	add	x4, sp, #0x2d8
  442df8:	mov	w3, w1
  442dfc:	mov	w2, w0
  442e00:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442e04:	add	x1, x0, #0xca8
  442e08:	mov	x0, x4
  442e0c:	bl	40bad0 <sprintf@plt>
  442e10:	b	442e20 <builtin_usb_id+0xdbc>
  442e14:	nop
  442e18:	b	442e20 <builtin_usb_id+0xdbc>
  442e1c:	nop
  442e20:	ldr	x3, [sp, #240]
  442e24:	add	x0, sp, #0x148
  442e28:	mov	x2, x0
  442e2c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442e30:	add	x1, x0, #0xcb0
  442e34:	mov	x0, x3
  442e38:	bl	40b870 <sd_device_get_sysattr_value@plt>
  442e3c:	str	w0, [sp, #104]
  442e40:	ldr	w0, [sp, #104]
  442e44:	cmp	w0, #0x0
  442e48:	b.ge	442f0c <builtin_usb_id+0xea8>  // b.tcont
  442e4c:	str	xzr, [sp, #344]
  442e50:	ldr	x0, [sp, #240]
  442e54:	str	x0, [sp, #464]
  442e58:	mov	w0, #0x7                   	// #7
  442e5c:	str	w0, [sp, #208]
  442e60:	ldr	w0, [sp, #104]
  442e64:	str	w0, [sp, #212]
  442e68:	ldr	x0, [sp, #464]
  442e6c:	cmp	x0, #0x0
  442e70:	b.eq	442eac <builtin_usb_id+0xe48>  // b.none
  442e74:	mov	w0, #0x1                   	// #1
  442e78:	bl	40be30 <log_get_max_level_realm@plt>
  442e7c:	mov	w1, w0
  442e80:	ldr	w0, [sp, #208]
  442e84:	cmp	w0, w1
  442e88:	cset	w0, le
  442e8c:	and	w0, w0, #0xff
  442e90:	and	x0, x0, #0xff
  442e94:	cmp	x0, #0x0
  442e98:	b.eq	442eac <builtin_usb_id+0xe48>  // b.none
  442e9c:	add	x0, sp, #0x158
  442ea0:	mov	x1, x0
  442ea4:	ldr	x0, [sp, #464]
  442ea8:	bl	40aba0 <sd_device_get_sysname@plt>
  442eac:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442eb0:	add	x2, x0, #0x953
  442eb4:	ldr	x0, [sp, #344]
  442eb8:	cmp	x0, #0x0
  442ebc:	b.eq	442ecc <builtin_usb_id+0xe68>  // b.none
  442ec0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442ec4:	add	x0, x0, #0x9c8
  442ec8:	b	442ed0 <builtin_usb_id+0xe6c>
  442ecc:	mov	x0, #0x0                   	// #0
  442ed0:	ldr	x3, [sp, #344]
  442ed4:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442ed8:	add	x1, x1, #0xcc0
  442edc:	str	x1, [sp, #8]
  442ee0:	str	xzr, [sp]
  442ee4:	mov	x7, #0x0                   	// #0
  442ee8:	mov	x6, x3
  442eec:	mov	x5, x0
  442ef0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442ef4:	add	x4, x0, #0xeb0
  442ef8:	mov	w3, #0x171                 	// #369
  442efc:	ldr	w1, [sp, #212]
  442f00:	ldr	w0, [sp, #208]
  442f04:	bl	40b020 <log_object_internal@plt>
  442f08:	b	4434b4 <builtin_usb_id+0x1450>
  442f0c:	ldr	x3, [sp, #240]
  442f10:	add	x0, sp, #0x150
  442f14:	mov	x2, x0
  442f18:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442f1c:	add	x1, x0, #0xce8
  442f20:	mov	x0, x3
  442f24:	bl	40b870 <sd_device_get_sysattr_value@plt>
  442f28:	str	w0, [sp, #104]
  442f2c:	ldr	w0, [sp, #104]
  442f30:	cmp	w0, #0x0
  442f34:	b.ge	442ff8 <builtin_usb_id+0xf94>  // b.tcont
  442f38:	str	xzr, [sp, #344]
  442f3c:	ldr	x0, [sp, #240]
  442f40:	str	x0, [sp, #456]
  442f44:	mov	w0, #0x7                   	// #7
  442f48:	str	w0, [sp, #200]
  442f4c:	ldr	w0, [sp, #104]
  442f50:	str	w0, [sp, #204]
  442f54:	ldr	x0, [sp, #456]
  442f58:	cmp	x0, #0x0
  442f5c:	b.eq	442f98 <builtin_usb_id+0xf34>  // b.none
  442f60:	mov	w0, #0x1                   	// #1
  442f64:	bl	40be30 <log_get_max_level_realm@plt>
  442f68:	mov	w1, w0
  442f6c:	ldr	w0, [sp, #200]
  442f70:	cmp	w0, w1
  442f74:	cset	w0, le
  442f78:	and	w0, w0, #0xff
  442f7c:	and	x0, x0, #0xff
  442f80:	cmp	x0, #0x0
  442f84:	b.eq	442f98 <builtin_usb_id+0xf34>  // b.none
  442f88:	add	x0, sp, #0x158
  442f8c:	mov	x1, x0
  442f90:	ldr	x0, [sp, #456]
  442f94:	bl	40aba0 <sd_device_get_sysname@plt>
  442f98:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442f9c:	add	x2, x0, #0x953
  442fa0:	ldr	x0, [sp, #344]
  442fa4:	cmp	x0, #0x0
  442fa8:	b.eq	442fb8 <builtin_usb_id+0xf54>  // b.none
  442fac:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442fb0:	add	x0, x0, #0x9c8
  442fb4:	b	442fbc <builtin_usb_id+0xf58>
  442fb8:	mov	x0, #0x0                   	// #0
  442fbc:	ldr	x3, [sp, #344]
  442fc0:	adrp	x1, 45b000 <__PRETTY_FUNCTION__.10053>
  442fc4:	add	x1, x1, #0xcf8
  442fc8:	str	x1, [sp, #8]
  442fcc:	str	xzr, [sp]
  442fd0:	mov	x7, #0x0                   	// #0
  442fd4:	mov	x6, x3
  442fd8:	mov	x5, x0
  442fdc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  442fe0:	add	x4, x0, #0xeb0
  442fe4:	mov	w3, #0x175                 	// #373
  442fe8:	ldr	w1, [sp, #204]
  442fec:	ldr	w0, [sp, #200]
  442ff0:	bl	40b020 <log_object_internal@plt>
  442ff4:	b	4434b4 <builtin_usb_id+0x1450>
  442ff8:	ldrb	w0, [sp, #472]
  442ffc:	cmp	w0, #0x0
  443000:	b.ne	44305c <builtin_usb_id+0xff8>  // b.any
  443004:	ldr	x3, [sp, #240]
  443008:	add	x0, sp, #0x158
  44300c:	mov	x2, x0
  443010:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443014:	add	x1, x0, #0xd20
  443018:	mov	x0, x3
  44301c:	bl	40b870 <sd_device_get_sysattr_value@plt>
  443020:	cmp	w0, #0x0
  443024:	b.ge	443030 <builtin_usb_id+0xfcc>  // b.tcont
  443028:	ldr	x0, [sp, #328]
  44302c:	str	x0, [sp, #344]
  443030:	ldr	x0, [sp, #344]
  443034:	add	x1, sp, #0x318
  443038:	mov	x2, #0x100                 	// #256
  44303c:	bl	40b0c0 <udev_util_encode_string@plt>
  443040:	ldr	x0, [sp, #344]
  443044:	add	x1, sp, #0x1d8
  443048:	mov	x2, #0x3f                  	// #63
  44304c:	bl	40a3a0 <util_replace_whitespace@plt>
  443050:	add	x0, sp, #0x1d8
  443054:	mov	x1, #0x0                   	// #0
  443058:	bl	40a7d0 <util_replace_chars@plt>
  44305c:	ldrb	w0, [sp, #536]
  443060:	cmp	w0, #0x0
  443064:	b.ne	4430c0 <builtin_usb_id+0x105c>  // b.any
  443068:	ldr	x3, [sp, #240]
  44306c:	add	x0, sp, #0x158
  443070:	mov	x2, x0
  443074:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443078:	add	x1, x0, #0xd30
  44307c:	mov	x0, x3
  443080:	bl	40b870 <sd_device_get_sysattr_value@plt>
  443084:	cmp	w0, #0x0
  443088:	b.ge	443094 <builtin_usb_id+0x1030>  // b.tcont
  44308c:	ldr	x0, [sp, #336]
  443090:	str	x0, [sp, #344]
  443094:	ldr	x0, [sp, #344]
  443098:	add	x1, sp, #0x418
  44309c:	mov	x2, #0x100                 	// #256
  4430a0:	bl	40b0c0 <udev_util_encode_string@plt>
  4430a4:	ldr	x0, [sp, #344]
  4430a8:	add	x1, sp, #0x218
  4430ac:	mov	x2, #0x3f                  	// #63
  4430b0:	bl	40a3a0 <util_replace_whitespace@plt>
  4430b4:	add	x0, sp, #0x218
  4430b8:	mov	x1, #0x0                   	// #0
  4430bc:	bl	40a7d0 <util_replace_chars@plt>
  4430c0:	ldrb	w0, [sp, #600]
  4430c4:	cmp	w0, #0x0
  4430c8:	b.ne	44310c <builtin_usb_id+0x10a8>  // b.any
  4430cc:	ldr	x3, [sp, #240]
  4430d0:	add	x0, sp, #0x158
  4430d4:	mov	x2, x0
  4430d8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4430dc:	add	x1, x0, #0xd38
  4430e0:	mov	x0, x3
  4430e4:	bl	40b870 <sd_device_get_sysattr_value@plt>
  4430e8:	cmp	w0, #0x0
  4430ec:	b.lt	44310c <builtin_usb_id+0x10a8>  // b.tstop
  4430f0:	ldr	x0, [sp, #344]
  4430f4:	add	x1, sp, #0x258
  4430f8:	mov	x2, #0x3f                  	// #63
  4430fc:	bl	40a3a0 <util_replace_whitespace@plt>
  443100:	add	x0, sp, #0x258
  443104:	mov	x1, #0x0                   	// #0
  443108:	bl	40a7d0 <util_replace_chars@plt>
  44310c:	ldrb	w0, [sp, #1560]
  443110:	cmp	w0, #0x0
  443114:	b.ne	4431c8 <builtin_usb_id+0x1164>  // b.any
  443118:	ldr	x3, [sp, #240]
  44311c:	add	x0, sp, #0x158
  443120:	mov	x2, x0
  443124:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443128:	add	x1, x0, #0xd48
  44312c:	mov	x0, x3
  443130:	bl	40b870 <sd_device_get_sysattr_value@plt>
  443134:	cmp	w0, #0x0
  443138:	b.lt	4431c8 <builtin_usb_id+0x1164>  // b.tstop
  44313c:	ldr	x0, [sp, #344]
  443140:	str	x0, [sp, #360]
  443144:	b	443190 <builtin_usb_id+0x112c>
  443148:	ldr	x0, [sp, #360]
  44314c:	ldrb	w0, [x0]
  443150:	cmp	w0, #0x1f
  443154:	b.ls	44317c <builtin_usb_id+0x1118>  // b.plast
  443158:	ldr	x0, [sp, #360]
  44315c:	ldrb	w0, [x0]
  443160:	sxtb	w0, w0
  443164:	cmp	w0, #0x0
  443168:	b.lt	44317c <builtin_usb_id+0x1118>  // b.tstop
  44316c:	ldr	x0, [sp, #360]
  443170:	ldrb	w0, [x0]
  443174:	cmp	w0, #0x2c
  443178:	b.ne	443184 <builtin_usb_id+0x1120>  // b.any
  44317c:	str	xzr, [sp, #344]
  443180:	b	4431a0 <builtin_usb_id+0x113c>
  443184:	ldr	x0, [sp, #360]
  443188:	add	x0, x0, #0x1
  44318c:	str	x0, [sp, #360]
  443190:	ldr	x0, [sp, #360]
  443194:	ldrb	w0, [x0]
  443198:	cmp	w0, #0x0
  44319c:	b.ne	443148 <builtin_usb_id+0x10e4>  // b.any
  4431a0:	ldr	x0, [sp, #344]
  4431a4:	cmp	x0, #0x0
  4431a8:	b.eq	4431c8 <builtin_usb_id+0x1164>  // b.none
  4431ac:	ldr	x0, [sp, #344]
  4431b0:	add	x1, sp, #0x618
  4431b4:	mov	x2, #0x1ff                 	// #511
  4431b8:	bl	40a3a0 <util_replace_whitespace@plt>
  4431bc:	add	x0, sp, #0x618
  4431c0:	mov	x1, #0x0                   	// #0
  4431c4:	bl	40a7d0 <util_replace_chars@plt>
  4431c8:	add	x0, sp, #0x518
  4431cc:	str	x0, [sp, #344]
  4431d0:	add	x0, sp, #0x218
  4431d4:	add	x1, sp, #0x1d8
  4431d8:	add	x6, sp, #0x158
  4431dc:	mov	x5, #0x0                   	// #0
  4431e0:	mov	x4, x0
  4431e4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4431e8:	add	x3, x0, #0xd50
  4431ec:	mov	x2, x1
  4431f0:	mov	x1, #0x100                 	// #256
  4431f4:	mov	x0, x6
  4431f8:	bl	40aa50 <strpcpyl@plt>
  4431fc:	str	x0, [sp, #352]
  443200:	add	x0, sp, #0x618
  443204:	bl	4413e8 <isempty>
  443208:	and	w0, w0, #0xff
  44320c:	eor	w0, w0, #0x1
  443210:	and	w0, w0, #0xff
  443214:	cmp	w0, #0x0
  443218:	b.eq	443244 <builtin_usb_id+0x11e0>  // b.none
  44321c:	add	x0, sp, #0x618
  443220:	add	x5, sp, #0x158
  443224:	mov	x4, #0x0                   	// #0
  443228:	mov	x3, x0
  44322c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443230:	add	x2, x0, #0xd50
  443234:	ldr	x1, [sp, #352]
  443238:	mov	x0, x5
  44323c:	bl	40aa50 <strpcpyl@plt>
  443240:	str	x0, [sp, #352]
  443244:	add	x0, sp, #0x2d8
  443248:	bl	4413e8 <isempty>
  44324c:	and	w0, w0, #0xff
  443250:	eor	w0, w0, #0x1
  443254:	and	w0, w0, #0xff
  443258:	cmp	w0, #0x0
  44325c:	b.eq	443284 <builtin_usb_id+0x1220>  // b.none
  443260:	add	x0, sp, #0x2d8
  443264:	add	x5, sp, #0x158
  443268:	mov	x4, #0x0                   	// #0
  44326c:	mov	x3, x0
  443270:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443274:	add	x2, x0, #0xd58
  443278:	ldr	x1, [sp, #352]
  44327c:	mov	x0, x5
  443280:	bl	40aa50 <strpcpyl@plt>
  443284:	add	x0, sp, #0x1d8
  443288:	mov	x3, x0
  44328c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443290:	add	x2, x0, #0xd60
  443294:	ldrb	w1, [sp, #67]
  443298:	ldr	x0, [sp, #72]
  44329c:	bl	436504 <udev_builtin_add_property>
  4432a0:	add	x0, sp, #0x318
  4432a4:	mov	x3, x0
  4432a8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4432ac:	add	x2, x0, #0xd70
  4432b0:	ldrb	w1, [sp, #67]
  4432b4:	ldr	x0, [sp, #72]
  4432b8:	bl	436504 <udev_builtin_add_property>
  4432bc:	ldr	x0, [sp, #328]
  4432c0:	mov	x3, x0
  4432c4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4432c8:	add	x2, x0, #0xd80
  4432cc:	ldrb	w1, [sp, #67]
  4432d0:	ldr	x0, [sp, #72]
  4432d4:	bl	436504 <udev_builtin_add_property>
  4432d8:	add	x0, sp, #0x218
  4432dc:	mov	x3, x0
  4432e0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4432e4:	add	x2, x0, #0xd90
  4432e8:	ldrb	w1, [sp, #67]
  4432ec:	ldr	x0, [sp, #72]
  4432f0:	bl	436504 <udev_builtin_add_property>
  4432f4:	add	x0, sp, #0x418
  4432f8:	mov	x3, x0
  4432fc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443300:	add	x2, x0, #0xda0
  443304:	ldrb	w1, [sp, #67]
  443308:	ldr	x0, [sp, #72]
  44330c:	bl	436504 <udev_builtin_add_property>
  443310:	ldr	x0, [sp, #336]
  443314:	mov	x3, x0
  443318:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44331c:	add	x2, x0, #0xdb0
  443320:	ldrb	w1, [sp, #67]
  443324:	ldr	x0, [sp, #72]
  443328:	bl	436504 <udev_builtin_add_property>
  44332c:	add	x0, sp, #0x258
  443330:	mov	x3, x0
  443334:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443338:	add	x2, x0, #0xdc0
  44333c:	ldrb	w1, [sp, #67]
  443340:	ldr	x0, [sp, #72]
  443344:	bl	436504 <udev_builtin_add_property>
  443348:	add	x0, sp, #0x518
  44334c:	mov	x3, x0
  443350:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443354:	add	x2, x0, #0xdd0
  443358:	ldrb	w1, [sp, #67]
  44335c:	ldr	x0, [sp, #72]
  443360:	bl	436504 <udev_builtin_add_property>
  443364:	add	x0, sp, #0x618
  443368:	bl	4413e8 <isempty>
  44336c:	and	w0, w0, #0xff
  443370:	eor	w0, w0, #0x1
  443374:	and	w0, w0, #0xff
  443378:	cmp	w0, #0x0
  44337c:	b.eq	44339c <builtin_usb_id+0x1338>  // b.none
  443380:	add	x0, sp, #0x618
  443384:	mov	x3, x0
  443388:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44338c:	add	x2, x0, #0xde0
  443390:	ldrb	w1, [sp, #67]
  443394:	ldr	x0, [sp, #72]
  443398:	bl	436504 <udev_builtin_add_property>
  44339c:	add	x0, sp, #0x298
  4433a0:	bl	4413e8 <isempty>
  4433a4:	and	w0, w0, #0xff
  4433a8:	eor	w0, w0, #0x1
  4433ac:	and	w0, w0, #0xff
  4433b0:	cmp	w0, #0x0
  4433b4:	b.eq	4433d4 <builtin_usb_id+0x1370>  // b.none
  4433b8:	add	x0, sp, #0x298
  4433bc:	mov	x3, x0
  4433c0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4433c4:	add	x2, x0, #0xdf0
  4433c8:	ldrb	w1, [sp, #67]
  4433cc:	ldr	x0, [sp, #72]
  4433d0:	bl	436504 <udev_builtin_add_property>
  4433d4:	add	x0, sp, #0x2d8
  4433d8:	bl	4413e8 <isempty>
  4433dc:	and	w0, w0, #0xff
  4433e0:	eor	w0, w0, #0x1
  4433e4:	and	w0, w0, #0xff
  4433e8:	cmp	w0, #0x0
  4433ec:	b.eq	44340c <builtin_usb_id+0x13a8>  // b.none
  4433f0:	add	x0, sp, #0x2d8
  4433f4:	mov	x3, x0
  4433f8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4433fc:	add	x2, x0, #0xdf8
  443400:	ldrb	w1, [sp, #67]
  443404:	ldr	x0, [sp, #72]
  443408:	bl	436504 <udev_builtin_add_property>
  44340c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443410:	add	x3, x0, #0xa78
  443414:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443418:	add	x2, x0, #0xe08
  44341c:	ldrb	w1, [sp, #67]
  443420:	ldr	x0, [sp, #72]
  443424:	bl	436504 <udev_builtin_add_property>
  443428:	add	x0, sp, #0x818
  44342c:	bl	4413e8 <isempty>
  443430:	and	w0, w0, #0xff
  443434:	eor	w0, w0, #0x1
  443438:	and	w0, w0, #0xff
  44343c:	cmp	w0, #0x0
  443440:	b.eq	443460 <builtin_usb_id+0x13fc>  // b.none
  443444:	add	x0, sp, #0x818
  443448:	mov	x3, x0
  44344c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443450:	add	x2, x0, #0xe10
  443454:	ldrb	w1, [sp, #67]
  443458:	ldr	x0, [sp, #72]
  44345c:	bl	436504 <udev_builtin_add_property>
  443460:	ldr	x0, [sp, #216]
  443464:	cmp	x0, #0x0
  443468:	b.eq	443488 <builtin_usb_id+0x1424>  // b.none
  44346c:	ldr	x0, [sp, #216]
  443470:	mov	x3, x0
  443474:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443478:	add	x2, x0, #0xe28
  44347c:	ldrb	w1, [sp, #67]
  443480:	ldr	x0, [sp, #72]
  443484:	bl	436504 <udev_builtin_add_property>
  443488:	ldr	x0, [sp, #224]
  44348c:	cmp	x0, #0x0
  443490:	b.eq	4434b0 <builtin_usb_id+0x144c>  // b.none
  443494:	ldr	x0, [sp, #224]
  443498:	mov	x3, x0
  44349c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4434a0:	add	x2, x0, #0xe40
  4434a4:	ldrb	w1, [sp, #67]
  4434a8:	ldr	x0, [sp, #72]
  4434ac:	bl	436504 <udev_builtin_add_property>
  4434b0:	mov	w0, #0x0                   	// #0
  4434b4:	mov	w1, w0
  4434b8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4434bc:	ldr	x0, [x0, #4032]
  4434c0:	ldr	x2, [sp, #2584]
  4434c4:	ldr	x0, [x0]
  4434c8:	eor	x0, x2, x0
  4434cc:	cmp	x0, #0x0
  4434d0:	b.eq	4434d8 <builtin_usb_id+0x1474>  // b.none
  4434d4:	bl	40b280 <__stack_chk_fail@plt>
  4434d8:	mov	w0, w1
  4434dc:	ldp	x29, x30, [sp, #32]
  4434e0:	add	sp, sp, #0xa20
  4434e4:	ret

00000000004434e8 <freep>:
  4434e8:	stp	x29, x30, [sp, #-32]!
  4434ec:	mov	x29, sp
  4434f0:	str	x0, [sp, #24]
  4434f4:	ldr	x0, [sp, #24]
  4434f8:	ldr	x0, [x0]
  4434fc:	bl	40ba20 <free@plt>
  443500:	nop
  443504:	ldp	x29, x30, [sp], #32
  443508:	ret

000000000044350c <size_multiply_overflow>:
  44350c:	sub	sp, sp, #0x10
  443510:	str	x0, [sp, #8]
  443514:	str	x1, [sp]
  443518:	ldr	x0, [sp]
  44351c:	cmp	x0, #0x0
  443520:	cset	w0, ne  // ne = any
  443524:	and	w0, w0, #0xff
  443528:	and	x0, x0, #0xff
  44352c:	cmp	x0, #0x0
  443530:	b.eq	443574 <size_multiply_overflow+0x68>  // b.none
  443534:	mov	x2, #0x0                   	// #0
  443538:	ldr	x1, [sp, #8]
  44353c:	ldr	x0, [sp]
  443540:	umulh	x0, x1, x0
  443544:	cmp	x0, #0x0
  443548:	b.eq	443550 <size_multiply_overflow+0x44>  // b.none
  44354c:	mov	x2, #0x1                   	// #1
  443550:	mov	x0, x2
  443554:	cmp	x0, #0x0
  443558:	cset	w0, ne  // ne = any
  44355c:	and	w0, w0, #0xff
  443560:	and	x0, x0, #0xff
  443564:	cmp	x0, #0x0
  443568:	b.eq	443574 <size_multiply_overflow+0x68>  // b.none
  44356c:	mov	w0, #0x1                   	// #1
  443570:	b	443578 <size_multiply_overflow+0x6c>
  443574:	mov	w0, #0x0                   	// #0
  443578:	and	w0, w0, #0x1
  44357c:	and	w0, w0, #0xff
  443580:	add	sp, sp, #0x10
  443584:	ret

0000000000443588 <malloc_multiply>:
  443588:	stp	x29, x30, [sp, #-32]!
  44358c:	mov	x29, sp
  443590:	str	x0, [sp, #24]
  443594:	str	x1, [sp, #16]
  443598:	ldr	x1, [sp, #16]
  44359c:	ldr	x0, [sp, #24]
  4435a0:	bl	44350c <size_multiply_overflow>
  4435a4:	and	w0, w0, #0xff
  4435a8:	cmp	w0, #0x0
  4435ac:	b.eq	4435b8 <malloc_multiply+0x30>  // b.none
  4435b0:	mov	x0, #0x0                   	// #0
  4435b4:	b	4435d4 <malloc_multiply+0x4c>
  4435b8:	ldr	x1, [sp, #24]
  4435bc:	ldr	x0, [sp, #16]
  4435c0:	mul	x0, x1, x0
  4435c4:	cmp	x0, #0x0
  4435c8:	b.ne	4435d0 <malloc_multiply+0x48>  // b.any
  4435cc:	mov	x0, #0x1                   	// #1
  4435d0:	bl	40b480 <malloc@plt>
  4435d4:	ldp	x29, x30, [sp], #32
  4435d8:	ret

00000000004435dc <fclosep>:
  4435dc:	stp	x29, x30, [sp, #-32]!
  4435e0:	mov	x29, sp
  4435e4:	str	x0, [sp, #24]
  4435e8:	ldr	x0, [sp, #24]
  4435ec:	ldr	x0, [x0]
  4435f0:	bl	40a2e0 <safe_fclose@plt>
  4435f4:	nop
  4435f8:	ldp	x29, x30, [sp], #32
  4435fc:	ret

0000000000443600 <condition_free_list>:
  443600:	stp	x29, x30, [sp, #-32]!
  443604:	mov	x29, sp
  443608:	str	x0, [sp, #24]
  44360c:	mov	w1, #0xffffffff            	// #-1
  443610:	ldr	x0, [sp, #24]
  443614:	bl	40b620 <condition_free_list_type@plt>
  443618:	ldp	x29, x30, [sp], #32
  44361c:	ret

0000000000443620 <set_free_free>:
  443620:	stp	x29, x30, [sp, #-32]!
  443624:	mov	x29, sp
  443628:	str	x0, [sp, #24]
  44362c:	mov	x2, #0x0                   	// #0
  443630:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  443634:	ldr	x1, [x0, #4080]
  443638:	ldr	x0, [sp, #24]
  44363c:	bl	40a400 <internal_hashmap_free@plt>
  443640:	ldp	x29, x30, [sp], #32
  443644:	ret

0000000000443648 <set_size>:
  443648:	stp	x29, x30, [sp, #-32]!
  44364c:	mov	x29, sp
  443650:	str	x0, [sp, #24]
  443654:	ldr	x0, [sp, #24]
  443658:	bl	40b4d0 <internal_hashmap_size@plt>
  44365c:	ldp	x29, x30, [sp], #32
  443660:	ret

0000000000443664 <set_isempty>:
  443664:	stp	x29, x30, [sp, #-32]!
  443668:	mov	x29, sp
  44366c:	str	x0, [sp, #24]
  443670:	ldr	x0, [sp, #24]
  443674:	bl	443648 <set_size>
  443678:	cmp	w0, #0x0
  44367c:	cset	w0, eq  // eq = none
  443680:	and	w0, w0, #0xff
  443684:	ldp	x29, x30, [sp], #32
  443688:	ret

000000000044368c <link_config_ctx_freep>:
  44368c:	stp	x29, x30, [sp, #-32]!
  443690:	mov	x29, sp
  443694:	str	x0, [sp, #24]
  443698:	ldr	x0, [sp, #24]
  44369c:	ldr	x0, [x0]
  4436a0:	cmp	x0, #0x0
  4436a4:	b.eq	4436b4 <link_config_ctx_freep+0x28>  // b.none
  4436a8:	ldr	x0, [sp, #24]
  4436ac:	ldr	x0, [x0]
  4436b0:	bl	4438f0 <link_config_ctx_free>
  4436b4:	nop
  4436b8:	ldp	x29, x30, [sp], #32
  4436bc:	ret

00000000004436c0 <naming_scheme_has>:
  4436c0:	stp	x29, x30, [sp, #-32]!
  4436c4:	mov	x29, sp
  4436c8:	str	w0, [sp, #28]
  4436cc:	bl	446dec <naming_scheme>
  4436d0:	ldr	w0, [x0, #8]
  4436d4:	mvn	w1, w0
  4436d8:	ldr	w0, [sp, #28]
  4436dc:	and	w0, w1, w0
  4436e0:	cmp	w0, #0x0
  4436e4:	cset	w0, eq  // eq = none
  4436e8:	and	w0, w0, #0xff
  4436ec:	ldp	x29, x30, [sp], #32
  4436f0:	ret

00000000004436f4 <strv_freep>:
  4436f4:	stp	x29, x30, [sp, #-32]!
  4436f8:	mov	x29, sp
  4436fc:	str	x0, [sp, #24]
  443700:	ldr	x0, [sp, #24]
  443704:	ldr	x0, [x0]
  443708:	cmp	x0, #0x0
  44370c:	b.eq	44371c <strv_freep+0x28>  // b.none
  443710:	ldr	x0, [sp, #24]
  443714:	ldr	x0, [x0]
  443718:	bl	40b080 <strv_free@plt>
  44371c:	nop
  443720:	ldp	x29, x30, [sp], #32
  443724:	ret

0000000000443728 <strv_isempty>:
  443728:	sub	sp, sp, #0x10
  44372c:	str	x0, [sp, #8]
  443730:	ldr	x0, [sp, #8]
  443734:	cmp	x0, #0x0
  443738:	b.eq	44374c <strv_isempty+0x24>  // b.none
  44373c:	ldr	x0, [sp, #8]
  443740:	ldr	x0, [x0]
  443744:	cmp	x0, #0x0
  443748:	b.ne	443754 <strv_isempty+0x2c>  // b.any
  44374c:	mov	w0, #0x1                   	// #1
  443750:	b	443758 <strv_isempty+0x30>
  443754:	mov	w0, #0x0                   	// #0
  443758:	and	w0, w0, #0x1
  44375c:	and	w0, w0, #0xff
  443760:	add	sp, sp, #0x10
  443764:	ret

0000000000443768 <safe_atou>:
  443768:	stp	x29, x30, [sp, #-32]!
  44376c:	mov	x29, sp
  443770:	str	x0, [sp, #24]
  443774:	str	x1, [sp, #16]
  443778:	ldr	x2, [sp, #16]
  44377c:	mov	w1, #0x0                   	// #0
  443780:	ldr	x0, [sp, #24]
  443784:	bl	40b4a0 <safe_atou_full@plt>
  443788:	ldp	x29, x30, [sp], #32
  44378c:	ret

0000000000443790 <link_config_free>:
  443790:	stp	x29, x30, [sp, #-32]!
  443794:	mov	x29, sp
  443798:	str	x0, [sp, #24]
  44379c:	ldr	x0, [sp, #24]
  4437a0:	cmp	x0, #0x0
  4437a4:	b.eq	443850 <link_config_free+0xc0>  // b.none
  4437a8:	ldr	x0, [sp, #24]
  4437ac:	ldr	x0, [x0]
  4437b0:	bl	40ba20 <free@plt>
  4437b4:	ldr	x0, [sp, #24]
  4437b8:	ldr	x0, [x0, #8]
  4437bc:	bl	443620 <set_free_free>
  4437c0:	ldr	x0, [sp, #24]
  4437c4:	ldr	x0, [x0, #16]
  4437c8:	bl	40b080 <strv_free@plt>
  4437cc:	ldr	x0, [sp, #24]
  4437d0:	ldr	x0, [x0, #24]
  4437d4:	bl	40b080 <strv_free@plt>
  4437d8:	ldr	x0, [sp, #24]
  4437dc:	ldr	x0, [x0, #32]
  4437e0:	bl	40b080 <strv_free@plt>
  4437e4:	ldr	x0, [sp, #24]
  4437e8:	ldr	x0, [x0, #40]
  4437ec:	bl	40b080 <strv_free@plt>
  4437f0:	ldr	x0, [sp, #24]
  4437f4:	ldr	x0, [x0, #48]
  4437f8:	bl	40b080 <strv_free@plt>
  4437fc:	ldr	x0, [sp, #24]
  443800:	ldr	x0, [x0, #56]
  443804:	bl	443600 <condition_free_list>
  443808:	ldr	x0, [sp, #24]
  44380c:	ldr	x0, [x0, #64]
  443810:	bl	40ba20 <free@plt>
  443814:	ldr	x0, [sp, #24]
  443818:	ldr	x0, [x0, #72]
  44381c:	bl	40ba20 <free@plt>
  443820:	ldr	x0, [sp, #24]
  443824:	ldr	x0, [x0, #88]
  443828:	bl	40ba20 <free@plt>
  44382c:	ldr	x0, [sp, #24]
  443830:	ldr	x0, [x0, #96]
  443834:	bl	40ba20 <free@plt>
  443838:	ldr	x0, [sp, #24]
  44383c:	ldr	x0, [x0, #104]
  443840:	bl	40ba20 <free@plt>
  443844:	ldr	x0, [sp, #24]
  443848:	bl	40ba20 <free@plt>
  44384c:	b	443854 <link_config_free+0xc4>
  443850:	nop
  443854:	ldp	x29, x30, [sp], #32
  443858:	ret

000000000044385c <link_config_freep>:
  44385c:	stp	x29, x30, [sp, #-32]!
  443860:	mov	x29, sp
  443864:	str	x0, [sp, #24]
  443868:	ldr	x0, [sp, #24]
  44386c:	ldr	x0, [x0]
  443870:	cmp	x0, #0x0
  443874:	b.eq	443884 <link_config_freep+0x28>  // b.none
  443878:	ldr	x0, [sp, #24]
  44387c:	ldr	x0, [x0]
  443880:	bl	443790 <link_config_free>
  443884:	nop
  443888:	ldp	x29, x30, [sp], #32
  44388c:	ret

0000000000443890 <link_configs_free>:
  443890:	stp	x29, x30, [sp, #-48]!
  443894:	mov	x29, sp
  443898:	str	x0, [sp, #24]
  44389c:	ldr	x0, [sp, #24]
  4438a0:	cmp	x0, #0x0
  4438a4:	b.eq	4438e4 <link_configs_free+0x54>  // b.none
  4438a8:	ldr	x0, [sp, #24]
  4438ac:	ldr	x0, [x0]
  4438b0:	str	x0, [sp, #32]
  4438b4:	b	4438c8 <link_configs_free+0x38>
  4438b8:	ldr	x0, [sp, #32]
  4438bc:	bl	443790 <link_config_free>
  4438c0:	ldr	x0, [sp, #40]
  4438c4:	str	x0, [sp, #32]
  4438c8:	ldr	x0, [sp, #32]
  4438cc:	cmp	x0, #0x0
  4438d0:	b.eq	4438e8 <link_configs_free+0x58>  // b.none
  4438d4:	ldr	x0, [sp, #32]
  4438d8:	ldr	x0, [x0, #208]
  4438dc:	str	x0, [sp, #40]
  4438e0:	b	4438b8 <link_configs_free+0x28>
  4438e4:	nop
  4438e8:	ldp	x29, x30, [sp], #48
  4438ec:	ret

00000000004438f0 <link_config_ctx_free>:
  4438f0:	stp	x29, x30, [sp, #-32]!
  4438f4:	mov	x29, sp
  4438f8:	str	x0, [sp, #24]
  4438fc:	ldr	x0, [sp, #24]
  443900:	cmp	x0, #0x0
  443904:	b.eq	443934 <link_config_ctx_free+0x44>  // b.none
  443908:	ldr	x0, [sp, #24]
  44390c:	ldr	w0, [x0, #8]
  443910:	bl	40aad0 <safe_close@plt>
  443914:	ldr	x0, [sp, #24]
  443918:	ldr	x0, [x0, #16]
  44391c:	bl	40af50 <sd_netlink_unref@plt>
  443920:	ldr	x0, [sp, #24]
  443924:	bl	443890 <link_configs_free>
  443928:	ldr	x0, [sp, #24]
  44392c:	bl	40ba20 <free@plt>
  443930:	b	443938 <link_config_ctx_free+0x48>
  443934:	nop
  443938:	ldp	x29, x30, [sp], #32
  44393c:	ret

0000000000443940 <link_config_ctx_new>:
  443940:	stp	x29, x30, [sp, #-80]!
  443944:	mov	x29, sp
  443948:	str	x19, [sp, #16]
  44394c:	str	x0, [sp, #40]
  443950:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  443954:	ldr	x0, [x0, #4032]
  443958:	ldr	x1, [x0]
  44395c:	str	x1, [sp, #72]
  443960:	mov	x1, #0x0                   	// #0
  443964:	str	xzr, [sp, #56]
  443968:	ldr	x0, [sp, #40]
  44396c:	cmp	x0, #0x0
  443970:	b.ne	44397c <link_config_ctx_new+0x3c>  // b.any
  443974:	mov	w19, #0xffffffea            	// #-22
  443978:	b	4439dc <link_config_ctx_new+0x9c>
  44397c:	mov	x1, #0x20                  	// #32
  443980:	mov	x0, #0x1                   	// #1
  443984:	bl	40b7e0 <calloc@plt>
  443988:	str	x0, [sp, #56]
  44398c:	ldr	x0, [sp, #56]
  443990:	cmp	x0, #0x0
  443994:	b.ne	4439a0 <link_config_ctx_new+0x60>  // b.any
  443998:	mov	w19, #0xfffffff4            	// #-12
  44399c:	b	4439dc <link_config_ctx_new+0x9c>
  4439a0:	ldr	x0, [sp, #56]
  4439a4:	str	xzr, [x0]
  4439a8:	ldr	x0, [sp, #56]
  4439ac:	mov	w1, #0xffffffff            	// #-1
  4439b0:	str	w1, [x0, #8]
  4439b4:	ldr	x0, [sp, #56]
  4439b8:	mov	w1, #0x1                   	// #1
  4439bc:	strb	w1, [x0, #12]
  4439c0:	ldr	x0, [sp, #56]
  4439c4:	str	x0, [sp, #64]
  4439c8:	str	xzr, [sp, #56]
  4439cc:	ldr	x1, [sp, #64]
  4439d0:	ldr	x0, [sp, #40]
  4439d4:	str	x1, [x0]
  4439d8:	mov	w19, #0x0                   	// #0
  4439dc:	add	x0, sp, #0x38
  4439e0:	bl	44368c <link_config_ctx_freep>
  4439e4:	mov	w1, w19
  4439e8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4439ec:	ldr	x0, [x0, #4032]
  4439f0:	ldr	x2, [sp, #72]
  4439f4:	ldr	x0, [x0]
  4439f8:	eor	x0, x2, x0
  4439fc:	cmp	x0, #0x0
  443a00:	b.eq	443a08 <link_config_ctx_new+0xc8>  // b.none
  443a04:	bl	40b280 <__stack_chk_fail@plt>
  443a08:	mov	w0, w1
  443a0c:	ldr	x19, [sp, #16]
  443a10:	ldp	x29, x30, [sp], #80
  443a14:	ret

0000000000443a18 <link_load_one>:
  443a18:	stp	x29, x30, [sp, #-400]!
  443a1c:	mov	x29, sp
  443a20:	str	x19, [sp, #16]
  443a24:	str	x0, [sp, #40]
  443a28:	str	x1, [sp, #32]
  443a2c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  443a30:	ldr	x0, [x0, #4032]
  443a34:	ldr	x1, [x0]
  443a38:	str	x1, [sp, #392]
  443a3c:	mov	x1, #0x0                   	// #0
  443a40:	str	xzr, [sp, #104]
  443a44:	str	xzr, [sp, #112]
  443a48:	str	xzr, [sp, #120]
  443a4c:	ldr	x0, [sp, #40]
  443a50:	cmp	x0, #0x0
  443a54:	cset	w0, eq  // eq = none
  443a58:	and	w0, w0, #0xff
  443a5c:	and	x0, x0, #0xff
  443a60:	cmp	x0, #0x0
  443a64:	b.eq	443a90 <link_load_one+0x78>  // b.none
  443a68:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443a6c:	add	x1, x0, #0xf4b
  443a70:	adrp	x0, 45c000 <__func__.8393+0x150>
  443a74:	add	x4, x0, #0x8e0
  443a78:	mov	w3, #0x79                  	// #121
  443a7c:	mov	x2, x1
  443a80:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443a84:	add	x1, x0, #0xf68
  443a88:	mov	w0, #0x1                   	// #1
  443a8c:	bl	40abb0 <log_assert_failed_realm@plt>
  443a90:	ldr	x0, [sp, #32]
  443a94:	cmp	x0, #0x0
  443a98:	cset	w0, eq  // eq = none
  443a9c:	and	w0, w0, #0xff
  443aa0:	and	x0, x0, #0xff
  443aa4:	cmp	x0, #0x0
  443aa8:	b.eq	443ad4 <link_load_one+0xbc>  // b.none
  443aac:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443ab0:	add	x1, x0, #0xf4b
  443ab4:	adrp	x0, 45c000 <__func__.8393+0x150>
  443ab8:	add	x4, x0, #0x8e0
  443abc:	mov	w3, #0x7a                  	// #122
  443ac0:	mov	x2, x1
  443ac4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443ac8:	add	x1, x0, #0xf70
  443acc:	mov	w0, #0x1                   	// #1
  443ad0:	bl	40abb0 <log_assert_failed_realm@plt>
  443ad4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443ad8:	add	x1, x0, #0xf80
  443adc:	ldr	x0, [sp, #32]
  443ae0:	bl	40bd60 <fopen64@plt>
  443ae4:	str	x0, [sp, #112]
  443ae8:	ldr	x0, [sp, #112]
  443aec:	cmp	x0, #0x0
  443af0:	b.ne	443b1c <link_load_one+0x104>  // b.any
  443af4:	bl	40b040 <__errno_location@plt>
  443af8:	ldr	w0, [x0]
  443afc:	cmp	w0, #0x2
  443b00:	b.eq	443b14 <link_load_one+0xfc>  // b.none
  443b04:	bl	40b040 <__errno_location@plt>
  443b08:	ldr	w0, [x0]
  443b0c:	neg	w19, w0
  443b10:	b	444008 <link_load_one+0x5f0>
  443b14:	mov	w19, #0x0                   	// #0
  443b18:	b	444008 <link_load_one+0x5f0>
  443b1c:	ldr	x0, [sp, #112]
  443b20:	bl	40a6a0 <fileno@plt>
  443b24:	bl	40bd20 <null_or_empty_fd@plt>
  443b28:	cmp	w0, #0x0
  443b2c:	b.eq	443bb4 <link_load_one+0x19c>  // b.none
  443b30:	mov	w0, #0x7                   	// #7
  443b34:	str	w0, [sp, #92]
  443b38:	str	wzr, [sp, #96]
  443b3c:	mov	w0, #0x1                   	// #1
  443b40:	str	w0, [sp, #100]
  443b44:	ldr	w0, [sp, #100]
  443b48:	bl	40be30 <log_get_max_level_realm@plt>
  443b4c:	mov	w1, w0
  443b50:	ldr	w0, [sp, #92]
  443b54:	and	w0, w0, #0x7
  443b58:	cmp	w1, w0
  443b5c:	b.lt	443ba4 <link_load_one+0x18c>  // b.tstop
  443b60:	ldr	w0, [sp, #100]
  443b64:	lsl	w1, w0, #10
  443b68:	ldr	w0, [sp, #92]
  443b6c:	orr	w7, w1, w0
  443b70:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443b74:	add	x1, x0, #0xf4b
  443b78:	ldr	x6, [sp, #32]
  443b7c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443b80:	add	x5, x0, #0xf88
  443b84:	adrp	x0, 45c000 <__func__.8393+0x150>
  443b88:	add	x4, x0, #0x8f0
  443b8c:	mov	w3, #0x81                  	// #129
  443b90:	mov	x2, x1
  443b94:	ldr	w1, [sp, #96]
  443b98:	mov	w0, w7
  443b9c:	bl	40b4f0 <log_internal_realm@plt>
  443ba0:	b	443bac <link_load_one+0x194>
  443ba4:	ldr	w0, [sp, #96]
  443ba8:	cmp	w0, #0x0
  443bac:	mov	w19, #0x0                   	// #0
  443bb0:	b	444008 <link_load_one+0x5f0>
  443bb4:	ldr	x0, [sp, #32]
  443bb8:	bl	40b7c0 <strdup@plt>
  443bbc:	str	x0, [sp, #120]
  443bc0:	ldr	x0, [sp, #120]
  443bc4:	cmp	x0, #0x0
  443bc8:	b.ne	443bd4 <link_load_one+0x1bc>  // b.any
  443bcc:	mov	w19, #0xfffffff4            	// #-12
  443bd0:	b	444008 <link_load_one+0x5f0>
  443bd4:	mov	x1, #0x1                   	// #1
  443bd8:	mov	x0, #0xe0                  	// #224
  443bdc:	bl	443588 <malloc_multiply>
  443be0:	str	x0, [sp, #104]
  443be4:	ldr	x0, [sp, #104]
  443be8:	cmp	x0, #0x0
  443bec:	b.ne	443bf8 <link_load_one+0x1e0>  // b.any
  443bf0:	mov	w19, #0xfffffff4            	// #-12
  443bf4:	b	444008 <link_load_one+0x5f0>
  443bf8:	ldr	x0, [sp, #104]
  443bfc:	ldr	x1, [sp, #120]
  443c00:	str	x1, [sp, #136]
  443c04:	str	xzr, [sp, #120]
  443c08:	ldr	x1, [sp, #136]
  443c0c:	stp	xzr, xzr, [x0]
  443c10:	stp	xzr, xzr, [x0, #16]
  443c14:	stp	xzr, xzr, [x0, #32]
  443c18:	stp	xzr, xzr, [x0, #48]
  443c1c:	stp	xzr, xzr, [x0, #64]
  443c20:	stp	xzr, xzr, [x0, #80]
  443c24:	stp	xzr, xzr, [x0, #96]
  443c28:	stp	xzr, xzr, [x0, #112]
  443c2c:	stp	xzr, xzr, [x0, #128]
  443c30:	stp	xzr, xzr, [x0, #144]
  443c34:	stp	xzr, xzr, [x0, #160]
  443c38:	stp	xzr, xzr, [x0, #176]
  443c3c:	stp	xzr, xzr, [x0, #192]
  443c40:	stp	xzr, xzr, [x0, #208]
  443c44:	str	x1, [x0]
  443c48:	mov	w1, #0xffffffff            	// #-1
  443c4c:	str	w1, [x0, #80]
  443c50:	mov	w1, #0xffffffff            	// #-1
  443c54:	str	w1, [x0, #128]
  443c58:	mov	w1, #0xffffffff            	// #-1
  443c5c:	str	w1, [x0, #132]
  443c60:	mov	w1, #0xffffffff            	// #-1
  443c64:	str	w1, [x0, #148]
  443c68:	mov	w1, #0xffffffff            	// #-1
  443c6c:	str	w1, [x0, #152]
  443c70:	str	xzr, [sp, #128]
  443c74:	b	443ca0 <link_load_one+0x288>
  443c78:	ldr	x1, [sp, #104]
  443c7c:	ldr	x0, [sp, #128]
  443c80:	add	x0, x0, #0x24
  443c84:	lsl	x0, x0, #2
  443c88:	add	x0, x1, x0
  443c8c:	mov	w1, #0xffffffff            	// #-1
  443c90:	str	w1, [x0, #12]
  443c94:	ldr	x0, [sp, #128]
  443c98:	add	x0, x0, #0x1
  443c9c:	str	x0, [sp, #128]
  443ca0:	ldr	x0, [sp, #128]
  443ca4:	cmp	x0, #0x4
  443ca8:	b.ls	443c78 <link_load_one+0x260>  // b.plast
  443cac:	ldr	x1, [sp, #112]
  443cb0:	ldr	x0, [sp, #104]
  443cb4:	mov	x7, x0
  443cb8:	mov	w6, #0x4                   	// #4
  443cbc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  443cc0:	ldr	x5, [x0, #4088]
  443cc4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  443cc8:	ldr	x4, [x0, #4040]
  443ccc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443cd0:	add	x3, x0, #0xfa0
  443cd4:	mov	x2, x1
  443cd8:	ldr	x1, [sp, #32]
  443cdc:	mov	x0, #0x0                   	// #0
  443ce0:	bl	40be90 <config_parse@plt>
  443ce4:	str	w0, [sp, #52]
  443ce8:	ldr	w0, [sp, #52]
  443cec:	cmp	w0, #0x0
  443cf0:	b.ge	443cfc <link_load_one+0x2e4>  // b.tcont
  443cf4:	ldr	w19, [sp, #52]
  443cf8:	b	444008 <link_load_one+0x5f0>
  443cfc:	ldr	x0, [sp, #104]
  443d00:	ldr	x1, [x0, #120]
  443d04:	mov	x0, #0xffffffff            	// #4294967295
  443d08:	cmp	x1, x0
  443d0c:	b.ls	443d18 <link_load_one+0x300>  // b.plast
  443d10:	mov	w19, #0xffffffde            	// #-34
  443d14:	b	444008 <link_load_one+0x5f0>
  443d18:	ldr	x0, [sp, #104]
  443d1c:	ldr	x0, [x0, #8]
  443d20:	bl	443664 <set_isempty>
  443d24:	and	w0, w0, #0xff
  443d28:	cmp	w0, #0x0
  443d2c:	b.eq	443e34 <link_load_one+0x41c>  // b.none
  443d30:	ldr	x0, [sp, #104]
  443d34:	ldr	x0, [x0, #16]
  443d38:	bl	443728 <strv_isempty>
  443d3c:	and	w0, w0, #0xff
  443d40:	cmp	w0, #0x0
  443d44:	b.eq	443e34 <link_load_one+0x41c>  // b.none
  443d48:	ldr	x0, [sp, #104]
  443d4c:	ldr	x0, [x0, #24]
  443d50:	bl	443728 <strv_isempty>
  443d54:	and	w0, w0, #0xff
  443d58:	cmp	w0, #0x0
  443d5c:	b.eq	443e34 <link_load_one+0x41c>  // b.none
  443d60:	ldr	x0, [sp, #104]
  443d64:	ldr	x0, [x0, #32]
  443d68:	bl	443728 <strv_isempty>
  443d6c:	and	w0, w0, #0xff
  443d70:	cmp	w0, #0x0
  443d74:	b.eq	443e34 <link_load_one+0x41c>  // b.none
  443d78:	ldr	x0, [sp, #104]
  443d7c:	ldr	x0, [x0, #40]
  443d80:	bl	443728 <strv_isempty>
  443d84:	and	w0, w0, #0xff
  443d88:	cmp	w0, #0x0
  443d8c:	b.eq	443e34 <link_load_one+0x41c>  // b.none
  443d90:	ldr	x0, [sp, #104]
  443d94:	ldr	x0, [x0, #48]
  443d98:	bl	443728 <strv_isempty>
  443d9c:	and	w0, w0, #0xff
  443da0:	cmp	w0, #0x0
  443da4:	b.eq	443e34 <link_load_one+0x41c>  // b.none
  443da8:	ldr	x0, [sp, #104]
  443dac:	ldr	x0, [x0, #56]
  443db0:	cmp	x0, #0x0
  443db4:	b.ne	443e34 <link_load_one+0x41c>  // b.any
  443db8:	mov	w0, #0x4                   	// #4
  443dbc:	str	w0, [sp, #56]
  443dc0:	str	wzr, [sp, #60]
  443dc4:	mov	w0, #0x1                   	// #1
  443dc8:	str	w0, [sp, #64]
  443dcc:	ldr	w0, [sp, #64]
  443dd0:	bl	40be30 <log_get_max_level_realm@plt>
  443dd4:	mov	w1, w0
  443dd8:	ldr	w0, [sp, #56]
  443ddc:	and	w0, w0, #0x7
  443de0:	cmp	w1, w0
  443de4:	b.lt	443e2c <link_load_one+0x414>  // b.tstop
  443de8:	ldr	w0, [sp, #64]
  443dec:	lsl	w1, w0, #10
  443df0:	ldr	w0, [sp, #56]
  443df4:	orr	w7, w1, w0
  443df8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443dfc:	add	x1, x0, #0xf4b
  443e00:	ldr	x6, [sp, #32]
  443e04:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443e08:	add	x5, x0, #0xfb0
  443e0c:	adrp	x0, 45c000 <__func__.8393+0x150>
  443e10:	add	x4, x0, #0x8f0
  443e14:	mov	w3, #0xa6                  	// #166
  443e18:	mov	x2, x1
  443e1c:	ldr	w1, [sp, #60]
  443e20:	mov	w0, w7
  443e24:	bl	40b4f0 <log_internal_realm@plt>
  443e28:	b	443e34 <link_load_one+0x41c>
  443e2c:	ldr	w0, [sp, #60]
  443e30:	cmp	w0, #0x0
  443e34:	ldr	x0, [sp, #104]
  443e38:	ldr	x0, [x0, #56]
  443e3c:	mov	x3, #0x0                   	// #0
  443e40:	mov	x2, #0x0                   	// #0
  443e44:	mov	x1, #0x0                   	// #0
  443e48:	bl	40a920 <condition_test_list@plt>
  443e4c:	and	w0, w0, #0xff
  443e50:	eor	w0, w0, #0x1
  443e54:	and	w0, w0, #0xff
  443e58:	cmp	w0, #0x0
  443e5c:	b.eq	443ee4 <link_load_one+0x4cc>  // b.none
  443e60:	mov	w0, #0x7                   	// #7
  443e64:	str	w0, [sp, #80]
  443e68:	str	wzr, [sp, #84]
  443e6c:	mov	w0, #0x1                   	// #1
  443e70:	str	w0, [sp, #88]
  443e74:	ldr	w0, [sp, #88]
  443e78:	bl	40be30 <log_get_max_level_realm@plt>
  443e7c:	mov	w1, w0
  443e80:	ldr	w0, [sp, #80]
  443e84:	and	w0, w0, #0x7
  443e88:	cmp	w1, w0
  443e8c:	b.lt	443ed4 <link_load_one+0x4bc>  // b.tstop
  443e90:	ldr	w0, [sp, #88]
  443e94:	lsl	w1, w0, #10
  443e98:	ldr	w0, [sp, #80]
  443e9c:	orr	w7, w1, w0
  443ea0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443ea4:	add	x1, x0, #0xf4b
  443ea8:	ldr	x6, [sp, #32]
  443eac:	adrp	x0, 45c000 <__func__.8393+0x150>
  443eb0:	add	x5, x0, #0x50
  443eb4:	adrp	x0, 45c000 <__func__.8393+0x150>
  443eb8:	add	x4, x0, #0x8f0
  443ebc:	mov	w3, #0xac                  	// #172
  443ec0:	mov	x2, x1
  443ec4:	ldr	w1, [sp, #84]
  443ec8:	mov	w0, w7
  443ecc:	bl	40b4f0 <log_internal_realm@plt>
  443ed0:	b	443edc <link_load_one+0x4c4>
  443ed4:	ldr	w0, [sp, #84]
  443ed8:	cmp	w0, #0x0
  443edc:	mov	w19, #0x0                   	// #0
  443ee0:	b	444008 <link_load_one+0x5f0>
  443ee4:	mov	w0, #0x7                   	// #7
  443ee8:	str	w0, [sp, #68]
  443eec:	str	wzr, [sp, #72]
  443ef0:	mov	w0, #0x1                   	// #1
  443ef4:	str	w0, [sp, #76]
  443ef8:	ldr	w0, [sp, #76]
  443efc:	bl	40be30 <log_get_max_level_realm@plt>
  443f00:	mov	w1, w0
  443f04:	ldr	w0, [sp, #68]
  443f08:	and	w0, w0, #0x7
  443f0c:	cmp	w1, w0
  443f10:	b.lt	443f58 <link_load_one+0x540>  // b.tstop
  443f14:	ldr	w0, [sp, #76]
  443f18:	lsl	w1, w0, #10
  443f1c:	ldr	w0, [sp, #68]
  443f20:	orr	w7, w1, w0
  443f24:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443f28:	add	x1, x0, #0xf4b
  443f2c:	ldr	x6, [sp, #32]
  443f30:	adrp	x0, 45c000 <__func__.8393+0x150>
  443f34:	add	x5, x0, #0x90
  443f38:	adrp	x0, 45c000 <__func__.8393+0x150>
  443f3c:	add	x4, x0, #0x8f0
  443f40:	mov	w3, #0xb0                  	// #176
  443f44:	mov	x2, x1
  443f48:	ldr	w1, [sp, #72]
  443f4c:	mov	w0, w7
  443f50:	bl	40b4f0 <log_internal_realm@plt>
  443f54:	b	443f60 <link_load_one+0x548>
  443f58:	ldr	w0, [sp, #72]
  443f5c:	cmp	w0, #0x0
  443f60:	ldr	x0, [sp, #40]
  443f64:	str	x0, [sp, #144]
  443f68:	ldr	x0, [sp, #104]
  443f6c:	str	x0, [sp, #152]
  443f70:	str	xzr, [sp, #104]
  443f74:	ldr	x0, [sp, #152]
  443f78:	str	x0, [sp, #160]
  443f7c:	ldr	x0, [sp, #160]
  443f80:	cmp	x0, #0x0
  443f84:	cset	w0, eq  // eq = none
  443f88:	and	w0, w0, #0xff
  443f8c:	and	x0, x0, #0xff
  443f90:	cmp	x0, #0x0
  443f94:	b.eq	443fc0 <link_load_one+0x5a8>  // b.none
  443f98:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  443f9c:	add	x1, x0, #0xf4b
  443fa0:	adrp	x0, 45c000 <__func__.8393+0x150>
  443fa4:	add	x4, x0, #0x8e0
  443fa8:	mov	w3, #0xb2                  	// #178
  443fac:	mov	x2, x1
  443fb0:	adrp	x0, 45c000 <__func__.8393+0x150>
  443fb4:	add	x1, x0, #0xb0
  443fb8:	mov	w0, #0x1                   	// #1
  443fbc:	bl	40abb0 <log_assert_failed_realm@plt>
  443fc0:	ldr	x0, [sp, #144]
  443fc4:	ldr	x1, [x0]
  443fc8:	ldr	x0, [sp, #160]
  443fcc:	str	x1, [x0, #208]
  443fd0:	ldr	x0, [sp, #160]
  443fd4:	ldr	x0, [x0, #208]
  443fd8:	cmp	x0, #0x0
  443fdc:	b.eq	443ff0 <link_load_one+0x5d8>  // b.none
  443fe0:	ldr	x0, [sp, #160]
  443fe4:	ldr	x0, [x0, #208]
  443fe8:	ldr	x1, [sp, #160]
  443fec:	str	x1, [x0, #216]
  443ff0:	ldr	x0, [sp, #160]
  443ff4:	str	xzr, [x0, #216]
  443ff8:	ldr	x0, [sp, #144]
  443ffc:	ldr	x1, [sp, #160]
  444000:	str	x1, [x0]
  444004:	mov	w19, #0x0                   	// #0
  444008:	add	x0, sp, #0x78
  44400c:	bl	4434e8 <freep>
  444010:	add	x0, sp, #0x70
  444014:	bl	4435dc <fclosep>
  444018:	add	x0, sp, #0x68
  44401c:	bl	44385c <link_config_freep>
  444020:	mov	w1, w19
  444024:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  444028:	ldr	x0, [x0, #4032]
  44402c:	ldr	x2, [sp, #392]
  444030:	ldr	x0, [x0]
  444034:	eor	x0, x2, x0
  444038:	cmp	x0, #0x0
  44403c:	b.eq	444044 <link_load_one+0x62c>  // b.none
  444040:	bl	40b280 <__stack_chk_fail@plt>
  444044:	mov	w0, w1
  444048:	ldr	x19, [sp, #16]
  44404c:	ldp	x29, x30, [sp], #400
  444050:	ret

0000000000444054 <enable_name_policy>:
  444054:	stp	x29, x30, [sp, #-32]!
  444058:	mov	x29, sp
  44405c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  444060:	ldr	x0, [x0, #4032]
  444064:	ldr	x1, [x0]
  444068:	str	x1, [sp, #24]
  44406c:	mov	x1, #0x0                   	// #0
  444070:	add	x0, sp, #0x17
  444074:	mov	x1, x0
  444078:	adrp	x0, 45c000 <__func__.8393+0x150>
  44407c:	add	x0, x0, #0xb8
  444080:	bl	40bbf0 <proc_cmdline_get_bool@plt>
  444084:	cmp	w0, #0x0
  444088:	b.le	444098 <enable_name_policy+0x44>
  44408c:	ldrb	w0, [sp, #23]
  444090:	cmp	w0, #0x0
  444094:	b.eq	4440a0 <enable_name_policy+0x4c>  // b.none
  444098:	mov	w0, #0x1                   	// #1
  44409c:	b	4440a4 <enable_name_policy+0x50>
  4440a0:	mov	w0, #0x0                   	// #0
  4440a4:	and	w0, w0, #0x1
  4440a8:	and	w0, w0, #0xff
  4440ac:	mov	w1, w0
  4440b0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4440b4:	ldr	x0, [x0, #4032]
  4440b8:	ldr	x2, [sp, #24]
  4440bc:	ldr	x0, [x0]
  4440c0:	eor	x0, x2, x0
  4440c4:	cmp	x0, #0x0
  4440c8:	b.eq	4440d0 <enable_name_policy+0x7c>  // b.none
  4440cc:	bl	40b280 <__stack_chk_fail@plt>
  4440d0:	mov	w0, w1
  4440d4:	ldp	x29, x30, [sp], #32
  4440d8:	ret

00000000004440dc <link_unsigned_attribute>:
  4440dc:	sub	sp, sp, #0xa0
  4440e0:	stp	x29, x30, [sp, #32]
  4440e4:	add	x29, sp, #0x20
  4440e8:	str	x0, [sp, #72]
  4440ec:	str	x1, [sp, #64]
  4440f0:	str	x2, [sp, #56]
  4440f4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4440f8:	ldr	x0, [x0, #4032]
  4440fc:	ldr	x1, [x0]
  444100:	str	x1, [sp, #152]
  444104:	mov	x1, #0x0                   	// #0
  444108:	add	x0, sp, #0x70
  44410c:	mov	x2, x0
  444110:	ldr	x1, [sp, #64]
  444114:	ldr	x0, [sp, #72]
  444118:	bl	40b870 <sd_device_get_sysattr_value@plt>
  44411c:	str	w0, [sp, #84]
  444120:	ldr	w0, [sp, #84]
  444124:	cmp	w0, #0x0
  444128:	b.ge	4441f4 <link_unsigned_attribute+0x118>  // b.tcont
  44412c:	str	xzr, [sp, #120]
  444130:	ldr	x0, [sp, #72]
  444134:	str	x0, [sp, #144]
  444138:	mov	w0, #0x7                   	// #7
  44413c:	str	w0, [sp, #104]
  444140:	ldr	w0, [sp, #84]
  444144:	str	w0, [sp, #108]
  444148:	ldr	x0, [sp, #144]
  44414c:	cmp	x0, #0x0
  444150:	b.eq	44418c <link_unsigned_attribute+0xb0>  // b.none
  444154:	mov	w0, #0x1                   	// #1
  444158:	bl	40be30 <log_get_max_level_realm@plt>
  44415c:	mov	w1, w0
  444160:	ldr	w0, [sp, #104]
  444164:	cmp	w0, w1
  444168:	cset	w0, le
  44416c:	and	w0, w0, #0xff
  444170:	and	x0, x0, #0xff
  444174:	cmp	x0, #0x0
  444178:	b.eq	44418c <link_unsigned_attribute+0xb0>  // b.none
  44417c:	add	x0, sp, #0x78
  444180:	mov	x1, x0
  444184:	ldr	x0, [sp, #144]
  444188:	bl	40aba0 <sd_device_get_sysname@plt>
  44418c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444190:	add	x2, x0, #0xf4b
  444194:	ldr	x0, [sp, #120]
  444198:	cmp	x0, #0x0
  44419c:	b.eq	4441ac <link_unsigned_attribute+0xd0>  // b.none
  4441a0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4441a4:	add	x0, x0, #0xc8
  4441a8:	b	4441b0 <link_unsigned_attribute+0xd4>
  4441ac:	mov	x0, #0x0                   	// #0
  4441b0:	ldr	x3, [sp, #120]
  4441b4:	ldr	x1, [sp, #64]
  4441b8:	str	x1, [sp, #16]
  4441bc:	adrp	x1, 45c000 <__func__.8393+0x150>
  4441c0:	add	x1, x1, #0xd0
  4441c4:	str	x1, [sp, #8]
  4441c8:	str	xzr, [sp]
  4441cc:	mov	x7, #0x0                   	// #0
  4441d0:	mov	x6, x3
  4441d4:	mov	x5, x0
  4441d8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4441dc:	add	x4, x0, #0x900
  4441e0:	mov	w3, #0xc2                  	// #194
  4441e4:	ldr	w1, [sp, #108]
  4441e8:	ldr	w0, [sp, #104]
  4441ec:	bl	40b020 <log_object_internal@plt>
  4441f0:	b	4443b0 <link_unsigned_attribute+0x2d4>
  4441f4:	ldr	x0, [sp, #112]
  4441f8:	ldr	x1, [sp, #56]
  4441fc:	bl	443768 <safe_atou>
  444200:	str	w0, [sp, #84]
  444204:	ldr	w0, [sp, #84]
  444208:	cmp	w0, #0x0
  44420c:	b.ge	4442e0 <link_unsigned_attribute+0x204>  // b.tcont
  444210:	str	xzr, [sp, #120]
  444214:	ldr	x0, [sp, #72]
  444218:	str	x0, [sp, #136]
  44421c:	mov	w0, #0x4                   	// #4
  444220:	str	w0, [sp, #96]
  444224:	ldr	w0, [sp, #84]
  444228:	str	w0, [sp, #100]
  44422c:	ldr	x0, [sp, #136]
  444230:	cmp	x0, #0x0
  444234:	b.eq	444270 <link_unsigned_attribute+0x194>  // b.none
  444238:	mov	w0, #0x1                   	// #1
  44423c:	bl	40be30 <log_get_max_level_realm@plt>
  444240:	mov	w1, w0
  444244:	ldr	w0, [sp, #96]
  444248:	cmp	w0, w1
  44424c:	cset	w0, le
  444250:	and	w0, w0, #0xff
  444254:	and	x0, x0, #0xff
  444258:	cmp	x0, #0x0
  44425c:	b.eq	444270 <link_unsigned_attribute+0x194>  // b.none
  444260:	add	x0, sp, #0x78
  444264:	mov	x1, x0
  444268:	ldr	x0, [sp, #136]
  44426c:	bl	40aba0 <sd_device_get_sysname@plt>
  444270:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444274:	add	x2, x0, #0xf4b
  444278:	ldr	x0, [sp, #120]
  44427c:	cmp	x0, #0x0
  444280:	b.eq	444290 <link_unsigned_attribute+0x1b4>  // b.none
  444284:	adrp	x0, 45c000 <__func__.8393+0x150>
  444288:	add	x0, x0, #0xc8
  44428c:	b	444294 <link_unsigned_attribute+0x1b8>
  444290:	mov	x0, #0x0                   	// #0
  444294:	ldr	x3, [sp, #120]
  444298:	ldr	x1, [sp, #112]
  44429c:	str	x1, [sp, #24]
  4442a0:	ldr	x1, [sp, #64]
  4442a4:	str	x1, [sp, #16]
  4442a8:	adrp	x1, 45c000 <__func__.8393+0x150>
  4442ac:	add	x1, x1, #0xe8
  4442b0:	str	x1, [sp, #8]
  4442b4:	str	xzr, [sp]
  4442b8:	mov	x7, #0x0                   	// #0
  4442bc:	mov	x6, x3
  4442c0:	mov	x5, x0
  4442c4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4442c8:	add	x4, x0, #0x900
  4442cc:	mov	w3, #0xc6                  	// #198
  4442d0:	ldr	w1, [sp, #100]
  4442d4:	ldr	w0, [sp, #96]
  4442d8:	bl	40b020 <log_object_internal@plt>
  4442dc:	b	4443b0 <link_unsigned_attribute+0x2d4>
  4442e0:	str	xzr, [sp, #120]
  4442e4:	ldr	x0, [sp, #72]
  4442e8:	str	x0, [sp, #128]
  4442ec:	mov	w0, #0x7                   	// #7
  4442f0:	str	w0, [sp, #88]
  4442f4:	str	wzr, [sp, #92]
  4442f8:	ldr	x0, [sp, #128]
  4442fc:	cmp	x0, #0x0
  444300:	b.eq	44433c <link_unsigned_attribute+0x260>  // b.none
  444304:	mov	w0, #0x1                   	// #1
  444308:	bl	40be30 <log_get_max_level_realm@plt>
  44430c:	mov	w1, w0
  444310:	ldr	w0, [sp, #88]
  444314:	cmp	w0, w1
  444318:	cset	w0, le
  44431c:	and	w0, w0, #0xff
  444320:	and	x0, x0, #0xff
  444324:	cmp	x0, #0x0
  444328:	b.eq	44433c <link_unsigned_attribute+0x260>  // b.none
  44432c:	add	x0, sp, #0x78
  444330:	mov	x1, x0
  444334:	ldr	x0, [sp, #128]
  444338:	bl	40aba0 <sd_device_get_sysname@plt>
  44433c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444340:	add	x2, x0, #0xf4b
  444344:	ldr	x0, [sp, #120]
  444348:	cmp	x0, #0x0
  44434c:	b.eq	44435c <link_unsigned_attribute+0x280>  // b.none
  444350:	adrp	x0, 45c000 <__func__.8393+0x150>
  444354:	add	x0, x0, #0xc8
  444358:	b	444360 <link_unsigned_attribute+0x284>
  44435c:	mov	x0, #0x0                   	// #0
  444360:	ldr	x3, [sp, #120]
  444364:	ldr	x1, [sp, #56]
  444368:	ldr	w1, [x1]
  44436c:	str	w1, [sp, #24]
  444370:	ldr	x1, [sp, #64]
  444374:	str	x1, [sp, #16]
  444378:	adrp	x1, 45c000 <__func__.8393+0x150>
  44437c:	add	x1, x1, #0x108
  444380:	str	x1, [sp, #8]
  444384:	str	xzr, [sp]
  444388:	mov	x7, #0x0                   	// #0
  44438c:	mov	x6, x3
  444390:	mov	x5, x0
  444394:	adrp	x0, 45c000 <__func__.8393+0x150>
  444398:	add	x4, x0, #0x900
  44439c:	mov	w3, #0xc8                  	// #200
  4443a0:	ldr	w1, [sp, #92]
  4443a4:	ldr	w0, [sp, #88]
  4443a8:	bl	40b020 <log_object_internal@plt>
  4443ac:	mov	w0, #0x0                   	// #0
  4443b0:	mov	w1, w0
  4443b4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4443b8:	ldr	x0, [x0, #4032]
  4443bc:	ldr	x2, [sp, #152]
  4443c0:	ldr	x0, [x0]
  4443c4:	eor	x0, x2, x0
  4443c8:	cmp	x0, #0x0
  4443cc:	b.eq	4443d4 <link_unsigned_attribute+0x2f8>  // b.none
  4443d0:	bl	40b280 <__stack_chk_fail@plt>
  4443d4:	mov	w0, w1
  4443d8:	ldp	x29, x30, [sp, #32]
  4443dc:	add	sp, sp, #0xa0
  4443e0:	ret

00000000004443e4 <link_config_load>:
  4443e4:	stp	x29, x30, [sp, #-224]!
  4443e8:	mov	x29, sp
  4443ec:	str	x19, [sp, #16]
  4443f0:	str	x0, [sp, #40]
  4443f4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4443f8:	ldr	x0, [x0, #4032]
  4443fc:	ldr	x1, [x0]
  444400:	str	x1, [sp, #216]
  444404:	mov	x1, #0x0                   	// #0
  444408:	ldr	x0, [sp, #40]
  44440c:	bl	443890 <link_configs_free>
  444410:	bl	444054 <enable_name_policy>
  444414:	and	w0, w0, #0xff
  444418:	eor	w0, w0, #0x1
  44441c:	and	w0, w0, #0xff
  444420:	cmp	w0, #0x0
  444424:	b.eq	4444a8 <link_config_load+0xc4>  // b.none
  444428:	ldr	x0, [sp, #40]
  44442c:	strb	wzr, [x0, #12]
  444430:	mov	w0, #0x6                   	// #6
  444434:	str	w0, [sp, #56]
  444438:	str	wzr, [sp, #60]
  44443c:	mov	w0, #0x1                   	// #1
  444440:	str	w0, [sp, #64]
  444444:	ldr	w0, [sp, #64]
  444448:	bl	40be30 <log_get_max_level_realm@plt>
  44444c:	mov	w1, w0
  444450:	ldr	w0, [sp, #56]
  444454:	and	w0, w0, #0x7
  444458:	cmp	w1, w0
  44445c:	b.lt	4444a0 <link_config_load+0xbc>  // b.tstop
  444460:	ldr	w0, [sp, #64]
  444464:	lsl	w1, w0, #10
  444468:	ldr	w0, [sp, #56]
  44446c:	orr	w6, w1, w0
  444470:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444474:	add	x1, x0, #0xf4b
  444478:	adrp	x0, 45c000 <__func__.8393+0x150>
  44447c:	add	x5, x0, #0x120
  444480:	adrp	x0, 45c000 <__func__.8393+0x150>
  444484:	add	x4, x0, #0x918
  444488:	mov	w3, #0xd5                  	// #213
  44448c:	mov	x2, x1
  444490:	ldr	w1, [sp, #60]
  444494:	mov	w0, w6
  444498:	bl	40b4f0 <log_internal_realm@plt>
  44449c:	b	4444a8 <link_config_load+0xc4>
  4444a0:	ldr	w0, [sp, #60]
  4444a4:	cmp	w0, #0x0
  4444a8:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4444ac:	add	x1, x0, #0x138
  4444b0:	add	x0, sp, #0x78
  4444b4:	ldp	x2, x3, [x1]
  4444b8:	stp	x2, x3, [x0]
  4444bc:	ldp	x2, x3, [x1, #16]
  4444c0:	stp	x2, x3, [x0, #16]
  4444c4:	ldp	x2, x3, [x1, #32]
  4444c8:	stp	x2, x3, [x0, #32]
  4444cc:	ldr	x0, [sp, #40]
  4444d0:	add	x1, x0, #0x18
  4444d4:	add	x0, sp, #0x78
  4444d8:	mov	w2, #0x1                   	// #1
  4444dc:	bl	40ba50 <paths_check_timestamp@plt>
  4444e0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4444e4:	add	x1, x0, #0x138
  4444e8:	add	x0, sp, #0xa8
  4444ec:	ldp	x2, x3, [x1]
  4444f0:	stp	x2, x3, [x0]
  4444f4:	ldp	x2, x3, [x1, #16]
  4444f8:	stp	x2, x3, [x0, #16]
  4444fc:	ldp	x2, x3, [x1, #32]
  444500:	stp	x2, x3, [x0, #32]
  444504:	add	x0, sp, #0xa8
  444508:	add	x5, sp, #0x60
  44450c:	mov	x4, x0
  444510:	mov	w3, #0x0                   	// #0
  444514:	mov	x2, #0x0                   	// #0
  444518:	adrp	x0, 45c000 <__func__.8393+0x150>
  44451c:	add	x1, x0, #0x170
  444520:	mov	x0, x5
  444524:	bl	40bd40 <conf_files_list_strv@plt>
  444528:	str	w0, [sp, #68]
  44452c:	ldr	w0, [sp, #68]
  444530:	cmp	w0, #0x0
  444534:	b.ge	4445c8 <link_config_load+0x1e4>  // b.tcont
  444538:	mov	w0, #0x3                   	// #3
  44453c:	str	w0, [sp, #84]
  444540:	ldr	w0, [sp, #68]
  444544:	str	w0, [sp, #88]
  444548:	mov	w0, #0x1                   	// #1
  44454c:	str	w0, [sp, #92]
  444550:	ldr	w0, [sp, #92]
  444554:	bl	40be30 <log_get_max_level_realm@plt>
  444558:	mov	w1, w0
  44455c:	ldr	w0, [sp, #84]
  444560:	and	w0, w0, #0x7
  444564:	cmp	w1, w0
  444568:	b.lt	4445b0 <link_config_load+0x1cc>  // b.tstop
  44456c:	ldr	w0, [sp, #92]
  444570:	lsl	w1, w0, #10
  444574:	ldr	w0, [sp, #84]
  444578:	orr	w6, w1, w0
  44457c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444580:	add	x1, x0, #0xf4b
  444584:	adrp	x0, 45c000 <__func__.8393+0x150>
  444588:	add	x5, x0, #0x178
  44458c:	adrp	x0, 45c000 <__func__.8393+0x150>
  444590:	add	x4, x0, #0x918
  444594:	mov	w3, #0xdd                  	// #221
  444598:	mov	x2, x1
  44459c:	ldr	w1, [sp, #88]
  4445a0:	mov	w0, w6
  4445a4:	bl	40b4f0 <log_internal_realm@plt>
  4445a8:	mov	w19, w0
  4445ac:	b	4446dc <link_config_load+0x2f8>
  4445b0:	ldr	w0, [sp, #88]
  4445b4:	cmp	w0, #0x0
  4445b8:	cneg	w0, w0, lt  // lt = tstop
  4445bc:	and	w0, w0, #0xff
  4445c0:	neg	w19, w0
  4445c4:	b	4446dc <link_config_load+0x2f8>
  4445c8:	ldr	x0, [sp, #96]
  4445cc:	str	x0, [sp, #112]
  4445d0:	ldr	x0, [sp, #112]
  4445d4:	cmp	x0, #0x0
  4445d8:	b.eq	4445f8 <link_config_load+0x214>  // b.none
  4445dc:	ldr	x0, [sp, #112]
  4445e0:	bl	40b3f0 <strv_length@plt>
  4445e4:	lsl	x0, x0, #3
  4445e8:	sub	x0, x0, #0x8
  4445ec:	ldr	x1, [sp, #112]
  4445f0:	add	x0, x1, x0
  4445f4:	b	4445fc <link_config_load+0x218>
  4445f8:	mov	x0, #0x0                   	// #0
  4445fc:	str	x0, [sp, #104]
  444600:	b	4446bc <link_config_load+0x2d8>
  444604:	ldr	x0, [sp, #104]
  444608:	ldr	x0, [x0]
  44460c:	mov	x1, x0
  444610:	ldr	x0, [sp, #40]
  444614:	bl	443a18 <link_load_one>
  444618:	str	w0, [sp, #68]
  44461c:	ldr	w0, [sp, #68]
  444620:	cmp	w0, #0x0
  444624:	b.ge	4446b0 <link_config_load+0x2cc>  // b.tcont
  444628:	mov	w0, #0x3                   	// #3
  44462c:	str	w0, [sp, #72]
  444630:	ldr	w0, [sp, #68]
  444634:	str	w0, [sp, #76]
  444638:	mov	w0, #0x1                   	// #1
  44463c:	str	w0, [sp, #80]
  444640:	ldr	w0, [sp, #80]
  444644:	bl	40be30 <log_get_max_level_realm@plt>
  444648:	mov	w1, w0
  44464c:	ldr	w0, [sp, #72]
  444650:	and	w0, w0, #0x7
  444654:	cmp	w1, w0
  444658:	b.lt	4446a8 <link_config_load+0x2c4>  // b.tstop
  44465c:	ldr	w0, [sp, #80]
  444660:	lsl	w1, w0, #10
  444664:	ldr	w0, [sp, #72]
  444668:	orr	w7, w1, w0
  44466c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444670:	add	x1, x0, #0xf4b
  444674:	ldr	x0, [sp, #104]
  444678:	ldr	x0, [x0]
  44467c:	mov	x6, x0
  444680:	adrp	x0, 45c000 <__func__.8393+0x150>
  444684:	add	x5, x0, #0x1a0
  444688:	adrp	x0, 45c000 <__func__.8393+0x150>
  44468c:	add	x4, x0, #0x918
  444690:	mov	w3, #0xe2                  	// #226
  444694:	mov	x2, x1
  444698:	ldr	w1, [sp, #76]
  44469c:	mov	w0, w7
  4446a0:	bl	40b4f0 <log_internal_realm@plt>
  4446a4:	b	4446b0 <link_config_load+0x2cc>
  4446a8:	ldr	w0, [sp, #76]
  4446ac:	cmp	w0, #0x0
  4446b0:	ldr	x0, [sp, #104]
  4446b4:	sub	x0, x0, #0x8
  4446b8:	str	x0, [sp, #104]
  4446bc:	ldr	x0, [sp, #96]
  4446c0:	cmp	x0, #0x0
  4446c4:	b.eq	4446d8 <link_config_load+0x2f4>  // b.none
  4446c8:	ldr	x0, [sp, #96]
  4446cc:	ldr	x1, [sp, #104]
  4446d0:	cmp	x1, x0
  4446d4:	b.cs	444604 <link_config_load+0x220>  // b.hs, b.nlast
  4446d8:	mov	w19, #0x0                   	// #0
  4446dc:	add	x0, sp, #0x60
  4446e0:	bl	4436f4 <strv_freep>
  4446e4:	mov	w1, w19
  4446e8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4446ec:	ldr	x0, [x0, #4032]
  4446f0:	ldr	x2, [sp, #216]
  4446f4:	ldr	x0, [x0]
  4446f8:	eor	x0, x2, x0
  4446fc:	cmp	x0, #0x0
  444700:	b.eq	444708 <link_config_load+0x324>  // b.none
  444704:	bl	40b280 <__stack_chk_fail@plt>
  444708:	mov	w0, w1
  44470c:	ldr	x19, [sp, #16]
  444710:	ldp	x29, x30, [sp], #224
  444714:	ret

0000000000444718 <link_config_should_reload>:
  444718:	stp	x29, x30, [sp, #-96]!
  44471c:	mov	x29, sp
  444720:	str	x0, [sp, #24]
  444724:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  444728:	ldr	x0, [x0, #4032]
  44472c:	ldr	x1, [x0]
  444730:	str	x1, [sp, #88]
  444734:	mov	x1, #0x0                   	// #0
  444738:	adrp	x0, 48d000 <arg_resolve_name_timing>
  44473c:	add	x1, x0, #0x138
  444740:	add	x0, sp, #0x28
  444744:	ldp	x2, x3, [x1]
  444748:	stp	x2, x3, [x0]
  44474c:	ldp	x2, x3, [x1, #16]
  444750:	stp	x2, x3, [x0, #16]
  444754:	ldp	x2, x3, [x1, #32]
  444758:	stp	x2, x3, [x0, #32]
  44475c:	ldr	x0, [sp, #24]
  444760:	add	x1, x0, #0x18
  444764:	add	x0, sp, #0x28
  444768:	mov	w2, #0x0                   	// #0
  44476c:	bl	40ba50 <paths_check_timestamp@plt>
  444770:	and	w0, w0, #0xff
  444774:	mov	w1, w0
  444778:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44477c:	ldr	x0, [x0, #4032]
  444780:	ldr	x2, [sp, #88]
  444784:	ldr	x0, [x0]
  444788:	eor	x0, x2, x0
  44478c:	cmp	x0, #0x0
  444790:	b.eq	444798 <link_config_should_reload+0x80>  // b.none
  444794:	bl	40b280 <__stack_chk_fail@plt>
  444798:	mov	w0, w1
  44479c:	ldp	x29, x30, [sp], #96
  4447a0:	ret

00000000004447a4 <link_config_get>:
  4447a4:	sub	sp, sp, #0xc0
  4447a8:	stp	x29, x30, [sp, #64]
  4447ac:	add	x29, sp, #0x40
  4447b0:	str	x0, [sp, #104]
  4447b4:	str	x1, [sp, #96]
  4447b8:	str	x2, [sp, #88]
  4447bc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4447c0:	ldr	x0, [x0, #4032]
  4447c4:	ldr	x1, [x0]
  4447c8:	str	x1, [sp, #184]
  4447cc:	mov	x1, #0x0                   	// #0
  4447d0:	ldr	x0, [sp, #104]
  4447d4:	cmp	x0, #0x0
  4447d8:	cset	w0, eq  // eq = none
  4447dc:	and	w0, w0, #0xff
  4447e0:	and	x0, x0, #0xff
  4447e4:	cmp	x0, #0x0
  4447e8:	b.eq	444814 <link_config_get+0x70>  // b.none
  4447ec:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4447f0:	add	x1, x0, #0xf4b
  4447f4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4447f8:	add	x4, x0, #0x930
  4447fc:	mov	w3, #0xef                  	// #239
  444800:	mov	x2, x1
  444804:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444808:	add	x1, x0, #0xf68
  44480c:	mov	w0, #0x1                   	// #1
  444810:	bl	40abb0 <log_assert_failed_realm@plt>
  444814:	ldr	x0, [sp, #96]
  444818:	cmp	x0, #0x0
  44481c:	cset	w0, eq  // eq = none
  444820:	and	w0, w0, #0xff
  444824:	and	x0, x0, #0xff
  444828:	cmp	x0, #0x0
  44482c:	b.eq	444858 <link_config_get+0xb4>  // b.none
  444830:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444834:	add	x1, x0, #0xf4b
  444838:	adrp	x0, 45c000 <__func__.8393+0x150>
  44483c:	add	x4, x0, #0x930
  444840:	mov	w3, #0xf0                  	// #240
  444844:	mov	x2, x1
  444848:	adrp	x0, 45c000 <__func__.8393+0x150>
  44484c:	add	x1, x0, #0x1c0
  444850:	mov	w0, #0x1                   	// #1
  444854:	bl	40abb0 <log_assert_failed_realm@plt>
  444858:	ldr	x0, [sp, #88]
  44485c:	cmp	x0, #0x0
  444860:	cset	w0, eq  // eq = none
  444864:	and	w0, w0, #0xff
  444868:	and	x0, x0, #0xff
  44486c:	cmp	x0, #0x0
  444870:	b.eq	44489c <link_config_get+0xf8>  // b.none
  444874:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444878:	add	x1, x0, #0xf4b
  44487c:	adrp	x0, 45c000 <__func__.8393+0x150>
  444880:	add	x4, x0, #0x930
  444884:	mov	w3, #0xf1                  	// #241
  444888:	mov	x2, x1
  44488c:	adrp	x0, 45c000 <__func__.8393+0x150>
  444890:	add	x1, x0, #0x1c8
  444894:	mov	w0, #0x1                   	// #1
  444898:	bl	40abb0 <log_assert_failed_realm@plt>
  44489c:	ldr	x0, [sp, #104]
  4448a0:	ldr	x0, [x0]
  4448a4:	str	x0, [sp, #152]
  4448a8:	b	444c00 <link_config_get+0x45c>
  4448ac:	ldr	x0, [sp, #152]
  4448b0:	ldr	x8, [x0, #8]
  4448b4:	ldr	x0, [sp, #152]
  4448b8:	ldr	x1, [x0, #16]
  4448bc:	ldr	x0, [sp, #152]
  4448c0:	ldr	x2, [x0, #24]
  4448c4:	ldr	x0, [sp, #152]
  4448c8:	ldr	x3, [x0, #32]
  4448cc:	ldr	x0, [sp, #152]
  4448d0:	ldr	x4, [x0, #40]
  4448d4:	ldr	x0, [sp, #152]
  4448d8:	ldr	x5, [x0, #48]
  4448dc:	str	xzr, [sp, #48]
  4448e0:	str	xzr, [sp, #40]
  4448e4:	str	wzr, [sp, #32]
  4448e8:	str	xzr, [sp, #24]
  4448ec:	str	xzr, [sp, #16]
  4448f0:	ldr	x0, [sp, #96]
  4448f4:	str	x0, [sp, #8]
  4448f8:	str	xzr, [sp]
  4448fc:	mov	x7, #0x0                   	// #0
  444900:	mov	x6, #0x0                   	// #0
  444904:	mov	x0, x8
  444908:	bl	44e790 <net_match_config>
  44490c:	and	w0, w0, #0xff
  444910:	cmp	w0, #0x0
  444914:	b.eq	444bf4 <link_config_get+0x450>  // b.none
  444918:	ldr	x0, [sp, #152]
  44491c:	ldr	x0, [x0, #40]
  444920:	cmp	x0, #0x0
  444924:	b.eq	444b1c <link_config_get+0x378>  // b.none
  444928:	ldr	x0, [sp, #152]
  44492c:	ldr	x2, [x0, #40]
  444930:	adrp	x0, 45c000 <__func__.8393+0x150>
  444934:	add	x1, x0, #0x1d0
  444938:	mov	x0, x2
  44493c:	bl	40b450 <strv_find@plt>
  444940:	cmp	x0, #0x0
  444944:	b.ne	444b1c <link_config_get+0x378>  // b.any
  444948:	str	wzr, [sp, #116]
  44494c:	add	x0, sp, #0x74
  444950:	mov	x2, x0
  444954:	adrp	x0, 45c000 <__func__.8393+0x150>
  444958:	add	x1, x0, #0x1d8
  44495c:	ldr	x0, [sp, #96]
  444960:	bl	4440dc <link_unsigned_attribute>
  444964:	ldr	w0, [sp, #116]
  444968:	cmp	w0, #0x1
  44496c:	b.ne	444a48 <link_config_get+0x2a4>  // b.any
  444970:	str	xzr, [sp, #144]
  444974:	ldr	x0, [sp, #96]
  444978:	str	x0, [sp, #168]
  44497c:	mov	w0, #0x4                   	// #4
  444980:	str	w0, [sp, #128]
  444984:	str	wzr, [sp, #132]
  444988:	ldr	x0, [sp, #168]
  44498c:	cmp	x0, #0x0
  444990:	b.eq	4449cc <link_config_get+0x228>  // b.none
  444994:	mov	w0, #0x1                   	// #1
  444998:	bl	40be30 <log_get_max_level_realm@plt>
  44499c:	mov	w1, w0
  4449a0:	ldr	w0, [sp, #128]
  4449a4:	cmp	w0, w1
  4449a8:	cset	w0, le
  4449ac:	and	w0, w0, #0xff
  4449b0:	and	x0, x0, #0xff
  4449b4:	cmp	x0, #0x0
  4449b8:	b.eq	4449cc <link_config_get+0x228>  // b.none
  4449bc:	add	x0, sp, #0x90
  4449c0:	mov	x1, x0
  4449c4:	ldr	x0, [sp, #168]
  4449c8:	bl	40aba0 <sd_device_get_sysname@plt>
  4449cc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4449d0:	add	x2, x0, #0xf4b
  4449d4:	ldr	x0, [sp, #144]
  4449d8:	cmp	x0, #0x0
  4449dc:	b.eq	4449ec <link_config_get+0x248>  // b.none
  4449e0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4449e4:	add	x0, x0, #0xc8
  4449e8:	b	4449f0 <link_config_get+0x24c>
  4449ec:	mov	x0, #0x0                   	// #0
  4449f0:	ldr	x3, [sp, #144]
  4449f4:	ldr	x1, [sp, #152]
  4449f8:	ldr	x1, [x1]
  4449fc:	str	x1, [sp, #16]
  444a00:	adrp	x1, 45c000 <__func__.8393+0x150>
  444a04:	add	x1, x1, #0x1f0
  444a08:	str	x1, [sp, #8]
  444a0c:	str	xzr, [sp]
  444a10:	mov	x7, #0x0                   	// #0
  444a14:	mov	x6, x3
  444a18:	mov	x5, x0
  444a1c:	adrp	x0, 45c000 <__func__.8393+0x150>
  444a20:	add	x4, x0, #0x940
  444a24:	mov	w3, #0xfd                  	// #253
  444a28:	ldr	w1, [sp, #132]
  444a2c:	ldr	w0, [sp, #128]
  444a30:	bl	40b020 <log_object_internal@plt>
  444a34:	ldr	x0, [sp, #88]
  444a38:	ldr	x1, [sp, #152]
  444a3c:	str	x1, [x0]
  444a40:	mov	w0, #0x0                   	// #0
  444a44:	b	444c18 <link_config_get+0x474>
  444a48:	ldr	w0, [sp, #116]
  444a4c:	cmp	w0, #0x4
  444a50:	b.ne	444b1c <link_config_get+0x378>  // b.any
  444a54:	str	xzr, [sp, #144]
  444a58:	ldr	x0, [sp, #96]
  444a5c:	str	x0, [sp, #160]
  444a60:	mov	w0, #0x4                   	// #4
  444a64:	str	w0, [sp, #120]
  444a68:	str	wzr, [sp, #124]
  444a6c:	ldr	x0, [sp, #160]
  444a70:	cmp	x0, #0x0
  444a74:	b.eq	444ab0 <link_config_get+0x30c>  // b.none
  444a78:	mov	w0, #0x1                   	// #1
  444a7c:	bl	40be30 <log_get_max_level_realm@plt>
  444a80:	mov	w1, w0
  444a84:	ldr	w0, [sp, #120]
  444a88:	cmp	w0, w1
  444a8c:	cset	w0, le
  444a90:	and	w0, w0, #0xff
  444a94:	and	x0, x0, #0xff
  444a98:	cmp	x0, #0x0
  444a9c:	b.eq	444ab0 <link_config_get+0x30c>  // b.none
  444aa0:	add	x0, sp, #0x90
  444aa4:	mov	x1, x0
  444aa8:	ldr	x0, [sp, #160]
  444aac:	bl	40aba0 <sd_device_get_sysname@plt>
  444ab0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444ab4:	add	x2, x0, #0xf4b
  444ab8:	ldr	x0, [sp, #144]
  444abc:	cmp	x0, #0x0
  444ac0:	b.eq	444ad0 <link_config_get+0x32c>  // b.none
  444ac4:	adrp	x0, 45c000 <__func__.8393+0x150>
  444ac8:	add	x0, x0, #0xc8
  444acc:	b	444ad4 <link_config_get+0x330>
  444ad0:	mov	x0, #0x0                   	// #0
  444ad4:	ldr	x3, [sp, #144]
  444ad8:	ldr	x1, [sp, #152]
  444adc:	ldr	x1, [x1]
  444ae0:	str	x1, [sp, #16]
  444ae4:	adrp	x1, 45c000 <__func__.8393+0x150>
  444ae8:	add	x1, x1, #0x248
  444aec:	str	x1, [sp, #8]
  444af0:	str	xzr, [sp]
  444af4:	mov	x7, #0x0                   	// #0
  444af8:	mov	x6, x3
  444afc:	mov	x5, x0
  444b00:	adrp	x0, 45c000 <__func__.8393+0x150>
  444b04:	add	x4, x0, #0x940
  444b08:	mov	w3, #0x103                 	// #259
  444b0c:	ldr	w1, [sp, #124]
  444b10:	ldr	w0, [sp, #120]
  444b14:	bl	40b020 <log_object_internal@plt>
  444b18:	b	444bf4 <link_config_get+0x450>
  444b1c:	str	xzr, [sp, #144]
  444b20:	ldr	x0, [sp, #96]
  444b24:	str	x0, [sp, #176]
  444b28:	mov	w0, #0x7                   	// #7
  444b2c:	str	w0, [sp, #136]
  444b30:	str	wzr, [sp, #140]
  444b34:	ldr	x0, [sp, #176]
  444b38:	cmp	x0, #0x0
  444b3c:	b.eq	444b78 <link_config_get+0x3d4>  // b.none
  444b40:	mov	w0, #0x1                   	// #1
  444b44:	bl	40be30 <log_get_max_level_realm@plt>
  444b48:	mov	w1, w0
  444b4c:	ldr	w0, [sp, #136]
  444b50:	cmp	w0, w1
  444b54:	cset	w0, le
  444b58:	and	w0, w0, #0xff
  444b5c:	and	x0, x0, #0xff
  444b60:	cmp	x0, #0x0
  444b64:	b.eq	444b78 <link_config_get+0x3d4>  // b.none
  444b68:	add	x0, sp, #0x90
  444b6c:	mov	x1, x0
  444b70:	ldr	x0, [sp, #176]
  444b74:	bl	40aba0 <sd_device_get_sysname@plt>
  444b78:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444b7c:	add	x2, x0, #0xf4b
  444b80:	ldr	x0, [sp, #144]
  444b84:	cmp	x0, #0x0
  444b88:	b.eq	444b98 <link_config_get+0x3f4>  // b.none
  444b8c:	adrp	x0, 45c000 <__func__.8393+0x150>
  444b90:	add	x0, x0, #0xc8
  444b94:	b	444b9c <link_config_get+0x3f8>
  444b98:	mov	x0, #0x0                   	// #0
  444b9c:	ldr	x3, [sp, #144]
  444ba0:	ldr	x1, [sp, #152]
  444ba4:	ldr	x1, [x1]
  444ba8:	str	x1, [sp, #16]
  444bac:	adrp	x1, 45c000 <__func__.8393+0x150>
  444bb0:	add	x1, x1, #0x290
  444bb4:	str	x1, [sp, #8]
  444bb8:	str	xzr, [sp]
  444bbc:	mov	x7, #0x0                   	// #0
  444bc0:	mov	x6, x3
  444bc4:	mov	x5, x0
  444bc8:	adrp	x0, 45c000 <__func__.8393+0x150>
  444bcc:	add	x4, x0, #0x940
  444bd0:	mov	w3, #0x10a                 	// #266
  444bd4:	ldr	w1, [sp, #140]
  444bd8:	ldr	w0, [sp, #136]
  444bdc:	bl	40b020 <log_object_internal@plt>
  444be0:	ldr	x0, [sp, #88]
  444be4:	ldr	x1, [sp, #152]
  444be8:	str	x1, [x0]
  444bec:	mov	w0, #0x0                   	// #0
  444bf0:	b	444c18 <link_config_get+0x474>
  444bf4:	ldr	x0, [sp, #152]
  444bf8:	ldr	x0, [x0, #208]
  444bfc:	str	x0, [sp, #152]
  444c00:	ldr	x0, [sp, #152]
  444c04:	cmp	x0, #0x0
  444c08:	b.ne	4448ac <link_config_get+0x108>  // b.any
  444c0c:	ldr	x0, [sp, #88]
  444c10:	str	xzr, [x0]
  444c14:	mov	w0, #0xfffffffe            	// #-2
  444c18:	mov	w1, w0
  444c1c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  444c20:	ldr	x0, [x0, #4032]
  444c24:	ldr	x2, [sp, #184]
  444c28:	ldr	x0, [x0]
  444c2c:	eor	x0, x2, x0
  444c30:	cmp	x0, #0x0
  444c34:	b.eq	444c3c <link_config_get+0x498>  // b.none
  444c38:	bl	40b280 <__stack_chk_fail@plt>
  444c3c:	mov	w0, w1
  444c40:	ldp	x29, x30, [sp, #64]
  444c44:	add	sp, sp, #0xc0
  444c48:	ret

0000000000444c4c <get_mac>:
  444c4c:	sub	sp, sp, #0x110
  444c50:	stp	x29, x30, [sp, #32]
  444c54:	add	x29, sp, #0x20
  444c58:	stp	x19, x20, [sp, #48]
  444c5c:	str	x21, [sp, #64]
  444c60:	str	x0, [sp, #104]
  444c64:	str	w1, [sp, #100]
  444c68:	str	x2, [sp, #88]
  444c6c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  444c70:	ldr	x0, [x0, #4032]
  444c74:	ldr	x1, [x0]
  444c78:	str	x1, [sp, #264]
  444c7c:	mov	x1, #0x0                   	// #0
  444c80:	ldr	w0, [sp, #100]
  444c84:	cmp	w0, #0x1
  444c88:	cset	w0, eq  // eq = none
  444c8c:	strb	w0, [sp, #127]
  444c90:	strb	wzr, [sp, #126]
  444c94:	ldr	w0, [sp, #100]
  444c98:	cmp	w0, #0x1
  444c9c:	b.hi	444ca8 <get_mac+0x5c>  // b.pmore
  444ca0:	mov	w0, #0x1                   	// #1
  444ca4:	strb	w0, [sp, #126]
  444ca8:	nop
  444cac:	ldrb	w0, [sp, #126]
  444cb0:	eor	w0, w0, #0x1
  444cb4:	and	w0, w0, #0xff
  444cb8:	and	x0, x0, #0xff
  444cbc:	cmp	x0, #0x0
  444cc0:	b.eq	444cec <get_mac+0xa0>  // b.none
  444cc4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444cc8:	add	x1, x0, #0xf4b
  444ccc:	adrp	x0, 45c000 <__func__.8393+0x150>
  444cd0:	add	x4, x0, #0x950
  444cd4:	mov	w3, #0x11a                 	// #282
  444cd8:	mov	x2, x1
  444cdc:	adrp	x0, 45c000 <__func__.8393+0x150>
  444ce0:	add	x1, x0, #0x2b0
  444ce4:	mov	w0, #0x1                   	// #1
  444ce8:	bl	40abb0 <log_assert_failed_realm@plt>
  444cec:	add	x0, sp, #0x80
  444cf0:	mov	x2, x0
  444cf4:	adrp	x0, 45c000 <__func__.8393+0x150>
  444cf8:	add	x1, x0, #0x300
  444cfc:	ldr	x0, [sp, #104]
  444d00:	bl	4440dc <link_unsigned_attribute>
  444d04:	str	w0, [sp, #132]
  444d08:	ldr	w0, [sp, #132]
  444d0c:	cmp	w0, #0x0
  444d10:	b.ge	444d1c <get_mac+0xd0>  // b.tcont
  444d14:	ldr	w0, [sp, #132]
  444d18:	b	445328 <get_mac+0x6dc>
  444d1c:	ldr	w0, [sp, #128]
  444d20:	cmp	w0, #0x3
  444d24:	b.eq	444d44 <get_mac+0xf8>  // b.none
  444d28:	cmp	w0, #0x3
  444d2c:	b.hi	444ebc <get_mac+0x270>  // b.pmore
  444d30:	cmp	w0, #0x1
  444d34:	b.ls	444f80 <get_mac+0x334>  // b.plast
  444d38:	cmp	w0, #0x2
  444d3c:	b.eq	444e00 <get_mac+0x1b4>  // b.none
  444d40:	b	444ebc <get_mac+0x270>
  444d44:	str	xzr, [sp, #200]
  444d48:	ldr	x0, [sp, #104]
  444d4c:	str	x0, [sp, #208]
  444d50:	mov	w0, #0x7                   	// #7
  444d54:	str	w0, [sp, #136]
  444d58:	str	wzr, [sp, #140]
  444d5c:	ldr	x0, [sp, #208]
  444d60:	cmp	x0, #0x0
  444d64:	b.eq	444da0 <get_mac+0x154>  // b.none
  444d68:	mov	w0, #0x1                   	// #1
  444d6c:	bl	40be30 <log_get_max_level_realm@plt>
  444d70:	mov	w1, w0
  444d74:	ldr	w0, [sp, #136]
  444d78:	cmp	w0, w1
  444d7c:	cset	w0, le
  444d80:	and	w0, w0, #0xff
  444d84:	and	x0, x0, #0xff
  444d88:	cmp	x0, #0x0
  444d8c:	b.eq	444da0 <get_mac+0x154>  // b.none
  444d90:	add	x0, sp, #0xc8
  444d94:	mov	x1, x0
  444d98:	ldr	x0, [sp, #208]
  444d9c:	bl	40aba0 <sd_device_get_sysname@plt>
  444da0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444da4:	add	x2, x0, #0xf4b
  444da8:	ldr	x0, [sp, #200]
  444dac:	cmp	x0, #0x0
  444db0:	b.eq	444dc0 <get_mac+0x174>  // b.none
  444db4:	adrp	x0, 45c000 <__func__.8393+0x150>
  444db8:	add	x0, x0, #0xc8
  444dbc:	b	444dc4 <get_mac+0x178>
  444dc0:	mov	x0, #0x0                   	// #0
  444dc4:	ldr	x3, [sp, #200]
  444dc8:	adrp	x1, 45c000 <__func__.8393+0x150>
  444dcc:	add	x1, x1, #0x318
  444dd0:	str	x1, [sp, #8]
  444dd4:	str	xzr, [sp]
  444dd8:	mov	x7, #0x0                   	// #0
  444ddc:	mov	x6, x3
  444de0:	mov	x5, x0
  444de4:	adrp	x0, 45c000 <__func__.8393+0x150>
  444de8:	add	x4, x0, #0x958
  444dec:	mov	w3, #0x121                 	// #289
  444df0:	ldr	w1, [sp, #140]
  444df4:	ldr	w0, [sp, #136]
  444df8:	bl	40b020 <log_object_internal@plt>
  444dfc:	b	445328 <get_mac+0x6dc>
  444e00:	str	xzr, [sp, #200]
  444e04:	ldr	x0, [sp, #104]
  444e08:	str	x0, [sp, #216]
  444e0c:	mov	w0, #0x7                   	// #7
  444e10:	str	w0, [sp, #144]
  444e14:	str	wzr, [sp, #148]
  444e18:	ldr	x0, [sp, #216]
  444e1c:	cmp	x0, #0x0
  444e20:	b.eq	444e5c <get_mac+0x210>  // b.none
  444e24:	mov	w0, #0x1                   	// #1
  444e28:	bl	40be30 <log_get_max_level_realm@plt>
  444e2c:	mov	w1, w0
  444e30:	ldr	w0, [sp, #144]
  444e34:	cmp	w0, w1
  444e38:	cset	w0, le
  444e3c:	and	w0, w0, #0xff
  444e40:	and	x0, x0, #0xff
  444e44:	cmp	x0, #0x0
  444e48:	b.eq	444e5c <get_mac+0x210>  // b.none
  444e4c:	add	x0, sp, #0xc8
  444e50:	mov	x1, x0
  444e54:	ldr	x0, [sp, #216]
  444e58:	bl	40aba0 <sd_device_get_sysname@plt>
  444e5c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444e60:	add	x2, x0, #0xf4b
  444e64:	ldr	x0, [sp, #200]
  444e68:	cmp	x0, #0x0
  444e6c:	b.eq	444e7c <get_mac+0x230>  // b.none
  444e70:	adrp	x0, 45c000 <__func__.8393+0x150>
  444e74:	add	x0, x0, #0xc8
  444e78:	b	444e80 <get_mac+0x234>
  444e7c:	mov	x0, #0x0                   	// #0
  444e80:	ldr	x3, [sp, #200]
  444e84:	adrp	x1, 45c000 <__func__.8393+0x150>
  444e88:	add	x1, x1, #0x348
  444e8c:	str	x1, [sp, #8]
  444e90:	str	xzr, [sp]
  444e94:	mov	x7, #0x0                   	// #0
  444e98:	mov	x6, x3
  444e9c:	mov	x5, x0
  444ea0:	adrp	x0, 45c000 <__func__.8393+0x150>
  444ea4:	add	x4, x0, #0x958
  444ea8:	mov	w3, #0x123                 	// #291
  444eac:	ldr	w1, [sp, #148]
  444eb0:	ldr	w0, [sp, #144]
  444eb4:	bl	40b020 <log_object_internal@plt>
  444eb8:	b	445328 <get_mac+0x6dc>
  444ebc:	str	xzr, [sp, #200]
  444ec0:	ldr	x0, [sp, #104]
  444ec4:	str	x0, [sp, #256]
  444ec8:	mov	w0, #0x4                   	// #4
  444ecc:	str	w0, [sp, #184]
  444ed0:	str	wzr, [sp, #188]
  444ed4:	ldr	x0, [sp, #256]
  444ed8:	cmp	x0, #0x0
  444edc:	b.eq	444f18 <get_mac+0x2cc>  // b.none
  444ee0:	mov	w0, #0x1                   	// #1
  444ee4:	bl	40be30 <log_get_max_level_realm@plt>
  444ee8:	mov	w1, w0
  444eec:	ldr	w0, [sp, #184]
  444ef0:	cmp	w0, w1
  444ef4:	cset	w0, le
  444ef8:	and	w0, w0, #0xff
  444efc:	and	x0, x0, #0xff
  444f00:	cmp	x0, #0x0
  444f04:	b.eq	444f18 <get_mac+0x2cc>  // b.none
  444f08:	add	x0, sp, #0xc8
  444f0c:	mov	x1, x0
  444f10:	ldr	x0, [sp, #256]
  444f14:	bl	40aba0 <sd_device_get_sysname@plt>
  444f18:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  444f1c:	add	x2, x0, #0xf4b
  444f20:	ldr	x0, [sp, #200]
  444f24:	cmp	x0, #0x0
  444f28:	b.eq	444f38 <get_mac+0x2ec>  // b.none
  444f2c:	adrp	x0, 45c000 <__func__.8393+0x150>
  444f30:	add	x0, x0, #0xc8
  444f34:	b	444f3c <get_mac+0x2f0>
  444f38:	mov	x0, #0x0                   	// #0
  444f3c:	ldr	x3, [sp, #200]
  444f40:	ldr	w1, [sp, #128]
  444f44:	str	w1, [sp, #16]
  444f48:	adrp	x1, 45c000 <__func__.8393+0x150>
  444f4c:	add	x1, x1, #0x380
  444f50:	str	x1, [sp, #8]
  444f54:	str	xzr, [sp]
  444f58:	mov	x7, #0x0                   	// #0
  444f5c:	mov	x6, x3
  444f60:	mov	x5, x0
  444f64:	adrp	x0, 45c000 <__func__.8393+0x150>
  444f68:	add	x4, x0, #0x958
  444f6c:	mov	w3, #0x128                 	// #296
  444f70:	ldr	w1, [sp, #188]
  444f74:	ldr	w0, [sp, #184]
  444f78:	bl	40b020 <log_object_internal@plt>
  444f7c:	b	445328 <get_mac+0x6dc>
  444f80:	nop
  444f84:	ldrb	w0, [sp, #127]
  444f88:	ldr	w1, [sp, #128]
  444f8c:	cmp	w1, #0x1
  444f90:	cset	w1, eq  // eq = none
  444f94:	and	w1, w1, #0xff
  444f98:	cmp	w0, w1
  444f9c:	b.ne	44506c <get_mac+0x420>  // b.any
  444fa0:	str	xzr, [sp, #200]
  444fa4:	ldr	x0, [sp, #104]
  444fa8:	str	x0, [sp, #248]
  444fac:	mov	w0, #0x7                   	// #7
  444fb0:	str	w0, [sp, #176]
  444fb4:	str	wzr, [sp, #180]
  444fb8:	ldr	x0, [sp, #248]
  444fbc:	cmp	x0, #0x0
  444fc0:	b.eq	444ffc <get_mac+0x3b0>  // b.none
  444fc4:	mov	w0, #0x1                   	// #1
  444fc8:	bl	40be30 <log_get_max_level_realm@plt>
  444fcc:	mov	w1, w0
  444fd0:	ldr	w0, [sp, #176]
  444fd4:	cmp	w0, w1
  444fd8:	cset	w0, le
  444fdc:	and	w0, w0, #0xff
  444fe0:	and	x0, x0, #0xff
  444fe4:	cmp	x0, #0x0
  444fe8:	b.eq	444ffc <get_mac+0x3b0>  // b.none
  444fec:	add	x0, sp, #0xc8
  444ff0:	mov	x1, x0
  444ff4:	ldr	x0, [sp, #248]
  444ff8:	bl	40aba0 <sd_device_get_sysname@plt>
  444ffc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445000:	add	x20, x0, #0xf4b
  445004:	ldr	x0, [sp, #200]
  445008:	cmp	x0, #0x0
  44500c:	b.eq	44501c <get_mac+0x3d0>  // b.none
  445010:	adrp	x0, 45c000 <__func__.8393+0x150>
  445014:	add	x19, x0, #0xc8
  445018:	b	445020 <get_mac+0x3d4>
  44501c:	mov	x19, #0x0                   	// #0
  445020:	ldr	x21, [sp, #200]
  445024:	ldr	w0, [sp, #100]
  445028:	bl	4465d0 <mac_address_policy_to_string>
  44502c:	str	x0, [sp, #16]
  445030:	adrp	x0, 45c000 <__func__.8393+0x150>
  445034:	add	x0, x0, #0x3a8
  445038:	str	x0, [sp, #8]
  44503c:	str	xzr, [sp]
  445040:	mov	x7, #0x0                   	// #0
  445044:	mov	x6, x21
  445048:	mov	x5, x19
  44504c:	adrp	x0, 45c000 <__func__.8393+0x150>
  445050:	add	x4, x0, #0x958
  445054:	mov	w3, #0x12c                 	// #300
  445058:	mov	x2, x20
  44505c:	ldr	w1, [sp, #180]
  445060:	ldr	w0, [sp, #176]
  445064:	bl	40b020 <log_object_internal@plt>
  445068:	b	445328 <get_mac+0x6dc>
  44506c:	ldrb	w0, [sp, #127]
  445070:	cmp	w0, #0x0
  445074:	b.eq	445140 <get_mac+0x4f4>  // b.none
  445078:	str	xzr, [sp, #200]
  44507c:	ldr	x0, [sp, #104]
  445080:	str	x0, [sp, #240]
  445084:	mov	w0, #0x7                   	// #7
  445088:	str	w0, [sp, #168]
  44508c:	str	wzr, [sp, #172]
  445090:	ldr	x0, [sp, #240]
  445094:	cmp	x0, #0x0
  445098:	b.eq	4450d4 <get_mac+0x488>  // b.none
  44509c:	mov	w0, #0x1                   	// #1
  4450a0:	bl	40be30 <log_get_max_level_realm@plt>
  4450a4:	mov	w1, w0
  4450a8:	ldr	w0, [sp, #168]
  4450ac:	cmp	w0, w1
  4450b0:	cset	w0, le
  4450b4:	and	w0, w0, #0xff
  4450b8:	and	x0, x0, #0xff
  4450bc:	cmp	x0, #0x0
  4450c0:	b.eq	4450d4 <get_mac+0x488>  // b.none
  4450c4:	add	x0, sp, #0xc8
  4450c8:	mov	x1, x0
  4450cc:	ldr	x0, [sp, #240]
  4450d0:	bl	40aba0 <sd_device_get_sysname@plt>
  4450d4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4450d8:	add	x2, x0, #0xf4b
  4450dc:	ldr	x0, [sp, #200]
  4450e0:	cmp	x0, #0x0
  4450e4:	b.eq	4450f4 <get_mac+0x4a8>  // b.none
  4450e8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4450ec:	add	x0, x0, #0xc8
  4450f0:	b	4450f8 <get_mac+0x4ac>
  4450f4:	mov	x0, #0x0                   	// #0
  4450f8:	ldr	x3, [sp, #200]
  4450fc:	adrp	x1, 45c000 <__func__.8393+0x150>
  445100:	add	x1, x1, #0x3d8
  445104:	str	x1, [sp, #8]
  445108:	str	xzr, [sp]
  44510c:	mov	x7, #0x0                   	// #0
  445110:	mov	x6, x3
  445114:	mov	x5, x0
  445118:	adrp	x0, 45c000 <__func__.8393+0x150>
  44511c:	add	x4, x0, #0x958
  445120:	mov	w3, #0x130                 	// #304
  445124:	ldr	w1, [sp, #172]
  445128:	ldr	w0, [sp, #168]
  44512c:	bl	40b020 <log_object_internal@plt>
  445130:	ldr	x0, [sp, #88]
  445134:	mov	x1, #0x6                   	// #6
  445138:	bl	40a2b0 <random_bytes@plt>
  44513c:	b	4452f4 <get_mac+0x6a8>
  445140:	mov	w0, #0x20                  	// #32
  445144:	bl	4436c0 <naming_scheme_has>
  445148:	and	w1, w0, #0xff
  44514c:	add	x0, sp, #0xc0
  445150:	mov	x2, x0
  445154:	ldr	x0, [sp, #104]
  445158:	bl	44e01c <net_get_unique_predictable_data>
  44515c:	str	w0, [sp, #132]
  445160:	ldr	w0, [sp, #132]
  445164:	cmp	w0, #0x0
  445168:	b.ge	44522c <get_mac+0x5e0>  // b.tcont
  44516c:	str	xzr, [sp, #200]
  445170:	ldr	x0, [sp, #104]
  445174:	str	x0, [sp, #232]
  445178:	mov	w0, #0x4                   	// #4
  44517c:	str	w0, [sp, #160]
  445180:	ldr	w0, [sp, #132]
  445184:	str	w0, [sp, #164]
  445188:	ldr	x0, [sp, #232]
  44518c:	cmp	x0, #0x0
  445190:	b.eq	4451cc <get_mac+0x580>  // b.none
  445194:	mov	w0, #0x1                   	// #1
  445198:	bl	40be30 <log_get_max_level_realm@plt>
  44519c:	mov	w1, w0
  4451a0:	ldr	w0, [sp, #160]
  4451a4:	cmp	w0, w1
  4451a8:	cset	w0, le
  4451ac:	and	w0, w0, #0xff
  4451b0:	and	x0, x0, #0xff
  4451b4:	cmp	x0, #0x0
  4451b8:	b.eq	4451cc <get_mac+0x580>  // b.none
  4451bc:	add	x0, sp, #0xc8
  4451c0:	mov	x1, x0
  4451c4:	ldr	x0, [sp, #232]
  4451c8:	bl	40aba0 <sd_device_get_sysname@plt>
  4451cc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4451d0:	add	x2, x0, #0xf4b
  4451d4:	ldr	x0, [sp, #200]
  4451d8:	cmp	x0, #0x0
  4451dc:	b.eq	4451ec <get_mac+0x5a0>  // b.none
  4451e0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4451e4:	add	x0, x0, #0xc8
  4451e8:	b	4451f0 <get_mac+0x5a4>
  4451ec:	mov	x0, #0x0                   	// #0
  4451f0:	ldr	x3, [sp, #200]
  4451f4:	adrp	x1, 45c000 <__func__.8393+0x150>
  4451f8:	add	x1, x1, #0x400
  4451fc:	str	x1, [sp, #8]
  445200:	str	xzr, [sp]
  445204:	mov	x7, #0x0                   	// #0
  445208:	mov	x6, x3
  44520c:	mov	x5, x0
  445210:	adrp	x0, 45c000 <__func__.8393+0x150>
  445214:	add	x4, x0, #0x958
  445218:	mov	w3, #0x139                 	// #313
  44521c:	ldr	w1, [sp, #164]
  445220:	ldr	w0, [sp, #160]
  445224:	bl	40b020 <log_object_internal@plt>
  445228:	b	445328 <get_mac+0x6dc>
  44522c:	str	xzr, [sp, #200]
  445230:	ldr	x0, [sp, #104]
  445234:	str	x0, [sp, #224]
  445238:	mov	w0, #0x7                   	// #7
  44523c:	str	w0, [sp, #152]
  445240:	str	wzr, [sp, #156]
  445244:	ldr	x0, [sp, #224]
  445248:	cmp	x0, #0x0
  44524c:	b.eq	445288 <get_mac+0x63c>  // b.none
  445250:	mov	w0, #0x1                   	// #1
  445254:	bl	40be30 <log_get_max_level_realm@plt>
  445258:	mov	w1, w0
  44525c:	ldr	w0, [sp, #152]
  445260:	cmp	w0, w1
  445264:	cset	w0, le
  445268:	and	w0, w0, #0xff
  44526c:	and	x0, x0, #0xff
  445270:	cmp	x0, #0x0
  445274:	b.eq	445288 <get_mac+0x63c>  // b.none
  445278:	add	x0, sp, #0xc8
  44527c:	mov	x1, x0
  445280:	ldr	x0, [sp, #224]
  445284:	bl	40aba0 <sd_device_get_sysname@plt>
  445288:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44528c:	add	x2, x0, #0xf4b
  445290:	ldr	x0, [sp, #200]
  445294:	cmp	x0, #0x0
  445298:	b.eq	4452a8 <get_mac+0x65c>  // b.none
  44529c:	adrp	x0, 45c000 <__func__.8393+0x150>
  4452a0:	add	x0, x0, #0xc8
  4452a4:	b	4452ac <get_mac+0x660>
  4452a8:	mov	x0, #0x0                   	// #0
  4452ac:	ldr	x3, [sp, #200]
  4452b0:	adrp	x1, 45c000 <__func__.8393+0x150>
  4452b4:	add	x1, x1, #0x428
  4452b8:	str	x1, [sp, #8]
  4452bc:	str	xzr, [sp]
  4452c0:	mov	x7, #0x0                   	// #0
  4452c4:	mov	x6, x3
  4452c8:	mov	x5, x0
  4452cc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4452d0:	add	x4, x0, #0x958
  4452d4:	mov	w3, #0x13b                 	// #315
  4452d8:	ldr	w1, [sp, #156]
  4452dc:	ldr	w0, [sp, #152]
  4452e0:	bl	40b020 <log_object_internal@plt>
  4452e4:	ldr	x0, [sp, #88]
  4452e8:	add	x1, sp, #0xc0
  4452ec:	mov	x2, #0x6                   	// #6
  4452f0:	bl	40a980 <memcpy@plt>
  4452f4:	ldr	x0, [sp, #88]
  4452f8:	ldrb	w0, [x0]
  4452fc:	and	w0, w0, #0xfffffffe
  445300:	and	w1, w0, #0xff
  445304:	ldr	x0, [sp, #88]
  445308:	strb	w1, [x0]
  44530c:	ldr	x0, [sp, #88]
  445310:	ldrb	w0, [x0]
  445314:	orr	w0, w0, #0x2
  445318:	and	w1, w0, #0xff
  44531c:	ldr	x0, [sp, #88]
  445320:	strb	w1, [x0]
  445324:	mov	w0, #0x1                   	// #1
  445328:	mov	w1, w0
  44532c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  445330:	ldr	x0, [x0, #4032]
  445334:	ldr	x2, [sp, #264]
  445338:	ldr	x0, [x0]
  44533c:	eor	x0, x2, x0
  445340:	cmp	x0, #0x0
  445344:	b.eq	44534c <get_mac+0x700>  // b.none
  445348:	bl	40b280 <__stack_chk_fail@plt>
  44534c:	mov	w0, w1
  445350:	ldp	x19, x20, [sp, #48]
  445354:	ldr	x21, [sp, #64]
  445358:	ldp	x29, x30, [sp, #32]
  44535c:	add	sp, sp, #0x110
  445360:	ret

0000000000445364 <link_config_apply>:
  445364:	sub	sp, sp, #0x1b0
  445368:	stp	x29, x30, [sp, #32]
  44536c:	add	x29, sp, #0x20
  445370:	stp	x19, x20, [sp, #48]
  445374:	str	x21, [sp, #64]
  445378:	str	x0, [sp, #104]
  44537c:	str	x1, [sp, #96]
  445380:	str	x2, [sp, #88]
  445384:	str	x3, [sp, #80]
  445388:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44538c:	ldr	x0, [x0, #4032]
  445390:	ldr	x1, [x0]
  445394:	str	x1, [sp, #424]
  445398:	mov	x1, #0x0                   	// #0
  44539c:	str	xzr, [sp, #336]
  4453a0:	str	xzr, [sp, #312]
  4453a4:	str	wzr, [sp, #124]
  4453a8:	ldr	x0, [sp, #104]
  4453ac:	cmp	x0, #0x0
  4453b0:	cset	w0, eq  // eq = none
  4453b4:	and	w0, w0, #0xff
  4453b8:	and	x0, x0, #0xff
  4453bc:	cmp	x0, #0x0
  4453c0:	b.eq	4453ec <link_config_apply+0x88>  // b.none
  4453c4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4453c8:	add	x1, x0, #0xf4b
  4453cc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4453d0:	add	x4, x0, #0x960
  4453d4:	mov	w3, #0x150                 	// #336
  4453d8:	mov	x2, x1
  4453dc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4453e0:	add	x1, x0, #0xf68
  4453e4:	mov	w0, #0x1                   	// #1
  4453e8:	bl	40abb0 <log_assert_failed_realm@plt>
  4453ec:	ldr	x0, [sp, #96]
  4453f0:	cmp	x0, #0x0
  4453f4:	cset	w0, eq  // eq = none
  4453f8:	and	w0, w0, #0xff
  4453fc:	and	x0, x0, #0xff
  445400:	cmp	x0, #0x0
  445404:	b.eq	445430 <link_config_apply+0xcc>  // b.none
  445408:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44540c:	add	x1, x0, #0xf4b
  445410:	adrp	x0, 45c000 <__func__.8393+0x150>
  445414:	add	x4, x0, #0x960
  445418:	mov	w3, #0x151                 	// #337
  44541c:	mov	x2, x1
  445420:	adrp	x0, 45c000 <__func__.8393+0x150>
  445424:	add	x1, x0, #0x450
  445428:	mov	w0, #0x1                   	// #1
  44542c:	bl	40abb0 <log_assert_failed_realm@plt>
  445430:	ldr	x0, [sp, #88]
  445434:	cmp	x0, #0x0
  445438:	cset	w0, eq  // eq = none
  44543c:	and	w0, w0, #0xff
  445440:	and	x0, x0, #0xff
  445444:	cmp	x0, #0x0
  445448:	b.eq	445474 <link_config_apply+0x110>  // b.none
  44544c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445450:	add	x1, x0, #0xf4b
  445454:	adrp	x0, 45c000 <__func__.8393+0x150>
  445458:	add	x4, x0, #0x960
  44545c:	mov	w3, #0x152                 	// #338
  445460:	mov	x2, x1
  445464:	adrp	x0, 45c000 <__func__.8393+0x150>
  445468:	add	x1, x0, #0x1c0
  44546c:	mov	w0, #0x1                   	// #1
  445470:	bl	40abb0 <log_assert_failed_realm@plt>
  445474:	ldr	x0, [sp, #80]
  445478:	cmp	x0, #0x0
  44547c:	cset	w0, eq  // eq = none
  445480:	and	w0, w0, #0xff
  445484:	and	x0, x0, #0xff
  445488:	cmp	x0, #0x0
  44548c:	b.eq	4454b8 <link_config_apply+0x154>  // b.none
  445490:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445494:	add	x1, x0, #0xf4b
  445498:	adrp	x0, 45c000 <__func__.8393+0x150>
  44549c:	add	x4, x0, #0x960
  4454a0:	mov	w3, #0x153                 	// #339
  4454a4:	mov	x2, x1
  4454a8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4454ac:	add	x1, x0, #0x458
  4454b0:	mov	w0, #0x1                   	// #1
  4454b4:	bl	40abb0 <log_assert_failed_realm@plt>
  4454b8:	add	x0, sp, #0x140
  4454bc:	mov	x1, x0
  4454c0:	ldr	x0, [sp, #88]
  4454c4:	bl	40aba0 <sd_device_get_sysname@plt>
  4454c8:	str	w0, [sp, #136]
  4454cc:	ldr	w0, [sp, #136]
  4454d0:	cmp	w0, #0x0
  4454d4:	b.ge	4454e0 <link_config_apply+0x17c>  // b.tcont
  4454d8:	ldr	w0, [sp, #136]
  4454dc:	b	4464d4 <link_config_apply+0x1170>
  4454e0:	ldr	x0, [sp, #104]
  4454e4:	add	x7, x0, #0x8
  4454e8:	ldr	x1, [sp, #320]
  4454ec:	ldr	x0, [sp, #96]
  4454f0:	ldr	w2, [x0, #132]
  4454f4:	ldr	x0, [sp, #96]
  4454f8:	add	x3, x0, #0x88
  4454fc:	ldr	x0, [sp, #96]
  445500:	ldr	x4, [x0, #120]
  445504:	ldr	x0, [sp, #96]
  445508:	ldr	w5, [x0, #128]
  44550c:	ldr	x0, [sp, #96]
  445510:	ldr	w0, [x0, #152]
  445514:	mov	w6, w0
  445518:	mov	x0, x7
  44551c:	bl	40af00 <ethtool_set_glinksettings@plt>
  445520:	str	w0, [sp, #136]
  445524:	ldr	w0, [sp, #136]
  445528:	cmp	w0, #0x0
  44552c:	b.ge	445844 <link_config_apply+0x4e0>  // b.tcont
  445530:	ldr	x0, [sp, #96]
  445534:	ldr	w0, [x0, #152]
  445538:	cmn	w0, #0x1
  44553c:	b.eq	4455d8 <link_config_apply+0x274>  // b.none
  445540:	mov	w0, #0x4                   	// #4
  445544:	str	w0, [sp, #140]
  445548:	ldr	w0, [sp, #136]
  44554c:	str	w0, [sp, #144]
  445550:	mov	w0, #0x1                   	// #1
  445554:	str	w0, [sp, #148]
  445558:	ldr	w0, [sp, #148]
  44555c:	bl	40be30 <log_get_max_level_realm@plt>
  445560:	mov	w1, w0
  445564:	ldr	w0, [sp, #140]
  445568:	and	w0, w0, #0x7
  44556c:	cmp	w1, w0
  445570:	b.lt	4455d0 <link_config_apply+0x26c>  // b.tstop
  445574:	ldr	w0, [sp, #148]
  445578:	lsl	w1, w0, #10
  44557c:	ldr	w0, [sp, #140]
  445580:	orr	w19, w1, w0
  445584:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445588:	add	x20, x0, #0xf4b
  44558c:	ldr	x0, [sp, #96]
  445590:	ldr	w0, [x0, #152]
  445594:	bl	40b760 <port_to_string@plt>
  445598:	mov	x1, x0
  44559c:	ldr	x0, [sp, #320]
  4455a0:	mov	x7, x0
  4455a4:	mov	x6, x1
  4455a8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4455ac:	add	x5, x0, #0x460
  4455b0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4455b4:	add	x4, x0, #0x978
  4455b8:	mov	w3, #0x15f                 	// #351
  4455bc:	mov	x2, x20
  4455c0:	ldr	w1, [sp, #144]
  4455c4:	mov	w0, w19
  4455c8:	bl	40b4f0 <log_internal_realm@plt>
  4455cc:	b	4455d8 <link_config_apply+0x274>
  4455d0:	ldr	w0, [sp, #144]
  4455d4:	cmp	w0, #0x0
  4455d8:	ldr	x0, [sp, #96]
  4455dc:	add	x0, x0, #0x88
  4455e0:	mov	x1, #0xc                   	// #12
  4455e4:	bl	40b9e0 <memeqzero@plt>
  4455e8:	and	w0, w0, #0xff
  4455ec:	eor	w0, w0, #0x1
  4455f0:	and	w0, w0, #0xff
  4455f4:	cmp	w0, #0x0
  4455f8:	b.eq	445678 <link_config_apply+0x314>  // b.none
  4455fc:	mov	w0, #0x4                   	// #4
  445600:	str	w0, [sp, #152]
  445604:	ldr	w0, [sp, #136]
  445608:	str	w0, [sp, #156]
  44560c:	mov	w0, #0x1                   	// #1
  445610:	str	w0, [sp, #160]
  445614:	ldr	w0, [sp, #160]
  445618:	bl	40be30 <log_get_max_level_realm@plt>
  44561c:	mov	w1, w0
  445620:	ldr	w0, [sp, #152]
  445624:	and	w0, w0, #0x7
  445628:	cmp	w1, w0
  44562c:	b.lt	445670 <link_config_apply+0x30c>  // b.tstop
  445630:	ldr	w0, [sp, #160]
  445634:	lsl	w1, w0, #10
  445638:	ldr	w0, [sp, #152]
  44563c:	orr	w6, w1, w0
  445640:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445644:	add	x1, x0, #0xf4b
  445648:	adrp	x0, 45c000 <__func__.8393+0x150>
  44564c:	add	x5, x0, #0x488
  445650:	adrp	x0, 45c000 <__func__.8393+0x150>
  445654:	add	x4, x0, #0x978
  445658:	mov	w3, #0x162                 	// #354
  44565c:	mov	x2, x1
  445660:	ldr	w1, [sp, #156]
  445664:	mov	w0, w6
  445668:	bl	40b4f0 <log_internal_realm@plt>
  44566c:	b	445678 <link_config_apply+0x314>
  445670:	ldr	w0, [sp, #156]
  445674:	cmp	w0, #0x0
  445678:	ldr	x0, [sp, #96]
  44567c:	ldr	x0, [x0, #120]
  445680:	cmp	x0, #0x0
  445684:	b.eq	4457a0 <link_config_apply+0x43c>  // b.none
  445688:	ldr	x0, [sp, #96]
  44568c:	ldr	x0, [x0, #120]
  445690:	str	x0, [sp, #352]
  445694:	mov	w0, #0x4240                	// #16960
  445698:	movk	w0, #0xf, lsl #16
  44569c:	str	w0, [sp, #164]
  4456a0:	ldrsw	x0, [sp, #164]
  4456a4:	ldr	x1, [sp, #352]
  4456a8:	udiv	x2, x1, x0
  4456ac:	ldrsw	x1, [sp, #164]
  4456b0:	ldr	x0, [sp, #352]
  4456b4:	udiv	x3, x0, x1
  4456b8:	mul	x1, x3, x1
  4456bc:	sub	x0, x0, x1
  4456c0:	cmp	x0, #0x0
  4456c4:	cset	w0, ne  // ne = any
  4456c8:	and	w0, w0, #0xff
  4456cc:	and	x0, x0, #0xff
  4456d0:	add	x0, x2, x0
  4456d4:	str	w0, [sp, #168]
  4456d8:	ldr	w0, [sp, #136]
  4456dc:	cmn	w0, #0x5f
  4456e0:	b.ne	4457a0 <link_config_apply+0x43c>  // b.any
  4456e4:	ldr	x0, [sp, #104]
  4456e8:	add	x4, x0, #0x8
  4456ec:	ldr	x1, [sp, #320]
  4456f0:	ldr	x0, [sp, #96]
  4456f4:	ldr	w0, [x0, #128]
  4456f8:	mov	w3, w0
  4456fc:	ldr	w2, [sp, #168]
  445700:	mov	x0, x4
  445704:	bl	40a6b0 <ethtool_set_speed@plt>
  445708:	str	w0, [sp, #136]
  44570c:	ldr	w0, [sp, #136]
  445710:	cmp	w0, #0x0
  445714:	b.ge	4457a0 <link_config_apply+0x43c>  // b.tcont
  445718:	mov	w0, #0x4                   	// #4
  44571c:	str	w0, [sp, #172]
  445720:	ldr	w0, [sp, #136]
  445724:	str	w0, [sp, #176]
  445728:	mov	w0, #0x1                   	// #1
  44572c:	str	w0, [sp, #180]
  445730:	ldr	w0, [sp, #180]
  445734:	bl	40be30 <log_get_max_level_realm@plt>
  445738:	mov	w1, w0
  44573c:	ldr	w0, [sp, #172]
  445740:	and	w0, w0, #0x7
  445744:	cmp	w1, w0
  445748:	b.lt	445798 <link_config_apply+0x434>  // b.tstop
  44574c:	ldr	w0, [sp, #180]
  445750:	lsl	w1, w0, #10
  445754:	ldr	w0, [sp, #172]
  445758:	orr	w8, w1, w0
  44575c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445760:	add	x1, x0, #0xf4b
  445764:	ldr	x0, [sp, #320]
  445768:	ldr	w7, [sp, #168]
  44576c:	mov	x6, x0
  445770:	adrp	x0, 45c000 <__func__.8393+0x150>
  445774:	add	x5, x0, #0x4b0
  445778:	adrp	x0, 45c000 <__func__.8393+0x150>
  44577c:	add	x4, x0, #0x978
  445780:	mov	w3, #0x169                 	// #361
  445784:	mov	x2, x1
  445788:	ldr	w1, [sp, #176]
  44578c:	mov	w0, w8
  445790:	bl	40b4f0 <log_internal_realm@plt>
  445794:	b	4457a0 <link_config_apply+0x43c>
  445798:	ldr	w0, [sp, #176]
  44579c:	cmp	w0, #0x0
  4457a0:	ldr	x0, [sp, #96]
  4457a4:	ldr	w0, [x0, #128]
  4457a8:	cmn	w0, #0x1
  4457ac:	b.eq	445844 <link_config_apply+0x4e0>  // b.none
  4457b0:	mov	w0, #0x4                   	// #4
  4457b4:	str	w0, [sp, #184]
  4457b8:	ldr	w0, [sp, #136]
  4457bc:	str	w0, [sp, #188]
  4457c0:	mov	w0, #0x1                   	// #1
  4457c4:	str	w0, [sp, #192]
  4457c8:	ldr	w0, [sp, #192]
  4457cc:	bl	40be30 <log_get_max_level_realm@plt>
  4457d0:	mov	w1, w0
  4457d4:	ldr	w0, [sp, #184]
  4457d8:	and	w0, w0, #0x7
  4457dc:	cmp	w1, w0
  4457e0:	b.lt	44583c <link_config_apply+0x4d8>  // b.tstop
  4457e4:	ldr	w0, [sp, #192]
  4457e8:	lsl	w1, w0, #10
  4457ec:	ldr	w0, [sp, #184]
  4457f0:	orr	w19, w1, w0
  4457f4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4457f8:	add	x20, x0, #0xf4b
  4457fc:	ldr	x21, [sp, #320]
  445800:	ldr	x0, [sp, #96]
  445804:	ldr	w0, [x0, #128]
  445808:	bl	40b2c0 <duplex_to_string@plt>
  44580c:	mov	x7, x0
  445810:	mov	x6, x21
  445814:	adrp	x0, 45c000 <__func__.8393+0x150>
  445818:	add	x5, x0, #0x4e0
  44581c:	adrp	x0, 45c000 <__func__.8393+0x150>
  445820:	add	x4, x0, #0x978
  445824:	mov	w3, #0x16e                 	// #366
  445828:	mov	x2, x20
  44582c:	ldr	w1, [sp, #188]
  445830:	mov	w0, w19
  445834:	bl	40b4f0 <log_internal_realm@plt>
  445838:	b	445844 <link_config_apply+0x4e0>
  44583c:	ldr	w0, [sp, #188]
  445840:	cmp	w0, #0x0
  445844:	ldr	x0, [sp, #104]
  445848:	add	x3, x0, #0x8
  44584c:	ldr	x1, [sp, #320]
  445850:	ldr	x0, [sp, #96]
  445854:	ldr	w0, [x0, #148]
  445858:	mov	w2, w0
  44585c:	mov	x0, x3
  445860:	bl	40ac00 <ethtool_set_wol@plt>
  445864:	str	w0, [sp, #136]
  445868:	ldr	w0, [sp, #136]
  44586c:	cmp	w0, #0x0
  445870:	b.ge	445908 <link_config_apply+0x5a4>  // b.tcont
  445874:	mov	w0, #0x4                   	// #4
  445878:	str	w0, [sp, #196]
  44587c:	ldr	w0, [sp, #136]
  445880:	str	w0, [sp, #200]
  445884:	mov	w0, #0x1                   	// #1
  445888:	str	w0, [sp, #204]
  44588c:	ldr	w0, [sp, #204]
  445890:	bl	40be30 <log_get_max_level_realm@plt>
  445894:	mov	w1, w0
  445898:	ldr	w0, [sp, #196]
  44589c:	and	w0, w0, #0x7
  4458a0:	cmp	w1, w0
  4458a4:	b.lt	445900 <link_config_apply+0x59c>  // b.tstop
  4458a8:	ldr	w0, [sp, #204]
  4458ac:	lsl	w1, w0, #10
  4458b0:	ldr	w0, [sp, #196]
  4458b4:	orr	w19, w1, w0
  4458b8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4458bc:	add	x20, x0, #0xf4b
  4458c0:	ldr	x21, [sp, #320]
  4458c4:	ldr	x0, [sp, #96]
  4458c8:	ldr	w0, [x0, #148]
  4458cc:	bl	40b6c0 <wol_to_string@plt>
  4458d0:	mov	x7, x0
  4458d4:	mov	x6, x21
  4458d8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4458dc:	add	x5, x0, #0x508
  4458e0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4458e4:	add	x4, x0, #0x978
  4458e8:	mov	w3, #0x173                 	// #371
  4458ec:	mov	x2, x20
  4458f0:	ldr	w1, [sp, #200]
  4458f4:	mov	w0, w19
  4458f8:	bl	40b4f0 <log_internal_realm@plt>
  4458fc:	b	445908 <link_config_apply+0x5a4>
  445900:	ldr	w0, [sp, #200]
  445904:	cmp	w0, #0x0
  445908:	ldr	x0, [sp, #104]
  44590c:	add	x3, x0, #0x8
  445910:	ldr	x1, [sp, #320]
  445914:	ldr	x0, [sp, #96]
  445918:	add	x0, x0, #0x9c
  44591c:	mov	x2, x0
  445920:	mov	x0, x3
  445924:	bl	40a8d0 <ethtool_set_features@plt>
  445928:	str	w0, [sp, #136]
  44592c:	ldr	w0, [sp, #136]
  445930:	cmp	w0, #0x0
  445934:	b.ge	4459bc <link_config_apply+0x658>  // b.tcont
  445938:	mov	w0, #0x4                   	// #4
  44593c:	str	w0, [sp, #208]
  445940:	ldr	w0, [sp, #136]
  445944:	str	w0, [sp, #212]
  445948:	mov	w0, #0x1                   	// #1
  44594c:	str	w0, [sp, #216]
  445950:	ldr	w0, [sp, #216]
  445954:	bl	40be30 <log_get_max_level_realm@plt>
  445958:	mov	w1, w0
  44595c:	ldr	w0, [sp, #208]
  445960:	and	w0, w0, #0x7
  445964:	cmp	w1, w0
  445968:	b.lt	4459b4 <link_config_apply+0x650>  // b.tstop
  44596c:	ldr	w0, [sp, #216]
  445970:	lsl	w1, w0, #10
  445974:	ldr	w0, [sp, #208]
  445978:	orr	w7, w1, w0
  44597c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445980:	add	x1, x0, #0xf4b
  445984:	ldr	x0, [sp, #320]
  445988:	mov	x6, x0
  44598c:	adrp	x0, 45c000 <__func__.8393+0x150>
  445990:	add	x5, x0, #0x530
  445994:	adrp	x0, 45c000 <__func__.8393+0x150>
  445998:	add	x4, x0, #0x978
  44599c:	mov	w3, #0x178                 	// #376
  4459a0:	mov	x2, x1
  4459a4:	ldr	w1, [sp, #212]
  4459a8:	mov	w0, w7
  4459ac:	bl	40b4f0 <log_internal_realm@plt>
  4459b0:	b	4459bc <link_config_apply+0x658>
  4459b4:	ldr	w0, [sp, #212]
  4459b8:	cmp	w0, #0x0
  4459bc:	ldr	x0, [sp, #96]
  4459c0:	ldrb	w0, [x0, #192]
  4459c4:	cmp	w0, #0x0
  4459c8:	b.ne	4459fc <link_config_apply+0x698>  // b.any
  4459cc:	ldr	x0, [sp, #96]
  4459d0:	ldrb	w0, [x0, #193]
  4459d4:	cmp	w0, #0x0
  4459d8:	b.ne	4459fc <link_config_apply+0x698>  // b.any
  4459dc:	ldr	x0, [sp, #96]
  4459e0:	ldrb	w0, [x0, #194]
  4459e4:	cmp	w0, #0x0
  4459e8:	b.ne	4459fc <link_config_apply+0x698>  // b.any
  4459ec:	ldr	x0, [sp, #96]
  4459f0:	ldrb	w0, [x0, #195]
  4459f4:	cmp	w0, #0x0
  4459f8:	b.eq	445ab0 <link_config_apply+0x74c>  // b.none
  4459fc:	ldr	x0, [sp, #104]
  445a00:	add	x3, x0, #0x8
  445a04:	ldr	x1, [sp, #320]
  445a08:	ldr	x0, [sp, #96]
  445a0c:	add	x0, x0, #0xb0
  445a10:	mov	x2, x0
  445a14:	mov	x0, x3
  445a18:	bl	40bdc0 <ethtool_set_channels@plt>
  445a1c:	str	w0, [sp, #136]
  445a20:	ldr	w0, [sp, #136]
  445a24:	cmp	w0, #0x0
  445a28:	b.ge	445ab0 <link_config_apply+0x74c>  // b.tcont
  445a2c:	mov	w0, #0x4                   	// #4
  445a30:	str	w0, [sp, #220]
  445a34:	ldr	w0, [sp, #136]
  445a38:	str	w0, [sp, #224]
  445a3c:	mov	w0, #0x1                   	// #1
  445a40:	str	w0, [sp, #228]
  445a44:	ldr	w0, [sp, #228]
  445a48:	bl	40be30 <log_get_max_level_realm@plt>
  445a4c:	mov	w1, w0
  445a50:	ldr	w0, [sp, #220]
  445a54:	and	w0, w0, #0x7
  445a58:	cmp	w1, w0
  445a5c:	b.lt	445aa8 <link_config_apply+0x744>  // b.tstop
  445a60:	ldr	w0, [sp, #228]
  445a64:	lsl	w1, w0, #10
  445a68:	ldr	w0, [sp, #220]
  445a6c:	orr	w7, w1, w0
  445a70:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445a74:	add	x1, x0, #0xf4b
  445a78:	ldr	x0, [sp, #320]
  445a7c:	mov	x6, x0
  445a80:	adrp	x0, 45c000 <__func__.8393+0x150>
  445a84:	add	x5, x0, #0x560
  445a88:	adrp	x0, 45c000 <__func__.8393+0x150>
  445a8c:	add	x4, x0, #0x978
  445a90:	mov	w3, #0x17d                 	// #381
  445a94:	mov	x2, x1
  445a98:	ldr	w1, [sp, #224]
  445a9c:	mov	w0, w7
  445aa0:	bl	40b4f0 <log_internal_realm@plt>
  445aa4:	b	445ab0 <link_config_apply+0x74c>
  445aa8:	ldr	w0, [sp, #224]
  445aac:	cmp	w0, #0x0
  445ab0:	ldr	x0, [sp, #96]
  445ab4:	ldrb	w0, [x0, #204]
  445ab8:	cmp	w0, #0x0
  445abc:	b.ne	445ad0 <link_config_apply+0x76c>  // b.any
  445ac0:	ldr	x0, [sp, #96]
  445ac4:	ldrb	w0, [x0, #205]
  445ac8:	cmp	w0, #0x0
  445acc:	b.eq	445b84 <link_config_apply+0x820>  // b.none
  445ad0:	ldr	x0, [sp, #104]
  445ad4:	add	x3, x0, #0x8
  445ad8:	ldr	x1, [sp, #320]
  445adc:	ldr	x0, [sp, #96]
  445ae0:	add	x0, x0, #0xc4
  445ae4:	mov	x2, x0
  445ae8:	mov	x0, x3
  445aec:	bl	40b940 <ethtool_set_nic_buffer_size@plt>
  445af0:	str	w0, [sp, #136]
  445af4:	ldr	w0, [sp, #136]
  445af8:	cmp	w0, #0x0
  445afc:	b.ge	445b84 <link_config_apply+0x820>  // b.tcont
  445b00:	mov	w0, #0x4                   	// #4
  445b04:	str	w0, [sp, #232]
  445b08:	ldr	w0, [sp, #136]
  445b0c:	str	w0, [sp, #236]
  445b10:	mov	w0, #0x1                   	// #1
  445b14:	str	w0, [sp, #240]
  445b18:	ldr	w0, [sp, #240]
  445b1c:	bl	40be30 <log_get_max_level_realm@plt>
  445b20:	mov	w1, w0
  445b24:	ldr	w0, [sp, #232]
  445b28:	and	w0, w0, #0x7
  445b2c:	cmp	w1, w0
  445b30:	b.lt	445b7c <link_config_apply+0x818>  // b.tstop
  445b34:	ldr	w0, [sp, #240]
  445b38:	lsl	w1, w0, #10
  445b3c:	ldr	w0, [sp, #232]
  445b40:	orr	w7, w1, w0
  445b44:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445b48:	add	x1, x0, #0xf4b
  445b4c:	ldr	x0, [sp, #320]
  445b50:	mov	x6, x0
  445b54:	adrp	x0, 45c000 <__func__.8393+0x150>
  445b58:	add	x5, x0, #0x588
  445b5c:	adrp	x0, 45c000 <__func__.8393+0x150>
  445b60:	add	x4, x0, #0x978
  445b64:	mov	w3, #0x183                 	// #387
  445b68:	mov	x2, x1
  445b6c:	ldr	w1, [sp, #236]
  445b70:	mov	w0, w7
  445b74:	bl	40b4f0 <log_internal_realm@plt>
  445b78:	b	445b84 <link_config_apply+0x820>
  445b7c:	ldr	w0, [sp, #236]
  445b80:	cmp	w0, #0x0
  445b84:	add	x0, sp, #0x80
  445b88:	mov	x1, x0
  445b8c:	ldr	x0, [sp, #88]
  445b90:	bl	40bb00 <sd_device_get_ifindex@plt>
  445b94:	str	w0, [sp, #136]
  445b98:	ldr	w0, [sp, #136]
  445b9c:	cmp	w0, #0x0
  445ba0:	b.ge	445c64 <link_config_apply+0x900>  // b.tcont
  445ba4:	str	xzr, [sp, #328]
  445ba8:	ldr	x0, [sp, #88]
  445bac:	str	x0, [sp, #408]
  445bb0:	mov	w0, #0x4                   	// #4
  445bb4:	str	w0, [sp, #304]
  445bb8:	ldr	w0, [sp, #136]
  445bbc:	str	w0, [sp, #308]
  445bc0:	ldr	x0, [sp, #408]
  445bc4:	cmp	x0, #0x0
  445bc8:	b.eq	445c04 <link_config_apply+0x8a0>  // b.none
  445bcc:	mov	w0, #0x1                   	// #1
  445bd0:	bl	40be30 <log_get_max_level_realm@plt>
  445bd4:	mov	w1, w0
  445bd8:	ldr	w0, [sp, #304]
  445bdc:	cmp	w0, w1
  445be0:	cset	w0, le
  445be4:	and	w0, w0, #0xff
  445be8:	and	x0, x0, #0xff
  445bec:	cmp	x0, #0x0
  445bf0:	b.eq	445c04 <link_config_apply+0x8a0>  // b.none
  445bf4:	add	x0, sp, #0x148
  445bf8:	mov	x1, x0
  445bfc:	ldr	x0, [sp, #408]
  445c00:	bl	40aba0 <sd_device_get_sysname@plt>
  445c04:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445c08:	add	x2, x0, #0xf4b
  445c0c:	ldr	x0, [sp, #328]
  445c10:	cmp	x0, #0x0
  445c14:	b.eq	445c24 <link_config_apply+0x8c0>  // b.none
  445c18:	adrp	x0, 45c000 <__func__.8393+0x150>
  445c1c:	add	x0, x0, #0xc8
  445c20:	b	445c28 <link_config_apply+0x8c4>
  445c24:	mov	x0, #0x0                   	// #0
  445c28:	ldr	x3, [sp, #328]
  445c2c:	adrp	x1, 45c000 <__func__.8393+0x150>
  445c30:	add	x1, x1, #0x5b0
  445c34:	str	x1, [sp, #8]
  445c38:	str	xzr, [sp]
  445c3c:	mov	x7, #0x0                   	// #0
  445c40:	mov	x6, x3
  445c44:	mov	x5, x0
  445c48:	adrp	x0, 45c000 <__func__.8393+0x150>
  445c4c:	add	x4, x0, #0x978
  445c50:	mov	w3, #0x188                 	// #392
  445c54:	ldr	w1, [sp, #308]
  445c58:	ldr	w0, [sp, #304]
  445c5c:	bl	40b020 <log_object_internal@plt>
  445c60:	b	4464d4 <link_config_apply+0x1170>
  445c64:	add	x0, sp, #0x7c
  445c68:	mov	x2, x0
  445c6c:	adrp	x0, 45c000 <__func__.8393+0x150>
  445c70:	add	x1, x0, #0x1d8
  445c74:	ldr	x0, [sp, #88]
  445c78:	bl	4440dc <link_unsigned_attribute>
  445c7c:	strb	wzr, [sp, #121]
  445c80:	ldr	w0, [sp, #124]
  445c84:	sub	w0, w0, #0x3
  445c88:	cmp	w0, #0x1
  445c8c:	b.hi	445c98 <link_config_apply+0x934>  // b.pmore
  445c90:	mov	w0, #0x1                   	// #1
  445c94:	strb	w0, [sp, #121]
  445c98:	nop
  445c9c:	ldrb	w0, [sp, #121]
  445ca0:	cmp	w0, #0x0
  445ca4:	b.eq	445d80 <link_config_apply+0xa1c>  // b.none
  445ca8:	mov	w0, #0x10                  	// #16
  445cac:	bl	4436c0 <naming_scheme_has>
  445cb0:	and	w0, w0, #0xff
  445cb4:	eor	w0, w0, #0x1
  445cb8:	and	w0, w0, #0xff
  445cbc:	cmp	w0, #0x0
  445cc0:	b.eq	445d80 <link_config_apply+0xa1c>  // b.none
  445cc4:	str	xzr, [sp, #328]
  445cc8:	ldr	x0, [sp, #88]
  445ccc:	str	x0, [sp, #360]
  445cd0:	mov	w0, #0x7                   	// #7
  445cd4:	str	w0, [sp, #244]
  445cd8:	str	wzr, [sp, #248]
  445cdc:	ldr	x0, [sp, #360]
  445ce0:	cmp	x0, #0x0
  445ce4:	b.eq	445d20 <link_config_apply+0x9bc>  // b.none
  445ce8:	mov	w0, #0x1                   	// #1
  445cec:	bl	40be30 <log_get_max_level_realm@plt>
  445cf0:	mov	w1, w0
  445cf4:	ldr	w0, [sp, #244]
  445cf8:	cmp	w0, w1
  445cfc:	cset	w0, le
  445d00:	and	w0, w0, #0xff
  445d04:	and	x0, x0, #0xff
  445d08:	cmp	x0, #0x0
  445d0c:	b.eq	445d20 <link_config_apply+0x9bc>  // b.none
  445d10:	add	x0, sp, #0x148
  445d14:	mov	x1, x0
  445d18:	ldr	x0, [sp, #360]
  445d1c:	bl	40aba0 <sd_device_get_sysname@plt>
  445d20:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445d24:	add	x2, x0, #0xf4b
  445d28:	ldr	x0, [sp, #328]
  445d2c:	cmp	x0, #0x0
  445d30:	b.eq	445d40 <link_config_apply+0x9dc>  // b.none
  445d34:	adrp	x0, 45c000 <__func__.8393+0x150>
  445d38:	add	x0, x0, #0xc8
  445d3c:	b	445d44 <link_config_apply+0x9e0>
  445d40:	mov	x0, #0x0                   	// #0
  445d44:	ldr	x3, [sp, #328]
  445d48:	adrp	x1, 45c000 <__func__.8393+0x150>
  445d4c:	add	x1, x1, #0x5d0
  445d50:	str	x1, [sp, #8]
  445d54:	str	xzr, [sp]
  445d58:	mov	x7, #0x0                   	// #0
  445d5c:	mov	x6, x3
  445d60:	mov	x5, x0
  445d64:	adrp	x0, 45c000 <__func__.8393+0x150>
  445d68:	add	x4, x0, #0x978
  445d6c:	mov	w3, #0x18e                 	// #398
  445d70:	ldr	w1, [sp, #248]
  445d74:	ldr	w0, [sp, #244]
  445d78:	bl	40b020 <log_object_internal@plt>
  445d7c:	b	44638c <link_config_apply+0x1028>
  445d80:	ldr	x0, [sp, #104]
  445d84:	ldrb	w0, [x0, #12]
  445d88:	cmp	w0, #0x0
  445d8c:	b.eq	446110 <link_config_apply+0xdac>  // b.none
  445d90:	ldr	x0, [sp, #96]
  445d94:	ldr	x0, [x0, #88]
  445d98:	cmp	x0, #0x0
  445d9c:	b.eq	446110 <link_config_apply+0xdac>  // b.none
  445da0:	ldr	x0, [sp, #96]
  445da4:	ldr	x0, [x0, #88]
  445da8:	str	x0, [sp, #344]
  445dac:	b	4460f4 <link_config_apply+0xd90>
  445db0:	ldr	x0, [sp, #344]
  445db4:	ldr	w0, [x0]
  445db8:	str	w0, [sp, #132]
  445dbc:	ldr	w0, [sp, #132]
  445dc0:	cmp	w0, #0x6
  445dc4:	b.eq	446098 <link_config_apply+0xd34>  // b.none
  445dc8:	ldr	w0, [sp, #132]
  445dcc:	cmp	w0, #0x6
  445dd0:	b.gt	4460b4 <link_config_apply+0xd50>
  445dd4:	ldr	w0, [sp, #132]
  445dd8:	cmp	w0, #0x5
  445ddc:	b.eq	44607c <link_config_apply+0xd18>  // b.none
  445de0:	ldr	w0, [sp, #132]
  445de4:	cmp	w0, #0x5
  445de8:	b.gt	4460b4 <link_config_apply+0xd50>
  445dec:	ldr	w0, [sp, #132]
  445df0:	cmp	w0, #0x4
  445df4:	b.eq	446060 <link_config_apply+0xcfc>  // b.none
  445df8:	ldr	w0, [sp, #132]
  445dfc:	cmp	w0, #0x4
  445e00:	b.gt	4460b4 <link_config_apply+0xd50>
  445e04:	ldr	w0, [sp, #132]
  445e08:	cmp	w0, #0x3
  445e0c:	b.eq	446044 <link_config_apply+0xce0>  // b.none
  445e10:	ldr	w0, [sp, #132]
  445e14:	cmp	w0, #0x3
  445e18:	b.gt	4460b4 <link_config_apply+0xd50>
  445e1c:	ldr	w0, [sp, #132]
  445e20:	cmp	w0, #0x2
  445e24:	b.eq	446028 <link_config_apply+0xcc4>  // b.none
  445e28:	ldr	w0, [sp, #132]
  445e2c:	cmp	w0, #0x2
  445e30:	b.gt	4460b4 <link_config_apply+0xd50>
  445e34:	ldr	w0, [sp, #132]
  445e38:	cmp	w0, #0x0
  445e3c:	b.eq	445e50 <link_config_apply+0xaec>  // b.none
  445e40:	ldr	w0, [sp, #132]
  445e44:	cmp	w0, #0x1
  445e48:	b.eq	445f28 <link_config_apply+0xbc4>  // b.none
  445e4c:	b	4460b4 <link_config_apply+0xd50>
  445e50:	ldr	w0, [sp, #124]
  445e54:	cmp	w0, #0x2
  445e58:	b.ne	4460dc <link_config_apply+0xd78>  // b.any
  445e5c:	str	xzr, [sp, #328]
  445e60:	ldr	x0, [sp, #88]
  445e64:	str	x0, [sp, #376]
  445e68:	mov	w0, #0x7                   	// #7
  445e6c:	str	w0, [sp, #260]
  445e70:	str	wzr, [sp, #264]
  445e74:	ldr	x0, [sp, #376]
  445e78:	cmp	x0, #0x0
  445e7c:	b.eq	445eb8 <link_config_apply+0xb54>  // b.none
  445e80:	mov	w0, #0x1                   	// #1
  445e84:	bl	40be30 <log_get_max_level_realm@plt>
  445e88:	mov	w1, w0
  445e8c:	ldr	w0, [sp, #260]
  445e90:	cmp	w0, w1
  445e94:	cset	w0, le
  445e98:	and	w0, w0, #0xff
  445e9c:	and	x0, x0, #0xff
  445ea0:	cmp	x0, #0x0
  445ea4:	b.eq	445eb8 <link_config_apply+0xb54>  // b.none
  445ea8:	add	x0, sp, #0x148
  445eac:	mov	x1, x0
  445eb0:	ldr	x0, [sp, #376]
  445eb4:	bl	40aba0 <sd_device_get_sysname@plt>
  445eb8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445ebc:	add	x20, x0, #0xf4b
  445ec0:	ldr	x0, [sp, #328]
  445ec4:	cmp	x0, #0x0
  445ec8:	b.eq	445ed8 <link_config_apply+0xb74>  // b.none
  445ecc:	adrp	x0, 45c000 <__func__.8393+0x150>
  445ed0:	add	x19, x0, #0xc8
  445ed4:	b	445edc <link_config_apply+0xb78>
  445ed8:	mov	x19, #0x0                   	// #0
  445edc:	ldr	x21, [sp, #328]
  445ee0:	ldr	w0, [sp, #132]
  445ee4:	bl	446830 <name_policy_to_string>
  445ee8:	str	x0, [sp, #16]
  445eec:	adrp	x0, 45c000 <__func__.8393+0x150>
  445ef0:	add	x0, x0, #0x610
  445ef4:	str	x0, [sp, #8]
  445ef8:	str	xzr, [sp]
  445efc:	mov	x7, #0x0                   	// #0
  445f00:	mov	x6, x21
  445f04:	mov	x5, x19
  445f08:	adrp	x0, 45c000 <__func__.8393+0x150>
  445f0c:	add	x4, x0, #0x978
  445f10:	mov	w3, #0x19c                 	// #412
  445f14:	mov	x2, x20
  445f18:	ldr	w1, [sp, #264]
  445f1c:	ldr	w0, [sp, #260]
  445f20:	bl	40b020 <log_object_internal@plt>
  445f24:	b	44638c <link_config_apply+0x1028>
  445f28:	strb	wzr, [sp, #122]
  445f2c:	ldr	w0, [sp, #124]
  445f30:	sub	w0, w0, #0x3
  445f34:	cmp	w0, #0x1
  445f38:	b.hi	445f44 <link_config_apply+0xbe0>  // b.pmore
  445f3c:	mov	w0, #0x1                   	// #1
  445f40:	strb	w0, [sp, #122]
  445f44:	nop
  445f48:	ldrb	w0, [sp, #122]
  445f4c:	eor	w0, w0, #0x1
  445f50:	and	w0, w0, #0xff
  445f54:	cmp	w0, #0x0
  445f58:	b.ne	4460e4 <link_config_apply+0xd80>  // b.any
  445f5c:	str	xzr, [sp, #328]
  445f60:	ldr	x0, [sp, #88]
  445f64:	str	x0, [sp, #368]
  445f68:	mov	w0, #0x7                   	// #7
  445f6c:	str	w0, [sp, #252]
  445f70:	str	wzr, [sp, #256]
  445f74:	ldr	x0, [sp, #368]
  445f78:	cmp	x0, #0x0
  445f7c:	b.eq	445fb8 <link_config_apply+0xc54>  // b.none
  445f80:	mov	w0, #0x1                   	// #1
  445f84:	bl	40be30 <log_get_max_level_realm@plt>
  445f88:	mov	w1, w0
  445f8c:	ldr	w0, [sp, #252]
  445f90:	cmp	w0, w1
  445f94:	cset	w0, le
  445f98:	and	w0, w0, #0xff
  445f9c:	and	x0, x0, #0xff
  445fa0:	cmp	x0, #0x0
  445fa4:	b.eq	445fb8 <link_config_apply+0xc54>  // b.none
  445fa8:	add	x0, sp, #0x148
  445fac:	mov	x1, x0
  445fb0:	ldr	x0, [sp, #368]
  445fb4:	bl	40aba0 <sd_device_get_sysname@plt>
  445fb8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  445fbc:	add	x20, x0, #0xf4b
  445fc0:	ldr	x0, [sp, #328]
  445fc4:	cmp	x0, #0x0
  445fc8:	b.eq	445fd8 <link_config_apply+0xc74>  // b.none
  445fcc:	adrp	x0, 45c000 <__func__.8393+0x150>
  445fd0:	add	x19, x0, #0xc8
  445fd4:	b	445fdc <link_config_apply+0xc78>
  445fd8:	mov	x19, #0x0                   	// #0
  445fdc:	ldr	x21, [sp, #328]
  445fe0:	ldr	w0, [sp, #132]
  445fe4:	bl	446830 <name_policy_to_string>
  445fe8:	str	x0, [sp, #16]
  445fec:	adrp	x0, 45c000 <__func__.8393+0x150>
  445ff0:	add	x0, x0, #0x640
  445ff4:	str	x0, [sp, #8]
  445ff8:	str	xzr, [sp]
  445ffc:	mov	x7, #0x0                   	// #0
  446000:	mov	x6, x21
  446004:	mov	x5, x19
  446008:	adrp	x0, 45c000 <__func__.8393+0x150>
  44600c:	add	x4, x0, #0x978
  446010:	mov	w3, #0x1a3                 	// #419
  446014:	mov	x2, x20
  446018:	ldr	w1, [sp, #256]
  44601c:	ldr	w0, [sp, #252]
  446020:	bl	40b020 <log_object_internal@plt>
  446024:	b	44638c <link_config_apply+0x1028>
  446028:	add	x0, sp, #0x138
  44602c:	mov	x2, x0
  446030:	adrp	x0, 45c000 <__func__.8393+0x150>
  446034:	add	x1, x0, #0x670
  446038:	ldr	x0, [sp, #88]
  44603c:	bl	40a310 <sd_device_get_property_value@plt>
  446040:	b	4460e8 <link_config_apply+0xd84>
  446044:	add	x0, sp, #0x138
  446048:	mov	x2, x0
  44604c:	adrp	x0, 45c000 <__func__.8393+0x150>
  446050:	add	x1, x0, #0x690
  446054:	ldr	x0, [sp, #88]
  446058:	bl	40a310 <sd_device_get_property_value@plt>
  44605c:	b	4460e8 <link_config_apply+0xd84>
  446060:	add	x0, sp, #0x138
  446064:	mov	x2, x0
  446068:	adrp	x0, 45c000 <__func__.8393+0x150>
  44606c:	add	x1, x0, #0x6a8
  446070:	ldr	x0, [sp, #88]
  446074:	bl	40a310 <sd_device_get_property_value@plt>
  446078:	b	4460e8 <link_config_apply+0xd84>
  44607c:	add	x0, sp, #0x138
  446080:	mov	x2, x0
  446084:	adrp	x0, 45c000 <__func__.8393+0x150>
  446088:	add	x1, x0, #0x6c0
  44608c:	ldr	x0, [sp, #88]
  446090:	bl	40a310 <sd_device_get_property_value@plt>
  446094:	b	4460e8 <link_config_apply+0xd84>
  446098:	add	x0, sp, #0x138
  44609c:	mov	x2, x0
  4460a0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4460a4:	add	x1, x0, #0x6d8
  4460a8:	ldr	x0, [sp, #88]
  4460ac:	bl	40a310 <sd_device_get_property_value@plt>
  4460b0:	b	4460e8 <link_config_apply+0xd84>
  4460b4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4460b8:	add	x1, x0, #0xf4b
  4460bc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4460c0:	add	x4, x0, #0x960
  4460c4:	mov	w3, #0x1b6                 	// #438
  4460c8:	mov	x2, x1
  4460cc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4460d0:	add	x1, x0, #0x6e8
  4460d4:	mov	w0, #0x1                   	// #1
  4460d8:	bl	40aca0 <log_assert_failed_unreachable_realm@plt>
  4460dc:	nop
  4460e0:	b	4460e8 <link_config_apply+0xd84>
  4460e4:	nop
  4460e8:	ldr	x0, [sp, #344]
  4460ec:	add	x0, x0, #0x4
  4460f0:	str	x0, [sp, #344]
  4460f4:	ldr	x0, [sp, #312]
  4460f8:	cmp	x0, #0x0
  4460fc:	b.ne	446110 <link_config_apply+0xdac>  // b.any
  446100:	ldr	x0, [sp, #344]
  446104:	ldr	w0, [x0]
  446108:	cmn	w0, #0x1
  44610c:	b.ne	445db0 <link_config_apply+0xa4c>  // b.any
  446110:	ldr	x0, [sp, #312]
  446114:	cmp	x0, #0x0
  446118:	b.eq	4461f4 <link_config_apply+0xe90>  // b.none
  44611c:	str	xzr, [sp, #328]
  446120:	ldr	x0, [sp, #88]
  446124:	str	x0, [sp, #400]
  446128:	mov	w0, #0x7                   	// #7
  44612c:	str	w0, [sp, #284]
  446130:	str	wzr, [sp, #288]
  446134:	ldr	x0, [sp, #400]
  446138:	cmp	x0, #0x0
  44613c:	b.eq	446178 <link_config_apply+0xe14>  // b.none
  446140:	mov	w0, #0x1                   	// #1
  446144:	bl	40be30 <log_get_max_level_realm@plt>
  446148:	mov	w1, w0
  44614c:	ldr	w0, [sp, #284]
  446150:	cmp	w0, w1
  446154:	cset	w0, le
  446158:	and	w0, w0, #0xff
  44615c:	and	x0, x0, #0xff
  446160:	cmp	x0, #0x0
  446164:	b.eq	446178 <link_config_apply+0xe14>  // b.none
  446168:	add	x0, sp, #0x148
  44616c:	mov	x1, x0
  446170:	ldr	x0, [sp, #400]
  446174:	bl	40aba0 <sd_device_get_sysname@plt>
  446178:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44617c:	add	x20, x0, #0xf4b
  446180:	ldr	x0, [sp, #328]
  446184:	cmp	x0, #0x0
  446188:	b.eq	446198 <link_config_apply+0xe34>  // b.none
  44618c:	adrp	x0, 45c000 <__func__.8393+0x150>
  446190:	add	x19, x0, #0xc8
  446194:	b	44619c <link_config_apply+0xe38>
  446198:	mov	x19, #0x0                   	// #0
  44619c:	ldr	x21, [sp, #328]
  4461a0:	ldr	w0, [sp, #132]
  4461a4:	bl	446830 <name_policy_to_string>
  4461a8:	mov	x1, x0
  4461ac:	ldr	x0, [sp, #312]
  4461b0:	str	x0, [sp, #24]
  4461b4:	str	x1, [sp, #16]
  4461b8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4461bc:	add	x0, x0, #0x6f8
  4461c0:	str	x0, [sp, #8]
  4461c4:	str	xzr, [sp]
  4461c8:	mov	x7, #0x0                   	// #0
  4461cc:	mov	x6, x21
  4461d0:	mov	x5, x19
  4461d4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4461d8:	add	x4, x0, #0x978
  4461dc:	mov	w3, #0x1bb                 	// #443
  4461e0:	mov	x2, x20
  4461e4:	ldr	w1, [sp, #288]
  4461e8:	ldr	w0, [sp, #284]
  4461ec:	bl	40b020 <log_object_internal@plt>
  4461f0:	b	44638c <link_config_apply+0x1028>
  4461f4:	ldr	x0, [sp, #96]
  4461f8:	ldr	x0, [x0, #96]
  4461fc:	cmp	x0, #0x0
  446200:	b.eq	4462d4 <link_config_apply+0xf70>  // b.none
  446204:	ldr	x0, [sp, #96]
  446208:	ldr	x0, [x0, #96]
  44620c:	str	x0, [sp, #312]
  446210:	str	xzr, [sp, #328]
  446214:	ldr	x0, [sp, #88]
  446218:	str	x0, [sp, #392]
  44621c:	mov	w0, #0x7                   	// #7
  446220:	str	w0, [sp, #276]
  446224:	str	wzr, [sp, #280]
  446228:	ldr	x0, [sp, #392]
  44622c:	cmp	x0, #0x0
  446230:	b.eq	44626c <link_config_apply+0xf08>  // b.none
  446234:	mov	w0, #0x1                   	// #1
  446238:	bl	40be30 <log_get_max_level_realm@plt>
  44623c:	mov	w1, w0
  446240:	ldr	w0, [sp, #276]
  446244:	cmp	w0, w1
  446248:	cset	w0, le
  44624c:	and	w0, w0, #0xff
  446250:	and	x0, x0, #0xff
  446254:	cmp	x0, #0x0
  446258:	b.eq	44626c <link_config_apply+0xf08>  // b.none
  44625c:	add	x0, sp, #0x148
  446260:	mov	x1, x0
  446264:	ldr	x0, [sp, #392]
  446268:	bl	40aba0 <sd_device_get_sysname@plt>
  44626c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  446270:	add	x2, x0, #0xf4b
  446274:	ldr	x0, [sp, #328]
  446278:	cmp	x0, #0x0
  44627c:	b.eq	44628c <link_config_apply+0xf28>  // b.none
  446280:	adrp	x0, 45c000 <__func__.8393+0x150>
  446284:	add	x0, x0, #0xc8
  446288:	b	446290 <link_config_apply+0xf2c>
  44628c:	mov	x0, #0x0                   	// #0
  446290:	ldr	x3, [sp, #328]
  446294:	ldr	x1, [sp, #312]
  446298:	str	x1, [sp, #16]
  44629c:	adrp	x1, 45c000 <__func__.8393+0x150>
  4462a0:	add	x1, x1, #0x718
  4462a4:	str	x1, [sp, #8]
  4462a8:	str	xzr, [sp]
  4462ac:	mov	x7, #0x0                   	// #0
  4462b0:	mov	x6, x3
  4462b4:	mov	x5, x0
  4462b8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4462bc:	add	x4, x0, #0x978
  4462c0:	mov	w3, #0x1be                 	// #446
  4462c4:	ldr	w1, [sp, #280]
  4462c8:	ldr	w0, [sp, #276]
  4462cc:	bl	40b020 <log_object_internal@plt>
  4462d0:	b	44638c <link_config_apply+0x1028>
  4462d4:	str	xzr, [sp, #328]
  4462d8:	ldr	x0, [sp, #88]
  4462dc:	str	x0, [sp, #384]
  4462e0:	mov	w0, #0x7                   	// #7
  4462e4:	str	w0, [sp, #268]
  4462e8:	str	wzr, [sp, #272]
  4462ec:	ldr	x0, [sp, #384]
  4462f0:	cmp	x0, #0x0
  4462f4:	b.eq	446330 <link_config_apply+0xfcc>  // b.none
  4462f8:	mov	w0, #0x1                   	// #1
  4462fc:	bl	40be30 <log_get_max_level_realm@plt>
  446300:	mov	w1, w0
  446304:	ldr	w0, [sp, #268]
  446308:	cmp	w0, w1
  44630c:	cset	w0, le
  446310:	and	w0, w0, #0xff
  446314:	and	x0, x0, #0xff
  446318:	cmp	x0, #0x0
  44631c:	b.eq	446330 <link_config_apply+0xfcc>  // b.none
  446320:	add	x0, sp, #0x148
  446324:	mov	x1, x0
  446328:	ldr	x0, [sp, #384]
  44632c:	bl	40aba0 <sd_device_get_sysname@plt>
  446330:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  446334:	add	x2, x0, #0xf4b
  446338:	ldr	x0, [sp, #328]
  44633c:	cmp	x0, #0x0
  446340:	b.eq	446350 <link_config_apply+0xfec>  // b.none
  446344:	adrp	x0, 45c000 <__func__.8393+0x150>
  446348:	add	x0, x0, #0xc8
  44634c:	b	446354 <link_config_apply+0xff0>
  446350:	mov	x0, #0x0                   	// #0
  446354:	ldr	x3, [sp, #328]
  446358:	adrp	x1, 45c000 <__func__.8393+0x150>
  44635c:	add	x1, x1, #0x750
  446360:	str	x1, [sp, #8]
  446364:	str	xzr, [sp]
  446368:	mov	x7, #0x0                   	// #0
  44636c:	mov	x6, x3
  446370:	mov	x5, x0
  446374:	adrp	x0, 45c000 <__func__.8393+0x150>
  446378:	add	x4, x0, #0x978
  44637c:	mov	w3, #0x1c0                 	// #448
  446380:	ldr	w1, [sp, #272]
  446384:	ldr	w0, [sp, #268]
  446388:	bl	40b020 <log_object_internal@plt>
  44638c:	strb	wzr, [sp, #123]
  446390:	ldr	x0, [sp, #96]
  446394:	ldr	w0, [x0, #80]
  446398:	cmp	w0, #0x1
  44639c:	b.hi	4463a8 <link_config_apply+0x1044>  // b.pmore
  4463a0:	mov	w0, #0x1                   	// #1
  4463a4:	strb	w0, [sp, #123]
  4463a8:	nop
  4463ac:	ldrb	w0, [sp, #123]
  4463b0:	cmp	w0, #0x0
  4463b4:	b.eq	4463e8 <link_config_apply+0x1084>  // b.none
  4463b8:	ldr	x0, [sp, #96]
  4463bc:	ldr	w0, [x0, #80]
  4463c0:	add	x1, sp, #0x1a0
  4463c4:	mov	x2, x1
  4463c8:	mov	w1, w0
  4463cc:	ldr	x0, [sp, #88]
  4463d0:	bl	444c4c <get_mac>
  4463d4:	cmp	w0, #0x0
  4463d8:	b.le	4463f4 <link_config_apply+0x1090>
  4463dc:	add	x0, sp, #0x1a0
  4463e0:	str	x0, [sp, #336]
  4463e4:	b	4463f4 <link_config_apply+0x1090>
  4463e8:	ldr	x0, [sp, #96]
  4463ec:	ldr	x0, [x0, #72]
  4463f0:	str	x0, [sp, #336]
  4463f4:	ldr	x0, [sp, #104]
  4463f8:	add	x5, x0, #0x10
  4463fc:	ldr	w1, [sp, #128]
  446400:	ldr	x0, [sp, #96]
  446404:	ldr	x2, [x0, #104]
  446408:	ldr	x0, [sp, #96]
  44640c:	ldr	w0, [x0, #112]
  446410:	mov	w4, w0
  446414:	ldr	x3, [sp, #336]
  446418:	mov	x0, x5
  44641c:	bl	40a4d0 <rtnl_set_link_properties@plt>
  446420:	str	w0, [sp, #136]
  446424:	ldr	w0, [sp, #136]
  446428:	cmp	w0, #0x0
  44642c:	b.ge	4464c4 <link_config_apply+0x1160>  // b.tcont
  446430:	mov	w0, #0x4                   	// #4
  446434:	str	w0, [sp, #292]
  446438:	ldr	w0, [sp, #136]
  44643c:	str	w0, [sp, #296]
  446440:	mov	w0, #0x1                   	// #1
  446444:	str	w0, [sp, #300]
  446448:	ldr	w0, [sp, #300]
  44644c:	bl	40be30 <log_get_max_level_realm@plt>
  446450:	mov	w1, w0
  446454:	ldr	w0, [sp, #292]
  446458:	and	w0, w0, #0x7
  44645c:	cmp	w1, w0
  446460:	b.lt	4464ac <link_config_apply+0x1148>  // b.tstop
  446464:	ldr	w0, [sp, #300]
  446468:	lsl	w1, w0, #10
  44646c:	ldr	w0, [sp, #292]
  446470:	orr	w7, w1, w0
  446474:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  446478:	add	x1, x0, #0xf4b
  44647c:	ldr	x0, [sp, #320]
  446480:	mov	x6, x0
  446484:	adrp	x0, 45c000 <__func__.8393+0x150>
  446488:	add	x5, x0, #0x798
  44648c:	adrp	x0, 45c000 <__func__.8393+0x150>
  446490:	add	x4, x0, #0x978
  446494:	mov	w3, #0x1cb                 	// #459
  446498:	mov	x2, x1
  44649c:	ldr	w1, [sp, #296]
  4464a0:	mov	w0, w7
  4464a4:	bl	40b4f0 <log_internal_realm@plt>
  4464a8:	b	4464d4 <link_config_apply+0x1170>
  4464ac:	ldr	w0, [sp, #296]
  4464b0:	cmp	w0, #0x0
  4464b4:	cneg	w0, w0, lt  // lt = tstop
  4464b8:	and	w0, w0, #0xff
  4464bc:	neg	w0, w0
  4464c0:	b	4464d4 <link_config_apply+0x1170>
  4464c4:	ldr	x1, [sp, #312]
  4464c8:	ldr	x0, [sp, #80]
  4464cc:	str	x1, [x0]
  4464d0:	mov	w0, #0x0                   	// #0
  4464d4:	mov	w1, w0
  4464d8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4464dc:	ldr	x0, [x0, #4032]
  4464e0:	ldr	x2, [sp, #424]
  4464e4:	ldr	x0, [x0]
  4464e8:	eor	x0, x2, x0
  4464ec:	cmp	x0, #0x0
  4464f0:	b.eq	4464f8 <link_config_apply+0x1194>  // b.none
  4464f4:	bl	40b280 <__stack_chk_fail@plt>
  4464f8:	mov	w0, w1
  4464fc:	ldp	x19, x20, [sp, #48]
  446500:	ldr	x21, [sp, #64]
  446504:	ldp	x29, x30, [sp, #32]
  446508:	add	sp, sp, #0x1b0
  44650c:	ret

0000000000446510 <link_get_driver>:
  446510:	stp	x29, x30, [sp, #-80]!
  446514:	mov	x29, sp
  446518:	str	x0, [sp, #40]
  44651c:	str	x1, [sp, #32]
  446520:	str	x2, [sp, #24]
  446524:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  446528:	ldr	x0, [x0, #4032]
  44652c:	ldr	x1, [x0]
  446530:	str	x1, [sp, #72]
  446534:	mov	x1, #0x0                   	// #0
  446538:	str	xzr, [sp, #64]
  44653c:	add	x0, sp, #0x38
  446540:	mov	x1, x0
  446544:	ldr	x0, [sp, #32]
  446548:	bl	40aba0 <sd_device_get_sysname@plt>
  44654c:	str	w0, [sp, #52]
  446550:	ldr	w0, [sp, #52]
  446554:	cmp	w0, #0x0
  446558:	b.ge	446564 <link_get_driver+0x54>  // b.tcont
  44655c:	ldr	w0, [sp, #52]
  446560:	b	4465a0 <link_get_driver+0x90>
  446564:	ldr	x0, [sp, #40]
  446568:	add	x0, x0, #0x8
  44656c:	ldr	x1, [sp, #56]
  446570:	add	x2, sp, #0x40
  446574:	bl	40b970 <ethtool_get_driver@plt>
  446578:	str	w0, [sp, #52]
  44657c:	ldr	w0, [sp, #52]
  446580:	cmp	w0, #0x0
  446584:	b.ge	446590 <link_get_driver+0x80>  // b.tcont
  446588:	ldr	w0, [sp, #52]
  44658c:	b	4465a0 <link_get_driver+0x90>
  446590:	ldr	x1, [sp, #64]
  446594:	ldr	x0, [sp, #24]
  446598:	str	x1, [x0]
  44659c:	mov	w0, #0x0                   	// #0
  4465a0:	mov	w1, w0
  4465a4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4465a8:	ldr	x0, [x0, #4032]
  4465ac:	ldr	x2, [sp, #72]
  4465b0:	ldr	x0, [x0]
  4465b4:	eor	x0, x2, x0
  4465b8:	cmp	x0, #0x0
  4465bc:	b.eq	4465c4 <link_get_driver+0xb4>  // b.none
  4465c0:	bl	40b280 <__stack_chk_fail@plt>
  4465c4:	mov	w0, w1
  4465c8:	ldp	x29, x30, [sp], #80
  4465cc:	ret

00000000004465d0 <mac_address_policy_to_string>:
  4465d0:	sub	sp, sp, #0x10
  4465d4:	str	w0, [sp, #12]
  4465d8:	ldr	w0, [sp, #12]
  4465dc:	cmp	w0, #0x0
  4465e0:	b.lt	4465f0 <mac_address_policy_to_string+0x20>  // b.tstop
  4465e4:	ldr	w0, [sp, #12]
  4465e8:	cmp	w0, #0x2
  4465ec:	b.le	4465f8 <mac_address_policy_to_string+0x28>
  4465f0:	mov	x0, #0x0                   	// #0
  4465f4:	b	446608 <mac_address_policy_to_string+0x38>
  4465f8:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  4465fc:	add	x0, x0, #0x598
  446600:	ldrsw	x1, [sp, #12]
  446604:	ldr	x0, [x0, x1, lsl #3]
  446608:	add	sp, sp, #0x10
  44660c:	ret

0000000000446610 <mac_address_policy_from_string>:
  446610:	stp	x29, x30, [sp, #-32]!
  446614:	mov	x29, sp
  446618:	str	x0, [sp, #24]
  44661c:	ldr	x2, [sp, #24]
  446620:	mov	x1, #0x3                   	// #3
  446624:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  446628:	add	x0, x0, #0x598
  44662c:	bl	40b6d0 <string_table_lookup@plt>
  446630:	ldp	x29, x30, [sp], #32
  446634:	ret

0000000000446638 <config_parse_mac_address_policy>:
  446638:	sub	sp, sp, #0x80
  44663c:	stp	x29, x30, [sp, #16]
  446640:	add	x29, sp, #0x10
  446644:	str	x0, [sp, #88]
  446648:	str	x1, [sp, #80]
  44664c:	str	w2, [sp, #76]
  446650:	str	x3, [sp, #64]
  446654:	str	w4, [sp, #72]
  446658:	str	x5, [sp, #56]
  44665c:	str	w6, [sp, #52]
  446660:	str	x7, [sp, #40]
  446664:	ldr	x0, [sp, #128]
  446668:	str	x0, [sp, #120]
  44666c:	ldr	x0, [sp, #80]
  446670:	cmp	x0, #0x0
  446674:	cset	w0, eq  // eq = none
  446678:	and	w0, w0, #0xff
  44667c:	and	x0, x0, #0xff
  446680:	cmp	x0, #0x0
  446684:	b.eq	4466b0 <config_parse_mac_address_policy+0x78>  // b.none
  446688:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44668c:	add	x1, x0, #0xf4b
  446690:	adrp	x0, 45c000 <__func__.8393+0x150>
  446694:	add	x4, x0, #0x990
  446698:	mov	w3, #0x1ea                 	// #490
  44669c:	mov	x2, x1
  4466a0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4466a4:	add	x1, x0, #0xf70
  4466a8:	mov	w0, #0x1                   	// #1
  4466ac:	bl	40abb0 <log_assert_failed_realm@plt>
  4466b0:	ldr	x0, [sp, #56]
  4466b4:	cmp	x0, #0x0
  4466b8:	cset	w0, eq  // eq = none
  4466bc:	and	w0, w0, #0xff
  4466c0:	and	x0, x0, #0xff
  4466c4:	cmp	x0, #0x0
  4466c8:	b.eq	4466f4 <config_parse_mac_address_policy+0xbc>  // b.none
  4466cc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4466d0:	add	x1, x0, #0xf4b
  4466d4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4466d8:	add	x4, x0, #0x990
  4466dc:	mov	w3, #0x1ea                 	// #490
  4466e0:	mov	x2, x1
  4466e4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4466e8:	add	x1, x0, #0x7f0
  4466ec:	mov	w0, #0x1                   	// #1
  4466f0:	bl	40abb0 <log_assert_failed_realm@plt>
  4466f4:	ldr	x0, [sp, #40]
  4466f8:	cmp	x0, #0x0
  4466fc:	cset	w0, eq  // eq = none
  446700:	and	w0, w0, #0xff
  446704:	and	x0, x0, #0xff
  446708:	cmp	x0, #0x0
  44670c:	b.eq	446738 <config_parse_mac_address_policy+0x100>  // b.none
  446710:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  446714:	add	x1, x0, #0xf4b
  446718:	adrp	x0, 45c000 <__func__.8393+0x150>
  44671c:	add	x4, x0, #0x990
  446720:	mov	w3, #0x1ea                 	// #490
  446724:	mov	x2, x1
  446728:	adrp	x0, 45c000 <__func__.8393+0x150>
  44672c:	add	x1, x0, #0x7f8
  446730:	mov	w0, #0x1                   	// #1
  446734:	bl	40abb0 <log_assert_failed_realm@plt>
  446738:	ldr	x0, [sp, #128]
  44673c:	cmp	x0, #0x0
  446740:	cset	w0, eq  // eq = none
  446744:	and	w0, w0, #0xff
  446748:	and	x0, x0, #0xff
  44674c:	cmp	x0, #0x0
  446750:	b.eq	44677c <config_parse_mac_address_policy+0x144>  // b.none
  446754:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  446758:	add	x1, x0, #0xf4b
  44675c:	adrp	x0, 45c000 <__func__.8393+0x150>
  446760:	add	x4, x0, #0x990
  446764:	mov	w3, #0x1ea                 	// #490
  446768:	mov	x2, x1
  44676c:	adrp	x0, 45c000 <__func__.8393+0x150>
  446770:	add	x1, x0, #0x800
  446774:	mov	w0, #0x1                   	// #1
  446778:	bl	40abb0 <log_assert_failed_realm@plt>
  44677c:	ldr	x0, [sp, #40]
  446780:	bl	446610 <mac_address_policy_from_string>
  446784:	str	w0, [sp, #108]
  446788:	ldr	w0, [sp, #108]
  44678c:	cmp	w0, #0x0
  446790:	b.ge	446814 <config_parse_mac_address_policy+0x1dc>  // b.tcont
  446794:	mov	w0, #0x3                   	// #3
  446798:	str	w0, [sp, #112]
  44679c:	str	wzr, [sp, #116]
  4467a0:	mov	w0, #0x1                   	// #1
  4467a4:	bl	40be30 <log_get_max_level_realm@plt>
  4467a8:	mov	w1, w0
  4467ac:	ldr	w0, [sp, #112]
  4467b0:	and	w0, w0, #0x7
  4467b4:	cmp	w1, w0
  4467b8:	b.lt	446804 <config_parse_mac_address_policy+0x1cc>  // b.tstop
  4467bc:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4467c0:	add	x1, x0, #0xf4b
  4467c4:	ldr	x0, [sp, #40]
  4467c8:	str	x0, [sp, #8]
  4467cc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4467d0:	add	x0, x0, #0x808
  4467d4:	str	x0, [sp]
  4467d8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4467dc:	add	x7, x0, #0x9b0
  4467e0:	mov	w6, #0x1ea                 	// #490
  4467e4:	mov	x5, x1
  4467e8:	ldr	w4, [sp, #116]
  4467ec:	ldr	w3, [sp, #76]
  4467f0:	ldr	x2, [sp, #80]
  4467f4:	ldr	w1, [sp, #112]
  4467f8:	ldr	x0, [sp, #88]
  4467fc:	bl	40b6a0 <log_syntax_internal@plt>
  446800:	b	44680c <config_parse_mac_address_policy+0x1d4>
  446804:	ldr	w0, [sp, #116]
  446808:	cmp	w0, #0x0
  44680c:	mov	w0, #0x0                   	// #0
  446810:	b	446824 <config_parse_mac_address_policy+0x1ec>
  446814:	ldr	x0, [sp, #120]
  446818:	ldr	w1, [sp, #108]
  44681c:	str	w1, [x0]
  446820:	mov	w0, #0x0                   	// #0
  446824:	ldp	x29, x30, [sp, #16]
  446828:	add	sp, sp, #0x80
  44682c:	ret

0000000000446830 <name_policy_to_string>:
  446830:	sub	sp, sp, #0x10
  446834:	str	w0, [sp, #12]
  446838:	ldr	w0, [sp, #12]
  44683c:	cmp	w0, #0x0
  446840:	b.lt	446850 <name_policy_to_string+0x20>  // b.tstop
  446844:	ldr	w0, [sp, #12]
  446848:	cmp	w0, #0x6
  44684c:	b.le	446858 <name_policy_to_string+0x28>
  446850:	mov	x0, #0x0                   	// #0
  446854:	b	446868 <name_policy_to_string+0x38>
  446858:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  44685c:	add	x0, x0, #0x5b0
  446860:	ldrsw	x1, [sp, #12]
  446864:	ldr	x0, [x0, x1, lsl #3]
  446868:	add	sp, sp, #0x10
  44686c:	ret

0000000000446870 <name_policy_from_string>:
  446870:	stp	x29, x30, [sp, #-32]!
  446874:	mov	x29, sp
  446878:	str	x0, [sp, #24]
  44687c:	ldr	x2, [sp, #24]
  446880:	mov	x1, #0x7                   	// #7
  446884:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  446888:	add	x0, x0, #0x5b0
  44688c:	bl	40b6d0 <string_table_lookup@plt>
  446890:	ldp	x29, x30, [sp], #32
  446894:	ret

0000000000446898 <config_parse_name_policy>:
  446898:	sub	sp, sp, #0xf0
  44689c:	stp	x29, x30, [sp, #16]
  4468a0:	add	x29, sp, #0x10
  4468a4:	stp	x19, x20, [sp, #32]
  4468a8:	str	x0, [sp, #120]
  4468ac:	str	x1, [sp, #112]
  4468b0:	str	w2, [sp, #108]
  4468b4:	str	x3, [sp, #96]
  4468b8:	str	w4, [sp, #104]
  4468bc:	str	x5, [sp, #88]
  4468c0:	str	w6, [sp, #84]
  4468c4:	str	x7, [sp, #72]
  4468c8:	ldr	x0, [sp, #240]
  4468cc:	str	x0, [sp, #64]
  4468d0:	ldr	x0, [sp, #248]
  4468d4:	str	x0, [sp, #56]
  4468d8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4468dc:	ldr	x0, [x0, #4032]
  4468e0:	ldr	x1, [x0]
  4468e4:	str	x1, [sp, #232]
  4468e8:	mov	x1, #0x0                   	// #0
  4468ec:	ldr	x0, [sp, #64]
  4468f0:	str	x0, [sp, #216]
  4468f4:	str	xzr, [sp, #160]
  4468f8:	str	xzr, [sp, #208]
  4468fc:	ldr	x0, [sp, #112]
  446900:	cmp	x0, #0x0
  446904:	cset	w0, eq  // eq = none
  446908:	and	w0, w0, #0xff
  44690c:	and	x0, x0, #0xff
  446910:	cmp	x0, #0x0
  446914:	b.eq	446940 <config_parse_name_policy+0xa8>  // b.none
  446918:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  44691c:	add	x1, x0, #0xf4b
  446920:	adrp	x0, 45c000 <__func__.8393+0x150>
  446924:	add	x4, x0, #0x9d0
  446928:	mov	w3, #0x1f8                 	// #504
  44692c:	mov	x2, x1
  446930:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  446934:	add	x1, x0, #0xf70
  446938:	mov	w0, #0x1                   	// #1
  44693c:	bl	40abb0 <log_assert_failed_realm@plt>
  446940:	ldr	x0, [sp, #88]
  446944:	cmp	x0, #0x0
  446948:	cset	w0, eq  // eq = none
  44694c:	and	w0, w0, #0xff
  446950:	and	x0, x0, #0xff
  446954:	cmp	x0, #0x0
  446958:	b.eq	446984 <config_parse_name_policy+0xec>  // b.none
  44695c:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  446960:	add	x1, x0, #0xf4b
  446964:	adrp	x0, 45c000 <__func__.8393+0x150>
  446968:	add	x4, x0, #0x9d0
  44696c:	mov	w3, #0x1f8                 	// #504
  446970:	mov	x2, x1
  446974:	adrp	x0, 45c000 <__func__.8393+0x150>
  446978:	add	x1, x0, #0x7f0
  44697c:	mov	w0, #0x1                   	// #1
  446980:	bl	40abb0 <log_assert_failed_realm@plt>
  446984:	ldr	x0, [sp, #72]
  446988:	cmp	x0, #0x0
  44698c:	cset	w0, eq  // eq = none
  446990:	and	w0, w0, #0xff
  446994:	and	x0, x0, #0xff
  446998:	cmp	x0, #0x0
  44699c:	b.eq	4469c8 <config_parse_name_policy+0x130>  // b.none
  4469a0:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4469a4:	add	x1, x0, #0xf4b
  4469a8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4469ac:	add	x4, x0, #0x9d0
  4469b0:	mov	w3, #0x1f8                 	// #504
  4469b4:	mov	x2, x1
  4469b8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4469bc:	add	x1, x0, #0x7f8
  4469c0:	mov	w0, #0x1                   	// #1
  4469c4:	bl	40abb0 <log_assert_failed_realm@plt>
  4469c8:	ldr	x0, [sp, #64]
  4469cc:	cmp	x0, #0x0
  4469d0:	cset	w0, eq  // eq = none
  4469d4:	and	w0, w0, #0xff
  4469d8:	and	x0, x0, #0xff
  4469dc:	cmp	x0, #0x0
  4469e0:	b.eq	446a0c <config_parse_name_policy+0x174>  // b.none
  4469e4:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  4469e8:	add	x1, x0, #0xf4b
  4469ec:	adrp	x0, 45c000 <__func__.8393+0x150>
  4469f0:	add	x4, x0, #0x9d0
  4469f4:	mov	w3, #0x1f8                 	// #504
  4469f8:	mov	x2, x1
  4469fc:	adrp	x0, 45c000 <__func__.8393+0x150>
  446a00:	add	x1, x0, #0x800
  446a04:	mov	w0, #0x1                   	// #1
  446a08:	bl	40abb0 <log_assert_failed_realm@plt>
  446a0c:	mov	x1, #0x4                   	// #4
  446a10:	mov	x0, #0x1                   	// #1
  446a14:	bl	40b7e0 <calloc@plt>
  446a18:	str	x0, [sp, #160]
  446a1c:	ldr	x0, [sp, #160]
  446a20:	cmp	x0, #0x0
  446a24:	b.ne	446a30 <config_parse_name_policy+0x198>  // b.any
  446a28:	mov	w20, #0xfffffff4            	// #-12
  446a2c:	b	446cec <config_parse_name_policy+0x454>
  446a30:	ldr	x0, [sp, #160]
  446a34:	mov	w1, #0xffffffff            	// #-1
  446a38:	str	w1, [x0]
  446a3c:	ldr	x0, [sp, #72]
  446a40:	str	x0, [sp, #168]
  446a44:	add	x1, sp, #0xb0
  446a48:	add	x4, sp, #0xa8
  446a4c:	mov	w3, #0x0                   	// #0
  446a50:	adrp	x0, 45c000 <__func__.8393+0x150>
  446a54:	add	x2, x0, #0x880
  446a58:	mov	x0, x4
  446a5c:	bl	40b590 <split@plt>
  446a60:	str	x0, [sp, #200]
  446a64:	b	446cc0 <config_parse_name_policy+0x428>
  446a68:	str	xzr, [sp, #184]
  446a6c:	ldr	x0, [sp, #176]
  446a70:	mov	x1, x0
  446a74:	ldr	x0, [sp, #200]
  446a78:	bl	40b1e0 <strndup@plt>
  446a7c:	str	x0, [sp, #184]
  446a80:	ldr	x0, [sp, #184]
  446a84:	cmp	x0, #0x0
  446a88:	b.ne	446a98 <config_parse_name_policy+0x200>  // b.any
  446a8c:	mov	w20, #0xfffffff4            	// #-12
  446a90:	mov	w19, #0x0                   	// #0
  446a94:	b	446c8c <config_parse_name_policy+0x3f4>
  446a98:	ldr	x0, [sp, #184]
  446a9c:	bl	446870 <name_policy_from_string>
  446aa0:	str	w0, [sp, #140]
  446aa4:	ldr	w0, [sp, #140]
  446aa8:	cmp	w0, #0x0
  446aac:	b.ge	446b30 <config_parse_name_policy+0x298>  // b.tcont
  446ab0:	mov	w0, #0x3                   	// #3
  446ab4:	str	w0, [sp, #152]
  446ab8:	str	wzr, [sp, #156]
  446abc:	mov	w0, #0x1                   	// #1
  446ac0:	bl	40be30 <log_get_max_level_realm@plt>
  446ac4:	mov	w1, w0
  446ac8:	ldr	w0, [sp, #152]
  446acc:	and	w0, w0, #0x7
  446ad0:	cmp	w1, w0
  446ad4:	b.lt	446b20 <config_parse_name_policy+0x288>  // b.tstop
  446ad8:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  446adc:	add	x1, x0, #0xf4b
  446ae0:	ldr	x0, [sp, #184]
  446ae4:	str	x0, [sp, #8]
  446ae8:	adrp	x0, 45c000 <__func__.8393+0x150>
  446aec:	add	x0, x0, #0x888
  446af0:	str	x0, [sp]
  446af4:	adrp	x0, 45c000 <__func__.8393+0x150>
  446af8:	add	x7, x0, #0x9f0
  446afc:	mov	w6, #0x1f8                 	// #504
  446b00:	mov	x5, x1
  446b04:	ldr	w4, [sp, #156]
  446b08:	ldr	w3, [sp, #108]
  446b0c:	ldr	x2, [sp, #112]
  446b10:	ldr	w1, [sp, #152]
  446b14:	ldr	x0, [sp, #120]
  446b18:	bl	40b6a0 <log_syntax_internal@plt>
  446b1c:	b	446b28 <config_parse_name_policy+0x290>
  446b20:	ldr	w0, [sp, #156]
  446b24:	cmp	w0, #0x0
  446b28:	mov	w19, #0x1                   	// #1
  446b2c:	b	446c8c <config_parse_name_policy+0x3f4>
  446b30:	ldr	x0, [sp, #160]
  446b34:	str	x0, [sp, #192]
  446b38:	b	446bdc <config_parse_name_policy+0x344>
  446b3c:	ldr	x0, [sp, #192]
  446b40:	ldr	w0, [x0]
  446b44:	ldr	w1, [sp, #140]
  446b48:	cmp	w1, w0
  446b4c:	b.ne	446bd0 <config_parse_name_policy+0x338>  // b.any
  446b50:	mov	w0, #0x5                   	// #5
  446b54:	str	w0, [sp, #144]
  446b58:	str	wzr, [sp, #148]
  446b5c:	mov	w0, #0x1                   	// #1
  446b60:	bl	40be30 <log_get_max_level_realm@plt>
  446b64:	mov	w1, w0
  446b68:	ldr	w0, [sp, #144]
  446b6c:	and	w0, w0, #0x7
  446b70:	cmp	w1, w0
  446b74:	b.lt	446bc0 <config_parse_name_policy+0x328>  // b.tstop
  446b78:	adrp	x0, 45b000 <__PRETTY_FUNCTION__.10053>
  446b7c:	add	x1, x0, #0xf4b
  446b80:	ldr	x0, [sp, #184]
  446b84:	str	x0, [sp, #8]
  446b88:	adrp	x0, 45c000 <__func__.8393+0x150>
  446b8c:	add	x0, x0, #0x8c0
  446b90:	str	x0, [sp]
  446b94:	adrp	x0, 45c000 <__func__.8393+0x150>
  446b98:	add	x7, x0, #0x9f0
  446b9c:	mov	w6, #0x1f8                 	// #504
  446ba0:	mov	x5, x1
  446ba4:	ldr	w4, [sp, #148]
  446ba8:	ldr	w3, [sp, #108]
  446bac:	ldr	x2, [sp, #112]
  446bb0:	ldr	w1, [sp, #144]
  446bb4:	ldr	x0, [sp, #120]
  446bb8:	bl	40b6a0 <log_syntax_internal@plt>
  446bbc:	b	446bc8 <config_parse_name_policy+0x330>
  446bc0:	ldr	w0, [sp, #148]
  446bc4:	cmp	w0, #0x0
  446bc8:	mov	w0, #0xffffffff            	// #-1
  446bcc:	str	w0, [sp, #140]
  446bd0:	ldr	x0, [sp, #192]
  446bd4:	add	x0, x0, #0x4
  446bd8:	str	x0, [sp, #192]
  446bdc:	ldr	w0, [sp, #140]
  446be0:	cmn	w0, #0x1
  446be4:	b.eq	446bf8 <config_parse_name_policy+0x360>  // b.none
  446be8:	ldr	x0, [sp, #192]
  446bec:	ldr	w0, [x0]
  446bf0:	cmn	w0, #0x1
  446bf4:	b.ne	446b3c <config_parse_name_policy+0x2a4>  // b.any
  446bf8:	ldr	w0, [sp, #140]
  446bfc:	cmn	w0, #0x1
  446c00:	b.ne	446c0c <config_parse_name_policy+0x374>  // b.any
  446c04:	mov	w19, #0x1                   	// #1
  446c08:	b	446c8c <config_parse_name_policy+0x3f4>
  446c0c:	ldr	x1, [sp, #160]
  446c10:	ldr	x0, [sp, #208]
  446c14:	lsl	x0, x0, #2
  446c18:	add	x0, x1, x0
  446c1c:	ldr	w1, [sp, #140]
  446c20:	str	w1, [x0]
  446c24:	ldr	x2, [sp, #160]
  446c28:	ldr	x0, [sp, #208]
  446c2c:	add	x0, x0, #0x1
  446c30:	str	x0, [sp, #208]
  446c34:	ldr	x0, [sp, #208]
  446c38:	add	x0, x0, #0x1
  446c3c:	lsl	x0, x0, #2
  446c40:	mov	x1, x0
  446c44:	mov	x0, x2
  446c48:	bl	40aae0 <realloc@plt>
  446c4c:	str	x0, [sp, #224]
  446c50:	ldr	x0, [sp, #224]
  446c54:	cmp	x0, #0x0
  446c58:	b.eq	446c84 <config_parse_name_policy+0x3ec>  // b.none
  446c5c:	ldr	x0, [sp, #224]
  446c60:	str	x0, [sp, #160]
  446c64:	ldr	x1, [sp, #160]
  446c68:	ldr	x0, [sp, #208]
  446c6c:	lsl	x0, x0, #2
  446c70:	add	x0, x1, x0
  446c74:	mov	w1, #0xffffffff            	// #-1
  446c78:	str	w1, [x0]
  446c7c:	mov	w19, #0x2                   	// #2
  446c80:	b	446c8c <config_parse_name_policy+0x3f4>
  446c84:	mov	w20, #0xfffffff4            	// #-12
  446c88:	mov	w19, #0x0                   	// #0
  446c8c:	add	x0, sp, #0xb8
  446c90:	bl	4434e8 <freep>
  446c94:	cmp	w19, #0x0
  446c98:	b.eq	446cec <config_parse_name_policy+0x454>  // b.none
  446c9c:	cmp	w19, #0x2
  446ca0:	add	x1, sp, #0xb0
  446ca4:	add	x4, sp, #0xa8
  446ca8:	mov	w3, #0x0                   	// #0
  446cac:	adrp	x0, 45c000 <__func__.8393+0x150>
  446cb0:	add	x2, x0, #0x880
  446cb4:	mov	x0, x4
  446cb8:	bl	40b590 <split@plt>
  446cbc:	str	x0, [sp, #200]
  446cc0:	ldr	x0, [sp, #200]
  446cc4:	cmp	x0, #0x0
  446cc8:	b.ne	446a68 <config_parse_name_policy+0x1d0>  // b.any
  446ccc:	ldr	x0, [sp, #216]
  446cd0:	ldr	x0, [x0]
  446cd4:	bl	40ba20 <free@plt>
  446cd8:	ldr	x1, [sp, #160]
  446cdc:	ldr	x0, [sp, #216]
  446ce0:	str	x1, [x0]
  446ce4:	str	xzr, [sp, #160]
  446ce8:	mov	w20, #0x0                   	// #0
  446cec:	add	x0, sp, #0xa0
  446cf0:	bl	4434e8 <freep>
  446cf4:	mov	w1, w20
  446cf8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  446cfc:	ldr	x0, [x0, #4032]
  446d00:	ldr	x2, [sp, #232]
  446d04:	ldr	x0, [x0]
  446d08:	eor	x0, x2, x0
  446d0c:	cmp	x0, #0x0
  446d10:	b.eq	446d18 <config_parse_name_policy+0x480>  // b.none
  446d14:	bl	40b280 <__stack_chk_fail@plt>
  446d18:	mov	w0, w1
  446d1c:	ldp	x19, x20, [sp, #32]
  446d20:	ldp	x29, x30, [sp, #16]
  446d24:	add	sp, sp, #0xf0
  446d28:	ret

0000000000446d2c <freep>:
  446d2c:	stp	x29, x30, [sp, #-32]!
  446d30:	mov	x29, sp
  446d34:	str	x0, [sp, #24]
  446d38:	ldr	x0, [sp, #24]
  446d3c:	ldr	x0, [x0]
  446d40:	bl	40ba20 <free@plt>
  446d44:	nop
  446d48:	ldp	x29, x30, [sp], #32
  446d4c:	ret

0000000000446d50 <naming_scheme_from_name>:
  446d50:	stp	x29, x30, [sp, #-48]!
  446d54:	mov	x29, sp
  446d58:	str	x0, [sp, #24]
  446d5c:	adrp	x0, 45c000 <__func__.8393+0x150>
  446d60:	add	x1, x0, #0xa38
  446d64:	ldr	x0, [sp, #24]
  446d68:	bl	40b710 <strcmp@plt>
  446d6c:	cmp	w0, #0x0
  446d70:	b.ne	446d80 <naming_scheme_from_name+0x30>  // b.any
  446d74:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  446d78:	add	x0, x0, #0x628
  446d7c:	b	446de4 <naming_scheme_from_name+0x94>
  446d80:	str	xzr, [sp, #40]
  446d84:	b	446dd4 <naming_scheme_from_name+0x84>
  446d88:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  446d8c:	add	x1, x0, #0x5e8
  446d90:	ldr	x0, [sp, #40]
  446d94:	lsl	x0, x0, #4
  446d98:	add	x0, x1, x0
  446d9c:	ldr	x0, [x0]
  446da0:	ldr	x1, [sp, #24]
  446da4:	bl	40b710 <strcmp@plt>
  446da8:	cmp	w0, #0x0
  446dac:	b.ne	446dc8 <naming_scheme_from_name+0x78>  // b.any
  446db0:	ldr	x0, [sp, #40]
  446db4:	lsl	x1, x0, #4
  446db8:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  446dbc:	add	x0, x0, #0x5e8
  446dc0:	add	x0, x1, x0
  446dc4:	b	446de4 <naming_scheme_from_name+0x94>
  446dc8:	ldr	x0, [sp, #40]
  446dcc:	add	x0, x0, #0x1
  446dd0:	str	x0, [sp, #40]
  446dd4:	ldr	x0, [sp, #40]
  446dd8:	cmp	x0, #0x4
  446ddc:	b.ls	446d88 <naming_scheme_from_name+0x38>  // b.plast
  446de0:	mov	x0, #0x0                   	// #0
  446de4:	ldp	x29, x30, [sp], #48
  446de8:	ret

0000000000446dec <naming_scheme>:
  446dec:	stp	x29, x30, [sp, #-112]!
  446df0:	mov	x29, sp
  446df4:	str	x19, [sp, #16]
  446df8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  446dfc:	ldr	x0, [x0, #4032]
  446e00:	ldr	x1, [x0]
  446e04:	str	x1, [sp, #104]
  446e08:	mov	x1, #0x0                   	// #0
  446e0c:	str	xzr, [sp, #80]
  446e10:	adrp	x0, 48d000 <arg_resolve_name_timing>
  446e14:	add	x0, x0, #0x1b8
  446e18:	ldr	x0, [x0]
  446e1c:	cmp	x0, #0x0
  446e20:	b.eq	446e34 <naming_scheme+0x48>  // b.none
  446e24:	adrp	x0, 48d000 <arg_resolve_name_timing>
  446e28:	add	x0, x0, #0x1b8
  446e2c:	ldr	x19, [x0]
  446e30:	b	4470f8 <naming_scheme+0x30c>
  446e34:	add	x0, sp, #0x50
  446e38:	mov	x2, x0
  446e3c:	mov	w1, #0x0                   	// #0
  446e40:	adrp	x0, 45c000 <__func__.8393+0x150>
  446e44:	add	x0, x0, #0xa40
  446e48:	bl	40b440 <proc_cmdline_get_key@plt>
  446e4c:	adrp	x0, 45c000 <__func__.8393+0x150>
  446e50:	add	x0, x0, #0xa58
  446e54:	bl	40b7f0 <getenv@plt>
  446e58:	str	x0, [sp, #96]
  446e5c:	ldr	x0, [sp, #96]
  446e60:	cmp	x0, #0x0
  446e64:	b.eq	446ea0 <naming_scheme+0xb4>  // b.none
  446e68:	ldr	x0, [sp, #96]
  446e6c:	ldrb	w0, [x0]
  446e70:	cmp	w0, #0x3a
  446e74:	b.ne	446e94 <naming_scheme+0xa8>  // b.any
  446e78:	ldr	x0, [sp, #80]
  446e7c:	cmp	x0, #0x0
  446e80:	b.ne	446e8c <naming_scheme+0xa0>  // b.any
  446e84:	ldr	x0, [sp, #96]
  446e88:	add	x0, x0, #0x1
  446e8c:	str	x0, [sp, #88]
  446e90:	b	446ea8 <naming_scheme+0xbc>
  446e94:	ldr	x0, [sp, #96]
  446e98:	str	x0, [sp, #88]
  446e9c:	b	446ea8 <naming_scheme+0xbc>
  446ea0:	ldr	x0, [sp, #80]
  446ea4:	str	x0, [sp, #88]
  446ea8:	ldr	x0, [sp, #88]
  446eac:	cmp	x0, #0x0
  446eb0:	b.eq	446ff8 <naming_scheme+0x20c>  // b.none
  446eb4:	ldr	x0, [sp, #88]
  446eb8:	bl	446d50 <naming_scheme_from_name>
  446ebc:	mov	x1, x0
  446ec0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  446ec4:	add	x0, x0, #0x1b8
  446ec8:	str	x1, [x0]
  446ecc:	adrp	x0, 48d000 <arg_resolve_name_timing>
  446ed0:	add	x0, x0, #0x1b8
  446ed4:	ldr	x0, [x0]
  446ed8:	cmp	x0, #0x0
  446edc:	b.eq	446f7c <naming_scheme+0x190>  // b.none
  446ee0:	mov	w0, #0x6                   	// #6
  446ee4:	str	w0, [sp, #56]
  446ee8:	str	wzr, [sp, #60]
  446eec:	mov	w0, #0x1                   	// #1
  446ef0:	str	w0, [sp, #64]
  446ef4:	ldr	w0, [sp, #64]
  446ef8:	bl	40be30 <log_get_max_level_realm@plt>
  446efc:	mov	w1, w0
  446f00:	ldr	w0, [sp, #56]
  446f04:	and	w0, w0, #0x7
  446f08:	cmp	w1, w0
  446f0c:	b.lt	446f64 <naming_scheme+0x178>  // b.tstop
  446f10:	ldr	w0, [sp, #64]
  446f14:	lsl	w1, w0, #10
  446f18:	ldr	w0, [sp, #56]
  446f1c:	orr	w7, w1, w0
  446f20:	adrp	x0, 45c000 <__func__.8393+0x150>
  446f24:	add	x1, x0, #0xa73
  446f28:	adrp	x0, 48d000 <arg_resolve_name_timing>
  446f2c:	add	x0, x0, #0x1b8
  446f30:	ldr	x0, [x0]
  446f34:	ldr	x0, [x0]
  446f38:	mov	x6, x0
  446f3c:	adrp	x0, 45c000 <__func__.8393+0x150>
  446f40:	add	x5, x0, #0xa90
  446f44:	adrp	x0, 45c000 <__func__.8393+0x150>
  446f48:	add	x4, x0, #0xb30
  446f4c:	mov	w3, #0x36                  	// #54
  446f50:	mov	x2, x1
  446f54:	ldr	w1, [sp, #60]
  446f58:	mov	w0, w7
  446f5c:	bl	40b4f0 <log_internal_realm@plt>
  446f60:	b	446f6c <naming_scheme+0x180>
  446f64:	ldr	w0, [sp, #60]
  446f68:	cmp	w0, #0x0
  446f6c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  446f70:	add	x0, x0, #0x1b8
  446f74:	ldr	x19, [x0]
  446f78:	b	4470f8 <naming_scheme+0x30c>
  446f7c:	mov	w0, #0x4                   	// #4
  446f80:	str	w0, [sp, #44]
  446f84:	str	wzr, [sp, #48]
  446f88:	mov	w0, #0x1                   	// #1
  446f8c:	str	w0, [sp, #52]
  446f90:	ldr	w0, [sp, #52]
  446f94:	bl	40be30 <log_get_max_level_realm@plt>
  446f98:	mov	w1, w0
  446f9c:	ldr	w0, [sp, #44]
  446fa0:	and	w0, w0, #0x7
  446fa4:	cmp	w1, w0
  446fa8:	b.lt	446ff0 <naming_scheme+0x204>  // b.tstop
  446fac:	ldr	w0, [sp, #52]
  446fb0:	lsl	w1, w0, #10
  446fb4:	ldr	w0, [sp, #44]
  446fb8:	orr	w7, w1, w0
  446fbc:	adrp	x0, 45c000 <__func__.8393+0x150>
  446fc0:	add	x1, x0, #0xa73
  446fc4:	ldr	x6, [sp, #88]
  446fc8:	adrp	x0, 45c000 <__func__.8393+0x150>
  446fcc:	add	x5, x0, #0xab8
  446fd0:	adrp	x0, 45c000 <__func__.8393+0x150>
  446fd4:	add	x4, x0, #0xb30
  446fd8:	mov	w3, #0x3a                  	// #58
  446fdc:	mov	x2, x1
  446fe0:	ldr	w1, [sp, #48]
  446fe4:	mov	w0, w7
  446fe8:	bl	40b4f0 <log_internal_realm@plt>
  446fec:	b	446ff8 <naming_scheme+0x20c>
  446ff0:	ldr	w0, [sp, #48]
  446ff4:	cmp	w0, #0x0
  446ff8:	adrp	x0, 45c000 <__func__.8393+0x150>
  446ffc:	add	x0, x0, #0xa38
  447000:	bl	446d50 <naming_scheme_from_name>
  447004:	mov	x1, x0
  447008:	adrp	x0, 48d000 <arg_resolve_name_timing>
  44700c:	add	x0, x0, #0x1b8
  447010:	str	x1, [x0]
  447014:	adrp	x0, 48d000 <arg_resolve_name_timing>
  447018:	add	x0, x0, #0x1b8
  44701c:	ldr	x0, [x0]
  447020:	cmp	x0, #0x0
  447024:	cset	w0, eq  // eq = none
  447028:	and	w0, w0, #0xff
  44702c:	and	x0, x0, #0xff
  447030:	cmp	x0, #0x0
  447034:	b.eq	447060 <naming_scheme+0x274>  // b.none
  447038:	adrp	x0, 45c000 <__func__.8393+0x150>
  44703c:	add	x1, x0, #0xa73
  447040:	adrp	x0, 45c000 <__func__.8393+0x150>
  447044:	add	x4, x0, #0xb40
  447048:	mov	w3, #0x3e                  	// #62
  44704c:	mov	x2, x1
  447050:	adrp	x0, 45c000 <__func__.8393+0x150>
  447054:	add	x1, x0, #0xaf8
  447058:	mov	w0, #0x1                   	// #1
  44705c:	bl	40abb0 <log_assert_failed_realm@plt>
  447060:	mov	w0, #0x6                   	// #6
  447064:	str	w0, [sp, #68]
  447068:	str	wzr, [sp, #72]
  44706c:	mov	w0, #0x1                   	// #1
  447070:	str	w0, [sp, #76]
  447074:	ldr	w0, [sp, #76]
  447078:	bl	40be30 <log_get_max_level_realm@plt>
  44707c:	mov	w1, w0
  447080:	ldr	w0, [sp, #68]
  447084:	and	w0, w0, #0x7
  447088:	cmp	w1, w0
  44708c:	b.lt	4470e4 <naming_scheme+0x2f8>  // b.tstop
  447090:	ldr	w0, [sp, #76]
  447094:	lsl	w1, w0, #10
  447098:	ldr	w0, [sp, #68]
  44709c:	orr	w7, w1, w0
  4470a0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4470a4:	add	x1, x0, #0xa73
  4470a8:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4470ac:	add	x0, x0, #0x1b8
  4470b0:	ldr	x0, [x0]
  4470b4:	ldr	x0, [x0]
  4470b8:	mov	x6, x0
  4470bc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4470c0:	add	x5, x0, #0xb00
  4470c4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4470c8:	add	x4, x0, #0xb30
  4470cc:	mov	w3, #0x3f                  	// #63
  4470d0:	mov	x2, x1
  4470d4:	ldr	w1, [sp, #72]
  4470d8:	mov	w0, w7
  4470dc:	bl	40b4f0 <log_internal_realm@plt>
  4470e0:	b	4470ec <naming_scheme+0x300>
  4470e4:	ldr	w0, [sp, #72]
  4470e8:	cmp	w0, #0x0
  4470ec:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4470f0:	add	x0, x0, #0x1b8
  4470f4:	ldr	x19, [x0]
  4470f8:	add	x0, sp, #0x50
  4470fc:	bl	446d2c <freep>
  447100:	mov	x1, x19
  447104:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  447108:	ldr	x0, [x0, #4032]
  44710c:	ldr	x2, [sp, #104]
  447110:	ldr	x0, [x0]
  447114:	eor	x0, x2, x0
  447118:	cmp	x0, #0x0
  44711c:	b.eq	447124 <naming_scheme+0x338>  // b.none
  447120:	bl	40b280 <__stack_chk_fail@plt>
  447124:	mov	x0, x1
  447128:	ldr	x19, [sp, #16]
  44712c:	ldp	x29, x30, [sp], #112
  447130:	ret

0000000000447134 <udev_kmod_log>:
  447134:	stp	x29, x30, [sp, #-112]!
  447138:	mov	x29, sp
  44713c:	str	x19, [sp, #16]
  447140:	str	x0, [sp, #104]
  447144:	str	w1, [sp, #100]
  447148:	str	x2, [sp, #88]
  44714c:	str	w3, [sp, #96]
  447150:	str	x4, [sp, #80]
  447154:	str	x5, [sp, #72]
  447158:	mov	x19, x6
  44715c:	ldr	w0, [sp, #100]
  447160:	orr	w7, w0, #0x400
  447164:	add	x2, sp, #0x20
  447168:	mov	x3, x19
  44716c:	ldp	x0, x1, [x3]
  447170:	stp	x0, x1, [x2]
  447174:	ldp	x0, x1, [x3, #16]
  447178:	stp	x0, x1, [x2, #16]
  44717c:	add	x0, sp, #0x20
  447180:	mov	x6, x0
  447184:	ldr	x5, [sp, #72]
  447188:	ldr	x4, [sp, #80]
  44718c:	ldr	w3, [sp, #96]
  447190:	ldr	x2, [sp, #88]
  447194:	mov	w1, #0x0                   	// #0
  447198:	mov	w0, w7
  44719c:	bl	40b960 <log_internalv_realm@plt>
  4471a0:	nop
  4471a4:	ldr	x19, [sp, #16]
  4471a8:	ldp	x29, x30, [sp], #112
  4471ac:	ret

00000000004471b0 <builtin_kmod>:
  4471b0:	stp	x29, x30, [sp, #-64]!
  4471b4:	mov	x29, sp
  4471b8:	str	x0, [sp, #40]
  4471bc:	str	w1, [sp, #36]
  4471c0:	str	x2, [sp, #24]
  4471c4:	strb	w3, [sp, #35]
  4471c8:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4471cc:	add	x0, x0, #0x1c0
  4471d0:	ldr	x0, [x0]
  4471d4:	cmp	x0, #0x0
  4471d8:	b.ne	4471e4 <builtin_kmod+0x34>  // b.any
  4471dc:	mov	w0, #0x0                   	// #0
  4471e0:	b	447318 <builtin_kmod+0x168>
  4471e4:	ldr	w0, [sp, #36]
  4471e8:	cmp	w0, #0x2
  4471ec:	b.le	447214 <builtin_kmod+0x64>
  4471f0:	ldr	x0, [sp, #24]
  4471f4:	add	x0, x0, #0x8
  4471f8:	ldr	x2, [x0]
  4471fc:	adrp	x0, 45c000 <__func__.8393+0x150>
  447200:	add	x1, x0, #0xb50
  447204:	mov	x0, x2
  447208:	bl	40b710 <strcmp@plt>
  44720c:	cmp	w0, #0x0
  447210:	b.eq	4472b0 <builtin_kmod+0x100>  // b.none
  447214:	mov	w0, #0x3                   	// #3
  447218:	str	w0, [sp, #52]
  44721c:	mov	w0, #0x16                  	// #22
  447220:	movk	w0, #0x4000, lsl #16
  447224:	str	w0, [sp, #56]
  447228:	mov	w0, #0x1                   	// #1
  44722c:	str	w0, [sp, #60]
  447230:	ldr	w0, [sp, #60]
  447234:	bl	40be30 <log_get_max_level_realm@plt>
  447238:	mov	w1, w0
  44723c:	ldr	w0, [sp, #52]
  447240:	and	w0, w0, #0x7
  447244:	cmp	w1, w0
  447248:	b.lt	447298 <builtin_kmod+0xe8>  // b.tstop
  44724c:	ldr	w0, [sp, #60]
  447250:	lsl	w1, w0, #10
  447254:	ldr	w0, [sp, #52]
  447258:	orr	w7, w1, w0
  44725c:	adrp	x0, 45c000 <__func__.8393+0x150>
  447260:	add	x1, x0, #0xb5b
  447264:	ldr	x0, [sp, #24]
  447268:	ldr	x0, [x0]
  44726c:	mov	x6, x0
  447270:	adrp	x0, 45c000 <__func__.8393+0x150>
  447274:	add	x5, x0, #0xb78
  447278:	adrp	x0, 45c000 <__func__.8393+0x150>
  44727c:	add	x4, x0, #0xc00
  447280:	mov	w3, #0x1e                  	// #30
  447284:	mov	x2, x1
  447288:	ldr	w1, [sp, #56]
  44728c:	mov	w0, w7
  447290:	bl	40b4f0 <log_internal_realm@plt>
  447294:	b	447318 <builtin_kmod+0x168>
  447298:	ldr	w0, [sp, #56]
  44729c:	cmp	w0, #0x0
  4472a0:	cneg	w0, w0, lt  // lt = tstop
  4472a4:	and	w0, w0, #0xff
  4472a8:	neg	w0, w0
  4472ac:	b	447318 <builtin_kmod+0x168>
  4472b0:	mov	w0, #0x2                   	// #2
  4472b4:	str	w0, [sp, #48]
  4472b8:	b	4472f8 <builtin_kmod+0x148>
  4472bc:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4472c0:	add	x0, x0, #0x1c0
  4472c4:	ldr	x3, [x0]
  4472c8:	ldrsw	x0, [sp, #48]
  4472cc:	lsl	x0, x0, #3
  4472d0:	ldr	x1, [sp, #24]
  4472d4:	add	x0, x1, x0
  4472d8:	ldr	x0, [x0]
  4472dc:	mov	w2, #0x0                   	// #0
  4472e0:	mov	x1, x0
  4472e4:	mov	x0, x3
  4472e8:	bl	40b090 <module_load_and_warn@plt>
  4472ec:	ldr	w0, [sp, #48]
  4472f0:	add	w0, w0, #0x1
  4472f4:	str	w0, [sp, #48]
  4472f8:	ldrsw	x0, [sp, #48]
  4472fc:	lsl	x0, x0, #3
  447300:	ldr	x1, [sp, #24]
  447304:	add	x0, x1, x0
  447308:	ldr	x0, [x0]
  44730c:	cmp	x0, #0x0
  447310:	b.ne	4472bc <builtin_kmod+0x10c>  // b.any
  447314:	mov	w0, #0x0                   	// #0
  447318:	ldp	x29, x30, [sp], #64
  44731c:	ret

0000000000447320 <builtin_kmod_init>:
  447320:	stp	x29, x30, [sp, #-32]!
  447324:	mov	x29, sp
  447328:	adrp	x0, 48d000 <arg_resolve_name_timing>
  44732c:	add	x0, x0, #0x1c0
  447330:	ldr	x0, [x0]
  447334:	cmp	x0, #0x0
  447338:	b.eq	447344 <builtin_kmod_init+0x24>  // b.none
  44733c:	mov	w0, #0x0                   	// #0
  447340:	b	447428 <builtin_kmod_init+0x108>
  447344:	mov	x1, #0x0                   	// #0
  447348:	mov	x0, #0x0                   	// #0
  44734c:	bl	40a990 <kmod_new@plt>
  447350:	mov	x1, x0
  447354:	adrp	x0, 48d000 <arg_resolve_name_timing>
  447358:	add	x0, x0, #0x1c0
  44735c:	str	x1, [x0]
  447360:	adrp	x0, 48d000 <arg_resolve_name_timing>
  447364:	add	x0, x0, #0x1c0
  447368:	ldr	x0, [x0]
  44736c:	cmp	x0, #0x0
  447370:	b.ne	44737c <builtin_kmod_init+0x5c>  // b.any
  447374:	mov	w0, #0xfffffff4            	// #-12
  447378:	b	447428 <builtin_kmod_init+0x108>
  44737c:	mov	w0, #0x7                   	// #7
  447380:	str	w0, [sp, #20]
  447384:	str	wzr, [sp, #24]
  447388:	mov	w0, #0x1                   	// #1
  44738c:	str	w0, [sp, #28]
  447390:	ldr	w0, [sp, #28]
  447394:	bl	40be30 <log_get_max_level_realm@plt>
  447398:	mov	w1, w0
  44739c:	ldr	w0, [sp, #20]
  4473a0:	and	w0, w0, #0x7
  4473a4:	cmp	w1, w0
  4473a8:	b.lt	4473ec <builtin_kmod_init+0xcc>  // b.tstop
  4473ac:	ldr	w0, [sp, #28]
  4473b0:	lsl	w1, w0, #10
  4473b4:	ldr	w0, [sp, #20]
  4473b8:	orr	w6, w1, w0
  4473bc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4473c0:	add	x1, x0, #0xb5b
  4473c4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4473c8:	add	x5, x0, #0xb98
  4473cc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4473d0:	add	x4, x0, #0xc10
  4473d4:	mov	w3, #0x30                  	// #48
  4473d8:	mov	x2, x1
  4473dc:	ldr	w1, [sp, #24]
  4473e0:	mov	w0, w6
  4473e4:	bl	40b4f0 <log_internal_realm@plt>
  4473e8:	b	4473f4 <builtin_kmod_init+0xd4>
  4473ec:	ldr	w0, [sp, #24]
  4473f0:	cmp	w0, #0x0
  4473f4:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4473f8:	add	x0, x0, #0x1c0
  4473fc:	ldr	x3, [x0]
  447400:	mov	x2, #0x0                   	// #0
  447404:	adrp	x0, 447000 <naming_scheme+0x214>
  447408:	add	x1, x0, #0x134
  44740c:	mov	x0, x3
  447410:	bl	40aa40 <kmod_set_log_fn@plt>
  447414:	adrp	x0, 48d000 <arg_resolve_name_timing>
  447418:	add	x0, x0, #0x1c0
  44741c:	ldr	x0, [x0]
  447420:	bl	40bd80 <kmod_load_resources@plt>
  447424:	mov	w0, #0x0                   	// #0
  447428:	ldp	x29, x30, [sp], #32
  44742c:	ret

0000000000447430 <builtin_kmod_exit>:
  447430:	stp	x29, x30, [sp, #-32]!
  447434:	mov	x29, sp
  447438:	mov	w0, #0x7                   	// #7
  44743c:	str	w0, [sp, #20]
  447440:	str	wzr, [sp, #24]
  447444:	mov	w0, #0x1                   	// #1
  447448:	str	w0, [sp, #28]
  44744c:	ldr	w0, [sp, #28]
  447450:	bl	40be30 <log_get_max_level_realm@plt>
  447454:	mov	w1, w0
  447458:	ldr	w0, [sp, #20]
  44745c:	and	w0, w0, #0x7
  447460:	cmp	w1, w0
  447464:	b.lt	4474a8 <builtin_kmod_exit+0x78>  // b.tstop
  447468:	ldr	w0, [sp, #28]
  44746c:	lsl	w1, w0, #10
  447470:	ldr	w0, [sp, #20]
  447474:	orr	w6, w1, w0
  447478:	adrp	x0, 45c000 <__func__.8393+0x150>
  44747c:	add	x1, x0, #0xb5b
  447480:	adrp	x0, 45c000 <__func__.8393+0x150>
  447484:	add	x5, x0, #0xbb0
  447488:	adrp	x0, 45c000 <__func__.8393+0x150>
  44748c:	add	x4, x0, #0xc28
  447490:	mov	w3, #0x38                  	// #56
  447494:	mov	x2, x1
  447498:	ldr	w1, [sp, #24]
  44749c:	mov	w0, w6
  4474a0:	bl	40b4f0 <log_internal_realm@plt>
  4474a4:	b	4474b0 <builtin_kmod_exit+0x80>
  4474a8:	ldr	w0, [sp, #24]
  4474ac:	cmp	w0, #0x0
  4474b0:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4474b4:	add	x0, x0, #0x1c0
  4474b8:	ldr	x0, [x0]
  4474bc:	bl	40afb0 <kmod_unref@plt>
  4474c0:	mov	x1, x0
  4474c4:	adrp	x0, 48d000 <arg_resolve_name_timing>
  4474c8:	add	x0, x0, #0x1c0
  4474cc:	str	x1, [x0]
  4474d0:	nop
  4474d4:	ldp	x29, x30, [sp], #32
  4474d8:	ret

00000000004474dc <builtin_kmod_validate>:
  4474dc:	stp	x29, x30, [sp, #-32]!
  4474e0:	mov	x29, sp
  4474e4:	mov	w0, #0x7                   	// #7
  4474e8:	str	w0, [sp, #20]
  4474ec:	str	wzr, [sp, #24]
  4474f0:	mov	w0, #0x1                   	// #1
  4474f4:	str	w0, [sp, #28]
  4474f8:	ldr	w0, [sp, #28]
  4474fc:	bl	40be30 <log_get_max_level_realm@plt>
  447500:	mov	w1, w0
  447504:	ldr	w0, [sp, #20]
  447508:	and	w0, w0, #0x7
  44750c:	cmp	w1, w0
  447510:	b.lt	447554 <builtin_kmod_validate+0x78>  // b.tstop
  447514:	ldr	w0, [sp, #28]
  447518:	lsl	w1, w0, #10
  44751c:	ldr	w0, [sp, #20]
  447520:	orr	w6, w1, w0
  447524:	adrp	x0, 45c000 <__func__.8393+0x150>
  447528:	add	x1, x0, #0xb5b
  44752c:	adrp	x0, 45c000 <__func__.8393+0x150>
  447530:	add	x5, x0, #0xbc8
  447534:	adrp	x0, 45c000 <__func__.8393+0x150>
  447538:	add	x4, x0, #0xc40
  44753c:	mov	w3, #0x3e                  	// #62
  447540:	mov	x2, x1
  447544:	ldr	w1, [sp, #24]
  447548:	mov	w0, w6
  44754c:	bl	40b4f0 <log_internal_realm@plt>
  447550:	b	44755c <builtin_kmod_validate+0x80>
  447554:	ldr	w0, [sp, #24]
  447558:	cmp	w0, #0x0
  44755c:	adrp	x0, 48d000 <arg_resolve_name_timing>
  447560:	add	x0, x0, #0x1c0
  447564:	ldr	x0, [x0]
  447568:	cmp	x0, #0x0
  44756c:	b.ne	447578 <builtin_kmod_validate+0x9c>  // b.any
  447570:	mov	w0, #0x0                   	// #0
  447574:	b	447594 <builtin_kmod_validate+0xb8>
  447578:	adrp	x0, 48d000 <arg_resolve_name_timing>
  44757c:	add	x0, x0, #0x1c0
  447580:	ldr	x0, [x0]
  447584:	bl	40a6d0 <kmod_validate_resources@plt>
  447588:	cmp	w0, #0x0
  44758c:	cset	w0, ne  // ne = any
  447590:	and	w0, w0, #0xff
  447594:	ldp	x29, x30, [sp], #32
  447598:	ret

000000000044759c <sd_id128_equal>:
  44759c:	stp	x29, x30, [sp, #-48]!
  4475a0:	mov	x29, sp
  4475a4:	stp	x0, x1, [sp, #32]
  4475a8:	stp	x2, x3, [sp, #16]
  4475ac:	add	x1, sp, #0x10
  4475b0:	add	x0, sp, #0x20
  4475b4:	mov	x2, #0x10                  	// #16
  4475b8:	bl	40b410 <memcmp@plt>
  4475bc:	cmp	w0, #0x0
  4475c0:	cset	w0, eq  // eq = none
  4475c4:	and	w0, w0, #0xff
  4475c8:	ldp	x29, x30, [sp], #48
  4475cc:	ret

00000000004475d0 <freep>:
  4475d0:	stp	x29, x30, [sp, #-32]!
  4475d4:	mov	x29, sp
  4475d8:	str	x0, [sp, #24]
  4475dc:	ldr	x0, [sp, #24]
  4475e0:	ldr	x0, [x0]
  4475e4:	bl	40ba20 <free@plt>
  4475e8:	nop
  4475ec:	ldp	x29, x30, [sp], #32
  4475f0:	ret

00000000004475f4 <blkid_free_probep>:
  4475f4:	stp	x29, x30, [sp, #-32]!
  4475f8:	mov	x29, sp
  4475fc:	str	x0, [sp, #24]
  447600:	ldr	x0, [sp, #24]
  447604:	ldr	x0, [x0]
  447608:	cmp	x0, #0x0
  44760c:	b.eq	44761c <blkid_free_probep+0x28>  // b.none
  447610:	ldr	x0, [sp, #24]
  447614:	ldr	x0, [x0]
  447618:	bl	40a2d0 <blkid_free_probe@plt>
  44761c:	nop
  447620:	ldp	x29, x30, [sp], #32
  447624:	ret

0000000000447628 <errno_or_else>:
  447628:	stp	x29, x30, [sp, #-32]!
  44762c:	mov	x29, sp
  447630:	str	w0, [sp, #28]
  447634:	bl	40b040 <__errno_location@plt>
  447638:	ldr	w0, [x0]
  44763c:	cmp	w0, #0x0
  447640:	b.le	447654 <errno_or_else+0x2c>
  447644:	bl	40b040 <__errno_location@plt>
  447648:	ldr	w0, [x0]
  44764c:	neg	w0, w0
  447650:	b	447664 <errno_or_else+0x3c>
  447654:	ldr	w0, [sp, #28]
  447658:	cmp	w0, #0x0
  44765c:	cneg	w0, w0, lt  // lt = tstop
  447660:	neg	w0, w0
  447664:	ldp	x29, x30, [sp], #32
  447668:	ret

000000000044766c <closep>:
  44766c:	stp	x29, x30, [sp, #-32]!
  447670:	mov	x29, sp
  447674:	str	x0, [sp, #24]
  447678:	ldr	x0, [sp, #24]
  44767c:	ldr	w0, [x0]
  447680:	bl	40aad0 <safe_close@plt>
  447684:	nop
  447688:	ldp	x29, x30, [sp], #32
  44768c:	ret

0000000000447690 <safe_atoi64>:
  447690:	stp	x29, x30, [sp, #-32]!
  447694:	mov	x29, sp
  447698:	str	x0, [sp, #24]
  44769c:	str	x1, [sp, #16]
  4476a0:	ldr	x1, [sp, #16]
  4476a4:	ldr	x0, [sp, #24]
  4476a8:	bl	40b210 <safe_atolli@plt>
  4476ac:	ldp	x29, x30, [sp], #32
  4476b0:	ret

00000000004476b4 <startswith>:
  4476b4:	stp	x29, x30, [sp, #-48]!
  4476b8:	mov	x29, sp
  4476bc:	str	x0, [sp, #24]
  4476c0:	str	x1, [sp, #16]
  4476c4:	ldr	x0, [sp, #16]
  4476c8:	bl	40bd10 <strlen@plt>
  4476cc:	str	x0, [sp, #40]
  4476d0:	ldr	x2, [sp, #40]
  4476d4:	ldr	x1, [sp, #16]
  4476d8:	ldr	x0, [sp, #24]
  4476dc:	bl	40ae00 <strncmp@plt>
  4476e0:	cmp	w0, #0x0
  4476e4:	b.ne	4476f8 <startswith+0x44>  // b.any
  4476e8:	ldr	x1, [sp, #24]
  4476ec:	ldr	x0, [sp, #40]
  4476f0:	add	x0, x1, x0
  4476f4:	b	4476fc <startswith+0x48>
  4476f8:	mov	x0, #0x0                   	// #0
  4476fc:	ldp	x29, x30, [sp], #48
  447700:	ret

0000000000447704 <print_property>:
  447704:	stp	x29, x30, [sp, #-320]!
  447708:	mov	x29, sp
  44770c:	str	x0, [sp, #40]
  447710:	strb	w1, [sp, #39]
  447714:	str	x2, [sp, #24]
  447718:	str	x3, [sp, #16]
  44771c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  447720:	ldr	x0, [x0, #4032]
  447724:	ldr	x1, [x0]
  447728:	str	x1, [sp, #312]
  44772c:	mov	x1, #0x0                   	// #0
  447730:	strb	wzr, [sp, #56]
  447734:	adrp	x0, 45c000 <__func__.8393+0x150>
  447738:	add	x1, x0, #0xc58
  44773c:	ldr	x0, [sp, #24]
  447740:	bl	40b710 <strcmp@plt>
  447744:	cmp	w0, #0x0
  447748:	b.ne	447768 <print_property+0x64>  // b.any
  44774c:	ldr	x3, [sp, #16]
  447750:	adrp	x0, 45c000 <__func__.8393+0x150>
  447754:	add	x2, x0, #0xc60
  447758:	ldrb	w1, [sp, #39]
  44775c:	ldr	x0, [sp, #40]
  447760:	bl	436504 <udev_builtin_add_property>
  447764:	b	447bc4 <print_property+0x4c0>
  447768:	adrp	x0, 45c000 <__func__.8393+0x150>
  44776c:	add	x1, x0, #0xc70
  447770:	ldr	x0, [sp, #24]
  447774:	bl	40b710 <strcmp@plt>
  447778:	cmp	w0, #0x0
  44777c:	b.ne	44779c <print_property+0x98>  // b.any
  447780:	ldr	x3, [sp, #16]
  447784:	adrp	x0, 45c000 <__func__.8393+0x150>
  447788:	add	x2, x0, #0xc78
  44778c:	ldrb	w1, [sp, #39]
  447790:	ldr	x0, [sp, #40]
  447794:	bl	436504 <udev_builtin_add_property>
  447798:	b	447bc4 <print_property+0x4c0>
  44779c:	adrp	x0, 45c000 <__func__.8393+0x150>
  4477a0:	add	x1, x0, #0xc88
  4477a4:	ldr	x0, [sp, #24]
  4477a8:	bl	40b710 <strcmp@plt>
  4477ac:	cmp	w0, #0x0
  4477b0:	b.ne	4477d0 <print_property+0xcc>  // b.any
  4477b4:	ldr	x3, [sp, #16]
  4477b8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4477bc:	add	x2, x0, #0xc90
  4477c0:	ldrb	w1, [sp, #39]
  4477c4:	ldr	x0, [sp, #40]
  4477c8:	bl	436504 <udev_builtin_add_property>
  4477cc:	b	447bc4 <print_property+0x4c0>
  4477d0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4477d4:	add	x1, x0, #0xca0
  4477d8:	ldr	x0, [sp, #24]
  4477dc:	bl	40b710 <strcmp@plt>
  4477e0:	cmp	w0, #0x0
  4477e4:	b.ne	44784c <print_property+0x148>  // b.any
  4477e8:	add	x0, sp, #0x38
  4477ec:	mov	x2, #0x100                 	// #256
  4477f0:	mov	x1, x0
  4477f4:	ldr	x0, [sp, #16]
  4477f8:	bl	40b580 <blkid_safe_string@plt>
  4477fc:	add	x0, sp, #0x38
  447800:	mov	x3, x0
  447804:	adrp	x0, 45c000 <__func__.8393+0x150>
  447808:	add	x2, x0, #0xca8
  44780c:	ldrb	w1, [sp, #39]
  447810:	ldr	x0, [sp, #40]
  447814:	bl	436504 <udev_builtin_add_property>
  447818:	add	x0, sp, #0x38
  44781c:	mov	x2, #0x100                 	// #256
  447820:	mov	x1, x0
  447824:	ldr	x0, [sp, #16]
  447828:	bl	40ab10 <blkid_encode_string@plt>
  44782c:	add	x0, sp, #0x38
  447830:	mov	x3, x0
  447834:	adrp	x0, 45c000 <__func__.8393+0x150>
  447838:	add	x2, x0, #0xcb8
  44783c:	ldrb	w1, [sp, #39]
  447840:	ldr	x0, [sp, #40]
  447844:	bl	436504 <udev_builtin_add_property>
  447848:	b	447bc4 <print_property+0x4c0>
  44784c:	adrp	x0, 45c000 <__func__.8393+0x150>
  447850:	add	x1, x0, #0xcc8
  447854:	ldr	x0, [sp, #24]
  447858:	bl	40b710 <strcmp@plt>
  44785c:	cmp	w0, #0x0
  447860:	b.ne	4478c8 <print_property+0x1c4>  // b.any
  447864:	add	x0, sp, #0x38
  447868:	mov	x2, #0x100                 	// #256
  44786c:	mov	x1, x0
  447870:	ldr	x0, [sp, #16]
  447874:	bl	40b580 <blkid_safe_string@plt>
  447878:	add	x0, sp, #0x38
  44787c:	mov	x3, x0
  447880:	adrp	x0, 45c000 <__func__.8393+0x150>
  447884:	add	x2, x0, #0xcd8
  447888:	ldrb	w1, [sp, #39]
  44788c:	ldr	x0, [sp, #40]
  447890:	bl	436504 <udev_builtin_add_property>
  447894:	add	x0, sp, #0x38
  447898:	mov	x2, #0x100                 	// #256
  44789c:	mov	x1, x0
  4478a0:	ldr	x0, [sp, #16]
  4478a4:	bl	40ab10 <blkid_encode_string@plt>
  4478a8:	add	x0, sp, #0x38
  4478ac:	mov	x3, x0
  4478b0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4478b4:	add	x2, x0, #0xce8
  4478b8:	ldrb	w1, [sp, #39]
  4478bc:	ldr	x0, [sp, #40]
  4478c0:	bl	436504 <udev_builtin_add_property>
  4478c4:	b	447bc4 <print_property+0x4c0>
  4478c8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4478cc:	add	x1, x0, #0xd00
  4478d0:	ldr	x0, [sp, #24]
  4478d4:	bl	40b710 <strcmp@plt>
  4478d8:	cmp	w0, #0x0
  4478dc:	b.ne	447944 <print_property+0x240>  // b.any
  4478e0:	add	x0, sp, #0x38
  4478e4:	mov	x2, #0x100                 	// #256
  4478e8:	mov	x1, x0
  4478ec:	ldr	x0, [sp, #16]
  4478f0:	bl	40b580 <blkid_safe_string@plt>
  4478f4:	add	x0, sp, #0x38
  4478f8:	mov	x3, x0
  4478fc:	adrp	x0, 45c000 <__func__.8393+0x150>
  447900:	add	x2, x0, #0xd08
  447904:	ldrb	w1, [sp, #39]
  447908:	ldr	x0, [sp, #40]
  44790c:	bl	436504 <udev_builtin_add_property>
  447910:	add	x0, sp, #0x38
  447914:	mov	x2, #0x100                 	// #256
  447918:	mov	x1, x0
  44791c:	ldr	x0, [sp, #16]
  447920:	bl	40ab10 <blkid_encode_string@plt>
  447924:	add	x0, sp, #0x38
  447928:	mov	x3, x0
  44792c:	adrp	x0, 45c000 <__func__.8393+0x150>
  447930:	add	x2, x0, #0xd18
  447934:	ldrb	w1, [sp, #39]
  447938:	ldr	x0, [sp, #40]
  44793c:	bl	436504 <udev_builtin_add_property>
  447940:	b	447bc4 <print_property+0x4c0>
  447944:	adrp	x0, 45c000 <__func__.8393+0x150>
  447948:	add	x1, x0, #0xd28
  44794c:	ldr	x0, [sp, #24]
  447950:	bl	40b710 <strcmp@plt>
  447954:	cmp	w0, #0x0
  447958:	b.ne	447978 <print_property+0x274>  // b.any
  44795c:	ldr	x3, [sp, #16]
  447960:	adrp	x0, 45c000 <__func__.8393+0x150>
  447964:	add	x2, x0, #0xd30
  447968:	ldrb	w1, [sp, #39]
  44796c:	ldr	x0, [sp, #40]
  447970:	bl	436504 <udev_builtin_add_property>
  447974:	b	447bc4 <print_property+0x4c0>
  447978:	adrp	x0, 45c000 <__func__.8393+0x150>
  44797c:	add	x1, x0, #0xd48
  447980:	ldr	x0, [sp, #24]
  447984:	bl	40b710 <strcmp@plt>
  447988:	cmp	w0, #0x0
  44798c:	b.ne	4479ac <print_property+0x2a8>  // b.any
  447990:	ldr	x3, [sp, #16]
  447994:	adrp	x0, 45c000 <__func__.8393+0x150>
  447998:	add	x2, x0, #0xd50
  44799c:	ldrb	w1, [sp, #39]
  4479a0:	ldr	x0, [sp, #40]
  4479a4:	bl	436504 <udev_builtin_add_property>
  4479a8:	b	447bc4 <print_property+0x4c0>
  4479ac:	adrp	x0, 45c000 <__func__.8393+0x150>
  4479b0:	add	x1, x0, #0xd68
  4479b4:	ldr	x0, [sp, #24]
  4479b8:	bl	40b710 <strcmp@plt>
  4479bc:	cmp	w0, #0x0
  4479c0:	b.ne	4479f8 <print_property+0x2f4>  // b.any
  4479c4:	add	x0, sp, #0x38
  4479c8:	mov	x2, #0x100                 	// #256
  4479cc:	mov	x1, x0
  4479d0:	ldr	x0, [sp, #16]
  4479d4:	bl	40ab10 <blkid_encode_string@plt>
  4479d8:	add	x0, sp, #0x38
  4479dc:	mov	x3, x0
  4479e0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4479e4:	add	x2, x0, #0xd78
  4479e8:	ldrb	w1, [sp, #39]
  4479ec:	ldr	x0, [sp, #40]
  4479f0:	bl	436504 <udev_builtin_add_property>
  4479f4:	b	447bc4 <print_property+0x4c0>
  4479f8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4479fc:	add	x1, x0, #0xd90
  447a00:	ldr	x0, [sp, #24]
  447a04:	bl	40b710 <strcmp@plt>
  447a08:	cmp	w0, #0x0
  447a0c:	b.ne	447a44 <print_property+0x340>  // b.any
  447a10:	add	x0, sp, #0x38
  447a14:	mov	x2, #0x100                 	// #256
  447a18:	mov	x1, x0
  447a1c:	ldr	x0, [sp, #16]
  447a20:	bl	40ab10 <blkid_encode_string@plt>
  447a24:	add	x0, sp, #0x38
  447a28:	mov	x3, x0
  447a2c:	adrp	x0, 45c000 <__func__.8393+0x150>
  447a30:	add	x2, x0, #0xda0
  447a34:	ldrb	w1, [sp, #39]
  447a38:	ldr	x0, [sp, #40]
  447a3c:	bl	436504 <udev_builtin_add_property>
  447a40:	b	447bc4 <print_property+0x4c0>
  447a44:	adrp	x0, 45c000 <__func__.8393+0x150>
  447a48:	add	x1, x0, #0xdb8
  447a4c:	ldr	x0, [sp, #24]
  447a50:	bl	4476b4 <startswith>
  447a54:	cmp	x0, #0x0
  447a58:	b.eq	447a98 <print_property+0x394>  // b.none
  447a5c:	add	x5, sp, #0x38
  447a60:	mov	x4, #0x0                   	// #0
  447a64:	ldr	x3, [sp, #24]
  447a68:	adrp	x0, 45c000 <__func__.8393+0x150>
  447a6c:	add	x2, x0, #0xdc8
  447a70:	mov	x1, #0x100                 	// #256
  447a74:	mov	x0, x5
  447a78:	bl	40a790 <strscpyl@plt>
  447a7c:	add	x0, sp, #0x38
  447a80:	ldr	x3, [sp, #16]
  447a84:	mov	x2, x0
  447a88:	ldrb	w1, [sp, #39]
  447a8c:	ldr	x0, [sp, #40]
  447a90:	bl	436504 <udev_builtin_add_property>
  447a94:	b	447bc4 <print_property+0x4c0>
  447a98:	adrp	x0, 45c000 <__func__.8393+0x150>
  447a9c:	add	x1, x0, #0xdd0
  447aa0:	ldr	x0, [sp, #24]
  447aa4:	bl	40b710 <strcmp@plt>
  447aa8:	cmp	w0, #0x0
  447aac:	b.ne	447ae4 <print_property+0x3e0>  // b.any
  447ab0:	add	x0, sp, #0x38
  447ab4:	mov	x2, #0x100                 	// #256
  447ab8:	mov	x1, x0
  447abc:	ldr	x0, [sp, #16]
  447ac0:	bl	40ab10 <blkid_encode_string@plt>
  447ac4:	add	x0, sp, #0x38
  447ac8:	mov	x3, x0
  447acc:	adrp	x0, 45c000 <__func__.8393+0x150>
  447ad0:	add	x2, x0, #0xde0
  447ad4:	ldrb	w1, [sp, #39]
  447ad8:	ldr	x0, [sp, #40]
  447adc:	bl	436504 <udev_builtin_add_property>
  447ae0:	b	447bc4 <print_property+0x4c0>
  447ae4:	adrp	x0, 45c000 <__func__.8393+0x150>
  447ae8:	add	x1, x0, #0xdf0
  447aec:	ldr	x0, [sp, #24]
  447af0:	bl	40b710 <strcmp@plt>
  447af4:	cmp	w0, #0x0
  447af8:	b.ne	447b30 <print_property+0x42c>  // b.any
  447afc:	add	x0, sp, #0x38
  447b00:	mov	x2, #0x100                 	// #256
  447b04:	mov	x1, x0
  447b08:	ldr	x0, [sp, #16]
  447b0c:	bl	40ab10 <blkid_encode_string@plt>
  447b10:	add	x0, sp, #0x38
  447b14:	mov	x3, x0
  447b18:	adrp	x0, 45c000 <__func__.8393+0x150>
  447b1c:	add	x2, x0, #0xe00
  447b20:	ldrb	w1, [sp, #39]
  447b24:	ldr	x0, [sp, #40]
  447b28:	bl	436504 <udev_builtin_add_property>
  447b2c:	b	447bc4 <print_property+0x4c0>
  447b30:	adrp	x0, 45c000 <__func__.8393+0x150>
  447b34:	add	x1, x0, #0xe18
  447b38:	ldr	x0, [sp, #24]
  447b3c:	bl	40b710 <strcmp@plt>
  447b40:	cmp	w0, #0x0
  447b44:	b.ne	447b7c <print_property+0x478>  // b.any
  447b48:	add	x0, sp, #0x38
  447b4c:	mov	x2, #0x100                 	// #256
  447b50:	mov	x1, x0
  447b54:	ldr	x0, [sp, #16]
  447b58:	bl	40ab10 <blkid_encode_string@plt>
  447b5c:	add	x0, sp, #0x38
  447b60:	mov	x3, x0
  447b64:	adrp	x0, 45c000 <__func__.8393+0x150>
  447b68:	add	x2, x0, #0xe28
  447b6c:	ldrb	w1, [sp, #39]
  447b70:	ldr	x0, [sp, #40]
  447b74:	bl	436504 <udev_builtin_add_property>
  447b78:	b	447bc4 <print_property+0x4c0>
  447b7c:	adrp	x0, 45c000 <__func__.8393+0x150>
  447b80:	add	x1, x0, #0xe40
  447b84:	ldr	x0, [sp, #24]
  447b88:	bl	40b710 <strcmp@plt>
  447b8c:	cmp	w0, #0x0
  447b90:	b.ne	447bc4 <print_property+0x4c0>  // b.any
  447b94:	add	x0, sp, #0x38
  447b98:	mov	x2, #0x100                 	// #256
  447b9c:	mov	x1, x0
  447ba0:	ldr	x0, [sp, #16]
  447ba4:	bl	40ab10 <blkid_encode_string@plt>
  447ba8:	add	x0, sp, #0x38
  447bac:	mov	x3, x0
  447bb0:	adrp	x0, 45c000 <__func__.8393+0x150>
  447bb4:	add	x2, x0, #0xe50
  447bb8:	ldrb	w1, [sp, #39]
  447bbc:	ldr	x0, [sp, #40]
  447bc0:	bl	436504 <udev_builtin_add_property>
  447bc4:	nop
  447bc8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  447bcc:	ldr	x0, [x0, #4032]
  447bd0:	ldr	x1, [sp, #312]
  447bd4:	ldr	x0, [x0]
  447bd8:	eor	x0, x1, x0
  447bdc:	cmp	x0, #0x0
  447be0:	b.eq	447be8 <print_property+0x4e4>  // b.none
  447be4:	bl	40b280 <__stack_chk_fail@plt>
  447be8:	ldp	x29, x30, [sp], #320
  447bec:	ret

0000000000447bf0 <find_gpt_root>:
  447bf0:	stp	x29, x30, [sp, #-192]!
  447bf4:	mov	x29, sp
  447bf8:	str	x19, [sp, #16]
  447bfc:	str	x0, [sp, #56]
  447c00:	str	x1, [sp, #48]
  447c04:	strb	w2, [sp, #47]
  447c08:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  447c0c:	ldr	x0, [x0, #4032]
  447c10:	ldr	x1, [x0]
  447c14:	str	x1, [sp, #184]
  447c18:	mov	x1, #0x0                   	// #0
  447c1c:	str	xzr, [sp, #88]
  447c20:	strb	wzr, [sp, #75]
  447c24:	ldr	x0, [sp, #48]
  447c28:	cmp	x0, #0x0
  447c2c:	cset	w0, eq  // eq = none
  447c30:	and	w0, w0, #0xff
  447c34:	and	x0, x0, #0xff
  447c38:	cmp	x0, #0x0
  447c3c:	b.eq	447c68 <find_gpt_root+0x78>  // b.none
  447c40:	adrp	x0, 45c000 <__func__.8393+0x150>
  447c44:	add	x1, x0, #0xe6b
  447c48:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  447c4c:	add	x4, x0, #0xa8
  447c50:	mov	w3, #0x6a                  	// #106
  447c54:	mov	x2, x1
  447c58:	adrp	x0, 45c000 <__func__.8393+0x150>
  447c5c:	add	x1, x0, #0xe90
  447c60:	mov	w0, #0x1                   	// #1
  447c64:	bl	40abb0 <log_assert_failed_realm@plt>
  447c68:	bl	40b040 <__errno_location@plt>
  447c6c:	str	wzr, [x0]
  447c70:	ldr	x0, [sp, #48]
  447c74:	bl	40b550 <blkid_probe_get_partitions@plt>
  447c78:	str	x0, [sp, #96]
  447c7c:	ldr	x0, [sp, #96]
  447c80:	cmp	x0, #0x0
  447c84:	b.ne	447c98 <find_gpt_root+0xa8>  // b.any
  447c88:	mov	w0, #0xc                   	// #12
  447c8c:	bl	447628 <errno_or_else>
  447c90:	mov	w19, w0
  447c94:	b	447e64 <find_gpt_root+0x274>
  447c98:	ldr	x0, [sp, #96]
  447c9c:	bl	40b1f0 <blkid_partlist_numof_partitions@plt>
  447ca0:	str	w0, [sp, #80]
  447ca4:	str	wzr, [sp, #76]
  447ca8:	b	447e1c <find_gpt_root+0x22c>
  447cac:	ldr	w1, [sp, #76]
  447cb0:	ldr	x0, [sp, #96]
  447cb4:	bl	40b430 <blkid_partlist_get_partition@plt>
  447cb8:	str	x0, [sp, #104]
  447cbc:	ldr	x0, [sp, #104]
  447cc0:	cmp	x0, #0x0
  447cc4:	b.eq	447dec <find_gpt_root+0x1fc>  // b.none
  447cc8:	ldr	x0, [sp, #104]
  447ccc:	bl	40b290 <blkid_partition_get_uuid@plt>
  447cd0:	str	x0, [sp, #112]
  447cd4:	ldr	x0, [sp, #112]
  447cd8:	cmp	x0, #0x0
  447cdc:	b.eq	447df4 <find_gpt_root+0x204>  // b.none
  447ce0:	ldr	x0, [sp, #104]
  447ce4:	bl	40b660 <blkid_partition_get_type_string@plt>
  447ce8:	str	x0, [sp, #120]
  447cec:	ldr	x0, [sp, #120]
  447cf0:	cmp	x0, #0x0
  447cf4:	b.eq	447dfc <find_gpt_root+0x20c>  // b.none
  447cf8:	add	x0, sp, #0x88
  447cfc:	mov	x1, x0
  447d00:	ldr	x0, [sp, #120]
  447d04:	bl	40a650 <sd_id128_from_string@plt>
  447d08:	cmp	w0, #0x0
  447d0c:	b.lt	447e04 <find_gpt_root+0x214>  // b.tstop
  447d10:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  447d14:	add	x0, x0, #0xb8
  447d18:	ldp	x2, x3, [x0]
  447d1c:	ldp	x0, x1, [sp, #136]
  447d20:	bl	44759c <sd_id128_equal>
  447d24:	cmp	w0, #0x0
  447d28:	b.eq	447d8c <find_gpt_root+0x19c>  // b.none
  447d2c:	add	x0, sp, #0x98
  447d30:	mov	x1, x0
  447d34:	ldr	x0, [sp, #112]
  447d38:	bl	40a650 <sd_id128_from_string@plt>
  447d3c:	cmp	w0, #0x0
  447d40:	b.ge	447d4c <find_gpt_root+0x15c>  // b.tcont
  447d44:	nop
  447d48:	b	447dec <find_gpt_root+0x1fc>
  447d4c:	add	x0, sp, #0xa8
  447d50:	bl	40be20 <efi_loader_get_device_part_uuid@plt>
  447d54:	str	w0, [sp, #84]
  447d58:	ldr	w0, [sp, #84]
  447d5c:	cmp	w0, #0x0
  447d60:	b.ge	447d6c <find_gpt_root+0x17c>  // b.tcont
  447d64:	ldr	w19, [sp, #84]
  447d68:	b	447e64 <find_gpt_root+0x274>
  447d6c:	ldp	x2, x3, [sp, #168]
  447d70:	ldp	x0, x1, [sp, #152]
  447d74:	bl	44759c <sd_id128_equal>
  447d78:	cmp	w0, #0x0
  447d7c:	b.eq	447e10 <find_gpt_root+0x220>  // b.none
  447d80:	mov	w0, #0x1                   	// #1
  447d84:	strb	w0, [sp, #75]
  447d88:	b	447e10 <find_gpt_root+0x220>
  447d8c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  447d90:	add	x0, x0, #0xc8
  447d94:	ldp	x2, x3, [x0]
  447d98:	ldp	x0, x1, [sp, #136]
  447d9c:	bl	44759c <sd_id128_equal>
  447da0:	cmp	w0, #0x0
  447da4:	b.eq	447e10 <find_gpt_root+0x220>  // b.none
  447da8:	ldr	x0, [sp, #104]
  447dac:	bl	40b270 <blkid_partition_get_flags@plt>
  447db0:	str	x0, [sp, #128]
  447db4:	ldr	x0, [sp, #128]
  447db8:	cmp	x0, #0x0
  447dbc:	b.lt	447e0c <find_gpt_root+0x21c>  // b.tstop
  447dc0:	ldr	x0, [sp, #88]
  447dc4:	cmp	x0, #0x0
  447dc8:	b.ne	447e10 <find_gpt_root+0x220>  // b.any
  447dcc:	ldr	x0, [sp, #112]
  447dd0:	bl	40b7c0 <strdup@plt>
  447dd4:	str	x0, [sp, #88]
  447dd8:	ldr	x0, [sp, #88]
  447ddc:	cmp	x0, #0x0
  447de0:	b.ne	447e10 <find_gpt_root+0x220>  // b.any
  447de4:	mov	w19, #0xfffffff4            	// #-12
  447de8:	b	447e64 <find_gpt_root+0x274>
  447dec:	nop
  447df0:	b	447e10 <find_gpt_root+0x220>
  447df4:	nop
  447df8:	b	447e10 <find_gpt_root+0x220>
  447dfc:	nop
  447e00:	b	447e10 <find_gpt_root+0x220>
  447e04:	nop
  447e08:	b	447e10 <find_gpt_root+0x220>
  447e0c:	nop
  447e10:	ldr	w0, [sp, #76]
  447e14:	add	w0, w0, #0x1
  447e18:	str	w0, [sp, #76]
  447e1c:	ldr	w1, [sp, #76]
  447e20:	ldr	w0, [sp, #80]
  447e24:	cmp	w1, w0
  447e28:	b.lt	447cac <find_gpt_root+0xbc>  // b.tstop
  447e2c:	ldrb	w0, [sp, #75]
  447e30:	cmp	w0, #0x0
  447e34:	b.eq	447e60 <find_gpt_root+0x270>  // b.none
  447e38:	ldr	x0, [sp, #88]
  447e3c:	cmp	x0, #0x0
  447e40:	b.eq	447e60 <find_gpt_root+0x270>  // b.none
  447e44:	ldr	x0, [sp, #88]
  447e48:	mov	x3, x0
  447e4c:	adrp	x0, 45c000 <__func__.8393+0x150>
  447e50:	add	x2, x0, #0xe98
  447e54:	ldrb	w1, [sp, #47]
  447e58:	ldr	x0, [sp, #56]
  447e5c:	bl	436504 <udev_builtin_add_property>
  447e60:	mov	w19, #0x0                   	// #0
  447e64:	add	x0, sp, #0x58
  447e68:	bl	4475d0 <freep>
  447e6c:	mov	w1, w19
  447e70:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  447e74:	ldr	x0, [x0, #4032]
  447e78:	ldr	x2, [sp, #184]
  447e7c:	ldr	x0, [x0]
  447e80:	eor	x0, x2, x0
  447e84:	cmp	x0, #0x0
  447e88:	b.eq	447e90 <find_gpt_root+0x2a0>  // b.none
  447e8c:	bl	40b280 <__stack_chk_fail@plt>
  447e90:	mov	w0, w1
  447e94:	ldr	x19, [sp, #16]
  447e98:	ldp	x29, x30, [sp], #192
  447e9c:	ret

0000000000447ea0 <probe_superblocks>:
  447ea0:	stp	x29, x30, [sp, #-176]!
  447ea4:	mov	x29, sp
  447ea8:	str	x0, [sp, #24]
  447eac:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  447eb0:	ldr	x0, [x0, #4032]
  447eb4:	ldr	x1, [x0]
  447eb8:	str	x1, [sp, #168]
  447ebc:	mov	x1, #0x0                   	// #0
  447ec0:	ldr	x0, [sp, #24]
  447ec4:	bl	40b740 <blkid_probe_get_fd@plt>
  447ec8:	mov	w2, w0
  447ecc:	add	x0, sp, #0x28
  447ed0:	mov	x1, x0
  447ed4:	mov	w0, w2
  447ed8:	bl	4505b0 <fstat64>
  447edc:	cmp	w0, #0x0
  447ee0:	b.eq	447ef4 <probe_superblocks+0x54>  // b.none
  447ee4:	bl	40b040 <__errno_location@plt>
  447ee8:	ldr	w0, [x0]
  447eec:	neg	w0, w0
  447ef0:	b	447fa4 <probe_superblocks+0x104>
  447ef4:	mov	w1, #0x1                   	// #1
  447ef8:	ldr	x0, [sp, #24]
  447efc:	bl	40bd70 <blkid_probe_enable_partitions@plt>
  447f00:	ldr	w0, [sp, #56]
  447f04:	and	w0, w0, #0xf000
  447f08:	cmp	w0, #0x2, lsl #12
  447f0c:	b.eq	447f84 <probe_superblocks+0xe4>  // b.none
  447f10:	ldr	x0, [sp, #24]
  447f14:	bl	40b530 <blkid_probe_get_size@plt>
  447f18:	cmp	x0, #0x168, lsl #12
  447f1c:	b.gt	447f84 <probe_superblocks+0xe4>
  447f20:	ldr	x0, [sp, #24]
  447f24:	bl	40ade0 <blkid_probe_is_wholedisk@plt>
  447f28:	cmp	w0, #0x0
  447f2c:	b.eq	447f84 <probe_superblocks+0xe4>  // b.none
  447f30:	mov	w1, #0x0                   	// #0
  447f34:	ldr	x0, [sp, #24]
  447f38:	bl	40bae0 <blkid_probe_enable_superblocks@plt>
  447f3c:	ldr	x0, [sp, #24]
  447f40:	bl	40b320 <blkid_do_fullprobe@plt>
  447f44:	str	w0, [sp, #36]
  447f48:	ldr	w0, [sp, #36]
  447f4c:	cmp	w0, #0x0
  447f50:	b.ge	447f5c <probe_superblocks+0xbc>  // b.tcont
  447f54:	ldr	w0, [sp, #36]
  447f58:	b	447fa4 <probe_superblocks+0x104>
  447f5c:	mov	x3, #0x0                   	// #0
  447f60:	mov	x2, #0x0                   	// #0
  447f64:	adrp	x0, 45c000 <__func__.8393+0x150>
  447f68:	add	x1, x0, #0xd28
  447f6c:	ldr	x0, [sp, #24]
  447f70:	bl	40b170 <blkid_probe_lookup_value@plt>
  447f74:	cmp	w0, #0x0
  447f78:	b.ne	447f84 <probe_superblocks+0xe4>  // b.any
  447f7c:	mov	w0, #0x0                   	// #0
  447f80:	b	447fa4 <probe_superblocks+0x104>
  447f84:	mov	w1, #0x4                   	// #4
  447f88:	ldr	x0, [sp, #24]
  447f8c:	bl	40a3d0 <blkid_probe_set_partitions_flags@plt>
  447f90:	mov	w1, #0x1                   	// #1
  447f94:	ldr	x0, [sp, #24]
  447f98:	bl	40bae0 <blkid_probe_enable_superblocks@plt>
  447f9c:	ldr	x0, [sp, #24]
  447fa0:	bl	40ae70 <blkid_do_safeprobe@plt>
  447fa4:	mov	w1, w0
  447fa8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  447fac:	ldr	x0, [x0, #4032]
  447fb0:	ldr	x2, [sp, #168]
  447fb4:	ldr	x0, [x0]
  447fb8:	eor	x0, x2, x0
  447fbc:	cmp	x0, #0x0
  447fc0:	b.eq	447fc8 <probe_superblocks+0x128>  // b.none
  447fc4:	bl	40b280 <__stack_chk_fail@plt>
  447fc8:	mov	w0, w1
  447fcc:	ldp	x29, x30, [sp], #176
  447fd0:	ret

0000000000447fd4 <builtin_blkid>:
  447fd4:	sub	sp, sp, #0x150
  447fd8:	stp	x29, x30, [sp, #48]
  447fdc:	add	x29, sp, #0x30
  447fe0:	str	x19, [sp, #64]
  447fe4:	str	x0, [sp, #104]
  447fe8:	str	w1, [sp, #100]
  447fec:	str	x2, [sp, #88]
  447ff0:	strb	w3, [sp, #99]
  447ff4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  447ff8:	ldr	x0, [x0, #4032]
  447ffc:	ldr	x1, [x0]
  448000:	str	x1, [sp, #328]
  448004:	mov	x1, #0x0                   	// #0
  448008:	str	xzr, [sp, #216]
  44800c:	str	xzr, [sp, #232]
  448010:	strb	wzr, [sp, #114]
  448014:	strb	wzr, [sp, #115]
  448018:	mov	w0, #0xffffffff            	// #-1
  44801c:	str	w0, [sp, #116]
  448020:	str	xzr, [sp, #240]
  448024:	mov	x4, #0x0                   	// #0
  448028:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  44802c:	add	x3, x0, #0x6a8
  448030:	adrp	x0, 45c000 <__func__.8393+0x150>
  448034:	add	x2, x0, #0xeb8
  448038:	ldr	x1, [sp, #88]
  44803c:	ldr	w0, [sp, #100]
  448040:	bl	40abf0 <getopt_long@plt>
  448044:	str	w0, [sp, #124]
  448048:	ldr	w0, [sp, #124]
  44804c:	cmn	w0, #0x1
  448050:	b.eq	448254 <builtin_blkid+0x280>  // b.none
  448054:	ldr	w0, [sp, #124]
  448058:	cmp	w0, #0x52
  44805c:	b.eq	448240 <builtin_blkid+0x26c>  // b.none
  448060:	ldr	w0, [sp, #124]
  448064:	cmp	w0, #0x6f
  448068:	b.ne	448024 <builtin_blkid+0x50>  // b.any
  44806c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  448070:	ldr	x0, [x0, #4072]
  448074:	ldr	x0, [x0]
  448078:	add	x1, sp, #0xf0
  44807c:	bl	447690 <safe_atoi64>
  448080:	str	w0, [sp, #128]
  448084:	ldr	w0, [sp, #128]
  448088:	cmp	w0, #0x0
  44808c:	b.ge	448164 <builtin_blkid+0x190>  // b.tcont
  448090:	str	xzr, [sp, #248]
  448094:	ldr	x0, [sp, #104]
  448098:	str	x0, [sp, #264]
  44809c:	mov	w0, #0x3                   	// #3
  4480a0:	str	w0, [sp, #140]
  4480a4:	ldr	w0, [sp, #128]
  4480a8:	str	w0, [sp, #144]
  4480ac:	ldr	x0, [sp, #264]
  4480b0:	cmp	x0, #0x0
  4480b4:	b.eq	4480f0 <builtin_blkid+0x11c>  // b.none
  4480b8:	mov	w0, #0x1                   	// #1
  4480bc:	bl	40be30 <log_get_max_level_realm@plt>
  4480c0:	mov	w1, w0
  4480c4:	ldr	w0, [sp, #140]
  4480c8:	cmp	w0, w1
  4480cc:	cset	w0, le
  4480d0:	and	w0, w0, #0xff
  4480d4:	and	x0, x0, #0xff
  4480d8:	cmp	x0, #0x0
  4480dc:	b.eq	4480f0 <builtin_blkid+0x11c>  // b.none
  4480e0:	add	x0, sp, #0xf8
  4480e4:	mov	x1, x0
  4480e8:	ldr	x0, [sp, #264]
  4480ec:	bl	40aba0 <sd_device_get_sysname@plt>
  4480f0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4480f4:	add	x2, x0, #0xe6b
  4480f8:	ldr	x0, [sp, #248]
  4480fc:	cmp	x0, #0x0
  448100:	b.eq	448110 <builtin_blkid+0x13c>  // b.none
  448104:	adrp	x0, 45c000 <__func__.8393+0x150>
  448108:	add	x0, x0, #0xec0
  44810c:	b	448114 <builtin_blkid+0x140>
  448110:	mov	x0, #0x0                   	// #0
  448114:	ldr	x3, [sp, #248]
  448118:	adrp	x1, 48c000 <_DYNAMIC+0xd8>
  44811c:	ldr	x1, [x1, #4072]
  448120:	ldr	x1, [x1]
  448124:	str	x1, [sp, #16]
  448128:	adrp	x1, 45c000 <__func__.8393+0x150>
  44812c:	add	x1, x1, #0xec8
  448130:	str	x1, [sp, #8]
  448134:	str	xzr, [sp]
  448138:	mov	x7, #0x0                   	// #0
  44813c:	mov	x6, x3
  448140:	mov	x5, x0
  448144:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448148:	add	x4, x0, #0xd8
  44814c:	mov	w3, #0xf0                  	// #240
  448150:	ldr	w1, [sp, #144]
  448154:	ldr	w0, [sp, #140]
  448158:	bl	40b020 <log_object_internal@plt>
  44815c:	mov	w19, w0
  448160:	b	448a6c <builtin_blkid+0xa98>
  448164:	ldr	x0, [sp, #240]
  448168:	cmp	x0, #0x0
  44816c:	b.ge	44824c <builtin_blkid+0x278>  // b.tcont
  448170:	str	xzr, [sp, #248]
  448174:	ldr	x0, [sp, #104]
  448178:	str	x0, [sp, #256]
  44817c:	mov	w0, #0x3                   	// #3
  448180:	str	w0, [sp, #132]
  448184:	mov	w0, #0x22                  	// #34
  448188:	movk	w0, #0x4000, lsl #16
  44818c:	str	w0, [sp, #136]
  448190:	ldr	x0, [sp, #256]
  448194:	cmp	x0, #0x0
  448198:	b.eq	4481d4 <builtin_blkid+0x200>  // b.none
  44819c:	mov	w0, #0x1                   	// #1
  4481a0:	bl	40be30 <log_get_max_level_realm@plt>
  4481a4:	mov	w1, w0
  4481a8:	ldr	w0, [sp, #132]
  4481ac:	cmp	w0, w1
  4481b0:	cset	w0, le
  4481b4:	and	w0, w0, #0xff
  4481b8:	and	x0, x0, #0xff
  4481bc:	cmp	x0, #0x0
  4481c0:	b.eq	4481d4 <builtin_blkid+0x200>  // b.none
  4481c4:	add	x0, sp, #0xf8
  4481c8:	mov	x1, x0
  4481cc:	ldr	x0, [sp, #256]
  4481d0:	bl	40aba0 <sd_device_get_sysname@plt>
  4481d4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4481d8:	add	x2, x0, #0xe6b
  4481dc:	ldr	x0, [sp, #248]
  4481e0:	cmp	x0, #0x0
  4481e4:	b.eq	4481f4 <builtin_blkid+0x220>  // b.none
  4481e8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4481ec:	add	x0, x0, #0xec0
  4481f0:	b	4481f8 <builtin_blkid+0x224>
  4481f4:	mov	x0, #0x0                   	// #0
  4481f8:	ldr	x3, [sp, #248]
  4481fc:	ldr	x1, [sp, #240]
  448200:	str	x1, [sp, #16]
  448204:	adrp	x1, 45c000 <__func__.8393+0x150>
  448208:	add	x1, x1, #0xef0
  44820c:	str	x1, [sp, #8]
  448210:	str	xzr, [sp]
  448214:	mov	x7, #0x0                   	// #0
  448218:	mov	x6, x3
  44821c:	mov	x5, x0
  448220:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448224:	add	x4, x0, #0xd8
  448228:	mov	w3, #0xf2                  	// #242
  44822c:	ldr	w1, [sp, #136]
  448230:	ldr	w0, [sp, #132]
  448234:	bl	40b020 <log_object_internal@plt>
  448238:	mov	w19, w0
  44823c:	b	448a6c <builtin_blkid+0xa98>
  448240:	mov	w0, #0x1                   	// #1
  448244:	strb	w0, [sp, #114]
  448248:	b	448250 <builtin_blkid+0x27c>
  44824c:	nop
  448250:	b	448024 <builtin_blkid+0x50>
  448254:	nop
  448258:	bl	40b040 <__errno_location@plt>
  44825c:	str	wzr, [x0]
  448260:	bl	40a360 <blkid_new_probe@plt>
  448264:	str	x0, [sp, #232]
  448268:	ldr	x0, [sp, #232]
  44826c:	cmp	x0, #0x0
  448270:	b.ne	448354 <builtin_blkid+0x380>  // b.any
  448274:	str	xzr, [sp, #248]
  448278:	ldr	x0, [sp, #104]
  44827c:	str	x0, [sp, #320]
  448280:	mov	w0, #0x7                   	// #7
  448284:	str	w0, [sp, #200]
  448288:	bl	40b040 <__errno_location@plt>
  44828c:	ldr	w0, [x0]
  448290:	cmp	w0, #0x0
  448294:	b.le	4482a4 <builtin_blkid+0x2d0>
  448298:	bl	40b040 <__errno_location@plt>
  44829c:	ldr	w0, [x0]
  4482a0:	b	4482a8 <builtin_blkid+0x2d4>
  4482a4:	mov	w0, #0xc                   	// #12
  4482a8:	str	w0, [sp, #204]
  4482ac:	ldr	x0, [sp, #320]
  4482b0:	cmp	x0, #0x0
  4482b4:	b.eq	4482f0 <builtin_blkid+0x31c>  // b.none
  4482b8:	mov	w0, #0x1                   	// #1
  4482bc:	bl	40be30 <log_get_max_level_realm@plt>
  4482c0:	mov	w1, w0
  4482c4:	ldr	w0, [sp, #200]
  4482c8:	cmp	w0, w1
  4482cc:	cset	w0, le
  4482d0:	and	w0, w0, #0xff
  4482d4:	and	x0, x0, #0xff
  4482d8:	cmp	x0, #0x0
  4482dc:	b.eq	4482f0 <builtin_blkid+0x31c>  // b.none
  4482e0:	add	x0, sp, #0xf8
  4482e4:	mov	x1, x0
  4482e8:	ldr	x0, [sp, #320]
  4482ec:	bl	40aba0 <sd_device_get_sysname@plt>
  4482f0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4482f4:	add	x2, x0, #0xe6b
  4482f8:	ldr	x0, [sp, #248]
  4482fc:	cmp	x0, #0x0
  448300:	b.eq	448310 <builtin_blkid+0x33c>  // b.none
  448304:	adrp	x0, 45c000 <__func__.8393+0x150>
  448308:	add	x0, x0, #0xec0
  44830c:	b	448314 <builtin_blkid+0x340>
  448310:	mov	x0, #0x0                   	// #0
  448314:	ldr	x3, [sp, #248]
  448318:	adrp	x1, 45c000 <__func__.8393+0x150>
  44831c:	add	x1, x1, #0xf08
  448320:	str	x1, [sp, #8]
  448324:	str	xzr, [sp]
  448328:	mov	x7, #0x0                   	// #0
  44832c:	mov	x6, x3
  448330:	mov	x5, x0
  448334:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448338:	add	x4, x0, #0xd8
  44833c:	mov	w3, #0xfd                  	// #253
  448340:	ldr	w1, [sp, #204]
  448344:	ldr	w0, [sp, #200]
  448348:	bl	40b020 <log_object_internal@plt>
  44834c:	mov	w19, w0
  448350:	b	448a6c <builtin_blkid+0xa98>
  448354:	ldr	x0, [sp, #232]
  448358:	mov	w1, #0x1ea                 	// #490
  44835c:	bl	40a6e0 <blkid_probe_set_superblocks_flags@plt>
  448360:	ldrb	w0, [sp, #114]
  448364:	cmp	w0, #0x0
  448368:	b.eq	44837c <builtin_blkid+0x3a8>  // b.none
  44836c:	ldr	x0, [sp, #232]
  448370:	mov	w2, #0x4                   	// #4
  448374:	mov	w1, #0x1                   	// #1
  448378:	bl	40afa0 <blkid_probe_filter_superblocks_usage@plt>
  44837c:	add	x0, sp, #0xd0
  448380:	mov	x1, x0
  448384:	ldr	x0, [sp, #104]
  448388:	bl	40a6f0 <sd_device_get_devname@plt>
  44838c:	str	w0, [sp, #128]
  448390:	ldr	w0, [sp, #128]
  448394:	cmp	w0, #0x0
  448398:	b.ge	448460 <builtin_blkid+0x48c>  // b.tcont
  44839c:	str	xzr, [sp, #248]
  4483a0:	ldr	x0, [sp, #104]
  4483a4:	str	x0, [sp, #312]
  4483a8:	mov	w0, #0x7                   	// #7
  4483ac:	str	w0, [sp, #192]
  4483b0:	ldr	w0, [sp, #128]
  4483b4:	str	w0, [sp, #196]
  4483b8:	ldr	x0, [sp, #312]
  4483bc:	cmp	x0, #0x0
  4483c0:	b.eq	4483fc <builtin_blkid+0x428>  // b.none
  4483c4:	mov	w0, #0x1                   	// #1
  4483c8:	bl	40be30 <log_get_max_level_realm@plt>
  4483cc:	mov	w1, w0
  4483d0:	ldr	w0, [sp, #192]
  4483d4:	cmp	w0, w1
  4483d8:	cset	w0, le
  4483dc:	and	w0, w0, #0xff
  4483e0:	and	x0, x0, #0xff
  4483e4:	cmp	x0, #0x0
  4483e8:	b.eq	4483fc <builtin_blkid+0x428>  // b.none
  4483ec:	add	x0, sp, #0xf8
  4483f0:	mov	x1, x0
  4483f4:	ldr	x0, [sp, #312]
  4483f8:	bl	40aba0 <sd_device_get_sysname@plt>
  4483fc:	adrp	x0, 45c000 <__func__.8393+0x150>
  448400:	add	x2, x0, #0xe6b
  448404:	ldr	x0, [sp, #248]
  448408:	cmp	x0, #0x0
  44840c:	b.eq	44841c <builtin_blkid+0x448>  // b.none
  448410:	adrp	x0, 45c000 <__func__.8393+0x150>
  448414:	add	x0, x0, #0xec0
  448418:	b	448420 <builtin_blkid+0x44c>
  44841c:	mov	x0, #0x0                   	// #0
  448420:	ldr	x3, [sp, #248]
  448424:	adrp	x1, 45c000 <__func__.8393+0x150>
  448428:	add	x1, x1, #0xf30
  44842c:	str	x1, [sp, #8]
  448430:	str	xzr, [sp]
  448434:	mov	x7, #0x0                   	// #0
  448438:	mov	x6, x3
  44843c:	mov	x5, x0
  448440:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448444:	add	x4, x0, #0xd8
  448448:	mov	w3, #0x109                 	// #265
  44844c:	ldr	w1, [sp, #196]
  448450:	ldr	w0, [sp, #192]
  448454:	bl	40b020 <log_object_internal@plt>
  448458:	mov	w19, w0
  44845c:	b	448a6c <builtin_blkid+0xa98>
  448460:	ldr	x0, [sp, #208]
  448464:	mov	w1, #0x800                 	// #2048
  448468:	movk	w1, #0x8, lsl #16
  44846c:	bl	40bcb0 <open64@plt>
  448470:	str	w0, [sp, #116]
  448474:	ldr	w0, [sp, #116]
  448478:	cmp	w0, #0x0
  44847c:	b.ge	448550 <builtin_blkid+0x57c>  // b.tcont
  448480:	str	xzr, [sp, #248]
  448484:	ldr	x0, [sp, #104]
  448488:	str	x0, [sp, #304]
  44848c:	mov	w0, #0x7                   	// #7
  448490:	str	w0, [sp, #184]
  448494:	bl	40b040 <__errno_location@plt>
  448498:	ldr	w0, [x0]
  44849c:	str	w0, [sp, #188]
  4484a0:	ldr	x0, [sp, #304]
  4484a4:	cmp	x0, #0x0
  4484a8:	b.eq	4484e4 <builtin_blkid+0x510>  // b.none
  4484ac:	mov	w0, #0x1                   	// #1
  4484b0:	bl	40be30 <log_get_max_level_realm@plt>
  4484b4:	mov	w1, w0
  4484b8:	ldr	w0, [sp, #184]
  4484bc:	cmp	w0, w1
  4484c0:	cset	w0, le
  4484c4:	and	w0, w0, #0xff
  4484c8:	and	x0, x0, #0xff
  4484cc:	cmp	x0, #0x0
  4484d0:	b.eq	4484e4 <builtin_blkid+0x510>  // b.none
  4484d4:	add	x0, sp, #0xf8
  4484d8:	mov	x1, x0
  4484dc:	ldr	x0, [sp, #304]
  4484e0:	bl	40aba0 <sd_device_get_sysname@plt>
  4484e4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4484e8:	add	x2, x0, #0xe6b
  4484ec:	ldr	x0, [sp, #248]
  4484f0:	cmp	x0, #0x0
  4484f4:	b.eq	448504 <builtin_blkid+0x530>  // b.none
  4484f8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4484fc:	add	x0, x0, #0xec0
  448500:	b	448508 <builtin_blkid+0x534>
  448504:	mov	x0, #0x0                   	// #0
  448508:	ldr	x3, [sp, #248]
  44850c:	ldr	x1, [sp, #208]
  448510:	str	x1, [sp, #16]
  448514:	adrp	x1, 45c000 <__func__.8393+0x150>
  448518:	add	x1, x1, #0xf50
  44851c:	str	x1, [sp, #8]
  448520:	str	xzr, [sp]
  448524:	mov	x7, #0x0                   	// #0
  448528:	mov	x6, x3
  44852c:	mov	x5, x0
  448530:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448534:	add	x4, x0, #0xd8
  448538:	mov	w3, #0x10d                 	// #269
  44853c:	ldr	w1, [sp, #188]
  448540:	ldr	w0, [sp, #184]
  448544:	bl	40b020 <log_object_internal@plt>
  448548:	mov	w19, w0
  44854c:	b	448a6c <builtin_blkid+0xa98>
  448550:	bl	40b040 <__errno_location@plt>
  448554:	str	wzr, [x0]
  448558:	ldr	x0, [sp, #232]
  44855c:	ldr	w1, [sp, #116]
  448560:	ldr	x2, [sp, #240]
  448564:	mov	x3, #0x0                   	// #0
  448568:	bl	40a570 <blkid_probe_set_device@plt>
  44856c:	str	w0, [sp, #128]
  448570:	ldr	w0, [sp, #128]
  448574:	cmp	w0, #0x0
  448578:	b.ge	44865c <builtin_blkid+0x688>  // b.tcont
  44857c:	str	xzr, [sp, #248]
  448580:	ldr	x0, [sp, #104]
  448584:	str	x0, [sp, #296]
  448588:	mov	w0, #0x7                   	// #7
  44858c:	str	w0, [sp, #176]
  448590:	bl	40b040 <__errno_location@plt>
  448594:	ldr	w0, [x0]
  448598:	cmp	w0, #0x0
  44859c:	b.le	4485ac <builtin_blkid+0x5d8>
  4485a0:	bl	40b040 <__errno_location@plt>
  4485a4:	ldr	w0, [x0]
  4485a8:	b	4485b0 <builtin_blkid+0x5dc>
  4485ac:	mov	w0, #0xc                   	// #12
  4485b0:	str	w0, [sp, #180]
  4485b4:	ldr	x0, [sp, #296]
  4485b8:	cmp	x0, #0x0
  4485bc:	b.eq	4485f8 <builtin_blkid+0x624>  // b.none
  4485c0:	mov	w0, #0x1                   	// #1
  4485c4:	bl	40be30 <log_get_max_level_realm@plt>
  4485c8:	mov	w1, w0
  4485cc:	ldr	w0, [sp, #176]
  4485d0:	cmp	w0, w1
  4485d4:	cset	w0, le
  4485d8:	and	w0, w0, #0xff
  4485dc:	and	x0, x0, #0xff
  4485e0:	cmp	x0, #0x0
  4485e4:	b.eq	4485f8 <builtin_blkid+0x624>  // b.none
  4485e8:	add	x0, sp, #0xf8
  4485ec:	mov	x1, x0
  4485f0:	ldr	x0, [sp, #296]
  4485f4:	bl	40aba0 <sd_device_get_sysname@plt>
  4485f8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4485fc:	add	x2, x0, #0xe6b
  448600:	ldr	x0, [sp, #248]
  448604:	cmp	x0, #0x0
  448608:	b.eq	448618 <builtin_blkid+0x644>  // b.none
  44860c:	adrp	x0, 45c000 <__func__.8393+0x150>
  448610:	add	x0, x0, #0xec0
  448614:	b	44861c <builtin_blkid+0x648>
  448618:	mov	x0, #0x0                   	// #0
  44861c:	ldr	x3, [sp, #248]
  448620:	adrp	x1, 45c000 <__func__.8393+0x150>
  448624:	add	x1, x1, #0xf78
  448628:	str	x1, [sp, #8]
  44862c:	str	xzr, [sp]
  448630:	mov	x7, #0x0                   	// #0
  448634:	mov	x6, x3
  448638:	mov	x5, x0
  44863c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448640:	add	x4, x0, #0xd8
  448644:	mov	w3, #0x112                 	// #274
  448648:	ldr	w1, [sp, #180]
  44864c:	ldr	w0, [sp, #176]
  448650:	bl	40b020 <log_object_internal@plt>
  448654:	mov	w19, w0
  448658:	b	448a6c <builtin_blkid+0xa98>
  44865c:	str	xzr, [sp, #248]
  448660:	ldr	x0, [sp, #104]
  448664:	str	x0, [sp, #272]
  448668:	mov	w0, #0x7                   	// #7
  44866c:	str	w0, [sp, #148]
  448670:	str	wzr, [sp, #152]
  448674:	ldr	x0, [sp, #272]
  448678:	cmp	x0, #0x0
  44867c:	b.eq	4486b8 <builtin_blkid+0x6e4>  // b.none
  448680:	mov	w0, #0x1                   	// #1
  448684:	bl	40be30 <log_get_max_level_realm@plt>
  448688:	mov	w1, w0
  44868c:	ldr	w0, [sp, #148]
  448690:	cmp	w0, w1
  448694:	cset	w0, le
  448698:	and	w0, w0, #0xff
  44869c:	and	x0, x0, #0xff
  4486a0:	cmp	x0, #0x0
  4486a4:	b.eq	4486b8 <builtin_blkid+0x6e4>  // b.none
  4486a8:	add	x0, sp, #0xf8
  4486ac:	mov	x1, x0
  4486b0:	ldr	x0, [sp, #272]
  4486b4:	bl	40aba0 <sd_device_get_sysname@plt>
  4486b8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4486bc:	add	x8, x0, #0xe6b
  4486c0:	ldr	x0, [sp, #248]
  4486c4:	cmp	x0, #0x0
  4486c8:	b.eq	4486d8 <builtin_blkid+0x704>  // b.none
  4486cc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4486d0:	add	x1, x0, #0xec0
  4486d4:	b	4486dc <builtin_blkid+0x708>
  4486d8:	mov	x1, #0x0                   	// #0
  4486dc:	ldr	x4, [sp, #248]
  4486e0:	ldr	x2, [sp, #208]
  4486e4:	ldrb	w0, [sp, #114]
  4486e8:	cmp	w0, #0x0
  4486ec:	b.eq	4486fc <builtin_blkid+0x728>  // b.none
  4486f0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4486f4:	add	x0, x0, #0xfa8
  4486f8:	b	448704 <builtin_blkid+0x730>
  4486fc:	adrp	x0, 45c000 <__func__.8393+0x150>
  448700:	add	x0, x0, #0xfb0
  448704:	ldr	x3, [sp, #240]
  448708:	str	x3, [sp, #32]
  44870c:	str	x0, [sp, #24]
  448710:	str	x2, [sp, #16]
  448714:	adrp	x0, 45c000 <__func__.8393+0x150>
  448718:	add	x0, x0, #0xfb8
  44871c:	str	x0, [sp, #8]
  448720:	str	xzr, [sp]
  448724:	mov	x7, #0x0                   	// #0
  448728:	mov	x6, x4
  44872c:	mov	x5, x1
  448730:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448734:	add	x4, x0, #0xd8
  448738:	mov	w3, #0x114                 	// #276
  44873c:	mov	x2, x8
  448740:	ldr	w1, [sp, #152]
  448744:	ldr	w0, [sp, #148]
  448748:	bl	40b020 <log_object_internal@plt>
  44874c:	ldr	x0, [sp, #232]
  448750:	bl	447ea0 <probe_superblocks>
  448754:	str	w0, [sp, #128]
  448758:	ldr	w0, [sp, #128]
  44875c:	cmp	w0, #0x0
  448760:	b.ge	448828 <builtin_blkid+0x854>  // b.tcont
  448764:	str	xzr, [sp, #248]
  448768:	ldr	x0, [sp, #104]
  44876c:	str	x0, [sp, #288]
  448770:	mov	w0, #0x7                   	// #7
  448774:	str	w0, [sp, #168]
  448778:	ldr	w0, [sp, #128]
  44877c:	str	w0, [sp, #172]
  448780:	ldr	x0, [sp, #288]
  448784:	cmp	x0, #0x0
  448788:	b.eq	4487c4 <builtin_blkid+0x7f0>  // b.none
  44878c:	mov	w0, #0x1                   	// #1
  448790:	bl	40be30 <log_get_max_level_realm@plt>
  448794:	mov	w1, w0
  448798:	ldr	w0, [sp, #168]
  44879c:	cmp	w0, w1
  4487a0:	cset	w0, le
  4487a4:	and	w0, w0, #0xff
  4487a8:	and	x0, x0, #0xff
  4487ac:	cmp	x0, #0x0
  4487b0:	b.eq	4487c4 <builtin_blkid+0x7f0>  // b.none
  4487b4:	add	x0, sp, #0xf8
  4487b8:	mov	x1, x0
  4487bc:	ldr	x0, [sp, #288]
  4487c0:	bl	40aba0 <sd_device_get_sysname@plt>
  4487c4:	adrp	x0, 45c000 <__func__.8393+0x150>
  4487c8:	add	x2, x0, #0xe6b
  4487cc:	ldr	x0, [sp, #248]
  4487d0:	cmp	x0, #0x0
  4487d4:	b.eq	4487e4 <builtin_blkid+0x810>  // b.none
  4487d8:	adrp	x0, 45c000 <__func__.8393+0x150>
  4487dc:	add	x0, x0, #0xec0
  4487e0:	b	4487e8 <builtin_blkid+0x814>
  4487e4:	mov	x0, #0x0                   	// #0
  4487e8:	ldr	x3, [sp, #248]
  4487ec:	adrp	x1, 45c000 <__func__.8393+0x150>
  4487f0:	add	x1, x1, #0xfe0
  4487f4:	str	x1, [sp, #8]
  4487f8:	str	xzr, [sp]
  4487fc:	mov	x7, #0x0                   	// #0
  448800:	mov	x6, x3
  448804:	mov	x5, x0
  448808:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44880c:	add	x4, x0, #0xd8
  448810:	mov	w3, #0x118                 	// #280
  448814:	ldr	w1, [sp, #172]
  448818:	ldr	w0, [sp, #168]
  44881c:	bl	40b020 <log_object_internal@plt>
  448820:	mov	w19, w0
  448824:	b	448a6c <builtin_blkid+0xa98>
  448828:	add	x0, sp, #0xd8
  44882c:	mov	x2, x0
  448830:	adrp	x0, 45c000 <__func__.8393+0x150>
  448834:	add	x1, x0, #0xe98
  448838:	ldr	x0, [sp, #104]
  44883c:	bl	40a310 <sd_device_get_property_value@plt>
  448840:	bl	40b040 <__errno_location@plt>
  448844:	str	wzr, [x0]
  448848:	ldr	x0, [sp, #232]
  44884c:	bl	40aa60 <blkid_probe_numof_values@plt>
  448850:	str	w0, [sp, #156]
  448854:	ldr	w0, [sp, #156]
  448858:	cmp	w0, #0x0
  44885c:	b.ge	448940 <builtin_blkid+0x96c>  // b.tcont
  448860:	str	xzr, [sp, #248]
  448864:	ldr	x0, [sp, #104]
  448868:	str	x0, [sp, #280]
  44886c:	mov	w0, #0x7                   	// #7
  448870:	str	w0, [sp, #160]
  448874:	bl	40b040 <__errno_location@plt>
  448878:	ldr	w0, [x0]
  44887c:	cmp	w0, #0x0
  448880:	b.le	448890 <builtin_blkid+0x8bc>
  448884:	bl	40b040 <__errno_location@plt>
  448888:	ldr	w0, [x0]
  44888c:	b	448894 <builtin_blkid+0x8c0>
  448890:	mov	w0, #0xc                   	// #12
  448894:	str	w0, [sp, #164]
  448898:	ldr	x0, [sp, #280]
  44889c:	cmp	x0, #0x0
  4488a0:	b.eq	4488dc <builtin_blkid+0x908>  // b.none
  4488a4:	mov	w0, #0x1                   	// #1
  4488a8:	bl	40be30 <log_get_max_level_realm@plt>
  4488ac:	mov	w1, w0
  4488b0:	ldr	w0, [sp, #160]
  4488b4:	cmp	w0, w1
  4488b8:	cset	w0, le
  4488bc:	and	w0, w0, #0xff
  4488c0:	and	x0, x0, #0xff
  4488c4:	cmp	x0, #0x0
  4488c8:	b.eq	4488dc <builtin_blkid+0x908>  // b.none
  4488cc:	add	x0, sp, #0xf8
  4488d0:	mov	x1, x0
  4488d4:	ldr	x0, [sp, #280]
  4488d8:	bl	40aba0 <sd_device_get_sysname@plt>
  4488dc:	adrp	x0, 45c000 <__func__.8393+0x150>
  4488e0:	add	x2, x0, #0xe6b
  4488e4:	ldr	x0, [sp, #248]
  4488e8:	cmp	x0, #0x0
  4488ec:	b.eq	4488fc <builtin_blkid+0x928>  // b.none
  4488f0:	adrp	x0, 45c000 <__func__.8393+0x150>
  4488f4:	add	x0, x0, #0xec0
  4488f8:	b	448900 <builtin_blkid+0x92c>
  4488fc:	mov	x0, #0x0                   	// #0
  448900:	ldr	x3, [sp, #248]
  448904:	adrp	x1, 45d000 <__func__.7018+0x3c0>
  448908:	add	x1, x1, #0x0
  44890c:	str	x1, [sp, #8]
  448910:	str	xzr, [sp]
  448914:	mov	x7, #0x0                   	// #0
  448918:	mov	x6, x3
  44891c:	mov	x5, x0
  448920:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448924:	add	x4, x0, #0xd8
  448928:	mov	w3, #0x120                 	// #288
  44892c:	ldr	w1, [sp, #164]
  448930:	ldr	w0, [sp, #160]
  448934:	bl	40b020 <log_object_internal@plt>
  448938:	mov	w19, w0
  44893c:	b	448a6c <builtin_blkid+0xa98>
  448940:	str	wzr, [sp, #120]
  448944:	b	448a38 <builtin_blkid+0xa64>
  448948:	ldr	x0, [sp, #232]
  44894c:	add	x2, sp, #0xe0
  448950:	add	x1, sp, #0xf8
  448954:	mov	x4, #0x0                   	// #0
  448958:	mov	x3, x2
  44895c:	mov	x2, x1
  448960:	ldr	w1, [sp, #120]
  448964:	bl	40a2c0 <blkid_probe_get_value@plt>
  448968:	cmp	w0, #0x0
  44896c:	b.lt	448a28 <builtin_blkid+0xa54>  // b.tstop
  448970:	ldr	x0, [sp, #248]
  448974:	ldr	x1, [sp, #224]
  448978:	mov	x3, x1
  44897c:	mov	x2, x0
  448980:	ldrb	w1, [sp, #99]
  448984:	ldr	x0, [sp, #104]
  448988:	bl	447704 <print_property>
  44898c:	ldr	x2, [sp, #248]
  448990:	adrp	x0, 45c000 <__func__.8393+0x150>
  448994:	add	x1, x0, #0xd28
  448998:	mov	x0, x2
  44899c:	bl	40b710 <strcmp@plt>
  4489a0:	cmp	w0, #0x0
  4489a4:	b.ne	4489cc <builtin_blkid+0x9f8>  // b.any
  4489a8:	ldr	x2, [sp, #224]
  4489ac:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4489b0:	add	x1, x0, #0x30
  4489b4:	mov	x0, x2
  4489b8:	bl	40b710 <strcmp@plt>
  4489bc:	cmp	w0, #0x0
  4489c0:	b.ne	4489cc <builtin_blkid+0x9f8>  // b.any
  4489c4:	mov	w0, #0x1                   	// #1
  4489c8:	strb	w0, [sp, #115]
  4489cc:	ldr	x0, [sp, #216]
  4489d0:	cmp	x0, #0x0
  4489d4:	b.eq	448a2c <builtin_blkid+0xa58>  // b.none
  4489d8:	ldr	x2, [sp, #248]
  4489dc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4489e0:	add	x1, x0, #0x38
  4489e4:	mov	x0, x2
  4489e8:	bl	40b710 <strcmp@plt>
  4489ec:	cmp	w0, #0x0
  4489f0:	b.ne	448a2c <builtin_blkid+0xa58>  // b.any
  4489f4:	ldr	x0, [sp, #224]
  4489f8:	ldr	x1, [sp, #216]
  4489fc:	bl	40b710 <strcmp@plt>
  448a00:	cmp	w0, #0x0
  448a04:	b.ne	448a2c <builtin_blkid+0xa58>  // b.any
  448a08:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448a0c:	add	x3, x0, #0x48
  448a10:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448a14:	add	x2, x0, #0x50
  448a18:	ldrb	w1, [sp, #99]
  448a1c:	ldr	x0, [sp, #104]
  448a20:	bl	436504 <udev_builtin_add_property>
  448a24:	b	448a2c <builtin_blkid+0xa58>
  448a28:	nop
  448a2c:	ldr	w0, [sp, #120]
  448a30:	add	w0, w0, #0x1
  448a34:	str	w0, [sp, #120]
  448a38:	ldr	w1, [sp, #120]
  448a3c:	ldr	w0, [sp, #156]
  448a40:	cmp	w1, w0
  448a44:	b.lt	448948 <builtin_blkid+0x974>  // b.tstop
  448a48:	ldrb	w0, [sp, #115]
  448a4c:	cmp	w0, #0x0
  448a50:	b.eq	448a68 <builtin_blkid+0xa94>  // b.none
  448a54:	ldr	x0, [sp, #232]
  448a58:	ldrb	w2, [sp, #99]
  448a5c:	mov	x1, x0
  448a60:	ldr	x0, [sp, #104]
  448a64:	bl	447bf0 <find_gpt_root>
  448a68:	mov	w19, #0x0                   	// #0
  448a6c:	add	x0, sp, #0x74
  448a70:	bl	44766c <closep>
  448a74:	add	x0, sp, #0xe8
  448a78:	bl	4475f4 <blkid_free_probep>
  448a7c:	mov	w1, w19
  448a80:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  448a84:	ldr	x0, [x0, #4032]
  448a88:	ldr	x2, [sp, #328]
  448a8c:	ldr	x0, [x0]
  448a90:	eor	x0, x2, x0
  448a94:	cmp	x0, #0x0
  448a98:	b.eq	448aa0 <builtin_blkid+0xacc>  // b.none
  448a9c:	bl	40b280 <__stack_chk_fail@plt>
  448aa0:	mov	w0, w1
  448aa4:	ldr	x19, [sp, #64]
  448aa8:	ldp	x29, x30, [sp, #48]
  448aac:	add	sp, sp, #0x150
  448ab0:	ret

0000000000448ab4 <logind_running>:
  448ab4:	stp	x29, x30, [sp, #-16]!
  448ab8:	mov	x29, sp
  448abc:	mov	w1, #0x0                   	// #0
  448ac0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448ac4:	add	x0, x0, #0xe8
  448ac8:	bl	40ae20 <access@plt>
  448acc:	mvn	w0, w0
  448ad0:	lsr	w0, w0, #31
  448ad4:	and	w0, w0, #0xff
  448ad8:	ldp	x29, x30, [sp], #16
  448adc:	ret

0000000000448ae0 <builtin_uaccess>:
  448ae0:	sub	sp, sp, #0xc0
  448ae4:	stp	x29, x30, [sp, #32]
  448ae8:	add	x29, sp, #0x20
  448aec:	str	x0, [sp, #72]
  448af0:	str	w1, [sp, #68]
  448af4:	str	x2, [sp, #56]
  448af8:	strb	w3, [sp, #67]
  448afc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  448b00:	ldr	x0, [x0, #4032]
  448b04:	ldr	x1, [x0]
  448b08:	str	x1, [sp, #184]
  448b0c:	mov	x1, #0x0                   	// #0
  448b10:	str	xzr, [sp, #128]
  448b14:	strb	wzr, [sp, #82]
  448b18:	mov	w0, #0x12                  	// #18
  448b1c:	bl	40acf0 <umask@plt>
  448b20:	bl	448ab4 <logind_running>
  448b24:	and	w0, w0, #0xff
  448b28:	eor	w0, w0, #0x1
  448b2c:	and	w0, w0, #0xff
  448b30:	cmp	w0, #0x0
  448b34:	b.eq	448b40 <builtin_uaccess+0x60>  // b.none
  448b38:	mov	w0, #0x0                   	// #0
  448b3c:	b	448fb8 <builtin_uaccess+0x4d8>
  448b40:	add	x0, sp, #0x80
  448b44:	mov	x1, x0
  448b48:	ldr	x0, [sp, #72]
  448b4c:	bl	40a6f0 <sd_device_get_devname@plt>
  448b50:	str	w0, [sp, #88]
  448b54:	ldr	w0, [sp, #88]
  448b58:	cmp	w0, #0x0
  448b5c:	b.ge	448c20 <builtin_uaccess+0x140>  // b.tcont
  448b60:	str	xzr, [sp, #144]
  448b64:	ldr	x0, [sp, #72]
  448b68:	str	x0, [sp, #168]
  448b6c:	mov	w0, #0x3                   	// #3
  448b70:	str	w0, [sp, #108]
  448b74:	ldr	w0, [sp, #88]
  448b78:	str	w0, [sp, #112]
  448b7c:	ldr	x0, [sp, #168]
  448b80:	cmp	x0, #0x0
  448b84:	b.eq	448bc0 <builtin_uaccess+0xe0>  // b.none
  448b88:	mov	w0, #0x1                   	// #1
  448b8c:	bl	40be30 <log_get_max_level_realm@plt>
  448b90:	mov	w1, w0
  448b94:	ldr	w0, [sp, #108]
  448b98:	cmp	w0, w1
  448b9c:	cset	w0, le
  448ba0:	and	w0, w0, #0xff
  448ba4:	and	x0, x0, #0xff
  448ba8:	cmp	x0, #0x0
  448bac:	b.eq	448bc0 <builtin_uaccess+0xe0>  // b.none
  448bb0:	add	x0, sp, #0x90
  448bb4:	mov	x1, x0
  448bb8:	ldr	x0, [sp, #168]
  448bbc:	bl	40aba0 <sd_device_get_sysname@plt>
  448bc0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448bc4:	add	x2, x0, #0x103
  448bc8:	ldr	x0, [sp, #144]
  448bcc:	cmp	x0, #0x0
  448bd0:	b.eq	448be0 <builtin_uaccess+0x100>  // b.none
  448bd4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448bd8:	add	x0, x0, #0x128
  448bdc:	b	448be4 <builtin_uaccess+0x104>
  448be0:	mov	x0, #0x0                   	// #0
  448be4:	ldr	x3, [sp, #144]
  448be8:	adrp	x1, 45d000 <__func__.7018+0x3c0>
  448bec:	add	x1, x1, #0x130
  448bf0:	str	x1, [sp, #8]
  448bf4:	str	xzr, [sp]
  448bf8:	mov	x7, #0x0                   	// #0
  448bfc:	mov	x6, x3
  448c00:	mov	x5, x0
  448c04:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448c08:	add	x4, x0, #0x1d0
  448c0c:	mov	w3, #0x21                  	// #33
  448c10:	ldr	w1, [sp, #112]
  448c14:	ldr	w0, [sp, #108]
  448c18:	bl	40b020 <log_object_internal@plt>
  448c1c:	b	448e84 <builtin_uaccess+0x3a4>
  448c20:	add	x0, sp, #0x88
  448c24:	mov	x2, x0
  448c28:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448c2c:	add	x1, x0, #0x150
  448c30:	ldr	x0, [sp, #72]
  448c34:	bl	40a310 <sd_device_get_property_value@plt>
  448c38:	cmp	w0, #0x0
  448c3c:	b.ge	448c4c <builtin_uaccess+0x16c>  // b.tcont
  448c40:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448c44:	add	x0, x0, #0x158
  448c48:	str	x0, [sp, #136]
  448c4c:	ldr	x0, [sp, #136]
  448c50:	add	x1, sp, #0x54
  448c54:	mov	x2, x1
  448c58:	mov	x1, #0x0                   	// #0
  448c5c:	bl	44c194 <sd_seat_get_active>
  448c60:	str	w0, [sp, #88]
  448c64:	ldr	w0, [sp, #88]
  448c68:	cmp	w0, #0x0
  448c6c:	b.ge	448d74 <builtin_uaccess+0x294>  // b.tcont
  448c70:	strb	wzr, [sp, #83]
  448c74:	ldr	w0, [sp, #88]
  448c78:	cmn	w0, #0x3d
  448c7c:	b.eq	448c8c <builtin_uaccess+0x1ac>  // b.none
  448c80:	ldr	w0, [sp, #88]
  448c84:	cmn	w0, #0x6
  448c88:	b.ne	448c94 <builtin_uaccess+0x1b4>  // b.any
  448c8c:	mov	w0, #0x1                   	// #1
  448c90:	strb	w0, [sp, #83]
  448c94:	nop
  448c98:	ldrb	w0, [sp, #83]
  448c9c:	cmp	w0, #0x0
  448ca0:	b.eq	448cac <builtin_uaccess+0x1cc>  // b.none
  448ca4:	str	wzr, [sp, #88]
  448ca8:	b	448e84 <builtin_uaccess+0x3a4>
  448cac:	str	xzr, [sp, #144]
  448cb0:	ldr	x0, [sp, #72]
  448cb4:	str	x0, [sp, #160]
  448cb8:	mov	w0, #0x3                   	// #3
  448cbc:	str	w0, [sp, #100]
  448cc0:	ldr	w0, [sp, #88]
  448cc4:	str	w0, [sp, #104]
  448cc8:	ldr	x0, [sp, #160]
  448ccc:	cmp	x0, #0x0
  448cd0:	b.eq	448d0c <builtin_uaccess+0x22c>  // b.none
  448cd4:	mov	w0, #0x1                   	// #1
  448cd8:	bl	40be30 <log_get_max_level_realm@plt>
  448cdc:	mov	w1, w0
  448ce0:	ldr	w0, [sp, #100]
  448ce4:	cmp	w0, w1
  448ce8:	cset	w0, le
  448cec:	and	w0, w0, #0xff
  448cf0:	and	x0, x0, #0xff
  448cf4:	cmp	x0, #0x0
  448cf8:	b.eq	448d0c <builtin_uaccess+0x22c>  // b.none
  448cfc:	add	x0, sp, #0x90
  448d00:	mov	x1, x0
  448d04:	ldr	x0, [sp, #160]
  448d08:	bl	40aba0 <sd_device_get_sysname@plt>
  448d0c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448d10:	add	x2, x0, #0x103
  448d14:	ldr	x0, [sp, #144]
  448d18:	cmp	x0, #0x0
  448d1c:	b.eq	448d2c <builtin_uaccess+0x24c>  // b.none
  448d20:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448d24:	add	x0, x0, #0x128
  448d28:	b	448d30 <builtin_uaccess+0x250>
  448d2c:	mov	x0, #0x0                   	// #0
  448d30:	ldr	x3, [sp, #144]
  448d34:	ldr	x1, [sp, #136]
  448d38:	str	x1, [sp, #16]
  448d3c:	adrp	x1, 45d000 <__func__.7018+0x3c0>
  448d40:	add	x1, x1, #0x160
  448d44:	str	x1, [sp, #8]
  448d48:	str	xzr, [sp]
  448d4c:	mov	x7, #0x0                   	// #0
  448d50:	mov	x6, x3
  448d54:	mov	x5, x0
  448d58:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448d5c:	add	x4, x0, #0x1d0
  448d60:	mov	w3, #0x2e                  	// #46
  448d64:	ldr	w1, [sp, #104]
  448d68:	ldr	w0, [sp, #100]
  448d6c:	bl	40b020 <log_object_internal@plt>
  448d70:	b	448e84 <builtin_uaccess+0x3a4>
  448d74:	ldr	x0, [sp, #128]
  448d78:	ldr	w1, [sp, #84]
  448d7c:	mov	w5, w1
  448d80:	mov	w4, #0x1                   	// #1
  448d84:	mov	w3, #0x0                   	// #0
  448d88:	mov	w2, #0x0                   	// #0
  448d8c:	mov	w1, #0x1                   	// #1
  448d90:	bl	44914c <devnode_acl>
  448d94:	str	w0, [sp, #88]
  448d98:	ldr	w0, [sp, #88]
  448d9c:	cmp	w0, #0x0
  448da0:	b.ge	448e78 <builtin_uaccess+0x398>  // b.tcont
  448da4:	str	xzr, [sp, #144]
  448da8:	ldr	x0, [sp, #72]
  448dac:	str	x0, [sp, #152]
  448db0:	ldr	w0, [sp, #88]
  448db4:	cmn	w0, #0x2
  448db8:	b.ne	448dc4 <builtin_uaccess+0x2e4>  // b.any
  448dbc:	mov	w0, #0x7                   	// #7
  448dc0:	b	448dc8 <builtin_uaccess+0x2e8>
  448dc4:	mov	w0, #0x3                   	// #3
  448dc8:	str	w0, [sp, #92]
  448dcc:	ldr	w0, [sp, #88]
  448dd0:	str	w0, [sp, #96]
  448dd4:	ldr	x0, [sp, #152]
  448dd8:	cmp	x0, #0x0
  448ddc:	b.eq	448e18 <builtin_uaccess+0x338>  // b.none
  448de0:	mov	w0, #0x1                   	// #1
  448de4:	bl	40be30 <log_get_max_level_realm@plt>
  448de8:	mov	w1, w0
  448dec:	ldr	w0, [sp, #92]
  448df0:	cmp	w0, w1
  448df4:	cset	w0, le
  448df8:	and	w0, w0, #0xff
  448dfc:	and	x0, x0, #0xff
  448e00:	cmp	x0, #0x0
  448e04:	b.eq	448e18 <builtin_uaccess+0x338>  // b.none
  448e08:	add	x0, sp, #0x90
  448e0c:	mov	x1, x0
  448e10:	ldr	x0, [sp, #152]
  448e14:	bl	40aba0 <sd_device_get_sysname@plt>
  448e18:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448e1c:	add	x2, x0, #0x103
  448e20:	ldr	x0, [sp, #144]
  448e24:	cmp	x0, #0x0
  448e28:	b.eq	448e38 <builtin_uaccess+0x358>  // b.none
  448e2c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448e30:	add	x0, x0, #0x128
  448e34:	b	448e3c <builtin_uaccess+0x35c>
  448e38:	mov	x0, #0x0                   	// #0
  448e3c:	ldr	x3, [sp, #144]
  448e40:	adrp	x1, 45d000 <__func__.7018+0x3c0>
  448e44:	add	x1, x1, #0x190
  448e48:	str	x1, [sp, #8]
  448e4c:	str	xzr, [sp]
  448e50:	mov	x7, #0x0                   	// #0
  448e54:	mov	x6, x3
  448e58:	mov	x5, x0
  448e5c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448e60:	add	x4, x0, #0x1d0
  448e64:	mov	w3, #0x35                  	// #53
  448e68:	ldr	w1, [sp, #96]
  448e6c:	ldr	w0, [sp, #92]
  448e70:	bl	40b020 <log_object_internal@plt>
  448e74:	b	448e84 <builtin_uaccess+0x3a4>
  448e78:	mov	w0, #0x1                   	// #1
  448e7c:	strb	w0, [sp, #82]
  448e80:	str	wzr, [sp, #88]
  448e84:	ldr	x0, [sp, #128]
  448e88:	cmp	x0, #0x0
  448e8c:	b.eq	448fb4 <builtin_uaccess+0x4d4>  // b.none
  448e90:	ldrb	w0, [sp, #82]
  448e94:	eor	w0, w0, #0x1
  448e98:	and	w0, w0, #0xff
  448e9c:	cmp	w0, #0x0
  448ea0:	b.eq	448fb4 <builtin_uaccess+0x4d4>  // b.none
  448ea4:	ldr	x0, [sp, #128]
  448ea8:	mov	w5, #0x0                   	// #0
  448eac:	mov	w4, #0x0                   	// #0
  448eb0:	mov	w3, #0x0                   	// #0
  448eb4:	mov	w2, #0x0                   	// #0
  448eb8:	mov	w1, #0x1                   	// #1
  448ebc:	bl	44914c <devnode_acl>
  448ec0:	str	w0, [sp, #116]
  448ec4:	ldr	w0, [sp, #116]
  448ec8:	cmp	w0, #0x0
  448ecc:	b.ge	448fb4 <builtin_uaccess+0x4d4>  // b.tcont
  448ed0:	str	xzr, [sp, #144]
  448ed4:	ldr	x0, [sp, #72]
  448ed8:	str	x0, [sp, #176]
  448edc:	ldr	w0, [sp, #116]
  448ee0:	cmn	w0, #0x2
  448ee4:	b.ne	448ef0 <builtin_uaccess+0x410>  // b.any
  448ee8:	mov	w0, #0x7                   	// #7
  448eec:	b	448ef4 <builtin_uaccess+0x414>
  448ef0:	mov	w0, #0x3                   	// #3
  448ef4:	str	w0, [sp, #120]
  448ef8:	ldr	w0, [sp, #116]
  448efc:	str	w0, [sp, #124]
  448f00:	ldr	x0, [sp, #176]
  448f04:	cmp	x0, #0x0
  448f08:	b.eq	448f44 <builtin_uaccess+0x464>  // b.none
  448f0c:	mov	w0, #0x1                   	// #1
  448f10:	bl	40be30 <log_get_max_level_realm@plt>
  448f14:	mov	w1, w0
  448f18:	ldr	w0, [sp, #120]
  448f1c:	cmp	w0, w1
  448f20:	cset	w0, le
  448f24:	and	w0, w0, #0xff
  448f28:	and	x0, x0, #0xff
  448f2c:	cmp	x0, #0x0
  448f30:	b.eq	448f44 <builtin_uaccess+0x464>  // b.none
  448f34:	add	x0, sp, #0x90
  448f38:	mov	x1, x0
  448f3c:	ldr	x0, [sp, #176]
  448f40:	bl	40aba0 <sd_device_get_sysname@plt>
  448f44:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448f48:	add	x2, x0, #0x103
  448f4c:	ldr	x0, [sp, #144]
  448f50:	cmp	x0, #0x0
  448f54:	b.eq	448f64 <builtin_uaccess+0x484>  // b.none
  448f58:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448f5c:	add	x0, x0, #0x128
  448f60:	b	448f68 <builtin_uaccess+0x488>
  448f64:	mov	x0, #0x0                   	// #0
  448f68:	ldr	x3, [sp, #144]
  448f6c:	adrp	x1, 45d000 <__func__.7018+0x3c0>
  448f70:	add	x1, x1, #0x190
  448f74:	str	x1, [sp, #8]
  448f78:	str	xzr, [sp]
  448f7c:	mov	x7, #0x0                   	// #0
  448f80:	mov	x6, x3
  448f84:	mov	x5, x0
  448f88:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  448f8c:	add	x4, x0, #0x1d0
  448f90:	mov	w3, #0x43                  	// #67
  448f94:	ldr	w1, [sp, #124]
  448f98:	ldr	w0, [sp, #120]
  448f9c:	bl	40b020 <log_object_internal@plt>
  448fa0:	ldr	w0, [sp, #88]
  448fa4:	cmp	w0, #0x0
  448fa8:	b.lt	448fb4 <builtin_uaccess+0x4d4>  // b.tstop
  448fac:	ldr	w0, [sp, #116]
  448fb0:	str	w0, [sp, #88]
  448fb4:	ldr	w0, [sp, #88]
  448fb8:	mov	w1, w0
  448fbc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  448fc0:	ldr	x0, [x0, #4032]
  448fc4:	ldr	x2, [sp, #184]
  448fc8:	ldr	x0, [x0]
  448fcc:	eor	x0, x2, x0
  448fd0:	cmp	x0, #0x0
  448fd4:	b.eq	448fdc <builtin_uaccess+0x4fc>  // b.none
  448fd8:	bl	40b280 <__stack_chk_fail@plt>
  448fdc:	mov	w0, w1
  448fe0:	ldp	x29, x30, [sp, #32]
  448fe4:	add	sp, sp, #0xc0
  448fe8:	ret

0000000000448fec <flush_acl>:
  448fec:	stp	x29, x30, [sp, #-64]!
  448ff0:	mov	x29, sp
  448ff4:	str	x0, [sp, #24]
  448ff8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  448ffc:	ldr	x0, [x0, #4032]
  449000:	ldr	x1, [x0]
  449004:	str	x1, [sp, #56]
  449008:	mov	x1, #0x0                   	// #0
  44900c:	strb	wzr, [sp, #39]
  449010:	ldr	x0, [sp, #24]
  449014:	cmp	x0, #0x0
  449018:	cset	w0, eq  // eq = none
  44901c:	and	w0, w0, #0xff
  449020:	and	x0, x0, #0xff
  449024:	cmp	x0, #0x0
  449028:	b.eq	449054 <flush_acl+0x68>  // b.none
  44902c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449030:	add	x1, x0, #0x1e3
  449034:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449038:	add	x4, x0, #0x328
  44903c:	mov	w3, #0x18                  	// #24
  449040:	mov	x2, x1
  449044:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449048:	add	x1, x0, #0x200
  44904c:	mov	w0, #0x1                   	// #1
  449050:	bl	40abb0 <log_assert_failed_realm@plt>
  449054:	add	x0, sp, #0x30
  449058:	mov	x2, x0
  44905c:	mov	w1, #0x0                   	// #0
  449060:	ldr	x0, [sp, #24]
  449064:	bl	40b840 <acl_get_entry@plt>
  449068:	str	w0, [sp, #44]
  44906c:	b	4490f0 <flush_acl+0x104>
  449070:	ldr	x0, [sp, #48]
  449074:	add	x1, sp, #0x28
  449078:	bl	40b6f0 <acl_get_tag_type@plt>
  44907c:	cmp	w0, #0x0
  449080:	b.ge	449094 <flush_acl+0xa8>  // b.tcont
  449084:	bl	40b040 <__errno_location@plt>
  449088:	ldr	w0, [x0]
  44908c:	neg	w0, w0
  449090:	b	44911c <flush_acl+0x130>
  449094:	ldr	w0, [sp, #40]
  449098:	cmp	w0, #0x2
  44909c:	b.ne	4490d4 <flush_acl+0xe8>  // b.any
  4490a0:	ldr	x0, [sp, #48]
  4490a4:	mov	x1, x0
  4490a8:	ldr	x0, [sp, #24]
  4490ac:	bl	40b9a0 <acl_delete_entry@plt>
  4490b0:	cmp	w0, #0x0
  4490b4:	b.ge	4490c8 <flush_acl+0xdc>  // b.tcont
  4490b8:	bl	40b040 <__errno_location@plt>
  4490bc:	ldr	w0, [x0]
  4490c0:	neg	w0, w0
  4490c4:	b	44911c <flush_acl+0x130>
  4490c8:	mov	w0, #0x1                   	// #1
  4490cc:	strb	w0, [sp, #39]
  4490d0:	b	4490d8 <flush_acl+0xec>
  4490d4:	nop
  4490d8:	add	x0, sp, #0x30
  4490dc:	mov	x2, x0
  4490e0:	mov	w1, #0x1                   	// #1
  4490e4:	ldr	x0, [sp, #24]
  4490e8:	bl	40b840 <acl_get_entry@plt>
  4490ec:	str	w0, [sp, #44]
  4490f0:	ldr	w0, [sp, #44]
  4490f4:	cmp	w0, #0x0
  4490f8:	b.gt	449070 <flush_acl+0x84>
  4490fc:	ldr	w0, [sp, #44]
  449100:	cmp	w0, #0x0
  449104:	b.ge	449118 <flush_acl+0x12c>  // b.tcont
  449108:	bl	40b040 <__errno_location@plt>
  44910c:	ldr	w0, [x0]
  449110:	neg	w0, w0
  449114:	b	44911c <flush_acl+0x130>
  449118:	ldrb	w0, [sp, #39]
  44911c:	mov	w1, w0
  449120:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  449124:	ldr	x0, [x0, #4032]
  449128:	ldr	x2, [sp, #56]
  44912c:	ldr	x0, [x0]
  449130:	eor	x0, x2, x0
  449134:	cmp	x0, #0x0
  449138:	b.eq	449140 <flush_acl+0x154>  // b.none
  44913c:	bl	40b280 <__stack_chk_fail@plt>
  449140:	mov	w0, w1
  449144:	ldp	x29, x30, [sp], #64
  449148:	ret

000000000044914c <devnode_acl>:
  44914c:	stp	x29, x30, [sp, #-96]!
  449150:	mov	x29, sp
  449154:	str	x0, [sp, #40]
  449158:	strb	w1, [sp, #39]
  44915c:	strb	w2, [sp, #38]
  449160:	str	w3, [sp, #32]
  449164:	strb	w4, [sp, #37]
  449168:	str	w5, [sp, #28]
  44916c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  449170:	ldr	x0, [x0, #4032]
  449174:	ldr	x1, [x0]
  449178:	str	x1, [sp, #88]
  44917c:	mov	x1, #0x0                   	// #0
  449180:	str	wzr, [sp, #52]
  449184:	strb	wzr, [sp, #51]
  449188:	ldr	x0, [sp, #40]
  44918c:	cmp	x0, #0x0
  449190:	cset	w0, eq  // eq = none
  449194:	and	w0, w0, #0xff
  449198:	and	x0, x0, #0xff
  44919c:	cmp	x0, #0x0
  4491a0:	b.eq	4491cc <devnode_acl+0x80>  // b.none
  4491a4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4491a8:	add	x1, x0, #0x1e3
  4491ac:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4491b0:	add	x4, x0, #0x338
  4491b4:	mov	w3, #0x3b                  	// #59
  4491b8:	mov	x2, x1
  4491bc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4491c0:	add	x1, x0, #0x208
  4491c4:	mov	w0, #0x1                   	// #1
  4491c8:	bl	40abb0 <log_assert_failed_realm@plt>
  4491cc:	mov	w1, #0x8000                	// #32768
  4491d0:	ldr	x0, [sp, #40]
  4491d4:	bl	40b180 <acl_get_file@plt>
  4491d8:	str	x0, [sp, #64]
  4491dc:	ldr	x0, [sp, #64]
  4491e0:	cmp	x0, #0x0
  4491e4:	b.ne	4491f8 <devnode_acl+0xac>  // b.any
  4491e8:	bl	40b040 <__errno_location@plt>
  4491ec:	ldr	w0, [x0]
  4491f0:	neg	w0, w0
  4491f4:	b	4494bc <devnode_acl+0x370>
  4491f8:	ldrb	w0, [sp, #39]
  4491fc:	cmp	w0, #0x0
  449200:	b.eq	449234 <devnode_acl+0xe8>  // b.none
  449204:	ldr	x0, [sp, #64]
  449208:	bl	448fec <flush_acl>
  44920c:	str	w0, [sp, #52]
  449210:	ldr	w0, [sp, #52]
  449214:	cmp	w0, #0x0
  449218:	b.lt	449494 <devnode_acl+0x348>  // b.tstop
  44921c:	ldr	w0, [sp, #52]
  449220:	cmp	w0, #0x0
  449224:	b.le	4492ac <devnode_acl+0x160>
  449228:	mov	w0, #0x1                   	// #1
  44922c:	strb	w0, [sp, #51]
  449230:	b	4492ac <devnode_acl+0x160>
  449234:	ldrb	w0, [sp, #38]
  449238:	cmp	w0, #0x0
  44923c:	b.eq	4492ac <devnode_acl+0x160>  // b.none
  449240:	ldr	w0, [sp, #32]
  449244:	cmp	w0, #0x0
  449248:	b.eq	4492ac <devnode_acl+0x160>  // b.none
  44924c:	ldr	x0, [sp, #64]
  449250:	add	x1, sp, #0x50
  449254:	mov	x2, x1
  449258:	ldr	w1, [sp, #32]
  44925c:	bl	40aa20 <acl_find_uid@plt>
  449260:	str	w0, [sp, #52]
  449264:	ldr	w0, [sp, #52]
  449268:	cmp	w0, #0x0
  44926c:	b.lt	44949c <devnode_acl+0x350>  // b.tstop
  449270:	ldr	w0, [sp, #52]
  449274:	cmp	w0, #0x0
  449278:	b.le	4492ac <devnode_acl+0x160>
  44927c:	ldr	x0, [sp, #64]
  449280:	ldr	x1, [sp, #80]
  449284:	bl	40b9a0 <acl_delete_entry@plt>
  449288:	cmp	w0, #0x0
  44928c:	b.ge	4492a4 <devnode_acl+0x158>  // b.tcont
  449290:	bl	40b040 <__errno_location@plt>
  449294:	ldr	w0, [x0]
  449298:	neg	w0, w0
  44929c:	str	w0, [sp, #52]
  4492a0:	b	4494b0 <devnode_acl+0x364>
  4492a4:	mov	w0, #0x1                   	// #1
  4492a8:	strb	w0, [sp, #51]
  4492ac:	ldrb	w0, [sp, #37]
  4492b0:	cmp	w0, #0x0
  4492b4:	b.eq	449424 <devnode_acl+0x2d8>  // b.none
  4492b8:	ldr	w0, [sp, #28]
  4492bc:	cmp	w0, #0x0
  4492c0:	b.eq	449424 <devnode_acl+0x2d8>  // b.none
  4492c4:	ldr	x0, [sp, #64]
  4492c8:	ldr	w1, [sp, #28]
  4492cc:	add	x2, sp, #0x48
  4492d0:	bl	40aa20 <acl_find_uid@plt>
  4492d4:	str	w0, [sp, #52]
  4492d8:	ldr	w0, [sp, #52]
  4492dc:	cmp	w0, #0x0
  4492e0:	b.lt	4494a4 <devnode_acl+0x358>  // b.tstop
  4492e4:	ldr	w0, [sp, #52]
  4492e8:	cmp	w0, #0x0
  4492ec:	b.ne	449354 <devnode_acl+0x208>  // b.any
  4492f0:	add	x1, sp, #0x48
  4492f4:	add	x0, sp, #0x40
  4492f8:	bl	40be70 <acl_create_entry@plt>
  4492fc:	cmp	w0, #0x0
  449300:	b.ge	449318 <devnode_acl+0x1cc>  // b.tcont
  449304:	bl	40b040 <__errno_location@plt>
  449308:	ldr	w0, [x0]
  44930c:	neg	w0, w0
  449310:	str	w0, [sp, #52]
  449314:	b	4494b0 <devnode_acl+0x364>
  449318:	ldr	x0, [sp, #72]
  44931c:	mov	w1, #0x2                   	// #2
  449320:	bl	40b540 <acl_set_tag_type@plt>
  449324:	cmp	w0, #0x0
  449328:	b.lt	449340 <devnode_acl+0x1f4>  // b.tstop
  44932c:	ldr	x0, [sp, #72]
  449330:	add	x1, sp, #0x1c
  449334:	bl	40acb0 <acl_set_qualifier@plt>
  449338:	cmp	w0, #0x0
  44933c:	b.ge	449354 <devnode_acl+0x208>  // b.tcont
  449340:	bl	40b040 <__errno_location@plt>
  449344:	ldr	w0, [x0]
  449348:	neg	w0, w0
  44934c:	str	w0, [sp, #52]
  449350:	b	4494b0 <devnode_acl+0x364>
  449354:	ldr	x0, [sp, #72]
  449358:	add	x1, sp, #0x50
  44935c:	bl	40a7b0 <acl_get_permset@plt>
  449360:	cmp	w0, #0x0
  449364:	b.ge	44937c <devnode_acl+0x230>  // b.tcont
  449368:	bl	40b040 <__errno_location@plt>
  44936c:	ldr	w0, [x0]
  449370:	neg	w0, w0
  449374:	str	w0, [sp, #52]
  449378:	b	4494b0 <devnode_acl+0x364>
  44937c:	ldr	x0, [sp, #80]
  449380:	mov	w1, #0x4                   	// #4
  449384:	bl	40b900 <acl_get_perm@plt>
  449388:	str	w0, [sp, #56]
  44938c:	ldr	w0, [sp, #56]
  449390:	cmp	w0, #0x0
  449394:	b.ge	4493ac <devnode_acl+0x260>  // b.tcont
  449398:	bl	40b040 <__errno_location@plt>
  44939c:	ldr	w0, [x0]
  4493a0:	neg	w0, w0
  4493a4:	str	w0, [sp, #52]
  4493a8:	b	4494b0 <devnode_acl+0x364>
  4493ac:	ldr	x0, [sp, #80]
  4493b0:	mov	w1, #0x2                   	// #2
  4493b4:	bl	40b900 <acl_get_perm@plt>
  4493b8:	str	w0, [sp, #60]
  4493bc:	ldr	w0, [sp, #60]
  4493c0:	cmp	w0, #0x0
  4493c4:	b.ge	4493dc <devnode_acl+0x290>  // b.tcont
  4493c8:	bl	40b040 <__errno_location@plt>
  4493cc:	ldr	w0, [x0]
  4493d0:	neg	w0, w0
  4493d4:	str	w0, [sp, #52]
  4493d8:	b	4494b0 <devnode_acl+0x364>
  4493dc:	ldr	w0, [sp, #56]
  4493e0:	cmp	w0, #0x0
  4493e4:	b.eq	4493f4 <devnode_acl+0x2a8>  // b.none
  4493e8:	ldr	w0, [sp, #60]
  4493ec:	cmp	w0, #0x0
  4493f0:	b.ne	449424 <devnode_acl+0x2d8>  // b.any
  4493f4:	ldr	x0, [sp, #80]
  4493f8:	mov	w1, #0x6                   	// #6
  4493fc:	bl	40ae40 <acl_add_perm@plt>
  449400:	cmp	w0, #0x0
  449404:	b.ge	44941c <devnode_acl+0x2d0>  // b.tcont
  449408:	bl	40b040 <__errno_location@plt>
  44940c:	ldr	w0, [x0]
  449410:	neg	w0, w0
  449414:	str	w0, [sp, #52]
  449418:	b	4494b0 <devnode_acl+0x364>
  44941c:	mov	w0, #0x1                   	// #1
  449420:	strb	w0, [sp, #51]
  449424:	ldrb	w0, [sp, #51]
  449428:	eor	w0, w0, #0x1
  44942c:	and	w0, w0, #0xff
  449430:	cmp	w0, #0x0
  449434:	b.ne	4494ac <devnode_acl+0x360>  // b.any
  449438:	add	x0, sp, #0x40
  44943c:	bl	40b230 <acl_calc_mask@plt>
  449440:	cmp	w0, #0x0
  449444:	b.ge	44945c <devnode_acl+0x310>  // b.tcont
  449448:	bl	40b040 <__errno_location@plt>
  44944c:	ldr	w0, [x0]
  449450:	neg	w0, w0
  449454:	str	w0, [sp, #52]
  449458:	b	4494b0 <devnode_acl+0x364>
  44945c:	ldr	x0, [sp, #64]
  449460:	mov	x2, x0
  449464:	mov	w1, #0x8000                	// #32768
  449468:	ldr	x0, [sp, #40]
  44946c:	bl	40b4e0 <acl_set_file@plt>
  449470:	cmp	w0, #0x0
  449474:	b.ge	44948c <devnode_acl+0x340>  // b.tcont
  449478:	bl	40b040 <__errno_location@plt>
  44947c:	ldr	w0, [x0]
  449480:	neg	w0, w0
  449484:	str	w0, [sp, #52]
  449488:	b	4494b0 <devnode_acl+0x364>
  44948c:	str	wzr, [sp, #52]
  449490:	b	4494b0 <devnode_acl+0x364>
  449494:	nop
  449498:	b	4494b0 <devnode_acl+0x364>
  44949c:	nop
  4494a0:	b	4494b0 <devnode_acl+0x364>
  4494a4:	nop
  4494a8:	b	4494b0 <devnode_acl+0x364>
  4494ac:	nop
  4494b0:	ldr	x0, [sp, #64]
  4494b4:	bl	40bac0 <acl_free@plt>
  4494b8:	ldr	w0, [sp, #52]
  4494bc:	mov	w1, w0
  4494c0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4494c4:	ldr	x0, [x0, #4032]
  4494c8:	ldr	x2, [sp, #88]
  4494cc:	ldr	x0, [x0]
  4494d0:	eor	x0, x2, x0
  4494d4:	cmp	x0, #0x0
  4494d8:	b.eq	4494e0 <devnode_acl+0x394>  // b.none
  4494dc:	bl	40b280 <__stack_chk_fail@plt>
  4494e0:	mov	w0, w1
  4494e4:	ldp	x29, x30, [sp], #96
  4494e8:	ret

00000000004494ec <freep>:
  4494ec:	stp	x29, x30, [sp, #-32]!
  4494f0:	mov	x29, sp
  4494f4:	str	x0, [sp, #24]
  4494f8:	ldr	x0, [sp, #24]
  4494fc:	ldr	x0, [x0]
  449500:	bl	40ba20 <free@plt>
  449504:	nop
  449508:	ldp	x29, x30, [sp], #32
  44950c:	ret

0000000000449510 <size_multiply_overflow>:
  449510:	sub	sp, sp, #0x10
  449514:	str	x0, [sp, #8]
  449518:	str	x1, [sp]
  44951c:	ldr	x0, [sp]
  449520:	cmp	x0, #0x0
  449524:	cset	w0, ne  // ne = any
  449528:	and	w0, w0, #0xff
  44952c:	and	x0, x0, #0xff
  449530:	cmp	x0, #0x0
  449534:	b.eq	449578 <size_multiply_overflow+0x68>  // b.none
  449538:	mov	x2, #0x0                   	// #0
  44953c:	ldr	x1, [sp, #8]
  449540:	ldr	x0, [sp]
  449544:	umulh	x0, x1, x0
  449548:	cmp	x0, #0x0
  44954c:	b.eq	449554 <size_multiply_overflow+0x44>  // b.none
  449550:	mov	x2, #0x1                   	// #1
  449554:	mov	x0, x2
  449558:	cmp	x0, #0x0
  44955c:	cset	w0, ne  // ne = any
  449560:	and	w0, w0, #0xff
  449564:	and	x0, x0, #0xff
  449568:	cmp	x0, #0x0
  44956c:	b.eq	449578 <size_multiply_overflow+0x68>  // b.none
  449570:	mov	w0, #0x1                   	// #1
  449574:	b	44957c <size_multiply_overflow+0x6c>
  449578:	mov	w0, #0x0                   	// #0
  44957c:	and	w0, w0, #0x1
  449580:	and	w0, w0, #0xff
  449584:	add	sp, sp, #0x10
  449588:	ret

000000000044958c <malloc_multiply>:
  44958c:	stp	x29, x30, [sp, #-32]!
  449590:	mov	x29, sp
  449594:	str	x0, [sp, #24]
  449598:	str	x1, [sp, #16]
  44959c:	ldr	x1, [sp, #16]
  4495a0:	ldr	x0, [sp, #24]
  4495a4:	bl	449510 <size_multiply_overflow>
  4495a8:	and	w0, w0, #0xff
  4495ac:	cmp	w0, #0x0
  4495b0:	b.eq	4495bc <malloc_multiply+0x30>  // b.none
  4495b4:	mov	x0, #0x0                   	// #0
  4495b8:	b	4495d8 <malloc_multiply+0x4c>
  4495bc:	ldr	x1, [sp, #24]
  4495c0:	ldr	x0, [sp, #16]
  4495c4:	mul	x0, x1, x0
  4495c8:	cmp	x0, #0x0
  4495cc:	b.ne	4495d4 <malloc_multiply+0x48>  // b.any
  4495d0:	mov	x0, #0x1                   	// #1
  4495d4:	bl	40b480 <malloc@plt>
  4495d8:	ldp	x29, x30, [sp], #32
  4495dc:	ret

00000000004495e0 <isempty>:
  4495e0:	sub	sp, sp, #0x10
  4495e4:	str	x0, [sp, #8]
  4495e8:	ldr	x0, [sp, #8]
  4495ec:	cmp	x0, #0x0
  4495f0:	b.eq	449604 <isempty+0x24>  // b.none
  4495f4:	ldr	x0, [sp, #8]
  4495f8:	ldrb	w0, [x0]
  4495fc:	cmp	w0, #0x0
  449600:	b.ne	44960c <isempty+0x2c>  // b.any
  449604:	mov	w0, #0x1                   	// #1
  449608:	b	449610 <isempty+0x30>
  44960c:	mov	w0, #0x0                   	// #0
  449610:	and	w0, w0, #0x1
  449614:	and	w0, w0, #0xff
  449618:	add	sp, sp, #0x10
  44961c:	ret

0000000000449620 <startswith>:
  449620:	stp	x29, x30, [sp, #-48]!
  449624:	mov	x29, sp
  449628:	str	x0, [sp, #24]
  44962c:	str	x1, [sp, #16]
  449630:	ldr	x0, [sp, #16]
  449634:	bl	40bd10 <strlen@plt>
  449638:	str	x0, [sp, #40]
  44963c:	ldr	x2, [sp, #40]
  449640:	ldr	x1, [sp, #16]
  449644:	ldr	x0, [sp, #24]
  449648:	bl	40ae00 <strncmp@plt>
  44964c:	cmp	w0, #0x0
  449650:	b.ne	449664 <startswith+0x44>  // b.any
  449654:	ldr	x1, [sp, #24]
  449658:	ldr	x0, [sp, #40]
  44965c:	add	x0, x1, x0
  449660:	b	449668 <startswith+0x48>
  449664:	mov	x0, #0x0                   	// #0
  449668:	ldp	x29, x30, [sp], #48
  44966c:	ret

0000000000449670 <strv_freep>:
  449670:	stp	x29, x30, [sp, #-32]!
  449674:	mov	x29, sp
  449678:	str	x0, [sp, #24]
  44967c:	ldr	x0, [sp, #24]
  449680:	ldr	x0, [x0]
  449684:	cmp	x0, #0x0
  449688:	b.eq	449698 <strv_freep+0x28>  // b.none
  44968c:	ldr	x0, [sp, #24]
  449690:	ldr	x0, [x0]
  449694:	bl	40b080 <strv_free@plt>
  449698:	nop
  44969c:	ldp	x29, x30, [sp], #32
  4496a0:	ret

00000000004496a4 <strv_split>:
  4496a4:	stp	x29, x30, [sp, #-32]!
  4496a8:	mov	x29, sp
  4496ac:	str	x0, [sp, #24]
  4496b0:	str	x1, [sp, #16]
  4496b4:	mov	w2, #0x0                   	// #0
  4496b8:	ldr	x1, [sp, #16]
  4496bc:	ldr	x0, [sp, #24]
  4496c0:	bl	40a7f0 <strv_split_full@plt>
  4496c4:	ldp	x29, x30, [sp], #32
  4496c8:	ret

00000000004496cc <closep>:
  4496cc:	stp	x29, x30, [sp, #-32]!
  4496d0:	mov	x29, sp
  4496d4:	str	x0, [sp, #24]
  4496d8:	ldr	x0, [sp, #24]
  4496dc:	ldr	w0, [x0]
  4496e0:	bl	40aad0 <safe_close@plt>
  4496e4:	nop
  4496e8:	ldp	x29, x30, [sp], #32
  4496ec:	ret

00000000004496f0 <closedirp>:
  4496f0:	stp	x29, x30, [sp, #-32]!
  4496f4:	mov	x29, sp
  4496f8:	str	x0, [sp, #24]
  4496fc:	ldr	x0, [sp, #24]
  449700:	ldr	x0, [x0]
  449704:	cmp	x0, #0x0
  449708:	b.eq	449718 <closedirp+0x28>  // b.none
  44970c:	ldr	x0, [sp, #24]
  449710:	ldr	x0, [x0]
  449714:	bl	40adc0 <closedir@plt>
  449718:	nop
  44971c:	ldp	x29, x30, [sp], #32
  449720:	ret

0000000000449724 <safe_atou>:
  449724:	stp	x29, x30, [sp, #-32]!
  449728:	mov	x29, sp
  44972c:	str	x0, [sp, #24]
  449730:	str	x1, [sp, #16]
  449734:	ldr	x2, [sp, #16]
  449738:	mov	w1, #0x0                   	// #0
  44973c:	ldr	x0, [sp, #24]
  449740:	bl	40b4a0 <safe_atou_full@plt>
  449744:	ldp	x29, x30, [sp], #32
  449748:	ret

000000000044974c <sd_pid_get_session>:
  44974c:	stp	x29, x30, [sp, #-48]!
  449750:	mov	x29, sp
  449754:	str	w0, [sp, #28]
  449758:	str	x1, [sp, #16]
  44975c:	ldr	w0, [sp, #28]
  449760:	mvn	w0, w0
  449764:	lsr	w0, w0, #31
  449768:	and	w0, w0, #0xff
  44976c:	and	x0, x0, #0xff
  449770:	cmp	x0, #0x0
  449774:	b.ne	4497a8 <sd_pid_get_session+0x5c>  // b.any
  449778:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44977c:	add	x1, x0, #0x34b
  449780:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449784:	add	x4, x0, #0x710
  449788:	mov	w3, #0x2b                  	// #43
  44978c:	mov	x2, x1
  449790:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449794:	add	x1, x0, #0x370
  449798:	mov	w0, #0x1                   	// #1
  44979c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  4497a0:	mov	w0, #0x1                   	// #1
  4497a4:	b	4497ac <sd_pid_get_session+0x60>
  4497a8:	mov	w0, #0x0                   	// #0
  4497ac:	cmp	w0, #0x0
  4497b0:	b.eq	4497bc <sd_pid_get_session+0x70>  // b.none
  4497b4:	mov	w0, #0xffffffea            	// #-22
  4497b8:	b	44986c <sd_pid_get_session+0x120>
  4497bc:	ldr	x0, [sp, #16]
  4497c0:	cmp	x0, #0x0
  4497c4:	cset	w0, ne  // ne = any
  4497c8:	and	w0, w0, #0xff
  4497cc:	and	x0, x0, #0xff
  4497d0:	cmp	x0, #0x0
  4497d4:	b.ne	449808 <sd_pid_get_session+0xbc>  // b.any
  4497d8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4497dc:	add	x1, x0, #0x34b
  4497e0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4497e4:	add	x4, x0, #0x710
  4497e8:	mov	w3, #0x2c                  	// #44
  4497ec:	mov	x2, x1
  4497f0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4497f4:	add	x1, x0, #0x380
  4497f8:	mov	w0, #0x1                   	// #1
  4497fc:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449800:	mov	w0, #0x1                   	// #1
  449804:	b	44980c <sd_pid_get_session+0xc0>
  449808:	mov	w0, #0x0                   	// #0
  44980c:	cmp	w0, #0x0
  449810:	b.eq	44981c <sd_pid_get_session+0xd0>  // b.none
  449814:	mov	w0, #0xffffffea            	// #-22
  449818:	b	44986c <sd_pid_get_session+0x120>
  44981c:	ldr	x1, [sp, #16]
  449820:	ldr	w0, [sp, #28]
  449824:	bl	40ac10 <cg_pid_get_session@plt>
  449828:	str	w0, [sp, #44]
  44982c:	strb	wzr, [sp, #43]
  449830:	ldr	w0, [sp, #44]
  449834:	cmn	w0, #0x7b
  449838:	b.eq	449848 <sd_pid_get_session+0xfc>  // b.none
  44983c:	ldr	w0, [sp, #44]
  449840:	cmn	w0, #0x6
  449844:	b.ne	449850 <sd_pid_get_session+0x104>  // b.any
  449848:	mov	w0, #0x1                   	// #1
  44984c:	strb	w0, [sp, #43]
  449850:	nop
  449854:	ldrb	w0, [sp, #43]
  449858:	cmp	w0, #0x0
  44985c:	b.ne	449868 <sd_pid_get_session+0x11c>  // b.any
  449860:	ldr	w0, [sp, #44]
  449864:	b	44986c <sd_pid_get_session+0x120>
  449868:	mov	w0, #0xffffffc3            	// #-61
  44986c:	ldp	x29, x30, [sp], #48
  449870:	ret

0000000000449874 <sd_pid_get_unit>:
  449874:	stp	x29, x30, [sp, #-48]!
  449878:	mov	x29, sp
  44987c:	str	w0, [sp, #28]
  449880:	str	x1, [sp, #16]
  449884:	ldr	w0, [sp, #28]
  449888:	mvn	w0, w0
  44988c:	lsr	w0, w0, #31
  449890:	and	w0, w0, #0xff
  449894:	and	x0, x0, #0xff
  449898:	cmp	x0, #0x0
  44989c:	b.ne	4498d0 <sd_pid_get_unit+0x5c>  // b.any
  4498a0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4498a4:	add	x1, x0, #0x34b
  4498a8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4498ac:	add	x4, x0, #0x728
  4498b0:	mov	w3, #0x35                  	// #53
  4498b4:	mov	x2, x1
  4498b8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4498bc:	add	x1, x0, #0x370
  4498c0:	mov	w0, #0x1                   	// #1
  4498c4:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  4498c8:	mov	w0, #0x1                   	// #1
  4498cc:	b	4498d4 <sd_pid_get_unit+0x60>
  4498d0:	mov	w0, #0x0                   	// #0
  4498d4:	cmp	w0, #0x0
  4498d8:	b.eq	4498e4 <sd_pid_get_unit+0x70>  // b.none
  4498dc:	mov	w0, #0xffffffea            	// #-22
  4498e0:	b	449994 <sd_pid_get_unit+0x120>
  4498e4:	ldr	x0, [sp, #16]
  4498e8:	cmp	x0, #0x0
  4498ec:	cset	w0, ne  // ne = any
  4498f0:	and	w0, w0, #0xff
  4498f4:	and	x0, x0, #0xff
  4498f8:	cmp	x0, #0x0
  4498fc:	b.ne	449930 <sd_pid_get_unit+0xbc>  // b.any
  449900:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449904:	add	x1, x0, #0x34b
  449908:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44990c:	add	x4, x0, #0x728
  449910:	mov	w3, #0x36                  	// #54
  449914:	mov	x2, x1
  449918:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44991c:	add	x1, x0, #0x388
  449920:	mov	w0, #0x1                   	// #1
  449924:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449928:	mov	w0, #0x1                   	// #1
  44992c:	b	449934 <sd_pid_get_unit+0xc0>
  449930:	mov	w0, #0x0                   	// #0
  449934:	cmp	w0, #0x0
  449938:	b.eq	449944 <sd_pid_get_unit+0xd0>  // b.none
  44993c:	mov	w0, #0xffffffea            	// #-22
  449940:	b	449994 <sd_pid_get_unit+0x120>
  449944:	ldr	x1, [sp, #16]
  449948:	ldr	w0, [sp, #28]
  44994c:	bl	40b9b0 <cg_pid_get_unit@plt>
  449950:	str	w0, [sp, #44]
  449954:	strb	wzr, [sp, #43]
  449958:	ldr	w0, [sp, #44]
  44995c:	cmn	w0, #0x7b
  449960:	b.eq	449970 <sd_pid_get_unit+0xfc>  // b.none
  449964:	ldr	w0, [sp, #44]
  449968:	cmn	w0, #0x6
  44996c:	b.ne	449978 <sd_pid_get_unit+0x104>  // b.any
  449970:	mov	w0, #0x1                   	// #1
  449974:	strb	w0, [sp, #43]
  449978:	nop
  44997c:	ldrb	w0, [sp, #43]
  449980:	cmp	w0, #0x0
  449984:	b.ne	449990 <sd_pid_get_unit+0x11c>  // b.any
  449988:	ldr	w0, [sp, #44]
  44998c:	b	449994 <sd_pid_get_unit+0x120>
  449990:	mov	w0, #0xffffffc3            	// #-61
  449994:	ldp	x29, x30, [sp], #48
  449998:	ret

000000000044999c <sd_pid_get_user_unit>:
  44999c:	stp	x29, x30, [sp, #-48]!
  4499a0:	mov	x29, sp
  4499a4:	str	w0, [sp, #28]
  4499a8:	str	x1, [sp, #16]
  4499ac:	ldr	w0, [sp, #28]
  4499b0:	mvn	w0, w0
  4499b4:	lsr	w0, w0, #31
  4499b8:	and	w0, w0, #0xff
  4499bc:	and	x0, x0, #0xff
  4499c0:	cmp	x0, #0x0
  4499c4:	b.ne	4499f8 <sd_pid_get_user_unit+0x5c>  // b.any
  4499c8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4499cc:	add	x1, x0, #0x34b
  4499d0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4499d4:	add	x4, x0, #0x738
  4499d8:	mov	w3, #0x3f                  	// #63
  4499dc:	mov	x2, x1
  4499e0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4499e4:	add	x1, x0, #0x370
  4499e8:	mov	w0, #0x1                   	// #1
  4499ec:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  4499f0:	mov	w0, #0x1                   	// #1
  4499f4:	b	4499fc <sd_pid_get_user_unit+0x60>
  4499f8:	mov	w0, #0x0                   	// #0
  4499fc:	cmp	w0, #0x0
  449a00:	b.eq	449a0c <sd_pid_get_user_unit+0x70>  // b.none
  449a04:	mov	w0, #0xffffffea            	// #-22
  449a08:	b	449abc <sd_pid_get_user_unit+0x120>
  449a0c:	ldr	x0, [sp, #16]
  449a10:	cmp	x0, #0x0
  449a14:	cset	w0, ne  // ne = any
  449a18:	and	w0, w0, #0xff
  449a1c:	and	x0, x0, #0xff
  449a20:	cmp	x0, #0x0
  449a24:	b.ne	449a58 <sd_pid_get_user_unit+0xbc>  // b.any
  449a28:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449a2c:	add	x1, x0, #0x34b
  449a30:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449a34:	add	x4, x0, #0x738
  449a38:	mov	w3, #0x40                  	// #64
  449a3c:	mov	x2, x1
  449a40:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449a44:	add	x1, x0, #0x388
  449a48:	mov	w0, #0x1                   	// #1
  449a4c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449a50:	mov	w0, #0x1                   	// #1
  449a54:	b	449a5c <sd_pid_get_user_unit+0xc0>
  449a58:	mov	w0, #0x0                   	// #0
  449a5c:	cmp	w0, #0x0
  449a60:	b.eq	449a6c <sd_pid_get_user_unit+0xd0>  // b.none
  449a64:	mov	w0, #0xffffffea            	// #-22
  449a68:	b	449abc <sd_pid_get_user_unit+0x120>
  449a6c:	ldr	x1, [sp, #16]
  449a70:	ldr	w0, [sp, #28]
  449a74:	bl	40b5c0 <cg_pid_get_user_unit@plt>
  449a78:	str	w0, [sp, #44]
  449a7c:	strb	wzr, [sp, #43]
  449a80:	ldr	w0, [sp, #44]
  449a84:	cmn	w0, #0x7b
  449a88:	b.eq	449a98 <sd_pid_get_user_unit+0xfc>  // b.none
  449a8c:	ldr	w0, [sp, #44]
  449a90:	cmn	w0, #0x6
  449a94:	b.ne	449aa0 <sd_pid_get_user_unit+0x104>  // b.any
  449a98:	mov	w0, #0x1                   	// #1
  449a9c:	strb	w0, [sp, #43]
  449aa0:	nop
  449aa4:	ldrb	w0, [sp, #43]
  449aa8:	cmp	w0, #0x0
  449aac:	b.ne	449ab8 <sd_pid_get_user_unit+0x11c>  // b.any
  449ab0:	ldr	w0, [sp, #44]
  449ab4:	b	449abc <sd_pid_get_user_unit+0x120>
  449ab8:	mov	w0, #0xffffffc3            	// #-61
  449abc:	ldp	x29, x30, [sp], #48
  449ac0:	ret

0000000000449ac4 <sd_pid_get_machine_name>:
  449ac4:	stp	x29, x30, [sp, #-48]!
  449ac8:	mov	x29, sp
  449acc:	str	w0, [sp, #28]
  449ad0:	str	x1, [sp, #16]
  449ad4:	ldr	w0, [sp, #28]
  449ad8:	mvn	w0, w0
  449adc:	lsr	w0, w0, #31
  449ae0:	and	w0, w0, #0xff
  449ae4:	and	x0, x0, #0xff
  449ae8:	cmp	x0, #0x0
  449aec:	b.ne	449b20 <sd_pid_get_machine_name+0x5c>  // b.any
  449af0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449af4:	add	x1, x0, #0x34b
  449af8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449afc:	add	x4, x0, #0x750
  449b00:	mov	w3, #0x49                  	// #73
  449b04:	mov	x2, x1
  449b08:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449b0c:	add	x1, x0, #0x370
  449b10:	mov	w0, #0x1                   	// #1
  449b14:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449b18:	mov	w0, #0x1                   	// #1
  449b1c:	b	449b24 <sd_pid_get_machine_name+0x60>
  449b20:	mov	w0, #0x0                   	// #0
  449b24:	cmp	w0, #0x0
  449b28:	b.eq	449b34 <sd_pid_get_machine_name+0x70>  // b.none
  449b2c:	mov	w0, #0xffffffea            	// #-22
  449b30:	b	449be4 <sd_pid_get_machine_name+0x120>
  449b34:	ldr	x0, [sp, #16]
  449b38:	cmp	x0, #0x0
  449b3c:	cset	w0, ne  // ne = any
  449b40:	and	w0, w0, #0xff
  449b44:	and	x0, x0, #0xff
  449b48:	cmp	x0, #0x0
  449b4c:	b.ne	449b80 <sd_pid_get_machine_name+0xbc>  // b.any
  449b50:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449b54:	add	x1, x0, #0x34b
  449b58:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449b5c:	add	x4, x0, #0x750
  449b60:	mov	w3, #0x4a                  	// #74
  449b64:	mov	x2, x1
  449b68:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449b6c:	add	x1, x0, #0x390
  449b70:	mov	w0, #0x1                   	// #1
  449b74:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449b78:	mov	w0, #0x1                   	// #1
  449b7c:	b	449b84 <sd_pid_get_machine_name+0xc0>
  449b80:	mov	w0, #0x0                   	// #0
  449b84:	cmp	w0, #0x0
  449b88:	b.eq	449b94 <sd_pid_get_machine_name+0xd0>  // b.none
  449b8c:	mov	w0, #0xffffffea            	// #-22
  449b90:	b	449be4 <sd_pid_get_machine_name+0x120>
  449b94:	ldr	x1, [sp, #16]
  449b98:	ldr	w0, [sp, #28]
  449b9c:	bl	40a490 <cg_pid_get_machine_name@plt>
  449ba0:	str	w0, [sp, #44]
  449ba4:	strb	wzr, [sp, #43]
  449ba8:	ldr	w0, [sp, #44]
  449bac:	cmn	w0, #0x7b
  449bb0:	b.eq	449bc0 <sd_pid_get_machine_name+0xfc>  // b.none
  449bb4:	ldr	w0, [sp, #44]
  449bb8:	cmn	w0, #0x6
  449bbc:	b.ne	449bc8 <sd_pid_get_machine_name+0x104>  // b.any
  449bc0:	mov	w0, #0x1                   	// #1
  449bc4:	strb	w0, [sp, #43]
  449bc8:	nop
  449bcc:	ldrb	w0, [sp, #43]
  449bd0:	cmp	w0, #0x0
  449bd4:	b.ne	449be0 <sd_pid_get_machine_name+0x11c>  // b.any
  449bd8:	ldr	w0, [sp, #44]
  449bdc:	b	449be4 <sd_pid_get_machine_name+0x120>
  449be0:	mov	w0, #0xffffffc3            	// #-61
  449be4:	ldp	x29, x30, [sp], #48
  449be8:	ret

0000000000449bec <sd_pid_get_slice>:
  449bec:	stp	x29, x30, [sp, #-48]!
  449bf0:	mov	x29, sp
  449bf4:	str	w0, [sp, #28]
  449bf8:	str	x1, [sp, #16]
  449bfc:	ldr	w0, [sp, #28]
  449c00:	mvn	w0, w0
  449c04:	lsr	w0, w0, #31
  449c08:	and	w0, w0, #0xff
  449c0c:	and	x0, x0, #0xff
  449c10:	cmp	x0, #0x0
  449c14:	b.ne	449c48 <sd_pid_get_slice+0x5c>  // b.any
  449c18:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449c1c:	add	x1, x0, #0x34b
  449c20:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449c24:	add	x4, x0, #0x768
  449c28:	mov	w3, #0x53                  	// #83
  449c2c:	mov	x2, x1
  449c30:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449c34:	add	x1, x0, #0x370
  449c38:	mov	w0, #0x1                   	// #1
  449c3c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449c40:	mov	w0, #0x1                   	// #1
  449c44:	b	449c4c <sd_pid_get_slice+0x60>
  449c48:	mov	w0, #0x0                   	// #0
  449c4c:	cmp	w0, #0x0
  449c50:	b.eq	449c5c <sd_pid_get_slice+0x70>  // b.none
  449c54:	mov	w0, #0xffffffea            	// #-22
  449c58:	b	449d0c <sd_pid_get_slice+0x120>
  449c5c:	ldr	x0, [sp, #16]
  449c60:	cmp	x0, #0x0
  449c64:	cset	w0, ne  // ne = any
  449c68:	and	w0, w0, #0xff
  449c6c:	and	x0, x0, #0xff
  449c70:	cmp	x0, #0x0
  449c74:	b.ne	449ca8 <sd_pid_get_slice+0xbc>  // b.any
  449c78:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449c7c:	add	x1, x0, #0x34b
  449c80:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449c84:	add	x4, x0, #0x768
  449c88:	mov	w3, #0x54                  	// #84
  449c8c:	mov	x2, x1
  449c90:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449c94:	add	x1, x0, #0x398
  449c98:	mov	w0, #0x1                   	// #1
  449c9c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449ca0:	mov	w0, #0x1                   	// #1
  449ca4:	b	449cac <sd_pid_get_slice+0xc0>
  449ca8:	mov	w0, #0x0                   	// #0
  449cac:	cmp	w0, #0x0
  449cb0:	b.eq	449cbc <sd_pid_get_slice+0xd0>  // b.none
  449cb4:	mov	w0, #0xffffffea            	// #-22
  449cb8:	b	449d0c <sd_pid_get_slice+0x120>
  449cbc:	ldr	x1, [sp, #16]
  449cc0:	ldr	w0, [sp, #28]
  449cc4:	bl	40a620 <cg_pid_get_slice@plt>
  449cc8:	str	w0, [sp, #44]
  449ccc:	strb	wzr, [sp, #43]
  449cd0:	ldr	w0, [sp, #44]
  449cd4:	cmn	w0, #0x7b
  449cd8:	b.eq	449ce8 <sd_pid_get_slice+0xfc>  // b.none
  449cdc:	ldr	w0, [sp, #44]
  449ce0:	cmn	w0, #0x6
  449ce4:	b.ne	449cf0 <sd_pid_get_slice+0x104>  // b.any
  449ce8:	mov	w0, #0x1                   	// #1
  449cec:	strb	w0, [sp, #43]
  449cf0:	nop
  449cf4:	ldrb	w0, [sp, #43]
  449cf8:	cmp	w0, #0x0
  449cfc:	b.ne	449d08 <sd_pid_get_slice+0x11c>  // b.any
  449d00:	ldr	w0, [sp, #44]
  449d04:	b	449d0c <sd_pid_get_slice+0x120>
  449d08:	mov	w0, #0xffffffc3            	// #-61
  449d0c:	ldp	x29, x30, [sp], #48
  449d10:	ret

0000000000449d14 <sd_pid_get_user_slice>:
  449d14:	stp	x29, x30, [sp, #-48]!
  449d18:	mov	x29, sp
  449d1c:	str	w0, [sp, #28]
  449d20:	str	x1, [sp, #16]
  449d24:	ldr	w0, [sp, #28]
  449d28:	mvn	w0, w0
  449d2c:	lsr	w0, w0, #31
  449d30:	and	w0, w0, #0xff
  449d34:	and	x0, x0, #0xff
  449d38:	cmp	x0, #0x0
  449d3c:	b.ne	449d70 <sd_pid_get_user_slice+0x5c>  // b.any
  449d40:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449d44:	add	x1, x0, #0x34b
  449d48:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449d4c:	add	x4, x0, #0x780
  449d50:	mov	w3, #0x5d                  	// #93
  449d54:	mov	x2, x1
  449d58:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449d5c:	add	x1, x0, #0x370
  449d60:	mov	w0, #0x1                   	// #1
  449d64:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449d68:	mov	w0, #0x1                   	// #1
  449d6c:	b	449d74 <sd_pid_get_user_slice+0x60>
  449d70:	mov	w0, #0x0                   	// #0
  449d74:	cmp	w0, #0x0
  449d78:	b.eq	449d84 <sd_pid_get_user_slice+0x70>  // b.none
  449d7c:	mov	w0, #0xffffffea            	// #-22
  449d80:	b	449e34 <sd_pid_get_user_slice+0x120>
  449d84:	ldr	x0, [sp, #16]
  449d88:	cmp	x0, #0x0
  449d8c:	cset	w0, ne  // ne = any
  449d90:	and	w0, w0, #0xff
  449d94:	and	x0, x0, #0xff
  449d98:	cmp	x0, #0x0
  449d9c:	b.ne	449dd0 <sd_pid_get_user_slice+0xbc>  // b.any
  449da0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449da4:	add	x1, x0, #0x34b
  449da8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449dac:	add	x4, x0, #0x780
  449db0:	mov	w3, #0x5e                  	// #94
  449db4:	mov	x2, x1
  449db8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449dbc:	add	x1, x0, #0x398
  449dc0:	mov	w0, #0x1                   	// #1
  449dc4:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449dc8:	mov	w0, #0x1                   	// #1
  449dcc:	b	449dd4 <sd_pid_get_user_slice+0xc0>
  449dd0:	mov	w0, #0x0                   	// #0
  449dd4:	cmp	w0, #0x0
  449dd8:	b.eq	449de4 <sd_pid_get_user_slice+0xd0>  // b.none
  449ddc:	mov	w0, #0xffffffea            	// #-22
  449de0:	b	449e34 <sd_pid_get_user_slice+0x120>
  449de4:	ldr	x1, [sp, #16]
  449de8:	ldr	w0, [sp, #28]
  449dec:	bl	40ad20 <cg_pid_get_user_slice@plt>
  449df0:	str	w0, [sp, #44]
  449df4:	strb	wzr, [sp, #43]
  449df8:	ldr	w0, [sp, #44]
  449dfc:	cmn	w0, #0x7b
  449e00:	b.eq	449e10 <sd_pid_get_user_slice+0xfc>  // b.none
  449e04:	ldr	w0, [sp, #44]
  449e08:	cmn	w0, #0x6
  449e0c:	b.ne	449e18 <sd_pid_get_user_slice+0x104>  // b.any
  449e10:	mov	w0, #0x1                   	// #1
  449e14:	strb	w0, [sp, #43]
  449e18:	nop
  449e1c:	ldrb	w0, [sp, #43]
  449e20:	cmp	w0, #0x0
  449e24:	b.ne	449e30 <sd_pid_get_user_slice+0x11c>  // b.any
  449e28:	ldr	w0, [sp, #44]
  449e2c:	b	449e34 <sd_pid_get_user_slice+0x120>
  449e30:	mov	w0, #0xffffffc3            	// #-61
  449e34:	ldp	x29, x30, [sp], #48
  449e38:	ret

0000000000449e3c <sd_pid_get_owner_uid>:
  449e3c:	stp	x29, x30, [sp, #-48]!
  449e40:	mov	x29, sp
  449e44:	str	w0, [sp, #28]
  449e48:	str	x1, [sp, #16]
  449e4c:	ldr	w0, [sp, #28]
  449e50:	mvn	w0, w0
  449e54:	lsr	w0, w0, #31
  449e58:	and	w0, w0, #0xff
  449e5c:	and	x0, x0, #0xff
  449e60:	cmp	x0, #0x0
  449e64:	b.ne	449e98 <sd_pid_get_owner_uid+0x5c>  // b.any
  449e68:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449e6c:	add	x1, x0, #0x34b
  449e70:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449e74:	add	x4, x0, #0x798
  449e78:	mov	w3, #0x67                  	// #103
  449e7c:	mov	x2, x1
  449e80:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449e84:	add	x1, x0, #0x370
  449e88:	mov	w0, #0x1                   	// #1
  449e8c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449e90:	mov	w0, #0x1                   	// #1
  449e94:	b	449e9c <sd_pid_get_owner_uid+0x60>
  449e98:	mov	w0, #0x0                   	// #0
  449e9c:	cmp	w0, #0x0
  449ea0:	b.eq	449eac <sd_pid_get_owner_uid+0x70>  // b.none
  449ea4:	mov	w0, #0xffffffea            	// #-22
  449ea8:	b	449f5c <sd_pid_get_owner_uid+0x120>
  449eac:	ldr	x0, [sp, #16]
  449eb0:	cmp	x0, #0x0
  449eb4:	cset	w0, ne  // ne = any
  449eb8:	and	w0, w0, #0xff
  449ebc:	and	x0, x0, #0xff
  449ec0:	cmp	x0, #0x0
  449ec4:	b.ne	449ef8 <sd_pid_get_owner_uid+0xbc>  // b.any
  449ec8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449ecc:	add	x1, x0, #0x34b
  449ed0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449ed4:	add	x4, x0, #0x798
  449ed8:	mov	w3, #0x68                  	// #104
  449edc:	mov	x2, x1
  449ee0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449ee4:	add	x1, x0, #0x3a0
  449ee8:	mov	w0, #0x1                   	// #1
  449eec:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449ef0:	mov	w0, #0x1                   	// #1
  449ef4:	b	449efc <sd_pid_get_owner_uid+0xc0>
  449ef8:	mov	w0, #0x0                   	// #0
  449efc:	cmp	w0, #0x0
  449f00:	b.eq	449f0c <sd_pid_get_owner_uid+0xd0>  // b.none
  449f04:	mov	w0, #0xffffffea            	// #-22
  449f08:	b	449f5c <sd_pid_get_owner_uid+0x120>
  449f0c:	ldr	x1, [sp, #16]
  449f10:	ldr	w0, [sp, #28]
  449f14:	bl	40b2d0 <cg_pid_get_owner_uid@plt>
  449f18:	str	w0, [sp, #44]
  449f1c:	strb	wzr, [sp, #43]
  449f20:	ldr	w0, [sp, #44]
  449f24:	cmn	w0, #0x7b
  449f28:	b.eq	449f38 <sd_pid_get_owner_uid+0xfc>  // b.none
  449f2c:	ldr	w0, [sp, #44]
  449f30:	cmn	w0, #0x6
  449f34:	b.ne	449f40 <sd_pid_get_owner_uid+0x104>  // b.any
  449f38:	mov	w0, #0x1                   	// #1
  449f3c:	strb	w0, [sp, #43]
  449f40:	nop
  449f44:	ldrb	w0, [sp, #43]
  449f48:	cmp	w0, #0x0
  449f4c:	b.ne	449f58 <sd_pid_get_owner_uid+0x11c>  // b.any
  449f50:	ldr	w0, [sp, #44]
  449f54:	b	449f5c <sd_pid_get_owner_uid+0x120>
  449f58:	mov	w0, #0xffffffc3            	// #-61
  449f5c:	ldp	x29, x30, [sp], #48
  449f60:	ret

0000000000449f64 <sd_pid_get_cgroup>:
  449f64:	stp	x29, x30, [sp, #-64]!
  449f68:	mov	x29, sp
  449f6c:	str	w0, [sp, #28]
  449f70:	str	x1, [sp, #16]
  449f74:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  449f78:	ldr	x0, [x0, #4032]
  449f7c:	ldr	x1, [x0]
  449f80:	str	x1, [sp, #56]
  449f84:	mov	x1, #0x0                   	// #0
  449f88:	ldr	w0, [sp, #28]
  449f8c:	mvn	w0, w0
  449f90:	lsr	w0, w0, #31
  449f94:	and	w0, w0, #0xff
  449f98:	and	x0, x0, #0xff
  449f9c:	cmp	x0, #0x0
  449fa0:	b.ne	449fd4 <sd_pid_get_cgroup+0x70>  // b.any
  449fa4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449fa8:	add	x1, x0, #0x34b
  449fac:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449fb0:	add	x4, x0, #0x7b0
  449fb4:	mov	w3, #0x72                  	// #114
  449fb8:	mov	x2, x1
  449fbc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  449fc0:	add	x1, x0, #0x370
  449fc4:	mov	w0, #0x1                   	// #1
  449fc8:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  449fcc:	mov	w0, #0x1                   	// #1
  449fd0:	b	449fd8 <sd_pid_get_cgroup+0x74>
  449fd4:	mov	w0, #0x0                   	// #0
  449fd8:	cmp	w0, #0x0
  449fdc:	b.eq	449fe8 <sd_pid_get_cgroup+0x84>  // b.none
  449fe0:	mov	w0, #0xffffffea            	// #-22
  449fe4:	b	44a0c8 <sd_pid_get_cgroup+0x164>
  449fe8:	ldr	x0, [sp, #16]
  449fec:	cmp	x0, #0x0
  449ff0:	cset	w0, ne  // ne = any
  449ff4:	and	w0, w0, #0xff
  449ff8:	and	x0, x0, #0xff
  449ffc:	cmp	x0, #0x0
  44a000:	b.ne	44a034 <sd_pid_get_cgroup+0xd0>  // b.any
  44a004:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a008:	add	x1, x0, #0x34b
  44a00c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a010:	add	x4, x0, #0x7b0
  44a014:	mov	w3, #0x73                  	// #115
  44a018:	mov	x2, x1
  44a01c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a020:	add	x1, x0, #0x3a8
  44a024:	mov	w0, #0x1                   	// #1
  44a028:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a02c:	mov	w0, #0x1                   	// #1
  44a030:	b	44a038 <sd_pid_get_cgroup+0xd4>
  44a034:	mov	w0, #0x0                   	// #0
  44a038:	cmp	w0, #0x0
  44a03c:	b.eq	44a048 <sd_pid_get_cgroup+0xe4>  // b.none
  44a040:	mov	w0, #0xffffffea            	// #-22
  44a044:	b	44a0c8 <sd_pid_get_cgroup+0x164>
  44a048:	add	x0, sp, #0x30
  44a04c:	mov	x2, x0
  44a050:	ldr	w1, [sp, #28]
  44a054:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a058:	add	x0, x0, #0x3b0
  44a05c:	bl	40a4a0 <cg_pid_get_path@plt>
  44a060:	str	w0, [sp, #44]
  44a064:	ldr	w0, [sp, #44]
  44a068:	cmp	w0, #0x0
  44a06c:	b.ge	44a078 <sd_pid_get_cgroup+0x114>  // b.tcont
  44a070:	ldr	w0, [sp, #44]
  44a074:	b	44a0c8 <sd_pid_get_cgroup+0x164>
  44a078:	ldr	x0, [sp, #48]
  44a07c:	bl	4495e0 <isempty>
  44a080:	and	w0, w0, #0xff
  44a084:	cmp	w0, #0x0
  44a088:	b.eq	44a0b8 <sd_pid_get_cgroup+0x154>  // b.none
  44a08c:	ldr	x0, [sp, #48]
  44a090:	bl	40ba20 <free@plt>
  44a094:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a098:	add	x0, x0, #0x3c0
  44a09c:	bl	40b7c0 <strdup@plt>
  44a0a0:	str	x0, [sp, #48]
  44a0a4:	ldr	x0, [sp, #48]
  44a0a8:	cmp	x0, #0x0
  44a0ac:	b.ne	44a0b8 <sd_pid_get_cgroup+0x154>  // b.any
  44a0b0:	mov	w0, #0xfffffff4            	// #-12
  44a0b4:	b	44a0c8 <sd_pid_get_cgroup+0x164>
  44a0b8:	ldr	x1, [sp, #48]
  44a0bc:	ldr	x0, [sp, #16]
  44a0c0:	str	x1, [x0]
  44a0c4:	mov	w0, #0x0                   	// #0
  44a0c8:	mov	w1, w0
  44a0cc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a0d0:	ldr	x0, [x0, #4032]
  44a0d4:	ldr	x2, [sp, #56]
  44a0d8:	ldr	x0, [x0]
  44a0dc:	eor	x0, x2, x0
  44a0e0:	cmp	x0, #0x0
  44a0e4:	b.eq	44a0ec <sd_pid_get_cgroup+0x188>  // b.none
  44a0e8:	bl	40b280 <__stack_chk_fail@plt>
  44a0ec:	mov	w0, w1
  44a0f0:	ldp	x29, x30, [sp], #64
  44a0f4:	ret

000000000044a0f8 <sd_peer_get_session>:
  44a0f8:	stp	x29, x30, [sp, #-64]!
  44a0fc:	mov	x29, sp
  44a100:	str	w0, [sp, #28]
  44a104:	str	x1, [sp, #16]
  44a108:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a10c:	ldr	x0, [x0, #4032]
  44a110:	ldr	x1, [x0]
  44a114:	str	x1, [sp, #56]
  44a118:	mov	x1, #0x0                   	// #0
  44a11c:	str	xzr, [sp, #40]
  44a120:	str	wzr, [sp, #48]
  44a124:	ldr	w0, [sp, #28]
  44a128:	mvn	w0, w0
  44a12c:	lsr	w0, w0, #31
  44a130:	and	w0, w0, #0xff
  44a134:	and	x0, x0, #0xff
  44a138:	cmp	x0, #0x0
  44a13c:	b.ne	44a170 <sd_peer_get_session+0x78>  // b.any
  44a140:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a144:	add	x1, x0, #0x34b
  44a148:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a14c:	add	x4, x0, #0x7c8
  44a150:	mov	w3, #0x8c                  	// #140
  44a154:	mov	x2, x1
  44a158:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a15c:	add	x1, x0, #0x3c8
  44a160:	mov	w0, #0x1                   	// #1
  44a164:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a168:	mov	w0, #0x1                   	// #1
  44a16c:	b	44a174 <sd_peer_get_session+0x7c>
  44a170:	mov	w0, #0x0                   	// #0
  44a174:	cmp	w0, #0x0
  44a178:	b.eq	44a184 <sd_peer_get_session+0x8c>  // b.none
  44a17c:	mov	w0, #0xfffffff7            	// #-9
  44a180:	b	44a218 <sd_peer_get_session+0x120>
  44a184:	ldr	x0, [sp, #16]
  44a188:	cmp	x0, #0x0
  44a18c:	cset	w0, ne  // ne = any
  44a190:	and	w0, w0, #0xff
  44a194:	and	x0, x0, #0xff
  44a198:	cmp	x0, #0x0
  44a19c:	b.ne	44a1d0 <sd_peer_get_session+0xd8>  // b.any
  44a1a0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a1a4:	add	x1, x0, #0x34b
  44a1a8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a1ac:	add	x4, x0, #0x7c8
  44a1b0:	mov	w3, #0x8d                  	// #141
  44a1b4:	mov	x2, x1
  44a1b8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a1bc:	add	x1, x0, #0x380
  44a1c0:	mov	w0, #0x1                   	// #1
  44a1c4:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a1c8:	mov	w0, #0x1                   	// #1
  44a1cc:	b	44a1d4 <sd_peer_get_session+0xdc>
  44a1d0:	mov	w0, #0x0                   	// #0
  44a1d4:	cmp	w0, #0x0
  44a1d8:	b.eq	44a1e4 <sd_peer_get_session+0xec>  // b.none
  44a1dc:	mov	w0, #0xffffffea            	// #-22
  44a1e0:	b	44a218 <sd_peer_get_session+0x120>
  44a1e4:	add	x0, sp, #0x28
  44a1e8:	mov	x1, x0
  44a1ec:	ldr	w0, [sp, #28]
  44a1f0:	bl	40b5b0 <getpeercred@plt>
  44a1f4:	str	w0, [sp, #36]
  44a1f8:	ldr	w0, [sp, #36]
  44a1fc:	cmp	w0, #0x0
  44a200:	b.ge	44a20c <sd_peer_get_session+0x114>  // b.tcont
  44a204:	ldr	w0, [sp, #36]
  44a208:	b	44a218 <sd_peer_get_session+0x120>
  44a20c:	ldr	w0, [sp, #40]
  44a210:	ldr	x1, [sp, #16]
  44a214:	bl	40ac10 <cg_pid_get_session@plt>
  44a218:	mov	w1, w0
  44a21c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a220:	ldr	x0, [x0, #4032]
  44a224:	ldr	x2, [sp, #56]
  44a228:	ldr	x0, [x0]
  44a22c:	eor	x0, x2, x0
  44a230:	cmp	x0, #0x0
  44a234:	b.eq	44a23c <sd_peer_get_session+0x144>  // b.none
  44a238:	bl	40b280 <__stack_chk_fail@plt>
  44a23c:	mov	w0, w1
  44a240:	ldp	x29, x30, [sp], #64
  44a244:	ret

000000000044a248 <sd_peer_get_owner_uid>:
  44a248:	stp	x29, x30, [sp, #-64]!
  44a24c:	mov	x29, sp
  44a250:	str	w0, [sp, #28]
  44a254:	str	x1, [sp, #16]
  44a258:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a25c:	ldr	x0, [x0, #4032]
  44a260:	ldr	x1, [x0]
  44a264:	str	x1, [sp, #56]
  44a268:	mov	x1, #0x0                   	// #0
  44a26c:	ldr	w0, [sp, #28]
  44a270:	mvn	w0, w0
  44a274:	lsr	w0, w0, #31
  44a278:	and	w0, w0, #0xff
  44a27c:	and	x0, x0, #0xff
  44a280:	cmp	x0, #0x0
  44a284:	b.ne	44a2b8 <sd_peer_get_owner_uid+0x70>  // b.any
  44a288:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a28c:	add	x1, x0, #0x34b
  44a290:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a294:	add	x4, x0, #0x7e0
  44a298:	mov	w3, #0x9a                  	// #154
  44a29c:	mov	x2, x1
  44a2a0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a2a4:	add	x1, x0, #0x3c8
  44a2a8:	mov	w0, #0x1                   	// #1
  44a2ac:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a2b0:	mov	w0, #0x1                   	// #1
  44a2b4:	b	44a2bc <sd_peer_get_owner_uid+0x74>
  44a2b8:	mov	w0, #0x0                   	// #0
  44a2bc:	cmp	w0, #0x0
  44a2c0:	b.eq	44a2cc <sd_peer_get_owner_uid+0x84>  // b.none
  44a2c4:	mov	w0, #0xfffffff7            	// #-9
  44a2c8:	b	44a360 <sd_peer_get_owner_uid+0x118>
  44a2cc:	ldr	x0, [sp, #16]
  44a2d0:	cmp	x0, #0x0
  44a2d4:	cset	w0, ne  // ne = any
  44a2d8:	and	w0, w0, #0xff
  44a2dc:	and	x0, x0, #0xff
  44a2e0:	cmp	x0, #0x0
  44a2e4:	b.ne	44a318 <sd_peer_get_owner_uid+0xd0>  // b.any
  44a2e8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a2ec:	add	x1, x0, #0x34b
  44a2f0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a2f4:	add	x4, x0, #0x7e0
  44a2f8:	mov	w3, #0x9b                  	// #155
  44a2fc:	mov	x2, x1
  44a300:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a304:	add	x1, x0, #0x3a0
  44a308:	mov	w0, #0x1                   	// #1
  44a30c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a310:	mov	w0, #0x1                   	// #1
  44a314:	b	44a31c <sd_peer_get_owner_uid+0xd4>
  44a318:	mov	w0, #0x0                   	// #0
  44a31c:	cmp	w0, #0x0
  44a320:	b.eq	44a32c <sd_peer_get_owner_uid+0xe4>  // b.none
  44a324:	mov	w0, #0xffffffea            	// #-22
  44a328:	b	44a360 <sd_peer_get_owner_uid+0x118>
  44a32c:	add	x0, sp, #0x28
  44a330:	mov	x1, x0
  44a334:	ldr	w0, [sp, #28]
  44a338:	bl	40b5b0 <getpeercred@plt>
  44a33c:	str	w0, [sp, #36]
  44a340:	ldr	w0, [sp, #36]
  44a344:	cmp	w0, #0x0
  44a348:	b.ge	44a354 <sd_peer_get_owner_uid+0x10c>  // b.tcont
  44a34c:	ldr	w0, [sp, #36]
  44a350:	b	44a360 <sd_peer_get_owner_uid+0x118>
  44a354:	ldr	w0, [sp, #40]
  44a358:	ldr	x1, [sp, #16]
  44a35c:	bl	40b2d0 <cg_pid_get_owner_uid@plt>
  44a360:	mov	w1, w0
  44a364:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a368:	ldr	x0, [x0, #4032]
  44a36c:	ldr	x2, [sp, #56]
  44a370:	ldr	x0, [x0]
  44a374:	eor	x0, x2, x0
  44a378:	cmp	x0, #0x0
  44a37c:	b.eq	44a384 <sd_peer_get_owner_uid+0x13c>  // b.none
  44a380:	bl	40b280 <__stack_chk_fail@plt>
  44a384:	mov	w0, w1
  44a388:	ldp	x29, x30, [sp], #64
  44a38c:	ret

000000000044a390 <sd_peer_get_unit>:
  44a390:	stp	x29, x30, [sp, #-64]!
  44a394:	mov	x29, sp
  44a398:	str	w0, [sp, #28]
  44a39c:	str	x1, [sp, #16]
  44a3a0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a3a4:	ldr	x0, [x0, #4032]
  44a3a8:	ldr	x1, [x0]
  44a3ac:	str	x1, [sp, #56]
  44a3b0:	mov	x1, #0x0                   	// #0
  44a3b4:	ldr	w0, [sp, #28]
  44a3b8:	mvn	w0, w0
  44a3bc:	lsr	w0, w0, #31
  44a3c0:	and	w0, w0, #0xff
  44a3c4:	and	x0, x0, #0xff
  44a3c8:	cmp	x0, #0x0
  44a3cc:	b.ne	44a400 <sd_peer_get_unit+0x70>  // b.any
  44a3d0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a3d4:	add	x1, x0, #0x34b
  44a3d8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a3dc:	add	x4, x0, #0x7f8
  44a3e0:	mov	w3, #0xa8                  	// #168
  44a3e4:	mov	x2, x1
  44a3e8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a3ec:	add	x1, x0, #0x3c8
  44a3f0:	mov	w0, #0x1                   	// #1
  44a3f4:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a3f8:	mov	w0, #0x1                   	// #1
  44a3fc:	b	44a404 <sd_peer_get_unit+0x74>
  44a400:	mov	w0, #0x0                   	// #0
  44a404:	cmp	w0, #0x0
  44a408:	b.eq	44a414 <sd_peer_get_unit+0x84>  // b.none
  44a40c:	mov	w0, #0xfffffff7            	// #-9
  44a410:	b	44a4a8 <sd_peer_get_unit+0x118>
  44a414:	ldr	x0, [sp, #16]
  44a418:	cmp	x0, #0x0
  44a41c:	cset	w0, ne  // ne = any
  44a420:	and	w0, w0, #0xff
  44a424:	and	x0, x0, #0xff
  44a428:	cmp	x0, #0x0
  44a42c:	b.ne	44a460 <sd_peer_get_unit+0xd0>  // b.any
  44a430:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a434:	add	x1, x0, #0x34b
  44a438:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a43c:	add	x4, x0, #0x7f8
  44a440:	mov	w3, #0xa9                  	// #169
  44a444:	mov	x2, x1
  44a448:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a44c:	add	x1, x0, #0x388
  44a450:	mov	w0, #0x1                   	// #1
  44a454:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a458:	mov	w0, #0x1                   	// #1
  44a45c:	b	44a464 <sd_peer_get_unit+0xd4>
  44a460:	mov	w0, #0x0                   	// #0
  44a464:	cmp	w0, #0x0
  44a468:	b.eq	44a474 <sd_peer_get_unit+0xe4>  // b.none
  44a46c:	mov	w0, #0xffffffea            	// #-22
  44a470:	b	44a4a8 <sd_peer_get_unit+0x118>
  44a474:	add	x0, sp, #0x28
  44a478:	mov	x1, x0
  44a47c:	ldr	w0, [sp, #28]
  44a480:	bl	40b5b0 <getpeercred@plt>
  44a484:	str	w0, [sp, #36]
  44a488:	ldr	w0, [sp, #36]
  44a48c:	cmp	w0, #0x0
  44a490:	b.ge	44a49c <sd_peer_get_unit+0x10c>  // b.tcont
  44a494:	ldr	w0, [sp, #36]
  44a498:	b	44a4a8 <sd_peer_get_unit+0x118>
  44a49c:	ldr	w0, [sp, #40]
  44a4a0:	ldr	x1, [sp, #16]
  44a4a4:	bl	40b9b0 <cg_pid_get_unit@plt>
  44a4a8:	mov	w1, w0
  44a4ac:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a4b0:	ldr	x0, [x0, #4032]
  44a4b4:	ldr	x2, [sp, #56]
  44a4b8:	ldr	x0, [x0]
  44a4bc:	eor	x0, x2, x0
  44a4c0:	cmp	x0, #0x0
  44a4c4:	b.eq	44a4cc <sd_peer_get_unit+0x13c>  // b.none
  44a4c8:	bl	40b280 <__stack_chk_fail@plt>
  44a4cc:	mov	w0, w1
  44a4d0:	ldp	x29, x30, [sp], #64
  44a4d4:	ret

000000000044a4d8 <sd_peer_get_user_unit>:
  44a4d8:	stp	x29, x30, [sp, #-64]!
  44a4dc:	mov	x29, sp
  44a4e0:	str	w0, [sp, #28]
  44a4e4:	str	x1, [sp, #16]
  44a4e8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a4ec:	ldr	x0, [x0, #4032]
  44a4f0:	ldr	x1, [x0]
  44a4f4:	str	x1, [sp, #56]
  44a4f8:	mov	x1, #0x0                   	// #0
  44a4fc:	ldr	w0, [sp, #28]
  44a500:	mvn	w0, w0
  44a504:	lsr	w0, w0, #31
  44a508:	and	w0, w0, #0xff
  44a50c:	and	x0, x0, #0xff
  44a510:	cmp	x0, #0x0
  44a514:	b.ne	44a548 <sd_peer_get_user_unit+0x70>  // b.any
  44a518:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a51c:	add	x1, x0, #0x34b
  44a520:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a524:	add	x4, x0, #0x810
  44a528:	mov	w3, #0xb6                  	// #182
  44a52c:	mov	x2, x1
  44a530:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a534:	add	x1, x0, #0x3c8
  44a538:	mov	w0, #0x1                   	// #1
  44a53c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a540:	mov	w0, #0x1                   	// #1
  44a544:	b	44a54c <sd_peer_get_user_unit+0x74>
  44a548:	mov	w0, #0x0                   	// #0
  44a54c:	cmp	w0, #0x0
  44a550:	b.eq	44a55c <sd_peer_get_user_unit+0x84>  // b.none
  44a554:	mov	w0, #0xfffffff7            	// #-9
  44a558:	b	44a5f0 <sd_peer_get_user_unit+0x118>
  44a55c:	ldr	x0, [sp, #16]
  44a560:	cmp	x0, #0x0
  44a564:	cset	w0, ne  // ne = any
  44a568:	and	w0, w0, #0xff
  44a56c:	and	x0, x0, #0xff
  44a570:	cmp	x0, #0x0
  44a574:	b.ne	44a5a8 <sd_peer_get_user_unit+0xd0>  // b.any
  44a578:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a57c:	add	x1, x0, #0x34b
  44a580:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a584:	add	x4, x0, #0x810
  44a588:	mov	w3, #0xb7                  	// #183
  44a58c:	mov	x2, x1
  44a590:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a594:	add	x1, x0, #0x388
  44a598:	mov	w0, #0x1                   	// #1
  44a59c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a5a0:	mov	w0, #0x1                   	// #1
  44a5a4:	b	44a5ac <sd_peer_get_user_unit+0xd4>
  44a5a8:	mov	w0, #0x0                   	// #0
  44a5ac:	cmp	w0, #0x0
  44a5b0:	b.eq	44a5bc <sd_peer_get_user_unit+0xe4>  // b.none
  44a5b4:	mov	w0, #0xffffffea            	// #-22
  44a5b8:	b	44a5f0 <sd_peer_get_user_unit+0x118>
  44a5bc:	add	x0, sp, #0x28
  44a5c0:	mov	x1, x0
  44a5c4:	ldr	w0, [sp, #28]
  44a5c8:	bl	40b5b0 <getpeercred@plt>
  44a5cc:	str	w0, [sp, #36]
  44a5d0:	ldr	w0, [sp, #36]
  44a5d4:	cmp	w0, #0x0
  44a5d8:	b.ge	44a5e4 <sd_peer_get_user_unit+0x10c>  // b.tcont
  44a5dc:	ldr	w0, [sp, #36]
  44a5e0:	b	44a5f0 <sd_peer_get_user_unit+0x118>
  44a5e4:	ldr	w0, [sp, #40]
  44a5e8:	ldr	x1, [sp, #16]
  44a5ec:	bl	40b5c0 <cg_pid_get_user_unit@plt>
  44a5f0:	mov	w1, w0
  44a5f4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a5f8:	ldr	x0, [x0, #4032]
  44a5fc:	ldr	x2, [sp, #56]
  44a600:	ldr	x0, [x0]
  44a604:	eor	x0, x2, x0
  44a608:	cmp	x0, #0x0
  44a60c:	b.eq	44a614 <sd_peer_get_user_unit+0x13c>  // b.none
  44a610:	bl	40b280 <__stack_chk_fail@plt>
  44a614:	mov	w0, w1
  44a618:	ldp	x29, x30, [sp], #64
  44a61c:	ret

000000000044a620 <sd_peer_get_machine_name>:
  44a620:	stp	x29, x30, [sp, #-64]!
  44a624:	mov	x29, sp
  44a628:	str	w0, [sp, #28]
  44a62c:	str	x1, [sp, #16]
  44a630:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a634:	ldr	x0, [x0, #4032]
  44a638:	ldr	x1, [x0]
  44a63c:	str	x1, [sp, #56]
  44a640:	mov	x1, #0x0                   	// #0
  44a644:	ldr	w0, [sp, #28]
  44a648:	mvn	w0, w0
  44a64c:	lsr	w0, w0, #31
  44a650:	and	w0, w0, #0xff
  44a654:	and	x0, x0, #0xff
  44a658:	cmp	x0, #0x0
  44a65c:	b.ne	44a690 <sd_peer_get_machine_name+0x70>  // b.any
  44a660:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a664:	add	x1, x0, #0x34b
  44a668:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a66c:	add	x4, x0, #0x828
  44a670:	mov	w3, #0xc4                  	// #196
  44a674:	mov	x2, x1
  44a678:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a67c:	add	x1, x0, #0x3c8
  44a680:	mov	w0, #0x1                   	// #1
  44a684:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a688:	mov	w0, #0x1                   	// #1
  44a68c:	b	44a694 <sd_peer_get_machine_name+0x74>
  44a690:	mov	w0, #0x0                   	// #0
  44a694:	cmp	w0, #0x0
  44a698:	b.eq	44a6a4 <sd_peer_get_machine_name+0x84>  // b.none
  44a69c:	mov	w0, #0xfffffff7            	// #-9
  44a6a0:	b	44a738 <sd_peer_get_machine_name+0x118>
  44a6a4:	ldr	x0, [sp, #16]
  44a6a8:	cmp	x0, #0x0
  44a6ac:	cset	w0, ne  // ne = any
  44a6b0:	and	w0, w0, #0xff
  44a6b4:	and	x0, x0, #0xff
  44a6b8:	cmp	x0, #0x0
  44a6bc:	b.ne	44a6f0 <sd_peer_get_machine_name+0xd0>  // b.any
  44a6c0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a6c4:	add	x1, x0, #0x34b
  44a6c8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a6cc:	add	x4, x0, #0x828
  44a6d0:	mov	w3, #0xc5                  	// #197
  44a6d4:	mov	x2, x1
  44a6d8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a6dc:	add	x1, x0, #0x3d0
  44a6e0:	mov	w0, #0x1                   	// #1
  44a6e4:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a6e8:	mov	w0, #0x1                   	// #1
  44a6ec:	b	44a6f4 <sd_peer_get_machine_name+0xd4>
  44a6f0:	mov	w0, #0x0                   	// #0
  44a6f4:	cmp	w0, #0x0
  44a6f8:	b.eq	44a704 <sd_peer_get_machine_name+0xe4>  // b.none
  44a6fc:	mov	w0, #0xffffffea            	// #-22
  44a700:	b	44a738 <sd_peer_get_machine_name+0x118>
  44a704:	add	x0, sp, #0x28
  44a708:	mov	x1, x0
  44a70c:	ldr	w0, [sp, #28]
  44a710:	bl	40b5b0 <getpeercred@plt>
  44a714:	str	w0, [sp, #36]
  44a718:	ldr	w0, [sp, #36]
  44a71c:	cmp	w0, #0x0
  44a720:	b.ge	44a72c <sd_peer_get_machine_name+0x10c>  // b.tcont
  44a724:	ldr	w0, [sp, #36]
  44a728:	b	44a738 <sd_peer_get_machine_name+0x118>
  44a72c:	ldr	w0, [sp, #40]
  44a730:	ldr	x1, [sp, #16]
  44a734:	bl	40a490 <cg_pid_get_machine_name@plt>
  44a738:	mov	w1, w0
  44a73c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a740:	ldr	x0, [x0, #4032]
  44a744:	ldr	x2, [sp, #56]
  44a748:	ldr	x0, [x0]
  44a74c:	eor	x0, x2, x0
  44a750:	cmp	x0, #0x0
  44a754:	b.eq	44a75c <sd_peer_get_machine_name+0x13c>  // b.none
  44a758:	bl	40b280 <__stack_chk_fail@plt>
  44a75c:	mov	w0, w1
  44a760:	ldp	x29, x30, [sp], #64
  44a764:	ret

000000000044a768 <sd_peer_get_slice>:
  44a768:	stp	x29, x30, [sp, #-64]!
  44a76c:	mov	x29, sp
  44a770:	str	w0, [sp, #28]
  44a774:	str	x1, [sp, #16]
  44a778:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a77c:	ldr	x0, [x0, #4032]
  44a780:	ldr	x1, [x0]
  44a784:	str	x1, [sp, #56]
  44a788:	mov	x1, #0x0                   	// #0
  44a78c:	ldr	w0, [sp, #28]
  44a790:	mvn	w0, w0
  44a794:	lsr	w0, w0, #31
  44a798:	and	w0, w0, #0xff
  44a79c:	and	x0, x0, #0xff
  44a7a0:	cmp	x0, #0x0
  44a7a4:	b.ne	44a7d8 <sd_peer_get_slice+0x70>  // b.any
  44a7a8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a7ac:	add	x1, x0, #0x34b
  44a7b0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a7b4:	add	x4, x0, #0x848
  44a7b8:	mov	w3, #0xd2                  	// #210
  44a7bc:	mov	x2, x1
  44a7c0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a7c4:	add	x1, x0, #0x3c8
  44a7c8:	mov	w0, #0x1                   	// #1
  44a7cc:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a7d0:	mov	w0, #0x1                   	// #1
  44a7d4:	b	44a7dc <sd_peer_get_slice+0x74>
  44a7d8:	mov	w0, #0x0                   	// #0
  44a7dc:	cmp	w0, #0x0
  44a7e0:	b.eq	44a7ec <sd_peer_get_slice+0x84>  // b.none
  44a7e4:	mov	w0, #0xfffffff7            	// #-9
  44a7e8:	b	44a880 <sd_peer_get_slice+0x118>
  44a7ec:	ldr	x0, [sp, #16]
  44a7f0:	cmp	x0, #0x0
  44a7f4:	cset	w0, ne  // ne = any
  44a7f8:	and	w0, w0, #0xff
  44a7fc:	and	x0, x0, #0xff
  44a800:	cmp	x0, #0x0
  44a804:	b.ne	44a838 <sd_peer_get_slice+0xd0>  // b.any
  44a808:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a80c:	add	x1, x0, #0x34b
  44a810:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a814:	add	x4, x0, #0x848
  44a818:	mov	w3, #0xd3                  	// #211
  44a81c:	mov	x2, x1
  44a820:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a824:	add	x1, x0, #0x398
  44a828:	mov	w0, #0x1                   	// #1
  44a82c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a830:	mov	w0, #0x1                   	// #1
  44a834:	b	44a83c <sd_peer_get_slice+0xd4>
  44a838:	mov	w0, #0x0                   	// #0
  44a83c:	cmp	w0, #0x0
  44a840:	b.eq	44a84c <sd_peer_get_slice+0xe4>  // b.none
  44a844:	mov	w0, #0xffffffea            	// #-22
  44a848:	b	44a880 <sd_peer_get_slice+0x118>
  44a84c:	add	x0, sp, #0x28
  44a850:	mov	x1, x0
  44a854:	ldr	w0, [sp, #28]
  44a858:	bl	40b5b0 <getpeercred@plt>
  44a85c:	str	w0, [sp, #36]
  44a860:	ldr	w0, [sp, #36]
  44a864:	cmp	w0, #0x0
  44a868:	b.ge	44a874 <sd_peer_get_slice+0x10c>  // b.tcont
  44a86c:	ldr	w0, [sp, #36]
  44a870:	b	44a880 <sd_peer_get_slice+0x118>
  44a874:	ldr	w0, [sp, #40]
  44a878:	ldr	x1, [sp, #16]
  44a87c:	bl	40a620 <cg_pid_get_slice@plt>
  44a880:	mov	w1, w0
  44a884:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a888:	ldr	x0, [x0, #4032]
  44a88c:	ldr	x2, [sp, #56]
  44a890:	ldr	x0, [x0]
  44a894:	eor	x0, x2, x0
  44a898:	cmp	x0, #0x0
  44a89c:	b.eq	44a8a4 <sd_peer_get_slice+0x13c>  // b.none
  44a8a0:	bl	40b280 <__stack_chk_fail@plt>
  44a8a4:	mov	w0, w1
  44a8a8:	ldp	x29, x30, [sp], #64
  44a8ac:	ret

000000000044a8b0 <sd_peer_get_user_slice>:
  44a8b0:	stp	x29, x30, [sp, #-64]!
  44a8b4:	mov	x29, sp
  44a8b8:	str	w0, [sp, #28]
  44a8bc:	str	x1, [sp, #16]
  44a8c0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a8c4:	ldr	x0, [x0, #4032]
  44a8c8:	ldr	x1, [x0]
  44a8cc:	str	x1, [sp, #56]
  44a8d0:	mov	x1, #0x0                   	// #0
  44a8d4:	ldr	w0, [sp, #28]
  44a8d8:	mvn	w0, w0
  44a8dc:	lsr	w0, w0, #31
  44a8e0:	and	w0, w0, #0xff
  44a8e4:	and	x0, x0, #0xff
  44a8e8:	cmp	x0, #0x0
  44a8ec:	b.ne	44a920 <sd_peer_get_user_slice+0x70>  // b.any
  44a8f0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a8f4:	add	x1, x0, #0x34b
  44a8f8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a8fc:	add	x4, x0, #0x860
  44a900:	mov	w3, #0xe0                  	// #224
  44a904:	mov	x2, x1
  44a908:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a90c:	add	x1, x0, #0x3c8
  44a910:	mov	w0, #0x1                   	// #1
  44a914:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a918:	mov	w0, #0x1                   	// #1
  44a91c:	b	44a924 <sd_peer_get_user_slice+0x74>
  44a920:	mov	w0, #0x0                   	// #0
  44a924:	cmp	w0, #0x0
  44a928:	b.eq	44a934 <sd_peer_get_user_slice+0x84>  // b.none
  44a92c:	mov	w0, #0xfffffff7            	// #-9
  44a930:	b	44a9c8 <sd_peer_get_user_slice+0x118>
  44a934:	ldr	x0, [sp, #16]
  44a938:	cmp	x0, #0x0
  44a93c:	cset	w0, ne  // ne = any
  44a940:	and	w0, w0, #0xff
  44a944:	and	x0, x0, #0xff
  44a948:	cmp	x0, #0x0
  44a94c:	b.ne	44a980 <sd_peer_get_user_slice+0xd0>  // b.any
  44a950:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a954:	add	x1, x0, #0x34b
  44a958:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a95c:	add	x4, x0, #0x860
  44a960:	mov	w3, #0xe1                  	// #225
  44a964:	mov	x2, x1
  44a968:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44a96c:	add	x1, x0, #0x398
  44a970:	mov	w0, #0x1                   	// #1
  44a974:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44a978:	mov	w0, #0x1                   	// #1
  44a97c:	b	44a984 <sd_peer_get_user_slice+0xd4>
  44a980:	mov	w0, #0x0                   	// #0
  44a984:	cmp	w0, #0x0
  44a988:	b.eq	44a994 <sd_peer_get_user_slice+0xe4>  // b.none
  44a98c:	mov	w0, #0xffffffea            	// #-22
  44a990:	b	44a9c8 <sd_peer_get_user_slice+0x118>
  44a994:	add	x0, sp, #0x28
  44a998:	mov	x1, x0
  44a99c:	ldr	w0, [sp, #28]
  44a9a0:	bl	40b5b0 <getpeercred@plt>
  44a9a4:	str	w0, [sp, #36]
  44a9a8:	ldr	w0, [sp, #36]
  44a9ac:	cmp	w0, #0x0
  44a9b0:	b.ge	44a9bc <sd_peer_get_user_slice+0x10c>  // b.tcont
  44a9b4:	ldr	w0, [sp, #36]
  44a9b8:	b	44a9c8 <sd_peer_get_user_slice+0x118>
  44a9bc:	ldr	w0, [sp, #40]
  44a9c0:	ldr	x1, [sp, #16]
  44a9c4:	bl	40ad20 <cg_pid_get_user_slice@plt>
  44a9c8:	mov	w1, w0
  44a9cc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44a9d0:	ldr	x0, [x0, #4032]
  44a9d4:	ldr	x2, [sp, #56]
  44a9d8:	ldr	x0, [x0]
  44a9dc:	eor	x0, x2, x0
  44a9e0:	cmp	x0, #0x0
  44a9e4:	b.eq	44a9ec <sd_peer_get_user_slice+0x13c>  // b.none
  44a9e8:	bl	40b280 <__stack_chk_fail@plt>
  44a9ec:	mov	w0, w1
  44a9f0:	ldp	x29, x30, [sp], #64
  44a9f4:	ret

000000000044a9f8 <sd_peer_get_cgroup>:
  44a9f8:	stp	x29, x30, [sp, #-64]!
  44a9fc:	mov	x29, sp
  44aa00:	str	w0, [sp, #28]
  44aa04:	str	x1, [sp, #16]
  44aa08:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44aa0c:	ldr	x0, [x0, #4032]
  44aa10:	ldr	x1, [x0]
  44aa14:	str	x1, [sp, #56]
  44aa18:	mov	x1, #0x0                   	// #0
  44aa1c:	ldr	w0, [sp, #28]
  44aa20:	mvn	w0, w0
  44aa24:	lsr	w0, w0, #31
  44aa28:	and	w0, w0, #0xff
  44aa2c:	and	x0, x0, #0xff
  44aa30:	cmp	x0, #0x0
  44aa34:	b.ne	44aa68 <sd_peer_get_cgroup+0x70>  // b.any
  44aa38:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44aa3c:	add	x1, x0, #0x34b
  44aa40:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44aa44:	add	x4, x0, #0x878
  44aa48:	mov	w3, #0xee                  	// #238
  44aa4c:	mov	x2, x1
  44aa50:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44aa54:	add	x1, x0, #0x3c8
  44aa58:	mov	w0, #0x1                   	// #1
  44aa5c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44aa60:	mov	w0, #0x1                   	// #1
  44aa64:	b	44aa6c <sd_peer_get_cgroup+0x74>
  44aa68:	mov	w0, #0x0                   	// #0
  44aa6c:	cmp	w0, #0x0
  44aa70:	b.eq	44aa7c <sd_peer_get_cgroup+0x84>  // b.none
  44aa74:	mov	w0, #0xfffffff7            	// #-9
  44aa78:	b	44ab10 <sd_peer_get_cgroup+0x118>
  44aa7c:	ldr	x0, [sp, #16]
  44aa80:	cmp	x0, #0x0
  44aa84:	cset	w0, ne  // ne = any
  44aa88:	and	w0, w0, #0xff
  44aa8c:	and	x0, x0, #0xff
  44aa90:	cmp	x0, #0x0
  44aa94:	b.ne	44aac8 <sd_peer_get_cgroup+0xd0>  // b.any
  44aa98:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44aa9c:	add	x1, x0, #0x34b
  44aaa0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44aaa4:	add	x4, x0, #0x878
  44aaa8:	mov	w3, #0xef                  	// #239
  44aaac:	mov	x2, x1
  44aab0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44aab4:	add	x1, x0, #0x3a8
  44aab8:	mov	w0, #0x1                   	// #1
  44aabc:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44aac0:	mov	w0, #0x1                   	// #1
  44aac4:	b	44aacc <sd_peer_get_cgroup+0xd4>
  44aac8:	mov	w0, #0x0                   	// #0
  44aacc:	cmp	w0, #0x0
  44aad0:	b.eq	44aadc <sd_peer_get_cgroup+0xe4>  // b.none
  44aad4:	mov	w0, #0xffffffea            	// #-22
  44aad8:	b	44ab10 <sd_peer_get_cgroup+0x118>
  44aadc:	add	x0, sp, #0x28
  44aae0:	mov	x1, x0
  44aae4:	ldr	w0, [sp, #28]
  44aae8:	bl	40b5b0 <getpeercred@plt>
  44aaec:	str	w0, [sp, #36]
  44aaf0:	ldr	w0, [sp, #36]
  44aaf4:	cmp	w0, #0x0
  44aaf8:	b.ge	44ab04 <sd_peer_get_cgroup+0x10c>  // b.tcont
  44aafc:	ldr	w0, [sp, #36]
  44ab00:	b	44ab10 <sd_peer_get_cgroup+0x118>
  44ab04:	ldr	w0, [sp, #40]
  44ab08:	ldr	x1, [sp, #16]
  44ab0c:	bl	449f64 <sd_pid_get_cgroup>
  44ab10:	mov	w1, w0
  44ab14:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44ab18:	ldr	x0, [x0, #4032]
  44ab1c:	ldr	x2, [sp, #56]
  44ab20:	ldr	x0, [x0]
  44ab24:	eor	x0, x2, x0
  44ab28:	cmp	x0, #0x0
  44ab2c:	b.eq	44ab34 <sd_peer_get_cgroup+0x13c>  // b.none
  44ab30:	bl	40b280 <__stack_chk_fail@plt>
  44ab34:	mov	w0, w1
  44ab38:	ldp	x29, x30, [sp], #64
  44ab3c:	ret

000000000044ab40 <file_of_uid>:
  44ab40:	stp	x29, x30, [sp, #-32]!
  44ab44:	mov	x29, sp
  44ab48:	str	w0, [sp, #28]
  44ab4c:	str	x1, [sp, #16]
  44ab50:	ldr	w0, [sp, #28]
  44ab54:	bl	40aea0 <uid_is_valid@plt>
  44ab58:	and	w0, w0, #0xff
  44ab5c:	and	x0, x0, #0xff
  44ab60:	cmp	x0, #0x0
  44ab64:	b.ne	44ab98 <file_of_uid+0x58>  // b.any
  44ab68:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ab6c:	add	x1, x0, #0x34b
  44ab70:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ab74:	add	x4, x0, #0x890
  44ab78:	mov	w3, #0xfa                  	// #250
  44ab7c:	mov	x2, x1
  44ab80:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ab84:	add	x1, x0, #0x3d8
  44ab88:	mov	w0, #0x1                   	// #1
  44ab8c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44ab90:	mov	w0, #0x1                   	// #1
  44ab94:	b	44ab9c <file_of_uid+0x5c>
  44ab98:	mov	w0, #0x0                   	// #0
  44ab9c:	cmp	w0, #0x0
  44aba0:	b.eq	44abac <file_of_uid+0x6c>  // b.none
  44aba4:	mov	w0, #0xffffffea            	// #-22
  44aba8:	b	44ac18 <file_of_uid+0xd8>
  44abac:	ldr	x0, [sp, #16]
  44abb0:	cmp	x0, #0x0
  44abb4:	cset	w0, eq  // eq = none
  44abb8:	and	w0, w0, #0xff
  44abbc:	and	x0, x0, #0xff
  44abc0:	cmp	x0, #0x0
  44abc4:	b.eq	44abf0 <file_of_uid+0xb0>  // b.none
  44abc8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44abcc:	add	x1, x0, #0x34b
  44abd0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44abd4:	add	x4, x0, #0x890
  44abd8:	mov	w3, #0xfb                  	// #251
  44abdc:	mov	x2, x1
  44abe0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44abe4:	add	x1, x0, #0x3f0
  44abe8:	mov	w0, #0x1                   	// #1
  44abec:	bl	40abb0 <log_assert_failed_realm@plt>
  44abf0:	ldr	w2, [sp, #28]
  44abf4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44abf8:	add	x1, x0, #0x3f8
  44abfc:	ldr	x0, [sp, #16]
  44ac00:	bl	40b890 <asprintf@plt>
  44ac04:	cmp	w0, #0x0
  44ac08:	b.ge	44ac14 <file_of_uid+0xd4>  // b.tcont
  44ac0c:	mov	w0, #0xfffffff4            	// #-12
  44ac10:	b	44ac18 <file_of_uid+0xd8>
  44ac14:	mov	w0, #0x0                   	// #0
  44ac18:	ldp	x29, x30, [sp], #32
  44ac1c:	ret

000000000044ac20 <sd_uid_get_state>:
  44ac20:	stp	x29, x30, [sp, #-96]!
  44ac24:	mov	x29, sp
  44ac28:	str	x19, [sp, #16]
  44ac2c:	str	w0, [sp, #44]
  44ac30:	str	x1, [sp, #32]
  44ac34:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44ac38:	ldr	x0, [x0, #4032]
  44ac3c:	ldr	x1, [x0]
  44ac40:	str	x1, [sp, #88]
  44ac44:	mov	x1, #0x0                   	// #0
  44ac48:	str	xzr, [sp, #64]
  44ac4c:	str	xzr, [sp, #72]
  44ac50:	ldr	x0, [sp, #32]
  44ac54:	cmp	x0, #0x0
  44ac58:	cset	w0, ne  // ne = any
  44ac5c:	and	w0, w0, #0xff
  44ac60:	and	x0, x0, #0xff
  44ac64:	cmp	x0, #0x0
  44ac68:	b.ne	44ac9c <sd_uid_get_state+0x7c>  // b.any
  44ac6c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ac70:	add	x1, x0, #0x34b
  44ac74:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ac78:	add	x4, x0, #0x8a0
  44ac7c:	mov	w3, #0x107                 	// #263
  44ac80:	mov	x2, x1
  44ac84:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ac88:	add	x1, x0, #0x410
  44ac8c:	mov	w0, #0x1                   	// #1
  44ac90:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44ac94:	mov	w0, #0x1                   	// #1
  44ac98:	b	44aca0 <sd_uid_get_state+0x80>
  44ac9c:	mov	w0, #0x0                   	// #0
  44aca0:	cmp	w0, #0x0
  44aca4:	b.eq	44acb0 <sd_uid_get_state+0x90>  // b.none
  44aca8:	mov	w19, #0xffffffea            	// #-22
  44acac:	b	44ad80 <sd_uid_get_state+0x160>
  44acb0:	add	x0, sp, #0x40
  44acb4:	mov	x1, x0
  44acb8:	ldr	w0, [sp, #44]
  44acbc:	bl	44ab40 <file_of_uid>
  44acc0:	str	w0, [sp, #60]
  44acc4:	ldr	w0, [sp, #60]
  44acc8:	cmp	w0, #0x0
  44accc:	b.ge	44acd8 <sd_uid_get_state+0xb8>  // b.tcont
  44acd0:	ldr	w19, [sp, #60]
  44acd4:	b	44ad80 <sd_uid_get_state+0x160>
  44acd8:	ldr	x1, [sp, #64]
  44acdc:	add	x0, sp, #0x48
  44ace0:	mov	x4, #0x0                   	// #0
  44ace4:	mov	x3, x0
  44ace8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44acec:	add	x2, x0, #0x418
  44acf0:	mov	x0, #0x0                   	// #0
  44acf4:	bl	40b120 <parse_env_file_sentinel@plt>
  44acf8:	str	w0, [sp, #60]
  44acfc:	ldr	w0, [sp, #60]
  44ad00:	cmn	w0, #0x2
  44ad04:	b.ne	44ad34 <sd_uid_get_state+0x114>  // b.any
  44ad08:	add	x2, sp, #0x48
  44ad0c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ad10:	add	x1, x0, #0x420
  44ad14:	mov	x0, x2
  44ad18:	bl	40a810 <free_and_strdup@plt>
  44ad1c:	str	w0, [sp, #60]
  44ad20:	ldr	w0, [sp, #60]
  44ad24:	cmp	w0, #0x0
  44ad28:	b.ge	44ad64 <sd_uid_get_state+0x144>  // b.tcont
  44ad2c:	ldr	w19, [sp, #60]
  44ad30:	b	44ad80 <sd_uid_get_state+0x160>
  44ad34:	ldr	w0, [sp, #60]
  44ad38:	cmp	w0, #0x0
  44ad3c:	b.ge	44ad48 <sd_uid_get_state+0x128>  // b.tcont
  44ad40:	ldr	w19, [sp, #60]
  44ad44:	b	44ad80 <sd_uid_get_state+0x160>
  44ad48:	ldr	x0, [sp, #72]
  44ad4c:	bl	4495e0 <isempty>
  44ad50:	and	w0, w0, #0xff
  44ad54:	cmp	w0, #0x0
  44ad58:	b.eq	44ad64 <sd_uid_get_state+0x144>  // b.none
  44ad5c:	mov	w19, #0xfffffffb            	// #-5
  44ad60:	b	44ad80 <sd_uid_get_state+0x160>
  44ad64:	ldr	x0, [sp, #72]
  44ad68:	str	x0, [sp, #80]
  44ad6c:	str	xzr, [sp, #72]
  44ad70:	ldr	x1, [sp, #80]
  44ad74:	ldr	x0, [sp, #32]
  44ad78:	str	x1, [x0]
  44ad7c:	mov	w19, #0x0                   	// #0
  44ad80:	add	x0, sp, #0x48
  44ad84:	bl	4494ec <freep>
  44ad88:	add	x0, sp, #0x40
  44ad8c:	bl	4494ec <freep>
  44ad90:	mov	w1, w19
  44ad94:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44ad98:	ldr	x0, [x0, #4032]
  44ad9c:	ldr	x2, [sp, #88]
  44ada0:	ldr	x0, [x0]
  44ada4:	eor	x0, x2, x0
  44ada8:	cmp	x0, #0x0
  44adac:	b.eq	44adb4 <sd_uid_get_state+0x194>  // b.none
  44adb0:	bl	40b280 <__stack_chk_fail@plt>
  44adb4:	mov	w0, w1
  44adb8:	ldr	x19, [sp, #16]
  44adbc:	ldp	x29, x30, [sp], #96
  44adc0:	ret

000000000044adc4 <sd_uid_get_display>:
  44adc4:	stp	x29, x30, [sp, #-96]!
  44adc8:	mov	x29, sp
  44adcc:	str	x19, [sp, #16]
  44add0:	str	w0, [sp, #44]
  44add4:	str	x1, [sp, #32]
  44add8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44addc:	ldr	x0, [x0, #4032]
  44ade0:	ldr	x1, [x0]
  44ade4:	str	x1, [sp, #88]
  44ade8:	mov	x1, #0x0                   	// #0
  44adec:	str	xzr, [sp, #64]
  44adf0:	str	xzr, [sp, #72]
  44adf4:	ldr	x0, [sp, #32]
  44adf8:	cmp	x0, #0x0
  44adfc:	cset	w0, ne  // ne = any
  44ae00:	and	w0, w0, #0xff
  44ae04:	and	x0, x0, #0xff
  44ae08:	cmp	x0, #0x0
  44ae0c:	b.ne	44ae40 <sd_uid_get_display+0x7c>  // b.any
  44ae10:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ae14:	add	x1, x0, #0x34b
  44ae18:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ae1c:	add	x4, x0, #0x8b8
  44ae20:	mov	w3, #0x11f                 	// #287
  44ae24:	mov	x2, x1
  44ae28:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ae2c:	add	x1, x0, #0x380
  44ae30:	mov	w0, #0x1                   	// #1
  44ae34:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44ae38:	mov	w0, #0x1                   	// #1
  44ae3c:	b	44ae44 <sd_uid_get_display+0x80>
  44ae40:	mov	w0, #0x0                   	// #0
  44ae44:	cmp	w0, #0x0
  44ae48:	b.eq	44ae54 <sd_uid_get_display+0x90>  // b.none
  44ae4c:	mov	w19, #0xffffffea            	// #-22
  44ae50:	b	44af00 <sd_uid_get_display+0x13c>
  44ae54:	add	x0, sp, #0x40
  44ae58:	mov	x1, x0
  44ae5c:	ldr	w0, [sp, #44]
  44ae60:	bl	44ab40 <file_of_uid>
  44ae64:	str	w0, [sp, #60]
  44ae68:	ldr	w0, [sp, #60]
  44ae6c:	cmp	w0, #0x0
  44ae70:	b.ge	44ae7c <sd_uid_get_display+0xb8>  // b.tcont
  44ae74:	ldr	w19, [sp, #60]
  44ae78:	b	44af00 <sd_uid_get_display+0x13c>
  44ae7c:	ldr	x1, [sp, #64]
  44ae80:	add	x0, sp, #0x48
  44ae84:	mov	x4, #0x0                   	// #0
  44ae88:	mov	x3, x0
  44ae8c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ae90:	add	x2, x0, #0x428
  44ae94:	mov	x0, #0x0                   	// #0
  44ae98:	bl	40b120 <parse_env_file_sentinel@plt>
  44ae9c:	str	w0, [sp, #60]
  44aea0:	ldr	w0, [sp, #60]
  44aea4:	cmn	w0, #0x2
  44aea8:	b.ne	44aeb4 <sd_uid_get_display+0xf0>  // b.any
  44aeac:	mov	w19, #0xffffffc3            	// #-61
  44aeb0:	b	44af00 <sd_uid_get_display+0x13c>
  44aeb4:	ldr	w0, [sp, #60]
  44aeb8:	cmp	w0, #0x0
  44aebc:	b.ge	44aec8 <sd_uid_get_display+0x104>  // b.tcont
  44aec0:	ldr	w19, [sp, #60]
  44aec4:	b	44af00 <sd_uid_get_display+0x13c>
  44aec8:	ldr	x0, [sp, #72]
  44aecc:	bl	4495e0 <isempty>
  44aed0:	and	w0, w0, #0xff
  44aed4:	cmp	w0, #0x0
  44aed8:	b.eq	44aee4 <sd_uid_get_display+0x120>  // b.none
  44aedc:	mov	w19, #0xffffffc3            	// #-61
  44aee0:	b	44af00 <sd_uid_get_display+0x13c>
  44aee4:	ldr	x0, [sp, #72]
  44aee8:	str	x0, [sp, #80]
  44aeec:	str	xzr, [sp, #72]
  44aef0:	ldr	x1, [sp, #80]
  44aef4:	ldr	x0, [sp, #32]
  44aef8:	str	x1, [x0]
  44aefc:	mov	w19, #0x0                   	// #0
  44af00:	add	x0, sp, #0x48
  44af04:	bl	4494ec <freep>
  44af08:	add	x0, sp, #0x40
  44af0c:	bl	4494ec <freep>
  44af10:	mov	w1, w19
  44af14:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44af18:	ldr	x0, [x0, #4032]
  44af1c:	ldr	x2, [sp, #88]
  44af20:	ldr	x0, [x0]
  44af24:	eor	x0, x2, x0
  44af28:	cmp	x0, #0x0
  44af2c:	b.eq	44af34 <sd_uid_get_display+0x170>  // b.none
  44af30:	bl	40b280 <__stack_chk_fail@plt>
  44af34:	mov	w0, w1
  44af38:	ldr	x19, [sp, #16]
  44af3c:	ldp	x29, x30, [sp], #96
  44af40:	ret

000000000044af44 <file_of_seat>:
  44af44:	stp	x29, x30, [sp, #-96]!
  44af48:	mov	x29, sp
  44af4c:	stp	x19, x20, [sp, #16]
  44af50:	str	x0, [sp, #40]
  44af54:	str	x1, [sp, #32]
  44af58:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44af5c:	ldr	x0, [x0, #4032]
  44af60:	ldr	x1, [x0]
  44af64:	str	x1, [sp, #88]
  44af68:	mov	x1, #0x0                   	// #0
  44af6c:	ldr	x0, [sp, #32]
  44af70:	cmp	x0, #0x0
  44af74:	cset	w0, eq  // eq = none
  44af78:	and	w0, w0, #0xff
  44af7c:	and	x0, x0, #0xff
  44af80:	cmp	x0, #0x0
  44af84:	b.eq	44afb0 <file_of_seat+0x6c>  // b.none
  44af88:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44af8c:	add	x1, x0, #0x34b
  44af90:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44af94:	add	x4, x0, #0x8d0
  44af98:	mov	w3, #0x136                 	// #310
  44af9c:	mov	x2, x1
  44afa0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44afa4:	add	x1, x0, #0x430
  44afa8:	mov	w0, #0x1                   	// #1
  44afac:	bl	40abb0 <log_assert_failed_realm@plt>
  44afb0:	ldr	x0, [sp, #40]
  44afb4:	cmp	x0, #0x0
  44afb8:	b.eq	44affc <file_of_seat+0xb8>  // b.none
  44afbc:	ldr	x0, [sp, #40]
  44afc0:	bl	40a3c0 <filename_is_valid@plt>
  44afc4:	and	w0, w0, #0xff
  44afc8:	eor	w0, w0, #0x1
  44afcc:	and	w0, w0, #0xff
  44afd0:	cmp	w0, #0x0
  44afd4:	b.eq	44afe0 <file_of_seat+0x9c>  // b.none
  44afd8:	mov	w19, #0xffffffea            	// #-22
  44afdc:	b	44b08c <file_of_seat+0x148>
  44afe0:	mov	x2, #0xffffffffffffffff    	// #-1
  44afe4:	ldr	x1, [sp, #40]
  44afe8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44afec:	add	x0, x0, #0x438
  44aff0:	bl	40b2f0 <path_join_internal@plt>
  44aff4:	str	x0, [sp, #72]
  44aff8:	b	44b05c <file_of_seat+0x118>
  44affc:	str	xzr, [sp, #64]
  44b000:	add	x0, sp, #0x40
  44b004:	mov	x1, x0
  44b008:	mov	x0, #0x0                   	// #0
  44b00c:	bl	44bdd4 <sd_session_get_seat>
  44b010:	str	w0, [sp, #60]
  44b014:	ldr	w0, [sp, #60]
  44b018:	cmp	w0, #0x0
  44b01c:	b.ge	44b02c <file_of_seat+0xe8>  // b.tcont
  44b020:	ldr	w19, [sp, #60]
  44b024:	mov	w20, #0x0                   	// #0
  44b028:	b	44b04c <file_of_seat+0x108>
  44b02c:	ldr	x0, [sp, #64]
  44b030:	mov	x2, #0xffffffffffffffff    	// #-1
  44b034:	mov	x1, x0
  44b038:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b03c:	add	x0, x0, #0x438
  44b040:	bl	40b2f0 <path_join_internal@plt>
  44b044:	str	x0, [sp, #72]
  44b048:	mov	w20, #0x1                   	// #1
  44b04c:	add	x0, sp, #0x40
  44b050:	bl	4494ec <freep>
  44b054:	cmp	w20, #0x1
  44b058:	b.ne	44b08c <file_of_seat+0x148>  // b.any
  44b05c:	ldr	x0, [sp, #72]
  44b060:	cmp	x0, #0x0
  44b064:	b.ne	44b070 <file_of_seat+0x12c>  // b.any
  44b068:	mov	w19, #0xfffffff4            	// #-12
  44b06c:	b	44b08c <file_of_seat+0x148>
  44b070:	ldr	x0, [sp, #72]
  44b074:	str	x0, [sp, #80]
  44b078:	str	xzr, [sp, #72]
  44b07c:	ldr	x1, [sp, #80]
  44b080:	ldr	x0, [sp, #32]
  44b084:	str	x1, [x0]
  44b088:	mov	w19, #0x0                   	// #0
  44b08c:	mov	w1, w19
  44b090:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b094:	ldr	x0, [x0, #4032]
  44b098:	ldr	x2, [sp, #88]
  44b09c:	ldr	x0, [x0]
  44b0a0:	eor	x0, x2, x0
  44b0a4:	cmp	x0, #0x0
  44b0a8:	b.eq	44b0b0 <file_of_seat+0x16c>  // b.none
  44b0ac:	bl	40b280 <__stack_chk_fail@plt>
  44b0b0:	mov	w0, w1
  44b0b4:	ldp	x19, x20, [sp, #16]
  44b0b8:	ldp	x29, x30, [sp], #96
  44b0bc:	ret

000000000044b0c0 <sd_uid_is_on_seat>:
  44b0c0:	stp	x29, x30, [sp, #-128]!
  44b0c4:	mov	x29, sp
  44b0c8:	str	x19, [sp, #16]
  44b0cc:	str	w0, [sp, #44]
  44b0d0:	str	w1, [sp, #40]
  44b0d4:	str	x2, [sp, #32]
  44b0d8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b0dc:	ldr	x0, [x0, #4032]
  44b0e0:	ldr	x1, [x0]
  44b0e4:	str	x1, [sp, #120]
  44b0e8:	mov	x1, #0x0                   	// #0
  44b0ec:	str	xzr, [sp, #64]
  44b0f0:	str	xzr, [sp, #72]
  44b0f4:	str	xzr, [sp, #80]
  44b0f8:	ldr	w0, [sp, #44]
  44b0fc:	bl	40aea0 <uid_is_valid@plt>
  44b100:	and	w0, w0, #0xff
  44b104:	and	x0, x0, #0xff
  44b108:	cmp	x0, #0x0
  44b10c:	b.ne	44b140 <sd_uid_is_on_seat+0x80>  // b.any
  44b110:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b114:	add	x1, x0, #0x34b
  44b118:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b11c:	add	x4, x0, #0x8e0
  44b120:	mov	w3, #0x153                 	// #339
  44b124:	mov	x2, x1
  44b128:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b12c:	add	x1, x0, #0x3d8
  44b130:	mov	w0, #0x1                   	// #1
  44b134:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44b138:	mov	w0, #0x1                   	// #1
  44b13c:	b	44b144 <sd_uid_is_on_seat+0x84>
  44b140:	mov	w0, #0x0                   	// #0
  44b144:	cmp	w0, #0x0
  44b148:	b.eq	44b154 <sd_uid_is_on_seat+0x94>  // b.none
  44b14c:	mov	w19, #0xffffffea            	// #-22
  44b150:	b	44b2b0 <sd_uid_is_on_seat+0x1f0>
  44b154:	add	x0, sp, #0x50
  44b158:	mov	x1, x0
  44b15c:	ldr	x0, [sp, #32]
  44b160:	bl	44af44 <file_of_seat>
  44b164:	str	w0, [sp, #60]
  44b168:	ldr	w0, [sp, #60]
  44b16c:	cmp	w0, #0x0
  44b170:	b.ge	44b17c <sd_uid_is_on_seat+0xbc>  // b.tcont
  44b174:	ldr	w19, [sp, #60]
  44b178:	b	44b2b0 <sd_uid_is_on_seat+0x1f0>
  44b17c:	ldr	w0, [sp, #40]
  44b180:	cmp	w0, #0x0
  44b184:	b.eq	44b194 <sd_uid_is_on_seat+0xd4>  // b.none
  44b188:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b18c:	add	x0, x0, #0x450
  44b190:	b	44b19c <sd_uid_is_on_seat+0xdc>
  44b194:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b198:	add	x0, x0, #0x460
  44b19c:	str	x0, [sp, #112]
  44b1a0:	ldr	x0, [sp, #80]
  44b1a4:	add	x1, sp, #0x48
  44b1a8:	mov	x4, #0x0                   	// #0
  44b1ac:	mov	x3, x1
  44b1b0:	ldr	x2, [sp, #112]
  44b1b4:	mov	x1, x0
  44b1b8:	mov	x0, #0x0                   	// #0
  44b1bc:	bl	40b120 <parse_env_file_sentinel@plt>
  44b1c0:	str	w0, [sp, #60]
  44b1c4:	ldr	w0, [sp, #60]
  44b1c8:	cmn	w0, #0x2
  44b1cc:	b.ne	44b1d8 <sd_uid_is_on_seat+0x118>  // b.any
  44b1d0:	mov	w19, #0x0                   	// #0
  44b1d4:	b	44b2b0 <sd_uid_is_on_seat+0x1f0>
  44b1d8:	ldr	w0, [sp, #60]
  44b1dc:	cmp	w0, #0x0
  44b1e0:	b.ge	44b1ec <sd_uid_is_on_seat+0x12c>  // b.tcont
  44b1e4:	ldr	w19, [sp, #60]
  44b1e8:	b	44b2b0 <sd_uid_is_on_seat+0x1f0>
  44b1ec:	ldr	x0, [sp, #72]
  44b1f0:	bl	4495e0 <isempty>
  44b1f4:	and	w0, w0, #0xff
  44b1f8:	cmp	w0, #0x0
  44b1fc:	b.eq	44b208 <sd_uid_is_on_seat+0x148>  // b.none
  44b200:	mov	w19, #0x0                   	// #0
  44b204:	b	44b2b0 <sd_uid_is_on_seat+0x1f0>
  44b208:	add	x3, sp, #0x40
  44b20c:	ldr	w2, [sp, #44]
  44b210:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b214:	add	x1, x0, #0x468
  44b218:	mov	x0, x3
  44b21c:	bl	40b890 <asprintf@plt>
  44b220:	cmp	w0, #0x0
  44b224:	b.ge	44b230 <sd_uid_is_on_seat+0x170>  // b.tcont
  44b228:	mov	w19, #0xfffffff4            	// #-12
  44b22c:	b	44b2b0 <sd_uid_is_on_seat+0x1f0>
  44b230:	ldr	x0, [sp, #72]
  44b234:	str	x0, [sp, #96]
  44b238:	add	x1, sp, #0x58
  44b23c:	add	x4, sp, #0x60
  44b240:	mov	w3, #0x0                   	// #0
  44b244:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b248:	add	x2, x0, #0x470
  44b24c:	mov	x0, x4
  44b250:	bl	40b590 <split@plt>
  44b254:	str	x0, [sp, #104]
  44b258:	b	44b2a0 <sd_uid_is_on_seat+0x1e0>
  44b25c:	ldr	x0, [sp, #64]
  44b260:	ldr	x1, [sp, #88]
  44b264:	mov	x2, x1
  44b268:	ldr	x1, [sp, #104]
  44b26c:	bl	40ae00 <strncmp@plt>
  44b270:	cmp	w0, #0x0
  44b274:	b.ne	44b280 <sd_uid_is_on_seat+0x1c0>  // b.any
  44b278:	mov	w19, #0x1                   	// #1
  44b27c:	b	44b2b0 <sd_uid_is_on_seat+0x1f0>
  44b280:	add	x1, sp, #0x58
  44b284:	add	x4, sp, #0x60
  44b288:	mov	w3, #0x0                   	// #0
  44b28c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b290:	add	x2, x0, #0x470
  44b294:	mov	x0, x4
  44b298:	bl	40b590 <split@plt>
  44b29c:	str	x0, [sp, #104]
  44b2a0:	ldr	x0, [sp, #104]
  44b2a4:	cmp	x0, #0x0
  44b2a8:	b.ne	44b25c <sd_uid_is_on_seat+0x19c>  // b.any
  44b2ac:	mov	w19, #0x0                   	// #0
  44b2b0:	add	x0, sp, #0x50
  44b2b4:	bl	4494ec <freep>
  44b2b8:	add	x0, sp, #0x48
  44b2bc:	bl	4494ec <freep>
  44b2c0:	add	x0, sp, #0x40
  44b2c4:	bl	4494ec <freep>
  44b2c8:	mov	w1, w19
  44b2cc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b2d0:	ldr	x0, [x0, #4032]
  44b2d4:	ldr	x2, [sp, #120]
  44b2d8:	ldr	x0, [x0]
  44b2dc:	eor	x0, x2, x0
  44b2e0:	cmp	x0, #0x0
  44b2e4:	b.eq	44b2ec <sd_uid_is_on_seat+0x22c>  // b.none
  44b2e8:	bl	40b280 <__stack_chk_fail@plt>
  44b2ec:	mov	w0, w1
  44b2f0:	ldr	x19, [sp, #16]
  44b2f4:	ldp	x29, x30, [sp], #128
  44b2f8:	ret

000000000044b2fc <uid_get_array>:
  44b2fc:	stp	x29, x30, [sp, #-112]!
  44b300:	mov	x29, sp
  44b304:	str	x19, [sp, #16]
  44b308:	str	w0, [sp, #60]
  44b30c:	str	x1, [sp, #48]
  44b310:	str	x2, [sp, #40]
  44b314:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b318:	ldr	x0, [x0, #4032]
  44b31c:	ldr	x1, [x0]
  44b320:	str	x1, [sp, #104]
  44b324:	mov	x1, #0x0                   	// #0
  44b328:	str	xzr, [sp, #80]
  44b32c:	str	xzr, [sp, #88]
  44b330:	ldr	x0, [sp, #48]
  44b334:	cmp	x0, #0x0
  44b338:	cset	w0, eq  // eq = none
  44b33c:	and	w0, w0, #0xff
  44b340:	and	x0, x0, #0xff
  44b344:	cmp	x0, #0x0
  44b348:	b.eq	44b374 <uid_get_array+0x78>  // b.none
  44b34c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b350:	add	x1, x0, #0x34b
  44b354:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b358:	add	x4, x0, #0x8f8
  44b35c:	mov	w3, #0x172                 	// #370
  44b360:	mov	x2, x1
  44b364:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b368:	add	x1, x0, #0x478
  44b36c:	mov	w0, #0x1                   	// #1
  44b370:	bl	40abb0 <log_assert_failed_realm@plt>
  44b374:	add	x0, sp, #0x50
  44b378:	mov	x1, x0
  44b37c:	ldr	w0, [sp, #60]
  44b380:	bl	44ab40 <file_of_uid>
  44b384:	str	w0, [sp, #76]
  44b388:	ldr	w0, [sp, #76]
  44b38c:	cmp	w0, #0x0
  44b390:	b.ge	44b39c <uid_get_array+0xa0>  // b.tcont
  44b394:	ldr	w19, [sp, #76]
  44b398:	b	44b484 <uid_get_array+0x188>
  44b39c:	ldr	x0, [sp, #80]
  44b3a0:	add	x1, sp, #0x58
  44b3a4:	mov	x4, #0x0                   	// #0
  44b3a8:	mov	x3, x1
  44b3ac:	ldr	x2, [sp, #48]
  44b3b0:	mov	x1, x0
  44b3b4:	mov	x0, #0x0                   	// #0
  44b3b8:	bl	40b120 <parse_env_file_sentinel@plt>
  44b3bc:	str	w0, [sp, #76]
  44b3c0:	ldr	w0, [sp, #76]
  44b3c4:	cmn	w0, #0x2
  44b3c8:	b.eq	44b3ec <uid_get_array+0xf0>  // b.none
  44b3cc:	ldr	w0, [sp, #76]
  44b3d0:	cmp	w0, #0x0
  44b3d4:	b.lt	44b408 <uid_get_array+0x10c>  // b.tstop
  44b3d8:	ldr	x0, [sp, #88]
  44b3dc:	bl	4495e0 <isempty>
  44b3e0:	and	w0, w0, #0xff
  44b3e4:	cmp	w0, #0x0
  44b3e8:	b.eq	44b408 <uid_get_array+0x10c>  // b.none
  44b3ec:	ldr	x0, [sp, #40]
  44b3f0:	cmp	x0, #0x0
  44b3f4:	b.eq	44b400 <uid_get_array+0x104>  // b.none
  44b3f8:	ldr	x0, [sp, #40]
  44b3fc:	str	xzr, [x0]
  44b400:	mov	w19, #0x0                   	// #0
  44b404:	b	44b484 <uid_get_array+0x188>
  44b408:	ldr	w0, [sp, #76]
  44b40c:	cmp	w0, #0x0
  44b410:	b.ge	44b41c <uid_get_array+0x120>  // b.tcont
  44b414:	ldr	w19, [sp, #76]
  44b418:	b	44b484 <uid_get_array+0x188>
  44b41c:	ldr	x2, [sp, #88]
  44b420:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b424:	add	x1, x0, #0x488
  44b428:	mov	x0, x2
  44b42c:	bl	4496a4 <strv_split>
  44b430:	str	x0, [sp, #96]
  44b434:	ldr	x0, [sp, #96]
  44b438:	cmp	x0, #0x0
  44b43c:	b.ne	44b448 <uid_get_array+0x14c>  // b.any
  44b440:	mov	w19, #0xfffffff4            	// #-12
  44b444:	b	44b484 <uid_get_array+0x188>
  44b448:	ldr	x0, [sp, #96]
  44b44c:	bl	40b950 <strv_uniq@plt>
  44b450:	ldr	x0, [sp, #96]
  44b454:	bl	40b3f0 <strv_length@plt>
  44b458:	str	w0, [sp, #76]
  44b45c:	ldr	x0, [sp, #40]
  44b460:	cmp	x0, #0x0
  44b464:	b.eq	44b478 <uid_get_array+0x17c>  // b.none
  44b468:	ldr	x0, [sp, #40]
  44b46c:	ldr	x1, [sp, #96]
  44b470:	str	x1, [x0]
  44b474:	b	44b480 <uid_get_array+0x184>
  44b478:	ldr	x0, [sp, #96]
  44b47c:	bl	40b080 <strv_free@plt>
  44b480:	ldr	w19, [sp, #76]
  44b484:	add	x0, sp, #0x58
  44b488:	bl	4494ec <freep>
  44b48c:	add	x0, sp, #0x50
  44b490:	bl	4494ec <freep>
  44b494:	mov	w1, w19
  44b498:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b49c:	ldr	x0, [x0, #4032]
  44b4a0:	ldr	x2, [sp, #104]
  44b4a4:	ldr	x0, [x0]
  44b4a8:	eor	x0, x2, x0
  44b4ac:	cmp	x0, #0x0
  44b4b0:	b.eq	44b4b8 <uid_get_array+0x1bc>  // b.none
  44b4b4:	bl	40b280 <__stack_chk_fail@plt>
  44b4b8:	mov	w0, w1
  44b4bc:	ldr	x19, [sp, #16]
  44b4c0:	ldp	x29, x30, [sp], #112
  44b4c4:	ret

000000000044b4c8 <sd_uid_get_sessions>:
  44b4c8:	stp	x29, x30, [sp, #-32]!
  44b4cc:	mov	x29, sp
  44b4d0:	str	w0, [sp, #28]
  44b4d4:	str	w1, [sp, #24]
  44b4d8:	str	x2, [sp, #16]
  44b4dc:	ldr	w0, [sp, #24]
  44b4e0:	cmp	w0, #0x0
  44b4e4:	b.eq	44b50c <sd_uid_get_sessions+0x44>  // b.none
  44b4e8:	ldr	w0, [sp, #24]
  44b4ec:	cmp	w0, #0x0
  44b4f0:	b.le	44b500 <sd_uid_get_sessions+0x38>
  44b4f4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b4f8:	add	x0, x0, #0x490
  44b4fc:	b	44b514 <sd_uid_get_sessions+0x4c>
  44b500:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b504:	add	x0, x0, #0x4a0
  44b508:	b	44b514 <sd_uid_get_sessions+0x4c>
  44b50c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b510:	add	x0, x0, #0x4b0
  44b514:	ldr	x2, [sp, #16]
  44b518:	mov	x1, x0
  44b51c:	ldr	w0, [sp, #28]
  44b520:	bl	44b2fc <uid_get_array>
  44b524:	ldp	x29, x30, [sp], #32
  44b528:	ret

000000000044b52c <sd_uid_get_seats>:
  44b52c:	stp	x29, x30, [sp, #-32]!
  44b530:	mov	x29, sp
  44b534:	str	w0, [sp, #28]
  44b538:	str	w1, [sp, #24]
  44b53c:	str	x2, [sp, #16]
  44b540:	ldr	w0, [sp, #24]
  44b544:	cmp	w0, #0x0
  44b548:	b.eq	44b570 <sd_uid_get_seats+0x44>  // b.none
  44b54c:	ldr	w0, [sp, #24]
  44b550:	cmp	w0, #0x0
  44b554:	b.le	44b564 <sd_uid_get_seats+0x38>
  44b558:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b55c:	add	x0, x0, #0x4c0
  44b560:	b	44b578 <sd_uid_get_seats+0x4c>
  44b564:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b568:	add	x0, x0, #0x4d0
  44b56c:	b	44b578 <sd_uid_get_seats+0x4c>
  44b570:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b574:	add	x0, x0, #0x4d8
  44b578:	ldr	x2, [sp, #16]
  44b57c:	mov	x1, x0
  44b580:	ldr	w0, [sp, #28]
  44b584:	bl	44b2fc <uid_get_array>
  44b588:	ldp	x29, x30, [sp], #32
  44b58c:	ret

000000000044b590 <file_of_session>:
  44b590:	stp	x29, x30, [sp, #-80]!
  44b594:	mov	x29, sp
  44b598:	stp	x19, x20, [sp, #16]
  44b59c:	str	x0, [sp, #40]
  44b5a0:	str	x1, [sp, #32]
  44b5a4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b5a8:	ldr	x0, [x0, #4032]
  44b5ac:	ldr	x1, [x0]
  44b5b0:	str	x1, [sp, #72]
  44b5b4:	mov	x1, #0x0                   	// #0
  44b5b8:	ldr	x0, [sp, #32]
  44b5bc:	cmp	x0, #0x0
  44b5c0:	cset	w0, eq  // eq = none
  44b5c4:	and	w0, w0, #0xff
  44b5c8:	and	x0, x0, #0xff
  44b5cc:	cmp	x0, #0x0
  44b5d0:	b.eq	44b5fc <file_of_session+0x6c>  // b.none
  44b5d4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b5d8:	add	x1, x0, #0x34b
  44b5dc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b5e0:	add	x4, x0, #0x908
  44b5e4:	mov	w3, #0x1a6                 	// #422
  44b5e8:	mov	x2, x1
  44b5ec:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b5f0:	add	x1, x0, #0x430
  44b5f4:	mov	w0, #0x1                   	// #1
  44b5f8:	bl	40abb0 <log_assert_failed_realm@plt>
  44b5fc:	ldr	x0, [sp, #40]
  44b600:	cmp	x0, #0x0
  44b604:	b.eq	44b648 <file_of_session+0xb8>  // b.none
  44b608:	ldr	x0, [sp, #40]
  44b60c:	bl	40aa80 <session_id_valid@plt>
  44b610:	and	w0, w0, #0xff
  44b614:	eor	w0, w0, #0x1
  44b618:	and	w0, w0, #0xff
  44b61c:	cmp	w0, #0x0
  44b620:	b.eq	44b62c <file_of_session+0x9c>  // b.none
  44b624:	mov	w19, #0xffffffea            	// #-22
  44b628:	b	44b6cc <file_of_session+0x13c>
  44b62c:	mov	x2, #0xffffffffffffffff    	// #-1
  44b630:	ldr	x1, [sp, #40]
  44b634:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b638:	add	x0, x0, #0x4e8
  44b63c:	bl	40b2f0 <path_join_internal@plt>
  44b640:	str	x0, [sp, #64]
  44b644:	b	44b6a8 <file_of_session+0x118>
  44b648:	str	xzr, [sp, #56]
  44b64c:	add	x0, sp, #0x38
  44b650:	mov	x1, x0
  44b654:	mov	w0, #0x0                   	// #0
  44b658:	bl	44974c <sd_pid_get_session>
  44b65c:	str	w0, [sp, #52]
  44b660:	ldr	w0, [sp, #52]
  44b664:	cmp	w0, #0x0
  44b668:	b.ge	44b678 <file_of_session+0xe8>  // b.tcont
  44b66c:	ldr	w19, [sp, #52]
  44b670:	mov	w20, #0x0                   	// #0
  44b674:	b	44b698 <file_of_session+0x108>
  44b678:	ldr	x0, [sp, #56]
  44b67c:	mov	x2, #0xffffffffffffffff    	// #-1
  44b680:	mov	x1, x0
  44b684:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b688:	add	x0, x0, #0x4e8
  44b68c:	bl	40b2f0 <path_join_internal@plt>
  44b690:	str	x0, [sp, #64]
  44b694:	mov	w20, #0x1                   	// #1
  44b698:	add	x0, sp, #0x38
  44b69c:	bl	4494ec <freep>
  44b6a0:	cmp	w20, #0x1
  44b6a4:	b.ne	44b6cc <file_of_session+0x13c>  // b.any
  44b6a8:	ldr	x0, [sp, #64]
  44b6ac:	cmp	x0, #0x0
  44b6b0:	b.ne	44b6bc <file_of_session+0x12c>  // b.any
  44b6b4:	mov	w19, #0xfffffff4            	// #-12
  44b6b8:	b	44b6cc <file_of_session+0x13c>
  44b6bc:	ldr	x0, [sp, #32]
  44b6c0:	ldr	x1, [sp, #64]
  44b6c4:	str	x1, [x0]
  44b6c8:	mov	w19, #0x0                   	// #0
  44b6cc:	mov	w1, w19
  44b6d0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b6d4:	ldr	x0, [x0, #4032]
  44b6d8:	ldr	x2, [sp, #72]
  44b6dc:	ldr	x0, [x0]
  44b6e0:	eor	x0, x2, x0
  44b6e4:	cmp	x0, #0x0
  44b6e8:	b.eq	44b6f0 <file_of_session+0x160>  // b.none
  44b6ec:	bl	40b280 <__stack_chk_fail@plt>
  44b6f0:	mov	w0, w1
  44b6f4:	ldp	x19, x20, [sp, #16]
  44b6f8:	ldp	x29, x30, [sp], #80
  44b6fc:	ret

000000000044b700 <sd_session_is_active>:
  44b700:	stp	x29, x30, [sp, #-80]!
  44b704:	mov	x29, sp
  44b708:	str	x19, [sp, #16]
  44b70c:	str	x0, [sp, #40]
  44b710:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b714:	ldr	x0, [x0, #4032]
  44b718:	ldr	x1, [x0]
  44b71c:	str	x1, [sp, #72]
  44b720:	mov	x1, #0x0                   	// #0
  44b724:	str	xzr, [sp, #56]
  44b728:	str	xzr, [sp, #64]
  44b72c:	add	x0, sp, #0x38
  44b730:	mov	x1, x0
  44b734:	ldr	x0, [sp, #40]
  44b738:	bl	44b590 <file_of_session>
  44b73c:	str	w0, [sp, #52]
  44b740:	ldr	w0, [sp, #52]
  44b744:	cmp	w0, #0x0
  44b748:	b.ge	44b754 <sd_session_is_active+0x54>  // b.tcont
  44b74c:	ldr	w19, [sp, #52]
  44b750:	b	44b7c8 <sd_session_is_active+0xc8>
  44b754:	ldr	x1, [sp, #56]
  44b758:	add	x0, sp, #0x40
  44b75c:	mov	x4, #0x0                   	// #0
  44b760:	mov	x3, x0
  44b764:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b768:	add	x2, x0, #0x500
  44b76c:	mov	x0, #0x0                   	// #0
  44b770:	bl	40b120 <parse_env_file_sentinel@plt>
  44b774:	str	w0, [sp, #52]
  44b778:	ldr	w0, [sp, #52]
  44b77c:	cmn	w0, #0x2
  44b780:	b.ne	44b78c <sd_session_is_active+0x8c>  // b.any
  44b784:	mov	w19, #0xfffffffa            	// #-6
  44b788:	b	44b7c8 <sd_session_is_active+0xc8>
  44b78c:	ldr	w0, [sp, #52]
  44b790:	cmp	w0, #0x0
  44b794:	b.ge	44b7a0 <sd_session_is_active+0xa0>  // b.tcont
  44b798:	ldr	w19, [sp, #52]
  44b79c:	b	44b7c8 <sd_session_is_active+0xc8>
  44b7a0:	ldr	x0, [sp, #64]
  44b7a4:	bl	4495e0 <isempty>
  44b7a8:	and	w0, w0, #0xff
  44b7ac:	cmp	w0, #0x0
  44b7b0:	b.eq	44b7bc <sd_session_is_active+0xbc>  // b.none
  44b7b4:	mov	w19, #0xfffffffb            	// #-5
  44b7b8:	b	44b7c8 <sd_session_is_active+0xc8>
  44b7bc:	ldr	x0, [sp, #64]
  44b7c0:	bl	40a630 <parse_boolean@plt>
  44b7c4:	mov	w19, w0
  44b7c8:	add	x0, sp, #0x40
  44b7cc:	bl	4494ec <freep>
  44b7d0:	add	x0, sp, #0x38
  44b7d4:	bl	4494ec <freep>
  44b7d8:	mov	w1, w19
  44b7dc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b7e0:	ldr	x0, [x0, #4032]
  44b7e4:	ldr	x2, [sp, #72]
  44b7e8:	ldr	x0, [x0]
  44b7ec:	eor	x0, x2, x0
  44b7f0:	cmp	x0, #0x0
  44b7f4:	b.eq	44b7fc <sd_session_is_active+0xfc>  // b.none
  44b7f8:	bl	40b280 <__stack_chk_fail@plt>
  44b7fc:	mov	w0, w1
  44b800:	ldr	x19, [sp, #16]
  44b804:	ldp	x29, x30, [sp], #80
  44b808:	ret

000000000044b80c <sd_session_is_remote>:
  44b80c:	stp	x29, x30, [sp, #-80]!
  44b810:	mov	x29, sp
  44b814:	str	x19, [sp, #16]
  44b818:	str	x0, [sp, #40]
  44b81c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b820:	ldr	x0, [x0, #4032]
  44b824:	ldr	x1, [x0]
  44b828:	str	x1, [sp, #72]
  44b82c:	mov	x1, #0x0                   	// #0
  44b830:	str	xzr, [sp, #56]
  44b834:	str	xzr, [sp, #64]
  44b838:	add	x0, sp, #0x38
  44b83c:	mov	x1, x0
  44b840:	ldr	x0, [sp, #40]
  44b844:	bl	44b590 <file_of_session>
  44b848:	str	w0, [sp, #52]
  44b84c:	ldr	w0, [sp, #52]
  44b850:	cmp	w0, #0x0
  44b854:	b.ge	44b860 <sd_session_is_remote+0x54>  // b.tcont
  44b858:	ldr	w19, [sp, #52]
  44b85c:	b	44b8d4 <sd_session_is_remote+0xc8>
  44b860:	ldr	x1, [sp, #56]
  44b864:	add	x0, sp, #0x40
  44b868:	mov	x4, #0x0                   	// #0
  44b86c:	mov	x3, x0
  44b870:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b874:	add	x2, x0, #0x508
  44b878:	mov	x0, #0x0                   	// #0
  44b87c:	bl	40b120 <parse_env_file_sentinel@plt>
  44b880:	str	w0, [sp, #52]
  44b884:	ldr	w0, [sp, #52]
  44b888:	cmn	w0, #0x2
  44b88c:	b.ne	44b898 <sd_session_is_remote+0x8c>  // b.any
  44b890:	mov	w19, #0xfffffffa            	// #-6
  44b894:	b	44b8d4 <sd_session_is_remote+0xc8>
  44b898:	ldr	w0, [sp, #52]
  44b89c:	cmp	w0, #0x0
  44b8a0:	b.ge	44b8ac <sd_session_is_remote+0xa0>  // b.tcont
  44b8a4:	ldr	w19, [sp, #52]
  44b8a8:	b	44b8d4 <sd_session_is_remote+0xc8>
  44b8ac:	ldr	x0, [sp, #64]
  44b8b0:	bl	4495e0 <isempty>
  44b8b4:	and	w0, w0, #0xff
  44b8b8:	cmp	w0, #0x0
  44b8bc:	b.eq	44b8c8 <sd_session_is_remote+0xbc>  // b.none
  44b8c0:	mov	w19, #0xffffffc3            	// #-61
  44b8c4:	b	44b8d4 <sd_session_is_remote+0xc8>
  44b8c8:	ldr	x0, [sp, #64]
  44b8cc:	bl	40a630 <parse_boolean@plt>
  44b8d0:	mov	w19, w0
  44b8d4:	add	x0, sp, #0x40
  44b8d8:	bl	4494ec <freep>
  44b8dc:	add	x0, sp, #0x38
  44b8e0:	bl	4494ec <freep>
  44b8e4:	mov	w1, w19
  44b8e8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b8ec:	ldr	x0, [x0, #4032]
  44b8f0:	ldr	x2, [sp, #72]
  44b8f4:	ldr	x0, [x0]
  44b8f8:	eor	x0, x2, x0
  44b8fc:	cmp	x0, #0x0
  44b900:	b.eq	44b908 <sd_session_is_remote+0xfc>  // b.none
  44b904:	bl	40b280 <__stack_chk_fail@plt>
  44b908:	mov	w0, w1
  44b90c:	ldr	x19, [sp, #16]
  44b910:	ldp	x29, x30, [sp], #80
  44b914:	ret

000000000044b918 <sd_session_get_state>:
  44b918:	stp	x29, x30, [sp, #-96]!
  44b91c:	mov	x29, sp
  44b920:	str	x19, [sp, #16]
  44b924:	str	x0, [sp, #40]
  44b928:	str	x1, [sp, #32]
  44b92c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44b930:	ldr	x0, [x0, #4032]
  44b934:	ldr	x1, [x0]
  44b938:	str	x1, [sp, #88]
  44b93c:	mov	x1, #0x0                   	// #0
  44b940:	str	xzr, [sp, #64]
  44b944:	str	xzr, [sp, #72]
  44b948:	ldr	x0, [sp, #32]
  44b94c:	cmp	x0, #0x0
  44b950:	cset	w0, ne  // ne = any
  44b954:	and	w0, w0, #0xff
  44b958:	and	x0, x0, #0xff
  44b95c:	cmp	x0, #0x0
  44b960:	b.ne	44b994 <sd_session_get_state+0x7c>  // b.any
  44b964:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b968:	add	x1, x0, #0x34b
  44b96c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b970:	add	x4, x0, #0x918
  44b974:	mov	w3, #0x1e8                 	// #488
  44b978:	mov	x2, x1
  44b97c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b980:	add	x1, x0, #0x410
  44b984:	mov	w0, #0x1                   	// #1
  44b988:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44b98c:	mov	w0, #0x1                   	// #1
  44b990:	b	44b998 <sd_session_get_state+0x80>
  44b994:	mov	w0, #0x0                   	// #0
  44b998:	cmp	w0, #0x0
  44b99c:	b.eq	44b9a8 <sd_session_get_state+0x90>  // b.none
  44b9a0:	mov	w19, #0xffffffea            	// #-22
  44b9a4:	b	44ba54 <sd_session_get_state+0x13c>
  44b9a8:	add	x0, sp, #0x40
  44b9ac:	mov	x1, x0
  44b9b0:	ldr	x0, [sp, #40]
  44b9b4:	bl	44b590 <file_of_session>
  44b9b8:	str	w0, [sp, #60]
  44b9bc:	ldr	w0, [sp, #60]
  44b9c0:	cmp	w0, #0x0
  44b9c4:	b.ge	44b9d0 <sd_session_get_state+0xb8>  // b.tcont
  44b9c8:	ldr	w19, [sp, #60]
  44b9cc:	b	44ba54 <sd_session_get_state+0x13c>
  44b9d0:	ldr	x1, [sp, #64]
  44b9d4:	add	x0, sp, #0x48
  44b9d8:	mov	x4, #0x0                   	// #0
  44b9dc:	mov	x3, x0
  44b9e0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44b9e4:	add	x2, x0, #0x418
  44b9e8:	mov	x0, #0x0                   	// #0
  44b9ec:	bl	40b120 <parse_env_file_sentinel@plt>
  44b9f0:	str	w0, [sp, #60]
  44b9f4:	ldr	w0, [sp, #60]
  44b9f8:	cmn	w0, #0x2
  44b9fc:	b.ne	44ba08 <sd_session_get_state+0xf0>  // b.any
  44ba00:	mov	w19, #0xfffffffa            	// #-6
  44ba04:	b	44ba54 <sd_session_get_state+0x13c>
  44ba08:	ldr	w0, [sp, #60]
  44ba0c:	cmp	w0, #0x0
  44ba10:	b.ge	44ba1c <sd_session_get_state+0x104>  // b.tcont
  44ba14:	ldr	w19, [sp, #60]
  44ba18:	b	44ba54 <sd_session_get_state+0x13c>
  44ba1c:	ldr	x0, [sp, #72]
  44ba20:	bl	4495e0 <isempty>
  44ba24:	and	w0, w0, #0xff
  44ba28:	cmp	w0, #0x0
  44ba2c:	b.eq	44ba38 <sd_session_get_state+0x120>  // b.none
  44ba30:	mov	w19, #0xfffffffb            	// #-5
  44ba34:	b	44ba54 <sd_session_get_state+0x13c>
  44ba38:	ldr	x0, [sp, #72]
  44ba3c:	str	x0, [sp, #80]
  44ba40:	str	xzr, [sp, #72]
  44ba44:	ldr	x1, [sp, #80]
  44ba48:	ldr	x0, [sp, #32]
  44ba4c:	str	x1, [x0]
  44ba50:	mov	w19, #0x0                   	// #0
  44ba54:	add	x0, sp, #0x48
  44ba58:	bl	4494ec <freep>
  44ba5c:	add	x0, sp, #0x40
  44ba60:	bl	4494ec <freep>
  44ba64:	mov	w1, w19
  44ba68:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44ba6c:	ldr	x0, [x0, #4032]
  44ba70:	ldr	x2, [sp, #88]
  44ba74:	ldr	x0, [x0]
  44ba78:	eor	x0, x2, x0
  44ba7c:	cmp	x0, #0x0
  44ba80:	b.eq	44ba88 <sd_session_get_state+0x170>  // b.none
  44ba84:	bl	40b280 <__stack_chk_fail@plt>
  44ba88:	mov	w0, w1
  44ba8c:	ldr	x19, [sp, #16]
  44ba90:	ldp	x29, x30, [sp], #96
  44ba94:	ret

000000000044ba98 <sd_session_get_uid>:
  44ba98:	stp	x29, x30, [sp, #-80]!
  44ba9c:	mov	x29, sp
  44baa0:	str	x19, [sp, #16]
  44baa4:	str	x0, [sp, #40]
  44baa8:	str	x1, [sp, #32]
  44baac:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44bab0:	ldr	x0, [x0, #4032]
  44bab4:	ldr	x1, [x0]
  44bab8:	str	x1, [sp, #72]
  44babc:	mov	x1, #0x0                   	// #0
  44bac0:	str	xzr, [sp, #56]
  44bac4:	str	xzr, [sp, #64]
  44bac8:	ldr	x0, [sp, #32]
  44bacc:	cmp	x0, #0x0
  44bad0:	cset	w0, ne  // ne = any
  44bad4:	and	w0, w0, #0xff
  44bad8:	and	x0, x0, #0xff
  44badc:	cmp	x0, #0x0
  44bae0:	b.ne	44bb14 <sd_session_get_uid+0x7c>  // b.any
  44bae4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bae8:	add	x1, x0, #0x34b
  44baec:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44baf0:	add	x4, x0, #0x930
  44baf4:	mov	w3, #0x1ff                 	// #511
  44baf8:	mov	x2, x1
  44bafc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bb00:	add	x1, x0, #0x3a0
  44bb04:	mov	w0, #0x1                   	// #1
  44bb08:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44bb0c:	mov	w0, #0x1                   	// #1
  44bb10:	b	44bb18 <sd_session_get_uid+0x80>
  44bb14:	mov	w0, #0x0                   	// #0
  44bb18:	cmp	w0, #0x0
  44bb1c:	b.eq	44bb28 <sd_session_get_uid+0x90>  // b.none
  44bb20:	mov	w19, #0xffffffea            	// #-22
  44bb24:	b	44bbc8 <sd_session_get_uid+0x130>
  44bb28:	add	x0, sp, #0x38
  44bb2c:	mov	x1, x0
  44bb30:	ldr	x0, [sp, #40]
  44bb34:	bl	44b590 <file_of_session>
  44bb38:	str	w0, [sp, #52]
  44bb3c:	ldr	w0, [sp, #52]
  44bb40:	cmp	w0, #0x0
  44bb44:	b.ge	44bb50 <sd_session_get_uid+0xb8>  // b.tcont
  44bb48:	ldr	w19, [sp, #52]
  44bb4c:	b	44bbc8 <sd_session_get_uid+0x130>
  44bb50:	ldr	x1, [sp, #56]
  44bb54:	add	x0, sp, #0x40
  44bb58:	mov	x4, #0x0                   	// #0
  44bb5c:	mov	x3, x0
  44bb60:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bb64:	add	x2, x0, #0x510
  44bb68:	mov	x0, #0x0                   	// #0
  44bb6c:	bl	40b120 <parse_env_file_sentinel@plt>
  44bb70:	str	w0, [sp, #52]
  44bb74:	ldr	w0, [sp, #52]
  44bb78:	cmn	w0, #0x2
  44bb7c:	b.ne	44bb88 <sd_session_get_uid+0xf0>  // b.any
  44bb80:	mov	w19, #0xfffffffa            	// #-6
  44bb84:	b	44bbc8 <sd_session_get_uid+0x130>
  44bb88:	ldr	w0, [sp, #52]
  44bb8c:	cmp	w0, #0x0
  44bb90:	b.ge	44bb9c <sd_session_get_uid+0x104>  // b.tcont
  44bb94:	ldr	w19, [sp, #52]
  44bb98:	b	44bbc8 <sd_session_get_uid+0x130>
  44bb9c:	ldr	x0, [sp, #64]
  44bba0:	bl	4495e0 <isempty>
  44bba4:	and	w0, w0, #0xff
  44bba8:	cmp	w0, #0x0
  44bbac:	b.eq	44bbb8 <sd_session_get_uid+0x120>  // b.none
  44bbb0:	mov	w19, #0xfffffffb            	// #-5
  44bbb4:	b	44bbc8 <sd_session_get_uid+0x130>
  44bbb8:	ldr	x0, [sp, #64]
  44bbbc:	ldr	x1, [sp, #32]
  44bbc0:	bl	40b6b0 <parse_uid@plt>
  44bbc4:	mov	w19, w0
  44bbc8:	add	x0, sp, #0x40
  44bbcc:	bl	4494ec <freep>
  44bbd0:	add	x0, sp, #0x38
  44bbd4:	bl	4494ec <freep>
  44bbd8:	mov	w1, w19
  44bbdc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44bbe0:	ldr	x0, [x0, #4032]
  44bbe4:	ldr	x2, [sp, #72]
  44bbe8:	ldr	x0, [x0]
  44bbec:	eor	x0, x2, x0
  44bbf0:	cmp	x0, #0x0
  44bbf4:	b.eq	44bbfc <sd_session_get_uid+0x164>  // b.none
  44bbf8:	bl	40b280 <__stack_chk_fail@plt>
  44bbfc:	mov	w0, w1
  44bc00:	ldr	x19, [sp, #16]
  44bc04:	ldp	x29, x30, [sp], #80
  44bc08:	ret

000000000044bc0c <session_get_string>:
  44bc0c:	stp	x29, x30, [sp, #-112]!
  44bc10:	mov	x29, sp
  44bc14:	str	x19, [sp, #16]
  44bc18:	str	x0, [sp, #56]
  44bc1c:	str	x1, [sp, #48]
  44bc20:	str	x2, [sp, #40]
  44bc24:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44bc28:	ldr	x0, [x0, #4032]
  44bc2c:	ldr	x1, [x0]
  44bc30:	str	x1, [sp, #104]
  44bc34:	mov	x1, #0x0                   	// #0
  44bc38:	str	xzr, [sp, #80]
  44bc3c:	str	xzr, [sp, #88]
  44bc40:	ldr	x0, [sp, #40]
  44bc44:	cmp	x0, #0x0
  44bc48:	cset	w0, ne  // ne = any
  44bc4c:	and	w0, w0, #0xff
  44bc50:	and	x0, x0, #0xff
  44bc54:	cmp	x0, #0x0
  44bc58:	b.ne	44bc8c <session_get_string+0x80>  // b.any
  44bc5c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bc60:	add	x1, x0, #0x34b
  44bc64:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bc68:	add	x4, x0, #0x948
  44bc6c:	mov	w3, #0x214                 	// #532
  44bc70:	mov	x2, x1
  44bc74:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bc78:	add	x1, x0, #0x518
  44bc7c:	mov	w0, #0x1                   	// #1
  44bc80:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44bc84:	mov	w0, #0x1                   	// #1
  44bc88:	b	44bc90 <session_get_string+0x84>
  44bc8c:	mov	w0, #0x0                   	// #0
  44bc90:	cmp	w0, #0x0
  44bc94:	b.eq	44bca0 <session_get_string+0x94>  // b.none
  44bc98:	mov	w19, #0xffffffea            	// #-22
  44bc9c:	b	44bd90 <session_get_string+0x184>
  44bca0:	ldr	x0, [sp, #48]
  44bca4:	cmp	x0, #0x0
  44bca8:	cset	w0, eq  // eq = none
  44bcac:	and	w0, w0, #0xff
  44bcb0:	and	x0, x0, #0xff
  44bcb4:	cmp	x0, #0x0
  44bcb8:	b.eq	44bce4 <session_get_string+0xd8>  // b.none
  44bcbc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bcc0:	add	x1, x0, #0x34b
  44bcc4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bcc8:	add	x4, x0, #0x948
  44bccc:	mov	w3, #0x215                 	// #533
  44bcd0:	mov	x2, x1
  44bcd4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bcd8:	add	x1, x0, #0x520
  44bcdc:	mov	w0, #0x1                   	// #1
  44bce0:	bl	40abb0 <log_assert_failed_realm@plt>
  44bce4:	add	x0, sp, #0x50
  44bce8:	mov	x1, x0
  44bcec:	ldr	x0, [sp, #56]
  44bcf0:	bl	44b590 <file_of_session>
  44bcf4:	str	w0, [sp, #76]
  44bcf8:	ldr	w0, [sp, #76]
  44bcfc:	cmp	w0, #0x0
  44bd00:	b.ge	44bd0c <session_get_string+0x100>  // b.tcont
  44bd04:	ldr	w19, [sp, #76]
  44bd08:	b	44bd90 <session_get_string+0x184>
  44bd0c:	ldr	x0, [sp, #80]
  44bd10:	add	x1, sp, #0x58
  44bd14:	mov	x4, #0x0                   	// #0
  44bd18:	mov	x3, x1
  44bd1c:	ldr	x2, [sp, #48]
  44bd20:	mov	x1, x0
  44bd24:	mov	x0, #0x0                   	// #0
  44bd28:	bl	40b120 <parse_env_file_sentinel@plt>
  44bd2c:	str	w0, [sp, #76]
  44bd30:	ldr	w0, [sp, #76]
  44bd34:	cmn	w0, #0x2
  44bd38:	b.ne	44bd44 <session_get_string+0x138>  // b.any
  44bd3c:	mov	w19, #0xfffffffa            	// #-6
  44bd40:	b	44bd90 <session_get_string+0x184>
  44bd44:	ldr	w0, [sp, #76]
  44bd48:	cmp	w0, #0x0
  44bd4c:	b.ge	44bd58 <session_get_string+0x14c>  // b.tcont
  44bd50:	ldr	w19, [sp, #76]
  44bd54:	b	44bd90 <session_get_string+0x184>
  44bd58:	ldr	x0, [sp, #88]
  44bd5c:	bl	4495e0 <isempty>
  44bd60:	and	w0, w0, #0xff
  44bd64:	cmp	w0, #0x0
  44bd68:	b.eq	44bd74 <session_get_string+0x168>  // b.none
  44bd6c:	mov	w19, #0xffffffc3            	// #-61
  44bd70:	b	44bd90 <session_get_string+0x184>
  44bd74:	ldr	x0, [sp, #88]
  44bd78:	str	x0, [sp, #96]
  44bd7c:	str	xzr, [sp, #88]
  44bd80:	ldr	x1, [sp, #96]
  44bd84:	ldr	x0, [sp, #40]
  44bd88:	str	x1, [x0]
  44bd8c:	mov	w19, #0x0                   	// #0
  44bd90:	add	x0, sp, #0x58
  44bd94:	bl	4494ec <freep>
  44bd98:	add	x0, sp, #0x50
  44bd9c:	bl	4494ec <freep>
  44bda0:	mov	w1, w19
  44bda4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44bda8:	ldr	x0, [x0, #4032]
  44bdac:	ldr	x2, [sp, #104]
  44bdb0:	ldr	x0, [x0]
  44bdb4:	eor	x0, x2, x0
  44bdb8:	cmp	x0, #0x0
  44bdbc:	b.eq	44bdc4 <session_get_string+0x1b8>  // b.none
  44bdc0:	bl	40b280 <__stack_chk_fail@plt>
  44bdc4:	mov	w0, w1
  44bdc8:	ldr	x19, [sp, #16]
  44bdcc:	ldp	x29, x30, [sp], #112
  44bdd0:	ret

000000000044bdd4 <sd_session_get_seat>:
  44bdd4:	stp	x29, x30, [sp, #-32]!
  44bdd8:	mov	x29, sp
  44bddc:	str	x0, [sp, #24]
  44bde0:	str	x1, [sp, #16]
  44bde4:	ldr	x2, [sp, #16]
  44bde8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bdec:	add	x1, x0, #0x528
  44bdf0:	ldr	x0, [sp, #24]
  44bdf4:	bl	44bc0c <session_get_string>
  44bdf8:	ldp	x29, x30, [sp], #32
  44bdfc:	ret

000000000044be00 <sd_session_get_tty>:
  44be00:	stp	x29, x30, [sp, #-32]!
  44be04:	mov	x29, sp
  44be08:	str	x0, [sp, #24]
  44be0c:	str	x1, [sp, #16]
  44be10:	ldr	x2, [sp, #16]
  44be14:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44be18:	add	x1, x0, #0x530
  44be1c:	ldr	x0, [sp, #24]
  44be20:	bl	44bc0c <session_get_string>
  44be24:	ldp	x29, x30, [sp], #32
  44be28:	ret

000000000044be2c <sd_session_get_vt>:
  44be2c:	stp	x29, x30, [sp, #-80]!
  44be30:	mov	x29, sp
  44be34:	str	x19, [sp, #16]
  44be38:	str	x0, [sp, #40]
  44be3c:	str	x1, [sp, #32]
  44be40:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44be44:	ldr	x0, [x0, #4032]
  44be48:	ldr	x1, [x0]
  44be4c:	str	x1, [sp, #72]
  44be50:	mov	x1, #0x0                   	// #0
  44be54:	str	xzr, [sp, #64]
  44be58:	ldr	x0, [sp, #32]
  44be5c:	cmp	x0, #0x0
  44be60:	cset	w0, ne  // ne = any
  44be64:	and	w0, w0, #0xff
  44be68:	and	x0, x0, #0xff
  44be6c:	cmp	x0, #0x0
  44be70:	b.ne	44bea4 <sd_session_get_vt+0x78>  // b.any
  44be74:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44be78:	add	x1, x0, #0x34b
  44be7c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44be80:	add	x4, x0, #0x960
  44be84:	mov	w3, #0x234                 	// #564
  44be88:	mov	x2, x1
  44be8c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44be90:	add	x1, x0, #0x538
  44be94:	mov	w0, #0x1                   	// #1
  44be98:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44be9c:	mov	w0, #0x1                   	// #1
  44bea0:	b	44bea8 <sd_session_get_vt+0x7c>
  44bea4:	mov	w0, #0x0                   	// #0
  44bea8:	cmp	w0, #0x0
  44beac:	b.eq	44beb8 <sd_session_get_vt+0x8c>  // b.none
  44beb0:	mov	w19, #0xffffffea            	// #-22
  44beb4:	b	44bf1c <sd_session_get_vt+0xf0>
  44beb8:	add	x0, sp, #0x40
  44bebc:	mov	x2, x0
  44bec0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bec4:	add	x1, x0, #0x540
  44bec8:	ldr	x0, [sp, #40]
  44becc:	bl	44bc0c <session_get_string>
  44bed0:	str	w0, [sp, #60]
  44bed4:	ldr	w0, [sp, #60]
  44bed8:	cmp	w0, #0x0
  44bedc:	b.ge	44bee8 <sd_session_get_vt+0xbc>  // b.tcont
  44bee0:	ldr	w19, [sp, #60]
  44bee4:	b	44bf1c <sd_session_get_vt+0xf0>
  44bee8:	ldr	x0, [sp, #64]
  44beec:	add	x1, sp, #0x38
  44bef0:	bl	449724 <safe_atou>
  44bef4:	str	w0, [sp, #60]
  44bef8:	ldr	w0, [sp, #60]
  44befc:	cmp	w0, #0x0
  44bf00:	b.ge	44bf0c <sd_session_get_vt+0xe0>  // b.tcont
  44bf04:	ldr	w19, [sp, #60]
  44bf08:	b	44bf1c <sd_session_get_vt+0xf0>
  44bf0c:	ldr	w1, [sp, #56]
  44bf10:	ldr	x0, [sp, #32]
  44bf14:	str	w1, [x0]
  44bf18:	mov	w19, #0x0                   	// #0
  44bf1c:	add	x0, sp, #0x40
  44bf20:	bl	4494ec <freep>
  44bf24:	mov	w1, w19
  44bf28:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44bf2c:	ldr	x0, [x0, #4032]
  44bf30:	ldr	x2, [sp, #72]
  44bf34:	ldr	x0, [x0]
  44bf38:	eor	x0, x2, x0
  44bf3c:	cmp	x0, #0x0
  44bf40:	b.eq	44bf48 <sd_session_get_vt+0x11c>  // b.none
  44bf44:	bl	40b280 <__stack_chk_fail@plt>
  44bf48:	mov	w0, w1
  44bf4c:	ldr	x19, [sp, #16]
  44bf50:	ldp	x29, x30, [sp], #80
  44bf54:	ret

000000000044bf58 <sd_session_get_service>:
  44bf58:	stp	x29, x30, [sp, #-32]!
  44bf5c:	mov	x29, sp
  44bf60:	str	x0, [sp, #24]
  44bf64:	str	x1, [sp, #16]
  44bf68:	ldr	x2, [sp, #16]
  44bf6c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bf70:	add	x1, x0, #0x548
  44bf74:	ldr	x0, [sp, #24]
  44bf78:	bl	44bc0c <session_get_string>
  44bf7c:	ldp	x29, x30, [sp], #32
  44bf80:	ret

000000000044bf84 <sd_session_get_type>:
  44bf84:	stp	x29, x30, [sp, #-32]!
  44bf88:	mov	x29, sp
  44bf8c:	str	x0, [sp, #24]
  44bf90:	str	x1, [sp, #16]
  44bf94:	ldr	x2, [sp, #16]
  44bf98:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bf9c:	add	x1, x0, #0x550
  44bfa0:	ldr	x0, [sp, #24]
  44bfa4:	bl	44bc0c <session_get_string>
  44bfa8:	ldp	x29, x30, [sp], #32
  44bfac:	ret

000000000044bfb0 <sd_session_get_class>:
  44bfb0:	stp	x29, x30, [sp, #-32]!
  44bfb4:	mov	x29, sp
  44bfb8:	str	x0, [sp, #24]
  44bfbc:	str	x1, [sp, #16]
  44bfc0:	ldr	x2, [sp, #16]
  44bfc4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44bfc8:	add	x1, x0, #0x558
  44bfcc:	ldr	x0, [sp, #24]
  44bfd0:	bl	44bc0c <session_get_string>
  44bfd4:	ldp	x29, x30, [sp], #32
  44bfd8:	ret

000000000044bfdc <sd_session_get_desktop>:
  44bfdc:	stp	x29, x30, [sp, #-80]!
  44bfe0:	mov	x29, sp
  44bfe4:	str	x19, [sp, #16]
  44bfe8:	str	x0, [sp, #40]
  44bfec:	str	x1, [sp, #32]
  44bff0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44bff4:	ldr	x0, [x0, #4032]
  44bff8:	ldr	x1, [x0]
  44bffc:	str	x1, [sp, #72]
  44c000:	mov	x1, #0x0                   	// #0
  44c004:	str	xzr, [sp, #56]
  44c008:	ldr	x0, [sp, #32]
  44c00c:	cmp	x0, #0x0
  44c010:	cset	w0, ne  // ne = any
  44c014:	and	w0, w0, #0xff
  44c018:	and	x0, x0, #0xff
  44c01c:	cmp	x0, #0x0
  44c020:	b.ne	44c054 <sd_session_get_desktop+0x78>  // b.any
  44c024:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c028:	add	x1, x0, #0x34b
  44c02c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c030:	add	x4, x0, #0x978
  44c034:	mov	w3, #0x253                 	// #595
  44c038:	mov	x2, x1
  44c03c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c040:	add	x1, x0, #0x560
  44c044:	mov	w0, #0x1                   	// #1
  44c048:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44c04c:	mov	w0, #0x1                   	// #1
  44c050:	b	44c058 <sd_session_get_desktop+0x7c>
  44c054:	mov	w0, #0x0                   	// #0
  44c058:	cmp	w0, #0x0
  44c05c:	b.eq	44c068 <sd_session_get_desktop+0x8c>  // b.none
  44c060:	mov	w19, #0xffffffea            	// #-22
  44c064:	b	44c0d4 <sd_session_get_desktop+0xf8>
  44c068:	add	x0, sp, #0x38
  44c06c:	mov	x2, x0
  44c070:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c074:	add	x1, x0, #0x568
  44c078:	ldr	x0, [sp, #40]
  44c07c:	bl	44bc0c <session_get_string>
  44c080:	str	w0, [sp, #52]
  44c084:	ldr	w0, [sp, #52]
  44c088:	cmp	w0, #0x0
  44c08c:	b.ge	44c098 <sd_session_get_desktop+0xbc>  // b.tcont
  44c090:	ldr	w19, [sp, #52]
  44c094:	b	44c0d4 <sd_session_get_desktop+0xf8>
  44c098:	ldr	x0, [sp, #56]
  44c09c:	add	x1, sp, #0x40
  44c0a0:	mov	x2, x1
  44c0a4:	mov	w1, #0x0                   	// #0
  44c0a8:	bl	40ac90 <cunescape@plt>
  44c0ac:	str	w0, [sp, #52]
  44c0b0:	ldr	w0, [sp, #52]
  44c0b4:	cmp	w0, #0x0
  44c0b8:	b.ge	44c0c4 <sd_session_get_desktop+0xe8>  // b.tcont
  44c0bc:	ldr	w19, [sp, #52]
  44c0c0:	b	44c0d4 <sd_session_get_desktop+0xf8>
  44c0c4:	ldr	x1, [sp, #64]
  44c0c8:	ldr	x0, [sp, #32]
  44c0cc:	str	x1, [x0]
  44c0d0:	mov	w19, #0x0                   	// #0
  44c0d4:	add	x0, sp, #0x38
  44c0d8:	bl	4494ec <freep>
  44c0dc:	mov	w1, w19
  44c0e0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44c0e4:	ldr	x0, [x0, #4032]
  44c0e8:	ldr	x2, [sp, #72]
  44c0ec:	ldr	x0, [x0]
  44c0f0:	eor	x0, x2, x0
  44c0f4:	cmp	x0, #0x0
  44c0f8:	b.eq	44c100 <sd_session_get_desktop+0x124>  // b.none
  44c0fc:	bl	40b280 <__stack_chk_fail@plt>
  44c100:	mov	w0, w1
  44c104:	ldr	x19, [sp, #16]
  44c108:	ldp	x29, x30, [sp], #80
  44c10c:	ret

000000000044c110 <sd_session_get_display>:
  44c110:	stp	x29, x30, [sp, #-32]!
  44c114:	mov	x29, sp
  44c118:	str	x0, [sp, #24]
  44c11c:	str	x1, [sp, #16]
  44c120:	ldr	x2, [sp, #16]
  44c124:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c128:	add	x1, x0, #0x428
  44c12c:	ldr	x0, [sp, #24]
  44c130:	bl	44bc0c <session_get_string>
  44c134:	ldp	x29, x30, [sp], #32
  44c138:	ret

000000000044c13c <sd_session_get_remote_user>:
  44c13c:	stp	x29, x30, [sp, #-32]!
  44c140:	mov	x29, sp
  44c144:	str	x0, [sp, #24]
  44c148:	str	x1, [sp, #16]
  44c14c:	ldr	x2, [sp, #16]
  44c150:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c154:	add	x1, x0, #0x570
  44c158:	ldr	x0, [sp, #24]
  44c15c:	bl	44bc0c <session_get_string>
  44c160:	ldp	x29, x30, [sp], #32
  44c164:	ret

000000000044c168 <sd_session_get_remote_host>:
  44c168:	stp	x29, x30, [sp, #-32]!
  44c16c:	mov	x29, sp
  44c170:	str	x0, [sp, #24]
  44c174:	str	x1, [sp, #16]
  44c178:	ldr	x2, [sp, #16]
  44c17c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c180:	add	x1, x0, #0x580
  44c184:	ldr	x0, [sp, #24]
  44c188:	bl	44bc0c <session_get_string>
  44c18c:	ldp	x29, x30, [sp], #32
  44c190:	ret

000000000044c194 <sd_seat_get_active>:
  44c194:	stp	x29, x30, [sp, #-112]!
  44c198:	mov	x29, sp
  44c19c:	str	x19, [sp, #16]
  44c1a0:	str	x0, [sp, #56]
  44c1a4:	str	x1, [sp, #48]
  44c1a8:	str	x2, [sp, #40]
  44c1ac:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44c1b0:	ldr	x0, [x0, #4032]
  44c1b4:	ldr	x1, [x0]
  44c1b8:	str	x1, [sp, #104]
  44c1bc:	mov	x1, #0x0                   	// #0
  44c1c0:	str	xzr, [sp, #72]
  44c1c4:	str	xzr, [sp, #80]
  44c1c8:	str	xzr, [sp, #88]
  44c1cc:	ldr	x0, [sp, #48]
  44c1d0:	cmp	x0, #0x0
  44c1d4:	cset	w0, ne  // ne = any
  44c1d8:	and	w0, w0, #0xff
  44c1dc:	sxtw	x0, w0
  44c1e0:	cmp	x0, #0x0
  44c1e4:	b.ne	44c234 <sd_seat_get_active+0xa0>  // b.any
  44c1e8:	ldr	x0, [sp, #40]
  44c1ec:	cmp	x0, #0x0
  44c1f0:	cset	w0, ne  // ne = any
  44c1f4:	and	w0, w0, #0xff
  44c1f8:	sxtw	x0, w0
  44c1fc:	cmp	x0, #0x0
  44c200:	b.ne	44c234 <sd_seat_get_active+0xa0>  // b.any
  44c204:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c208:	add	x1, x0, #0x34b
  44c20c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c210:	add	x4, x0, #0x990
  44c214:	mov	w3, #0x271                 	// #625
  44c218:	mov	x2, x1
  44c21c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c220:	add	x1, x0, #0x590
  44c224:	mov	w0, #0x1                   	// #1
  44c228:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44c22c:	mov	w0, #0x1                   	// #1
  44c230:	b	44c238 <sd_seat_get_active+0xa4>
  44c234:	mov	w0, #0x0                   	// #0
  44c238:	cmp	w0, #0x0
  44c23c:	b.eq	44c248 <sd_seat_get_active+0xb4>  // b.none
  44c240:	mov	w19, #0xffffffea            	// #-22
  44c244:	b	44c37c <sd_seat_get_active+0x1e8>
  44c248:	add	x0, sp, #0x48
  44c24c:	mov	x1, x0
  44c250:	ldr	x0, [sp, #56]
  44c254:	bl	44af44 <file_of_seat>
  44c258:	str	w0, [sp, #68]
  44c25c:	ldr	w0, [sp, #68]
  44c260:	cmp	w0, #0x0
  44c264:	b.ge	44c270 <sd_seat_get_active+0xdc>  // b.tcont
  44c268:	ldr	w19, [sp, #68]
  44c26c:	b	44c37c <sd_seat_get_active+0x1e8>
  44c270:	ldr	x1, [sp, #72]
  44c274:	add	x0, sp, #0x58
  44c278:	add	x2, sp, #0x50
  44c27c:	mov	x6, #0x0                   	// #0
  44c280:	mov	x5, x0
  44c284:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c288:	add	x4, x0, #0x450
  44c28c:	mov	x3, x2
  44c290:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c294:	add	x2, x0, #0x500
  44c298:	mov	x0, #0x0                   	// #0
  44c29c:	bl	40b120 <parse_env_file_sentinel@plt>
  44c2a0:	str	w0, [sp, #68]
  44c2a4:	ldr	w0, [sp, #68]
  44c2a8:	cmn	w0, #0x2
  44c2ac:	b.ne	44c2b8 <sd_seat_get_active+0x124>  // b.any
  44c2b0:	mov	w19, #0xfffffffa            	// #-6
  44c2b4:	b	44c37c <sd_seat_get_active+0x1e8>
  44c2b8:	ldr	w0, [sp, #68]
  44c2bc:	cmp	w0, #0x0
  44c2c0:	b.ge	44c2cc <sd_seat_get_active+0x138>  // b.tcont
  44c2c4:	ldr	w19, [sp, #68]
  44c2c8:	b	44c37c <sd_seat_get_active+0x1e8>
  44c2cc:	ldr	x0, [sp, #48]
  44c2d0:	cmp	x0, #0x0
  44c2d4:	b.eq	44c2ec <sd_seat_get_active+0x158>  // b.none
  44c2d8:	ldr	x0, [sp, #80]
  44c2dc:	cmp	x0, #0x0
  44c2e0:	b.ne	44c2ec <sd_seat_get_active+0x158>  // b.any
  44c2e4:	mov	w19, #0xffffffc3            	// #-61
  44c2e8:	b	44c37c <sd_seat_get_active+0x1e8>
  44c2ec:	ldr	x0, [sp, #40]
  44c2f0:	cmp	x0, #0x0
  44c2f4:	b.eq	44c30c <sd_seat_get_active+0x178>  // b.none
  44c2f8:	ldr	x0, [sp, #88]
  44c2fc:	cmp	x0, #0x0
  44c300:	b.ne	44c30c <sd_seat_get_active+0x178>  // b.any
  44c304:	mov	w19, #0xffffffc3            	// #-61
  44c308:	b	44c37c <sd_seat_get_active+0x1e8>
  44c30c:	ldr	x0, [sp, #40]
  44c310:	cmp	x0, #0x0
  44c314:	b.eq	44c348 <sd_seat_get_active+0x1b4>  // b.none
  44c318:	ldr	x0, [sp, #88]
  44c31c:	cmp	x0, #0x0
  44c320:	b.eq	44c348 <sd_seat_get_active+0x1b4>  // b.none
  44c324:	ldr	x0, [sp, #88]
  44c328:	ldr	x1, [sp, #40]
  44c32c:	bl	40b6b0 <parse_uid@plt>
  44c330:	str	w0, [sp, #68]
  44c334:	ldr	w0, [sp, #68]
  44c338:	cmp	w0, #0x0
  44c33c:	b.ge	44c348 <sd_seat_get_active+0x1b4>  // b.tcont
  44c340:	ldr	w19, [sp, #68]
  44c344:	b	44c37c <sd_seat_get_active+0x1e8>
  44c348:	ldr	x0, [sp, #48]
  44c34c:	cmp	x0, #0x0
  44c350:	b.eq	44c378 <sd_seat_get_active+0x1e4>  // b.none
  44c354:	ldr	x0, [sp, #80]
  44c358:	cmp	x0, #0x0
  44c35c:	b.eq	44c378 <sd_seat_get_active+0x1e4>  // b.none
  44c360:	ldr	x0, [sp, #80]
  44c364:	str	x0, [sp, #96]
  44c368:	str	xzr, [sp, #80]
  44c36c:	ldr	x1, [sp, #96]
  44c370:	ldr	x0, [sp, #48]
  44c374:	str	x1, [x0]
  44c378:	mov	w19, #0x0                   	// #0
  44c37c:	add	x0, sp, #0x58
  44c380:	bl	4494ec <freep>
  44c384:	add	x0, sp, #0x50
  44c388:	bl	4494ec <freep>
  44c38c:	add	x0, sp, #0x48
  44c390:	bl	4494ec <freep>
  44c394:	mov	w1, w19
  44c398:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44c39c:	ldr	x0, [x0, #4032]
  44c3a0:	ldr	x2, [sp, #104]
  44c3a4:	ldr	x0, [x0]
  44c3a8:	eor	x0, x2, x0
  44c3ac:	cmp	x0, #0x0
  44c3b0:	b.eq	44c3b8 <sd_seat_get_active+0x224>  // b.none
  44c3b4:	bl	40b280 <__stack_chk_fail@plt>
  44c3b8:	mov	w0, w1
  44c3bc:	ldr	x19, [sp, #16]
  44c3c0:	ldp	x29, x30, [sp], #112
  44c3c4:	ret

000000000044c3c8 <sd_seat_get_sessions>:
  44c3c8:	stp	x29, x30, [sp, #-176]!
  44c3cc:	mov	x29, sp
  44c3d0:	stp	x19, x20, [sp, #16]
  44c3d4:	str	x0, [sp, #56]
  44c3d8:	str	x1, [sp, #48]
  44c3dc:	str	x2, [sp, #40]
  44c3e0:	str	x3, [sp, #32]
  44c3e4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44c3e8:	ldr	x0, [x0, #4032]
  44c3ec:	ldr	x1, [x0]
  44c3f0:	str	x1, [sp, #168]
  44c3f4:	mov	x1, #0x0                   	// #0
  44c3f8:	str	xzr, [sp, #80]
  44c3fc:	str	xzr, [sp, #88]
  44c400:	str	xzr, [sp, #96]
  44c404:	str	xzr, [sp, #104]
  44c408:	str	xzr, [sp, #112]
  44c40c:	str	wzr, [sp, #68]
  44c410:	add	x0, sp, #0x50
  44c414:	mov	x1, x0
  44c418:	ldr	x0, [sp, #56]
  44c41c:	bl	44af44 <file_of_seat>
  44c420:	str	w0, [sp, #76]
  44c424:	ldr	w0, [sp, #76]
  44c428:	cmp	w0, #0x0
  44c42c:	b.ge	44c438 <sd_seat_get_sessions+0x70>  // b.tcont
  44c430:	ldr	w19, [sp, #76]
  44c434:	b	44c6dc <sd_seat_get_sessions+0x314>
  44c438:	ldr	x1, [sp, #80]
  44c43c:	add	x0, sp, #0x60
  44c440:	add	x2, sp, #0x58
  44c444:	mov	x6, #0x0                   	// #0
  44c448:	mov	x5, x0
  44c44c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c450:	add	x4, x0, #0x460
  44c454:	mov	x3, x2
  44c458:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c45c:	add	x2, x0, #0x4a0
  44c460:	mov	x0, #0x0                   	// #0
  44c464:	bl	40b120 <parse_env_file_sentinel@plt>
  44c468:	str	w0, [sp, #76]
  44c46c:	ldr	w0, [sp, #76]
  44c470:	cmn	w0, #0x2
  44c474:	b.ne	44c480 <sd_seat_get_sessions+0xb8>  // b.any
  44c478:	mov	w19, #0xfffffffa            	// #-6
  44c47c:	b	44c6dc <sd_seat_get_sessions+0x314>
  44c480:	ldr	w0, [sp, #76]
  44c484:	cmp	w0, #0x0
  44c488:	b.ge	44c494 <sd_seat_get_sessions+0xcc>  // b.tcont
  44c48c:	ldr	w19, [sp, #76]
  44c490:	b	44c6dc <sd_seat_get_sessions+0x314>
  44c494:	ldr	x0, [sp, #88]
  44c498:	cmp	x0, #0x0
  44c49c:	b.eq	44c4cc <sd_seat_get_sessions+0x104>  // b.none
  44c4a0:	ldr	x2, [sp, #88]
  44c4a4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c4a8:	add	x1, x0, #0x488
  44c4ac:	mov	x0, x2
  44c4b0:	bl	4496a4 <strv_split>
  44c4b4:	str	x0, [sp, #104]
  44c4b8:	ldr	x0, [sp, #104]
  44c4bc:	cmp	x0, #0x0
  44c4c0:	b.ne	44c4cc <sd_seat_get_sessions+0x104>  // b.any
  44c4c4:	mov	w19, #0xfffffff4            	// #-12
  44c4c8:	b	44c6dc <sd_seat_get_sessions+0x314>
  44c4cc:	ldr	x0, [sp, #40]
  44c4d0:	cmp	x0, #0x0
  44c4d4:	b.eq	44c664 <sd_seat_get_sessions+0x29c>  // b.none
  44c4d8:	ldr	x0, [sp, #96]
  44c4dc:	cmp	x0, #0x0
  44c4e0:	b.eq	44c664 <sd_seat_get_sessions+0x29c>  // b.none
  44c4e4:	ldr	x0, [sp, #96]
  44c4e8:	str	x0, [sp, #120]
  44c4ec:	add	x1, sp, #0x80
  44c4f0:	add	x4, sp, #0x78
  44c4f4:	mov	w3, #0x0                   	// #0
  44c4f8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c4fc:	add	x2, x0, #0x470
  44c500:	mov	x0, x4
  44c504:	bl	40b590 <split@plt>
  44c508:	str	x0, [sp, #144]
  44c50c:	b	44c53c <sd_seat_get_sessions+0x174>
  44c510:	ldr	w0, [sp, #68]
  44c514:	add	w0, w0, #0x1
  44c518:	str	w0, [sp, #68]
  44c51c:	add	x1, sp, #0x80
  44c520:	add	x4, sp, #0x78
  44c524:	mov	w3, #0x0                   	// #0
  44c528:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c52c:	add	x2, x0, #0x470
  44c530:	mov	x0, x4
  44c534:	bl	40b590 <split@plt>
  44c538:	str	x0, [sp, #144]
  44c53c:	ldr	x0, [sp, #144]
  44c540:	cmp	x0, #0x0
  44c544:	b.ne	44c510 <sd_seat_get_sessions+0x148>  // b.any
  44c548:	ldr	w0, [sp, #68]
  44c54c:	cmp	w0, #0x0
  44c550:	b.eq	44c664 <sd_seat_get_sessions+0x29c>  // b.none
  44c554:	str	wzr, [sp, #72]
  44c558:	ldr	w0, [sp, #68]
  44c55c:	mov	x1, x0
  44c560:	mov	x0, #0x4                   	// #4
  44c564:	bl	44958c <malloc_multiply>
  44c568:	str	x0, [sp, #112]
  44c56c:	ldr	x0, [sp, #112]
  44c570:	cmp	x0, #0x0
  44c574:	b.ne	44c580 <sd_seat_get_sessions+0x1b8>  // b.any
  44c578:	mov	w19, #0xfffffff4            	// #-12
  44c57c:	b	44c6dc <sd_seat_get_sessions+0x314>
  44c580:	ldr	x0, [sp, #96]
  44c584:	str	x0, [sp, #120]
  44c588:	add	x1, sp, #0x80
  44c58c:	add	x4, sp, #0x78
  44c590:	mov	w3, #0x0                   	// #0
  44c594:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c598:	add	x2, x0, #0x470
  44c59c:	mov	x0, x4
  44c5a0:	bl	40b590 <split@plt>
  44c5a4:	str	x0, [sp, #144]
  44c5a8:	b	44c658 <sd_seat_get_sessions+0x290>
  44c5ac:	str	xzr, [sp, #136]
  44c5b0:	ldr	x0, [sp, #128]
  44c5b4:	mov	x1, x0
  44c5b8:	ldr	x0, [sp, #144]
  44c5bc:	bl	40b1e0 <strndup@plt>
  44c5c0:	str	x0, [sp, #136]
  44c5c4:	ldr	x0, [sp, #136]
  44c5c8:	cmp	x0, #0x0
  44c5cc:	b.ne	44c5dc <sd_seat_get_sessions+0x214>  // b.any
  44c5d0:	mov	w19, #0xfffffff4            	// #-12
  44c5d4:	mov	w20, #0x0                   	// #0
  44c5d8:	b	44c628 <sd_seat_get_sessions+0x260>
  44c5dc:	ldr	x2, [sp, #136]
  44c5e0:	ldr	x1, [sp, #112]
  44c5e4:	ldr	w0, [sp, #72]
  44c5e8:	lsl	x0, x0, #2
  44c5ec:	add	x0, x1, x0
  44c5f0:	mov	x1, x0
  44c5f4:	mov	x0, x2
  44c5f8:	bl	40b6b0 <parse_uid@plt>
  44c5fc:	str	w0, [sp, #76]
  44c600:	ldr	w0, [sp, #76]
  44c604:	cmp	w0, #0x0
  44c608:	b.ge	44c618 <sd_seat_get_sessions+0x250>  // b.tcont
  44c60c:	ldr	w19, [sp, #76]
  44c610:	mov	w20, #0x0                   	// #0
  44c614:	b	44c628 <sd_seat_get_sessions+0x260>
  44c618:	ldr	w0, [sp, #72]
  44c61c:	add	w0, w0, #0x1
  44c620:	str	w0, [sp, #72]
  44c624:	mov	w20, #0x1                   	// #1
  44c628:	add	x0, sp, #0x88
  44c62c:	bl	4494ec <freep>
  44c630:	cmp	w20, #0x1
  44c634:	b.ne	44c6d8 <sd_seat_get_sessions+0x310>  // b.any
  44c638:	add	x1, sp, #0x80
  44c63c:	add	x4, sp, #0x78
  44c640:	mov	w3, #0x0                   	// #0
  44c644:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c648:	add	x2, x0, #0x470
  44c64c:	mov	x0, x4
  44c650:	bl	40b590 <split@plt>
  44c654:	str	x0, [sp, #144]
  44c658:	ldr	x0, [sp, #144]
  44c65c:	cmp	x0, #0x0
  44c660:	b.ne	44c5ac <sd_seat_get_sessions+0x1e4>  // b.any
  44c664:	ldr	x0, [sp, #104]
  44c668:	bl	40b3f0 <strv_length@plt>
  44c66c:	str	w0, [sp, #76]
  44c670:	ldr	x0, [sp, #48]
  44c674:	cmp	x0, #0x0
  44c678:	b.eq	44c694 <sd_seat_get_sessions+0x2cc>  // b.none
  44c67c:	ldr	x0, [sp, #104]
  44c680:	str	x0, [sp, #152]
  44c684:	str	xzr, [sp, #104]
  44c688:	ldr	x1, [sp, #152]
  44c68c:	ldr	x0, [sp, #48]
  44c690:	str	x1, [x0]
  44c694:	ldr	x0, [sp, #40]
  44c698:	cmp	x0, #0x0
  44c69c:	b.eq	44c6b8 <sd_seat_get_sessions+0x2f0>  // b.none
  44c6a0:	ldr	x0, [sp, #112]
  44c6a4:	str	x0, [sp, #160]
  44c6a8:	str	xzr, [sp, #112]
  44c6ac:	ldr	x1, [sp, #160]
  44c6b0:	ldr	x0, [sp, #40]
  44c6b4:	str	x1, [x0]
  44c6b8:	ldr	x0, [sp, #32]
  44c6bc:	cmp	x0, #0x0
  44c6c0:	b.eq	44c6d0 <sd_seat_get_sessions+0x308>  // b.none
  44c6c4:	ldr	x0, [sp, #32]
  44c6c8:	ldr	w1, [sp, #68]
  44c6cc:	str	w1, [x0]
  44c6d0:	ldr	w19, [sp, #76]
  44c6d4:	b	44c6dc <sd_seat_get_sessions+0x314>
  44c6d8:	nop
  44c6dc:	add	x0, sp, #0x70
  44c6e0:	bl	4494ec <freep>
  44c6e4:	add	x0, sp, #0x68
  44c6e8:	bl	449670 <strv_freep>
  44c6ec:	add	x0, sp, #0x60
  44c6f0:	bl	4494ec <freep>
  44c6f4:	add	x0, sp, #0x58
  44c6f8:	bl	4494ec <freep>
  44c6fc:	add	x0, sp, #0x50
  44c700:	bl	4494ec <freep>
  44c704:	mov	w1, w19
  44c708:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44c70c:	ldr	x0, [x0, #4032]
  44c710:	ldr	x2, [sp, #168]
  44c714:	ldr	x0, [x0]
  44c718:	eor	x0, x2, x0
  44c71c:	cmp	x0, #0x0
  44c720:	b.eq	44c728 <sd_seat_get_sessions+0x360>  // b.none
  44c724:	bl	40b280 <__stack_chk_fail@plt>
  44c728:	mov	w0, w1
  44c72c:	ldp	x19, x20, [sp, #16]
  44c730:	ldp	x29, x30, [sp], #176
  44c734:	ret

000000000044c738 <seat_get_can>:
  44c738:	stp	x29, x30, [sp, #-80]!
  44c73c:	mov	x29, sp
  44c740:	str	x19, [sp, #16]
  44c744:	str	x0, [sp, #40]
  44c748:	str	x1, [sp, #32]
  44c74c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44c750:	ldr	x0, [x0, #4032]
  44c754:	ldr	x1, [x0]
  44c758:	str	x1, [sp, #72]
  44c75c:	mov	x1, #0x0                   	// #0
  44c760:	str	xzr, [sp, #56]
  44c764:	str	xzr, [sp, #64]
  44c768:	ldr	x0, [sp, #32]
  44c76c:	cmp	x0, #0x0
  44c770:	cset	w0, eq  // eq = none
  44c774:	and	w0, w0, #0xff
  44c778:	and	x0, x0, #0xff
  44c77c:	cmp	x0, #0x0
  44c780:	b.eq	44c7ac <seat_get_can+0x74>  // b.none
  44c784:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c788:	add	x1, x0, #0x34b
  44c78c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c790:	add	x4, x0, #0x9a8
  44c794:	mov	w3, #0x2da                 	// #730
  44c798:	mov	x2, x1
  44c79c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c7a0:	add	x1, x0, #0x478
  44c7a4:	mov	w0, #0x1                   	// #1
  44c7a8:	bl	40abb0 <log_assert_failed_realm@plt>
  44c7ac:	add	x0, sp, #0x38
  44c7b0:	mov	x1, x0
  44c7b4:	ldr	x0, [sp, #40]
  44c7b8:	bl	44af44 <file_of_seat>
  44c7bc:	str	w0, [sp, #52]
  44c7c0:	ldr	w0, [sp, #52]
  44c7c4:	cmp	w0, #0x0
  44c7c8:	b.ge	44c7d4 <seat_get_can+0x9c>  // b.tcont
  44c7cc:	ldr	w19, [sp, #52]
  44c7d0:	b	44c848 <seat_get_can+0x110>
  44c7d4:	ldr	x0, [sp, #56]
  44c7d8:	add	x1, sp, #0x40
  44c7dc:	mov	x4, #0x0                   	// #0
  44c7e0:	mov	x3, x1
  44c7e4:	ldr	x2, [sp, #32]
  44c7e8:	mov	x1, x0
  44c7ec:	mov	x0, #0x0                   	// #0
  44c7f0:	bl	40b120 <parse_env_file_sentinel@plt>
  44c7f4:	str	w0, [sp, #52]
  44c7f8:	ldr	w0, [sp, #52]
  44c7fc:	cmn	w0, #0x2
  44c800:	b.ne	44c80c <seat_get_can+0xd4>  // b.any
  44c804:	mov	w19, #0xfffffffa            	// #-6
  44c808:	b	44c848 <seat_get_can+0x110>
  44c80c:	ldr	w0, [sp, #52]
  44c810:	cmp	w0, #0x0
  44c814:	b.ge	44c820 <seat_get_can+0xe8>  // b.tcont
  44c818:	ldr	w19, [sp, #52]
  44c81c:	b	44c848 <seat_get_can+0x110>
  44c820:	ldr	x0, [sp, #64]
  44c824:	bl	4495e0 <isempty>
  44c828:	and	w0, w0, #0xff
  44c82c:	cmp	w0, #0x0
  44c830:	b.eq	44c83c <seat_get_can+0x104>  // b.none
  44c834:	mov	w19, #0xffffffc3            	// #-61
  44c838:	b	44c848 <seat_get_can+0x110>
  44c83c:	ldr	x0, [sp, #64]
  44c840:	bl	40a630 <parse_boolean@plt>
  44c844:	mov	w19, w0
  44c848:	add	x0, sp, #0x40
  44c84c:	bl	4494ec <freep>
  44c850:	add	x0, sp, #0x38
  44c854:	bl	4494ec <freep>
  44c858:	mov	w1, w19
  44c85c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44c860:	ldr	x0, [x0, #4032]
  44c864:	ldr	x2, [sp, #72]
  44c868:	ldr	x0, [x0]
  44c86c:	eor	x0, x2, x0
  44c870:	cmp	x0, #0x0
  44c874:	b.eq	44c87c <seat_get_can+0x144>  // b.none
  44c878:	bl	40b280 <__stack_chk_fail@plt>
  44c87c:	mov	w0, w1
  44c880:	ldr	x19, [sp, #16]
  44c884:	ldp	x29, x30, [sp], #80
  44c888:	ret

000000000044c88c <sd_seat_can_multi_session>:
  44c88c:	stp	x29, x30, [sp, #-32]!
  44c890:	mov	x29, sp
  44c894:	str	x0, [sp, #24]
  44c898:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c89c:	add	x1, x0, #0x5a0
  44c8a0:	ldr	x0, [sp, #24]
  44c8a4:	bl	44c738 <seat_get_can>
  44c8a8:	ldp	x29, x30, [sp], #32
  44c8ac:	ret

000000000044c8b0 <sd_seat_can_tty>:
  44c8b0:	stp	x29, x30, [sp, #-32]!
  44c8b4:	mov	x29, sp
  44c8b8:	str	x0, [sp, #24]
  44c8bc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c8c0:	add	x1, x0, #0x5b8
  44c8c4:	ldr	x0, [sp, #24]
  44c8c8:	bl	44c738 <seat_get_can>
  44c8cc:	ldp	x29, x30, [sp], #32
  44c8d0:	ret

000000000044c8d4 <sd_seat_can_graphical>:
  44c8d4:	stp	x29, x30, [sp, #-32]!
  44c8d8:	mov	x29, sp
  44c8dc:	str	x0, [sp, #24]
  44c8e0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c8e4:	add	x1, x0, #0x5c0
  44c8e8:	ldr	x0, [sp, #24]
  44c8ec:	bl	44c738 <seat_get_can>
  44c8f0:	ldp	x29, x30, [sp], #32
  44c8f4:	ret

000000000044c8f8 <sd_get_seats>:
  44c8f8:	stp	x29, x30, [sp, #-48]!
  44c8fc:	mov	x29, sp
  44c900:	str	x0, [sp, #24]
  44c904:	ldr	x1, [sp, #24]
  44c908:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c90c:	add	x0, x0, #0x5d0
  44c910:	bl	40b640 <get_files_in_directory@plt>
  44c914:	str	w0, [sp, #44]
  44c918:	ldr	w0, [sp, #44]
  44c91c:	cmn	w0, #0x2
  44c920:	b.ne	44c940 <sd_get_seats+0x48>  // b.any
  44c924:	ldr	x0, [sp, #24]
  44c928:	cmp	x0, #0x0
  44c92c:	b.eq	44c938 <sd_get_seats+0x40>  // b.none
  44c930:	ldr	x0, [sp, #24]
  44c934:	str	xzr, [x0]
  44c938:	mov	w0, #0x0                   	// #0
  44c93c:	b	44c944 <sd_get_seats+0x4c>
  44c940:	ldr	w0, [sp, #44]
  44c944:	ldp	x29, x30, [sp], #48
  44c948:	ret

000000000044c94c <sd_get_sessions>:
  44c94c:	stp	x29, x30, [sp, #-48]!
  44c950:	mov	x29, sp
  44c954:	str	x0, [sp, #24]
  44c958:	ldr	x1, [sp, #24]
  44c95c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c960:	add	x0, x0, #0x5e8
  44c964:	bl	40b640 <get_files_in_directory@plt>
  44c968:	str	w0, [sp, #44]
  44c96c:	ldr	w0, [sp, #44]
  44c970:	cmn	w0, #0x2
  44c974:	b.ne	44c994 <sd_get_sessions+0x48>  // b.any
  44c978:	ldr	x0, [sp, #24]
  44c97c:	cmp	x0, #0x0
  44c980:	b.eq	44c98c <sd_get_sessions+0x40>  // b.none
  44c984:	ldr	x0, [sp, #24]
  44c988:	str	xzr, [x0]
  44c98c:	mov	w0, #0x0                   	// #0
  44c990:	b	44c998 <sd_get_sessions+0x4c>
  44c994:	ldr	w0, [sp, #44]
  44c998:	ldp	x29, x30, [sp], #48
  44c99c:	ret

000000000044c9a0 <sd_get_uids>:
  44c9a0:	stp	x29, x30, [sp, #-128]!
  44c9a4:	mov	x29, sp
  44c9a8:	str	x19, [sp, #16]
  44c9ac:	str	x0, [sp, #40]
  44c9b0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44c9b4:	ldr	x0, [x0, #4032]
  44c9b8:	ldr	x1, [x0]
  44c9bc:	str	x1, [sp, #120]
  44c9c0:	mov	x1, #0x0                   	// #0
  44c9c4:	str	wzr, [sp, #60]
  44c9c8:	str	wzr, [sp, #64]
  44c9cc:	str	xzr, [sp, #88]
  44c9d0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44c9d4:	add	x0, x0, #0x600
  44c9d8:	bl	40b770 <opendir@plt>
  44c9dc:	str	x0, [sp, #80]
  44c9e0:	ldr	x0, [sp, #80]
  44c9e4:	cmp	x0, #0x0
  44c9e8:	b.ne	44ca28 <sd_get_uids+0x88>  // b.any
  44c9ec:	bl	40b040 <__errno_location@plt>
  44c9f0:	ldr	w0, [x0]
  44c9f4:	cmp	w0, #0x2
  44c9f8:	b.ne	44ca18 <sd_get_uids+0x78>  // b.any
  44c9fc:	ldr	x0, [sp, #40]
  44ca00:	cmp	x0, #0x0
  44ca04:	b.eq	44ca10 <sd_get_uids+0x70>  // b.none
  44ca08:	ldr	x0, [sp, #40]
  44ca0c:	str	xzr, [x0]
  44ca10:	mov	w19, #0x0                   	// #0
  44ca14:	b	44cbfc <sd_get_uids+0x25c>
  44ca18:	bl	40b040 <__errno_location@plt>
  44ca1c:	ldr	w0, [x0]
  44ca20:	neg	w19, w0
  44ca24:	b	44cbfc <sd_get_uids+0x25c>
  44ca28:	bl	40b040 <__errno_location@plt>
  44ca2c:	str	wzr, [x0]
  44ca30:	ldr	x0, [sp, #80]
  44ca34:	bl	40abe0 <readdir64@plt>
  44ca38:	str	x0, [sp, #96]
  44ca3c:	ldr	x0, [sp, #96]
  44ca40:	cmp	x0, #0x0
  44ca44:	b.ne	44ca68 <sd_get_uids+0xc8>  // b.any
  44ca48:	bl	40b040 <__errno_location@plt>
  44ca4c:	ldr	w0, [x0]
  44ca50:	cmp	w0, #0x0
  44ca54:	b.le	44cbd0 <sd_get_uids+0x230>
  44ca58:	bl	40b040 <__errno_location@plt>
  44ca5c:	ldr	w0, [x0]
  44ca60:	neg	w19, w0
  44ca64:	b	44cbfc <sd_get_uids+0x25c>
  44ca68:	ldr	x0, [sp, #80]
  44ca6c:	ldr	x1, [sp, #96]
  44ca70:	bl	40a9d0 <dirent_ensure_type@plt>
  44ca74:	ldr	x0, [sp, #96]
  44ca78:	bl	40bc10 <dirent_is_file@plt>
  44ca7c:	and	w0, w0, #0xff
  44ca80:	eor	w0, w0, #0x1
  44ca84:	and	w0, w0, #0xff
  44ca88:	cmp	w0, #0x0
  44ca8c:	b.ne	44cbac <sd_get_uids+0x20c>  // b.any
  44ca90:	ldr	x0, [sp, #96]
  44ca94:	add	x0, x0, #0x13
  44ca98:	add	x1, sp, #0x38
  44ca9c:	bl	40b6b0 <parse_uid@plt>
  44caa0:	str	w0, [sp, #68]
  44caa4:	ldr	w0, [sp, #68]
  44caa8:	cmp	w0, #0x0
  44caac:	b.lt	44cbb4 <sd_get_uids+0x214>  // b.tstop
  44cab0:	ldr	x0, [sp, #40]
  44cab4:	cmp	x0, #0x0
  44cab8:	b.eq	44cb9c <sd_get_uids+0x1fc>  // b.none
  44cabc:	ldr	w0, [sp, #60]
  44cac0:	ldr	w1, [sp, #64]
  44cac4:	cmp	w1, w0
  44cac8:	b.hi	44cb2c <sd_get_uids+0x18c>  // b.pmore
  44cacc:	mov	w0, #0x10                  	// #16
  44cad0:	str	w0, [sp, #72]
  44cad4:	ldr	w0, [sp, #60]
  44cad8:	lsl	w0, w0, #1
  44cadc:	str	w0, [sp, #76]
  44cae0:	ldr	w0, [sp, #72]
  44cae4:	ldr	w2, [sp, #76]
  44cae8:	ldr	w1, [sp, #76]
  44caec:	cmp	w2, w0
  44caf0:	csel	w0, w1, w0, ge  // ge = tcont
  44caf4:	str	w0, [sp, #64]
  44caf8:	ldr	x0, [sp, #88]
  44cafc:	ldr	w1, [sp, #64]
  44cb00:	mov	x2, x1
  44cb04:	mov	x1, #0x4                   	// #4
  44cb08:	bl	40a8c0 <reallocarray@plt>
  44cb0c:	str	x0, [sp, #104]
  44cb10:	ldr	x0, [sp, #104]
  44cb14:	cmp	x0, #0x0
  44cb18:	b.ne	44cb24 <sd_get_uids+0x184>  // b.any
  44cb1c:	mov	w19, #0xfffffff4            	// #-12
  44cb20:	b	44cbfc <sd_get_uids+0x25c>
  44cb24:	ldr	x0, [sp, #104]
  44cb28:	str	x0, [sp, #88]
  44cb2c:	ldr	w0, [sp, #60]
  44cb30:	ldr	w1, [sp, #64]
  44cb34:	cmp	w1, w0
  44cb38:	cset	w0, ls  // ls = plast
  44cb3c:	and	w0, w0, #0xff
  44cb40:	and	x0, x0, #0xff
  44cb44:	cmp	x0, #0x0
  44cb48:	b.eq	44cb74 <sd_get_uids+0x1d4>  // b.none
  44cb4c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cb50:	add	x1, x0, #0x34b
  44cb54:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cb58:	add	x4, x0, #0x9b8
  44cb5c:	mov	w3, #0x33a                 	// #826
  44cb60:	mov	x2, x1
  44cb64:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cb68:	add	x1, x0, #0x618
  44cb6c:	mov	w0, #0x1                   	// #1
  44cb70:	bl	40abb0 <log_assert_failed_realm@plt>
  44cb74:	ldr	x1, [sp, #88]
  44cb78:	ldr	w0, [sp, #60]
  44cb7c:	add	w2, w0, #0x1
  44cb80:	str	w2, [sp, #60]
  44cb84:	sxtw	x0, w0
  44cb88:	lsl	x0, x0, #2
  44cb8c:	add	x0, x1, x0
  44cb90:	ldr	w1, [sp, #56]
  44cb94:	str	w1, [x0]
  44cb98:	b	44cbb8 <sd_get_uids+0x218>
  44cb9c:	ldr	w0, [sp, #60]
  44cba0:	add	w0, w0, #0x1
  44cba4:	str	w0, [sp, #60]
  44cba8:	b	44cbb8 <sd_get_uids+0x218>
  44cbac:	nop
  44cbb0:	b	44cbb8 <sd_get_uids+0x218>
  44cbb4:	nop
  44cbb8:	bl	40b040 <__errno_location@plt>
  44cbbc:	str	wzr, [x0]
  44cbc0:	ldr	x0, [sp, #80]
  44cbc4:	bl	40abe0 <readdir64@plt>
  44cbc8:	str	x0, [sp, #96]
  44cbcc:	b	44ca3c <sd_get_uids+0x9c>
  44cbd0:	nop
  44cbd4:	ldr	x0, [sp, #40]
  44cbd8:	cmp	x0, #0x0
  44cbdc:	b.eq	44cbf8 <sd_get_uids+0x258>  // b.none
  44cbe0:	ldr	x0, [sp, #88]
  44cbe4:	str	x0, [sp, #112]
  44cbe8:	str	xzr, [sp, #88]
  44cbec:	ldr	x1, [sp, #112]
  44cbf0:	ldr	x0, [sp, #40]
  44cbf4:	str	x1, [x0]
  44cbf8:	ldr	w19, [sp, #60]
  44cbfc:	add	x0, sp, #0x58
  44cc00:	bl	4494ec <freep>
  44cc04:	add	x0, sp, #0x50
  44cc08:	bl	4496f0 <closedirp>
  44cc0c:	mov	w1, w19
  44cc10:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44cc14:	ldr	x0, [x0, #4032]
  44cc18:	ldr	x2, [sp, #120]
  44cc1c:	ldr	x0, [x0]
  44cc20:	eor	x0, x2, x0
  44cc24:	cmp	x0, #0x0
  44cc28:	b.eq	44cc30 <sd_get_uids+0x290>  // b.none
  44cc2c:	bl	40b280 <__stack_chk_fail@plt>
  44cc30:	mov	w0, w1
  44cc34:	ldr	x19, [sp, #16]
  44cc38:	ldp	x29, x30, [sp], #128
  44cc3c:	ret

000000000044cc40 <sd_get_machine_names>:
  44cc40:	stp	x29, x30, [sp, #-96]!
  44cc44:	mov	x29, sp
  44cc48:	str	x19, [sp, #16]
  44cc4c:	str	x0, [sp, #40]
  44cc50:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44cc54:	ldr	x0, [x0, #4032]
  44cc58:	ldr	x1, [x0]
  44cc5c:	str	x1, [sp, #88]
  44cc60:	mov	x1, #0x0                   	// #0
  44cc64:	str	xzr, [sp, #56]
  44cc68:	add	x0, sp, #0x38
  44cc6c:	mov	x1, x0
  44cc70:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cc74:	add	x0, x0, #0x630
  44cc78:	bl	40b640 <get_files_in_directory@plt>
  44cc7c:	str	w0, [sp, #52]
  44cc80:	ldr	w0, [sp, #52]
  44cc84:	cmn	w0, #0x2
  44cc88:	b.ne	44cca8 <sd_get_machine_names+0x68>  // b.any
  44cc8c:	ldr	x0, [sp, #40]
  44cc90:	cmp	x0, #0x0
  44cc94:	b.eq	44cca0 <sd_get_machine_names+0x60>  // b.none
  44cc98:	ldr	x0, [sp, #40]
  44cc9c:	str	xzr, [x0]
  44cca0:	mov	w19, #0x0                   	// #0
  44cca4:	b	44cda8 <sd_get_machine_names+0x168>
  44cca8:	ldr	w0, [sp, #52]
  44ccac:	cmp	w0, #0x0
  44ccb0:	b.ge	44ccbc <sd_get_machine_names+0x7c>  // b.tcont
  44ccb4:	ldr	w19, [sp, #52]
  44ccb8:	b	44cda8 <sd_get_machine_names+0x168>
  44ccbc:	ldr	x0, [sp, #56]
  44ccc0:	cmp	x0, #0x0
  44ccc4:	b.eq	44cd80 <sd_get_machine_names+0x140>  // b.none
  44ccc8:	str	wzr, [sp, #52]
  44cccc:	ldr	x0, [sp, #56]
  44ccd0:	str	x0, [sp, #72]
  44ccd4:	ldr	x0, [sp, #72]
  44ccd8:	str	x0, [sp, #64]
  44ccdc:	b	44cd68 <sd_get_machine_names+0x128>
  44cce0:	ldr	x0, [sp, #64]
  44cce4:	ldr	x2, [x0]
  44cce8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ccec:	add	x1, x0, #0x648
  44ccf0:	mov	x0, x2
  44ccf4:	bl	449620 <startswith>
  44ccf8:	cmp	x0, #0x0
  44ccfc:	b.ne	44cd24 <sd_get_machine_names+0xe4>  // b.any
  44cd00:	ldr	x0, [sp, #64]
  44cd04:	ldr	x0, [x0]
  44cd08:	mov	w1, #0x0                   	// #0
  44cd0c:	bl	40aa30 <hostname_is_valid@plt>
  44cd10:	and	w0, w0, #0xff
  44cd14:	eor	w0, w0, #0x1
  44cd18:	and	w0, w0, #0xff
  44cd1c:	cmp	w0, #0x0
  44cd20:	b.eq	44cd34 <sd_get_machine_names+0xf4>  // b.none
  44cd24:	ldr	x0, [sp, #64]
  44cd28:	ldr	x0, [x0]
  44cd2c:	bl	40ba20 <free@plt>
  44cd30:	b	44cd5c <sd_get_machine_names+0x11c>
  44cd34:	ldr	x0, [sp, #64]
  44cd38:	ldr	x1, [x0]
  44cd3c:	ldr	x0, [sp, #72]
  44cd40:	str	x1, [x0]
  44cd44:	ldr	x0, [sp, #72]
  44cd48:	add	x0, x0, #0x8
  44cd4c:	str	x0, [sp, #72]
  44cd50:	ldr	w0, [sp, #52]
  44cd54:	add	w0, w0, #0x1
  44cd58:	str	w0, [sp, #52]
  44cd5c:	ldr	x0, [sp, #64]
  44cd60:	add	x0, x0, #0x8
  44cd64:	str	x0, [sp, #64]
  44cd68:	ldr	x0, [sp, #64]
  44cd6c:	ldr	x0, [x0]
  44cd70:	cmp	x0, #0x0
  44cd74:	b.ne	44cce0 <sd_get_machine_names+0xa0>  // b.any
  44cd78:	ldr	x0, [sp, #72]
  44cd7c:	str	xzr, [x0]
  44cd80:	ldr	x0, [sp, #40]
  44cd84:	cmp	x0, #0x0
  44cd88:	b.eq	44cda4 <sd_get_machine_names+0x164>  // b.none
  44cd8c:	ldr	x0, [sp, #56]
  44cd90:	str	x0, [sp, #80]
  44cd94:	str	xzr, [sp, #56]
  44cd98:	ldr	x1, [sp, #80]
  44cd9c:	ldr	x0, [sp, #40]
  44cda0:	str	x1, [x0]
  44cda4:	ldr	w19, [sp, #52]
  44cda8:	add	x0, sp, #0x38
  44cdac:	bl	449670 <strv_freep>
  44cdb0:	mov	w1, w19
  44cdb4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44cdb8:	ldr	x0, [x0, #4032]
  44cdbc:	ldr	x2, [sp, #88]
  44cdc0:	ldr	x0, [x0]
  44cdc4:	eor	x0, x2, x0
  44cdc8:	cmp	x0, #0x0
  44cdcc:	b.eq	44cdd4 <sd_get_machine_names+0x194>  // b.none
  44cdd0:	bl	40b280 <__stack_chk_fail@plt>
  44cdd4:	mov	w0, w1
  44cdd8:	ldr	x19, [sp, #16]
  44cddc:	ldp	x29, x30, [sp], #96
  44cde0:	ret

000000000044cde4 <sd_machine_get_class>:
  44cde4:	stp	x29, x30, [sp, #-144]!
  44cde8:	mov	x29, sp
  44cdec:	str	x19, [sp, #16]
  44cdf0:	str	x0, [x29, #40]
  44cdf4:	str	x1, [x29, #32]
  44cdf8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44cdfc:	ldr	x0, [x0, #4032]
  44ce00:	ldr	x1, [x0]
  44ce04:	str	x1, [x29, #136]
  44ce08:	mov	x1, #0x0                   	// #0
  44ce0c:	str	xzr, [x29, #56]
  44ce10:	ldr	x0, [x29, #32]
  44ce14:	cmp	x0, #0x0
  44ce18:	cset	w0, ne  // ne = any
  44ce1c:	and	w0, w0, #0xff
  44ce20:	and	x0, x0, #0xff
  44ce24:	cmp	x0, #0x0
  44ce28:	b.ne	44ce5c <sd_machine_get_class+0x78>  // b.any
  44ce2c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ce30:	add	x1, x0, #0x34b
  44ce34:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ce38:	add	x4, x0, #0x9c8
  44ce3c:	mov	w3, #0x370                 	// #880
  44ce40:	mov	x2, x1
  44ce44:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ce48:	add	x1, x0, #0x650
  44ce4c:	mov	w0, #0x1                   	// #1
  44ce50:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44ce54:	mov	w0, #0x1                   	// #1
  44ce58:	b	44ce60 <sd_machine_get_class+0x7c>
  44ce5c:	mov	w0, #0x0                   	// #0
  44ce60:	cmp	w0, #0x0
  44ce64:	b.eq	44ce70 <sd_machine_get_class+0x8c>  // b.none
  44ce68:	mov	w19, #0xffffffea            	// #-22
  44ce6c:	b	44d0f0 <sd_machine_get_class+0x30c>
  44ce70:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ce74:	add	x1, x0, #0x658
  44ce78:	ldr	x0, [x29, #40]
  44ce7c:	bl	40b710 <strcmp@plt>
  44ce80:	cmp	w0, #0x0
  44ce84:	b.ne	44ceac <sd_machine_get_class+0xc8>  // b.any
  44ce88:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ce8c:	add	x0, x0, #0x660
  44ce90:	bl	40b7c0 <strdup@plt>
  44ce94:	str	x0, [x29, #56]
  44ce98:	ldr	x0, [x29, #56]
  44ce9c:	cmp	x0, #0x0
  44cea0:	b.ne	44d0d4 <sd_machine_get_class+0x2f0>  // b.any
  44cea4:	mov	w19, #0xfffffff4            	// #-12
  44cea8:	b	44d0f0 <sd_machine_get_class+0x30c>
  44ceac:	mov	w1, #0x0                   	// #0
  44ceb0:	ldr	x0, [x29, #40]
  44ceb4:	bl	40aa30 <hostname_is_valid@plt>
  44ceb8:	and	w0, w0, #0xff
  44cebc:	eor	w0, w0, #0x1
  44cec0:	and	w0, w0, #0xff
  44cec4:	cmp	w0, #0x0
  44cec8:	b.eq	44ced4 <sd_machine_get_class+0xf0>  // b.none
  44cecc:	mov	w19, #0xffffffea            	// #-22
  44ced0:	b	44d0f0 <sd_machine_get_class+0x30c>
  44ced4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ced8:	add	x0, x0, #0x630
  44cedc:	str	x0, [x29, #120]
  44cee0:	ldr	x0, [x29, #40]
  44cee4:	str	x0, [x29, #128]
  44cee8:	str	xzr, [x29, #72]
  44ceec:	str	xzr, [x29, #80]
  44cef0:	b	44cf24 <sd_machine_get_class+0x140>
  44cef4:	ldr	x0, [x29, #80]
  44cef8:	lsl	x0, x0, #3
  44cefc:	add	x1, x29, #0x78
  44cf00:	ldr	x0, [x1, x0]
  44cf04:	bl	40bd10 <strlen@plt>
  44cf08:	mov	x1, x0
  44cf0c:	ldr	x0, [x29, #72]
  44cf10:	add	x0, x0, x1
  44cf14:	str	x0, [x29, #72]
  44cf18:	ldr	x0, [x29, #80]
  44cf1c:	add	x0, x0, #0x1
  44cf20:	str	x0, [x29, #80]
  44cf24:	ldr	x0, [x29, #80]
  44cf28:	cmp	x0, #0x1
  44cf2c:	b.hi	44cf48 <sd_machine_get_class+0x164>  // b.pmore
  44cf30:	ldr	x0, [x29, #80]
  44cf34:	lsl	x0, x0, #3
  44cf38:	add	x1, x29, #0x78
  44cf3c:	ldr	x0, [x1, x0]
  44cf40:	cmp	x0, #0x0
  44cf44:	b.ne	44cef4 <sd_machine_get_class+0x110>  // b.any
  44cf48:	ldr	x0, [x29, #72]
  44cf4c:	add	x0, x0, #0x1
  44cf50:	str	x0, [x29, #88]
  44cf54:	ldr	x1, [x29, #88]
  44cf58:	mov	x0, #0x1                   	// #1
  44cf5c:	bl	449510 <size_multiply_overflow>
  44cf60:	and	w0, w0, #0xff
  44cf64:	and	x0, x0, #0xff
  44cf68:	cmp	x0, #0x0
  44cf6c:	b.eq	44cf98 <sd_machine_get_class+0x1b4>  // b.none
  44cf70:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cf74:	add	x1, x0, #0x34b
  44cf78:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cf7c:	add	x4, x0, #0x9c8
  44cf80:	mov	w3, #0x37a                 	// #890
  44cf84:	mov	x2, x1
  44cf88:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cf8c:	add	x1, x0, #0x668
  44cf90:	mov	w0, #0x1                   	// #1
  44cf94:	bl	40abb0 <log_assert_failed_realm@plt>
  44cf98:	ldr	x0, [x29, #88]
  44cf9c:	cmp	x0, #0x400, lsl #12
  44cfa0:	cset	w0, hi  // hi = pmore
  44cfa4:	and	w0, w0, #0xff
  44cfa8:	and	x0, x0, #0xff
  44cfac:	cmp	x0, #0x0
  44cfb0:	b.eq	44cfdc <sd_machine_get_class+0x1f8>  // b.none
  44cfb4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cfb8:	add	x1, x0, #0x34b
  44cfbc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cfc0:	add	x4, x0, #0x9c8
  44cfc4:	mov	w3, #0x37a                 	// #890
  44cfc8:	mov	x2, x1
  44cfcc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44cfd0:	add	x1, x0, #0x698
  44cfd4:	mov	w0, #0x1                   	// #1
  44cfd8:	bl	40abb0 <log_assert_failed_realm@plt>
  44cfdc:	ldr	x0, [x29, #88]
  44cfe0:	add	x0, x0, #0xf
  44cfe4:	lsr	x0, x0, #4
  44cfe8:	lsl	x0, x0, #4
  44cfec:	sub	sp, sp, x0
  44cff0:	mov	x0, sp
  44cff4:	add	x0, x0, #0xf
  44cff8:	lsr	x0, x0, #4
  44cffc:	lsl	x0, x0, #4
  44d000:	str	x0, [x29, #96]
  44d004:	ldr	x0, [x29, #96]
  44d008:	str	x0, [x29, #64]
  44d00c:	str	xzr, [x29, #80]
  44d010:	b	44d040 <sd_machine_get_class+0x25c>
  44d014:	ldr	x0, [x29, #80]
  44d018:	lsl	x0, x0, #3
  44d01c:	add	x1, x29, #0x78
  44d020:	ldr	x0, [x1, x0]
  44d024:	mov	x1, x0
  44d028:	ldr	x0, [x29, #64]
  44d02c:	bl	40a510 <stpcpy@plt>
  44d030:	str	x0, [x29, #64]
  44d034:	ldr	x0, [x29, #80]
  44d038:	add	x0, x0, #0x1
  44d03c:	str	x0, [x29, #80]
  44d040:	ldr	x0, [x29, #80]
  44d044:	cmp	x0, #0x1
  44d048:	b.hi	44d064 <sd_machine_get_class+0x280>  // b.pmore
  44d04c:	ldr	x0, [x29, #80]
  44d050:	lsl	x0, x0, #3
  44d054:	add	x1, x29, #0x78
  44d058:	ldr	x0, [x1, x0]
  44d05c:	cmp	x0, #0x0
  44d060:	b.ne	44d014 <sd_machine_get_class+0x230>  // b.any
  44d064:	ldr	x0, [x29, #64]
  44d068:	strb	wzr, [x0]
  44d06c:	ldr	x0, [x29, #96]
  44d070:	str	x0, [x29, #104]
  44d074:	add	x0, x29, #0x38
  44d078:	mov	x4, #0x0                   	// #0
  44d07c:	mov	x3, x0
  44d080:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d084:	add	x2, x0, #0x558
  44d088:	ldr	x1, [x29, #104]
  44d08c:	mov	x0, #0x0                   	// #0
  44d090:	bl	40b120 <parse_env_file_sentinel@plt>
  44d094:	str	w0, [x29, #52]
  44d098:	ldr	w0, [x29, #52]
  44d09c:	cmn	w0, #0x2
  44d0a0:	b.ne	44d0ac <sd_machine_get_class+0x2c8>  // b.any
  44d0a4:	mov	w19, #0xfffffffa            	// #-6
  44d0a8:	b	44d0f0 <sd_machine_get_class+0x30c>
  44d0ac:	ldr	w0, [x29, #52]
  44d0b0:	cmp	w0, #0x0
  44d0b4:	b.ge	44d0c0 <sd_machine_get_class+0x2dc>  // b.tcont
  44d0b8:	ldr	w19, [x29, #52]
  44d0bc:	b	44d0f0 <sd_machine_get_class+0x30c>
  44d0c0:	ldr	x0, [x29, #56]
  44d0c4:	cmp	x0, #0x0
  44d0c8:	b.ne	44d0d4 <sd_machine_get_class+0x2f0>  // b.any
  44d0cc:	mov	w19, #0xfffffffb            	// #-5
  44d0d0:	b	44d0f0 <sd_machine_get_class+0x30c>
  44d0d4:	ldr	x0, [x29, #56]
  44d0d8:	str	x0, [x29, #112]
  44d0dc:	str	xzr, [x29, #56]
  44d0e0:	ldr	x1, [x29, #112]
  44d0e4:	ldr	x0, [x29, #32]
  44d0e8:	str	x1, [x0]
  44d0ec:	mov	w19, #0x0                   	// #0
  44d0f0:	add	x0, x29, #0x38
  44d0f4:	bl	4494ec <freep>
  44d0f8:	mov	w1, w19
  44d0fc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44d100:	ldr	x0, [x0, #4032]
  44d104:	ldr	x2, [x29, #136]
  44d108:	ldr	x0, [x0]
  44d10c:	eor	x0, x2, x0
  44d110:	cmp	x0, #0x0
  44d114:	b.eq	44d11c <sd_machine_get_class+0x338>  // b.none
  44d118:	bl	40b280 <__stack_chk_fail@plt>
  44d11c:	mov	w0, w1
  44d120:	mov	sp, x29
  44d124:	ldr	x19, [sp, #16]
  44d128:	ldp	x29, x30, [sp], #144
  44d12c:	ret

000000000044d130 <sd_machine_get_ifindices>:
  44d130:	stp	x29, x30, [sp, #-272]!
  44d134:	mov	x29, sp
  44d138:	stp	x19, x20, [sp, #16]
  44d13c:	stp	x21, x22, [sp, #32]
  44d140:	stp	x23, x24, [sp, #48]
  44d144:	stp	x25, x26, [sp, #64]
  44d148:	stp	x27, x28, [sp, #80]
  44d14c:	str	x0, [x29, #104]
  44d150:	str	x1, [x29, #96]
  44d154:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44d158:	ldr	x0, [x0, #4032]
  44d15c:	ldr	x1, [x0]
  44d160:	str	x1, [x29, #264]
  44d164:	mov	x1, #0x0                   	// #0
  44d168:	str	xzr, [x29, #128]
  44d16c:	str	xzr, [x29, #144]
  44d170:	str	xzr, [x29, #176]
  44d174:	str	xzr, [x29, #152]
  44d178:	mov	w1, #0x0                   	// #0
  44d17c:	ldr	x0, [x29, #104]
  44d180:	bl	40aa30 <hostname_is_valid@plt>
  44d184:	and	w0, w0, #0xff
  44d188:	and	x0, x0, #0xff
  44d18c:	cmp	x0, #0x0
  44d190:	b.ne	44d1c4 <sd_machine_get_ifindices+0x94>  // b.any
  44d194:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d198:	add	x1, x0, #0x34b
  44d19c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d1a0:	add	x4, x0, #0x9e0
  44d1a4:	mov	w3, #0x38f                 	// #911
  44d1a8:	mov	x2, x1
  44d1ac:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d1b0:	add	x1, x0, #0x6b8
  44d1b4:	mov	w0, #0x1                   	// #1
  44d1b8:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44d1bc:	mov	w0, #0x1                   	// #1
  44d1c0:	b	44d1c8 <sd_machine_get_ifindices+0x98>
  44d1c4:	mov	w0, #0x0                   	// #0
  44d1c8:	cmp	w0, #0x0
  44d1cc:	b.eq	44d1d8 <sd_machine_get_ifindices+0xa8>  // b.none
  44d1d0:	mov	w19, #0xffffffea            	// #-22
  44d1d4:	b	44d5a0 <sd_machine_get_ifindices+0x470>
  44d1d8:	ldr	x0, [x29, #96]
  44d1dc:	cmp	x0, #0x0
  44d1e0:	cset	w0, ne  // ne = any
  44d1e4:	and	w0, w0, #0xff
  44d1e8:	and	x0, x0, #0xff
  44d1ec:	cmp	x0, #0x0
  44d1f0:	b.ne	44d224 <sd_machine_get_ifindices+0xf4>  // b.any
  44d1f4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d1f8:	add	x1, x0, #0x34b
  44d1fc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d200:	add	x4, x0, #0x9e0
  44d204:	mov	w3, #0x390                 	// #912
  44d208:	mov	x2, x1
  44d20c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d210:	add	x1, x0, #0x6d8
  44d214:	mov	w0, #0x1                   	// #1
  44d218:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44d21c:	mov	w0, #0x1                   	// #1
  44d220:	b	44d228 <sd_machine_get_ifindices+0xf8>
  44d224:	mov	w0, #0x0                   	// #0
  44d228:	cmp	w0, #0x0
  44d22c:	b.eq	44d238 <sd_machine_get_ifindices+0x108>  // b.none
  44d230:	mov	w19, #0xffffffea            	// #-22
  44d234:	b	44d5a0 <sd_machine_get_ifindices+0x470>
  44d238:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d23c:	add	x0, x0, #0x630
  44d240:	str	x0, [x29, #248]
  44d244:	ldr	x0, [x29, #104]
  44d248:	str	x0, [x29, #256]
  44d24c:	str	xzr, [x29, #192]
  44d250:	str	xzr, [x29, #200]
  44d254:	b	44d288 <sd_machine_get_ifindices+0x158>
  44d258:	ldr	x0, [x29, #200]
  44d25c:	lsl	x0, x0, #3
  44d260:	add	x1, x29, #0xf8
  44d264:	ldr	x0, [x1, x0]
  44d268:	bl	40bd10 <strlen@plt>
  44d26c:	mov	x1, x0
  44d270:	ldr	x0, [x29, #192]
  44d274:	add	x0, x0, x1
  44d278:	str	x0, [x29, #192]
  44d27c:	ldr	x0, [x29, #200]
  44d280:	add	x0, x0, #0x1
  44d284:	str	x0, [x29, #200]
  44d288:	ldr	x0, [x29, #200]
  44d28c:	cmp	x0, #0x1
  44d290:	b.hi	44d2ac <sd_machine_get_ifindices+0x17c>  // b.pmore
  44d294:	ldr	x0, [x29, #200]
  44d298:	lsl	x0, x0, #3
  44d29c:	add	x1, x29, #0xf8
  44d2a0:	ldr	x0, [x1, x0]
  44d2a4:	cmp	x0, #0x0
  44d2a8:	b.ne	44d258 <sd_machine_get_ifindices+0x128>  // b.any
  44d2ac:	ldr	x0, [x29, #192]
  44d2b0:	add	x0, x0, #0x1
  44d2b4:	str	x0, [x29, #208]
  44d2b8:	ldr	x1, [x29, #208]
  44d2bc:	mov	x0, #0x1                   	// #1
  44d2c0:	bl	449510 <size_multiply_overflow>
  44d2c4:	and	w0, w0, #0xff
  44d2c8:	and	x0, x0, #0xff
  44d2cc:	cmp	x0, #0x0
  44d2d0:	b.eq	44d2fc <sd_machine_get_ifindices+0x1cc>  // b.none
  44d2d4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d2d8:	add	x1, x0, #0x34b
  44d2dc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d2e0:	add	x4, x0, #0x9e0
  44d2e4:	mov	w3, #0x392                 	// #914
  44d2e8:	mov	x2, x1
  44d2ec:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d2f0:	add	x1, x0, #0x668
  44d2f4:	mov	w0, #0x1                   	// #1
  44d2f8:	bl	40abb0 <log_assert_failed_realm@plt>
  44d2fc:	ldr	x0, [x29, #208]
  44d300:	cmp	x0, #0x400, lsl #12
  44d304:	cset	w0, hi  // hi = pmore
  44d308:	and	w0, w0, #0xff
  44d30c:	and	x0, x0, #0xff
  44d310:	cmp	x0, #0x0
  44d314:	b.eq	44d340 <sd_machine_get_ifindices+0x210>  // b.none
  44d318:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d31c:	add	x1, x0, #0x34b
  44d320:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d324:	add	x4, x0, #0x9e0
  44d328:	mov	w3, #0x392                 	// #914
  44d32c:	mov	x2, x1
  44d330:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d334:	add	x1, x0, #0x698
  44d338:	mov	w0, #0x1                   	// #1
  44d33c:	bl	40abb0 <log_assert_failed_realm@plt>
  44d340:	ldr	x0, [x29, #208]
  44d344:	add	x0, x0, #0xf
  44d348:	lsr	x0, x0, #4
  44d34c:	lsl	x0, x0, #4
  44d350:	sub	sp, sp, x0
  44d354:	mov	x0, sp
  44d358:	add	x0, x0, #0xf
  44d35c:	lsr	x0, x0, #4
  44d360:	lsl	x0, x0, #4
  44d364:	str	x0, [x29, #216]
  44d368:	ldr	x0, [x29, #216]
  44d36c:	str	x0, [x29, #184]
  44d370:	str	xzr, [x29, #200]
  44d374:	b	44d3a4 <sd_machine_get_ifindices+0x274>
  44d378:	ldr	x0, [x29, #200]
  44d37c:	lsl	x0, x0, #3
  44d380:	add	x1, x29, #0xf8
  44d384:	ldr	x0, [x1, x0]
  44d388:	mov	x1, x0
  44d38c:	ldr	x0, [x29, #184]
  44d390:	bl	40a510 <stpcpy@plt>
  44d394:	str	x0, [x29, #184]
  44d398:	ldr	x0, [x29, #200]
  44d39c:	add	x0, x0, #0x1
  44d3a0:	str	x0, [x29, #200]
  44d3a4:	ldr	x0, [x29, #200]
  44d3a8:	cmp	x0, #0x1
  44d3ac:	b.hi	44d3c8 <sd_machine_get_ifindices+0x298>  // b.pmore
  44d3b0:	ldr	x0, [x29, #200]
  44d3b4:	lsl	x0, x0, #3
  44d3b8:	add	x1, x29, #0xf8
  44d3bc:	ldr	x0, [x1, x0]
  44d3c0:	cmp	x0, #0x0
  44d3c4:	b.ne	44d378 <sd_machine_get_ifindices+0x248>  // b.any
  44d3c8:	ldr	x0, [x29, #184]
  44d3cc:	strb	wzr, [x0]
  44d3d0:	ldr	x0, [x29, #216]
  44d3d4:	str	x0, [x29, #224]
  44d3d8:	add	x0, x29, #0x80
  44d3dc:	mov	x4, #0x0                   	// #0
  44d3e0:	mov	x3, x0
  44d3e4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d3e8:	add	x2, x0, #0x6e8
  44d3ec:	ldr	x1, [x29, #224]
  44d3f0:	mov	x0, #0x0                   	// #0
  44d3f4:	bl	40b120 <parse_env_file_sentinel@plt>
  44d3f8:	str	w0, [x29, #124]
  44d3fc:	ldr	w0, [x29, #124]
  44d400:	cmn	w0, #0x2
  44d404:	b.ne	44d410 <sd_machine_get_ifindices+0x2e0>  // b.any
  44d408:	mov	w19, #0xfffffffa            	// #-6
  44d40c:	b	44d5a0 <sd_machine_get_ifindices+0x470>
  44d410:	ldr	w0, [x29, #124]
  44d414:	cmp	w0, #0x0
  44d418:	b.ge	44d424 <sd_machine_get_ifindices+0x2f4>  // b.tcont
  44d41c:	ldr	w19, [x29, #124]
  44d420:	b	44d5a0 <sd_machine_get_ifindices+0x470>
  44d424:	ldr	x0, [x29, #128]
  44d428:	cmp	x0, #0x0
  44d42c:	b.ne	44d440 <sd_machine_get_ifindices+0x310>  // b.any
  44d430:	ldr	x0, [x29, #96]
  44d434:	str	xzr, [x0]
  44d438:	mov	w19, #0x0                   	// #0
  44d43c:	b	44d5a0 <sd_machine_get_ifindices+0x470>
  44d440:	ldr	x0, [x29, #128]
  44d444:	str	x0, [x29, #160]
  44d448:	add	x1, x29, #0x88
  44d44c:	add	x4, x29, #0xa0
  44d450:	mov	w3, #0x0                   	// #0
  44d454:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d458:	add	x2, x0, #0x470
  44d45c:	mov	x0, x4
  44d460:	bl	40b590 <split@plt>
  44d464:	str	x0, [x29, #168]
  44d468:	b	44d580 <sd_machine_get_ifindices+0x450>
  44d46c:	mov	x0, sp
  44d470:	mov	x28, x0
  44d474:	ldr	x0, [x29, #136]
  44d478:	add	x0, x0, #0x1
  44d47c:	mov	x1, x0
  44d480:	sub	x1, x1, #0x1
  44d484:	str	x1, [x29, #232]
  44d488:	mov	x24, x0
  44d48c:	mov	x25, #0x0                   	// #0
  44d490:	lsr	x1, x24, #61
  44d494:	lsl	x21, x25, #3
  44d498:	orr	x21, x1, x21
  44d49c:	lsl	x20, x24, #3
  44d4a0:	mov	x26, x0
  44d4a4:	mov	x27, #0x0                   	// #0
  44d4a8:	lsr	x1, x26, #61
  44d4ac:	lsl	x23, x27, #3
  44d4b0:	orr	x23, x1, x23
  44d4b4:	lsl	x22, x26, #3
  44d4b8:	add	x0, x0, #0xf
  44d4bc:	lsr	x0, x0, #4
  44d4c0:	lsl	x0, x0, #4
  44d4c4:	sub	sp, sp, x0
  44d4c8:	mov	x0, sp
  44d4cc:	add	x0, x0, #0x0
  44d4d0:	str	x0, [x29, #240]
  44d4d4:	ldr	x0, [x29, #240]
  44d4d8:	ldr	x1, [x29, #136]
  44d4dc:	mov	x2, x1
  44d4e0:	ldr	x1, [x29, #168]
  44d4e4:	bl	40a680 <mempcpy@plt>
  44d4e8:	strb	wzr, [x0]
  44d4ec:	ldr	x0, [x29, #240]
  44d4f0:	add	x1, x29, #0x78
  44d4f4:	bl	40bc30 <parse_ifindex@plt>
  44d4f8:	cmp	w0, #0x0
  44d4fc:	b.ge	44d508 <sd_machine_get_ifindices+0x3d8>  // b.tcont
  44d500:	mov	sp, x28
  44d504:	b	44d560 <sd_machine_get_ifindices+0x430>
  44d508:	ldr	x0, [x29, #176]
  44d50c:	add	x2, x0, #0x1
  44d510:	add	x1, x29, #0x90
  44d514:	add	x0, x29, #0x98
  44d518:	mov	x3, #0x4                   	// #4
  44d51c:	bl	40ae60 <greedy_realloc@plt>
  44d520:	cmp	x0, #0x0
  44d524:	b.ne	44d53c <sd_machine_get_ifindices+0x40c>  // b.any
  44d528:	ldr	x0, [x29, #152]
  44d52c:	bl	40ba20 <free@plt>
  44d530:	mov	w19, #0xfffffff4            	// #-12
  44d534:	mov	sp, x28
  44d538:	b	44d5a0 <sd_machine_get_ifindices+0x470>
  44d53c:	ldr	x1, [x29, #152]
  44d540:	ldr	x0, [x29, #176]
  44d544:	add	x2, x0, #0x1
  44d548:	str	x2, [x29, #176]
  44d54c:	lsl	x0, x0, #2
  44d550:	add	x0, x1, x0
  44d554:	ldr	w1, [x29, #120]
  44d558:	str	w1, [x0]
  44d55c:	mov	sp, x28
  44d560:	add	x1, x29, #0x88
  44d564:	add	x4, x29, #0xa0
  44d568:	mov	w3, #0x0                   	// #0
  44d56c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d570:	add	x2, x0, #0x470
  44d574:	mov	x0, x4
  44d578:	bl	40b590 <split@plt>
  44d57c:	str	x0, [x29, #168]
  44d580:	ldr	x0, [x29, #168]
  44d584:	cmp	x0, #0x0
  44d588:	b.ne	44d46c <sd_machine_get_ifindices+0x33c>  // b.any
  44d58c:	ldr	x1, [x29, #152]
  44d590:	ldr	x0, [x29, #96]
  44d594:	str	x1, [x0]
  44d598:	ldr	x0, [x29, #176]
  44d59c:	mov	w19, w0
  44d5a0:	add	x0, x29, #0x80
  44d5a4:	bl	4494ec <freep>
  44d5a8:	mov	w1, w19
  44d5ac:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44d5b0:	ldr	x0, [x0, #4032]
  44d5b4:	ldr	x2, [x29, #264]
  44d5b8:	ldr	x0, [x0]
  44d5bc:	eor	x0, x2, x0
  44d5c0:	cmp	x0, #0x0
  44d5c4:	b.eq	44d5cc <sd_machine_get_ifindices+0x49c>  // b.none
  44d5c8:	bl	40b280 <__stack_chk_fail@plt>
  44d5cc:	mov	w0, w1
  44d5d0:	mov	sp, x29
  44d5d4:	ldp	x19, x20, [sp, #16]
  44d5d8:	ldp	x21, x22, [sp, #32]
  44d5dc:	ldp	x23, x24, [sp, #48]
  44d5e0:	ldp	x25, x26, [sp, #64]
  44d5e4:	ldp	x27, x28, [sp, #80]
  44d5e8:	ldp	x29, x30, [sp], #272
  44d5ec:	ret

000000000044d5f0 <MONITOR_TO_FD>:
  44d5f0:	sub	sp, sp, #0x10
  44d5f4:	str	x0, [sp, #8]
  44d5f8:	ldr	x0, [sp, #8]
  44d5fc:	sub	w0, w0, #0x1
  44d600:	add	sp, sp, #0x10
  44d604:	ret

000000000044d608 <FD_TO_MONITOR>:
  44d608:	sub	sp, sp, #0x10
  44d60c:	str	w0, [sp, #12]
  44d610:	ldr	w0, [sp, #12]
  44d614:	add	w0, w0, #0x1
  44d618:	sxtw	x0, w0
  44d61c:	add	sp, sp, #0x10
  44d620:	ret

000000000044d624 <sd_login_monitor_new>:
  44d624:	stp	x29, x30, [sp, #-80]!
  44d628:	mov	x29, sp
  44d62c:	str	x19, [sp, #16]
  44d630:	str	x0, [sp, #40]
  44d634:	str	x1, [sp, #32]
  44d638:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44d63c:	ldr	x0, [x0, #4032]
  44d640:	ldr	x1, [x0]
  44d644:	str	x1, [sp, #72]
  44d648:	mov	x1, #0x0                   	// #0
  44d64c:	mov	w0, #0xffffffff            	// #-1
  44d650:	str	w0, [sp, #64]
  44d654:	strb	wzr, [sp, #63]
  44d658:	ldr	x0, [sp, #32]
  44d65c:	cmp	x0, #0x0
  44d660:	cset	w0, ne  // ne = any
  44d664:	and	w0, w0, #0xff
  44d668:	and	x0, x0, #0xff
  44d66c:	cmp	x0, #0x0
  44d670:	b.ne	44d6a4 <sd_login_monitor_new+0x80>  // b.any
  44d674:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d678:	add	x1, x0, #0x34b
  44d67c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d680:	add	x4, x0, #0xa00
  44d684:	mov	w3, #0x3bf                 	// #959
  44d688:	mov	x2, x1
  44d68c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d690:	add	x1, x0, #0x6f0
  44d694:	mov	w0, #0x1                   	// #1
  44d698:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44d69c:	mov	w0, #0x1                   	// #1
  44d6a0:	b	44d6a8 <sd_login_monitor_new+0x84>
  44d6a4:	mov	w0, #0x0                   	// #0
  44d6a8:	cmp	w0, #0x0
  44d6ac:	b.eq	44d6b8 <sd_login_monitor_new+0x94>  // b.none
  44d6b0:	mov	w19, #0xffffffea            	// #-22
  44d6b4:	b	44d8b0 <sd_login_monitor_new+0x28c>
  44d6b8:	mov	w0, #0x800                 	// #2048
  44d6bc:	movk	w0, #0x8, lsl #16
  44d6c0:	bl	40b910 <inotify_init1@plt>
  44d6c4:	str	w0, [sp, #64]
  44d6c8:	ldr	w0, [sp, #64]
  44d6cc:	cmp	w0, #0x0
  44d6d0:	b.ge	44d6e4 <sd_login_monitor_new+0xc0>  // b.tcont
  44d6d4:	bl	40b040 <__errno_location@plt>
  44d6d8:	ldr	w0, [x0]
  44d6dc:	neg	w19, w0
  44d6e0:	b	44d8b0 <sd_login_monitor_new+0x28c>
  44d6e4:	ldr	x0, [sp, #40]
  44d6e8:	cmp	x0, #0x0
  44d6ec:	b.eq	44d708 <sd_login_monitor_new+0xe4>  // b.none
  44d6f0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d6f4:	add	x1, x0, #0x6f8
  44d6f8:	ldr	x0, [sp, #40]
  44d6fc:	bl	40b710 <strcmp@plt>
  44d700:	cmp	w0, #0x0
  44d704:	b.ne	44d748 <sd_login_monitor_new+0x124>  // b.any
  44d708:	ldr	w3, [sp, #64]
  44d70c:	mov	w2, #0x280                 	// #640
  44d710:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d714:	add	x1, x0, #0x5d0
  44d718:	mov	w0, w3
  44d71c:	bl	40b010 <inotify_add_watch@plt>
  44d720:	str	w0, [sp, #68]
  44d724:	ldr	w0, [sp, #68]
  44d728:	cmp	w0, #0x0
  44d72c:	b.ge	44d740 <sd_login_monitor_new+0x11c>  // b.tcont
  44d730:	bl	40b040 <__errno_location@plt>
  44d734:	ldr	w0, [x0]
  44d738:	neg	w19, w0
  44d73c:	b	44d8b0 <sd_login_monitor_new+0x28c>
  44d740:	mov	w0, #0x1                   	// #1
  44d744:	strb	w0, [sp, #63]
  44d748:	ldr	x0, [sp, #40]
  44d74c:	cmp	x0, #0x0
  44d750:	b.eq	44d76c <sd_login_monitor_new+0x148>  // b.none
  44d754:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d758:	add	x1, x0, #0x380
  44d75c:	ldr	x0, [sp, #40]
  44d760:	bl	40b710 <strcmp@plt>
  44d764:	cmp	w0, #0x0
  44d768:	b.ne	44d7ac <sd_login_monitor_new+0x188>  // b.any
  44d76c:	ldr	w3, [sp, #64]
  44d770:	mov	w2, #0x280                 	// #640
  44d774:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d778:	add	x1, x0, #0x5e8
  44d77c:	mov	w0, w3
  44d780:	bl	40b010 <inotify_add_watch@plt>
  44d784:	str	w0, [sp, #68]
  44d788:	ldr	w0, [sp, #68]
  44d78c:	cmp	w0, #0x0
  44d790:	b.ge	44d7a4 <sd_login_monitor_new+0x180>  // b.tcont
  44d794:	bl	40b040 <__errno_location@plt>
  44d798:	ldr	w0, [x0]
  44d79c:	neg	w19, w0
  44d7a0:	b	44d8b0 <sd_login_monitor_new+0x28c>
  44d7a4:	mov	w0, #0x1                   	// #1
  44d7a8:	strb	w0, [sp, #63]
  44d7ac:	ldr	x0, [sp, #40]
  44d7b0:	cmp	x0, #0x0
  44d7b4:	b.eq	44d7d0 <sd_login_monitor_new+0x1ac>  // b.none
  44d7b8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d7bc:	add	x1, x0, #0x3a0
  44d7c0:	ldr	x0, [sp, #40]
  44d7c4:	bl	40b710 <strcmp@plt>
  44d7c8:	cmp	w0, #0x0
  44d7cc:	b.ne	44d810 <sd_login_monitor_new+0x1ec>  // b.any
  44d7d0:	ldr	w3, [sp, #64]
  44d7d4:	mov	w2, #0x280                 	// #640
  44d7d8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d7dc:	add	x1, x0, #0x600
  44d7e0:	mov	w0, w3
  44d7e4:	bl	40b010 <inotify_add_watch@plt>
  44d7e8:	str	w0, [sp, #68]
  44d7ec:	ldr	w0, [sp, #68]
  44d7f0:	cmp	w0, #0x0
  44d7f4:	b.ge	44d808 <sd_login_monitor_new+0x1e4>  // b.tcont
  44d7f8:	bl	40b040 <__errno_location@plt>
  44d7fc:	ldr	w0, [x0]
  44d800:	neg	w19, w0
  44d804:	b	44d8b0 <sd_login_monitor_new+0x28c>
  44d808:	mov	w0, #0x1                   	// #1
  44d80c:	strb	w0, [sp, #63]
  44d810:	ldr	x0, [sp, #40]
  44d814:	cmp	x0, #0x0
  44d818:	b.eq	44d834 <sd_login_monitor_new+0x210>  // b.none
  44d81c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d820:	add	x1, x0, #0x3d0
  44d824:	ldr	x0, [sp, #40]
  44d828:	bl	40b710 <strcmp@plt>
  44d82c:	cmp	w0, #0x0
  44d830:	b.ne	44d874 <sd_login_monitor_new+0x250>  // b.any
  44d834:	ldr	w3, [sp, #64]
  44d838:	mov	w2, #0x280                 	// #640
  44d83c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d840:	add	x1, x0, #0x630
  44d844:	mov	w0, w3
  44d848:	bl	40b010 <inotify_add_watch@plt>
  44d84c:	str	w0, [sp, #68]
  44d850:	ldr	w0, [sp, #68]
  44d854:	cmp	w0, #0x0
  44d858:	b.ge	44d86c <sd_login_monitor_new+0x248>  // b.tcont
  44d85c:	bl	40b040 <__errno_location@plt>
  44d860:	ldr	w0, [x0]
  44d864:	neg	w19, w0
  44d868:	b	44d8b0 <sd_login_monitor_new+0x28c>
  44d86c:	mov	w0, #0x1                   	// #1
  44d870:	strb	w0, [sp, #63]
  44d874:	ldrb	w0, [sp, #63]
  44d878:	eor	w0, w0, #0x1
  44d87c:	and	w0, w0, #0xff
  44d880:	cmp	w0, #0x0
  44d884:	b.eq	44d890 <sd_login_monitor_new+0x26c>  // b.none
  44d888:	mov	w19, #0xffffffea            	// #-22
  44d88c:	b	44d8b0 <sd_login_monitor_new+0x28c>
  44d890:	ldr	w0, [sp, #64]
  44d894:	bl	44d608 <FD_TO_MONITOR>
  44d898:	mov	x1, x0
  44d89c:	ldr	x0, [sp, #32]
  44d8a0:	str	x1, [x0]
  44d8a4:	mov	w0, #0xffffffff            	// #-1
  44d8a8:	str	w0, [sp, #64]
  44d8ac:	mov	w19, #0x0                   	// #0
  44d8b0:	add	x0, sp, #0x40
  44d8b4:	bl	4496cc <closep>
  44d8b8:	mov	w1, w19
  44d8bc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44d8c0:	ldr	x0, [x0, #4032]
  44d8c4:	ldr	x2, [sp, #72]
  44d8c8:	ldr	x0, [x0]
  44d8cc:	eor	x0, x2, x0
  44d8d0:	cmp	x0, #0x0
  44d8d4:	b.eq	44d8dc <sd_login_monitor_new+0x2b8>  // b.none
  44d8d8:	bl	40b280 <__stack_chk_fail@plt>
  44d8dc:	mov	w0, w1
  44d8e0:	ldr	x19, [sp, #16]
  44d8e4:	ldp	x29, x30, [sp], #80
  44d8e8:	ret

000000000044d8ec <sd_login_monitor_unref>:
  44d8ec:	stp	x29, x30, [sp, #-48]!
  44d8f0:	mov	x29, sp
  44d8f4:	str	x0, [sp, #24]
  44d8f8:	ldr	x0, [sp, #24]
  44d8fc:	cmp	x0, #0x0
  44d900:	b.ne	44d90c <sd_login_monitor_unref+0x20>  // b.any
  44d904:	mov	x0, #0x0                   	// #0
  44d908:	b	44d924 <sd_login_monitor_unref+0x38>
  44d90c:	ldr	x0, [sp, #24]
  44d910:	bl	44d5f0 <MONITOR_TO_FD>
  44d914:	str	w0, [sp, #44]
  44d918:	ldr	w0, [sp, #44]
  44d91c:	bl	40a950 <close_nointr@plt>
  44d920:	mov	x0, #0x0                   	// #0
  44d924:	ldp	x29, x30, [sp], #48
  44d928:	ret

000000000044d92c <sd_login_monitor_flush>:
  44d92c:	stp	x29, x30, [sp, #-48]!
  44d930:	mov	x29, sp
  44d934:	str	x0, [sp, #24]
  44d938:	ldr	x0, [sp, #24]
  44d93c:	cmp	x0, #0x0
  44d940:	cset	w0, ne  // ne = any
  44d944:	and	w0, w0, #0xff
  44d948:	and	x0, x0, #0xff
  44d94c:	cmp	x0, #0x0
  44d950:	b.ne	44d984 <sd_login_monitor_flush+0x58>  // b.any
  44d954:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d958:	add	x1, x0, #0x34b
  44d95c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d960:	add	x4, x0, #0xa18
  44d964:	mov	w3, #0x3fd                 	// #1021
  44d968:	mov	x2, x1
  44d96c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d970:	add	x1, x0, #0x6f0
  44d974:	mov	w0, #0x1                   	// #1
  44d978:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44d97c:	mov	w0, #0x1                   	// #1
  44d980:	b	44d988 <sd_login_monitor_flush+0x5c>
  44d984:	mov	w0, #0x0                   	// #0
  44d988:	cmp	w0, #0x0
  44d98c:	b.eq	44d998 <sd_login_monitor_flush+0x6c>  // b.none
  44d990:	mov	w0, #0xffffffea            	// #-22
  44d994:	b	44d9c0 <sd_login_monitor_flush+0x94>
  44d998:	ldr	x0, [sp, #24]
  44d99c:	bl	44d5f0 <MONITOR_TO_FD>
  44d9a0:	bl	40aaa0 <flush_fd@plt>
  44d9a4:	str	w0, [sp, #44]
  44d9a8:	ldr	w0, [sp, #44]
  44d9ac:	cmp	w0, #0x0
  44d9b0:	b.ge	44d9bc <sd_login_monitor_flush+0x90>  // b.tcont
  44d9b4:	ldr	w0, [sp, #44]
  44d9b8:	b	44d9c0 <sd_login_monitor_flush+0x94>
  44d9bc:	mov	w0, #0x0                   	// #0
  44d9c0:	ldp	x29, x30, [sp], #48
  44d9c4:	ret

000000000044d9c8 <sd_login_monitor_get_fd>:
  44d9c8:	stp	x29, x30, [sp, #-32]!
  44d9cc:	mov	x29, sp
  44d9d0:	str	x0, [sp, #24]
  44d9d4:	ldr	x0, [sp, #24]
  44d9d8:	cmp	x0, #0x0
  44d9dc:	cset	w0, ne  // ne = any
  44d9e0:	and	w0, w0, #0xff
  44d9e4:	and	x0, x0, #0xff
  44d9e8:	cmp	x0, #0x0
  44d9ec:	b.ne	44da20 <sd_login_monitor_get_fd+0x58>  // b.any
  44d9f0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d9f4:	add	x1, x0, #0x34b
  44d9f8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44d9fc:	add	x4, x0, #0xa30
  44da00:	mov	w3, #0x408                 	// #1032
  44da04:	mov	x2, x1
  44da08:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44da0c:	add	x1, x0, #0x6f0
  44da10:	mov	w0, #0x1                   	// #1
  44da14:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44da18:	mov	w0, #0x1                   	// #1
  44da1c:	b	44da24 <sd_login_monitor_get_fd+0x5c>
  44da20:	mov	w0, #0x0                   	// #0
  44da24:	cmp	w0, #0x0
  44da28:	b.eq	44da34 <sd_login_monitor_get_fd+0x6c>  // b.none
  44da2c:	mov	w0, #0xffffffea            	// #-22
  44da30:	b	44da3c <sd_login_monitor_get_fd+0x74>
  44da34:	ldr	x0, [sp, #24]
  44da38:	bl	44d5f0 <MONITOR_TO_FD>
  44da3c:	ldp	x29, x30, [sp], #32
  44da40:	ret

000000000044da44 <sd_login_monitor_get_events>:
  44da44:	stp	x29, x30, [sp, #-32]!
  44da48:	mov	x29, sp
  44da4c:	str	x0, [sp, #24]
  44da50:	ldr	x0, [sp, #24]
  44da54:	cmp	x0, #0x0
  44da58:	cset	w0, ne  // ne = any
  44da5c:	and	w0, w0, #0xff
  44da60:	and	x0, x0, #0xff
  44da64:	cmp	x0, #0x0
  44da68:	b.ne	44da9c <sd_login_monitor_get_events+0x58>  // b.any
  44da6c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44da70:	add	x1, x0, #0x34b
  44da74:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44da78:	add	x4, x0, #0xa48
  44da7c:	mov	w3, #0x40f                 	// #1039
  44da80:	mov	x2, x1
  44da84:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44da88:	add	x1, x0, #0x6f0
  44da8c:	mov	w0, #0x1                   	// #1
  44da90:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44da94:	mov	w0, #0x1                   	// #1
  44da98:	b	44daa0 <sd_login_monitor_get_events+0x5c>
  44da9c:	mov	w0, #0x0                   	// #0
  44daa0:	cmp	w0, #0x0
  44daa4:	b.eq	44dab0 <sd_login_monitor_get_events+0x6c>  // b.none
  44daa8:	mov	w0, #0xffffffea            	// #-22
  44daac:	b	44dab4 <sd_login_monitor_get_events+0x70>
  44dab0:	mov	w0, #0x1                   	// #1
  44dab4:	ldp	x29, x30, [sp], #32
  44dab8:	ret

000000000044dabc <sd_login_monitor_get_timeout>:
  44dabc:	stp	x29, x30, [sp, #-32]!
  44dac0:	mov	x29, sp
  44dac4:	str	x0, [sp, #24]
  44dac8:	str	x1, [sp, #16]
  44dacc:	ldr	x0, [sp, #24]
  44dad0:	cmp	x0, #0x0
  44dad4:	cset	w0, ne  // ne = any
  44dad8:	and	w0, w0, #0xff
  44dadc:	and	x0, x0, #0xff
  44dae0:	cmp	x0, #0x0
  44dae4:	b.ne	44db18 <sd_login_monitor_get_timeout+0x5c>  // b.any
  44dae8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44daec:	add	x1, x0, #0x34b
  44daf0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44daf4:	add	x4, x0, #0xa68
  44daf8:	mov	w3, #0x41a                 	// #1050
  44dafc:	mov	x2, x1
  44db00:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44db04:	add	x1, x0, #0x6f0
  44db08:	mov	w0, #0x1                   	// #1
  44db0c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44db10:	mov	w0, #0x1                   	// #1
  44db14:	b	44db1c <sd_login_monitor_get_timeout+0x60>
  44db18:	mov	w0, #0x0                   	// #0
  44db1c:	cmp	w0, #0x0
  44db20:	b.eq	44db2c <sd_login_monitor_get_timeout+0x70>  // b.none
  44db24:	mov	w0, #0xffffffea            	// #-22
  44db28:	b	44db9c <sd_login_monitor_get_timeout+0xe0>
  44db2c:	ldr	x0, [sp, #16]
  44db30:	cmp	x0, #0x0
  44db34:	cset	w0, ne  // ne = any
  44db38:	and	w0, w0, #0xff
  44db3c:	and	x0, x0, #0xff
  44db40:	cmp	x0, #0x0
  44db44:	b.ne	44db78 <sd_login_monitor_get_timeout+0xbc>  // b.any
  44db48:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44db4c:	add	x1, x0, #0x34b
  44db50:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44db54:	add	x4, x0, #0xa68
  44db58:	mov	w3, #0x41b                 	// #1051
  44db5c:	mov	x2, x1
  44db60:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44db64:	add	x1, x0, #0x700
  44db68:	mov	w0, #0x1                   	// #1
  44db6c:	bl	40bbb0 <log_assert_failed_return_realm@plt>
  44db70:	mov	w0, #0x1                   	// #1
  44db74:	b	44db7c <sd_login_monitor_get_timeout+0xc0>
  44db78:	mov	w0, #0x0                   	// #0
  44db7c:	cmp	w0, #0x0
  44db80:	b.eq	44db8c <sd_login_monitor_get_timeout+0xd0>  // b.none
  44db84:	mov	w0, #0xffffffea            	// #-22
  44db88:	b	44db9c <sd_login_monitor_get_timeout+0xe0>
  44db8c:	ldr	x0, [sp, #16]
  44db90:	mov	x1, #0xffffffffffffffff    	// #-1
  44db94:	str	x1, [x0]
  44db98:	mov	w0, #0x0                   	// #0
  44db9c:	ldp	x29, x30, [sp], #32
  44dba0:	ret

000000000044dba4 <link_config_gperf_hash>:
  44dba4:	mov	x3, x1
  44dba8:	add	x1, x0, #0x6
  44dbac:	ldrb	w1, [x1]
  44dbb0:	mov	w4, w1
  44dbb4:	adrp	x1, 45d000 <__func__.7018+0x3c0>
  44dbb8:	add	x2, x1, #0xd98
  44dbbc:	sxtw	x1, w4
  44dbc0:	ldrb	w1, [x2, x1]
  44dbc4:	mov	w2, w1
  44dbc8:	mov	w1, w3
  44dbcc:	add	w1, w2, w1
  44dbd0:	add	x0, x0, #0x5
  44dbd4:	ldrb	w0, [x0]
  44dbd8:	mov	w3, w0
  44dbdc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44dbe0:	add	x2, x0, #0xd98
  44dbe4:	sxtw	x0, w3
  44dbe8:	ldrb	w0, [x2, x0]
  44dbec:	add	w0, w1, w0
  44dbf0:	ret

000000000044dbf4 <link_config_gperf_lookup>:
  44dbf4:	stp	x29, x30, [sp, #-48]!
  44dbf8:	mov	x29, sp
  44dbfc:	stp	x19, x20, [sp, #16]
  44dc00:	str	x21, [sp, #32]
  44dc04:	mov	x20, x0
  44dc08:	mov	x0, x1
  44dc0c:	cmp	x0, #0x1f
  44dc10:	b.hi	44dc90 <link_config_gperf_lookup+0x9c>  // b.pmore
  44dc14:	cmp	x0, #0x8
  44dc18:	b.ls	44dc90 <link_config_gperf_lookup+0x9c>  // b.plast
  44dc1c:	mov	x1, x0
  44dc20:	mov	x0, x20
  44dc24:	bl	44dba4 <link_config_gperf_hash>
  44dc28:	mov	w21, w0
  44dc2c:	cmp	w21, #0x37
  44dc30:	b.hi	44dc90 <link_config_gperf_lookup+0x9c>  // b.pmore
  44dc34:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  44dc38:	add	x1, x0, #0x828
  44dc3c:	mov	w0, w21
  44dc40:	lsl	x0, x0, #5
  44dc44:	add	x0, x1, x0
  44dc48:	ldr	x19, [x0]
  44dc4c:	cmp	x19, #0x0
  44dc50:	b.eq	44dc90 <link_config_gperf_lookup+0x9c>  // b.none
  44dc54:	ldrb	w1, [x20]
  44dc58:	ldrb	w0, [x19]
  44dc5c:	cmp	w1, w0
  44dc60:	b.ne	44dc90 <link_config_gperf_lookup+0x9c>  // b.any
  44dc64:	add	x0, x20, #0x1
  44dc68:	add	x1, x19, #0x1
  44dc6c:	bl	40b710 <strcmp@plt>
  44dc70:	cmp	w0, #0x0
  44dc74:	b.ne	44dc90 <link_config_gperf_lookup+0x9c>  // b.any
  44dc78:	mov	w0, w21
  44dc7c:	lsl	x1, x0, #5
  44dc80:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  44dc84:	add	x0, x0, #0x828
  44dc88:	add	x0, x1, x0
  44dc8c:	b	44dc94 <link_config_gperf_lookup+0xa0>
  44dc90:	mov	x0, #0x0                   	// #0
  44dc94:	ldp	x19, x20, [sp, #16]
  44dc98:	ldr	x21, [sp, #32]
  44dc9c:	ldp	x29, x30, [sp], #48
  44dca0:	ret

000000000044dca4 <mfree>:
  44dca4:	stp	x29, x30, [sp, #-32]!
  44dca8:	mov	x29, sp
  44dcac:	str	x0, [sp, #24]
  44dcb0:	ldr	x0, [sp, #24]
  44dcb4:	bl	40ba20 <free@plt>
  44dcb8:	mov	x0, #0x0                   	// #0
  44dcbc:	ldp	x29, x30, [sp], #32
  44dcc0:	ret

000000000044dcc4 <freep>:
  44dcc4:	stp	x29, x30, [sp, #-32]!
  44dcc8:	mov	x29, sp
  44dccc:	str	x0, [sp, #24]
  44dcd0:	ldr	x0, [sp, #24]
  44dcd4:	ldr	x0, [x0]
  44dcd8:	bl	40ba20 <free@plt>
  44dcdc:	nop
  44dce0:	ldp	x29, x30, [sp], #32
  44dce4:	ret

000000000044dce8 <size_multiply_overflow>:
  44dce8:	sub	sp, sp, #0x10
  44dcec:	str	x0, [sp, #8]
  44dcf0:	str	x1, [sp]
  44dcf4:	ldr	x0, [sp]
  44dcf8:	cmp	x0, #0x0
  44dcfc:	cset	w0, ne  // ne = any
  44dd00:	and	w0, w0, #0xff
  44dd04:	and	x0, x0, #0xff
  44dd08:	cmp	x0, #0x0
  44dd0c:	b.eq	44dd50 <size_multiply_overflow+0x68>  // b.none
  44dd10:	mov	x2, #0x0                   	// #0
  44dd14:	ldr	x1, [sp, #8]
  44dd18:	ldr	x0, [sp]
  44dd1c:	umulh	x0, x1, x0
  44dd20:	cmp	x0, #0x0
  44dd24:	b.eq	44dd2c <size_multiply_overflow+0x44>  // b.none
  44dd28:	mov	x2, #0x1                   	// #1
  44dd2c:	mov	x0, x2
  44dd30:	cmp	x0, #0x0
  44dd34:	cset	w0, ne  // ne = any
  44dd38:	and	w0, w0, #0xff
  44dd3c:	and	x0, x0, #0xff
  44dd40:	cmp	x0, #0x0
  44dd44:	b.eq	44dd50 <size_multiply_overflow+0x68>  // b.none
  44dd48:	mov	w0, #0x1                   	// #1
  44dd4c:	b	44dd54 <size_multiply_overflow+0x6c>
  44dd50:	mov	w0, #0x0                   	// #0
  44dd54:	and	w0, w0, #0x1
  44dd58:	and	w0, w0, #0xff
  44dd5c:	add	sp, sp, #0x10
  44dd60:	ret

000000000044dd64 <malloc_multiply>:
  44dd64:	stp	x29, x30, [sp, #-32]!
  44dd68:	mov	x29, sp
  44dd6c:	str	x0, [sp, #24]
  44dd70:	str	x1, [sp, #16]
  44dd74:	ldr	x1, [sp, #16]
  44dd78:	ldr	x0, [sp, #24]
  44dd7c:	bl	44dce8 <size_multiply_overflow>
  44dd80:	and	w0, w0, #0xff
  44dd84:	cmp	w0, #0x0
  44dd88:	b.eq	44dd94 <malloc_multiply+0x30>  // b.none
  44dd8c:	mov	x0, #0x0                   	// #0
  44dd90:	b	44ddb0 <malloc_multiply+0x4c>
  44dd94:	ldr	x1, [sp, #24]
  44dd98:	ldr	x0, [sp, #16]
  44dd9c:	mul	x0, x1, x0
  44dda0:	cmp	x0, #0x0
  44dda4:	b.ne	44ddac <malloc_multiply+0x48>  // b.any
  44dda8:	mov	x0, #0x1                   	// #1
  44ddac:	bl	40b480 <malloc@plt>
  44ddb0:	ldp	x29, x30, [sp], #32
  44ddb4:	ret

000000000044ddb8 <htole64>:
  44ddb8:	sub	sp, sp, #0x10
  44ddbc:	str	x0, [sp, #8]
  44ddc0:	ldr	x0, [sp, #8]
  44ddc4:	add	sp, sp, #0x10
  44ddc8:	ret

000000000044ddcc <set_free_free>:
  44ddcc:	stp	x29, x30, [sp, #-32]!
  44ddd0:	mov	x29, sp
  44ddd4:	str	x0, [sp, #24]
  44ddd8:	mov	x2, #0x0                   	// #0
  44dddc:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44dde0:	ldr	x1, [x0, #4080]
  44dde4:	ldr	x0, [sp, #24]
  44dde8:	bl	40a400 <internal_hashmap_free@plt>
  44ddec:	ldp	x29, x30, [sp], #32
  44ddf0:	ret

000000000044ddf4 <set_contains>:
  44ddf4:	stp	x29, x30, [sp, #-32]!
  44ddf8:	mov	x29, sp
  44ddfc:	str	x0, [sp, #24]
  44de00:	str	x1, [sp, #16]
  44de04:	ldr	x1, [sp, #16]
  44de08:	ldr	x0, [sp, #24]
  44de0c:	bl	40a710 <internal_hashmap_contains@plt>
  44de10:	and	w0, w0, #0xff
  44de14:	ldp	x29, x30, [sp], #32
  44de18:	ret

000000000044de1c <set_move>:
  44de1c:	stp	x29, x30, [sp, #-32]!
  44de20:	mov	x29, sp
  44de24:	str	x0, [sp, #24]
  44de28:	str	x1, [sp, #16]
  44de2c:	ldr	x1, [sp, #16]
  44de30:	ldr	x0, [sp, #24]
  44de34:	bl	40a820 <internal_hashmap_move@plt>
  44de38:	ldp	x29, x30, [sp], #32
  44de3c:	ret

000000000044de40 <set_free_freep>:
  44de40:	stp	x29, x30, [sp, #-32]!
  44de44:	mov	x29, sp
  44de48:	str	x0, [sp, #24]
  44de4c:	ldr	x0, [sp, #24]
  44de50:	ldr	x0, [x0]
  44de54:	cmp	x0, #0x0
  44de58:	b.eq	44de68 <set_free_freep+0x28>  // b.none
  44de5c:	ldr	x0, [sp, #24]
  44de60:	ldr	x0, [x0]
  44de64:	bl	44ddcc <set_free_free>
  44de68:	nop
  44de6c:	ldp	x29, x30, [sp], #32
  44de70:	ret

000000000044de74 <isempty>:
  44de74:	sub	sp, sp, #0x10
  44de78:	str	x0, [sp, #8]
  44de7c:	ldr	x0, [sp, #8]
  44de80:	cmp	x0, #0x0
  44de84:	b.eq	44de98 <isempty+0x24>  // b.none
  44de88:	ldr	x0, [sp, #8]
  44de8c:	ldrb	w0, [x0]
  44de90:	cmp	w0, #0x0
  44de94:	b.ne	44dea0 <isempty+0x2c>  // b.any
  44de98:	mov	w0, #0x1                   	// #1
  44de9c:	b	44dea4 <isempty+0x30>
  44dea0:	mov	w0, #0x0                   	// #0
  44dea4:	and	w0, w0, #0x1
  44dea8:	and	w0, w0, #0xff
  44deac:	add	sp, sp, #0x10
  44deb0:	ret

000000000044deb4 <strv_isempty>:
  44deb4:	sub	sp, sp, #0x10
  44deb8:	str	x0, [sp, #8]
  44debc:	ldr	x0, [sp, #8]
  44dec0:	cmp	x0, #0x0
  44dec4:	b.eq	44ded8 <strv_isempty+0x24>  // b.none
  44dec8:	ldr	x0, [sp, #8]
  44decc:	ldr	x0, [x0]
  44ded0:	cmp	x0, #0x0
  44ded4:	b.ne	44dee0 <strv_isempty+0x2c>  // b.any
  44ded8:	mov	w0, #0x1                   	// #1
  44dedc:	b	44dee4 <strv_isempty+0x30>
  44dee0:	mov	w0, #0x0                   	// #0
  44dee4:	and	w0, w0, #0x1
  44dee8:	and	w0, w0, #0xff
  44deec:	add	sp, sp, #0x10
  44def0:	ret

000000000044def4 <net_get_name_persistent>:
  44def4:	stp	x29, x30, [sp, #-112]!
  44def8:	mov	x29, sp
  44defc:	str	x0, [sp, #24]
  44df00:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44df04:	ldr	x0, [x0, #4032]
  44df08:	ldr	x1, [x0]
  44df0c:	str	x1, [sp, #104]
  44df10:	mov	x1, #0x0                   	// #0
  44df14:	ldr	x0, [sp, #24]
  44df18:	cmp	x0, #0x0
  44df1c:	cset	w0, eq  // eq = none
  44df20:	and	w0, w0, #0xff
  44df24:	and	x0, x0, #0xff
  44df28:	cmp	x0, #0x0
  44df2c:	b.eq	44df58 <net_get_name_persistent+0x64>  // b.none
  44df30:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44df34:	add	x1, x0, #0xe9b
  44df38:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44df3c:	add	x4, x0, #0x3e0
  44df40:	mov	w3, #0x20                  	// #32
  44df44:	mov	x2, x1
  44df48:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44df4c:	add	x1, x0, #0xec8
  44df50:	mov	w0, #0x0                   	// #0
  44df54:	bl	40abb0 <log_assert_failed_realm@plt>
  44df58:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44df5c:	add	x0, x0, #0xed0
  44df60:	str	x0, [sp, #48]
  44df64:	ldr	x0, [sp, #48]
  44df68:	str	x0, [sp, #64]
  44df6c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44df70:	add	x0, x0, #0xee8
  44df74:	str	x0, [sp, #72]
  44df78:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44df7c:	add	x0, x0, #0xf00
  44df80:	str	x0, [sp, #80]
  44df84:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44df88:	add	x0, x0, #0xf18
  44df8c:	str	x0, [sp, #88]
  44df90:	str	xzr, [sp, #96]
  44df94:	add	x0, sp, #0x40
  44df98:	str	x0, [sp, #56]
  44df9c:	b	44dfdc <net_get_name_persistent+0xe8>
  44dfa0:	add	x0, sp, #0x28
  44dfa4:	mov	x2, x0
  44dfa8:	ldr	x1, [sp, #48]
  44dfac:	ldr	x0, [sp, #24]
  44dfb0:	bl	40a310 <sd_device_get_property_value@plt>
  44dfb4:	cmp	w0, #0x0
  44dfb8:	b.lt	44dfc4 <net_get_name_persistent+0xd0>  // b.tstop
  44dfbc:	ldr	x0, [sp, #40]
  44dfc0:	b	44dfec <net_get_name_persistent+0xf8>
  44dfc4:	ldr	x0, [sp, #56]
  44dfc8:	add	x0, x0, #0x8
  44dfcc:	str	x0, [sp, #56]
  44dfd0:	ldr	x0, [sp, #56]
  44dfd4:	ldr	x0, [x0]
  44dfd8:	str	x0, [sp, #48]
  44dfdc:	ldr	x0, [sp, #48]
  44dfe0:	cmp	x0, #0x0
  44dfe4:	b.ne	44dfa0 <net_get_name_persistent+0xac>  // b.any
  44dfe8:	mov	x0, #0x0                   	// #0
  44dfec:	mov	x1, x0
  44dff0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44dff4:	ldr	x0, [x0, #4032]
  44dff8:	ldr	x2, [sp, #104]
  44dffc:	ldr	x0, [x0]
  44e000:	eor	x0, x2, x0
  44e004:	cmp	x0, #0x0
  44e008:	b.eq	44e010 <net_get_name_persistent+0x11c>  // b.none
  44e00c:	bl	40b280 <__stack_chk_fail@plt>
  44e010:	mov	x0, x1
  44e014:	ldp	x29, x30, [sp], #112
  44e018:	ret

000000000044e01c <net_get_unique_predictable_data>:
  44e01c:	stp	x29, x30, [sp, #-160]!
  44e020:	mov	x29, sp
  44e024:	sub	sp, sp, #0x20
  44e028:	str	x0, [x29, #40]
  44e02c:	strb	w1, [x29, #39]
  44e030:	str	x2, [x29, #24]
  44e034:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44e038:	ldr	x0, [x0, #4032]
  44e03c:	ldr	x1, [x0]
  44e040:	str	x1, [x29, #152]
  44e044:	mov	x1, #0x0                   	// #0
  44e048:	str	xzr, [x29, #88]
  44e04c:	ldr	x0, [x29, #40]
  44e050:	cmp	x0, #0x0
  44e054:	cset	w0, eq  // eq = none
  44e058:	and	w0, w0, #0xff
  44e05c:	and	x0, x0, #0xff
  44e060:	cmp	x0, #0x0
  44e064:	b.eq	44e090 <net_get_unique_predictable_data+0x74>  // b.none
  44e068:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e06c:	add	x1, x0, #0xe9b
  44e070:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44e074:	add	x4, x0, #0x3f8
  44e078:	mov	w3, #0x32                  	// #50
  44e07c:	mov	x2, x1
  44e080:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e084:	add	x1, x0, #0xec8
  44e088:	mov	w0, #0x0                   	// #0
  44e08c:	bl	40abb0 <log_assert_failed_realm@plt>
  44e090:	ldr	x0, [x29, #40]
  44e094:	bl	44def4 <net_get_name_persistent>
  44e098:	str	x0, [x29, #72]
  44e09c:	ldr	x0, [x29, #72]
  44e0a0:	cmp	x0, #0x0
  44e0a4:	b.ne	44e0c4 <net_get_unique_predictable_data+0xa8>  // b.any
  44e0a8:	ldrb	w0, [x29, #39]
  44e0ac:	cmp	w0, #0x0
  44e0b0:	b.eq	44e0c4 <net_get_unique_predictable_data+0xa8>  // b.none
  44e0b4:	add	x0, x29, #0x48
  44e0b8:	mov	x1, x0
  44e0bc:	ldr	x0, [x29, #40]
  44e0c0:	bl	40aba0 <sd_device_get_sysname@plt>
  44e0c4:	ldr	x0, [x29, #72]
  44e0c8:	cmp	x0, #0x0
  44e0cc:	b.ne	44e194 <net_get_unique_predictable_data+0x178>  // b.any
  44e0d0:	str	xzr, [x29, #80]
  44e0d4:	ldr	x0, [x29, #40]
  44e0d8:	str	x0, [x29, #128]
  44e0dc:	mov	w0, #0x7                   	// #7
  44e0e0:	str	w0, [x29, #64]
  44e0e4:	mov	w0, #0x3d                  	// #61
  44e0e8:	movk	w0, #0x4000, lsl #16
  44e0ec:	str	w0, [x29, #68]
  44e0f0:	ldr	x0, [x29, #128]
  44e0f4:	cmp	x0, #0x0
  44e0f8:	b.eq	44e134 <net_get_unique_predictable_data+0x118>  // b.none
  44e0fc:	mov	w0, #0x0                   	// #0
  44e100:	bl	40be30 <log_get_max_level_realm@plt>
  44e104:	mov	w1, w0
  44e108:	ldr	w0, [x29, #64]
  44e10c:	cmp	w0, w1
  44e110:	cset	w0, le
  44e114:	and	w0, w0, #0xff
  44e118:	and	x0, x0, #0xff
  44e11c:	cmp	x0, #0x0
  44e120:	b.eq	44e134 <net_get_unique_predictable_data+0x118>  // b.none
  44e124:	add	x0, x29, #0x50
  44e128:	mov	x1, x0
  44e12c:	ldr	x0, [x29, #128]
  44e130:	bl	40aba0 <sd_device_get_sysname@plt>
  44e134:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e138:	add	x2, x0, #0xe9b
  44e13c:	ldr	x0, [x29, #80]
  44e140:	cmp	x0, #0x0
  44e144:	b.eq	44e154 <net_get_unique_predictable_data+0x138>  // b.none
  44e148:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e14c:	add	x0, x0, #0xf28
  44e150:	b	44e158 <net_get_unique_predictable_data+0x13c>
  44e154:	mov	x0, #0x0                   	// #0
  44e158:	ldr	x3, [x29, #80]
  44e15c:	adrp	x1, 45d000 <__func__.7018+0x3c0>
  44e160:	add	x1, x1, #0xf30
  44e164:	str	x1, [sp, #8]
  44e168:	str	xzr, [sp]
  44e16c:	mov	x7, #0x0                   	// #0
  44e170:	mov	x6, x3
  44e174:	mov	x5, x0
  44e178:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44e17c:	add	x4, x0, #0x418
  44e180:	mov	w3, #0x3a                  	// #58
  44e184:	ldr	w1, [x29, #68]
  44e188:	ldr	w0, [x29, #64]
  44e18c:	bl	40b020 <log_object_internal@plt>
  44e190:	b	44e400 <net_get_unique_predictable_data+0x3e4>
  44e194:	str	xzr, [x29, #80]
  44e198:	ldr	x0, [x29, #40]
  44e19c:	str	x0, [x29, #96]
  44e1a0:	mov	w0, #0x7                   	// #7
  44e1a4:	str	w0, [x29, #52]
  44e1a8:	str	wzr, [x29, #56]
  44e1ac:	ldr	x0, [x29, #96]
  44e1b0:	cmp	x0, #0x0
  44e1b4:	b.eq	44e1f0 <net_get_unique_predictable_data+0x1d4>  // b.none
  44e1b8:	mov	w0, #0x0                   	// #0
  44e1bc:	bl	40be30 <log_get_max_level_realm@plt>
  44e1c0:	mov	w1, w0
  44e1c4:	ldr	w0, [x29, #52]
  44e1c8:	cmp	w0, w1
  44e1cc:	cset	w0, le
  44e1d0:	and	w0, w0, #0xff
  44e1d4:	and	x0, x0, #0xff
  44e1d8:	cmp	x0, #0x0
  44e1dc:	b.eq	44e1f0 <net_get_unique_predictable_data+0x1d4>  // b.none
  44e1e0:	add	x0, x29, #0x50
  44e1e4:	mov	x1, x0
  44e1e8:	ldr	x0, [x29, #96]
  44e1ec:	bl	40aba0 <sd_device_get_sysname@plt>
  44e1f0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e1f4:	add	x2, x0, #0xe9b
  44e1f8:	ldr	x0, [x29, #80]
  44e1fc:	cmp	x0, #0x0
  44e200:	b.eq	44e210 <net_get_unique_predictable_data+0x1f4>  // b.none
  44e204:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e208:	add	x0, x0, #0xf28
  44e20c:	b	44e214 <net_get_unique_predictable_data+0x1f8>
  44e210:	mov	x0, #0x0                   	// #0
  44e214:	ldr	x3, [x29, #80]
  44e218:	ldr	x1, [x29, #72]
  44e21c:	str	x1, [sp, #16]
  44e220:	adrp	x1, 45d000 <__func__.7018+0x3c0>
  44e224:	add	x1, x1, #0xf58
  44e228:	str	x1, [sp, #8]
  44e22c:	str	xzr, [sp]
  44e230:	mov	x7, #0x0                   	// #0
  44e234:	mov	x6, x3
  44e238:	mov	x5, x0
  44e23c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44e240:	add	x4, x0, #0x418
  44e244:	mov	w3, #0x3d                  	// #61
  44e248:	ldr	w1, [x29, #56]
  44e24c:	ldr	w0, [x29, #52]
  44e250:	bl	40b020 <log_object_internal@plt>
  44e254:	ldr	x0, [x29, #72]
  44e258:	bl	40bd10 <strlen@plt>
  44e25c:	str	x0, [x29, #104]
  44e260:	ldr	x0, [x29, #104]
  44e264:	add	x0, x0, #0x10
  44e268:	str	x0, [x29, #88]
  44e26c:	ldr	x0, [x29, #88]
  44e270:	str	x0, [x29, #112]
  44e274:	ldr	x1, [x29, #112]
  44e278:	mov	x0, #0x1                   	// #1
  44e27c:	bl	44dce8 <size_multiply_overflow>
  44e280:	and	w0, w0, #0xff
  44e284:	and	x0, x0, #0xff
  44e288:	cmp	x0, #0x0
  44e28c:	b.eq	44e2b8 <net_get_unique_predictable_data+0x29c>  // b.none
  44e290:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e294:	add	x1, x0, #0xe9b
  44e298:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44e29c:	add	x4, x0, #0x3f8
  44e2a0:	mov	w3, #0x40                  	// #64
  44e2a4:	mov	x2, x1
  44e2a8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e2ac:	add	x1, x0, #0xf88
  44e2b0:	mov	w0, #0x0                   	// #0
  44e2b4:	bl	40abb0 <log_assert_failed_realm@plt>
  44e2b8:	ldr	x0, [x29, #112]
  44e2bc:	cmp	x0, #0x400, lsl #12
  44e2c0:	cset	w0, hi  // hi = pmore
  44e2c4:	and	w0, w0, #0xff
  44e2c8:	and	x0, x0, #0xff
  44e2cc:	cmp	x0, #0x0
  44e2d0:	b.eq	44e2fc <net_get_unique_predictable_data+0x2e0>  // b.none
  44e2d4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e2d8:	add	x1, x0, #0xe9b
  44e2dc:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44e2e0:	add	x4, x0, #0x3f8
  44e2e4:	mov	w3, #0x40                  	// #64
  44e2e8:	mov	x2, x1
  44e2ec:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44e2f0:	add	x1, x0, #0xfb8
  44e2f4:	mov	w0, #0x0                   	// #0
  44e2f8:	bl	40abb0 <log_assert_failed_realm@plt>
  44e2fc:	ldr	x0, [x29, #112]
  44e300:	add	x0, x0, #0xf
  44e304:	lsr	x0, x0, #4
  44e308:	lsl	x0, x0, #4
  44e30c:	sub	sp, sp, x0
  44e310:	add	x0, sp, #0x20
  44e314:	add	x0, x0, #0xf
  44e318:	lsr	x0, x0, #4
  44e31c:	lsl	x0, x0, #4
  44e320:	str	x0, [x29, #120]
  44e324:	ldr	x0, [x29, #120]
  44e328:	bl	40b460 <sd_id128_get_machine@plt>
  44e32c:	str	w0, [x29, #60]
  44e330:	ldr	w0, [x29, #60]
  44e334:	cmp	w0, #0x0
  44e338:	b.ge	44e344 <net_get_unique_predictable_data+0x328>  // b.tcont
  44e33c:	ldr	w0, [x29, #60]
  44e340:	b	44e400 <net_get_unique_predictable_data+0x3e4>
  44e344:	ldr	x0, [x29, #120]
  44e348:	add	x0, x0, #0x10
  44e34c:	ldr	x1, [x29, #72]
  44e350:	ldr	x2, [x29, #104]
  44e354:	bl	40a980 <memcpy@plt>
  44e358:	mov	w0, #0xffffffd3            	// #-45
  44e35c:	strb	w0, [x29, #136]
  44e360:	mov	w0, #0x1e                  	// #30
  44e364:	strb	w0, [x29, #137]
  44e368:	mov	w0, #0x48                  	// #72
  44e36c:	strb	w0, [x29, #138]
  44e370:	mov	w0, #0xfffffffa            	// #-6
  44e374:	strb	w0, [x29, #139]
  44e378:	mov	w0, #0xffffff90            	// #-112
  44e37c:	strb	w0, [x29, #140]
  44e380:	mov	w0, #0xfffffffe            	// #-2
  44e384:	strb	w0, [x29, #141]
  44e388:	mov	w0, #0x4b                  	// #75
  44e38c:	strb	w0, [x29, #142]
  44e390:	mov	w0, #0x4c                  	// #76
  44e394:	strb	w0, [x29, #143]
  44e398:	mov	w0, #0xffffff9d            	// #-99
  44e39c:	strb	w0, [x29, #144]
  44e3a0:	mov	w0, #0xffffffaf            	// #-81
  44e3a4:	strb	w0, [x29, #145]
  44e3a8:	mov	w0, #0xffffffd5            	// #-43
  44e3ac:	strb	w0, [x29, #146]
  44e3b0:	mov	w0, #0xffffffd7            	// #-41
  44e3b4:	strb	w0, [x29, #147]
  44e3b8:	mov	w0, #0xffffffa1            	// #-95
  44e3bc:	strb	w0, [x29, #148]
  44e3c0:	mov	w0, #0xffffffb1            	// #-79
  44e3c4:	strb	w0, [x29, #149]
  44e3c8:	mov	w0, #0x2e                  	// #46
  44e3cc:	strb	w0, [x29, #150]
  44e3d0:	mov	w0, #0xffffff8a            	// #-118
  44e3d4:	strb	w0, [x29, #151]
  44e3d8:	add	x0, x29, #0x88
  44e3dc:	mov	x2, x0
  44e3e0:	ldr	x1, [x29, #88]
  44e3e4:	ldr	x0, [x29, #120]
  44e3e8:	bl	40a9a0 <siphash24@plt>
  44e3ec:	bl	44ddb8 <htole64>
  44e3f0:	mov	x1, x0
  44e3f4:	ldr	x0, [x29, #24]
  44e3f8:	str	x1, [x0]
  44e3fc:	mov	w0, #0x0                   	// #0
  44e400:	mov	w1, w0
  44e404:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44e408:	ldr	x0, [x0, #4032]
  44e40c:	ldr	x2, [x29, #152]
  44e410:	ldr	x0, [x0]
  44e414:	eor	x0, x2, x0
  44e418:	cmp	x0, #0x0
  44e41c:	b.eq	44e424 <net_get_unique_predictable_data+0x408>  // b.none
  44e420:	bl	40b280 <__stack_chk_fail@plt>
  44e424:	mov	w0, w1
  44e428:	mov	sp, x29
  44e42c:	ldp	x29, x30, [sp], #160
  44e430:	ret

000000000044e434 <net_condition_test_strv>:
  44e434:	stp	x29, x30, [sp, #-64]!
  44e438:	mov	x29, sp
  44e43c:	str	x0, [sp, #24]
  44e440:	str	x1, [sp, #16]
  44e444:	strb	wzr, [sp, #45]
  44e448:	strb	wzr, [sp, #46]
  44e44c:	ldr	x0, [sp, #24]
  44e450:	bl	44deb4 <strv_isempty>
  44e454:	and	w0, w0, #0xff
  44e458:	cmp	w0, #0x0
  44e45c:	b.eq	44e468 <net_condition_test_strv+0x34>  // b.none
  44e460:	mov	w0, #0x1                   	// #1
  44e464:	b	44e54c <net_condition_test_strv+0x118>
  44e468:	ldr	x0, [sp, #24]
  44e46c:	str	x0, [sp, #48]
  44e470:	b	44e50c <net_condition_test_strv+0xd8>
  44e474:	ldr	x0, [sp, #48]
  44e478:	ldr	x0, [x0]
  44e47c:	str	x0, [sp, #56]
  44e480:	ldr	x0, [sp, #56]
  44e484:	ldrb	w0, [x0]
  44e488:	cmp	w0, #0x21
  44e48c:	cset	w0, eq  // eq = none
  44e490:	strb	w0, [sp, #47]
  44e494:	ldrb	w0, [sp, #47]
  44e498:	ldr	x1, [sp, #56]
  44e49c:	add	x0, x1, x0
  44e4a0:	str	x0, [sp, #56]
  44e4a4:	ldrb	w0, [sp, #47]
  44e4a8:	eor	w0, w0, #0x1
  44e4ac:	and	w0, w0, #0xff
  44e4b0:	cmp	w0, #0x0
  44e4b4:	b.eq	44e4c0 <net_condition_test_strv+0x8c>  // b.none
  44e4b8:	mov	w0, #0x1                   	// #1
  44e4bc:	strb	w0, [sp, #46]
  44e4c0:	ldr	x0, [sp, #16]
  44e4c4:	cmp	x0, #0x0
  44e4c8:	b.eq	44e500 <net_condition_test_strv+0xcc>  // b.none
  44e4cc:	mov	w2, #0x0                   	// #0
  44e4d0:	ldr	x1, [sp, #16]
  44e4d4:	ldr	x0, [sp, #56]
  44e4d8:	bl	40ae80 <fnmatch@plt>
  44e4dc:	cmp	w0, #0x0
  44e4e0:	b.ne	44e500 <net_condition_test_strv+0xcc>  // b.any
  44e4e4:	ldrb	w0, [sp, #47]
  44e4e8:	cmp	w0, #0x0
  44e4ec:	b.eq	44e4f8 <net_condition_test_strv+0xc4>  // b.none
  44e4f0:	mov	w0, #0x0                   	// #0
  44e4f4:	b	44e54c <net_condition_test_strv+0x118>
  44e4f8:	mov	w0, #0x1                   	// #1
  44e4fc:	strb	w0, [sp, #45]
  44e500:	ldr	x0, [sp, #48]
  44e504:	add	x0, x0, #0x8
  44e508:	str	x0, [sp, #48]
  44e50c:	ldr	x0, [sp, #48]
  44e510:	cmp	x0, #0x0
  44e514:	b.eq	44e528 <net_condition_test_strv+0xf4>  // b.none
  44e518:	ldr	x0, [sp, #48]
  44e51c:	ldr	x0, [x0]
  44e520:	cmp	x0, #0x0
  44e524:	b.ne	44e474 <net_condition_test_strv+0x40>  // b.any
  44e528:	ldrb	w0, [sp, #46]
  44e52c:	cmp	w0, #0x0
  44e530:	b.eq	44e540 <net_condition_test_strv+0x10c>  // b.none
  44e534:	ldrb	w0, [sp, #45]
  44e538:	cmp	w0, #0x0
  44e53c:	b.eq	44e548 <net_condition_test_strv+0x114>  // b.none
  44e540:	mov	w0, #0x1                   	// #1
  44e544:	b	44e54c <net_condition_test_strv+0x118>
  44e548:	mov	w0, #0x0                   	// #0
  44e54c:	ldp	x29, x30, [sp], #64
  44e550:	ret

000000000044e554 <net_condition_test_property>:
  44e554:	stp	x29, x30, [sp, #-96]!
  44e558:	mov	x29, sp
  44e55c:	stp	x19, x20, [sp, #16]
  44e560:	str	x0, [sp, #40]
  44e564:	str	x1, [sp, #32]
  44e568:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44e56c:	ldr	x0, [x0, #4032]
  44e570:	ldr	x1, [x0]
  44e574:	str	x1, [sp, #88]
  44e578:	mov	x1, #0x0                   	// #0
  44e57c:	ldr	x0, [sp, #40]
  44e580:	bl	44deb4 <strv_isempty>
  44e584:	and	w0, w0, #0xff
  44e588:	cmp	w0, #0x0
  44e58c:	b.eq	44e598 <net_condition_test_property+0x44>  // b.none
  44e590:	mov	w19, #0x1                   	// #1
  44e594:	b	44e728 <net_condition_test_property+0x1d4>
  44e598:	ldr	x0, [sp, #40]
  44e59c:	str	x0, [sp, #72]
  44e5a0:	b	44e708 <net_condition_test_property+0x1b4>
  44e5a4:	str	xzr, [sp, #56]
  44e5a8:	ldr	x0, [sp, #72]
  44e5ac:	ldr	x0, [x0]
  44e5b0:	ldrb	w0, [x0]
  44e5b4:	cmp	w0, #0x21
  44e5b8:	cset	w0, eq  // eq = none
  44e5bc:	strb	w0, [sp, #54]
  44e5c0:	ldr	x0, [sp, #72]
  44e5c4:	ldr	x1, [x0]
  44e5c8:	ldrb	w0, [sp, #54]
  44e5cc:	add	x0, x1, x0
  44e5d0:	mov	w1, #0x3d                  	// #61
  44e5d4:	bl	40b850 <strchr@plt>
  44e5d8:	str	x0, [sp, #80]
  44e5dc:	ldr	x0, [sp, #80]
  44e5e0:	cmp	x0, #0x0
  44e5e4:	b.ne	44e5f4 <net_condition_test_property+0xa0>  // b.any
  44e5e8:	mov	w19, #0xffffffea            	// #-22
  44e5ec:	mov	w20, #0x0                   	// #0
  44e5f0:	b	44e6ec <net_condition_test_property+0x198>
  44e5f4:	ldr	x0, [sp, #72]
  44e5f8:	ldr	x1, [x0]
  44e5fc:	ldrb	w0, [sp, #54]
  44e600:	add	x2, x1, x0
  44e604:	ldr	x0, [sp, #72]
  44e608:	ldr	x0, [x0]
  44e60c:	ldr	x1, [sp, #80]
  44e610:	sub	x1, x1, x0
  44e614:	ldrb	w0, [sp, #54]
  44e618:	sub	x0, x1, x0
  44e61c:	mov	x1, x0
  44e620:	mov	x0, x2
  44e624:	bl	40b1e0 <strndup@plt>
  44e628:	str	x0, [sp, #56]
  44e62c:	ldr	x0, [sp, #56]
  44e630:	cmp	x0, #0x0
  44e634:	b.ne	44e644 <net_condition_test_property+0xf0>  // b.any
  44e638:	mov	w19, #0xfffffff4            	// #-12
  44e63c:	mov	w20, #0x0                   	// #0
  44e640:	b	44e6ec <net_condition_test_property+0x198>
  44e644:	ldr	x0, [sp, #80]
  44e648:	add	x0, x0, #0x1
  44e64c:	str	x0, [sp, #80]
  44e650:	ldr	x0, [sp, #32]
  44e654:	cmp	x0, #0x0
  44e658:	b.eq	44e6a0 <net_condition_test_property+0x14c>  // b.none
  44e65c:	ldr	x0, [sp, #56]
  44e660:	add	x1, sp, #0x40
  44e664:	mov	x2, x1
  44e668:	mov	x1, x0
  44e66c:	ldr	x0, [sp, #32]
  44e670:	bl	40a310 <sd_device_get_property_value@plt>
  44e674:	cmp	w0, #0x0
  44e678:	b.lt	44e6a0 <net_condition_test_property+0x14c>  // b.tstop
  44e67c:	ldr	x0, [sp, #64]
  44e680:	mov	w2, #0x0                   	// #0
  44e684:	mov	x1, x0
  44e688:	ldr	x0, [sp, #80]
  44e68c:	bl	40ae80 <fnmatch@plt>
  44e690:	cmp	w0, #0x0
  44e694:	b.ne	44e6a0 <net_condition_test_property+0x14c>  // b.any
  44e698:	mov	w0, #0x1                   	// #1
  44e69c:	b	44e6a4 <net_condition_test_property+0x150>
  44e6a0:	mov	w0, #0x0                   	// #0
  44e6a4:	strb	w0, [sp, #55]
  44e6a8:	ldrb	w0, [sp, #55]
  44e6ac:	and	w0, w0, #0x1
  44e6b0:	strb	w0, [sp, #55]
  44e6b4:	ldrb	w0, [sp, #54]
  44e6b8:	cmp	w0, #0x0
  44e6bc:	b.eq	44e6c8 <net_condition_test_property+0x174>  // b.none
  44e6c0:	ldrb	w0, [sp, #55]
  44e6c4:	b	44e6d4 <net_condition_test_property+0x180>
  44e6c8:	ldrb	w0, [sp, #55]
  44e6cc:	eor	w0, w0, #0x1
  44e6d0:	and	w0, w0, #0xff
  44e6d4:	cmp	w0, #0x0
  44e6d8:	b.eq	44e6e8 <net_condition_test_property+0x194>  // b.none
  44e6dc:	mov	w19, #0x0                   	// #0
  44e6e0:	mov	w20, #0x0                   	// #0
  44e6e4:	b	44e6ec <net_condition_test_property+0x198>
  44e6e8:	mov	w20, #0x1                   	// #1
  44e6ec:	add	x0, sp, #0x38
  44e6f0:	bl	44dcc4 <freep>
  44e6f4:	cmp	w20, #0x1
  44e6f8:	b.ne	44e728 <net_condition_test_property+0x1d4>  // b.any
  44e6fc:	ldr	x0, [sp, #72]
  44e700:	add	x0, x0, #0x8
  44e704:	str	x0, [sp, #72]
  44e708:	ldr	x0, [sp, #72]
  44e70c:	cmp	x0, #0x0
  44e710:	b.eq	44e724 <net_condition_test_property+0x1d0>  // b.none
  44e714:	ldr	x0, [sp, #72]
  44e718:	ldr	x0, [x0]
  44e71c:	cmp	x0, #0x0
  44e720:	b.ne	44e5a4 <net_condition_test_property+0x50>  // b.any
  44e724:	mov	w19, #0x1                   	// #1
  44e728:	mov	w1, w19
  44e72c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44e730:	ldr	x0, [x0, #4032]
  44e734:	ldr	x2, [sp, #88]
  44e738:	ldr	x0, [x0]
  44e73c:	eor	x0, x2, x0
  44e740:	cmp	x0, #0x0
  44e744:	b.eq	44e74c <net_condition_test_property+0x1f8>  // b.none
  44e748:	bl	40b280 <__stack_chk_fail@plt>
  44e74c:	mov	w0, w1
  44e750:	ldp	x19, x20, [sp, #16]
  44e754:	ldp	x29, x30, [sp], #96
  44e758:	ret

000000000044e75c <wifi_iftype_to_string>:
  44e75c:	sub	sp, sp, #0x10
  44e760:	str	w0, [sp, #12]
  44e764:	ldr	w0, [sp, #12]
  44e768:	cmp	w0, #0xc
  44e76c:	b.ls	44e778 <wifi_iftype_to_string+0x1c>  // b.plast
  44e770:	mov	x0, #0x0                   	// #0
  44e774:	b	44e788 <wifi_iftype_to_string+0x2c>
  44e778:	adrp	x0, 48b000 <wordlist.7638+0x169f8>
  44e77c:	add	x0, x0, #0x740
  44e780:	ldr	w1, [sp, #12]
  44e784:	ldr	x0, [x0, x1, lsl #3]
  44e788:	add	sp, sp, #0x10
  44e78c:	ret

000000000044e790 <net_match_config>:
  44e790:	stp	x29, x30, [sp, #-176]!
  44e794:	mov	x29, sp
  44e798:	str	x0, [sp, #120]
  44e79c:	str	x1, [sp, #112]
  44e7a0:	str	x2, [sp, #104]
  44e7a4:	str	x3, [sp, #96]
  44e7a8:	str	x4, [sp, #88]
  44e7ac:	str	x5, [sp, #80]
  44e7b0:	str	x6, [sp, #72]
  44e7b4:	str	x7, [sp, #64]
  44e7b8:	ldr	x0, [sp, #176]
  44e7bc:	str	x0, [sp, #56]
  44e7c0:	ldr	x0, [sp, #184]
  44e7c4:	str	x0, [sp, #48]
  44e7c8:	ldr	x0, [sp, #192]
  44e7cc:	str	x0, [sp, #40]
  44e7d0:	ldr	x0, [sp, #200]
  44e7d4:	str	x0, [sp, #32]
  44e7d8:	ldr	x0, [sp, #216]
  44e7dc:	str	x0, [sp, #24]
  44e7e0:	ldr	x0, [sp, #224]
  44e7e4:	str	x0, [sp, #16]
  44e7e8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44e7ec:	ldr	x0, [x0, #4032]
  44e7f0:	ldr	x1, [x0]
  44e7f4:	str	x1, [sp, #168]
  44e7f8:	mov	x1, #0x0                   	// #0
  44e7fc:	str	xzr, [sp, #136]
  44e800:	str	xzr, [sp, #144]
  44e804:	str	xzr, [sp, #152]
  44e808:	ldr	x0, [sp, #48]
  44e80c:	cmp	x0, #0x0
  44e810:	b.eq	44e8a8 <net_match_config+0x118>  // b.none
  44e814:	add	x0, sp, #0x88
  44e818:	mov	x2, x0
  44e81c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44e820:	add	x1, x0, #0x58
  44e824:	ldr	x0, [sp, #48]
  44e828:	bl	40a310 <sd_device_get_property_value@plt>
  44e82c:	add	x0, sp, #0x90
  44e830:	mov	x2, x0
  44e834:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44e838:	add	x1, x0, #0x60
  44e83c:	ldr	x0, [sp, #48]
  44e840:	bl	40a310 <sd_device_get_property_value@plt>
  44e844:	add	x0, sp, #0x98
  44e848:	mov	x1, x0
  44e84c:	ldr	x0, [sp, #48]
  44e850:	bl	40a460 <sd_device_get_devtype@plt>
  44e854:	ldr	x0, [sp, #32]
  44e858:	cmp	x0, #0x0
  44e85c:	b.ne	44e870 <net_match_config+0xe0>  // b.any
  44e860:	add	x0, sp, #0x20
  44e864:	mov	x1, x0
  44e868:	ldr	x0, [sp, #48]
  44e86c:	bl	40aba0 <sd_device_get_sysname@plt>
  44e870:	ldr	x0, [sp, #40]
  44e874:	cmp	x0, #0x0
  44e878:	b.ne	44e8a8 <net_match_config+0x118>  // b.any
  44e87c:	add	x0, sp, #0xa0
  44e880:	mov	x2, x0
  44e884:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44e888:	add	x1, x0, #0x70
  44e88c:	ldr	x0, [sp, #48]
  44e890:	bl	40b870 <sd_device_get_sysattr_value@plt>
  44e894:	cmp	w0, #0x0
  44e898:	b.lt	44e8a8 <net_match_config+0x118>  // b.tstop
  44e89c:	ldr	x0, [sp, #160]
  44e8a0:	bl	40a850 <ether_aton@plt>
  44e8a4:	str	x0, [sp, #40]
  44e8a8:	ldr	x0, [sp, #120]
  44e8ac:	cmp	x0, #0x0
  44e8b0:	b.eq	44e8e8 <net_match_config+0x158>  // b.none
  44e8b4:	ldr	x0, [sp, #40]
  44e8b8:	cmp	x0, #0x0
  44e8bc:	b.eq	44e8e0 <net_match_config+0x150>  // b.none
  44e8c0:	ldr	x1, [sp, #40]
  44e8c4:	ldr	x0, [sp, #120]
  44e8c8:	bl	44ddf4 <set_contains>
  44e8cc:	and	w0, w0, #0xff
  44e8d0:	eor	w0, w0, #0x1
  44e8d4:	and	w0, w0, #0xff
  44e8d8:	cmp	w0, #0x0
  44e8dc:	b.eq	44e8e8 <net_match_config+0x158>  // b.none
  44e8e0:	mov	w0, #0x0                   	// #0
  44e8e4:	b	44ea50 <net_match_config+0x2c0>
  44e8e8:	ldr	x0, [sp, #136]
  44e8ec:	mov	x1, x0
  44e8f0:	ldr	x0, [sp, #112]
  44e8f4:	bl	44e434 <net_condition_test_strv>
  44e8f8:	and	w0, w0, #0xff
  44e8fc:	eor	w0, w0, #0x1
  44e900:	and	w0, w0, #0xff
  44e904:	cmp	w0, #0x0
  44e908:	b.eq	44e914 <net_match_config+0x184>  // b.none
  44e90c:	mov	w0, #0x0                   	// #0
  44e910:	b	44ea50 <net_match_config+0x2c0>
  44e914:	ldr	x0, [sp, #144]
  44e918:	mov	x1, x0
  44e91c:	ldr	x0, [sp, #104]
  44e920:	bl	44e434 <net_condition_test_strv>
  44e924:	and	w0, w0, #0xff
  44e928:	eor	w0, w0, #0x1
  44e92c:	and	w0, w0, #0xff
  44e930:	cmp	w0, #0x0
  44e934:	b.eq	44e940 <net_match_config+0x1b0>  // b.none
  44e938:	mov	w0, #0x0                   	// #0
  44e93c:	b	44ea50 <net_match_config+0x2c0>
  44e940:	ldr	x0, [sp, #152]
  44e944:	mov	x1, x0
  44e948:	ldr	x0, [sp, #96]
  44e94c:	bl	44e434 <net_condition_test_strv>
  44e950:	and	w0, w0, #0xff
  44e954:	eor	w0, w0, #0x1
  44e958:	and	w0, w0, #0xff
  44e95c:	cmp	w0, #0x0
  44e960:	b.eq	44e96c <net_match_config+0x1dc>  // b.none
  44e964:	mov	w0, #0x0                   	// #0
  44e968:	b	44ea50 <net_match_config+0x2c0>
  44e96c:	ldr	x0, [sp, #32]
  44e970:	mov	x1, x0
  44e974:	ldr	x0, [sp, #88]
  44e978:	bl	44e434 <net_condition_test_strv>
  44e97c:	and	w0, w0, #0xff
  44e980:	eor	w0, w0, #0x1
  44e984:	and	w0, w0, #0xff
  44e988:	cmp	w0, #0x0
  44e98c:	b.eq	44e998 <net_match_config+0x208>  // b.none
  44e990:	mov	w0, #0x0                   	// #0
  44e994:	b	44ea50 <net_match_config+0x2c0>
  44e998:	ldr	x1, [sp, #48]
  44e99c:	ldr	x0, [sp, #80]
  44e9a0:	bl	44e554 <net_condition_test_property>
  44e9a4:	cmp	w0, #0x0
  44e9a8:	b.ne	44e9b4 <net_match_config+0x224>  // b.any
  44e9ac:	mov	w0, #0x0                   	// #0
  44e9b0:	b	44ea50 <net_match_config+0x2c0>
  44e9b4:	ldr	w0, [sp, #208]
  44e9b8:	bl	44e75c <wifi_iftype_to_string>
  44e9bc:	mov	x1, x0
  44e9c0:	ldr	x0, [sp, #72]
  44e9c4:	bl	44e434 <net_condition_test_strv>
  44e9c8:	and	w0, w0, #0xff
  44e9cc:	eor	w0, w0, #0x1
  44e9d0:	and	w0, w0, #0xff
  44e9d4:	cmp	w0, #0x0
  44e9d8:	b.eq	44e9e4 <net_match_config+0x254>  // b.none
  44e9dc:	mov	w0, #0x0                   	// #0
  44e9e0:	b	44ea50 <net_match_config+0x2c0>
  44e9e4:	ldr	x1, [sp, #24]
  44e9e8:	ldr	x0, [sp, #64]
  44e9ec:	bl	44e434 <net_condition_test_strv>
  44e9f0:	and	w0, w0, #0xff
  44e9f4:	eor	w0, w0, #0x1
  44e9f8:	and	w0, w0, #0xff
  44e9fc:	cmp	w0, #0x0
  44ea00:	b.eq	44ea0c <net_match_config+0x27c>  // b.none
  44ea04:	mov	w0, #0x0                   	// #0
  44ea08:	b	44ea50 <net_match_config+0x2c0>
  44ea0c:	ldr	x0, [sp, #56]
  44ea10:	cmp	x0, #0x0
  44ea14:	b.eq	44ea4c <net_match_config+0x2bc>  // b.none
  44ea18:	ldr	x0, [sp, #16]
  44ea1c:	cmp	x0, #0x0
  44ea20:	b.eq	44ea44 <net_match_config+0x2b4>  // b.none
  44ea24:	ldr	x1, [sp, #16]
  44ea28:	ldr	x0, [sp, #56]
  44ea2c:	bl	44ddf4 <set_contains>
  44ea30:	and	w0, w0, #0xff
  44ea34:	eor	w0, w0, #0x1
  44ea38:	and	w0, w0, #0xff
  44ea3c:	cmp	w0, #0x0
  44ea40:	b.eq	44ea4c <net_match_config+0x2bc>  // b.none
  44ea44:	mov	w0, #0x0                   	// #0
  44ea48:	b	44ea50 <net_match_config+0x2c0>
  44ea4c:	mov	w0, #0x1                   	// #1
  44ea50:	mov	w1, w0
  44ea54:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44ea58:	ldr	x0, [x0, #4032]
  44ea5c:	ldr	x2, [sp, #168]
  44ea60:	ldr	x0, [x0]
  44ea64:	eor	x0, x2, x0
  44ea68:	cmp	x0, #0x0
  44ea6c:	b.eq	44ea74 <net_match_config+0x2e4>  // b.none
  44ea70:	bl	40b280 <__stack_chk_fail@plt>
  44ea74:	mov	w0, w1
  44ea78:	ldp	x29, x30, [sp], #176
  44ea7c:	ret

000000000044ea80 <config_parse_net_condition>:
  44ea80:	stp	x29, x30, [sp, #-128]!
  44ea84:	mov	x29, sp
  44ea88:	str	x0, [sp, #72]
  44ea8c:	str	x1, [sp, #64]
  44ea90:	str	w2, [sp, #60]
  44ea94:	str	x3, [sp, #48]
  44ea98:	str	w4, [sp, #56]
  44ea9c:	str	x5, [sp, #40]
  44eaa0:	str	w6, [sp, #36]
  44eaa4:	str	x7, [sp, #24]
  44eaa8:	ldr	w0, [sp, #36]
  44eaac:	str	w0, [sp, #92]
  44eab0:	ldr	x0, [sp, #128]
  44eab4:	str	x0, [sp, #96]
  44eab8:	ldr	x0, [sp, #64]
  44eabc:	cmp	x0, #0x0
  44eac0:	cset	w0, eq  // eq = none
  44eac4:	and	w0, w0, #0xff
  44eac8:	and	x0, x0, #0xff
  44eacc:	cmp	x0, #0x0
  44ead0:	b.eq	44eafc <config_parse_net_condition+0x7c>  // b.none
  44ead4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ead8:	add	x1, x0, #0xe9b
  44eadc:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44eae0:	add	x4, x0, #0x438
  44eae4:	mov	w3, #0xe8                  	// #232
  44eae8:	mov	x2, x1
  44eaec:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44eaf0:	add	x1, x0, #0x78
  44eaf4:	mov	w0, #0x0                   	// #0
  44eaf8:	bl	40abb0 <log_assert_failed_realm@plt>
  44eafc:	ldr	x0, [sp, #40]
  44eb00:	cmp	x0, #0x0
  44eb04:	cset	w0, eq  // eq = none
  44eb08:	and	w0, w0, #0xff
  44eb0c:	and	x0, x0, #0xff
  44eb10:	cmp	x0, #0x0
  44eb14:	b.eq	44eb40 <config_parse_net_condition+0xc0>  // b.none
  44eb18:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44eb1c:	add	x1, x0, #0xe9b
  44eb20:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44eb24:	add	x4, x0, #0x438
  44eb28:	mov	w3, #0xe9                  	// #233
  44eb2c:	mov	x2, x1
  44eb30:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44eb34:	add	x1, x0, #0x88
  44eb38:	mov	w0, #0x0                   	// #0
  44eb3c:	bl	40abb0 <log_assert_failed_realm@plt>
  44eb40:	ldr	x0, [sp, #24]
  44eb44:	cmp	x0, #0x0
  44eb48:	cset	w0, eq  // eq = none
  44eb4c:	and	w0, w0, #0xff
  44eb50:	and	x0, x0, #0xff
  44eb54:	cmp	x0, #0x0
  44eb58:	b.eq	44eb84 <config_parse_net_condition+0x104>  // b.none
  44eb5c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44eb60:	add	x1, x0, #0xe9b
  44eb64:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44eb68:	add	x4, x0, #0x438
  44eb6c:	mov	w3, #0xea                  	// #234
  44eb70:	mov	x2, x1
  44eb74:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44eb78:	add	x1, x0, #0x90
  44eb7c:	mov	w0, #0x0                   	// #0
  44eb80:	bl	40abb0 <log_assert_failed_realm@plt>
  44eb84:	ldr	x0, [sp, #128]
  44eb88:	cmp	x0, #0x0
  44eb8c:	cset	w0, eq  // eq = none
  44eb90:	and	w0, w0, #0xff
  44eb94:	and	x0, x0, #0xff
  44eb98:	cmp	x0, #0x0
  44eb9c:	b.eq	44ebc8 <config_parse_net_condition+0x148>  // b.none
  44eba0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44eba4:	add	x1, x0, #0xe9b
  44eba8:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ebac:	add	x4, x0, #0x438
  44ebb0:	mov	w3, #0xeb                  	// #235
  44ebb4:	mov	x2, x1
  44ebb8:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ebbc:	add	x1, x0, #0x98
  44ebc0:	mov	w0, #0x0                   	// #0
  44ebc4:	bl	40abb0 <log_assert_failed_realm@plt>
  44ebc8:	ldr	x0, [sp, #24]
  44ebcc:	bl	44de74 <isempty>
  44ebd0:	and	w0, w0, #0xff
  44ebd4:	cmp	w0, #0x0
  44ebd8:	b.eq	44ec00 <config_parse_net_condition+0x180>  // b.none
  44ebdc:	ldr	x0, [sp, #96]
  44ebe0:	ldr	x0, [x0]
  44ebe4:	ldr	w1, [sp, #92]
  44ebe8:	bl	40b620 <condition_free_list_type@plt>
  44ebec:	mov	x1, x0
  44ebf0:	ldr	x0, [sp, #96]
  44ebf4:	str	x1, [x0]
  44ebf8:	mov	w0, #0x0                   	// #0
  44ebfc:	b	44ed28 <config_parse_net_condition+0x2a8>
  44ec00:	ldr	x0, [sp, #24]
  44ec04:	ldrb	w0, [x0]
  44ec08:	cmp	w0, #0x21
  44ec0c:	cset	w0, eq  // eq = none
  44ec10:	strb	w0, [sp, #91]
  44ec14:	ldrb	w0, [sp, #91]
  44ec18:	cmp	w0, #0x0
  44ec1c:	b.eq	44ec2c <config_parse_net_condition+0x1ac>  // b.none
  44ec20:	ldr	x0, [sp, #24]
  44ec24:	add	x0, x0, #0x1
  44ec28:	str	x0, [sp, #24]
  44ec2c:	ldrb	w3, [sp, #91]
  44ec30:	mov	w2, #0x0                   	// #0
  44ec34:	ldr	x1, [sp, #24]
  44ec38:	ldr	w0, [sp, #92]
  44ec3c:	bl	40b8f0 <condition_new@plt>
  44ec40:	str	x0, [sp, #104]
  44ec44:	ldr	x0, [sp, #104]
  44ec48:	cmp	x0, #0x0
  44ec4c:	b.ne	44ec70 <config_parse_net_condition+0x1f0>  // b.any
  44ec50:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ec54:	add	x1, x0, #0xe9b
  44ec58:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ec5c:	add	x3, x0, #0x458
  44ec60:	mov	w2, #0xf8                  	// #248
  44ec64:	mov	w0, #0x0                   	// #0
  44ec68:	bl	40bda0 <log_oom_internal@plt>
  44ec6c:	b	44ed28 <config_parse_net_condition+0x2a8>
  44ec70:	ldr	x0, [sp, #96]
  44ec74:	ldr	x0, [x0]
  44ec78:	ldr	w1, [sp, #92]
  44ec7c:	bl	40b620 <condition_free_list_type@plt>
  44ec80:	mov	x1, x0
  44ec84:	ldr	x0, [sp, #96]
  44ec88:	str	x1, [x0]
  44ec8c:	ldr	x0, [sp, #96]
  44ec90:	str	x0, [sp, #112]
  44ec94:	ldr	x0, [sp, #104]
  44ec98:	str	x0, [sp, #120]
  44ec9c:	ldr	x0, [sp, #120]
  44eca0:	cmp	x0, #0x0
  44eca4:	cset	w0, eq  // eq = none
  44eca8:	and	w0, w0, #0xff
  44ecac:	and	x0, x0, #0xff
  44ecb0:	cmp	x0, #0x0
  44ecb4:	b.eq	44ece0 <config_parse_net_condition+0x260>  // b.none
  44ecb8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ecbc:	add	x1, x0, #0xe9b
  44ecc0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ecc4:	add	x4, x0, #0x438
  44ecc8:	mov	w3, #0xfd                  	// #253
  44eccc:	mov	x2, x1
  44ecd0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ecd4:	add	x1, x0, #0xa0
  44ecd8:	mov	w0, #0x0                   	// #0
  44ecdc:	bl	40abb0 <log_assert_failed_realm@plt>
  44ece0:	ldr	x0, [sp, #112]
  44ece4:	ldr	x1, [x0]
  44ece8:	ldr	x0, [sp, #120]
  44ecec:	str	x1, [x0, #16]
  44ecf0:	ldr	x0, [sp, #120]
  44ecf4:	ldr	x0, [x0, #16]
  44ecf8:	cmp	x0, #0x0
  44ecfc:	b.eq	44ed10 <config_parse_net_condition+0x290>  // b.none
  44ed00:	ldr	x0, [sp, #120]
  44ed04:	ldr	x0, [x0, #16]
  44ed08:	ldr	x1, [sp, #120]
  44ed0c:	str	x1, [x0, #24]
  44ed10:	ldr	x0, [sp, #120]
  44ed14:	str	xzr, [x0, #24]
  44ed18:	ldr	x0, [sp, #112]
  44ed1c:	ldr	x1, [sp, #120]
  44ed20:	str	x1, [x0]
  44ed24:	mov	w0, #0x0                   	// #0
  44ed28:	ldp	x29, x30, [sp], #128
  44ed2c:	ret

000000000044ed30 <config_parse_match_strv>:
  44ed30:	sub	sp, sp, #0xd0
  44ed34:	stp	x29, x30, [sp, #16]
  44ed38:	add	x29, sp, #0x10
  44ed3c:	stp	x19, x20, [sp, #32]
  44ed40:	str	x0, [sp, #120]
  44ed44:	str	x1, [sp, #112]
  44ed48:	str	w2, [sp, #108]
  44ed4c:	str	x3, [sp, #96]
  44ed50:	str	w4, [sp, #104]
  44ed54:	str	x5, [sp, #88]
  44ed58:	str	w6, [sp, #84]
  44ed5c:	str	x7, [sp, #72]
  44ed60:	ldr	x0, [sp, #208]
  44ed64:	str	x0, [sp, #64]
  44ed68:	ldr	x0, [sp, #216]
  44ed6c:	str	x0, [sp, #56]
  44ed70:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44ed74:	ldr	x0, [x0, #4032]
  44ed78:	ldr	x1, [x0]
  44ed7c:	str	x1, [sp, #200]
  44ed80:	mov	x1, #0x0                   	// #0
  44ed84:	ldr	x0, [sp, #72]
  44ed88:	str	x0, [sp, #152]
  44ed8c:	ldr	x0, [sp, #64]
  44ed90:	str	x0, [sp, #176]
  44ed94:	ldr	x0, [sp, #112]
  44ed98:	cmp	x0, #0x0
  44ed9c:	cset	w0, eq  // eq = none
  44eda0:	and	w0, w0, #0xff
  44eda4:	and	x0, x0, #0xff
  44eda8:	cmp	x0, #0x0
  44edac:	b.eq	44edd8 <config_parse_match_strv+0xa8>  // b.none
  44edb0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44edb4:	add	x1, x0, #0xe9b
  44edb8:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44edbc:	add	x4, x0, #0x478
  44edc0:	mov	w3, #0x112                 	// #274
  44edc4:	mov	x2, x1
  44edc8:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44edcc:	add	x1, x0, #0x78
  44edd0:	mov	w0, #0x0                   	// #0
  44edd4:	bl	40abb0 <log_assert_failed_realm@plt>
  44edd8:	ldr	x0, [sp, #88]
  44eddc:	cmp	x0, #0x0
  44ede0:	cset	w0, eq  // eq = none
  44ede4:	and	w0, w0, #0xff
  44ede8:	and	x0, x0, #0xff
  44edec:	cmp	x0, #0x0
  44edf0:	b.eq	44ee1c <config_parse_match_strv+0xec>  // b.none
  44edf4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44edf8:	add	x1, x0, #0xe9b
  44edfc:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ee00:	add	x4, x0, #0x478
  44ee04:	mov	w3, #0x113                 	// #275
  44ee08:	mov	x2, x1
  44ee0c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ee10:	add	x1, x0, #0x88
  44ee14:	mov	w0, #0x0                   	// #0
  44ee18:	bl	40abb0 <log_assert_failed_realm@plt>
  44ee1c:	ldr	x0, [sp, #72]
  44ee20:	cmp	x0, #0x0
  44ee24:	cset	w0, eq  // eq = none
  44ee28:	and	w0, w0, #0xff
  44ee2c:	and	x0, x0, #0xff
  44ee30:	cmp	x0, #0x0
  44ee34:	b.eq	44ee60 <config_parse_match_strv+0x130>  // b.none
  44ee38:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ee3c:	add	x1, x0, #0xe9b
  44ee40:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ee44:	add	x4, x0, #0x478
  44ee48:	mov	w3, #0x114                 	// #276
  44ee4c:	mov	x2, x1
  44ee50:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ee54:	add	x1, x0, #0x90
  44ee58:	mov	w0, #0x0                   	// #0
  44ee5c:	bl	40abb0 <log_assert_failed_realm@plt>
  44ee60:	ldr	x0, [sp, #64]
  44ee64:	cmp	x0, #0x0
  44ee68:	cset	w0, eq  // eq = none
  44ee6c:	and	w0, w0, #0xff
  44ee70:	and	x0, x0, #0xff
  44ee74:	cmp	x0, #0x0
  44ee78:	b.eq	44eea4 <config_parse_match_strv+0x174>  // b.none
  44ee7c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ee80:	add	x1, x0, #0xe9b
  44ee84:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ee88:	add	x4, x0, #0x478
  44ee8c:	mov	w3, #0x115                 	// #277
  44ee90:	mov	x2, x1
  44ee94:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ee98:	add	x1, x0, #0x98
  44ee9c:	mov	w0, #0x0                   	// #0
  44eea0:	bl	40abb0 <log_assert_failed_realm@plt>
  44eea4:	ldr	x0, [sp, #72]
  44eea8:	bl	44de74 <isempty>
  44eeac:	and	w0, w0, #0xff
  44eeb0:	cmp	w0, #0x0
  44eeb4:	b.eq	44eed8 <config_parse_match_strv+0x1a8>  // b.none
  44eeb8:	ldr	x0, [sp, #176]
  44eebc:	ldr	x0, [x0]
  44eec0:	bl	40b080 <strv_free@plt>
  44eec4:	mov	x1, x0
  44eec8:	ldr	x0, [sp, #176]
  44eecc:	str	x1, [x0]
  44eed0:	mov	w19, #0x0                   	// #0
  44eed4:	b	44f0f4 <config_parse_match_strv+0x3c4>
  44eed8:	ldr	x0, [sp, #152]
  44eedc:	ldrb	w0, [x0]
  44eee0:	cmp	w0, #0x21
  44eee4:	cset	w0, eq  // eq = none
  44eee8:	strb	w0, [sp, #139]
  44eeec:	ldr	x1, [sp, #152]
  44eef0:	ldrb	w0, [sp, #139]
  44eef4:	add	x0, x1, x0
  44eef8:	str	x0, [sp, #152]
  44eefc:	str	xzr, [sp, #160]
  44ef00:	str	xzr, [sp, #168]
  44ef04:	add	x1, sp, #0xa0
  44ef08:	add	x0, sp, #0x98
  44ef0c:	mov	w3, #0x28                  	// #40
  44ef10:	mov	x2, #0x0                   	// #0
  44ef14:	bl	40b750 <extract_first_word@plt>
  44ef18:	str	w0, [sp, #140]
  44ef1c:	ldr	w0, [sp, #140]
  44ef20:	cmp	w0, #0x0
  44ef24:	b.ne	44ef34 <config_parse_match_strv+0x204>  // b.any
  44ef28:	mov	w19, #0x0                   	// #0
  44ef2c:	mov	w20, #0x0                   	// #0
  44ef30:	b	44f0c4 <config_parse_match_strv+0x394>
  44ef34:	ldr	w0, [sp, #140]
  44ef38:	cmn	w0, #0xc
  44ef3c:	b.ne	44ef68 <config_parse_match_strv+0x238>  // b.any
  44ef40:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44ef44:	add	x1, x0, #0xe9b
  44ef48:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ef4c:	add	x3, x0, #0x490
  44ef50:	mov	w2, #0x126                 	// #294
  44ef54:	mov	w0, #0x0                   	// #0
  44ef58:	bl	40bda0 <log_oom_internal@plt>
  44ef5c:	mov	w19, w0
  44ef60:	mov	w20, #0x0                   	// #0
  44ef64:	b	44f0c4 <config_parse_match_strv+0x394>
  44ef68:	ldr	w0, [sp, #140]
  44ef6c:	cmp	w0, #0x0
  44ef70:	b.ge	44effc <config_parse_match_strv+0x2cc>  // b.tcont
  44ef74:	mov	w0, #0x3                   	// #3
  44ef78:	str	w0, [sp, #144]
  44ef7c:	ldr	w0, [sp, #140]
  44ef80:	str	w0, [sp, #148]
  44ef84:	mov	w0, #0x0                   	// #0
  44ef88:	bl	40be30 <log_get_max_level_realm@plt>
  44ef8c:	mov	w1, w0
  44ef90:	ldr	w0, [sp, #144]
  44ef94:	and	w0, w0, #0x7
  44ef98:	cmp	w1, w0
  44ef9c:	b.lt	44efe8 <config_parse_match_strv+0x2b8>  // b.tstop
  44efa0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44efa4:	add	x1, x0, #0xe9b
  44efa8:	ldr	x0, [sp, #72]
  44efac:	str	x0, [sp, #8]
  44efb0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44efb4:	add	x0, x0, #0xa8
  44efb8:	str	x0, [sp]
  44efbc:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44efc0:	add	x7, x0, #0x490
  44efc4:	mov	w6, #0x128                 	// #296
  44efc8:	mov	x5, x1
  44efcc:	ldr	w4, [sp, #148]
  44efd0:	ldr	w3, [sp, #108]
  44efd4:	ldr	x2, [sp, #112]
  44efd8:	ldr	w1, [sp, #144]
  44efdc:	ldr	x0, [sp, #120]
  44efe0:	bl	40b6a0 <log_syntax_internal@plt>
  44efe4:	b	44eff0 <config_parse_match_strv+0x2c0>
  44efe8:	ldr	w0, [sp, #148]
  44efec:	cmp	w0, #0x0
  44eff0:	mov	w19, #0x0                   	// #0
  44eff4:	mov	w20, #0x0                   	// #0
  44eff8:	b	44f0c4 <config_parse_match_strv+0x394>
  44effc:	ldrb	w0, [sp, #139]
  44f000:	cmp	w0, #0x0
  44f004:	b.eq	44f058 <config_parse_match_strv+0x328>  // b.none
  44f008:	ldr	x0, [sp, #160]
  44f00c:	mov	x2, #0x0                   	// #0
  44f010:	mov	x1, x0
  44f014:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f018:	add	x0, x0, #0xc8
  44f01c:	bl	40aac0 <strjoin_real@plt>
  44f020:	str	x0, [sp, #168]
  44f024:	ldr	x0, [sp, #168]
  44f028:	cmp	x0, #0x0
  44f02c:	b.ne	44f06c <config_parse_match_strv+0x33c>  // b.any
  44f030:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f034:	add	x1, x0, #0xe9b
  44f038:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f03c:	add	x3, x0, #0x490
  44f040:	mov	w2, #0x12f                 	// #303
  44f044:	mov	w0, #0x0                   	// #0
  44f048:	bl	40bda0 <log_oom_internal@plt>
  44f04c:	mov	w19, w0
  44f050:	mov	w20, #0x0                   	// #0
  44f054:	b	44f0c4 <config_parse_match_strv+0x394>
  44f058:	ldr	x0, [sp, #160]
  44f05c:	str	x0, [sp, #184]
  44f060:	str	xzr, [sp, #160]
  44f064:	ldr	x0, [sp, #184]
  44f068:	str	x0, [sp, #168]
  44f06c:	ldr	x0, [sp, #168]
  44f070:	str	x0, [sp, #192]
  44f074:	str	xzr, [sp, #168]
  44f078:	ldr	x0, [sp, #192]
  44f07c:	mov	x1, x0
  44f080:	ldr	x0, [sp, #176]
  44f084:	bl	40af70 <strv_consume@plt>
  44f088:	str	w0, [sp, #140]
  44f08c:	ldr	w0, [sp, #140]
  44f090:	cmp	w0, #0x0
  44f094:	b.ge	44f0c0 <config_parse_match_strv+0x390>  // b.tcont
  44f098:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f09c:	add	x1, x0, #0xe9b
  44f0a0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f0a4:	add	x3, x0, #0x490
  44f0a8:	mov	w2, #0x135                 	// #309
  44f0ac:	mov	w0, #0x0                   	// #0
  44f0b0:	bl	40bda0 <log_oom_internal@plt>
  44f0b4:	mov	w19, w0
  44f0b8:	mov	w20, #0x0                   	// #0
  44f0bc:	b	44f0c4 <config_parse_match_strv+0x394>
  44f0c0:	mov	w20, #0x1                   	// #1
  44f0c4:	add	x0, sp, #0xa8
  44f0c8:	bl	44dcc4 <freep>
  44f0cc:	cmp	w20, #0x1
  44f0d0:	b.eq	44f0dc <config_parse_match_strv+0x3ac>  // b.none
  44f0d4:	mov	w20, #0x0                   	// #0
  44f0d8:	b	44f0e0 <config_parse_match_strv+0x3b0>
  44f0dc:	mov	w20, #0x1                   	// #1
  44f0e0:	add	x0, sp, #0xa0
  44f0e4:	bl	44dcc4 <freep>
  44f0e8:	cmp	w20, #0x1
  44f0ec:	b.ne	44f0f4 <config_parse_match_strv+0x3c4>  // b.any
  44f0f0:	b	44eefc <config_parse_match_strv+0x1cc>
  44f0f4:	mov	w1, w19
  44f0f8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44f0fc:	ldr	x0, [x0, #4032]
  44f100:	ldr	x2, [sp, #200]
  44f104:	ldr	x0, [x0]
  44f108:	eor	x0, x2, x0
  44f10c:	cmp	x0, #0x0
  44f110:	b.eq	44f118 <config_parse_match_strv+0x3e8>  // b.none
  44f114:	bl	40b280 <__stack_chk_fail@plt>
  44f118:	mov	w0, w1
  44f11c:	ldp	x19, x20, [sp, #32]
  44f120:	ldp	x29, x30, [sp, #16]
  44f124:	add	sp, sp, #0xd0
  44f128:	ret

000000000044f12c <config_parse_match_ifnames>:
  44f12c:	sub	sp, sp, #0xd0
  44f130:	stp	x29, x30, [sp, #16]
  44f134:	add	x29, sp, #0x10
  44f138:	stp	x19, x20, [sp, #32]
  44f13c:	str	x0, [sp, #120]
  44f140:	str	x1, [sp, #112]
  44f144:	str	w2, [sp, #108]
  44f148:	str	x3, [sp, #96]
  44f14c:	str	w4, [sp, #104]
  44f150:	str	x5, [sp, #88]
  44f154:	str	w6, [sp, #84]
  44f158:	str	x7, [sp, #72]
  44f15c:	ldr	x0, [sp, #208]
  44f160:	str	x0, [sp, #64]
  44f164:	ldr	x0, [sp, #216]
  44f168:	str	x0, [sp, #56]
  44f16c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44f170:	ldr	x0, [x0, #4032]
  44f174:	ldr	x1, [x0]
  44f178:	str	x1, [sp, #200]
  44f17c:	mov	x1, #0x0                   	// #0
  44f180:	ldr	x0, [sp, #72]
  44f184:	str	x0, [sp, #152]
  44f188:	ldr	x0, [sp, #64]
  44f18c:	str	x0, [sp, #176]
  44f190:	ldr	x0, [sp, #112]
  44f194:	cmp	x0, #0x0
  44f198:	cset	w0, eq  // eq = none
  44f19c:	and	w0, w0, #0xff
  44f1a0:	and	x0, x0, #0xff
  44f1a4:	cmp	x0, #0x0
  44f1a8:	b.eq	44f1d4 <config_parse_match_ifnames+0xa8>  // b.none
  44f1ac:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f1b0:	add	x1, x0, #0xe9b
  44f1b4:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f1b8:	add	x4, x0, #0x4a8
  44f1bc:	mov	w3, #0x14a                 	// #330
  44f1c0:	mov	x2, x1
  44f1c4:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f1c8:	add	x1, x0, #0x78
  44f1cc:	mov	w0, #0x0                   	// #0
  44f1d0:	bl	40abb0 <log_assert_failed_realm@plt>
  44f1d4:	ldr	x0, [sp, #88]
  44f1d8:	cmp	x0, #0x0
  44f1dc:	cset	w0, eq  // eq = none
  44f1e0:	and	w0, w0, #0xff
  44f1e4:	and	x0, x0, #0xff
  44f1e8:	cmp	x0, #0x0
  44f1ec:	b.eq	44f218 <config_parse_match_ifnames+0xec>  // b.none
  44f1f0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f1f4:	add	x1, x0, #0xe9b
  44f1f8:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f1fc:	add	x4, x0, #0x4a8
  44f200:	mov	w3, #0x14b                 	// #331
  44f204:	mov	x2, x1
  44f208:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f20c:	add	x1, x0, #0x88
  44f210:	mov	w0, #0x0                   	// #0
  44f214:	bl	40abb0 <log_assert_failed_realm@plt>
  44f218:	ldr	x0, [sp, #72]
  44f21c:	cmp	x0, #0x0
  44f220:	cset	w0, eq  // eq = none
  44f224:	and	w0, w0, #0xff
  44f228:	and	x0, x0, #0xff
  44f22c:	cmp	x0, #0x0
  44f230:	b.eq	44f25c <config_parse_match_ifnames+0x130>  // b.none
  44f234:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f238:	add	x1, x0, #0xe9b
  44f23c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f240:	add	x4, x0, #0x4a8
  44f244:	mov	w3, #0x14c                 	// #332
  44f248:	mov	x2, x1
  44f24c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f250:	add	x1, x0, #0x90
  44f254:	mov	w0, #0x0                   	// #0
  44f258:	bl	40abb0 <log_assert_failed_realm@plt>
  44f25c:	ldr	x0, [sp, #64]
  44f260:	cmp	x0, #0x0
  44f264:	cset	w0, eq  // eq = none
  44f268:	and	w0, w0, #0xff
  44f26c:	and	x0, x0, #0xff
  44f270:	cmp	x0, #0x0
  44f274:	b.eq	44f2a0 <config_parse_match_ifnames+0x174>  // b.none
  44f278:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f27c:	add	x1, x0, #0xe9b
  44f280:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f284:	add	x4, x0, #0x4a8
  44f288:	mov	w3, #0x14d                 	// #333
  44f28c:	mov	x2, x1
  44f290:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f294:	add	x1, x0, #0x98
  44f298:	mov	w0, #0x0                   	// #0
  44f29c:	bl	40abb0 <log_assert_failed_realm@plt>
  44f2a0:	ldr	x0, [sp, #152]
  44f2a4:	ldrb	w0, [x0]
  44f2a8:	cmp	w0, #0x21
  44f2ac:	cset	w0, eq  // eq = none
  44f2b0:	strb	w0, [sp, #131]
  44f2b4:	ldr	x1, [sp, #152]
  44f2b8:	ldrb	w0, [sp, #131]
  44f2bc:	add	x0, x1, x0
  44f2c0:	str	x0, [sp, #152]
  44f2c4:	str	xzr, [sp, #160]
  44f2c8:	str	xzr, [sp, #168]
  44f2cc:	add	x1, sp, #0xa0
  44f2d0:	add	x0, sp, #0x98
  44f2d4:	mov	w3, #0x0                   	// #0
  44f2d8:	mov	x2, #0x0                   	// #0
  44f2dc:	bl	40b750 <extract_first_word@plt>
  44f2e0:	str	w0, [sp, #132]
  44f2e4:	ldr	w0, [sp, #132]
  44f2e8:	cmp	w0, #0x0
  44f2ec:	b.ne	44f2fc <config_parse_match_ifnames+0x1d0>  // b.any
  44f2f0:	mov	w20, #0x0                   	// #0
  44f2f4:	mov	w19, #0x0                   	// #0
  44f2f8:	b	44f524 <config_parse_match_ifnames+0x3f8>
  44f2fc:	ldr	w0, [sp, #132]
  44f300:	cmn	w0, #0xc
  44f304:	b.ne	44f330 <config_parse_match_ifnames+0x204>  // b.any
  44f308:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f30c:	add	x1, x0, #0xe9b
  44f310:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f314:	add	x3, x0, #0x4c8
  44f318:	mov	w2, #0x159                 	// #345
  44f31c:	mov	w0, #0x0                   	// #0
  44f320:	bl	40bda0 <log_oom_internal@plt>
  44f324:	mov	w20, w0
  44f328:	mov	w19, #0x0                   	// #0
  44f32c:	b	44f524 <config_parse_match_ifnames+0x3f8>
  44f330:	ldr	w0, [sp, #132]
  44f334:	cmp	w0, #0x0
  44f338:	b.ge	44f3c0 <config_parse_match_ifnames+0x294>  // b.tcont
  44f33c:	mov	w0, #0x3                   	// #3
  44f340:	str	w0, [sp, #144]
  44f344:	str	wzr, [sp, #148]
  44f348:	mov	w0, #0x0                   	// #0
  44f34c:	bl	40be30 <log_get_max_level_realm@plt>
  44f350:	mov	w1, w0
  44f354:	ldr	w0, [sp, #144]
  44f358:	and	w0, w0, #0x7
  44f35c:	cmp	w1, w0
  44f360:	b.lt	44f3ac <config_parse_match_ifnames+0x280>  // b.tstop
  44f364:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f368:	add	x1, x0, #0xe9b
  44f36c:	ldr	x0, [sp, #72]
  44f370:	str	x0, [sp, #8]
  44f374:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f378:	add	x0, x0, #0xd0
  44f37c:	str	x0, [sp]
  44f380:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f384:	add	x7, x0, #0x4c8
  44f388:	mov	w6, #0x15b                 	// #347
  44f38c:	mov	x5, x1
  44f390:	ldr	w4, [sp, #148]
  44f394:	ldr	w3, [sp, #108]
  44f398:	ldr	x2, [sp, #112]
  44f39c:	ldr	w1, [sp, #144]
  44f3a0:	ldr	x0, [sp, #120]
  44f3a4:	bl	40b6a0 <log_syntax_internal@plt>
  44f3a8:	b	44f3b4 <config_parse_match_ifnames+0x288>
  44f3ac:	ldr	w0, [sp, #148]
  44f3b0:	cmp	w0, #0x0
  44f3b4:	mov	w20, #0x0                   	// #0
  44f3b8:	mov	w19, #0x0                   	// #0
  44f3bc:	b	44f524 <config_parse_match_ifnames+0x3f8>
  44f3c0:	ldr	x0, [sp, #160]
  44f3c4:	bl	40ab00 <ifname_valid@plt>
  44f3c8:	and	w0, w0, #0xff
  44f3cc:	eor	w0, w0, #0x1
  44f3d0:	and	w0, w0, #0xff
  44f3d4:	cmp	w0, #0x0
  44f3d8:	b.eq	44f45c <config_parse_match_ifnames+0x330>  // b.none
  44f3dc:	mov	w0, #0x3                   	// #3
  44f3e0:	str	w0, [sp, #136]
  44f3e4:	str	wzr, [sp, #140]
  44f3e8:	mov	w0, #0x0                   	// #0
  44f3ec:	bl	40be30 <log_get_max_level_realm@plt>
  44f3f0:	mov	w1, w0
  44f3f4:	ldr	w0, [sp, #136]
  44f3f8:	and	w0, w0, #0x7
  44f3fc:	cmp	w1, w0
  44f400:	b.lt	44f44c <config_parse_match_ifnames+0x320>  // b.tstop
  44f404:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f408:	add	x1, x0, #0xe9b
  44f40c:	ldr	x0, [sp, #160]
  44f410:	str	x0, [sp, #8]
  44f414:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f418:	add	x0, x0, #0xf8
  44f41c:	str	x0, [sp]
  44f420:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f424:	add	x7, x0, #0x4c8
  44f428:	mov	w6, #0x161                 	// #353
  44f42c:	mov	x5, x1
  44f430:	ldr	w4, [sp, #140]
  44f434:	ldr	w3, [sp, #108]
  44f438:	ldr	x2, [sp, #112]
  44f43c:	ldr	w1, [sp, #136]
  44f440:	ldr	x0, [sp, #120]
  44f444:	bl	40b6a0 <log_syntax_internal@plt>
  44f448:	b	44f454 <config_parse_match_ifnames+0x328>
  44f44c:	ldr	w0, [sp, #140]
  44f450:	cmp	w0, #0x0
  44f454:	mov	w19, #0x1                   	// #1
  44f458:	b	44f524 <config_parse_match_ifnames+0x3f8>
  44f45c:	ldrb	w0, [sp, #131]
  44f460:	cmp	w0, #0x0
  44f464:	b.eq	44f4b8 <config_parse_match_ifnames+0x38c>  // b.none
  44f468:	ldr	x0, [sp, #160]
  44f46c:	mov	x2, #0x0                   	// #0
  44f470:	mov	x1, x0
  44f474:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f478:	add	x0, x0, #0xc8
  44f47c:	bl	40aac0 <strjoin_real@plt>
  44f480:	str	x0, [sp, #168]
  44f484:	ldr	x0, [sp, #168]
  44f488:	cmp	x0, #0x0
  44f48c:	b.ne	44f4cc <config_parse_match_ifnames+0x3a0>  // b.any
  44f490:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f494:	add	x1, x0, #0xe9b
  44f498:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f49c:	add	x3, x0, #0x4c8
  44f4a0:	mov	w2, #0x169                 	// #361
  44f4a4:	mov	w0, #0x0                   	// #0
  44f4a8:	bl	40bda0 <log_oom_internal@plt>
  44f4ac:	mov	w20, w0
  44f4b0:	mov	w19, #0x0                   	// #0
  44f4b4:	b	44f524 <config_parse_match_ifnames+0x3f8>
  44f4b8:	ldr	x0, [sp, #160]
  44f4bc:	str	x0, [sp, #184]
  44f4c0:	str	xzr, [sp, #160]
  44f4c4:	ldr	x0, [sp, #184]
  44f4c8:	str	x0, [sp, #168]
  44f4cc:	ldr	x0, [sp, #168]
  44f4d0:	str	x0, [sp, #192]
  44f4d4:	str	xzr, [sp, #168]
  44f4d8:	ldr	x0, [sp, #192]
  44f4dc:	mov	x1, x0
  44f4e0:	ldr	x0, [sp, #176]
  44f4e4:	bl	40af70 <strv_consume@plt>
  44f4e8:	str	w0, [sp, #132]
  44f4ec:	ldr	w0, [sp, #132]
  44f4f0:	cmp	w0, #0x0
  44f4f4:	b.ge	44f520 <config_parse_match_ifnames+0x3f4>  // b.tcont
  44f4f8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f4fc:	add	x1, x0, #0xe9b
  44f500:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f504:	add	x3, x0, #0x4c8
  44f508:	mov	w2, #0x16f                 	// #367
  44f50c:	mov	w0, #0x0                   	// #0
  44f510:	bl	40bda0 <log_oom_internal@plt>
  44f514:	mov	w20, w0
  44f518:	mov	w19, #0x0                   	// #0
  44f51c:	b	44f524 <config_parse_match_ifnames+0x3f8>
  44f520:	mov	w19, #0x2                   	// #2
  44f524:	add	x0, sp, #0xa8
  44f528:	bl	44dcc4 <freep>
  44f52c:	cmp	w19, #0x0
  44f530:	b.eq	44f540 <config_parse_match_ifnames+0x414>  // b.none
  44f534:	cmp	w19, #0x2
  44f538:	b.ne	44f548 <config_parse_match_ifnames+0x41c>  // b.any
  44f53c:	b	44f550 <config_parse_match_ifnames+0x424>
  44f540:	mov	w19, #0x0                   	// #0
  44f544:	b	44f554 <config_parse_match_ifnames+0x428>
  44f548:	mov	w19, #0x1                   	// #1
  44f54c:	b	44f554 <config_parse_match_ifnames+0x428>
  44f550:	mov	w19, #0x2                   	// #2
  44f554:	add	x0, sp, #0xa0
  44f558:	bl	44dcc4 <freep>
  44f55c:	cmp	w19, #0x0
  44f560:	b.eq	44f56c <config_parse_match_ifnames+0x440>  // b.none
  44f564:	cmp	w19, #0x2
  44f568:	b	44f2c4 <config_parse_match_ifnames+0x198>
  44f56c:	mov	w1, w20
  44f570:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44f574:	ldr	x0, [x0, #4032]
  44f578:	ldr	x2, [sp, #200]
  44f57c:	ldr	x0, [x0]
  44f580:	eor	x0, x2, x0
  44f584:	cmp	x0, #0x0
  44f588:	b.eq	44f590 <config_parse_match_ifnames+0x464>  // b.none
  44f58c:	bl	40b280 <__stack_chk_fail@plt>
  44f590:	mov	w0, w1
  44f594:	ldp	x19, x20, [sp, #32]
  44f598:	ldp	x29, x30, [sp, #16]
  44f59c:	add	sp, sp, #0xd0
  44f5a0:	ret

000000000044f5a4 <config_parse_match_property>:
  44f5a4:	sub	sp, sp, #0xd0
  44f5a8:	stp	x29, x30, [sp, #16]
  44f5ac:	add	x29, sp, #0x10
  44f5b0:	stp	x19, x20, [sp, #32]
  44f5b4:	str	x0, [sp, #120]
  44f5b8:	str	x1, [sp, #112]
  44f5bc:	str	w2, [sp, #108]
  44f5c0:	str	x3, [sp, #96]
  44f5c4:	str	w4, [sp, #104]
  44f5c8:	str	x5, [sp, #88]
  44f5cc:	str	w6, [sp, #84]
  44f5d0:	str	x7, [sp, #72]
  44f5d4:	ldr	x0, [sp, #208]
  44f5d8:	str	x0, [sp, #64]
  44f5dc:	ldr	x0, [sp, #216]
  44f5e0:	str	x0, [sp, #56]
  44f5e4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44f5e8:	ldr	x0, [x0, #4032]
  44f5ec:	ldr	x1, [x0]
  44f5f0:	str	x1, [sp, #200]
  44f5f4:	mov	x1, #0x0                   	// #0
  44f5f8:	ldr	x0, [sp, #72]
  44f5fc:	str	x0, [sp, #152]
  44f600:	ldr	x0, [sp, #64]
  44f604:	str	x0, [sp, #176]
  44f608:	ldr	x0, [sp, #112]
  44f60c:	cmp	x0, #0x0
  44f610:	cset	w0, eq  // eq = none
  44f614:	and	w0, w0, #0xff
  44f618:	and	x0, x0, #0xff
  44f61c:	cmp	x0, #0x0
  44f620:	b.eq	44f64c <config_parse_match_property+0xa8>  // b.none
  44f624:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f628:	add	x1, x0, #0xe9b
  44f62c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f630:	add	x4, x0, #0x4e8
  44f634:	mov	w3, #0x184                 	// #388
  44f638:	mov	x2, x1
  44f63c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f640:	add	x1, x0, #0x78
  44f644:	mov	w0, #0x0                   	// #0
  44f648:	bl	40abb0 <log_assert_failed_realm@plt>
  44f64c:	ldr	x0, [sp, #88]
  44f650:	cmp	x0, #0x0
  44f654:	cset	w0, eq  // eq = none
  44f658:	and	w0, w0, #0xff
  44f65c:	and	x0, x0, #0xff
  44f660:	cmp	x0, #0x0
  44f664:	b.eq	44f690 <config_parse_match_property+0xec>  // b.none
  44f668:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f66c:	add	x1, x0, #0xe9b
  44f670:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f674:	add	x4, x0, #0x4e8
  44f678:	mov	w3, #0x185                 	// #389
  44f67c:	mov	x2, x1
  44f680:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f684:	add	x1, x0, #0x88
  44f688:	mov	w0, #0x0                   	// #0
  44f68c:	bl	40abb0 <log_assert_failed_realm@plt>
  44f690:	ldr	x0, [sp, #72]
  44f694:	cmp	x0, #0x0
  44f698:	cset	w0, eq  // eq = none
  44f69c:	and	w0, w0, #0xff
  44f6a0:	and	x0, x0, #0xff
  44f6a4:	cmp	x0, #0x0
  44f6a8:	b.eq	44f6d4 <config_parse_match_property+0x130>  // b.none
  44f6ac:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f6b0:	add	x1, x0, #0xe9b
  44f6b4:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f6b8:	add	x4, x0, #0x4e8
  44f6bc:	mov	w3, #0x186                 	// #390
  44f6c0:	mov	x2, x1
  44f6c4:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f6c8:	add	x1, x0, #0x90
  44f6cc:	mov	w0, #0x0                   	// #0
  44f6d0:	bl	40abb0 <log_assert_failed_realm@plt>
  44f6d4:	ldr	x0, [sp, #64]
  44f6d8:	cmp	x0, #0x0
  44f6dc:	cset	w0, eq  // eq = none
  44f6e0:	and	w0, w0, #0xff
  44f6e4:	and	x0, x0, #0xff
  44f6e8:	cmp	x0, #0x0
  44f6ec:	b.eq	44f718 <config_parse_match_property+0x174>  // b.none
  44f6f0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f6f4:	add	x1, x0, #0xe9b
  44f6f8:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f6fc:	add	x4, x0, #0x4e8
  44f700:	mov	w3, #0x187                 	// #391
  44f704:	mov	x2, x1
  44f708:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f70c:	add	x1, x0, #0x98
  44f710:	mov	w0, #0x0                   	// #0
  44f714:	bl	40abb0 <log_assert_failed_realm@plt>
  44f718:	ldr	x0, [sp, #152]
  44f71c:	ldrb	w0, [x0]
  44f720:	cmp	w0, #0x21
  44f724:	cset	w0, eq  // eq = none
  44f728:	strb	w0, [sp, #131]
  44f72c:	ldr	x1, [sp, #152]
  44f730:	ldrb	w0, [sp, #131]
  44f734:	add	x0, x1, x0
  44f738:	str	x0, [sp, #152]
  44f73c:	str	xzr, [sp, #160]
  44f740:	str	xzr, [sp, #168]
  44f744:	add	x1, sp, #0xa0
  44f748:	add	x0, sp, #0x98
  44f74c:	mov	w3, #0xa                   	// #10
  44f750:	mov	x2, #0x0                   	// #0
  44f754:	bl	40b750 <extract_first_word@plt>
  44f758:	str	w0, [sp, #132]
  44f75c:	ldr	w0, [sp, #132]
  44f760:	cmp	w0, #0x0
  44f764:	b.ne	44f774 <config_parse_match_property+0x1d0>  // b.any
  44f768:	mov	w20, #0x0                   	// #0
  44f76c:	mov	w19, #0x0                   	// #0
  44f770:	b	44f99c <config_parse_match_property+0x3f8>
  44f774:	ldr	w0, [sp, #132]
  44f778:	cmn	w0, #0xc
  44f77c:	b.ne	44f7a8 <config_parse_match_property+0x204>  // b.any
  44f780:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f784:	add	x1, x0, #0xe9b
  44f788:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f78c:	add	x3, x0, #0x508
  44f790:	mov	w2, #0x193                 	// #403
  44f794:	mov	w0, #0x0                   	// #0
  44f798:	bl	40bda0 <log_oom_internal@plt>
  44f79c:	mov	w20, w0
  44f7a0:	mov	w19, #0x0                   	// #0
  44f7a4:	b	44f99c <config_parse_match_property+0x3f8>
  44f7a8:	ldr	w0, [sp, #132]
  44f7ac:	cmp	w0, #0x0
  44f7b0:	b.ge	44f838 <config_parse_match_property+0x294>  // b.tcont
  44f7b4:	mov	w0, #0x3                   	// #3
  44f7b8:	str	w0, [sp, #144]
  44f7bc:	str	wzr, [sp, #148]
  44f7c0:	mov	w0, #0x0                   	// #0
  44f7c4:	bl	40be30 <log_get_max_level_realm@plt>
  44f7c8:	mov	w1, w0
  44f7cc:	ldr	w0, [sp, #144]
  44f7d0:	and	w0, w0, #0x7
  44f7d4:	cmp	w1, w0
  44f7d8:	b.lt	44f824 <config_parse_match_property+0x280>  // b.tstop
  44f7dc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f7e0:	add	x1, x0, #0xe9b
  44f7e4:	ldr	x0, [sp, #72]
  44f7e8:	str	x0, [sp, #8]
  44f7ec:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f7f0:	add	x0, x0, #0xa8
  44f7f4:	str	x0, [sp]
  44f7f8:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f7fc:	add	x7, x0, #0x508
  44f800:	mov	w6, #0x195                 	// #405
  44f804:	mov	x5, x1
  44f808:	ldr	w4, [sp, #148]
  44f80c:	ldr	w3, [sp, #108]
  44f810:	ldr	x2, [sp, #112]
  44f814:	ldr	w1, [sp, #144]
  44f818:	ldr	x0, [sp, #120]
  44f81c:	bl	40b6a0 <log_syntax_internal@plt>
  44f820:	b	44f82c <config_parse_match_property+0x288>
  44f824:	ldr	w0, [sp, #148]
  44f828:	cmp	w0, #0x0
  44f82c:	mov	w20, #0x0                   	// #0
  44f830:	mov	w19, #0x0                   	// #0
  44f834:	b	44f99c <config_parse_match_property+0x3f8>
  44f838:	ldr	x0, [sp, #160]
  44f83c:	bl	40af20 <env_assignment_is_valid@plt>
  44f840:	and	w0, w0, #0xff
  44f844:	eor	w0, w0, #0x1
  44f848:	and	w0, w0, #0xff
  44f84c:	cmp	w0, #0x0
  44f850:	b.eq	44f8d4 <config_parse_match_property+0x330>  // b.none
  44f854:	mov	w0, #0x3                   	// #3
  44f858:	str	w0, [sp, #136]
  44f85c:	str	wzr, [sp, #140]
  44f860:	mov	w0, #0x0                   	// #0
  44f864:	bl	40be30 <log_get_max_level_realm@plt>
  44f868:	mov	w1, w0
  44f86c:	ldr	w0, [sp, #136]
  44f870:	and	w0, w0, #0x7
  44f874:	cmp	w1, w0
  44f878:	b.lt	44f8c4 <config_parse_match_property+0x320>  // b.tstop
  44f87c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f880:	add	x1, x0, #0xe9b
  44f884:	ldr	x0, [sp, #160]
  44f888:	str	x0, [sp, #8]
  44f88c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f890:	add	x0, x0, #0x140
  44f894:	str	x0, [sp]
  44f898:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f89c:	add	x7, x0, #0x508
  44f8a0:	mov	w6, #0x19b                 	// #411
  44f8a4:	mov	x5, x1
  44f8a8:	ldr	w4, [sp, #140]
  44f8ac:	ldr	w3, [sp, #108]
  44f8b0:	ldr	x2, [sp, #112]
  44f8b4:	ldr	w1, [sp, #136]
  44f8b8:	ldr	x0, [sp, #120]
  44f8bc:	bl	40b6a0 <log_syntax_internal@plt>
  44f8c0:	b	44f8cc <config_parse_match_property+0x328>
  44f8c4:	ldr	w0, [sp, #140]
  44f8c8:	cmp	w0, #0x0
  44f8cc:	mov	w19, #0x1                   	// #1
  44f8d0:	b	44f99c <config_parse_match_property+0x3f8>
  44f8d4:	ldrb	w0, [sp, #131]
  44f8d8:	cmp	w0, #0x0
  44f8dc:	b.eq	44f930 <config_parse_match_property+0x38c>  // b.none
  44f8e0:	ldr	x0, [sp, #160]
  44f8e4:	mov	x2, #0x0                   	// #0
  44f8e8:	mov	x1, x0
  44f8ec:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f8f0:	add	x0, x0, #0xc8
  44f8f4:	bl	40aac0 <strjoin_real@plt>
  44f8f8:	str	x0, [sp, #168]
  44f8fc:	ldr	x0, [sp, #168]
  44f900:	cmp	x0, #0x0
  44f904:	b.ne	44f944 <config_parse_match_property+0x3a0>  // b.any
  44f908:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f90c:	add	x1, x0, #0xe9b
  44f910:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f914:	add	x3, x0, #0x508
  44f918:	mov	w2, #0x1a3                 	// #419
  44f91c:	mov	w0, #0x0                   	// #0
  44f920:	bl	40bda0 <log_oom_internal@plt>
  44f924:	mov	w20, w0
  44f928:	mov	w19, #0x0                   	// #0
  44f92c:	b	44f99c <config_parse_match_property+0x3f8>
  44f930:	ldr	x0, [sp, #160]
  44f934:	str	x0, [sp, #184]
  44f938:	str	xzr, [sp, #160]
  44f93c:	ldr	x0, [sp, #184]
  44f940:	str	x0, [sp, #168]
  44f944:	ldr	x0, [sp, #168]
  44f948:	str	x0, [sp, #192]
  44f94c:	str	xzr, [sp, #168]
  44f950:	ldr	x0, [sp, #192]
  44f954:	mov	x1, x0
  44f958:	ldr	x0, [sp, #176]
  44f95c:	bl	40af70 <strv_consume@plt>
  44f960:	str	w0, [sp, #132]
  44f964:	ldr	w0, [sp, #132]
  44f968:	cmp	w0, #0x0
  44f96c:	b.ge	44f998 <config_parse_match_property+0x3f4>  // b.tcont
  44f970:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44f974:	add	x1, x0, #0xe9b
  44f978:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44f97c:	add	x3, x0, #0x508
  44f980:	mov	w2, #0x1a9                 	// #425
  44f984:	mov	w0, #0x0                   	// #0
  44f988:	bl	40bda0 <log_oom_internal@plt>
  44f98c:	mov	w20, w0
  44f990:	mov	w19, #0x0                   	// #0
  44f994:	b	44f99c <config_parse_match_property+0x3f8>
  44f998:	mov	w19, #0x2                   	// #2
  44f99c:	add	x0, sp, #0xa8
  44f9a0:	bl	44dcc4 <freep>
  44f9a4:	cmp	w19, #0x0
  44f9a8:	b.eq	44f9b8 <config_parse_match_property+0x414>  // b.none
  44f9ac:	cmp	w19, #0x2
  44f9b0:	b.ne	44f9c0 <config_parse_match_property+0x41c>  // b.any
  44f9b4:	b	44f9c8 <config_parse_match_property+0x424>
  44f9b8:	mov	w19, #0x0                   	// #0
  44f9bc:	b	44f9cc <config_parse_match_property+0x428>
  44f9c0:	mov	w19, #0x1                   	// #1
  44f9c4:	b	44f9cc <config_parse_match_property+0x428>
  44f9c8:	mov	w19, #0x2                   	// #2
  44f9cc:	add	x0, sp, #0xa0
  44f9d0:	bl	44dcc4 <freep>
  44f9d4:	cmp	w19, #0x0
  44f9d8:	b.eq	44f9e4 <config_parse_match_property+0x440>  // b.none
  44f9dc:	cmp	w19, #0x2
  44f9e0:	b	44f73c <config_parse_match_property+0x198>
  44f9e4:	mov	w1, w20
  44f9e8:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44f9ec:	ldr	x0, [x0, #4032]
  44f9f0:	ldr	x2, [sp, #200]
  44f9f4:	ldr	x0, [x0]
  44f9f8:	eor	x0, x2, x0
  44f9fc:	cmp	x0, #0x0
  44fa00:	b.eq	44fa08 <config_parse_match_property+0x464>  // b.none
  44fa04:	bl	40b280 <__stack_chk_fail@plt>
  44fa08:	mov	w0, w1
  44fa0c:	ldp	x19, x20, [sp, #32]
  44fa10:	ldp	x29, x30, [sp, #16]
  44fa14:	add	sp, sp, #0xd0
  44fa18:	ret

000000000044fa1c <config_parse_ifalias>:
  44fa1c:	sub	sp, sp, #0xa0
  44fa20:	stp	x29, x30, [sp, #16]
  44fa24:	add	x29, sp, #0x10
  44fa28:	str	x19, [sp, #32]
  44fa2c:	str	x0, [sp, #120]
  44fa30:	str	x1, [sp, #112]
  44fa34:	str	w2, [sp, #108]
  44fa38:	str	x3, [sp, #96]
  44fa3c:	str	w4, [sp, #104]
  44fa40:	str	x5, [sp, #88]
  44fa44:	str	w6, [sp, #84]
  44fa48:	str	x7, [sp, #72]
  44fa4c:	ldr	x0, [sp, #160]
  44fa50:	str	x0, [sp, #64]
  44fa54:	ldr	x0, [sp, #168]
  44fa58:	str	x0, [sp, #56]
  44fa5c:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44fa60:	ldr	x0, [x0, #4032]
  44fa64:	ldr	x1, [x0]
  44fa68:	str	x1, [sp, #152]
  44fa6c:	mov	x1, #0x0                   	// #0
  44fa70:	ldr	x0, [sp, #64]
  44fa74:	str	x0, [sp, #144]
  44fa78:	str	xzr, [sp, #136]
  44fa7c:	ldr	x0, [sp, #112]
  44fa80:	cmp	x0, #0x0
  44fa84:	cset	w0, eq  // eq = none
  44fa88:	and	w0, w0, #0xff
  44fa8c:	and	x0, x0, #0xff
  44fa90:	cmp	x0, #0x0
  44fa94:	b.eq	44fac0 <config_parse_ifalias+0xa4>  // b.none
  44fa98:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fa9c:	add	x1, x0, #0xe9b
  44faa0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44faa4:	add	x4, x0, #0x528
  44faa8:	mov	w3, #0x1bb                 	// #443
  44faac:	mov	x2, x1
  44fab0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fab4:	add	x1, x0, #0x78
  44fab8:	mov	w0, #0x0                   	// #0
  44fabc:	bl	40abb0 <log_assert_failed_realm@plt>
  44fac0:	ldr	x0, [sp, #88]
  44fac4:	cmp	x0, #0x0
  44fac8:	cset	w0, eq  // eq = none
  44facc:	and	w0, w0, #0xff
  44fad0:	and	x0, x0, #0xff
  44fad4:	cmp	x0, #0x0
  44fad8:	b.eq	44fb04 <config_parse_ifalias+0xe8>  // b.none
  44fadc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fae0:	add	x1, x0, #0xe9b
  44fae4:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fae8:	add	x4, x0, #0x528
  44faec:	mov	w3, #0x1bc                 	// #444
  44faf0:	mov	x2, x1
  44faf4:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44faf8:	add	x1, x0, #0x88
  44fafc:	mov	w0, #0x0                   	// #0
  44fb00:	bl	40abb0 <log_assert_failed_realm@plt>
  44fb04:	ldr	x0, [sp, #72]
  44fb08:	cmp	x0, #0x0
  44fb0c:	cset	w0, eq  // eq = none
  44fb10:	and	w0, w0, #0xff
  44fb14:	and	x0, x0, #0xff
  44fb18:	cmp	x0, #0x0
  44fb1c:	b.eq	44fb48 <config_parse_ifalias+0x12c>  // b.none
  44fb20:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fb24:	add	x1, x0, #0xe9b
  44fb28:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fb2c:	add	x4, x0, #0x528
  44fb30:	mov	w3, #0x1bd                 	// #445
  44fb34:	mov	x2, x1
  44fb38:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fb3c:	add	x1, x0, #0x90
  44fb40:	mov	w0, #0x0                   	// #0
  44fb44:	bl	40abb0 <log_assert_failed_realm@plt>
  44fb48:	ldr	x0, [sp, #64]
  44fb4c:	cmp	x0, #0x0
  44fb50:	cset	w0, eq  // eq = none
  44fb54:	and	w0, w0, #0xff
  44fb58:	and	x0, x0, #0xff
  44fb5c:	cmp	x0, #0x0
  44fb60:	b.eq	44fb8c <config_parse_ifalias+0x170>  // b.none
  44fb64:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fb68:	add	x1, x0, #0xe9b
  44fb6c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fb70:	add	x4, x0, #0x528
  44fb74:	mov	w3, #0x1be                 	// #446
  44fb78:	mov	x2, x1
  44fb7c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fb80:	add	x1, x0, #0x98
  44fb84:	mov	w0, #0x0                   	// #0
  44fb88:	bl	40abb0 <log_assert_failed_realm@plt>
  44fb8c:	ldr	x0, [sp, #72]
  44fb90:	bl	40b7c0 <strdup@plt>
  44fb94:	str	x0, [sp, #136]
  44fb98:	ldr	x0, [sp, #136]
  44fb9c:	cmp	x0, #0x0
  44fba0:	b.ne	44fbc8 <config_parse_ifalias+0x1ac>  // b.any
  44fba4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fba8:	add	x1, x0, #0xe9b
  44fbac:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fbb0:	add	x3, x0, #0x540
  44fbb4:	mov	w2, #0x1c2                 	// #450
  44fbb8:	mov	w0, #0x0                   	// #0
  44fbbc:	bl	40bda0 <log_oom_internal@plt>
  44fbc0:	mov	w19, w0
  44fbc4:	b	44fcb8 <config_parse_ifalias+0x29c>
  44fbc8:	ldr	x0, [sp, #136]
  44fbcc:	bl	40b700 <ascii_is_valid@plt>
  44fbd0:	cmp	x0, #0x0
  44fbd4:	b.eq	44fbe8 <config_parse_ifalias+0x1cc>  // b.none
  44fbd8:	ldr	x0, [sp, #136]
  44fbdc:	bl	40bd10 <strlen@plt>
  44fbe0:	cmp	x0, #0xff
  44fbe4:	b.ls	44fc68 <config_parse_ifalias+0x24c>  // b.plast
  44fbe8:	mov	w0, #0x3                   	// #3
  44fbec:	str	w0, [sp, #128]
  44fbf0:	str	wzr, [sp, #132]
  44fbf4:	mov	w0, #0x0                   	// #0
  44fbf8:	bl	40be30 <log_get_max_level_realm@plt>
  44fbfc:	mov	w1, w0
  44fc00:	ldr	w0, [sp, #128]
  44fc04:	and	w0, w0, #0x7
  44fc08:	cmp	w1, w0
  44fc0c:	b.lt	44fc58 <config_parse_ifalias+0x23c>  // b.tstop
  44fc10:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fc14:	add	x1, x0, #0xe9b
  44fc18:	ldr	x0, [sp, #72]
  44fc1c:	str	x0, [sp, #8]
  44fc20:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fc24:	add	x0, x0, #0x178
  44fc28:	str	x0, [sp]
  44fc2c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fc30:	add	x7, x0, #0x540
  44fc34:	mov	w6, #0x1c5                 	// #453
  44fc38:	mov	x5, x1
  44fc3c:	ldr	w4, [sp, #132]
  44fc40:	ldr	w3, [sp, #108]
  44fc44:	ldr	x2, [sp, #112]
  44fc48:	ldr	w1, [sp, #128]
  44fc4c:	ldr	x0, [sp, #120]
  44fc50:	bl	40b6a0 <log_syntax_internal@plt>
  44fc54:	b	44fc60 <config_parse_ifalias+0x244>
  44fc58:	ldr	w0, [sp, #132]
  44fc5c:	cmp	w0, #0x0
  44fc60:	mov	w19, #0x0                   	// #0
  44fc64:	b	44fcb8 <config_parse_ifalias+0x29c>
  44fc68:	ldr	x0, [sp, #136]
  44fc6c:	bl	44de74 <isempty>
  44fc70:	and	w0, w0, #0xff
  44fc74:	cmp	w0, #0x0
  44fc78:	b.eq	44fc98 <config_parse_ifalias+0x27c>  // b.none
  44fc7c:	ldr	x0, [sp, #144]
  44fc80:	ldr	x0, [x0]
  44fc84:	bl	44dca4 <mfree>
  44fc88:	mov	x1, x0
  44fc8c:	ldr	x0, [sp, #144]
  44fc90:	str	x1, [x0]
  44fc94:	b	44fcb4 <config_parse_ifalias+0x298>
  44fc98:	ldr	x0, [sp, #144]
  44fc9c:	ldr	x0, [x0]
  44fca0:	bl	40ba20 <free@plt>
  44fca4:	ldr	x1, [sp, #136]
  44fca8:	ldr	x0, [sp, #144]
  44fcac:	str	x1, [x0]
  44fcb0:	str	xzr, [sp, #136]
  44fcb4:	mov	w19, #0x0                   	// #0
  44fcb8:	add	x0, sp, #0x88
  44fcbc:	bl	44dcc4 <freep>
  44fcc0:	mov	w1, w19
  44fcc4:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44fcc8:	ldr	x0, [x0, #4032]
  44fccc:	ldr	x2, [sp, #152]
  44fcd0:	ldr	x0, [x0]
  44fcd4:	eor	x0, x2, x0
  44fcd8:	cmp	x0, #0x0
  44fcdc:	b.eq	44fce4 <config_parse_ifalias+0x2c8>  // b.none
  44fce0:	bl	40b280 <__stack_chk_fail@plt>
  44fce4:	mov	w0, w1
  44fce8:	ldr	x19, [sp, #32]
  44fcec:	ldp	x29, x30, [sp, #16]
  44fcf0:	add	sp, sp, #0xa0
  44fcf4:	ret

000000000044fcf8 <config_parse_hwaddr>:
  44fcf8:	sub	sp, sp, #0xb0
  44fcfc:	stp	x29, x30, [sp, #16]
  44fd00:	add	x29, sp, #0x10
  44fd04:	str	x19, [sp, #32]
  44fd08:	str	x0, [sp, #120]
  44fd0c:	str	x1, [sp, #112]
  44fd10:	str	w2, [sp, #108]
  44fd14:	str	x3, [sp, #96]
  44fd18:	str	w4, [sp, #104]
  44fd1c:	str	x5, [sp, #88]
  44fd20:	str	w6, [sp, #84]
  44fd24:	str	x7, [sp, #72]
  44fd28:	ldr	x0, [sp, #176]
  44fd2c:	str	x0, [sp, #64]
  44fd30:	ldr	x0, [sp, #184]
  44fd34:	str	x0, [sp, #56]
  44fd38:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44fd3c:	ldr	x0, [x0, #4032]
  44fd40:	ldr	x1, [x0]
  44fd44:	str	x1, [sp, #168]
  44fd48:	mov	x1, #0x0                   	// #0
  44fd4c:	str	xzr, [sp, #152]
  44fd50:	ldr	x0, [sp, #64]
  44fd54:	str	x0, [sp, #160]
  44fd58:	ldr	x0, [sp, #112]
  44fd5c:	cmp	x0, #0x0
  44fd60:	cset	w0, eq  // eq = none
  44fd64:	and	w0, w0, #0xff
  44fd68:	and	x0, x0, #0xff
  44fd6c:	cmp	x0, #0x0
  44fd70:	b.eq	44fd9c <config_parse_hwaddr+0xa4>  // b.none
  44fd74:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fd78:	add	x1, x0, #0xe9b
  44fd7c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fd80:	add	x4, x0, #0x558
  44fd84:	mov	w3, #0x1e0                 	// #480
  44fd88:	mov	x2, x1
  44fd8c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fd90:	add	x1, x0, #0x78
  44fd94:	mov	w0, #0x0                   	// #0
  44fd98:	bl	40abb0 <log_assert_failed_realm@plt>
  44fd9c:	ldr	x0, [sp, #88]
  44fda0:	cmp	x0, #0x0
  44fda4:	cset	w0, eq  // eq = none
  44fda8:	and	w0, w0, #0xff
  44fdac:	and	x0, x0, #0xff
  44fdb0:	cmp	x0, #0x0
  44fdb4:	b.eq	44fde0 <config_parse_hwaddr+0xe8>  // b.none
  44fdb8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fdbc:	add	x1, x0, #0xe9b
  44fdc0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fdc4:	add	x4, x0, #0x558
  44fdc8:	mov	w3, #0x1e1                 	// #481
  44fdcc:	mov	x2, x1
  44fdd0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fdd4:	add	x1, x0, #0x88
  44fdd8:	mov	w0, #0x0                   	// #0
  44fddc:	bl	40abb0 <log_assert_failed_realm@plt>
  44fde0:	ldr	x0, [sp, #72]
  44fde4:	cmp	x0, #0x0
  44fde8:	cset	w0, eq  // eq = none
  44fdec:	and	w0, w0, #0xff
  44fdf0:	and	x0, x0, #0xff
  44fdf4:	cmp	x0, #0x0
  44fdf8:	b.eq	44fe24 <config_parse_hwaddr+0x12c>  // b.none
  44fdfc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fe00:	add	x1, x0, #0xe9b
  44fe04:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fe08:	add	x4, x0, #0x558
  44fe0c:	mov	w3, #0x1e2                 	// #482
  44fe10:	mov	x2, x1
  44fe14:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fe18:	add	x1, x0, #0x90
  44fe1c:	mov	w0, #0x0                   	// #0
  44fe20:	bl	40abb0 <log_assert_failed_realm@plt>
  44fe24:	ldr	x0, [sp, #64]
  44fe28:	cmp	x0, #0x0
  44fe2c:	cset	w0, eq  // eq = none
  44fe30:	and	w0, w0, #0xff
  44fe34:	and	x0, x0, #0xff
  44fe38:	cmp	x0, #0x0
  44fe3c:	b.eq	44fe68 <config_parse_hwaddr+0x170>  // b.none
  44fe40:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fe44:	add	x1, x0, #0xe9b
  44fe48:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fe4c:	add	x4, x0, #0x558
  44fe50:	mov	w3, #0x1e3                 	// #483
  44fe54:	mov	x2, x1
  44fe58:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fe5c:	add	x1, x0, #0x98
  44fe60:	mov	w0, #0x0                   	// #0
  44fe64:	bl	40abb0 <log_assert_failed_realm@plt>
  44fe68:	mov	x1, #0x6                   	// #6
  44fe6c:	mov	x0, #0x1                   	// #1
  44fe70:	bl	40b7e0 <calloc@plt>
  44fe74:	str	x0, [sp, #152]
  44fe78:	ldr	x0, [sp, #152]
  44fe7c:	cmp	x0, #0x0
  44fe80:	b.ne	44fea8 <config_parse_hwaddr+0x1b0>  // b.any
  44fe84:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fe88:	add	x1, x0, #0xe9b
  44fe8c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44fe90:	add	x3, x0, #0x570
  44fe94:	mov	w2, #0x1e7                 	// #487
  44fe98:	mov	w0, #0x0                   	// #0
  44fe9c:	bl	40bda0 <log_oom_internal@plt>
  44fea0:	mov	w19, w0
  44fea4:	b	44ff6c <config_parse_hwaddr+0x274>
  44fea8:	ldr	x0, [sp, #152]
  44feac:	mov	x1, x0
  44feb0:	ldr	x0, [sp, #72]
  44feb4:	bl	40b110 <ether_addr_from_string@plt>
  44feb8:	str	w0, [sp, #140]
  44febc:	ldr	w0, [sp, #140]
  44fec0:	cmp	w0, #0x0
  44fec4:	b.ge	44ff4c <config_parse_hwaddr+0x254>  // b.tcont
  44fec8:	mov	w0, #0x3                   	// #3
  44fecc:	str	w0, [sp, #144]
  44fed0:	ldr	w0, [sp, #140]
  44fed4:	str	w0, [sp, #148]
  44fed8:	mov	w0, #0x0                   	// #0
  44fedc:	bl	40be30 <log_get_max_level_realm@plt>
  44fee0:	mov	w1, w0
  44fee4:	ldr	w0, [sp, #144]
  44fee8:	and	w0, w0, #0x7
  44feec:	cmp	w1, w0
  44fef0:	b.lt	44ff3c <config_parse_hwaddr+0x244>  // b.tstop
  44fef4:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  44fef8:	add	x1, x0, #0xe9b
  44fefc:	ldr	x0, [sp, #72]
  44ff00:	str	x0, [sp, #8]
  44ff04:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ff08:	add	x0, x0, #0x1c8
  44ff0c:	str	x0, [sp]
  44ff10:	adrp	x0, 45e000 <asso_values.10768+0x268>
  44ff14:	add	x7, x0, #0x570
  44ff18:	mov	w6, #0x1eb                 	// #491
  44ff1c:	mov	x5, x1
  44ff20:	ldr	w4, [sp, #148]
  44ff24:	ldr	w3, [sp, #108]
  44ff28:	ldr	x2, [sp, #112]
  44ff2c:	ldr	w1, [sp, #144]
  44ff30:	ldr	x0, [sp, #120]
  44ff34:	bl	40b6a0 <log_syntax_internal@plt>
  44ff38:	b	44ff44 <config_parse_hwaddr+0x24c>
  44ff3c:	ldr	w0, [sp, #148]
  44ff40:	cmp	w0, #0x0
  44ff44:	mov	w19, #0x0                   	// #0
  44ff48:	b	44ff6c <config_parse_hwaddr+0x274>
  44ff4c:	ldr	x0, [sp, #160]
  44ff50:	ldr	x0, [x0]
  44ff54:	bl	40ba20 <free@plt>
  44ff58:	ldr	x1, [sp, #152]
  44ff5c:	ldr	x0, [sp, #160]
  44ff60:	str	x1, [x0]
  44ff64:	str	xzr, [sp, #152]
  44ff68:	mov	w19, #0x0                   	// #0
  44ff6c:	add	x0, sp, #0x98
  44ff70:	bl	44dcc4 <freep>
  44ff74:	mov	w1, w19
  44ff78:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44ff7c:	ldr	x0, [x0, #4032]
  44ff80:	ldr	x2, [sp, #168]
  44ff84:	ldr	x0, [x0]
  44ff88:	eor	x0, x2, x0
  44ff8c:	cmp	x0, #0x0
  44ff90:	b.eq	44ff98 <config_parse_hwaddr+0x2a0>  // b.none
  44ff94:	bl	40b280 <__stack_chk_fail@plt>
  44ff98:	mov	w0, w1
  44ff9c:	ldr	x19, [sp, #32]
  44ffa0:	ldp	x29, x30, [sp, #16]
  44ffa4:	add	sp, sp, #0xb0
  44ffa8:	ret

000000000044ffac <config_parse_hwaddrs>:
  44ffac:	sub	sp, sp, #0xd0
  44ffb0:	stp	x29, x30, [sp, #16]
  44ffb4:	add	x29, sp, #0x10
  44ffb8:	stp	x19, x20, [sp, #32]
  44ffbc:	str	x0, [sp, #120]
  44ffc0:	str	x1, [sp, #112]
  44ffc4:	str	w2, [sp, #108]
  44ffc8:	str	x3, [sp, #96]
  44ffcc:	str	w4, [sp, #104]
  44ffd0:	str	x5, [sp, #88]
  44ffd4:	str	w6, [sp, #84]
  44ffd8:	str	x7, [sp, #72]
  44ffdc:	ldr	x0, [sp, #208]
  44ffe0:	str	x0, [sp, #64]
  44ffe4:	ldr	x0, [sp, #216]
  44ffe8:	str	x0, [sp, #56]
  44ffec:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  44fff0:	ldr	x0, [x0, #4032]
  44fff4:	ldr	x1, [x0]
  44fff8:	str	x1, [sp, #200]
  44fffc:	mov	x1, #0x0                   	// #0
  450000:	str	xzr, [sp, #160]
  450004:	ldr	x0, [sp, #72]
  450008:	str	x0, [sp, #168]
  45000c:	ldr	x0, [sp, #64]
  450010:	str	x0, [sp, #192]
  450014:	ldr	x0, [sp, #112]
  450018:	cmp	x0, #0x0
  45001c:	cset	w0, eq  // eq = none
  450020:	and	w0, w0, #0xff
  450024:	and	x0, x0, #0xff
  450028:	cmp	x0, #0x0
  45002c:	b.eq	450058 <config_parse_hwaddrs+0xac>  // b.none
  450030:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  450034:	add	x1, x0, #0xe9b
  450038:	adrp	x0, 45e000 <asso_values.10768+0x268>
  45003c:	add	x4, x0, #0x588
  450040:	mov	w3, #0x204                 	// #516
  450044:	mov	x2, x1
  450048:	adrp	x0, 45e000 <asso_values.10768+0x268>
  45004c:	add	x1, x0, #0x78
  450050:	mov	w0, #0x0                   	// #0
  450054:	bl	40abb0 <log_assert_failed_realm@plt>
  450058:	ldr	x0, [sp, #88]
  45005c:	cmp	x0, #0x0
  450060:	cset	w0, eq  // eq = none
  450064:	and	w0, w0, #0xff
  450068:	and	x0, x0, #0xff
  45006c:	cmp	x0, #0x0
  450070:	b.eq	45009c <config_parse_hwaddrs+0xf0>  // b.none
  450074:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  450078:	add	x1, x0, #0xe9b
  45007c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  450080:	add	x4, x0, #0x588
  450084:	mov	w3, #0x205                 	// #517
  450088:	mov	x2, x1
  45008c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  450090:	add	x1, x0, #0x88
  450094:	mov	w0, #0x0                   	// #0
  450098:	bl	40abb0 <log_assert_failed_realm@plt>
  45009c:	ldr	x0, [sp, #72]
  4500a0:	cmp	x0, #0x0
  4500a4:	cset	w0, eq  // eq = none
  4500a8:	and	w0, w0, #0xff
  4500ac:	and	x0, x0, #0xff
  4500b0:	cmp	x0, #0x0
  4500b4:	b.eq	4500e0 <config_parse_hwaddrs+0x134>  // b.none
  4500b8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4500bc:	add	x1, x0, #0xe9b
  4500c0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  4500c4:	add	x4, x0, #0x588
  4500c8:	mov	w3, #0x206                 	// #518
  4500cc:	mov	x2, x1
  4500d0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  4500d4:	add	x1, x0, #0x90
  4500d8:	mov	w0, #0x0                   	// #0
  4500dc:	bl	40abb0 <log_assert_failed_realm@plt>
  4500e0:	ldr	x0, [sp, #64]
  4500e4:	cmp	x0, #0x0
  4500e8:	cset	w0, eq  // eq = none
  4500ec:	and	w0, w0, #0xff
  4500f0:	and	x0, x0, #0xff
  4500f4:	cmp	x0, #0x0
  4500f8:	b.eq	450124 <config_parse_hwaddrs+0x178>  // b.none
  4500fc:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  450100:	add	x1, x0, #0xe9b
  450104:	adrp	x0, 45e000 <asso_values.10768+0x268>
  450108:	add	x4, x0, #0x588
  45010c:	mov	w3, #0x207                 	// #519
  450110:	mov	x2, x1
  450114:	adrp	x0, 45e000 <asso_values.10768+0x268>
  450118:	add	x1, x0, #0x98
  45011c:	mov	w0, #0x0                   	// #0
  450120:	bl	40abb0 <log_assert_failed_realm@plt>
  450124:	ldr	x0, [sp, #72]
  450128:	bl	44de74 <isempty>
  45012c:	and	w0, w0, #0xff
  450130:	cmp	w0, #0x0
  450134:	b.eq	450158 <config_parse_hwaddrs+0x1ac>  // b.none
  450138:	ldr	x0, [sp, #192]
  45013c:	ldr	x0, [x0]
  450140:	bl	44ddcc <set_free_free>
  450144:	mov	x1, x0
  450148:	ldr	x0, [sp, #192]
  45014c:	str	x1, [x0]
  450150:	mov	w20, #0x0                   	// #0
  450154:	b	4504d4 <config_parse_hwaddrs+0x528>
  450158:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  45015c:	ldr	x0, [x0, #4048]
  450160:	bl	40b0f0 <internal_set_new@plt>
  450164:	str	x0, [sp, #160]
  450168:	ldr	x0, [sp, #160]
  45016c:	cmp	x0, #0x0
  450170:	b.ne	450198 <config_parse_hwaddrs+0x1ec>  // b.any
  450174:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  450178:	add	x1, x0, #0xe9b
  45017c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  450180:	add	x3, x0, #0x5a0
  450184:	mov	w2, #0x211                 	// #529
  450188:	mov	w0, #0x0                   	// #0
  45018c:	bl	40bda0 <log_oom_internal@plt>
  450190:	mov	w20, w0
  450194:	b	4504d4 <config_parse_hwaddrs+0x528>
  450198:	str	xzr, [sp, #176]
  45019c:	str	xzr, [sp, #184]
  4501a0:	add	x1, sp, #0xb0
  4501a4:	add	x0, sp, #0xa8
  4501a8:	mov	w3, #0x0                   	// #0
  4501ac:	mov	x2, #0x0                   	// #0
  4501b0:	bl	40b750 <extract_first_word@plt>
  4501b4:	str	w0, [sp, #140]
  4501b8:	ldr	w0, [sp, #140]
  4501bc:	cmp	w0, #0x0
  4501c0:	b.ne	4501cc <config_parse_hwaddrs+0x220>  // b.any
  4501c4:	mov	w19, #0x0                   	// #0
  4501c8:	b	4503cc <config_parse_hwaddrs+0x420>
  4501cc:	ldr	w0, [sp, #140]
  4501d0:	cmn	w0, #0xc
  4501d4:	b.ne	450200 <config_parse_hwaddrs+0x254>  // b.any
  4501d8:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4501dc:	add	x1, x0, #0xe9b
  4501e0:	adrp	x0, 45e000 <asso_values.10768+0x268>
  4501e4:	add	x3, x0, #0x5a0
  4501e8:	mov	w2, #0x21b                 	// #539
  4501ec:	mov	w0, #0x0                   	// #0
  4501f0:	bl	40bda0 <log_oom_internal@plt>
  4501f4:	mov	w20, w0
  4501f8:	mov	w19, #0x1                   	// #1
  4501fc:	b	4503cc <config_parse_hwaddrs+0x420>
  450200:	ldr	w0, [sp, #140]
  450204:	cmp	w0, #0x0
  450208:	b.ge	450294 <config_parse_hwaddrs+0x2e8>  // b.tcont
  45020c:	mov	w0, #0x4                   	// #4
  450210:	str	w0, [sp, #152]
  450214:	ldr	w0, [sp, #140]
  450218:	str	w0, [sp, #156]
  45021c:	mov	w0, #0x0                   	// #0
  450220:	bl	40be30 <log_get_max_level_realm@plt>
  450224:	mov	w1, w0
  450228:	ldr	w0, [sp, #152]
  45022c:	and	w0, w0, #0x7
  450230:	cmp	w1, w0
  450234:	b.lt	450280 <config_parse_hwaddrs+0x2d4>  // b.tstop
  450238:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  45023c:	add	x1, x0, #0xe9b
  450240:	ldr	x0, [sp, #72]
  450244:	str	x0, [sp, #8]
  450248:	adrp	x0, 45e000 <asso_values.10768+0x268>
  45024c:	add	x0, x0, #0xa8
  450250:	str	x0, [sp]
  450254:	adrp	x0, 45e000 <asso_values.10768+0x268>
  450258:	add	x7, x0, #0x5a0
  45025c:	mov	w6, #0x21d                 	// #541
  450260:	mov	x5, x1
  450264:	ldr	w4, [sp, #156]
  450268:	ldr	w3, [sp, #108]
  45026c:	ldr	x2, [sp, #112]
  450270:	ldr	w1, [sp, #152]
  450274:	ldr	x0, [sp, #120]
  450278:	bl	40b6a0 <log_syntax_internal@plt>
  45027c:	b	450288 <config_parse_hwaddrs+0x2dc>
  450280:	ldr	w0, [sp, #156]
  450284:	cmp	w0, #0x0
  450288:	mov	w20, #0x0                   	// #0
  45028c:	mov	w19, #0x1                   	// #1
  450290:	b	4503cc <config_parse_hwaddrs+0x420>
  450294:	mov	x1, #0x1                   	// #1
  450298:	mov	x0, #0x6                   	// #6
  45029c:	bl	44dd64 <malloc_multiply>
  4502a0:	str	x0, [sp, #184]
  4502a4:	ldr	x0, [sp, #184]
  4502a8:	cmp	x0, #0x0
  4502ac:	b.ne	4502d8 <config_parse_hwaddrs+0x32c>  // b.any
  4502b0:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4502b4:	add	x1, x0, #0xe9b
  4502b8:	adrp	x0, 45e000 <asso_values.10768+0x268>
  4502bc:	add	x3, x0, #0x5a0
  4502c0:	mov	w2, #0x223                 	// #547
  4502c4:	mov	w0, #0x0                   	// #0
  4502c8:	bl	40bda0 <log_oom_internal@plt>
  4502cc:	mov	w20, w0
  4502d0:	mov	w19, #0x1                   	// #1
  4502d4:	b	4503cc <config_parse_hwaddrs+0x420>
  4502d8:	ldr	x0, [sp, #176]
  4502dc:	ldr	x1, [sp, #184]
  4502e0:	bl	40b110 <ether_addr_from_string@plt>
  4502e4:	str	w0, [sp, #140]
  4502e8:	ldr	w0, [sp, #140]
  4502ec:	cmp	w0, #0x0
  4502f0:	b.ge	450374 <config_parse_hwaddrs+0x3c8>  // b.tcont
  4502f4:	mov	w0, #0x3                   	// #3
  4502f8:	str	w0, [sp, #144]
  4502fc:	str	wzr, [sp, #148]
  450300:	mov	w0, #0x0                   	// #0
  450304:	bl	40be30 <log_get_max_level_realm@plt>
  450308:	mov	w1, w0
  45030c:	ldr	w0, [sp, #144]
  450310:	and	w0, w0, #0x7
  450314:	cmp	w1, w0
  450318:	b.lt	450364 <config_parse_hwaddrs+0x3b8>  // b.tstop
  45031c:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  450320:	add	x1, x0, #0xe9b
  450324:	ldr	x0, [sp, #176]
  450328:	str	x0, [sp, #8]
  45032c:	adrp	x0, 45e000 <asso_values.10768+0x268>
  450330:	add	x0, x0, #0x200
  450334:	str	x0, [sp]
  450338:	adrp	x0, 45e000 <asso_values.10768+0x268>
  45033c:	add	x7, x0, #0x5a0
  450340:	mov	w6, #0x227                 	// #551
  450344:	mov	x5, x1
  450348:	ldr	w4, [sp, #148]
  45034c:	ldr	w3, [sp, #108]
  450350:	ldr	x2, [sp, #112]
  450354:	ldr	w1, [sp, #144]
  450358:	ldr	x0, [sp, #120]
  45035c:	bl	40b6a0 <log_syntax_internal@plt>
  450360:	b	45036c <config_parse_hwaddrs+0x3c0>
  450364:	ldr	w0, [sp, #148]
  450368:	cmp	w0, #0x0
  45036c:	mov	w19, #0x2                   	// #2
  450370:	b	4503cc <config_parse_hwaddrs+0x420>
  450374:	ldr	x0, [sp, #160]
  450378:	ldr	x1, [sp, #184]
  45037c:	bl	40bcd0 <set_put@plt>
  450380:	str	w0, [sp, #140]
  450384:	ldr	w0, [sp, #140]
  450388:	cmp	w0, #0x0
  45038c:	b.ge	4503b8 <config_parse_hwaddrs+0x40c>  // b.tcont
  450390:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  450394:	add	x1, x0, #0xe9b
  450398:	adrp	x0, 45e000 <asso_values.10768+0x268>
  45039c:	add	x3, x0, #0x5a0
  4503a0:	mov	w2, #0x22d                 	// #557
  4503a4:	mov	w0, #0x0                   	// #0
  4503a8:	bl	40bda0 <log_oom_internal@plt>
  4503ac:	mov	w20, w0
  4503b0:	mov	w19, #0x1                   	// #1
  4503b4:	b	4503cc <config_parse_hwaddrs+0x420>
  4503b8:	ldr	w0, [sp, #140]
  4503bc:	cmp	w0, #0x0
  4503c0:	b.le	4503c8 <config_parse_hwaddrs+0x41c>
  4503c4:	str	xzr, [sp, #184]
  4503c8:	mov	w19, #0x3                   	// #3
  4503cc:	add	x0, sp, #0xb8
  4503d0:	bl	44dcc4 <freep>
  4503d4:	cmp	w19, #0x3
  4503d8:	b.eq	450410 <config_parse_hwaddrs+0x464>  // b.none
  4503dc:	cmp	w19, #0x3
  4503e0:	b.gt	450408 <config_parse_hwaddrs+0x45c>
  4503e4:	cmp	w19, #0x0
  4503e8:	b.eq	4503f8 <config_parse_hwaddrs+0x44c>  // b.none
  4503ec:	cmp	w19, #0x1
  4503f0:	b.eq	450400 <config_parse_hwaddrs+0x454>  // b.none
  4503f4:	b	450408 <config_parse_hwaddrs+0x45c>
  4503f8:	mov	w19, #0x0                   	// #0
  4503fc:	b	450414 <config_parse_hwaddrs+0x468>
  450400:	mov	w19, #0x1                   	// #1
  450404:	b	450414 <config_parse_hwaddrs+0x468>
  450408:	mov	w19, #0x2                   	// #2
  45040c:	b	450414 <config_parse_hwaddrs+0x468>
  450410:	mov	w19, #0x3                   	// #3
  450414:	add	x0, sp, #0xb0
  450418:	bl	44dcc4 <freep>
  45041c:	cmp	w19, #0x3
  450420:	b.eq	450464 <config_parse_hwaddrs+0x4b8>  // b.none
  450424:	cmp	w19, #0x3
  450428:	b.gt	450198 <config_parse_hwaddrs+0x1ec>
  45042c:	cmp	w19, #0x0
  450430:	b.eq	450440 <config_parse_hwaddrs+0x494>  // b.none
  450434:	cmp	w19, #0x1
  450438:	b.eq	4504d4 <config_parse_hwaddrs+0x528>  // b.none
  45043c:	b	450464 <config_parse_hwaddrs+0x4b8>
  450440:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  450444:	ldr	x1, [x0, #4048]
  450448:	ldr	x0, [sp, #192]
  45044c:	bl	40a480 <internal_set_ensure_allocated@plt>
  450450:	str	w0, [sp, #140]
  450454:	ldr	w0, [sp, #140]
  450458:	cmp	w0, #0x0
  45045c:	b.lt	450468 <config_parse_hwaddrs+0x4bc>  // b.tstop
  450460:	b	45048c <config_parse_hwaddrs+0x4e0>
  450464:	b	450198 <config_parse_hwaddrs+0x1ec>
  450468:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  45046c:	add	x1, x0, #0xe9b
  450470:	adrp	x0, 45e000 <asso_values.10768+0x268>
  450474:	add	x3, x0, #0x5a0
  450478:	mov	w2, #0x234                 	// #564
  45047c:	mov	w0, #0x0                   	// #0
  450480:	bl	40bda0 <log_oom_internal@plt>
  450484:	mov	w20, w0
  450488:	b	4504d4 <config_parse_hwaddrs+0x528>
  45048c:	ldr	x0, [sp, #192]
  450490:	ldr	x0, [x0]
  450494:	ldr	x1, [sp, #160]
  450498:	bl	44de1c <set_move>
  45049c:	str	w0, [sp, #140]
  4504a0:	ldr	w0, [sp, #140]
  4504a4:	cmp	w0, #0x0
  4504a8:	b.ge	4504d0 <config_parse_hwaddrs+0x524>  // b.tcont
  4504ac:	adrp	x0, 45d000 <__func__.7018+0x3c0>
  4504b0:	add	x1, x0, #0xe9b
  4504b4:	adrp	x0, 45e000 <asso_values.10768+0x268>
  4504b8:	add	x3, x0, #0x5a0
  4504bc:	mov	w2, #0x238                 	// #568
  4504c0:	mov	w0, #0x0                   	// #0
  4504c4:	bl	40bda0 <log_oom_internal@plt>
  4504c8:	mov	w20, w0
  4504cc:	b	4504d4 <config_parse_hwaddrs+0x528>
  4504d0:	mov	w20, #0x0                   	// #0
  4504d4:	add	x0, sp, #0xa0
  4504d8:	bl	44de40 <set_free_freep>
  4504dc:	mov	w1, w20
  4504e0:	adrp	x0, 48c000 <_DYNAMIC+0xd8>
  4504e4:	ldr	x0, [x0, #4032]
  4504e8:	ldr	x2, [sp, #200]
  4504ec:	ldr	x0, [x0]
  4504f0:	eor	x0, x2, x0
  4504f4:	cmp	x0, #0x0
  4504f8:	b.eq	450500 <config_parse_hwaddrs+0x554>  // b.none
  4504fc:	bl	40b280 <__stack_chk_fail@plt>
  450500:	mov	w0, w1
  450504:	ldp	x19, x20, [sp, #32]
  450508:	ldp	x29, x30, [sp, #16]
  45050c:	add	sp, sp, #0xd0
  450510:	ret
  450514:	nop

0000000000450518 <__libc_csu_init>:
  450518:	stp	x29, x30, [sp, #-64]!
  45051c:	mov	x29, sp
  450520:	stp	x19, x20, [sp, #16]
  450524:	adrp	x20, 474000 <__FRAME_END__+0x10c9c>
  450528:	add	x20, x20, #0x360
  45052c:	stp	x21, x22, [sp, #32]
  450530:	adrp	x21, 474000 <__FRAME_END__+0x10c9c>
  450534:	add	x21, x21, #0x358
  450538:	sub	x20, x20, x21
  45053c:	mov	w22, w0
  450540:	stp	x23, x24, [sp, #48]
  450544:	mov	x23, x1
  450548:	mov	x24, x2
  45054c:	bl	40a260 <_init>
  450550:	cmp	xzr, x20, asr #3
  450554:	b.eq	450580 <__libc_csu_init+0x68>  // b.none
  450558:	asr	x20, x20, #3
  45055c:	mov	x19, #0x0                   	// #0
  450560:	ldr	x3, [x21, x19, lsl #3]
  450564:	mov	x2, x24
  450568:	add	x19, x19, #0x1
  45056c:	mov	x1, x23
  450570:	mov	w0, w22
  450574:	blr	x3
  450578:	cmp	x20, x19
  45057c:	b.ne	450560 <__libc_csu_init+0x48>  // b.any
  450580:	ldp	x19, x20, [sp, #16]
  450584:	ldp	x21, x22, [sp, #32]
  450588:	ldp	x23, x24, [sp, #48]
  45058c:	ldp	x29, x30, [sp], #64
  450590:	ret
  450594:	nop

0000000000450598 <__libc_csu_fini>:
  450598:	ret
  45059c:	nop

00000000004505a0 <stat64>:
  4505a0:	mov	x2, x1
  4505a4:	mov	x1, x0
  4505a8:	mov	w0, #0x0                   	// #0
  4505ac:	b	40b330 <__xstat64@plt>

00000000004505b0 <fstat64>:
  4505b0:	mov	x2, x1
  4505b4:	mov	w1, w0
  4505b8:	mov	w0, #0x0                   	// #0
  4505bc:	b	40af90 <__fxstat64@plt>

00000000004505c0 <lstat64>:
  4505c0:	mov	x2, x1
  4505c4:	mov	x1, x0
  4505c8:	mov	w0, #0x0                   	// #0
  4505cc:	b	40b1a0 <__lxstat64@plt>

Disassembly of section .fini:

00000000004505d0 <_fini>:
  4505d0:	stp	x29, x30, [sp, #-16]!
  4505d4:	mov	x29, sp
  4505d8:	ldp	x29, x30, [sp], #16
  4505dc:	ret
