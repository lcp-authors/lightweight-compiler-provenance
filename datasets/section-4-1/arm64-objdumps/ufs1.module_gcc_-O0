
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ufs1.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_fs_register>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x1, [sp, #24]
      10:	adrp	x0, 0 <grub_fs_register>
      14:	add	x0, x0, #0x0
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_list_push>
      20:	nop
      24:	ldp	x29, x30, [sp], #32
      28:	ret
      2c:	nop
	...

0000000000000038 <grub_fs_unregister>:
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	bl	0 <grub_list_remove>
      4c:	nop
      50:	ldp	x29, x30, [sp], #32
      54:	ret

0000000000000058 <grub_ufs_to_cpu_blk>:
      58:	sub	sp, sp, #0x10
      5c:	str	w0, [sp, #12]
      60:	ldr	w0, [sp, #12]
      64:	add	sp, sp, #0x10
      68:	ret

000000000000006c <grub_ufs_get_file_block>:
      6c:	stp	x29, x30, [sp, #-80]!
      70:	mov	x29, sp
      74:	str	x19, [sp, #16]
      78:	str	x0, [sp, #40]
      7c:	str	x1, [sp, #32]
      80:	ldr	x0, [sp, #32]
      84:	cmp	x0, #0xb
      88:	b.hi	ac <grub_ufs_get_file_block+0x40>  // b.pmore
      8c:	ldr	x1, [sp, #40]
      90:	ldr	x0, [sp, #32]
      94:	add	x0, x0, #0x160
      98:	lsl	x0, x0, #2
      9c:	add	x0, x1, x0
      a0:	ldr	w0, [x0, #16]
      a4:	mov	w0, w0
      a8:	b	36c <grub_ufs_get_file_block+0x300>
      ac:	ldr	x0, [sp, #40]
      b0:	ldr	w0, [x0, #100]
      b4:	str	w0, [sp, #76]
      b8:	ldr	x0, [sp, #32]
      bc:	sub	x0, x0, #0xc
      c0:	str	x0, [sp, #32]
      c4:	ldr	x0, [sp, #40]
      c8:	ldr	w0, [x0, #1520]
      cc:	sub	w0, w0, #0x2
      d0:	str	w0, [sp, #72]
      d4:	ldr	w0, [sp, #72]
      d8:	mov	w1, #0x1                   	// #1
      dc:	lsl	w0, w1, w0
      e0:	sxtw	x0, w0
      e4:	str	x0, [sp, #64]
      e8:	ldr	x1, [sp, #32]
      ec:	ldr	x0, [sp, #64]
      f0:	cmp	x1, x0
      f4:	b.cs	140 <grub_ufs_get_file_block+0xd4>  // b.hs, b.nlast
      f8:	ldr	x0, [sp, #40]
      fc:	ldr	x5, [x0, #1376]
     100:	ldr	x0, [sp, #40]
     104:	ldr	w0, [x0, #1472]
     108:	mov	w1, w0
     10c:	ldr	w0, [sp, #76]
     110:	lsl	x1, x1, x0
     114:	ldr	x0, [sp, #32]
     118:	lsl	x0, x0, #2
     11c:	add	x2, sp, #0x3c
     120:	mov	x4, x2
     124:	mov	x3, #0x4                   	// #4
     128:	mov	x2, x0
     12c:	mov	x0, x5
     130:	bl	0 <grub_disk_read>
     134:	ldr	w0, [sp, #60]
     138:	mov	w0, w0
     13c:	b	36c <grub_ufs_get_file_block+0x300>
     140:	ldr	x1, [sp, #32]
     144:	ldr	x0, [sp, #64]
     148:	sub	x0, x1, x0
     14c:	str	x0, [sp, #32]
     150:	ldr	x0, [sp, #64]
     154:	mul	x0, x0, x0
     158:	ldr	x1, [sp, #32]
     15c:	cmp	x1, x0
     160:	b.cs	210 <grub_ufs_get_file_block+0x1a4>  // b.hs, b.nlast
     164:	ldr	x0, [sp, #40]
     168:	ldr	x5, [x0, #1376]
     16c:	ldr	x0, [sp, #40]
     170:	ldr	w0, [x0, #1476]
     174:	mov	w1, w0
     178:	ldr	w0, [sp, #76]
     17c:	lsl	x6, x1, x0
     180:	ldr	w0, [sp, #72]
     184:	ldr	x1, [sp, #32]
     188:	lsr	x0, x1, x0
     18c:	lsl	x0, x0, #2
     190:	add	x1, sp, #0x38
     194:	mov	x4, x1
     198:	mov	x3, #0x4                   	// #4
     19c:	mov	x2, x0
     1a0:	mov	x1, x6
     1a4:	mov	x0, x5
     1a8:	bl	0 <grub_disk_read>
     1ac:	ldr	x0, [sp, #40]
     1b0:	ldr	x19, [x0, #1376]
     1b4:	ldr	w0, [sp, #56]
     1b8:	bl	58 <grub_ufs_to_cpu_blk>
     1bc:	mov	x1, x0
     1c0:	ldr	w0, [sp, #76]
     1c4:	lsl	x5, x1, x0
     1c8:	ldr	w0, [sp, #72]
     1cc:	mov	w1, #0x1                   	// #1
     1d0:	lsl	w0, w1, w0
     1d4:	sub	w0, w0, #0x1
     1d8:	sxtw	x1, w0
     1dc:	ldr	x0, [sp, #32]
     1e0:	and	x0, x1, x0
     1e4:	lsl	x0, x0, #2
     1e8:	add	x1, sp, #0x38
     1ec:	mov	x4, x1
     1f0:	mov	x3, #0x4                   	// #4
     1f4:	mov	x2, x0
     1f8:	mov	x1, x5
     1fc:	mov	x0, x19
     200:	bl	0 <grub_disk_read>
     204:	ldr	w0, [sp, #56]
     208:	mov	w0, w0
     20c:	b	36c <grub_ufs_get_file_block+0x300>
     210:	ldr	x0, [sp, #64]
     214:	mul	x0, x0, x0
     218:	ldr	x1, [sp, #32]
     21c:	sub	x0, x1, x0
     220:	str	x0, [sp, #32]
     224:	ldr	w1, [sp, #72]
     228:	mov	w0, w1
     22c:	lsl	w0, w0, #1
     230:	add	w0, w0, w1
     234:	ldr	x1, [sp, #32]
     238:	lsr	x0, x1, x0
     23c:	cmp	x0, #0x0
     240:	b.ne	354 <grub_ufs_get_file_block+0x2e8>  // b.any
     244:	ldr	x0, [sp, #40]
     248:	ldr	x5, [x0, #1376]
     24c:	ldr	x0, [sp, #40]
     250:	ldr	w0, [x0, #1480]
     254:	mov	w1, w0
     258:	ldr	w0, [sp, #76]
     25c:	lsl	x6, x1, x0
     260:	ldr	w0, [sp, #72]
     264:	lsl	w0, w0, #1
     268:	ldr	x1, [sp, #32]
     26c:	lsr	x0, x1, x0
     270:	lsl	x0, x0, #2
     274:	add	x1, sp, #0x34
     278:	mov	x4, x1
     27c:	mov	x3, #0x4                   	// #4
     280:	mov	x2, x0
     284:	mov	x1, x6
     288:	mov	x0, x5
     28c:	bl	0 <grub_disk_read>
     290:	ldr	x0, [sp, #40]
     294:	ldr	x19, [x0, #1376]
     298:	ldr	w0, [sp, #52]
     29c:	bl	58 <grub_ufs_to_cpu_blk>
     2a0:	mov	x1, x0
     2a4:	ldr	w0, [sp, #76]
     2a8:	lsl	x5, x1, x0
     2ac:	ldr	w0, [sp, #72]
     2b0:	ldr	x1, [sp, #32]
     2b4:	lsr	x1, x1, x0
     2b8:	ldr	w0, [sp, #72]
     2bc:	mov	w2, #0x1                   	// #1
     2c0:	lsl	w0, w2, w0
     2c4:	sub	w0, w0, #0x1
     2c8:	sxtw	x0, w0
     2cc:	and	x0, x1, x0
     2d0:	lsl	x0, x0, #2
     2d4:	add	x1, sp, #0x34
     2d8:	mov	x4, x1
     2dc:	mov	x3, #0x4                   	// #4
     2e0:	mov	x2, x0
     2e4:	mov	x1, x5
     2e8:	mov	x0, x19
     2ec:	bl	0 <grub_disk_read>
     2f0:	ldr	x0, [sp, #40]
     2f4:	ldr	x19, [x0, #1376]
     2f8:	ldr	w0, [sp, #52]
     2fc:	bl	58 <grub_ufs_to_cpu_blk>
     300:	mov	x1, x0
     304:	ldr	w0, [sp, #76]
     308:	lsl	x5, x1, x0
     30c:	ldr	w0, [sp, #72]
     310:	mov	w1, #0x1                   	// #1
     314:	lsl	w0, w1, w0
     318:	sub	w0, w0, #0x1
     31c:	sxtw	x1, w0
     320:	ldr	x0, [sp, #32]
     324:	and	x0, x1, x0
     328:	lsl	x0, x0, #2
     32c:	add	x1, sp, #0x34
     330:	mov	x4, x1
     334:	mov	x3, #0x4                   	// #4
     338:	mov	x2, x0
     33c:	mov	x1, x5
     340:	mov	x0, x19
     344:	bl	0 <grub_disk_read>
     348:	ldr	w0, [sp, #52]
     34c:	mov	w0, w0
     350:	b	36c <grub_ufs_get_file_block+0x300>
     354:	adrp	x0, 0 <grub_fs_register>
     358:	add	x0, x0, #0x0
     35c:	ldr	x1, [x0]
     360:	mov	w0, #0x9                   	// #9
     364:	bl	0 <grub_error>
     368:	mov	x0, #0x0                   	// #0
     36c:	ldr	x19, [sp, #16]
     370:	ldp	x29, x30, [sp], #80
     374:	ret
	...

0000000000000380 <grub_ufs_read_file>:
     380:	stp	x29, x30, [sp, #-128]!
     384:	mov	x29, sp
     388:	str	x0, [sp, #56]
     38c:	str	x1, [sp, #48]
     390:	str	x2, [sp, #40]
     394:	str	x3, [sp, #32]
     398:	str	x4, [sp, #24]
     39c:	str	x5, [sp, #16]
     3a0:	ldr	x0, [sp, #56]
     3a4:	str	x0, [sp, #96]
     3a8:	ldr	x1, [sp, #24]
     3ac:	ldr	x0, [sp, #32]
     3b0:	add	x1, x1, x0
     3b4:	ldr	x0, [sp, #56]
     3b8:	ldr	x0, [x0, #1392]
     3bc:	cmp	x1, x0
     3c0:	b.ls	3d8 <grub_ufs_read_file+0x58>  // b.plast
     3c4:	ldr	x0, [sp, #56]
     3c8:	ldr	x1, [x0, #1392]
     3cc:	ldr	x0, [sp, #32]
     3d0:	sub	x0, x1, x0
     3d4:	str	x0, [sp, #24]
     3d8:	ldr	x1, [sp, #24]
     3dc:	ldr	x0, [sp, #32]
     3e0:	add	x1, x1, x0
     3e4:	ldr	x0, [sp, #96]
     3e8:	ldr	w0, [x0, #48]
     3ec:	mov	w0, w0
     3f0:	add	x0, x1, x0
     3f4:	sub	x1, x0, #0x1
     3f8:	ldr	x0, [sp, #56]
     3fc:	ldr	w0, [x0, #1520]
     400:	lsr	x0, x1, x0
     404:	str	x0, [sp, #88]
     408:	ldr	x0, [sp, #56]
     40c:	ldr	w0, [x0, #1520]
     410:	ldr	x1, [sp, #32]
     414:	lsr	x0, x1, x0
     418:	str	x0, [sp, #120]
     41c:	b	5d4 <grub_ufs_read_file+0x254>
     420:	ldr	x0, [sp, #96]
     424:	ldr	w0, [x0, #48]
     428:	mov	w0, w0
     42c:	str	x0, [sp, #112]
     430:	str	wzr, [sp, #108]
     434:	ldr	x0, [sp, #96]
     438:	ldr	w0, [x0, #48]
     43c:	sub	w0, w0, #0x1
     440:	mov	w0, w0
     444:	ldr	x1, [sp, #32]
     448:	and	x0, x1, x0
     44c:	str	x0, [sp, #80]
     450:	ldr	x1, [sp, #120]
     454:	ldr	x0, [sp, #56]
     458:	bl	6c <grub_ufs_get_file_block>
     45c:	str	x0, [sp, #72]
     460:	adrp	x0, 0 <grub_fs_register>
     464:	add	x0, x0, #0x0
     468:	ldr	x0, [x0]
     46c:	ldr	w0, [x0]
     470:	cmp	w0, #0x0
     474:	b.eq	480 <grub_ufs_read_file+0x100>  // b.none
     478:	mov	x0, #0xffffffffffffffff    	// #-1
     47c:	b	5e8 <grub_ufs_read_file+0x268>
     480:	ldr	x0, [sp, #88]
     484:	sub	x0, x0, #0x1
     488:	ldr	x1, [sp, #120]
     48c:	cmp	x1, x0
     490:	b.ne	4d4 <grub_ufs_read_file+0x154>  // b.any
     494:	ldr	x1, [sp, #24]
     498:	ldr	x0, [sp, #32]
     49c:	add	x1, x1, x0
     4a0:	ldr	x0, [sp, #96]
     4a4:	ldr	w0, [x0, #48]
     4a8:	sub	w0, w0, #0x1
     4ac:	mov	w0, w0
     4b0:	and	x0, x1, x0
     4b4:	str	x0, [sp, #112]
     4b8:	ldr	x0, [sp, #112]
     4bc:	cmp	x0, #0x0
     4c0:	b.ne	4d4 <grub_ufs_read_file+0x154>  // b.any
     4c4:	ldr	x0, [sp, #96]
     4c8:	ldr	w0, [x0, #48]
     4cc:	mov	w0, w0
     4d0:	str	x0, [sp, #112]
     4d4:	ldr	x0, [sp, #56]
     4d8:	ldr	w0, [x0, #1520]
     4dc:	ldr	x1, [sp, #32]
     4e0:	lsr	x0, x1, x0
     4e4:	ldr	x1, [sp, #120]
     4e8:	cmp	x1, x0
     4ec:	b.ne	508 <grub_ufs_read_file+0x188>  // b.any
     4f0:	ldr	x0, [sp, #80]
     4f4:	str	w0, [sp, #108]
     4f8:	ldrsw	x0, [sp, #108]
     4fc:	ldr	x1, [sp, #112]
     500:	sub	x0, x1, x0
     504:	str	x0, [sp, #112]
     508:	ldr	x0, [sp, #72]
     50c:	cmp	x0, #0x0
     510:	b.eq	594 <grub_ufs_read_file+0x214>  // b.none
     514:	ldr	x0, [sp, #56]
     518:	ldr	x0, [x0, #1376]
     51c:	ldr	x1, [sp, #48]
     520:	str	x1, [x0, #48]
     524:	ldr	x0, [sp, #56]
     528:	ldr	x0, [x0, #1376]
     52c:	ldr	x1, [sp, #40]
     530:	str	x1, [x0, #56]
     534:	ldr	x0, [sp, #56]
     538:	ldr	x5, [x0, #1376]
     53c:	ldr	x0, [sp, #56]
     540:	ldr	w0, [x0, #100]
     544:	ldr	x1, [sp, #72]
     548:	lsl	x0, x1, x0
     54c:	ldrsw	x1, [sp, #108]
     550:	ldr	x4, [sp, #16]
     554:	ldr	x3, [sp, #112]
     558:	mov	x2, x1
     55c:	mov	x1, x0
     560:	mov	x0, x5
     564:	bl	0 <grub_disk_read>
     568:	ldr	x0, [sp, #56]
     56c:	ldr	x0, [x0, #1376]
     570:	str	xzr, [x0, #48]
     574:	adrp	x0, 0 <grub_fs_register>
     578:	add	x0, x0, #0x0
     57c:	ldr	x0, [x0]
     580:	ldr	w0, [x0]
     584:	cmp	w0, #0x0
     588:	b.eq	5a4 <grub_ufs_read_file+0x224>  // b.none
     58c:	mov	x0, #0xffffffffffffffff    	// #-1
     590:	b	5e8 <grub_ufs_read_file+0x268>
     594:	ldr	x2, [sp, #112]
     598:	mov	w1, #0x0                   	// #0
     59c:	ldr	x0, [sp, #16]
     5a0:	bl	0 <grub_memset>
     5a4:	ldr	x0, [sp, #96]
     5a8:	ldr	w0, [x0, #48]
     5ac:	mov	w1, w0
     5b0:	ldr	w0, [sp, #108]
     5b4:	sub	w0, w1, w0
     5b8:	mov	w0, w0
     5bc:	ldr	x1, [sp, #16]
     5c0:	add	x0, x1, x0
     5c4:	str	x0, [sp, #16]
     5c8:	ldr	x0, [sp, #120]
     5cc:	add	x0, x0, #0x1
     5d0:	str	x0, [sp, #120]
     5d4:	ldr	x1, [sp, #120]
     5d8:	ldr	x0, [sp, #88]
     5dc:	cmp	x1, x0
     5e0:	b.cc	420 <grub_ufs_read_file+0xa0>  // b.lo, b.ul, b.last
     5e4:	ldr	x0, [sp, #24]
     5e8:	ldp	x29, x30, [sp], #128
     5ec:	ret
	...

00000000000005f8 <grub_ufs_read_inode>:
     5f8:	stp	x29, x30, [sp, #-80]!
     5fc:	mov	x29, sp
     600:	str	x0, [sp, #40]
     604:	str	w1, [sp, #36]
     608:	str	x2, [sp, #24]
     60c:	ldr	x0, [sp, #40]
     610:	str	x0, [sp, #72]
     614:	ldr	w1, [sp, #36]
     618:	ldr	x0, [sp, #72]
     61c:	ldr	w0, [x0, #184]
     620:	udiv	w0, w1, w0
     624:	str	w0, [sp, #68]
     628:	ldr	w0, [sp, #36]
     62c:	ldr	x1, [sp, #72]
     630:	ldr	w1, [x1, #184]
     634:	udiv	w2, w0, w1
     638:	mul	w1, w2, w1
     63c:	sub	w0, w0, w1
     640:	str	w0, [sp, #64]
     644:	ldr	x0, [sp, #72]
     648:	ldr	w1, [x0, #188]
     64c:	ldr	w0, [sp, #68]
     650:	mul	w0, w1, w0
     654:	str	w0, [sp, #60]
     658:	ldr	x0, [sp, #72]
     65c:	ldr	w1, [x0, #24]
     660:	ldr	x0, [sp, #72]
     664:	ldr	w0, [x0, #28]
     668:	mvn	w2, w0
     66c:	ldr	w0, [sp, #68]
     670:	and	w0, w2, w0
     674:	mul	w1, w1, w0
     678:	ldr	w0, [sp, #60]
     67c:	add	w0, w1, w0
     680:	str	w0, [sp, #60]
     684:	ldr	x0, [sp, #24]
     688:	cmp	x0, #0x0
     68c:	b.ne	6a8 <grub_ufs_read_inode+0xb0>  // b.any
     690:	ldr	x0, [sp, #40]
     694:	add	x0, x0, #0x568
     698:	str	x0, [sp, #24]
     69c:	ldr	x0, [sp, #40]
     6a0:	ldr	w1, [sp, #36]
     6a4:	str	w1, [x0, #1512]
     6a8:	ldr	x0, [sp, #40]
     6ac:	ldr	x5, [x0, #1376]
     6b0:	ldr	x0, [sp, #72]
     6b4:	ldr	w1, [x0, #16]
     6b8:	ldr	w0, [sp, #60]
     6bc:	add	w1, w1, w0
     6c0:	ldr	x0, [sp, #40]
     6c4:	ldr	w0, [x0, #100]
     6c8:	lsl	w1, w1, w0
     6cc:	ldr	w0, [sp, #64]
     6d0:	add	w2, w0, #0x3
     6d4:	cmp	w0, #0x0
     6d8:	csel	w0, w2, w0, lt  // lt = tstop
     6dc:	asr	w0, w0, #2
     6e0:	add	w0, w1, w0
     6e4:	mov	w6, w0
     6e8:	ldr	w0, [sp, #64]
     6ec:	negs	w1, w0
     6f0:	and	w0, w0, #0x3
     6f4:	and	w1, w1, #0x3
     6f8:	csneg	w0, w0, w1, mi  // mi = first
     6fc:	sxtw	x0, w0
     700:	lsl	x0, x0, #7
     704:	ldr	x4, [sp, #24]
     708:	mov	x3, #0x80                  	// #128
     70c:	mov	x2, x0
     710:	mov	x1, x6
     714:	mov	x0, x5
     718:	bl	0 <grub_disk_read>
     71c:	adrp	x0, 0 <grub_fs_register>
     720:	add	x0, x0, #0x0
     724:	ldr	x0, [x0]
     728:	ldr	w0, [x0]
     72c:	ldp	x29, x30, [sp], #80
     730:	ret
     734:	nop
	...

0000000000000740 <grub_ufs_lookup_symlink>:
     740:	stp	x29, x30, [sp, #-48]!
     744:	mov	x29, sp
     748:	str	x0, [sp, #24]
     74c:	str	w1, [sp, #20]
     750:	ldr	x0, [sp, #24]
     754:	ldr	x0, [x0, #1392]
     758:	str	x0, [sp, #40]
     75c:	ldr	x0, [sp, #24]
     760:	ldr	w0, [x0, #1516]
     764:	add	w1, w0, #0x1
     768:	ldr	x0, [sp, #24]
     76c:	str	w1, [x0, #1516]
     770:	ldr	x0, [sp, #24]
     774:	ldr	w0, [x0, #1516]
     778:	cmp	w0, #0x8
     77c:	b.le	798 <grub_ufs_lookup_symlink+0x58>
     780:	adrp	x0, 0 <grub_fs_register>
     784:	add	x0, x0, #0x0
     788:	ldr	x1, [x0]
     78c:	mov	w0, #0x19                  	// #25
     790:	bl	0 <grub_error>
     794:	b	8c0 <grub_ufs_lookup_symlink+0x180>
     798:	ldr	x0, [sp, #40]
     79c:	add	x0, x0, #0x1
     7a0:	bl	0 <grub_malloc>
     7a4:	str	x0, [sp, #32]
     7a8:	ldr	x0, [sp, #32]
     7ac:	cmp	x0, #0x0
     7b0:	b.ne	7c8 <grub_ufs_lookup_symlink+0x88>  // b.any
     7b4:	adrp	x0, 0 <grub_fs_register>
     7b8:	add	x0, x0, #0x0
     7bc:	ldr	x0, [x0]
     7c0:	ldr	w0, [x0]
     7c4:	b	8c0 <grub_ufs_lookup_symlink+0x180>
     7c8:	ldr	x0, [sp, #24]
     7cc:	ldr	w0, [x0, #1488]
     7d0:	cmp	w0, #0x0
     7d4:	b.ne	800 <grub_ufs_lookup_symlink+0xc0>  // b.any
     7d8:	ldr	x0, [sp, #24]
     7dc:	ldr	x0, [x0, #1392]
     7e0:	cmp	x0, #0x3c
     7e4:	b.hi	800 <grub_ufs_lookup_symlink+0xc0>  // b.pmore
     7e8:	ldr	x0, [sp, #24]
     7ec:	add	x0, x0, #0x590
     7f0:	mov	x1, x0
     7f4:	ldr	x0, [sp, #32]
     7f8:	bl	0 <grub_strcpy>
     7fc:	b	840 <grub_ufs_lookup_symlink+0x100>
     800:	ldr	x5, [sp, #32]
     804:	ldr	x4, [sp, #40]
     808:	mov	x3, #0x0                   	// #0
     80c:	mov	x2, #0x0                   	// #0
     810:	mov	x1, #0x0                   	// #0
     814:	ldr	x0, [sp, #24]
     818:	bl	380 <grub_ufs_read_file>
     81c:	cmp	x0, #0x0
     820:	b.ge	840 <grub_ufs_lookup_symlink+0x100>  // b.tcont
     824:	ldr	x0, [sp, #32]
     828:	bl	0 <grub_free>
     82c:	adrp	x0, 0 <grub_fs_register>
     830:	add	x0, x0, #0x0
     834:	ldr	x0, [x0]
     838:	ldr	w0, [x0]
     83c:	b	8c0 <grub_ufs_lookup_symlink+0x180>
     840:	ldr	x1, [sp, #32]
     844:	ldr	x0, [sp, #40]
     848:	add	x0, x1, x0
     84c:	strb	wzr, [x0]
     850:	ldr	x0, [sp, #32]
     854:	ldrb	w0, [x0]
     858:	cmp	w0, #0x2f
     85c:	b.ne	868 <grub_ufs_lookup_symlink+0x128>  // b.any
     860:	mov	w0, #0x2                   	// #2
     864:	str	w0, [sp, #20]
     868:	mov	x2, #0x0                   	// #0
     86c:	ldr	w1, [sp, #20]
     870:	ldr	x0, [sp, #24]
     874:	bl	5f8 <grub_ufs_read_inode>
     878:	cmp	w0, #0x0
     87c:	b.eq	89c <grub_ufs_lookup_symlink+0x15c>  // b.none
     880:	ldr	x0, [sp, #32]
     884:	bl	0 <grub_free>
     888:	adrp	x0, 0 <grub_fs_register>
     88c:	add	x0, x0, #0x0
     890:	ldr	x0, [x0]
     894:	ldr	w0, [x0]
     898:	b	8c0 <grub_ufs_lookup_symlink+0x180>
     89c:	ldr	x1, [sp, #32]
     8a0:	ldr	x0, [sp, #24]
     8a4:	bl	8d8 <grub_ufs_find_file>
     8a8:	ldr	x0, [sp, #32]
     8ac:	bl	0 <grub_free>
     8b0:	adrp	x0, 0 <grub_fs_register>
     8b4:	add	x0, x0, #0x0
     8b8:	ldr	x0, [x0]
     8bc:	ldr	w0, [x0]
     8c0:	ldp	x29, x30, [sp], #48
     8c4:	ret
	...

00000000000008d8 <grub_ufs_find_file>:
     8d8:	stp	x29, x30, [sp, #-80]!
     8dc:	mov	x29, sp
     8e0:	str	x0, [sp, #24]
     8e4:	str	x1, [sp, #16]
     8e8:	ldr	x0, [sp, #16]
     8ec:	str	x0, [sp, #64]
     8f0:	str	wzr, [sp, #60]
     8f4:	ldr	x0, [sp, #16]
     8f8:	bl	0 <grub_strlen>
     8fc:	add	x0, x0, #0x2
     900:	bl	0 <grub_malloc>
     904:	str	x0, [sp, #48]
     908:	ldr	x0, [sp, #48]
     90c:	cmp	x0, #0x0
     910:	b.ne	928 <grub_ufs_find_file+0x50>  // b.any
     914:	adrp	x0, 0 <grub_fs_register>
     918:	add	x0, x0, #0x0
     91c:	ldr	x0, [x0]
     920:	ldr	w0, [x0]
     924:	b	bb4 <grub_ufs_find_file+0x2dc>
     928:	ldr	x0, [sp, #64]
     92c:	str	x0, [sp, #72]
     930:	b	940 <grub_ufs_find_file+0x68>
     934:	ldr	x0, [sp, #72]
     938:	add	x0, x0, #0x1
     93c:	str	x0, [sp, #72]
     940:	ldr	x0, [sp, #72]
     944:	ldrb	w0, [x0]
     948:	cmp	w0, #0x2f
     94c:	b.eq	934 <grub_ufs_find_file+0x5c>  // b.none
     950:	ldr	x0, [sp, #72]
     954:	ldrb	w0, [x0]
     958:	cmp	w0, #0x0
     95c:	b.ne	970 <grub_ufs_find_file+0x98>  // b.any
     960:	ldr	x0, [sp, #48]
     964:	bl	0 <grub_free>
     968:	mov	w0, #0x0                   	// #0
     96c:	b	bb4 <grub_ufs_find_file+0x2dc>
     970:	ldr	x0, [sp, #24]
     974:	ldrh	w0, [x0, #1384]
     978:	and	w0, w0, #0xe000
     97c:	cmp	w0, #0x4, lsl #12
     980:	b.eq	99c <grub_ufs_find_file+0xc4>  // b.none
     984:	adrp	x0, 0 <grub_fs_register>
     988:	add	x0, x0, #0x0
     98c:	ldr	x1, [x0]
     990:	mov	w0, #0x4                   	// #4
     994:	bl	0 <grub_error>
     998:	b	b9c <grub_ufs_find_file+0x2c4>
     99c:	ldr	x0, [sp, #72]
     9a0:	str	x0, [sp, #64]
     9a4:	b	9b4 <grub_ufs_find_file+0xdc>
     9a8:	ldr	x0, [sp, #64]
     9ac:	add	x0, x0, #0x1
     9b0:	str	x0, [sp, #64]
     9b4:	ldr	x0, [sp, #64]
     9b8:	ldrb	w0, [x0]
     9bc:	cmp	w0, #0x0
     9c0:	b.eq	9d4 <grub_ufs_find_file+0xfc>  // b.none
     9c4:	ldr	x0, [sp, #64]
     9c8:	ldrb	w0, [x0]
     9cc:	cmp	w0, #0x2f
     9d0:	b.ne	9a8 <grub_ufs_find_file+0xd0>  // b.any
     9d4:	str	wzr, [sp, #60]
     9d8:	ldr	w1, [sp, #60]
     9dc:	ldr	x0, [sp, #24]
     9e0:	ldr	x0, [x0, #1392]
     9e4:	cmp	x1, x0
     9e8:	b.cc	a08 <grub_ufs_find_file+0x130>  // b.lo, b.ul, b.last
     9ec:	ldr	x2, [sp, #16]
     9f0:	adrp	x0, 0 <grub_fs_register>
     9f4:	add	x0, x0, #0x0
     9f8:	ldr	x1, [x0]
     9fc:	mov	w0, #0x5                   	// #5
     a00:	bl	0 <grub_error>
     a04:	b	b9c <grub_ufs_find_file+0x2c4>
     a08:	ldr	w0, [sp, #60]
     a0c:	add	x1, sp, #0x20
     a10:	mov	x5, x1
     a14:	mov	x4, #0x8                   	// #8
     a18:	mov	x3, x0
     a1c:	mov	x2, #0x0                   	// #0
     a20:	mov	x1, #0x0                   	// #0
     a24:	ldr	x0, [sp, #24]
     a28:	bl	380 <grub_ufs_read_file>
     a2c:	cmp	x0, #0x0
     a30:	b.lt	b90 <grub_ufs_find_file+0x2b8>  // b.tstop
     a34:	ldrh	w0, [sp, #38]
     a38:	str	w0, [sp, #44]
     a3c:	ldrsw	x1, [sp, #44]
     a40:	ldr	x2, [sp, #64]
     a44:	ldr	x0, [sp, #72]
     a48:	sub	x0, x2, x0
     a4c:	cmp	x1, x0
     a50:	b.lt	b6c <grub_ufs_find_file+0x294>  // b.tstop
     a54:	ldr	w0, [sp, #60]
     a58:	add	x6, x0, #0x8
     a5c:	ldr	x1, [sp, #64]
     a60:	ldr	x0, [sp, #72]
     a64:	sub	x1, x1, x0
     a68:	ldrsw	x2, [sp, #44]
     a6c:	ldr	x3, [sp, #64]
     a70:	ldr	x0, [sp, #72]
     a74:	sub	x0, x3, x0
     a78:	cmp	x2, x0
     a7c:	cset	w0, ne  // ne = any
     a80:	and	w0, w0, #0xff
     a84:	and	x0, x0, #0xff
     a88:	add	x0, x1, x0
     a8c:	ldr	x5, [sp, #48]
     a90:	mov	x4, x0
     a94:	mov	x3, x6
     a98:	mov	x2, #0x0                   	// #0
     a9c:	mov	x1, #0x0                   	// #0
     aa0:	ldr	x0, [sp, #24]
     aa4:	bl	380 <grub_ufs_read_file>
     aa8:	cmp	x0, #0x0
     aac:	b.lt	b98 <grub_ufs_find_file+0x2c0>  // b.tstop
     ab0:	ldr	x1, [sp, #64]
     ab4:	ldr	x0, [sp, #72]
     ab8:	sub	x0, x1, x0
     abc:	mov	x2, x0
     ac0:	ldr	x1, [sp, #48]
     ac4:	ldr	x0, [sp, #72]
     ac8:	bl	0 <grub_strncmp>
     acc:	cmp	w0, #0x0
     ad0:	b.ne	b70 <grub_ufs_find_file+0x298>  // b.any
     ad4:	ldrsw	x1, [sp, #44]
     ad8:	ldr	x2, [sp, #64]
     adc:	ldr	x0, [sp, #72]
     ae0:	sub	x0, x2, x0
     ae4:	cmp	x1, x0
     ae8:	b.eq	b10 <grub_ufs_find_file+0x238>  // b.none
     aec:	ldr	x1, [sp, #64]
     af0:	ldr	x0, [sp, #72]
     af4:	sub	x0, x1, x0
     af8:	mov	x1, x0
     afc:	ldr	x0, [sp, #48]
     b00:	add	x0, x0, x1
     b04:	ldrb	w0, [x0]
     b08:	cmp	w0, #0x0
     b0c:	b.ne	b70 <grub_ufs_find_file+0x298>  // b.any
     b10:	ldr	x0, [sp, #24]
     b14:	ldr	w0, [x0, #1512]
     b18:	str	w0, [sp, #40]
     b1c:	ldr	w0, [sp, #32]
     b20:	mov	x2, #0x0                   	// #0
     b24:	mov	w1, w0
     b28:	ldr	x0, [sp, #24]
     b2c:	bl	5f8 <grub_ufs_read_inode>
     b30:	ldr	x0, [sp, #24]
     b34:	ldrh	w0, [x0, #1384]
     b38:	and	w0, w0, #0xe000
     b3c:	cmp	w0, #0xa, lsl #12
     b40:	b.ne	b88 <grub_ufs_find_file+0x2b0>  // b.any
     b44:	ldr	w1, [sp, #40]
     b48:	ldr	x0, [sp, #24]
     b4c:	bl	740 <grub_ufs_lookup_symlink>
     b50:	adrp	x0, 0 <grub_fs_register>
     b54:	add	x0, x0, #0x0
     b58:	ldr	x0, [x0]
     b5c:	ldr	w0, [x0]
     b60:	cmp	w0, #0x0
     b64:	b.eq	b88 <grub_ufs_find_file+0x2b0>  // b.none
     b68:	b	b9c <grub_ufs_find_file+0x2c4>
     b6c:	nop
     b70:	ldrh	w0, [sp, #36]
     b74:	mov	w1, w0
     b78:	ldr	w0, [sp, #60]
     b7c:	add	w0, w0, w1
     b80:	str	w0, [sp, #60]
     b84:	b	9d8 <grub_ufs_find_file+0x100>
     b88:	nop
     b8c:	b	928 <grub_ufs_find_file+0x50>
     b90:	nop
     b94:	b	b9c <grub_ufs_find_file+0x2c4>
     b98:	nop
     b9c:	ldr	x0, [sp, #48]
     ba0:	bl	0 <grub_free>
     ba4:	adrp	x0, 0 <grub_fs_register>
     ba8:	add	x0, x0, #0x0
     bac:	ldr	x0, [x0]
     bb0:	ldr	w0, [x0]
     bb4:	ldp	x29, x30, [sp], #80
     bb8:	ret
     bbc:	nop
	...

0000000000000bd8 <grub_ufs_mount>:
     bd8:	stp	x29, x30, [sp, #-48]!
     bdc:	mov	x29, sp
     be0:	str	x0, [sp, #24]
     be4:	adrp	x0, 0 <grub_fs_register>
     be8:	add	x0, x0, #0x0
     bec:	ldr	x0, [x0]
     bf0:	str	x0, [sp, #40]
     bf4:	mov	x0, #0x5f8                 	// #1528
     bf8:	bl	0 <grub_malloc>
     bfc:	str	x0, [sp, #32]
     c00:	ldr	x0, [sp, #32]
     c04:	cmp	x0, #0x0
     c08:	b.ne	d14 <grub_ufs_mount+0x13c>  // b.any
     c0c:	mov	x0, #0x0                   	// #0
     c10:	b	d7c <grub_ufs_mount+0x1a4>
     c14:	ldr	x0, [sp, #40]
     c18:	ldr	w0, [x0]
     c1c:	sxtw	x0, w0
     c20:	ldr	x1, [sp, #32]
     c24:	mov	x4, x1
     c28:	mov	x3, #0x560                 	// #1376
     c2c:	mov	x2, #0x0                   	// #0
     c30:	mov	x1, x0
     c34:	ldr	x0, [sp, #24]
     c38:	bl	0 <grub_disk_read>
     c3c:	adrp	x0, 0 <grub_fs_register>
     c40:	add	x0, x0, #0x0
     c44:	ldr	x0, [x0]
     c48:	ldr	w0, [x0]
     c4c:	cmp	w0, #0x0
     c50:	b.ne	d28 <grub_ufs_mount+0x150>  // b.any
     c54:	ldr	x0, [sp, #32]
     c58:	ldr	w1, [x0, #1372]
     c5c:	mov	w0, #0x1954                	// #6484
     c60:	movk	w0, #0x1, lsl #16
     c64:	cmp	w1, w0
     c68:	b.ne	d08 <grub_ufs_mount+0x130>  // b.any
     c6c:	ldr	x0, [sp, #32]
     c70:	ldr	w0, [x0, #48]
     c74:	cmp	w0, #0x0
     c78:	b.eq	d08 <grub_ufs_mount+0x130>  // b.none
     c7c:	ldr	x0, [sp, #32]
     c80:	ldr	w1, [x0, #48]
     c84:	ldr	x0, [sp, #32]
     c88:	ldr	w0, [x0, #48]
     c8c:	sub	w0, w0, #0x1
     c90:	and	w0, w1, w0
     c94:	cmp	w0, #0x0
     c98:	b.ne	d08 <grub_ufs_mount+0x130>  // b.any
     c9c:	ldr	x0, [sp, #32]
     ca0:	ldr	w0, [x0, #184]
     ca4:	cmp	w0, #0x0
     ca8:	b.eq	d08 <grub_ufs_mount+0x130>  // b.none
     cac:	ldr	x0, [sp, #32]
     cb0:	str	wzr, [x0, #1520]
     cb4:	b	ccc <grub_ufs_mount+0xf4>
     cb8:	ldr	x0, [sp, #32]
     cbc:	ldr	w0, [x0, #1520]
     cc0:	add	w1, w0, #0x1
     cc4:	ldr	x0, [sp, #32]
     cc8:	str	w1, [x0, #1520]
     ccc:	ldr	x0, [sp, #32]
     cd0:	ldr	w0, [x0, #1520]
     cd4:	mov	w1, #0x1                   	// #1
     cd8:	lsl	w0, w1, w0
     cdc:	ldr	x1, [sp, #32]
     ce0:	ldr	w1, [x1, #48]
     ce4:	cmp	w0, w1
     ce8:	b.cc	cb8 <grub_ufs_mount+0xe0>  // b.lo, b.ul, b.last
     cec:	ldr	x0, [sp, #32]
     cf0:	ldr	x1, [sp, #24]
     cf4:	str	x1, [x0, #1376]
     cf8:	ldr	x0, [sp, #32]
     cfc:	str	wzr, [x0, #1516]
     d00:	ldr	x0, [sp, #32]
     d04:	b	d7c <grub_ufs_mount+0x1a4>
     d08:	ldr	x0, [sp, #40]
     d0c:	add	x0, x0, #0x4
     d10:	str	x0, [sp, #40]
     d14:	ldr	x0, [sp, #40]
     d18:	ldr	w0, [x0]
     d1c:	cmn	w0, #0x1
     d20:	b.ne	c14 <grub_ufs_mount+0x3c>  // b.any
     d24:	b	d2c <grub_ufs_mount+0x154>
     d28:	nop
     d2c:	adrp	x0, 0 <grub_fs_register>
     d30:	add	x0, x0, #0x0
     d34:	ldr	x0, [x0]
     d38:	ldr	w0, [x0]
     d3c:	cmp	w0, #0x0
     d40:	b.eq	d5c <grub_ufs_mount+0x184>  // b.none
     d44:	adrp	x0, 0 <grub_fs_register>
     d48:	add	x0, x0, #0x0
     d4c:	ldr	x0, [x0]
     d50:	ldr	w0, [x0]
     d54:	cmp	w0, #0xb
     d58:	b.ne	d70 <grub_ufs_mount+0x198>  // b.any
     d5c:	adrp	x0, 0 <grub_fs_register>
     d60:	add	x0, x0, #0x0
     d64:	ldr	x1, [x0]
     d68:	mov	w0, #0x9                   	// #9
     d6c:	bl	0 <grub_error>
     d70:	ldr	x0, [sp, #32]
     d74:	bl	0 <grub_free>
     d78:	mov	x0, #0x0                   	// #0
     d7c:	ldp	x29, x30, [sp], #48
     d80:	ret
     d84:	nop
	...

0000000000000da0 <grub_ufs_dir>:
     da0:	stp	x29, x30, [sp, #-240]!
     da4:	mov	x29, sp
     da8:	str	x0, [sp, #40]
     dac:	str	x1, [sp, #32]
     db0:	str	x2, [sp, #24]
     db4:	str	x3, [sp, #16]
     db8:	str	wzr, [sp, #236]
     dbc:	ldr	x0, [sp, #40]
     dc0:	ldr	x0, [x0]
     dc4:	bl	bd8 <grub_ufs_mount>
     dc8:	str	x0, [sp, #224]
     dcc:	ldr	x0, [sp, #224]
     dd0:	cmp	x0, #0x0
     dd4:	b.ne	dec <grub_ufs_dir+0x4c>  // b.any
     dd8:	adrp	x0, 0 <grub_fs_register>
     ddc:	add	x0, x0, #0x0
     de0:	ldr	x0, [x0]
     de4:	ldr	w0, [x0]
     de8:	b	105c <grub_ufs_dir+0x2bc>
     dec:	mov	x2, #0x0                   	// #0
     df0:	mov	w1, #0x2                   	// #2
     df4:	ldr	x0, [sp, #224]
     df8:	bl	5f8 <grub_ufs_read_inode>
     dfc:	adrp	x0, 0 <grub_fs_register>
     e00:	add	x0, x0, #0x0
     e04:	ldr	x0, [x0]
     e08:	ldr	w0, [x0]
     e0c:	cmp	w0, #0x0
     e10:	b.eq	e28 <grub_ufs_dir+0x88>  // b.none
     e14:	adrp	x0, 0 <grub_fs_register>
     e18:	add	x0, x0, #0x0
     e1c:	ldr	x0, [x0]
     e20:	ldr	w0, [x0]
     e24:	b	105c <grub_ufs_dir+0x2bc>
     e28:	ldr	x0, [sp, #32]
     e2c:	cmp	x0, #0x0
     e30:	b.eq	e44 <grub_ufs_dir+0xa4>  // b.none
     e34:	ldr	x0, [sp, #32]
     e38:	ldrb	w0, [x0]
     e3c:	cmp	w0, #0x2f
     e40:	b.eq	e70 <grub_ufs_dir+0xd0>  // b.none
     e44:	ldr	x2, [sp, #32]
     e48:	adrp	x0, 0 <grub_fs_register>
     e4c:	add	x0, x0, #0x0
     e50:	ldr	x1, [x0]
     e54:	mov	w0, #0x7                   	// #7
     e58:	bl	0 <grub_error>
     e5c:	adrp	x0, 0 <grub_fs_register>
     e60:	add	x0, x0, #0x0
     e64:	ldr	x0, [x0]
     e68:	ldr	w0, [x0]
     e6c:	b	105c <grub_ufs_dir+0x2bc>
     e70:	ldr	x1, [sp, #32]
     e74:	ldr	x0, [sp, #224]
     e78:	bl	8d8 <grub_ufs_find_file>
     e7c:	adrp	x0, 0 <grub_fs_register>
     e80:	add	x0, x0, #0x0
     e84:	ldr	x0, [x0]
     e88:	ldr	w0, [x0]
     e8c:	cmp	w0, #0x0
     e90:	b.ne	1028 <grub_ufs_dir+0x288>  // b.any
     e94:	ldr	x0, [sp, #224]
     e98:	ldrh	w0, [x0, #1384]
     e9c:	and	w0, w0, #0xe000
     ea0:	cmp	w0, #0x4, lsl #12
     ea4:	b.eq	1010 <grub_ufs_dir+0x270>  // b.none
     ea8:	adrp	x0, 0 <grub_fs_register>
     eac:	add	x0, x0, #0x0
     eb0:	ldr	x1, [x0]
     eb4:	mov	w0, #0x4                   	// #4
     eb8:	bl	0 <grub_error>
     ebc:	b	1044 <grub_ufs_dir+0x2a4>
     ec0:	ldr	w0, [sp, #236]
     ec4:	add	x1, sp, #0xc8
     ec8:	mov	x5, x1
     ecc:	mov	x4, #0x8                   	// #8
     ed0:	mov	x3, x0
     ed4:	mov	x2, #0x0                   	// #0
     ed8:	mov	x1, #0x0                   	// #0
     edc:	ldr	x0, [sp, #224]
     ee0:	bl	380 <grub_ufs_read_file>
     ee4:	cmp	x0, #0x0
     ee8:	b.lt	1030 <grub_ufs_dir+0x290>  // b.tstop
     eec:	ldrh	w0, [sp, #204]
     ef0:	cmp	w0, #0x0
     ef4:	b.eq	1038 <grub_ufs_dir+0x298>  // b.none
     ef8:	ldrh	w0, [sp, #206]
     efc:	str	w0, [sp, #220]
     f00:	ldr	w0, [sp, #220]
     f04:	add	w0, w0, #0x1
     f08:	sxtw	x0, w0
     f0c:	bl	0 <grub_malloc>
     f10:	str	x0, [sp, #208]
     f14:	ldr	x0, [sp, #208]
     f18:	cmp	x0, #0x0
     f1c:	b.eq	1040 <grub_ufs_dir+0x2a0>  // b.none
     f20:	add	x0, sp, #0xb8
     f24:	mov	x2, #0x10                  	// #16
     f28:	mov	w1, #0x0                   	// #0
     f2c:	bl	0 <grub_memset>
     f30:	ldr	w0, [sp, #236]
     f34:	add	x0, x0, #0x8
     f38:	ldrsw	x1, [sp, #220]
     f3c:	ldr	x5, [sp, #208]
     f40:	mov	x4, x1
     f44:	mov	x3, x0
     f48:	mov	x2, #0x0                   	// #0
     f4c:	mov	x1, #0x0                   	// #0
     f50:	ldr	x0, [sp, #224]
     f54:	bl	380 <grub_ufs_read_file>
     f58:	cmp	x0, #0x0
     f5c:	b.ge	f6c <grub_ufs_dir+0x1cc>  // b.tcont
     f60:	ldr	x0, [sp, #208]
     f64:	bl	0 <grub_free>
     f68:	b	1044 <grub_ufs_dir+0x2a4>
     f6c:	ldrsw	x0, [sp, #220]
     f70:	ldr	x1, [sp, #208]
     f74:	add	x0, x1, x0
     f78:	strb	wzr, [x0]
     f7c:	ldr	w0, [sp, #200]
     f80:	mov	w1, w0
     f84:	add	x0, sp, #0x38
     f88:	mov	x2, x0
     f8c:	ldr	x0, [sp, #224]
     f90:	bl	5f8 <grub_ufs_read_inode>
     f94:	ldrh	w0, [sp, #56]
     f98:	and	w0, w0, #0xe000
     f9c:	cmp	w0, #0x4, lsl #12
     fa0:	cset	w0, eq  // eq = none
     fa4:	and	w1, w0, #0xff
     fa8:	ldrb	w0, [sp, #184]
     fac:	bfxil	w0, w1, #0, #1
     fb0:	strb	w0, [sp, #184]
     fb4:	ldr	w0, [sp, #80]
     fb8:	str	w0, [sp, #188]
     fbc:	ldrb	w0, [sp, #184]
     fc0:	orr	w0, w0, #0x2
     fc4:	strb	w0, [sp, #184]
     fc8:	add	x0, sp, #0xb8
     fcc:	ldr	x3, [sp, #24]
     fd0:	ldr	x2, [sp, #16]
     fd4:	mov	x1, x0
     fd8:	ldr	x0, [sp, #208]
     fdc:	blr	x3
     fe0:	cmp	w0, #0x0
     fe4:	b.eq	ff4 <grub_ufs_dir+0x254>  // b.none
     fe8:	ldr	x0, [sp, #208]
     fec:	bl	0 <grub_free>
     ff0:	b	1044 <grub_ufs_dir+0x2a4>
     ff4:	ldr	x0, [sp, #208]
     ff8:	bl	0 <grub_free>
     ffc:	ldrh	w0, [sp, #204]
    1000:	mov	w1, w0
    1004:	ldr	w0, [sp, #236]
    1008:	add	w0, w0, w1
    100c:	str	w0, [sp, #236]
    1010:	ldr	w1, [sp, #236]
    1014:	ldr	x0, [sp, #224]
    1018:	ldr	x0, [x0, #1392]
    101c:	cmp	x1, x0
    1020:	b.cc	ec0 <grub_ufs_dir+0x120>  // b.lo, b.ul, b.last
    1024:	b	1044 <grub_ufs_dir+0x2a4>
    1028:	nop
    102c:	b	1044 <grub_ufs_dir+0x2a4>
    1030:	nop
    1034:	b	1044 <grub_ufs_dir+0x2a4>
    1038:	nop
    103c:	b	1044 <grub_ufs_dir+0x2a4>
    1040:	nop
    1044:	ldr	x0, [sp, #224]
    1048:	bl	0 <grub_free>
    104c:	adrp	x0, 0 <grub_fs_register>
    1050:	add	x0, x0, #0x0
    1054:	ldr	x0, [x0]
    1058:	ldr	w0, [x0]
    105c:	ldp	x29, x30, [sp], #240
    1060:	ret
    1064:	nop
	...

0000000000001080 <grub_ufs_open>:
    1080:	stp	x29, x30, [sp, #-48]!
    1084:	mov	x29, sp
    1088:	str	x0, [sp, #24]
    108c:	str	x1, [sp, #16]
    1090:	ldr	x0, [sp, #24]
    1094:	ldr	x0, [x0, #8]
    1098:	ldr	x0, [x0]
    109c:	bl	bd8 <grub_ufs_mount>
    10a0:	str	x0, [sp, #40]
    10a4:	ldr	x0, [sp, #40]
    10a8:	cmp	x0, #0x0
    10ac:	b.ne	10c4 <grub_ufs_open+0x44>  // b.any
    10b0:	adrp	x0, 0 <grub_fs_register>
    10b4:	add	x0, x0, #0x0
    10b8:	ldr	x0, [x0]
    10bc:	ldr	w0, [x0]
    10c0:	b	11b0 <grub_ufs_open+0x130>
    10c4:	mov	x2, #0x0                   	// #0
    10c8:	mov	w1, #0x2                   	// #2
    10cc:	ldr	x0, [sp, #40]
    10d0:	bl	5f8 <grub_ufs_read_inode>
    10d4:	adrp	x0, 0 <grub_fs_register>
    10d8:	add	x0, x0, #0x0
    10dc:	ldr	x0, [x0]
    10e0:	ldr	w0, [x0]
    10e4:	cmp	w0, #0x0
    10e8:	b.eq	1108 <grub_ufs_open+0x88>  // b.none
    10ec:	ldr	x0, [sp, #40]
    10f0:	bl	0 <grub_free>
    10f4:	adrp	x0, 0 <grub_fs_register>
    10f8:	add	x0, x0, #0x0
    10fc:	ldr	x0, [x0]
    1100:	ldr	w0, [x0]
    1104:	b	11b0 <grub_ufs_open+0x130>
    1108:	ldr	x0, [sp, #16]
    110c:	cmp	x0, #0x0
    1110:	b.eq	1124 <grub_ufs_open+0xa4>  // b.none
    1114:	ldr	x0, [sp, #16]
    1118:	ldrb	w0, [x0]
    111c:	cmp	w0, #0x2f
    1120:	b.eq	1150 <grub_ufs_open+0xd0>  // b.none
    1124:	ldr	x2, [sp, #16]
    1128:	adrp	x0, 0 <grub_fs_register>
    112c:	add	x0, x0, #0x0
    1130:	ldr	x1, [x0]
    1134:	mov	w0, #0x7                   	// #7
    1138:	bl	0 <grub_error>
    113c:	adrp	x0, 0 <grub_fs_register>
    1140:	add	x0, x0, #0x0
    1144:	ldr	x0, [x0]
    1148:	ldr	w0, [x0]
    114c:	b	11b0 <grub_ufs_open+0x130>
    1150:	ldr	x1, [sp, #16]
    1154:	ldr	x0, [sp, #40]
    1158:	bl	8d8 <grub_ufs_find_file>
    115c:	adrp	x0, 0 <grub_fs_register>
    1160:	add	x0, x0, #0x0
    1164:	ldr	x0, [x0]
    1168:	ldr	w0, [x0]
    116c:	cmp	w0, #0x0
    1170:	b.eq	1190 <grub_ufs_open+0x110>  // b.none
    1174:	ldr	x0, [sp, #40]
    1178:	bl	0 <grub_free>
    117c:	adrp	x0, 0 <grub_fs_register>
    1180:	add	x0, x0, #0x0
    1184:	ldr	x0, [x0]
    1188:	ldr	w0, [x0]
    118c:	b	11b0 <grub_ufs_open+0x130>
    1190:	ldr	x0, [sp, #24]
    1194:	ldr	x1, [sp, #40]
    1198:	str	x1, [x0, #80]
    119c:	ldr	x0, [sp, #40]
    11a0:	ldr	x1, [x0, #1392]
    11a4:	ldr	x0, [sp, #24]
    11a8:	str	x1, [x0, #64]
    11ac:	mov	w0, #0x0                   	// #0
    11b0:	ldp	x29, x30, [sp], #48
    11b4:	ret
	...

00000000000011c8 <grub_ufs_read>:
    11c8:	stp	x29, x30, [sp, #-64]!
    11cc:	mov	x29, sp
    11d0:	str	x0, [sp, #40]
    11d4:	str	x1, [sp, #32]
    11d8:	str	x2, [sp, #24]
    11dc:	ldr	x0, [sp, #40]
    11e0:	ldr	x0, [x0, #80]
    11e4:	str	x0, [sp, #56]
    11e8:	ldr	x0, [sp, #40]
    11ec:	ldr	x1, [x0, #88]
    11f0:	ldr	x0, [sp, #40]
    11f4:	ldr	x2, [x0, #96]
    11f8:	ldr	x0, [sp, #40]
    11fc:	ldr	x0, [x0, #24]
    1200:	ldr	x5, [sp, #32]
    1204:	ldr	x4, [sp, #24]
    1208:	mov	x3, x0
    120c:	ldr	x0, [sp, #56]
    1210:	bl	380 <grub_ufs_read_file>
    1214:	ldp	x29, x30, [sp], #64
    1218:	ret

000000000000121c <grub_ufs_close>:
    121c:	stp	x29, x30, [sp, #-32]!
    1220:	mov	x29, sp
    1224:	str	x0, [sp, #24]
    1228:	ldr	x0, [sp, #24]
    122c:	ldr	x0, [x0, #80]
    1230:	bl	0 <grub_free>
    1234:	mov	w0, #0x0                   	// #0
    1238:	ldp	x29, x30, [sp], #32
    123c:	ret

0000000000001240 <grub_ufs_label>:
    1240:	stp	x29, x30, [sp, #-48]!
    1244:	mov	x29, sp
    1248:	str	x0, [sp, #24]
    124c:	str	x1, [sp, #16]
    1250:	str	xzr, [sp, #40]
    1254:	adrp	x0, 0 <grub_fs_register>
    1258:	add	x0, x0, #0x0
    125c:	ldr	x0, [x0]
    1260:	ldr	x0, [x0]
    1264:	bl	0 <grub_dl_ref>
    1268:	ldr	x0, [sp, #16]
    126c:	str	xzr, [x0]
    1270:	ldr	x0, [sp, #24]
    1274:	ldr	x0, [x0]
    1278:	bl	bd8 <grub_ufs_mount>
    127c:	str	x0, [sp, #40]
    1280:	ldr	x0, [sp, #40]
    1284:	cmp	x0, #0x0
    1288:	b.eq	12a4 <grub_ufs_label+0x64>  // b.none
    128c:	ldr	x0, [sp, #40]
    1290:	add	x0, x0, #0x2a8
    1294:	bl	0 <grub_strdup>
    1298:	mov	x1, x0
    129c:	ldr	x0, [sp, #16]
    12a0:	str	x1, [x0]
    12a4:	adrp	x0, 0 <grub_fs_register>
    12a8:	add	x0, x0, #0x0
    12ac:	ldr	x0, [x0]
    12b0:	ldr	x0, [x0]
    12b4:	bl	0 <grub_dl_unref>
    12b8:	ldr	x0, [sp, #40]
    12bc:	bl	0 <grub_free>
    12c0:	adrp	x0, 0 <grub_fs_register>
    12c4:	add	x0, x0, #0x0
    12c8:	ldr	x0, [x0]
    12cc:	ldr	w0, [x0]
    12d0:	ldp	x29, x30, [sp], #48
    12d4:	ret
	...

00000000000012e8 <grub_ufs_uuid>:
    12e8:	stp	x29, x30, [sp, #-48]!
    12ec:	mov	x29, sp
    12f0:	str	x0, [sp, #24]
    12f4:	str	x1, [sp, #16]
    12f8:	ldr	x0, [sp, #24]
    12fc:	ldr	x0, [x0]
    1300:	str	x0, [sp, #40]
    1304:	adrp	x0, 0 <grub_fs_register>
    1308:	add	x0, x0, #0x0
    130c:	ldr	x0, [x0]
    1310:	ldr	x0, [x0]
    1314:	bl	0 <grub_dl_ref>
    1318:	ldr	x0, [sp, #40]
    131c:	bl	bd8 <grub_ufs_mount>
    1320:	str	x0, [sp, #32]
    1324:	ldr	x0, [sp, #32]
    1328:	cmp	x0, #0x0
    132c:	b.eq	1384 <grub_ufs_uuid+0x9c>  // b.none
    1330:	ldr	x0, [sp, #32]
    1334:	ldr	w0, [x0, #144]
    1338:	cmp	w0, #0x0
    133c:	b.ne	1350 <grub_ufs_uuid+0x68>  // b.any
    1340:	ldr	x0, [sp, #32]
    1344:	ldr	w0, [x0, #148]
    1348:	cmp	w0, #0x0
    134c:	b.eq	1384 <grub_ufs_uuid+0x9c>  // b.none
    1350:	ldr	x0, [sp, #32]
    1354:	ldr	w1, [x0, #144]
    1358:	ldr	x0, [sp, #32]
    135c:	ldr	w0, [x0, #148]
    1360:	mov	w2, w0
    1364:	adrp	x0, 0 <grub_fs_register>
    1368:	add	x0, x0, #0x0
    136c:	ldr	x0, [x0]
    1370:	bl	0 <grub_xasprintf>
    1374:	mov	x1, x0
    1378:	ldr	x0, [sp, #16]
    137c:	str	x1, [x0]
    1380:	b	138c <grub_ufs_uuid+0xa4>
    1384:	ldr	x0, [sp, #16]
    1388:	str	xzr, [x0]
    138c:	adrp	x0, 0 <grub_fs_register>
    1390:	add	x0, x0, #0x0
    1394:	ldr	x0, [x0]
    1398:	ldr	x0, [x0]
    139c:	bl	0 <grub_dl_unref>
    13a0:	ldr	x0, [sp, #32]
    13a4:	bl	0 <grub_free>
    13a8:	adrp	x0, 0 <grub_fs_register>
    13ac:	add	x0, x0, #0x0
    13b0:	ldr	x0, [x0]
    13b4:	ldr	w0, [x0]
    13b8:	ldp	x29, x30, [sp], #48
    13bc:	ret
	...

00000000000013d8 <grub_ufs_mtime>:
    13d8:	stp	x29, x30, [sp, #-48]!
    13dc:	mov	x29, sp
    13e0:	str	x0, [sp, #24]
    13e4:	str	x1, [sp, #16]
    13e8:	str	xzr, [sp, #40]
    13ec:	adrp	x0, 0 <grub_fs_register>
    13f0:	add	x0, x0, #0x0
    13f4:	ldr	x0, [x0]
    13f8:	ldr	x0, [x0]
    13fc:	bl	0 <grub_dl_ref>
    1400:	ldr	x0, [sp, #24]
    1404:	ldr	x0, [x0]
    1408:	bl	bd8 <grub_ufs_mount>
    140c:	str	x0, [sp, #40]
    1410:	ldr	x0, [sp, #40]
    1414:	cmp	x0, #0x0
    1418:	b.ne	1428 <grub_ufs_mtime+0x50>  // b.any
    141c:	ldr	x0, [sp, #16]
    1420:	str	wzr, [x0]
    1424:	b	143c <grub_ufs_mtime+0x64>
    1428:	ldr	x0, [sp, #40]
    142c:	ldr	w0, [x0, #32]
    1430:	mov	w1, w0
    1434:	ldr	x0, [sp, #16]
    1438:	str	w1, [x0]
    143c:	adrp	x0, 0 <grub_fs_register>
    1440:	add	x0, x0, #0x0
    1444:	ldr	x0, [x0]
    1448:	ldr	x0, [x0]
    144c:	bl	0 <grub_dl_unref>
    1450:	ldr	x0, [sp, #40]
    1454:	bl	0 <grub_free>
    1458:	adrp	x0, 0 <grub_fs_register>
    145c:	add	x0, x0, #0x0
    1460:	ldr	x0, [x0]
    1464:	ldr	w0, [x0]
    1468:	ldp	x29, x30, [sp], #48
    146c:	ret
	...

0000000000001480 <grub_mod_init>:
    1480:	stp	x29, x30, [sp, #-32]!
    1484:	mov	x29, sp
    1488:	str	x0, [sp, #24]
    148c:	adrp	x0, 0 <grub_fs_register>
    1490:	add	x0, x0, #0x0
    1494:	ldr	x0, [x0]
    1498:	bl	0 <grub_fs_register>
    149c:	adrp	x0, 0 <grub_fs_register>
    14a0:	add	x0, x0, #0x0
    14a4:	ldr	x0, [x0]
    14a8:	ldr	x1, [sp, #24]
    14ac:	str	x1, [x0]
    14b0:	nop
    14b4:	ldp	x29, x30, [sp], #32
    14b8:	ret
    14bc:	nop
	...

00000000000014d0 <grub_mod_fini>:
    14d0:	stp	x29, x30, [sp, #-16]!
    14d4:	mov	x29, sp
    14d8:	adrp	x0, 0 <grub_fs_register>
    14dc:	add	x0, x0, #0x0
    14e0:	ldr	x0, [x0]
    14e4:	bl	38 <grub_fs_unregister>
    14e8:	nop
    14ec:	ldp	x29, x30, [sp], #16
    14f0:	ret
    14f4:	nop
	...
