
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//threads.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002110 <_init>:
    2110:	stp	x29, x30, [sp, #-16]!
    2114:	mov	x29, sp
    2118:	bl	2750 <call_weak_fn>
    211c:	ldp	x29, x30, [sp], #16
    2120:	ret

Disassembly of section .plt:

0000000000002130 <.plt>:
    2130:	stp	x16, x30, [sp, #-16]!
    2134:	adrp	x16, 1b000 <__FRAME_END__+0xf990>
    2138:	ldr	x17, [x16, #4088]
    213c:	add	x16, x16, #0xff8
    2140:	br	x17
    2144:	nop
    2148:	nop
    214c:	nop

0000000000002150 <memcpy@plt>:
    2150:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16]
    2158:	add	x16, x16, #0x0
    215c:	br	x17

0000000000002160 <pthread_sigmask@plt>:
    2160:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #8]
    2168:	add	x16, x16, #0x8
    216c:	br	x17

0000000000002170 <Perl_sv_2iv_flags@plt>:
    2170:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #16]
    2178:	add	x16, x16, #0x10
    217c:	br	x17

0000000000002180 <Perl_sv_2bool_flags@plt>:
    2180:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #24]
    2188:	add	x16, x16, #0x18
    218c:	br	x17

0000000000002190 <strlen@plt>:
    2190:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #32]
    2198:	add	x16, x16, #0x20
    219c:	br	x17

00000000000021a0 <Perl_looks_like_number@plt>:
    21a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #40]
    21a8:	add	x16, x16, #0x28
    21ac:	br	x17

00000000000021b0 <Perl_ptr_table_store@plt>:
    21b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    21b4:	ldr	x17, [x16, #48]
    21b8:	add	x16, x16, #0x30
    21bc:	br	x17

00000000000021c0 <Perl_PerlIO_fileno@plt>:
    21c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    21c4:	ldr	x17, [x16, #56]
    21c8:	add	x16, x16, #0x38
    21cc:	br	x17

00000000000021d0 <Perl_sv_2uv_flags@plt>:
    21d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    21d4:	ldr	x17, [x16, #64]
    21d8:	add	x16, x16, #0x40
    21dc:	br	x17

00000000000021e0 <Perl_stack_grow@plt>:
    21e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    21e4:	ldr	x17, [x16, #72]
    21e8:	add	x16, x16, #0x48
    21ec:	br	x17

00000000000021f0 <Perl_clone_params_new@plt>:
    21f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    21f4:	ldr	x17, [x16, #80]
    21f8:	add	x16, x16, #0x50
    21fc:	br	x17

0000000000002200 <__sigsetjmp@plt>:
    2200:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16, #88]
    2208:	add	x16, x16, #0x58
    220c:	br	x17

0000000000002210 <__cxa_finalize@plt>:
    2210:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #96]
    2218:	add	x16, x16, #0x60
    221c:	br	x17

0000000000002220 <Perl_sv_magicext@plt>:
    2220:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #104]
    2228:	add	x16, x16, #0x68
    222c:	br	x17

0000000000002230 <pthread_attr_init@plt>:
    2230:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #112]
    2238:	add	x16, x16, #0x70
    223c:	br	x17

0000000000002240 <Perl_av_len@plt>:
    2240:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #120]
    2248:	add	x16, x16, #0x78
    224c:	br	x17

0000000000002250 <Perl_pop_scope@plt>:
    2250:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #128]
    2258:	add	x16, x16, #0x80
    225c:	br	x17

0000000000002260 <Perl_av_shift@plt>:
    2260:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #136]
    2268:	add	x16, x16, #0x88
    226c:	br	x17

0000000000002270 <Perl_thread_locale_term@plt>:
    2270:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #144]
    2278:	add	x16, x16, #0x90
    227c:	br	x17

0000000000002280 <Perl_my_cxt_init@plt>:
    2280:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #152]
    2288:	add	x16, x16, #0x98
    228c:	br	x17

0000000000002290 <perl_clone@plt>:
    2290:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #160]
    2298:	add	x16, x16, #0xa0
    229c:	br	x17

00000000000022a0 <Perl_newSV@plt>:
    22a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #168]
    22a8:	add	x16, x16, #0xa8
    22ac:	br	x17

00000000000022b0 <sigfillset@plt>:
    22b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #176]
    22b8:	add	x16, x16, #0xb0
    22bc:	br	x17

00000000000022c0 <Perl_ptr_table_free@plt>:
    22c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #184]
    22c8:	add	x16, x16, #0xb8
    22cc:	br	x17

00000000000022d0 <perl_free@plt>:
    22d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #192]
    22d8:	add	x16, x16, #0xc0
    22dc:	br	x17

00000000000022e0 <malloc@plt>:
    22e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #200]
    22e8:	add	x16, x16, #0xc8
    22ec:	br	x17

00000000000022f0 <Perl_sv_upgrade@plt>:
    22f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #208]
    22f8:	add	x16, x16, #0xd0
    22fc:	br	x17

0000000000002300 <Perl_sv_dup_inc@plt>:
    2300:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #216]
    2308:	add	x16, x16, #0xd8
    230c:	br	x17

0000000000002310 <perl_destruct@plt>:
    2310:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #224]
    2318:	add	x16, x16, #0xe0
    231c:	br	x17

0000000000002320 <Perl_av_store@plt>:
    2320:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #232]
    2328:	add	x16, x16, #0xe8
    232c:	br	x17

0000000000002330 <Perl_sv_bless@plt>:
    2330:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #240]
    2338:	add	x16, x16, #0xf0
    233c:	br	x17

0000000000002340 <Perl_warn@plt>:
    2340:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #248]
    2348:	add	x16, x16, #0xf8
    234c:	br	x17

0000000000002350 <pthread_detach@plt>:
    2350:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #256]
    2358:	add	x16, x16, #0x100
    235c:	br	x17

0000000000002360 <memset@plt>:
    2360:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #264]
    2368:	add	x16, x16, #0x108
    236c:	br	x17

0000000000002370 <Perl_sv_2pv_flags@plt>:
    2370:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #272]
    2378:	add	x16, x16, #0x110
    237c:	br	x17

0000000000002380 <Perl_xs_boot_epilog@plt>:
    2380:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #280]
    2388:	add	x16, x16, #0x118
    238c:	br	x17

0000000000002390 <Perl_ptr_table_new@plt>:
    2390:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #288]
    2398:	add	x16, x16, #0x120
    239c:	br	x17

00000000000023a0 <Perl_my_exit@plt>:
    23a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #296]
    23a8:	add	x16, x16, #0x128
    23ac:	br	x17

00000000000023b0 <Perl_sv_unmagic@plt>:
    23b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #304]
    23b8:	add	x16, x16, #0x130
    23bc:	br	x17

00000000000023c0 <pthread_attr_setscope@plt>:
    23c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #312]
    23c8:	add	x16, x16, #0x138
    23cc:	br	x17

00000000000023d0 <pthread_attr_setdetachstate@plt>:
    23d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #320]
    23d8:	add	x16, x16, #0x140
    23dc:	br	x17

00000000000023e0 <pthread_attr_setstacksize@plt>:
    23e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #328]
    23e8:	add	x16, x16, #0x148
    23ec:	br	x17

00000000000023f0 <Perl_sv_dup@plt>:
    23f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #336]
    23f8:	add	x16, x16, #0x150
    23fc:	br	x17

0000000000002400 <Perl_ckwarn_d@plt>:
    2400:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #344]
    2408:	add	x16, x16, #0x158
    240c:	br	x17

0000000000002410 <Perl_PerlIO_flush@plt>:
    2410:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #352]
    2418:	add	x16, x16, #0x160
    241c:	br	x17

0000000000002420 <__stack_chk_fail@plt>:
    2420:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #360]
    2428:	add	x16, x16, #0x168
    242c:	br	x17

0000000000002430 <Perl_sv_isobject@plt>:
    2430:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #368]
    2438:	add	x16, x16, #0x170
    243c:	br	x17

0000000000002440 <pthread_mutex_init@plt>:
    2440:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #376]
    2448:	add	x16, x16, #0x178
    244c:	br	x17

0000000000002450 <Perl_sv_setuv@plt>:
    2450:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #384]
    2458:	add	x16, x16, #0x180
    245c:	br	x17

0000000000002460 <pthread_create@plt>:
    2460:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #392]
    2468:	add	x16, x16, #0x188
    246c:	br	x17

0000000000002470 <__gmon_start__@plt>:
    2470:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #400]
    2478:	add	x16, x16, #0x190
    247c:	br	x17

0000000000002480 <write@plt>:
    2480:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #408]
    2488:	add	x16, x16, #0x198
    248c:	br	x17

0000000000002490 <pthread_join@plt>:
    2490:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #416]
    2498:	add	x16, x16, #0x1a0
    249c:	br	x17

00000000000024a0 <Perl_savetmps@plt>:
    24a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #424]
    24a8:	add	x16, x16, #0x1a8
    24ac:	br	x17

00000000000024b0 <Perl_gv_stashpv@plt>:
    24b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #432]
    24b8:	add	x16, x16, #0x1b0
    24bc:	br	x17

00000000000024c0 <Perl_mg_size@plt>:
    24c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #440]
    24c8:	add	x16, x16, #0x1b8
    24cc:	br	x17

00000000000024d0 <Perl_croak@plt>:
    24d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #448]
    24d8:	add	x16, x16, #0x1c0
    24dc:	br	x17

00000000000024e0 <Perl_save_bool@plt>:
    24e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #456]
    24e8:	add	x16, x16, #0x1c8
    24ec:	br	x17

00000000000024f0 <Perl_get_sv@plt>:
    24f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #464]
    24f8:	add	x16, x16, #0x1d0
    24fc:	br	x17

0000000000002500 <sched_yield@plt>:
    2500:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #472]
    2508:	add	x16, x16, #0x1d8
    250c:	br	x17

0000000000002510 <Perl_croak_nocontext@plt>:
    2510:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #480]
    2518:	add	x16, x16, #0x1e0
    251c:	br	x17

0000000000002520 <Perl_newXS_deffile@plt>:
    2520:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #488]
    2528:	add	x16, x16, #0x1e8
    252c:	br	x17

0000000000002530 <free@plt>:
    2530:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #496]
    2538:	add	x16, x16, #0x1f0
    253c:	br	x17

0000000000002540 <Perl_thread_locale_init@plt>:
    2540:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #504]
    2548:	add	x16, x16, #0x1f8
    254c:	br	x17

0000000000002550 <Perl_sv_2mortal@plt>:
    2550:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #512]
    2558:	add	x16, x16, #0x200
    255c:	br	x17

0000000000002560 <Perl_mg_get@plt>:
    2560:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #520]
    2568:	add	x16, x16, #0x208
    256c:	br	x17

0000000000002570 <pthread_setspecific@plt>:
    2570:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #528]
    2578:	add	x16, x16, #0x210
    257c:	br	x17

0000000000002580 <Perl_newSVuv@plt>:
    2580:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #536]
    2588:	add	x16, x16, #0x218
    258c:	br	x17

0000000000002590 <Perl_clone_params_del@plt>:
    2590:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #544]
    2598:	add	x16, x16, #0x220
    259c:	br	x17

00000000000025a0 <Perl_xs_handshake@plt>:
    25a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #552]
    25a8:	add	x16, x16, #0x228
    25ac:	br	x17

00000000000025b0 <pthread_attr_getstacksize@plt>:
    25b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #560]
    25b8:	add	x16, x16, #0x230
    25bc:	br	x17

00000000000025c0 <pthread_mutex_destroy@plt>:
    25c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #568]
    25c8:	add	x16, x16, #0x238
    25cc:	br	x17

00000000000025d0 <Perl_sv_copypv_flags@plt>:
    25d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #576]
    25d8:	add	x16, x16, #0x240
    25dc:	br	x17

00000000000025e0 <sysconf@plt>:
    25e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #584]
    25e8:	add	x16, x16, #0x248
    25ec:	br	x17

00000000000025f0 <Perl_free_tmps@plt>:
    25f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #592]
    25f8:	add	x16, x16, #0x250
    25fc:	br	x17

0000000000002600 <Perl_markstack_grow@plt>:
    2600:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #600]
    2608:	add	x16, x16, #0x258
    260c:	br	x17

0000000000002610 <Perl_hv_common_key_len@plt>:
    2610:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #608]
    2618:	add	x16, x16, #0x260
    261c:	br	x17

0000000000002620 <Perl_newSV_type@plt>:
    2620:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #616]
    2628:	add	x16, x16, #0x268
    262c:	br	x17

0000000000002630 <Perl_newSVrv@plt>:
    2630:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #624]
    2638:	add	x16, x16, #0x270
    263c:	br	x17

0000000000002640 <Perl_block_gimme@plt>:
    2640:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #632]
    2648:	add	x16, x16, #0x278
    264c:	br	x17

0000000000002650 <Perl_call_sv@plt>:
    2650:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #640]
    2658:	add	x16, x16, #0x280
    265c:	br	x17

0000000000002660 <sigdelset@plt>:
    2660:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #648]
    2668:	add	x16, x16, #0x288
    266c:	br	x17

0000000000002670 <Perl_sv_free2@plt>:
    2670:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2674:	ldr	x17, [x16, #656]
    2678:	add	x16, x16, #0x290
    267c:	br	x17

0000000000002680 <Perl_ckwarn@plt>:
    2680:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2684:	ldr	x17, [x16, #664]
    2688:	add	x16, x16, #0x298
    268c:	br	x17

0000000000002690 <Perl_push_scope@plt>:
    2690:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2694:	ldr	x17, [x16, #672]
    2698:	add	x16, x16, #0x2a0
    269c:	br	x17

00000000000026a0 <pthread_self@plt>:
    26a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    26a4:	ldr	x17, [x16, #680]
    26a8:	add	x16, x16, #0x2a8
    26ac:	br	x17

00000000000026b0 <Perl_newSViv@plt>:
    26b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    26b4:	ldr	x17, [x16, #688]
    26b8:	add	x16, x16, #0x2b0
    26bc:	br	x17

00000000000026c0 <__errno_location@plt>:
    26c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    26c4:	ldr	x17, [x16, #696]
    26c8:	add	x16, x16, #0x2b8
    26cc:	br	x17

00000000000026d0 <Perl_PerlIO_stderr@plt>:
    26d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    26d4:	ldr	x17, [x16, #704]
    26d8:	add	x16, x16, #0x2c0
    26dc:	br	x17

00000000000026e0 <Perl_whichsig_pv@plt>:
    26e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    26e4:	ldr	x17, [x16, #712]
    26e8:	add	x16, x16, #0x2c8
    26ec:	br	x17

00000000000026f0 <Perl_gv_add_by_type@plt>:
    26f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    26f4:	ldr	x17, [x16, #720]
    26f8:	add	x16, x16, #0x2d0
    26fc:	br	x17

0000000000002700 <Perl_sv_setiv@plt>:
    2700:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2704:	ldr	x17, [x16, #728]
    2708:	add	x16, x16, #0x2d8
    270c:	br	x17

0000000000002710 <Perl_newSVsv_flags@plt>:
    2710:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2714:	ldr	x17, [x16, #736]
    2718:	add	x16, x16, #0x2e0
    271c:	br	x17

0000000000002720 <pthread_mutex_lock@plt>:
    2720:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2724:	ldr	x17, [x16, #744]
    2728:	add	x16, x16, #0x2e8
    272c:	br	x17

0000000000002730 <pthread_mutex_unlock@plt>:
    2730:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2734:	ldr	x17, [x16, #752]
    2738:	add	x16, x16, #0x2f0
    273c:	br	x17

0000000000002740 <Perl_av_extend@plt>:
    2740:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2744:	ldr	x17, [x16, #760]
    2748:	add	x16, x16, #0x2f8
    274c:	br	x17

Disassembly of section .text:

0000000000002750 <call_weak_fn>:
    2750:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2754:	ldr	x0, [x0, #4040]
    2758:	cbz	x0, 2760 <call_weak_fn+0x10>
    275c:	b	2470 <__gmon_start__@plt>
    2760:	ret

0000000000002764 <deregister_tm_clones>:
    2764:	stp	x29, x30, [sp, #-32]!
    2768:	mov	x29, sp
    276c:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    2770:	add	x0, x0, #0x310
    2774:	str	x0, [sp, #24]
    2778:	ldr	x0, [sp, #24]
    277c:	str	x0, [sp, #24]
    2780:	ldr	x1, [sp, #24]
    2784:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    2788:	add	x0, x0, #0x310
    278c:	cmp	x1, x0
    2790:	b.eq	27c8 <deregister_tm_clones+0x64>  // b.none
    2794:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2798:	ldr	x0, [x0, #4008]
    279c:	str	x0, [sp, #16]
    27a0:	ldr	x0, [sp, #16]
    27a4:	str	x0, [sp, #16]
    27a8:	ldr	x0, [sp, #16]
    27ac:	cmp	x0, #0x0
    27b0:	b.eq	27cc <deregister_tm_clones+0x68>  // b.none
    27b4:	ldr	x1, [sp, #16]
    27b8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    27bc:	add	x0, x0, #0x310
    27c0:	blr	x1
    27c4:	b	27cc <deregister_tm_clones+0x68>
    27c8:	nop
    27cc:	ldp	x29, x30, [sp], #32
    27d0:	ret

00000000000027d4 <register_tm_clones>:
    27d4:	stp	x29, x30, [sp, #-48]!
    27d8:	mov	x29, sp
    27dc:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    27e0:	add	x0, x0, #0x310
    27e4:	str	x0, [sp, #40]
    27e8:	ldr	x0, [sp, #40]
    27ec:	str	x0, [sp, #40]
    27f0:	ldr	x1, [sp, #40]
    27f4:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    27f8:	add	x0, x0, #0x310
    27fc:	sub	x0, x1, x0
    2800:	asr	x0, x0, #3
    2804:	lsr	x1, x0, #63
    2808:	add	x0, x1, x0
    280c:	asr	x0, x0, #1
    2810:	str	x0, [sp, #32]
    2814:	ldr	x0, [sp, #32]
    2818:	cmp	x0, #0x0
    281c:	b.eq	2858 <register_tm_clones+0x84>  // b.none
    2820:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2824:	ldr	x0, [x0, #4064]
    2828:	str	x0, [sp, #24]
    282c:	ldr	x0, [sp, #24]
    2830:	str	x0, [sp, #24]
    2834:	ldr	x0, [sp, #24]
    2838:	cmp	x0, #0x0
    283c:	b.eq	285c <register_tm_clones+0x88>  // b.none
    2840:	ldr	x2, [sp, #24]
    2844:	ldr	x1, [sp, #32]
    2848:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    284c:	add	x0, x0, #0x310
    2850:	blr	x2
    2854:	b	285c <register_tm_clones+0x88>
    2858:	nop
    285c:	ldp	x29, x30, [sp], #48
    2860:	ret

0000000000002864 <__do_global_dtors_aux>:
    2864:	stp	x29, x30, [sp, #-16]!
    2868:	mov	x29, sp
    286c:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    2870:	add	x0, x0, #0x310
    2874:	ldrb	w0, [x0]
    2878:	and	x0, x0, #0xff
    287c:	cmp	x0, #0x0
    2880:	b.ne	28bc <__do_global_dtors_aux+0x58>  // b.any
    2884:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2888:	ldr	x0, [x0, #4016]
    288c:	cmp	x0, #0x0
    2890:	b.eq	28a4 <__do_global_dtors_aux+0x40>  // b.none
    2894:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    2898:	add	x0, x0, #0x300
    289c:	ldr	x0, [x0]
    28a0:	bl	2210 <__cxa_finalize@plt>
    28a4:	bl	2764 <deregister_tm_clones>
    28a8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    28ac:	add	x0, x0, #0x310
    28b0:	mov	w1, #0x1                   	// #1
    28b4:	strb	w1, [x0]
    28b8:	b	28c0 <__do_global_dtors_aux+0x5c>
    28bc:	nop
    28c0:	ldp	x29, x30, [sp], #16
    28c4:	ret

00000000000028c8 <frame_dummy>:
    28c8:	stp	x29, x30, [sp, #-16]!
    28cc:	mov	x29, sp
    28d0:	bl	27d4 <register_tm_clones>
    28d4:	nop
    28d8:	ldp	x29, x30, [sp], #16
    28dc:	ret

00000000000028e0 <S_POPMARK>:
    28e0:	sub	sp, sp, #0x10
    28e4:	str	x0, [sp, #8]
    28e8:	ldr	x0, [sp, #8]
    28ec:	ldr	x0, [x0, #120]
    28f0:	sub	x2, x0, #0x4
    28f4:	ldr	x1, [sp, #8]
    28f8:	str	x2, [x1, #120]
    28fc:	ldr	w0, [x0]
    2900:	add	sp, sp, #0x10
    2904:	ret

0000000000002908 <S_SvREFCNT_inc>:
    2908:	sub	sp, sp, #0x10
    290c:	str	x0, [sp, #8]
    2910:	ldr	x0, [sp, #8]
    2914:	cmp	x0, #0x0
    2918:	cset	w0, ne  // ne = any
    291c:	and	w0, w0, #0xff
    2920:	and	x0, x0, #0xff
    2924:	cmp	x0, #0x0
    2928:	b.eq	2940 <S_SvREFCNT_inc+0x38>  // b.none
    292c:	ldr	x0, [sp, #8]
    2930:	ldr	w0, [x0, #8]
    2934:	add	w1, w0, #0x1
    2938:	ldr	x0, [sp, #8]
    293c:	str	w1, [x0, #8]
    2940:	ldr	x0, [sp, #8]
    2944:	add	sp, sp, #0x10
    2948:	ret

000000000000294c <S_SvREFCNT_inc_void>:
    294c:	sub	sp, sp, #0x10
    2950:	str	x0, [sp, #8]
    2954:	ldr	x0, [sp, #8]
    2958:	cmp	x0, #0x0
    295c:	cset	w0, ne  // ne = any
    2960:	and	w0, w0, #0xff
    2964:	and	x0, x0, #0xff
    2968:	cmp	x0, #0x0
    296c:	b.eq	2984 <S_SvREFCNT_inc_void+0x38>  // b.none
    2970:	ldr	x0, [sp, #8]
    2974:	ldr	w0, [x0, #8]
    2978:	add	w1, w0, #0x1
    297c:	ldr	x0, [sp, #8]
    2980:	str	w1, [x0, #8]
    2984:	nop
    2988:	add	sp, sp, #0x10
    298c:	ret

0000000000002990 <S_SvREFCNT_dec>:
    2990:	stp	x29, x30, [sp, #-48]!
    2994:	mov	x29, sp
    2998:	str	x0, [sp, #24]
    299c:	str	x1, [sp, #16]
    29a0:	ldr	x0, [sp, #16]
    29a4:	cmp	x0, #0x0
    29a8:	cset	w0, ne  // ne = any
    29ac:	and	w0, w0, #0xff
    29b0:	and	x0, x0, #0xff
    29b4:	cmp	x0, #0x0
    29b8:	b.eq	2a08 <S_SvREFCNT_dec+0x78>  // b.none
    29bc:	ldr	x0, [sp, #16]
    29c0:	ldr	w0, [x0, #8]
    29c4:	str	w0, [sp, #44]
    29c8:	ldr	w0, [sp, #44]
    29cc:	cmp	w0, #0x1
    29d0:	cset	w0, hi  // hi = pmore
    29d4:	and	w0, w0, #0xff
    29d8:	and	x0, x0, #0xff
    29dc:	cmp	x0, #0x0
    29e0:	b.eq	29f8 <S_SvREFCNT_dec+0x68>  // b.none
    29e4:	ldr	w0, [sp, #44]
    29e8:	sub	w1, w0, #0x1
    29ec:	ldr	x0, [sp, #16]
    29f0:	str	w1, [x0, #8]
    29f4:	b	2a08 <S_SvREFCNT_dec+0x78>
    29f8:	ldr	w2, [sp, #44]
    29fc:	ldr	x1, [sp, #16]
    2a00:	ldr	x0, [sp, #24]
    2a04:	bl	2670 <Perl_sv_free2@plt>
    2a08:	nop
    2a0c:	ldp	x29, x30, [sp], #48
    2a10:	ret

0000000000002a14 <S_croak_memory_wrap>:
    2a14:	stp	x29, x30, [sp, #-16]!
    2a18:	mov	x29, sp
    2a1c:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2a20:	ldr	x1, [x0, #4056]
    2a24:	adrp	x0, a000 <XS_threads_error+0x190>
    2a28:	add	x0, x0, #0x6f8
    2a2c:	bl	2510 <Perl_croak_nocontext@plt>

0000000000002a30 <S_block_most_signals>:
    2a30:	stp	x29, x30, [sp, #-176]!
    2a34:	mov	x29, sp
    2a38:	str	x0, [sp, #24]
    2a3c:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2a40:	ldr	x0, [x0, #4048]
    2a44:	ldr	x1, [x0]
    2a48:	str	x1, [sp, #168]
    2a4c:	mov	x1, #0x0                   	// #0
    2a50:	add	x0, sp, #0x28
    2a54:	bl	22b0 <sigfillset@plt>
    2a58:	add	x0, sp, #0x28
    2a5c:	mov	w1, #0x4                   	// #4
    2a60:	bl	2660 <sigdelset@plt>
    2a64:	add	x0, sp, #0x28
    2a68:	mov	w1, #0x7                   	// #7
    2a6c:	bl	2660 <sigdelset@plt>
    2a70:	add	x0, sp, #0x28
    2a74:	mov	w1, #0xb                   	// #11
    2a78:	bl	2660 <sigdelset@plt>
    2a7c:	add	x0, sp, #0x28
    2a80:	ldr	x2, [sp, #24]
    2a84:	mov	x1, x0
    2a88:	mov	w0, #0x0                   	// #0
    2a8c:	bl	2160 <pthread_sigmask@plt>
    2a90:	mov	w1, w0
    2a94:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2a98:	ldr	x0, [x0, #4048]
    2a9c:	ldr	x2, [sp, #168]
    2aa0:	ldr	x0, [x0]
    2aa4:	eor	x0, x2, x0
    2aa8:	cmp	x0, #0x0
    2aac:	b.eq	2ab4 <S_block_most_signals+0x84>  // b.none
    2ab0:	bl	2420 <__stack_chk_fail@plt>
    2ab4:	mov	w0, w1
    2ab8:	ldp	x29, x30, [sp], #176
    2abc:	ret

0000000000002ac0 <S_set_sigmask>:
    2ac0:	stp	x29, x30, [sp, #-32]!
    2ac4:	mov	x29, sp
    2ac8:	str	x0, [sp, #24]
    2acc:	mov	x2, #0x0                   	// #0
    2ad0:	ldr	x1, [sp, #24]
    2ad4:	mov	w0, #0x2                   	// #2
    2ad8:	bl	2160 <pthread_sigmask@plt>
    2adc:	ldp	x29, x30, [sp], #32
    2ae0:	ret

0000000000002ae4 <S_ithread_set>:
    2ae4:	sub	sp, sp, #0x20
    2ae8:	str	x0, [sp, #8]
    2aec:	str	x1, [sp]
    2af0:	ldr	x0, [sp, #8]
    2af4:	ldr	x1, [x0, #3032]
    2af8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    2afc:	add	x0, x0, #0x308
    2b00:	ldr	w0, [x0]
    2b04:	sxtw	x0, w0
    2b08:	lsl	x0, x0, #3
    2b0c:	add	x0, x1, x0
    2b10:	ldr	x0, [x0]
    2b14:	str	x0, [sp, #24]
    2b18:	ldr	x0, [sp, #24]
    2b1c:	ldr	x1, [sp]
    2b20:	str	x1, [x0]
    2b24:	nop
    2b28:	add	sp, sp, #0x20
    2b2c:	ret

0000000000002b30 <S_ithread_get>:
    2b30:	sub	sp, sp, #0x20
    2b34:	str	x0, [sp, #8]
    2b38:	ldr	x0, [sp, #8]
    2b3c:	ldr	x1, [x0, #3032]
    2b40:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    2b44:	add	x0, x0, #0x308
    2b48:	ldr	w0, [x0]
    2b4c:	sxtw	x0, w0
    2b50:	lsl	x0, x0, #3
    2b54:	add	x0, x1, x0
    2b58:	ldr	x0, [x0]
    2b5c:	str	x0, [sp, #24]
    2b60:	ldr	x0, [sp, #24]
    2b64:	ldr	x0, [x0]
    2b68:	add	sp, sp, #0x20
    2b6c:	ret

0000000000002b70 <S_ithread_clear>:
    2b70:	stp	x29, x30, [sp, #-208]!
    2b74:	mov	x29, sp
    2b78:	str	x0, [sp, #24]
    2b7c:	str	x1, [sp, #16]
    2b80:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2b84:	ldr	x0, [x0, #4048]
    2b88:	ldr	x1, [x0]
    2b8c:	str	x1, [sp, #200]
    2b90:	mov	x1, #0x0                   	// #0
    2b94:	add	x0, sp, #0x48
    2b98:	bl	2a30 <S_block_most_signals>
    2b9c:	ldr	x0, [sp, #16]
    2ba0:	ldr	x0, [x0, #16]
    2ba4:	str	x0, [sp, #40]
    2ba8:	ldr	x0, [sp, #40]
    2bac:	cmp	x0, #0x0
    2bb0:	b.eq	2c78 <S_ithread_clear+0x108>  // b.none
    2bb4:	ldr	x0, [sp, #40]
    2bb8:	str	x0, [sp, #48]
    2bbc:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2bc0:	ldr	x0, [x0, #4024]
    2bc4:	ldr	w0, [x0]
    2bc8:	ldr	x1, [sp, #40]
    2bcc:	bl	2570 <pthread_setspecific@plt>
    2bd0:	str	w0, [sp, #32]
    2bd4:	ldr	w0, [sp, #32]
    2bd8:	cmp	w0, #0x0
    2bdc:	b.eq	2bfc <S_ithread_clear+0x8c>  // b.none
    2be0:	mov	w3, #0xf8                  	// #248
    2be4:	adrp	x0, a000 <XS_threads_error+0x190>
    2be8:	add	x2, x0, #0x700
    2bec:	ldr	w1, [sp, #32]
    2bf0:	adrp	x0, a000 <XS_threads_error+0x190>
    2bf4:	add	x0, x0, #0x710
    2bf8:	bl	2510 <Perl_croak_nocontext@plt>
    2bfc:	ldr	x1, [sp, #16]
    2c00:	ldr	x0, [sp, #48]
    2c04:	bl	2ae4 <S_ithread_set>
    2c08:	ldr	x0, [sp, #16]
    2c0c:	ldr	x0, [x0, #104]
    2c10:	str	x0, [sp, #56]
    2c14:	ldr	x0, [sp, #56]
    2c18:	mov	x1, x0
    2c1c:	ldr	x0, [sp, #48]
    2c20:	bl	2990 <S_SvREFCNT_dec>
    2c24:	ldr	x0, [sp, #16]
    2c28:	str	xzr, [x0, #104]
    2c2c:	ldr	x0, [sp, #16]
    2c30:	ldr	x0, [x0, #128]
    2c34:	cmp	x0, #0x0
    2c38:	b.eq	2c60 <S_ithread_clear+0xf0>  // b.none
    2c3c:	ldr	x0, [sp, #16]
    2c40:	ldr	x0, [x0, #128]
    2c44:	str	x0, [sp, #64]
    2c48:	ldr	x0, [sp, #64]
    2c4c:	mov	x1, x0
    2c50:	ldr	x0, [sp, #48]
    2c54:	bl	2990 <S_SvREFCNT_dec>
    2c58:	ldr	x0, [sp, #16]
    2c5c:	str	xzr, [x0, #128]
    2c60:	ldr	x0, [sp, #40]
    2c64:	bl	2310 <perl_destruct@plt>
    2c68:	ldr	x0, [sp, #40]
    2c6c:	bl	22d0 <perl_free@plt>
    2c70:	ldr	x0, [sp, #16]
    2c74:	str	xzr, [x0, #16]
    2c78:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2c7c:	ldr	x0, [x0, #4024]
    2c80:	ldr	w0, [x0]
    2c84:	ldr	x1, [sp, #24]
    2c88:	bl	2570 <pthread_setspecific@plt>
    2c8c:	str	w0, [sp, #36]
    2c90:	ldr	w0, [sp, #36]
    2c94:	cmp	w0, #0x0
    2c98:	b.eq	2cb8 <S_ithread_clear+0x148>  // b.none
    2c9c:	mov	w3, #0x108                 	// #264
    2ca0:	adrp	x0, a000 <XS_threads_error+0x190>
    2ca4:	add	x2, x0, #0x700
    2ca8:	ldr	w1, [sp, #36]
    2cac:	adrp	x0, a000 <XS_threads_error+0x190>
    2cb0:	add	x0, x0, #0x710
    2cb4:	bl	2510 <Perl_croak_nocontext@plt>
    2cb8:	add	x0, sp, #0x48
    2cbc:	bl	2ac0 <S_set_sigmask>
    2cc0:	nop
    2cc4:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    2cc8:	ldr	x0, [x0, #4048]
    2ccc:	ldr	x1, [sp, #200]
    2cd0:	ldr	x0, [x0]
    2cd4:	eor	x0, x1, x0
    2cd8:	cmp	x0, #0x0
    2cdc:	b.eq	2ce4 <S_ithread_clear+0x174>  // b.none
    2ce0:	bl	2420 <__stack_chk_fail@plt>
    2ce4:	ldp	x29, x30, [sp], #208
    2ce8:	ret

0000000000002cec <S_ithread_free>:
    2cec:	stp	x29, x30, [sp, #-96]!
    2cf0:	mov	x29, sp
    2cf4:	str	x0, [sp, #24]
    2cf8:	str	x1, [sp, #16]
    2cfc:	ldr	x0, [sp, #24]
    2d00:	ldr	x1, [x0, #2032]
    2d04:	mov	w6, #0x0                   	// #0
    2d08:	mov	x5, #0x0                   	// #0
    2d0c:	mov	w4, #0x30                  	// #48
    2d10:	mov	w3, #0x12                  	// #18
    2d14:	adrp	x0, a000 <XS_threads_error+0x190>
    2d18:	add	x2, x0, #0x738
    2d1c:	ldr	x0, [sp, #24]
    2d20:	bl	2610 <Perl_hv_common_key_len@plt>
    2d24:	ldr	x0, [x0]
    2d28:	str	x0, [sp, #80]
    2d2c:	ldr	x0, [sp, #80]
    2d30:	ldr	w1, [x0, #12]
    2d34:	mov	w0, #0x100                 	// #256
    2d38:	movk	w0, #0x8020, lsl #16
    2d3c:	and	w1, w1, w0
    2d40:	mov	w0, #0x100                 	// #256
    2d44:	movk	w0, #0x8000, lsl #16
    2d48:	cmp	w1, w0
    2d4c:	b.ne	2d60 <S_ithread_free+0x74>  // b.any
    2d50:	ldr	x0, [sp, #80]
    2d54:	ldr	x0, [x0]
    2d58:	ldr	x0, [x0, #32]
    2d5c:	b	2d70 <S_ithread_free+0x84>
    2d60:	mov	w2, #0x2                   	// #2
    2d64:	ldr	x1, [sp, #80]
    2d68:	ldr	x0, [sp, #24]
    2d6c:	bl	21d0 <Perl_sv_2uv_flags@plt>
    2d70:	str	x0, [sp, #88]
    2d74:	ldr	x0, [sp, #16]
    2d78:	ldr	w0, [x0, #84]
    2d7c:	and	w0, w0, #0x10
    2d80:	cmp	w0, #0x0
    2d84:	b.ne	2de4 <S_ithread_free+0xf8>  // b.any
    2d88:	ldr	x0, [sp, #16]
    2d8c:	ldr	w0, [x0, #80]
    2d90:	sub	w1, w0, #0x1
    2d94:	ldr	x0, [sp, #16]
    2d98:	str	w1, [x0, #80]
    2d9c:	ldr	x0, [sp, #16]
    2da0:	ldr	w0, [x0, #80]
    2da4:	cmp	w0, #0x0
    2da8:	b.le	2de4 <S_ithread_free+0xf8>
    2dac:	ldr	x0, [sp, #16]
    2db0:	add	x0, x0, #0x20
    2db4:	bl	2730 <pthread_mutex_unlock@plt>
    2db8:	str	w0, [sp, #44]
    2dbc:	ldr	w0, [sp, #44]
    2dc0:	cmp	w0, #0x0
    2dc4:	b.eq	3004 <S_ithread_free+0x318>  // b.none
    2dc8:	mov	w3, #0x11f                 	// #287
    2dcc:	adrp	x0, a000 <XS_threads_error+0x190>
    2dd0:	add	x2, x0, #0x700
    2dd4:	ldr	w1, [sp, #44]
    2dd8:	adrp	x0, a000 <XS_threads_error+0x190>
    2ddc:	add	x0, x0, #0x750
    2de0:	bl	2510 <Perl_croak_nocontext@plt>
    2de4:	ldr	x0, [sp, #16]
    2de8:	add	x0, x0, #0x20
    2dec:	bl	2730 <pthread_mutex_unlock@plt>
    2df0:	str	w0, [sp, #48]
    2df4:	ldr	w0, [sp, #48]
    2df8:	cmp	w0, #0x0
    2dfc:	b.eq	2e1c <S_ithread_free+0x130>  // b.none
    2e00:	mov	w3, #0x125                 	// #293
    2e04:	adrp	x0, a000 <XS_threads_error+0x190>
    2e08:	add	x2, x0, #0x700
    2e0c:	ldr	w1, [sp, #48]
    2e10:	adrp	x0, a000 <XS_threads_error+0x190>
    2e14:	add	x0, x0, #0x750
    2e18:	bl	2510 <Perl_croak_nocontext@plt>
    2e1c:	ldr	x0, [sp, #88]
    2e20:	add	x0, x0, #0x110
    2e24:	bl	2720 <pthread_mutex_lock@plt>
    2e28:	str	w0, [sp, #52]
    2e2c:	ldr	w0, [sp, #52]
    2e30:	cmp	w0, #0x0
    2e34:	b.eq	2e54 <S_ithread_free+0x168>  // b.none
    2e38:	mov	w3, #0x12b                 	// #299
    2e3c:	adrp	x0, a000 <XS_threads_error+0x190>
    2e40:	add	x2, x0, #0x700
    2e44:	ldr	w1, [sp, #52]
    2e48:	adrp	x0, a000 <XS_threads_error+0x190>
    2e4c:	add	x0, x0, #0x778
    2e50:	bl	2510 <Perl_croak_nocontext@plt>
    2e54:	ldr	x0, [sp, #16]
    2e58:	ldr	x0, [x0]
    2e5c:	ldr	x1, [sp, #16]
    2e60:	ldr	x1, [x1, #8]
    2e64:	str	x1, [x0, #8]
    2e68:	ldr	x0, [sp, #16]
    2e6c:	ldr	x0, [x0, #8]
    2e70:	ldr	x1, [sp, #16]
    2e74:	ldr	x1, [x1]
    2e78:	str	x1, [x0]
    2e7c:	ldr	x0, [sp, #16]
    2e80:	str	xzr, [x0]
    2e84:	ldr	x0, [sp, #16]
    2e88:	str	xzr, [x0, #8]
    2e8c:	ldr	x0, [sp, #88]
    2e90:	add	x0, x0, #0x110
    2e94:	bl	2730 <pthread_mutex_unlock@plt>
    2e98:	str	w0, [sp, #56]
    2e9c:	ldr	w0, [sp, #56]
    2ea0:	cmp	w0, #0x0
    2ea4:	b.eq	2ec4 <S_ithread_free+0x1d8>  // b.none
    2ea8:	mov	w3, #0x131                 	// #305
    2eac:	adrp	x0, a000 <XS_threads_error+0x190>
    2eb0:	add	x2, x0, #0x700
    2eb4:	ldr	w1, [sp, #56]
    2eb8:	adrp	x0, a000 <XS_threads_error+0x190>
    2ebc:	add	x0, x0, #0x750
    2ec0:	bl	2510 <Perl_croak_nocontext@plt>
    2ec4:	ldr	x0, [sp, #16]
    2ec8:	add	x0, x0, #0x20
    2ecc:	bl	2720 <pthread_mutex_lock@plt>
    2ed0:	str	w0, [sp, #60]
    2ed4:	ldr	w0, [sp, #60]
    2ed8:	cmp	w0, #0x0
    2edc:	b.eq	2efc <S_ithread_free+0x210>  // b.none
    2ee0:	mov	w3, #0x134                 	// #308
    2ee4:	adrp	x0, a000 <XS_threads_error+0x190>
    2ee8:	add	x2, x0, #0x700
    2eec:	ldr	w1, [sp, #60]
    2ef0:	adrp	x0, a000 <XS_threads_error+0x190>
    2ef4:	add	x0, x0, #0x778
    2ef8:	bl	2510 <Perl_croak_nocontext@plt>
    2efc:	ldr	x1, [sp, #16]
    2f00:	ldr	x0, [sp, #24]
    2f04:	bl	2b70 <S_ithread_clear>
    2f08:	ldr	x0, [sp, #16]
    2f0c:	add	x0, x0, #0x20
    2f10:	bl	2730 <pthread_mutex_unlock@plt>
    2f14:	str	w0, [sp, #64]
    2f18:	ldr	w0, [sp, #64]
    2f1c:	cmp	w0, #0x0
    2f20:	b.eq	2f40 <S_ithread_free+0x254>  // b.none
    2f24:	mov	w3, #0x13b                 	// #315
    2f28:	adrp	x0, a000 <XS_threads_error+0x190>
    2f2c:	add	x2, x0, #0x700
    2f30:	ldr	w1, [sp, #64]
    2f34:	adrp	x0, a000 <XS_threads_error+0x190>
    2f38:	add	x0, x0, #0x750
    2f3c:	bl	2510 <Perl_croak_nocontext@plt>
    2f40:	ldr	x0, [sp, #16]
    2f44:	add	x0, x0, #0x20
    2f48:	bl	25c0 <pthread_mutex_destroy@plt>
    2f4c:	str	w0, [sp, #68]
    2f50:	ldr	w0, [sp, #68]
    2f54:	cmp	w0, #0x0
    2f58:	b.eq	2f78 <S_ithread_free+0x28c>  // b.none
    2f5c:	mov	w3, #0x13c                 	// #316
    2f60:	adrp	x0, a000 <XS_threads_error+0x190>
    2f64:	add	x2, x0, #0x700
    2f68:	ldr	w1, [sp, #68]
    2f6c:	adrp	x0, a000 <XS_threads_error+0x190>
    2f70:	add	x0, x0, #0x798
    2f74:	bl	2510 <Perl_croak_nocontext@plt>
    2f78:	ldr	x0, [sp, #16]
    2f7c:	bl	2530 <free@plt>
    2f80:	ldr	x0, [sp, #88]
    2f84:	add	x0, x0, #0x110
    2f88:	bl	2720 <pthread_mutex_lock@plt>
    2f8c:	str	w0, [sp, #72]
    2f90:	ldr	w0, [sp, #72]
    2f94:	cmp	w0, #0x0
    2f98:	b.eq	2fb8 <S_ithread_free+0x2cc>  // b.none
    2f9c:	mov	w3, #0x14c                 	// #332
    2fa0:	adrp	x0, a000 <XS_threads_error+0x190>
    2fa4:	add	x2, x0, #0x700
    2fa8:	ldr	w1, [sp, #72]
    2fac:	adrp	x0, a000 <XS_threads_error+0x190>
    2fb0:	add	x0, x0, #0x778
    2fb4:	bl	2510 <Perl_croak_nocontext@plt>
    2fb8:	ldr	x0, [sp, #88]
    2fbc:	ldr	x0, [x0, #352]
    2fc0:	sub	x1, x0, #0x1
    2fc4:	ldr	x0, [sp, #88]
    2fc8:	str	x1, [x0, #352]
    2fcc:	ldr	x0, [sp, #88]
    2fd0:	add	x0, x0, #0x110
    2fd4:	bl	2730 <pthread_mutex_unlock@plt>
    2fd8:	str	w0, [sp, #76]
    2fdc:	ldr	w0, [sp, #76]
    2fe0:	cmp	w0, #0x0
    2fe4:	b.eq	3008 <S_ithread_free+0x31c>  // b.none
    2fe8:	mov	w3, #0x14e                 	// #334
    2fec:	adrp	x0, a000 <XS_threads_error+0x190>
    2ff0:	add	x2, x0, #0x700
    2ff4:	ldr	w1, [sp, #76]
    2ff8:	adrp	x0, a000 <XS_threads_error+0x190>
    2ffc:	add	x0, x0, #0x750
    3000:	bl	2510 <Perl_croak_nocontext@plt>
    3004:	nop
    3008:	ldp	x29, x30, [sp], #96
    300c:	ret

0000000000003010 <S_ithread_count_inc>:
    3010:	stp	x29, x30, [sp, #-48]!
    3014:	mov	x29, sp
    3018:	str	x0, [sp, #24]
    301c:	str	x1, [sp, #16]
    3020:	ldr	x0, [sp, #16]
    3024:	add	x0, x0, #0x20
    3028:	bl	2720 <pthread_mutex_lock@plt>
    302c:	str	w0, [sp, #40]
    3030:	ldr	w0, [sp, #40]
    3034:	cmp	w0, #0x0
    3038:	b.eq	3058 <S_ithread_count_inc+0x48>  // b.none
    303c:	mov	w3, #0x156                 	// #342
    3040:	adrp	x0, a000 <XS_threads_error+0x190>
    3044:	add	x2, x0, #0x700
    3048:	ldr	w1, [sp, #40]
    304c:	adrp	x0, a000 <XS_threads_error+0x190>
    3050:	add	x0, x0, #0x778
    3054:	bl	2510 <Perl_croak_nocontext@plt>
    3058:	ldr	x0, [sp, #16]
    305c:	ldr	w0, [x0, #80]
    3060:	add	w1, w0, #0x1
    3064:	ldr	x0, [sp, #16]
    3068:	str	w1, [x0, #80]
    306c:	ldr	x0, [sp, #16]
    3070:	add	x0, x0, #0x20
    3074:	bl	2730 <pthread_mutex_unlock@plt>
    3078:	str	w0, [sp, #44]
    307c:	ldr	w0, [sp, #44]
    3080:	cmp	w0, #0x0
    3084:	b.eq	30a4 <S_ithread_count_inc+0x94>  // b.none
    3088:	mov	w3, #0x158                 	// #344
    308c:	adrp	x0, a000 <XS_threads_error+0x190>
    3090:	add	x2, x0, #0x700
    3094:	ldr	w1, [sp, #44]
    3098:	adrp	x0, a000 <XS_threads_error+0x190>
    309c:	add	x0, x0, #0x750
    30a0:	bl	2510 <Perl_croak_nocontext@plt>
    30a4:	nop
    30a8:	ldp	x29, x30, [sp], #48
    30ac:	ret

00000000000030b0 <S_exit_warning>:
    30b0:	stp	x29, x30, [sp, #-64]!
    30b4:	mov	x29, sp
    30b8:	str	x0, [sp, #24]
    30bc:	ldr	x0, [sp, #24]
    30c0:	ldr	x1, [x0, #2032]
    30c4:	mov	w6, #0x0                   	// #0
    30c8:	mov	x5, #0x0                   	// #0
    30cc:	mov	w4, #0x30                  	// #48
    30d0:	mov	w3, #0x12                  	// #18
    30d4:	adrp	x0, a000 <XS_threads_error+0x190>
    30d8:	add	x2, x0, #0x738
    30dc:	ldr	x0, [sp, #24]
    30e0:	bl	2610 <Perl_hv_common_key_len@plt>
    30e4:	ldr	x0, [x0]
    30e8:	str	x0, [sp, #48]
    30ec:	ldr	x0, [sp, #48]
    30f0:	ldr	w1, [x0, #12]
    30f4:	mov	w0, #0x100                 	// #256
    30f8:	movk	w0, #0x8020, lsl #16
    30fc:	and	w1, w1, w0
    3100:	mov	w0, #0x100                 	// #256
    3104:	movk	w0, #0x8000, lsl #16
    3108:	cmp	w1, w0
    310c:	b.ne	3120 <S_exit_warning+0x70>  // b.any
    3110:	ldr	x0, [sp, #48]
    3114:	ldr	x0, [x0]
    3118:	ldr	x0, [x0, #32]
    311c:	b	3130 <S_exit_warning+0x80>
    3120:	mov	w2, #0x2                   	// #2
    3124:	ldr	x1, [sp, #48]
    3128:	ldr	x0, [sp, #24]
    312c:	bl	21d0 <Perl_sv_2uv_flags@plt>
    3130:	str	x0, [sp, #56]
    3134:	ldr	x0, [sp, #56]
    3138:	add	x0, x0, #0x110
    313c:	bl	2720 <pthread_mutex_lock@plt>
    3140:	str	w0, [sp, #32]
    3144:	ldr	w0, [sp, #32]
    3148:	cmp	w0, #0x0
    314c:	b.eq	316c <S_exit_warning+0xbc>  // b.none
    3150:	mov	w3, #0x163                 	// #355
    3154:	adrp	x0, a000 <XS_threads_error+0x190>
    3158:	add	x2, x0, #0x700
    315c:	ldr	w1, [sp, #32]
    3160:	adrp	x0, a000 <XS_threads_error+0x190>
    3164:	add	x0, x0, #0x778
    3168:	bl	2510 <Perl_croak_nocontext@plt>
    316c:	ldr	x0, [sp, #56]
    3170:	ldr	x0, [x0, #352]
    3174:	cmp	x0, #0x0
    3178:	cset	w0, gt
    317c:	and	w0, w0, #0xff
    3180:	str	w0, [sp, #36]
    3184:	ldr	x0, [sp, #56]
    3188:	ldr	x0, [x0, #336]
    318c:	cmp	x0, #0x0
    3190:	b.ne	31a4 <S_exit_warning+0xf4>  // b.any
    3194:	ldr	x0, [sp, #56]
    3198:	ldr	x0, [x0, #328]
    319c:	cmp	x0, #0x0
    31a0:	b.eq	31ac <S_exit_warning+0xfc>  // b.none
    31a4:	mov	w0, #0x1                   	// #1
    31a8:	b	31b0 <S_exit_warning+0x100>
    31ac:	mov	w0, #0x0                   	// #0
    31b0:	str	w0, [sp, #40]
    31b4:	ldr	x0, [sp, #56]
    31b8:	add	x0, x0, #0x110
    31bc:	bl	2730 <pthread_mutex_unlock@plt>
    31c0:	str	w0, [sp, #44]
    31c4:	ldr	w0, [sp, #44]
    31c8:	cmp	w0, #0x0
    31cc:	b.eq	31ec <S_exit_warning+0x13c>  // b.none
    31d0:	mov	w3, #0x166                 	// #358
    31d4:	adrp	x0, a000 <XS_threads_error+0x190>
    31d8:	add	x2, x0, #0x700
    31dc:	ldr	w1, [sp, #44]
    31e0:	adrp	x0, a000 <XS_threads_error+0x190>
    31e4:	add	x0, x0, #0x750
    31e8:	bl	2510 <Perl_croak_nocontext@plt>
    31ec:	ldr	w0, [sp, #40]
    31f0:	cmp	w0, #0x0
    31f4:	b.eq	3244 <S_exit_warning+0x194>  // b.none
    31f8:	mov	w1, #0x28                  	// #40
    31fc:	ldr	x0, [sp, #24]
    3200:	bl	2400 <Perl_ckwarn_d@plt>
    3204:	and	w0, w0, #0xff
    3208:	cmp	w0, #0x0
    320c:	b.eq	3244 <S_exit_warning+0x194>  // b.none
    3210:	ldr	x0, [sp, #56]
    3214:	ldr	x1, [x0, #336]
    3218:	ldr	x0, [sp, #56]
    321c:	ldr	x2, [x0, #328]
    3220:	ldr	x0, [sp, #56]
    3224:	ldr	x0, [x0, #344]
    3228:	mov	x4, x0
    322c:	mov	x3, x2
    3230:	mov	x2, x1
    3234:	adrp	x0, a000 <XS_threads_error+0x190>
    3238:	add	x1, x0, #0x7c0
    323c:	ldr	x0, [sp, #24]
    3240:	bl	2340 <Perl_warn@plt>
    3244:	ldr	w0, [sp, #36]
    3248:	ldp	x29, x30, [sp], #64
    324c:	ret

0000000000003250 <Perl_ithread_hook>:
    3250:	stp	x29, x30, [sp, #-48]!
    3254:	mov	x29, sp
    3258:	str	x0, [sp, #24]
    325c:	ldr	x0, [sp, #24]
    3260:	ldr	x1, [x0, #2032]
    3264:	mov	w6, #0x0                   	// #0
    3268:	mov	x5, #0x0                   	// #0
    326c:	mov	w4, #0x30                  	// #48
    3270:	mov	w3, #0x12                  	// #18
    3274:	adrp	x0, a000 <XS_threads_error+0x190>
    3278:	add	x2, x0, #0x738
    327c:	ldr	x0, [sp, #24]
    3280:	bl	2610 <Perl_hv_common_key_len@plt>
    3284:	ldr	x0, [x0]
    3288:	str	x0, [sp, #32]
    328c:	ldr	x0, [sp, #32]
    3290:	ldr	w1, [x0, #12]
    3294:	mov	w0, #0x100                 	// #256
    3298:	movk	w0, #0x8020, lsl #16
    329c:	and	w1, w1, w0
    32a0:	mov	w0, #0x100                 	// #256
    32a4:	movk	w0, #0x8000, lsl #16
    32a8:	cmp	w1, w0
    32ac:	b.ne	32c0 <Perl_ithread_hook+0x70>  // b.any
    32b0:	ldr	x0, [sp, #32]
    32b4:	ldr	x0, [x0]
    32b8:	ldr	x0, [x0, #32]
    32bc:	b	32d0 <Perl_ithread_hook+0x80>
    32c0:	mov	w2, #0x2                   	// #2
    32c4:	ldr	x1, [sp, #32]
    32c8:	ldr	x0, [sp, #24]
    32cc:	bl	21d0 <Perl_sv_2uv_flags@plt>
    32d0:	str	x0, [sp, #40]
    32d4:	ldr	x0, [sp, #40]
    32d8:	ldr	x0, [x0, #16]
    32dc:	ldr	x1, [sp, #24]
    32e0:	cmp	x1, x0
    32e4:	b.ne	32f4 <Perl_ithread_hook+0xa4>  // b.any
    32e8:	ldr	x0, [sp, #24]
    32ec:	bl	30b0 <S_exit_warning>
    32f0:	b	32f8 <Perl_ithread_hook+0xa8>
    32f4:	mov	w0, #0x0                   	// #0
    32f8:	ldp	x29, x30, [sp], #48
    32fc:	ret

0000000000003300 <ithread_mg_get>:
    3300:	sub	sp, sp, #0x30
    3304:	str	x0, [sp, #24]
    3308:	str	x1, [sp, #16]
    330c:	str	x2, [sp, #8]
    3310:	ldr	x0, [sp, #8]
    3314:	ldr	x0, [x0, #40]
    3318:	str	x0, [sp, #40]
    331c:	ldr	x0, [sp, #16]
    3320:	ldr	x0, [x0]
    3324:	ldr	x1, [sp, #40]
    3328:	str	x1, [x0, #32]
    332c:	ldr	x0, [sp, #16]
    3330:	ldr	w1, [x0, #12]
    3334:	mov	w0, #0x1100                	// #4352
    3338:	orr	w1, w1, w0
    333c:	ldr	x0, [sp, #16]
    3340:	str	w1, [x0, #12]
    3344:	mov	w0, #0x0                   	// #0
    3348:	add	sp, sp, #0x30
    334c:	ret

0000000000003350 <ithread_mg_free>:
    3350:	stp	x29, x30, [sp, #-64]!
    3354:	mov	x29, sp
    3358:	str	x0, [sp, #40]
    335c:	str	x1, [sp, #32]
    3360:	str	x2, [sp, #24]
    3364:	ldr	x0, [sp, #24]
    3368:	ldr	x0, [x0, #40]
    336c:	str	x0, [sp, #56]
    3370:	ldr	x0, [sp, #56]
    3374:	add	x0, x0, #0x20
    3378:	bl	2720 <pthread_mutex_lock@plt>
    337c:	str	w0, [sp, #52]
    3380:	ldr	w0, [sp, #52]
    3384:	cmp	w0, #0x0
    3388:	b.eq	33a8 <ithread_mg_free+0x58>  // b.none
    338c:	mov	w3, #0x193                 	// #403
    3390:	adrp	x0, a000 <XS_threads_error+0x190>
    3394:	add	x2, x0, #0x700
    3398:	ldr	w1, [sp, #52]
    339c:	adrp	x0, a000 <XS_threads_error+0x190>
    33a0:	add	x0, x0, #0x778
    33a4:	bl	2510 <Perl_croak_nocontext@plt>
    33a8:	ldr	x1, [sp, #56]
    33ac:	ldr	x0, [sp, #40]
    33b0:	bl	2cec <S_ithread_free>
    33b4:	mov	w0, #0x0                   	// #0
    33b8:	ldp	x29, x30, [sp], #64
    33bc:	ret

00000000000033c0 <ithread_mg_dup>:
    33c0:	stp	x29, x30, [sp, #-48]!
    33c4:	mov	x29, sp
    33c8:	str	x0, [sp, #40]
    33cc:	str	x1, [sp, #32]
    33d0:	str	x2, [sp, #24]
    33d4:	ldr	x0, [sp, #32]
    33d8:	ldr	x0, [x0, #40]
    33dc:	mov	x1, x0
    33e0:	ldr	x0, [sp, #40]
    33e4:	bl	3010 <S_ithread_count_inc>
    33e8:	mov	w0, #0x0                   	// #0
    33ec:	ldp	x29, x30, [sp], #48
    33f0:	ret

00000000000033f4 <S_good_stack_size>:
    33f4:	stp	x29, x30, [sp, #-64]!
    33f8:	mov	x29, sp
    33fc:	str	x0, [sp, #24]
    3400:	str	x1, [sp, #16]
    3404:	ldr	x0, [sp, #24]
    3408:	ldr	x1, [x0, #2032]
    340c:	mov	w6, #0x0                   	// #0
    3410:	mov	x5, #0x0                   	// #0
    3414:	mov	w4, #0x30                  	// #48
    3418:	mov	w3, #0x12                  	// #18
    341c:	adrp	x0, a000 <XS_threads_error+0x190>
    3420:	add	x2, x0, #0x738
    3424:	ldr	x0, [sp, #24]
    3428:	bl	2610 <Perl_hv_common_key_len@plt>
    342c:	ldr	x0, [x0]
    3430:	str	x0, [sp, #40]
    3434:	ldr	x0, [sp, #40]
    3438:	ldr	w1, [x0, #12]
    343c:	mov	w0, #0x100                 	// #256
    3440:	movk	w0, #0x8020, lsl #16
    3444:	and	w1, w1, w0
    3448:	mov	w0, #0x100                 	// #256
    344c:	movk	w0, #0x8000, lsl #16
    3450:	cmp	w1, w0
    3454:	b.ne	3468 <S_good_stack_size+0x74>  // b.any
    3458:	ldr	x0, [sp, #40]
    345c:	ldr	x0, [x0]
    3460:	ldr	x0, [x0, #32]
    3464:	b	3478 <S_good_stack_size+0x84>
    3468:	mov	w2, #0x2                   	// #2
    346c:	ldr	x1, [sp, #40]
    3470:	ldr	x0, [sp, #24]
    3474:	bl	21d0 <Perl_sv_2uv_flags@plt>
    3478:	str	x0, [sp, #48]
    347c:	ldr	x0, [sp, #16]
    3480:	cmp	x0, #0x0
    3484:	b.ne	3494 <S_good_stack_size+0xa0>  // b.any
    3488:	ldr	x0, [sp, #48]
    348c:	ldr	x0, [x0, #360]
    3490:	b	35f4 <S_good_stack_size+0x200>
    3494:	ldr	x1, [sp, #16]
    3498:	mov	x0, #0x1ffff               	// #131071
    349c:	cmp	x1, x0
    34a0:	b.gt	34d8 <S_good_stack_size+0xe4>
    34a4:	mov	w1, #0x28                  	// #40
    34a8:	ldr	x0, [sp, #24]
    34ac:	bl	2680 <Perl_ckwarn@plt>
    34b0:	and	w0, w0, #0xff
    34b4:	cmp	w0, #0x0
    34b8:	b.eq	34d0 <S_good_stack_size+0xdc>  // b.none
    34bc:	mov	x2, #0x20000               	// #131072
    34c0:	adrp	x0, a000 <XS_threads_error+0x190>
    34c4:	add	x1, x0, #0x838
    34c8:	ldr	x0, [sp, #24]
    34cc:	bl	2340 <Perl_warn@plt>
    34d0:	mov	x0, #0x20000               	// #131072
    34d4:	b	35f4 <S_good_stack_size+0x200>
    34d8:	ldr	x0, [sp, #48]
    34dc:	ldr	x0, [x0, #368]
    34e0:	cmp	x0, #0x0
    34e4:	b.gt	35c0 <S_good_stack_size+0x1cc>
    34e8:	bl	26c0 <__errno_location@plt>
    34ec:	str	wzr, [x0]
    34f0:	mov	w0, #0x1e                  	// #30
    34f4:	bl	25e0 <sysconf@plt>
    34f8:	mov	x1, x0
    34fc:	ldr	x0, [sp, #48]
    3500:	str	x1, [x0, #368]
    3504:	ldr	x0, [sp, #48]
    3508:	ldr	x0, [x0, #368]
    350c:	cmp	x0, #0x0
    3510:	b.ge	35c0 <S_good_stack_size+0x1cc>  // b.tcont
    3514:	bl	26c0 <__errno_location@plt>
    3518:	ldr	w0, [x0]
    351c:	cmp	w0, #0x0
    3520:	b.eq	35b0 <S_good_stack_size+0x1bc>  // b.none
    3524:	mov	w2, #0x0                   	// #0
    3528:	adrp	x0, a000 <XS_threads_error+0x190>
    352c:	add	x1, x0, #0x860
    3530:	ldr	x0, [sp, #24]
    3534:	bl	24f0 <Perl_get_sv@plt>
    3538:	str	x0, [sp, #56]
    353c:	ldr	x0, [sp, #56]
    3540:	ldr	w0, [x0, #12]
    3544:	and	w0, w0, #0xff
    3548:	cmp	w0, #0x2
    354c:	b.hi	3560 <S_good_stack_size+0x16c>  // b.pmore
    3550:	mov	w2, #0x3                   	// #3
    3554:	ldr	x1, [sp, #56]
    3558:	ldr	x0, [sp, #24]
    355c:	bl	22f0 <Perl_sv_upgrade@plt>
    3560:	ldr	x0, [sp, #56]
    3564:	ldr	w1, [x0, #12]
    3568:	mov	w0, #0x400                 	// #1024
    356c:	movk	w0, #0x20, lsl #16
    3570:	and	w0, w1, w0
    3574:	cmp	w0, #0x400
    3578:	b.ne	3588 <S_good_stack_size+0x194>  // b.any
    357c:	ldr	x0, [sp, #56]
    3580:	ldr	x0, [x0, #16]
    3584:	b	359c <S_good_stack_size+0x1a8>
    3588:	mov	w3, #0x2                   	// #2
    358c:	mov	x2, #0x0                   	// #0
    3590:	ldr	x1, [sp, #56]
    3594:	ldr	x0, [sp, #24]
    3598:	bl	2370 <Perl_sv_2pv_flags@plt>
    359c:	mov	x2, x0
    35a0:	adrp	x0, a000 <XS_threads_error+0x190>
    35a4:	add	x1, x0, #0x868
    35a8:	ldr	x0, [sp, #24]
    35ac:	bl	24d0 <Perl_croak@plt>
    35b0:	adrp	x0, a000 <XS_threads_error+0x190>
    35b4:	add	x1, x0, #0x880
    35b8:	ldr	x0, [sp, #24]
    35bc:	bl	24d0 <Perl_croak@plt>
    35c0:	ldr	x0, [sp, #48]
    35c4:	ldr	x1, [x0, #368]
    35c8:	ldr	x0, [sp, #16]
    35cc:	add	x0, x1, x0
    35d0:	sub	x1, x0, #0x1
    35d4:	ldr	x0, [sp, #48]
    35d8:	ldr	x0, [x0, #368]
    35dc:	sdiv	x1, x1, x0
    35e0:	ldr	x0, [sp, #48]
    35e4:	ldr	x0, [x0, #368]
    35e8:	mul	x0, x1, x0
    35ec:	str	x0, [sp, #16]
    35f0:	ldr	x0, [sp, #16]
    35f4:	ldp	x29, x30, [sp], #64
    35f8:	ret

00000000000035fc <S_jmpenv_run>:
    35fc:	stp	x29, x30, [sp, #-432]!
    3600:	mov	x29, sp
    3604:	str	x19, [sp, #16]
    3608:	str	x0, [sp, #72]
    360c:	str	w1, [sp, #68]
    3610:	str	x2, [sp, #56]
    3614:	str	x3, [sp, #48]
    3618:	str	x4, [sp, #40]
    361c:	str	x5, [sp, #32]
    3620:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    3624:	ldr	x0, [x0, #4048]
    3628:	ldr	x1, [x0]
    362c:	str	x1, [sp, #424]
    3630:	mov	x1, #0x0                   	// #0
    3634:	ldr	x0, [sp, #72]
    3638:	ldr	w0, [x0, #64]
    363c:	str	w0, [sp, #80]
    3640:	str	wzr, [sp, #84]
    3644:	ldr	x0, [sp, #72]
    3648:	ldr	x0, [x0, #760]
    364c:	str	x0, [sp, #88]
    3650:	add	x0, sp, #0x58
    3654:	add	x0, x0, #0x8
    3658:	mov	w1, #0x0                   	// #0
    365c:	bl	2200 <__sigsetjmp@plt>
    3660:	str	w0, [sp, #408]
    3664:	ldr	x0, [sp, #72]
    3668:	add	x1, sp, #0x58
    366c:	str	x1, [x0, #760]
    3670:	strb	wzr, [sp, #412]
    3674:	ldr	x0, [sp, #72]
    3678:	ldrh	w0, [x0, #186]
    367c:	strh	w0, [sp, #414]
    3680:	ldr	w0, [sp, #408]
    3684:	str	w0, [sp, #84]
    3688:	ldr	w0, [sp, #84]
    368c:	cmp	w0, #0x0
    3690:	b.ne	3754 <S_jmpenv_run+0x158>  // b.any
    3694:	ldr	w0, [sp, #68]
    3698:	cmp	w0, #0x0
    369c:	b.ne	36d0 <S_jmpenv_run+0xd4>  // b.any
    36a0:	ldr	x0, [sp, #56]
    36a4:	ldr	x1, [x0, #96]
    36a8:	ldr	x0, [sp, #56]
    36ac:	ldr	w0, [x0, #88]
    36b0:	orr	w0, w0, #0x8
    36b4:	mov	w2, w0
    36b8:	ldr	x0, [sp, #72]
    36bc:	bl	2650 <Perl_call_sv@plt>
    36c0:	mov	w1, w0
    36c4:	ldr	x0, [sp, #48]
    36c8:	str	w1, [x0]
    36cc:	b	379c <S_jmpenv_run+0x1a0>
    36d0:	ldr	w0, [sp, #68]
    36d4:	cmp	w0, #0x1
    36d8:	b.ne	3748 <S_jmpenv_run+0x14c>  // b.any
    36dc:	ldr	x0, [sp, #56]
    36e0:	ldr	x19, [x0, #24]
    36e4:	ldr	x0, [sp, #72]
    36e8:	ldr	x0, [x0, #1744]
    36ec:	ldr	x0, [x0, #16]
    36f0:	ldr	x0, [x0]
    36f4:	cmp	x0, #0x0
    36f8:	b.eq	370c <S_jmpenv_run+0x110>  // b.none
    36fc:	ldr	x0, [sp, #72]
    3700:	ldr	x0, [x0, #1744]
    3704:	ldr	x0, [x0, #16]
    3708:	b	3728 <S_jmpenv_run+0x12c>
    370c:	ldr	x0, [sp, #72]
    3710:	ldr	x0, [x0, #1744]
    3714:	mov	w2, #0x0                   	// #0
    3718:	mov	x1, x0
    371c:	ldr	x0, [sp, #72]
    3720:	bl	26f0 <Perl_gv_add_by_type@plt>
    3724:	ldr	x0, [x0, #16]
    3728:	ldr	x0, [x0]
    372c:	mov	x3, x0
    3730:	mov	x2, x19
    3734:	adrp	x0, a000 <XS_threads_error+0x190>
    3738:	add	x1, x0, #0x8a8
    373c:	ldr	x0, [sp, #72]
    3740:	bl	2340 <Perl_warn@plt>
    3744:	b	379c <S_jmpenv_run+0x1a0>
    3748:	ldr	x0, [sp, #72]
    374c:	bl	30b0 <S_exit_warning>
    3750:	b	379c <S_jmpenv_run+0x1a0>
    3754:	ldr	w0, [sp, #84]
    3758:	cmp	w0, #0x2
    375c:	b.ne	379c <S_jmpenv_run+0x1a0>  // b.any
    3760:	ldr	x0, [sp, #40]
    3764:	mov	w1, #0x1                   	// #1
    3768:	str	w1, [x0]
    376c:	ldr	x0, [sp, #72]
    3770:	ldr	w1, [x0, #1676]
    3774:	ldr	x0, [sp, #32]
    3778:	str	w1, [x0]
    377c:	b	3788 <S_jmpenv_run+0x18c>
    3780:	ldr	x0, [sp, #72]
    3784:	bl	2250 <Perl_pop_scope@plt>
    3788:	ldr	x0, [sp, #72]
    378c:	ldr	w1, [x0, #64]
    3790:	ldr	w0, [sp, #80]
    3794:	cmp	w1, w0
    3798:	b.gt	3780 <S_jmpenv_run+0x184>
    379c:	ldrh	w1, [sp, #414]
    37a0:	ldr	x0, [sp, #72]
    37a4:	strh	w1, [x0, #186]
    37a8:	ldr	x1, [sp, #88]
    37ac:	ldr	x0, [sp, #72]
    37b0:	str	x1, [x0, #760]
    37b4:	ldr	w0, [sp, #84]
    37b8:	mov	w1, w0
    37bc:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    37c0:	ldr	x0, [x0, #4048]
    37c4:	ldr	x2, [sp, #424]
    37c8:	ldr	x0, [x0]
    37cc:	eor	x0, x2, x0
    37d0:	cmp	x0, #0x0
    37d4:	b.eq	37dc <S_jmpenv_run+0x1e0>  // b.none
    37d8:	bl	2420 <__stack_chk_fail@plt>
    37dc:	mov	w0, w1
    37e0:	ldr	x19, [sp, #16]
    37e4:	ldp	x29, x30, [sp], #432
    37e8:	ret

00000000000037ec <S_ithread_run>:
    37ec:	stp	x29, x30, [sp, #-192]!
    37f0:	mov	x29, sp
    37f4:	str	x19, [sp, #16]
    37f8:	str	x0, [sp, #40]
    37fc:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    3800:	ldr	x0, [x0, #4048]
    3804:	ldr	x1, [x0]
    3808:	str	x1, [sp, #184]
    380c:	mov	x1, #0x0                   	// #0
    3810:	ldr	x0, [sp, #40]
    3814:	str	x0, [sp, #120]
    3818:	str	wzr, [sp, #48]
    381c:	str	wzr, [sp, #52]
    3820:	str	wzr, [sp, #60]
    3824:	ldr	x0, [sp, #120]
    3828:	ldr	x0, [x0, #16]
    382c:	str	x0, [sp, #128]
    3830:	ldr	x0, [sp, #128]
    3834:	ldr	x1, [x0, #2032]
    3838:	mov	w6, #0x0                   	// #0
    383c:	mov	x5, #0x0                   	// #0
    3840:	mov	w4, #0x30                  	// #48
    3844:	mov	w3, #0x12                  	// #18
    3848:	adrp	x0, a000 <XS_threads_error+0x190>
    384c:	add	x2, x0, #0x738
    3850:	ldr	x0, [sp, #128]
    3854:	bl	2610 <Perl_hv_common_key_len@plt>
    3858:	ldr	x0, [x0]
    385c:	str	x0, [sp, #136]
    3860:	ldr	x0, [sp, #136]
    3864:	ldr	w1, [x0, #12]
    3868:	mov	w0, #0x100                 	// #256
    386c:	movk	w0, #0x8020, lsl #16
    3870:	and	w1, w1, w0
    3874:	mov	w0, #0x100                 	// #256
    3878:	movk	w0, #0x8000, lsl #16
    387c:	cmp	w1, w0
    3880:	b.ne	3894 <S_ithread_run+0xa8>  // b.any
    3884:	ldr	x0, [sp, #136]
    3888:	ldr	x0, [x0]
    388c:	ldr	x0, [x0, #32]
    3890:	b	38a4 <S_ithread_run+0xb8>
    3894:	mov	w2, #0x2                   	// #2
    3898:	ldr	x1, [sp, #136]
    389c:	ldr	x0, [sp, #128]
    38a0:	bl	21d0 <Perl_sv_2uv_flags@plt>
    38a4:	str	x0, [sp, #144]
    38a8:	ldr	x0, [sp, #120]
    38ac:	add	x0, x0, #0x20
    38b0:	bl	2720 <pthread_mutex_lock@plt>
    38b4:	str	w0, [sp, #68]
    38b8:	ldr	w0, [sp, #68]
    38bc:	cmp	w0, #0x0
    38c0:	b.eq	38e0 <S_ithread_run+0xf4>  // b.none
    38c4:	mov	w3, #0x23a                 	// #570
    38c8:	adrp	x0, a000 <XS_threads_error+0x190>
    38cc:	add	x2, x0, #0x700
    38d0:	ldr	w1, [sp, #68]
    38d4:	adrp	x0, a000 <XS_threads_error+0x190>
    38d8:	add	x0, x0, #0x778
    38dc:	bl	2510 <Perl_croak_nocontext@plt>
    38e0:	ldr	x0, [sp, #120]
    38e4:	add	x0, x0, #0x20
    38e8:	bl	2730 <pthread_mutex_unlock@plt>
    38ec:	str	w0, [sp, #72]
    38f0:	ldr	w0, [sp, #72]
    38f4:	cmp	w0, #0x0
    38f8:	b.eq	3918 <S_ithread_run+0x12c>  // b.none
    38fc:	mov	w3, #0x23b                 	// #571
    3900:	adrp	x0, a000 <XS_threads_error+0x190>
    3904:	add	x2, x0, #0x700
    3908:	ldr	w1, [sp, #72]
    390c:	adrp	x0, a000 <XS_threads_error+0x190>
    3910:	add	x0, x0, #0x750
    3914:	bl	2510 <Perl_croak_nocontext@plt>
    3918:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    391c:	ldr	x0, [x0, #4024]
    3920:	ldr	w2, [x0]
    3924:	ldr	x0, [sp, #120]
    3928:	ldr	x0, [x0, #16]
    392c:	mov	x1, x0
    3930:	mov	w0, w2
    3934:	bl	2570 <pthread_setspecific@plt>
    3938:	str	w0, [sp, #76]
    393c:	ldr	w0, [sp, #76]
    3940:	cmp	w0, #0x0
    3944:	b.eq	3964 <S_ithread_run+0x178>  // b.none
    3948:	mov	w3, #0x23d                 	// #573
    394c:	adrp	x0, a000 <XS_threads_error+0x190>
    3950:	add	x2, x0, #0x700
    3954:	ldr	w1, [sp, #76]
    3958:	adrp	x0, a000 <XS_threads_error+0x190>
    395c:	add	x0, x0, #0x710
    3960:	bl	2510 <Perl_croak_nocontext@plt>
    3964:	ldr	x1, [sp, #120]
    3968:	ldr	x0, [sp, #128]
    396c:	bl	2ae4 <S_ithread_set>
    3970:	ldr	x0, [sp, #120]
    3974:	add	x0, x0, #0x90
    3978:	bl	2ac0 <S_set_sigmask>
    397c:	bl	2540 <Perl_thread_locale_init@plt>
    3980:	ldr	x0, [sp, #128]
    3984:	mov	w1, #0x2                   	// #2
    3988:	strb	w1, [x0, #2609]
    398c:	ldr	x0, [sp, #120]
    3990:	ldr	x0, [x0, #104]
    3994:	str	x0, [sp, #152]
    3998:	ldr	x1, [sp, #152]
    399c:	ldr	x0, [sp, #128]
    39a0:	bl	2240 <Perl_av_len@plt>
    39a4:	add	w0, w0, #0x1
    39a8:	str	w0, [sp, #56]
    39ac:	ldr	x0, [sp, #128]
    39b0:	ldr	x0, [x0]
    39b4:	str	x0, [sp, #104]
    39b8:	ldr	x0, [sp, #128]
    39bc:	bl	2690 <Perl_push_scope@plt>
    39c0:	ldr	x0, [sp, #128]
    39c4:	bl	24a0 <Perl_savetmps@plt>
    39c8:	ldr	x0, [sp, #128]
    39cc:	ldr	x0, [x0, #120]
    39d0:	add	x1, x0, #0x4
    39d4:	ldr	x0, [sp, #128]
    39d8:	str	x1, [x0, #120]
    39dc:	ldr	x0, [sp, #128]
    39e0:	ldr	x0, [x0, #120]
    39e4:	str	x0, [sp, #112]
    39e8:	ldr	x0, [sp, #128]
    39ec:	ldr	x0, [x0, #128]
    39f0:	ldr	x1, [sp, #112]
    39f4:	cmp	x1, x0
    39f8:	cset	w0, eq  // eq = none
    39fc:	and	w0, w0, #0xff
    3a00:	and	x0, x0, #0xff
    3a04:	cmp	x0, #0x0
    3a08:	b.eq	3a18 <S_ithread_run+0x22c>  // b.none
    3a0c:	ldr	x0, [sp, #128]
    3a10:	bl	2600 <Perl_markstack_grow@plt>
    3a14:	str	x0, [sp, #112]
    3a18:	ldr	x0, [sp, #128]
    3a1c:	ldr	x0, [x0, #24]
    3a20:	ldr	x1, [sp, #104]
    3a24:	sub	x0, x1, x0
    3a28:	asr	x0, x0, #3
    3a2c:	mov	w1, w0
    3a30:	ldr	x0, [sp, #112]
    3a34:	str	w1, [x0]
    3a38:	str	wzr, [sp, #64]
    3a3c:	b	3ab0 <S_ithread_run+0x2c4>
    3a40:	ldr	x0, [sp, #128]
    3a44:	ldr	x1, [x0, #32]
    3a48:	ldr	x0, [sp, #104]
    3a4c:	sub	x0, x1, x0
    3a50:	cmp	x0, #0x0
    3a54:	cset	w0, le
    3a58:	and	w0, w0, #0xff
    3a5c:	and	x0, x0, #0xff
    3a60:	cmp	x0, #0x0
    3a64:	b.eq	3a80 <S_ithread_run+0x294>  // b.none
    3a68:	mov	x3, #0x1                   	// #1
    3a6c:	ldr	x2, [sp, #104]
    3a70:	ldr	x1, [sp, #104]
    3a74:	ldr	x0, [sp, #128]
    3a78:	bl	21e0 <Perl_stack_grow@plt>
    3a7c:	str	x0, [sp, #104]
    3a80:	ldr	x0, [sp, #104]
    3a84:	add	x0, x0, #0x8
    3a88:	str	x0, [sp, #104]
    3a8c:	ldr	x1, [sp, #152]
    3a90:	ldr	x0, [sp, #128]
    3a94:	bl	2260 <Perl_av_shift@plt>
    3a98:	mov	x1, x0
    3a9c:	ldr	x0, [sp, #104]
    3aa0:	str	x1, [x0]
    3aa4:	ldr	w0, [sp, #64]
    3aa8:	add	w0, w0, #0x1
    3aac:	str	w0, [sp, #64]
    3ab0:	ldr	w0, [sp, #56]
    3ab4:	ldr	w1, [sp, #64]
    3ab8:	cmp	w1, w0
    3abc:	b.lt	3a40 <S_ithread_run+0x254>  // b.tstop
    3ac0:	ldr	x0, [sp, #128]
    3ac4:	ldr	x1, [sp, #104]
    3ac8:	str	x1, [x0]
    3acc:	add	x2, sp, #0x34
    3ad0:	add	x1, sp, #0x30
    3ad4:	add	x0, sp, #0x38
    3ad8:	mov	x5, x2
    3adc:	mov	x4, x1
    3ae0:	mov	x3, x0
    3ae4:	ldr	x2, [sp, #120]
    3ae8:	mov	w1, #0x0                   	// #0
    3aec:	ldr	x0, [sp, #128]
    3af0:	bl	35fc <S_jmpenv_run>
    3af4:	str	w0, [sp, #80]
    3af8:	mov	x0, #0x0                   	// #0
    3afc:	bl	2a30 <S_block_most_signals>
    3b00:	ldr	x0, [sp, #128]
    3b04:	ldr	x0, [x0]
    3b08:	str	x0, [sp, #104]
    3b0c:	ldr	w0, [sp, #56]
    3b10:	sub	w0, w0, #0x1
    3b14:	str	w0, [sp, #64]
    3b18:	b	3b84 <S_ithread_run+0x398>
    3b1c:	ldr	x0, [sp, #104]
    3b20:	sub	x1, x0, #0x8
    3b24:	str	x1, [sp, #104]
    3b28:	ldr	x0, [x0]
    3b2c:	str	x0, [sp, #168]
    3b30:	ldr	w0, [sp, #80]
    3b34:	cmp	w0, #0x0
    3b38:	b.ne	3b78 <S_ithread_run+0x38c>  // b.any
    3b3c:	ldr	x0, [sp, #120]
    3b40:	ldr	w0, [x0, #88]
    3b44:	and	w0, w0, #0x3
    3b48:	cmp	w0, #0x1
    3b4c:	b.eq	3b78 <S_ithread_run+0x38c>  // b.none
    3b50:	ldrsw	x19, [sp, #64]
    3b54:	ldr	x0, [sp, #168]
    3b58:	str	x0, [sp, #176]
    3b5c:	ldr	x0, [sp, #176]
    3b60:	bl	2908 <S_SvREFCNT_inc>
    3b64:	mov	x3, x0
    3b68:	mov	x2, x19
    3b6c:	ldr	x1, [sp, #152]
    3b70:	ldr	x0, [sp, #128]
    3b74:	bl	2320 <Perl_av_store@plt>
    3b78:	ldr	w0, [sp, #64]
    3b7c:	sub	w0, w0, #0x1
    3b80:	str	w0, [sp, #64]
    3b84:	ldr	w0, [sp, #64]
    3b88:	cmp	w0, #0x0
    3b8c:	b.ge	3b1c <S_ithread_run+0x330>  // b.tcont
    3b90:	ldr	x0, [sp, #128]
    3b94:	ldr	x1, [x0, #80]
    3b98:	ldr	x0, [sp, #128]
    3b9c:	ldr	x0, [x0, #88]
    3ba0:	cmp	x1, x0
    3ba4:	b.le	3bb0 <S_ithread_run+0x3c4>
    3ba8:	ldr	x0, [sp, #128]
    3bac:	bl	25f0 <Perl_free_tmps@plt>
    3bb0:	ldr	x0, [sp, #128]
    3bb4:	bl	2250 <Perl_pop_scope@plt>
    3bb8:	ldr	x0, [sp, #128]
    3bbc:	ldr	x0, [x0, #1744]
    3bc0:	ldr	x0, [x0, #16]
    3bc4:	ldr	x0, [x0]
    3bc8:	cmp	x0, #0x0
    3bcc:	b.eq	3be0 <S_ithread_run+0x3f4>  // b.none
    3bd0:	ldr	x0, [sp, #128]
    3bd4:	ldr	x0, [x0, #1744]
    3bd8:	ldr	x0, [x0, #16]
    3bdc:	b	3bfc <S_ithread_run+0x410>
    3be0:	ldr	x0, [sp, #128]
    3be4:	ldr	x0, [x0, #1744]
    3be8:	mov	w2, #0x0                   	// #0
    3bec:	mov	x1, x0
    3bf0:	ldr	x0, [sp, #128]
    3bf4:	bl	26f0 <Perl_gv_add_by_type@plt>
    3bf8:	ldr	x0, [x0, #16]
    3bfc:	ldr	x0, [x0]
    3c00:	cmp	x0, #0x0
    3c04:	cset	w0, ne  // ne = any
    3c08:	and	w0, w0, #0xff
    3c0c:	and	x0, x0, #0xff
    3c10:	cmp	x0, #0x0
    3c14:	b.eq	4564 <S_ithread_run+0xd78>  // b.none
    3c18:	ldr	x0, [sp, #128]
    3c1c:	ldr	x0, [x0, #1744]
    3c20:	ldr	x0, [x0, #16]
    3c24:	ldr	x0, [x0]
    3c28:	cmp	x0, #0x0
    3c2c:	b.eq	3c40 <S_ithread_run+0x454>  // b.none
    3c30:	ldr	x0, [sp, #128]
    3c34:	ldr	x0, [x0, #1744]
    3c38:	ldr	x0, [x0, #16]
    3c3c:	b	3c5c <S_ithread_run+0x470>
    3c40:	ldr	x0, [sp, #128]
    3c44:	ldr	x0, [x0, #1744]
    3c48:	mov	w2, #0x0                   	// #0
    3c4c:	mov	x1, x0
    3c50:	ldr	x0, [sp, #128]
    3c54:	bl	26f0 <Perl_gv_add_by_type@plt>
    3c58:	ldr	x0, [x0, #16]
    3c5c:	ldr	x0, [x0]
    3c60:	ldr	w0, [x0, #12]
    3c64:	and	w0, w0, #0x200000
    3c68:	cmp	w0, #0x0
    3c6c:	cset	w0, ne  // ne = any
    3c70:	and	w0, w0, #0xff
    3c74:	and	x0, x0, #0xff
    3c78:	cmp	x0, #0x0
    3c7c:	b.eq	3cdc <S_ithread_run+0x4f0>  // b.none
    3c80:	ldr	x0, [sp, #128]
    3c84:	ldr	x0, [x0, #1744]
    3c88:	ldr	x0, [x0, #16]
    3c8c:	ldr	x0, [x0]
    3c90:	cmp	x0, #0x0
    3c94:	b.eq	3ca8 <S_ithread_run+0x4bc>  // b.none
    3c98:	ldr	x0, [sp, #128]
    3c9c:	ldr	x0, [x0, #1744]
    3ca0:	ldr	x0, [x0, #16]
    3ca4:	b	3cc4 <S_ithread_run+0x4d8>
    3ca8:	ldr	x0, [sp, #128]
    3cac:	ldr	x0, [x0, #1744]
    3cb0:	mov	w2, #0x0                   	// #0
    3cb4:	mov	x1, x0
    3cb8:	ldr	x0, [sp, #128]
    3cbc:	bl	26f0 <Perl_gv_add_by_type@plt>
    3cc0:	ldr	x0, [x0, #16]
    3cc4:	ldr	x0, [x0]
    3cc8:	mov	x1, x0
    3ccc:	ldr	x0, [sp, #128]
    3cd0:	bl	2560 <Perl_mg_get@plt>
    3cd4:	cmp	w0, #0x0
    3cd8:	nop
    3cdc:	ldr	x0, [sp, #128]
    3ce0:	ldr	x0, [x0, #1744]
    3ce4:	ldr	x0, [x0, #16]
    3ce8:	ldr	x0, [x0]
    3cec:	cmp	x0, #0x0
    3cf0:	b.eq	3d04 <S_ithread_run+0x518>  // b.none
    3cf4:	ldr	x0, [sp, #128]
    3cf8:	ldr	x0, [x0, #1744]
    3cfc:	ldr	x0, [x0, #16]
    3d00:	b	3d20 <S_ithread_run+0x534>
    3d04:	ldr	x0, [sp, #128]
    3d08:	ldr	x0, [x0, #1744]
    3d0c:	mov	w2, #0x0                   	// #0
    3d10:	mov	x1, x0
    3d14:	ldr	x0, [sp, #128]
    3d18:	bl	26f0 <Perl_gv_add_by_type@plt>
    3d1c:	ldr	x0, [x0, #16]
    3d20:	ldr	x1, [x0]
    3d24:	ldr	x0, [sp, #128]
    3d28:	add	x0, x0, #0x138
    3d2c:	sub	x0, x1, x0
    3d30:	asr	x1, x0, #3
    3d34:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3d38:	movk	x0, #0xaaab
    3d3c:	mul	x0, x1, x0
    3d40:	cmp	x0, #0x3
    3d44:	b.hi	3da8 <S_ithread_run+0x5bc>  // b.pmore
    3d48:	ldr	x0, [sp, #128]
    3d4c:	ldr	x0, [x0, #1744]
    3d50:	ldr	x0, [x0, #16]
    3d54:	ldr	x0, [x0]
    3d58:	cmp	x0, #0x0
    3d5c:	b.eq	3d70 <S_ithread_run+0x584>  // b.none
    3d60:	ldr	x0, [sp, #128]
    3d64:	ldr	x0, [x0, #1744]
    3d68:	ldr	x0, [x0, #16]
    3d6c:	b	3d8c <S_ithread_run+0x5a0>
    3d70:	ldr	x0, [sp, #128]
    3d74:	ldr	x0, [x0, #1744]
    3d78:	mov	w2, #0x0                   	// #0
    3d7c:	mov	x1, x0
    3d80:	ldr	x0, [sp, #128]
    3d84:	bl	26f0 <Perl_gv_add_by_type@plt>
    3d88:	ldr	x0, [x0, #16]
    3d8c:	ldr	x1, [x0]
    3d90:	ldr	x0, [sp, #128]
    3d94:	add	x0, x0, #0x138
    3d98:	cmp	x1, x0
    3d9c:	cset	w0, eq  // eq = none
    3da0:	and	w0, w0, #0xff
    3da4:	b	4220 <S_ithread_run+0xa34>
    3da8:	ldr	x0, [sp, #128]
    3dac:	ldr	x0, [x0, #1744]
    3db0:	ldr	x0, [x0, #16]
    3db4:	ldr	x0, [x0]
    3db8:	cmp	x0, #0x0
    3dbc:	b.eq	3dd0 <S_ithread_run+0x5e4>  // b.none
    3dc0:	ldr	x0, [sp, #128]
    3dc4:	ldr	x0, [x0, #1744]
    3dc8:	ldr	x0, [x0, #16]
    3dcc:	b	3dec <S_ithread_run+0x600>
    3dd0:	ldr	x0, [sp, #128]
    3dd4:	ldr	x0, [x0, #1744]
    3dd8:	mov	w2, #0x0                   	// #0
    3ddc:	mov	x1, x0
    3de0:	ldr	x0, [sp, #128]
    3de4:	bl	26f0 <Perl_gv_add_by_type@plt>
    3de8:	ldr	x0, [x0, #16]
    3dec:	ldr	x0, [x0]
    3df0:	ldr	w0, [x0, #12]
    3df4:	and	w0, w0, #0xff00
    3df8:	cmp	w0, #0x0
    3dfc:	b.eq	421c <S_ithread_run+0xa30>  // b.none
    3e00:	ldr	x0, [sp, #128]
    3e04:	ldr	x0, [x0, #1744]
    3e08:	ldr	x0, [x0, #16]
    3e0c:	ldr	x0, [x0]
    3e10:	cmp	x0, #0x0
    3e14:	b.eq	3e28 <S_ithread_run+0x63c>  // b.none
    3e18:	ldr	x0, [sp, #128]
    3e1c:	ldr	x0, [x0, #1744]
    3e20:	ldr	x0, [x0, #16]
    3e24:	b	3e44 <S_ithread_run+0x658>
    3e28:	ldr	x0, [sp, #128]
    3e2c:	ldr	x0, [x0, #1744]
    3e30:	mov	w2, #0x0                   	// #0
    3e34:	mov	x1, x0
    3e38:	ldr	x0, [sp, #128]
    3e3c:	bl	26f0 <Perl_gv_add_by_type@plt>
    3e40:	ldr	x0, [x0, #16]
    3e44:	ldr	x0, [x0]
    3e48:	ldr	w0, [x0, #12]
    3e4c:	and	w0, w0, #0x400
    3e50:	cmp	w0, #0x0
    3e54:	b.eq	3fd0 <S_ithread_run+0x7e4>  // b.none
    3e58:	ldr	x0, [sp, #128]
    3e5c:	ldr	x0, [x0, #1744]
    3e60:	ldr	x0, [x0, #16]
    3e64:	ldr	x0, [x0]
    3e68:	cmp	x0, #0x0
    3e6c:	b.eq	3e80 <S_ithread_run+0x694>  // b.none
    3e70:	ldr	x0, [sp, #128]
    3e74:	ldr	x0, [x0, #1744]
    3e78:	ldr	x0, [x0, #16]
    3e7c:	b	3e9c <S_ithread_run+0x6b0>
    3e80:	ldr	x0, [sp, #128]
    3e84:	ldr	x0, [x0, #1744]
    3e88:	mov	w2, #0x0                   	// #0
    3e8c:	mov	x1, x0
    3e90:	ldr	x0, [sp, #128]
    3e94:	bl	26f0 <Perl_gv_add_by_type@plt>
    3e98:	ldr	x0, [x0, #16]
    3e9c:	ldr	x0, [x0]
    3ea0:	ldr	x0, [x0]
    3ea4:	cmp	x0, #0x0
    3ea8:	b.eq	3fbc <S_ithread_run+0x7d0>  // b.none
    3eac:	ldr	x0, [sp, #128]
    3eb0:	ldr	x0, [x0, #1744]
    3eb4:	ldr	x0, [x0, #16]
    3eb8:	ldr	x0, [x0]
    3ebc:	cmp	x0, #0x0
    3ec0:	b.eq	3ed4 <S_ithread_run+0x6e8>  // b.none
    3ec4:	ldr	x0, [sp, #128]
    3ec8:	ldr	x0, [x0, #1744]
    3ecc:	ldr	x0, [x0, #16]
    3ed0:	b	3ef0 <S_ithread_run+0x704>
    3ed4:	ldr	x0, [sp, #128]
    3ed8:	ldr	x0, [x0, #1744]
    3edc:	mov	w2, #0x0                   	// #0
    3ee0:	mov	x1, x0
    3ee4:	ldr	x0, [sp, #128]
    3ee8:	bl	26f0 <Perl_gv_add_by_type@plt>
    3eec:	ldr	x0, [x0, #16]
    3ef0:	ldr	x0, [x0]
    3ef4:	ldr	x0, [x0]
    3ef8:	ldr	x0, [x0, #16]
    3efc:	cmp	x0, #0x1
    3f00:	b.hi	3fb4 <S_ithread_run+0x7c8>  // b.pmore
    3f04:	ldr	x0, [sp, #128]
    3f08:	ldr	x0, [x0, #1744]
    3f0c:	ldr	x0, [x0, #16]
    3f10:	ldr	x0, [x0]
    3f14:	cmp	x0, #0x0
    3f18:	b.eq	3f2c <S_ithread_run+0x740>  // b.none
    3f1c:	ldr	x0, [sp, #128]
    3f20:	ldr	x0, [x0, #1744]
    3f24:	ldr	x0, [x0, #16]
    3f28:	b	3f48 <S_ithread_run+0x75c>
    3f2c:	ldr	x0, [sp, #128]
    3f30:	ldr	x0, [x0, #1744]
    3f34:	mov	w2, #0x0                   	// #0
    3f38:	mov	x1, x0
    3f3c:	ldr	x0, [sp, #128]
    3f40:	bl	26f0 <Perl_gv_add_by_type@plt>
    3f44:	ldr	x0, [x0, #16]
    3f48:	ldr	x0, [x0]
    3f4c:	ldr	x0, [x0]
    3f50:	ldr	x0, [x0, #16]
    3f54:	cmp	x0, #0x0
    3f58:	b.eq	3fbc <S_ithread_run+0x7d0>  // b.none
    3f5c:	ldr	x0, [sp, #128]
    3f60:	ldr	x0, [x0, #1744]
    3f64:	ldr	x0, [x0, #16]
    3f68:	ldr	x0, [x0]
    3f6c:	cmp	x0, #0x0
    3f70:	b.eq	3f84 <S_ithread_run+0x798>  // b.none
    3f74:	ldr	x0, [sp, #128]
    3f78:	ldr	x0, [x0, #1744]
    3f7c:	ldr	x0, [x0, #16]
    3f80:	b	3fa0 <S_ithread_run+0x7b4>
    3f84:	ldr	x0, [sp, #128]
    3f88:	ldr	x0, [x0, #1744]
    3f8c:	mov	w2, #0x0                   	// #0
    3f90:	mov	x1, x0
    3f94:	ldr	x0, [sp, #128]
    3f98:	bl	26f0 <Perl_gv_add_by_type@plt>
    3f9c:	ldr	x0, [x0, #16]
    3fa0:	ldr	x0, [x0]
    3fa4:	ldr	x0, [x0, #16]
    3fa8:	ldrb	w0, [x0]
    3fac:	cmp	w0, #0x30
    3fb0:	b.eq	3fbc <S_ithread_run+0x7d0>  // b.none
    3fb4:	mov	w0, #0x1                   	// #1
    3fb8:	b	3fc0 <S_ithread_run+0x7d4>
    3fbc:	mov	w0, #0x0                   	// #0
    3fc0:	cmp	w0, #0x0
    3fc4:	cset	w0, ne  // ne = any
    3fc8:	and	w0, w0, #0xff
    3fcc:	b	4220 <S_ithread_run+0xa34>
    3fd0:	ldr	x0, [sp, #128]
    3fd4:	ldr	x0, [x0, #1744]
    3fd8:	ldr	x0, [x0, #16]
    3fdc:	ldr	x0, [x0]
    3fe0:	cmp	x0, #0x0
    3fe4:	b.eq	3ff8 <S_ithread_run+0x80c>  // b.none
    3fe8:	ldr	x0, [sp, #128]
    3fec:	ldr	x0, [x0, #1744]
    3ff0:	ldr	x0, [x0, #16]
    3ff4:	b	4014 <S_ithread_run+0x828>
    3ff8:	ldr	x0, [sp, #128]
    3ffc:	ldr	x0, [x0, #1744]
    4000:	mov	w2, #0x0                   	// #0
    4004:	mov	x1, x0
    4008:	ldr	x0, [sp, #128]
    400c:	bl	26f0 <Perl_gv_add_by_type@plt>
    4010:	ldr	x0, [x0, #16]
    4014:	ldr	x0, [x0]
    4018:	ldr	w0, [x0, #12]
    401c:	and	w0, w0, #0x100
    4020:	cmp	w0, #0x0
    4024:	b.eq	4088 <S_ithread_run+0x89c>  // b.none
    4028:	ldr	x0, [sp, #128]
    402c:	ldr	x0, [x0, #1744]
    4030:	ldr	x0, [x0, #16]
    4034:	ldr	x0, [x0]
    4038:	cmp	x0, #0x0
    403c:	b.eq	4050 <S_ithread_run+0x864>  // b.none
    4040:	ldr	x0, [sp, #128]
    4044:	ldr	x0, [x0, #1744]
    4048:	ldr	x0, [x0, #16]
    404c:	b	406c <S_ithread_run+0x880>
    4050:	ldr	x0, [sp, #128]
    4054:	ldr	x0, [x0, #1744]
    4058:	mov	w2, #0x0                   	// #0
    405c:	mov	x1, x0
    4060:	ldr	x0, [sp, #128]
    4064:	bl	26f0 <Perl_gv_add_by_type@plt>
    4068:	ldr	x0, [x0, #16]
    406c:	ldr	x0, [x0]
    4070:	ldr	x0, [x0]
    4074:	ldr	x0, [x0, #32]
    4078:	cmp	x0, #0x0
    407c:	cset	w0, ne  // ne = any
    4080:	and	w0, w0, #0xff
    4084:	b	4220 <S_ithread_run+0xa34>
    4088:	ldr	x0, [sp, #128]
    408c:	ldr	x0, [x0, #1744]
    4090:	ldr	x0, [x0, #16]
    4094:	ldr	x0, [x0]
    4098:	cmp	x0, #0x0
    409c:	b.eq	40b0 <S_ithread_run+0x8c4>  // b.none
    40a0:	ldr	x0, [sp, #128]
    40a4:	ldr	x0, [x0, #1744]
    40a8:	ldr	x0, [x0, #16]
    40ac:	b	40cc <S_ithread_run+0x8e0>
    40b0:	ldr	x0, [sp, #128]
    40b4:	ldr	x0, [x0, #1744]
    40b8:	mov	w2, #0x0                   	// #0
    40bc:	mov	x1, x0
    40c0:	ldr	x0, [sp, #128]
    40c4:	bl	26f0 <Perl_gv_add_by_type@plt>
    40c8:	ldr	x0, [x0, #16]
    40cc:	ldr	x0, [x0]
    40d0:	ldr	w0, [x0, #12]
    40d4:	and	w0, w0, #0x800
    40d8:	cmp	w0, #0x0
    40dc:	b.eq	41a0 <S_ithread_run+0x9b4>  // b.none
    40e0:	ldr	x0, [sp, #128]
    40e4:	ldr	x0, [x0, #1744]
    40e8:	ldr	x0, [x0, #16]
    40ec:	ldr	x0, [x0]
    40f0:	cmp	x0, #0x0
    40f4:	b.eq	4108 <S_ithread_run+0x91c>  // b.none
    40f8:	ldr	x0, [sp, #128]
    40fc:	ldr	x0, [x0, #1744]
    4100:	ldr	x0, [x0, #16]
    4104:	b	4124 <S_ithread_run+0x938>
    4108:	ldr	x0, [sp, #128]
    410c:	ldr	x0, [x0, #1744]
    4110:	mov	w2, #0x0                   	// #0
    4114:	mov	x1, x0
    4118:	ldr	x0, [sp, #128]
    411c:	bl	26f0 <Perl_gv_add_by_type@plt>
    4120:	ldr	x0, [x0, #16]
    4124:	ldr	x0, [x0]
    4128:	ldr	x0, [x0, #16]
    412c:	ldr	w0, [x0, #12]
    4130:	and	w0, w0, #0x100000
    4134:	cmp	w0, #0x0
    4138:	b.eq	4204 <S_ithread_run+0xa18>  // b.none
    413c:	ldr	x0, [sp, #128]
    4140:	ldr	x0, [x0, #1744]
    4144:	ldr	x0, [x0, #16]
    4148:	ldr	x0, [x0]
    414c:	cmp	x0, #0x0
    4150:	b.eq	4164 <S_ithread_run+0x978>  // b.none
    4154:	ldr	x0, [sp, #128]
    4158:	ldr	x0, [x0, #1744]
    415c:	ldr	x0, [x0, #16]
    4160:	b	4180 <S_ithread_run+0x994>
    4164:	ldr	x0, [sp, #128]
    4168:	ldr	x0, [x0, #1744]
    416c:	mov	w2, #0x0                   	// #0
    4170:	mov	x1, x0
    4174:	ldr	x0, [sp, #128]
    4178:	bl	26f0 <Perl_gv_add_by_type@plt>
    417c:	ldr	x0, [x0, #16]
    4180:	ldr	x0, [x0]
    4184:	ldr	x0, [x0, #16]
    4188:	ldr	x0, [x0]
    418c:	ldr	x0, [x0]
    4190:	ldr	w0, [x0, #12]
    4194:	and	w0, w0, #0x10000000
    4198:	cmp	w0, #0x0
    419c:	b.eq	4204 <S_ithread_run+0xa18>  // b.none
    41a0:	ldr	x0, [sp, #128]
    41a4:	ldr	x0, [x0, #1744]
    41a8:	ldr	x0, [x0, #16]
    41ac:	ldr	x0, [x0]
    41b0:	cmp	x0, #0x0
    41b4:	b.eq	41c8 <S_ithread_run+0x9dc>  // b.none
    41b8:	ldr	x0, [sp, #128]
    41bc:	ldr	x0, [x0, #1744]
    41c0:	ldr	x0, [x0, #16]
    41c4:	b	41e4 <S_ithread_run+0x9f8>
    41c8:	ldr	x0, [sp, #128]
    41cc:	ldr	x0, [x0, #1744]
    41d0:	mov	w2, #0x0                   	// #0
    41d4:	mov	x1, x0
    41d8:	ldr	x0, [sp, #128]
    41dc:	bl	26f0 <Perl_gv_add_by_type@plt>
    41e0:	ldr	x0, [x0, #16]
    41e4:	ldr	x0, [x0]
    41e8:	mov	w2, #0x0                   	// #0
    41ec:	mov	x1, x0
    41f0:	ldr	x0, [sp, #128]
    41f4:	bl	2180 <Perl_sv_2bool_flags@plt>
    41f8:	and	w0, w0, #0xff
    41fc:	cmp	w0, #0x0
    4200:	b.eq	420c <S_ithread_run+0xa20>  // b.none
    4204:	mov	w0, #0x1                   	// #1
    4208:	b	4210 <S_ithread_run+0xa24>
    420c:	mov	w0, #0x0                   	// #0
    4210:	and	w0, w0, #0x1
    4214:	and	w0, w0, #0xff
    4218:	b	4220 <S_ithread_run+0xa34>
    421c:	mov	w0, #0x0                   	// #0
    4220:	cmp	w0, #0x0
    4224:	b.eq	4564 <S_ithread_run+0xd78>  // b.none
    4228:	mov	w0, #0x20                  	// #32
    422c:	str	w0, [sp, #60]
    4230:	ldr	x0, [sp, #128]
    4234:	ldr	x0, [x0, #1744]
    4238:	ldr	x0, [x0, #16]
    423c:	ldr	x0, [x0]
    4240:	cmp	x0, #0x0
    4244:	b.eq	4258 <S_ithread_run+0xa6c>  // b.none
    4248:	ldr	x0, [sp, #128]
    424c:	ldr	x0, [x0, #1744]
    4250:	ldr	x0, [x0, #16]
    4254:	b	4274 <S_ithread_run+0xa88>
    4258:	ldr	x0, [sp, #128]
    425c:	ldr	x0, [x0, #1744]
    4260:	mov	w2, #0x0                   	// #0
    4264:	mov	x1, x0
    4268:	ldr	x0, [sp, #128]
    426c:	bl	26f0 <Perl_gv_add_by_type@plt>
    4270:	ldr	x0, [x0, #16]
    4274:	ldr	x0, [x0]
    4278:	mov	w2, #0x12                  	// #18
    427c:	mov	x1, x0
    4280:	ldr	x0, [sp, #128]
    4284:	bl	2710 <Perl_newSVsv_flags@plt>
    4288:	mov	x1, x0
    428c:	ldr	x0, [sp, #120]
    4290:	str	x1, [x0, #128]
    4294:	ldr	x0, [sp, #120]
    4298:	ldr	x0, [x0, #128]
    429c:	mov	x1, x0
    42a0:	ldr	x0, [sp, #128]
    42a4:	bl	2430 <Perl_sv_isobject@plt>
    42a8:	cmp	w0, #0x0
    42ac:	b.eq	4528 <S_ithread_run+0xd3c>  // b.none
    42b0:	ldr	x0, [sp, #120]
    42b4:	ldr	x0, [x0, #128]
    42b8:	ldr	x0, [x0, #16]
    42bc:	ldr	x0, [x0]
    42c0:	ldr	x0, [x0]
    42c4:	ldr	w0, [x0, #12]
    42c8:	and	w0, w0, #0x2000000
    42cc:	cmp	w0, #0x0
    42d0:	b.eq	44f0 <S_ithread_run+0xd04>  // b.none
    42d4:	ldr	x0, [sp, #120]
    42d8:	ldr	x0, [x0, #128]
    42dc:	ldr	x0, [x0, #16]
    42e0:	ldr	x0, [x0]
    42e4:	ldr	x0, [x0]
    42e8:	ldr	x1, [x0, #16]
    42ec:	ldr	x0, [sp, #120]
    42f0:	ldr	x0, [x0, #128]
    42f4:	ldr	x0, [x0, #16]
    42f8:	ldr	x0, [x0]
    42fc:	ldr	x0, [x0]
    4300:	ldr	x0, [x0]
    4304:	ldr	x0, [x0, #24]
    4308:	add	x0, x0, #0x1
    430c:	lsl	x0, x0, #3
    4310:	add	x0, x1, x0
    4314:	ldr	x0, [x0]
    4318:	cmp	x0, #0x0
    431c:	b.eq	44f0 <S_ithread_run+0xd04>  // b.none
    4320:	ldr	x0, [sp, #120]
    4324:	ldr	x0, [x0, #128]
    4328:	ldr	x0, [x0, #16]
    432c:	ldr	x0, [x0]
    4330:	ldr	x0, [x0]
    4334:	ldr	x1, [x0, #16]
    4338:	ldr	x0, [sp, #120]
    433c:	ldr	x0, [x0, #128]
    4340:	ldr	x0, [x0, #16]
    4344:	ldr	x0, [x0]
    4348:	ldr	x0, [x0]
    434c:	ldr	x0, [x0]
    4350:	ldr	x0, [x0, #24]
    4354:	add	x0, x0, #0x1
    4358:	lsl	x0, x0, #3
    435c:	add	x0, x1, x0
    4360:	ldr	w0, [x0, #28]
    4364:	cmp	w0, #0x0
    4368:	b.eq	43c0 <S_ithread_run+0xbd4>  // b.none
    436c:	ldr	x0, [sp, #120]
    4370:	ldr	x0, [x0, #128]
    4374:	ldr	x0, [x0, #16]
    4378:	ldr	x0, [x0]
    437c:	ldr	x0, [x0]
    4380:	ldr	x1, [x0, #16]
    4384:	ldr	x0, [sp, #120]
    4388:	ldr	x0, [x0, #128]
    438c:	ldr	x0, [x0, #16]
    4390:	ldr	x0, [x0]
    4394:	ldr	x0, [x0]
    4398:	ldr	x0, [x0]
    439c:	ldr	x0, [x0, #24]
    43a0:	add	x0, x0, #0x1
    43a4:	lsl	x0, x0, #3
    43a8:	add	x0, x1, x0
    43ac:	ldr	x0, [x0]
    43b0:	ldr	x0, [x0]
    43b4:	cmp	x0, #0x0
    43b8:	b.ne	440c <S_ithread_run+0xc20>  // b.any
    43bc:	b	44f0 <S_ithread_run+0xd04>
    43c0:	ldr	x0, [sp, #120]
    43c4:	ldr	x0, [x0, #128]
    43c8:	ldr	x0, [x0, #16]
    43cc:	ldr	x0, [x0]
    43d0:	ldr	x0, [x0]
    43d4:	ldr	x1, [x0, #16]
    43d8:	ldr	x0, [sp, #120]
    43dc:	ldr	x0, [x0, #128]
    43e0:	ldr	x0, [x0, #16]
    43e4:	ldr	x0, [x0]
    43e8:	ldr	x0, [x0]
    43ec:	ldr	x0, [x0]
    43f0:	ldr	x0, [x0, #24]
    43f4:	add	x0, x0, #0x1
    43f8:	lsl	x0, x0, #3
    43fc:	add	x0, x1, x0
    4400:	ldr	x0, [x0]
    4404:	cmp	x0, #0x0
    4408:	b.eq	44f0 <S_ithread_run+0xd04>  // b.none
    440c:	ldr	x0, [sp, #120]
    4410:	ldr	x0, [x0, #128]
    4414:	ldr	x0, [x0, #16]
    4418:	ldr	x0, [x0]
    441c:	ldr	x0, [x0]
    4420:	ldr	x1, [x0, #16]
    4424:	ldr	x0, [sp, #120]
    4428:	ldr	x0, [x0, #128]
    442c:	ldr	x0, [x0, #16]
    4430:	ldr	x0, [x0]
    4434:	ldr	x0, [x0]
    4438:	ldr	x0, [x0]
    443c:	ldr	x0, [x0, #24]
    4440:	add	x0, x0, #0x1
    4444:	lsl	x0, x0, #3
    4448:	add	x0, x1, x0
    444c:	ldr	w0, [x0, #28]
    4450:	cmp	w0, #0x0
    4454:	b.eq	44a4 <S_ithread_run+0xcb8>  // b.none
    4458:	ldr	x0, [sp, #120]
    445c:	ldr	x0, [x0, #128]
    4460:	ldr	x0, [x0, #16]
    4464:	ldr	x0, [x0]
    4468:	ldr	x0, [x0]
    446c:	ldr	x1, [x0, #16]
    4470:	ldr	x0, [sp, #120]
    4474:	ldr	x0, [x0, #128]
    4478:	ldr	x0, [x0, #16]
    447c:	ldr	x0, [x0]
    4480:	ldr	x0, [x0]
    4484:	ldr	x0, [x0]
    4488:	ldr	x0, [x0, #24]
    448c:	add	x0, x0, #0x1
    4490:	lsl	x0, x0, #3
    4494:	add	x0, x1, x0
    4498:	ldr	x0, [x0]
    449c:	ldr	x0, [x0]
    44a0:	b	44e8 <S_ithread_run+0xcfc>
    44a4:	ldr	x0, [sp, #120]
    44a8:	ldr	x0, [x0, #128]
    44ac:	ldr	x0, [x0, #16]
    44b0:	ldr	x0, [x0]
    44b4:	ldr	x0, [x0]
    44b8:	ldr	x1, [x0, #16]
    44bc:	ldr	x0, [sp, #120]
    44c0:	ldr	x0, [x0, #128]
    44c4:	ldr	x0, [x0, #16]
    44c8:	ldr	x0, [x0]
    44cc:	ldr	x0, [x0]
    44d0:	ldr	x0, [x0]
    44d4:	ldr	x0, [x0, #24]
    44d8:	add	x0, x0, #0x1
    44dc:	lsl	x0, x0, #3
    44e0:	add	x0, x1, x0
    44e4:	ldr	x0, [x0]
    44e8:	add	x0, x0, #0x8
    44ec:	b	44f4 <S_ithread_run+0xd08>
    44f0:	mov	x0, #0x0                   	// #0
    44f4:	ldr	x1, [sp, #120]
    44f8:	str	x0, [x1, #136]
    44fc:	ldr	x0, [sp, #120]
    4500:	ldr	x19, [x0, #128]
    4504:	mov	w2, #0x0                   	// #0
    4508:	adrp	x0, a000 <XS_threads_error+0x190>
    450c:	add	x1, x0, #0x8d0
    4510:	ldr	x0, [sp, #128]
    4514:	bl	24b0 <Perl_gv_stashpv@plt>
    4518:	mov	x2, x0
    451c:	mov	x1, x19
    4520:	ldr	x0, [sp, #128]
    4524:	bl	2330 <Perl_sv_bless@plt>
    4528:	mov	w1, #0x28                  	// #40
    452c:	ldr	x0, [sp, #128]
    4530:	bl	2400 <Perl_ckwarn_d@plt>
    4534:	and	w0, w0, #0xff
    4538:	cmp	w0, #0x0
    453c:	b.eq	4564 <S_ithread_run+0xd78>  // b.none
    4540:	add	x1, sp, #0x34
    4544:	add	x0, sp, #0x30
    4548:	mov	x5, x1
    454c:	mov	x4, x0
    4550:	mov	x3, #0x0                   	// #0
    4554:	ldr	x2, [sp, #120]
    4558:	mov	w1, #0x1                   	// #1
    455c:	ldr	x0, [sp, #128]
    4560:	bl	35fc <S_jmpenv_run>
    4564:	ldr	x0, [sp, #120]
    4568:	ldr	x0, [x0, #96]
    456c:	str	x0, [sp, #160]
    4570:	ldr	x0, [sp, #160]
    4574:	mov	x1, x0
    4578:	ldr	x0, [sp, #128]
    457c:	bl	2990 <S_SvREFCNT_dec>
    4580:	ldr	x0, [sp, #120]
    4584:	str	xzr, [x0, #96]
    4588:	mov	x1, #0x0                   	// #0
    458c:	ldr	x0, [sp, #128]
    4590:	bl	2410 <Perl_PerlIO_flush@plt>
    4594:	ldr	x0, [sp, #144]
    4598:	add	x0, x0, #0x110
    459c:	bl	2720 <pthread_mutex_lock@plt>
    45a0:	str	w0, [sp, #84]
    45a4:	ldr	w0, [sp, #84]
    45a8:	cmp	w0, #0x0
    45ac:	b.eq	45cc <S_ithread_run+0xde0>  // b.none
    45b0:	mov	w3, #0x28b                 	// #651
    45b4:	adrp	x0, a000 <XS_threads_error+0x190>
    45b8:	add	x2, x0, #0x700
    45bc:	ldr	w1, [sp, #84]
    45c0:	adrp	x0, a000 <XS_threads_error+0x190>
    45c4:	add	x0, x0, #0x778
    45c8:	bl	2510 <Perl_croak_nocontext@plt>
    45cc:	ldr	x0, [sp, #120]
    45d0:	add	x0, x0, #0x20
    45d4:	bl	2720 <pthread_mutex_lock@plt>
    45d8:	str	w0, [sp, #88]
    45dc:	ldr	w0, [sp, #88]
    45e0:	cmp	w0, #0x0
    45e4:	b.eq	4604 <S_ithread_run+0xe18>  // b.none
    45e8:	mov	w3, #0x28c                 	// #652
    45ec:	adrp	x0, a000 <XS_threads_error+0x190>
    45f0:	add	x2, x0, #0x700
    45f4:	ldr	w1, [sp, #88]
    45f8:	adrp	x0, a000 <XS_threads_error+0x190>
    45fc:	add	x0, x0, #0x778
    4600:	bl	2510 <Perl_croak_nocontext@plt>
    4604:	ldr	x0, [sp, #120]
    4608:	ldr	w1, [x0, #84]
    460c:	ldr	w0, [sp, #60]
    4610:	orr	w0, w1, w0
    4614:	orr	w1, w0, #0x4
    4618:	ldr	x0, [sp, #120]
    461c:	str	w1, [x0, #84]
    4620:	ldr	x0, [sp, #120]
    4624:	ldr	w0, [x0, #84]
    4628:	and	w0, w0, #0x8
    462c:	cmp	w0, #0x0
    4630:	b.eq	4638 <S_ithread_run+0xe4c>  // b.none
    4634:	str	wzr, [sp, #48]
    4638:	ldr	x0, [sp, #120]
    463c:	ldr	w0, [x0, #84]
    4640:	and	w0, w0, #0x1
    4644:	cmp	w0, #0x0
    4648:	b.eq	4664 <S_ithread_run+0xe78>  // b.none
    464c:	ldr	x0, [sp, #144]
    4650:	ldr	x0, [x0, #344]
    4654:	sub	x1, x0, #0x1
    4658:	ldr	x0, [sp, #144]
    465c:	str	x1, [x0, #344]
    4660:	b	468c <S_ithread_run+0xea0>
    4664:	ldr	x0, [sp, #144]
    4668:	ldr	x0, [x0, #336]
    466c:	sub	x1, x0, #0x1
    4670:	ldr	x0, [sp, #144]
    4674:	str	x1, [x0, #336]
    4678:	ldr	x0, [sp, #144]
    467c:	ldr	x0, [x0, #328]
    4680:	add	x1, x0, #0x1
    4684:	ldr	x0, [sp, #144]
    4688:	str	x1, [x0, #328]
    468c:	ldr	x0, [sp, #120]
    4690:	add	x0, x0, #0x20
    4694:	bl	2730 <pthread_mutex_unlock@plt>
    4698:	str	w0, [sp, #92]
    469c:	ldr	w0, [sp, #92]
    46a0:	cmp	w0, #0x0
    46a4:	b.eq	46c4 <S_ithread_run+0xed8>  // b.none
    46a8:	mov	w3, #0x29b                 	// #667
    46ac:	adrp	x0, a000 <XS_threads_error+0x190>
    46b0:	add	x2, x0, #0x700
    46b4:	ldr	w1, [sp, #92]
    46b8:	adrp	x0, a000 <XS_threads_error+0x190>
    46bc:	add	x0, x0, #0x750
    46c0:	bl	2510 <Perl_croak_nocontext@plt>
    46c4:	ldr	x0, [sp, #144]
    46c8:	add	x0, x0, #0x110
    46cc:	bl	2730 <pthread_mutex_unlock@plt>
    46d0:	str	w0, [sp, #96]
    46d4:	ldr	w0, [sp, #96]
    46d8:	cmp	w0, #0x0
    46dc:	b.eq	46fc <S_ithread_run+0xf10>  // b.none
    46e0:	mov	w3, #0x29c                 	// #668
    46e4:	adrp	x0, a000 <XS_threads_error+0x190>
    46e8:	add	x2, x0, #0x700
    46ec:	ldr	w1, [sp, #96]
    46f0:	adrp	x0, a000 <XS_threads_error+0x190>
    46f4:	add	x0, x0, #0x750
    46f8:	bl	2510 <Perl_croak_nocontext@plt>
    46fc:	bl	2270 <Perl_thread_locale_term@plt>
    4700:	ldr	w0, [sp, #48]
    4704:	cmp	w0, #0x0
    4708:	b.eq	4740 <S_ithread_run+0xf54>  // b.none
    470c:	add	x1, sp, #0x34
    4710:	add	x0, sp, #0x30
    4714:	mov	x5, x1
    4718:	mov	x4, x0
    471c:	mov	x3, #0x0                   	// #0
    4720:	ldr	x2, [sp, #120]
    4724:	mov	w1, #0x2                   	// #2
    4728:	ldr	x0, [sp, #128]
    472c:	bl	35fc <S_jmpenv_run>
    4730:	ldr	w0, [sp, #52]
    4734:	mov	w1, w0
    4738:	ldr	x0, [sp, #128]
    473c:	bl	23a0 <Perl_my_exit@plt>
    4740:	ldr	x0, [sp, #144]
    4744:	ldr	x0, [x0, #16]
    4748:	str	x0, [sp, #128]
    474c:	ldr	x0, [sp, #120]
    4750:	add	x0, x0, #0x20
    4754:	bl	2720 <pthread_mutex_lock@plt>
    4758:	str	w0, [sp, #100]
    475c:	ldr	w0, [sp, #100]
    4760:	cmp	w0, #0x0
    4764:	b.eq	4784 <S_ithread_run+0xf98>  // b.none
    4768:	mov	w3, #0x2ac                 	// #684
    476c:	adrp	x0, a000 <XS_threads_error+0x190>
    4770:	add	x2, x0, #0x700
    4774:	ldr	w1, [sp, #100]
    4778:	adrp	x0, a000 <XS_threads_error+0x190>
    477c:	add	x0, x0, #0x778
    4780:	bl	2510 <Perl_croak_nocontext@plt>
    4784:	ldr	x1, [sp, #120]
    4788:	ldr	x0, [sp, #128]
    478c:	bl	2cec <S_ithread_free>
    4790:	mov	x0, #0x0                   	// #0
    4794:	mov	x1, x0
    4798:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    479c:	ldr	x0, [x0, #4048]
    47a0:	ldr	x2, [sp, #184]
    47a4:	ldr	x0, [x0]
    47a8:	eor	x0, x2, x0
    47ac:	cmp	x0, #0x0
    47b0:	b.eq	47b8 <S_ithread_run+0xfcc>  // b.none
    47b4:	bl	2420 <__stack_chk_fail@plt>
    47b8:	mov	x0, x1
    47bc:	ldr	x19, [sp, #16]
    47c0:	ldp	x29, x30, [sp], #192
    47c4:	ret

00000000000047c8 <S_ithread_to_SV>:
    47c8:	stp	x29, x30, [sp, #-80]!
    47cc:	mov	x29, sp
    47d0:	str	x0, [sp, #56]
    47d4:	str	x1, [sp, #48]
    47d8:	str	x2, [sp, #40]
    47dc:	str	x3, [sp, #32]
    47e0:	strb	w4, [sp, #31]
    47e4:	ldrb	w0, [sp, #31]
    47e8:	cmp	w0, #0x0
    47ec:	b.eq	47fc <S_ithread_to_SV+0x34>  // b.none
    47f0:	ldr	x1, [sp, #40]
    47f4:	ldr	x0, [sp, #56]
    47f8:	bl	3010 <S_ithread_count_inc>
    47fc:	ldr	x0, [sp, #48]
    4800:	cmp	x0, #0x0
    4804:	b.ne	4818 <S_ithread_to_SV+0x50>  // b.any
    4808:	mov	x1, #0x0                   	// #0
    480c:	ldr	x0, [sp, #56]
    4810:	bl	22a0 <Perl_newSV@plt>
    4814:	str	x0, [sp, #48]
    4818:	ldr	x2, [sp, #32]
    481c:	ldr	x1, [sp, #48]
    4820:	ldr	x0, [sp, #56]
    4824:	bl	2630 <Perl_newSVrv@plt>
    4828:	str	x0, [sp, #64]
    482c:	ldr	x0, [sp, #40]
    4830:	mov	x2, x0
    4834:	ldr	x1, [sp, #64]
    4838:	ldr	x0, [sp, #56]
    483c:	bl	2700 <Perl_sv_setiv@plt>
    4840:	mov	w6, #0x0                   	// #0
    4844:	ldr	x5, [sp, #40]
    4848:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    484c:	add	x4, x0, #0xd70
    4850:	mov	w3, #0x6e                  	// #110
    4854:	mov	x2, #0x0                   	// #0
    4858:	ldr	x1, [sp, #64]
    485c:	ldr	x0, [sp, #56]
    4860:	bl	2220 <Perl_sv_magicext@plt>
    4864:	str	x0, [sp, #72]
    4868:	ldr	x0, [sp, #72]
    486c:	ldrb	w0, [x0, #19]
    4870:	orr	w0, w0, #0x10
    4874:	and	w1, w0, #0xff
    4878:	ldr	x0, [sp, #72]
    487c:	strb	w1, [x0, #19]
    4880:	ldr	x0, [sp, #64]
    4884:	ldr	w0, [x0, #12]
    4888:	orr	w1, w0, #0x8000000
    488c:	ldr	x0, [sp, #64]
    4890:	str	w1, [x0, #12]
    4894:	ldr	x0, [sp, #48]
    4898:	ldp	x29, x30, [sp], #80
    489c:	ret

00000000000048a0 <S_SV_to_ithread>:
    48a0:	stp	x29, x30, [sp, #-32]!
    48a4:	mov	x29, sp
    48a8:	str	x0, [sp, #24]
    48ac:	str	x1, [sp, #16]
    48b0:	ldr	x0, [sp, #16]
    48b4:	ldr	w0, [x0, #12]
    48b8:	and	w0, w0, #0x800
    48bc:	cmp	w0, #0x0
    48c0:	b.eq	4914 <S_SV_to_ithread+0x74>  // b.none
    48c4:	ldr	x0, [sp, #16]
    48c8:	ldr	x0, [x0, #16]
    48cc:	ldr	w1, [x0, #12]
    48d0:	mov	w0, #0x100                 	// #256
    48d4:	movk	w0, #0x20, lsl #16
    48d8:	and	w0, w1, w0
    48dc:	cmp	w0, #0x100
    48e0:	b.ne	48f8 <S_SV_to_ithread+0x58>  // b.any
    48e4:	ldr	x0, [sp, #16]
    48e8:	ldr	x0, [x0, #16]
    48ec:	ldr	x0, [x0]
    48f0:	ldr	x0, [x0, #32]
    48f4:	b	491c <S_SV_to_ithread+0x7c>
    48f8:	ldr	x0, [sp, #16]
    48fc:	ldr	x0, [x0, #16]
    4900:	mov	w2, #0x2                   	// #2
    4904:	mov	x1, x0
    4908:	ldr	x0, [sp, #24]
    490c:	bl	2170 <Perl_sv_2iv_flags@plt>
    4910:	b	491c <S_SV_to_ithread+0x7c>
    4914:	ldr	x0, [sp, #24]
    4918:	bl	2b30 <S_ithread_get>
    491c:	ldp	x29, x30, [sp], #32
    4920:	ret

0000000000004924 <S_ithread_create>:
    4924:	stp	x29, x30, [sp, #-224]!
    4928:	mov	x29, sp
    492c:	str	x0, [sp, #56]
    4930:	str	x1, [sp, #48]
    4934:	str	x2, [sp, #40]
    4938:	str	x3, [sp, #32]
    493c:	str	w4, [sp, #28]
    4940:	str	w5, [sp, #24]
    4944:	str	w6, [sp, #20]
    4948:	str	w7, [sp, #16]
    494c:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    4950:	ldr	x0, [x0, #4048]
    4954:	ldr	x1, [x0]
    4958:	str	x1, [sp, #216]
    495c:	mov	x1, #0x0                   	// #0
    4960:	ldr	x0, [sp, #56]
    4964:	str	x0, [sp, #128]
    4968:	ldr	x0, [sp, #128]
    496c:	bl	2b30 <S_ithread_get>
    4970:	str	x0, [sp, #136]
    4974:	str	wzr, [sp, #68]
    4978:	str	wzr, [sp, #72]
    497c:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    4980:	ldr	x0, [x0, #4024]
    4984:	ldr	w2, [x0]
    4988:	ldr	x0, [sp, #48]
    498c:	ldr	x0, [x0, #16]
    4990:	mov	x1, x0
    4994:	mov	w0, w2
    4998:	bl	2570 <pthread_setspecific@plt>
    499c:	str	w0, [sp, #76]
    49a0:	ldr	w0, [sp, #76]
    49a4:	cmp	w0, #0x0
    49a8:	b.eq	49c8 <S_ithread_create+0xa4>  // b.none
    49ac:	mov	w3, #0x2fd                 	// #765
    49b0:	adrp	x0, a000 <XS_threads_error+0x190>
    49b4:	add	x2, x0, #0x700
    49b8:	ldr	w1, [sp, #76]
    49bc:	adrp	x0, a000 <XS_threads_error+0x190>
    49c0:	add	x0, x0, #0x710
    49c4:	bl	2510 <Perl_croak_nocontext@plt>
    49c8:	mov	x0, #0x110                 	// #272
    49cc:	bl	22e0 <malloc@plt>
    49d0:	str	x0, [sp, #144]
    49d4:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    49d8:	ldr	x0, [x0, #4024]
    49dc:	ldr	w0, [x0]
    49e0:	ldr	x1, [sp, #128]
    49e4:	bl	2570 <pthread_setspecific@plt>
    49e8:	str	w0, [sp, #80]
    49ec:	ldr	w0, [sp, #80]
    49f0:	cmp	w0, #0x0
    49f4:	b.eq	4a14 <S_ithread_create+0xf0>  // b.none
    49f8:	mov	w3, #0x300                 	// #768
    49fc:	adrp	x0, a000 <XS_threads_error+0x190>
    4a00:	add	x2, x0, #0x700
    4a04:	ldr	w1, [sp, #80]
    4a08:	adrp	x0, a000 <XS_threads_error+0x190>
    4a0c:	add	x0, x0, #0x710
    4a10:	bl	2510 <Perl_croak_nocontext@plt>
    4a14:	ldr	x0, [sp, #144]
    4a18:	cmp	x0, #0x0
    4a1c:	b.ne	4b28 <S_ithread_create+0x204>  // b.any
    4a20:	ldr	x0, [sp, #48]
    4a24:	add	x0, x0, #0x110
    4a28:	bl	2730 <pthread_mutex_unlock@plt>
    4a2c:	str	w0, [sp, #104]
    4a30:	ldr	w0, [sp, #104]
    4a34:	cmp	w0, #0x0
    4a38:	b.eq	4a58 <S_ithread_create+0x134>  // b.none
    4a3c:	mov	w3, #0x304                 	// #772
    4a40:	adrp	x0, a000 <XS_threads_error+0x190>
    4a44:	add	x2, x0, #0x700
    4a48:	ldr	w1, [sp, #104]
    4a4c:	adrp	x0, a000 <XS_threads_error+0x190>
    4a50:	add	x0, x0, #0x750
    4a54:	bl	2510 <Perl_croak_nocontext@plt>
    4a58:	ldr	x0, [sp, #128]
    4a5c:	ldr	x0, [x0, #1704]
    4a60:	cmp	x0, #0x0
    4a64:	b.eq	4ad4 <S_ithread_create+0x1b0>  // b.none
    4a68:	ldr	x0, [sp, #128]
    4a6c:	ldr	x0, [x0, #1704]
    4a70:	ldr	w0, [x0, #12]
    4a74:	and	w0, w0, #0xff
    4a78:	cmp	w0, #0x9
    4a7c:	b.ne	4ad4 <S_ithread_create+0x1b0>  // b.any
    4a80:	ldr	x0, [sp, #128]
    4a84:	ldr	x0, [x0, #1704]
    4a88:	ldr	x0, [x0, #16]
    4a8c:	ldr	x0, [x0, #8]
    4a90:	cmp	x0, #0x0
    4a94:	b.eq	4ad4 <S_ithread_create+0x1b0>  // b.none
    4a98:	ldr	x0, [sp, #128]
    4a9c:	ldr	x0, [x0, #1704]
    4aa0:	ldr	x0, [x0, #16]
    4aa4:	ldr	x0, [x0, #8]
    4aa8:	ldr	x0, [x0]
    4aac:	ldr	x0, [x0, #40]
    4ab0:	cmp	x0, #0x0
    4ab4:	b.eq	4ad4 <S_ithread_create+0x1b0>  // b.none
    4ab8:	ldr	x0, [sp, #128]
    4abc:	ldr	x0, [x0, #1704]
    4ac0:	ldr	x0, [x0, #16]
    4ac4:	ldr	x0, [x0, #8]
    4ac8:	ldr	x0, [x0]
    4acc:	ldr	x0, [x0, #40]
    4ad0:	b	4adc <S_ithread_create+0x1b8>
    4ad4:	ldr	x0, [sp, #128]
    4ad8:	bl	26d0 <Perl_PerlIO_stderr@plt>
    4adc:	mov	x1, x0
    4ae0:	ldr	x0, [sp, #128]
    4ae4:	bl	21c0 <Perl_PerlIO_fileno@plt>
    4ae8:	str	w0, [sp, #108]
    4aec:	ldr	w0, [sp, #108]
    4af0:	cmp	w0, #0x0
    4af4:	b.lt	4b1c <S_ithread_create+0x1f8>  // b.tstop
    4af8:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    4afc:	ldr	x0, [x0, #4032]
    4b00:	bl	2190 <strlen@plt>
    4b04:	mov	x2, x0
    4b08:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    4b0c:	ldr	x1, [x0, #4032]
    4b10:	ldr	w0, [sp, #108]
    4b14:	bl	2480 <write@plt>
    4b18:	str	x0, [sp, #208]
    4b1c:	mov	w1, #0x1                   	// #1
    4b20:	ldr	x0, [sp, #128]
    4b24:	bl	23a0 <Perl_my_exit@plt>
    4b28:	mov	x2, #0x110                 	// #272
    4b2c:	mov	w1, #0x0                   	// #0
    4b30:	ldr	x0, [sp, #144]
    4b34:	bl	2360 <memset@plt>
    4b38:	ldr	x1, [sp, #48]
    4b3c:	ldr	x0, [sp, #144]
    4b40:	str	x1, [x0]
    4b44:	ldr	x0, [sp, #48]
    4b48:	ldr	x1, [x0, #8]
    4b4c:	ldr	x0, [sp, #144]
    4b50:	str	x1, [x0, #8]
    4b54:	ldr	x0, [sp, #48]
    4b58:	ldr	x1, [sp, #144]
    4b5c:	str	x1, [x0, #8]
    4b60:	ldr	x0, [sp, #144]
    4b64:	ldr	x0, [x0, #8]
    4b68:	ldr	x1, [sp, #144]
    4b6c:	str	x1, [x0]
    4b70:	ldr	x0, [sp, #48]
    4b74:	ldr	x0, [x0, #352]
    4b78:	add	x1, x0, #0x1
    4b7c:	ldr	x0, [sp, #48]
    4b80:	str	x1, [x0, #352]
    4b84:	ldr	x0, [sp, #144]
    4b88:	mov	w1, #0x3                   	// #3
    4b8c:	str	w1, [x0, #80]
    4b90:	ldr	x0, [sp, #144]
    4b94:	add	x0, x0, #0x20
    4b98:	mov	x1, #0x0                   	// #0
    4b9c:	bl	2440 <pthread_mutex_init@plt>
    4ba0:	str	w0, [sp, #84]
    4ba4:	ldr	w0, [sp, #84]
    4ba8:	cmp	w0, #0x0
    4bac:	b.eq	4bcc <S_ithread_create+0x2a8>  // b.none
    4bb0:	mov	w3, #0x322                 	// #802
    4bb4:	adrp	x0, a000 <XS_threads_error+0x190>
    4bb8:	add	x2, x0, #0x700
    4bbc:	ldr	w1, [sp, #84]
    4bc0:	adrp	x0, a000 <XS_threads_error+0x190>
    4bc4:	add	x0, x0, #0x8d8
    4bc8:	bl	2510 <Perl_croak_nocontext@plt>
    4bcc:	ldr	x0, [sp, #144]
    4bd0:	add	x0, x0, #0x20
    4bd4:	bl	2720 <pthread_mutex_lock@plt>
    4bd8:	str	w0, [sp, #88]
    4bdc:	ldr	w0, [sp, #88]
    4be0:	cmp	w0, #0x0
    4be4:	b.eq	4c04 <S_ithread_create+0x2e0>  // b.none
    4be8:	mov	w3, #0x323                 	// #803
    4bec:	adrp	x0, a000 <XS_threads_error+0x190>
    4bf0:	add	x2, x0, #0x700
    4bf4:	ldr	w1, [sp, #88]
    4bf8:	adrp	x0, a000 <XS_threads_error+0x190>
    4bfc:	add	x0, x0, #0x778
    4c00:	bl	2510 <Perl_croak_nocontext@plt>
    4c04:	ldr	x0, [sp, #48]
    4c08:	ldr	x0, [x0, #320]
    4c0c:	add	x2, x0, #0x1
    4c10:	ldr	x1, [sp, #48]
    4c14:	str	x2, [x1, #320]
    4c18:	ldr	x1, [sp, #144]
    4c1c:	str	x0, [x1, #24]
    4c20:	ldr	x1, [sp, #32]
    4c24:	ldr	x0, [sp, #128]
    4c28:	bl	33f4 <S_good_stack_size>
    4c2c:	mov	x1, x0
    4c30:	ldr	x0, [sp, #144]
    4c34:	str	x1, [x0, #120]
    4c38:	ldr	x0, [sp, #144]
    4c3c:	ldr	w1, [sp, #28]
    4c40:	str	w1, [x0, #88]
    4c44:	ldr	x0, [sp, #144]
    4c48:	ldr	w1, [sp, #24]
    4c4c:	str	w1, [x0, #84]
    4c50:	mov	x1, #0x0                   	// #0
    4c54:	ldr	x0, [sp, #128]
    4c58:	bl	2410 <Perl_PerlIO_flush@plt>
    4c5c:	ldr	x1, [sp, #144]
    4c60:	ldr	x0, [sp, #128]
    4c64:	bl	2ae4 <S_ithread_set>
    4c68:	ldr	x0, [sp, #128]
    4c6c:	add	x0, x0, #0xa86
    4c70:	mov	x1, x0
    4c74:	ldr	x0, [sp, #128]
    4c78:	bl	24e0 <Perl_save_bool@plt>
    4c7c:	ldr	x0, [sp, #128]
    4c80:	strb	wzr, [x0, #2694]
    4c84:	ldr	x0, [sp, #144]
    4c88:	add	x0, x0, #0x90
    4c8c:	bl	2a30 <S_block_most_signals>
    4c90:	mov	x1, #0x2                   	// #2
    4c94:	ldr	x0, [sp, #128]
    4c98:	bl	2290 <perl_clone@plt>
    4c9c:	mov	x1, x0
    4ca0:	ldr	x0, [sp, #144]
    4ca4:	str	x1, [x0, #16]
    4ca8:	ldr	x0, [sp, #144]
    4cac:	ldr	x0, [x0, #16]
    4cb0:	mov	x1, x0
    4cb4:	ldr	x0, [sp, #128]
    4cb8:	bl	21f0 <Perl_clone_params_new@plt>
    4cbc:	str	x0, [sp, #152]
    4cc0:	ldr	x0, [sp, #144]
    4cc4:	ldr	x0, [x0, #16]
    4cc8:	str	x0, [sp, #160]
    4ccc:	mov	x1, #0x7                   	// #7
    4cd0:	ldr	x0, [sp, #160]
    4cd4:	bl	22a0 <Perl_newSV@plt>
    4cd8:	ldr	x0, [x0, #16]
    4cdc:	str	x0, [sp, #168]
    4ce0:	ldr	x0, [sp, #160]
    4ce4:	ldr	x1, [x0, #3032]
    4ce8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4cec:	add	x0, x0, #0x308
    4cf0:	ldr	w0, [x0]
    4cf4:	sxtw	x0, w0
    4cf8:	lsl	x0, x0, #3
    4cfc:	add	x0, x1, x0
    4d00:	ldr	x0, [x0]
    4d04:	str	x0, [sp, #176]
    4d08:	ldr	x0, [sp, #160]
    4d0c:	ldr	x1, [x0, #3032]
    4d10:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4d14:	add	x0, x0, #0x308
    4d18:	ldr	w0, [x0]
    4d1c:	sxtw	x0, w0
    4d20:	lsl	x0, x0, #3
    4d24:	add	x0, x1, x0
    4d28:	ldr	x1, [sp, #168]
    4d2c:	str	x1, [x0]
    4d30:	ldr	x0, [sp, #176]
    4d34:	ldr	x1, [x0]
    4d38:	ldr	x0, [sp, #168]
    4d3c:	str	x1, [x0]
    4d40:	ldr	x0, [sp, #160]
    4d44:	ldr	x0, [x0, #1864]
    4d48:	str	x0, [sp, #184]
    4d4c:	ldr	x0, [sp, #184]
    4d50:	mov	x1, x0
    4d54:	ldr	x0, [sp, #160]
    4d58:	bl	2990 <S_SvREFCNT_dec>
    4d5c:	ldr	x0, [sp, #160]
    4d60:	str	xzr, [x0, #1864]
    4d64:	ldr	x0, [sp, #40]
    4d68:	ldr	w0, [x0, #12]
    4d6c:	and	w0, w0, #0x400
    4d70:	cmp	w0, #0x0
    4d74:	b.eq	4db0 <S_ithread_create+0x48c>  // b.none
    4d78:	mov	x1, #0x0                   	// #0
    4d7c:	ldr	x0, [sp, #160]
    4d80:	bl	22a0 <Perl_newSV@plt>
    4d84:	mov	x1, x0
    4d88:	ldr	x0, [sp, #144]
    4d8c:	str	x1, [x0, #96]
    4d90:	ldr	x0, [sp, #144]
    4d94:	ldr	x0, [x0, #96]
    4d98:	mov	w3, #0x2                   	// #2
    4d9c:	ldr	x2, [sp, #40]
    4da0:	mov	x1, x0
    4da4:	ldr	x0, [sp, #160]
    4da8:	bl	25d0 <Perl_sv_copypv_flags@plt>
    4dac:	b	4dcc <S_ithread_create+0x4a8>
    4db0:	ldr	x2, [sp, #152]
    4db4:	ldr	x1, [sp, #40]
    4db8:	ldr	x0, [sp, #160]
    4dbc:	bl	2300 <Perl_sv_dup_inc@plt>
    4dc0:	mov	x1, x0
    4dc4:	ldr	x0, [sp, #144]
    4dc8:	str	x1, [x0, #96]
    4dcc:	mov	w1, #0xb                   	// #11
    4dd0:	ldr	x0, [sp, #160]
    4dd4:	bl	2620 <Perl_newSV_type@plt>
    4dd8:	str	x0, [sp, #192]
    4ddc:	ldr	x0, [sp, #192]
    4de0:	str	x0, [sp, #200]
    4de4:	ldr	x0, [sp, #144]
    4de8:	ldr	x1, [sp, #200]
    4dec:	str	x1, [x0, #104]
    4df0:	ldr	w0, [sp, #16]
    4df4:	sub	w0, w0, #0x1
    4df8:	sxtw	x0, w0
    4dfc:	mov	x2, x0
    4e00:	ldr	x1, [sp, #200]
    4e04:	ldr	x0, [sp, #160]
    4e08:	bl	2740 <Perl_av_extend@plt>
    4e0c:	ldr	w0, [sp, #16]
    4e10:	sub	w1, w0, #0x1
    4e14:	ldr	x0, [sp, #200]
    4e18:	ldr	x0, [x0]
    4e1c:	sxtw	x1, w1
    4e20:	str	x1, [x0, #16]
    4e24:	ldr	x0, [sp, #200]
    4e28:	ldr	x0, [x0, #16]
    4e2c:	str	x0, [sp, #120]
    4e30:	ldr	w0, [sp, #16]
    4e34:	cmp	w0, #0x0
    4e38:	b.eq	4eac <S_ithread_create+0x588>  // b.none
    4e3c:	ldr	x0, [sp, #56]
    4e40:	ldr	x1, [x0, #24]
    4e44:	ldrsw	x0, [sp, #20]
    4e48:	lsl	x0, x0, #3
    4e4c:	add	x1, x1, x0
    4e50:	ldrsw	x0, [sp, #16]
    4e54:	lsl	x0, x0, #3
    4e58:	mov	x2, x0
    4e5c:	ldr	x0, [sp, #120]
    4e60:	bl	2150 <memcpy@plt>
    4e64:	b	4e98 <S_ithread_create+0x574>
    4e68:	ldr	x0, [sp, #120]
    4e6c:	ldr	x0, [x0]
    4e70:	ldr	x2, [sp, #152]
    4e74:	mov	x1, x0
    4e78:	ldr	x0, [sp, #160]
    4e7c:	bl	2300 <Perl_sv_dup_inc@plt>
    4e80:	mov	x1, x0
    4e84:	ldr	x0, [sp, #120]
    4e88:	str	x1, [x0]
    4e8c:	ldr	x0, [sp, #120]
    4e90:	add	x0, x0, #0x8
    4e94:	str	x0, [sp, #120]
    4e98:	ldr	w0, [sp, #16]
    4e9c:	sub	w1, w0, #0x1
    4ea0:	str	w1, [sp, #16]
    4ea4:	cmp	w0, #0x0
    4ea8:	b.ne	4e68 <S_ithread_create+0x544>  // b.any
    4eac:	ldr	x0, [sp, #152]
    4eb0:	bl	2590 <Perl_clone_params_del@plt>
    4eb4:	ldr	x0, [sp, #144]
    4eb8:	ldr	x0, [x0, #96]
    4ebc:	ldr	w1, [x0, #12]
    4ec0:	ldr	x0, [sp, #144]
    4ec4:	ldr	x0, [x0, #96]
    4ec8:	and	w1, w1, #0xfff7ffff
    4ecc:	str	w1, [x0, #12]
    4ed0:	ldr	x0, [sp, #160]
    4ed4:	ldr	x0, [x0, #2712]
    4ed8:	mov	x1, x0
    4edc:	ldr	x0, [sp, #160]
    4ee0:	bl	22c0 <Perl_ptr_table_free@plt>
    4ee4:	ldr	x0, [sp, #160]
    4ee8:	str	xzr, [x0, #2712]
    4eec:	ldr	x0, [sp, #160]
    4ef0:	ldrb	w0, [x0, #1178]
    4ef4:	orr	w0, w0, #0x2
    4ef8:	and	w1, w0, #0xff
    4efc:	ldr	x0, [sp, #160]
    4f00:	strb	w1, [x0, #1178]
    4f04:	ldr	x1, [sp, #136]
    4f08:	ldr	x0, [sp, #128]
    4f0c:	bl	2ae4 <S_ithread_set>
    4f10:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    4f14:	ldr	x0, [x0, #4024]
    4f18:	ldr	w0, [x0]
    4f1c:	ldr	x1, [sp, #128]
    4f20:	bl	2570 <pthread_setspecific@plt>
    4f24:	str	w0, [sp, #92]
    4f28:	ldr	w0, [sp, #92]
    4f2c:	cmp	w0, #0x0
    4f30:	b.eq	4f50 <S_ithread_create+0x62c>  // b.none
    4f34:	mov	w3, #0x3a7                 	// #935
    4f38:	adrp	x0, a000 <XS_threads_error+0x190>
    4f3c:	add	x2, x0, #0x700
    4f40:	ldr	w1, [sp, #92]
    4f44:	adrp	x0, a000 <XS_threads_error+0x190>
    4f48:	add	x0, x0, #0x710
    4f4c:	bl	2510 <Perl_croak_nocontext@plt>
    4f50:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4f54:	add	x0, x0, #0x318
    4f58:	ldr	w0, [x0]
    4f5c:	cmp	w0, #0x0
    4f60:	b.ne	4f80 <S_ithread_create+0x65c>  // b.any
    4f64:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4f68:	add	x0, x0, #0x320
    4f6c:	bl	2230 <pthread_attr_init@plt>
    4f70:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4f74:	add	x0, x0, #0x318
    4f78:	mov	w1, #0x1                   	// #1
    4f7c:	str	w1, [x0]
    4f80:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4f84:	add	x0, x0, #0x360
    4f88:	ldr	w0, [x0]
    4f8c:	mov	w1, w0
    4f90:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4f94:	add	x0, x0, #0x320
    4f98:	bl	23d0 <pthread_attr_setdetachstate@plt>
    4f9c:	ldr	x0, [sp, #144]
    4fa0:	ldr	x0, [x0, #120]
    4fa4:	cmp	x0, #0x0
    4fa8:	b.le	4fc8 <S_ithread_create+0x6a4>
    4fac:	ldr	x0, [sp, #144]
    4fb0:	ldr	x0, [x0, #120]
    4fb4:	mov	x1, x0
    4fb8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4fbc:	add	x0, x0, #0x320
    4fc0:	bl	23e0 <pthread_attr_setstacksize@plt>
    4fc4:	str	w0, [sp, #68]
    4fc8:	ldr	w0, [sp, #68]
    4fcc:	cmp	w0, #0x0
    4fd0:	b.ne	500c <S_ithread_create+0x6e8>  // b.any
    4fd4:	mov	w1, #0x0                   	// #0
    4fd8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4fdc:	add	x0, x0, #0x320
    4fe0:	bl	23c0 <pthread_attr_setscope@plt>
    4fe4:	ldr	x0, [sp, #144]
    4fe8:	add	x4, x0, #0x70
    4fec:	ldr	x3, [sp, #144]
    4ff0:	adrp	x0, 3000 <S_ithread_free+0x314>
    4ff4:	add	x2, x0, #0x7ec
    4ff8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4ffc:	add	x1, x0, #0x320
    5000:	mov	x0, x4
    5004:	bl	2460 <pthread_create@plt>
    5008:	str	w0, [sp, #72]
    500c:	ldr	x0, [sp, #144]
    5010:	add	x0, x0, #0x90
    5014:	bl	2ac0 <S_set_sigmask>
    5018:	add	x0, sp, #0x70
    501c:	mov	x1, x0
    5020:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    5024:	add	x0, x0, #0x320
    5028:	bl	25b0 <pthread_attr_getstacksize@plt>
    502c:	cmp	w0, #0x0
    5030:	b.ne	5050 <S_ithread_create+0x72c>  // b.any
    5034:	ldr	x0, [sp, #112]
    5038:	cmp	x0, #0x0
    503c:	b.eq	5050 <S_ithread_create+0x72c>  // b.none
    5040:	ldr	x0, [sp, #112]
    5044:	mov	x1, x0
    5048:	ldr	x0, [sp, #144]
    504c:	str	x1, [x0, #120]
    5050:	ldr	w0, [sp, #68]
    5054:	cmp	w0, #0x0
    5058:	b.ne	5068 <S_ithread_create+0x744>  // b.any
    505c:	ldr	w0, [sp, #72]
    5060:	cmp	w0, #0x0
    5064:	b.eq	5124 <S_ithread_create+0x800>  // b.none
    5068:	ldr	x0, [sp, #48]
    506c:	add	x0, x0, #0x110
    5070:	bl	2730 <pthread_mutex_unlock@plt>
    5074:	str	w0, [sp, #100]
    5078:	ldr	w0, [sp, #100]
    507c:	cmp	w0, #0x0
    5080:	b.eq	50a0 <S_ithread_create+0x77c>  // b.none
    5084:	mov	w3, #0x3fa                 	// #1018
    5088:	adrp	x0, a000 <XS_threads_error+0x190>
    508c:	add	x2, x0, #0x700
    5090:	ldr	w1, [sp, #100]
    5094:	adrp	x0, a000 <XS_threads_error+0x190>
    5098:	add	x0, x0, #0x750
    509c:	bl	2510 <Perl_croak_nocontext@plt>
    50a0:	ldr	x0, [sp, #144]
    50a4:	ldr	w0, [x0, #84]
    50a8:	orr	w1, w0, #0x10
    50ac:	ldr	x0, [sp, #144]
    50b0:	str	w1, [x0, #84]
    50b4:	ldr	x1, [sp, #144]
    50b8:	ldr	x0, [sp, #128]
    50bc:	bl	2cec <S_ithread_free>
    50c0:	mov	w1, #0x28                  	// #40
    50c4:	ldr	x0, [sp, #128]
    50c8:	bl	2400 <Perl_ckwarn_d@plt>
    50cc:	and	w0, w0, #0xff
    50d0:	cmp	w0, #0x0
    50d4:	b.eq	511c <S_ithread_create+0x7f8>  // b.none
    50d8:	ldr	w0, [sp, #68]
    50dc:	cmp	w0, #0x0
    50e0:	b.eq	5108 <S_ithread_create+0x7e4>  // b.none
    50e4:	ldr	x0, [sp, #144]
    50e8:	ldr	x0, [x0, #120]
    50ec:	ldr	w3, [sp, #68]
    50f0:	mov	x2, x0
    50f4:	adrp	x0, a000 <XS_threads_error+0x190>
    50f8:	add	x1, x0, #0x8f8
    50fc:	ldr	x0, [sp, #128]
    5100:	bl	2340 <Perl_warn@plt>
    5104:	b	511c <S_ithread_create+0x7f8>
    5108:	ldr	w2, [sp, #72]
    510c:	adrp	x0, a000 <XS_threads_error+0x190>
    5110:	add	x1, x0, #0x940
    5114:	ldr	x0, [sp, #128]
    5118:	bl	2340 <Perl_warn@plt>
    511c:	mov	x0, #0x0                   	// #0
    5120:	b	5174 <S_ithread_create+0x850>
    5124:	ldr	x0, [sp, #48]
    5128:	ldr	x0, [x0, #336]
    512c:	add	x1, x0, #0x1
    5130:	ldr	x0, [sp, #48]
    5134:	str	x1, [x0, #336]
    5138:	ldr	x0, [sp, #48]
    513c:	add	x0, x0, #0x110
    5140:	bl	2730 <pthread_mutex_unlock@plt>
    5144:	str	w0, [sp, #96]
    5148:	ldr	w0, [sp, #96]
    514c:	cmp	w0, #0x0
    5150:	b.eq	5170 <S_ithread_create+0x84c>  // b.none
    5154:	mov	w3, #0x40a                 	// #1034
    5158:	adrp	x0, a000 <XS_threads_error+0x190>
    515c:	add	x2, x0, #0x700
    5160:	ldr	w1, [sp, #96]
    5164:	adrp	x0, a000 <XS_threads_error+0x190>
    5168:	add	x0, x0, #0x750
    516c:	bl	2510 <Perl_croak_nocontext@plt>
    5170:	ldr	x0, [sp, #144]
    5174:	mov	x1, x0
    5178:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    517c:	ldr	x0, [x0, #4048]
    5180:	ldr	x2, [sp, #216]
    5184:	ldr	x0, [x0]
    5188:	eor	x0, x2, x0
    518c:	cmp	x0, #0x0
    5190:	b.eq	5198 <S_ithread_create+0x874>  // b.none
    5194:	bl	2420 <__stack_chk_fail@plt>
    5198:	mov	x0, x1
    519c:	ldp	x29, x30, [sp], #224
    51a0:	ret

00000000000051a4 <XS_threads_create>:
    51a4:	stp	x29, x30, [sp, #-208]!
    51a8:	mov	x29, sp
    51ac:	str	x19, [sp, #16]
    51b0:	str	x0, [sp, #40]
    51b4:	str	x1, [sp, #32]
    51b8:	ldr	x0, [sp, #40]
    51bc:	ldr	x0, [x0]
    51c0:	str	x0, [sp, #120]
    51c4:	ldr	x0, [sp, #40]
    51c8:	bl	28e0 <S_POPMARK>
    51cc:	str	w0, [sp, #76]
    51d0:	ldr	x0, [sp, #40]
    51d4:	ldr	x1, [x0, #24]
    51d8:	ldr	w0, [sp, #76]
    51dc:	add	w2, w0, #0x1
    51e0:	str	w2, [sp, #76]
    51e4:	sxtw	x0, w0
    51e8:	lsl	x0, x0, #3
    51ec:	add	x0, x1, x0
    51f0:	str	x0, [sp, #128]
    51f4:	ldr	x1, [sp, #120]
    51f8:	ldr	x0, [sp, #128]
    51fc:	sub	x0, x1, x0
    5200:	asr	x0, x0, #3
    5204:	str	w0, [sp, #60]
    5208:	ldr	x0, [sp, #40]
    520c:	ldr	x1, [x0, #2032]
    5210:	mov	w6, #0x0                   	// #0
    5214:	mov	x5, #0x0                   	// #0
    5218:	mov	w4, #0x30                  	// #48
    521c:	mov	w3, #0x12                  	// #18
    5220:	adrp	x0, a000 <XS_threads_error+0x190>
    5224:	add	x2, x0, #0x738
    5228:	ldr	x0, [sp, #40]
    522c:	bl	2610 <Perl_hv_common_key_len@plt>
    5230:	ldr	x0, [x0]
    5234:	str	x0, [sp, #136]
    5238:	ldr	x0, [sp, #136]
    523c:	ldr	w1, [x0, #12]
    5240:	mov	w0, #0x100                 	// #256
    5244:	movk	w0, #0x8020, lsl #16
    5248:	and	w1, w1, w0
    524c:	mov	w0, #0x100                 	// #256
    5250:	movk	w0, #0x8000, lsl #16
    5254:	cmp	w1, w0
    5258:	b.ne	526c <XS_threads_create+0xc8>  // b.any
    525c:	ldr	x0, [sp, #136]
    5260:	ldr	x0, [x0]
    5264:	ldr	x0, [x0, #32]
    5268:	b	527c <XS_threads_create+0xd8>
    526c:	mov	w2, #0x2                   	// #2
    5270:	ldr	x1, [sp, #136]
    5274:	ldr	x0, [sp, #40]
    5278:	bl	21d0 <Perl_sv_2uv_flags@plt>
    527c:	str	x0, [sp, #144]
    5280:	ldr	w0, [sp, #60]
    5284:	cmp	w0, #0x1
    5288:	b.le	5340 <XS_threads_create+0x19c>
    528c:	ldr	x0, [sp, #40]
    5290:	ldr	x1, [x0, #24]
    5294:	ldrsw	x0, [sp, #76]
    5298:	add	x0, x0, #0x1
    529c:	lsl	x0, x0, #3
    52a0:	add	x0, x1, x0
    52a4:	ldr	x0, [x0]
    52a8:	ldr	w0, [x0, #12]
    52ac:	and	w0, w0, #0x800
    52b0:	cmp	w0, #0x0
    52b4:	b.eq	5340 <XS_threads_create+0x19c>  // b.none
    52b8:	ldr	x0, [sp, #40]
    52bc:	ldr	x1, [x0, #24]
    52c0:	ldrsw	x0, [sp, #76]
    52c4:	add	x0, x0, #0x1
    52c8:	lsl	x0, x0, #3
    52cc:	add	x0, x1, x0
    52d0:	ldr	x0, [x0]
    52d4:	ldr	x0, [x0, #16]
    52d8:	ldr	w0, [x0, #12]
    52dc:	and	w0, w0, #0xff
    52e0:	cmp	w0, #0xc
    52e4:	b.ne	5340 <XS_threads_create+0x19c>  // b.any
    52e8:	ldr	w0, [sp, #60]
    52ec:	sub	w0, w0, #0x1
    52f0:	str	w0, [sp, #60]
    52f4:	ldr	w0, [sp, #60]
    52f8:	cmp	w0, #0x1
    52fc:	b.gt	5310 <XS_threads_create+0x16c>
    5300:	adrp	x0, a000 <XS_threads_error+0x190>
    5304:	add	x1, x0, #0x978
    5308:	ldr	x0, [sp, #40]
    530c:	bl	24d0 <Perl_croak@plt>
    5310:	ldr	x0, [sp, #40]
    5314:	ldr	x1, [x0, #24]
    5318:	ldrsw	x0, [sp, #76]
    531c:	add	x0, x0, #0x1
    5320:	lsl	x0, x0, #3
    5324:	add	x0, x1, x0
    5328:	ldr	x0, [x0]
    532c:	ldr	x0, [x0, #16]
    5330:	str	x0, [sp, #104]
    5334:	mov	w0, #0x1                   	// #1
    5338:	str	w0, [sp, #72]
    533c:	b	5364 <XS_threads_create+0x1c0>
    5340:	ldr	w0, [sp, #60]
    5344:	cmp	w0, #0x1
    5348:	b.gt	535c <XS_threads_create+0x1b8>
    534c:	adrp	x0, a000 <XS_threads_error+0x190>
    5350:	add	x1, x0, #0x9a8
    5354:	ldr	x0, [sp, #40]
    5358:	bl	24d0 <Perl_croak@plt>
    535c:	str	xzr, [sp, #104]
    5360:	str	wzr, [sp, #72]
    5364:	ldr	x0, [sp, #40]
    5368:	ldr	x1, [x0, #24]
    536c:	ldrsw	x0, [sp, #76]
    5370:	lsl	x0, x0, #3
    5374:	add	x0, x1, x0
    5378:	ldr	x0, [x0]
    537c:	mov	x1, x0
    5380:	ldr	x0, [sp, #40]
    5384:	bl	2430 <Perl_sv_isobject@plt>
    5388:	cmp	w0, #0x0
    538c:	b.eq	57e0 <XS_threads_create+0x63c>  // b.none
    5390:	ldr	x0, [sp, #40]
    5394:	ldr	x1, [x0, #24]
    5398:	ldrsw	x0, [sp, #76]
    539c:	lsl	x0, x0, #3
    53a0:	add	x0, x1, x0
    53a4:	ldr	x0, [x0]
    53a8:	ldr	x0, [x0, #16]
    53ac:	ldr	x0, [x0]
    53b0:	ldr	x0, [x0]
    53b4:	ldr	w0, [x0, #12]
    53b8:	and	w0, w0, #0x2000000
    53bc:	cmp	w0, #0x0
    53c0:	b.eq	56c0 <XS_threads_create+0x51c>  // b.none
    53c4:	ldr	x0, [sp, #40]
    53c8:	ldr	x1, [x0, #24]
    53cc:	ldrsw	x0, [sp, #76]
    53d0:	lsl	x0, x0, #3
    53d4:	add	x0, x1, x0
    53d8:	ldr	x0, [x0]
    53dc:	ldr	x0, [x0, #16]
    53e0:	ldr	x0, [x0]
    53e4:	ldr	x0, [x0]
    53e8:	ldr	x1, [x0, #16]
    53ec:	ldr	x0, [sp, #40]
    53f0:	ldr	x2, [x0, #24]
    53f4:	ldrsw	x0, [sp, #76]
    53f8:	lsl	x0, x0, #3
    53fc:	add	x0, x2, x0
    5400:	ldr	x0, [x0]
    5404:	ldr	x0, [x0, #16]
    5408:	ldr	x0, [x0]
    540c:	ldr	x0, [x0]
    5410:	ldr	x0, [x0]
    5414:	ldr	x0, [x0, #24]
    5418:	add	x0, x0, #0x1
    541c:	lsl	x0, x0, #3
    5420:	add	x0, x1, x0
    5424:	ldr	x0, [x0]
    5428:	cmp	x0, #0x0
    542c:	b.eq	56c0 <XS_threads_create+0x51c>  // b.none
    5430:	ldr	x0, [sp, #40]
    5434:	ldr	x1, [x0, #24]
    5438:	ldrsw	x0, [sp, #76]
    543c:	lsl	x0, x0, #3
    5440:	add	x0, x1, x0
    5444:	ldr	x0, [x0]
    5448:	ldr	x0, [x0, #16]
    544c:	ldr	x0, [x0]
    5450:	ldr	x0, [x0]
    5454:	ldr	x1, [x0, #16]
    5458:	ldr	x0, [sp, #40]
    545c:	ldr	x2, [x0, #24]
    5460:	ldrsw	x0, [sp, #76]
    5464:	lsl	x0, x0, #3
    5468:	add	x0, x2, x0
    546c:	ldr	x0, [x0]
    5470:	ldr	x0, [x0, #16]
    5474:	ldr	x0, [x0]
    5478:	ldr	x0, [x0]
    547c:	ldr	x0, [x0]
    5480:	ldr	x0, [x0, #24]
    5484:	add	x0, x0, #0x1
    5488:	lsl	x0, x0, #3
    548c:	add	x0, x1, x0
    5490:	ldr	w0, [x0, #28]
    5494:	cmp	w0, #0x0
    5498:	b.eq	5510 <XS_threads_create+0x36c>  // b.none
    549c:	ldr	x0, [sp, #40]
    54a0:	ldr	x1, [x0, #24]
    54a4:	ldrsw	x0, [sp, #76]
    54a8:	lsl	x0, x0, #3
    54ac:	add	x0, x1, x0
    54b0:	ldr	x0, [x0]
    54b4:	ldr	x0, [x0, #16]
    54b8:	ldr	x0, [x0]
    54bc:	ldr	x0, [x0]
    54c0:	ldr	x1, [x0, #16]
    54c4:	ldr	x0, [sp, #40]
    54c8:	ldr	x2, [x0, #24]
    54cc:	ldrsw	x0, [sp, #76]
    54d0:	lsl	x0, x0, #3
    54d4:	add	x0, x2, x0
    54d8:	ldr	x0, [x0]
    54dc:	ldr	x0, [x0, #16]
    54e0:	ldr	x0, [x0]
    54e4:	ldr	x0, [x0]
    54e8:	ldr	x0, [x0]
    54ec:	ldr	x0, [x0, #24]
    54f0:	add	x0, x0, #0x1
    54f4:	lsl	x0, x0, #3
    54f8:	add	x0, x1, x0
    54fc:	ldr	x0, [x0]
    5500:	ldr	x0, [x0]
    5504:	cmp	x0, #0x0
    5508:	b.ne	557c <XS_threads_create+0x3d8>  // b.any
    550c:	b	56c0 <XS_threads_create+0x51c>
    5510:	ldr	x0, [sp, #40]
    5514:	ldr	x1, [x0, #24]
    5518:	ldrsw	x0, [sp, #76]
    551c:	lsl	x0, x0, #3
    5520:	add	x0, x1, x0
    5524:	ldr	x0, [x0]
    5528:	ldr	x0, [x0, #16]
    552c:	ldr	x0, [x0]
    5530:	ldr	x0, [x0]
    5534:	ldr	x1, [x0, #16]
    5538:	ldr	x0, [sp, #40]
    553c:	ldr	x2, [x0, #24]
    5540:	ldrsw	x0, [sp, #76]
    5544:	lsl	x0, x0, #3
    5548:	add	x0, x2, x0
    554c:	ldr	x0, [x0]
    5550:	ldr	x0, [x0, #16]
    5554:	ldr	x0, [x0]
    5558:	ldr	x0, [x0]
    555c:	ldr	x0, [x0]
    5560:	ldr	x0, [x0, #24]
    5564:	add	x0, x0, #0x1
    5568:	lsl	x0, x0, #3
    556c:	add	x0, x1, x0
    5570:	ldr	x0, [x0]
    5574:	cmp	x0, #0x0
    5578:	b.eq	56c0 <XS_threads_create+0x51c>  // b.none
    557c:	ldr	x0, [sp, #40]
    5580:	ldr	x1, [x0, #24]
    5584:	ldrsw	x0, [sp, #76]
    5588:	lsl	x0, x0, #3
    558c:	add	x0, x1, x0
    5590:	ldr	x0, [x0]
    5594:	ldr	x0, [x0, #16]
    5598:	ldr	x0, [x0]
    559c:	ldr	x0, [x0]
    55a0:	ldr	x1, [x0, #16]
    55a4:	ldr	x0, [sp, #40]
    55a8:	ldr	x2, [x0, #24]
    55ac:	ldrsw	x0, [sp, #76]
    55b0:	lsl	x0, x0, #3
    55b4:	add	x0, x2, x0
    55b8:	ldr	x0, [x0]
    55bc:	ldr	x0, [x0, #16]
    55c0:	ldr	x0, [x0]
    55c4:	ldr	x0, [x0]
    55c8:	ldr	x0, [x0]
    55cc:	ldr	x0, [x0, #24]
    55d0:	add	x0, x0, #0x1
    55d4:	lsl	x0, x0, #3
    55d8:	add	x0, x1, x0
    55dc:	ldr	w0, [x0, #28]
    55e0:	cmp	w0, #0x0
    55e4:	b.eq	5654 <XS_threads_create+0x4b0>  // b.none
    55e8:	ldr	x0, [sp, #40]
    55ec:	ldr	x1, [x0, #24]
    55f0:	ldrsw	x0, [sp, #76]
    55f4:	lsl	x0, x0, #3
    55f8:	add	x0, x1, x0
    55fc:	ldr	x0, [x0]
    5600:	ldr	x0, [x0, #16]
    5604:	ldr	x0, [x0]
    5608:	ldr	x0, [x0]
    560c:	ldr	x1, [x0, #16]
    5610:	ldr	x0, [sp, #40]
    5614:	ldr	x2, [x0, #24]
    5618:	ldrsw	x0, [sp, #76]
    561c:	lsl	x0, x0, #3
    5620:	add	x0, x2, x0
    5624:	ldr	x0, [x0]
    5628:	ldr	x0, [x0, #16]
    562c:	ldr	x0, [x0]
    5630:	ldr	x0, [x0]
    5634:	ldr	x0, [x0]
    5638:	ldr	x0, [x0, #24]
    563c:	add	x0, x0, #0x1
    5640:	lsl	x0, x0, #3
    5644:	add	x0, x1, x0
    5648:	ldr	x0, [x0]
    564c:	ldr	x0, [x0]
    5650:	b	56b8 <XS_threads_create+0x514>
    5654:	ldr	x0, [sp, #40]
    5658:	ldr	x1, [x0, #24]
    565c:	ldrsw	x0, [sp, #76]
    5660:	lsl	x0, x0, #3
    5664:	add	x0, x1, x0
    5668:	ldr	x0, [x0]
    566c:	ldr	x0, [x0, #16]
    5670:	ldr	x0, [x0]
    5674:	ldr	x0, [x0]
    5678:	ldr	x1, [x0, #16]
    567c:	ldr	x0, [sp, #40]
    5680:	ldr	x2, [x0, #24]
    5684:	ldrsw	x0, [sp, #76]
    5688:	lsl	x0, x0, #3
    568c:	add	x0, x2, x0
    5690:	ldr	x0, [x0]
    5694:	ldr	x0, [x0, #16]
    5698:	ldr	x0, [x0]
    569c:	ldr	x0, [x0]
    56a0:	ldr	x0, [x0]
    56a4:	ldr	x0, [x0, #24]
    56a8:	add	x0, x0, #0x1
    56ac:	lsl	x0, x0, #3
    56b0:	add	x0, x1, x0
    56b4:	ldr	x0, [x0]
    56b8:	add	x0, x0, #0x8
    56bc:	b	56c4 <XS_threads_create+0x520>
    56c0:	mov	x0, #0x0                   	// #0
    56c4:	str	x0, [sp, #96]
    56c8:	ldr	x0, [sp, #40]
    56cc:	ldr	x1, [x0, #24]
    56d0:	ldrsw	x0, [sp, #76]
    56d4:	lsl	x0, x0, #3
    56d8:	add	x0, x1, x0
    56dc:	ldr	x0, [x0]
    56e0:	ldr	x0, [x0, #16]
    56e4:	ldr	w1, [x0, #12]
    56e8:	mov	w0, #0x100                 	// #256
    56ec:	movk	w0, #0x20, lsl #16
    56f0:	and	w0, w1, w0
    56f4:	cmp	w0, #0x100
    56f8:	b.ne	5724 <XS_threads_create+0x580>  // b.any
    56fc:	ldr	x0, [sp, #40]
    5700:	ldr	x1, [x0, #24]
    5704:	ldrsw	x0, [sp, #76]
    5708:	lsl	x0, x0, #3
    570c:	add	x0, x1, x0
    5710:	ldr	x0, [x0]
    5714:	ldr	x0, [x0, #16]
    5718:	ldr	x0, [x0]
    571c:	ldr	x0, [x0, #32]
    5720:	b	5750 <XS_threads_create+0x5ac>
    5724:	ldr	x0, [sp, #40]
    5728:	ldr	x1, [x0, #24]
    572c:	ldrsw	x0, [sp, #76]
    5730:	lsl	x0, x0, #3
    5734:	add	x0, x1, x0
    5738:	ldr	x0, [x0]
    573c:	ldr	x0, [x0, #16]
    5740:	mov	w2, #0x2                   	// #2
    5744:	mov	x1, x0
    5748:	ldr	x0, [sp, #40]
    574c:	bl	2170 <Perl_sv_2iv_flags@plt>
    5750:	str	x0, [sp, #160]
    5754:	ldr	x0, [sp, #160]
    5758:	add	x0, x0, #0x20
    575c:	bl	2720 <pthread_mutex_lock@plt>
    5760:	str	w0, [sp, #80]
    5764:	ldr	w0, [sp, #80]
    5768:	cmp	w0, #0x0
    576c:	b.eq	578c <XS_threads_create+0x5e8>  // b.none
    5770:	mov	w3, #0x43b                 	// #1083
    5774:	adrp	x0, a000 <XS_threads_error+0x190>
    5778:	add	x2, x0, #0x700
    577c:	ldr	w1, [sp, #80]
    5780:	adrp	x0, a000 <XS_threads_error+0x190>
    5784:	add	x0, x0, #0x778
    5788:	bl	2510 <Perl_croak_nocontext@plt>
    578c:	ldr	x0, [sp, #160]
    5790:	ldr	x0, [x0, #120]
    5794:	str	x0, [sp, #112]
    5798:	ldr	x0, [sp, #160]
    579c:	ldr	w0, [x0, #84]
    57a0:	and	w0, w0, #0x8
    57a4:	str	w0, [sp, #68]
    57a8:	ldr	x0, [sp, #160]
    57ac:	add	x0, x0, #0x20
    57b0:	bl	2730 <pthread_mutex_unlock@plt>
    57b4:	str	w0, [sp, #84]
    57b8:	ldr	w0, [sp, #84]
    57bc:	cmp	w0, #0x0
    57c0:	b.eq	5a70 <XS_threads_create+0x8cc>  // b.none
    57c4:	mov	w3, #0x43e                 	// #1086
    57c8:	adrp	x0, a000 <XS_threads_error+0x190>
    57cc:	add	x2, x0, #0x700
    57d0:	ldr	w1, [sp, #84]
    57d4:	adrp	x0, a000 <XS_threads_error+0x190>
    57d8:	add	x0, x0, #0x750
    57dc:	bl	2510 <Perl_croak_nocontext@plt>
    57e0:	ldr	x0, [sp, #40]
    57e4:	ldr	x1, [x0, #24]
    57e8:	ldrsw	x0, [sp, #76]
    57ec:	lsl	x0, x0, #3
    57f0:	add	x0, x1, x0
    57f4:	ldr	x0, [x0]
    57f8:	ldr	w1, [x0, #12]
    57fc:	mov	w0, #0x400                 	// #1024
    5800:	movk	w0, #0x20, lsl #16
    5804:	and	w0, w1, w0
    5808:	cmp	w0, #0x400
    580c:	b.ne	5830 <XS_threads_create+0x68c>  // b.any
    5810:	ldr	x0, [sp, #40]
    5814:	ldr	x1, [x0, #24]
    5818:	ldrsw	x0, [sp, #76]
    581c:	lsl	x0, x0, #3
    5820:	add	x0, x1, x0
    5824:	ldr	x0, [x0]
    5828:	ldr	x0, [x0, #16]
    582c:	b	585c <XS_threads_create+0x6b8>
    5830:	ldr	x0, [sp, #40]
    5834:	ldr	x1, [x0, #24]
    5838:	ldrsw	x0, [sp, #76]
    583c:	lsl	x0, x0, #3
    5840:	add	x0, x1, x0
    5844:	ldr	x0, [x0]
    5848:	mov	w3, #0x2                   	// #2
    584c:	mov	x2, #0x0                   	// #0
    5850:	mov	x1, x0
    5854:	ldr	x0, [sp, #40]
    5858:	bl	2370 <Perl_sv_2pv_flags@plt>
    585c:	str	x0, [sp, #96]
    5860:	ldr	x0, [sp, #144]
    5864:	ldr	x0, [x0, #360]
    5868:	str	x0, [sp, #112]
    586c:	mov	w2, #0x1                   	// #1
    5870:	adrp	x0, a000 <XS_threads_error+0x190>
    5874:	add	x1, x0, #0x9d0
    5878:	ldr	x0, [sp, #40]
    587c:	bl	24f0 <Perl_get_sv@plt>
    5880:	str	x0, [sp, #152]
    5884:	ldr	x0, [sp, #152]
    5888:	cmp	x0, #0x0
    588c:	cset	w0, ne  // ne = any
    5890:	and	w0, w0, #0xff
    5894:	and	x0, x0, #0xff
    5898:	cmp	x0, #0x0
    589c:	b.eq	5a68 <XS_threads_create+0x8c4>  // b.none
    58a0:	ldr	x0, [sp, #152]
    58a4:	ldr	w0, [x0, #12]
    58a8:	lsr	w0, w0, #21
    58ac:	mov	w0, w0
    58b0:	and	x0, x0, #0x1
    58b4:	cmp	x0, #0x0
    58b8:	b.eq	58d0 <XS_threads_create+0x72c>  // b.none
    58bc:	ldr	x1, [sp, #152]
    58c0:	ldr	x0, [sp, #40]
    58c4:	bl	2560 <Perl_mg_get@plt>
    58c8:	cmp	w0, #0x0
    58cc:	nop
    58d0:	ldr	x0, [sp, #40]
    58d4:	add	x0, x0, #0x138
    58d8:	ldr	x1, [sp, #152]
    58dc:	sub	x0, x1, x0
    58e0:	asr	x1, x0, #3
    58e4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    58e8:	movk	x0, #0xaaab
    58ec:	mul	x0, x1, x0
    58f0:	cmp	x0, #0x3
    58f4:	b.hi	5914 <XS_threads_create+0x770>  // b.pmore
    58f8:	ldr	x0, [sp, #40]
    58fc:	add	x0, x0, #0x138
    5900:	ldr	x1, [sp, #152]
    5904:	cmp	x1, x0
    5908:	cset	w0, eq  // eq = none
    590c:	and	w0, w0, #0xff
    5910:	b	5a58 <XS_threads_create+0x8b4>
    5914:	ldr	x0, [sp, #152]
    5918:	ldr	w0, [x0, #12]
    591c:	and	w0, w0, #0xff00
    5920:	cmp	w0, #0x0
    5924:	b.eq	5a54 <XS_threads_create+0x8b0>  // b.none
    5928:	ldr	x0, [sp, #152]
    592c:	ldr	w0, [x0, #12]
    5930:	and	w0, w0, #0x400
    5934:	cmp	w0, #0x0
    5938:	b.eq	59a4 <XS_threads_create+0x800>  // b.none
    593c:	ldr	x0, [sp, #152]
    5940:	ldr	x0, [x0]
    5944:	cmp	x0, #0x0
    5948:	b.eq	5990 <XS_threads_create+0x7ec>  // b.none
    594c:	ldr	x0, [sp, #152]
    5950:	ldr	x0, [x0]
    5954:	ldr	x0, [x0, #16]
    5958:	cmp	x0, #0x1
    595c:	b.hi	5988 <XS_threads_create+0x7e4>  // b.pmore
    5960:	ldr	x0, [sp, #152]
    5964:	ldr	x0, [x0]
    5968:	ldr	x0, [x0, #16]
    596c:	cmp	x0, #0x0
    5970:	b.eq	5990 <XS_threads_create+0x7ec>  // b.none
    5974:	ldr	x0, [sp, #152]
    5978:	ldr	x0, [x0, #16]
    597c:	ldrb	w0, [x0]
    5980:	cmp	w0, #0x30
    5984:	b.eq	5990 <XS_threads_create+0x7ec>  // b.none
    5988:	mov	w0, #0x1                   	// #1
    598c:	b	5994 <XS_threads_create+0x7f0>
    5990:	mov	w0, #0x0                   	// #0
    5994:	cmp	w0, #0x0
    5998:	cset	w0, ne  // ne = any
    599c:	and	w0, w0, #0xff
    59a0:	b	5a58 <XS_threads_create+0x8b4>
    59a4:	ldr	x0, [sp, #152]
    59a8:	ldr	w0, [x0, #12]
    59ac:	and	w0, w0, #0x100
    59b0:	cmp	w0, #0x0
    59b4:	b.eq	59d4 <XS_threads_create+0x830>  // b.none
    59b8:	ldr	x0, [sp, #152]
    59bc:	ldr	x0, [x0]
    59c0:	ldr	x0, [x0, #32]
    59c4:	cmp	x0, #0x0
    59c8:	cset	w0, ne  // ne = any
    59cc:	and	w0, w0, #0xff
    59d0:	b	5a58 <XS_threads_create+0x8b4>
    59d4:	ldr	x0, [sp, #152]
    59d8:	ldr	w0, [x0, #12]
    59dc:	and	w0, w0, #0x800
    59e0:	cmp	w0, #0x0
    59e4:	b.eq	5a20 <XS_threads_create+0x87c>  // b.none
    59e8:	ldr	x0, [sp, #152]
    59ec:	ldr	x0, [x0, #16]
    59f0:	ldr	w0, [x0, #12]
    59f4:	and	w0, w0, #0x100000
    59f8:	cmp	w0, #0x0
    59fc:	b.eq	5a3c <XS_threads_create+0x898>  // b.none
    5a00:	ldr	x0, [sp, #152]
    5a04:	ldr	x0, [x0, #16]
    5a08:	ldr	x0, [x0]
    5a0c:	ldr	x0, [x0]
    5a10:	ldr	w0, [x0, #12]
    5a14:	and	w0, w0, #0x10000000
    5a18:	cmp	w0, #0x0
    5a1c:	b.eq	5a3c <XS_threads_create+0x898>  // b.none
    5a20:	mov	w2, #0x0                   	// #0
    5a24:	ldr	x1, [sp, #152]
    5a28:	ldr	x0, [sp, #40]
    5a2c:	bl	2180 <Perl_sv_2bool_flags@plt>
    5a30:	and	w0, w0, #0xff
    5a34:	cmp	w0, #0x0
    5a38:	b.eq	5a44 <XS_threads_create+0x8a0>  // b.none
    5a3c:	mov	w0, #0x1                   	// #1
    5a40:	b	5a48 <XS_threads_create+0x8a4>
    5a44:	mov	w0, #0x0                   	// #0
    5a48:	and	w0, w0, #0x1
    5a4c:	and	w0, w0, #0xff
    5a50:	b	5a58 <XS_threads_create+0x8b4>
    5a54:	mov	w0, #0x0                   	// #0
    5a58:	cmp	w0, #0x0
    5a5c:	b.eq	5a68 <XS_threads_create+0x8c4>  // b.none
    5a60:	mov	w0, #0x8                   	// #8
    5a64:	b	5a6c <XS_threads_create+0x8c8>
    5a68:	mov	w0, #0x0                   	// #0
    5a6c:	str	w0, [sp, #68]
    5a70:	ldr	x0, [sp, #40]
    5a74:	ldr	x1, [x0, #24]
    5a78:	ldr	w2, [sp, #72]
    5a7c:	ldr	w0, [sp, #76]
    5a80:	add	w0, w2, w0
    5a84:	add	w0, w0, #0x1
    5a88:	sxtw	x0, w0
    5a8c:	lsl	x0, x0, #3
    5a90:	add	x0, x1, x0
    5a94:	ldr	x0, [x0]
    5a98:	str	x0, [sp, #168]
    5a9c:	mov	w0, #0xffffffff            	// #-1
    5aa0:	str	w0, [sp, #64]
    5aa4:	ldr	x0, [sp, #104]
    5aa8:	cmp	x0, #0x0
    5aac:	b.eq	67cc <XS_threads_create+0x1628>  // b.none
    5ab0:	mov	w6, #0x0                   	// #0
    5ab4:	mov	x5, #0x0                   	// #0
    5ab8:	mov	w4, #0x20                  	// #32
    5abc:	mov	w3, #0x5                   	// #5
    5ac0:	adrp	x0, a000 <XS_threads_error+0x190>
    5ac4:	add	x2, x0, #0x9f0
    5ac8:	ldr	x1, [sp, #104]
    5acc:	ldr	x0, [sp, #40]
    5ad0:	bl	2610 <Perl_hv_common_key_len@plt>
    5ad4:	str	x0, [sp, #176]
    5ad8:	ldr	x0, [sp, #176]
    5adc:	cmp	x0, #0x0
    5ae0:	b.eq	5b38 <XS_threads_create+0x994>  // b.none
    5ae4:	ldr	x0, [sp, #176]
    5ae8:	ldr	x0, [x0]
    5aec:	ldr	w1, [x0, #12]
    5af0:	mov	w0, #0x100                 	// #256
    5af4:	movk	w0, #0x20, lsl #16
    5af8:	and	w0, w1, w0
    5afc:	cmp	w0, #0x100
    5b00:	b.ne	5b18 <XS_threads_create+0x974>  // b.any
    5b04:	ldr	x0, [sp, #176]
    5b08:	ldr	x0, [x0]
    5b0c:	ldr	x0, [x0]
    5b10:	ldr	x0, [x0, #32]
    5b14:	b	5b30 <XS_threads_create+0x98c>
    5b18:	ldr	x0, [sp, #176]
    5b1c:	ldr	x0, [x0]
    5b20:	mov	w2, #0x2                   	// #2
    5b24:	mov	x1, x0
    5b28:	ldr	x0, [sp, #40]
    5b2c:	bl	2170 <Perl_sv_2iv_flags@plt>
    5b30:	str	x0, [sp, #112]
    5b34:	b	5c44 <XS_threads_create+0xaa0>
    5b38:	mov	w6, #0x0                   	// #0
    5b3c:	mov	x5, #0x0                   	// #0
    5b40:	mov	w4, #0x20                  	// #32
    5b44:	mov	w3, #0x9                   	// #9
    5b48:	adrp	x0, a000 <XS_threads_error+0x190>
    5b4c:	add	x2, x0, #0x9f8
    5b50:	ldr	x1, [sp, #104]
    5b54:	ldr	x0, [sp, #40]
    5b58:	bl	2610 <Perl_hv_common_key_len@plt>
    5b5c:	str	x0, [sp, #176]
    5b60:	ldr	x0, [sp, #176]
    5b64:	cmp	x0, #0x0
    5b68:	b.eq	5bc0 <XS_threads_create+0xa1c>  // b.none
    5b6c:	ldr	x0, [sp, #176]
    5b70:	ldr	x0, [x0]
    5b74:	ldr	w1, [x0, #12]
    5b78:	mov	w0, #0x100                 	// #256
    5b7c:	movk	w0, #0x20, lsl #16
    5b80:	and	w0, w1, w0
    5b84:	cmp	w0, #0x100
    5b88:	b.ne	5ba0 <XS_threads_create+0x9fc>  // b.any
    5b8c:	ldr	x0, [sp, #176]
    5b90:	ldr	x0, [x0]
    5b94:	ldr	x0, [x0]
    5b98:	ldr	x0, [x0, #32]
    5b9c:	b	5bb8 <XS_threads_create+0xa14>
    5ba0:	ldr	x0, [sp, #176]
    5ba4:	ldr	x0, [x0]
    5ba8:	mov	w2, #0x2                   	// #2
    5bac:	mov	x1, x0
    5bb0:	ldr	x0, [sp, #40]
    5bb4:	bl	2170 <Perl_sv_2iv_flags@plt>
    5bb8:	str	x0, [sp, #112]
    5bbc:	b	5c44 <XS_threads_create+0xaa0>
    5bc0:	mov	w6, #0x0                   	// #0
    5bc4:	mov	x5, #0x0                   	// #0
    5bc8:	mov	w4, #0x20                  	// #32
    5bcc:	mov	w3, #0xa                   	// #10
    5bd0:	adrp	x0, a000 <XS_threads_error+0x190>
    5bd4:	add	x2, x0, #0xa08
    5bd8:	ldr	x1, [sp, #104]
    5bdc:	ldr	x0, [sp, #40]
    5be0:	bl	2610 <Perl_hv_common_key_len@plt>
    5be4:	str	x0, [sp, #176]
    5be8:	ldr	x0, [sp, #176]
    5bec:	cmp	x0, #0x0
    5bf0:	b.eq	5c44 <XS_threads_create+0xaa0>  // b.none
    5bf4:	ldr	x0, [sp, #176]
    5bf8:	ldr	x0, [x0]
    5bfc:	ldr	w1, [x0, #12]
    5c00:	mov	w0, #0x100                 	// #256
    5c04:	movk	w0, #0x20, lsl #16
    5c08:	and	w0, w1, w0
    5c0c:	cmp	w0, #0x100
    5c10:	b.ne	5c28 <XS_threads_create+0xa84>  // b.any
    5c14:	ldr	x0, [sp, #176]
    5c18:	ldr	x0, [x0]
    5c1c:	ldr	x0, [x0]
    5c20:	ldr	x0, [x0, #32]
    5c24:	b	5c40 <XS_threads_create+0xa9c>
    5c28:	ldr	x0, [sp, #176]
    5c2c:	ldr	x0, [x0]
    5c30:	mov	w2, #0x2                   	// #2
    5c34:	mov	x1, x0
    5c38:	ldr	x0, [sp, #40]
    5c3c:	bl	2170 <Perl_sv_2iv_flags@plt>
    5c40:	str	x0, [sp, #112]
    5c44:	mov	w6, #0x0                   	// #0
    5c48:	mov	x5, #0x0                   	// #0
    5c4c:	mov	w4, #0x20                  	// #32
    5c50:	mov	w3, #0x7                   	// #7
    5c54:	adrp	x0, a000 <XS_threads_error+0x190>
    5c58:	add	x2, x0, #0xa18
    5c5c:	ldr	x1, [sp, #104]
    5c60:	ldr	x0, [sp, #40]
    5c64:	bl	2610 <Perl_hv_common_key_len@plt>
    5c68:	str	x0, [sp, #176]
    5c6c:	ldr	x0, [sp, #176]
    5c70:	cmp	x0, #0x0
    5c74:	b.eq	5d7c <XS_threads_create+0xbd8>  // b.none
    5c78:	ldr	x0, [sp, #176]
    5c7c:	ldr	x0, [x0]
    5c80:	ldr	w1, [x0, #12]
    5c84:	mov	w0, #0x400                 	// #1024
    5c88:	movk	w0, #0x20, lsl #16
    5c8c:	and	w0, w1, w0
    5c90:	cmp	w0, #0x400
    5c94:	b.ne	5ca8 <XS_threads_create+0xb04>  // b.any
    5c98:	ldr	x0, [sp, #176]
    5c9c:	ldr	x0, [x0]
    5ca0:	ldr	x0, [x0, #16]
    5ca4:	b	5cc4 <XS_threads_create+0xb20>
    5ca8:	ldr	x0, [sp, #176]
    5cac:	ldr	x0, [x0]
    5cb0:	mov	w3, #0x2                   	// #2
    5cb4:	mov	x2, #0x0                   	// #0
    5cb8:	mov	x1, x0
    5cbc:	ldr	x0, [sp, #40]
    5cc0:	bl	2370 <Perl_sv_2pv_flags@plt>
    5cc4:	str	x0, [sp, #184]
    5cc8:	ldr	x0, [sp, #184]
    5ccc:	ldrb	w0, [x0]
    5cd0:	sub	w0, w0, #0x41
    5cd4:	cmp	w0, #0x35
    5cd8:	cset	w1, hi  // hi = pmore
    5cdc:	and	w1, w1, #0xff
    5ce0:	cmp	w1, #0x0
    5ce4:	b.ne	5d68 <XS_threads_create+0xbc4>  // b.any
    5ce8:	mov	x1, #0x1                   	// #1
    5cec:	lsl	x0, x1, x0
    5cf0:	mov	x1, #0x801                 	// #2049
    5cf4:	movk	x1, #0x801, lsl #32
    5cf8:	and	x1, x0, x1
    5cfc:	cmp	x1, #0x0
    5d00:	cset	w1, ne  // ne = any
    5d04:	and	w1, w1, #0xff
    5d08:	cmp	w1, #0x0
    5d0c:	b.ne	5d44 <XS_threads_create+0xba0>  // b.any
    5d10:	and	x1, x0, #0x20000000200000
    5d14:	cmp	x1, #0x0
    5d18:	cset	w1, ne  // ne = any
    5d1c:	and	w1, w1, #0xff
    5d20:	cmp	w1, #0x0
    5d24:	b.ne	5d5c <XS_threads_create+0xbb8>  // b.any
    5d28:	and	x0, x0, #0x4000000040000
    5d2c:	cmp	x0, #0x0
    5d30:	cset	w0, ne  // ne = any
    5d34:	and	w0, w0, #0xff
    5d38:	cmp	w0, #0x0
    5d3c:	b.ne	5d50 <XS_threads_create+0xbac>  // b.any
    5d40:	b	5d68 <XS_threads_create+0xbc4>
    5d44:	mov	w0, #0x3                   	// #3
    5d48:	str	w0, [sp, #64]
    5d4c:	b	6718 <XS_threads_create+0x1574>
    5d50:	mov	w0, #0x2                   	// #2
    5d54:	str	w0, [sp, #64]
    5d58:	b	6718 <XS_threads_create+0x1574>
    5d5c:	mov	w0, #0x1                   	// #1
    5d60:	str	w0, [sp, #64]
    5d64:	b	6718 <XS_threads_create+0x1574>
    5d68:	ldr	x2, [sp, #184]
    5d6c:	adrp	x0, a000 <XS_threads_error+0x190>
    5d70:	add	x1, x0, #0xa20
    5d74:	ldr	x0, [sp, #40]
    5d78:	bl	24d0 <Perl_croak@plt>
    5d7c:	mov	w6, #0x0                   	// #0
    5d80:	mov	x5, #0x0                   	// #0
    5d84:	mov	w4, #0x20                  	// #32
    5d88:	mov	w3, #0x5                   	// #5
    5d8c:	adrp	x0, a000 <XS_threads_error+0x190>
    5d90:	add	x2, x0, #0xa38
    5d94:	ldr	x1, [sp, #104]
    5d98:	ldr	x0, [sp, #40]
    5d9c:	bl	2610 <Perl_hv_common_key_len@plt>
    5da0:	str	x0, [sp, #176]
    5da4:	ldr	x0, [sp, #176]
    5da8:	cmp	x0, #0x0
    5dac:	b.eq	5fe4 <XS_threads_create+0xe40>  // b.none
    5db0:	ldr	x0, [sp, #176]
    5db4:	ldr	x0, [x0]
    5db8:	cmp	x0, #0x0
    5dbc:	cset	w0, ne  // ne = any
    5dc0:	and	w0, w0, #0xff
    5dc4:	and	x0, x0, #0xff
    5dc8:	cmp	x0, #0x0
    5dcc:	b.eq	6718 <XS_threads_create+0x1574>  // b.none
    5dd0:	ldr	x0, [sp, #176]
    5dd4:	ldr	x0, [x0]
    5dd8:	ldr	w0, [x0, #12]
    5ddc:	lsr	w0, w0, #21
    5de0:	mov	w0, w0
    5de4:	and	x0, x0, #0x1
    5de8:	cmp	x0, #0x0
    5dec:	b.eq	5e0c <XS_threads_create+0xc68>  // b.none
    5df0:	ldr	x0, [sp, #176]
    5df4:	ldr	x0, [x0]
    5df8:	mov	x1, x0
    5dfc:	ldr	x0, [sp, #40]
    5e00:	bl	2560 <Perl_mg_get@plt>
    5e04:	cmp	w0, #0x0
    5e08:	nop
    5e0c:	ldr	x0, [sp, #176]
    5e10:	ldr	x1, [x0]
    5e14:	ldr	x0, [sp, #40]
    5e18:	add	x0, x0, #0x138
    5e1c:	sub	x0, x1, x0
    5e20:	asr	x1, x0, #3
    5e24:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5e28:	movk	x0, #0xaaab
    5e2c:	mul	x0, x1, x0
    5e30:	cmp	x0, #0x3
    5e34:	b.hi	5e58 <XS_threads_create+0xcb4>  // b.pmore
    5e38:	ldr	x0, [sp, #176]
    5e3c:	ldr	x1, [x0]
    5e40:	ldr	x0, [sp, #40]
    5e44:	add	x0, x0, #0x138
    5e48:	cmp	x1, x0
    5e4c:	cset	w0, eq  // eq = none
    5e50:	and	w0, w0, #0xff
    5e54:	b	5fd0 <XS_threads_create+0xe2c>
    5e58:	ldr	x0, [sp, #176]
    5e5c:	ldr	x0, [x0]
    5e60:	ldr	w0, [x0, #12]
    5e64:	and	w0, w0, #0xff00
    5e68:	cmp	w0, #0x0
    5e6c:	b.eq	5fcc <XS_threads_create+0xe28>  // b.none
    5e70:	ldr	x0, [sp, #176]
    5e74:	ldr	x0, [x0]
    5e78:	ldr	w0, [x0, #12]
    5e7c:	and	w0, w0, #0x400
    5e80:	cmp	w0, #0x0
    5e84:	b.eq	5f00 <XS_threads_create+0xd5c>  // b.none
    5e88:	ldr	x0, [sp, #176]
    5e8c:	ldr	x0, [x0]
    5e90:	ldr	x0, [x0]
    5e94:	cmp	x0, #0x0
    5e98:	b.eq	5eec <XS_threads_create+0xd48>  // b.none
    5e9c:	ldr	x0, [sp, #176]
    5ea0:	ldr	x0, [x0]
    5ea4:	ldr	x0, [x0]
    5ea8:	ldr	x0, [x0, #16]
    5eac:	cmp	x0, #0x1
    5eb0:	b.hi	5ee4 <XS_threads_create+0xd40>  // b.pmore
    5eb4:	ldr	x0, [sp, #176]
    5eb8:	ldr	x0, [x0]
    5ebc:	ldr	x0, [x0]
    5ec0:	ldr	x0, [x0, #16]
    5ec4:	cmp	x0, #0x0
    5ec8:	b.eq	5eec <XS_threads_create+0xd48>  // b.none
    5ecc:	ldr	x0, [sp, #176]
    5ed0:	ldr	x0, [x0]
    5ed4:	ldr	x0, [x0, #16]
    5ed8:	ldrb	w0, [x0]
    5edc:	cmp	w0, #0x30
    5ee0:	b.eq	5eec <XS_threads_create+0xd48>  // b.none
    5ee4:	mov	w0, #0x1                   	// #1
    5ee8:	b	5ef0 <XS_threads_create+0xd4c>
    5eec:	mov	w0, #0x0                   	// #0
    5ef0:	cmp	w0, #0x0
    5ef4:	cset	w0, ne  // ne = any
    5ef8:	and	w0, w0, #0xff
    5efc:	b	5fd0 <XS_threads_create+0xe2c>
    5f00:	ldr	x0, [sp, #176]
    5f04:	ldr	x0, [x0]
    5f08:	ldr	w0, [x0, #12]
    5f0c:	and	w0, w0, #0x100
    5f10:	cmp	w0, #0x0
    5f14:	b.eq	5f38 <XS_threads_create+0xd94>  // b.none
    5f18:	ldr	x0, [sp, #176]
    5f1c:	ldr	x0, [x0]
    5f20:	ldr	x0, [x0]
    5f24:	ldr	x0, [x0, #32]
    5f28:	cmp	x0, #0x0
    5f2c:	cset	w0, ne  // ne = any
    5f30:	and	w0, w0, #0xff
    5f34:	b	5fd0 <XS_threads_create+0xe2c>
    5f38:	ldr	x0, [sp, #176]
    5f3c:	ldr	x0, [x0]
    5f40:	ldr	w0, [x0, #12]
    5f44:	and	w0, w0, #0x800
    5f48:	cmp	w0, #0x0
    5f4c:	b.eq	5f90 <XS_threads_create+0xdec>  // b.none
    5f50:	ldr	x0, [sp, #176]
    5f54:	ldr	x0, [x0]
    5f58:	ldr	x0, [x0, #16]
    5f5c:	ldr	w0, [x0, #12]
    5f60:	and	w0, w0, #0x100000
    5f64:	cmp	w0, #0x0
    5f68:	b.eq	5fb4 <XS_threads_create+0xe10>  // b.none
    5f6c:	ldr	x0, [sp, #176]
    5f70:	ldr	x0, [x0]
    5f74:	ldr	x0, [x0, #16]
    5f78:	ldr	x0, [x0]
    5f7c:	ldr	x0, [x0]
    5f80:	ldr	w0, [x0, #12]
    5f84:	and	w0, w0, #0x10000000
    5f88:	cmp	w0, #0x0
    5f8c:	b.eq	5fb4 <XS_threads_create+0xe10>  // b.none
    5f90:	ldr	x0, [sp, #176]
    5f94:	ldr	x0, [x0]
    5f98:	mov	w2, #0x0                   	// #0
    5f9c:	mov	x1, x0
    5fa0:	ldr	x0, [sp, #40]
    5fa4:	bl	2180 <Perl_sv_2bool_flags@plt>
    5fa8:	and	w0, w0, #0xff
    5fac:	cmp	w0, #0x0
    5fb0:	b.eq	5fbc <XS_threads_create+0xe18>  // b.none
    5fb4:	mov	w0, #0x1                   	// #1
    5fb8:	b	5fc0 <XS_threads_create+0xe1c>
    5fbc:	mov	w0, #0x0                   	// #0
    5fc0:	and	w0, w0, #0x1
    5fc4:	and	w0, w0, #0xff
    5fc8:	b	5fd0 <XS_threads_create+0xe2c>
    5fcc:	mov	w0, #0x0                   	// #0
    5fd0:	cmp	w0, #0x0
    5fd4:	b.eq	6718 <XS_threads_create+0x1574>  // b.none
    5fd8:	mov	w0, #0x3                   	// #3
    5fdc:	str	w0, [sp, #64]
    5fe0:	b	6718 <XS_threads_create+0x1574>
    5fe4:	mov	w6, #0x0                   	// #0
    5fe8:	mov	x5, #0x0                   	// #0
    5fec:	mov	w4, #0x20                  	// #32
    5ff0:	mov	w3, #0x4                   	// #4
    5ff4:	adrp	x0, a000 <XS_threads_error+0x190>
    5ff8:	add	x2, x0, #0xa40
    5ffc:	ldr	x1, [sp, #104]
    6000:	ldr	x0, [sp, #40]
    6004:	bl	2610 <Perl_hv_common_key_len@plt>
    6008:	str	x0, [sp, #176]
    600c:	ldr	x0, [sp, #176]
    6010:	cmp	x0, #0x0
    6014:	b.eq	624c <XS_threads_create+0x10a8>  // b.none
    6018:	ldr	x0, [sp, #176]
    601c:	ldr	x0, [x0]
    6020:	cmp	x0, #0x0
    6024:	cset	w0, ne  // ne = any
    6028:	and	w0, w0, #0xff
    602c:	and	x0, x0, #0xff
    6030:	cmp	x0, #0x0
    6034:	b.eq	6718 <XS_threads_create+0x1574>  // b.none
    6038:	ldr	x0, [sp, #176]
    603c:	ldr	x0, [x0]
    6040:	ldr	w0, [x0, #12]
    6044:	lsr	w0, w0, #21
    6048:	mov	w0, w0
    604c:	and	x0, x0, #0x1
    6050:	cmp	x0, #0x0
    6054:	b.eq	6074 <XS_threads_create+0xed0>  // b.none
    6058:	ldr	x0, [sp, #176]
    605c:	ldr	x0, [x0]
    6060:	mov	x1, x0
    6064:	ldr	x0, [sp, #40]
    6068:	bl	2560 <Perl_mg_get@plt>
    606c:	cmp	w0, #0x0
    6070:	nop
    6074:	ldr	x0, [sp, #176]
    6078:	ldr	x1, [x0]
    607c:	ldr	x0, [sp, #40]
    6080:	add	x0, x0, #0x138
    6084:	sub	x0, x1, x0
    6088:	asr	x1, x0, #3
    608c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6090:	movk	x0, #0xaaab
    6094:	mul	x0, x1, x0
    6098:	cmp	x0, #0x3
    609c:	b.hi	60c0 <XS_threads_create+0xf1c>  // b.pmore
    60a0:	ldr	x0, [sp, #176]
    60a4:	ldr	x1, [x0]
    60a8:	ldr	x0, [sp, #40]
    60ac:	add	x0, x0, #0x138
    60b0:	cmp	x1, x0
    60b4:	cset	w0, eq  // eq = none
    60b8:	and	w0, w0, #0xff
    60bc:	b	6238 <XS_threads_create+0x1094>
    60c0:	ldr	x0, [sp, #176]
    60c4:	ldr	x0, [x0]
    60c8:	ldr	w0, [x0, #12]
    60cc:	and	w0, w0, #0xff00
    60d0:	cmp	w0, #0x0
    60d4:	b.eq	6234 <XS_threads_create+0x1090>  // b.none
    60d8:	ldr	x0, [sp, #176]
    60dc:	ldr	x0, [x0]
    60e0:	ldr	w0, [x0, #12]
    60e4:	and	w0, w0, #0x400
    60e8:	cmp	w0, #0x0
    60ec:	b.eq	6168 <XS_threads_create+0xfc4>  // b.none
    60f0:	ldr	x0, [sp, #176]
    60f4:	ldr	x0, [x0]
    60f8:	ldr	x0, [x0]
    60fc:	cmp	x0, #0x0
    6100:	b.eq	6154 <XS_threads_create+0xfb0>  // b.none
    6104:	ldr	x0, [sp, #176]
    6108:	ldr	x0, [x0]
    610c:	ldr	x0, [x0]
    6110:	ldr	x0, [x0, #16]
    6114:	cmp	x0, #0x1
    6118:	b.hi	614c <XS_threads_create+0xfa8>  // b.pmore
    611c:	ldr	x0, [sp, #176]
    6120:	ldr	x0, [x0]
    6124:	ldr	x0, [x0]
    6128:	ldr	x0, [x0, #16]
    612c:	cmp	x0, #0x0
    6130:	b.eq	6154 <XS_threads_create+0xfb0>  // b.none
    6134:	ldr	x0, [sp, #176]
    6138:	ldr	x0, [x0]
    613c:	ldr	x0, [x0, #16]
    6140:	ldrb	w0, [x0]
    6144:	cmp	w0, #0x30
    6148:	b.eq	6154 <XS_threads_create+0xfb0>  // b.none
    614c:	mov	w0, #0x1                   	// #1
    6150:	b	6158 <XS_threads_create+0xfb4>
    6154:	mov	w0, #0x0                   	// #0
    6158:	cmp	w0, #0x0
    615c:	cset	w0, ne  // ne = any
    6160:	and	w0, w0, #0xff
    6164:	b	6238 <XS_threads_create+0x1094>
    6168:	ldr	x0, [sp, #176]
    616c:	ldr	x0, [x0]
    6170:	ldr	w0, [x0, #12]
    6174:	and	w0, w0, #0x100
    6178:	cmp	w0, #0x0
    617c:	b.eq	61a0 <XS_threads_create+0xffc>  // b.none
    6180:	ldr	x0, [sp, #176]
    6184:	ldr	x0, [x0]
    6188:	ldr	x0, [x0]
    618c:	ldr	x0, [x0, #32]
    6190:	cmp	x0, #0x0
    6194:	cset	w0, ne  // ne = any
    6198:	and	w0, w0, #0xff
    619c:	b	6238 <XS_threads_create+0x1094>
    61a0:	ldr	x0, [sp, #176]
    61a4:	ldr	x0, [x0]
    61a8:	ldr	w0, [x0, #12]
    61ac:	and	w0, w0, #0x800
    61b0:	cmp	w0, #0x0
    61b4:	b.eq	61f8 <XS_threads_create+0x1054>  // b.none
    61b8:	ldr	x0, [sp, #176]
    61bc:	ldr	x0, [x0]
    61c0:	ldr	x0, [x0, #16]
    61c4:	ldr	w0, [x0, #12]
    61c8:	and	w0, w0, #0x100000
    61cc:	cmp	w0, #0x0
    61d0:	b.eq	621c <XS_threads_create+0x1078>  // b.none
    61d4:	ldr	x0, [sp, #176]
    61d8:	ldr	x0, [x0]
    61dc:	ldr	x0, [x0, #16]
    61e0:	ldr	x0, [x0]
    61e4:	ldr	x0, [x0]
    61e8:	ldr	w0, [x0, #12]
    61ec:	and	w0, w0, #0x10000000
    61f0:	cmp	w0, #0x0
    61f4:	b.eq	621c <XS_threads_create+0x1078>  // b.none
    61f8:	ldr	x0, [sp, #176]
    61fc:	ldr	x0, [x0]
    6200:	mov	w2, #0x0                   	// #0
    6204:	mov	x1, x0
    6208:	ldr	x0, [sp, #40]
    620c:	bl	2180 <Perl_sv_2bool_flags@plt>
    6210:	and	w0, w0, #0xff
    6214:	cmp	w0, #0x0
    6218:	b.eq	6224 <XS_threads_create+0x1080>  // b.none
    621c:	mov	w0, #0x1                   	// #1
    6220:	b	6228 <XS_threads_create+0x1084>
    6224:	mov	w0, #0x0                   	// #0
    6228:	and	w0, w0, #0x1
    622c:	and	w0, w0, #0xff
    6230:	b	6238 <XS_threads_create+0x1094>
    6234:	mov	w0, #0x0                   	// #0
    6238:	cmp	w0, #0x0
    623c:	b.eq	6718 <XS_threads_create+0x1574>  // b.none
    6240:	mov	w0, #0x3                   	// #3
    6244:	str	w0, [sp, #64]
    6248:	b	6718 <XS_threads_create+0x1574>
    624c:	mov	w6, #0x0                   	// #0
    6250:	mov	x5, #0x0                   	// #0
    6254:	mov	w4, #0x20                  	// #32
    6258:	mov	w3, #0x6                   	// #6
    625c:	adrp	x0, a000 <XS_threads_error+0x190>
    6260:	add	x2, x0, #0xa48
    6264:	ldr	x1, [sp, #104]
    6268:	ldr	x0, [sp, #40]
    626c:	bl	2610 <Perl_hv_common_key_len@plt>
    6270:	str	x0, [sp, #176]
    6274:	ldr	x0, [sp, #176]
    6278:	cmp	x0, #0x0
    627c:	b.eq	64b4 <XS_threads_create+0x1310>  // b.none
    6280:	ldr	x0, [sp, #176]
    6284:	ldr	x0, [x0]
    6288:	cmp	x0, #0x0
    628c:	cset	w0, ne  // ne = any
    6290:	and	w0, w0, #0xff
    6294:	and	x0, x0, #0xff
    6298:	cmp	x0, #0x0
    629c:	b.eq	6718 <XS_threads_create+0x1574>  // b.none
    62a0:	ldr	x0, [sp, #176]
    62a4:	ldr	x0, [x0]
    62a8:	ldr	w0, [x0, #12]
    62ac:	lsr	w0, w0, #21
    62b0:	mov	w0, w0
    62b4:	and	x0, x0, #0x1
    62b8:	cmp	x0, #0x0
    62bc:	b.eq	62dc <XS_threads_create+0x1138>  // b.none
    62c0:	ldr	x0, [sp, #176]
    62c4:	ldr	x0, [x0]
    62c8:	mov	x1, x0
    62cc:	ldr	x0, [sp, #40]
    62d0:	bl	2560 <Perl_mg_get@plt>
    62d4:	cmp	w0, #0x0
    62d8:	nop
    62dc:	ldr	x0, [sp, #176]
    62e0:	ldr	x1, [x0]
    62e4:	ldr	x0, [sp, #40]
    62e8:	add	x0, x0, #0x138
    62ec:	sub	x0, x1, x0
    62f0:	asr	x1, x0, #3
    62f4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    62f8:	movk	x0, #0xaaab
    62fc:	mul	x0, x1, x0
    6300:	cmp	x0, #0x3
    6304:	b.hi	6328 <XS_threads_create+0x1184>  // b.pmore
    6308:	ldr	x0, [sp, #176]
    630c:	ldr	x1, [x0]
    6310:	ldr	x0, [sp, #40]
    6314:	add	x0, x0, #0x138
    6318:	cmp	x1, x0
    631c:	cset	w0, eq  // eq = none
    6320:	and	w0, w0, #0xff
    6324:	b	64a0 <XS_threads_create+0x12fc>
    6328:	ldr	x0, [sp, #176]
    632c:	ldr	x0, [x0]
    6330:	ldr	w0, [x0, #12]
    6334:	and	w0, w0, #0xff00
    6338:	cmp	w0, #0x0
    633c:	b.eq	649c <XS_threads_create+0x12f8>  // b.none
    6340:	ldr	x0, [sp, #176]
    6344:	ldr	x0, [x0]
    6348:	ldr	w0, [x0, #12]
    634c:	and	w0, w0, #0x400
    6350:	cmp	w0, #0x0
    6354:	b.eq	63d0 <XS_threads_create+0x122c>  // b.none
    6358:	ldr	x0, [sp, #176]
    635c:	ldr	x0, [x0]
    6360:	ldr	x0, [x0]
    6364:	cmp	x0, #0x0
    6368:	b.eq	63bc <XS_threads_create+0x1218>  // b.none
    636c:	ldr	x0, [sp, #176]
    6370:	ldr	x0, [x0]
    6374:	ldr	x0, [x0]
    6378:	ldr	x0, [x0, #16]
    637c:	cmp	x0, #0x1
    6380:	b.hi	63b4 <XS_threads_create+0x1210>  // b.pmore
    6384:	ldr	x0, [sp, #176]
    6388:	ldr	x0, [x0]
    638c:	ldr	x0, [x0]
    6390:	ldr	x0, [x0, #16]
    6394:	cmp	x0, #0x0
    6398:	b.eq	63bc <XS_threads_create+0x1218>  // b.none
    639c:	ldr	x0, [sp, #176]
    63a0:	ldr	x0, [x0]
    63a4:	ldr	x0, [x0, #16]
    63a8:	ldrb	w0, [x0]
    63ac:	cmp	w0, #0x30
    63b0:	b.eq	63bc <XS_threads_create+0x1218>  // b.none
    63b4:	mov	w0, #0x1                   	// #1
    63b8:	b	63c0 <XS_threads_create+0x121c>
    63bc:	mov	w0, #0x0                   	// #0
    63c0:	cmp	w0, #0x0
    63c4:	cset	w0, ne  // ne = any
    63c8:	and	w0, w0, #0xff
    63cc:	b	64a0 <XS_threads_create+0x12fc>
    63d0:	ldr	x0, [sp, #176]
    63d4:	ldr	x0, [x0]
    63d8:	ldr	w0, [x0, #12]
    63dc:	and	w0, w0, #0x100
    63e0:	cmp	w0, #0x0
    63e4:	b.eq	6408 <XS_threads_create+0x1264>  // b.none
    63e8:	ldr	x0, [sp, #176]
    63ec:	ldr	x0, [x0]
    63f0:	ldr	x0, [x0]
    63f4:	ldr	x0, [x0, #32]
    63f8:	cmp	x0, #0x0
    63fc:	cset	w0, ne  // ne = any
    6400:	and	w0, w0, #0xff
    6404:	b	64a0 <XS_threads_create+0x12fc>
    6408:	ldr	x0, [sp, #176]
    640c:	ldr	x0, [x0]
    6410:	ldr	w0, [x0, #12]
    6414:	and	w0, w0, #0x800
    6418:	cmp	w0, #0x0
    641c:	b.eq	6460 <XS_threads_create+0x12bc>  // b.none
    6420:	ldr	x0, [sp, #176]
    6424:	ldr	x0, [x0]
    6428:	ldr	x0, [x0, #16]
    642c:	ldr	w0, [x0, #12]
    6430:	and	w0, w0, #0x100000
    6434:	cmp	w0, #0x0
    6438:	b.eq	6484 <XS_threads_create+0x12e0>  // b.none
    643c:	ldr	x0, [sp, #176]
    6440:	ldr	x0, [x0]
    6444:	ldr	x0, [x0, #16]
    6448:	ldr	x0, [x0]
    644c:	ldr	x0, [x0]
    6450:	ldr	w0, [x0, #12]
    6454:	and	w0, w0, #0x10000000
    6458:	cmp	w0, #0x0
    645c:	b.eq	6484 <XS_threads_create+0x12e0>  // b.none
    6460:	ldr	x0, [sp, #176]
    6464:	ldr	x0, [x0]
    6468:	mov	w2, #0x0                   	// #0
    646c:	mov	x1, x0
    6470:	ldr	x0, [sp, #40]
    6474:	bl	2180 <Perl_sv_2bool_flags@plt>
    6478:	and	w0, w0, #0xff
    647c:	cmp	w0, #0x0
    6480:	b.eq	648c <XS_threads_create+0x12e8>  // b.none
    6484:	mov	w0, #0x1                   	// #1
    6488:	b	6490 <XS_threads_create+0x12ec>
    648c:	mov	w0, #0x0                   	// #0
    6490:	and	w0, w0, #0x1
    6494:	and	w0, w0, #0xff
    6498:	b	64a0 <XS_threads_create+0x12fc>
    649c:	mov	w0, #0x0                   	// #0
    64a0:	cmp	w0, #0x0
    64a4:	b.eq	6718 <XS_threads_create+0x1574>  // b.none
    64a8:	mov	w0, #0x2                   	// #2
    64ac:	str	w0, [sp, #64]
    64b0:	b	6718 <XS_threads_create+0x1574>
    64b4:	mov	w6, #0x0                   	// #0
    64b8:	mov	x5, #0x0                   	// #0
    64bc:	mov	w4, #0x20                  	// #32
    64c0:	mov	w3, #0x4                   	// #4
    64c4:	adrp	x0, a000 <XS_threads_error+0x190>
    64c8:	add	x2, x0, #0xa50
    64cc:	ldr	x1, [sp, #104]
    64d0:	ldr	x0, [sp, #40]
    64d4:	bl	2610 <Perl_hv_common_key_len@plt>
    64d8:	str	x0, [sp, #176]
    64dc:	ldr	x0, [sp, #176]
    64e0:	cmp	x0, #0x0
    64e4:	b.eq	6718 <XS_threads_create+0x1574>  // b.none
    64e8:	ldr	x0, [sp, #176]
    64ec:	ldr	x0, [x0]
    64f0:	cmp	x0, #0x0
    64f4:	cset	w0, ne  // ne = any
    64f8:	and	w0, w0, #0xff
    64fc:	and	x0, x0, #0xff
    6500:	cmp	x0, #0x0
    6504:	b.eq	6718 <XS_threads_create+0x1574>  // b.none
    6508:	ldr	x0, [sp, #176]
    650c:	ldr	x0, [x0]
    6510:	ldr	w0, [x0, #12]
    6514:	lsr	w0, w0, #21
    6518:	mov	w0, w0
    651c:	and	x0, x0, #0x1
    6520:	cmp	x0, #0x0
    6524:	b.eq	6544 <XS_threads_create+0x13a0>  // b.none
    6528:	ldr	x0, [sp, #176]
    652c:	ldr	x0, [x0]
    6530:	mov	x1, x0
    6534:	ldr	x0, [sp, #40]
    6538:	bl	2560 <Perl_mg_get@plt>
    653c:	cmp	w0, #0x0
    6540:	nop
    6544:	ldr	x0, [sp, #176]
    6548:	ldr	x1, [x0]
    654c:	ldr	x0, [sp, #40]
    6550:	add	x0, x0, #0x138
    6554:	sub	x0, x1, x0
    6558:	asr	x1, x0, #3
    655c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6560:	movk	x0, #0xaaab
    6564:	mul	x0, x1, x0
    6568:	cmp	x0, #0x3
    656c:	b.hi	6590 <XS_threads_create+0x13ec>  // b.pmore
    6570:	ldr	x0, [sp, #176]
    6574:	ldr	x1, [x0]
    6578:	ldr	x0, [sp, #40]
    657c:	add	x0, x0, #0x138
    6580:	cmp	x1, x0
    6584:	cset	w0, eq  // eq = none
    6588:	and	w0, w0, #0xff
    658c:	b	6708 <XS_threads_create+0x1564>
    6590:	ldr	x0, [sp, #176]
    6594:	ldr	x0, [x0]
    6598:	ldr	w0, [x0, #12]
    659c:	and	w0, w0, #0xff00
    65a0:	cmp	w0, #0x0
    65a4:	b.eq	6704 <XS_threads_create+0x1560>  // b.none
    65a8:	ldr	x0, [sp, #176]
    65ac:	ldr	x0, [x0]
    65b0:	ldr	w0, [x0, #12]
    65b4:	and	w0, w0, #0x400
    65b8:	cmp	w0, #0x0
    65bc:	b.eq	6638 <XS_threads_create+0x1494>  // b.none
    65c0:	ldr	x0, [sp, #176]
    65c4:	ldr	x0, [x0]
    65c8:	ldr	x0, [x0]
    65cc:	cmp	x0, #0x0
    65d0:	b.eq	6624 <XS_threads_create+0x1480>  // b.none
    65d4:	ldr	x0, [sp, #176]
    65d8:	ldr	x0, [x0]
    65dc:	ldr	x0, [x0]
    65e0:	ldr	x0, [x0, #16]
    65e4:	cmp	x0, #0x1
    65e8:	b.hi	661c <XS_threads_create+0x1478>  // b.pmore
    65ec:	ldr	x0, [sp, #176]
    65f0:	ldr	x0, [x0]
    65f4:	ldr	x0, [x0]
    65f8:	ldr	x0, [x0, #16]
    65fc:	cmp	x0, #0x0
    6600:	b.eq	6624 <XS_threads_create+0x1480>  // b.none
    6604:	ldr	x0, [sp, #176]
    6608:	ldr	x0, [x0]
    660c:	ldr	x0, [x0, #16]
    6610:	ldrb	w0, [x0]
    6614:	cmp	w0, #0x30
    6618:	b.eq	6624 <XS_threads_create+0x1480>  // b.none
    661c:	mov	w0, #0x1                   	// #1
    6620:	b	6628 <XS_threads_create+0x1484>
    6624:	mov	w0, #0x0                   	// #0
    6628:	cmp	w0, #0x0
    662c:	cset	w0, ne  // ne = any
    6630:	and	w0, w0, #0xff
    6634:	b	6708 <XS_threads_create+0x1564>
    6638:	ldr	x0, [sp, #176]
    663c:	ldr	x0, [x0]
    6640:	ldr	w0, [x0, #12]
    6644:	and	w0, w0, #0x100
    6648:	cmp	w0, #0x0
    664c:	b.eq	6670 <XS_threads_create+0x14cc>  // b.none
    6650:	ldr	x0, [sp, #176]
    6654:	ldr	x0, [x0]
    6658:	ldr	x0, [x0]
    665c:	ldr	x0, [x0, #32]
    6660:	cmp	x0, #0x0
    6664:	cset	w0, ne  // ne = any
    6668:	and	w0, w0, #0xff
    666c:	b	6708 <XS_threads_create+0x1564>
    6670:	ldr	x0, [sp, #176]
    6674:	ldr	x0, [x0]
    6678:	ldr	w0, [x0, #12]
    667c:	and	w0, w0, #0x800
    6680:	cmp	w0, #0x0
    6684:	b.eq	66c8 <XS_threads_create+0x1524>  // b.none
    6688:	ldr	x0, [sp, #176]
    668c:	ldr	x0, [x0]
    6690:	ldr	x0, [x0, #16]
    6694:	ldr	w0, [x0, #12]
    6698:	and	w0, w0, #0x100000
    669c:	cmp	w0, #0x0
    66a0:	b.eq	66ec <XS_threads_create+0x1548>  // b.none
    66a4:	ldr	x0, [sp, #176]
    66a8:	ldr	x0, [x0]
    66ac:	ldr	x0, [x0, #16]
    66b0:	ldr	x0, [x0]
    66b4:	ldr	x0, [x0]
    66b8:	ldr	w0, [x0, #12]
    66bc:	and	w0, w0, #0x10000000
    66c0:	cmp	w0, #0x0
    66c4:	b.eq	66ec <XS_threads_create+0x1548>  // b.none
    66c8:	ldr	x0, [sp, #176]
    66cc:	ldr	x0, [x0]
    66d0:	mov	w2, #0x0                   	// #0
    66d4:	mov	x1, x0
    66d8:	ldr	x0, [sp, #40]
    66dc:	bl	2180 <Perl_sv_2bool_flags@plt>
    66e0:	and	w0, w0, #0xff
    66e4:	cmp	w0, #0x0
    66e8:	b.eq	66f4 <XS_threads_create+0x1550>  // b.none
    66ec:	mov	w0, #0x1                   	// #1
    66f0:	b	66f8 <XS_threads_create+0x1554>
    66f4:	mov	w0, #0x0                   	// #0
    66f8:	and	w0, w0, #0x1
    66fc:	and	w0, w0, #0xff
    6700:	b	6708 <XS_threads_create+0x1564>
    6704:	mov	w0, #0x0                   	// #0
    6708:	cmp	w0, #0x0
    670c:	b.eq	6718 <XS_threads_create+0x1574>  // b.none
    6710:	mov	w0, #0x1                   	// #1
    6714:	str	w0, [sp, #64]
    6718:	mov	w6, #0x0                   	// #0
    671c:	mov	x5, #0x0                   	// #0
    6720:	mov	w4, #0x20                  	// #32
    6724:	mov	w3, #0x4                   	// #4
    6728:	adrp	x0, a000 <XS_threads_error+0x190>
    672c:	add	x2, x0, #0xa58
    6730:	ldr	x1, [sp, #104]
    6734:	ldr	x0, [sp, #40]
    6738:	bl	2610 <Perl_hv_common_key_len@plt>
    673c:	str	x0, [sp, #176]
    6740:	ldr	x0, [sp, #176]
    6744:	cmp	x0, #0x0
    6748:	b.eq	67cc <XS_threads_create+0x1628>  // b.none
    674c:	ldr	x0, [sp, #176]
    6750:	ldr	x0, [x0]
    6754:	ldr	w1, [x0, #12]
    6758:	mov	w0, #0x400                 	// #1024
    675c:	movk	w0, #0x20, lsl #16
    6760:	and	w0, w1, w0
    6764:	cmp	w0, #0x400
    6768:	b.ne	677c <XS_threads_create+0x15d8>  // b.any
    676c:	ldr	x0, [sp, #176]
    6770:	ldr	x0, [x0]
    6774:	ldr	x0, [x0, #16]
    6778:	b	6798 <XS_threads_create+0x15f4>
    677c:	ldr	x0, [sp, #176]
    6780:	ldr	x0, [x0]
    6784:	mov	w3, #0x2                   	// #2
    6788:	mov	x2, #0x0                   	// #0
    678c:	mov	x1, x0
    6790:	ldr	x0, [sp, #40]
    6794:	bl	2370 <Perl_sv_2pv_flags@plt>
    6798:	str	x0, [sp, #184]
    679c:	ldr	x0, [sp, #184]
    67a0:	ldrb	w0, [x0]
    67a4:	cmp	w0, #0x74
    67a8:	b.eq	67bc <XS_threads_create+0x1618>  // b.none
    67ac:	ldr	x0, [sp, #184]
    67b0:	ldrb	w0, [x0]
    67b4:	cmp	w0, #0x54
    67b8:	b.ne	67c4 <XS_threads_create+0x1620>  // b.any
    67bc:	mov	w0, #0x8                   	// #8
    67c0:	b	67c8 <XS_threads_create+0x1624>
    67c4:	mov	w0, #0x0                   	// #0
    67c8:	str	w0, [sp, #68]
    67cc:	ldr	w0, [sp, #64]
    67d0:	cmn	w0, #0x1
    67d4:	b.ne	6818 <XS_threads_create+0x1674>  // b.any
    67d8:	ldr	x0, [sp, #40]
    67dc:	ldr	x0, [x0, #8]
    67e0:	ldrb	w0, [x0, #34]
    67e4:	and	w0, w0, #0x3
    67e8:	cmp	w0, #0x0
    67ec:	b.eq	6804 <XS_threads_create+0x1660>  // b.none
    67f0:	ldr	x0, [sp, #40]
    67f4:	ldr	x0, [x0, #8]
    67f8:	ldrb	w0, [x0, #34]
    67fc:	and	w0, w0, #0x3
    6800:	b	6810 <XS_threads_create+0x166c>
    6804:	ldr	x0, [sp, #40]
    6808:	bl	2640 <Perl_block_gimme@plt>
    680c:	and	w0, w0, #0xff
    6810:	str	w0, [sp, #64]
    6814:	b	6854 <XS_threads_create+0x16b0>
    6818:	ldr	x0, [sp, #40]
    681c:	ldr	x0, [x0, #8]
    6820:	ldrb	w0, [x0, #34]
    6824:	and	w0, w0, #0x3
    6828:	cmp	w0, #0x0
    682c:	b.ne	6844 <XS_threads_create+0x16a0>  // b.any
    6830:	ldr	x0, [sp, #40]
    6834:	bl	2640 <Perl_block_gimme@plt>
    6838:	and	w0, w0, #0xff
    683c:	and	w0, w0, #0xfffffffc
    6840:	b	6848 <XS_threads_create+0x16a4>
    6844:	mov	w0, #0x0                   	// #0
    6848:	ldr	w1, [sp, #64]
    684c:	orr	w0, w1, w0
    6850:	str	w0, [sp, #64]
    6854:	ldr	x0, [sp, #144]
    6858:	add	x0, x0, #0x110
    685c:	bl	2720 <pthread_mutex_lock@plt>
    6860:	str	w0, [sp, #88]
    6864:	ldr	w0, [sp, #88]
    6868:	cmp	w0, #0x0
    686c:	b.eq	688c <XS_threads_create+0x16e8>  // b.none
    6870:	mov	w3, #0x48b                 	// #1163
    6874:	adrp	x0, a000 <XS_threads_error+0x190>
    6878:	add	x2, x0, #0x700
    687c:	ldr	w1, [sp, #88]
    6880:	adrp	x0, a000 <XS_threads_error+0x190>
    6884:	add	x0, x0, #0x778
    6888:	bl	2510 <Perl_croak_nocontext@plt>
    688c:	ldr	w1, [sp, #76]
    6890:	ldr	w0, [sp, #72]
    6894:	add	w0, w1, w0
    6898:	add	w3, w0, #0x2
    689c:	ldr	w2, [sp, #60]
    68a0:	ldr	w1, [sp, #60]
    68a4:	mov	w0, #0x2                   	// #2
    68a8:	cmp	w2, #0x2
    68ac:	csel	w0, w1, w0, ge  // ge = tcont
    68b0:	sub	w0, w0, #0x2
    68b4:	mov	w7, w0
    68b8:	mov	w6, w3
    68bc:	ldr	w5, [sp, #68]
    68c0:	ldr	w4, [sp, #64]
    68c4:	ldr	x3, [sp, #112]
    68c8:	ldr	x2, [sp, #168]
    68cc:	ldr	x1, [sp, #144]
    68d0:	ldr	x0, [sp, #40]
    68d4:	bl	4924 <S_ithread_create>
    68d8:	str	x0, [sp, #160]
    68dc:	ldr	x0, [sp, #160]
    68e0:	cmp	x0, #0x0
    68e4:	b.ne	693c <XS_threads_create+0x1798>  // b.any
    68e8:	ldr	x0, [sp, #40]
    68ec:	ldr	x1, [x0, #24]
    68f0:	ldrsw	x0, [sp, #76]
    68f4:	lsl	x0, x0, #3
    68f8:	add	x0, x1, x0
    68fc:	ldr	x1, [sp, #40]
    6900:	add	x1, x1, #0x150
    6904:	str	x1, [x0]
    6908:	mov	x0, #0x1                   	// #1
    690c:	str	x0, [sp, #200]
    6910:	ldr	x0, [sp, #40]
    6914:	ldr	x1, [x0, #24]
    6918:	ldrsw	x2, [sp, #76]
    691c:	ldr	x0, [sp, #200]
    6920:	add	x0, x2, x0
    6924:	lsl	x0, x0, #3
    6928:	sub	x0, x0, #0x8
    692c:	add	x1, x1, x0
    6930:	ldr	x0, [sp, #40]
    6934:	str	x1, [x0]
    6938:	b	69e8 <XS_threads_create+0x1844>
    693c:	mov	w4, #0x0                   	// #0
    6940:	ldr	x3, [sp, #96]
    6944:	ldr	x2, [sp, #160]
    6948:	mov	x1, #0x0                   	// #0
    694c:	ldr	x0, [sp, #40]
    6950:	bl	47c8 <S_ithread_to_SV>
    6954:	mov	x2, x0
    6958:	ldr	x0, [sp, #40]
    695c:	ldr	x1, [x0, #24]
    6960:	ldrsw	x0, [sp, #76]
    6964:	lsl	x0, x0, #3
    6968:	add	x19, x1, x0
    696c:	mov	x1, x2
    6970:	ldr	x0, [sp, #40]
    6974:	bl	2550 <Perl_sv_2mortal@plt>
    6978:	str	x0, [x19]
    697c:	ldr	x0, [sp, #160]
    6980:	add	x0, x0, #0x20
    6984:	bl	2730 <pthread_mutex_unlock@plt>
    6988:	str	w0, [sp, #92]
    698c:	ldr	w0, [sp, #92]
    6990:	cmp	w0, #0x0
    6994:	b.eq	69b4 <XS_threads_create+0x1810>  // b.none
    6998:	mov	w3, #0x49c                 	// #1180
    699c:	adrp	x0, a000 <XS_threads_error+0x190>
    69a0:	add	x2, x0, #0x700
    69a4:	ldr	w1, [sp, #92]
    69a8:	adrp	x0, a000 <XS_threads_error+0x190>
    69ac:	add	x0, x0, #0x750
    69b0:	bl	2510 <Perl_croak_nocontext@plt>
    69b4:	mov	x0, #0x1                   	// #1
    69b8:	str	x0, [sp, #192]
    69bc:	ldr	x0, [sp, #40]
    69c0:	ldr	x1, [x0, #24]
    69c4:	ldrsw	x2, [sp, #76]
    69c8:	ldr	x0, [sp, #192]
    69cc:	add	x0, x2, x0
    69d0:	lsl	x0, x0, #3
    69d4:	sub	x0, x0, #0x8
    69d8:	add	x1, x1, x0
    69dc:	ldr	x0, [sp, #40]
    69e0:	str	x1, [x0]
    69e4:	nop
    69e8:	ldr	x19, [sp, #16]
    69ec:	ldp	x29, x30, [sp], #208
    69f0:	ret

00000000000069f4 <XS_threads_list>:
    69f4:	stp	x29, x30, [sp, #-160]!
    69f8:	mov	x29, sp
    69fc:	str	x19, [sp, #16]
    6a00:	str	x0, [sp, #40]
    6a04:	str	x1, [sp, #32]
    6a08:	ldr	x0, [sp, #40]
    6a0c:	ldr	x0, [x0]
    6a10:	str	x0, [sp, #96]
    6a14:	ldr	x0, [sp, #40]
    6a18:	bl	28e0 <S_POPMARK>
    6a1c:	str	w0, [sp, #64]
    6a20:	ldr	x0, [sp, #40]
    6a24:	ldr	x1, [x0, #24]
    6a28:	ldr	w0, [sp, #64]
    6a2c:	add	w2, w0, #0x1
    6a30:	str	w2, [sp, #64]
    6a34:	sxtw	x0, w0
    6a38:	lsl	x0, x0, #3
    6a3c:	add	x0, x1, x0
    6a40:	str	x0, [sp, #120]
    6a44:	ldr	x1, [sp, #96]
    6a48:	ldr	x0, [sp, #120]
    6a4c:	sub	x0, x1, x0
    6a50:	asr	x0, x0, #3
    6a54:	str	w0, [sp, #68]
    6a58:	ldrsw	x0, [sp, #68]
    6a5c:	lsl	x0, x0, #3
    6a60:	neg	x0, x0
    6a64:	ldr	x1, [sp, #96]
    6a68:	add	x0, x1, x0
    6a6c:	str	x0, [sp, #96]
    6a70:	str	xzr, [sp, #112]
    6a74:	str	wzr, [sp, #60]
    6a78:	ldr	x0, [sp, #40]
    6a7c:	ldr	x1, [x0, #2032]
    6a80:	mov	w6, #0x0                   	// #0
    6a84:	mov	x5, #0x0                   	// #0
    6a88:	mov	w4, #0x30                  	// #48
    6a8c:	mov	w3, #0x12                  	// #18
    6a90:	adrp	x0, a000 <XS_threads_error+0x190>
    6a94:	add	x2, x0, #0x738
    6a98:	ldr	x0, [sp, #40]
    6a9c:	bl	2610 <Perl_hv_common_key_len@plt>
    6aa0:	ldr	x0, [x0]
    6aa4:	str	x0, [sp, #128]
    6aa8:	ldr	x0, [sp, #128]
    6aac:	ldr	w1, [x0, #12]
    6ab0:	mov	w0, #0x100                 	// #256
    6ab4:	movk	w0, #0x8020, lsl #16
    6ab8:	and	w1, w1, w0
    6abc:	mov	w0, #0x100                 	// #256
    6ac0:	movk	w0, #0x8000, lsl #16
    6ac4:	cmp	w1, w0
    6ac8:	b.ne	6adc <XS_threads_list+0xe8>  // b.any
    6acc:	ldr	x0, [sp, #128]
    6ad0:	ldr	x0, [x0]
    6ad4:	ldr	x0, [x0, #32]
    6ad8:	b	6aec <XS_threads_list+0xf8>
    6adc:	mov	w2, #0x2                   	// #2
    6ae0:	ldr	x1, [sp, #128]
    6ae4:	ldr	x0, [sp, #40]
    6ae8:	bl	21d0 <Perl_sv_2uv_flags@plt>
    6aec:	str	x0, [sp, #136]
    6af0:	ldr	x0, [sp, #40]
    6af4:	ldr	x1, [x0, #24]
    6af8:	ldrsw	x0, [sp, #64]
    6afc:	lsl	x0, x0, #3
    6b00:	add	x0, x1, x0
    6b04:	ldr	x0, [x0]
    6b08:	ldr	w0, [x0, #12]
    6b0c:	and	w0, w0, #0x800
    6b10:	cmp	w0, #0x0
    6b14:	b.eq	6b28 <XS_threads_list+0x134>  // b.none
    6b18:	adrp	x0, a000 <XS_threads_error+0x190>
    6b1c:	add	x1, x0, #0xa60
    6b20:	ldr	x0, [sp, #40]
    6b24:	bl	24d0 <Perl_croak@plt>
    6b28:	ldr	x0, [sp, #40]
    6b2c:	ldr	x1, [x0, #24]
    6b30:	ldrsw	x0, [sp, #64]
    6b34:	lsl	x0, x0, #3
    6b38:	add	x0, x1, x0
    6b3c:	ldr	x0, [x0]
    6b40:	ldr	w1, [x0, #12]
    6b44:	mov	w0, #0x400                 	// #1024
    6b48:	movk	w0, #0x20, lsl #16
    6b4c:	and	w0, w1, w0
    6b50:	cmp	w0, #0x400
    6b54:	b.ne	6b78 <XS_threads_list+0x184>  // b.any
    6b58:	ldr	x0, [sp, #40]
    6b5c:	ldr	x1, [x0, #24]
    6b60:	ldrsw	x0, [sp, #64]
    6b64:	lsl	x0, x0, #3
    6b68:	add	x0, x1, x0
    6b6c:	ldr	x0, [x0]
    6b70:	ldr	x0, [x0, #16]
    6b74:	b	6ba4 <XS_threads_list+0x1b0>
    6b78:	ldr	x0, [sp, #40]
    6b7c:	ldr	x1, [x0, #24]
    6b80:	ldrsw	x0, [sp, #64]
    6b84:	lsl	x0, x0, #3
    6b88:	add	x0, x1, x0
    6b8c:	ldr	x0, [x0]
    6b90:	mov	w3, #0x2                   	// #2
    6b94:	mov	x2, #0x0                   	// #0
    6b98:	mov	x1, x0
    6b9c:	ldr	x0, [sp, #40]
    6ba0:	bl	2370 <Perl_sv_2pv_flags@plt>
    6ba4:	str	x0, [sp, #144]
    6ba8:	ldr	x0, [sp, #40]
    6bac:	ldr	x0, [x0, #8]
    6bb0:	ldrb	w0, [x0, #34]
    6bb4:	and	w0, w0, #0x3
    6bb8:	cmp	w0, #0x0
    6bbc:	b.eq	6be0 <XS_threads_list+0x1ec>  // b.none
    6bc0:	ldr	x0, [sp, #40]
    6bc4:	ldr	x0, [x0, #8]
    6bc8:	ldrb	w0, [x0, #34]
    6bcc:	and	w0, w0, #0x3
    6bd0:	cmp	w0, #0x3
    6bd4:	cset	w0, eq  // eq = none
    6bd8:	and	w0, w0, #0xff
    6bdc:	b	6bf8 <XS_threads_list+0x204>
    6be0:	ldr	x0, [sp, #40]
    6be4:	bl	2640 <Perl_block_gimme@plt>
    6be8:	and	w0, w0, #0xff
    6bec:	cmp	w0, #0x3
    6bf0:	cset	w0, eq  // eq = none
    6bf4:	and	w0, w0, #0xff
    6bf8:	str	w0, [sp, #72]
    6bfc:	ldr	w0, [sp, #68]
    6c00:	cmp	w0, #0x1
    6c04:	b.le	6f94 <XS_threads_list+0x5a0>
    6c08:	ldr	x0, [sp, #40]
    6c0c:	ldr	x1, [x0, #24]
    6c10:	ldrsw	x0, [sp, #64]
    6c14:	add	x0, x0, #0x1
    6c18:	lsl	x0, x0, #3
    6c1c:	add	x0, x1, x0
    6c20:	ldr	x0, [x0]
    6c24:	cmp	x0, #0x0
    6c28:	cset	w0, ne  // ne = any
    6c2c:	and	w0, w0, #0xff
    6c30:	and	x0, x0, #0xff
    6c34:	cmp	x0, #0x0
    6c38:	b.eq	6f8c <XS_threads_list+0x598>  // b.none
    6c3c:	ldr	x0, [sp, #40]
    6c40:	ldr	x1, [x0, #24]
    6c44:	ldrsw	x0, [sp, #64]
    6c48:	add	x0, x0, #0x1
    6c4c:	lsl	x0, x0, #3
    6c50:	add	x0, x1, x0
    6c54:	ldr	x0, [x0]
    6c58:	ldr	w0, [x0, #12]
    6c5c:	lsr	w0, w0, #21
    6c60:	mov	w0, w0
    6c64:	and	x0, x0, #0x1
    6c68:	cmp	x0, #0x0
    6c6c:	b.eq	6ca0 <XS_threads_list+0x2ac>  // b.none
    6c70:	ldr	x0, [sp, #40]
    6c74:	ldr	x1, [x0, #24]
    6c78:	ldrsw	x0, [sp, #64]
    6c7c:	add	x0, x0, #0x1
    6c80:	lsl	x0, x0, #3
    6c84:	add	x0, x1, x0
    6c88:	ldr	x0, [x0]
    6c8c:	mov	x1, x0
    6c90:	ldr	x0, [sp, #40]
    6c94:	bl	2560 <Perl_mg_get@plt>
    6c98:	cmp	w0, #0x0
    6c9c:	nop
    6ca0:	ldr	x0, [sp, #40]
    6ca4:	ldr	x1, [x0, #24]
    6ca8:	ldrsw	x0, [sp, #64]
    6cac:	add	x0, x0, #0x1
    6cb0:	lsl	x0, x0, #3
    6cb4:	add	x0, x1, x0
    6cb8:	ldr	x1, [x0]
    6cbc:	ldr	x0, [sp, #40]
    6cc0:	add	x0, x0, #0x138
    6cc4:	sub	x0, x1, x0
    6cc8:	asr	x1, x0, #3
    6ccc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6cd0:	movk	x0, #0xaaab
    6cd4:	mul	x0, x1, x0
    6cd8:	cmp	x0, #0x3
    6cdc:	b.hi	6d14 <XS_threads_list+0x320>  // b.pmore
    6ce0:	ldr	x0, [sp, #40]
    6ce4:	ldr	x1, [x0, #24]
    6ce8:	ldrsw	x0, [sp, #64]
    6cec:	add	x0, x0, #0x1
    6cf0:	lsl	x0, x0, #3
    6cf4:	add	x0, x1, x0
    6cf8:	ldr	x1, [x0]
    6cfc:	ldr	x0, [sp, #40]
    6d00:	add	x0, x0, #0x138
    6d04:	cmp	x1, x0
    6d08:	cset	w0, eq  // eq = none
    6d0c:	and	w0, w0, #0xff
    6d10:	b	6f7c <XS_threads_list+0x588>
    6d14:	ldr	x0, [sp, #40]
    6d18:	ldr	x1, [x0, #24]
    6d1c:	ldrsw	x0, [sp, #64]
    6d20:	add	x0, x0, #0x1
    6d24:	lsl	x0, x0, #3
    6d28:	add	x0, x1, x0
    6d2c:	ldr	x0, [x0]
    6d30:	ldr	w0, [x0, #12]
    6d34:	and	w0, w0, #0xff00
    6d38:	cmp	w0, #0x0
    6d3c:	b.eq	6f78 <XS_threads_list+0x584>  // b.none
    6d40:	ldr	x0, [sp, #40]
    6d44:	ldr	x1, [x0, #24]
    6d48:	ldrsw	x0, [sp, #64]
    6d4c:	add	x0, x0, #0x1
    6d50:	lsl	x0, x0, #3
    6d54:	add	x0, x1, x0
    6d58:	ldr	x0, [x0]
    6d5c:	ldr	w0, [x0, #12]
    6d60:	and	w0, w0, #0x400
    6d64:	cmp	w0, #0x0
    6d68:	b.eq	6e34 <XS_threads_list+0x440>  // b.none
    6d6c:	ldr	x0, [sp, #40]
    6d70:	ldr	x1, [x0, #24]
    6d74:	ldrsw	x0, [sp, #64]
    6d78:	add	x0, x0, #0x1
    6d7c:	lsl	x0, x0, #3
    6d80:	add	x0, x1, x0
    6d84:	ldr	x0, [x0]
    6d88:	ldr	x0, [x0]
    6d8c:	cmp	x0, #0x0
    6d90:	b.eq	6e20 <XS_threads_list+0x42c>  // b.none
    6d94:	ldr	x0, [sp, #40]
    6d98:	ldr	x1, [x0, #24]
    6d9c:	ldrsw	x0, [sp, #64]
    6da0:	add	x0, x0, #0x1
    6da4:	lsl	x0, x0, #3
    6da8:	add	x0, x1, x0
    6dac:	ldr	x0, [x0]
    6db0:	ldr	x0, [x0]
    6db4:	ldr	x0, [x0, #16]
    6db8:	cmp	x0, #0x1
    6dbc:	b.hi	6e18 <XS_threads_list+0x424>  // b.pmore
    6dc0:	ldr	x0, [sp, #40]
    6dc4:	ldr	x1, [x0, #24]
    6dc8:	ldrsw	x0, [sp, #64]
    6dcc:	add	x0, x0, #0x1
    6dd0:	lsl	x0, x0, #3
    6dd4:	add	x0, x1, x0
    6dd8:	ldr	x0, [x0]
    6ddc:	ldr	x0, [x0]
    6de0:	ldr	x0, [x0, #16]
    6de4:	cmp	x0, #0x0
    6de8:	b.eq	6e20 <XS_threads_list+0x42c>  // b.none
    6dec:	ldr	x0, [sp, #40]
    6df0:	ldr	x1, [x0, #24]
    6df4:	ldrsw	x0, [sp, #64]
    6df8:	add	x0, x0, #0x1
    6dfc:	lsl	x0, x0, #3
    6e00:	add	x0, x1, x0
    6e04:	ldr	x0, [x0]
    6e08:	ldr	x0, [x0, #16]
    6e0c:	ldrb	w0, [x0]
    6e10:	cmp	w0, #0x30
    6e14:	b.eq	6e20 <XS_threads_list+0x42c>  // b.none
    6e18:	mov	w0, #0x1                   	// #1
    6e1c:	b	6e24 <XS_threads_list+0x430>
    6e20:	mov	w0, #0x0                   	// #0
    6e24:	cmp	w0, #0x0
    6e28:	cset	w0, ne  // ne = any
    6e2c:	and	w0, w0, #0xff
    6e30:	b	6f7c <XS_threads_list+0x588>
    6e34:	ldr	x0, [sp, #40]
    6e38:	ldr	x1, [x0, #24]
    6e3c:	ldrsw	x0, [sp, #64]
    6e40:	add	x0, x0, #0x1
    6e44:	lsl	x0, x0, #3
    6e48:	add	x0, x1, x0
    6e4c:	ldr	x0, [x0]
    6e50:	ldr	w0, [x0, #12]
    6e54:	and	w0, w0, #0x100
    6e58:	cmp	w0, #0x0
    6e5c:	b.eq	6e94 <XS_threads_list+0x4a0>  // b.none
    6e60:	ldr	x0, [sp, #40]
    6e64:	ldr	x1, [x0, #24]
    6e68:	ldrsw	x0, [sp, #64]
    6e6c:	add	x0, x0, #0x1
    6e70:	lsl	x0, x0, #3
    6e74:	add	x0, x1, x0
    6e78:	ldr	x0, [x0]
    6e7c:	ldr	x0, [x0]
    6e80:	ldr	x0, [x0, #32]
    6e84:	cmp	x0, #0x0
    6e88:	cset	w0, ne  // ne = any
    6e8c:	and	w0, w0, #0xff
    6e90:	b	6f7c <XS_threads_list+0x588>
    6e94:	ldr	x0, [sp, #40]
    6e98:	ldr	x1, [x0, #24]
    6e9c:	ldrsw	x0, [sp, #64]
    6ea0:	add	x0, x0, #0x1
    6ea4:	lsl	x0, x0, #3
    6ea8:	add	x0, x1, x0
    6eac:	ldr	x0, [x0]
    6eb0:	ldr	w0, [x0, #12]
    6eb4:	and	w0, w0, #0x800
    6eb8:	cmp	w0, #0x0
    6ebc:	b.eq	6f28 <XS_threads_list+0x534>  // b.none
    6ec0:	ldr	x0, [sp, #40]
    6ec4:	ldr	x1, [x0, #24]
    6ec8:	ldrsw	x0, [sp, #64]
    6ecc:	add	x0, x0, #0x1
    6ed0:	lsl	x0, x0, #3
    6ed4:	add	x0, x1, x0
    6ed8:	ldr	x0, [x0]
    6edc:	ldr	x0, [x0, #16]
    6ee0:	ldr	w0, [x0, #12]
    6ee4:	and	w0, w0, #0x100000
    6ee8:	cmp	w0, #0x0
    6eec:	b.eq	6f60 <XS_threads_list+0x56c>  // b.none
    6ef0:	ldr	x0, [sp, #40]
    6ef4:	ldr	x1, [x0, #24]
    6ef8:	ldrsw	x0, [sp, #64]
    6efc:	add	x0, x0, #0x1
    6f00:	lsl	x0, x0, #3
    6f04:	add	x0, x1, x0
    6f08:	ldr	x0, [x0]
    6f0c:	ldr	x0, [x0, #16]
    6f10:	ldr	x0, [x0]
    6f14:	ldr	x0, [x0]
    6f18:	ldr	w0, [x0, #12]
    6f1c:	and	w0, w0, #0x10000000
    6f20:	cmp	w0, #0x0
    6f24:	b.eq	6f60 <XS_threads_list+0x56c>  // b.none
    6f28:	ldr	x0, [sp, #40]
    6f2c:	ldr	x1, [x0, #24]
    6f30:	ldrsw	x0, [sp, #64]
    6f34:	add	x0, x0, #0x1
    6f38:	lsl	x0, x0, #3
    6f3c:	add	x0, x1, x0
    6f40:	ldr	x0, [x0]
    6f44:	mov	w2, #0x0                   	// #0
    6f48:	mov	x1, x0
    6f4c:	ldr	x0, [sp, #40]
    6f50:	bl	2180 <Perl_sv_2bool_flags@plt>
    6f54:	and	w0, w0, #0xff
    6f58:	cmp	w0, #0x0
    6f5c:	b.eq	6f68 <XS_threads_list+0x574>  // b.none
    6f60:	mov	w0, #0x1                   	// #1
    6f64:	b	6f6c <XS_threads_list+0x578>
    6f68:	mov	w0, #0x0                   	// #0
    6f6c:	and	w0, w0, #0x1
    6f70:	and	w0, w0, #0xff
    6f74:	b	6f7c <XS_threads_list+0x588>
    6f78:	mov	w0, #0x0                   	// #0
    6f7c:	cmp	w0, #0x0
    6f80:	b.eq	6f8c <XS_threads_list+0x598>  // b.none
    6f84:	mov	w0, #0x1                   	// #1
    6f88:	b	6f90 <XS_threads_list+0x59c>
    6f8c:	mov	w0, #0x0                   	// #0
    6f90:	str	w0, [sp, #60]
    6f94:	ldr	x0, [sp, #136]
    6f98:	add	x0, x0, #0x110
    6f9c:	bl	2720 <pthread_mutex_lock@plt>
    6fa0:	str	w0, [sp, #76]
    6fa4:	ldr	w0, [sp, #76]
    6fa8:	cmp	w0, #0x0
    6fac:	b.eq	6fcc <XS_threads_list+0x5d8>  // b.none
    6fb0:	mov	w3, #0x4bc                 	// #1212
    6fb4:	adrp	x0, a000 <XS_threads_error+0x190>
    6fb8:	add	x2, x0, #0x700
    6fbc:	ldr	w1, [sp, #76]
    6fc0:	adrp	x0, a000 <XS_threads_error+0x190>
    6fc4:	add	x0, x0, #0x778
    6fc8:	bl	2510 <Perl_croak_nocontext@plt>
    6fcc:	ldr	x0, [sp, #136]
    6fd0:	ldr	x0, [x0]
    6fd4:	str	x0, [sp, #104]
    6fd8:	b	7154 <XS_threads_list+0x760>
    6fdc:	ldr	x0, [sp, #104]
    6fe0:	add	x0, x0, #0x20
    6fe4:	bl	2720 <pthread_mutex_lock@plt>
    6fe8:	str	w0, [sp, #84]
    6fec:	ldr	w0, [sp, #84]
    6ff0:	cmp	w0, #0x0
    6ff4:	b.eq	7014 <XS_threads_list+0x620>  // b.none
    6ff8:	mov	w3, #0x4c1                 	// #1217
    6ffc:	adrp	x0, a000 <XS_threads_error+0x190>
    7000:	add	x2, x0, #0x700
    7004:	ldr	w1, [sp, #84]
    7008:	adrp	x0, a000 <XS_threads_error+0x190>
    700c:	add	x0, x0, #0x778
    7010:	bl	2510 <Perl_croak_nocontext@plt>
    7014:	ldr	x0, [sp, #104]
    7018:	ldr	w0, [x0, #84]
    701c:	str	w0, [sp, #88]
    7020:	ldr	x0, [sp, #104]
    7024:	add	x0, x0, #0x20
    7028:	bl	2730 <pthread_mutex_unlock@plt>
    702c:	str	w0, [sp, #92]
    7030:	ldr	w0, [sp, #92]
    7034:	cmp	w0, #0x0
    7038:	b.eq	7058 <XS_threads_list+0x664>  // b.none
    703c:	mov	w3, #0x4c3                 	// #1219
    7040:	adrp	x0, a000 <XS_threads_error+0x190>
    7044:	add	x2, x0, #0x700
    7048:	ldr	w1, [sp, #92]
    704c:	adrp	x0, a000 <XS_threads_error+0x190>
    7050:	add	x0, x0, #0x750
    7054:	bl	2510 <Perl_croak_nocontext@plt>
    7058:	ldr	w0, [sp, #88]
    705c:	and	w0, w0, #0x3
    7060:	cmp	w0, #0x0
    7064:	b.ne	713c <XS_threads_list+0x748>  // b.any
    7068:	ldr	w0, [sp, #68]
    706c:	cmp	w0, #0x1
    7070:	b.le	70a4 <XS_threads_list+0x6b0>
    7074:	ldr	w0, [sp, #60]
    7078:	cmp	w0, #0x0
    707c:	b.eq	7094 <XS_threads_list+0x6a0>  // b.none
    7080:	ldr	w0, [sp, #88]
    7084:	and	w0, w0, #0x4
    7088:	cmp	w0, #0x0
    708c:	b.eq	70a4 <XS_threads_list+0x6b0>  // b.none
    7090:	b	7148 <XS_threads_list+0x754>
    7094:	ldr	w0, [sp, #88]
    7098:	and	w0, w0, #0x4
    709c:	cmp	w0, #0x0
    70a0:	b.eq	7144 <XS_threads_list+0x750>  // b.none
    70a4:	ldr	w0, [sp, #72]
    70a8:	cmp	w0, #0x0
    70ac:	b.eq	712c <XS_threads_list+0x738>  // b.none
    70b0:	ldr	x0, [sp, #40]
    70b4:	ldr	x1, [x0, #32]
    70b8:	ldr	x0, [sp, #96]
    70bc:	sub	x0, x1, x0
    70c0:	cmp	x0, #0x0
    70c4:	cset	w0, le
    70c8:	and	w0, w0, #0xff
    70cc:	and	x0, x0, #0xff
    70d0:	cmp	x0, #0x0
    70d4:	b.eq	70f0 <XS_threads_list+0x6fc>  // b.none
    70d8:	mov	x3, #0x1                   	// #1
    70dc:	ldr	x2, [sp, #96]
    70e0:	ldr	x1, [sp, #96]
    70e4:	ldr	x0, [sp, #40]
    70e8:	bl	21e0 <Perl_stack_grow@plt>
    70ec:	str	x0, [sp, #96]
    70f0:	mov	w4, #0x1                   	// #1
    70f4:	ldr	x3, [sp, #144]
    70f8:	ldr	x2, [sp, #104]
    70fc:	mov	x1, #0x0                   	// #0
    7100:	ldr	x0, [sp, #40]
    7104:	bl	47c8 <S_ithread_to_SV>
    7108:	mov	x1, x0
    710c:	ldr	x0, [sp, #96]
    7110:	add	x0, x0, #0x8
    7114:	str	x0, [sp, #96]
    7118:	ldr	x0, [sp, #40]
    711c:	bl	2550 <Perl_sv_2mortal@plt>
    7120:	mov	x1, x0
    7124:	ldr	x0, [sp, #96]
    7128:	str	x1, [x0]
    712c:	ldr	x0, [sp, #112]
    7130:	add	x0, x0, #0x1
    7134:	str	x0, [sp, #112]
    7138:	b	7148 <XS_threads_list+0x754>
    713c:	nop
    7140:	b	7148 <XS_threads_list+0x754>
    7144:	nop
    7148:	ldr	x0, [sp, #104]
    714c:	ldr	x0, [x0]
    7150:	str	x0, [sp, #104]
    7154:	ldr	x0, [sp, #136]
    7158:	ldr	x1, [sp, #104]
    715c:	cmp	x1, x0
    7160:	b.ne	6fdc <XS_threads_list+0x5e8>  // b.any
    7164:	ldr	x0, [sp, #136]
    7168:	add	x0, x0, #0x110
    716c:	bl	2730 <pthread_mutex_unlock@plt>
    7170:	str	w0, [sp, #80]
    7174:	ldr	w0, [sp, #80]
    7178:	cmp	w0, #0x0
    717c:	b.eq	719c <XS_threads_list+0x7a8>  // b.none
    7180:	mov	w3, #0x4dd                 	// #1245
    7184:	adrp	x0, a000 <XS_threads_error+0x190>
    7188:	add	x2, x0, #0x700
    718c:	ldr	w1, [sp, #80]
    7190:	adrp	x0, a000 <XS_threads_error+0x190>
    7194:	add	x0, x0, #0x750
    7198:	bl	2510 <Perl_croak_nocontext@plt>
    719c:	ldr	w0, [sp, #72]
    71a0:	cmp	w0, #0x0
    71a4:	b.ne	7210 <XS_threads_list+0x81c>  // b.any
    71a8:	ldr	x1, [sp, #112]
    71ac:	ldr	x0, [sp, #40]
    71b0:	bl	26b0 <Perl_newSViv@plt>
    71b4:	mov	x2, x0
    71b8:	ldr	x0, [sp, #40]
    71bc:	ldr	x1, [x0, #24]
    71c0:	ldrsw	x0, [sp, #64]
    71c4:	lsl	x0, x0, #3
    71c8:	add	x19, x1, x0
    71cc:	mov	x1, x2
    71d0:	ldr	x0, [sp, #40]
    71d4:	bl	2550 <Perl_sv_2mortal@plt>
    71d8:	str	x0, [x19]
    71dc:	mov	x0, #0x1                   	// #1
    71e0:	str	x0, [sp, #152]
    71e4:	ldr	x0, [sp, #40]
    71e8:	ldr	x1, [x0, #24]
    71ec:	ldrsw	x2, [sp, #64]
    71f0:	ldr	x0, [sp, #152]
    71f4:	add	x0, x2, x0
    71f8:	lsl	x0, x0, #3
    71fc:	sub	x0, x0, #0x8
    7200:	add	x1, x1, x0
    7204:	ldr	x0, [sp, #40]
    7208:	str	x1, [x0]
    720c:	b	7220 <XS_threads_list+0x82c>
    7210:	ldr	x0, [sp, #40]
    7214:	ldr	x1, [sp, #96]
    7218:	str	x1, [x0]
    721c:	nop
    7220:	ldr	x19, [sp, #16]
    7224:	ldp	x29, x30, [sp], #160
    7228:	ret

000000000000722c <XS_threads_self>:
    722c:	stp	x29, x30, [sp, #-96]!
    7230:	mov	x29, sp
    7234:	str	x19, [sp, #16]
    7238:	str	x0, [sp, #40]
    723c:	str	x1, [sp, #32]
    7240:	ldr	x0, [sp, #40]
    7244:	ldr	x0, [x0]
    7248:	str	x0, [sp, #56]
    724c:	ldr	x0, [sp, #40]
    7250:	bl	28e0 <S_POPMARK>
    7254:	str	w0, [sp, #48]
    7258:	ldr	x0, [sp, #40]
    725c:	ldr	x1, [x0, #24]
    7260:	ldr	w0, [sp, #48]
    7264:	add	w2, w0, #0x1
    7268:	str	w2, [sp, #48]
    726c:	sxtw	x0, w0
    7270:	lsl	x0, x0, #3
    7274:	add	x0, x1, x0
    7278:	str	x0, [sp, #64]
    727c:	ldr	x1, [sp, #56]
    7280:	ldr	x0, [sp, #64]
    7284:	sub	x0, x1, x0
    7288:	asr	x0, x0, #3
    728c:	str	w0, [sp, #52]
    7290:	ldr	w0, [sp, #52]
    7294:	cmp	w0, #0x1
    7298:	b.ne	72c4 <XS_threads_self+0x98>  // b.any
    729c:	ldr	x0, [sp, #40]
    72a0:	ldr	x1, [x0, #24]
    72a4:	ldrsw	x0, [sp, #48]
    72a8:	lsl	x0, x0, #3
    72ac:	add	x0, x1, x0
    72b0:	ldr	x0, [x0]
    72b4:	ldr	w0, [x0, #12]
    72b8:	and	w0, w0, #0x800
    72bc:	cmp	w0, #0x0
    72c0:	b.eq	72d4 <XS_threads_self+0xa8>  // b.none
    72c4:	adrp	x0, a000 <XS_threads_error+0x190>
    72c8:	add	x1, x0, #0xa80
    72cc:	ldr	x0, [sp, #40]
    72d0:	bl	24d0 <Perl_croak@plt>
    72d4:	ldr	x0, [sp, #40]
    72d8:	ldr	x1, [x0, #24]
    72dc:	ldrsw	x0, [sp, #48]
    72e0:	lsl	x0, x0, #3
    72e4:	add	x0, x1, x0
    72e8:	ldr	x0, [x0]
    72ec:	ldr	w1, [x0, #12]
    72f0:	mov	w0, #0x400                 	// #1024
    72f4:	movk	w0, #0x20, lsl #16
    72f8:	and	w0, w1, w0
    72fc:	cmp	w0, #0x400
    7300:	b.ne	7324 <XS_threads_self+0xf8>  // b.any
    7304:	ldr	x0, [sp, #40]
    7308:	ldr	x1, [x0, #24]
    730c:	ldrsw	x0, [sp, #48]
    7310:	lsl	x0, x0, #3
    7314:	add	x0, x1, x0
    7318:	ldr	x0, [x0]
    731c:	ldr	x0, [x0, #16]
    7320:	b	7350 <XS_threads_self+0x124>
    7324:	ldr	x0, [sp, #40]
    7328:	ldr	x1, [x0, #24]
    732c:	ldrsw	x0, [sp, #48]
    7330:	lsl	x0, x0, #3
    7334:	add	x0, x1, x0
    7338:	ldr	x0, [x0]
    733c:	mov	w3, #0x2                   	// #2
    7340:	mov	x2, #0x0                   	// #0
    7344:	mov	x1, x0
    7348:	ldr	x0, [sp, #40]
    734c:	bl	2370 <Perl_sv_2pv_flags@plt>
    7350:	str	x0, [sp, #72]
    7354:	ldr	x0, [sp, #40]
    7358:	bl	2b30 <S_ithread_get>
    735c:	str	x0, [sp, #80]
    7360:	mov	w4, #0x1                   	// #1
    7364:	ldr	x3, [sp, #72]
    7368:	ldr	x2, [sp, #80]
    736c:	mov	x1, #0x0                   	// #0
    7370:	ldr	x0, [sp, #40]
    7374:	bl	47c8 <S_ithread_to_SV>
    7378:	mov	x2, x0
    737c:	ldr	x0, [sp, #40]
    7380:	ldr	x1, [x0, #24]
    7384:	ldrsw	x0, [sp, #48]
    7388:	lsl	x0, x0, #3
    738c:	add	x19, x1, x0
    7390:	mov	x1, x2
    7394:	ldr	x0, [sp, #40]
    7398:	bl	2550 <Perl_sv_2mortal@plt>
    739c:	str	x0, [x19]
    73a0:	mov	x0, #0x1                   	// #1
    73a4:	str	x0, [sp, #88]
    73a8:	ldr	x0, [sp, #40]
    73ac:	ldr	x1, [x0, #24]
    73b0:	ldrsw	x2, [sp, #48]
    73b4:	ldr	x0, [sp, #88]
    73b8:	add	x0, x2, x0
    73bc:	lsl	x0, x0, #3
    73c0:	sub	x0, x0, #0x8
    73c4:	add	x1, x1, x0
    73c8:	ldr	x0, [sp, #40]
    73cc:	str	x1, [x0]
    73d0:	nop
    73d4:	ldr	x19, [sp, #16]
    73d8:	ldp	x29, x30, [sp], #96
    73dc:	ret

00000000000073e0 <XS_threads_tid>:
    73e0:	stp	x29, x30, [sp, #-96]!
    73e4:	mov	x29, sp
    73e8:	str	x19, [sp, #16]
    73ec:	str	x0, [sp, #40]
    73f0:	str	x1, [sp, #32]
    73f4:	ldr	x0, [sp, #40]
    73f8:	ldr	x0, [x0]
    73fc:	str	x0, [sp, #64]
    7400:	ldr	x0, [sp, #40]
    7404:	bl	28e0 <S_POPMARK>
    7408:	str	w0, [sp, #56]
    740c:	ldr	x0, [sp, #40]
    7410:	ldr	x1, [x0, #24]
    7414:	ldr	w0, [sp, #56]
    7418:	add	w2, w0, #0x1
    741c:	str	w2, [sp, #56]
    7420:	sxtw	x0, w0
    7424:	lsl	x0, x0, #3
    7428:	add	x0, x1, x0
    742c:	str	x0, [sp, #72]
    7430:	ldr	x1, [sp, #64]
    7434:	ldr	x0, [sp, #72]
    7438:	sub	x0, x1, x0
    743c:	asr	x0, x0, #3
    7440:	str	w0, [sp, #60]
    7444:	ldr	x0, [sp, #40]
    7448:	ldr	x1, [x0, #24]
    744c:	ldrsw	x0, [sp, #56]
    7450:	lsl	x0, x0, #3
    7454:	add	x0, x1, x0
    7458:	ldr	x0, [x0]
    745c:	mov	x1, x0
    7460:	ldr	x0, [sp, #40]
    7464:	bl	48a0 <S_SV_to_ithread>
    7468:	str	x0, [sp, #80]
    746c:	ldr	x0, [sp, #80]
    7470:	ldr	x0, [x0, #24]
    7474:	mov	x1, x0
    7478:	ldr	x0, [sp, #40]
    747c:	bl	2580 <Perl_newSVuv@plt>
    7480:	mov	x2, x0
    7484:	ldr	x0, [sp, #40]
    7488:	ldr	x1, [x0, #24]
    748c:	ldrsw	x0, [sp, #56]
    7490:	lsl	x0, x0, #3
    7494:	add	x19, x1, x0
    7498:	mov	x1, x2
    749c:	ldr	x0, [sp, #40]
    74a0:	bl	2550 <Perl_sv_2mortal@plt>
    74a4:	str	x0, [x19]
    74a8:	mov	x0, #0x1                   	// #1
    74ac:	str	x0, [sp, #88]
    74b0:	ldr	x0, [sp, #40]
    74b4:	ldr	x1, [x0, #24]
    74b8:	ldrsw	x2, [sp, #56]
    74bc:	ldr	x0, [sp, #88]
    74c0:	add	x0, x2, x0
    74c4:	lsl	x0, x0, #3
    74c8:	sub	x0, x0, #0x8
    74cc:	add	x1, x1, x0
    74d0:	ldr	x0, [sp, #40]
    74d4:	str	x1, [x0]
    74d8:	nop
    74dc:	ldr	x19, [sp, #16]
    74e0:	ldp	x29, x30, [sp], #96
    74e4:	ret

00000000000074e8 <XS_threads_join>:
    74e8:	stp	x29, x30, [sp, #-224]!
    74ec:	mov	x29, sp
    74f0:	str	x0, [sp, #24]
    74f4:	str	x1, [sp, #16]
    74f8:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    74fc:	ldr	x0, [x0, #4048]
    7500:	ldr	x1, [x0]
    7504:	str	x1, [sp, #216]
    7508:	mov	x1, #0x0                   	// #0
    750c:	ldr	x0, [sp, #24]
    7510:	ldr	x0, [x0]
    7514:	str	x0, [sp, #96]
    7518:	ldr	x0, [sp, #24]
    751c:	bl	28e0 <S_POPMARK>
    7520:	str	w0, [sp, #40]
    7524:	ldr	x0, [sp, #24]
    7528:	ldr	x1, [x0, #24]
    752c:	ldr	w0, [sp, #40]
    7530:	add	w2, w0, #0x1
    7534:	str	w2, [sp, #40]
    7538:	sxtw	x0, w0
    753c:	lsl	x0, x0, #3
    7540:	add	x0, x1, x0
    7544:	str	x0, [sp, #112]
    7548:	ldr	x1, [sp, #96]
    754c:	ldr	x0, [sp, #112]
    7550:	sub	x0, x1, x0
    7554:	asr	x0, x0, #3
    7558:	str	w0, [sp, #44]
    755c:	ldrsw	x0, [sp, #44]
    7560:	lsl	x0, x0, #3
    7564:	neg	x0, x0
    7568:	ldr	x1, [sp, #96]
    756c:	add	x0, x1, x0
    7570:	str	x0, [sp, #96]
    7574:	str	xzr, [sp, #104]
    7578:	ldr	x0, [sp, #24]
    757c:	ldr	x1, [x0, #2032]
    7580:	mov	w6, #0x0                   	// #0
    7584:	mov	x5, #0x0                   	// #0
    7588:	mov	w4, #0x30                  	// #48
    758c:	mov	w3, #0x12                  	// #18
    7590:	adrp	x0, a000 <XS_threads_error+0x190>
    7594:	add	x2, x0, #0x738
    7598:	ldr	x0, [sp, #24]
    759c:	bl	2610 <Perl_hv_common_key_len@plt>
    75a0:	ldr	x0, [x0]
    75a4:	str	x0, [sp, #120]
    75a8:	ldr	x0, [sp, #120]
    75ac:	ldr	w1, [x0, #12]
    75b0:	mov	w0, #0x100                 	// #256
    75b4:	movk	w0, #0x8020, lsl #16
    75b8:	and	w1, w1, w0
    75bc:	mov	w0, #0x100                 	// #256
    75c0:	movk	w0, #0x8000, lsl #16
    75c4:	cmp	w1, w0
    75c8:	b.ne	75dc <XS_threads_join+0xf4>  // b.any
    75cc:	ldr	x0, [sp, #120]
    75d0:	ldr	x0, [x0]
    75d4:	ldr	x0, [x0, #32]
    75d8:	b	75ec <XS_threads_join+0x104>
    75dc:	mov	w2, #0x2                   	// #2
    75e0:	ldr	x1, [sp, #120]
    75e4:	ldr	x0, [sp, #24]
    75e8:	bl	21d0 <Perl_sv_2uv_flags@plt>
    75ec:	str	x0, [sp, #128]
    75f0:	ldr	w0, [sp, #44]
    75f4:	cmp	w0, #0x1
    75f8:	b.ne	7628 <XS_threads_join+0x140>  // b.any
    75fc:	ldr	x0, [sp, #24]
    7600:	ldr	x1, [x0, #24]
    7604:	ldrsw	x0, [sp, #40]
    7608:	lsl	x0, x0, #3
    760c:	add	x0, x1, x0
    7610:	ldr	x0, [x0]
    7614:	mov	x1, x0
    7618:	ldr	x0, [sp, #24]
    761c:	bl	2430 <Perl_sv_isobject@plt>
    7620:	cmp	w0, #0x0
    7624:	b.ne	7638 <XS_threads_join+0x150>  // b.any
    7628:	adrp	x0, a000 <XS_threads_error+0x190>
    762c:	add	x1, x0, #0xa98
    7630:	ldr	x0, [sp, #24]
    7634:	bl	24d0 <Perl_croak@plt>
    7638:	ldr	x0, [sp, #24]
    763c:	ldr	x1, [x0, #24]
    7640:	ldrsw	x0, [sp, #40]
    7644:	lsl	x0, x0, #3
    7648:	add	x0, x1, x0
    764c:	ldr	x0, [x0]
    7650:	mov	x1, x0
    7654:	ldr	x0, [sp, #24]
    7658:	bl	48a0 <S_SV_to_ithread>
    765c:	str	x0, [sp, #136]
    7660:	ldr	x0, [sp, #24]
    7664:	bl	2b30 <S_ithread_get>
    7668:	str	x0, [sp, #144]
    766c:	ldr	x0, [sp, #136]
    7670:	add	x0, x0, #0x20
    7674:	bl	2720 <pthread_mutex_lock@plt>
    7678:	str	w0, [sp, #48]
    767c:	ldr	w0, [sp, #48]
    7680:	cmp	w0, #0x0
    7684:	b.eq	76a4 <XS_threads_join+0x1bc>  // b.none
    7688:	mov	w3, #0x519                 	// #1305
    768c:	adrp	x0, a000 <XS_threads_error+0x190>
    7690:	add	x2, x0, #0x700
    7694:	ldr	w1, [sp, #48]
    7698:	adrp	x0, a000 <XS_threads_error+0x190>
    769c:	add	x0, x0, #0x778
    76a0:	bl	2510 <Perl_croak_nocontext@plt>
    76a4:	ldr	x0, [sp, #136]
    76a8:	ldr	w0, [x0, #84]
    76ac:	and	w0, w0, #0x3
    76b0:	str	w0, [sp, #52]
    76b4:	ldr	w0, [sp, #52]
    76b8:	cmp	w0, #0x0
    76bc:	b.eq	7728 <XS_threads_join+0x240>  // b.none
    76c0:	ldr	x0, [sp, #136]
    76c4:	add	x0, x0, #0x20
    76c8:	bl	2730 <pthread_mutex_unlock@plt>
    76cc:	str	w0, [sp, #84]
    76d0:	ldr	w0, [sp, #84]
    76d4:	cmp	w0, #0x0
    76d8:	b.eq	76f8 <XS_threads_join+0x210>  // b.none
    76dc:	mov	w3, #0x51b                 	// #1307
    76e0:	adrp	x0, a000 <XS_threads_error+0x190>
    76e4:	add	x2, x0, #0x700
    76e8:	ldr	w1, [sp, #84]
    76ec:	adrp	x0, a000 <XS_threads_error+0x190>
    76f0:	add	x0, x0, #0x750
    76f4:	bl	2510 <Perl_croak_nocontext@plt>
    76f8:	ldr	w0, [sp, #52]
    76fc:	and	w0, w0, #0x1
    7700:	cmp	w0, #0x0
    7704:	b.eq	7714 <XS_threads_join+0x22c>  // b.none
    7708:	adrp	x0, a000 <XS_threads_error+0x190>
    770c:	add	x0, x0, #0xab0
    7710:	b	771c <XS_threads_join+0x234>
    7714:	adrp	x0, a000 <XS_threads_error+0x190>
    7718:	add	x0, x0, #0xad0
    771c:	mov	x1, x0
    7720:	ldr	x0, [sp, #24]
    7724:	bl	24d0 <Perl_croak@plt>
    7728:	ldr	x0, [sp, #136]
    772c:	ldr	x1, [x0, #24]
    7730:	ldr	x0, [sp, #144]
    7734:	ldr	x0, [x0, #24]
    7738:	cmp	x1, x0
    773c:	b.ne	7788 <XS_threads_join+0x2a0>  // b.any
    7740:	ldr	x0, [sp, #136]
    7744:	add	x0, x0, #0x20
    7748:	bl	2730 <pthread_mutex_unlock@plt>
    774c:	str	w0, [sp, #80]
    7750:	ldr	w0, [sp, #80]
    7754:	cmp	w0, #0x0
    7758:	b.eq	7778 <XS_threads_join+0x290>  // b.none
    775c:	mov	w3, #0x520                 	// #1312
    7760:	adrp	x0, a000 <XS_threads_error+0x190>
    7764:	add	x2, x0, #0x700
    7768:	ldr	w1, [sp, #80]
    776c:	adrp	x0, a000 <XS_threads_error+0x190>
    7770:	add	x0, x0, #0x750
    7774:	bl	2510 <Perl_croak_nocontext@plt>
    7778:	adrp	x0, a000 <XS_threads_error+0x190>
    777c:	add	x1, x0, #0xae8
    7780:	ldr	x0, [sp, #24]
    7784:	bl	24d0 <Perl_croak@plt>
    7788:	ldr	x0, [sp, #136]
    778c:	ldr	w0, [x0, #84]
    7790:	orr	w1, w0, #0x2
    7794:	ldr	x0, [sp, #136]
    7798:	str	w1, [x0, #84]
    779c:	ldr	x0, [sp, #136]
    77a0:	add	x0, x0, #0x20
    77a4:	bl	2730 <pthread_mutex_unlock@plt>
    77a8:	str	w0, [sp, #56]
    77ac:	ldr	w0, [sp, #56]
    77b0:	cmp	w0, #0x0
    77b4:	b.eq	77d4 <XS_threads_join+0x2ec>  // b.none
    77b8:	mov	w3, #0x526                 	// #1318
    77bc:	adrp	x0, a000 <XS_threads_error+0x190>
    77c0:	add	x2, x0, #0x700
    77c4:	ldr	w1, [sp, #56]
    77c8:	adrp	x0, a000 <XS_threads_error+0x190>
    77cc:	add	x0, x0, #0x750
    77d0:	bl	2510 <Perl_croak_nocontext@plt>
    77d4:	ldr	x0, [sp, #128]
    77d8:	add	x0, x0, #0x110
    77dc:	bl	2720 <pthread_mutex_lock@plt>
    77e0:	str	w0, [sp, #60]
    77e4:	ldr	w0, [sp, #60]
    77e8:	cmp	w0, #0x0
    77ec:	b.eq	780c <XS_threads_join+0x324>  // b.none
    77f0:	mov	w3, #0x528                 	// #1320
    77f4:	adrp	x0, a000 <XS_threads_error+0x190>
    77f8:	add	x2, x0, #0x700
    77fc:	ldr	w1, [sp, #60]
    7800:	adrp	x0, a000 <XS_threads_error+0x190>
    7804:	add	x0, x0, #0x778
    7808:	bl	2510 <Perl_croak_nocontext@plt>
    780c:	ldr	x0, [sp, #128]
    7810:	ldr	x0, [x0, #328]
    7814:	sub	x1, x0, #0x1
    7818:	ldr	x0, [sp, #128]
    781c:	str	x1, [x0, #328]
    7820:	ldr	x0, [sp, #128]
    7824:	add	x0, x0, #0x110
    7828:	bl	2730 <pthread_mutex_unlock@plt>
    782c:	str	w0, [sp, #64]
    7830:	ldr	w0, [sp, #64]
    7834:	cmp	w0, #0x0
    7838:	b.eq	7858 <XS_threads_join+0x370>  // b.none
    783c:	mov	w3, #0x52a                 	// #1322
    7840:	adrp	x0, a000 <XS_threads_error+0x190>
    7844:	add	x2, x0, #0x700
    7848:	ldr	w1, [sp, #64]
    784c:	adrp	x0, a000 <XS_threads_error+0x190>
    7850:	add	x0, x0, #0x750
    7854:	bl	2510 <Perl_croak_nocontext@plt>
    7858:	ldr	x0, [sp, #136]
    785c:	ldr	x0, [x0, #112]
    7860:	add	x1, sp, #0x58
    7864:	bl	2490 <pthread_join@plt>
    7868:	str	w0, [sp, #68]
    786c:	ldr	w0, [sp, #68]
    7870:	cmp	w0, #0x0
    7874:	b.eq	7898 <XS_threads_join+0x3b0>  // b.none
    7878:	bl	26c0 <__errno_location@plt>
    787c:	mov	x1, x0
    7880:	ldr	w0, [sp, #68]
    7884:	str	w0, [x1]
    7888:	adrp	x0, a000 <XS_threads_error+0x190>
    788c:	add	x1, x0, #0xb00
    7890:	ldr	x0, [sp, #24]
    7894:	bl	24d0 <Perl_croak@plt>
    7898:	ldr	x0, [sp, #136]
    789c:	add	x0, x0, #0x20
    78a0:	bl	2720 <pthread_mutex_lock@plt>
    78a4:	str	w0, [sp, #72]
    78a8:	ldr	w0, [sp, #72]
    78ac:	cmp	w0, #0x0
    78b0:	b.eq	78d0 <XS_threads_join+0x3e8>  // b.none
    78b4:	mov	w3, #0x53a                 	// #1338
    78b8:	adrp	x0, a000 <XS_threads_error+0x190>
    78bc:	add	x2, x0, #0x700
    78c0:	ldr	w1, [sp, #72]
    78c4:	adrp	x0, a000 <XS_threads_error+0x190>
    78c8:	add	x0, x0, #0x778
    78cc:	bl	2510 <Perl_croak_nocontext@plt>
    78d0:	ldr	x0, [sp, #136]
    78d4:	ldr	w0, [x0, #88]
    78d8:	and	w0, w0, #0x3
    78dc:	cmp	w0, #0x1
    78e0:	b.eq	7a24 <XS_threads_join+0x53c>  // b.none
    78e4:	ldr	x0, [sp, #136]
    78e8:	ldr	x0, [x0, #16]
    78ec:	str	x0, [sp, #152]
    78f0:	ldr	x1, [sp, #24]
    78f4:	ldr	x0, [sp, #152]
    78f8:	bl	21f0 <Perl_clone_params_new@plt>
    78fc:	str	x0, [sp, #160]
    7900:	ldr	x0, [sp, #136]
    7904:	ldr	x0, [x0, #104]
    7908:	str	x0, [sp, #168]
    790c:	ldr	x0, [sp, #160]
    7910:	ldr	x0, [x0, #8]
    7914:	orr	x1, x0, #0x8
    7918:	ldr	x0, [sp, #160]
    791c:	str	x1, [x0, #8]
    7920:	ldr	x0, [sp, #24]
    7924:	bl	2390 <Perl_ptr_table_new@plt>
    7928:	mov	x1, x0
    792c:	ldr	x0, [sp, #24]
    7930:	str	x1, [x0, #2712]
    7934:	ldr	x1, [sp, #136]
    7938:	ldr	x0, [sp, #24]
    793c:	bl	2ae4 <S_ithread_set>
    7940:	ldr	x0, [sp, #24]
    7944:	ldr	x1, [x0, #2712]
    7948:	ldr	x0, [sp, #152]
    794c:	add	x2, x0, #0x150
    7950:	ldr	x0, [sp, #24]
    7954:	add	x0, x0, #0x150
    7958:	mov	x3, x0
    795c:	ldr	x0, [sp, #24]
    7960:	bl	21b0 <Perl_ptr_table_store@plt>
    7964:	ldr	x0, [sp, #24]
    7968:	ldr	x1, [x0, #2712]
    796c:	ldr	x0, [sp, #152]
    7970:	add	x2, x0, #0x168
    7974:	ldr	x0, [sp, #24]
    7978:	add	x0, x0, #0x168
    797c:	mov	x3, x0
    7980:	ldr	x0, [sp, #24]
    7984:	bl	21b0 <Perl_ptr_table_store@plt>
    7988:	ldr	x0, [sp, #24]
    798c:	ldr	x1, [x0, #2712]
    7990:	ldr	x0, [sp, #152]
    7994:	add	x2, x0, #0x138
    7998:	ldr	x0, [sp, #24]
    799c:	add	x0, x0, #0x138
    79a0:	mov	x3, x0
    79a4:	ldr	x0, [sp, #24]
    79a8:	bl	21b0 <Perl_ptr_table_store@plt>
    79ac:	ldr	x0, [sp, #24]
    79b0:	ldr	x1, [x0, #2712]
    79b4:	ldr	x0, [sp, #152]
    79b8:	add	x2, x0, #0x180
    79bc:	ldr	x0, [sp, #24]
    79c0:	add	x0, x0, #0x180
    79c4:	mov	x3, x0
    79c8:	ldr	x0, [sp, #24]
    79cc:	bl	21b0 <Perl_ptr_table_store@plt>
    79d0:	ldr	x2, [sp, #160]
    79d4:	ldr	x1, [sp, #168]
    79d8:	ldr	x0, [sp, #24]
    79dc:	bl	23f0 <Perl_sv_dup@plt>
    79e0:	str	x0, [sp, #104]
    79e4:	ldr	x1, [sp, #144]
    79e8:	ldr	x0, [sp, #24]
    79ec:	bl	2ae4 <S_ithread_set>
    79f0:	ldr	x0, [sp, #160]
    79f4:	bl	2590 <Perl_clone_params_del@plt>
    79f8:	ldr	x0, [sp, #104]
    79fc:	str	x0, [sp, #176]
    7a00:	ldr	x0, [sp, #176]
    7a04:	bl	294c <S_SvREFCNT_inc_void>
    7a08:	ldr	x0, [sp, #24]
    7a0c:	ldr	x0, [x0, #2712]
    7a10:	mov	x1, x0
    7a14:	ldr	x0, [sp, #24]
    7a18:	bl	22c0 <Perl_ptr_table_free@plt>
    7a1c:	ldr	x0, [sp, #24]
    7a20:	str	xzr, [x0, #2712]
    7a24:	ldr	x0, [sp, #136]
    7a28:	ldr	w0, [x0, #84]
    7a2c:	and	w0, w0, #0x20
    7a30:	cmp	w0, #0x0
    7a34:	b.ne	7a44 <XS_threads_join+0x55c>  // b.any
    7a38:	ldr	x1, [sp, #136]
    7a3c:	ldr	x0, [sp, #24]
    7a40:	bl	2b70 <S_ithread_clear>
    7a44:	ldr	x1, [sp, #136]
    7a48:	ldr	x0, [sp, #24]
    7a4c:	bl	2cec <S_ithread_free>
    7a50:	ldr	x0, [sp, #104]
    7a54:	cmp	x0, #0x0
    7a58:	b.ne	7ab0 <XS_threads_join+0x5c8>  // b.any
    7a5c:	ldr	x0, [sp, #24]
    7a60:	ldr	x1, [x0, #24]
    7a64:	ldrsw	x0, [sp, #40]
    7a68:	lsl	x0, x0, #3
    7a6c:	add	x0, x1, x0
    7a70:	ldr	x1, [sp, #24]
    7a74:	add	x1, x1, #0x150
    7a78:	str	x1, [x0]
    7a7c:	mov	x0, #0x1                   	// #1
    7a80:	str	x0, [sp, #208]
    7a84:	ldr	x0, [sp, #24]
    7a88:	ldr	x1, [x0, #24]
    7a8c:	ldrsw	x2, [sp, #40]
    7a90:	ldr	x0, [sp, #208]
    7a94:	add	x0, x2, x0
    7a98:	lsl	x0, x0, #3
    7a9c:	sub	x0, x0, #0x8
    7aa0:	add	x1, x1, x0
    7aa4:	ldr	x0, [sp, #24]
    7aa8:	str	x1, [x0]
    7aac:	b	7bb0 <XS_threads_join+0x6c8>
    7ab0:	ldr	x0, [sp, #104]
    7ab4:	ldr	w0, [x0, #12]
    7ab8:	and	w0, w0, #0x800000
    7abc:	cmp	w0, #0x0
    7ac0:	b.eq	7ae0 <XS_threads_join+0x5f8>  // b.none
    7ac4:	ldr	x0, [sp, #104]
    7ac8:	str	x0, [sp, #184]
    7acc:	ldr	x0, [sp, #184]
    7ad0:	mov	x1, x0
    7ad4:	ldr	x0, [sp, #24]
    7ad8:	bl	24c0 <Perl_mg_size@plt>
    7adc:	b	7aec <XS_threads_join+0x604>
    7ae0:	ldr	x0, [sp, #104]
    7ae4:	ldr	x0, [x0]
    7ae8:	ldr	x0, [x0, #16]
    7aec:	str	w0, [sp, #76]
    7af0:	str	wzr, [sp, #36]
    7af4:	b	7b78 <XS_threads_join+0x690>
    7af8:	ldr	x1, [sp, #104]
    7afc:	ldr	x0, [sp, #24]
    7b00:	bl	2260 <Perl_av_shift@plt>
    7b04:	str	x0, [sp, #200]
    7b08:	ldr	x0, [sp, #24]
    7b0c:	ldr	x1, [x0, #32]
    7b10:	ldr	x0, [sp, #96]
    7b14:	sub	x0, x1, x0
    7b18:	cmp	x0, #0x0
    7b1c:	cset	w0, le
    7b20:	and	w0, w0, #0xff
    7b24:	and	x0, x0, #0xff
    7b28:	cmp	x0, #0x0
    7b2c:	b.eq	7b48 <XS_threads_join+0x660>  // b.none
    7b30:	mov	x3, #0x1                   	// #1
    7b34:	ldr	x2, [sp, #96]
    7b38:	ldr	x1, [sp, #96]
    7b3c:	ldr	x0, [sp, #24]
    7b40:	bl	21e0 <Perl_stack_grow@plt>
    7b44:	str	x0, [sp, #96]
    7b48:	ldr	x0, [sp, #96]
    7b4c:	add	x0, x0, #0x8
    7b50:	str	x0, [sp, #96]
    7b54:	ldr	x1, [sp, #200]
    7b58:	ldr	x0, [sp, #24]
    7b5c:	bl	2550 <Perl_sv_2mortal@plt>
    7b60:	mov	x1, x0
    7b64:	ldr	x0, [sp, #96]
    7b68:	str	x1, [x0]
    7b6c:	ldr	w0, [sp, #36]
    7b70:	add	w0, w0, #0x1
    7b74:	str	w0, [sp, #36]
    7b78:	ldr	w1, [sp, #36]
    7b7c:	ldr	w0, [sp, #76]
    7b80:	cmp	w1, w0
    7b84:	b.le	7af8 <XS_threads_join+0x610>
    7b88:	ldr	x0, [sp, #104]
    7b8c:	str	x0, [sp, #192]
    7b90:	ldr	x0, [sp, #192]
    7b94:	mov	x1, x0
    7b98:	ldr	x0, [sp, #24]
    7b9c:	bl	2990 <S_SvREFCNT_dec>
    7ba0:	ldr	x0, [sp, #24]
    7ba4:	ldr	x1, [sp, #96]
    7ba8:	str	x1, [x0]
    7bac:	nop
    7bb0:	adrp	x0, 1b000 <__FRAME_END__+0xf990>
    7bb4:	ldr	x0, [x0, #4048]
    7bb8:	ldr	x1, [sp, #216]
    7bbc:	ldr	x0, [x0]
    7bc0:	eor	x0, x1, x0
    7bc4:	cmp	x0, #0x0
    7bc8:	b.eq	7bd0 <XS_threads_join+0x6e8>  // b.none
    7bcc:	bl	2420 <__stack_chk_fail@plt>
    7bd0:	ldp	x29, x30, [sp], #224
    7bd4:	ret

0000000000007bd8 <XS_threads_yield>:
    7bd8:	stp	x29, x30, [sp, #-64]!
    7bdc:	mov	x29, sp
    7be0:	str	x0, [sp, #24]
    7be4:	str	x1, [sp, #16]
    7be8:	ldr	x0, [sp, #24]
    7bec:	ldr	x0, [x0]
    7bf0:	str	x0, [sp, #40]
    7bf4:	ldr	x0, [sp, #24]
    7bf8:	bl	28e0 <S_POPMARK>
    7bfc:	str	w0, [sp, #32]
    7c00:	ldr	x0, [sp, #24]
    7c04:	ldr	x1, [x0, #24]
    7c08:	ldr	w0, [sp, #32]
    7c0c:	add	w2, w0, #0x1
    7c10:	str	w2, [sp, #32]
    7c14:	sxtw	x0, w0
    7c18:	lsl	x0, x0, #3
    7c1c:	add	x0, x1, x0
    7c20:	str	x0, [sp, #48]
    7c24:	ldr	x1, [sp, #40]
    7c28:	ldr	x0, [sp, #48]
    7c2c:	sub	x0, x1, x0
    7c30:	asr	x0, x0, #3
    7c34:	str	w0, [sp, #36]
    7c38:	bl	2500 <sched_yield@plt>
    7c3c:	str	xzr, [sp, #56]
    7c40:	ldr	x0, [sp, #24]
    7c44:	ldr	x1, [x0, #24]
    7c48:	ldrsw	x2, [sp, #32]
    7c4c:	ldr	x0, [sp, #56]
    7c50:	add	x0, x2, x0
    7c54:	lsl	x0, x0, #3
    7c58:	sub	x0, x0, #0x8
    7c5c:	add	x1, x1, x0
    7c60:	ldr	x0, [sp, #24]
    7c64:	str	x1, [x0]
    7c68:	nop
    7c6c:	ldp	x29, x30, [sp], #64
    7c70:	ret

0000000000007c74 <XS_threads_detach>:
    7c74:	stp	x29, x30, [sp, #-112]!
    7c78:	mov	x29, sp
    7c7c:	str	x0, [sp, #24]
    7c80:	str	x1, [sp, #16]
    7c84:	ldr	x0, [sp, #24]
    7c88:	ldr	x0, [x0]
    7c8c:	str	x0, [sp, #64]
    7c90:	ldr	x0, [sp, #24]
    7c94:	bl	28e0 <S_POPMARK>
    7c98:	str	w0, [sp, #32]
    7c9c:	ldr	x0, [sp, #24]
    7ca0:	ldr	x1, [x0, #24]
    7ca4:	ldr	w0, [sp, #32]
    7ca8:	add	w2, w0, #0x1
    7cac:	str	w2, [sp, #32]
    7cb0:	sxtw	x0, w0
    7cb4:	lsl	x0, x0, #3
    7cb8:	add	x0, x1, x0
    7cbc:	str	x0, [sp, #72]
    7cc0:	ldr	x1, [sp, #64]
    7cc4:	ldr	x0, [sp, #72]
    7cc8:	sub	x0, x1, x0
    7ccc:	asr	x0, x0, #3
    7cd0:	str	w0, [sp, #36]
    7cd4:	ldr	x0, [sp, #24]
    7cd8:	ldr	x1, [x0, #2032]
    7cdc:	mov	w6, #0x0                   	// #0
    7ce0:	mov	x5, #0x0                   	// #0
    7ce4:	mov	w4, #0x30                  	// #48
    7ce8:	mov	w3, #0x12                  	// #18
    7cec:	adrp	x0, a000 <XS_threads_error+0x190>
    7cf0:	add	x2, x0, #0x738
    7cf4:	ldr	x0, [sp, #24]
    7cf8:	bl	2610 <Perl_hv_common_key_len@plt>
    7cfc:	ldr	x0, [x0]
    7d00:	str	x0, [sp, #80]
    7d04:	ldr	x0, [sp, #80]
    7d08:	ldr	w1, [x0, #12]
    7d0c:	mov	w0, #0x100                 	// #256
    7d10:	movk	w0, #0x8020, lsl #16
    7d14:	and	w1, w1, w0
    7d18:	mov	w0, #0x100                 	// #256
    7d1c:	movk	w0, #0x8000, lsl #16
    7d20:	cmp	w1, w0
    7d24:	b.ne	7d38 <XS_threads_detach+0xc4>  // b.any
    7d28:	ldr	x0, [sp, #80]
    7d2c:	ldr	x0, [x0]
    7d30:	ldr	x0, [x0, #32]
    7d34:	b	7d48 <XS_threads_detach+0xd4>
    7d38:	mov	w2, #0x2                   	// #2
    7d3c:	ldr	x1, [sp, #80]
    7d40:	ldr	x0, [sp, #24]
    7d44:	bl	21d0 <Perl_sv_2uv_flags@plt>
    7d48:	str	x0, [sp, #88]
    7d4c:	ldr	x0, [sp, #24]
    7d50:	ldr	x1, [x0, #24]
    7d54:	ldrsw	x0, [sp, #32]
    7d58:	lsl	x0, x0, #3
    7d5c:	add	x0, x1, x0
    7d60:	ldr	x0, [x0]
    7d64:	mov	x1, x0
    7d68:	ldr	x0, [sp, #24]
    7d6c:	bl	48a0 <S_SV_to_ithread>
    7d70:	str	x0, [sp, #96]
    7d74:	ldr	x0, [sp, #88]
    7d78:	add	x0, x0, #0x110
    7d7c:	bl	2720 <pthread_mutex_lock@plt>
    7d80:	str	w0, [sp, #40]
    7d84:	ldr	w0, [sp, #40]
    7d88:	cmp	w0, #0x0
    7d8c:	b.eq	7dac <XS_threads_detach+0x138>  // b.none
    7d90:	mov	w3, #0x594                 	// #1428
    7d94:	adrp	x0, a000 <XS_threads_error+0x190>
    7d98:	add	x2, x0, #0x700
    7d9c:	ldr	w1, [sp, #40]
    7da0:	adrp	x0, a000 <XS_threads_error+0x190>
    7da4:	add	x0, x0, #0x778
    7da8:	bl	2510 <Perl_croak_nocontext@plt>
    7dac:	ldr	x0, [sp, #96]
    7db0:	add	x0, x0, #0x20
    7db4:	bl	2720 <pthread_mutex_lock@plt>
    7db8:	str	w0, [sp, #44]
    7dbc:	ldr	w0, [sp, #44]
    7dc0:	cmp	w0, #0x0
    7dc4:	b.eq	7de4 <XS_threads_detach+0x170>  // b.none
    7dc8:	mov	w3, #0x595                 	// #1429
    7dcc:	adrp	x0, a000 <XS_threads_error+0x190>
    7dd0:	add	x2, x0, #0x700
    7dd4:	ldr	w1, [sp, #44]
    7dd8:	adrp	x0, a000 <XS_threads_error+0x190>
    7ddc:	add	x0, x0, #0x778
    7de0:	bl	2510 <Perl_croak_nocontext@plt>
    7de4:	ldr	x0, [sp, #96]
    7de8:	ldr	w0, [x0, #84]
    7dec:	and	w0, w0, #0x3
    7df0:	str	w0, [sp, #48]
    7df4:	ldr	w0, [sp, #48]
    7df8:	cmp	w0, #0x0
    7dfc:	b.ne	7e74 <XS_threads_detach+0x200>  // b.any
    7e00:	ldr	x0, [sp, #96]
    7e04:	ldr	w0, [x0, #84]
    7e08:	orr	w1, w0, #0x1
    7e0c:	ldr	x0, [sp, #96]
    7e10:	str	w1, [x0, #84]
    7e14:	ldr	x0, [sp, #96]
    7e18:	ldr	x0, [x0, #112]
    7e1c:	bl	2350 <pthread_detach@plt>
    7e20:	ldr	x0, [sp, #96]
    7e24:	ldr	w0, [x0, #84]
    7e28:	and	w0, w0, #0x4
    7e2c:	cmp	w0, #0x0
    7e30:	b.eq	7e4c <XS_threads_detach+0x1d8>  // b.none
    7e34:	ldr	x0, [sp, #88]
    7e38:	ldr	x0, [x0, #328]
    7e3c:	sub	x1, x0, #0x1
    7e40:	ldr	x0, [sp, #88]
    7e44:	str	x1, [x0, #328]
    7e48:	b	7e74 <XS_threads_detach+0x200>
    7e4c:	ldr	x0, [sp, #88]
    7e50:	ldr	x0, [x0, #336]
    7e54:	sub	x1, x0, #0x1
    7e58:	ldr	x0, [sp, #88]
    7e5c:	str	x1, [x0, #336]
    7e60:	ldr	x0, [sp, #88]
    7e64:	ldr	x0, [x0, #344]
    7e68:	add	x1, x0, #0x1
    7e6c:	ldr	x0, [sp, #88]
    7e70:	str	x1, [x0, #344]
    7e74:	ldr	x0, [sp, #96]
    7e78:	add	x0, x0, #0x20
    7e7c:	bl	2730 <pthread_mutex_unlock@plt>
    7e80:	str	w0, [sp, #52]
    7e84:	ldr	w0, [sp, #52]
    7e88:	cmp	w0, #0x0
    7e8c:	b.eq	7eac <XS_threads_detach+0x238>  // b.none
    7e90:	mov	w3, #0x5a5                 	// #1445
    7e94:	adrp	x0, a000 <XS_threads_error+0x190>
    7e98:	add	x2, x0, #0x700
    7e9c:	ldr	w1, [sp, #52]
    7ea0:	adrp	x0, a000 <XS_threads_error+0x190>
    7ea4:	add	x0, x0, #0x750
    7ea8:	bl	2510 <Perl_croak_nocontext@plt>
    7eac:	ldr	x0, [sp, #88]
    7eb0:	add	x0, x0, #0x110
    7eb4:	bl	2730 <pthread_mutex_unlock@plt>
    7eb8:	str	w0, [sp, #56]
    7ebc:	ldr	w0, [sp, #56]
    7ec0:	cmp	w0, #0x0
    7ec4:	b.eq	7ee4 <XS_threads_detach+0x270>  // b.none
    7ec8:	mov	w3, #0x5a6                 	// #1446
    7ecc:	adrp	x0, a000 <XS_threads_error+0x190>
    7ed0:	add	x2, x0, #0x700
    7ed4:	ldr	w1, [sp, #56]
    7ed8:	adrp	x0, a000 <XS_threads_error+0x190>
    7edc:	add	x0, x0, #0x750
    7ee0:	bl	2510 <Perl_croak_nocontext@plt>
    7ee4:	ldr	w0, [sp, #48]
    7ee8:	cmp	w0, #0x0
    7eec:	b.eq	7f20 <XS_threads_detach+0x2ac>  // b.none
    7ef0:	ldr	w0, [sp, #48]
    7ef4:	and	w0, w0, #0x1
    7ef8:	cmp	w0, #0x0
    7efc:	b.eq	7f0c <XS_threads_detach+0x298>  // b.none
    7f00:	adrp	x0, a000 <XS_threads_error+0x190>
    7f04:	add	x0, x0, #0xb20
    7f08:	b	7f14 <XS_threads_detach+0x2a0>
    7f0c:	adrp	x0, a000 <XS_threads_error+0x190>
    7f10:	add	x0, x0, #0xb38
    7f14:	mov	x1, x0
    7f18:	ldr	x0, [sp, #24]
    7f1c:	bl	24d0 <Perl_croak@plt>
    7f20:	ldr	x0, [sp, #96]
    7f24:	add	x0, x0, #0x20
    7f28:	bl	2720 <pthread_mutex_lock@plt>
    7f2c:	str	w0, [sp, #60]
    7f30:	ldr	w0, [sp, #60]
    7f34:	cmp	w0, #0x0
    7f38:	b.eq	7f58 <XS_threads_detach+0x2e4>  // b.none
    7f3c:	mov	w3, #0x5b0                 	// #1456
    7f40:	adrp	x0, a000 <XS_threads_error+0x190>
    7f44:	add	x2, x0, #0x700
    7f48:	ldr	w1, [sp, #60]
    7f4c:	adrp	x0, a000 <XS_threads_error+0x190>
    7f50:	add	x0, x0, #0x778
    7f54:	bl	2510 <Perl_croak_nocontext@plt>
    7f58:	ldr	x0, [sp, #96]
    7f5c:	ldr	w0, [x0, #84]
    7f60:	and	w0, w0, #0x4
    7f64:	cmp	w0, #0x0
    7f68:	b.eq	7f8c <XS_threads_detach+0x318>  // b.none
    7f6c:	ldr	x0, [sp, #96]
    7f70:	ldr	w0, [x0, #84]
    7f74:	and	w0, w0, #0x20
    7f78:	cmp	w0, #0x0
    7f7c:	b.ne	7f8c <XS_threads_detach+0x318>  // b.any
    7f80:	ldr	x1, [sp, #96]
    7f84:	ldr	x0, [sp, #24]
    7f88:	bl	2b70 <S_ithread_clear>
    7f8c:	ldr	x1, [sp, #96]
    7f90:	ldr	x0, [sp, #24]
    7f94:	bl	2cec <S_ithread_free>
    7f98:	str	xzr, [sp, #104]
    7f9c:	ldr	x0, [sp, #24]
    7fa0:	ldr	x1, [x0, #24]
    7fa4:	ldrsw	x2, [sp, #32]
    7fa8:	ldr	x0, [sp, #104]
    7fac:	add	x0, x2, x0
    7fb0:	lsl	x0, x0, #3
    7fb4:	sub	x0, x0, #0x8
    7fb8:	add	x1, x1, x0
    7fbc:	ldr	x0, [sp, #24]
    7fc0:	str	x1, [x0]
    7fc4:	nop
    7fc8:	ldp	x29, x30, [sp], #112
    7fcc:	ret

0000000000007fd0 <XS_threads_kill>:
    7fd0:	stp	x29, x30, [sp, #-112]!
    7fd4:	mov	x29, sp
    7fd8:	str	x0, [sp, #24]
    7fdc:	str	x1, [sp, #16]
    7fe0:	ldr	x0, [sp, #24]
    7fe4:	ldr	x0, [x0]
    7fe8:	str	x0, [sp, #72]
    7fec:	ldr	x0, [sp, #24]
    7ff0:	bl	28e0 <S_POPMARK>
    7ff4:	str	w0, [sp, #40]
    7ff8:	ldr	x0, [sp, #24]
    7ffc:	ldr	x1, [x0, #24]
    8000:	ldr	w0, [sp, #40]
    8004:	add	w2, w0, #0x1
    8008:	str	w2, [sp, #40]
    800c:	sxtw	x0, w0
    8010:	lsl	x0, x0, #3
    8014:	add	x0, x1, x0
    8018:	str	x0, [sp, #80]
    801c:	ldr	x1, [sp, #72]
    8020:	ldr	x0, [sp, #80]
    8024:	sub	x0, x1, x0
    8028:	asr	x0, x0, #3
    802c:	str	w0, [sp, #44]
    8030:	mov	w0, #0x1                   	// #1
    8034:	str	w0, [sp, #36]
    8038:	ldr	x0, [sp, #24]
    803c:	ldr	w0, [x0, #1540]
    8040:	and	w0, w0, #0x1
    8044:	cmp	w0, #0x0
    8048:	b.eq	805c <XS_threads_kill+0x8c>  // b.none
    804c:	adrp	x0, a000 <XS_threads_error+0x190>
    8050:	add	x1, x0, #0xb58
    8054:	ldr	x0, [sp, #24]
    8058:	bl	24d0 <Perl_croak@plt>
    805c:	ldr	w0, [sp, #44]
    8060:	cmp	w0, #0x2
    8064:	b.ne	8094 <XS_threads_kill+0xc4>  // b.any
    8068:	ldr	x0, [sp, #24]
    806c:	ldr	x1, [x0, #24]
    8070:	ldrsw	x0, [sp, #40]
    8074:	lsl	x0, x0, #3
    8078:	add	x0, x1, x0
    807c:	ldr	x0, [x0]
    8080:	mov	x1, x0
    8084:	ldr	x0, [sp, #24]
    8088:	bl	2430 <Perl_sv_isobject@plt>
    808c:	cmp	w0, #0x0
    8090:	b.ne	80a4 <XS_threads_kill+0xd4>  // b.any
    8094:	adrp	x0, a000 <XS_threads_error+0x190>
    8098:	add	x1, x0, #0xb88
    809c:	ldr	x0, [sp, #24]
    80a0:	bl	24d0 <Perl_croak@plt>
    80a4:	ldr	x0, [sp, #24]
    80a8:	ldr	x1, [x0, #24]
    80ac:	ldrsw	x0, [sp, #40]
    80b0:	add	x0, x0, #0x1
    80b4:	lsl	x0, x0, #3
    80b8:	add	x0, x1, x0
    80bc:	ldr	x0, [x0]
    80c0:	ldr	w1, [x0, #12]
    80c4:	mov	w0, #0x400                 	// #1024
    80c8:	movk	w0, #0x20, lsl #16
    80cc:	and	w0, w1, w0
    80d0:	cmp	w0, #0x400
    80d4:	b.ne	80fc <XS_threads_kill+0x12c>  // b.any
    80d8:	ldr	x0, [sp, #24]
    80dc:	ldr	x1, [x0, #24]
    80e0:	ldrsw	x0, [sp, #40]
    80e4:	add	x0, x0, #0x1
    80e8:	lsl	x0, x0, #3
    80ec:	add	x0, x1, x0
    80f0:	ldr	x0, [x0]
    80f4:	ldr	x0, [x0, #16]
    80f8:	b	812c <XS_threads_kill+0x15c>
    80fc:	ldr	x0, [sp, #24]
    8100:	ldr	x1, [x0, #24]
    8104:	ldrsw	x0, [sp, #40]
    8108:	add	x0, x0, #0x1
    810c:	lsl	x0, x0, #3
    8110:	add	x0, x1, x0
    8114:	ldr	x0, [x0]
    8118:	mov	w3, #0x2                   	// #2
    811c:	mov	x2, #0x0                   	// #0
    8120:	mov	x1, x0
    8124:	ldr	x0, [sp, #24]
    8128:	bl	2370 <Perl_sv_2pv_flags@plt>
    812c:	str	x0, [sp, #56]
    8130:	ldr	x0, [sp, #56]
    8134:	ldrb	w0, [x0]
    8138:	and	w0, w0, #0xffffffdf
    813c:	sub	w0, w0, #0x41
    8140:	cmp	w0, #0x19
    8144:	b.hi	81c0 <XS_threads_kill+0x1f0>  // b.pmore
    8148:	ldr	x0, [sp, #56]
    814c:	ldrb	w0, [x0]
    8150:	cmp	w0, #0x53
    8154:	b.ne	818c <XS_threads_kill+0x1bc>  // b.any
    8158:	ldr	x0, [sp, #56]
    815c:	add	x0, x0, #0x1
    8160:	ldrb	w0, [x0]
    8164:	cmp	w0, #0x49
    8168:	b.ne	818c <XS_threads_kill+0x1bc>  // b.any
    816c:	ldr	x0, [sp, #56]
    8170:	add	x0, x0, #0x2
    8174:	ldrb	w0, [x0]
    8178:	cmp	w0, #0x47
    817c:	b.ne	818c <XS_threads_kill+0x1bc>  // b.any
    8180:	ldr	x0, [sp, #56]
    8184:	add	x0, x0, #0x3
    8188:	str	x0, [sp, #56]
    818c:	ldr	x1, [sp, #56]
    8190:	ldr	x0, [sp, #24]
    8194:	bl	26e0 <Perl_whichsig_pv@plt>
    8198:	sxtw	x0, w0
    819c:	str	x0, [sp, #64]
    81a0:	ldr	x0, [sp, #64]
    81a4:	cmp	x0, #0x0
    81a8:	b.ge	824c <XS_threads_kill+0x27c>  // b.tcont
    81ac:	ldr	x2, [sp, #56]
    81b0:	adrp	x0, a000 <XS_threads_error+0x190>
    81b4:	add	x1, x0, #0xba8
    81b8:	ldr	x0, [sp, #24]
    81bc:	bl	24d0 <Perl_croak@plt>
    81c0:	ldr	x0, [sp, #24]
    81c4:	ldr	x1, [x0, #24]
    81c8:	ldrsw	x0, [sp, #40]
    81cc:	add	x0, x0, #0x1
    81d0:	lsl	x0, x0, #3
    81d4:	add	x0, x1, x0
    81d8:	ldr	x0, [x0]
    81dc:	ldr	w1, [x0, #12]
    81e0:	mov	w0, #0x100                 	// #256
    81e4:	movk	w0, #0x20, lsl #16
    81e8:	and	w0, w1, w0
    81ec:	cmp	w0, #0x100
    81f0:	b.ne	821c <XS_threads_kill+0x24c>  // b.any
    81f4:	ldr	x0, [sp, #24]
    81f8:	ldr	x1, [x0, #24]
    81fc:	ldrsw	x0, [sp, #40]
    8200:	add	x0, x0, #0x1
    8204:	lsl	x0, x0, #3
    8208:	add	x0, x1, x0
    820c:	ldr	x0, [x0]
    8210:	ldr	x0, [x0]
    8214:	ldr	x0, [x0, #32]
    8218:	b	8248 <XS_threads_kill+0x278>
    821c:	ldr	x0, [sp, #24]
    8220:	ldr	x1, [x0, #24]
    8224:	ldrsw	x0, [sp, #40]
    8228:	add	x0, x0, #0x1
    822c:	lsl	x0, x0, #3
    8230:	add	x0, x1, x0
    8234:	ldr	x0, [x0]
    8238:	mov	w2, #0x2                   	// #2
    823c:	mov	x1, x0
    8240:	ldr	x0, [sp, #24]
    8244:	bl	2170 <Perl_sv_2iv_flags@plt>
    8248:	str	x0, [sp, #64]
    824c:	ldr	x0, [sp, #24]
    8250:	ldr	x1, [x0, #24]
    8254:	ldrsw	x0, [sp, #40]
    8258:	lsl	x0, x0, #3
    825c:	add	x0, x1, x0
    8260:	ldr	x0, [x0]
    8264:	mov	x1, x0
    8268:	ldr	x0, [sp, #24]
    826c:	bl	48a0 <S_SV_to_ithread>
    8270:	str	x0, [sp, #88]
    8274:	ldr	x0, [sp, #88]
    8278:	add	x0, x0, #0x20
    827c:	bl	2720 <pthread_mutex_lock@plt>
    8280:	str	w0, [sp, #48]
    8284:	ldr	w0, [sp, #48]
    8288:	cmp	w0, #0x0
    828c:	b.eq	82ac <XS_threads_kill+0x2dc>  // b.none
    8290:	mov	w3, #0x5da                 	// #1498
    8294:	adrp	x0, a000 <XS_threads_error+0x190>
    8298:	add	x2, x0, #0x700
    829c:	ldr	w1, [sp, #48]
    82a0:	adrp	x0, a000 <XS_threads_error+0x190>
    82a4:	add	x0, x0, #0x778
    82a8:	bl	2510 <Perl_croak_nocontext@plt>
    82ac:	ldr	x0, [sp, #88]
    82b0:	ldr	x0, [x0, #16]
    82b4:	cmp	x0, #0x0
    82b8:	b.eq	8340 <XS_threads_kill+0x370>  // b.none
    82bc:	ldr	x0, [sp, #88]
    82c0:	ldr	w0, [x0, #84]
    82c4:	and	w0, w0, #0x4
    82c8:	cmp	w0, #0x0
    82cc:	b.ne	8340 <XS_threads_kill+0x370>  // b.any
    82d0:	ldr	x0, [sp, #88]
    82d4:	ldr	x0, [x0, #16]
    82d8:	str	x0, [sp, #96]
    82dc:	ldr	x0, [sp, #96]
    82e0:	ldr	x0, [x0, #1688]
    82e4:	cmp	x0, #0x0
    82e8:	b.eq	8348 <XS_threads_kill+0x378>  // b.none
    82ec:	ldr	x0, [sp, #96]
    82f0:	ldr	x1, [x0, #2696]
    82f4:	ldr	x0, [sp, #64]
    82f8:	lsl	x0, x0, #3
    82fc:	add	x0, x1, x0
    8300:	ldr	x0, [x0]
    8304:	cmp	x0, #0x0
    8308:	b.eq	8348 <XS_threads_kill+0x378>  // b.none
    830c:	ldr	x0, [sp, #96]
    8310:	ldr	x1, [x0, #1688]
    8314:	ldr	x0, [sp, #64]
    8318:	lsl	x0, x0, #2
    831c:	add	x0, x1, x0
    8320:	ldr	w1, [x0]
    8324:	add	w1, w1, #0x1
    8328:	str	w1, [x0]
    832c:	ldr	x0, [sp, #96]
    8330:	mov	w1, #0x1                   	// #1
    8334:	str	w1, [x0, #1684]
    8338:	str	wzr, [sp, #36]
    833c:	b	8348 <XS_threads_kill+0x378>
    8340:	str	wzr, [sp, #36]
    8344:	b	834c <XS_threads_kill+0x37c>
    8348:	nop
    834c:	ldr	x0, [sp, #88]
    8350:	add	x0, x0, #0x20
    8354:	bl	2730 <pthread_mutex_unlock@plt>
    8358:	str	w0, [sp, #52]
    835c:	ldr	w0, [sp, #52]
    8360:	cmp	w0, #0x0
    8364:	b.eq	8384 <XS_threads_kill+0x3b4>  // b.none
    8368:	mov	w3, #0x5e6                 	// #1510
    836c:	adrp	x0, a000 <XS_threads_error+0x190>
    8370:	add	x2, x0, #0x700
    8374:	ldr	w1, [sp, #52]
    8378:	adrp	x0, a000 <XS_threads_error+0x190>
    837c:	add	x0, x0, #0x750
    8380:	bl	2510 <Perl_croak_nocontext@plt>
    8384:	ldr	w0, [sp, #36]
    8388:	cmp	w0, #0x0
    838c:	b.eq	83b0 <XS_threads_kill+0x3e0>  // b.none
    8390:	ldr	x0, [sp, #88]
    8394:	ldr	x0, [x0, #24]
    8398:	mov	x3, x0
    839c:	ldr	x2, [sp, #56]
    83a0:	adrp	x0, a000 <XS_threads_error+0x190>
    83a4:	add	x1, x0, #0xbc8
    83a8:	ldr	x0, [sp, #24]
    83ac:	bl	24d0 <Perl_croak@plt>
    83b0:	ldr	x0, [sp, #24]
    83b4:	ldr	x1, [x0, #24]
    83b8:	ldrsw	x0, [sp, #40]
    83bc:	lsl	x0, x0, #3
    83c0:	add	x1, x1, x0
    83c4:	ldr	x0, [sp, #24]
    83c8:	ldr	x2, [x0, #24]
    83cc:	ldrsw	x0, [sp, #40]
    83d0:	lsl	x0, x0, #3
    83d4:	add	x0, x2, x0
    83d8:	ldr	x1, [x1]
    83dc:	str	x1, [x0]
    83e0:	mov	x0, #0x1                   	// #1
    83e4:	str	x0, [sp, #104]
    83e8:	ldr	x0, [sp, #24]
    83ec:	ldr	x1, [x0, #24]
    83f0:	ldrsw	x2, [sp, #40]
    83f4:	ldr	x0, [sp, #104]
    83f8:	add	x0, x2, x0
    83fc:	lsl	x0, x0, #3
    8400:	sub	x0, x0, #0x8
    8404:	add	x1, x1, x0
    8408:	ldr	x0, [sp, #24]
    840c:	str	x1, [x0]
    8410:	nop
    8414:	ldp	x29, x30, [sp], #112
    8418:	ret

000000000000841c <XS_threads_DESTROY>:
    841c:	stp	x29, x30, [sp, #-64]!
    8420:	mov	x29, sp
    8424:	str	x0, [sp, #24]
    8428:	str	x1, [sp, #16]
    842c:	ldr	x0, [sp, #24]
    8430:	ldr	x0, [x0]
    8434:	str	x0, [sp, #40]
    8438:	ldr	x0, [sp, #24]
    843c:	bl	28e0 <S_POPMARK>
    8440:	str	w0, [sp, #32]
    8444:	ldr	x0, [sp, #24]
    8448:	ldr	x1, [x0, #24]
    844c:	ldr	w0, [sp, #32]
    8450:	add	w2, w0, #0x1
    8454:	str	w2, [sp, #32]
    8458:	sxtw	x0, w0
    845c:	lsl	x0, x0, #3
    8460:	add	x0, x1, x0
    8464:	str	x0, [sp, #48]
    8468:	ldr	x1, [sp, #40]
    846c:	ldr	x0, [sp, #48]
    8470:	sub	x0, x1, x0
    8474:	asr	x0, x0, #3
    8478:	str	w0, [sp, #36]
    847c:	ldr	x0, [sp, #24]
    8480:	ldr	x1, [x0, #24]
    8484:	ldrsw	x0, [sp, #32]
    8488:	lsl	x0, x0, #3
    848c:	add	x0, x1, x0
    8490:	ldr	x0, [x0]
    8494:	ldr	x0, [x0, #16]
    8498:	mov	w2, #0x6e                  	// #110
    849c:	mov	x1, x0
    84a0:	ldr	x0, [sp, #24]
    84a4:	bl	23b0 <Perl_sv_unmagic@plt>
    84a8:	str	xzr, [sp, #56]
    84ac:	ldr	x0, [sp, #24]
    84b0:	ldr	x1, [x0, #24]
    84b4:	ldrsw	x2, [sp, #32]
    84b8:	ldr	x0, [sp, #56]
    84bc:	add	x0, x2, x0
    84c0:	lsl	x0, x0, #3
    84c4:	sub	x0, x0, #0x8
    84c8:	add	x1, x1, x0
    84cc:	ldr	x0, [sp, #24]
    84d0:	str	x1, [x0]
    84d4:	nop
    84d8:	ldp	x29, x30, [sp], #64
    84dc:	ret

00000000000084e0 <XS_threads_equal>:
    84e0:	stp	x29, x30, [sp, #-112]!
    84e4:	mov	x29, sp
    84e8:	str	x19, [sp, #16]
    84ec:	str	x0, [sp, #40]
    84f0:	str	x1, [sp, #32]
    84f4:	ldr	x0, [sp, #40]
    84f8:	ldr	x0, [x0]
    84fc:	str	x0, [sp, #72]
    8500:	ldr	x0, [sp, #40]
    8504:	bl	28e0 <S_POPMARK>
    8508:	str	w0, [sp, #64]
    850c:	ldr	x0, [sp, #40]
    8510:	ldr	x1, [x0, #24]
    8514:	ldr	w0, [sp, #64]
    8518:	add	w2, w0, #0x1
    851c:	str	w2, [sp, #64]
    8520:	sxtw	x0, w0
    8524:	lsl	x0, x0, #3
    8528:	add	x0, x1, x0
    852c:	str	x0, [sp, #80]
    8530:	ldr	x1, [sp, #72]
    8534:	ldr	x0, [sp, #80]
    8538:	sub	x0, x1, x0
    853c:	asr	x0, x0, #3
    8540:	str	w0, [sp, #68]
    8544:	str	wzr, [sp, #60]
    8548:	ldr	x0, [sp, #40]
    854c:	ldr	x1, [x0, #24]
    8550:	ldrsw	x0, [sp, #64]
    8554:	lsl	x0, x0, #3
    8558:	add	x0, x1, x0
    855c:	ldr	x0, [x0]
    8560:	mov	x1, x0
    8564:	ldr	x0, [sp, #40]
    8568:	bl	2430 <Perl_sv_isobject@plt>
    856c:	cmp	w0, #0x0
    8570:	b.eq	86e8 <XS_threads_equal+0x208>  // b.none
    8574:	ldr	x0, [sp, #40]
    8578:	ldr	x1, [x0, #24]
    857c:	ldrsw	x0, [sp, #64]
    8580:	add	x0, x0, #0x1
    8584:	lsl	x0, x0, #3
    8588:	add	x0, x1, x0
    858c:	ldr	x0, [x0]
    8590:	mov	x1, x0
    8594:	ldr	x0, [sp, #40]
    8598:	bl	2430 <Perl_sv_isobject@plt>
    859c:	cmp	w0, #0x0
    85a0:	b.eq	86e8 <XS_threads_equal+0x208>  // b.none
    85a4:	ldr	x0, [sp, #40]
    85a8:	ldr	x1, [x0, #24]
    85ac:	ldrsw	x0, [sp, #64]
    85b0:	lsl	x0, x0, #3
    85b4:	add	x0, x1, x0
    85b8:	ldr	x0, [x0]
    85bc:	ldr	x0, [x0, #16]
    85c0:	ldr	w1, [x0, #12]
    85c4:	mov	w0, #0x100                 	// #256
    85c8:	movk	w0, #0x20, lsl #16
    85cc:	and	w0, w1, w0
    85d0:	cmp	w0, #0x100
    85d4:	b.ne	8600 <XS_threads_equal+0x120>  // b.any
    85d8:	ldr	x0, [sp, #40]
    85dc:	ldr	x1, [x0, #24]
    85e0:	ldrsw	x0, [sp, #64]
    85e4:	lsl	x0, x0, #3
    85e8:	add	x0, x1, x0
    85ec:	ldr	x0, [x0]
    85f0:	ldr	x0, [x0, #16]
    85f4:	ldr	x0, [x0]
    85f8:	ldr	x0, [x0, #32]
    85fc:	b	862c <XS_threads_equal+0x14c>
    8600:	ldr	x0, [sp, #40]
    8604:	ldr	x1, [x0, #24]
    8608:	ldrsw	x0, [sp, #64]
    860c:	lsl	x0, x0, #3
    8610:	add	x0, x1, x0
    8614:	ldr	x0, [x0]
    8618:	ldr	x0, [x0, #16]
    861c:	mov	w2, #0x2                   	// #2
    8620:	mov	x1, x0
    8624:	ldr	x0, [sp, #40]
    8628:	bl	2170 <Perl_sv_2iv_flags@plt>
    862c:	str	x0, [sp, #88]
    8630:	ldr	x0, [sp, #40]
    8634:	ldr	x1, [x0, #24]
    8638:	ldrsw	x0, [sp, #64]
    863c:	add	x0, x0, #0x1
    8640:	lsl	x0, x0, #3
    8644:	add	x0, x1, x0
    8648:	ldr	x0, [x0]
    864c:	ldr	x0, [x0, #16]
    8650:	ldr	w1, [x0, #12]
    8654:	mov	w0, #0x100                 	// #256
    8658:	movk	w0, #0x20, lsl #16
    865c:	and	w0, w1, w0
    8660:	cmp	w0, #0x100
    8664:	b.ne	8694 <XS_threads_equal+0x1b4>  // b.any
    8668:	ldr	x0, [sp, #40]
    866c:	ldr	x1, [x0, #24]
    8670:	ldrsw	x0, [sp, #64]
    8674:	add	x0, x0, #0x1
    8678:	lsl	x0, x0, #3
    867c:	add	x0, x1, x0
    8680:	ldr	x0, [x0]
    8684:	ldr	x0, [x0, #16]
    8688:	ldr	x0, [x0]
    868c:	ldr	x0, [x0, #32]
    8690:	b	86c4 <XS_threads_equal+0x1e4>
    8694:	ldr	x0, [sp, #40]
    8698:	ldr	x1, [x0, #24]
    869c:	ldrsw	x0, [sp, #64]
    86a0:	add	x0, x0, #0x1
    86a4:	lsl	x0, x0, #3
    86a8:	add	x0, x1, x0
    86ac:	ldr	x0, [x0]
    86b0:	ldr	x0, [x0, #16]
    86b4:	mov	w2, #0x2                   	// #2
    86b8:	mov	x1, x0
    86bc:	ldr	x0, [sp, #40]
    86c0:	bl	2170 <Perl_sv_2iv_flags@plt>
    86c4:	str	x0, [sp, #96]
    86c8:	ldr	x0, [sp, #88]
    86cc:	ldr	x1, [x0, #24]
    86d0:	ldr	x0, [sp, #96]
    86d4:	ldr	x0, [x0, #24]
    86d8:	cmp	x1, x0
    86dc:	cset	w0, eq  // eq = none
    86e0:	and	w0, w0, #0xff
    86e4:	str	w0, [sp, #60]
    86e8:	ldr	w0, [sp, #60]
    86ec:	cmp	w0, #0x0
    86f0:	b.eq	8718 <XS_threads_equal+0x238>  // b.none
    86f4:	ldr	x0, [sp, #40]
    86f8:	ldr	x1, [x0, #24]
    86fc:	ldrsw	x0, [sp, #64]
    8700:	lsl	x0, x0, #3
    8704:	add	x0, x1, x0
    8708:	ldr	x1, [sp, #40]
    870c:	add	x1, x1, #0x138
    8710:	str	x1, [x0]
    8714:	b	874c <XS_threads_equal+0x26c>
    8718:	mov	x1, #0x0                   	// #0
    871c:	ldr	x0, [sp, #40]
    8720:	bl	26b0 <Perl_newSViv@plt>
    8724:	mov	x2, x0
    8728:	ldr	x0, [sp, #40]
    872c:	ldr	x1, [x0, #24]
    8730:	ldrsw	x0, [sp, #64]
    8734:	lsl	x0, x0, #3
    8738:	add	x19, x1, x0
    873c:	mov	x1, x2
    8740:	ldr	x0, [sp, #40]
    8744:	bl	2550 <Perl_sv_2mortal@plt>
    8748:	str	x0, [x19]
    874c:	mov	x0, #0x1                   	// #1
    8750:	str	x0, [sp, #104]
    8754:	ldr	x0, [sp, #40]
    8758:	ldr	x1, [x0, #24]
    875c:	ldrsw	x2, [sp, #64]
    8760:	ldr	x0, [sp, #104]
    8764:	add	x0, x2, x0
    8768:	lsl	x0, x0, #3
    876c:	sub	x0, x0, #0x8
    8770:	add	x1, x1, x0
    8774:	ldr	x0, [sp, #40]
    8778:	str	x1, [x0]
    877c:	nop
    8780:	ldr	x19, [sp, #16]
    8784:	ldp	x29, x30, [sp], #112
    8788:	ret

000000000000878c <XS_threads_object>:
    878c:	stp	x29, x30, [sp, #-176]!
    8790:	mov	x29, sp
    8794:	str	x19, [sp, #16]
    8798:	str	x0, [sp, #40]
    879c:	str	x1, [sp, #32]
    87a0:	ldr	x0, [sp, #40]
    87a4:	ldr	x0, [x0]
    87a8:	str	x0, [sp, #96]
    87ac:	ldr	x0, [sp, #40]
    87b0:	bl	28e0 <S_POPMARK>
    87b4:	str	w0, [sp, #60]
    87b8:	ldr	x0, [sp, #40]
    87bc:	ldr	x1, [x0, #24]
    87c0:	ldr	w0, [sp, #60]
    87c4:	add	w2, w0, #0x1
    87c8:	str	w2, [sp, #60]
    87cc:	sxtw	x0, w0
    87d0:	lsl	x0, x0, #3
    87d4:	add	x0, x1, x0
    87d8:	str	x0, [sp, #104]
    87dc:	ldr	x1, [sp, #96]
    87e0:	ldr	x0, [sp, #104]
    87e4:	sub	x0, x1, x0
    87e8:	asr	x0, x0, #3
    87ec:	str	w0, [sp, #64]
    87f0:	str	wzr, [sp, #56]
    87f4:	ldr	x0, [sp, #40]
    87f8:	ldr	x1, [x0, #2032]
    87fc:	mov	w6, #0x0                   	// #0
    8800:	mov	x5, #0x0                   	// #0
    8804:	mov	w4, #0x30                  	// #48
    8808:	mov	w3, #0x12                  	// #18
    880c:	adrp	x0, a000 <XS_threads_error+0x190>
    8810:	add	x2, x0, #0x738
    8814:	ldr	x0, [sp, #40]
    8818:	bl	2610 <Perl_hv_common_key_len@plt>
    881c:	ldr	x0, [x0]
    8820:	str	x0, [sp, #112]
    8824:	ldr	x0, [sp, #112]
    8828:	ldr	w1, [x0, #12]
    882c:	mov	w0, #0x100                 	// #256
    8830:	movk	w0, #0x8020, lsl #16
    8834:	and	w1, w1, w0
    8838:	mov	w0, #0x100                 	// #256
    883c:	movk	w0, #0x8000, lsl #16
    8840:	cmp	w1, w0
    8844:	b.ne	8858 <XS_threads_object+0xcc>  // b.any
    8848:	ldr	x0, [sp, #112]
    884c:	ldr	x0, [x0]
    8850:	ldr	x0, [x0, #32]
    8854:	b	8868 <XS_threads_object+0xdc>
    8858:	mov	w2, #0x2                   	// #2
    885c:	ldr	x1, [sp, #112]
    8860:	ldr	x0, [sp, #40]
    8864:	bl	21d0 <Perl_sv_2uv_flags@plt>
    8868:	str	x0, [sp, #120]
    886c:	ldr	x0, [sp, #40]
    8870:	ldr	x1, [x0, #24]
    8874:	ldrsw	x0, [sp, #60]
    8878:	lsl	x0, x0, #3
    887c:	add	x0, x1, x0
    8880:	ldr	x0, [x0]
    8884:	ldr	w0, [x0, #12]
    8888:	and	w0, w0, #0x800
    888c:	cmp	w0, #0x0
    8890:	b.eq	88a4 <XS_threads_object+0x118>  // b.none
    8894:	adrp	x0, a000 <XS_threads_error+0x190>
    8898:	add	x1, x0, #0xc08
    889c:	ldr	x0, [sp, #40]
    88a0:	bl	24d0 <Perl_croak@plt>
    88a4:	ldr	x0, [sp, #40]
    88a8:	ldr	x1, [x0, #24]
    88ac:	ldrsw	x0, [sp, #60]
    88b0:	lsl	x0, x0, #3
    88b4:	add	x0, x1, x0
    88b8:	ldr	x0, [x0]
    88bc:	ldr	w1, [x0, #12]
    88c0:	mov	w0, #0x400                 	// #1024
    88c4:	movk	w0, #0x20, lsl #16
    88c8:	and	w0, w1, w0
    88cc:	cmp	w0, #0x400
    88d0:	b.ne	88f4 <XS_threads_object+0x168>  // b.any
    88d4:	ldr	x0, [sp, #40]
    88d8:	ldr	x1, [x0, #24]
    88dc:	ldrsw	x0, [sp, #60]
    88e0:	lsl	x0, x0, #3
    88e4:	add	x0, x1, x0
    88e8:	ldr	x0, [x0]
    88ec:	ldr	x0, [x0, #16]
    88f0:	b	8920 <XS_threads_object+0x194>
    88f4:	ldr	x0, [sp, #40]
    88f8:	ldr	x1, [x0, #24]
    88fc:	ldrsw	x0, [sp, #60]
    8900:	lsl	x0, x0, #3
    8904:	add	x0, x1, x0
    8908:	ldr	x0, [x0]
    890c:	mov	w3, #0x2                   	// #2
    8910:	mov	x2, #0x0                   	// #0
    8914:	mov	x1, x0
    8918:	ldr	x0, [sp, #40]
    891c:	bl	2370 <Perl_sv_2pv_flags@plt>
    8920:	str	x0, [sp, #128]
    8924:	ldr	x0, [sp, #40]
    8928:	ldr	x1, [x0, #24]
    892c:	ldrsw	x0, [sp, #60]
    8930:	add	x0, x0, #0x1
    8934:	lsl	x0, x0, #3
    8938:	add	x0, x1, x0
    893c:	ldr	x0, [x0]
    8940:	str	x0, [sp, #136]
    8944:	ldr	x0, [sp, #136]
    8948:	ldr	w0, [x0, #12]
    894c:	lsr	w0, w0, #21
    8950:	mov	w0, w0
    8954:	and	x0, x0, #0x1
    8958:	cmp	x0, #0x0
    895c:	b.eq	8974 <XS_threads_object+0x1e8>  // b.none
    8960:	ldr	x1, [sp, #136]
    8964:	ldr	x0, [sp, #40]
    8968:	bl	2560 <Perl_mg_get@plt>
    896c:	cmp	w0, #0x0
    8970:	nop
    8974:	ldr	w0, [sp, #64]
    8978:	cmp	w0, #0x1
    897c:	b.le	8994 <XS_threads_object+0x208>
    8980:	ldr	x0, [sp, #136]
    8984:	ldr	w0, [x0, #12]
    8988:	and	w0, w0, #0xff00
    898c:	cmp	w0, #0x0
    8990:	b.ne	89e8 <XS_threads_object+0x25c>  // b.any
    8994:	ldr	x0, [sp, #40]
    8998:	ldr	x1, [x0, #24]
    899c:	ldrsw	x0, [sp, #60]
    89a0:	lsl	x0, x0, #3
    89a4:	add	x0, x1, x0
    89a8:	ldr	x1, [sp, #40]
    89ac:	add	x1, x1, #0x150
    89b0:	str	x1, [x0]
    89b4:	mov	x0, #0x1                   	// #1
    89b8:	str	x0, [sp, #168]
    89bc:	ldr	x0, [sp, #40]
    89c0:	ldr	x1, [x0, #24]
    89c4:	ldrsw	x2, [sp, #60]
    89c8:	ldr	x0, [sp, #168]
    89cc:	add	x0, x2, x0
    89d0:	lsl	x0, x0, #3
    89d4:	sub	x0, x0, #0x8
    89d8:	add	x1, x1, x0
    89dc:	ldr	x0, [sp, #40]
    89e0:	str	x1, [x0]
    89e4:	b	8cc0 <XS_threads_object+0x534>
    89e8:	ldr	x0, [sp, #136]
    89ec:	ldr	w1, [x0, #12]
    89f0:	mov	w0, #0x100                 	// #256
    89f4:	movk	w0, #0x8020, lsl #16
    89f8:	and	w1, w1, w0
    89fc:	mov	w0, #0x100                 	// #256
    8a00:	movk	w0, #0x8000, lsl #16
    8a04:	cmp	w1, w0
    8a08:	b.ne	8a1c <XS_threads_object+0x290>  // b.any
    8a0c:	ldr	x0, [sp, #136]
    8a10:	ldr	x0, [x0]
    8a14:	ldr	x0, [x0, #32]
    8a18:	b	8a2c <XS_threads_object+0x2a0>
    8a1c:	mov	w2, #0x2                   	// #2
    8a20:	ldr	x1, [sp, #136]
    8a24:	ldr	x0, [sp, #40]
    8a28:	bl	21d0 <Perl_sv_2uv_flags@plt>
    8a2c:	str	x0, [sp, #144]
    8a30:	ldr	x0, [sp, #40]
    8a34:	bl	2b30 <S_ithread_get>
    8a38:	str	x0, [sp, #88]
    8a3c:	ldr	x0, [sp, #88]
    8a40:	ldr	x0, [x0, #24]
    8a44:	ldr	x1, [sp, #144]
    8a48:	cmp	x1, x0
    8a4c:	b.ne	8a9c <XS_threads_object+0x310>  // b.any
    8a50:	mov	w4, #0x1                   	// #1
    8a54:	ldr	x3, [sp, #128]
    8a58:	ldr	x2, [sp, #88]
    8a5c:	mov	x1, #0x0                   	// #0
    8a60:	ldr	x0, [sp, #40]
    8a64:	bl	47c8 <S_ithread_to_SV>
    8a68:	mov	x2, x0
    8a6c:	ldr	x0, [sp, #40]
    8a70:	ldr	x1, [x0, #24]
    8a74:	ldrsw	x0, [sp, #60]
    8a78:	lsl	x0, x0, #3
    8a7c:	add	x19, x1, x0
    8a80:	mov	x1, x2
    8a84:	ldr	x0, [sp, #40]
    8a88:	bl	2550 <Perl_sv_2mortal@plt>
    8a8c:	str	x0, [x19]
    8a90:	mov	w0, #0x1                   	// #1
    8a94:	str	w0, [sp, #56]
    8a98:	b	8c2c <XS_threads_object+0x4a0>
    8a9c:	ldr	x0, [sp, #120]
    8aa0:	add	x0, x0, #0x110
    8aa4:	bl	2720 <pthread_mutex_lock@plt>
    8aa8:	str	w0, [sp, #68]
    8aac:	ldr	w0, [sp, #68]
    8ab0:	cmp	w0, #0x0
    8ab4:	b.eq	8ad4 <XS_threads_object+0x348>  // b.none
    8ab8:	mov	w3, #0x635                 	// #1589
    8abc:	adrp	x0, a000 <XS_threads_error+0x190>
    8ac0:	add	x2, x0, #0x700
    8ac4:	ldr	w1, [sp, #68]
    8ac8:	adrp	x0, a000 <XS_threads_error+0x190>
    8acc:	add	x0, x0, #0x778
    8ad0:	bl	2510 <Perl_croak_nocontext@plt>
    8ad4:	ldr	x0, [sp, #120]
    8ad8:	ldr	x0, [x0]
    8adc:	str	x0, [sp, #88]
    8ae0:	b	8bdc <XS_threads_object+0x450>
    8ae4:	ldr	x0, [sp, #88]
    8ae8:	ldr	x0, [x0, #24]
    8aec:	ldr	x1, [sp, #144]
    8af0:	cmp	x1, x0
    8af4:	b.ne	8bd0 <XS_threads_object+0x444>  // b.any
    8af8:	ldr	x0, [sp, #88]
    8afc:	add	x0, x0, #0x20
    8b00:	bl	2720 <pthread_mutex_lock@plt>
    8b04:	str	w0, [sp, #72]
    8b08:	ldr	w0, [sp, #72]
    8b0c:	cmp	w0, #0x0
    8b10:	b.eq	8b30 <XS_threads_object+0x3a4>  // b.none
    8b14:	mov	w3, #0x63d                 	// #1597
    8b18:	adrp	x0, a000 <XS_threads_error+0x190>
    8b1c:	add	x2, x0, #0x700
    8b20:	ldr	w1, [sp, #72]
    8b24:	adrp	x0, a000 <XS_threads_error+0x190>
    8b28:	add	x0, x0, #0x778
    8b2c:	bl	2510 <Perl_croak_nocontext@plt>
    8b30:	ldr	x0, [sp, #88]
    8b34:	ldr	w0, [x0, #84]
    8b38:	str	w0, [sp, #76]
    8b3c:	ldr	x0, [sp, #88]
    8b40:	add	x0, x0, #0x20
    8b44:	bl	2730 <pthread_mutex_unlock@plt>
    8b48:	str	w0, [sp, #80]
    8b4c:	ldr	w0, [sp, #80]
    8b50:	cmp	w0, #0x0
    8b54:	b.eq	8b74 <XS_threads_object+0x3e8>  // b.none
    8b58:	mov	w3, #0x63f                 	// #1599
    8b5c:	adrp	x0, a000 <XS_threads_error+0x190>
    8b60:	add	x2, x0, #0x700
    8b64:	ldr	w1, [sp, #80]
    8b68:	adrp	x0, a000 <XS_threads_error+0x190>
    8b6c:	add	x0, x0, #0x750
    8b70:	bl	2510 <Perl_croak_nocontext@plt>
    8b74:	ldr	w0, [sp, #76]
    8b78:	and	w0, w0, #0x3
    8b7c:	cmp	w0, #0x0
    8b80:	b.ne	8bf0 <XS_threads_object+0x464>  // b.any
    8b84:	mov	w4, #0x1                   	// #1
    8b88:	ldr	x3, [sp, #128]
    8b8c:	ldr	x2, [sp, #88]
    8b90:	mov	x1, #0x0                   	// #0
    8b94:	ldr	x0, [sp, #40]
    8b98:	bl	47c8 <S_ithread_to_SV>
    8b9c:	mov	x2, x0
    8ba0:	ldr	x0, [sp, #40]
    8ba4:	ldr	x1, [x0, #24]
    8ba8:	ldrsw	x0, [sp, #60]
    8bac:	lsl	x0, x0, #3
    8bb0:	add	x19, x1, x0
    8bb4:	mov	x1, x2
    8bb8:	ldr	x0, [sp, #40]
    8bbc:	bl	2550 <Perl_sv_2mortal@plt>
    8bc0:	str	x0, [x19]
    8bc4:	mov	w0, #0x1                   	// #1
    8bc8:	str	w0, [sp, #56]
    8bcc:	b	8bf0 <XS_threads_object+0x464>
    8bd0:	ldr	x0, [sp, #88]
    8bd4:	ldr	x0, [x0]
    8bd8:	str	x0, [sp, #88]
    8bdc:	ldr	x0, [sp, #120]
    8be0:	ldr	x1, [sp, #88]
    8be4:	cmp	x1, x0
    8be8:	b.ne	8ae4 <XS_threads_object+0x358>  // b.any
    8bec:	b	8bf4 <XS_threads_object+0x468>
    8bf0:	nop
    8bf4:	ldr	x0, [sp, #120]
    8bf8:	add	x0, x0, #0x110
    8bfc:	bl	2730 <pthread_mutex_unlock@plt>
    8c00:	str	w0, [sp, #84]
    8c04:	ldr	w0, [sp, #84]
    8c08:	cmp	w0, #0x0
    8c0c:	b.eq	8c2c <XS_threads_object+0x4a0>  // b.none
    8c10:	mov	w3, #0x648                 	// #1608
    8c14:	adrp	x0, a000 <XS_threads_error+0x190>
    8c18:	add	x2, x0, #0x700
    8c1c:	ldr	w1, [sp, #84]
    8c20:	adrp	x0, a000 <XS_threads_error+0x190>
    8c24:	add	x0, x0, #0x750
    8c28:	bl	2510 <Perl_croak_nocontext@plt>
    8c2c:	ldr	w0, [sp, #56]
    8c30:	cmp	w0, #0x0
    8c34:	b.ne	8c8c <XS_threads_object+0x500>  // b.any
    8c38:	ldr	x0, [sp, #40]
    8c3c:	ldr	x1, [x0, #24]
    8c40:	ldrsw	x0, [sp, #60]
    8c44:	lsl	x0, x0, #3
    8c48:	add	x0, x1, x0
    8c4c:	ldr	x1, [sp, #40]
    8c50:	add	x1, x1, #0x150
    8c54:	str	x1, [x0]
    8c58:	mov	x0, #0x1                   	// #1
    8c5c:	str	x0, [sp, #160]
    8c60:	ldr	x0, [sp, #40]
    8c64:	ldr	x1, [x0, #24]
    8c68:	ldrsw	x2, [sp, #60]
    8c6c:	ldr	x0, [sp, #160]
    8c70:	add	x0, x2, x0
    8c74:	lsl	x0, x0, #3
    8c78:	sub	x0, x0, #0x8
    8c7c:	add	x1, x1, x0
    8c80:	ldr	x0, [sp, #40]
    8c84:	str	x1, [x0]
    8c88:	b	8cc0 <XS_threads_object+0x534>
    8c8c:	mov	x0, #0x1                   	// #1
    8c90:	str	x0, [sp, #152]
    8c94:	ldr	x0, [sp, #40]
    8c98:	ldr	x1, [x0, #24]
    8c9c:	ldrsw	x2, [sp, #60]
    8ca0:	ldr	x0, [sp, #152]
    8ca4:	add	x0, x2, x0
    8ca8:	lsl	x0, x0, #3
    8cac:	sub	x0, x0, #0x8
    8cb0:	add	x1, x1, x0
    8cb4:	ldr	x0, [sp, #40]
    8cb8:	str	x1, [x0]
    8cbc:	nop
    8cc0:	ldr	x19, [sp, #16]
    8cc4:	ldp	x29, x30, [sp], #176
    8cc8:	ret

0000000000008ccc <XS_threads__handle>:
    8ccc:	stp	x29, x30, [sp, #-96]!
    8cd0:	mov	x29, sp
    8cd4:	str	x19, [sp, #16]
    8cd8:	str	x0, [sp, #40]
    8cdc:	str	x1, [sp, #32]
    8ce0:	ldr	x0, [sp, #40]
    8ce4:	ldr	x0, [x0]
    8ce8:	str	x0, [sp, #64]
    8cec:	ldr	x0, [sp, #40]
    8cf0:	bl	28e0 <S_POPMARK>
    8cf4:	str	w0, [sp, #56]
    8cf8:	ldr	x0, [sp, #40]
    8cfc:	ldr	x1, [x0, #24]
    8d00:	ldr	w0, [sp, #56]
    8d04:	add	w2, w0, #0x1
    8d08:	str	w2, [sp, #56]
    8d0c:	sxtw	x0, w0
    8d10:	lsl	x0, x0, #3
    8d14:	add	x0, x1, x0
    8d18:	str	x0, [sp, #72]
    8d1c:	ldr	x1, [sp, #64]
    8d20:	ldr	x0, [sp, #72]
    8d24:	sub	x0, x1, x0
    8d28:	asr	x0, x0, #3
    8d2c:	str	w0, [sp, #60]
    8d30:	ldr	x0, [sp, #40]
    8d34:	ldr	x1, [x0, #24]
    8d38:	ldrsw	x0, [sp, #56]
    8d3c:	lsl	x0, x0, #3
    8d40:	add	x0, x1, x0
    8d44:	ldr	x0, [x0]
    8d48:	mov	x1, x0
    8d4c:	ldr	x0, [sp, #40]
    8d50:	bl	48a0 <S_SV_to_ithread>
    8d54:	str	x0, [sp, #80]
    8d58:	ldr	x0, [sp, #80]
    8d5c:	add	x0, x0, #0x70
    8d60:	mov	x1, x0
    8d64:	ldr	x0, [sp, #40]
    8d68:	bl	2580 <Perl_newSVuv@plt>
    8d6c:	mov	x2, x0
    8d70:	ldr	x0, [sp, #40]
    8d74:	ldr	x1, [x0, #24]
    8d78:	ldrsw	x0, [sp, #56]
    8d7c:	lsl	x0, x0, #3
    8d80:	add	x19, x1, x0
    8d84:	mov	x1, x2
    8d88:	ldr	x0, [sp, #40]
    8d8c:	bl	2550 <Perl_sv_2mortal@plt>
    8d90:	str	x0, [x19]
    8d94:	mov	x0, #0x1                   	// #1
    8d98:	str	x0, [sp, #88]
    8d9c:	ldr	x0, [sp, #40]
    8da0:	ldr	x1, [x0, #24]
    8da4:	ldrsw	x2, [sp, #56]
    8da8:	ldr	x0, [sp, #88]
    8dac:	add	x0, x2, x0
    8db0:	lsl	x0, x0, #3
    8db4:	sub	x0, x0, #0x8
    8db8:	add	x1, x1, x0
    8dbc:	ldr	x0, [sp, #40]
    8dc0:	str	x1, [x0]
    8dc4:	nop
    8dc8:	ldr	x19, [sp, #16]
    8dcc:	ldp	x29, x30, [sp], #96
    8dd0:	ret

0000000000008dd4 <XS_threads_get_stack_size>:
    8dd4:	stp	x29, x30, [sp, #-112]!
    8dd8:	mov	x29, sp
    8ddc:	str	x19, [sp, #16]
    8de0:	str	x0, [sp, #40]
    8de4:	str	x1, [sp, #32]
    8de8:	ldr	x0, [sp, #40]
    8dec:	ldr	x0, [x0]
    8df0:	str	x0, [sp, #64]
    8df4:	ldr	x0, [sp, #40]
    8df8:	bl	28e0 <S_POPMARK>
    8dfc:	str	w0, [sp, #48]
    8e00:	ldr	x0, [sp, #40]
    8e04:	ldr	x1, [x0, #24]
    8e08:	ldr	w0, [sp, #48]
    8e0c:	add	w2, w0, #0x1
    8e10:	str	w2, [sp, #48]
    8e14:	sxtw	x0, w0
    8e18:	lsl	x0, x0, #3
    8e1c:	add	x0, x1, x0
    8e20:	str	x0, [sp, #72]
    8e24:	ldr	x1, [sp, #64]
    8e28:	ldr	x0, [sp, #72]
    8e2c:	sub	x0, x1, x0
    8e30:	asr	x0, x0, #3
    8e34:	str	w0, [sp, #52]
    8e38:	ldr	x0, [sp, #40]
    8e3c:	ldr	x1, [x0, #2032]
    8e40:	mov	w6, #0x0                   	// #0
    8e44:	mov	x5, #0x0                   	// #0
    8e48:	mov	w4, #0x30                  	// #48
    8e4c:	mov	w3, #0x12                  	// #18
    8e50:	adrp	x0, a000 <XS_threads_error+0x190>
    8e54:	add	x2, x0, #0x738
    8e58:	ldr	x0, [sp, #40]
    8e5c:	bl	2610 <Perl_hv_common_key_len@plt>
    8e60:	ldr	x0, [x0]
    8e64:	str	x0, [sp, #80]
    8e68:	ldr	x0, [sp, #80]
    8e6c:	ldr	w1, [x0, #12]
    8e70:	mov	w0, #0x100                 	// #256
    8e74:	movk	w0, #0x8020, lsl #16
    8e78:	and	w1, w1, w0
    8e7c:	mov	w0, #0x100                 	// #256
    8e80:	movk	w0, #0x8000, lsl #16
    8e84:	cmp	w1, w0
    8e88:	b.ne	8e9c <XS_threads_get_stack_size+0xc8>  // b.any
    8e8c:	ldr	x0, [sp, #80]
    8e90:	ldr	x0, [x0]
    8e94:	ldr	x0, [x0, #32]
    8e98:	b	8eac <XS_threads_get_stack_size+0xd8>
    8e9c:	mov	w2, #0x2                   	// #2
    8ea0:	ldr	x1, [sp, #80]
    8ea4:	ldr	x0, [sp, #40]
    8ea8:	bl	21d0 <Perl_sv_2uv_flags@plt>
    8eac:	str	x0, [sp, #88]
    8eb0:	ldr	x0, [sp, #40]
    8eb4:	ldr	x1, [x0, #24]
    8eb8:	ldrsw	x0, [sp, #48]
    8ebc:	lsl	x0, x0, #3
    8ec0:	add	x0, x1, x0
    8ec4:	ldr	x0, [x0]
    8ec8:	mov	x1, x0
    8ecc:	ldr	x0, [sp, #40]
    8ed0:	bl	2430 <Perl_sv_isobject@plt>
    8ed4:	cmp	w0, #0x0
    8ed8:	b.eq	8f78 <XS_threads_get_stack_size+0x1a4>  // b.none
    8edc:	ldr	x0, [sp, #40]
    8ee0:	ldr	x1, [x0, #24]
    8ee4:	ldrsw	x0, [sp, #48]
    8ee8:	lsl	x0, x0, #3
    8eec:	add	x0, x1, x0
    8ef0:	ldr	x0, [x0]
    8ef4:	ldr	x0, [x0, #16]
    8ef8:	ldr	w1, [x0, #12]
    8efc:	mov	w0, #0x100                 	// #256
    8f00:	movk	w0, #0x20, lsl #16
    8f04:	and	w0, w1, w0
    8f08:	cmp	w0, #0x100
    8f0c:	b.ne	8f38 <XS_threads_get_stack_size+0x164>  // b.any
    8f10:	ldr	x0, [sp, #40]
    8f14:	ldr	x1, [x0, #24]
    8f18:	ldrsw	x0, [sp, #48]
    8f1c:	lsl	x0, x0, #3
    8f20:	add	x0, x1, x0
    8f24:	ldr	x0, [x0]
    8f28:	ldr	x0, [x0, #16]
    8f2c:	ldr	x0, [x0]
    8f30:	ldr	x0, [x0, #32]
    8f34:	b	8f64 <XS_threads_get_stack_size+0x190>
    8f38:	ldr	x0, [sp, #40]
    8f3c:	ldr	x1, [x0, #24]
    8f40:	ldrsw	x0, [sp, #48]
    8f44:	lsl	x0, x0, #3
    8f48:	add	x0, x1, x0
    8f4c:	ldr	x0, [x0]
    8f50:	ldr	x0, [x0, #16]
    8f54:	mov	w2, #0x2                   	// #2
    8f58:	mov	x1, x0
    8f5c:	ldr	x0, [sp, #40]
    8f60:	bl	2170 <Perl_sv_2iv_flags@plt>
    8f64:	str	x0, [sp, #96]
    8f68:	ldr	x0, [sp, #96]
    8f6c:	ldr	x0, [x0, #120]
    8f70:	str	x0, [sp, #56]
    8f74:	b	8f84 <XS_threads_get_stack_size+0x1b0>
    8f78:	ldr	x0, [sp, #88]
    8f7c:	ldr	x0, [x0, #360]
    8f80:	str	x0, [sp, #56]
    8f84:	ldr	x1, [sp, #56]
    8f88:	ldr	x0, [sp, #40]
    8f8c:	bl	26b0 <Perl_newSViv@plt>
    8f90:	mov	x2, x0
    8f94:	ldr	x0, [sp, #40]
    8f98:	ldr	x1, [x0, #24]
    8f9c:	ldrsw	x0, [sp, #48]
    8fa0:	lsl	x0, x0, #3
    8fa4:	add	x19, x1, x0
    8fa8:	mov	x1, x2
    8fac:	ldr	x0, [sp, #40]
    8fb0:	bl	2550 <Perl_sv_2mortal@plt>
    8fb4:	str	x0, [x19]
    8fb8:	mov	x0, #0x1                   	// #1
    8fbc:	str	x0, [sp, #104]
    8fc0:	ldr	x0, [sp, #40]
    8fc4:	ldr	x1, [x0, #24]
    8fc8:	ldrsw	x2, [sp, #48]
    8fcc:	ldr	x0, [sp, #104]
    8fd0:	add	x0, x2, x0
    8fd4:	lsl	x0, x0, #3
    8fd8:	sub	x0, x0, #0x8
    8fdc:	add	x1, x1, x0
    8fe0:	ldr	x0, [sp, #40]
    8fe4:	str	x1, [x0]
    8fe8:	nop
    8fec:	ldr	x19, [sp, #16]
    8ff0:	ldp	x29, x30, [sp], #112
    8ff4:	ret

0000000000008ff8 <XS_threads_set_stack_size>:
    8ff8:	stp	x29, x30, [sp, #-112]!
    8ffc:	mov	x29, sp
    9000:	str	x19, [sp, #16]
    9004:	str	x0, [sp, #40]
    9008:	str	x1, [sp, #32]
    900c:	ldr	x0, [sp, #40]
    9010:	ldr	x0, [x0]
    9014:	str	x0, [sp, #64]
    9018:	ldr	x0, [sp, #40]
    901c:	bl	28e0 <S_POPMARK>
    9020:	str	w0, [sp, #56]
    9024:	ldr	x0, [sp, #40]
    9028:	ldr	x1, [x0, #24]
    902c:	ldr	w0, [sp, #56]
    9030:	add	w2, w0, #0x1
    9034:	str	w2, [sp, #56]
    9038:	sxtw	x0, w0
    903c:	lsl	x0, x0, #3
    9040:	add	x0, x1, x0
    9044:	str	x0, [sp, #72]
    9048:	ldr	x1, [sp, #64]
    904c:	ldr	x0, [sp, #72]
    9050:	sub	x0, x1, x0
    9054:	asr	x0, x0, #3
    9058:	str	w0, [sp, #60]
    905c:	ldr	x0, [sp, #40]
    9060:	ldr	x1, [x0, #2032]
    9064:	mov	w6, #0x0                   	// #0
    9068:	mov	x5, #0x0                   	// #0
    906c:	mov	w4, #0x30                  	// #48
    9070:	mov	w3, #0x12                  	// #18
    9074:	adrp	x0, a000 <XS_threads_error+0x190>
    9078:	add	x2, x0, #0x738
    907c:	ldr	x0, [sp, #40]
    9080:	bl	2610 <Perl_hv_common_key_len@plt>
    9084:	ldr	x0, [x0]
    9088:	str	x0, [sp, #80]
    908c:	ldr	x0, [sp, #80]
    9090:	ldr	w1, [x0, #12]
    9094:	mov	w0, #0x100                 	// #256
    9098:	movk	w0, #0x8020, lsl #16
    909c:	and	w1, w1, w0
    90a0:	mov	w0, #0x100                 	// #256
    90a4:	movk	w0, #0x8000, lsl #16
    90a8:	cmp	w1, w0
    90ac:	b.ne	90c0 <XS_threads_set_stack_size+0xc8>  // b.any
    90b0:	ldr	x0, [sp, #80]
    90b4:	ldr	x0, [x0]
    90b8:	ldr	x0, [x0, #32]
    90bc:	b	90d0 <XS_threads_set_stack_size+0xd8>
    90c0:	mov	w2, #0x2                   	// #2
    90c4:	ldr	x1, [sp, #80]
    90c8:	ldr	x0, [sp, #40]
    90cc:	bl	21d0 <Perl_sv_2uv_flags@plt>
    90d0:	str	x0, [sp, #88]
    90d4:	ldr	w0, [sp, #60]
    90d8:	cmp	w0, #0x2
    90dc:	b.eq	90f0 <XS_threads_set_stack_size+0xf8>  // b.none
    90e0:	adrp	x0, a000 <XS_threads_error+0x190>
    90e4:	add	x1, x0, #0xc28
    90e8:	ldr	x0, [sp, #40]
    90ec:	bl	24d0 <Perl_croak@plt>
    90f0:	ldr	x0, [sp, #40]
    90f4:	ldr	x1, [x0, #24]
    90f8:	ldrsw	x0, [sp, #56]
    90fc:	lsl	x0, x0, #3
    9100:	add	x0, x1, x0
    9104:	ldr	x0, [x0]
    9108:	mov	x1, x0
    910c:	ldr	x0, [sp, #40]
    9110:	bl	2430 <Perl_sv_isobject@plt>
    9114:	cmp	w0, #0x0
    9118:	b.eq	912c <XS_threads_set_stack_size+0x134>  // b.none
    911c:	adrp	x0, a000 <XS_threads_error+0x190>
    9120:	add	x1, x0, #0xc50
    9124:	ldr	x0, [sp, #40]
    9128:	bl	24d0 <Perl_croak@plt>
    912c:	ldr	x0, [sp, #40]
    9130:	ldr	x1, [x0, #24]
    9134:	ldrsw	x0, [sp, #56]
    9138:	add	x0, x0, #0x1
    913c:	lsl	x0, x0, #3
    9140:	add	x0, x1, x0
    9144:	ldr	x0, [x0]
    9148:	mov	x1, x0
    914c:	ldr	x0, [sp, #40]
    9150:	bl	21a0 <Perl_looks_like_number@plt>
    9154:	cmp	w0, #0x0
    9158:	b.ne	916c <XS_threads_set_stack_size+0x174>  // b.any
    915c:	adrp	x0, a000 <XS_threads_error+0x190>
    9160:	add	x1, x0, #0xc80
    9164:	ldr	x0, [sp, #40]
    9168:	bl	24d0 <Perl_croak@plt>
    916c:	ldr	x0, [sp, #88]
    9170:	ldr	x0, [x0, #360]
    9174:	str	x0, [sp, #96]
    9178:	ldr	x0, [sp, #40]
    917c:	ldr	x1, [x0, #24]
    9180:	ldrsw	x0, [sp, #56]
    9184:	add	x0, x0, #0x1
    9188:	lsl	x0, x0, #3
    918c:	add	x0, x1, x0
    9190:	ldr	x0, [x0]
    9194:	ldr	w1, [x0, #12]
    9198:	mov	w0, #0x100                 	// #256
    919c:	movk	w0, #0x20, lsl #16
    91a0:	and	w0, w1, w0
    91a4:	cmp	w0, #0x100
    91a8:	b.ne	91d4 <XS_threads_set_stack_size+0x1dc>  // b.any
    91ac:	ldr	x0, [sp, #40]
    91b0:	ldr	x1, [x0, #24]
    91b4:	ldrsw	x0, [sp, #56]
    91b8:	add	x0, x0, #0x1
    91bc:	lsl	x0, x0, #3
    91c0:	add	x0, x1, x0
    91c4:	ldr	x0, [x0]
    91c8:	ldr	x0, [x0]
    91cc:	ldr	x0, [x0, #32]
    91d0:	b	9200 <XS_threads_set_stack_size+0x208>
    91d4:	ldr	x0, [sp, #40]
    91d8:	ldr	x1, [x0, #24]
    91dc:	ldrsw	x0, [sp, #56]
    91e0:	add	x0, x0, #0x1
    91e4:	lsl	x0, x0, #3
    91e8:	add	x0, x1, x0
    91ec:	ldr	x0, [x0]
    91f0:	mov	w2, #0x2                   	// #2
    91f4:	mov	x1, x0
    91f8:	ldr	x0, [sp, #40]
    91fc:	bl	2170 <Perl_sv_2iv_flags@plt>
    9200:	mov	x1, x0
    9204:	ldr	x0, [sp, #40]
    9208:	bl	33f4 <S_good_stack_size>
    920c:	mov	x1, x0
    9210:	ldr	x0, [sp, #88]
    9214:	str	x1, [x0, #360]
    9218:	ldr	x1, [sp, #96]
    921c:	ldr	x0, [sp, #40]
    9220:	bl	26b0 <Perl_newSViv@plt>
    9224:	mov	x2, x0
    9228:	ldr	x0, [sp, #40]
    922c:	ldr	x1, [x0, #24]
    9230:	ldrsw	x0, [sp, #56]
    9234:	lsl	x0, x0, #3
    9238:	add	x19, x1, x0
    923c:	mov	x1, x2
    9240:	ldr	x0, [sp, #40]
    9244:	bl	2550 <Perl_sv_2mortal@plt>
    9248:	str	x0, [x19]
    924c:	mov	x0, #0x1                   	// #1
    9250:	str	x0, [sp, #104]
    9254:	ldr	x0, [sp, #40]
    9258:	ldr	x1, [x0, #24]
    925c:	ldrsw	x2, [sp, #56]
    9260:	ldr	x0, [sp, #104]
    9264:	add	x0, x2, x0
    9268:	lsl	x0, x0, #3
    926c:	sub	x0, x0, #0x8
    9270:	add	x1, x1, x0
    9274:	ldr	x0, [sp, #40]
    9278:	str	x1, [x0]
    927c:	nop
    9280:	ldr	x19, [sp, #16]
    9284:	ldp	x29, x30, [sp], #112
    9288:	ret

000000000000928c <XS_threads_is_running>:
    928c:	stp	x29, x30, [sp, #-80]!
    9290:	mov	x29, sp
    9294:	str	x0, [sp, #24]
    9298:	str	x1, [sp, #16]
    929c:	ldr	x0, [sp, #24]
    92a0:	ldr	x0, [x0]
    92a4:	str	x0, [sp, #48]
    92a8:	ldr	x0, [sp, #24]
    92ac:	bl	28e0 <S_POPMARK>
    92b0:	str	w0, [sp, #32]
    92b4:	ldr	x0, [sp, #24]
    92b8:	ldr	x1, [x0, #24]
    92bc:	ldr	w0, [sp, #32]
    92c0:	add	w2, w0, #0x1
    92c4:	str	w2, [sp, #32]
    92c8:	sxtw	x0, w0
    92cc:	lsl	x0, x0, #3
    92d0:	add	x0, x1, x0
    92d4:	str	x0, [sp, #56]
    92d8:	ldr	x1, [sp, #48]
    92dc:	ldr	x0, [sp, #56]
    92e0:	sub	x0, x1, x0
    92e4:	asr	x0, x0, #3
    92e8:	str	w0, [sp, #36]
    92ec:	ldr	w0, [sp, #36]
    92f0:	cmp	w0, #0x1
    92f4:	b.ne	9324 <XS_threads_is_running+0x98>  // b.any
    92f8:	ldr	x0, [sp, #24]
    92fc:	ldr	x1, [x0, #24]
    9300:	ldrsw	x0, [sp, #32]
    9304:	lsl	x0, x0, #3
    9308:	add	x0, x1, x0
    930c:	ldr	x0, [x0]
    9310:	mov	x1, x0
    9314:	ldr	x0, [sp, #24]
    9318:	bl	2430 <Perl_sv_isobject@plt>
    931c:	cmp	w0, #0x0
    9320:	b.ne	9334 <XS_threads_is_running+0xa8>  // b.any
    9324:	adrp	x0, a000 <XS_threads_error+0x190>
    9328:	add	x1, x0, #0xca0
    932c:	ldr	x0, [sp, #24]
    9330:	bl	24d0 <Perl_croak@plt>
    9334:	ldr	x0, [sp, #24]
    9338:	ldr	x1, [x0, #24]
    933c:	ldrsw	x0, [sp, #32]
    9340:	lsl	x0, x0, #3
    9344:	add	x0, x1, x0
    9348:	ldr	x0, [x0]
    934c:	ldr	x0, [x0, #16]
    9350:	ldr	w1, [x0, #12]
    9354:	mov	w0, #0x100                 	// #256
    9358:	movk	w0, #0x20, lsl #16
    935c:	and	w0, w1, w0
    9360:	cmp	w0, #0x100
    9364:	b.ne	9390 <XS_threads_is_running+0x104>  // b.any
    9368:	ldr	x0, [sp, #24]
    936c:	ldr	x1, [x0, #24]
    9370:	ldrsw	x0, [sp, #32]
    9374:	lsl	x0, x0, #3
    9378:	add	x0, x1, x0
    937c:	ldr	x0, [x0]
    9380:	ldr	x0, [x0, #16]
    9384:	ldr	x0, [x0]
    9388:	ldr	x0, [x0, #32]
    938c:	b	93bc <XS_threads_is_running+0x130>
    9390:	ldr	x0, [sp, #24]
    9394:	ldr	x1, [x0, #24]
    9398:	ldrsw	x0, [sp, #32]
    939c:	lsl	x0, x0, #3
    93a0:	add	x0, x1, x0
    93a4:	ldr	x0, [x0]
    93a8:	ldr	x0, [x0, #16]
    93ac:	mov	w2, #0x2                   	// #2
    93b0:	mov	x1, x0
    93b4:	ldr	x0, [sp, #24]
    93b8:	bl	2170 <Perl_sv_2iv_flags@plt>
    93bc:	str	x0, [sp, #64]
    93c0:	ldr	x0, [sp, #64]
    93c4:	add	x0, x0, #0x20
    93c8:	bl	2720 <pthread_mutex_lock@plt>
    93cc:	str	w0, [sp, #40]
    93d0:	ldr	w0, [sp, #40]
    93d4:	cmp	w0, #0x0
    93d8:	b.eq	93f8 <XS_threads_is_running+0x16c>  // b.none
    93dc:	mov	w3, #0x694                 	// #1684
    93e0:	adrp	x0, a000 <XS_threads_error+0x190>
    93e4:	add	x2, x0, #0x700
    93e8:	ldr	w1, [sp, #40]
    93ec:	adrp	x0, a000 <XS_threads_error+0x190>
    93f0:	add	x0, x0, #0x778
    93f4:	bl	2510 <Perl_croak_nocontext@plt>
    93f8:	ldr	x0, [sp, #64]
    93fc:	ldr	w0, [x0, #84]
    9400:	and	w0, w0, #0x4
    9404:	cmp	w0, #0x0
    9408:	b.eq	9418 <XS_threads_is_running+0x18c>  // b.none
    940c:	ldr	x0, [sp, #24]
    9410:	add	x0, x0, #0x168
    9414:	b	9420 <XS_threads_is_running+0x194>
    9418:	ldr	x0, [sp, #24]
    941c:	add	x0, x0, #0x138
    9420:	ldr	x1, [sp, #24]
    9424:	ldr	x2, [x1, #24]
    9428:	ldrsw	x1, [sp, #32]
    942c:	lsl	x1, x1, #3
    9430:	add	x1, x2, x1
    9434:	str	x0, [x1]
    9438:	ldr	x0, [sp, #64]
    943c:	add	x0, x0, #0x20
    9440:	bl	2730 <pthread_mutex_unlock@plt>
    9444:	str	w0, [sp, #44]
    9448:	ldr	w0, [sp, #44]
    944c:	cmp	w0, #0x0
    9450:	b.eq	9470 <XS_threads_is_running+0x1e4>  // b.none
    9454:	mov	w3, #0x696                 	// #1686
    9458:	adrp	x0, a000 <XS_threads_error+0x190>
    945c:	add	x2, x0, #0x700
    9460:	ldr	w1, [sp, #44]
    9464:	adrp	x0, a000 <XS_threads_error+0x190>
    9468:	add	x0, x0, #0x750
    946c:	bl	2510 <Perl_croak_nocontext@plt>
    9470:	mov	x0, #0x1                   	// #1
    9474:	str	x0, [sp, #72]
    9478:	ldr	x0, [sp, #24]
    947c:	ldr	x1, [x0, #24]
    9480:	ldrsw	x2, [sp, #32]
    9484:	ldr	x0, [sp, #72]
    9488:	add	x0, x2, x0
    948c:	lsl	x0, x0, #3
    9490:	sub	x0, x0, #0x8
    9494:	add	x1, x1, x0
    9498:	ldr	x0, [sp, #24]
    949c:	str	x1, [x0]
    94a0:	nop
    94a4:	ldp	x29, x30, [sp], #80
    94a8:	ret

00000000000094ac <XS_threads_is_detached>:
    94ac:	stp	x29, x30, [sp, #-80]!
    94b0:	mov	x29, sp
    94b4:	str	x0, [sp, #24]
    94b8:	str	x1, [sp, #16]
    94bc:	ldr	x0, [sp, #24]
    94c0:	ldr	x0, [x0]
    94c4:	str	x0, [sp, #48]
    94c8:	ldr	x0, [sp, #24]
    94cc:	bl	28e0 <S_POPMARK>
    94d0:	str	w0, [sp, #32]
    94d4:	ldr	x0, [sp, #24]
    94d8:	ldr	x1, [x0, #24]
    94dc:	ldr	w0, [sp, #32]
    94e0:	add	w2, w0, #0x1
    94e4:	str	w2, [sp, #32]
    94e8:	sxtw	x0, w0
    94ec:	lsl	x0, x0, #3
    94f0:	add	x0, x1, x0
    94f4:	str	x0, [sp, #56]
    94f8:	ldr	x1, [sp, #48]
    94fc:	ldr	x0, [sp, #56]
    9500:	sub	x0, x1, x0
    9504:	asr	x0, x0, #3
    9508:	str	w0, [sp, #36]
    950c:	ldr	x0, [sp, #24]
    9510:	ldr	x1, [x0, #24]
    9514:	ldrsw	x0, [sp, #32]
    9518:	lsl	x0, x0, #3
    951c:	add	x0, x1, x0
    9520:	ldr	x0, [x0]
    9524:	mov	x1, x0
    9528:	ldr	x0, [sp, #24]
    952c:	bl	48a0 <S_SV_to_ithread>
    9530:	str	x0, [sp, #64]
    9534:	ldr	x0, [sp, #64]
    9538:	add	x0, x0, #0x20
    953c:	bl	2720 <pthread_mutex_lock@plt>
    9540:	str	w0, [sp, #40]
    9544:	ldr	w0, [sp, #40]
    9548:	cmp	w0, #0x0
    954c:	b.eq	956c <XS_threads_is_detached+0xc0>  // b.none
    9550:	mov	w3, #0x6a1                 	// #1697
    9554:	adrp	x0, a000 <XS_threads_error+0x190>
    9558:	add	x2, x0, #0x700
    955c:	ldr	w1, [sp, #40]
    9560:	adrp	x0, a000 <XS_threads_error+0x190>
    9564:	add	x0, x0, #0x778
    9568:	bl	2510 <Perl_croak_nocontext@plt>
    956c:	ldr	x0, [sp, #64]
    9570:	ldr	w0, [x0, #84]
    9574:	and	w0, w0, #0x1
    9578:	cmp	w0, #0x0
    957c:	b.eq	958c <XS_threads_is_detached+0xe0>  // b.none
    9580:	ldr	x0, [sp, #24]
    9584:	add	x0, x0, #0x138
    9588:	b	9594 <XS_threads_is_detached+0xe8>
    958c:	ldr	x0, [sp, #24]
    9590:	add	x0, x0, #0x168
    9594:	ldr	x1, [sp, #24]
    9598:	ldr	x2, [x1, #24]
    959c:	ldrsw	x1, [sp, #32]
    95a0:	lsl	x1, x1, #3
    95a4:	add	x1, x2, x1
    95a8:	str	x0, [x1]
    95ac:	ldr	x0, [sp, #64]
    95b0:	add	x0, x0, #0x20
    95b4:	bl	2730 <pthread_mutex_unlock@plt>
    95b8:	str	w0, [sp, #44]
    95bc:	ldr	w0, [sp, #44]
    95c0:	cmp	w0, #0x0
    95c4:	b.eq	95e4 <XS_threads_is_detached+0x138>  // b.none
    95c8:	mov	w3, #0x6a3                 	// #1699
    95cc:	adrp	x0, a000 <XS_threads_error+0x190>
    95d0:	add	x2, x0, #0x700
    95d4:	ldr	w1, [sp, #44]
    95d8:	adrp	x0, a000 <XS_threads_error+0x190>
    95dc:	add	x0, x0, #0x750
    95e0:	bl	2510 <Perl_croak_nocontext@plt>
    95e4:	mov	x0, #0x1                   	// #1
    95e8:	str	x0, [sp, #72]
    95ec:	ldr	x0, [sp, #24]
    95f0:	ldr	x1, [x0, #24]
    95f4:	ldrsw	x2, [sp, #32]
    95f8:	ldr	x0, [sp, #72]
    95fc:	add	x0, x2, x0
    9600:	lsl	x0, x0, #3
    9604:	sub	x0, x0, #0x8
    9608:	add	x1, x1, x0
    960c:	ldr	x0, [sp, #24]
    9610:	str	x1, [x0]
    9614:	nop
    9618:	ldp	x29, x30, [sp], #80
    961c:	ret

0000000000009620 <XS_threads_is_joinable>:
    9620:	stp	x29, x30, [sp, #-80]!
    9624:	mov	x29, sp
    9628:	str	x0, [sp, #24]
    962c:	str	x1, [sp, #16]
    9630:	ldr	x0, [sp, #24]
    9634:	ldr	x0, [x0]
    9638:	str	x0, [sp, #48]
    963c:	ldr	x0, [sp, #24]
    9640:	bl	28e0 <S_POPMARK>
    9644:	str	w0, [sp, #32]
    9648:	ldr	x0, [sp, #24]
    964c:	ldr	x1, [x0, #24]
    9650:	ldr	w0, [sp, #32]
    9654:	add	w2, w0, #0x1
    9658:	str	w2, [sp, #32]
    965c:	sxtw	x0, w0
    9660:	lsl	x0, x0, #3
    9664:	add	x0, x1, x0
    9668:	str	x0, [sp, #56]
    966c:	ldr	x1, [sp, #48]
    9670:	ldr	x0, [sp, #56]
    9674:	sub	x0, x1, x0
    9678:	asr	x0, x0, #3
    967c:	str	w0, [sp, #36]
    9680:	ldr	w0, [sp, #36]
    9684:	cmp	w0, #0x1
    9688:	b.ne	96b8 <XS_threads_is_joinable+0x98>  // b.any
    968c:	ldr	x0, [sp, #24]
    9690:	ldr	x1, [x0, #24]
    9694:	ldrsw	x0, [sp, #32]
    9698:	lsl	x0, x0, #3
    969c:	add	x0, x1, x0
    96a0:	ldr	x0, [x0]
    96a4:	mov	x1, x0
    96a8:	ldr	x0, [sp, #24]
    96ac:	bl	2430 <Perl_sv_isobject@plt>
    96b0:	cmp	w0, #0x0
    96b4:	b.ne	96c8 <XS_threads_is_joinable+0xa8>  // b.any
    96b8:	adrp	x0, a000 <XS_threads_error+0x190>
    96bc:	add	x1, x0, #0xcc0
    96c0:	ldr	x0, [sp, #24]
    96c4:	bl	24d0 <Perl_croak@plt>
    96c8:	ldr	x0, [sp, #24]
    96cc:	ldr	x1, [x0, #24]
    96d0:	ldrsw	x0, [sp, #32]
    96d4:	lsl	x0, x0, #3
    96d8:	add	x0, x1, x0
    96dc:	ldr	x0, [x0]
    96e0:	ldr	x0, [x0, #16]
    96e4:	ldr	w1, [x0, #12]
    96e8:	mov	w0, #0x100                 	// #256
    96ec:	movk	w0, #0x20, lsl #16
    96f0:	and	w0, w1, w0
    96f4:	cmp	w0, #0x100
    96f8:	b.ne	9724 <XS_threads_is_joinable+0x104>  // b.any
    96fc:	ldr	x0, [sp, #24]
    9700:	ldr	x1, [x0, #24]
    9704:	ldrsw	x0, [sp, #32]
    9708:	lsl	x0, x0, #3
    970c:	add	x0, x1, x0
    9710:	ldr	x0, [x0]
    9714:	ldr	x0, [x0, #16]
    9718:	ldr	x0, [x0]
    971c:	ldr	x0, [x0, #32]
    9720:	b	9750 <XS_threads_is_joinable+0x130>
    9724:	ldr	x0, [sp, #24]
    9728:	ldr	x1, [x0, #24]
    972c:	ldrsw	x0, [sp, #32]
    9730:	lsl	x0, x0, #3
    9734:	add	x0, x1, x0
    9738:	ldr	x0, [x0]
    973c:	ldr	x0, [x0, #16]
    9740:	mov	w2, #0x2                   	// #2
    9744:	mov	x1, x0
    9748:	ldr	x0, [sp, #24]
    974c:	bl	2170 <Perl_sv_2iv_flags@plt>
    9750:	str	x0, [sp, #64]
    9754:	ldr	x0, [sp, #64]
    9758:	add	x0, x0, #0x20
    975c:	bl	2720 <pthread_mutex_lock@plt>
    9760:	str	w0, [sp, #40]
    9764:	ldr	w0, [sp, #40]
    9768:	cmp	w0, #0x0
    976c:	b.eq	978c <XS_threads_is_joinable+0x16c>  // b.none
    9770:	mov	w3, #0x6b2                 	// #1714
    9774:	adrp	x0, a000 <XS_threads_error+0x190>
    9778:	add	x2, x0, #0x700
    977c:	ldr	w1, [sp, #40]
    9780:	adrp	x0, a000 <XS_threads_error+0x190>
    9784:	add	x0, x0, #0x778
    9788:	bl	2510 <Perl_croak_nocontext@plt>
    978c:	ldr	x0, [sp, #64]
    9790:	ldr	w0, [x0, #84]
    9794:	and	w0, w0, #0x4
    9798:	cmp	w0, #0x0
    979c:	b.eq	97c0 <XS_threads_is_joinable+0x1a0>  // b.none
    97a0:	ldr	x0, [sp, #64]
    97a4:	ldr	w0, [x0, #84]
    97a8:	and	w0, w0, #0x3
    97ac:	cmp	w0, #0x0
    97b0:	b.ne	97c0 <XS_threads_is_joinable+0x1a0>  // b.any
    97b4:	ldr	x0, [sp, #24]
    97b8:	add	x0, x0, #0x138
    97bc:	b	97c8 <XS_threads_is_joinable+0x1a8>
    97c0:	ldr	x0, [sp, #24]
    97c4:	add	x0, x0, #0x168
    97c8:	ldr	x1, [sp, #24]
    97cc:	ldr	x2, [x1, #24]
    97d0:	ldrsw	x1, [sp, #32]
    97d4:	lsl	x1, x1, #3
    97d8:	add	x1, x2, x1
    97dc:	str	x0, [x1]
    97e0:	ldr	x0, [sp, #64]
    97e4:	add	x0, x0, #0x20
    97e8:	bl	2730 <pthread_mutex_unlock@plt>
    97ec:	str	w0, [sp, #44]
    97f0:	ldr	w0, [sp, #44]
    97f4:	cmp	w0, #0x0
    97f8:	b.eq	9818 <XS_threads_is_joinable+0x1f8>  // b.none
    97fc:	mov	w3, #0x6b6                 	// #1718
    9800:	adrp	x0, a000 <XS_threads_error+0x190>
    9804:	add	x2, x0, #0x700
    9808:	ldr	w1, [sp, #44]
    980c:	adrp	x0, a000 <XS_threads_error+0x190>
    9810:	add	x0, x0, #0x750
    9814:	bl	2510 <Perl_croak_nocontext@plt>
    9818:	mov	x0, #0x1                   	// #1
    981c:	str	x0, [sp, #72]
    9820:	ldr	x0, [sp, #24]
    9824:	ldr	x1, [x0, #24]
    9828:	ldrsw	x2, [sp, #32]
    982c:	ldr	x0, [sp, #72]
    9830:	add	x0, x2, x0
    9834:	lsl	x0, x0, #3
    9838:	sub	x0, x0, #0x8
    983c:	add	x1, x1, x0
    9840:	ldr	x0, [sp, #24]
    9844:	str	x1, [x0]
    9848:	nop
    984c:	ldp	x29, x30, [sp], #80
    9850:	ret

0000000000009854 <XS_threads_wantarray>:
    9854:	stp	x29, x30, [sp, #-80]!
    9858:	mov	x29, sp
    985c:	str	x0, [sp, #24]
    9860:	str	x1, [sp, #16]
    9864:	ldr	x0, [sp, #24]
    9868:	ldr	x0, [x0]
    986c:	str	x0, [sp, #48]
    9870:	ldr	x0, [sp, #24]
    9874:	bl	28e0 <S_POPMARK>
    9878:	str	w0, [sp, #40]
    987c:	ldr	x0, [sp, #24]
    9880:	ldr	x1, [x0, #24]
    9884:	ldr	w0, [sp, #40]
    9888:	add	w2, w0, #0x1
    988c:	str	w2, [sp, #40]
    9890:	sxtw	x0, w0
    9894:	lsl	x0, x0, #3
    9898:	add	x0, x1, x0
    989c:	str	x0, [sp, #56]
    98a0:	ldr	x1, [sp, #48]
    98a4:	ldr	x0, [sp, #56]
    98a8:	sub	x0, x1, x0
    98ac:	asr	x0, x0, #3
    98b0:	str	w0, [sp, #44]
    98b4:	ldr	x0, [sp, #24]
    98b8:	ldr	x1, [x0, #24]
    98bc:	ldrsw	x0, [sp, #40]
    98c0:	lsl	x0, x0, #3
    98c4:	add	x0, x1, x0
    98c8:	ldr	x0, [x0]
    98cc:	mov	x1, x0
    98d0:	ldr	x0, [sp, #24]
    98d4:	bl	48a0 <S_SV_to_ithread>
    98d8:	str	x0, [sp, #64]
    98dc:	ldr	x0, [sp, #64]
    98e0:	ldr	w0, [x0, #88]
    98e4:	and	w0, w0, #0x3
    98e8:	cmp	w0, #0x3
    98ec:	b.ne	98fc <XS_threads_wantarray+0xa8>  // b.any
    98f0:	ldr	x0, [sp, #24]
    98f4:	add	x0, x0, #0x138
    98f8:	b	9924 <XS_threads_wantarray+0xd0>
    98fc:	ldr	x0, [sp, #64]
    9900:	ldr	w0, [x0, #88]
    9904:	and	w0, w0, #0x3
    9908:	cmp	w0, #0x1
    990c:	b.ne	991c <XS_threads_wantarray+0xc8>  // b.any
    9910:	ldr	x0, [sp, #24]
    9914:	add	x0, x0, #0x150
    9918:	b	9924 <XS_threads_wantarray+0xd0>
    991c:	ldr	x0, [sp, #24]
    9920:	add	x0, x0, #0x168
    9924:	ldr	x1, [sp, #24]
    9928:	ldr	x2, [x1, #24]
    992c:	ldrsw	x1, [sp, #40]
    9930:	lsl	x1, x1, #3
    9934:	add	x1, x2, x1
    9938:	str	x0, [x1]
    993c:	mov	x0, #0x1                   	// #1
    9940:	str	x0, [sp, #72]
    9944:	ldr	x0, [sp, #24]
    9948:	ldr	x1, [x0, #24]
    994c:	ldrsw	x2, [sp, #40]
    9950:	ldr	x0, [sp, #72]
    9954:	add	x0, x2, x0
    9958:	lsl	x0, x0, #3
    995c:	sub	x0, x0, #0x8
    9960:	add	x1, x1, x0
    9964:	ldr	x0, [sp, #24]
    9968:	str	x1, [x0]
    996c:	nop
    9970:	ldp	x29, x30, [sp], #80
    9974:	ret

0000000000009978 <XS_threads_set_thread_exit_only>:
    9978:	stp	x29, x30, [sp, #-80]!
    997c:	mov	x29, sp
    9980:	str	x0, [sp, #24]
    9984:	str	x1, [sp, #16]
    9988:	ldr	x0, [sp, #24]
    998c:	ldr	x0, [x0]
    9990:	str	x0, [sp, #48]
    9994:	ldr	x0, [sp, #24]
    9998:	bl	28e0 <S_POPMARK>
    999c:	str	w0, [sp, #32]
    99a0:	ldr	x0, [sp, #24]
    99a4:	ldr	x1, [x0, #24]
    99a8:	ldr	w0, [sp, #32]
    99ac:	add	w2, w0, #0x1
    99b0:	str	w2, [sp, #32]
    99b4:	sxtw	x0, w0
    99b8:	lsl	x0, x0, #3
    99bc:	add	x0, x1, x0
    99c0:	str	x0, [sp, #56]
    99c4:	ldr	x1, [sp, #48]
    99c8:	ldr	x0, [sp, #56]
    99cc:	sub	x0, x1, x0
    99d0:	asr	x0, x0, #3
    99d4:	str	w0, [sp, #36]
    99d8:	ldr	w0, [sp, #36]
    99dc:	cmp	w0, #0x2
    99e0:	b.eq	99f4 <XS_threads_set_thread_exit_only+0x7c>  // b.none
    99e4:	adrp	x0, a000 <XS_threads_error+0x190>
    99e8:	add	x1, x0, #0xce0
    99ec:	ldr	x0, [sp, #24]
    99f0:	bl	24d0 <Perl_croak@plt>
    99f4:	ldr	x0, [sp, #24]
    99f8:	ldr	x1, [x0, #24]
    99fc:	ldrsw	x0, [sp, #32]
    9a00:	lsl	x0, x0, #3
    9a04:	add	x0, x1, x0
    9a08:	ldr	x0, [x0]
    9a0c:	mov	x1, x0
    9a10:	ldr	x0, [sp, #24]
    9a14:	bl	48a0 <S_SV_to_ithread>
    9a18:	str	x0, [sp, #64]
    9a1c:	ldr	x0, [sp, #64]
    9a20:	add	x0, x0, #0x20
    9a24:	bl	2720 <pthread_mutex_lock@plt>
    9a28:	str	w0, [sp, #40]
    9a2c:	ldr	w0, [sp, #40]
    9a30:	cmp	w0, #0x0
    9a34:	b.eq	9a54 <XS_threads_set_thread_exit_only+0xdc>  // b.none
    9a38:	mov	w3, #0x6d0                 	// #1744
    9a3c:	adrp	x0, a000 <XS_threads_error+0x190>
    9a40:	add	x2, x0, #0x700
    9a44:	ldr	w1, [sp, #40]
    9a48:	adrp	x0, a000 <XS_threads_error+0x190>
    9a4c:	add	x0, x0, #0x778
    9a50:	bl	2510 <Perl_croak_nocontext@plt>
    9a54:	ldr	x0, [sp, #24]
    9a58:	ldr	x1, [x0, #24]
    9a5c:	ldrsw	x0, [sp, #32]
    9a60:	add	x0, x0, #0x1
    9a64:	lsl	x0, x0, #3
    9a68:	add	x0, x1, x0
    9a6c:	ldr	x0, [x0]
    9a70:	cmp	x0, #0x0
    9a74:	cset	w0, ne  // ne = any
    9a78:	and	w0, w0, #0xff
    9a7c:	and	x0, x0, #0xff
    9a80:	cmp	x0, #0x0
    9a84:	b.eq	9de8 <XS_threads_set_thread_exit_only+0x470>  // b.none
    9a88:	ldr	x0, [sp, #24]
    9a8c:	ldr	x1, [x0, #24]
    9a90:	ldrsw	x0, [sp, #32]
    9a94:	add	x0, x0, #0x1
    9a98:	lsl	x0, x0, #3
    9a9c:	add	x0, x1, x0
    9aa0:	ldr	x0, [x0]
    9aa4:	ldr	w0, [x0, #12]
    9aa8:	lsr	w0, w0, #21
    9aac:	mov	w0, w0
    9ab0:	and	x0, x0, #0x1
    9ab4:	cmp	x0, #0x0
    9ab8:	b.eq	9aec <XS_threads_set_thread_exit_only+0x174>  // b.none
    9abc:	ldr	x0, [sp, #24]
    9ac0:	ldr	x1, [x0, #24]
    9ac4:	ldrsw	x0, [sp, #32]
    9ac8:	add	x0, x0, #0x1
    9acc:	lsl	x0, x0, #3
    9ad0:	add	x0, x1, x0
    9ad4:	ldr	x0, [x0]
    9ad8:	mov	x1, x0
    9adc:	ldr	x0, [sp, #24]
    9ae0:	bl	2560 <Perl_mg_get@plt>
    9ae4:	cmp	w0, #0x0
    9ae8:	nop
    9aec:	ldr	x0, [sp, #24]
    9af0:	ldr	x1, [x0, #24]
    9af4:	ldrsw	x0, [sp, #32]
    9af8:	add	x0, x0, #0x1
    9afc:	lsl	x0, x0, #3
    9b00:	add	x0, x1, x0
    9b04:	ldr	x1, [x0]
    9b08:	ldr	x0, [sp, #24]
    9b0c:	add	x0, x0, #0x138
    9b10:	sub	x0, x1, x0
    9b14:	asr	x1, x0, #3
    9b18:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    9b1c:	movk	x0, #0xaaab
    9b20:	mul	x0, x1, x0
    9b24:	cmp	x0, #0x3
    9b28:	b.hi	9b60 <XS_threads_set_thread_exit_only+0x1e8>  // b.pmore
    9b2c:	ldr	x0, [sp, #24]
    9b30:	ldr	x1, [x0, #24]
    9b34:	ldrsw	x0, [sp, #32]
    9b38:	add	x0, x0, #0x1
    9b3c:	lsl	x0, x0, #3
    9b40:	add	x0, x1, x0
    9b44:	ldr	x1, [x0]
    9b48:	ldr	x0, [sp, #24]
    9b4c:	add	x0, x0, #0x138
    9b50:	cmp	x1, x0
    9b54:	cset	w0, eq  // eq = none
    9b58:	and	w0, w0, #0xff
    9b5c:	b	9dc8 <XS_threads_set_thread_exit_only+0x450>
    9b60:	ldr	x0, [sp, #24]
    9b64:	ldr	x1, [x0, #24]
    9b68:	ldrsw	x0, [sp, #32]
    9b6c:	add	x0, x0, #0x1
    9b70:	lsl	x0, x0, #3
    9b74:	add	x0, x1, x0
    9b78:	ldr	x0, [x0]
    9b7c:	ldr	w0, [x0, #12]
    9b80:	and	w0, w0, #0xff00
    9b84:	cmp	w0, #0x0
    9b88:	b.eq	9dc4 <XS_threads_set_thread_exit_only+0x44c>  // b.none
    9b8c:	ldr	x0, [sp, #24]
    9b90:	ldr	x1, [x0, #24]
    9b94:	ldrsw	x0, [sp, #32]
    9b98:	add	x0, x0, #0x1
    9b9c:	lsl	x0, x0, #3
    9ba0:	add	x0, x1, x0
    9ba4:	ldr	x0, [x0]
    9ba8:	ldr	w0, [x0, #12]
    9bac:	and	w0, w0, #0x400
    9bb0:	cmp	w0, #0x0
    9bb4:	b.eq	9c80 <XS_threads_set_thread_exit_only+0x308>  // b.none
    9bb8:	ldr	x0, [sp, #24]
    9bbc:	ldr	x1, [x0, #24]
    9bc0:	ldrsw	x0, [sp, #32]
    9bc4:	add	x0, x0, #0x1
    9bc8:	lsl	x0, x0, #3
    9bcc:	add	x0, x1, x0
    9bd0:	ldr	x0, [x0]
    9bd4:	ldr	x0, [x0]
    9bd8:	cmp	x0, #0x0
    9bdc:	b.eq	9c6c <XS_threads_set_thread_exit_only+0x2f4>  // b.none
    9be0:	ldr	x0, [sp, #24]
    9be4:	ldr	x1, [x0, #24]
    9be8:	ldrsw	x0, [sp, #32]
    9bec:	add	x0, x0, #0x1
    9bf0:	lsl	x0, x0, #3
    9bf4:	add	x0, x1, x0
    9bf8:	ldr	x0, [x0]
    9bfc:	ldr	x0, [x0]
    9c00:	ldr	x0, [x0, #16]
    9c04:	cmp	x0, #0x1
    9c08:	b.hi	9c64 <XS_threads_set_thread_exit_only+0x2ec>  // b.pmore
    9c0c:	ldr	x0, [sp, #24]
    9c10:	ldr	x1, [x0, #24]
    9c14:	ldrsw	x0, [sp, #32]
    9c18:	add	x0, x0, #0x1
    9c1c:	lsl	x0, x0, #3
    9c20:	add	x0, x1, x0
    9c24:	ldr	x0, [x0]
    9c28:	ldr	x0, [x0]
    9c2c:	ldr	x0, [x0, #16]
    9c30:	cmp	x0, #0x0
    9c34:	b.eq	9c6c <XS_threads_set_thread_exit_only+0x2f4>  // b.none
    9c38:	ldr	x0, [sp, #24]
    9c3c:	ldr	x1, [x0, #24]
    9c40:	ldrsw	x0, [sp, #32]
    9c44:	add	x0, x0, #0x1
    9c48:	lsl	x0, x0, #3
    9c4c:	add	x0, x1, x0
    9c50:	ldr	x0, [x0]
    9c54:	ldr	x0, [x0, #16]
    9c58:	ldrb	w0, [x0]
    9c5c:	cmp	w0, #0x30
    9c60:	b.eq	9c6c <XS_threads_set_thread_exit_only+0x2f4>  // b.none
    9c64:	mov	w0, #0x1                   	// #1
    9c68:	b	9c70 <XS_threads_set_thread_exit_only+0x2f8>
    9c6c:	mov	w0, #0x0                   	// #0
    9c70:	cmp	w0, #0x0
    9c74:	cset	w0, ne  // ne = any
    9c78:	and	w0, w0, #0xff
    9c7c:	b	9dc8 <XS_threads_set_thread_exit_only+0x450>
    9c80:	ldr	x0, [sp, #24]
    9c84:	ldr	x1, [x0, #24]
    9c88:	ldrsw	x0, [sp, #32]
    9c8c:	add	x0, x0, #0x1
    9c90:	lsl	x0, x0, #3
    9c94:	add	x0, x1, x0
    9c98:	ldr	x0, [x0]
    9c9c:	ldr	w0, [x0, #12]
    9ca0:	and	w0, w0, #0x100
    9ca4:	cmp	w0, #0x0
    9ca8:	b.eq	9ce0 <XS_threads_set_thread_exit_only+0x368>  // b.none
    9cac:	ldr	x0, [sp, #24]
    9cb0:	ldr	x1, [x0, #24]
    9cb4:	ldrsw	x0, [sp, #32]
    9cb8:	add	x0, x0, #0x1
    9cbc:	lsl	x0, x0, #3
    9cc0:	add	x0, x1, x0
    9cc4:	ldr	x0, [x0]
    9cc8:	ldr	x0, [x0]
    9ccc:	ldr	x0, [x0, #32]
    9cd0:	cmp	x0, #0x0
    9cd4:	cset	w0, ne  // ne = any
    9cd8:	and	w0, w0, #0xff
    9cdc:	b	9dc8 <XS_threads_set_thread_exit_only+0x450>
    9ce0:	ldr	x0, [sp, #24]
    9ce4:	ldr	x1, [x0, #24]
    9ce8:	ldrsw	x0, [sp, #32]
    9cec:	add	x0, x0, #0x1
    9cf0:	lsl	x0, x0, #3
    9cf4:	add	x0, x1, x0
    9cf8:	ldr	x0, [x0]
    9cfc:	ldr	w0, [x0, #12]
    9d00:	and	w0, w0, #0x800
    9d04:	cmp	w0, #0x0
    9d08:	b.eq	9d74 <XS_threads_set_thread_exit_only+0x3fc>  // b.none
    9d0c:	ldr	x0, [sp, #24]
    9d10:	ldr	x1, [x0, #24]
    9d14:	ldrsw	x0, [sp, #32]
    9d18:	add	x0, x0, #0x1
    9d1c:	lsl	x0, x0, #3
    9d20:	add	x0, x1, x0
    9d24:	ldr	x0, [x0]
    9d28:	ldr	x0, [x0, #16]
    9d2c:	ldr	w0, [x0, #12]
    9d30:	and	w0, w0, #0x100000
    9d34:	cmp	w0, #0x0
    9d38:	b.eq	9dac <XS_threads_set_thread_exit_only+0x434>  // b.none
    9d3c:	ldr	x0, [sp, #24]
    9d40:	ldr	x1, [x0, #24]
    9d44:	ldrsw	x0, [sp, #32]
    9d48:	add	x0, x0, #0x1
    9d4c:	lsl	x0, x0, #3
    9d50:	add	x0, x1, x0
    9d54:	ldr	x0, [x0]
    9d58:	ldr	x0, [x0, #16]
    9d5c:	ldr	x0, [x0]
    9d60:	ldr	x0, [x0]
    9d64:	ldr	w0, [x0, #12]
    9d68:	and	w0, w0, #0x10000000
    9d6c:	cmp	w0, #0x0
    9d70:	b.eq	9dac <XS_threads_set_thread_exit_only+0x434>  // b.none
    9d74:	ldr	x0, [sp, #24]
    9d78:	ldr	x1, [x0, #24]
    9d7c:	ldrsw	x0, [sp, #32]
    9d80:	add	x0, x0, #0x1
    9d84:	lsl	x0, x0, #3
    9d88:	add	x0, x1, x0
    9d8c:	ldr	x0, [x0]
    9d90:	mov	w2, #0x0                   	// #0
    9d94:	mov	x1, x0
    9d98:	ldr	x0, [sp, #24]
    9d9c:	bl	2180 <Perl_sv_2bool_flags@plt>
    9da0:	and	w0, w0, #0xff
    9da4:	cmp	w0, #0x0
    9da8:	b.eq	9db4 <XS_threads_set_thread_exit_only+0x43c>  // b.none
    9dac:	mov	w0, #0x1                   	// #1
    9db0:	b	9db8 <XS_threads_set_thread_exit_only+0x440>
    9db4:	mov	w0, #0x0                   	// #0
    9db8:	and	w0, w0, #0x1
    9dbc:	and	w0, w0, #0xff
    9dc0:	b	9dc8 <XS_threads_set_thread_exit_only+0x450>
    9dc4:	mov	w0, #0x0                   	// #0
    9dc8:	cmp	w0, #0x0
    9dcc:	b.eq	9de8 <XS_threads_set_thread_exit_only+0x470>  // b.none
    9dd0:	ldr	x0, [sp, #64]
    9dd4:	ldr	w0, [x0, #84]
    9dd8:	orr	w1, w0, #0x8
    9ddc:	ldr	x0, [sp, #64]
    9de0:	str	w1, [x0, #84]
    9de4:	b	9dfc <XS_threads_set_thread_exit_only+0x484>
    9de8:	ldr	x0, [sp, #64]
    9dec:	ldr	w0, [x0, #84]
    9df0:	and	w1, w0, #0xfffffff7
    9df4:	ldr	x0, [sp, #64]
    9df8:	str	w1, [x0, #84]
    9dfc:	ldr	x0, [sp, #64]
    9e00:	add	x0, x0, #0x20
    9e04:	bl	2730 <pthread_mutex_unlock@plt>
    9e08:	str	w0, [sp, #44]
    9e0c:	ldr	w0, [sp, #44]
    9e10:	cmp	w0, #0x0
    9e14:	b.eq	9e34 <XS_threads_set_thread_exit_only+0x4bc>  // b.none
    9e18:	mov	w3, #0x6d6                 	// #1750
    9e1c:	adrp	x0, a000 <XS_threads_error+0x190>
    9e20:	add	x2, x0, #0x700
    9e24:	ldr	w1, [sp, #44]
    9e28:	adrp	x0, a000 <XS_threads_error+0x190>
    9e2c:	add	x0, x0, #0x750
    9e30:	bl	2510 <Perl_croak_nocontext@plt>
    9e34:	mov	x0, #0x1                   	// #1
    9e38:	str	x0, [sp, #72]
    9e3c:	ldr	x0, [sp, #24]
    9e40:	ldr	x1, [x0, #24]
    9e44:	ldrsw	x2, [sp, #32]
    9e48:	ldr	x0, [sp, #72]
    9e4c:	add	x0, x2, x0
    9e50:	lsl	x0, x0, #3
    9e54:	sub	x0, x0, #0x8
    9e58:	add	x1, x1, x0
    9e5c:	ldr	x0, [sp, #24]
    9e60:	str	x1, [x0]
    9e64:	nop
    9e68:	ldp	x29, x30, [sp], #80
    9e6c:	ret

0000000000009e70 <XS_threads_error>:
    9e70:	stp	x29, x30, [sp, #-144]!
    9e74:	mov	x29, sp
    9e78:	str	x19, [sp, #16]
    9e7c:	str	x0, [sp, #40]
    9e80:	str	x1, [sp, #32]
    9e84:	ldr	x0, [sp, #40]
    9e88:	ldr	x0, [x0]
    9e8c:	str	x0, [sp, #72]
    9e90:	ldr	x0, [sp, #40]
    9e94:	bl	28e0 <S_POPMARK>
    9e98:	str	w0, [sp, #48]
    9e9c:	ldr	x0, [sp, #40]
    9ea0:	ldr	x1, [x0, #24]
    9ea4:	ldr	w0, [sp, #48]
    9ea8:	add	w2, w0, #0x1
    9eac:	str	w2, [sp, #48]
    9eb0:	sxtw	x0, w0
    9eb4:	lsl	x0, x0, #3
    9eb8:	add	x0, x1, x0
    9ebc:	str	x0, [sp, #80]
    9ec0:	ldr	x1, [sp, #72]
    9ec4:	ldr	x0, [sp, #80]
    9ec8:	sub	x0, x1, x0
    9ecc:	asr	x0, x0, #3
    9ed0:	str	w0, [sp, #52]
    9ed4:	str	xzr, [sp, #64]
    9ed8:	ldr	w0, [sp, #52]
    9edc:	cmp	w0, #0x1
    9ee0:	b.ne	9f10 <XS_threads_error+0xa0>  // b.any
    9ee4:	ldr	x0, [sp, #40]
    9ee8:	ldr	x1, [x0, #24]
    9eec:	ldrsw	x0, [sp, #48]
    9ef0:	lsl	x0, x0, #3
    9ef4:	add	x0, x1, x0
    9ef8:	ldr	x0, [x0]
    9efc:	mov	x1, x0
    9f00:	ldr	x0, [sp, #40]
    9f04:	bl	2430 <Perl_sv_isobject@plt>
    9f08:	cmp	w0, #0x0
    9f0c:	b.ne	9f20 <XS_threads_error+0xb0>  // b.any
    9f10:	adrp	x0, a000 <XS_threads_error+0x190>
    9f14:	add	x1, x0, #0xd08
    9f18:	ldr	x0, [sp, #40]
    9f1c:	bl	24d0 <Perl_croak@plt>
    9f20:	ldr	x0, [sp, #40]
    9f24:	ldr	x1, [x0, #24]
    9f28:	ldrsw	x0, [sp, #48]
    9f2c:	lsl	x0, x0, #3
    9f30:	add	x0, x1, x0
    9f34:	ldr	x0, [x0]
    9f38:	ldr	x0, [x0, #16]
    9f3c:	ldr	w1, [x0, #12]
    9f40:	mov	w0, #0x100                 	// #256
    9f44:	movk	w0, #0x20, lsl #16
    9f48:	and	w0, w1, w0
    9f4c:	cmp	w0, #0x100
    9f50:	b.ne	9f7c <XS_threads_error+0x10c>  // b.any
    9f54:	ldr	x0, [sp, #40]
    9f58:	ldr	x1, [x0, #24]
    9f5c:	ldrsw	x0, [sp, #48]
    9f60:	lsl	x0, x0, #3
    9f64:	add	x0, x1, x0
    9f68:	ldr	x0, [x0]
    9f6c:	ldr	x0, [x0, #16]
    9f70:	ldr	x0, [x0]
    9f74:	ldr	x0, [x0, #32]
    9f78:	b	9fa8 <XS_threads_error+0x138>
    9f7c:	ldr	x0, [sp, #40]
    9f80:	ldr	x1, [x0, #24]
    9f84:	ldrsw	x0, [sp, #48]
    9f88:	lsl	x0, x0, #3
    9f8c:	add	x0, x1, x0
    9f90:	ldr	x0, [x0]
    9f94:	ldr	x0, [x0, #16]
    9f98:	mov	w2, #0x2                   	// #2
    9f9c:	mov	x1, x0
    9fa0:	ldr	x0, [sp, #40]
    9fa4:	bl	2170 <Perl_sv_2iv_flags@plt>
    9fa8:	str	x0, [sp, #88]
    9fac:	ldr	x0, [sp, #88]
    9fb0:	add	x0, x0, #0x20
    9fb4:	bl	2720 <pthread_mutex_lock@plt>
    9fb8:	str	w0, [sp, #56]
    9fbc:	ldr	w0, [sp, #56]
    9fc0:	cmp	w0, #0x0
    9fc4:	b.eq	9fe4 <XS_threads_error+0x174>  // b.none
    9fc8:	mov	w3, #0x6e5                 	// #1765
    9fcc:	adrp	x0, a000 <XS_threads_error+0x190>
    9fd0:	add	x2, x0, #0x700
    9fd4:	ldr	w1, [sp, #56]
    9fd8:	adrp	x0, a000 <XS_threads_error+0x190>
    9fdc:	add	x0, x0, #0x778
    9fe0:	bl	2510 <Perl_croak_nocontext@plt>
    9fe4:	ldr	x0, [sp, #88]
    9fe8:	ldr	w0, [x0, #84]
    9fec:	and	w0, w0, #0x20
    9ff0:	cmp	w0, #0x0
    9ff4:	b.eq	a178 <XS_threads_error+0x308>  // b.none
    9ff8:	ldr	x0, [sp, #88]
    9ffc:	ldr	x0, [x0, #16]
    a000:	str	x0, [sp, #96]
    a004:	ldr	x1, [sp, #40]
    a008:	ldr	x0, [sp, #96]
    a00c:	bl	21f0 <Perl_clone_params_new@plt>
    a010:	str	x0, [sp, #104]
    a014:	ldr	x0, [sp, #104]
    a018:	ldr	x0, [x0, #8]
    a01c:	orr	x1, x0, #0x8
    a020:	ldr	x0, [sp, #104]
    a024:	str	x1, [x0, #8]
    a028:	ldr	x0, [sp, #40]
    a02c:	bl	2390 <Perl_ptr_table_new@plt>
    a030:	mov	x1, x0
    a034:	ldr	x0, [sp, #40]
    a038:	str	x1, [x0, #2712]
    a03c:	ldr	x0, [sp, #40]
    a040:	bl	2b30 <S_ithread_get>
    a044:	str	x0, [sp, #112]
    a048:	ldr	x1, [sp, #88]
    a04c:	ldr	x0, [sp, #40]
    a050:	bl	2ae4 <S_ithread_set>
    a054:	ldr	x0, [sp, #40]
    a058:	ldr	x1, [x0, #2712]
    a05c:	ldr	x0, [sp, #96]
    a060:	add	x2, x0, #0x150
    a064:	ldr	x0, [sp, #40]
    a068:	add	x0, x0, #0x150
    a06c:	mov	x3, x0
    a070:	ldr	x0, [sp, #40]
    a074:	bl	21b0 <Perl_ptr_table_store@plt>
    a078:	ldr	x0, [sp, #40]
    a07c:	ldr	x1, [x0, #2712]
    a080:	ldr	x0, [sp, #96]
    a084:	add	x2, x0, #0x168
    a088:	ldr	x0, [sp, #40]
    a08c:	add	x0, x0, #0x168
    a090:	mov	x3, x0
    a094:	ldr	x0, [sp, #40]
    a098:	bl	21b0 <Perl_ptr_table_store@plt>
    a09c:	ldr	x0, [sp, #40]
    a0a0:	ldr	x1, [x0, #2712]
    a0a4:	ldr	x0, [sp, #96]
    a0a8:	add	x2, x0, #0x138
    a0ac:	ldr	x0, [sp, #40]
    a0b0:	add	x0, x0, #0x138
    a0b4:	mov	x3, x0
    a0b8:	ldr	x0, [sp, #40]
    a0bc:	bl	21b0 <Perl_ptr_table_store@plt>
    a0c0:	ldr	x0, [sp, #40]
    a0c4:	ldr	x1, [x0, #2712]
    a0c8:	ldr	x0, [sp, #96]
    a0cc:	add	x2, x0, #0x180
    a0d0:	ldr	x0, [sp, #40]
    a0d4:	add	x0, x0, #0x180
    a0d8:	mov	x3, x0
    a0dc:	ldr	x0, [sp, #40]
    a0e0:	bl	21b0 <Perl_ptr_table_store@plt>
    a0e4:	ldr	x0, [sp, #88]
    a0e8:	ldr	x0, [x0, #128]
    a0ec:	ldr	x2, [sp, #104]
    a0f0:	mov	x1, x0
    a0f4:	ldr	x0, [sp, #40]
    a0f8:	bl	23f0 <Perl_sv_dup@plt>
    a0fc:	str	x0, [sp, #64]
    a100:	ldr	x1, [sp, #112]
    a104:	ldr	x0, [sp, #40]
    a108:	bl	2ae4 <S_ithread_set>
    a10c:	ldr	x0, [sp, #104]
    a110:	bl	2590 <Perl_clone_params_del@plt>
    a114:	ldr	x0, [sp, #64]
    a118:	str	x0, [sp, #120]
    a11c:	ldr	x0, [sp, #120]
    a120:	bl	294c <S_SvREFCNT_inc_void>
    a124:	ldr	x0, [sp, #88]
    a128:	ldr	x0, [x0, #136]
    a12c:	cmp	x0, #0x0
    a130:	b.eq	a15c <XS_threads_error+0x2ec>  // b.none
    a134:	ldr	x0, [sp, #88]
    a138:	ldr	x0, [x0, #136]
    a13c:	mov	w2, #0x1                   	// #1
    a140:	mov	x1, x0
    a144:	ldr	x0, [sp, #40]
    a148:	bl	24b0 <Perl_gv_stashpv@plt>
    a14c:	mov	x2, x0
    a150:	ldr	x1, [sp, #64]
    a154:	ldr	x0, [sp, #40]
    a158:	bl	2330 <Perl_sv_bless@plt>
    a15c:	ldr	x0, [sp, #40]
    a160:	ldr	x0, [x0, #2712]
    a164:	mov	x1, x0
    a168:	ldr	x0, [sp, #40]
    a16c:	bl	22c0 <Perl_ptr_table_free@plt>
    a170:	ldr	x0, [sp, #40]
    a174:	str	xzr, [x0, #2712]
    a178:	ldr	x0, [sp, #88]
    a17c:	add	x0, x0, #0x20
    a180:	bl	2730 <pthread_mutex_unlock@plt>
    a184:	str	w0, [sp, #60]
    a188:	ldr	w0, [sp, #60]
    a18c:	cmp	w0, #0x0
    a190:	b.eq	a1b0 <XS_threads_error+0x340>  // b.none
    a194:	mov	w3, #0x71f                 	// #1823
    a198:	adrp	x0, a000 <XS_threads_error+0x190>
    a19c:	add	x2, x0, #0x700
    a1a0:	ldr	w1, [sp, #60]
    a1a4:	adrp	x0, a000 <XS_threads_error+0x190>
    a1a8:	add	x0, x0, #0x750
    a1ac:	bl	2510 <Perl_croak_nocontext@plt>
    a1b0:	ldr	x0, [sp, #64]
    a1b4:	cmp	x0, #0x0
    a1b8:	b.ne	a210 <XS_threads_error+0x3a0>  // b.any
    a1bc:	ldr	x0, [sp, #40]
    a1c0:	ldr	x1, [x0, #24]
    a1c4:	ldrsw	x0, [sp, #48]
    a1c8:	lsl	x0, x0, #3
    a1cc:	add	x0, x1, x0
    a1d0:	ldr	x1, [sp, #40]
    a1d4:	add	x1, x1, #0x150
    a1d8:	str	x1, [x0]
    a1dc:	mov	x0, #0x1                   	// #1
    a1e0:	str	x0, [sp, #136]
    a1e4:	ldr	x0, [sp, #40]
    a1e8:	ldr	x1, [x0, #24]
    a1ec:	ldrsw	x2, [sp, #48]
    a1f0:	ldr	x0, [sp, #136]
    a1f4:	add	x0, x2, x0
    a1f8:	lsl	x0, x0, #3
    a1fc:	sub	x0, x0, #0x8
    a200:	add	x1, x1, x0
    a204:	ldr	x0, [sp, #40]
    a208:	str	x1, [x0]
    a20c:	b	a268 <XS_threads_error+0x3f8>
    a210:	ldr	x0, [sp, #40]
    a214:	ldr	x1, [x0, #24]
    a218:	ldrsw	x0, [sp, #48]
    a21c:	lsl	x0, x0, #3
    a220:	add	x19, x1, x0
    a224:	ldr	x1, [sp, #64]
    a228:	ldr	x0, [sp, #40]
    a22c:	bl	2550 <Perl_sv_2mortal@plt>
    a230:	str	x0, [x19]
    a234:	mov	x0, #0x1                   	// #1
    a238:	str	x0, [sp, #128]
    a23c:	ldr	x0, [sp, #40]
    a240:	ldr	x1, [x0, #24]
    a244:	ldrsw	x2, [sp, #48]
    a248:	ldr	x0, [sp, #128]
    a24c:	add	x0, x2, x0
    a250:	lsl	x0, x0, #3
    a254:	sub	x0, x0, #0x8
    a258:	add	x1, x1, x0
    a25c:	ldr	x0, [sp, #40]
    a260:	str	x1, [x0]
    a264:	nop
    a268:	ldr	x19, [sp, #16]
    a26c:	ldp	x29, x30, [sp], #144
    a270:	ret

000000000000a274 <boot_threads>:
    a274:	stp	x29, x30, [sp, #-112]!
    a278:	mov	x29, sp
    a27c:	str	x0, [sp, #24]
    a280:	str	x1, [sp, #16]
    a284:	adrp	x0, a000 <XS_threads_error+0x190>
    a288:	add	x4, x0, #0xd20
    a28c:	adrp	x0, a000 <XS_threads_error+0x190>
    a290:	add	x3, x0, #0xd28
    a294:	adrp	x0, a000 <XS_threads_error+0x190>
    a298:	add	x2, x0, #0xd30
    a29c:	ldr	x1, [sp, #24]
    a2a0:	mov	w0, #0x4e7                 	// #1255
    a2a4:	movk	w0, #0xd30, lsl #16
    a2a8:	bl	25a0 <Perl_xs_handshake@plt>
    a2ac:	str	w0, [sp, #40]
    a2b0:	ldr	x0, [sp, #24]
    a2b4:	ldr	x1, [x0, #24]
    a2b8:	ldrsw	x0, [sp, #40]
    a2bc:	lsl	x0, x0, #3
    a2c0:	add	x0, x1, x0
    a2c4:	str	x0, [sp, #64]
    a2c8:	ldr	x0, [sp, #24]
    a2cc:	ldr	x0, [x0]
    a2d0:	str	x0, [sp, #72]
    a2d4:	ldr	x1, [sp, #72]
    a2d8:	ldr	x0, [sp, #64]
    a2dc:	sub	x0, x1, x0
    a2e0:	asr	x0, x0, #3
    a2e4:	str	w0, [sp, #44]
    a2e8:	adrp	x0, a000 <XS_threads_error+0x190>
    a2ec:	add	x0, x0, #0xd30
    a2f0:	str	x0, [sp, #80]
    a2f4:	adrp	x0, 5000 <S_ithread_create+0x6dc>
    a2f8:	add	x2, x0, #0x1a4
    a2fc:	adrp	x0, a000 <XS_threads_error+0x190>
    a300:	add	x1, x0, #0xd40
    a304:	ldr	x0, [sp, #24]
    a308:	bl	2520 <Perl_newXS_deffile@plt>
    a30c:	adrp	x0, 6000 <XS_threads_create+0xe5c>
    a310:	add	x2, x0, #0x9f4
    a314:	adrp	x0, a000 <XS_threads_error+0x190>
    a318:	add	x1, x0, #0xd50
    a31c:	ldr	x0, [sp, #24]
    a320:	bl	2520 <Perl_newXS_deffile@plt>
    a324:	adrp	x0, 7000 <XS_threads_list+0x60c>
    a328:	add	x2, x0, #0x22c
    a32c:	adrp	x0, a000 <XS_threads_error+0x190>
    a330:	add	x1, x0, #0xd60
    a334:	ldr	x0, [sp, #24]
    a338:	bl	2520 <Perl_newXS_deffile@plt>
    a33c:	adrp	x0, 7000 <XS_threads_list+0x60c>
    a340:	add	x2, x0, #0x3e0
    a344:	adrp	x0, a000 <XS_threads_error+0x190>
    a348:	add	x1, x0, #0xd70
    a34c:	ldr	x0, [sp, #24]
    a350:	bl	2520 <Perl_newXS_deffile@plt>
    a354:	adrp	x0, 7000 <XS_threads_list+0x60c>
    a358:	add	x2, x0, #0x4e8
    a35c:	adrp	x0, a000 <XS_threads_error+0x190>
    a360:	add	x1, x0, #0xd80
    a364:	ldr	x0, [sp, #24]
    a368:	bl	2520 <Perl_newXS_deffile@plt>
    a36c:	adrp	x0, 7000 <XS_threads_list+0x60c>
    a370:	add	x2, x0, #0xbd8
    a374:	adrp	x0, a000 <XS_threads_error+0x190>
    a378:	add	x1, x0, #0xd90
    a37c:	ldr	x0, [sp, #24]
    a380:	bl	2520 <Perl_newXS_deffile@plt>
    a384:	adrp	x0, 7000 <XS_threads_list+0x60c>
    a388:	add	x2, x0, #0xc74
    a38c:	adrp	x0, a000 <XS_threads_error+0x190>
    a390:	add	x1, x0, #0xda0
    a394:	ldr	x0, [sp, #24]
    a398:	bl	2520 <Perl_newXS_deffile@plt>
    a39c:	adrp	x0, 7000 <XS_threads_list+0x60c>
    a3a0:	add	x2, x0, #0xfd0
    a3a4:	adrp	x0, a000 <XS_threads_error+0x190>
    a3a8:	add	x1, x0, #0xdb0
    a3ac:	ldr	x0, [sp, #24]
    a3b0:	bl	2520 <Perl_newXS_deffile@plt>
    a3b4:	adrp	x0, 8000 <XS_threads_kill+0x30>
    a3b8:	add	x2, x0, #0x41c
    a3bc:	adrp	x0, a000 <XS_threads_error+0x190>
    a3c0:	add	x1, x0, #0xdc0
    a3c4:	ldr	x0, [sp, #24]
    a3c8:	bl	2520 <Perl_newXS_deffile@plt>
    a3cc:	adrp	x0, 8000 <XS_threads_kill+0x30>
    a3d0:	add	x2, x0, #0x4e0
    a3d4:	adrp	x0, a000 <XS_threads_error+0x190>
    a3d8:	add	x1, x0, #0xdd8
    a3dc:	ldr	x0, [sp, #24]
    a3e0:	bl	2520 <Perl_newXS_deffile@plt>
    a3e4:	adrp	x0, 8000 <XS_threads_kill+0x30>
    a3e8:	add	x2, x0, #0x78c
    a3ec:	adrp	x0, a000 <XS_threads_error+0x190>
    a3f0:	add	x1, x0, #0xde8
    a3f4:	ldr	x0, [sp, #24]
    a3f8:	bl	2520 <Perl_newXS_deffile@plt>
    a3fc:	adrp	x0, 8000 <XS_threads_kill+0x30>
    a400:	add	x2, x0, #0xccc
    a404:	adrp	x0, a000 <XS_threads_error+0x190>
    a408:	add	x1, x0, #0xdf8
    a40c:	ldr	x0, [sp, #24]
    a410:	bl	2520 <Perl_newXS_deffile@plt>
    a414:	adrp	x0, 8000 <XS_threads_kill+0x30>
    a418:	add	x2, x0, #0xdd4
    a41c:	adrp	x0, a000 <XS_threads_error+0x190>
    a420:	add	x1, x0, #0xe10
    a424:	ldr	x0, [sp, #24]
    a428:	bl	2520 <Perl_newXS_deffile@plt>
    a42c:	adrp	x0, 8000 <XS_threads_kill+0x30>
    a430:	add	x2, x0, #0xff8
    a434:	adrp	x0, a000 <XS_threads_error+0x190>
    a438:	add	x1, x0, #0xe28
    a43c:	ldr	x0, [sp, #24]
    a440:	bl	2520 <Perl_newXS_deffile@plt>
    a444:	adrp	x0, 9000 <XS_threads_set_stack_size+0x8>
    a448:	add	x2, x0, #0x28c
    a44c:	adrp	x0, a000 <XS_threads_error+0x190>
    a450:	add	x1, x0, #0xe40
    a454:	ldr	x0, [sp, #24]
    a458:	bl	2520 <Perl_newXS_deffile@plt>
    a45c:	adrp	x0, 9000 <XS_threads_set_stack_size+0x8>
    a460:	add	x2, x0, #0x4ac
    a464:	adrp	x0, a000 <XS_threads_error+0x190>
    a468:	add	x1, x0, #0xe58
    a46c:	ldr	x0, [sp, #24]
    a470:	bl	2520 <Perl_newXS_deffile@plt>
    a474:	adrp	x0, 9000 <XS_threads_set_stack_size+0x8>
    a478:	add	x2, x0, #0x620
    a47c:	adrp	x0, a000 <XS_threads_error+0x190>
    a480:	add	x1, x0, #0xe70
    a484:	ldr	x0, [sp, #24]
    a488:	bl	2520 <Perl_newXS_deffile@plt>
    a48c:	adrp	x0, 9000 <XS_threads_set_stack_size+0x8>
    a490:	add	x2, x0, #0x854
    a494:	adrp	x0, a000 <XS_threads_error+0x190>
    a498:	add	x1, x0, #0xe88
    a49c:	ldr	x0, [sp, #24]
    a4a0:	bl	2520 <Perl_newXS_deffile@plt>
    a4a4:	adrp	x0, 9000 <XS_threads_set_stack_size+0x8>
    a4a8:	add	x2, x0, #0x978
    a4ac:	adrp	x0, a000 <XS_threads_error+0x190>
    a4b0:	add	x1, x0, #0xea0
    a4b4:	ldr	x0, [sp, #24]
    a4b8:	bl	2520 <Perl_newXS_deffile@plt>
    a4bc:	adrp	x0, 9000 <XS_threads_set_stack_size+0x8>
    a4c0:	add	x2, x0, #0xe70
    a4c4:	adrp	x0, a000 <XS_threads_error+0x190>
    a4c8:	add	x1, x0, #0xec0
    a4cc:	ldr	x0, [sp, #24]
    a4d0:	bl	2520 <Perl_newXS_deffile@plt>
    a4d4:	ldr	x0, [sp, #24]
    a4d8:	ldr	x1, [x0, #2032]
    a4dc:	mov	w6, #0x0                   	// #0
    a4e0:	mov	x5, #0x0                   	// #0
    a4e4:	mov	w4, #0x30                  	// #48
    a4e8:	mov	w3, #0x12                  	// #18
    a4ec:	adrp	x0, a000 <XS_threads_error+0x190>
    a4f0:	add	x2, x0, #0x738
    a4f4:	ldr	x0, [sp, #24]
    a4f8:	bl	2610 <Perl_hv_common_key_len@plt>
    a4fc:	ldr	x0, [x0]
    a500:	str	x0, [sp, #88]
    a504:	mov	x1, #0x177                 	// #375
    a508:	ldr	x0, [sp, #24]
    a50c:	bl	22a0 <Perl_newSV@plt>
    a510:	ldr	x0, [x0, #16]
    a514:	str	x0, [sp, #96]
    a518:	mov	x2, #0x8                   	// #8
    a51c:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    a520:	add	x1, x0, #0x308
    a524:	ldr	x0, [sp, #24]
    a528:	bl	2280 <Perl_my_cxt_init@plt>
    a52c:	str	x0, [sp, #104]
    a530:	mov	x2, #0x178                 	// #376
    a534:	mov	w1, #0x0                   	// #0
    a538:	ldr	x0, [sp, #96]
    a53c:	bl	2360 <memset@plt>
    a540:	ldr	x0, [sp, #96]
    a544:	mov	x2, x0
    a548:	ldr	x1, [sp, #88]
    a54c:	ldr	x0, [sp, #24]
    a550:	bl	2450 <Perl_sv_setuv@plt>
    a554:	ldr	x0, [sp, #24]
    a558:	mov	w1, #0x2                   	// #2
    a55c:	strb	w1, [x0, #2609]
    a560:	ldr	x0, [sp, #96]
    a564:	add	x0, x0, #0x110
    a568:	mov	x1, #0x0                   	// #0
    a56c:	bl	2440 <pthread_mutex_init@plt>
    a570:	str	w0, [sp, #48]
    a574:	ldr	w0, [sp, #48]
    a578:	cmp	w0, #0x0
    a57c:	b.eq	a59c <boot_threads+0x328>  // b.none
    a580:	mov	w3, #0x739                 	// #1849
    a584:	adrp	x0, a000 <XS_threads_error+0x190>
    a588:	add	x2, x0, #0x700
    a58c:	ldr	w1, [sp, #48]
    a590:	adrp	x0, a000 <XS_threads_error+0x190>
    a594:	add	x0, x0, #0x8d8
    a598:	bl	2510 <Perl_croak_nocontext@plt>
    a59c:	ldr	x0, [sp, #96]
    a5a0:	add	x0, x0, #0x110
    a5a4:	bl	2720 <pthread_mutex_lock@plt>
    a5a8:	str	w0, [sp, #52]
    a5ac:	ldr	w0, [sp, #52]
    a5b0:	cmp	w0, #0x0
    a5b4:	b.eq	a5d4 <boot_threads+0x360>  // b.none
    a5b8:	mov	w3, #0x73a                 	// #1850
    a5bc:	adrp	x0, a000 <XS_threads_error+0x190>
    a5c0:	add	x2, x0, #0x700
    a5c4:	ldr	w1, [sp, #52]
    a5c8:	adrp	x0, a000 <XS_threads_error+0x190>
    a5cc:	add	x0, x0, #0x778
    a5d0:	bl	2510 <Perl_croak_nocontext@plt>
    a5d4:	ldr	x0, [sp, #24]
    a5d8:	adrp	x1, 3000 <S_ithread_free+0x314>
    a5dc:	add	x1, x1, #0x250
    a5e0:	str	x1, [x0, #2880]
    a5e4:	ldr	x0, [sp, #96]
    a5e8:	mov	x1, #0x1                   	// #1
    a5ec:	str	x1, [x0, #320]
    a5f0:	ldr	x0, [sp, #96]
    a5f4:	add	x0, x0, #0x20
    a5f8:	mov	x1, #0x0                   	// #0
    a5fc:	bl	2440 <pthread_mutex_init@plt>
    a600:	str	w0, [sp, #56]
    a604:	ldr	w0, [sp, #56]
    a608:	cmp	w0, #0x0
    a60c:	b.eq	a62c <boot_threads+0x3b8>  // b.none
    a610:	mov	w3, #0x747                 	// #1863
    a614:	adrp	x0, a000 <XS_threads_error+0x190>
    a618:	add	x2, x0, #0x700
    a61c:	ldr	w1, [sp, #56]
    a620:	adrp	x0, a000 <XS_threads_error+0x190>
    a624:	add	x0, x0, #0x8d8
    a628:	bl	2510 <Perl_croak_nocontext@plt>
    a62c:	ldr	x1, [sp, #96]
    a630:	ldr	x0, [sp, #96]
    a634:	str	x1, [x0]
    a638:	ldr	x1, [sp, #96]
    a63c:	ldr	x0, [sp, #96]
    a640:	str	x1, [x0, #8]
    a644:	ldr	x0, [sp, #96]
    a648:	mov	w1, #0x1                   	// #1
    a64c:	str	w1, [x0, #80]
    a650:	ldr	x0, [sp, #96]
    a654:	ldr	x1, [sp, #24]
    a658:	str	x1, [x0, #16]
    a65c:	ldr	x0, [sp, #96]
    a660:	mov	w1, #0x1                   	// #1
    a664:	str	w1, [x0, #84]
    a668:	ldr	x0, [sp, #96]
    a66c:	ldr	x1, [x0, #360]
    a670:	ldr	x0, [sp, #96]
    a674:	str	x1, [x0, #120]
    a678:	bl	26a0 <pthread_self@plt>
    a67c:	mov	x1, x0
    a680:	ldr	x0, [sp, #96]
    a684:	str	x1, [x0, #112]
    a688:	ldr	x0, [sp, #96]
    a68c:	mov	x1, x0
    a690:	ldr	x0, [sp, #24]
    a694:	bl	2ae4 <S_ithread_set>
    a698:	ldr	x0, [sp, #96]
    a69c:	add	x0, x0, #0x110
    a6a0:	bl	2730 <pthread_mutex_unlock@plt>
    a6a4:	str	w0, [sp, #60]
    a6a8:	ldr	w0, [sp, #60]
    a6ac:	cmp	w0, #0x0
    a6b0:	b.eq	a6d0 <boot_threads+0x45c>  // b.none
    a6b4:	mov	w3, #0x759                 	// #1881
    a6b8:	adrp	x0, a000 <XS_threads_error+0x190>
    a6bc:	add	x2, x0, #0x700
    a6c0:	ldr	w1, [sp, #60]
    a6c4:	adrp	x0, a000 <XS_threads_error+0x190>
    a6c8:	add	x0, x0, #0x750
    a6cc:	bl	2510 <Perl_croak_nocontext@plt>
    a6d0:	ldr	w1, [sp, #40]
    a6d4:	ldr	x0, [sp, #24]
    a6d8:	bl	2380 <Perl_xs_boot_epilog@plt>
    a6dc:	nop
    a6e0:	ldp	x29, x30, [sp], #112
    a6e4:	ret

Disassembly of section .fini:

000000000000a6e8 <_fini>:
    a6e8:	stp	x29, x30, [sp, #-16]!
    a6ec:	mov	x29, sp
    a6f0:	ldp	x29, x30, [sp], #16
    a6f4:	ret
