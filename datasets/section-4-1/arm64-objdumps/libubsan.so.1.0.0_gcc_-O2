
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libubsan.so.1.0.0_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006318 <.init>:
    6318:	stp	x29, x30, [sp, #-16]!
    631c:	mov	x29, sp
    6320:	bl	6a40 <__asan_backtrace_open@plt+0x10>
    6324:	ldp	x29, x30, [sp], #16
    6328:	ret

Disassembly of section .plt:

0000000000006330 <_Unwind_Backtrace@plt-0x20>:
    6330:	stp	x16, x30, [sp, #-16]!
    6334:	adrp	x16, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    6338:	ldr	x17, [x16, #4088]
    633c:	add	x16, x16, #0xff8
    6340:	br	x17
    6344:	nop
    6348:	nop
    634c:	nop

0000000000006350 <_Unwind_Backtrace@plt>:
    6350:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6354:	ldr	x17, [x16]
    6358:	add	x16, x16, #0x0
    635c:	br	x17

0000000000006360 <__fxstat@plt>:
    6360:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6364:	ldr	x17, [x16, #8]
    6368:	add	x16, x16, #0x8
    636c:	br	x17

0000000000006370 <__sanitizer_report_error_summary@plt>:
    6370:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6374:	ldr	x17, [x16, #16]
    6378:	add	x16, x16, #0x10
    637c:	br	x17

0000000000006380 <OnPrint@plt>:
    6380:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6384:	ldr	x17, [x16, #24]
    6388:	add	x16, x16, #0x18
    638c:	br	x17

0000000000006390 <__asan_cplus_demangle_init_info@plt>:
    6390:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6394:	ldr	x17, [x16, #32]
    6398:	add	x16, x16, #0x20
    639c:	br	x17

00000000000063a0 <__asan_backtrace_qsort@plt>:
    63a0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    63a4:	ldr	x17, [x16, #40]
    63a8:	add	x16, x16, #0x28
    63ac:	br	x17

00000000000063b0 <readlink@plt>:
    63b0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    63b4:	ldr	x17, [x16, #48]
    63b8:	add	x16, x16, #0x30
    63bc:	br	x17

00000000000063c0 <shm_open@plt>:
    63c0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    63c4:	ldr	x17, [x16, #56]
    63c8:	add	x16, x16, #0x38
    63cc:	br	x17

00000000000063d0 <sched_getaffinity@plt>:
    63d0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    63d4:	ldr	x17, [x16, #64]
    63d8:	add	x16, x16, #0x40
    63dc:	br	x17

00000000000063e0 <__asan_backtrace_pcinfo@plt>:
    63e0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    63e4:	ldr	x17, [x16, #72]
    63e8:	add	x16, x16, #0x48
    63ec:	br	x17

00000000000063f0 <execv@plt>:
    63f0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    63f4:	ldr	x17, [x16, #80]
    63f8:	add	x16, x16, #0x50
    63fc:	br	x17

0000000000006400 <pipe@plt>:
    6400:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6404:	ldr	x17, [x16, #88]
    6408:	add	x16, x16, #0x58
    640c:	br	x17

0000000000006410 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6410:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6414:	ldr	x17, [x16, #96]
    6418:	add	x16, x16, #0x60
    641c:	br	x17

0000000000006420 <__asan_cplus_demangle_type@plt>:
    6420:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6424:	ldr	x17, [x16, #104]
    6428:	add	x16, x16, #0x68
    642c:	br	x17

0000000000006430 <__asan_backtrace_release_view@plt>:
    6430:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6434:	ldr	x17, [x16, #112]
    6438:	add	x16, x16, #0x70
    643c:	br	x17

0000000000006440 <__asan_backtrace_dwarf_add@plt>:
    6440:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6444:	ldr	x17, [x16, #120]
    6448:	add	x16, x16, #0x78
    644c:	br	x17

0000000000006450 <dlvsym@plt>:
    6450:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6454:	ldr	x17, [x16, #128]
    6458:	add	x16, x16, #0x80
    645c:	br	x17

0000000000006460 <pthread_getattr_np@plt>:
    6460:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6464:	ldr	x17, [x16, #136]
    6468:	add	x16, x16, #0x88
    646c:	br	x17

0000000000006470 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>:
    6470:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6474:	ldr	x17, [x16, #144]
    6478:	add	x16, x16, #0x90
    647c:	br	x17

0000000000006480 <__sanitizer_symbolize_demangle@plt>:
    6480:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6484:	ldr	x17, [x16, #152]
    6488:	add	x16, x16, #0x98
    648c:	br	x17

0000000000006490 <__asan_cplus_demangle_fill_name@plt>:
    6490:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6494:	ldr	x17, [x16, #160]
    6498:	add	x16, x16, #0xa0
    649c:	br	x17

00000000000064a0 <__asan_internal_memcpy@plt>:
    64a0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    64a4:	ldr	x17, [x16, #168]
    64a8:	add	x16, x16, #0xa8
    64ac:	br	x17

00000000000064b0 <__asan_internal_strlen@plt>:
    64b0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    64b4:	ldr	x17, [x16, #176]
    64b8:	add	x16, x16, #0xb0
    64bc:	br	x17

00000000000064c0 <open@plt>:
    64c0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    64c4:	ldr	x17, [x16, #184]
    64c8:	add	x16, x16, #0xb8
    64cc:	br	x17

00000000000064d0 <pthread_attr_init@plt>:
    64d0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    64d4:	ldr	x17, [x16, #192]
    64d8:	add	x16, x16, #0xc0
    64dc:	br	x17

00000000000064e0 <real_pthread_attr_getstack@plt>:
    64e0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    64e4:	ldr	x17, [x16, #200]
    64e8:	add	x16, x16, #0xc8
    64ec:	br	x17

00000000000064f0 <sleep@plt>:
    64f0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    64f4:	ldr	x17, [x16, #208]
    64f8:	add	x16, x16, #0xd0
    64fc:	br	x17

0000000000006500 <dlsym@plt>:
    6500:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6504:	ldr	x17, [x16, #216]
    6508:	add	x16, x16, #0xd8
    650c:	br	x17

0000000000006510 <__asan_backtrace_vector_grow@plt>:
    6510:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6514:	ldr	x17, [x16, #224]
    6518:	add	x16, x16, #0xe0
    651c:	br	x17

0000000000006520 <__asan_backtrace_syminfo@plt>:
    6520:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6524:	ldr	x17, [x16, #232]
    6528:	add	x16, x16, #0xe8
    652c:	br	x17

0000000000006530 <__asan_internal_memset@plt>:
    6530:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6534:	ldr	x17, [x16, #240]
    6538:	add	x16, x16, #0xf0
    653c:	br	x17

0000000000006540 <free@plt>:
    6540:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6544:	ldr	x17, [x16, #248]
    6548:	add	x16, x16, #0xf8
    654c:	br	x17

0000000000006550 <__sanitizer_symbolize_data@plt>:
    6550:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6554:	ldr	x17, [x16, #256]
    6558:	add	x16, x16, #0x100
    655c:	br	x17

0000000000006560 <isatty@plt>:
    6560:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6564:	ldr	x17, [x16, #264]
    6568:	add	x16, x16, #0x108
    656c:	br	x17

0000000000006570 <dlerror@plt>:
    6570:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6574:	ldr	x17, [x16, #272]
    6578:	add	x16, x16, #0x110
    657c:	br	x17

0000000000006580 <__cxa_finalize@plt>:
    6580:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6584:	ldr	x17, [x16, #280]
    6588:	add	x16, x16, #0x118
    658c:	br	x17

0000000000006590 <realloc@plt>:
    6590:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6594:	ldr	x17, [x16, #288]
    6598:	add	x16, x16, #0x120
    659c:	br	x17

00000000000065a0 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>:
    65a0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    65a4:	ldr	x17, [x16, #296]
    65a8:	add	x16, x16, #0x128
    65ac:	br	x17

00000000000065b0 <__asan_backtrace_alloc@plt>:
    65b0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    65b4:	ldr	x17, [x16, #304]
    65b8:	add	x16, x16, #0x130
    65bc:	br	x17

00000000000065c0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    65c0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    65c4:	ldr	x17, [x16, #312]
    65c8:	add	x16, x16, #0x138
    65cc:	br	x17

00000000000065d0 <getrusage@plt>:
    65d0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    65d4:	ldr	x17, [x16, #320]
    65d8:	add	x16, x16, #0x140
    65dc:	br	x17

00000000000065e0 <pthread_attr_destroy@plt>:
    65e0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    65e4:	ldr	x17, [x16, #328]
    65e8:	add	x16, x16, #0x148
    65ec:	br	x17

00000000000065f0 <sprintf@plt>:
    65f0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    65f4:	ldr	x17, [x16, #336]
    65f8:	add	x16, x16, #0x150
    65fc:	br	x17

0000000000006600 <__asan_backtrace_vector_release@plt>:
    6600:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6604:	ldr	x17, [x16, #344]
    6608:	add	x16, x16, #0x158
    660c:	br	x17

0000000000006610 <real_clock_gettime@plt>:
    6610:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6614:	ldr	x17, [x16, #352]
    6618:	add	x16, x16, #0x160
    661c:	br	x17

0000000000006620 <__cxa_demangle@plt>:
    6620:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6624:	ldr	x17, [x16, #360]
    6628:	add	x16, x16, #0x168
    662c:	br	x17

0000000000006630 <__sanitizer_symbolize_code@plt>:
    6630:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6634:	ldr	x17, [x16, #368]
    6638:	add	x16, x16, #0x170
    663c:	br	x17

0000000000006640 <dl_iterate_phdr@plt>:
    6640:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6644:	ldr	x17, [x16, #376]
    6648:	add	x16, x16, #0x178
    664c:	br	x17

0000000000006650 <__sanitizer_dump_coverage@plt>:
    6650:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16, #384]
    6658:	add	x16, x16, #0x180
    665c:	br	x17

0000000000006660 <clock_gettime@plt>:
    6660:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #392]
    6668:	add	x16, x16, #0x188
    666c:	br	x17

0000000000006670 <getpid@plt>:
    6670:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6674:	ldr	x17, [x16, #400]
    6678:	add	x16, x16, #0x190
    667c:	br	x17

0000000000006680 <__sanitizer_symbolize_flush@plt>:
    6680:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6684:	ldr	x17, [x16, #408]
    6688:	add	x16, x16, #0x198
    668c:	br	x17

0000000000006690 <__asan_backtrace_create_state@plt>:
    6690:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6694:	ldr	x17, [x16, #416]
    6698:	add	x16, x16, #0x1a0
    669c:	br	x17

00000000000066a0 <mmap@plt>:
    66a0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    66a4:	ldr	x17, [x16, #424]
    66a8:	add	x16, x16, #0x1a8
    66ac:	br	x17

00000000000066b0 <munmap@plt>:
    66b0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    66b4:	ldr	x17, [x16, #432]
    66b8:	add	x16, x16, #0x1b0
    66bc:	br	x17

00000000000066c0 <__asan_cplus_demangle_print_callback@plt>:
    66c0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    66c4:	ldr	x17, [x16, #440]
    66c8:	add	x16, x16, #0x1b8
    66cc:	br	x17

00000000000066d0 <__ubsan_on_report@plt>:
    66d0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    66d4:	ldr	x17, [x16, #448]
    66d8:	add	x16, x16, #0x1c0
    66dc:	br	x17

00000000000066e0 <__dynamic_cast@plt>:
    66e0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    66e4:	ldr	x17, [x16, #456]
    66e8:	add	x16, x16, #0x1c8
    66ec:	br	x17

00000000000066f0 <__cxa_atexit@plt>:
    66f0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    66f4:	ldr	x17, [x16, #464]
    66f8:	add	x16, x16, #0x1d0
    66fc:	br	x17

0000000000006700 <snprintf@plt>:
    6700:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6704:	ldr	x17, [x16, #472]
    6708:	add	x16, x16, #0x1d8
    670c:	br	x17

0000000000006710 <pthread_attr_getstack@plt>:
    6710:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6714:	ldr	x17, [x16, #480]
    6718:	add	x16, x16, #0x1e0
    671c:	br	x17

0000000000006720 <pthread_attr_setstacksize@plt>:
    6720:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6724:	ldr	x17, [x16, #488]
    6728:	add	x16, x16, #0x1e8
    672c:	br	x17

0000000000006730 <_Unwind_GetIP@plt>:
    6730:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6734:	ldr	x17, [x16, #496]
    6738:	add	x16, x16, #0x1f0
    673c:	br	x17

0000000000006740 <madvise@plt>:
    6740:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6744:	ldr	x17, [x16, #504]
    6748:	add	x16, x16, #0x1f8
    674c:	br	x17

0000000000006750 <usleep@plt>:
    6750:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6754:	ldr	x17, [x16, #512]
    6758:	add	x16, x16, #0x200
    675c:	br	x17

0000000000006760 <shm_unlink@plt>:
    6760:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6764:	ldr	x17, [x16, #520]
    6768:	add	x16, x16, #0x208
    676c:	br	x17

0000000000006770 <__sched_cpucount@plt>:
    6770:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6774:	ldr	x17, [x16, #528]
    6778:	add	x16, x16, #0x210
    677c:	br	x17

0000000000006780 <strrchr@plt>:
    6780:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6784:	ldr	x17, [x16, #536]
    6788:	add	x16, x16, #0x218
    678c:	br	x17

0000000000006790 <__errno_location@plt>:
    6790:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6794:	ldr	x17, [x16, #544]
    6798:	add	x16, x16, #0x220
    679c:	br	x17

00000000000067a0 <sched_yield@plt>:
    67a0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    67a4:	ldr	x17, [x16, #552]
    67a8:	add	x16, x16, #0x228
    67ac:	br	x17

00000000000067b0 <__asan_backtrace_get_view@plt>:
    67b0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    67b4:	ldr	x17, [x16, #560]
    67b8:	add	x16, x16, #0x230
    67bc:	br	x17

00000000000067c0 <syslog@plt>:
    67c0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    67c4:	ldr	x17, [x16, #568]
    67c8:	add	x16, x16, #0x238
    67cc:	br	x17

00000000000067d0 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    67d0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    67d4:	ldr	x17, [x16, #576]
    67d8:	add	x16, x16, #0x240
    67dc:	br	x17

00000000000067e0 <__asan_cplus_demangle_fill_extended_operator@plt>:
    67e0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    67e4:	ldr	x17, [x16, #584]
    67e8:	add	x16, x16, #0x248
    67ec:	br	x17

00000000000067f0 <__asan_internal_strcmp@plt>:
    67f0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    67f4:	ldr	x17, [x16, #592]
    67f8:	add	x16, x16, #0x250
    67fc:	br	x17

0000000000006800 <__asan_internal_strnlen@plt>:
    6800:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6804:	ldr	x17, [x16, #600]
    6808:	add	x16, x16, #0x258
    680c:	br	x17

0000000000006810 <close@plt>:
    6810:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6814:	ldr	x17, [x16, #608]
    6818:	add	x16, x16, #0x260
    681c:	br	x17

0000000000006820 <__extenddftf2@plt>:
    6820:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6824:	ldr	x17, [x16, #616]
    6828:	add	x16, x16, #0x268
    682c:	br	x17

0000000000006830 <__asan_internal_strncmp@plt>:
    6830:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6834:	ldr	x17, [x16, #624]
    6838:	add	x16, x16, #0x270
    683c:	br	x17

0000000000006840 <__ubsan_handle_cfi_bad_type@plt>:
    6840:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6844:	ldr	x17, [x16, #632]
    6848:	add	x16, x16, #0x278
    684c:	br	x17

0000000000006850 <__asan_cplus_demangle_fill_ctor@plt>:
    6850:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6854:	ldr	x17, [x16, #640]
    6858:	add	x16, x16, #0x280
    685c:	br	x17

0000000000006860 <setrlimit@plt>:
    6860:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6864:	ldr	x17, [x16, #648]
    6868:	add	x16, x16, #0x288
    686c:	br	x17

0000000000006870 <getauxval@plt>:
    6870:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6874:	ldr	x17, [x16, #656]
    6878:	add	x16, x16, #0x290
    687c:	br	x17

0000000000006880 <malloc@plt>:
    6880:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6884:	ldr	x17, [x16, #664]
    6888:	add	x16, x16, #0x298
    688c:	br	x17

0000000000006890 <__asan_backtrace_free@plt>:
    6890:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16, #672]
    6898:	add	x16, x16, #0x2a0
    689c:	br	x17

00000000000068a0 <__lxstat@plt>:
    68a0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #680]
    68a8:	add	x16, x16, #0x2a8
    68ac:	br	x17

00000000000068b0 <abort@plt>:
    68b0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #688]
    68b8:	add	x16, x16, #0x2b0
    68bc:	br	x17

00000000000068c0 <getenv@plt>:
    68c0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #696]
    68c8:	add	x16, x16, #0x2b8
    68cc:	br	x17

00000000000068d0 <__asan_backtrace_initialize@plt>:
    68d0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #704]
    68d8:	add	x16, x16, #0x2c0
    68dc:	br	x17

00000000000068e0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    68e0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #712]
    68e8:	add	x16, x16, #0x2c8
    68ec:	br	x17

00000000000068f0 <__asan_internal_memcmp@plt>:
    68f0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #720]
    68f8:	add	x16, x16, #0x2d0
    68fc:	br	x17

0000000000006900 <sysconf@plt>:
    6900:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #728]
    6908:	add	x16, x16, #0x2d8
    690c:	br	x17

0000000000006910 <__extendsftf2@plt>:
    6910:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #736]
    6918:	add	x16, x16, #0x2e0
    691c:	br	x17

0000000000006920 <pthread_self@plt>:
    6920:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #744]
    6928:	add	x16, x16, #0x2e8
    692c:	br	x17

0000000000006930 <getuid@plt>:
    6930:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #752]
    6938:	add	x16, x16, #0x2f0
    693c:	br	x17

0000000000006940 <getpagesize@plt>:
    6940:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #760]
    6948:	add	x16, x16, #0x2f8
    694c:	br	x17

0000000000006950 <__asan_backtrace_vector_finish@plt>:
    6950:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #768]
    6958:	add	x16, x16, #0x300
    695c:	br	x17

0000000000006960 <__asan_backtrace_close@plt>:
    6960:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #776]
    6968:	add	x16, x16, #0x308
    696c:	br	x17

0000000000006970 <__asan_cplus_demangle_mangled_name@plt>:
    6970:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #784]
    6978:	add	x16, x16, #0x310
    697c:	br	x17

0000000000006980 <__ubsan_default_options@plt>:
    6980:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #792]
    6988:	add	x16, x16, #0x318
    698c:	br	x17

0000000000006990 <getrlimit@plt>:
    6990:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #800]
    6998:	add	x16, x16, #0x320
    699c:	br	x17

00000000000069a0 <sigaltstack@plt>:
    69a0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #808]
    69a8:	add	x16, x16, #0x328
    69ac:	br	x17

00000000000069b0 <fcntl@plt>:
    69b0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #816]
    69b8:	add	x16, x16, #0x330
    69bc:	br	x17

00000000000069c0 <__gmon_start__@plt>:
    69c0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #824]
    69c8:	add	x16, x16, #0x338
    69cc:	br	x17

00000000000069d0 <sigaction@plt>:
    69d0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #832]
    69d8:	add	x16, x16, #0x340
    69dc:	br	x17

00000000000069e0 <__sanitizer_set_report_path@plt>:
    69e0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #840]
    69e8:	add	x16, x16, #0x348
    69ec:	br	x17

00000000000069f0 <__asan_cplus_demangle_v3_callback@plt>:
    69f0:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #848]
    69f8:	add	x16, x16, #0x350
    69fc:	br	x17

0000000000006a00 <__sanitizer_print_memory_profile@plt>:
    6a00:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #856]
    6a08:	add	x16, x16, #0x358
    6a0c:	br	x17

0000000000006a10 <__asan_cplus_demangle_fill_dtor@plt>:
    6a10:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #864]
    6a18:	add	x16, x16, #0x360
    6a1c:	br	x17

0000000000006a20 <__sancov_default_options@plt>:
    6a20:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #872]
    6a28:	add	x16, x16, #0x368
    6a2c:	br	x17

0000000000006a30 <__asan_backtrace_open@plt>:
    6a30:	adrp	x16, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #880]
    6a38:	add	x16, x16, #0x370
    6a3c:	br	x17

Disassembly of section .text:

0000000000006a40 <__ubsan_default_options@@Base-0x16c8>:
    6a40:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    6a44:	ldr	x0, [x0, #4032]
    6a48:	cbz	x0, 6a50 <__asan_backtrace_open@plt+0x20>
    6a4c:	b	69c0 <__gmon_start__@plt>
    6a50:	ret
    6a54:	nop
    6a58:	adrp	x0, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6a5c:	add	x0, x0, #0xd68
    6a60:	adrp	x1, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6a64:	add	x1, x1, #0xd68
    6a68:	cmp	x1, x0
    6a6c:	b.eq	6a84 <__asan_backtrace_open@plt+0x54>  // b.none
    6a70:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    6a74:	ldr	x1, [x1, #4000]
    6a78:	cbz	x1, 6a84 <__asan_backtrace_open@plt+0x54>
    6a7c:	mov	x16, x1
    6a80:	br	x16
    6a84:	ret
    6a88:	adrp	x0, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6a8c:	add	x0, x0, #0xd68
    6a90:	adrp	x1, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6a94:	add	x1, x1, #0xd68
    6a98:	sub	x1, x1, x0
    6a9c:	lsr	x2, x1, #63
    6aa0:	add	x1, x2, x1, asr #3
    6aa4:	cmp	xzr, x1, asr #1
    6aa8:	asr	x1, x1, #1
    6aac:	b.eq	6ac4 <__asan_backtrace_open@plt+0x94>  // b.none
    6ab0:	adrp	x2, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    6ab4:	ldr	x2, [x2, #4040]
    6ab8:	cbz	x2, 6ac4 <__asan_backtrace_open@plt+0x94>
    6abc:	mov	x16, x2
    6ac0:	br	x16
    6ac4:	ret
    6ac8:	stp	x29, x30, [sp, #-32]!
    6acc:	mov	x29, sp
    6ad0:	str	x19, [sp, #16]
    6ad4:	adrp	x19, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    6ad8:	ldrb	w0, [x19, #3456]
    6adc:	cbnz	w0, 6b04 <__asan_backtrace_open@plt+0xd4>
    6ae0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    6ae4:	ldr	x0, [x0, #3864]
    6ae8:	cbz	x0, 6af8 <__asan_backtrace_open@plt+0xc8>
    6aec:	adrp	x0, 5b000 <_Unwind_Backtrace@GCC_3.3>
    6af0:	ldr	x0, [x0, #888]
    6af4:	bl	6580 <__cxa_finalize@plt>
    6af8:	bl	6a58 <__asan_backtrace_open@plt+0x28>
    6afc:	mov	w0, #0x1                   	// #1
    6b00:	strb	w0, [x19, #3456]
    6b04:	ldr	x19, [sp, #16]
    6b08:	ldp	x29, x30, [sp], #32
    6b0c:	ret
    6b10:	b	6a88 <__asan_backtrace_open@plt+0x58>
    6b14:	nop
    6b18:	cmp	w0, #0x19
    6b1c:	b.ls	6b44 <__asan_backtrace_open@plt+0x114>  // b.plast
    6b20:	str	x30, [sp, #-16]!
    6b24:	adrp	x2, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6b28:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6b2c:	add	x2, x2, #0xfe8
    6b30:	add	x0, x0, #0x10
    6b34:	mov	x4, #0x0                   	// #0
    6b38:	mov	x3, #0x0                   	// #0
    6b3c:	mov	w1, #0x39                  	// #57
    6b40:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    6b44:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6b48:	add	x1, x1, #0x330
    6b4c:	ldrb	w0, [x1, w0, uxtw]
    6b50:	adr	x1, 6b5c <__asan_backtrace_open@plt+0x12c>
    6b54:	add	x0, x1, w0, sxtb #2
    6b58:	br	x0
    6b5c:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6b60:	add	x0, x0, #0xd80
    6b64:	ret
    6b68:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6b6c:	add	x0, x0, #0xfd0
    6b70:	ret
    6b74:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6b78:	add	x0, x0, #0xf28
    6b7c:	ret
    6b80:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6b84:	add	x0, x0, #0xf10
    6b88:	ret
    6b8c:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6b90:	add	x0, x0, #0xf00
    6b94:	ret
    6b98:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6b9c:	add	x0, x0, #0xee8
    6ba0:	ret
    6ba4:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6ba8:	add	x0, x0, #0xed0
    6bac:	ret
    6bb0:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6bb4:	add	x0, x0, #0xeb8
    6bb8:	ret
    6bbc:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6bc0:	add	x0, x0, #0xea0
    6bc4:	ret
    6bc8:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6bcc:	add	x0, x0, #0xfa0
    6bd0:	ret
    6bd4:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6bd8:	add	x0, x0, #0xf40
    6bdc:	ret
    6be0:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6be4:	add	x0, x0, #0xdb0
    6be8:	ret
    6bec:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6bf0:	add	x0, x0, #0xde8
    6bf4:	ret
    6bf8:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6bfc:	add	x0, x0, #0xdd0
    6c00:	ret
    6c04:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c08:	add	x0, x0, #0xe50
    6c0c:	ret
    6c10:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c14:	add	x0, x0, #0xe38
    6c18:	ret
    6c1c:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c20:	add	x0, x0, #0xe20
    6c24:	ret
    6c28:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c2c:	add	x0, x0, #0xe08
    6c30:	ret
    6c34:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c38:	add	x0, x0, #0xf88
    6c3c:	ret
    6c40:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c44:	add	x0, x0, #0xf70
    6c48:	ret
    6c4c:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c50:	add	x0, x0, #0xf58
    6c54:	ret
    6c58:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c5c:	add	x0, x0, #0xd58
    6c60:	ret
    6c64:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c68:	add	x0, x0, #0xfb8
    6c6c:	ret
    6c70:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c74:	add	x0, x0, #0xd68
    6c78:	ret
    6c7c:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c80:	add	x0, x0, #0xd98
    6c84:	ret
    6c88:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
    6c8c:	add	x0, x0, #0xe78
    6c90:	ret
    6c94:	nop
    6c98:	cbz	w2, 6d84 <__asan_backtrace_open@plt+0x354>
    6c9c:	sub	w2, w2, #0x1
    6ca0:	add	x3, x1, #0x58
    6ca4:	mov	w5, #0x58                  	// #88
    6ca8:	mov	x4, #0x0                   	// #0
    6cac:	str	x30, [sp, #-16]!
    6cb0:	umaddl	x2, w2, w5, x3
    6cb4:	b	6cec <__asan_backtrace_open@plt+0x2bc>
    6cb8:	ldr	w3, [x4]
    6cbc:	ldr	x5, [x4, #24]
    6cc0:	cmp	w3, #0x2
    6cc4:	b.ne	6d44 <__asan_backtrace_open@plt+0x314>  // b.any
    6cc8:	ldr	w3, [x1]
    6ccc:	ldr	x6, [x1, #24]
    6cd0:	cmp	w3, #0x2
    6cd4:	b.ne	6d64 <__asan_backtrace_open@plt+0x334>  // b.any
    6cd8:	cmp	x5, x6
    6cdc:	csel	x4, x4, x1, ls  // ls = plast
    6ce0:	add	x1, x1, #0x58
    6ce4:	cmp	x1, x2
    6ce8:	b.eq	6d18 <__asan_backtrace_open@plt+0x2e8>  // b.none
    6cec:	ldr	w3, [x1, #40]
    6cf0:	ldr	x5, [x1, #64]
    6cf4:	cmp	w3, #0x2
    6cf8:	b.ne	6d24 <__asan_backtrace_open@plt+0x2f4>  // b.any
    6cfc:	cmp	x5, x0
    6d00:	b.ls	6ce0 <__asan_backtrace_open@plt+0x2b0>  // b.plast
    6d04:	cbnz	x4, 6cb8 <__asan_backtrace_open@plt+0x288>
    6d08:	mov	x4, x1
    6d0c:	add	x1, x1, #0x58
    6d10:	cmp	x1, x2
    6d14:	b.ne	6cec <__asan_backtrace_open@plt+0x2bc>  // b.any
    6d18:	mov	x0, x4
    6d1c:	ldr	x30, [sp], #16
    6d20:	ret
    6d24:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6d28:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6d2c:	add	x2, x2, #0x40
    6d30:	add	x0, x0, #0x60
    6d34:	mov	x4, #0x0                   	// #0
    6d38:	mov	x3, #0x0                   	// #0
    6d3c:	mov	w1, #0x55                  	// #85
    6d40:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    6d44:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6d48:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6d4c:	add	x2, x2, #0x40
    6d50:	add	x0, x0, #0x60
    6d54:	mov	x4, #0x0                   	// #0
    6d58:	mov	x3, #0x0                   	// #0
    6d5c:	mov	w1, #0x55                  	// #85
    6d60:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    6d64:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6d68:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6d6c:	add	x2, x2, #0x40
    6d70:	add	x0, x0, #0x60
    6d74:	mov	x4, #0x0                   	// #0
    6d78:	mov	x3, #0x0                   	// #0
    6d7c:	mov	w1, #0x55                  	// #85
    6d80:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    6d84:	mov	x4, #0x0                   	// #0
    6d88:	mov	x0, x4
    6d8c:	ret
    6d90:	stp	x19, x20, [sp, #-112]!
    6d94:	mov	x20, x2
    6d98:	str	x30, [sp, #64]
    6d9c:	ldrb	w2, [x1]
    6da0:	cbz	w2, 6e4c <__asan_backtrace_open@plt+0x41c>
    6da4:	mov	x19, x1
    6da8:	stp	x21, x22, [sp, #16]
    6dac:	adrp	x22, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6db0:	mov	x21, x0
    6db4:	add	x22, x22, #0xb0
    6db8:	stp	x23, x24, [sp, #32]
    6dbc:	adrp	x23, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6dc0:	add	x24, sp, #0x50
    6dc4:	add	x23, x23, #0xa8
    6dc8:	stp	x25, x26, [sp, #48]
    6dcc:	nop
    6dd0:	cmp	w2, #0x25
    6dd4:	add	x25, x19, #0x1
    6dd8:	b.ne	6e9c <__asan_backtrace_open@plt+0x46c>  // b.any
    6ddc:	ldrb	w3, [x19, #1]
    6de0:	add	x19, x19, #0x2
    6de4:	ubfiz	x3, x3, #5, #8
    6de8:	sub	x3, x3, #0x600
    6dec:	add	x26, x20, x3
    6df0:	ldr	w3, [x20, x3]
    6df4:	cmp	w3, #0x3
    6df8:	b.eq	6ee0 <__asan_backtrace_open@plt+0x4b0>  // b.none
    6dfc:	b.hi	6e74 <__asan_backtrace_open@plt+0x444>  // b.pmore
    6e00:	cmp	w3, #0x1
    6e04:	b.eq	6ebc <__asan_backtrace_open@plt+0x48c>  // b.none
    6e08:	cmp	w3, #0x2
    6e0c:	b.ne	6e58 <__asan_backtrace_open@plt+0x428>  // b.any
    6e10:	ldp	x2, x0, [x26, #16]
    6e14:	cbz	x0, 6f30 <__asan_backtrace_open@plt+0x500>
    6e18:	mov	w5, w2
    6e1c:	lsr	x4, x2, #32
    6e20:	mov	w3, w0
    6e24:	lsr	x2, x0, #32
    6e28:	mov	x1, x22
    6e2c:	mov	x0, x21
    6e30:	bl	1a3b0 <OnPrint@@Base+0x420>
    6e34:	nop
    6e38:	ldrb	w2, [x25, #1]
    6e3c:	cbnz	w2, 6dd0 <__asan_backtrace_open@plt+0x3a0>
    6e40:	ldp	x21, x22, [sp, #16]
    6e44:	ldp	x23, x24, [sp, #32]
    6e48:	ldp	x25, x26, [sp, #48]
    6e4c:	ldr	x30, [sp, #64]
    6e50:	ldp	x19, x20, [sp], #112
    6e54:	ret
    6e58:	cbnz	w3, 6e38 <__asan_backtrace_open@plt+0x408>
    6e5c:	ldr	x2, [x26, #16]
    6e60:	mov	x0, x21
    6e64:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6e68:	add	x1, x1, #0x98
    6e6c:	bl	1a3b0 <OnPrint@@Base+0x420>
    6e70:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6e74:	cmp	w3, #0x4
    6e78:	b.eq	6f00 <__asan_backtrace_open@plt+0x4d0>  // b.none
    6e7c:	cmp	w3, #0x5
    6e80:	b.ne	6e38 <__asan_backtrace_open@plt+0x408>  // b.any
    6e84:	ldr	x2, [x26, #16]
    6e88:	mov	x0, x21
    6e8c:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6e90:	add	x1, x1, #0xd8
    6e94:	bl	1a3b0 <OnPrint@@Base+0x420>
    6e98:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6e9c:	mov	x0, x21
    6ea0:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6ea4:	add	x1, x1, #0x90
    6ea8:	bl	1a3b0 <OnPrint@@Base+0x420>
    6eac:	mov	x0, x25
    6eb0:	mov	x25, x19
    6eb4:	mov	x19, x0
    6eb8:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6ebc:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
    6ec0:	ldr	x1, [x26, #16]
    6ec4:	bl	20cf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4430>
    6ec8:	mov	x2, x0
    6ecc:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6ed0:	mov	x0, x21
    6ed4:	add	x1, x1, #0xa0
    6ed8:	bl	1a3b0 <OnPrint@@Base+0x420>
    6edc:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6ee0:	ldp	x2, x0, [x26, #16]
    6ee4:	cmp	x2, #0x0
    6ee8:	cinc	x1, x0, lt  // lt = tstop
    6eec:	cbnz	x1, 6e18 <__asan_backtrace_open@plt+0x3e8>
    6ef0:	mov	x1, x23
    6ef4:	mov	x0, x21
    6ef8:	bl	1a3b0 <OnPrint@@Base+0x420>
    6efc:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f00:	ldr	q0, [x26, #16]
    6f04:	mov	x0, x24
    6f08:	mov	x1, #0x20                  	// #32
    6f0c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6f10:	add	x2, x2, #0xd0
    6f14:	bl	6700 <snprintf@plt>
    6f18:	mov	x2, x24
    6f1c:	mov	x0, x21
    6f20:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6f24:	add	x1, x1, #0x98
    6f28:	bl	1a3b0 <OnPrint@@Base+0x420>
    6f2c:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f30:	mov	x0, x21
    6f34:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    6f38:	add	x1, x1, #0xc8
    6f3c:	bl	1a3b0 <OnPrint@@Base+0x420>
    6f40:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f44:	nop
    6f48:	stp	x19, x20, [sp, #-80]!
    6f4c:	mov	x19, x0
    6f50:	mov	x20, x1
    6f54:	stp	x21, x24, [sp, #16]
    6f58:	mov	x21, x2
    6f5c:	ands	w24, w5, #0xff
    6f60:	str	x30, [sp, #32]
    6f64:	stp	xzr, xzr, [sp, #64]
    6f68:	b.ne	6f98 <__asan_backtrace_open@plt+0x568>  // b.any
    6f6c:	mov	x6, #0x0                   	// #0
    6f70:	mov	x5, #0x0                   	// #0
    6f74:	mov	w7, w24
    6f78:	mov	x2, x21
    6f7c:	mov	w1, w20
    6f80:	mov	x0, x19
    6f84:	bl	1c3a8 <OnPrint@@Base+0x2418>
    6f88:	ldp	x21, x24, [sp, #16]
    6f8c:	ldr	x30, [sp, #32]
    6f90:	ldp	x19, x20, [sp], #80
    6f94:	ret
    6f98:	add	x2, sp, #0x48
    6f9c:	add	x1, sp, #0x40
    6fa0:	mov	w0, #0x0                   	// #0
    6fa4:	stp	x3, x4, [sp, #48]
    6fa8:	bl	17160 <__sanitizer_set_report_fd@@Base+0x4240>
    6fac:	ldp	x3, x4, [sp, #48]
    6fb0:	ldp	x5, x6, [sp, #64]
    6fb4:	b	6f74 <__asan_backtrace_open@plt+0x544>
    6fb8:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    6fbc:	ldr	x4, [x4, #3816]
    6fc0:	ldrb	w2, [x4, #1]
    6fc4:	cbnz	w2, 6fcc <__asan_backtrace_open@plt+0x59c>
    6fc8:	ret
    6fcc:	adrp	x5, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    6fd0:	sub	sp, sp, #0x830
    6fd4:	add	x6, sp, #0x28
    6fd8:	mov	x3, x1
    6fdc:	ldr	x5, [x5, #4056]
    6fe0:	mov	x2, x0
    6fe4:	mov	x4, #0x0                   	// #0
    6fe8:	mov	x1, #0x100                 	// #256
    6fec:	stp	x19, x30, [sp]
    6ff0:	add	x19, sp, #0x18
    6ff4:	ldrb	w5, [x5, #33]
    6ff8:	mov	x0, x19
    6ffc:	stp	x6, xzr, [sp, #24]
    7000:	str	xzr, [sp, #2088]
    7004:	bl	6f48 <__asan_backtrace_open@plt+0x518>
    7008:	mov	x0, x19
    700c:	bl	1bf40 <OnPrint@@Base+0x1fb0>
    7010:	ldp	x19, x30, [sp]
    7014:	add	sp, sp, #0x830
    7018:	ret
    701c:	nop
    7020:	stp	x19, x30, [sp, #-16]!
    7024:	mov	x19, x0
    7028:	bl	bcc0 <__ubsan_handle_cfi_bad_type@@Base+0x4a8>
    702c:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
    7030:	mov	x1, x19
    7034:	ldp	x19, x30, [sp], #16
    7038:	b	20f78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
    703c:	nop
    7040:	ldr	w3, [x0, #320]
    7044:	cmp	w3, #0x8
    7048:	b.eq	7070 <__asan_backtrace_open@plt+0x640>  // b.none
    704c:	ubfiz	x4, x3, #5, #32
    7050:	add	w3, w3, #0x1
    7054:	add	x4, x4, #0x40
    7058:	str	w3, [x0, #320]
    705c:	add	x3, x0, x4
    7060:	add	x1, x1, #0x4
    7064:	str	wzr, [x0, x4]
    7068:	str	x1, [x3, #16]
    706c:	ret
    7070:	str	x30, [sp, #-16]!
    7074:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7078:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    707c:	add	x2, x2, #0xe0
    7080:	add	x0, x0, #0x60
    7084:	mov	x4, #0x0                   	// #0
    7088:	mov	x3, #0x0                   	// #0
    708c:	mov	w1, #0xbf                  	// #191
    7090:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7094:	nop
    7098:	stp	x19, x30, [sp, #-16]!
    709c:	mov	x19, x0
    70a0:	ldr	x0, [x1]
    70a4:	ldrh	w2, [x0]
    70a8:	cbz	w2, 70f4 <__asan_backtrace_open@plt+0x6c4>
    70ac:	cmp	w2, #0x1
    70b0:	b.ne	717c <__asan_backtrace_open@plt+0x74c>  // b.any
    70b4:	mov	x0, x1
    70b8:	bl	c678 <__ubsan_get_current_report_data@@Base+0x720>
    70bc:	ldr	w0, [x19, #320]
    70c0:	cmp	w0, #0x8
    70c4:	b.eq	71b8 <__asan_backtrace_open@plt+0x788>  // b.none
    70c8:	ubfiz	x1, x0, #5, #32
    70cc:	add	w0, w0, #0x1
    70d0:	add	x1, x1, #0x40
    70d4:	str	w0, [x19, #320]
    70d8:	add	x0, x19, x1
    70dc:	mov	w2, #0x4                   	// #4
    70e0:	str	w2, [x19, x1]
    70e4:	str	q0, [x0, #16]
    70e8:	mov	x0, x19
    70ec:	ldp	x19, x30, [sp], #16
    70f0:	ret
    70f4:	ldrh	w0, [x0, #2]
    70f8:	tbz	w0, #0, 713c <__asan_backtrace_open@plt+0x70c>
    70fc:	mov	x0, x1
    7100:	bl	c4a0 <__ubsan_get_current_report_data@@Base+0x548>
    7104:	ldr	w2, [x19, #320]
    7108:	cmp	w2, #0x8
    710c:	b.eq	71b8 <__asan_backtrace_open@plt+0x788>  // b.none
    7110:	ubfiz	x3, x2, #5, #32
    7114:	add	w2, w2, #0x1
    7118:	add	x3, x3, #0x40
    711c:	str	w2, [x19, #320]
    7120:	add	x2, x19, x3
    7124:	mov	w4, #0x3                   	// #3
    7128:	str	w4, [x19, x3]
    712c:	stp	x0, x1, [x2, #16]
    7130:	mov	x0, x19
    7134:	ldp	x19, x30, [sp], #16
    7138:	ret
    713c:	mov	x0, x1
    7140:	bl	c588 <__ubsan_get_current_report_data@@Base+0x630>
    7144:	ldr	w2, [x19, #320]
    7148:	cmp	w2, #0x8
    714c:	b.eq	71b8 <__asan_backtrace_open@plt+0x788>  // b.none
    7150:	ubfiz	x3, x2, #5, #32
    7154:	add	w2, w2, #0x1
    7158:	add	x3, x3, #0x40
    715c:	str	w2, [x19, #320]
    7160:	add	x2, x19, x3
    7164:	mov	w4, #0x2                   	// #2
    7168:	str	w4, [x19, x3]
    716c:	stp	x0, x1, [x2, #16]
    7170:	mov	x0, x19
    7174:	ldp	x19, x30, [sp], #16
    7178:	ret
    717c:	ldr	w0, [x19, #320]
    7180:	cmp	w0, #0x8
    7184:	b.eq	71b8 <__asan_backtrace_open@plt+0x788>  // b.none
    7188:	ubfiz	x1, x0, #5, #32
    718c:	add	w0, w0, #0x1
    7190:	add	x1, x1, #0x40
    7194:	str	w0, [x19, #320]
    7198:	add	x2, x19, x1
    719c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    71a0:	add	x0, x0, #0x100
    71a4:	str	wzr, [x19, x1]
    71a8:	str	x0, [x2, #16]
    71ac:	mov	x0, x19
    71b0:	ldp	x19, x30, [sp], #16
    71b4:	ret
    71b8:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    71bc:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    71c0:	add	x2, x2, #0xe0
    71c4:	add	x0, x0, #0x60
    71c8:	mov	x4, #0x0                   	// #0
    71cc:	mov	x3, #0x0                   	// #0
    71d0:	mov	w1, #0xbf                  	// #191
    71d4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    71d8:	stp	x19, x20, [sp, #-224]!
    71dc:	stp	x25, x26, [sp, #48]
    71e0:	adrp	x26, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    71e4:	stp	x21, x22, [sp, #16]
    71e8:	stp	x23, x24, [sp, #32]
    71ec:	mov	x23, x0
    71f0:	stp	x27, x28, [sp, #64]
    71f4:	str	x30, [sp, #80]
    71f8:	bl	1d868 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfa8>
    71fc:	bl	1cb68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
    7200:	and	w25, w0, #0xff
    7204:	ldr	x19, [x26, #4016]
    7208:	stp	xzr, xzr, [sp, #144]
    720c:	str	xzr, [sp, #160]
    7210:	ldr	x0, [x19]
    7214:	cbz	x0, 7444 <__asan_backtrace_open@plt+0xa14>
    7218:	sub	x24, x0, #0x1
    721c:	ands	x24, x24, x0
    7220:	b.ne	78f8 <__asan_backtrace_open@plt+0xec8>  // b.any
    7224:	add	x19, x0, #0x3ff
    7228:	neg	x0, x0
    722c:	and	x19, x19, x0
    7230:	mov	w2, #0x0                   	// #0
    7234:	mov	x0, x19
    7238:	adrp	x27, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    723c:	add	x1, x27, #0x178
    7240:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    7244:	ldr	x1, [sp, #144]
    7248:	mov	x20, x0
    724c:	ldr	x2, [sp, #160]
    7250:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    7254:	ldp	x0, x1, [sp, #144]
    7258:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    725c:	stp	x20, x19, [sp, #144]
    7260:	ldr	x2, [sp, #160]
    7264:	cmp	x2, #0x3ff
    7268:	b.hi	728c <__asan_backtrace_open@plt+0x85c>  // b.pmore
    726c:	cmp	x19, #0x3ff
    7270:	b.ls	7878 <__asan_backtrace_open@plt+0xe48>  // b.plast
    7274:	mov	x3, #0x400                 	// #1024
    7278:	add	x0, x20, x2
    727c:	mov	w1, #0x0                   	// #0
    7280:	sub	x2, x3, x2
    7284:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    7288:	ldr	x20, [sp, #144]
    728c:	mov	x0, #0x400                 	// #1024
    7290:	stp	x0, xzr, [sp, #160]
    7294:	add	x19, x23, #0x40
    7298:	add	x22, sp, #0x90
    729c:	strb	wzr, [x20]
    72a0:	ldr	w0, [x23, #40]
    72a4:	cbz	w0, 73f8 <__asan_backtrace_open@plt+0x9c8>
    72a8:	cmp	w25, #0x0
    72ac:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    72b0:	adrp	x20, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    72b4:	add	x1, x1, #0x428
    72b8:	add	x20, x20, #0x148
    72bc:	mov	x0, x22
    72c0:	csel	x20, x20, x1, ne  // ne = any
    72c4:	mov	x1, x20
    72c8:	bl	1a3b0 <OnPrint@@Base+0x420>
    72cc:	ldp	x2, x3, [x23, #16]
    72d0:	stp	x2, x3, [sp, #192]
    72d4:	ldp	x0, x1, [x23]
    72d8:	stp	x0, x1, [sp, #176]
    72dc:	ldr	w0, [x23]
    72e0:	ldr	x2, [x23, #32]
    72e4:	str	x2, [sp, #208]
    72e8:	cmp	w0, #0x2
    72ec:	b.eq	74a0 <__asan_backtrace_open@plt+0xa70>  // b.none
    72f0:	b.hi	730c <__asan_backtrace_open@plt+0x8dc>  // b.pmore
    72f4:	cbz	w0, 7450 <__asan_backtrace_open@plt+0xa20>
    72f8:	ldr	x1, [sp, #184]
    72fc:	cbz	x1, 7450 <__asan_backtrace_open@plt+0xa20>
    7300:	ldp	w2, w3, [sp, #192]
    7304:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    7308:	b	7328 <__asan_backtrace_open@plt+0x8f8>
    730c:	cmp	w0, #0x3
    7310:	b.ne	733c <__asan_backtrace_open@plt+0x90c>  // b.any
    7314:	ldr	x1, [x2, #56]
    7318:	add	x0, x2, #0x8
    731c:	cbz	x1, 7908 <__asan_backtrace_open@plt+0xed8>
    7320:	ldp	w2, w3, [x0, #56]
    7324:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    7328:	ldr	x4, [x4, #4056]
    732c:	mov	x0, x22
    7330:	ldr	x5, [x4, #24]
    7334:	ldrb	w4, [x4, #181]
    7338:	bl	1d9e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1120>
    733c:	mov	x0, x22
    7340:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7344:	add	x1, x1, #0x1e8
    7348:	bl	1a3b0 <OnPrint@@Base+0x420>
    734c:	ldr	w0, [x23, #40]
    7350:	cbz	w0, 7478 <__asan_backtrace_open@plt+0xa48>
    7354:	cmp	w0, #0x1
    7358:	b.ne	737c <__asan_backtrace_open@plt+0x94c>  // b.any
    735c:	cbnz	w25, 78e4 <__asan_backtrace_open@plt+0xeb4>
    7360:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    7364:	add	x2, x2, #0x428
    7368:	mov	x3, x2
    736c:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7370:	mov	x0, x22
    7374:	add	x1, x1, #0x208
    7378:	bl	1a3b0 <OnPrint@@Base+0x420>
    737c:	ldr	x1, [x23, #48]
    7380:	mov	x2, x19
    7384:	mov	x0, x22
    7388:	adrp	x20, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
    738c:	adrp	x21, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7390:	bl	6d90 <__asan_backtrace_open@plt+0x360>
    7394:	adrp	x4, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    7398:	cmp	w25, #0x0
    739c:	add	x0, x4, #0x428
    73a0:	adrp	x4, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    73a4:	add	x4, x4, #0x120
    73a8:	add	x1, x20, #0xe48
    73ac:	csel	x28, x4, x0, ne  // ne = any
    73b0:	mov	x0, x22
    73b4:	mov	x2, x28
    73b8:	bl	1a3b0 <OnPrint@@Base+0x420>
    73bc:	ldr	x1, [sp, #144]
    73c0:	add	x0, x21, #0x98
    73c4:	bl	1a2a0 <OnPrint@@Base+0x310>
    73c8:	ldr	w0, [x23]
    73cc:	cmp	w0, #0x2
    73d0:	b.eq	74d0 <__asan_backtrace_open@plt+0xaa0>  // b.none
    73d4:	ldp	x0, x1, [sp, #144]
    73d8:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    73dc:	ldp	x21, x22, [sp, #16]
    73e0:	ldp	x23, x24, [sp, #32]
    73e4:	ldp	x25, x26, [sp, #48]
    73e8:	ldp	x27, x28, [sp, #64]
    73ec:	ldr	x30, [sp, #80]
    73f0:	ldp	x19, x20, [sp], #224
    73f4:	ret
    73f8:	ldr	x1, [x23, #48]
    73fc:	mov	x2, x19
    7400:	mov	x0, x22
    7404:	bl	6d90 <__asan_backtrace_open@plt+0x360>
    7408:	ldr	w0, [x23, #44]
    740c:	bl	6b18 <__asan_backtrace_open@plt+0xe8>
    7410:	mov	x1, x0
    7414:	mov	x3, x22
    7418:	add	x0, sp, #0xb0
    741c:	mov	x2, x23
    7420:	bl	bdb0 <__ubsan_on_report@@Base+0x8>
    7424:	ldr	x0, [sp, #160]
    7428:	ldr	x1, [sp, #144]
    742c:	cbz	x0, 7930 <__asan_backtrace_open@plt+0xf00>
    7430:	strb	wzr, [x1]
    7434:	str	xzr, [sp, #168]
    7438:	ldp	x0, x1, [sp, #192]
    743c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    7440:	b	72a8 <__asan_backtrace_open@plt+0x878>
    7444:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    7448:	str	x0, [x19]
    744c:	b	7218 <__asan_backtrace_open@plt+0x7e8>
    7450:	mov	x0, x22
    7454:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7458:	add	x1, x1, #0x100
    745c:	bl	1a3b0 <OnPrint@@Base+0x420>
    7460:	mov	x0, x22
    7464:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7468:	add	x1, x1, #0x1e8
    746c:	bl	1a3b0 <OnPrint@@Base+0x420>
    7470:	ldr	w0, [x23, #40]
    7474:	cbnz	w0, 7354 <__asan_backtrace_open@plt+0x924>
    7478:	cbnz	w25, 78d0 <__asan_backtrace_open@plt+0xea0>
    747c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    7480:	add	x2, x2, #0x428
    7484:	mov	x3, x2
    7488:	mov	x4, x20
    748c:	mov	x0, x22
    7490:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7494:	add	x1, x1, #0x1f0
    7498:	bl	1a3b0 <OnPrint@@Base+0x420>
    749c:	b	737c <__asan_backtrace_open@plt+0x94c>
    74a0:	ldr	x2, [x23, #24]
    74a4:	mov	x0, x22
    74a8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    74ac:	add	x1, x1, #0xd8
    74b0:	bl	1a3b0 <OnPrint@@Base+0x420>
    74b4:	mov	x0, x22
    74b8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    74bc:	add	x1, x1, #0x1e8
    74c0:	bl	1a3b0 <OnPrint@@Base+0x420>
    74c4:	ldr	w0, [x23, #40]
    74c8:	cbnz	w0, 7354 <__asan_backtrace_open@plt+0x924>
    74cc:	b	7478 <__asan_backtrace_open@plt+0xa48>
    74d0:	ldr	x6, [x23, #24]
    74d4:	add	x0, x23, #0x148
    74d8:	str	x0, [sp, #104]
    74dc:	ldr	w7, [x23, #416]
    74e0:	cmp	x6, #0x3
    74e4:	b.ls	7850 <__asan_backtrace_open@plt+0xe20>  // b.plast
    74e8:	cmn	x6, #0x5
    74ec:	sub	x24, x6, #0x4
    74f0:	mov	x2, #0xffffffffffffffff    	// #-1
    74f4:	b.ls	7850 <__asan_backtrace_open@plt+0xe20>  // b.plast
    74f8:	cbz	w7, 7a0c <__asan_backtrace_open@plt+0xfdc>
    74fc:	add	x23, x23, #0x1a0
    7500:	sub	w3, w7, #0x1
    7504:	mov	w0, #0x58                  	// #88
    7508:	mov	x22, x24
    750c:	ldr	x1, [sp, #104]
    7510:	umaddl	x23, w3, w0, x23
    7514:	ldr	w3, [x1]
    7518:	ldr	x0, [x1, #24]
    751c:	cmp	w3, #0x2
    7520:	b.ne	7858 <__asan_backtrace_open@plt+0xe28>  // b.any
    7524:	ldr	w3, [x1, #40]
    7528:	cmp	x22, x0
    752c:	csel	x22, x22, x0, ls  // ls = plast
    7530:	cmp	w3, #0x2
    7534:	ldr	x0, [x1, #64]
    7538:	b.ne	7858 <__asan_backtrace_open@plt+0xe28>  // b.any
    753c:	cmp	x2, x0
    7540:	add	x1, x1, #0x58
    7544:	csel	x2, x2, x0, cs  // cs = hs, nlast
    7548:	cmp	x23, x1
    754c:	b.ne	7514 <__asan_backtrace_open@plt+0xae4>  // b.any
    7550:	sub	x0, x2, x22
    7554:	cmp	x0, #0x20
    7558:	b.ls	7568 <__asan_backtrace_open@plt+0xb38>  // b.plast
    755c:	sub	x2, x2, #0x20
    7560:	cmp	x2, x24
    7564:	csel	x22, x2, x24, ls  // ls = plast
    7568:	cmn	x22, #0x21
    756c:	add	x24, x22, #0x20
    7570:	mov	x1, #0x20                  	// #32
    7574:	b.ls	7580 <__asan_backtrace_open@plt+0xb50>  // b.plast
    7578:	mvn	x1, x22
    757c:	mov	x24, #0xffffffffffffffff    	// #-1
    7580:	mov	x0, x22
    7584:	str	w7, [sp, #112]
    7588:	str	x6, [sp, #120]
    758c:	bl	18d98 <__sanitizer_set_report_fd@@Base+0x5e78>
    7590:	ldr	w7, [sp, #112]
    7594:	tst	w0, #0xff
    7598:	ldr	x6, [sp, #120]
    759c:	b.eq	79c4 <__asan_backtrace_open@plt+0xf94>  // b.none
    75a0:	ldr	x23, [x26, #4016]
    75a4:	stp	xzr, xzr, [sp, #176]
    75a8:	str	xzr, [sp, #192]
    75ac:	ldr	x0, [x23]
    75b0:	cbz	x0, 7a14 <__asan_backtrace_open@plt+0xfe4>
    75b4:	str	w7, [sp, #112]
    75b8:	sub	x1, x0, #0x1
    75bc:	str	x6, [sp, #120]
    75c0:	tst	x1, x0
    75c4:	b.ne	78f8 <__asan_backtrace_open@plt+0xec8>  // b.any
    75c8:	add	x1, x0, #0x3ff
    75cc:	neg	x0, x0
    75d0:	and	x3, x1, x0
    75d4:	mov	w2, #0x0                   	// #0
    75d8:	mov	x0, x3
    75dc:	add	x1, x27, #0x178
    75e0:	str	x3, [sp, #128]
    75e4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    75e8:	mov	x23, x0
    75ec:	ldr	x1, [sp, #176]
    75f0:	ldr	x2, [sp, #192]
    75f4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    75f8:	ldp	x0, x1, [sp, #176]
    75fc:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    7600:	ldp	x6, x3, [sp, #120]
    7604:	stp	x23, x3, [sp, #176]
    7608:	ldr	w7, [sp, #112]
    760c:	ldr	x2, [sp, #192]
    7610:	cmp	x2, #0x3ff
    7614:	b.hi	7648 <__asan_backtrace_open@plt+0xc18>  // b.pmore
    7618:	cmp	x3, #0x3ff
    761c:	b.ls	7a54 <__asan_backtrace_open@plt+0x1024>  // b.plast
    7620:	mov	x3, #0x400                 	// #1024
    7624:	add	x0, x23, x2
    7628:	mov	w1, #0x0                   	// #0
    762c:	sub	x2, x3, x2
    7630:	str	w7, [sp, #112]
    7634:	str	x6, [sp, #120]
    7638:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    763c:	ldr	w7, [sp, #112]
    7640:	ldr	x6, [sp, #120]
    7644:	ldr	x23, [sp, #176]
    7648:	mov	x0, #0x400                 	// #1024
    764c:	stp	x0, xzr, [sp, #192]
    7650:	cmp	x22, x24
    7654:	strb	wzr, [x23]
    7658:	b.eq	7ac4 <__asan_backtrace_open@plt+0x1094>  // b.none
    765c:	adrp	x27, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
    7660:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7664:	add	x0, x27, #0x840
    7668:	add	x26, x1, #0x238
    766c:	mov	x27, x22
    7670:	add	x23, sp, #0xb0
    7674:	str	x0, [sp, #128]
    7678:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    767c:	add	x0, x0, #0x140
    7680:	str	x0, [sp, #136]
    7684:	nop
    7688:	ldp	x1, x0, [sp, #128]
    768c:	tst	x27, #0x7
    7690:	ldrb	w3, [x27]
    7694:	add	x27, x27, #0x1
    7698:	str	w7, [sp, #112]
    769c:	str	x6, [sp, #120]
    76a0:	csel	x2, x0, x1, eq  // eq = none
    76a4:	mov	x1, x26
    76a8:	mov	x0, x23
    76ac:	bl	1a3b0 <OnPrint@@Base+0x420>
    76b0:	ldr	w7, [sp, #112]
    76b4:	cmp	x24, x27
    76b8:	ldr	x6, [sp, #120]
    76bc:	b.ne	7688 <__asan_backtrace_open@plt+0xc58>  // b.any
    76c0:	mov	x0, x23
    76c4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
    76c8:	add	x1, x1, #0xad0
    76cc:	str	w7, [sp, #112]
    76d0:	str	x6, [sp, #120]
    76d4:	bl	1a3b0 <OnPrint@@Base+0x420>
    76d8:	cmp	w25, #0x0
    76dc:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    76e0:	add	x2, x2, #0x150
    76e4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    76e8:	add	x1, x1, #0x428
    76ec:	mov	x0, x23
    76f0:	csel	x1, x2, x1, ne  // ne = any
    76f4:	mov	x27, x22
    76f8:	bl	1a3b0 <OnPrint@@Base+0x420>
    76fc:	ldr	w7, [sp, #112]
    7700:	mov	x0, x22
    7704:	ldr	x1, [sp, #104]
    7708:	mov	w2, w7
    770c:	str	w7, [sp, #112]
    7710:	bl	6c98 <__asan_backtrace_open@plt+0x268>
    7714:	mov	x26, x0
    7718:	ldr	w7, [sp, #112]
    771c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7720:	ldr	x6, [sp, #120]
    7724:	add	x0, x0, #0x90
    7728:	str	x0, [sp, #136]
    772c:	cbz	x26, 7988 <__asan_backtrace_open@plt+0xf58>
    7730:	ldr	w0, [x26, #40]
    7734:	ldr	x1, [x26, #64]
    7738:	cmp	w0, #0x2
    773c:	b.ne	7858 <__asan_backtrace_open@plt+0xe28>  // b.any
    7740:	cmp	x27, x1
    7744:	b.eq	79d4 <__asan_backtrace_open@plt+0xfa4>  // b.none
    7748:	ldr	w0, [x26]
    774c:	ldr	x1, [x26, #24]
    7750:	cmp	w0, #0x2
    7754:	b.ne	7858 <__asan_backtrace_open@plt+0xe28>  // b.any
    7758:	cmp	x27, x1
    775c:	b.ls	7974 <__asan_backtrace_open@plt+0xf44>  // b.plast
    7760:	mov	w25, #0x7e                  	// #126
    7764:	mov	w2, w25
    7768:	tst	x27, #0x7
    776c:	b.eq	799c <__asan_backtrace_open@plt+0xf6c>  // b.none
    7770:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7774:	add	x1, x0, #0x90
    7778:	mov	x0, x23
    777c:	stp	x1, x6, [sp, #112]
    7780:	str	w7, [sp, #128]
    7784:	bl	1a3b0 <OnPrint@@Base+0x420>
    7788:	ldp	x1, x6, [sp, #112]
    778c:	mov	w0, #0x5e                  	// #94
    7790:	cmp	x6, x27
    7794:	add	x27, x27, #0x1
    7798:	csel	w2, w25, w0, ne  // ne = any
    779c:	mov	x0, x23
    77a0:	bl	1a3b0 <OnPrint@@Base+0x420>
    77a4:	ldr	x1, [sp, #112]
    77a8:	mov	w2, w25
    77ac:	mov	x0, x23
    77b0:	bl	1a3b0 <OnPrint@@Base+0x420>
    77b4:	ldr	w7, [sp, #128]
    77b8:	cmp	x24, x27
    77bc:	ldr	x6, [sp, #120]
    77c0:	b.ne	772c <__asan_backtrace_open@plt+0xcfc>  // b.any
    77c4:	add	x1, x20, #0xe48
    77c8:	mov	x2, x28
    77cc:	mov	x0, x23
    77d0:	str	w7, [sp, #112]
    77d4:	bl	1a3b0 <OnPrint@@Base+0x420>
    77d8:	mov	w25, #0x0                   	// #0
    77dc:	ldr	w7, [sp, #112]
    77e0:	mov	x20, #0x0                   	// #0
    77e4:	cbz	x20, 7a30 <__asan_backtrace_open@plt+0x1000>
    77e8:	ldr	w0, [x20, #40]
    77ec:	ldr	x1, [x20, #64]
    77f0:	cmp	w0, #0x2
    77f4:	b.ne	7858 <__asan_backtrace_open@plt+0xe28>  // b.any
    77f8:	cmp	x22, x1
    77fc:	b.eq	7a30 <__asan_backtrace_open@plt+0x1000>  // b.none
    7800:	tst	x22, #0x7
    7804:	ldr	w1, [x20]
    7808:	cset	w0, eq  // eq = none
    780c:	add	w0, w0, #0x1
    7810:	cmp	w1, #0x2
    7814:	add	w0, w25, w0
    7818:	ldr	x1, [x20, #24]
    781c:	b.ne	7858 <__asan_backtrace_open@plt+0xe28>  // b.any
    7820:	cmp	x22, x1
    7824:	b.eq	7b48 <__asan_backtrace_open@plt+0x1118>  // b.none
    7828:	add	x22, x22, #0x1
    782c:	add	w25, w0, #0x2
    7830:	cmp	x24, x22
    7834:	b.ne	77e4 <__asan_backtrace_open@plt+0xdb4>  // b.any
    7838:	ldr	x1, [sp, #176]
    783c:	add	x0, x21, #0x98
    7840:	bl	1a2a0 <OnPrint@@Base+0x310>
    7844:	ldp	x0, x1, [sp, #176]
    7848:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    784c:	b	73d4 <__asan_backtrace_open@plt+0x9a4>
    7850:	add	x2, x6, #0x4
    7854:	b	74f8 <__asan_backtrace_open@plt+0xac8>
    7858:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    785c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7860:	add	x2, x2, #0x40
    7864:	add	x0, x0, #0x60
    7868:	mov	x4, #0x0                   	// #0
    786c:	mov	x3, #0x0                   	// #0
    7870:	mov	w1, #0x55                  	// #85
    7874:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7878:	ldr	x19, [x26, #4016]
    787c:	ldr	x0, [x19]
    7880:	cbz	x0, 7968 <__asan_backtrace_open@plt+0xf38>
    7884:	sub	x1, x0, #0x1
    7888:	tst	x1, x0
    788c:	b.ne	78f8 <__asan_backtrace_open@plt+0xec8>  // b.any
    7890:	add	x19, x0, #0x3ff
    7894:	neg	x0, x0
    7898:	and	x19, x19, x0
    789c:	add	x1, x27, #0x178
    78a0:	mov	w2, #0x0                   	// #0
    78a4:	mov	x0, x19
    78a8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    78ac:	mov	x20, x0
    78b0:	ldr	x1, [sp, #144]
    78b4:	ldr	x2, [sp, #160]
    78b8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    78bc:	ldp	x0, x1, [sp, #144]
    78c0:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    78c4:	stp	x20, x19, [sp, #144]
    78c8:	ldr	x2, [sp, #160]
    78cc:	b	7274 <__asan_backtrace_open@plt+0x844>
    78d0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    78d4:	adrp	x3, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    78d8:	add	x2, x2, #0x110
    78dc:	add	x3, x3, #0x120
    78e0:	b	7488 <__asan_backtrace_open@plt+0xa58>
    78e4:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    78e8:	adrp	x3, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    78ec:	add	x2, x2, #0x130
    78f0:	add	x3, x3, #0x120
    78f4:	b	736c <__asan_backtrace_open@plt+0x93c>
    78f8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    78fc:	add	x0, x0, #0x160
    7900:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
    7904:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    7908:	ldr	x1, [x0, #8]
    790c:	cbz	x1, 7950 <__asan_backtrace_open@plt+0xf20>
    7910:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    7914:	ldr	w3, [x0, #24]
    7918:	ldr	x2, [x0, #16]
    791c:	mov	x0, x22
    7920:	ldr	x4, [x4, #4056]
    7924:	ldr	x4, [x4, #24]
    7928:	bl	1daf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1230>
    792c:	b	733c <__asan_backtrace_open@plt+0x90c>
    7930:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7934:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7938:	add	x2, x2, #0x190
    793c:	add	x0, x0, #0x1a8
    7940:	mov	x4, #0x0                   	// #0
    7944:	mov	x3, #0x0                   	// #0
    7948:	mov	w1, #0x1b6                 	// #438
    794c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7950:	ldr	x2, [x2, #8]
    7954:	mov	x0, x22
    7958:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    795c:	add	x1, x1, #0xd8
    7960:	bl	1a3b0 <OnPrint@@Base+0x420>
    7964:	b	733c <__asan_backtrace_open@plt+0x90c>
    7968:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    796c:	str	x0, [x19]
    7970:	b	7884 <__asan_backtrace_open@plt+0xe54>
    7974:	mov	w25, #0x20                  	// #32
    7978:	mov	w0, #0x7e                  	// #126
    797c:	csel	w2, w25, w25, cc  // cc = lo, ul, last
    7980:	csel	w25, w25, w0, cc  // cc = lo, ul, last
    7984:	b	7768 <__asan_backtrace_open@plt+0xd38>
    7988:	cmp	x6, x27
    798c:	b.cc	77c4 <__asan_backtrace_open@plt+0xd94>  // b.lo, b.ul, b.last
    7990:	mov	w25, #0x20                  	// #32
    7994:	mov	w2, w25
    7998:	b	7768 <__asan_backtrace_open@plt+0xd38>
    799c:	ldr	x1, [sp, #136]
    79a0:	mov	x0, x23
    79a4:	str	w2, [sp, #112]
    79a8:	str	w7, [sp, #120]
    79ac:	str	x6, [sp, #128]
    79b0:	bl	1a3b0 <OnPrint@@Base+0x420>
    79b4:	ldr	w2, [sp, #112]
    79b8:	ldr	w7, [sp, #120]
    79bc:	ldr	x6, [sp, #128]
    79c0:	b	7770 <__asan_backtrace_open@plt+0xd40>
    79c4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    79c8:	add	x0, x0, #0x218
    79cc:	bl	1a2a0 <OnPrint@@Base+0x310>
    79d0:	b	73d4 <__asan_backtrace_open@plt+0x9a4>
    79d4:	ldr	x1, [sp, #104]
    79d8:	mov	w2, w7
    79dc:	mov	x0, x27
    79e0:	str	w7, [sp, #112]
    79e4:	str	x6, [sp, #120]
    79e8:	bl	6c98 <__asan_backtrace_open@plt+0x268>
    79ec:	cmp	x0, #0x0
    79f0:	ldr	x6, [sp, #120]
    79f4:	mov	x26, x0
    79f8:	ldr	w7, [sp, #112]
    79fc:	ccmp	x6, x27, #0x2, eq  // eq = none
    7a00:	b.cc	77c4 <__asan_backtrace_open@plt+0xd94>  // b.lo, b.ul, b.last
    7a04:	cbnz	x0, 7748 <__asan_backtrace_open@plt+0xd18>
    7a08:	b	7990 <__asan_backtrace_open@plt+0xf60>
    7a0c:	mov	x22, x24
    7a10:	b	7550 <__asan_backtrace_open@plt+0xb20>
    7a14:	str	w7, [sp, #112]
    7a18:	str	x6, [sp, #120]
    7a1c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    7a20:	ldr	w7, [sp, #112]
    7a24:	str	x0, [x23]
    7a28:	ldr	x6, [sp, #120]
    7a2c:	b	75b4 <__asan_backtrace_open@plt+0xb84>
    7a30:	ldr	x1, [sp, #104]
    7a34:	mov	w2, w7
    7a38:	mov	x0, x22
    7a3c:	str	w7, [sp, #112]
    7a40:	bl	6c98 <__asan_backtrace_open@plt+0x268>
    7a44:	mov	x20, x0
    7a48:	ldr	w7, [sp, #112]
    7a4c:	cbnz	x0, 7800 <__asan_backtrace_open@plt+0xdd0>
    7a50:	b	7838 <__asan_backtrace_open@plt+0xe08>
    7a54:	ldr	x23, [x26, #4016]
    7a58:	ldr	x0, [x23]
    7a5c:	cbz	x0, 7b20 <__asan_backtrace_open@plt+0x10f0>
    7a60:	ldr	x26, [x26, #4016]
    7a64:	str	w7, [sp, #112]
    7a68:	str	x6, [sp, #120]
    7a6c:	ldr	x0, [x26]
    7a70:	sub	x1, x0, #0x1
    7a74:	tst	x1, x0
    7a78:	b.ne	78f8 <__asan_backtrace_open@plt+0xec8>  // b.any
    7a7c:	add	x26, x0, #0x3ff
    7a80:	neg	x0, x0
    7a84:	and	x26, x26, x0
    7a88:	add	x1, x27, #0x178
    7a8c:	mov	w2, #0x0                   	// #0
    7a90:	mov	x0, x26
    7a94:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    7a98:	mov	x23, x0
    7a9c:	ldr	x1, [sp, #176]
    7aa0:	ldr	x2, [sp, #192]
    7aa4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    7aa8:	ldp	x0, x1, [sp, #176]
    7aac:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    7ab0:	stp	x23, x26, [sp, #176]
    7ab4:	ldr	w7, [sp, #112]
    7ab8:	ldr	x6, [sp, #120]
    7abc:	ldr	x2, [sp, #192]
    7ac0:	b	7620 <__asan_backtrace_open@plt+0xbf0>
    7ac4:	add	x23, sp, #0xb0
    7ac8:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
    7acc:	mov	x0, x23
    7ad0:	add	x1, x1, #0xad0
    7ad4:	str	w7, [sp, #112]
    7ad8:	bl	1a3b0 <OnPrint@@Base+0x420>
    7adc:	ldr	w7, [sp, #112]
    7ae0:	str	w7, [sp, #112]
    7ae4:	cbnz	w25, 7b38 <__asan_backtrace_open@plt+0x1108>
    7ae8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    7aec:	mov	x0, x23
    7af0:	add	x1, x1, #0x428
    7af4:	bl	1a3b0 <OnPrint@@Base+0x420>
    7af8:	ldr	w7, [sp, #112]
    7afc:	mov	x0, x22
    7b00:	ldr	x1, [sp, #104]
    7b04:	mov	w2, w7
    7b08:	bl	6c98 <__asan_backtrace_open@plt+0x268>
    7b0c:	mov	x2, x28
    7b10:	add	x1, x20, #0xe48
    7b14:	mov	x0, x23
    7b18:	bl	1a3b0 <OnPrint@@Base+0x420>
    7b1c:	b	7838 <__asan_backtrace_open@plt+0xe08>
    7b20:	str	w7, [sp, #112]
    7b24:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    7b28:	ldr	w7, [sp, #112]
    7b2c:	str	x0, [x23]
    7b30:	ldr	x6, [sp, #120]
    7b34:	b	7a60 <__asan_backtrace_open@plt+0x1030>
    7b38:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7b3c:	mov	x0, x23
    7b40:	add	x1, x1, #0x150
    7b44:	b	7af4 <__asan_backtrace_open@plt+0x10c4>
    7b48:	adrp	x22, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
    7b4c:	sub	w24, w0, #0x1
    7b50:	add	x22, x22, #0x840
    7b54:	cbz	w0, 7b70 <__asan_backtrace_open@plt+0x1140>
    7b58:	sub	w24, w24, #0x1
    7b5c:	mov	x1, x22
    7b60:	mov	x0, x23
    7b64:	bl	1a3b0 <OnPrint@@Base+0x420>
    7b68:	cmn	w24, #0x1
    7b6c:	b.ne	7b58 <__asan_backtrace_open@plt+0x1128>  // b.any
    7b70:	ldr	x1, [x20, #80]
    7b74:	mov	x2, x19
    7b78:	mov	x0, x23
    7b7c:	bl	6d90 <__asan_backtrace_open@plt+0x360>
    7b80:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
    7b84:	add	x1, x0, #0xad0
    7b88:	mov	x0, x23
    7b8c:	bl	1a3b0 <OnPrint@@Base+0x420>
    7b90:	b	7838 <__asan_backtrace_open@plt+0xe08>
    7b94:	nop
    7b98:	b	bcc0 <__ubsan_handle_cfi_bad_type@@Base+0x4a8>
    7b9c:	nop
    7ba0:	stp	x19, x20, [sp, #-48]!
    7ba4:	mov	x19, x0
    7ba8:	mov	x20, x2
    7bac:	stp	x21, x22, [sp, #16]
    7bb0:	mov	x21, x1
    7bb4:	mov	w22, w3
    7bb8:	str	x30, [sp, #32]
    7bbc:	bl	bcc0 <__ubsan_handle_cfi_bad_type@@Base+0x4a8>
    7bc0:	add	x0, x19, #0x1
    7bc4:	bl	1d4a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbe0>
    7bc8:	ldp	x2, x3, [x21]
    7bcc:	stp	x2, x3, [x19, #8]
    7bd0:	ldp	x2, x3, [x20]
    7bd4:	stp	x2, x3, [x19, #32]
    7bd8:	ldr	x1, [x21, #16]
    7bdc:	ldp	x2, x3, [x20, #16]
    7be0:	stp	x2, x3, [x19, #48]
    7be4:	ldr	x30, [sp, #32]
    7be8:	str	x1, [x19, #24]
    7bec:	ldr	x1, [x20, #32]
    7bf0:	str	w22, [x19, #72]
    7bf4:	ldp	x21, x22, [sp, #16]
    7bf8:	str	x1, [x19, #64]
    7bfc:	ldp	x19, x20, [sp], #48
    7c00:	ret
    7c04:	nop
    7c08:	stp	x19, x20, [sp, #-176]!
    7c0c:	mov	x19, x0
    7c10:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    7c14:	ldr	x0, [x0, #16]
    7c18:	ldr	x1, [x19, #24]
    7c1c:	str	x30, [sp, #48]
    7c20:	bl	6fb8 <__asan_backtrace_open@plt+0x588>
    7c24:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    7c28:	ldr	w0, [x19, #72]
    7c2c:	ldp	x2, x3, [x19, #32]
    7c30:	stp	x2, x3, [sp, #72]
    7c34:	ldr	x1, [x1, #4056]
    7c38:	ldp	x2, x3, [x19, #48]
    7c3c:	stp	x2, x3, [sp, #88]
    7c40:	ldrb	w1, [x1, #60]
    7c44:	cbz	w1, 7c8c <__asan_backtrace_open@plt+0x125c>
    7c48:	ldr	x1, [x20, #3816]
    7c4c:	stp	x21, x22, [sp, #16]
    7c50:	ldrb	w1, [x1, #16]
    7c54:	cmp	w1, #0x0
    7c58:	csel	w0, w0, wzr, ne  // ne = any
    7c5c:	bl	6b18 <__asan_backtrace_open@plt+0xe8>
    7c60:	ldr	w22, [x19, #32]
    7c64:	mov	x21, x0
    7c68:	cmp	w22, #0x1
    7c6c:	b.eq	7cd0 <__asan_backtrace_open@plt+0x12a0>  // b.none
    7c70:	cmp	w22, #0x3
    7c74:	b.eq	7cac <__asan_backtrace_open@plt+0x127c>  // b.none
    7c78:	bl	bbf8 <__ubsan_handle_cfi_bad_type@@Base+0x3e0>
    7c7c:	mov	x1, x0
    7c80:	mov	x0, x21
    7c84:	bl	f938 <__sanitizer_report_error_summary@@Base+0x10>
    7c88:	ldp	x21, x22, [sp, #16]
    7c8c:	ldr	x20, [x20, #3816]
    7c90:	ldrb	w0, [x20]
    7c94:	cbnz	w0, 7d34 <__asan_backtrace_open@plt+0x1304>
    7c98:	add	x0, x19, #0x1
    7c9c:	bl	1d850 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf90>
    7ca0:	ldr	x30, [sp, #48]
    7ca4:	ldp	x19, x20, [sp], #176
    7ca8:	ret
    7cac:	ldr	x22, [x19, #64]
    7cb0:	bl	bbf8 <__ubsan_handle_cfi_bad_type@@Base+0x3e0>
    7cb4:	mov	x2, x0
    7cb8:	mov	x0, x21
    7cbc:	add	x22, x22, #0x8
    7cc0:	mov	x1, x22
    7cc4:	bl	1caf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x238>
    7cc8:	ldp	x21, x22, [sp, #16]
    7ccc:	b	7c8c <__asan_backtrace_open@plt+0x125c>
    7cd0:	ldr	x22, [sp, #80]
    7cd4:	cbz	x22, 7c78 <__asan_backtrace_open@plt+0x1248>
    7cd8:	stp	x23, x24, [sp, #32]
    7cdc:	add	x23, sp, #0x70
    7ce0:	mov	x0, x23
    7ce4:	ldr	x24, [sp, #88]
    7ce8:	bl	1fd30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3470>
    7cec:	mov	x0, x22
    7cf0:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
    7cf4:	mov	x1, x0
    7cf8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    7cfc:	add	x0, x0, #0x428
    7d00:	stp	x1, x24, [sp, #160]
    7d04:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
    7d08:	str	x0, [sp, #144]
    7d0c:	bl	bbf8 <__ubsan_handle_cfi_bad_type@@Base+0x3e0>
    7d10:	mov	x2, x0
    7d14:	mov	x1, x23
    7d18:	mov	x0, x21
    7d1c:	bl	1caf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x238>
    7d20:	mov	x0, x23
    7d24:	bl	1fd58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3498>
    7d28:	ldp	x21, x22, [sp, #16]
    7d2c:	ldp	x23, x24, [sp, #32]
    7d30:	b	7c8c <__asan_backtrace_open@plt+0x125c>
    7d34:	stp	x21, x22, [sp, #16]
    7d38:	stp	x23, x24, [sp, #32]
    7d3c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    7d40:	stp	x19, x20, [sp, #-32]!
    7d44:	adrp	x20, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    7d48:	ldr	x4, [x20, #3520]
    7d4c:	str	x30, [sp, #16]
    7d50:	cbnz	x4, 7d90 <__asan_backtrace_open@plt+0x1360>
    7d54:	add	x19, x20, #0xdc0
    7d58:	mov	w2, #0x1b                  	// #27
    7d5c:	add	x19, x19, #0x40
    7d60:	adrp	x1, 5b000 <_Unwind_Backtrace@GCC_3.3>
    7d64:	mov	x0, x19
    7d68:	add	x1, x1, #0x380
    7d6c:	bl	1f220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2960>
    7d70:	str	x19, [x20, #3520]
    7d74:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    7d78:	mov	x0, x19
    7d7c:	ldr	x30, [sp, #16]
    7d80:	ldr	x1, [x1, #3816]
    7d84:	ldp	x19, x20, [sp], #32
    7d88:	ldr	x1, [x1, #8]
    7d8c:	b	1f690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dd0>
    7d90:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7d94:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7d98:	add	x2, x2, #0x240
    7d9c:	add	x0, x0, #0x10
    7da0:	mov	x3, #0x0                   	// #0
    7da4:	mov	w1, #0x18d                 	// #397
    7da8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7dac:	nop
    7db0:	stp	x19, x30, [sp, #-32]!
    7db4:	mov	x19, x0
    7db8:	bl	bcc0 <__ubsan_handle_cfi_bad_type@@Base+0x4a8>
    7dbc:	adrp	x0, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    7dc0:	ldr	x0, [x0, #3520]
    7dc4:	cbz	x0, 7de4 <__asan_backtrace_open@plt+0x13b4>
    7dc8:	mov	x1, x19
    7dcc:	add	x3, sp, #0x18
    7dd0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7dd4:	add	x2, x2, #0x380
    7dd8:	bl	1fa60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a0>
    7ddc:	ldp	x19, x30, [sp], #32
    7de0:	ret
    7de4:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7de8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7dec:	add	x2, x2, #0x268
    7df0:	add	x0, x0, #0x10
    7df4:	mov	x4, #0x0                   	// #0
    7df8:	mov	x3, #0x0                   	// #0
    7dfc:	mov	w1, #0x195                 	// #405
    7e00:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7e04:	nop
    7e08:	stp	x19, x20, [sp, #-96]!
    7e0c:	mov	w19, w0
    7e10:	mov	x20, x2
    7e14:	stp	x21, x22, [sp, #16]
    7e18:	adrp	x22, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    7e1c:	mov	x21, x1
    7e20:	stp	x23, x24, [sp, #32]
    7e24:	str	x30, [sp, #48]
    7e28:	bl	bcc0 <__ubsan_handle_cfi_bad_type@@Base+0x4a8>
    7e2c:	ldr	x0, [x22, #3520]
    7e30:	cbz	x0, 7f50 <__asan_backtrace_open@plt+0x1520>
    7e34:	cmp	w19, #0x19
    7e38:	b.hi	8090 <__asan_backtrace_open@plt+0x1660>  // b.pmore
    7e3c:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7e40:	add	x1, x1, #0x34c
    7e44:	ldrh	w1, [x1, w19, uxtw #1]
    7e48:	adr	x2, 7e54 <__asan_backtrace_open@plt+0x1424>
    7e4c:	add	x1, x2, w1, sxth #2
    7e50:	br	x1
    7e54:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    7e58:	add	x19, x19, #0xd80
    7e5c:	mov	x1, x19
    7e60:	bl	1f9e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3120>
    7e64:	ands	w23, w0, #0xff
    7e68:	b.eq	7f08 <__asan_backtrace_open@plt+0x14d8>  // b.none
    7e6c:	str	xzr, [sp, #72]
    7e70:	cbz	x20, 7f2c <__asan_backtrace_open@plt+0x14fc>
    7e74:	ldr	x0, [x22, #3520]
    7e78:	add	x24, sp, #0x48
    7e7c:	mov	x1, x20
    7e80:	mov	x3, x24
    7e84:	mov	x2, x19
    7e88:	bl	1fa60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a0>
    7e8c:	tst	w0, #0xff
    7e90:	b.ne	7f08 <__asan_backtrace_open@plt+0x14d8>  // b.any
    7e94:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
    7e98:	str	xzr, [sp, #80]
    7e9c:	add	x3, sp, #0x58
    7ea0:	add	x2, sp, #0x50
    7ea4:	mov	x1, x21
    7ea8:	bl	20ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
    7eac:	tst	w0, #0xff
    7eb0:	b.eq	7ed4 <__asan_backtrace_open@plt+0x14a4>  // b.none
    7eb4:	ldr	x1, [sp, #80]
    7eb8:	cbz	x1, 7ed4 <__asan_backtrace_open@plt+0x14a4>
    7ebc:	ldr	x0, [x22, #3520]
    7ec0:	mov	x3, x24
    7ec4:	mov	x2, x19
    7ec8:	bl	1fa60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a0>
    7ecc:	tst	w0, #0xff
    7ed0:	b.ne	7f08 <__asan_backtrace_open@plt+0x14d8>  // b.any
    7ed4:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
    7ed8:	mov	x1, x21
    7edc:	bl	20f78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
    7ee0:	mov	x20, x0
    7ee4:	mov	x3, x24
    7ee8:	ldr	x0, [x22, #3520]
    7eec:	mov	x2, x19
    7ef0:	ldr	x1, [x20, #40]
    7ef4:	bl	1fa60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a0>
    7ef8:	ands	w23, w0, #0xff
    7efc:	b.eq	7f34 <__asan_backtrace_open@plt+0x1504>  // b.none
    7f00:	mov	x0, x20
    7f04:	bl	1fe60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
    7f08:	mov	w0, w23
    7f0c:	ldp	x21, x22, [sp, #16]
    7f10:	ldp	x23, x24, [sp, #32]
    7f14:	ldr	x30, [sp, #48]
    7f18:	ldp	x19, x20, [sp], #96
    7f1c:	ret
    7f20:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7f24:	add	x19, x19, #0x328
    7f28:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7f2c:	add	x24, sp, #0x48
    7f30:	b	7e94 <__asan_backtrace_open@plt+0x1464>
    7f34:	ldr	x0, [x22, #3520]
    7f38:	mov	x3, x24
    7f3c:	ldr	x1, [x20, #56]
    7f40:	mov	x2, x19
    7f44:	bl	1fa60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a0>
    7f48:	and	w23, w0, #0xff
    7f4c:	b	7f00 <__asan_backtrace_open@plt+0x14d0>
    7f50:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7f54:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7f58:	add	x2, x2, #0x268
    7f5c:	add	x0, x0, #0x10
    7f60:	mov	x4, #0x0                   	// #0
    7f64:	mov	x3, #0x0                   	// #0
    7f68:	mov	w1, #0x19c                 	// #412
    7f6c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7f70:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7f74:	add	x19, x19, #0xff8
    7f78:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7f7c:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7f80:	add	x19, x19, #0x310
    7f84:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7f88:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7f8c:	add	x19, x19, #0x308
    7f90:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7f94:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7f98:	add	x19, x19, #0x2f8
    7f9c:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7fa0:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7fa4:	add	x19, x19, #0x2f0
    7fa8:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7fac:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7fb0:	add	x19, x19, #0x2e8
    7fb4:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7fb8:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    7fbc:	add	x19, x19, #0xf28
    7fc0:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7fc4:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7fc8:	add	x19, x19, #0x2d8
    7fcc:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7fd0:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    7fd4:	add	x19, x19, #0xf08
    7fd8:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7fdc:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7fe0:	add	x19, x19, #0x2c8
    7fe4:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7fe8:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    7fec:	add	x19, x19, #0x2c0
    7ff0:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    7ff4:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    7ff8:	add	x19, x19, #0xec0
    7ffc:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8000:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    8004:	add	x19, x19, #0xea8
    8008:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    800c:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    8010:	add	x19, x19, #0xe78
    8014:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8018:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    801c:	add	x19, x19, #0xe50
    8020:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8024:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    8028:	add	x19, x19, #0xe38
    802c:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8030:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    8034:	add	x19, x19, #0xe20
    8038:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    803c:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    8040:	add	x19, x19, #0xe08
    8044:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8048:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    804c:	add	x19, x19, #0xde8
    8050:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8054:	adrp	x19, 35000 <__asan_internal_strnlen@@Base+0x2780>
    8058:	add	x19, x19, #0xdd0
    805c:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8060:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8064:	add	x19, x19, #0x2b0
    8068:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    806c:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8070:	add	x19, x19, #0x2a0
    8074:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8078:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    807c:	add	x19, x19, #0x290
    8080:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8084:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8088:	add	x19, x19, #0x288
    808c:	b	7e5c <__asan_backtrace_open@plt+0x142c>
    8090:	adrp	x2, 35000 <__asan_internal_strnlen@@Base+0x2780>
    8094:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8098:	add	x2, x2, #0xfe8
    809c:	add	x0, x0, #0x10
    80a0:	mov	x4, #0x0                   	// #0
    80a4:	mov	x3, #0x0                   	// #0
    80a8:	mov	w1, #0x44                  	// #68
    80ac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    80b0:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    80b4:	stp	x19, x20, [sp, #-48]!
    80b8:	mov	x20, x0
    80bc:	ldr	x0, [x4, #3776]
    80c0:	mov	x19, x3
    80c4:	stp	x21, x22, [sp, #16]
    80c8:	mov	x22, x2
    80cc:	mov	x21, x1
    80d0:	mov	x1, #0x10                  	// #16
    80d4:	str	x30, [sp, #32]
    80d8:	bl	c9d8 <__sancov_default_options@@Base+0x288>
    80dc:	mov	x2, x0
    80e0:	mov	x3, x22
    80e4:	mov	x1, x21
    80e8:	adrp	x4, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
    80ec:	add	x4, x4, #0xd48
    80f0:	ldp	x21, x22, [sp, #16]
    80f4:	mov	x0, x20
    80f8:	ldr	x30, [sp, #32]
    80fc:	stp	x4, x19, [x2]
    8100:	ldp	x19, x20, [sp], #48
    8104:	b	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>

0000000000008108 <__ubsan_default_options@@Base>:
    8108:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    810c:	add	x0, x0, #0x428
    8110:	ret
    8114:	nop
    8118:	b	6980 <__ubsan_default_options@plt>
    811c:	nop
    8120:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    8124:	add	x1, x1, #0x428
    8128:	strh	wzr, [x0]
    812c:	str	x1, [x0, #8]
    8130:	strh	wzr, [x0, #16]
    8134:	ret
    8138:	stp	x19, x20, [sp, #-32]!
    813c:	mov	x3, x1
    8140:	mov	x19, x1
    8144:	mov	x20, x0
    8148:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    814c:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8150:	add	x2, x2, #0x3e8
    8154:	add	x1, x1, #0x420
    8158:	str	x30, [sp, #16]
    815c:	bl	80b0 <__asan_backtrace_open@plt+0x1680>
    8160:	add	x3, x19, #0x1
    8164:	mov	x0, x20
    8168:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    816c:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8170:	add	x2, x2, #0x430
    8174:	add	x1, x1, #0x460
    8178:	bl	80b0 <__asan_backtrace_open@plt+0x1680>
    817c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    8180:	mov	x1, #0x10                  	// #16
    8184:	ldr	x0, [x0, #3776]
    8188:	bl	c9d8 <__sancov_default_options@@Base+0x288>
    818c:	mov	x2, x0
    8190:	add	x4, x19, #0x8
    8194:	adrp	x1, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
    8198:	add	x1, x1, #0xd60
    819c:	mov	x0, x20
    81a0:	stp	x1, x4, [x2]
    81a4:	adrp	x3, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    81a8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    81ac:	add	x3, x3, #0x478
    81b0:	add	x1, x1, #0x490
    81b4:	bl	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
    81b8:	add	x3, x19, #0x10
    81bc:	mov	x0, x20
    81c0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    81c4:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    81c8:	add	x2, x2, #0x4a0
    81cc:	add	x1, x1, #0x4e8
    81d0:	bl	80b0 <__asan_backtrace_open@plt+0x1680>
    81d4:	add	x3, x19, #0x11
    81d8:	mov	x0, x20
    81dc:	ldr	x30, [sp, #16]
    81e0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    81e4:	ldp	x19, x20, [sp], #32
    81e8:	add	x2, x2, #0x500
    81ec:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    81f0:	add	x1, x1, #0x578
    81f4:	b	80b0 <__asan_backtrace_open@plt+0x1680>
    81f8:	stp	x19, x20, [sp, #-288]!
    81fc:	stp	x21, x22, [sp, #16]
    8200:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    8204:	add	x19, sp, #0x30
    8208:	ldr	x20, [x21, #4056]
    820c:	str	x30, [sp, #32]
    8210:	mov	x0, x20
    8214:	bl	130f8 <__sanitizer_set_report_fd@@Base+0x1d8>
    8218:	mov	x1, x20
    821c:	mov	x0, x19
    8220:	bl	131f8 <__sanitizer_set_report_fd@@Base+0x2d8>
    8224:	strb	wzr, [sp, #108]
    8228:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    822c:	add	x0, x0, #0x598
    8230:	bl	68c0 <getenv@plt>
    8234:	mov	x2, x0
    8238:	mov	x1, x19
    823c:	mov	x0, x20
    8240:	str	x2, [sp, #56]
    8244:	bl	131f8 <__sanitizer_set_report_fd@@Base+0x2d8>
    8248:	adrp	x2, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    824c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    8250:	add	x22, x2, #0xe50
    8254:	add	x1, x1, #0x428
    8258:	strh	wzr, [x2, #3664]
    825c:	mov	x0, x19
    8260:	str	x1, [x22, #8]
    8264:	strh	wzr, [x22, #16]
    8268:	bl	14530 <__sanitizer_set_report_fd@@Base+0x1610>
    826c:	mov	x1, x20
    8270:	mov	x0, x19
    8274:	bl	13400 <__sanitizer_set_report_fd@@Base+0x4e0>
    8278:	mov	x1, x22
    827c:	mov	x0, x19
    8280:	bl	8138 <__ubsan_default_options@@Base+0x30>
    8284:	bl	6980 <__ubsan_default_options@plt>
    8288:	mov	x1, x0
    828c:	mov	x0, x19
    8290:	bl	144a8 <__sanitizer_set_report_fd@@Base+0x1588>
    8294:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8298:	add	x0, x0, #0x5b0
    829c:	bl	68c0 <getenv@plt>
    82a0:	mov	x1, x0
    82a4:	mov	x0, x19
    82a8:	bl	144a8 <__sanitizer_set_report_fd@@Base+0x1588>
    82ac:	mov	x0, x20
    82b0:	bl	13c58 <__sanitizer_set_report_fd@@Base+0xd38>
    82b4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    82b8:	ldr	x0, [x0, #3896]
    82bc:	ldr	w0, [x0]
    82c0:	cbnz	w0, 82e0 <__ubsan_default_options@@Base+0x1d8>
    82c4:	ldr	x21, [x21, #4056]
    82c8:	ldrb	w0, [x21, #122]
    82cc:	cbnz	w0, 82f0 <__ubsan_default_options@@Base+0x1e8>
    82d0:	ldp	x21, x22, [sp, #16]
    82d4:	ldr	x30, [sp, #32]
    82d8:	ldp	x19, x20, [sp], #288
    82dc:	ret
    82e0:	bl	13f08 <__sanitizer_set_report_fd@@Base+0xfe8>
    82e4:	ldr	x21, [x21, #4056]
    82e8:	ldrb	w0, [x21, #122]
    82ec:	cbz	w0, 82d0 <__ubsan_default_options@@Base+0x1c8>
    82f0:	mov	x0, x19
    82f4:	bl	13fe8 <__sanitizer_set_report_fd@@Base+0x10c8>
    82f8:	ldp	x21, x22, [sp, #16]
    82fc:	ldr	x30, [sp, #32]
    8300:	ldp	x19, x20, [sp], #288
    8304:	ret
    8308:	mov	x2, x0
    830c:	mov	w0, #0x1                   	// #1
    8310:	ldr	x2, [x2, #8]
    8314:	str	x1, [x2]
    8318:	ret
    831c:	nop
    8320:	mov	x2, x0
    8324:	stp	x19, x20, [sp, #-32]!
    8328:	mov	x19, x1
    832c:	mov	x0, x19
    8330:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8334:	add	x1, x1, #0x390
    8338:	ldr	x20, [x2, #8]
    833c:	str	x30, [sp, #16]
    8340:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    8344:	cbnz	w0, 835c <__ubsan_default_options@@Base+0x254>
    8348:	mov	w0, #0x1                   	// #1
    834c:	strb	wzr, [x20]
    8350:	ldr	x30, [sp, #16]
    8354:	ldp	x19, x20, [sp], #32
    8358:	ret
    835c:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8360:	mov	x0, x19
    8364:	add	x1, x1, #0x398
    8368:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    836c:	cbz	w0, 8348 <__ubsan_default_options@@Base+0x240>
    8370:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8374:	mov	x0, x19
    8378:	add	x1, x1, #0x3a0
    837c:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    8380:	cbz	w0, 8348 <__ubsan_default_options@@Base+0x240>
    8384:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8388:	mov	x0, x19
    838c:	add	x1, x1, #0x9e8
    8390:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    8394:	cbz	w0, 83ac <__ubsan_default_options@@Base+0x2a4>
    8398:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    839c:	mov	x0, x19
    83a0:	add	x1, x1, #0x3a8
    83a4:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    83a8:	cbnz	w0, 83bc <__ubsan_default_options@@Base+0x2b4>
    83ac:	mov	w1, #0x1                   	// #1
    83b0:	mov	w0, #0x1                   	// #1
    83b4:	strb	w1, [x20]
    83b8:	b	8350 <__ubsan_default_options@@Base+0x248>
    83bc:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    83c0:	mov	x0, x19
    83c4:	add	x1, x1, #0x3b0
    83c8:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    83cc:	cbz	w0, 83ac <__ubsan_default_options@@Base+0x2a4>
    83d0:	mov	x1, x19
    83d4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    83d8:	add	x0, x0, #0x3b8
    83dc:	bl	1a2a0 <OnPrint@@Base+0x310>
    83e0:	mov	w0, #0x0                   	// #0
    83e4:	ldr	x30, [sp, #16]
    83e8:	ldp	x19, x20, [sp], #32
    83ec:	ret
    83f0:	sub	sp, sp, #0x2c0
    83f4:	ldrb	w3, [x2]
    83f8:	mov	w4, #0xffffffff            	// #-1
    83fc:	stp	x19, x20, [sp]
    8400:	mov	x19, x0
    8404:	add	x0, x0, #0xc
    8408:	stp	x23, x24, [sp, #32]
    840c:	mov	x24, x2
    8410:	mov	x20, x1
    8414:	stp	x21, x22, [sp, #16]
    8418:	stp	x25, x26, [sp, #48]
    841c:	ldr	x1, [x2, #8]
    8420:	str	x30, [sp, #80]
    8424:	ldxr	w21, [x0]
    8428:	stxr	w2, w4, [x0]
    842c:	cbnz	w2, 8424 <__ubsan_default_options@@Base+0x31c>
    8430:	dmb	ish
    8434:	ldr	x0, [x19, #16]
    8438:	mov	w26, w3
    843c:	ldr	w25, [x19, #8]
    8440:	ldr	x23, [x19]
    8444:	ldrh	w4, [x0]
    8448:	cbnz	w4, 8484 <__ubsan_default_options@@Base+0x37c>
    844c:	ldrh	w0, [x0, #2]
    8450:	tbz	w0, #0, 8484 <__ubsan_default_options@@Base+0x37c>
    8454:	cbnz	w3, 8610 <__ubsan_default_options@@Base+0x508>
    8458:	mov	w26, #0x1                   	// #1
    845c:	mov	w22, #0x5                   	// #5
    8460:	cmn	w21, #0x1
    8464:	b.ne	8588 <__ubsan_default_options@@Base+0x480>  // b.any
    8468:	ldp	x19, x20, [sp]
    846c:	ldp	x21, x22, [sp, #16]
    8470:	ldp	x23, x24, [sp, #32]
    8474:	ldp	x25, x26, [sp, #48]
    8478:	ldr	x30, [sp, #80]
    847c:	add	sp, sp, #0x2c0
    8480:	ret
    8484:	mov	w22, #0x6                   	// #6
    8488:	cbz	w3, 8460 <__ubsan_default_options@@Base+0x358>
    848c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    8490:	ldr	x0, [x0, #3816]
    8494:	ldrb	w0, [x0, #17]
    8498:	cbnz	w0, 8468 <__ubsan_default_options@@Base+0x360>
    849c:	stp	x27, x28, [sp, #64]
    84a0:	mov	w28, #0x1                   	// #1
    84a4:	add	x26, sp, #0xc0
    84a8:	str	w28, [sp, #272]
    84ac:	mov	w3, w22
    84b0:	str	x23, [sp, #280]
    84b4:	add	x2, sp, #0x60
    84b8:	str	w25, [sp, #288]
    84bc:	mov	x0, x26
    84c0:	str	w21, [sp, #292]
    84c4:	add	x1, sp, #0x90
    84c8:	ldp	x6, x7, [sp, #272]
    84cc:	add	x27, sp, #0x110
    84d0:	ldr	x8, [x24, #16]
    84d4:	stp	x6, x7, [sp, #96]
    84d8:	ldp	x6, x7, [x24]
    84dc:	stp	x6, x7, [sp, #144]
    84e0:	ldp	x4, x5, [sp, #288]
    84e4:	stp	x4, x5, [sp, #112]
    84e8:	ldr	x9, [sp, #304]
    84ec:	str	x9, [sp, #128]
    84f0:	str	x8, [sp, #160]
    84f4:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    84f8:	ldr	x3, [x19, #16]
    84fc:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8500:	mov	x0, x27
    8504:	add	x2, x2, #0x630
    8508:	stp	x3, x20, [sp, #176]
    850c:	add	x3, sp, #0x130
    8510:	add	x1, sp, #0xb0
    8514:	str	w28, [sp, #272]
    8518:	str	x23, [sp, #280]
    851c:	stp	w25, w21, [x3, #-16]
    8520:	stp	wzr, w22, [x3, #8]
    8524:	str	x2, [sp, #320]
    8528:	str	wzr, [sp, #592]
    852c:	str	wzr, [sp, #600]
    8530:	str	xzr, [sp, #608]
    8534:	str	xzr, [sp, #616]
    8538:	str	wzr, [sp, #640]
    853c:	str	xzr, [sp, #648]
    8540:	str	xzr, [sp, #656]
    8544:	str	xzr, [sp, #680]
    8548:	str	wzr, [sp, #688]
    854c:	bl	7098 <__asan_backtrace_open@plt+0x668>
    8550:	ldr	x1, [x19, #16]
    8554:	bl	7040 <__asan_backtrace_open@plt+0x610>
    8558:	mov	x0, x27
    855c:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    8560:	mov	x0, x26
    8564:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    8568:	ldp	x19, x20, [sp]
    856c:	ldp	x21, x22, [sp, #16]
    8570:	ldp	x23, x24, [sp, #32]
    8574:	ldp	x25, x26, [sp, #48]
    8578:	ldp	x27, x28, [sp, #64]
    857c:	ldr	x30, [sp, #80]
    8580:	add	sp, sp, #0x2c0
    8584:	ret
    8588:	mov	x2, x23
    858c:	mov	w0, w22
    8590:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    8594:	tst	w0, #0xff
    8598:	b.ne	8468 <__ubsan_default_options@@Base+0x360>  // b.any
    859c:	cbz	w26, 848c <__ubsan_default_options@@Base+0x384>
    85a0:	stp	x27, x28, [sp, #64]
    85a4:	mov	w28, #0x1                   	// #1
    85a8:	str	w28, [sp, #272]
    85ac:	add	x26, sp, #0xc0
    85b0:	str	x23, [sp, #280]
    85b4:	mov	w3, w22
    85b8:	str	w25, [sp, #288]
    85bc:	add	x2, sp, #0x60
    85c0:	str	w21, [sp, #292]
    85c4:	mov	x0, x26
    85c8:	ldp	x6, x7, [sp, #272]
    85cc:	add	x1, sp, #0x90
    85d0:	ldr	x8, [x24, #16]
    85d4:	stp	x6, x7, [sp, #96]
    85d8:	add	x27, sp, #0x110
    85dc:	ldp	x6, x7, [x24]
    85e0:	stp	x6, x7, [sp, #144]
    85e4:	ldp	x4, x5, [sp, #288]
    85e8:	stp	x4, x5, [sp, #112]
    85ec:	ldr	x9, [sp, #304]
    85f0:	str	x9, [sp, #128]
    85f4:	str	x8, [sp, #160]
    85f8:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    85fc:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8600:	mov	x0, x27
    8604:	add	x2, x2, #0x5c0
    8608:	ldr	x3, [x19, #16]
    860c:	b	8508 <__ubsan_default_options@@Base+0x400>
    8610:	mov	w22, #0x5                   	// #5
    8614:	stp	x27, x28, [sp, #64]
    8618:	b	85a4 <__ubsan_default_options@@Base+0x49c>
    861c:	nop
    8620:	sub	sp, sp, #0x2b0
    8624:	stp	x19, x20, [sp]
    8628:	mov	x19, x0
    862c:	mov	x20, x2
    8630:	add	x0, x0, #0xc
    8634:	stp	x21, x22, [sp, #16]
    8638:	mov	x21, x1
    863c:	mov	w1, #0xffffffff            	// #-1
    8640:	stp	x25, x26, [sp, #48]
    8644:	str	x30, [sp, #72]
    8648:	ldxr	w22, [x0]
    864c:	stxr	w2, w1, [x0]
    8650:	cbnz	w2, 8648 <__ubsan_default_options@@Base+0x540>
    8654:	dmb	ish
    8658:	ldrb	w0, [x20]
    865c:	ldr	w26, [x19, #8]
    8660:	ldr	x25, [x19]
    8664:	cbnz	w0, 86a0 <__ubsan_default_options@@Base+0x598>
    8668:	cmp	w22, w1
    866c:	b.ne	8688 <__ubsan_default_options@@Base+0x580>  // b.any
    8670:	ldp	x19, x20, [sp]
    8674:	ldp	x21, x22, [sp, #16]
    8678:	ldp	x25, x26, [sp, #48]
    867c:	ldr	x30, [sp, #72]
    8680:	add	sp, sp, #0x2b0
    8684:	ret
    8688:	ldr	x1, [x20, #8]
    868c:	mov	x2, x25
    8690:	mov	w0, #0xe                   	// #14
    8694:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    8698:	tst	w0, #0xff
    869c:	b.ne	8670 <__ubsan_default_options@@Base+0x568>  // b.any
    86a0:	str	x25, [sp, #264]
    86a4:	add	x2, sp, #0x50
    86a8:	str	w26, [sp, #272]
    86ac:	add	x1, sp, #0x80
    86b0:	str	w22, [sp, #276]
    86b4:	mov	w3, #0xe                   	// #14
    86b8:	ldp	x8, x9, [x20]
    86bc:	str	x27, [sp, #64]
    86c0:	mov	w27, #0x1                   	// #1
    86c4:	str	w27, [sp, #256]
    86c8:	ldp	x4, x5, [sp, #272]
    86cc:	stp	x23, x24, [sp, #32]
    86d0:	add	x23, sp, #0xb0
    86d4:	ldp	x6, x7, [sp, #256]
    86d8:	stp	x6, x7, [sp, #80]
    86dc:	mov	x0, x23
    86e0:	ldr	x6, [x20, #16]
    86e4:	stp	x4, x5, [sp, #96]
    86e8:	add	x24, sp, #0x100
    86ec:	ldr	x10, [sp, #288]
    86f0:	str	x10, [sp, #112]
    86f4:	stp	x8, x9, [sp, #128]
    86f8:	str	x6, [sp, #144]
    86fc:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    8700:	ldr	x4, [x19, #24]
    8704:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8708:	add	x2, x2, #0x660
    870c:	mov	x3, #0xe00000000           	// #60129542144
    8710:	add	x1, sp, #0xa0
    8714:	mov	x0, x24
    8718:	stp	x4, x21, [sp, #160]
    871c:	str	w27, [sp, #256]
    8720:	str	x25, [sp, #264]
    8724:	str	w26, [sp, #272]
    8728:	str	w22, [sp, #276]
    872c:	stp	x3, x2, [sp, #296]
    8730:	str	wzr, [sp, #576]
    8734:	str	wzr, [sp, #584]
    8738:	str	xzr, [sp, #592]
    873c:	str	xzr, [sp, #600]
    8740:	str	wzr, [sp, #624]
    8744:	str	xzr, [sp, #632]
    8748:	str	xzr, [sp, #640]
    874c:	str	xzr, [sp, #664]
    8750:	str	wzr, [sp, #672]
    8754:	bl	7098 <__asan_backtrace_open@plt+0x668>
    8758:	ldr	x1, [x19, #16]
    875c:	bl	7040 <__asan_backtrace_open@plt+0x610>
    8760:	mov	x0, x24
    8764:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    8768:	mov	x0, x23
    876c:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    8770:	ldp	x19, x20, [sp]
    8774:	ldp	x21, x22, [sp, #16]
    8778:	ldp	x23, x24, [sp, #32]
    877c:	ldp	x25, x26, [sp, #48]
    8780:	ldr	x27, [sp, #64]
    8784:	ldr	x30, [sp, #72]
    8788:	add	sp, sp, #0x2b0
    878c:	ret
    8790:	sub	sp, sp, #0x2b0
    8794:	stp	x19, x20, [sp]
    8798:	mov	x19, x0
    879c:	mov	x20, x2
    87a0:	add	x0, x0, #0xc
    87a4:	stp	x21, x22, [sp, #16]
    87a8:	mov	x21, x1
    87ac:	mov	w1, #0xffffffff            	// #-1
    87b0:	stp	x23, x24, [sp, #32]
    87b4:	stp	x25, x26, [sp, #48]
    87b8:	str	x30, [sp, #72]
    87bc:	ldxr	w26, [x0]
    87c0:	stxr	w2, w1, [x0]
    87c4:	cbnz	w2, 87bc <__ubsan_default_options@@Base+0x6b4>
    87c8:	dmb	ish
    87cc:	ldrb	w0, [x20]
    87d0:	ldr	w25, [x19, #8]
    87d4:	ldr	x24, [x19]
    87d8:	cbnz	w0, 8818 <__ubsan_default_options@@Base+0x710>
    87dc:	cmp	w26, w1
    87e0:	b.ne	8800 <__ubsan_default_options@@Base+0x6f8>  // b.any
    87e4:	ldp	x19, x20, [sp]
    87e8:	ldp	x21, x22, [sp, #16]
    87ec:	ldp	x23, x24, [sp, #32]
    87f0:	ldp	x25, x26, [sp, #48]
    87f4:	ldr	x30, [sp, #72]
    87f8:	add	sp, sp, #0x2b0
    87fc:	ret
    8800:	ldr	x1, [x20, #8]
    8804:	mov	x2, x24
    8808:	mov	w0, #0x11                  	// #17
    880c:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    8810:	tst	w0, #0xff
    8814:	b.ne	87e4 <__ubsan_default_options@@Base+0x6dc>  // b.any
    8818:	str	x27, [sp, #64]
    881c:	mov	w27, #0x1                   	// #1
    8820:	str	w27, [sp, #256]
    8824:	add	x22, sp, #0xb0
    8828:	str	x24, [sp, #264]
    882c:	mov	x0, x22
    8830:	str	w25, [sp, #272]
    8834:	add	x2, sp, #0x50
    8838:	str	w26, [sp, #276]
    883c:	add	x1, sp, #0x80
    8840:	ldp	x6, x7, [sp, #256]
    8844:	stp	x6, x7, [sp, #80]
    8848:	mov	w3, #0x11                  	// #17
    884c:	ldp	x6, x7, [x20]
    8850:	add	x23, sp, #0x100
    8854:	ldp	x4, x5, [sp, #272]
    8858:	stp	x4, x5, [sp, #96]
    885c:	ldr	x4, [x20, #16]
    8860:	stp	x6, x7, [sp, #128]
    8864:	ldr	x8, [sp, #288]
    8868:	str	x8, [sp, #112]
    886c:	str	x4, [sp, #144]
    8870:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    8874:	str	w27, [sp, #256]
    8878:	ldr	x4, [x19, #16]
    887c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8880:	add	x2, x2, #0x688
    8884:	add	x1, sp, #0xa0
    8888:	mov	x3, #0x1100000000          	// #73014444032
    888c:	mov	x0, x23
    8890:	stp	x4, x21, [sp, #160]
    8894:	str	x24, [sp, #264]
    8898:	str	w25, [sp, #272]
    889c:	str	w26, [sp, #276]
    88a0:	stp	x3, x2, [sp, #296]
    88a4:	str	wzr, [sp, #576]
    88a8:	str	wzr, [sp, #584]
    88ac:	str	xzr, [sp, #592]
    88b0:	str	xzr, [sp, #600]
    88b4:	str	wzr, [sp, #624]
    88b8:	str	xzr, [sp, #632]
    88bc:	str	xzr, [sp, #640]
    88c0:	str	xzr, [sp, #664]
    88c4:	str	wzr, [sp, #672]
    88c8:	bl	7098 <__asan_backtrace_open@plt+0x668>
    88cc:	mov	x0, x23
    88d0:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    88d4:	mov	x0, x22
    88d8:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    88dc:	ldp	x19, x20, [sp]
    88e0:	ldp	x21, x22, [sp, #16]
    88e4:	ldp	x23, x24, [sp, #32]
    88e8:	ldp	x25, x26, [sp, #48]
    88ec:	ldr	x27, [sp, #64]
    88f0:	ldr	x30, [sp, #72]
    88f4:	add	sp, sp, #0x2b0
    88f8:	ret
    88fc:	nop
    8900:	sub	sp, sp, #0x2c0
    8904:	stp	x19, x20, [sp]
    8908:	mov	x20, x3
    890c:	mov	x19, x0
    8910:	add	x0, x0, #0xc
    8914:	stp	x21, x22, [sp, #16]
    8918:	stp	x23, x24, [sp, #32]
    891c:	stp	x25, x26, [sp, #48]
    8920:	ldrb	w25, [x3]
    8924:	mov	w3, #0xffffffff            	// #-1
    8928:	ldr	x26, [x20, #8]
    892c:	str	x30, [sp, #64]
    8930:	ldxr	w21, [x0]
    8934:	stxr	w4, w3, [x0]
    8938:	cbnz	w4, 8930 <__ubsan_default_options@@Base+0x828>
    893c:	dmb	ish
    8940:	ldr	x0, [x19, #16]
    8944:	stp	x0, x1, [sp, #160]
    8948:	ldr	w22, [x19, #8]
    894c:	stp	x0, x2, [sp, #176]
    8950:	ldrh	w1, [x0]
    8954:	ldr	x23, [x19]
    8958:	cbnz	w1, 8988 <__ubsan_default_options@@Base+0x880>
    895c:	ldrh	w0, [x0, #2]
    8960:	tbz	w0, #0, 8a9c <__ubsan_default_options@@Base+0x994>
    8964:	add	x0, sp, #0xb0
    8968:	bl	c4a0 <__ubsan_get_current_report_data@@Base+0x548>
    896c:	cmn	x0, #0x1
    8970:	b.ne	897c <__ubsan_default_options@@Base+0x874>  // b.any
    8974:	cmn	x1, #0x1
    8978:	b.eq	8afc <__ubsan_default_options@@Base+0x9f4>  // b.none
    897c:	ldr	x0, [x19, #16]
    8980:	ldrh	w0, [x0]
    8984:	cbz	w0, 8a9c <__ubsan_default_options@@Base+0x994>
    8988:	mov	w24, #0x8                   	// #8
    898c:	cbnz	w25, 8aa4 <__ubsan_default_options@@Base+0x99c>
    8990:	cmn	w21, #0x1
    8994:	b.ne	89b4 <__ubsan_default_options@@Base+0x8ac>  // b.any
    8998:	ldp	x19, x20, [sp]
    899c:	ldp	x21, x22, [sp, #16]
    89a0:	ldp	x23, x24, [sp, #32]
    89a4:	ldp	x25, x26, [sp, #48]
    89a8:	ldr	x30, [sp, #64]
    89ac:	add	sp, sp, #0x2c0
    89b0:	ret
    89b4:	mov	x1, x26
    89b8:	mov	x2, x23
    89bc:	mov	w0, w24
    89c0:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    89c4:	tst	w0, #0xff
    89c8:	b.ne	8998 <__ubsan_default_options@@Base+0x890>  // b.any
    89cc:	mov	w0, #0x1                   	// #1
    89d0:	str	w0, [sp, #272]
    89d4:	str	x23, [sp, #280]
    89d8:	add	x25, sp, #0xc0
    89dc:	str	w22, [sp, #288]
    89e0:	mov	w3, w24
    89e4:	str	w21, [sp, #292]
    89e8:	add	x2, sp, #0x50
    89ec:	ldp	x6, x7, [sp, #272]
    89f0:	stp	x6, x7, [sp, #80]
    89f4:	add	x1, sp, #0x80
    89f8:	ldp	x6, x7, [x20]
    89fc:	mov	x0, x25
    8a00:	ldp	x4, x5, [sp, #288]
    8a04:	stp	x4, x5, [sp, #96]
    8a08:	ldr	x4, [x20, #16]
    8a0c:	stp	x6, x7, [sp, #128]
    8a10:	ldr	x8, [sp, #304]
    8a14:	str	x8, [sp, #112]
    8a18:	str	x4, [sp, #144]
    8a1c:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    8a20:	cmp	w24, #0x5
    8a24:	b.eq	8b58 <__ubsan_default_options@@Base+0xa50>  // b.none
    8a28:	mov	w2, #0x1                   	// #1
    8a2c:	str	w2, [sp, #272]
    8a30:	add	x2, sp, #0x130
    8a34:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8a38:	add	x1, x1, #0x700
    8a3c:	str	x23, [sp, #280]
    8a40:	add	x0, sp, #0x110
    8a44:	stp	w22, w21, [x2, #-16]
    8a48:	stp	wzr, w24, [x2, #8]
    8a4c:	str	x1, [sp, #320]
    8a50:	str	wzr, [sp, #592]
    8a54:	str	wzr, [sp, #600]
    8a58:	str	xzr, [sp, #608]
    8a5c:	str	xzr, [sp, #616]
    8a60:	str	wzr, [sp, #640]
    8a64:	str	xzr, [sp, #648]
    8a68:	str	xzr, [sp, #656]
    8a6c:	str	xzr, [sp, #680]
    8a70:	str	wzr, [sp, #688]
    8a74:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    8a78:	mov	x0, x25
    8a7c:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    8a80:	ldp	x19, x20, [sp]
    8a84:	ldp	x21, x22, [sp, #16]
    8a88:	ldp	x23, x24, [sp, #32]
    8a8c:	ldp	x25, x26, [sp, #48]
    8a90:	ldr	x30, [sp, #64]
    8a94:	add	sp, sp, #0x2c0
    8a98:	ret
    8a9c:	mov	w24, #0x7                   	// #7
    8aa0:	cbz	w25, 8990 <__ubsan_default_options@@Base+0x888>
    8aa4:	mov	w0, #0x1                   	// #1
    8aa8:	str	w0, [sp, #272]
    8aac:	str	x23, [sp, #280]
    8ab0:	add	x25, sp, #0xc0
    8ab4:	str	w22, [sp, #288]
    8ab8:	mov	w3, w24
    8abc:	str	w21, [sp, #292]
    8ac0:	add	x2, sp, #0x50
    8ac4:	ldp	x6, x7, [sp, #272]
    8ac8:	stp	x6, x7, [sp, #80]
    8acc:	add	x1, sp, #0x80
    8ad0:	ldp	x6, x7, [x20]
    8ad4:	mov	x0, x25
    8ad8:	ldp	x4, x5, [sp, #288]
    8adc:	stp	x4, x5, [sp, #96]
    8ae0:	ldr	x4, [x20, #16]
    8ae4:	stp	x6, x7, [sp, #128]
    8ae8:	ldr	x8, [sp, #304]
    8aec:	str	x8, [sp, #112]
    8af0:	str	x4, [sp, #144]
    8af4:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    8af8:	b	8a28 <__ubsan_default_options@@Base+0x920>
    8afc:	mov	w24, #0x5                   	// #5
    8b00:	cbz	w25, 8990 <__ubsan_default_options@@Base+0x888>
    8b04:	mov	w0, #0x1                   	// #1
    8b08:	str	w0, [sp, #272]
    8b0c:	str	x23, [sp, #280]
    8b10:	add	x25, sp, #0xc0
    8b14:	str	w22, [sp, #288]
    8b18:	add	x2, sp, #0x50
    8b1c:	str	w21, [sp, #292]
    8b20:	add	x1, sp, #0x80
    8b24:	ldp	x6, x7, [sp, #272]
    8b28:	stp	x6, x7, [sp, #80]
    8b2c:	mov	x0, x25
    8b30:	ldp	x6, x7, [x20]
    8b34:	mov	w3, #0x5                   	// #5
    8b38:	ldp	x4, x5, [sp, #288]
    8b3c:	stp	x4, x5, [sp, #96]
    8b40:	ldr	x4, [x20, #16]
    8b44:	stp	x6, x7, [sp, #128]
    8b48:	ldr	x8, [sp, #304]
    8b4c:	str	x8, [sp, #112]
    8b50:	str	x4, [sp, #144]
    8b54:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    8b58:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8b5c:	add	x2, x2, #0x6c8
    8b60:	mov	w4, #0x1                   	// #1
    8b64:	mov	x3, #0x500000000           	// #21474836480
    8b68:	add	x20, sp, #0x110
    8b6c:	add	x1, sp, #0xa0
    8b70:	mov	x0, x20
    8b74:	str	w4, [sp, #272]
    8b78:	str	x23, [sp, #280]
    8b7c:	str	w22, [sp, #288]
    8b80:	str	w21, [sp, #292]
    8b84:	stp	x3, x2, [sp, #312]
    8b88:	str	wzr, [sp, #592]
    8b8c:	str	wzr, [sp, #600]
    8b90:	str	xzr, [sp, #608]
    8b94:	str	xzr, [sp, #616]
    8b98:	str	wzr, [sp, #640]
    8b9c:	str	xzr, [sp, #648]
    8ba0:	str	xzr, [sp, #656]
    8ba4:	str	xzr, [sp, #680]
    8ba8:	str	wzr, [sp, #688]
    8bac:	bl	7098 <__asan_backtrace_open@plt+0x668>
    8bb0:	ldr	x1, [x19, #16]
    8bb4:	bl	7040 <__asan_backtrace_open@plt+0x610>
    8bb8:	mov	x0, x20
    8bbc:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    8bc0:	b	8a78 <__ubsan_default_options@@Base+0x970>
    8bc4:	nop
    8bc8:	sub	sp, sp, #0x2c0
    8bcc:	stp	x19, x20, [sp]
    8bd0:	mov	x19, x0
    8bd4:	mov	x20, x2
    8bd8:	add	x0, x0, #0xc
    8bdc:	stp	x21, x22, [sp, #16]
    8be0:	mov	x21, x1
    8be4:	mov	w1, #0xffffffff            	// #-1
    8be8:	stp	x23, x24, [sp, #32]
    8bec:	stp	x27, x28, [sp, #64]
    8bf0:	str	x30, [sp, #80]
    8bf4:	ldxr	w22, [x0]
    8bf8:	stxr	w2, w1, [x0]
    8bfc:	cbnz	w2, 8bf4 <__ubsan_default_options@@Base+0xaec>
    8c00:	dmb	ish
    8c04:	ldr	x0, [x19, #16]
    8c08:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8c0c:	ldr	w24, [x19, #8]
    8c10:	add	x1, x1, #0x718
    8c14:	add	x0, x0, #0x4
    8c18:	ldr	x23, [x19]
    8c1c:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    8c20:	cbnz	w0, 8d58 <__ubsan_default_options@@Base+0xc50>
    8c24:	mov	w27, #0x13                  	// #19
    8c28:	ldrb	w0, [x20]
    8c2c:	cbnz	w0, 8c6c <__ubsan_default_options@@Base+0xb64>
    8c30:	cmn	w22, #0x1
    8c34:	b.ne	8c54 <__ubsan_default_options@@Base+0xb4c>  // b.any
    8c38:	ldp	x19, x20, [sp]
    8c3c:	ldp	x21, x22, [sp, #16]
    8c40:	ldp	x23, x24, [sp, #32]
    8c44:	ldp	x27, x28, [sp, #64]
    8c48:	ldr	x30, [sp, #80]
    8c4c:	add	sp, sp, #0x2c0
    8c50:	ret
    8c54:	ldr	x1, [x20, #8]
    8c58:	mov	x2, x23
    8c5c:	mov	w0, w27
    8c60:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    8c64:	tst	w0, #0xff
    8c68:	b.ne	8c38 <__ubsan_default_options@@Base+0xb30>  // b.any
    8c6c:	mov	w28, #0x1                   	// #1
    8c70:	str	w28, [sp, #272]
    8c74:	str	x23, [sp, #280]
    8c78:	mov	w3, w27
    8c7c:	str	w24, [sp, #288]
    8c80:	add	x2, sp, #0x60
    8c84:	str	w22, [sp, #292]
    8c88:	add	x1, sp, #0x90
    8c8c:	ldp	x6, x7, [sp, #272]
    8c90:	stp	x25, x26, [sp, #48]
    8c94:	add	x25, sp, #0xc0
    8c98:	ldr	x8, [x20, #16]
    8c9c:	stp	x6, x7, [sp, #96]
    8ca0:	mov	x0, x25
    8ca4:	ldp	x6, x7, [x20]
    8ca8:	stp	x6, x7, [sp, #144]
    8cac:	add	x26, sp, #0x110
    8cb0:	ldp	x4, x5, [sp, #288]
    8cb4:	stp	x4, x5, [sp, #112]
    8cb8:	ldr	x9, [sp, #304]
    8cbc:	str	x9, [sp, #128]
    8cc0:	str	x8, [sp, #160]
    8cc4:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    8cc8:	str	w28, [sp, #272]
    8ccc:	ldr	x3, [x19, #16]
    8cd0:	stp	x3, x21, [sp, #176]
    8cd4:	add	x3, sp, #0x130
    8cd8:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8cdc:	add	x2, x2, #0x728
    8ce0:	str	x23, [sp, #280]
    8ce4:	add	x1, sp, #0xb0
    8ce8:	stp	w24, w22, [x3, #-16]
    8cec:	mov	x0, x26
    8cf0:	stp	wzr, w27, [x3, #8]
    8cf4:	str	x2, [sp, #320]
    8cf8:	str	wzr, [sp, #592]
    8cfc:	str	wzr, [sp, #600]
    8d00:	str	xzr, [sp, #608]
    8d04:	str	xzr, [sp, #616]
    8d08:	str	wzr, [sp, #640]
    8d0c:	str	xzr, [sp, #648]
    8d10:	str	xzr, [sp, #656]
    8d14:	str	xzr, [sp, #680]
    8d18:	str	wzr, [sp, #688]
    8d1c:	bl	7098 <__asan_backtrace_open@plt+0x668>
    8d20:	ldr	x1, [x19, #16]
    8d24:	bl	7040 <__asan_backtrace_open@plt+0x610>
    8d28:	mov	x0, x26
    8d2c:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    8d30:	mov	x0, x25
    8d34:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    8d38:	ldp	x19, x20, [sp]
    8d3c:	ldp	x21, x22, [sp, #16]
    8d40:	ldp	x23, x24, [sp, #32]
    8d44:	ldp	x25, x26, [sp, #48]
    8d48:	ldp	x27, x28, [sp, #64]
    8d4c:	ldr	x30, [sp, #80]
    8d50:	add	sp, sp, #0x2c0
    8d54:	ret
    8d58:	ldr	x0, [x19, #16]
    8d5c:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8d60:	mov	x2, #0x6                   	// #6
    8d64:	add	x1, x1, #0x720
    8d68:	add	x0, x0, #0x4
    8d6c:	mov	w27, #0x14                  	// #20
    8d70:	bl	14828 <__sanitizer_set_report_fd@@Base+0x1908>
    8d74:	cbnz	w0, 8c28 <__ubsan_default_options@@Base+0xb20>
    8d78:	b	8c24 <__ubsan_default_options@@Base+0xb1c>
    8d7c:	nop
    8d80:	sub	sp, sp, #0x280
    8d84:	mov	x4, x1
    8d88:	add	x2, sp, #0x30
    8d8c:	add	x1, sp, #0x60
    8d90:	mov	w3, #0x10                  	// #16
    8d94:	stp	x19, x20, [sp]
    8d98:	mov	x19, x0
    8d9c:	add	x20, sp, #0x80
    8da0:	ldr	x0, [x0]
    8da4:	stp	x21, x22, [sp, #16]
    8da8:	mov	w22, #0x1                   	// #1
    8dac:	str	w22, [sp, #208]
    8db0:	add	x21, sp, #0xd0
    8db4:	str	x0, [sp, #216]
    8db8:	ldr	x0, [x19, #8]
    8dbc:	str	x0, [sp, #224]
    8dc0:	ldp	x6, x7, [sp, #208]
    8dc4:	stp	x6, x7, [sp, #48]
    8dc8:	mov	x0, x20
    8dcc:	ldp	x6, x7, [x4]
    8dd0:	str	x30, [sp, #32]
    8dd4:	ldp	x8, x9, [sp, #224]
    8dd8:	ldr	x4, [x4, #16]
    8ddc:	stp	x8, x9, [sp, #64]
    8de0:	ldr	x5, [sp, #240]
    8de4:	str	x5, [sp, #80]
    8de8:	stp	x6, x7, [sp, #96]
    8dec:	str	x4, [sp, #112]
    8df0:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    8df4:	ldp	x4, x3, [x19]
    8df8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8dfc:	add	x1, x1, #0x768
    8e00:	mov	x2, #0x1000000000          	// #68719476736
    8e04:	mov	x0, x21
    8e08:	str	w22, [sp, #208]
    8e0c:	stp	x4, x3, [sp, #216]
    8e10:	stp	x2, x1, [sp, #248]
    8e14:	str	wzr, [sp, #528]
    8e18:	str	wzr, [sp, #536]
    8e1c:	str	xzr, [sp, #544]
    8e20:	str	xzr, [sp, #552]
    8e24:	str	wzr, [sp, #576]
    8e28:	str	xzr, [sp, #584]
    8e2c:	str	xzr, [sp, #592]
    8e30:	str	xzr, [sp, #616]
    8e34:	str	wzr, [sp, #624]
    8e38:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    8e3c:	mov	x0, x20
    8e40:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    8e44:	ldp	x19, x20, [sp]
    8e48:	ldp	x21, x22, [sp, #16]
    8e4c:	ldr	x30, [sp, #32]
    8e50:	add	sp, sp, #0x280
    8e54:	ret
    8e58:	sub	sp, sp, #0x280
    8e5c:	mov	x4, x1
    8e60:	add	x2, sp, #0x30
    8e64:	add	x1, sp, #0x60
    8e68:	mov	w3, #0xf                   	// #15
    8e6c:	stp	x19, x20, [sp]
    8e70:	mov	x19, x0
    8e74:	add	x20, sp, #0x80
    8e78:	ldr	x0, [x0]
    8e7c:	stp	x21, x22, [sp, #16]
    8e80:	mov	w22, #0x1                   	// #1
    8e84:	str	w22, [sp, #208]
    8e88:	add	x21, sp, #0xd0
    8e8c:	str	x0, [sp, #216]
    8e90:	ldr	x0, [x19, #8]
    8e94:	str	x0, [sp, #224]
    8e98:	ldp	x6, x7, [sp, #208]
    8e9c:	stp	x6, x7, [sp, #48]
    8ea0:	mov	x0, x20
    8ea4:	ldp	x6, x7, [x4]
    8ea8:	str	x30, [sp, #32]
    8eac:	ldp	x8, x9, [sp, #224]
    8eb0:	ldr	x4, [x4, #16]
    8eb4:	stp	x8, x9, [sp, #64]
    8eb8:	ldr	x5, [sp, #240]
    8ebc:	str	x5, [sp, #80]
    8ec0:	stp	x6, x7, [sp, #96]
    8ec4:	str	x4, [sp, #112]
    8ec8:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    8ecc:	ldp	x4, x3, [x19]
    8ed0:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    8ed4:	add	x1, x1, #0x7c0
    8ed8:	mov	x2, #0xf00000000           	// #64424509440
    8edc:	mov	x0, x21
    8ee0:	str	w22, [sp, #208]
    8ee4:	stp	x4, x3, [sp, #216]
    8ee8:	stp	x2, x1, [sp, #248]
    8eec:	str	wzr, [sp, #528]
    8ef0:	str	wzr, [sp, #536]
    8ef4:	str	xzr, [sp, #544]
    8ef8:	str	xzr, [sp, #552]
    8efc:	str	wzr, [sp, #576]
    8f00:	str	xzr, [sp, #584]
    8f04:	str	xzr, [sp, #592]
    8f08:	str	xzr, [sp, #616]
    8f0c:	str	wzr, [sp, #624]
    8f10:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    8f14:	mov	x0, x20
    8f18:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    8f1c:	ldp	x19, x20, [sp]
    8f20:	ldp	x21, x22, [sp, #16]
    8f24:	ldr	x30, [sp, #32]
    8f28:	add	sp, sp, #0x280
    8f2c:	ret
    8f30:	sub	sp, sp, #0x300
    8f34:	stp	x19, x20, [sp]
    8f38:	mov	x20, x2
    8f3c:	mov	x19, x0
    8f40:	stp	x21, x22, [sp, #16]
    8f44:	add	x22, sp, #0x150
    8f48:	mov	x2, #0x8                   	// #8
    8f4c:	mov	x21, x1
    8f50:	mov	x1, x0
    8f54:	mov	x0, x22
    8f58:	stp	x23, x24, [sp, #32]
    8f5c:	stp	x25, x26, [sp, #48]
    8f60:	stp	x27, x28, [sp, #64]
    8f64:	ldr	x23, [x20, #8]
    8f68:	str	x30, [sp, #80]
    8f6c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    8f70:	ldr	x0, [sp, #336]
    8f74:	ldrb	w1, [x0]
    8f78:	ldrb	w0, [x0, #1]
    8f7c:	add	w2, w1, w0
    8f80:	cmp	w2, #0x1
    8f84:	b.ls	8fe8 <__ubsan_default_options@@Base+0xee0>  // b.plast
    8f88:	cmp	w1, #0xff
    8f8c:	b.eq	8fe8 <__ubsan_default_options@@Base+0xee0>  // b.none
    8f90:	cmp	w0, #0xff
    8f94:	b.eq	8fe8 <__ubsan_default_options@@Base+0xee0>  // b.none
    8f98:	add	x0, x19, #0xc
    8f9c:	mov	w1, #0xffffffff            	// #-1
    8fa0:	ldxr	w26, [x0]
    8fa4:	stxr	w2, w1, [x0]
    8fa8:	cbnz	w2, 8fa0 <__ubsan_default_options@@Base+0xe98>
    8fac:	dmb	ish
    8fb0:	ldrb	w0, [x20]
    8fb4:	ldr	w28, [x19, #8]
    8fb8:	ldr	x27, [x19]
    8fbc:	cbnz	w0, 9128 <__ubsan_default_options@@Base+0x1020>
    8fc0:	cmn	w26, #0x1
    8fc4:	b.ne	910c <__ubsan_default_options@@Base+0x1004>  // b.any
    8fc8:	ldp	x19, x20, [sp]
    8fcc:	ldp	x21, x22, [sp, #16]
    8fd0:	ldp	x23, x24, [sp, #32]
    8fd4:	ldp	x25, x26, [sp, #48]
    8fd8:	ldp	x27, x28, [sp, #64]
    8fdc:	ldr	x30, [sp, #80]
    8fe0:	add	sp, sp, #0x300
    8fe4:	ret
    8fe8:	cbz	x23, 9138 <__ubsan_default_options@@Base+0x1030>
    8fec:	sub	x0, x23, #0x4
    8ff0:	bl	7020 <__asan_backtrace_open@plt+0x5f0>
    8ff4:	ldp	x23, x9, [x19]
    8ff8:	mov	x25, x0
    8ffc:	mov	x24, x0
    9000:	mov	w26, #0x0                   	// #0
    9004:	mov	w28, #0x0                   	// #0
    9008:	mov	x27, #0x0                   	// #0
    900c:	mov	w8, #0x3                   	// #3
    9010:	str	w8, [sp, #216]
    9014:	add	x19, sp, #0x100
    9018:	str	x27, [sp, #224]
    901c:	add	x2, sp, #0x70
    9020:	stp	w28, w26, [sp, #232]
    9024:	mov	x0, x19
    9028:	ldp	x6, x7, [sp, #216]
    902c:	stp	x6, x7, [sp, #112]
    9030:	add	x1, sp, #0xa0
    9034:	ldp	x6, x7, [x20]
    9038:	mov	w3, #0x12                  	// #18
    903c:	ldp	x4, x5, [sp, #232]
    9040:	stp	x4, x5, [sp, #128]
    9044:	ldr	x4, [x20, #16]
    9048:	str	w8, [sp, #100]
    904c:	str	x9, [sp, #104]
    9050:	str	x24, [sp, #144]
    9054:	stp	x6, x7, [sp, #160]
    9058:	str	x4, [sp, #176]
    905c:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    9060:	ldr	w8, [sp, #100]
    9064:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9068:	add	x2, x2, #0x808
    906c:	mov	x3, #0x1200000000          	// #77309411328
    9070:	add	x1, sp, #0xc8
    9074:	mov	x0, x22
    9078:	stp	x23, x21, [sp, #200]
    907c:	str	w8, [sp, #336]
    9080:	str	x27, [sp, #344]
    9084:	str	w28, [sp, #352]
    9088:	str	w26, [sp, #356]
    908c:	stp	x24, x3, [sp, #368]
    9090:	str	x2, [sp, #384]
    9094:	str	wzr, [sp, #656]
    9098:	str	wzr, [sp, #664]
    909c:	str	xzr, [sp, #672]
    90a0:	str	xzr, [sp, #680]
    90a4:	str	wzr, [sp, #704]
    90a8:	str	xzr, [sp, #712]
    90ac:	str	xzr, [sp, #720]
    90b0:	str	xzr, [sp, #744]
    90b4:	str	wzr, [sp, #752]
    90b8:	bl	7098 <__asan_backtrace_open@plt+0x668>
    90bc:	mov	x1, x23
    90c0:	bl	7040 <__asan_backtrace_open@plt+0x610>
    90c4:	ldr	x9, [sp, #104]
    90c8:	mov	x1, x9
    90cc:	bl	7040 <__asan_backtrace_open@plt+0x610>
    90d0:	mov	x0, x22
    90d4:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    90d8:	mov	x0, x19
    90dc:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    90e0:	cbz	x25, 8fc8 <__ubsan_default_options@@Base+0xec0>
    90e4:	mov	x0, x25
    90e8:	bl	1fe60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
    90ec:	ldp	x19, x20, [sp]
    90f0:	ldp	x21, x22, [sp, #16]
    90f4:	ldp	x23, x24, [sp, #32]
    90f8:	ldp	x25, x26, [sp, #48]
    90fc:	ldp	x27, x28, [sp, #64]
    9100:	ldr	x30, [sp, #80]
    9104:	add	sp, sp, #0x300
    9108:	ret
    910c:	mov	x1, x23
    9110:	mov	x2, x27
    9114:	mov	w0, #0x12                  	// #18
    9118:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    911c:	tst	w0, #0xff
    9120:	b.ne	8fc8 <__ubsan_default_options@@Base+0xec0>  // b.any
    9124:	nop
    9128:	mov	w8, #0x1                   	// #1
    912c:	mov	x25, #0x0                   	// #0
    9130:	ldp	x23, x9, [x19, #16]
    9134:	b	9010 <__ubsan_default_options@@Base+0xf08>
    9138:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    913c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9140:	add	x2, x2, #0x7f0
    9144:	add	x0, x0, #0x60
    9148:	mov	x4, #0x0                   	// #0
    914c:	mov	x3, #0x0                   	// #0
    9150:	mov	w1, #0x2b                  	// #43
    9154:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    9158:	sub	sp, sp, #0x2c0
    915c:	stp	x25, x26, [sp, #48]
    9160:	mov	x25, x3
    9164:	stp	x19, x20, [sp]
    9168:	mov	x19, x0
    916c:	add	x0, x0, #0xc
    9170:	stp	x21, x22, [sp, #16]
    9174:	stp	x23, x24, [sp, #32]
    9178:	ldrb	w24, [x3]
    917c:	mov	w3, #0xffffffff            	// #-1
    9180:	ldr	x26, [x25, #8]
    9184:	str	x30, [sp, #72]
    9188:	ldxr	w21, [x0]
    918c:	stxr	w4, w3, [x0]
    9190:	cbnz	w4, 9188 <__ubsan_default_options@@Base+0x1080>
    9194:	dmb	ish
    9198:	ldr	x0, [x19, #24]
    919c:	stp	x1, x0, [sp, #168]
    91a0:	ldr	w23, [x19, #8]
    91a4:	ldr	x1, [x19, #16]
    91a8:	str	x1, [sp, #160]
    91ac:	ldrh	w1, [x0]
    91b0:	str	x2, [sp, #184]
    91b4:	ldr	x22, [x19]
    91b8:	cbnz	w1, 91c8 <__ubsan_default_options@@Base+0x10c0>
    91bc:	ldrh	w0, [x0, #2]
    91c0:	tbnz	w0, #0, 933c <__ubsan_default_options@@Base+0x1234>
    91c4:	nop
    91c8:	add	x20, sp, #0xb0
    91cc:	mov	x0, x20
    91d0:	bl	c620 <__ubsan_get_current_report_data@@Base+0x6c8>
    91d4:	ldr	x2, [x19, #16]
    91d8:	ldrh	w3, [x2]
    91dc:	cbnz	w3, 9558 <__ubsan_default_options@@Base+0x1450>
    91e0:	ldrh	w2, [x2, #2]
    91e4:	mov	w3, #0x1                   	// #1
    91e8:	asr	w2, w2, #1
    91ec:	lsl	w2, w3, w2
    91f0:	cbz	x1, 9354 <__ubsan_default_options@@Base+0x124c>
    91f4:	cbnz	w24, 93b4 <__ubsan_default_options@@Base+0x12ac>
    91f8:	str	x27, [sp, #64]
    91fc:	mov	w27, #0xd                   	// #13
    9200:	cmn	w21, #0x1
    9204:	b.eq	9538 <__ubsan_default_options@@Base+0x1430>  // b.none
    9208:	mov	x1, x26
    920c:	mov	x2, x22
    9210:	mov	w0, w27
    9214:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    9218:	tst	w0, #0xff
    921c:	b.ne	9538 <__ubsan_default_options@@Base+0x1430>  // b.any
    9220:	mov	w0, #0x1                   	// #1
    9224:	str	w0, [sp, #272]
    9228:	str	x22, [sp, #280]
    922c:	add	x24, sp, #0xc0
    9230:	str	w23, [sp, #288]
    9234:	mov	w3, w27
    9238:	str	w21, [sp, #292]
    923c:	add	x2, sp, #0x50
    9240:	ldp	x6, x7, [sp, #272]
    9244:	stp	x6, x7, [sp, #80]
    9248:	add	x1, sp, #0x80
    924c:	ldp	x6, x7, [x25]
    9250:	mov	x0, x24
    9254:	ldp	x4, x5, [sp, #288]
    9258:	stp	x4, x5, [sp, #96]
    925c:	ldr	x4, [x25, #16]
    9260:	stp	x6, x7, [sp, #128]
    9264:	ldr	x8, [sp, #304]
    9268:	str	x8, [sp, #112]
    926c:	str	x4, [sp, #144]
    9270:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    9274:	cmp	w27, #0xd
    9278:	ldr	x27, [sp, #64]
    927c:	b.eq	9408 <__ubsan_default_options@@Base+0x1300>  // b.none
    9280:	ldr	x0, [sp, #160]
    9284:	add	x26, sp, #0xa0
    9288:	ldrh	w1, [x0]
    928c:	cbnz	w1, 92a8 <__ubsan_default_options@@Base+0x11a0>
    9290:	ldrh	w0, [x0, #2]
    9294:	add	x26, sp, #0xa0
    9298:	tbz	w0, #0, 92a8 <__ubsan_default_options@@Base+0x11a0>
    929c:	mov	x0, x26
    92a0:	bl	c4a0 <__ubsan_get_current_report_data@@Base+0x548>
    92a4:	tbnz	x1, #63, 957c <__ubsan_default_options@@Base+0x1474>
    92a8:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    92ac:	add	x2, x2, #0x910
    92b0:	mov	w4, #0x1                   	// #1
    92b4:	mov	x3, #0xc00000000           	// #51539607552
    92b8:	add	x25, sp, #0x110
    92bc:	mov	x1, x26
    92c0:	mov	x0, x25
    92c4:	str	w4, [sp, #272]
    92c8:	str	x22, [sp, #280]
    92cc:	str	w23, [sp, #288]
    92d0:	str	w21, [sp, #292]
    92d4:	stp	x3, x2, [sp, #312]
    92d8:	str	wzr, [sp, #592]
    92dc:	str	wzr, [sp, #600]
    92e0:	str	xzr, [sp, #608]
    92e4:	str	xzr, [sp, #616]
    92e8:	str	wzr, [sp, #640]
    92ec:	str	xzr, [sp, #648]
    92f0:	str	xzr, [sp, #656]
    92f4:	str	xzr, [sp, #680]
    92f8:	str	wzr, [sp, #688]
    92fc:	bl	7098 <__asan_backtrace_open@plt+0x668>
    9300:	mov	x1, x20
    9304:	bl	7098 <__asan_backtrace_open@plt+0x668>
    9308:	ldr	x1, [x19, #16]
    930c:	bl	7040 <__asan_backtrace_open@plt+0x610>
    9310:	mov	x0, x25
    9314:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    9318:	mov	x0, x24
    931c:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    9320:	ldp	x19, x20, [sp]
    9324:	ldp	x21, x22, [sp, #16]
    9328:	ldp	x23, x24, [sp, #32]
    932c:	ldp	x25, x26, [sp, #48]
    9330:	ldr	x30, [sp, #72]
    9334:	add	sp, sp, #0x2c0
    9338:	ret
    933c:	add	x20, sp, #0xb0
    9340:	mov	x0, x20
    9344:	bl	c4a0 <__ubsan_get_current_report_data@@Base+0x548>
    9348:	tbz	x1, #63, 91cc <__ubsan_default_options@@Base+0x10c4>
    934c:	cbz	w24, 91f8 <__ubsan_default_options@@Base+0x10f0>
    9350:	b	93b4 <__ubsan_default_options@@Base+0x12ac>
    9354:	cmp	x2, x0
    9358:	b.ls	91f4 <__ubsan_default_options@@Base+0x10ec>  // b.plast
    935c:	cbz	w24, 95c0 <__ubsan_default_options@@Base+0x14b8>
    9360:	str	w3, [sp, #272]
    9364:	add	x24, sp, #0xc0
    9368:	str	x22, [sp, #280]
    936c:	mov	x0, x24
    9370:	str	w23, [sp, #288]
    9374:	add	x2, sp, #0x50
    9378:	str	w21, [sp, #292]
    937c:	add	x1, sp, #0x80
    9380:	ldp	x6, x7, [sp, #272]
    9384:	stp	x6, x7, [sp, #80]
    9388:	mov	w3, #0xc                   	// #12
    938c:	ldp	x6, x7, [x25]
    9390:	ldp	x4, x5, [sp, #288]
    9394:	stp	x4, x5, [sp, #96]
    9398:	ldr	x4, [x25, #16]
    939c:	stp	x6, x7, [sp, #128]
    93a0:	ldr	x8, [sp, #304]
    93a4:	str	x8, [sp, #112]
    93a8:	str	x4, [sp, #144]
    93ac:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    93b0:	b	9280 <__ubsan_default_options@@Base+0x1178>
    93b4:	mov	w0, #0x1                   	// #1
    93b8:	str	w0, [sp, #272]
    93bc:	str	x22, [sp, #280]
    93c0:	add	x24, sp, #0xc0
    93c4:	str	w23, [sp, #288]
    93c8:	add	x2, sp, #0x50
    93cc:	str	w21, [sp, #292]
    93d0:	add	x1, sp, #0x80
    93d4:	ldp	x6, x7, [sp, #272]
    93d8:	stp	x6, x7, [sp, #80]
    93dc:	mov	x0, x24
    93e0:	ldp	x6, x7, [x25]
    93e4:	mov	w3, #0xd                   	// #13
    93e8:	ldp	x4, x5, [sp, #288]
    93ec:	stp	x4, x5, [sp, #96]
    93f0:	ldr	x4, [x25, #16]
    93f4:	stp	x6, x7, [sp, #128]
    93f8:	ldr	x8, [sp, #304]
    93fc:	str	x8, [sp, #112]
    9400:	str	x4, [sp, #144]
    9404:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    9408:	ldr	x0, [sp, #176]
    940c:	ldrh	w1, [x0]
    9410:	cbnz	w1, 948c <__ubsan_default_options@@Base+0x1384>
    9414:	ldrh	w0, [x0, #2]
    9418:	tbz	w0, #0, 948c <__ubsan_default_options@@Base+0x1384>
    941c:	mov	x0, x20
    9420:	bl	c4a0 <__ubsan_get_current_report_data@@Base+0x548>
    9424:	tbz	x1, #63, 948c <__ubsan_default_options@@Base+0x1384>
    9428:	add	x19, sp, #0x110
    942c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9430:	mov	x1, x20
    9434:	mov	x0, x19
    9438:	add	x2, x2, #0x898
    943c:	mov	w4, #0x1                   	// #1
    9440:	mov	x3, #0xd00000000           	// #55834574848
    9444:	str	w4, [sp, #272]
    9448:	str	x22, [sp, #280]
    944c:	str	w23, [sp, #288]
    9450:	str	w21, [sp, #292]
    9454:	stp	x3, x2, [sp, #312]
    9458:	str	wzr, [sp, #592]
    945c:	str	wzr, [sp, #600]
    9460:	str	xzr, [sp, #608]
    9464:	str	xzr, [sp, #616]
    9468:	str	wzr, [sp, #640]
    946c:	str	xzr, [sp, #648]
    9470:	str	xzr, [sp, #656]
    9474:	str	xzr, [sp, #680]
    9478:	str	wzr, [sp, #688]
    947c:	bl	7098 <__asan_backtrace_open@plt+0x668>
    9480:	mov	x0, x19
    9484:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    9488:	b	9318 <__ubsan_default_options@@Base+0x1210>
    948c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9490:	add	x2, x2, #0x8b8
    9494:	mov	x3, #0xd00000000           	// #55834574848
    9498:	add	x25, sp, #0x110
    949c:	mov	x1, x20
    94a0:	mov	x0, x25
    94a4:	mov	w20, #0x1                   	// #1
    94a8:	str	w20, [sp, #272]
    94ac:	str	x22, [sp, #280]
    94b0:	str	w23, [sp, #288]
    94b4:	str	w21, [sp, #292]
    94b8:	stp	x3, x2, [sp, #312]
    94bc:	str	wzr, [sp, #592]
    94c0:	str	wzr, [sp, #600]
    94c4:	str	xzr, [sp, #608]
    94c8:	str	xzr, [sp, #616]
    94cc:	str	wzr, [sp, #640]
    94d0:	str	xzr, [sp, #648]
    94d4:	str	xzr, [sp, #656]
    94d8:	str	xzr, [sp, #680]
    94dc:	str	wzr, [sp, #688]
    94e0:	bl	7098 <__asan_backtrace_open@plt+0x668>
    94e4:	ldr	x1, [x19, #16]
    94e8:	ldrh	w3, [x1]
    94ec:	cbnz	w3, 9558 <__ubsan_default_options@@Base+0x1450>
    94f0:	ldrh	w4, [x1, #2]
    94f4:	ldr	w3, [x0, #320]
    94f8:	asr	w4, w4, #1
    94fc:	cmp	w3, #0x8
    9500:	lsl	w20, w20, w4
    9504:	b.eq	959c <__ubsan_default_options@@Base+0x1494>  // b.none
    9508:	ubfiz	x4, x3, #5, #32
    950c:	add	w3, w3, #0x1
    9510:	add	x4, x4, #0x40
    9514:	str	w3, [x0, #320]
    9518:	add	x3, x0, x4
    951c:	mov	w5, #0x2                   	// #2
    9520:	str	w5, [x0, x4]
    9524:	stp	x20, xzr, [x3, #16]
    9528:	bl	7040 <__asan_backtrace_open@plt+0x610>
    952c:	mov	x0, x25
    9530:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    9534:	b	9318 <__ubsan_default_options@@Base+0x1210>
    9538:	ldp	x19, x20, [sp]
    953c:	ldp	x21, x22, [sp, #16]
    9540:	ldp	x23, x24, [sp, #32]
    9544:	ldp	x25, x26, [sp, #48]
    9548:	ldr	x27, [sp, #64]
    954c:	ldr	x30, [sp, #72]
    9550:	add	sp, sp, #0x2c0
    9554:	ret
    9558:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    955c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9560:	add	x2, x2, #0x848
    9564:	add	x0, x0, #0x868
    9568:	mov	x4, #0x0                   	// #0
    956c:	mov	x3, #0x0                   	// #0
    9570:	mov	w1, #0x7b                  	// #123
    9574:	str	x27, [sp, #64]
    9578:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    957c:	add	x19, sp, #0x110
    9580:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9584:	mov	x1, x26
    9588:	mov	x0, x19
    958c:	add	x2, x2, #0x8f0
    9590:	mov	w4, #0x1                   	// #1
    9594:	mov	x3, #0xc00000000           	// #51539607552
    9598:	b	9444 <__ubsan_default_options@@Base+0x133c>
    959c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    95a0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    95a4:	add	x2, x2, #0xe0
    95a8:	add	x0, x0, #0x60
    95ac:	mov	x4, #0x0                   	// #0
    95b0:	mov	x3, #0x0                   	// #0
    95b4:	mov	w1, #0xbf                  	// #191
    95b8:	str	x27, [sp, #64]
    95bc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    95c0:	str	x27, [sp, #64]
    95c4:	mov	w27, #0xc                   	// #12
    95c8:	b	9200 <__ubsan_default_options@@Base+0x10f8>
    95cc:	nop
    95d0:	sub	sp, sp, #0x290
    95d4:	mov	x4, x1
    95d8:	mov	w1, #0xffffffff            	// #-1
    95dc:	stp	x19, x20, [sp]
    95e0:	mov	x19, x0
    95e4:	add	x0, x0, #0xc
    95e8:	stp	x21, x22, [sp, #16]
    95ec:	stp	x23, x24, [sp, #32]
    95f0:	str	x30, [sp, #48]
    95f4:	ldxr	w22, [x0]
    95f8:	stxr	w2, w1, [x0]
    95fc:	cbnz	w2, 95f4 <__ubsan_default_options@@Base+0x14ec>
    9600:	dmb	ish
    9604:	ldr	x24, [x19]
    9608:	mov	w21, #0x1                   	// #1
    960c:	ldr	w23, [x19, #8]
    9610:	add	x20, sp, #0x90
    9614:	str	w21, [sp, #224]
    9618:	mov	x0, x20
    961c:	str	x24, [sp, #232]
    9620:	add	x2, sp, #0x40
    9624:	stp	w23, w22, [sp, #240]
    9628:	add	x1, sp, #0x70
    962c:	ldp	x6, x7, [sp, #224]
    9630:	stp	x6, x7, [sp, #64]
    9634:	mov	w3, #0x9                   	// #9
    9638:	ldp	x6, x7, [sp, #240]
    963c:	stp	x6, x7, [sp, #80]
    9640:	ldp	x6, x7, [x4]
    9644:	stp	x6, x7, [sp, #112]
    9648:	ldr	x4, [x4, #16]
    964c:	str	x4, [sp, #128]
    9650:	ldr	x5, [sp, #256]
    9654:	str	x5, [sp, #96]
    9658:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    965c:	str	w21, [sp, #224]
    9660:	ldrb	w2, [x19, #16]
    9664:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9668:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    966c:	add	x0, x0, #0x958
    9670:	cmp	w2, #0x0
    9674:	add	x1, x1, #0x950
    9678:	csel	x1, x1, x0, eq  // eq = none
    967c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9680:	add	x2, x2, #0x960
    9684:	mov	x3, #0x900000000           	// #38654705664
    9688:	add	x0, sp, #0xe0
    968c:	str	x24, [sp, #232]
    9690:	stp	w23, w22, [sp, #240]
    9694:	stp	x3, x2, [sp, #264]
    9698:	str	wzr, [sp, #288]
    969c:	str	x1, [sp, #304]
    96a0:	str	w21, [sp, #544]
    96a4:	str	wzr, [sp, #552]
    96a8:	str	xzr, [sp, #560]
    96ac:	str	xzr, [sp, #568]
    96b0:	str	wzr, [sp, #592]
    96b4:	str	xzr, [sp, #600]
    96b8:	str	xzr, [sp, #608]
    96bc:	str	xzr, [sp, #632]
    96c0:	str	wzr, [sp, #640]
    96c4:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    96c8:	mov	x0, x20
    96cc:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    96d0:	ldp	x19, x20, [sp]
    96d4:	ldp	x21, x22, [sp, #16]
    96d8:	ldp	x23, x24, [sp, #32]
    96dc:	ldr	x30, [sp, #48]
    96e0:	add	sp, sp, #0x290
    96e4:	ret
    96e8:	sub	sp, sp, #0x2a0
    96ec:	stp	x19, x20, [sp]
    96f0:	mov	x19, x0
    96f4:	mov	x20, x2
    96f8:	add	x0, x0, #0xc
    96fc:	stp	x21, x22, [sp, #16]
    9700:	mov	x21, x1
    9704:	mov	w1, #0xffffffff            	// #-1
    9708:	stp	x23, x24, [sp, #32]
    970c:	stp	x25, x26, [sp, #48]
    9710:	stp	x27, x30, [sp, #64]
    9714:	ldxr	w23, [x0]
    9718:	stxr	w2, w1, [x0]
    971c:	cbnz	w2, 9714 <__ubsan_default_options@@Base+0x160c>
    9720:	dmb	ish
    9724:	ldrb	w0, [x20]
    9728:	ldr	w27, [x19, #8]
    972c:	ldr	x26, [x19]
    9730:	cbnz	w0, 9770 <__ubsan_default_options@@Base+0x1668>
    9734:	cmp	w23, w1
    9738:	b.ne	9758 <__ubsan_default_options@@Base+0x1650>  // b.any
    973c:	ldp	x19, x20, [sp]
    9740:	ldp	x21, x22, [sp, #16]
    9744:	ldp	x23, x24, [sp, #32]
    9748:	ldp	x25, x26, [sp, #48]
    974c:	ldp	x27, x30, [sp, #64]
    9750:	add	sp, sp, #0x2a0
    9754:	ret
    9758:	ldr	x1, [x20, #8]
    975c:	mov	x2, x26
    9760:	mov	w0, #0x15                  	// #21
    9764:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    9768:	tst	w0, #0xff
    976c:	b.ne	973c <__ubsan_default_options@@Base+0x1634>  // b.any
    9770:	mov	w25, #0x1                   	// #1
    9774:	str	w25, [sp, #240]
    9778:	str	x26, [sp, #248]
    977c:	add	x2, sp, #0x50
    9780:	str	w27, [sp, #256]
    9784:	add	x1, sp, #0x80
    9788:	str	w23, [sp, #260]
    978c:	add	x24, sp, #0xa0
    9790:	ldp	x4, x5, [sp, #240]
    9794:	stp	x4, x5, [sp, #80]
    9798:	mov	w3, #0x15                  	// #21
    979c:	ldp	x4, x5, [sp, #256]
    97a0:	stp	x4, x5, [sp, #96]
    97a4:	mov	x0, x24
    97a8:	ldr	x4, [sp, #272]
    97ac:	str	x4, [sp, #112]
    97b0:	ldp	x4, x5, [x20]
    97b4:	stp	x4, x5, [sp, #128]
    97b8:	add	x22, sp, #0xf0
    97bc:	ldr	x4, [x20, #16]
    97c0:	str	x4, [sp, #144]
    97c4:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    97c8:	mov	x0, x21
    97cc:	bl	7020 <__asan_backtrace_open@plt+0x5f0>
    97d0:	mov	x20, x0
    97d4:	adrp	x3, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    97d8:	ldr	x1, [x19, #16]
    97dc:	add	x3, x3, #0x998
    97e0:	ldr	x19, [x20, #40]
    97e4:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    97e8:	add	x2, x2, #0x9a8
    97ec:	mov	x4, #0x1500000000          	// #90194313216
    97f0:	cmp	x19, #0x0
    97f4:	mov	x0, x22
    97f8:	csel	x19, x3, x19, eq  // eq = none
    97fc:	str	w25, [sp, #240]
    9800:	str	x26, [sp, #248]
    9804:	str	w27, [sp, #256]
    9808:	str	w23, [sp, #260]
    980c:	stp	x4, x2, [sp, #280]
    9810:	str	wzr, [sp, #304]
    9814:	str	x19, [sp, #320]
    9818:	str	w25, [sp, #560]
    981c:	str	wzr, [sp, #568]
    9820:	str	xzr, [sp, #576]
    9824:	str	xzr, [sp, #584]
    9828:	str	wzr, [sp, #608]
    982c:	str	xzr, [sp, #616]
    9830:	str	xzr, [sp, #624]
    9834:	str	xzr, [sp, #648]
    9838:	str	wzr, [sp, #656]
    983c:	bl	7040 <__asan_backtrace_open@plt+0x610>
    9840:	mov	x0, x22
    9844:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    9848:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    984c:	mov	x2, #0x1                   	// #1
    9850:	add	x1, x1, #0x9f0
    9854:	mov	w3, #0x3                   	// #3
    9858:	movk	x2, #0x15, lsl #32
    985c:	mov	x0, x22
    9860:	str	w3, [sp, #240]
    9864:	stp	xzr, xzr, [sp, #248]
    9868:	stp	x20, x2, [sp, #272]
    986c:	str	x1, [sp, #288]
    9870:	str	wzr, [sp, #304]
    9874:	str	x19, [sp, #320]
    9878:	str	w25, [sp, #560]
    987c:	str	wzr, [sp, #568]
    9880:	str	xzr, [sp, #576]
    9884:	str	xzr, [sp, #584]
    9888:	str	wzr, [sp, #608]
    988c:	str	xzr, [sp, #616]
    9890:	str	xzr, [sp, #624]
    9894:	str	xzr, [sp, #648]
    9898:	str	wzr, [sp, #656]
    989c:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    98a0:	mov	x0, x20
    98a4:	bl	1fe60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
    98a8:	mov	x0, x24
    98ac:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    98b0:	ldp	x19, x20, [sp]
    98b4:	ldp	x21, x22, [sp, #16]
    98b8:	ldp	x23, x24, [sp, #32]
    98bc:	ldp	x25, x26, [sp, #48]
    98c0:	ldp	x27, x30, [sp, #64]
    98c4:	add	sp, sp, #0x2a0
    98c8:	ret
    98cc:	nop
    98d0:	sub	sp, sp, #0x2e0
    98d4:	str	x2, [sp, #104]
    98d8:	ldrb	w2, [x5]
    98dc:	stp	x19, x20, [sp]
    98e0:	mov	x19, x0
    98e4:	mov	x20, x5
    98e8:	add	x0, x0, #0xc
    98ec:	stp	x21, x22, [sp, #16]
    98f0:	mov	x21, x1
    98f4:	stp	x23, x24, [sp, #32]
    98f8:	stp	x25, x26, [sp, #48]
    98fc:	stp	x27, x28, [sp, #64]
    9900:	stp	x3, x4, [sp, #192]
    9904:	mov	w3, #0xffffffff            	// #-1
    9908:	ldr	x1, [x5, #8]
    990c:	str	x30, [sp, #80]
    9910:	ldxr	w25, [x0]
    9914:	stxr	w4, w3, [x0]
    9918:	cbnz	w4, 9910 <__ubsan_default_options@@Base+0x1808>
    991c:	dmb	ish
    9920:	ldr	x0, [x19, #16]
    9924:	mov	w23, w2
    9928:	ldr	w28, [x19, #8]
    992c:	ldr	x27, [x19]
    9930:	ldrh	w3, [x0]
    9934:	cbnz	w3, 9974 <__ubsan_default_options@@Base+0x186c>
    9938:	ldrh	w0, [x0, #2]
    993c:	tbz	w0, #0, 9974 <__ubsan_default_options@@Base+0x186c>
    9940:	cbnz	w2, 9ae8 <__ubsan_default_options@@Base+0x19e0>
    9944:	mov	w23, #0x1                   	// #1
    9948:	mov	w26, #0x5                   	// #5
    994c:	cmn	w25, #0x1
    9950:	b.ne	9acc <__ubsan_default_options@@Base+0x19c4>  // b.any
    9954:	ldp	x19, x20, [sp]
    9958:	ldp	x21, x22, [sp, #16]
    995c:	ldp	x23, x24, [sp, #32]
    9960:	ldp	x25, x26, [sp, #48]
    9964:	ldp	x27, x28, [sp, #64]
    9968:	ldr	x30, [sp, #80]
    996c:	add	sp, sp, #0x2e0
    9970:	ret
    9974:	mov	w26, #0x6                   	// #6
    9978:	cbz	w2, 994c <__ubsan_default_options@@Base+0x1844>
    997c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    9980:	ldr	x0, [x0, #3816]
    9984:	ldrb	w23, [x0, #17]
    9988:	cbnz	w23, 9954 <__ubsan_default_options@@Base+0x184c>
    998c:	mov	w9, #0x1                   	// #1
    9990:	str	w9, [sp, #304]
    9994:	str	x27, [sp, #312]
    9998:	add	x22, sp, #0xe0
    999c:	str	w28, [sp, #320]
    99a0:	mov	x0, x22
    99a4:	str	w25, [sp, #324]
    99a8:	mov	w3, w26
    99ac:	ldp	x6, x7, [sp, #304]
    99b0:	stp	x6, x7, [sp, #112]
    99b4:	add	x2, sp, #0x70
    99b8:	ldp	x4, x5, [sp, #320]
    99bc:	add	x1, sp, #0xa0
    99c0:	ldr	x6, [x20, #16]
    99c4:	stp	x4, x5, [sp, #128]
    99c8:	add	x24, sp, #0x130
    99cc:	ldp	x4, x5, [x20]
    99d0:	stp	x4, x5, [sp, #160]
    99d4:	ldr	x10, [sp, #336]
    99d8:	str	x10, [sp, #144]
    99dc:	str	x6, [sp, #176]
    99e0:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    99e4:	str	x27, [sp, #312]
    99e8:	ldr	x4, [x19, #16]
    99ec:	stp	x4, x21, [sp, #208]
    99f0:	add	x4, sp, #0x150
    99f4:	cmp	w23, #0x0
    99f8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    99fc:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9a00:	add	x0, x0, #0xa08
    9a04:	add	x2, x2, #0xa00
    9a08:	mov	w9, #0x1                   	// #1
    9a0c:	csel	x2, x2, x0, ne  // ne = any
    9a10:	adrp	x3, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9a14:	add	x3, x3, #0xa18
    9a18:	str	w9, [sp, #304]
    9a1c:	stp	w28, w25, [x4, #-16]
    9a20:	add	x1, sp, #0xd0
    9a24:	stp	wzr, w26, [x4, #8]
    9a28:	mov	x0, x24
    9a2c:	str	x3, [sp, #352]
    9a30:	str	wzr, [sp, #368]
    9a34:	str	x2, [sp, #384]
    9a38:	str	w9, [sp, #624]
    9a3c:	str	wzr, [sp, #632]
    9a40:	str	xzr, [sp, #640]
    9a44:	str	xzr, [sp, #648]
    9a48:	str	wzr, [sp, #672]
    9a4c:	str	xzr, [sp, #680]
    9a50:	str	xzr, [sp, #688]
    9a54:	str	xzr, [sp, #712]
    9a58:	str	wzr, [sp, #720]
    9a5c:	bl	7098 <__asan_backtrace_open@plt+0x668>
    9a60:	ldr	w1, [x0, #320]
    9a64:	cmp	w1, #0x8
    9a68:	b.eq	9af0 <__ubsan_default_options@@Base+0x19e8>  // b.none
    9a6c:	ubfiz	x3, x1, #5, #32
    9a70:	add	w1, w1, #0x1
    9a74:	add	x3, x3, #0x40
    9a78:	str	w1, [x0, #320]
    9a7c:	add	x4, x0, x3
    9a80:	add	x1, sp, #0xc0
    9a84:	ldr	x2, [sp, #104]
    9a88:	str	wzr, [x0, x3]
    9a8c:	str	x2, [x4, #16]
    9a90:	bl	7098 <__asan_backtrace_open@plt+0x668>
    9a94:	ldr	x1, [x19, #16]
    9a98:	bl	7040 <__asan_backtrace_open@plt+0x610>
    9a9c:	mov	x0, x24
    9aa0:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    9aa4:	mov	x0, x22
    9aa8:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    9aac:	ldp	x19, x20, [sp]
    9ab0:	ldp	x21, x22, [sp, #16]
    9ab4:	ldp	x23, x24, [sp, #32]
    9ab8:	ldp	x25, x26, [sp, #48]
    9abc:	ldp	x27, x28, [sp, #64]
    9ac0:	ldr	x30, [sp, #80]
    9ac4:	add	sp, sp, #0x2e0
    9ac8:	ret
    9acc:	mov	x2, x27
    9ad0:	mov	w0, w26
    9ad4:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    9ad8:	tst	w0, #0xff
    9adc:	b.ne	9954 <__ubsan_default_options@@Base+0x184c>  // b.any
    9ae0:	cbz	w23, 997c <__ubsan_default_options@@Base+0x1874>
    9ae4:	b	998c <__ubsan_default_options@@Base+0x1884>
    9ae8:	mov	w26, #0x5                   	// #5
    9aec:	b	998c <__ubsan_default_options@@Base+0x1884>
    9af0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9af4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9af8:	add	x2, x2, #0xe0
    9afc:	add	x0, x0, #0x60
    9b00:	mov	x4, #0x0                   	// #0
    9b04:	mov	x3, #0x0                   	// #0
    9b08:	mov	w1, #0xbf                  	// #191
    9b0c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    9b10:	sub	sp, sp, #0x2a0
    9b14:	stp	x19, x20, [sp]
    9b18:	mov	x19, x0
    9b1c:	add	x0, x0, #0xc
    9b20:	stp	x23, x24, [sp, #32]
    9b24:	and	w23, w2, #0xff
    9b28:	mov	x20, x1
    9b2c:	mov	w1, #0xffffffff            	// #-1
    9b30:	stp	x21, x22, [sp, #16]
    9b34:	stp	x25, x26, [sp, #48]
    9b38:	str	x30, [sp, #72]
    9b3c:	ldxr	w21, [x0]
    9b40:	stxr	w2, w1, [x0]
    9b44:	cbnz	w2, 9b3c <__ubsan_default_options@@Base+0x1a34>
    9b48:	dmb	ish
    9b4c:	ldrb	w0, [x20]
    9b50:	ldr	w26, [x19, #8]
    9b54:	ldr	x25, [x19]
    9b58:	cbnz	w0, 9b98 <__ubsan_default_options@@Base+0x1a90>
    9b5c:	cmp	w21, w1
    9b60:	b.ne	9b80 <__ubsan_default_options@@Base+0x1a78>  // b.any
    9b64:	ldp	x19, x20, [sp]
    9b68:	ldp	x21, x22, [sp, #16]
    9b6c:	ldp	x23, x24, [sp, #32]
    9b70:	ldp	x25, x26, [sp, #48]
    9b74:	ldr	x30, [sp, #72]
    9b78:	add	sp, sp, #0x2a0
    9b7c:	ret
    9b80:	ldr	x1, [x20, #8]
    9b84:	mov	x2, x25
    9b88:	mov	w0, #0x17                  	// #23
    9b8c:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    9b90:	tst	w0, #0xff
    9b94:	b.ne	9b64 <__ubsan_default_options@@Base+0x1a5c>  // b.any
    9b98:	mov	w22, #0x1                   	// #1
    9b9c:	str	w22, [sp, #240]
    9ba0:	str	x25, [sp, #248]
    9ba4:	add	x2, sp, #0x50
    9ba8:	str	w26, [sp, #256]
    9bac:	add	x1, sp, #0x80
    9bb0:	str	w21, [sp, #260]
    9bb4:	mov	w3, #0x17                  	// #23
    9bb8:	ldp	x6, x7, [sp, #240]
    9bbc:	stp	x6, x7, [sp, #80]
    9bc0:	add	x24, sp, #0xf0
    9bc4:	ldp	x6, x7, [x20]
    9bc8:	str	x27, [sp, #64]
    9bcc:	ldp	x4, x5, [sp, #256]
    9bd0:	stp	x4, x5, [sp, #96]
    9bd4:	add	x27, sp, #0xa0
    9bd8:	ldr	x4, [x20, #16]
    9bdc:	mov	x0, x27
    9be0:	ldr	x8, [sp, #272]
    9be4:	str	x8, [sp, #112]
    9be8:	stp	x6, x7, [sp, #128]
    9bec:	str	x4, [sp, #144]
    9bf0:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    9bf4:	ldrsw	x2, [x19, #32]
    9bf8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9bfc:	add	x1, x1, #0xa78
    9c00:	mov	x4, #0x1700000000          	// #98784247808
    9c04:	mov	w3, #0x2                   	// #2
    9c08:	mov	x0, x24
    9c0c:	str	w22, [sp, #240]
    9c10:	str	x25, [sp, #248]
    9c14:	str	w26, [sp, #256]
    9c18:	str	w21, [sp, #260]
    9c1c:	stp	x4, x1, [sp, #280]
    9c20:	str	w3, [sp, #304]
    9c24:	stp	x2, xzr, [sp, #320]
    9c28:	str	w22, [sp, #560]
    9c2c:	str	wzr, [sp, #568]
    9c30:	str	xzr, [sp, #576]
    9c34:	str	xzr, [sp, #584]
    9c38:	str	wzr, [sp, #608]
    9c3c:	str	xzr, [sp, #616]
    9c40:	str	xzr, [sp, #624]
    9c44:	str	xzr, [sp, #648]
    9c48:	str	wzr, [sp, #656]
    9c4c:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    9c50:	ldr	x2, [x19, #16]
    9c54:	cbz	x2, 9cc4 <__ubsan_default_options@@Base+0x1bbc>
    9c58:	cmp	w23, #0x0
    9c5c:	adrp	x3, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9c60:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9c64:	add	x3, x3, #0xa58
    9c68:	add	x1, x1, #0xae0
    9c6c:	mov	x4, #0x1                   	// #1
    9c70:	ldr	x5, [x19, #24]
    9c74:	csel	x1, x1, x3, ne  // ne = any
    9c78:	adrp	x3, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9c7c:	add	x3, x3, #0xac0
    9c80:	movk	x4, #0x17, lsl #32
    9c84:	mov	x0, x24
    9c88:	str	w22, [sp, #240]
    9c8c:	stp	x2, x5, [sp, #248]
    9c90:	stp	x4, x3, [sp, #280]
    9c94:	str	wzr, [sp, #304]
    9c98:	str	x1, [sp, #320]
    9c9c:	str	w22, [sp, #560]
    9ca0:	str	wzr, [sp, #568]
    9ca4:	str	xzr, [sp, #576]
    9ca8:	str	xzr, [sp, #584]
    9cac:	str	wzr, [sp, #608]
    9cb0:	str	xzr, [sp, #616]
    9cb4:	str	xzr, [sp, #624]
    9cb8:	str	xzr, [sp, #648]
    9cbc:	str	wzr, [sp, #656]
    9cc0:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    9cc4:	mov	x0, x27
    9cc8:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    9ccc:	ldp	x19, x20, [sp]
    9cd0:	ldp	x21, x22, [sp, #16]
    9cd4:	ldp	x23, x24, [sp, #32]
    9cd8:	ldp	x25, x26, [sp, #48]
    9cdc:	ldr	x27, [sp, #64]
    9ce0:	ldr	x30, [sp, #72]
    9ce4:	add	sp, sp, #0x2a0
    9ce8:	ret
    9cec:	nop
    9cf0:	sub	sp, sp, #0x2a0
    9cf4:	stp	x19, x20, [sp]
    9cf8:	stp	x21, x22, [sp, #16]
    9cfc:	str	x30, [sp, #72]
    9d00:	cbz	x1, 9ec0 <__ubsan_default_options@@Base+0x1db8>
    9d04:	mov	x19, x2
    9d08:	and	w22, w3, #0xff
    9d0c:	add	x2, x1, #0xc
    9d10:	stp	x25, x26, [sp, #48]
    9d14:	mov	x26, x0
    9d18:	mov	w0, #0xffffffff            	// #-1
    9d1c:	ldxr	w20, [x2]
    9d20:	stxr	w3, w0, [x2]
    9d24:	cbnz	w3, 9d1c <__ubsan_default_options@@Base+0x1c14>
    9d28:	dmb	ish
    9d2c:	ldrb	w0, [x19]
    9d30:	ldr	w25, [x1, #8]
    9d34:	ldr	x21, [x1]
    9d38:	cbnz	w0, 9d78 <__ubsan_default_options@@Base+0x1c70>
    9d3c:	cmn	w20, #0x1
    9d40:	b.ne	9d5c <__ubsan_default_options@@Base+0x1c54>  // b.any
    9d44:	ldp	x19, x20, [sp]
    9d48:	ldp	x21, x22, [sp, #16]
    9d4c:	ldp	x25, x26, [sp, #48]
    9d50:	ldr	x30, [sp, #72]
    9d54:	add	sp, sp, #0x2a0
    9d58:	ret
    9d5c:	ldr	x1, [x19, #8]
    9d60:	mov	x2, x21
    9d64:	mov	w0, #0x16                  	// #22
    9d68:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    9d6c:	tst	w0, #0xff
    9d70:	b.ne	9d44 <__ubsan_default_options@@Base+0x1c3c>  // b.any
    9d74:	nop
    9d78:	stp	x23, x24, [sp, #32]
    9d7c:	mov	w23, #0x1                   	// #1
    9d80:	mov	w3, #0x16                  	// #22
    9d84:	str	w23, [sp, #240]
    9d88:	add	x2, sp, #0x50
    9d8c:	str	x21, [sp, #248]
    9d90:	add	x1, sp, #0x80
    9d94:	str	w25, [sp, #256]
    9d98:	add	x24, sp, #0xf0
    9d9c:	str	w20, [sp, #260]
    9da0:	ldp	x6, x7, [sp, #240]
    9da4:	stp	x6, x7, [sp, #80]
    9da8:	ldp	x6, x7, [x19]
    9dac:	str	x27, [sp, #64]
    9db0:	ldp	x4, x5, [sp, #256]
    9db4:	stp	x4, x5, [sp, #96]
    9db8:	add	x27, sp, #0xa0
    9dbc:	ldr	x4, [x19, #16]
    9dc0:	mov	x0, x27
    9dc4:	ldr	x8, [sp, #272]
    9dc8:	str	x8, [sp, #112]
    9dcc:	stp	x6, x7, [sp, #128]
    9dd0:	str	x4, [sp, #144]
    9dd4:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    9dd8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9ddc:	add	x1, x1, #0xb88
    9de0:	mov	x2, #0x1600000000          	// #94489280512
    9de4:	mov	x0, x24
    9de8:	str	w23, [sp, #240]
    9dec:	str	x21, [sp, #248]
    9df0:	str	w25, [sp, #256]
    9df4:	str	w20, [sp, #260]
    9df8:	stp	x2, x1, [sp, #280]
    9dfc:	str	wzr, [sp, #560]
    9e00:	str	wzr, [sp, #568]
    9e04:	str	xzr, [sp, #576]
    9e08:	str	xzr, [sp, #584]
    9e0c:	str	wzr, [sp, #608]
    9e10:	str	xzr, [sp, #616]
    9e14:	str	xzr, [sp, #624]
    9e18:	str	xzr, [sp, #648]
    9e1c:	str	wzr, [sp, #656]
    9e20:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    9e24:	ldr	x3, [x26]
    9e28:	cbz	x3, 9e98 <__ubsan_default_options@@Base+0x1d90>
    9e2c:	cmp	w22, #0x0
    9e30:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9e34:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9e38:	add	x2, x2, #0xaf8
    9e3c:	add	x1, x1, #0xad8
    9e40:	mov	x4, #0x1                   	// #1
    9e44:	ldr	x5, [x26, #8]
    9e48:	csel	x1, x1, x2, ne  // ne = any
    9e4c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9e50:	add	x2, x2, #0xac0
    9e54:	movk	x4, #0x16, lsl #32
    9e58:	mov	x0, x24
    9e5c:	str	w23, [sp, #240]
    9e60:	stp	x3, x5, [sp, #248]
    9e64:	stp	x4, x2, [sp, #280]
    9e68:	str	wzr, [sp, #304]
    9e6c:	str	x1, [sp, #320]
    9e70:	str	w23, [sp, #560]
    9e74:	str	wzr, [sp, #568]
    9e78:	str	xzr, [sp, #576]
    9e7c:	str	xzr, [sp, #584]
    9e80:	str	wzr, [sp, #608]
    9e84:	str	xzr, [sp, #616]
    9e88:	str	xzr, [sp, #624]
    9e8c:	str	xzr, [sp, #648]
    9e90:	str	wzr, [sp, #656]
    9e94:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    9e98:	mov	x0, x27
    9e9c:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    9ea0:	ldp	x19, x20, [sp]
    9ea4:	ldp	x21, x22, [sp, #16]
    9ea8:	ldp	x23, x24, [sp, #32]
    9eac:	ldp	x25, x26, [sp, #48]
    9eb0:	ldr	x27, [sp, #64]
    9eb4:	ldr	x30, [sp, #72]
    9eb8:	add	sp, sp, #0x2a0
    9ebc:	ret
    9ec0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9ec4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    9ec8:	add	x2, x2, #0xb18
    9ecc:	add	x0, x0, #0xb50
    9ed0:	mov	x4, #0x0                   	// #0
    9ed4:	mov	x3, #0x0                   	// #0
    9ed8:	mov	w1, #0x23f                 	// #575
    9edc:	stp	x23, x24, [sp, #32]
    9ee0:	stp	x25, x26, [sp, #48]
    9ee4:	str	x27, [sp, #64]
    9ee8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    9eec:	nop
    9ef0:	sub	sp, sp, #0x2f0
    9ef4:	stp	x19, x20, [sp]
    9ef8:	mov	x19, x1
    9efc:	add	x1, x0, #0xc
    9f00:	stp	x21, x22, [sp, #16]
    9f04:	stp	x25, x26, [sp, #48]
    9f08:	stp	x27, x28, [sp, #64]
    9f0c:	str	x30, [sp, #80]
    9f10:	stp	x2, x3, [sp, #96]
    9f14:	mov	w2, #0xffffffff            	// #-1
    9f18:	ldxr	w20, [x1]
    9f1c:	stxr	w3, w2, [x1]
    9f20:	cbnz	w3, 9f18 <__ubsan_default_options@@Base+0x1e10>
    9f24:	dmb	ish
    9f28:	ldp	x26, x28, [x0, #16]
    9f2c:	mov	w21, #0x0                   	// #0
    9f30:	ldr	w11, [x0, #8]
    9f34:	ldr	x10, [x0]
    9f38:	ldrh	w1, [x26]
    9f3c:	cbnz	w1, 9f48 <__ubsan_default_options@@Base+0x1e40>
    9f40:	ldrh	w8, [x26, #2]
    9f44:	and	w21, w8, #0x1
    9f48:	ldrh	w1, [x28]
    9f4c:	mov	w22, #0x0                   	// #0
    9f50:	cbnz	w1, 9f5c <__ubsan_default_options@@Base+0x1e54>
    9f54:	ldrh	w22, [x28, #2]
    9f58:	and	w22, w22, #0x1
    9f5c:	ldrb	w0, [x0, #32]
    9f60:	mov	w25, #0xa                   	// #10
    9f64:	cmp	w0, #0x1
    9f68:	b.eq	9f80 <__ubsan_default_options@@Base+0x1e78>  // b.none
    9f6c:	cmp	w0, #0x2
    9f70:	mov	w25, #0xb                   	// #11
    9f74:	b.eq	9f80 <__ubsan_default_options@@Base+0x1e78>  // b.none
    9f78:	mov	w25, #0x0                   	// #0
    9f7c:	cbz	w0, a1d0 <__ubsan_default_options@@Base+0x20c8>
    9f80:	ldrb	w0, [x19]
    9f84:	cbnz	w0, 9fd4 <__ubsan_default_options@@Base+0x1ecc>
    9f88:	str	w11, [sp, #116]
    9f8c:	cmn	w20, #0x1
    9f90:	b.ne	9fb0 <__ubsan_default_options@@Base+0x1ea8>  // b.any
    9f94:	ldp	x19, x20, [sp]
    9f98:	ldp	x21, x22, [sp, #16]
    9f9c:	ldp	x25, x26, [sp, #48]
    9fa0:	ldp	x27, x28, [sp, #64]
    9fa4:	ldr	x30, [sp, #80]
    9fa8:	add	sp, sp, #0x2f0
    9fac:	ret
    9fb0:	ldr	x1, [x19, #8]
    9fb4:	mov	x2, x10
    9fb8:	mov	w0, w25
    9fbc:	str	x10, [sp, #120]
    9fc0:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    9fc4:	tst	w0, #0xff
    9fc8:	ldr	w11, [sp, #116]
    9fcc:	ldr	x10, [sp, #120]
    9fd0:	b.ne	9f94 <__ubsan_default_options@@Base+0x1e8c>  // b.any
    9fd4:	stp	x23, x24, [sp, #32]
    9fd8:	mov	w23, #0x1                   	// #1
    9fdc:	add	x24, sp, #0xf0
    9fe0:	str	w23, [sp, #320]
    9fe4:	mov	w3, w25
    9fe8:	str	x10, [sp, #328]
    9fec:	add	x2, sp, #0x80
    9ff0:	str	w11, [sp, #336]
    9ff4:	mov	x0, x24
    9ff8:	str	w20, [sp, #340]
    9ffc:	add	x1, sp, #0xb0
    a000:	ldp	x6, x7, [sp, #320]
    a004:	stp	x6, x7, [sp, #128]
    a008:	add	x27, sp, #0x140
    a00c:	ldp	x4, x5, [sp, #336]
    a010:	stp	x4, x5, [sp, #144]
    a014:	ldp	x4, x5, [x19]
    a018:	str	w11, [sp, #116]
    a01c:	ldr	x6, [sp, #352]
    a020:	str	x6, [sp, #160]
    a024:	ldr	x6, [x19, #16]
    a028:	str	x10, [sp, #120]
    a02c:	stp	x4, x5, [sp, #176]
    a030:	str	x6, [sp, #192]
    a034:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    a038:	add	x3, sp, #0x160
    a03c:	ldr	w11, [sp, #116]
    a040:	ldr	x10, [sp, #120]
    a044:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a048:	add	x2, x2, #0xbd8
    a04c:	str	w23, [sp, #320]
    a050:	str	x10, [sp, #328]
    a054:	mov	x1, x26
    a058:	stp	w11, w20, [x3, #-16]
    a05c:	mov	x0, x27
    a060:	stp	wzr, w25, [x3, #8]
    a064:	str	x2, [sp, #368]
    a068:	str	wzr, [sp, #640]
    a06c:	str	wzr, [sp, #648]
    a070:	str	xzr, [sp, #656]
    a074:	str	xzr, [sp, #664]
    a078:	str	wzr, [sp, #688]
    a07c:	str	xzr, [sp, #696]
    a080:	str	xzr, [sp, #704]
    a084:	str	xzr, [sp, #728]
    a088:	str	wzr, [sp, #736]
    a08c:	bl	7040 <__asan_backtrace_open@plt+0x610>
    a090:	ldr	x2, [sp, #96]
    a094:	add	x1, sp, #0xd0
    a098:	stp	x26, x2, [sp, #208]
    a09c:	bl	7098 <__asan_backtrace_open@plt+0x668>
    a0a0:	ldrh	w1, [x26]
    a0a4:	cbnz	w1, a1e4 <__ubsan_default_options@@Base+0x20dc>
    a0a8:	ldrh	w1, [x26, #2]
    a0ac:	ldr	w4, [x0, #320]
    a0b0:	asr	w1, w1, #1
    a0b4:	cmp	w4, #0x8
    a0b8:	lsl	w5, w23, w1
    a0bc:	b.eq	a204 <__ubsan_default_options@@Base+0x20fc>  // b.none
    a0c0:	ubfiz	x3, x4, #5, #32
    a0c4:	add	w1, w4, #0x1
    a0c8:	add	x3, x3, #0x40
    a0cc:	str	w1, [x0, #320]
    a0d0:	add	x6, x0, x3
    a0d4:	mov	w19, #0x2                   	// #2
    a0d8:	cmp	w21, #0x0
    a0dc:	adrp	x20, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a0e0:	str	w19, [x0, x3]
    a0e4:	add	x20, x20, #0xbd0
    a0e8:	stp	x5, xzr, [x6, #16]
    a0ec:	adrp	x25, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    a0f0:	add	x25, x25, #0x428
    a0f4:	csel	x5, x25, x20, ne  // ne = any
    a0f8:	cmp	w1, #0x8
    a0fc:	b.eq	a204 <__ubsan_default_options@@Base+0x20fc>  // b.none
    a100:	ubfiz	x1, x1, #5, #32
    a104:	add	w4, w4, #0x2
    a108:	add	x3, x1, #0x40
    a10c:	str	w4, [x0, #320]
    a110:	add	x4, x0, x3
    a114:	mov	x1, x28
    a118:	str	wzr, [x0, x3]
    a11c:	str	x5, [x4, #16]
    a120:	bl	7040 <__asan_backtrace_open@plt+0x610>
    a124:	ldr	x2, [sp, #104]
    a128:	add	x1, sp, #0xe0
    a12c:	stp	x28, x2, [sp, #224]
    a130:	bl	7098 <__asan_backtrace_open@plt+0x668>
    a134:	mov	x1, x0
    a138:	ldrh	w2, [x28]
    a13c:	cbnz	w2, a1e4 <__ubsan_default_options@@Base+0x20dc>
    a140:	ldrh	w0, [x28, #2]
    a144:	ldr	w3, [x1, #320]
    a148:	asr	w0, w0, #1
    a14c:	cmp	w3, #0x8
    a150:	lsl	w23, w23, w0
    a154:	b.eq	a204 <__ubsan_default_options@@Base+0x20fc>  // b.none
    a158:	ubfiz	x2, x3, #5, #32
    a15c:	add	w0, w3, #0x1
    a160:	add	x2, x2, #0x40
    a164:	str	w0, [x1, #320]
    a168:	add	x5, x1, x2
    a16c:	cmp	w22, #0x0
    a170:	csel	x4, x25, x20, ne  // ne = any
    a174:	cmp	w0, #0x8
    a178:	str	w19, [x1, x2]
    a17c:	stp	x23, xzr, [x5, #16]
    a180:	b.eq	a204 <__ubsan_default_options@@Base+0x20fc>  // b.none
    a184:	ubfiz	x0, x0, #5, #32
    a188:	add	w3, w3, #0x2
    a18c:	add	x2, x0, #0x40
    a190:	str	w3, [x1, #320]
    a194:	add	x3, x1, x2
    a198:	mov	x0, x27
    a19c:	str	wzr, [x1, x2]
    a1a0:	str	x4, [x3, #16]
    a1a4:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    a1a8:	mov	x0, x24
    a1ac:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    a1b0:	ldp	x19, x20, [sp]
    a1b4:	ldp	x21, x22, [sp, #16]
    a1b8:	ldp	x23, x24, [sp, #32]
    a1bc:	ldp	x25, x26, [sp, #48]
    a1c0:	ldp	x27, x28, [sp, #64]
    a1c4:	ldr	x30, [sp, #80]
    a1c8:	add	sp, sp, #0x2f0
    a1cc:	ret
    a1d0:	cmp	w22, #0x0
    a1d4:	ccmp	w21, #0x0, #0x0, eq  // eq = none
    a1d8:	cset	w25, ne  // ne = any
    a1dc:	add	w25, w25, #0xa
    a1e0:	b	9f80 <__ubsan_default_options@@Base+0x1e78>
    a1e4:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a1e8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a1ec:	add	x2, x2, #0x848
    a1f0:	add	x0, x0, #0x868
    a1f4:	mov	x4, #0x0                   	// #0
    a1f8:	mov	x3, #0x0                   	// #0
    a1fc:	mov	w1, #0x7b                  	// #123
    a200:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    a204:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a208:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a20c:	add	x2, x2, #0xe0
    a210:	add	x0, x0, #0x60
    a214:	mov	x4, #0x0                   	// #0
    a218:	mov	x3, #0x0                   	// #0
    a21c:	mov	w1, #0xbf                  	// #191
    a220:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    a224:	nop
    a228:	sub	sp, sp, #0x2c0
    a22c:	stp	x19, x20, [sp]
    a230:	mov	x19, x0
    a234:	ldrb	w0, [x0]
    a238:	stp	x21, x22, [sp, #16]
    a23c:	sub	w0, w0, #0x4
    a240:	stp	x23, x24, [sp, #32]
    a244:	and	w0, w0, #0xff
    a248:	cmp	w0, #0x1
    a24c:	stp	x25, x26, [sp, #48]
    a250:	stp	x27, x28, [sp, #64]
    a254:	ldr	x26, [x2, #8]
    a258:	str	x30, [sp, #80]
    a25c:	b.hi	a548 <__ubsan_default_options@@Base+0x2440>  // b.pmore
    a260:	mov	x28, x2
    a264:	add	x0, x19, #0x14
    a268:	mov	x20, x1
    a26c:	mov	w1, #0xffffffff            	// #-1
    a270:	ldxr	w21, [x0]
    a274:	stxr	w2, w1, [x0]
    a278:	cbnz	w2, a270 <__ubsan_default_options@@Base+0x2168>
    a27c:	dmb	ish
    a280:	ldrb	w0, [x28]
    a284:	ldr	w24, [x19, #16]
    a288:	ldr	x23, [x19, #8]
    a28c:	cbnz	w0, a2d0 <__ubsan_default_options@@Base+0x21c8>
    a290:	cmp	w21, w1
    a294:	b.ne	a2b8 <__ubsan_default_options@@Base+0x21b0>  // b.any
    a298:	ldp	x19, x20, [sp]
    a29c:	ldp	x21, x22, [sp, #16]
    a2a0:	ldp	x23, x24, [sp, #32]
    a2a4:	ldp	x25, x26, [sp, #48]
    a2a8:	ldp	x27, x28, [sp, #64]
    a2ac:	ldr	x30, [sp, #80]
    a2b0:	add	sp, sp, #0x2c0
    a2b4:	ret
    a2b8:	mov	x2, x23
    a2bc:	mov	x1, x26
    a2c0:	mov	w0, #0x19                  	// #25
    a2c4:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    a2c8:	tst	w0, #0xff
    a2cc:	b.ne	a298 <__ubsan_default_options@@Base+0x2190>  // b.any
    a2d0:	mov	w25, #0x1                   	// #1
    a2d4:	str	w25, [sp, #272]
    a2d8:	str	x23, [sp, #280]
    a2dc:	add	x27, sp, #0xc0
    a2e0:	str	w24, [sp, #288]
    a2e4:	mov	x0, x27
    a2e8:	str	w21, [sp, #292]
    a2ec:	add	x2, sp, #0x60
    a2f0:	ldp	x6, x7, [sp, #272]
    a2f4:	stp	x6, x7, [sp, #96]
    a2f8:	add	x1, sp, #0x90
    a2fc:	ldp	x6, x7, [x28]
    a300:	mov	w3, #0x19                  	// #25
    a304:	ldp	x4, x5, [sp, #288]
    a308:	stp	x4, x5, [sp, #112]
    a30c:	add	x22, sp, #0x110
    a310:	ldr	x4, [x28, #16]
    a314:	stp	x6, x7, [sp, #144]
    a318:	ldr	x8, [sp, #304]
    a31c:	str	x8, [sp, #128]
    a320:	str	x4, [sp, #160]
    a324:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    a328:	str	w25, [sp, #272]
    a32c:	ldrb	w2, [x19]
    a330:	mov	x3, #0x1900000000          	// #107374182400
    a334:	ldr	x1, [x19, #24]
    a338:	cmp	w2, #0x5
    a33c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a340:	add	x2, x2, #0xc98
    a344:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a348:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a34c:	add	x0, x0, #0xc80
    a350:	add	x19, x19, #0xc50
    a354:	csel	x19, x19, x0, eq  // eq = none
    a358:	mov	x0, x22
    a35c:	str	x23, [sp, #280]
    a360:	str	w24, [sp, #288]
    a364:	str	w21, [sp, #292]
    a368:	stp	x3, x2, [sp, #312]
    a36c:	str	wzr, [sp, #592]
    a370:	str	wzr, [sp, #600]
    a374:	str	xzr, [sp, #608]
    a378:	str	xzr, [sp, #616]
    a37c:	str	wzr, [sp, #640]
    a380:	str	xzr, [sp, #648]
    a384:	str	xzr, [sp, #656]
    a388:	str	xzr, [sp, #680]
    a38c:	str	wzr, [sp, #688]
    a390:	bl	7040 <__asan_backtrace_open@plt+0x610>
    a394:	mov	x1, x0
    a398:	ldr	w0, [x0, #320]
    a39c:	cmp	w0, #0x8
    a3a0:	b.eq	a4bc <__ubsan_default_options@@Base+0x23b4>  // b.none
    a3a4:	ubfiz	x2, x0, #5, #32
    a3a8:	add	w0, w0, #0x1
    a3ac:	add	x2, x2, #0x40
    a3b0:	str	w0, [x1, #320]
    a3b4:	add	x3, x1, x2
    a3b8:	mov	x0, x22
    a3bc:	str	wzr, [x1, x2]
    a3c0:	str	x19, [x3, #16]
    a3c4:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    a3c8:	mov	x0, x20
    a3cc:	bl	7020 <__asan_backtrace_open@plt+0x5f0>
    a3d0:	mov	x19, x0
    a3d4:	adrp	x20, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a3d8:	add	x20, x20, #0x998
    a3dc:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a3e0:	mov	x3, #0x1                   	// #1
    a3e4:	add	x2, x2, #0x9f0
    a3e8:	ldr	x1, [x19, #40]
    a3ec:	mov	w4, #0x3                   	// #3
    a3f0:	movk	x3, #0x19, lsl #32
    a3f4:	mov	x0, x22
    a3f8:	cmp	x1, #0x0
    a3fc:	str	w4, [sp, #272]
    a400:	csel	x1, x20, x1, eq  // eq = none
    a404:	stp	xzr, xzr, [sp, #280]
    a408:	stp	x19, x3, [sp, #304]
    a40c:	str	x2, [sp, #320]
    a410:	str	wzr, [sp, #336]
    a414:	str	x1, [sp, #352]
    a418:	str	w25, [sp, #592]
    a41c:	str	wzr, [sp, #600]
    a420:	str	xzr, [sp, #608]
    a424:	str	xzr, [sp, #616]
    a428:	str	wzr, [sp, #640]
    a42c:	str	xzr, [sp, #648]
    a430:	str	xzr, [sp, #656]
    a434:	str	xzr, [sp, #680]
    a438:	str	wzr, [sp, #688]
    a43c:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    a440:	ldr	x25, [x19, #16]
    a444:	cmp	x25, #0x0
    a448:	csel	x25, x20, x25, eq  // eq = none
    a44c:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
    a450:	str	xzr, [sp, #184]
    a454:	mov	x1, x26
    a458:	mov	x3, x22
    a45c:	add	x2, sp, #0xb8
    a460:	mov	x26, x20
    a464:	bl	20ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
    a468:	tst	w0, #0xff
    a46c:	b.eq	a47c <__ubsan_default_options@@Base+0x2374>  // b.none
    a470:	ldr	x26, [sp, #184]
    a474:	cmp	x26, #0x0
    a478:	csel	x26, x20, x26, eq  // eq = none
    a47c:	mov	x1, x25
    a480:	mov	x0, x26
    a484:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    a488:	cbnz	w0, a4dc <__ubsan_default_options@@Base+0x23d4>
    a48c:	mov	x0, x19
    a490:	bl	1fe60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
    a494:	mov	x0, x27
    a498:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    a49c:	ldp	x19, x20, [sp]
    a4a0:	ldp	x21, x22, [sp, #16]
    a4a4:	ldp	x23, x24, [sp, #32]
    a4a8:	ldp	x25, x26, [sp, #48]
    a4ac:	ldp	x27, x28, [sp, #64]
    a4b0:	ldr	x30, [sp, #80]
    a4b4:	add	sp, sp, #0x2c0
    a4b8:	ret
    a4bc:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a4c0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a4c4:	add	x2, x2, #0xe0
    a4c8:	add	x0, x0, #0x60
    a4cc:	mov	x4, #0x0                   	// #0
    a4d0:	mov	x3, #0x0                   	// #0
    a4d4:	mov	w1, #0xbf                  	// #191
    a4d8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    a4dc:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a4e0:	mov	x3, #0x1                   	// #1
    a4e4:	add	x1, x1, #0xcd8
    a4e8:	mov	w4, #0x1                   	// #1
    a4ec:	movk	x3, #0x19, lsl #32
    a4f0:	mov	w2, #0x2                   	// #2
    a4f4:	mov	x0, x22
    a4f8:	str	w4, [sp, #272]
    a4fc:	str	x23, [sp, #280]
    a500:	str	w24, [sp, #288]
    a504:	str	w21, [sp, #292]
    a508:	stp	x3, x1, [sp, #312]
    a50c:	str	wzr, [sp, #336]
    a510:	str	x26, [sp, #352]
    a514:	str	wzr, [sp, #368]
    a518:	str	x25, [sp, #384]
    a51c:	str	w2, [sp, #592]
    a520:	str	wzr, [sp, #600]
    a524:	str	xzr, [sp, #608]
    a528:	str	xzr, [sp, #616]
    a52c:	str	wzr, [sp, #640]
    a530:	str	xzr, [sp, #648]
    a534:	str	xzr, [sp, #656]
    a538:	str	xzr, [sp, #680]
    a53c:	str	wzr, [sp, #688]
    a540:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    a544:	b	a48c <__ubsan_default_options@@Base+0x2384>
    a548:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    a54c:	nop
    a550:	sub	sp, sp, #0x2a0
    a554:	stp	x19, x20, [sp]
    a558:	mov	x20, x2
    a55c:	add	x2, x0, #0xc
    a560:	stp	x23, x24, [sp, #32]
    a564:	mov	x24, x1
    a568:	mov	x19, x3
    a56c:	mov	w3, #0xffffffff            	// #-1
    a570:	stp	x21, x22, [sp, #16]
    a574:	str	x30, [sp, #72]
    a578:	ldxr	w21, [x2]
    a57c:	stxr	w1, w3, [x2]
    a580:	cbnz	w1, a578 <__ubsan_default_options@@Base+0x2470>
    a584:	dmb	ish
    a588:	ldrb	w2, [x19]
    a58c:	ldr	w23, [x0, #8]
    a590:	ldr	x22, [x0]
    a594:	cbnz	w2, a5d0 <__ubsan_default_options@@Base+0x24c8>
    a598:	cmp	w21, w3
    a59c:	b.ne	a5b8 <__ubsan_default_options@@Base+0x24b0>  // b.any
    a5a0:	ldp	x19, x20, [sp]
    a5a4:	ldp	x21, x22, [sp, #16]
    a5a8:	ldp	x23, x24, [sp, #32]
    a5ac:	ldr	x30, [sp, #72]
    a5b0:	add	sp, sp, #0x2a0
    a5b4:	ret
    a5b8:	ldr	x1, [x19, #8]
    a5bc:	mov	x2, x22
    a5c0:	mov	w0, #0x2                   	// #2
    a5c4:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    a5c8:	tst	w0, #0xff
    a5cc:	b.ne	a5a0 <__ubsan_default_options@@Base+0x2498>  // b.any
    a5d0:	stp	x25, x26, [sp, #48]
    a5d4:	mov	w25, #0x1                   	// #1
    a5d8:	add	x26, sp, #0xa0
    a5dc:	str	w25, [sp, #240]
    a5e0:	mov	x0, x26
    a5e4:	str	x22, [sp, #248]
    a5e8:	add	x2, sp, #0x50
    a5ec:	str	w23, [sp, #256]
    a5f0:	add	x1, sp, #0x80
    a5f4:	str	w21, [sp, #260]
    a5f8:	mov	w3, #0x2                   	// #2
    a5fc:	ldp	x6, x7, [sp, #240]
    a600:	stp	x6, x7, [sp, #80]
    a604:	ldp	x6, x7, [x19]
    a608:	str	x27, [sp, #64]
    a60c:	ldp	x4, x5, [sp, #256]
    a610:	stp	x4, x5, [sp, #96]
    a614:	add	x27, sp, #0xf0
    a618:	ldr	x4, [x19, #16]
    a61c:	stp	x6, x7, [sp, #128]
    a620:	ldr	x8, [sp, #272]
    a624:	str	x8, [sp, #112]
    a628:	str	x4, [sp, #144]
    a62c:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    a630:	mvn	x0, x24
    a634:	mvn	x2, x20
    a638:	lsr	x0, x0, #63
    a63c:	cmp	x0, x2, lsr #63
    a640:	mov	x0, x27
    a644:	b.ne	a660 <__ubsan_default_options@@Base+0x2558>  // b.any
    a648:	cmp	x24, x20
    a64c:	b.ls	a6e8 <__ubsan_default_options@@Base+0x25e0>  // b.plast
    a650:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a654:	mov	x4, #0x200000000           	// #8589934592
    a658:	add	x1, x1, #0xd10
    a65c:	b	a66c <__ubsan_default_options@@Base+0x2564>
    a660:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a664:	add	x1, x1, #0xd80
    a668:	mov	x4, #0x200000000           	// #8589934592
    a66c:	mov	w2, #0x5                   	// #5
    a670:	mov	w3, #0x2                   	// #2
    a674:	str	w25, [sp, #240]
    a678:	str	x22, [sp, #248]
    a67c:	str	w23, [sp, #256]
    a680:	str	w21, [sp, #260]
    a684:	stp	x4, x1, [sp, #280]
    a688:	str	w2, [sp, #304]
    a68c:	str	x24, [sp, #320]
    a690:	str	w2, [sp, #336]
    a694:	str	x20, [sp, #352]
    a698:	str	w3, [sp, #560]
    a69c:	str	wzr, [sp, #568]
    a6a0:	str	xzr, [sp, #576]
    a6a4:	str	xzr, [sp, #584]
    a6a8:	str	wzr, [sp, #608]
    a6ac:	str	xzr, [sp, #616]
    a6b0:	str	xzr, [sp, #624]
    a6b4:	str	xzr, [sp, #648]
    a6b8:	str	wzr, [sp, #656]
    a6bc:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    a6c0:	mov	x0, x26
    a6c4:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    a6c8:	ldp	x19, x20, [sp]
    a6cc:	ldp	x21, x22, [sp, #16]
    a6d0:	ldp	x23, x24, [sp, #32]
    a6d4:	ldp	x25, x26, [sp, #48]
    a6d8:	ldr	x27, [sp, #64]
    a6dc:	ldr	x30, [sp, #72]
    a6e0:	add	sp, sp, #0x2a0
    a6e4:	ret
    a6e8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a6ec:	mov	x4, #0x200000000           	// #8589934592
    a6f0:	add	x1, x1, #0xd48
    a6f4:	b	a66c <__ubsan_default_options@@Base+0x2564>
    a6f8:	sub	sp, sp, #0x2f0
    a6fc:	mov	w3, #0xffffffff            	// #-1
    a700:	stp	x19, x20, [sp]
    a704:	mov	x19, x0
    a708:	mov	x20, x1
    a70c:	add	x0, x0, #0xc
    a710:	stp	x25, x26, [sp, #48]
    a714:	mov	x25, x2
    a718:	stp	x21, x22, [sp, #16]
    a71c:	stp	x23, x24, [sp, #32]
    a720:	stp	x27, x28, [sp, #64]
    a724:	ldr	x24, [x2, #8]
    a728:	str	x30, [sp, #80]
    a72c:	ldxr	w28, [x0]
    a730:	stxr	w1, w3, [x0]
    a734:	cbnz	w1, a72c <__ubsan_default_options@@Base+0x2624>
    a738:	dmb	ish
    a73c:	ldrb	w3, [x19, #24]
    a740:	mov	x0, #0x1                   	// #1
    a744:	ldr	w22, [x19, #8]
    a748:	mov	w21, w0
    a74c:	lsl	x27, x0, x3
    a750:	ldr	x23, [x19]
    a754:	cbz	x20, a768 <__ubsan_default_options@@Base+0x2660>
    a758:	sub	x0, x27, #0x1
    a75c:	tst	x0, x20
    a760:	cset	w21, eq  // eq = none
    a764:	add	w21, w21, #0x3
    a768:	ldrb	w0, [x25]
    a76c:	cbnz	w0, a7b8 <__ubsan_default_options@@Base+0x26b0>
    a770:	cmn	w28, #0x1
    a774:	b.ne	a798 <__ubsan_default_options@@Base+0x2690>  // b.any
    a778:	ldp	x19, x20, [sp]
    a77c:	ldp	x21, x22, [sp, #16]
    a780:	ldp	x23, x24, [sp, #32]
    a784:	ldp	x25, x26, [sp, #48]
    a788:	ldp	x27, x28, [sp, #64]
    a78c:	ldr	x30, [sp, #80]
    a790:	add	sp, sp, #0x2f0
    a794:	ret
    a798:	mov	x2, x23
    a79c:	mov	x1, x24
    a7a0:	mov	w0, w21
    a7a4:	bl	7e08 <__asan_backtrace_open@plt+0x13d8>
    a7a8:	tst	w0, #0xff
    a7ac:	b.ne	a778 <__ubsan_default_options@@Base+0x2670>  // b.any
    a7b0:	ldr	x0, [x19]
    a7b4:	b	a7bc <__ubsan_default_options@@Base+0x26b4>
    a7b8:	mov	x0, x23
    a7bc:	str	xzr, [sp, #104]
    a7c0:	mov	w26, #0x1                   	// #1
    a7c4:	cbz	x0, aa28 <__ubsan_default_options@@Base+0x2920>
    a7c8:	str	w26, [sp, #200]
    a7cc:	add	x24, sp, #0xf0
    a7d0:	str	x23, [sp, #208]
    a7d4:	mov	x0, x24
    a7d8:	stp	w22, w28, [sp, #216]
    a7dc:	mov	w3, w21
    a7e0:	ldp	x6, x7, [sp, #200]
    a7e4:	stp	x6, x7, [sp, #112]
    a7e8:	add	x2, sp, #0x70
    a7ec:	ldp	x6, x7, [x25]
    a7f0:	add	x1, sp, #0xa0
    a7f4:	ldp	x4, x5, [sp, #216]
    a7f8:	stp	x4, x5, [sp, #128]
    a7fc:	ldr	x4, [x25, #16]
    a800:	stp	x6, x7, [sp, #160]
    a804:	ldr	x5, [sp, #96]
    a808:	str	x5, [sp, #144]
    a80c:	str	x4, [sp, #176]
    a810:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    a814:	cmp	w21, #0x3
    a818:	b.eq	a964 <__ubsan_default_options@@Base+0x285c>  // b.none
    a81c:	cmp	w21, #0x4
    a820:	b.ne	a8e8 <__ubsan_default_options@@Base+0x27e0>  // b.any
    a824:	ldrb	w3, [x19, #25]
    a828:	adrp	x0, 5b000 <_Unwind_Backtrace@GCC_3.3>
    a82c:	add	x0, x0, #0x458
    a830:	add	x25, sp, #0x140
    a834:	ldr	x1, [x19, #16]
    a838:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a83c:	ldr	x5, [x0, x3, lsl #3]
    a840:	mov	x0, x25
    a844:	ldr	x7, [sp, #96]
    a848:	add	x2, x2, #0xe20
    a84c:	mov	x6, #0x400000000           	// #17179869184
    a850:	mov	w3, #0x2                   	// #2
    a854:	mov	w4, #0x5                   	// #5
    a858:	str	w26, [sp, #320]
    a85c:	str	x23, [sp, #328]
    a860:	str	w22, [sp, #336]
    a864:	str	w28, [sp, #340]
    a868:	stp	x7, x6, [sp, #352]
    a86c:	str	x2, [sp, #368]
    a870:	str	wzr, [sp, #384]
    a874:	str	x5, [sp, #400]
    a878:	str	w4, [sp, #416]
    a87c:	str	x20, [sp, #432]
    a880:	str	w3, [sp, #640]
    a884:	str	wzr, [sp, #648]
    a888:	str	xzr, [sp, #656]
    a88c:	str	xzr, [sp, #664]
    a890:	str	wzr, [sp, #688]
    a894:	str	xzr, [sp, #696]
    a898:	str	xzr, [sp, #704]
    a89c:	str	xzr, [sp, #728]
    a8a0:	str	wzr, [sp, #736]
    a8a4:	bl	7040 <__asan_backtrace_open@plt+0x610>
    a8a8:	mov	x0, x25
    a8ac:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    a8b0:	cbnz	x20, a9d0 <__ubsan_default_options@@Base+0x28c8>
    a8b4:	mov	x0, x24
    a8b8:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    a8bc:	ldr	x0, [sp, #104]
    a8c0:	cbz	x0, a778 <__ubsan_default_options@@Base+0x2670>
    a8c4:	bl	1fe60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
    a8c8:	ldp	x19, x20, [sp]
    a8cc:	ldp	x21, x22, [sp, #16]
    a8d0:	ldp	x23, x24, [sp, #32]
    a8d4:	ldp	x25, x26, [sp, #48]
    a8d8:	ldp	x27, x28, [sp, #64]
    a8dc:	ldr	x30, [sp, #80]
    a8e0:	add	sp, sp, #0x2f0
    a8e4:	ret
    a8e8:	cmp	w21, #0x1
    a8ec:	b.eq	a910 <__ubsan_default_options@@Base+0x2808>  // b.none
    a8f0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a8f4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a8f8:	add	x2, x2, #0xe60
    a8fc:	add	x0, x0, #0xb50
    a900:	mov	x4, #0x0                   	// #0
    a904:	mov	x3, #0x0                   	// #0
    a908:	mov	w1, #0x58                  	// #88
    a90c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    a910:	ldrb	w3, [x19, #25]
    a914:	adrp	x0, 5b000 <_Unwind_Backtrace@GCC_3.3>
    a918:	add	x0, x0, #0x458
    a91c:	add	x25, sp, #0x140
    a920:	ldr	x5, [sp, #96]
    a924:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a928:	ldr	x3, [x0, x3, lsl #3]
    a92c:	add	x2, x2, #0xdb8
    a930:	mov	x4, #0x100000000           	// #4294967296
    a934:	mov	x0, x25
    a938:	str	w26, [sp, #320]
    a93c:	str	x23, [sp, #328]
    a940:	str	w22, [sp, #336]
    a944:	str	w28, [sp, #340]
    a948:	stp	x5, x4, [sp, #352]
    a94c:	str	x2, [sp, #368]
    a950:	str	wzr, [sp, #384]
    a954:	str	x3, [sp, #400]
    a958:	ldr	x1, [x19, #16]
    a95c:	str	w21, [sp, #640]
    a960:	b	a884 <__ubsan_default_options@@Base+0x277c>
    a964:	ldrb	w3, [x19, #25]
    a968:	adrp	x0, 5b000 <_Unwind_Backtrace@GCC_3.3>
    a96c:	add	x0, x0, #0x458
    a970:	add	x25, sp, #0x140
    a974:	ldr	x7, [sp, #96]
    a978:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a97c:	ldr	x5, [x0, x3, lsl #3]
    a980:	add	x2, x2, #0xdd8
    a984:	mov	x6, #0x300000000           	// #12884901888
    a988:	mov	w4, #0x5                   	// #5
    a98c:	mov	w3, #0x2                   	// #2
    a990:	mov	x0, x25
    a994:	str	w26, [sp, #320]
    a998:	str	x23, [sp, #328]
    a99c:	str	w22, [sp, #336]
    a9a0:	str	w28, [sp, #340]
    a9a4:	stp	x7, x6, [sp, #352]
    a9a8:	str	x2, [sp, #368]
    a9ac:	str	wzr, [sp, #384]
    a9b0:	str	x5, [sp, #400]
    a9b4:	str	w4, [sp, #416]
    a9b8:	str	x20, [sp, #432]
    a9bc:	str	w3, [sp, #448]
    a9c0:	stp	x27, xzr, [sp, #464]
    a9c4:	ldr	x1, [x19, #16]
    a9c8:	str	w21, [sp, #640]
    a9cc:	b	a884 <__ubsan_default_options@@Base+0x277c>
    a9d0:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    a9d4:	add	x1, x1, #0xe90
    a9d8:	mov	w3, #0x2                   	// #2
    a9dc:	mov	w2, #0x1                   	// #1
    a9e0:	mov	x0, x25
    a9e4:	str	w3, [sp, #320]
    a9e8:	stp	xzr, xzr, [sp, #328]
    a9ec:	str	x20, [sp, #344]
    a9f0:	str	w2, [sp, #360]
    a9f4:	str	w21, [sp, #364]
    a9f8:	str	x1, [sp, #368]
    a9fc:	str	wzr, [sp, #640]
    aa00:	str	wzr, [sp, #648]
    aa04:	str	xzr, [sp, #656]
    aa08:	str	xzr, [sp, #664]
    aa0c:	str	wzr, [sp, #688]
    aa10:	str	xzr, [sp, #696]
    aa14:	str	xzr, [sp, #704]
    aa18:	str	xzr, [sp, #728]
    aa1c:	str	wzr, [sp, #736]
    aa20:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    aa24:	b	a8b4 <__ubsan_default_options@@Base+0x27ac>
    aa28:	cbz	x24, aa4c <__ubsan_default_options@@Base+0x2944>
    aa2c:	sub	x0, x24, #0x4
    aa30:	mov	x23, #0x0                   	// #0
    aa34:	bl	7020 <__asan_backtrace_open@plt+0x5f0>
    aa38:	mov	w28, #0x0                   	// #0
    aa3c:	mov	w22, #0x0                   	// #0
    aa40:	mov	w26, #0x3                   	// #3
    aa44:	stp	x0, x0, [sp, #96]
    aa48:	b	a7c8 <__ubsan_default_options@@Base+0x26c0>
    aa4c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    aa50:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    aa54:	add	x2, x2, #0x7f0
    aa58:	add	x0, x0, #0x60
    aa5c:	mov	x4, #0x0                   	// #0
    aa60:	mov	x3, #0x0                   	// #0
    aa64:	mov	w1, #0x2b                  	// #43
    aa68:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    aa6c:	nop
    aa70:	mov	x4, x2
    aa74:	mov	x2, x0
    aa78:	ldrb	w0, [x4]
    aa7c:	cbnz	w0, aaa0 <__ubsan_default_options@@Base+0x2998>
    aa80:	lsr	x1, x1, #32
    aa84:	mov	w0, #0x1                   	// #1
    aa88:	cmn	w1, #0x1
    aa8c:	b.ne	aa94 <__ubsan_default_options@@Base+0x298c>  // b.any
    aa90:	ret
    aa94:	ldr	x1, [x4, #8]
    aa98:	mov	w0, w3
    aa9c:	b	7e08 <__asan_backtrace_open@plt+0x13d8>
    aaa0:	mov	w0, #0x0                   	// #0
    aaa4:	ret

000000000000aaa8 <__ubsan_handle_type_mismatch_v1@@Base>:
    aaa8:	stp	x29, x30, [sp, #-80]!
    aaac:	mov	x29, sp
    aab0:	add	x2, x29, #0x10
    aab4:	stp	xzr, x30, [x29, #56]
    aab8:	ldp	x4, x5, [x29, #56]
    aabc:	stp	x4, x5, [x29, #16]
    aac0:	str	x29, [x29, #32]
    aac4:	bl	a6f8 <__ubsan_default_options@@Base+0x25f0>
    aac8:	ldp	x29, x30, [sp], #80
    aacc:	ret

000000000000aad0 <__ubsan_handle_type_mismatch_v1_abort@@Base>:
    aad0:	stp	x29, x30, [sp, #-80]!
    aad4:	mov	w3, #0x1                   	// #1
    aad8:	mov	x29, sp
    aadc:	add	x2, x29, #0x10
    aae0:	strb	w3, [x29, #56]
    aae4:	stur	wzr, [x29, #57]
    aae8:	sturh	wzr, [x29, #61]
    aaec:	strb	wzr, [x29, #63]
    aaf0:	str	x30, [x29, #64]
    aaf4:	str	x29, [x29, #32]
    aaf8:	ldp	x4, x5, [x29, #56]
    aafc:	stp	x4, x5, [x29, #16]
    ab00:	bl	a6f8 <__ubsan_default_options@@Base+0x25f0>
    ab04:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ab08 <__ubsan_handle_add_overflow@@Base>:
    ab08:	stp	x29, x30, [sp, #-80]!
    ab0c:	mov	x4, x2
    ab10:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    ab14:	mov	x29, sp
    ab18:	ldr	x3, [x0, #16]
    ab1c:	add	x5, x29, #0x10
    ab20:	stp	xzr, x30, [x29, #56]
    ab24:	add	x2, x2, #0xea8
    ab28:	ldp	x6, x7, [x29, #56]
    ab2c:	stp	x6, x7, [x29, #16]
    ab30:	str	x29, [x29, #32]
    ab34:	bl	98d0 <__ubsan_default_options@@Base+0x17c8>
    ab38:	ldp	x29, x30, [sp], #80
    ab3c:	ret

000000000000ab40 <__ubsan_handle_add_overflow_abort@@Base>:
    ab40:	stp	x29, x30, [sp, #-80]!
    ab44:	mov	w6, #0x1                   	// #1
    ab48:	mov	x4, x2
    ab4c:	mov	x29, sp
    ab50:	ldr	x3, [x0, #16]
    ab54:	add	x5, x29, #0x10
    ab58:	strb	w6, [x29, #56]
    ab5c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    ab60:	stur	wzr, [x29, #57]
    ab64:	add	x2, x2, #0xea8
    ab68:	sturh	wzr, [x29, #61]
    ab6c:	strb	wzr, [x29, #63]
    ab70:	str	x30, [x29, #64]
    ab74:	str	x29, [x29, #32]
    ab78:	ldp	x6, x7, [x29, #56]
    ab7c:	stp	x6, x7, [x29, #16]
    ab80:	bl	98d0 <__ubsan_default_options@@Base+0x17c8>
    ab84:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ab88 <__ubsan_handle_sub_overflow@@Base>:
    ab88:	stp	x29, x30, [sp, #-80]!
    ab8c:	mov	x4, x2
    ab90:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    ab94:	mov	x29, sp
    ab98:	ldr	x3, [x0, #16]
    ab9c:	add	x5, x29, #0x10
    aba0:	stp	xzr, x30, [x29, #56]
    aba4:	add	x2, x2, #0xeb0
    aba8:	ldp	x6, x7, [x29, #56]
    abac:	stp	x6, x7, [x29, #16]
    abb0:	str	x29, [x29, #32]
    abb4:	bl	98d0 <__ubsan_default_options@@Base+0x17c8>
    abb8:	ldp	x29, x30, [sp], #80
    abbc:	ret

000000000000abc0 <__ubsan_handle_sub_overflow_abort@@Base>:
    abc0:	stp	x29, x30, [sp, #-80]!
    abc4:	mov	w6, #0x1                   	// #1
    abc8:	mov	x4, x2
    abcc:	mov	x29, sp
    abd0:	ldr	x3, [x0, #16]
    abd4:	add	x5, x29, #0x10
    abd8:	strb	w6, [x29, #56]
    abdc:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    abe0:	stur	wzr, [x29, #57]
    abe4:	add	x2, x2, #0xeb0
    abe8:	sturh	wzr, [x29, #61]
    abec:	strb	wzr, [x29, #63]
    abf0:	str	x30, [x29, #64]
    abf4:	str	x29, [x29, #32]
    abf8:	ldp	x6, x7, [x29, #56]
    abfc:	stp	x6, x7, [x29, #16]
    ac00:	bl	98d0 <__ubsan_default_options@@Base+0x17c8>
    ac04:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ac08 <__ubsan_handle_mul_overflow@@Base>:
    ac08:	stp	x29, x30, [sp, #-80]!
    ac0c:	mov	x4, x2
    ac10:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    ac14:	mov	x29, sp
    ac18:	ldr	x3, [x0, #16]
    ac1c:	add	x5, x29, #0x10
    ac20:	stp	xzr, x30, [x29, #56]
    ac24:	add	x2, x2, #0xeb8
    ac28:	ldp	x6, x7, [x29, #56]
    ac2c:	stp	x6, x7, [x29, #16]
    ac30:	str	x29, [x29, #32]
    ac34:	bl	98d0 <__ubsan_default_options@@Base+0x17c8>
    ac38:	ldp	x29, x30, [sp], #80
    ac3c:	ret

000000000000ac40 <__ubsan_handle_mul_overflow_abort@@Base>:
    ac40:	stp	x29, x30, [sp, #-80]!
    ac44:	mov	w6, #0x1                   	// #1
    ac48:	mov	x4, x2
    ac4c:	mov	x29, sp
    ac50:	ldr	x3, [x0, #16]
    ac54:	add	x5, x29, #0x10
    ac58:	strb	w6, [x29, #56]
    ac5c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    ac60:	stur	wzr, [x29, #57]
    ac64:	add	x2, x2, #0xeb8
    ac68:	sturh	wzr, [x29, #61]
    ac6c:	strb	wzr, [x29, #63]
    ac70:	str	x30, [x29, #64]
    ac74:	str	x29, [x29, #32]
    ac78:	ldp	x6, x7, [x29, #56]
    ac7c:	stp	x6, x7, [x29, #16]
    ac80:	bl	98d0 <__ubsan_default_options@@Base+0x17c8>
    ac84:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ac88 <__ubsan_handle_negate_overflow@@Base>:
    ac88:	stp	x29, x30, [sp, #-80]!
    ac8c:	mov	x29, sp
    ac90:	add	x2, x29, #0x10
    ac94:	stp	xzr, x30, [x29, #56]
    ac98:	ldp	x4, x5, [x29, #56]
    ac9c:	stp	x4, x5, [x29, #16]
    aca0:	str	x29, [x29, #32]
    aca4:	bl	83f0 <__ubsan_default_options@@Base+0x2e8>
    aca8:	ldp	x29, x30, [sp], #80
    acac:	ret

000000000000acb0 <__ubsan_handle_negate_overflow_abort@@Base>:
    acb0:	stp	x29, x30, [sp, #-80]!
    acb4:	mov	w3, #0x1                   	// #1
    acb8:	mov	x29, sp
    acbc:	add	x2, x29, #0x10
    acc0:	strb	w3, [x29, #56]
    acc4:	stur	wzr, [x29, #57]
    acc8:	sturh	wzr, [x29, #61]
    accc:	strb	wzr, [x29, #63]
    acd0:	str	x30, [x29, #64]
    acd4:	str	x29, [x29, #32]
    acd8:	ldp	x4, x5, [x29, #56]
    acdc:	stp	x4, x5, [x29, #16]
    ace0:	bl	83f0 <__ubsan_default_options@@Base+0x2e8>
    ace4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ace8 <__ubsan_handle_divrem_overflow@@Base>:
    ace8:	stp	x29, x30, [sp, #-80]!
    acec:	mov	x29, sp
    acf0:	add	x3, x29, #0x10
    acf4:	stp	xzr, x30, [x29, #56]
    acf8:	ldp	x4, x5, [x29, #56]
    acfc:	stp	x4, x5, [x29, #16]
    ad00:	str	x29, [x29, #32]
    ad04:	bl	8900 <__ubsan_default_options@@Base+0x7f8>
    ad08:	ldp	x29, x30, [sp], #80
    ad0c:	ret

000000000000ad10 <__ubsan_handle_divrem_overflow_abort@@Base>:
    ad10:	stp	x29, x30, [sp, #-80]!
    ad14:	mov	w4, #0x1                   	// #1
    ad18:	mov	x29, sp
    ad1c:	add	x3, x29, #0x10
    ad20:	strb	w4, [x29, #56]
    ad24:	stur	wzr, [x29, #57]
    ad28:	sturh	wzr, [x29, #61]
    ad2c:	strb	wzr, [x29, #63]
    ad30:	str	x30, [x29, #64]
    ad34:	str	x29, [x29, #32]
    ad38:	ldp	x4, x5, [x29, #56]
    ad3c:	stp	x4, x5, [x29, #16]
    ad40:	bl	8900 <__ubsan_default_options@@Base+0x7f8>
    ad44:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ad48 <__ubsan_handle_shift_out_of_bounds@@Base>:
    ad48:	stp	x29, x30, [sp, #-80]!
    ad4c:	mov	x29, sp
    ad50:	add	x3, x29, #0x10
    ad54:	stp	xzr, x30, [x29, #56]
    ad58:	ldp	x4, x5, [x29, #56]
    ad5c:	stp	x4, x5, [x29, #16]
    ad60:	str	x29, [x29, #32]
    ad64:	bl	9158 <__ubsan_default_options@@Base+0x1050>
    ad68:	ldp	x29, x30, [sp], #80
    ad6c:	ret

000000000000ad70 <__ubsan_handle_shift_out_of_bounds_abort@@Base>:
    ad70:	stp	x29, x30, [sp, #-80]!
    ad74:	mov	w4, #0x1                   	// #1
    ad78:	mov	x29, sp
    ad7c:	add	x3, x29, #0x10
    ad80:	strb	w4, [x29, #56]
    ad84:	stur	wzr, [x29, #57]
    ad88:	sturh	wzr, [x29, #61]
    ad8c:	strb	wzr, [x29, #63]
    ad90:	str	x30, [x29, #64]
    ad94:	str	x29, [x29, #32]
    ad98:	ldp	x4, x5, [x29, #56]
    ad9c:	stp	x4, x5, [x29, #16]
    ada0:	bl	9158 <__ubsan_default_options@@Base+0x1050>
    ada4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ada8 <__ubsan_handle_out_of_bounds@@Base>:
    ada8:	stp	x29, x30, [sp, #-80]!
    adac:	mov	x29, sp
    adb0:	add	x2, x29, #0x10
    adb4:	stp	xzr, x30, [x29, #56]
    adb8:	ldp	x4, x5, [x29, #56]
    adbc:	stp	x4, x5, [x29, #16]
    adc0:	str	x29, [x29, #32]
    adc4:	bl	8620 <__ubsan_default_options@@Base+0x518>
    adc8:	ldp	x29, x30, [sp], #80
    adcc:	ret

000000000000add0 <__ubsan_handle_out_of_bounds_abort@@Base>:
    add0:	stp	x29, x30, [sp, #-80]!
    add4:	mov	w3, #0x1                   	// #1
    add8:	mov	x29, sp
    addc:	add	x2, x29, #0x10
    ade0:	strb	w3, [x29, #56]
    ade4:	stur	wzr, [x29, #57]
    ade8:	sturh	wzr, [x29, #61]
    adec:	strb	wzr, [x29, #63]
    adf0:	str	x30, [x29, #64]
    adf4:	str	x29, [x29, #32]
    adf8:	ldp	x4, x5, [x29, #56]
    adfc:	stp	x4, x5, [x29, #16]
    ae00:	bl	8620 <__ubsan_default_options@@Base+0x518>
    ae04:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ae08 <__ubsan_handle_builtin_unreachable@@Base>:
    ae08:	stp	x29, x30, [sp, #-80]!
    ae0c:	mov	w2, #0x1                   	// #1
    ae10:	mov	x29, sp
    ae14:	add	x1, x29, #0x10
    ae18:	strb	w2, [x29, #56]
    ae1c:	stur	wzr, [x29, #57]
    ae20:	sturh	wzr, [x29, #61]
    ae24:	strb	wzr, [x29, #63]
    ae28:	str	x30, [x29, #64]
    ae2c:	str	x29, [x29, #32]
    ae30:	ldp	x2, x3, [x29, #56]
    ae34:	stp	x2, x3, [x29, #16]
    ae38:	bl	8e58 <__ubsan_default_options@@Base+0xd50>
    ae3c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ae40 <__ubsan_handle_missing_return@@Base>:
    ae40:	stp	x29, x30, [sp, #-80]!
    ae44:	mov	w2, #0x1                   	// #1
    ae48:	mov	x29, sp
    ae4c:	add	x1, x29, #0x10
    ae50:	strb	w2, [x29, #56]
    ae54:	stur	wzr, [x29, #57]
    ae58:	sturh	wzr, [x29, #61]
    ae5c:	strb	wzr, [x29, #63]
    ae60:	str	x30, [x29, #64]
    ae64:	str	x29, [x29, #32]
    ae68:	ldp	x2, x3, [x29, #56]
    ae6c:	stp	x2, x3, [x29, #16]
    ae70:	bl	8d80 <__ubsan_default_options@@Base+0xc78>
    ae74:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000ae78 <__ubsan_handle_vla_bound_not_positive@@Base>:
    ae78:	stp	x29, x30, [sp, #-80]!
    ae7c:	mov	x29, sp
    ae80:	add	x2, x29, #0x10
    ae84:	stp	xzr, x30, [x29, #56]
    ae88:	ldp	x4, x5, [x29, #56]
    ae8c:	stp	x4, x5, [x29, #16]
    ae90:	str	x29, [x29, #32]
    ae94:	bl	8790 <__ubsan_default_options@@Base+0x688>
    ae98:	ldp	x29, x30, [sp], #80
    ae9c:	ret

000000000000aea0 <__ubsan_handle_vla_bound_not_positive_abort@@Base>:
    aea0:	stp	x29, x30, [sp, #-80]!
    aea4:	mov	w3, #0x1                   	// #1
    aea8:	mov	x29, sp
    aeac:	add	x2, x29, #0x10
    aeb0:	strb	w3, [x29, #56]
    aeb4:	stur	wzr, [x29, #57]
    aeb8:	sturh	wzr, [x29, #61]
    aebc:	strb	wzr, [x29, #63]
    aec0:	str	x30, [x29, #64]
    aec4:	str	x29, [x29, #32]
    aec8:	ldp	x4, x5, [x29, #56]
    aecc:	stp	x4, x5, [x29, #16]
    aed0:	bl	8790 <__ubsan_default_options@@Base+0x688>
    aed4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000aed8 <__ubsan_handle_float_cast_overflow@@Base>:
    aed8:	stp	x29, x30, [sp, #-80]!
    aedc:	mov	x29, sp
    aee0:	add	x2, x29, #0x10
    aee4:	stp	xzr, x30, [x29, #56]
    aee8:	ldp	x4, x5, [x29, #56]
    aeec:	stp	x4, x5, [x29, #16]
    aef0:	str	x29, [x29, #32]
    aef4:	bl	8f30 <__ubsan_default_options@@Base+0xe28>
    aef8:	ldp	x29, x30, [sp], #80
    aefc:	ret

000000000000af00 <__ubsan_handle_float_cast_overflow_abort@@Base>:
    af00:	stp	x29, x30, [sp, #-80]!
    af04:	mov	w3, #0x1                   	// #1
    af08:	mov	x29, sp
    af0c:	add	x2, x29, #0x10
    af10:	strb	w3, [x29, #56]
    af14:	stur	wzr, [x29, #57]
    af18:	sturh	wzr, [x29, #61]
    af1c:	strb	wzr, [x29, #63]
    af20:	str	x30, [x29, #64]
    af24:	str	x29, [x29, #32]
    af28:	ldp	x4, x5, [x29, #56]
    af2c:	stp	x4, x5, [x29, #16]
    af30:	bl	8f30 <__ubsan_default_options@@Base+0xe28>
    af34:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000af38 <__ubsan_handle_load_invalid_value@@Base>:
    af38:	stp	x29, x30, [sp, #-80]!
    af3c:	mov	x29, sp
    af40:	add	x2, x29, #0x10
    af44:	stp	xzr, x30, [x29, #56]
    af48:	ldp	x4, x5, [x29, #56]
    af4c:	stp	x4, x5, [x29, #16]
    af50:	str	x29, [x29, #32]
    af54:	bl	8bc8 <__ubsan_default_options@@Base+0xac0>
    af58:	ldp	x29, x30, [sp], #80
    af5c:	ret

000000000000af60 <__ubsan_handle_load_invalid_value_abort@@Base>:
    af60:	stp	x29, x30, [sp, #-80]!
    af64:	mov	w3, #0x1                   	// #1
    af68:	mov	x29, sp
    af6c:	add	x2, x29, #0x10
    af70:	strb	w3, [x29, #56]
    af74:	stur	wzr, [x29, #57]
    af78:	sturh	wzr, [x29, #61]
    af7c:	strb	wzr, [x29, #63]
    af80:	str	x30, [x29, #64]
    af84:	str	x29, [x29, #32]
    af88:	ldp	x4, x5, [x29, #56]
    af8c:	stp	x4, x5, [x29, #16]
    af90:	bl	8bc8 <__ubsan_default_options@@Base+0xac0>
    af94:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000af98 <__ubsan_handle_implicit_conversion@@Base>:
    af98:	stp	x29, x30, [sp, #-80]!
    af9c:	mov	x6, x1
    afa0:	mov	x3, x2
    afa4:	mov	x29, sp
    afa8:	add	x1, x29, #0x10
    afac:	mov	x2, x6
    afb0:	stp	xzr, x30, [x29, #56]
    afb4:	ldp	x4, x5, [x29, #56]
    afb8:	stp	x4, x5, [x29, #16]
    afbc:	str	x29, [x29, #32]
    afc0:	bl	9ef0 <__ubsan_default_options@@Base+0x1de8>
    afc4:	ldp	x29, x30, [sp], #80
    afc8:	ret
    afcc:	nop

000000000000afd0 <__ubsan_handle_implicit_conversion_abort@@Base>:
    afd0:	stp	x29, x30, [sp, #-80]!
    afd4:	mov	w4, #0x1                   	// #1
    afd8:	mov	x3, x2
    afdc:	mov	x29, sp
    afe0:	mov	x2, x1
    afe4:	add	x1, x29, #0x10
    afe8:	strb	w4, [x29, #56]
    afec:	stur	wzr, [x29, #57]
    aff0:	sturh	wzr, [x29, #61]
    aff4:	strb	wzr, [x29, #63]
    aff8:	str	x30, [x29, #64]
    affc:	str	x29, [x29, #32]
    b000:	ldp	x4, x5, [x29, #56]
    b004:	stp	x4, x5, [x29, #16]
    b008:	bl	9ef0 <__ubsan_default_options@@Base+0x1de8>
    b00c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000b010 <__ubsan_handle_invalid_builtin@@Base>:
    b010:	stp	x29, x30, [sp, #-80]!
    b014:	mov	w1, #0x1                   	// #1
    b018:	mov	x29, sp
    b01c:	strb	w1, [x29, #56]
    b020:	add	x1, x29, #0x10
    b024:	stur	wzr, [x29, #57]
    b028:	sturh	wzr, [x29, #61]
    b02c:	strb	wzr, [x29, #63]
    b030:	str	x30, [x29, #64]
    b034:	str	x29, [x29, #32]
    b038:	ldp	x2, x3, [x29, #56]
    b03c:	stp	x2, x3, [x29, #16]
    b040:	bl	95d0 <__ubsan_default_options@@Base+0x14c8>
    b044:	ldp	x29, x30, [sp], #80
    b048:	ret
    b04c:	nop

000000000000b050 <__ubsan_handle_invalid_builtin_abort@@Base>:
    b050:	stp	x29, x30, [sp, #-80]!
    b054:	mov	w2, #0x1                   	// #1
    b058:	mov	x29, sp
    b05c:	add	x1, x29, #0x10
    b060:	strb	w2, [x29, #56]
    b064:	stur	wzr, [x29, #57]
    b068:	sturh	wzr, [x29, #61]
    b06c:	strb	wzr, [x29, #63]
    b070:	str	x30, [x29, #64]
    b074:	str	x29, [x29, #32]
    b078:	ldp	x2, x3, [x29, #56]
    b07c:	stp	x2, x3, [x29, #16]
    b080:	bl	95d0 <__ubsan_default_options@@Base+0x14c8>
    b084:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000b088 <__ubsan_handle_function_type_mismatch@@Base>:
    b088:	stp	x29, x30, [sp, #-80]!
    b08c:	mov	x29, sp
    b090:	add	x2, x29, #0x10
    b094:	stp	xzr, x30, [x29, #56]
    b098:	ldp	x4, x5, [x29, #56]
    b09c:	stp	x4, x5, [x29, #16]
    b0a0:	str	x29, [x29, #32]
    b0a4:	bl	96e8 <__ubsan_default_options@@Base+0x15e0>
    b0a8:	ldp	x29, x30, [sp], #80
    b0ac:	ret

000000000000b0b0 <__ubsan_handle_function_type_mismatch_abort@@Base>:
    b0b0:	stp	x29, x30, [sp, #-80]!
    b0b4:	mov	w3, #0x1                   	// #1
    b0b8:	mov	x29, sp
    b0bc:	add	x2, x29, #0x10
    b0c0:	strb	w3, [x29, #56]
    b0c4:	stur	wzr, [x29, #57]
    b0c8:	sturh	wzr, [x29, #61]
    b0cc:	strb	wzr, [x29, #63]
    b0d0:	str	x30, [x29, #64]
    b0d4:	str	x29, [x29, #32]
    b0d8:	ldp	x4, x5, [x29, #56]
    b0dc:	stp	x4, x5, [x29, #16]
    b0e0:	bl	96e8 <__ubsan_default_options@@Base+0x15e0>
    b0e4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000b0e8 <__ubsan_handle_nonnull_return_v1@@Base>:
    b0e8:	stp	x29, x30, [sp, #-80]!
    b0ec:	mov	w3, #0x1                   	// #1
    b0f0:	mov	x29, sp
    b0f4:	add	x2, x29, #0x10
    b0f8:	stp	xzr, x30, [x29, #56]
    b0fc:	ldp	x4, x5, [x29, #56]
    b100:	stp	x4, x5, [x29, #16]
    b104:	str	x29, [x29, #32]
    b108:	bl	9cf0 <__ubsan_default_options@@Base+0x1be8>
    b10c:	ldp	x29, x30, [sp], #80
    b110:	ret
    b114:	nop

000000000000b118 <__ubsan_handle_nonnull_return_v1_abort@@Base>:
    b118:	stp	x29, x30, [sp, #-80]!
    b11c:	mov	w3, #0x1                   	// #1
    b120:	mov	x29, sp
    b124:	add	x2, x29, #0x10
    b128:	strb	w3, [x29, #56]
    b12c:	stur	wzr, [x29, #57]
    b130:	sturh	wzr, [x29, #61]
    b134:	strb	wzr, [x29, #63]
    b138:	str	x30, [x29, #64]
    b13c:	str	x29, [x29, #32]
    b140:	ldp	x4, x5, [x29, #56]
    b144:	stp	x4, x5, [x29, #16]
    b148:	bl	9cf0 <__ubsan_default_options@@Base+0x1be8>
    b14c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000b150 <__ubsan_handle_nullability_return_v1@@Base>:
    b150:	stp	x29, x30, [sp, #-80]!
    b154:	mov	w3, #0x0                   	// #0
    b158:	mov	x29, sp
    b15c:	add	x2, x29, #0x10
    b160:	stp	xzr, x30, [x29, #56]
    b164:	ldp	x4, x5, [x29, #56]
    b168:	stp	x4, x5, [x29, #16]
    b16c:	str	x29, [x29, #32]
    b170:	bl	9cf0 <__ubsan_default_options@@Base+0x1be8>
    b174:	ldp	x29, x30, [sp], #80
    b178:	ret
    b17c:	nop

000000000000b180 <__ubsan_handle_nullability_return_v1_abort@@Base>:
    b180:	stp	x29, x30, [sp, #-80]!
    b184:	mov	w3, #0x1                   	// #1
    b188:	mov	x29, sp
    b18c:	add	x2, x29, #0x10
    b190:	strb	w3, [x29, #56]
    b194:	mov	w3, #0x0                   	// #0
    b198:	stur	wzr, [x29, #57]
    b19c:	sturh	wzr, [x29, #61]
    b1a0:	strb	wzr, [x29, #63]
    b1a4:	str	x30, [x29, #64]
    b1a8:	str	x29, [x29, #32]
    b1ac:	ldp	x4, x5, [x29, #56]
    b1b0:	stp	x4, x5, [x29, #16]
    b1b4:	bl	9cf0 <__ubsan_default_options@@Base+0x1be8>
    b1b8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    b1bc:	nop

000000000000b1c0 <__ubsan_handle_nonnull_arg@@Base>:
    b1c0:	stp	x29, x30, [sp, #-80]!
    b1c4:	mov	w2, #0x1                   	// #1
    b1c8:	mov	x29, sp
    b1cc:	add	x1, x29, #0x10
    b1d0:	stp	xzr, x30, [x29, #56]
    b1d4:	ldp	x4, x5, [x29, #56]
    b1d8:	stp	x4, x5, [x29, #16]
    b1dc:	str	x29, [x29, #32]
    b1e0:	bl	9b10 <__ubsan_default_options@@Base+0x1a08>
    b1e4:	ldp	x29, x30, [sp], #80
    b1e8:	ret
    b1ec:	nop

000000000000b1f0 <__ubsan_handle_nonnull_arg_abort@@Base>:
    b1f0:	stp	x29, x30, [sp, #-80]!
    b1f4:	mov	w2, #0x1                   	// #1
    b1f8:	mov	x29, sp
    b1fc:	add	x1, x29, #0x10
    b200:	strb	w2, [x29, #56]
    b204:	stur	wzr, [x29, #57]
    b208:	sturh	wzr, [x29, #61]
    b20c:	strb	wzr, [x29, #63]
    b210:	str	x30, [x29, #64]
    b214:	str	x29, [x29, #32]
    b218:	ldp	x4, x5, [x29, #56]
    b21c:	stp	x4, x5, [x29, #16]
    b220:	bl	9b10 <__ubsan_default_options@@Base+0x1a08>
    b224:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000b228 <__ubsan_handle_nullability_arg@@Base>:
    b228:	stp	x29, x30, [sp, #-80]!
    b22c:	mov	w2, #0x0                   	// #0
    b230:	mov	x29, sp
    b234:	add	x1, x29, #0x10
    b238:	stp	xzr, x30, [x29, #56]
    b23c:	ldp	x4, x5, [x29, #56]
    b240:	stp	x4, x5, [x29, #16]
    b244:	str	x29, [x29, #32]
    b248:	bl	9b10 <__ubsan_default_options@@Base+0x1a08>
    b24c:	ldp	x29, x30, [sp], #80
    b250:	ret
    b254:	nop

000000000000b258 <__ubsan_handle_nullability_arg_abort@@Base>:
    b258:	stp	x29, x30, [sp, #-80]!
    b25c:	mov	w2, #0x1                   	// #1
    b260:	mov	x29, sp
    b264:	add	x1, x29, #0x10
    b268:	strb	w2, [x29, #56]
    b26c:	mov	w2, #0x0                   	// #0
    b270:	stur	wzr, [x29, #57]
    b274:	sturh	wzr, [x29, #61]
    b278:	strb	wzr, [x29, #63]
    b27c:	str	x30, [x29, #64]
    b280:	str	x29, [x29, #32]
    b284:	ldp	x4, x5, [x29, #56]
    b288:	stp	x4, x5, [x29, #16]
    b28c:	bl	9b10 <__ubsan_default_options@@Base+0x1a08>
    b290:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    b294:	nop

000000000000b298 <__ubsan_handle_pointer_overflow@@Base>:
    b298:	stp	x29, x30, [sp, #-80]!
    b29c:	mov	x29, sp
    b2a0:	add	x3, x29, #0x10
    b2a4:	stp	xzr, x30, [x29, #56]
    b2a8:	ldp	x4, x5, [x29, #56]
    b2ac:	stp	x4, x5, [x29, #16]
    b2b0:	str	x29, [x29, #32]
    b2b4:	bl	a550 <__ubsan_default_options@@Base+0x2448>
    b2b8:	ldp	x29, x30, [sp], #80
    b2bc:	ret

000000000000b2c0 <__ubsan_handle_pointer_overflow_abort@@Base>:
    b2c0:	stp	x29, x30, [sp, #-80]!
    b2c4:	mov	w4, #0x1                   	// #1
    b2c8:	mov	x29, sp
    b2cc:	add	x3, x29, #0x10
    b2d0:	strb	w4, [x29, #56]
    b2d4:	stur	wzr, [x29, #57]
    b2d8:	sturh	wzr, [x29, #61]
    b2dc:	strb	wzr, [x29, #63]
    b2e0:	str	x30, [x29, #64]
    b2e4:	str	x29, [x29, #32]
    b2e8:	ldp	x4, x5, [x29, #56]
    b2ec:	stp	x4, x5, [x29, #16]
    b2f0:	bl	a550 <__ubsan_default_options@@Base+0x2448>
    b2f4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000b2f8 <__ubsan_handle_cfi_bad_icall@@Base>:
    b2f8:	stp	x29, x30, [sp, #-112]!
    b2fc:	mov	x3, x0
    b300:	mov	w6, #0x4                   	// #4
    b304:	mov	x29, sp
    b308:	add	x2, x29, #0x10
    b30c:	add	x0, x29, #0x50
    b310:	stp	xzr, x30, [x29, #56]
    b314:	ldp	x4, x5, [x29, #56]
    b318:	stp	x4, x5, [x29, #16]
    b31c:	ldp	x4, x5, [x3]
    b320:	strb	w6, [x29, #80]
    b324:	ldr	x3, [x3, #16]
    b328:	str	x29, [x29, #32]
    b32c:	stur	wzr, [x29, #81]
    b330:	sturh	wzr, [x29, #85]
    b334:	strb	wzr, [x29, #87]
    b338:	stp	x4, x5, [x29, #88]
    b33c:	str	x3, [x29, #104]
    b340:	bl	a228 <__ubsan_default_options@@Base+0x2120>
    b344:	ldp	x29, x30, [sp], #112
    b348:	ret
    b34c:	nop

000000000000b350 <__ubsan_handle_cfi_bad_icall_abort@@Base>:
    b350:	stp	x29, x30, [sp, #-112]!
    b354:	mov	x3, x0
    b358:	mov	w4, #0x1                   	// #1
    b35c:	mov	x29, sp
    b360:	add	x2, x29, #0x10
    b364:	add	x0, x29, #0x50
    b368:	mov	w6, #0x4                   	// #4
    b36c:	strb	w4, [x29, #56]
    b370:	stur	wzr, [x29, #57]
    b374:	sturh	wzr, [x29, #61]
    b378:	strb	wzr, [x29, #63]
    b37c:	str	x30, [x29, #64]
    b380:	ldp	x4, x5, [x3]
    b384:	strb	w6, [x29, #80]
    b388:	ldp	x8, x9, [x29, #56]
    b38c:	stur	wzr, [x29, #81]
    b390:	ldr	x3, [x3, #16]
    b394:	stp	x8, x9, [x29, #16]
    b398:	str	x29, [x29, #32]
    b39c:	sturh	wzr, [x29, #85]
    b3a0:	strb	wzr, [x29, #87]
    b3a4:	stp	x4, x5, [x29, #88]
    b3a8:	str	x3, [x29, #104]
    b3ac:	bl	a228 <__ubsan_default_options@@Base+0x2120>
    b3b0:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    b3b4:	nop

000000000000b3b8 <__ubsan_handle_cfi_check_fail@@Base>:
    b3b8:	stp	x29, x30, [sp, #-80]!
    b3bc:	mov	x29, sp
    b3c0:	ldrb	w3, [x0]
    b3c4:	sub	w3, w3, #0x4
    b3c8:	stp	xzr, x30, [x29, #56]
    b3cc:	and	w3, w3, #0xff
    b3d0:	cmp	w3, #0x1
    b3d4:	b.ls	b3fc <__ubsan_handle_cfi_check_fail@@Base+0x44>  // b.plast
    b3d8:	ldp	x4, x5, [x29, #56]
    b3dc:	cmp	x2, #0x0
    b3e0:	add	x3, x29, #0x10
    b3e4:	cset	w2, ne  // ne = any
    b3e8:	stp	x4, x5, [x29, #16]
    b3ec:	str	x29, [x29, #32]
    b3f0:	bl	6840 <__ubsan_handle_cfi_bad_type@plt>
    b3f4:	ldp	x29, x30, [sp], #80
    b3f8:	ret
    b3fc:	ldp	x4, x5, [x29, #56]
    b400:	add	x2, x29, #0x10
    b404:	stp	x4, x5, [x29, #16]
    b408:	str	x29, [x29, #32]
    b40c:	bl	a228 <__ubsan_default_options@@Base+0x2120>
    b410:	ldp	x29, x30, [sp], #80
    b414:	ret

000000000000b418 <__ubsan_handle_cfi_check_fail_abort@@Base>:
    b418:	stp	x29, x30, [sp, #-80]!
    b41c:	mov	w3, #0x1                   	// #1
    b420:	mov	x29, sp
    b424:	strb	w3, [x29, #56]
    b428:	ldrb	w3, [x0]
    b42c:	stur	wzr, [x29, #57]
    b430:	sub	w3, w3, #0x4
    b434:	sturh	wzr, [x29, #61]
    b438:	strb	wzr, [x29, #63]
    b43c:	and	w3, w3, #0xff
    b440:	str	x30, [x29, #64]
    b444:	cmp	w3, #0x1
    b448:	b.ls	b46c <__ubsan_handle_cfi_check_fail_abort@@Base+0x54>  // b.plast
    b44c:	ldp	x4, x5, [x29, #56]
    b450:	cmp	x2, #0x0
    b454:	add	x3, x29, #0x10
    b458:	cset	w2, ne  // ne = any
    b45c:	stp	x4, x5, [x29, #16]
    b460:	str	x29, [x29, #32]
    b464:	bl	6840 <__ubsan_handle_cfi_bad_type@plt>
    b468:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    b46c:	ldp	x4, x5, [x29, #56]
    b470:	add	x2, x29, #0x10
    b474:	stp	x4, x5, [x29, #16]
    b478:	str	x29, [x29, #32]
    b47c:	bl	a228 <__ubsan_default_options@@Base+0x2120>
    b480:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    b484:	nop
    b488:	sub	sp, sp, #0x2e0
    b48c:	stp	x19, x20, [sp]
    b490:	mov	x19, x0
    b494:	mov	x20, x1
    b498:	mov	x0, x1
    b49c:	stp	x21, x22, [sp, #16]
    b4a0:	mov	x21, x3
    b4a4:	ldr	x1, [x19, #24]
    b4a8:	str	x30, [sp, #80]
    b4ac:	bl	c2b0 <__ubsan_get_current_report_data@@Base+0x358>
    b4b0:	tst	w0, #0xff
    b4b4:	b.eq	b4d0 <__ubsan_handle_cfi_check_fail_abort@@Base+0xb8>  // b.none
    b4b8:	mov	w0, #0x0                   	// #0
    b4bc:	ldp	x19, x20, [sp]
    b4c0:	ldp	x21, x22, [sp, #16]
    b4c4:	ldr	x30, [sp, #80]
    b4c8:	add	sp, sp, #0x2e0
    b4cc:	ret
    b4d0:	add	x8, sp, #0xc8
    b4d4:	mov	x0, x20
    b4d8:	stp	x23, x24, [sp, #32]
    b4dc:	bl	c058 <__ubsan_get_current_report_data@@Base+0x100>
    b4e0:	ldp	x22, x23, [sp, #200]
    b4e4:	cbz	x22, b4f8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xe0>
    b4e8:	mov	x0, x22
    b4ec:	bl	7db0 <__asan_backtrace_open@plt+0x1380>
    b4f0:	tst	w0, #0xff
    b4f4:	b.ne	b6f0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2d8>  // b.any
    b4f8:	add	x0, x19, #0xc
    b4fc:	mov	w1, #0xffffffff            	// #-1
    b500:	stp	x25, x26, [sp, #48]
    b504:	stp	x27, x28, [sp, #64]
    b508:	ldxr	w24, [x0]
    b50c:	stxr	w2, w1, [x0]
    b510:	cbnz	w2, b508 <__ubsan_handle_cfi_check_fail_abort@@Base+0xf0>
    b514:	dmb	ish
    b518:	ldp	x4, x5, [x21]
    b51c:	mov	x1, #0x0                   	// #0
    b520:	ldr	w25, [x19, #8]
    b524:	add	x26, sp, #0xa0
    b528:	ldr	x6, [x21, #16]
    b52c:	mov	x2, x26
    b530:	ldr	x27, [x19]
    b534:	bfxil	x1, x25, #0, #32
    b538:	mov	w3, #0x18                  	// #24
    b53c:	stp	x4, x5, [sp, #160]
    b540:	bfi	x1, x24, #32, #32
    b544:	mov	x0, x27
    b548:	str	x6, [sp, #176]
    b54c:	bl	aa70 <__ubsan_default_options@@Base+0x2968>
    b550:	tst	w0, #0xff
    b554:	b.ne	b6e0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2c8>  // b.any
    b558:	mov	w28, #0x1                   	// #1
    b55c:	str	w28, [sp, #304]
    b560:	str	x27, [sp, #312]
    b564:	add	x8, sp, #0xe0
    b568:	str	w25, [sp, #320]
    b56c:	mov	x0, x8
    b570:	str	w24, [sp, #324]
    b574:	mov	x1, x26
    b578:	ldp	x6, x7, [sp, #304]
    b57c:	stp	x6, x7, [sp, #112]
    b580:	add	x2, sp, #0x70
    b584:	ldp	x6, x7, [x21]
    b588:	mov	w3, #0x18                  	// #24
    b58c:	ldp	x4, x5, [sp, #320]
    b590:	stp	x4, x5, [sp, #128]
    b594:	add	x26, sp, #0x130
    b598:	ldr	x5, [x21, #16]
    b59c:	str	x8, [sp, #104]
    b5a0:	ldr	x9, [sp, #336]
    b5a4:	str	x9, [sp, #144]
    b5a8:	stp	x6, x7, [sp, #160]
    b5ac:	str	x5, [sp, #176]
    b5b0:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    b5b4:	adrp	x3, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    b5b8:	ldrb	w7, [x19, #32]
    b5bc:	ldr	x1, [x19, #16]
    b5c0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    b5c4:	ldr	x3, [x3, #3760]
    b5c8:	add	x2, x2, #0xf98
    b5cc:	mov	w4, #0x2                   	// #2
    b5d0:	mov	x6, #0x1800000000          	// #103079215104
    b5d4:	mov	w5, #0x5                   	// #5
    b5d8:	mov	x0, x26
    b5dc:	ldr	x3, [x3, x7, lsl #3]
    b5e0:	str	w28, [sp, #304]
    b5e4:	str	x27, [sp, #312]
    b5e8:	str	w25, [sp, #320]
    b5ec:	str	w24, [sp, #324]
    b5f0:	stp	x6, x2, [sp, #344]
    b5f4:	str	wzr, [sp, #368]
    b5f8:	str	x3, [sp, #384]
    b5fc:	str	w5, [sp, #400]
    b600:	str	x20, [sp, #416]
    b604:	str	w4, [sp, #624]
    b608:	str	wzr, [sp, #632]
    b60c:	str	xzr, [sp, #640]
    b610:	str	xzr, [sp, #648]
    b614:	str	wzr, [sp, #672]
    b618:	str	xzr, [sp, #680]
    b61c:	str	xzr, [sp, #688]
    b620:	str	xzr, [sp, #712]
    b624:	str	wzr, [sp, #720]
    b628:	bl	7040 <__asan_backtrace_open@plt+0x610>
    b62c:	mov	x0, x26
    b630:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    b634:	add	x1, x20, #0x8
    b638:	mov	w4, #0x2                   	// #2
    b63c:	ldr	x8, [sp, #104]
    b640:	cbz	x22, b750 <__ubsan_handle_cfi_check_fail_abort@@Base+0x338>
    b644:	str	x8, [sp, #104]
    b648:	cbnz	x23, b6f8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2e0>
    b64c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b650:	mov	x5, #0x1                   	// #1
    b654:	mov	x0, x26
    b658:	add	x2, x2, #0x70
    b65c:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b660:	movk	x5, #0x18, lsl #32
    b664:	add	x3, x3, #0x58
    b668:	str	w4, [sp, #304]
    b66c:	stp	xzr, xzr, [sp, #312]
    b670:	str	x20, [sp, #328]
    b674:	stp	x5, x3, [sp, #344]
    b678:	str	w28, [sp, #368]
    b67c:	str	x22, [sp, #384]
    b680:	str	w28, [sp, #624]
    b684:	str	w4, [sp, #632]
    b688:	str	xzr, [sp, #640]
    b68c:	str	xzr, [sp, #648]
    b690:	str	x20, [sp, #656]
    b694:	str	w4, [sp, #672]
    b698:	str	xzr, [sp, #680]
    b69c:	str	xzr, [sp, #688]
    b6a0:	str	x1, [sp, #696]
    b6a4:	str	x2, [sp, #712]
    b6a8:	str	w28, [sp, #720]
    b6ac:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    b6b0:	ldr	x8, [sp, #104]
    b6b4:	mov	x0, x8
    b6b8:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    b6bc:	mov	w0, #0x1                   	// #1
    b6c0:	ldp	x19, x20, [sp]
    b6c4:	ldp	x21, x22, [sp, #16]
    b6c8:	ldp	x23, x24, [sp, #32]
    b6cc:	ldp	x25, x26, [sp, #48]
    b6d0:	ldp	x27, x28, [sp, #64]
    b6d4:	ldr	x30, [sp, #80]
    b6d8:	add	sp, sp, #0x2e0
    b6dc:	ret
    b6e0:	ldp	x23, x24, [sp, #32]
    b6e4:	ldp	x25, x26, [sp, #48]
    b6e8:	ldp	x27, x28, [sp, #64]
    b6ec:	b	b4b8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xa0>
    b6f0:	ldp	x23, x24, [sp, #32]
    b6f4:	b	b4b8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xa0>
    b6f8:	mov	x7, #0x1                   	// #1
    b6fc:	sub	x9, x20, x23
    b700:	ldr	x6, [sp, #216]
    b704:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b708:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b70c:	add	x3, x3, #0x80
    b710:	movk	x7, #0x18, lsl #32
    b714:	mov	w5, #0x3                   	// #3
    b718:	mov	x0, x26
    b71c:	add	x2, x2, #0xc8
    b720:	str	w4, [sp, #304]
    b724:	stp	xzr, xzr, [sp, #312]
    b728:	str	x9, [sp, #328]
    b72c:	stp	x7, x3, [sp, #344]
    b730:	str	w4, [sp, #368]
    b734:	stp	x23, xzr, [sp, #384]
    b738:	str	w28, [sp, #400]
    b73c:	str	x22, [sp, #416]
    b740:	str	w28, [sp, #432]
    b744:	str	x6, [sp, #448]
    b748:	str	w5, [sp, #624]
    b74c:	b	b684 <__ubsan_handle_cfi_check_fail_abort@@Base+0x26c>
    b750:	add	x23, x23, #0x100, lsl #12
    b754:	cmp	x23, #0x200, lsl #12
    b758:	b.ls	b79c <__ubsan_handle_cfi_check_fail_abort@@Base+0x384>  // b.plast
    b75c:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b760:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b764:	mov	x0, x26
    b768:	add	x3, x3, #0x0
    b76c:	add	x2, x2, #0x40
    b770:	str	x8, [sp, #104]
    b774:	mov	x5, #0x1                   	// #1
    b778:	str	w4, [sp, #304]
    b77c:	movk	x5, #0x18, lsl #32
    b780:	stp	xzr, xzr, [sp, #312]
    b784:	str	x20, [sp, #328]
    b788:	stp	x5, x3, [sp, #344]
    b78c:	str	w28, [sp, #368]
    b790:	str	xzr, [sp, #384]
    b794:	str	w28, [sp, #624]
    b798:	b	b684 <__ubsan_handle_cfi_check_fail_abort@@Base+0x26c>
    b79c:	adrp	x3, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    b7a0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    b7a4:	mov	x0, x26
    b7a8:	add	x3, x3, #0xfd8
    b7ac:	add	x2, x2, #0xff0
    b7b0:	b	b774 <__ubsan_handle_cfi_check_fail_abort@@Base+0x35c>
    b7b4:	nop

000000000000b7b8 <__ubsan_handle_dynamic_type_cache_miss@@Base>:
    b7b8:	stp	x29, x30, [sp, #-80]!
    b7bc:	mov	x29, sp
    b7c0:	add	x3, x29, #0x10
    b7c4:	stp	xzr, x30, [x29, #56]
    b7c8:	ldp	x4, x5, [x29, #56]
    b7cc:	stp	x4, x5, [x29, #16]
    b7d0:	str	x29, [x29, #32]
    b7d4:	bl	b488 <__ubsan_handle_cfi_check_fail_abort@@Base+0x70>
    b7d8:	ldp	x29, x30, [sp], #80
    b7dc:	ret

000000000000b7e0 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base>:
    b7e0:	stp	x29, x30, [sp, #-80]!
    b7e4:	mov	x29, sp
    b7e8:	add	x3, x29, #0x10
    b7ec:	stp	xzr, x30, [x29, #56]
    b7f0:	ldp	x4, x5, [x29, #56]
    b7f4:	stp	x4, x5, [x29, #16]
    b7f8:	str	x29, [x29, #32]
    b7fc:	bl	b488 <__ubsan_handle_cfi_check_fail_abort@@Base+0x70>
    b800:	tst	w0, #0xff
    b804:	b.ne	b810 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base+0x30>  // b.any
    b808:	ldp	x29, x30, [sp], #80
    b80c:	ret
    b810:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    b814:	nop

000000000000b818 <__ubsan_handle_cfi_bad_type@@Base>:
    b818:	sub	sp, sp, #0x2d0
    b81c:	stp	x19, x20, [sp]
    b820:	mov	x20, x3
    b824:	and	w19, w2, #0xff
    b828:	stp	x27, x28, [sp, #64]
    b82c:	mov	x27, x0
    b830:	add	x0, x0, #0x14
    b834:	stp	x21, x22, [sp, #16]
    b838:	mov	x21, x1
    b83c:	mov	w1, #0xffffffff            	// #-1
    b840:	stp	x23, x24, [sp, #32]
    b844:	stp	x25, x26, [sp, #48]
    b848:	str	x30, [sp, #80]
    b84c:	ldxr	w22, [x0]
    b850:	stxr	w2, w1, [x0]
    b854:	cbnz	w2, b84c <__ubsan_handle_cfi_bad_type@@Base+0x34>
    b858:	dmb	ish
    b85c:	ldp	x4, x5, [x20]
    b860:	mov	x1, #0x0                   	// #0
    b864:	ldr	w23, [x27, #16]
    b868:	add	x26, sp, #0x90
    b86c:	ldr	x6, [x20, #16]
    b870:	mov	x2, x26
    b874:	ldr	x24, [x27, #8]
    b878:	bfxil	x1, x23, #0, #32
    b87c:	mov	w3, #0x19                  	// #25
    b880:	stp	x4, x5, [sp, #144]
    b884:	bfi	x1, x22, #32, #32
    b888:	mov	x0, x24
    b88c:	str	x6, [sp, #160]
    b890:	bl	aa70 <__ubsan_default_options@@Base+0x2968>
    b894:	tst	w0, #0xff
    b898:	b.ne	bac4 <__ubsan_handle_cfi_bad_type@@Base+0x2ac>  // b.any
    b89c:	mov	w0, #0x1                   	// #1
    b8a0:	str	w0, [sp, #288]
    b8a4:	str	x24, [sp, #296]
    b8a8:	add	x25, sp, #0xd0
    b8ac:	str	w23, [sp, #304]
    b8b0:	mov	x1, x26
    b8b4:	str	w22, [sp, #308]
    b8b8:	add	x2, sp, #0x60
    b8bc:	ldp	x8, x9, [x20]
    b8c0:	mov	x0, x25
    b8c4:	ldp	x4, x5, [sp, #288]
    b8c8:	stp	x4, x5, [sp, #96]
    b8cc:	mov	w3, #0x19                  	// #25
    b8d0:	ldp	x6, x7, [sp, #304]
    b8d4:	mov	x26, #0x0                   	// #0
    b8d8:	ldr	x4, [x20, #16]
    b8dc:	stp	x6, x7, [sp, #112]
    b8e0:	ldr	x10, [sp, #320]
    b8e4:	str	x10, [sp, #128]
    b8e8:	stp	x8, x9, [sp, #144]
    b8ec:	str	x4, [sp, #160]
    b8f0:	bl	7ba0 <__asan_backtrace_open@plt+0x1170>
    b8f4:	cbnz	w19, bb14 <__ubsan_handle_cfi_bad_type@@Base+0x2fc>
    b8f8:	ldrb	w0, [x27]
    b8fc:	cmp	w0, #0x2
    b900:	b.eq	bbe4 <__ubsan_handle_cfi_bad_type@@Base+0x3cc>  // b.none
    b904:	b.hi	bae4 <__ubsan_handle_cfi_bad_type@@Base+0x2cc>  // b.pmore
    b908:	cmp	w0, #0x0
    b90c:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b910:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b914:	add	x19, x19, #0x118
    b918:	add	x0, x0, #0x130
    b91c:	csel	x19, x19, x0, ne  // ne = any
    b920:	ldr	x1, [x27, #24]
    b924:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b928:	add	x2, x2, #0x168
    b92c:	mov	x3, #0x1900000000          	// #107374182400
    b930:	add	x27, sp, #0x120
    b934:	mov	w28, #0x1                   	// #1
    b938:	mov	x0, x27
    b93c:	str	w28, [sp, #288]
    b940:	str	x24, [sp, #296]
    b944:	str	w23, [sp, #304]
    b948:	str	w22, [sp, #308]
    b94c:	stp	x3, x2, [sp, #328]
    b950:	str	wzr, [sp, #608]
    b954:	str	wzr, [sp, #616]
    b958:	str	xzr, [sp, #624]
    b95c:	str	xzr, [sp, #632]
    b960:	str	wzr, [sp, #656]
    b964:	str	xzr, [sp, #664]
    b968:	str	xzr, [sp, #672]
    b96c:	str	xzr, [sp, #696]
    b970:	str	wzr, [sp, #704]
    b974:	bl	7040 <__asan_backtrace_open@plt+0x610>
    b978:	ldr	w3, [x0, #320]
    b97c:	mov	x1, x0
    b980:	cmp	w3, #0x8
    b984:	b.eq	bbc4 <__ubsan_handle_cfi_bad_type@@Base+0x3ac>  // b.none
    b988:	ubfiz	x2, x3, #5, #32
    b98c:	add	w0, w3, #0x1
    b990:	add	x2, x2, #0x40
    b994:	str	w0, [x1, #320]
    b998:	add	x4, x1, x2
    b99c:	cmp	w0, #0x8
    b9a0:	str	wzr, [x1, x2]
    b9a4:	str	x19, [x4, #16]
    b9a8:	b.eq	bbc4 <__ubsan_handle_cfi_bad_type@@Base+0x3ac>  // b.none
    b9ac:	ubfiz	x0, x0, #5, #32
    b9b0:	add	w3, w3, #0x2
    b9b4:	add	x2, x0, #0x40
    b9b8:	str	w3, [x1, #320]
    b9bc:	add	x3, x1, x2
    b9c0:	mov	w4, #0x5                   	// #5
    b9c4:	mov	x0, x27
    b9c8:	str	w4, [x1, x2]
    b9cc:	str	x21, [x3, #16]
    b9d0:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    b9d4:	cbz	x26, bb94 <__ubsan_handle_cfi_bad_type@@Base+0x37c>
    b9d8:	mov	x2, #0x1                   	// #1
    b9dc:	mov	x0, x27
    b9e0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    b9e4:	mov	w3, #0x2                   	// #2
    b9e8:	add	x1, x1, #0x1c8
    b9ec:	movk	x2, #0x19, lsl #32
    b9f0:	str	w3, [sp, #288]
    b9f4:	stp	xzr, xzr, [sp, #296]
    b9f8:	str	x21, [sp, #312]
    b9fc:	stp	x2, x1, [sp, #328]
    ba00:	str	w28, [sp, #352]
    ba04:	str	x26, [sp, #368]
    ba08:	str	w28, [sp, #608]
    ba0c:	str	wzr, [sp, #616]
    ba10:	add	x26, sp, #0xb0
    ba14:	str	xzr, [sp, #624]
    ba18:	adrp	x19, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    ba1c:	str	xzr, [sp, #632]
    ba20:	add	x19, x19, #0x998
    ba24:	str	wzr, [sp, #656]
    ba28:	str	xzr, [sp, #664]
    ba2c:	str	xzr, [sp, #672]
    ba30:	str	xzr, [sp, #696]
    ba34:	str	wzr, [sp, #704]
    ba38:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    ba3c:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
    ba40:	str	xzr, [sp, #176]
    ba44:	mov	x1, x21
    ba48:	mov	x2, x26
    ba4c:	mov	x3, x27
    ba50:	bl	20ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
    ba54:	tst	w0, #0xff
    ba58:	b.eq	ba70 <__ubsan_handle_cfi_bad_type@@Base+0x258>  // b.none
    ba5c:	ldr	x19, [sp, #176]
    ba60:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    ba64:	add	x0, x0, #0x998
    ba68:	cmp	x19, #0x0
    ba6c:	csel	x19, x0, x19, eq  // eq = none
    ba70:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
    ba74:	str	xzr, [sp, #176]
    ba78:	ldr	x1, [x20, #8]
    ba7c:	mov	x2, x26
    ba80:	mov	x3, x27
    ba84:	adrp	x20, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    ba88:	add	x20, x20, #0x998
    ba8c:	bl	20ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
    ba90:	tst	w0, #0xff
    ba94:	b.eq	baac <__ubsan_handle_cfi_bad_type@@Base+0x294>  // b.none
    ba98:	ldr	x20, [sp, #176]
    ba9c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    baa0:	add	x0, x0, #0x998
    baa4:	cmp	x20, #0x0
    baa8:	csel	x20, x0, x20, eq  // eq = none
    baac:	mov	x1, x19
    bab0:	mov	x0, x20
    bab4:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    bab8:	cbnz	w0, bb28 <__ubsan_handle_cfi_bad_type@@Base+0x310>
    babc:	mov	x0, x25
    bac0:	bl	7c08 <__asan_backtrace_open@plt+0x11d8>
    bac4:	ldp	x19, x20, [sp]
    bac8:	ldp	x21, x22, [sp, #16]
    bacc:	ldp	x23, x24, [sp, #32]
    bad0:	ldp	x25, x26, [sp, #48]
    bad4:	ldp	x27, x28, [sp, #64]
    bad8:	ldr	x30, [sp, #80]
    badc:	add	sp, sp, #0x2d0
    bae0:	ret
    bae4:	cmp	w0, #0x5
    bae8:	b.hi	bb00 <__ubsan_handle_cfi_bad_type@@Base+0x2e8>  // b.pmore
    baec:	cmp	w0, #0x3
    baf0:	b.ne	bbf0 <__ubsan_handle_cfi_bad_type@@Base+0x3d8>  // b.any
    baf4:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    baf8:	add	x19, x19, #0xe8
    bafc:	b	b920 <__ubsan_handle_cfi_bad_type@@Base+0x108>
    bb00:	cmp	w0, #0x6
    bb04:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    bb08:	add	x19, x19, #0x140
    bb0c:	csel	x19, x19, xzr, eq  // eq = none
    bb10:	b	b920 <__ubsan_handle_cfi_bad_type@@Base+0x108>
    bb14:	add	x8, sp, #0xb8
    bb18:	mov	x0, x21
    bb1c:	bl	c3f0 <__ubsan_get_current_report_data@@Base+0x498>
    bb20:	ldr	x26, [sp, #184]
    bb24:	b	b8f8 <__ubsan_handle_cfi_bad_type@@Base+0xe0>
    bb28:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    bb2c:	mov	x3, #0x1                   	// #1
    bb30:	add	x1, x1, #0x1e0
    bb34:	mov	w4, #0x1                   	// #1
    bb38:	movk	x3, #0x19, lsl #32
    bb3c:	mov	w2, #0x2                   	// #2
    bb40:	mov	x0, x27
    bb44:	str	w4, [sp, #288]
    bb48:	str	x24, [sp, #296]
    bb4c:	str	w23, [sp, #304]
    bb50:	str	w22, [sp, #308]
    bb54:	stp	x3, x1, [sp, #328]
    bb58:	str	wzr, [sp, #352]
    bb5c:	str	x20, [sp, #368]
    bb60:	str	wzr, [sp, #384]
    bb64:	str	x19, [sp, #400]
    bb68:	str	w2, [sp, #608]
    bb6c:	str	wzr, [sp, #616]
    bb70:	str	xzr, [sp, #624]
    bb74:	str	xzr, [sp, #632]
    bb78:	str	wzr, [sp, #656]
    bb7c:	str	xzr, [sp, #664]
    bb80:	str	xzr, [sp, #672]
    bb84:	str	xzr, [sp, #696]
    bb88:	str	wzr, [sp, #704]
    bb8c:	bl	71d8 <__asan_backtrace_open@plt+0x7a8>
    bb90:	b	babc <__ubsan_handle_cfi_bad_type@@Base+0x2a4>
    bb94:	mov	x2, #0x1                   	// #1
    bb98:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    bb9c:	mov	w3, #0x2                   	// #2
    bba0:	add	x1, x1, #0x1b8
    bba4:	movk	x2, #0x19, lsl #32
    bba8:	mov	x0, x27
    bbac:	str	w3, [sp, #288]
    bbb0:	stp	xzr, xzr, [sp, #296]
    bbb4:	str	x21, [sp, #312]
    bbb8:	stp	x2, x1, [sp, #328]
    bbbc:	str	wzr, [sp, #608]
    bbc0:	b	ba0c <__ubsan_handle_cfi_bad_type@@Base+0x1f4>
    bbc4:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    bbc8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    bbcc:	add	x2, x2, #0xe0
    bbd0:	add	x0, x0, #0x60
    bbd4:	mov	x4, #0x0                   	// #0
    bbd8:	mov	x3, #0x0                   	// #0
    bbdc:	mov	w1, #0xbf                  	// #191
    bbe0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    bbe4:	adrp	x19, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    bbe8:	add	x19, x19, #0x100
    bbec:	b	b920 <__ubsan_handle_cfi_bad_type@@Base+0x108>
    bbf0:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    bbf4:	nop
    bbf8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    bbfc:	add	x0, x0, #0x210
    bc00:	ret
    bc04:	nop
    bc08:	stp	x19, x20, [sp, #-32]!
    bc0c:	adrp	x19, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    bc10:	add	x0, x19, #0xe68
    bc14:	mov	w2, #0x1                   	// #1
    bc18:	str	x30, [sp, #24]
    bc1c:	ldxrb	w1, [x0]
    bc20:	stxrb	w3, w2, [x0]
    bc24:	cbnz	w3, bc1c <__ubsan_handle_cfi_bad_type@@Base+0x404>
    bc28:	dmb	ish
    bc2c:	tst	w1, #0xff
    bc30:	b.eq	bc38 <__ubsan_handle_cfi_bad_type@@Base+0x420>  // b.none
    bc34:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    bc38:	add	x20, x19, #0xe68
    bc3c:	ldrb	w0, [x20, #1]
    bc40:	cbz	w0, bc58 <__ubsan_handle_cfi_bad_type@@Base+0x440>
    bc44:	dmb	ish
    bc48:	strb	wzr, [x19, #3688]
    bc4c:	ldr	x30, [sp, #24]
    bc50:	ldp	x19, x20, [sp], #32
    bc54:	ret
    bc58:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    bc5c:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    bc60:	add	x1, x1, #0x210
    bc64:	str	x21, [sp, #16]
    bc68:	ldr	x0, [x0, #4024]
    bc6c:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    bc70:	str	x1, [x0]
    bc74:	bl	f7a0 <__sancov_default_options@@Base+0x3050>
    bc78:	bl	81f8 <__ubsan_default_options@@Base+0xf0>
    bc7c:	ldr	x21, [x21, #4056]
    bc80:	ldr	x0, [x21, #40]
    bc84:	bl	69e0 <__sanitizer_set_report_path@plt>
    bc88:	bl	179d8 <__sanitizer_set_report_fd@@Base+0x4ab8>
    bc8c:	ldrb	w0, [x21, #161]
    bc90:	ldr	x1, [x21, #168]
    bc94:	bl	100f8 <__sanitizer_sandbox_on_notify@@Base+0x140>
    bc98:	bl	7d40 <__asan_backtrace_open@plt+0x1310>
    bc9c:	mov	w0, #0x1                   	// #1
    bca0:	strb	w0, [x20, #1]
    bca4:	ldr	x21, [sp, #16]
    bca8:	dmb	ish
    bcac:	strb	wzr, [x19, #3688]
    bcb0:	ldr	x30, [sp, #24]
    bcb4:	ldp	x19, x20, [sp], #32
    bcb8:	ret
    bcbc:	nop
    bcc0:	b	bc08 <__ubsan_handle_cfi_bad_type@@Base+0x3f0>
    bcc4:	nop
    bcc8:	stp	x19, x20, [sp, #-32]!
    bccc:	adrp	x19, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    bcd0:	add	x0, x19, #0xe68
    bcd4:	mov	w2, #0x1                   	// #1
    bcd8:	str	x30, [sp, #16]
    bcdc:	ldxrb	w1, [x0]
    bce0:	stxrb	w3, w2, [x0]
    bce4:	cbnz	w3, bcdc <__ubsan_handle_cfi_bad_type@@Base+0x4c4>
    bce8:	dmb	ish
    bcec:	tst	w1, #0xff
    bcf0:	b.eq	bcf8 <__ubsan_handle_cfi_bad_type@@Base+0x4e0>  // b.none
    bcf4:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    bcf8:	add	x20, x19, #0xe68
    bcfc:	ldrb	w0, [x20, #1]
    bd00:	cbz	w0, bd18 <__ubsan_handle_cfi_bad_type@@Base+0x500>
    bd04:	dmb	ish
    bd08:	strb	wzr, [x19, #3688]
    bd0c:	ldr	x30, [sp, #16]
    bd10:	ldp	x19, x20, [sp], #32
    bd14:	ret
    bd18:	bl	7d40 <__asan_backtrace_open@plt+0x1310>
    bd1c:	mov	w0, #0x1                   	// #1
    bd20:	strb	w0, [x20, #1]
    bd24:	dmb	ish
    bd28:	strb	wzr, [x19, #3688]
    bd2c:	ldr	x30, [sp, #16]
    bd30:	ldp	x19, x20, [sp], #32
    bd34:	ret
    bd38:	stp	x19, x20, [sp, #-32]!
    bd3c:	mov	x20, x0
    bd40:	mov	w19, #0x0                   	// #0
    bd44:	stp	x21, x30, [sp, #16]
    bd48:	mov	w21, #0x1                   	// #1
    bd4c:	nop
    bd50:	cmp	w19, #0x9
    bd54:	b.gt	bd90 <__ubsan_handle_cfi_bad_type@@Base+0x578>
    bd58:	ldrb	w0, [x20]
    bd5c:	tst	w0, #0xff
    bd60:	b.ne	bd7c <__ubsan_handle_cfi_bad_type@@Base+0x564>  // b.any
    bd64:	ldxrb	w0, [x20]
    bd68:	stxrb	w1, w21, [x20]
    bd6c:	cbnz	w1, bd64 <__ubsan_handle_cfi_bad_type@@Base+0x54c>
    bd70:	dmb	ish
    bd74:	tst	w0, #0xff
    bd78:	b.eq	bd84 <__ubsan_handle_cfi_bad_type@@Base+0x56c>  // b.none
    bd7c:	add	w19, w19, #0x1
    bd80:	b	bd50 <__ubsan_handle_cfi_bad_type@@Base+0x538>
    bd84:	ldp	x21, x30, [sp, #16]
    bd88:	ldp	x19, x20, [sp], #32
    bd8c:	ret
    bd90:	bl	156c0 <__sanitizer_set_report_fd@@Base+0x27a0>
    bd94:	b	bd58 <__ubsan_handle_cfi_bad_type@@Base+0x540>

000000000000bd98 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@@Base>:
    bd98:	adrp	x1, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    bd9c:	str	x0, [x1, #3696]
    bda0:	ret
    bda4:	nop

000000000000bda8 <__ubsan_on_report@@Base>:
    bda8:	ret
    bdac:	nop
    bdb0:	stp	x19, x20, [sp, #-80]!
    bdb4:	add	x20, x0, #0x10
    bdb8:	mov	x19, x0
    bdbc:	stp	x21, x22, [sp, #16]
    bdc0:	stp	x23, x24, [sp, #32]
    bdc4:	stp	x25, x26, [sp, #48]
    bdc8:	str	x30, [sp, #64]
    bdcc:	stp	x1, x2, [x0]
    bdd0:	ldr	x0, [x3, #24]
    bdd4:	stp	xzr, xzr, [x20, #8]
    bdd8:	str	xzr, [x19, #16]
    bddc:	adds	x21, x0, #0x1
    bde0:	b.ne	be08 <__ubsan_on_report@@Base+0x60>  // b.any
    bde4:	str	xzr, [x20, #24]
    bde8:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    bdec:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    bdf0:	add	x2, x2, #0x190
    bdf4:	add	x0, x0, #0x1a8
    bdf8:	mov	x4, #0x0                   	// #0
    bdfc:	mov	x3, #0x0                   	// #0
    be00:	mov	w1, #0x1b6                 	// #438
    be04:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    be08:	adrp	x25, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    be0c:	mov	x22, x3
    be10:	ldr	x23, [x25, #4016]
    be14:	ldr	x0, [x23]
    be18:	cbz	x0, bed0 <__ubsan_on_report@@Base+0x128>
    be1c:	sub	x1, x0, #0x1
    be20:	tst	x0, x1
    be24:	b.ne	bf48 <__ubsan_on_report@@Base+0x1a0>  // b.any
    be28:	add	x1, x21, x1
    be2c:	neg	x0, x0
    be30:	and	x24, x1, x0
    be34:	mov	w2, #0x0                   	// #0
    be38:	mov	x0, x24
    be3c:	adrp	x26, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    be40:	add	x1, x26, #0x178
    be44:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    be48:	ldr	x2, [x20, #16]
    be4c:	mov	x23, x0
    be50:	ldr	x1, [x19, #16]
    be54:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    be58:	ldr	x1, [x20, #8]
    be5c:	ldr	x0, [x19, #16]
    be60:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    be64:	ldr	x2, [x20, #16]
    be68:	str	x23, [x19, #16]
    be6c:	str	x24, [x20, #8]
    be70:	cmp	x21, x2
    be74:	b.ls	be94 <__ubsan_on_report@@Base+0xec>  // b.plast
    be78:	cmp	x21, x24
    be7c:	b.hi	bedc <__ubsan_on_report@@Base+0x134>  // b.pmore
    be80:	add	x0, x23, x2
    be84:	mov	w1, #0x0                   	// #0
    be88:	sub	x2, x21, x2
    be8c:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    be90:	ldr	x23, [x19, #16]
    be94:	stp	x21, xzr, [x20, #16]
    be98:	mov	x0, x19
    be9c:	strb	wzr, [x23]
    bea0:	bl	65a0 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>
    bea4:	ldr	x2, [x22]
    bea8:	mov	x0, x20
    beac:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    beb0:	add	x1, x1, #0x98
    beb4:	bl	1a3b0 <OnPrint@@Base+0x420>
    beb8:	ldp	x21, x22, [sp, #16]
    bebc:	ldp	x23, x24, [sp, #32]
    bec0:	ldp	x25, x26, [sp, #48]
    bec4:	ldr	x30, [sp, #64]
    bec8:	ldp	x19, x20, [sp], #80
    becc:	b	66d0 <__ubsan_on_report@plt>
    bed0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    bed4:	str	x0, [x23]
    bed8:	b	be1c <__ubsan_on_report@@Base+0x74>
    bedc:	ldr	x25, [x25, #4016]
    bee0:	ldr	x0, [x25]
    bee4:	cbz	x0, bf3c <__ubsan_on_report@@Base+0x194>
    bee8:	sub	x1, x0, #0x1
    beec:	tst	x1, x0
    bef0:	b.ne	bf48 <__ubsan_on_report@@Base+0x1a0>  // b.any
    bef4:	add	x1, x21, x1
    bef8:	neg	x0, x0
    befc:	and	x24, x1, x0
    bf00:	mov	w2, #0x0                   	// #0
    bf04:	add	x1, x26, #0x178
    bf08:	mov	x0, x24
    bf0c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    bf10:	mov	x23, x0
    bf14:	ldr	x2, [x20, #16]
    bf18:	ldr	x1, [x19, #16]
    bf1c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    bf20:	ldr	x1, [x20, #8]
    bf24:	ldr	x0, [x19, #16]
    bf28:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    bf2c:	ldr	x2, [x20, #16]
    bf30:	str	x23, [x19, #16]
    bf34:	str	x24, [x20, #8]
    bf38:	b	be80 <__ubsan_on_report@@Base+0xd8>
    bf3c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    bf40:	str	x0, [x25]
    bf44:	b	bee8 <__ubsan_on_report@@Base+0x140>
    bf48:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    bf4c:	add	x0, x0, #0x160
    bf50:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
    bf54:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

000000000000bf58 <__ubsan_get_current_report_data@@Base>:
    bf58:	cmp	x0, #0x0
    bf5c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    bf60:	b.eq	c030 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
    bf64:	cmp	x2, #0x0
    bf68:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    bf6c:	b.eq	c030 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
    bf70:	cmp	x4, #0x0
    bf74:	ccmp	x5, #0x0, #0x4, ne  // ne = any
    bf78:	b.eq	c030 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
    bf7c:	adrp	x6, 5d000 <__asan_cplus_demangle_operators@@Base+0x2a60>
    bf80:	ldr	x6, [x6, #3696]
    bf84:	ldr	x9, [x6, #16]
    bf88:	ldrb	w8, [x9]
    bf8c:	sub	w7, w8, #0x61
    bf90:	and	w7, w7, #0xff
    bf94:	cmp	w7, #0x19
    bf98:	b.ls	bfe0 <__ubsan_get_current_report_data@@Base+0x88>  // b.plast
    bf9c:	ldr	x7, [x6]
    bfa0:	str	x7, [x0]
    bfa4:	ldp	x7, x0, [x6, #8]
    bfa8:	str	x0, [x1]
    bfac:	ldr	w1, [x7]
    bfb0:	cmp	w1, #0x1
    bfb4:	b.eq	c004 <__ubsan_get_current_report_data@@Base+0xac>  // b.none
    bfb8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    bfbc:	add	x0, x0, #0x100
    bfc0:	str	x0, [x2]
    bfc4:	cmp	w1, #0x2
    bfc8:	str	wzr, [x4]
    bfcc:	str	wzr, [x3]
    bfd0:	b.eq	c024 <__ubsan_get_current_report_data@@Base+0xcc>  // b.none
    bfd4:	mov	x0, #0x0                   	// #0
    bfd8:	str	x0, [x5]
    bfdc:	ret
    bfe0:	sub	w8, w8, #0x20
    bfe4:	strb	w8, [x9]
    bfe8:	ldr	x7, [x6]
    bfec:	str	x7, [x0]
    bff0:	ldp	x7, x0, [x6, #8]
    bff4:	str	x0, [x1]
    bff8:	ldr	w1, [x7]
    bffc:	cmp	w1, #0x1
    c000:	b.ne	bfb8 <__ubsan_get_current_report_data@@Base+0x60>  // b.any
    c004:	ldr	x8, [x7, #8]
    c008:	mov	x0, #0x0                   	// #0
    c00c:	ldp	w6, w1, [x7, #16]
    c010:	str	x8, [x2]
    c014:	str	w6, [x3]
    c018:	str	w1, [x4]
    c01c:	str	x0, [x5]
    c020:	ret
    c024:	ldr	x0, [x7, #24]
    c028:	str	x0, [x5]
    c02c:	ret
    c030:	str	x30, [sp, #-16]!
    c034:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c038:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c03c:	add	x2, x2, #0x230
    c040:	add	x0, x0, #0x280
    c044:	mov	x4, #0x0                   	// #0
    c048:	mov	x3, #0x0                   	// #0
    c04c:	mov	w1, #0x30                  	// #48
    c050:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c054:	nop
    c058:	ldr	x0, [x0]
    c05c:	str	x30, [sp, #-16]!
    c060:	bl	c3f0 <__ubsan_get_current_report_data@@Base+0x498>
    c064:	ldr	x30, [sp], #16
    c068:	ret
    c06c:	nop
    c070:	stp	x19, x20, [sp, #-48]!
    c074:	mov	x20, x0
    c078:	str	x30, [sp, #40]
    c07c:	cbz	x1, c174 <__ubsan_get_current_report_data@@Base+0x21c>
    c080:	cbz	x0, c17c <__ubsan_get_current_report_data@@Base+0x224>
    c084:	stp	x21, x22, [sp, #16]
    c088:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c08c:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c090:	ldr	x22, [x22, #3960]
    c094:	str	x23, [sp, #32]
    c098:	ldr	x21, [x21, #4064]
    c09c:	mov	x23, x1
    c0a0:	b	c0ac <__ubsan_get_current_report_data@@Base+0x154>
    c0a4:	ldr	x20, [x0, #16]
    c0a8:	cbz	x20, c13c <__ubsan_get_current_report_data@@Base+0x1e4>
    c0ac:	mov	x2, x22
    c0b0:	mov	x1, x21
    c0b4:	mov	x0, x20
    c0b8:	mov	x3, #0x0                   	// #0
    c0bc:	bl	66e0 <__dynamic_cast@plt>
    c0c0:	mov	x19, x0
    c0c4:	cbnz	x0, c0a4 <__ubsan_get_current_report_data@@Base+0x14c>
    c0c8:	adrp	x2, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c0cc:	mov	x1, x21
    c0d0:	mov	x0, x20
    c0d4:	mov	x3, #0x0                   	// #0
    c0d8:	ldr	x2, [x2, #3920]
    c0dc:	bl	66e0 <__dynamic_cast@plt>
    c0e0:	cbz	x0, c124 <__ubsan_get_current_report_data@@Base+0x1cc>
    c0e4:	ldr	w21, [x0, #20]
    c0e8:	cbz	w21, c124 <__ubsan_get_current_report_data@@Base+0x1cc>
    c0ec:	sub	w21, w21, #0x1
    c0f0:	add	x1, x0, #0x28
    c0f4:	add	x20, x0, #0x18
    c0f8:	add	x21, x1, w21, uxtw #4
    c0fc:	nop
    c100:	ldr	x0, [x20, #8]
    c104:	sub	x1, x23, x0, asr #8
    c108:	tbnz	w0, #0, c118 <__ubsan_get_current_report_data@@Base+0x1c0>
    c10c:	ldr	x0, [x20]
    c110:	bl	c070 <__ubsan_get_current_report_data@@Base+0x118>
    c114:	cbnz	x0, c158 <__ubsan_get_current_report_data@@Base+0x200>
    c118:	add	x20, x20, #0x10
    c11c:	cmp	x20, x21
    c120:	b.ne	c100 <__ubsan_get_current_report_data@@Base+0x1a8>  // b.any
    c124:	ldp	x21, x22, [sp, #16]
    c128:	ldr	x23, [sp, #32]
    c12c:	mov	x0, x19
    c130:	ldr	x30, [sp, #40]
    c134:	ldp	x19, x20, [sp], #48
    c138:	ret
    c13c:	mov	x19, #0x0                   	// #0
    c140:	mov	x0, x19
    c144:	ldp	x21, x22, [sp, #16]
    c148:	ldr	x23, [sp, #32]
    c14c:	ldr	x30, [sp, #40]
    c150:	ldp	x19, x20, [sp], #48
    c154:	ret
    c158:	mov	x19, x0
    c15c:	mov	x0, x19
    c160:	ldp	x21, x22, [sp, #16]
    c164:	ldr	x23, [sp, #32]
    c168:	ldr	x30, [sp, #40]
    c16c:	ldp	x19, x20, [sp], #48
    c170:	ret
    c174:	mov	x19, x0
    c178:	b	c12c <__ubsan_get_current_report_data@@Base+0x1d4>
    c17c:	mov	x19, #0x0                   	// #0
    c180:	b	c12c <__ubsan_get_current_report_data@@Base+0x1d4>
    c184:	nop
    c188:	stp	x19, x20, [sp, #-48]!
    c18c:	mov	x19, x0
    c190:	mov	x20, x1
    c194:	ldr	x0, [x0, #8]
    c198:	stp	x23, x30, [sp, #32]
    c19c:	mov	x23, x2
    c1a0:	ldr	x1, [x1, #8]
    c1a4:	cmp	x1, x0
    c1a8:	b.eq	c284 <__ubsan_get_current_report_data@@Base+0x32c>  // b.none
    c1ac:	stp	x21, x22, [sp, #16]
    c1b0:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c1b4:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c1b8:	ldr	x22, [x22, #3960]
    c1bc:	ldr	x21, [x21, #4064]
    c1c0:	b	c1d8 <__ubsan_get_current_report_data@@Base+0x280>
    c1c4:	ldr	x19, [x0, #16]
    c1c8:	ldr	x1, [x20, #8]
    c1cc:	ldr	x0, [x19, #8]
    c1d0:	cmp	x0, x1
    c1d4:	b.eq	c280 <__ubsan_get_current_report_data@@Base+0x328>  // b.none
    c1d8:	ldrb	w3, [x0]
    c1dc:	cmp	w3, #0x2a
    c1e0:	b.eq	c1ec <__ubsan_get_current_report_data@@Base+0x294>  // b.none
    c1e4:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
    c1e8:	cbz	w0, c280 <__ubsan_get_current_report_data@@Base+0x328>
    c1ec:	mov	x2, x22
    c1f0:	mov	x1, x21
    c1f4:	mov	x0, x19
    c1f8:	mov	x3, #0x0                   	// #0
    c1fc:	bl	66e0 <__dynamic_cast@plt>
    c200:	cbnz	x0, c1c4 <__ubsan_get_current_report_data@@Base+0x26c>
    c204:	adrp	x2, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c208:	mov	x1, x21
    c20c:	mov	x0, x19
    c210:	mov	x3, #0x0                   	// #0
    c214:	ldr	x2, [x2, #3920]
    c218:	bl	66e0 <__dynamic_cast@plt>
    c21c:	mov	x21, x0
    c220:	cbz	x0, c26c <__ubsan_get_current_report_data@@Base+0x314>
    c224:	ldr	w0, [x0, #20]
    c228:	cbz	w0, c26c <__ubsan_get_current_report_data@@Base+0x314>
    c22c:	mov	w19, #0x0                   	// #0
    c230:	ubfiz	x3, x19, #4, #32
    c234:	mov	x1, x20
    c238:	add	x3, x21, x3
    c23c:	add	w19, w19, #0x1
    c240:	ldr	x0, [x3, #32]
    c244:	asr	x2, x0, #8
    c248:	tbnz	w0, #0, c298 <__ubsan_get_current_report_data@@Base+0x340>
    c24c:	ldr	x0, [x3, #24]
    c250:	sub	x2, x23, x2
    c254:	bl	c188 <__ubsan_get_current_report_data@@Base+0x230>
    c258:	tst	w0, #0xff
    c25c:	b.ne	c298 <__ubsan_get_current_report_data@@Base+0x340>  // b.any
    c260:	ldr	w0, [x21, #20]
    c264:	cmp	w0, w19
    c268:	b.ne	c230 <__ubsan_get_current_report_data@@Base+0x2d8>  // b.any
    c26c:	mov	w0, #0x0                   	// #0
    c270:	ldp	x21, x22, [sp, #16]
    c274:	ldp	x23, x30, [sp, #32]
    c278:	ldp	x19, x20, [sp], #48
    c27c:	ret
    c280:	ldp	x21, x22, [sp, #16]
    c284:	cmp	x23, #0x0
    c288:	cset	w0, eq  // eq = none
    c28c:	ldp	x23, x30, [sp, #32]
    c290:	ldp	x19, x20, [sp], #48
    c294:	ret
    c298:	mov	w0, #0x1                   	// #1
    c29c:	ldp	x21, x22, [sp, #16]
    c2a0:	ldp	x23, x30, [sp, #32]
    c2a4:	ldp	x19, x20, [sp], #48
    c2a8:	ret
    c2ac:	nop
    c2b0:	and	w8, w2, #0xffff
    c2b4:	stp	x19, x20, [sp, #-48]!
    c2b8:	eor	w8, w8, #0x1
    c2bc:	mov	x20, x1
    c2c0:	adrp	x7, 5e000 <__ubsan_vptr_type_cache@@Base+0x188>
    c2c4:	mov	x19, x2
    c2c8:	mov	w3, w8
    c2cc:	lsr	w9, w2, #16
    c2d0:	add	x1, x7, #0x278
    c2d4:	mov	w6, #0x5                   	// #5
    c2d8:	stp	x21, x22, [sp, #16]
    c2dc:	str	x30, [sp, #32]
    c2e0:	mov	w2, w3
    c2e4:	add	w4, w9, w3
    c2e8:	add	w3, w4, #0x1
    c2ec:	sub	w4, w4, #0x10, lsl #12
    c2f0:	ldr	x5, [x1, x2, lsl #3]
    c2f4:	cmp	x19, x5
    c2f8:	cbz	x5, c3e4 <__ubsan_get_current_report_data@@Base+0x48c>
    c2fc:	b.eq	c3e4 <__ubsan_get_current_report_data@@Base+0x48c>  // b.none
    c300:	cmp	w3, #0x10, lsl #12
    c304:	csel	w3, w4, w3, hi  // hi = pmore
    c308:	subs	w6, w6, #0x1
    c30c:	b.ne	c2e0 <__ubsan_get_current_report_data@@Base+0x388>  // b.any
    c310:	add	x7, x7, #0x278
    c314:	mov	w1, w8
    c318:	add	x22, x7, w8, uxth #3
    c31c:	ldr	x5, [x7, x1, lsl #3]
    c320:	cmp	x5, x19
    c324:	b.eq	c3c0 <__ubsan_get_current_report_data@@Base+0x468>  // b.none
    c328:	ldr	x21, [x0]
    c32c:	mov	x1, #0x10                  	// #16
    c330:	sub	x0, x21, #0x10
    c334:	bl	18d98 <__sanitizer_set_report_fd@@Base+0x5e78>
    c338:	tst	w0, #0xff
    c33c:	b.eq	c3ac <__ubsan_get_current_report_data@@Base+0x454>  // b.none
    c340:	ldur	x0, [x21, #-8]
    c344:	cbz	x0, c3ac <__ubsan_get_current_report_data@@Base+0x454>
    c348:	ldur	x21, [x21, #-16]
    c34c:	add	x1, x21, #0x100, lsl #12
    c350:	cmp	x1, #0x200, lsl #12
    c354:	b.hi	c3ac <__ubsan_get_current_report_data@@Base+0x454>  // b.pmore
    c358:	adrp	x2, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c35c:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c360:	mov	x3, #0x0                   	// #0
    c364:	ldr	x2, [x2, #4064]
    c368:	ldr	x1, [x1, #3928]
    c36c:	bl	66e0 <__dynamic_cast@plt>
    c370:	cbz	x0, c3ac <__ubsan_get_current_report_data@@Base+0x454>
    c374:	neg	x2, x21
    c378:	mov	x1, x20
    c37c:	bl	c188 <__ubsan_get_current_report_data@@Base+0x230>
    c380:	ands	w0, w0, #0xff
    c384:	b.eq	c3ac <__ubsan_get_current_report_data@@Base+0x454>  // b.none
    c388:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c38c:	and	x2, x19, #0x7f
    c390:	str	x19, [x22]
    c394:	ldr	x1, [x1, #3792]
    c398:	ldp	x21, x22, [sp, #16]
    c39c:	str	x19, [x1, x2, lsl #3]
    c3a0:	ldr	x30, [sp, #32]
    c3a4:	ldp	x19, x20, [sp], #48
    c3a8:	ret
    c3ac:	mov	w0, #0x0                   	// #0
    c3b0:	ldp	x21, x22, [sp, #16]
    c3b4:	ldr	x30, [sp, #32]
    c3b8:	ldp	x19, x20, [sp], #48
    c3bc:	ret
    c3c0:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c3c4:	and	x2, x5, #0x7f
    c3c8:	mov	w0, #0x1                   	// #1
    c3cc:	ldr	x1, [x1, #3792]
    c3d0:	ldp	x21, x22, [sp, #16]
    c3d4:	str	x5, [x1, x2, lsl #3]
    c3d8:	ldr	x30, [sp, #32]
    c3dc:	ldp	x19, x20, [sp], #48
    c3e0:	ret
    c3e4:	add	x7, x7, #0x278
    c3e8:	add	x22, x7, x2, lsl #3
    c3ec:	b	c320 <__ubsan_get_current_report_data@@Base+0x3c8>
    c3f0:	stp	x19, x20, [sp, #-32]!
    c3f4:	mov	x1, #0x10                  	// #16
    c3f8:	mov	x20, x0
    c3fc:	mov	x19, x8
    c400:	sub	x0, x0, #0x10
    c404:	str	x30, [sp, #24]
    c408:	bl	18d98 <__sanitizer_set_report_fd@@Base+0x5e78>
    c40c:	tst	w0, #0xff
    c410:	b.eq	c480 <__ubsan_get_current_report_data@@Base+0x528>  // b.none
    c414:	str	x21, [sp, #16]
    c418:	ldur	x21, [x20, #-8]
    c41c:	cbz	x21, c47c <__ubsan_get_current_report_data@@Base+0x524>
    c420:	ldur	x1, [x20, #-16]
    c424:	add	x0, x1, #0x100, lsl #12
    c428:	cmp	x0, #0x200, lsl #12
    c42c:	b.ls	c448 <__ubsan_get_current_report_data@@Base+0x4f0>  // b.plast
    c430:	ldr	x21, [sp, #16]
    c434:	stp	xzr, x1, [x19]
    c438:	str	xzr, [x19, #16]
    c43c:	ldr	x30, [sp, #24]
    c440:	ldp	x19, x20, [sp], #32
    c444:	ret
    c448:	neg	x20, x1
    c44c:	mov	x0, x21
    c450:	mov	x1, x20
    c454:	bl	c070 <__ubsan_get_current_report_data@@Base+0x118>
    c458:	ldr	x1, [x21, #8]
    c45c:	cbz	x0, c494 <__ubsan_get_current_report_data@@Base+0x53c>
    c460:	ldr	x0, [x0, #8]
    c464:	ldr	x21, [sp, #16]
    c468:	stp	x1, x20, [x19]
    c46c:	str	x0, [x19, #16]
    c470:	ldr	x30, [sp, #24]
    c474:	ldp	x19, x20, [sp], #32
    c478:	ret
    c47c:	ldr	x21, [sp, #16]
    c480:	stp	xzr, xzr, [x19]
    c484:	str	xzr, [x19, #16]
    c488:	ldr	x30, [sp, #24]
    c48c:	ldp	x19, x20, [sp], #32
    c490:	ret
    c494:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    c498:	add	x0, x0, #0x100
    c49c:	b	c464 <__ubsan_get_current_report_data@@Base+0x50c>
    c4a0:	ldr	x1, [x0]
    c4a4:	str	x30, [sp, #-16]!
    c4a8:	ldrh	w2, [x1]
    c4ac:	cbnz	w2, c4e4 <__ubsan_get_current_report_data@@Base+0x58c>
    c4b0:	ldrh	w1, [x1, #2]
    c4b4:	tbz	w1, #0, c4e4 <__ubsan_get_current_report_data@@Base+0x58c>
    c4b8:	asr	w2, w1, #1
    c4bc:	mov	w1, #0x1                   	// #1
    c4c0:	lsl	w1, w1, w2
    c4c4:	cmp	w1, #0x40
    c4c8:	b.ls	c504 <__ubsan_get_current_report_data@@Base+0x5ac>  // b.plast
    c4cc:	cmp	w1, #0x80
    c4d0:	b.ne	c564 <__ubsan_get_current_report_data@@Base+0x60c>  // b.any
    c4d4:	ldr	x1, [x0, #8]
    c4d8:	ldr	x30, [sp], #16
    c4dc:	ldp	x0, x1, [x1]
    c4e0:	ret
    c4e4:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c4e8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c4ec:	add	x2, x2, #0x2b0
    c4f0:	add	x0, x0, #0x2e0
    c4f4:	mov	x4, #0x0                   	// #0
    c4f8:	mov	x3, #0x0                   	// #0
    c4fc:	mov	w1, #0x16                  	// #22
    c500:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c504:	ldr	x0, [x0, #8]
    c508:	mov	w2, #0x80                  	// #128
    c50c:	sub	w2, w2, w1
    c510:	mov	w4, #0x3f                  	// #63
    c514:	sub	w3, w2, #0x40
    c518:	sub	w4, w4, w2
    c51c:	lsr	x5, x0, #1
    c520:	cmp	w3, #0x0
    c524:	lsl	x1, x0, x3
    c528:	lsr	x5, x5, x4
    c52c:	csel	x1, x1, x5, ge  // ge = tcont
    c530:	lsl	x0, x0, x2
    c534:	csel	x0, xzr, x0, ge  // ge = tcont
    c538:	lsl	x5, x1, #1
    c53c:	asr	x6, x1, #63
    c540:	lsr	x0, x0, x2
    c544:	lsl	x4, x5, x4
    c548:	orr	x0, x4, x0
    c54c:	asr	x7, x1, x3
    c550:	csel	x0, x7, x0, ge  // ge = tcont
    c554:	asr	x1, x1, x2
    c558:	csel	x1, x6, x1, ge  // ge = tcont
    c55c:	ldr	x30, [sp], #16
    c560:	ret
    c564:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c568:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c56c:	add	x2, x2, #0x310
    c570:	add	x0, x0, #0x2e0
    c574:	mov	x4, #0x0                   	// #0
    c578:	mov	x3, #0x0                   	// #0
    c57c:	mov	w1, #0x27                  	// #39
    c580:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c584:	nop
    c588:	ldr	x1, [x0]
    c58c:	str	x30, [sp, #-16]!
    c590:	ldrh	w2, [x1]
    c594:	cbnz	w2, c5c4 <__ubsan_get_current_report_data@@Base+0x66c>
    c598:	ldrh	w1, [x1, #2]
    c59c:	tbnz	w1, #0, c5c4 <__ubsan_get_current_report_data@@Base+0x66c>
    c5a0:	asr	w1, w1, #1
    c5a4:	mov	w2, #0x1                   	// #1
    c5a8:	lsl	w1, w2, w1
    c5ac:	cmp	w1, #0x40
    c5b0:	b.hi	c5e4 <__ubsan_get_current_report_data@@Base+0x68c>  // b.pmore
    c5b4:	mov	x1, #0x0                   	// #0
    c5b8:	ldr	x0, [x0, #8]
    c5bc:	ldr	x30, [sp], #16
    c5c0:	ret
    c5c4:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c5c8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c5cc:	add	x2, x2, #0x338
    c5d0:	add	x0, x0, #0x2e0
    c5d4:	mov	x4, #0x0                   	// #0
    c5d8:	mov	x3, #0x0                   	// #0
    c5dc:	mov	w1, #0x2b                  	// #43
    c5e0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c5e4:	cmp	w1, #0x80
    c5e8:	b.ne	c5fc <__ubsan_get_current_report_data@@Base+0x6a4>  // b.any
    c5ec:	ldr	x1, [x0, #8]
    c5f0:	ldr	x30, [sp], #16
    c5f4:	ldp	x0, x1, [x1]
    c5f8:	ret
    c5fc:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c600:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c604:	add	x2, x2, #0x310
    c608:	add	x0, x0, #0x2e0
    c60c:	mov	x4, #0x0                   	// #0
    c610:	mov	x3, #0x0                   	// #0
    c614:	mov	w1, #0x37                  	// #55
    c618:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c61c:	nop
    c620:	ldr	x2, [x0]
    c624:	mov	x1, x0
    c628:	ldrh	w3, [x2]
    c62c:	cbnz	w3, c638 <__ubsan_get_current_report_data@@Base+0x6e0>
    c630:	ldrh	w2, [x2, #2]
    c634:	tbz	w2, #0, c650 <__ubsan_get_current_report_data@@Base+0x6f8>
    c638:	str	x30, [sp, #-16]!
    c63c:	mov	x0, x1
    c640:	bl	c4a0 <__ubsan_get_current_report_data@@Base+0x548>
    c644:	tbnz	x1, #63, c654 <__ubsan_get_current_report_data@@Base+0x6fc>
    c648:	ldr	x30, [sp], #16
    c64c:	ret
    c650:	b	c588 <__ubsan_get_current_report_data@@Base+0x630>
    c654:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c658:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c65c:	add	x2, x2, #0x368
    c660:	add	x0, x0, #0x2e0
    c664:	mov	x4, #0x0                   	// #0
    c668:	mov	x3, #0x0                   	// #0
    c66c:	mov	w1, #0x3e                  	// #62
    c670:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c674:	nop
    c678:	ldr	x1, [x0]
    c67c:	str	x30, [sp, #-32]!
    c680:	ldrh	w2, [x1]
    c684:	cmp	w2, #0x1
    c688:	b.ne	c730 <__ubsan_get_current_report_data@@Base+0x7d8>  // b.any
    c68c:	ldrh	w1, [x1, #2]
    c690:	cmp	w1, #0x40
    c694:	b.ls	c6b8 <__ubsan_get_current_report_data@@Base+0x760>  // b.plast
    c698:	cmp	w1, #0x60
    c69c:	b.eq	c6a8 <__ubsan_get_current_report_data@@Base+0x750>  // b.none
    c6a0:	cmp	w1, #0x80
    c6a4:	b.ne	c6e0 <__ubsan_get_current_report_data@@Base+0x788>  // b.any
    c6a8:	ldr	x0, [x0, #8]
    c6ac:	ldr	q0, [x0]
    c6b0:	ldr	x30, [sp], #32
    c6b4:	ret
    c6b8:	cmp	w1, #0x20
    c6bc:	b.ne	c708 <__ubsan_get_current_report_data@@Base+0x7b0>  // b.any
    c6c0:	add	x1, x0, #0x8
    c6c4:	mov	x2, #0x4                   	// #4
    c6c8:	add	x0, sp, #0x18
    c6cc:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    c6d0:	ldr	s0, [sp, #24]
    c6d4:	bl	6910 <__extendsftf2@plt>
    c6d8:	ldr	x30, [sp], #32
    c6dc:	ret
    c6e0:	cmp	w1, #0x50
    c6e4:	b.eq	c6a8 <__ubsan_get_current_report_data@@Base+0x750>  // b.none
    c6e8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c6ec:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c6f0:	add	x2, x2, #0x3a8
    c6f4:	add	x0, x0, #0x2e0
    c6f8:	mov	x4, #0x0                   	// #0
    c6fc:	mov	x3, #0x0                   	// #0
    c700:	mov	w1, #0x6c                  	// #108
    c704:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c708:	cmp	w1, #0x40
    c70c:	b.ne	c6e8 <__ubsan_get_current_report_data@@Base+0x790>  // b.any
    c710:	add	x1, x0, #0x8
    c714:	mov	x2, #0x8                   	// #8
    c718:	add	x0, sp, #0x18
    c71c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    c720:	ldr	d0, [sp, #24]
    c724:	bl	6820 <__extenddftf2@plt>
    c728:	ldr	x30, [sp], #32
    c72c:	ret
    c730:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c734:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c738:	add	x2, x2, #0x380
    c73c:	add	x0, x0, #0x2e0
    c740:	mov	x4, #0x0                   	// #0
    c744:	mov	x3, #0x0                   	// #0
    c748:	mov	w1, #0x46                  	// #70
    c74c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

000000000000c750 <__sancov_default_options@@Base>:
    c750:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    c754:	add	x0, x0, #0x428
    c758:	ret
    c75c:	nop
    c760:	mov	w1, #0x1                   	// #1
    c764:	strh	w1, [x0]
    c768:	ret
    c76c:	nop
    c770:	stp	x19, x20, [sp, #-80]!
    c774:	adrp	x0, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c778:	mov	w1, #0x1                   	// #1
    c77c:	stp	x21, x22, [sp, #16]
    c780:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c784:	add	x19, sp, #0x30
    c788:	add	x22, x0, #0x280
    c78c:	strh	w1, [x0, #640]
    c790:	mov	x0, x19
    c794:	str	x30, [sp, #32]
    c798:	bl	14530 <__sanitizer_set_report_fd@@Base+0x1610>
    c79c:	adrp	x20, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
    c7a0:	ldr	x21, [x21, #3776]
    c7a4:	mov	x1, #0x10                  	// #16
    c7a8:	add	x20, x20, #0xd48
    c7ac:	mov	x0, x21
    c7b0:	bl	c9d8 <__sancov_default_options@@Base+0x288>
    c7b4:	mov	x2, x0
    c7b8:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c7bc:	add	x3, x3, #0x3e0
    c7c0:	mov	x0, x19
    c7c4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c7c8:	add	x1, x1, #0x430
    c7cc:	stp	x20, x22, [x2]
    c7d0:	bl	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
    c7d4:	mov	x1, #0x10                  	// #16
    c7d8:	mov	x0, x21
    c7dc:	bl	c9d8 <__sancov_default_options@@Base+0x288>
    c7e0:	mov	x2, x0
    c7e4:	add	x4, x22, #0x1
    c7e8:	mov	x0, x19
    c7ec:	adrp	x3, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c7f0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c7f4:	add	x3, x3, #0x440
    c7f8:	add	x1, x1, #0x458
    c7fc:	stp	x20, x4, [x2]
    c800:	bl	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
    c804:	bl	6a20 <__sancov_default_options@plt>
    c808:	mov	x1, x0
    c80c:	mov	x0, x19
    c810:	bl	144a8 <__sanitizer_set_report_fd@@Base+0x1588>
    c814:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c818:	add	x0, x0, #0x460
    c81c:	bl	15800 <__sanitizer_set_report_fd@@Base+0x28e0>
    c820:	mov	x1, x0
    c824:	mov	x0, x19
    c828:	bl	144a8 <__sanitizer_set_report_fd@@Base+0x1588>
    c82c:	bl	13f08 <__sanitizer_set_report_fd@@Base+0xfe8>
    c830:	ldrb	w0, [x22, #1]
    c834:	cbnz	w0, c848 <__sancov_default_options@@Base+0xf8>
    c838:	ldp	x21, x22, [sp, #16]
    c83c:	ldr	x30, [sp, #32]
    c840:	ldp	x19, x20, [sp], #80
    c844:	ret
    c848:	mov	x0, x19
    c84c:	bl	13fe8 <__sanitizer_set_report_fd@@Base+0x10c8>
    c850:	ldp	x21, x22, [sp, #16]
    c854:	ldr	x30, [sp, #32]
    c858:	ldp	x19, x20, [sp], #80
    c85c:	ret
    c860:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c864:	mov	x2, x0
    c868:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    c86c:	add	x0, x0, #0x470
    c870:	ldr	x1, [x1, #4024]
    c874:	adrp	x3, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c878:	mov	w4, #0x1                   	// #1
    c87c:	str	x30, [sp, #-16]!
    c880:	strb	w4, [x3, #704]
    c884:	ldr	x1, [x1]
    c888:	bl	1a328 <OnPrint@@Base+0x398>
    c88c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    c890:	stp	x19, x20, [sp, #-48]!
    c894:	str	x30, [sp, #32]
    c898:	adrp	x19, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c89c:	add	x0, x19, #0x2c0
    c8a0:	ldrb	w1, [x0, #8]
    c8a4:	dmb	ish
    c8a8:	and	w1, w1, #0xff
    c8ac:	adrp	x20, eb000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    c8b0:	cbz	w1, c8c4 <__sancov_default_options@@Base+0x174>
    c8b4:	add	x0, x20, #0xb40
    c8b8:	ldr	x30, [sp, #32]
    c8bc:	ldp	x19, x20, [sp], #48
    c8c0:	ret
    c8c4:	add	x0, x0, #0x10
    c8c8:	mov	w2, #0x1                   	// #1
    c8cc:	ldxrb	w1, [x0]
    c8d0:	stxrb	w3, w2, [x0]
    c8d4:	cbnz	w3, c8cc <__sancov_default_options@@Base+0x17c>
    c8d8:	dmb	ish
    c8dc:	tst	w1, #0xff
    c8e0:	b.eq	c8e8 <__sancov_default_options@@Base+0x198>  // b.none
    c8e4:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    c8e8:	add	x0, x19, #0x2c0
    c8ec:	adrp	x20, eb000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    c8f0:	ldrb	w0, [x0, #8]
    c8f4:	tst	w0, #0xff
    c8f8:	b.eq	c918 <__sancov_default_options@@Base+0x1c8>  // b.none
    c8fc:	dmb	ish
    c900:	add	x19, x19, #0x2c0
    c904:	strb	wzr, [x19, #16]
    c908:	add	x0, x20, #0xb40
    c90c:	ldr	x30, [sp, #32]
    c910:	ldp	x19, x20, [sp], #48
    c914:	ret
    c918:	stp	x21, x22, [sp, #16]
    c91c:	add	x21, x20, #0xb40
    c920:	mov	x0, x21
    c924:	add	x21, x21, #0x80, lsl #12
    c928:	mov	x2, #0x80000               	// #524288
    c92c:	mov	w1, #0x0                   	// #0
    c930:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    c934:	mov	x2, #0xd80                 	// #3456
    c938:	mov	w1, #0x0                   	// #0
    c93c:	strb	wzr, [x21]
    c940:	adrp	x0, 16b000 <__ubsan_vptr_type_cache@@Base+0x10d188>
    c944:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    c948:	add	x0, x0, #0xb80
    c94c:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    c950:	mov	x2, #0x248                 	// #584
    c954:	adrp	x0, 16c000 <__ubsan_vptr_type_cache@@Base+0x10e188>
    c958:	movk	x2, #0x4, lsl #16
    c95c:	add	x0, x0, #0x900
    c960:	mov	w1, #0x0                   	// #0
    c964:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    c968:	ldr	x21, [x21, #4016]
    c96c:	ldr	x3, [x21]
    c970:	cbz	x3, c9c8 <__sancov_default_options@@Base+0x278>
    c974:	add	x21, x20, #0xb40
    c978:	adrp	x4, 16c000 <__ubsan_vptr_type_cache@@Base+0x10e188>
    c97c:	add	x5, x21, #0x80, lsl #12
    c980:	add	x4, x4, #0x910
    c984:	add	x21, x21, #0xc0, lsl #12
    c988:	adrp	x22, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    c98c:	mov	x2, #0x28                  	// #40
    c990:	add	x0, x22, #0xb48
    c994:	str	x3, [x5, #3520]
    c998:	add	x22, x22, #0xb48
    c99c:	str	x4, [x5, #3528]
    c9a0:	mov	w1, #0x0                   	// #0
    c9a4:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    c9a8:	str	x22, [x21, #4104]
    c9ac:	str	x22, [x21, #4112]
    c9b0:	dmb	ish
    c9b4:	add	x0, x19, #0x2c0
    c9b8:	mov	w1, #0x1                   	// #1
    c9bc:	strb	w1, [x0, #8]
    c9c0:	ldp	x21, x22, [sp, #16]
    c9c4:	b	c8fc <__sancov_default_options@@Base+0x1ac>
    c9c8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    c9cc:	mov	x3, x0
    c9d0:	str	x0, [x21]
    c9d4:	b	c974 <__sancov_default_options@@Base+0x224>
    c9d8:	adrp	x2, 5b000 <_Unwind_Backtrace@GCC_3.3>
    c9dc:	stp	x19, x20, [sp, #-32]!
    c9e0:	mov	x20, x0
    c9e4:	ldr	x0, [x2, #1208]
    c9e8:	str	x30, [sp, #24]
    c9ec:	sub	x19, x0, #0x1
    c9f0:	tst	x0, x19
    c9f4:	b.ne	ca9c <__sancov_default_options@@Base+0x34c>  // b.any
    c9f8:	ldp	x3, x2, [x20]
    c9fc:	add	x1, x1, x19
    ca00:	neg	x19, x0
    ca04:	and	x19, x1, x19
    ca08:	sub	x0, x3, x2
    ca0c:	cmp	x0, x19
    ca10:	b.ge	ca78 <__sancov_default_options@@Base+0x328>  // b.tcont
    ca14:	str	x21, [sp, #16]
    ca18:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    ca1c:	ldr	x21, [x21, #4016]
    ca20:	ldr	x0, [x21]
    ca24:	cbz	x0, ca90 <__sancov_default_options@@Base+0x340>
    ca28:	cmp	x19, x0
    ca2c:	mov	w2, #0x0                   	// #0
    ca30:	csel	x21, x19, x0, cs  // cs = hs, nlast
    ca34:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ca38:	mov	x0, x21
    ca3c:	add	x1, x1, #0x4c0
    ca40:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    ca44:	add	x1, x0, x21
    ca48:	adrp	x3, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    ca4c:	stp	x1, x0, [x20]
    ca50:	mov	x2, x0
    ca54:	ldr	x3, [x3, #728]
    ca58:	cbz	x3, ca68 <__sancov_default_options@@Base+0x318>
    ca5c:	mov	x1, x21
    ca60:	blr	x3
    ca64:	ldp	x1, x2, [x20]
    ca68:	sub	x1, x1, x2
    ca6c:	cmp	x19, x1
    ca70:	b.gt	cab0 <__sancov_default_options@@Base+0x360>
    ca74:	ldr	x21, [sp, #16]
    ca78:	add	x19, x2, x19
    ca7c:	ldr	x30, [sp, #24]
    ca80:	str	x19, [x20, #8]
    ca84:	mov	x0, x2
    ca88:	ldp	x19, x20, [sp], #32
    ca8c:	ret
    ca90:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    ca94:	str	x0, [x21]
    ca98:	b	ca28 <__sancov_default_options@@Base+0x2d8>
    ca9c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    caa0:	add	x0, x0, #0x160
    caa4:	str	x21, [sp, #16]
    caa8:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
    caac:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    cab0:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    cab4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    cab8:	add	x2, x2, #0x4d0
    cabc:	add	x0, x0, #0x510
    cac0:	mov	x4, #0x0                   	// #0
    cac4:	mov	x3, #0x0                   	// #0
    cac8:	mov	w1, #0xd4                  	// #212
    cacc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    cad0:	sub	x1, x0, #0x1
    cad4:	tst	x1, x0
    cad8:	b.ne	caf4 <__sancov_default_options@@Base+0x3a4>  // b.any
    cadc:	adrp	x2, 5b000 <_Unwind_Backtrace@GCC_3.3>
    cae0:	ldr	x1, [x2, #1208]
    cae4:	cmp	x1, x0
    cae8:	csel	x0, x1, x0, cs  // cs = hs, nlast
    caec:	str	x0, [x2, #1208]
    caf0:	ret
    caf4:	str	x30, [sp, #-16]!
    caf8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    cafc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    cb00:	add	x2, x2, #0x558
    cb04:	add	x0, x0, #0x510
    cb08:	mov	x4, #0x0                   	// #0
    cb0c:	mov	x3, #0x0                   	// #0
    cb10:	mov	w1, #0xdb                  	// #219
    cb14:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    cb18:	adrp	x1, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cb1c:	str	x0, [x1, #728]
    cb20:	ret
    cb24:	nop
    cb28:	adrp	x0, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cb2c:	ldrb	w0, [x0, #704]
    cb30:	tst	w0, #0xff
    cb34:	cset	w0, ne  // ne = any
    cb38:	ret
    cb3c:	nop
    cb40:	adrp	x0, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cb44:	mov	w1, #0x1                   	// #1
    cb48:	strb	w1, [x0, #704]
    cb4c:	ret
    cb50:	adrp	x0, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cb54:	add	x0, x0, #0x2c0
    cb58:	ldrb	w0, [x0, #32]
    cb5c:	tst	w0, #0xff
    cb60:	cset	w0, ne  // ne = any
    cb64:	ret
    cb68:	adrp	x1, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cb6c:	add	x1, x1, #0x2c0
    cb70:	and	w0, w0, #0xff
    cb74:	strb	w0, [x1, #32]
    cb78:	ret
    cb7c:	nop
    cb80:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    cb84:	add	x0, x0, #0x580
    cb88:	b	1a328 <OnPrint@@Base+0x398>
    cb8c:	nop
    cb90:	cmn	x0, #0x9
    cb94:	b.hi	cc44 <__sancov_default_options@@Base+0x4f4>  // b.pmore
    cb98:	stp	x19, x20, [sp, #-32]!
    cb9c:	cmp	x2, #0x0
    cba0:	add	x20, x0, #0x8
    cba4:	stp	x21, x30, [sp, #16]
    cba8:	mov	x0, #0x8                   	// #8
    cbac:	mov	x21, x1
    cbb0:	csel	x19, x2, x0, ne  // ne = any
    cbb4:	cbz	x1, cbf0 <__sancov_default_options@@Base+0x4a0>
    cbb8:	bl	c890 <__sancov_default_options@@Base+0x140>
    cbbc:	mov	x3, x19
    cbc0:	mov	x2, x20
    cbc4:	mov	x1, x21
    cbc8:	bl	df18 <__sancov_default_options@@Base+0x17c8>
    cbcc:	cbz	x0, cc4c <__sancov_default_options@@Base+0x4fc>
    cbd0:	mov	x1, #0xc041                	// #49217
    cbd4:	movk	x1, #0xbceb, lsl #16
    cbd8:	movk	x1, #0xb03a, lsl #32
    cbdc:	movk	x1, #0x6a6c, lsl #48
    cbe0:	str	x1, [x0], #8
    cbe4:	ldp	x21, x30, [sp, #16]
    cbe8:	ldp	x19, x20, [sp], #32
    cbec:	ret
    cbf0:	adrp	x21, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cbf4:	add	x0, x21, #0x2c0
    cbf8:	add	x0, x0, #0x28
    cbfc:	mov	w2, #0x1                   	// #1
    cc00:	ldxrb	w1, [x0]
    cc04:	stxrb	w3, w2, [x0]
    cc08:	cbnz	w3, cc00 <__sancov_default_options@@Base+0x4b0>
    cc0c:	dmb	ish
    cc10:	tst	w1, #0xff
    cc14:	b.eq	cc1c <__sancov_default_options@@Base+0x4cc>  // b.none
    cc18:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    cc1c:	bl	c890 <__sancov_default_options@@Base+0x140>
    cc20:	mov	x3, x19
    cc24:	mov	x2, x20
    cc28:	adrp	x1, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cc2c:	add	x1, x1, #0x2f0
    cc30:	bl	df18 <__sancov_default_options@@Base+0x17c8>
    cc34:	dmb	ish
    cc38:	add	x21, x21, #0x2c0
    cc3c:	strb	wzr, [x21, #40]
    cc40:	b	cbcc <__sancov_default_options@@Base+0x47c>
    cc44:	mov	x0, #0x0                   	// #0
    cc48:	ret
    cc4c:	mov	x0, x20
    cc50:	bl	c860 <__sancov_default_options@@Base+0x110>
    cc54:	nop
    cc58:	stp	x19, x20, [sp, #-32]!
    cc5c:	mov	x19, x1
    cc60:	mov	x1, x2
    cc64:	str	x30, [sp, #16]
    cc68:	cbz	x0, cc74 <__sancov_default_options@@Base+0x524>
    cc6c:	umulh	x2, x19, x0
    cc70:	cbnz	x2, cca8 <__sancov_default_options@@Base+0x558>
    cc74:	mul	x19, x0, x19
    cc78:	mov	x2, #0x0                   	// #0
    cc7c:	mov	x0, x19
    cc80:	bl	cb90 <__sancov_default_options@@Base+0x440>
    cc84:	mov	x20, x0
    cc88:	cbz	x0, cc98 <__sancov_default_options@@Base+0x548>
    cc8c:	mov	x2, x19
    cc90:	mov	w1, #0x0                   	// #0
    cc94:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    cc98:	mov	x0, x20
    cc9c:	ldr	x30, [sp, #16]
    cca0:	ldp	x19, x20, [sp], #32
    cca4:	ret
    cca8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    ccac:	mov	x2, x0
    ccb0:	mov	x3, x19
    ccb4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ccb8:	ldr	x1, [x1, #4024]
    ccbc:	add	x0, x0, #0x5d8
    ccc0:	ldr	x1, [x1]
    ccc4:	bl	1a328 <OnPrint@@Base+0x398>
    ccc8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    cccc:	nop
    ccd0:	stp	x19, x20, [sp, #-32]!
    ccd4:	mov	x20, x1
    ccd8:	stp	x21, x30, [sp, #16]
    ccdc:	mov	x21, x2
    cce0:	cbz	x0, cda0 <__sancov_default_options@@Base+0x650>
    cce4:	cmn	x1, #0x9
    cce8:	b.hi	cdb8 <__sancov_default_options@@Base+0x668>  // b.pmore
    ccec:	mov	x3, #0xc041                	// #49217
    ccf0:	add	x20, x1, #0x8
    ccf4:	ldur	x4, [x0, #-8]
    ccf8:	movk	x3, #0xbceb, lsl #16
    ccfc:	movk	x3, #0xb03a, lsl #32
    cd00:	sub	x19, x0, #0x8
    cd04:	movk	x3, #0x6a6c, lsl #48
    cd08:	cmp	x4, x3
    cd0c:	b.ne	cdc8 <__sancov_default_options@@Base+0x678>  // b.any
    cd10:	cbz	x2, cd44 <__sancov_default_options@@Base+0x5f4>
    cd14:	bl	c890 <__sancov_default_options@@Base+0x140>
    cd18:	mov	x1, x21
    cd1c:	mov	x2, x19
    cd20:	mov	x3, x20
    cd24:	mov	x4, #0x8                   	// #8
    cd28:	bl	e518 <__sancov_default_options@@Base+0x1dc8>
    cd2c:	mov	x1, x0
    cd30:	add	x0, x1, #0x8
    cd34:	cbz	x1, cde0 <__sancov_default_options@@Base+0x690>
    cd38:	ldp	x21, x30, [sp, #16]
    cd3c:	ldp	x19, x20, [sp], #32
    cd40:	ret
    cd44:	adrp	x21, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cd48:	add	x0, x21, #0x2c0
    cd4c:	add	x0, x0, #0x28
    cd50:	mov	w2, #0x1                   	// #1
    cd54:	ldxrb	w1, [x0]
    cd58:	stxrb	w3, w2, [x0]
    cd5c:	cbnz	w3, cd54 <__sancov_default_options@@Base+0x604>
    cd60:	dmb	ish
    cd64:	tst	w1, #0xff
    cd68:	b.eq	cd70 <__sancov_default_options@@Base+0x620>  // b.none
    cd6c:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    cd70:	bl	c890 <__sancov_default_options@@Base+0x140>
    cd74:	adrp	x1, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cd78:	add	x1, x1, #0x2f0
    cd7c:	mov	x2, x19
    cd80:	mov	x3, x20
    cd84:	mov	x4, #0x8                   	// #8
    cd88:	bl	e518 <__sancov_default_options@@Base+0x1dc8>
    cd8c:	dmb	ish
    cd90:	mov	x1, x0
    cd94:	add	x21, x21, #0x2c0
    cd98:	strb	wzr, [x21, #40]
    cd9c:	b	cd30 <__sancov_default_options@@Base+0x5e0>
    cda0:	mov	x0, x20
    cda4:	mov	x1, x2
    cda8:	ldp	x21, x30, [sp, #16]
    cdac:	mov	x2, #0x0                   	// #0
    cdb0:	ldp	x19, x20, [sp], #32
    cdb4:	b	cb90 <__sancov_default_options@@Base+0x440>
    cdb8:	mov	x0, #0x0                   	// #0
    cdbc:	ldp	x21, x30, [sp, #16]
    cdc0:	ldp	x19, x20, [sp], #32
    cdc4:	ret
    cdc8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    cdcc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    cdd0:	add	x2, x2, #0x640
    cdd4:	add	x0, x0, #0x510
    cdd8:	mov	w1, #0xa5                  	// #165
    cddc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    cde0:	mov	x0, x20
    cde4:	bl	c860 <__sancov_default_options@@Base+0x110>
    cde8:	cbz	x0, d164 <__sancov_default_options@@Base+0xa14>
    cdec:	stp	x19, x20, [sp, #-48]!
    cdf0:	mov	x3, #0xc041                	// #49217
    cdf4:	movk	x3, #0xbceb, lsl #16
    cdf8:	ldur	x4, [x0, #-8]
    cdfc:	stp	x21, x22, [sp, #16]
    ce00:	movk	x3, #0xb03a, lsl #32
    ce04:	str	x30, [sp, #40]
    ce08:	movk	x3, #0x6a6c, lsl #48
    ce0c:	sub	x21, x0, #0x8
    ce10:	cmp	x4, x3
    ce14:	b.ne	d148 <__sancov_default_options@@Base+0x9f8>  // b.any
    ce18:	stur	xzr, [x0, #-8]
    ce1c:	mov	x19, x1
    ce20:	cbz	x1, cf8c <__sancov_default_options@@Base+0x83c>
    ce24:	bl	c890 <__sancov_default_options@@Base+0x140>
    ce28:	mov	x1, #0xffffffffffff        	// #281474976710655
    ce2c:	cmp	x21, x1
    ce30:	b.ls	cf04 <__sancov_default_options@@Base+0x7b4>  // b.plast
    ce34:	add	x19, x0, #0x80, lsl #12
    ce38:	add	x19, x19, #0xc00
    ce3c:	ldr	x20, [x19, #448]
    ce40:	sub	x1, x20, #0x1
    ce44:	tst	x21, x1
    ce48:	b.ne	d168 <__sancov_default_options@@Base+0xa18>  // b.any
    ce4c:	sub	x20, x21, x20
    ce50:	add	x21, x0, #0xc1, lsl #12
    ce54:	mov	w1, #0x1                   	// #1
    ce58:	ldxrb	w0, [x21]
    ce5c:	stxrb	w2, w1, [x21]
    ce60:	cbnz	w2, ce58 <__sancov_default_options@@Base+0x708>
    ce64:	dmb	ish
    ce68:	tst	w0, #0xff
    ce6c:	b.eq	ce78 <__sancov_default_options@@Base+0x728>  // b.none
    ce70:	mov	x0, x21
    ce74:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    ce78:	ldr	x0, [x20, #24]
    ce7c:	add	x1, x19, #0x1c0
    ce80:	ldr	x5, [x1, #8]
    ce84:	ldr	x3, [x5, x0, lsl #3]
    ce88:	cmp	x3, x20
    ce8c:	b.ne	d18c <__sancov_default_options@@Base+0xa3c>  // b.any
    ce90:	add	x1, x1, #0x40, lsl #12
    ce94:	ldr	x4, [x1, #16]
    ce98:	cmp	x0, x4
    ce9c:	b.cs	d1ac <__sancov_default_options@@Base+0xa5c>  // b.hs, b.nlast
    cea0:	sub	x4, x4, #0x1
    cea4:	add	x2, x21, #0x8
    cea8:	ldr	x3, [x20, #8]
    ceac:	ldr	x6, [x5, x4, lsl #3]
    ceb0:	str	x4, [x1, #16]
    ceb4:	str	x6, [x5, x0, lsl #3]
    ceb8:	ldp	x5, x4, [x1, #40]
    cebc:	str	x0, [x6, #24]
    cec0:	ldr	x0, [x2, #16]
    cec4:	strb	wzr, [x1, #24]
    cec8:	sub	x0, x0, x3
    cecc:	sub	x4, x4, x3
    ced0:	add	x5, x5, #0x1
    ced4:	stp	x5, x4, [x1, #40]
    ced8:	str	x0, [x2, #16]
    cedc:	ldr	x0, [x2, #24]
    cee0:	sub	x0, x0, x3
    cee4:	str	x0, [x2, #24]
    cee8:	dmb	ish
    ceec:	strb	wzr, [x21]
    cef0:	ldp	x0, x1, [x20]
    cef4:	ldp	x21, x22, [sp, #16]
    cef8:	ldr	x30, [sp, #40]
    cefc:	ldp	x19, x20, [sp], #48
    cf00:	b	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    cf04:	lsr	x2, x21, #32
    cf08:	ldr	x1, [x0, x2, lsl #3]
    cf0c:	dmb	ish
    cf10:	cbz	x1, ce34 <__sancov_default_options@@Base+0x6e4>
    cf14:	lsr	w3, w21, #20
    cf18:	ldrb	w1, [x1, x3]
    cf1c:	cbz	w1, ce34 <__sancov_default_options@@Base+0x6e4>
    cf20:	ldr	x1, [x0, x2, lsl #3]
    cf24:	dmb	ish
    cf28:	cbz	x1, d1cc <__sancov_default_options@@Base+0xa7c>
    cf2c:	ldrb	w20, [x1, x3]
    cf30:	cbz	x20, d1cc <__sancov_default_options@@Base+0xa7c>
    cf34:	cmp	x20, #0x35
    cf38:	b.hi	d254 <__sancov_default_options@@Base+0xb04>  // b.pmore
    cf3c:	lsl	x22, x20, #10
    cf40:	add	x1, x19, x22
    cf44:	ldr	x3, [x1, #8]
    cf48:	cbz	x3, d290 <__sancov_default_options@@Base+0xb40>
    cf4c:	ldr	x2, [x19, x22]
    cf50:	cmp	x2, x3
    cf54:	b.eq	d278 <__sancov_default_options@@Base+0xb28>  // b.none
    cf58:	add	x20, x2, x20, lsl #7
    cf5c:	mov	x0, #0xd800                	// #55296
    cf60:	add	x20, x20, #0x4
    cf64:	add	x2, x2, #0x1
    cf68:	add	x1, x19, x0
    cf6c:	add	x3, x19, x22
    cf70:	str	x2, [x19, x22]
    cf74:	str	x21, [x19, x20, lsl #3]
    cf78:	ldr	x0, [x1, #16]
    cf7c:	ldr	x2, [x3, #16]
    cf80:	sub	x0, x0, x2
    cf84:	str	x0, [x1, #16]
    cf88:	b	d138 <__sancov_default_options@@Base+0x9e8>
    cf8c:	adrp	x22, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cf90:	add	x0, x22, #0x2c0
    cf94:	add	x0, x0, #0x28
    cf98:	mov	w2, #0x1                   	// #1
    cf9c:	ldxrb	w1, [x0]
    cfa0:	stxrb	w3, w2, [x0]
    cfa4:	cbnz	w3, cf9c <__sancov_default_options@@Base+0x84c>
    cfa8:	dmb	ish
    cfac:	tst	w1, #0xff
    cfb0:	b.eq	cfb8 <__sancov_default_options@@Base+0x868>  // b.none
    cfb4:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    cfb8:	bl	c890 <__sancov_default_options@@Base+0x140>
    cfbc:	mov	x1, #0xffffffffffff        	// #281474976710655
    cfc0:	cmp	x21, x1
    cfc4:	b.hi	d06c <__sancov_default_options@@Base+0x91c>  // b.pmore
    cfc8:	lsr	x2, x21, #32
    cfcc:	ldr	x1, [x0, x2, lsl #3]
    cfd0:	dmb	ish
    cfd4:	cbz	x1, d06c <__sancov_default_options@@Base+0x91c>
    cfd8:	lsr	w3, w21, #20
    cfdc:	ldrb	w1, [x1, x3]
    cfe0:	cbz	w1, d06c <__sancov_default_options@@Base+0x91c>
    cfe4:	str	x23, [sp, #32]
    cfe8:	ldr	x1, [x0, x2, lsl #3]
    cfec:	dmb	ish
    cff0:	cbz	x1, d1d0 <__sancov_default_options@@Base+0xa80>
    cff4:	ldrb	w23, [x1, x3]
    cff8:	cbz	x23, d1d0 <__sancov_default_options@@Base+0xa80>
    cffc:	cmp	x23, #0x35
    d000:	b.hi	d36c <__sancov_default_options@@Base+0xc1c>  // b.pmore
    d004:	lsl	x20, x23, #10
    d008:	adrp	x19, de000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d00c:	add	x7, x19, #0x2f0
    d010:	add	x1, x7, x20
    d014:	ldr	x2, [x1, #8]
    d018:	cbz	x2, d3a0 <__sancov_default_options@@Base+0xc50>
    d01c:	add	x4, x19, #0x2f0
    d020:	add	x1, x4, x20
    d024:	ldr	x5, [x4, x20]
    d028:	cmp	x5, x2
    d02c:	b.eq	d38c <__sancov_default_options@@Base+0xc3c>  // b.none
    d030:	add	x19, x19, #0x2f0
    d034:	add	x1, x19, x20
    d038:	add	x2, x19, #0x8, lsl #12
    d03c:	ldr	x0, [x19, x20]
    d040:	ldr	x4, [x1, #16]
    d044:	add	x1, x0, #0x1
    d048:	add	x0, x0, x23, lsl #7
    d04c:	str	x1, [x19, x20]
    d050:	add	x0, x0, #0x4
    d054:	ldr	x1, [x2, #22544]
    d058:	str	x21, [x19, x0, lsl #3]
    d05c:	sub	x0, x1, x4
    d060:	ldr	x23, [sp, #32]
    d064:	str	x0, [x2, #22544]
    d068:	b	d12c <__sancov_default_options@@Base+0x9dc>
    d06c:	add	x19, x0, #0x80, lsl #12
    d070:	add	x19, x19, #0xc00
    d074:	ldr	x20, [x19, #448]
    d078:	sub	x1, x20, #0x1
    d07c:	tst	x21, x1
    d080:	b.ne	d1f0 <__sancov_default_options@@Base+0xaa0>  // b.any
    d084:	sub	x20, x21, x20
    d088:	add	x21, x0, #0xc1, lsl #12
    d08c:	mov	w1, #0x1                   	// #1
    d090:	ldxrb	w0, [x21]
    d094:	stxrb	w2, w1, [x21]
    d098:	cbnz	w2, d090 <__sancov_default_options@@Base+0x940>
    d09c:	dmb	ish
    d0a0:	tst	w0, #0xff
    d0a4:	b.eq	d0b0 <__sancov_default_options@@Base+0x960>  // b.none
    d0a8:	mov	x0, x21
    d0ac:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    d0b0:	ldr	x0, [x20, #24]
    d0b4:	add	x1, x19, #0x1c0
    d0b8:	ldr	x5, [x1, #8]
    d0bc:	ldr	x3, [x5, x0, lsl #3]
    d0c0:	cmp	x3, x20
    d0c4:	b.ne	d214 <__sancov_default_options@@Base+0xac4>  // b.any
    d0c8:	add	x1, x1, #0x40, lsl #12
    d0cc:	ldr	x4, [x1, #16]
    d0d0:	cmp	x0, x4
    d0d4:	b.cs	d234 <__sancov_default_options@@Base+0xae4>  // b.hs, b.nlast
    d0d8:	sub	x4, x4, #0x1
    d0dc:	ldr	x3, [x20, #8]
    d0e0:	ldr	x6, [x5, x4, lsl #3]
    d0e4:	str	x4, [x1, #16]
    d0e8:	str	x6, [x5, x0, lsl #3]
    d0ec:	ldp	x5, x4, [x1, #40]
    d0f0:	str	x0, [x6, #24]
    d0f4:	ldr	x0, [x21, #24]
    d0f8:	strb	wzr, [x1, #24]
    d0fc:	sub	x0, x0, x3
    d100:	sub	x4, x4, x3
    d104:	add	x5, x5, #0x1
    d108:	stp	x5, x4, [x1, #40]
    d10c:	str	x0, [x21, #24]
    d110:	ldr	x0, [x21, #32]
    d114:	sub	x0, x0, x3
    d118:	str	x0, [x21, #32]
    d11c:	dmb	ish
    d120:	strb	wzr, [x21]
    d124:	ldp	x0, x1, [x20]
    d128:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    d12c:	dmb	ish
    d130:	add	x22, x22, #0x2c0
    d134:	strb	wzr, [x22, #40]
    d138:	ldp	x21, x22, [sp, #16]
    d13c:	ldr	x30, [sp, #40]
    d140:	ldp	x19, x20, [sp], #48
    d144:	ret
    d148:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d14c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d150:	add	x2, x2, #0x640
    d154:	add	x0, x0, #0x510
    d158:	mov	w1, #0xbd                  	// #189
    d15c:	str	x23, [sp, #32]
    d160:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d164:	ret
    d168:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d16c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d170:	add	x2, x2, #0xb88
    d174:	add	x0, x0, #0x910
    d178:	mov	x4, #0x0                   	// #0
    d17c:	mov	x3, #0x0                   	// #0
    d180:	mov	w1, #0x123                 	// #291
    d184:	str	x23, [sp, #32]
    d188:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d18c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d190:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d194:	mov	x4, x20
    d198:	add	x2, x2, #0xbb0
    d19c:	add	x0, x0, #0x910
    d1a0:	mov	w1, #0x88                  	// #136
    d1a4:	str	x23, [sp, #32]
    d1a8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d1ac:	mov	x3, x0
    d1b0:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d1b4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d1b8:	add	x2, x2, #0xbd0
    d1bc:	add	x0, x0, #0x910
    d1c0:	mov	w1, #0x89                  	// #137
    d1c4:	str	x23, [sp, #32]
    d1c8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d1cc:	str	x23, [sp, #32]
    d1d0:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d1d4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d1d8:	add	x2, x2, #0x8f8
    d1dc:	add	x0, x0, #0x7f0
    d1e0:	mov	x4, #0x0                   	// #0
    d1e4:	mov	x3, #0x0                   	// #0
    d1e8:	mov	w1, #0xae                  	// #174
    d1ec:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d1f0:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d1f4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d1f8:	add	x2, x2, #0xb88
    d1fc:	add	x0, x0, #0x910
    d200:	mov	x4, #0x0                   	// #0
    d204:	mov	x3, #0x0                   	// #0
    d208:	mov	w1, #0x123                 	// #291
    d20c:	str	x23, [sp, #32]
    d210:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d214:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d218:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d21c:	mov	x4, x20
    d220:	add	x2, x2, #0xbb0
    d224:	add	x0, x0, #0x910
    d228:	mov	w1, #0x88                  	// #136
    d22c:	str	x23, [sp, #32]
    d230:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d234:	mov	x3, x0
    d238:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d23c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d240:	add	x2, x2, #0xbd0
    d244:	add	x0, x0, #0x910
    d248:	mov	w1, #0x89                  	// #137
    d24c:	str	x23, [sp, #32]
    d250:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d254:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d258:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d25c:	mov	x3, x20
    d260:	add	x2, x2, #0x7d0
    d264:	add	x0, x0, #0x7f0
    d268:	mov	x4, #0x36                  	// #54
    d26c:	mov	w1, #0xaf                  	// #175
    d270:	str	x23, [sp, #32]
    d274:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d278:	mov	x2, x0
    d27c:	mov	x3, x20
    d280:	mov	x0, x19
    d284:	bl	e3b0 <__sancov_default_options@@Base+0x1c60>
    d288:	ldr	x2, [x19, x22]
    d28c:	b	cf58 <__sancov_default_options@@Base+0x808>
    d290:	mov	x4, #0x1                   	// #1
    d294:	mov	x12, x4
    d298:	mov	x13, #0x7c                  	// #124
    d29c:	mov	x11, #0x14                  	// #20
    d2a0:	mov	x10, #0x100                 	// #256
    d2a4:	mov	w9, #0x4000                	// #16384
    d2a8:	mov	x8, #0x3e                  	// #62
    d2ac:	nop
    d2b0:	add	x3, x19, x4, lsl #10
    d2b4:	lsl	x6, x4, #4
    d2b8:	mov	x5, x3
    d2bc:	mov	x2, #0x14                  	// #20
    d2c0:	mov	x7, x4
    d2c4:	add	x4, x4, #0x1
    d2c8:	stp	x13, x6, [x3, #8]
    d2cc:	cmp	x4, #0x36
    d2d0:	str	x2, [x5, #24]
    d2d4:	b.eq	d344 <__sancov_default_options@@Base+0xbf4>  // b.none
    d2d8:	cmp	x4, #0x35
    d2dc:	b.eq	d34c <__sancov_default_options@@Base+0xbfc>  // b.none
    d2e0:	cmp	x4, #0x10
    d2e4:	b.ls	d2b0 <__sancov_default_options@@Base+0xb60>  // b.plast
    d2e8:	sub	x2, x7, #0xf
    d2ec:	add	x5, x5, #0x400
    d2f0:	and	x3, x2, #0x3
    d2f4:	mov	x7, x4
    d2f8:	lsr	x2, x2, #2
    d2fc:	add	x4, x4, #0x1
    d300:	lsl	x2, x10, x2
    d304:	lsr	x6, x2, #2
    d308:	madd	x6, x6, x3, x2
    d30c:	str	x6, [x5, #16]
    d310:	udiv	w2, w9, w6
    d314:	cmp	x2, #0x0
    d318:	csel	x2, x2, x12, ne  // ne = any
    d31c:	cmp	x2, #0x3e
    d320:	csel	x2, x2, x8, ls  // ls = plast
    d324:	add	x3, x2, #0x2
    d328:	lsl	x2, x2, #1
    d32c:	str	x2, [x5, #8]
    d330:	cmp	x6, x3, lsl #3
    d334:	csel	x2, x11, xzr, cc  // cc = lo, ul, last
    d338:	str	x2, [x5, #24]
    d33c:	cmp	x4, #0x36
    d340:	b.ne	d2d8 <__sancov_default_options@@Base+0xb88>  // b.any
    d344:	ldr	x3, [x1, #8]
    d348:	b	cf4c <__sancov_default_options@@Base+0x7fc>
    d34c:	add	x2, x19, #0x8, lsl #12
    d350:	mov	x3, #0x200                 	// #512
    d354:	mov	x4, #0x40                  	// #64
    d358:	str	x4, [x2, #21512]
    d35c:	str	x3, [x2, #21520]
    d360:	str	xzr, [x2, #21528]
    d364:	ldr	x3, [x1, #8]
    d368:	b	cf4c <__sancov_default_options@@Base+0x7fc>
    d36c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d370:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d374:	mov	x3, x23
    d378:	add	x2, x2, #0x7d0
    d37c:	add	x0, x0, #0x7f0
    d380:	mov	x4, #0x36                  	// #54
    d384:	mov	w1, #0xaf                  	// #175
    d388:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d38c:	mov	x2, x0
    d390:	mov	x3, x23
    d394:	mov	x0, x4
    d398:	bl	e3b0 <__sancov_default_options@@Base+0x1c60>
    d39c:	b	d030 <__sancov_default_options@@Base+0x8e0>
    d3a0:	mov	x2, #0x1                   	// #1
    d3a4:	mov	x12, x2
    d3a8:	mov	x13, #0x7c                  	// #124
    d3ac:	mov	x11, #0x14                  	// #20
    d3b0:	mov	x10, #0x100                 	// #256
    d3b4:	mov	w9, #0x4000                	// #16384
    d3b8:	mov	x8, #0x3e                  	// #62
    d3bc:	nop
    d3c0:	lsl	x1, x2, #10
    d3c4:	lsl	x5, x2, #4
    d3c8:	add	x14, x7, x1
    d3cc:	add	x1, x1, #0x18
    d3d0:	add	x4, x1, x7
    d3d4:	mov	x1, #0x14                  	// #20
    d3d8:	mov	x6, x2
    d3dc:	add	x2, x2, #0x1
    d3e0:	stp	x13, x5, [x14, #8]
    d3e4:	cmp	x2, #0x36
    d3e8:	str	x1, [x4]
    d3ec:	b.eq	d45c <__sancov_default_options@@Base+0xd0c>  // b.none
    d3f0:	cmp	x2, #0x35
    d3f4:	b.eq	d46c <__sancov_default_options@@Base+0xd1c>  // b.none
    d3f8:	cmp	x2, #0x10
    d3fc:	b.ls	d3c0 <__sancov_default_options@@Base+0xc70>  // b.plast
    d400:	sub	x1, x6, #0xf
    d404:	add	x4, x4, #0x400
    d408:	and	x14, x1, #0x3
    d40c:	mov	x6, x2
    d410:	lsr	x1, x1, #2
    d414:	add	x2, x2, #0x1
    d418:	lsl	x1, x10, x1
    d41c:	lsr	x5, x1, #2
    d420:	madd	x5, x5, x14, x1
    d424:	stur	x5, [x4, #-8]
    d428:	udiv	w1, w9, w5
    d42c:	cmp	x1, #0x0
    d430:	csel	x1, x1, x12, ne  // ne = any
    d434:	cmp	x1, #0x3e
    d438:	csel	x1, x1, x8, ls  // ls = plast
    d43c:	add	x14, x1, #0x2
    d440:	lsl	x1, x1, #1
    d444:	stur	x1, [x4, #-16]
    d448:	cmp	x5, x14, lsl #3
    d44c:	csel	x1, x11, xzr, cc  // cc = lo, ul, last
    d450:	str	x1, [x4]
    d454:	cmp	x2, #0x36
    d458:	b.ne	d3f0 <__sancov_default_options@@Base+0xca0>  // b.any
    d45c:	add	x1, x19, #0x2f0
    d460:	add	x1, x1, x20
    d464:	ldr	x2, [x1, #8]
    d468:	b	d01c <__sancov_default_options@@Base+0x8cc>
    d46c:	add	x1, x19, #0x2f0
    d470:	mov	x5, #0x40                  	// #64
    d474:	add	x2, x1, #0x8, lsl #12
    d478:	add	x1, x1, x20
    d47c:	mov	x4, #0x200                 	// #512
    d480:	str	x5, [x2, #21512]
    d484:	str	x4, [x2, #21520]
    d488:	str	xzr, [x2, #21528]
    d48c:	ldr	x2, [x1, #8]
    d490:	b	d01c <__sancov_default_options@@Base+0x8cc>
    d494:	nop
    d498:	stp	x19, x20, [sp, #-48]!
    d49c:	stp	x21, x22, [sp, #16]
    d4a0:	mov	x21, x0
    d4a4:	ldr	x0, [x2, #8]
    d4a8:	stp	x23, x30, [sp, #32]
    d4ac:	cbz	x0, d554 <__sancov_default_options@@Base+0xe04>
    d4b0:	mov	x0, #0x2001                	// #8193
    d4b4:	add	x22, x1, x0
    d4b8:	mov	x20, x2
    d4bc:	mov	x19, x1
    d4c0:	add	x23, x21, x22, lsl #6
    d4c4:	mov	w1, #0x1                   	// #1
    d4c8:	ldxrb	w0, [x23]
    d4cc:	stxrb	w2, w1, [x23]
    d4d0:	cbnz	w2, d4c8 <__sancov_default_options@@Base+0xd78>
    d4d4:	dmb	ish
    d4d8:	tst	w0, #0xff
    d4dc:	b.eq	d4e8 <__sancov_default_options@@Base+0xd98>  // b.none
    d4e0:	mov	x0, x23
    d4e4:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    d4e8:	ldr	x0, [x23, #8]
    d4ec:	add	x19, x21, x19, lsl #6
    d4f0:	cbz	x0, d524 <__sancov_default_options@@Base+0xdd4>
    d4f4:	add	x19, x19, #0x80, lsl #12
    d4f8:	add	x0, x0, #0x1
    d4fc:	ldr	x1, [x19, #80]
    d500:	str	x1, [x20]
    d504:	stp	x0, x20, [x19, #72]
    d508:	dmb	ish
    d50c:	lsl	x22, x22, #6
    d510:	strb	wzr, [x21, x22]
    d514:	ldp	x21, x22, [sp, #16]
    d518:	ldp	x23, x30, [sp, #32]
    d51c:	ldp	x19, x20, [sp], #48
    d520:	ret
    d524:	add	x19, x19, #0x80, lsl #12
    d528:	str	xzr, [x20]
    d52c:	mov	x0, #0x1                   	// #1
    d530:	stp	x0, x20, [x19, #72]
    d534:	str	x20, [x19, #88]
    d538:	dmb	ish
    d53c:	lsl	x22, x22, #6
    d540:	strb	wzr, [x21, x22]
    d544:	ldp	x21, x22, [sp, #16]
    d548:	ldp	x23, x30, [sp, #32]
    d54c:	ldp	x19, x20, [sp], #48
    d550:	ret
    d554:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d558:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d55c:	add	x2, x2, #0x698
    d560:	add	x0, x0, #0x6b0
    d564:	mov	x4, #0x0                   	// #0
    d568:	mov	x3, #0x0                   	// #0
    d56c:	mov	w1, #0xad                  	// #173
    d570:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d574:	nop
    d578:	sub	sp, sp, #0x210
    d57c:	adrp	x5, 5b000 <_Unwind_Backtrace@GCC_3.3>
    d580:	stp	x25, x26, [sp, #48]
    d584:	mov	x26, x2
    d588:	mov	x25, x3
    d58c:	ldr	x2, [x5, #1216]
    d590:	stp	x19, x20, [sp]
    d594:	mov	x19, x1
    d598:	mov	x1, #0x100000              	// #1048576
    d59c:	stp	x21, x22, [sp, #16]
    d5a0:	mov	x21, x0
    d5a4:	mov	x0, x1
    d5a8:	str	x30, [sp, #80]
    d5ac:	str	x4, [sp, #104]
    d5b0:	bl	17ce8 <__sanitizer_set_report_fd@@Base+0x4dc8>
    d5b4:	ldr	x4, [sp, #104]
    d5b8:	cbz	x0, d798 <__sancov_default_options@@Base+0x1048>
    d5bc:	mov	x22, x0
    d5c0:	tst	x0, #0xfffff
    d5c4:	ldr	x0, [x19, #24]
    d5c8:	stp	x23, x24, [sp, #32]
    d5cc:	stp	x27, x28, [sp, #64]
    d5d0:	add	x0, x0, #0x100, lsl #12
    d5d4:	str	x0, [x19, #24]
    d5d8:	b.ne	d994 <__sancov_default_options@@Base+0x1244>  // b.any
    d5dc:	mov	x0, #0xfffffff             	// #268435455
    d5e0:	lsr	x19, x22, #20
    d5e4:	cmp	x0, x22, lsr #20
    d5e8:	b.cc	d9f8 <__sancov_default_options@@Base+0x12a8>  // b.lo, b.ul, b.last
    d5ec:	and	w23, w4, #0xff
    d5f0:	lsr	x20, x22, #32
    d5f4:	ldr	x0, [x21, x20, lsl #3]
    d5f8:	dmb	ish
    d5fc:	cbz	x0, d94c <__sancov_default_options@@Base+0x11fc>
    d600:	and	x3, x19, #0xfff
    d604:	ldrb	w1, [x0, x3]
    d608:	cbnz	x1, da50 <__sancov_default_options@@Base+0x1300>
    d60c:	strb	w23, [x0, x3]
    d610:	cmp	x4, #0x35
    d614:	b.eq	d828 <__sancov_default_options@@Base+0x10d8>  // b.none
    d618:	lsl	x28, x4, #4
    d61c:	cmp	x4, #0x10
    d620:	b.ls	d640 <__sancov_default_options@@Base+0xef0>  // b.plast
    d624:	sub	x0, x4, #0x10
    d628:	mov	x28, #0x100                 	// #256
    d62c:	and	x1, x0, #0x3
    d630:	lsr	x0, x0, #2
    d634:	lsl	x0, x28, x0
    d638:	lsr	x28, x0, #2
    d63c:	madd	x28, x28, x1, x0
    d640:	mov	x27, #0x100000              	// #1048576
    d644:	udiv	x27, x27, x28
    d648:	cbz	x28, d93c <__sancov_default_options@@Base+0x11ec>
    d64c:	mov	w23, #0x4000                	// #16384
    d650:	mov	x1, #0x40                  	// #64
    d654:	mov	x0, #0x3e                  	// #62
    d658:	mul	x27, x27, x28
    d65c:	udiv	w23, w23, w28
    d660:	cmp	x23, x1
    d664:	csel	x23, x23, x1, ls  // ls = plast
    d668:	cmp	x23, #0x0
    d66c:	csinc	x23, x23, xzr, ne  // ne = any
    d670:	cmp	x23, x0
    d674:	csel	x23, x23, x0, ls  // ls = plast
    d678:	add	x27, x22, x27
    d67c:	cmp	x22, x27
    d680:	b.cs	d93c <__sancov_default_options@@Base+0x11ec>  // b.hs, b.nlast
    d684:	add	x24, sp, #0x90
    d688:	add	x7, x26, x4, lsl #10
    d68c:	mov	x1, #0x0                   	// #0
    d690:	mov	x19, #0x1                   	// #1
    d694:	str	x22, [sp, #144]
    d698:	add	x22, x22, x28
    d69c:	cmp	x22, x27
    d6a0:	b.cs	d7e8 <__sancov_default_options@@Base+0x1098>  // b.hs, b.nlast
    d6a4:	str	x22, [x24, x19, lsl #3]
    d6a8:	cmp	x19, #0x2f
    d6ac:	add	x19, x19, #0x1
    d6b0:	b.ne	d698 <__sancov_default_options@@Base+0xf48>  // b.any
    d6b4:	mov	x2, #0xd800                	// #55296
    d6b8:	mov	x19, #0x0                   	// #0
    d6bc:	add	x9, x26, x2
    d6c0:	b	d6cc <__sancov_default_options@@Base+0xf7c>
    d6c4:	cmp	x19, #0x2f
    d6c8:	b.hi	d820 <__sancov_default_options@@Base+0x10d0>  // b.pmore
    d6cc:	ldr	x8, [x24, x19, lsl #3]
    d6d0:	cbz	x1, d718 <__sancov_default_options@@Base+0xfc8>
    d6d4:	ldr	x5, [x1, #8]
    d6d8:	add	x6, x5, #0x1
    d6dc:	add	x5, x5, #0x2
    d6e0:	str	x6, [x1, #8]
    d6e4:	add	x19, x19, #0x1
    d6e8:	cmp	x6, x23
    d6ec:	str	x8, [x1, x5, lsl #3]
    d6f0:	b.ne	d6c4 <__sancov_default_options@@Base+0xf74>  // b.any
    d6f4:	ldr	x5, [x25, #8]
    d6f8:	str	xzr, [x1]
    d6fc:	cbnz	x5, d7b4 <__sancov_default_options@@Base+0x1064>
    d700:	mov	x2, #0x1                   	// #1
    d704:	stp	x2, x1, [x25, #8]
    d708:	cmp	x19, #0x2f
    d70c:	str	x1, [x25, #24]
    d710:	b.hi	d7d0 <__sancov_default_options@@Base+0x1080>  // b.pmore
    d714:	ldr	x8, [x24, x19, lsl #3]
    d718:	mov	x1, x8
    d71c:	ldr	x20, [x7, #24]
    d720:	cbnz	x20, d738 <__sancov_default_options@@Base+0xfe8>
    d724:	cbz	x1, d790 <__sancov_default_options@@Base+0x1040>
    d728:	mov	x5, #0x0                   	// #0
    d72c:	mov	x6, #0x1                   	// #1
    d730:	str	xzr, [x1, #8]
    d734:	b	d6dc <__sancov_default_options@@Base+0xf8c>
    d738:	cmp	x20, #0x35
    d73c:	b.hi	d9b4 <__sancov_default_options@@Base+0x1264>  // b.pmore
    d740:	lsl	x5, x20, #10
    d744:	add	x1, x26, x5
    d748:	ldr	x0, [x26, x5]
    d74c:	cbz	x0, da18 <__sancov_default_options@@Base+0x12c8>
    d750:	lsl	x20, x20, #7
    d754:	add	x3, x26, x5
    d758:	add	x1, x20, x0
    d75c:	sub	x0, x0, #0x1
    d760:	add	x1, x1, #0x2
    d764:	str	x0, [x26, x5]
    d768:	add	x20, x20, x0
    d76c:	add	x20, x20, #0x4
    d770:	ldr	x2, [x26, x1, lsl #3]
    d774:	ldr	x0, [x9, #16]
    d778:	ldr	x1, [x3, #16]
    d77c:	prfm	pldl1keep, [x2]
    d780:	add	x0, x0, x1
    d784:	ldr	x1, [x26, x20, lsl #3]
    d788:	str	x0, [x9, #16]
    d78c:	cbnz	x1, d728 <__sancov_default_options@@Base+0xfd8>
    d790:	ldp	x23, x24, [sp, #32]
    d794:	ldp	x27, x28, [sp, #64]
    d798:	mov	w0, #0x0                   	// #0
    d79c:	ldp	x19, x20, [sp]
    d7a0:	ldp	x21, x22, [sp, #16]
    d7a4:	ldp	x25, x26, [sp, #48]
    d7a8:	ldr	x30, [sp, #80]
    d7ac:	add	sp, sp, #0x210
    d7b0:	ret
    d7b4:	ldr	x2, [x25, #24]
    d7b8:	add	x5, x5, #0x1
    d7bc:	cmp	x19, #0x2f
    d7c0:	str	x1, [x2]
    d7c4:	str	x5, [x25, #8]
    d7c8:	str	x1, [x25, #24]
    d7cc:	b.ls	d714 <__sancov_default_options@@Base+0xfc4>  // b.plast
    d7d0:	add	x22, x22, x28
    d7d4:	mov	x19, #0x0                   	// #0
    d7d8:	cmp	x22, x27
    d7dc:	mov	x1, #0x0                   	// #0
    d7e0:	b.cc	d6a4 <__sancov_default_options@@Base+0xf54>  // b.lo, b.ul, b.last
    d7e4:	nop
    d7e8:	cbnz	x19, d838 <__sancov_default_options@@Base+0x10e8>
    d7ec:	cbz	x1, d93c <__sancov_default_options@@Base+0x11ec>
    d7f0:	ldr	x2, [x1, #8]
    d7f4:	cbz	x2, da70 <__sancov_default_options@@Base+0x1320>
    d7f8:	ldr	x0, [x25, #8]
    d7fc:	str	xzr, [x1]
    d800:	cbnz	x0, d9d4 <__sancov_default_options@@Base+0x1284>
    d804:	mov	x2, #0x1                   	// #1
    d808:	mov	w0, w2
    d80c:	ldp	x23, x24, [sp, #32]
    d810:	ldp	x27, x28, [sp, #64]
    d814:	stp	x2, x1, [x25, #8]
    d818:	str	x1, [x25, #24]
    d81c:	b	d79c <__sancov_default_options@@Base+0x104c>
    d820:	mov	x19, #0x0                   	// #0
    d824:	b	d698 <__sancov_default_options@@Base+0xf48>
    d828:	mov	x27, #0x100000              	// #1048576
    d82c:	mov	x23, #0x20                  	// #32
    d830:	mov	x28, #0x200                 	// #512
    d834:	b	d678 <__sancov_default_options@@Base+0xf28>
    d838:	add	x28, x26, x4, lsl #10
    d83c:	mov	x0, #0xd800                	// #55296
    d840:	add	x27, sp, #0x90
    d844:	add	x4, x26, x0
    d848:	mov	x20, #0x0                   	// #0
    d84c:	b	d858 <__sancov_default_options@@Base+0x1108>
    d850:	cmp	x19, x20
    d854:	b.ls	d7f4 <__sancov_default_options@@Base+0x10a4>  // b.plast
    d858:	ldr	x22, [x27, x20, lsl #3]
    d85c:	cbz	x1, d8a4 <__sancov_default_options@@Base+0x1154>
    d860:	ldr	x0, [x1, #8]
    d864:	add	x2, x0, #0x1
    d868:	add	x0, x0, #0x2
    d86c:	str	x2, [x1, #8]
    d870:	add	x20, x20, #0x1
    d874:	cmp	x2, x23
    d878:	str	x22, [x1, x0, lsl #3]
    d87c:	b.ne	d850 <__sancov_default_options@@Base+0x1100>  // b.any
    d880:	ldr	x0, [x25, #8]
    d884:	cbnz	x0, d91c <__sancov_default_options@@Base+0x11cc>
    d888:	str	xzr, [x1]
    d88c:	mov	x2, #0x1                   	// #1
    d890:	stp	x2, x1, [x25, #8]
    d894:	cmp	x19, x20
    d898:	str	x1, [x25, #24]
    d89c:	b.ls	d93c <__sancov_default_options@@Base+0x11ec>  // b.plast
    d8a0:	ldr	x22, [x27, x20, lsl #3]
    d8a4:	mov	x1, x22
    d8a8:	ldr	x24, [x28, #24]
    d8ac:	cbnz	x24, d8c4 <__sancov_default_options@@Base+0x1174>
    d8b0:	cbz	x1, d790 <__sancov_default_options@@Base+0x1040>
    d8b4:	mov	x0, #0x0                   	// #0
    d8b8:	mov	x2, #0x1                   	// #1
    d8bc:	str	xzr, [x1, #8]
    d8c0:	b	d868 <__sancov_default_options@@Base+0x1118>
    d8c4:	cmp	x24, #0x35
    d8c8:	b.hi	dab8 <__sancov_default_options@@Base+0x1368>  // b.pmore
    d8cc:	lsl	x5, x24, #10
    d8d0:	add	x1, x26, x5
    d8d4:	ldr	x0, [x26, x5]
    d8d8:	cbz	x0, dac0 <__sancov_default_options@@Base+0x1370>
    d8dc:	lsl	x24, x24, #7
    d8e0:	add	x2, x26, x5
    d8e4:	add	x1, x24, x0
    d8e8:	sub	x0, x0, #0x1
    d8ec:	add	x1, x1, #0x2
    d8f0:	str	x0, [x26, x5]
    d8f4:	add	x24, x24, x0
    d8f8:	add	x0, x24, #0x4
    d8fc:	ldr	x3, [x26, x1, lsl #3]
    d900:	ldr	x1, [x2, #16]
    d904:	ldr	x2, [x4, #16]
    d908:	prfm	pldl1keep, [x3]
    d90c:	add	x2, x2, x1
    d910:	ldr	x1, [x26, x0, lsl #3]
    d914:	str	x2, [x4, #16]
    d918:	b	d8b0 <__sancov_default_options@@Base+0x1160>
    d91c:	ldr	x3, [x25, #24]
    d920:	str	xzr, [x1]
    d924:	add	x0, x0, #0x1
    d928:	cmp	x19, x20
    d92c:	str	x1, [x3]
    d930:	str	x0, [x25, #8]
    d934:	str	x1, [x25, #24]
    d938:	b.hi	d8a0 <__sancov_default_options@@Base+0x1150>  // b.pmore
    d93c:	mov	w0, #0x1                   	// #1
    d940:	ldp	x23, x24, [sp, #32]
    d944:	ldp	x27, x28, [sp, #64]
    d948:	b	d79c <__sancov_default_options@@Base+0x104c>
    d94c:	add	x24, x21, #0x80, lsl #12
    d950:	mov	w1, #0x1                   	// #1
    d954:	ldxrb	w0, [x24]
    d958:	stxrb	w2, w1, [x24]
    d95c:	cbnz	w2, d954 <__sancov_default_options@@Base+0x1204>
    d960:	dmb	ish
    d964:	tst	w0, #0xff
    d968:	b.eq	d97c <__sancov_default_options@@Base+0x122c>  // b.none
    d96c:	mov	x0, x24
    d970:	str	x4, [sp, #104]
    d974:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    d978:	ldr	x4, [sp, #104]
    d97c:	ldr	x0, [x21, x20, lsl #3]
    d980:	dmb	ish
    d984:	cbz	x0, da90 <__sancov_default_options@@Base+0x1340>
    d988:	dmb	ish
    d98c:	strb	wzr, [x24]
    d990:	b	d600 <__sancov_default_options@@Base+0xeb0>
    d994:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d998:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d99c:	add	x2, x2, #0x700
    d9a0:	add	x0, x0, #0x6b0
    d9a4:	mov	x4, #0x0                   	// #0
    d9a8:	mov	x3, #0x0                   	// #0
    d9ac:	mov	w1, #0x126                 	// #294
    d9b0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d9b4:	mov	x3, x20
    d9b8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d9bc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d9c0:	add	x2, x2, #0x7d0
    d9c4:	add	x0, x0, #0x7f0
    d9c8:	mov	x4, #0x36                  	// #54
    d9cc:	mov	w1, #0xa0                  	// #160
    d9d0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d9d4:	ldr	x4, [x25, #24]
    d9d8:	add	x2, x0, #0x1
    d9dc:	ldp	x23, x24, [sp, #32]
    d9e0:	mov	w0, #0x1                   	// #1
    d9e4:	ldp	x27, x28, [sp, #64]
    d9e8:	str	x1, [x4]
    d9ec:	str	x2, [x25, #8]
    d9f0:	str	x1, [x25, #24]
    d9f4:	b	d79c <__sancov_default_options@@Base+0x104c>
    d9f8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    d9fc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    da00:	mov	x3, x19
    da04:	add	x2, x2, #0x728
    da08:	add	x0, x0, #0x6b0
    da0c:	mov	x4, #0x10000000            	// #268435456
    da10:	mov	w1, #0x116                 	// #278
    da14:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    da18:	mov	x3, x20
    da1c:	mov	x2, x21
    da20:	mov	x0, x26
    da24:	stp	x8, x4, [sp, #104]
    da28:	stp	x5, x9, [sp, #120]
    da2c:	str	x7, [sp, #136]
    da30:	bl	dbf0 <__sancov_default_options@@Base+0x14a0>
    da34:	tst	w0, #0xff
    da38:	b.eq	d790 <__sancov_default_options@@Base+0x1040>  // b.none
    da3c:	ldp	x5, x9, [sp, #120]
    da40:	ldp	x8, x4, [sp, #104]
    da44:	ldr	x7, [sp, #136]
    da48:	ldr	x0, [x26, x5]
    da4c:	b	d750 <__sancov_default_options@@Base+0x1000>
    da50:	mov	x4, x1
    da54:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    da58:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    da5c:	add	x2, x2, #0x760
    da60:	add	x0, x0, #0x788
    da64:	mov	x3, #0x0                   	// #0
    da68:	mov	w1, #0x42                  	// #66
    da6c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    da70:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    da74:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    da78:	add	x2, x2, #0x698
    da7c:	add	x0, x0, #0x6b0
    da80:	mov	x4, #0x0                   	// #0
    da84:	mov	x3, #0x0                   	// #0
    da88:	mov	w1, #0x169                 	// #361
    da8c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    da90:	mov	w2, #0x0                   	// #0
    da94:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    da98:	mov	x0, #0x1000                	// #4096
    da9c:	add	x1, x1, #0x750
    daa0:	str	x4, [sp, #104]
    daa4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    daa8:	dmb	ish
    daac:	str	x0, [x21, x20, lsl #3]
    dab0:	ldr	x4, [sp, #104]
    dab4:	b	d988 <__sancov_default_options@@Base+0x1238>
    dab8:	mov	x3, x24
    dabc:	b	d9b8 <__sancov_default_options@@Base+0x1268>
    dac0:	mov	x3, x24
    dac4:	mov	x2, x21
    dac8:	mov	x0, x26
    dacc:	stp	x5, x4, [sp, #104]
    dad0:	bl	dbf0 <__sancov_default_options@@Base+0x14a0>
    dad4:	tst	w0, #0xff
    dad8:	b.eq	d790 <__sancov_default_options@@Base+0x1040>  // b.none
    dadc:	ldp	x5, x4, [sp, #104]
    dae0:	ldr	x0, [x26, x5]
    dae4:	b	d8dc <__sancov_default_options@@Base+0x118c>
    dae8:	stp	x19, x20, [sp, #-80]!
    daec:	mov	x20, x0
    daf0:	mov	x0, #0x2001                	// #8193
    daf4:	stp	x21, x22, [sp, #16]
    daf8:	add	x22, x3, x0
    dafc:	mov	x19, x3
    db00:	lsl	x21, x22, #6
    db04:	stp	x23, x24, [sp, #32]
    db08:	add	x23, x20, x21
    db0c:	stp	x25, x26, [sp, #48]
    db10:	mov	x25, x2
    db14:	mov	x24, x1
    db18:	mov	w1, #0x1                   	// #1
    db1c:	str	x30, [sp, #64]
    db20:	ldxrb	w0, [x23]
    db24:	stxrb	w2, w1, [x23]
    db28:	cbnz	w2, db20 <__sancov_default_options@@Base+0x13d0>
    db2c:	dmb	ish
    db30:	tst	w0, #0xff
    db34:	b.eq	db40 <__sancov_default_options@@Base+0x13f0>  // b.none
    db38:	mov	x0, x23
    db3c:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    db40:	add	x21, x21, #0x8
    db44:	add	x26, x20, x21
    db48:	ldr	x5, [x20, x21]
    db4c:	cbnz	x5, db78 <__sancov_default_options@@Base+0x1428>
    db50:	mov	x3, x23
    db54:	mov	x2, x25
    db58:	mov	x1, x24
    db5c:	mov	x4, x19
    db60:	mov	x0, x20
    db64:	bl	d578 <__sancov_default_options@@Base+0xe28>
    db68:	tst	w0, #0xff
    db6c:	b.eq	dbe8 <__sancov_default_options@@Base+0x1498>  // b.none
    db70:	ldr	x5, [x20, x21]
    db74:	cbz	x5, dbc8 <__sancov_default_options@@Base+0x1478>
    db78:	add	x4, x20, x19, lsl #6
    db7c:	add	x4, x4, #0x80, lsl #12
    db80:	ldr	x0, [x26, #8]
    db84:	ldr	x1, [x4, #80]
    db88:	ldr	x1, [x1]
    db8c:	str	x1, [x4, #80]
    db90:	cbz	x1, dbc0 <__sancov_default_options@@Base+0x1470>
    db94:	sub	x5, x5, #0x1
    db98:	str	x5, [x4, #72]
    db9c:	dmb	ish
    dba0:	lsl	x22, x22, #6
    dba4:	strb	wzr, [x20, x22]
    dba8:	ldp	x21, x22, [sp, #16]
    dbac:	ldp	x23, x24, [sp, #32]
    dbb0:	ldp	x25, x26, [sp, #48]
    dbb4:	ldr	x30, [sp, #64]
    dbb8:	ldp	x19, x20, [sp], #80
    dbbc:	ret
    dbc0:	str	xzr, [x4, #88]
    dbc4:	b	db94 <__sancov_default_options@@Base+0x1444>
    dbc8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    dbcc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    dbd0:	add	x2, x2, #0x840
    dbd4:	add	x0, x0, #0x858
    dbd8:	mov	x4, #0x0                   	// #0
    dbdc:	mov	x3, #0x0                   	// #0
    dbe0:	mov	w1, #0x40                  	// #64
    dbe4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    dbe8:	mov	x0, #0x0                   	// #0
    dbec:	b	db9c <__sancov_default_options@@Base+0x144c>
    dbf0:	stp	x19, x20, [sp, #-64]!
    dbf4:	mov	x19, x0
    dbf8:	mov	x20, x2
    dbfc:	ldr	x0, [x1, #8]
    dc00:	stp	x21, x22, [sp, #16]
    dc04:	mov	x22, x1
    dc08:	stp	x23, x24, [sp, #32]
    dc0c:	mov	x21, x3
    dc10:	str	x30, [sp, #48]
    dc14:	cbz	x0, dcf0 <__sancov_default_options@@Base+0x15a0>
    dc18:	mov	x0, #0xd800                	// #55296
    dc1c:	add	x24, x19, x0
    dc20:	mov	x3, x21
    dc24:	mov	x1, x24
    dc28:	mov	x2, x19
    dc2c:	mov	x0, x20
    dc30:	bl	dae8 <__sancov_default_options@@Base+0x1398>
    dc34:	mov	x23, x0
    dc38:	cbz	x0, ddc8 <__sancov_default_options@@Base+0x1678>
    dc3c:	ldr	x6, [x0, #8]
    dc40:	add	x8, x0, #0x10
    dc44:	add	x7, x22, #0x20
    dc48:	mov	x4, #0x0                   	// #0
    dc4c:	cbz	x6, dde0 <__sancov_default_options@@Base+0x1690>
    dc50:	ldr	x5, [x8, x4, lsl #3]
    dc54:	str	x5, [x7, x4, lsl #3]
    dc58:	add	x4, x4, #0x1
    dc5c:	cmp	x6, x4
    dc60:	b.ne	dc50 <__sancov_default_options@@Base+0x1500>  // b.any
    dc64:	add	x21, x19, x21, lsl #10
    dc68:	mov	w0, #0x1                   	// #1
    dc6c:	ldr	x21, [x21, #24]
    dc70:	str	x6, [x22]
    dc74:	cbnz	x21, dc8c <__sancov_default_options@@Base+0x153c>
    dc78:	ldp	x21, x22, [sp, #16]
    dc7c:	ldp	x23, x24, [sp, #32]
    dc80:	ldr	x30, [sp, #48]
    dc84:	ldp	x19, x20, [sp], #64
    dc88:	ret
    dc8c:	cmp	x21, #0x35
    dc90:	b.hi	def8 <__sancov_default_options@@Base+0x17a8>  // b.pmore
    dc94:	lsl	x22, x21, #10
    dc98:	add	x1, x19, x22
    dc9c:	ldr	x2, [x1, #8]
    dca0:	cbz	x2, de14 <__sancov_default_options@@Base+0x16c4>
    dca4:	ldr	x0, [x19, x22]
    dca8:	cmp	x0, x2
    dcac:	b.eq	ddfc <__sancov_default_options@@Base+0x16ac>  // b.none
    dcb0:	add	x2, x0, x21, lsl #7
    dcb4:	add	x3, x19, x22
    dcb8:	add	x2, x2, #0x4
    dcbc:	add	x0, x0, #0x1
    dcc0:	str	x0, [x19, x22]
    dcc4:	mov	w0, #0x1                   	// #1
    dcc8:	ldr	x1, [x24, #16]
    dccc:	str	x23, [x19, x2, lsl #3]
    dcd0:	ldp	x21, x22, [sp, #16]
    dcd4:	ldr	x2, [x3, #16]
    dcd8:	ldr	x30, [sp, #48]
    dcdc:	sub	x1, x1, x2
    dce0:	str	x1, [x24, #16]
    dce4:	ldp	x23, x24, [sp, #32]
    dce8:	ldp	x19, x20, [sp], #64
    dcec:	ret
    dcf0:	mov	x5, #0x1                   	// #1
    dcf4:	mov	x11, x5
    dcf8:	mov	x12, #0x7c                  	// #124
    dcfc:	mov	x10, #0x14                  	// #20
    dd00:	mov	x9, #0x100                 	// #256
    dd04:	mov	w8, #0x4000                	// #16384
    dd08:	mov	x3, #0x3e                  	// #62
    dd0c:	nop
    dd10:	add	x1, x19, x5, lsl #10
    dd14:	lsl	x4, x5, #4
    dd18:	mov	x6, x1
    dd1c:	mov	x0, #0x14                  	// #20
    dd20:	mov	x2, x5
    dd24:	add	x5, x5, #0x1
    dd28:	stp	x12, x4, [x1, #8]
    dd2c:	cmp	x5, #0x36
    dd30:	str	x0, [x6, #24]
    dd34:	b.eq	dc18 <__sancov_default_options@@Base+0x14c8>  // b.none
    dd38:	cmp	x5, #0x35
    dd3c:	b.eq	ddac <__sancov_default_options@@Base+0x165c>  // b.none
    dd40:	cmp	x5, #0x10
    dd44:	b.ls	dd10 <__sancov_default_options@@Base+0x15c0>  // b.plast
    dd48:	sub	x4, x2, #0xf
    dd4c:	add	x6, x6, #0x400
    dd50:	and	x0, x4, #0x3
    dd54:	mov	x2, x5
    dd58:	lsr	x4, x4, #2
    dd5c:	add	x5, x5, #0x1
    dd60:	lsl	x4, x9, x4
    dd64:	lsr	x7, x4, #2
    dd68:	madd	x7, x7, x0, x4
    dd6c:	str	x7, [x6, #16]
    dd70:	udiv	w4, w8, w7
    dd74:	cmp	x4, #0x0
    dd78:	csel	x4, x4, x11, ne  // ne = any
    dd7c:	cmp	x4, #0x3e
    dd80:	csel	x4, x4, x3, ls  // ls = plast
    dd84:	add	x0, x4, #0x2
    dd88:	lsl	x4, x4, #1
    dd8c:	str	x4, [x6, #8]
    dd90:	cmp	x7, x0, lsl #3
    dd94:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    dd98:	str	x0, [x6, #24]
    dd9c:	cmp	x5, #0x36
    dda0:	b.eq	dc18 <__sancov_default_options@@Base+0x14c8>  // b.none
    dda4:	cmp	x5, #0x35
    dda8:	b.ne	dd40 <__sancov_default_options@@Base+0x15f0>  // b.any
    ddac:	add	x0, x19, #0x8, lsl #12
    ddb0:	mov	x2, #0x40                  	// #64
    ddb4:	mov	x1, #0x200                 	// #512
    ddb8:	str	x2, [x0, #21512]
    ddbc:	str	x1, [x0, #21520]
    ddc0:	str	xzr, [x0, #21528]
    ddc4:	b	dc18 <__sancov_default_options@@Base+0x14c8>
    ddc8:	mov	w0, #0x0                   	// #0
    ddcc:	ldp	x21, x22, [sp, #16]
    ddd0:	ldp	x23, x24, [sp, #32]
    ddd4:	ldr	x30, [sp, #48]
    ddd8:	ldp	x19, x20, [sp], #64
    dddc:	ret
    dde0:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    dde4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    dde8:	add	x2, x2, #0x698
    ddec:	add	x0, x0, #0x7f0
    ddf0:	mov	x3, #0x0                   	// #0
    ddf4:	mov	w1, #0xf6                  	// #246
    ddf8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ddfc:	mov	x0, x19
    de00:	mov	x2, x20
    de04:	mov	x3, x21
    de08:	bl	e3b0 <__sancov_default_options@@Base+0x1c60>
    de0c:	ldr	x0, [x19, x22]
    de10:	b	dcb0 <__sancov_default_options@@Base+0x1560>
    de14:	mov	x5, #0x1                   	// #1
    de18:	mov	x11, x5
    de1c:	mov	x12, #0x7c                  	// #124
    de20:	mov	x10, #0x14                  	// #20
    de24:	mov	x9, #0x100                 	// #256
    de28:	mov	w8, #0x4000                	// #16384
    de2c:	mov	x7, #0x3e                  	// #62
    de30:	add	x4, x19, x5, lsl #10
    de34:	lsl	x6, x5, #4
    de38:	mov	x2, x4
    de3c:	mov	x0, #0x14                  	// #20
    de40:	mov	x3, x5
    de44:	add	x5, x5, #0x1
    de48:	stp	x12, x6, [x4, #8]
    de4c:	cmp	x5, #0x36
    de50:	str	x0, [x2, #24]
    de54:	b.eq	dec4 <__sancov_default_options@@Base+0x1774>  // b.none
    de58:	cmp	x5, #0x35
    de5c:	b.eq	decc <__sancov_default_options@@Base+0x177c>  // b.none
    de60:	cmp	x5, #0x10
    de64:	b.ls	de30 <__sancov_default_options@@Base+0x16e0>  // b.plast
    de68:	sub	x0, x3, #0xf
    de6c:	add	x2, x2, #0x400
    de70:	and	x6, x0, #0x3
    de74:	mov	x3, x5
    de78:	lsr	x0, x0, #2
    de7c:	add	x5, x5, #0x1
    de80:	lsl	x0, x9, x0
    de84:	lsr	x4, x0, #2
    de88:	madd	x0, x4, x6, x0
    de8c:	str	x0, [x2, #16]
    de90:	udiv	w4, w8, w0
    de94:	cmp	x4, #0x0
    de98:	csel	x4, x4, x11, ne  // ne = any
    de9c:	cmp	x4, #0x3e
    dea0:	csel	x4, x4, x7, ls  // ls = plast
    dea4:	add	x6, x4, #0x2
    dea8:	lsl	x4, x4, #1
    deac:	str	x4, [x2, #8]
    deb0:	cmp	x0, x6, lsl #3
    deb4:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    deb8:	str	x0, [x2, #24]
    debc:	cmp	x5, #0x36
    dec0:	b.ne	de58 <__sancov_default_options@@Base+0x1708>  // b.any
    dec4:	ldr	x2, [x1, #8]
    dec8:	b	dca4 <__sancov_default_options@@Base+0x1554>
    decc:	add	x0, x19, #0x8, lsl #12
    ded0:	mov	x2, #0x200                 	// #512
    ded4:	mov	x3, #0x40                  	// #64
    ded8:	str	x3, [x0, #21512]
    dedc:	str	x2, [x0, #21520]
    dee0:	str	xzr, [x0, #21528]
    dee4:	ldr	x0, [x19, x22]
    dee8:	ldr	x2, [x1, #8]
    deec:	cmp	x0, x2
    def0:	b.ne	dcb0 <__sancov_default_options@@Base+0x1560>  // b.any
    def4:	b	ddfc <__sancov_default_options@@Base+0x16ac>
    def8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    defc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    df00:	mov	x3, x21
    df04:	add	x2, x2, #0x7d0
    df08:	add	x0, x0, #0x7f0
    df0c:	mov	x4, #0x36                  	// #54
    df10:	mov	w1, #0xaf                  	// #175
    df14:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    df18:	stp	x19, x20, [sp, #-80]!
    df1c:	cmp	x2, #0x0
    df20:	stp	x21, x22, [sp, #16]
    df24:	csinc	x22, x2, xzr, ne  // ne = any
    df28:	mov	x21, x1
    df2c:	str	x30, [sp, #64]
    df30:	adds	x1, x3, x22
    df34:	b.cs	e388 <__sancov_default_options@@Base+0x1c38>  // b.hs, b.nlast
    df38:	stp	x23, x24, [sp, #32]
    df3c:	mov	x19, x3
    df40:	mov	x23, x0
    df44:	cmp	x3, #0x8
    df48:	b.hi	e190 <__sancov_default_options@@Base+0x1a40>  // b.pmore
    df4c:	cmp	x2, #0x20, lsl #12
    df50:	b.hi	e014 <__sancov_default_options@@Base+0x18c4>  // b.pmore
    df54:	cmp	x22, #0x100
    df58:	b.ls	e1c4 <__sancov_default_options@@Base+0x1a74>  // b.plast
    df5c:	clz	x3, x22
    df60:	mov	w20, #0x3f                  	// #63
    df64:	sub	w20, w20, w3
    df68:	mov	w3, #0x1                   	// #1
    df6c:	sub	w1, w20, #0x2
    df70:	lsl	w3, w3, w1
    df74:	sub	w3, w3, #0x1
    df78:	tst	x3, x22
    df7c:	lsr	x3, x22, x1
    df80:	and	x3, x3, #0x3
    df84:	cinc	x3, x3, ne  // ne = any
    df88:	add	x20, x3, w20, sxtw #2
    df8c:	sub	x20, x20, #0x10
    df90:	cmp	x20, #0x35
    df94:	b.hi	e214 <__sancov_default_options@@Base+0x1ac4>  // b.pmore
    df98:	lsl	x22, x20, #10
    df9c:	add	x1, x21, x22
    dfa0:	ldr	x3, [x21, x22]
    dfa4:	cbz	x3, e2a8 <__sancov_default_options@@Base+0x1b58>
    dfa8:	lsl	x20, x20, #7
    dfac:	add	x1, x21, x22
    dfb0:	add	x0, x20, x3
    dfb4:	mov	x2, #0xd800                	// #55296
    dfb8:	add	x0, x0, #0x2
    dfbc:	sub	x3, x3, #0x1
    dfc0:	add	x2, x21, x2
    dfc4:	str	x3, [x21, x22]
    dfc8:	add	x20, x20, x3
    dfcc:	ldr	x3, [x21, x0, lsl #3]
    dfd0:	add	x20, x20, #0x4
    dfd4:	ldr	x0, [x1, #16]
    dfd8:	ldr	x1, [x2, #16]
    dfdc:	prfm	pldl1keep, [x3]
    dfe0:	add	x1, x1, x0
    dfe4:	ldr	x0, [x21, x20, lsl #3]
    dfe8:	str	x1, [x2, #16]
    dfec:	cmp	x19, #0x8
    dff0:	b.ls	e000 <__sancov_default_options@@Base+0x18b0>  // b.plast
    dff4:	sub	x19, x19, #0x1
    dff8:	ands	x3, x0, x19
    dffc:	b.ne	e268 <__sancov_default_options@@Base+0x1b18>  // b.any
    e000:	ldp	x23, x24, [sp, #32]
    e004:	ldp	x21, x22, [sp, #16]
    e008:	ldr	x30, [sp, #64]
    e00c:	ldp	x19, x20, [sp], #80
    e010:	ret
    e014:	stp	x25, x26, [sp, #48]
    e018:	sub	x24, x3, #0x1
    e01c:	tst	x3, x24
    e020:	b.ne	e288 <__sancov_default_options@@Base+0x1b38>  // b.any
    e024:	add	x25, x23, #0x80, lsl #12
    e028:	add	x25, x25, #0xc00
    e02c:	ldr	x2, [x25, #448]
    e030:	sub	x0, x2, #0x1
    e034:	tst	x2, x0
    e038:	b.ne	e204 <__sancov_default_options@@Base+0x1ab4>  // b.any
    e03c:	add	x20, x22, x0
    e040:	neg	x0, x2
    e044:	and	x20, x20, x0
    e048:	cmp	x19, x2
    e04c:	add	x20, x20, x2
    e050:	add	x0, x20, x19
    e054:	csel	x20, x0, x20, hi  // hi = pmore
    e058:	cmp	x22, x20
    e05c:	b.hi	e238 <__sancov_default_options@@Base+0x1ae8>  // b.pmore
    e060:	adrp	x1, 5b000 <_Unwind_Backtrace@GCC_3.3>
    e064:	mov	x0, x20
    e068:	ldr	x1, [x1, #1224]
    e06c:	bl	17c18 <__sanitizer_set_report_fd@@Base+0x4cf8>
    e070:	cbz	x0, e2c8 <__sancov_default_options@@Base+0x1b78>
    e074:	ldr	x1, [x25, #448]
    e078:	sub	x2, x1, #0x1
    e07c:	tst	x0, x2
    e080:	b.ne	e2d8 <__sancov_default_options@@Base+0x1b88>  // b.any
    e084:	add	x21, x0, x1
    e088:	ands	x3, x24, x21
    e08c:	b.eq	e0a0 <__sancov_default_options@@Base+0x1950>  // b.none
    e090:	add	x21, x19, x21
    e094:	sub	x21, x21, x3
    e098:	tst	x24, x21
    e09c:	b.ne	e2f8 <__sancov_default_options@@Base+0x1ba8>  // b.any
    e0a0:	tst	x21, x2
    e0a4:	b.ne	e318 <__sancov_default_options@@Base+0x1bc8>  // b.any
    e0a8:	add	x3, x21, x22
    e0ac:	cmp	x0, x3
    e0b0:	b.hi	e338 <__sancov_default_options@@Base+0x1be8>  // b.pmore
    e0b4:	add	x4, x0, x20
    e0b8:	cmp	x4, x3
    e0bc:	b.cc	e354 <__sancov_default_options@@Base+0x1c04>  // b.lo, b.ul, b.last
    e0c0:	sub	x24, x21, x1
    e0c4:	add	x26, x23, #0xc1, lsl #12
    e0c8:	mov	w1, #0x1                   	// #1
    e0cc:	stp	x0, x20, [x24]
    e0d0:	str	x22, [x24, #16]
    e0d4:	ldxrb	w0, [x26]
    e0d8:	stxrb	w2, w1, [x26]
    e0dc:	cbnz	w2, e0d4 <__sancov_default_options@@Base+0x1984>
    e0e0:	dmb	ish
    e0e4:	tst	w0, #0xff
    e0e8:	b.eq	e0f4 <__sancov_default_options@@Base+0x19a4>  // b.none
    e0ec:	mov	x0, x26
    e0f0:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    e0f4:	add	x25, x25, #0x1c0
    e0f8:	mov	x0, #0x7fff                	// #32767
    e0fc:	add	x1, x25, #0x40, lsl #12
    e100:	ldr	x3, [x1, #16]
    e104:	cmp	x3, x0
    e108:	b.hi	e36c <__sancov_default_options@@Base+0x1c1c>  // b.pmore
    e10c:	clz	x0, x20
    e110:	mov	w2, #0x3f                  	// #63
    e114:	sub	w2, w2, w0
    e118:	add	x5, x3, #0x1
    e11c:	ldp	x0, x4, [x1, #48]
    e120:	add	x23, x23, w2, sxtw #3
    e124:	ldr	x6, [x25, #8]
    e128:	str	x5, [x1, #16]
    e12c:	ldr	x5, [x1, #32]
    e130:	str	x3, [x24, #24]
    e134:	add	x0, x20, x0
    e138:	add	x23, x23, #0xc0, lsl #12
    e13c:	cmp	x4, x0
    e140:	str	x24, [x6, x3, lsl #3]
    e144:	csel	x4, x4, x0, cs  // cs = hs, nlast
    e148:	add	x5, x5, #0x1
    e14c:	strb	wzr, [x1, #24]
    e150:	str	x5, [x1, #32]
    e154:	stp	x0, x4, [x1, #48]
    e158:	ldr	x1, [x23, #3584]
    e15c:	ldr	x0, [x26, #24]
    e160:	add	x1, x1, #0x1
    e164:	str	x1, [x23, #3584]
    e168:	add	x0, x20, x0
    e16c:	str	x0, [x26, #24]
    e170:	ldr	x0, [x26, #32]
    e174:	add	x20, x20, x0
    e178:	str	x20, [x26, #32]
    e17c:	dmb	ish
    e180:	strb	wzr, [x26]
    e184:	mov	x0, x21
    e188:	ldp	x25, x26, [sp, #48]
    e18c:	b	dfec <__sancov_default_options@@Base+0x189c>
    e190:	sub	x24, x3, #0x1
    e194:	tst	x3, x24
    e198:	b.ne	e200 <__sancov_default_options@@Base+0x1ab0>  // b.any
    e19c:	sub	x3, x1, #0x1
    e1a0:	neg	x1, x19
    e1a4:	cmp	x19, #0x20, lsl #12
    e1a8:	and	x1, x3, x1
    e1ac:	mov	x0, #0x20000               	// #131072
    e1b0:	ccmp	x1, x0, #0x2, ls  // ls = plast
    e1b4:	b.hi	e1f8 <__sancov_default_options@@Base+0x1aa8>  // b.pmore
    e1b8:	mov	x22, x1
    e1bc:	cmp	x22, #0x100
    e1c0:	b.hi	df5c <__sancov_default_options@@Base+0x180c>  // b.pmore
    e1c4:	add	x20, x22, #0xf
    e1c8:	cmp	xzr, x20, lsr #4
    e1cc:	lsr	x20, x20, #4
    e1d0:	b.ne	df98 <__sancov_default_options@@Base+0x1848>  // b.any
    e1d4:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e1d8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e1dc:	add	x2, x2, #0x8f8
    e1e0:	add	x0, x0, #0x7f0
    e1e4:	mov	x4, #0x0                   	// #0
    e1e8:	mov	x3, #0x0                   	// #0
    e1ec:	mov	w1, #0x9f                  	// #159
    e1f0:	stp	x25, x26, [sp, #48]
    e1f4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e1f8:	stp	x25, x26, [sp, #48]
    e1fc:	b	e024 <__sancov_default_options@@Base+0x18d4>
    e200:	stp	x25, x26, [sp, #48]
    e204:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    e208:	add	x0, x0, #0x160
    e20c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
    e210:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    e214:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e218:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e21c:	mov	x3, x20
    e220:	add	x2, x2, #0x7d0
    e224:	add	x0, x0, #0x7f0
    e228:	mov	x4, #0x36                  	// #54
    e22c:	mov	w1, #0xa0                  	// #160
    e230:	stp	x25, x26, [sp, #48]
    e234:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e238:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    e23c:	mov	x3, x19
    e240:	mov	x2, x20
    e244:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e248:	ldr	x1, [x1, #4024]
    e24c:	add	x0, x0, #0x960
    e250:	ldr	x1, [x1]
    e254:	bl	1a328 <OnPrint@@Base+0x398>
    e258:	mov	x0, #0x0                   	// #0
    e25c:	ldp	x23, x24, [sp, #32]
    e260:	ldp	x25, x26, [sp, #48]
    e264:	b	e004 <__sancov_default_options@@Base+0x18b4>
    e268:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e26c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e270:	add	x2, x2, #0xaa8
    e274:	add	x0, x0, #0xae8
    e278:	mov	x4, #0x0                   	// #0
    e27c:	mov	w1, #0x42                  	// #66
    e280:	stp	x25, x26, [sp, #48]
    e284:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e288:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e28c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e290:	add	x2, x2, #0x558
    e294:	add	x0, x0, #0x910
    e298:	mov	x4, #0x0                   	// #0
    e29c:	mov	x3, #0x0                   	// #0
    e2a0:	mov	w1, #0x53                  	// #83
    e2a4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e2a8:	mov	x2, x23
    e2ac:	mov	x3, x20
    e2b0:	mov	x0, x21
    e2b4:	bl	dbf0 <__sancov_default_options@@Base+0x14a0>
    e2b8:	tst	w0, #0xff
    e2bc:	b.eq	e2cc <__sancov_default_options@@Base+0x1b7c>  // b.none
    e2c0:	ldr	x3, [x21, x22]
    e2c4:	b	dfa8 <__sancov_default_options@@Base+0x1858>
    e2c8:	ldp	x25, x26, [sp, #48]
    e2cc:	mov	x0, #0x0                   	// #0
    e2d0:	ldp	x23, x24, [sp, #32]
    e2d4:	b	e004 <__sancov_default_options@@Base+0x18b4>
    e2d8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e2dc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e2e0:	add	x2, x2, #0x9c8
    e2e4:	add	x0, x0, #0x910
    e2e8:	mov	x4, #0x0                   	// #0
    e2ec:	mov	x3, #0x0                   	// #0
    e2f0:	mov	w1, #0x62                  	// #98
    e2f4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e2f8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e2fc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e300:	add	x2, x2, #0x9f8
    e304:	add	x0, x0, #0x910
    e308:	mov	x4, #0x0                   	// #0
    e30c:	mov	x3, #0x0                   	// #0
    e310:	mov	w1, #0x68                  	// #104
    e314:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e318:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e31c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e320:	add	x2, x2, #0xa20
    e324:	add	x0, x0, #0x910
    e328:	mov	x4, #0x0                   	// #0
    e32c:	mov	x3, #0x0                   	// #0
    e330:	mov	w1, #0x69                  	// #105
    e334:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e338:	mov	x4, x0
    e33c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e340:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e344:	add	x2, x2, #0xa48
    e348:	add	x0, x0, #0x910
    e34c:	mov	w1, #0x6a                  	// #106
    e350:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e354:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e358:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e35c:	add	x2, x2, #0xa68
    e360:	add	x0, x0, #0x910
    e364:	mov	w1, #0x6b                  	// #107
    e368:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e36c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e370:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e374:	add	x2, x2, #0xa88
    e378:	add	x0, x0, #0x910
    e37c:	mov	x4, #0x8000                	// #32768
    e380:	mov	w1, #0x15                  	// #21
    e384:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e388:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    e38c:	mov	x2, x22
    e390:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e394:	add	x0, x0, #0x898
    e398:	ldr	x1, [x1, #4024]
    e39c:	ldr	x1, [x1]
    e3a0:	bl	1a328 <OnPrint@@Base+0x398>
    e3a4:	mov	x0, #0x0                   	// #0
    e3a8:	b	e004 <__sancov_default_options@@Base+0x18b4>
    e3ac:	nop
    e3b0:	stp	x19, x20, [sp, #-80]!
    e3b4:	stp	x21, x22, [sp, #16]
    e3b8:	mov	x21, x1
    e3bc:	add	x1, x0, x3, lsl #10
    e3c0:	stp	x23, x24, [sp, #32]
    e3c4:	mov	x23, x3
    e3c8:	mov	x24, x2
    e3cc:	ldp	x5, x19, [x21]
    e3d0:	ldr	x20, [x1, #24]
    e3d4:	str	x30, [sp, #56]
    e3d8:	lsr	x19, x19, #1
    e3dc:	cmp	x19, x5
    e3e0:	csel	x19, x19, x5, ls  // ls = plast
    e3e4:	sub	x5, x5, x19
    e3e8:	cbnz	x20, e44c <__sancov_default_options@@Base+0x1cfc>
    e3ec:	add	x0, x5, #0x4
    e3f0:	ldr	x2, [x21, x0, lsl #3]
    e3f4:	cbz	x2, e4b8 <__sancov_default_options@@Base+0x1d68>
    e3f8:	add	x5, x5, #0x4
    e3fc:	str	x19, [x2, #8]
    e400:	add	x6, x2, #0x10
    e404:	mov	x0, #0x0                   	// #0
    e408:	add	x5, x21, x5, lsl #3
    e40c:	cbz	x19, e424 <__sancov_default_options@@Base+0x1cd4>
    e410:	ldr	x4, [x5, x0, lsl #3]
    e414:	str	x4, [x6, x0, lsl #3]
    e418:	add	x0, x0, #0x1
    e41c:	cmp	x19, x0
    e420:	b.ne	e410 <__sancov_default_options@@Base+0x1cc0>  // b.any
    e424:	ldr	x4, [x21]
    e428:	mov	x1, x23
    e42c:	mov	x0, x24
    e430:	sub	x19, x4, x19
    e434:	ldp	x23, x24, [sp, #32]
    e438:	ldr	x30, [sp, #56]
    e43c:	str	x19, [x21]
    e440:	ldp	x21, x22, [sp, #16]
    e444:	ldp	x19, x20, [sp], #80
    e448:	b	d498 <__sancov_default_options@@Base+0xd48>
    e44c:	str	x25, [sp, #48]
    e450:	cmp	x20, #0x35
    e454:	b.hi	e4d8 <__sancov_default_options@@Base+0x1d88>  // b.pmore
    e458:	lsl	x25, x20, #10
    e45c:	mov	x22, x0
    e460:	add	x1, x0, x25
    e464:	ldr	x3, [x0, x25]
    e468:	cbz	x3, e4f8 <__sancov_default_options@@Base+0x1da8>
    e46c:	lsl	x20, x20, #7
    e470:	add	x2, x22, x25
    e474:	add	x0, x20, x3
    e478:	mov	x1, #0xd800                	// #55296
    e47c:	add	x0, x0, #0x2
    e480:	sub	x3, x3, #0x1
    e484:	add	x1, x22, x1
    e488:	str	x3, [x22, x25]
    e48c:	add	x20, x20, x3
    e490:	ldr	x3, [x22, x0, lsl #3]
    e494:	add	x20, x20, #0x4
    e498:	ldr	x2, [x2, #16]
    e49c:	ldr	x0, [x1, #16]
    e4a0:	prfm	pldl1keep, [x3]
    e4a4:	add	x0, x0, x2
    e4a8:	ldr	x2, [x22, x20, lsl #3]
    e4ac:	ldr	x25, [sp, #48]
    e4b0:	str	x0, [x1, #16]
    e4b4:	b	e3f4 <__sancov_default_options@@Base+0x1ca4>
    e4b8:	str	x25, [sp, #48]
    e4bc:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    e4c0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e4c4:	add	x0, x0, #0xb38
    e4c8:	ldr	x1, [x1, #4024]
    e4cc:	ldr	x1, [x1]
    e4d0:	bl	1a328 <OnPrint@@Base+0x398>
    e4d4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    e4d8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e4dc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e4e0:	mov	x3, x20
    e4e4:	add	x2, x2, #0x7d0
    e4e8:	add	x0, x0, #0x7f0
    e4ec:	mov	x4, #0x36                  	// #54
    e4f0:	mov	w1, #0xa0                  	// #160
    e4f4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e4f8:	mov	x3, x20
    e4fc:	str	x5, [sp, #72]
    e500:	bl	dbf0 <__sancov_default_options@@Base+0x14a0>
    e504:	tst	w0, #0xff
    e508:	ldr	x5, [sp, #72]
    e50c:	b.eq	e4bc <__sancov_default_options@@Base+0x1d6c>  // b.none
    e510:	ldr	x3, [x22, x25]
    e514:	b	e46c <__sancov_default_options@@Base+0x1d1c>
    e518:	stp	x19, x20, [sp, #-64]!
    e51c:	stp	x23, x24, [sp, #32]
    e520:	mov	x23, x3
    e524:	mov	x24, x4
    e528:	str	x30, [sp, #56]
    e52c:	cbz	x2, e7d8 <__sancov_default_options@@Base+0x2088>
    e530:	stp	x21, x22, [sp, #16]
    e534:	mov	x19, x2
    e538:	mov	x20, x0
    e53c:	mov	x22, x1
    e540:	cbz	x3, e7f0 <__sancov_default_options@@Base+0x20a0>
    e544:	str	x25, [sp, #48]
    e548:	mov	x0, #0xffffffffffff        	// #281474976710655
    e54c:	cmp	x2, x0
    e550:	b.ls	e768 <__sancov_default_options@@Base+0x2018>  // b.plast
    e554:	add	x25, x20, #0xc1, lsl #12
    e558:	mov	w2, #0x1                   	// #1
    e55c:	ldxrb	w1, [x25]
    e560:	stxrb	w0, w2, [x25]
    e564:	cbnz	w0, e55c <__sancov_default_options@@Base+0x1e0c>
    e568:	dmb	ish
    e56c:	tst	w1, #0xff
    e570:	b.eq	e57c <__sancov_default_options@@Base+0x1e2c>  // b.none
    e574:	mov	x0, x25
    e578:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    e57c:	add	x21, x20, #0x80, lsl #12
    e580:	add	x21, x21, #0xc00
    e584:	add	x1, x21, #0x1c0
    e588:	add	x2, x1, #0x40, lsl #12
    e58c:	ldr	x7, [x2, #16]
    e590:	cbz	x7, e7b0 <__sancov_default_options@@Base+0x2060>
    e594:	ldr	x6, [x1, #8]
    e598:	mov	x3, #0x0                   	// #0
    e59c:	add	x8, x6, x7, lsl #3
    e5a0:	ldr	x7, [x6]
    e5a4:	cmp	x7, x19
    e5a8:	b.hi	e5bc <__sancov_default_options@@Base+0x1e6c>  // b.pmore
    e5ac:	sub	x1, x19, x3
    e5b0:	sub	x2, x19, x7
    e5b4:	cmp	x2, x1
    e5b8:	csel	x3, x3, x7, cs  // cs = hs, nlast
    e5bc:	add	x6, x6, #0x8
    e5c0:	cmp	x8, x6
    e5c4:	b.ne	e5a0 <__sancov_default_options@@Base+0x1e50>  // b.any
    e5c8:	cbz	x3, e7b0 <__sancov_default_options@@Base+0x2060>
    e5cc:	ldr	x4, [x3]
    e5d0:	cmp	x4, x3
    e5d4:	b.hi	ea9c <__sancov_default_options@@Base+0x234c>  // b.pmore
    e5d8:	ldr	x0, [x3, #8]
    e5dc:	add	x4, x4, x0
    e5e0:	cmp	x4, x3
    e5e4:	b.ls	eab4 <__sancov_default_options@@Base+0x2364>  // b.plast
    e5e8:	cmp	x19, x3
    e5ec:	b.cc	eacc <__sancov_default_options@@Base+0x237c>  // b.lo, b.ul, b.last
    e5f0:	cmp	x4, x19
    e5f4:	b.ls	e7b0 <__sancov_default_options@@Base+0x2060>  // b.plast
    e5f8:	ldr	x0, [x21, #448]
    e5fc:	sub	x1, x0, #0x1
    e600:	tst	x1, x3
    e604:	b.ne	ea10 <__sancov_default_options@@Base+0x22c0>  // b.any
    e608:	dmb	ish
    e60c:	strb	wzr, [x25]
    e610:	cmn	x3, x0
    e614:	b.eq	e7b8 <__sancov_default_options@@Base+0x2068>  // b.none
    e618:	mov	x0, #0xffffffffffff        	// #281474976710655
    e61c:	cmp	x19, x0
    e620:	b.ls	e958 <__sancov_default_options@@Base+0x2208>  // b.plast
    e624:	ldr	x1, [x21, #448]
    e628:	sub	x0, x1, #0x1
    e62c:	tst	x19, x0
    e630:	b.ne	e9f0 <__sancov_default_options@@Base+0x22a0>  // b.any
    e634:	sub	x2, x19, x1
    e638:	tst	x1, x0
    e63c:	ldr	x5, [x2, #16]
    e640:	b.ne	eae8 <__sancov_default_options@@Base+0x2398>  // b.any
    e644:	add	x5, x5, x0
    e648:	neg	x0, x1
    e64c:	and	x0, x5, x0
    e650:	cmp	x0, x23
    e654:	csel	x21, x0, x23, ls  // ls = plast
    e658:	mov	x2, x23
    e65c:	mov	x3, x24
    e660:	mov	x1, x22
    e664:	mov	x0, x20
    e668:	bl	df18 <__sancov_default_options@@Base+0x17c8>
    e66c:	mov	x23, x0
    e670:	cbz	x0, e680 <__sancov_default_options@@Base+0x1f30>
    e674:	mov	x2, x21
    e678:	mov	x1, x19
    e67c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    e680:	mov	x0, #0xffffffffffff        	// #281474976710655
    e684:	cmp	x19, x0
    e688:	b.ls	e964 <__sancov_default_options@@Base+0x2214>  // b.plast
    e68c:	add	x21, x20, #0x80, lsl #12
    e690:	add	x21, x21, #0xc00
    e694:	ldr	x4, [x21, #448]
    e698:	sub	x0, x4, #0x1
    e69c:	tst	x19, x0
    e6a0:	b.ne	e9f0 <__sancov_default_options@@Base+0x22a0>  // b.any
    e6a4:	sub	x19, x19, x4
    e6a8:	add	x25, x20, #0xc1, lsl #12
    e6ac:	mov	w1, #0x1                   	// #1
    e6b0:	ldxrb	w0, [x25]
    e6b4:	stxrb	w2, w1, [x25]
    e6b8:	cbnz	w2, e6b0 <__sancov_default_options@@Base+0x1f60>
    e6bc:	dmb	ish
    e6c0:	tst	w0, #0xff
    e6c4:	b.eq	e6d0 <__sancov_default_options@@Base+0x1f80>  // b.none
    e6c8:	mov	x0, x25
    e6cc:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    e6d0:	ldr	x0, [x19, #24]
    e6d4:	add	x21, x21, #0x1c0
    e6d8:	ldr	x2, [x21, #8]
    e6dc:	ldr	x3, [x2, x0, lsl #3]
    e6e0:	cmp	x3, x19
    e6e4:	b.ne	eaf8 <__sancov_default_options@@Base+0x23a8>  // b.any
    e6e8:	add	x21, x21, #0x40, lsl #12
    e6ec:	ldr	x4, [x21, #16]
    e6f0:	cmp	x0, x4
    e6f4:	b.cs	eb14 <__sancov_default_options@@Base+0x23c4>  // b.hs, b.nlast
    e6f8:	sub	x4, x4, #0x1
    e6fc:	ldr	x3, [x19, #8]
    e700:	ldr	x5, [x2, x4, lsl #3]
    e704:	str	x4, [x21, #16]
    e708:	str	x5, [x2, x0, lsl #3]
    e70c:	ldp	x4, x2, [x21, #40]
    e710:	str	x0, [x5, #24]
    e714:	ldr	x0, [x25, #24]
    e718:	strb	wzr, [x21, #24]
    e71c:	sub	x0, x0, x3
    e720:	sub	x2, x2, x3
    e724:	add	x4, x4, #0x1
    e728:	stp	x4, x2, [x21, #40]
    e72c:	str	x0, [x25, #24]
    e730:	ldr	x0, [x25, #32]
    e734:	sub	x0, x0, x3
    e738:	str	x0, [x25, #32]
    e73c:	dmb	ish
    e740:	strb	wzr, [x25]
    e744:	ldp	x0, x1, [x19]
    e748:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    e74c:	ldr	x25, [sp, #48]
    e750:	mov	x0, x23
    e754:	ldp	x21, x22, [sp, #16]
    e758:	ldp	x23, x24, [sp, #32]
    e75c:	ldr	x30, [sp, #56]
    e760:	ldp	x19, x20, [sp], #64
    e764:	ret
    e768:	lsr	x0, x2, #32
    e76c:	ldr	x1, [x20, x0, lsl #3]
    e770:	dmb	ish
    e774:	cbz	x1, e554 <__sancov_default_options@@Base+0x1e04>
    e778:	lsr	w2, w2, #20
    e77c:	lsr	x3, x19, #20
    e780:	ldrb	w1, [x1, x2]
    e784:	cbz	w1, e554 <__sancov_default_options@@Base+0x1e04>
    e788:	lsl	x1, x0, #3
    e78c:	ldr	x0, [x20, x0, lsl #3]
    e790:	dmb	ish
    e794:	cbz	x0, e7a4 <__sancov_default_options@@Base+0x2054>
    e798:	and	x3, x3, #0xfff
    e79c:	ldrb	w0, [x0, x3]
    e7a0:	cbnz	w0, ea30 <__sancov_default_options@@Base+0x22e0>
    e7a4:	add	x21, x20, #0x80, lsl #12
    e7a8:	add	x21, x21, #0xc00
    e7ac:	b	e624 <__sancov_default_options@@Base+0x1ed4>
    e7b0:	dmb	ish
    e7b4:	strb	wzr, [x25]
    e7b8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e7bc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e7c0:	add	x2, x2, #0xc98
    e7c4:	add	x0, x0, #0xae8
    e7c8:	mov	x4, #0x0                   	// #0
    e7cc:	mov	x3, #0x0                   	// #0
    e7d0:	mov	w1, #0x62                  	// #98
    e7d4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e7d8:	mov	x2, x23
    e7dc:	mov	x3, x4
    e7e0:	ldp	x23, x24, [sp, #32]
    e7e4:	ldr	x30, [sp, #56]
    e7e8:	ldp	x19, x20, [sp], #64
    e7ec:	b	df18 <__sancov_default_options@@Base+0x17c8>
    e7f0:	mov	x0, #0xffffffffffff        	// #281474976710655
    e7f4:	cmp	x2, x0
    e7f8:	b.hi	e888 <__sancov_default_options@@Base+0x2138>  // b.pmore
    e7fc:	lsr	x1, x2, #32
    e800:	ldr	x0, [x20, x1, lsl #3]
    e804:	dmb	ish
    e808:	cbz	x0, e888 <__sancov_default_options@@Base+0x2138>
    e80c:	lsr	w2, w2, #20
    e810:	ldrb	w0, [x0, x2]
    e814:	cbz	w0, e888 <__sancov_default_options@@Base+0x2138>
    e818:	ldr	x0, [x20, x1, lsl #3]
    e81c:	dmb	ish
    e820:	cbz	x0, eb40 <__sancov_default_options@@Base+0x23f0>
    e824:	ldrb	w21, [x0, x2]
    e828:	cbz	x21, eb40 <__sancov_default_options@@Base+0x23f0>
    e82c:	cmp	x21, #0x35
    e830:	b.hi	eb84 <__sancov_default_options@@Base+0x2434>  // b.pmore
    e834:	lsl	x23, x21, #10
    e838:	add	x1, x22, x23
    e83c:	ldr	x2, [x1, #8]
    e840:	cbz	x2, ecb4 <__sancov_default_options@@Base+0x2564>
    e844:	ldr	x0, [x22, x23]
    e848:	cmp	x0, x2
    e84c:	b.eq	ec9c <__sancov_default_options@@Base+0x254c>  // b.none
    e850:	add	x1, x0, x21, lsl #7
    e854:	add	x3, x22, x23
    e858:	add	x1, x1, #0x4
    e85c:	add	x0, x0, #0x1
    e860:	mov	x4, #0xd800                	// #55296
    e864:	add	x2, x22, x4
    e868:	str	x0, [x22, x23]
    e86c:	mov	x23, #0x0                   	// #0
    e870:	str	x19, [x22, x1, lsl #3]
    e874:	ldr	x0, [x2, #16]
    e878:	ldr	x1, [x3, #16]
    e87c:	sub	x0, x0, x1
    e880:	str	x0, [x2, #16]
    e884:	b	e750 <__sancov_default_options@@Base+0x2000>
    e888:	add	x21, x20, #0x80, lsl #12
    e88c:	add	x21, x21, #0xc00
    e890:	ldr	x4, [x21, #448]
    e894:	str	x25, [sp, #48]
    e898:	sub	x0, x4, #0x1
    e89c:	tst	x19, x0
    e8a0:	b.ne	e9f0 <__sancov_default_options@@Base+0x22a0>  // b.any
    e8a4:	sub	x19, x19, x4
    e8a8:	add	x25, x20, #0xc1, lsl #12
    e8ac:	mov	w1, #0x1                   	// #1
    e8b0:	ldxrb	w0, [x25]
    e8b4:	stxrb	w2, w1, [x25]
    e8b8:	cbnz	w2, e8b0 <__sancov_default_options@@Base+0x2160>
    e8bc:	dmb	ish
    e8c0:	tst	w0, #0xff
    e8c4:	b.eq	e8d0 <__sancov_default_options@@Base+0x2180>  // b.none
    e8c8:	mov	x0, x25
    e8cc:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
    e8d0:	ldr	x0, [x19, #24]
    e8d4:	add	x21, x21, #0x1c0
    e8d8:	ldr	x2, [x21, #8]
    e8dc:	ldr	x3, [x2, x0, lsl #3]
    e8e0:	cmp	x3, x19
    e8e4:	b.ne	eaf8 <__sancov_default_options@@Base+0x23a8>  // b.any
    e8e8:	add	x21, x21, #0x40, lsl #12
    e8ec:	ldr	x4, [x21, #16]
    e8f0:	cmp	x0, x4
    e8f4:	b.cs	eb14 <__sancov_default_options@@Base+0x23c4>  // b.hs, b.nlast
    e8f8:	sub	x4, x4, #0x1
    e8fc:	ldr	x3, [x19, #8]
    e900:	ldr	x5, [x2, x4, lsl #3]
    e904:	str	x4, [x21, #16]
    e908:	str	x5, [x2, x0, lsl #3]
    e90c:	ldp	x4, x2, [x21, #40]
    e910:	str	x0, [x5, #24]
    e914:	ldr	x0, [x25, #24]
    e918:	strb	wzr, [x21, #24]
    e91c:	sub	x0, x0, x3
    e920:	sub	x2, x2, x3
    e924:	add	x4, x4, #0x1
    e928:	stp	x4, x2, [x21, #40]
    e92c:	str	x0, [x25, #24]
    e930:	ldr	x0, [x25, #32]
    e934:	sub	x0, x0, x3
    e938:	str	x0, [x25, #32]
    e93c:	dmb	ish
    e940:	strb	wzr, [x25]
    e944:	ldp	x0, x1, [x19]
    e948:	mov	x23, #0x0                   	// #0
    e94c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    e950:	ldr	x25, [sp, #48]
    e954:	b	e750 <__sancov_default_options@@Base+0x2000>
    e958:	lsr	x3, x19, #20
    e95c:	lsr	x0, x19, #32
    e960:	b	e788 <__sancov_default_options@@Base+0x2038>
    e964:	lsr	x1, x19, #32
    e968:	ldr	x0, [x20, x1, lsl #3]
    e96c:	dmb	ish
    e970:	cbz	x0, e68c <__sancov_default_options@@Base+0x1f3c>
    e974:	lsr	w2, w19, #20
    e978:	ldrb	w0, [x0, x2]
    e97c:	cbz	w0, e68c <__sancov_default_options@@Base+0x1f3c>
    e980:	ldr	x0, [x20, x1, lsl #3]
    e984:	dmb	ish
    e988:	cbz	x0, eb44 <__sancov_default_options@@Base+0x23f4>
    e98c:	ldrb	w21, [x0, x2]
    e990:	cbz	x21, eb44 <__sancov_default_options@@Base+0x23f4>
    e994:	cmp	x21, #0x35
    e998:	b.hi	eb88 <__sancov_default_options@@Base+0x2438>  // b.pmore
    e99c:	lsl	x24, x21, #10
    e9a0:	add	x1, x22, x24
    e9a4:	ldr	x2, [x1, #8]
    e9a8:	cbz	x2, ebc0 <__sancov_default_options@@Base+0x2470>
    e9ac:	ldr	x0, [x22, x24]
    e9b0:	cmp	x2, x0
    e9b4:	b.eq	eba8 <__sancov_default_options@@Base+0x2458>  // b.none
    e9b8:	add	x1, x0, x21, lsl #7
    e9bc:	add	x3, x22, x24
    e9c0:	add	x1, x1, #0x4
    e9c4:	add	x0, x0, #0x1
    e9c8:	mov	x2, #0xd800                	// #55296
    e9cc:	add	x2, x22, x2
    e9d0:	str	x0, [x22, x24]
    e9d4:	str	x19, [x22, x1, lsl #3]
    e9d8:	ldr	x0, [x2, #16]
    e9dc:	ldr	x1, [x3, #16]
    e9e0:	ldr	x25, [sp, #48]
    e9e4:	sub	x0, x0, x1
    e9e8:	str	x0, [x2, #16]
    e9ec:	b	e750 <__sancov_default_options@@Base+0x2000>
    e9f0:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e9f4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    e9f8:	add	x2, x2, #0xb88
    e9fc:	add	x0, x0, #0x910
    ea00:	mov	x4, #0x0                   	// #0
    ea04:	mov	x3, #0x0                   	// #0
    ea08:	mov	w1, #0x123                 	// #291
    ea0c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ea10:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ea14:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ea18:	add	x2, x2, #0xc68
    ea1c:	add	x0, x0, #0x910
    ea20:	mov	x4, #0x0                   	// #0
    ea24:	mov	x3, #0x0                   	// #0
    ea28:	mov	w1, #0x12b                 	// #299
    ea2c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ea30:	ldr	x0, [x20, x1]
    ea34:	dmb	ish
    ea38:	cbz	x0, eb64 <__sancov_default_options@@Base+0x2414>
    ea3c:	ldrb	w0, [x0, x3]
    ea40:	cbz	w0, eb64 <__sancov_default_options@@Base+0x2414>
    ea44:	ldr	x21, [x20, x1]
    ea48:	dmb	ish
    ea4c:	cbz	x21, e658 <__sancov_default_options@@Base+0x1f08>
    ea50:	ldrb	w0, [x21, x3]
    ea54:	cmp	w0, #0x35
    ea58:	and	x1, x0, #0xff
    ea5c:	b.eq	eb30 <__sancov_default_options@@Base+0x23e0>  // b.none
    ea60:	ubfiz	x0, x0, #4, #8
    ea64:	cmp	x0, x23
    ea68:	csel	x21, x0, x23, ls  // ls = plast
    ea6c:	cmp	x1, #0x10
    ea70:	b.ls	e658 <__sancov_default_options@@Base+0x1f08>  // b.plast
    ea74:	sub	x1, x1, #0x10
    ea78:	mov	x0, #0x100                 	// #256
    ea7c:	and	x21, x1, #0x3
    ea80:	lsr	x1, x1, #2
    ea84:	lsl	x1, x0, x1
    ea88:	lsr	x0, x1, #2
    ea8c:	madd	x0, x0, x21, x1
    ea90:	cmp	x0, x23
    ea94:	csel	x21, x0, x23, ls  // ls = plast
    ea98:	b	e658 <__sancov_default_options@@Base+0x1f08>
    ea9c:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eaa0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eaa4:	add	x2, x2, #0xbe8
    eaa8:	add	x0, x0, #0x910
    eaac:	mov	w1, #0xc1                  	// #193
    eab0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eab4:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eab8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eabc:	add	x2, x2, #0xc10
    eac0:	add	x0, x0, #0x910
    eac4:	mov	w1, #0xc2                  	// #194
    eac8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eacc:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ead0:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ead4:	mov	x4, x19
    ead8:	add	x2, x2, #0xc48
    eadc:	add	x0, x0, #0x910
    eae0:	mov	w1, #0xc3                  	// #195
    eae4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eae8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    eaec:	add	x0, x0, #0x160
    eaf0:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
    eaf4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    eaf8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eafc:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eb00:	mov	x4, x19
    eb04:	add	x2, x2, #0xbb0
    eb08:	add	x0, x0, #0x910
    eb0c:	mov	w1, #0x88                  	// #136
    eb10:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eb14:	mov	x3, x0
    eb18:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eb1c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eb20:	add	x2, x2, #0xbd0
    eb24:	add	x0, x0, #0x910
    eb28:	mov	w1, #0x89                  	// #137
    eb2c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eb30:	cmp	x23, #0x200
    eb34:	mov	x0, #0x200                 	// #512
    eb38:	csel	x21, x23, x0, ls  // ls = plast
    eb3c:	b	e658 <__sancov_default_options@@Base+0x1f08>
    eb40:	str	x25, [sp, #48]
    eb44:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eb48:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eb4c:	add	x2, x2, #0x8f8
    eb50:	add	x0, x0, #0x7f0
    eb54:	mov	x4, #0x0                   	// #0
    eb58:	mov	x3, #0x0                   	// #0
    eb5c:	mov	w1, #0xae                  	// #174
    eb60:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eb64:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eb68:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eb6c:	add	x2, x2, #0xc98
    eb70:	add	x0, x0, #0x6b0
    eb74:	mov	x4, #0x0                   	// #0
    eb78:	mov	x3, #0x0                   	// #0
    eb7c:	mov	w1, #0xcc                  	// #204
    eb80:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eb84:	str	x25, [sp, #48]
    eb88:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eb8c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eb90:	mov	x3, x21
    eb94:	add	x2, x2, #0x7d0
    eb98:	add	x0, x0, #0x7f0
    eb9c:	mov	x4, #0x36                  	// #54
    eba0:	mov	w1, #0xaf                  	// #175
    eba4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eba8:	mov	x0, x22
    ebac:	mov	x2, x20
    ebb0:	mov	x3, x21
    ebb4:	bl	e3b0 <__sancov_default_options@@Base+0x1c60>
    ebb8:	ldr	x0, [x22, x24]
    ebbc:	b	e9b8 <__sancov_default_options@@Base+0x2268>
    ebc0:	mov	x2, #0x1                   	// #1
    ebc4:	mov	x11, x2
    ebc8:	mov	x12, #0x7c                  	// #124
    ebcc:	mov	x10, #0x14                  	// #20
    ebd0:	mov	x9, #0x100                 	// #256
    ebd4:	mov	w8, #0x4000                	// #16384
    ebd8:	mov	x7, #0x3e                  	// #62
    ebdc:	nop
    ebe0:	add	x5, x22, x2, lsl #10
    ebe4:	lsl	x6, x2, #4
    ebe8:	mov	x4, x5
    ebec:	mov	x0, #0x14                  	// #20
    ebf0:	mov	x3, x2
    ebf4:	add	x2, x2, #0x1
    ebf8:	stp	x12, x6, [x5, #8]
    ebfc:	cmp	x2, #0x36
    ec00:	str	x0, [x4, #24]
    ec04:	b.eq	ec74 <__sancov_default_options@@Base+0x2524>  // b.none
    ec08:	cmp	x2, #0x35
    ec0c:	b.eq	ec7c <__sancov_default_options@@Base+0x252c>  // b.none
    ec10:	cmp	x2, #0x10
    ec14:	b.ls	ebe0 <__sancov_default_options@@Base+0x2490>  // b.plast
    ec18:	sub	x0, x3, #0xf
    ec1c:	add	x4, x4, #0x400
    ec20:	and	x6, x0, #0x3
    ec24:	mov	x3, x2
    ec28:	lsr	x0, x0, #2
    ec2c:	add	x2, x2, #0x1
    ec30:	lsl	x0, x9, x0
    ec34:	lsr	x5, x0, #2
    ec38:	madd	x5, x5, x6, x0
    ec3c:	str	x5, [x4, #16]
    ec40:	udiv	w0, w8, w5
    ec44:	cmp	x0, #0x0
    ec48:	csel	x0, x0, x11, ne  // ne = any
    ec4c:	cmp	x0, #0x3e
    ec50:	csel	x0, x0, x7, ls  // ls = plast
    ec54:	add	x6, x0, #0x2
    ec58:	lsl	x0, x0, #1
    ec5c:	str	x0, [x4, #8]
    ec60:	cmp	x5, x6, lsl #3
    ec64:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    ec68:	str	x0, [x4, #24]
    ec6c:	cmp	x2, #0x36
    ec70:	b.ne	ec08 <__sancov_default_options@@Base+0x24b8>  // b.any
    ec74:	ldr	x2, [x1, #8]
    ec78:	b	e9ac <__sancov_default_options@@Base+0x225c>
    ec7c:	add	x0, x22, #0x8, lsl #12
    ec80:	mov	x2, #0x200                 	// #512
    ec84:	mov	x3, #0x40                  	// #64
    ec88:	str	x3, [x0, #21512]
    ec8c:	str	x2, [x0, #21520]
    ec90:	str	xzr, [x0, #21528]
    ec94:	ldr	x2, [x1, #8]
    ec98:	b	e9ac <__sancov_default_options@@Base+0x225c>
    ec9c:	mov	x0, x22
    eca0:	mov	x2, x20
    eca4:	mov	x3, x21
    eca8:	bl	e3b0 <__sancov_default_options@@Base+0x1c60>
    ecac:	ldr	x0, [x22, x23]
    ecb0:	b	e850 <__sancov_default_options@@Base+0x2100>
    ecb4:	mov	x2, #0x1                   	// #1
    ecb8:	mov	x11, x2
    ecbc:	mov	x12, #0x7c                  	// #124
    ecc0:	mov	x10, #0x14                  	// #20
    ecc4:	mov	x9, #0x100                 	// #256
    ecc8:	mov	w8, #0x4000                	// #16384
    eccc:	mov	x7, #0x3e                  	// #62
    ecd0:	add	x5, x22, x2, lsl #10
    ecd4:	lsl	x6, x2, #4
    ecd8:	mov	x4, x5
    ecdc:	mov	x0, #0x14                  	// #20
    ece0:	mov	x3, x2
    ece4:	add	x2, x2, #0x1
    ece8:	stp	x12, x6, [x5, #8]
    ecec:	cmp	x2, #0x36
    ecf0:	str	x0, [x4, #24]
    ecf4:	b.eq	ed64 <__sancov_default_options@@Base+0x2614>  // b.none
    ecf8:	cmp	x2, #0x35
    ecfc:	b.eq	ed6c <__sancov_default_options@@Base+0x261c>  // b.none
    ed00:	cmp	x2, #0x10
    ed04:	b.ls	ecd0 <__sancov_default_options@@Base+0x2580>  // b.plast
    ed08:	sub	x0, x3, #0xf
    ed0c:	add	x4, x4, #0x400
    ed10:	and	x6, x0, #0x3
    ed14:	mov	x3, x2
    ed18:	lsr	x0, x0, #2
    ed1c:	add	x2, x2, #0x1
    ed20:	lsl	x0, x9, x0
    ed24:	lsr	x5, x0, #2
    ed28:	madd	x5, x5, x6, x0
    ed2c:	str	x5, [x4, #16]
    ed30:	udiv	w0, w8, w5
    ed34:	cmp	x0, #0x0
    ed38:	csel	x0, x0, x11, ne  // ne = any
    ed3c:	cmp	x0, #0x3e
    ed40:	csel	x0, x0, x7, ls  // ls = plast
    ed44:	add	x6, x0, #0x2
    ed48:	lsl	x0, x0, #1
    ed4c:	str	x0, [x4, #8]
    ed50:	cmp	x5, x6, lsl #3
    ed54:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    ed58:	str	x0, [x4, #24]
    ed5c:	cmp	x2, #0x36
    ed60:	b.ne	ecf8 <__sancov_default_options@@Base+0x25a8>  // b.any
    ed64:	ldr	x2, [x1, #8]
    ed68:	b	e844 <__sancov_default_options@@Base+0x20f4>
    ed6c:	add	x0, x22, #0x8, lsl #12
    ed70:	mov	x2, #0x200                 	// #512
    ed74:	mov	x3, #0x40                  	// #64
    ed78:	str	x3, [x0, #21512]
    ed7c:	str	x2, [x0, #21520]
    ed80:	str	xzr, [x0, #21528]
    ed84:	ldr	x2, [x1, #8]
    ed88:	b	e844 <__sancov_default_options@@Base+0x20f4>
    ed8c:	nop
    ed90:	str	x30, [sp, #-16]!
    ed94:	bl	6790 <__errno_location@plt>
    ed98:	mov	w1, #0xc                   	// #12
    ed9c:	ldr	x30, [sp], #16
    eda0:	str	w1, [x0]
    eda4:	ret
    eda8:	stp	x19, x20, [sp, #-64]!
    edac:	mov	x20, x0
    edb0:	add	x19, sp, #0x20
    edb4:	stp	x21, x30, [sp, #16]
    edb8:	mov	x0, x19
    edbc:	mov	x21, x1
    edc0:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    edc4:	add	x1, x1, #0xcb8
    edc8:	bl	f010 <__sancov_default_options@@Base+0x28c0>
    edcc:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    edd0:	mov	x3, x21
    edd4:	mov	x2, x20
    edd8:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eddc:	ldr	x1, [x4, #4024]
    ede0:	add	x0, x0, #0xcc8
    ede4:	ldr	x1, [x1]
    ede8:	bl	1a328 <OnPrint@@Base+0x398>
    edec:	mov	x0, x19
    edf0:	bl	f060 <__sancov_default_options@@Base+0x2910>
    edf4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    edf8:	stp	x19, x20, [sp, #-80]!
    edfc:	adrp	x19, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    ee00:	mov	x2, x1
    ee04:	stp	x21, x22, [sp, #16]
    ee08:	add	x21, sp, #0x30
    ee0c:	mov	x20, x0
    ee10:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ee14:	mov	x0, x21
    ee18:	add	x1, x1, #0xd30
    ee1c:	str	x30, [sp, #32]
    ee20:	bl	f010 <__sancov_default_options@@Base+0x28c0>
    ee24:	ldr	x19, [x19, #4016]
    ee28:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    ee2c:	ldr	x0, [x0, #4024]
    ee30:	ldr	x3, [x19]
    ee34:	ldr	x22, [x0]
    ee38:	cbz	x3, ee5c <__sancov_default_options@@Base+0x270c>
    ee3c:	mov	x2, x20
    ee40:	mov	x1, x22
    ee44:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ee48:	add	x0, x0, #0xd48
    ee4c:	bl	1a328 <OnPrint@@Base+0x398>
    ee50:	mov	x0, x21
    ee54:	bl	f060 <__sancov_default_options@@Base+0x2910>
    ee58:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    ee5c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    ee60:	mov	x3, x0
    ee64:	str	x0, [x19]
    ee68:	b	ee3c <__sancov_default_options@@Base+0x26ec>
    ee6c:	nop
    ee70:	stp	x19, x20, [sp, #-64]!
    ee74:	mov	x2, x1
    ee78:	mov	x20, x0
    ee7c:	add	x19, sp, #0x20
    ee80:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ee84:	mov	x0, x19
    ee88:	add	x1, x1, #0xdc8
    ee8c:	str	x30, [sp, #16]
    ee90:	bl	f010 <__sancov_default_options@@Base+0x28c0>
    ee94:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    ee98:	mov	x2, x20
    ee9c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eea0:	add	x0, x0, #0xde8
    eea4:	ldr	x1, [x1, #4024]
    eea8:	ldr	x1, [x1]
    eeac:	bl	1a328 <OnPrint@@Base+0x398>
    eeb0:	mov	x0, x19
    eeb4:	bl	f060 <__sancov_default_options@@Base+0x2910>
    eeb8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    eebc:	nop
    eec0:	stp	x19, x20, [sp, #-80]!
    eec4:	mov	x20, x1
    eec8:	add	x19, sp, #0x30
    eecc:	stp	x21, x30, [sp, #16]
    eed0:	mov	x21, x0
    eed4:	mov	x0, x19
    eed8:	str	x1, [sp, #40]
    eedc:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eee0:	add	x1, x1, #0xe38
    eee4:	bl	f010 <__sancov_default_options@@Base+0x28c0>
    eee8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    eeec:	mov	x3, x21
    eef0:	mov	x2, x20
    eef4:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    eef8:	ldr	x1, [x1, #4024]
    eefc:	add	x0, x0, #0xe58
    ef00:	ldr	x1, [x1]
    ef04:	bl	1a328 <OnPrint@@Base+0x398>
    ef08:	mov	x0, x19
    ef0c:	bl	f060 <__sancov_default_options@@Base+0x2910>
    ef10:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    ef14:	nop
    ef18:	stp	x19, x20, [sp, #-64]!
    ef1c:	mov	x2, x1
    ef20:	mov	x20, x0
    ef24:	add	x19, sp, #0x20
    ef28:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ef2c:	mov	x0, x19
    ef30:	add	x1, x1, #0xef8
    ef34:	str	x30, [sp, #16]
    ef38:	bl	f010 <__sancov_default_options@@Base+0x28c0>
    ef3c:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    ef40:	mov	x2, x20
    ef44:	mov	x3, #0x8                   	// #8
    ef48:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ef4c:	ldr	x1, [x1, #4024]
    ef50:	add	x0, x0, #0xf20
    ef54:	ldr	x1, [x1]
    ef58:	bl	1a328 <OnPrint@@Base+0x398>
    ef5c:	mov	x0, x19
    ef60:	bl	f060 <__sancov_default_options@@Base+0x2910>
    ef64:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    ef68:	stp	x19, x20, [sp, #-80]!
    ef6c:	mov	x20, x0
    ef70:	add	x19, sp, #0x30
    ef74:	stp	x21, x30, [sp, #16]
    ef78:	mov	x0, x19
    ef7c:	mov	x21, x1
    ef80:	str	x1, [sp, #40]
    ef84:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    ef88:	add	x1, x1, #0xfa8
    ef8c:	bl	f010 <__sancov_default_options@@Base+0x28c0>
    ef90:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    ef94:	mov	x3, x21
    ef98:	mov	x2, x20
    ef9c:	adrp	x0, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
    efa0:	ldr	x1, [x1, #4024]
    efa4:	add	x0, x0, #0xfc0
    efa8:	ldr	x1, [x1]
    efac:	bl	1a328 <OnPrint@@Base+0x398>
    efb0:	mov	x0, x19
    efb4:	bl	f060 <__sancov_default_options@@Base+0x2910>
    efb8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    efbc:	nop
    efc0:	stp	x19, x20, [sp, #-64]!
    efc4:	mov	x2, x1
    efc8:	mov	x20, x0
    efcc:	add	x19, sp, #0x20
    efd0:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    efd4:	mov	x0, x19
    efd8:	add	x1, x1, #0x18
    efdc:	str	x30, [sp, #16]
    efe0:	bl	f010 <__sancov_default_options@@Base+0x28c0>
    efe4:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    efe8:	mov	x2, x20
    efec:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    eff0:	add	x0, x0, #0x28
    eff4:	ldr	x1, [x1, #4024]
    eff8:	ldr	x1, [x1]
    effc:	bl	1a328 <OnPrint@@Base+0x398>
    f000:	mov	x0, x19
    f004:	bl	f060 <__sancov_default_options@@Base+0x2910>
    f008:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    f00c:	nop
    f010:	stp	x19, x20, [sp, #-32]!
    f014:	mov	x19, x0
    f018:	mov	x20, x2
    f01c:	stp	x21, x30, [sp, #16]
    f020:	mov	x21, x1
    f024:	bl	1d4a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbe0>
    f028:	stp	x21, x20, [x19, #8]
    f02c:	bl	1cb68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
    f030:	strb	w0, [x19, #24]
    f034:	ldp	x21, x30, [sp, #16]
    f038:	tst	w0, #0xff
    f03c:	ldp	x19, x20, [sp], #32
    f040:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    f044:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    f048:	add	x2, x2, #0x428
    f04c:	add	x1, x1, #0x110
    f050:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    f054:	csel	x1, x1, x2, ne  // ne = any
    f058:	add	x0, x0, #0x98
    f05c:	b	1a2a0 <OnPrint@@Base+0x310>
    f060:	stp	x19, x30, [sp, #-16]!
    f064:	mov	x19, x0
    f068:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    f06c:	add	x2, x2, #0x428
    f070:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    f074:	ldrb	w3, [x19, #24]
    f078:	add	x1, x1, #0x120
    f07c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    f080:	add	x0, x0, #0x98
    f084:	cmp	w3, #0x0
    f088:	csel	x1, x1, x2, ne  // ne = any
    f08c:	bl	1a2a0 <OnPrint@@Base+0x310>
    f090:	ldr	x0, [x19, #16]
    f094:	bl	1bf40 <OnPrint@@Base+0x1fb0>
    f098:	bl	cb80 <__sancov_default_options@@Base+0x430>
    f09c:	ldp	x0, x1, [x19, #8]
    f0a0:	mov	x2, #0x0                   	// #0
    f0a4:	bl	1cbc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308>
    f0a8:	mov	x0, x19
    f0ac:	ldp	x19, x30, [sp], #16
    f0b0:	b	1d850 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf90>
    f0b4:	nop
    f0b8:	stp	x19, x20, [sp, #-32]!
    f0bc:	adrp	x19, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f0c0:	add	x19, x19, #0xbf0
    f0c4:	mov	x1, #0x1000                	// #4096
    f0c8:	mov	x0, x19
    f0cc:	str	x30, [sp, #24]
    f0d0:	bl	16710 <__sanitizer_set_report_fd@@Base+0x37f0>
    f0d4:	mov	x0, x19
    f0d8:	mov	w1, #0x2f                  	// #47
    f0dc:	bl	148e8 <__sanitizer_set_report_fd@@Base+0x19c8>
    f0e0:	cbz	x0, f128 <__sancov_default_options@@Base+0x29d8>
    f0e4:	add	x20, x0, #0x1
    f0e8:	str	x21, [sp, #16]
    f0ec:	mov	x0, x20
    f0f0:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
    f0f4:	cmp	x20, x19
    f0f8:	mov	x21, x0
    f0fc:	b.eq	f114 <__sancov_default_options@@Base+0x29c4>  // b.none
    f100:	mov	x2, x0
    f104:	mov	x1, x20
    f108:	mov	x0, x19
    f10c:	bl	14628 <__sanitizer_set_report_fd@@Base+0x1708>
    f110:	strb	wzr, [x21, x19]
    f114:	mov	x0, x21
    f118:	ldr	x21, [sp, #16]
    f11c:	ldr	x30, [sp, #24]
    f120:	ldp	x19, x20, [sp], #32
    f124:	ret
    f128:	mov	x0, x19
    f12c:	ldr	x30, [sp, #24]
    f130:	ldp	x19, x20, [sp], #32
    f134:	b	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
    f138:	str	x30, [sp, #-16]!
    f13c:	mov	x1, #0x1000                	// #4096
    f140:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    f144:	add	x0, x0, #0xbf0
    f148:	bl	16678 <__sanitizer_set_report_fd@@Base+0x3758>
    f14c:	ldr	x30, [sp], #16
    f150:	b	f0b8 <__sancov_default_options@@Base+0x2968>
    f154:	nop
    f158:	str	x30, [sp, #-16]!
    f15c:	tst	w4, #0xff
    f160:	b.ne	f174 <__sancov_default_options@@Base+0x2a24>  // b.any
    f164:	adrp	x8, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f168:	mov	x7, x0
    f16c:	ldr	w0, [x8, #2944]
    f170:	cbz	w0, f184 <__sancov_default_options@@Base+0x2a34>
    f174:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    f178:	add	x0, x0, #0x70
    f17c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
    f180:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    f184:	adrp	x4, 5b000 <_Unwind_Backtrace@GCC_3.3>
    f188:	mov	x5, x1
    f18c:	mov	w6, w3
    f190:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    f194:	ldr	x1, [x4, #1232]
    f198:	mov	x3, x7
    f19c:	mov	x4, x7
    f1a0:	add	x0, x0, #0x88
    f1a4:	mov	w7, #0x1                   	// #1
    f1a8:	str	w7, [x8, #2944]
    f1ac:	bl	1a328 <OnPrint@@Base+0x398>
    f1b0:	bl	183f0 <__sanitizer_set_report_fd@@Base+0x54d0>
    f1b4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    f1b8:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    f1bc:	add	x2, x2, #0xd0
    f1c0:	add	x0, x0, #0xf8
    f1c4:	mov	x4, #0x0                   	// #0
    f1c8:	mov	x3, #0x0                   	// #0
    f1cc:	mov	w1, #0x35                  	// #53
    f1d0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    f1d4:	nop
    f1d8:	stp	x19, x20, [sp, #-32]!
    f1dc:	str	x30, [sp, #24]
    f1e0:	cbz	x0, f250 <__sancov_default_options@@Base+0x2b00>
    f1e4:	mov	x19, x0
    f1e8:	mov	x20, x1
    f1ec:	cbz	x1, f21c <__sancov_default_options@@Base+0x2acc>
    f1f0:	str	x21, [sp, #16]
    f1f4:	bl	14b40 <__sanitizer_set_report_fd@@Base+0x1c20>
    f1f8:	mov	x21, x0
    f1fc:	cbz	x0, f20c <__sancov_default_options@@Base+0x2abc>
    f200:	mov	x0, x20
    f204:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
    f208:	add	x19, x21, x0
    f20c:	ldrb	w0, [x19]
    f210:	cmp	w0, #0x2e
    f214:	b.eq	f22c <__sancov_default_options@@Base+0x2adc>  // b.none
    f218:	ldr	x21, [sp, #16]
    f21c:	mov	x0, x19
    f220:	ldr	x30, [sp, #24]
    f224:	ldp	x19, x20, [sp], #32
    f228:	ret
    f22c:	ldrb	w1, [x19, #1]
    f230:	add	x0, x19, #0x2
    f234:	ldr	x21, [sp, #16]
    f238:	cmp	w1, #0x2f
    f23c:	csel	x19, x0, x19, eq  // eq = none
    f240:	mov	x0, x19
    f244:	ldr	x30, [sp, #24]
    f248:	ldp	x19, x20, [sp], #32
    f24c:	ret
    f250:	mov	x19, #0x0                   	// #0
    f254:	b	f21c <__sancov_default_options@@Base+0x2acc>
    f258:	stp	x19, x30, [sp, #-16]!
    f25c:	mov	x19, x0
    f260:	cbz	x0, f274 <__sancov_default_options@@Base+0x2b24>
    f264:	mov	w1, #0x2f                  	// #47
    f268:	bl	148e8 <__sanitizer_set_report_fd@@Base+0x19c8>
    f26c:	cmp	x0, #0x0
    f270:	csinc	x19, x19, x0, eq  // eq = none
    f274:	mov	x0, x19
    f278:	ldp	x19, x30, [sp], #16
    f27c:	ret
    f280:	cbz	x0, f30c <__sancov_default_options@@Base+0x2bbc>
    f284:	stp	x19, x30, [sp, #-16]!
    f288:	mov	x19, x0
    f28c:	ldrb	w1, [x0]
    f290:	cbz	w1, f300 <__sancov_default_options@@Base+0x2bb0>
    f294:	nop
    f298:	cmp	w1, #0x1b
    f29c:	b.eq	f2e4 <__sancov_default_options@@Base+0x2b94>  // b.none
    f2a0:	cmp	x0, x19
    f2a4:	b.eq	f2ac <__sancov_default_options@@Base+0x2b5c>  // b.none
    f2a8:	strb	w1, [x19]
    f2ac:	add	x19, x19, #0x1
    f2b0:	ldrb	w1, [x0, #1]
    f2b4:	add	x0, x0, #0x1
    f2b8:	cbz	w1, f300 <__sancov_default_options@@Base+0x2bb0>
    f2bc:	cmp	x0, x19
    f2c0:	b.cs	f298 <__sancov_default_options@@Base+0x2b48>  // b.hs, b.nlast
    f2c4:	mov	x3, x0
    f2c8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    f2cc:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    f2d0:	mov	x4, x19
    f2d4:	add	x2, x2, #0x138
    f2d8:	add	x0, x0, #0xf8
    f2dc:	mov	w1, #0x68                  	// #104
    f2e0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    f2e4:	ldrb	w2, [x0, #1]
    f2e8:	cmp	w2, #0x5b
    f2ec:	b.ne	f2a0 <__sancov_default_options@@Base+0x2b50>  // b.any
    f2f0:	mov	w1, #0x6d                  	// #109
    f2f4:	bl	14898 <__sanitizer_set_report_fd@@Base+0x1978>
    f2f8:	ldrb	w1, [x0]
    f2fc:	cbnz	w1, f2b0 <__sancov_default_options@@Base+0x2b60>
    f300:	strb	wzr, [x19]
    f304:	ldp	x19, x30, [sp], #16
    f308:	ret
    f30c:	ret
    f310:	stp	x19, x20, [sp, #-32]!
    f314:	mov	x19, x0
    f318:	mov	x1, #0x0                   	// #0
    f31c:	ldr	x0, [x0]
    f320:	str	x30, [sp, #16]
    f324:	bl	cde8 <__sancov_default_options@@Base+0x698>
    f328:	stp	xzr, xzr, [x19]
    f32c:	mov	w1, #0x0                   	// #0
    f330:	str	xzr, [x19, #16]
    f334:	add	x0, x19, #0x1c
    f338:	str	wzr, [x19, #24]
    f33c:	mov	x2, #0x10                  	// #16
    f340:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    f344:	strb	wzr, [x19, #44]
    f348:	ldr	x1, [x19, #48]
    f34c:	cbz	x1, f394 <__sancov_default_options@@Base+0x2c44>
    f350:	add	x20, x19, #0x30
    f354:	b	f368 <__sancov_default_options@@Base+0x2c18>
    f358:	str	x2, [x20]
    f35c:	bl	cde8 <__sancov_default_options@@Base+0x698>
    f360:	ldr	x1, [x19, #48]
    f364:	cbz	x1, f394 <__sancov_default_options@@Base+0x2c44>
    f368:	ldr	x0, [x19, #56]
    f36c:	sub	x2, x1, #0x1
    f370:	mov	x1, #0x0                   	// #0
    f374:	ldr	x3, [x0]
    f378:	str	x3, [x20, #8]
    f37c:	cbnz	x3, f358 <__sancov_default_options@@Base+0x2c08>
    f380:	str	x2, [x20]
    f384:	str	xzr, [x20, #16]
    f388:	bl	cde8 <__sancov_default_options@@Base+0x698>
    f38c:	ldr	x1, [x19, #48]
    f390:	cbnz	x1, f368 <__sancov_default_options@@Base+0x2c18>
    f394:	ldr	x30, [sp, #16]
    f398:	ldp	x19, x20, [sp], #32
    f39c:	ret
    f3a0:	stp	x19, x20, [sp, #-32]!
    f3a4:	mov	x19, x0
    f3a8:	mov	x20, x2
    f3ac:	stp	x21, x30, [sp, #16]
    f3b0:	mov	x21, x1
    f3b4:	bl	f310 <__sancov_default_options@@Base+0x2bc0>
    f3b8:	mov	x0, x21
    f3bc:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
    f3c0:	ldp	x21, x30, [sp, #16]
    f3c4:	stp	x0, x20, [x19]
    f3c8:	ldp	x19, x20, [sp], #32
    f3cc:	ret
    f3d0:	stp	x19, x20, [sp, #-64]!
    f3d4:	mov	x19, x0
    f3d8:	mov	w20, w3
    f3dc:	stp	x21, x22, [sp, #16]
    f3e0:	mov	x21, x4
    f3e4:	mov	x22, x2
    f3e8:	stp	x23, x24, [sp, #32]
    f3ec:	and	w24, w5, #0xff
    f3f0:	mov	x23, x1
    f3f4:	str	x30, [sp, #48]
    f3f8:	bl	f310 <__sancov_default_options@@Base+0x2bc0>
    f3fc:	mov	x0, x23
    f400:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
    f404:	stp	x0, x22, [x19]
    f408:	mov	x1, x21
    f40c:	add	x0, x19, #0x1c
    f410:	str	w20, [x19, #24]
    f414:	mov	x2, #0x10                  	// #16
    f418:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    f41c:	strb	w24, [x19, #44]
    f420:	ldp	x21, x22, [sp, #16]
    f424:	ldp	x23, x24, [sp, #32]
    f428:	ldr	x30, [sp, #48]
    f42c:	ldp	x19, x20, [sp], #64
    f430:	ret
    f434:	nop
    f438:	stp	x19, x20, [sp, #-64]!
    f43c:	mov	x20, x0
    f440:	mov	x0, #0x30                  	// #48
    f444:	stp	x21, x22, [sp, #16]
    f448:	mov	x21, x5
    f44c:	mov	x22, x2
    f450:	mov	x2, #0x0                   	// #0
    f454:	stp	x23, x24, [sp, #32]
    f458:	and	w24, w3, #0xff
    f45c:	mov	x23, x1
    f460:	mov	x1, #0x0                   	// #0
    f464:	stp	x25, x30, [sp, #48]
    f468:	and	w25, w4, #0xff
    f46c:	bl	cb90 <__sancov_default_options@@Base+0x440>
    f470:	mov	x19, x0
    f474:	cmp	x21, #0x0
    f478:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
    f47c:	add	x1, x1, #0x428
    f480:	add	x0, x0, #0x1a
    f484:	csel	x1, x1, x21, eq  // eq = none
    f488:	stp	xzr, x23, [x19]
    f48c:	mov	x2, #0x10                  	// #16
    f490:	str	x22, [x19, #16]
    f494:	strb	w24, [x19, #24]
    f498:	strb	w25, [x19, #25]
    f49c:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
    f4a0:	ldr	x0, [x20, #48]
    f4a4:	cbnz	x0, f4e0 <__sancov_default_options@@Base+0x2d90>
    f4a8:	str	xzr, [x19]
    f4ac:	mov	x1, #0x1                   	// #1
    f4b0:	stp	x1, x19, [x20, #48]
    f4b4:	str	x19, [x20, #64]
    f4b8:	cbz	w24, f4cc <__sancov_default_options@@Base+0x2d7c>
    f4bc:	ldr	x0, [x20, #16]
    f4c0:	cmp	x0, x22
    f4c4:	b.cs	f4cc <__sancov_default_options@@Base+0x2d7c>  // b.hs, b.nlast
    f4c8:	str	x22, [x20, #16]
    f4cc:	ldp	x21, x22, [sp, #16]
    f4d0:	ldp	x23, x24, [sp, #32]
    f4d4:	ldp	x25, x30, [sp, #48]
    f4d8:	ldp	x19, x20, [sp], #64
    f4dc:	ret
    f4e0:	str	xzr, [x19]
    f4e4:	add	x0, x0, #0x1
    f4e8:	ldr	x2, [x20, #64]
    f4ec:	str	x19, [x2]
    f4f0:	str	x0, [x20, #48]
    f4f4:	str	x19, [x20, #64]
    f4f8:	b	f4b8 <__sancov_default_options@@Base+0x2d68>
    f4fc:	nop
    f500:	ldr	x0, [x0, #56]
    f504:	cbz	x0, f534 <__sancov_default_options@@Base+0x2de4>
    f508:	ldr	x2, [x0, #8]
    f50c:	cmp	x2, x1
    f510:	b.hi	f520 <__sancov_default_options@@Base+0x2dd0>  // b.pmore
    f514:	ldr	x2, [x0, #16]
    f518:	cmp	x2, x1
    f51c:	b.hi	f52c <__sancov_default_options@@Base+0x2ddc>  // b.pmore
    f520:	ldr	x0, [x0]
    f524:	cbnz	x0, f508 <__sancov_default_options@@Base+0x2db8>
    f528:	ret
    f52c:	mov	w0, #0x1                   	// #1
    f530:	ret
    f534:	mov	w0, #0x0                   	// #0
    f538:	ret
    f53c:	nop
    f540:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    f544:	ldr	x1, [x1, #4056]
    f548:	ldr	x2, [x1, #128]
    f54c:	cbnz	x2, f554 <__sancov_default_options@@Base+0x2e04>
    f550:	ret
    f554:	adrp	x2, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f558:	add	x2, x2, #0xb80
    f55c:	add	x2, x2, #0x8
    f560:	ldxr	x3, [x2]
    f564:	add	x4, x3, x0
    f568:	stlxr	w5, x4, [x2]
    f56c:	cbnz	w5, f560 <__sancov_default_options@@Base+0x2e10>
    f570:	dmb	ish
    f574:	ldr	x1, [x1, #128]
    f578:	add	x0, x3, x0
    f57c:	cmp	x1, x0, lsr #20
    f580:	b.hi	f550 <__sancov_default_options@@Base+0x2e00>  // b.pmore
    f584:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    f588:	add	x0, x0, #0x148
    f58c:	str	x30, [sp, #-16]!
    f590:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
    f594:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    f598:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    f59c:	ldr	x1, [x1, #4056]
    f5a0:	ldr	x1, [x1, #128]
    f5a4:	cbnz	x1, f5ac <__sancov_default_options@@Base+0x2e5c>
    f5a8:	ret
    f5ac:	adrp	x1, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f5b0:	add	x1, x1, #0xb80
    f5b4:	neg	x0, x0
    f5b8:	add	x1, x1, #0x8
    f5bc:	ldxr	x2, [x1]
    f5c0:	add	x2, x2, x0
    f5c4:	stlxr	w3, x2, [x1]
    f5c8:	cbnz	w3, f5bc <__sancov_default_options@@Base+0x2e6c>
    f5cc:	dmb	ish
    f5d0:	ret
    f5d4:	nop
    f5d8:	cbz	x1, f76c <__sancov_default_options@@Base+0x301c>
    f5dc:	stp	x19, x20, [sp, #-80]!
    f5e0:	mov	x19, x0
    f5e4:	stp	x21, x22, [sp, #16]
    f5e8:	mov	x21, x1
    f5ec:	str	x30, [sp, #64]
    f5f0:	ldrb	w0, [x1]
    f5f4:	cbz	w0, f6ec <__sancov_default_options@@Base+0x2f9c>
    f5f8:	cbz	x19, f6d0 <__sancov_default_options@@Base+0x2f80>
    f5fc:	stp	x23, x24, [sp, #32]
    f600:	mov	w23, #0x0                   	// #0
    f604:	stp	x25, x26, [sp, #48]
    f608:	ldrb	w1, [x19]
    f60c:	cmp	w1, #0x5e
    f610:	b.ne	f620 <__sancov_default_options@@Base+0x2ed0>  // b.any
    f614:	ldrb	w1, [x19, #1]
    f618:	add	x19, x19, #0x1
    f61c:	mov	w23, #0x1                   	// #1
    f620:	mov	w2, #0x0                   	// #0
    f624:	mov	w25, #0x2a                  	// #42
    f628:	mov	w24, #0x24                  	// #36
    f62c:	cbz	w1, f6c8 <__sancov_default_options@@Base+0x2f78>
    f630:	cmp	w1, #0x2a
    f634:	b.eq	f75c <__sancov_default_options@@Base+0x300c>  // b.none
    f638:	ldrb	w0, [x21]
    f63c:	cmp	w1, #0x24
    f640:	b.eq	f774 <__sancov_default_options@@Base+0x3024>  // b.none
    f644:	cbz	w0, f6e4 <__sancov_default_options@@Base+0x2f94>
    f648:	mov	w1, #0x2a                  	// #42
    f64c:	mov	x0, x19
    f650:	bl	14868 <__sanitizer_set_report_fd@@Base+0x1948>
    f654:	mov	x22, x0
    f658:	mov	w1, #0x24                  	// #36
    f65c:	mov	x0, x19
    f660:	bl	14868 <__sanitizer_set_report_fd@@Base+0x1948>
    f664:	mov	x26, x0
    f668:	cbz	x22, f734 <__sancov_default_options@@Base+0x2fe4>
    f66c:	cmp	x0, #0x0
    f670:	ccmp	x22, x0, #0x0, ne  // ne = any
    f674:	b.ls	f700 <__sancov_default_options@@Base+0x2fb0>  // b.plast
    f678:	strb	wzr, [x26]
    f67c:	mov	x1, x19
    f680:	mov	x0, x21
    f684:	bl	14b40 <__sanitizer_set_report_fd@@Base+0x1c20>
    f688:	mov	x20, x0
    f68c:	mov	x0, x19
    f690:	mov	x19, x26
    f694:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
    f698:	add	x0, x20, x0
    f69c:	mov	w1, #0x24                  	// #36
    f6a0:	strb	w1, [x19]
    f6a4:	cbz	x20, f6e4 <__sancov_default_options@@Base+0x2f94>
    f6a8:	cmp	x21, x20
    f6ac:	csel	w2, w23, wzr, ne  // ne = any
    f6b0:	cbnz	w2, f6e4 <__sancov_default_options@@Base+0x2f94>
    f6b4:	cbz	x19, f6c8 <__sancov_default_options@@Base+0x2f78>
    f6b8:	ldrb	w1, [x19]
    f6bc:	mov	x21, x0
    f6c0:	mov	w23, #0x0                   	// #0
    f6c4:	cbnz	w1, f630 <__sancov_default_options@@Base+0x2ee0>
    f6c8:	ldp	x23, x24, [sp, #32]
    f6cc:	ldp	x25, x26, [sp, #48]
    f6d0:	mov	w0, #0x1                   	// #1
    f6d4:	ldp	x21, x22, [sp, #16]
    f6d8:	ldr	x30, [sp, #64]
    f6dc:	ldp	x19, x20, [sp], #80
    f6e0:	ret
    f6e4:	ldp	x23, x24, [sp, #32]
    f6e8:	ldp	x25, x26, [sp, #48]
    f6ec:	mov	w0, #0x0                   	// #0
    f6f0:	ldp	x21, x22, [sp, #16]
    f6f4:	ldr	x30, [sp, #64]
    f6f8:	ldp	x19, x20, [sp], #80
    f6fc:	ret
    f700:	strb	wzr, [x22]
    f704:	mov	x1, x19
    f708:	mov	x0, x21
    f70c:	bl	14b40 <__sanitizer_set_report_fd@@Base+0x1c20>
    f710:	mov	x20, x0
    f714:	mov	x0, x19
    f718:	mov	x19, x22
    f71c:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
    f720:	add	x0, x20, x0
    f724:	cmp	x22, x26
    f728:	csel	w1, w24, w25, eq  // eq = none
    f72c:	strb	w1, [x19]
    f730:	b	f6a4 <__sancov_default_options@@Base+0x2f54>
    f734:	cbnz	x0, f678 <__sancov_default_options@@Base+0x2f28>
    f738:	mov	x1, x19
    f73c:	mov	x0, x21
    f740:	bl	14b40 <__sanitizer_set_report_fd@@Base+0x1c20>
    f744:	mov	x20, x0
    f748:	mov	x0, x19
    f74c:	mov	x19, #0x0                   	// #0
    f750:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
    f754:	add	x0, x20, x0
    f758:	b	f6a4 <__sancov_default_options@@Base+0x2f54>
    f75c:	add	x19, x19, #0x1
    f760:	mov	x0, x21
    f764:	mov	w2, #0x1                   	// #1
    f768:	b	f6b8 <__sancov_default_options@@Base+0x2f68>
    f76c:	mov	w0, #0x0                   	// #0
    f770:	ret
    f774:	cmp	w0, #0x0
    f778:	csinc	w0, w2, wzr, ne  // ne = any
    f77c:	ldp	x23, x24, [sp, #32]
    f780:	ldp	x25, x26, [sp, #48]
    f784:	b	f6f0 <__sancov_default_options@@Base+0x2fa0>
    f788:	adrp	x0, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f78c:	add	x0, x0, #0xbf0
    f790:	ret
    f794:	nop
    f798:	b	f0b8 <__sancov_default_options@@Base+0x2968>
    f79c:	nop
    f7a0:	adrp	x0, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    f7a4:	ldrb	w0, [x0, #3056]
    f7a8:	cbz	w0, f7b0 <__sancov_default_options@@Base+0x3060>
    f7ac:	ret
    f7b0:	b	f138 <__sancov_default_options@@Base+0x29e8>
    f7b4:	nop
    f7b8:	stp	x19, x20, [sp, #-32]!
    f7bc:	adrp	x20, 1ad000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    f7c0:	mov	x19, x1
    f7c4:	stp	x21, x30, [sp, #16]
    f7c8:	mov	x21, x0
    f7cc:	ldrb	w0, [x20, #3056]
    f7d0:	cbnz	w0, f7d8 <__sancov_default_options@@Base+0x3088>
    f7d4:	bl	f138 <__sancov_default_options@@Base+0x29e8>
    f7d8:	add	x20, x20, #0xbf0
    f7dc:	mov	x0, x20
    f7e0:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
    f7e4:	mov	x2, x0
    f7e8:	cbz	x19, f80c <__sancov_default_options@@Base+0x30bc>
    f7ec:	sub	x19, x19, #0x1
    f7f0:	mov	x1, x20
    f7f4:	cmp	x19, x0
    f7f8:	mov	x0, x21
    f7fc:	csel	x19, x19, x2, ls  // ls = plast
    f800:	mov	x2, x19
    f804:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    f808:	strb	wzr, [x21, x19]
    f80c:	mov	x0, x19
    f810:	ldp	x21, x30, [sp, #16]
    f814:	ldp	x19, x20, [sp], #32
    f818:	ret
    f81c:	nop
    f820:	stp	x19, x20, [sp, #-32]!
    f824:	str	x30, [sp, #16]
    f828:	bl	15908 <__sanitizer_set_report_fd@@Base+0x29e8>
    f82c:	cbz	x0, f87c <__sancov_default_options@@Base+0x312c>
    f830:	mov	x19, x0
    f834:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    f838:	add	x0, x0, #0x180
    f83c:	bl	1a2a0 <OnPrint@@Base+0x310>
    f840:	ldr	x1, [x19]
    f844:	cbz	x1, f868 <__sancov_default_options@@Base+0x3118>
    f848:	adrp	x20, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
    f84c:	add	x19, x19, #0x8
    f850:	add	x20, x20, #0x930
    f854:	nop
    f858:	mov	x0, x20
    f85c:	bl	1a2a0 <OnPrint@@Base+0x310>
    f860:	ldr	x1, [x19], #8
    f864:	cbnz	x1, f858 <__sancov_default_options@@Base+0x3108>
    f868:	ldr	x30, [sp, #16]
    f86c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    f870:	ldp	x19, x20, [sp], #32
    f874:	add	x0, x0, #0x190
    f878:	b	1a2a0 <OnPrint@@Base+0x310>
    f87c:	ldr	x30, [sp, #16]
    f880:	ldp	x19, x20, [sp], #32
    f884:	ret
    f888:	stp	x19, x20, [sp, #-48]!
    f88c:	adrp	x20, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f890:	add	x20, x20, #0xb80
    f894:	add	x19, x20, #0x10
    f898:	add	x20, x20, #0x60
    f89c:	stp	x21, x22, [sp, #16]
    f8a0:	mov	x22, x0
    f8a4:	mov	x21, x1
    f8a8:	str	x30, [sp, #32]
    f8ac:	ldr	x2, [x19]
    f8b0:	mov	x1, x21
    f8b4:	mov	x0, x22
    f8b8:	add	x19, x19, #0x10
    f8bc:	cbz	x2, f8cc <__sancov_default_options@@Base+0x317c>
    f8c0:	blr	x2
    f8c4:	cmp	x19, x20
    f8c8:	b.ne	f8ac <__sancov_default_options@@Base+0x315c>  // b.any
    f8cc:	ldp	x21, x22, [sp, #16]
    f8d0:	ldr	x30, [sp, #32]
    f8d4:	ldp	x19, x20, [sp], #48
    f8d8:	ret
    f8dc:	nop
    f8e0:	stp	x19, x20, [sp, #-32]!
    f8e4:	adrp	x20, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f8e8:	add	x20, x20, #0xb80
    f8ec:	add	x20, x20, #0x10
    f8f0:	stp	x21, x30, [sp, #16]
    f8f4:	mov	x21, x0
    f8f8:	mov	x19, #0x0                   	// #0
    f8fc:	add	x1, x20, x19
    f900:	mov	x0, x21
    f904:	add	x19, x19, #0x10
    f908:	ldr	x1, [x1, #8]
    f90c:	cbz	x1, f91c <__sancov_default_options@@Base+0x31cc>
    f910:	blr	x1
    f914:	cmp	x19, #0x50
    f918:	b.ne	f8fc <__sancov_default_options@@Base+0x31ac>  // b.any
    f91c:	ldp	x21, x30, [sp, #16]
    f920:	ldp	x19, x20, [sp], #32
    f924:	ret

000000000000f928 <__sanitizer_report_error_summary@@Base>:
    f928:	mov	x1, x0
    f92c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
    f930:	add	x0, x2, #0xe48
    f934:	b	1a2a0 <OnPrint@@Base+0x310>
    f938:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    f93c:	ldr	x4, [x4, #4056]
    f940:	ldrb	w2, [x4, #60]
    f944:	cbnz	w2, f94c <__sanitizer_report_error_summary@@Base+0x24>
    f948:	ret
    f94c:	stp	x19, x20, [sp, #-96]!
    f950:	mov	x20, x1
    f954:	stp	x23, x24, [sp, #32]
    f958:	adrp	x23, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f95c:	add	x19, x23, #0xb80
    f960:	stp	x21, x22, [sp, #16]
    f964:	mov	x21, x0
    f968:	ldr	x2, [x19, #96]
    f96c:	str	x30, [sp, #48]
    f970:	stp	xzr, xzr, [sp, #64]
    f974:	str	xzr, [sp, #80]
    f978:	cbz	x2, fa44 <__sanitizer_report_error_summary@@Base+0x11c>
    f97c:	sub	x0, x2, #0x1
    f980:	tst	x0, x2
    f984:	b.ne	faac <__sanitizer_report_error_summary@@Base+0x184>  // b.any
    f988:	add	x22, x2, #0x3ff
    f98c:	neg	x2, x2
    f990:	and	x22, x22, x2
    f994:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    f998:	mov	w2, #0x0                   	// #0
    f99c:	add	x1, x24, #0x178
    f9a0:	mov	x0, x22
    f9a4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    f9a8:	ldr	x1, [sp, #64]
    f9ac:	mov	x19, x0
    f9b0:	ldr	x2, [sp, #80]
    f9b4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    f9b8:	ldp	x0, x1, [sp, #64]
    f9bc:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    f9c0:	stp	x19, x22, [sp, #64]
    f9c4:	ldr	x2, [sp, #80]
    f9c8:	cmp	x2, #0x3ff
    f9cc:	b.hi	f9f0 <__sanitizer_report_error_summary@@Base+0xc8>  // b.pmore
    f9d0:	cmp	x22, #0x3ff
    f9d4:	b.ls	fa54 <__sanitizer_report_error_summary@@Base+0x12c>  // b.plast
    f9d8:	mov	x3, #0x400                 	// #1024
    f9dc:	add	x0, x19, x2
    f9e0:	mov	w1, #0x0                   	// #0
    f9e4:	sub	x2, x3, x2
    f9e8:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    f9ec:	ldr	x19, [sp, #64]
    f9f0:	mov	x0, #0x400                 	// #1024
    f9f4:	stp	x0, xzr, [sp, #80]
    f9f8:	adrp	x2, 5b000 <_Unwind_Backtrace@GCC_3.3>
    f9fc:	cmp	x20, #0x0
    fa00:	strb	wzr, [x19]
    fa04:	mov	x3, x21
    fa08:	add	x0, sp, #0x40
    fa0c:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    fa10:	ldr	x2, [x2, #1232]
    fa14:	add	x1, x1, #0x198
    fa18:	csel	x2, x2, x20, eq  // eq = none
    fa1c:	bl	1a3b0 <OnPrint@@Base+0x420>
    fa20:	ldr	x0, [sp, #64]
    fa24:	bl	6370 <__sanitizer_report_error_summary@plt>
    fa28:	ldp	x0, x1, [sp, #64]
    fa2c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    fa30:	ldp	x21, x22, [sp, #16]
    fa34:	ldp	x23, x24, [sp, #32]
    fa38:	ldr	x30, [sp, #48]
    fa3c:	ldp	x19, x20, [sp], #96
    fa40:	ret
    fa44:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    fa48:	mov	x2, x0
    fa4c:	str	x0, [x19, #96]
    fa50:	b	f97c <__sanitizer_report_error_summary@@Base+0x54>
    fa54:	add	x23, x23, #0xb80
    fa58:	ldr	x0, [x23, #96]
    fa5c:	cbz	x0, fabc <__sanitizer_report_error_summary@@Base+0x194>
    fa60:	sub	x1, x0, #0x1
    fa64:	tst	x1, x0
    fa68:	b.ne	faac <__sanitizer_report_error_summary@@Base+0x184>  // b.any
    fa6c:	add	x22, x0, #0x3ff
    fa70:	neg	x0, x0
    fa74:	and	x22, x22, x0
    fa78:	add	x1, x24, #0x178
    fa7c:	mov	w2, #0x0                   	// #0
    fa80:	mov	x0, x22
    fa84:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    fa88:	mov	x19, x0
    fa8c:	ldr	x1, [sp, #64]
    fa90:	ldr	x2, [sp, #80]
    fa94:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    fa98:	ldp	x0, x1, [sp, #64]
    fa9c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    faa0:	stp	x19, x22, [sp, #64]
    faa4:	ldr	x2, [sp, #80]
    faa8:	b	f9d8 <__sanitizer_report_error_summary@@Base+0xb0>
    faac:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    fab0:	add	x0, x0, #0x160
    fab4:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
    fab8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    fabc:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    fac0:	str	x0, [x23, #96]
    fac4:	b	fa60 <__sanitizer_report_error_summary@@Base+0x138>

000000000000fac8 <__sanitizer_acquire_crash_state@@Base>:
    fac8:	adrp	x0, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    facc:	add	x0, x0, #0xb80
    fad0:	add	x0, x0, #0x68
    fad4:	mov	w2, #0x1                   	// #1
    fad8:	ldxrb	w1, [x0]
    fadc:	stxrb	w3, w2, [x0]
    fae0:	cbnz	w3, fad8 <__sanitizer_acquire_crash_state@@Base+0x10>
    fae4:	tst	w1, #0xff
    fae8:	dmb	ish
    faec:	cset	w0, eq  // eq = none
    faf0:	ret
    faf4:	nop

000000000000faf8 <__sanitizer_install_malloc_and_free_hooks@@Base>:
    faf8:	cmp	x0, #0x0
    fafc:	mov	x4, x0
    fb00:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    fb04:	b.eq	fb34 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c>  // b.none
    fb08:	adrp	x6, 1ac000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    fb0c:	add	x2, x6, #0xb80
    fb10:	add	x2, x2, #0x10
    fb14:	mov	w0, #0x0                   	// #0
    fb18:	ldr	x3, [x2]
    fb1c:	mov	w5, w0
    fb20:	add	w0, w0, #0x1
    fb24:	add	x2, x2, #0x10
    fb28:	cmp	w0, #0x5
    fb2c:	cbz	x3, fb3c <__sanitizer_install_malloc_and_free_hooks@@Base+0x44>
    fb30:	b.ne	fb18 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20>  // b.any
    fb34:	mov	w0, #0x0                   	// #0
    fb38:	ret
    fb3c:	add	x6, x6, #0xb80
    fb40:	sbfiz	x5, x5, #4, #32
    fb44:	add	x6, x6, #0x10
    fb48:	add	x2, x6, x5
    fb4c:	str	x4, [x6, x5]
    fb50:	str	x1, [x2, #8]
    fb54:	ret
    fb58:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
    fb5c:	ldr	x3, [x1, #3088]
    fb60:	cbnz	x3, fb6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x74>
    fb64:	str	x0, [x1, #3088]
    fb68:	ret
    fb6c:	str	x30, [sp, #-16]!
    fb70:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    fb74:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    fb78:	add	x2, x2, #0x1b8
    fb7c:	add	x0, x0, #0x1e8
    fb80:	mov	x4, #0x0                   	// #0
    fb84:	mov	w1, #0x16                  	// #22
    fb88:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    fb8c:	nop
    fb90:	mov	x0, #0x0                   	// #0
    fb94:	ret
    fb98:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    fb9c:	stp	x19, x20, [sp, #-128]!
    fba0:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    fba4:	ldr	x0, [x0, #4056]
    fba8:	stp	x21, x22, [sp, #16]
    fbac:	add	x1, x1, #0x240
    fbb0:	str	x1, [sp, #120]
    fbb4:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    fbb8:	ldp	x21, x19, [x0, #136]
    fbbc:	stp	x23, x24, [sp, #32]
    fbc0:	mov	x22, #0x0                   	// #0
    fbc4:	stp	x27, x28, [sp, #64]
    fbc8:	mov	x27, #0xcccccccccccccccc    	// #-3689348814741910324
    fbcc:	mov	w23, #0x0                   	// #0
    fbd0:	stp	d8, d9, [sp, #96]
    fbd4:	mov	x20, #0x0                   	// #0
    fbd8:	cmp	x21, #0x0
    fbdc:	cset	w24, ne  // ne = any
    fbe0:	ldr	d9, [x1, #752]
    fbe4:	fmov	d8, xzr
    fbe8:	movk	x27, #0xcccd
    fbec:	stp	x25, x26, [sp, #48]
    fbf0:	adrp	x25, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    fbf4:	ldrb	w26, [x0, #152]
    fbf8:	str	x30, [sp, #80]
    fbfc:	nop
    fc00:	mov	w0, #0x64                  	// #100
    fc04:	bl	18b20 <__sanitizer_set_report_fd@@Base+0x5c00>
    fc08:	bl	17820 <__sanitizer_set_report_fd@@Base+0x4900>
    fc0c:	lsr	x28, x0, #20
    fc10:	ldr	x1, [x25, #3896]
    fc14:	ldr	w0, [x1]
    fc18:	cbz	w0, fc5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x164>
    fc1c:	add	x0, x20, x20, lsl #1
    fc20:	lsl	x0, x0, #2
    fc24:	sub	x0, x0, x20
    fc28:	umulh	x0, x0, x27
    fc2c:	cmp	x28, x0, lsr #3
    fc30:	b.hi	fce4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec>  // b.pmore
    fc34:	bl	1b150 <OnPrint@@Base+0x11c0>
    fc38:	mov	x5, x0
    fc3c:	cbz	x0, fc5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x164>
    fc40:	add	x1, x22, x22, lsl #1
    fc44:	ldr	x3, [x0, #8]
    fc48:	lsl	x1, x1, #2
    fc4c:	sub	x1, x1, x22
    fc50:	umulh	x1, x1, x27
    fc54:	cmp	x3, x1, lsr #3
    fc58:	b.hi	fd44 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24c>  // b.pmore
    fc5c:	cmp	w24, #0x0
    fc60:	ccmp	x21, x28, #0x2, ne  // ne = any
    fc64:	b.cc	fd78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x280>  // b.lo, b.ul, b.last
    fc68:	cbz	x19, fca8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>
    fc6c:	cmp	x19, x28
    fc70:	eor	w0, w23, #0x1
    fc74:	cset	w1, cc  // cc = lo, ul, last
    fc78:	ands	w1, w1, w0
    fc7c:	b.ne	fd08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x210>  // b.any
    fc80:	cmp	w23, #0x0
    fc84:	ccmp	x19, x28, #0x0, ne  // ne = any
    fc88:	b.cc	fca8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>  // b.lo, b.ul, b.last
    fc8c:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
    fc90:	mov	w23, #0x0                   	// #0
    fc94:	ldr	x1, [x0, #3088]
    fc98:	cbz	x1, fca8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>
    fc9c:	mov	w0, #0x0                   	// #0
    fca0:	blr	x1
    fca4:	nop
    fca8:	cbz	w26, fc00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x108>
    fcac:	scvtf	d0, d8
    fcb0:	scvtf	d1, x28
    fcb4:	fmul	d0, d0, d9
    fcb8:	fcmpe	d1, d0
    fcbc:	b.le	fc00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x108>
    fcc0:	mov	x1, x28
    fcc4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    fcc8:	add	x0, x0, #0x2d0
    fccc:	bl	1a2a0 <OnPrint@@Base+0x310>
    fcd0:	fmov	d8, x28
    fcd4:	mov	x1, #0x14                  	// #20
    fcd8:	mov	x0, #0x5a                  	// #90
    fcdc:	bl	6a00 <__sanitizer_print_memory_profile@plt>
    fce0:	b	fc00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x108>
    fce4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    fce8:	mov	x20, x28
    fcec:	mov	x2, x28
    fcf0:	ldr	x1, [x0, #4024]
    fcf4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    fcf8:	add	x0, x0, #0x230
    fcfc:	ldr	x1, [x1]
    fd00:	bl	1a2a0 <OnPrint@@Base+0x310>
    fd04:	b	fc34 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13c>
    fd08:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    fd0c:	mov	w23, w1
    fd10:	mov	x3, x28
    fd14:	mov	x2, x19
    fd18:	ldr	x5, [x0, #4024]
    fd1c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    fd20:	add	x0, x0, #0x2a0
    fd24:	ldr	x1, [x5]
    fd28:	bl	1a328 <OnPrint@@Base+0x398>
    fd2c:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
    fd30:	ldr	x1, [x0, #3088]
    fd34:	cbz	x1, fca8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>
    fd38:	mov	w0, #0x1                   	// #1
    fd3c:	blr	x1
    fd40:	b	fca8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>
    fd44:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    fd48:	lsr	x3, x3, #20
    fd4c:	ldr	x2, [x5]
    fd50:	str	x5, [sp, #112]
    fd54:	ldr	x1, [x0, #4024]
    fd58:	ldr	x0, [sp, #120]
    fd5c:	ldr	x1, [x1]
    fd60:	bl	1a2a0 <OnPrint@@Base+0x310>
    fd64:	ldr	x5, [sp, #112]
    fd68:	cmp	w24, #0x0
    fd6c:	ccmp	x21, x28, #0x2, ne  // ne = any
    fd70:	ldr	x22, [x5, #8]
    fd74:	b.cs	fc68 <__sanitizer_install_malloc_and_free_hooks@@Base+0x170>  // b.hs, b.nlast
    fd78:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    fd7c:	mov	x3, x28
    fd80:	mov	x2, x21
    fd84:	ldr	x1, [x0, #4024]
    fd88:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
    fd8c:	add	x0, x0, #0x270
    fd90:	ldr	x1, [x1]
    fd94:	bl	1a328 <OnPrint@@Base+0x398>
    fd98:	bl	183f0 <__sanitizer_set_report_fd@@Base+0x54d0>
    fd9c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    fda0:	stp	x19, x20, [sp, #-96]!
    fda4:	stp	x23, x24, [sp, #32]
    fda8:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    fdac:	ldr	x19, [x23, #4016]
    fdb0:	stp	x21, x22, [sp, #16]
    fdb4:	mov	x21, x0
    fdb8:	stp	xzr, xzr, [sp, #64]
    fdbc:	ldr	x1, [x19]
    fdc0:	str	x30, [sp, #48]
    fdc4:	str	xzr, [sp, #80]
    fdc8:	cbz	x1, fedc <__sanitizer_install_malloc_and_free_hooks@@Base+0x3e4>
    fdcc:	sub	x0, x1, #0x1
    fdd0:	tst	x0, x1
    fdd4:	b.ne	ff48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x450>  // b.any
    fdd8:	neg	x19, x1
    fddc:	mov	x22, #0xffff                	// #65535
    fde0:	add	x1, x1, x22
    fde4:	mov	w2, #0x0                   	// #0
    fde8:	and	x19, x1, x19
    fdec:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    fdf0:	mov	x0, x19
    fdf4:	add	x1, x24, #0x178
    fdf8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    fdfc:	mov	x20, x0
    fe00:	ldr	x1, [sp, #64]
    fe04:	ldr	x2, [sp, #80]
    fe08:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    fe0c:	ldp	x0, x1, [sp, #64]
    fe10:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    fe14:	stp	x20, x19, [sp, #64]
    fe18:	ldr	x2, [sp, #80]
    fe1c:	cmp	x2, x22
    fe20:	b.ls	fe94 <__sanitizer_install_malloc_and_free_hooks@@Base+0x39c>  // b.plast
    fe24:	mov	x0, #0x10000               	// #65536
    fe28:	stp	x0, xzr, [sp, #80]
    fe2c:	mov	x2, x21
    fe30:	strb	wzr, [x20]
    fe34:	add	x0, sp, #0x40
    fe38:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    fe3c:	add	x1, x1, #0x98
    fe40:	bl	1a3b0 <OnPrint@@Base+0x420>
    fe44:	ldr	x19, [sp, #64]
    fe48:	b	fe5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x364>
    fe4c:	strb	wzr, [x0]
    fe50:	mov	x0, x19
    fe54:	add	x19, x1, #0x1
    fe58:	bl	179e0 <__sanitizer_set_report_fd@@Base+0x4ac0>
    fe5c:	mov	w1, #0xa                   	// #10
    fe60:	mov	x0, x19
    fe64:	bl	14868 <__sanitizer_set_report_fd@@Base+0x1948>
    fe68:	mov	x1, x0
    fe6c:	cbnz	x0, fe4c <__sanitizer_install_malloc_and_free_hooks@@Base+0x354>
    fe70:	ldrb	w0, [x19]
    fe74:	cbnz	w0, feb8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c0>
    fe78:	ldp	x0, x1, [sp, #64]
    fe7c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    fe80:	ldp	x21, x22, [sp, #16]
    fe84:	ldp	x23, x24, [sp, #32]
    fe88:	ldr	x30, [sp, #48]
    fe8c:	ldp	x19, x20, [sp], #96
    fe90:	ret
    fe94:	cmp	x19, x22
    fe98:	b.ls	feec <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f4>  // b.plast
    fe9c:	mov	x3, #0x10000               	// #65536
    fea0:	add	x0, x20, x2
    fea4:	mov	w1, #0x0                   	// #0
    fea8:	sub	x2, x3, x2
    feac:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
    feb0:	ldr	x20, [sp, #64]
    feb4:	b	fe24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x32c>
    feb8:	mov	x0, x19
    febc:	bl	179e0 <__sanitizer_set_report_fd@@Base+0x4ac0>
    fec0:	ldp	x0, x1, [sp, #64]
    fec4:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    fec8:	ldp	x21, x22, [sp, #16]
    fecc:	ldp	x23, x24, [sp, #32]
    fed0:	ldr	x30, [sp, #48]
    fed4:	ldp	x19, x20, [sp], #96
    fed8:	ret
    fedc:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    fee0:	mov	x1, x0
    fee4:	str	x0, [x19]
    fee8:	b	fdcc <__sanitizer_install_malloc_and_free_hooks@@Base+0x2d4>
    feec:	ldr	x23, [x23, #4016]
    fef0:	ldr	x0, [x23]
    fef4:	cbz	x0, ff58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x460>
    fef8:	sub	x1, x0, #0x1
    fefc:	tst	x1, x0
    ff00:	b.ne	ff48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x450>  // b.any
    ff04:	mov	x1, #0xffff                	// #65535
    ff08:	add	x19, x0, x1
    ff0c:	neg	x0, x0
    ff10:	add	x1, x24, #0x178
    ff14:	and	x19, x19, x0
    ff18:	mov	w2, #0x0                   	// #0
    ff1c:	mov	x0, x19
    ff20:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
    ff24:	ldr	x1, [sp, #64]
    ff28:	mov	x20, x0
    ff2c:	ldr	x2, [sp, #80]
    ff30:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
    ff34:	ldp	x0, x1, [sp, #64]
    ff38:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
    ff3c:	stp	x20, x19, [sp, #64]
    ff40:	ldr	x2, [sp, #80]
    ff44:	b	fe9c <__sanitizer_install_malloc_and_free_hooks@@Base+0x3a4>
    ff48:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
    ff4c:	add	x0, x0, #0x160
    ff50:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
    ff54:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    ff58:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
    ff5c:	str	x0, [x23]
    ff60:	b	fef8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x400>
    ff64:	nop
    ff68:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    ff6c:	ldr	x0, [x0, #4056]
    ff70:	ldp	x1, x2, [x0, #136]
    ff74:	orr	x1, x1, x2
    ff78:	cbnz	x1, ff84 <__sanitizer_install_malloc_and_free_hooks@@Base+0x48c>
    ff7c:	ldrb	w0, [x0, #152]
    ff80:	cbz	w0, ffa0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4a8>
    ff84:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
    ff88:	ldr	x0, [x0, #3992]
    ff8c:	cbz	x0, ffa0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4a8>
    ff90:	adrp	x0, f000 <__sancov_default_options@@Base+0x28b0>
    ff94:	mov	x1, #0x0                   	// #0
    ff98:	add	x0, x0, #0xb98
    ff9c:	b	16b20 <__sanitizer_set_report_fd@@Base+0x3c00>
    ffa0:	ret
    ffa4:	nop
    ffa8:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
    ffac:	str	x0, [x1, #3096]
    ffb0:	ret
    ffb4:	nop

000000000000ffb8 <__sanitizer_sandbox_on_notify@@Base>:
    ffb8:	str	x30, [sp, #-16]!
    ffbc:	bl	18ec0 <__sanitizer_set_report_fd@@Base+0x5fa0>
    ffc0:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
    ffc4:	ldr	x0, [x0, #3096]
    ffc8:	cbz	x0, ffd8 <__sanitizer_sandbox_on_notify@@Base+0x20>
    ffcc:	ldr	x30, [sp], #16
    ffd0:	mov	x16, x0
    ffd4:	br	x16
    ffd8:	ldr	x30, [sp], #16
    ffdc:	ret
    ffe0:	stp	x19, x20, [sp, #-64]!
    ffe4:	mov	x20, x0
    ffe8:	mov	x0, x1
    ffec:	stp	x21, x22, [sp, #16]
    fff0:	mov	x22, x2
    fff4:	mov	x21, x3
    fff8:	stp	x23, x30, [sp, #32]
    fffc:	bl	f258 <__sancov_default_options@@Base+0x2b08>
   10000:	cbz	x0, 100d4 <__sanitizer_sandbox_on_notify@@Base+0x11c>
   10004:	mov	x19, x0
   10008:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1000c:	ldr	x0, [x0, #4056]
   10010:	ldr	x23, [x0, #168]
   10014:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x2c48>
   10018:	mov	x4, x19
   1001c:	mov	x5, x0
   10020:	mov	x3, x23
   10024:	adrp	x6, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10028:	add	x6, x6, #0x358
   1002c:	mov	x1, #0x1000                	// #4096
   10030:	mov	x0, x20
   10034:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10038:	add	x2, x2, #0x360
   1003c:	bl	19f98 <OnPrint@@Base+0x8>
   10040:	add	x2, sp, #0x3c
   10044:	mov	x0, x20
   10048:	mov	w1, #0x1                   	// #1
   1004c:	bl	18008 <__sanitizer_set_report_fd@@Base+0x50e8>
   10050:	mov	w19, w0
   10054:	cmn	w0, #0x1
   10058:	b.eq	100bc <__sanitizer_sandbox_on_notify@@Base+0x104>  // b.none
   1005c:	mov	w0, w19
   10060:	mov	x4, #0x0                   	// #0
   10064:	mov	x3, #0x0                   	// #0
   10068:	mov	x2, #0x8                   	// #8
   1006c:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10070:	add	x1, x1, #0x440
   10074:	bl	180a8 <__sanitizer_set_report_fd@@Base+0x5188>
   10078:	mov	x1, x22
   1007c:	lsl	x2, x21, #3
   10080:	mov	x4, #0x0                   	// #0
   10084:	mov	x3, #0x0                   	// #0
   10088:	mov	w0, w19
   1008c:	bl	180a8 <__sanitizer_set_report_fd@@Base+0x5188>
   10090:	mov	w0, w19
   10094:	bl	18050 <__sanitizer_set_report_fd@@Base+0x5130>
   10098:	mov	x2, x21
   1009c:	mov	x1, x20
   100a0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   100a4:	add	x0, x0, #0x3b0
   100a8:	bl	1a2a0 <OnPrint@@Base+0x310>
   100ac:	ldp	x21, x22, [sp, #16]
   100b0:	ldp	x23, x30, [sp, #32]
   100b4:	ldp	x19, x20, [sp], #64
   100b8:	ret
   100bc:	ldr	w2, [sp, #60]
   100c0:	mov	x1, x20
   100c4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   100c8:	add	x0, x0, #0x370
   100cc:	bl	1a328 <OnPrint@@Base+0x398>
   100d0:	b	1005c <__sanitizer_sandbox_on_notify@@Base+0xa4>
   100d4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   100d8:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   100dc:	add	x2, x2, #0x2f8
   100e0:	add	x0, x0, #0x308
   100e4:	mov	x4, #0x0                   	// #0
   100e8:	mov	x3, #0x0                   	// #0
   100ec:	mov	w1, #0x28                  	// #40
   100f0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   100f4:	nop
   100f8:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   100fc:	ldrb	w2, [x1, #3104]
   10100:	cbz	w2, 10108 <__sanitizer_sandbox_on_notify@@Base+0x150>
   10104:	ret
   10108:	stp	x19, x30, [sp, #-16]!
   1010c:	adrp	x19, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   10110:	and	w0, w0, #0xff
   10114:	ldr	x19, [x19, #3952]
   10118:	strb	w0, [x1, #3104]
   1011c:	mov	x0, x19
   10120:	bl	18b70 <__sanitizer_set_report_fd@@Base+0x5c50>
   10124:	mov	x0, x19
   10128:	ldp	x19, x30, [sp], #16
   1012c:	b	22940 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6080>

0000000000010130 <__sanitizer_cov_trace_pc_guard@@Base>:
   10130:	ldr	w3, [x0]
   10134:	cbnz	w3, 1013c <__sanitizer_cov_trace_pc_guard@@Base+0xc>
   10138:	ret
   1013c:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10140:	add	x0, x0, #0xc20
   10144:	add	x0, x0, #0x8
   10148:	str	x30, [sp, #-16]!
   1014c:	sub	w3, w3, #0x1
   10150:	ldr	x4, [x0, #24]
   10154:	ldr	x0, [x0, #8]
   10158:	cmp	x3, x4
   1015c:	b.cs	10178 <__sanitizer_cov_trace_pc_guard@@Base+0x48>  // b.hs, b.nlast
   10160:	ldr	x1, [x0, x3, lsl #3]
   10164:	cbnz	x1, 10170 <__sanitizer_cov_trace_pc_guard@@Base+0x40>
   10168:	sub	x30, x30, #0x1
   1016c:	str	x30, [x0, x3, lsl #3]
   10170:	ldr	x30, [sp], #16
   10174:	ret
   10178:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1017c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   10180:	add	x2, x2, #0x190
   10184:	add	x0, x0, #0x1a8
   10188:	mov	w1, #0x1b6                 	// #438
   1018c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000010190 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   10190:	cmp	x0, x1
   10194:	b.eq	1026c <__sanitizer_cov_trace_pc_guard_init@@Base+0xdc>  // b.none
   10198:	stp	x19, x20, [sp, #-48]!
   1019c:	mov	x19, x0
   101a0:	ldr	w0, [x0]
   101a4:	str	x30, [sp, #40]
   101a8:	cbz	w0, 101b8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x28>
   101ac:	ldr	x30, [sp, #40]
   101b0:	ldp	x19, x20, [sp], #48
   101b4:	ret
   101b8:	stp	x21, x22, [sp, #16]
   101bc:	adrp	x22, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   101c0:	add	x0, x22, #0xc20
   101c4:	mov	x20, x1
   101c8:	add	x21, x0, #0x8
   101cc:	ldrb	w1, [x0, #8]
   101d0:	cbz	w1, 10270 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe0>
   101d4:	cmp	x19, x20
   101d8:	mov	x2, x19
   101dc:	b.eq	10320 <__sanitizer_cov_trace_pc_guard_init@@Base+0x190>  // b.none
   101e0:	add	x0, x22, #0xc20
   101e4:	ldr	x0, [x0, #32]
   101e8:	mov	w21, w0
   101ec:	b.cs	1021c <__sanitizer_cov_trace_pc_guard_init@@Base+0x8c>  // b.hs, b.nlast
   101f0:	mov	w1, w0
   101f4:	nop
   101f8:	add	w1, w1, #0x1
   101fc:	str	w1, [x19], #4
   10200:	cmp	x20, x19
   10204:	b.hi	101f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x68>  // b.pmore
   10208:	sub	x20, x20, #0x1
   1020c:	add	w21, w21, #0x1
   10210:	sub	x20, x20, x2
   10214:	lsr	x20, x20, #2
   10218:	add	w21, w21, w20
   1021c:	cmp	x0, w21, uxtw
   10220:	mov	w19, w21
   10224:	b.cs	10254 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc4>  // b.hs, b.nlast
   10228:	add	x1, x22, #0xc20
   1022c:	add	x1, x1, #0x8
   10230:	ldr	x2, [x1, #16]
   10234:	cmp	x19, x2, lsr #3
   10238:	b.hi	102b0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x120>  // b.pmore
   1023c:	ldr	x21, [x1, #8]
   10240:	sub	x2, x19, x0
   10244:	mov	w1, #0x0                   	// #0
   10248:	add	x0, x21, x0, lsl #3
   1024c:	lsl	x2, x2, #3
   10250:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   10254:	add	x22, x22, #0xc20
   10258:	ldr	x30, [sp, #40]
   1025c:	str	x19, [x22, #32]
   10260:	ldp	x21, x22, [sp, #16]
   10264:	ldp	x19, x20, [sp], #48
   10268:	ret
   1026c:	ret
   10270:	mov	w1, #0x1                   	// #1
   10274:	strb	w1, [x0, #8]
   10278:	bl	c770 <__sancov_default_options@@Base+0x20>
   1027c:	ldr	w0, [x19]
   10280:	stp	xzr, xzr, [x21, #8]
   10284:	str	xzr, [x21, #24]
   10288:	cbz	w0, 101d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>
   1028c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10290:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10294:	add	x2, x2, #0x3d8
   10298:	add	x0, x0, #0x308
   1029c:	mov	x4, #0x0                   	// #0
   102a0:	mov	x3, #0x0                   	// #0
   102a4:	mov	w1, #0x77                  	// #119
   102a8:	str	x23, [sp, #32]
   102ac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   102b0:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   102b4:	ldr	x20, [x20, #4016]
   102b8:	ldr	x0, [x20]
   102bc:	str	x23, [sp, #32]
   102c0:	cbz	x0, 10344 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b4>
   102c4:	sub	x20, x0, #0x1
   102c8:	tst	x0, x20
   102cc:	b.ne	10350 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c0>  // b.any
   102d0:	add	x23, x22, #0xc20
   102d4:	add	x20, x20, w21, uxtw #3
   102d8:	neg	x0, x0
   102dc:	mov	w2, #0x0                   	// #0
   102e0:	and	x20, x20, x0
   102e4:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   102e8:	mov	x0, x20
   102ec:	add	x1, x1, #0x178
   102f0:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   102f4:	mov	x21, x0
   102f8:	ldr	x1, [x23, #16]
   102fc:	ldr	x2, [x23, #32]
   10300:	lsl	x2, x2, #3
   10304:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   10308:	ldp	x0, x1, [x23, #16]
   1030c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   10310:	stp	x21, x20, [x23, #16]
   10314:	ldr	x0, [x23, #32]
   10318:	ldr	x23, [sp, #32]
   1031c:	b	10240 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb0>
   10320:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10324:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10328:	add	x2, x2, #0x3f0
   1032c:	add	x0, x0, #0x308
   10330:	mov	x4, x19
   10334:	mov	x3, x19
   10338:	mov	w1, #0x78                  	// #120
   1033c:	str	x23, [sp, #32]
   10340:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10344:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   10348:	str	x0, [x20]
   1034c:	b	102c4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x134>
   10350:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   10354:	add	x0, x0, #0x160
   10358:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1035c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

0000000000010360 <__sanitizer_cov_reset@@Base>:
   10360:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10364:	add	x0, x0, #0xc20
   10368:	add	x0, x0, #0x8
   1036c:	ldr	x2, [x0, #24]
   10370:	ldr	x0, [x0, #8]
   10374:	cbz	x2, 10384 <__sanitizer_cov_reset@@Base+0x24>
   10378:	lsl	x2, x2, #3
   1037c:	mov	w1, #0x0                   	// #0
   10380:	b	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   10384:	str	x30, [sp, #-16]!
   10388:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1038c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   10390:	add	x2, x2, #0x190
   10394:	add	x0, x0, #0x1a8
   10398:	mov	x4, #0x0                   	// #0
   1039c:	mov	x3, #0x0                   	// #0
   103a0:	mov	w1, #0x1b6                 	// #438
   103a4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

00000000000103a8 <__sanitizer_cov_trace_cmp@@Base>:
   103a8:	ret
   103ac:	nop

00000000000103b0 <__sanitizer_cov_trace_cmp1@@Base>:
   103b0:	ret
   103b4:	nop

00000000000103b8 <__sanitizer_cov_trace_cmp2@@Base>:
   103b8:	ret
   103bc:	nop

00000000000103c0 <__sanitizer_cov_trace_cmp4@@Base>:
   103c0:	ret
   103c4:	nop

00000000000103c8 <__sanitizer_cov_trace_cmp8@@Base>:
   103c8:	ret
   103cc:	nop

00000000000103d0 <__sanitizer_cov_trace_const_cmp1@@Base>:
   103d0:	ret
   103d4:	nop

00000000000103d8 <__sanitizer_cov_trace_const_cmp2@@Base>:
   103d8:	ret
   103dc:	nop

00000000000103e0 <__sanitizer_cov_trace_const_cmp4@@Base>:
   103e0:	ret
   103e4:	nop

00000000000103e8 <__sanitizer_cov_trace_const_cmp8@@Base>:
   103e8:	ret
   103ec:	nop

00000000000103f0 <__sanitizer_cov_trace_switch@@Base>:
   103f0:	ret
   103f4:	nop

00000000000103f8 <__sanitizer_cov_trace_div4@@Base>:
   103f8:	ret
   103fc:	nop

0000000000010400 <__sanitizer_cov_trace_div8@@Base>:
   10400:	ret
   10404:	nop

0000000000010408 <__sanitizer_cov_trace_gep@@Base>:
   10408:	ret
   1040c:	nop

0000000000010410 <__sanitizer_cov_trace_pc_indir@@Base>:
   10410:	ret
   10414:	nop

0000000000010418 <__sanitizer_cov_8bit_counters_init@@Base>:
   10418:	ret
   1041c:	nop

0000000000010420 <__sanitizer_cov_pcs_init@@Base>:
   10420:	ret
   10424:	nop

0000000000010428 <__sanitizer_dump_coverage@@Base>:
   10428:	cbnz	x1, 10430 <__sanitizer_dump_coverage@@Base+0x8>
   1042c:	ret
   10430:	stp	x19, x20, [sp, #-128]!
   10434:	mov	x20, x1
   10438:	mov	x19, x0
   1043c:	mov	x2, #0x0                   	// #0
   10440:	mov	x1, #0x0                   	// #0
   10444:	mov	x0, #0x1000                	// #4096
   10448:	stp	x21, x22, [sp, #16]
   1044c:	lsl	x22, x20, #3
   10450:	stp	x23, x24, [sp, #32]
   10454:	mov	w23, #0x0                   	// #0
   10458:	stp	x25, x26, [sp, #48]
   1045c:	mov	x26, #0x0                   	// #0
   10460:	stp	x27, x28, [sp, #64]
   10464:	adrp	x28, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10468:	mov	x27, #0x0                   	// #0
   1046c:	str	x30, [sp, #80]
   10470:	bl	cb90 <__sancov_default_options@@Base+0x440>
   10474:	mov	x2, #0x0                   	// #0
   10478:	mov	x1, #0x0                   	// #0
   1047c:	mov	x25, x0
   10480:	mov	x0, #0x1000                	// #4096
   10484:	bl	cb90 <__sancov_default_options@@Base+0x440>
   10488:	mov	x24, x0
   1048c:	mov	x2, #0x0                   	// #0
   10490:	mov	x1, #0x0                   	// #0
   10494:	mov	x0, x22
   10498:	bl	cb90 <__sancov_default_options@@Base+0x440>
   1049c:	mov	x1, x19
   104a0:	mov	x2, x22
   104a4:	mov	x21, x0
   104a8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   104ac:	mov	x0, x21
   104b0:	mov	x1, x20
   104b4:	mov	w2, #0x0                   	// #0
   104b8:	bl	10618 <__sanitizer_cov_dump@@Base+0x8>
   104bc:	add	x0, x28, #0x408
   104c0:	mov	x19, #0x0                   	// #0
   104c4:	str	x0, [sp, #104]
   104c8:	b	104fc <__sanitizer_dump_coverage@@Base+0xd4>
   104cc:	cbnz	w23, 105b0 <__sanitizer_dump_coverage@@Base+0x188>
   104d0:	mov	x3, x28
   104d4:	mov	x0, x22
   104d8:	mov	x26, x5
   104dc:	mov	w23, w4
   104e0:	mov	x1, x24
   104e4:	mov	x27, x19
   104e8:	mov	x2, #0x1000                	// #4096
   104ec:	bl	6410 <__sanitizer_get_module_and_offset_for_pc@plt>
   104f0:	add	x19, x19, #0x1
   104f4:	cmp	x20, x19
   104f8:	b.eq	1054c <__sanitizer_dump_coverage@@Base+0x124>  // b.none
   104fc:	ldr	x22, [x21, x19, lsl #3]
   10500:	add	x28, x21, x19, lsl #3
   10504:	mov	x3, x28
   10508:	mov	x2, #0x0                   	// #0
   1050c:	mov	x0, x22
   10510:	mov	x1, #0x0                   	// #0
   10514:	cbz	x22, 104f0 <__sanitizer_dump_coverage@@Base+0xc8>
   10518:	bl	6410 <__sanitizer_get_module_and_offset_for_pc@plt>
   1051c:	eor	w1, w23, #0x1
   10520:	cbz	w0, 105a0 <__sanitizer_dump_coverage@@Base+0x178>
   10524:	ldr	x5, [x21, x19, lsl #3]
   10528:	sub	x5, x22, x5
   1052c:	cmp	x5, x26
   10530:	cset	w4, ne  // ne = any
   10534:	orr	w4, w4, w1
   10538:	cbnz	w4, 104cc <__sanitizer_dump_coverage@@Base+0xa4>
   1053c:	add	x19, x19, #0x1
   10540:	mov	w23, #0x1                   	// #1
   10544:	cmp	x20, x19
   10548:	b.ne	104fc <__sanitizer_dump_coverage@@Base+0xd4>  // b.any
   1054c:	cbz	w23, 10564 <__sanitizer_dump_coverage@@Base+0x13c>
   10550:	sub	x3, x20, x27
   10554:	add	x2, x21, x27, lsl #3
   10558:	mov	x1, x24
   1055c:	mov	x0, x25
   10560:	bl	ffe0 <__sanitizer_sandbox_on_notify@@Base+0x28>
   10564:	mov	x0, x25
   10568:	mov	x1, #0x0                   	// #0
   1056c:	bl	cde8 <__sancov_default_options@@Base+0x698>
   10570:	mov	x0, x24
   10574:	mov	x1, #0x0                   	// #0
   10578:	bl	cde8 <__sancov_default_options@@Base+0x698>
   1057c:	mov	x0, x21
   10580:	mov	x1, #0x0                   	// #0
   10584:	ldp	x21, x22, [sp, #16]
   10588:	ldp	x23, x24, [sp, #32]
   1058c:	ldp	x25, x26, [sp, #48]
   10590:	ldp	x27, x28, [sp, #64]
   10594:	ldr	x30, [sp, #80]
   10598:	ldp	x19, x20, [sp], #128
   1059c:	b	cde8 <__sancov_default_options@@Base+0x698>
   105a0:	ldr	x0, [sp, #104]
   105a4:	mov	x1, x22
   105a8:	bl	1a2a0 <OnPrint@@Base+0x310>
   105ac:	b	104f0 <__sanitizer_dump_coverage@@Base+0xc8>
   105b0:	sub	x3, x19, x27
   105b4:	add	x2, x21, x27, lsl #3
   105b8:	mov	x1, x24
   105bc:	mov	x0, x25
   105c0:	str	x5, [sp, #112]
   105c4:	str	w4, [sp, #124]
   105c8:	bl	ffe0 <__sanitizer_sandbox_on_notify@@Base+0x28>
   105cc:	ldr	w4, [sp, #124]
   105d0:	ldr	x5, [sp, #112]
   105d4:	b	104d0 <__sanitizer_dump_coverage@@Base+0xa8>

00000000000105d8 <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   105d8:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   105dc:	add	x0, x0, #0xc20
   105e0:	add	x1, x0, #0x8
   105e4:	ldrb	w0, [x0, #8]
   105e8:	cbz	w0, 105fc <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x24>
   105ec:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   105f0:	ldr	x0, [x0, #4056]
   105f4:	ldrb	w0, [x0, #161]
   105f8:	cbnz	w0, 10600 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x28>
   105fc:	ret
   10600:	ldr	x0, [x1, #8]
   10604:	ldr	x1, [x1, #24]
   10608:	b	6650 <__sanitizer_dump_coverage@plt>
   1060c:	nop

0000000000010610 <__sanitizer_cov_dump@@Base>:
   10610:	b	67d0 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   10614:	nop
   10618:	cmp	x1, #0x1
   1061c:	mov	x3, #0x1                   	// #1
   10620:	b.ls	10714 <__sanitizer_cov_dump@@Base+0x104>  // b.plast
   10624:	nop
   10628:	ldr	x5, [x0, x3, lsl #3]
   1062c:	mov	x2, x3
   10630:	sub	x4, x2, #0x1
   10634:	mov	x6, x2
   10638:	lsr	x2, x4, #1
   1063c:	ldr	x4, [x0, x2, lsl #3]
   10640:	cmp	x4, x5
   10644:	b.cs	10654 <__sanitizer_cov_dump@@Base+0x44>  // b.hs, b.nlast
   10648:	str	x4, [x0, x6, lsl #3]
   1064c:	str	x5, [x0, x2, lsl #3]
   10650:	cbnz	x2, 10630 <__sanitizer_cov_dump@@Base+0x20>
   10654:	add	x2, x3, #0x1
   10658:	cmp	x1, x2
   1065c:	b.eq	106ac <__sanitizer_cov_dump@@Base+0x9c>  // b.none
   10660:	mov	x3, x2
   10664:	b	10628 <__sanitizer_cov_dump@@Base+0x18>
   10668:	cmp	x1, x3
   1066c:	b.cs	106a4 <__sanitizer_cov_dump@@Base+0x94>  // b.hs, b.nlast
   10670:	lsl	x5, x5, #4
   10674:	ldr	x4, [x0, x2, lsl #3]
   10678:	ldr	x5, [x0, x5]
   1067c:	cmp	x5, x4
   10680:	b.ls	106a4 <__sanitizer_cov_dump@@Base+0x94>  // b.plast
   10684:	cmp	x1, x2
   10688:	b.eq	106a4 <__sanitizer_cov_dump@@Base+0x94>  // b.none
   1068c:	ldr	x5, [x0, x1, lsl #3]
   10690:	cmp	x1, x3
   10694:	ldr	x4, [x0, x2, lsl #3]
   10698:	str	x5, [x0, x2, lsl #3]
   1069c:	str	x4, [x0, x1, lsl #3]
   106a0:	b.cc	1070c <__sanitizer_cov_dump@@Base+0xfc>  // b.lo, b.ul, b.last
   106a4:	subs	x3, x3, #0x1
   106a8:	b.eq	10714 <__sanitizer_cov_dump@@Base+0x104>  // b.none
   106ac:	ldr	x4, [x0, x3, lsl #3]
   106b0:	mov	x2, #0x0                   	// #0
   106b4:	ldr	x1, [x0]
   106b8:	str	x4, [x0]
   106bc:	str	x1, [x0, x3, lsl #3]
   106c0:	lsl	x1, x2, #1
   106c4:	add	x5, x2, #0x1
   106c8:	add	x4, x1, #0x1
   106cc:	add	x1, x1, #0x2
   106d0:	cmp	x4, x3
   106d4:	b.cs	10668 <__sanitizer_cov_dump@@Base+0x58>  // b.hs, b.nlast
   106d8:	ldr	x7, [x0, x2, lsl #3]
   106dc:	ldr	x6, [x0, x4, lsl #3]
   106e0:	cmp	x7, x6
   106e4:	b.cs	10668 <__sanitizer_cov_dump@@Base+0x58>  // b.hs, b.nlast
   106e8:	cmp	x1, x3
   106ec:	b.cc	10718 <__sanitizer_cov_dump@@Base+0x108>  // b.lo, b.ul, b.last
   106f0:	cmp	x4, x2
   106f4:	b.eq	106a4 <__sanitizer_cov_dump@@Base+0x94>  // b.none
   106f8:	ldr	x6, [x0, x4, lsl #3]
   106fc:	mov	x1, x4
   10700:	ldr	x5, [x0, x2, lsl #3]
   10704:	str	x6, [x0, x2, lsl #3]
   10708:	str	x5, [x0, x4, lsl #3]
   1070c:	mov	x2, x1
   10710:	b	106c0 <__sanitizer_cov_dump@@Base+0xb0>
   10714:	ret
   10718:	lsl	x5, x5, #4
   1071c:	ldr	x5, [x0, x5]
   10720:	cmp	x6, x5
   10724:	csel	x1, x1, x4, cc  // cc = lo, ul, last
   10728:	b	10684 <__sanitizer_cov_dump@@Base+0x74>
   1072c:	nop
   10730:	mov	x0, #0x0                   	// #0
   10734:	ret
   10738:	ret
   1073c:	nop
   10740:	ldr	x1, [x1, #16]
   10744:	ldrb	w0, [x1, #2224]
   10748:	cbz	w0, 10758 <__sanitizer_cov_dump@@Base+0x148>
   1074c:	add	x0, x1, #0x628
   10750:	strb	wzr, [x1, #2224]
   10754:	ret
   10758:	mov	x0, #0x0                   	// #0
   1075c:	ret
   10760:	stp	x19, x30, [sp, #-16]!
   10764:	mov	x2, #0x0                   	// #0
   10768:	mov	x19, x1
   1076c:	mov	x0, #0x8b8                 	// #2232
   10770:	mov	x1, #0x0                   	// #0
   10774:	bl	cb90 <__sancov_default_options@@Base+0x440>
   10778:	mov	x3, x0
   1077c:	str	x19, [x0]
   10780:	str	xzr, [x3, #8]!
   10784:	str	xzr, [x3, #520]
   10788:	str	xzr, [x3, #1040]
   1078c:	str	xzr, [x3, #1560]
   10790:	strb	wzr, [x0, #2224]
   10794:	ldp	x19, x30, [sp], #16
   10798:	ret
   1079c:	nop
   107a0:	mov	x0, x1
   107a4:	mov	x1, #0x0                   	// #0
   107a8:	b	cde8 <__sancov_default_options@@Base+0x698>
   107ac:	nop
   107b0:	ldr	x1, [x1, #16]
   107b4:	ldr	x2, [x2]
   107b8:	ldr	x3, [x1, #528]
   107bc:	and	x0, x2, #0xfffffffffffff000
   107c0:	cmp	x3, x0
   107c4:	b.eq	107cc <__sanitizer_cov_dump@@Base+0x1bc>  // b.none
   107c8:	ret
   107cc:	ldr	x7, [x1, #1048]
   107d0:	add	x6, x1, #0x8
   107d4:	and	x4, x2, #0xfff
   107d8:	cbz	x7, 10824 <__sanitizer_cov_dump@@Base+0x214>
   107dc:	sub	x8, x7, #0x1
   107e0:	mov	x0, x8
   107e4:	tbnz	x8, #63, 10824 <__sanitizer_cov_dump@@Base+0x214>
   107e8:	add	x5, x1, #0x218
   107ec:	b	107fc <__sanitizer_cov_dump@@Base+0x1ec>
   107f0:	sub	x0, x0, #0x1
   107f4:	cmn	x0, #0x1
   107f8:	b.eq	10824 <__sanitizer_cov_dump@@Base+0x214>  // b.none
   107fc:	ldr	x3, [x5, x0, lsl #3]
   10800:	cmp	x4, x3
   10804:	b.ne	107f0 <__sanitizer_cov_dump@@Base+0x1e0>  // b.any
   10808:	add	x1, x1, x7, lsl #3
   1080c:	add	x0, x0, #0x42
   10810:	str	x8, [x6, #1040]
   10814:	ldr	x2, [x1, #528]
   10818:	str	x2, [x6, x0, lsl #3]
   1081c:	str	x4, [x1, #528]
   10820:	ret
   10824:	ldr	x7, [x1, #8]
   10828:	lsr	x3, x4, #6
   1082c:	mov	x0, #0x1                   	// #1
   10830:	lsl	x5, x0, x3
   10834:	tst	x7, x5
   10838:	b.eq	107c8 <__sanitizer_cov_dump@@Base+0x1b8>  // b.none
   1083c:	add	x3, x3, x0
   10840:	lsl	x0, x0, x2
   10844:	ldr	x2, [x6, x3, lsl #3]
   10848:	bic	x0, x2, x0
   1084c:	str	x0, [x6, x3, lsl #3]
   10850:	cbz	x0, 108cc <__sanitizer_cov_dump@@Base+0x2bc>
   10854:	cmp	x2, x0
   10858:	b.eq	107c8 <__sanitizer_cov_dump@@Base+0x1b8>  // b.none
   1085c:	ldr	x5, [x6, #1560]
   10860:	cbz	x5, 107c8 <__sanitizer_cov_dump@@Base+0x1b8>
   10864:	sub	x7, x5, #0x1
   10868:	mov	x0, x7
   1086c:	tbnz	x7, #63, 107c8 <__sanitizer_cov_dump@@Base+0x1b8>
   10870:	add	x1, x1, #0x420
   10874:	mov	w3, w4
   10878:	b	10888 <__sanitizer_cov_dump@@Base+0x278>
   1087c:	sub	x0, x0, #0x1
   10880:	cmn	x0, #0x1
   10884:	b.eq	107c8 <__sanitizer_cov_dump@@Base+0x1b8>  // b.none
   10888:	lsl	x2, x0, #3
   1088c:	ldr	w2, [x1, x2]
   10890:	cmp	w3, w2
   10894:	b.ne	1087c <__sanitizer_cov_dump@@Base+0x26c>  // b.any
   10898:	add	x3, x6, x0, lsl #3
   1089c:	add	x1, x5, #0x82
   108a0:	add	x5, x6, x7, lsl #3
   108a4:	mov	x0, x3
   108a8:	lsl	x1, x1, #3
   108ac:	add	x2, x6, x1
   108b0:	ldr	w3, [x3, #1052]
   108b4:	ldr	x5, [x5, #1048]
   108b8:	str	x5, [x0, #1048]
   108bc:	str	w4, [x6, x1]
   108c0:	str	w3, [x2, #4]
   108c4:	str	x7, [x6, #1560]
   108c8:	ret
   108cc:	bic	x5, x7, x5
   108d0:	str	x5, [x1, #8]
   108d4:	b	10854 <__sanitizer_cov_dump@@Base+0x244>
   108d8:	ldr	x3, [x1]
   108dc:	stp	x19, x30, [sp, #-16]!
   108e0:	mov	x19, x2
   108e4:	adrp	x2, 11000 <__sanitizer_cov_dump@@Base+0x9f0>
   108e8:	add	x2, x2, #0xd98
   108ec:	ldr	x3, [x3]
   108f0:	str	xzr, [x19]
   108f4:	mov	w0, #0x0                   	// #0
   108f8:	cmp	x3, x2
   108fc:	b.ne	1090c <__sanitizer_cov_dump@@Base+0x2fc>  // b.any
   10900:	str	w0, [x19, #8]
   10904:	ldp	x19, x30, [sp], #16
   10908:	ret
   1090c:	mov	x0, x1
   10910:	blr	x3
   10914:	str	w0, [x19, #8]
   10918:	ldp	x19, x30, [sp], #16
   1091c:	ret
   10920:	stp	x19, x20, [sp, #-32]!
   10924:	mov	x20, x0
   10928:	ldr	x0, [x2]
   1092c:	str	x30, [sp, #16]
   10930:	cbnz	x0, 10940 <__sanitizer_cov_dump@@Base+0x330>
   10934:	ldr	x30, [sp, #16]
   10938:	ldp	x19, x20, [sp], #32
   1093c:	ret
   10940:	add	x0, x20, #0x8
   10944:	mov	x19, x2
   10948:	mov	w2, #0x1                   	// #1
   1094c:	ldxrb	w1, [x0]
   10950:	stxrb	w3, w2, [x0]
   10954:	cbnz	w3, 1094c <__sanitizer_cov_dump@@Base+0x33c>
   10958:	dmb	ish
   1095c:	tst	w1, #0xff
   10960:	b.eq	10968 <__sanitizer_cov_dump@@Base+0x358>  // b.none
   10964:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   10968:	ldr	x3, [x19]
   1096c:	cbz	x3, 10980 <__sanitizer_cov_dump@@Base+0x370>
   10970:	ldr	x0, [x20, #16]
   10974:	and	x1, x3, #0xfffffffffffff000
   10978:	cmp	x1, x0
   1097c:	b.eq	10998 <__sanitizer_cov_dump@@Base+0x388>  // b.none
   10980:	str	xzr, [x19]
   10984:	dmb	ish
   10988:	strb	wzr, [x20, #8]
   1098c:	ldr	x30, [sp, #16]
   10990:	ldp	x19, x20, [sp], #32
   10994:	ret
   10998:	cmp	x3, #0xfff
   1099c:	b.ls	10a58 <__sanitizer_cov_dump@@Base+0x448>  // b.plast
   109a0:	ubfx	x0, x3, #6, #6
   109a4:	mov	x1, #0x1                   	// #1
   109a8:	ldr	x6, [x20, #24]
   109ac:	add	x4, x0, x1
   109b0:	and	x2, x3, #0xfff
   109b4:	lsl	x0, x1, x0
   109b8:	lsl	x5, x4, #3
   109bc:	tst	x0, x6
   109c0:	lsl	x3, x1, x3
   109c4:	b.ne	109f4 <__sanitizer_cov_dump@@Base+0x3e4>  // b.any
   109c8:	ldr	x1, [x20, #544]
   109cc:	add	x5, x20, #0x220
   109d0:	tst	x0, x1
   109d4:	b.ne	10a24 <__sanitizer_cov_dump@@Base+0x414>  // b.any
   109d8:	orr	x0, x0, x1
   109dc:	str	x0, [x20, #544]
   109e0:	str	x3, [x5, x4, lsl #3]
   109e4:	add	x2, x2, x2, lsl #6
   109e8:	add	x2, x20, x2, lsl #3
   109ec:	str	xzr, [x2, #1584]
   109f0:	b	10980 <__sanitizer_cov_dump@@Base+0x370>
   109f4:	add	x5, x20, x5
   109f8:	ldr	x1, [x5, #24]
   109fc:	tst	x3, x1
   10a00:	b.eq	109c8 <__sanitizer_cov_dump@@Base+0x3b8>  // b.none
   10a04:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10a08:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10a0c:	add	x2, x2, #0x520
   10a10:	add	x0, x0, #0x4d8
   10a14:	mov	x4, #0x0                   	// #0
   10a18:	mov	x3, #0x0                   	// #0
   10a1c:	mov	w1, #0xc0                  	// #192
   10a20:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10a24:	ldr	x0, [x5, x4, lsl #3]
   10a28:	orr	x3, x3, x0
   10a2c:	str	x3, [x5, x4, lsl #3]
   10a30:	cmp	x0, x3
   10a34:	b.ne	109e4 <__sanitizer_cov_dump@@Base+0x3d4>  // b.any
   10a38:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10a3c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10a40:	add	x2, x2, #0x550
   10a44:	add	x0, x0, #0x4d8
   10a48:	mov	x4, #0x0                   	// #0
   10a4c:	mov	x3, #0x0                   	// #0
   10a50:	mov	w1, #0xc1                  	// #193
   10a54:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10a58:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10a5c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10a60:	add	x2, x2, #0x4c0
   10a64:	add	x0, x0, #0x4d8
   10a68:	mov	x4, #0x1000                	// #4096
   10a6c:	mov	w1, #0x172                 	// #370
   10a70:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10a74:	nop
   10a78:	stp	x19, x30, [sp, #-16]!
   10a7c:	mov	x19, x0
   10a80:	mov	x0, #0xa50                 	// #2640
   10a84:	mov	w2, #0x0                   	// #0
   10a88:	movk	x0, #0x41, lsl #16
   10a8c:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10a90:	add	x1, x1, #0x578
   10a94:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   10a98:	add	x4, x0, #0x410, lsl #12
   10a9c:	strb	wzr, [x0, #8]
   10aa0:	adrp	x1, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   10aa4:	add	x3, x1, #0xd78
   10aa8:	add	x2, x0, #0x208, lsl #12
   10aac:	str	x3, [x0]
   10ab0:	add	x1, x0, #0x630
   10ab4:	ldrb	w3, [x19]
   10ab8:	add	x2, x2, #0x630
   10abc:	strb	w3, [x4, #2632]
   10ac0:	stp	xzr, xzr, [x0, #16]
   10ac4:	str	xzr, [x0, #544]
   10ac8:	str	xzr, [x1]
   10acc:	add	x1, x1, #0x208
   10ad0:	cmp	x1, x2
   10ad4:	b.ne	10ac8 <__sanitizer_cov_dump@@Base+0x4b8>  // b.any
   10ad8:	add	x1, x0, #0x10
   10adc:	add	x1, x1, #0x410, lsl #12
   10ae0:	str	xzr, [x1, #2608]
   10ae4:	ldp	x19, x30, [sp], #16
   10ae8:	ret
   10aec:	nop
   10af0:	add	x5, x0, #0x410, lsl #12
   10af4:	strb	wzr, [x0, #8]
   10af8:	add	x3, x0, #0x208, lsl #12
   10afc:	adrp	x4, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   10b00:	ldrb	w1, [x1]
   10b04:	add	x4, x4, #0xd78
   10b08:	str	x4, [x0]
   10b0c:	add	x2, x0, #0x630
   10b10:	add	x3, x3, #0x630
   10b14:	strb	w1, [x5, #2632]
   10b18:	stp	xzr, xzr, [x0, #16]
   10b1c:	str	xzr, [x0, #544]
   10b20:	str	xzr, [x2]
   10b24:	add	x2, x2, #0x208
   10b28:	cmp	x2, x3
   10b2c:	b.ne	10b20 <__sanitizer_cov_dump@@Base+0x510>  // b.any
   10b30:	add	x0, x0, #0x10
   10b34:	add	x0, x0, #0x410, lsl #12
   10b38:	str	xzr, [x0, #2608]
   10b3c:	ret
   10b40:	ldr	x3, [x2]
   10b44:	cbz	x3, 10b58 <__sanitizer_cov_dump@@Base+0x548>
   10b48:	ldr	x4, [x0, #16]
   10b4c:	and	x3, x3, #0xfffffffffffff000
   10b50:	cmp	x3, x4
   10b54:	b.eq	10e1c <__sanitizer_cov_dump@@Base+0x80c>  // b.none
   10b58:	stp	x19, x20, [sp, #-32]!
   10b5c:	ldr	x9, [x0, #24]
   10b60:	str	x30, [sp, #16]
   10b64:	cbz	x9, 10bd0 <__sanitizer_cov_dump@@Base+0x5c0>
   10b68:	mov	x4, x0
   10b6c:	rbit	x3, x9
   10b70:	clz	x3, x3
   10b74:	mov	x5, #0x1                   	// #1
   10b78:	add	x8, x3, x5
   10b7c:	lsl	x7, x5, x3
   10b80:	bic	x9, x9, x7
   10b84:	str	x9, [x4, #24]!
   10b88:	ldr	x6, [x4, x8, lsl #3]
   10b8c:	cbz	x6, 10f80 <__sanitizer_cov_dump@@Base+0x970>
   10b90:	rbit	x10, x6
   10b94:	clz	x10, x10
   10b98:	lsl	x5, x5, x10
   10b9c:	bic	x5, x6, x5
   10ba0:	str	x5, [x4, x8, lsl #3]
   10ba4:	cbz	x5, 10bb0 <__sanitizer_cov_dump@@Base+0x5a0>
   10ba8:	orr	x7, x7, x9
   10bac:	str	x7, [x0, #24]
   10bb0:	add	x3, x10, x3, lsl #6
   10bb4:	add	x4, x0, #0x10
   10bb8:	add	x5, x3, #0x41, lsl #12
   10bbc:	add	x5, x5, #0x146
   10bc0:	str	x2, [x4, x5, lsl #3]
   10bc4:	ldr	x4, [x0, #16]
   10bc8:	add	x3, x3, x4
   10bcc:	b	10dd0 <__sanitizer_cov_dump@@Base+0x7c0>
   10bd0:	ldr	x15, [x0, #544]
   10bd4:	cbz	x15, 10d1c <__sanitizer_cov_dump@@Base+0x70c>
   10bd8:	add	x11, x0, #0x10
   10bdc:	add	x10, x11, #0x410, lsl #12
   10be0:	ldr	x4, [x10, #2608]
   10be4:	subs	x12, x4, #0x1
   10be8:	b.mi	10cc0 <__sanitizer_cov_dump@@Base+0x6b0>  // b.first
   10bec:	add	x4, x4, #0x21, lsl #12
   10bf0:	mov	x16, #0x10a2                	// #4258
   10bf4:	add	x4, x4, #0xa3
   10bf8:	add	x14, x0, #0x220
   10bfc:	mov	x13, #0x1                   	// #1
   10c00:	movk	x16, #0x2, lsl #16
   10c04:	add	x4, x0, x4, lsl #4
   10c08:	ldrh	w6, [x4]
   10c0c:	and	x3, x6, #0xffff
   10c10:	cmp	x3, #0x1, lsl #12
   10c14:	b.hi	10f1c <__sanitizer_cov_dump@@Base+0x90c>  // b.pmore
   10c18:	lsr	x5, x3, #12
   10c1c:	ubfx	x3, x3, #6, #6
   10c20:	lsl	x8, x13, x3
   10c24:	ldr	x7, [x14, x5, lsl #3]
   10c28:	tst	x8, x7
   10c2c:	b.ne	10e00 <__sanitizer_cov_dump@@Base+0x7f0>  // b.any
   10c30:	ldrh	w6, [x4, #2]
   10c34:	and	x3, x6, #0xffff
   10c38:	cmp	x3, #0x1, lsl #12
   10c3c:	b.hi	10f44 <__sanitizer_cov_dump@@Base+0x934>  // b.pmore
   10c40:	lsr	x5, x3, #12
   10c44:	ubfx	x3, x3, #6, #6
   10c48:	lsl	x8, x13, x3
   10c4c:	ldr	x7, [x14, x5, lsl #3]
   10c50:	tst	x8, x7
   10c54:	b.eq	10cb0 <__sanitizer_cov_dump@@Base+0x6a0>  // b.none
   10c58:	add	x3, x3, x5, lsl #6
   10c5c:	lsl	x6, x13, x6
   10c60:	add	x3, x3, #0x1
   10c64:	ldr	x3, [x14, x3, lsl #3]
   10c68:	tst	x6, x3
   10c6c:	b.eq	10cb0 <__sanitizer_cov_dump@@Base+0x6a0>  // b.none
   10c70:	ldr	x3, [x10, #2608]
   10c74:	ldrh	w20, [x4]
   10c78:	add	x8, x3, x16
   10c7c:	sub	x5, x3, #0x1
   10c80:	ldrh	w19, [x4, #2]
   10c84:	lsl	x8, x8, #4
   10c88:	ldr	w17, [x4, #12]
   10c8c:	add	x3, x11, x8
   10c90:	ldp	w30, w18, [x4, #4]
   10c94:	ldp	x6, x7, [x3]
   10c98:	stp	x6, x7, [x4]
   10c9c:	strh	w20, [x11, x8]
   10ca0:	strh	w19, [x3, #2]
   10ca4:	stp	w30, w18, [x3, #4]
   10ca8:	str	w17, [x3, #12]
   10cac:	str	x5, [x10, #2608]
   10cb0:	sub	x12, x12, #0x1
   10cb4:	sub	x4, x4, #0x10
   10cb8:	cmn	x12, #0x1
   10cbc:	b.ne	10c08 <__sanitizer_cov_dump@@Base+0x5f8>  // b.any
   10cc0:	mov	x12, #0x1                   	// #1
   10cc4:	add	x6, x0, #0x630
   10cc8:	mov	x14, x12
   10ccc:	ldr	x3, [x6, x9, lsl #3]
   10cd0:	add	x13, x9, #0x1
   10cd4:	and	x3, x15, x3
   10cd8:	cbz	x3, 10e5c <__sanitizer_cov_dump@@Base+0x84c>
   10cdc:	rbit	x4, x3
   10ce0:	clz	x4, x4
   10ce4:	add	x7, x13, x4
   10ce8:	add	x10, x0, x4, lsl #3
   10cec:	lsl	x5, x12, x4
   10cf0:	bic	x3, x3, x5
   10cf4:	ldr	x8, [x6, x7, lsl #3]
   10cf8:	ldr	x5, [x10, #552]
   10cfc:	bic	x5, x8, x5
   10d00:	str	x5, [x6, x7, lsl #3]
   10d04:	cbnz	x5, 10cd8 <__sanitizer_cov_dump@@Base+0x6c8>
   10d08:	ldr	x5, [x6, x9, lsl #3]
   10d0c:	lsl	x4, x14, x4
   10d10:	bic	x4, x5, x4
   10d14:	str	x4, [x6, x9, lsl #3]
   10d18:	b	10cd8 <__sanitizer_cov_dump@@Base+0x6c8>
   10d1c:	ldr	x4, [x0, #16]
   10d20:	mov	x6, x0
   10d24:	mov	x7, #0xffffffffffffffff    	// #-1
   10d28:	add	x3, x0, #0x20
   10d2c:	add	x4, x4, #0x1, lsl #12
   10d30:	mov	x5, x7
   10d34:	str	x4, [x0, #16]
   10d38:	add	x4, x0, #0x220
   10d3c:	str	x7, [x6, #24]!
   10d40:	str	x5, [x3], #8
   10d44:	cmp	x3, x4
   10d48:	b.ne	10d40 <__sanitizer_cov_dump@@Base+0x730>  // b.any
   10d4c:	add	x4, x0, #0x208, lsl #12
   10d50:	add	x3, x0, #0x630
   10d54:	add	x4, x4, #0x630
   10d58:	str	xzr, [x3]
   10d5c:	add	x3, x3, #0x208
   10d60:	cmp	x4, x3
   10d64:	b.ne	10d58 <__sanitizer_cov_dump@@Base+0x748>  // b.any
   10d68:	add	x11, x0, #0x10
   10d6c:	add	x3, x11, #0x410, lsl #12
   10d70:	str	xzr, [x3, #2608]
   10d74:	ldr	x4, [x0, #24]
   10d78:	cbz	x4, 10e3c <__sanitizer_cov_dump@@Base+0x82c>
   10d7c:	rbit	x3, x4
   10d80:	mov	x5, #0x1                   	// #1
   10d84:	clz	x3, x3
   10d88:	add	x9, x3, x5
   10d8c:	lsl	x8, x5, x3
   10d90:	bic	x4, x4, x8
   10d94:	str	x4, [x0, #24]
   10d98:	ldr	x7, [x6, x9, lsl #3]
   10d9c:	cbz	x7, 10f60 <__sanitizer_cov_dump@@Base+0x950>
   10da0:	rbit	x10, x7
   10da4:	clz	x10, x10
   10da8:	lsl	x5, x5, x10
   10dac:	bic	x5, x7, x5
   10db0:	str	x5, [x6, x9, lsl #3]
   10db4:	cbnz	x5, 10f38 <__sanitizer_cov_dump@@Base+0x928>
   10db8:	add	x3, x10, x3, lsl #6
   10dbc:	add	x4, x3, #0x41, lsl #12
   10dc0:	add	x4, x4, #0x146
   10dc4:	str	x2, [x11, x4, lsl #3]
   10dc8:	ldr	x4, [x0, #16]
   10dcc:	add	x3, x3, x4
   10dd0:	str	x3, [x2]
   10dd4:	ldr	x2, [x1, #528]
   10dd8:	ldr	x4, [x0, #16]
   10ddc:	cmp	x2, x4
   10de0:	b.eq	10df4 <__sanitizer_cov_dump@@Base+0x7e4>  // b.none
   10de4:	str	xzr, [x1, #8]
   10de8:	str	x4, [x1, #528]
   10dec:	str	xzr, [x1, #1048]
   10df0:	str	xzr, [x1, #1568]
   10df4:	ldr	x30, [sp, #16]
   10df8:	ldp	x19, x20, [sp], #32
   10dfc:	ret
   10e00:	add	x3, x3, x5, lsl #6
   10e04:	lsl	x6, x13, x6
   10e08:	add	x3, x3, #0x1
   10e0c:	ldr	x3, [x14, x3, lsl #3]
   10e10:	tst	x6, x3
   10e14:	b.ne	10c70 <__sanitizer_cov_dump@@Base+0x660>  // b.any
   10e18:	b	10c30 <__sanitizer_cov_dump@@Base+0x620>
   10e1c:	ldr	x2, [x1, #528]
   10e20:	cmp	x2, x4
   10e24:	b.eq	10e38 <__sanitizer_cov_dump@@Base+0x828>  // b.none
   10e28:	str	xzr, [x1, #8]
   10e2c:	str	x4, [x1, #528]
   10e30:	str	xzr, [x1, #1048]
   10e34:	str	xzr, [x1, #1568]
   10e38:	ret
   10e3c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10e40:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10e44:	add	x2, x2, #0x590
   10e48:	add	x0, x0, #0x468
   10e4c:	mov	x4, #0x0                   	// #0
   10e50:	mov	x3, #0x0                   	// #0
   10e54:	mov	w1, #0xbf                  	// #191
   10e58:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10e5c:	add	x9, x9, #0x41
   10e60:	cmp	x9, #0x41, lsl #12
   10e64:	ldr	x15, [x0, #544]
   10e68:	b.ne	10ccc <__sanitizer_cov_dump@@Base+0x6bc>  // b.any
   10e6c:	add	x8, x0, #0x220
   10e70:	add	x6, x0, #0x18
   10e74:	mov	x7, #0x1                   	// #1
   10e78:	cbz	x15, 10ec0 <__sanitizer_cov_dump@@Base+0x8b0>
   10e7c:	rbit	x3, x15
   10e80:	ldr	x5, [x0, #24]
   10e84:	clz	x3, x3
   10e88:	lsl	x4, x7, x3
   10e8c:	add	x3, x3, #0x1
   10e90:	bic	x15, x15, x4
   10e94:	orr	x4, x4, x5
   10e98:	str	x4, [x0, #24]
   10e9c:	cmp	x5, x4
   10ea0:	lsl	x4, x3, #3
   10ea4:	b.eq	10fa0 <__sanitizer_cov_dump@@Base+0x990>  // b.none
   10ea8:	mov	x5, #0x0                   	// #0
   10eac:	str	xzr, [x6, x3, lsl #3]
   10eb0:	ldr	x4, [x8, x3, lsl #3]
   10eb4:	orr	x4, x4, x5
   10eb8:	str	x4, [x6, x3, lsl #3]
   10ebc:	cbnz	x15, 10e7c <__sanitizer_cov_dump@@Base+0x86c>
   10ec0:	ldr	x5, [x0, #24]
   10ec4:	str	xzr, [x0, #544]
   10ec8:	cbz	x5, 10e3c <__sanitizer_cov_dump@@Base+0x82c>
   10ecc:	rbit	x3, x5
   10ed0:	mov	x7, x0
   10ed4:	clz	x3, x3
   10ed8:	mov	x4, #0x1                   	// #1
   10edc:	add	x6, x3, #0x1
   10ee0:	lsl	x8, x4, x3
   10ee4:	bic	x5, x5, x8
   10ee8:	lsl	x6, x6, #3
   10eec:	str	x5, [x7, #24]!
   10ef0:	ldr	x9, [x7, x6]
   10ef4:	cbz	x9, 10fa8 <__sanitizer_cov_dump@@Base+0x998>
   10ef8:	rbit	x10, x9
   10efc:	clz	x10, x10
   10f00:	lsl	x4, x4, x10
   10f04:	bic	x4, x9, x4
   10f08:	str	x4, [x7, x6]
   10f0c:	cbz	x4, 10db8 <__sanitizer_cov_dump@@Base+0x7a8>
   10f10:	orr	x5, x8, x5
   10f14:	str	x5, [x0, #24]
   10f18:	b	10db8 <__sanitizer_cov_dump@@Base+0x7a8>
   10f1c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10f20:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10f24:	add	x2, x2, #0x4a8
   10f28:	add	x0, x0, #0x468
   10f2c:	mov	x4, #0x1000                	// #4096
   10f30:	mov	w1, #0x143                 	// #323
   10f34:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10f38:	orr	x4, x8, x4
   10f3c:	str	x4, [x0, #24]
   10f40:	b	10db8 <__sanitizer_cov_dump@@Base+0x7a8>
   10f44:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10f48:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10f4c:	add	x2, x2, #0x4a8
   10f50:	add	x0, x0, #0x468
   10f54:	mov	x4, #0x1000                	// #4096
   10f58:	mov	w1, #0x143                 	// #323
   10f5c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10f60:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
   10f64:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10f68:	add	x2, x2, #0x840
   10f6c:	add	x0, x0, #0x468
   10f70:	mov	x4, #0x0                   	// #0
   10f74:	mov	x3, #0x0                   	// #0
   10f78:	mov	w1, #0x30                  	// #48
   10f7c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10f80:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
   10f84:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10f88:	add	x2, x2, #0x840
   10f8c:	add	x0, x0, #0x468
   10f90:	mov	x4, #0x0                   	// #0
   10f94:	mov	x3, #0x0                   	// #0
   10f98:	mov	w1, #0x30                  	// #48
   10f9c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10fa0:	ldr	x5, [x6, x4]
   10fa4:	b	10eb0 <__sanitizer_cov_dump@@Base+0x8a0>
   10fa8:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
   10fac:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   10fb0:	add	x2, x2, #0x840
   10fb4:	add	x0, x0, #0x468
   10fb8:	mov	x4, #0x0                   	// #0
   10fbc:	mov	x3, #0x0                   	// #0
   10fc0:	mov	w1, #0x30                  	// #48
   10fc4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10fc8:	stp	x19, x20, [sp, #-96]!
   10fcc:	mov	x20, x1
   10fd0:	add	x1, x0, #0x410, lsl #12
   10fd4:	stp	x21, x22, [sp, #16]
   10fd8:	mov	x19, x0
   10fdc:	mov	x21, x2
   10fe0:	ldrb	w1, [x1, #2632]
   10fe4:	stp	x23, x24, [sp, #32]
   10fe8:	and	w24, w3, #0xff
   10fec:	stp	x25, x26, [sp, #48]
   10ff0:	and	w26, w4, #0xff
   10ff4:	mov	w25, #0x0                   	// #0
   10ff8:	ldr	x23, [x20, #16]
   10ffc:	str	x30, [sp, #64]
   11000:	cbz	w1, 1101c <__sanitizer_cov_dump@@Base+0xa0c>
   11004:	ldr	x0, [x20]
   11008:	adrp	x1, 11000 <__sanitizer_cov_dump@@Base+0x9f0>
   1100c:	add	x1, x1, #0xd98
   11010:	ldr	x2, [x0]
   11014:	cmp	x2, x1
   11018:	b.ne	111b8 <__sanitizer_cov_dump@@Base+0xba8>  // b.any
   1101c:	ldr	x1, [x23, #8]
   11020:	add	x22, x23, #0x8
   11024:	ldr	x2, [x21]
   11028:	ldr	x5, [x23, #528]
   1102c:	cbz	x1, 1115c <__sanitizer_cov_dump@@Base+0xb4c>
   11030:	cbz	x2, 11040 <__sanitizer_cov_dump@@Base+0xa30>
   11034:	ldr	x0, [x19, #16]
   11038:	cmp	x0, x5
   1103c:	b.eq	111dc <__sanitizer_cov_dump@@Base+0xbcc>  // b.none
   11040:	add	x0, x19, #0x8
   11044:	mov	w2, #0x1                   	// #1
   11048:	ldxrb	w1, [x0]
   1104c:	stxrb	w3, w2, [x0]
   11050:	cbnz	w3, 11048 <__sanitizer_cov_dump@@Base+0xa38>
   11054:	dmb	ish
   11058:	tst	w1, #0xff
   1105c:	b.eq	11068 <__sanitizer_cov_dump@@Base+0xa58>  // b.none
   11060:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   11064:	nop
   11068:	mov	x2, x21
   1106c:	mov	x1, x23
   11070:	mov	x0, x19
   11074:	bl	10b40 <__sanitizer_cov_dump@@Base+0x530>
   11078:	cbnz	w24, 11298 <__sanitizer_cov_dump@@Base+0xc88>
   1107c:	ldr	x24, [x21]
   11080:	cbnz	w26, 110bc <__sanitizer_cov_dump@@Base+0xaac>
   11084:	mov	w3, w25
   11088:	ldr	x1, [x20]
   1108c:	cbz	w25, 11360 <__sanitizer_cov_dump@@Base+0xd50>
   11090:	ldr	x2, [x1, #8]
   11094:	adrp	x1, 11000 <__sanitizer_cov_dump@@Base+0x9f0>
   11098:	add	x1, x1, #0xda0
   1109c:	mov	w4, #0x0                   	// #0
   110a0:	cmp	x2, x1
   110a4:	b.ne	1142c <__sanitizer_cov_dump@@Base+0xe1c>  // b.any
   110a8:	mov	x2, x24
   110ac:	mov	x1, x22
   110b0:	add	x0, x19, #0x10
   110b4:	bl	11f68 <__sanitizer_cov_dump@@Base+0x1958>
   110b8:	ldr	x24, [x21]
   110bc:	ldr	x0, [x19, #16]
   110c0:	ldr	x1, [x22, #520]
   110c4:	cmp	x0, x1
   110c8:	b.eq	110dc <__sanitizer_cov_dump@@Base+0xacc>  // b.none
   110cc:	str	xzr, [x23, #8]
   110d0:	str	x0, [x22, #520]
   110d4:	str	xzr, [x22, #1040]
   110d8:	str	xzr, [x22, #1560]
   110dc:	cmp	x24, #0xfff
   110e0:	b.ls	113f4 <__sanitizer_cov_dump@@Base+0xde4>  // b.plast
   110e4:	ldr	x3, [x19, #16]
   110e8:	and	x4, x24, #0xfffffffffffff000
   110ec:	cmp	x3, x4
   110f0:	b.ne	11414 <__sanitizer_cov_dump@@Base+0xe04>  // b.any
   110f4:	ldr	x0, [x22, #520]
   110f8:	and	x4, x24, #0xfff
   110fc:	cmp	x0, x3
   11100:	b.ne	11444 <__sanitizer_cov_dump@@Base+0xe34>  // b.any
   11104:	ldr	x1, [x23, #8]
   11108:	lsr	x2, x4, #6
   1110c:	mov	x0, #0x1                   	// #1
   11110:	add	x3, x2, x0
   11114:	lsl	x24, x0, x24
   11118:	lsl	x0, x0, x2
   1111c:	tst	x1, x0
   11120:	b.ne	11310 <__sanitizer_cov_dump@@Base+0xd00>  // b.any
   11124:	orr	x0, x1, x0
   11128:	str	x0, [x23, #8]
   1112c:	str	x24, [x22, x3, lsl #3]
   11130:	ldr	x3, [x22, #1560]
   11134:	cmp	x3, #0x3f
   11138:	b.hi	11388 <__sanitizer_cov_dump@@Base+0xd78>  // b.pmore
   1113c:	add	x0, x3, #0x83
   11140:	add	x3, x3, #0x1
   11144:	str	x3, [x22, #1560]
   11148:	lsl	x0, x0, #3
   1114c:	add	x1, x22, x0
   11150:	str	w4, [x22, x0]
   11154:	str	w25, [x1, #4]
   11158:	b	11340 <__sanitizer_cov_dump@@Base+0xd30>
   1115c:	cbz	x5, 11030 <__sanitizer_cov_dump@@Base+0xa20>
   11160:	and	x0, x2, #0xfffffffffffff000
   11164:	cmp	x0, x5
   11168:	b.ne	11030 <__sanitizer_cov_dump@@Base+0xa20>  // b.any
   1116c:	ubfx	x1, x2, #6, #6
   11170:	mov	x0, #0x1                   	// #1
   11174:	add	x3, x1, x0
   11178:	lsl	x4, x0, x2
   1117c:	lsl	x0, x0, x1
   11180:	str	x0, [x23, #8]
   11184:	and	x2, x2, #0xfff
   11188:	str	x4, [x22, x3, lsl #3]
   1118c:	ldr	x3, [x22, #1560]
   11190:	cmp	x3, #0x3f
   11194:	b.hi	11388 <__sanitizer_cov_dump@@Base+0xd78>  // b.pmore
   11198:	add	x0, x3, #0x83
   1119c:	add	x3, x3, #0x1
   111a0:	str	x3, [x22, #1560]
   111a4:	lsl	x0, x0, #3
   111a8:	add	x1, x22, x0
   111ac:	str	w2, [x22, x0]
   111b0:	str	w25, [x1, #4]
   111b4:	b	11348 <__sanitizer_cov_dump@@Base+0xd38>
   111b8:	mov	x0, x20
   111bc:	blr	x2
   111c0:	ldr	x1, [x23, #8]
   111c4:	mov	w25, w0
   111c8:	add	x22, x23, #0x8
   111cc:	ldr	x2, [x21]
   111d0:	ldr	x5, [x23, #528]
   111d4:	cbnz	x1, 11030 <__sanitizer_cov_dump@@Base+0xa20>
   111d8:	b	1115c <__sanitizer_cov_dump@@Base+0xb4c>
   111dc:	and	x0, x2, #0xfffffffffffff000
   111e0:	cmp	x0, x5
   111e4:	b.ne	11040 <__sanitizer_cov_dump@@Base+0xa30>  // b.any
   111e8:	ldr	x9, [x23, #1568]
   111ec:	ubfx	x6, x2, #6, #6
   111f0:	mov	x0, #0x1                   	// #1
   111f4:	and	x8, x2, #0xfff
   111f8:	add	x5, x6, x0
   111fc:	lsl	x3, x0, x6
   11200:	lsl	x2, x0, x2
   11204:	cbz	x9, 11258 <__sanitizer_cov_dump@@Base+0xc48>
   11208:	add	x6, x6, #0x1
   1120c:	add	x7, x19, #0x630
   11210:	add	x11, x23, #0x420
   11214:	mov	x0, #0x0                   	// #0
   11218:	mov	w10, #0x208                 	// #520
   1121c:	mov	w12, #0x41                  	// #65
   11220:	lsl	x4, x0, #3
   11224:	ldr	w4, [x11, x4]
   11228:	umull	x5, w4, w10
   1122c:	ldr	x5, [x7, x5]
   11230:	tst	x3, x5
   11234:	b.eq	11040 <__sanitizer_cov_dump@@Base+0xa30>  // b.none
   11238:	umaddl	x4, w4, w12, x6
   1123c:	mov	x5, x6
   11240:	ldr	x4, [x7, x4, lsl #3]
   11244:	tst	x2, x4
   11248:	b.eq	11040 <__sanitizer_cov_dump@@Base+0xa30>  // b.none
   1124c:	add	x0, x0, #0x1
   11250:	cmp	x9, x0
   11254:	b.ne	11220 <__sanitizer_cov_dump@@Base+0xc10>  // b.any
   11258:	tst	x1, x3
   1125c:	b.ne	113c0 <__sanitizer_cov_dump@@Base+0xdb0>  // b.any
   11260:	orr	x1, x1, x3
   11264:	str	x1, [x23, #8]
   11268:	str	x2, [x22, x5, lsl #3]
   1126c:	ldr	x3, [x22, #1560]
   11270:	cmp	x3, #0x3f
   11274:	b.hi	11388 <__sanitizer_cov_dump@@Base+0xd78>  // b.pmore
   11278:	add	x0, x3, #0x83
   1127c:	add	x3, x3, #0x1
   11280:	str	x3, [x22, #1560]
   11284:	lsl	x0, x0, #3
   11288:	add	x1, x22, x0
   1128c:	str	w8, [x22, x0]
   11290:	str	w25, [x1, #4]
   11294:	b	11348 <__sanitizer_cov_dump@@Base+0xd38>
   11298:	ldr	x0, [x19, #16]
   1129c:	ldr	x3, [x22, #520]
   112a0:	ldr	x24, [x21]
   112a4:	cmp	x0, x3
   112a8:	b.ne	11464 <__sanitizer_cov_dump@@Base+0xe54>  // b.any
   112ac:	cmp	x24, #0xfff
   112b0:	b.ls	113f4 <__sanitizer_cov_dump@@Base+0xde4>  // b.plast
   112b4:	and	x4, x24, #0xfffffffffffff000
   112b8:	mov	x3, x0
   112bc:	cmp	x0, x4
   112c0:	b.ne	11414 <__sanitizer_cov_dump@@Base+0xe04>  // b.any
   112c4:	ldr	x2, [x23, #8]
   112c8:	ubfx	x1, x24, #6, #6
   112cc:	mov	x0, #0x1                   	// #1
   112d0:	lsl	x3, x0, x1
   112d4:	tst	x3, x2
   112d8:	b.eq	11080 <__sanitizer_cov_dump@@Base+0xa70>  // b.none
   112dc:	add	x1, x1, x0
   112e0:	lsl	x0, x0, x24
   112e4:	ldr	x1, [x22, x1, lsl #3]
   112e8:	tst	x0, x1
   112ec:	b.eq	11080 <__sanitizer_cov_dump@@Base+0xa70>  // b.none
   112f0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   112f4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   112f8:	add	x2, x2, #0x658
   112fc:	add	x0, x0, #0x680
   11300:	mov	x4, #0x0                   	// #0
   11304:	mov	x3, #0x0                   	// #0
   11308:	mov	w1, #0xa5                  	// #165
   1130c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11310:	ldr	x0, [x22, x3, lsl #3]
   11314:	orr	x24, x24, x0
   11318:	str	x24, [x22, x3, lsl #3]
   1131c:	cmp	x0, x24
   11320:	b.ne	11130 <__sanitizer_cov_dump@@Base+0xb20>  // b.any
   11324:	ldr	x3, [x22, #1040]
   11328:	cmp	x3, #0x3f
   1132c:	b.hi	113a4 <__sanitizer_cov_dump@@Base+0xd94>  // b.pmore
   11330:	add	x0, x3, #0x42
   11334:	add	x3, x3, #0x1
   11338:	str	x3, [x22, #1040]
   1133c:	str	x4, [x22, x0, lsl #3]
   11340:	dmb	ish
   11344:	strb	wzr, [x19, #8]
   11348:	ldp	x21, x22, [sp, #16]
   1134c:	ldp	x23, x24, [sp, #32]
   11350:	ldp	x25, x26, [sp, #48]
   11354:	ldr	x30, [sp, #64]
   11358:	ldp	x19, x20, [sp], #96
   1135c:	ret
   11360:	ldr	x2, [x1]
   11364:	adrp	x0, 11000 <__sanitizer_cov_dump@@Base+0x9f0>
   11368:	add	x0, x0, #0xd98
   1136c:	cmp	x2, x0
   11370:	b.eq	11090 <__sanitizer_cov_dump@@Base+0xa80>  // b.none
   11374:	mov	x0, x20
   11378:	blr	x2
   1137c:	mov	w3, w0
   11380:	ldr	x1, [x20]
   11384:	b	11090 <__sanitizer_cov_dump@@Base+0xa80>
   11388:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1138c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11390:	add	x2, x2, #0x5a0
   11394:	add	x0, x0, #0x4d8
   11398:	mov	x4, #0x40                  	// #64
   1139c:	mov	w1, #0x43                  	// #67
   113a0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   113a4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   113a8:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   113ac:	add	x2, x2, #0x600
   113b0:	add	x0, x0, #0x4d8
   113b4:	mov	x4, #0x40                  	// #64
   113b8:	mov	w1, #0x3f                  	// #63
   113bc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   113c0:	ldr	x0, [x22, x5, lsl #3]
   113c4:	orr	x2, x2, x0
   113c8:	str	x2, [x22, x5, lsl #3]
   113cc:	cmp	x0, x2
   113d0:	b.ne	1126c <__sanitizer_cov_dump@@Base+0xc5c>  // b.any
   113d4:	ldr	x3, [x22, #1040]
   113d8:	cmp	x3, #0x3f
   113dc:	b.hi	113a4 <__sanitizer_cov_dump@@Base+0xd94>  // b.pmore
   113e0:	add	x0, x3, #0x42
   113e4:	add	x3, x3, #0x1
   113e8:	str	x3, [x22, #1040]
   113ec:	str	x8, [x22, x0, lsl #3]
   113f0:	b	11348 <__sanitizer_cov_dump@@Base+0xd38>
   113f4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   113f8:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   113fc:	mov	x3, x24
   11400:	add	x2, x2, #0x4c0
   11404:	add	x0, x0, #0x4d8
   11408:	mov	x4, #0x1000                	// #4096
   1140c:	mov	w1, #0x172                 	// #370
   11410:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11414:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11418:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1141c:	add	x2, x2, #0x770
   11420:	add	x0, x0, #0x4d8
   11424:	mov	w1, #0x173                 	// #371
   11428:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1142c:	str	w3, [sp, #92]
   11430:	mov	x0, x20
   11434:	blr	x2
   11438:	mov	w4, w0
   1143c:	ldr	w3, [sp, #92]
   11440:	b	110a8 <__sanitizer_cov_dump@@Base+0xa98>
   11444:	mov	x4, x3
   11448:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1144c:	mov	x3, x0
   11450:	add	x2, x2, #0x7a0
   11454:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11458:	mov	w1, #0x3c                  	// #60
   1145c:	add	x0, x0, #0x4d8
   11460:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11464:	mov	x4, x0
   11468:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1146c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11470:	add	x2, x2, #0x7a0
   11474:	add	x0, x0, #0x4d8
   11478:	mov	w1, #0x6c                  	// #108
   1147c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11480:	stp	x19, x20, [sp, #-336]!
   11484:	stp	x23, x24, [sp, #32]
   11488:	ldr	x23, [x1, #16]
   1148c:	stp	x21, x22, [sp, #16]
   11490:	mov	x22, x2
   11494:	ldr	x4, [x0, #16]
   11498:	stp	x25, x26, [sp, #48]
   1149c:	add	x2, x23, #0x8
   114a0:	ldr	x3, [x2, #520]
   114a4:	stp	x27, x28, [sp, #64]
   114a8:	ldr	x25, [x22]
   114ac:	str	x30, [sp, #80]
   114b0:	cmp	x4, x3
   114b4:	b.ne	116bc <__sanitizer_cov_dump@@Base+0x10ac>  // b.any
   114b8:	str	xzr, [x0, #1064]
   114bc:	mov	x19, x0
   114c0:	add	x21, x0, #0x428
   114c4:	ldr	x1, [x23, #8]
   114c8:	cbz	x1, 11520 <__sanitizer_cov_dump@@Base+0xf10>
   114cc:	mov	x3, #0x0                   	// #0
   114d0:	mov	x6, #0x1                   	// #1
   114d4:	rbit	x0, x1
   114d8:	clz	x0, x0
   114dc:	lsl	x5, x6, x0
   114e0:	orr	x4, x5, x3
   114e4:	str	x4, [x19, #1064]
   114e8:	bic	x1, x1, x5
   114ec:	cmp	x3, x4
   114f0:	add	x0, x0, #0x1
   114f4:	b.eq	11518 <__sanitizer_cov_dump@@Base+0xf08>  // b.none
   114f8:	mov	x4, #0x0                   	// #0
   114fc:	str	xzr, [x21, x0, lsl #3]
   11500:	ldr	x3, [x2, x0, lsl #3]
   11504:	orr	x3, x3, x4
   11508:	str	x3, [x21, x0, lsl #3]
   1150c:	cbz	x1, 11520 <__sanitizer_cov_dump@@Base+0xf10>
   11510:	ldr	x3, [x19, #1064]
   11514:	b	114d4 <__sanitizer_cov_dump@@Base+0xec4>
   11518:	ldr	x4, [x21, x0, lsl #3]
   1151c:	b	11500 <__sanitizer_cov_dump@@Base+0xef0>
   11520:	mov	x3, x25
   11524:	cmp	x25, #0xfff
   11528:	b.ls	11700 <__sanitizer_cov_dump@@Base+0x10f0>  // b.plast
   1152c:	ldr	x3, [x19, #16]
   11530:	and	x4, x25, #0xfffffffffffff000
   11534:	cmp	x3, x4
   11538:	b.ne	11720 <__sanitizer_cov_dump@@Base+0x1110>  // b.any
   1153c:	ubfx	x24, x25, #6, #6
   11540:	mov	x5, #0x1                   	// #1
   11544:	ldr	x20, [x19, #1064]
   11548:	add	x0, x24, x5
   1154c:	and	x6, x25, #0xfff
   11550:	lsl	x24, x5, x24
   11554:	add	x11, x21, x0, lsl #3
   11558:	ands	x20, x20, x24
   1155c:	lsl	x5, x5, x25
   11560:	b.eq	11590 <__sanitizer_cov_dump@@Base+0xf80>  // b.none
   11564:	ldr	x0, [x21, x0, lsl #3]
   11568:	tst	x5, x0
   1156c:	b.eq	11590 <__sanitizer_cov_dump@@Base+0xf80>  // b.none
   11570:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11574:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11578:	add	x2, x2, #0x6d0
   1157c:	add	x0, x0, #0x4d8
   11580:	mov	x4, #0x0                   	// #0
   11584:	mov	x3, #0x0                   	// #0
   11588:	mov	w1, #0x13e                 	// #318
   1158c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11590:	add	x8, x6, x6, lsl #6
   11594:	str	x6, [sp, #176]
   11598:	add	x7, x19, #0x630
   1159c:	mov	x26, #0x1                   	// #1
   115a0:	add	x3, sp, #0xb8
   115a4:	add	x10, x7, x8, lsl #3
   115a8:	mov	x9, x26
   115ac:	cbz	x20, 115e4 <__sanitizer_cov_dump@@Base+0xfd4>
   115b0:	ldr	x20, [x11]
   115b4:	ands	x20, x5, x20
   115b8:	b.eq	115e4 <__sanitizer_cov_dump@@Base+0xfd4>  // b.none
   115bc:	mov	x0, #0x1                   	// #1
   115c0:	cmp	x0, x26
   115c4:	b.eq	11758 <__sanitizer_cov_dump@@Base+0x1148>  // b.none
   115c8:	add	x26, x26, #0x1
   115cc:	cmp	x26, #0x15
   115d0:	b.eq	118d4 <__sanitizer_cov_dump@@Base+0x12c4>  // b.none
   115d4:	ldr	x20, [x19, #1064]
   115d8:	str	x6, [sp, #176]
   115dc:	and	x20, x20, x24
   115e0:	cbnz	x20, 115b0 <__sanitizer_cov_dump@@Base+0xfa0>
   115e4:	sub	x4, x26, #0x1
   115e8:	mov	x28, #0x0                   	// #0
   115ec:	mov	x27, #0x0                   	// #0
   115f0:	mov	x12, #0x0                   	// #0
   115f4:	cbnz	x27, 11698 <__sanitizer_cov_dump@@Base+0x1088>
   115f8:	cbnz	x20, 115c8 <__sanitizer_cov_dump@@Base+0xfb8>
   115fc:	ldr	x27, [x10]
   11600:	cbz	x27, 115c8 <__sanitizer_cov_dump@@Base+0xfb8>
   11604:	cbnz	x28, 116d4 <__sanitizer_cov_dump@@Base+0x10c4>
   11608:	mov	x1, x8
   1160c:	mov	x20, x28
   11610:	rbit	x12, x27
   11614:	clz	x12, x12
   11618:	add	x0, x12, x1
   1161c:	add	x0, x0, #0x1
   11620:	ldr	x2, [x7, x0, lsl #3]
   11624:	cbz	x2, 11738 <__sanitizer_cov_dump@@Base+0x1128>
   11628:	add	x1, x28, x12
   1162c:	lsl	x0, x9, x12
   11630:	mov	x28, x2
   11634:	bic	x27, x27, x0
   11638:	rbit	x0, x28
   1163c:	clz	x0, x0
   11640:	add	x1, x0, x1, lsl #6
   11644:	lsl	x2, x9, x0
   11648:	bic	x28, x28, x2
   1164c:	orr	x0, x28, x27
   11650:	cbz	x0, 116ec <__sanitizer_cov_dump@@Base+0x10dc>
   11654:	mov	x0, x7
   11658:	mov	x2, x21
   1165c:	stp	x7, x3, [sp, #104]
   11660:	stp	x4, x6, [sp, #120]
   11664:	stp	x11, x12, [sp, #136]
   11668:	stp	x10, x5, [sp, #152]
   1166c:	str	x8, [sp, #168]
   11670:	bl	12248 <__sanitizer_cov_dump@@Base+0x1c38>
   11674:	mov	x9, #0x1                   	// #1
   11678:	ldp	x7, x3, [sp, #104]
   1167c:	ldp	x4, x6, [sp, #120]
   11680:	ldp	x11, x12, [sp, #136]
   11684:	ldp	x10, x5, [sp, #152]
   11688:	ldr	x8, [sp, #168]
   1168c:	cbz	x0, 115f4 <__sanitizer_cov_dump@@Base+0xfe4>
   11690:	add	x0, x0, x9
   11694:	b	115c0 <__sanitizer_cov_dump@@Base+0xfb0>
   11698:	lsl	x0, x20, #6
   1169c:	cbz	x28, 116e0 <__sanitizer_cov_dump@@Base+0x10d0>
   116a0:	rbit	x1, x28
   116a4:	add	x0, x12, x0
   116a8:	clz	x1, x1
   116ac:	lsl	x2, x9, x1
   116b0:	add	x1, x1, x0, lsl #6
   116b4:	bic	x28, x28, x2
   116b8:	b	11654 <__sanitizer_cov_dump@@Base+0x1044>
   116bc:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   116c0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   116c4:	add	x2, x2, #0x7a0
   116c8:	add	x0, x0, #0x4d8
   116cc:	mov	w1, #0x6c                  	// #108
   116d0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   116d4:	mov	x1, x12
   116d8:	mov	x27, #0x0                   	// #0
   116dc:	b	11638 <__sanitizer_cov_dump@@Base+0x1028>
   116e0:	add	x1, x8, x0
   116e4:	mov	x28, x0
   116e8:	b	11610 <__sanitizer_cov_dump@@Base+0x1000>
   116ec:	add	x20, x20, #0x1
   116f0:	mov	x27, #0x0                   	// #0
   116f4:	mov	x28, #0x0                   	// #0
   116f8:	b	11654 <__sanitizer_cov_dump@@Base+0x1044>
   116fc:	mov	x3, x5
   11700:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11704:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11708:	add	x2, x2, #0x4c0
   1170c:	add	x0, x0, #0x4d8
   11710:	mov	x4, #0x1000                	// #4096
   11714:	mov	w1, #0x172                 	// #370
   11718:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1171c:	mov	x3, x1
   11720:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11724:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11728:	add	x2, x2, #0x770
   1172c:	add	x0, x0, #0x4d8
   11730:	mov	w1, #0x173                 	// #371
   11734:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11738:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1173c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11740:	add	x2, x2, #0x448
   11744:	add	x0, x0, #0x468
   11748:	mov	x4, #0x0                   	// #0
   1174c:	mov	x3, #0x0                   	// #0
   11750:	mov	w1, #0x132                 	// #306
   11754:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11758:	add	x7, sp, #0xb0
   1175c:	mov	x0, x7
   11760:	add	x2, x7, x26, lsl #3
   11764:	b	1177c <__sanitizer_cov_dump@@Base+0x116c>
   11768:	ldr	x1, [x19, #16]
   1176c:	add	x3, x3, x1
   11770:	str	x3, [x0], #8
   11774:	cmp	x2, x0
   11778:	b.eq	117a4 <__sanitizer_cov_dump@@Base+0x1194>  // b.none
   1177c:	ldr	x3, [x0]
   11780:	cmp	x3, #0xfff
   11784:	b.ls	11768 <__sanitizer_cov_dump@@Base+0x1158>  // b.plast
   11788:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1178c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11790:	add	x2, x2, #0x6f0
   11794:	add	x0, x0, #0x4d8
   11798:	mov	x4, #0x1000                	// #4096
   1179c:	mov	w1, #0x16f                 	// #367
   117a0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   117a4:	ldr	x5, [sp, #176]
   117a8:	cmp	x25, x5
   117ac:	b.ne	11924 <__sanitizer_cov_dump@@Base+0x1314>  // b.any
   117b0:	ldr	x3, [x22]
   117b4:	cmp	x3, x25
   117b8:	b.ne	118fc <__sanitizer_cov_dump@@Base+0x12ec>  // b.any
   117bc:	add	x10, x19, #0x10
   117c0:	cmp	x26, #0x14
   117c4:	mov	x13, #0xa40                 	// #2624
   117c8:	mov	x11, #0x1146                	// #4422
   117cc:	add	x12, x10, #0x410, lsl #12
   117d0:	add	x9, x23, #0x630
   117d4:	mov	x2, #0x14                  	// #20
   117d8:	mov	w0, #0x1                   	// #1
   117dc:	csel	x26, x26, x2, ls  // ls = plast
   117e0:	mov	x8, #0x1                   	// #1
   117e4:	movk	x13, #0x21, lsl #16
   117e8:	movk	x11, #0x4, lsl #16
   117ec:	str	w26, [x23, #1576]
   117f0:	strb	w0, [x23, #2224]
   117f4:	udiv	x0, x8, x26
   117f8:	cmp	x5, #0xfff
   117fc:	msub	x0, x0, x26, x8
   11800:	b.ls	116fc <__sanitizer_cov_dump@@Base+0x10ec>  // b.plast
   11804:	and	x4, x5, #0xfffffffffffff000
   11808:	cmp	x1, x4
   1180c:	b.ne	1171c <__sanitizer_cov_dump@@Base+0x110c>  // b.any
   11810:	ldr	x3, [x7, x0, lsl #3]
   11814:	and	x5, x5, #0xfff
   11818:	cmp	x3, #0xfff
   1181c:	b.ls	11700 <__sanitizer_cov_dump@@Base+0x10f0>  // b.plast
   11820:	and	x4, x3, #0xfffffffffffff000
   11824:	cmp	x1, x4
   11828:	b.ne	1171c <__sanitizer_cov_dump@@Base+0x110c>  // b.any
   1182c:	ldr	x4, [x12, #2608]
   11830:	and	x6, x3, #0xfff
   11834:	cbz	x4, 11918 <__sanitizer_cov_dump@@Base+0x1308>
   11838:	add	x0, x19, x13
   1183c:	mov	x2, #0x0                   	// #0
   11840:	b	11854 <__sanitizer_cov_dump@@Base+0x1244>
   11844:	add	x2, x2, #0x1
   11848:	add	x0, x0, #0x10
   1184c:	cmp	x4, x2
   11850:	b.eq	118c4 <__sanitizer_cov_dump@@Base+0x12b4>  // b.none
   11854:	ldrh	w3, [x0]
   11858:	cmp	x5, x3
   1185c:	b.ne	11844 <__sanitizer_cov_dump@@Base+0x1234>  // b.any
   11860:	ldrh	w3, [x0, #2]
   11864:	cmp	x6, x3
   11868:	b.ne	11844 <__sanitizer_cov_dump@@Base+0x1234>  // b.any
   1186c:	add	x0, x19, x2, lsl #4
   11870:	add	x0, x0, #0x210, lsl #12
   11874:	ldrsw	x4, [x0, #2636]
   11878:	ldr	w2, [x0, #2628]
   1187c:	ldr	w0, [x0, #2632]
   11880:	add	x5, x5, x11
   11884:	add	x3, x6, x11
   11888:	cmp	x26, x8
   1188c:	add	x8, x8, #0x1
   11890:	ldr	x5, [x10, x5, lsl #3]
   11894:	ldr	x3, [x10, x3, lsl #3]
   11898:	str	x4, [x9]
   1189c:	ldr	x4, [x5, #16]
   118a0:	str	x4, [x9, #8]
   118a4:	ldr	x3, [x3, #16]
   118a8:	str	x3, [x9, #16]
   118ac:	stp	w0, w2, [x9, #24]
   118b0:	add	x9, x9, #0x20
   118b4:	b.eq	118e0 <__sanitizer_cov_dump@@Base+0x12d0>  // b.none
   118b8:	add	x0, x7, x8, lsl #3
   118bc:	ldur	x5, [x0, #-8]
   118c0:	b	117f4 <__sanitizer_cov_dump@@Base+0x11e4>
   118c4:	mov	w0, #0xffffffff            	// #-1
   118c8:	mov	x4, #0x0                   	// #0
   118cc:	mov	w2, w0
   118d0:	b	11880 <__sanitizer_cov_dump@@Base+0x1270>
   118d4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   118d8:	add	x0, x0, #0x748
   118dc:	bl	1a2a0 <OnPrint@@Base+0x310>
   118e0:	ldp	x21, x22, [sp, #16]
   118e4:	ldp	x23, x24, [sp, #32]
   118e8:	ldp	x25, x26, [sp, #48]
   118ec:	ldp	x27, x28, [sp, #64]
   118f0:	ldr	x30, [sp, #80]
   118f4:	ldp	x19, x20, [sp], #336
   118f8:	ret
   118fc:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11900:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11904:	mov	x4, x25
   11908:	add	x2, x2, #0x728
   1190c:	add	x0, x0, #0x680
   11910:	mov	w1, #0x7f                  	// #127
   11914:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11918:	mov	w0, #0xffffffff            	// #-1
   1191c:	mov	w2, w0
   11920:	b	11880 <__sanitizer_cov_dump@@Base+0x1270>
   11924:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11928:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1192c:	mov	x4, x25
   11930:	mov	x3, x5
   11934:	add	x2, x2, #0x708
   11938:	add	x0, x0, #0x4d8
   1193c:	mov	w1, #0x143                 	// #323
   11940:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11944:	nop
   11948:	stp	x19, x20, [sp, #-64]!
   1194c:	mov	x19, x0
   11950:	stp	x21, x22, [sp, #16]
   11954:	ldr	x21, [x1, #16]
   11958:	ldr	x0, [x21, #8]
   1195c:	str	x30, [sp, #40]
   11960:	cbz	x0, 11b2c <__sanitizer_cov_dump@@Base+0x151c>
   11964:	ldr	x0, [x2]
   11968:	mov	x22, x1
   1196c:	mov	x20, x2
   11970:	cbz	x0, 11984 <__sanitizer_cov_dump@@Base+0x1374>
   11974:	ldr	x2, [x19, #16]
   11978:	ldr	x1, [x21, #528]
   1197c:	cmp	x1, x2
   11980:	b.eq	11b4c <__sanitizer_cov_dump@@Base+0x153c>  // b.none
   11984:	add	x0, x19, #0x8
   11988:	mov	w2, #0x1                   	// #1
   1198c:	str	x23, [sp, #32]
   11990:	ldxrb	w1, [x0]
   11994:	stxrb	w3, w2, [x0]
   11998:	cbnz	w3, 11990 <__sanitizer_cov_dump@@Base+0x1380>
   1199c:	dmb	ish
   119a0:	tst	w1, #0xff
   119a4:	b.eq	119ac <__sanitizer_cov_dump@@Base+0x139c>  // b.none
   119a8:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   119ac:	add	x23, x21, #0x8
   119b0:	mov	x1, x21
   119b4:	mov	x0, x19
   119b8:	mov	x2, x20
   119bc:	bl	10b40 <__sanitizer_cov_dump@@Base+0x530>
   119c0:	ldr	x1, [x19, #16]
   119c4:	ldr	x3, [x23, #520]
   119c8:	ldr	x0, [x20]
   119cc:	cmp	x1, x3
   119d0:	b.ne	11bc8 <__sanitizer_cov_dump@@Base+0x15b8>  // b.any
   119d4:	cmp	x0, #0xfff
   119d8:	b.ls	11be4 <__sanitizer_cov_dump@@Base+0x15d4>  // b.plast
   119dc:	and	x4, x0, #0xfffffffffffff000
   119e0:	cmp	x1, x4
   119e4:	b.ne	11c04 <__sanitizer_cov_dump@@Base+0x15f4>  // b.any
   119e8:	ldr	x2, [x21, #8]
   119ec:	ubfx	x1, x0, #6, #6
   119f0:	mov	x3, #0x1                   	// #1
   119f4:	add	x8, x1, x3
   119f8:	lsl	x5, x3, x1
   119fc:	and	x1, x0, #0xfff
   11a00:	tst	x5, x2
   11a04:	lsl	x3, x3, x0
   11a08:	b.ne	11b3c <__sanitizer_cov_dump@@Base+0x152c>  // b.any
   11a0c:	add	x6, x19, #0x208, lsl #12
   11a10:	add	x4, x1, x1, lsl #6
   11a14:	add	x10, x19, #0x630
   11a18:	str	xzr, [x6, #1584]
   11a1c:	ldr	x1, [x10, x4, lsl #3]
   11a20:	cbz	x1, 11c20 <__sanitizer_cov_dump@@Base+0x1610>
   11a24:	add	x9, x19, #0x208, lsl #12
   11a28:	mov	x2, #0x0                   	// #0
   11a2c:	add	x9, x9, #0x630
   11a30:	mov	x11, #0x1                   	// #1
   11a34:	rbit	x0, x1
   11a38:	clz	x0, x0
   11a3c:	lsl	x0, x11, x0
   11a40:	orr	x7, x0, x2
   11a44:	cmp	x7, x2
   11a48:	rbit	x2, x1
   11a4c:	str	x7, [x6, #1584]
   11a50:	clz	x2, x2
   11a54:	bic	x1, x1, x0
   11a58:	add	x7, x2, #0x1
   11a5c:	b.eq	11bc0 <__sanitizer_cov_dump@@Base+0x15b0>  // b.none
   11a60:	mov	x12, #0x0                   	// #0
   11a64:	str	xzr, [x9, x7, lsl #3]
   11a68:	add	x2, x2, x4
   11a6c:	add	x2, x2, #0x1
   11a70:	ldr	x0, [x10, x2, lsl #3]
   11a74:	orr	x0, x0, x12
   11a78:	str	x0, [x9, x7, lsl #3]
   11a7c:	cbz	x1, 11c20 <__sanitizer_cov_dump@@Base+0x1610>
   11a80:	ldr	x2, [x6, #1584]
   11a84:	b	11a34 <__sanitizer_cov_dump@@Base+0x1424>
   11a88:	ldr	x0, [x21, #8]
   11a8c:	mov	x4, #0x1                   	// #1
   11a90:	ldr	x3, [x6, #2104]
   11a94:	ands	x0, x3, x0
   11a98:	b.eq	11b20 <__sanitizer_cov_dump@@Base+0x1510>  // b.none
   11a9c:	rbit	x1, x0
   11aa0:	clz	x1, x1
   11aa4:	mov	x2, x1
   11aa8:	lsl	x1, x4, x1
   11aac:	tst	x1, x3
   11ab0:	bic	x0, x0, x1
   11ab4:	b.eq	11d1c <__sanitizer_cov_dump@@Base+0x170c>  // b.none
   11ab8:	add	x1, x2, #0x1
   11abc:	ldr	x2, [x23, x1, lsl #3]
   11ac0:	ldr	x1, [x7, x1, lsl #3]
   11ac4:	tst	x2, x1
   11ac8:	b.eq	11d1c <__sanitizer_cov_dump@@Base+0x170c>  // b.none
   11acc:	ldr	x1, [x22]
   11ad0:	adrp	x0, 11000 <__sanitizer_cov_dump@@Base+0x9f0>
   11ad4:	add	x0, x0, #0xd98
   11ad8:	mov	w3, #0x0                   	// #0
   11adc:	ldr	x2, [x20]
   11ae0:	ldr	x4, [x1]
   11ae4:	cmp	x4, x0
   11ae8:	b.ne	11d5c <__sanitizer_cov_dump@@Base+0x174c>  // b.any
   11aec:	ldr	x1, [x1, #8]
   11af0:	adrp	x0, 11000 <__sanitizer_cov_dump@@Base+0x9f0>
   11af4:	add	x0, x0, #0xda0
   11af8:	mov	w4, #0x0                   	// #0
   11afc:	cmp	x1, x0
   11b00:	b.ne	11d3c <__sanitizer_cov_dump@@Base+0x172c>  // b.any
   11b04:	mov	x1, x23
   11b08:	add	x0, x19, #0x10
   11b0c:	bl	11f68 <__sanitizer_cov_dump@@Base+0x1958>
   11b10:	mov	x2, x20
   11b14:	mov	x1, x22
   11b18:	mov	x0, x19
   11b1c:	bl	11480 <__sanitizer_cov_dump@@Base+0xe70>
   11b20:	dmb	ish
   11b24:	strb	wzr, [x19, #8]
   11b28:	ldr	x23, [sp, #32]
   11b2c:	ldp	x21, x22, [sp, #16]
   11b30:	ldr	x30, [sp, #40]
   11b34:	ldp	x19, x20, [sp], #64
   11b38:	ret
   11b3c:	ldr	x0, [x23, x8, lsl #3]
   11b40:	tst	x3, x0
   11b44:	b.eq	11a0c <__sanitizer_cov_dump@@Base+0x13fc>  // b.none
   11b48:	b	11b20 <__sanitizer_cov_dump@@Base+0x1510>
   11b4c:	and	x2, x0, #0xfffffffffffff000
   11b50:	cmp	x1, x2
   11b54:	b.ne	11984 <__sanitizer_cov_dump@@Base+0x1374>  // b.any
   11b58:	ldr	x6, [x21, #1568]
   11b5c:	cbz	x6, 11b2c <__sanitizer_cov_dump@@Base+0x151c>
   11b60:	ubfx	x3, x0, #6, #6
   11b64:	mov	x1, #0x1                   	// #1
   11b68:	add	x5, x19, #0x630
   11b6c:	add	x8, x21, #0x420
   11b70:	add	x10, x3, x1
   11b74:	lsl	x0, x1, x0
   11b78:	lsl	x3, x1, x3
   11b7c:	mov	w7, #0x208                 	// #520
   11b80:	mov	x1, #0x0                   	// #0
   11b84:	mov	w9, #0x41                  	// #65
   11b88:	lsl	x2, x1, #3
   11b8c:	ldr	w2, [x8, x2]
   11b90:	umull	x4, w2, w7
   11b94:	ldr	x4, [x5, x4]
   11b98:	tst	x3, x4
   11b9c:	b.eq	11984 <__sanitizer_cov_dump@@Base+0x1374>  // b.none
   11ba0:	umaddl	x2, w2, w9, x10
   11ba4:	ldr	x2, [x5, x2, lsl #3]
   11ba8:	tst	x0, x2
   11bac:	b.eq	11984 <__sanitizer_cov_dump@@Base+0x1374>  // b.none
   11bb0:	add	x1, x1, #0x1
   11bb4:	cmp	x6, x1
   11bb8:	b.ne	11b88 <__sanitizer_cov_dump@@Base+0x1578>  // b.any
   11bbc:	b	11b2c <__sanitizer_cov_dump@@Base+0x151c>
   11bc0:	ldr	x12, [x9, x7, lsl #3]
   11bc4:	b	11a68 <__sanitizer_cov_dump@@Base+0x1458>
   11bc8:	mov	x4, x1
   11bcc:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11bd0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11bd4:	add	x2, x2, #0x7a0
   11bd8:	add	x0, x0, #0x4d8
   11bdc:	mov	w1, #0x6c                  	// #108
   11be0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11be4:	mov	x3, x0
   11be8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11bec:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11bf0:	add	x2, x2, #0x4c0
   11bf4:	add	x0, x0, #0x4d8
   11bf8:	mov	x4, #0x1000                	// #4096
   11bfc:	mov	w1, #0x172                 	// #370
   11c00:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11c04:	mov	x3, x1
   11c08:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11c0c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11c10:	add	x2, x2, #0x770
   11c14:	add	x0, x0, #0x4d8
   11c18:	mov	w1, #0x173                 	// #371
   11c1c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11c20:	add	x7, x19, #0x208, lsl #12
   11c24:	add	x9, x19, #0x208, lsl #12
   11c28:	add	x7, x7, #0x838
   11c2c:	add	x9, x9, #0x630
   11c30:	str	x5, [x6, #2104]
   11c34:	mov	w12, #0x40                  	// #64
   11c38:	mov	x13, #0x208                 	// #520
   11c3c:	mov	x5, #0x1                   	// #1
   11c40:	str	x3, [x7, x8, lsl #3]
   11c44:	ldr	x0, [x6, #1584]
   11c48:	cbz	x0, 11a88 <__sanitizer_cov_dump@@Base+0x1478>
   11c4c:	rbit	x1, x0
   11c50:	clz	x1, x1
   11c54:	add	x3, x1, #0x1
   11c58:	lsl	x4, x5, x1
   11c5c:	bic	x0, x0, x4
   11c60:	str	x0, [x6, #1584]
   11c64:	ldr	x2, [x9, x3, lsl #3]
   11c68:	cbz	x2, 11d78 <__sanitizer_cov_dump@@Base+0x1768>
   11c6c:	rbit	x11, x2
   11c70:	clz	x11, x11
   11c74:	lsl	x8, x5, x11
   11c78:	bic	x2, x2, x8
   11c7c:	str	x2, [x9, x3, lsl #3]
   11c80:	cbz	x2, 11c8c <__sanitizer_cov_dump@@Base+0x167c>
   11c84:	orr	x0, x4, x0
   11c88:	str	x0, [x6, #1584]
   11c8c:	sxtw	x11, w11
   11c90:	ldr	x3, [x6, #2104]
   11c94:	smaddl	x1, w1, w12, x11
   11c98:	lsr	x0, x1, #6
   11c9c:	lsl	x2, x5, x1
   11ca0:	add	x4, x0, #0x1
   11ca4:	lsl	x0, x5, x0
   11ca8:	tst	x3, x0
   11cac:	b.ne	11d24 <__sanitizer_cov_dump@@Base+0x1714>  // b.any
   11cb0:	orr	x0, x3, x0
   11cb4:	str	x0, [x6, #2104]
   11cb8:	str	x2, [x7, x4, lsl #3]
   11cbc:	mul	x0, x1, x13
   11cc0:	add	x1, x1, x1, lsl #6
   11cc4:	ldr	x2, [x10, x0]
   11cc8:	ldr	x8, [x6, #1584]
   11ccc:	cbz	x2, 11c44 <__sanitizer_cov_dump@@Base+0x1634>
   11cd0:	rbit	x4, x2
   11cd4:	clz	x4, x4
   11cd8:	mov	x0, x4
   11cdc:	add	x3, x0, #0x1
   11ce0:	lsl	x4, x5, x4
   11ce4:	orr	x11, x4, x8
   11ce8:	str	x11, [x6, #1584]
   11cec:	cmp	x11, x8
   11cf0:	bic	x2, x2, x4
   11cf4:	lsl	x3, x3, #3
   11cf8:	b.eq	11d00 <__sanitizer_cov_dump@@Base+0x16f0>  // b.none
   11cfc:	str	xzr, [x9, x3]
   11d00:	add	x0, x0, x1
   11d04:	add	x0, x0, #0x1
   11d08:	ldr	x4, [x9, x3]
   11d0c:	ldr	x0, [x10, x0, lsl #3]
   11d10:	orr	x0, x4, x0
   11d14:	str	x0, [x9, x3]
   11d18:	b	11cc8 <__sanitizer_cov_dump@@Base+0x16b8>
   11d1c:	cbnz	x0, 11a9c <__sanitizer_cov_dump@@Base+0x148c>
   11d20:	b	11b20 <__sanitizer_cov_dump@@Base+0x1510>
   11d24:	ldr	x0, [x7, x4, lsl #3]
   11d28:	orr	x2, x0, x2
   11d2c:	str	x2, [x7, x4, lsl #3]
   11d30:	cmp	x0, x2
   11d34:	b.eq	11c44 <__sanitizer_cov_dump@@Base+0x1634>  // b.none
   11d38:	b	11cbc <__sanitizer_cov_dump@@Base+0x16ac>
   11d3c:	str	x2, [sp, #48]
   11d40:	mov	x0, x22
   11d44:	str	w3, [sp, #60]
   11d48:	blr	x1
   11d4c:	mov	w4, w0
   11d50:	ldr	w3, [sp, #60]
   11d54:	ldr	x2, [sp, #48]
   11d58:	b	11b04 <__sanitizer_cov_dump@@Base+0x14f4>
   11d5c:	str	x2, [sp, #48]
   11d60:	mov	x0, x22
   11d64:	blr	x4
   11d68:	mov	w3, w0
   11d6c:	ldr	x1, [x22]
   11d70:	ldr	x2, [sp, #48]
   11d74:	b	11aec <__sanitizer_cov_dump@@Base+0x14dc>
   11d78:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
   11d7c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11d80:	add	x2, x2, #0x840
   11d84:	add	x0, x0, #0x468
   11d88:	mov	x4, #0x0                   	// #0
   11d8c:	mov	x3, #0x0                   	// #0
   11d90:	mov	w1, #0x30                  	// #48
   11d94:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11d98:	mov	w0, #0x0                   	// #0
   11d9c:	ret
   11da0:	mov	w0, #0x0                   	// #0
   11da4:	ret
   11da8:	stp	x19, x20, [sp, #-112]!
   11dac:	add	x1, x1, x1, lsl #6
   11db0:	mov	x19, #0x0                   	// #0
   11db4:	stp	x21, x22, [sp, #16]
   11db8:	mov	x22, x0
   11dbc:	add	x21, x1, #0x1
   11dc0:	stp	x23, x24, [sp, #32]
   11dc4:	mov	x24, x3
   11dc8:	add	x3, x3, #0x8
   11dcc:	stp	x25, x26, [sp, #48]
   11dd0:	sub	x25, x4, #0x1
   11dd4:	mov	x20, #0x0                   	// #0
   11dd8:	stp	x27, x28, [sp, #64]
   11ddc:	add	x28, x0, x1, lsl #3
   11de0:	mov	x26, #0x0                   	// #0
   11de4:	mov	x23, #0x0                   	// #0
   11de8:	mov	x27, #0x1                   	// #1
   11dec:	str	x30, [sp, #80]
   11df0:	cbnz	x20, 11e9c <__sanitizer_cov_dump@@Base+0x188c>
   11df4:	cbnz	x23, 11e7c <__sanitizer_cov_dump@@Base+0x186c>
   11df8:	ldr	x0, [x28]
   11dfc:	cbz	x0, 11e7c <__sanitizer_cov_dump@@Base+0x186c>
   11e00:	cbz	x19, 11ee0 <__sanitizer_cov_dump@@Base+0x18d0>
   11e04:	mov	x5, x26
   11e08:	mov	x20, x23
   11e0c:	rbit	x1, x19
   11e10:	clz	x1, x1
   11e14:	lsl	x0, x27, x1
   11e18:	bic	x19, x19, x0
   11e1c:	orr	x0, x19, x20
   11e20:	cbnz	x0, 11e30 <__sanitizer_cov_dump@@Base+0x1820>
   11e24:	add	x23, x23, #0x1
   11e28:	mov	x20, #0x0                   	// #0
   11e2c:	mov	x19, #0x0                   	// #0
   11e30:	cbz	x25, 11df0 <__sanitizer_cov_dump@@Base+0x17e0>
   11e34:	sxtw	x1, w1
   11e38:	add	x1, x1, x5, lsl #6
   11e3c:	str	x1, [x24, #8]
   11e40:	cmp	x1, #0x1, lsl #12
   11e44:	b.hi	11f48 <__sanitizer_cov_dump@@Base+0x1938>  // b.pmore
   11e48:	lsr	x0, x1, #12
   11e4c:	ubfx	x4, x1, #6, #6
   11e50:	lsl	x6, x27, x4
   11e54:	ldr	x5, [x2, x0, lsl #3]
   11e58:	tst	x6, x5
   11e5c:	b.eq	11f08 <__sanitizer_cov_dump@@Base+0x18f8>  // b.none
   11e60:	add	x0, x4, x0, lsl #6
   11e64:	lsl	x4, x27, x1
   11e68:	add	x0, x0, #0x1
   11e6c:	ldr	x5, [x2, x0, lsl #3]
   11e70:	tst	x4, x5
   11e74:	b.eq	11f08 <__sanitizer_cov_dump@@Base+0x18f8>  // b.none
   11e78:	mov	x20, #0x2                   	// #2
   11e7c:	mov	x0, x20
   11e80:	ldp	x21, x22, [sp, #16]
   11e84:	ldp	x23, x24, [sp, #32]
   11e88:	ldp	x25, x26, [sp, #48]
   11e8c:	ldp	x27, x28, [sp, #64]
   11e90:	ldr	x30, [sp, #80]
   11e94:	ldp	x19, x20, [sp], #112
   11e98:	ret
   11e9c:	cbnz	x19, 11ec8 <__sanitizer_cov_dump@@Base+0x18b8>
   11ea0:	rbit	x26, x20
   11ea4:	clz	x26, x26
   11ea8:	add	x5, x26, x23, lsl #6
   11eac:	mov	x0, x26
   11eb0:	add	x1, x5, x21
   11eb4:	ldr	x19, [x22, x1, lsl #3]
   11eb8:	cbz	x19, 11f28 <__sanitizer_cov_dump@@Base+0x1918>
   11ebc:	lsl	x0, x27, x0
   11ec0:	bic	x20, x20, x0
   11ec4:	b	11e0c <__sanitizer_cov_dump@@Base+0x17fc>
   11ec8:	rbit	x1, x19
   11ecc:	add	x5, x26, x23, lsl #6
   11ed0:	clz	x1, x1
   11ed4:	lsl	x0, x27, x1
   11ed8:	bic	x19, x19, x0
   11edc:	b	11e30 <__sanitizer_cov_dump@@Base+0x1820>
   11ee0:	mov	x20, x0
   11ee4:	mov	x23, x19
   11ee8:	rbit	x26, x20
   11eec:	clz	x26, x26
   11ef0:	add	x5, x26, x23, lsl #6
   11ef4:	mov	x0, x26
   11ef8:	add	x1, x5, x21
   11efc:	ldr	x19, [x22, x1, lsl #3]
   11f00:	cbnz	x19, 11ebc <__sanitizer_cov_dump@@Base+0x18ac>
   11f04:	b	11f28 <__sanitizer_cov_dump@@Base+0x1918>
   11f08:	mov	x4, x25
   11f0c:	mov	x0, x22
   11f10:	stp	x2, x3, [sp, #96]
   11f14:	bl	11da8 <__sanitizer_cov_dump@@Base+0x1798>
   11f18:	ldp	x2, x3, [sp, #96]
   11f1c:	cbz	x0, 11df0 <__sanitizer_cov_dump@@Base+0x17e0>
   11f20:	add	x20, x0, #0x1
   11f24:	b	11e7c <__sanitizer_cov_dump@@Base+0x186c>
   11f28:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11f2c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11f30:	add	x2, x2, #0x448
   11f34:	add	x0, x0, #0x468
   11f38:	mov	x4, #0x0                   	// #0
   11f3c:	mov	x3, #0x0                   	// #0
   11f40:	mov	w1, #0x132                 	// #306
   11f44:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11f48:	mov	x3, x1
   11f4c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11f50:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   11f54:	add	x2, x2, #0x4a8
   11f58:	add	x0, x0, #0x468
   11f5c:	mov	x4, #0x1000                	// #4096
   11f60:	mov	w1, #0x143                 	// #323
   11f64:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11f68:	stp	x19, x20, [sp, #-352]!
   11f6c:	mov	x8, x0
   11f70:	ldr	x0, [x0]
   11f74:	ldr	x5, [x1, #520]
   11f78:	str	x30, [sp, #16]
   11f7c:	cmp	x0, x5
   11f80:	b.eq	11f94 <__sanitizer_cov_dump@@Base+0x1984>  // b.none
   11f84:	str	xzr, [x1]
   11f88:	str	x0, [x1, #520]
   11f8c:	str	xzr, [x1, #1040]
   11f90:	str	xzr, [x1, #1560]
   11f94:	cmp	x2, #0xfff
   11f98:	b.ls	12024 <__sanitizer_cov_dump@@Base+0x1a14>  // b.plast
   11f9c:	ldr	x0, [x8]
   11fa0:	and	x5, x2, #0xfffffffffffff000
   11fa4:	cmp	x0, x5
   11fa8:	b.ne	12044 <__sanitizer_cov_dump@@Base+0x1a34>  // b.any
   11fac:	ldr	x5, [x1, #520]
   11fb0:	cmp	x5, x0
   11fb4:	b.ne	12064 <__sanitizer_cov_dump@@Base+0x1a54>  // b.any
   11fb8:	add	x12, x8, #0x208, lsl #12
   11fbc:	str	xzr, [x12, #1568]
   11fc0:	ldr	x5, [x1]
   11fc4:	cbz	x5, 12088 <__sanitizer_cov_dump@@Base+0x1a78>
   11fc8:	add	x10, x8, #0x208, lsl #12
   11fcc:	mov	x6, #0x0                   	// #0
   11fd0:	add	x10, x10, #0x620
   11fd4:	mov	x11, #0x1                   	// #1
   11fd8:	rbit	x0, x5
   11fdc:	clz	x0, x0
   11fe0:	lsl	x9, x11, x0
   11fe4:	orr	x7, x9, x6
   11fe8:	str	x7, [x12, #1568]
   11fec:	bic	x5, x5, x9
   11ff0:	cmp	x7, x6
   11ff4:	add	x0, x0, #0x1
   11ff8:	b.eq	1201c <__sanitizer_cov_dump@@Base+0x1a0c>  // b.none
   11ffc:	mov	x7, #0x0                   	// #0
   12000:	str	xzr, [x10, x0, lsl #3]
   12004:	ldr	x6, [x1, x0, lsl #3]
   12008:	orr	x6, x6, x7
   1200c:	str	x6, [x10, x0, lsl #3]
   12010:	cbz	x5, 12084 <__sanitizer_cov_dump@@Base+0x1a74>
   12014:	ldr	x6, [x12, #1568]
   12018:	b	11fd8 <__sanitizer_cov_dump@@Base+0x19c8>
   1201c:	ldr	x7, [x10, x0, lsl #3]
   12020:	b	12004 <__sanitizer_cov_dump@@Base+0x19f4>
   12024:	mov	x3, x2
   12028:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1202c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12030:	add	x0, x0, #0x4d8
   12034:	add	x2, x2, #0x4c0
   12038:	mov	x4, #0x1000                	// #4096
   1203c:	mov	w1, #0x172                 	// #370
   12040:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12044:	mov	x3, x0
   12048:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1204c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12050:	mov	x4, x5
   12054:	add	x2, x2, #0x770
   12058:	add	x0, x0, #0x4d8
   1205c:	mov	w1, #0x173                 	// #371
   12060:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12064:	mov	x4, x0
   12068:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1206c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12070:	mov	x3, x5
   12074:	add	x2, x2, #0x7a0
   12078:	add	x0, x0, #0x4d8
   1207c:	mov	w1, #0x6c                  	// #108
   12080:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12084:	ldr	x5, [x12, #1568]
   12088:	ubfx	x0, x2, #6, #6
   1208c:	mov	x6, #0x1                   	// #1
   12090:	add	x10, x8, #0x208, lsl #12
   12094:	add	x19, x0, x6
   12098:	lsl	x16, x6, x0
   1209c:	mov	x11, x6
   120a0:	and	x15, x2, #0xfff
   120a4:	add	x10, x10, #0x620
   120a8:	add	x17, x8, #0x620
   120ac:	add	x30, sp, #0x20
   120b0:	mov	x0, #0x0                   	// #0
   120b4:	lsl	x13, x6, x2
   120b8:	mov	w20, #0x40                  	// #64
   120bc:	cbz	x5, 12138 <__sanitizer_cov_dump@@Base+0x1b28>
   120c0:	rbit	x2, x5
   120c4:	clz	x2, x2
   120c8:	add	x9, x2, #0x1
   120cc:	lsl	x7, x11, x2
   120d0:	bic	x5, x5, x7
   120d4:	str	x5, [x12, #1568]
   120d8:	ldr	x6, [x10, x9, lsl #3]
   120dc:	cbz	x6, 12224 <__sanitizer_cov_dump@@Base+0x1c14>
   120e0:	rbit	x18, x6
   120e4:	clz	x18, x18
   120e8:	lsl	x14, x11, x18
   120ec:	bic	x6, x6, x14
   120f0:	str	x6, [x10, x9, lsl #3]
   120f4:	cbnz	x6, 121fc <__sanitizer_cov_dump@@Base+0x1bec>
   120f8:	sxtw	x18, w18
   120fc:	smaddl	x2, w2, w20, x18
   12100:	add	x9, x2, x2, lsl #6
   12104:	add	x14, x19, x9
   12108:	ldr	x5, [x17, x9, lsl #3]
   1210c:	ands	x7, x5, x16
   12110:	b.ne	12218 <__sanitizer_cov_dump@@Base+0x1c08>  // b.any
   12114:	mov	x6, x13
   12118:	orr	x5, x5, x16
   1211c:	str	x5, [x17, x9, lsl #3]
   12120:	str	x6, [x17, x14, lsl #3]
   12124:	cmp	x0, #0x27
   12128:	ccmp	x7, x6, #0x4, ls  // ls = plast
   1212c:	b.ne	12208 <__sanitizer_cov_dump@@Base+0x1bf8>  // b.any
   12130:	ldr	x5, [x12, #1568]
   12134:	cbnz	x5, 120c0 <__sanitizer_cov_dump@@Base+0x1ab0>
   12138:	add	x12, x8, #0x410, lsl #12
   1213c:	mov	x5, #0x1                   	// #1
   12140:	cbz	x0, 121e8 <__sanitizer_cov_dump@@Base+0x1bd8>
   12144:	mov	x16, #0x10a3                	// #4259
   12148:	and	w15, w15, #0xffff
   1214c:	add	x17, sp, #0x20
   12150:	add	x11, x1, #0x418
   12154:	mov	x13, #0x1ffff               	// #131071
   12158:	movk	x16, #0x2, lsl #16
   1215c:	b	1216c <__sanitizer_cov_dump@@Base+0x1b5c>
   12160:	cmp	x0, x5
   12164:	add	x5, x5, #0x1
   12168:	b.eq	121e8 <__sanitizer_cov_dump@@Base+0x1bd8>  // b.none
   1216c:	ldr	x9, [x12, #2608]
   12170:	cmp	x9, x13
   12174:	b.hi	12160 <__sanitizer_cov_dump@@Base+0x1b50>  // b.pmore
   12178:	add	x2, x17, x5, lsl #3
   1217c:	ldr	x10, [x1, #1560]
   12180:	ldur	x7, [x2, #-8]
   12184:	and	w14, w7, #0xffff
   12188:	cbz	x10, 121f4 <__sanitizer_cov_dump@@Base+0x1be4>
   1218c:	mov	x2, #0x0                   	// #0
   12190:	b	121a0 <__sanitizer_cov_dump@@Base+0x1b90>
   12194:	add	x2, x2, #0x1
   12198:	cmp	x2, x10
   1219c:	b.eq	121f4 <__sanitizer_cov_dump@@Base+0x1be4>  // b.none
   121a0:	lsl	x6, x2, #3
   121a4:	ldr	w6, [x11, x6]
   121a8:	cmp	w6, w7
   121ac:	b.ne	12194 <__sanitizer_cov_dump@@Base+0x1b84>  // b.any
   121b0:	add	x2, x1, x2, lsl #3
   121b4:	ldr	w7, [x2, #1052]
   121b8:	add	x6, x9, x16
   121bc:	add	x9, x9, #0x1
   121c0:	str	x9, [x12, #2608]
   121c4:	cmp	x0, x5
   121c8:	lsl	x6, x6, #4
   121cc:	add	x5, x5, #0x1
   121d0:	add	x2, x8, x6
   121d4:	strh	w14, [x8, x6]
   121d8:	strh	w15, [x2, #2]
   121dc:	stp	w7, w3, [x2, #4]
   121e0:	str	w4, [x2, #12]
   121e4:	b.ne	1216c <__sanitizer_cov_dump@@Base+0x1b5c>  // b.any
   121e8:	ldr	x30, [sp, #16]
   121ec:	ldp	x19, x20, [sp], #352
   121f0:	ret
   121f4:	mov	w7, #0x0                   	// #0
   121f8:	b	121b8 <__sanitizer_cov_dump@@Base+0x1ba8>
   121fc:	orr	x7, x7, x5
   12200:	str	x7, [x12, #1568]
   12204:	b	120f8 <__sanitizer_cov_dump@@Base+0x1ae8>
   12208:	str	x2, [x30, x0, lsl #3]
   1220c:	add	x0, x0, #0x1
   12210:	ldr	x5, [x12, #1568]
   12214:	b	12134 <__sanitizer_cov_dump@@Base+0x1b24>
   12218:	ldr	x7, [x17, x14, lsl #3]
   1221c:	orr	x6, x7, x13
   12220:	b	12120 <__sanitizer_cov_dump@@Base+0x1b10>
   12224:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
   12228:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1222c:	add	x2, x2, #0x840
   12230:	add	x0, x0, #0x468
   12234:	mov	x4, #0x0                   	// #0
   12238:	mov	x3, #0x0                   	// #0
   1223c:	mov	w1, #0x30                  	// #48
   12240:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12244:	nop
   12248:	stp	x19, x20, [sp, #-112]!
   1224c:	stp	x23, x24, [sp, #32]
   12250:	mov	x23, x0
   12254:	mov	x0, x4
   12258:	str	x30, [sp, #80]
   1225c:	cbnz	x4, 12270 <__sanitizer_cov_dump@@Base+0x1c60>
   12260:	ldp	x23, x24, [sp, #32]
   12264:	ldr	x30, [sp, #80]
   12268:	ldp	x19, x20, [sp], #112
   1226c:	ret
   12270:	stp	x21, x22, [sp, #16]
   12274:	cmp	x1, #0x1, lsl #12
   12278:	mov	x22, x3
   1227c:	str	x1, [x3]
   12280:	b.hi	12428 <__sanitizer_cov_dump@@Base+0x1e18>  // b.pmore
   12284:	lsr	x3, x1, #12
   12288:	ubfx	x5, x1, #6, #6
   1228c:	mov	x4, #0x1                   	// #1
   12290:	lsl	x7, x4, x5
   12294:	ldr	x6, [x2, x3, lsl #3]
   12298:	tst	x7, x6
   1229c:	b.eq	122c4 <__sanitizer_cov_dump@@Base+0x1cb4>  // b.none
   122a0:	add	x3, x5, x3, lsl #6
   122a4:	lsl	x5, x4, x1
   122a8:	add	x3, x3, x4
   122ac:	ldr	x6, [x2, x3, lsl #3]
   122b0:	tst	x5, x6
   122b4:	b.eq	122c4 <__sanitizer_cov_dump@@Base+0x1cb4>  // b.none
   122b8:	mov	x0, x4
   122bc:	ldp	x21, x22, [sp, #16]
   122c0:	b	12260 <__sanitizer_cov_dump@@Base+0x1c50>
   122c4:	add	x1, x1, x1, lsl #6
   122c8:	sub	x20, x0, #0x1
   122cc:	add	x3, x22, #0x8
   122d0:	stp	x27, x28, [sp, #64]
   122d4:	add	x19, x23, x1, lsl #3
   122d8:	add	x28, x1, #0x1
   122dc:	mov	x21, #0x0                   	// #0
   122e0:	mov	x24, #0x0                   	// #0
   122e4:	mov	x27, #0x1                   	// #1
   122e8:	stp	x25, x26, [sp, #48]
   122ec:	mov	x26, #0x0                   	// #0
   122f0:	mov	x25, #0x0                   	// #0
   122f4:	cbnz	x24, 12390 <__sanitizer_cov_dump@@Base+0x1d80>
   122f8:	cbnz	x25, 12470 <__sanitizer_cov_dump@@Base+0x1e60>
   122fc:	ldr	x0, [x19]
   12300:	cbz	x0, 12470 <__sanitizer_cov_dump@@Base+0x1e60>
   12304:	cbz	x21, 123d4 <__sanitizer_cov_dump@@Base+0x1dc4>
   12308:	mov	x1, x26
   1230c:	mov	x24, x25
   12310:	rbit	x0, x21
   12314:	clz	x0, x0
   12318:	lsl	x4, x27, x0
   1231c:	bic	x21, x21, x4
   12320:	orr	x4, x24, x21
   12324:	cbnz	x4, 12334 <__sanitizer_cov_dump@@Base+0x1d24>
   12328:	add	x25, x25, #0x1
   1232c:	mov	x21, #0x0                   	// #0
   12330:	mov	x24, #0x0                   	// #0
   12334:	cbz	x20, 122f4 <__sanitizer_cov_dump@@Base+0x1ce4>
   12338:	sxtw	x0, w0
   1233c:	add	x1, x0, x1, lsl #6
   12340:	str	x1, [x22, #8]
   12344:	cmp	x1, #0x1, lsl #12
   12348:	b.hi	12430 <__sanitizer_cov_dump@@Base+0x1e20>  // b.pmore
   1234c:	lsr	x0, x1, #12
   12350:	ubfx	x4, x1, #6, #6
   12354:	lsl	x6, x27, x4
   12358:	ldr	x5, [x2, x0, lsl #3]
   1235c:	tst	x6, x5
   12360:	b.eq	123fc <__sanitizer_cov_dump@@Base+0x1dec>  // b.none
   12364:	add	x0, x4, x0, lsl #6
   12368:	lsl	x4, x27, x1
   1236c:	add	x0, x0, #0x1
   12370:	ldr	x5, [x2, x0, lsl #3]
   12374:	tst	x4, x5
   12378:	b.eq	123fc <__sanitizer_cov_dump@@Base+0x1dec>  // b.none
   1237c:	mov	x0, #0x2                   	// #2
   12380:	ldp	x21, x22, [sp, #16]
   12384:	ldp	x25, x26, [sp, #48]
   12388:	ldp	x27, x28, [sp, #64]
   1238c:	b	12260 <__sanitizer_cov_dump@@Base+0x1c50>
   12390:	cbnz	x21, 123bc <__sanitizer_cov_dump@@Base+0x1dac>
   12394:	rbit	x26, x24
   12398:	clz	x26, x26
   1239c:	add	x1, x26, x25, lsl #6
   123a0:	mov	x0, x26
   123a4:	add	x4, x1, x28
   123a8:	ldr	x21, [x23, x4, lsl #3]
   123ac:	cbz	x21, 12450 <__sanitizer_cov_dump@@Base+0x1e40>
   123b0:	lsl	x0, x27, x0
   123b4:	bic	x24, x24, x0
   123b8:	b	12310 <__sanitizer_cov_dump@@Base+0x1d00>
   123bc:	rbit	x0, x21
   123c0:	add	x1, x26, x25, lsl #6
   123c4:	clz	x0, x0
   123c8:	lsl	x4, x27, x0
   123cc:	bic	x21, x21, x4
   123d0:	b	12334 <__sanitizer_cov_dump@@Base+0x1d24>
   123d4:	mov	x25, x24
   123d8:	mov	x24, x0
   123dc:	rbit	x26, x24
   123e0:	clz	x26, x26
   123e4:	add	x1, x26, x25, lsl #6
   123e8:	mov	x0, x26
   123ec:	add	x4, x1, x28
   123f0:	ldr	x21, [x23, x4, lsl #3]
   123f4:	cbnz	x21, 123b0 <__sanitizer_cov_dump@@Base+0x1da0>
   123f8:	b	12450 <__sanitizer_cov_dump@@Base+0x1e40>
   123fc:	mov	x4, x20
   12400:	mov	x0, x23
   12404:	stp	x2, x3, [sp, #96]
   12408:	bl	11da8 <__sanitizer_cov_dump@@Base+0x1798>
   1240c:	ldp	x2, x3, [sp, #96]
   12410:	cbz	x0, 122f4 <__sanitizer_cov_dump@@Base+0x1ce4>
   12414:	add	x0, x0, #0x1
   12418:	ldp	x21, x22, [sp, #16]
   1241c:	ldp	x25, x26, [sp, #48]
   12420:	ldp	x27, x28, [sp, #64]
   12424:	b	12260 <__sanitizer_cov_dump@@Base+0x1c50>
   12428:	stp	x25, x26, [sp, #48]
   1242c:	stp	x27, x28, [sp, #64]
   12430:	mov	x3, x1
   12434:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12438:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1243c:	add	x2, x2, #0x4a8
   12440:	add	x0, x0, #0x468
   12444:	mov	x4, #0x1000                	// #4096
   12448:	mov	w1, #0x143                 	// #323
   1244c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12450:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12454:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12458:	add	x2, x2, #0x448
   1245c:	add	x0, x0, #0x468
   12460:	mov	x4, #0x0                   	// #0
   12464:	mov	x3, #0x0                   	// #0
   12468:	mov	w1, #0x132                 	// #306
   1246c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12470:	mov	x0, #0x0                   	// #0
   12474:	ldp	x21, x22, [sp, #16]
   12478:	ldp	x25, x26, [sp, #48]
   1247c:	ldp	x27, x28, [sp, #64]
   12480:	b	12260 <__sanitizer_cov_dump@@Base+0x1c50>
   12484:	nop
   12488:	mov	x2, x1
   1248c:	mov	x4, #0x0                   	// #0
   12490:	mov	x1, x0
   12494:	mov	x3, #0x0                   	// #0
   12498:	mov	w0, #0x2                   	// #2
   1249c:	b	180a8 <__sanitizer_set_report_fd@@Base+0x5188>
   124a0:	stp	x19, x30, [sp, #-16]!
   124a4:	mov	x19, x0
   124a8:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   124ac:	mov	x2, x0
   124b0:	mov	x1, x19
   124b4:	adrp	x0, 5b000 <_Unwind_Backtrace@GCC_3.3>
   124b8:	ldp	x19, x30, [sp], #16
   124bc:	add	x0, x0, #0x4d8
   124c0:	b	184e0 <__sanitizer_set_report_fd@@Base+0x55c0>
   124c4:	nop
   124c8:	stp	x19, x20, [sp, #-32]!
   124cc:	mov	x19, x0
   124d0:	ldr	x0, [x0]
   124d4:	str	x30, [sp, #24]
   124d8:	ldrb	w3, [x0]
   124dc:	and	x3, x3, #0xff
   124e0:	cmp	x3, #0x1
   124e4:	b.ne	125e8 <__sanitizer_cov_dump@@Base+0x1fd8>  // b.any
   124e8:	ldr	w0, [x19, #8]
   124ec:	sub	w0, w0, #0x1
   124f0:	cmp	w0, #0x1
   124f4:	b.ls	125a0 <__sanitizer_cov_dump@@Base+0x1f90>  // b.plast
   124f8:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x2c48>
   124fc:	mov	x20, x0
   12500:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   12504:	ldr	x1, [x1, #3848]
   12508:	ldr	x0, [x1]
   1250c:	cmp	x0, x20
   12510:	b.eq	125ac <__sanitizer_cov_dump@@Base+0x1f9c>  // b.none
   12514:	ldr	w0, [x19, #8]
   12518:	cmn	w0, #0x1
   1251c:	b.eq	125c4 <__sanitizer_cov_dump@@Base+0x1fb4>  // b.none
   12520:	ldr	x1, [x19, #8208]
   12524:	cmp	x1, x20
   12528:	b.eq	125a0 <__sanitizer_cov_dump@@Base+0x1f90>  // b.none
   1252c:	str	x21, [sp, #16]
   12530:	bl	18050 <__sanitizer_set_report_fd@@Base+0x5130>
   12534:	bl	f788 <__sancov_default_options@@Base+0x3038>
   12538:	cmp	x0, #0x0
   1253c:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   12540:	mov	x4, x0
   12544:	mov	x0, #0x100c                	// #4108
   12548:	add	x21, x19, x0
   1254c:	ldr	x0, [x1, #4056]
   12550:	cset	w1, ne  // ne = any
   12554:	add	x3, x19, #0xc
   12558:	ldrb	w0, [x0, #48]
   1255c:	tst	w1, w0
   12560:	b.ne	125cc <__sanitizer_cov_dump@@Base+0x1fbc>  // b.any
   12564:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12568:	mov	x4, x20
   1256c:	add	x2, x2, #0x850
   12570:	mov	x0, x21
   12574:	mov	x1, #0x1000                	// #4096
   12578:	bl	19f98 <OnPrint@@Base+0x8>
   1257c:	mov	x0, x21
   12580:	mov	x2, #0x0                   	// #0
   12584:	mov	w1, #0x1                   	// #1
   12588:	bl	18008 <__sanitizer_set_report_fd@@Base+0x50e8>
   1258c:	str	w0, [x19, #8]
   12590:	cmn	w0, #0x1
   12594:	b.eq	12608 <__sanitizer_cov_dump@@Base+0x1ff8>  // b.none
   12598:	ldr	x21, [sp, #16]
   1259c:	str	x20, [x19, #8208]
   125a0:	ldr	x30, [sp, #24]
   125a4:	ldp	x19, x20, [sp], #32
   125a8:	ret
   125ac:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   125b0:	ldr	x0, [x0, #3840]
   125b4:	ldr	x20, [x0]
   125b8:	ldr	w0, [x19, #8]
   125bc:	cmn	w0, #0x1
   125c0:	b.ne	12520 <__sanitizer_cov_dump@@Base+0x1f10>  // b.any
   125c4:	str	x21, [sp, #16]
   125c8:	b	12534 <__sanitizer_cov_dump@@Base+0x1f24>
   125cc:	mov	x5, x20
   125d0:	mov	x0, x21
   125d4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   125d8:	mov	x1, #0x1000                	// #4096
   125dc:	add	x2, x2, #0x840
   125e0:	bl	19f98 <OnPrint@@Base+0x8>
   125e4:	b	1257c <__sanitizer_cov_dump@@Base+0x1f6c>
   125e8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   125ec:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   125f0:	add	x2, x2, #0x7c8
   125f4:	add	x0, x0, #0x800
   125f8:	mov	x4, #0x1                   	// #1
   125fc:	mov	w1, #0x2a                  	// #42
   12600:	str	x21, [sp, #16]
   12604:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12608:	adrp	x19, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1260c:	add	x19, x19, #0x858
   12610:	mov	x0, x19
   12614:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   12618:	mov	x1, x19
   1261c:	mov	x2, x0
   12620:	mov	x4, #0x0                   	// #0
   12624:	mov	x3, #0x0                   	// #0
   12628:	mov	w0, #0x2                   	// #2
   1262c:	bl	180a8 <__sanitizer_set_report_fd@@Base+0x5188>
   12630:	mov	x0, x21
   12634:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   12638:	mov	x1, x21
   1263c:	mov	x2, x0
   12640:	mov	x4, #0x0                   	// #0
   12644:	mov	x3, #0x0                   	// #0
   12648:	mov	w0, #0x2                   	// #2
   1264c:	bl	180a8 <__sanitizer_set_report_fd@@Base+0x5188>
   12650:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   12654:	nop
   12658:	cbz	x1, 1274c <__sanitizer_cov_dump@@Base+0x213c>
   1265c:	sub	sp, sp, #0x30
   12660:	stp	x19, x20, [sp, #16]
   12664:	mov	x19, x0
   12668:	mov	x20, x1
   1266c:	mov	x0, x1
   12670:	stp	x21, x30, [sp, #32]
   12674:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   12678:	cmp	x0, #0xf9c
   1267c:	b.hi	1276c <__sanitizer_cov_dump@@Base+0x215c>  // b.pmore
   12680:	ldr	x21, [x19]
   12684:	mov	w1, #0x1                   	// #1
   12688:	ldxrb	w0, [x21]
   1268c:	stxrb	w2, w1, [x21]
   12690:	cbnz	w2, 12688 <__sanitizer_cov_dump@@Base+0x2078>
   12694:	dmb	ish
   12698:	tst	w0, #0xff
   1269c:	b.eq	126a8 <__sanitizer_cov_dump@@Base+0x2098>  // b.none
   126a0:	mov	x0, x21
   126a4:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   126a8:	ldr	w0, [x19, #8]
   126ac:	sub	w1, w0, #0x1
   126b0:	cmp	w1, #0x1
   126b4:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   126b8:	b.ne	126f8 <__sanitizer_cov_dump@@Base+0x20e8>  // b.any
   126bc:	mov	w0, #0xffffffff            	// #-1
   126c0:	str	w0, [x19, #8]
   126c4:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   126c8:	mov	x0, x20
   126cc:	add	x1, x1, #0x8a8
   126d0:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   126d4:	cbnz	w0, 12718 <__sanitizer_cov_dump@@Base+0x2108>
   126d8:	mov	w0, #0x1                   	// #1
   126dc:	str	w0, [x19, #8]
   126e0:	dmb	ish
   126e4:	strb	wzr, [x21]
   126e8:	ldp	x19, x20, [sp, #16]
   126ec:	ldp	x21, x30, [sp, #32]
   126f0:	add	sp, sp, #0x30
   126f4:	ret
   126f8:	bl	18050 <__sanitizer_set_report_fd@@Base+0x5130>
   126fc:	mov	w0, #0xffffffff            	// #-1
   12700:	str	w0, [x19, #8]
   12704:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12708:	mov	x0, x20
   1270c:	add	x1, x1, #0x8a8
   12710:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   12714:	cbz	w0, 126d8 <__sanitizer_cov_dump@@Base+0x20c8>
   12718:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1271c:	mov	x0, x20
   12720:	add	x1, x1, #0x8b0
   12724:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   12728:	cbnz	w0, 12750 <__sanitizer_cov_dump@@Base+0x2140>
   1272c:	mov	w0, #0x2                   	// #2
   12730:	str	w0, [x19, #8]
   12734:	dmb	ish
   12738:	strb	wzr, [x21]
   1273c:	ldp	x19, x20, [sp, #16]
   12740:	ldp	x21, x30, [sp, #32]
   12744:	add	sp, sp, #0x30
   12748:	ret
   1274c:	ret
   12750:	mov	x3, x20
   12754:	add	x0, x19, #0xc
   12758:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1275c:	mov	x1, #0x1000                	// #4096
   12760:	add	x2, x2, #0x98
   12764:	bl	19f98 <OnPrint@@Base+0x8>
   12768:	b	126e0 <__sanitizer_cov_dump@@Base+0x20d0>
   1276c:	ldrb	w7, [x20, #6]
   12770:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12774:	ldrb	w6, [x20, #5]
   12778:	add	x0, x0, #0x878
   1277c:	ldrb	w5, [x20, #4]
   12780:	ldrb	w4, [x20, #3]
   12784:	ldrb	w3, [x20, #2]
   12788:	ldrb	w2, [x20, #1]
   1278c:	ldrb	w1, [x20]
   12790:	ldrb	w8, [x20, #7]
   12794:	str	w8, [sp]
   12798:	bl	1a328 <OnPrint@@Base+0x398>
   1279c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   127a0:	stp	x19, x20, [sp, #-128]!
   127a4:	mov	w19, #0x1                   	// #1
   127a8:	str	x30, [sp, #80]
   127ac:	str	xzr, [x1]
   127b0:	str	xzr, [x2]
   127b4:	str	xzr, [x3]
   127b8:	cbz	x4, 128c4 <__sanitizer_cov_dump@@Base+0x22b4>
   127bc:	adrp	x19, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   127c0:	stp	x21, x22, [sp, #16]
   127c4:	mov	x21, x1
   127c8:	ldr	x19, [x19, #4016]
   127cc:	stp	x23, x24, [sp, #32]
   127d0:	mov	x22, x4
   127d4:	stp	x25, x26, [sp, #48]
   127d8:	mov	x23, x5
   127dc:	mov	x26, x0
   127e0:	ldr	x20, [x19]
   127e4:	stp	x27, x28, [sp, #64]
   127e8:	mov	x25, x2
   127ec:	mov	x28, x3
   127f0:	mov	x0, #0x0                   	// #0
   127f4:	cbz	x20, 12900 <__sanitizer_cov_dump@@Base+0x22f0>
   127f8:	cmp	x20, x22
   127fc:	add	x24, sp, #0x78
   12800:	csel	x20, x20, x22, ls  // ls = plast
   12804:	adrp	x27, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12808:	add	x1, x27, #0x8b8
   1280c:	str	x1, [sp, #104]
   12810:	ldr	x1, [x25]
   12814:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   12818:	ldr	x1, [sp, #104]
   1281c:	mov	w2, #0x0                   	// #0
   12820:	mov	x0, x20
   12824:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   12828:	str	x0, [x21]
   1282c:	str	x20, [x25]
   12830:	mov	x2, x23
   12834:	mov	x0, x26
   12838:	mov	w1, #0x0                   	// #0
   1283c:	bl	18008 <__sanitizer_set_report_fd@@Base+0x50e8>
   12840:	mov	w27, w0
   12844:	cmn	w0, #0x1
   12848:	b.eq	12914 <__sanitizer_cov_dump@@Base+0x2304>  // b.none
   1284c:	str	xzr, [x28]
   12850:	mov	x1, #0x0                   	// #0
   12854:	cbnz	x20, 12864 <__sanitizer_cov_dump@@Base+0x2254>
   12858:	b	128d4 <__sanitizer_cov_dump@@Base+0x22c4>
   1285c:	cmp	x1, x20
   12860:	b.cs	128d4 <__sanitizer_cov_dump@@Base+0x22c4>  // b.hs, b.nlast
   12864:	ldr	x5, [x21]
   12868:	sub	x2, x20, x1
   1286c:	mov	x4, x23
   12870:	mov	x3, x24
   12874:	mov	w0, w27
   12878:	add	x1, x5, x1
   1287c:	bl	18058 <__sanitizer_set_report_fd@@Base+0x5138>
   12880:	ands	w19, w0, #0xff
   12884:	b.eq	128f0 <__sanitizer_cov_dump@@Base+0x22e0>  // b.none
   12888:	ldr	x1, [x28]
   1288c:	ldr	x2, [sp, #120]
   12890:	add	x1, x2, x1
   12894:	str	x1, [x28]
   12898:	cmp	x1, x22
   1289c:	cset	w19, eq  // eq = none
   128a0:	cmp	x2, #0x0
   128a4:	csinc	w19, w19, wzr, ne  // ne = any
   128a8:	cbz	w19, 1285c <__sanitizer_cov_dump@@Base+0x224c>
   128ac:	mov	w0, w27
   128b0:	bl	18050 <__sanitizer_set_report_fd@@Base+0x5130>
   128b4:	ldp	x21, x22, [sp, #16]
   128b8:	ldp	x23, x24, [sp, #32]
   128bc:	ldp	x25, x26, [sp, #48]
   128c0:	ldp	x27, x28, [sp, #64]
   128c4:	mov	w0, w19
   128c8:	ldr	x30, [sp, #80]
   128cc:	ldp	x19, x20, [sp], #128
   128d0:	ret
   128d4:	mov	w0, w27
   128d8:	lsl	x20, x20, #1
   128dc:	bl	18050 <__sanitizer_set_report_fd@@Base+0x5130>
   128e0:	cmp	x20, x22
   128e4:	csel	x20, x20, x22, ls  // ls = plast
   128e8:	ldr	x0, [x21]
   128ec:	b	12810 <__sanitizer_cov_dump@@Base+0x2200>
   128f0:	ldr	x0, [x21]
   128f4:	ldr	x1, [x25]
   128f8:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   128fc:	b	128ac <__sanitizer_cov_dump@@Base+0x229c>
   12900:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   12904:	mov	x20, x0
   12908:	ldr	x0, [x21]
   1290c:	str	x20, [x19]
   12910:	b	127f8 <__sanitizer_cov_dump@@Base+0x21e8>
   12914:	ldr	x0, [x21]
   12918:	mov	w19, #0x0                   	// #0
   1291c:	ldr	x1, [x25]
   12920:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   12924:	ldp	x21, x22, [sp, #16]
   12928:	ldp	x23, x24, [sp, #32]
   1292c:	ldp	x25, x26, [sp, #48]
   12930:	ldp	x27, x28, [sp, #64]
   12934:	b	128c4 <__sanitizer_cov_dump@@Base+0x22b4>
   12938:	stp	x19, x20, [sp, #-144]!
   1293c:	stp	x27, x28, [sp, #64]
   12940:	str	x30, [sp, #80]
   12944:	str	xzr, [x1, #16]
   12948:	cbz	x2, 12ac4 <__sanitizer_cov_dump@@Base+0x24b4>
   1294c:	stp	x25, x26, [sp, #48]
   12950:	adrp	x25, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   12954:	mov	x20, x1
   12958:	stp	x23, x24, [sp, #32]
   1295c:	mov	x19, x0
   12960:	ldr	x24, [x25, #4016]
   12964:	stp	x21, x22, [sp, #16]
   12968:	mov	x21, x2
   1296c:	mov	x22, x3
   12970:	ldr	x23, [x24]
   12974:	cbz	x23, 12a78 <__sanitizer_cov_dump@@Base+0x2468>
   12978:	mov	x0, x19
   1297c:	mov	x2, x22
   12980:	mov	w1, #0x0                   	// #0
   12984:	bl	18008 <__sanitizer_set_report_fd@@Base+0x50e8>
   12988:	mov	w27, w0
   1298c:	cmn	w0, #0x1
   12990:	b.eq	12aa0 <__sanitizer_cov_dump@@Base+0x2490>  // b.none
   12994:	ldr	x0, [x25, #4016]
   12998:	str	x0, [sp, #104]
   1299c:	ldr	x3, [x20, #16]
   129a0:	adrp	x26, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   129a4:	mov	x19, #0x0                   	// #0
   129a8:	add	x24, sp, #0x88
   129ac:	add	x26, x26, #0x178
   129b0:	cmp	x3, x19
   129b4:	b.ls	12a08 <__sanitizer_cov_dump@@Base+0x23f8>  // b.plast
   129b8:	cmp	x3, x21
   129bc:	b.hi	12a5c <__sanitizer_cov_dump@@Base+0x244c>  // b.pmore
   129c0:	ldr	x1, [x20]
   129c4:	sub	x2, x3, x19
   129c8:	mov	x4, x22
   129cc:	mov	x3, x24
   129d0:	mov	w0, w27
   129d4:	add	x1, x1, x19
   129d8:	bl	18058 <__sanitizer_set_report_fd@@Base+0x5138>
   129dc:	ands	w28, w0, #0xff
   129e0:	b.eq	12bc0 <__sanitizer_cov_dump@@Base+0x25b0>  // b.none
   129e4:	ldr	x1, [sp, #136]
   129e8:	add	x3, x1, x19
   129ec:	cbz	x1, 12b64 <__sanitizer_cov_dump@@Base+0x2554>
   129f0:	cmp	x21, x3
   129f4:	b.ls	12b68 <__sanitizer_cov_dump@@Base+0x2558>  // b.plast
   129f8:	mov	x19, x3
   129fc:	ldr	x3, [x20, #16]
   12a00:	cmp	x3, x19
   12a04:	b.hi	129b8 <__sanitizer_cov_dump@@Base+0x23a8>  // b.pmore
   12a08:	lsl	x28, x19, #1
   12a0c:	cmp	x28, x23
   12a10:	csel	x28, x28, x23, cs  // cs = hs, nlast
   12a14:	cmp	x28, x21
   12a18:	csel	x28, x28, x21, ls  // ls = plast
   12a1c:	cmp	x28, x3
   12a20:	b.ls	12adc <__sanitizer_cov_dump@@Base+0x24cc>  // b.plast
   12a24:	ldr	x0, [x20, #8]
   12a28:	cmp	x28, x0
   12a2c:	b.hi	12b00 <__sanitizer_cov_dump@@Base+0x24f0>  // b.pmore
   12a30:	ldr	x4, [x20]
   12a34:	add	x0, x4, x3
   12a38:	sub	x2, x28, x3
   12a3c:	mov	w1, #0x0                   	// #0
   12a40:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   12a44:	str	x28, [x20, #16]
   12a48:	cmp	x28, x19
   12a4c:	b.ls	12ae0 <__sanitizer_cov_dump@@Base+0x24d0>  // b.plast
   12a50:	mov	x3, x28
   12a54:	cmp	x3, x21
   12a58:	b.ls	129c0 <__sanitizer_cov_dump@@Base+0x23b0>  // b.plast
   12a5c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12a60:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12a64:	mov	x4, x21
   12a68:	add	x2, x2, #0x950
   12a6c:	add	x0, x0, #0x910
   12a70:	mov	w1, #0x99                  	// #153
   12a74:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12a78:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   12a7c:	mov	x23, x0
   12a80:	mov	x2, x22
   12a84:	mov	w1, #0x0                   	// #0
   12a88:	str	x0, [x24]
   12a8c:	mov	x0, x19
   12a90:	bl	18008 <__sanitizer_set_report_fd@@Base+0x50e8>
   12a94:	mov	w27, w0
   12a98:	cmn	w0, #0x1
   12a9c:	b.ne	12994 <__sanitizer_cov_dump@@Base+0x2384>  // b.any
   12aa0:	mov	w28, #0x0                   	// #0
   12aa4:	mov	w0, w28
   12aa8:	ldp	x21, x22, [sp, #16]
   12aac:	ldp	x23, x24, [sp, #32]
   12ab0:	ldp	x25, x26, [sp, #48]
   12ab4:	ldp	x27, x28, [sp, #64]
   12ab8:	ldr	x30, [sp, #80]
   12abc:	ldp	x19, x20, [sp], #144
   12ac0:	ret
   12ac4:	mov	w28, #0x1                   	// #1
   12ac8:	mov	w0, w28
   12acc:	ldp	x27, x28, [sp, #64]
   12ad0:	ldr	x30, [sp, #80]
   12ad4:	ldp	x19, x20, [sp], #144
   12ad8:	ret
   12adc:	str	x28, [x20, #16]
   12ae0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12ae4:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12ae8:	mov	x4, x28
   12aec:	mov	x3, x19
   12af0:	add	x2, x2, #0x8f0
   12af4:	add	x0, x0, #0x910
   12af8:	mov	w1, #0x98                  	// #152
   12afc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12b00:	cbz	x28, 12c50 <__sanitizer_cov_dump@@Base+0x2640>
   12b04:	ldr	x0, [sp, #104]
   12b08:	ldr	x0, [x0]
   12b0c:	cbz	x0, 12bd8 <__sanitizer_cov_dump@@Base+0x25c8>
   12b10:	sub	x1, x0, #0x1
   12b14:	tst	x0, x1
   12b18:	b.ne	12c70 <__sanitizer_cov_dump@@Base+0x2660>  // b.any
   12b1c:	add	x1, x28, x1
   12b20:	neg	x0, x0
   12b24:	and	x6, x1, x0
   12b28:	mov	w2, #0x0                   	// #0
   12b2c:	mov	x0, x6
   12b30:	mov	x1, x26
   12b34:	str	x6, [sp, #120]
   12b38:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   12b3c:	str	x0, [sp, #112]
   12b40:	ldr	x1, [x20]
   12b44:	ldr	x2, [x20, #16]
   12b48:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   12b4c:	ldp	x0, x1, [x20]
   12b50:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   12b54:	ldp	x4, x6, [sp, #112]
   12b58:	stp	x4, x6, [x20]
   12b5c:	ldr	x3, [x20, #16]
   12b60:	b	12a34 <__sanitizer_cov_dump@@Base+0x2424>
   12b64:	mov	x3, x19
   12b68:	mov	w0, w27
   12b6c:	str	x3, [sp, #104]
   12b70:	bl	18050 <__sanitizer_set_report_fd@@Base+0x5130>
   12b74:	ldr	x2, [x20, #16]
   12b78:	ldr	x3, [sp, #104]
   12b7c:	cmp	x3, x2
   12b80:	b.ls	12bac <__sanitizer_cov_dump@@Base+0x259c>  // b.plast
   12b84:	ldr	x0, [x20, #8]
   12b88:	cmp	x3, x0
   12b8c:	b.hi	12be8 <__sanitizer_cov_dump@@Base+0x25d8>  // b.pmore
   12b90:	ldr	x19, [x20]
   12b94:	add	x0, x19, x2
   12b98:	mov	w1, #0x0                   	// #0
   12b9c:	sub	x2, x3, x2
   12ba0:	str	x3, [sp, #104]
   12ba4:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   12ba8:	ldr	x3, [sp, #104]
   12bac:	ldp	x21, x22, [sp, #16]
   12bb0:	ldp	x23, x24, [sp, #32]
   12bb4:	ldp	x25, x26, [sp, #48]
   12bb8:	str	x3, [x20, #16]
   12bbc:	b	12ac8 <__sanitizer_cov_dump@@Base+0x24b8>
   12bc0:	mov	w0, w27
   12bc4:	bl	18050 <__sanitizer_set_report_fd@@Base+0x5130>
   12bc8:	ldp	x21, x22, [sp, #16]
   12bcc:	ldp	x23, x24, [sp, #32]
   12bd0:	ldp	x25, x26, [sp, #48]
   12bd4:	b	12ac8 <__sanitizer_cov_dump@@Base+0x24b8>
   12bd8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   12bdc:	ldr	x1, [sp, #104]
   12be0:	str	x0, [x1]
   12be4:	b	12b10 <__sanitizer_cov_dump@@Base+0x2500>
   12be8:	cbz	x3, 12c50 <__sanitizer_cov_dump@@Base+0x2640>
   12bec:	ldr	x25, [x25, #4016]
   12bf0:	ldr	x0, [x25]
   12bf4:	cbz	x0, 12c80 <__sanitizer_cov_dump@@Base+0x2670>
   12bf8:	sub	x1, x0, #0x1
   12bfc:	tst	x0, x1
   12c00:	b.ne	12c70 <__sanitizer_cov_dump@@Base+0x2660>  // b.any
   12c04:	add	x1, x3, x1
   12c08:	neg	x0, x0
   12c0c:	and	x21, x1, x0
   12c10:	mov	w2, #0x0                   	// #0
   12c14:	mov	x0, x21
   12c18:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12c1c:	add	x1, x1, #0x178
   12c20:	str	x3, [sp, #104]
   12c24:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   12c28:	mov	x19, x0
   12c2c:	ldr	x1, [x20]
   12c30:	ldr	x2, [x20, #16]
   12c34:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   12c38:	ldp	x0, x1, [x20]
   12c3c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   12c40:	stp	x19, x21, [x20]
   12c44:	ldr	x2, [x20, #16]
   12c48:	ldr	x3, [sp, #104]
   12c4c:	b	12b94 <__sanitizer_cov_dump@@Base+0x2584>
   12c50:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12c54:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12c58:	add	x2, x2, #0x8d0
   12c5c:	add	x0, x0, #0x1a8
   12c60:	mov	x4, #0x0                   	// #0
   12c64:	mov	x3, #0x0                   	// #0
   12c68:	mov	w1, #0x1fc                 	// #508
   12c6c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12c70:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12c74:	add	x0, x0, #0x160
   12c78:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   12c7c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   12c80:	str	x3, [sp, #104]
   12c84:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   12c88:	str	x0, [x25]
   12c8c:	ldr	x3, [sp, #104]
   12c90:	b	12bf8 <__sanitizer_cov_dump@@Base+0x25e8>
   12c94:	nop
   12c98:	stp	x19, x20, [sp, #-80]!
   12c9c:	stp	x23, x24, [sp, #32]
   12ca0:	mov	x23, x0
   12ca4:	str	x30, [sp, #72]
   12ca8:	bl	15730 <__sanitizer_set_report_fd@@Base+0x2810>
   12cac:	tst	w0, #0xff
   12cb0:	b.eq	12cc8 <__sanitizer_cov_dump@@Base+0x26b8>  // b.none
   12cb4:	mov	x0, x23
   12cb8:	ldp	x23, x24, [sp, #32]
   12cbc:	ldr	x30, [sp, #72]
   12cc0:	ldp	x19, x20, [sp], #80
   12cc4:	b	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   12cc8:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   12ccc:	add	x0, x0, #0x970
   12cd0:	stp	x21, x22, [sp, #16]
   12cd4:	bl	15800 <__sanitizer_set_report_fd@@Base+0x28e0>
   12cd8:	mov	x21, x0
   12cdc:	cbz	x0, 12e18 <__sanitizer_cov_dump@@Base+0x2808>
   12ce0:	adrp	x19, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   12ce4:	mov	x0, x23
   12ce8:	stp	x25, x26, [sp, #48]
   12cec:	str	x27, [sp, #64]
   12cf0:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   12cf4:	ldr	x20, [x19, #4016]
   12cf8:	mov	x24, x0
   12cfc:	ldr	x0, [x20]
   12d00:	cbz	x0, 12e30 <__sanitizer_cov_dump@@Base+0x2820>
   12d04:	sub	x1, x0, #0x1
   12d08:	tst	x1, x0
   12d0c:	b.ne	12ef4 <__sanitizer_cov_dump@@Base+0x28e4>  // b.any
   12d10:	add	x25, x0, #0xfff
   12d14:	neg	x0, x0
   12d18:	and	x25, x25, x0
   12d1c:	mov	w2, #0x0                   	// #0
   12d20:	mov	x0, x25
   12d24:	adrp	x20, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12d28:	add	x1, x20, #0x178
   12d2c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   12d30:	mov	x2, #0x0                   	// #0
   12d34:	mov	x1, #0x0                   	// #0
   12d38:	mov	x22, x0
   12d3c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   12d40:	mov	x1, #0x0                   	// #0
   12d44:	mov	x0, #0x0                   	// #0
   12d48:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   12d4c:	cmp	x25, #0xfff
   12d50:	b.ls	12e98 <__sanitizer_cov_dump@@Base+0x2888>  // b.plast
   12d54:	mov	x0, x22
   12d58:	mov	w26, #0x2f                  	// #47
   12d5c:	mov	x2, #0x1000                	// #4096
   12d60:	mov	w1, #0x0                   	// #0
   12d64:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   12d68:	b	12d78 <__sanitizer_cov_dump@@Base+0x2768>
   12d6c:	ldrb	w0, [x19]
   12d70:	cbz	w0, 12e00 <__sanitizer_cov_dump@@Base+0x27f0>
   12d74:	add	x21, x19, #0x1
   12d78:	mov	x0, x21
   12d7c:	mov	w1, #0x3a                  	// #58
   12d80:	bl	14898 <__sanitizer_set_report_fd@@Base+0x1978>
   12d84:	sub	x20, x0, x21
   12d88:	add	x27, x24, x20
   12d8c:	mov	x19, x0
   12d90:	add	x0, x27, #0x2
   12d94:	cmp	x0, #0x1, lsl #12
   12d98:	b.hi	12d6c <__sanitizer_cov_dump@@Base+0x275c>  // b.pmore
   12d9c:	mov	x1, x21
   12da0:	mov	x2, x20
   12da4:	mov	x0, x22
   12da8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   12dac:	cmp	x20, #0xfff
   12db0:	b.hi	12e3c <__sanitizer_cov_dump@@Base+0x282c>  // b.pmore
   12db4:	strb	w26, [x22, x20]
   12db8:	add	x4, x20, #0x1
   12dbc:	b.eq	12e5c <__sanitizer_cov_dump@@Base+0x284c>  // b.none
   12dc0:	add	x0, x22, x4
   12dc4:	mov	x2, x24
   12dc8:	mov	x1, x23
   12dcc:	add	x27, x27, #0x1
   12dd0:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   12dd4:	cmp	x27, #0xfff
   12dd8:	b.hi	12e78 <__sanitizer_cov_dump@@Base+0x2868>  // b.pmore
   12ddc:	strb	wzr, [x22, x27]
   12de0:	mov	x0, x22
   12de4:	bl	15730 <__sanitizer_set_report_fd@@Base+0x2810>
   12de8:	tst	w0, #0xff
   12dec:	b.eq	12d6c <__sanitizer_cov_dump@@Base+0x275c>  // b.none
   12df0:	mov	x0, x22
   12df4:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   12df8:	mov	x21, x0
   12dfc:	b	12e04 <__sanitizer_cov_dump@@Base+0x27f4>
   12e00:	mov	x21, #0x0                   	// #0
   12e04:	mov	x1, x25
   12e08:	mov	x0, x22
   12e0c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   12e10:	ldp	x25, x26, [sp, #48]
   12e14:	ldr	x27, [sp, #64]
   12e18:	mov	x0, x21
   12e1c:	ldp	x21, x22, [sp, #16]
   12e20:	ldp	x23, x24, [sp, #32]
   12e24:	ldr	x30, [sp, #72]
   12e28:	ldp	x19, x20, [sp], #80
   12e2c:	ret
   12e30:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   12e34:	str	x0, [x20]
   12e38:	b	12d04 <__sanitizer_cov_dump@@Base+0x26f4>
   12e3c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12e40:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12e44:	mov	x3, x20
   12e48:	add	x2, x2, #0x190
   12e4c:	add	x0, x0, #0x1a8
   12e50:	mov	x4, #0x1000                	// #4096
   12e54:	mov	w1, #0x1b6                 	// #438
   12e58:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12e5c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12e60:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12e64:	add	x2, x2, #0x190
   12e68:	add	x0, x0, #0x1a8
   12e6c:	mov	x3, x4
   12e70:	mov	w1, #0x1b6                 	// #438
   12e74:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12e78:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12e7c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12e80:	add	x2, x2, #0x190
   12e84:	add	x0, x0, #0x1a8
   12e88:	mov	x4, #0x1000                	// #4096
   12e8c:	mov	x3, #0xffffffffffffffff    	// #-1
   12e90:	mov	w1, #0x1b6                 	// #438
   12e94:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12e98:	ldr	x19, [x19, #4016]
   12e9c:	ldr	x0, [x19]
   12ea0:	cbz	x0, 12f04 <__sanitizer_cov_dump@@Base+0x28f4>
   12ea4:	sub	x1, x0, #0x1
   12ea8:	tst	x1, x0
   12eac:	b.ne	12ef4 <__sanitizer_cov_dump@@Base+0x28e4>  // b.any
   12eb0:	add	x19, x0, #0xfff
   12eb4:	neg	x0, x0
   12eb8:	and	x19, x19, x0
   12ebc:	add	x1, x20, #0x178
   12ec0:	mov	x0, x19
   12ec4:	mov	w2, #0x0                   	// #0
   12ec8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   12ecc:	mov	x20, x0
   12ed0:	mov	x2, #0x0                   	// #0
   12ed4:	mov	x1, x22
   12ed8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   12edc:	mov	x1, x25
   12ee0:	mov	x0, x22
   12ee4:	mov	x25, x19
   12ee8:	mov	x22, x20
   12eec:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   12ef0:	b	12d54 <__sanitizer_cov_dump@@Base+0x2744>
   12ef4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   12ef8:	add	x0, x0, #0x160
   12efc:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   12f00:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   12f04:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   12f08:	str	x0, [x19]
   12f0c:	b	12ea4 <__sanitizer_cov_dump@@Base+0x2894>

0000000000012f10 <__sanitizer_set_report_path@@Base>:
   12f10:	mov	x1, x0
   12f14:	adrp	x2, 5b000 <_Unwind_Backtrace@GCC_3.3>
   12f18:	add	x0, x2, #0x4d8
   12f1c:	b	12658 <__sanitizer_cov_dump@@Base+0x2048>

0000000000012f20 <__sanitizer_set_report_fd@@Base>:
   12f20:	stp	x19, x30, [sp, #-16]!
   12f24:	adrp	x19, 5b000 <_Unwind_Backtrace@GCC_3.3>
   12f28:	add	x19, x19, #0x4d8
   12f2c:	str	w0, [x19, #8]
   12f30:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x2c48>
   12f34:	str	x0, [x19, #8208]
   12f38:	ldp	x19, x30, [sp], #16
   12f3c:	ret
   12f40:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   12f44:	stp	x19, x20, [sp, #-48]!
   12f48:	mov	x20, x0
   12f4c:	ldr	x0, [x4, #3776]
   12f50:	mov	x19, x3
   12f54:	stp	x21, x22, [sp, #16]
   12f58:	mov	x22, x2
   12f5c:	mov	x21, x1
   12f60:	mov	x1, #0x10                  	// #16
   12f64:	str	x30, [sp, #32]
   12f68:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   12f6c:	mov	x2, x0
   12f70:	mov	x3, x22
   12f74:	mov	x1, x21
   12f78:	adrp	x4, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   12f7c:	add	x4, x4, #0xd48
   12f80:	ldp	x21, x22, [sp, #16]
   12f84:	mov	x0, x20
   12f88:	ldr	x30, [sp, #32]
   12f8c:	stp	x4, x19, [x2]
   12f90:	ldp	x19, x20, [sp], #48
   12f94:	b	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
   12f98:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   12f9c:	stp	x19, x20, [sp, #-48]!
   12fa0:	mov	x20, x0
   12fa4:	ldr	x0, [x4, #3776]
   12fa8:	mov	x19, x3
   12fac:	stp	x21, x22, [sp, #16]
   12fb0:	mov	x22, x2
   12fb4:	mov	x21, x1
   12fb8:	mov	x1, #0x10                  	// #16
   12fbc:	str	x30, [sp, #32]
   12fc0:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   12fc4:	mov	x2, x0
   12fc8:	mov	x3, x22
   12fcc:	mov	x1, x21
   12fd0:	adrp	x4, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   12fd4:	add	x4, x4, #0xd60
   12fd8:	ldp	x21, x22, [sp, #16]
   12fdc:	mov	x0, x20
   12fe0:	ldr	x30, [sp, #32]
   12fe4:	stp	x4, x19, [x2]
   12fe8:	ldp	x19, x20, [sp], #48
   12fec:	b	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
   12ff0:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   12ff4:	stp	x19, x20, [sp, #-48]!
   12ff8:	mov	x20, x0
   12ffc:	ldr	x0, [x4, #3776]
   13000:	mov	x19, x3
   13004:	stp	x21, x22, [sp, #16]
   13008:	mov	x22, x2
   1300c:	mov	x21, x1
   13010:	mov	x1, #0x10                  	// #16
   13014:	str	x30, [sp, #32]
   13018:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   1301c:	mov	x2, x0
   13020:	mov	x3, x22
   13024:	mov	x1, x21
   13028:	adrp	x4, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   1302c:	add	x4, x4, #0xdf0
   13030:	ldp	x21, x22, [sp, #16]
   13034:	mov	x0, x20
   13038:	ldr	x30, [sp, #32]
   1303c:	stp	x4, x19, [x2]
   13040:	ldp	x19, x20, [sp], #48
   13044:	b	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
   13048:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1304c:	stp	x19, x20, [sp, #-48]!
   13050:	mov	x20, x0
   13054:	ldr	x0, [x4, #3776]
   13058:	mov	x19, x3
   1305c:	stp	x21, x22, [sp, #16]
   13060:	mov	x22, x2
   13064:	mov	x21, x1
   13068:	mov	x1, #0x10                  	// #16
   1306c:	str	x30, [sp, #32]
   13070:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   13074:	mov	x2, x0
   13078:	mov	x3, x22
   1307c:	mov	x1, x21
   13080:	adrp	x4, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   13084:	add	x4, x4, #0xdd8
   13088:	ldp	x21, x22, [sp, #16]
   1308c:	mov	x0, x20
   13090:	ldr	x30, [sp, #32]
   13094:	stp	x4, x19, [x2]
   13098:	ldp	x19, x20, [sp], #48
   1309c:	b	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
   130a0:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   130a4:	stp	x19, x20, [sp, #-48]!
   130a8:	mov	x20, x0
   130ac:	ldr	x0, [x4, #3776]
   130b0:	mov	x19, x3
   130b4:	stp	x21, x22, [sp, #16]
   130b8:	mov	x22, x2
   130bc:	mov	x21, x1
   130c0:	mov	x1, #0x10                  	// #16
   130c4:	str	x30, [sp, #32]
   130c8:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   130cc:	mov	x2, x0
   130d0:	mov	x3, x22
   130d4:	mov	x1, x21
   130d8:	adrp	x4, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   130dc:	add	x4, x4, #0xe08
   130e0:	ldp	x21, x22, [sp, #16]
   130e4:	mov	x0, x20
   130e8:	ldr	x30, [sp, #32]
   130ec:	stp	x4, x19, [x2]
   130f0:	ldp	x19, x20, [sp], #48
   130f4:	b	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
   130f8:	mov	x18, #0x10000               	// #65536
   130fc:	mov	x17, #0x10100000000         	// #1103806595072
   13100:	mov	w11, #0x100                 	// #256
   13104:	mov	x10, #0x101010101010101     	// #72340172838076673
   13108:	mov	w5, #0x1                   	// #1
   1310c:	mov	w7, #0x1                   	// #1
   13110:	movk	x18, #0x1, lsl #32
   13114:	movk	x17, #0x1, lsl #48
   13118:	mov	x16, #0x100000001           	// #4294967297
   1311c:	mov	x15, #0x100000000           	// #4294967296
   13120:	mov	w14, #0x101                 	// #257
   13124:	mov	x13, #0x10000               	// #65536
   13128:	mov	w12, #0x1388                	// #5000
   1312c:	movk	w11, #0x101, lsl #16
   13130:	movk	x10, #0x1
   13134:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   13138:	adrp	x6, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1313c:	add	x1, x1, #0x428
   13140:	add	x6, x6, #0x8b0
   13144:	adrp	x4, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13148:	adrp	x3, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   1314c:	add	x4, x4, #0xa20
   13150:	add	x3, x3, #0x48
   13154:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13158:	mov	x9, #0x101010101010101     	// #72340172838076673
   1315c:	add	x2, x2, #0xa28
   13160:	mov	x8, #0x1                   	// #1
   13164:	strb	w5, [x0]
   13168:	str	xzr, [x0, #8]
   1316c:	movk	x9, #0x1, lsl #48
   13170:	strb	wzr, [x0, #16]
   13174:	movk	x8, #0x100, lsl #32
   13178:	stp	x1, x18, [x0, #24]
   1317c:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13180:	add	x1, x1, #0x358
   13184:	str	x6, [x0, #40]
   13188:	mov	w6, #0x100                 	// #256
   1318c:	strh	wzr, [x0, #48]
   13190:	stur	x17, [x0, #52]
   13194:	strb	w5, [x0, #60]
   13198:	str	wzr, [x0, #64]
   1319c:	strb	w5, [x0, #68]
   131a0:	stp	x16, xzr, [x0, #72]
   131a4:	str	x15, [x0, #88]
   131a8:	strh	w14, [x0, #96]
   131ac:	strb	wzr, [x0, #98]
   131b0:	stp	x13, x4, [x0, #104]
   131b4:	strh	wzr, [x0, #120]
   131b8:	strb	wzr, [x0, #122]
   131bc:	stp	xzr, xzr, [x0, #128]
   131c0:	str	xzr, [x0, #144]
   131c4:	strb	wzr, [x0, #152]
   131c8:	str	w12, [x0, #156]
   131cc:	strh	w7, [x0, #160]
   131d0:	str	x3, [x0, #168]
   131d4:	str	w11, [x0, #176]
   131d8:	strh	w7, [x0, #180]
   131dc:	str	wzr, [x0, #184]
   131e0:	stp	x2, x10, [x0, #192]
   131e4:	stp	x9, x8, [x0, #208]
   131e8:	str	x1, [x0, #224]
   131ec:	strh	w6, [x0, #232]
   131f0:	strb	wzr, [x0, #234]
   131f4:	ret
   131f8:	mov	x2, #0xf0                  	// #240
   131fc:	b	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   13200:	stp	x19, x20, [sp, #-80]!
   13204:	sub	x2, x2, #0x1
   13208:	mov	x19, x1
   1320c:	stp	x21, x22, [sp, #16]
   13210:	mov	x21, x0
   13214:	add	x20, x1, x2
   13218:	str	x30, [sp, #32]
   1321c:	ldrb	w0, [x0]
   13220:	cbz	w0, 13300 <__sanitizer_set_report_fd@@Base+0x3e0>
   13224:	cmp	x1, x20
   13228:	b.cs	132cc <__sanitizer_set_report_fd@@Base+0x3ac>  // b.hs, b.nlast
   1322c:	mov	w22, #0x6667                	// #26215
   13230:	movk	w22, #0x6666, lsl #16
   13234:	nop
   13238:	cmp	w0, #0x25
   1323c:	b.ne	132f0 <__sanitizer_set_report_fd@@Base+0x3d0>  // b.any
   13240:	ldrb	w1, [x21, #1]
   13244:	cmp	w1, #0x62
   13248:	b.eq	1331c <__sanitizer_set_report_fd@@Base+0x3fc>  // b.none
   1324c:	cmp	w1, #0x70
   13250:	b.ne	132f0 <__sanitizer_set_report_fd@@Base+0x3d0>  // b.any
   13254:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x2c48>
   13258:	add	x3, sp, #0x50
   1325c:	nop
   13260:	smull	x1, w0, w22
   13264:	asr	x1, x1, #34
   13268:	sub	w1, w1, w0, asr #31
   1326c:	add	w2, w1, w1, lsl #2
   13270:	sub	w2, w0, w2, lsl #1
   13274:	mov	w0, w1
   13278:	add	w2, w2, #0x30
   1327c:	and	w2, w2, #0xff
   13280:	strb	w2, [x3, #-1]!
   13284:	cbnz	w1, 13260 <__sanitizer_set_report_fd@@Base+0x340>
   13288:	add	x0, sp, #0x50
   1328c:	cmp	x0, x3
   13290:	ccmp	x19, x20, #0x2, hi  // hi = pmore
   13294:	b.cc	132a0 <__sanitizer_set_report_fd@@Base+0x380>  // b.lo, b.ul, b.last
   13298:	b	132b8 <__sanitizer_set_report_fd@@Base+0x398>
   1329c:	ldrb	w2, [x3]
   132a0:	strb	w2, [x19], #1
   132a4:	add	x3, x3, #0x1
   132a8:	add	x0, sp, #0x50
   132ac:	cmp	x19, x20
   132b0:	ccmp	x0, x3, #0x0, cc  // cc = lo, ul, last
   132b4:	b.hi	1329c <__sanitizer_set_report_fd@@Base+0x37c>  // b.pmore
   132b8:	ldrb	w0, [x21, #2]
   132bc:	add	x21, x21, #0x2
   132c0:	cbz	w0, 13300 <__sanitizer_set_report_fd@@Base+0x3e0>
   132c4:	cmp	x19, x20
   132c8:	b.cc	13238 <__sanitizer_set_report_fd@@Base+0x318>  // b.lo, b.ul, b.last
   132cc:	cmp	x19, x20
   132d0:	cset	x3, cc  // cc = lo, ul, last
   132d4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   132d8:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   132dc:	add	x2, x2, #0xa80
   132e0:	add	x0, x0, #0xa40
   132e4:	mov	x4, #0x0                   	// #0
   132e8:	mov	w1, #0x46                  	// #70
   132ec:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   132f0:	add	x21, x21, #0x1
   132f4:	strb	w0, [x19], #1
   132f8:	ldrb	w0, [x21]
   132fc:	cbnz	w0, 132c4 <__sanitizer_set_report_fd@@Base+0x3a4>
   13300:	cmp	x19, x20
   13304:	b.cs	13370 <__sanitizer_set_report_fd@@Base+0x450>  // b.hs, b.nlast
   13308:	strb	wzr, [x19]
   1330c:	ldp	x21, x22, [sp, #16]
   13310:	ldr	x30, [sp, #32]
   13314:	ldp	x19, x20, [sp], #80
   13318:	ret
   1331c:	bl	f788 <__sancov_default_options@@Base+0x3038>
   13320:	cbz	x0, 13350 <__sanitizer_set_report_fd@@Base+0x430>
   13324:	ldrb	w1, [x0]
   13328:	cmp	w1, #0x0
   1332c:	ccmp	x19, x20, #0x2, ne  // ne = any
   13330:	b.cs	132b8 <__sanitizer_set_report_fd@@Base+0x398>  // b.hs, b.nlast
   13334:	nop
   13338:	strb	w1, [x19], #1
   1333c:	ldrb	w1, [x0, #1]!
   13340:	cmp	w1, #0x0
   13344:	ccmp	x19, x20, #0x2, ne  // ne = any
   13348:	b.cc	13338 <__sanitizer_set_report_fd@@Base+0x418>  // b.lo, b.ul, b.last
   1334c:	b	132b8 <__sanitizer_set_report_fd@@Base+0x398>
   13350:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13354:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13358:	add	x2, x2, #0xa30
   1335c:	add	x0, x0, #0xa40
   13360:	mov	x4, #0x0                   	// #0
   13364:	mov	x3, #0x0                   	// #0
   13368:	mov	w1, #0x2e                  	// #46
   1336c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   13370:	mov	x3, #0x0                   	// #0
   13374:	b	132d4 <__sanitizer_set_report_fd@@Base+0x3b4>
   13378:	stp	x19, x20, [sp, #-32]!
   1337c:	mov	x1, #0x18                  	// #24
   13380:	mov	x19, x0
   13384:	stp	x21, x30, [sp, #16]
   13388:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1338c:	adrp	x20, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   13390:	ldr	x21, [x21, #3776]
   13394:	add	x20, x20, #0xe20
   13398:	mov	x0, x21
   1339c:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   133a0:	mov	x2, x0
   133a4:	adrp	x3, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   133a8:	add	x3, x3, #0xaa0
   133ac:	mov	x0, x19
   133b0:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   133b4:	add	x1, x1, #0xac8
   133b8:	stp	x20, x19, [x2]
   133bc:	strb	wzr, [x2, #16]
   133c0:	bl	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
   133c4:	mov	x0, x21
   133c8:	mov	x1, #0x18                  	// #24
   133cc:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   133d0:	mov	x2, x0
   133d4:	mov	w4, #0x1                   	// #1
   133d8:	mov	x0, x19
   133dc:	ldp	x21, x30, [sp, #16]
   133e0:	stp	x20, x19, [x2]
   133e4:	adrp	x3, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   133e8:	strb	w4, [x2, #16]
   133ec:	add	x3, x3, #0xad0
   133f0:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   133f4:	add	x1, x1, #0xb08
   133f8:	ldp	x19, x20, [sp], #32
   133fc:	b	144d8 <__sanitizer_set_report_fd@@Base+0x15b8>
   13400:	stp	x19, x20, [sp, #-32]!
   13404:	mov	x3, x1
   13408:	mov	x19, x1
   1340c:	mov	x20, x0
   13410:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13414:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
   13418:	add	x2, x2, #0xb20
   1341c:	add	x1, x1, #0x430
   13420:	str	x30, [sp, #16]
   13424:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13428:	add	x3, x19, #0x8
   1342c:	mov	x0, x20
   13430:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13434:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13438:	add	x2, x2, #0xb98
   1343c:	add	x1, x1, #0xbf0
   13440:	bl	12f98 <__sanitizer_set_report_fd@@Base+0x78>
   13444:	add	x3, x19, #0x10
   13448:	mov	x0, x20
   1344c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13450:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13454:	add	x2, x2, #0xc10
   13458:	add	x1, x1, #0xcb0
   1345c:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13460:	add	x3, x19, #0x18
   13464:	mov	x0, x20
   13468:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1346c:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13470:	add	x2, x2, #0xcc0
   13474:	add	x1, x1, #0xcf8
   13478:	bl	12f98 <__sanitizer_set_report_fd@@Base+0x78>
   1347c:	add	x3, x19, #0x20
   13480:	mov	x0, x20
   13484:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13488:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1348c:	add	x2, x2, #0xd10
   13490:	add	x1, x1, #0xd68
   13494:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13498:	add	x3, x19, #0x21
   1349c:	mov	x0, x20
   134a0:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   134a4:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   134a8:	add	x2, x2, #0xd80
   134ac:	add	x1, x1, #0xdd0
   134b0:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   134b4:	add	x3, x19, #0x22
   134b8:	mov	x0, x20
   134bc:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   134c0:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   134c4:	add	x2, x2, #0xde8
   134c8:	add	x1, x1, #0xe30
   134cc:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   134d0:	add	x3, x19, #0x23
   134d4:	mov	x0, x20
   134d8:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   134dc:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   134e0:	add	x2, x2, #0xe48
   134e4:	add	x1, x1, #0xe70
   134e8:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   134ec:	add	x3, x19, #0x24
   134f0:	mov	x0, x20
   134f4:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   134f8:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   134fc:	add	x2, x2, #0xe80
   13500:	add	x1, x1, #0xec8
   13504:	bl	12ff0 <__sanitizer_set_report_fd@@Base+0xd0>
   13508:	add	x3, x19, #0x28
   1350c:	mov	x0, x20
   13510:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13514:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13518:	add	x2, x2, #0xee0
   1351c:	add	x1, x1, #0xf48
   13520:	bl	12f98 <__sanitizer_set_report_fd@@Base+0x78>
   13524:	add	x3, x19, #0x30
   13528:	mov	x0, x20
   1352c:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13530:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13534:	add	x2, x2, #0xf58
   13538:	add	x1, x1, #0xfd0
   1353c:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13540:	add	x3, x19, #0x31
   13544:	mov	x0, x20
   13548:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1354c:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13550:	add	x2, x2, #0xfe0
   13554:	add	x1, x1, #0x30
   13558:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   1355c:	add	x3, x19, #0x34
   13560:	mov	x0, x20
   13564:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13568:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1356c:	add	x2, x2, #0x40
   13570:	add	x1, x1, #0x88
   13574:	bl	12ff0 <__sanitizer_set_report_fd@@Base+0xd0>
   13578:	add	x3, x19, #0x38
   1357c:	mov	x0, x20
   13580:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13584:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13588:	add	x2, x2, #0x98
   1358c:	add	x1, x1, #0x108
   13590:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13594:	add	x3, x19, #0x39
   13598:	mov	x0, x20
   1359c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   135a0:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   135a4:	add	x2, x2, #0x118
   135a8:	add	x1, x1, #0x138
   135ac:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   135b0:	add	x3, x19, #0x3a
   135b4:	mov	x0, x20
   135b8:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   135bc:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   135c0:	add	x2, x2, #0x148
   135c4:	add	x1, x1, #0x1e8
   135c8:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   135cc:	add	x3, x19, #0x3b
   135d0:	mov	x0, x20
   135d4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   135d8:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   135dc:	add	x2, x2, #0x200
   135e0:	add	x1, x1, #0x250
   135e4:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   135e8:	add	x3, x19, #0x3c
   135ec:	mov	x0, x20
   135f0:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   135f4:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   135f8:	add	x2, x2, #0x270
   135fc:	add	x1, x1, #0x2c0
   13600:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13604:	add	x3, x19, #0x40
   13608:	mov	x0, x20
   1360c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13610:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13614:	add	x2, x2, #0x2d0
   13618:	add	x1, x1, #0x338
   1361c:	bl	12ff0 <__sanitizer_set_report_fd@@Base+0xd0>
   13620:	add	x3, x19, #0x44
   13624:	mov	x0, x20
   13628:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1362c:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13630:	add	x2, x2, #0x350
   13634:	add	x1, x1, #0x368
   13638:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   1363c:	add	x3, x19, #0x48
   13640:	mov	x0, x20
   13644:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13648:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1364c:	add	x2, x2, #0x378
   13650:	add	x1, x1, #0x438
   13654:	bl	13048 <__sanitizer_set_report_fd@@Base+0x128>
   13658:	add	x3, x19, #0x4c
   1365c:	mov	x0, x20
   13660:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13664:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13668:	add	x2, x2, #0x448
   1366c:	add	x1, x1, #0x508
   13670:	bl	13048 <__sanitizer_set_report_fd@@Base+0x128>
   13674:	add	x3, x19, #0x50
   13678:	mov	x0, x20
   1367c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13680:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13684:	add	x2, x2, #0x518
   13688:	add	x1, x1, #0x5d8
   1368c:	bl	13048 <__sanitizer_set_report_fd@@Base+0x128>
   13690:	add	x3, x19, #0x54
   13694:	mov	x0, x20
   13698:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1369c:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   136a0:	add	x2, x2, #0x5e8
   136a4:	add	x1, x1, #0x6a8
   136a8:	bl	13048 <__sanitizer_set_report_fd@@Base+0x128>
   136ac:	add	x3, x19, #0x58
   136b0:	mov	x0, x20
   136b4:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   136b8:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   136bc:	add	x2, x2, #0x6b8
   136c0:	add	x1, x1, #0x778
   136c4:	bl	13048 <__sanitizer_set_report_fd@@Base+0x128>
   136c8:	add	x3, x19, #0x5c
   136cc:	mov	x0, x20
   136d0:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   136d4:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   136d8:	add	x2, x2, #0x788
   136dc:	add	x1, x1, #0x848
   136e0:	bl	13048 <__sanitizer_set_report_fd@@Base+0x128>
   136e4:	add	x3, x19, #0x60
   136e8:	mov	x0, x20
   136ec:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   136f0:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   136f4:	add	x2, x2, #0x858
   136f8:	add	x1, x1, #0x8c8
   136fc:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13700:	add	x3, x19, #0x61
   13704:	mov	x0, x20
   13708:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1370c:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13710:	add	x2, x2, #0x8e0
   13714:	add	x1, x1, #0x918
   13718:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   1371c:	add	x3, x19, #0x62
   13720:	mov	x0, x20
   13724:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13728:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1372c:	add	x2, x2, #0x928
   13730:	add	x1, x1, #0x950
   13734:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13738:	add	x3, x19, #0x68
   1373c:	mov	x0, x20
   13740:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13744:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13748:	add	x2, x2, #0x968
   1374c:	add	x1, x1, #0x9e0
   13750:	bl	130a0 <__sanitizer_set_report_fd@@Base+0x180>
   13754:	add	x3, x19, #0x70
   13758:	mov	x0, x20
   1375c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13760:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13764:	add	x2, x2, #0xa00
   13768:	add	x1, x1, #0xa28
   1376c:	bl	12f98 <__sanitizer_set_report_fd@@Base+0x78>
   13770:	add	x3, x19, #0x78
   13774:	mov	x0, x20
   13778:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1377c:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13780:	add	x2, x2, #0xa30
   13784:	add	x1, x1, #0xa78
   13788:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   1378c:	add	x3, x19, #0x79
   13790:	mov	x0, x20
   13794:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13798:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1379c:	add	x2, x2, #0xa90
   137a0:	add	x1, x1, #0xab0
   137a4:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   137a8:	add	x3, x19, #0x7a
   137ac:	mov	x0, x20
   137b0:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   137b4:	adrp	x1, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
   137b8:	add	x2, x2, #0xac8
   137bc:	add	x1, x1, #0x458
   137c0:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   137c4:	add	x3, x19, #0x80
   137c8:	mov	x0, x20
   137cc:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   137d0:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   137d4:	add	x2, x2, #0xae8
   137d8:	add	x1, x1, #0xb60
   137dc:	bl	130a0 <__sanitizer_set_report_fd@@Base+0x180>
   137e0:	add	x3, x19, #0x88
   137e4:	mov	x0, x20
   137e8:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   137ec:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   137f0:	add	x2, x2, #0xb70
   137f4:	add	x1, x1, #0xc10
   137f8:	bl	130a0 <__sanitizer_set_report_fd@@Base+0x180>
   137fc:	add	x3, x19, #0x90
   13800:	mov	x0, x20
   13804:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13808:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1380c:	add	x2, x2, #0xc28
   13810:	add	x1, x1, #0xd88
   13814:	bl	130a0 <__sanitizer_set_report_fd@@Base+0x180>
   13818:	add	x3, x19, #0x98
   1381c:	mov	x0, x20
   13820:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13824:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13828:	add	x2, x2, #0xda0
   1382c:	add	x1, x1, #0xdc8
   13830:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13834:	add	x3, x19, #0x9c
   13838:	mov	x0, x20
   1383c:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13840:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13844:	add	x2, x2, #0xdd8
   13848:	add	x1, x1, #0xea8
   1384c:	bl	12ff0 <__sanitizer_set_report_fd@@Base+0xd0>
   13850:	add	x3, x19, #0xa0
   13854:	mov	x0, x20
   13858:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1385c:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13860:	add	x2, x2, #0xed0
   13864:	add	x1, x1, #0xf30
   13868:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   1386c:	add	x3, x19, #0xa1
   13870:	mov	x0, x20
   13874:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13878:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   1387c:	add	x2, x2, #0xf48
   13880:	add	x1, x1, #0xfc8
   13884:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13888:	add	x3, x19, #0xa8
   1388c:	mov	x0, x20
   13890:	adrp	x2, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   13894:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13898:	add	x2, x2, #0xfd8
   1389c:	add	x1, x1, #0x20
   138a0:	bl	12f98 <__sanitizer_set_report_fd@@Base+0x78>
   138a4:	add	x3, x19, #0xb0
   138a8:	mov	x0, x20
   138ac:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   138b0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   138b4:	add	x2, x2, #0x30
   138b8:	add	x1, x1, #0x98
   138bc:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   138c0:	add	x3, x19, #0xb1
   138c4:	mov	x0, x20
   138c8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   138cc:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   138d0:	add	x2, x2, #0xb0
   138d4:	add	x1, x1, #0xd8
   138d8:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   138dc:	add	x3, x19, #0xb2
   138e0:	mov	x0, x20
   138e4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   138e8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   138ec:	add	x2, x2, #0xf0
   138f0:	add	x1, x1, #0x1c0
   138f4:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   138f8:	add	x3, x19, #0xb3
   138fc:	mov	x0, x20
   13900:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13904:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13908:	add	x2, x2, #0x1d8
   1390c:	add	x1, x1, #0x220
   13910:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13914:	add	x3, x19, #0xb4
   13918:	mov	x0, x20
   1391c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13920:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13924:	add	x2, x2, #0x238
   13928:	add	x1, x1, #0x270
   1392c:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13930:	add	x3, x19, #0xb5
   13934:	mov	x0, x20
   13938:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   1393c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13940:	add	x2, x2, #0x288
   13944:	add	x1, x1, #0x2d0
   13948:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   1394c:	add	x3, x19, #0xb8
   13950:	mov	x0, x20
   13954:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13958:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   1395c:	add	x2, x2, #0x2e8
   13960:	add	x1, x1, #0x3b8
   13964:	bl	12ff0 <__sanitizer_set_report_fd@@Base+0xd0>
   13968:	add	x3, x19, #0xc0
   1396c:	mov	x0, x20
   13970:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13974:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13978:	add	x2, x2, #0x3d0
   1397c:	add	x1, x1, #0x460
   13980:	bl	12f98 <__sanitizer_set_report_fd@@Base+0x78>
   13984:	add	x3, x19, #0xc8
   13988:	mov	x0, x20
   1398c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13990:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13994:	add	x2, x2, #0x478
   13998:	add	x1, x1, #0x4b0
   1399c:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   139a0:	add	x3, x19, #0xc9
   139a4:	mov	x0, x20
   139a8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   139ac:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   139b0:	add	x2, x2, #0x4d0
   139b4:	add	x1, x1, #0x510
   139b8:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   139bc:	add	x3, x19, #0xca
   139c0:	mov	x0, x20
   139c4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   139c8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   139cc:	add	x2, x2, #0x528
   139d0:	add	x1, x1, #0x580
   139d4:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   139d8:	add	x3, x19, #0xcb
   139dc:	mov	x0, x20
   139e0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   139e4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   139e8:	add	x2, x2, #0x598
   139ec:	add	x1, x1, #0x5f0
   139f0:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   139f4:	add	x3, x19, #0xcc
   139f8:	mov	x0, x20
   139fc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a00:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a04:	add	x2, x2, #0x608
   13a08:	add	x1, x1, #0x658
   13a0c:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13a10:	add	x3, x19, #0xcd
   13a14:	mov	x0, x20
   13a18:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a1c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a20:	add	x2, x2, #0x670
   13a24:	add	x1, x1, #0x6b8
   13a28:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13a2c:	add	x3, x19, #0xce
   13a30:	mov	x0, x20
   13a34:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a38:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a3c:	add	x2, x2, #0x6d0
   13a40:	add	x1, x1, #0x728
   13a44:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13a48:	add	x3, x19, #0xcf
   13a4c:	mov	x0, x20
   13a50:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a54:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a58:	add	x2, x2, #0x740
   13a5c:	add	x1, x1, #0x788
   13a60:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13a64:	add	x3, x19, #0xd0
   13a68:	mov	x0, x20
   13a6c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a70:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a74:	add	x2, x2, #0x7a0
   13a78:	add	x1, x1, #0x800
   13a7c:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13a80:	add	x3, x19, #0xd1
   13a84:	mov	x0, x20
   13a88:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a8c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13a90:	add	x2, x2, #0x818
   13a94:	add	x1, x1, #0x860
   13a98:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13a9c:	add	x3, x19, #0xd2
   13aa0:	mov	x0, x20
   13aa4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13aa8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13aac:	add	x2, x2, #0x878
   13ab0:	add	x1, x1, #0x8d0
   13ab4:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13ab8:	add	x3, x19, #0xd3
   13abc:	mov	x0, x20
   13ac0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13ac4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13ac8:	add	x2, x2, #0x8e0
   13acc:	add	x1, x1, #0x920
   13ad0:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13ad4:	add	x3, x19, #0xd4
   13ad8:	mov	x0, x20
   13adc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13ae0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13ae4:	add	x2, x2, #0x938
   13ae8:	add	x1, x1, #0x990
   13aec:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13af0:	add	x3, x19, #0xd5
   13af4:	mov	x0, x20
   13af8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13afc:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b00:	add	x2, x2, #0x9a8
   13b04:	add	x1, x1, #0x9f0
   13b08:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13b0c:	add	x3, x19, #0xd6
   13b10:	mov	x0, x20
   13b14:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b18:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b1c:	add	x2, x2, #0xa00
   13b20:	add	x1, x1, #0xa48
   13b24:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13b28:	add	x3, x19, #0xd7
   13b2c:	mov	x0, x20
   13b30:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b34:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b38:	add	x2, x2, #0xa58
   13b3c:	add	x1, x1, #0xaa8
   13b40:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13b44:	add	x3, x19, #0xd8
   13b48:	mov	x0, x20
   13b4c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b50:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b54:	add	x2, x2, #0xac0
   13b58:	add	x1, x1, #0xb00
   13b5c:	bl	12ff0 <__sanitizer_set_report_fd@@Base+0xd0>
   13b60:	add	x3, x19, #0xdc
   13b64:	mov	x0, x20
   13b68:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b6c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b70:	add	x2, x2, #0xb10
   13b74:	add	x1, x1, #0xb68
   13b78:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13b7c:	add	x3, x19, #0xdd
   13b80:	mov	x0, x20
   13b84:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b88:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13b8c:	add	x2, x2, #0xb78
   13b90:	add	x1, x1, #0xbe0
   13b94:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13b98:	add	x3, x19, #0xde
   13b9c:	mov	x0, x20
   13ba0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13ba4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13ba8:	add	x2, x2, #0xbf8
   13bac:	add	x1, x1, #0xc28
   13bb0:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13bb4:	add	x3, x19, #0xdf
   13bb8:	mov	x0, x20
   13bbc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13bc0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13bc4:	add	x2, x2, #0xc38
   13bc8:	add	x1, x1, #0xc58
   13bcc:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13bd0:	add	x3, x19, #0xe0
   13bd4:	mov	x0, x20
   13bd8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13bdc:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13be0:	add	x2, x2, #0xc68
   13be4:	add	x1, x1, #0xc80
   13be8:	bl	12f98 <__sanitizer_set_report_fd@@Base+0x78>
   13bec:	add	x3, x19, #0xe8
   13bf0:	mov	x0, x20
   13bf4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13bf8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13bfc:	add	x2, x2, #0xc90
   13c00:	add	x1, x1, #0xcd8
   13c04:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13c08:	add	x3, x19, #0xe9
   13c0c:	mov	x0, x20
   13c10:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13c14:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13c18:	add	x2, x2, #0xcf0
   13c1c:	add	x1, x1, #0xd50
   13c20:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13c24:	add	x3, x19, #0xea
   13c28:	mov	x0, x20
   13c2c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13c30:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13c34:	add	x2, x2, #0xd60
   13c38:	add	x1, x1, #0xdb8
   13c3c:	bl	12f40 <__sanitizer_set_report_fd@@Base+0x20>
   13c40:	mov	x1, x19
   13c44:	mov	x0, x20
   13c48:	ldr	x30, [sp, #16]
   13c4c:	ldp	x19, x20, [sp], #32
   13c50:	b	13378 <__sanitizer_set_report_fd@@Base+0x458>
   13c54:	nop
   13c58:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   13c5c:	ldrb	w4, [x0, #223]
   13c60:	ldr	w3, [x0, #52]
   13c64:	ldr	x2, [x1, #3896]
   13c68:	ldrb	w1, [x0, #161]
   13c6c:	orr	w1, w1, w4
   13c70:	str	w3, [x2]
   13c74:	strb	w1, [x0, #161]
   13c78:	ret
   13c7c:	nop
   13c80:	stp	x19, x20, [sp, #-48]!
   13c84:	mov	x20, x0
   13c88:	mov	w2, #0xa                   	// #10
   13c8c:	mov	x0, x1
   13c90:	mov	x19, x1
   13c94:	add	x1, sp, #0x28
   13c98:	str	x30, [sp, #16]
   13c9c:	bl	14bd8 <__sanitizer_set_report_fd@@Base+0x1cb8>
   13ca0:	ldr	x2, [x20, #8]
   13ca4:	ldr	x1, [sp, #40]
   13ca8:	str	x0, [x2]
   13cac:	ldrb	w0, [x1]
   13cb0:	cmp	w0, #0x0
   13cb4:	cset	w20, eq  // eq = none
   13cb8:	cbnz	w0, 13ccc <__sanitizer_set_report_fd@@Base+0xdac>
   13cbc:	mov	w0, w20
   13cc0:	ldr	x30, [sp, #16]
   13cc4:	ldp	x19, x20, [sp], #48
   13cc8:	ret
   13ccc:	mov	x1, x19
   13cd0:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13cd4:	add	x0, x0, #0x978
   13cd8:	bl	1a2a0 <OnPrint@@Base+0x310>
   13cdc:	mov	w0, w20
   13ce0:	ldr	x30, [sp, #16]
   13ce4:	ldp	x19, x20, [sp], #48
   13ce8:	ret
   13cec:	nop
   13cf0:	stp	x19, x20, [sp, #-48]!
   13cf4:	mov	x20, x0
   13cf8:	mov	w2, #0xa                   	// #10
   13cfc:	mov	x0, x1
   13d00:	mov	x19, x1
   13d04:	add	x1, sp, #0x28
   13d08:	str	x30, [sp, #16]
   13d0c:	bl	14bd8 <__sanitizer_set_report_fd@@Base+0x1cb8>
   13d10:	ldr	x2, [x20, #8]
   13d14:	ldr	x1, [sp, #40]
   13d18:	str	w0, [x2]
   13d1c:	ldrb	w0, [x1]
   13d20:	cmp	w0, #0x0
   13d24:	cset	w20, eq  // eq = none
   13d28:	cbnz	w0, 13d3c <__sanitizer_set_report_fd@@Base+0xe1c>
   13d2c:	mov	w0, w20
   13d30:	ldr	x30, [sp, #16]
   13d34:	ldp	x19, x20, [sp], #48
   13d38:	ret
   13d3c:	mov	x1, x19
   13d40:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13d44:	add	x0, x0, #0x9a8
   13d48:	bl	1a2a0 <OnPrint@@Base+0x310>
   13d4c:	mov	w0, w20
   13d50:	ldr	x30, [sp, #16]
   13d54:	ldp	x19, x20, [sp], #48
   13d58:	ret
   13d5c:	nop
   13d60:	stp	x19, x20, [sp, #-32]!
   13d64:	mov	x19, x1
   13d68:	mov	x20, x0
   13d6c:	mov	x0, x1
   13d70:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   13d74:	add	x1, x1, #0x390
   13d78:	str	x30, [sp, #16]
   13d7c:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   13d80:	cbnz	w0, 13da0 <__sanitizer_set_report_fd@@Base+0xe80>
   13d84:	mov	w1, #0x0                   	// #0
   13d88:	ldr	x2, [x20, #8]
   13d8c:	mov	w0, #0x1                   	// #1
   13d90:	ldr	x30, [sp, #16]
   13d94:	str	w1, [x2]
   13d98:	ldp	x19, x20, [sp], #32
   13d9c:	ret
   13da0:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   13da4:	mov	x0, x19
   13da8:	add	x1, x1, #0x398
   13dac:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   13db0:	cbz	w0, 13d84 <__sanitizer_set_report_fd@@Base+0xe64>
   13db4:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   13db8:	mov	x0, x19
   13dbc:	add	x1, x1, #0x3a0
   13dc0:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   13dc4:	cbz	w0, 13d84 <__sanitizer_set_report_fd@@Base+0xe64>
   13dc8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   13dcc:	mov	x0, x19
   13dd0:	add	x1, x1, #0x9e8
   13dd4:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   13dd8:	cbz	w0, 13df0 <__sanitizer_set_report_fd@@Base+0xed0>
   13ddc:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   13de0:	mov	x0, x19
   13de4:	add	x1, x1, #0x3a8
   13de8:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   13dec:	cbnz	w0, 13df8 <__sanitizer_set_report_fd@@Base+0xed8>
   13df0:	mov	w1, #0x1                   	// #1
   13df4:	b	13d88 <__sanitizer_set_report_fd@@Base+0xe68>
   13df8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   13dfc:	mov	x0, x19
   13e00:	add	x1, x1, #0x3b0
   13e04:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   13e08:	cbz	w0, 13df0 <__sanitizer_set_report_fd@@Base+0xed0>
   13e0c:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   13e10:	mov	x0, x19
   13e14:	add	x1, x1, #0x8e8
   13e18:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   13e1c:	cbz	w0, 13e54 <__sanitizer_set_report_fd@@Base+0xf34>
   13e20:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13e24:	mov	x0, x19
   13e28:	add	x1, x1, #0x9d8
   13e2c:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   13e30:	cbz	w0, 13e54 <__sanitizer_set_report_fd@@Base+0xf34>
   13e34:	mov	x1, x19
   13e38:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   13e3c:	add	x0, x0, #0x9e8
   13e40:	bl	1a2a0 <OnPrint@@Base+0x310>
   13e44:	mov	w0, #0x0                   	// #0
   13e48:	ldr	x30, [sp, #16]
   13e4c:	ldp	x19, x20, [sp], #32
   13e50:	ret
   13e54:	ldr	x1, [x20, #8]
   13e58:	mov	w2, #0x2                   	// #2
   13e5c:	mov	w0, #0x1                   	// #1
   13e60:	ldr	x30, [sp, #16]
   13e64:	str	w2, [x1]
   13e68:	ldp	x19, x20, [sp], #32
   13e6c:	ret
   13e70:	stp	x19, x20, [sp, #-32]!
   13e74:	mov	x19, x1
   13e78:	mov	x20, x0
   13e7c:	mov	x0, x1
   13e80:	mov	w1, #0x25                  	// #37
   13e84:	str	x30, [sp, #24]
   13e88:	bl	14868 <__sanitizer_set_report_fd@@Base+0x1948>
   13e8c:	cbz	x0, 13ef0 <__sanitizer_set_report_fd@@Base+0xfd0>
   13e90:	mov	w2, #0x0                   	// #0
   13e94:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13e98:	mov	x0, #0x1000                	// #4096
   13e9c:	add	x1, x1, #0xdd0
   13ea0:	str	x21, [sp, #16]
   13ea4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   13ea8:	mov	x21, x0
   13eac:	mov	x2, #0x1000                	// #4096
   13eb0:	mov	x0, x19
   13eb4:	mov	x1, x21
   13eb8:	bl	13200 <__sanitizer_set_report_fd@@Base+0x2e0>
   13ebc:	ldrb	w2, [x20, #16]
   13ec0:	mov	x1, x21
   13ec4:	ldr	x0, [x20, #8]
   13ec8:	bl	143c8 <__sanitizer_set_report_fd@@Base+0x14a8>
   13ecc:	mov	w19, w0
   13ed0:	mov	x1, #0x1000                	// #4096
   13ed4:	mov	x0, x21
   13ed8:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   13edc:	mov	w0, w19
   13ee0:	ldr	x21, [sp, #16]
   13ee4:	ldr	x30, [sp, #24]
   13ee8:	ldp	x19, x20, [sp], #32
   13eec:	ret
   13ef0:	ldrb	w2, [x20, #16]
   13ef4:	mov	x1, x19
   13ef8:	ldr	x0, [x20, #8]
   13efc:	ldr	x30, [sp, #24]
   13f00:	ldp	x19, x20, [sp], #32
   13f04:	b	143c8 <__sanitizer_set_report_fd@@Base+0x14a8>
   13f08:	stp	x19, x20, [sp, #-48]!
   13f0c:	stp	x21, x22, [sp, #16]
   13f10:	adrp	x21, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   13f14:	add	x19, x21, #0xd40
   13f18:	str	x30, [sp, #32]
   13f1c:	ldr	w1, [x19, #160]
   13f20:	cbnz	w1, 13f34 <__sanitizer_set_report_fd@@Base+0x1014>
   13f24:	ldp	x21, x22, [sp, #16]
   13f28:	ldr	x30, [sp, #32]
   13f2c:	ldp	x19, x20, [sp], #48
   13f30:	ret
   13f34:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13f38:	add	x0, x0, #0xde8
   13f3c:	bl	1a2a0 <OnPrint@@Base+0x310>
   13f40:	ldr	w0, [x19, #160]
   13f44:	cmp	w0, #0x0
   13f48:	b.le	13f74 <__sanitizer_set_report_fd@@Base+0x1054>
   13f4c:	adrp	x22, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   13f50:	add	x22, x22, #0xe18
   13f54:	mov	x20, #0x0                   	// #0
   13f58:	ldr	x1, [x19, x20, lsl #3]
   13f5c:	mov	x0, x22
   13f60:	add	x20, x20, #0x1
   13f64:	bl	1a2a0 <OnPrint@@Base+0x310>
   13f68:	ldr	w0, [x19, #160]
   13f6c:	cmp	w0, w20
   13f70:	b.gt	13f58 <__sanitizer_set_report_fd@@Base+0x1038>
   13f74:	add	x21, x21, #0xd40
   13f78:	ldr	x30, [sp, #32]
   13f7c:	str	wzr, [x21, #160]
   13f80:	ldp	x21, x22, [sp, #16]
   13f84:	ldp	x19, x20, [sp], #48
   13f88:	ret
   13f8c:	nop
   13f90:	stp	x19, x20, [sp, #-32]!
   13f94:	stp	x21, x30, [sp, #16]
   13f98:	mov	x21, x1
   13f9c:	mov	x0, x21
   13fa0:	mov	x1, x2
   13fa4:	bl	14b18 <__sanitizer_set_report_fd@@Base+0x1bf8>
   13fa8:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   13fac:	mov	x19, x0
   13fb0:	add	x0, x1, #0xd40
   13fb4:	add	x1, x19, #0x1
   13fb8:	add	x0, x0, #0xa8
   13fbc:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   13fc0:	mov	x20, x0
   13fc4:	mov	x1, x21
   13fc8:	mov	x2, x19
   13fcc:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   13fd0:	mov	x0, x20
   13fd4:	strb	wzr, [x20, x19]
   13fd8:	ldp	x21, x30, [sp, #16]
   13fdc:	ldp	x19, x20, [sp], #32
   13fe0:	ret
   13fe4:	nop
   13fe8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   13fec:	stp	x19, x20, [sp, #-48]!
   13ff0:	ldr	x1, [x1, #4024]
   13ff4:	stp	x21, x22, [sp, #16]
   13ff8:	mov	x21, x0
   13ffc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14000:	add	x0, x0, #0xe20
   14004:	ldr	x1, [x1]
   14008:	str	x30, [sp, #32]
   1400c:	bl	1a2a0 <OnPrint@@Base+0x310>
   14010:	ldr	w0, [x21, #8]
   14014:	cmp	w0, #0x0
   14018:	b.le	1405c <__sanitizer_set_report_fd@@Base+0x113c>
   1401c:	adrp	x22, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14020:	add	x22, x22, #0xe40
   14024:	mov	x19, #0x0                   	// #0
   14028:	mov	w20, #0x0                   	// #0
   1402c:	nop
   14030:	ldr	x1, [x21]
   14034:	mov	x0, x22
   14038:	add	w20, w20, #0x1
   1403c:	add	x2, x1, x19
   14040:	ldr	x1, [x1, x19]
   14044:	add	x19, x19, #0x18
   14048:	ldr	x2, [x2, #8]
   1404c:	bl	1a2a0 <OnPrint@@Base+0x310>
   14050:	ldr	w1, [x21, #8]
   14054:	cmp	w1, w20
   14058:	b.gt	14030 <__sanitizer_set_report_fd@@Base+0x1110>
   1405c:	ldp	x21, x22, [sp, #16]
   14060:	ldr	x30, [sp, #32]
   14064:	ldp	x19, x20, [sp], #48
   14068:	ret
   1406c:	nop
   14070:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14074:	add	x0, x0, #0xe50
   14078:	str	x30, [sp, #-16]!
   1407c:	bl	1a2a0 <OnPrint@@Base+0x310>
   14080:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   14084:	nop
   14088:	and	w1, w1, #0xff
   1408c:	cmp	w1, #0x20
   14090:	cset	w0, eq  // eq = none
   14094:	cmp	w1, #0x2c
   14098:	csinc	w0, w0, wzr, ne  // ne = any
   1409c:	cbnz	w0, 140b4 <__sanitizer_set_report_fd@@Base+0x1194>
   140a0:	cmp	w1, #0x3a
   140a4:	cset	w0, eq  // eq = none
   140a8:	cmp	w1, #0xa
   140ac:	csinc	w0, w0, wzr, ne  // ne = any
   140b0:	cbz	w0, 140b8 <__sanitizer_set_report_fd@@Base+0x1198>
   140b4:	ret
   140b8:	and	w1, w1, #0xfffffffb
   140bc:	cmp	w1, #0x9
   140c0:	cset	w0, eq  // eq = none
   140c4:	ret
   140c8:	mov	x3, x0
   140cc:	str	x30, [sp, #-16]!
   140d0:	ldp	x4, x2, [x0, #16]
   140d4:	b	140dc <__sanitizer_set_report_fd@@Base+0x11bc>
   140d8:	str	x2, [x3, #24]
   140dc:	ldrb	w1, [x4, x2]
   140e0:	add	x2, x2, #0x1
   140e4:	mov	x0, x3
   140e8:	bl	14088 <__sanitizer_set_report_fd@@Base+0x1168>
   140ec:	tst	w0, #0xff
   140f0:	b.ne	140d8 <__sanitizer_set_report_fd@@Base+0x11b8>  // b.any
   140f4:	ldr	x30, [sp], #16
   140f8:	ret
   140fc:	nop
   14100:	stp	x19, x20, [sp, #-48]!
   14104:	stp	x21, x22, [sp, #16]
   14108:	mov	x21, x0
   1410c:	ldr	w0, [x0, #8]
   14110:	str	x30, [sp, #40]
   14114:	mov	x22, x1
   14118:	cmp	w0, #0x0
   1411c:	b.le	14190 <__sanitizer_set_report_fd@@Base+0x1270>
   14120:	mov	x19, #0x0                   	// #0
   14124:	mov	w20, #0x0                   	// #0
   14128:	str	x23, [sp, #32]
   1412c:	mov	x23, x2
   14130:	b	14148 <__sanitizer_set_report_fd@@Base+0x1228>
   14134:	ldr	w0, [x21, #8]
   14138:	add	w20, w20, #0x1
   1413c:	add	x19, x19, #0x18
   14140:	cmp	w0, w20
   14144:	b.le	1418c <__sanitizer_set_report_fd@@Base+0x126c>
   14148:	ldr	x3, [x21]
   1414c:	mov	x0, x22
   14150:	ldr	x1, [x3, x19]
   14154:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   14158:	cbnz	w0, 14134 <__sanitizer_set_report_fd@@Base+0x1214>
   1415c:	ldr	x0, [x21]
   14160:	mov	x1, x23
   14164:	ldp	x21, x22, [sp, #16]
   14168:	add	x19, x0, x19
   1416c:	ldr	x23, [sp, #32]
   14170:	ldr	x0, [x19, #16]
   14174:	ldr	x30, [sp, #40]
   14178:	ldr	x2, [x0]
   1417c:	ldp	x19, x20, [sp], #48
   14180:	ldr	x2, [x2]
   14184:	mov	x16, x2
   14188:	br	x16
   1418c:	ldr	x23, [sp, #32]
   14190:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   14194:	add	x1, x1, #0xd40
   14198:	ldr	w0, [x1, #160]
   1419c:	sxtw	x3, w0
   141a0:	cmp	x3, #0x13
   141a4:	b.hi	141c8 <__sanitizer_set_report_fd@@Base+0x12a8>  // b.pmore
   141a8:	add	w2, w0, #0x1
   141ac:	str	x22, [x1, x3, lsl #3]
   141b0:	ldp	x21, x22, [sp, #16]
   141b4:	mov	w0, #0x1                   	// #1
   141b8:	ldr	x30, [sp, #40]
   141bc:	str	w2, [x1, #160]
   141c0:	ldp	x19, x20, [sp], #48
   141c4:	ret
   141c8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   141cc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   141d0:	add	x2, x2, #0xe60
   141d4:	add	x0, x0, #0xe90
   141d8:	mov	x4, #0x14                  	// #20
   141dc:	mov	w1, #0x1e                  	// #30
   141e0:	str	x23, [sp, #32]
   141e4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   141e8:	stp	x19, x20, [sp, #-32]!
   141ec:	mov	x19, x0
   141f0:	ldp	x3, x4, [x0, #16]
   141f4:	str	x30, [sp, #16]
   141f8:	ldrb	w1, [x3, x4]
   141fc:	add	x5, x3, x4
   14200:	mov	x2, x4
   14204:	cmp	w1, #0x3d
   14208:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   1420c:	b.ne	1422c <__sanitizer_set_report_fd@@Base+0x130c>  // b.any
   14210:	b	1424c <__sanitizer_set_report_fd@@Base+0x132c>
   14214:	add	x2, x2, #0x1
   14218:	str	x2, [x19, #24]
   1421c:	ldrb	w1, [x3, x2]
   14220:	cmp	w1, #0x3d
   14224:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   14228:	b.eq	1424c <__sanitizer_set_report_fd@@Base+0x132c>  // b.none
   1422c:	mov	x0, x19
   14230:	bl	14088 <__sanitizer_set_report_fd@@Base+0x1168>
   14234:	tst	w0, #0xff
   14238:	b.eq	14214 <__sanitizer_set_report_fd@@Base+0x12f4>  // b.none
   1423c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14240:	mov	x0, x19
   14244:	add	x1, x1, #0xed8
   14248:	bl	14070 <__sanitizer_set_report_fd@@Base+0x1150>
   1424c:	cmp	w1, #0x3d
   14250:	b.ne	1423c <__sanitizer_set_report_fd@@Base+0x131c>  // b.any
   14254:	sub	x2, x2, x4
   14258:	mov	x1, x5
   1425c:	mov	x0, x19
   14260:	bl	13f90 <__sanitizer_set_report_fd@@Base+0x1070>
   14264:	ldp	x4, x2, [x19, #16]
   14268:	mov	w3, #0x22                  	// #34
   1426c:	mov	x20, x0
   14270:	add	x6, x2, #0x1
   14274:	str	x6, [x19, #24]
   14278:	add	x7, x4, x6
   1427c:	ldrb	w1, [x4, x6]
   14280:	cmp	w1, #0x27
   14284:	ccmp	w1, w3, #0x4, ne  // ne = any
   14288:	b.eq	142d4 <__sanitizer_set_report_fd@@Base+0x13b4>  // b.none
   1428c:	cbz	w1, 14360 <__sanitizer_set_report_fd@@Base+0x1440>
   14290:	mov	x5, x6
   14294:	b	142ac <__sanitizer_set_report_fd@@Base+0x138c>
   14298:	add	x3, x5, #0x1
   1429c:	str	x3, [x19, #24]
   142a0:	ldrb	w1, [x4, x3]
   142a4:	cbz	w1, 14358 <__sanitizer_set_report_fd@@Base+0x1438>
   142a8:	mov	x5, x3
   142ac:	mov	x0, x19
   142b0:	bl	14088 <__sanitizer_set_report_fd@@Base+0x1168>
   142b4:	tst	w0, #0xff
   142b8:	b.eq	14298 <__sanitizer_set_report_fd@@Base+0x1378>  // b.none
   142bc:	sub	x2, x5, x6
   142c0:	mov	x1, x7
   142c4:	mov	x0, x19
   142c8:	bl	13f90 <__sanitizer_set_report_fd@@Base+0x1070>
   142cc:	mov	x2, x0
   142d0:	b	14328 <__sanitizer_set_report_fd@@Base+0x1408>
   142d4:	add	x2, x2, #0x2
   142d8:	str	x2, [x19, #24]
   142dc:	add	x1, x4, x2
   142e0:	ldrb	w0, [x4, x6]
   142e4:	ldrb	w3, [x4, x2]
   142e8:	cbnz	w3, 14300 <__sanitizer_set_report_fd@@Base+0x13e0>
   142ec:	b	14348 <__sanitizer_set_report_fd@@Base+0x1428>
   142f0:	add	x2, x2, #0x1
   142f4:	str	x2, [x19, #24]
   142f8:	ldrb	w3, [x4, x2]
   142fc:	cbz	w3, 14348 <__sanitizer_set_report_fd@@Base+0x1428>
   14300:	cmp	w0, w3
   14304:	b.ne	142f0 <__sanitizer_set_report_fd@@Base+0x13d0>  // b.any
   14308:	mvn	x6, x6
   1430c:	mov	x0, x19
   14310:	add	x2, x6, x2
   14314:	bl	13f90 <__sanitizer_set_report_fd@@Base+0x1070>
   14318:	mov	x2, x0
   1431c:	ldr	x1, [x19, #24]
   14320:	add	x1, x1, #0x1
   14324:	str	x1, [x19, #24]
   14328:	mov	x1, x20
   1432c:	mov	x0, x19
   14330:	bl	14100 <__sanitizer_set_report_fd@@Base+0x11e0>
   14334:	tst	w0, #0xff
   14338:	b.eq	14368 <__sanitizer_set_report_fd@@Base+0x1448>  // b.none
   1433c:	ldr	x30, [sp, #16]
   14340:	ldp	x19, x20, [sp], #32
   14344:	ret
   14348:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   1434c:	mov	x0, x19
   14350:	add	x1, x1, #0xf00
   14354:	bl	14070 <__sanitizer_set_report_fd@@Base+0x1150>
   14358:	sub	x2, x5, x2
   1435c:	b	142c0 <__sanitizer_set_report_fd@@Base+0x13a0>
   14360:	mov	x2, #0x0                   	// #0
   14364:	b	142c0 <__sanitizer_set_report_fd@@Base+0x13a0>
   14368:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   1436c:	mov	x0, x19
   14370:	add	x1, x1, #0xee8
   14374:	bl	14070 <__sanitizer_set_report_fd@@Base+0x1150>
   14378:	stp	x19, x30, [sp, #-16]!
   1437c:	mov	x19, x0
   14380:	b	14388 <__sanitizer_set_report_fd@@Base+0x1468>
   14384:	bl	141e8 <__sanitizer_set_report_fd@@Base+0x12c8>
   14388:	mov	x0, x19
   1438c:	bl	140c8 <__sanitizer_set_report_fd@@Base+0x11a8>
   14390:	ldp	x2, x1, [x19, #16]
   14394:	mov	x0, x19
   14398:	ldrb	w1, [x2, x1]
   1439c:	cbnz	w1, 14384 <__sanitizer_set_report_fd@@Base+0x1464>
   143a0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   143a4:	ldr	x0, [x0, #4056]
   143a8:	ldr	w1, [x0, #36]
   143ac:	cmp	w1, #0x0
   143b0:	b.gt	143bc <__sanitizer_set_report_fd@@Base+0x149c>
   143b4:	mov	w1, #0x1                   	// #1
   143b8:	str	w1, [x0, #36]
   143bc:	ldp	x19, x30, [sp], #16
   143c0:	ret
   143c4:	nop
   143c8:	stp	x19, x20, [sp, #-80]!
   143cc:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   143d0:	mov	x19, x0
   143d4:	ldr	x20, [x20, #4016]
   143d8:	stp	x21, x22, [sp, #16]
   143dc:	mov	x21, x1
   143e0:	and	w22, w2, #0xff
   143e4:	ldr	x0, [x20]
   143e8:	str	x30, [sp, #32]
   143ec:	cbz	x0, 14474 <__sanitizer_set_report_fd@@Base+0x1554>
   143f0:	cmp	x0, #0x8, lsl #12
   143f4:	add	x5, sp, #0x34
   143f8:	add	x3, sp, #0x48
   143fc:	add	x2, sp, #0x40
   14400:	add	x1, sp, #0x38
   14404:	mov	x4, #0x8000                	// #32768
   14408:	csel	x4, x0, x4, cs  // cs = hs, nlast
   1440c:	mov	x0, x21
   14410:	bl	127a0 <__sanitizer_cov_dump@@Base+0x2190>
   14414:	ands	w20, w0, #0xff
   14418:	b.ne	14434 <__sanitizer_set_report_fd@@Base+0x1514>  // b.any
   1441c:	cbz	w22, 14480 <__sanitizer_set_report_fd@@Base+0x1560>
   14420:	mov	w0, w22
   14424:	ldp	x21, x22, [sp, #16]
   14428:	ldr	x30, [sp, #32]
   1442c:	ldp	x19, x20, [sp], #80
   14430:	ret
   14434:	ldr	x0, [sp, #56]
   14438:	cbz	x0, 14454 <__sanitizer_set_report_fd@@Base+0x1534>
   1443c:	ldp	x22, x21, [x19, #16]
   14440:	stp	x0, xzr, [x19, #16]
   14444:	mov	x0, x19
   14448:	bl	14378 <__sanitizer_set_report_fd@@Base+0x1458>
   1444c:	stp	x22, x21, [x19, #16]
   14450:	ldr	x0, [sp, #56]
   14454:	mov	w22, w20
   14458:	ldr	x1, [sp, #64]
   1445c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   14460:	mov	w0, w22
   14464:	ldp	x21, x22, [sp, #16]
   14468:	ldr	x30, [sp, #32]
   1446c:	ldp	x19, x20, [sp], #80
   14470:	ret
   14474:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   14478:	str	x0, [x20]
   1447c:	b	143f0 <__sanitizer_set_report_fd@@Base+0x14d0>
   14480:	ldr	w2, [sp, #52]
   14484:	mov	x1, x21
   14488:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   1448c:	add	x0, x0, #0xf18
   14490:	bl	1a2a0 <OnPrint@@Base+0x310>
   14494:	mov	w0, w22
   14498:	ldp	x21, x22, [sp, #16]
   1449c:	ldr	x30, [sp, #32]
   144a0:	ldp	x19, x20, [sp], #80
   144a4:	ret
   144a8:	cbz	x1, 144d4 <__sanitizer_set_report_fd@@Base+0x15b4>
   144ac:	stp	x19, x20, [sp, #-32]!
   144b0:	mov	x19, x0
   144b4:	stp	x21, x30, [sp, #16]
   144b8:	ldp	x21, x20, [x0, #16]
   144bc:	stp	x1, xzr, [x0, #16]
   144c0:	bl	14378 <__sanitizer_set_report_fd@@Base+0x1458>
   144c4:	stp	x21, x20, [x19, #16]
   144c8:	ldp	x21, x30, [sp, #16]
   144cc:	ldp	x19, x20, [sp], #32
   144d0:	ret
   144d4:	ret
   144d8:	ldr	w4, [x0, #8]
   144dc:	sxtw	x5, w4
   144e0:	cmp	x5, #0xc7
   144e4:	b.hi	1450c <__sanitizer_set_report_fd@@Base+0x15ec>  // b.pmore
   144e8:	mov	w5, #0x18                  	// #24
   144ec:	add	w7, w4, #0x1
   144f0:	ldr	x6, [x0]
   144f4:	smull	x4, w4, w5
   144f8:	add	x5, x6, x4
   144fc:	str	x1, [x6, x4]
   14500:	stp	x3, x2, [x5, #8]
   14504:	str	w7, [x0, #8]
   14508:	ret
   1450c:	str	x30, [sp, #-16]!
   14510:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14514:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14518:	mov	x3, x5
   1451c:	add	x2, x2, #0xf48
   14520:	add	x0, x0, #0xe90
   14524:	mov	x4, #0xc8                  	// #200
   14528:	mov	w1, #0x9e                  	// #158
   1452c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   14530:	stp	x19, x30, [sp, #-16]!
   14534:	mov	x19, x0
   14538:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1453c:	add	x0, x1, #0xd40
   14540:	mov	x1, #0x12c0                	// #4800
   14544:	str	wzr, [x19, #8]
   14548:	add	x0, x0, #0xa8
   1454c:	stp	xzr, xzr, [x19, #16]
   14550:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   14554:	str	x0, [x19]
   14558:	ldp	x19, x30, [sp], #16
   1455c:	ret
   14560:	cbz	x2, 14588 <__sanitizer_set_report_fd@@Base+0x1668>
   14564:	add	x3, x0, x2
   14568:	b	14578 <__sanitizer_set_report_fd@@Base+0x1658>
   1456c:	add	x0, x0, #0x1
   14570:	cmp	x3, x0
   14574:	b.eq	14588 <__sanitizer_set_report_fd@@Base+0x1668>  // b.none
   14578:	ldrb	w2, [x0]
   1457c:	cmp	w2, w1
   14580:	b.ne	1456c <__sanitizer_set_report_fd@@Base+0x164c>  // b.any
   14584:	ret
   14588:	mov	x0, #0x0                   	// #0
   1458c:	ret
   14590:	mov	x3, x0
   14594:	cbz	x2, 145bc <__sanitizer_set_report_fd@@Base+0x169c>
   14598:	add	x4, x0, x2
   1459c:	mov	x0, #0x0                   	// #0
   145a0:	ldrb	w2, [x3]
   145a4:	cmp	w2, w1
   145a8:	csel	x0, x0, x3, ne  // ne = any
   145ac:	add	x3, x3, #0x1
   145b0:	cmp	x4, x3
   145b4:	b.ne	145a0 <__sanitizer_set_report_fd@@Base+0x1680>  // b.any
   145b8:	ret
   145bc:	mov	x0, #0x0                   	// #0
   145c0:	ret
   145c4:	nop
   145c8:	cbz	x2, 145fc <__sanitizer_set_report_fd@@Base+0x16dc>
   145cc:	mov	x3, #0x0                   	// #0
   145d0:	b	145dc <__sanitizer_set_report_fd@@Base+0x16bc>
   145d4:	cmp	x2, x3
   145d8:	b.eq	145fc <__sanitizer_set_report_fd@@Base+0x16dc>  // b.none
   145dc:	ldrb	w5, [x0, x3]
   145e0:	ldrb	w4, [x1, x3]
   145e4:	add	x3, x3, #0x1
   145e8:	cmp	w5, w4
   145ec:	b.eq	145d4 <__sanitizer_set_report_fd@@Base+0x16b4>  // b.none
   145f0:	mov	w0, #0x1                   	// #1
   145f4:	cneg	w0, w0, cc  // cc = lo, ul, last
   145f8:	ret
   145fc:	mov	w0, #0x0                   	// #0
   14600:	ret
   14604:	nop
   14608:	cbz	x2, 14624 <__sanitizer_set_report_fd@@Base+0x1704>
   1460c:	mov	x3, #0x0                   	// #0
   14610:	ldrb	w4, [x1, x3]
   14614:	strb	w4, [x0, x3]
   14618:	add	x3, x3, #0x1
   1461c:	cmp	x2, x3
   14620:	b.ne	14610 <__sanitizer_set_report_fd@@Base+0x16f0>  // b.any
   14624:	ret
   14628:	cmp	x0, x1
   1462c:	b.cs	14658 <__sanitizer_set_report_fd@@Base+0x1738>  // b.hs, b.nlast
   14630:	cmp	x2, #0x0
   14634:	b.le	14654 <__sanitizer_set_report_fd@@Base+0x1734>
   14638:	mov	x3, #0x0                   	// #0
   1463c:	nop
   14640:	ldrb	w4, [x1, x3]
   14644:	strb	w4, [x0, x3]
   14648:	add	x3, x3, #0x1
   1464c:	cmp	x2, x3
   14650:	b.ne	14640 <__sanitizer_set_report_fd@@Base+0x1720>  // b.any
   14654:	ret
   14658:	cmp	x2, #0x0
   1465c:	ccmp	x0, x1, #0x0, gt
   14660:	b.ls	14654 <__sanitizer_set_report_fd@@Base+0x1734>  // b.plast
   14664:	sub	x2, x2, #0x1
   14668:	ldrb	w3, [x1, x2]
   1466c:	strb	w3, [x0, x2]
   14670:	sub	x2, x2, #0x1
   14674:	cmn	x2, #0x1
   14678:	b.ne	14668 <__sanitizer_set_report_fd@@Base+0x1748>  // b.any
   1467c:	ret
   14680:	orr	x3, x0, x2
   14684:	tst	x3, #0xf
   14688:	b.eq	146b0 <__sanitizer_set_report_fd@@Base+0x1790>  // b.none
   1468c:	cbz	x2, 146ac <__sanitizer_set_report_fd@@Base+0x178c>
   14690:	and	w3, w1, #0xff
   14694:	add	x2, x0, x2
   14698:	mov	x1, x0
   1469c:	nop
   146a0:	strb	w3, [x1], #1
   146a4:	cmp	x2, x1
   146a8:	b.ne	146a0 <__sanitizer_set_report_fd@@Base+0x1780>  // b.any
   146ac:	ret
   146b0:	sxtw	x3, w1
   146b4:	sbfiz	x1, x1, #8, #32
   146b8:	orr	x3, x3, x1
   146bc:	and	x2, x2, #0xfffffffffffffff8
   146c0:	add	x1, x0, x2
   146c4:	mov	x2, x0
   146c8:	orr	x3, x3, x3, lsl #16
   146cc:	cmp	x0, x1
   146d0:	orr	x3, x3, x3, lsl #32
   146d4:	b.cs	146ac <__sanitizer_set_report_fd@@Base+0x178c>  // b.hs, b.nlast
   146d8:	str	x3, [x2, #8]
   146dc:	str	x3, [x2], #16
   146e0:	cmp	x1, x2
   146e4:	b.hi	146d8 <__sanitizer_set_report_fd@@Base+0x17b8>  // b.pmore
   146e8:	ret
   146ec:	nop
   146f0:	ldrb	w4, [x0]
   146f4:	mov	x6, x0
   146f8:	cbz	w4, 1473c <__sanitizer_set_report_fd@@Base+0x181c>
   146fc:	ldrb	w5, [x1]
   14700:	mov	x0, #0x0                   	// #0
   14704:	nop
   14708:	cmp	w4, w5
   1470c:	b.eq	14728 <__sanitizer_set_report_fd@@Base+0x1808>  // b.none
   14710:	mov	w2, w5
   14714:	mov	x3, x1
   14718:	cbz	w2, 1472c <__sanitizer_set_report_fd@@Base+0x180c>
   1471c:	ldrb	w2, [x3, #1]!
   14720:	cmp	w4, w2
   14724:	b.ne	14718 <__sanitizer_set_report_fd@@Base+0x17f8>  // b.any
   14728:	ret
   1472c:	add	x0, x0, #0x1
   14730:	ldrb	w4, [x6, x0]
   14734:	cbnz	w4, 14708 <__sanitizer_set_report_fd@@Base+0x17e8>
   14738:	ret
   1473c:	mov	x0, #0x0                   	// #0
   14740:	ret
   14744:	nop
   14748:	stp	x19, x20, [sp, #-32]!
   1474c:	mov	x20, x0
   14750:	str	x30, [sp, #24]
   14754:	ldrb	w0, [x0]
   14758:	cbz	w0, 147bc <__sanitizer_set_report_fd@@Base+0x189c>
   1475c:	mov	x19, #0x0                   	// #0
   14760:	str	x21, [sp, #16]
   14764:	nop
   14768:	mov	x21, x19
   1476c:	add	x19, x19, #0x1
   14770:	ldrb	w0, [x20, x19]
   14774:	cbnz	w0, 14768 <__sanitizer_set_report_fd@@Base+0x1848>
   14778:	mov	x1, #0x0                   	// #0
   1477c:	add	x0, x21, #0x2
   14780:	mov	x2, #0x0                   	// #0
   14784:	bl	cb90 <__sancov_default_options@@Base+0x440>
   14788:	mov	x1, #0x0                   	// #0
   1478c:	nop
   14790:	ldrb	w3, [x20, x1]
   14794:	cmp	x1, x21
   14798:	strb	w3, [x0, x1]
   1479c:	add	x1, x1, #0x1
   147a0:	b.ne	14790 <__sanitizer_set_report_fd@@Base+0x1870>  // b.any
   147a4:	add	x19, x0, x19
   147a8:	ldr	x21, [sp, #16]
   147ac:	strb	wzr, [x19]
   147b0:	ldr	x30, [sp, #24]
   147b4:	ldp	x19, x20, [sp], #32
   147b8:	ret
   147bc:	mov	x2, #0x0                   	// #0
   147c0:	mov	x1, #0x0                   	// #0
   147c4:	mov	x0, #0x1                   	// #1
   147c8:	bl	cb90 <__sancov_default_options@@Base+0x440>
   147cc:	mov	x19, x0
   147d0:	strb	wzr, [x19]
   147d4:	ldr	x30, [sp, #24]
   147d8:	ldp	x19, x20, [sp], #32
   147dc:	ret
   147e0:	ldrb	w3, [x0]
   147e4:	mov	x2, #0x1                   	// #1
   147e8:	ldrb	w4, [x1]
   147ec:	cmp	w4, w3
   147f0:	b.ne	14810 <__sanitizer_set_report_fd@@Base+0x18f0>  // b.any
   147f4:	nop
   147f8:	cbz	w3, 14820 <__sanitizer_set_report_fd@@Base+0x1900>
   147fc:	ldrb	w3, [x0, x2]
   14800:	ldrb	w4, [x1, x2]
   14804:	add	x2, x2, #0x1
   14808:	cmp	w3, w4
   1480c:	b.eq	147f8 <__sanitizer_set_report_fd@@Base+0x18d8>  // b.none
   14810:	cmp	w3, w4
   14814:	mov	w0, #0x1                   	// #1
   14818:	cneg	w0, w0, cc  // cc = lo, ul, last
   1481c:	ret
   14820:	mov	w0, #0x0                   	// #0
   14824:	ret
   14828:	cbz	x2, 14860 <__sanitizer_set_report_fd@@Base+0x1940>
   1482c:	mov	x3, #0x0                   	// #0
   14830:	b	14840 <__sanitizer_set_report_fd@@Base+0x1920>
   14834:	cbz	w4, 14860 <__sanitizer_set_report_fd@@Base+0x1940>
   14838:	cmp	x2, x3
   1483c:	b.eq	14860 <__sanitizer_set_report_fd@@Base+0x1940>  // b.none
   14840:	ldrb	w4, [x0, x3]
   14844:	ldrb	w5, [x1, x3]
   14848:	add	x3, x3, #0x1
   1484c:	cmp	w4, w5
   14850:	b.eq	14834 <__sanitizer_set_report_fd@@Base+0x1914>  // b.none
   14854:	mov	w0, #0x1                   	// #1
   14858:	cneg	w0, w0, cc  // cc = lo, ul, last
   1485c:	ret
   14860:	mov	w0, #0x0                   	// #0
   14864:	ret
   14868:	ldrb	w2, [x0]
   1486c:	and	w3, w1, #0xff
   14870:	cmp	w2, w1, uxtb
   14874:	b.eq	14888 <__sanitizer_set_report_fd@@Base+0x1968>  // b.none
   14878:	cbz	w2, 1488c <__sanitizer_set_report_fd@@Base+0x196c>
   1487c:	ldrb	w2, [x0, #1]!
   14880:	cmp	w2, w3
   14884:	b.ne	14878 <__sanitizer_set_report_fd@@Base+0x1958>  // b.any
   14888:	ret
   1488c:	mov	x0, #0x0                   	// #0
   14890:	ret
   14894:	nop
   14898:	ldrb	w4, [x0]
   1489c:	mov	x2, x0
   148a0:	and	w3, w1, #0xff
   148a4:	cmp	w4, w1, uxtb
   148a8:	b.eq	148c0 <__sanitizer_set_report_fd@@Base+0x19a0>  // b.none
   148ac:	mov	w1, w4
   148b0:	cbz	w1, 148c4 <__sanitizer_set_report_fd@@Base+0x19a4>
   148b4:	ldrb	w1, [x0, #1]!
   148b8:	cmp	w1, w3
   148bc:	b.ne	148b0 <__sanitizer_set_report_fd@@Base+0x1990>  // b.any
   148c0:	ret
   148c4:	cbz	w4, 148e0 <__sanitizer_set_report_fd@@Base+0x19c0>
   148c8:	add	x1, x2, #0x1
   148cc:	nop
   148d0:	mov	x0, x1
   148d4:	ldrb	w2, [x1], #1
   148d8:	cbnz	w2, 148d0 <__sanitizer_set_report_fd@@Base+0x19b0>
   148dc:	ret
   148e0:	mov	x0, x2
   148e4:	ret
   148e8:	ldrb	w3, [x0]
   148ec:	mov	x2, x0
   148f0:	mov	x0, #0x0                   	// #0
   148f4:	cbz	w3, 14908 <__sanitizer_set_report_fd@@Base+0x19e8>
   148f8:	cmp	w3, w1
   148fc:	csel	x0, x0, x2, ne  // ne = any
   14900:	ldrb	w3, [x2, #1]!
   14904:	cbnz	w3, 148f8 <__sanitizer_set_report_fd@@Base+0x19d8>
   14908:	ret
   1490c:	nop
   14910:	mov	x2, x0
   14914:	ldrb	w0, [x0]
   14918:	cbz	w0, 14930 <__sanitizer_set_report_fd@@Base+0x1a10>
   1491c:	mov	x0, #0x0                   	// #0
   14920:	add	x0, x0, #0x1
   14924:	ldrb	w1, [x2, x0]
   14928:	cbnz	w1, 14920 <__sanitizer_set_report_fd@@Base+0x1a00>
   1492c:	ret
   14930:	mov	x0, #0x0                   	// #0
   14934:	ret
   14938:	mov	x7, x0
   1493c:	ldrb	w0, [x1]
   14940:	mov	x8, x2
   14944:	mov	x6, #0x0                   	// #0
   14948:	cbz	w0, 1495c <__sanitizer_set_report_fd@@Base+0x1a3c>
   1494c:	nop
   14950:	add	x6, x6, #0x1
   14954:	ldrb	w3, [x1, x6]
   14958:	cbnz	w3, 14950 <__sanitizer_set_report_fd@@Base+0x1a30>
   1495c:	cbz	x8, 149c0 <__sanitizer_set_report_fd@@Base+0x1aa0>
   14960:	mov	x5, #0x0                   	// #0
   14964:	b	14974 <__sanitizer_set_report_fd@@Base+0x1a54>
   14968:	add	x5, x5, #0x1
   1496c:	cmp	x8, x5
   14970:	b.eq	149c0 <__sanitizer_set_report_fd@@Base+0x1aa0>  // b.none
   14974:	ldrb	w3, [x7, x5]
   14978:	add	x0, x7, x5
   1497c:	cbnz	w3, 14968 <__sanitizer_set_report_fd@@Base+0x1a48>
   14980:	str	x30, [sp, #-16]!
   14984:	sub	x2, x8, x5
   14988:	cmp	x2, x6
   1498c:	b.hi	149ac <__sanitizer_set_report_fd@@Base+0x1a8c>  // b.pmore
   14990:	sub	x2, x2, #0x1
   14994:	bl	14628 <__sanitizer_set_report_fd@@Base+0x1708>
   14998:	add	x7, x7, x8
   1499c:	add	x0, x6, x5
   149a0:	sturb	wzr, [x7, #-1]
   149a4:	ldr	x30, [sp], #16
   149a8:	ret
   149ac:	add	x2, x6, #0x1
   149b0:	bl	14628 <__sanitizer_set_report_fd@@Base+0x1708>
   149b4:	add	x0, x6, x5
   149b8:	ldr	x30, [sp], #16
   149bc:	ret
   149c0:	add	x0, x8, x6
   149c4:	ret
   149c8:	ldrb	w3, [x0]
   149cc:	mov	x4, #0x0                   	// #0
   149d0:	cbz	w3, 14a30 <__sanitizer_set_report_fd@@Base+0x1b10>
   149d4:	nop
   149d8:	add	x4, x4, #0x1
   149dc:	add	x5, x0, x4
   149e0:	ldrb	w3, [x0, x4]
   149e4:	cbnz	w3, 149d8 <__sanitizer_set_report_fd@@Base+0x1ab8>
   149e8:	add	x6, x0, x4
   149ec:	mov	x3, #0x0                   	// #0
   149f0:	cbnz	x2, 14a04 <__sanitizer_set_report_fd@@Base+0x1ae4>
   149f4:	b	14a18 <__sanitizer_set_report_fd@@Base+0x1af8>
   149f8:	strb	w7, [x6]
   149fc:	add	x6, x6, #0x1
   14a00:	b.eq	14a20 <__sanitizer_set_report_fd@@Base+0x1b00>  // b.none
   14a04:	ldrb	w7, [x1, x3]
   14a08:	add	x3, x3, #0x1
   14a0c:	mov	x5, x6
   14a10:	cmp	x2, x3
   14a14:	cbnz	w7, 149f8 <__sanitizer_set_report_fd@@Base+0x1ad8>
   14a18:	strb	wzr, [x5]
   14a1c:	ret
   14a20:	add	x4, x2, x4
   14a24:	add	x5, x0, x4
   14a28:	strb	wzr, [x5]
   14a2c:	ret
   14a30:	mov	x5, x0
   14a34:	b	149e8 <__sanitizer_set_report_fd@@Base+0x1ac8>
   14a38:	mov	x7, x0
   14a3c:	ldrb	w0, [x1]
   14a40:	str	x30, [sp, #-16]!
   14a44:	mov	x5, #0x0                   	// #0
   14a48:	cbz	w0, 14a5c <__sanitizer_set_report_fd@@Base+0x1b3c>
   14a4c:	nop
   14a50:	add	x5, x5, #0x1
   14a54:	ldrb	w3, [x1, x5]
   14a58:	cbnz	w3, 14a50 <__sanitizer_set_report_fd@@Base+0x1b30>
   14a5c:	cmp	x2, x5
   14a60:	b.hi	14a94 <__sanitizer_set_report_fd@@Base+0x1b74>  // b.pmore
   14a64:	cbnz	x2, 14a74 <__sanitizer_set_report_fd@@Base+0x1b54>
   14a68:	mov	x0, x5
   14a6c:	ldr	x30, [sp], #16
   14a70:	ret
   14a74:	sub	x6, x2, #0x1
   14a78:	mov	x0, x7
   14a7c:	mov	x2, x6
   14a80:	bl	14628 <__sanitizer_set_report_fd@@Base+0x1708>
   14a84:	strb	wzr, [x7, x6]
   14a88:	mov	x0, x5
   14a8c:	ldr	x30, [sp], #16
   14a90:	ret
   14a94:	mov	x0, x7
   14a98:	add	x2, x5, #0x1
   14a9c:	bl	14628 <__sanitizer_set_report_fd@@Base+0x1708>
   14aa0:	mov	x0, x5
   14aa4:	ldr	x30, [sp], #16
   14aa8:	ret
   14aac:	nop
   14ab0:	str	x30, [sp, #-16]!
   14ab4:	mov	x5, x0
   14ab8:	cbz	x2, 14ae4 <__sanitizer_set_report_fd@@Base+0x1bc4>
   14abc:	mov	x3, #0x0                   	// #0
   14ac0:	b	14ad4 <__sanitizer_set_report_fd@@Base+0x1bb4>
   14ac4:	strb	w4, [x5, x3]
   14ac8:	add	x3, x3, #0x1
   14acc:	cmp	x2, x3
   14ad0:	b.eq	14af8 <__sanitizer_set_report_fd@@Base+0x1bd8>  // b.none
   14ad4:	ldrb	w4, [x1, x3]
   14ad8:	add	x0, x5, x3
   14adc:	cbnz	w4, 14ac4 <__sanitizer_set_report_fd@@Base+0x1ba4>
   14ae0:	sub	x2, x2, x3
   14ae4:	mov	w1, #0x0                   	// #0
   14ae8:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   14aec:	mov	x0, x5
   14af0:	ldr	x30, [sp], #16
   14af4:	ret
   14af8:	add	x0, x5, x2
   14afc:	mov	w1, #0x0                   	// #0
   14b00:	mov	x2, #0x0                   	// #0
   14b04:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   14b08:	mov	x0, x5
   14b0c:	ldr	x30, [sp], #16
   14b10:	ret
   14b14:	nop
   14b18:	mov	x3, x0
   14b1c:	mov	x0, #0x0                   	// #0
   14b20:	cbnz	x1, 14b34 <__sanitizer_set_report_fd@@Base+0x1c14>
   14b24:	b	14b3c <__sanitizer_set_report_fd@@Base+0x1c1c>
   14b28:	add	x0, x0, #0x1
   14b2c:	cmp	x1, x0
   14b30:	b.eq	14b3c <__sanitizer_set_report_fd@@Base+0x1c1c>  // b.none
   14b34:	ldrb	w2, [x3, x0]
   14b38:	cbnz	w2, 14b28 <__sanitizer_set_report_fd@@Base+0x1c08>
   14b3c:	ret
   14b40:	mov	x8, x0
   14b44:	ldrb	w0, [x0]
   14b48:	mov	x2, #0x0                   	// #0
   14b4c:	cbz	w0, 14b5c <__sanitizer_set_report_fd@@Base+0x1c3c>
   14b50:	add	x2, x2, #0x1
   14b54:	ldrb	w3, [x8, x2]
   14b58:	cbnz	w3, 14b50 <__sanitizer_set_report_fd@@Base+0x1c30>
   14b5c:	ldrb	w10, [x1]
   14b60:	cbz	w10, 14bd0 <__sanitizer_set_report_fd@@Base+0x1cb0>
   14b64:	mov	x4, #0x0                   	// #0
   14b68:	mov	x5, x4
   14b6c:	add	x4, x4, #0x1
   14b70:	ldrb	w3, [x1, x4]
   14b74:	cbnz	w3, 14b68 <__sanitizer_set_report_fd@@Base+0x1c48>
   14b78:	cmp	x4, x2
   14b7c:	b.hi	14bc8 <__sanitizer_set_report_fd@@Base+0x1ca8>  // b.pmore
   14b80:	sub	x4, x2, x4
   14b84:	mov	x9, #0x0                   	// #0
   14b88:	add	x0, x8, x9
   14b8c:	mov	w7, w10
   14b90:	mov	x2, #0x0                   	// #0
   14b94:	b	14ba8 <__sanitizer_set_report_fd@@Base+0x1c88>
   14b98:	cmp	x5, x2
   14b9c:	b.eq	14bcc <__sanitizer_set_report_fd@@Base+0x1cac>  // b.none
   14ba0:	ldrb	w7, [x1, x3]
   14ba4:	mov	x2, x3
   14ba8:	ldrb	w6, [x0, x2]
   14bac:	add	x3, x2, #0x1
   14bb0:	cmp	w6, w7
   14bb4:	b.eq	14b98 <__sanitizer_set_report_fd@@Base+0x1c78>  // b.none
   14bb8:	add	x9, x9, #0x1
   14bbc:	cmp	x9, x4
   14bc0:	b.ls	14b88 <__sanitizer_set_report_fd@@Base+0x1c68>  // b.plast
   14bc4:	nop
   14bc8:	mov	x0, #0x0                   	// #0
   14bcc:	ret
   14bd0:	mov	x0, x8
   14bd4:	ret
   14bd8:	cmp	w2, #0xa
   14bdc:	b.ne	14cd0 <__sanitizer_set_report_fd@@Base+0x1db0>  // b.any
   14be0:	ldrb	w2, [x0]
   14be4:	cmp	w2, #0x20
   14be8:	b.eq	14c90 <__sanitizer_set_report_fd@@Base+0x1d70>  // b.none
   14bec:	sub	w3, w2, #0x9
   14bf0:	and	w3, w3, #0xff
   14bf4:	cmp	w3, #0x4
   14bf8:	b.ls	14c90 <__sanitizer_set_report_fd@@Base+0x1d70>  // b.plast
   14bfc:	cmp	w2, #0x2b
   14c00:	b.eq	14cbc <__sanitizer_set_report_fd@@Base+0x1d9c>  // b.none
   14c04:	cmp	w2, #0x2d
   14c08:	b.eq	14c98 <__sanitizer_set_report_fd@@Base+0x1d78>  // b.none
   14c0c:	mov	w4, w2
   14c10:	mov	x5, x0
   14c14:	mov	w8, #0x1                   	// #1
   14c18:	sub	w2, w2, #0x30
   14c1c:	cmp	w2, #0x9
   14c20:	b.hi	14cf4 <__sanitizer_set_report_fd@@Base+0x1dd4>  // b.pmore
   14c24:	mov	x7, #0x9999999999999999    	// #-7378697629483820647
   14c28:	mov	x3, #0x0                   	// #0
   14c2c:	movk	x7, #0x1999, lsl #48
   14c30:	mov	x6, #0xffffffffffffffff    	// #-1
   14c34:	nop
   14c38:	sub	w0, w4, #0x30
   14c3c:	add	x2, x3, x3, lsl #2
   14c40:	cmp	x3, x7
   14c44:	ldrb	w4, [x5, #1]!
   14c48:	sxtw	x0, w0
   14c4c:	lsl	x2, x2, #1
   14c50:	csel	x2, x2, x6, ls  // ls = plast
   14c54:	mvn	x3, x0
   14c58:	cmp	x3, x2
   14c5c:	add	x0, x0, x2
   14c60:	sub	w2, w4, #0x30
   14c64:	csel	x3, x0, x6, cs  // cs = hs, nlast
   14c68:	cmp	w2, #0x9
   14c6c:	b.ls	14c38 <__sanitizer_set_report_fd@@Base+0x1d18>  // b.plast
   14c70:	cbz	x1, 14c78 <__sanitizer_set_report_fd@@Base+0x1d58>
   14c74:	str	x5, [x1]
   14c78:	cmp	w8, #0x1
   14c7c:	b.ne	14cac <__sanitizer_set_report_fd@@Base+0x1d8c>  // b.any
   14c80:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   14c84:	cmp	x3, x0
   14c88:	csel	x0, x3, x0, ls  // ls = plast
   14c8c:	ret
   14c90:	add	x0, x0, #0x1
   14c94:	b	14be0 <__sanitizer_set_report_fd@@Base+0x1cc0>
   14c98:	ldrb	w2, [x0, #1]
   14c9c:	add	x5, x0, #0x1
   14ca0:	mov	w8, #0xffffffff            	// #-1
   14ca4:	mov	w4, w2
   14ca8:	b	14c18 <__sanitizer_set_report_fd@@Base+0x1cf8>
   14cac:	cmp	x3, #0x0
   14cb0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14cb4:	csneg	x0, x0, x3, lt  // lt = tstop
   14cb8:	ret
   14cbc:	ldrb	w2, [x0, #1]
   14cc0:	add	x5, x0, #0x1
   14cc4:	mov	w8, #0x1                   	// #1
   14cc8:	mov	w4, w2
   14ccc:	b	14c18 <__sanitizer_set_report_fd@@Base+0x1cf8>
   14cd0:	str	x30, [sp, #-16]!
   14cd4:	sxtw	x3, w2
   14cd8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14cdc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14ce0:	add	x0, x0, #0xf80
   14ce4:	add	x2, x2, #0xf68
   14ce8:	mov	x4, #0xa                   	// #10
   14cec:	mov	w1, #0xe5                  	// #229
   14cf0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   14cf4:	mov	x5, x0
   14cf8:	mov	x3, #0x0                   	// #0
   14cfc:	cbnz	x1, 14c74 <__sanitizer_set_report_fd@@Base+0x1d54>
   14d00:	mov	x0, #0x0                   	// #0
   14d04:	ret
   14d08:	mov	w2, #0xa                   	// #10
   14d0c:	mov	x1, #0x0                   	// #0
   14d10:	b	14bd8 <__sanitizer_set_report_fd@@Base+0x1cb8>
   14d14:	nop
   14d18:	mov	x4, #0x10000000000         	// #1099511627776
   14d1c:	cmp	x1, x4
   14d20:	b.hi	14da8 <__sanitizer_set_report_fd@@Base+0x1e88>  // b.pmore
   14d24:	add	x5, x0, x1
   14d28:	add	x2, x0, #0x7
   14d2c:	cmp	x0, x5
   14d30:	and	x2, x2, #0xfffffffffffffff8
   14d34:	ccmp	x0, x2, #0x2, cc  // cc = lo, ul, last
   14d38:	and	x4, x5, #0xfffffffffffffff8
   14d3c:	mov	x3, x0
   14d40:	mov	x1, #0x0                   	// #0
   14d44:	b.cs	14d5c <__sanitizer_set_report_fd@@Base+0x1e3c>  // b.hs, b.nlast
   14d48:	ldrb	w6, [x3], #1
   14d4c:	cmp	x2, x3
   14d50:	orr	x1, x1, x6
   14d54:	ccmp	x5, x3, #0x0, hi  // hi = pmore
   14d58:	b.hi	14d48 <__sanitizer_set_report_fd@@Base+0x1e28>  // b.pmore
   14d5c:	cmp	x2, x4
   14d60:	b.cs	14d78 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.hs, b.nlast
   14d64:	nop
   14d68:	ldr	x3, [x2], #8
   14d6c:	orr	x1, x1, x3
   14d70:	cmp	x4, x2
   14d74:	b.hi	14d68 <__sanitizer_set_report_fd@@Base+0x1e48>  // b.pmore
   14d78:	cmp	x0, x4
   14d7c:	b.ls	14d94 <__sanitizer_set_report_fd@@Base+0x1e74>  // b.plast
   14d80:	cmp	x1, #0x0
   14d84:	cset	w0, eq  // eq = none
   14d88:	ret
   14d8c:	ldrb	w0, [x4], #1
   14d90:	orr	x1, x1, x0
   14d94:	cmp	x5, x4
   14d98:	b.hi	14d8c <__sanitizer_set_report_fd@@Base+0x1e6c>  // b.pmore
   14d9c:	cmp	x1, #0x0
   14da0:	cset	w0, eq  // eq = none
   14da4:	ret
   14da8:	str	x30, [sp, #-16]!
   14dac:	mov	x3, x1
   14db0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14db4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14db8:	add	x2, x2, #0xfc0
   14dbc:	add	x0, x0, #0xf80
   14dc0:	mov	w1, #0x104                 	// #260
   14dc4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   14dc8:	mov	x1, #0x4810                	// #18448
   14dcc:	add	x0, x0, x1
   14dd0:	b	159f0 <__sanitizer_set_report_fd@@Base+0x2ad0>
   14dd4:	nop
   14dd8:	stp	x19, x20, [sp, #-48]!
   14ddc:	mov	x20, x0
   14de0:	stp	x21, x22, [sp, #16]
   14de4:	mov	x21, x1
   14de8:	mov	x1, #0x4810                	// #18448
   14dec:	add	x22, x0, x1
   14df0:	str	x30, [sp, #32]
   14df4:	mov	x0, x22
   14df8:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   14dfc:	ldr	x19, [x20, #18536]
   14e00:	cmp	x19, #0x3ff
   14e04:	b.hi	14e48 <__sanitizer_set_report_fd@@Base+0x1f28>  // b.pmore
   14e08:	add	x0, x19, #0x1
   14e0c:	str	x0, [x20, #18536]
   14e10:	mov	x0, x21
   14e14:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   14e18:	mov	x3, x0
   14e1c:	add	x1, x20, x19, lsl #5
   14e20:	mov	x0, x22
   14e24:	add	x2, x1, #0x4, lsl #12
   14e28:	ldp	x21, x22, [sp, #16]
   14e2c:	ldr	x30, [sp, #32]
   14e30:	str	x3, [x1, #18544]
   14e34:	str	xzr, [x1, #18552]
   14e38:	str	xzr, [x1, #18560]
   14e3c:	strb	wzr, [x2, #2184]
   14e40:	ldp	x19, x20, [sp], #48
   14e44:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   14e48:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   14e4c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   14e50:	add	x0, x0, #0xfe0
   14e54:	mov	x2, #0x400                 	// #1024
   14e58:	ldr	x1, [x1, #4024]
   14e5c:	ldr	x1, [x1]
   14e60:	bl	1a328 <OnPrint@@Base+0x398>
   14e64:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   14e68:	stp	x19, x20, [sp, #-160]!
   14e6c:	mov	x3, #0x4810                	// #18448
   14e70:	mov	x20, x0
   14e74:	stp	x21, x22, [sp, #16]
   14e78:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   14e7c:	add	x0, x0, x3
   14e80:	mov	x19, x1
   14e84:	stp	x23, x24, [sp, #32]
   14e88:	stp	x25, x26, [sp, #48]
   14e8c:	str	x30, [sp, #80]
   14e90:	str	x0, [sp, #112]
   14e94:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   14e98:	ldr	x22, [x21, #4016]
   14e9c:	ldr	x0, [x22]
   14ea0:	cbz	x0, 1514c <__sanitizer_set_report_fd@@Base+0x222c>
   14ea4:	sub	x1, x0, #0x1
   14ea8:	tst	x1, x0
   14eac:	b.ne	151ec <__sanitizer_set_report_fd@@Base+0x22cc>  // b.any
   14eb0:	add	x25, x0, #0xfff
   14eb4:	neg	x0, x0
   14eb8:	and	x23, x25, x0
   14ebc:	mov	w2, #0x0                   	// #0
   14ec0:	mov	x0, x23
   14ec4:	adrp	x22, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   14ec8:	add	x1, x22, #0x178
   14ecc:	str	x23, [sp, #120]
   14ed0:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   14ed4:	mov	x24, x0
   14ed8:	mov	x2, #0x0                   	// #0
   14edc:	mov	x1, #0x0                   	// #0
   14ee0:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   14ee4:	mov	x1, #0x0                   	// #0
   14ee8:	mov	x0, #0x0                   	// #0
   14eec:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   14ef0:	cmp	x23, #0xfff
   14ef4:	b.ls	15158 <__sanitizer_set_report_fd@@Base+0x2238>  // b.plast
   14ef8:	mov	x0, x24
   14efc:	mov	x2, #0x1000                	// #4096
   14f00:	mov	w1, #0x0                   	// #0
   14f04:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   14f08:	strb	wzr, [x24]
   14f0c:	cbz	x19, 14f30 <__sanitizer_set_report_fd@@Base+0x2010>
   14f10:	mov	x1, x24
   14f14:	mov	x0, x19
   14f18:	mov	x2, #0xfff                 	// #4095
   14f1c:	bl	15668 <__sanitizer_set_report_fd@@Base+0x2748>
   14f20:	cbz	x0, 14f30 <__sanitizer_set_report_fd@@Base+0x2010>
   14f24:	ldrb	w0, [x24]
   14f28:	cbnz	w0, 151b4 <__sanitizer_set_report_fd@@Base+0x2294>
   14f2c:	nop
   14f30:	add	x0, sp, #0x80
   14f34:	strb	wzr, [sp, #152]
   14f38:	bl	17608 <__sanitizer_set_report_fd@@Base+0x46e8>
   14f3c:	ldr	x0, [x20, #18536]
   14f40:	cbz	x0, 15054 <__sanitizer_set_report_fd@@Base+0x2134>
   14f44:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   14f48:	mov	x0, #0x4870                	// #18544
   14f4c:	adrp	x26, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   14f50:	add	x19, x20, x0
   14f54:	ldr	x22, [x22, #3896]
   14f58:	add	x0, x26, #0x68
   14f5c:	stp	x27, x28, [sp, #64]
   14f60:	stp	x0, xzr, [sp, #96]
   14f64:	ldr	x21, [sp, #144]
   14f68:	ldr	x5, [sp, #128]
   14f6c:	add	x21, x21, x21, lsl #3
   14f70:	add	x21, x5, x21, lsl #3
   14f74:	cmp	x5, x21
   14f78:	b.eq	1523c <__sanitizer_set_report_fd@@Base+0x231c>  // b.none
   14f7c:	mov	x28, x5
   14f80:	mov	w27, #0x0                   	// #0
   14f84:	mov	w23, #0x1                   	// #1
   14f88:	ldr	x26, [x28, #56]
   14f8c:	cbz	x26, 15014 <__sanitizer_set_report_fd@@Base+0x20f4>
   14f90:	ldrb	w25, [x26, #24]
   14f94:	cbz	w25, 150f8 <__sanitizer_set_report_fd@@Base+0x21d8>
   14f98:	ldr	x0, [x19]
   14f9c:	ldr	x1, [x28]
   14fa0:	bl	f5d8 <__sancov_default_options@@Base+0x2e88>
   14fa4:	tst	w0, #0xff
   14fa8:	b.ne	14fc0 <__sanitizer_set_report_fd@@Base+0x20a0>  // b.any
   14fac:	ldr	x0, [x19, #16]
   14fb0:	cbz	x0, 150f8 <__sanitizer_set_report_fd@@Base+0x21d8>
   14fb4:	ldr	x1, [x28]
   14fb8:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   14fbc:	cbnz	w0, 150f8 <__sanitizer_set_report_fd@@Base+0x21d8>
   14fc0:	cbnz	w27, 15350 <__sanitizer_set_report_fd@@Base+0x2430>
   14fc4:	ldrb	w27, [x19, #24]
   14fc8:	cbnz	w27, 150f8 <__sanitizer_set_report_fd@@Base+0x21d8>
   14fcc:	ldr	w0, [x22]
   14fd0:	cbnz	w0, 15104 <__sanitizer_set_report_fd@@Base+0x21e4>
   14fd4:	strb	w23, [x19, #24]
   14fd8:	ldr	x0, [x28]
   14fdc:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   14fe0:	ldr	x3, [x20]
   14fe4:	str	x0, [x19, #8]
   14fe8:	cmp	x3, #0x7f
   14fec:	b.hi	15130 <__sanitizer_set_report_fd@@Base+0x2210>  // b.pmore
   14ff0:	add	x0, x20, x3, lsl #4
   14ff4:	add	x3, x3, #0x1
   14ff8:	ldr	x1, [x26, #8]
   14ffc:	str	x1, [x0, #8]
   15000:	ldr	x1, [x26, #16]
   15004:	str	x1, [x0, #16]
   15008:	dmb	ish
   1500c:	str	x3, [x20]
   15010:	mov	w27, w25
   15014:	add	x28, x28, #0x48
   15018:	cmp	x21, x28
   1501c:	b.ne	14f88 <__sanitizer_set_report_fd@@Base+0x2068>  // b.any
   15020:	ldrb	w0, [x19, #24]
   15024:	eor	w0, w0, #0x1
   15028:	orr	w2, w27, w0
   1502c:	tst	w2, #0xff
   15030:	b.eq	15380 <__sanitizer_set_report_fd@@Base+0x2460>  // b.none
   15034:	ldr	x1, [sp, #104]
   15038:	add	x19, x19, #0x20
   1503c:	ldr	x0, [x20, #18536]
   15040:	add	x1, x1, #0x1
   15044:	str	x1, [sp, #104]
   15048:	cmp	x0, x1
   1504c:	b.hi	14f64 <__sanitizer_set_report_fd@@Base+0x2044>  // b.pmore
   15050:	ldp	x27, x28, [sp, #64]
   15054:	add	x1, x20, #0xc, lsl #12
   15058:	ldr	x0, [sp, #144]
   1505c:	ldrb	w1, [x1, #2160]
   15060:	ldr	x19, [sp, #128]
   15064:	add	x0, x0, x0, lsl #3
   15068:	add	x22, x19, x0, lsl #3
   1506c:	cbz	w1, 150b0 <__sanitizer_set_report_fd@@Base+0x2190>
   15070:	mov	x21, x19
   15074:	cmp	x22, x19
   15078:	b.eq	150cc <__sanitizer_set_report_fd@@Base+0x21ac>  // b.none
   1507c:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   15080:	adrp	x26, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15084:	add	x26, x26, #0x198
   15088:	ldr	x23, [x23, #3896]
   1508c:	ldrb	w0, [x21, #44]
   15090:	cbnz	w0, 15244 <__sanitizer_set_report_fd@@Base+0x2324>
   15094:	add	x21, x21, #0x48
   15098:	cmp	x22, x21
   1509c:	b.ne	1508c <__sanitizer_set_report_fd@@Base+0x216c>  // b.any
   150a0:	ldr	x0, [sp, #144]
   150a4:	ldr	x19, [sp, #128]
   150a8:	add	x0, x0, x0, lsl #3
   150ac:	add	x22, x19, x0, lsl #3
   150b0:	cmp	x19, x22
   150b4:	b.eq	150cc <__sanitizer_set_report_fd@@Base+0x21ac>  // b.none
   150b8:	mov	x0, x19
   150bc:	add	x19, x19, #0x48
   150c0:	bl	f310 <__sancov_default_options@@Base+0x2bc0>
   150c4:	cmp	x22, x19
   150c8:	b.ne	150b8 <__sanitizer_set_report_fd@@Base+0x2198>  // b.any
   150cc:	ldr	x1, [sp, #120]
   150d0:	mov	x0, x24
   150d4:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   150d8:	ldr	x0, [sp, #112]
   150dc:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   150e0:	ldp	x21, x22, [sp, #16]
   150e4:	ldp	x23, x24, [sp, #32]
   150e8:	ldp	x25, x26, [sp, #48]
   150ec:	ldr	x30, [sp, #80]
   150f0:	ldp	x19, x20, [sp], #160
   150f4:	ret
   150f8:	ldr	x26, [x26]
   150fc:	cbnz	x26, 14f90 <__sanitizer_set_report_fd@@Base+0x2070>
   15100:	b	15014 <__sanitizer_set_report_fd@@Base+0x20f4>
   15104:	ldr	x1, [x19]
   15108:	ldr	x2, [x28]
   1510c:	ldr	x0, [sp, #96]
   15110:	bl	1a328 <OnPrint@@Base+0x398>
   15114:	strb	w23, [x19, #24]
   15118:	ldr	x0, [x28]
   1511c:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   15120:	ldr	x3, [x20]
   15124:	str	x0, [x19, #8]
   15128:	cmp	x3, #0x7f
   1512c:	b.ls	14ff0 <__sanitizer_set_report_fd@@Base+0x20d0>  // b.plast
   15130:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15134:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15138:	add	x2, x2, #0xa8
   1513c:	add	x0, x0, #0xf8
   15140:	mov	x4, #0x80                  	// #128
   15144:	mov	w1, #0x52                  	// #82
   15148:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1514c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   15150:	str	x0, [x22]
   15154:	b	14ea4 <__sanitizer_set_report_fd@@Base+0x1f84>
   15158:	ldr	x21, [x21, #4016]
   1515c:	ldr	x0, [x21]
   15160:	cbz	x0, 15230 <__sanitizer_set_report_fd@@Base+0x2310>
   15164:	sub	x1, x0, #0x1
   15168:	tst	x1, x0
   1516c:	b.ne	151ec <__sanitizer_set_report_fd@@Base+0x22cc>  // b.any
   15170:	add	x21, x0, #0xfff
   15174:	neg	x0, x0
   15178:	and	x21, x21, x0
   1517c:	add	x1, x22, #0x178
   15180:	mov	x0, x21
   15184:	mov	w2, #0x0                   	// #0
   15188:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1518c:	mov	x22, x0
   15190:	mov	x1, x24
   15194:	mov	x2, #0x0                   	// #0
   15198:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1519c:	ldr	x1, [sp, #120]
   151a0:	mov	x0, x24
   151a4:	mov	x24, x22
   151a8:	str	x21, [sp, #120]
   151ac:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   151b0:	b	14ef8 <__sanitizer_set_report_fd@@Base+0x1fd8>
   151b4:	ldr	x1, [x20, #18536]
   151b8:	cbz	x1, 14f30 <__sanitizer_set_report_fd@@Base+0x2010>
   151bc:	mov	x2, #0x4870                	// #18544
   151c0:	add	x21, x20, x2
   151c4:	mov	x22, #0x0                   	// #0
   151c8:	ldrb	w0, [x21, #24]
   151cc:	cbnz	w0, 151d8 <__sanitizer_set_report_fd@@Base+0x22b8>
   151d0:	ldr	x0, [x21, #16]
   151d4:	cbz	x0, 15200 <__sanitizer_set_report_fd@@Base+0x22e0>
   151d8:	add	x22, x22, #0x1
   151dc:	add	x21, x21, #0x20
   151e0:	cmp	x1, x22
   151e4:	b.hi	151c8 <__sanitizer_set_report_fd@@Base+0x22a8>  // b.pmore
   151e8:	b	14f30 <__sanitizer_set_report_fd@@Base+0x2010>
   151ec:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   151f0:	add	x0, x0, #0x160
   151f4:	stp	x27, x28, [sp, #64]
   151f8:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   151fc:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   15200:	ldr	x0, [x21]
   15204:	mov	x1, x19
   15208:	bl	f5d8 <__sancov_default_options@@Base+0x2e88>
   1520c:	tst	w0, #0xff
   15210:	b.ne	1521c <__sanitizer_set_report_fd@@Base+0x22fc>  // b.any
   15214:	ldr	x1, [x20, #18536]
   15218:	b	151d8 <__sanitizer_set_report_fd@@Base+0x22b8>
   1521c:	mov	x0, x24
   15220:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   15224:	str	x0, [x21, #16]
   15228:	ldr	x1, [x20, #18536]
   1522c:	b	151d8 <__sanitizer_set_report_fd@@Base+0x22b8>
   15230:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   15234:	str	x0, [x21]
   15238:	b	15164 <__sanitizer_set_report_fd@@Base+0x2244>
   1523c:	mov	w27, #0x0                   	// #0
   15240:	b	15020 <__sanitizer_set_report_fd@@Base+0x2100>
   15244:	ldr	x19, [x21, #56]
   15248:	cbz	x19, 15094 <__sanitizer_set_report_fd@@Base+0x2174>
   1524c:	ldrb	w1, [x19, #24]
   15250:	cbz	w1, 152fc <__sanitizer_set_report_fd@@Base+0x23dc>
   15254:	ldr	x4, [x19, #8]
   15258:	ldr	x6, [x20, #2056]
   1525c:	dmb	ish
   15260:	add	x5, x20, #0x810
   15264:	mov	x2, #0x0                   	// #0
   15268:	mov	x1, x5
   1526c:	cbz	x6, 152c8 <__sanitizer_set_report_fd@@Base+0x23a8>
   15270:	ldr	x3, [x1]
   15274:	cmp	x4, x3
   15278:	b.cc	15308 <__sanitizer_set_report_fd@@Base+0x23e8>  // b.lo, b.ul, b.last
   1527c:	ldr	x3, [x1, #8]
   15280:	cmp	x4, x3
   15284:	b.cs	15308 <__sanitizer_set_report_fd@@Base+0x23e8>  // b.hs, b.nlast
   15288:	ldr	x2, [x19, #16]
   1528c:	sub	x2, x2, #0x1
   15290:	ldr	x0, [x20, #2056]
   15294:	dmb	ish
   15298:	cbz	x0, 152c8 <__sanitizer_set_report_fd@@Base+0x23a8>
   1529c:	mov	x1, #0x0                   	// #0
   152a0:	ldr	x3, [x5]
   152a4:	cmp	x2, x3
   152a8:	b.cc	152b8 <__sanitizer_set_report_fd@@Base+0x2398>  // b.lo, b.ul, b.last
   152ac:	ldr	x3, [x5, #8]
   152b0:	cmp	x2, x3
   152b4:	b.cc	152fc <__sanitizer_set_report_fd@@Base+0x23dc>  // b.lo, b.ul, b.last
   152b8:	add	x1, x1, #0x1
   152bc:	add	x5, x5, #0x10
   152c0:	cmp	x1, x0
   152c4:	b.ne	152a0 <__sanitizer_set_report_fd@@Base+0x2380>  // b.any
   152c8:	ldr	w0, [x23]
   152cc:	cbnz	w0, 1531c <__sanitizer_set_report_fd@@Base+0x23fc>
   152d0:	ldr	x3, [x20, #2056]
   152d4:	cmp	x3, #0x3ff
   152d8:	b.hi	15330 <__sanitizer_set_report_fd@@Base+0x2410>  // b.pmore
   152dc:	add	x1, x20, x3, lsl #4
   152e0:	add	x3, x3, #0x1
   152e4:	ldr	x0, [x19, #8]
   152e8:	str	x0, [x1, #2064]
   152ec:	ldr	x0, [x19, #16]
   152f0:	str	x0, [x1, #2072]
   152f4:	dmb	ish
   152f8:	str	x3, [x20, #2056]
   152fc:	ldr	x19, [x19]
   15300:	cbnz	x19, 1524c <__sanitizer_set_report_fd@@Base+0x232c>
   15304:	b	15094 <__sanitizer_set_report_fd@@Base+0x2174>
   15308:	add	x2, x2, #0x1
   1530c:	add	x1, x1, #0x10
   15310:	cmp	x2, x6
   15314:	b.ne	15270 <__sanitizer_set_report_fd@@Base+0x2350>  // b.any
   15318:	b	152c8 <__sanitizer_set_report_fd@@Base+0x23a8>
   1531c:	ldp	x1, x2, [x19, #8]
   15320:	mov	x0, x26
   15324:	ldr	x3, [x21]
   15328:	bl	1a328 <OnPrint@@Base+0x398>
   1532c:	b	152d0 <__sanitizer_set_report_fd@@Base+0x23b0>
   15330:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15334:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15338:	add	x2, x2, #0x1d0
   1533c:	add	x0, x0, #0xf8
   15340:	mov	x4, #0x400                 	// #1024
   15344:	mov	w1, #0x6f                  	// #111
   15348:	stp	x27, x28, [sp, #64]
   1534c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15350:	ldr	x0, [sp, #104]
   15354:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   15358:	ldr	x4, [x28]
   1535c:	ldr	x1, [x1, #4024]
   15360:	add	x20, x20, x0, lsl #5
   15364:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15368:	add	x0, x0, #0x10
   1536c:	ldr	x1, [x1]
   15370:	ldr	x2, [x20, #18544]
   15374:	ldr	x3, [x20, #18552]
   15378:	bl	1a328 <OnPrint@@Base+0x398>
   1537c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   15380:	ldr	x0, [sp, #104]
   15384:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   15388:	ldr	x1, [x1, #4024]
   1538c:	add	x20, x20, x0, lsl #5
   15390:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15394:	add	x0, x0, #0x140
   15398:	ldr	x1, [x1]
   1539c:	ldr	x3, [x20, #18544]
   153a0:	ldr	x2, [x20, #18552]
   153a4:	bl	1a328 <OnPrint@@Base+0x398>
   153a8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   153ac:	nop
   153b0:	mov	x1, #0x0                   	// #0
   153b4:	b	14e68 <__sanitizer_set_report_fd@@Base+0x1f48>
   153b8:	stp	x19, x20, [sp, #-64]!
   153bc:	mov	x19, x1
   153c0:	mov	x20, x0
   153c4:	mov	w2, #0x0                   	// #0
   153c8:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   153cc:	mov	x0, #0x3e80                	// #16000
   153d0:	add	x1, x1, #0x230
   153d4:	str	x30, [sp, #16]
   153d8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   153dc:	str	x0, [x19]
   153e0:	add	x3, sp, #0x38
   153e4:	add	x2, sp, #0x30
   153e8:	add	x1, sp, #0x28
   153ec:	mov	x0, x20
   153f0:	mov	x5, #0x0                   	// #0
   153f4:	mov	x4, #0x100000              	// #1048576
   153f8:	bl	127a0 <__sanitizer_cov_dump@@Base+0x2190>
   153fc:	tst	w0, #0xff
   15400:	b.eq	154a0 <__sanitizer_set_report_fd@@Base+0x2580>  // b.none
   15404:	ldr	x4, [x19]
   15408:	mov	x0, #0x1                   	// #1
   1540c:	ldr	x1, [sp, #40]
   15410:	mov	w2, w0
   15414:	str	x1, [x4]
   15418:	ldr	x1, [sp, #40]
   1541c:	nop
   15420:	ldrb	w3, [x1, x0]
   15424:	add	x0, x0, #0x1
   15428:	cbnz	w3, 15420 <__sanitizer_set_report_fd@@Base+0x2500>
   1542c:	add	x5, x1, x0
   15430:	ldrb	w1, [x1, x0]
   15434:	sxtw	x3, w2
   15438:	add	x6, x4, w2, sxtw #3
   1543c:	cbz	w1, 15474 <__sanitizer_set_report_fd@@Base+0x2554>
   15440:	str	x5, [x4, x3, lsl #3]
   15444:	cmp	w2, #0x7cf
   15448:	b.gt	15484 <__sanitizer_set_report_fd@@Base+0x2564>
   1544c:	ldr	x1, [sp, #40]
   15450:	add	w2, w2, #0x1
   15454:	ldrb	w3, [x1, x0]
   15458:	add	x0, x0, #0x1
   1545c:	cbnz	w3, 15420 <__sanitizer_set_report_fd@@Base+0x2500>
   15460:	add	x5, x1, x0
   15464:	ldrb	w1, [x1, x0]
   15468:	sxtw	x3, w2
   1546c:	add	x6, x4, w2, sxtw #3
   15470:	cbnz	w1, 15440 <__sanitizer_set_report_fd@@Base+0x2520>
   15474:	str	xzr, [x6]
   15478:	ldr	x30, [sp, #16]
   1547c:	ldp	x19, x20, [sp], #64
   15480:	ret
   15484:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15488:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1548c:	add	x2, x2, #0x248
   15490:	add	x0, x0, #0x268
   15494:	mov	x4, #0x7cf                 	// #1999
   15498:	mov	w1, #0x23f                 	// #575
   1549c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   154a0:	ldr	x0, [x19]
   154a4:	ldr	x30, [sp, #16]
   154a8:	str	xzr, [x0]
   154ac:	ldp	x19, x20, [sp], #64
   154b0:	ret
   154b4:	nop
   154b8:	mov	x2, x0
   154bc:	mov	w0, #0x0                   	// #0
   154c0:	cmn	x2, #0x1, lsl #12
   154c4:	b.hi	154cc <__sanitizer_set_report_fd@@Base+0x25ac>  // b.pmore
   154c8:	ret
   154cc:	mov	w0, #0x1                   	// #1
   154d0:	cbz	x1, 154c8 <__sanitizer_set_report_fd@@Base+0x25a8>
   154d4:	neg	w2, w2
   154d8:	str	w2, [x1]
   154dc:	ret
   154e0:	mov	x8, #0xde                  	// #222
   154e4:	sxtw	x2, w2
   154e8:	sxtw	x3, w3
   154ec:	sxtw	x4, w4
   154f0:	svc	#0x0
   154f4:	ret
   154f8:	mov	x8, #0xd7                  	// #215
   154fc:	svc	#0x0
   15500:	ret
   15504:	nop
   15508:	mov	x8, #0xe2                  	// #226
   1550c:	sxtw	x2, w2
   15510:	svc	#0x0
   15514:	ret
   15518:	mov	x8, #0x39                  	// #57
   1551c:	sxtw	x0, w0
   15520:	svc	#0x0
   15524:	ret
   15528:	sxtw	x2, w1
   1552c:	mov	x8, #0x38                  	// #56
   15530:	mov	x1, x0
   15534:	mov	x0, #0xffffffffffffff9c    	// #-100
   15538:	svc	#0x0
   1553c:	ret
   15540:	mov	w4, w1
   15544:	mov	w3, w2
   15548:	mov	x1, x0
   1554c:	mov	x8, #0x38                  	// #56
   15550:	sxtw	x2, w4
   15554:	mov	x0, #0xffffffffffffff9c    	// #-100
   15558:	svc	#0x0
   1555c:	ret
   15560:	sxtw	x3, w0
   15564:	mov	x0, x3
   15568:	mov	x8, #0x3f                  	// #63
   1556c:	svc	#0x0
   15570:	cmn	x0, #0x1, lsl #12
   15574:	b.hi	1557c <__sanitizer_set_report_fd@@Base+0x265c>  // b.pmore
   15578:	ret
   1557c:	cmn	w0, #0x4
   15580:	b.eq	15564 <__sanitizer_set_report_fd@@Base+0x2644>  // b.none
   15584:	ret
   15588:	sxtw	x3, w0
   1558c:	mov	x0, x3
   15590:	mov	x8, #0x40                  	// #64
   15594:	svc	#0x0
   15598:	cmn	x0, #0x1, lsl #12
   1559c:	b.hi	155a4 <__sanitizer_set_report_fd@@Base+0x2684>  // b.pmore
   155a0:	ret
   155a4:	cmn	w0, #0x4
   155a8:	b.eq	1558c <__sanitizer_set_report_fd@@Base+0x266c>  // b.none
   155ac:	ret
   155b0:	sxtw	x2, w0
   155b4:	mov	x0, x2
   155b8:	mov	x8, #0x2e                  	// #46
   155bc:	svc	#0x0
   155c0:	cmn	x0, #0x1, lsl #12
   155c4:	b.hi	155cc <__sanitizer_set_report_fd@@Base+0x26ac>  // b.pmore
   155c8:	ret
   155cc:	cmn	w0, #0x4
   155d0:	b.eq	155b4 <__sanitizer_set_report_fd@@Base+0x2694>  // b.none
   155d4:	ret
   155d8:	mov	x2, x1
   155dc:	mov	x8, #0x4f                  	// #79
   155e0:	mov	x1, x0
   155e4:	mov	x3, #0x0                   	// #0
   155e8:	mov	x0, #0xffffffffffffff9c    	// #-100
   155ec:	svc	#0x0
   155f0:	ret
   155f4:	nop
   155f8:	mov	x2, x1
   155fc:	mov	x8, #0x4f                  	// #79
   15600:	mov	x1, x0
   15604:	mov	x3, #0x100                 	// #256
   15608:	mov	x0, #0xffffffffffffff9c    	// #-100
   1560c:	svc	#0x0
   15610:	ret
   15614:	nop
   15618:	mov	x8, #0x50                  	// #80
   1561c:	sxtw	x0, w0
   15620:	svc	#0x0
   15624:	ret
   15628:	sub	sp, sp, #0x80
   1562c:	mov	x8, #0x50                  	// #80
   15630:	mov	x1, sp
   15634:	sxtw	x0, w0
   15638:	svc	#0x0
   1563c:	ldr	x1, [sp, #48]
   15640:	cmp	x0, #0x0
   15644:	add	sp, sp, #0x80
   15648:	csinv	x0, x1, xzr, eq  // eq = none
   1564c:	ret
   15650:	mov	x8, #0x18                  	// #24
   15654:	mov	x2, #0x0                   	// #0
   15658:	sxtw	x0, w0
   1565c:	sxtw	x1, w1
   15660:	svc	#0x0
   15664:	ret
   15668:	mov	x4, x1
   1566c:	mov	x3, x2
   15670:	mov	x1, x0
   15674:	mov	x2, x4
   15678:	mov	x8, #0x4e                  	// #78
   1567c:	mov	x0, #0xffffffffffffff9c    	// #-100
   15680:	svc	#0x0
   15684:	ret
   15688:	mov	x1, x0
   1568c:	mov	x8, #0x23                  	// #35
   15690:	mov	x0, #0xffffffffffffff9c    	// #-100
   15694:	mov	x2, #0x0                   	// #0
   15698:	svc	#0x0
   1569c:	ret
   156a0:	mov	x3, x1
   156a4:	mov	x8, #0x26                  	// #38
   156a8:	mov	x1, x0
   156ac:	mov	x0, #0xffffffffffffff9c    	// #-100
   156b0:	mov	x2, x0
   156b4:	svc	#0x0
   156b8:	ret
   156bc:	nop
   156c0:	mov	x8, #0x7c                  	// #124
   156c4:	svc	#0x0
   156c8:	ret
   156cc:	nop
   156d0:	sxtw	x0, w0
   156d4:	mov	x8, #0x5e                  	// #94
   156d8:	str	x30, [sp, #-16]!
   156dc:	svc	#0x0
   156e0:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   156e4:	nop
   156e8:	sub	sp, sp, #0x10
   156ec:	mov	x2, #0x1                   	// #1
   156f0:	mov	x0, sp
   156f4:	mov	x8, #0x65                  	// #101
   156f8:	mov	x1, x0
   156fc:	stp	x2, xzr, [sp]
   15700:	svc	#0x0
   15704:	ldr	w1, [sp]
   15708:	cmp	w0, #0x0
   1570c:	mov	w0, #0x0                   	// #0
   15710:	add	sp, sp, #0x10
   15714:	csel	w0, w1, w0, ne  // ne = any
   15718:	ret
   1571c:	nop
   15720:	mov	x8, #0xdd                  	// #221
   15724:	svc	#0x0
   15728:	ret
   1572c:	nop
   15730:	sub	sp, sp, #0x80
   15734:	mov	x1, x0
   15738:	mov	x2, sp
   1573c:	mov	x8, #0x4f                  	// #79
   15740:	mov	x0, #0xffffffffffffff9c    	// #-100
   15744:	mov	x3, #0x0                   	// #0
   15748:	svc	#0x0
   1574c:	cbnz	x0, 15768 <__sanitizer_set_report_fd@@Base+0x2848>
   15750:	ldr	w0, [sp, #16]
   15754:	add	sp, sp, #0x80
   15758:	and	w0, w0, #0xf000
   1575c:	cmp	w0, #0x8, lsl #12
   15760:	cset	w0, eq  // eq = none
   15764:	ret
   15768:	mov	w0, #0x0                   	// #0
   1576c:	add	sp, sp, #0x80
   15770:	ret
   15774:	nop
   15778:	mov	x8, #0xb2                  	// #178
   1577c:	svc	#0x0
   15780:	ret
   15784:	nop
   15788:	mov	x8, #0x83                  	// #131
   1578c:	sxtw	x0, w0
   15790:	sxtw	x2, w2
   15794:	svc	#0x0
   15798:	ret
   1579c:	nop
   157a0:	stp	x19, x30, [sp, #-32]!
   157a4:	mov	x2, #0x10                  	// #16
   157a8:	mov	w1, #0x0                   	// #0
   157ac:	add	x19, sp, #0x10
   157b0:	mov	x0, x19
   157b4:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   157b8:	mov	x0, x19
   157bc:	mov	x8, #0xa9                  	// #169
   157c0:	mov	x1, #0x0                   	// #0
   157c4:	svc	#0x0
   157c8:	ldp	x3, x2, [sp, #16]
   157cc:	mov	x0, #0xca00                	// #51712
   157d0:	movk	x0, #0x3b9a, lsl #16
   157d4:	ldp	x19, x30, [sp], #32
   157d8:	lsl	x1, x2, #5
   157dc:	sub	x1, x1, x2
   157e0:	add	x1, x2, x1, lsl #2
   157e4:	lsl	x1, x1, #3
   157e8:	madd	x0, x3, x0, x1
   157ec:	ret
   157f0:	mov	x8, #0x71                  	// #113
   157f4:	sxtw	x0, w0
   157f8:	svc	#0x0
   157fc:	ret
   15800:	stp	x19, x20, [sp, #-64]!
   15804:	stp	x21, x22, [sp, #16]
   15808:	adrp	x21, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1580c:	add	x19, x21, #0xdf8
   15810:	stp	x23, x30, [sp, #32]
   15814:	mov	x23, x0
   15818:	ldrb	w0, [x21, #3576]
   1581c:	cbz	w0, 158b8 <__sanitizer_set_report_fd@@Base+0x2998>
   15820:	ldr	x0, [x19, #8]
   15824:	cbz	x0, 158a4 <__sanitizer_set_report_fd@@Base+0x2984>
   15828:	add	x21, x21, #0xdf8
   1582c:	ldr	x0, [x21, #16]
   15830:	cbz	x0, 158a4 <__sanitizer_set_report_fd@@Base+0x2984>
   15834:	mov	x0, x23
   15838:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1583c:	ldr	x20, [x21, #8]
   15840:	mov	x22, x0
   15844:	ldrb	w0, [x20]
   15848:	cbz	w0, 158a4 <__sanitizer_set_report_fd@@Base+0x2984>
   1584c:	mov	x2, x20
   15850:	b	15880 <__sanitizer_set_report_fd@@Base+0x2960>
   15854:	mov	x1, x23
   15858:	mov	x0, x20
   1585c:	bl	145c8 <__sanitizer_set_report_fd@@Base+0x16a8>
   15860:	cbnz	w0, 15870 <__sanitizer_set_report_fd@@Base+0x2950>
   15864:	ldrb	w0, [x20, x22]
   15868:	cmp	w0, #0x3d
   1586c:	b.eq	158f0 <__sanitizer_set_report_fd@@Base+0x29d0>  // b.none
   15870:	ldrb	w0, [x19, #1]
   15874:	add	x20, x19, #0x1
   15878:	cbz	w0, 158a4 <__sanitizer_set_report_fd@@Base+0x2984>
   1587c:	ldr	x2, [x21, #8]
   15880:	sub	x2, x20, x2
   15884:	ldr	x3, [x21, #16]
   15888:	mov	x0, x20
   1588c:	mov	w1, #0x0                   	// #0
   15890:	sub	x2, x3, x2
   15894:	bl	14560 <__sanitizer_set_report_fd@@Base+0x1640>
   15898:	mov	x19, x0
   1589c:	mov	x2, x22
   158a0:	cbnz	x0, 15854 <__sanitizer_set_report_fd@@Base+0x2934>
   158a4:	mov	x0, #0x0                   	// #0
   158a8:	ldp	x21, x22, [sp, #16]
   158ac:	ldp	x23, x30, [sp, #32]
   158b0:	ldp	x19, x20, [sp], #64
   158b4:	ret
   158b8:	mov	w1, #0x1                   	// #1
   158bc:	add	x3, x19, #0x10
   158c0:	strb	w1, [x21, #3576]
   158c4:	add	x2, sp, #0x38
   158c8:	add	x1, x19, #0x8
   158cc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   158d0:	mov	x5, #0x0                   	// #0
   158d4:	add	x0, x0, #0x2a8
   158d8:	mov	x4, #0x4000000             	// #67108864
   158dc:	bl	127a0 <__sanitizer_cov_dump@@Base+0x2190>
   158e0:	tst	w0, #0xff
   158e4:	b.ne	15820 <__sanitizer_set_report_fd@@Base+0x2900>  // b.any
   158e8:	str	xzr, [x19, #8]
   158ec:	b	158a4 <__sanitizer_set_report_fd@@Base+0x2984>
   158f0:	add	x0, x22, #0x1
   158f4:	add	x0, x20, x0
   158f8:	ldp	x21, x22, [sp, #16]
   158fc:	ldp	x23, x30, [sp, #32]
   15900:	ldp	x19, x20, [sp], #64
   15904:	ret
   15908:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1590c:	ldr	x0, [x0, #4048]
   15910:	cbz	x0, 15920 <__sanitizer_set_report_fd@@Base+0x2a00>
   15914:	ldr	x0, [x0]
   15918:	add	x0, x0, #0x8
   1591c:	ret
   15920:	str	x30, [sp, #-32]!
   15924:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15928:	add	x0, x0, #0x2c0
   1592c:	add	x1, sp, #0x10
   15930:	bl	153b8 <__sanitizer_set_report_fd@@Base+0x2498>
   15934:	add	x1, sp, #0x18
   15938:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1593c:	add	x0, x0, #0x2a8
   15940:	bl	153b8 <__sanitizer_set_report_fd@@Base+0x2498>
   15944:	ldr	x0, [sp, #16]
   15948:	ldr	x30, [sp], #32
   1594c:	ret
   15950:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   15954:	str	x30, [sp, #-32]!
   15958:	ldr	x0, [x0, #4048]
   1595c:	cbz	x0, 159c4 <__sanitizer_set_report_fd@@Base+0x2aa4>
   15960:	ldr	x0, [x0]
   15964:	mov	x1, x0
   15968:	ldr	x2, [x1], #8
   1596c:	add	x2, x0, w2, sxtw #3
   15970:	add	x2, x2, #0x10
   15974:	stp	x1, x2, [sp, #16]
   15978:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1597c:	mov	x8, #0xdd                  	// #221
   15980:	add	x0, x0, #0x2d8
   15984:	svc	#0x0
   15988:	cmn	x0, #0x1, lsl #12
   1598c:	b.hi	159b0 <__sanitizer_set_report_fd@@Base+0x2a90>  // b.pmore
   15990:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15994:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15998:	add	x2, x2, #0x2e8
   1599c:	add	x0, x0, #0x268
   159a0:	mov	x4, #0x1                   	// #1
   159a4:	mov	x3, #0x0                   	// #0
   159a8:	mov	w1, #0x286                 	// #646
   159ac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   159b0:	neg	w1, w0
   159b4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   159b8:	add	x0, x0, #0x318
   159bc:	bl	1a2a0 <OnPrint@@Base+0x310>
   159c0:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   159c4:	add	x1, sp, #0x10
   159c8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   159cc:	add	x0, x0, #0x2c0
   159d0:	bl	153b8 <__sanitizer_set_report_fd@@Base+0x2498>
   159d4:	add	x1, sp, #0x18
   159d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   159dc:	add	x0, x0, #0x2a8
   159e0:	bl	153b8 <__sanitizer_set_report_fd@@Base+0x2498>
   159e4:	ldp	x1, x2, [sp, #16]
   159e8:	b	15978 <__sanitizer_set_report_fd@@Base+0x2a58>
   159ec:	nop
   159f0:	mov	x2, #0x58                  	// #88
   159f4:	mov	w1, #0x0                   	// #0
   159f8:	b	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   159fc:	nop
   15a00:	ldr	x3, [x0, #80]
   15a04:	mov	x6, x0
   15a08:	mov	w1, #0x1                   	// #1
   15a0c:	cbnz	x3, 15a74 <__sanitizer_set_report_fd@@Base+0x2b54>
   15a10:	ldxr	w0, [x6]
   15a14:	stxr	w2, w1, [x6]
   15a18:	cbnz	w2, 15a10 <__sanitizer_set_report_fd@@Base+0x2af0>
   15a1c:	dmb	ish
   15a20:	cbz	w0, 15a70 <__sanitizer_set_report_fd@@Base+0x2b50>
   15a24:	mov	w7, #0x2                   	// #2
   15a28:	ldxr	w0, [x6]
   15a2c:	stxr	w1, w7, [x6]
   15a30:	cbnz	w1, 15a28 <__sanitizer_set_report_fd@@Base+0x2b08>
   15a34:	dmb	ish
   15a38:	cbz	w0, 15a70 <__sanitizer_set_report_fd@@Base+0x2b50>
   15a3c:	mov	x0, x6
   15a40:	mov	x8, #0x62                  	// #98
   15a44:	mov	x1, #0x80                  	// #128
   15a48:	mov	x2, #0x2                   	// #2
   15a4c:	mov	x3, #0x0                   	// #0
   15a50:	mov	x4, #0x0                   	// #0
   15a54:	mov	x5, #0x0                   	// #0
   15a58:	svc	#0x0
   15a5c:	ldxr	w0, [x6]
   15a60:	stxr	w1, w7, [x6]
   15a64:	cbnz	w1, 15a28 <__sanitizer_set_report_fd@@Base+0x2b08>
   15a68:	dmb	ish
   15a6c:	cbnz	w0, 15a3c <__sanitizer_set_report_fd@@Base+0x2b1c>
   15a70:	ret
   15a74:	str	x30, [sp, #-16]!
   15a78:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15a7c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15a80:	add	x2, x2, #0x338
   15a84:	add	x0, x0, #0x268
   15a88:	mov	x4, #0x0                   	// #0
   15a8c:	mov	w1, #0x298                 	// #664
   15a90:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15a94:	nop
   15a98:	dmb	ish
   15a9c:	mov	x1, x0
   15aa0:	ldxr	w2, [x1]
   15aa4:	stxr	w3, wzr, [x1]
   15aa8:	cbnz	w3, 15aa0 <__sanitizer_set_report_fd@@Base+0x2b80>
   15aac:	dmb	ish
   15ab0:	cbz	w2, 15ae0 <__sanitizer_set_report_fd@@Base+0x2bc0>
   15ab4:	cmp	w2, #0x2
   15ab8:	b.eq	15ac0 <__sanitizer_set_report_fd@@Base+0x2ba0>  // b.none
   15abc:	ret
   15ac0:	mov	x8, #0x62                  	// #98
   15ac4:	mov	x1, #0x81                  	// #129
   15ac8:	mov	x2, #0x1                   	// #1
   15acc:	mov	x3, #0x0                   	// #0
   15ad0:	mov	x4, #0x0                   	// #0
   15ad4:	mov	x5, #0x0                   	// #0
   15ad8:	svc	#0x0
   15adc:	ret
   15ae0:	str	x30, [sp, #-16]!
   15ae4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15ae8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15aec:	add	x2, x2, #0x350
   15af0:	add	x0, x0, #0x268
   15af4:	mov	x4, #0x0                   	// #0
   15af8:	mov	x3, #0x0                   	// #0
   15afc:	mov	w1, #0x2ab                 	// #683
   15b00:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15b04:	nop
   15b08:	ldr	w0, [x0]
   15b0c:	cbz	w0, 15b14 <__sanitizer_set_report_fd@@Base+0x2bf4>
   15b10:	ret
   15b14:	str	x30, [sp, #-16]!
   15b18:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15b1c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15b20:	add	x2, x2, #0x370
   15b24:	add	x0, x0, #0x268
   15b28:	mov	x4, #0x0                   	// #0
   15b2c:	mov	x3, #0x0                   	// #0
   15b30:	mov	w1, #0x2b9                 	// #697
   15b34:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15b38:	mov	x8, #0x75                  	// #117
   15b3c:	sxtw	x0, w0
   15b40:	sxtw	x1, w1
   15b44:	svc	#0x0
   15b48:	ret
   15b4c:	nop
   15b50:	mov	x8, #0x104                 	// #260
   15b54:	mov	x3, #0x0                   	// #0
   15b58:	sxtw	x0, w0
   15b5c:	sxtw	x2, w2
   15b60:	svc	#0x0
   15b64:	ret
   15b68:	mov	x8, #0xac                  	// #172
   15b6c:	svc	#0x0
   15b70:	ret
   15b74:	nop
   15b78:	mov	x8, #0xad                  	// #173
   15b7c:	svc	#0x0
   15b80:	ret
   15b84:	nop
   15b88:	mov	w2, w2
   15b8c:	mov	x8, #0x3d                  	// #61
   15b90:	sxtw	x0, w0
   15b94:	svc	#0x0
   15b98:	ret
   15b9c:	nop
   15ba0:	mov	x8, #0x3e                  	// #62
   15ba4:	sxtw	x0, w0
   15ba8:	sxtw	x2, w2
   15bac:	svc	#0x0
   15bb0:	ret
   15bb4:	nop
   15bb8:	mov	x8, #0xa7                  	// #167
   15bbc:	sxtw	x0, w0
   15bc0:	svc	#0x0
   15bc4:	ret
   15bc8:	mov	x8, #0x84                  	// #132
   15bcc:	svc	#0x0
   15bd0:	ret
   15bd4:	nop
   15bd8:	mov	x8, #0xdc                  	// #220
   15bdc:	mov	x0, #0x11                  	// #17
   15be0:	mov	x1, #0x0                   	// #0
   15be4:	svc	#0x0
   15be8:	ret
   15bec:	nop
   15bf0:	stp	x19, x20, [sp, #-112]!
   15bf4:	sxtw	x20, w0
   15bf8:	mov	x19, x1
   15bfc:	stp	x23, x30, [sp, #32]
   15c00:	add	x23, sp, #0x30
   15c04:	mov	w1, #0x0                   	// #0
   15c08:	mov	x0, x23
   15c0c:	stp	x21, x22, [sp, #16]
   15c10:	mov	x21, x2
   15c14:	add	x22, sp, #0x50
   15c18:	mov	x2, #0x20                  	// #32
   15c1c:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   15c20:	mov	w1, #0x0                   	// #0
   15c24:	mov	x0, x22
   15c28:	mov	x2, #0x20                  	// #32
   15c2c:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   15c30:	mov	x1, #0x0                   	// #0
   15c34:	cbz	x19, 15c68 <__sanitizer_set_report_fd@@Base+0x2d48>
   15c38:	mov	x1, x19
   15c3c:	mov	x2, #0x8                   	// #8
   15c40:	add	x0, x23, #0x18
   15c44:	ldr	x3, [x1], #8
   15c48:	str	x3, [sp, #48]
   15c4c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   15c50:	ldr	w0, [x19, #136]
   15c54:	mov	x1, x23
   15c58:	ldr	x2, [x19, #144]
   15c5c:	orr	w0, w0, #0x4000000
   15c60:	sxtw	x0, w0
   15c64:	stp	x0, x2, [sp, #56]
   15c68:	cmp	x21, #0x0
   15c6c:	mov	x0, x20
   15c70:	csel	x2, x22, xzr, ne  // ne = any
   15c74:	mov	x8, #0x86                  	// #134
   15c78:	mov	x3, #0x8                   	// #8
   15c7c:	svc	#0x0
   15c80:	cmp	x0, #0x0
   15c84:	mov	x19, x0
   15c88:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   15c8c:	b.ne	15ca4 <__sanitizer_set_report_fd@@Base+0x2d84>  // b.any
   15c90:	mov	w0, w19
   15c94:	ldp	x21, x22, [sp, #16]
   15c98:	ldp	x23, x30, [sp, #32]
   15c9c:	ldp	x19, x20, [sp], #112
   15ca0:	ret
   15ca4:	mov	x0, x21
   15ca8:	mov	x2, x3
   15cac:	ldr	x3, [sp, #80]
   15cb0:	add	x1, x22, #0x18
   15cb4:	str	x3, [x0], #8
   15cb8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   15cbc:	ldr	x0, [sp, #88]
   15cc0:	str	w0, [x21, #136]
   15cc4:	ldr	x0, [sp, #96]
   15cc8:	str	x0, [x21, #144]
   15ccc:	mov	w0, w19
   15cd0:	ldp	x21, x22, [sp, #16]
   15cd4:	ldp	x23, x30, [sp, #32]
   15cd8:	ldp	x19, x20, [sp], #112
   15cdc:	ret
   15ce0:	mov	x8, #0x87                  	// #135
   15ce4:	mov	x3, #0x8                   	// #8
   15ce8:	sxtw	x0, w0
   15cec:	svc	#0x0
   15cf0:	ret
   15cf4:	nop
   15cf8:	mov	x2, #0x80                  	// #128
   15cfc:	mov	w1, #0xff                  	// #255
   15d00:	b	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   15d04:	nop
   15d08:	mov	x2, #0x80                  	// #128
   15d0c:	mov	w1, #0x0                   	// #0
   15d10:	b	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   15d14:	nop
   15d18:	sub	w1, w1, #0x1
   15d1c:	sxtw	x3, w1
   15d20:	cmp	x3, #0x3ff
   15d24:	b.hi	15d48 <__sanitizer_set_report_fd@@Base+0x2e28>  // b.pmore
   15d28:	lsr	x3, x3, #3
   15d2c:	and	w1, w1, #0x7
   15d30:	mov	w2, #0x1                   	// #1
   15d34:	lsl	w1, w2, w1
   15d38:	ldrb	w2, [x0, x3]
   15d3c:	bic	w1, w2, w1
   15d40:	strb	w1, [x0, x3]
   15d44:	ret
   15d48:	str	x30, [sp, #-16]!
   15d4c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15d50:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15d54:	add	x2, x2, #0x3b0
   15d58:	add	x0, x0, #0x268
   15d5c:	mov	x4, #0x400                 	// #1024
   15d60:	mov	w1, #0x381                 	// #897
   15d64:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15d68:	sub	w1, w1, #0x1
   15d6c:	sxtw	x3, w1
   15d70:	cmp	x3, #0x3ff
   15d74:	b.hi	15d90 <__sanitizer_set_report_fd@@Base+0x2e70>  // b.pmore
   15d78:	lsr	x3, x3, #3
   15d7c:	and	w1, w1, #0x7
   15d80:	ldrb	w0, [x0, x3]
   15d84:	asr	w0, w0, w1
   15d88:	and	w0, w0, #0x1
   15d8c:	ret
   15d90:	str	x30, [sp, #-16]!
   15d94:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15d98:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15d9c:	add	x2, x2, #0x3b0
   15da0:	add	x0, x0, #0x268
   15da4:	mov	x4, #0x400                 	// #1024
   15da8:	mov	w1, #0x38b                 	// #907
   15dac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15db0:	stp	x19, x20, [sp, #-144]!
   15db4:	mov	x19, x0
   15db8:	add	x20, x0, #0x8
   15dbc:	stp	x23, x24, [sp, #32]
   15dc0:	adrp	x24, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   15dc4:	mov	w0, #0xffffffff            	// #-1
   15dc8:	stp	x21, x22, [sp, #16]
   15dcc:	mov	w21, w1
   15dd0:	ldr	x22, [x24, #4016]
   15dd4:	stp	x25, x30, [sp, #48]
   15dd8:	stp	w1, w0, [x19]
   15ddc:	ldr	x0, [x22]
   15de0:	stp	xzr, xzr, [x20, #8]
   15de4:	str	xzr, [x19, #8]
   15de8:	cbz	x0, 15ee4 <__sanitizer_set_report_fd@@Base+0x2fc4>
   15dec:	sub	x1, x0, #0x1
   15df0:	tst	x1, x0
   15df4:	b.ne	15f54 <__sanitizer_set_report_fd@@Base+0x3034>  // b.any
   15df8:	add	x22, x0, #0xfff
   15dfc:	neg	x0, x0
   15e00:	and	x22, x22, x0
   15e04:	mov	w2, #0x0                   	// #0
   15e08:	mov	x0, x22
   15e0c:	adrp	x25, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   15e10:	add	x1, x25, #0x178
   15e14:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   15e18:	ldr	x1, [x19, #8]
   15e1c:	mov	x23, x0
   15e20:	ldr	x2, [x20, #16]
   15e24:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   15e28:	ldr	x0, [x19, #8]
   15e2c:	ldr	x1, [x20, #8]
   15e30:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   15e34:	ldr	x2, [x20, #16]
   15e38:	str	x23, [x19, #8]
   15e3c:	str	x22, [x20, #8]
   15e40:	cmp	x2, #0xfff
   15e44:	b.hi	15e64 <__sanitizer_set_report_fd@@Base+0x2f44>  // b.pmore
   15e48:	cmp	x22, #0xfff
   15e4c:	b.ls	15ef4 <__sanitizer_set_report_fd@@Base+0x2fd4>  // b.plast
   15e50:	mov	x3, #0x1000                	// #4096
   15e54:	add	x0, x23, x2
   15e58:	mov	w1, #0x0                   	// #0
   15e5c:	sub	x2, x3, x2
   15e60:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   15e64:	mov	x0, #0x1000                	// #4096
   15e68:	str	x0, [x20, #16]
   15e6c:	add	x20, sp, #0x40
   15e70:	mov	w3, w21
   15e74:	mov	x0, x20
   15e78:	mov	x1, #0x50                  	// #80
   15e7c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15e80:	add	x2, x2, #0x3d8
   15e84:	bl	19f98 <OnPrint@@Base+0x8>
   15e88:	mov	x1, x20
   15e8c:	mov	x8, #0x38                  	// #56
   15e90:	mov	x0, #0xffffffffffffff9c    	// #-100
   15e94:	mov	x2, #0x4000                	// #16384
   15e98:	svc	#0x0
   15e9c:	str	w0, [x19, #4]
   15ea0:	sxtw	x0, w0
   15ea4:	cmn	x0, #0x1, lsl #12
   15ea8:	b.hi	15ec0 <__sanitizer_set_report_fd@@Base+0x2fa0>  // b.pmore
   15eac:	ldp	x21, x22, [sp, #16]
   15eb0:	ldp	x23, x24, [sp, #32]
   15eb4:	ldp	x25, x30, [sp, #48]
   15eb8:	ldp	x19, x20, [sp], #144
   15ebc:	ret
   15ec0:	mov	w1, w21
   15ec4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15ec8:	add	x0, x0, #0x3e8
   15ecc:	bl	1a328 <OnPrint@@Base+0x398>
   15ed0:	ldp	x21, x22, [sp, #16]
   15ed4:	ldp	x23, x24, [sp, #32]
   15ed8:	ldp	x25, x30, [sp, #48]
   15edc:	ldp	x19, x20, [sp], #144
   15ee0:	ret
   15ee4:	mov	x0, #0x6                   	// #6
   15ee8:	bl	6870 <getauxval@plt>
   15eec:	str	x0, [x22]
   15ef0:	b	15dec <__sanitizer_set_report_fd@@Base+0x2ecc>
   15ef4:	ldr	x24, [x24, #4016]
   15ef8:	ldr	x0, [x24]
   15efc:	cbz	x0, 15f64 <__sanitizer_set_report_fd@@Base+0x3044>
   15f00:	sub	x1, x0, #0x1
   15f04:	tst	x1, x0
   15f08:	b.ne	15f54 <__sanitizer_set_report_fd@@Base+0x3034>  // b.any
   15f0c:	add	x22, x0, #0xfff
   15f10:	neg	x0, x0
   15f14:	and	x22, x22, x0
   15f18:	add	x1, x25, #0x178
   15f1c:	mov	w2, #0x0                   	// #0
   15f20:	mov	x0, x22
   15f24:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   15f28:	mov	x23, x0
   15f2c:	ldr	x1, [x19, #8]
   15f30:	ldr	x2, [x20, #16]
   15f34:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   15f38:	ldr	x0, [x19, #8]
   15f3c:	ldr	x1, [x20, #8]
   15f40:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   15f44:	ldr	x2, [x20, #16]
   15f48:	str	x23, [x19, #8]
   15f4c:	str	x22, [x20, #8]
   15f50:	b	15e50 <__sanitizer_set_report_fd@@Base+0x2f30>
   15f54:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   15f58:	add	x0, x0, #0x160
   15f5c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   15f60:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   15f64:	mov	x0, #0x6                   	// #6
   15f68:	bl	6870 <getauxval@plt>
   15f6c:	str	x0, [x24]
   15f70:	b	15f00 <__sanitizer_set_report_fd@@Base+0x2fe0>
   15f74:	nop
   15f78:	stp	x19, x20, [sp, #-160]!
   15f7c:	mov	x20, x0
   15f80:	mov	w4, w1
   15f84:	stp	x21, x22, [sp, #16]
   15f88:	add	x21, sp, #0x50
   15f8c:	ldr	w3, [x20], #8
   15f90:	mov	x1, #0x50                  	// #80
   15f94:	mov	x19, x0
   15f98:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   15f9c:	mov	x0, x21
   15fa0:	add	x2, x2, #0x410
   15fa4:	str	x30, [sp, #32]
   15fa8:	bl	19f98 <OnPrint@@Base+0x8>
   15fac:	mov	x0, x21
   15fb0:	mov	x1, x20
   15fb4:	mov	x3, #0x0                   	// #0
   15fb8:	mov	x2, #0x4000000             	// #67108864
   15fbc:	bl	12938 <__sanitizer_cov_dump@@Base+0x2328>
   15fc0:	tst	w0, #0xff
   15fc4:	b.eq	15fd0 <__sanitizer_set_report_fd@@Base+0x30b0>  // b.none
   15fc8:	ldr	x3, [x19, #24]
   15fcc:	cbnz	x3, 15fe4 <__sanitizer_set_report_fd@@Base+0x30c4>
   15fd0:	mov	w0, #0x0                   	// #0
   15fd4:	ldp	x21, x22, [sp, #16]
   15fd8:	ldr	x30, [sp, #32]
   15fdc:	ldp	x19, x20, [sp], #160
   15fe0:	ret
   15fe4:	ldr	x4, [x19, #16]
   15fe8:	strb	wzr, [sp, #79]
   15fec:	cmp	x3, x4
   15ff0:	b.hi	16110 <__sanitizer_set_report_fd@@Base+0x31f0>  // b.pmore
   15ff4:	add	x1, x3, #0x1
   15ff8:	b.eq	1605c <__sanitizer_set_report_fd@@Base+0x313c>  // b.none
   15ffc:	ldr	x21, [x19, #8]
   16000:	str	x1, [x20, #16]
   16004:	add	x0, x21, x3
   16008:	add	x1, sp, #0x4f
   1600c:	mov	x2, #0x1                   	// #1
   16010:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   16014:	ldr	x0, [x19, #8]
   16018:	adrp	x20, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1601c:	add	x20, x20, #0x758
   16020:	mov	x1, x20
   16024:	bl	14b40 <__sanitizer_set_report_fd@@Base+0x1c20>
   16028:	str	x0, [sp, #56]
   1602c:	mov	x19, x0
   16030:	cbz	x0, 15fd0 <__sanitizer_set_report_fd@@Base+0x30b0>
   16034:	mov	x0, x20
   16038:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1603c:	add	x0, x19, x0
   16040:	bl	14d08 <__sanitizer_set_report_fd@@Base+0x1de8>
   16044:	cmp	w0, #0x0
   16048:	cset	w0, ne  // ne = any
   1604c:	ldp	x21, x22, [sp, #16]
   16050:	ldr	x30, [sp, #32]
   16054:	ldp	x19, x20, [sp], #160
   16058:	ret
   1605c:	cbz	x1, 16138 <__sanitizer_set_report_fd@@Base+0x3218>
   16060:	tst	x3, x1
   16064:	b.eq	16108 <__sanitizer_set_report_fd@@Base+0x31e8>  // b.none
   16068:	clz	x2, x1
   1606c:	mov	w0, #0x3f                  	// #63
   16070:	sub	w0, w0, w2
   16074:	mov	x2, #0x1                   	// #1
   16078:	add	w21, w0, #0x1
   1607c:	lsl	x21, x2, x21
   16080:	cmp	x1, x21
   16084:	b.cs	16184 <__sanitizer_set_report_fd@@Base+0x3264>  // b.hs, b.nlast
   16088:	lsl	x4, x2, x0
   1608c:	cmp	x1, x4
   16090:	b.ls	161a4 <__sanitizer_set_report_fd@@Base+0x3284>  // b.plast
   16094:	cmp	x3, x21
   16098:	b.hi	16158 <__sanitizer_set_report_fd@@Base+0x3238>  // b.pmore
   1609c:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   160a0:	ldr	x22, [x22, #4016]
   160a4:	ldr	x0, [x22]
   160a8:	cbz	x0, 16128 <__sanitizer_set_report_fd@@Base+0x3208>
   160ac:	sub	x22, x0, #0x1
   160b0:	tst	x22, x0
   160b4:	b.ne	16174 <__sanitizer_set_report_fd@@Base+0x3254>  // b.any
   160b8:	add	x21, x21, x22
   160bc:	neg	x0, x0
   160c0:	and	x22, x21, x0
   160c4:	mov	w2, #0x0                   	// #0
   160c8:	mov	x0, x22
   160cc:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   160d0:	add	x1, x1, #0x178
   160d4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   160d8:	ldr	x1, [x19, #8]
   160dc:	mov	x21, x0
   160e0:	ldr	x2, [x20, #16]
   160e4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   160e8:	ldr	x1, [x20, #8]
   160ec:	ldr	x0, [x19, #8]
   160f0:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   160f4:	ldr	x3, [x20, #16]
   160f8:	str	x21, [x19, #8]
   160fc:	str	x22, [x20, #8]
   16100:	add	x1, x3, #0x1
   16104:	b	16000 <__sanitizer_set_report_fd@@Base+0x30e0>
   16108:	mov	x21, x1
   1610c:	b	1609c <__sanitizer_set_report_fd@@Base+0x317c>
   16110:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16114:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16118:	add	x2, x2, #0x428
   1611c:	add	x0, x0, #0x1a8
   16120:	mov	w1, #0x1be                 	// #446
   16124:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16128:	mov	x0, #0x6                   	// #6
   1612c:	bl	6870 <getauxval@plt>
   16130:	str	x0, [x22]
   16134:	b	160ac <__sanitizer_set_report_fd@@Base+0x318c>
   16138:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1613c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16140:	add	x2, x2, #0x448
   16144:	add	x0, x0, #0x1a8
   16148:	mov	x4, #0x0                   	// #0
   1614c:	mov	x3, #0x0                   	// #0
   16150:	mov	w1, #0x177                 	// #375
   16154:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16158:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1615c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16160:	mov	x4, x21
   16164:	add	x2, x2, #0x4a0
   16168:	add	x0, x0, #0x1a8
   1616c:	mov	w1, #0x1fd                 	// #509
   16170:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16174:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16178:	add	x0, x0, #0x160
   1617c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   16180:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   16184:	mov	x3, x1
   16188:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1618c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16190:	mov	x4, x21
   16194:	add	x2, x2, #0x458
   16198:	add	x0, x0, #0x1a8
   1619c:	mov	w1, #0x17b                 	// #379
   161a0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   161a4:	mov	x3, x1
   161a8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   161ac:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   161b0:	add	x2, x2, #0x480
   161b4:	add	x0, x0, #0x1a8
   161b8:	mov	w1, #0x17c                 	// #380
   161bc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   161c0:	stp	x19, x20, [sp, #-144]!
   161c4:	stp	x23, x24, [sp, #32]
   161c8:	stp	x25, x26, [sp, #48]
   161cc:	mov	x25, x0
   161d0:	ldrsw	x0, [x0, #4]
   161d4:	str	x30, [sp, #80]
   161d8:	cmn	x0, #0x1, lsl #12
   161dc:	b.hi	1639c <__sanitizer_set_report_fd@@Base+0x347c>  // b.pmore
   161e0:	mov	x8, #0x3e                  	// #62
   161e4:	mov	x2, #0x0                   	// #0
   161e8:	stp	x21, x22, [sp, #16]
   161ec:	stp	x27, x28, [sp, #64]
   161f0:	mov	x28, x1
   161f4:	mov	x1, #0x0                   	// #0
   161f8:	svc	#0x0
   161fc:	add	x23, x25, #0x8
   16200:	str	xzr, [x28, #16]
   16204:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   16208:	add	x0, sp, #0x88
   1620c:	ldr	x19, [x25, #16]
   16210:	str	x0, [sp, #96]
   16214:	ldr	x3, [x23, #16]
   16218:	mov	w20, #0x1                   	// #1
   1621c:	ldr	x0, [x22, #4016]
   16220:	mov	w24, #0x2                   	// #2
   16224:	str	x0, [sp, #104]
   16228:	cmp	x19, x3
   1622c:	b.ls	16244 <__sanitizer_set_report_fd@@Base+0x3324>  // b.plast
   16230:	ldr	x0, [x23]
   16234:	sub	x2, x19, x3
   16238:	mov	w1, #0x0                   	// #0
   1623c:	add	x0, x0, x3
   16240:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   16244:	str	x19, [x23, #16]
   16248:	cmp	x19, #0xfff
   1624c:	b.ls	163c4 <__sanitizer_set_report_fd@@Base+0x34a4>  // b.plast
   16250:	ldrsw	x0, [x25, #4]
   16254:	and	x2, x19, #0xffffffff
   16258:	mov	x8, #0x3d                  	// #61
   1625c:	ldr	x1, [x25, #8]
   16260:	svc	#0x0
   16264:	mov	x26, x0
   16268:	cbz	x0, 1657c <__sanitizer_set_report_fd@@Base+0x365c>
   1626c:	cmn	x0, #0x1, lsl #12
   16270:	b.hi	16368 <__sanitizer_set_report_fd@@Base+0x3448>  // b.pmore
   16274:	ldr	x19, [x25, #8]
   16278:	add	x27, x19, x0
   1627c:	cmp	x19, x27
   16280:	b.cs	16310 <__sanitizer_set_report_fd@@Base+0x33f0>  // b.hs, b.nlast
   16284:	adrp	x21, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16288:	add	x21, x21, #0x178
   1628c:	b	1629c <__sanitizer_set_report_fd@@Base+0x337c>
   16290:	cbnz	x2, 162b8 <__sanitizer_set_report_fd@@Base+0x3398>
   16294:	cmp	x27, x19
   16298:	b.ls	16310 <__sanitizer_set_report_fd@@Base+0x33f0>  // b.plast
   1629c:	mov	x0, x19
   162a0:	ldrh	w2, [x19, #16]
   162a4:	add	x19, x19, x2
   162a8:	ldr	x2, [x0]
   162ac:	cmp	x2, #0x1
   162b0:	b.ne	16290 <__sanitizer_set_report_fd@@Base+0x3370>  // b.any
   162b4:	mov	w24, w2
   162b8:	ldrb	w2, [x0, #19]
   162bc:	sub	w2, w2, #0x30
   162c0:	and	w2, w2, #0xff
   162c4:	cmp	w2, #0x9
   162c8:	b.hi	16294 <__sanitizer_set_report_fd@@Base+0x3374>  // b.pmore
   162cc:	add	x0, x0, #0x13
   162d0:	bl	14d08 <__sanitizer_set_report_fd@@Base+0x1de8>
   162d4:	ldp	x4, x3, [x28, #8]
   162d8:	str	x0, [sp, #136]
   162dc:	lsr	x4, x4, #3
   162e0:	cmp	x3, x4
   162e4:	b.hi	16564 <__sanitizer_set_report_fd@@Base+0x3644>  // b.pmore
   162e8:	add	x0, x3, #0x1
   162ec:	b.eq	16428 <__sanitizer_set_report_fd@@Base+0x3508>  // b.none
   162f0:	ldr	x7, [x28]
   162f4:	str	x0, [x28, #16]
   162f8:	ldr	x1, [sp, #96]
   162fc:	add	x0, x7, x3, lsl #3
   16300:	mov	x2, #0x8                   	// #8
   16304:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   16308:	cmp	x27, x19
   1630c:	b.hi	1629c <__sanitizer_set_report_fd@@Base+0x337c>  // b.pmore
   16310:	ldr	x3, [x25, #24]
   16314:	cbz	w20, 16358 <__sanitizer_set_report_fd@@Base+0x3438>
   16318:	sub	x0, x3, #0x400
   1631c:	cmp	x0, x26
   16320:	b.cc	163e4 <__sanitizer_set_report_fd@@Base+0x34c4>  // b.lo, b.ul, b.last
   16324:	ldr	x1, [x28, #16]
   16328:	cbz	x1, 163b8 <__sanitizer_set_report_fd@@Base+0x3498>
   1632c:	ldr	x2, [x28]
   16330:	mov	x0, x25
   16334:	add	x1, x2, x1, lsl #3
   16338:	ldur	w1, [x1, #-8]
   1633c:	bl	15f78 <__sanitizer_set_report_fd@@Base+0x3058>
   16340:	tst	w0, #0xff
   16344:	b.eq	164d4 <__sanitizer_set_report_fd@@Base+0x35b4>  // b.none
   16348:	mov	w20, #0x0                   	// #0
   1634c:	ldr	x3, [x23, #16]
   16350:	ldr	x19, [x25, #16]
   16354:	b	16228 <__sanitizer_set_report_fd@@Base+0x3308>
   16358:	mov	w24, #0x1                   	// #1
   1635c:	mov	w20, #0x0                   	// #0
   16360:	ldr	x19, [x25, #16]
   16364:	b	16228 <__sanitizer_set_report_fd@@Base+0x3308>
   16368:	ldr	w1, [x25]
   1636c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16370:	add	x0, x0, #0x4e0
   16374:	mov	w24, #0x0                   	// #0
   16378:	bl	1a328 <OnPrint@@Base+0x398>
   1637c:	ldp	x21, x22, [sp, #16]
   16380:	ldp	x27, x28, [sp, #64]
   16384:	mov	w0, w24
   16388:	ldp	x23, x24, [sp, #32]
   1638c:	ldp	x25, x26, [sp, #48]
   16390:	ldr	x30, [sp, #80]
   16394:	ldp	x19, x20, [sp], #144
   16398:	ret
   1639c:	mov	w24, #0x0                   	// #0
   163a0:	mov	w0, w24
   163a4:	ldp	x23, x24, [sp, #32]
   163a8:	ldp	x25, x26, [sp, #48]
   163ac:	ldr	x30, [sp, #80]
   163b0:	ldp	x19, x20, [sp], #144
   163b4:	ret
   163b8:	mov	w20, #0x0                   	// #0
   163bc:	ldr	x19, [x25, #16]
   163c0:	b	16228 <__sanitizer_set_report_fd@@Base+0x3308>
   163c4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   163c8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   163cc:	mov	x3, x19
   163d0:	add	x2, x2, #0x4c0
   163d4:	add	x0, x0, #0x268
   163d8:	mov	x4, #0x1000                	// #4096
   163dc:	mov	w1, #0x3b5                 	// #949
   163e0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   163e4:	cmp	x3, x3, lsl #1
   163e8:	lsl	x20, x3, #1
   163ec:	ldr	x19, [x25, #16]
   163f0:	b.cs	16414 <__sanitizer_set_report_fd@@Base+0x34f4>  // b.hs, b.nlast
   163f4:	cmp	x20, x19
   163f8:	b.hi	164e8 <__sanitizer_set_report_fd@@Base+0x35c8>  // b.pmore
   163fc:	ldr	x19, [x23]
   16400:	add	x0, x19, x3
   16404:	sub	x2, x20, x3
   16408:	mov	w1, #0x0                   	// #0
   1640c:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   16410:	ldr	x19, [x25, #16]
   16414:	mov	x3, x20
   16418:	mov	w24, #0x1                   	// #1
   1641c:	str	x20, [x23, #16]
   16420:	mov	w20, #0x0                   	// #0
   16424:	b	16228 <__sanitizer_set_report_fd@@Base+0x3308>
   16428:	tst	x0, x3
   1642c:	b.eq	16468 <__sanitizer_set_report_fd@@Base+0x3548>  // b.none
   16430:	clz	x2, x0
   16434:	mov	w1, #0x3f                  	// #63
   16438:	sub	w2, w1, w2
   1643c:	mov	x1, #0x1                   	// #1
   16440:	add	w4, w2, #0x1
   16444:	lsl	x4, x1, x4
   16448:	cmp	x0, x4
   1644c:	b.cs	16548 <__sanitizer_set_report_fd@@Base+0x3628>  // b.hs, b.nlast
   16450:	lsl	x1, x1, x2
   16454:	cmp	x0, x1
   16458:	b.ls	165dc <__sanitizer_set_report_fd@@Base+0x36bc>  // b.plast
   1645c:	cmp	x3, x4
   16460:	b.hi	165b4 <__sanitizer_set_report_fd@@Base+0x3694>  // b.pmore
   16464:	mov	x0, x4
   16468:	ldr	x1, [sp, #104]
   1646c:	ldr	x2, [x1]
   16470:	lsl	x1, x0, #3
   16474:	cbz	x2, 16588 <__sanitizer_set_report_fd@@Base+0x3668>
   16478:	sub	x0, x2, #0x1
   1647c:	tst	x2, x0
   16480:	b.ne	165a4 <__sanitizer_set_report_fd@@Base+0x3684>  // b.any
   16484:	add	x0, x1, x0
   16488:	neg	x2, x2
   1648c:	and	x4, x0, x2
   16490:	mov	x1, x21
   16494:	mov	x0, x4
   16498:	mov	w2, #0x0                   	// #0
   1649c:	str	x4, [sp, #120]
   164a0:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   164a4:	str	x0, [sp, #112]
   164a8:	ldr	x1, [x28]
   164ac:	ldr	x2, [x28, #16]
   164b0:	lsl	x2, x2, #3
   164b4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   164b8:	ldp	x0, x1, [x28]
   164bc:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   164c0:	ldr	x3, [x28, #16]
   164c4:	ldp	x7, x4, [sp, #112]
   164c8:	add	x0, x3, #0x1
   164cc:	stp	x7, x4, [x28]
   164d0:	b	162f4 <__sanitizer_set_report_fd@@Base+0x33d4>
   164d4:	mov	w24, #0x1                   	// #1
   164d8:	mov	w20, #0x0                   	// #0
   164dc:	ldr	x3, [x23, #16]
   164e0:	ldr	x19, [x25, #16]
   164e4:	b	16228 <__sanitizer_set_report_fd@@Base+0x3308>
   164e8:	cbz	x20, 165fc <__sanitizer_set_report_fd@@Base+0x36dc>
   164ec:	ldr	x19, [x22, #4016]
   164f0:	ldr	x0, [x19]
   164f4:	cbz	x0, 165cc <__sanitizer_set_report_fd@@Base+0x36ac>
   164f8:	sub	x1, x0, #0x1
   164fc:	tst	x1, x0
   16500:	b.ne	165a4 <__sanitizer_set_report_fd@@Base+0x3684>  // b.any
   16504:	add	x1, x20, x1
   16508:	neg	x0, x0
   1650c:	and	x21, x1, x0
   16510:	mov	w2, #0x0                   	// #0
   16514:	mov	x0, x21
   16518:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1651c:	add	x1, x1, #0x178
   16520:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   16524:	ldr	x1, [x23]
   16528:	mov	x19, x0
   1652c:	ldr	x2, [x23, #16]
   16530:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   16534:	ldp	x0, x1, [x23]
   16538:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1653c:	stp	x19, x21, [x23]
   16540:	ldr	x3, [x23, #16]
   16544:	b	16400 <__sanitizer_set_report_fd@@Base+0x34e0>
   16548:	mov	x3, x0
   1654c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16550:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16554:	add	x2, x2, #0x458
   16558:	add	x0, x0, #0x1a8
   1655c:	mov	w1, #0x17b                 	// #379
   16560:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16564:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16568:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1656c:	add	x2, x2, #0x428
   16570:	add	x0, x0, #0x1a8
   16574:	mov	w1, #0x1be                 	// #446
   16578:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1657c:	ldp	x21, x22, [sp, #16]
   16580:	ldp	x27, x28, [sp, #64]
   16584:	b	16384 <__sanitizer_set_report_fd@@Base+0x3464>
   16588:	mov	x0, #0x6                   	// #6
   1658c:	str	x1, [sp, #112]
   16590:	bl	6870 <getauxval@plt>
   16594:	mov	x2, x0
   16598:	ldp	x0, x1, [sp, #104]
   1659c:	str	x2, [x0]
   165a0:	b	16478 <__sanitizer_set_report_fd@@Base+0x3558>
   165a4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   165a8:	add	x0, x0, #0x160
   165ac:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   165b0:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   165b4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   165b8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   165bc:	add	x2, x2, #0x4a0
   165c0:	add	x0, x0, #0x1a8
   165c4:	mov	w1, #0x1fd                 	// #509
   165c8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   165cc:	mov	x0, #0x6                   	// #6
   165d0:	bl	6870 <getauxval@plt>
   165d4:	str	x0, [x19]
   165d8:	b	164f8 <__sanitizer_set_report_fd@@Base+0x35d8>
   165dc:	mov	x4, x1
   165e0:	mov	x3, x0
   165e4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   165e8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   165ec:	add	x2, x2, #0x480
   165f0:	add	x0, x0, #0x1a8
   165f4:	mov	w1, #0x17c                 	// #380
   165f8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   165fc:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   16600:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16604:	add	x2, x2, #0x8d0
   16608:	add	x0, x0, #0x1a8
   1660c:	mov	x4, #0x0                   	// #0
   16610:	mov	x3, #0x0                   	// #0
   16614:	mov	w1, #0x1fc                 	// #508
   16618:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1661c:	nop
   16620:	mov	x1, x0
   16624:	ldrsw	x0, [x0, #4]
   16628:	cmn	x0, #0x1, lsl #12
   1662c:	b.hi	16638 <__sanitizer_set_report_fd@@Base+0x3718>  // b.pmore
   16630:	mov	x8, #0x39                  	// #57
   16634:	svc	#0x0
   16638:	ldp	x0, x1, [x1, #8]
   1663c:	b	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   16640:	stp	x29, x30, [sp, #-16]!
   16644:	mov	x0, #0x1                   	// #1
   16648:	mov	x29, sp
   1664c:	clz	x1, x29
   16650:	neg	w1, w1
   16654:	ldp	x29, x30, [sp], #16
   16658:	lsl	x0, x0, x1
   1665c:	sub	x0, x0, #0x1
   16660:	ret
   16664:	nop
   16668:	b	16640 <__sanitizer_set_report_fd@@Base+0x3720>
   1666c:	nop
   16670:	mov	x0, #0x6                   	// #6
   16674:	b	6870 <getauxval@plt>
   16678:	stp	x19, x20, [sp, #-32]!
   1667c:	mov	x2, x0
   16680:	mov	x20, x0
   16684:	mov	x19, x1
   16688:	mov	x3, x1
   1668c:	mov	x8, #0x4e                  	// #78
   16690:	mov	x0, #0xffffffffffffff9c    	// #-100
   16694:	stp	x21, x30, [sp, #16]
   16698:	adrp	x21, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1669c:	add	x1, x21, #0x2d8
   166a0:	svc	#0x0
   166a4:	cmn	x0, #0x1, lsl #12
   166a8:	b.hi	166b8 <__sanitizer_set_report_fd@@Base+0x3798>  // b.pmore
   166ac:	ldp	x21, x30, [sp, #16]
   166b0:	ldp	x19, x20, [sp], #32
   166b4:	ret
   166b8:	neg	w1, w0
   166bc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   166c0:	add	x0, x0, #0x528
   166c4:	bl	1a328 <OnPrint@@Base+0x398>
   166c8:	add	x3, x21, #0x2d8
   166cc:	mov	x0, x20
   166d0:	mov	x1, x19
   166d4:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   166d8:	add	x2, x2, #0x98
   166dc:	bl	19f98 <OnPrint@@Base+0x8>
   166e0:	cmp	x19, w0, sxtw
   166e4:	sxtw	x0, w0
   166e8:	b.hi	166ac <__sanitizer_set_report_fd@@Base+0x378c>  // b.pmore
   166ec:	mov	x3, x0
   166f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   166f4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   166f8:	mov	x4, x19
   166fc:	add	x2, x2, #0x588
   16700:	add	x0, x0, #0x268
   16704:	mov	w1, #0x470                 	// #1136
   16708:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1670c:	nop
   16710:	stp	x19, x20, [sp, #-64]!
   16714:	mov	x5, #0x0                   	// #0
   16718:	mov	x19, x0
   1671c:	mov	x20, x1
   16720:	add	x3, sp, #0x38
   16724:	add	x2, sp, #0x30
   16728:	add	x1, sp, #0x28
   1672c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16730:	mov	x4, #0x100000              	// #1048576
   16734:	add	x0, x0, #0x2c0
   16738:	str	x30, [sp, #16]
   1673c:	bl	127a0 <__sanitizer_cov_dump@@Base+0x2190>
   16740:	tst	w0, #0xff
   16744:	b.eq	16774 <__sanitizer_set_report_fd@@Base+0x3854>  // b.none
   16748:	ldr	x1, [sp, #40]
   1674c:	mov	x2, x20
   16750:	mov	x0, x19
   16754:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
   16758:	ldp	x0, x1, [sp, #40]
   1675c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   16760:	mov	x0, x19
   16764:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   16768:	ldr	x30, [sp, #16]
   1676c:	ldp	x19, x20, [sp], #64
   16770:	ret
   16774:	mov	x1, x20
   16778:	mov	x0, x19
   1677c:	bl	16678 <__sanitizer_set_report_fd@@Base+0x3758>
   16780:	ldr	x30, [sp, #16]
   16784:	ldp	x19, x20, [sp], #64
   16788:	ret
   1678c:	nop
   16790:	stp	x19, x20, [sp, #-32]!
   16794:	mov	x20, x1
   16798:	str	x30, [sp, #16]
   1679c:	ldrb	w1, [x0]
   167a0:	cbz	w1, 16828 <__sanitizer_set_report_fd@@Base+0x3908>
   167a4:	mov	x2, x0
   167a8:	ldrb	w3, [x2, #1]!
   167ac:	cbnz	w3, 167a8 <__sanitizer_set_report_fd@@Base+0x3888>
   167b0:	cmp	x0, x2
   167b4:	b.cs	16830 <__sanitizer_set_report_fd@@Base+0x3910>  // b.hs, b.nlast
   167b8:	mov	x19, x2
   167bc:	sub	x2, x2, #0x1
   167c0:	cmp	x0, x2
   167c4:	ldurb	w3, [x19, #-1]
   167c8:	b.eq	1681c <__sanitizer_set_report_fd@@Base+0x38fc>  // b.none
   167cc:	cmp	w3, #0x2f
   167d0:	b.ne	167b8 <__sanitizer_set_report_fd@@Base+0x3898>  // b.any
   167d4:	mov	x0, x20
   167d8:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   167dc:	mov	x1, x20
   167e0:	mov	x20, x0
   167e4:	mov	x2, x20
   167e8:	mov	x0, x19
   167ec:	bl	14828 <__sanitizer_set_report_fd@@Base+0x1908>
   167f0:	mov	w1, #0x0                   	// #0
   167f4:	cbnz	w0, 1680c <__sanitizer_set_report_fd@@Base+0x38ec>
   167f8:	ldrb	w0, [x19, x20]
   167fc:	sub	w0, w0, #0x2d
   16800:	and	w0, w0, #0xff
   16804:	cmp	w0, #0x1
   16808:	cset	w1, ls  // ls = plast
   1680c:	mov	w0, w1
   16810:	ldr	x30, [sp, #16]
   16814:	ldp	x19, x20, [sp], #32
   16818:	ret
   1681c:	cmp	w3, #0x2f
   16820:	csel	x19, x19, x0, eq  // eq = none
   16824:	b	167d4 <__sanitizer_set_report_fd@@Base+0x38b4>
   16828:	mov	x19, x0
   1682c:	b	167d4 <__sanitizer_set_report_fd@@Base+0x38b4>
   16830:	mov	x19, x2
   16834:	b	167d4 <__sanitizer_set_report_fd@@Base+0x38b4>
   16838:	stp	x19, x20, [sp, #-80]!
   1683c:	stp	x21, x22, [sp, #16]
   16840:	str	x30, [sp, #72]
   16844:	cbz	x0, 16988 <__sanitizer_set_report_fd@@Base+0x3a68>
   16848:	stp	x25, x26, [sp, #48]
   1684c:	mov	x21, x1
   16850:	mov	x22, #0xffffffffffffffff    	// #-1
   16854:	ldr	x25, [x0]
   16858:	ldrh	w0, [x25, #54]
   1685c:	ldrh	w20, [x25, #56]
   16860:	ldr	x19, [x25, #32]
   16864:	and	x1, x0, #0xffff
   16868:	mul	w20, w20, w0
   1686c:	add	x19, x25, x19
   16870:	mov	x0, x19
   16874:	add	x20, x19, w20, sxtw
   16878:	cmp	x19, x20
   1687c:	b.eq	16934 <__sanitizer_set_report_fd@@Base+0x3a14>  // b.none
   16880:	stp	x23, x24, [sp, #32]
   16884:	str	x27, [sp, #64]
   16888:	ldr	w2, [x0]
   1688c:	cmp	w2, #0x1
   16890:	b.ne	168a0 <__sanitizer_set_report_fd@@Base+0x3980>  // b.any
   16894:	ldr	x2, [x0, #16]
   16898:	cmp	x22, x2
   1689c:	csel	x22, x22, x2, ls  // ls = plast
   168a0:	add	x0, x0, x1
   168a4:	cmp	x20, x0
   168a8:	b.ne	16888 <__sanitizer_set_report_fd@@Base+0x3968>  // b.any
   168ac:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   168b0:	sub	x22, x25, x22
   168b4:	ldr	x23, [x23, #4016]
   168b8:	b	168cc <__sanitizer_set_report_fd@@Base+0x39ac>
   168bc:	ldrh	w0, [x25, #54]
   168c0:	add	x19, x19, x0
   168c4:	cmp	x20, x19
   168c8:	b.eq	1692c <__sanitizer_set_report_fd@@Base+0x3a0c>  // b.none
   168cc:	ldr	w0, [x19]
   168d0:	cmp	w0, #0x1
   168d4:	b.ne	168bc <__sanitizer_set_report_fd@@Base+0x399c>  // b.any
   168d8:	ldr	x0, [x23]
   168dc:	ldr	x26, [x19, #16]
   168e0:	neg	x24, x0
   168e4:	ldr	x1, [x19, #40]
   168e8:	add	x26, x22, x26
   168ec:	and	x24, x24, x26
   168f0:	add	x27, x26, x1
   168f4:	cbz	x0, 16948 <__sanitizer_set_report_fd@@Base+0x3a28>
   168f8:	sub	x2, x0, #0x1
   168fc:	tst	x2, x0
   16900:	b.ne	16978 <__sanitizer_set_report_fd@@Base+0x3a58>  // b.any
   16904:	add	x2, x2, x27
   16908:	neg	x0, x0
   1690c:	and	x1, x2, x0
   16910:	mov	x0, x24
   16914:	sub	x1, x1, x24
   16918:	blr	x21
   1691c:	ldrh	w0, [x25, #54]
   16920:	add	x19, x19, x0
   16924:	cmp	x20, x19
   16928:	b.ne	168cc <__sanitizer_set_report_fd@@Base+0x39ac>  // b.any
   1692c:	ldp	x23, x24, [sp, #32]
   16930:	ldr	x27, [sp, #64]
   16934:	ldp	x21, x22, [sp, #16]
   16938:	ldp	x25, x26, [sp, #48]
   1693c:	ldr	x30, [sp, #72]
   16940:	ldp	x19, x20, [sp], #80
   16944:	ret
   16948:	mov	x0, #0x6                   	// #6
   1694c:	bl	6870 <getauxval@plt>
   16950:	str	x0, [x23]
   16954:	neg	x24, x0
   16958:	and	x24, x24, x26
   1695c:	cbnz	x0, 168f8 <__sanitizer_set_report_fd@@Base+0x39d8>
   16960:	mov	x0, #0x6                   	// #6
   16964:	bl	6870 <getauxval@plt>
   16968:	str	x0, [x23]
   1696c:	sub	x2, x0, #0x1
   16970:	tst	x2, x0
   16974:	b.eq	16904 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.none
   16978:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1697c:	add	x0, x0, #0x160
   16980:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   16984:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   16988:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1698c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16990:	add	x2, x2, #0x5b0
   16994:	add	x0, x0, #0x268
   16998:	mov	x4, #0x0                   	// #0
   1699c:	mov	x3, #0x0                   	// #0
   169a0:	mov	w1, #0x495                 	// #1173
   169a4:	stp	x23, x24, [sp, #32]
   169a8:	stp	x25, x26, [sp, #48]
   169ac:	str	x27, [sp, #64]
   169b0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   169b4:	nop
   169b8:	cmp	x0, #0x0
   169bc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   169c0:	b.eq	16a14 <__sanitizer_set_report_fd@@Base+0x3af4>  // b.none
   169c4:	str	x30, [sp, #-16]!
   169c8:	mov	x7, x1
   169cc:	ands	x1, x1, #0xf
   169d0:	b.ne	16a1c <__sanitizer_set_report_fd@@Base+0x3afc>  // b.any
   169d4:	sub	x1, x7, #0x10
   169d8:	stp	x0, x3, [x7, #-16]
   169dc:	mov	x0, x2
   169e0:	mov	x2, x4
   169e4:	mov	x3, x5
   169e8:	mov	x4, x6
   169ec:	mov	x8, #0xdc                  	// #220
   169f0:	svc	#0x0
   169f4:	cmp	x0, #0x0
   169f8:	b.ne	16a0c <__sanitizer_set_report_fd@@Base+0x3aec>  // b.any
   169fc:	ldp	x1, x0, [sp], #16
   16a00:	blr	x1
   16a04:	mov	x8, #0x5d                  	// #93
   16a08:	svc	#0x0
   16a0c:	ldr	x30, [sp], #16
   16a10:	ret
   16a14:	mov	x0, #0xffffffffffffffea    	// #-22
   16a18:	ret
   16a1c:	mov	x4, x1
   16a20:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16a24:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16a28:	add	x2, x2, #0x5c8
   16a2c:	add	x0, x0, #0x268
   16a30:	mov	x3, #0x0                   	// #0
   16a34:	mov	w1, #0x54b                 	// #1355
   16a38:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16a3c:	nop
   16a40:	cmp	w0, #0x7
   16a44:	b.eq	16af0 <__sanitizer_set_report_fd@@Base+0x3bd0>  // b.none
   16a48:	b.gt	16a94 <__sanitizer_set_report_fd@@Base+0x3b74>
   16a4c:	cmp	w0, #0x5
   16a50:	b.eq	16b08 <__sanitizer_set_report_fd@@Base+0x3be8>  // b.none
   16a54:	cmp	w0, #0x6
   16a58:	b.ne	16a74 <__sanitizer_set_report_fd@@Base+0x3b54>  // b.any
   16a5c:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   16a60:	ldr	x0, [x1, #4056]
   16a64:	ldr	w0, [x0, #80]
   16a68:	cmp	w0, #0x1
   16a6c:	b.eq	16ab8 <__sanitizer_set_report_fd@@Base+0x3b98>  // b.none
   16a70:	ret
   16a74:	cmp	w0, #0x4
   16a78:	b.ne	16ad0 <__sanitizer_set_report_fd@@Base+0x3bb0>  // b.any
   16a7c:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   16a80:	ldr	x0, [x1, #4056]
   16a84:	ldr	w0, [x0, #84]
   16a88:	cmp	w0, #0x1
   16a8c:	b.ne	16a70 <__sanitizer_set_report_fd@@Base+0x3b50>  // b.any
   16a90:	b	16ab8 <__sanitizer_set_report_fd@@Base+0x3b98>
   16a94:	cmp	w0, #0x8
   16a98:	b.eq	16ad8 <__sanitizer_set_report_fd@@Base+0x3bb8>  // b.none
   16a9c:	cmp	w0, #0xb
   16aa0:	b.ne	16ad0 <__sanitizer_set_report_fd@@Base+0x3bb0>  // b.any
   16aa4:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   16aa8:	ldr	x0, [x1, #4056]
   16aac:	ldr	w0, [x0, #72]
   16ab0:	cmp	w0, #0x1
   16ab4:	b.ne	16a70 <__sanitizer_set_report_fd@@Base+0x3b50>  // b.any
   16ab8:	ldr	x1, [x1, #4056]
   16abc:	mov	w2, #0x2                   	// #2
   16ac0:	ldrb	w1, [x1, #96]
   16ac4:	cmp	w1, #0x0
   16ac8:	csel	w0, w0, w2, ne  // ne = any
   16acc:	ret
   16ad0:	mov	w0, #0x0                   	// #0
   16ad4:	ret
   16ad8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   16adc:	ldr	x0, [x1, #4056]
   16ae0:	ldr	w0, [x0, #92]
   16ae4:	cmp	w0, #0x1
   16ae8:	b.ne	16a70 <__sanitizer_set_report_fd@@Base+0x3b50>  // b.any
   16aec:	b	16ab8 <__sanitizer_set_report_fd@@Base+0x3b98>
   16af0:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   16af4:	ldr	x0, [x1, #4056]
   16af8:	ldr	w0, [x0, #76]
   16afc:	cmp	w0, #0x1
   16b00:	b.ne	16a70 <__sanitizer_set_report_fd@@Base+0x3b50>  // b.any
   16b04:	b	16ab8 <__sanitizer_set_report_fd@@Base+0x3b98>
   16b08:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   16b0c:	ldr	x0, [x1, #4056]
   16b10:	ldr	w0, [x0, #88]
   16b14:	cmp	w0, #0x1
   16b18:	b.ne	16a70 <__sanitizer_set_report_fd@@Base+0x3b50>  // b.any
   16b1c:	b	16ab8 <__sanitizer_set_report_fd@@Base+0x3b98>
   16b20:	stp	x19, x20, [sp, #-320]!
   16b24:	mov	x2, #0x80                  	// #128
   16b28:	add	x20, sp, #0x40
   16b2c:	stp	x21, x22, [sp, #16]
   16b30:	mov	x21, x0
   16b34:	mov	x22, x1
   16b38:	mov	x0, x20
   16b3c:	mov	w1, #0xff                  	// #255
   16b40:	str	x30, [sp, #32]
   16b44:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   16b48:	add	x19, sp, #0xc0
   16b4c:	ldrb	w4, [sp, #68]
   16b50:	mov	x1, x20
   16b54:	mov	x2, x19
   16b58:	mov	x8, #0x87                  	// #135
   16b5c:	and	w4, w4, #0xfffffffe
   16b60:	mov	x0, #0x2                   	// #2
   16b64:	mov	x3, #0x8                   	// #8
   16b68:	strb	w4, [sp, #68]
   16b6c:	svc	#0x0
   16b70:	mov	x1, #0x0                   	// #0
   16b74:	mov	x3, x22
   16b78:	mov	x2, x21
   16b7c:	add	x0, sp, #0x38
   16b80:	bl	68e0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   16b84:	mov	x1, x19
   16b88:	mov	x8, #0x87                  	// #135
   16b8c:	mov	x0, #0x2                   	// #2
   16b90:	mov	x2, #0x0                   	// #0
   16b94:	mov	x3, #0x8                   	// #8
   16b98:	svc	#0x0
   16b9c:	ldp	x21, x22, [sp, #16]
   16ba0:	ldr	x30, [sp, #32]
   16ba4:	ldr	x0, [sp, #56]
   16ba8:	ldp	x19, x20, [sp], #320
   16bac:	ret
   16bb0:	mov	x1, #0x0                   	// #0
   16bb4:	b	65c0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   16bb8:	ldr	x0, [x0, #8]
   16bbc:	add	x1, x0, #0x1d0
   16bc0:	ldr	w0, [x0, #468]
   16bc4:	cbz	w0, 16bf8 <__sanitizer_set_report_fd@@Base+0x3cd8>
   16bc8:	mov	w3, #0x5201                	// #20993
   16bcc:	movk	w3, #0x4553, lsl #16
   16bd0:	b	16be0 <__sanitizer_set_report_fd@@Base+0x3cc0>
   16bd4:	add	x1, x1, w0, uxtw
   16bd8:	ldr	w0, [x1, #4]
   16bdc:	cbz	w0, 16bf8 <__sanitizer_set_report_fd@@Base+0x3cd8>
   16be0:	ldr	w2, [x1]
   16be4:	cmp	w2, w3
   16be8:	b.ne	16bd4 <__sanitizer_set_report_fd@@Base+0x3cb4>  // b.any
   16bec:	ldr	x0, [x1, #8]
   16bf0:	ubfx	w0, w0, #6, #1
   16bf4:	add	w0, w0, #0x1
   16bf8:	ret
   16bfc:	nop
   16c00:	ret
   16c04:	nop
   16c08:	ldr	x1, [x0, #8]
   16c0c:	ldr	x2, [x1, #416]
   16c10:	ldp	x3, x1, [x1, #432]
   16c14:	stp	x1, x3, [x0, #24]
   16c18:	str	x2, [x0, #40]
   16c1c:	ret
   16c20:	ret
   16c24:	nop
   16c28:	ret
   16c2c:	nop
   16c30:	ret
   16c34:	nop
   16c38:	tbnz	w1, #3, 16c40 <__sanitizer_set_report_fd@@Base+0x3d20>
   16c3c:	ret
   16c40:	mov	x2, x0
   16c44:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16c48:	add	x0, x1, #0x5f0
   16c4c:	mov	x1, x2
   16c50:	str	x30, [sp, #-16]!
   16c54:	bl	1a328 <OnPrint@@Base+0x398>
   16c58:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   16c5c:	nop
   16c60:	str	x30, [sp, #-16]!
   16c64:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16c68:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16c6c:	add	x2, x2, #0x708
   16c70:	add	x0, x0, #0x268
   16c74:	mov	x4, #0x0                   	// #0
   16c78:	mov	x3, #0x0                   	// #0
   16c7c:	mov	w1, #0x80a                 	// #2058
   16c80:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16c84:	nop
   16c88:	sub	x5, x1, #0x1
   16c8c:	mov	x3, x1
   16c90:	cmp	x5, #0xff
   16c94:	mov	x4, x0
   16c98:	and	w2, w2, #0xff
   16c9c:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
   16ca0:	b.ne	16cac <__sanitizer_set_report_fd@@Base+0x3d8c>  // b.any
   16ca4:	mov	w0, #0x0                   	// #0
   16ca8:	ret
   16cac:	adrp	x5, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   16cb0:	add	x5, x5, #0xdf8
   16cb4:	ldrb	w6, [x5, #24]
   16cb8:	tst	w6, #0xff
   16cbc:	b.ne	16ce4 <__sanitizer_set_report_fd@@Base+0x3dc4>  // b.any
   16cc0:	eor	w2, w2, #0x1
   16cc4:	mov	x8, #0x116                 	// #278
   16cc8:	and	x2, x2, #0xff
   16ccc:	svc	#0x0
   16cd0:	cmn	x0, #0x1, lsl #12
   16cd4:	b.hi	16d38 <__sanitizer_set_report_fd@@Base+0x3e18>  // b.pmore
   16cd8:	cmp	x1, x0
   16cdc:	mov	w0, #0x1                   	// #1
   16ce0:	b.eq	16ca8 <__sanitizer_set_report_fd@@Base+0x3d88>  // b.none
   16ce4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   16ce8:	mov	x8, #0x38                  	// #56
   16cec:	add	x1, x1, #0x748
   16cf0:	mov	x0, #0xffffffffffffff9c    	// #-100
   16cf4:	mov	x2, #0x0                   	// #0
   16cf8:	svc	#0x0
   16cfc:	cmn	x0, #0x1, lsl #12
   16d00:	b.hi	16ca4 <__sanitizer_set_report_fd@@Base+0x3d84>  // b.pmore
   16d04:	sxtw	x5, w0
   16d08:	mov	x0, x5
   16d0c:	mov	x1, x4
   16d10:	mov	x2, x3
   16d14:	mov	x8, #0x3f                  	// #63
   16d18:	svc	#0x0
   16d1c:	cmn	x0, #0x1, lsl #12
   16d20:	b.hi	16d4c <__sanitizer_set_report_fd@@Base+0x3e2c>  // b.pmore
   16d24:	mov	x0, x5
   16d28:	mov	x8, #0x39                  	// #57
   16d2c:	svc	#0x0
   16d30:	mov	w0, #0x1                   	// #1
   16d34:	ret
   16d38:	cmn	w0, #0x26
   16d3c:	b.ne	16ce4 <__sanitizer_set_report_fd@@Base+0x3dc4>  // b.any
   16d40:	mov	w0, #0x1                   	// #1
   16d44:	strb	w0, [x5, #24]
   16d48:	b	16ce4 <__sanitizer_set_report_fd@@Base+0x3dc4>
   16d4c:	cmn	w0, #0x4
   16d50:	b.eq	16d08 <__sanitizer_set_report_fd@@Base+0x3de8>  // b.none
   16d54:	mov	w0, #0x0                   	// #0
   16d58:	b	16ca8 <__sanitizer_set_report_fd@@Base+0x3d88>
   16d5c:	nop
   16d60:	stp	x19, x20, [sp, #-176]!
   16d64:	stp	x21, x22, [sp, #16]
   16d68:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   16d6c:	mov	x21, x2
   16d70:	ldr	x19, [x22, #4016]
   16d74:	stp	x23, x24, [sp, #32]
   16d78:	stp	x25, x30, [sp, #48]
   16d7c:	mov	x25, x0
   16d80:	ldr	x1, [x19]
   16d84:	stp	xzr, xzr, [sp, #72]
   16d88:	str	xzr, [sp, #88]
   16d8c:	cbz	x1, 16f7c <__sanitizer_set_report_fd@@Base+0x405c>
   16d90:	sub	x19, x1, #0x1
   16d94:	ands	x19, x19, x1
   16d98:	b.ne	17090 <__sanitizer_set_report_fd@@Base+0x4170>  // b.any
   16d9c:	add	x24, x1, #0xfff
   16da0:	neg	x1, x1
   16da4:	and	x24, x24, x1
   16da8:	mov	w2, #0x0                   	// #0
   16dac:	mov	x0, x24
   16db0:	adrp	x23, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16db4:	add	x1, x23, #0x178
   16db8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   16dbc:	ldr	x1, [sp, #72]
   16dc0:	mov	x20, x0
   16dc4:	ldr	x2, [sp, #88]
   16dc8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   16dcc:	ldp	x0, x1, [sp, #72]
   16dd0:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   16dd4:	stp	x20, x24, [sp, #72]
   16dd8:	ldr	x2, [sp, #88]
   16ddc:	cmp	x2, #0xfff
   16de0:	b.hi	16e04 <__sanitizer_set_report_fd@@Base+0x3ee4>  // b.pmore
   16de4:	cmp	x24, #0xfff
   16de8:	b.ls	17038 <__sanitizer_set_report_fd@@Base+0x4118>  // b.plast
   16dec:	mov	x3, #0x1000                	// #4096
   16df0:	add	x0, x20, x2
   16df4:	mov	w1, #0x0                   	// #0
   16df8:	sub	x2, x3, x2
   16dfc:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   16e00:	ldr	x20, [sp, #72]
   16e04:	mov	x0, #0x1000                	// #4096
   16e08:	stp	x0, xzr, [sp, #88]
   16e0c:	strb	wzr, [x20]
   16e10:	ldrb	w0, [x21, #8]
   16e14:	cbnz	w0, 16f68 <__sanitizer_set_report_fd@@Base+0x4048>
   16e18:	ldr	x2, [x25, #8]
   16e1c:	cbz	x2, 16e30 <__sanitizer_set_report_fd@@Base+0x3f10>
   16e20:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   16e24:	add	x0, sp, #0x48
   16e28:	add	x1, x1, #0x98
   16e2c:	bl	1a3b0 <OnPrint@@Base+0x420>
   16e30:	ldr	x1, [sp, #88]
   16e34:	ldr	x0, [sp, #72]
   16e38:	cbz	x1, 170a0 <__sanitizer_set_report_fd@@Base+0x4180>
   16e3c:	ldrb	w1, [x0]
   16e40:	cbz	w1, 16f48 <__sanitizer_set_report_fd@@Base+0x4028>
   16e44:	add	x24, sp, #0x68
   16e48:	mov	x2, #0x10                  	// #16
   16e4c:	mov	w1, #0x0                   	// #0
   16e50:	add	x0, x24, #0x1c
   16e54:	stp	xzr, xzr, [sp, #104]
   16e58:	mov	w20, #0x0                   	// #0
   16e5c:	str	xzr, [sp, #120]
   16e60:	str	wzr, [sp, #128]
   16e64:	strb	wzr, [sp, #148]
   16e68:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   16e6c:	ldr	x2, [x25]
   16e70:	mov	x0, x24
   16e74:	ldr	x1, [sp, #72]
   16e78:	stp	xzr, xzr, [sp, #152]
   16e7c:	str	xzr, [sp, #168]
   16e80:	bl	f3a0 <__sancov_default_options@@Base+0x2c50>
   16e84:	ldrh	w3, [x25, #24]
   16e88:	cbnz	w3, 16ea0 <__sanitizer_set_report_fd@@Base+0x3f80>
   16e8c:	b	16ef8 <__sanitizer_set_report_fd@@Base+0x3fd8>
   16e90:	add	w20, w20, #0x1
   16e94:	add	x19, x19, #0x38
   16e98:	cmp	w3, w20
   16e9c:	b.le	16ef8 <__sanitizer_set_report_fd@@Base+0x3fd8>
   16ea0:	ldr	x1, [x25, #16]
   16ea4:	add	x2, x1, x19
   16ea8:	ldr	w1, [x1, x19]
   16eac:	cmp	w1, #0x1
   16eb0:	b.ne	16e90 <__sanitizer_set_report_fd@@Base+0x3f70>  // b.any
   16eb4:	ldr	x1, [x25]
   16eb8:	mov	x0, x24
   16ebc:	ldr	x4, [x2, #16]
   16ec0:	mov	x5, #0x0                   	// #0
   16ec4:	ldr	w3, [x2, #4]
   16ec8:	add	w20, w20, #0x1
   16ecc:	ldr	x2, [x2, #40]
   16ed0:	add	x1, x1, x4
   16ed4:	ubfx	x4, x3, #1, #1
   16ed8:	and	w3, w3, #0x1
   16edc:	add	x2, x1, x2
   16ee0:	bl	f438 <__sancov_default_options@@Base+0x2ce8>
   16ee4:	ldrh	w3, [x25, #24]
   16ee8:	add	x19, x19, #0x38
   16eec:	cmp	w3, w20
   16ef0:	b.gt	16ea0 <__sanitizer_set_report_fd@@Base+0x3f80>
   16ef4:	nop
   16ef8:	ldr	x19, [x21]
   16efc:	mov	x0, #0xe38f                	// #58255
   16f00:	movk	x0, #0x8e38, lsl #16
   16f04:	movk	x0, #0x38e3, lsl #32
   16f08:	ldp	x4, x3, [x19, #8]
   16f0c:	movk	x0, #0xe38e, lsl #48
   16f10:	umulh	x4, x4, x0
   16f14:	lsr	x4, x4, #6
   16f18:	cmp	x3, x4
   16f1c:	b.hi	170cc <__sanitizer_set_report_fd@@Base+0x41ac>  // b.pmore
   16f20:	add	x0, x3, #0x1
   16f24:	b.eq	16f8c <__sanitizer_set_report_fd@@Base+0x406c>  // b.none
   16f28:	ldr	x21, [x19]
   16f2c:	add	x3, x3, x3, lsl #3
   16f30:	str	x0, [x19, #16]
   16f34:	mov	x1, x24
   16f38:	add	x0, x21, x3, lsl #3
   16f3c:	mov	x2, #0x48                  	// #72
   16f40:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   16f44:	ldr	x0, [sp, #72]
   16f48:	ldr	x1, [sp, #80]
   16f4c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   16f50:	mov	w0, #0x0                   	// #0
   16f54:	ldp	x21, x22, [sp, #16]
   16f58:	ldp	x23, x24, [sp, #32]
   16f5c:	ldp	x25, x30, [sp, #48]
   16f60:	ldp	x19, x20, [sp], #176
   16f64:	ret
   16f68:	ldr	x0, [sp, #72]
   16f6c:	strb	wzr, [x21, #8]
   16f70:	ldr	x1, [sp, #88]
   16f74:	bl	f7b8 <__sancov_default_options@@Base+0x3068>
   16f78:	b	16e30 <__sanitizer_set_report_fd@@Base+0x3f10>
   16f7c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   16f80:	mov	x1, x0
   16f84:	str	x0, [x19]
   16f88:	b	16d90 <__sanitizer_set_report_fd@@Base+0x3e70>
   16f8c:	tst	x3, x0
   16f90:	b.eq	16fcc <__sanitizer_set_report_fd@@Base+0x40ac>  // b.none
   16f94:	clz	x2, x0
   16f98:	mov	w1, #0x3f                  	// #63
   16f9c:	sub	w1, w1, w2
   16fa0:	mov	x2, #0x1                   	// #1
   16fa4:	add	w4, w1, #0x1
   16fa8:	lsl	x4, x2, x4
   16fac:	cmp	x0, x4
   16fb0:	b.cs	17128 <__sanitizer_set_report_fd@@Base+0x4208>  // b.hs, b.nlast
   16fb4:	lsl	x1, x2, x1
   16fb8:	cmp	x0, x1
   16fbc:	b.ls	17108 <__sanitizer_set_report_fd@@Base+0x41e8>  // b.plast
   16fc0:	cmp	x3, x4
   16fc4:	b.hi	170f0 <__sanitizer_set_report_fd@@Base+0x41d0>  // b.pmore
   16fc8:	mov	x0, x4
   16fcc:	ldr	x22, [x22, #4016]
   16fd0:	add	x0, x0, x0, lsl #3
   16fd4:	lsl	x20, x0, #3
   16fd8:	ldr	x0, [x22]
   16fdc:	cbz	x0, 170e4 <__sanitizer_set_report_fd@@Base+0x41c4>
   16fe0:	sub	x1, x0, #0x1
   16fe4:	tst	x0, x1
   16fe8:	b.ne	17090 <__sanitizer_set_report_fd@@Base+0x4170>  // b.any
   16fec:	add	x20, x20, x1
   16ff0:	neg	x0, x0
   16ff4:	and	x20, x20, x0
   16ff8:	add	x1, x23, #0x178
   16ffc:	mov	w2, #0x0                   	// #0
   17000:	mov	x0, x20
   17004:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   17008:	mov	x21, x0
   1700c:	ldr	x2, [x19, #16]
   17010:	ldr	x1, [x19]
   17014:	add	x2, x2, x2, lsl #3
   17018:	lsl	x2, x2, #3
   1701c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   17020:	ldp	x0, x1, [x19]
   17024:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   17028:	stp	x21, x20, [x19]
   1702c:	ldr	x3, [x19, #16]
   17030:	add	x0, x3, #0x1
   17034:	b	16f2c <__sanitizer_set_report_fd@@Base+0x400c>
   17038:	ldr	x20, [x22, #4016]
   1703c:	ldr	x0, [x20]
   17040:	cbz	x0, 170c0 <__sanitizer_set_report_fd@@Base+0x41a0>
   17044:	sub	x1, x0, #0x1
   17048:	tst	x1, x0
   1704c:	b.ne	17090 <__sanitizer_set_report_fd@@Base+0x4170>  // b.any
   17050:	add	x24, x0, #0xfff
   17054:	neg	x0, x0
   17058:	and	x24, x24, x0
   1705c:	add	x1, x23, #0x178
   17060:	mov	w2, #0x0                   	// #0
   17064:	mov	x0, x24
   17068:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1706c:	mov	x20, x0
   17070:	ldr	x1, [sp, #72]
   17074:	ldr	x2, [sp, #88]
   17078:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1707c:	ldp	x0, x1, [sp, #72]
   17080:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   17084:	stp	x20, x24, [sp, #72]
   17088:	ldr	x2, [sp, #88]
   1708c:	b	16dec <__sanitizer_set_report_fd@@Base+0x3ecc>
   17090:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   17094:	add	x0, x0, #0x160
   17098:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1709c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   170a0:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   170a4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   170a8:	add	x2, x2, #0x190
   170ac:	add	x0, x0, #0x1a8
   170b0:	mov	x4, #0x0                   	// #0
   170b4:	mov	x3, #0x0                   	// #0
   170b8:	mov	w1, #0x1b6                 	// #438
   170bc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   170c0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   170c4:	str	x0, [x20]
   170c8:	b	17044 <__sanitizer_set_report_fd@@Base+0x4124>
   170cc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   170d0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   170d4:	add	x2, x2, #0x428
   170d8:	add	x0, x0, #0x1a8
   170dc:	mov	w1, #0x1be                 	// #446
   170e0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   170e4:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   170e8:	str	x0, [x22]
   170ec:	b	16fe0 <__sanitizer_set_report_fd@@Base+0x40c0>
   170f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   170f4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   170f8:	add	x2, x2, #0x4a0
   170fc:	add	x0, x0, #0x1a8
   17100:	mov	w1, #0x1fd                 	// #509
   17104:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17108:	mov	x4, x1
   1710c:	mov	x3, x0
   17110:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17114:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   17118:	add	x2, x2, #0x480
   1711c:	add	x0, x0, #0x1a8
   17120:	mov	w1, #0x17c                 	// #380
   17124:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17128:	mov	x3, x0
   1712c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17130:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   17134:	add	x2, x2, #0x458
   17138:	add	x0, x0, #0x1a8
   1713c:	mov	w1, #0x17b                 	// #379
   17140:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17144:	nop
   17148:	adrp	x3, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1714c:	ldr	x3, [x3, #3800]
   17150:	cbz	x3, 17158 <__sanitizer_set_report_fd@@Base+0x4238>
   17154:	b	6470 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>
   17158:	b	69d0 <sigaction@plt>
   1715c:	nop
   17160:	stp	x19, x20, [sp, #-192]!
   17164:	str	x30, [sp, #48]
   17168:	cbz	x1, 172d4 <__sanitizer_set_report_fd@@Base+0x43b4>
   1716c:	stp	x23, x24, [sp, #32]
   17170:	mov	x24, x2
   17174:	cbz	x2, 172fc <__sanitizer_set_report_fd@@Base+0x43dc>
   17178:	mov	x20, x1
   1717c:	and	w0, w0, #0xff
   17180:	cbz	w0, 1721c <__sanitizer_set_report_fd@@Base+0x42fc>
   17184:	stp	x21, x22, [sp, #16]
   17188:	add	x21, sp, #0x40
   1718c:	mov	x1, x21
   17190:	mov	w0, #0x3                   	// #3
   17194:	bl	6990 <getrlimit@plt>
   17198:	sxtw	x19, w0
   1719c:	cbnz	w0, 17320 <__sanitizer_set_report_fd@@Base+0x4400>
   171a0:	add	x22, sp, #0x50
   171a4:	mov	w1, #0x1                   	// #1
   171a8:	mov	x0, x22
   171ac:	add	x23, sp, #0x70
   171b0:	bl	1a6f8 <OnPrint@@Base+0x768>
   171b4:	stp	xzr, xzr, [sp, #136]
   171b8:	str	xzr, [sp, #184]
   171bc:	b	171d0 <__sanitizer_set_report_fd@@Base+0x42b0>
   171c0:	ldr	x0, [sp, #120]
   171c4:	cmp	x0, x21
   171c8:	b.hi	17280 <__sanitizer_set_report_fd@@Base+0x4360>  // b.pmore
   171cc:	mov	x19, x0
   171d0:	mov	x1, x23
   171d4:	mov	x0, x22
   171d8:	bl	1acf8 <OnPrint@@Base+0xd68>
   171dc:	tst	w0, #0xff
   171e0:	b.ne	171c0 <__sanitizer_set_report_fd@@Base+0x42a0>  // b.any
   171e4:	ldr	x0, [sp, #112]
   171e8:	cmp	x0, x21
   171ec:	b.hi	171fc <__sanitizer_set_report_fd@@Base+0x42dc>  // b.pmore
   171f0:	ldr	x3, [sp, #120]
   171f4:	cmp	x3, x21
   171f8:	b.hi	17290 <__sanitizer_set_report_fd@@Base+0x4370>  // b.pmore
   171fc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17200:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17204:	add	x2, x2, #0x808
   17208:	add	x0, x0, #0x778
   1720c:	mov	x4, #0x0                   	// #0
   17210:	mov	x3, #0x0                   	// #0
   17214:	mov	w1, #0x6a                  	// #106
   17218:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1721c:	add	x19, sp, #0x70
   17220:	str	xzr, [sp, #64]
   17224:	mov	x0, x19
   17228:	str	xzr, [sp, #80]
   1722c:	bl	64d0 <pthread_attr_init@plt>
   17230:	bl	6920 <pthread_self@plt>
   17234:	mov	x1, x19
   17238:	bl	6460 <pthread_getattr_np@plt>
   1723c:	sxtw	x3, w0
   17240:	cbnz	w0, 17340 <__sanitizer_set_report_fd@@Base+0x4420>
   17244:	add	x2, sp, #0x40
   17248:	add	x1, sp, #0x50
   1724c:	mov	x0, x19
   17250:	bl	192b0 <__sanitizer_set_report_fd@@Base+0x6390>
   17254:	mov	x0, x19
   17258:	bl	65e0 <pthread_attr_destroy@plt>
   1725c:	ldr	x0, [sp, #64]
   17260:	ldr	x1, [sp, #80]
   17264:	ldr	x30, [sp, #48]
   17268:	add	x0, x0, x1
   1726c:	str	x0, [x20]
   17270:	str	x1, [x24]
   17274:	ldp	x23, x24, [sp, #32]
   17278:	ldp	x19, x20, [sp], #192
   1727c:	ret
   17280:	ldr	x1, [sp, #112]
   17284:	cmp	x1, x21
   17288:	b.hi	171fc <__sanitizer_set_report_fd@@Base+0x42dc>  // b.pmore
   1728c:	mov	x3, x0
   17290:	ldr	x1, [sp, #64]
   17294:	mov	x2, #0x40000000            	// #1073741824
   17298:	sub	x19, x3, x19
   1729c:	str	x3, [x20]
   172a0:	cmp	x1, x2
   172a4:	mov	x0, x22
   172a8:	csel	x1, x1, x2, ls  // ls = plast
   172ac:	cmp	x19, x1
   172b0:	csel	x19, x19, x1, ls  // ls = plast
   172b4:	sub	x3, x3, x19
   172b8:	str	x3, [x24]
   172bc:	bl	1a5c8 <OnPrint@@Base+0x638>
   172c0:	ldp	x21, x22, [sp, #16]
   172c4:	ldp	x23, x24, [sp, #32]
   172c8:	ldr	x30, [sp, #48]
   172cc:	ldp	x19, x20, [sp], #192
   172d0:	ret
   172d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   172d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   172dc:	add	x2, x2, #0x760
   172e0:	add	x0, x0, #0x778
   172e4:	mov	x4, #0x0                   	// #0
   172e8:	mov	x3, #0x0                   	// #0
   172ec:	mov	w1, #0x5b                  	// #91
   172f0:	stp	x21, x22, [sp, #16]
   172f4:	stp	x23, x24, [sp, #32]
   172f8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   172fc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17300:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17304:	add	x2, x2, #0x7c0
   17308:	add	x0, x0, #0x778
   1730c:	mov	x4, #0x0                   	// #0
   17310:	mov	x3, #0x0                   	// #0
   17314:	mov	w1, #0x5c                  	// #92
   17318:	stp	x21, x22, [sp, #16]
   1731c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17320:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17324:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17328:	mov	x3, x19
   1732c:	add	x2, x2, #0x7d8
   17330:	add	x0, x0, #0x778
   17334:	mov	x4, #0x0                   	// #0
   17338:	mov	w1, #0x60                  	// #96
   1733c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17340:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17344:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17348:	add	x2, x2, #0x850
   1734c:	add	x0, x0, #0x778
   17350:	mov	x4, #0x0                   	// #0
   17354:	mov	w1, #0x88                  	// #136
   17358:	stp	x21, x22, [sp, #16]
   1735c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17360:	stp	x19, x20, [sp, #-48]!
   17364:	mov	x19, x0
   17368:	mov	x20, x1
   1736c:	mov	x0, #0xffffffffffffffff    	// #-1
   17370:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17374:	add	x1, x1, #0x888
   17378:	str	x30, [sp, #16]
   1737c:	bl	6500 <dlsym@plt>
   17380:	str	x0, [sp, #32]
   17384:	cbz	x0, 173c0 <__sanitizer_set_report_fd@@Base+0x44a0>
   17388:	add	x1, sp, #0x20
   1738c:	add	x0, sp, #0x28
   17390:	mov	x2, #0x8                   	// #8
   17394:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   17398:	ldr	x3, [sp, #40]
   1739c:	mov	x1, x20
   173a0:	mov	x0, x19
   173a4:	mov	w2, #0x1                   	// #1
   173a8:	blr	x3
   173ac:	cmp	w0, #0x0
   173b0:	cset	w0, eq  // eq = none
   173b4:	ldr	x30, [sp, #16]
   173b8:	ldp	x19, x20, [sp], #48
   173bc:	ret
   173c0:	mov	w0, #0x0                   	// #0
   173c4:	ldr	x30, [sp, #16]
   173c8:	ldp	x19, x20, [sp], #48
   173cc:	ret
   173d0:	str	x30, [sp, #-48]!
   173d4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   173d8:	mov	x0, #0xffffffffffffffff    	// #-1
   173dc:	add	x1, x1, #0x890
   173e0:	bl	6500 <dlsym@plt>
   173e4:	mov	x3, x0
   173e8:	mov	x2, #0x8                   	// #8
   173ec:	add	x1, sp, #0x20
   173f0:	add	x0, sp, #0x28
   173f4:	stp	xzr, xzr, [sp, #16]
   173f8:	str	x3, [sp, #32]
   173fc:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   17400:	ldr	x2, [sp, #40]
   17404:	cbz	x2, 17478 <__sanitizer_set_report_fd@@Base+0x4558>
   17408:	add	x1, sp, #0x18
   1740c:	add	x0, sp, #0x10
   17410:	blr	x2
   17414:	ldr	x1, [sp, #24]
   17418:	cmp	x1, #0xf
   1741c:	b.ls	17450 <__sanitizer_set_report_fd@@Base+0x4530>  // b.plast
   17420:	sub	x0, x1, #0x1
   17424:	tst	x0, x1
   17428:	b.ne	17498 <__sanitizer_set_report_fd@@Base+0x4578>  // b.any
   1742c:	ldr	x0, [sp, #16]
   17430:	adrp	x2, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   17434:	add	x0, x0, x1
   17438:	neg	x1, x1
   1743c:	sub	x0, x0, #0x1
   17440:	and	x0, x0, x1
   17444:	str	x0, [x2, #3608]
   17448:	ldr	x30, [sp], #48
   1744c:	ret
   17450:	ldr	x0, [sp, #16]
   17454:	mov	x1, #0x10                  	// #16
   17458:	adrp	x2, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1745c:	add	x0, x0, x1
   17460:	neg	x1, x1
   17464:	sub	x0, x0, #0x1
   17468:	and	x0, x0, x1
   1746c:	str	x0, [x2, #3608]
   17470:	ldr	x30, [sp], #48
   17474:	ret
   17478:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1747c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17480:	add	x2, x2, #0x8a8
   17484:	add	x0, x0, #0x778
   17488:	mov	x4, #0x0                   	// #0
   1748c:	mov	x3, #0x0                   	// #0
   17490:	mov	w1, #0xd4                  	// #212
   17494:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17498:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1749c:	add	x0, x0, #0x160
   174a0:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   174a4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   174a8:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   174ac:	add	x1, x1, #0xe18
   174b0:	ldr	x0, [x1, #8]
   174b4:	cbnz	x0, 174c4 <__sanitizer_set_report_fd@@Base+0x45a4>
   174b8:	mov	x2, #0x6f0                 	// #1776
   174bc:	mov	x0, x2
   174c0:	str	x2, [x1, #8]
   174c4:	ret
   174c8:	mov	x0, #0x10                  	// #16
   174cc:	ret
   174d0:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   174d4:	add	x1, x1, #0xe18
   174d8:	mrs	x2, tpidr_el0
   174dc:	ldr	x0, [x1, #8]
   174e0:	cbnz	x0, 174f0 <__sanitizer_set_report_fd@@Base+0x45d0>
   174e4:	mov	x3, #0x6f0                 	// #1776
   174e8:	mov	x0, x3
   174ec:	str	x3, [x1, #8]
   174f0:	sub	x0, x2, x0
   174f4:	ret
   174f8:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   174fc:	ldr	x0, [x0, #3608]
   17500:	ret
   17504:	nop
   17508:	adrp	x6, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1750c:	add	x7, x6, #0xe18
   17510:	stp	x19, x20, [sp, #-64]!
   17514:	mov	x20, x1
   17518:	mov	x19, x3
   1751c:	ldr	x5, [x7, #8]
   17520:	stp	x21, x22, [sp, #16]
   17524:	mov	x22, x2
   17528:	stp	x23, x30, [sp, #32]
   1752c:	mov	x21, x4
   17530:	and	w23, w0, #0xff
   17534:	mrs	x0, tpidr_el0
   17538:	cbnz	x5, 17548 <__sanitizer_set_report_fd@@Base+0x4628>
   1753c:	mov	x1, #0x6f0                 	// #1776
   17540:	mov	x5, x1
   17544:	str	x1, [x7, #8]
   17548:	sub	x0, x0, x5
   1754c:	str	x0, [x19]
   17550:	ldr	x0, [x6, #3608]
   17554:	str	x0, [x21]
   17558:	add	x1, sp, #0x30
   1755c:	mov	w0, w23
   17560:	add	x2, sp, #0x38
   17564:	bl	17160 <__sanitizer_set_report_fd@@Base+0x4240>
   17568:	ldp	x0, x1, [sp, #48]
   1756c:	str	x1, [x20]
   17570:	sub	x0, x0, x1
   17574:	str	x0, [x22]
   17578:	cbnz	w23, 175c4 <__sanitizer_set_report_fd@@Base+0x46a4>
   1757c:	ldr	x3, [x19]
   17580:	ldr	x4, [x20]
   17584:	cmp	x3, x4
   17588:	b.ls	175c4 <__sanitizer_set_report_fd@@Base+0x46a4>  // b.plast
   1758c:	add	x1, x0, x4
   17590:	cmp	x3, x1
   17594:	b.cs	175c4 <__sanitizer_set_report_fd@@Base+0x46a4>  // b.hs, b.nlast
   17598:	ldr	x2, [x21]
   1759c:	add	x3, x3, x2
   175a0:	cmp	x4, x3
   175a4:	b.cs	175d4 <__sanitizer_set_report_fd@@Base+0x46b4>  // b.hs, b.nlast
   175a8:	cmp	x1, x3
   175ac:	b.cc	175ec <__sanitizer_set_report_fd@@Base+0x46cc>  // b.lo, b.ul, b.last
   175b0:	sub	x0, x0, x2
   175b4:	str	x0, [x22]
   175b8:	ldr	x1, [x20]
   175bc:	add	x0, x1, x0
   175c0:	str	x0, [x19]
   175c4:	ldp	x21, x22, [sp, #16]
   175c8:	ldp	x23, x30, [sp, #32]
   175cc:	ldp	x19, x20, [sp], #64
   175d0:	ret
   175d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   175d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   175dc:	add	x2, x2, #0x8c0
   175e0:	add	x0, x0, #0x778
   175e4:	mov	w1, #0x203                 	// #515
   175e8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   175ec:	mov	x4, x1
   175f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   175f4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   175f8:	add	x2, x2, #0x8f0
   175fc:	add	x0, x0, #0x778
   17600:	mov	w1, #0x204                 	// #516
   17604:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17608:	stp	x19, x20, [sp, #-48]!
   1760c:	mov	x19, x0
   17610:	ldrb	w0, [x0, #24]
   17614:	stp	x21, x30, [sp, #16]
   17618:	cbz	w0, 17688 <__sanitizer_set_report_fd@@Base+0x4768>
   1761c:	ldr	x20, [x19, #16]
   17620:	ldr	x0, [x19]
   17624:	add	x20, x20, x20, lsl #3
   17628:	mov	x21, x0
   1762c:	add	x20, x0, x20, lsl #3
   17630:	cmp	x0, x20
   17634:	b.eq	1764c <__sanitizer_set_report_fd@@Base+0x472c>  // b.none
   17638:	mov	x0, x21
   1763c:	add	x21, x21, #0x48
   17640:	bl	f310 <__sancov_default_options@@Base+0x2bc0>
   17644:	cmp	x20, x21
   17648:	b.ne	17638 <__sanitizer_set_report_fd@@Base+0x4718>  // b.any
   1764c:	str	xzr, [x19, #16]
   17650:	mov	w2, #0x1                   	// #1
   17654:	strb	w2, [x19, #24]
   17658:	add	x1, sp, #0x20
   1765c:	adrp	x0, 16000 <__sanitizer_set_report_fd@@Base+0x30e0>
   17660:	add	x0, x0, #0xd60
   17664:	str	x19, [sp, #32]
   17668:	strb	w2, [sp, #40]
   1766c:	stur	wzr, [sp, #41]
   17670:	sturh	wzr, [sp, #45]
   17674:	strb	wzr, [sp, #47]
   17678:	bl	6640 <dl_iterate_phdr@plt>
   1767c:	ldp	x21, x30, [sp, #16]
   17680:	ldp	x19, x20, [sp], #48
   17684:	ret
   17688:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1768c:	str	xzr, [x19, #16]
   17690:	ldr	x20, [x20, #4016]
   17694:	ldr	x0, [x20]
   17698:	stp	xzr, xzr, [x19]
   1769c:	cbz	x0, 176f8 <__sanitizer_set_report_fd@@Base+0x47d8>
   176a0:	sub	x1, x0, #0x1
   176a4:	tst	x1, x0
   176a8:	b.ne	17704 <__sanitizer_set_report_fd@@Base+0x47e4>  // b.any
   176ac:	add	x20, x0, #0x11f, lsl #12
   176b0:	neg	x0, x0
   176b4:	add	x20, x20, #0xfff
   176b8:	mov	w2, #0x0                   	// #0
   176bc:	and	x20, x20, x0
   176c0:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   176c4:	mov	x0, x20
   176c8:	add	x1, x1, #0x178
   176cc:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   176d0:	mov	x21, x0
   176d4:	ldr	x2, [x19, #16]
   176d8:	ldr	x1, [x19]
   176dc:	add	x2, x2, x2, lsl #3
   176e0:	lsl	x2, x2, #3
   176e4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   176e8:	ldp	x0, x1, [x19]
   176ec:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   176f0:	stp	x21, x20, [x19]
   176f4:	b	17650 <__sanitizer_set_report_fd@@Base+0x4730>
   176f8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   176fc:	str	x0, [x20]
   17700:	b	176a0 <__sanitizer_set_report_fd@@Base+0x4780>
   17704:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   17708:	add	x0, x0, #0x160
   1770c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   17710:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   17714:	nop
   17718:	stp	x19, x20, [sp, #-64]!
   1771c:	mov	x19, x0
   17720:	ldrb	w0, [x0, #24]
   17724:	stp	x21, x30, [sp, #16]
   17728:	cbz	w0, 17794 <__sanitizer_set_report_fd@@Base+0x4874>
   1772c:	ldr	x20, [x19, #16]
   17730:	ldr	x0, [x19]
   17734:	add	x20, x20, x20, lsl #3
   17738:	mov	x21, x0
   1773c:	add	x20, x0, x20, lsl #3
   17740:	cmp	x0, x20
   17744:	b.eq	1775c <__sanitizer_set_report_fd@@Base+0x483c>  // b.none
   17748:	mov	x0, x21
   1774c:	add	x21, x21, #0x48
   17750:	bl	f310 <__sancov_default_options@@Base+0x2bc0>
   17754:	cmp	x20, x21
   17758:	b.ne	17748 <__sanitizer_set_report_fd@@Base+0x4828>  // b.any
   1775c:	str	xzr, [x19, #16]
   17760:	mov	w1, #0x1                   	// #1
   17764:	strb	w1, [x19, #24]
   17768:	add	x20, sp, #0x20
   1776c:	mov	x0, x20
   17770:	bl	1a6f8 <OnPrint@@Base+0x768>
   17774:	mov	x1, x19
   17778:	mov	x0, x20
   1777c:	bl	1a790 <OnPrint@@Base+0x800>
   17780:	mov	x0, x20
   17784:	bl	1a5c8 <OnPrint@@Base+0x638>
   17788:	ldp	x21, x30, [sp, #16]
   1778c:	ldp	x19, x20, [sp], #64
   17790:	ret
   17794:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17798:	str	xzr, [x19, #16]
   1779c:	ldr	x20, [x20, #4016]
   177a0:	ldr	x0, [x20]
   177a4:	stp	xzr, xzr, [x19]
   177a8:	cbz	x0, 17804 <__sanitizer_set_report_fd@@Base+0x48e4>
   177ac:	sub	x1, x0, #0x1
   177b0:	tst	x1, x0
   177b4:	b.ne	17810 <__sanitizer_set_report_fd@@Base+0x48f0>  // b.any
   177b8:	add	x20, x0, #0x11f, lsl #12
   177bc:	neg	x0, x0
   177c0:	add	x20, x20, #0xfff
   177c4:	mov	w2, #0x0                   	// #0
   177c8:	and	x20, x20, x0
   177cc:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   177d0:	mov	x0, x20
   177d4:	add	x1, x1, #0x178
   177d8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   177dc:	mov	x21, x0
   177e0:	ldr	x2, [x19, #16]
   177e4:	ldr	x1, [x19]
   177e8:	add	x2, x2, x2, lsl #3
   177ec:	lsl	x2, x2, #3
   177f0:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   177f4:	ldp	x0, x1, [x19]
   177f8:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   177fc:	stp	x21, x20, [x19]
   17800:	b	17760 <__sanitizer_set_report_fd@@Base+0x4840>
   17804:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   17808:	str	x0, [x20]
   1780c:	b	177ac <__sanitizer_set_report_fd@@Base+0x488c>
   17810:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   17814:	add	x0, x0, #0x160
   17818:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1781c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   17820:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17824:	stp	x19, x20, [sp, #-176]!
   17828:	ldr	x0, [x0, #4056]
   1782c:	ldrb	w0, [x0, #160]
   17830:	str	x30, [sp, #16]
   17834:	cbnz	w0, 17860 <__sanitizer_set_report_fd@@Base+0x4940>
   17838:	add	x1, sp, #0x20
   1783c:	bl	65d0 <getrusage@plt>
   17840:	mov	w1, w0
   17844:	mov	x0, #0x0                   	// #0
   17848:	cbnz	w1, 17854 <__sanitizer_set_report_fd@@Base+0x4934>
   1784c:	ldr	x0, [sp, #64]
   17850:	lsl	x0, x0, #10
   17854:	ldr	x30, [sp, #16]
   17858:	ldp	x19, x20, [sp], #176
   1785c:	ret
   17860:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17864:	mov	x2, #0x0                   	// #0
   17868:	add	x0, x0, #0x928
   1786c:	mov	w1, #0x0                   	// #0
   17870:	bl	18008 <__sanitizer_set_report_fd@@Base+0x50e8>
   17874:	mov	w20, w0
   17878:	cmn	w0, #0x1
   1787c:	b.eq	1794c <__sanitizer_set_report_fd@@Base+0x4a2c>  // b.none
   17880:	add	x19, sp, #0x20
   17884:	mov	x2, #0x3f                  	// #63
   17888:	mov	x1, x19
   1788c:	bl	15560 <__sanitizer_set_report_fd@@Base+0x2640>
   17890:	mov	x1, x0
   17894:	mov	w0, w20
   17898:	mov	x20, x1
   1789c:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   178a0:	cmp	x20, #0x0
   178a4:	mov	x0, #0x0                   	// #0
   178a8:	b.le	17854 <__sanitizer_set_report_fd@@Base+0x4934>
   178ac:	strb	wzr, [x19, x20]
   178b0:	mov	x1, x19
   178b4:	ldrb	w2, [sp, #32]
   178b8:	sub	w0, w2, #0x30
   178bc:	and	w0, w0, #0xff
   178c0:	cmp	w0, #0x9
   178c4:	b.hi	178dc <__sanitizer_set_report_fd@@Base+0x49bc>  // b.pmore
   178c8:	ldrb	w2, [x1, #1]!
   178cc:	sub	w0, w2, #0x30
   178d0:	and	w0, w0, #0xff
   178d4:	cmp	w0, #0x9
   178d8:	b.ls	178c8 <__sanitizer_set_report_fd@@Base+0x49a8>  // b.plast
   178dc:	cbz	w2, 17980 <__sanitizer_set_report_fd@@Base+0x4a60>
   178e0:	ldrb	w2, [x1, #1]!
   178e4:	sub	w0, w2, #0x30
   178e8:	cmp	w2, #0x0
   178ec:	and	w0, w0, #0xff
   178f0:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   178f4:	b.hi	178e0 <__sanitizer_set_report_fd@@Base+0x49c0>  // b.pmore
   178f8:	cmp	w0, #0x9
   178fc:	mov	x19, #0x0                   	// #0
   17900:	b.hi	1792c <__sanitizer_set_report_fd@@Base+0x4a0c>  // b.pmore
   17904:	nop
   17908:	and	x3, x2, #0xff
   1790c:	ldrb	w2, [x1, #1]!
   17910:	add	x19, x19, x19, lsl #2
   17914:	sub	w0, w2, #0x30
   17918:	add	x19, x3, x19, lsl #1
   1791c:	and	w0, w0, #0xff
   17920:	sub	x19, x19, #0x30
   17924:	cmp	w0, #0x9
   17928:	b.ls	17908 <__sanitizer_set_report_fd@@Base+0x49e8>  // b.plast
   1792c:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17930:	ldr	x20, [x20, #4016]
   17934:	ldr	x0, [x20]
   17938:	cbz	x0, 17970 <__sanitizer_set_report_fd@@Base+0x4a50>
   1793c:	mul	x0, x19, x0
   17940:	ldr	x30, [sp, #16]
   17944:	ldp	x19, x20, [sp], #176
   17948:	ret
   1794c:	add	x1, sp, #0x20
   17950:	mov	w0, #0x0                   	// #0
   17954:	bl	65d0 <getrusage@plt>
   17958:	mov	w1, w0
   1795c:	mov	x0, #0x0                   	// #0
   17960:	cbnz	w1, 17854 <__sanitizer_set_report_fd@@Base+0x4934>
   17964:	ldr	x0, [sp, #64]
   17968:	lsl	x0, x0, #10
   1796c:	b	17854 <__sanitizer_set_report_fd@@Base+0x4934>
   17970:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   17974:	str	x0, [x20]
   17978:	mul	x0, x19, x0
   1797c:	b	17940 <__sanitizer_set_report_fd@@Base+0x4a20>
   17980:	mov	x19, #0x0                   	// #0
   17984:	b	1792c <__sanitizer_set_report_fd@@Base+0x4a0c>
   17988:	stp	x19, x30, [sp, #-144]!
   1798c:	mov	x1, #0x80                  	// #128
   17990:	mov	w0, #0x0                   	// #0
   17994:	add	x19, sp, #0x10
   17998:	mov	x2, x19
   1799c:	bl	63d0 <sched_getaffinity@plt>
   179a0:	cbnz	w0, 179b8 <__sanitizer_set_report_fd@@Base+0x4a98>
   179a4:	mov	x1, x19
   179a8:	mov	x0, #0x80                  	// #128
   179ac:	bl	6770 <__sched_cpucount@plt>
   179b0:	ldp	x19, x30, [sp], #144
   179b4:	ret
   179b8:	sxtw	x3, w0
   179bc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   179c0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   179c4:	add	x2, x2, #0x940
   179c8:	add	x0, x0, #0x778
   179cc:	mov	x4, #0x0                   	// #0
   179d0:	mov	w1, #0x2bb                 	// #699
   179d4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   179d8:	ret
   179dc:	nop
   179e0:	mov	x2, x0
   179e4:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   179e8:	mov	w0, #0x6                   	// #6
   179ec:	add	x1, x1, #0x98
   179f0:	b	67c0 <syslog@plt>
   179f4:	nop
   179f8:	ret
   179fc:	nop
   17a00:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17a04:	ldr	x1, [x1, #4056]
   17a08:	ldrb	w1, [x1, #49]
   17a0c:	cbnz	w1, 17a14 <__sanitizer_set_report_fd@@Base+0x4af4>
   17a10:	ret
   17a14:	b	fda0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2a8>
   17a18:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17a1c:	str	x30, [sp, #-32]!
   17a20:	ldr	x0, [x0, #4008]
   17a24:	cbz	x0, 17a38 <__sanitizer_set_report_fd@@Base+0x4b18>
   17a28:	ldr	x0, [x0]
   17a2c:	cbz	x0, 17a38 <__sanitizer_set_report_fd@@Base+0x4b18>
   17a30:	ldrb	w0, [x0]
   17a34:	cbnz	w0, 17a5c <__sanitizer_set_report_fd@@Base+0x4b3c>
   17a38:	add	x1, sp, #0x10
   17a3c:	mov	w0, #0x1                   	// #1
   17a40:	bl	157f0 <__sanitizer_set_report_fd@@Base+0x28d0>
   17a44:	ldp	x2, x1, [sp, #16]
   17a48:	mov	x0, #0xca00                	// #51712
   17a4c:	movk	x0, #0x3b9a, lsl #16
   17a50:	ldr	x30, [sp], #32
   17a54:	madd	x0, x2, x0, x1
   17a58:	ret
   17a5c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17a60:	add	x1, sp, #0x10
   17a64:	ldr	x0, [x0, #3872]
   17a68:	cbz	x0, 17a8c <__sanitizer_set_report_fd@@Base+0x4b6c>
   17a6c:	mov	w0, #0x1                   	// #1
   17a70:	bl	6610 <real_clock_gettime@plt>
   17a74:	ldp	x2, x1, [sp, #16]
   17a78:	mov	x0, #0xca00                	// #51712
   17a7c:	movk	x0, #0x3b9a, lsl #16
   17a80:	ldr	x30, [sp], #32
   17a84:	madd	x0, x2, x0, x1
   17a88:	ret
   17a8c:	mov	w0, #0x1                   	// #1
   17a90:	bl	6660 <clock_gettime@plt>
   17a94:	b	17a44 <__sanitizer_set_report_fd@@Base+0x4b24>
   17a98:	cmp	w0, #0x2
   17a9c:	b.eq	17ab0 <__sanitizer_set_report_fd@@Base+0x4b90>  // b.none
   17aa0:	cmp	w0, #0xa
   17aa4:	cset	x0, eq  // eq = none
   17aa8:	lsl	x0, x0, #4
   17aac:	ret
   17ab0:	mov	x0, #0x4                   	// #4
   17ab4:	ret
   17ab8:	b	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   17abc:	nop
   17ac0:	stp	x19, x20, [sp, #-64]!
   17ac4:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17ac8:	mov	x19, x0
   17acc:	ldr	x20, [x20, #4016]
   17ad0:	stp	x21, x22, [sp, #16]
   17ad4:	mov	x21, x1
   17ad8:	and	w22, w2, #0xff
   17adc:	ldr	x0, [x20]
   17ae0:	str	x30, [sp, #32]
   17ae4:	cbz	x0, 17b4c <__sanitizer_set_report_fd@@Base+0x4c2c>
   17ae8:	sub	x1, x0, #0x1
   17aec:	tst	x0, x1
   17af0:	b.ne	17b60 <__sanitizer_set_report_fd@@Base+0x4c40>  // b.any
   17af4:	add	x19, x19, x1
   17af8:	neg	x0, x0
   17afc:	and	x19, x19, x0
   17b00:	mov	x5, #0x0                   	// #0
   17b04:	mov	w4, #0xffffffff            	// #-1
   17b08:	mov	w3, #0x22                  	// #34
   17b0c:	mov	w2, #0x3                   	// #3
   17b10:	mov	x1, x19
   17b14:	mov	x0, #0x0                   	// #0
   17b18:	bl	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   17b1c:	add	x1, sp, #0x3c
   17b20:	mov	x20, x0
   17b24:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   17b28:	tst	w0, #0xff
   17b2c:	b.ne	17b70 <__sanitizer_set_report_fd@@Base+0x4c50>  // b.any
   17b30:	mov	x0, x19
   17b34:	bl	f540 <__sancov_default_options@@Base+0x2df0>
   17b38:	mov	x0, x20
   17b3c:	ldp	x21, x22, [sp, #16]
   17b40:	ldr	x30, [sp, #32]
   17b44:	ldp	x19, x20, [sp], #64
   17b48:	ret
   17b4c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   17b50:	str	x0, [x20]
   17b54:	sub	x1, x0, #0x1
   17b58:	tst	x0, x1
   17b5c:	b.eq	17af4 <__sanitizer_set_report_fd@@Base+0x4bd4>  // b.none
   17b60:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   17b64:	add	x0, x0, #0x160
   17b68:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   17b6c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   17b70:	ldr	w3, [sp, #60]
   17b74:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17b78:	mov	w4, w22
   17b7c:	mov	x1, x21
   17b80:	mov	x0, x19
   17b84:	add	x2, x2, #0x9b0
   17b88:	bl	f158 <__sancov_default_options@@Base+0x2a08>
   17b8c:	nop
   17b90:	cmp	x0, #0x0
   17b94:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   17b98:	b.ne	17ba0 <__sanitizer_set_report_fd@@Base+0x4c80>  // b.any
   17b9c:	ret
   17ba0:	stp	x19, x20, [sp, #-32]!
   17ba4:	mov	x19, x1
   17ba8:	mov	x20, x0
   17bac:	str	x30, [sp, #16]
   17bb0:	bl	154f8 <__sanitizer_set_report_fd@@Base+0x25d8>
   17bb4:	mov	x1, #0x0                   	// #0
   17bb8:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   17bbc:	tst	w0, #0xff
   17bc0:	b.ne	17bd4 <__sanitizer_set_report_fd@@Base+0x4cb4>  // b.any
   17bc4:	mov	x0, x19
   17bc8:	ldr	x30, [sp, #16]
   17bcc:	ldp	x19, x20, [sp], #32
   17bd0:	b	f598 <__sancov_default_options@@Base+0x2e48>
   17bd4:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17bd8:	mov	x4, x20
   17bdc:	mov	x3, x19
   17be0:	mov	x2, x19
   17be4:	ldr	x1, [x1, #4024]
   17be8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17bec:	add	x0, x0, #0x9c0
   17bf0:	ldr	x1, [x1]
   17bf4:	bl	1a328 <OnPrint@@Base+0x398>
   17bf8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17bfc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17c00:	add	x2, x2, #0xa00
   17c04:	add	x0, x0, #0xa28
   17c08:	mov	x4, #0x0                   	// #0
   17c0c:	mov	x3, #0x0                   	// #0
   17c10:	mov	w1, #0x3c                  	// #60
   17c14:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17c18:	stp	x19, x20, [sp, #-48]!
   17c1c:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17c20:	mov	x19, x0
   17c24:	ldr	x20, [x20, #4016]
   17c28:	stp	x21, x30, [sp, #16]
   17c2c:	mov	x21, x1
   17c30:	ldr	x0, [x20]
   17c34:	cbz	x0, 17c98 <__sanitizer_set_report_fd@@Base+0x4d78>
   17c38:	sub	x1, x0, #0x1
   17c3c:	tst	x0, x1
   17c40:	b.ne	17cac <__sanitizer_set_report_fd@@Base+0x4d8c>  // b.any
   17c44:	add	x19, x19, x1
   17c48:	neg	x0, x0
   17c4c:	and	x19, x19, x0
   17c50:	mov	x5, #0x0                   	// #0
   17c54:	mov	w4, #0xffffffff            	// #-1
   17c58:	mov	w3, #0x22                  	// #34
   17c5c:	mov	w2, #0x3                   	// #3
   17c60:	mov	x1, x19
   17c64:	mov	x0, #0x0                   	// #0
   17c68:	bl	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   17c6c:	add	x1, sp, #0x2c
   17c70:	mov	x20, x0
   17c74:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   17c78:	tst	w0, #0xff
   17c7c:	b.ne	17cbc <__sanitizer_set_report_fd@@Base+0x4d9c>  // b.any
   17c80:	mov	x0, x19
   17c84:	bl	f540 <__sancov_default_options@@Base+0x2df0>
   17c88:	mov	x0, x20
   17c8c:	ldp	x21, x30, [sp, #16]
   17c90:	ldp	x19, x20, [sp], #48
   17c94:	ret
   17c98:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   17c9c:	str	x0, [x20]
   17ca0:	sub	x1, x0, #0x1
   17ca4:	tst	x0, x1
   17ca8:	b.eq	17c44 <__sanitizer_set_report_fd@@Base+0x4d24>  // b.none
   17cac:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   17cb0:	add	x0, x0, #0x160
   17cb4:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   17cb8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   17cbc:	ldr	w3, [sp, #44]
   17cc0:	mov	x0, #0x0                   	// #0
   17cc4:	cmp	w3, #0xc
   17cc8:	b.eq	17c8c <__sanitizer_set_report_fd@@Base+0x4d6c>  // b.none
   17ccc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17cd0:	mov	x1, x21
   17cd4:	mov	x0, x19
   17cd8:	add	x2, x2, #0x9b0
   17cdc:	mov	w4, #0x0                   	// #0
   17ce0:	bl	f158 <__sancov_default_options@@Base+0x2a08>
   17ce4:	nop
   17ce8:	stp	x19, x20, [sp, #-48]!
   17cec:	mov	x20, x0
   17cf0:	sub	x0, x0, #0x1
   17cf4:	stp	x21, x22, [sp, #16]
   17cf8:	tst	x0, x20
   17cfc:	stp	x23, x30, [sp, #32]
   17d00:	b.ne	17da4 <__sanitizer_set_report_fd@@Base+0x4e84>  // b.any
   17d04:	sub	x23, x1, #0x1
   17d08:	mov	x21, x1
   17d0c:	tst	x1, x23
   17d10:	b.ne	17dc4 <__sanitizer_set_report_fd@@Base+0x4ea4>  // b.any
   17d14:	mov	x1, x2
   17d18:	add	x22, x20, x21
   17d1c:	mov	x0, x22
   17d20:	bl	17c18 <__sanitizer_set_report_fd@@Base+0x4cf8>
   17d24:	mov	x19, x0
   17d28:	mov	x1, x0
   17d2c:	cbz	x0, 17d48 <__sanitizer_set_report_fd@@Base+0x4e28>
   17d30:	add	x22, x22, x0
   17d34:	tst	x0, x23
   17d38:	b.ne	17d78 <__sanitizer_set_report_fd@@Base+0x4e58>  // b.any
   17d3c:	add	x0, x1, x20
   17d40:	cmp	x22, x0
   17d44:	b.ne	17d5c <__sanitizer_set_report_fd@@Base+0x4e3c>  // b.any
   17d48:	mov	x0, x19
   17d4c:	ldp	x21, x22, [sp, #16]
   17d50:	ldp	x23, x30, [sp, #32]
   17d54:	ldp	x19, x20, [sp], #48
   17d58:	ret
   17d5c:	sub	x1, x22, x0
   17d60:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   17d64:	mov	x0, x19
   17d68:	ldp	x21, x22, [sp, #16]
   17d6c:	ldp	x23, x30, [sp, #32]
   17d70:	ldp	x19, x20, [sp], #48
   17d74:	ret
   17d78:	add	x23, x0, x23
   17d7c:	neg	x21, x21
   17d80:	and	x21, x23, x21
   17d84:	sub	x1, x21, x0
   17d88:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   17d8c:	mov	x1, x21
   17d90:	mov	x19, x21
   17d94:	add	x0, x1, x20
   17d98:	cmp	x22, x0
   17d9c:	b.eq	17d48 <__sanitizer_set_report_fd@@Base+0x4e28>  // b.none
   17da0:	b	17d5c <__sanitizer_set_report_fd@@Base+0x4e3c>
   17da4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17da8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17dac:	add	x2, x2, #0xa68
   17db0:	add	x0, x0, #0xa28
   17db4:	mov	x4, #0x0                   	// #0
   17db8:	mov	x3, #0x0                   	// #0
   17dbc:	mov	w1, #0x55                  	// #85
   17dc0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17dc4:	adrp	x2, 37000 <__asan_backtrace_vector_release@@Base+0x1320>
   17dc8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17dcc:	add	x2, x2, #0x558
   17dd0:	add	x0, x0, #0xa28
   17dd4:	mov	x4, #0x0                   	// #0
   17dd8:	mov	x3, #0x0                   	// #0
   17ddc:	mov	w1, #0x56                  	// #86
   17de0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17de4:	nop
   17de8:	stp	x19, x20, [sp, #-48]!
   17dec:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17df0:	mov	x19, x0
   17df4:	ldr	x20, [x20, #4016]
   17df8:	stp	x21, x30, [sp, #16]
   17dfc:	mov	x21, x1
   17e00:	ldr	x2, [x20]
   17e04:	cbz	x2, 17e64 <__sanitizer_set_report_fd@@Base+0x4f44>
   17e08:	sub	x0, x2, #0x1
   17e0c:	tst	x2, x0
   17e10:	b.ne	17e7c <__sanitizer_set_report_fd@@Base+0x4f5c>  // b.any
   17e14:	add	x0, x19, x0
   17e18:	neg	x1, x2
   17e1c:	mov	x5, #0x0                   	// #0
   17e20:	mov	w4, #0xffffffff            	// #-1
   17e24:	mov	w3, #0x4022                	// #16418
   17e28:	mov	w2, #0x3                   	// #3
   17e2c:	and	x1, x0, x1
   17e30:	mov	x0, #0x0                   	// #0
   17e34:	bl	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   17e38:	mov	x20, x0
   17e3c:	add	x1, sp, #0x2c
   17e40:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   17e44:	tst	w0, #0xff
   17e48:	b.ne	17e8c <__sanitizer_set_report_fd@@Base+0x4f6c>  // b.any
   17e4c:	mov	x0, x19
   17e50:	bl	f540 <__sancov_default_options@@Base+0x2df0>
   17e54:	mov	x0, x20
   17e58:	ldp	x21, x30, [sp, #16]
   17e5c:	ldp	x19, x20, [sp], #48
   17e60:	ret
   17e64:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   17e68:	mov	x2, x0
   17e6c:	str	x0, [x20]
   17e70:	sub	x0, x2, #0x1
   17e74:	tst	x2, x0
   17e78:	b.eq	17e14 <__sanitizer_set_report_fd@@Base+0x4ef4>  // b.none
   17e7c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   17e80:	add	x0, x0, #0x160
   17e84:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   17e88:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   17e8c:	ldr	w3, [sp, #44]
   17e90:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17e94:	mov	x1, x21
   17e98:	mov	x0, x19
   17e9c:	add	x2, x2, #0xa88
   17ea0:	mov	w4, #0x0                   	// #0
   17ea4:	bl	f158 <__sancov_default_options@@Base+0x2a08>
   17ea8:	stp	x19, x20, [sp, #-96]!
   17eac:	adrp	x19, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   17eb0:	mov	x20, x1
   17eb4:	ldr	x19, [x19, #4016]
   17eb8:	stp	x21, x22, [sp, #16]
   17ebc:	and	w22, w2, #0xff
   17ec0:	mov	x21, x0
   17ec4:	ldr	x2, [x19]
   17ec8:	str	x30, [sp, #32]
   17ecc:	cbz	x2, 17f30 <__sanitizer_set_report_fd@@Base+0x5010>
   17ed0:	neg	x6, x2
   17ed4:	sub	x3, x2, #0x1
   17ed8:	and	x0, x6, x21
   17edc:	tst	x3, x2
   17ee0:	b.ne	17f50 <__sanitizer_set_report_fd@@Base+0x5030>  // b.any
   17ee4:	add	x1, x20, x3
   17ee8:	mov	x5, #0x0                   	// #0
   17eec:	mov	w4, #0xffffffff            	// #-1
   17ef0:	mov	w3, #0x32                  	// #50
   17ef4:	mov	w2, #0x3                   	// #3
   17ef8:	and	x1, x1, x6
   17efc:	bl	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   17f00:	mov	x19, x0
   17f04:	add	x1, sp, #0x34
   17f08:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   17f0c:	tst	w0, #0xff
   17f10:	b.ne	17f60 <__sanitizer_set_report_fd@@Base+0x5040>  // b.any
   17f14:	mov	x0, x20
   17f18:	bl	f540 <__sancov_default_options@@Base+0x2df0>
   17f1c:	mov	x0, x19
   17f20:	ldp	x21, x22, [sp, #16]
   17f24:	ldr	x30, [sp, #32]
   17f28:	ldp	x19, x20, [sp], #96
   17f2c:	ret
   17f30:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   17f34:	mov	x2, x0
   17f38:	str	x0, [x19]
   17f3c:	neg	x6, x2
   17f40:	sub	x3, x2, #0x1
   17f44:	and	x0, x6, x21
   17f48:	tst	x3, x2
   17f4c:	b.eq	17ee4 <__sanitizer_set_report_fd@@Base+0x4fc4>  // b.none
   17f50:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   17f54:	add	x0, x0, #0x160
   17f58:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   17f5c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   17f60:	cbz	w22, 17f78 <__sanitizer_set_report_fd@@Base+0x5058>
   17f64:	ldr	w0, [sp, #52]
   17f68:	cmp	w0, #0xc
   17f6c:	b.ne	17f78 <__sanitizer_set_report_fd@@Base+0x5058>  // b.any
   17f70:	mov	x0, #0x0                   	// #0
   17f74:	b	17f20 <__sanitizer_set_report_fd@@Base+0x5000>
   17f78:	add	x19, sp, #0x38
   17f7c:	mov	x3, x21
   17f80:	mov	x1, #0x28                  	// #40
   17f84:	mov	x0, x19
   17f88:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17f8c:	add	x2, x2, #0xaa0
   17f90:	bl	19f98 <OnPrint@@Base+0x8>
   17f94:	ldr	w3, [sp, #52]
   17f98:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   17f9c:	mov	x1, x19
   17fa0:	mov	x0, x20
   17fa4:	add	x2, x2, #0x9b0
   17fa8:	mov	w4, #0x0                   	// #0
   17fac:	bl	f158 <__sancov_default_options@@Base+0x2a08>
   17fb0:	mov	w2, #0x0                   	// #0
   17fb4:	b	17ea8 <__sanitizer_set_report_fd@@Base+0x4f88>
   17fb8:	mov	w2, #0x1                   	// #1
   17fbc:	b	17ea8 <__sanitizer_set_report_fd@@Base+0x4f88>
   17fc0:	str	x30, [sp, #-16]!
   17fc4:	mov	w2, #0x0                   	// #0
   17fc8:	bl	15508 <__sanitizer_set_report_fd@@Base+0x25e8>
   17fcc:	cmp	w0, #0x0
   17fd0:	cset	w0, eq  // eq = none
   17fd4:	ldr	x30, [sp], #16
   17fd8:	ret
   17fdc:	nop
   17fe0:	str	x30, [sp, #-16]!
   17fe4:	mov	w2, #0x1                   	// #1
   17fe8:	bl	15508 <__sanitizer_set_report_fd@@Base+0x25e8>
   17fec:	cmp	w0, #0x0
   17ff0:	cset	w0, eq  // eq = none
   17ff4:	ldr	x30, [sp], #16
   17ff8:	ret
   17ffc:	nop
   18000:	ret
   18004:	nop
   18008:	stp	x19, x30, [sp, #-16]!
   1800c:	cmp	w1, #0x2
   18010:	mov	x19, x2
   18014:	b.hi	18024 <__sanitizer_set_report_fd@@Base+0x5104>  // b.pmore
   18018:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1801c:	add	x2, x2, #0xc88
   18020:	ldr	w3, [x2, w1, uxtw #2]
   18024:	mov	w2, #0x1b0                 	// #432
   18028:	mov	w1, w3
   1802c:	bl	15540 <__sanitizer_set_report_fd@@Base+0x2620>
   18030:	mov	x1, x19
   18034:	mov	x19, x0
   18038:	sxtw	x0, w0
   1803c:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   18040:	tst	w0, #0xff
   18044:	csinv	w0, w19, wzr, eq  // eq = none
   18048:	ldp	x19, x30, [sp], #16
   1804c:	ret
   18050:	b	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   18054:	nop
   18058:	stp	x19, x20, [sp, #-32]!
   1805c:	mov	x20, x4
   18060:	mov	x19, x3
   18064:	str	x30, [sp, #16]
   18068:	bl	15560 <__sanitizer_set_report_fd@@Base+0x2640>
   1806c:	mov	x1, x20
   18070:	mov	x20, x0
   18074:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   18078:	tst	w0, #0xff
   1807c:	b.ne	18098 <__sanitizer_set_report_fd@@Base+0x5178>  // b.any
   18080:	mov	w0, #0x1                   	// #1
   18084:	cbz	x19, 1808c <__sanitizer_set_report_fd@@Base+0x516c>
   18088:	str	x20, [x19]
   1808c:	ldr	x30, [sp, #16]
   18090:	ldp	x19, x20, [sp], #32
   18094:	ret
   18098:	mov	w0, #0x0                   	// #0
   1809c:	ldr	x30, [sp, #16]
   180a0:	ldp	x19, x20, [sp], #32
   180a4:	ret
   180a8:	stp	x19, x20, [sp, #-32]!
   180ac:	mov	x20, x4
   180b0:	mov	x19, x3
   180b4:	str	x30, [sp, #16]
   180b8:	bl	15588 <__sanitizer_set_report_fd@@Base+0x2668>
   180bc:	mov	x1, x20
   180c0:	mov	x20, x0
   180c4:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   180c8:	tst	w0, #0xff
   180cc:	b.ne	180e8 <__sanitizer_set_report_fd@@Base+0x51c8>  // b.any
   180d0:	mov	w0, #0x1                   	// #1
   180d4:	cbz	x19, 180dc <__sanitizer_set_report_fd@@Base+0x51bc>
   180d8:	str	x20, [x19]
   180dc:	ldr	x30, [sp, #16]
   180e0:	ldp	x19, x20, [sp], #32
   180e4:	ret
   180e8:	mov	w0, #0x0                   	// #0
   180ec:	ldr	x30, [sp, #16]
   180f0:	ldp	x19, x20, [sp], #32
   180f4:	ret
   180f8:	stp	x19, x30, [sp, #-16]!
   180fc:	mov	x19, x2
   18100:	bl	156a0 <__sanitizer_set_report_fd@@Base+0x2780>
   18104:	mov	x1, x19
   18108:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1810c:	and	w0, w0, #0xff
   18110:	eor	w0, w0, #0x1
   18114:	ldp	x19, x30, [sp], #16
   18118:	ret
   1811c:	nop
   18120:	stp	x19, x20, [sp, #-48]!
   18124:	mov	x2, #0x0                   	// #0
   18128:	stp	x21, x22, [sp, #16]
   1812c:	mov	x21, x1
   18130:	mov	w1, #0x0                   	// #0
   18134:	str	x30, [sp, #32]
   18138:	bl	18008 <__sanitizer_set_report_fd@@Base+0x50e8>
   1813c:	cmn	w0, #0x1
   18140:	b.eq	181d4 <__sanitizer_set_report_fd@@Base+0x52b4>  // b.none
   18144:	mov	w20, w0
   18148:	bl	15628 <__sanitizer_set_report_fd@@Base+0x2708>
   1814c:	mov	x19, x0
   18150:	cmn	x0, #0x1
   18154:	b.eq	181f4 <__sanitizer_set_report_fd@@Base+0x52d4>  // b.none
   18158:	cbz	x0, 18214 <__sanitizer_set_report_fd@@Base+0x52f4>
   1815c:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18160:	ldr	x22, [x22, #4016]
   18164:	ldr	x2, [x22]
   18168:	cbz	x2, 181c4 <__sanitizer_set_report_fd@@Base+0x52a4>
   1816c:	sub	x1, x2, #0x1
   18170:	tst	x2, x1
   18174:	b.ne	18234 <__sanitizer_set_report_fd@@Base+0x5314>  // b.any
   18178:	add	x19, x19, x1
   1817c:	neg	x2, x2
   18180:	and	x1, x19, x2
   18184:	mov	w4, w20
   18188:	str	x1, [x21]
   1818c:	mov	x5, #0x0                   	// #0
   18190:	mov	w3, #0x2                   	// #2
   18194:	mov	w2, #0x1                   	// #1
   18198:	mov	x0, #0x0                   	// #0
   1819c:	bl	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   181a0:	mov	x1, #0x0                   	// #0
   181a4:	mov	x19, x0
   181a8:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   181ac:	tst	w0, #0xff
   181b0:	csel	x0, x19, xzr, eq  // eq = none
   181b4:	ldp	x21, x22, [sp, #16]
   181b8:	ldr	x30, [sp, #32]
   181bc:	ldp	x19, x20, [sp], #48
   181c0:	ret
   181c4:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   181c8:	mov	x2, x0
   181cc:	str	x0, [x22]
   181d0:	b	1816c <__sanitizer_set_report_fd@@Base+0x524c>
   181d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   181d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   181dc:	add	x2, x2, #0xab8
   181e0:	add	x0, x0, #0xa28
   181e4:	mov	x4, #0x0                   	// #0
   181e8:	mov	x3, #0x0                   	// #0
   181ec:	mov	w1, #0xc9                  	// #201
   181f0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   181f4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   181f8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   181fc:	add	x2, x2, #0xad8
   18200:	add	x0, x0, #0xa28
   18204:	mov	x4, x19
   18208:	mov	x3, x19
   1820c:	mov	w1, #0xcb                  	// #203
   18210:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18214:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18218:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1821c:	add	x2, x2, #0xaf8
   18220:	add	x0, x0, #0xa28
   18224:	mov	x4, #0x0                   	// #0
   18228:	mov	x3, #0x0                   	// #0
   1822c:	mov	w1, #0xcc                  	// #204
   18230:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18234:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   18238:	add	x0, x0, #0x160
   1823c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   18240:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   18244:	nop
   18248:	stp	x19, x20, [sp, #-64]!
   1824c:	cmp	x0, #0x0
   18250:	mov	x5, x3
   18254:	mov	w4, w2
   18258:	stp	x21, x22, [sp, #16]
   1825c:	mov	x21, x3
   18260:	mov	w3, #0x11                  	// #17
   18264:	csinc	w3, w3, wzr, ne  // ne = any
   18268:	mov	w20, w2
   1826c:	mov	w2, #0x3                   	// #3
   18270:	mov	x22, x1
   18274:	str	x30, [sp, #32]
   18278:	bl	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   1827c:	mov	x19, x0
   18280:	add	x1, sp, #0x3c
   18284:	str	wzr, [sp, #60]
   18288:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1828c:	tst	w0, #0xff
   18290:	b.ne	182a8 <__sanitizer_set_report_fd@@Base+0x5388>  // b.any
   18294:	mov	x0, x19
   18298:	ldp	x21, x22, [sp, #16]
   1829c:	ldr	x30, [sp, #32]
   182a0:	ldp	x19, x20, [sp], #64
   182a4:	ret
   182a8:	ldr	w5, [sp, #60]
   182ac:	mov	x4, x19
   182b0:	mov	x3, x22
   182b4:	mov	x2, x21
   182b8:	mov	w1, w20
   182bc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   182c0:	add	x0, x0, #0xb10
   182c4:	bl	1a2a0 <OnPrint@@Base+0x310>
   182c8:	mov	x0, #0x0                   	// #0
   182cc:	b	18298 <__sanitizer_set_report_fd@@Base+0x5378>
   182d0:	stp	x19, x20, [sp, #-160]!
   182d4:	mov	x20, x1
   182d8:	mov	w1, #0x1                   	// #1
   182dc:	stp	x21, x22, [sp, #16]
   182e0:	add	x22, sp, #0x30
   182e4:	mov	x21, x0
   182e8:	stp	x23, x30, [sp, #32]
   182ec:	add	x23, sp, #0x50
   182f0:	mov	x0, x22
   182f4:	bl	1a6f8 <OnPrint@@Base+0x768>
   182f8:	stp	xzr, xzr, [sp, #104]
   182fc:	str	xzr, [sp, #152]
   18300:	mov	x1, x23
   18304:	mov	x0, x22
   18308:	bl	1acf8 <OnPrint@@Base+0xd68>
   1830c:	tst	w0, #0xff
   18310:	b.eq	183cc <__sanitizer_set_report_fd@@Base+0x54ac>  // b.none
   18314:	ldp	x3, x2, [sp, #80]
   18318:	cmp	x3, x2
   1831c:	b.eq	18300 <__sanitizer_set_report_fd@@Base+0x53e0>  // b.none
   18320:	cbz	x2, 1836c <__sanitizer_set_report_fd@@Base+0x544c>
   18324:	sub	x2, x2, #0x1
   18328:	cmp	x3, x2
   1832c:	b.hi	1838c <__sanitizer_set_report_fd@@Base+0x546c>  // b.pmore
   18330:	cmp	x21, x20
   18334:	b.hi	183ac <__sanitizer_set_report_fd@@Base+0x548c>  // b.pmore
   18338:	cmp	x2, x21
   1833c:	cset	w19, cc  // cc = lo, ul, last
   18340:	cmp	x3, x20
   18344:	cset	w0, hi  // hi = pmore
   18348:	orr	w19, w19, w0
   1834c:	cbnz	w19, 18300 <__sanitizer_set_report_fd@@Base+0x53e0>
   18350:	mov	x0, x22
   18354:	bl	1a5c8 <OnPrint@@Base+0x638>
   18358:	mov	w0, w19
   1835c:	ldp	x21, x22, [sp, #16]
   18360:	ldp	x23, x30, [sp, #32]
   18364:	ldp	x19, x20, [sp], #160
   18368:	ret
   1836c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18370:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18374:	add	x2, x2, #0xb50
   18378:	add	x0, x0, #0xa28
   1837c:	mov	x4, #0x0                   	// #0
   18380:	mov	x3, #0x0                   	// #0
   18384:	mov	w1, #0xef                  	// #239
   18388:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1838c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18390:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18394:	add	x2, x2, #0xb70
   18398:	add	x0, x0, #0xa28
   1839c:	mov	x4, #0x0                   	// #0
   183a0:	mov	x3, #0x0                   	// #0
   183a4:	mov	w1, #0xe1                  	// #225
   183a8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   183ac:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   183b0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   183b4:	add	x2, x2, #0xb90
   183b8:	add	x0, x0, #0xa28
   183bc:	mov	x4, #0x0                   	// #0
   183c0:	mov	x3, #0x0                   	// #0
   183c4:	mov	w1, #0xe2                  	// #226
   183c8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   183cc:	mov	x0, x22
   183d0:	mov	w19, #0x1                   	// #1
   183d4:	bl	1a5c8 <OnPrint@@Base+0x638>
   183d8:	mov	w0, w19
   183dc:	ldp	x21, x22, [sp, #16]
   183e0:	ldp	x23, x30, [sp, #32]
   183e4:	ldp	x19, x20, [sp], #160
   183e8:	ret
   183ec:	nop
   183f0:	stp	x19, x20, [sp, #-160]!
   183f4:	mov	w1, #0x1                   	// #1
   183f8:	adrp	x20, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   183fc:	add	x19, sp, #0x30
   18400:	stp	x21, x22, [sp, #16]
   18404:	mov	x0, x19
   18408:	str	x30, [sp, #32]
   1840c:	bl	1a6f8 <OnPrint@@Base+0x768>
   18410:	mov	w2, #0x0                   	// #0
   18414:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18418:	mov	x0, #0xfff                 	// #4095
   1841c:	add	x1, x1, #0xbb0
   18420:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   18424:	add	x21, sp, #0x50
   18428:	mov	x1, #0xfff                 	// #4095
   1842c:	mov	x22, x0
   18430:	add	x20, x20, #0xbe0
   18434:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18438:	add	x0, x0, #0xbc0
   1843c:	stp	x22, x1, [sp, #104]
   18440:	str	xzr, [sp, #152]
   18444:	bl	1a328 <OnPrint@@Base+0x398>
   18448:	b	1845c <__sanitizer_set_report_fd@@Base+0x553c>
   1844c:	ldp	x1, x2, [sp, #80]
   18450:	mov	x0, x20
   18454:	ldr	x3, [sp, #104]
   18458:	bl	1a2a0 <OnPrint@@Base+0x310>
   1845c:	mov	x1, x21
   18460:	mov	x0, x19
   18464:	bl	1acf8 <OnPrint@@Base+0xd68>
   18468:	tst	w0, #0xff
   1846c:	b.ne	1844c <__sanitizer_set_report_fd@@Base+0x552c>  // b.any
   18470:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18474:	add	x0, x0, #0xbf0
   18478:	bl	1a328 <OnPrint@@Base+0x398>
   1847c:	mov	x1, #0xfff                 	// #4095
   18480:	mov	x0, x22
   18484:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   18488:	mov	x0, x19
   1848c:	bl	1a5c8 <OnPrint@@Base+0x638>
   18490:	ldp	x21, x22, [sp, #16]
   18494:	ldr	x30, [sp, #32]
   18498:	ldp	x19, x20, [sp], #160
   1849c:	ret
   184a0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   184a4:	add	x0, x0, #0xc10
   184a8:	b	15800 <__sanitizer_set_report_fd@@Base+0x28e0>
   184ac:	nop
   184b0:	and	w0, w0, #0xff
   184b4:	cmp	w0, #0x2f
   184b8:	cset	w0, eq  // eq = none
   184bc:	ret
   184c0:	cbz	x0, 184d4 <__sanitizer_set_report_fd@@Base+0x55b4>
   184c4:	ldrb	w0, [x0]
   184c8:	cmp	w0, #0x2f
   184cc:	cset	w0, eq  // eq = none
   184d0:	ret
   184d4:	mov	w0, #0x0                   	// #0
   184d8:	ret
   184dc:	nop
   184e0:	stp	x19, x20, [sp, #-48]!
   184e4:	mov	x19, x0
   184e8:	mov	x20, x2
   184ec:	stp	x21, x22, [sp, #16]
   184f0:	mov	x22, x1
   184f4:	mov	w1, #0x1                   	// #1
   184f8:	ldr	x21, [x0]
   184fc:	str	x30, [sp, #32]
   18500:	ldxrb	w0, [x21]
   18504:	stxrb	w2, w1, [x21]
   18508:	cbnz	w2, 18500 <__sanitizer_set_report_fd@@Base+0x55e0>
   1850c:	dmb	ish
   18510:	tst	w0, #0xff
   18514:	b.eq	18520 <__sanitizer_set_report_fd@@Base+0x5600>  // b.none
   18518:	mov	x0, x21
   1851c:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   18520:	mov	x0, x19
   18524:	bl	124c8 <__sanitizer_cov_dump@@Base+0x1eb8>
   18528:	ldr	w0, [x19, #8]
   1852c:	mov	x2, x20
   18530:	mov	x1, x22
   18534:	bl	15588 <__sanitizer_set_report_fd@@Base+0x2668>
   18538:	cmp	x0, x20
   1853c:	b.ne	18558 <__sanitizer_set_report_fd@@Base+0x5638>  // b.any
   18540:	dmb	ish
   18544:	strb	wzr, [x21]
   18548:	ldp	x21, x22, [sp, #16]
   1854c:	ldr	x30, [sp, #32]
   18550:	ldp	x19, x20, [sp], #48
   18554:	ret
   18558:	ldr	w20, [x19, #8]
   1855c:	adrp	x19, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18560:	add	x19, x19, #0xc18
   18564:	mov	x0, x19
   18568:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1856c:	mov	x1, x19
   18570:	mov	x2, x0
   18574:	mov	w0, w20
   18578:	bl	15588 <__sanitizer_set_report_fd@@Base+0x2668>
   1857c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   18580:	stp	x19, x20, [sp, #-192]!
   18584:	adrp	x19, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18588:	add	x20, sp, #0x50
   1858c:	stp	x21, x22, [sp, #16]
   18590:	mov	x22, x0
   18594:	mov	x0, x20
   18598:	stp	x23, x24, [sp, #32]
   1859c:	mov	x24, x1
   185a0:	mov	x23, x2
   185a4:	mov	w1, #0x0                   	// #0
   185a8:	stp	x25, x26, [sp, #48]
   185ac:	str	x30, [sp, #64]
   185b0:	bl	1a6f8 <OnPrint@@Base+0x768>
   185b4:	ldr	x21, [x19, #4016]
   185b8:	ldr	x3, [x21]
   185bc:	cbz	x3, 186a8 <__sanitizer_set_report_fd@@Base+0x5788>
   185c0:	sub	x0, x3, #0x1
   185c4:	tst	x0, x3
   185c8:	b.ne	18714 <__sanitizer_set_report_fd@@Base+0x57f4>  // b.any
   185cc:	add	x26, x3, #0xfff
   185d0:	neg	x3, x3
   185d4:	and	x26, x26, x3
   185d8:	mov	w2, #0x0                   	// #0
   185dc:	mov	x0, x26
   185e0:	adrp	x21, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   185e4:	add	x1, x21, #0x178
   185e8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   185ec:	mov	x2, #0x0                   	// #0
   185f0:	mov	x1, #0x0                   	// #0
   185f4:	mov	x25, x0
   185f8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   185fc:	mov	x1, #0x0                   	// #0
   18600:	mov	x0, #0x0                   	// #0
   18604:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   18608:	cmp	x26, #0xfff
   1860c:	b.ls	186b8 <__sanitizer_set_report_fd@@Base+0x5798>  // b.plast
   18610:	mov	x0, x25
   18614:	mov	x2, #0x1000                	// #4096
   18618:	mov	w1, #0x0                   	// #0
   1861c:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   18620:	strb	wzr, [x25]
   18624:	mov	x0, #0x1000                	// #4096
   18628:	add	x21, sp, #0x70
   1862c:	stp	x25, x0, [sp, #136]
   18630:	str	xzr, [sp, #184]
   18634:	b	18640 <__sanitizer_set_report_fd@@Base+0x5720>
   18638:	ldr	x3, [sp, #152]
   1863c:	tbnz	w3, #2, 18684 <__sanitizer_set_report_fd@@Base+0x5764>
   18640:	mov	x1, x21
   18644:	mov	x0, x20
   18648:	bl	1acf8 <OnPrint@@Base+0xd68>
   1864c:	ands	w19, w0, #0xff
   18650:	b.ne	18638 <__sanitizer_set_report_fd@@Base+0x5718>  // b.any
   18654:	mov	x1, x26
   18658:	mov	x0, x25
   1865c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   18660:	mov	x0, x20
   18664:	bl	1a5c8 <OnPrint@@Base+0x638>
   18668:	mov	w0, w19
   1866c:	ldp	x21, x22, [sp, #16]
   18670:	ldp	x23, x24, [sp, #32]
   18674:	ldp	x25, x26, [sp, #48]
   18678:	ldr	x30, [sp, #64]
   1867c:	ldp	x19, x20, [sp], #192
   18680:	ret
   18684:	ldr	x1, [sp, #136]
   18688:	mov	x0, x22
   1868c:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   18690:	cbnz	w0, 18640 <__sanitizer_set_report_fd@@Base+0x5720>
   18694:	ldr	x0, [sp, #112]
   18698:	str	x0, [x24]
   1869c:	ldr	x0, [sp, #120]
   186a0:	str	x0, [x23]
   186a4:	b	18654 <__sanitizer_set_report_fd@@Base+0x5734>
   186a8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   186ac:	mov	x3, x0
   186b0:	str	x0, [x21]
   186b4:	b	185c0 <__sanitizer_set_report_fd@@Base+0x56a0>
   186b8:	ldr	x19, [x19, #4016]
   186bc:	ldr	x0, [x19]
   186c0:	cbz	x0, 18724 <__sanitizer_set_report_fd@@Base+0x5804>
   186c4:	sub	x1, x0, #0x1
   186c8:	tst	x1, x0
   186cc:	b.ne	18714 <__sanitizer_set_report_fd@@Base+0x57f4>  // b.any
   186d0:	add	x19, x0, #0xfff
   186d4:	neg	x0, x0
   186d8:	and	x19, x19, x0
   186dc:	add	x1, x21, #0x178
   186e0:	mov	x0, x19
   186e4:	mov	w2, #0x0                   	// #0
   186e8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   186ec:	mov	x21, x0
   186f0:	mov	x2, #0x0                   	// #0
   186f4:	mov	x1, x25
   186f8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   186fc:	mov	x1, x26
   18700:	mov	x0, x25
   18704:	mov	x26, x19
   18708:	mov	x25, x21
   1870c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   18710:	b	18610 <__sanitizer_set_report_fd@@Base+0x56f0>
   18714:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   18718:	add	x0, x0, #0x160
   1871c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   18720:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   18724:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   18728:	str	x0, [x19]
   1872c:	b	186c4 <__sanitizer_set_report_fd@@Base+0x57a4>
   18730:	ldr	x0, [x0]
   18734:	ldr	x0, [x0, #16]
   18738:	ret
   1873c:	nop
   18740:	ldr	x0, [x0]
   18744:	ldr	w0, [x0]
   18748:	cmp	w0, #0xb
   1874c:	cset	w0, eq  // eq = none
   18750:	ret
   18754:	nop
   18758:	ldr	x0, [x0]
   1875c:	ldr	w0, [x0]
   18760:	ret
   18764:	nop
   18768:	ldr	x0, [x0]
   1876c:	ldr	w0, [x0]
   18770:	cmp	w0, #0x7
   18774:	b.eq	187cc <__sanitizer_set_report_fd@@Base+0x58ac>  // b.none
   18778:	b.le	18798 <__sanitizer_set_report_fd@@Base+0x5878>
   1877c:	cmp	w0, #0x8
   18780:	b.eq	187b4 <__sanitizer_set_report_fd@@Base+0x5894>  // b.none
   18784:	cmp	w0, #0xb
   18788:	b.ne	187d8 <__sanitizer_set_report_fd@@Base+0x58b8>  // b.any
   1878c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18790:	add	x0, x0, #0xc80
   18794:	ret
   18798:	cmp	w0, #0x4
   1879c:	b.eq	187c0 <__sanitizer_set_report_fd@@Base+0x58a0>  // b.none
   187a0:	cmp	w0, #0x6
   187a4:	b.ne	187d8 <__sanitizer_set_report_fd@@Base+0x58b8>  // b.any
   187a8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   187ac:	add	x0, x0, #0xc78
   187b0:	ret
   187b4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   187b8:	add	x0, x0, #0xc70
   187bc:	ret
   187c0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   187c4:	add	x0, x0, #0xc68
   187c8:	ret
   187cc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   187d0:	add	x0, x0, #0xc60
   187d4:	ret
   187d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   187dc:	add	x0, x0, #0xc50
   187e0:	ret
   187e4:	nop
   187e8:	str	x30, [sp, #-32]!
   187ec:	add	x1, sp, #0x10
   187f0:	bl	6990 <getrlimit@plt>
   187f4:	cbnz	w0, 18804 <__sanitizer_set_report_fd@@Base+0x58e4>
   187f8:	ldr	x0, [sp, #16]
   187fc:	ldr	x30, [sp], #32
   18800:	ret
   18804:	sxtw	x4, w0
   18808:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1880c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18810:	add	x2, x2, #0xc98
   18814:	add	x0, x0, #0xcc0
   18818:	mov	x3, #0x0                   	// #0
   1881c:	mov	w1, #0x5a                  	// #90
   18820:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18824:	nop
   18828:	stp	x19, x30, [sp, #-32]!
   1882c:	mov	x2, x1
   18830:	str	x2, [sp, #16]
   18834:	add	x1, sp, #0x10
   18838:	str	x2, [sp, #24]
   1883c:	bl	6860 <setrlimit@plt>
   18840:	cbnz	w0, 1884c <__sanitizer_set_report_fd@@Base+0x592c>
   18844:	ldp	x19, x30, [sp], #32
   18848:	ret
   1884c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18850:	ldr	x0, [x0, #4024]
   18854:	ldr	x19, [x0]
   18858:	bl	6790 <__errno_location@plt>
   1885c:	mov	x2, x0
   18860:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18864:	mov	x1, x19
   18868:	add	x0, x0, #0xd08
   1886c:	ldr	w2, [x2]
   18870:	bl	1a328 <OnPrint@@Base+0x398>
   18874:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   18878:	stp	x19, x20, [sp, #-192]!
   1887c:	mov	x19, x1
   18880:	stp	x21, x30, [sp, #16]
   18884:	mov	w21, w0
   18888:	bl	16a40 <__sanitizer_set_report_fd@@Base+0x3b20>
   1888c:	cbnz	w0, 1889c <__sanitizer_set_report_fd@@Base+0x597c>
   18890:	ldp	x21, x30, [sp, #16]
   18894:	ldp	x19, x20, [sp], #192
   18898:	ret
   1889c:	add	x20, sp, #0x28
   188a0:	mov	x2, #0x98                  	// #152
   188a4:	mov	w1, #0x0                   	// #0
   188a8:	mov	x0, x20
   188ac:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   188b0:	str	x19, [sp, #40]
   188b4:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   188b8:	mov	w5, #0x4                   	// #4
   188bc:	mov	w3, #0x4                   	// #4
   188c0:	movk	w5, #0x4000, lsl #16
   188c4:	ldr	x4, [x4, #4056]
   188c8:	movk	w3, #0x4800, lsl #16
   188cc:	mov	x1, x20
   188d0:	mov	w0, w21
   188d4:	mov	x2, #0x0                   	// #0
   188d8:	ldrb	w4, [x4, #97]
   188dc:	cmp	w4, #0x0
   188e0:	csel	w3, w3, w5, ne  // ne = any
   188e4:	str	w3, [sp, #176]
   188e8:	bl	17148 <__sanitizer_set_report_fd@@Base+0x4228>
   188ec:	sxtw	x4, w0
   188f0:	cbnz	w0, 18920 <__sanitizer_set_report_fd@@Base+0x5a00>
   188f4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   188f8:	ldr	x0, [x0, #3896]
   188fc:	ldr	w0, [x0]
   18900:	cbz	w0, 18890 <__sanitizer_set_report_fd@@Base+0x5970>
   18904:	mov	w1, w21
   18908:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1890c:	add	x0, x0, #0xd70
   18910:	bl	1a328 <OnPrint@@Base+0x398>
   18914:	ldp	x21, x30, [sp, #16]
   18918:	ldp	x19, x20, [sp], #192
   1891c:	ret
   18920:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18924:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18928:	add	x2, x2, #0xd30
   1892c:	add	x0, x0, #0xcc0
   18930:	mov	x3, #0x0                   	// #0
   18934:	mov	w1, #0xd2                  	// #210
   18938:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1893c:	nop
   18940:	b	6930 <getuid@plt>
   18944:	nop
   18948:	b	6920 <pthread_self@plt>
   1894c:	nop
   18950:	stp	x19, x20, [sp, #-32]!
   18954:	mov	x19, x0
   18958:	mov	x20, x1
   1895c:	stp	x21, x30, [sp, #16]
   18960:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18964:	ldr	x21, [x21, #4016]
   18968:	ldr	x2, [x21]
   1896c:	cbz	x2, 189a0 <__sanitizer_set_report_fd@@Base+0x5a80>
   18970:	sub	x0, x2, #0x1
   18974:	tst	x2, x0
   18978:	b.ne	189b8 <__sanitizer_set_report_fd@@Base+0x5a98>  // b.any
   1897c:	neg	x2, x2
   18980:	add	x0, x19, x0
   18984:	and	x20, x20, x2
   18988:	and	x0, x0, x2
   1898c:	cmp	x20, x0
   18990:	b.hi	189c8 <__sanitizer_set_report_fd@@Base+0x5aa8>  // b.pmore
   18994:	ldp	x21, x30, [sp, #16]
   18998:	ldp	x19, x20, [sp], #32
   1899c:	ret
   189a0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   189a4:	mov	x2, x0
   189a8:	str	x0, [x21]
   189ac:	sub	x0, x2, #0x1
   189b0:	tst	x2, x0
   189b4:	b.eq	1897c <__sanitizer_set_report_fd@@Base+0x5a5c>  // b.none
   189b8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   189bc:	add	x0, x0, #0x160
   189c0:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   189c4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   189c8:	sub	x1, x20, x0
   189cc:	mov	w2, #0x4                   	// #4
   189d0:	ldp	x21, x30, [sp, #16]
   189d4:	ldp	x19, x20, [sp], #32
   189d8:	b	6740 <madvise@plt>
   189dc:	nop
   189e0:	str	x30, [sp, #-16]!
   189e4:	mov	w2, #0xf                   	// #15
   189e8:	bl	6740 <madvise@plt>
   189ec:	cmp	w0, #0x0
   189f0:	cset	w0, eq  // eq = none
   189f4:	ldr	x30, [sp], #16
   189f8:	ret
   189fc:	nop
   18a00:	str	x30, [sp, #-16]!
   18a04:	mov	w2, #0x10                  	// #16
   18a08:	bl	6740 <madvise@plt>
   18a0c:	cmp	w0, #0x0
   18a10:	cset	w0, eq  // eq = none
   18a14:	ldr	x30, [sp], #16
   18a18:	ret
   18a1c:	nop
   18a20:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18a24:	ldr	x0, [x0, #4056]
   18a28:	ldrb	w0, [x0, #178]
   18a2c:	cbnz	w0, 18a34 <__sanitizer_set_report_fd@@Base+0x5b14>
   18a30:	ret
   18a34:	mov	x1, #0x0                   	// #0
   18a38:	mov	w0, #0x4                   	// #4
   18a3c:	b	18828 <__sanitizer_set_report_fd@@Base+0x5908>
   18a40:	str	x30, [sp, #-16]!
   18a44:	mov	w0, #0x3                   	// #3
   18a48:	bl	187e8 <__sanitizer_set_report_fd@@Base+0x58c8>
   18a4c:	cmn	x0, #0x1
   18a50:	cset	w0, eq  // eq = none
   18a54:	ldr	x30, [sp], #16
   18a58:	ret
   18a5c:	nop
   18a60:	mov	w0, #0x3                   	// #3
   18a64:	b	187e8 <__sanitizer_set_report_fd@@Base+0x58c8>
   18a68:	mov	x1, x0
   18a6c:	str	x30, [sp, #-16]!
   18a70:	mov	w0, #0x3                   	// #3
   18a74:	bl	18828 <__sanitizer_set_report_fd@@Base+0x5908>
   18a78:	mov	w0, #0x3                   	// #3
   18a7c:	bl	187e8 <__sanitizer_set_report_fd@@Base+0x58c8>
   18a80:	cmn	x0, #0x1
   18a84:	b.eq	18a90 <__sanitizer_set_report_fd@@Base+0x5b70>  // b.none
   18a88:	ldr	x30, [sp], #16
   18a8c:	ret
   18a90:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18a94:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18a98:	add	x2, x2, #0xd98
   18a9c:	add	x0, x0, #0xcc0
   18aa0:	mov	x4, #0x0                   	// #0
   18aa4:	mov	x3, #0x0                   	// #0
   18aa8:	mov	w1, #0x7a                  	// #122
   18aac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18ab0:	str	x30, [sp, #-16]!
   18ab4:	mov	w0, #0x9                   	// #9
   18ab8:	bl	187e8 <__sanitizer_set_report_fd@@Base+0x58c8>
   18abc:	cmn	x0, #0x1
   18ac0:	cset	w0, eq  // eq = none
   18ac4:	ldr	x30, [sp], #16
   18ac8:	ret
   18acc:	nop
   18ad0:	str	x30, [sp, #-16]!
   18ad4:	mov	x1, #0xffffffffffffffff    	// #-1
   18ad8:	mov	w0, #0x9                   	// #9
   18adc:	bl	18828 <__sanitizer_set_report_fd@@Base+0x5908>
   18ae0:	mov	w0, #0x9                   	// #9
   18ae4:	bl	187e8 <__sanitizer_set_report_fd@@Base+0x58c8>
   18ae8:	cmn	x0, #0x1
   18aec:	b.ne	18af8 <__sanitizer_set_report_fd@@Base+0x5bd8>  // b.any
   18af0:	ldr	x30, [sp], #16
   18af4:	ret
   18af8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18afc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18b00:	add	x2, x2, #0xdc0
   18b04:	add	x0, x0, #0xcc0
   18b08:	mov	x4, #0x0                   	// #0
   18b0c:	mov	x3, #0x0                   	// #0
   18b10:	mov	w1, #0x84                  	// #132
   18b14:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18b18:	b	64f0 <sleep@plt>
   18b1c:	nop
   18b20:	mov	w1, #0x3e8                 	// #1000
   18b24:	mul	w0, w0, w1
   18b28:	b	6750 <usleep@plt>
   18b2c:	nop
   18b30:	stp	x19, x30, [sp, #-176]!
   18b34:	mov	w0, #0x6                   	// #6
   18b38:	bl	16a40 <__sanitizer_set_report_fd@@Base+0x3b20>
   18b3c:	cbnz	w0, 18b44 <__sanitizer_set_report_fd@@Base+0x5c24>
   18b40:	bl	68b0 <abort@plt>
   18b44:	add	x19, sp, #0x18
   18b48:	mov	x2, #0x98                  	// #152
   18b4c:	mov	w1, #0x0                   	// #0
   18b50:	mov	x0, x19
   18b54:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   18b58:	str	xzr, [sp, #24]
   18b5c:	mov	x1, x19
   18b60:	mov	x2, #0x0                   	// #0
   18b64:	mov	w0, #0x6                   	// #6
   18b68:	bl	17148 <__sanitizer_set_report_fd@@Base+0x4228>
   18b6c:	bl	68b0 <abort@plt>
   18b70:	b	35d38 <__asan_backtrace_vector_release@@Base+0x58>
   18b74:	nop
   18b78:	str	x30, [sp, #-16]!
   18b7c:	bl	6560 <isatty@plt>
   18b80:	cmp	w0, #0x0
   18b84:	cset	w0, ne  // ne = any
   18b88:	ldr	x30, [sp], #16
   18b8c:	ret
   18b90:	str	x30, [sp, #-64]!
   18b94:	mov	x0, #0x0                   	// #0
   18b98:	add	x1, sp, #0x10
   18b9c:	bl	69a0 <sigaltstack@plt>
   18ba0:	cbnz	w0, 18c0c <__sanitizer_set_report_fd@@Base+0x5cec>
   18ba4:	ldr	w0, [sp, #24]
   18ba8:	tbnz	w0, #1, 18bb4 <__sanitizer_set_report_fd@@Base+0x5c94>
   18bac:	ldr	x30, [sp], #64
   18bb0:	ret
   18bb4:	mov	w2, #0x0                   	// #0
   18bb8:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18bbc:	mov	x0, #0x10000               	// #65536
   18bc0:	add	x1, x1, #0xe18
   18bc4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   18bc8:	mov	x3, x0
   18bcc:	mov	x2, #0x10000               	// #65536
   18bd0:	add	x0, sp, #0x28
   18bd4:	mov	x1, #0x0                   	// #0
   18bd8:	str	x3, [sp, #40]
   18bdc:	str	wzr, [sp, #48]
   18be0:	str	x2, [sp, #56]
   18be4:	bl	69a0 <sigaltstack@plt>
   18be8:	sxtw	x4, w0
   18bec:	cbz	w0, 18bac <__sanitizer_set_report_fd@@Base+0x5c8c>
   18bf0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18bf4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18bf8:	add	x2, x2, #0xe30
   18bfc:	add	x0, x0, #0xcc0
   18c00:	mov	x3, #0x0                   	// #0
   18c04:	mov	w1, #0xbb                  	// #187
   18c08:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18c0c:	sxtw	x4, w0
   18c10:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18c14:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18c18:	add	x2, x2, #0xde8
   18c1c:	add	x0, x0, #0xcc0
   18c20:	mov	x3, #0x0                   	// #0
   18c24:	mov	w1, #0xb0                  	// #176
   18c28:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18c2c:	nop
   18c30:	mov	w3, #0x2                   	// #2
   18c34:	mov	x2, #0x10000               	// #65536
   18c38:	str	x30, [sp, #-64]!
   18c3c:	add	x1, sp, #0x28
   18c40:	add	x0, sp, #0x10
   18c44:	str	xzr, [sp, #16]
   18c48:	str	w3, [sp, #24]
   18c4c:	str	x2, [sp, #32]
   18c50:	bl	69a0 <sigaltstack@plt>
   18c54:	cbnz	w0, 18c6c <__sanitizer_set_report_fd@@Base+0x5d4c>
   18c58:	ldr	x0, [sp, #40]
   18c5c:	ldr	x1, [sp, #56]
   18c60:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   18c64:	ldr	x30, [sp], #64
   18c68:	ret
   18c6c:	sxtw	x4, w0
   18c70:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18c74:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18c78:	add	x2, x2, #0xe60
   18c7c:	add	x0, x0, #0xcc0
   18c80:	mov	x3, #0x0                   	// #0
   18c84:	mov	w1, #0xc3                  	// #195
   18c88:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18c8c:	nop
   18c90:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18c94:	stp	x19, x30, [sp, #-16]!
   18c98:	mov	x19, x0
   18c9c:	ldr	x1, [x1, #4056]
   18ca0:	ldrb	w0, [x1, #97]
   18ca4:	cbnz	w0, 18cf4 <__sanitizer_set_report_fd@@Base+0x5dd4>
   18ca8:	mov	x1, x19
   18cac:	mov	w0, #0xb                   	// #11
   18cb0:	bl	18878 <__sanitizer_set_report_fd@@Base+0x5958>
   18cb4:	mov	x1, x19
   18cb8:	mov	w0, #0x7                   	// #7
   18cbc:	bl	18878 <__sanitizer_set_report_fd@@Base+0x5958>
   18cc0:	mov	x1, x19
   18cc4:	mov	w0, #0x6                   	// #6
   18cc8:	bl	18878 <__sanitizer_set_report_fd@@Base+0x5958>
   18ccc:	mov	x1, x19
   18cd0:	mov	w0, #0x8                   	// #8
   18cd4:	bl	18878 <__sanitizer_set_report_fd@@Base+0x5958>
   18cd8:	mov	x1, x19
   18cdc:	mov	w0, #0x4                   	// #4
   18ce0:	bl	18878 <__sanitizer_set_report_fd@@Base+0x5958>
   18ce4:	mov	x1, x19
   18ce8:	mov	w0, #0x5                   	// #5
   18cec:	ldp	x19, x30, [sp], #16
   18cf0:	b	18878 <__sanitizer_set_report_fd@@Base+0x5958>
   18cf4:	bl	18b90 <__sanitizer_set_report_fd@@Base+0x5c70>
   18cf8:	b	18ca8 <__sanitizer_set_report_fd@@Base+0x5d88>
   18cfc:	nop
   18d00:	stp	x19, x20, [sp, #-32]!
   18d04:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18d08:	mov	x19, x0
   18d0c:	ldr	x20, [x20, #4016]
   18d10:	stp	x21, x30, [sp, #16]
   18d14:	ldr	x21, [x0, #16]
   18d18:	ldr	x0, [x20]
   18d1c:	cbz	x0, 18d88 <__sanitizer_set_report_fd@@Base+0x5e68>
   18d20:	ldr	x1, [x19, #32]
   18d24:	add	x21, x21, x0
   18d28:	mov	w0, #0x0                   	// #0
   18d2c:	cmp	x21, x1
   18d30:	b.ls	18d7c <__sanitizer_set_report_fd@@Base+0x5e5c>  // b.plast
   18d34:	mov	x2, #0xffff                	// #65535
   18d38:	add	x1, x1, x2
   18d3c:	ldr	x2, [x19, #16]
   18d40:	cmp	x2, x1
   18d44:	b.cs	18d7c <__sanitizer_set_report_fd@@Base+0x5e5c>  // b.hs, b.nlast
   18d48:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18d4c:	mov	w0, #0x1                   	// #1
   18d50:	ldr	x2, [x19]
   18d54:	ldr	x1, [x1, #3768]
   18d58:	ldr	w2, [x2, #8]
   18d5c:	ldr	w1, [x1]
   18d60:	cmp	w2, w1
   18d64:	b.eq	18d7c <__sanitizer_set_report_fd@@Base+0x5e5c>  // b.none
   18d68:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18d6c:	ldr	x0, [x0, #3784]
   18d70:	ldr	w0, [x0]
   18d74:	cmp	w0, w2
   18d78:	cset	w0, eq  // eq = none
   18d7c:	ldp	x21, x30, [sp, #16]
   18d80:	ldp	x19, x20, [sp], #32
   18d84:	ret
   18d88:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   18d8c:	str	x0, [x20]
   18d90:	b	18d20 <__sanitizer_set_report_fd@@Base+0x5e00>
   18d94:	nop
   18d98:	stp	x19, x20, [sp, #-64]!
   18d9c:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18da0:	mov	x19, x1
   18da4:	ldr	x20, [x20, #4016]
   18da8:	stp	x21, x22, [sp, #16]
   18dac:	mov	x21, x0
   18db0:	ldr	x4, [x20]
   18db4:	str	x30, [sp, #32]
   18db8:	cbz	x4, 18e4c <__sanitizer_set_report_fd@@Base+0x5f2c>
   18dbc:	add	x4, x4, x4, lsl #2
   18dc0:	cmp	x19, x4, lsl #1
   18dc4:	lsl	x4, x4, #1
   18dc8:	b.cs	18e68 <__sanitizer_set_report_fd@@Base+0x5f48>  // b.hs, b.nlast
   18dcc:	add	x0, sp, #0x38
   18dd0:	mov	w22, #0x0                   	// #0
   18dd4:	bl	6400 <pipe@plt>
   18dd8:	mov	w20, w0
   18ddc:	cbz	w0, 18df4 <__sanitizer_set_report_fd@@Base+0x5ed4>
   18de0:	mov	w0, w22
   18de4:	ldp	x21, x22, [sp, #16]
   18de8:	ldr	x30, [sp, #32]
   18dec:	ldp	x19, x20, [sp], #64
   18df0:	ret
   18df4:	ldr	w0, [sp, #60]
   18df8:	mov	x2, x19
   18dfc:	mov	x1, x21
   18e00:	bl	15588 <__sanitizer_set_report_fd@@Base+0x2668>
   18e04:	mov	x21, x0
   18e08:	add	x1, sp, #0x34
   18e0c:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   18e10:	tst	w0, #0xff
   18e14:	b.eq	18e84 <__sanitizer_set_report_fd@@Base+0x5f64>  // b.none
   18e18:	ldrsw	x4, [sp, #52]
   18e1c:	mov	w22, w20
   18e20:	cmp	x4, #0xe
   18e24:	b.ne	18ea0 <__sanitizer_set_report_fd@@Base+0x5f80>  // b.any
   18e28:	ldr	w0, [sp, #56]
   18e2c:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   18e30:	ldr	w0, [sp, #60]
   18e34:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   18e38:	mov	w0, w22
   18e3c:	ldp	x21, x22, [sp, #16]
   18e40:	ldr	x30, [sp, #32]
   18e44:	ldp	x19, x20, [sp], #64
   18e48:	ret
   18e4c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   18e50:	mov	x4, x0
   18e54:	str	x0, [x20]
   18e58:	add	x4, x4, x4, lsl #2
   18e5c:	cmp	x19, x4, lsl #1
   18e60:	lsl	x4, x4, #1
   18e64:	b.cc	18dcc <__sanitizer_set_report_fd@@Base+0x5eac>  // b.lo, b.ul, b.last
   18e68:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18e6c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18e70:	mov	x3, x19
   18e74:	add	x2, x2, #0xe90
   18e78:	add	x0, x0, #0xcc0
   18e7c:	mov	w1, #0x118                 	// #280
   18e80:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18e84:	ldr	w0, [sp, #56]
   18e88:	cmp	x19, x21
   18e8c:	cset	w22, eq  // eq = none
   18e90:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   18e94:	ldr	w0, [sp, #60]
   18e98:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   18e9c:	b	18e38 <__sanitizer_set_report_fd@@Base+0x5f18>
   18ea0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18ea4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18ea8:	add	x2, x2, #0xeb0
   18eac:	add	x0, x0, #0xcc0
   18eb0:	mov	x3, #0xe                   	// #14
   18eb4:	mov	w1, #0x121                 	// #289
   18eb8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18ebc:	nop
   18ec0:	b	1a600 <OnPrint@@Base+0x670>
   18ec4:	nop
   18ec8:	adrp	x2, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18ecc:	stp	x19, x20, [sp, #-240]!
   18ed0:	ldr	x2, [x2, #4056]
   18ed4:	ldrb	w2, [x2, #215]
   18ed8:	str	x30, [sp, #16]
   18edc:	cbz	w2, 18fb4 <__sanitizer_set_report_fd@@Base+0x6094>
   18ee0:	mov	x20, x1
   18ee4:	mov	x19, x0
   18ee8:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   18eec:	cmp	x0, #0xbd
   18ef0:	b.hi	18f5c <__sanitizer_set_report_fd@@Base+0x603c>  // b.pmore
   18ef4:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x2c48>
   18ef8:	mov	x3, x0
   18efc:	mov	x4, x19
   18f00:	add	x19, sp, #0x28
   18f04:	mov	x1, #0xc8                  	// #200
   18f08:	mov	x0, x19
   18f0c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18f10:	add	x2, x2, #0xf08
   18f14:	bl	19f98 <OnPrint@@Base+0x8>
   18f18:	mov	w2, #0x1c0                 	// #448
   18f1c:	mov	w1, #0x242                 	// #578
   18f20:	mov	x0, x19
   18f24:	bl	63c0 <shm_open@plt>
   18f28:	mov	x1, x20
   18f2c:	mov	w20, w0
   18f30:	bl	155b0 <__sanitizer_set_report_fd@@Base+0x2690>
   18f34:	sxtw	x4, w0
   18f38:	cbnz	w0, 18f7c <__sanitizer_set_report_fd@@Base+0x605c>
   18f3c:	mov	x0, x19
   18f40:	bl	6760 <shm_unlink@plt>
   18f44:	sxtw	x4, w0
   18f48:	cbnz	w0, 18f98 <__sanitizer_set_report_fd@@Base+0x6078>
   18f4c:	mov	w0, w20
   18f50:	ldr	x30, [sp, #16]
   18f54:	ldp	x19, x20, [sp], #240
   18f58:	ret
   18f5c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18f60:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18f64:	add	x2, x2, #0xed0
   18f68:	add	x0, x0, #0xcc0
   18f6c:	mov	x4, #0x0                   	// #0
   18f70:	mov	x3, #0x0                   	// #0
   18f74:	mov	w1, #0x13c                 	// #316
   18f78:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18f7c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18f80:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18f84:	add	x2, x2, #0xf18
   18f88:	add	x0, x0, #0xcc0
   18f8c:	mov	x3, #0x0                   	// #0
   18f90:	mov	w1, #0x142                 	// #322
   18f94:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18f98:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18f9c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   18fa0:	add	x2, x2, #0xf18
   18fa4:	add	x0, x0, #0xcc0
   18fa8:	mov	x3, #0x0                   	// #0
   18fac:	mov	w1, #0x144                 	// #324
   18fb0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18fb4:	mov	w20, #0xffffffff            	// #-1
   18fb8:	b	18f4c <__sanitizer_set_report_fd@@Base+0x602c>
   18fbc:	nop
   18fc0:	stp	x19, x20, [sp, #-64]!
   18fc4:	mov	x19, x1
   18fc8:	stp	x21, x22, [sp, #16]
   18fcc:	mov	x21, x0
   18fd0:	stp	x23, x30, [sp, #32]
   18fd4:	cbz	x2, 19060 <__sanitizer_set_report_fd@@Base+0x6140>
   18fd8:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   18fdc:	mov	x0, x2
   18fe0:	bl	18ec8 <__sanitizer_set_report_fd@@Base+0x5fa8>
   18fe4:	cmn	w0, #0x1
   18fe8:	ldr	x20, [x20, #4016]
   18fec:	mov	w23, #0x4012                	// #16402
   18ff0:	mov	w3, #0x4032                	// #16434
   18ff4:	mov	w22, w0
   18ff8:	csel	w23, w23, w3, ne  // ne = any
   18ffc:	ldr	x2, [x20]
   19000:	cbz	x2, 19078 <__sanitizer_set_report_fd@@Base+0x6158>
   19004:	neg	x6, x2
   19008:	sub	x5, x2, #0x1
   1900c:	and	x0, x6, x21
   19010:	tst	x2, x5
   19014:	b.ne	19098 <__sanitizer_set_report_fd@@Base+0x6178>  // b.any
   19018:	mov	w4, w22
   1901c:	mov	w3, w23
   19020:	add	x1, x19, x5
   19024:	mov	w2, #0x3                   	// #3
   19028:	mov	x5, #0x0                   	// #0
   1902c:	and	x1, x1, x6
   19030:	bl	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   19034:	add	x1, sp, #0x3c
   19038:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1903c:	tst	w0, #0xff
   19040:	b.ne	190a8 <__sanitizer_set_report_fd@@Base+0x6188>  // b.any
   19044:	mov	x0, x19
   19048:	bl	f540 <__sancov_default_options@@Base+0x2df0>
   1904c:	mov	w0, #0x1                   	// #1
   19050:	ldp	x21, x22, [sp, #16]
   19054:	ldp	x23, x30, [sp, #32]
   19058:	ldp	x19, x20, [sp], #64
   1905c:	ret
   19060:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   19064:	mov	w22, #0xffffffff            	// #-1
   19068:	mov	w23, #0x4032                	// #16434
   1906c:	ldr	x20, [x20, #4016]
   19070:	ldr	x2, [x20]
   19074:	cbnz	x2, 19004 <__sanitizer_set_report_fd@@Base+0x60e4>
   19078:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1907c:	mov	x2, x0
   19080:	str	x0, [x20]
   19084:	neg	x6, x2
   19088:	sub	x5, x2, #0x1
   1908c:	and	x0, x6, x21
   19090:	tst	x2, x5
   19094:	b.eq	19018 <__sanitizer_set_report_fd@@Base+0x60f8>  // b.none
   19098:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1909c:	add	x0, x0, #0x160
   190a0:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   190a4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   190a8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   190ac:	ldr	w5, [sp, #60]
   190b0:	mov	x4, x21
   190b4:	mov	x3, x19
   190b8:	ldr	x1, [x1, #4024]
   190bc:	mov	x2, x19
   190c0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   190c4:	add	x0, x0, #0xf30
   190c8:	ldr	x1, [x1]
   190cc:	bl	1a328 <OnPrint@@Base+0x398>
   190d0:	mov	w0, #0x0                   	// #0
   190d4:	ldp	x21, x22, [sp, #16]
   190d8:	ldp	x23, x30, [sp, #32]
   190dc:	ldp	x19, x20, [sp], #64
   190e0:	ret
   190e4:	nop
   190e8:	stp	x19, x20, [sp, #-32]!
   190ec:	mov	x19, x0
   190f0:	mov	x20, x2
   190f4:	stp	x21, x30, [sp, #16]
   190f8:	mov	x21, x1
   190fc:	cbz	x3, 1912c <__sanitizer_set_report_fd@@Base+0x620c>
   19100:	mov	x0, x3
   19104:	mov	x5, #0x0                   	// #0
   19108:	mov	w4, #0xffffffff            	// #-1
   1910c:	mov	w3, #0x4032                	// #16434
   19110:	mov	w2, #0x0                   	// #0
   19114:	bl	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   19118:	stp	x0, x21, [x19]
   1911c:	str	x20, [x19, #16]
   19120:	ldp	x21, x30, [sp, #16]
   19124:	ldp	x19, x20, [sp], #32
   19128:	ret
   1912c:	mov	x5, #0x0                   	// #0
   19130:	mov	w4, #0xffffffff            	// #-1
   19134:	mov	w3, #0x4022                	// #16418
   19138:	mov	w2, #0x0                   	// #0
   1913c:	mov	x0, #0x0                   	// #0
   19140:	bl	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   19144:	stp	x0, x21, [x19]
   19148:	str	x20, [x19, #16]
   1914c:	ldp	x21, x30, [sp, #16]
   19150:	ldp	x19, x20, [sp], #32
   19154:	ret
   19158:	mov	x0, x1
   1915c:	mov	x1, x2
   19160:	b	17fb8 <__sanitizer_set_report_fd@@Base+0x5098>
   19164:	nop
   19168:	mov	x0, x1
   1916c:	mov	x1, x2
   19170:	b	17fb0 <__sanitizer_set_report_fd@@Base+0x5090>
   19174:	nop
   19178:	ldr	x4, [x0, #8]
   1917c:	str	x30, [sp, #-16]!
   19180:	mov	x5, x0
   19184:	cmp	x2, x4
   19188:	b.hi	191e4 <__sanitizer_set_report_fd@@Base+0x62c4>  // b.pmore
   1918c:	mov	x0, x1
   19190:	ldr	x1, [x5]
   19194:	cmp	x1, x0
   19198:	b.eq	191c0 <__sanitizer_set_report_fd@@Base+0x62a0>  // b.none
   1919c:	add	x1, x1, x4
   191a0:	add	x3, x2, x0
   191a4:	cmp	x3, x1
   191a8:	b.ne	19200 <__sanitizer_set_report_fd@@Base+0x62e0>  // b.any
   191ac:	ldr	x30, [sp], #16
   191b0:	sub	x4, x4, x2
   191b4:	str	x4, [x5, #8]
   191b8:	mov	x1, x2
   191bc:	b	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   191c0:	ldr	x30, [sp], #16
   191c4:	cmp	x2, x4
   191c8:	add	x1, x2, x0
   191cc:	sub	x4, x4, x2
   191d0:	csel	x1, x1, xzr, ne  // ne = any
   191d4:	str	x1, [x5]
   191d8:	str	x4, [x5, #8]
   191dc:	mov	x1, x2
   191e0:	b	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   191e4:	mov	x3, x2
   191e8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   191ec:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   191f0:	add	x0, x0, #0xcc0
   191f4:	add	x2, x2, #0xf80
   191f8:	mov	w1, #0x175                 	// #373
   191fc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   19200:	mov	x4, x1
   19204:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   19208:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1920c:	add	x2, x2, #0xf98
   19210:	add	x0, x0, #0xcc0
   19214:	mov	w1, #0x17a                 	// #378
   19218:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1921c:	nop
   19220:	stp	x19, x20, [sp, #-32]!
   19224:	mov	x19, x0
   19228:	mov	x20, x1
   1922c:	str	x30, [sp, #16]
   19230:	cbz	x2, 1926c <__sanitizer_set_report_fd@@Base+0x634c>
   19234:	mov	x0, x2
   19238:	bl	18ec8 <__sanitizer_set_report_fd@@Base+0x5fa8>
   1923c:	mov	w4, w0
   19240:	mov	w0, #0x4032                	// #16434
   19244:	cmn	w4, #0x1
   19248:	mov	x1, x20
   1924c:	mov	w3, #0x4012                	// #16402
   19250:	csel	w3, w3, w0, ne  // ne = any
   19254:	mov	x0, x19
   19258:	mov	x5, #0x0                   	// #0
   1925c:	ldr	x30, [sp, #16]
   19260:	mov	w2, #0x0                   	// #0
   19264:	ldp	x19, x20, [sp], #32
   19268:	b	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   1926c:	mov	x1, x20
   19270:	mov	x0, x19
   19274:	ldr	x30, [sp, #16]
   19278:	mov	w3, #0x4032                	// #16434
   1927c:	ldp	x19, x20, [sp], #32
   19280:	mov	w4, #0xffffffff            	// #-1
   19284:	mov	x5, #0x0                   	// #0
   19288:	mov	w2, #0x0                   	// #0
   1928c:	b	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   19290:	mov	x1, x0
   19294:	mov	x5, #0x0                   	// #0
   19298:	mov	w4, #0xffffffff            	// #-1
   1929c:	mov	w3, #0x4022                	// #16418
   192a0:	mov	w2, #0x0                   	// #0
   192a4:	mov	x0, #0x0                   	// #0
   192a8:	b	154e0 <__sanitizer_set_report_fd@@Base+0x25c0>
   192ac:	nop
   192b0:	adrp	x3, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   192b4:	ldr	x3, [x3, #3832]
   192b8:	cbz	x3, 192c0 <__sanitizer_set_report_fd@@Base+0x63a0>
   192bc:	b	64e0 <real_pthread_attr_getstack@plt>
   192c0:	b	6710 <pthread_attr_getstack@plt>
   192c4:	nop
   192c8:	stp	x19, x20, [sp, #-48]!
   192cc:	mov	x20, x0
   192d0:	add	x2, sp, #0x28
   192d4:	add	x1, sp, #0x20
   192d8:	str	x30, [sp, #16]
   192dc:	stp	xzr, xzr, [sp, #32]
   192e0:	bl	192b0 <__sanitizer_set_report_fd@@Base+0x6390>
   192e4:	ldr	x0, [sp, #32]
   192e8:	cbz	x0, 192f8 <__sanitizer_set_report_fd@@Base+0x63d8>
   192ec:	ldr	x1, [sp, #40]
   192f0:	cmn	x0, x1
   192f4:	b.ne	1931c <__sanitizer_set_report_fd@@Base+0x63fc>  // b.any
   192f8:	bl	174f8 <__sanitizer_set_report_fd@@Base+0x45d8>
   192fc:	add	x19, x0, #0x20, lsl #12
   19300:	ldr	x1, [sp, #40]
   19304:	cmp	x1, #0x0
   19308:	ccmp	x19, x1, #0x0, ne  // ne = any
   1930c:	b.hi	19354 <__sanitizer_set_report_fd@@Base+0x6434>  // b.pmore
   19310:	ldr	x30, [sp, #16]
   19314:	ldp	x19, x20, [sp], #48
   19318:	ret
   1931c:	bl	174f8 <__sanitizer_set_report_fd@@Base+0x45d8>
   19320:	add	x2, x0, #0x20, lsl #12
   19324:	ldr	x1, [sp, #40]
   19328:	cmp	x2, x1
   1932c:	b.ls	19310 <__sanitizer_set_report_fd@@Base+0x63f0>  // b.plast
   19330:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19334:	add	x0, x0, #0x8
   19338:	bl	1a2a0 <OnPrint@@Base+0x310>
   1933c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19340:	add	x0, x0, #0x48
   19344:	bl	1a2a0 <OnPrint@@Base+0x310>
   19348:	ldr	x30, [sp, #16]
   1934c:	ldp	x19, x20, [sp], #48
   19350:	ret
   19354:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   19358:	ldr	x0, [x0, #3896]
   1935c:	ldr	w0, [x0]
   19360:	cbnz	w0, 1937c <__sanitizer_set_report_fd@@Base+0x645c>
   19364:	mov	x1, x19
   19368:	mov	x0, x20
   1936c:	bl	6720 <pthread_attr_setstacksize@plt>
   19370:	ldr	x30, [sp, #16]
   19374:	ldp	x19, x20, [sp], #48
   19378:	ret
   1937c:	mov	x2, x19
   19380:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   19384:	add	x0, x0, #0xfd8
   19388:	bl	1a2a0 <OnPrint@@Base+0x310>
   1938c:	b	19364 <__sanitizer_set_report_fd@@Base+0x6444>
   19390:	stp	x19, x20, [sp, #-80]!
   19394:	mov	w20, w4
   19398:	stp	x21, x22, [sp, #16]
   1939c:	mov	w22, w2
   193a0:	mov	w21, w3
   193a4:	stp	x23, x24, [sp, #32]
   193a8:	mov	x23, x0
   193ac:	mov	x24, x1
   193b0:	str	x30, [sp, #48]
   193b4:	bl	15bd8 <__sanitizer_set_report_fd@@Base+0x2cb8>
   193b8:	mov	w19, w0
   193bc:	cmp	w0, #0x0
   193c0:	b.lt	19410 <__sanitizer_set_report_fd@@Base+0x64f0>  // b.tstop
   193c4:	b.eq	19438 <__sanitizer_set_report_fd@@Base+0x6518>  // b.none
   193c8:	cmn	w22, #0x1
   193cc:	b.eq	193d8 <__sanitizer_set_report_fd@@Base+0x64b8>  // b.none
   193d0:	mov	w0, w22
   193d4:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   193d8:	cmn	w21, #0x1
   193dc:	b.eq	193e8 <__sanitizer_set_report_fd@@Base+0x64c8>  // b.none
   193e0:	mov	w0, w21
   193e4:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   193e8:	cmn	w20, #0x1
   193ec:	b.eq	193f8 <__sanitizer_set_report_fd@@Base+0x64d8>  // b.none
   193f0:	mov	w0, w20
   193f4:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   193f8:	mov	w0, w19
   193fc:	ldp	x21, x22, [sp, #16]
   19400:	ldp	x23, x24, [sp, #32]
   19404:	ldr	x30, [sp, #48]
   19408:	ldp	x19, x20, [sp], #80
   1940c:	ret
   19410:	add	x1, sp, #0x4c
   19414:	sxtw	x0, w0
   19418:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1941c:	tst	w0, #0xff
   19420:	b.eq	193c8 <__sanitizer_set_report_fd@@Base+0x64a8>  // b.none
   19424:	ldr	w1, [sp, #76]
   19428:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1942c:	add	x0, x0, #0x78
   19430:	bl	1a328 <OnPrint@@Base+0x398>
   19434:	b	193c8 <__sanitizer_set_report_fd@@Base+0x64a8>
   19438:	cmn	w22, #0x1
   1943c:	b.eq	19458 <__sanitizer_set_report_fd@@Base+0x6538>  // b.none
   19440:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   19444:	mov	w1, #0x0                   	// #0
   19448:	mov	w0, w22
   1944c:	bl	15650 <__sanitizer_set_report_fd@@Base+0x2730>
   19450:	mov	w0, w22
   19454:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   19458:	cmn	w21, #0x1
   1945c:	b.eq	1947c <__sanitizer_set_report_fd@@Base+0x655c>  // b.none
   19460:	mov	w0, #0x1                   	// #1
   19464:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   19468:	mov	w1, #0x1                   	// #1
   1946c:	mov	w0, w21
   19470:	bl	15650 <__sanitizer_set_report_fd@@Base+0x2730>
   19474:	mov	w0, w21
   19478:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   1947c:	cmn	w20, #0x1
   19480:	b.eq	194a0 <__sanitizer_set_report_fd@@Base+0x6580>  // b.none
   19484:	mov	w0, #0x2                   	// #2
   19488:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   1948c:	mov	w1, #0x2                   	// #2
   19490:	mov	w0, w20
   19494:	bl	15650 <__sanitizer_set_report_fd@@Base+0x2730>
   19498:	mov	w0, w20
   1949c:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   194a0:	mov	w0, #0x4                   	// #4
   194a4:	bl	6900 <sysconf@plt>
   194a8:	mov	x19, x0
   194ac:	cmp	w0, #0x2
   194b0:	b.le	194c8 <__sanitizer_set_report_fd@@Base+0x65a8>
   194b4:	mov	w0, w19
   194b8:	sub	w19, w19, #0x1
   194bc:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   194c0:	cmp	w19, #0x2
   194c4:	b.ne	194b4 <__sanitizer_set_report_fd@@Base+0x6594>  // b.any
   194c8:	mov	x1, x24
   194cc:	mov	x0, x23
   194d0:	bl	63f0 <execv@plt>
   194d4:	mov	w0, #0x1                   	// #1
   194d8:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x27b0>
   194dc:	nop
   194e0:	stp	x19, x30, [sp, #-32]!
   194e4:	mov	w2, #0x1                   	// #1
   194e8:	add	x1, sp, #0x18
   194ec:	bl	15b50 <__sanitizer_set_report_fd@@Base+0x2c30>
   194f0:	add	x1, sp, #0x1c
   194f4:	mov	x19, x0
   194f8:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   194fc:	cmp	x19, #0x0
   19500:	cset	w19, eq  // eq = none
   19504:	tst	w0, #0xff
   19508:	b.ne	19518 <__sanitizer_set_report_fd@@Base+0x65f8>  // b.any
   1950c:	mov	w0, w19
   19510:	ldp	x19, x30, [sp], #32
   19514:	ret
   19518:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1951c:	mov	w19, #0x0                   	// #0
   19520:	ldr	x0, [x0, #3896]
   19524:	ldr	w0, [x0]
   19528:	cbz	w0, 1950c <__sanitizer_set_report_fd@@Base+0x65ec>
   1952c:	ldr	w1, [sp, #28]
   19530:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19534:	add	x0, x0, #0xa0
   19538:	bl	1a328 <OnPrint@@Base+0x398>
   1953c:	mov	w0, w19
   19540:	ldp	x19, x30, [sp], #32
   19544:	ret
   19548:	stp	x19, x30, [sp, #-32]!
   1954c:	mov	w2, #0x0                   	// #0
   19550:	add	x1, sp, #0x18
   19554:	bl	15b50 <__sanitizer_set_report_fd@@Base+0x2c30>
   19558:	add	x1, sp, #0x1c
   1955c:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   19560:	tst	w0, #0xff
   19564:	b.ne	19578 <__sanitizer_set_report_fd@@Base+0x6658>  // b.any
   19568:	ldr	w19, [sp, #24]
   1956c:	mov	w0, w19
   19570:	ldp	x19, x30, [sp], #32
   19574:	ret
   19578:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1957c:	mov	w19, #0xffffffff            	// #-1
   19580:	ldr	x0, [x0, #3896]
   19584:	ldr	w0, [x0]
   19588:	cbz	w0, 1956c <__sanitizer_set_report_fd@@Base+0x664c>
   1958c:	ldr	w1, [sp, #28]
   19590:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19594:	add	x0, x0, #0xa0
   19598:	bl	1a328 <OnPrint@@Base+0x398>
   1959c:	b	1956c <__sanitizer_set_report_fd@@Base+0x664c>
   195a0:	cmp	w0, #0x1
   195a4:	cset	w0, eq  // eq = none
   195a8:	ret
   195ac:	nop
   195b0:	mov	x7, x0
   195b4:	cbz	x4, 1965c <__sanitizer_set_report_fd@@Base+0x673c>
   195b8:	ldrb	w6, [x4]
   195bc:	cbz	w6, 1966c <__sanitizer_set_report_fd@@Base+0x674c>
   195c0:	cbz	w3, 19678 <__sanitizer_set_report_fd@@Base+0x6758>
   195c4:	mov	w8, #0x0                   	// #0
   195c8:	ldr	x5, [x7]
   195cc:	b	195d8 <__sanitizer_set_report_fd@@Base+0x66b8>
   195d0:	b.eq	19600 <__sanitizer_set_report_fd@@Base+0x66e0>  // b.none
   195d4:	mov	w8, w0
   195d8:	cmp	x1, x5
   195dc:	b.ls	195f0 <__sanitizer_set_report_fd@@Base+0x66d0>  // b.plast
   195e0:	strb	w6, [x5]
   195e4:	ldr	x5, [x7]
   195e8:	add	x5, x5, #0x1
   195ec:	str	x5, [x7]
   195f0:	ldrb	w6, [x4, #1]!
   195f4:	add	w0, w8, #0x1
   195f8:	cmp	w3, w0
   195fc:	cbnz	w6, 195d0 <__sanitizer_set_report_fd@@Base+0x66b0>
   19600:	mvn	w3, w8
   19604:	cmp	w2, w3
   19608:	b.ge	19658 <__sanitizer_set_report_fd@@Base+0x6738>  // b.tcont
   1960c:	ldr	x5, [x7]
   19610:	mov	w3, w0
   19614:	mov	w6, #0x20                  	// #32
   19618:	add	w3, w3, #0x1
   1961c:	cmp	x1, x5
   19620:	neg	w4, w3
   19624:	b.ls	19638 <__sanitizer_set_report_fd@@Base+0x6718>  // b.plast
   19628:	strb	w6, [x5]
   1962c:	ldr	x5, [x7]
   19630:	add	x5, x5, #0x1
   19634:	str	x5, [x7]
   19638:	cmp	w2, w4
   1963c:	b.lt	19618 <__sanitizer_set_report_fd@@Base+0x66f8>  // b.tstop
   19640:	mvn	w1, w0
   19644:	add	w0, w0, #0x1
   19648:	cmp	w2, w1
   1964c:	sub	w2, w1, w2
   19650:	csel	w2, w2, wzr, le
   19654:	add	w0, w2, w0
   19658:	ret
   1965c:	adrp	x4, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19660:	mov	w6, #0x3c                  	// #60
   19664:	add	x4, x4, #0xd0
   19668:	b	195c0 <__sanitizer_set_report_fd@@Base+0x66a0>
   1966c:	mov	w3, #0x0                   	// #0
   19670:	mov	w0, #0x0                   	// #0
   19674:	b	19604 <__sanitizer_set_report_fd@@Base+0x66e4>
   19678:	mov	w0, #0x0                   	// #0
   1967c:	b	19604 <__sanitizer_set_report_fd@@Base+0x66e4>
   19680:	stp	x19, x20, [sp, #-320]!
   19684:	and	w3, w3, #0xff
   19688:	cmp	w3, #0xa
   1968c:	cset	w8, ne  // ne = any
   19690:	stp	x21, x22, [sp, #16]
   19694:	cmp	w8, #0x0
   19698:	stp	x23, x24, [sp, #32]
   1969c:	ccmp	w3, #0x10, #0x4, ne  // ne = any
   196a0:	stp	x25, x26, [sp, #48]
   196a4:	str	x30, [sp, #64]
   196a8:	b.ne	198bc <__sanitizer_set_report_fd@@Base+0x699c>  // b.any
   196ac:	and	w24, w6, #0xff
   196b0:	cmp	w8, #0x0
   196b4:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   196b8:	b.ne	198e0 <__sanitizer_set_report_fd@@Base+0x69c0>  // b.any
   196bc:	cmp	x2, #0x0
   196c0:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   196c4:	b.ne	198f0 <__sanitizer_set_report_fd@@Base+0x69d0>  // b.any
   196c8:	and	w23, w4, #0xff
   196cc:	cmp	w23, #0x1d
   196d0:	b.hi	19900 <__sanitizer_set_report_fd@@Base+0x69e0>  // b.pmore
   196d4:	cmp	w23, #0x0
   196d8:	mov	x19, x0
   196dc:	sub	w0, w23, #0x1
   196e0:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   196e4:	and	w0, w0, #0xff
   196e8:	and	w25, w5, #0xff
   196ec:	csel	w23, w0, w23, ne  // ne = any
   196f0:	cmp	w24, #0x0
   196f4:	mov	x20, x1
   196f8:	and	w26, w7, #0xff
   196fc:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   19700:	mov	w21, #0x0                   	// #0
   19704:	b.ne	19754 <__sanitizer_set_report_fd@@Base+0x6834>  // b.any
   19708:	add	x22, sp, #0x50
   1970c:	and	x3, x3, #0xff
   19710:	mov	x9, x22
   19714:	mov	w8, #0x0                   	// #0
   19718:	udiv	x10, x2, x3
   1971c:	mov	w12, w8
   19720:	cmp	x2, x3
   19724:	add	w8, w8, #0x1
   19728:	msub	x11, x10, x3, x2
   1972c:	mov	x2, x10
   19730:	str	x11, [x9]
   19734:	b.cc	1977c <__sanitizer_set_report_fd@@Base+0x685c>  // b.lo, b.ul, b.last
   19738:	add	x9, x9, #0x8
   1973c:	cmp	w8, #0x1e
   19740:	b.ne	19718 <__sanitizer_set_report_fd@@Base+0x67f8>  // b.any
   19744:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19748:	add	x0, x0, #0x150
   1974c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   19750:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19754:	ldr	x8, [x19]
   19758:	mov	w21, #0x1                   	// #1
   1975c:	cmp	x1, x8
   19760:	b.ls	19708 <__sanitizer_set_report_fd@@Base+0x67e8>  // b.plast
   19764:	mov	w0, #0x2d                  	// #45
   19768:	strb	w0, [x8]
   1976c:	ldr	x8, [x19]
   19770:	add	x8, x8, #0x1
   19774:	str	x8, [x19]
   19778:	b	19708 <__sanitizer_set_report_fd@@Base+0x67e8>
   1977c:	cmp	w8, w23
   19780:	sxtw	x0, w12
   19784:	b.lt	19898 <__sanitizer_set_report_fd@@Base+0x6978>  // b.tstop
   19788:	add	w1, w21, #0x1
   1978c:	mov	w3, #0x20                  	// #32
   19790:	add	w12, w1, w12
   19794:	mov	w2, #0x30                  	// #48
   19798:	b	197a8 <__sanitizer_set_report_fd@@Base+0x6888>
   1979c:	add	x1, x22, x0, lsl #3
   197a0:	sub	x0, x0, #0x1
   197a4:	ldur	x11, [x1, #-8]
   197a8:	mov	w5, w0
   197ac:	cbnz	x11, 198cc <__sanitizer_set_report_fd@@Base+0x69ac>
   197b0:	ldr	x8, [x19]
   197b4:	cmp	w0, #0x0
   197b8:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   197bc:	csel	w1, w3, w2, eq  // eq = none
   197c0:	cmp	x20, x8
   197c4:	b.ls	197d8 <__sanitizer_set_report_fd@@Base+0x68b8>  // b.plast
   197c8:	strb	w1, [x8]
   197cc:	ldr	x8, [x19]
   197d0:	add	x8, x8, #0x1
   197d4:	str	x8, [x19]
   197d8:	add	w21, w21, #0x1
   197dc:	cmp	w12, w21
   197e0:	b.ne	1979c <__sanitizer_set_report_fd@@Base+0x687c>  // b.any
   197e4:	eor	w25, w25, #0x1
   197e8:	mov	w5, #0xffffffff            	// #-1
   197ec:	tst	w24, w25
   197f0:	b.eq	1987c <__sanitizer_set_report_fd@@Base+0x695c>  // b.none
   197f4:	cmp	x20, x8
   197f8:	b.hi	19910 <__sanitizer_set_report_fd@@Base+0x69f0>  // b.pmore
   197fc:	add	w21, w21, #0x1
   19800:	cmn	w5, #0x1
   19804:	b.eq	1987c <__sanitizer_set_report_fd@@Base+0x695c>  // b.none
   19808:	cmp	w26, #0x0
   1980c:	sub	w2, w5, #0x1
   19810:	mov	w4, #0x41                  	// #65
   19814:	mov	w0, #0x61                  	// #97
   19818:	csel	w4, w4, w0, ne  // ne = any
   1981c:	sxtw	x2, w2
   19820:	ldr	x8, [x19]
   19824:	sub	w4, w4, #0xa
   19828:	mov	x6, #0xfffffffffffffffe    	// #-2
   1982c:	nop
   19830:	add	x0, x22, x2, lsl #3
   19834:	ldrb	w3, [x0, #8]
   19838:	add	w1, w3, #0x30
   1983c:	add	w0, w3, w4
   19840:	cmp	w3, #0x9
   19844:	and	w1, w1, #0xff
   19848:	and	w0, w0, #0xff
   1984c:	csel	w0, w0, w1, hi  // hi = pmore
   19850:	cmp	x20, x8
   19854:	b.ls	19868 <__sanitizer_set_report_fd@@Base+0x6948>  // b.plast
   19858:	strb	w0, [x8]
   1985c:	ldr	x8, [x19]
   19860:	add	x8, x8, #0x1
   19864:	str	x8, [x19]
   19868:	sub	x2, x2, #0x1
   1986c:	cmp	x6, x2
   19870:	b.ne	19830 <__sanitizer_set_report_fd@@Base+0x6910>  // b.any
   19874:	add	w21, w21, #0x1
   19878:	add	w21, w5, w21
   1987c:	mov	w0, w21
   19880:	ldp	x21, x22, [sp, #16]
   19884:	ldp	x23, x24, [sp, #32]
   19888:	ldp	x25, x26, [sp, #48]
   1988c:	ldr	x30, [sp, #64]
   19890:	ldp	x19, x20, [sp], #320
   19894:	ret
   19898:	sub	w2, w23, w8
   1989c:	add	x0, x22, w8, sxtw #3
   198a0:	mov	w1, #0x0                   	// #0
   198a4:	sbfiz	x2, x2, #3, #32
   198a8:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   198ac:	sub	w12, w23, #0x1
   198b0:	sxtw	x0, w12
   198b4:	ldr	x11, [x22, x0, lsl #3]
   198b8:	b	19788 <__sanitizer_set_report_fd@@Base+0x6868>
   198bc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   198c0:	add	x0, x0, #0xd8
   198c4:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   198c8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   198cc:	eor	w25, w25, #0x1
   198d0:	tst	w24, w25
   198d4:	b.eq	19800 <__sanitizer_set_report_fd@@Base+0x68e0>  // b.none
   198d8:	ldr	x8, [x19]
   198dc:	b	197f4 <__sanitizer_set_report_fd@@Base+0x68d4>
   198e0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   198e4:	add	x0, x0, #0xf8
   198e8:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   198ec:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   198f0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   198f4:	add	x0, x0, #0x110
   198f8:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   198fc:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19900:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19904:	add	x0, x0, #0x130
   19908:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1990c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19910:	mov	w0, #0x2d                  	// #45
   19914:	strb	w0, [x8]
   19918:	ldr	x8, [x19]
   1991c:	add	x8, x8, #0x1
   19920:	str	x8, [x19]
   19924:	b	197fc <__sanitizer_set_report_fd@@Base+0x68dc>
   19928:	stp	x19, x20, [sp, #-112]!
   1992c:	stp	x23, x24, [sp, #32]
   19930:	stp	x27, x28, [sp, #64]
   19934:	str	x30, [sp, #80]
   19938:	str	x0, [sp, #104]
   1993c:	cbz	x2, 19e98 <__sanitizer_set_report_fd@@Base+0x6f78>
   19940:	cmp	w1, #0x0
   19944:	b.le	19eb0 <__sanitizer_set_report_fd@@Base+0x6f90>
   19948:	ldrb	w4, [x2]
   1994c:	sxtw	x19, w1
   19950:	sub	x28, x19, #0x1
   19954:	mov	x20, x0
   19958:	add	x28, x0, x28
   1995c:	cbz	w4, 19f60 <__sanitizer_set_report_fd@@Base+0x7040>
   19960:	add	x27, sp, #0x68
   19964:	mov	w24, #0x0                   	// #0
   19968:	stp	x21, x22, [sp, #16]
   1996c:	adrp	x21, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19970:	add	x21, x21, #0x260
   19974:	stp	x25, x26, [sp, #48]
   19978:	ldr	w26, [x3, #24]
   1997c:	ldp	x25, x22, [x3]
   19980:	b	199b8 <__sanitizer_set_report_fd@@Base+0x6a98>
   19984:	ldr	x0, [sp, #104]
   19988:	cmp	x28, x0
   1998c:	b.ls	199a0 <__sanitizer_set_report_fd@@Base+0x6a80>  // b.plast
   19990:	strb	w4, [x0]
   19994:	ldr	x0, [sp, #104]
   19998:	add	x0, x0, #0x1
   1999c:	str	x0, [sp, #104]
   199a0:	mov	x0, x23
   199a4:	add	w24, w24, #0x1
   199a8:	mov	x23, x2
   199ac:	mov	x2, x0
   199b0:	ldrb	w4, [x23, #1]
   199b4:	cbz	w4, 19b58 <__sanitizer_set_report_fd@@Base+0x6c38>
   199b8:	cmp	w4, #0x25
   199bc:	add	x23, x2, #0x1
   199c0:	b.ne	19984 <__sanitizer_set_report_fd@@Base+0x6a64>  // b.any
   199c4:	ldrb	w1, [x2, #1]
   199c8:	cmp	w1, #0x2d
   199cc:	mov	w4, w1
   199d0:	b.ne	199dc <__sanitizer_set_report_fd@@Base+0x6abc>  // b.any
   199d4:	ldrb	w4, [x2, #2]
   199d8:	add	x23, x2, #0x2
   199dc:	sub	w0, w4, #0x30
   199e0:	mov	w8, #0x0                   	// #0
   199e4:	and	w0, w0, #0xff
   199e8:	cmp	w0, #0x9
   199ec:	cset	w6, ls  // ls = plast
   199f0:	cmp	w4, #0x30
   199f4:	cset	w5, eq  // eq = none
   199f8:	cmp	w0, #0x9
   199fc:	b.ls	19a68 <__sanitizer_set_report_fd@@Base+0x6b48>  // b.plast
   19a00:	cmp	w4, #0x2e
   19a04:	mov	w7, #0x1                   	// #1
   19a08:	mov	w3, #0xffffffff            	// #-1
   19a0c:	b.eq	19aac <__sanitizer_set_report_fd@@Base+0x6b8c>  // b.none
   19a10:	cmp	w4, #0x7a
   19a14:	cinc	x23, x23, eq  // eq = none
   19a18:	cset	w2, eq  // eq = none
   19a1c:	ldrb	w4, [x23]
   19a20:	b.eq	19a2c <__sanitizer_set_report_fd@@Base+0x6b0c>  // b.none
   19a24:	cmp	w4, #0x6c
   19a28:	b.eq	19ac8 <__sanitizer_set_report_fd@@Base+0x6ba8>  // b.none
   19a2c:	cmp	w1, #0x2d
   19a30:	orr	w6, w6, w2
   19a34:	ccmp	w7, #0x0, #0x4, ne  // ne = any
   19a38:	mov	w9, #0x0                   	// #0
   19a3c:	b.ne	19af8 <__sanitizer_set_report_fd@@Base+0x6bd8>  // b.any
   19a40:	cmp	w4, #0x73
   19a44:	b.eq	19cf8 <__sanitizer_set_report_fd@@Base+0x6dd8>  // b.none
   19a48:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19a4c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19a50:	add	x2, x2, #0x188
   19a54:	add	x0, x0, #0x1c8
   19a58:	mov	x4, #0x0                   	// #0
   19a5c:	mov	x3, #0x0                   	// #0
   19a60:	mov	w1, #0xa9                  	// #169
   19a64:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   19a68:	add	w8, w8, w8, lsl #2
   19a6c:	add	w8, w4, w8, lsl #1
   19a70:	ldrb	w4, [x23, #1]!
   19a74:	sub	w8, w8, #0x30
   19a78:	sub	w2, w4, #0x30
   19a7c:	and	w2, w2, #0xff
   19a80:	cmp	w2, #0x9
   19a84:	b.hi	19a00 <__sanitizer_set_report_fd@@Base+0x6ae0>  // b.pmore
   19a88:	add	w8, w8, w8, lsl #2
   19a8c:	add	w8, w4, w8, lsl #1
   19a90:	ldrb	w4, [x23, #1]!
   19a94:	sub	w8, w8, #0x30
   19a98:	sub	w2, w4, #0x30
   19a9c:	and	w2, w2, #0xff
   19aa0:	cmp	w2, #0x9
   19aa4:	b.ls	19a68 <__sanitizer_set_report_fd@@Base+0x6b48>  // b.plast
   19aa8:	b	19a00 <__sanitizer_set_report_fd@@Base+0x6ae0>
   19aac:	ldrb	w2, [x23, #1]
   19ab0:	cmp	w2, #0x2a
   19ab4:	b.eq	19db8 <__sanitizer_set_report_fd@@Base+0x6e98>  // b.none
   19ab8:	ldrb	w4, [x23]
   19abc:	mov	w2, #0x0                   	// #0
   19ac0:	cmp	w4, #0x6c
   19ac4:	b.ne	19a2c <__sanitizer_set_report_fd@@Base+0x6b0c>  // b.any
   19ac8:	ldrb	w9, [x23, #1]
   19acc:	cmp	w9, #0x6c
   19ad0:	b.ne	19a2c <__sanitizer_set_report_fd@@Base+0x6b0c>  // b.any
   19ad4:	cmp	w1, #0x2d
   19ad8:	mov	w2, #0x1                   	// #1
   19adc:	ldrb	w4, [x23, #2]
   19ae0:	mov	w6, w2
   19ae4:	add	x23, x23, #0x2
   19ae8:	mov	w9, w2
   19aec:	ccmp	w7, #0x0, #0x4, ne  // ne = any
   19af0:	b.eq	19a40 <__sanitizer_set_report_fd@@Base+0x6b20>  // b.none
   19af4:	nop
   19af8:	cmp	w4, #0x64
   19afc:	b.eq	19cb0 <__sanitizer_set_report_fd@@Base+0x6d90>  // b.none
   19b00:	b.hi	19b94 <__sanitizer_set_report_fd@@Base+0x6c74>  // b.pmore
   19b04:	cmp	w4, #0x58
   19b08:	b.eq	19c74 <__sanitizer_set_report_fd@@Base+0x6d54>  // b.none
   19b0c:	cmp	w4, #0x63
   19b10:	b.ne	19c0c <__sanitizer_set_report_fd@@Base+0x6cec>  // b.any
   19b14:	cbnz	w6, 19c48 <__sanitizer_set_report_fd@@Base+0x6d28>
   19b18:	tbnz	w26, #31, 19d98 <__sanitizer_set_report_fd@@Base+0x6e78>
   19b1c:	add	x0, x25, #0xb
   19b20:	mov	x1, x25
   19b24:	and	x25, x0, #0xfffffffffffffff8
   19b28:	ldr	x0, [sp, #104]
   19b2c:	cmp	x28, x0
   19b30:	b.ls	19b48 <__sanitizer_set_report_fd@@Base+0x6c28>  // b.plast
   19b34:	ldr	w1, [x1]
   19b38:	strb	w1, [x0]
   19b3c:	ldr	x0, [sp, #104]
   19b40:	add	x0, x0, #0x1
   19b44:	str	x0, [sp, #104]
   19b48:	add	w24, w24, #0x1
   19b4c:	add	x2, x23, #0x1
   19b50:	ldrb	w4, [x23, #1]
   19b54:	cbnz	w4, 199b8 <__sanitizer_set_report_fd@@Base+0x6a98>
   19b58:	ldp	x21, x22, [sp, #16]
   19b5c:	ldp	x25, x26, [sp, #48]
   19b60:	ldr	x0, [sp, #104]
   19b64:	cmp	x28, x0
   19b68:	b.cc	19f68 <__sanitizer_set_report_fd@@Base+0x7048>  // b.lo, b.ul, b.last
   19b6c:	add	x19, x20, x19
   19b70:	cmp	x0, x19
   19b74:	b.cs	19b7c <__sanitizer_set_report_fd@@Base+0x6c5c>  // b.hs, b.nlast
   19b78:	strb	wzr, [x0]
   19b7c:	mov	w0, w24
   19b80:	ldp	x23, x24, [sp, #32]
   19b84:	ldp	x27, x28, [sp, #64]
   19b88:	ldr	x30, [sp, #80]
   19b8c:	ldp	x19, x20, [sp], #112
   19b90:	ret
   19b94:	cmp	w4, #0x70
   19b98:	b.ne	19c40 <__sanitizer_set_report_fd@@Base+0x6d20>  // b.any
   19b9c:	cbnz	w6, 19c48 <__sanitizer_set_report_fd@@Base+0x6d28>
   19ba0:	tbnz	w26, #31, 19d78 <__sanitizer_set_report_fd@@Base+0x6e58>
   19ba4:	add	x1, x25, #0xf
   19ba8:	mov	x0, x25
   19bac:	and	x25, x1, #0xfffffffffffffff8
   19bb0:	ldr	x9, [x0]
   19bb4:	mov	x4, x21
   19bb8:	mov	x1, x28
   19bbc:	mov	w3, #0xffffffff            	// #-1
   19bc0:	mov	w2, #0x0                   	// #0
   19bc4:	mov	x0, x27
   19bc8:	bl	195b0 <__sanitizer_set_report_fd@@Base+0x6690>
   19bcc:	mov	w8, w0
   19bd0:	mov	x2, x9
   19bd4:	mov	x1, x28
   19bd8:	mov	x0, x27
   19bdc:	mov	w7, #0x0                   	// #0
   19be0:	mov	w6, #0x0                   	// #0
   19be4:	mov	w5, #0x1                   	// #1
   19be8:	mov	w4, #0xc                   	// #12
   19bec:	mov	w3, #0x10                  	// #16
   19bf0:	str	w8, [sp, #100]
   19bf4:	bl	19680 <__sanitizer_set_report_fd@@Base+0x6760>
   19bf8:	ldr	w8, [sp, #100]
   19bfc:	add	x2, x23, #0x1
   19c00:	add	w8, w8, w0
   19c04:	add	w24, w24, w8
   19c08:	b	199b0 <__sanitizer_set_report_fd@@Base+0x6a90>
   19c0c:	cmp	w4, #0x25
   19c10:	b.ne	19c48 <__sanitizer_set_report_fd@@Base+0x6d28>  // b.any
   19c14:	cbnz	w6, 19c48 <__sanitizer_set_report_fd@@Base+0x6d28>
   19c18:	ldr	x0, [sp, #104]
   19c1c:	cmp	x28, x0
   19c20:	b.ls	19b48 <__sanitizer_set_report_fd@@Base+0x6c28>  // b.plast
   19c24:	strb	w4, [x0]
   19c28:	add	w24, w24, #0x1
   19c2c:	add	x2, x23, #0x1
   19c30:	ldr	x0, [sp, #104]
   19c34:	add	x0, x0, #0x1
   19c38:	str	x0, [sp, #104]
   19c3c:	b	19b50 <__sanitizer_set_report_fd@@Base+0x6c30>
   19c40:	cmp	w4, #0x6f
   19c44:	b.hi	19c58 <__sanitizer_set_report_fd@@Base+0x6d38>  // b.pmore
   19c48:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19c4c:	add	x0, x0, #0x208
   19c50:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   19c54:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19c58:	cmp	w4, #0x78
   19c5c:	b.eq	19c74 <__sanitizer_set_report_fd@@Base+0x6d54>  // b.none
   19c60:	b.hi	19c48 <__sanitizer_set_report_fd@@Base+0x6d28>  // b.pmore
   19c64:	cmp	w4, #0x73
   19c68:	b.eq	19cf8 <__sanitizer_set_report_fd@@Base+0x6dd8>  // b.none
   19c6c:	cmp	w4, #0x75
   19c70:	b.ne	19c48 <__sanitizer_set_report_fd@@Base+0x6d28>  // b.any
   19c74:	cbz	w9, 19d5c <__sanitizer_set_report_fd@@Base+0x6e3c>
   19c78:	tbnz	w26, #31, 19e78 <__sanitizer_set_report_fd@@Base+0x6f58>
   19c7c:	add	x1, x25, #0xf
   19c80:	mov	x0, x25
   19c84:	and	x25, x1, #0xfffffffffffffff8
   19c88:	ldr	x2, [x0]
   19c8c:	cmp	w4, #0x58
   19c90:	cset	w7, eq  // eq = none
   19c94:	cmp	w4, #0x75
   19c98:	mov	w3, #0xa                   	// #10
   19c9c:	mov	w0, #0x10                  	// #16
   19ca0:	mov	w4, w8
   19ca4:	csel	w3, w3, w0, eq  // eq = none
   19ca8:	mov	w6, #0x0                   	// #0
   19cac:	b	19ce0 <__sanitizer_set_report_fd@@Base+0x6dc0>
   19cb0:	cbz	w9, 19d40 <__sanitizer_set_report_fd@@Base+0x6e20>
   19cb4:	tbnz	w26, #31, 19e58 <__sanitizer_set_report_fd@@Base+0x6f38>
   19cb8:	add	x1, x25, #0xf
   19cbc:	mov	x0, x25
   19cc0:	and	x25, x1, #0xfffffffffffffff8
   19cc4:	ldr	x6, [x0]
   19cc8:	cmp	x6, #0x0
   19ccc:	cneg	x2, x6, lt  // lt = tstop
   19cd0:	mov	w4, w8
   19cd4:	lsr	x6, x6, #63
   19cd8:	mov	w7, #0x0                   	// #0
   19cdc:	mov	w3, #0xa                   	// #10
   19ce0:	mov	x1, x28
   19ce4:	mov	x0, x27
   19ce8:	bl	19680 <__sanitizer_set_report_fd@@Base+0x6760>
   19cec:	add	w24, w24, w0
   19cf0:	add	x2, x23, #0x1
   19cf4:	b	199b0 <__sanitizer_set_report_fd@@Base+0x6a90>
   19cf8:	cbnz	w2, 19c48 <__sanitizer_set_report_fd@@Base+0x6d28>
   19cfc:	cmp	w1, #0x2d
   19d00:	ccmp	w0, #0x9, #0x2, ne  // ne = any
   19d04:	b.ls	19df8 <__sanitizer_set_report_fd@@Base+0x6ed8>  // b.plast
   19d08:	cmp	w1, #0x2d
   19d0c:	cneg	w8, w8, eq  // eq = none
   19d10:	tbnz	w26, #31, 19e18 <__sanitizer_set_report_fd@@Base+0x6ef8>
   19d14:	add	x1, x25, #0xf
   19d18:	mov	x0, x25
   19d1c:	and	x25, x1, #0xfffffffffffffff8
   19d20:	ldr	x4, [x0]
   19d24:	mov	w2, w8
   19d28:	mov	x1, x28
   19d2c:	mov	x0, x27
   19d30:	bl	195b0 <__sanitizer_set_report_fd@@Base+0x6690>
   19d34:	add	w24, w24, w0
   19d38:	add	x2, x23, #0x1
   19d3c:	b	199b0 <__sanitizer_set_report_fd@@Base+0x6a90>
   19d40:	cbnz	w2, 19cb4 <__sanitizer_set_report_fd@@Base+0x6d94>
   19d44:	tbnz	w26, #31, 19eec <__sanitizer_set_report_fd@@Base+0x6fcc>
   19d48:	mov	x0, x25
   19d4c:	add	x1, x25, #0xb
   19d50:	and	x25, x1, #0xfffffffffffffff8
   19d54:	ldrsw	x6, [x0]
   19d58:	b	19cc8 <__sanitizer_set_report_fd@@Base+0x6da8>
   19d5c:	cbnz	w2, 19c78 <__sanitizer_set_report_fd@@Base+0x6d58>
   19d60:	tbnz	w26, #31, 19ec8 <__sanitizer_set_report_fd@@Base+0x6fa8>
   19d64:	mov	x0, x25
   19d68:	add	x1, x25, #0xb
   19d6c:	and	x25, x1, #0xfffffffffffffff8
   19d70:	ldr	w2, [x0]
   19d74:	b	19c8c <__sanitizer_set_report_fd@@Base+0x6d6c>
   19d78:	add	w1, w26, #0x8
   19d7c:	cmp	w1, #0x0
   19d80:	b.le	19de0 <__sanitizer_set_report_fd@@Base+0x6ec0>
   19d84:	add	x2, x25, #0xf
   19d88:	mov	x0, x25
   19d8c:	mov	w26, w1
   19d90:	and	x25, x2, #0xfffffffffffffff8
   19d94:	b	19bb0 <__sanitizer_set_report_fd@@Base+0x6c90>
   19d98:	add	w0, w26, #0x8
   19d9c:	cmp	w0, #0x0
   19da0:	b.le	19dec <__sanitizer_set_report_fd@@Base+0x6ecc>
   19da4:	add	x2, x25, #0xb
   19da8:	mov	x1, x25
   19dac:	mov	w26, w0
   19db0:	and	x25, x2, #0xfffffffffffffff8
   19db4:	b	19b28 <__sanitizer_set_report_fd@@Base+0x6c08>
   19db8:	add	x2, x23, #0x2
   19dbc:	tbnz	w26, #31, 19e38 <__sanitizer_set_report_fd@@Base+0x6f18>
   19dc0:	add	x4, x25, #0xb
   19dc4:	mov	x3, x25
   19dc8:	and	x25, x4, #0xfffffffffffffff8
   19dcc:	ldr	w3, [x3]
   19dd0:	ldrb	w4, [x23, #2]
   19dd4:	mov	x23, x2
   19dd8:	lsr	w7, w3, #31
   19ddc:	b	19a10 <__sanitizer_set_report_fd@@Base+0x6af0>
   19de0:	add	x0, x22, w26, sxtw
   19de4:	mov	w26, w1
   19de8:	b	19bb0 <__sanitizer_set_report_fd@@Base+0x6c90>
   19dec:	add	x1, x22, w26, sxtw
   19df0:	mov	w26, w0
   19df4:	b	19b28 <__sanitizer_set_report_fd@@Base+0x6c08>
   19df8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19dfc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19e00:	add	x2, x2, #0x268
   19e04:	add	x0, x0, #0x1c8
   19e08:	mov	x4, #0x0                   	// #0
   19e0c:	mov	x3, #0x0                   	// #0
   19e10:	mov	w1, #0xc6                  	// #198
   19e14:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   19e18:	add	w1, w26, #0x8
   19e1c:	cmp	w1, #0x0
   19e20:	b.le	19f10 <__sanitizer_set_report_fd@@Base+0x6ff0>
   19e24:	add	x2, x25, #0xf
   19e28:	mov	x0, x25
   19e2c:	mov	w26, w1
   19e30:	and	x25, x2, #0xfffffffffffffff8
   19e34:	b	19d20 <__sanitizer_set_report_fd@@Base+0x6e00>
   19e38:	add	w4, w26, #0x8
   19e3c:	cmp	w4, #0x0
   19e40:	b.le	19f1c <__sanitizer_set_report_fd@@Base+0x6ffc>
   19e44:	add	x7, x25, #0xb
   19e48:	mov	x3, x25
   19e4c:	mov	w26, w4
   19e50:	and	x25, x7, #0xfffffffffffffff8
   19e54:	b	19dcc <__sanitizer_set_report_fd@@Base+0x6eac>
   19e58:	add	w1, w26, #0x8
   19e5c:	cmp	w1, #0x0
   19e60:	b.le	19f34 <__sanitizer_set_report_fd@@Base+0x7014>
   19e64:	add	x2, x25, #0xf
   19e68:	mov	x0, x25
   19e6c:	mov	w26, w1
   19e70:	and	x25, x2, #0xfffffffffffffff8
   19e74:	b	19cc4 <__sanitizer_set_report_fd@@Base+0x6da4>
   19e78:	add	w1, w26, #0x8
   19e7c:	cmp	w1, #0x0
   19e80:	b.le	19f28 <__sanitizer_set_report_fd@@Base+0x7008>
   19e84:	add	x2, x25, #0xf
   19e88:	mov	x0, x25
   19e8c:	mov	w26, w1
   19e90:	and	x25, x2, #0xfffffffffffffff8
   19e94:	b	19c88 <__sanitizer_set_report_fd@@Base+0x6d68>
   19e98:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19e9c:	add	x0, x0, #0x170
   19ea0:	stp	x21, x22, [sp, #16]
   19ea4:	stp	x25, x26, [sp, #48]
   19ea8:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   19eac:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19eb0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19eb4:	add	x0, x0, #0x178
   19eb8:	stp	x21, x22, [sp, #16]
   19ebc:	stp	x25, x26, [sp, #48]
   19ec0:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   19ec4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19ec8:	add	w1, w26, #0x8
   19ecc:	cmp	w1, #0x0
   19ed0:	b.le	19f40 <__sanitizer_set_report_fd@@Base+0x7020>
   19ed4:	mov	x0, x25
   19ed8:	add	x2, x25, #0xb
   19edc:	and	x25, x2, #0xfffffffffffffff8
   19ee0:	mov	w26, w1
   19ee4:	ldr	w2, [x0]
   19ee8:	b	19c8c <__sanitizer_set_report_fd@@Base+0x6d6c>
   19eec:	add	w1, w26, #0x8
   19ef0:	cmp	w1, #0x0
   19ef4:	b.le	19f50 <__sanitizer_set_report_fd@@Base+0x7030>
   19ef8:	mov	x0, x25
   19efc:	add	x2, x25, #0xb
   19f00:	mov	w26, w1
   19f04:	and	x25, x2, #0xfffffffffffffff8
   19f08:	ldrsw	x6, [x0]
   19f0c:	b	19cc8 <__sanitizer_set_report_fd@@Base+0x6da8>
   19f10:	add	x0, x22, w26, sxtw
   19f14:	mov	w26, w1
   19f18:	b	19d20 <__sanitizer_set_report_fd@@Base+0x6e00>
   19f1c:	add	x3, x22, w26, sxtw
   19f20:	mov	w26, w4
   19f24:	b	19dcc <__sanitizer_set_report_fd@@Base+0x6eac>
   19f28:	add	x0, x22, w26, sxtw
   19f2c:	mov	w26, w1
   19f30:	b	19c88 <__sanitizer_set_report_fd@@Base+0x6d68>
   19f34:	add	x0, x22, w26, sxtw
   19f38:	mov	w26, w1
   19f3c:	b	19cc4 <__sanitizer_set_report_fd@@Base+0x6da4>
   19f40:	add	x0, x22, w26, sxtw
   19f44:	mov	w26, w1
   19f48:	ldr	w2, [x0]
   19f4c:	b	19c8c <__sanitizer_set_report_fd@@Base+0x6d6c>
   19f50:	add	x0, x22, w26, sxtw
   19f54:	mov	w26, w1
   19f58:	ldrsw	x6, [x0]
   19f5c:	b	19cc8 <__sanitizer_set_report_fd@@Base+0x6da8>
   19f60:	mov	w24, #0x0                   	// #0
   19f64:	b	19b64 <__sanitizer_set_report_fd@@Base+0x6c44>
   19f68:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   19f6c:	add	x0, x0, #0x298
   19f70:	stp	x21, x22, [sp, #16]
   19f74:	stp	x25, x26, [sp, #48]
   19f78:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   19f7c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19f80:	adrp	x1, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   19f84:	str	x0, [x1, #3656]
   19f88:	ret
   19f8c:	nop

0000000000019f90 <OnPrint@@Base>:
   19f90:	ret
   19f94:	nop
   19f98:	sub	sp, sp, #0x100
   19f9c:	mov	w9, #0xffffffd8            	// #-40
   19fa0:	add	x10, sp, #0xd0
   19fa4:	add	x11, sp, #0x100
   19fa8:	mov	w8, #0xffffff80            	// #-128
   19fac:	stp	x11, x11, [sp, #48]
   19fb0:	str	x10, [sp, #64]
   19fb4:	stp	w9, w8, [sp, #72]
   19fb8:	ldp	x10, x11, [sp, #48]
   19fbc:	str	x30, [sp]
   19fc0:	ldp	x8, x9, [sp, #64]
   19fc4:	stp	x10, x11, [sp, #16]
   19fc8:	stp	x8, x9, [sp, #32]
   19fcc:	str	q0, [sp, #80]
   19fd0:	str	q1, [sp, #96]
   19fd4:	str	q2, [sp, #112]
   19fd8:	str	q3, [sp, #128]
   19fdc:	str	q4, [sp, #144]
   19fe0:	str	q5, [sp, #160]
   19fe4:	str	q6, [sp, #176]
   19fe8:	str	q7, [sp, #192]
   19fec:	stp	x3, x4, [sp, #216]
   19ff0:	add	x3, sp, #0x10
   19ff4:	stp	x5, x6, [sp, #232]
   19ff8:	str	x7, [sp, #248]
   19ffc:	bl	19928 <__sanitizer_set_report_fd@@Base+0x6a08>
   1a000:	ldr	x30, [sp]
   1a004:	add	sp, sp, #0x100
   1a008:	ret
   1a00c:	nop
   1a010:	stp	x19, x20, [sp, #-176]!
   1a014:	and	w0, w0, #0xff
   1a018:	mov	x19, x1
   1a01c:	stp	x23, x24, [sp, #32]
   1a020:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1a024:	adrp	x24, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a028:	stp	x27, x28, [sp, #64]
   1a02c:	mov	x27, x3
   1a030:	add	x24, x24, #0x2e0
   1a034:	ldr	x23, [x23, #4056]
   1a038:	stp	x21, x22, [sp, #16]
   1a03c:	mov	x21, x1
   1a040:	mov	x22, x2
   1a044:	stp	x25, x26, [sp, #48]
   1a048:	add	x25, sp, #0x70
   1a04c:	str	w0, [sp, #104]
   1a050:	mov	w26, #0x0                   	// #0
   1a054:	ldp	x2, x3, [x3]
   1a058:	mov	w20, #0x190                 	// #400
   1a05c:	ldp	x0, x1, [x27, #16]
   1a060:	str	x30, [sp, #80]
   1a064:	stp	x2, x3, [sp, #144]
   1a068:	stp	x0, x1, [sp, #160]
   1a06c:	ldr	w0, [sp, #104]
   1a070:	cbz	w0, 1a0d0 <OnPrint@@Base+0x140>
   1a074:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x2c48>
   1a078:	mov	x28, x0
   1a07c:	bl	f788 <__sancov_default_options@@Base+0x3038>
   1a080:	cmp	x0, #0x0
   1a084:	ldrb	w2, [x23, #48]
   1a088:	cset	w6, ne  // ne = any
   1a08c:	mov	x3, x0
   1a090:	sxtw	x1, w20
   1a094:	mov	x0, x19
   1a098:	tst	w6, w2
   1a09c:	mov	w5, #0x0                   	// #0
   1a0a0:	b.ne	1a1ec <OnPrint@@Base+0x25c>  // b.any
   1a0a4:	mov	w3, w28
   1a0a8:	mov	x2, x24
   1a0ac:	str	w5, [sp, #108]
   1a0b0:	bl	19f98 <OnPrint@@Base+0x8>
   1a0b4:	ldr	w5, [sp, #108]
   1a0b8:	add	w28, w5, w0
   1a0bc:	cmp	w20, w28
   1a0c0:	b.le	1a13c <OnPrint@@Base+0x1ac>
   1a0c4:	add	x0, x19, w28, sxtw
   1a0c8:	sub	w1, w20, w28
   1a0cc:	b	1a0dc <OnPrint@@Base+0x14c>
   1a0d0:	mov	w1, w20
   1a0d4:	mov	x0, x19
   1a0d8:	mov	w28, #0x0                   	// #0
   1a0dc:	ldp	x6, x7, [x27]
   1a0e0:	mov	x3, x25
   1a0e4:	ldp	x8, x9, [x27, #16]
   1a0e8:	mov	x2, x22
   1a0ec:	stp	x6, x7, [x25]
   1a0f0:	stp	x8, x9, [x25, #16]
   1a0f4:	bl	19928 <__sanitizer_set_report_fd@@Base+0x6a08>
   1a0f8:	add	w0, w28, w0
   1a0fc:	cmp	w20, w0
   1a100:	b.gt	1a188 <OnPrint@@Base+0x1f8>
   1a104:	cbnz	w26, 1a17c <OnPrint@@Base+0x1ec>
   1a108:	ldp	x2, x3, [sp, #160]
   1a10c:	stp	x2, x3, [x27, #16]
   1a110:	mov	w26, #0x1                   	// #1
   1a114:	ldp	x0, x1, [sp, #144]
   1a118:	stp	x0, x1, [x27]
   1a11c:	mov	w2, #0x0                   	// #0
   1a120:	mov	w20, #0x4000                	// #16384
   1a124:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a128:	mov	x0, #0x4000                	// #16384
   1a12c:	add	x1, x1, #0x2b0
   1a130:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1a134:	mov	x19, x0
   1a138:	b	1a06c <OnPrint@@Base+0xdc>
   1a13c:	cbz	w26, 1a108 <OnPrint@@Base+0x178>
   1a140:	mov	w0, #0x3fff                	// #16383
   1a144:	cmp	w28, w0
   1a148:	b.gt	1a214 <OnPrint@@Base+0x284>
   1a14c:	ldp	x6, x7, [x27]
   1a150:	mov	x2, x22
   1a154:	ldp	x4, x5, [x27, #16]
   1a158:	add	x3, sp, #0x70
   1a15c:	sub	w1, w20, w28
   1a160:	add	x0, x19, w28, sxtw
   1a164:	stp	x6, x7, [sp, #112]
   1a168:	stp	x4, x5, [sp, #128]
   1a16c:	bl	19928 <__sanitizer_set_report_fd@@Base+0x6a08>
   1a170:	add	w0, w28, w0
   1a174:	cmp	w20, w0
   1a178:	b.gt	1a188 <OnPrint@@Base+0x1f8>
   1a17c:	mov	w1, #0x3fff                	// #16383
   1a180:	cmp	w0, w1
   1a184:	b.gt	1a214 <OnPrint@@Base+0x284>
   1a188:	mov	x0, x19
   1a18c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1a190:	mov	x0, x19
   1a194:	bl	f280 <__sancov_default_options@@Base+0x2b30>
   1a198:	mov	x0, x19
   1a19c:	bl	6380 <OnPrint@plt>
   1a1a0:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a1a4:	ldr	x1, [x0, #3656]
   1a1a8:	cbz	x1, 1a1b4 <OnPrint@@Base+0x224>
   1a1ac:	mov	x0, x19
   1a1b0:	blr	x1
   1a1b4:	mov	x0, x19
   1a1b8:	bl	17a00 <__sanitizer_set_report_fd@@Base+0x4ae0>
   1a1bc:	cmp	x19, x21
   1a1c0:	b.eq	1a1d0 <OnPrint@@Base+0x240>  // b.none
   1a1c4:	sxtw	x1, w20
   1a1c8:	mov	x0, x19
   1a1cc:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1a1d0:	ldp	x21, x22, [sp, #16]
   1a1d4:	ldp	x23, x24, [sp, #32]
   1a1d8:	ldp	x25, x26, [sp, #48]
   1a1dc:	ldp	x27, x28, [sp, #64]
   1a1e0:	ldr	x30, [sp, #80]
   1a1e4:	ldp	x19, x20, [sp], #176
   1a1e8:	ret
   1a1ec:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a1f0:	add	x2, x2, #0x2b8
   1a1f4:	bl	19f98 <OnPrint@@Base+0x8>
   1a1f8:	mov	w5, w0
   1a1fc:	cmp	w20, w0
   1a200:	b.le	1a224 <OnPrint@@Base+0x294>
   1a204:	sub	w1, w20, w0
   1a208:	add	x0, x19, w0, sxtw
   1a20c:	sxtw	x1, w1
   1a210:	b	1a0a4 <OnPrint@@Base+0x114>
   1a214:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a218:	add	x0, x0, #0x2c0
   1a21c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1a220:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1a224:	cbz	w26, 1a108 <OnPrint@@Base+0x178>
   1a228:	mov	w0, #0x3fff                	// #16383
   1a22c:	cmp	w5, w0
   1a230:	b.gt	1a214 <OnPrint@@Base+0x284>
   1a234:	sub	w1, w20, w5
   1a238:	mov	w3, w28
   1a23c:	add	x0, x19, w5, sxtw
   1a240:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a244:	sxtw	x1, w1
   1a248:	add	x2, x2, #0x2e0
   1a24c:	str	w5, [sp, #104]
   1a250:	bl	19f98 <OnPrint@@Base+0x8>
   1a254:	ldr	w5, [sp, #104]
   1a258:	add	w28, w5, w0
   1a25c:	cmp	w20, w28
   1a260:	b.le	1a140 <OnPrint@@Base+0x1b0>
   1a264:	b	1a14c <OnPrint@@Base+0x1bc>
   1a268:	mov	x4, x2
   1a26c:	sub	sp, sp, #0x1c0
   1a270:	mov	x2, x1
   1a274:	add	x3, sp, #0x10
   1a278:	add	x1, sp, #0x30
   1a27c:	ldp	x6, x7, [x4]
   1a280:	stp	x6, x7, [sp, #16]
   1a284:	ldp	x4, x5, [x4, #16]
   1a288:	str	x30, [sp]
   1a28c:	stp	x4, x5, [sp, #32]
   1a290:	bl	1a010 <OnPrint@@Base+0x80>
   1a294:	ldr	x30, [sp]
   1a298:	add	sp, sp, #0x1c0
   1a29c:	ret
   1a2a0:	sub	sp, sp, #0x110
   1a2a4:	mov	w9, #0xffffffc8            	// #-56
   1a2a8:	add	x11, sp, #0xd0
   1a2ac:	add	x10, sp, #0x110
   1a2b0:	mov	w8, #0xffffff80            	// #-128
   1a2b4:	stp	x10, x10, [sp, #48]
   1a2b8:	mov	x10, x0
   1a2bc:	mov	w0, #0x0                   	// #0
   1a2c0:	str	x11, [sp, #64]
   1a2c4:	stp	w9, w8, [sp, #72]
   1a2c8:	ldp	x12, x13, [sp, #48]
   1a2cc:	str	x30, [sp]
   1a2d0:	ldp	x8, x9, [sp, #64]
   1a2d4:	stp	x12, x13, [sp, #16]
   1a2d8:	stp	x8, x9, [sp, #32]
   1a2dc:	str	q0, [sp, #80]
   1a2e0:	str	q1, [sp, #96]
   1a2e4:	str	q2, [sp, #112]
   1a2e8:	str	q3, [sp, #128]
   1a2ec:	str	q4, [sp, #144]
   1a2f0:	str	q5, [sp, #160]
   1a2f4:	str	q6, [sp, #176]
   1a2f8:	str	q7, [sp, #192]
   1a2fc:	stp	x1, x2, [sp, #216]
   1a300:	add	x2, sp, #0x10
   1a304:	mov	x1, x10
   1a308:	stp	x3, x4, [sp, #232]
   1a30c:	stp	x5, x6, [sp, #248]
   1a310:	str	x7, [sp, #264]
   1a314:	bl	1a268 <OnPrint@@Base+0x2d8>
   1a318:	ldr	x30, [sp]
   1a31c:	add	sp, sp, #0x110
   1a320:	ret
   1a324:	nop
   1a328:	sub	sp, sp, #0x110
   1a32c:	mov	w9, #0xffffffc8            	// #-56
   1a330:	add	x11, sp, #0xd0
   1a334:	add	x10, sp, #0x110
   1a338:	mov	w8, #0xffffff80            	// #-128
   1a33c:	stp	x10, x10, [sp, #48]
   1a340:	mov	x10, x0
   1a344:	mov	w0, #0x1                   	// #1
   1a348:	str	x11, [sp, #64]
   1a34c:	stp	w9, w8, [sp, #72]
   1a350:	ldp	x12, x13, [sp, #48]
   1a354:	str	x30, [sp]
   1a358:	ldp	x8, x9, [sp, #64]
   1a35c:	stp	x12, x13, [sp, #16]
   1a360:	stp	x8, x9, [sp, #32]
   1a364:	str	q0, [sp, #80]
   1a368:	str	q1, [sp, #96]
   1a36c:	str	q2, [sp, #112]
   1a370:	str	q3, [sp, #128]
   1a374:	str	q4, [sp, #144]
   1a378:	str	q5, [sp, #160]
   1a37c:	str	q6, [sp, #176]
   1a380:	str	q7, [sp, #192]
   1a384:	stp	x1, x2, [sp, #216]
   1a388:	add	x2, sp, #0x10
   1a38c:	mov	x1, x10
   1a390:	stp	x3, x4, [sp, #232]
   1a394:	stp	x5, x6, [sp, #248]
   1a398:	str	x7, [sp, #264]
   1a39c:	bl	1a268 <OnPrint@@Base+0x2d8>
   1a3a0:	ldr	x30, [sp]
   1a3a4:	add	sp, sp, #0x110
   1a3a8:	ret
   1a3ac:	nop
   1a3b0:	stp	x19, x30, [sp, #-256]!
   1a3b4:	mov	x19, x0
   1a3b8:	str	q0, [sp, #80]
   1a3bc:	str	q1, [sp, #96]
   1a3c0:	ldr	x8, [x0, #16]
   1a3c4:	str	q2, [sp, #112]
   1a3c8:	ldr	x0, [x0, #24]
   1a3cc:	str	q3, [sp, #128]
   1a3d0:	str	q4, [sp, #144]
   1a3d4:	cmp	x0, x8
   1a3d8:	str	q5, [sp, #160]
   1a3dc:	str	q6, [sp, #176]
   1a3e0:	str	q7, [sp, #192]
   1a3e4:	stp	x2, x3, [sp, #208]
   1a3e8:	stp	x4, x5, [sp, #224]
   1a3ec:	stp	x6, x7, [sp, #240]
   1a3f0:	b.cs	1a464 <OnPrint@@Base+0x4d4>  // b.hs, b.nlast
   1a3f4:	mov	w4, #0xffffff80            	// #-128
   1a3f8:	mov	w3, #0xffffffd0            	// #-48
   1a3fc:	stp	w3, w4, [sp, #72]
   1a400:	add	x5, sp, #0xd0
   1a404:	ldr	x4, [x19]
   1a408:	add	x2, sp, #0x100
   1a40c:	stp	x2, x2, [sp, #48]
   1a410:	mov	x2, x1
   1a414:	sub	w1, w8, w0
   1a418:	str	x5, [sp, #64]
   1a41c:	add	x0, x4, x0
   1a420:	ldp	x6, x7, [sp, #48]
   1a424:	add	x3, sp, #0x10
   1a428:	ldp	x4, x5, [sp, #64]
   1a42c:	stp	x6, x7, [sp, #16]
   1a430:	stp	x4, x5, [sp, #32]
   1a434:	bl	19928 <__sanitizer_set_report_fd@@Base+0x6a08>
   1a438:	ldr	x1, [x19]
   1a43c:	ldr	x0, [x19, #24]
   1a440:	add	x0, x1, x0
   1a444:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1a448:	ldp	x4, x3, [x19, #16]
   1a44c:	add	x3, x0, x3
   1a450:	str	x3, [x19, #24]
   1a454:	cmp	x3, x4
   1a458:	b.cs	1a484 <OnPrint@@Base+0x4f4>  // b.hs, b.nlast
   1a45c:	ldp	x19, x30, [sp], #256
   1a460:	ret
   1a464:	mov	x3, x0
   1a468:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a46c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a470:	mov	x4, x8
   1a474:	add	x2, x2, #0x2e8
   1a478:	add	x0, x0, #0x1c8
   1a47c:	mov	w1, #0x15c                 	// #348
   1a480:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a484:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a488:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a48c:	add	x2, x2, #0x2e8
   1a490:	add	x0, x0, #0x1c8
   1a494:	mov	w1, #0x162                 	// #354
   1a498:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a49c:	nop
   1a4a0:	and	w0, w0, #0xff
   1a4a4:	sub	w1, w0, #0x30
   1a4a8:	and	w2, w1, #0xff
   1a4ac:	cmp	w2, #0x9
   1a4b0:	b.ls	1a4e4 <OnPrint@@Base+0x554>  // b.plast
   1a4b4:	sub	w1, w0, #0x61
   1a4b8:	and	w1, w1, #0xff
   1a4bc:	cmp	w1, #0x5
   1a4c0:	b.ls	1a4dc <OnPrint@@Base+0x54c>  // b.plast
   1a4c4:	sub	w1, w0, #0x41
   1a4c8:	sub	w0, w0, #0x37
   1a4cc:	and	w1, w1, #0xff
   1a4d0:	cmp	w1, #0x6
   1a4d4:	csinv	w0, w0, wzr, cc  // cc = lo, ul, last
   1a4d8:	ret
   1a4dc:	sub	w0, w0, #0x57
   1a4e0:	ret
   1a4e4:	mov	w0, w1
   1a4e8:	ret
   1a4ec:	nop
   1a4f0:	sxtw	x7, w1
   1a4f4:	mov	x6, x0
   1a4f8:	mov	x5, x7
   1a4fc:	mov	x4, #0x0                   	// #0
   1a500:	str	x30, [sp, #-16]!
   1a504:	ldr	x3, [x0]
   1a508:	b	1a518 <OnPrint@@Base+0x588>
   1a50c:	sxtw	x0, w0
   1a510:	str	x3, [x6]
   1a514:	madd	x4, x7, x4, x0
   1a518:	ldrb	w0, [x3], #1
   1a51c:	bl	1a4a0 <OnPrint@@Base+0x510>
   1a520:	cmp	w5, w0
   1a524:	b.hi	1a50c <OnPrint@@Base+0x57c>  // b.pmore
   1a528:	mov	x0, x4
   1a52c:	ldr	x30, [sp], #16
   1a530:	ret
   1a534:	nop
   1a538:	str	x30, [sp, #-16]!
   1a53c:	bl	1a4a0 <OnPrint@@Base+0x510>
   1a540:	cmp	w0, #0x9
   1a544:	cset	w0, ls  // ls = plast
   1a548:	ldr	x30, [sp], #16
   1a54c:	ret
   1a550:	mov	w1, #0xa                   	// #10
   1a554:	b	1a4f0 <OnPrint@@Base+0x560>
   1a558:	str	x30, [sp, #-16]!
   1a55c:	bl	1a4a0 <OnPrint@@Base+0x510>
   1a560:	cmp	w0, #0xf
   1a564:	cset	w0, ls  // ls = plast
   1a568:	ldr	x30, [sp], #16
   1a56c:	ret
   1a570:	mov	w1, #0x10                  	// #16
   1a574:	b	1a4f0 <OnPrint@@Base+0x560>
   1a578:	mov	x2, x0
   1a57c:	mov	x0, x1
   1a580:	ldr	x1, [x2, #72]
   1a584:	cbnz	x1, 1a5a4 <OnPrint@@Base+0x614>
   1a588:	ldr	x1, [x2]
   1a58c:	mov	x5, #0x0                   	// #0
   1a590:	ldr	x3, [x2, #40]
   1a594:	ldr	x2, [x2, #8]
   1a598:	ubfx	w4, w3, #1, #1
   1a59c:	ubfx	w3, w3, #2, #1
   1a5a0:	b	f438 <__sancov_default_options@@Base+0x2ce8>
   1a5a4:	str	x30, [sp, #-16]!
   1a5a8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a5ac:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a5b0:	add	x2, x2, #0x308
   1a5b4:	add	x0, x0, #0x320
   1a5b8:	mov	x4, #0x0                   	// #0
   1a5bc:	mov	x3, #0x0                   	// #0
   1a5c0:	mov	w1, #0x43                  	// #67
   1a5c4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a5c8:	adrp	x2, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a5cc:	mov	x1, x0
   1a5d0:	ldr	x0, [x0]
   1a5d4:	ldr	x2, [x2, #3664]
   1a5d8:	cmp	x0, x2
   1a5dc:	b.eq	1a5e8 <OnPrint@@Base+0x658>  // b.none
   1a5e0:	ldr	x1, [x1, #8]
   1a5e4:	b	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1a5e8:	ret
   1a5ec:	nop
   1a5f0:	ldr	x1, [x0]
   1a5f4:	str	x1, [x0, #24]
   1a5f8:	ret
   1a5fc:	nop
   1a600:	stp	x19, x30, [sp, #-48]!
   1a604:	add	x0, sp, #0x18
   1a608:	bl	1acb8 <OnPrint@@Base+0xd28>
   1a60c:	ldr	x0, [sp, #32]
   1a610:	cbnz	x0, 1a61c <OnPrint@@Base+0x68c>
   1a614:	ldp	x19, x30, [sp], #48
   1a618:	ret
   1a61c:	adrp	x19, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a620:	add	x0, x19, #0xe50
   1a624:	add	x0, x0, #0x18
   1a628:	mov	w2, #0x1                   	// #1
   1a62c:	ldxrb	w1, [x0]
   1a630:	stxrb	w3, w2, [x0]
   1a634:	cbnz	w3, 1a62c <OnPrint@@Base+0x69c>
   1a638:	dmb	ish
   1a63c:	tst	w1, #0xff
   1a640:	b.eq	1a648 <OnPrint@@Base+0x6b8>  // b.none
   1a644:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   1a648:	add	x0, x19, #0xe50
   1a64c:	ldr	x1, [x0, #8]
   1a650:	cbnz	x1, 1a678 <OnPrint@@Base+0x6e8>
   1a654:	add	x19, x19, #0xe50
   1a658:	ldp	x2, x3, [sp, #24]
   1a65c:	ldr	x0, [sp, #40]
   1a660:	stp	x2, x3, [x19]
   1a664:	str	x0, [x19, #16]
   1a668:	dmb	ish
   1a66c:	strb	wzr, [x19, #24]
   1a670:	ldp	x19, x30, [sp], #48
   1a674:	ret
   1a678:	ldr	x0, [x19, #3664]
   1a67c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1a680:	b	1a654 <OnPrint@@Base+0x6c4>
   1a684:	nop
   1a688:	stp	x19, x20, [sp, #-32]!
   1a68c:	adrp	x19, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1a690:	add	x1, x19, #0xe50
   1a694:	mov	x20, x0
   1a698:	add	x0, x1, #0x18
   1a69c:	mov	w2, #0x1                   	// #1
   1a6a0:	str	x30, [sp, #16]
   1a6a4:	ldxrb	w1, [x0]
   1a6a8:	stxrb	w3, w2, [x0]
   1a6ac:	cbnz	w3, 1a6a4 <OnPrint@@Base+0x714>
   1a6b0:	dmb	ish
   1a6b4:	tst	w1, #0xff
   1a6b8:	b.eq	1a6c0 <OnPrint@@Base+0x730>  // b.none
   1a6bc:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   1a6c0:	ldr	x1, [x19, #3664]
   1a6c4:	add	x0, x19, #0xe50
   1a6c8:	cbz	x1, 1a6dc <OnPrint@@Base+0x74c>
   1a6cc:	ldp	x2, x3, [x0]
   1a6d0:	stp	x2, x3, [x20]
   1a6d4:	ldr	x0, [x0, #16]
   1a6d8:	str	x0, [x20, #16]
   1a6dc:	dmb	ish
   1a6e0:	add	x19, x19, #0xe50
   1a6e4:	strb	wzr, [x19, #24]
   1a6e8:	ldr	x30, [sp, #16]
   1a6ec:	ldp	x19, x20, [sp], #32
   1a6f0:	ret
   1a6f4:	nop
   1a6f8:	stp	x19, x30, [sp, #-16]!
   1a6fc:	tst	w1, #0xff
   1a700:	mov	x19, x0
   1a704:	b.ne	1a72c <OnPrint@@Base+0x79c>  // b.any
   1a708:	bl	1acb8 <OnPrint@@Base+0xd28>
   1a70c:	ldr	x0, [x19, #8]
   1a710:	cbz	x0, 1a750 <OnPrint@@Base+0x7c0>
   1a714:	ldr	x0, [x19, #16]
   1a718:	cbz	x0, 1a770 <OnPrint@@Base+0x7e0>
   1a71c:	ldr	x0, [x19]
   1a720:	str	x0, [x19, #24]
   1a724:	ldp	x19, x30, [sp], #16
   1a728:	ret
   1a72c:	bl	1a600 <OnPrint@@Base+0x670>
   1a730:	mov	x0, x19
   1a734:	bl	1acb8 <OnPrint@@Base+0xd28>
   1a738:	ldr	x0, [x19, #8]
   1a73c:	cbnz	x0, 1a714 <OnPrint@@Base+0x784>
   1a740:	mov	x0, x19
   1a744:	bl	1a688 <OnPrint@@Base+0x6f8>
   1a748:	ldr	x0, [x19, #8]
   1a74c:	cbnz	x0, 1a714 <OnPrint@@Base+0x784>
   1a750:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a754:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a758:	add	x2, x2, #0x368
   1a75c:	add	x0, x0, #0x320
   1a760:	mov	x4, #0x0                   	// #0
   1a764:	mov	x3, #0x0                   	// #0
   1a768:	mov	w1, #0x51                  	// #81
   1a76c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a770:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a774:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1a778:	add	x2, x2, #0x398
   1a77c:	add	x0, x0, #0x320
   1a780:	mov	x4, #0x0                   	// #0
   1a784:	mov	x3, #0x0                   	// #0
   1a788:	mov	w1, #0x52                  	// #82
   1a78c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a790:	stp	x19, x20, [sp, #-272]!
   1a794:	mov	x19, x1
   1a798:	stp	x21, x22, [sp, #16]
   1a79c:	mov	x21, x0
   1a7a0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1a7a4:	stp	x23, x24, [sp, #32]
   1a7a8:	ldr	x20, [x0, #4016]
   1a7ac:	stp	x25, x26, [sp, #48]
   1a7b0:	stp	x27, x28, [sp, #64]
   1a7b4:	ldr	x0, [x21]
   1a7b8:	str	x30, [sp, #80]
   1a7bc:	str	x0, [x21, #24]
   1a7c0:	ldr	x0, [x20]
   1a7c4:	cbz	x0, 1aa00 <OnPrint@@Base+0xa70>
   1a7c8:	sub	x20, x0, #0x1
   1a7cc:	ands	x20, x20, x0
   1a7d0:	b.ne	1aa84 <OnPrint@@Base+0xaf4>  // b.any
   1a7d4:	add	x25, x0, #0xfff
   1a7d8:	neg	x0, x0
   1a7dc:	and	x25, x25, x0
   1a7e0:	mov	w2, #0x0                   	// #0
   1a7e4:	mov	x0, x25
   1a7e8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1a7ec:	add	x1, x1, #0x178
   1a7f0:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1a7f4:	mov	x2, #0x0                   	// #0
   1a7f8:	mov	x1, #0x0                   	// #0
   1a7fc:	mov	x24, x0
   1a800:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1a804:	mov	x1, #0x0                   	// #0
   1a808:	mov	x0, #0x0                   	// #0
   1a80c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1a810:	cmp	x25, #0xfff
   1a814:	b.ls	1aa0c <OnPrint@@Base+0xa7c>  // b.plast
   1a818:	mov	x2, #0x1000                	// #4096
   1a81c:	mov	w1, #0x0                   	// #0
   1a820:	mov	x0, x24
   1a824:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1a828:	strb	wzr, [x24]
   1a82c:	mov	x0, #0x1000                	// #4096
   1a830:	add	x22, sp, #0x78
   1a834:	add	x23, sp, #0xc0
   1a838:	mov	x1, x23
   1a83c:	add	x27, x22, #0x1c
   1a840:	stp	x24, x0, [sp, #216]
   1a844:	mov	x0, x21
   1a848:	str	xzr, [sp, #264]
   1a84c:	bl	1acf8 <OnPrint@@Base+0xd68>
   1a850:	tst	w0, #0xff
   1a854:	b.eq	1a91c <OnPrint@@Base+0x98c>  // b.none
   1a858:	ldr	x28, [sp, #216]
   1a85c:	ldrb	w0, [x28]
   1a860:	cbz	w0, 1a904 <OnPrint@@Base+0x974>
   1a864:	ldr	x3, [sp, #192]
   1a868:	cmp	x20, #0x0
   1a86c:	ldr	x0, [sp, #208]
   1a870:	csel	x3, x3, xzr, ne  // ne = any
   1a874:	mov	x2, #0x10                  	// #16
   1a878:	mov	w1, #0x0                   	// #0
   1a87c:	sub	x26, x3, x0
   1a880:	mov	x0, x27
   1a884:	stp	xzr, xzr, [sp, #120]
   1a888:	str	xzr, [sp, #136]
   1a88c:	str	wzr, [sp, #144]
   1a890:	strb	wzr, [sp, #164]
   1a894:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1a898:	mov	x2, x26
   1a89c:	mov	x1, x28
   1a8a0:	mov	x0, x22
   1a8a4:	stp	xzr, xzr, [sp, #168]
   1a8a8:	str	xzr, [sp, #184]
   1a8ac:	bl	f3a0 <__sancov_default_options@@Base+0x2c50>
   1a8b0:	mov	x0, x23
   1a8b4:	mov	x1, x22
   1a8b8:	bl	1a578 <OnPrint@@Base+0x5e8>
   1a8bc:	ldp	x4, x3, [x19, #8]
   1a8c0:	mov	x0, #0xe38f                	// #58255
   1a8c4:	movk	x0, #0x8e38, lsl #16
   1a8c8:	movk	x0, #0x38e3, lsl #32
   1a8cc:	movk	x0, #0xe38e, lsl #48
   1a8d0:	umulh	x4, x4, x0
   1a8d4:	lsr	x4, x4, #6
   1a8d8:	cmp	x3, x4
   1a8dc:	b.hi	1aa94 <OnPrint@@Base+0xb04>  // b.pmore
   1a8e0:	add	x1, x3, #0x1
   1a8e4:	b.eq	1a944 <OnPrint@@Base+0x9b4>  // b.none
   1a8e8:	ldr	x5, [x19]
   1a8ec:	add	x3, x3, x3, lsl #3
   1a8f0:	str	x1, [x19, #16]
   1a8f4:	mov	x2, #0x48                  	// #72
   1a8f8:	add	x0, x5, x3, lsl #3
   1a8fc:	mov	x1, x22
   1a900:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1a904:	mov	x1, x23
   1a908:	mov	x0, x21
   1a90c:	add	x20, x20, #0x1
   1a910:	bl	1acf8 <OnPrint@@Base+0xd68>
   1a914:	tst	w0, #0xff
   1a918:	b.ne	1a858 <OnPrint@@Base+0x8c8>  // b.any
   1a91c:	mov	x1, x25
   1a920:	mov	x0, x24
   1a924:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1a928:	ldp	x21, x22, [sp, #16]
   1a92c:	ldp	x23, x24, [sp, #32]
   1a930:	ldp	x25, x26, [sp, #48]
   1a934:	ldp	x27, x28, [sp, #64]
   1a938:	ldr	x30, [sp, #80]
   1a93c:	ldp	x19, x20, [sp], #272
   1a940:	ret
   1a944:	tst	x1, x3
   1a948:	b.eq	1a984 <OnPrint@@Base+0x9f4>  // b.none
   1a94c:	clz	x2, x1
   1a950:	mov	w0, #0x3f                  	// #63
   1a954:	sub	w0, w0, w2
   1a958:	mov	x2, #0x1                   	// #1
   1a95c:	add	w4, w0, #0x1
   1a960:	lsl	x4, x2, x4
   1a964:	cmp	x1, x4
   1a968:	b.cs	1aaac <OnPrint@@Base+0xb1c>  // b.hs, b.nlast
   1a96c:	lsl	x0, x2, x0
   1a970:	cmp	x1, x0
   1a974:	b.ls	1aaec <OnPrint@@Base+0xb5c>  // b.plast
   1a978:	cmp	x3, x4
   1a97c:	b.hi	1aad4 <OnPrint@@Base+0xb44>  // b.pmore
   1a980:	mov	x1, x4
   1a984:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1a988:	add	x1, x1, x1, lsl #3
   1a98c:	ldr	x2, [x0, #4016]
   1a990:	lsl	x1, x1, #3
   1a994:	ldr	x0, [x2]
   1a998:	cbz	x0, 1aa70 <OnPrint@@Base+0xae0>
   1a99c:	sub	x4, x0, #0x1
   1a9a0:	tst	x0, x4
   1a9a4:	b.ne	1aa84 <OnPrint@@Base+0xaf4>  // b.any
   1a9a8:	add	x1, x1, x4
   1a9ac:	neg	x0, x0
   1a9b0:	and	x4, x1, x0
   1a9b4:	mov	w2, #0x0                   	// #0
   1a9b8:	mov	x0, x4
   1a9bc:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1a9c0:	add	x1, x1, #0x178
   1a9c4:	str	x4, [sp, #104]
   1a9c8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1a9cc:	str	x0, [sp, #96]
   1a9d0:	ldr	x2, [x19, #16]
   1a9d4:	ldr	x1, [x19]
   1a9d8:	add	x2, x2, x2, lsl #3
   1a9dc:	lsl	x2, x2, #3
   1a9e0:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1a9e4:	ldp	x0, x1, [x19]
   1a9e8:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1a9ec:	ldr	x3, [x19, #16]
   1a9f0:	ldp	x5, x4, [sp, #96]
   1a9f4:	add	x1, x3, #0x1
   1a9f8:	stp	x5, x4, [x19]
   1a9fc:	b	1a8ec <OnPrint@@Base+0x95c>
   1aa00:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1aa04:	str	x0, [x20]
   1aa08:	b	1a7c8 <OnPrint@@Base+0x838>
   1aa0c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1aa10:	ldr	x22, [x0, #4016]
   1aa14:	ldr	x0, [x22]
   1aa18:	cbz	x0, 1aac8 <OnPrint@@Base+0xb38>
   1aa1c:	sub	x1, x0, #0x1
   1aa20:	tst	x1, x0
   1aa24:	b.ne	1aa84 <OnPrint@@Base+0xaf4>  // b.any
   1aa28:	add	x22, x0, #0xfff
   1aa2c:	neg	x0, x0
   1aa30:	and	x22, x22, x0
   1aa34:	mov	w2, #0x0                   	// #0
   1aa38:	mov	x0, x22
   1aa3c:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1aa40:	add	x1, x1, #0x178
   1aa44:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1aa48:	mov	x2, #0x0                   	// #0
   1aa4c:	mov	x23, x0
   1aa50:	mov	x1, x24
   1aa54:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1aa58:	mov	x1, x25
   1aa5c:	mov	x0, x24
   1aa60:	mov	x25, x22
   1aa64:	mov	x24, x23
   1aa68:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1aa6c:	b	1a818 <OnPrint@@Base+0x888>
   1aa70:	stp	x1, x2, [sp, #96]
   1aa74:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1aa78:	ldp	x1, x2, [sp, #96]
   1aa7c:	str	x0, [x2]
   1aa80:	b	1a99c <OnPrint@@Base+0xa0c>
   1aa84:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1aa88:	add	x0, x0, #0x160
   1aa8c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1aa90:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1aa94:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1aa98:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1aa9c:	add	x2, x2, #0x428
   1aaa0:	add	x0, x0, #0x1a8
   1aaa4:	mov	w1, #0x1be                 	// #446
   1aaa8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1aaac:	mov	x3, x1
   1aab0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1aab4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1aab8:	add	x2, x2, #0x458
   1aabc:	add	x0, x0, #0x1a8
   1aac0:	mov	w1, #0x17b                 	// #379
   1aac4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1aac8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1aacc:	str	x0, [x22]
   1aad0:	b	1aa1c <OnPrint@@Base+0xa8c>
   1aad4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1aad8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1aadc:	add	x2, x2, #0x4a0
   1aae0:	add	x0, x0, #0x1a8
   1aae4:	mov	w1, #0x1fd                 	// #509
   1aae8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1aaec:	mov	x4, x0
   1aaf0:	mov	x3, x1
   1aaf4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1aaf8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1aafc:	add	x2, x2, #0x480
   1ab00:	add	x0, x0, #0x1a8
   1ab04:	mov	w1, #0x17c                 	// #380
   1ab08:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1ab0c:	nop
   1ab10:	stp	x19, x20, [sp, #-96]!
   1ab14:	mov	x5, #0x0                   	// #0
   1ab18:	mov	x4, #0x4000000             	// #67108864
   1ab1c:	add	x3, sp, #0x50
   1ab20:	stp	x21, x22, [sp, #16]
   1ab24:	mov	x22, x0
   1ab28:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ab2c:	add	x0, x0, #0x3c0
   1ab30:	stp	x23, x24, [sp, #32]
   1ab34:	mov	x23, x1
   1ab38:	mov	x24, x2
   1ab3c:	add	x1, sp, #0x40
   1ab40:	add	x2, sp, #0x48
   1ab44:	str	x30, [sp, #56]
   1ab48:	stp	xzr, xzr, [sp, #64]
   1ab4c:	str	xzr, [sp, #80]
   1ab50:	bl	127a0 <__sanitizer_cov_dump@@Base+0x2190>
   1ab54:	tst	w0, #0xff
   1ab58:	b.eq	1abf8 <OnPrint@@Base+0xc68>  // b.none
   1ab5c:	ldr	x3, [sp, #64]
   1ab60:	str	x3, [sp, #88]
   1ab64:	ldr	x0, [sp, #80]
   1ab68:	add	x0, x3, x0
   1ab6c:	cmp	x3, x0
   1ab70:	b.cs	1acac <OnPrint@@Base+0xd1c>  // b.hs, b.nlast
   1ab74:	adrp	x21, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ab78:	add	x21, x21, #0x3d8
   1ab7c:	str	x25, [sp, #48]
   1ab80:	add	x25, sp, #0x58
   1ab84:	mov	w19, #0x0                   	// #0
   1ab88:	mov	x20, #0x0                   	// #0
   1ab8c:	nop
   1ab90:	ldrb	w0, [x3]
   1ab94:	bl	1a4a0 <OnPrint@@Base+0x510>
   1ab98:	cmp	w0, #0xf
   1ab9c:	b.ls	1ac54 <OnPrint@@Base+0xcc4>  // b.plast
   1aba0:	mov	x0, x3
   1aba4:	mov	x1, x21
   1aba8:	mov	x2, #0x4                   	// #4
   1abac:	bl	14828 <__sanitizer_set_report_fd@@Base+0x1908>
   1abb0:	cbz	w0, 1ac0c <OnPrint@@Base+0xc7c>
   1abb4:	ldr	x4, [sp, #88]
   1abb8:	add	x4, x4, #0x1
   1abbc:	nop
   1abc0:	mov	x3, x4
   1abc4:	str	x3, [sp, #88]
   1abc8:	add	x4, x4, #0x1
   1abcc:	ldurb	w0, [x3, #-1]
   1abd0:	cmp	w0, #0xa
   1abd4:	b.ne	1abc0 <OnPrint@@Base+0xc30>  // b.any
   1abd8:	ldr	x0, [sp, #64]
   1abdc:	ldr	x1, [sp, #80]
   1abe0:	add	x1, x0, x1
   1abe4:	cmp	x3, x1
   1abe8:	b.cc	1ab90 <OnPrint@@Base+0xc00>  // b.lo, b.ul, b.last
   1abec:	ldr	x25, [sp, #48]
   1abf0:	ldr	x1, [sp, #72]
   1abf4:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1abf8:	ldp	x21, x22, [sp, #16]
   1abfc:	ldp	x23, x24, [sp, #32]
   1ac00:	ldr	x30, [sp, #56]
   1ac04:	ldp	x19, x20, [sp], #96
   1ac08:	ret
   1ac0c:	ldr	x3, [sp, #88]
   1ac10:	b	1ac18 <OnPrint@@Base+0xc88>
   1ac14:	str	x3, [sp, #88]
   1ac18:	ldrb	w0, [x3], #1
   1ac1c:	bl	1a4a0 <OnPrint@@Base+0x510>
   1ac20:	cmp	w0, #0x9
   1ac24:	b.hi	1ac14 <OnPrint@@Base+0xc84>  // b.pmore
   1ac28:	mov	w1, #0xa                   	// #10
   1ac2c:	mov	x0, x25
   1ac30:	bl	1a4f0 <OnPrint@@Base+0x560>
   1ac34:	lsl	x1, x0, #10
   1ac38:	mov	x4, x24
   1ac3c:	mov	x3, x23
   1ac40:	mov	w2, w19
   1ac44:	mov	x0, x20
   1ac48:	blr	x22
   1ac4c:	ldr	x4, [sp, #88]
   1ac50:	b	1abb8 <OnPrint@@Base+0xc28>
   1ac54:	mov	x0, x25
   1ac58:	mov	w1, #0x10                  	// #16
   1ac5c:	bl	1a4f0 <OnPrint@@Base+0x560>
   1ac60:	mov	x20, x0
   1ac64:	ldr	x4, [sp, #88]
   1ac68:	ldrb	w0, [x4]
   1ac6c:	cmp	w0, #0x2f
   1ac70:	cset	w19, eq  // eq = none
   1ac74:	cmp	w19, #0x0
   1ac78:	ccmp	w0, #0xa, #0x0, eq  // eq = none
   1ac7c:	b.ls	1abb8 <OnPrint@@Base+0xc28>  // b.plast
   1ac80:	add	x0, x4, #0x1
   1ac84:	nop
   1ac88:	str	x0, [sp, #88]
   1ac8c:	mov	x4, x0
   1ac90:	ldrb	w1, [x0], #1
   1ac94:	cmp	w1, #0x2f
   1ac98:	cset	w19, eq  // eq = none
   1ac9c:	cmp	w19, #0x0
   1aca0:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   1aca4:	b.hi	1ac88 <OnPrint@@Base+0xcf8>  // b.pmore
   1aca8:	b	1abb8 <OnPrint@@Base+0xc28>
   1acac:	mov	x0, x3
   1acb0:	b	1abf0 <OnPrint@@Base+0xc60>
   1acb4:	nop
   1acb8:	stp	x19, x30, [sp, #-16]!
   1acbc:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1acc0:	mov	x19, x0
   1acc4:	add	x3, x19, #0x10
   1acc8:	add	x0, x1, #0x3e0
   1accc:	add	x2, x19, #0x8
   1acd0:	mov	x1, x19
   1acd4:	mov	x5, #0x0                   	// #0
   1acd8:	mov	x4, #0x4000000             	// #67108864
   1acdc:	bl	127a0 <__sanitizer_cov_dump@@Base+0x2190>
   1ace0:	tst	w0, #0xff
   1ace4:	b.ne	1acf0 <OnPrint@@Base+0xd60>  // b.any
   1ace8:	stp	xzr, xzr, [x19]
   1acec:	str	xzr, [x19, #16]
   1acf0:	ldp	x19, x30, [sp], #16
   1acf4:	ret
   1acf8:	stp	x19, x20, [sp, #-64]!
   1acfc:	mov	x19, x0
   1ad00:	mov	x20, x1
   1ad04:	stp	x21, x22, [sp, #16]
   1ad08:	ldr	x22, [x0]
   1ad0c:	ldp	x1, x0, [x0, #16]
   1ad10:	str	x30, [sp, #56]
   1ad14:	add	x22, x22, x1
   1ad18:	cmp	x0, x22
   1ad1c:	b.cc	1ad38 <OnPrint@@Base+0xda8>  // b.lo, b.ul, b.last
   1ad20:	mov	w22, #0x0                   	// #0
   1ad24:	mov	w0, w22
   1ad28:	ldp	x21, x22, [sp, #16]
   1ad2c:	ldr	x30, [sp, #56]
   1ad30:	ldp	x19, x20, [sp], #64
   1ad34:	ret
   1ad38:	sub	x2, x22, x0
   1ad3c:	mov	w1, #0xa                   	// #10
   1ad40:	stp	x23, x24, [sp, #32]
   1ad44:	add	x23, x19, #0x18
   1ad48:	str	x25, [sp, #48]
   1ad4c:	bl	14560 <__sanitizer_set_report_fd@@Base+0x1640>
   1ad50:	mov	x21, x0
   1ad54:	mov	x0, x23
   1ad58:	cmp	x21, #0x0
   1ad5c:	csel	x21, x21, x22, ne  // ne = any
   1ad60:	bl	1a570 <OnPrint@@Base+0x5e0>
   1ad64:	ldr	x1, [x19, #24]
   1ad68:	str	x0, [x20]
   1ad6c:	add	x0, x1, #0x1
   1ad70:	str	x0, [x19, #24]
   1ad74:	ldrb	w22, [x1]
   1ad78:	cmp	x22, #0x2d
   1ad7c:	b.ne	1afb0 <OnPrint@@Base+0x1020>  // b.any
   1ad80:	mov	x0, x23
   1ad84:	bl	1a570 <OnPrint@@Base+0x5e0>
   1ad88:	ldr	x2, [x19, #24]
   1ad8c:	str	x0, [x20, #8]
   1ad90:	add	x0, x2, #0x1
   1ad94:	str	x0, [x19, #24]
   1ad98:	ldrb	w3, [x2]
   1ad9c:	cmp	x3, #0x20
   1ada0:	b.ne	1afd0 <OnPrint@@Base+0x1040>  // b.any
   1ada4:	ldrb	w0, [x2, #1]
   1ada8:	cmp	w0, #0x72
   1adac:	ccmp	w0, w22, #0x4, ne  // ne = any
   1adb0:	b.ne	1afec <OnPrint@@Base+0x105c>  // b.any
   1adb4:	str	xzr, [x20, #40]
   1adb8:	add	x0, x2, #0x2
   1adbc:	str	x0, [x19, #24]
   1adc0:	ldrb	w0, [x2, #1]
   1adc4:	cmp	w0, #0x72
   1adc8:	b.ne	1add4 <OnPrint@@Base+0xe44>  // b.any
   1adcc:	mov	x0, #0x1                   	// #1
   1add0:	str	x0, [x20, #40]
   1add4:	ldrb	w0, [x2, #2]
   1add8:	mov	w1, #0x2d                  	// #45
   1addc:	cmp	w0, #0x77
   1ade0:	ccmp	w0, w1, #0x4, ne  // ne = any
   1ade4:	b.ne	1b00c <OnPrint@@Base+0x107c>  // b.any
   1ade8:	add	x0, x2, #0x3
   1adec:	str	x0, [x19, #24]
   1adf0:	ldrb	w0, [x2, #2]
   1adf4:	cmp	w0, #0x77
   1adf8:	b.ne	1ae08 <OnPrint@@Base+0xe78>  // b.any
   1adfc:	ldr	x0, [x20, #40]
   1ae00:	orr	x0, x0, #0x2
   1ae04:	str	x0, [x20, #40]
   1ae08:	ldrb	w0, [x2, #3]
   1ae0c:	mov	w1, #0x78                  	// #120
   1ae10:	cmp	w0, #0x2d
   1ae14:	ccmp	w0, w1, #0x4, ne  // ne = any
   1ae18:	b.ne	1b02c <OnPrint@@Base+0x109c>  // b.any
   1ae1c:	add	x0, x2, #0x4
   1ae20:	str	x0, [x19, #24]
   1ae24:	ldrb	w0, [x2, #3]
   1ae28:	cmp	w0, #0x78
   1ae2c:	b.eq	1af70 <OnPrint@@Base+0xfe0>  // b.none
   1ae30:	ldrb	w0, [x2, #4]
   1ae34:	cmp	w0, #0x73
   1ae38:	cset	w22, eq  // eq = none
   1ae3c:	cmp	w0, #0x70
   1ae40:	csinc	w22, w22, wzr, ne  // ne = any
   1ae44:	cbz	w22, 1b04c <OnPrint@@Base+0x10bc>
   1ae48:	add	x0, x2, #0x5
   1ae4c:	str	x0, [x19, #24]
   1ae50:	ldrb	w0, [x2, #4]
   1ae54:	cmp	w0, #0x73
   1ae58:	b.eq	1af80 <OnPrint@@Base+0xff0>  // b.none
   1ae5c:	add	x0, x2, #0x6
   1ae60:	str	x0, [x19, #24]
   1ae64:	ldrb	w24, [x2, #5]
   1ae68:	cmp	x24, #0x20
   1ae6c:	b.ne	1b06c <OnPrint@@Base+0x10dc>  // b.any
   1ae70:	mov	x0, x23
   1ae74:	bl	1a570 <OnPrint@@Base+0x5e0>
   1ae78:	str	x0, [x20, #16]
   1ae7c:	ldr	x0, [x19, #24]
   1ae80:	add	x1, x0, #0x1
   1ae84:	str	x1, [x19, #24]
   1ae88:	ldrb	w25, [x0]
   1ae8c:	cmp	x25, #0x20
   1ae90:	b.ne	1b08c <OnPrint@@Base+0x10fc>  // b.any
   1ae94:	mov	x0, x23
   1ae98:	bl	1a570 <OnPrint@@Base+0x5e0>
   1ae9c:	ldr	x0, [x19, #24]
   1aea0:	add	x1, x0, #0x1
   1aea4:	str	x1, [x19, #24]
   1aea8:	ldrb	w24, [x0]
   1aeac:	cmp	x24, #0x3a
   1aeb0:	b.ne	1af90 <OnPrint@@Base+0x1000>  // b.any
   1aeb4:	mov	x0, x23
   1aeb8:	bl	1a570 <OnPrint@@Base+0x5e0>
   1aebc:	ldr	x0, [x19, #24]
   1aec0:	add	x2, x0, #0x1
   1aec4:	str	x2, [x19, #24]
   1aec8:	ldrb	w3, [x0]
   1aecc:	cmp	x3, #0x20
   1aed0:	b.eq	1aee4 <OnPrint@@Base+0xf54>  // b.none
   1aed4:	b	1b0ac <OnPrint@@Base+0x111c>
   1aed8:	ldr	x2, [x19, #24]
   1aedc:	add	x2, x2, #0x1
   1aee0:	str	x2, [x19, #24]
   1aee4:	ldrb	w0, [x2]
   1aee8:	bl	1a538 <OnPrint@@Base+0x5a8>
   1aeec:	tst	w0, #0xff
   1aef0:	b.ne	1aed8 <OnPrint@@Base+0xf48>  // b.any
   1aef4:	ldr	x1, [x19, #24]
   1aef8:	cmp	x1, x21
   1aefc:	b.cc	1af14 <OnPrint@@Base+0xf84>  // b.lo, b.ul, b.last
   1af00:	b	1af20 <OnPrint@@Base+0xf90>
   1af04:	add	x1, x1, #0x1
   1af08:	str	x1, [x19, #24]
   1af0c:	cmp	x1, x21
   1af10:	b.eq	1af20 <OnPrint@@Base+0xf90>  // b.none
   1af14:	ldrb	w0, [x1]
   1af18:	cmp	w0, #0x20
   1af1c:	b.eq	1af04 <OnPrint@@Base+0xf74>  // b.none
   1af20:	ldr	x0, [x20, #24]
   1af24:	cbz	x0, 1af4c <OnPrint@@Base+0xfbc>
   1af28:	ldr	x23, [x20, #32]
   1af2c:	sub	x3, x21, x1
   1af30:	sub	x23, x23, #0x1
   1af34:	cmp	x23, x3
   1af38:	csel	x23, x23, x3, ls  // ls = plast
   1af3c:	mov	x2, x23
   1af40:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
   1af44:	ldr	x0, [x20, #24]
   1af48:	strb	wzr, [x0, x23]
   1af4c:	add	x21, x21, #0x1
   1af50:	mov	w0, w22
   1af54:	ldp	x23, x24, [sp, #32]
   1af58:	ldr	x25, [sp, #48]
   1af5c:	str	x21, [x19, #24]
   1af60:	ldp	x21, x22, [sp, #16]
   1af64:	ldr	x30, [sp, #56]
   1af68:	ldp	x19, x20, [sp], #64
   1af6c:	ret
   1af70:	ldr	x0, [x20, #40]
   1af74:	orr	x0, x0, #0x4
   1af78:	str	x0, [x20, #40]
   1af7c:	b	1ae30 <OnPrint@@Base+0xea0>
   1af80:	ldr	x0, [x20, #40]
   1af84:	orr	x0, x0, #0x8
   1af88:	str	x0, [x20, #40]
   1af8c:	b	1ae5c <OnPrint@@Base+0xecc>
   1af90:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1af94:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1af98:	mov	x3, x24
   1af9c:	add	x2, x2, #0x538
   1afa0:	add	x0, x0, #0x410
   1afa4:	mov	x4, #0x3a                  	// #58
   1afa8:	mov	w1, #0x38                  	// #56
   1afac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1afb0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1afb4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1afb8:	mov	x3, x22
   1afbc:	add	x2, x2, #0x3f0
   1afc0:	add	x0, x0, #0x410
   1afc4:	mov	x4, #0x2d                  	// #45
   1afc8:	mov	w1, #0x28                  	// #40
   1afcc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1afd0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1afd4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1afd8:	add	x2, x2, #0x458
   1afdc:	add	x0, x0, #0x410
   1afe0:	mov	x4, #0x20                  	// #32
   1afe4:	mov	w1, #0x2a                  	// #42
   1afe8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1afec:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1aff0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1aff4:	add	x2, x2, #0x478
   1aff8:	add	x0, x0, #0x410
   1affc:	mov	x4, #0x0                   	// #0
   1b000:	mov	x3, #0x0                   	// #0
   1b004:	mov	w1, #0x2b                  	// #43
   1b008:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b00c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b010:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b014:	add	x2, x2, #0x4a8
   1b018:	add	x0, x0, #0x410
   1b01c:	mov	x4, #0x0                   	// #0
   1b020:	mov	x3, #0x0                   	// #0
   1b024:	mov	w1, #0x2e                  	// #46
   1b028:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b02c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b030:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b034:	add	x2, x2, #0x4d8
   1b038:	add	x0, x0, #0x410
   1b03c:	mov	x4, #0x0                   	// #0
   1b040:	mov	x3, #0x0                   	// #0
   1b044:	mov	w1, #0x30                  	// #48
   1b048:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b04c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b050:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b054:	add	x2, x2, #0x508
   1b058:	add	x0, x0, #0x410
   1b05c:	mov	x4, #0x0                   	// #0
   1b060:	mov	x3, #0x0                   	// #0
   1b064:	mov	w1, #0x32                  	// #50
   1b068:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b06c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b070:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b074:	mov	x3, x24
   1b078:	add	x2, x2, #0x458
   1b07c:	add	x0, x0, #0x410
   1b080:	mov	x4, #0x20                  	// #32
   1b084:	mov	w1, #0x34                  	// #52
   1b088:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b08c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b090:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b094:	mov	x4, x24
   1b098:	mov	x3, x25
   1b09c:	add	x2, x2, #0x458
   1b0a0:	add	x0, x0, #0x410
   1b0a4:	mov	w1, #0x36                  	// #54
   1b0a8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b0ac:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b0b0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b0b4:	mov	x4, x25
   1b0b8:	mov	w1, w24
   1b0bc:	add	x2, x2, #0x458
   1b0c0:	add	x0, x0, #0x410
   1b0c4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b0c8:	ldr	w2, [x0]
   1b0cc:	ldr	w0, [x1]
   1b0d0:	cmp	w2, w0
   1b0d4:	cset	w0, cc  // cc = lo, ul, last
   1b0d8:	ret
   1b0dc:	nop
   1b0e0:	ldr	x0, [x0]
   1b0e4:	ldr	w0, [x0, #8]
   1b0e8:	ret
   1b0ec:	nop
   1b0f0:	ldr	x0, [x0]
   1b0f4:	ldr	w0, [x0, #12]
   1b0f8:	and	w0, w0, #0xfffff
   1b0fc:	ret
   1b100:	ldr	x0, [x0]
   1b104:	add	x0, x0, #0xc
   1b108:	ldxr	w1, [x0]
   1b10c:	add	w2, w1, #0x1
   1b110:	stlxr	w3, w2, [x0]
   1b114:	cbnz	w3, 1b108 <OnPrint@@Base+0x1178>
   1b118:	mvn	x0, x1
   1b11c:	dmb	ish
   1b120:	tst	x0, #0xfffff
   1b124:	b.eq	1b12c <OnPrint@@Base+0x119c>  // b.none
   1b128:	ret
   1b12c:	str	x30, [sp, #-16]!
   1b130:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b134:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b138:	mov	x4, #0x100000              	// #1048576
   1b13c:	add	x2, x2, #0x558
   1b140:	add	x0, x0, #0x588
   1b144:	mov	x3, x4
   1b148:	mov	w1, #0x61                  	// #97
   1b14c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b150:	adrp	x0, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1b154:	add	x0, x0, #0x270
   1b158:	ret
   1b15c:	nop
   1b160:	mov	w2, w0
   1b164:	cbz	w0, 1b1dc <OnPrint@@Base+0x124c>
   1b168:	str	x30, [sp, #-16]!
   1b16c:	and	x3, x2, #0x7fffffff
   1b170:	mov	w4, w0
   1b174:	cmp	x3, w0, uxtw
   1b178:	b.ne	1b210 <OnPrint@@Base+0x1280>  // b.any
   1b17c:	lsr	w3, w0, #23
   1b180:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b184:	add	x0, x0, #0xe70
   1b188:	mov	x5, #0xfffff               	// #1048575
   1b18c:	lsl	x3, x3, #12
   1b190:	add	x6, x3, #0x1, lsl #12
   1b194:	cmp	x3, x5
   1b198:	b.hi	1b228 <OnPrint@@Base+0x1298>  // b.pmore
   1b19c:	ldr	x1, [x0, x3, lsl #3]
   1b1a0:	ands	x1, x1, #0xfffffffffffffffe
   1b1a4:	b.ne	1b1b4 <OnPrint@@Base+0x1224>  // b.any
   1b1a8:	b	1b1f4 <OnPrint@@Base+0x1264>
   1b1ac:	ldr	x1, [x1]
   1b1b0:	cbz	x1, 1b1f4 <OnPrint@@Base+0x1264>
   1b1b4:	ldr	w4, [x1, #8]
   1b1b8:	cmp	w2, w4
   1b1bc:	b.ne	1b1ac <OnPrint@@Base+0x121c>  // b.any
   1b1c0:	ldp	w2, w3, [x1, #16]
   1b1c4:	add	x0, x1, #0x18
   1b1c8:	mov	x1, #0x0                   	// #0
   1b1cc:	bfxil	x1, x2, #0, #32
   1b1d0:	ldr	x30, [sp], #16
   1b1d4:	bfi	x1, x3, #32, #32
   1b1d8:	ret
   1b1dc:	mov	x1, #0x0                   	// #0
   1b1e0:	mov	w3, #0x0                   	// #0
   1b1e4:	bfxil	x1, x2, #0, #32
   1b1e8:	mov	x0, #0x0                   	// #0
   1b1ec:	bfi	x1, x3, #32, #32
   1b1f0:	ret
   1b1f4:	add	x3, x3, #0x1
   1b1f8:	cmp	x6, x3
   1b1fc:	b.ne	1b194 <OnPrint@@Base+0x1204>  // b.any
   1b200:	mov	w3, #0x0                   	// #0
   1b204:	mov	w2, #0x0                   	// #0
   1b208:	mov	x0, #0x0                   	// #0
   1b20c:	b	1b1c8 <OnPrint@@Base+0x1238>
   1b210:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b214:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b218:	add	x2, x2, #0x5d0
   1b21c:	add	x0, x0, #0x600
   1b220:	mov	w1, #0x8c                  	// #140
   1b224:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b228:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b22c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1b230:	add	x2, x2, #0x648
   1b234:	add	x0, x0, #0x600
   1b238:	mov	x4, #0x100000              	// #1048576
   1b23c:	mov	w1, #0x91                  	// #145
   1b240:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b244:	nop
   1b248:	adrp	x3, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b24c:	add	x3, x3, #0xe70
   1b250:	mov	w0, #0x0                   	// #0
   1b254:	nop
   1b258:	sxtw	x2, w0
   1b25c:	ldr	x1, [x3, x2, lsl #3]
   1b260:	dmb	ish
   1b264:	and	x1, x1, #0xfffffffffffffffe
   1b268:	str	x1, [x3, x2, lsl #3]
   1b26c:	add	w0, w0, #0x1
   1b270:	cmp	w0, #0x100, lsl #12
   1b274:	b.ne	1b258 <OnPrint@@Base+0x12c8>  // b.any
   1b278:	ret
   1b27c:	nop
   1b280:	ldr	x4, [x0, #16]
   1b284:	cbnz	x4, 1b294 <OnPrint@@Base+0x1304>
   1b288:	mov	x0, #0x0                   	// #0
   1b28c:	mov	x1, #0x0                   	// #0
   1b290:	ret
   1b294:	mov	x5, x4
   1b298:	mov	x2, #0x0                   	// #0
   1b29c:	str	x30, [sp, #-16]!
   1b2a0:	cmp	x5, x2
   1b2a4:	b.ls	1b2d8 <OnPrint@@Base+0x1348>  // b.plast
   1b2a8:	add	x3, x5, x2
   1b2ac:	ldr	x7, [x0]
   1b2b0:	cmp	x4, x3, lsr #1
   1b2b4:	lsr	x3, x3, #1
   1b2b8:	b.ls	1b314 <OnPrint@@Base+0x1384>  // b.plast
   1b2bc:	lsl	x6, x3, #4
   1b2c0:	ldr	w6, [x7, x6]
   1b2c4:	cmp	w1, w6
   1b2c8:	b.ls	1b30c <OnPrint@@Base+0x137c>  // b.plast
   1b2cc:	add	x2, x3, #0x1
   1b2d0:	cmp	x5, x2
   1b2d4:	b.hi	1b2a8 <OnPrint@@Base+0x1318>  // b.pmore
   1b2d8:	cmp	x4, x2
   1b2dc:	b.cc	1b2fc <OnPrint@@Base+0x136c>  // b.lo, b.ul, b.last
   1b2e0:	ldr	x0, [x0]
   1b2e4:	b.eq	1b33c <OnPrint@@Base+0x13ac>  // b.none
   1b2e8:	lsl	x2, x2, #4
   1b2ec:	add	x3, x0, x2
   1b2f0:	ldr	w0, [x0, x2]
   1b2f4:	cmp	w0, w1
   1b2f8:	b.eq	1b32c <OnPrint@@Base+0x139c>  // b.none
   1b2fc:	mov	x0, #0x0                   	// #0
   1b300:	mov	x1, #0x0                   	// #0
   1b304:	ldr	x30, [sp], #16
   1b308:	ret
   1b30c:	mov	x5, x3
   1b310:	b	1b2a0 <OnPrint@@Base+0x1310>
   1b314:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b318:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b31c:	add	x2, x2, #0x190
   1b320:	add	x0, x0, #0x1a8
   1b324:	mov	w1, #0x1ba                 	// #442
   1b328:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b32c:	ldr	x1, [x3, #8]
   1b330:	add	x0, x1, #0x18
   1b334:	ldr	x1, [x1, #16]
   1b338:	b	1b304 <OnPrint@@Base+0x1374>
   1b33c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b340:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b344:	add	x2, x2, #0x190
   1b348:	add	x0, x0, #0x1a8
   1b34c:	mov	x3, x4
   1b350:	mov	w1, #0x1b6                 	// #438
   1b354:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b358:	stp	x19, x20, [sp, #-128]!
   1b35c:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1b360:	mov	x19, x0
   1b364:	stp	x21, x22, [sp, #16]
   1b368:	ldr	x21, [x20, #4016]
   1b36c:	stp	x23, x24, [sp, #32]
   1b370:	stp	x25, x26, [sp, #48]
   1b374:	stp	x27, x28, [sp, #64]
   1b378:	str	x30, [sp, #80]
   1b37c:	stp	xzr, xzr, [x0]
   1b380:	ldr	x0, [x21]
   1b384:	str	xzr, [x19, #16]
   1b388:	cbz	x0, 1b5bc <OnPrint@@Base+0x162c>
   1b38c:	sub	x1, x0, #0x1
   1b390:	tst	x1, x0
   1b394:	b.ne	1b5ec <OnPrint@@Base+0x165c>  // b.any
   1b398:	add	x21, x0, #0xf
   1b39c:	neg	x0, x0
   1b3a0:	and	x21, x21, x0
   1b3a4:	mov	w2, #0x0                   	// #0
   1b3a8:	mov	x0, x21
   1b3ac:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b3b0:	add	x1, x24, #0x178
   1b3b4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1b3b8:	ldr	x1, [x19]
   1b3bc:	mov	x23, x0
   1b3c0:	ldr	x2, [x19, #16]
   1b3c4:	adrp	x22, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b3c8:	lsl	x2, x2, #4
   1b3cc:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1b3d0:	ldp	x0, x1, [x19]
   1b3d4:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1b3d8:	stp	x23, x21, [x19]
   1b3dc:	add	x0, x22, #0xe70
   1b3e0:	add	x0, x0, #0x800, lsl #12
   1b3e4:	ldr	x4, [x0, #1024]
   1b3e8:	add	x4, x4, #0x64
   1b3ec:	cmp	x4, x21, lsr #4
   1b3f0:	b.hi	1b53c <OnPrint@@Base+0x15ac>  // b.pmore
   1b3f4:	ldr	x20, [x20, #4016]
   1b3f8:	add	x22, x22, #0xe70
   1b3fc:	add	x23, sp, #0x70
   1b400:	mov	w21, #0x0                   	// #0
   1b404:	sxtw	x0, w21
   1b408:	ldr	x5, [x22, x0, lsl #3]
   1b40c:	mov	x25, #0x1                   	// #1
   1b410:	ands	x27, x5, #0xfffffffffffffffe
   1b414:	add	x26, x24, #0x178
   1b418:	b.eq	1b460 <OnPrint@@Base+0x14d0>  // b.none
   1b41c:	ldp	x4, x3, [x19, #8]
   1b420:	ldr	w0, [x27, #8]
   1b424:	str	w0, [sp, #112]
   1b428:	str	x27, [sp, #120]
   1b42c:	lsr	x4, x4, #4
   1b430:	cmp	x3, x4
   1b434:	b.hi	1b5a4 <OnPrint@@Base+0x1614>  // b.pmore
   1b438:	add	x28, x3, #0x1
   1b43c:	b.eq	1b49c <OnPrint@@Base+0x150c>  // b.none
   1b440:	ldr	x4, [x19]
   1b444:	str	x28, [x19, #16]
   1b448:	add	x0, x4, x3, lsl #4
   1b44c:	mov	x1, x23
   1b450:	mov	x2, #0x10                  	// #16
   1b454:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1b458:	ldr	x27, [x27]
   1b45c:	cbnz	x27, 1b41c <OnPrint@@Base+0x148c>
   1b460:	add	w21, w21, #0x1
   1b464:	cmp	w21, #0x100, lsl #12
   1b468:	b.ne	1b404 <OnPrint@@Base+0x1474>  // b.any
   1b46c:	ldr	x0, [x19]
   1b470:	adrp	x2, 1b000 <OnPrint@@Base+0x1070>
   1b474:	ldr	x1, [x19, #16]
   1b478:	add	x2, x2, #0xc8
   1b47c:	bl	1b6d0 <OnPrint@@Base+0x1740>
   1b480:	ldp	x21, x22, [sp, #16]
   1b484:	ldp	x23, x24, [sp, #32]
   1b488:	ldp	x25, x26, [sp, #48]
   1b48c:	ldp	x27, x28, [sp, #64]
   1b490:	ldr	x30, [sp, #80]
   1b494:	ldp	x19, x20, [sp], #128
   1b498:	ret
   1b49c:	tst	x28, x3
   1b4a0:	b.eq	1b4d8 <OnPrint@@Base+0x1548>  // b.none
   1b4a4:	clz	x0, x28
   1b4a8:	mov	w1, #0x3f                  	// #63
   1b4ac:	sub	w0, w1, w0
   1b4b0:	add	w4, w0, #0x1
   1b4b4:	lsl	x4, x25, x4
   1b4b8:	cmp	x28, x4
   1b4bc:	b.cs	1b608 <OnPrint@@Base+0x1678>  // b.hs, b.nlast
   1b4c0:	lsl	x0, x25, x0
   1b4c4:	cmp	x28, x0
   1b4c8:	b.ls	1b624 <OnPrint@@Base+0x1694>  // b.plast
   1b4cc:	cmp	x3, x4
   1b4d0:	b.hi	1b5c8 <OnPrint@@Base+0x1638>  // b.pmore
   1b4d4:	mov	x28, x4
   1b4d8:	ldr	x0, [x20]
   1b4dc:	lsl	x28, x28, #4
   1b4e0:	cbz	x0, 1b5e0 <OnPrint@@Base+0x1650>
   1b4e4:	sub	x1, x0, #0x1
   1b4e8:	tst	x0, x1
   1b4ec:	b.ne	1b5ec <OnPrint@@Base+0x165c>  // b.any
   1b4f0:	add	x28, x28, x1
   1b4f4:	neg	x0, x0
   1b4f8:	and	x28, x28, x0
   1b4fc:	mov	x1, x26
   1b500:	mov	x0, x28
   1b504:	mov	w2, #0x0                   	// #0
   1b508:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1b50c:	str	x0, [sp, #104]
   1b510:	ldr	x1, [x19]
   1b514:	ldr	x2, [x19, #16]
   1b518:	lsl	x2, x2, #4
   1b51c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1b520:	ldp	x0, x1, [x19]
   1b524:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1b528:	ldr	x3, [x19, #16]
   1b52c:	ldr	x4, [sp, #104]
   1b530:	stp	x4, x28, [x19]
   1b534:	add	x28, x3, #0x1
   1b538:	b	1b444 <OnPrint@@Base+0x14b4>
   1b53c:	ldr	x3, [x19, #16]
   1b540:	cmp	x4, x3
   1b544:	b.cc	1b5c8 <OnPrint@@Base+0x1638>  // b.lo, b.ul, b.last
   1b548:	ldr	x23, [x20, #4016]
   1b54c:	lsl	x21, x4, #4
   1b550:	ldr	x0, [x23]
   1b554:	cbz	x0, 1b5fc <OnPrint@@Base+0x166c>
   1b558:	sub	x1, x0, #0x1
   1b55c:	tst	x1, x0
   1b560:	b.ne	1b5ec <OnPrint@@Base+0x165c>  // b.any
   1b564:	add	x21, x21, x1
   1b568:	neg	x0, x0
   1b56c:	and	x21, x21, x0
   1b570:	add	x1, x24, #0x178
   1b574:	mov	w2, #0x0                   	// #0
   1b578:	mov	x0, x21
   1b57c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1b580:	mov	x23, x0
   1b584:	ldr	x1, [x19]
   1b588:	ldr	x2, [x19, #16]
   1b58c:	lsl	x2, x2, #4
   1b590:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1b594:	ldp	x0, x1, [x19]
   1b598:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1b59c:	stp	x23, x21, [x19]
   1b5a0:	b	1b3f4 <OnPrint@@Base+0x1464>
   1b5a4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1b5a8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b5ac:	add	x2, x2, #0x428
   1b5b0:	add	x0, x0, #0x1a8
   1b5b4:	mov	w1, #0x1be                 	// #446
   1b5b8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b5bc:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1b5c0:	str	x0, [x21]
   1b5c4:	b	1b38c <OnPrint@@Base+0x13fc>
   1b5c8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1b5cc:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b5d0:	add	x2, x2, #0x4a0
   1b5d4:	add	x0, x0, #0x1a8
   1b5d8:	mov	w1, #0x1fd                 	// #509
   1b5dc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b5e0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1b5e4:	str	x0, [x20]
   1b5e8:	b	1b4e4 <OnPrint@@Base+0x1554>
   1b5ec:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b5f0:	add	x0, x0, #0x160
   1b5f4:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1b5f8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1b5fc:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1b600:	str	x0, [x23]
   1b604:	b	1b558 <OnPrint@@Base+0x15c8>
   1b608:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1b60c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b610:	mov	x3, x28
   1b614:	add	x2, x2, #0x458
   1b618:	add	x0, x0, #0x1a8
   1b61c:	mov	w1, #0x17b                 	// #379
   1b620:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b624:	mov	x4, x0
   1b628:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1b62c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1b630:	mov	x3, x28
   1b634:	add	x2, x2, #0x480
   1b638:	add	x0, x0, #0x1a8
   1b63c:	mov	w1, #0x17c                 	// #380
   1b640:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b644:	nop
   1b648:	stp	x19, x20, [sp, #-32]!
   1b64c:	adrp	x19, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b650:	add	x19, x19, #0xe70
   1b654:	add	x20, x19, #0x800, lsl #12
   1b658:	str	x30, [sp, #16]
   1b65c:	nop
   1b660:	mov	x0, x19
   1b664:	add	x19, x19, #0x8
   1b668:	bl	1b930 <OnPrint@@Base+0x19a0>
   1b66c:	cmp	x19, x20
   1b670:	b.ne	1b660 <OnPrint@@Base+0x16d0>  // b.any
   1b674:	ldr	x30, [sp, #16]
   1b678:	ldp	x19, x20, [sp], #32
   1b67c:	ret
   1b680:	str	x30, [sp, #-16]!
   1b684:	mov	x2, x1
   1b688:	mov	x3, #0x0                   	// #0
   1b68c:	mov	x1, x0
   1b690:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b694:	add	x0, x0, #0xe70
   1b698:	bl	1b998 <OnPrint@@Base+0x1a08>
   1b69c:	cbz	x0, 1b6ac <OnPrint@@Base+0x171c>
   1b6a0:	ldr	w0, [x0, #8]
   1b6a4:	ldr	x30, [sp], #16
   1b6a8:	ret
   1b6ac:	mov	w0, #0x0                   	// #0
   1b6b0:	ldr	x30, [sp], #16
   1b6b4:	ret
   1b6b8:	mov	x2, x1
   1b6bc:	mov	x3, #0x0                   	// #0
   1b6c0:	mov	x1, x0
   1b6c4:	adrp	x0, 1ae000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1b6c8:	add	x0, x0, #0xe70
   1b6cc:	b	1b998 <OnPrint@@Base+0x1a08>
   1b6d0:	cmp	x1, #0x1
   1b6d4:	b.ls	1b8a0 <OnPrint@@Base+0x1910>  // b.plast
   1b6d8:	stp	x19, x20, [sp, #-112]!
   1b6dc:	mov	x20, x0
   1b6e0:	stp	x23, x24, [sp, #32]
   1b6e4:	mov	x23, x2
   1b6e8:	stp	x27, x28, [sp, #64]
   1b6ec:	mov	x27, x1
   1b6f0:	stp	x21, x22, [sp, #16]
   1b6f4:	mov	x22, #0x1                   	// #1
   1b6f8:	stp	x25, x26, [sp, #48]
   1b6fc:	str	x30, [sp, #80]
   1b700:	mov	x19, x22
   1b704:	nop
   1b708:	sub	x0, x19, #0x1
   1b70c:	mov	x21, x19
   1b710:	lsr	x19, x0, #1
   1b714:	lsl	x21, x21, #4
   1b718:	add	x25, x20, x21
   1b71c:	lsl	x26, x19, #4
   1b720:	mov	x1, x25
   1b724:	add	x24, x20, x26
   1b728:	mov	x0, x24
   1b72c:	blr	x23
   1b730:	tst	w0, #0xff
   1b734:	b.eq	1b754 <OnPrint@@Base+0x17c4>  // b.none
   1b738:	ldp	x0, x1, [x24]
   1b73c:	ldr	w3, [x20, x21]
   1b740:	ldr	x2, [x25, #8]
   1b744:	stp	x0, x1, [x25]
   1b748:	str	w3, [x20, x26]
   1b74c:	str	x2, [x24, #8]
   1b750:	cbnz	x19, 1b708 <OnPrint@@Base+0x1778>
   1b754:	add	x0, x22, #0x1
   1b758:	cmp	x27, x0
   1b75c:	b.eq	1b768 <OnPrint@@Base+0x17d8>  // b.none
   1b760:	mov	x22, x0
   1b764:	b	1b700 <OnPrint@@Base+0x1770>
   1b768:	add	x0, x20, x27, lsl #4
   1b76c:	str	x0, [sp, #104]
   1b770:	ldr	x4, [sp, #104]
   1b774:	mov	x21, #0x0                   	// #0
   1b778:	ldr	w1, [x20]
   1b77c:	lsl	x19, x21, #1
   1b780:	ldr	x0, [x20, #8]
   1b784:	add	x26, x19, #0x1
   1b788:	ldp	x2, x3, [x4, #-16]
   1b78c:	stp	x2, x3, [x20]
   1b790:	add	x28, x21, #0x1
   1b794:	stur	w1, [x4, #-16]
   1b798:	add	x19, x19, #0x2
   1b79c:	stur	x0, [x4, #-8]
   1b7a0:	cmp	x26, x22
   1b7a4:	b.cs	1b81c <OnPrint@@Base+0x188c>  // b.hs, b.nlast
   1b7a8:	lsl	x24, x26, #4
   1b7ac:	lsl	x25, x21, #4
   1b7b0:	add	x2, x20, x24
   1b7b4:	add	x27, x20, x25
   1b7b8:	mov	x1, x2
   1b7bc:	mov	x0, x27
   1b7c0:	str	x2, [sp, #96]
   1b7c4:	blr	x23
   1b7c8:	tst	w0, #0xff
   1b7cc:	b.eq	1b81c <OnPrint@@Base+0x188c>  // b.none
   1b7d0:	cmp	x19, x22
   1b7d4:	ldr	x2, [sp, #96]
   1b7d8:	b.cc	1b8a4 <OnPrint@@Base+0x1914>  // b.lo, b.ul, b.last
   1b7dc:	cmp	x26, x21
   1b7e0:	b.eq	1b870 <OnPrint@@Base+0x18e0>  // b.none
   1b7e4:	ldp	x0, x1, [x2]
   1b7e8:	mov	x19, x26
   1b7ec:	ldr	w5, [x27]
   1b7f0:	ldr	x4, [x27, #8]
   1b7f4:	stp	x0, x1, [x27]
   1b7f8:	str	w5, [x20, x24]
   1b7fc:	str	x4, [x2, #8]
   1b800:	mov	x21, x19
   1b804:	add	x28, x21, #0x1
   1b808:	lsl	x19, x21, #1
   1b80c:	add	x26, x19, #0x1
   1b810:	add	x19, x19, #0x2
   1b814:	cmp	x26, x22
   1b818:	b.cc	1b7a8 <OnPrint@@Base+0x1818>  // b.lo, b.ul, b.last
   1b81c:	cmp	x19, x22
   1b820:	b.cs	1b870 <OnPrint@@Base+0x18e0>  // b.hs, b.nlast
   1b824:	lsl	x25, x21, #4
   1b828:	add	x1, x20, x28, lsl #5
   1b82c:	add	x0, x20, x25
   1b830:	blr	x23
   1b834:	tst	w0, #0xff
   1b838:	b.eq	1b870 <OnPrint@@Base+0x18e0>  // b.none
   1b83c:	cmp	x19, x21
   1b840:	b.eq	1b870 <OnPrint@@Base+0x18e0>  // b.none
   1b844:	lsl	x0, x19, #4
   1b848:	add	x4, x20, x25
   1b84c:	add	x1, x20, x0
   1b850:	ldr	w6, [x20, x25]
   1b854:	cmp	x19, x22
   1b858:	ldr	x5, [x4, #8]
   1b85c:	ldp	x2, x3, [x1]
   1b860:	stp	x2, x3, [x4]
   1b864:	str	w6, [x20, x0]
   1b868:	str	x5, [x1, #8]
   1b86c:	b.cc	1b800 <OnPrint@@Base+0x1870>  // b.lo, b.ul, b.last
   1b870:	ldr	x0, [sp, #104]
   1b874:	subs	x22, x22, #0x1
   1b878:	sub	x0, x0, #0x10
   1b87c:	str	x0, [sp, #104]
   1b880:	b.ne	1b770 <OnPrint@@Base+0x17e0>  // b.any
   1b884:	ldp	x21, x22, [sp, #16]
   1b888:	ldp	x23, x24, [sp, #32]
   1b88c:	ldp	x25, x26, [sp, #48]
   1b890:	ldp	x27, x28, [sp, #64]
   1b894:	ldr	x30, [sp, #80]
   1b898:	ldp	x19, x20, [sp], #112
   1b89c:	ret
   1b8a0:	ret
   1b8a4:	add	x1, x20, x28, lsl #5
   1b8a8:	mov	x0, x2
   1b8ac:	blr	x23
   1b8b0:	tst	w0, #0xff
   1b8b4:	csel	x19, x19, x26, ne  // ne = any
   1b8b8:	b	1b83c <OnPrint@@Base+0x18ac>
   1b8bc:	nop
   1b8c0:	cbz	x0, 1b924 <OnPrint@@Base+0x1994>
   1b8c4:	and	w7, w3, #0xfff00000
   1b8c8:	ldr	w3, [x0, #12]
   1b8cc:	and	w3, w3, #0xfff00000
   1b8d0:	cmp	w7, w3
   1b8d4:	b.ne	1b918 <OnPrint@@Base+0x1988>  // b.any
   1b8d8:	ldr	x3, [x0, #16]
   1b8dc:	cmp	x2, x3
   1b8e0:	b.ne	1b918 <OnPrint@@Base+0x1988>  // b.any
   1b8e4:	ldr	w6, [x0, #16]
   1b8e8:	cbz	x6, 1b920 <OnPrint@@Base+0x1990>
   1b8ec:	add	x8, x0, #0x18
   1b8f0:	mov	x3, #0x0                   	// #0
   1b8f4:	b	1b900 <OnPrint@@Base+0x1970>
   1b8f8:	cmp	x3, x6
   1b8fc:	b.eq	1b920 <OnPrint@@Base+0x1990>  // b.none
   1b900:	ldr	x5, [x8, x3, lsl #3]
   1b904:	ldr	x4, [x1, x3, lsl #3]
   1b908:	add	x3, x3, #0x1
   1b90c:	cmp	x5, x4
   1b910:	b.eq	1b8f8 <OnPrint@@Base+0x1968>  // b.none
   1b914:	nop
   1b918:	ldr	x0, [x0]
   1b91c:	cbnz	x0, 1b8c8 <OnPrint@@Base+0x1938>
   1b920:	ret
   1b924:	mov	x0, #0x0                   	// #0
   1b928:	ret
   1b92c:	nop
   1b930:	stp	x19, x20, [sp, #-32]!
   1b934:	mov	x20, x0
   1b938:	mov	w19, #0x0                   	// #0
   1b93c:	str	x30, [sp, #16]
   1b940:	ldr	x0, [x20]
   1b944:	orr	x1, x0, #0x1
   1b948:	tbnz	w0, #0, 1b96c <OnPrint@@Base+0x19dc>
   1b94c:	ldxr	x2, [x20]
   1b950:	cmp	x2, x0
   1b954:	b.ne	1b960 <OnPrint@@Base+0x19d0>  // b.any
   1b958:	stlxr	w3, x1, [x20]
   1b95c:	cbnz	w3, 1b94c <OnPrint@@Base+0x19bc>
   1b960:	dmb	ish
   1b964:	cmp	x0, x2
   1b968:	b.eq	1b988 <OnPrint@@Base+0x19f8>  // b.none
   1b96c:	cmp	w19, #0x9
   1b970:	b.gt	1b97c <OnPrint@@Base+0x19ec>
   1b974:	add	w19, w19, #0x1
   1b978:	b	1b940 <OnPrint@@Base+0x19b0>
   1b97c:	add	w19, w19, #0x1
   1b980:	bl	156c0 <__sanitizer_set_report_fd@@Base+0x27a0>
   1b984:	b	1b940 <OnPrint@@Base+0x19b0>
   1b988:	ldr	x30, [sp, #16]
   1b98c:	ldp	x19, x20, [sp], #32
   1b990:	ret
   1b994:	nop
   1b998:	stp	x19, x20, [sp, #-160]!
   1b99c:	mov	x20, x1
   1b9a0:	stp	x21, x22, [sp, #16]
   1b9a4:	mov	x22, x2
   1b9a8:	stp	x23, x24, [sp, #32]
   1b9ac:	mov	x24, x0
   1b9b0:	mov	x23, x3
   1b9b4:	stp	x25, x26, [sp, #48]
   1b9b8:	mov	w25, w2
   1b9bc:	str	x30, [sp, #80]
   1b9c0:	cbz	x3, 1b9c8 <OnPrint@@Base+0x1a38>
   1b9c4:	strb	wzr, [x3]
   1b9c8:	cmp	w25, #0x0
   1b9cc:	mov	x0, #0x0                   	// #0
   1b9d0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   1b9d4:	b.ne	1b9f0 <OnPrint@@Base+0x1a60>  // b.any
   1b9d8:	ldp	x21, x22, [sp, #16]
   1b9dc:	ldp	x23, x24, [sp, #32]
   1b9e0:	ldp	x25, x26, [sp, #48]
   1b9e4:	ldr	x30, [sp, #80]
   1b9e8:	ldp	x19, x20, [sp], #160
   1b9ec:	ret
   1b9f0:	mov	w4, #0xb28c                	// #45708
   1b9f4:	mov	w19, #0xe995                	// #59797
   1b9f8:	movk	w4, #0x9747, lsl #16
   1b9fc:	stp	x27, x28, [sp, #64]
   1ba00:	eor	w5, w4, w25, lsl #3
   1ba04:	mov	w27, w25
   1ba08:	mov	x1, #0x0                   	// #0
   1ba0c:	movk	w19, #0x5bd1, lsl #16
   1ba10:	ldr	x4, [x20, x1, lsl #3]
   1ba14:	mul	w5, w5, w19
   1ba18:	add	x1, x1, #0x1
   1ba1c:	cmp	x27, x1
   1ba20:	mul	w4, w19, w4
   1ba24:	eor	w4, w4, w4, lsr #24
   1ba28:	mul	w4, w4, w19
   1ba2c:	eor	w5, w4, w5
   1ba30:	b.hi	1ba10 <OnPrint@@Base+0x1a80>  // b.pmore
   1ba34:	eor	w4, w5, w5, lsr #13
   1ba38:	mul	w19, w4, w19
   1ba3c:	eor	w19, w19, w19, lsr #15
   1ba40:	and	x26, x19, #0xfffff
   1ba44:	add	x21, x24, x26, lsl #3
   1ba48:	ldr	x28, [x24, x26, lsl #3]
   1ba4c:	and	x28, x28, #0xfffffffffffffffe
   1ba50:	bfxil	x22, x25, #0, #32
   1ba54:	mov	x2, x22
   1ba58:	mov	x0, x28
   1ba5c:	mov	w3, w19
   1ba60:	mov	x1, x20
   1ba64:	bl	1b8c0 <OnPrint@@Base+0x1930>
   1ba68:	cbz	x0, 1ba88 <OnPrint@@Base+0x1af8>
   1ba6c:	ldp	x21, x22, [sp, #16]
   1ba70:	ldp	x23, x24, [sp, #32]
   1ba74:	ldp	x25, x26, [sp, #48]
   1ba78:	ldp	x27, x28, [sp, #64]
   1ba7c:	ldr	x30, [sp, #80]
   1ba80:	ldp	x19, x20, [sp], #160
   1ba84:	ret
   1ba88:	mov	x0, x21
   1ba8c:	bl	1b930 <OnPrint@@Base+0x19a0>
   1ba90:	str	x0, [sp, #104]
   1ba94:	mov	x21, x0
   1ba98:	cmp	x28, x0
   1ba9c:	b.eq	1bac4 <OnPrint@@Base+0x1b34>  // b.none
   1baa0:	mov	w3, w19
   1baa4:	mov	x1, x20
   1baa8:	mov	x2, x22
   1baac:	bl	1b8c0 <OnPrint@@Base+0x1930>
   1bab0:	cbz	x0, 1bac4 <OnPrint@@Base+0x1b34>
   1bab4:	dmb	ish
   1bab8:	str	x21, [x24, x26, lsl #3]
   1babc:	ldp	x27, x28, [sp, #64]
   1bac0:	b	1b9d8 <OnPrint@@Base+0x1a48>
   1bac4:	lsr	x6, x26, #12
   1bac8:	add	x0, x6, #0x200, lsl #12
   1bacc:	add	x0, x24, x0, lsl #2
   1bad0:	ldxr	w3, [x0]
   1bad4:	add	w1, w3, #0x1
   1bad8:	stlxr	w2, w1, [x0]
   1badc:	cbnz	w2, 1bad0 <OnPrint@@Base+0x1b40>
   1bae0:	add	x7, x24, #0x800, lsl #12
   1bae4:	mov	w0, #0x7fffff              	// #8388607
   1bae8:	add	w3, w3, #0x1
   1baec:	dmb	ish
   1baf0:	cmp	w3, w0
   1baf4:	ldr	x0, [x7, #1024]
   1baf8:	add	x0, x0, #0x1
   1bafc:	str	x0, [x7, #1024]
   1bb00:	b.hi	1bcb4 <OnPrint@@Base+0x1d24>  // b.pmore
   1bb04:	orr	w6, w3, w6, lsl #23
   1bb08:	cbz	w6, 1bcd0 <OnPrint@@Base+0x1d40>
   1bb0c:	adrp	x8, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1bb10:	sub	w28, w25, #0x1
   1bb14:	add	x28, x28, #0x4
   1bb18:	ldr	x1, [x8, #3824]
   1bb1c:	lsl	x28, x28, #3
   1bb20:	add	x2, x1, #0x8
   1bb24:	ldr	x21, [x1, #8]
   1bb28:	dmb	ish
   1bb2c:	ldr	x3, [x1, #16]
   1bb30:	dmb	ish
   1bb34:	cbz	x21, 1bbbc <OnPrint@@Base+0x1c2c>
   1bb38:	add	x0, x28, x21
   1bb3c:	cmp	x0, x3
   1bb40:	b.hi	1bbbc <OnPrint@@Base+0x1c2c>  // b.pmore
   1bb44:	ldxr	x3, [x2]
   1bb48:	cmp	x3, x21
   1bb4c:	b.ne	1bb58 <OnPrint@@Base+0x1bc8>  // b.any
   1bb50:	stlxr	w4, x0, [x2]
   1bb54:	cbnz	w4, 1bb44 <OnPrint@@Base+0x1bb4>
   1bb58:	dmb	ish
   1bb5c:	cmp	x3, x21
   1bb60:	b.ne	1bb24 <OnPrint@@Base+0x1b94>  // b.any
   1bb64:	ldr	x0, [x7, #1032]
   1bb68:	and	w19, w19, #0xfff00000
   1bb6c:	lsr	x22, x22, #32
   1bb70:	lsl	x2, x27, #3
   1bb74:	add	x0, x0, x28
   1bb78:	str	x0, [x7, #1032]
   1bb7c:	str	w6, [x21, #8]
   1bb80:	mov	x1, x20
   1bb84:	str	w19, [x21, #12]
   1bb88:	add	x0, x21, #0x18
   1bb8c:	stp	w25, w22, [x21, #16]
   1bb90:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1bb94:	ldr	x0, [sp, #104]
   1bb98:	str	x0, [x21]
   1bb9c:	dmb	ish
   1bba0:	str	x21, [x24, x26, lsl #3]
   1bba4:	cbz	x23, 1bbb0 <OnPrint@@Base+0x1c20>
   1bba8:	mov	w0, #0x1                   	// #1
   1bbac:	strb	w0, [x23]
   1bbb0:	mov	x0, x21
   1bbb4:	ldp	x27, x28, [sp, #64]
   1bbb8:	b	1b9d8 <OnPrint@@Base+0x1a48>
   1bbbc:	ldr	x0, [x8, #3824]
   1bbc0:	mov	w2, #0x1                   	// #1
   1bbc4:	ldxrb	w1, [x0]
   1bbc8:	stxrb	w3, w2, [x0]
   1bbcc:	cbnz	w3, 1bbc4 <OnPrint@@Base+0x1c34>
   1bbd0:	dmb	ish
   1bbd4:	tst	w1, #0xff
   1bbd8:	b.eq	1bbf4 <OnPrint@@Base+0x1c64>  // b.none
   1bbdc:	str	w6, [sp, #112]
   1bbe0:	str	x7, [sp, #120]
   1bbe4:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   1bbe8:	ldr	w6, [sp, #112]
   1bbec:	adrp	x8, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1bbf0:	ldr	x7, [sp, #120]
   1bbf4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1bbf8:	ldr	x3, [x8, #3824]
   1bbfc:	add	x1, x1, #0x688
   1bc00:	add	x5, x3, #0x8
   1bc04:	nop
   1bc08:	ldr	x21, [x3, #8]
   1bc0c:	dmb	ish
   1bc10:	ldr	x2, [x3, #16]
   1bc14:	dmb	ish
   1bc18:	cbz	x21, 1bc54 <OnPrint@@Base+0x1cc4>
   1bc1c:	add	x0, x28, x21
   1bc20:	cmp	x0, x2
   1bc24:	b.hi	1bc54 <OnPrint@@Base+0x1cc4>  // b.pmore
   1bc28:	ldxr	x2, [x5]
   1bc2c:	cmp	x2, x21
   1bc30:	b.ne	1bc3c <OnPrint@@Base+0x1cac>  // b.any
   1bc34:	stlxr	w4, x0, [x5]
   1bc38:	cbnz	w4, 1bc28 <OnPrint@@Base+0x1c98>
   1bc3c:	dmb	ish
   1bc40:	cmp	x2, x21
   1bc44:	b.ne	1bc08 <OnPrint@@Base+0x1c78>  // b.any
   1bc48:	dmb	ish
   1bc4c:	strb	wzr, [x3]
   1bc50:	b	1bb64 <OnPrint@@Base+0x1bd4>
   1bc54:	ldr	x9, [x8, #3824]
   1bc58:	cmp	x28, #0x10, lsl #12
   1bc5c:	mov	x21, #0x10000               	// #65536
   1bc60:	csel	x21, x28, x21, cs  // cs = hs, nlast
   1bc64:	mov	x0, x21
   1bc68:	mov	w2, #0x0                   	// #0
   1bc6c:	str	xzr, [x9, #8]
   1bc70:	stp	x9, x1, [sp, #112]
   1bc74:	str	w6, [sp, #132]
   1bc78:	stp	x3, x7, [sp, #136]
   1bc7c:	str	x5, [sp, #152]
   1bc80:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1bc84:	dmb	ish
   1bc88:	add	x21, x21, x0
   1bc8c:	ldr	x9, [sp, #112]
   1bc90:	str	x21, [x9, #16]
   1bc94:	dmb	ish
   1bc98:	str	x0, [x9, #8]
   1bc9c:	adrp	x8, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1bca0:	ldr	w6, [sp, #132]
   1bca4:	ldr	x1, [sp, #120]
   1bca8:	ldp	x3, x7, [sp, #136]
   1bcac:	ldr	x5, [sp, #152]
   1bcb0:	b	1bc08 <OnPrint@@Base+0x1c78>
   1bcb4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1bcb8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1bcbc:	add	x2, x2, #0x660
   1bcc0:	add	x0, x0, #0x600
   1bcc4:	mov	x4, #0x800000              	// #8388608
   1bcc8:	mov	w1, #0x77                  	// #119
   1bccc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1bcd0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1bcd4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1bcd8:	add	x2, x2, #0x678
   1bcdc:	add	x0, x0, #0x600
   1bce0:	mov	x4, #0x0                   	// #0
   1bce4:	mov	x3, #0x0                   	// #0
   1bce8:	mov	w1, #0x79                  	// #121
   1bcec:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1bcf0:	add	x0, x0, #0x4
   1bcf4:	ret
   1bcf8:	str	x30, [sp, #-16]!
   1bcfc:	mov	x0, x30
   1bd00:	ldr	x30, [sp], #16
   1bd04:	ret
   1bd08:	stp	x19, x20, [sp, #-32]!
   1bd0c:	cmp	x3, #0x0
   1bd10:	stp	x21, x30, [sp, #16]
   1bd14:	mov	x21, x3
   1bd18:	cinc	w3, w2, ne  // ne = any
   1bd1c:	str	w3, [x0, #8]
   1bd20:	cmp	w3, #0x100
   1bd24:	b.hi	1bd58 <OnPrint@@Base+0x1dc8>  // b.pmore
   1bd28:	mov	x19, x0
   1bd2c:	mov	x20, x2
   1bd30:	add	x0, x0, #0x10
   1bd34:	lsl	x2, x2, #3
   1bd38:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1bd3c:	cbz	x21, 1bd48 <OnPrint@@Base+0x1db8>
   1bd40:	add	x20, x20, #0x2
   1bd44:	str	x21, [x19, x20, lsl #3]
   1bd48:	ldp	x21, x30, [sp, #16]
   1bd4c:	str	xzr, [x19, #2064]
   1bd50:	ldp	x19, x20, [sp], #32
   1bd54:	ret
   1bd58:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1bd5c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1bd60:	mov	w3, w3
   1bd64:	add	x2, x2, #0x698
   1bd68:	add	x0, x0, #0x6b8
   1bd6c:	mov	x4, #0x100                 	// #256
   1bd70:	mov	w1, #0x22                  	// #34
   1bd74:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1bd78:	stp	x19, x20, [sp, #-64]!
   1bd7c:	mov	x19, x0
   1bd80:	mov	w20, w5
   1bd84:	stp	x23, x24, [sp, #32]
   1bd88:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1bd8c:	mov	x24, x1
   1bd90:	ldr	x23, [x23, #4016]
   1bd94:	stp	x21, x22, [sp, #16]
   1bd98:	mov	x22, x2
   1bd9c:	stp	x25, x30, [sp, #48]
   1bda0:	mov	x21, x3
   1bda4:	mov	x25, x4
   1bda8:	ldr	x0, [x23]
   1bdac:	cbz	x0, 1be58 <OnPrint@@Base+0x1ec8>
   1bdb0:	cmp	w20, #0x1
   1bdb4:	mov	w3, w20
   1bdb8:	b.ls	1be6c <OnPrint@@Base+0x1edc>  // b.plast
   1bdbc:	mov	w1, #0x1                   	// #1
   1bdc0:	str	w1, [x19, #8]
   1bdc4:	str	x24, [x19, #16]
   1bdc8:	cmp	x21, #0xfff
   1bdcc:	b.ls	1be44 <OnPrint@@Base+0x1eb4>  // b.plast
   1bdd0:	cmp	x22, x25
   1bdd4:	b.ls	1be44 <OnPrint@@Base+0x1eb4>  // b.plast
   1bdd8:	sub	x21, x21, #0x10
   1bddc:	cmp	x22, x21
   1bde0:	b.cs	1be44 <OnPrint@@Base+0x1eb4>  // b.hs, b.nlast
   1bde4:	tst	x22, #0x7
   1bde8:	b.ne	1be44 <OnPrint@@Base+0x1eb4>  // b.any
   1bdec:	mov	x2, x22
   1bdf0:	ldr	x3, [x2, #8]
   1bdf4:	cmp	x0, x3
   1bdf8:	b.hi	1be44 <OnPrint@@Base+0x1eb4>  // b.pmore
   1bdfc:	cmp	x24, x3
   1be00:	b.eq	1be14 <OnPrint@@Base+0x1e84>  // b.none
   1be04:	add	x4, x19, w1, uxtw #3
   1be08:	add	w1, w1, #0x1
   1be0c:	str	w1, [x19, #8]
   1be10:	str	x3, [x4, #16]
   1be14:	ldr	x2, [x2]
   1be18:	cmp	x2, x22
   1be1c:	b.ls	1be44 <OnPrint@@Base+0x1eb4>  // b.plast
   1be20:	cmp	x2, x21
   1be24:	b.cs	1be44 <OnPrint@@Base+0x1eb4>  // b.hs, b.nlast
   1be28:	tst	x2, #0x7
   1be2c:	b.ne	1be44 <OnPrint@@Base+0x1eb4>  // b.any
   1be30:	ldr	w1, [x19, #8]
   1be34:	cmp	w1, w20
   1be38:	b.cs	1be44 <OnPrint@@Base+0x1eb4>  // b.hs, b.nlast
   1be3c:	mov	x22, x2
   1be40:	b	1bdf0 <OnPrint@@Base+0x1e60>
   1be44:	ldp	x21, x22, [sp, #16]
   1be48:	ldp	x23, x24, [sp, #32]
   1be4c:	ldp	x25, x30, [sp, #48]
   1be50:	ldp	x19, x20, [sp], #64
   1be54:	ret
   1be58:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1be5c:	str	x0, [x23]
   1be60:	cmp	w20, #0x1
   1be64:	mov	w3, w20
   1be68:	b.hi	1bdbc <OnPrint@@Base+0x1e2c>  // b.pmore
   1be6c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1be70:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1be74:	add	x2, x2, #0x700
   1be78:	add	x0, x0, #0x6b8
   1be7c:	mov	x4, #0x2                   	// #2
   1be80:	mov	w1, #0x47                  	// #71
   1be84:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1be88:	ldr	w2, [x0, #8]
   1be8c:	cmp	x1, w2, uxtw
   1be90:	b.cs	1bebc <OnPrint@@Base+0x1f2c>  // b.hs, b.nlast
   1be94:	sub	w2, w2, w1
   1be98:	str	w2, [x0, #8]
   1be9c:	cbz	w2, 1beb8 <OnPrint@@Base+0x1f28>
   1bea0:	add	x0, x0, #0x10
   1bea4:	add	x2, x0, w2, uxtw #3
   1bea8:	ldr	x4, [x0, x1, lsl #3]
   1beac:	str	x4, [x0], #8
   1beb0:	cmp	x0, x2
   1beb4:	b.ne	1bea8 <OnPrint@@Base+0x1f18>  // b.any
   1beb8:	ret
   1bebc:	str	x30, [sp, #-16]!
   1bec0:	mov	w4, w2
   1bec4:	mov	x3, x1
   1bec8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1becc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1bed0:	add	x2, x2, #0x718
   1bed4:	add	x0, x0, #0x6b8
   1bed8:	mov	w1, #0x78                  	// #120
   1bedc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1bee0:	ldr	w7, [x0, #8]
   1bee4:	cmp	x7, #0x1
   1bee8:	b.ls	1bf34 <OnPrint@@Base+0x1fa4>  // b.plast
   1beec:	mov	x4, #0x1                   	// #1
   1bef0:	ldr	x5, [x0]
   1bef4:	mov	x0, #0x0                   	// #0
   1bef8:	ldr	x2, [x5, x4, lsl #3]
   1befc:	ldr	x3, [x5, x0, lsl #3]
   1bf00:	cmp	x2, x1
   1bf04:	sub	x6, x1, x2
   1bf08:	sub	x2, x2, x1
   1bf0c:	csel	x2, x2, x6, cs  // cs = hs, nlast
   1bf10:	sub	x6, x1, x3
   1bf14:	subs	x3, x3, x1
   1bf18:	csel	x3, x3, x6, cs  // cs = hs, nlast
   1bf1c:	cmp	x3, x2
   1bf20:	csel	x0, x0, x4, ls  // ls = plast
   1bf24:	add	x4, x4, #0x1
   1bf28:	cmp	x4, x7
   1bf2c:	b.ne	1bef8 <OnPrint@@Base+0x1f68>  // b.any
   1bf30:	ret
   1bf34:	mov	x0, #0x0                   	// #0
   1bf38:	ret
   1bf3c:	nop
   1bf40:	stp	x19, x20, [sp, #-176]!
   1bf44:	stp	x21, x22, [sp, #16]
   1bf48:	mov	x21, x0
   1bf4c:	ldr	x0, [x0]
   1bf50:	str	x30, [sp, #80]
   1bf54:	cbz	x0, 1bfb4 <OnPrint@@Base+0x2024>
   1bf58:	ldr	w0, [x21, #8]
   1bf5c:	cbz	w0, 1bfb4 <OnPrint@@Base+0x2024>
   1bf60:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1bf64:	stp	x23, x24, [sp, #32]
   1bf68:	ldr	x22, [x20, #4016]
   1bf6c:	stp	x25, x26, [sp, #48]
   1bf70:	stp	x27, x28, [sp, #64]
   1bf74:	ldr	x0, [x22]
   1bf78:	cbz	x0, 1bfd0 <OnPrint@@Base+0x2040>
   1bf7c:	stp	xzr, xzr, [sp, #112]
   1bf80:	cmp	xzr, x0, lsl #1
   1bf84:	lsl	x19, x0, #1
   1bf88:	str	xzr, [sp, #128]
   1bf8c:	b.ne	1bffc <OnPrint@@Base+0x206c>  // b.any
   1bf90:	stp	xzr, xzr, [sp, #128]
   1bf94:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1bf98:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1bf9c:	add	x2, x2, #0x190
   1bfa0:	add	x0, x0, #0x1a8
   1bfa4:	mov	x4, #0x0                   	// #0
   1bfa8:	mov	x3, #0x0                   	// #0
   1bfac:	mov	w1, #0x1b6                 	// #438
   1bfb0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1bfb4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1bfb8:	add	x0, x0, #0x730
   1bfbc:	bl	1a2a0 <OnPrint@@Base+0x310>
   1bfc0:	ldp	x21, x22, [sp, #16]
   1bfc4:	ldr	x30, [sp, #80]
   1bfc8:	ldp	x19, x20, [sp], #176
   1bfcc:	ret
   1bfd0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1bfd4:	str	x0, [x22]
   1bfd8:	stp	xzr, xzr, [sp, #112]
   1bfdc:	mov	x19, x0
   1bfe0:	cmp	xzr, x0, lsl #1
   1bfe4:	str	xzr, [sp, #128]
   1bfe8:	lsl	x1, x0, #1
   1bfec:	b.eq	1bf90 <OnPrint@@Base+0x2000>  // b.none
   1bff0:	cbnz	x0, 1c394 <OnPrint@@Base+0x2404>
   1bff4:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1bff8:	str	x0, [x22]
   1bffc:	sub	x1, x0, #0x1
   1c000:	tst	x0, x1
   1c004:	b.ne	1c368 <OnPrint@@Base+0x23d8>  // b.any
   1c008:	add	x1, x19, x1
   1c00c:	neg	x0, x0
   1c010:	and	x23, x1, x0
   1c014:	mov	w2, #0x0                   	// #0
   1c018:	mov	x0, x23
   1c01c:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c020:	add	x1, x24, #0x178
   1c024:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1c028:	ldr	x1, [sp, #112]
   1c02c:	mov	x22, x0
   1c030:	ldr	x2, [sp, #128]
   1c034:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1c038:	ldp	x0, x1, [sp, #112]
   1c03c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c040:	stp	x22, x23, [sp, #112]
   1c044:	ldr	x2, [sp, #128]
   1c048:	cmp	x19, x2
   1c04c:	b.ls	1c38c <OnPrint@@Base+0x23fc>  // b.plast
   1c050:	cmp	x19, x23
   1c054:	b.hi	1c24c <OnPrint@@Base+0x22bc>  // b.pmore
   1c058:	add	x0, x22, x2
   1c05c:	mov	w1, #0x0                   	// #0
   1c060:	sub	x2, x19, x2
   1c064:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1c068:	stp	x19, xzr, [sp, #128]
   1c06c:	ldr	x22, [sp, #112]
   1c070:	cbz	x19, 1bf94 <OnPrint@@Base+0x2004>
   1c074:	ldr	x23, [x20, #4016]
   1c078:	strb	wzr, [x22]
   1c07c:	ldr	x19, [x23]
   1c080:	cbz	x19, 1c200 <OnPrint@@Base+0x2270>
   1c084:	stp	xzr, xzr, [sp, #144]
   1c088:	str	xzr, [sp, #160]
   1c08c:	sub	x23, x19, #0x1
   1c090:	ands	x23, x23, x19
   1c094:	b.ne	1c368 <OnPrint@@Base+0x23d8>  // b.any
   1c098:	lsl	x0, x19, #1
   1c09c:	neg	x25, x19
   1c0a0:	sub	x0, x0, #0x1
   1c0a4:	add	x1, x24, #0x178
   1c0a8:	and	x25, x0, x25
   1c0ac:	mov	w2, #0x0                   	// #0
   1c0b0:	mov	x0, x25
   1c0b4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1c0b8:	ldr	x1, [sp, #144]
   1c0bc:	mov	x22, x0
   1c0c0:	ldr	x2, [sp, #160]
   1c0c4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1c0c8:	ldp	x0, x1, [sp, #144]
   1c0cc:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c0d0:	stp	x22, x25, [sp, #144]
   1c0d4:	ldr	x2, [sp, #160]
   1c0d8:	cmp	x19, x2
   1c0dc:	b.ls	1c39c <OnPrint@@Base+0x240c>  // b.plast
   1c0e0:	cmp	x19, x25
   1c0e4:	b.hi	1c2c4 <OnPrint@@Base+0x2334>  // b.pmore
   1c0e8:	add	x0, x22, x2
   1c0ec:	mov	w1, #0x0                   	// #0
   1c0f0:	sub	x2, x19, x2
   1c0f4:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1c0f8:	ldr	x22, [sp, #144]
   1c0fc:	stp	x19, xzr, [sp, #160]
   1c100:	adrp	x26, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1c104:	strb	wzr, [x22]
   1c108:	ldr	x1, [x26, #4056]
   1c10c:	str	xzr, [sp, #96]
   1c110:	ldr	w0, [x21, #8]
   1c114:	ldr	w27, [x1, #184]
   1c118:	cbz	w0, 1c334 <OnPrint@@Base+0x23a4>
   1c11c:	adrp	x24, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1c120:	add	x28, sp, #0x70
   1c124:	add	x24, x24, #0x428
   1c128:	ldr	x0, [x21]
   1c12c:	ldr	x1, [sp, #96]
   1c130:	ldr	x19, [x0, x1, lsl #3]
   1c134:	cbz	x19, 1c334 <OnPrint@@Base+0x23a4>
   1c138:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   1c13c:	sub	x1, x19, #0x4
   1c140:	bl	20f78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
   1c144:	str	x0, [sp, #104]
   1c148:	cbz	x0, 1c2a4 <OnPrint@@Base+0x2314>
   1c14c:	ldr	x0, [sp, #128]
   1c150:	adrp	x22, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   1c154:	mov	x19, x23
   1c158:	add	x22, x22, #0xe48
   1c15c:	ldr	x25, [sp, #104]
   1c160:	ldr	x2, [sp, #112]
   1c164:	cbz	x0, 1bf94 <OnPrint@@Base+0x2004>
   1c168:	ldr	x1, [x26, #4056]
   1c16c:	strb	wzr, [x2]
   1c170:	mov	x6, x24
   1c174:	mov	w2, w19
   1c178:	add	x3, x25, #0x8
   1c17c:	mov	x0, x28
   1c180:	ldrb	w4, [x1, #181]
   1c184:	add	x20, x19, #0x1
   1c188:	ldr	x5, [x1, #24]
   1c18c:	str	xzr, [sp, #136]
   1c190:	ldr	x1, [x1, #192]
   1c194:	bl	1dc40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1380>
   1c198:	ldr	x1, [sp, #112]
   1c19c:	mov	x0, x22
   1c1a0:	bl	1a2a0 <OnPrint@@Base+0x310>
   1c1a4:	add	w1, w27, w23
   1c1a8:	sub	w0, w1, w19
   1c1ac:	sub	w19, w1, w20
   1c1b0:	cmp	w0, #0x0
   1c1b4:	b.le	1c1d0 <OnPrint@@Base+0x2240>
   1c1b8:	ldr	x0, [sp, #168]
   1c1bc:	cbnz	x0, 1c1ec <OnPrint@@Base+0x225c>
   1c1c0:	ldr	x1, [x25, #40]
   1c1c4:	cbz	x1, 1c1d0 <OnPrint@@Base+0x2240>
   1c1c8:	add	x0, sp, #0x90
   1c1cc:	bl	1a3b0 <OnPrint@@Base+0x420>
   1c1d0:	ldr	x25, [x25]
   1c1d4:	cbz	x25, 1c220 <OnPrint@@Base+0x2290>
   1c1d8:	ldr	x0, [sp, #128]
   1c1dc:	mov	x19, x20
   1c1e0:	ldr	x2, [sp, #112]
   1c1e4:	cbnz	x0, 1c168 <OnPrint@@Base+0x21d8>
   1c1e8:	b	1bf94 <OnPrint@@Base+0x2004>
   1c1ec:	add	x0, sp, #0x90
   1c1f0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1c1f4:	add	x1, x1, #0x7b0
   1c1f8:	bl	1a3b0 <OnPrint@@Base+0x420>
   1c1fc:	b	1c1c0 <OnPrint@@Base+0x2230>
   1c200:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1c204:	str	x0, [x23]
   1c208:	stp	xzr, xzr, [sp, #144]
   1c20c:	mov	x19, x0
   1c210:	str	xzr, [sp, #160]
   1c214:	cbnz	x0, 1c08c <OnPrint@@Base+0x20fc>
   1c218:	str	xzr, [sp, #168]
   1c21c:	b	1bf94 <OnPrint@@Base+0x2004>
   1c220:	ldr	x0, [sp, #104]
   1c224:	bl	1fe60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
   1c228:	ldr	x1, [sp, #96]
   1c22c:	ldr	w0, [x21, #8]
   1c230:	add	x1, x1, #0x1
   1c234:	str	x1, [sp, #96]
   1c238:	cmp	x0, x1
   1c23c:	b.ls	1c334 <OnPrint@@Base+0x23a4>  // b.plast
   1c240:	mov	x23, x20
   1c244:	mov	w27, w19
   1c248:	b	1c128 <OnPrint@@Base+0x2198>
   1c24c:	ldr	x22, [x20, #4016]
   1c250:	ldr	x0, [x22]
   1c254:	cbz	x0, 1c31c <OnPrint@@Base+0x238c>
   1c258:	sub	x1, x0, #0x1
   1c25c:	tst	x1, x0
   1c260:	b.ne	1c368 <OnPrint@@Base+0x23d8>  // b.any
   1c264:	add	x1, x19, x1
   1c268:	neg	x0, x0
   1c26c:	and	x23, x1, x0
   1c270:	mov	w2, #0x0                   	// #0
   1c274:	add	x1, x24, #0x178
   1c278:	mov	x0, x23
   1c27c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1c280:	mov	x22, x0
   1c284:	ldr	x1, [sp, #112]
   1c288:	ldr	x2, [sp, #128]
   1c28c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1c290:	ldp	x0, x1, [sp, #112]
   1c294:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c298:	stp	x22, x23, [sp, #112]
   1c29c:	ldr	x2, [sp, #128]
   1c2a0:	b	1c058 <OnPrint@@Base+0x20c8>
   1c2a4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1c2a8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1c2ac:	add	x2, x2, #0x748
   1c2b0:	add	x0, x0, #0x760
   1c2b4:	mov	x4, #0x0                   	// #0
   1c2b8:	mov	x3, #0x0                   	// #0
   1c2bc:	mov	w1, #0x22                  	// #34
   1c2c0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c2c4:	ldr	x20, [x20, #4016]
   1c2c8:	ldr	x0, [x20]
   1c2cc:	cbz	x0, 1c328 <OnPrint@@Base+0x2398>
   1c2d0:	sub	x1, x0, #0x1
   1c2d4:	tst	x1, x0
   1c2d8:	b.ne	1c368 <OnPrint@@Base+0x23d8>  // b.any
   1c2dc:	add	x1, x19, x1
   1c2e0:	neg	x0, x0
   1c2e4:	and	x20, x1, x0
   1c2e8:	mov	w2, #0x0                   	// #0
   1c2ec:	add	x1, x24, #0x178
   1c2f0:	mov	x0, x20
   1c2f4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1c2f8:	mov	x22, x0
   1c2fc:	ldr	x1, [sp, #144]
   1c300:	ldr	x2, [sp, #160]
   1c304:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1c308:	ldp	x0, x1, [sp, #144]
   1c30c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c310:	stp	x22, x20, [sp, #144]
   1c314:	ldr	x2, [sp, #160]
   1c318:	b	1c0e8 <OnPrint@@Base+0x2158>
   1c31c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1c320:	str	x0, [x22]
   1c324:	b	1c258 <OnPrint@@Base+0x22c8>
   1c328:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1c32c:	str	x0, [x20]
   1c330:	b	1c2d0 <OnPrint@@Base+0x2340>
   1c334:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1c338:	add	x0, x0, #0xad0
   1c33c:	bl	1a2a0 <OnPrint@@Base+0x310>
   1c340:	ldr	x0, [sp, #168]
   1c344:	cbnz	x0, 1c378 <OnPrint@@Base+0x23e8>
   1c348:	ldp	x0, x1, [sp, #144]
   1c34c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c350:	ldp	x0, x1, [sp, #112]
   1c354:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c358:	ldp	x23, x24, [sp, #32]
   1c35c:	ldp	x25, x26, [sp, #48]
   1c360:	ldp	x27, x28, [sp, #64]
   1c364:	b	1bfc0 <OnPrint@@Base+0x2030>
   1c368:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c36c:	add	x0, x0, #0x160
   1c370:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1c374:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1c378:	ldr	x1, [sp, #144]
   1c37c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1c380:	add	x0, x0, #0x7b8
   1c384:	bl	1a2a0 <OnPrint@@Base+0x310>
   1c388:	b	1c348 <OnPrint@@Base+0x23b8>
   1c38c:	stp	x19, xzr, [sp, #128]
   1c390:	b	1c074 <OnPrint@@Base+0x20e4>
   1c394:	mov	x19, x1
   1c398:	b	1bffc <OnPrint@@Base+0x206c>
   1c39c:	stp	x19, xzr, [sp, #160]
   1c3a0:	b	1c100 <OnPrint@@Base+0x2170>
   1c3a4:	nop
   1c3a8:	mov	w8, w1
   1c3ac:	and	w7, w7, #0xff
   1c3b0:	mov	x1, x2
   1c3b4:	mov	x9, x0
   1c3b8:	mov	x2, x3
   1c3bc:	mov	x3, x5
   1c3c0:	cbnz	w8, 1c3d0 <OnPrint@@Base+0x2440>
   1c3c4:	str	wzr, [x0, #8]
   1c3c8:	str	xzr, [x0, #2064]
   1c3cc:	ret
   1c3d0:	str	x2, [x0, #2064]
   1c3d4:	cmp	w8, #0x1
   1c3d8:	b.eq	1c3fc <OnPrint@@Base+0x246c>  // b.none
   1c3dc:	cbnz	w7, 1c3f0 <OnPrint@@Base+0x2460>
   1c3e0:	cbz	x4, 1c408 <OnPrint@@Base+0x2478>
   1c3e4:	mov	w3, w8
   1c3e8:	mov	x2, x4
   1c3ec:	b	24140 <__sanitizer_set_death_callback@@Base+0x1658>
   1c3f0:	mov	w5, w8
   1c3f4:	mov	x4, x6
   1c3f8:	b	1bd78 <OnPrint@@Base+0x1de8>
   1c3fc:	str	w8, [x9, #8]
   1c400:	str	x1, [x9, #16]
   1c404:	ret
   1c408:	mov	w2, w8
   1c40c:	b	240a0 <__sanitizer_set_death_callback@@Base+0x15b8>

000000000001c410 <__sanitizer_symbolize_pc@@Base>:
   1c410:	cbnz	x3, 1c418 <__sanitizer_symbolize_pc@@Base+0x8>
   1c414:	ret
   1c418:	stp	x19, x20, [sp, #-112]!
   1c41c:	mov	x19, x2
   1c420:	mov	x20, x3
   1c424:	stp	x21, x22, [sp, #16]
   1c428:	mov	x21, x0
   1c42c:	stp	x23, x24, [sp, #32]
   1c430:	mov	x23, x1
   1c434:	str	x30, [sp, #72]
   1c438:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   1c43c:	sub	x1, x21, #0x4
   1c440:	bl	20f78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
   1c444:	mov	x21, x0
   1c448:	cbz	x0, 1c674 <__sanitizer_symbolize_pc@@Base+0x264>
   1c44c:	stp	x25, x26, [sp, #48]
   1c450:	adrp	x26, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1c454:	ldr	x24, [x26, #4016]
   1c458:	ldr	x22, [x24]
   1c45c:	str	x27, [sp, #64]
   1c460:	cbz	x22, 1c5b0 <__sanitizer_symbolize_pc@@Base+0x1a0>
   1c464:	stp	xzr, xzr, [sp, #80]
   1c468:	str	xzr, [sp, #96]
   1c46c:	sub	x0, x22, #0x1
   1c470:	tst	x0, x22
   1c474:	b.ne	1c664 <__sanitizer_symbolize_pc@@Base+0x254>  // b.any
   1c478:	lsl	x0, x22, #1
   1c47c:	neg	x25, x22
   1c480:	sub	x0, x0, #0x1
   1c484:	mov	w2, #0x0                   	// #0
   1c488:	and	x25, x0, x25
   1c48c:	adrp	x27, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c490:	mov	x0, x25
   1c494:	add	x1, x27, #0x178
   1c498:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1c49c:	mov	x24, x0
   1c4a0:	ldr	x1, [sp, #80]
   1c4a4:	ldr	x2, [sp, #96]
   1c4a8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1c4ac:	ldp	x0, x1, [sp, #80]
   1c4b0:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c4b4:	stp	x24, x25, [sp, #80]
   1c4b8:	ldr	x2, [sp, #96]
   1c4bc:	cmp	x22, x2
   1c4c0:	b.ls	1c6b4 <__sanitizer_symbolize_pc@@Base+0x2a4>  // b.plast
   1c4c4:	cmp	x22, x25
   1c4c8:	b.hi	1c600 <__sanitizer_symbolize_pc@@Base+0x1f0>  // b.pmore
   1c4cc:	add	x0, x24, x2
   1c4d0:	mov	w1, #0x0                   	// #0
   1c4d4:	sub	x2, x22, x2
   1c4d8:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1c4dc:	ldr	x24, [sp, #80]
   1c4e0:	stp	x22, xzr, [sp, #96]
   1c4e4:	sub	x20, x20, #0x1
   1c4e8:	strb	wzr, [x24]
   1c4ec:	add	x20, x19, x20
   1c4f0:	cmp	x19, x20
   1c4f4:	b.cs	1c5d0 <__sanitizer_symbolize_pc@@Base+0x1c0>  // b.hs, b.nlast
   1c4f8:	adrp	x25, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1c4fc:	adrp	x26, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1c500:	add	x27, sp, #0x50
   1c504:	add	x26, x26, #0x428
   1c508:	ldr	x25, [x25, #4056]
   1c50c:	mov	w22, #0x0                   	// #0
   1c510:	b	1c584 <__sanitizer_symbolize_pc@@Base+0x174>
   1c514:	strb	wzr, [x1]
   1c518:	mov	x0, x27
   1c51c:	mov	x6, x26
   1c520:	add	x3, x21, #0x8
   1c524:	ldrb	w4, [x25, #181]
   1c528:	mov	w2, w22
   1c52c:	ldr	x5, [x25, #24]
   1c530:	mov	x1, x23
   1c534:	str	xzr, [sp, #104]
   1c538:	bl	1dc40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1380>
   1c53c:	ldr	x0, [sp, #104]
   1c540:	cbz	x0, 1c570 <__sanitizer_symbolize_pc@@Base+0x160>
   1c544:	ldr	x1, [sp, #80]
   1c548:	sub	x24, x20, x19
   1c54c:	sub	x24, x24, #0x1
   1c550:	mov	x0, x19
   1c554:	mov	x2, x24
   1c558:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
   1c55c:	ldr	x2, [sp, #104]
   1c560:	cmp	x2, x24
   1c564:	csel	x2, x2, x24, ls  // ls = plast
   1c568:	add	x19, x19, x2
   1c56c:	strb	wzr, [x19], #1
   1c570:	ldr	x21, [x21]
   1c574:	add	w22, w22, #0x1
   1c578:	cmp	x21, #0x0
   1c57c:	ccmp	x19, x20, #0x2, ne  // ne = any
   1c580:	b.cs	1c5d0 <__sanitizer_symbolize_pc@@Base+0x1c0>  // b.hs, b.nlast
   1c584:	ldr	x0, [sp, #96]
   1c588:	ldr	x1, [sp, #80]
   1c58c:	cbnz	x0, 1c514 <__sanitizer_symbolize_pc@@Base+0x104>
   1c590:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c594:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c598:	add	x2, x2, #0x190
   1c59c:	add	x0, x0, #0x1a8
   1c5a0:	mov	x4, #0x0                   	// #0
   1c5a4:	mov	x3, #0x0                   	// #0
   1c5a8:	mov	w1, #0x1b6                 	// #438
   1c5ac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c5b0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1c5b4:	str	x0, [x24]
   1c5b8:	stp	xzr, xzr, [sp, #80]
   1c5bc:	mov	x22, x0
   1c5c0:	str	xzr, [sp, #96]
   1c5c4:	cbnz	x0, 1c46c <__sanitizer_symbolize_pc@@Base+0x5c>
   1c5c8:	str	xzr, [sp, #104]
   1c5cc:	b	1c590 <__sanitizer_symbolize_pc@@Base+0x180>
   1c5d0:	cmp	x19, x20
   1c5d4:	b.hi	1c694 <__sanitizer_symbolize_pc@@Base+0x284>  // b.pmore
   1c5d8:	ldp	x0, x1, [sp, #80]
   1c5dc:	strb	wzr, [x19]
   1c5e0:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c5e4:	ldp	x25, x26, [sp, #48]
   1c5e8:	ldr	x27, [sp, #64]
   1c5ec:	ldp	x21, x22, [sp, #16]
   1c5f0:	ldp	x23, x24, [sp, #32]
   1c5f4:	ldr	x30, [sp, #72]
   1c5f8:	ldp	x19, x20, [sp], #112
   1c5fc:	ret
   1c600:	ldr	x26, [x26, #4016]
   1c604:	ldr	x0, [x26]
   1c608:	cbz	x0, 1c658 <__sanitizer_symbolize_pc@@Base+0x248>
   1c60c:	sub	x1, x0, #0x1
   1c610:	tst	x0, x1
   1c614:	b.ne	1c664 <__sanitizer_symbolize_pc@@Base+0x254>  // b.any
   1c618:	add	x1, x22, x1
   1c61c:	neg	x0, x0
   1c620:	and	x25, x1, x0
   1c624:	mov	w2, #0x0                   	// #0
   1c628:	add	x1, x27, #0x178
   1c62c:	mov	x0, x25
   1c630:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1c634:	mov	x24, x0
   1c638:	ldr	x1, [sp, #80]
   1c63c:	ldr	x2, [sp, #96]
   1c640:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1c644:	ldp	x0, x1, [sp, #80]
   1c648:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c64c:	stp	x24, x25, [sp, #80]
   1c650:	ldr	x2, [sp, #96]
   1c654:	b	1c4cc <__sanitizer_symbolize_pc@@Base+0xbc>
   1c658:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1c65c:	str	x0, [x26]
   1c660:	b	1c60c <__sanitizer_symbolize_pc@@Base+0x1fc>
   1c664:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c668:	add	x0, x0, #0x160
   1c66c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1c670:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1c674:	mov	x0, x19
   1c678:	add	x19, x19, x20
   1c67c:	mov	x2, x20
   1c680:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1c684:	add	x1, x1, #0x7d0
   1c688:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
   1c68c:	sturb	wzr, [x19, #-1]
   1c690:	b	1c5ec <__sanitizer_symbolize_pc@@Base+0x1dc>
   1c694:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1c698:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1c69c:	add	x2, x2, #0x7e8
   1c6a0:	add	x0, x0, #0x760
   1c6a4:	mov	x4, #0x0                   	// #0
   1c6a8:	mov	x3, #0x0                   	// #0
   1c6ac:	mov	w1, #0x84                  	// #132
   1c6b0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c6b4:	stp	x22, xzr, [sp, #96]
   1c6b8:	b	1c4e4 <__sanitizer_symbolize_pc@@Base+0xd4>
   1c6bc:	nop

000000000001c6c0 <__sanitizer_symbolize_global@@Base>:
   1c6c0:	cbnz	x3, 1c6c8 <__sanitizer_symbolize_global@@Base+0x8>
   1c6c4:	ret
   1c6c8:	stp	x19, x20, [sp, #-176]!
   1c6cc:	mov	x20, x0
   1c6d0:	mov	x19, x3
   1c6d4:	stp	x21, x22, [sp, #16]
   1c6d8:	mov	x22, x1
   1c6dc:	mov	x21, x2
   1c6e0:	stp	x23, x24, [sp, #32]
   1c6e4:	add	x23, sp, #0x70
   1c6e8:	mov	x0, x23
   1c6ec:	str	x30, [sp, #72]
   1c6f0:	strb	wzr, [x2]
   1c6f4:	bl	1fe90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35d0>
   1c6f8:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   1c6fc:	mov	x2, x23
   1c700:	mov	x1, x20
   1c704:	bl	21048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4788>
   1c708:	tst	w0, #0xff
   1c70c:	b.eq	1c7f0 <__sanitizer_symbolize_global@@Base+0x130>  // b.none
   1c710:	stp	x25, x26, [sp, #48]
   1c714:	adrp	x26, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1c718:	ldr	x24, [x26, #4016]
   1c71c:	ldr	x20, [x24]
   1c720:	str	x27, [sp, #64]
   1c724:	cbz	x20, 1c804 <__sanitizer_symbolize_global@@Base+0x144>
   1c728:	stp	xzr, xzr, [sp, #80]
   1c72c:	str	xzr, [sp, #96]
   1c730:	sub	x0, x20, #0x1
   1c734:	tst	x0, x20
   1c738:	b.ne	1c8a4 <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   1c73c:	lsl	x0, x20, #1
   1c740:	neg	x25, x20
   1c744:	sub	x0, x0, #0x1
   1c748:	mov	w2, #0x0                   	// #0
   1c74c:	and	x25, x0, x25
   1c750:	adrp	x27, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c754:	mov	x0, x25
   1c758:	add	x1, x27, #0x178
   1c75c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1c760:	mov	x24, x0
   1c764:	ldr	x1, [sp, #80]
   1c768:	ldr	x2, [sp, #96]
   1c76c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1c770:	ldp	x0, x1, [sp, #80]
   1c774:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c778:	stp	x24, x25, [sp, #80]
   1c77c:	ldr	x2, [sp, #96]
   1c780:	cmp	x20, x2
   1c784:	b.ls	1c8b4 <__sanitizer_symbolize_global@@Base+0x1f4>  // b.plast
   1c788:	cmp	x20, x25
   1c78c:	b.hi	1c840 <__sanitizer_symbolize_global@@Base+0x180>  // b.pmore
   1c790:	add	x0, x24, x2
   1c794:	mov	w1, #0x0                   	// #0
   1c798:	sub	x2, x20, x2
   1c79c:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1c7a0:	ldr	x24, [sp, #80]
   1c7a4:	stp	x20, xzr, [sp, #96]
   1c7a8:	adrp	x3, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1c7ac:	strb	wzr, [x24]
   1c7b0:	mov	x2, x23
   1c7b4:	ldr	x3, [x3, #4056]
   1c7b8:	mov	x1, x22
   1c7bc:	add	x0, sp, #0x50
   1c7c0:	ldr	x3, [x3, #24]
   1c7c4:	bl	1d8a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfe8>
   1c7c8:	ldr	x1, [sp, #80]
   1c7cc:	mov	x2, x19
   1c7d0:	mov	x0, x21
   1c7d4:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
   1c7d8:	ldp	x0, x1, [sp, #80]
   1c7dc:	add	x2, x21, x19
   1c7e0:	sturb	wzr, [x2, #-1]
   1c7e4:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c7e8:	ldp	x25, x26, [sp, #48]
   1c7ec:	ldr	x27, [sp, #64]
   1c7f0:	ldp	x21, x22, [sp, #16]
   1c7f4:	ldp	x23, x24, [sp, #32]
   1c7f8:	ldr	x30, [sp, #72]
   1c7fc:	ldp	x19, x20, [sp], #176
   1c800:	ret
   1c804:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1c808:	str	x0, [x24]
   1c80c:	stp	xzr, xzr, [sp, #80]
   1c810:	mov	x20, x0
   1c814:	str	xzr, [sp, #96]
   1c818:	cbnz	x0, 1c730 <__sanitizer_symbolize_global@@Base+0x70>
   1c81c:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c820:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c824:	add	x2, x2, #0x190
   1c828:	add	x0, x0, #0x1a8
   1c82c:	mov	x4, #0x0                   	// #0
   1c830:	mov	x3, #0x0                   	// #0
   1c834:	mov	w1, #0x1b6                 	// #438
   1c838:	str	xzr, [sp, #104]
   1c83c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c840:	ldr	x26, [x26, #4016]
   1c844:	ldr	x0, [x26]
   1c848:	cbz	x0, 1c898 <__sanitizer_symbolize_global@@Base+0x1d8>
   1c84c:	sub	x1, x0, #0x1
   1c850:	tst	x0, x1
   1c854:	b.ne	1c8a4 <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   1c858:	add	x1, x20, x1
   1c85c:	neg	x0, x0
   1c860:	and	x25, x1, x0
   1c864:	mov	w2, #0x0                   	// #0
   1c868:	add	x1, x27, #0x178
   1c86c:	mov	x0, x25
   1c870:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1c874:	mov	x24, x0
   1c878:	ldr	x1, [sp, #80]
   1c87c:	ldr	x2, [sp, #96]
   1c880:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1c884:	ldp	x0, x1, [sp, #80]
   1c888:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c88c:	stp	x24, x25, [sp, #80]
   1c890:	ldr	x2, [sp, #96]
   1c894:	b	1c790 <__sanitizer_symbolize_global@@Base+0xd0>
   1c898:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1c89c:	str	x0, [x26]
   1c8a0:	b	1c84c <__sanitizer_symbolize_global@@Base+0x18c>
   1c8a4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c8a8:	add	x0, x0, #0x160
   1c8ac:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1c8b0:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1c8b4:	stp	x20, xzr, [sp, #96]
   1c8b8:	b	1c7a8 <__sanitizer_symbolize_global@@Base+0xe8>
   1c8bc:	nop

000000000001c8c0 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   1c8c0:	stp	x19, x20, [sp, #-64]!
   1c8c4:	mov	x19, x1
   1c8c8:	mov	x20, x2
   1c8cc:	stp	x21, x22, [sp, #16]
   1c8d0:	mov	x21, x0
   1c8d4:	mov	x22, x3
   1c8d8:	str	x30, [sp, #32]
   1c8dc:	str	xzr, [sp, #56]
   1c8e0:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   1c8e4:	mov	x1, x21
   1c8e8:	mov	x3, x22
   1c8ec:	add	x2, sp, #0x38
   1c8f0:	mov	w21, #0x0                   	// #0
   1c8f4:	bl	20ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
   1c8f8:	tst	w0, #0xff
   1c8fc:	b.eq	1c910 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50>  // b.none
   1c900:	cmp	x19, #0x0
   1c904:	mov	w21, #0x1                   	// #1
   1c908:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   1c90c:	b.ne	1c924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64>  // b.any
   1c910:	mov	w0, w21
   1c914:	ldp	x21, x22, [sp, #16]
   1c918:	ldr	x30, [sp, #32]
   1c91c:	ldp	x19, x20, [sp], #64
   1c920:	ret
   1c924:	ldr	x1, [sp, #56]
   1c928:	mov	x0, x19
   1c92c:	add	x19, x19, x20
   1c930:	mov	x2, x20
   1c934:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
   1c938:	sturb	wzr, [x19, #-1]
   1c93c:	mov	w0, w21
   1c940:	ldp	x21, x22, [sp, #16]
   1c944:	ldr	x30, [sp, #32]
   1c948:	ldp	x19, x20, [sp], #64
   1c94c:	ret
   1c950:	stp	x19, x20, [sp, #-96]!
   1c954:	stp	x23, x24, [sp, #32]
   1c958:	adrp	x24, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1c95c:	mov	x23, x0
   1c960:	ldr	x19, [x24, #4016]
   1c964:	stp	x21, x22, [sp, #16]
   1c968:	mov	x22, x1
   1c96c:	stp	x25, x30, [sp, #48]
   1c970:	mov	x21, x2
   1c974:	ldr	x3, [x19]
   1c978:	stp	xzr, xzr, [sp, #64]
   1c97c:	str	xzr, [sp, #80]
   1c980:	cbz	x3, 1ca74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b4>
   1c984:	sub	x0, x3, #0x1
   1c988:	tst	x0, x3
   1c98c:	b.ne	1cadc <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c>  // b.any
   1c990:	add	x20, x3, #0x3ff
   1c994:	neg	x3, x3
   1c998:	and	x20, x20, x3
   1c99c:	mov	w2, #0x0                   	// #0
   1c9a0:	mov	x0, x20
   1c9a4:	adrp	x25, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1c9a8:	add	x1, x25, #0x178
   1c9ac:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1c9b0:	ldr	x1, [sp, #64]
   1c9b4:	mov	x19, x0
   1c9b8:	ldr	x2, [sp, #80]
   1c9bc:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1c9c0:	ldp	x0, x1, [sp, #64]
   1c9c4:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1c9c8:	stp	x19, x20, [sp, #64]
   1c9cc:	ldr	x2, [sp, #80]
   1c9d0:	cmp	x2, #0x3ff
   1c9d4:	b.hi	1c9f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x138>  // b.pmore
   1c9d8:	cmp	x20, #0x3ff
   1c9dc:	b.ls	1ca84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c4>  // b.plast
   1c9e0:	mov	x3, #0x400                 	// #1024
   1c9e4:	add	x0, x19, x2
   1c9e8:	mov	w1, #0x0                   	// #0
   1c9ec:	sub	x2, x3, x2
   1c9f0:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1c9f4:	ldr	x19, [sp, #64]
   1c9f8:	mov	x0, #0x400                 	// #1024
   1c9fc:	stp	x0, xzr, [sp, #80]
   1ca00:	add	x0, sp, #0x40
   1ca04:	mov	x2, x23
   1ca08:	strb	wzr, [x19]
   1ca0c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ca10:	mov	x19, x0
   1ca14:	add	x1, x1, #0x930
   1ca18:	bl	1a3b0 <OnPrint@@Base+0x420>
   1ca1c:	adrp	x4, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1ca20:	mov	x3, x22
   1ca24:	mov	w2, #0x0                   	// #0
   1ca28:	mov	x0, x19
   1ca2c:	ldr	x4, [x4, #4056]
   1ca30:	adrp	x6, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1ca34:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ca38:	add	x6, x6, #0x428
   1ca3c:	add	x1, x1, #0x808
   1ca40:	ldr	x5, [x4, #24]
   1ca44:	ldrb	w4, [x4, #181]
   1ca48:	bl	1dc40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1380>
   1ca4c:	ldr	x0, [sp, #64]
   1ca50:	mov	x1, x21
   1ca54:	bl	f938 <__sanitizer_report_error_summary@@Base+0x10>
   1ca58:	ldp	x0, x1, [sp, #64]
   1ca5c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1ca60:	ldp	x21, x22, [sp, #16]
   1ca64:	ldp	x23, x24, [sp, #32]
   1ca68:	ldp	x25, x30, [sp, #48]
   1ca6c:	ldp	x19, x20, [sp], #96
   1ca70:	ret
   1ca74:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1ca78:	mov	x3, x0
   1ca7c:	str	x0, [x19]
   1ca80:	b	1c984 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc4>
   1ca84:	ldr	x24, [x24, #4016]
   1ca88:	ldr	x0, [x24]
   1ca8c:	cbz	x0, 1caec <__sanitizer_get_module_and_offset_for_pc@@Base+0x22c>
   1ca90:	sub	x1, x0, #0x1
   1ca94:	tst	x1, x0
   1ca98:	b.ne	1cadc <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c>  // b.any
   1ca9c:	add	x20, x0, #0x3ff
   1caa0:	neg	x0, x0
   1caa4:	and	x20, x20, x0
   1caa8:	add	x1, x25, #0x178
   1caac:	mov	w2, #0x0                   	// #0
   1cab0:	mov	x0, x20
   1cab4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1cab8:	mov	x19, x0
   1cabc:	ldr	x1, [sp, #64]
   1cac0:	ldr	x2, [sp, #80]
   1cac4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1cac8:	ldp	x0, x1, [sp, #64]
   1cacc:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1cad0:	stp	x19, x20, [sp, #64]
   1cad4:	ldr	x2, [sp, #80]
   1cad8:	b	1c9e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x120>
   1cadc:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1cae0:	add	x0, x0, #0x160
   1cae4:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1cae8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1caec:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1caf0:	str	x0, [x24]
   1caf4:	b	1ca90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d0>
   1caf8:	adrp	x3, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1cafc:	ldr	x3, [x3, #4056]
   1cb00:	ldrb	w3, [x3, #60]
   1cb04:	cbnz	w3, 1cb0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x24c>
   1cb08:	ret
   1cb0c:	b	1c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   1cb10:	stp	x19, x20, [sp, #-32]!
   1cb14:	mov	x19, x0
   1cb18:	mov	w1, #0x1                   	// #1
   1cb1c:	ldr	x20, [x0]
   1cb20:	str	x30, [sp, #16]
   1cb24:	ldxrb	w0, [x20]
   1cb28:	stxrb	w2, w1, [x20]
   1cb2c:	cbnz	w2, 1cb24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x264>
   1cb30:	dmb	ish
   1cb34:	tst	w0, #0xff
   1cb38:	b.eq	1cb44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x284>  // b.none
   1cb3c:	mov	x0, x20
   1cb40:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   1cb44:	mov	x0, x19
   1cb48:	bl	124c8 <__sanitizer_cov_dump@@Base+0x1eb8>
   1cb4c:	ldr	w0, [x19, #8]
   1cb50:	bl	18b78 <__sanitizer_set_report_fd@@Base+0x5c58>
   1cb54:	dmb	ish
   1cb58:	strb	wzr, [x20]
   1cb5c:	ldr	x30, [sp, #16]
   1cb60:	ldp	x19, x20, [sp], #32
   1cb64:	ret
   1cb68:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1cb6c:	stp	x19, x30, [sp, #-16]!
   1cb70:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1cb74:	ldr	x0, [x0, #4056]
   1cb78:	add	x1, x1, #0x810
   1cb7c:	ldr	x19, [x0, #112]
   1cb80:	mov	x0, x19
   1cb84:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   1cb88:	mov	w1, #0x1                   	// #1
   1cb8c:	cbnz	w0, 1cb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dc>
   1cb90:	mov	w0, w1
   1cb94:	ldp	x19, x30, [sp], #16
   1cb98:	ret
   1cb9c:	mov	x0, x19
   1cba0:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1cba4:	add	x1, x1, #0xa20
   1cba8:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   1cbac:	mov	w1, #0x0                   	// #0
   1cbb0:	cbnz	w0, 1cb90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d0>
   1cbb4:	ldp	x19, x30, [sp], #16
   1cbb8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1cbbc:	ldr	x0, [x0, #3976]
   1cbc0:	b	1cb10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x250>
   1cbc4:	nop
   1cbc8:	stp	x19, x20, [sp, #-48]!
   1cbcc:	adrp	x19, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1cbd0:	ldr	x19, [x19, #4056]
   1cbd4:	stp	x21, x22, [sp, #16]
   1cbd8:	mov	x21, x2
   1cbdc:	ldrb	w2, [x19, #60]
   1cbe0:	str	x30, [sp, #32]
   1cbe4:	cbz	w2, 1cc50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x390>
   1cbe8:	ldr	w2, [x1, #8]
   1cbec:	cbz	w2, 1cc3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x37c>
   1cbf0:	mov	x20, x0
   1cbf4:	ldr	x0, [x1]
   1cbf8:	ldr	x22, [x0]
   1cbfc:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   1cc00:	sub	x22, x22, #0x4
   1cc04:	mov	x1, x22
   1cc08:	bl	20f78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
   1cc0c:	ldrb	w1, [x19, #60]
   1cc10:	mov	x19, x0
   1cc14:	cbz	w1, 1cc28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x368>
   1cc18:	mov	x2, x21
   1cc1c:	mov	x0, x20
   1cc20:	add	x1, x19, #0x8
   1cc24:	bl	1c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   1cc28:	mov	x0, x19
   1cc2c:	ldp	x21, x22, [sp, #16]
   1cc30:	ldr	x30, [sp, #32]
   1cc34:	ldp	x19, x20, [sp], #48
   1cc38:	b	1fe60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
   1cc3c:	ldp	x21, x22, [sp, #16]
   1cc40:	mov	x1, #0x0                   	// #0
   1cc44:	ldr	x30, [sp, #32]
   1cc48:	ldp	x19, x20, [sp], #48
   1cc4c:	b	f938 <__sanitizer_report_error_summary@@Base+0x10>
   1cc50:	ldp	x21, x22, [sp, #16]
   1cc54:	ldr	x30, [sp, #32]
   1cc58:	ldp	x19, x20, [sp], #48
   1cc5c:	ret
   1cc60:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1cc64:	stp	x19, x30, [sp, #-16]!
   1cc68:	ldr	x0, [x0, #4024]
   1cc6c:	ldr	x19, [x0]
   1cc70:	mov	x0, x19
   1cc74:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1cc78:	mov	x1, x0
   1cc7c:	mov	x0, x19
   1cc80:	bl	12488 <__sanitizer_cov_dump@@Base+0x1e78>
   1cc84:	ldp	x19, x30, [sp], #16
   1cc88:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1cc8c:	mov	x1, #0xe                   	// #14
   1cc90:	add	x0, x0, #0xa38
   1cc94:	b	12488 <__sanitizer_cov_dump@@Base+0x1e78>
   1cc98:	stp	x19, x20, [sp, #-240]!
   1cc9c:	mov	w20, w1
   1cca0:	mov	x19, x0
   1cca4:	stp	x21, x22, [sp, #16]
   1cca8:	mov	x21, x2
   1ccac:	mov	x22, x3
   1ccb0:	stp	x23, x24, [sp, #32]
   1ccb4:	stp	x25, x26, [sp, #48]
   1ccb8:	stp	x27, x28, [sp, #64]
   1ccbc:	str	x30, [sp, #80]
   1ccc0:	bl	18d00 <__sanitizer_set_report_fd@@Base+0x5de0>
   1ccc4:	tst	w0, #0xff
   1ccc8:	b.eq	1cdfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x53c>  // b.none
   1cccc:	bl	1cb68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   1ccd0:	tst	w0, #0xff
   1ccd4:	b.ne	1d1b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8f4>  // b.any
   1ccd8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1ccdc:	add	x23, x1, #0x428
   1cce0:	mov	x1, x23
   1cce4:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1cce8:	add	x0, x24, #0x98
   1ccec:	bl	1a2a0 <OnPrint@@Base+0x310>
   1ccf0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1ccf4:	adrp	x25, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ccf8:	ldp	x3, x4, [x19, #16]
   1ccfc:	add	x2, x25, #0xa38
   1cd00:	ldr	x0, [x0, #4024]
   1cd04:	mov	w7, w20
   1cd08:	ldp	x6, x5, [x19, #32]
   1cd0c:	add	x2, x2, #0x10
   1cd10:	ldr	x1, [x0]
   1cd14:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1cd18:	add	x0, x0, #0x970
   1cd1c:	bl	1a328 <OnPrint@@Base+0x398>
   1cd20:	mov	x1, x23
   1cd24:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1cd28:	add	x0, x24, #0x98
   1cd2c:	bl	1a2a0 <OnPrint@@Base+0x310>
   1cd30:	ldr	x20, [x23, #4016]
   1cd34:	ldr	x0, [x20]
   1cd38:	cbz	x0, 1d218 <__sanitizer_get_module_and_offset_for_pc@@Base+0x958>
   1cd3c:	sub	x1, x0, #0x1
   1cd40:	tst	x1, x0
   1cd44:	b.ne	1d2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   1cd48:	add	x24, x0, #0x817
   1cd4c:	neg	x0, x0
   1cd50:	and	x24, x24, x0
   1cd54:	mov	w2, #0x0                   	// #0
   1cd58:	mov	x0, x24
   1cd5c:	adrp	x28, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1cd60:	add	x1, x28, #0x178
   1cd64:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1cd68:	mov	x2, #0x0                   	// #0
   1cd6c:	mov	x1, #0x0                   	// #0
   1cd70:	mov	x20, x0
   1cd74:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1cd78:	mov	x1, #0x0                   	// #0
   1cd7c:	mov	x0, #0x0                   	// #0
   1cd80:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1cd84:	cmp	x24, #0x817
   1cd88:	b.ls	1d3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xae4>  // b.plast
   1cd8c:	mov	x0, x20
   1cd90:	mov	x2, #0x818                 	// #2072
   1cd94:	mov	w1, #0x0                   	// #0
   1cd98:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1cd9c:	mov	x1, x22
   1cda0:	mov	x2, x20
   1cda4:	add	x0, x20, #0x10
   1cda8:	stp	x0, xzr, [x20]
   1cdac:	mov	x0, x19
   1cdb0:	str	xzr, [x20, #2064]
   1cdb4:	blr	x21
   1cdb8:	mov	x0, x20
   1cdbc:	bl	1bf40 <OnPrint@@Base+0x1fb0>
   1cdc0:	mov	x2, #0x0                   	// #0
   1cdc4:	add	x0, x25, #0xa38
   1cdc8:	mov	x1, x20
   1cdcc:	add	x0, x0, #0x10
   1cdd0:	bl	1cbc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308>
   1cdd4:	mov	x1, x24
   1cdd8:	mov	x0, x20
   1cddc:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1cde0:	ldp	x21, x22, [sp, #16]
   1cde4:	ldp	x23, x24, [sp, #32]
   1cde8:	ldp	x25, x26, [sp, #48]
   1cdec:	ldp	x27, x28, [sp, #64]
   1cdf0:	ldr	x30, [sp, #80]
   1cdf4:	ldp	x19, x20, [sp], #240
   1cdf8:	ret
   1cdfc:	bl	1cb68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   1ce00:	tst	w0, #0xff
   1ce04:	b.ne	1d120 <__sanitizer_get_module_and_offset_for_pc@@Base+0x860>  // b.any
   1ce08:	adrp	x23, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1ce0c:	add	x23, x23, #0x428
   1ce10:	mov	x1, x23
   1ce14:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1ce18:	mov	x25, x0
   1ce1c:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1ce20:	add	x0, x24, #0x98
   1ce24:	str	x25, [sp, #112]
   1ce28:	bl	1a2a0 <OnPrint@@Base+0x310>
   1ce2c:	mov	x0, x19
   1ce30:	bl	18768 <__sanitizer_set_report_fd@@Base+0x5848>
   1ce34:	ldr	x1, [x25, #4024]
   1ce38:	mov	w7, w20
   1ce3c:	ldp	x3, x4, [x19, #16]
   1ce40:	mov	x2, x0
   1ce44:	ldp	x6, x5, [x19, #32]
   1ce48:	mov	x26, x0
   1ce4c:	ldr	x1, [x1]
   1ce50:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ce54:	add	x0, x0, #0x9a8
   1ce58:	bl	1a328 <OnPrint@@Base+0x398>
   1ce5c:	mov	x1, x23
   1ce60:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1ce64:	add	x0, x24, #0x98
   1ce68:	bl	1a2a0 <OnPrint@@Base+0x310>
   1ce6c:	ldr	x20, [x23, #4016]
   1ce70:	ldr	x25, [x19, #24]
   1ce74:	ldr	x0, [x20]
   1ce78:	cbz	x0, 1d194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8d4>
   1ce7c:	cmp	x25, x0
   1ce80:	b.cc	1d1a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8e4>  // b.lo, b.ul, b.last
   1ce84:	ldrb	w0, [x19, #48]
   1ce88:	cbz	w0, 1cee0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x620>
   1ce8c:	ldr	w0, [x19, #52]
   1ce90:	cmp	w0, #0x2
   1ce94:	b.eq	1d2b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9f0>  // b.none
   1ce98:	cmp	w0, #0x1
   1ce9c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1cea0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1cea4:	add	x1, x1, #0x820
   1cea8:	add	x0, x0, #0x828
   1ceac:	csel	x1, x1, x0, eq  // eq = none
   1ceb0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ceb4:	add	x0, x0, #0x868
   1ceb8:	bl	1a328 <OnPrint@@Base+0x398>
   1cebc:	ldr	x20, [x23, #4016]
   1cec0:	ldr	x25, [x19, #16]
   1cec4:	ldr	x0, [x20]
   1cec8:	cbz	x0, 1d30c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa4c>
   1cecc:	cmp	x25, x0
   1ced0:	b.cs	1cee0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x620>  // b.hs, b.nlast
   1ced4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ced8:	add	x0, x0, #0x898
   1cedc:	bl	1a328 <OnPrint@@Base+0x398>
   1cee0:	add	x28, sp, #0x80
   1cee4:	adrp	x27, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1cee8:	add	x25, sp, #0xa0
   1ceec:	add	x27, x27, #0x8c0
   1cef0:	mov	x0, x28
   1cef4:	mov	w1, #0x1                   	// #1
   1cef8:	ldr	x20, [x19, #24]
   1cefc:	bl	1a6f8 <OnPrint@@Base+0x768>
   1cf00:	stp	xzr, xzr, [sp, #184]
   1cf04:	str	xzr, [sp, #232]
   1cf08:	mov	x1, x25
   1cf0c:	mov	x0, x28
   1cf10:	bl	1acf8 <OnPrint@@Base+0xd68>
   1cf14:	tst	w0, #0xff
   1cf18:	b.eq	1cf58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x698>  // b.none
   1cf1c:	ldr	x0, [sp, #160]
   1cf20:	cmp	x20, x0
   1cf24:	b.cc	1cf08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x648>  // b.lo, b.ul, b.last
   1cf28:	ldr	x0, [sp, #168]
   1cf2c:	cmp	x20, x0
   1cf30:	b.cs	1cf08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x648>  // b.hs, b.nlast
   1cf34:	ldr	x0, [sp, #200]
   1cf38:	tbnz	w0, #2, 1cf08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x648>
   1cf3c:	mov	x0, x27
   1cf40:	bl	1a328 <OnPrint@@Base+0x398>
   1cf44:	mov	x1, x25
   1cf48:	mov	x0, x28
   1cf4c:	bl	1acf8 <OnPrint@@Base+0xd68>
   1cf50:	tst	w0, #0xff
   1cf54:	b.ne	1cf1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x65c>  // b.any
   1cf58:	mov	x0, x28
   1cf5c:	bl	1a5c8 <OnPrint@@Base+0x638>
   1cf60:	ldr	x20, [x23, #4016]
   1cf64:	ldr	x0, [x20]
   1cf68:	cbz	x0, 1d2f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa30>
   1cf6c:	sub	x1, x0, #0x1
   1cf70:	tst	x1, x0
   1cf74:	b.ne	1d2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   1cf78:	add	x27, x0, #0x817
   1cf7c:	neg	x0, x0
   1cf80:	and	x27, x27, x0
   1cf84:	mov	w2, #0x0                   	// #0
   1cf88:	mov	x0, x27
   1cf8c:	adrp	x28, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1cf90:	add	x1, x28, #0x178
   1cf94:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1cf98:	mov	x2, #0x0                   	// #0
   1cf9c:	mov	x1, #0x0                   	// #0
   1cfa0:	mov	x20, x0
   1cfa4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1cfa8:	mov	x1, #0x0                   	// #0
   1cfac:	mov	x0, #0x0                   	// #0
   1cfb0:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1cfb4:	cmp	x27, #0x817
   1cfb8:	b.ls	1d33c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa7c>  // b.plast
   1cfbc:	mov	x2, #0x818                 	// #2072
   1cfc0:	mov	w1, #0x0                   	// #0
   1cfc4:	mov	x0, x20
   1cfc8:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1cfcc:	mov	x1, x22
   1cfd0:	mov	x2, x20
   1cfd4:	add	x0, x20, #0x10
   1cfd8:	stp	x0, xzr, [x20]
   1cfdc:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1cfe0:	str	xzr, [x20, #2064]
   1cfe4:	mov	x0, x19
   1cfe8:	blr	x21
   1cfec:	mov	x0, x20
   1cff0:	bl	1bf40 <OnPrint@@Base+0x1fb0>
   1cff4:	ldr	x0, [x22, #4056]
   1cff8:	ldrb	w0, [x0, #232]
   1cffc:	cbz	w0, 1d248 <__sanitizer_get_module_and_offset_for_pc@@Base+0x988>
   1d000:	ldr	x1, [x23, #4016]
   1d004:	ldr	x21, [x19, #24]
   1d008:	ldr	x0, [x1]
   1d00c:	cbz	x0, 1d2bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x9fc>
   1d010:	cmp	x21, x0
   1d014:	b.cc	1d248 <__sanitizer_get_module_and_offset_for_pc@@Base+0x988>  // b.lo, b.ul, b.last
   1d018:	stp	xzr, xzr, [sp, #160]
   1d01c:	str	xzr, [sp, #176]
   1d020:	sub	x1, x0, #0x1
   1d024:	tst	x1, x0
   1d028:	b.ne	1d2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   1d02c:	add	x4, x0, #0x3ff
   1d030:	neg	x0, x0
   1d034:	and	x4, x4, x0
   1d038:	add	x1, x28, #0x178
   1d03c:	mov	x0, x4
   1d040:	mov	w2, #0x0                   	// #0
   1d044:	str	x4, [sp, #120]
   1d048:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1d04c:	str	x0, [sp, #104]
   1d050:	ldr	x1, [sp, #160]
   1d054:	ldr	x2, [sp, #176]
   1d058:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1d05c:	ldp	x0, x1, [sp, #160]
   1d060:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1d064:	ldr	x3, [sp, #104]
   1d068:	ldr	x4, [sp, #120]
   1d06c:	stp	x3, x4, [sp, #160]
   1d070:	ldr	x2, [sp, #176]
   1d074:	cmp	x2, #0x3ff
   1d078:	b.ls	1d318 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa58>  // b.plast
   1d07c:	mov	x0, #0x400                 	// #1024
   1d080:	stp	x0, xzr, [sp, #176]
   1d084:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d088:	strb	wzr, [x3]
   1d08c:	add	x1, x1, #0x900
   1d090:	mov	x0, x25
   1d094:	bl	1a3b0 <OnPrint@@Base+0x420>
   1d098:	mov	x0, x21
   1d09c:	mov	x1, #0x10                  	// #16
   1d0a0:	bl	18d98 <__sanitizer_set_report_fd@@Base+0x5e78>
   1d0a4:	tst	w0, #0xff
   1d0a8:	b.eq	1d400 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb40>  // b.none
   1d0ac:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d0b0:	add	x0, x0, #0x830
   1d0b4:	adrp	x23, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1d0b8:	add	x23, x23, #0x428
   1d0bc:	str	x0, [sp, #120]
   1d0c0:	add	x0, x21, #0x10
   1d0c4:	str	x0, [sp, #104]
   1d0c8:	b	1d0fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x83c>
   1d0cc:	ldr	x3, [sp, #120]
   1d0d0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d0d4:	add	x6, x0, #0x120
   1d0d8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d0dc:	mov	x2, x23
   1d0e0:	add	x1, x0, #0x928
   1d0e4:	mov	x0, x25
   1d0e8:	bl	1a3b0 <OnPrint@@Base+0x420>
   1d0ec:	add	x21, x21, #0x1
   1d0f0:	ldr	x0, [sp, #104]
   1d0f4:	cmp	x0, x21
   1d0f8:	b.eq	1d224 <__sanitizer_get_module_and_offset_for_pc@@Base+0x964>  // b.none
   1d0fc:	ldrb	w28, [x21]
   1d100:	bl	1cb68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   1d104:	tst	w0, #0xff
   1d108:	and	w5, w28, #0xf
   1d10c:	asr	w4, w28, #4
   1d110:	b.ne	1d0cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x80c>  // b.any
   1d114:	mov	x3, x23
   1d118:	mov	x6, x23
   1d11c:	b	1d0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x818>
   1d120:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d124:	add	x1, x1, #0x110
   1d128:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d12c:	mov	x23, x0
   1d130:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d134:	add	x0, x24, #0x98
   1d138:	str	x23, [sp, #112]
   1d13c:	bl	1a2a0 <OnPrint@@Base+0x310>
   1d140:	mov	x0, x19
   1d144:	bl	18768 <__sanitizer_set_report_fd@@Base+0x5848>
   1d148:	ldr	x1, [x23, #4024]
   1d14c:	mov	w7, w20
   1d150:	ldp	x3, x4, [x19, #16]
   1d154:	mov	x2, x0
   1d158:	ldp	x6, x5, [x19, #32]
   1d15c:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d160:	ldr	x1, [x1]
   1d164:	mov	x26, x0
   1d168:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d16c:	add	x0, x0, #0x9a8
   1d170:	bl	1a328 <OnPrint@@Base+0x398>
   1d174:	add	x0, x24, #0x98
   1d178:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d17c:	add	x1, x1, #0x120
   1d180:	bl	1a2a0 <OnPrint@@Base+0x310>
   1d184:	ldr	x20, [x23, #4016]
   1d188:	ldr	x25, [x19, #24]
   1d18c:	ldr	x0, [x20]
   1d190:	cbnz	x0, 1ce7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc>
   1d194:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d198:	str	x0, [x20]
   1d19c:	cmp	x25, x0
   1d1a0:	b.cs	1ce84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c4>  // b.hs, b.nlast
   1d1a4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d1a8:	add	x0, x0, #0x840
   1d1ac:	bl	1a328 <OnPrint@@Base+0x398>
   1d1b0:	b	1ce84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c4>
   1d1b4:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d1b8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d1bc:	add	x0, x24, #0x98
   1d1c0:	add	x1, x1, #0x110
   1d1c4:	bl	1a2a0 <OnPrint@@Base+0x310>
   1d1c8:	adrp	x25, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d1cc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d1d0:	add	x2, x25, #0xa38
   1d1d4:	ldp	x3, x4, [x19, #16]
   1d1d8:	mov	w7, w20
   1d1dc:	ldr	x0, [x0, #4024]
   1d1e0:	add	x2, x2, #0x10
   1d1e4:	ldp	x6, x5, [x19, #32]
   1d1e8:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d1ec:	ldr	x1, [x0]
   1d1f0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d1f4:	add	x0, x0, #0x970
   1d1f8:	bl	1a328 <OnPrint@@Base+0x398>
   1d1fc:	add	x0, x24, #0x98
   1d200:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d204:	add	x1, x1, #0x120
   1d208:	bl	1a2a0 <OnPrint@@Base+0x310>
   1d20c:	ldr	x20, [x23, #4016]
   1d210:	ldr	x0, [x20]
   1d214:	cbnz	x0, 1cd3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x47c>
   1d218:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d21c:	str	x0, [x20]
   1d220:	b	1cd3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x47c>
   1d224:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d228:	mov	x0, x25
   1d22c:	add	x1, x1, #0xad0
   1d230:	bl	1a3b0 <OnPrint@@Base+0x420>
   1d234:	ldr	x1, [sp, #160]
   1d238:	add	x0, x24, #0x98
   1d23c:	bl	1a328 <OnPrint@@Base+0x398>
   1d240:	ldp	x0, x1, [sp, #160]
   1d244:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1d248:	ldr	x22, [x22, #4056]
   1d24c:	ldrb	w0, [x22, #233]
   1d250:	cbnz	w0, 1d2a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9e4>
   1d254:	ldr	x0, [sp, #112]
   1d258:	ldr	x1, [x0, #4024]
   1d25c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d260:	add	x0, x0, #0x948
   1d264:	ldr	x1, [x1]
   1d268:	bl	1a2a0 <OnPrint@@Base+0x310>
   1d26c:	mov	x2, #0x0                   	// #0
   1d270:	mov	x0, x26
   1d274:	mov	x1, x20
   1d278:	bl	1cbc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308>
   1d27c:	mov	x1, x27
   1d280:	mov	x0, x20
   1d284:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1d288:	ldp	x21, x22, [sp, #16]
   1d28c:	ldp	x23, x24, [sp, #32]
   1d290:	ldp	x25, x26, [sp, #48]
   1d294:	ldp	x27, x28, [sp, #64]
   1d298:	ldr	x30, [sp, #80]
   1d29c:	ldp	x19, x20, [sp], #240
   1d2a0:	ret
   1d2a4:	ldr	x0, [x19, #8]
   1d2a8:	bl	16c00 <__sanitizer_set_report_fd@@Base+0x3ce0>
   1d2ac:	b	1d254 <__sanitizer_get_module_and_offset_for_pc@@Base+0x994>
   1d2b0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d2b4:	add	x1, x1, #0x818
   1d2b8:	b	1ceb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f0>
   1d2bc:	str	x1, [sp, #104]
   1d2c0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d2c4:	ldr	x1, [sp, #104]
   1d2c8:	cmp	x21, x0
   1d2cc:	str	x0, [x1]
   1d2d0:	b.cc	1d248 <__sanitizer_get_module_and_offset_for_pc@@Base+0x988>  // b.lo, b.ul, b.last
   1d2d4:	stp	xzr, xzr, [sp, #160]
   1d2d8:	str	xzr, [sp, #176]
   1d2dc:	cbnz	x0, 1d020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x760>
   1d2e0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d2e4:	ldr	x1, [sp, #104]
   1d2e8:	str	x0, [x1]
   1d2ec:	b	1d020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x760>
   1d2f0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d2f4:	str	x0, [x20]
   1d2f8:	b	1cf6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ac>
   1d2fc:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d300:	add	x0, x0, #0x160
   1d304:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1d308:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1d30c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d310:	str	x0, [x20]
   1d314:	b	1cecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x60c>
   1d318:	cmp	x4, #0x3ff
   1d31c:	b.ls	1d434 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb74>  // b.plast
   1d320:	add	x0, x3, x2
   1d324:	mov	x3, #0x400                 	// #1024
   1d328:	mov	w1, #0x0                   	// #0
   1d32c:	sub	x2, x3, x2
   1d330:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1d334:	ldr	x3, [sp, #160]
   1d338:	b	1d07c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7bc>
   1d33c:	ldr	x1, [x23, #4016]
   1d340:	ldr	x0, [x1]
   1d344:	cbz	x0, 1d414 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb54>
   1d348:	sub	x1, x0, #0x1
   1d34c:	tst	x1, x0
   1d350:	b.ne	1d2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   1d354:	add	x3, x0, #0x817
   1d358:	neg	x0, x0
   1d35c:	and	x3, x3, x0
   1d360:	add	x1, x28, #0x178
   1d364:	mov	x0, x3
   1d368:	mov	w2, #0x0                   	// #0
   1d36c:	str	x3, [sp, #120]
   1d370:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1d374:	str	x0, [sp, #104]
   1d378:	mov	x1, x20
   1d37c:	mov	x2, #0x0                   	// #0
   1d380:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1d384:	ldr	x4, [sp, #104]
   1d388:	mov	x1, x27
   1d38c:	ldr	x3, [sp, #120]
   1d390:	mov	x0, x20
   1d394:	mov	x20, x4
   1d398:	mov	x27, x3
   1d39c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1d3a0:	b	1cfbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fc>
   1d3a4:	ldr	x23, [x23, #4016]
   1d3a8:	ldr	x0, [x23]
   1d3ac:	cbz	x0, 1d428 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb68>
   1d3b0:	sub	x1, x0, #0x1
   1d3b4:	tst	x1, x0
   1d3b8:	b.ne	1d2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   1d3bc:	add	x23, x0, #0x817
   1d3c0:	neg	x0, x0
   1d3c4:	and	x23, x23, x0
   1d3c8:	add	x1, x28, #0x178
   1d3cc:	mov	x0, x23
   1d3d0:	mov	w2, #0x0                   	// #0
   1d3d4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1d3d8:	mov	x26, x0
   1d3dc:	mov	x2, #0x0                   	// #0
   1d3e0:	mov	x1, x20
   1d3e4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1d3e8:	mov	x1, x24
   1d3ec:	mov	x0, x20
   1d3f0:	mov	x24, x23
   1d3f4:	mov	x20, x26
   1d3f8:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1d3fc:	b	1cd8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc>
   1d400:	mov	x0, x25
   1d404:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d408:	add	x1, x1, #0x938
   1d40c:	bl	1a3b0 <OnPrint@@Base+0x420>
   1d410:	b	1d234 <__sanitizer_get_module_and_offset_for_pc@@Base+0x974>
   1d414:	str	x1, [sp, #104]
   1d418:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d41c:	ldr	x1, [sp, #104]
   1d420:	str	x0, [x1]
   1d424:	b	1d348 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa88>
   1d428:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d42c:	str	x0, [x23]
   1d430:	b	1d3b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaf0>
   1d434:	ldr	x23, [x23, #4016]
   1d438:	ldr	x0, [x23]
   1d43c:	cbz	x0, 1d490 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbd0>
   1d440:	sub	x1, x0, #0x1
   1d444:	tst	x1, x0
   1d448:	b.ne	1d2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   1d44c:	add	x23, x0, #0x3ff
   1d450:	neg	x0, x0
   1d454:	and	x23, x23, x0
   1d458:	add	x1, x28, #0x178
   1d45c:	mov	w2, #0x0                   	// #0
   1d460:	mov	x0, x23
   1d464:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1d468:	str	x0, [sp, #104]
   1d46c:	ldr	x1, [sp, #160]
   1d470:	ldr	x2, [sp, #176]
   1d474:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1d478:	ldp	x0, x1, [sp, #160]
   1d47c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1d480:	ldr	x3, [sp, #104]
   1d484:	stp	x3, x23, [sp, #160]
   1d488:	ldr	x2, [sp, #176]
   1d48c:	b	1d320 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa60>
   1d490:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d494:	str	x0, [x23]
   1d498:	b	1d440 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb80>
   1d49c:	nop
   1d4a0:	stp	x19, x20, [sp, #-32]!
   1d4a4:	adrp	x19, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1d4a8:	add	x19, x19, #0x280
   1d4ac:	str	x30, [sp, #16]
   1d4b0:	bl	18948 <__sanitizer_set_report_fd@@Base+0x5a28>
   1d4b4:	mov	x20, x0
   1d4b8:	ldxr	x1, [x19]
   1d4bc:	cbnz	x1, 1d4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc08>
   1d4c0:	stlxr	w0, x20, [x19]
   1d4c4:	cbnz	w0, 1d4b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbf8>
   1d4c8:	dmb	ish
   1d4cc:	cbz	x1, 1d4e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc28>
   1d4d0:	cmp	x20, x1
   1d4d4:	b.eq	1d520 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc60>  // b.none
   1d4d8:	bl	156c0 <__sanitizer_set_report_fd@@Base+0x27a0>
   1d4dc:	ldxr	x1, [x19]
   1d4e0:	cbz	x1, 1d4c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc00>
   1d4e4:	b	1d4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc08>
   1d4e8:	add	x0, x19, #0x8
   1d4ec:	mov	w2, #0x1                   	// #1
   1d4f0:	ldxrb	w1, [x0]
   1d4f4:	stxrb	w3, w2, [x0]
   1d4f8:	cbnz	w3, 1d4f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc30>
   1d4fc:	dmb	ish
   1d500:	tst	w1, #0xff
   1d504:	b.eq	1d514 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc54>  // b.none
   1d508:	ldr	x30, [sp, #16]
   1d50c:	ldp	x19, x20, [sp], #32
   1d510:	b	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   1d514:	ldr	x30, [sp, #16]
   1d518:	ldp	x19, x20, [sp], #32
   1d51c:	ret
   1d520:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d524:	ldr	x0, [x0, #4024]
   1d528:	ldr	x19, [x0]
   1d52c:	mov	x0, x19
   1d530:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1d534:	mov	x1, x0
   1d538:	mov	x0, x19
   1d53c:	bl	12488 <__sanitizer_cov_dump@@Base+0x1e78>
   1d540:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d544:	add	x0, x0, #0xa38
   1d548:	add	x0, x0, #0x20
   1d54c:	mov	x1, #0x2b                  	// #43
   1d550:	bl	12488 <__sanitizer_cov_dump@@Base+0x1e78>
   1d554:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d558:	ldr	x0, [x0, #4056]
   1d55c:	ldr	w0, [x0, #216]
   1d560:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x27b0>
   1d564:	nop
   1d568:	and	w0, w0, #0x6
   1d56c:	cmp	w0, #0x6
   1d570:	b.eq	1d578 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcb8>  // b.none
   1d574:	ret
   1d578:	stp	x29, x30, [sp, #-96]!
   1d57c:	mov	x29, sp
   1d580:	add	x0, x29, #0x48
   1d584:	stp	x23, x24, [sp, #48]
   1d588:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d58c:	stp	x19, x20, [sp, #16]
   1d590:	mov	x20, x30
   1d594:	stp	x21, x22, [sp, #32]
   1d598:	bl	1d4a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbe0>
   1d59c:	bl	1cb68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   1d5a0:	ldr	x19, [x23, #4016]
   1d5a4:	and	w22, w0, #0xff
   1d5a8:	ldr	x0, [x19]
   1d5ac:	cbz	x0, 1d730 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe70>
   1d5b0:	sub	x1, x0, #0x1
   1d5b4:	tst	x1, x0
   1d5b8:	b.ne	1d798 <__sanitizer_get_module_and_offset_for_pc@@Base+0xed8>  // b.any
   1d5bc:	add	x21, x0, #0x817
   1d5c0:	neg	x0, x0
   1d5c4:	and	x21, x21, x0
   1d5c8:	mov	w2, #0x0                   	// #0
   1d5cc:	mov	x0, x21
   1d5d0:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d5d4:	add	x1, x24, #0x178
   1d5d8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1d5dc:	mov	x2, #0x0                   	// #0
   1d5e0:	mov	x1, #0x0                   	// #0
   1d5e4:	mov	x19, x0
   1d5e8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1d5ec:	mov	x1, #0x0                   	// #0
   1d5f0:	mov	x0, #0x0                   	// #0
   1d5f4:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1d5f8:	cmp	x21, #0x817
   1d5fc:	b.ls	1d73c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe7c>  // b.plast
   1d600:	mov	w1, #0x0                   	// #0
   1d604:	mov	x0, x19
   1d608:	mov	x2, #0x818                 	// #2072
   1d60c:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1d610:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d614:	add	x1, x19, #0x10
   1d618:	str	xzr, [x19, #2064]
   1d61c:	mov	x24, x29
   1d620:	ldr	x0, [x0, #4056]
   1d624:	ldrb	w23, [x0, #33]
   1d628:	stp	x1, xzr, [x19]
   1d62c:	stp	xzr, xzr, [x29, #80]
   1d630:	cbnz	w23, 1d71c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe5c>
   1d634:	ldp	x5, x6, [x29, #80]
   1d638:	mov	w7, w23
   1d63c:	mov	x3, x24
   1d640:	mov	x2, x20
   1d644:	mov	x0, x19
   1d648:	mov	x4, #0x0                   	// #0
   1d64c:	mov	w1, #0x100                 	// #256
   1d650:	bl	1c3a8 <OnPrint@@Base+0x2418>
   1d654:	cbnz	w22, 1d6e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe24>
   1d658:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1d65c:	add	x20, x1, #0x428
   1d660:	mov	x1, x20
   1d664:	adrp	x22, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d668:	add	x0, x22, #0x98
   1d66c:	bl	1a2a0 <OnPrint@@Base+0x310>
   1d670:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d674:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d678:	add	x0, x0, #0x9f8
   1d67c:	ldr	x1, [x1, #4024]
   1d680:	ldr	x1, [x1]
   1d684:	bl	1a328 <OnPrint@@Base+0x398>
   1d688:	mov	x1, x20
   1d68c:	add	x0, x22, #0x98
   1d690:	bl	1a2a0 <OnPrint@@Base+0x310>
   1d694:	mov	x0, x19
   1d698:	bl	1bf40 <OnPrint@@Base+0x1fb0>
   1d69c:	mov	x2, #0x0                   	// #0
   1d6a0:	mov	x1, x19
   1d6a4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d6a8:	add	x0, x0, #0x9e8
   1d6ac:	bl	1cbc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308>
   1d6b0:	mov	x1, x21
   1d6b4:	mov	x0, x19
   1d6b8:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1d6bc:	dmb	ish
   1d6c0:	adrp	x0, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1d6c4:	add	x1, x0, #0x280
   1d6c8:	strb	wzr, [x1, #8]
   1d6cc:	str	xzr, [x0, #640]
   1d6d0:	ldp	x19, x20, [sp, #16]
   1d6d4:	ldp	x21, x22, [sp, #32]
   1d6d8:	ldp	x23, x24, [sp, #48]
   1d6dc:	ldp	x29, x30, [sp], #96
   1d6e0:	ret
   1d6e4:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d6e8:	adrp	x22, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d6ec:	add	x1, x1, #0x110
   1d6f0:	add	x0, x22, #0x98
   1d6f4:	bl	1a2a0 <OnPrint@@Base+0x310>
   1d6f8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1d6fc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d700:	add	x0, x0, #0x9f8
   1d704:	ldr	x1, [x1, #4024]
   1d708:	ldr	x1, [x1]
   1d70c:	bl	1a328 <OnPrint@@Base+0x398>
   1d710:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d714:	add	x1, x1, #0x120
   1d718:	b	1d68c <__sanitizer_get_module_and_offset_for_pc@@Base+0xdcc>
   1d71c:	add	x2, x29, #0x58
   1d720:	add	x1, x29, #0x50
   1d724:	mov	w0, #0x0                   	// #0
   1d728:	bl	17160 <__sanitizer_set_report_fd@@Base+0x4240>
   1d72c:	b	1d634 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd74>
   1d730:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d734:	str	x0, [x19]
   1d738:	b	1d5b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcf0>
   1d73c:	ldr	x23, [x23, #4016]
   1d740:	ldr	x0, [x23]
   1d744:	cbz	x0, 1d7a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>
   1d748:	sub	x1, x0, #0x1
   1d74c:	tst	x1, x0
   1d750:	b.ne	1d798 <__sanitizer_get_module_and_offset_for_pc@@Base+0xed8>  // b.any
   1d754:	add	x23, x0, #0x817
   1d758:	neg	x0, x0
   1d75c:	and	x23, x23, x0
   1d760:	add	x1, x24, #0x178
   1d764:	mov	x0, x23
   1d768:	mov	w2, #0x0                   	// #0
   1d76c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1d770:	mov	x24, x0
   1d774:	mov	x2, #0x0                   	// #0
   1d778:	mov	x1, x19
   1d77c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1d780:	mov	x1, x21
   1d784:	mov	x0, x19
   1d788:	mov	x21, x23
   1d78c:	mov	x19, x24
   1d790:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1d794:	b	1d600 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd40>
   1d798:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d79c:	add	x0, x0, #0x160
   1d7a0:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1d7a4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1d7a8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1d7ac:	str	x0, [x23]
   1d7b0:	b	1d748 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe88>
   1d7b4:	nop
   1d7b8:	stp	x19, x20, [sp, #-128]!
   1d7bc:	mov	w20, w2
   1d7c0:	stp	x21, x22, [sp, #16]
   1d7c4:	mov	x22, x4
   1d7c8:	mov	x21, x3
   1d7cc:	stp	x23, x24, [sp, #32]
   1d7d0:	mov	x23, x1
   1d7d4:	mov	x24, x0
   1d7d8:	str	x30, [sp, #48]
   1d7dc:	bl	1cc60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a0>
   1d7e0:	add	x19, sp, #0x48
   1d7e4:	add	x0, sp, #0x40
   1d7e8:	bl	1d4a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbe0>
   1d7ec:	stp	x24, x23, [sp, #72]
   1d7f0:	mov	x0, x19
   1d7f4:	bl	18730 <__sanitizer_set_report_fd@@Base+0x5810>
   1d7f8:	mov	x1, x0
   1d7fc:	mov	x0, x19
   1d800:	str	x1, [sp, #88]
   1d804:	bl	18740 <__sanitizer_set_report_fd@@Base+0x5820>
   1d808:	mov	w1, w0
   1d80c:	mov	x0, x19
   1d810:	strb	w1, [sp, #120]
   1d814:	bl	16bb8 <__sanitizer_set_report_fd@@Base+0x3c98>
   1d818:	mov	w1, w0
   1d81c:	mov	x0, x19
   1d820:	str	w1, [sp, #124]
   1d824:	bl	16c08 <__sanitizer_set_report_fd@@Base+0x3ce8>
   1d828:	mov	x3, x22
   1d82c:	mov	x2, x21
   1d830:	mov	w1, w20
   1d834:	mov	x0, x19
   1d838:	bl	1cc98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d8>
   1d83c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d840:	add	x0, x0, #0xa28
   1d844:	bl	1a328 <OnPrint@@Base+0x398>
   1d848:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1d84c:	nop
   1d850:	dmb	ish
   1d854:	adrp	x0, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1d858:	add	x1, x0, #0x280
   1d85c:	strb	wzr, [x1, #8]
   1d860:	str	xzr, [x0, #640]
   1d864:	ret
   1d868:	adrp	x0, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1d86c:	add	x0, x0, #0x280
   1d870:	ldrb	w3, [x0, #8]
   1d874:	and	x3, x3, #0xff
   1d878:	cmp	x3, #0x1
   1d87c:	b.ne	1d884 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfc4>  // b.any
   1d880:	ret
   1d884:	str	x30, [sp, #-16]!
   1d888:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1d88c:	adrp	x0, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1d890:	add	x2, x2, #0x7c8
   1d894:	add	x0, x0, #0x800
   1d898:	mov	x4, #0x1                   	// #1
   1d89c:	mov	w1, #0x2a                  	// #42
   1d8a0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1d8a4:	nop
   1d8a8:	stp	x19, x20, [sp, #-80]!
   1d8ac:	stp	x21, x22, [sp, #16]
   1d8b0:	mov	x22, x2
   1d8b4:	str	x30, [sp, #64]
   1d8b8:	ldrb	w2, [x1]
   1d8bc:	cbz	w2, 1d958 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1098>
   1d8c0:	mov	x19, x1
   1d8c4:	mov	x21, x0
   1d8c8:	stp	x23, x24, [sp, #32]
   1d8cc:	adrp	x23, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d8d0:	mov	x24, x3
   1d8d4:	add	x23, x23, #0x98
   1d8d8:	stp	x25, x26, [sp, #48]
   1d8dc:	adrp	x25, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d8e0:	adrp	x26, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d8e4:	add	x25, x25, #0xa90
   1d8e8:	b	1d904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>
   1d8ec:	add	x19, x19, #0x2
   1d8f0:	add	x1, x26, #0xa88
   1d8f4:	mov	x0, x21
   1d8f8:	bl	1a3b0 <OnPrint@@Base+0x420>
   1d8fc:	ldrb	w2, [x20, #1]
   1d900:	cbz	w2, 1d950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1090>
   1d904:	cmp	w2, #0x25
   1d908:	add	x20, x19, #0x1
   1d90c:	b.ne	1d994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10d4>  // b.any
   1d910:	ldrb	w2, [x19, #1]
   1d914:	cmp	w2, #0x6c
   1d918:	b.eq	1d9b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10f4>  // b.none
   1d91c:	b.hi	1d968 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a8>  // b.pmore
   1d920:	cmp	w2, #0x25
   1d924:	b.eq	1d8ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x102c>  // b.none
   1d928:	cmp	w2, #0x67
   1d92c:	b.ne	1d9cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x110c>  // b.any
   1d930:	ldr	x2, [x22, #40]
   1d934:	mov	x1, x23
   1d938:	mov	x0, x21
   1d93c:	add	x19, x19, #0x2
   1d940:	bl	1a3b0 <OnPrint@@Base+0x420>
   1d944:	ldrb	w2, [x20, #1]
   1d948:	cbnz	w2, 1d904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>
   1d94c:	nop
   1d950:	ldp	x23, x24, [sp, #32]
   1d954:	ldp	x25, x26, [sp, #48]
   1d958:	ldp	x21, x22, [sp, #16]
   1d95c:	ldr	x30, [sp, #64]
   1d960:	ldp	x19, x20, [sp], #80
   1d964:	ret
   1d968:	cmp	w2, #0x73
   1d96c:	b.ne	1d9cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x110c>  // b.any
   1d970:	ldr	x0, [x22, #24]
   1d974:	mov	x1, x24
   1d978:	add	x19, x19, #0x2
   1d97c:	bl	f1d8 <__sancov_default_options@@Base+0x2a88>
   1d980:	mov	x2, x0
   1d984:	mov	x1, x23
   1d988:	mov	x0, x21
   1d98c:	bl	1a3b0 <OnPrint@@Base+0x420>
   1d990:	b	1d8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x103c>
   1d994:	mov	x0, x21
   1d998:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1d99c:	add	x1, x1, #0x90
   1d9a0:	bl	1a3b0 <OnPrint@@Base+0x420>
   1d9a4:	mov	x0, x20
   1d9a8:	mov	x20, x19
   1d9ac:	mov	x19, x0
   1d9b0:	b	1d8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x103c>
   1d9b4:	ldr	x2, [x22, #32]
   1d9b8:	add	x19, x19, #0x2
   1d9bc:	mov	x1, x25
   1d9c0:	mov	x0, x21
   1d9c4:	bl	1a3b0 <OnPrint@@Base+0x420>
   1d9c8:	b	1d8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x103c>
   1d9cc:	mov	w1, w2
   1d9d0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1d9d4:	add	x0, x0, #0xa98
   1d9d8:	bl	1a328 <OnPrint@@Base+0x398>
   1d9dc:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1d9e0:	stp	x19, x20, [sp, #-48]!
   1d9e4:	cmp	w2, #0x0
   1d9e8:	and	w4, w4, #0xff
   1d9ec:	stp	x21, x22, [sp, #16]
   1d9f0:	mov	x20, x0
   1d9f4:	mov	w19, w2
   1d9f8:	str	x30, [sp, #32]
   1d9fc:	mov	x0, x1
   1da00:	mov	w21, w3
   1da04:	ccmp	w4, #0x0, #0x4, gt
   1da08:	mov	x1, x5
   1da0c:	b.ne	1da7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x11bc>  // b.any
   1da10:	bl	f1d8 <__sancov_default_options@@Base+0x2a88>
   1da14:	mov	x2, x0
   1da18:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1da1c:	mov	x0, x20
   1da20:	add	x1, x1, #0x98
   1da24:	bl	1a3b0 <OnPrint@@Base+0x420>
   1da28:	cmp	w19, #0x0
   1da2c:	b.gt	1da40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1180>
   1da30:	ldp	x21, x22, [sp, #16]
   1da34:	ldr	x30, [sp, #32]
   1da38:	ldp	x19, x20, [sp], #48
   1da3c:	ret
   1da40:	adrp	x22, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1da44:	add	x22, x22, #0xae8
   1da48:	mov	w2, w19
   1da4c:	mov	x1, x22
   1da50:	mov	x0, x20
   1da54:	bl	1a3b0 <OnPrint@@Base+0x420>
   1da58:	cmp	w21, #0x0
   1da5c:	b.le	1da30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1170>
   1da60:	mov	w2, w21
   1da64:	mov	x1, x22
   1da68:	mov	x0, x20
   1da6c:	ldp	x21, x22, [sp, #16]
   1da70:	ldr	x30, [sp, #32]
   1da74:	ldp	x19, x20, [sp], #48
   1da78:	b	1a3b0 <OnPrint@@Base+0x420>
   1da7c:	bl	f1d8 <__sancov_default_options@@Base+0x2a88>
   1da80:	mov	x2, x0
   1da84:	mov	w3, w19
   1da88:	mov	x0, x20
   1da8c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1da90:	add	x1, x1, #0xad8
   1da94:	bl	1a3b0 <OnPrint@@Base+0x420>
   1da98:	cmp	w21, #0x0
   1da9c:	b.gt	1dabc <__sanitizer_get_module_and_offset_for_pc@@Base+0x11fc>
   1daa0:	mov	x0, x20
   1daa4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1daa8:	ldp	x21, x22, [sp, #16]
   1daac:	add	x1, x1, #0x478
   1dab0:	ldr	x30, [sp, #32]
   1dab4:	ldp	x19, x20, [sp], #48
   1dab8:	b	1a3b0 <OnPrint@@Base+0x420>
   1dabc:	mov	w2, w21
   1dac0:	mov	x0, x20
   1dac4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dac8:	add	x1, x1, #0xae0
   1dacc:	bl	1a3b0 <OnPrint@@Base+0x420>
   1dad0:	mov	x0, x20
   1dad4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1dad8:	ldp	x21, x22, [sp, #16]
   1dadc:	add	x1, x1, #0x478
   1dae0:	ldr	x30, [sp, #32]
   1dae4:	ldp	x19, x20, [sp], #48
   1dae8:	b	1a3b0 <OnPrint@@Base+0x420>
   1daec:	nop
   1daf0:	stp	x19, x20, [sp, #-32]!
   1daf4:	mov	x20, x0
   1daf8:	mov	w19, w3
   1dafc:	mov	x0, x1
   1db00:	mov	x1, x4
   1db04:	stp	x21, x30, [sp, #16]
   1db08:	mov	x21, x2
   1db0c:	bl	f1d8 <__sancov_default_options@@Base+0x2a88>
   1db10:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1db14:	mov	x2, x0
   1db18:	add	x1, x1, #0xb30
   1db1c:	mov	x0, x20
   1db20:	bl	1a3b0 <OnPrint@@Base+0x420>
   1db24:	cbnz	w19, 1db44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1284>
   1db28:	mov	x2, x21
   1db2c:	mov	x0, x20
   1db30:	ldp	x21, x30, [sp, #16]
   1db34:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1db38:	ldp	x19, x20, [sp], #32
   1db3c:	add	x1, x1, #0xb68
   1db40:	b	1a3b0 <OnPrint@@Base+0x420>
   1db44:	cmp	w19, #0x5
   1db48:	b.eq	1dc14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1354>  // b.none
   1db4c:	b.hi	1db94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12d4>  // b.pmore
   1db50:	cmp	w19, #0x3
   1db54:	b.eq	1dc08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1348>  // b.none
   1db58:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1db5c:	cmp	w19, #0x4
   1db60:	add	x2, x1, #0xb18
   1db64:	b.ne	1dbc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1300>  // b.any
   1db68:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1db6c:	mov	x0, x20
   1db70:	add	x1, x1, #0xb60
   1db74:	bl	1a3b0 <OnPrint@@Base+0x420>
   1db78:	mov	x2, x21
   1db7c:	mov	x0, x20
   1db80:	ldp	x21, x30, [sp, #16]
   1db84:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1db88:	ldp	x19, x20, [sp], #32
   1db8c:	add	x1, x1, #0xb68
   1db90:	b	1a3b0 <OnPrint@@Base+0x420>
   1db94:	cmp	w19, #0x7
   1db98:	b.eq	1dbfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x133c>  // b.none
   1db9c:	cmp	w19, #0x8
   1dba0:	b.ne	1dbdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x131c>  // b.any
   1dba4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dba8:	mov	x0, x20
   1dbac:	add	x2, x1, #0xb20
   1dbb0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dbb4:	add	x1, x1, #0xb60
   1dbb8:	bl	1a3b0 <OnPrint@@Base+0x420>
   1dbbc:	b	1db78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12b8>
   1dbc0:	cmp	w19, #0x1
   1dbc4:	b.eq	1dbf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1330>  // b.none
   1dbc8:	cmp	w19, #0x2
   1dbcc:	b.ne	1dc20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1360>  // b.any
   1dbd0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dbd4:	add	x2, x1, #0xaf8
   1dbd8:	b	1db68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   1dbdc:	cmp	w19, #0x6
   1dbe0:	b.ne	1dc20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1360>  // b.any
   1dbe4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dbe8:	add	x2, x1, #0xb28
   1dbec:	b	1db68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   1dbf0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dbf4:	add	x2, x1, #0xb00
   1dbf8:	b	1db68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   1dbfc:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dc00:	add	x2, x1, #0xaf0
   1dc04:	b	1db68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   1dc08:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dc0c:	add	x2, x1, #0xb10
   1dc10:	b	1db68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   1dc14:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dc18:	add	x2, x1, #0xb08
   1dc1c:	b	1db68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   1dc20:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dc24:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1dc28:	add	x2, x2, #0xb38
   1dc2c:	add	x0, x0, #0x1a8
   1dc30:	mov	x4, #0x0                   	// #0
   1dc34:	mov	x3, #0x0                   	// #0
   1dc38:	mov	w1, #0x2a9                 	// #681
   1dc3c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1dc40:	stp	x19, x20, [sp, #-112]!
   1dc44:	mov	x19, x1
   1dc48:	mov	x20, x0
   1dc4c:	mov	x0, x1
   1dc50:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   1dc54:	add	x1, x1, #0xa28
   1dc58:	stp	x21, x22, [sp, #16]
   1dc5c:	mov	x21, x3
   1dc60:	mov	x22, x6
   1dc64:	stp	x23, x24, [sp, #32]
   1dc68:	mov	x23, x5
   1dc6c:	stp	x25, x26, [sp, #48]
   1dc70:	mov	w26, w2
   1dc74:	stp	x27, x28, [sp, #64]
   1dc78:	and	w27, w4, #0xff
   1dc7c:	str	x30, [sp, #80]
   1dc80:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   1dc84:	cbz	w0, 1dfb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16f0>
   1dc88:	ldrb	w2, [x19]
   1dc8c:	cbz	w2, 1dd60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14a0>
   1dc90:	adrp	x25, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dc94:	adrp	x24, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dc98:	add	x25, x25, #0xa90
   1dc9c:	add	x24, x24, #0xb78
   1dca0:	b	1dd30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1470>
   1dca4:	ldrb	w2, [x19, #1]
   1dca8:	cmp	w2, #0x6c
   1dcac:	b.eq	1df98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d8>  // b.none
   1dcb0:	b.hi	1ddd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1518>  // b.pmore
   1dcb4:	cmp	w2, #0x4d
   1dcb8:	b.eq	1df60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16a0>  // b.none
   1dcbc:	b.ls	1dda4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14e4>  // b.plast
   1dcc0:	cmp	w2, #0x63
   1dcc4:	b.eq	1df48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1688>  // b.none
   1dcc8:	cmp	w2, #0x66
   1dccc:	b.ne	1dd7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14bc>  // b.any
   1dcd0:	ldr	x3, [x21, #32]
   1dcd4:	cbz	x3, 1dd10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1450>
   1dcd8:	cbz	x22, 1dd10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1450>
   1dcdc:	mov	x0, x22
   1dce0:	str	x3, [sp, #96]
   1dce4:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1dce8:	mov	x2, x0
   1dcec:	ldr	x3, [sp, #96]
   1dcf0:	mov	x1, x22
   1dcf4:	stp	x2, x3, [sp, #96]
   1dcf8:	mov	x0, x3
   1dcfc:	bl	14828 <__sanitizer_set_report_fd@@Base+0x1908>
   1dd00:	cmp	w0, #0x0
   1dd04:	ldp	x2, x3, [sp, #96]
   1dd08:	add	x2, x3, x2
   1dd0c:	csel	x3, x2, x3, eq  // eq = none
   1dd10:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1dd14:	mov	x2, x3
   1dd18:	add	x19, x19, #0x2
   1dd1c:	mov	x0, x20
   1dd20:	add	x1, x1, #0x98
   1dd24:	bl	1a3b0 <OnPrint@@Base+0x420>
   1dd28:	ldrb	w2, [x28, #1]
   1dd2c:	cbz	w2, 1dd60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14a0>
   1dd30:	cmp	w2, #0x25
   1dd34:	add	x28, x19, #0x1
   1dd38:	b.eq	1dca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13e4>  // b.none
   1dd3c:	mov	x0, x20
   1dd40:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1dd44:	add	x1, x1, #0x90
   1dd48:	bl	1a3b0 <OnPrint@@Base+0x420>
   1dd4c:	mov	x0, x28
   1dd50:	mov	x28, x19
   1dd54:	mov	x19, x0
   1dd58:	ldrb	w2, [x28, #1]
   1dd5c:	cbnz	w2, 1dd30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1470>
   1dd60:	ldp	x21, x22, [sp, #16]
   1dd64:	ldp	x23, x24, [sp, #32]
   1dd68:	ldp	x25, x26, [sp, #48]
   1dd6c:	ldp	x27, x28, [sp, #64]
   1dd70:	ldr	x30, [sp, #80]
   1dd74:	ldp	x19, x20, [sp], #112
   1dd78:	ret
   1dd7c:	cmp	w2, #0x53
   1dd80:	b.ne	1e008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>  // b.any
   1dd84:	ldp	w2, w3, [x21, #56]
   1dd88:	add	x19, x19, #0x2
   1dd8c:	ldr	x1, [x21, #48]
   1dd90:	mov	x5, x23
   1dd94:	mov	w4, w27
   1dd98:	mov	x0, x20
   1dd9c:	bl	1d9e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1120>
   1dda0:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1dda4:	cmp	w2, #0x46
   1dda8:	b.eq	1deb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15f0>  // b.none
   1ddac:	cmp	w2, #0x4c
   1ddb0:	b.ne	1de0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x154c>  // b.any
   1ddb4:	ldr	x1, [x21, #48]
   1ddb8:	add	x19, x19, #0x2
   1ddbc:	cbz	x1, 1dfc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1700>
   1ddc0:	ldp	w2, w3, [x21, #56]
   1ddc4:	mov	x5, x23
   1ddc8:	mov	w4, w27
   1ddcc:	mov	x0, x20
   1ddd0:	bl	1d9e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1120>
   1ddd4:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1ddd8:	cmp	w2, #0x70
   1dddc:	b.eq	1df30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1670>  // b.none
   1dde0:	b.ls	1de5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x159c>  // b.plast
   1dde4:	cmp	w2, #0x71
   1dde8:	b.ne	1de2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x156c>  // b.any
   1ddec:	ldr	x2, [x21, #40]
   1ddf0:	add	x19, x19, #0x2
   1ddf4:	mov	x1, x24
   1ddf8:	mov	x0, x20
   1ddfc:	cmn	x2, #0x1
   1de00:	csel	x2, x2, xzr, ne  // ne = any
   1de04:	bl	1a3b0 <OnPrint@@Base+0x420>
   1de08:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1de0c:	cmp	w2, #0x25
   1de10:	b.ne	1e008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>  // b.any
   1de14:	add	x19, x19, #0x2
   1de18:	mov	x0, x20
   1de1c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1de20:	add	x1, x1, #0xa88
   1de24:	bl	1a3b0 <OnPrint@@Base+0x420>
   1de28:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1de2c:	cmp	w2, #0x73
   1de30:	b.ne	1e008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>  // b.any
   1de34:	ldr	x0, [x21, #48]
   1de38:	mov	x1, x23
   1de3c:	bl	f1d8 <__sancov_default_options@@Base+0x2a88>
   1de40:	add	x19, x19, #0x2
   1de44:	mov	x2, x0
   1de48:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1de4c:	mov	x0, x20
   1de50:	add	x1, x1, #0x98
   1de54:	bl	1a3b0 <OnPrint@@Base+0x420>
   1de58:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1de5c:	cmp	w2, #0x6e
   1de60:	b.eq	1de94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15d4>  // b.none
   1de64:	cmp	w2, #0x6f
   1de68:	b.ne	1de84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15c4>  // b.any
   1de6c:	ldr	x2, [x21, #16]
   1de70:	add	x19, x19, #0x2
   1de74:	mov	x1, x24
   1de78:	mov	x0, x20
   1de7c:	bl	1a3b0 <OnPrint@@Base+0x420>
   1de80:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1de84:	cmp	w2, #0x6d
   1de88:	b.ne	1e008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>  // b.any
   1de8c:	ldr	x0, [x21, #8]
   1de90:	b	1de38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1578>
   1de94:	add	x19, x19, #0x2
   1de98:	mov	w2, w26
   1de9c:	mov	x0, x20
   1dea0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dea4:	add	x1, x1, #0xb70
   1dea8:	bl	1a3b0 <OnPrint@@Base+0x420>
   1deac:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1deb0:	ldr	x3, [x21, #32]
   1deb4:	add	x19, x19, #0x2
   1deb8:	cbz	x3, 1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1debc:	cbz	x22, 1def4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1634>
   1dec0:	mov	x0, x22
   1dec4:	str	x3, [sp, #96]
   1dec8:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1decc:	mov	x2, x0
   1ded0:	ldr	x3, [sp, #96]
   1ded4:	mov	x1, x22
   1ded8:	stp	x2, x3, [sp, #96]
   1dedc:	mov	x0, x3
   1dee0:	bl	14828 <__sanitizer_set_report_fd@@Base+0x1908>
   1dee4:	cmp	w0, #0x0
   1dee8:	ldp	x2, x3, [sp, #96]
   1deec:	add	x2, x3, x2
   1def0:	csel	x3, x2, x3, eq  // eq = none
   1def4:	mov	x0, x20
   1def8:	mov	x2, x3
   1defc:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1df00:	add	x1, x1, #0xb80
   1df04:	bl	1a3b0 <OnPrint@@Base+0x420>
   1df08:	ldr	x0, [x21, #48]
   1df0c:	cbnz	x0, 1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1df10:	ldr	x2, [x21, #40]
   1df14:	cmn	x2, #0x1
   1df18:	b.eq	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>  // b.none
   1df1c:	mov	x0, x20
   1df20:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1df24:	add	x1, x1, #0xb88
   1df28:	bl	1a3b0 <OnPrint@@Base+0x420>
   1df2c:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1df30:	ldr	x2, [x21]
   1df34:	add	x19, x19, #0x2
   1df38:	mov	x1, x24
   1df3c:	mov	x0, x20
   1df40:	bl	1a3b0 <OnPrint@@Base+0x420>
   1df44:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1df48:	ldr	w2, [x21, #60]
   1df4c:	add	x19, x19, #0x2
   1df50:	mov	x1, x25
   1df54:	mov	x0, x20
   1df58:	bl	1a3b0 <OnPrint@@Base+0x420>
   1df5c:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1df60:	ldr	x2, [x21]
   1df64:	add	x19, x19, #0x2
   1df68:	tbnz	x2, #60, 1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1df6c:	ldr	x0, [x21, #8]
   1df70:	cbz	x0, 1dfe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1720>
   1df74:	bl	f258 <__sancov_default_options@@Base+0x2b08>
   1df78:	mov	x1, x0
   1df7c:	ldr	w3, [x21, #24]
   1df80:	mov	x0, x20
   1df84:	ldr	x2, [x21, #16]
   1df88:	adrp	x4, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1df8c:	add	x4, x4, #0x428
   1df90:	bl	1daf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1230>
   1df94:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1df98:	ldr	w2, [x21, #56]
   1df9c:	add	x19, x19, #0x2
   1dfa0:	mov	x1, x25
   1dfa4:	mov	x0, x20
   1dfa8:	bl	1a3b0 <OnPrint@@Base+0x420>
   1dfac:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1dfb0:	adrp	x19, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dfb4:	mov	w2, #0x20                  	// #32
   1dfb8:	add	x19, x19, #0xbb0
   1dfbc:	b	1dc90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13d0>
   1dfc0:	ldr	x1, [x21, #8]
   1dfc4:	cbz	x1, 1dff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1734>
   1dfc8:	ldr	w3, [x21, #24]
   1dfcc:	mov	x4, x23
   1dfd0:	ldr	x2, [x21, #16]
   1dfd4:	mov	x0, x20
   1dfd8:	bl	1daf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1230>
   1dfdc:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1dfe0:	mov	x0, x20
   1dfe4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dfe8:	add	x1, x1, #0xba8
   1dfec:	bl	1a3b0 <OnPrint@@Base+0x420>
   1dff0:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1dff4:	mov	x0, x20
   1dff8:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1dffc:	add	x1, x1, #0xb90
   1e000:	bl	1a3b0 <OnPrint@@Base+0x420>
   1e004:	b	1dd28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   1e008:	mov	w1, w2
   1e00c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e010:	add	x0, x0, #0xa98
   1e014:	bl	1a328 <OnPrint@@Base+0x398>
   1e018:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1e01c:	nop
   1e020:	ldr	x0, [x0, #24]
   1e024:	ret
   1e028:	mov	x0, #0x22                  	// #34
   1e02c:	ret
   1e030:	ldr	x4, [x0, #24]
   1e034:	cmp	x1, x4
   1e038:	b.cs	1e048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1788>  // b.hs, b.nlast
   1e03c:	ldr	x0, [x0, #8]
   1e040:	ldr	x0, [x0, x1, lsl #3]
   1e044:	ret
   1e048:	str	x30, [sp, #-16]!
   1e04c:	mov	x3, x1
   1e050:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e054:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e058:	add	x2, x2, #0xbc8
   1e05c:	add	x0, x0, #0xbf0
   1e060:	mov	w1, #0x202                 	// #514
   1e064:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e068:	stp	x19, x20, [sp, #-352]!
   1e06c:	mov	x20, x2
   1e070:	adrp	x4, 1e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1740>
   1e074:	ldr	x2, [x0]
   1e078:	stp	x21, x22, [sp, #16]
   1e07c:	add	x4, x4, #0x30
   1e080:	stp	x23, x30, [sp, #32]
   1e084:	mov	x21, x3
   1e088:	ldr	x2, [x2, #24]
   1e08c:	cmp	x2, x4
   1e090:	b.ne	1e124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1864>  // b.any
   1e094:	bl	1e030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   1e098:	mov	x19, x0
   1e09c:	add	x3, sp, #0x40
   1e0a0:	mov	x2, #0x1                   	// #1
   1e0a4:	mov	w1, w19
   1e0a8:	add	x22, sp, #0x50
   1e0ac:	mov	x23, #0x110                 	// #272
   1e0b0:	mov	w0, #0x4204                	// #16900
   1e0b4:	stp	x22, x23, [sp, #64]
   1e0b8:	bl	15b38 <__sanitizer_set_report_fd@@Base+0x2c18>
   1e0bc:	add	x1, sp, #0x3c
   1e0c0:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1e0c4:	tst	w0, #0xff
   1e0c8:	b.eq	1e0f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1838>  // b.none
   1e0cc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1e0d0:	ldr	w2, [sp, #60]
   1e0d4:	ldr	x0, [x0, #3896]
   1e0d8:	ldr	w0, [x0]
   1e0dc:	cbnz	w0, 1e130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1870>
   1e0e0:	cmp	w2, #0x3
   1e0e4:	csetm	w0, eq  // eq = none
   1e0e8:	ldp	x21, x22, [sp, #16]
   1e0ec:	ldp	x23, x30, [sp, #32]
   1e0f0:	ldp	x19, x20, [sp], #352
   1e0f4:	ret
   1e0f8:	ldr	x0, [sp, #328]
   1e0fc:	str	x0, [x21]
   1e100:	mov	x2, x23
   1e104:	mov	x1, x22
   1e108:	mov	x0, x20
   1e10c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1e110:	mov	w0, #0x1                   	// #1
   1e114:	ldp	x21, x22, [sp, #16]
   1e118:	ldp	x23, x30, [sp, #32]
   1e11c:	ldp	x19, x20, [sp], #352
   1e120:	ret
   1e124:	blr	x2
   1e128:	mov	x19, x0
   1e12c:	b	1e09c <__sanitizer_get_module_and_offset_for_pc@@Base+0x17dc>
   1e130:	mov	w1, w19
   1e134:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e138:	add	x0, x0, #0xc48
   1e13c:	bl	1a328 <OnPrint@@Base+0x398>
   1e140:	ldr	w2, [sp, #60]
   1e144:	b	1e0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1820>
   1e148:	stp	x19, x20, [sp, #-96]!
   1e14c:	mov	x19, x1
   1e150:	mov	x20, x0
   1e154:	ldr	x1, [x0, #32]
   1e158:	stp	x21, x22, [sp, #16]
   1e15c:	str	x30, [sp, #64]
   1e160:	cbz	x1, 1e1a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e0>
   1e164:	mov	x2, #0x0                   	// #0
   1e168:	ldr	x4, [x0, #16]
   1e16c:	b	1e17c <__sanitizer_get_module_and_offset_for_pc@@Base+0x18bc>
   1e170:	add	x2, x2, #0x1
   1e174:	cmp	x2, x1
   1e178:	b.eq	1e1a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e0>  // b.none
   1e17c:	ldr	x3, [x4, x2, lsl #3]
   1e180:	cmp	x19, x3
   1e184:	b.ne	1e170 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18b0>  // b.any
   1e188:	mov	w21, #0x0                   	// #0
   1e18c:	mov	w0, w21
   1e190:	ldp	x21, x22, [sp, #16]
   1e194:	ldr	x30, [sp, #64]
   1e198:	ldp	x19, x20, [sp], #96
   1e19c:	ret
   1e1a0:	mov	x3, #0x0                   	// #0
   1e1a4:	mov	x2, #0x0                   	// #0
   1e1a8:	mov	w1, w19
   1e1ac:	mov	w0, #0x10                  	// #16
   1e1b0:	stp	x23, x24, [sp, #32]
   1e1b4:	bl	15b38 <__sanitizer_set_report_fd@@Base+0x2c18>
   1e1b8:	add	x1, sp, #0x50
   1e1bc:	mov	w23, w19
   1e1c0:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1e1c4:	ands	w21, w0, #0xff
   1e1c8:	b.ne	1e2c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a04>  // b.any
   1e1cc:	stp	x25, x26, [sp, #48]
   1e1d0:	adrp	x25, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1e1d4:	ldr	x0, [x25, #3896]
   1e1d8:	ldr	w0, [x0]
   1e1dc:	sxtw	x0, w0
   1e1e0:	cmp	x0, #0x1
   1e1e4:	b.hi	1e2f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a30>  // b.pmore
   1e1e8:	add	x24, sp, #0x54
   1e1ec:	add	x22, sp, #0x58
   1e1f0:	mov	w2, #0x40000000            	// #1073741824
   1e1f4:	mov	x1, x24
   1e1f8:	mov	w0, w23
   1e1fc:	bl	15b50 <__sanitizer_set_report_fd@@Base+0x2c30>
   1e200:	mov	x1, x22
   1e204:	mov	x26, x0
   1e208:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1e20c:	tst	w0, #0xff
   1e210:	b.eq	1e220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1960>  // b.none
   1e214:	ldr	w0, [sp, #88]
   1e218:	cmp	w0, #0x4
   1e21c:	b.eq	1e1f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1930>  // b.none
   1e220:	mov	x0, x26
   1e224:	mov	x1, x22
   1e228:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1e22c:	tst	w0, #0xff
   1e230:	b.ne	1e3ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b2c>  // b.any
   1e234:	ldr	w3, [sp, #84]
   1e238:	and	w0, w3, #0xff
   1e23c:	cmp	w0, #0x7f
   1e240:	b.ne	1e268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19a8>  // b.any
   1e244:	ubfx	x3, x3, #8, #8
   1e248:	cmp	w3, #0x13
   1e24c:	b.eq	1e268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19a8>  // b.none
   1e250:	and	x3, x3, #0xff
   1e254:	mov	w1, w23
   1e258:	mov	x2, #0x0                   	// #0
   1e25c:	mov	w0, #0x7                   	// #7
   1e260:	bl	15b38 <__sanitizer_set_report_fd@@Base+0x2c18>
   1e264:	b	1e1f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1930>
   1e268:	ldr	x4, [x20, #24]
   1e26c:	str	x19, [sp, #88]
   1e270:	ldr	x3, [x20, #32]
   1e274:	add	x21, x20, #0x10
   1e278:	lsr	x4, x4, #3
   1e27c:	cmp	x3, x4
   1e280:	b.hi	1e3d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b14>  // b.pmore
   1e284:	add	x19, x3, #0x1
   1e288:	b.eq	1e304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a44>  // b.none
   1e28c:	ldr	x23, [x20, #16]
   1e290:	str	x19, [x21, #16]
   1e294:	mov	x1, x22
   1e298:	add	x0, x23, x3, lsl #3
   1e29c:	mov	x2, #0x8                   	// #8
   1e2a0:	mov	w21, #0x1                   	// #1
   1e2a4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1e2a8:	mov	w0, w21
   1e2ac:	ldp	x21, x22, [sp, #16]
   1e2b0:	ldp	x23, x24, [sp, #32]
   1e2b4:	ldp	x25, x26, [sp, #48]
   1e2b8:	ldr	x30, [sp, #64]
   1e2bc:	ldp	x19, x20, [sp], #96
   1e2c0:	ret
   1e2c4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1e2c8:	mov	w21, #0x0                   	// #0
   1e2cc:	ldr	x0, [x0, #3896]
   1e2d0:	ldr	w0, [x0]
   1e2d4:	cbnz	w0, 1e3b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af8>
   1e2d8:	mov	w0, w21
   1e2dc:	ldp	x21, x22, [sp, #16]
   1e2e0:	ldp	x23, x24, [sp, #32]
   1e2e4:	ldr	x30, [sp, #64]
   1e2e8:	ldp	x19, x20, [sp], #96
   1e2ec:	ret
   1e2f0:	mov	x1, x19
   1e2f4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e2f8:	add	x0, x0, #0xcb0
   1e2fc:	bl	1a328 <OnPrint@@Base+0x398>
   1e300:	b	1e1e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1928>
   1e304:	tst	x3, x19
   1e308:	b.eq	1e344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a84>  // b.none
   1e30c:	clz	x2, x19
   1e310:	mov	w1, #0x3f                  	// #63
   1e314:	sub	w2, w1, w2
   1e318:	mov	x1, #0x1                   	// #1
   1e31c:	add	w4, w2, #0x1
   1e320:	lsl	x4, x1, x4
   1e324:	cmp	x4, x19
   1e328:	b.ls	1e484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc4>  // b.plast
   1e32c:	lsl	x1, x1, x2
   1e330:	cmp	x1, x19
   1e334:	b.cs	1e464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ba4>  // b.hs, b.nlast
   1e338:	cmp	x3, x4
   1e33c:	b.hi	1e43c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b7c>  // b.pmore
   1e340:	mov	x19, x4
   1e344:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1e348:	lsl	x19, x19, #3
   1e34c:	ldr	x23, [x23, #4016]
   1e350:	ldr	x0, [x23]
   1e354:	cbz	x0, 1e418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b58>
   1e358:	sub	x1, x0, #0x1
   1e35c:	tst	x1, x0
   1e360:	b.ne	1e454 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b94>  // b.any
   1e364:	add	x19, x19, x1
   1e368:	neg	x0, x0
   1e36c:	and	x19, x19, x0
   1e370:	mov	w2, #0x0                   	// #0
   1e374:	mov	x0, x19
   1e378:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e37c:	add	x1, x1, #0x178
   1e380:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1e384:	ldr	x1, [x20, #16]
   1e388:	mov	x23, x0
   1e38c:	ldr	x2, [x21, #16]
   1e390:	lsl	x2, x2, #3
   1e394:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1e398:	ldr	x1, [x21, #8]
   1e39c:	ldr	x0, [x20, #16]
   1e3a0:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1e3a4:	ldr	x3, [x21, #16]
   1e3a8:	str	x23, [x20, #16]
   1e3ac:	str	x19, [x21, #8]
   1e3b0:	add	x19, x3, #0x1
   1e3b4:	b	1e290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d0>
   1e3b8:	ldr	w2, [sp, #80]
   1e3bc:	mov	x1, x19
   1e3c0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e3c4:	add	x0, x0, #0xc80
   1e3c8:	bl	1a328 <OnPrint@@Base+0x398>
   1e3cc:	ldp	x23, x24, [sp, #32]
   1e3d0:	b	1e18c <__sanitizer_get_module_and_offset_for_pc@@Base+0x18cc>
   1e3d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1e3d8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e3dc:	add	x2, x2, #0x428
   1e3e0:	add	x0, x0, #0x1a8
   1e3e4:	mov	w1, #0x1be                 	// #446
   1e3e8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e3ec:	ldr	x25, [x25, #3896]
   1e3f0:	ldr	w0, [x25]
   1e3f4:	cbnz	w0, 1e424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b64>
   1e3f8:	mov	w1, w19
   1e3fc:	mov	x3, #0x0                   	// #0
   1e400:	mov	x2, #0x0                   	// #0
   1e404:	mov	w0, #0x11                  	// #17
   1e408:	bl	15b38 <__sanitizer_set_report_fd@@Base+0x2c18>
   1e40c:	ldp	x23, x24, [sp, #32]
   1e410:	ldp	x25, x26, [sp, #48]
   1e414:	b	1e18c <__sanitizer_get_module_and_offset_for_pc@@Base+0x18cc>
   1e418:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1e41c:	str	x0, [x23]
   1e420:	b	1e358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a98>
   1e424:	ldr	w2, [sp, #88]
   1e428:	mov	x1, x19
   1e42c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e430:	add	x0, x0, #0xcd0
   1e434:	bl	1a328 <OnPrint@@Base+0x398>
   1e438:	b	1e3f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b38>
   1e43c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1e440:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e444:	add	x2, x2, #0x4a0
   1e448:	add	x0, x0, #0x1a8
   1e44c:	mov	w1, #0x1fd                 	// #509
   1e450:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e454:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e458:	add	x0, x0, #0x160
   1e45c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1e460:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1e464:	mov	x4, x1
   1e468:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1e46c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e470:	mov	x3, x19
   1e474:	add	x2, x2, #0x480
   1e478:	add	x0, x0, #0x1a8
   1e47c:	mov	w1, #0x17c                 	// #380
   1e480:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e484:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1e488:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e48c:	mov	x3, x19
   1e490:	add	x2, x2, #0x458
   1e494:	add	x0, x0, #0x1a8
   1e498:	mov	w1, #0x17b                 	// #379
   1e49c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e4a0:	stp	x19, x20, [sp, #-96]!
   1e4a4:	stp	x21, x22, [sp, #16]
   1e4a8:	mov	x21, x0
   1e4ac:	ldr	x0, [x0, #32]
   1e4b0:	str	x30, [sp, #64]
   1e4b4:	cbz	x0, 1e580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cc0>
   1e4b8:	mov	x20, #0x0                   	// #0
   1e4bc:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1e4c0:	stp	x23, x24, [sp, #32]
   1e4c4:	add	x24, x21, #0x8
   1e4c8:	add	x23, sp, #0x5c
   1e4cc:	stp	x25, x26, [sp, #48]
   1e4d0:	adrp	x26, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e4d4:	adrp	x25, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e4d8:	add	x26, x26, #0xd28
   1e4dc:	add	x25, x25, #0xd08
   1e4e0:	b	1e514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c54>
   1e4e4:	ldr	x2, [x22, #3896]
   1e4e8:	mov	w1, w19
   1e4ec:	mov	x0, x25
   1e4f0:	ldr	w2, [x2]
   1e4f4:	sxtw	x2, w2
   1e4f8:	cmp	x2, #0x1
   1e4fc:	b.ls	1e504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c44>  // b.plast
   1e500:	bl	1a328 <OnPrint@@Base+0x398>
   1e504:	ldr	x1, [x21, #32]
   1e508:	add	x20, x20, #0x1
   1e50c:	cmp	x1, x20
   1e510:	b.ls	1e578 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cb8>  // b.plast
   1e514:	mov	x1, x20
   1e518:	mov	x0, x24
   1e51c:	bl	1e030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   1e520:	mov	x19, x0
   1e524:	mov	x3, #0x0                   	// #0
   1e528:	mov	x2, #0x0                   	// #0
   1e52c:	mov	w1, w19
   1e530:	mov	w0, #0x11                  	// #17
   1e534:	bl	15b38 <__sanitizer_set_report_fd@@Base+0x2c18>
   1e538:	mov	x1, x23
   1e53c:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1e540:	tst	w0, #0xff
   1e544:	b.eq	1e4e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c24>  // b.none
   1e548:	ldr	x0, [x22, #3896]
   1e54c:	ldr	w0, [x0]
   1e550:	cbz	w0, 1e504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c44>
   1e554:	ldr	w2, [sp, #92]
   1e558:	mov	w1, w19
   1e55c:	mov	x0, x26
   1e560:	add	x20, x20, #0x1
   1e564:	bl	1a328 <OnPrint@@Base+0x398>
   1e568:	ldr	x1, [x21, #32]
   1e56c:	cmp	x1, x20
   1e570:	b.hi	1e514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c54>  // b.pmore
   1e574:	nop
   1e578:	ldp	x23, x24, [sp, #32]
   1e57c:	ldp	x25, x26, [sp, #48]
   1e580:	ldp	x21, x22, [sp, #16]
   1e584:	ldr	x30, [sp, #64]
   1e588:	ldp	x19, x20, [sp], #96
   1e58c:	ret
   1e590:	stp	x19, x20, [sp, #-32]!
   1e594:	mov	x20, x0
   1e598:	stp	x21, x30, [sp, #16]
   1e59c:	add	x21, x0, #0x8
   1e5a0:	ldr	x0, [x0, #32]
   1e5a4:	cbz	x0, 1e5e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d20>
   1e5a8:	mov	x19, #0x0                   	// #0
   1e5ac:	nop
   1e5b0:	mov	x1, x19
   1e5b4:	mov	x0, x21
   1e5b8:	bl	1e030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   1e5bc:	mov	w1, w0
   1e5c0:	mov	x3, #0x0                   	// #0
   1e5c4:	mov	x2, #0x0                   	// #0
   1e5c8:	mov	w0, #0x8                   	// #8
   1e5cc:	bl	15b38 <__sanitizer_set_report_fd@@Base+0x2c18>
   1e5d0:	ldr	x1, [x20, #32]
   1e5d4:	add	x19, x19, #0x1
   1e5d8:	cmp	x1, x19
   1e5dc:	b.hi	1e5b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cf0>  // b.pmore
   1e5e0:	ldp	x21, x30, [sp, #16]
   1e5e4:	ldp	x19, x20, [sp], #32
   1e5e8:	ret
   1e5ec:	nop
   1e5f0:	stp	x19, x20, [sp, #-96]!
   1e5f4:	mov	w20, w0
   1e5f8:	add	x19, sp, #0x28
   1e5fc:	stp	x21, x30, [sp, #16]
   1e600:	mov	x0, x19
   1e604:	stp	x1, x2, [sp, #40]
   1e608:	bl	18730 <__sanitizer_set_report_fd@@Base+0x5810>
   1e60c:	mov	x1, x0
   1e610:	mov	x0, x19
   1e614:	str	x1, [sp, #56]
   1e618:	adrp	x21, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1e61c:	bl	18740 <__sanitizer_set_report_fd@@Base+0x5820>
   1e620:	mov	w1, w0
   1e624:	mov	x0, x19
   1e628:	strb	w1, [sp, #88]
   1e62c:	bl	16bb8 <__sanitizer_set_report_fd@@Base+0x3c98>
   1e630:	mov	w1, w0
   1e634:	mov	x0, x19
   1e638:	str	w1, [sp, #92]
   1e63c:	bl	16c08 <__sanitizer_set_report_fd@@Base+0x3ce8>
   1e640:	ldp	x2, x3, [sp, #56]
   1e644:	mov	w1, w20
   1e648:	ldr	x4, [sp, #72]
   1e64c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e650:	add	x0, x0, #0xd58
   1e654:	bl	1a2a0 <OnPrint@@Base+0x310>
   1e658:	ldr	x19, [x21, #656]
   1e65c:	cbz	x19, 1e694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dd4>
   1e660:	mov	x0, x19
   1e664:	cmp	w20, #0x6
   1e668:	b.eq	1e6a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1de4>  // b.none
   1e66c:	bl	1e4a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be0>
   1e670:	adrp	x0, 1e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1740>
   1e674:	add	x0, x0, #0x6c0
   1e678:	bl	22980 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60c0>
   1e67c:	tst	w0, #0xff
   1e680:	b.eq	1e6ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dec>  // b.none
   1e684:	ldr	x0, [x19]
   1e688:	mov	x1, #0x1                   	// #1
   1e68c:	str	xzr, [x21, #656]
   1e690:	str	x1, [x0, #104]
   1e694:	cmp	w20, #0x6
   1e698:	cset	w0, ne  // ne = any
   1e69c:	add	w0, w0, #0x1
   1e6a0:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x27b0>
   1e6a4:	bl	1e590 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cd0>
   1e6a8:	b	1e670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db0>
   1e6ac:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1e6b0:	add	x0, x0, #0xd90
   1e6b4:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1e6b8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1e6bc:	nop
   1e6c0:	stp	x19, x20, [sp, #-32]!
   1e6c4:	adrp	x19, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1e6c8:	ldr	x20, [x19, #656]
   1e6cc:	str	x30, [sp, #16]
   1e6d0:	cbz	x20, 1e6ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e2c>
   1e6d4:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x2c48>
   1e6d8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1e6dc:	ldr	x1, [x1, #3848]
   1e6e0:	ldr	x1, [x1]
   1e6e4:	cmp	x0, x1
   1e6e8:	b.eq	1e6f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e38>  // b.none
   1e6ec:	ldr	x30, [sp, #16]
   1e6f0:	ldp	x19, x20, [sp], #32
   1e6f4:	ret
   1e6f8:	mov	x0, x20
   1e6fc:	bl	1e590 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cd0>
   1e700:	str	xzr, [x19, #656]
   1e704:	ldr	x30, [sp, #16]
   1e708:	ldp	x19, x20, [sp], #32
   1e70c:	ret
   1e710:	stp	x19, x20, [sp, #-128]!
   1e714:	stp	x21, x22, [sp, #16]
   1e718:	mov	x21, x0
   1e71c:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1e720:	stp	x23, x24, [sp, #32]
   1e724:	add	x23, sp, #0x60
   1e728:	ldr	w1, [x21, #40]
   1e72c:	mov	x0, x23
   1e730:	stp	x25, x30, [sp, #48]
   1e734:	bl	15db0 <__sanitizer_set_report_fd@@Base+0x2e90>
   1e738:	stp	xzr, xzr, [sp, #72]
   1e73c:	ldr	x19, [x22, #4016]
   1e740:	str	xzr, [sp, #88]
   1e744:	ldr	x0, [x19]
   1e748:	cbz	x0, 1e8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x203c>
   1e74c:	sub	x1, x0, #0x1
   1e750:	tst	x1, x0
   1e754:	b.ne	1e908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2048>  // b.any
   1e758:	add	x19, x0, #0x7
   1e75c:	neg	x0, x0
   1e760:	and	x19, x19, x0
   1e764:	mov	w2, #0x0                   	// #0
   1e768:	mov	x0, x19
   1e76c:	adrp	x24, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e770:	add	x1, x24, #0x178
   1e774:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1e778:	ldr	x1, [sp, #72]
   1e77c:	mov	x20, x0
   1e780:	ldr	x2, [sp, #88]
   1e784:	lsl	x2, x2, #3
   1e788:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1e78c:	ldp	x0, x1, [sp, #72]
   1e790:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1e794:	stp	x20, x19, [sp, #72]
   1e798:	cmp	x19, #0x3ff
   1e79c:	b.ls	1e898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fd8>  // b.plast
   1e7a0:	add	x25, sp, #0x48
   1e7a4:	mov	w24, #0x0                   	// #0
   1e7a8:	mov	x1, x25
   1e7ac:	mov	x0, x23
   1e7b0:	bl	161c0 <__sanitizer_set_report_fd@@Base+0x32a0>
   1e7b4:	cbz	w0, 1e85c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f9c>
   1e7b8:	cmp	w0, #0x1
   1e7bc:	b.ne	1e824 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f64>  // b.any
   1e7c0:	ldr	x19, [sp, #72]
   1e7c4:	mov	w20, w0
   1e7c8:	ldr	x22, [sp, #88]
   1e7cc:	add	x22, x19, x22, lsl #3
   1e7d0:	cmp	x22, x19
   1e7d4:	b.eq	1e7f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f34>  // b.none
   1e7d8:	ldr	x1, [x19], #8
   1e7dc:	mov	x0, x21
   1e7e0:	bl	1e148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1888>
   1e7e4:	ands	w0, w0, #0xff
   1e7e8:	csel	w20, w20, w0, eq  // eq = none
   1e7ec:	cmp	x22, x19
   1e7f0:	b.ne	1e7d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f18>  // b.any
   1e7f4:	add	w24, w24, #0x1
   1e7f8:	eor	w20, w20, #0x1
   1e7fc:	cmp	w24, #0x1d
   1e800:	cset	w0, gt
   1e804:	orr	w20, w0, w20
   1e808:	tst	w20, #0xff
   1e80c:	b.eq	1e7a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ee8>  // b.none
   1e810:	ldr	x19, [sp, #72]
   1e814:	ldr	x0, [x21, #32]
   1e818:	cmp	x0, #0x0
   1e81c:	cset	w20, ne  // ne = any
   1e820:	b	1e86c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fac>
   1e824:	ldr	x19, [sp, #72]
   1e828:	ldr	x22, [sp, #88]
   1e82c:	add	x22, x19, x22, lsl #3
   1e830:	cmp	x19, x22
   1e834:	b.eq	1e814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f54>  // b.none
   1e838:	ldr	x1, [x19], #8
   1e83c:	mov	x0, x21
   1e840:	mov	w20, #0x0                   	// #0
   1e844:	bl	1e148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1888>
   1e848:	ands	w0, w0, #0xff
   1e84c:	csel	w20, w20, w0, eq  // eq = none
   1e850:	cmp	x22, x19
   1e854:	b.ne	1e7d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f18>  // b.any
   1e858:	b	1e7f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f34>
   1e85c:	mov	x0, x21
   1e860:	bl	1e4a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be0>
   1e864:	ldr	x19, [sp, #72]
   1e868:	mov	w20, #0x0                   	// #0
   1e86c:	ldr	x1, [sp, #80]
   1e870:	mov	x0, x19
   1e874:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1e878:	mov	x0, x23
   1e87c:	bl	16620 <__sanitizer_set_report_fd@@Base+0x3700>
   1e880:	mov	w0, w20
   1e884:	ldp	x21, x22, [sp, #16]
   1e888:	ldp	x23, x24, [sp, #32]
   1e88c:	ldp	x25, x30, [sp, #48]
   1e890:	ldp	x19, x20, [sp], #128
   1e894:	ret
   1e898:	ldr	x3, [sp, #88]
   1e89c:	cmp	x3, #0x80
   1e8a0:	b.hi	1e924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2064>  // b.pmore
   1e8a4:	ldr	x22, [x22, #4016]
   1e8a8:	ldr	x0, [x22]
   1e8ac:	cbz	x0, 1e918 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2058>
   1e8b0:	sub	x1, x0, #0x1
   1e8b4:	tst	x1, x0
   1e8b8:	b.ne	1e908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2048>  // b.any
   1e8bc:	add	x19, x0, #0x3ff
   1e8c0:	neg	x0, x0
   1e8c4:	and	x19, x19, x0
   1e8c8:	add	x1, x24, #0x178
   1e8cc:	mov	w2, #0x0                   	// #0
   1e8d0:	mov	x0, x19
   1e8d4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1e8d8:	mov	x20, x0
   1e8dc:	ldr	x1, [sp, #72]
   1e8e0:	ldr	x2, [sp, #88]
   1e8e4:	lsl	x2, x2, #3
   1e8e8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1e8ec:	ldp	x0, x1, [sp, #72]
   1e8f0:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1e8f4:	stp	x20, x19, [sp, #72]
   1e8f8:	b	1e7a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ee0>
   1e8fc:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1e900:	str	x0, [x19]
   1e904:	b	1e74c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e8c>
   1e908:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e90c:	add	x0, x0, #0x160
   1e910:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1e914:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1e918:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1e91c:	str	x0, [x22]
   1e920:	b	1e8b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ff0>
   1e924:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1e928:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e92c:	add	x2, x2, #0x4a0
   1e930:	add	x0, x0, #0x1a8
   1e934:	mov	x4, #0x80                  	// #128
   1e938:	mov	w1, #0x1fd                 	// #509
   1e93c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e940:	stp	x19, x20, [sp, #-320]!
   1e944:	mov	x1, #0x9                   	// #9
   1e948:	mov	x4, #0x0                   	// #0
   1e94c:	mov	x3, #0x0                   	// #0
   1e950:	mov	x2, #0x0                   	// #0
   1e954:	stp	x21, x22, [sp, #16]
   1e958:	mov	x21, x0
   1e95c:	mov	w0, #0x1                   	// #1
   1e960:	stp	x23, x24, [sp, #32]
   1e964:	stp	x25, x26, [sp, #48]
   1e968:	stp	x27, x28, [sp, #64]
   1e96c:	str	x30, [sp, #80]
   1e970:	bl	15bb8 <__sanitizer_set_report_fd@@Base+0x2c98>
   1e974:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x2c58>
   1e978:	ldr	x1, [x21, #112]
   1e97c:	cmp	x0, x1
   1e980:	b.ne	1ed3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x247c>  // b.any
   1e984:	add	x19, x21, #0x10
   1e988:	adrp	x27, 1e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1740>
   1e98c:	mov	x0, x19
   1e990:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   1e994:	mov	x0, x19
   1e998:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   1e99c:	add	x0, x27, #0x6c0
   1e9a0:	bl	22940 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6080>
   1e9a4:	tst	w0, #0xff
   1e9a8:	b.eq	1ec88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23c8>  // b.none
   1e9ac:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1e9b0:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x2c58>
   1e9b4:	adrp	x1, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   1e9b8:	add	x1, x1, #0xe38
   1e9bc:	ldr	x20, [x22, #4016]
   1e9c0:	stp	x21, x1, [sp, #120]
   1e9c4:	mov	x19, x0
   1e9c8:	stp	xzr, xzr, [sp, #136]
   1e9cc:	ldr	x1, [x20]
   1e9d0:	str	xzr, [sp, #152]
   1e9d4:	cbz	x1, 1ebb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22f0>
   1e9d8:	sub	x0, x1, #0x1
   1e9dc:	tst	x0, x1
   1e9e0:	b.ne	1ec78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23b8>  // b.any
   1e9e4:	add	x20, x1, #0x7
   1e9e8:	neg	x1, x1
   1e9ec:	and	x20, x20, x1
   1e9f0:	mov	w2, #0x0                   	// #0
   1e9f4:	mov	x0, x20
   1e9f8:	adrp	x23, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1e9fc:	add	x1, x23, #0x178
   1ea00:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1ea04:	ldr	x1, [sp, #136]
   1ea08:	mov	x24, x0
   1ea0c:	ldr	x2, [sp, #152]
   1ea10:	lsl	x2, x2, #3
   1ea14:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1ea18:	ldp	x0, x1, [sp, #136]
   1ea1c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1ea20:	stp	x24, x20, [sp, #136]
   1ea24:	lsr	x1, x20, #3
   1ea28:	cmp	x1, #0x3ff
   1ea2c:	b.ls	1ebdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x231c>  // b.plast
   1ea30:	ldr	x20, [x22, #4016]
   1ea34:	adrp	x0, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1ea38:	add	x28, sp, #0x78
   1ea3c:	str	w19, [sp, #160]
   1ea40:	str	x28, [x0, #656]
   1ea44:	ldr	x0, [x20]
   1ea48:	cbz	x0, 1ec5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x239c>
   1ea4c:	sub	x19, x0, #0x1
   1ea50:	ands	x19, x19, x0
   1ea54:	b.ne	1ec78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23b8>  // b.any
   1ea58:	neg	x20, x0
   1ea5c:	mov	x24, #0x1fff                	// #8191
   1ea60:	add	x0, x0, x24
   1ea64:	add	x1, x23, #0x178
   1ea68:	and	x20, x0, x20
   1ea6c:	mov	w2, #0x0                   	// #0
   1ea70:	mov	x0, x20
   1ea74:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1ea78:	mov	x2, #0x0                   	// #0
   1ea7c:	mov	x1, #0x0                   	// #0
   1ea80:	mov	x26, x0
   1ea84:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1ea88:	mov	x1, #0x0                   	// #0
   1ea8c:	mov	x0, #0x0                   	// #0
   1ea90:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1ea94:	cmp	x20, x24
   1ea98:	b.ls	1ec98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d8>  // b.plast
   1ea9c:	add	x23, sp, #0x60
   1eaa0:	mov	x2, #0x2000                	// #8192
   1eaa4:	mov	w1, #0x0                   	// #0
   1eaa8:	mov	x0, x26
   1eaac:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1eab0:	mov	w25, #0x4                   	// #4
   1eab4:	mov	x0, x23
   1eab8:	mov	x2, #0x18                  	// #24
   1eabc:	mov	w1, #0x0                   	// #0
   1eac0:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1eac4:	mov	x2, #0x2000                	// #8192
   1eac8:	mov	x0, x23
   1eacc:	adrp	x24, 1e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1740>
   1ead0:	adrp	x23, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ead4:	add	x22, sp, #0xa8
   1ead8:	add	x24, x24, #0x5f0
   1eadc:	add	x23, x23, #0xed8
   1eae0:	mov	x1, #0x0                   	// #0
   1eae4:	movk	w25, #0x800, lsl #16
   1eae8:	str	x26, [sp, #96]
   1eaec:	str	x2, [sp, #112]
   1eaf0:	bl	15bc8 <__sanitizer_set_report_fd@@Base+0x2ca8>
   1eaf4:	nop
   1eaf8:	mov	x2, #0x98                  	// #152
   1eafc:	mov	w1, #0x0                   	// #0
   1eb00:	mov	x0, x22
   1eb04:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1eb08:	ldr	w0, [x23, x19, lsl #2]
   1eb0c:	mov	x1, x22
   1eb10:	add	x19, x19, #0x1
   1eb14:	mov	x2, #0x0                   	// #0
   1eb18:	str	x24, [sp, #168]
   1eb1c:	str	w25, [sp, #304]
   1eb20:	bl	15bf0 <__sanitizer_set_report_fd@@Base+0x2cd0>
   1eb24:	cmp	x19, #0x7
   1eb28:	b.ne	1eaf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2238>  // b.any
   1eb2c:	mov	x0, x28
   1eb30:	bl	1e710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e50>
   1eb34:	tst	w0, #0xff
   1eb38:	b.ne	1ebc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2300>  // b.any
   1eb3c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1eb40:	mov	w19, #0x3                   	// #3
   1eb44:	ldr	x0, [x0, #3896]
   1eb48:	ldr	w0, [x0]
   1eb4c:	cbnz	w0, 1ec68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23a8>
   1eb50:	add	x0, x27, #0x6c0
   1eb54:	bl	22980 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60c0>
   1eb58:	tst	w0, #0xff
   1eb5c:	b.eq	1ed10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2450>  // b.none
   1eb60:	mov	x0, #0x1                   	// #1
   1eb64:	str	x0, [x21, #104]
   1eb68:	adrp	x0, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1eb6c:	mov	x1, x20
   1eb70:	str	xzr, [x0, #656]
   1eb74:	mov	x0, x26
   1eb78:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1eb7c:	adrp	x1, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   1eb80:	add	x2, x1, #0xe38
   1eb84:	ldp	x0, x1, [sp, #136]
   1eb88:	str	x2, [sp, #128]
   1eb8c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1eb90:	mov	w0, w19
   1eb94:	ldp	x21, x22, [sp, #16]
   1eb98:	ldp	x23, x24, [sp, #32]
   1eb9c:	ldp	x25, x26, [sp, #48]
   1eba0:	ldp	x27, x28, [sp, #64]
   1eba4:	ldr	x30, [sp, #80]
   1eba8:	ldp	x19, x20, [sp], #320
   1ebac:	ret
   1ebb0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1ebb4:	mov	x1, x0
   1ebb8:	str	x0, [x20]
   1ebbc:	b	1e9d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2118>
   1ebc0:	ldp	x2, x1, [x21]
   1ebc4:	add	x0, x28, #0x8
   1ebc8:	mov	w19, #0x0                   	// #0
   1ebcc:	blr	x2
   1ebd0:	mov	x0, x28
   1ebd4:	bl	1e4a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be0>
   1ebd8:	b	1eb50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2290>
   1ebdc:	ldr	x3, [sp, #152]
   1ebe0:	cmp	x3, #0x400
   1ebe4:	b.hi	1ed20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2460>  // b.pmore
   1ebe8:	ldr	x20, [x22, #4016]
   1ebec:	ldr	x0, [x20]
   1ebf0:	cbz	x0, 1ecf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2438>
   1ebf4:	sub	x1, x0, #0x1
   1ebf8:	tst	x1, x0
   1ebfc:	b.ne	1ec78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23b8>  // b.any
   1ec00:	mov	x2, #0x1fff                	// #8191
   1ec04:	add	x20, x0, x2
   1ec08:	neg	x0, x0
   1ec0c:	add	x1, x23, #0x178
   1ec10:	and	x20, x20, x0
   1ec14:	mov	w2, #0x0                   	// #0
   1ec18:	mov	x0, x20
   1ec1c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1ec20:	ldr	x1, [sp, #136]
   1ec24:	mov	x24, x0
   1ec28:	ldr	x2, [sp, #152]
   1ec2c:	add	x28, sp, #0x78
   1ec30:	lsl	x2, x2, #3
   1ec34:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1ec38:	ldp	x0, x1, [sp, #136]
   1ec3c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1ec40:	stp	x24, x20, [sp, #136]
   1ec44:	adrp	x0, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1ec48:	ldr	x20, [x22, #4016]
   1ec4c:	str	x28, [x0, #656]
   1ec50:	str	w19, [sp, #160]
   1ec54:	ldr	x0, [x20]
   1ec58:	cbnz	x0, 1ea4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x218c>
   1ec5c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1ec60:	str	x0, [x20]
   1ec64:	b	1ea4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x218c>
   1ec68:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ec6c:	add	x0, x0, #0xde8
   1ec70:	bl	1a328 <OnPrint@@Base+0x398>
   1ec74:	b	1eb50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2290>
   1ec78:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1ec7c:	add	x0, x0, #0x160
   1ec80:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1ec84:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1ec88:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ec8c:	add	x0, x0, #0xdc0
   1ec90:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1ec94:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1ec98:	ldr	x22, [x22, #4016]
   1ec9c:	ldr	x0, [x22]
   1eca0:	cbz	x0, 1ed04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2444>
   1eca4:	sub	x1, x0, #0x1
   1eca8:	tst	x1, x0
   1ecac:	b.ne	1ec78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23b8>  // b.any
   1ecb0:	mov	x1, #0x1fff                	// #8191
   1ecb4:	add	x22, x0, x1
   1ecb8:	neg	x0, x0
   1ecbc:	add	x1, x23, #0x178
   1ecc0:	and	x22, x22, x0
   1ecc4:	mov	w2, #0x0                   	// #0
   1ecc8:	mov	x0, x22
   1eccc:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1ecd0:	mov	x2, #0x0                   	// #0
   1ecd4:	mov	x23, x0
   1ecd8:	mov	x1, x26
   1ecdc:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1ece0:	mov	x1, x20
   1ece4:	mov	x0, x26
   1ece8:	mov	x20, x22
   1ecec:	mov	x26, x23
   1ecf0:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1ecf4:	b	1ea9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x21dc>
   1ecf8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1ecfc:	str	x0, [x20]
   1ed00:	b	1ebf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2334>
   1ed04:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1ed08:	str	x0, [x22]
   1ed0c:	b	1eca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23e4>
   1ed10:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1ed14:	add	x0, x0, #0xd90
   1ed18:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1ed1c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1ed20:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1ed24:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1ed28:	add	x2, x2, #0x4a0
   1ed2c:	add	x0, x0, #0x1a8
   1ed30:	mov	x4, #0x400                 	// #1024
   1ed34:	mov	w1, #0x1fd                 	// #509
   1ed38:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1ed3c:	mov	w0, #0x4                   	// #4
   1ed40:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x27b0>
   1ed44:	nop
   1ed48:	stp	x19, x20, [sp, #-208]!
   1ed4c:	mov	x4, #0x0                   	// #0
   1ed50:	mov	x20, x0
   1ed54:	mov	x19, x1
   1ed58:	mov	x3, #0x0                   	// #0
   1ed5c:	mov	x2, #0x0                   	// #0
   1ed60:	mov	x1, #0x0                   	// #0
   1ed64:	mov	w0, #0x3                   	// #3
   1ed68:	stp	x21, x22, [sp, #16]
   1ed6c:	stp	x23, x24, [sp, #32]
   1ed70:	stp	x25, x26, [sp, #48]
   1ed74:	str	x30, [sp, #64]
   1ed78:	bl	15bb8 <__sanitizer_set_report_fd@@Base+0x2c98>
   1ed7c:	mov	x22, x0
   1ed80:	cbz	w0, 1eeec <__sanitizer_get_module_and_offset_for_pc@@Base+0x262c>
   1ed84:	add	x24, sp, #0x58
   1ed88:	add	x0, x24, #0x10
   1ed8c:	bl	159f0 <__sanitizer_set_report_fd@@Base+0x2ad0>
   1ed90:	stp	x20, x19, [sp, #88]
   1ed94:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1ed98:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x2c48>
   1ed9c:	str	xzr, [sp, #192]
   1eda0:	ldr	x20, [x20, #4016]
   1eda4:	str	x0, [sp, #200]
   1eda8:	ldr	x19, [x20]
   1edac:	cbz	x19, 1eedc <__sanitizer_get_module_and_offset_for_pc@@Base+0x261c>
   1edb0:	mov	w2, #0x0                   	// #0
   1edb4:	add	x25, x19, #0x200, lsl #12
   1edb8:	mov	x0, x25
   1edbc:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1edc0:	add	x1, x1, #0xe08
   1edc4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1edc8:	mov	x1, x19
   1edcc:	mov	x23, x0
   1edd0:	bl	17fc0 <__sanitizer_set_report_fd@@Base+0x50a0>
   1edd4:	tst	w0, #0xff
   1edd8:	b.eq	1f008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2748>  // b.none
   1eddc:	add	x0, x24, #0x10
   1ede0:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   1ede4:	adrp	x1, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1ede8:	add	x1, x1, #0x290
   1edec:	add	x0, x1, #0x8
   1edf0:	mov	x26, x1
   1edf4:	mov	x20, x0
   1edf8:	adrp	x21, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1edfc:	bl	15cf8 <__sanitizer_set_report_fd@@Base+0x2dd8>
   1ee00:	add	x21, x21, #0xed8
   1ee04:	mov	w1, #0x6                   	// #6
   1ee08:	mov	x19, #0x0                   	// #0
   1ee0c:	b	1ee14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2554>
   1ee10:	ldr	w1, [x21, x19, lsl #2]
   1ee14:	add	x19, x19, #0x1
   1ee18:	mov	x0, x20
   1ee1c:	bl	15d18 <__sanitizer_set_report_fd@@Base+0x2df8>
   1ee20:	cmp	x19, #0x7
   1ee24:	b.ne	1ee10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2550>  // b.any
   1ee28:	add	x26, x26, #0x88
   1ee2c:	mov	x1, x20
   1ee30:	mov	x2, x26
   1ee34:	mov	w0, #0x0                   	// #0
   1ee38:	bl	15ce0 <__sanitizer_set_report_fd@@Base+0x2dc0>
   1ee3c:	sxtw	x3, w0
   1ee40:	cbnz	w0, 1f028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2768>
   1ee44:	mov	x3, x24
   1ee48:	mov	w2, #0x700                 	// #1792
   1ee4c:	mov	x6, #0x0                   	// #0
   1ee50:	mov	x5, #0x0                   	// #0
   1ee54:	mov	x4, #0x0                   	// #0
   1ee58:	add	x1, x23, x25
   1ee5c:	movk	w2, #0x80, lsl #16
   1ee60:	adrp	x0, 1e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1740>
   1ee64:	add	x0, x0, #0x940
   1ee68:	bl	169b8 <__sanitizer_set_report_fd@@Base+0x3a98>
   1ee6c:	mov	x2, #0x0                   	// #0
   1ee70:	mov	x19, x0
   1ee74:	mov	x1, x26
   1ee78:	add	x20, sp, #0x54
   1ee7c:	mov	w0, #0x2                   	// #2
   1ee80:	bl	15ce0 <__sanitizer_set_report_fd@@Base+0x2dc0>
   1ee84:	mov	x0, x19
   1ee88:	mov	x1, x20
   1ee8c:	str	wzr, [sp, #84]
   1ee90:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1ee94:	tst	w0, #0xff
   1ee98:	b.eq	1ef38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2678>  // b.none
   1ee9c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1eea0:	ldr	x0, [x0, #3896]
   1eea4:	ldr	w0, [x0]
   1eea8:	cbnz	w0, 1efe4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2724>
   1eeac:	add	x0, x24, #0x10
   1eeb0:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   1eeb4:	mov	x1, x25
   1eeb8:	mov	x0, x23
   1eebc:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1eec0:	cbz	w22, 1ef08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2648>
   1eec4:	ldp	x21, x22, [sp, #16]
   1eec8:	ldp	x23, x24, [sp, #32]
   1eecc:	ldp	x25, x26, [sp, #48]
   1eed0:	ldr	x30, [sp, #64]
   1eed4:	ldp	x19, x20, [sp], #208
   1eed8:	ret
   1eedc:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1eee0:	mov	x19, x0
   1eee4:	str	x0, [x20]
   1eee8:	b	1edb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24f0>
   1eeec:	mov	x4, #0x0                   	// #0
   1eef0:	mov	x3, #0x0                   	// #0
   1eef4:	mov	x2, #0x0                   	// #0
   1eef8:	mov	x1, #0x1                   	// #1
   1eefc:	mov	w0, #0x4                   	// #4
   1ef00:	bl	15bb8 <__sanitizer_set_report_fd@@Base+0x2c98>
   1ef04:	b	1ed84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24c4>
   1ef08:	mov	x4, #0x0                   	// #0
   1ef0c:	mov	x3, #0x0                   	// #0
   1ef10:	mov	x2, #0x0                   	// #0
   1ef14:	mov	x1, #0x0                   	// #0
   1ef18:	mov	w0, #0x4                   	// #4
   1ef1c:	bl	15bb8 <__sanitizer_set_report_fd@@Base+0x2c98>
   1ef20:	ldp	x21, x22, [sp, #16]
   1ef24:	ldp	x23, x24, [sp, #32]
   1ef28:	ldp	x25, x26, [sp, #48]
   1ef2c:	ldr	x30, [sp, #64]
   1ef30:	ldp	x19, x20, [sp], #208
   1ef34:	ret
   1ef38:	adrp	x26, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1ef3c:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1ef40:	ldr	x0, [x26, #3848]
   1ef44:	str	x19, [x0]
   1ef48:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x2c48>
   1ef4c:	ldr	x5, [x21, #3840]
   1ef50:	mov	x6, x0
   1ef54:	mov	x1, x19
   1ef58:	mov	x4, #0x0                   	// #0
   1ef5c:	mov	x3, #0x0                   	// #0
   1ef60:	mov	x2, #0x0                   	// #0
   1ef64:	mov	w0, #0x6d61                	// #28001
   1ef68:	str	x6, [x5]
   1ef6c:	movk	w0, #0x5961, lsl #16
   1ef70:	bl	15bb8 <__sanitizer_set_report_fd@@Base+0x2c98>
   1ef74:	add	x0, x24, #0x10
   1ef78:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   1ef7c:	ldr	x0, [sp, #192]
   1ef80:	cbnz	x0, 1ef94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26d4>
   1ef84:	nop
   1ef88:	bl	67a0 <sched_yield@plt>
   1ef8c:	ldr	x0, [sp, #192]
   1ef90:	cbz	x0, 1ef88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26c8>
   1ef94:	mov	w2, #0x40000000            	// #1073741824
   1ef98:	mov	x1, #0x0                   	// #0
   1ef9c:	mov	w0, w19
   1efa0:	bl	15b50 <__sanitizer_set_report_fd@@Base+0x2c30>
   1efa4:	mov	x1, x20
   1efa8:	bl	154b8 <__sanitizer_set_report_fd@@Base+0x2598>
   1efac:	tst	w0, #0xff
   1efb0:	b.eq	1efd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2710>  // b.none
   1efb4:	ldr	w1, [sp, #84]
   1efb8:	cmp	w1, #0x4
   1efbc:	b.eq	1ef94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26d4>  // b.none
   1efc0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1efc4:	ldr	x0, [x0, #3896]
   1efc8:	ldr	w0, [x0]
   1efcc:	cbnz	w0, 1eff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2738>
   1efd0:	ldr	x26, [x26, #3848]
   1efd4:	ldr	x21, [x21, #3840]
   1efd8:	str	xzr, [x26]
   1efdc:	str	xzr, [x21]
   1efe0:	b	1eeb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25f4>
   1efe4:	ldr	w1, [sp, #84]
   1efe8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1efec:	add	x0, x0, #0xe70
   1eff0:	bl	1a328 <OnPrint@@Base+0x398>
   1eff4:	b	1eeac <__sanitizer_get_module_and_offset_for_pc@@Base+0x25ec>
   1eff8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1effc:	add	x0, x0, #0xea0
   1f000:	bl	1a328 <OnPrint@@Base+0x398>
   1f004:	b	1efd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2710>
   1f008:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f00c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f010:	add	x2, x2, #0xe20
   1f014:	add	x0, x0, #0xbf0
   1f018:	mov	x4, #0x0                   	// #0
   1f01c:	mov	x3, #0x0                   	// #0
   1f020:	mov	w1, #0x152                 	// #338
   1f024:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f028:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f02c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f030:	add	x2, x2, #0xe60
   1f034:	add	x0, x0, #0xbf0
   1f038:	mov	x4, #0x0                   	// #0
   1f03c:	mov	w1, #0x1ac                 	// #428
   1f040:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f044:	nop
   1f048:	ldr	x3, [x0, #24]
   1f04c:	cbz	x3, 1f07c <__sanitizer_get_module_and_offset_for_pc@@Base+0x27bc>
   1f050:	ldr	x4, [x0, #8]
   1f054:	mov	x0, #0x0                   	// #0
   1f058:	b	1f064 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a4>
   1f05c:	cmp	x0, x3
   1f060:	b.eq	1f07c <__sanitizer_get_module_and_offset_for_pc@@Base+0x27bc>  // b.none
   1f064:	ldr	x2, [x4, x0, lsl #3]
   1f068:	add	x0, x0, #0x1
   1f06c:	cmp	x2, x1
   1f070:	b.ne	1f05c <__sanitizer_get_module_and_offset_for_pc@@Base+0x279c>  // b.any
   1f074:	mov	w0, #0x1                   	// #1
   1f078:	ret
   1f07c:	mov	w0, #0x0                   	// #0
   1f080:	ret
   1f084:	nop
   1f088:	stp	x19, x20, [sp, #-64]!
   1f08c:	stp	x21, x22, [sp, #16]
   1f090:	add	x21, x0, #0x8
   1f094:	ldr	x4, [x0, #16]
   1f098:	str	x1, [sp, #56]
   1f09c:	ldr	x3, [x21, #16]
   1f0a0:	str	x30, [sp, #32]
   1f0a4:	lsr	x4, x4, #3
   1f0a8:	cmp	x3, x4
   1f0ac:	b.hi	1f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28d8>  // b.pmore
   1f0b0:	mov	x19, x0
   1f0b4:	add	x20, x3, #0x1
   1f0b8:	b.eq	1f0e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2824>  // b.none
   1f0bc:	ldr	x22, [x0, #8]
   1f0c0:	str	x20, [x21, #16]
   1f0c4:	add	x0, x22, x3, lsl #3
   1f0c8:	add	x1, sp, #0x38
   1f0cc:	mov	x2, #0x8                   	// #8
   1f0d0:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f0d4:	ldp	x21, x22, [sp, #16]
   1f0d8:	ldr	x30, [sp, #32]
   1f0dc:	ldp	x19, x20, [sp], #64
   1f0e0:	ret
   1f0e4:	tst	x3, x20
   1f0e8:	b.eq	1f124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2864>  // b.none
   1f0ec:	clz	x4, x20
   1f0f0:	mov	w0, #0x3f                  	// #63
   1f0f4:	sub	w0, w0, w4
   1f0f8:	mov	x2, #0x1                   	// #1
   1f0fc:	add	w4, w0, #0x1
   1f100:	lsl	x4, x2, x4
   1f104:	cmp	x4, x20
   1f108:	b.ls	1f1e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2924>  // b.plast
   1f10c:	lsl	x0, x2, x0
   1f110:	cmp	x20, x0
   1f114:	b.ls	1f200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2940>  // b.plast
   1f118:	cmp	x3, x4
   1f11c:	b.hi	1f1bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x28fc>  // b.pmore
   1f120:	mov	x20, x4
   1f124:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1f128:	lsl	x20, x20, #3
   1f12c:	ldr	x22, [x22, #4016]
   1f130:	ldr	x0, [x22]
   1f134:	cbz	x0, 1f1b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28f0>
   1f138:	sub	x1, x0, #0x1
   1f13c:	tst	x0, x1
   1f140:	b.ne	1f1d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2914>  // b.any
   1f144:	add	x20, x20, x1
   1f148:	neg	x0, x0
   1f14c:	and	x20, x20, x0
   1f150:	mov	w2, #0x0                   	// #0
   1f154:	mov	x0, x20
   1f158:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f15c:	add	x1, x1, #0x178
   1f160:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1f164:	ldr	x1, [x19, #8]
   1f168:	mov	x22, x0
   1f16c:	ldr	x2, [x21, #16]
   1f170:	lsl	x2, x2, #3
   1f174:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f178:	ldr	x0, [x19, #8]
   1f17c:	ldr	x1, [x21, #8]
   1f180:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1f184:	ldr	x3, [x21, #16]
   1f188:	str	x22, [x19, #8]
   1f18c:	str	x20, [x21, #8]
   1f190:	add	x20, x3, #0x1
   1f194:	b	1f0c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>
   1f198:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1f19c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f1a0:	add	x2, x2, #0x428
   1f1a4:	add	x0, x0, #0x1a8
   1f1a8:	mov	w1, #0x1be                 	// #446
   1f1ac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f1b0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1f1b4:	str	x0, [x22]
   1f1b8:	b	1f138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2878>
   1f1bc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1f1c0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f1c4:	add	x2, x2, #0x4a0
   1f1c8:	add	x0, x0, #0x1a8
   1f1cc:	mov	w1, #0x1fd                 	// #509
   1f1d0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f1d4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f1d8:	add	x0, x0, #0x160
   1f1dc:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1f1e0:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1f1e4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1f1e8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f1ec:	mov	x3, x20
   1f1f0:	add	x2, x2, #0x458
   1f1f4:	add	x0, x0, #0x1a8
   1f1f8:	mov	w1, #0x17b                 	// #379
   1f1fc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f200:	mov	x4, x0
   1f204:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1f208:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f20c:	mov	x3, x20
   1f210:	add	x2, x2, #0x480
   1f214:	add	x0, x0, #0x1a8
   1f218:	mov	w1, #0x17c                 	// #380
   1f21c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f220:	stp	x19, x20, [sp, #-48]!
   1f224:	add	x20, x0, #0x10
   1f228:	mov	x19, x0
   1f22c:	stp	x21, x22, [sp, #16]
   1f230:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1f234:	ldr	x21, [x21, #4016]
   1f238:	str	x30, [sp, #32]
   1f23c:	str	x1, [x0]
   1f240:	str	w2, [x0, #8]
   1f244:	ldr	x0, [x21]
   1f248:	stp	xzr, xzr, [x20, #8]
   1f24c:	str	xzr, [x19, #16]
   1f250:	cbz	x0, 1f2d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a14>
   1f254:	sub	x1, x0, #0x1
   1f258:	tst	x1, x0
   1f25c:	b.ne	1f2e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a20>  // b.any
   1f260:	add	x21, x0, #0x1f
   1f264:	neg	x0, x0
   1f268:	and	x21, x21, x0
   1f26c:	mov	w2, #0x0                   	// #0
   1f270:	mov	x0, x21
   1f274:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f278:	add	x1, x1, #0x178
   1f27c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1f280:	ldr	x1, [x19, #16]
   1f284:	mov	x22, x0
   1f288:	ldr	x2, [x20, #16]
   1f28c:	lsl	x2, x2, #5
   1f290:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f294:	ldr	x1, [x20, #8]
   1f298:	ldr	x0, [x19, #16]
   1f29c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1f2a0:	str	x22, [x19, #16]
   1f2a4:	ldrsw	x2, [x19, #8]
   1f2a8:	mov	w0, #0x1                   	// #1
   1f2ac:	str	x21, [x20, #8]
   1f2b0:	strb	w0, [x19, #72]
   1f2b4:	cmp	x2, #0x20
   1f2b8:	b.hi	1f2f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a30>  // b.pmore
   1f2bc:	add	x0, x19, #0x28
   1f2c0:	mov	w1, #0x0                   	// #0
   1f2c4:	ldp	x21, x22, [sp, #16]
   1f2c8:	ldr	x30, [sp, #32]
   1f2cc:	ldp	x19, x20, [sp], #48
   1f2d0:	b	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1f2d4:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1f2d8:	str	x0, [x21]
   1f2dc:	b	1f254 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2994>
   1f2e0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f2e4:	add	x0, x0, #0x160
   1f2e8:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1f2ec:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1f2f0:	mov	x3, x2
   1f2f4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f2f8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f2fc:	add	x0, x0, #0xf30
   1f300:	add	x2, x2, #0xef8
   1f304:	mov	x4, #0x20                  	// #32
   1f308:	mov	w1, #0x1c                  	// #28
   1f30c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f310:	stp	x19, x20, [sp, #-112]!
   1f314:	mov	x20, x0
   1f318:	ldrb	w0, [x0, #72]
   1f31c:	str	x30, [sp, #72]
   1f320:	cbz	w0, 1f5e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d24>
   1f324:	mov	x19, x1
   1f328:	cbz	x1, 1f4dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c1c>
   1f32c:	stp	x21, x22, [sp, #16]
   1f330:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1f334:	add	x21, sp, #0x50
   1f338:	ldr	x22, [x22, #4016]
   1f33c:	stp	x23, x24, [sp, #32]
   1f340:	adrp	x23, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f344:	add	x23, x23, #0x178
   1f348:	stp	x25, x26, [sp, #48]
   1f34c:	str	x27, [sp, #64]
   1f350:	ldrb	w0, [x19]
   1f354:	cmp	w0, #0x20
   1f358:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   1f35c:	b.ne	1f370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ab0>  // b.any
   1f360:	ldrb	w0, [x19, #1]!
   1f364:	cmp	w0, #0x20
   1f368:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   1f36c:	b.eq	1f360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aa0>  // b.none
   1f370:	mov	x0, x19
   1f374:	mov	w1, #0xa                   	// #10
   1f378:	bl	14868 <__sanitizer_set_report_fd@@Base+0x1948>
   1f37c:	mov	x26, x0
   1f380:	cbz	x0, 1f4fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c3c>
   1f384:	cmp	x19, x26
   1f388:	b.eq	1f398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ad8>  // b.none
   1f38c:	ldrb	w6, [x19]
   1f390:	cmp	w6, #0x23
   1f394:	b.ne	1f3a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae8>  // b.any
   1f398:	ldrb	w0, [x26]
   1f39c:	cbz	w0, 1f4cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c0c>
   1f3a0:	add	x19, x26, #0x1
   1f3a4:	b	1f350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a90>
   1f3a8:	mov	x24, x26
   1f3ac:	nop
   1f3b0:	ldurb	w1, [x24, #-1]
   1f3b4:	cmp	w1, #0x20
   1f3b8:	and	w1, w1, #0xfffffffb
   1f3bc:	ccmp	w1, #0x9, #0x4, ne  // ne = any
   1f3c0:	b.ne	1f3d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b10>  // b.any
   1f3c4:	sub	x24, x24, #0x1
   1f3c8:	cmp	x19, x24
   1f3cc:	b.ne	1f3b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2af0>  // b.any
   1f3d0:	ldr	w7, [x20, #8]
   1f3d4:	cmp	w7, #0x0
   1f3d8:	b.le	1f5dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d1c>
   1f3dc:	ldr	x8, [x20]
   1f3e0:	mov	x5, #0x0                   	// #0
   1f3e4:	nop
   1f3e8:	ldr	x2, [x8, x5, lsl #3]
   1f3ec:	mov	w0, w5
   1f3f0:	mov	w25, w5
   1f3f4:	mov	x3, x19
   1f3f8:	ldrb	w1, [x2]
   1f3fc:	cmp	w1, w6
   1f400:	b.ne	1f418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b58>  // b.any
   1f404:	nop
   1f408:	ldrb	w1, [x2, #1]!
   1f40c:	ldrb	w4, [x3, #1]!
   1f410:	cmp	w4, w1
   1f414:	b.eq	1f408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b48>  // b.none
   1f418:	cbz	w1, 1f4e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c28>
   1f41c:	add	x5, x5, #0x1
   1f420:	add	w25, w0, #0x1
   1f424:	cmp	w7, w5
   1f428:	b.gt	1f3e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b28>
   1f42c:	cmp	w7, w25
   1f430:	b.eq	1f674 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2db4>  // b.none
   1f434:	mov	x27, x20
   1f438:	mov	x2, #0x20                  	// #32
   1f43c:	mov	w1, #0x0                   	// #0
   1f440:	mov	x0, x21
   1f444:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1f448:	sxtw	x25, w25
   1f44c:	ldr	x3, [x27], #16
   1f450:	sub	x24, x24, x19
   1f454:	mov	x2, #0x0                   	// #0
   1f458:	mov	x1, #0x0                   	// #0
   1f45c:	add	x0, x24, #0x1
   1f460:	ldr	x3, [x3, x25, lsl #3]
   1f464:	str	x3, [sp, #80]
   1f468:	bl	cb90 <__sancov_default_options@@Base+0x440>
   1f46c:	str	x0, [sp, #88]
   1f470:	mov	x1, x19
   1f474:	mov	x2, x24
   1f478:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f47c:	ldr	x0, [sp, #88]
   1f480:	strb	wzr, [x0, x24]
   1f484:	ldr	x4, [x20, #24]
   1f488:	ldr	x0, [x27, #16]
   1f48c:	lsr	x4, x4, #5
   1f490:	cmp	x0, x4
   1f494:	b.hi	1f5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cf4>  // b.pmore
   1f498:	add	x3, x0, #0x1
   1f49c:	b.eq	1f50c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c4c>  // b.none
   1f4a0:	ldr	x24, [x20, #16]
   1f4a4:	add	x25, x20, x25
   1f4a8:	str	x3, [x27, #16]
   1f4ac:	add	x0, x24, x0, lsl #5
   1f4b0:	mov	x1, x21
   1f4b4:	mov	x2, #0x20                  	// #32
   1f4b8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f4bc:	mov	w0, #0x1                   	// #1
   1f4c0:	strb	w0, [x25, #40]
   1f4c4:	ldrb	w0, [x26]
   1f4c8:	cbnz	w0, 1f3a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae0>
   1f4cc:	ldp	x21, x22, [sp, #16]
   1f4d0:	ldp	x23, x24, [sp, #32]
   1f4d4:	ldp	x25, x26, [sp, #48]
   1f4d8:	ldr	x27, [sp, #64]
   1f4dc:	ldr	x30, [sp, #72]
   1f4e0:	ldp	x19, x20, [sp], #112
   1f4e4:	ret
   1f4e8:	ldrb	w1, [x3]
   1f4ec:	cmp	w1, #0x3a
   1f4f0:	b.ne	1f41c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b5c>  // b.any
   1f4f4:	add	x19, x3, #0x1
   1f4f8:	b	1f42c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b6c>
   1f4fc:	mov	x0, x19
   1f500:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1f504:	add	x26, x19, x0
   1f508:	b	1f384 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ac4>
   1f50c:	tst	x0, x3
   1f510:	b.eq	1f54c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c8c>  // b.none
   1f514:	clz	x2, x3
   1f518:	mov	w1, #0x3f                  	// #63
   1f51c:	sub	w2, w1, w2
   1f520:	mov	x1, #0x1                   	// #1
   1f524:	add	w4, w2, #0x1
   1f528:	lsl	x4, x1, x4
   1f52c:	cmp	x4, x3
   1f530:	b.ls	1f640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>  // b.plast
   1f534:	lsl	x1, x1, x2
   1f538:	cmp	x1, x3
   1f53c:	b.cs	1f658 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d98>  // b.hs, b.nlast
   1f540:	cmp	x0, x4
   1f544:	b.hi	1f614 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d54>  // b.pmore
   1f548:	mov	x3, x4
   1f54c:	ldr	x0, [x22]
   1f550:	lsl	x19, x3, #5
   1f554:	cbz	x0, 1f5d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d10>
   1f558:	sub	x1, x0, #0x1
   1f55c:	tst	x1, x0
   1f560:	b.ne	1f630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>  // b.any
   1f564:	add	x19, x19, x1
   1f568:	neg	x0, x0
   1f56c:	and	x19, x19, x0
   1f570:	mov	x1, x23
   1f574:	mov	w2, #0x0                   	// #0
   1f578:	mov	x0, x19
   1f57c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1f580:	mov	x24, x0
   1f584:	ldr	x1, [x20, #16]
   1f588:	ldr	x2, [x27, #16]
   1f58c:	lsl	x2, x2, #5
   1f590:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f594:	ldr	x1, [x27, #8]
   1f598:	ldr	x0, [x20, #16]
   1f59c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1f5a0:	ldr	x0, [x27, #16]
   1f5a4:	str	x24, [x20, #16]
   1f5a8:	str	x19, [x27, #8]
   1f5ac:	add	x3, x0, #0x1
   1f5b0:	b	1f4a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2be4>
   1f5b4:	mov	x3, x0
   1f5b8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1f5bc:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f5c0:	add	x2, x2, #0x428
   1f5c4:	add	x0, x0, #0x1a8
   1f5c8:	mov	w1, #0x1be                 	// #446
   1f5cc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f5d0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1f5d4:	str	x0, [x22]
   1f5d8:	b	1f558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c98>
   1f5dc:	mov	w25, #0x0                   	// #0
   1f5e0:	b	1f42c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b6c>
   1f5e4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f5e8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f5ec:	add	x2, x2, #0xf78
   1f5f0:	add	x0, x0, #0xf30
   1f5f4:	mov	x4, #0x0                   	// #0
   1f5f8:	mov	x3, #0x0                   	// #0
   1f5fc:	mov	w1, #0x6a                  	// #106
   1f600:	stp	x21, x22, [sp, #16]
   1f604:	stp	x23, x24, [sp, #32]
   1f608:	stp	x25, x26, [sp, #48]
   1f60c:	str	x27, [sp, #64]
   1f610:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f614:	mov	x3, x0
   1f618:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1f61c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f620:	add	x2, x2, #0x4a0
   1f624:	add	x0, x0, #0x1a8
   1f628:	mov	w1, #0x1fd                 	// #509
   1f62c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f630:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f634:	add	x0, x0, #0x160
   1f638:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1f63c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1f640:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1f644:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f648:	add	x2, x2, #0x458
   1f64c:	add	x0, x0, #0x1a8
   1f650:	mov	w1, #0x17b                 	// #379
   1f654:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f658:	mov	x4, x1
   1f65c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1f660:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f664:	add	x2, x2, #0x480
   1f668:	add	x0, x0, #0x1a8
   1f66c:	mov	w1, #0x17c                 	// #380
   1f670:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f674:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1f678:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f67c:	add	x0, x0, #0xf90
   1f680:	ldr	x1, [x1, #4024]
   1f684:	ldr	x1, [x1]
   1f688:	bl	1a2a0 <OnPrint@@Base+0x310>
   1f68c:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1f690:	stp	x19, x20, [sp, #-112]!
   1f694:	mov	x19, x1
   1f698:	str	x30, [sp, #64]
   1f69c:	ldrb	w1, [x1]
   1f6a0:	cbnz	w1, 1f6b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2df0>
   1f6a4:	ldr	x30, [sp, #64]
   1f6a8:	ldp	x19, x20, [sp], #112
   1f6ac:	ret
   1f6b0:	stp	x21, x22, [sp, #16]
   1f6b4:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1f6b8:	mov	x21, x0
   1f6bc:	ldr	x20, [x22, #4016]
   1f6c0:	stp	x23, x24, [sp, #32]
   1f6c4:	ldr	x2, [x20]
   1f6c8:	cbz	x2, 1f7c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f00>
   1f6cc:	sub	x0, x2, #0x1
   1f6d0:	tst	x0, x2
   1f6d4:	b.ne	1f8d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3018>  // b.any
   1f6d8:	add	x24, x2, #0xfff
   1f6dc:	neg	x2, x2
   1f6e0:	and	x24, x24, x2
   1f6e4:	adrp	x23, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f6e8:	mov	w2, #0x0                   	// #0
   1f6ec:	add	x1, x23, #0x178
   1f6f0:	mov	x0, x24
   1f6f4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1f6f8:	mov	x2, #0x0                   	// #0
   1f6fc:	mov	x1, #0x0                   	// #0
   1f700:	mov	x20, x0
   1f704:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f708:	mov	x1, #0x0                   	// #0
   1f70c:	mov	x0, #0x0                   	// #0
   1f710:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1f714:	cmp	x24, #0xfff
   1f718:	b.ls	1f874 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fb4>  // b.plast
   1f71c:	mov	x2, #0x1000                	// #4096
   1f720:	mov	w1, #0x0                   	// #0
   1f724:	mov	x0, x20
   1f728:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1f72c:	strb	wzr, [x20]
   1f730:	mov	x0, x19
   1f734:	bl	15730 <__sanitizer_set_report_fd@@Base+0x2810>
   1f738:	tst	w0, #0xff
   1f73c:	b.eq	1f7d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f10>  // b.none
   1f740:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1f744:	ldr	x0, [x0, #3896]
   1f748:	ldr	w0, [x0]
   1f74c:	cbnz	w0, 1f7a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ee0>
   1f750:	add	x3, sp, #0x68
   1f754:	add	x2, sp, #0x60
   1f758:	add	x1, sp, #0x58
   1f75c:	mov	x0, x19
   1f760:	mov	x5, #0x0                   	// #0
   1f764:	mov	x4, #0x4000000             	// #67108864
   1f768:	bl	127a0 <__sanitizer_cov_dump@@Base+0x2190>
   1f76c:	tst	w0, #0xff
   1f770:	b.eq	1f9b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30f0>  // b.none
   1f774:	ldr	x1, [sp, #88]
   1f778:	mov	x0, x21
   1f77c:	bl	1f310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a50>
   1f780:	mov	x1, x24
   1f784:	mov	x0, x20
   1f788:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1f78c:	ldp	x21, x22, [sp, #16]
   1f790:	ldp	x23, x24, [sp, #32]
   1f794:	ldr	x30, [sp, #64]
   1f798:	ldp	x19, x20, [sp], #112
   1f79c:	ret
   1f7a0:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1f7a4:	mov	x2, x19
   1f7a8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f7ac:	add	x0, x0, #0xfb8
   1f7b0:	ldr	x1, [x1, #4024]
   1f7b4:	ldr	x1, [x1]
   1f7b8:	bl	1a2a0 <OnPrint@@Base+0x310>
   1f7bc:	b	1f750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e90>
   1f7c0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1f7c4:	mov	x2, x0
   1f7c8:	str	x0, [x20]
   1f7cc:	b	1f6cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e0c>
   1f7d0:	mov	x0, x19
   1f7d4:	bl	184c0 <__sanitizer_set_report_fd@@Base+0x55a0>
   1f7d8:	tst	w0, #0xff
   1f7dc:	b.ne	1f740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e80>  // b.any
   1f7e0:	stp	x25, x26, [sp, #48]
   1f7e4:	ldr	x25, [x22, #4016]
   1f7e8:	ldr	x0, [x25]
   1f7ec:	cbz	x0, 1f8f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3038>
   1f7f0:	sub	x1, x0, #0x1
   1f7f4:	tst	x1, x0
   1f7f8:	b.ne	1f8dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x301c>  // b.any
   1f7fc:	add	x26, x0, #0xfff
   1f800:	neg	x0, x0
   1f804:	and	x26, x26, x0
   1f808:	add	x1, x23, #0x178
   1f80c:	mov	w2, #0x0                   	// #0
   1f810:	mov	x0, x26
   1f814:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1f818:	mov	x25, x0
   1f81c:	mov	x2, #0x0                   	// #0
   1f820:	mov	x1, #0x0                   	// #0
   1f824:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f828:	mov	x1, #0x0                   	// #0
   1f82c:	mov	x0, #0x0                   	// #0
   1f830:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1f834:	cmp	x26, #0xfff
   1f838:	b.ls	1f948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3088>  // b.plast
   1f83c:	mov	w1, #0x0                   	// #0
   1f840:	mov	x0, x25
   1f844:	mov	x2, #0x1000                	// #4096
   1f848:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1f84c:	strb	wzr, [x25]
   1f850:	mov	x0, x25
   1f854:	mov	x1, #0x1000                	// #4096
   1f858:	bl	f7b8 <__sancov_default_options@@Base+0x3068>
   1f85c:	cbnz	x0, 1f904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3044>
   1f860:	mov	x1, x26
   1f864:	mov	x0, x25
   1f868:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1f86c:	ldp	x25, x26, [sp, #48]
   1f870:	b	1f740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e80>
   1f874:	stp	x25, x26, [sp, #48]
   1f878:	ldr	x25, [x22, #4016]
   1f87c:	ldr	x0, [x25]
   1f880:	cbz	x0, 1f8ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x302c>
   1f884:	sub	x1, x0, #0x1
   1f888:	tst	x1, x0
   1f88c:	b.ne	1f8dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x301c>  // b.any
   1f890:	add	x25, x0, #0xfff
   1f894:	neg	x0, x0
   1f898:	and	x25, x25, x0
   1f89c:	add	x1, x23, #0x178
   1f8a0:	mov	x0, x25
   1f8a4:	mov	w2, #0x0                   	// #0
   1f8a8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1f8ac:	mov	x26, x0
   1f8b0:	mov	x2, #0x0                   	// #0
   1f8b4:	mov	x1, x20
   1f8b8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f8bc:	mov	x1, x24
   1f8c0:	mov	x0, x20
   1f8c4:	mov	x24, x25
   1f8c8:	mov	x20, x26
   1f8cc:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1f8d0:	ldp	x25, x26, [sp, #48]
   1f8d4:	b	1f71c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e5c>
   1f8d8:	stp	x25, x26, [sp, #48]
   1f8dc:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1f8e0:	add	x0, x0, #0x160
   1f8e4:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1f8e8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1f8ec:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1f8f0:	str	x0, [x25]
   1f8f4:	b	1f884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fc4>
   1f8f8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1f8fc:	str	x0, [x25]
   1f900:	b	1f7f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f30>
   1f904:	mov	x0, x25
   1f908:	bl	f258 <__sancov_default_options@@Base+0x2b08>
   1f90c:	sub	x2, x0, x25
   1f910:	mov	x22, #0xfff                 	// #4095
   1f914:	cmp	x2, x22
   1f918:	mov	x1, x25
   1f91c:	csel	x2, x2, x22, ls  // ls = plast
   1f920:	mov	x0, x20
   1f924:	bl	149c8 <__sanitizer_set_report_fd@@Base+0x1aa8>
   1f928:	mov	x0, x20
   1f92c:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   1f930:	mov	x1, x19
   1f934:	sub	x2, x22, x0
   1f938:	mov	x19, x20
   1f93c:	mov	x0, x20
   1f940:	bl	149c8 <__sanitizer_set_report_fd@@Base+0x1aa8>
   1f944:	b	1f860 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fa0>
   1f948:	ldr	x22, [x22, #4016]
   1f94c:	ldr	x0, [x22]
   1f950:	cbz	x0, 1f9a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30e4>
   1f954:	sub	x1, x0, #0x1
   1f958:	tst	x1, x0
   1f95c:	b.ne	1f8dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x301c>  // b.any
   1f960:	add	x22, x0, #0xfff
   1f964:	neg	x0, x0
   1f968:	and	x22, x22, x0
   1f96c:	add	x1, x23, #0x178
   1f970:	mov	x0, x22
   1f974:	mov	w2, #0x0                   	// #0
   1f978:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1f97c:	mov	x23, x0
   1f980:	mov	x2, #0x0                   	// #0
   1f984:	mov	x1, x25
   1f988:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1f98c:	mov	x1, x26
   1f990:	mov	x0, x25
   1f994:	mov	x26, x22
   1f998:	mov	x25, x23
   1f99c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1f9a0:	b	1f83c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f7c>
   1f9a4:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1f9a8:	str	x0, [x22]
   1f9ac:	b	1f954 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3094>
   1f9b0:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1f9b4:	mov	x2, x19
   1f9b8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1f9bc:	add	x0, x0, #0xfe0
   1f9c0:	ldr	x1, [x1, #4024]
   1f9c4:	stp	x25, x26, [sp, #48]
   1f9c8:	ldr	x1, [x1]
   1f9cc:	bl	1a2a0 <OnPrint@@Base+0x310>
   1f9d0:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1f9d4:	nop
   1f9d8:	ldr	x0, [x0, #32]
   1f9dc:	ret
   1f9e0:	stp	x19, x20, [sp, #-48]!
   1f9e4:	mov	x20, x0
   1f9e8:	ldr	w0, [x0, #8]
   1f9ec:	str	x30, [sp, #32]
   1f9f0:	cmp	w0, #0x0
   1f9f4:	b.le	1fa4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x318c>
   1f9f8:	mov	x19, #0x0                   	// #0
   1f9fc:	stp	x21, x22, [sp, #16]
   1fa00:	mov	x21, x1
   1fa04:	b	1fa14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3154>
   1fa08:	ldr	w0, [x20, #8]
   1fa0c:	cmp	w0, w19
   1fa10:	b.le	1fa48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3188>
   1fa14:	ldr	x2, [x20]
   1fa18:	mov	w22, w19
   1fa1c:	mov	x0, x21
   1fa20:	ldr	x1, [x2, x19, lsl #3]
   1fa24:	add	x19, x19, #0x1
   1fa28:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   1fa2c:	cbnz	w0, 1fa08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3148>
   1fa30:	add	x20, x20, w22, sxtw
   1fa34:	ldp	x21, x22, [sp, #16]
   1fa38:	ldrb	w0, [x20, #40]
   1fa3c:	ldr	x30, [sp, #32]
   1fa40:	ldp	x19, x20, [sp], #48
   1fa44:	ret
   1fa48:	ldp	x21, x22, [sp, #16]
   1fa4c:	mov	w0, #0x0                   	// #0
   1fa50:	ldr	x30, [sp, #32]
   1fa54:	ldp	x19, x20, [sp], #48
   1fa58:	ret
   1fa5c:	nop
   1fa60:	stp	x19, x20, [sp, #-64]!
   1fa64:	mov	x20, x0
   1fa68:	stp	x21, x22, [sp, #16]
   1fa6c:	mov	x21, x2
   1fa70:	mov	x22, x1
   1fa74:	stp	x23, x24, [sp, #32]
   1fa78:	mov	x1, x2
   1fa7c:	mov	x23, x3
   1fa80:	str	x30, [sp, #48]
   1fa84:	strb	wzr, [x0, #72]
   1fa88:	bl	1f9e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3120>
   1fa8c:	tst	w0, #0xff
   1fa90:	b.eq	1fafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x323c>  // b.none
   1fa94:	ldr	x0, [x20, #32]
   1fa98:	cbz	x0, 1fafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x323c>
   1fa9c:	mov	x19, #0x0                   	// #0
   1faa0:	b	1fab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31f0>
   1faa4:	ldr	x0, [x20, #32]
   1faa8:	cmp	x19, x0
   1faac:	b.cs	1fafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x323c>  // b.hs, b.nlast
   1fab0:	ldr	x5, [x20, #16]
   1fab4:	lsl	x4, x19, #5
   1fab8:	mov	x1, x21
   1fabc:	add	x19, x19, #0x1
   1fac0:	add	x24, x5, x4
   1fac4:	ldr	x0, [x5, x4]
   1fac8:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   1facc:	cbnz	w0, 1faa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31e4>
   1fad0:	ldr	x0, [x24, #8]
   1fad4:	mov	x1, x22
   1fad8:	bl	f5d8 <__sancov_default_options@@Base+0x2e88>
   1fadc:	ands	w0, w0, #0xff
   1fae0:	b.eq	1faa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31e4>  // b.none
   1fae4:	str	x24, [x23]
   1fae8:	ldp	x21, x22, [sp, #16]
   1faec:	ldp	x23, x24, [sp, #32]
   1faf0:	ldr	x30, [sp, #48]
   1faf4:	ldp	x19, x20, [sp], #64
   1faf8:	ret
   1fafc:	mov	w0, #0x0                   	// #0
   1fb00:	ldp	x21, x22, [sp, #16]
   1fb04:	ldp	x23, x24, [sp, #32]
   1fb08:	ldr	x30, [sp, #48]
   1fb0c:	ldp	x19, x20, [sp], #64
   1fb10:	ret
   1fb14:	nop
   1fb18:	ldr	x4, [x0, #32]
   1fb1c:	cmp	x1, x4
   1fb20:	b.cs	1fb30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3270>  // b.hs, b.nlast
   1fb24:	ldr	x0, [x0, #16]
   1fb28:	add	x0, x0, x1, lsl #5
   1fb2c:	ret
   1fb30:	str	x30, [sp, #-16]!
   1fb34:	mov	x3, x1
   1fb38:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1fb3c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   1fb40:	add	x2, x2, #0x10
   1fb44:	add	x0, x0, #0xf30
   1fb48:	mov	w1, #0x9e                  	// #158
   1fb4c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1fb50:	stp	x19, x20, [sp, #-96]!
   1fb54:	stp	x21, x22, [sp, #16]
   1fb58:	mov	x21, x1
   1fb5c:	ldr	x1, [x0, #32]
   1fb60:	str	x30, [sp, #64]
   1fb64:	cbz	x1, 1fbf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3338>
   1fb68:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   1fb6c:	mov	x20, x0
   1fb70:	mov	x19, #0x0                   	// #0
   1fb74:	stp	x23, x24, [sp, #32]
   1fb78:	adrp	x23, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1fb7c:	ldr	x22, [x22, #4016]
   1fb80:	add	x23, x23, #0x178
   1fb84:	stp	x25, x26, [sp, #48]
   1fb88:	add	x26, sp, #0x58
   1fb8c:	b	1fb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x32dc>
   1fb90:	add	x19, x19, #0x1
   1fb94:	cmp	x19, x1
   1fb98:	b.cs	1fbf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3330>  // b.hs, b.nlast
   1fb9c:	ldr	x2, [x20, #16]
   1fba0:	add	x2, x2, x19, lsl #5
   1fba4:	ldr	w0, [x2, #16]
   1fba8:	cbz	w0, 1fb90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32d0>
   1fbac:	ldp	x4, x3, [x21, #8]
   1fbb0:	str	x2, [sp, #88]
   1fbb4:	lsr	x4, x4, #3
   1fbb8:	cmp	x3, x4
   1fbbc:	b.hi	1fcb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33f4>  // b.pmore
   1fbc0:	add	x24, x3, #0x1
   1fbc4:	b.eq	1fc08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3348>  // b.none
   1fbc8:	ldr	x25, [x21]
   1fbcc:	str	x24, [x21, #16]
   1fbd0:	mov	x1, x26
   1fbd4:	add	x0, x25, x3, lsl #3
   1fbd8:	mov	x2, #0x8                   	// #8
   1fbdc:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1fbe0:	ldr	x1, [x20, #32]
   1fbe4:	add	x19, x19, #0x1
   1fbe8:	cmp	x19, x1
   1fbec:	b.cc	1fb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x32dc>  // b.lo, b.ul, b.last
   1fbf0:	ldp	x23, x24, [sp, #32]
   1fbf4:	ldp	x25, x26, [sp, #48]
   1fbf8:	ldp	x21, x22, [sp, #16]
   1fbfc:	ldr	x30, [sp, #64]
   1fc00:	ldp	x19, x20, [sp], #96
   1fc04:	ret
   1fc08:	tst	x3, x24
   1fc0c:	b.eq	1fc48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>  // b.none
   1fc10:	clz	x2, x24
   1fc14:	mov	w0, #0x3f                  	// #63
   1fc18:	sub	w0, w0, w2
   1fc1c:	mov	x2, #0x1                   	// #1
   1fc20:	add	w4, w0, #0x1
   1fc24:	lsl	x4, x2, x4
   1fc28:	cmp	x24, x4
   1fc2c:	b.cs	1fcdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x341c>  // b.hs, b.nlast
   1fc30:	lsl	x0, x2, x0
   1fc34:	cmp	x24, x0
   1fc38:	b.ls	1fd10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3450>  // b.plast
   1fc3c:	cmp	x3, x4
   1fc40:	b.hi	1fcf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3438>  // b.pmore
   1fc44:	mov	x24, x4
   1fc48:	ldr	x0, [x22]
   1fc4c:	lsl	x24, x24, #3
   1fc50:	cbz	x0, 1fca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33e8>
   1fc54:	sub	x1, x0, #0x1
   1fc58:	tst	x0, x1
   1fc5c:	b.ne	1fccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x340c>  // b.any
   1fc60:	add	x24, x24, x1
   1fc64:	neg	x0, x0
   1fc68:	and	x24, x24, x0
   1fc6c:	mov	x1, x23
   1fc70:	mov	x0, x24
   1fc74:	mov	w2, #0x0                   	// #0
   1fc78:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   1fc7c:	mov	x25, x0
   1fc80:	ldr	x1, [x21]
   1fc84:	ldr	x2, [x21, #16]
   1fc88:	lsl	x2, x2, #3
   1fc8c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1fc90:	ldp	x0, x1, [x21]
   1fc94:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   1fc98:	stp	x25, x24, [x21]
   1fc9c:	ldr	x3, [x21, #16]
   1fca0:	add	x24, x3, #0x1
   1fca4:	b	1fbcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x330c>
   1fca8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   1fcac:	str	x0, [x22]
   1fcb0:	b	1fc54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3394>
   1fcb4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1fcb8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1fcbc:	add	x2, x2, #0x428
   1fcc0:	add	x0, x0, #0x1a8
   1fcc4:	mov	w1, #0x1be                 	// #446
   1fcc8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1fccc:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1fcd0:	add	x0, x0, #0x160
   1fcd4:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   1fcd8:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1fcdc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1fce0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1fce4:	mov	x3, x24
   1fce8:	add	x2, x2, #0x458
   1fcec:	add	x0, x0, #0x1a8
   1fcf0:	mov	w1, #0x17b                 	// #379
   1fcf4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1fcf8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1fcfc:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1fd00:	add	x2, x2, #0x4a0
   1fd04:	add	x0, x0, #0x1a8
   1fd08:	mov	w1, #0x1fd                 	// #509
   1fd0c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1fd10:	mov	x4, x0
   1fd14:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   1fd18:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   1fd1c:	mov	x3, x24
   1fd20:	add	x2, x2, #0x480
   1fd24:	add	x0, x0, #0x1a8
   1fd28:	mov	w1, #0x17c                 	// #380
   1fd2c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1fd30:	stp	x19, x30, [sp, #-16]!
   1fd34:	mov	x19, x0
   1fd38:	mov	x2, #0x40                  	// #64
   1fd3c:	mov	w1, #0x0                   	// #0
   1fd40:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1fd44:	mov	x0, #0xffffffffffffffff    	// #-1
   1fd48:	str	x0, [x19, #40]
   1fd4c:	ldp	x19, x30, [sp], #16
   1fd50:	ret
   1fd54:	nop
   1fd58:	stp	x19, x30, [sp, #-16]!
   1fd5c:	mov	x19, x0
   1fd60:	mov	x1, #0x0                   	// #0
   1fd64:	ldr	x0, [x0, #8]
   1fd68:	bl	cde8 <__sancov_default_options@@Base+0x698>
   1fd6c:	ldr	x0, [x19, #32]
   1fd70:	mov	x1, #0x0                   	// #0
   1fd74:	bl	cde8 <__sancov_default_options@@Base+0x698>
   1fd78:	ldr	x0, [x19, #48]
   1fd7c:	mov	x1, #0x0                   	// #0
   1fd80:	bl	cde8 <__sancov_default_options@@Base+0x698>
   1fd84:	mov	x0, x19
   1fd88:	mov	x2, #0x40                  	// #64
   1fd8c:	mov	w1, #0x0                   	// #0
   1fd90:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1fd94:	mov	x0, #0xffffffffffffffff    	// #-1
   1fd98:	str	x0, [x19, #40]
   1fd9c:	ldp	x19, x30, [sp], #16
   1fda0:	ret
   1fda4:	nop
   1fda8:	stp	x19, x20, [sp, #-32]!
   1fdac:	mov	x19, x0
   1fdb0:	mov	w20, w3
   1fdb4:	mov	x0, x1
   1fdb8:	stp	x21, x30, [sp, #16]
   1fdbc:	mov	x21, x2
   1fdc0:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   1fdc4:	stp	x0, x21, [x19, #8]
   1fdc8:	str	w20, [x19, #24]
   1fdcc:	ldp	x21, x30, [sp, #16]
   1fdd0:	ldp	x19, x20, [sp], #32
   1fdd4:	ret
   1fdd8:	stp	x19, x30, [sp, #-16]!
   1fddc:	mov	x19, x0
   1fde0:	mov	x2, #0x40                  	// #64
   1fde4:	mov	w1, #0x0                   	// #0
   1fde8:	str	xzr, [x19], #8
   1fdec:	mov	x0, x19
   1fdf0:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1fdf4:	mov	x0, #0xffffffffffffffff    	// #-1
   1fdf8:	str	x0, [x19, #40]
   1fdfc:	ldp	x19, x30, [sp], #16
   1fe00:	ret
   1fe04:	nop
   1fe08:	stp	x19, x20, [sp, #-32]!
   1fe0c:	mov	x2, #0x0                   	// #0
   1fe10:	mov	x1, #0x0                   	// #0
   1fe14:	stp	x21, x30, [sp, #16]
   1fe18:	mov	x21, x0
   1fe1c:	mov	x0, #0x48                  	// #72
   1fe20:	bl	cb90 <__sancov_default_options@@Base+0x440>
   1fe24:	mov	x20, x0
   1fe28:	mov	x19, x0
   1fe2c:	mov	x2, #0x40                  	// #64
   1fe30:	mov	w1, #0x0                   	// #0
   1fe34:	str	xzr, [x20], #8
   1fe38:	mov	x0, x20
   1fe3c:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1fe40:	mov	x0, #0xffffffffffffffff    	// #-1
   1fe44:	str	x0, [x20, #40]
   1fe48:	str	x21, [x19, #8]
   1fe4c:	mov	x0, x19
   1fe50:	ldp	x21, x30, [sp, #16]
   1fe54:	ldp	x19, x20, [sp], #32
   1fe58:	ret
   1fe5c:	nop
   1fe60:	stp	x19, x30, [sp, #-16]!
   1fe64:	mov	x19, x0
   1fe68:	add	x0, x0, #0x8
   1fe6c:	bl	1fd58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3498>
   1fe70:	ldr	x0, [x19]
   1fe74:	cbz	x0, 1fe7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x35bc>
   1fe78:	bl	1fe60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
   1fe7c:	mov	x0, x19
   1fe80:	mov	x1, #0x0                   	// #0
   1fe84:	ldp	x19, x30, [sp], #16
   1fe88:	b	cde8 <__sancov_default_options@@Base+0x698>
   1fe8c:	nop
   1fe90:	mov	x2, #0x40                  	// #64
   1fe94:	mov	w1, #0x0                   	// #0
   1fe98:	b	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1fe9c:	nop
   1fea0:	stp	x19, x30, [sp, #-16]!
   1fea4:	mov	x19, x0
   1fea8:	mov	x1, #0x0                   	// #0
   1feac:	ldr	x0, [x0]
   1feb0:	bl	cde8 <__sancov_default_options@@Base+0x698>
   1feb4:	ldr	x0, [x19, #24]
   1feb8:	mov	x1, #0x0                   	// #0
   1febc:	bl	cde8 <__sancov_default_options@@Base+0x698>
   1fec0:	ldr	x0, [x19, #40]
   1fec4:	mov	x1, #0x0                   	// #0
   1fec8:	bl	cde8 <__sancov_default_options@@Base+0x698>
   1fecc:	mov	x0, x19
   1fed0:	mov	x2, #0x40                  	// #64
   1fed4:	ldp	x19, x30, [sp], #16
   1fed8:	mov	w1, #0x0                   	// #0
   1fedc:	b	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   1fee0:	strb	wzr, [x0, #104]
   1fee4:	ret
   1fee8:	ldr	x3, [x0, #224]
   1feec:	cbz	x3, 1ff14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3654>
   1fef0:	str	x30, [sp, #-16]!
   1fef4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1fef8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   1fefc:	add	x2, x2, #0x38
   1ff00:	add	x0, x0, #0x68
   1ff04:	mov	x4, #0x0                   	// #0
   1ff08:	mov	x3, #0x0                   	// #0
   1ff0c:	mov	w1, #0x4e                  	// #78
   1ff10:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1ff14:	ldr	x3, [x0, #232]
   1ff18:	cbnz	x3, 1fef0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   1ff1c:	stp	x1, x2, [x0, #224]
   1ff20:	ret
   1ff24:	nop
   1ff28:	stp	x19, x20, [sp, #-48]!
   1ff2c:	mov	x20, x0
   1ff30:	ldr	x0, [x0, #32]
   1ff34:	stp	x21, x22, [sp, #16]
   1ff38:	mov	x21, x1
   1ff3c:	str	x30, [sp, #32]
   1ff40:	bl	15b08 <__sanitizer_set_report_fd@@Base+0x2be8>
   1ff44:	ldr	x0, [x20, #24]
   1ff48:	cbz	x0, 1ff58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3698>
   1ff4c:	mov	x1, x21
   1ff50:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   1ff54:	cbz	w0, 1fff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3738>
   1ff58:	ldr	x0, [x20, #16]
   1ff5c:	mov	x19, #0x0                   	// #0
   1ff60:	cbnz	x0, 1ff78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36b8>
   1ff64:	b	1ffb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36f8>
   1ff68:	ldr	x0, [x20, #16]
   1ff6c:	add	x19, x19, #0x1
   1ff70:	cmp	x19, x0
   1ff74:	b.cs	1ffb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36f8>  // b.hs, b.nlast
   1ff78:	ldr	x0, [x20]
   1ff7c:	mov	x1, x21
   1ff80:	lsl	x22, x19, #3
   1ff84:	ldr	x0, [x0, x19, lsl #3]
   1ff88:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   1ff8c:	cbnz	w0, 1ff68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36a8>
   1ff90:	ldr	x4, [x20, #16]
   1ff94:	ldr	x0, [x20]
   1ff98:	cmp	x4, x19
   1ff9c:	b.ls	200ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x382c>  // b.plast
   1ffa0:	ldr	x0, [x0, x22]
   1ffa4:	str	x0, [x20, #24]
   1ffa8:	ldp	x21, x22, [sp, #16]
   1ffac:	ldr	x30, [sp, #32]
   1ffb0:	ldp	x19, x20, [sp], #48
   1ffb4:	ret
   1ffb8:	mov	x0, x21
   1ffbc:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   1ffc0:	ldp	x4, x3, [x20, #8]
   1ffc4:	mov	x19, x20
   1ffc8:	str	x0, [x19, #24]!
   1ffcc:	lsr	x4, x4, #3
   1ffd0:	cmp	x3, x4
   1ffd4:	b.hi	200d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3814>  // b.pmore
   1ffd8:	add	x21, x3, #0x1
   1ffdc:	b.eq	2000c <__sanitizer_get_module_and_offset_for_pc@@Base+0x374c>  // b.none
   1ffe0:	ldr	x22, [x20]
   1ffe4:	str	x21, [x20, #16]
   1ffe8:	mov	x1, x19
   1ffec:	add	x0, x22, x3, lsl #3
   1fff0:	mov	x2, #0x8                   	// #8
   1fff4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   1fff8:	ldp	x21, x22, [sp, #16]
   1fffc:	ldr	x0, [x20, #24]
   20000:	ldr	x30, [sp, #32]
   20004:	ldp	x19, x20, [sp], #48
   20008:	ret
   2000c:	tst	x3, x21
   20010:	b.eq	2004c <__sanitizer_get_module_and_offset_for_pc@@Base+0x378c>  // b.none
   20014:	clz	x2, x21
   20018:	mov	w1, #0x3f                  	// #63
   2001c:	sub	w1, w1, w2
   20020:	mov	x2, #0x1                   	// #1
   20024:	add	w4, w1, #0x1
   20028:	lsl	x4, x2, x4
   2002c:	cmp	x4, x21
   20030:	b.ls	200b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37f8>  // b.plast
   20034:	lsl	x1, x2, x1
   20038:	cmp	x1, x21
   2003c:	b.cs	2013c <__sanitizer_get_module_and_offset_for_pc@@Base+0x387c>  // b.hs, b.nlast
   20040:	cmp	x3, x4
   20044:	b.hi	20114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3854>  // b.pmore
   20048:	mov	x21, x4
   2004c:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   20050:	lsl	x21, x21, #3
   20054:	ldr	x22, [x22, #4016]
   20058:	ldr	x0, [x22]
   2005c:	cbz	x0, 20108 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   20060:	sub	x1, x0, #0x1
   20064:	tst	x1, x0
   20068:	b.ne	2012c <__sanitizer_get_module_and_offset_for_pc@@Base+0x386c>  // b.any
   2006c:	add	x21, x21, x1
   20070:	neg	x0, x0
   20074:	and	x21, x21, x0
   20078:	mov	w2, #0x0                   	// #0
   2007c:	mov	x0, x21
   20080:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   20084:	add	x1, x1, #0x178
   20088:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   2008c:	ldr	x1, [x20]
   20090:	mov	x22, x0
   20094:	ldr	x2, [x20, #16]
   20098:	lsl	x2, x2, #3
   2009c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   200a0:	ldp	x0, x1, [x20]
   200a4:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   200a8:	stp	x22, x21, [x20]
   200ac:	ldr	x3, [x20, #16]
   200b0:	add	x21, x3, #0x1
   200b4:	b	1ffe4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3724>
   200b8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   200bc:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   200c0:	mov	x3, x21
   200c4:	add	x2, x2, #0x458
   200c8:	add	x0, x0, #0x1a8
   200cc:	mov	w1, #0x17b                 	// #379
   200d0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   200d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   200d8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   200dc:	add	x2, x2, #0x428
   200e0:	add	x0, x0, #0x1a8
   200e4:	mov	w1, #0x1be                 	// #446
   200e8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   200ec:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   200f0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   200f4:	mov	x3, x19
   200f8:	add	x2, x2, #0x190
   200fc:	add	x0, x0, #0x1a8
   20100:	mov	w1, #0x1b6                 	// #438
   20104:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20108:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   2010c:	str	x0, [x22]
   20110:	b	20060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37a0>
   20114:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   20118:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   2011c:	add	x2, x2, #0x4a0
   20120:	add	x0, x0, #0x1a8
   20124:	mov	w1, #0x1fd                 	// #509
   20128:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2012c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   20130:	add	x0, x0, #0x160
   20134:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   20138:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   2013c:	mov	x4, x1
   20140:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   20144:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   20148:	mov	x3, x21
   2014c:	add	x2, x2, #0x480
   20150:	add	x0, x0, #0x1a8
   20154:	mov	w1, #0x17c                 	// #380
   20158:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2015c:	nop
   20160:	stp	x19, x20, [sp, #-64]!
   20164:	mov	x19, x0
   20168:	stp	x23, x24, [sp, #32]
   2016c:	adrp	x23, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   20170:	ldr	x20, [x23, #4016]
   20174:	stp	x21, x22, [sp, #16]
   20178:	mov	x21, x1
   2017c:	stp	x25, x30, [sp, #48]
   20180:	stp	xzr, xzr, [x0]
   20184:	ldr	x0, [x20]
   20188:	str	xzr, [x19, #16]
   2018c:	cbz	x0, 20294 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39d4>
   20190:	sub	x1, x0, #0x1
   20194:	tst	x1, x0
   20198:	b.ne	202a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39e0>  // b.any
   2019c:	add	x20, x0, #0x7
   201a0:	neg	x0, x0
   201a4:	and	x20, x20, x0
   201a8:	mov	w2, #0x0                   	// #0
   201ac:	mov	x0, x20
   201b0:	adrp	x25, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   201b4:	add	x1, x25, #0x178
   201b8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   201bc:	ldr	x1, [x19]
   201c0:	mov	x22, x0
   201c4:	ldr	x2, [x19, #16]
   201c8:	add	x24, x19, #0x70
   201cc:	lsl	x2, x2, #3
   201d0:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   201d4:	ldp	x0, x1, [x19]
   201d8:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   201dc:	stp	x22, x20, [x19]
   201e0:	lsr	x0, x20, #3
   201e4:	stp	xzr, x24, [x19, #24]
   201e8:	cmp	x0, #0x3e7
   201ec:	b.ls	2022c <__sanitizer_get_module_and_offset_for_pc@@Base+0x396c>  // b.plast
   201f0:	strb	wzr, [x19, #64]
   201f4:	mov	x0, x24
   201f8:	strb	wzr, [x19, #96]
   201fc:	strb	wzr, [x19, #104]
   20200:	bl	159f0 <__sanitizer_set_report_fd@@Base+0x2ad0>
   20204:	ldp	x0, x1, [x21]
   20208:	stp	x0, x1, [x19, #200]
   2020c:	ldr	x0, [x21, #16]
   20210:	ldp	x21, x22, [sp, #16]
   20214:	ldp	x23, x24, [sp, #32]
   20218:	ldp	x25, x30, [sp, #48]
   2021c:	stp	x0, xzr, [x19, #216]
   20220:	str	xzr, [x19, #232]
   20224:	ldp	x19, x20, [sp], #64
   20228:	ret
   2022c:	ldr	x3, [x19, #16]
   20230:	cmp	x3, #0x3e8
   20234:	b.hi	202bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x39fc>  // b.pmore
   20238:	ldr	x23, [x23, #4016]
   2023c:	ldr	x0, [x23]
   20240:	cbz	x0, 202b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39f0>
   20244:	sub	x1, x0, #0x1
   20248:	tst	x1, x0
   2024c:	b.ne	202a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39e0>  // b.any
   20250:	mov	x1, #0x1f3f                	// #7999
   20254:	add	x20, x0, x1
   20258:	neg	x0, x0
   2025c:	add	x1, x25, #0x178
   20260:	and	x20, x20, x0
   20264:	mov	w2, #0x0                   	// #0
   20268:	mov	x0, x20
   2026c:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   20270:	ldr	x1, [x19]
   20274:	mov	x22, x0
   20278:	ldr	x2, [x19, #16]
   2027c:	lsl	x2, x2, #3
   20280:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   20284:	ldp	x0, x1, [x19]
   20288:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   2028c:	stp	x22, x20, [x19]
   20290:	b	201f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3930>
   20294:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   20298:	str	x0, [x20]
   2029c:	b	20190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38d0>
   202a0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   202a4:	add	x0, x0, #0x160
   202a8:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   202ac:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   202b0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   202b4:	str	x0, [x23]
   202b8:	b	20244 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3984>
   202bc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   202c0:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   202c4:	add	x2, x2, #0x4a0
   202c8:	add	x0, x0, #0x1a8
   202cc:	mov	x4, #0x3e8                 	// #1000
   202d0:	mov	w1, #0x1fd                 	// #509
   202d4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   202d8:	str	x1, [x0]
   202dc:	ldr	x0, [x1, #224]
   202e0:	cbz	x0, 202ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a2c>
   202e4:	mov	x16, x0
   202e8:	br	x16
   202ec:	ret
   202f0:	ldr	x0, [x0]
   202f4:	ldr	x0, [x0, #232]
   202f8:	cbz	x0, 20304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a44>
   202fc:	mov	x16, x0
   20300:	br	x16
   20304:	ret
   20308:	ret
   2030c:	nop
   20310:	stp	x19, x20, [sp, #-80]!
   20314:	mov	x20, x0
   20318:	mov	x5, x2
   2031c:	ldr	x0, [x0, #16]
   20320:	adrp	x19, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>
   20324:	add	x19, x19, #0x308
   20328:	stp	x21, x22, [sp, #16]
   2032c:	add	x22, sp, #0x38
   20330:	mov	x3, x19
   20334:	mov	x21, x1
   20338:	mov	x4, x22
   2033c:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>
   20340:	add	x2, x2, #0x550
   20344:	str	x30, [sp, #32]
   20348:	stp	x5, x5, [sp, #56]
   2034c:	str	xzr, [sp, #72]
   20350:	bl	63e0 <__asan_backtrace_pcinfo@plt>
   20354:	ldr	x0, [sp, #72]
   20358:	cbz	x0, 20370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ab0>
   2035c:	mov	w0, #0x1                   	// #1
   20360:	ldp	x21, x22, [sp, #16]
   20364:	ldr	x30, [sp, #32]
   20368:	ldp	x19, x20, [sp], #80
   2036c:	ret
   20370:	ldr	x0, [x20, #16]
   20374:	mov	x4, x22
   20378:	mov	x3, x19
   2037c:	mov	x1, x21
   20380:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>
   20384:	add	x2, x2, #0x6d0
   20388:	bl	6520 <__asan_backtrace_syminfo@plt>
   2038c:	ldr	x0, [sp, #72]
   20390:	ldp	x21, x22, [sp, #16]
   20394:	cmp	x0, #0x0
   20398:	cset	w0, ne  // ne = any
   2039c:	ldr	x30, [sp, #32]
   203a0:	ldp	x19, x20, [sp], #80
   203a4:	ret
   203a8:	ldr	x0, [x0, #16]
   203ac:	str	x30, [sp, #-16]!
   203b0:	mov	x4, x2
   203b4:	adrp	x3, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>
   203b8:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>
   203bc:	add	x3, x3, #0x308
   203c0:	add	x2, x2, #0x688
   203c4:	bl	6520 <__asan_backtrace_syminfo@plt>
   203c8:	mov	w0, #0x1                   	// #1
   203cc:	ldr	x30, [sp], #16
   203d0:	ret
   203d4:	nop
   203d8:	stp	x19, x20, [sp, #-48]!
   203dc:	mov	x19, x2
   203e0:	mov	x20, x1
   203e4:	add	x2, x1, #0x1
   203e8:	stp	x21, x22, [sp, #16]
   203ec:	mov	x21, x0
   203f0:	ldp	x3, x1, [x19, #8]
   203f4:	str	x30, [sp, #32]
   203f8:	add	x0, x2, x3
   203fc:	cmp	x1, x0
   20400:	b.cc	20440 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b80>  // b.lo, b.ul, b.last
   20404:	ldr	x22, [x19]
   20408:	mov	x1, x21
   2040c:	add	x0, x22, x3
   20410:	mov	x2, x20
   20414:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   20418:	ldp	x0, x1, [x19]
   2041c:	add	x0, x0, x20
   20420:	strb	wzr, [x0, x1]
   20424:	ldr	x1, [x19, #8]
   20428:	ldp	x21, x22, [sp, #16]
   2042c:	add	x20, x1, x20
   20430:	ldr	x30, [sp, #32]
   20434:	str	x20, [x19, #8]
   20438:	ldp	x19, x20, [sp], #48
   2043c:	ret
   20440:	cmp	x0, x1, lsl #1
   20444:	lsl	x1, x1, #1
   20448:	b.hi	2048c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bcc>  // b.pmore
   2044c:	mov	x0, x1
   20450:	str	x1, [x19, #16]
   20454:	mov	x1, #0x0                   	// #0
   20458:	mov	x2, #0x0                   	// #0
   2045c:	bl	cb90 <__sancov_default_options@@Base+0x440>
   20460:	mov	x22, x0
   20464:	ldr	x1, [x19]
   20468:	cbz	x1, 20480 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bc0>
   2046c:	ldr	x2, [x19, #8]
   20470:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   20474:	ldr	x0, [x19]
   20478:	mov	x1, #0x0                   	// #0
   2047c:	bl	cde8 <__sancov_default_options@@Base+0x698>
   20480:	str	x22, [x19]
   20484:	ldr	x3, [x19, #8]
   20488:	b	20408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   2048c:	str	x0, [x19, #16]
   20490:	b	20454 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b94>
   20494:	nop
   20498:	stp	x19, x20, [sp, #-64]!
   2049c:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>
   204a0:	mov	x20, x0
   204a4:	add	x3, sp, #0x28
   204a8:	add	x2, x2, #0x3d8
   204ac:	stp	x21, x30, [sp, #16]
   204b0:	and	w21, w1, #0xff
   204b4:	mov	w1, #0x3                   	// #3
   204b8:	stp	xzr, xzr, [sp, #40]
   204bc:	str	xzr, [sp, #56]
   204c0:	bl	69f0 <__asan_cplus_demangle_v3_callback@plt>
   204c4:	cbz	w0, 204f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c30>
   204c8:	ldp	x19, x0, [sp, #40]
   204cc:	ldr	x1, [sp, #56]
   204d0:	add	x0, x0, #0x40
   204d4:	cmp	x0, x1
   204d8:	b.ls	20524 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c64>  // b.plast
   204dc:	cbz	x19, 20500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c40>
   204e0:	mov	x0, x19
   204e4:	ldp	x21, x30, [sp, #16]
   204e8:	ldp	x19, x20, [sp], #64
   204ec:	ret
   204f0:	ldr	x0, [sp, #40]
   204f4:	cbz	x0, 20500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c40>
   204f8:	mov	x1, #0x0                   	// #0
   204fc:	bl	cde8 <__sancov_default_options@@Base+0x698>
   20500:	mov	x19, #0x0                   	// #0
   20504:	cbz	w21, 204e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c20>
   20508:	mov	x0, x20
   2050c:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   20510:	mov	x19, x0
   20514:	mov	x0, x19
   20518:	ldp	x21, x30, [sp, #16]
   2051c:	ldp	x19, x20, [sp], #64
   20520:	ret
   20524:	mov	x0, x19
   20528:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   2052c:	mov	x19, x0
   20530:	mov	x1, #0x0                   	// #0
   20534:	ldr	x0, [sp, #40]
   20538:	bl	cde8 <__sancov_default_options@@Base+0x698>
   2053c:	b	204dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c1c>
   20540:	mov	x0, x1
   20544:	mov	w1, #0x0                   	// #0
   20548:	b	20498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bd8>
   2054c:	nop
   20550:	cbz	x4, 205f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d30>
   20554:	stp	x19, x20, [sp, #-64]!
   20558:	mov	x19, x0
   2055c:	stp	x21, x22, [sp, #16]
   20560:	mov	x21, x1
   20564:	ldr	x1, [x0, #8]
   20568:	stp	x23, x24, [sp, #32]
   2056c:	str	x30, [sp, #48]
   20570:	cbz	x1, 205f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d38>
   20574:	ldr	x0, [x0, #16]
   20578:	mov	x22, x2
   2057c:	mov	w23, w3
   20580:	mov	x20, x4
   20584:	cbnz	x0, 20618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d58>
   20588:	ldr	x0, [x19]
   2058c:	ldr	x4, [x0, #8]
   20590:	cmp	x21, x4
   20594:	b.ne	2064c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d8c>  // b.any
   20598:	ldr	x4, [x1, #8]
   2059c:	cmp	x21, x4
   205a0:	b.ne	20668 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3da8>  // b.any
   205a4:	add	x21, x1, #0x8
   205a8:	mov	x0, x20
   205ac:	mov	w1, #0x1                   	// #1
   205b0:	bl	20498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bd8>
   205b4:	str	x0, [x21, #32]
   205b8:	cbz	x22, 205c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d08>
   205bc:	mov	x0, x22
   205c0:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   205c4:	str	x0, [x21, #48]
   205c8:	ldr	x0, [x19, #16]
   205cc:	ldr	x30, [sp, #48]
   205d0:	str	w23, [x21, #56]
   205d4:	add	x0, x0, #0x1
   205d8:	ldp	x21, x22, [sp, #16]
   205dc:	ldp	x23, x24, [sp, #32]
   205e0:	str	x0, [x19, #16]
   205e4:	mov	w0, #0x0                   	// #0
   205e8:	ldp	x19, x20, [sp], #64
   205ec:	ret
   205f0:	mov	w0, #0x0                   	// #0
   205f4:	ret
   205f8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   205fc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   20600:	add	x2, x2, #0xb0
   20604:	add	x0, x0, #0xc0
   20608:	mov	x4, #0x0                   	// #0
   2060c:	mov	x3, #0x0                   	// #0
   20610:	mov	w1, #0x5c                  	// #92
   20614:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20618:	mov	x0, x21
   2061c:	bl	1fe08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3548>
   20620:	ldr	x3, [x19]
   20624:	mov	x24, x0
   20628:	add	x0, x0, #0x8
   2062c:	ldp	x1, x2, [x3, #16]
   20630:	ldr	w3, [x3, #32]
   20634:	bl	1fda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e8>
   20638:	ldr	x1, [x19, #8]
   2063c:	str	x24, [x1]
   20640:	mov	x1, x24
   20644:	str	x24, [x19, #8]
   20648:	b	20588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cc8>
   2064c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   20650:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   20654:	mov	x3, x21
   20658:	add	x2, x2, #0x110
   2065c:	add	x0, x0, #0xc0
   20660:	mov	w1, #0x65                  	// #101
   20664:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20668:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2066c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   20670:	mov	x3, x21
   20674:	add	x2, x2, #0x138
   20678:	add	x0, x0, #0xc0
   2067c:	mov	w1, #0x66                  	// #102
   20680:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20684:	nop
   20688:	cmp	x2, #0x0
   2068c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   20690:	b.ne	20698 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd8>  // b.any
   20694:	ret
   20698:	stp	x19, x20, [sp, #-32]!
   2069c:	mov	x20, x0
   206a0:	mov	x19, x3
   206a4:	mov	x0, x2
   206a8:	mov	w1, #0x1                   	// #1
   206ac:	stp	x21, x30, [sp, #16]
   206b0:	mov	x21, x4
   206b4:	bl	20498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bd8>
   206b8:	stp	x0, x19, [x20, #40]
   206bc:	str	x21, [x20, #56]
   206c0:	ldp	x21, x30, [sp, #16]
   206c4:	ldp	x19, x20, [sp], #32
   206c8:	ret
   206cc:	nop
   206d0:	cbz	x2, 20744 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e84>
   206d4:	stp	x19, x20, [sp, #-48]!
   206d8:	mov	x19, x0
   206dc:	stp	x21, x22, [sp, #16]
   206e0:	ldr	x22, [x0, #8]
   206e4:	str	x30, [sp, #40]
   206e8:	cbz	x22, 20748 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e88>
   206ec:	ldr	x0, [x0, #16]
   206f0:	mov	x21, x1
   206f4:	mov	x20, x2
   206f8:	cbnz	x0, 2076c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3eac>
   206fc:	ldr	x0, [x19]
   20700:	ldr	x4, [x0, #8]
   20704:	cmp	x21, x4
   20708:	b.ne	207a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ee8>  // b.any
   2070c:	ldr	x4, [x22, #8]
   20710:	cmp	x21, x4
   20714:	b.ne	207c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f08>  // b.any
   20718:	mov	x0, x20
   2071c:	mov	w1, #0x1                   	// #1
   20720:	bl	20498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bd8>
   20724:	ldr	x1, [x19, #16]
   20728:	ldr	x30, [sp, #40]
   2072c:	str	x0, [x22, #40]
   20730:	add	x1, x1, #0x1
   20734:	ldp	x21, x22, [sp, #16]
   20738:	str	x1, [x19, #16]
   2073c:	ldp	x19, x20, [sp], #48
   20740:	ret
   20744:	ret
   20748:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2074c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   20750:	add	x2, x2, #0xb0
   20754:	add	x0, x0, #0xc0
   20758:	mov	x4, #0x0                   	// #0
   2075c:	mov	x3, #0x0                   	// #0
   20760:	mov	w1, #0x5c                  	// #92
   20764:	str	x23, [sp, #32]
   20768:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2076c:	mov	x0, x1
   20770:	str	x23, [sp, #32]
   20774:	bl	1fe08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3548>
   20778:	mov	x23, x0
   2077c:	ldr	x3, [x19]
   20780:	add	x0, x0, #0x8
   20784:	ldp	x1, x2, [x3, #16]
   20788:	ldr	w3, [x3, #32]
   2078c:	bl	1fda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e8>
   20790:	ldr	x22, [x19, #8]
   20794:	str	x23, [x22]
   20798:	mov	x22, x23
   2079c:	ldr	x23, [sp, #32]
   207a0:	str	x22, [x19, #8]
   207a4:	b	206fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e3c>
   207a8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   207ac:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   207b0:	mov	x3, x21
   207b4:	add	x2, x2, #0x110
   207b8:	add	x0, x0, #0xc0
   207bc:	mov	w1, #0x65                  	// #101
   207c0:	str	x23, [sp, #32]
   207c4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   207c8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   207cc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   207d0:	mov	x3, x21
   207d4:	add	x2, x2, #0x138
   207d8:	add	x0, x0, #0xc0
   207dc:	mov	w1, #0x66                  	// #102
   207e0:	str	x23, [sp, #32]
   207e4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   207e8:	stp	x19, x20, [sp, #-32]!
   207ec:	adrp	x2, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>
   207f0:	mov	x20, x0
   207f4:	add	x2, x2, #0x308
   207f8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   207fc:	mov	x3, #0x0                   	// #0
   20800:	add	x0, x0, #0x2d8
   20804:	mov	w1, #0x0                   	// #0
   20808:	str	x30, [sp, #16]
   2080c:	bl	6690 <__asan_backtrace_create_state@plt>
   20810:	cbz	x0, 20840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f80>
   20814:	mov	x19, x0
   20818:	mov	x1, #0x18                  	// #24
   2081c:	mov	x0, x20
   20820:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   20824:	adrp	x1, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   20828:	add	x1, x1, #0xe68
   2082c:	stp	x1, xzr, [x0]
   20830:	str	x19, [x0, #16]
   20834:	ldr	x30, [sp, #16]
   20838:	ldp	x19, x20, [sp], #32
   2083c:	ret
   20840:	mov	x0, #0x0                   	// #0
   20844:	ldr	x30, [sp, #16]
   20848:	ldp	x19, x20, [sp], #32
   2084c:	ret
   20850:	ret
   20854:	nop
   20858:	stp	x19, x20, [sp, #-48]!
   2085c:	stp	x21, x22, [sp, #16]
   20860:	mov	x21, x0
   20864:	ldr	x0, [x0, #16]
   20868:	str	x30, [sp, #32]
   2086c:	cbz	x0, 208d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4010>
   20870:	mov	x22, x1
   20874:	mov	x19, #0x0                   	// #0
   20878:	mov	x20, #0x0                   	// #0
   2087c:	b	20894 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd4>
   20880:	ldr	x0, [x21, #16]
   20884:	add	x20, x20, #0x1
   20888:	add	x19, x19, #0x48
   2088c:	cmp	x20, x0
   20890:	b.cs	208d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4010>  // b.hs, b.nlast
   20894:	ldr	x0, [x21]
   20898:	mov	x1, x22
   2089c:	add	x0, x0, x19
   208a0:	bl	f500 <__sancov_default_options@@Base+0x2db0>
   208a4:	tst	w0, #0xff
   208a8:	b.eq	20880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fc0>  // b.none
   208ac:	ldr	x4, [x21, #16]
   208b0:	cmp	x4, x20
   208b4:	b.ls	208e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4024>  // b.plast
   208b8:	ldr	x0, [x21]
   208bc:	ldp	x21, x22, [sp, #16]
   208c0:	add	x0, x0, x19
   208c4:	ldr	x30, [sp, #32]
   208c8:	ldp	x19, x20, [sp], #48
   208cc:	ret
   208d0:	mov	x0, #0x0                   	// #0
   208d4:	ldp	x21, x22, [sp, #16]
   208d8:	ldr	x30, [sp, #32]
   208dc:	ldp	x19, x20, [sp], #48
   208e0:	ret
   208e4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   208e8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   208ec:	mov	x3, x20
   208f0:	add	x2, x2, #0x210
   208f4:	add	x0, x0, #0x1a8
   208f8:	mov	w1, #0x2f9                 	// #761
   208fc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20900:	stp	x19, x20, [sp, #-96]!
   20904:	mov	x19, #0x0                   	// #0
   20908:	stp	x21, x22, [sp, #16]
   2090c:	mov	x22, x0
   20910:	mov	x21, x1
   20914:	stp	x23, x24, [sp, #32]
   20918:	adrp	x24, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4740>
   2091c:	mov	x23, x2
   20920:	add	x24, x24, #0x950
   20924:	stp	x25, x26, [sp, #48]
   20928:	sub	x26, x2, #0x1
   2092c:	add	x25, sp, #0x58
   20930:	str	x30, [sp, #64]
   20934:	b	20958 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4098>
   20938:	cmp	x19, #0x1
   2093c:	b.ls	2094c <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>  // b.plast
   20940:	ldurb	w0, [x1, #-1]
   20944:	cmp	w0, #0xa
   20948:	b.eq	209d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4118>  // b.none
   2094c:	add	x0, x19, #0x1
   20950:	cmp	x23, x0
   20954:	b.eq	20a20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4160>  // b.none
   20958:	ldr	w0, [x22, #16]
   2095c:	mov	x3, x25
   20960:	sub	x2, x26, x19
   20964:	add	x1, x21, x19
   20968:	mov	x4, #0x0                   	// #0
   2096c:	str	xzr, [sp, #88]
   20970:	bl	18058 <__sanitizer_set_report_fd@@Base+0x5138>
   20974:	ands	w20, w0, #0xff
   20978:	b.eq	209f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4130>  // b.none
   2097c:	ldr	x3, [sp, #88]
   20980:	add	x19, x19, x3
   20984:	add	x1, x21, x19
   20988:	cbz	x3, 209f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4130>
   2098c:	ldr	x0, [x22]
   20990:	ldr	x3, [x0]
   20994:	cmp	x3, x24
   20998:	b.eq	20938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>  // b.none
   2099c:	mov	x2, x19
   209a0:	mov	x1, x21
   209a4:	mov	x0, x22
   209a8:	blr	x3
   209ac:	tst	w0, #0xff
   209b0:	b.eq	2094c <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>  // b.none
   209b4:	add	x21, x21, x19
   209b8:	strb	wzr, [x21]
   209bc:	mov	w0, w20
   209c0:	ldp	x21, x22, [sp, #16]
   209c4:	ldp	x23, x24, [sp, #32]
   209c8:	ldp	x25, x26, [sp, #48]
   209cc:	ldr	x30, [sp, #64]
   209d0:	ldp	x19, x20, [sp], #96
   209d4:	ret
   209d8:	ldurb	w0, [x1, #-2]
   209dc:	cmp	w0, #0xa
   209e0:	b.ne	2094c <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>  // b.any
   209e4:	mov	x21, x1
   209e8:	strb	wzr, [x21]
   209ec:	b	209bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x40fc>
   209f0:	ldr	w1, [x22, #16]
   209f4:	mov	w20, #0x0                   	// #0
   209f8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   209fc:	add	x0, x0, #0x230
   20a00:	bl	1a328 <OnPrint@@Base+0x398>
   20a04:	mov	w0, w20
   20a08:	ldp	x21, x22, [sp, #16]
   20a0c:	ldp	x23, x24, [sp, #32]
   20a10:	ldp	x25, x26, [sp, #48]
   20a14:	ldr	x30, [sp, #64]
   20a18:	ldp	x19, x20, [sp], #96
   20a1c:	ret
   20a20:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   20a24:	add	x0, x0, #0x260
   20a28:	bl	1a328 <OnPrint@@Base+0x398>
   20a2c:	strb	wzr, [x21]
   20a30:	b	209bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x40fc>
   20a34:	nop
   20a38:	cbz	x2, 20a40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4180>
   20a3c:	b	20900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4040>
   20a40:	mov	w0, #0x1                   	// #1
   20a44:	ret
   20a48:	stp	x19, x20, [sp, #-32]!
   20a4c:	adrp	x19, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   20a50:	mov	w2, #0x1                   	// #1
   20a54:	ldr	x0, [x19, #3984]
   20a58:	str	x30, [sp, #16]
   20a5c:	ldxrb	w1, [x0]
   20a60:	stxrb	w3, w2, [x0]
   20a64:	cbnz	w3, 20a5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x419c>
   20a68:	dmb	ish
   20a6c:	tst	w1, #0xff
   20a70:	b.eq	20a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41b8>  // b.none
   20a74:	bl	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x520>
   20a78:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   20a7c:	ldr	x20, [x20, #3936]
   20a80:	ldr	x0, [x20]
   20a84:	cbz	x0, 20aa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41e0>
   20a88:	dmb	ish
   20a8c:	ldr	x19, [x19, #3984]
   20a90:	strb	wzr, [x19]
   20a94:	ldr	x30, [sp, #16]
   20a98:	ldp	x19, x20, [sp], #32
   20a9c:	ret
   20aa0:	bl	21e58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5598>
   20aa4:	str	x0, [x20]
   20aa8:	cbnz	x0, 20a88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c8>
   20aac:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   20ab0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   20ab4:	add	x2, x2, #0x288
   20ab8:	add	x0, x0, #0x2a0
   20abc:	mov	x4, #0x0                   	// #0
   20ac0:	mov	x3, #0x0                   	// #0
   20ac4:	mov	w1, #0x17                  	// #23
   20ac8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20acc:	nop
   20ad0:	stp	x19, x20, [sp, #-32]!
   20ad4:	mov	x20, x0
   20ad8:	stp	x21, x30, [sp, #16]
   20adc:	mov	x21, x2
   20ae0:	bl	146f0 <__sanitizer_set_report_fd@@Base+0x17d0>
   20ae4:	mov	x2, #0x0                   	// #0
   20ae8:	mov	x19, x0
   20aec:	mov	x1, #0x0                   	// #0
   20af0:	add	x0, x0, #0x1
   20af4:	bl	cb90 <__sancov_default_options@@Base+0x440>
   20af8:	str	x0, [x21]
   20afc:	mov	x2, x19
   20b00:	mov	x1, x20
   20b04:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   20b08:	ldr	x1, [x21]
   20b0c:	add	x0, x20, x19
   20b10:	strb	wzr, [x1, x19]
   20b14:	ldrb	w1, [x20, x19]
   20b18:	ldp	x21, x30, [sp, #16]
   20b1c:	cmp	w1, #0x0
   20b20:	cinc	x0, x0, ne  // ne = any
   20b24:	ldp	x19, x20, [sp], #32
   20b28:	ret
   20b2c:	nop
   20b30:	stp	x19, x20, [sp, #-48]!
   20b34:	mov	x20, x2
   20b38:	add	x2, sp, #0x28
   20b3c:	str	x30, [sp, #16]
   20b40:	bl	20ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   20b44:	mov	x19, x0
   20b48:	ldr	x0, [sp, #40]
   20b4c:	cbz	x0, 20b5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x429c>
   20b50:	bl	14d08 <__sanitizer_set_report_fd@@Base+0x1de8>
   20b54:	str	w0, [x20]
   20b58:	ldr	x0, [sp, #40]
   20b5c:	mov	x1, #0x0                   	// #0
   20b60:	bl	cde8 <__sancov_default_options@@Base+0x698>
   20b64:	mov	x0, x19
   20b68:	ldr	x30, [sp, #16]
   20b6c:	ldp	x19, x20, [sp], #48
   20b70:	ret
   20b74:	nop
   20b78:	stp	x19, x20, [sp, #-48]!
   20b7c:	mov	x20, x2
   20b80:	add	x2, sp, #0x28
   20b84:	str	x30, [sp, #16]
   20b88:	bl	20ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   20b8c:	mov	x19, x0
   20b90:	ldr	x0, [sp, #40]
   20b94:	cbz	x0, 20ba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42e4>
   20b98:	bl	14d08 <__sanitizer_set_report_fd@@Base+0x1de8>
   20b9c:	str	x0, [x20]
   20ba0:	ldr	x0, [sp, #40]
   20ba4:	mov	x1, #0x0                   	// #0
   20ba8:	bl	cde8 <__sancov_default_options@@Base+0x698>
   20bac:	mov	x0, x19
   20bb0:	ldr	x30, [sp, #16]
   20bb4:	ldp	x19, x20, [sp], #48
   20bb8:	ret
   20bbc:	nop
   20bc0:	stp	x19, x20, [sp, #-48]!
   20bc4:	mov	x20, x0
   20bc8:	stp	x21, x22, [sp, #16]
   20bcc:	mov	x21, x2
   20bd0:	stp	x23, x30, [sp, #32]
   20bd4:	mov	x23, x1
   20bd8:	bl	14b40 <__sanitizer_set_report_fd@@Base+0x1c20>
   20bdc:	cbz	x0, 20c4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x438c>
   20be0:	mov	x19, x0
   20be4:	sub	x22, x0, x20
   20be8:	mov	x2, #0x0                   	// #0
   20bec:	mov	x1, #0x0                   	// #0
   20bf0:	add	x0, x22, #0x1
   20bf4:	bl	cb90 <__sancov_default_options@@Base+0x440>
   20bf8:	str	x0, [x21]
   20bfc:	mov	x1, x20
   20c00:	mov	x2, x22
   20c04:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   20c08:	ldr	x0, [x21]
   20c0c:	strb	wzr, [x0, x22]
   20c10:	ldrb	w0, [x19]
   20c14:	cbnz	w0, 20c2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x436c>
   20c18:	mov	x0, x19
   20c1c:	ldp	x21, x22, [sp, #16]
   20c20:	ldp	x23, x30, [sp, #32]
   20c24:	ldp	x19, x20, [sp], #48
   20c28:	ret
   20c2c:	mov	x0, x23
   20c30:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   20c34:	add	x19, x19, x0
   20c38:	mov	x0, x19
   20c3c:	ldp	x21, x22, [sp, #16]
   20c40:	ldp	x23, x30, [sp, #32]
   20c44:	ldp	x19, x20, [sp], #48
   20c48:	ret
   20c4c:	mov	x0, x20
   20c50:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   20c54:	mov	x22, x0
   20c58:	add	x19, x20, x0
   20c5c:	b	20be8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4328>
   20c60:	stp	x19, x20, [sp, #-64]!
   20c64:	stp	x21, x22, [sp, #16]
   20c68:	mov	x21, x0
   20c6c:	stp	x23, x30, [sp, #32]
   20c70:	add	x23, x0, #0x70
   20c74:	mov	x0, x23
   20c78:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   20c7c:	ldr	x19, [x21, #208]
   20c80:	cbz	x19, 20cd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4418>
   20c84:	adrp	x22, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>
   20c88:	add	x20, sp, #0x38
   20c8c:	add	x22, x22, #0x850
   20c90:	b	20ca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43e4>
   20c94:	mov	x0, x20
   20c98:	bl	202f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   20c9c:	ldr	x19, [x19, #8]
   20ca0:	cbz	x19, 20cd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4418>
   20ca4:	mov	x1, x21
   20ca8:	mov	x0, x20
   20cac:	bl	202d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   20cb0:	ldr	x1, [x19]
   20cb4:	ldr	x1, [x1, #16]
   20cb8:	cmp	x1, x22
   20cbc:	b.eq	20c94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43d4>  // b.none
   20cc0:	mov	x0, x19
   20cc4:	blr	x1
   20cc8:	mov	x0, x20
   20ccc:	bl	202f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   20cd0:	ldr	x19, [x19, #8]
   20cd4:	cbnz	x19, 20ca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43e4>
   20cd8:	mov	x0, x23
   20cdc:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   20ce0:	ldp	x21, x22, [sp, #16]
   20ce4:	ldp	x23, x30, [sp, #32]
   20ce8:	ldp	x19, x20, [sp], #64
   20cec:	ret
   20cf0:	stp	x19, x20, [sp, #-80]!
   20cf4:	stp	x21, x22, [sp, #16]
   20cf8:	mov	x21, x0
   20cfc:	stp	x25, x30, [sp, #48]
   20d00:	add	x25, x0, #0x70
   20d04:	mov	x0, x25
   20d08:	stp	x23, x24, [sp, #32]
   20d0c:	mov	x24, x1
   20d10:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   20d14:	ldr	x19, [x21, #208]
   20d18:	cbz	x19, 20d94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d4>
   20d1c:	adrp	x22, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4740>
   20d20:	add	x20, sp, #0x48
   20d24:	add	x22, x22, #0x948
   20d28:	b	20d3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x447c>
   20d2c:	mov	x0, x20
   20d30:	bl	202f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   20d34:	ldr	x19, [x19, #8]
   20d38:	cbz	x19, 20d94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d4>
   20d3c:	mov	x1, x21
   20d40:	mov	x0, x20
   20d44:	bl	202d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   20d48:	ldr	x2, [x19]
   20d4c:	ldr	x2, [x2, #24]
   20d50:	cmp	x2, x22
   20d54:	b.eq	20d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x446c>  // b.none
   20d58:	mov	x1, x24
   20d5c:	mov	x0, x19
   20d60:	blr	x2
   20d64:	mov	x23, x0
   20d68:	cbz	x0, 20d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x446c>
   20d6c:	mov	x0, x20
   20d70:	bl	202f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   20d74:	mov	x0, x25
   20d78:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   20d7c:	mov	x0, x23
   20d80:	ldp	x21, x22, [sp, #16]
   20d84:	ldp	x23, x24, [sp, #32]
   20d88:	ldp	x25, x30, [sp, #48]
   20d8c:	ldp	x19, x20, [sp], #80
   20d90:	ret
   20d94:	mov	x1, x24
   20d98:	mov	x0, x21
   20d9c:	bl	21e50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5590>
   20da0:	mov	x23, x0
   20da4:	mov	x0, x25
   20da8:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   20dac:	mov	x0, x23
   20db0:	ldp	x21, x22, [sp, #16]
   20db4:	ldp	x23, x24, [sp, #32]
   20db8:	ldp	x25, x30, [sp, #48]
   20dbc:	ldp	x19, x20, [sp], #80
   20dc0:	ret
   20dc4:	nop
   20dc8:	stp	x19, x30, [sp, #-16]!
   20dcc:	mov	x19, x0
   20dd0:	add	x0, x0, #0x28
   20dd4:	bl	17608 <__sanitizer_set_report_fd@@Base+0x46e8>
   20dd8:	add	x0, x19, #0x48
   20ddc:	bl	17718 <__sanitizer_set_report_fd@@Base+0x47f8>
   20de0:	ldr	x0, [x19, #56]
   20de4:	cbz	x0, 20df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4538>
   20de8:	mov	w0, #0x1                   	// #1
   20dec:	strb	w0, [x19, #104]
   20df0:	ldp	x19, x30, [sp], #16
   20df4:	ret
   20df8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   20dfc:	add	x0, x0, #0x2f0
   20e00:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   20e04:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   20e08:	stp	x19, x20, [sp, #-32]!
   20e0c:	mov	x19, x0
   20e10:	mov	x20, x1
   20e14:	ldrb	w2, [x0, #104]
   20e18:	stp	x21, x30, [sp, #16]
   20e1c:	add	x21, x0, #0x28
   20e20:	cbz	w2, 20e40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4580>
   20e24:	mov	x0, x21
   20e28:	bl	20858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   20e2c:	cbz	x0, 20e3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x457c>
   20e30:	ldp	x21, x30, [sp, #16]
   20e34:	ldp	x19, x20, [sp], #32
   20e38:	ret
   20e3c:	mov	x0, x19
   20e40:	bl	20dc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4508>
   20e44:	mov	x1, x20
   20e48:	mov	x0, x21
   20e4c:	bl	20858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   20e50:	cbnz	x0, 20e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4570>
   20e54:	ldr	x0, [x19, #88]
   20e58:	cbz	x0, 20e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4570>
   20e5c:	mov	x1, x20
   20e60:	add	x0, x19, #0x48
   20e64:	ldp	x21, x30, [sp, #16]
   20e68:	ldp	x19, x20, [sp], #32
   20e6c:	b	20858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   20e70:	stp	x19, x20, [sp, #-48]!
   20e74:	mov	x20, x4
   20e78:	mov	x19, x1
   20e7c:	stp	x21, x22, [sp, #16]
   20e80:	mov	x22, x2
   20e84:	mov	x21, x3
   20e88:	str	x30, [sp, #32]
   20e8c:	bl	20e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4548>
   20e90:	cbz	x0, 20ec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4604>
   20e94:	mov	x5, x0
   20e98:	mov	w0, #0x1                   	// #1
   20e9c:	ldr	x30, [sp, #32]
   20ea0:	ldp	x2, x1, [x5]
   20ea4:	str	x2, [x22]
   20ea8:	sub	x1, x19, x1
   20eac:	str	x1, [x21]
   20eb0:	ldr	w1, [x5, #24]
   20eb4:	str	w1, [x20]
   20eb8:	ldp	x21, x22, [sp, #16]
   20ebc:	ldp	x19, x20, [sp], #48
   20ec0:	ret
   20ec4:	mov	w0, #0x0                   	// #0
   20ec8:	ldp	x21, x22, [sp, #16]
   20ecc:	ldr	x30, [sp, #32]
   20ed0:	ldp	x19, x20, [sp], #48
   20ed4:	ret
   20ed8:	stp	x19, x20, [sp, #-64]!
   20edc:	mov	x20, x0
   20ee0:	mov	x19, x1
   20ee4:	stp	x21, x22, [sp, #16]
   20ee8:	add	x22, x0, #0x70
   20eec:	mov	x0, x22
   20ef0:	mov	x21, x2
   20ef4:	stp	x23, x24, [sp, #32]
   20ef8:	mov	x23, x3
   20efc:	str	x30, [sp, #48]
   20f00:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   20f04:	mov	x1, x19
   20f08:	mov	x0, x20
   20f0c:	bl	20e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4548>
   20f10:	cbz	x0, 20f54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4694>
   20f14:	ldp	x1, x2, [x0]
   20f18:	mov	w24, #0x1                   	// #1
   20f1c:	sub	x19, x19, x2
   20f20:	str	x19, [x23]
   20f24:	cbz	x21, 20f34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4674>
   20f28:	mov	x0, x20
   20f2c:	bl	1ff28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3668>
   20f30:	str	x0, [x21]
   20f34:	mov	x0, x22
   20f38:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   20f3c:	mov	w0, w24
   20f40:	ldp	x21, x22, [sp, #16]
   20f44:	ldp	x23, x24, [sp, #32]
   20f48:	ldr	x30, [sp, #48]
   20f4c:	ldp	x19, x20, [sp], #64
   20f50:	ret
   20f54:	mov	x0, x22
   20f58:	mov	w24, #0x0                   	// #0
   20f5c:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   20f60:	mov	w0, w24
   20f64:	ldp	x21, x22, [sp, #16]
   20f68:	ldp	x23, x24, [sp, #32]
   20f6c:	ldr	x30, [sp, #48]
   20f70:	ldp	x19, x20, [sp], #64
   20f74:	ret
   20f78:	stp	x19, x20, [sp, #-80]!
   20f7c:	mov	x20, x0
   20f80:	stp	x23, x24, [sp, #32]
   20f84:	add	x24, x0, #0x70
   20f88:	mov	x0, x24
   20f8c:	stp	x21, x22, [sp, #16]
   20f90:	mov	x21, x1
   20f94:	str	x30, [sp, #48]
   20f98:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   20f9c:	mov	x0, x21
   20fa0:	bl	1fe08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3548>
   20fa4:	mov	x1, x21
   20fa8:	mov	x23, x0
   20fac:	mov	x0, x20
   20fb0:	bl	20e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4548>
   20fb4:	cbz	x0, 21024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4764>
   20fb8:	mov	x2, x0
   20fbc:	add	x0, x23, #0x8
   20fc0:	ldr	w3, [x2, #24]
   20fc4:	ldp	x1, x2, [x2]
   20fc8:	sub	x2, x21, x2
   20fcc:	bl	1fda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e8>
   20fd0:	ldr	x19, [x20, #208]
   20fd4:	cbz	x19, 21024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4764>
   20fd8:	add	x22, sp, #0x48
   20fdc:	b	20fec <__sanitizer_get_module_and_offset_for_pc@@Base+0x472c>
   20fe0:	bl	202f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   20fe4:	ldr	x19, [x19, #8]
   20fe8:	cbz	x19, 21024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4764>
   20fec:	mov	x1, x20
   20ff0:	mov	x0, x22
   20ff4:	bl	202d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   20ff8:	ldr	x3, [x19]
   20ffc:	mov	x1, x21
   21000:	mov	x2, x23
   21004:	mov	x0, x19
   21008:	ldr	x3, [x3]
   2100c:	blr	x3
   21010:	mov	w1, w0
   21014:	tst	w1, #0xff
   21018:	mov	x0, x22
   2101c:	b.eq	20fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4720>  // b.none
   21020:	bl	202f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   21024:	mov	x0, x24
   21028:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   2102c:	mov	x0, x23
   21030:	ldp	x21, x22, [sp, #16]
   21034:	ldp	x23, x24, [sp, #32]
   21038:	ldr	x30, [sp, #48]
   2103c:	ldp	x19, x20, [sp], #80
   21040:	ret
   21044:	nop
   21048:	stp	x19, x20, [sp, #-96]!
   2104c:	stp	x25, x26, [sp, #48]
   21050:	add	x25, x0, #0x70
   21054:	stp	x21, x22, [sp, #16]
   21058:	mov	x22, x0
   2105c:	mov	x21, x2
   21060:	mov	x0, x25
   21064:	stp	x23, x24, [sp, #32]
   21068:	mov	x24, x1
   2106c:	str	x30, [sp, #64]
   21070:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   21074:	mov	x1, x24
   21078:	mov	x0, x22
   2107c:	bl	20e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4548>
   21080:	cbz	x0, 2112c <__sanitizer_get_module_and_offset_for_pc@@Base+0x486c>
   21084:	mov	x1, x0
   21088:	mov	x0, x21
   2108c:	add	x23, sp, #0x58
   21090:	ldp	x19, x20, [x1]
   21094:	ldr	w26, [x1, #24]
   21098:	bl	1fea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35e0>
   2109c:	mov	x0, x19
   210a0:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   210a4:	ldr	x19, [x22, #208]
   210a8:	sub	x20, x24, x20
   210ac:	stp	x0, x20, [x21]
   210b0:	str	w26, [x21, #16]
   210b4:	cbnz	x19, 210c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4808>
   210b8:	b	21124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4864>
   210bc:	bl	202f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   210c0:	ldr	x19, [x19, #8]
   210c4:	cbz	x19, 21124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4864>
   210c8:	mov	x1, x22
   210cc:	mov	x0, x23
   210d0:	bl	202d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   210d4:	ldr	x3, [x19]
   210d8:	mov	x2, x21
   210dc:	mov	x1, x24
   210e0:	mov	x0, x19
   210e4:	ldr	x3, [x3, #8]
   210e8:	blr	x3
   210ec:	mov	w20, w0
   210f0:	ands	w20, w20, #0xff
   210f4:	mov	x0, x23
   210f8:	b.eq	210bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x47fc>  // b.none
   210fc:	bl	202f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   21100:	mov	x0, x25
   21104:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   21108:	mov	w0, w20
   2110c:	ldp	x21, x22, [sp, #16]
   21110:	ldp	x23, x24, [sp, #32]
   21114:	ldp	x25, x26, [sp, #48]
   21118:	ldr	x30, [sp, #64]
   2111c:	ldp	x19, x20, [sp], #96
   21120:	ret
   21124:	mov	w20, #0x1                   	// #1
   21128:	b	21100 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>
   2112c:	mov	w20, #0x0                   	// #0
   21130:	b	21100 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>
   21134:	nop
   21138:	stp	x19, x20, [sp, #-128]!
   2113c:	mov	w19, #0x1                   	// #1
   21140:	stp	x21, x22, [sp, #16]
   21144:	mov	x21, x0
   21148:	mov	x0, x21
   2114c:	stp	x25, x26, [sp, #48]
   21150:	add	x25, sp, #0x70
   21154:	mov	x22, x1
   21158:	mov	x2, x25
   2115c:	stp	x23, x24, [sp, #32]
   21160:	adrp	x24, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21164:	stp	x27, x28, [sp, #64]
   21168:	add	x26, sp, #0x78
   2116c:	adrp	x27, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21170:	str	x30, [sp, #80]
   21174:	add	x27, x27, #0x428
   21178:	str	x1, [sp, #104]
   2117c:	add	x1, x24, #0xad0
   21180:	str	xzr, [sp, #112]
   21184:	bl	20ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   21188:	ldr	x1, [sp, #112]
   2118c:	mov	x21, x0
   21190:	cbz	x1, 212ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x49ec>
   21194:	ldrb	w0, [x1]
   21198:	cbz	w0, 21358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>
   2119c:	mov	x23, x22
   211a0:	add	x20, x22, #0x8
   211a4:	cbz	w19, 212f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a34>
   211a8:	str	x1, [x20, #32]
   211ac:	mov	x0, x21
   211b0:	add	x1, x24, #0xad0
   211b4:	mov	x2, x26
   211b8:	str	xzr, [sp, #120]
   211bc:	bl	20ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   211c0:	ldr	x1, [sp, #120]
   211c4:	mov	x21, x0
   211c8:	cbz	x1, 21338 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a78>
   211cc:	mov	x0, x1
   211d0:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   211d4:	cbz	x0, 21258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4998>
   211d8:	sub	x19, x0, #0x1
   211dc:	mov	w28, #0x2                   	// #2
   211e0:	ldr	x0, [sp, #120]
   211e4:	add	x19, x0, x19
   211e8:	ldrb	w1, [x19]
   211ec:	cmp	x0, x19
   211f0:	b.cc	21204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4944>  // b.lo, b.ul, b.last
   211f4:	b	21210 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4950>
   211f8:	ldrb	w1, [x19, #-1]!
   211fc:	cmp	x0, x19
   21200:	b.eq	21210 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4950>  // b.none
   21204:	sub	w2, w1, #0x30
   21208:	cmp	w2, #0x9
   2120c:	b.ls	211f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4938>  // b.plast
   21210:	cmp	w1, #0x3a
   21214:	b.ne	2124c <__sanitizer_get_module_and_offset_for_pc@@Base+0x498c>  // b.any
   21218:	ldrb	w1, [x19, #1]
   2121c:	sub	w1, w1, #0x30
   21220:	cmp	w1, #0x9
   21224:	b.hi	2124c <__sanitizer_get_module_and_offset_for_pc@@Base+0x498c>  // b.pmore
   21228:	ldr	w1, [x20, #56]
   2122c:	add	x0, x19, #0x1
   21230:	str	w1, [x20, #60]
   21234:	bl	14d08 <__sanitizer_set_report_fd@@Base+0x1de8>
   21238:	str	w0, [x20, #56]
   2123c:	strb	wzr, [x19]
   21240:	cmp	w28, #0x1
   21244:	b.ne	212e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a24>  // b.any
   21248:	ldr	x0, [sp, #120]
   2124c:	add	x2, x23, #0x38
   21250:	mov	x1, x27
   21254:	bl	20ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   21258:	ldr	x0, [sp, #120]
   2125c:	mov	x1, #0x0                   	// #0
   21260:	adrp	x19, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21264:	bl	cde8 <__sancov_default_options@@Base+0x698>
   21268:	ldr	x0, [x20, #32]
   2126c:	add	x1, x19, #0x348
   21270:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   21274:	cbz	w0, 21324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a64>
   21278:	ldr	x0, [x20, #48]
   2127c:	add	x1, x19, #0x348
   21280:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   21284:	cbz	w0, 212cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a0c>
   21288:	mov	w19, #0x0                   	// #0
   2128c:	mov	x0, x21
   21290:	add	x1, x24, #0xad0
   21294:	mov	x2, x25
   21298:	str	xzr, [sp, #112]
   2129c:	bl	20ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   212a0:	mov	x21, x0
   212a4:	ldr	x1, [sp, #112]
   212a8:	cbnz	x1, 21194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48d4>
   212ac:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   212b0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   212b4:	add	x2, x2, #0x308
   212b8:	add	x0, x0, #0x2a0
   212bc:	mov	x4, #0x0                   	// #0
   212c0:	mov	x3, #0x0                   	// #0
   212c4:	mov	w1, #0x12c                 	// #300
   212c8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   212cc:	ldr	x0, [x20, #48]
   212d0:	mov	x1, #0x0                   	// #0
   212d4:	mov	w19, #0x0                   	// #0
   212d8:	bl	cde8 <__sancov_default_options@@Base+0x698>
   212dc:	str	xzr, [x20, #48]
   212e0:	b	2128c <__sanitizer_get_module_and_offset_for_pc@@Base+0x49cc>
   212e4:	sub	x19, x19, #0x1
   212e8:	mov	w28, #0x1                   	// #1
   212ec:	ldr	x0, [sp, #120]
   212f0:	b	211e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4928>
   212f4:	ldr	x0, [x22, #8]
   212f8:	bl	1fe08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3548>
   212fc:	add	x20, x0, #0x8
   21300:	ldp	x1, x2, [x22, #16]
   21304:	mov	x23, x0
   21308:	ldr	w3, [x22, #32]
   2130c:	mov	x0, x20
   21310:	bl	1fda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e8>
   21314:	ldp	x0, x1, [sp, #104]
   21318:	str	x23, [x0]
   2131c:	str	x23, [sp, #104]
   21320:	b	211a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48e8>
   21324:	ldr	x0, [x20, #32]
   21328:	mov	x1, #0x0                   	// #0
   2132c:	bl	cde8 <__sancov_default_options@@Base+0x698>
   21330:	str	xzr, [x20, #32]
   21334:	b	21278 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49b8>
   21338:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2133c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21340:	add	x2, x2, #0x328
   21344:	add	x0, x0, #0x2a0
   21348:	mov	x4, #0x0                   	// #0
   2134c:	mov	x3, #0x0                   	// #0
   21350:	mov	w1, #0x10d                 	// #269
   21354:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21358:	mov	x0, x1
   2135c:	mov	x1, #0x0                   	// #0
   21360:	bl	cde8 <__sancov_default_options@@Base+0x698>
   21364:	ldp	x21, x22, [sp, #16]
   21368:	ldp	x23, x24, [sp, #32]
   2136c:	ldp	x25, x26, [sp, #48]
   21370:	ldp	x27, x28, [sp, #64]
   21374:	ldr	x30, [sp, #80]
   21378:	ldp	x19, x20, [sp], #128
   2137c:	ret
   21380:	stp	x19, x20, [sp, #-32]!
   21384:	adrp	x20, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21388:	add	x20, x20, #0xad0
   2138c:	mov	x19, x1
   21390:	add	x2, x1, #0x28
   21394:	mov	x1, x20
   21398:	str	x30, [sp, #16]
   2139c:	bl	20ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   213a0:	add	x2, x19, #0x30
   213a4:	adrp	x1, 39000 <__asan_backtrace_vector_release@@Base+0x3320>
   213a8:	add	x1, x1, #0x840
   213ac:	bl	20b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b8>
   213b0:	add	x2, x19, #0x38
   213b4:	mov	x1, x20
   213b8:	ldr	x30, [sp, #16]
   213bc:	ldp	x19, x20, [sp], #32
   213c0:	b	20b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b8>
   213c4:	nop
   213c8:	add	x4, x0, #0x4, lsl #12
   213cc:	str	x30, [sp, #-16]!
   213d0:	adrp	x3, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   213d4:	mov	x5, #0xffffffffffffffff    	// #-1
   213d8:	add	x3, x3, #0xef0
   213dc:	stp	x3, x1, [x0]
   213e0:	str	x5, [x0, #16]
   213e4:	str	xzr, [x0, #16408]
   213e8:	strh	wzr, [x4, #32]
   213ec:	strb	w2, [x4, #34]
   213f0:	cbz	x1, 21404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b44>
   213f4:	ldrb	w0, [x1]
   213f8:	cbz	w0, 21424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b64>
   213fc:	ldr	x30, [sp], #16
   21400:	ret
   21404:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21408:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2140c:	add	x2, x2, #0x350
   21410:	add	x0, x0, #0x2a0
   21414:	mov	x4, #0x0                   	// #0
   21418:	mov	x3, #0x0                   	// #0
   2141c:	mov	w1, #0x18f                 	// #399
   21420:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21424:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21428:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2142c:	add	x2, x2, #0x368
   21430:	add	x0, x0, #0x2a0
   21434:	mov	x4, #0x0                   	// #0
   21438:	mov	x3, #0x0                   	// #0
   2143c:	mov	w1, #0x190                 	// #400
   21440:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21444:	nop
   21448:	stp	x19, x20, [sp, #-32]!
   2144c:	mov	x19, x0
   21450:	adrp	x3, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   21454:	add	x3, x3, #0xec0
   21458:	stp	x21, x30, [sp, #16]
   2145c:	mov	x0, x2
   21460:	stp	x3, xzr, [x19]
   21464:	mov	x21, x1
   21468:	mov	x1, #0x4028                	// #16424
   2146c:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   21470:	mov	x20, x0
   21474:	mov	x1, x21
   21478:	mov	w2, #0x0                   	// #0
   2147c:	bl	213c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b08>
   21480:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   21484:	add	x0, x0, #0xe98
   21488:	ldp	x21, x30, [sp, #16]
   2148c:	str	x0, [x20]
   21490:	str	x20, [x19, #16]
   21494:	ldp	x19, x20, [sp], #32
   21498:	ret
   2149c:	nop
   214a0:	stp	x19, x30, [sp, #-16]!
   214a4:	mov	x19, x0
   214a8:	ldr	w0, [x0, #16]
   214ac:	cmn	w0, #0x1
   214b0:	b.eq	214b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bf8>  // b.none
   214b4:	bl	18050 <__sanitizer_set_report_fd@@Base+0x5130>
   214b8:	ldr	w0, [x19, #20]
   214bc:	cmn	w0, #0x1
   214c0:	b.eq	214c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c08>  // b.none
   214c4:	bl	18050 <__sanitizer_set_report_fd@@Base+0x5130>
   214c8:	mov	x0, x19
   214cc:	ldp	x19, x30, [sp], #16
   214d0:	b	21b70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52b0>
   214d4:	nop
   214d8:	cbnz	x2, 214e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c24>
   214dc:	mov	w0, #0x1                   	// #1
   214e0:	ret
   214e4:	stp	x19, x20, [sp, #-48]!
   214e8:	mov	x20, x0
   214ec:	mov	x19, x2
   214f0:	ldr	w0, [x0, #20]
   214f4:	add	x3, sp, #0x28
   214f8:	mov	x4, #0x0                   	// #0
   214fc:	str	x30, [sp, #16]
   21500:	str	xzr, [sp, #40]
   21504:	bl	180a8 <__sanitizer_set_report_fd@@Base+0x5188>
   21508:	tst	w0, #0xff
   2150c:	b.eq	2152c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c6c>  // b.none
   21510:	ldr	x0, [sp, #40]
   21514:	cmp	x0, x19
   21518:	b.ne	2152c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c6c>  // b.any
   2151c:	mov	w0, #0x1                   	// #1
   21520:	ldr	x30, [sp, #16]
   21524:	ldp	x19, x20, [sp], #48
   21528:	ret
   2152c:	ldr	w1, [x20, #20]
   21530:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21534:	add	x0, x0, #0x388
   21538:	bl	1a328 <OnPrint@@Base+0x398>
   2153c:	mov	w0, #0x0                   	// #0
   21540:	ldr	x30, [sp, #16]
   21544:	ldp	x19, x20, [sp], #48
   21548:	ret
   2154c:	nop
   21550:	stp	x19, x20, [sp, #-32]!
   21554:	mov	x19, x0
   21558:	ldr	w0, [x0, #16]
   2155c:	str	x30, [sp, #16]
   21560:	cmn	w0, #0x1
   21564:	b.eq	215dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d1c>  // b.none
   21568:	ldr	w0, [x19, #20]
   2156c:	cmn	w0, #0x1
   21570:	b.eq	215dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d1c>  // b.none
   21574:	mov	x20, x1
   21578:	mov	x0, x1
   2157c:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   21580:	mov	x2, x0
   21584:	mov	x1, x20
   21588:	mov	x0, x19
   2158c:	bl	214d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c18>
   21590:	tst	w0, #0xff
   21594:	b.eq	215dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d1c>  // b.none
   21598:	mov	x20, x19
   2159c:	adrp	x0, 20000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>
   215a0:	add	x0, x0, #0xa38
   215a4:	mov	x2, #0x4000                	// #16384
   215a8:	ldr	x1, [x20], #24
   215ac:	ldr	x3, [x1, #16]
   215b0:	mov	x1, x20
   215b4:	cmp	x3, x0
   215b8:	mov	x0, x19
   215bc:	b.ne	215f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d30>  // b.any
   215c0:	bl	20900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4040>
   215c4:	and	w0, w0, #0xff
   215c8:	cbz	w0, 215dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d1c>
   215cc:	mov	x0, x20
   215d0:	ldr	x30, [sp, #16]
   215d4:	ldp	x19, x20, [sp], #32
   215d8:	ret
   215dc:	mov	x20, #0x0                   	// #0
   215e0:	mov	x0, x20
   215e4:	ldr	x30, [sp, #16]
   215e8:	ldp	x19, x20, [sp], #32
   215ec:	ret
   215f0:	blr	x3
   215f4:	and	w0, w0, #0xff
   215f8:	b	215c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d08>
   215fc:	nop
   21600:	stp	x19, x20, [sp, #-48]!
   21604:	mov	x19, x0
   21608:	stp	x21, x22, [sp, #16]
   2160c:	add	x22, x0, #0x4, lsl #12
   21610:	ldrb	w0, [x22, #32]
   21614:	str	x30, [sp, #40]
   21618:	cbnz	w0, 2169c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ddc>
   2161c:	mov	x20, x1
   21620:	str	x23, [sp, #32]
   21624:	ldr	x23, [x19, #8]
   21628:	bl	f788 <__sancov_default_options@@Base+0x3038>
   2162c:	mov	x21, x0
   21630:	cbz	x0, 21680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   21634:	mov	x0, x23
   21638:	bl	f258 <__sancov_default_options@@Base+0x2b08>
   2163c:	mov	x1, x0
   21640:	cbz	x0, 21680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   21644:	mov	x0, x21
   21648:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   2164c:	cbnz	w0, 21680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   21650:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21654:	add	x0, x0, #0x3b8
   21658:	bl	1a328 <OnPrint@@Base+0x398>
   2165c:	mov	w0, #0x1                   	// #1
   21660:	strb	w0, [x22, #32]
   21664:	mov	x2, #0x0                   	// #0
   21668:	mov	x0, x2
   2166c:	ldp	x21, x22, [sp, #16]
   21670:	ldr	x23, [sp, #32]
   21674:	ldr	x30, [sp, #40]
   21678:	ldp	x19, x20, [sp], #48
   2167c:	ret
   21680:	ldr	x0, [x19, #16408]
   21684:	cmp	x0, #0x4
   21688:	b.ls	216cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e0c>  // b.plast
   2168c:	nop
   21690:	ldrb	w0, [x22, #32]
   21694:	cbz	w0, 216fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e3c>
   21698:	ldr	x23, [sp, #32]
   2169c:	mov	x2, #0x0                   	// #0
   216a0:	mov	x0, x2
   216a4:	ldp	x21, x22, [sp, #16]
   216a8:	ldr	x30, [sp, #40]
   216ac:	ldp	x19, x20, [sp], #48
   216b0:	ret
   216b4:	bl	214a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4be0>
   216b8:	ldr	x0, [x19, #16408]
   216bc:	add	x0, x0, #0x1
   216c0:	str	x0, [x19, #16408]
   216c4:	cmp	x0, #0x4
   216c8:	b.hi	21690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dd0>  // b.pmore
   216cc:	mov	x1, x20
   216d0:	mov	x0, x19
   216d4:	bl	21550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c90>
   216d8:	mov	x2, x0
   216dc:	mov	x0, x19
   216e0:	cbz	x2, 216b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4df4>
   216e4:	mov	x0, x2
   216e8:	ldp	x21, x22, [sp, #16]
   216ec:	ldr	x23, [sp, #32]
   216f0:	ldr	x30, [sp, #40]
   216f4:	ldp	x19, x20, [sp], #48
   216f8:	ret
   216fc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21700:	add	x0, x0, #0x3f0
   21704:	b	21658 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d98>
   21708:	stp	x19, x20, [sp, #-32]!
   2170c:	mov	w7, w4
   21710:	mov	x4, x2
   21714:	str	x30, [sp, #16]
   21718:	cbz	x2, 21858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f98>
   2171c:	and	w1, w1, #0xff
   21720:	mov	x5, x3
   21724:	cmp	w1, #0x0
   21728:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2172c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21730:	add	x3, x3, #0x428
   21734:	add	x1, x1, #0x430
   21738:	mov	x19, x0
   2173c:	add	x20, x0, #0x18
   21740:	csel	x3, x1, x3, ne  // ne = any
   21744:	cbz	w7, 217ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eec>
   21748:	cmp	w7, #0x5
   2174c:	b.eq	21874 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fb4>  // b.none
   21750:	b.hi	217fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f3c>  // b.pmore
   21754:	cmp	w7, #0x3
   21758:	b.eq	2184c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f8c>  // b.none
   2175c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21760:	cmp	w7, #0x4
   21764:	add	x1, x1, #0xb18
   21768:	b.ne	217e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>  // b.any
   2176c:	nop
   21770:	mov	x6, x5
   21774:	mov	x0, x20
   21778:	mov	x5, x1
   2177c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21780:	mov	x1, #0x4000                	// #16384
   21784:	add	x2, x2, #0x488
   21788:	bl	19f98 <OnPrint@@Base+0x8>
   2178c:	mov	w1, #0x3fff                	// #16383
   21790:	cmp	w0, w1
   21794:	b.gt	217cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
   21798:	mov	x1, x20
   2179c:	ldr	x0, [x19, #16]
   217a0:	ldr	x30, [sp, #16]
   217a4:	ldp	x19, x20, [sp], #32
   217a8:	b	21600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d40>
   217ac:	mov	x1, #0x4000                	// #16384
   217b0:	mov	x0, x20
   217b4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   217b8:	add	x2, x2, #0x450
   217bc:	bl	19f98 <OnPrint@@Base+0x8>
   217c0:	mov	w1, #0x3fff                	// #16383
   217c4:	cmp	w0, w1
   217c8:	b.le	21798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ed8>
   217cc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   217d0:	add	x0, x0, #0x460
   217d4:	bl	1a328 <OnPrint@@Base+0x398>
   217d8:	mov	x0, #0x0                   	// #0
   217dc:	ldr	x30, [sp, #16]
   217e0:	ldp	x19, x20, [sp], #32
   217e4:	ret
   217e8:	cmp	w7, #0x1
   217ec:	b.ne	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f58>  // b.any
   217f0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   217f4:	add	x1, x1, #0xb00
   217f8:	b	21770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   217fc:	cmp	w7, #0x7
   21800:	b.eq	21840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f80>  // b.none
   21804:	cmp	w7, #0x8
   21808:	b.ne	2182c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f6c>  // b.any
   2180c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21810:	add	x1, x1, #0xb20
   21814:	b	21770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   21818:	cmp	w7, #0x2
   2181c:	b.ne	21880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fc0>  // b.any
   21820:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21824:	add	x1, x1, #0xaf8
   21828:	b	21770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   2182c:	cmp	w7, #0x6
   21830:	b.ne	21880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fc0>  // b.any
   21834:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21838:	add	x1, x1, #0xb28
   2183c:	b	21770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   21840:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21844:	add	x1, x1, #0xaf0
   21848:	b	21770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   2184c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21850:	add	x1, x1, #0xb10
   21854:	b	21770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   21858:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2185c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21860:	add	x2, x2, #0x438
   21864:	add	x0, x0, #0x2a0
   21868:	mov	x3, #0x0                   	// #0
   2186c:	mov	w1, #0x173                 	// #371
   21870:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21874:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21878:	add	x1, x1, #0xb08
   2187c:	b	21770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   21880:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   21884:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   21888:	add	x2, x2, #0xb38
   2188c:	add	x0, x0, #0x1a8
   21890:	mov	x4, #0x0                   	// #0
   21894:	mov	x3, #0x0                   	// #0
   21898:	mov	w1, #0x2a9                 	// #681
   2189c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   218a0:	stp	x19, x30, [sp, #-16]!
   218a4:	mov	x19, x2
   218a8:	mov	w1, #0x0                   	// #0
   218ac:	ldr	w4, [x2, #32]
   218b0:	ldr	x2, [x2, #16]
   218b4:	ldr	x3, [x19, #24]
   218b8:	bl	21708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e48>
   218bc:	cbnz	x0, 218cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x500c>
   218c0:	mov	w0, #0x0                   	// #0
   218c4:	ldp	x19, x30, [sp], #16
   218c8:	ret
   218cc:	mov	x1, x19
   218d0:	bl	21138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4878>
   218d4:	mov	w0, #0x1                   	// #1
   218d8:	ldp	x19, x30, [sp], #16
   218dc:	ret
   218e0:	stp	x19, x20, [sp, #-32]!
   218e4:	mov	x19, x2
   218e8:	mov	x20, x1
   218ec:	ldr	w4, [x2, #16]
   218f0:	mov	w1, #0x1                   	// #1
   218f4:	ldr	x2, [x2]
   218f8:	ldr	x3, [x19, #8]
   218fc:	str	x30, [sp, #16]
   21900:	bl	21708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e48>
   21904:	cbnz	x0, 21918 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5058>
   21908:	mov	w0, #0x0                   	// #0
   2190c:	ldr	x30, [sp, #16]
   21910:	ldp	x19, x20, [sp], #32
   21914:	ret
   21918:	mov	x1, x19
   2191c:	bl	21380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac0>
   21920:	ldr	x1, [x19, #48]
   21924:	mov	w0, #0x1                   	// #1
   21928:	ldr	x2, [x19, #8]
   2192c:	add	x1, x20, x1
   21930:	ldr	x30, [sp, #16]
   21934:	sub	x1, x1, x2
   21938:	str	x1, [x19, #48]
   2193c:	ldp	x19, x20, [sp], #32
   21940:	ret
   21944:	nop
   21948:	mov	x0, #0x0                   	// #0
   2194c:	ret
   21950:	cmp	x2, #0x1
   21954:	mov	w0, #0x0                   	// #0
   21958:	b.ls	2196c <__sanitizer_get_module_and_offset_for_pc@@Base+0x50ac>  // b.plast
   2195c:	add	x1, x1, x2
   21960:	ldurb	w2, [x1, #-1]
   21964:	cmp	w2, #0xa
   21968:	b.eq	21970 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50b0>  // b.none
   2196c:	ret
   21970:	ldurb	w0, [x1, #-2]
   21974:	cmp	w0, #0xa
   21978:	cset	w0, eq  // eq = none
   2197c:	ret
   21980:	adrp	x3, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21984:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21988:	adrp	x4, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2198c:	add	x4, x4, #0x188
   21990:	ldr	x5, [x3, #4056]
   21994:	add	x3, x0, #0x170
   21998:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2199c:	add	x0, x0, #0x160
   219a0:	ldrb	w5, [x5, #180]
   219a4:	stp	x4, xzr, [x2, #16]
   219a8:	cmp	w5, #0x0
   219ac:	csel	x0, x0, x3, ne  // ne = any
   219b0:	stp	x1, x0, [x2]
   219b4:	ret
   219b8:	str	x30, [sp, #-16]!
   219bc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   219c0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   219c4:	add	x2, x2, #0x1a0
   219c8:	add	x0, x0, #0x1c0
   219cc:	mov	x4, #0x0                   	// #0
   219d0:	mov	x3, #0x0                   	// #0
   219d4:	mov	w1, #0x4e                  	// #78
   219d8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   219dc:	nop
   219e0:	str	x30, [sp, #-16]!
   219e4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   219e8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   219ec:	add	x2, x2, #0x1a0
   219f0:	add	x0, x0, #0x1c0
   219f4:	mov	x4, #0x0                   	// #0
   219f8:	mov	x3, #0x0                   	// #0
   219fc:	mov	w1, #0x57                  	// #87
   21a00:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21a04:	nop
   21a08:	cmp	x2, #0x8
   21a0c:	b.hi	21a18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5158>  // b.pmore
   21a10:	mov	w0, #0x0                   	// #0
   21a14:	ret
   21a18:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21a1c:	str	x30, [sp, #-16]!
   21a20:	sub	x2, x2, #0x8
   21a24:	add	x0, x1, x2
   21a28:	add	x1, x3, #0x8d8
   21a2c:	mov	x2, #0x8                   	// #8
   21a30:	bl	145c8 <__sanitizer_set_report_fd@@Base+0x16a8>
   21a34:	cmp	w0, #0x0
   21a38:	cset	w0, eq  // eq = none
   21a3c:	ldr	x30, [sp], #16
   21a40:	ret
   21a44:	nop
   21a48:	adrp	x1, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   21a4c:	stp	x19, x20, [sp, #-32]!
   21a50:	ldr	x20, [x1, #952]
   21a54:	str	x30, [sp, #16]
   21a58:	cbz	x20, 21a88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51c8>
   21a5c:	mov	x19, x0
   21a60:	bl	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   21a64:	mov	x16, x20
   21a68:	mov	x1, x0
   21a6c:	mov	x0, x19
   21a70:	mov	w4, #0x0                   	// #0
   21a74:	ldr	x30, [sp, #16]
   21a78:	mov	x3, #0x0                   	// #0
   21a7c:	ldp	x19, x20, [sp], #32
   21a80:	mov	x2, #0x0                   	// #0
   21a84:	br	x16
   21a88:	mov	x0, #0x0                   	// #0
   21a8c:	ldr	x30, [sp, #16]
   21a90:	ldp	x19, x20, [sp], #32
   21a94:	ret
   21a98:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21a9c:	stp	x19, x30, [sp, #-16]!
   21aa0:	mov	x19, x0
   21aa4:	ldr	x1, [x1, #3880]
   21aa8:	cbz	x1, 21ac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5208>
   21aac:	mov	x3, #0x0                   	// #0
   21ab0:	mov	x2, #0x0                   	// #0
   21ab4:	mov	x1, #0x0                   	// #0
   21ab8:	bl	6620 <__cxa_demangle@plt>
   21abc:	cbz	x0, 21ac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5208>
   21ac0:	ldp	x19, x30, [sp], #16
   21ac4:	ret
   21ac8:	mov	x0, x19
   21acc:	ldp	x19, x30, [sp], #16
   21ad0:	ret
   21ad4:	nop
   21ad8:	cbz	x0, 21af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5238>
   21adc:	ldrb	w2, [x0]
   21ae0:	cmp	w2, #0x5f
   21ae4:	b.ne	21af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5238>  // b.any
   21ae8:	ldrb	w1, [x0, #1]
   21aec:	cmp	w1, #0x54
   21af0:	b.ne	21af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5238>  // b.any
   21af4:	b	21a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5188>
   21af8:	mov	x0, #0x0                   	// #0
   21afc:	ret
   21b00:	cbz	x0, 21b64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52a4>
   21b04:	stp	x19, x30, [sp, #-16]!
   21b08:	mov	x19, x0
   21b0c:	ldrb	w1, [x0]
   21b10:	cmp	w1, #0x5f
   21b14:	b.ne	21b34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5274>  // b.any
   21b18:	ldrb	w1, [x0, #1]
   21b1c:	cmp	w1, #0x54
   21b20:	b.ne	21b34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5274>  // b.any
   21b24:	bl	21a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5188>
   21b28:	cbz	x0, 21b34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5274>
   21b2c:	ldp	x19, x30, [sp], #16
   21b30:	ret
   21b34:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21b38:	ldr	x0, [x0, #3880]
   21b3c:	cbz	x0, 21b58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5298>
   21b40:	mov	x0, x19
   21b44:	mov	x3, #0x0                   	// #0
   21b48:	mov	x2, #0x0                   	// #0
   21b4c:	mov	x1, #0x0                   	// #0
   21b50:	bl	6620 <__cxa_demangle@plt>
   21b54:	cbnz	x0, 21b2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x526c>
   21b58:	mov	x0, x19
   21b5c:	ldp	x19, x30, [sp], #16
   21b60:	ret
   21b64:	mov	x0, #0x0                   	// #0
   21b68:	ret
   21b6c:	nop
   21b70:	stp	x19, x20, [sp, #-128]!
   21b74:	mov	x19, x0
   21b78:	ldr	x0, [x0, #8]
   21b7c:	stp	x21, x22, [sp, #16]
   21b80:	str	x30, [sp, #56]
   21b84:	bl	15730 <__sanitizer_set_report_fd@@Base+0x2810>
   21b88:	ands	w21, w0, #0xff
   21b8c:	b.ne	21bb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52f0>  // b.any
   21b90:	add	x19, x19, #0x4, lsl #12
   21b94:	ldrb	w0, [x19, #33]
   21b98:	cbz	w0, 21c50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5390>
   21b9c:	mov	w0, w21
   21ba0:	ldp	x21, x22, [sp, #16]
   21ba4:	ldr	x30, [sp, #56]
   21ba8:	ldp	x19, x20, [sp], #128
   21bac:	ret
   21bb0:	mov	x2, #0x8                   	// #8
   21bb4:	mov	w1, #0x0                   	// #0
   21bb8:	add	x0, sp, #0x40
   21bbc:	stp	x23, x24, [sp, #32]
   21bc0:	add	x23, sp, #0x50
   21bc4:	str	x25, [sp, #48]
   21bc8:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   21bcc:	mov	x24, x23
   21bd0:	mov	x20, x23
   21bd4:	add	x0, sp, #0x48
   21bd8:	mov	x22, #0x0                   	// #0
   21bdc:	mov	w21, #0x0                   	// #0
   21be0:	mov	x2, #0x8                   	// #8
   21be4:	mov	w1, #0x0                   	// #0
   21be8:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   21bec:	mov	x0, x20
   21bf0:	bl	6400 <pipe@plt>
   21bf4:	cmn	w0, #0x1
   21bf8:	b.eq	21c78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53b8>  // b.none
   21bfc:	ldr	w0, [x20]
   21c00:	cmp	w0, #0x2
   21c04:	b.le	21c1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x535c>
   21c08:	ldr	w0, [x20, #4]
   21c0c:	cmp	w0, #0x2
   21c10:	b.le	21c1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x535c>
   21c14:	cbnz	x22, 21ce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>
   21c18:	mov	x22, x20
   21c1c:	add	w21, w21, #0x1
   21c20:	add	x20, x20, #0x8
   21c24:	cmp	w21, #0x5
   21c28:	b.ne	21bec <__sanitizer_get_module_and_offset_for_pc@@Base+0x532c>  // b.any
   21c2c:	cbnz	x22, 21cc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5408>
   21c30:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21c34:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21c38:	add	x2, x2, #0x580
   21c3c:	add	x0, x0, #0x4f0
   21c40:	mov	x4, #0x0                   	// #0
   21c44:	mov	x3, #0x0                   	// #0
   21c48:	mov	w1, #0x87                  	// #135
   21c4c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21c50:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21c54:	add	x0, x0, #0x550
   21c58:	bl	1a328 <OnPrint@@Base+0x398>
   21c5c:	mov	w0, #0x1                   	// #1
   21c60:	strb	w0, [x19, #33]
   21c64:	mov	w0, w21
   21c68:	ldp	x21, x22, [sp, #16]
   21c6c:	ldr	x30, [sp, #56]
   21c70:	ldp	x19, x20, [sp], #128
   21c74:	ret
   21c78:	cbz	w21, 21ca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53e0>
   21c7c:	mov	w19, #0x0                   	// #0
   21c80:	ldr	w0, [x24]
   21c84:	add	w19, w19, #0x1
   21c88:	add	x24, x24, #0x8
   21c8c:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   21c90:	ldur	w0, [x24, #-4]
   21c94:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   21c98:	cmp	w19, w21
   21c9c:	b.ne	21c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53c0>  // b.any
   21ca0:	bl	6790 <__errno_location@plt>
   21ca4:	mov	x1, x0
   21ca8:	mov	w21, #0x0                   	// #0
   21cac:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21cb0:	add	x0, x0, #0x5a8
   21cb4:	ldr	w1, [x1]
   21cb8:	bl	1a328 <OnPrint@@Base+0x398>
   21cbc:	ldp	x23, x24, [sp, #32]
   21cc0:	ldr	x25, [sp, #48]
   21cc4:	b	21b9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   21cc8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21ccc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21cd0:	add	x2, x2, #0x590
   21cd4:	add	x0, x0, #0x4f0
   21cd8:	mov	x4, #0x0                   	// #0
   21cdc:	mov	x3, #0x0                   	// #0
   21ce0:	mov	w1, #0x88                  	// #136
   21ce4:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21ce8:	cbz	w21, 21d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5458>
   21cec:	mov	w25, #0x0                   	// #0
   21cf0:	cmp	x24, x22
   21cf4:	b.eq	21d08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5448>  // b.none
   21cf8:	ldr	w0, [x24]
   21cfc:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   21d00:	ldr	w0, [x24, #4]
   21d04:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   21d08:	add	w25, w25, #0x1
   21d0c:	add	x24, x24, #0x8
   21d10:	cmp	w25, w21
   21d14:	b.ne	21cf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5430>  // b.any
   21d18:	add	x0, x19, #0x4, lsl #12
   21d1c:	ldr	w2, [x20]
   21d20:	ldr	x1, [x22]
   21d24:	ldrb	w21, [x0, #34]
   21d28:	ldr	x0, [x20]
   21d2c:	stp	x1, x0, [sp, #64]
   21d30:	ldr	w3, [x22, #4]
   21d34:	cbnz	w21, 21e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5570>
   21d38:	ldp	x4, x0, [x19]
   21d3c:	adrp	x1, 22000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5740>
   21d40:	add	x1, x1, #0x440
   21d44:	ldr	x4, [x4, #8]
   21d48:	cmp	x4, x1
   21d4c:	b.ne	21dc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5500>  // b.any
   21d50:	ldr	x4, [x19, #16424]
   21d54:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21d58:	add	x1, x1, #0x4a0
   21d5c:	stp	x0, x1, [sp, #80]
   21d60:	stp	x4, xzr, [sp, #96]
   21d64:	mov	x1, x23
   21d68:	mov	w4, #0xffffffff            	// #-1
   21d6c:	bl	19390 <__sanitizer_set_report_fd@@Base+0x6470>
   21d70:	mov	w20, w0
   21d74:	cmp	w0, #0x0
   21d78:	b.lt	21df4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>  // b.tstop
   21d7c:	ldr	w1, [sp, #64]
   21d80:	ldr	w0, [sp, #76]
   21d84:	stp	w1, w0, [x19, #16]
   21d88:	b.eq	21e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5550>  // b.none
   21d8c:	mov	w0, #0xa                   	// #10
   21d90:	bl	18b20 <__sanitizer_set_report_fd@@Base+0x5c00>
   21d94:	mov	w0, w20
   21d98:	bl	194e0 <__sanitizer_set_report_fd@@Base+0x65c0>
   21d9c:	ands	w21, w0, #0xff
   21da0:	b.eq	21ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x551c>  // b.none
   21da4:	mov	w0, w21
   21da8:	ldp	x21, x22, [sp, #16]
   21dac:	ldp	x23, x24, [sp, #32]
   21db0:	ldr	x25, [sp, #48]
   21db4:	ldr	x30, [sp, #56]
   21db8:	ldp	x19, x20, [sp], #128
   21dbc:	ret
   21dc0:	mov	x1, x0
   21dc4:	mov	x2, x23
   21dc8:	mov	x0, x19
   21dcc:	blr	x4
   21dd0:	ldp	w3, w2, [sp, #68]
   21dd4:	ldr	x0, [x19, #8]
   21dd8:	b	21d64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54a4>
   21ddc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21de0:	add	x0, x0, #0x608
   21de4:	bl	1a328 <OnPrint@@Base+0x398>
   21de8:	ldp	x23, x24, [sp, #32]
   21dec:	ldr	x25, [sp, #48]
   21df0:	b	21b9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   21df4:	ldr	w0, [sp, #64]
   21df8:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   21dfc:	ldr	w0, [sp, #76]
   21e00:	bl	15518 <__sanitizer_set_report_fd@@Base+0x25f8>
   21e04:	ldp	x23, x24, [sp, #32]
   21e08:	ldr	x25, [sp, #48]
   21e0c:	b	21b9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   21e10:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21e14:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21e18:	add	x2, x2, #0x5f8
   21e1c:	add	x0, x0, #0x4f0
   21e20:	mov	x4, #0x0                   	// #0
   21e24:	mov	x3, #0x0                   	// #0
   21e28:	mov	w1, #0xef                  	// #239
   21e2c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21e30:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21e34:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21e38:	add	x2, x2, #0x1a0
   21e3c:	add	x0, x0, #0x4f0
   21e40:	mov	x4, #0x0                   	// #0
   21e44:	mov	x3, #0x0                   	// #0
   21e48:	mov	w1, #0xde                  	// #222
   21e4c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21e50:	mov	x0, x1
   21e54:	b	21b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5240>
   21e58:	stp	x19, x20, [sp, #-128]!
   21e5c:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21e60:	ldr	x0, [x20, #4056]
   21e64:	stp	x21, x22, [sp, #16]
   21e68:	ldrb	w0, [x0]
   21e6c:	str	x30, [sp, #56]
   21e70:	cbnz	w0, 21ef8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5638>
   21e74:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21e78:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21e7c:	ldr	x0, [x0, #3896]
   21e80:	ldr	w0, [x0]
   21e84:	sxtw	x0, w0
   21e88:	cmp	x0, #0x1
   21e8c:	b.hi	21edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x561c>  // b.pmore
   21e90:	mov	x19, #0x0                   	// #0
   21e94:	mov	x2, #0x0                   	// #0
   21e98:	ldr	x0, [x22, #3968]
   21e9c:	mov	x1, #0xf0                  	// #240
   21ea0:	stp	x2, x19, [sp, #104]
   21ea4:	str	x19, [sp, #120]
   21ea8:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   21eac:	ldp	x4, x5, [sp, #104]
   21eb0:	add	x1, sp, #0x40
   21eb4:	ldr	x2, [sp, #120]
   21eb8:	mov	x19, x0
   21ebc:	stp	x4, x5, [sp, #64]
   21ec0:	str	x2, [sp, #80]
   21ec4:	bl	20160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a0>
   21ec8:	mov	x0, x19
   21ecc:	ldp	x21, x22, [sp, #16]
   21ed0:	ldr	x30, [sp, #56]
   21ed4:	ldp	x19, x20, [sp], #128
   21ed8:	ret
   21edc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21ee0:	add	x0, x0, #0x648
   21ee4:	bl	1a328 <OnPrint@@Base+0x398>
   21ee8:	mov	x19, #0x0                   	// #0
   21eec:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21ef0:	mov	x2, #0x0                   	// #0
   21ef4:	b	21e98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   21ef8:	bl	cb28 <__sancov_default_options@@Base+0x3d8>
   21efc:	tst	w0, #0xff
   21f00:	b.eq	21f54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5694>  // b.none
   21f04:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21f08:	ldr	x0, [x0, #3896]
   21f0c:	ldr	w0, [x0]
   21f10:	sxtw	x0, w0
   21f14:	cmp	x0, #0x1
   21f18:	b.hi	21fb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56f8>  // b.pmore
   21f1c:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21f20:	ldr	x0, [x22, #3968]
   21f24:	bl	207e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f28>
   21f28:	mov	x19, x0
   21f2c:	cbz	x0, 21fd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5718>
   21f30:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21f34:	ldr	x0, [x0, #3896]
   21f38:	ldr	w0, [x0]
   21f3c:	sxtw	x0, w0
   21f40:	cmp	x0, #0x1
   21f44:	b.hi	21fc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5708>  // b.pmore
   21f48:	mov	x2, #0x1                   	// #1
   21f4c:	str	xzr, [x19, #8]
   21f50:	b	21e98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   21f54:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21f58:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21f5c:	ldr	x1, [x1, #3856]
   21f60:	ldr	x0, [x0, #3888]
   21f64:	cmp	x1, #0x0
   21f68:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   21f6c:	b.eq	21f1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x565c>  // b.none
   21f70:	adrp	x22, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21f74:	mov	x1, #0x4010                	// #16400
   21f78:	ldr	x0, [x22, #3968]
   21f7c:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   21f80:	mov	x19, x0
   21f84:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   21f88:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   21f8c:	add	x0, x0, #0xf70
   21f90:	ldr	x1, [x1, #3896]
   21f94:	stp	x0, xzr, [x19]
   21f98:	ldr	w0, [x1]
   21f9c:	sxtw	x0, w0
   21fa0:	cmp	x0, #0x1
   21fa4:	b.ls	21f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5688>  // b.plast
   21fa8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21fac:	add	x0, x0, #0x698
   21fb0:	bl	1a328 <OnPrint@@Base+0x398>
   21fb4:	b	21f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5688>
   21fb8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21fbc:	add	x0, x0, #0x668
   21fc0:	bl	1a328 <OnPrint@@Base+0x398>
   21fc4:	b	21f1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x565c>
   21fc8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   21fcc:	add	x0, x0, #0x6b8
   21fd0:	bl	1a328 <OnPrint@@Base+0x398>
   21fd4:	b	21f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5688>
   21fd8:	ldr	x0, [x20, #4056]
   21fdc:	stp	x23, x24, [sp, #32]
   21fe0:	ldr	x23, [x0, #8]
   21fe4:	cbz	x23, 22074 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b4>
   21fe8:	mov	x0, x23
   21fec:	bl	f258 <__sancov_default_options@@Base+0x2b08>
   21ff0:	ldrb	w1, [x23]
   21ff4:	mov	x21, x0
   21ff8:	cbz	w1, 221f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5934>
   21ffc:	adrp	x19, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22000:	add	x19, x19, #0x708
   22004:	mov	x1, x19
   22008:	mov	x0, x21
   2200c:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   22010:	cbnz	w0, 22080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57c0>
   22014:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   22018:	ldr	x0, [x0, #3896]
   2201c:	ldr	w0, [x0]
   22020:	sxtw	x0, w0
   22024:	cmp	x0, #0x1
   22028:	b.hi	22060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57a0>  // b.pmore
   2202c:	ldr	x20, [x22, #3968]
   22030:	mov	x1, #0x4018                	// #16408
   22034:	mov	x0, x20
   22038:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   2203c:	mov	x2, x20
   22040:	mov	x1, x23
   22044:	mov	x19, x0
   22048:	bl	21448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b88>
   2204c:	cbz	x19, 221ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x592c>
   22050:	mov	x2, #0x1                   	// #1
   22054:	ldp	x23, x24, [sp, #32]
   22058:	str	xzr, [x19, #8]
   2205c:	b	21e98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   22060:	mov	x1, x23
   22064:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22068:	add	x0, x0, #0x718
   2206c:	bl	1a328 <OnPrint@@Base+0x398>
   22070:	b	2202c <__sanitizer_get_module_and_offset_for_pc@@Base+0x576c>
   22074:	adrp	x21, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22078:	add	x21, x21, #0x428
   2207c:	b	21ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x573c>
   22080:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22084:	mov	x0, x21
   22088:	add	x1, x1, #0x750
   2208c:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   22090:	cbz	w0, 22400 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b40>
   22094:	adrp	x24, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22098:	add	x24, x24, #0x790
   2209c:	mov	x0, x21
   220a0:	mov	x1, x24
   220a4:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   220a8:	cbnz	w0, 22224 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5964>
   220ac:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   220b0:	ldr	x0, [x0, #3896]
   220b4:	ldr	w0, [x0]
   220b8:	str	x25, [sp, #48]
   220bc:	sxtw	x0, w0
   220c0:	cmp	x0, #0x1
   220c4:	b.ls	220d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5818>  // b.plast
   220c8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   220cc:	mov	x1, x23
   220d0:	add	x0, x0, #0x7a0
   220d4:	bl	1a328 <OnPrint@@Base+0x398>
   220d8:	ldr	x21, [x22, #3968]
   220dc:	adrp	x24, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   220e0:	mov	x1, #0x38                  	// #56
   220e4:	mov	x0, x21
   220e8:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   220ec:	ldr	x25, [x24, #4016]
   220f0:	mov	x19, x0
   220f4:	add	x20, x0, #0x20
   220f8:	adrp	x1, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   220fc:	add	x1, x1, #0xf40
   22100:	stp	x23, x21, [x19, #16]
   22104:	ldr	x0, [x25]
   22108:	stp	x1, xzr, [x19]
   2210c:	stp	xzr, xzr, [x20, #8]
   22110:	str	xzr, [x19, #32]
   22114:	cbz	x0, 2238c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5acc>
   22118:	sub	x1, x0, #0x1
   2211c:	tst	x1, x0
   22120:	b.ne	22398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad8>  // b.any
   22124:	add	x21, x0, #0x7
   22128:	neg	x0, x0
   2212c:	and	x21, x21, x0
   22130:	mov	w2, #0x0                   	// #0
   22134:	mov	x0, x21
   22138:	adrp	x25, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   2213c:	add	x1, x25, #0x178
   22140:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   22144:	ldr	x2, [x20, #16]
   22148:	mov	x23, x0
   2214c:	ldr	x1, [x19, #32]
   22150:	lsl	x2, x2, #3
   22154:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   22158:	ldr	x1, [x20, #8]
   2215c:	ldr	x0, [x19, #32]
   22160:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   22164:	str	x23, [x19, #32]
   22168:	str	x21, [x20, #8]
   2216c:	cmp	x21, #0x7f
   22170:	b.ls	2217c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58bc>  // b.plast
   22174:	ldr	x25, [sp, #48]
   22178:	b	22050 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5790>
   2217c:	ldr	x3, [x20, #16]
   22180:	cmp	x3, #0x10
   22184:	b.hi	223c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b00>  // b.pmore
   22188:	ldr	x24, [x24, #4016]
   2218c:	ldr	x0, [x24]
   22190:	cbz	x0, 223a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ae8>
   22194:	sub	x1, x0, #0x1
   22198:	tst	x1, x0
   2219c:	b.ne	22398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad8>  // b.any
   221a0:	add	x21, x0, #0x7f
   221a4:	neg	x0, x0
   221a8:	and	x21, x21, x0
   221ac:	add	x1, x25, #0x178
   221b0:	mov	w2, #0x0                   	// #0
   221b4:	mov	x0, x21
   221b8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   221bc:	mov	x23, x0
   221c0:	ldr	x2, [x20, #16]
   221c4:	ldr	x1, [x19, #32]
   221c8:	lsl	x2, x2, #3
   221cc:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   221d0:	ldr	x1, [x20, #8]
   221d4:	ldr	x0, [x19, #32]
   221d8:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   221dc:	ldr	x25, [sp, #48]
   221e0:	str	x23, [x19, #32]
   221e4:	str	x21, [x20, #8]
   221e8:	b	22050 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5790>
   221ec:	ldp	x23, x24, [sp, #32]
   221f0:	b	21e90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d0>
   221f4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   221f8:	ldr	x0, [x0, #3896]
   221fc:	ldr	w0, [x0]
   22200:	sxtw	x0, w0
   22204:	cmp	x0, #0x1
   22208:	b.ls	221ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x592c>  // b.plast
   2220c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22210:	add	x0, x0, #0x6d8
   22214:	bl	1a328 <OnPrint@@Base+0x398>
   22218:	mov	x2, #0x0                   	// #0
   2221c:	ldp	x23, x24, [sp, #32]
   22220:	b	21e98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   22224:	cbnz	x23, 223e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b28>
   22228:	mov	x0, x19
   2222c:	bl	12c98 <__sanitizer_cov_dump@@Base+0x2688>
   22230:	mov	x21, x0
   22234:	cbz	x0, 22284 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c4>
   22238:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2223c:	ldr	x0, [x0, #3896]
   22240:	ldr	w0, [x0]
   22244:	sxtw	x0, w0
   22248:	cmp	x0, #0x1
   2224c:	b.ls	22260 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59a0>  // b.plast
   22250:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22254:	mov	x1, x21
   22258:	add	x0, x0, #0x868
   2225c:	bl	1a328 <OnPrint@@Base+0x398>
   22260:	ldr	x20, [x22, #3968]
   22264:	mov	x1, #0x4018                	// #16408
   22268:	mov	x0, x20
   2226c:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   22270:	mov	x2, x20
   22274:	mov	x1, x21
   22278:	mov	x19, x0
   2227c:	bl	21448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b88>
   22280:	b	2204c <__sanitizer_get_module_and_offset_for_pc@@Base+0x578c>
   22284:	ldr	x20, [x20, #4056]
   22288:	ldrb	w0, [x20, #16]
   2228c:	cbz	w0, 221ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x592c>
   22290:	mov	x0, x24
   22294:	bl	12c98 <__sanitizer_cov_dump@@Base+0x2688>
   22298:	mov	x21, x0
   2229c:	cbz	x0, 221ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x592c>
   222a0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   222a4:	ldr	x0, [x0, #3896]
   222a8:	ldr	w0, [x0]
   222ac:	str	x25, [sp, #48]
   222b0:	sxtw	x0, w0
   222b4:	cmp	x0, #0x1
   222b8:	b.ls	222cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a0c>  // b.plast
   222bc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   222c0:	mov	x1, x21
   222c4:	add	x0, x0, #0x890
   222c8:	bl	1a328 <OnPrint@@Base+0x398>
   222cc:	ldr	x23, [x22, #3968]
   222d0:	adrp	x24, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   222d4:	mov	x1, #0x38                  	// #56
   222d8:	mov	x0, x23
   222dc:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   222e0:	ldr	x25, [x24, #4016]
   222e4:	mov	x19, x0
   222e8:	add	x20, x0, #0x20
   222ec:	adrp	x1, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   222f0:	add	x1, x1, #0xf40
   222f4:	stp	x21, x23, [x19, #16]
   222f8:	ldr	x0, [x25]
   222fc:	stp	x1, xzr, [x19]
   22300:	stp	xzr, xzr, [x20, #8]
   22304:	str	xzr, [x19, #32]
   22308:	cbz	x0, 223b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af4>
   2230c:	sub	x1, x0, #0x1
   22310:	tst	x1, x0
   22314:	b.ne	22398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad8>  // b.any
   22318:	add	x21, x0, #0x7
   2231c:	neg	x0, x0
   22320:	and	x21, x21, x0
   22324:	mov	w2, #0x0                   	// #0
   22328:	mov	x0, x21
   2232c:	adrp	x25, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   22330:	add	x1, x25, #0x178
   22334:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   22338:	ldr	x2, [x20, #16]
   2233c:	mov	x23, x0
   22340:	ldr	x1, [x19, #32]
   22344:	lsl	x2, x2, #3
   22348:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   2234c:	ldr	x1, [x20, #8]
   22350:	ldr	x0, [x19, #32]
   22354:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   22358:	str	x23, [x19, #32]
   2235c:	str	x21, [x20, #8]
   22360:	cmp	x21, #0x7f
   22364:	b.hi	22174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58b4>  // b.pmore
   22368:	ldr	x3, [x20, #16]
   2236c:	cmp	x3, #0x10
   22370:	b.hi	223c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b00>  // b.pmore
   22374:	ldr	x21, [x24, #4016]
   22378:	ldr	x0, [x21]
   2237c:	cbz	x0, 223dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b1c>
   22380:	ldr	x24, [x24, #4016]
   22384:	ldr	x0, [x24]
   22388:	b	22194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d4>
   2238c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   22390:	str	x0, [x25]
   22394:	b	22118 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5858>
   22398:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   2239c:	add	x0, x0, #0x160
   223a0:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   223a4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   223a8:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   223ac:	str	x0, [x24]
   223b0:	b	22194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d4>
   223b4:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   223b8:	str	x0, [x25]
   223bc:	b	2230c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a4c>
   223c0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   223c4:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   223c8:	add	x2, x2, #0x4a0
   223cc:	add	x0, x0, #0x1a8
   223d0:	mov	x4, #0x10                  	// #16
   223d4:	mov	w1, #0x1fd                 	// #509
   223d8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   223dc:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   223e0:	str	x0, [x21]
   223e4:	b	22380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ac0>
   223e8:	mov	x1, x23
   223ec:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   223f0:	add	x0, x0, #0x7d0
   223f4:	str	x25, [sp, #48]
   223f8:	bl	1a328 <OnPrint@@Base+0x398>
   223fc:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   22400:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22404:	add	x0, x0, #0x758
   22408:	str	x25, [sp, #48]
   2240c:	bl	1a328 <OnPrint@@Base+0x398>
   22410:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   22414:	nop
   22418:	str	x30, [sp, #-16]!
   2241c:	bl	20a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   22420:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22424:	mov	x0, #0x0                   	// #0
   22428:	add	x1, x1, #0x8b0
   2242c:	bl	6500 <dlsym@plt>
   22430:	ldr	x30, [sp], #16
   22434:	adrp	x1, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22438:	str	x0, [x1, #952]
   2243c:	b	6570 <dlerror@plt>
   22440:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22444:	add	x3, x3, #0x4a0
   22448:	stp	x1, x3, [x2]
   2244c:	ldr	x0, [x0, #16424]
   22450:	stp	x0, xzr, [x2, #16]
   22454:	ret
   22458:	mov	w0, #0x0                   	// #0
   2245c:	ret
   22460:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   22464:	ldr	x0, [x0, #3904]
   22468:	cbz	x0, 22470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bb0>
   2246c:	b	6680 <__sanitizer_symbolize_flush@plt>
   22470:	ret
   22474:	nop
   22478:	stp	x19, x20, [sp, #-48]!
   2247c:	mov	x19, x2
   22480:	mov	w3, #0x4000                	// #16384
   22484:	stp	x21, x22, [sp, #16]
   22488:	add	x22, x0, #0x10
   2248c:	mov	x21, x1
   22490:	ldp	x0, x1, [x19]
   22494:	mov	x2, x22
   22498:	str	x30, [sp, #32]
   2249c:	bl	6550 <__sanitizer_symbolize_data@plt>
   224a0:	mov	w20, w0
   224a4:	tst	w0, #0xff
   224a8:	b.ne	224c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c00>  // b.any
   224ac:	mov	w0, w20
   224b0:	ldp	x21, x22, [sp, #16]
   224b4:	ldr	x30, [sp, #32]
   224b8:	ldp	x19, x20, [sp], #48
   224bc:	ret
   224c0:	mov	x0, x22
   224c4:	mov	x1, x19
   224c8:	bl	21380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac0>
   224cc:	ldr	x1, [x19, #48]
   224d0:	ldr	x0, [x19, #8]
   224d4:	add	x1, x21, x1
   224d8:	ldp	x21, x22, [sp, #16]
   224dc:	sub	x1, x1, x0
   224e0:	str	x1, [x19, #48]
   224e4:	mov	w0, w20
   224e8:	ldr	x30, [sp, #32]
   224ec:	ldp	x19, x20, [sp], #48
   224f0:	ret
   224f4:	nop
   224f8:	stp	x19, x20, [sp, #-32]!
   224fc:	mov	x19, x2
   22500:	mov	w3, #0x4000                	// #16384
   22504:	stp	x21, x30, [sp, #16]
   22508:	add	x21, x0, #0x10
   2250c:	mov	x2, x21
   22510:	ldp	x0, x1, [x19, #16]
   22514:	bl	6630 <__sanitizer_symbolize_code@plt>
   22518:	mov	w20, w0
   2251c:	tst	w0, #0xff
   22520:	b.ne	22534 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c74>  // b.any
   22524:	mov	w0, w20
   22528:	ldp	x21, x30, [sp, #16]
   2252c:	ldp	x19, x20, [sp], #32
   22530:	ret
   22534:	mov	x1, x19
   22538:	mov	x0, x21
   2253c:	bl	21138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4878>
   22540:	mov	w0, w20
   22544:	ldp	x21, x30, [sp, #16]
   22548:	ldp	x19, x20, [sp], #32
   2254c:	ret
   22550:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   22554:	stp	x19, x20, [sp, #-32]!
   22558:	mov	x20, x1
   2255c:	ldr	x0, [x0, #3808]
   22560:	str	x30, [sp, #24]
   22564:	cbz	x0, 225d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d10>
   22568:	str	x21, [sp, #16]
   2256c:	mov	x21, #0x400                 	// #1024
   22570:	mov	x2, #0x0                   	// #0
   22574:	mov	x1, #0x0                   	// #0
   22578:	mov	x0, x21
   2257c:	bl	cb90 <__sancov_default_options@@Base+0x440>
   22580:	mov	x19, x0
   22584:	mov	w2, w21
   22588:	mov	x0, x20
   2258c:	mov	x1, x19
   22590:	bl	6480 <__sanitizer_symbolize_demangle@plt>
   22594:	cmp	x21, w0, sxtw
   22598:	sxtw	x0, w0
   2259c:	b.cc	225b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cf4>  // b.lo, b.ul, b.last
   225a0:	mov	x0, x19
   225a4:	ldr	x21, [sp, #16]
   225a8:	ldr	x30, [sp, #24]
   225ac:	ldp	x19, x20, [sp], #32
   225b0:	ret
   225b4:	add	x21, x0, #0x1
   225b8:	mov	x1, #0x0                   	// #0
   225bc:	mov	x0, x19
   225c0:	bl	cde8 <__sancov_default_options@@Base+0x698>
   225c4:	cmp	x21, #0x20, lsl #12
   225c8:	b.ls	22570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cb0>  // b.plast
   225cc:	ldr	x21, [sp, #16]
   225d0:	mov	x19, x20
   225d4:	mov	x0, x19
   225d8:	ldr	x30, [sp, #24]
   225dc:	ldp	x19, x20, [sp], #32
   225e0:	ret
   225e4:	nop
   225e8:	stp	x19, x20, [sp, #-144]!
   225ec:	mov	x19, x0
   225f0:	mov	x20, #0x0                   	// #0
   225f4:	ldr	x0, [x0, #48]
   225f8:	stp	x21, x22, [sp, #16]
   225fc:	mov	x22, x2
   22600:	stp	x23, x24, [sp, #32]
   22604:	stp	x25, x30, [sp, #48]
   22608:	str	xzr, [sp, #72]
   2260c:	ldp	x21, x23, [x2, #16]
   22610:	cbnz	x0, 22628 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d68>
   22614:	b	226d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e14>
   22618:	ldr	x0, [x19, #48]
   2261c:	add	x20, x20, #0x1
   22620:	cmp	x0, x20
   22624:	b.ls	226cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e0c>  // b.plast
   22628:	ldr	x1, [x19, #32]
   2262c:	mov	x0, x21
   22630:	lsl	x24, x20, #3
   22634:	ldr	x1, [x1, x20, lsl #3]
   22638:	ldr	x1, [x1, #16424]
   2263c:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   22640:	cbnz	w0, 22618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>
   22644:	ldr	x4, [x19, #48]
   22648:	ldr	x0, [x19, #32]
   2264c:	cmp	x4, x20
   22650:	b.ls	22768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ea8>  // b.plast
   22654:	ldr	x1, [x0, x24]
   22658:	str	x1, [sp, #72]
   2265c:	cbz	x1, 226d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e14>
   22660:	ldr	x1, [x1, #16424]
   22664:	mov	x0, x21
   22668:	bl	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   2266c:	sxtw	x4, w0
   22670:	cbnz	w0, 2274c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e8c>
   22674:	add	x19, sp, #0x50
   22678:	mov	x3, x23
   2267c:	mov	x4, #0xffffffffffffffff    	// #-1
   22680:	mov	x1, #0x40                  	// #64
   22684:	mov	x0, x19
   22688:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2268c:	add	x2, x2, #0x540
   22690:	bl	19f98 <OnPrint@@Base+0x8>
   22694:	ldr	x0, [sp, #72]
   22698:	mov	x1, x19
   2269c:	bl	21600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d40>
   226a0:	mov	w1, #0x0                   	// #0
   226a4:	cbz	x0, 226b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5df4>
   226a8:	mov	x1, x22
   226ac:	bl	21138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4878>
   226b0:	mov	w1, #0x1                   	// #1
   226b4:	mov	w0, w1
   226b8:	ldp	x21, x22, [sp, #16]
   226bc:	ldp	x23, x24, [sp, #32]
   226c0:	ldp	x25, x30, [sp, #48]
   226c4:	ldp	x19, x20, [sp], #144
   226c8:	ret
   226cc:	ldr	x1, [sp, #72]
   226d0:	cbnz	x1, 22660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5da0>
   226d4:	ldr	x0, [x19, #24]
   226d8:	mov	x1, #0x4030                	// #16432
   226dc:	add	x24, x19, #0x20
   226e0:	bl	c9d8 <__sancov_default_options@@Base+0x288>
   226e4:	mov	x20, x0
   226e8:	ldr	x1, [x19, #16]
   226ec:	mov	w2, #0x0                   	// #0
   226f0:	bl	213c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b08>
   226f4:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   226f8:	add	x0, x0, #0xf18
   226fc:	str	x0, [x20]
   22700:	mov	x0, x21
   22704:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1828>
   22708:	str	x20, [sp, #72]
   2270c:	ldr	x4, [x19, #40]
   22710:	ldr	x3, [x24, #16]
   22714:	str	x0, [x20, #16424]
   22718:	lsr	x4, x4, #3
   2271c:	cmp	x3, x4
   22720:	b.hi	22838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f78>  // b.pmore
   22724:	add	x20, x3, #0x1
   22728:	b.eq	22784 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ec4>  // b.none
   2272c:	ldr	x25, [x19, #32]
   22730:	str	x20, [x24, #16]
   22734:	add	x1, sp, #0x48
   22738:	add	x0, x25, x3, lsl #3
   2273c:	mov	x2, #0x8                   	// #8
   22740:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   22744:	ldr	x1, [sp, #72]
   22748:	b	22660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5da0>
   2274c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22750:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22754:	add	x2, x2, #0x4a8
   22758:	add	x0, x0, #0x4f0
   2275c:	mov	x3, #0x0                   	// #0
   22760:	mov	w1, #0x15c                 	// #348
   22764:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22768:	adrp	x2, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   2276c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   22770:	mov	x3, x20
   22774:	add	x2, x2, #0x190
   22778:	add	x0, x0, #0x1a8
   2277c:	mov	w1, #0x1b6                 	// #438
   22780:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22784:	tst	x3, x20
   22788:	b.eq	227c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f04>  // b.none
   2278c:	clz	x2, x20
   22790:	mov	w0, #0x3f                  	// #63
   22794:	sub	w0, w0, w2
   22798:	mov	x2, #0x1                   	// #1
   2279c:	add	w4, w0, #0x1
   227a0:	lsl	x4, x2, x4
   227a4:	cmp	x4, x20
   227a8:	b.ls	22884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fc4>  // b.plast
   227ac:	lsl	x0, x2, x0
   227b0:	cmp	x0, x20
   227b4:	b.cs	228a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fe0>  // b.hs, b.nlast
   227b8:	cmp	x3, x4
   227bc:	b.hi	2285c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f9c>  // b.pmore
   227c0:	mov	x20, x4
   227c4:	adrp	x25, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   227c8:	lsl	x20, x20, #3
   227cc:	ldr	x25, [x25, #4016]
   227d0:	ldr	x0, [x25]
   227d4:	cbz	x0, 22850 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f90>
   227d8:	sub	x1, x0, #0x1
   227dc:	tst	x0, x1
   227e0:	b.ne	22874 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fb4>  // b.any
   227e4:	add	x20, x20, x1
   227e8:	neg	x0, x0
   227ec:	and	x20, x20, x0
   227f0:	mov	w2, #0x0                   	// #0
   227f4:	mov	x0, x20
   227f8:	adrp	x1, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   227fc:	add	x1, x1, #0x178
   22800:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   22804:	ldr	x2, [x24, #16]
   22808:	mov	x25, x0
   2280c:	ldr	x1, [x19, #32]
   22810:	lsl	x2, x2, #3
   22814:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   22818:	ldr	x1, [x24, #8]
   2281c:	ldr	x0, [x19, #32]
   22820:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   22824:	ldr	x3, [x24, #16]
   22828:	str	x25, [x19, #32]
   2282c:	str	x20, [x24, #8]
   22830:	add	x20, x3, #0x1
   22834:	b	22730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e70>
   22838:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   2283c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   22840:	add	x2, x2, #0x428
   22844:	add	x0, x0, #0x1a8
   22848:	mov	w1, #0x1be                 	// #446
   2284c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22850:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   22854:	str	x0, [x25]
   22858:	b	227d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f18>
   2285c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   22860:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   22864:	add	x2, x2, #0x4a0
   22868:	add	x0, x0, #0x1a8
   2286c:	mov	w1, #0x1fd                 	// #509
   22870:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22874:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   22878:	add	x0, x0, #0x160
   2287c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   22880:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   22884:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   22888:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   2288c:	mov	x3, x20
   22890:	add	x2, x2, #0x458
   22894:	add	x0, x0, #0x1a8
   22898:	mov	w1, #0x17b                 	// #379
   2289c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   228a0:	mov	x4, x0
   228a4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   228a8:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   228ac:	mov	x3, x20
   228b0:	add	x2, x2, #0x480
   228b4:	add	x0, x0, #0x1a8
   228b8:	mov	w1, #0x17c                 	// #380
   228bc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   228c0:	stp	x19, x20, [sp, #-32]!
   228c4:	mov	x20, x1
   228c8:	str	x30, [sp, #16]
   228cc:	bl	20a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4178>
   228d0:	mov	w19, w0
   228d4:	tst	w0, #0xff
   228d8:	b.eq	228e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6024>  // b.none
   228dc:	ldrb	w0, [x20]
   228e0:	cbnz	w0, 228f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6034>
   228e4:	mov	w0, w19
   228e8:	ldr	x30, [sp, #16]
   228ec:	ldp	x19, x20, [sp], #32
   228f0:	ret
   228f4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   228f8:	add	x0, x20, #0x1
   228fc:	add	x1, x1, #0x8d8
   22900:	bl	14b40 <__sanitizer_set_report_fd@@Base+0x1c20>
   22904:	cbz	x0, 2291c <__sanitizer_get_module_and_offset_for_pc@@Base+0x605c>
   22908:	strb	wzr, [x0]
   2290c:	mov	w0, w19
   22910:	ldr	x30, [sp, #16]
   22914:	ldp	x19, x20, [sp], #32
   22918:	ret
   2291c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22920:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22924:	add	x2, x2, #0x8c0
   22928:	add	x0, x0, #0x4f0
   2292c:	mov	x4, #0x0                   	// #0
   22930:	mov	x3, #0x0                   	// #0
   22934:	mov	w1, #0x11e                 	// #286
   22938:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2293c:	nop
   22940:	adrp	x3, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22944:	add	x3, x3, #0x3c0
   22948:	mov	x1, #0x0                   	// #0
   2294c:	ldr	x2, [x3, x1, lsl #3]
   22950:	mov	w4, w1
   22954:	add	x1, x1, #0x1
   22958:	cmp	x1, #0x5
   2295c:	cbz	x2, 22970 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60b0>
   22960:	b.ne	2294c <__sanitizer_get_module_and_offset_for_pc@@Base+0x608c>  // b.any
   22964:	mov	w1, #0x0                   	// #0
   22968:	mov	w0, w1
   2296c:	ret
   22970:	mov	w1, #0x1                   	// #1
   22974:	str	x0, [x3, w4, sxtw #3]
   22978:	mov	w0, w1
   2297c:	ret
   22980:	stp	x19, x30, [sp, #-16]!
   22984:	adrp	x19, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22988:	add	x19, x19, #0x3c0
   2298c:	mov	x2, #0x0                   	// #0
   22990:	ldr	x3, [x19, x2, lsl #3]
   22994:	mov	w4, w2
   22998:	add	w1, w2, #0x1
   2299c:	add	x2, x2, #0x1
   229a0:	cmp	x3, x0
   229a4:	b.eq	229bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x60fc>  // b.none
   229a8:	cmp	x2, #0x5
   229ac:	b.ne	22990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60d0>  // b.any
   229b0:	mov	w0, #0x0                   	// #0
   229b4:	ldp	x19, x30, [sp], #16
   229b8:	ret
   229bc:	mov	w2, #0x4                   	// #4
   229c0:	sub	w2, w2, w4
   229c4:	add	x1, x19, w1, sxtw #3
   229c8:	add	x0, x19, w4, sxtw #3
   229cc:	sbfiz	x2, x2, #3, #32
   229d0:	bl	14628 <__sanitizer_set_report_fd@@Base+0x1708>
   229d4:	mov	w0, #0x1                   	// #1
   229d8:	str	xzr, [x19, #32]
   229dc:	ldp	x19, x30, [sp], #16
   229e0:	ret
   229e4:	nop
   229e8:	adrp	x1, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   229ec:	str	x0, [x1, #1000]
   229f0:	ret
   229f4:	nop
   229f8:	stp	x19, x20, [sp, #-32]!
   229fc:	adrp	x20, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22a00:	add	x0, x20, #0x3c0
   22a04:	ldr	x0, [x0, #40]
   22a08:	str	x30, [sp, #16]
   22a0c:	cbz	x0, 22a14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6154>
   22a10:	blr	x0
   22a14:	add	x20, x20, #0x3c0
   22a18:	mov	x19, #0x4                   	// #4
   22a1c:	ldr	x0, [x20, x19, lsl #3]
   22a20:	cbz	x0, 22a28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6168>
   22a24:	blr	x0
   22a28:	sub	x19, x19, #0x1
   22a2c:	cmn	x19, #0x1
   22a30:	b.ne	22a1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x615c>  // b.any
   22a34:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   22a38:	ldr	x0, [x0, #4056]
   22a3c:	ldrb	w1, [x0, #220]
   22a40:	cbz	w1, 22a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6188>
   22a44:	bl	18b30 <__sanitizer_set_report_fd@@Base+0x5c10>
   22a48:	ldr	w0, [x0, #216]
   22a4c:	bl	156d0 <__sanitizer_set_report_fd@@Base+0x27b0>
   22a50:	adrp	x1, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22a54:	str	x0, [x1, #1008]
   22a58:	ret
   22a5c:	nop
   22a60:	stp	x19, x20, [sp, #-48]!
   22a64:	adrp	x6, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22a68:	add	x6, x6, #0x3c0
   22a6c:	add	x5, x6, #0x38
   22a70:	mov	x19, x0
   22a74:	mov	w20, w1
   22a78:	stp	x21, x22, [sp, #16]
   22a7c:	mov	x21, x2
   22a80:	mov	x22, x3
   22a84:	stp	x23, x30, [sp, #32]
   22a88:	mov	x23, x4
   22a8c:	ldxr	w7, [x5]
   22a90:	add	w8, w7, #0x1
   22a94:	stlxr	w9, w8, [x5]
   22a98:	cbnz	w9, 22a8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61cc>
   22a9c:	dmb	ish
   22aa0:	cmp	w7, #0xa
   22aa4:	b.hi	22ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6218>  // b.pmore
   22aa8:	ldr	x5, [x6, #48]
   22aac:	cbz	x5, 22ab4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61f4>
   22ab0:	blr	x5
   22ab4:	mov	x5, x23
   22ab8:	mov	x4, x22
   22abc:	mov	x3, x21
   22ac0:	mov	w2, w20
   22ac4:	mov	x1, x19
   22ac8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22acc:	add	x0, x0, #0x8e8
   22ad0:	bl	1a328 <OnPrint@@Base+0x398>
   22ad4:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   22ad8:	mov	w0, #0x2                   	// #2
   22adc:	bl	18b18 <__sanitizer_set_report_fd@@Base+0x5bf8>
   22ae0:	brk	#0x3e8
   22ae4:	nop

0000000000022ae8 <__sanitizer_set_death_callback@@Base>:
   22ae8:	adrp	x1, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   22aec:	str	x0, [x1, #1000]
   22af0:	ret
   22af4:	nop
   22af8:	ldr	x2, [x0, #32]
   22afc:	cmp	x1, x2
   22b00:	b.eq	22b0c <__sanitizer_set_death_callback@@Base+0x24>  // b.none
   22b04:	mov	w0, #0x0                   	// #0
   22b08:	ret
   22b0c:	ldr	w0, [x0, #112]
   22b10:	tst	w0, #0xfffffffb
   22b14:	cset	w0, ne  // ne = any
   22b18:	ret
   22b1c:	nop
   22b20:	adrp	x2, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   22b24:	add	x2, x2, #0xfa0
   22b28:	str	x2, [x0]
   22b2c:	str	w1, [x0, #8]
   22b30:	str	xzr, [x0, #16]
   22b34:	str	wzr, [x0, #24]
   22b38:	stp	xzr, xzr, [x0, #32]
   22b3c:	strb	wzr, [x0, #48]
   22b40:	str	wzr, [x0, #112]
   22b44:	strh	wzr, [x0, #116]
   22b48:	str	wzr, [x0, #120]
   22b4c:	str	xzr, [x0, #128]
   22b50:	dmb	ish
   22b54:	str	wzr, [x0, #136]
   22b58:	ret
   22b5c:	nop
   22b60:	str	x30, [sp, #-16]!
   22b64:	adrp	x1, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   22b68:	add	x1, x1, #0xfa0
   22b6c:	str	x1, [x0]
   22b70:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22b74:	adrp	x2, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   22b78:	add	x0, x3, #0x918
   22b7c:	add	x2, x2, #0x590
   22b80:	mov	x4, #0x0                   	// #0
   22b84:	mov	x3, #0x0                   	// #0
   22b88:	mov	w1, #0x1b                  	// #27
   22b8c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22b90:	strb	wzr, [x0, #48]
   22b94:	cbz	x1, 22bb8 <__sanitizer_set_death_callback@@Base+0xd0>
   22b98:	stp	x19, x30, [sp, #-16]!
   22b9c:	mov	x19, x0
   22ba0:	mov	x2, #0x40                  	// #64
   22ba4:	add	x0, x0, #0x30
   22ba8:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
   22bac:	strb	wzr, [x19, #111]
   22bb0:	ldp	x19, x30, [sp], #16
   22bb4:	ret
   22bb8:	ret
   22bbc:	nop
   22bc0:	ldr	w2, [x0, #112]
   22bc4:	sub	w2, w2, #0x2
   22bc8:	cmp	w2, #0x1
   22bcc:	b.hi	22c00 <__sanitizer_set_death_callback@@Base+0x118>  // b.pmore
   22bd0:	ldr	x3, [x0]
   22bd4:	adrp	x2, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   22bd8:	add	x1, x2, #0xa68
   22bdc:	mov	w4, #0x4                   	// #4
   22be0:	str	xzr, [x0, #40]
   22be4:	ldr	x2, [x3]
   22be8:	str	w4, [x0, #112]
   22bec:	cmp	x2, x1
   22bf0:	b.ne	22bf8 <__sanitizer_set_death_callback@@Base+0x110>  // b.any
   22bf4:	ret
   22bf8:	mov	x16, x2
   22bfc:	br	x16
   22c00:	str	x30, [sp, #-16]!
   22c04:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22c08:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22c0c:	add	x2, x2, #0x960
   22c10:	add	x0, x0, #0x918
   22c14:	mov	x4, #0x0                   	// #0
   22c18:	mov	x3, #0x0                   	// #0
   22c1c:	mov	w1, #0x27                  	// #39
   22c20:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22c24:	nop
   22c28:	dmb	ish
   22c2c:	mov	w1, #0x1                   	// #1
   22c30:	str	w1, [x0, #136]
   22c34:	ret
   22c38:	ldr	w0, [x0, #136]
   22c3c:	dmb	ish
   22c40:	cmp	w0, #0x0
   22c44:	cset	w0, ne  // ne = any
   22c48:	ret
   22c4c:	nop
   22c50:	ldrb	w3, [x0, #116]
   22c54:	str	x30, [sp, #-16]!
   22c58:	cbnz	w3, 22ca0 <__sanitizer_set_death_callback@@Base+0x1b8>
   22c5c:	ldr	w4, [x0, #112]
   22c60:	cmp	x4, #0x3
   22c64:	b.ne	22cc0 <__sanitizer_set_death_callback@@Base+0x1d8>  // b.any
   22c68:	ldr	x4, [x0]
   22c6c:	adrp	x3, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   22c70:	add	x2, x3, #0xa70
   22c74:	mov	w5, #0x4                   	// #4
   22c78:	str	xzr, [x0, #40]
   22c7c:	ldr	x3, [x4, #8]
   22c80:	str	w5, [x0, #112]
   22c84:	cmp	x3, x2
   22c88:	b.ne	22c94 <__sanitizer_set_death_callback@@Base+0x1ac>  // b.any
   22c8c:	ldr	x30, [sp], #16
   22c90:	ret
   22c94:	ldr	x30, [sp], #16
   22c98:	mov	x16, x3
   22c9c:	br	x16
   22ca0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22ca4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22ca8:	add	x2, x2, #0x9b0
   22cac:	add	x0, x0, #0x918
   22cb0:	mov	x4, #0x1                   	// #1
   22cb4:	mov	x3, #0x0                   	// #0
   22cb8:	mov	w1, #0x38                  	// #56
   22cbc:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22cc0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22cc4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22cc8:	add	x2, x2, #0x9d0
   22ccc:	add	x0, x0, #0x918
   22cd0:	mov	x3, #0x3                   	// #3
   22cd4:	mov	w1, #0x39                  	// #57
   22cd8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22cdc:	nop
   22ce0:	ldrb	w1, [x0, #116]
   22ce4:	cbz	w1, 22d10 <__sanitizer_set_death_callback@@Base+0x228>
   22ce8:	ldr	w1, [x0, #112]
   22cec:	cmp	w1, #0x1
   22cf0:	b.eq	22d10 <__sanitizer_set_death_callback@@Base+0x228>  // b.none
   22cf4:	ldr	x2, [x0]
   22cf8:	adrp	x1, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   22cfc:	add	x1, x1, #0xa78
   22d00:	ldr	x2, [x2, #16]
   22d04:	cmp	x2, x1
   22d08:	b.ne	22d30 <__sanitizer_set_death_callback@@Base+0x248>  // b.any
   22d0c:	ret
   22d10:	ldr	x2, [x0]
   22d14:	mov	w1, #0x3                   	// #3
   22d18:	str	w1, [x0, #112]
   22d1c:	adrp	x1, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   22d20:	add	x1, x1, #0xa78
   22d24:	ldr	x2, [x2, #16]
   22d28:	cmp	x2, x1
   22d2c:	b.eq	22d0c <__sanitizer_set_death_callback@@Base+0x224>  // b.none
   22d30:	mov	x16, x2
   22d34:	br	x16
   22d38:	ldr	x6, [x0]
   22d3c:	strb	w2, [x0, #117]
   22d40:	mov	w7, #0x2                   	// #2
   22d44:	adrp	x5, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   22d48:	add	x5, x5, #0xa80
   22d4c:	ldr	x2, [x6, #24]
   22d50:	str	x1, [x0, #32]
   22d54:	str	w7, [x0, #112]
   22d58:	cmp	x2, x5
   22d5c:	b.ne	22d64 <__sanitizer_set_death_callback@@Base+0x27c>  // b.any
   22d60:	ret
   22d64:	mov	x1, x3
   22d68:	mov	x16, x2
   22d6c:	br	x16
   22d70:	ldr	w6, [x0, #8]
   22d74:	mov	w7, #0x1                   	// #1
   22d78:	str	x2, [x0, #16]
   22d7c:	str	x1, [x0, #40]
   22d80:	str	w7, [x0, #112]
   22d84:	strb	w3, [x0, #116]
   22d88:	cbz	w6, 22d90 <__sanitizer_set_death_callback@@Base+0x2a8>
   22d8c:	str	w4, [x0, #120]
   22d90:	ldr	x1, [x0]
   22d94:	adrp	x2, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   22d98:	add	x2, x2, #0xa88
   22d9c:	ldr	x3, [x1, #32]
   22da0:	cmp	x3, x2
   22da4:	b.ne	22dac <__sanitizer_set_death_callback@@Base+0x2c4>  // b.any
   22da8:	ret
   22dac:	mov	x1, x5
   22db0:	mov	x16, x3
   22db4:	br	x16
   22db8:	strb	wzr, [x0, #48]
   22dbc:	str	wzr, [x0, #112]
   22dc0:	dmb	ish
   22dc4:	str	wzr, [x0, #136]
   22dc8:	ldr	x2, [x0]
   22dcc:	adrp	x1, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   22dd0:	add	x1, x1, #0xa90
   22dd4:	ldr	x2, [x2, #40]
   22dd8:	cmp	x2, x1
   22ddc:	b.ne	22de4 <__sanitizer_set_death_callback@@Base+0x2fc>  // b.any
   22de0:	ret
   22de4:	mov	x16, x2
   22de8:	br	x16
   22dec:	nop
   22df0:	stp	x19, x20, [sp, #-32]!
   22df4:	add	x3, x0, #0xa0
   22df8:	mov	x19, x0
   22dfc:	ldr	x2, [x0, #160]
   22e00:	str	x30, [sp, #16]
   22e04:	str	xzr, [x1, #128]
   22e08:	cbnz	x2, 22e34 <__sanitizer_set_death_callback@@Base+0x34c>
   22e0c:	mov	x0, #0x1                   	// #1
   22e10:	stp	x1, x1, [x3, #8]
   22e14:	mov	x2, x0
   22e18:	str	x0, [x19, #160]
   22e1c:	ldr	w0, [x19, #12]
   22e20:	cmp	x2, x0
   22e24:	b.hi	22e54 <__sanitizer_set_death_callback@@Base+0x36c>  // b.pmore
   22e28:	ldr	x30, [sp, #16]
   22e2c:	ldp	x19, x20, [sp], #32
   22e30:	ret
   22e34:	ldr	x0, [x3, #16]
   22e38:	add	x2, x2, #0x1
   22e3c:	str	x1, [x0, #128]
   22e40:	str	x1, [x3, #16]
   22e44:	ldr	w0, [x19, #12]
   22e48:	str	x2, [x19, #160]
   22e4c:	cmp	x2, x0
   22e50:	b.ls	22e28 <__sanitizer_set_death_callback@@Base+0x340>  // b.plast
   22e54:	ldr	x20, [x19, #168]
   22e58:	ldr	x0, [x20, #128]
   22e5c:	str	x0, [x3, #8]
   22e60:	cbz	x0, 22ee4 <__sanitizer_set_death_callback@@Base+0x3fc>
   22e64:	ldr	w3, [x20, #112]
   22e68:	sub	x2, x2, #0x1
   22e6c:	str	x2, [x19, #160]
   22e70:	cmp	x3, #0x4
   22e74:	b.ne	22eec <__sanitizer_set_death_callback@@Base+0x404>  // b.any
   22e78:	mov	x0, x20
   22e7c:	bl	22db8 <__sanitizer_set_death_callback@@Base+0x2d0>
   22e80:	ldr	w0, [x20, #24]
   22e84:	add	w0, w0, #0x1
   22e88:	str	w0, [x20, #24]
   22e8c:	ldr	w1, [x19, #16]
   22e90:	cmp	w1, #0x0
   22e94:	ccmp	w0, w1, #0x0, ne  // ne = any
   22e98:	b.cs	22e28 <__sanitizer_set_death_callback@@Base+0x340>  // b.hs, b.nlast
   22e9c:	ldr	x0, [x19, #184]
   22ea0:	cbnz	x0, 22ec0 <__sanitizer_set_death_callback@@Base+0x3d8>
   22ea4:	str	xzr, [x20, #128]
   22ea8:	mov	x1, #0x1                   	// #1
   22eac:	stp	x1, x20, [x19, #184]
   22eb0:	str	x20, [x19, #200]
   22eb4:	ldr	x30, [sp, #16]
   22eb8:	ldp	x19, x20, [sp], #32
   22ebc:	ret
   22ec0:	str	xzr, [x20, #128]
   22ec4:	add	x0, x0, #0x1
   22ec8:	ldr	x30, [sp, #16]
   22ecc:	ldr	x2, [x19, #200]
   22ed0:	str	x20, [x2, #128]
   22ed4:	str	x0, [x19, #184]
   22ed8:	str	x20, [x19, #200]
   22edc:	ldp	x19, x20, [sp], #32
   22ee0:	ret
   22ee4:	str	xzr, [x3, #16]
   22ee8:	b	22e64 <__sanitizer_set_death_callback@@Base+0x37c>
   22eec:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22ef0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22ef4:	add	x2, x2, #0x9f8
   22ef8:	add	x0, x0, #0x918
   22efc:	mov	x4, #0x4                   	// #4
   22f00:	mov	w1, #0x143                 	// #323
   22f04:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22f08:	stp	x19, x30, [sp, #-16]!
   22f0c:	mov	x19, x0
   22f10:	add	x0, x0, #0x18
   22f14:	str	x1, [x19]
   22f18:	stp	w2, w3, [x19, #8]
   22f1c:	str	w4, [x19, #16]
   22f20:	bl	159f0 <__sanitizer_set_report_fd@@Base+0x2ad0>
   22f24:	str	wzr, [x19, #112]
   22f28:	ldr	w0, [x19, #8]
   22f2c:	mov	w2, #0x0                   	// #0
   22f30:	stp	xzr, xzr, [x19, #120]
   22f34:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   22f38:	add	x1, x1, #0xa28
   22f3c:	stp	xzr, xzr, [x19, #136]
   22f40:	lsl	x0, x0, #3
   22f44:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   22f48:	stp	x0, xzr, [x19, #152]
   22f4c:	stp	xzr, xzr, [x19, #168]
   22f50:	stp	xzr, xzr, [x19, #184]
   22f54:	str	xzr, [x19, #200]
   22f58:	ldp	x19, x30, [sp], #16
   22f5c:	ret
   22f60:	stp	x19, x20, [sp, #-48]!
   22f64:	mov	x19, x0
   22f68:	mov	x20, x3
   22f6c:	stp	x23, x30, [sp, #32]
   22f70:	add	x23, x0, #0x18
   22f74:	mov	x0, x23
   22f78:	stp	x21, x22, [sp, #16]
   22f7c:	mov	x22, x1
   22f80:	mov	x21, x2
   22f84:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   22f88:	cbz	x22, 22f94 <__sanitizer_set_death_callback@@Base+0x4ac>
   22f8c:	ldr	w0, [x19, #112]
   22f90:	str	x0, [x22]
   22f94:	cbz	x21, 22fa0 <__sanitizer_set_death_callback@@Base+0x4b8>
   22f98:	ldr	x0, [x19, #144]
   22f9c:	str	x0, [x21]
   22fa0:	cbz	x20, 22fac <__sanitizer_set_death_callback@@Base+0x4c4>
   22fa4:	ldr	x0, [x19, #128]
   22fa8:	str	x0, [x20]
   22fac:	mov	x0, x23
   22fb0:	ldp	x21, x22, [sp, #16]
   22fb4:	ldp	x23, x30, [sp, #32]
   22fb8:	ldp	x19, x20, [sp], #48
   22fbc:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   22fc0:	stp	x19, x20, [sp, #-32]!
   22fc4:	mov	x19, x0
   22fc8:	add	x20, x0, #0x18
   22fcc:	mov	x0, x20
   22fd0:	str	x30, [sp, #16]
   22fd4:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   22fd8:	ldr	x19, [x19, #136]
   22fdc:	mov	x0, x20
   22fe0:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   22fe4:	mov	x0, x19
   22fe8:	ldr	x30, [sp, #16]
   22fec:	ldp	x19, x20, [sp], #32
   22ff0:	ret
   22ff4:	nop
   22ff8:	stp	x19, x20, [sp, #-64]!
   22ffc:	mov	x19, x0
   23000:	stp	x25, x30, [sp, #48]
   23004:	add	x25, x0, #0x18
   23008:	mov	x0, x25
   2300c:	stp	x21, x22, [sp, #16]
   23010:	mov	x21, x1
   23014:	mov	w22, w3
   23018:	stp	x23, x24, [sp, #32]
   2301c:	mov	x23, x4
   23020:	and	w24, w2, #0xff
   23024:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   23028:	ldr	x1, [x19, #184]
   2302c:	cbz	x1, 230f8 <__sanitizer_set_death_callback@@Base+0x610>
   23030:	ldr	x0, [x19, #192]
   23034:	ldr	x2, [x0, #128]
   23038:	str	x2, [x19, #192]
   2303c:	cbz	x2, 2314c <__sanitizer_set_death_callback@@Base+0x664>
   23040:	ldr	w20, [x0, #8]
   23044:	sub	x1, x1, #0x1
   23048:	str	x1, [x19, #184]
   2304c:	mov	w3, w20
   23050:	mov	x1, #0xffffffff            	// #4294967295
   23054:	cmp	x3, x1
   23058:	b.eq	2317c <__sanitizer_set_death_callback@@Base+0x694>  // b.none
   2305c:	ldr	w4, [x19, #8]
   23060:	cmp	x3, x4
   23064:	b.cs	23198 <__sanitizer_set_death_callback@@Base+0x6b0>  // b.hs, b.nlast
   23068:	ldr	w3, [x0, #112]
   2306c:	cbnz	x3, 231b0 <__sanitizer_set_death_callback@@Base+0x6c8>
   23070:	ldp	x2, x1, [x19, #128]
   23074:	add	x3, x2, #0x1
   23078:	str	x3, [x19, #128]
   2307c:	cmp	x3, x1
   23080:	b.ls	23094 <__sanitizer_set_death_callback@@Base+0x5ac>  // b.plast
   23084:	add	x4, x1, #0x1
   23088:	str	x4, [x19, #136]
   2308c:	cmp	x2, x1
   23090:	b.ne	231cc <__sanitizer_set_death_callback@@Base+0x6e4>  // b.any
   23094:	ldr	x1, [x19, #120]
   23098:	mov	w3, #0x1                   	// #1
   2309c:	ldr	w2, [x0, #8]
   230a0:	add	x4, x1, #0x1
   230a4:	str	x4, [x19, #120]
   230a8:	str	x1, [x0, #16]
   230ac:	str	x21, [x0, #40]
   230b0:	str	w3, [x0, #112]
   230b4:	strb	w24, [x0, #116]
   230b8:	cbz	w2, 230c0 <__sanitizer_set_death_callback@@Base+0x5d8>
   230bc:	str	w22, [x0, #120]
   230c0:	ldr	x2, [x0]
   230c4:	adrp	x1, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   230c8:	add	x1, x1, #0xa88
   230cc:	ldr	x2, [x2, #32]
   230d0:	cmp	x2, x1
   230d4:	b.ne	23154 <__sanitizer_set_death_callback@@Base+0x66c>  // b.any
   230d8:	mov	x0, x25
   230dc:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   230e0:	mov	w0, w20
   230e4:	ldp	x21, x22, [sp, #16]
   230e8:	ldp	x23, x24, [sp, #32]
   230ec:	ldp	x25, x30, [sp, #48]
   230f0:	ldp	x19, x20, [sp], #64
   230f4:	ret
   230f8:	ldr	w2, [x19, #8]
   230fc:	ldr	w20, [x19, #112]
   23100:	cmp	w20, w2
   23104:	b.cs	231e4 <__sanitizer_set_death_callback@@Base+0x6fc>  // b.hs, b.nlast
   23108:	ldr	x1, [x19]
   2310c:	add	w0, w20, #0x1
   23110:	str	w0, [x19, #112]
   23114:	mov	w0, w20
   23118:	blr	x1
   2311c:	ldr	x1, [x19, #152]
   23120:	mov	w3, w20
   23124:	str	x0, [x1, x3, lsl #3]
   23128:	cbnz	x0, 23050 <__sanitizer_set_death_callback@@Base+0x568>
   2312c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23130:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23134:	add	x2, x2, #0xa68
   23138:	add	x0, x0, #0x918
   2313c:	mov	x4, #0x0                   	// #0
   23140:	mov	x3, #0x0                   	// #0
   23144:	mov	w1, #0x9c                  	// #156
   23148:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2314c:	str	xzr, [x19, #200]
   23150:	b	23040 <__sanitizer_set_death_callback@@Base+0x558>
   23154:	mov	x1, x23
   23158:	blr	x2
   2315c:	mov	x0, x25
   23160:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   23164:	mov	w0, w20
   23168:	ldp	x21, x22, [sp, #16]
   2316c:	ldp	x23, x24, [sp, #32]
   23170:	ldp	x25, x30, [sp, #48]
   23174:	ldp	x19, x20, [sp], #64
   23178:	ret
   2317c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23180:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23184:	add	x2, x2, #0xa80
   23188:	add	x0, x0, #0x918
   2318c:	mov	x4, x3
   23190:	mov	w1, #0x9d                  	// #157
   23194:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23198:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2319c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   231a0:	add	x2, x2, #0xaa0
   231a4:	add	x0, x0, #0x918
   231a8:	mov	w1, #0x9e                  	// #158
   231ac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   231b0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   231b4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   231b8:	add	x2, x2, #0xac0
   231bc:	add	x0, x0, #0x918
   231c0:	mov	x4, #0x0                   	// #0
   231c4:	mov	w1, #0x9f                  	// #159
   231c8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   231cc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   231d0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   231d4:	add	x2, x2, #0xaf0
   231d8:	add	x0, x0, #0x918
   231dc:	mov	w1, #0xa3                  	// #163
   231e0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   231e4:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   231e8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   231ec:	add	x0, x0, #0xa38
   231f0:	ldr	x1, [x1, #4024]
   231f4:	ldr	x1, [x1]
   231f8:	bl	1a328 <OnPrint@@Base+0x398>
   231fc:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   23200:	stp	x19, x20, [sp, #-48]!
   23204:	mov	x20, x0
   23208:	add	x0, x0, #0x18
   2320c:	stp	x21, x22, [sp, #16]
   23210:	mov	x22, x1
   23214:	mov	x21, x2
   23218:	str	x30, [sp, #32]
   2321c:	bl	15b08 <__sanitizer_set_report_fd@@Base+0x2be8>
   23220:	ldr	w3, [x20, #112]
   23224:	cbz	w3, 23254 <__sanitizer_set_death_callback@@Base+0x76c>
   23228:	mov	w19, #0x0                   	// #0
   2322c:	nop
   23230:	ldr	x0, [x20, #152]
   23234:	mov	x1, x21
   23238:	ldr	x0, [x0, w19, uxtw #3]
   2323c:	add	w19, w19, #0x1
   23240:	cbz	x0, 2324c <__sanitizer_set_death_callback@@Base+0x764>
   23244:	blr	x22
   23248:	ldr	w3, [x20, #112]
   2324c:	cmp	w3, w19
   23250:	b.hi	23230 <__sanitizer_set_death_callback@@Base+0x748>  // b.pmore
   23254:	ldp	x21, x22, [sp, #16]
   23258:	ldr	x30, [sp, #32]
   2325c:	ldp	x19, x20, [sp], #48
   23260:	ret
   23264:	nop
   23268:	stp	x19, x20, [sp, #-64]!
   2326c:	stp	x21, x22, [sp, #16]
   23270:	mov	x21, x0
   23274:	mov	x22, x2
   23278:	stp	x23, x24, [sp, #32]
   2327c:	add	x24, x0, #0x18
   23280:	mov	x23, x1
   23284:	mov	x0, x24
   23288:	str	x30, [sp, #48]
   2328c:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   23290:	ldr	w3, [x21, #112]
   23294:	cbz	w3, 232d0 <__sanitizer_set_death_callback@@Base+0x7e8>
   23298:	mov	w19, #0x0                   	// #0
   2329c:	nop
   232a0:	ldr	x0, [x21, #152]
   232a4:	mov	x1, x22
   232a8:	ldr	x20, [x0, w19, uxtw #3]
   232ac:	mov	x0, x20
   232b0:	cbz	x20, 232c4 <__sanitizer_set_death_callback@@Base+0x7dc>
   232b4:	blr	x23
   232b8:	tst	w0, #0xff
   232bc:	b.ne	232f4 <__sanitizer_set_death_callback@@Base+0x80c>  // b.any
   232c0:	ldr	w3, [x21, #112]
   232c4:	add	w19, w19, #0x1
   232c8:	cmp	w3, w19
   232cc:	b.hi	232a0 <__sanitizer_set_death_callback@@Base+0x7b8>  // b.pmore
   232d0:	mov	x0, x24
   232d4:	mov	w19, #0xffffffff            	// #-1
   232d8:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   232dc:	mov	w0, w19
   232e0:	ldp	x21, x22, [sp, #16]
   232e4:	ldp	x23, x24, [sp, #32]
   232e8:	ldr	x30, [sp, #48]
   232ec:	ldp	x19, x20, [sp], #64
   232f0:	ret
   232f4:	ldr	w19, [x20, #8]
   232f8:	mov	x0, x24
   232fc:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   23300:	mov	w0, w19
   23304:	ldp	x21, x22, [sp, #16]
   23308:	ldp	x23, x24, [sp, #32]
   2330c:	ldr	x30, [sp, #48]
   23310:	ldp	x19, x20, [sp], #64
   23314:	ret
   23318:	stp	x19, x20, [sp, #-48]!
   2331c:	stp	x21, x22, [sp, #16]
   23320:	mov	x21, x0
   23324:	mov	x22, x2
   23328:	add	x0, x0, #0x18
   2332c:	stp	x23, x30, [sp, #32]
   23330:	mov	x23, x1
   23334:	bl	15b08 <__sanitizer_set_report_fd@@Base+0x2be8>
   23338:	ldr	w3, [x21, #112]
   2333c:	cbz	w3, 23378 <__sanitizer_set_death_callback@@Base+0x890>
   23340:	mov	w19, #0x0                   	// #0
   23344:	nop
   23348:	ldr	x0, [x21, #152]
   2334c:	mov	x1, x22
   23350:	ldr	x20, [x0, w19, uxtw #3]
   23354:	mov	x0, x20
   23358:	cbz	x20, 2336c <__sanitizer_set_death_callback@@Base+0x884>
   2335c:	blr	x23
   23360:	tst	w0, #0xff
   23364:	b.ne	2337c <__sanitizer_set_death_callback@@Base+0x894>  // b.any
   23368:	ldr	w3, [x21, #112]
   2336c:	add	w19, w19, #0x1
   23370:	cmp	w3, w19
   23374:	b.hi	23348 <__sanitizer_set_death_callback@@Base+0x860>  // b.pmore
   23378:	mov	x20, #0x0                   	// #0
   2337c:	mov	x0, x20
   23380:	ldp	x21, x22, [sp, #16]
   23384:	ldp	x23, x30, [sp, #32]
   23388:	ldp	x19, x20, [sp], #48
   2338c:	ret
   23390:	mov	x2, x1
   23394:	adrp	x3, 22000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5740>
   23398:	add	x1, x3, #0xaf8
   2339c:	b	23318 <__sanitizer_set_death_callback@@Base+0x830>
   233a0:	stp	x19, x20, [sp, #-48]!
   233a4:	mov	x19, x0
   233a8:	mov	w20, w1
   233ac:	stp	x21, x22, [sp, #16]
   233b0:	add	x22, x0, #0x18
   233b4:	mov	x21, x2
   233b8:	mov	x0, x22
   233bc:	str	x30, [sp, #32]
   233c0:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   233c4:	ldr	w4, [x19, #112]
   233c8:	mov	w3, w20
   233cc:	cmp	x4, w20, uxtw
   233d0:	b.ls	2341c <__sanitizer_set_death_callback@@Base+0x934>  // b.plast
   233d4:	ldr	x0, [x19, #152]
   233d8:	ldr	x19, [x0, x3, lsl #3]
   233dc:	cbz	x19, 23434 <__sanitizer_set_death_callback@@Base+0x94c>
   233e0:	ldr	w4, [x19, #112]
   233e4:	cmp	x4, #0x2
   233e8:	b.ne	23454 <__sanitizer_set_death_callback@@Base+0x96c>  // b.any
   233ec:	strb	wzr, [x19, #48]
   233f0:	cbz	x21, 23408 <__sanitizer_set_death_callback@@Base+0x920>
   233f4:	mov	x1, x21
   233f8:	add	x0, x19, #0x30
   233fc:	mov	x2, #0x40                  	// #64
   23400:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
   23404:	strb	wzr, [x19, #111]
   23408:	mov	x0, x22
   2340c:	ldp	x21, x22, [sp, #16]
   23410:	ldr	x30, [sp, #32]
   23414:	ldp	x19, x20, [sp], #48
   23418:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   2341c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23420:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23424:	add	x2, x2, #0xb20
   23428:	add	x0, x0, #0x918
   2342c:	mov	w1, #0xd7                  	// #215
   23430:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23434:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23438:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2343c:	add	x2, x2, #0xa68
   23440:	add	x0, x0, #0x918
   23444:	mov	x4, #0x0                   	// #0
   23448:	mov	x3, #0x0                   	// #0
   2344c:	mov	w1, #0xd9                  	// #217
   23450:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23454:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23458:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2345c:	add	x2, x2, #0xb40
   23460:	add	x0, x0, #0x918
   23464:	mov	x3, #0x2                   	// #2
   23468:	mov	w1, #0xda                  	// #218
   2346c:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23470:	stp	x19, x20, [sp, #-48]!
   23474:	mov	x19, x0
   23478:	mov	x20, x1
   2347c:	stp	x21, x22, [sp, #16]
   23480:	add	x22, x0, #0x18
   23484:	mov	x21, x2
   23488:	mov	x0, x22
   2348c:	str	x30, [sp, #32]
   23490:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   23494:	ldr	w4, [x19, #112]
   23498:	cbz	w4, 234ec <__sanitizer_set_death_callback@@Base+0xa04>
   2349c:	mov	x0, #0x0                   	// #0
   234a0:	ldr	x5, [x19, #152]
   234a4:	b	234b0 <__sanitizer_set_death_callback@@Base+0x9c8>
   234a8:	cmp	w4, w0
   234ac:	b.ls	234ec <__sanitizer_set_death_callback@@Base+0xa04>  // b.plast
   234b0:	ldr	x19, [x5, x0, lsl #3]
   234b4:	add	x0, x0, #0x1
   234b8:	cbz	x19, 234a8 <__sanitizer_set_death_callback@@Base+0x9c0>
   234bc:	ldr	x3, [x19, #40]
   234c0:	cmp	x3, x20
   234c4:	b.ne	234a8 <__sanitizer_set_death_callback@@Base+0x9c0>  // b.any
   234c8:	ldr	w1, [x19, #112]
   234cc:	cbz	w1, 234a8 <__sanitizer_set_death_callback@@Base+0x9c0>
   234d0:	strb	wzr, [x19, #48]
   234d4:	cbz	x21, 234ec <__sanitizer_set_death_callback@@Base+0xa04>
   234d8:	mov	x1, x21
   234dc:	add	x0, x19, #0x30
   234e0:	mov	x2, #0x40                  	// #64
   234e4:	bl	14ab0 <__sanitizer_set_report_fd@@Base+0x1b90>
   234e8:	strb	wzr, [x19, #111]
   234ec:	mov	x0, x22
   234f0:	ldp	x21, x22, [sp, #16]
   234f4:	ldr	x30, [sp, #32]
   234f8:	ldp	x19, x20, [sp], #48
   234fc:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   23500:	stp	x19, x20, [sp, #-48]!
   23504:	mov	x19, x0
   23508:	mov	w20, w1
   2350c:	stp	x21, x22, [sp, #16]
   23510:	add	x21, x0, #0x18
   23514:	mov	x22, x2
   23518:	mov	x0, x21
   2351c:	str	x30, [sp, #32]
   23520:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   23524:	ldr	w4, [x19, #112]
   23528:	mov	w3, w20
   2352c:	cmp	x4, w20, uxtw
   23530:	b.ls	235e4 <__sanitizer_set_death_callback@@Base+0xafc>  // b.plast
   23534:	ldr	x0, [x19, #152]
   23538:	ldr	x20, [x0, x3, lsl #3]
   2353c:	cbz	x20, 235fc <__sanitizer_set_death_callback@@Base+0xb14>
   23540:	ldr	w1, [x20, #112]
   23544:	cbz	w1, 23584 <__sanitizer_set_death_callback@@Base+0xa9c>
   23548:	ldr	x2, [x20]
   2354c:	adrp	x0, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   23550:	add	x0, x0, #0xa98
   23554:	ldr	x2, [x2, #48]
   23558:	cmp	x2, x0
   2355c:	b.ne	235d0 <__sanitizer_set_death_callback@@Base+0xae8>  // b.any
   23560:	cmp	w1, #0x3
   23564:	b.eq	235b0 <__sanitizer_set_death_callback@@Base+0xac8>  // b.none
   23568:	mov	w0, #0x1                   	// #1
   2356c:	strb	w0, [x20, #116]
   23570:	mov	x0, x21
   23574:	ldp	x21, x22, [sp, #16]
   23578:	ldr	x30, [sp, #32]
   2357c:	ldp	x19, x20, [sp], #48
   23580:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   23584:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23588:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2358c:	add	x0, x0, #0xb88
   23590:	ldr	x1, [x1, #4024]
   23594:	ldr	x1, [x1]
   23598:	bl	1a328 <OnPrint@@Base+0x398>
   2359c:	mov	x0, x21
   235a0:	ldp	x21, x22, [sp, #16]
   235a4:	ldr	x30, [sp, #32]
   235a8:	ldp	x19, x20, [sp], #48
   235ac:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   235b0:	mov	x0, x20
   235b4:	bl	22bc0 <__sanitizer_set_death_callback@@Base+0xd8>
   235b8:	ldr	w0, [x20, #8]
   235bc:	cbz	w0, 23570 <__sanitizer_set_death_callback@@Base+0xa88>
   235c0:	mov	x1, x20
   235c4:	mov	x0, x19
   235c8:	bl	22df0 <__sanitizer_set_death_callback@@Base+0x308>
   235cc:	b	23570 <__sanitizer_set_death_callback@@Base+0xa88>
   235d0:	mov	x1, x22
   235d4:	mov	x0, x20
   235d8:	blr	x2
   235dc:	ldr	w1, [x20, #112]
   235e0:	b	23560 <__sanitizer_set_death_callback@@Base+0xa78>
   235e4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   235e8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   235ec:	add	x2, x2, #0xb20
   235f0:	add	x0, x0, #0x918
   235f4:	mov	w1, #0xed                  	// #237
   235f8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   235fc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23600:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23604:	add	x2, x2, #0xa68
   23608:	add	x0, x0, #0x918
   2360c:	mov	x4, #0x0                   	// #0
   23610:	mov	x3, #0x0                   	// #0
   23614:	mov	w1, #0xef                  	// #239
   23618:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2361c:	nop
   23620:	stp	x19, x20, [sp, #-64]!
   23624:	mov	x20, x0
   23628:	stp	x21, x22, [sp, #16]
   2362c:	add	x22, x0, #0x18
   23630:	ubfiz	x21, x1, #3, #32
   23634:	mov	x0, x22
   23638:	stp	x23, x24, [sp, #32]
   2363c:	mov	w23, w1
   23640:	mov	x24, x2
   23644:	str	x30, [sp, #48]
   23648:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   2364c:	ldr	w4, [x20, #112]
   23650:	cmp	x23, x4
   23654:	b.cs	23698 <__sanitizer_set_death_callback@@Base+0xbb0>  // b.hs, b.nlast
   23658:	ldr	x0, [x20, #152]
   2365c:	ldr	x19, [x0, x21]
   23660:	cbz	x19, 236ec <__sanitizer_set_death_callback@@Base+0xc04>
   23664:	ldr	w0, [x19, #112]
   23668:	cbz	w0, 2370c <__sanitizer_set_death_callback@@Base+0xc24>
   2366c:	ldr	w0, [x19, #136]
   23670:	dmb	ish
   23674:	cbnz	w0, 236b4 <__sanitizer_set_death_callback@@Base+0xbcc>
   23678:	mov	x0, x22
   2367c:	bl	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   23680:	bl	156c0 <__sanitizer_set_report_fd@@Base+0x27a0>
   23684:	mov	x0, x22
   23688:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   2368c:	ldr	w4, [x20, #112]
   23690:	cmp	x23, x4
   23694:	b.cc	23658 <__sanitizer_set_death_callback@@Base+0xb70>  // b.lo, b.ul, b.last
   23698:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2369c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   236a0:	mov	x3, x23
   236a4:	add	x2, x2, #0xb20
   236a8:	add	x0, x0, #0x918
   236ac:	mov	w1, #0x102                 	// #258
   236b0:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   236b4:	mov	x0, x19
   236b8:	mov	x1, x24
   236bc:	bl	22c50 <__sanitizer_set_death_callback@@Base+0x168>
   236c0:	ldr	w0, [x19, #8]
   236c4:	cbz	w0, 236d4 <__sanitizer_set_death_callback@@Base+0xbec>
   236c8:	mov	x1, x19
   236cc:	mov	x0, x20
   236d0:	bl	22df0 <__sanitizer_set_death_callback@@Base+0x308>
   236d4:	mov	x0, x22
   236d8:	ldp	x21, x22, [sp, #16]
   236dc:	ldp	x23, x24, [sp, #32]
   236e0:	ldr	x30, [sp, #48]
   236e4:	ldp	x19, x20, [sp], #64
   236e8:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   236ec:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   236f0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   236f4:	add	x2, x2, #0xa68
   236f8:	add	x0, x0, #0x918
   236fc:	mov	x4, #0x0                   	// #0
   23700:	mov	x3, #0x0                   	// #0
   23704:	mov	w1, #0x104                 	// #260
   23708:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2370c:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23710:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23714:	add	x0, x0, #0xbb0
   23718:	ldr	x1, [x1, #4024]
   2371c:	ldr	x1, [x1]
   23720:	bl	1a328 <OnPrint@@Base+0x398>
   23724:	b	236d4 <__sanitizer_set_death_callback@@Base+0xbec>
   23728:	stp	x19, x20, [sp, #-48]!
   2372c:	mov	x19, x0
   23730:	mov	w20, w1
   23734:	stp	x21, x22, [sp, #16]
   23738:	add	x22, x0, #0x18
   2373c:	mov	x0, x22
   23740:	str	x30, [sp, #32]
   23744:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   23748:	ldr	x0, [x19, #128]
   2374c:	cbz	x0, 23844 <__sanitizer_set_death_callback@@Base+0xd5c>
   23750:	ldr	w4, [x19, #112]
   23754:	sub	x0, x0, #0x1
   23758:	str	x0, [x19, #128]
   2375c:	mov	w3, w20
   23760:	cmp	x4, w20, uxtw
   23764:	b.ls	23864 <__sanitizer_set_death_callback@@Base+0xd7c>  // b.plast
   23768:	ldr	x0, [x19, #152]
   2376c:	ldr	x20, [x0, x3, lsl #3]
   23770:	cbz	x20, 2387c <__sanitizer_set_death_callback@@Base+0xd94>
   23774:	ldr	w3, [x20, #112]
   23778:	cmp	w3, #0x2
   2377c:	b.eq	237d8 <__sanitizer_set_death_callback@@Base+0xcf0>  // b.none
   23780:	cmp	w3, #0x1
   23784:	mov	w21, w3
   23788:	b.ne	2389c <__sanitizer_set_death_callback@@Base+0xdb4>  // b.any
   2378c:	ldr	x1, [x20]
   23790:	mov	w0, #0x3                   	// #3
   23794:	ldr	x1, [x1, #16]
   23798:	str	w0, [x20, #112]
   2379c:	adrp	x0, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   237a0:	add	x0, x0, #0xa78
   237a4:	cmp	x1, x0
   237a8:	b.eq	23808 <__sanitizer_set_death_callback@@Base+0xd20>  // b.none
   237ac:	mov	x0, x20
   237b0:	blr	x1
   237b4:	cbnz	w21, 23808 <__sanitizer_set_death_callback@@Base+0xd20>
   237b8:	dmb	ish
   237bc:	mov	w0, #0x1                   	// #1
   237c0:	str	w0, [x20, #136]
   237c4:	mov	x0, x22
   237c8:	ldp	x21, x22, [sp, #16]
   237cc:	ldr	x30, [sp, #32]
   237d0:	ldp	x19, x20, [sp], #48
   237d4:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   237d8:	ldr	x0, [x19, #144]
   237dc:	cbz	x0, 238bc <__sanitizer_set_death_callback@@Base+0xdd4>
   237e0:	ldrb	w21, [x20, #116]
   237e4:	sub	x0, x0, #0x1
   237e8:	str	x0, [x19, #144]
   237ec:	cbz	w21, 238dc <__sanitizer_set_death_callback@@Base+0xdf4>
   237f0:	ldr	x1, [x20]
   237f4:	adrp	x0, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   237f8:	add	x0, x0, #0xa78
   237fc:	ldr	x1, [x1, #16]
   23800:	cmp	x1, x0
   23804:	b.ne	237ac <__sanitizer_set_death_callback@@Base+0xcc4>  // b.any
   23808:	mov	x0, x20
   2380c:	bl	22bc0 <__sanitizer_set_death_callback@@Base+0xd8>
   23810:	ldr	w0, [x20, #8]
   23814:	cbz	w0, 237b8 <__sanitizer_set_death_callback@@Base+0xcd0>
   23818:	mov	x0, x19
   2381c:	mov	x1, x20
   23820:	bl	22df0 <__sanitizer_set_death_callback@@Base+0x308>
   23824:	dmb	ish
   23828:	mov	w0, #0x1                   	// #1
   2382c:	str	w0, [x20, #136]
   23830:	mov	x0, x22
   23834:	ldp	x21, x22, [sp, #16]
   23838:	ldr	x30, [sp, #32]
   2383c:	ldp	x19, x20, [sp], #48
   23840:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   23844:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23848:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2384c:	add	x2, x2, #0xbd8
   23850:	add	x0, x0, #0x918
   23854:	mov	x4, #0x0                   	// #0
   23858:	mov	x3, #0x0                   	// #0
   2385c:	mov	w1, #0x11a                 	// #282
   23860:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23864:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23868:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2386c:	add	x2, x2, #0xb20
   23870:	add	x0, x0, #0x918
   23874:	mov	w1, #0x11c                 	// #284
   23878:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2387c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23880:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23884:	add	x2, x2, #0xa68
   23888:	add	x0, x0, #0x918
   2388c:	mov	x4, #0x0                   	// #0
   23890:	mov	x3, #0x0                   	// #0
   23894:	mov	w1, #0x11e                 	// #286
   23898:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2389c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   238a0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   238a4:	mov	x3, x21
   238a8:	add	x2, x2, #0xc18
   238ac:	add	x0, x0, #0x918
   238b0:	mov	x4, #0x1                   	// #1
   238b4:	mov	w1, #0x125                 	// #293
   238b8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   238bc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   238c0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   238c4:	add	x2, x2, #0xbf8
   238c8:	add	x0, x0, #0x918
   238cc:	mov	x4, #0x0                   	// #0
   238d0:	mov	x3, #0x0                   	// #0
   238d4:	mov	w1, #0x121                 	// #289
   238d8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   238dc:	ldr	x1, [x20]
   238e0:	mov	w0, #0x3                   	// #3
   238e4:	ldr	x1, [x1, #16]
   238e8:	str	w0, [x20, #112]
   238ec:	adrp	x0, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   238f0:	add	x0, x0, #0xa78
   238f4:	cmp	x1, x0
   238f8:	b.eq	237b8 <__sanitizer_set_death_callback@@Base+0xcd0>  // b.none
   238fc:	b	237ac <__sanitizer_set_death_callback@@Base+0xcc4>
   23900:	stp	x19, x20, [sp, #-64]!
   23904:	mov	x19, x0
   23908:	mov	w20, w1
   2390c:	stp	x23, x24, [sp, #32]
   23910:	add	x24, x0, #0x18
   23914:	and	w23, w3, #0xff
   23918:	mov	x0, x24
   2391c:	stp	x21, x22, [sp, #16]
   23920:	mov	x22, x4
   23924:	mov	x21, x2
   23928:	str	x30, [sp, #48]
   2392c:	bl	15a00 <__sanitizer_set_report_fd@@Base+0x2ae0>
   23930:	ldr	x0, [x19, #144]
   23934:	mov	w3, w20
   23938:	ldr	w4, [x19, #112]
   2393c:	add	x0, x0, #0x1
   23940:	str	x0, [x19, #144]
   23944:	cmp	x4, w20, uxtw
   23948:	b.ls	239c4 <__sanitizer_set_death_callback@@Base+0xedc>  // b.plast
   2394c:	ldr	x0, [x19, #152]
   23950:	ldr	x0, [x0, x3, lsl #3]
   23954:	cbz	x0, 239dc <__sanitizer_set_death_callback@@Base+0xef4>
   23958:	ldr	w4, [x0, #112]
   2395c:	cmp	x4, #0x1
   23960:	b.ne	239fc <__sanitizer_set_death_callback@@Base+0xf14>  // b.any
   23964:	ldr	x2, [x0]
   23968:	mov	w3, #0x2                   	// #2
   2396c:	adrp	x1, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   23970:	add	x1, x1, #0xa80
   23974:	ldr	x2, [x2, #24]
   23978:	str	x21, [x0, #32]
   2397c:	str	w3, [x0, #112]
   23980:	strb	w23, [x0, #117]
   23984:	cmp	x2, x1
   23988:	b.ne	239a4 <__sanitizer_set_death_callback@@Base+0xebc>  // b.any
   2398c:	mov	x0, x24
   23990:	ldp	x21, x22, [sp, #16]
   23994:	ldp	x23, x24, [sp, #32]
   23998:	ldr	x30, [sp, #48]
   2399c:	ldp	x19, x20, [sp], #64
   239a0:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   239a4:	mov	x1, x22
   239a8:	blr	x2
   239ac:	mov	x0, x24
   239b0:	ldp	x21, x22, [sp, #16]
   239b4:	ldp	x23, x24, [sp, #32]
   239b8:	ldr	x30, [sp, #48]
   239bc:	ldp	x19, x20, [sp], #64
   239c0:	b	15a98 <__sanitizer_set_report_fd@@Base+0x2b78>
   239c4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   239c8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   239cc:	add	x2, x2, #0xb20
   239d0:	add	x0, x0, #0x918
   239d4:	mov	w1, #0x134                 	// #308
   239d8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   239dc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   239e0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   239e4:	add	x2, x2, #0xa68
   239e8:	add	x0, x0, #0x918
   239ec:	mov	x4, #0x0                   	// #0
   239f0:	mov	x3, #0x0                   	// #0
   239f4:	mov	w1, #0x136                 	// #310
   239f8:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   239fc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23a00:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23a04:	add	x2, x2, #0xc48
   23a08:	add	x0, x0, #0x918
   23a0c:	mov	x3, #0x1                   	// #1
   23a10:	mov	w1, #0x137                 	// #311
   23a14:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23a18:	ldr	w2, [x1, #8]
   23a1c:	cbz	w2, 23a24 <__sanitizer_set_death_callback@@Base+0xf3c>
   23a20:	b	22df0 <__sanitizer_set_death_callback@@Base+0x308>
   23a24:	ret
   23a28:	ldr	x2, [x0, #184]
   23a2c:	mov	x1, x0
   23a30:	mov	x0, #0x0                   	// #0
   23a34:	cbz	x2, 23a50 <__sanitizer_set_death_callback@@Base+0xf68>
   23a38:	ldr	x0, [x1, #192]
   23a3c:	ldr	x3, [x0, #128]
   23a40:	str	x3, [x1, #192]
   23a44:	cbz	x3, 23a54 <__sanitizer_set_death_callback@@Base+0xf6c>
   23a48:	sub	x2, x2, #0x1
   23a4c:	str	x2, [x1, #184]
   23a50:	ret
   23a54:	sub	x2, x2, #0x1
   23a58:	str	x2, [x1, #184]
   23a5c:	str	xzr, [x1, #200]
   23a60:	b	23a50 <__sanitizer_set_death_callback@@Base+0xf68>
   23a64:	nop
   23a68:	ret
   23a6c:	nop
   23a70:	ret
   23a74:	nop
   23a78:	ret
   23a7c:	nop
   23a80:	ret
   23a84:	nop
   23a88:	ret
   23a8c:	nop
   23a90:	ret
   23a94:	nop
   23a98:	ret
   23a9c:	nop
   23aa0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23aa4:	ldr	x0, [x0, #4056]
   23aa8:	ldrb	w0, [x0, #121]
   23aac:	cbz	w0, 23b84 <__sanitizer_set_death_callback@@Base+0x109c>
   23ab0:	stp	x19, x20, [sp, #-48]!
   23ab4:	mrs	x19, tpidr_el0
   23ab8:	adrp	x20, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23abc:	ldr	x20, [x20, #3752]
   23ac0:	stp	x21, x22, [sp, #16]
   23ac4:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23ac8:	add	x1, x19, x20
   23acc:	ldr	x0, [x21, #3896]
   23ad0:	ldr	x22, [x19, x20]
   23ad4:	ldr	w0, [x0]
   23ad8:	str	x30, [sp, #32]
   23adc:	sxtw	x0, w0
   23ae0:	cmp	x0, #0x1
   23ae4:	b.hi	23b5c <__sanitizer_set_death_callback@@Base+0x1074>  // b.pmore
   23ae8:	mov	x0, #0xffffffffffffffff    	// #-1
   23aec:	str	x0, [x19, x20]
   23af0:	add	x19, x19, x20
   23af4:	cbz	x22, 23b4c <__sanitizer_set_death_callback@@Base+0x1064>
   23af8:	ldr	x21, [x21, #3896]
   23afc:	ldr	x19, [x19, #8]
   23b00:	ldr	w0, [x21]
   23b04:	sxtw	x0, w0
   23b08:	cmp	x0, #0x1
   23b0c:	b.ls	23b24 <__sanitizer_set_death_callback@@Base+0x103c>  // b.plast
   23b10:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23b14:	mov	x2, x22
   23b18:	add	x0, x0, #0xca0
   23b1c:	mov	x1, x19
   23b20:	bl	1a328 <OnPrint@@Base+0x398>
   23b24:	mov	x0, x19
   23b28:	lsl	x1, x22, #4
   23b2c:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   23b30:	adrp	x0, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   23b34:	add	x0, x0, #0x400
   23b38:	ldxr	x1, [x0]
   23b3c:	sub	x1, x1, #0x1
   23b40:	stlxr	w2, x1, [x0]
   23b44:	cbnz	w2, 23b38 <__sanitizer_set_death_callback@@Base+0x1050>
   23b48:	dmb	ish
   23b4c:	ldp	x21, x22, [sp, #16]
   23b50:	ldr	x30, [sp, #32]
   23b54:	ldp	x19, x20, [sp], #48
   23b58:	ret
   23b5c:	mov	x2, x22
   23b60:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23b64:	add	x0, x0, #0xc78
   23b68:	bl	1a328 <OnPrint@@Base+0x398>
   23b6c:	ldr	x22, [x19, x20]
   23b70:	mov	x0, #0xffffffffffffffff    	// #-1
   23b74:	str	x0, [x19, x20]
   23b78:	add	x19, x19, x20
   23b7c:	cbnz	x22, 23af8 <__sanitizer_set_death_callback@@Base+0x1010>
   23b80:	b	23b4c <__sanitizer_set_death_callback@@Base+0x1064>
   23b84:	ret
   23b88:	adrp	x5, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23b8c:	stp	x19, x20, [sp, #-144]!
   23b90:	mov	x20, x0
   23b94:	ldr	x5, [x5, #4056]
   23b98:	ldrb	w0, [x5, #121]
   23b9c:	str	x30, [sp, #80]
   23ba0:	cbz	w0, 23d8c <__sanitizer_set_death_callback@@Base+0x12a4>
   23ba4:	adrp	x19, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23ba8:	ldr	x19, [x19, #3752]
   23bac:	stp	x23, x24, [sp, #32]
   23bb0:	mrs	x24, tpidr_el0
   23bb4:	stp	x27, x28, [sp, #64]
   23bb8:	mov	x28, x1
   23bbc:	add	x1, x24, x19
   23bc0:	ldr	x5, [x24, x19]
   23bc4:	cmn	x5, #0x1
   23bc8:	b.eq	23e0c <__sanitizer_set_death_callback@@Base+0x1324>  // b.none
   23bcc:	stp	x21, x22, [sp, #16]
   23bd0:	mov	x23, x3
   23bd4:	mov	x22, x2
   23bd8:	ldr	x21, [x20]
   23bdc:	stp	x25, x26, [sp, #48]
   23be0:	add	x3, x21, #0x1
   23be4:	cmp	x5, x3
   23be8:	b.cc	23cc4 <__sanitizer_set_death_callback@@Base+0x11dc>  // b.lo, b.ul, b.last
   23bec:	ldr	x26, [x1, #8]
   23bf0:	lsl	x21, x21, #4
   23bf4:	ldr	x26, [x26, x21]
   23bf8:	cbnz	x26, 23d7c <__sanitizer_set_death_callback@@Base+0x1294>
   23bfc:	adrp	x25, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23c00:	ldr	x3, [x20, #8]
   23c04:	ldr	x0, [x25, #3896]
   23c08:	sub	x5, x28, x3
   23c0c:	str	x5, [sp, #136]
   23c10:	ldr	w0, [x0]
   23c14:	sxtw	x0, w0
   23c18:	cmp	x0, #0x1
   23c1c:	b.ls	23c48 <__sanitizer_set_death_callback@@Base+0x1160>  // b.plast
   23c20:	adrp	x0, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   23c24:	mov	x4, x28
   23c28:	ldr	x2, [x20]
   23c2c:	mov	x1, x20
   23c30:	ldr	x7, [x0, #1024]
   23c34:	add	x6, sp, #0x88
   23c38:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23c3c:	add	x0, x0, #0xd68
   23c40:	bl	1a328 <OnPrint@@Base+0x398>
   23c44:	ldr	x5, [sp, #136]
   23c48:	add	x1, x24, x19
   23c4c:	ldr	x0, [x1, #24]
   23c50:	cmp	x0, x5
   23c54:	b.eq	23dd8 <__sanitizer_set_death_callback@@Base+0x12f0>  // b.none
   23c58:	cmp	x23, x5
   23c5c:	ccmp	x22, x5, #0x2, hi  // hi = pmore
   23c60:	b.ls	23e34 <__sanitizer_set_death_callback@@Base+0x134c>  // b.plast
   23c64:	and	x0, x5, #0xfff
   23c68:	cmp	x0, #0x10
   23c6c:	ldr	x0, [x25, #3896]
   23c70:	b.eq	23da4 <__sanitizer_set_death_callback@@Base+0x12bc>  // b.none
   23c74:	ldr	w0, [x0]
   23c78:	sxtw	x0, w0
   23c7c:	cmp	x0, #0x1
   23c80:	b.ls	23c94 <__sanitizer_set_death_callback@@Base+0x11ac>  // b.plast
   23c84:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23c88:	add	x0, x0, #0xe48
   23c8c:	bl	1a328 <OnPrint@@Base+0x398>
   23c90:	ldr	x5, [sp, #136]
   23c94:	add	x19, x24, x19
   23c98:	ldp	x23, x24, [sp, #32]
   23c9c:	ldr	x1, [x19, #8]
   23ca0:	ldp	x27, x28, [sp, #64]
   23ca4:	add	x0, x1, x21
   23ca8:	str	x5, [x1, x21]
   23cac:	ldp	x21, x22, [sp, #16]
   23cb0:	str	x26, [x0, #8]
   23cb4:	ldp	x25, x26, [sp, #48]
   23cb8:	ldr	x30, [sp, #80]
   23cbc:	ldp	x19, x20, [sp], #144
   23cc0:	ret
   23cc4:	tst	x3, x21
   23cc8:	b.eq	23d9c <__sanitizer_set_death_callback@@Base+0x12b4>  // b.none
   23ccc:	clz	x1, x3
   23cd0:	mov	w4, #0x3f                  	// #63
   23cd4:	sub	w4, w4, w1
   23cd8:	mov	x1, #0x1                   	// #1
   23cdc:	add	w27, w4, #0x1
   23ce0:	lsl	x27, x1, x27
   23ce4:	cmp	x3, x27
   23ce8:	b.cs	23f18 <__sanitizer_set_death_callback@@Base+0x1430>  // b.hs, b.nlast
   23cec:	lsl	x4, x1, x4
   23cf0:	cmp	x3, x4
   23cf4:	b.ls	23f34 <__sanitizer_set_death_callback@@Base+0x144c>  // b.plast
   23cf8:	cmp	x27, #0x100
   23cfc:	mov	x4, #0x100                 	// #256
   23d00:	csel	x27, x27, x4, cs  // cs = hs, nlast
   23d04:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23d08:	mov	w2, #0x0                   	// #0
   23d0c:	add	x1, x1, #0xcc8
   23d10:	lsl	x0, x27, #4
   23d14:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   23d18:	adrp	x4, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   23d1c:	mov	x26, x0
   23d20:	add	x0, x4, #0x400
   23d24:	ldxr	x2, [x0]
   23d28:	add	x1, x2, #0x1
   23d2c:	stlxr	w3, x1, [x0]
   23d30:	cbnz	w3, 23d24 <__sanitizer_set_death_callback@@Base+0x123c>
   23d34:	adrp	x25, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23d38:	dmb	ish
   23d3c:	ldr	x0, [x25, #3896]
   23d40:	ldr	w0, [x0]
   23d44:	sxtw	x0, w0
   23d48:	cmp	x0, #0x1
   23d4c:	b.hi	23e18 <__sanitizer_set_death_callback@@Base+0x1330>  // b.pmore
   23d50:	mov	x0, #0xfffff               	// #1048575
   23d54:	cmp	x2, x0
   23d58:	b.hi	23ef8 <__sanitizer_set_death_callback@@Base+0x1410>  // b.pmore
   23d5c:	ldr	x3, [x24, x19]
   23d60:	add	x5, x24, x19
   23d64:	cbnz	x3, 23e60 <__sanitizer_set_death_callback@@Base+0x1378>
   23d68:	lsl	x21, x21, #4
   23d6c:	str	x26, [x5, #8]
   23d70:	str	x27, [x24, x19]
   23d74:	ldr	x26, [x26, x21]
   23d78:	cbz	x26, 23bfc <__sanitizer_set_death_callback@@Base+0x1114>
   23d7c:	ldp	x21, x22, [sp, #16]
   23d80:	ldp	x23, x24, [sp, #32]
   23d84:	ldp	x25, x26, [sp, #48]
   23d88:	ldp	x27, x28, [sp, #64]
   23d8c:	mov	x0, #0x0                   	// #0
   23d90:	ldr	x30, [sp, #80]
   23d94:	ldp	x19, x20, [sp], #144
   23d98:	ret
   23d9c:	mov	x27, x3
   23da0:	b	23cf8 <__sanitizer_set_death_callback@@Base+0x1210>
   23da4:	ldr	w0, [x0]
   23da8:	ldp	x26, x5, [x5, #-16]
   23dac:	str	x5, [sp, #136]
   23db0:	sxtw	x0, w0
   23db4:	cmp	x0, #0x1
   23db8:	b.ls	23c94 <__sanitizer_set_death_callback@@Base+0x11ac>  // b.plast
   23dbc:	mov	x1, x5
   23dc0:	mov	x2, x26
   23dc4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23dc8:	add	x0, x0, #0xe10
   23dcc:	bl	1a328 <OnPrint@@Base+0x398>
   23dd0:	ldr	x5, [sp, #136]
   23dd4:	b	23c94 <__sanitizer_set_death_callback@@Base+0x11ac>
   23dd8:	ldr	x0, [x25, #3896]
   23ddc:	ldr	x26, [x1, #16]
   23de0:	ldr	w0, [x0]
   23de4:	sxtw	x0, w0
   23de8:	cmp	x0, #0x1
   23dec:	b.ls	23c94 <__sanitizer_set_death_callback@@Base+0x11ac>  // b.plast
   23df0:	mov	x1, x5
   23df4:	mov	x2, x26
   23df8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23dfc:	add	x0, x0, #0xdb8
   23e00:	bl	1a328 <OnPrint@@Base+0x398>
   23e04:	ldr	x5, [sp, #136]
   23e08:	b	23c94 <__sanitizer_set_death_callback@@Base+0x11ac>
   23e0c:	ldp	x23, x24, [sp, #32]
   23e10:	ldp	x27, x28, [sp, #64]
   23e14:	b	23d8c <__sanitizer_set_death_callback@@Base+0x12a4>
   23e18:	add	x1, x24, x19
   23e1c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23e20:	add	x0, x0, #0xcd8
   23e24:	str	x2, [sp, #96]
   23e28:	bl	1a328 <OnPrint@@Base+0x398>
   23e2c:	ldr	x2, [sp, #96]
   23e30:	b	23d50 <__sanitizer_set_death_callback@@Base+0x1268>
   23e34:	ldr	x0, [x25, #3896]
   23e38:	ldr	w0, [x0]
   23e3c:	sxtw	x0, w0
   23e40:	cmp	x0, #0x1
   23e44:	b.ls	23c94 <__sanitizer_set_death_callback@@Base+0x11ac>  // b.plast
   23e48:	mov	x1, x5
   23e4c:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23e50:	add	x0, x0, #0xdf0
   23e54:	bl	1a328 <OnPrint@@Base+0x398>
   23e58:	ldr	x5, [sp, #136]
   23e5c:	b	23c94 <__sanitizer_set_death_callback@@Base+0x11ac>
   23e60:	ldr	x6, [x5, #8]
   23e64:	lsl	x7, x3, #4
   23e68:	mov	x2, x7
   23e6c:	mov	x0, x26
   23e70:	mov	x1, x6
   23e74:	stp	x6, x7, [sp, #96]
   23e78:	stp	x5, x3, [sp, #112]
   23e7c:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   23e80:	ldr	x0, [x25, #3896]
   23e84:	str	x27, [x24, x19]
   23e88:	ldr	x5, [sp, #112]
   23e8c:	ldr	w0, [x0]
   23e90:	ldp	x6, x7, [sp, #96]
   23e94:	str	x26, [x5, #8]
   23e98:	sxtw	x0, w0
   23e9c:	cmp	x0, #0x1
   23ea0:	b.hi	23ed8 <__sanitizer_set_death_callback@@Base+0x13f0>  // b.pmore
   23ea4:	mov	x1, x7
   23ea8:	mov	x0, x6
   23eac:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   23eb0:	adrp	x4, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   23eb4:	add	x4, x4, #0x400
   23eb8:	ldxr	x0, [x4]
   23ebc:	sub	x0, x0, #0x1
   23ec0:	stlxr	w1, x0, [x4]
   23ec4:	cbnz	w1, 23eb8 <__sanitizer_set_death_callback@@Base+0x13d0>
   23ec8:	add	x0, x24, x19
   23ecc:	dmb	ish
   23ed0:	ldr	x26, [x0, #8]
   23ed4:	b	23bf0 <__sanitizer_set_death_callback@@Base+0x1108>
   23ed8:	ldr	x3, [sp, #120]
   23edc:	mov	x1, x6
   23ee0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23ee4:	add	x0, x0, #0xca0
   23ee8:	mov	x2, x3
   23eec:	bl	1a328 <OnPrint@@Base+0x398>
   23ef0:	ldp	x6, x7, [sp, #96]
   23ef4:	b	23ea4 <__sanitizer_set_death_callback@@Base+0x13bc>
   23ef8:	mov	x3, x2
   23efc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23f00:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23f04:	add	x0, x0, #0xd20
   23f08:	add	x2, x2, #0xd00
   23f0c:	mov	x4, #0x100000              	// #1048576
   23f10:	mov	w1, #0x3c                  	// #60
   23f14:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23f18:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   23f1c:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   23f20:	mov	x4, x27
   23f24:	add	x2, x2, #0x458
   23f28:	add	x0, x0, #0x1a8
   23f2c:	mov	w1, #0x17b                 	// #379
   23f30:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23f34:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   23f38:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   23f3c:	add	x2, x2, #0x480
   23f40:	add	x0, x0, #0x1a8
   23f44:	mov	w1, #0x17c                 	// #380
   23f48:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23f4c:	nop
   23f50:	adrp	x3, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23f54:	stp	x19, x20, [sp, #-32]!
   23f58:	mov	x19, x0
   23f5c:	ldr	x3, [x3, #4056]
   23f60:	ldrb	w0, [x3, #121]
   23f64:	str	x30, [sp, #16]
   23f68:	cbz	w0, 23f9c <__sanitizer_set_death_callback@@Base+0x14b4>
   23f6c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23f70:	mov	x20, x1
   23f74:	ldr	x0, [x0, #3896]
   23f78:	ldr	w0, [x0]
   23f7c:	sxtw	x0, w0
   23f80:	cmp	x0, #0x1
   23f84:	b.hi	23fa8 <__sanitizer_set_death_callback@@Base+0x14c0>  // b.pmore
   23f88:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23f8c:	ldr	x0, [x0, #3752]
   23f90:	mrs	x1, tpidr_el0
   23f94:	add	x0, x1, x0
   23f98:	stp	x20, x19, [x0, #16]
   23f9c:	ldr	x30, [sp, #16]
   23fa0:	ldp	x19, x20, [sp], #32
   23fa4:	ret
   23fa8:	mov	x2, x1
   23fac:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   23fb0:	mov	x1, x19
   23fb4:	add	x0, x0, #0xe78
   23fb8:	bl	1a328 <OnPrint@@Base+0x398>
   23fbc:	b	23f88 <__sanitizer_set_death_callback@@Base+0x14a0>
   23fc0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   23fc4:	ldr	x0, [x0, #3752]
   23fc8:	mrs	x1, tpidr_el0
   23fcc:	add	x0, x1, x0
   23fd0:	ret
   23fd4:	nop
   23fd8:	ldr	x0, [x0]
   23fdc:	cmn	x0, #0x1
   23fe0:	cset	w0, eq  // eq = none
   23fe4:	ret
   23fe8:	stp	x19, x20, [sp, #-32]!
   23fec:	mov	x19, x1
   23ff0:	ldr	w4, [x1, #8]
   23ff4:	ldr	x1, [x1]
   23ff8:	stp	x21, x30, [sp, #16]
   23ffc:	ldr	w3, [x1, #8]
   24000:	cmp	x3, x4
   24004:	b.cs	2407c <__sanitizer_set_death_callback@@Base+0x1594>  // b.hs, b.nlast
   24008:	adrp	x21, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2400c:	bl	6730 <_Unwind_GetIP@plt>
   24010:	mov	x20, x0
   24014:	ldr	x21, [x21, #4016]
   24018:	ldr	x0, [x21]
   2401c:	cbz	x0, 2405c <__sanitizer_set_death_callback@@Base+0x1574>
   24020:	cmp	x0, x20
   24024:	b.hi	2406c <__sanitizer_set_death_callback@@Base+0x1584>  // b.pmore
   24028:	ldr	x1, [x19]
   2402c:	ldr	w3, [x19, #8]
   24030:	ldr	w0, [x1, #8]
   24034:	add	w2, w0, #0x1
   24038:	str	w2, [x1, #8]
   2403c:	add	x0, x1, w0, uxtw #3
   24040:	cmp	w2, w3
   24044:	str	x20, [x0, #16]
   24048:	b.eq	2406c <__sanitizer_set_death_callback@@Base+0x1584>  // b.none
   2404c:	mov	w0, #0x0                   	// #0
   24050:	ldp	x21, x30, [sp, #16]
   24054:	ldp	x19, x20, [sp], #32
   24058:	ret
   2405c:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   24060:	str	x0, [x21]
   24064:	cmp	x0, x20
   24068:	b.ls	24028 <__sanitizer_set_death_callback@@Base+0x1540>  // b.plast
   2406c:	mov	w0, #0x4                   	// #4
   24070:	ldp	x21, x30, [sp, #16]
   24074:	ldp	x19, x20, [sp], #32
   24078:	ret
   2407c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24080:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24084:	add	x2, x2, #0xe98
   24088:	add	x0, x0, #0xec8
   2408c:	mov	w1, #0x6d                  	// #109
   24090:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24094:	nop
   24098:	b	6730 <_Unwind_GetIP@plt>
   2409c:	nop
   240a0:	stp	x19, x20, [sp, #-48]!
   240a4:	cmp	w2, #0x1
   240a8:	str	x30, [sp, #16]
   240ac:	b.ls	2411c <__sanitizer_set_death_callback@@Base+0x1634>  // b.plast
   240b0:	mov	x19, x0
   240b4:	add	w2, w2, #0x1
   240b8:	cmp	w2, #0x100
   240bc:	mov	x20, x1
   240c0:	mov	w1, #0x100                 	// #256
   240c4:	csel	w2, w2, w1, ls  // ls = plast
   240c8:	str	wzr, [x19, #8]
   240cc:	add	x1, sp, #0x20
   240d0:	adrp	x0, 23000 <__sanitizer_set_death_callback@@Base+0x518>
   240d4:	add	x0, x0, #0xfe8
   240d8:	str	x19, [sp, #32]
   240dc:	str	w2, [sp, #40]
   240e0:	bl	6350 <_Unwind_Backtrace@plt>
   240e4:	mov	x1, x20
   240e8:	mov	x0, x19
   240ec:	bl	1bee0 <OnPrint@@Base+0x1f50>
   240f0:	mov	x1, x0
   240f4:	cbnz	x0, 24104 <__sanitizer_set_death_callback@@Base+0x161c>
   240f8:	ldr	w0, [x19, #8]
   240fc:	cmp	w0, #0x1
   24100:	cset	x1, hi  // hi = pmore
   24104:	mov	x0, x19
   24108:	bl	1be88 <OnPrint@@Base+0x1ef8>
   2410c:	ldr	x30, [sp, #16]
   24110:	str	x20, [x19, #16]
   24114:	ldp	x19, x20, [sp], #48
   24118:	ret
   2411c:	mov	w3, w2
   24120:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24124:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   24128:	add	x0, x0, #0xec8
   2412c:	add	x2, x2, #0x700
   24130:	mov	x4, #0x2                   	// #2
   24134:	mov	w1, #0x7a                  	// #122
   24138:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2413c:	nop
   24140:	stp	x19, x20, [sp, #-96]!
   24144:	cmp	w3, #0x1
   24148:	stp	x23, x24, [sp, #32]
   2414c:	mov	w24, w3
   24150:	str	x30, [sp, #80]
   24154:	b.ls	24310 <__sanitizer_set_death_callback@@Base+0x1828>  // b.plast
   24158:	stp	x25, x26, [sp, #48]
   2415c:	adrp	x25, 9af000 <__ubsan_vptr_type_cache@@Base+0x951188>
   24160:	mov	x19, x2
   24164:	ldr	x2, [x25, #1032]
   24168:	add	x4, x25, #0x408
   2416c:	cbz	x2, 2433c <__sanitizer_set_death_callback@@Base+0x1854>
   24170:	stp	x21, x22, [sp, #16]
   24174:	mov	x21, x0
   24178:	ldr	x0, [x4, #8]
   2417c:	stp	x27, x28, [sp, #64]
   24180:	blr	x0
   24184:	mov	x23, x0
   24188:	cbz	x0, 24354 <__sanitizer_set_death_callback@@Base+0x186c>
   2418c:	adrp	x26, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   24190:	ldr	x20, [x26, #4016]
   24194:	ldr	x3, [x20]
   24198:	cbz	x3, 242a0 <__sanitizer_set_death_callback@@Base+0x17b8>
   2419c:	sub	x0, x3, #0x1
   241a0:	tst	x0, x3
   241a4:	b.ne	24374 <__sanitizer_set_death_callback@@Base+0x188c>  // b.any
   241a8:	neg	x20, x3
   241ac:	mov	x27, #0x17ff                	// #6143
   241b0:	add	x3, x3, x27
   241b4:	mov	w2, #0x0                   	// #0
   241b8:	and	x20, x3, x20
   241bc:	adrp	x28, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   241c0:	mov	x0, x20
   241c4:	add	x1, x28, #0x178
   241c8:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   241cc:	mov	x22, x0
   241d0:	mov	x2, #0x0                   	// #0
   241d4:	mov	x1, #0x0                   	// #0
   241d8:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   241dc:	mov	x1, #0x0                   	// #0
   241e0:	mov	x0, #0x0                   	// #0
   241e4:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   241e8:	cmp	x20, x27
   241ec:	b.ls	242b0 <__sanitizer_set_death_callback@@Base+0x17c8>  // b.plast
   241f0:	mov	x2, #0x1800                	// #6144
   241f4:	mov	w1, #0x0                   	// #0
   241f8:	mov	x0, x22
   241fc:	bl	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   24200:	ldr	x6, [x25, #1032]
   24204:	add	x25, x25, #0x408
   24208:	mov	x1, x19
   2420c:	mov	x5, x24
   24210:	mov	x3, x22
   24214:	mov	x2, x23
   24218:	mov	x4, #0x0                   	// #0
   2421c:	mov	x0, #0x0                   	// #0
   24220:	blr	x6
   24224:	mov	x19, x0
   24228:	ldr	x1, [x25, #16]
   2422c:	mov	x0, x23
   24230:	blr	x1
   24234:	tbnz	x19, #63, 2427c <__sanitizer_set_death_callback@@Base+0x1794>
   24238:	cmp	x19, #0x100
   2423c:	b.gt	24390 <__sanitizer_set_death_callback@@Base+0x18a8>
   24240:	str	wzr, [x21, #8]
   24244:	cbz	x19, 2427c <__sanitizer_set_death_callback@@Base+0x1794>
   24248:	mov	x3, x22
   2424c:	add	x0, x21, #0x10
   24250:	mov	x1, #0x0                   	// #0
   24254:	nop
   24258:	ldr	x2, [x3], #24
   2425c:	add	x2, x2, #0x2
   24260:	str	x2, [x0, x1, lsl #3]
   24264:	add	x1, x1, #0x1
   24268:	cmp	x19, x1
   2426c:	b.gt	24258 <__sanitizer_set_death_callback@@Base+0x1770>
   24270:	cmp	x19, #0x0
   24274:	csinc	w19, w19, wzr, gt
   24278:	str	w19, [x21, #8]
   2427c:	mov	x1, x20
   24280:	mov	x0, x22
   24284:	ldp	x21, x22, [sp, #16]
   24288:	ldp	x23, x24, [sp, #32]
   2428c:	ldp	x25, x26, [sp, #48]
   24290:	ldp	x27, x28, [sp, #64]
   24294:	ldr	x30, [sp, #80]
   24298:	ldp	x19, x20, [sp], #96
   2429c:	b	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   242a0:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   242a4:	mov	x3, x0
   242a8:	str	x0, [x20]
   242ac:	b	2419c <__sanitizer_set_death_callback@@Base+0x16b4>
   242b0:	ldr	x26, [x26, #4016]
   242b4:	ldr	x0, [x26]
   242b8:	cbz	x0, 24384 <__sanitizer_set_death_callback@@Base+0x189c>
   242bc:	sub	x1, x0, #0x1
   242c0:	tst	x1, x0
   242c4:	b.ne	24374 <__sanitizer_set_death_callback@@Base+0x188c>  // b.any
   242c8:	mov	x1, #0x17ff                	// #6143
   242cc:	add	x26, x0, x1
   242d0:	neg	x0, x0
   242d4:	add	x1, x28, #0x178
   242d8:	and	x26, x26, x0
   242dc:	mov	w2, #0x0                   	// #0
   242e0:	mov	x0, x26
   242e4:	bl	17ac0 <__sanitizer_set_report_fd@@Base+0x4ba0>
   242e8:	mov	x2, #0x0                   	// #0
   242ec:	mov	x27, x0
   242f0:	mov	x1, x22
   242f4:	bl	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   242f8:	mov	x1, x20
   242fc:	mov	x0, x22
   24300:	mov	x20, x26
   24304:	mov	x22, x27
   24308:	bl	17b90 <__sanitizer_set_report_fd@@Base+0x4c70>
   2430c:	b	241f0 <__sanitizer_set_death_callback@@Base+0x1708>
   24310:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   24314:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24318:	mov	x3, x24
   2431c:	add	x2, x2, #0x700
   24320:	add	x0, x0, #0xec8
   24324:	mov	x4, #0x2                   	// #2
   24328:	mov	w1, #0x94                  	// #148
   2432c:	stp	x21, x22, [sp, #16]
   24330:	stp	x25, x26, [sp, #48]
   24334:	stp	x27, x28, [sp, #64]
   24338:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2433c:	ldp	x23, x24, [sp, #32]
   24340:	mov	w2, w3
   24344:	ldp	x25, x26, [sp, #48]
   24348:	ldr	x30, [sp, #80]
   2434c:	ldp	x19, x20, [sp], #96
   24350:	b	240a0 <__sanitizer_set_death_callback@@Base+0x15b8>
   24354:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24358:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2435c:	add	x2, x2, #0xf18
   24360:	add	x0, x0, #0xec8
   24364:	mov	x4, #0x0                   	// #0
   24368:	mov	x3, #0x0                   	// #0
   2436c:	mov	w1, #0x9b                  	// #155
   24370:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24374:	adrp	x0, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   24378:	add	x0, x0, #0x160
   2437c:	bl	124a0 <__sanitizer_cov_dump@@Base+0x1e90>
   24380:	bl	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   24384:	bl	16670 <__sanitizer_set_report_fd@@Base+0x3750>
   24388:	str	x0, [x26]
   2438c:	b	242bc <__sanitizer_set_death_callback@@Base+0x17d4>
   24390:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24394:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24398:	mov	x3, x19
   2439c:	add	x2, x2, #0xf28
   243a0:	add	x0, x0, #0xec8
   243a4:	mov	x4, #0x100                 	// #256
   243a8:	mov	w1, #0xa3                  	// #163
   243ac:	bl	22a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   243b0:	stp	x19, x20, [sp, #-48]!
   243b4:	mov	x19, x1
   243b8:	mov	x20, x0
   243bc:	mov	x1, x0
   243c0:	mov	x0, #0xffffffffffffffff    	// #-1
   243c4:	stp	x21, x22, [sp, #16]
   243c8:	mov	x22, x2
   243cc:	mov	x21, x3
   243d0:	str	x30, [sp, #32]
   243d4:	bl	6500 <dlsym@plt>
   243d8:	str	x0, [x19]
   243dc:	cbz	x0, 243f8 <__sanitizer_set_death_callback@@Base+0x1910>
   243e0:	cmp	x22, x21
   243e4:	cset	w0, eq  // eq = none
   243e8:	ldp	x21, x22, [sp, #16]
   243ec:	ldr	x30, [sp, #32]
   243f0:	ldp	x19, x20, [sp], #48
   243f4:	ret
   243f8:	mov	x1, x20
   243fc:	bl	6500 <dlsym@plt>
   24400:	str	x0, [x19]
   24404:	cmp	x22, x21
   24408:	cset	w0, eq  // eq = none
   2440c:	ldp	x21, x22, [sp, #16]
   24410:	ldr	x30, [sp, #32]
   24414:	ldp	x19, x20, [sp], #48
   24418:	ret
   2441c:	nop
   24420:	mov	x2, x1
   24424:	mov	x1, x0
   24428:	mov	x0, #0xffffffffffffffff    	// #-1
   2442c:	b	6450 <dlvsym@plt>
   24430:	ldr	x2, [x0]
   24434:	mov	w3, #0xffffffff            	// #-1
   24438:	ldr	x1, [x1]
   2443c:	cmp	x2, x1
   24440:	cset	w0, hi  // hi = pmore
   24444:	csel	w0, w0, w3, cs  // cs = hs, nlast
   24448:	ret
   2444c:	nop
   24450:	stp	x29, x30, [sp, #-48]!
   24454:	mov	x29, sp
   24458:	stp	x21, x22, [sp, #32]
   2445c:	ldp	x22, x21, [x2]
   24460:	stp	x19, x20, [sp, #16]
   24464:	mov	x19, x2
   24468:	ldr	x6, [x5, #24]
   2446c:	mov	x2, x3
   24470:	mov	x20, x5
   24474:	mov	x3, x4
   24478:	add	x22, x1, x22
   2447c:	add	x21, x1, x21
   24480:	cbz	x6, 244b0 <__sanitizer_set_death_callback@@Base+0x19c8>
   24484:	add	x6, x6, x6, lsl #1
   24488:	ldr	x1, [x5]
   2448c:	lsl	x6, x6, #3
   24490:	sub	x6, x6, #0x18
   24494:	add	x6, x1, x6
   24498:	ldr	x1, [x6, #8]
   2449c:	cmp	x22, x1
   244a0:	b.eq	244f8 <__sanitizer_set_death_callback@@Base+0x1a10>  // b.none
   244a4:	add	x4, x1, #0x1
   244a8:	cmp	x22, x4
   244ac:	b.eq	244f8 <__sanitizer_set_death_callback@@Base+0x1a10>  // b.none
   244b0:	mov	x1, #0x18                  	// #24
   244b4:	mov	x4, x20
   244b8:	bl	6510 <__asan_backtrace_vector_grow@plt>
   244bc:	mov	x1, x0
   244c0:	cbz	x0, 2451c <__sanitizer_set_death_callback@@Base+0x1a34>
   244c4:	stp	x22, x21, [x19]
   244c8:	mov	w0, #0x1                   	// #1
   244cc:	ldr	x2, [x20, #24]
   244d0:	ldp	x4, x5, [x19]
   244d4:	stp	x4, x5, [x1]
   244d8:	add	x2, x2, #0x1
   244dc:	ldr	x3, [x19, #16]
   244e0:	str	x3, [x1, #16]
   244e4:	str	x2, [x20, #24]
   244e8:	ldp	x19, x20, [sp, #16]
   244ec:	ldp	x21, x22, [sp, #32]
   244f0:	ldp	x29, x30, [sp], #48
   244f4:	ret
   244f8:	ldr	x4, [x6, #16]
   244fc:	ldr	x5, [x19, #16]
   24500:	cmp	x5, x4
   24504:	b.ne	244b0 <__sanitizer_set_death_callback@@Base+0x19c8>  // b.any
   24508:	cmp	x21, x1
   2450c:	mov	w0, #0x1                   	// #1
   24510:	b.ls	244e8 <__sanitizer_set_death_callback@@Base+0x1a00>  // b.plast
   24514:	str	x21, [x6, #8]
   24518:	b	244e8 <__sanitizer_set_death_callback@@Base+0x1a00>
   2451c:	mov	w0, #0x0                   	// #0
   24520:	ldp	x19, x20, [sp, #16]
   24524:	ldp	x21, x22, [sp, #32]
   24528:	ldp	x29, x30, [sp], #48
   2452c:	ret
   24530:	stp	x29, x30, [sp, #-240]!
   24534:	mov	x3, x1
   24538:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   2453c:	mov	x29, sp
   24540:	stp	x19, x20, [sp, #16]
   24544:	mov	x19, x0
   24548:	add	x20, sp, #0x28
   2454c:	mov	x0, x20
   24550:	add	x2, x2, #0xf50
   24554:	ldp	x4, x5, [x19]
   24558:	mov	x1, #0xc8                  	// #200
   2455c:	ldr	x6, [x19, #16]
   24560:	sub	w5, w6, w5
   24564:	bl	6700 <snprintf@plt>
   24568:	ldp	x3, x0, [x19, #40]
   2456c:	mov	x1, x20
   24570:	mov	w2, #0x0                   	// #0
   24574:	blr	x3
   24578:	ldp	x19, x20, [sp, #16]
   2457c:	ldp	x29, x30, [sp], #240
   24580:	ret
   24584:	nop
   24588:	stp	x29, x30, [sp, #-48]!
   2458c:	mov	x29, sp
   24590:	stp	x19, x20, [sp, #16]
   24594:	mov	x20, x2
   24598:	mov	x19, x1
   2459c:	ldr	x2, [x1, #32]
   245a0:	stp	x21, x22, [sp, #32]
   245a4:	mov	x21, x3
   245a8:	mov	x22, x0
   245ac:	cbnz	x2, 245d4 <__sanitizer_set_death_callback@@Base+0x1aec>
   245b0:	mov	x4, x21
   245b4:	mov	x3, x20
   245b8:	mov	x0, x22
   245bc:	ldp	x21, x22, [sp, #32]
   245c0:	ldp	x2, x1, [x19, #48]
   245c4:	ldp	x19, x20, [sp, #16]
   245c8:	ldp	x29, x30, [sp], #48
   245cc:	lsl	x2, x2, #3
   245d0:	b	6890 <__asan_backtrace_free@plt>
   245d4:	ldr	x1, [x1, #40]
   245d8:	mov	x4, x3
   245dc:	lsl	x2, x2, #3
   245e0:	mov	x3, x20
   245e4:	bl	6890 <__asan_backtrace_free@plt>
   245e8:	b	245b0 <__sanitizer_set_death_callback@@Base+0x1ac8>
   245ec:	nop
   245f0:	mov	x2, x0
   245f4:	ldr	x0, [x1]
   245f8:	ldr	x3, [x2]
   245fc:	cmp	x3, x0
   24600:	b.cc	24644 <__sanitizer_set_death_callback@@Base+0x1b5c>  // b.lo, b.ul, b.last
   24604:	mov	w0, #0x1                   	// #1
   24608:	b.hi	24640 <__sanitizer_set_death_callback@@Base+0x1b58>  // b.pmore
   2460c:	ldr	x3, [x1, #8]
   24610:	ldr	x4, [x2, #8]
   24614:	cmp	x4, x3
   24618:	b.cc	24640 <__sanitizer_set_death_callback@@Base+0x1b58>  // b.lo, b.ul, b.last
   2461c:	mov	w0, #0xffffffff            	// #-1
   24620:	b.hi	24640 <__sanitizer_set_death_callback@@Base+0x1b58>  // b.pmore
   24624:	ldr	x1, [x1, #16]
   24628:	ldr	x2, [x2, #16]
   2462c:	ldr	x1, [x1, #56]
   24630:	ldr	x2, [x2, #56]
   24634:	cmp	x2, x1
   24638:	cset	w3, gt
   2463c:	csel	w0, w3, w0, ge  // ge = tcont
   24640:	ret
   24644:	mov	w0, #0xffffffff            	// #-1
   24648:	ret
   2464c:	nop
   24650:	mov	x2, x0
   24654:	ldr	x0, [x1]
   24658:	ldr	x3, [x2]
   2465c:	cmp	x3, x0
   24660:	b.cc	24688 <__sanitizer_set_death_callback@@Base+0x1ba0>  // b.lo, b.ul, b.last
   24664:	mov	w0, #0x1                   	// #1
   24668:	b.hi	24684 <__sanitizer_set_death_callback@@Base+0x1b9c>  // b.pmore
   2466c:	ldr	w1, [x1, #20]
   24670:	mov	w3, #0xffffffff            	// #-1
   24674:	ldr	w2, [x2, #20]
   24678:	cmp	w2, w1
   2467c:	cset	w0, gt
   24680:	csel	w0, w0, w3, ge  // ge = tcont
   24684:	ret
   24688:	mov	w0, #0xffffffff            	// #-1
   2468c:	ret
   24690:	cbz	x2, 247e8 <__sanitizer_set_death_callback@@Base+0x1d00>
   24694:	stp	x29, x30, [sp, #-64]!
   24698:	mov	x10, x2
   2469c:	mov	x29, sp
   246a0:	stp	x19, x20, [sp, #16]
   246a4:	mov	x20, x6
   246a8:	mov	x19, x0
   246ac:	stp	x21, x22, [sp, #32]
   246b0:	mov	x21, x3
   246b4:	mov	x22, x4
   246b8:	stp	x23, x24, [sp, #48]
   246bc:	mov	x23, x5
   246c0:	mov	x0, #0x0                   	// #0
   246c4:	add	x7, x10, x0
   246c8:	cmp	x10, x0
   246cc:	and	x8, x7, #0xfffffffffffffffe
   246d0:	b.ls	247d0 <__sanitizer_set_death_callback@@Base+0x1ce8>  // b.plast
   246d4:	lsr	x7, x7, #1
   246d8:	add	x8, x8, x7
   246dc:	lsl	x9, x8, #3
   246e0:	ldr	x3, [x1, x8, lsl #3]
   246e4:	add	x8, x1, x9
   246e8:	cmp	x3, x19
   246ec:	b.hi	247bc <__sanitizer_set_death_callback@@Base+0x1cd4>  // b.pmore
   246f0:	ldr	x3, [x8, #8]
   246f4:	add	x0, x7, #0x1
   246f8:	cmp	x19, x3
   246fc:	b.cs	246c4 <__sanitizer_set_death_callback@@Base+0x1bdc>  // b.hs, b.nlast
   24700:	asr	x9, x9, #3
   24704:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   24708:	movk	x0, #0xaaab
   2470c:	mov	x3, x0
   24710:	mul	x9, x9, x0
   24714:	add	x9, x9, #0x1
   24718:	cmp	x2, x9
   2471c:	b.hi	2474c <__sanitizer_set_death_callback@@Base+0x1c64>  // b.pmore
   24720:	b	24758 <__sanitizer_set_death_callback@@Base+0x1c70>
   24724:	ldr	x0, [x8, #32]
   24728:	cmp	x19, x0
   2472c:	b.cs	24758 <__sanitizer_set_death_callback@@Base+0x1c70>  // b.hs, b.nlast
   24730:	add	x8, x8, #0x18
   24734:	sub	x7, x8, x1
   24738:	asr	x7, x7, #3
   2473c:	mul	x7, x7, x3
   24740:	add	x7, x7, #0x1
   24744:	cmp	x7, x2
   24748:	b.cs	24758 <__sanitizer_set_death_callback@@Base+0x1c70>  // b.hs, b.nlast
   2474c:	ldr	x0, [x8, #24]
   24750:	cmp	x19, x0
   24754:	b.cs	24724 <__sanitizer_set_death_callback@@Base+0x1c3c>  // b.hs, b.nlast
   24758:	ldr	x24, [x8, #16]
   2475c:	mov	x6, x20
   24760:	mov	x5, x23
   24764:	mov	x4, x22
   24768:	mov	x3, x21
   2476c:	mov	x0, x19
   24770:	ldp	x1, x2, [x24, #24]
   24774:	bl	24690 <__sanitizer_set_death_callback@@Base+0x1ba8>
   24778:	cbnz	w0, 247a8 <__sanitizer_set_death_callback@@Base+0x1cc0>
   2477c:	ldr	w3, [x20]
   24780:	mov	x1, x19
   24784:	ldr	x2, [x23]
   24788:	mov	x0, x22
   2478c:	ldr	x4, [x24]
   24790:	blr	x21
   24794:	cbnz	w0, 247a8 <__sanitizer_set_death_callback@@Base+0x1cc0>
   24798:	ldr	x1, [x24, #8]
   2479c:	str	x1, [x23]
   247a0:	ldr	w1, [x24, #16]
   247a4:	str	w1, [x20]
   247a8:	ldp	x19, x20, [sp, #16]
   247ac:	ldp	x21, x22, [sp, #32]
   247b0:	ldp	x23, x24, [sp, #48]
   247b4:	ldp	x29, x30, [sp], #64
   247b8:	ret
   247bc:	mov	x10, x7
   247c0:	add	x7, x10, x0
   247c4:	cmp	x10, x0
   247c8:	and	x8, x7, #0xfffffffffffffffe
   247cc:	b.hi	246d4 <__sanitizer_set_death_callback@@Base+0x1bec>  // b.pmore
   247d0:	mov	w0, #0x0                   	// #0
   247d4:	ldp	x19, x20, [sp, #16]
   247d8:	ldp	x21, x22, [sp, #32]
   247dc:	ldp	x23, x24, [sp, #48]
   247e0:	ldp	x29, x30, [sp], #64
   247e4:	ret
   247e8:	mov	w0, #0x0                   	// #0
   247ec:	ret
   247f0:	stp	x29, x30, [sp, #-96]!
   247f4:	mov	x29, sp
   247f8:	stp	x21, x22, [sp, #32]
   247fc:	mov	x21, x0
   24800:	mov	x22, x1
   24804:	ldr	x0, [x0]
   24808:	stp	x19, x20, [sp, #16]
   2480c:	mov	x19, x2
   24810:	str	x23, [sp, #48]
   24814:	sub	x2, x2, #0x1
   24818:	mov	x20, x3
   2481c:	cmp	x2, x0
   24820:	mov	x23, x4
   24824:	b.cs	24844 <__sanitizer_set_death_callback@@Base+0x1d5c>  // b.hs, b.nlast
   24828:	lsl	x2, x19, #5
   2482c:	ldr	x1, [x1]
   24830:	sub	x2, x2, #0x20
   24834:	add	x0, x1, x2
   24838:	ldr	x1, [x1, x2]
   2483c:	cmp	x19, x1
   24840:	b.eq	2488c <__sanitizer_set_death_callback@@Base+0x1da4>  // b.none
   24844:	add	x0, sp, #0x40
   24848:	mov	x2, #0x20                  	// #32
   2484c:	mov	w1, #0x0                   	// #0
   24850:	bl	6530 <__asan_internal_memset@plt>
   24854:	ldr	x7, [x21]
   24858:	mov	x6, #0x0                   	// #0
   2485c:	ldr	x8, [x22]
   24860:	str	x19, [sp, #64]
   24864:	add	x1, x7, x6
   24868:	cmp	x7, x6
   2486c:	b.ls	248b0 <__sanitizer_set_death_callback@@Base+0x1dc8>  // b.plast
   24870:	lsr	x1, x1, #1
   24874:	lsl	x5, x1, #5
   24878:	add	x0, x8, x5
   2487c:	ldr	x5, [x8, x5]
   24880:	cmp	x19, x5
   24884:	b.cc	248dc <__sanitizer_set_death_callback@@Base+0x1df4>  // b.lo, b.ul, b.last
   24888:	b.hi	248a0 <__sanitizer_set_death_callback@@Base+0x1db8>  // b.pmore
   2488c:	ldp	x19, x20, [sp, #16]
   24890:	ldp	x21, x22, [sp, #32]
   24894:	ldr	x23, [sp, #48]
   24898:	ldp	x29, x30, [sp], #96
   2489c:	ret
   248a0:	add	x6, x1, #0x1
   248a4:	add	x1, x7, x6
   248a8:	cmp	x7, x6
   248ac:	b.hi	24870 <__sanitizer_set_death_callback@@Base+0x1d88>  // b.pmore
   248b0:	mov	x0, x23
   248b4:	mov	w2, #0x0                   	// #0
   248b8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   248bc:	add	x1, x1, #0xf60
   248c0:	blr	x20
   248c4:	mov	x0, #0x0                   	// #0
   248c8:	ldp	x19, x20, [sp, #16]
   248cc:	ldp	x21, x22, [sp, #32]
   248d0:	ldr	x23, [sp, #48]
   248d4:	ldp	x29, x30, [sp], #96
   248d8:	ret
   248dc:	mov	x7, x1
   248e0:	b	24864 <__sanitizer_set_death_callback@@Base+0x1d7c>
   248e4:	nop
   248e8:	stp	x29, x30, [sp, #-64]!
   248ec:	mov	x29, sp
   248f0:	ldr	x8, [x7, #24]
   248f4:	stp	x19, x20, [sp, #16]
   248f8:	mov	x20, x2
   248fc:	stp	x21, x22, [sp, #32]
   24900:	mov	x19, x7
   24904:	mov	x22, x1
   24908:	str	x23, [sp, #48]
   2490c:	mov	w21, w4
   24910:	mov	x23, x3
   24914:	mov	x2, x5
   24918:	mov	x3, x6
   2491c:	cbz	x8, 24940 <__sanitizer_set_death_callback@@Base+0x1e58>
   24920:	add	x8, x8, x8, lsl #1
   24924:	ldr	x1, [x7]
   24928:	lsl	x8, x8, #3
   2492c:	sub	x8, x8, #0x18
   24930:	add	x4, x1, x8
   24934:	ldr	x1, [x1, x8]
   24938:	cmp	x1, x20
   2493c:	b.eq	2498c <__sanitizer_set_death_callback@@Base+0x1ea4>  // b.none
   24940:	mov	x4, x19
   24944:	mov	x1, #0x18                  	// #24
   24948:	bl	6510 <__asan_backtrace_vector_grow@plt>
   2494c:	mov	x5, x0
   24950:	cbz	x0, 249ac <__sanitizer_set_death_callback@@Base+0x1ec4>
   24954:	ldr	x2, [x22]
   24958:	mov	w4, #0x1                   	// #1
   2495c:	ldr	x1, [x19, #24]
   24960:	add	x20, x2, x20
   24964:	stp	x20, x23, [x5]
   24968:	add	x0, x1, #0x1
   2496c:	stp	w21, w1, [x5, #16]
   24970:	str	x0, [x19, #24]
   24974:	mov	w0, w4
   24978:	ldp	x19, x20, [sp, #16]
   2497c:	ldp	x21, x22, [sp, #32]
   24980:	ldr	x23, [sp, #48]
   24984:	ldp	x29, x30, [sp], #64
   24988:	ret
   2498c:	ldr	x1, [x4, #8]
   24990:	cmp	x1, x23
   24994:	b.ne	24940 <__sanitizer_set_death_callback@@Base+0x1e58>  // b.any
   24998:	ldr	w1, [x4, #16]
   2499c:	mov	w4, #0x1                   	// #1
   249a0:	cmp	w1, w21
   249a4:	b.ne	24940 <__sanitizer_set_death_callback@@Base+0x1e58>  // b.any
   249a8:	b	24974 <__sanitizer_set_death_callback@@Base+0x1e8c>
   249ac:	mov	w4, #0x0                   	// #0
   249b0:	mov	w0, w4
   249b4:	ldp	x19, x20, [sp, #16]
   249b8:	ldp	x21, x22, [sp, #32]
   249bc:	ldr	x23, [sp, #48]
   249c0:	ldp	x29, x30, [sp], #64
   249c4:	ret
   249c8:	stp	x29, x30, [sp, #-48]!
   249cc:	mov	x29, sp
   249d0:	ldr	x8, [x7, #24]
   249d4:	stp	x19, x20, [sp, #16]
   249d8:	add	x20, x3, x1
   249dc:	stp	x21, x22, [sp, #32]
   249e0:	mov	x19, x7
   249e4:	mov	x22, x2
   249e8:	add	x21, x4, x1
   249ec:	mov	x2, x5
   249f0:	mov	x3, x6
   249f4:	cbz	x8, 24a24 <__sanitizer_set_death_callback@@Base+0x1f3c>
   249f8:	add	x8, x8, x8, lsl #1
   249fc:	ldr	x1, [x7]
   24a00:	lsl	x8, x8, #3
   24a04:	sub	x8, x8, #0x18
   24a08:	add	x8, x1, x8
   24a0c:	ldr	x1, [x8, #8]
   24a10:	cmp	x20, x1
   24a14:	b.eq	24a60 <__sanitizer_set_death_callback@@Base+0x1f78>  // b.none
   24a18:	add	x4, x1, #0x1
   24a1c:	cmp	x20, x4
   24a20:	b.eq	24a60 <__sanitizer_set_death_callback@@Base+0x1f78>  // b.none
   24a24:	mov	x1, #0x18                  	// #24
   24a28:	mov	x4, x19
   24a2c:	bl	6510 <__asan_backtrace_vector_grow@plt>
   24a30:	mov	x1, x0
   24a34:	cbz	x0, 24a80 <__sanitizer_set_death_callback@@Base+0x1f98>
   24a38:	ldr	x3, [x19, #24]
   24a3c:	stp	x20, x21, [x1]
   24a40:	mov	w0, #0x1                   	// #1
   24a44:	str	x22, [x1, #16]
   24a48:	add	x1, x3, #0x1
   24a4c:	str	x1, [x19, #24]
   24a50:	ldp	x19, x20, [sp, #16]
   24a54:	ldp	x21, x22, [sp, #32]
   24a58:	ldp	x29, x30, [sp], #48
   24a5c:	ret
   24a60:	ldr	x4, [x8, #16]
   24a64:	cmp	x4, x22
   24a68:	b.ne	24a24 <__sanitizer_set_death_callback@@Base+0x1f3c>  // b.any
   24a6c:	cmp	x21, x1
   24a70:	mov	w0, #0x1                   	// #1
   24a74:	b.ls	24a50 <__sanitizer_set_death_callback@@Base+0x1f68>  // b.plast
   24a78:	str	x21, [x8, #8]
   24a7c:	b	24a50 <__sanitizer_set_death_callback@@Base+0x1f68>
   24a80:	mov	w0, #0x0                   	// #0
   24a84:	ldp	x19, x20, [sp, #16]
   24a88:	ldp	x21, x22, [sp, #32]
   24a8c:	ldp	x29, x30, [sp], #48
   24a90:	ret
   24a94:	nop
   24a98:	ldr	w1, [x0, #56]
   24a9c:	cbz	w1, 24aa8 <__sanitizer_set_death_callback@@Base+0x1fc0>
   24aa0:	mov	w0, #0x0                   	// #0
   24aa4:	ret
   24aa8:	stp	x29, x30, [sp, #-32]!
   24aac:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24ab0:	add	x1, x1, #0xf80
   24ab4:	mov	x29, sp
   24ab8:	str	x19, [sp, #16]
   24abc:	mov	x19, x0
   24ac0:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   24ac4:	mov	w0, #0x1                   	// #1
   24ac8:	str	w0, [x19, #56]
   24acc:	mov	w0, #0x0                   	// #0
   24ad0:	ldr	x19, [sp, #16]
   24ad4:	ldp	x29, x30, [sp], #32
   24ad8:	ret
   24adc:	nop
   24ae0:	stp	x29, x30, [sp, #-32]!
   24ae4:	mov	x29, sp
   24ae8:	stp	x19, x20, [sp, #16]
   24aec:	mov	x19, x0
   24af0:	ldp	x20, x1, [x0, #16]
   24af4:	cmp	x1, #0x3
   24af8:	b.hi	24b2c <__sanitizer_set_death_callback@@Base+0x2044>  // b.pmore
   24afc:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   24b00:	mov	w1, w0
   24b04:	mov	w0, #0x0                   	// #0
   24b08:	cbz	w1, 24b20 <__sanitizer_set_death_callback@@Base+0x2038>
   24b0c:	ldr	w0, [x20]
   24b10:	ldr	w2, [x19, #32]
   24b14:	rev	w1, w0
   24b18:	cmp	w2, #0x0
   24b1c:	csel	w0, w1, w0, ne  // ne = any
   24b20:	ldp	x19, x20, [sp, #16]
   24b24:	ldp	x29, x30, [sp], #32
   24b28:	ret
   24b2c:	sub	x1, x1, #0x4
   24b30:	add	x0, x20, #0x4
   24b34:	stp	x0, x1, [x19, #16]
   24b38:	b	24b0c <__sanitizer_set_death_callback@@Base+0x2024>
   24b3c:	nop
   24b40:	stp	x29, x30, [sp, #-32]!
   24b44:	mov	x29, sp
   24b48:	stp	x19, x20, [sp, #16]
   24b4c:	mov	x19, x0
   24b50:	ldp	x20, x1, [x0, #16]
   24b54:	cmp	x1, #0x7
   24b58:	b.hi	24b8c <__sanitizer_set_death_callback@@Base+0x20a4>  // b.pmore
   24b5c:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   24b60:	mov	w1, w0
   24b64:	mov	x0, #0x0                   	// #0
   24b68:	cbz	w1, 24b80 <__sanitizer_set_death_callback@@Base+0x2098>
   24b6c:	ldr	x0, [x20]
   24b70:	ldr	w2, [x19, #32]
   24b74:	rev	x1, x0
   24b78:	cmp	w2, #0x0
   24b7c:	csel	x0, x1, x0, ne  // ne = any
   24b80:	ldp	x19, x20, [sp, #16]
   24b84:	ldp	x29, x30, [sp], #32
   24b88:	ret
   24b8c:	sub	x1, x1, #0x8
   24b90:	add	x0, x20, #0x8
   24b94:	stp	x0, x1, [x19, #16]
   24b98:	b	24b6c <__sanitizer_set_death_callback@@Base+0x2084>
   24b9c:	nop
   24ba0:	stp	x29, x30, [sp, #-32]!
   24ba4:	mov	x29, sp
   24ba8:	stp	x19, x20, [sp, #16]
   24bac:	mov	x19, x0
   24bb0:	ldp	x20, x1, [x0, #16]
   24bb4:	cmp	x1, #0x1
   24bb8:	b.hi	24bf4 <__sanitizer_set_death_callback@@Base+0x210c>  // b.pmore
   24bbc:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   24bc0:	mov	w1, #0x0                   	// #0
   24bc4:	cbz	w0, 24be4 <__sanitizer_set_death_callback@@Base+0x20fc>
   24bc8:	ldrb	w2, [x20, #1]
   24bcc:	ldrb	w1, [x20]
   24bd0:	ldr	w3, [x19, #32]
   24bd4:	orr	w0, w2, w1, lsl #8
   24bd8:	cmp	w3, #0x0
   24bdc:	orr	w1, w1, w2, lsl #8
   24be0:	csel	w1, w1, w0, eq  // eq = none
   24be4:	mov	w0, w1
   24be8:	ldp	x19, x20, [sp, #16]
   24bec:	ldp	x29, x30, [sp], #32
   24bf0:	ret
   24bf4:	sub	x1, x1, #0x2
   24bf8:	add	x0, x20, #0x2
   24bfc:	stp	x0, x1, [x19, #16]
   24c00:	b	24bc8 <__sanitizer_set_death_callback@@Base+0x20e0>
   24c04:	nop
   24c08:	stp	x29, x30, [sp, #-32]!
   24c0c:	mov	x29, sp
   24c10:	ldr	x2, [x0, #24]
   24c14:	str	x19, [sp, #16]
   24c18:	ldr	x19, [x0, #16]
   24c1c:	cbnz	x2, 24c40 <__sanitizer_set_death_callback@@Base+0x2158>
   24c20:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   24c24:	mov	w1, #0x0                   	// #0
   24c28:	cbz	w0, 24c30 <__sanitizer_set_death_callback@@Base+0x2148>
   24c2c:	ldrb	w1, [x19]
   24c30:	mov	w0, w1
   24c34:	ldr	x19, [sp, #16]
   24c38:	ldp	x29, x30, [sp], #32
   24c3c:	ret
   24c40:	mov	x1, x0
   24c44:	sub	x2, x2, #0x1
   24c48:	add	x0, x19, #0x1
   24c4c:	stp	x0, x2, [x1, #16]
   24c50:	b	24c2c <__sanitizer_set_death_callback@@Base+0x2144>
   24c54:	nop
   24c58:	stp	x29, x30, [sp, #-16]!
   24c5c:	cmp	w1, #0x4
   24c60:	mov	x29, sp
   24c64:	b.eq	24ca0 <__sanitizer_set_death_callback@@Base+0x21b8>  // b.none
   24c68:	mov	x2, x0
   24c6c:	b.gt	24c90 <__sanitizer_set_death_callback@@Base+0x21a8>
   24c70:	cmp	w1, #0x1
   24c74:	b.eq	24cb0 <__sanitizer_set_death_callback@@Base+0x21c8>  // b.none
   24c78:	cmp	w1, #0x2
   24c7c:	b.ne	24cc0 <__sanitizer_set_death_callback@@Base+0x21d8>  // b.any
   24c80:	bl	24ba0 <__sanitizer_set_death_callback@@Base+0x20b8>
   24c84:	and	x0, x0, #0xffff
   24c88:	ldp	x29, x30, [sp], #16
   24c8c:	ret
   24c90:	cmp	w1, #0x8
   24c94:	b.ne	24cc0 <__sanitizer_set_death_callback@@Base+0x21d8>  // b.any
   24c98:	ldp	x29, x30, [sp], #16
   24c9c:	b	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   24ca0:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   24ca4:	mov	w0, w0
   24ca8:	ldp	x29, x30, [sp], #16
   24cac:	ret
   24cb0:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   24cb4:	and	x0, x0, #0xff
   24cb8:	ldp	x29, x30, [sp], #16
   24cbc:	ret
   24cc0:	mov	x0, x2
   24cc4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24cc8:	add	x1, x1, #0xf90
   24ccc:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   24cd0:	mov	x0, #0x0                   	// #0
   24cd4:	ldp	x29, x30, [sp], #16
   24cd8:	ret
   24cdc:	nop
   24ce0:	stp	x29, x30, [sp, #-64]!
   24ce4:	mov	x29, sp
   24ce8:	stp	x19, x20, [sp, #16]
   24cec:	mov	x19, x0
   24cf0:	mov	w20, #0x0                   	// #0
   24cf4:	stp	x21, x22, [sp, #32]
   24cf8:	mov	x22, #0x0                   	// #0
   24cfc:	stp	x23, x24, [sp, #48]
   24d00:	adrp	x24, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24d04:	mov	w23, #0x0                   	// #0
   24d08:	add	x24, x24, #0xfb0
   24d0c:	b	24d24 <__sanitizer_set_death_callback@@Base+0x223c>
   24d10:	and	x0, x21, #0x7f
   24d14:	lsl	x0, x0, x20
   24d18:	orr	x22, x22, x0
   24d1c:	add	w20, w20, #0x7
   24d20:	tbz	w21, #7, 24d60 <__sanitizer_set_death_callback@@Base+0x2278>
   24d24:	ldp	x21, x1, [x19, #16]
   24d28:	mov	x0, x19
   24d2c:	cbnz	x1, 24d78 <__sanitizer_set_death_callback@@Base+0x2290>
   24d30:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   24d34:	cbz	w0, 24d88 <__sanitizer_set_death_callback@@Base+0x22a0>
   24d38:	ldrb	w21, [x21]
   24d3c:	cmp	w20, #0x3f
   24d40:	b.ls	24d10 <__sanitizer_set_death_callback@@Base+0x2228>  // b.plast
   24d44:	cbnz	w23, 24d1c <__sanitizer_set_death_callback@@Base+0x2234>
   24d48:	mov	x1, x24
   24d4c:	mov	x0, x19
   24d50:	add	w20, w20, #0x7
   24d54:	mov	w23, #0x1                   	// #1
   24d58:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   24d5c:	tbnz	w21, #7, 24d24 <__sanitizer_set_death_callback@@Base+0x223c>
   24d60:	mov	x0, x22
   24d64:	ldp	x19, x20, [sp, #16]
   24d68:	ldp	x21, x22, [sp, #32]
   24d6c:	ldp	x23, x24, [sp, #48]
   24d70:	ldp	x29, x30, [sp], #64
   24d74:	ret
   24d78:	sub	x1, x1, #0x1
   24d7c:	add	x0, x21, #0x1
   24d80:	stp	x0, x1, [x19, #16]
   24d84:	b	24d38 <__sanitizer_set_death_callback@@Base+0x2250>
   24d88:	mov	x22, #0x0                   	// #0
   24d8c:	mov	x0, x22
   24d90:	ldp	x19, x20, [sp, #16]
   24d94:	ldp	x21, x22, [sp, #32]
   24d98:	ldp	x23, x24, [sp, #48]
   24d9c:	ldp	x29, x30, [sp], #64
   24da0:	ret
   24da4:	nop
   24da8:	stp	x29, x30, [sp, #-64]!
   24dac:	mov	x29, sp
   24db0:	stp	x19, x20, [sp, #16]
   24db4:	mov	x19, x0
   24db8:	mov	w20, #0x0                   	// #0
   24dbc:	stp	x21, x22, [sp, #32]
   24dc0:	mov	x22, #0x0                   	// #0
   24dc4:	stp	x23, x24, [sp, #48]
   24dc8:	adrp	x24, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   24dcc:	mov	w23, #0x0                   	// #0
   24dd0:	add	x24, x24, #0xfd0
   24dd4:	b	24dec <__sanitizer_set_death_callback@@Base+0x2304>
   24dd8:	and	x1, x21, #0x7f
   24ddc:	lsl	x1, x1, x20
   24de0:	orr	x22, x22, x1
   24de4:	add	w20, w20, #0x7
   24de8:	tbz	w21, #7, 24e28 <__sanitizer_set_death_callback@@Base+0x2340>
   24dec:	ldp	x21, x1, [x19, #16]
   24df0:	mov	x0, x19
   24df4:	cbnz	x1, 24e58 <__sanitizer_set_death_callback@@Base+0x2370>
   24df8:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   24dfc:	cbz	w0, 24e68 <__sanitizer_set_death_callback@@Base+0x2380>
   24e00:	ldrb	w21, [x21]
   24e04:	cmp	w20, #0x3f
   24e08:	b.ls	24dd8 <__sanitizer_set_death_callback@@Base+0x22f0>  // b.plast
   24e0c:	cbnz	w23, 24de4 <__sanitizer_set_death_callback@@Base+0x22fc>
   24e10:	mov	x1, x24
   24e14:	mov	x0, x19
   24e18:	add	w20, w20, #0x7
   24e1c:	mov	w23, #0x1                   	// #1
   24e20:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   24e24:	tbnz	w21, #7, 24dec <__sanitizer_set_death_callback@@Base+0x2304>
   24e28:	and	w21, w21, #0x40
   24e2c:	cmp	w20, #0x3f
   24e30:	mov	x0, #0xffffffffffffffff    	// #-1
   24e34:	ccmp	w21, #0x0, #0x4, ls  // ls = plast
   24e38:	lsl	x0, x0, x20
   24e3c:	orr	x0, x22, x0
   24e40:	csel	x0, x0, x22, ne  // ne = any
   24e44:	ldp	x19, x20, [sp, #16]
   24e48:	ldp	x21, x22, [sp, #32]
   24e4c:	ldp	x23, x24, [sp, #48]
   24e50:	ldp	x29, x30, [sp], #64
   24e54:	ret
   24e58:	sub	x1, x1, #0x1
   24e5c:	add	x0, x21, #0x1
   24e60:	stp	x0, x1, [x19, #16]
   24e64:	b	24e00 <__sanitizer_set_death_callback@@Base+0x2318>
   24e68:	mov	x0, #0x0                   	// #0
   24e6c:	ldp	x19, x20, [sp, #16]
   24e70:	ldp	x21, x22, [sp, #32]
   24e74:	ldp	x23, x24, [sp, #48]
   24e78:	ldp	x29, x30, [sp], #64
   24e7c:	ret
   24e80:	stp	x29, x30, [sp, #-32]!
   24e84:	mov	x29, sp
   24e88:	stp	x19, x20, [sp, #16]
   24e8c:	mov	x19, x0
   24e90:	ldp	x20, x1, [x0, #16]
   24e94:	mov	x0, x20
   24e98:	bl	6800 <__asan_internal_strnlen@plt>
   24e9c:	ldr	x1, [x19, #24]
   24ea0:	add	x0, x0, #0x1
   24ea4:	cmp	x0, x1
   24ea8:	b.ls	24ecc <__sanitizer_set_death_callback@@Base+0x23e4>  // b.plast
   24eac:	mov	x0, x19
   24eb0:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   24eb4:	cmp	w0, #0x0
   24eb8:	csel	x20, x20, xzr, ne  // ne = any
   24ebc:	mov	x0, x20
   24ec0:	ldp	x19, x20, [sp, #16]
   24ec4:	ldp	x29, x30, [sp], #32
   24ec8:	ret
   24ecc:	ldr	x2, [x19, #16]
   24ed0:	sub	x1, x1, x0
   24ed4:	add	x0, x2, x0
   24ed8:	stp	x0, x1, [x19, #16]
   24edc:	mov	x0, x20
   24ee0:	ldp	x19, x20, [sp, #16]
   24ee4:	ldp	x29, x30, [sp], #32
   24ee8:	ret
   24eec:	nop
   24ef0:	stp	x29, x30, [sp, #-96]!
   24ef4:	mov	x29, sp
   24ef8:	stp	x27, x28, [sp, #80]
   24efc:	mov	x27, x1
   24f00:	ldr	x28, [sp, #96]
   24f04:	stp	x19, x20, [sp, #16]
   24f08:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   24f0c:	mov	w19, w0
   24f10:	add	x20, x20, #0x290
   24f14:	stp	x21, x22, [sp, #32]
   24f18:	mov	w21, w2
   24f1c:	mov	x22, x7
   24f20:	stp	x23, x24, [sp, #48]
   24f24:	mov	w24, w4
   24f28:	mov	x23, x5
   24f2c:	stp	x25, x26, [sp, #64]
   24f30:	mov	w25, w3
   24f34:	mov	x26, x6
   24f38:	mov	x0, x28
   24f3c:	mov	x2, #0x10                  	// #16
   24f40:	mov	w1, #0x0                   	// #0
   24f44:	bl	6530 <__asan_internal_memset@plt>
   24f48:	cmp	w19, #0x20
   24f4c:	b.hi	24f70 <__sanitizer_set_death_callback@@Base+0x2488>  // b.pmore
   24f50:	cbz	w19, 251f8 <__sanitizer_set_death_callback@@Base+0x2710>
   24f54:	sub	w19, w19, #0x1
   24f58:	cmp	w19, #0x1f
   24f5c:	b.hi	251f8 <__sanitizer_set_death_callback@@Base+0x2710>  // b.pmore
   24f60:	ldrh	w0, [x20, w19, uxtw #1]
   24f64:	adr	x1, 24f70 <__sanitizer_set_death_callback@@Base+0x2488>
   24f68:	add	x0, x1, w0, sxth #2
   24f6c:	br	x0
   24f70:	mov	w0, #0x1f20                	// #7968
   24f74:	cmp	w19, w0
   24f78:	b.eq	252f8 <__sanitizer_set_death_callback@@Base+0x2810>  // b.none
   24f7c:	b.ls	24fc8 <__sanitizer_set_death_callback@@Base+0x24e0>  // b.plast
   24f80:	mov	w0, #0x1f21                	// #7969
   24f84:	cmp	w19, w0
   24f88:	b.ne	251f8 <__sanitizer_set_death_callback@@Base+0x2710>  // b.any
   24f8c:	mov	x0, x27
   24f90:	cbz	w21, 252ec <__sanitizer_set_death_callback@@Base+0x2804>
   24f94:	bl	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   24f98:	mov	x1, x0
   24f9c:	cbz	x22, 25340 <__sanitizer_set_death_callback@@Base+0x2858>
   24fa0:	ldr	x0, [x22, #112]
   24fa4:	cmp	x0, x1
   24fa8:	b.ls	25364 <__sanitizer_set_death_callback@@Base+0x287c>  // b.plast
   24fac:	ldr	x2, [x22, #104]
   24fb0:	mov	w3, #0x4                   	// #4
   24fb4:	mov	w0, #0x1                   	// #1
   24fb8:	str	w3, [x28]
   24fbc:	add	x1, x2, x1
   24fc0:	str	x1, [x28, #8]
   24fc4:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   24fc8:	mov	w0, #0xffffe0ff            	// #-7937
   24fcc:	add	w19, w19, w0
   24fd0:	cmp	w19, #0x1
   24fd4:	mov	w0, #0x8                   	// #8
   24fd8:	b.hi	251f8 <__sanitizer_set_death_callback@@Base+0x2710>  // b.pmore
   24fdc:	str	w0, [x28]
   24fe0:	mov	x0, x27
   24fe4:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   24fe8:	mov	x1, x0
   24fec:	str	x1, [x28, #8]
   24ff0:	mov	w0, #0x1                   	// #1
   24ff4:	ldp	x19, x20, [sp, #16]
   24ff8:	ldp	x21, x22, [sp, #32]
   24ffc:	ldp	x23, x24, [sp, #48]
   25000:	ldp	x25, x26, [sp, #64]
   25004:	ldp	x27, x28, [sp, #80]
   25008:	ldp	x29, x30, [sp], #96
   2500c:	ret
   25010:	mov	w0, #0x2                   	// #2
   25014:	str	w0, [x28]
   25018:	mov	x0, x27
   2501c:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   25020:	and	x1, x0, #0xff
   25024:	mov	w0, #0x1                   	// #1
   25028:	str	x1, [x28, #8]
   2502c:	ldp	x19, x20, [sp, #16]
   25030:	ldp	x21, x22, [sp, #32]
   25034:	ldp	x23, x24, [sp, #48]
   25038:	ldp	x25, x26, [sp, #64]
   2503c:	ldp	x27, x28, [sp, #80]
   25040:	ldp	x29, x30, [sp], #96
   25044:	ret
   25048:	mov	w0, #0x3                   	// #3
   2504c:	str	w0, [x28]
   25050:	mov	x0, x27
   25054:	bl	24da8 <__sanitizer_set_death_callback@@Base+0x22c0>
   25058:	mov	x1, x0
   2505c:	mov	w0, #0x1                   	// #1
   25060:	str	x1, [x28, #8]
   25064:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   25068:	mov	w0, #0xa                   	// #10
   2506c:	str	w0, [x28]
   25070:	mov	x0, x27
   25074:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   25078:	and	x2, x0, #0xff
   2507c:	ldr	x1, [x27, #24]
   25080:	cmp	x1, w0, uxtb
   25084:	b.cs	25178 <__sanitizer_set_death_callback@@Base+0x2690>  // b.hs, b.nlast
   25088:	mov	x0, x27
   2508c:	ldp	x19, x20, [sp, #16]
   25090:	ldp	x21, x22, [sp, #32]
   25094:	ldp	x23, x24, [sp, #48]
   25098:	ldp	x25, x26, [sp, #64]
   2509c:	ldp	x27, x28, [sp, #80]
   250a0:	ldp	x29, x30, [sp], #96
   250a4:	b	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   250a8:	mov	w0, #0xa                   	// #10
   250ac:	str	w0, [x28]
   250b0:	mov	x0, x27
   250b4:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   250b8:	mov	x1, x0
   250bc:	ldr	x2, [x27, #24]
   250c0:	cmp	x0, x2
   250c4:	b.hi	25088 <__sanitizer_set_death_callback@@Base+0x25a0>  // b.pmore
   250c8:	ldr	x3, [x27, #16]
   250cc:	sub	x2, x2, x0
   250d0:	mov	w0, #0x1                   	// #1
   250d4:	add	x1, x3, x1
   250d8:	stp	x1, x2, [x27, #16]
   250dc:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   250e0:	mov	w0, #0x2                   	// #2
   250e4:	str	w0, [x28]
   250e8:	mov	x0, x27
   250ec:	bl	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   250f0:	mov	x1, x0
   250f4:	str	x1, [x28, #8]
   250f8:	mov	w0, #0x1                   	// #1
   250fc:	ldp	x19, x20, [sp, #16]
   25100:	ldp	x21, x22, [sp, #32]
   25104:	ldp	x23, x24, [sp, #48]
   25108:	ldp	x25, x26, [sp, #64]
   2510c:	ldp	x27, x28, [sp, #80]
   25110:	ldp	x29, x30, [sp], #96
   25114:	ret
   25118:	mov	w0, #0x2                   	// #2
   2511c:	str	w0, [x28]
   25120:	mov	x0, x27
   25124:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   25128:	mov	w1, w0
   2512c:	mov	w0, #0x1                   	// #1
   25130:	str	x1, [x28, #8]
   25134:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   25138:	mov	w0, #0x2                   	// #2
   2513c:	str	w0, [x28]
   25140:	mov	x0, x27
   25144:	bl	24ba0 <__sanitizer_set_death_callback@@Base+0x20b8>
   25148:	and	x1, x0, #0xffff
   2514c:	mov	w0, #0x1                   	// #1
   25150:	str	x1, [x28, #8]
   25154:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   25158:	mov	w0, #0xa                   	// #10
   2515c:	str	w0, [x28]
   25160:	mov	x0, x27
   25164:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   25168:	mov	w2, w0
   2516c:	ldr	x1, [x27, #24]
   25170:	cmp	x1, w0, uxtw
   25174:	b.cc	25088 <__sanitizer_set_death_callback@@Base+0x25a0>  // b.lo, b.ul, b.last
   25178:	ldr	x3, [x27, #16]
   2517c:	sub	x1, x1, x2
   25180:	mov	w0, #0x1                   	// #1
   25184:	add	x2, x3, x2
   25188:	stp	x2, x1, [x27, #16]
   2518c:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   25190:	mov	w0, #0x4                   	// #4
   25194:	str	w0, [x28]
   25198:	mov	x0, x27
   2519c:	bl	24e80 <__sanitizer_set_death_callback@@Base+0x2398>
   251a0:	cmp	x0, #0x0
   251a4:	str	x0, [x28, #8]
   251a8:	cset	w0, ne  // ne = any
   251ac:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   251b0:	mov	w0, #0xa                   	// #10
   251b4:	str	w0, [x28]
   251b8:	mov	x0, x27
   251bc:	bl	24ba0 <__sanitizer_set_death_callback@@Base+0x20b8>
   251c0:	and	x2, x0, #0xffff
   251c4:	ldr	x1, [x27, #24]
   251c8:	cmp	x1, w0, uxth
   251cc:	b.cc	25088 <__sanitizer_set_death_callback@@Base+0x25a0>  // b.lo, b.ul, b.last
   251d0:	b	25178 <__sanitizer_set_death_callback@@Base+0x2690>
   251d4:	mov	w19, #0x1                   	// #1
   251d8:	str	w19, [x28]
   251dc:	mov	w1, w24
   251e0:	mov	x0, x27
   251e4:	bl	24c58 <__sanitizer_set_death_callback@@Base+0x2170>
   251e8:	mov	x1, x0
   251ec:	mov	w0, w19
   251f0:	str	x1, [x28, #8]
   251f4:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   251f8:	mov	x0, x27
   251fc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   25200:	add	x1, x1, #0x40
   25204:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   25208:	mov	w0, #0x0                   	// #0
   2520c:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   25210:	mov	w0, #0x9                   	// #9
   25214:	b	250e4 <__sanitizer_set_death_callback@@Base+0x25fc>
   25218:	mov	x1, #0x1                   	// #1
   2521c:	mov	w2, #0x2                   	// #2
   25220:	mov	w0, w1
   25224:	str	w2, [x28]
   25228:	str	x1, [x28, #8]
   2522c:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   25230:	mov	w0, #0xb                   	// #11
   25234:	b	250ac <__sanitizer_set_death_callback@@Base+0x25c4>
   25238:	mov	w0, #0x8                   	// #8
   2523c:	str	w0, [x28]
   25240:	mov	x0, x27
   25244:	cbz	w21, 2531c <__sanitizer_set_death_callback@@Base+0x2834>
   25248:	bl	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   2524c:	mov	x1, x0
   25250:	b	24fec <__sanitizer_set_death_callback@@Base+0x2504>
   25254:	mov	x0, x27
   25258:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   2525c:	mov	w19, w0
   25260:	b	24f38 <__sanitizer_set_death_callback@@Base+0x2450>
   25264:	mov	w0, #0x5                   	// #5
   25268:	b	24fdc <__sanitizer_set_death_callback@@Base+0x24f4>
   2526c:	mov	w0, #0x5                   	// #5
   25270:	b	250e4 <__sanitizer_set_death_callback@@Base+0x25fc>
   25274:	mov	w0, #0x5                   	// #5
   25278:	b	2511c <__sanitizer_set_death_callback@@Base+0x2634>
   2527c:	mov	w0, #0x5                   	// #5
   25280:	b	2513c <__sanitizer_set_death_callback@@Base+0x2654>
   25284:	mov	w0, #0x5                   	// #5
   25288:	b	25014 <__sanitizer_set_death_callback@@Base+0x252c>
   2528c:	mov	w0, #0x6                   	// #6
   25290:	str	w0, [x28]
   25294:	cmp	w25, #0x2
   25298:	b.ne	25240 <__sanitizer_set_death_callback@@Base+0x2758>  // b.any
   2529c:	mov	w1, w24
   252a0:	mov	x0, x27
   252a4:	bl	24c58 <__sanitizer_set_death_callback@@Base+0x2170>
   252a8:	mov	x1, x0
   252ac:	mov	w0, #0x1                   	// #1
   252b0:	str	x1, [x28, #8]
   252b4:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   252b8:	mov	w0, #0x2                   	// #2
   252bc:	b	24fdc <__sanitizer_set_death_callback@@Base+0x24f4>
   252c0:	mov	x0, x27
   252c4:	cbz	w21, 25334 <__sanitizer_set_death_callback@@Base+0x284c>
   252c8:	bl	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   252cc:	cmp	x0, x26
   252d0:	b.cs	2534c <__sanitizer_set_death_callback@@Base+0x2864>  // b.hs, b.nlast
   252d4:	add	x23, x23, x0
   252d8:	mov	w1, #0x4                   	// #4
   252dc:	mov	w0, #0x1                   	// #1
   252e0:	str	w1, [x28]
   252e4:	str	x23, [x28, #8]
   252e8:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   252ec:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   252f0:	mov	w1, w0
   252f4:	b	24f9c <__sanitizer_set_death_callback@@Base+0x24b4>
   252f8:	mov	x0, x27
   252fc:	cbz	w21, 25328 <__sanitizer_set_death_callback@@Base+0x2840>
   25300:	bl	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   25304:	str	x0, [x28, #8]
   25308:	cbz	x22, 25340 <__sanitizer_set_death_callback@@Base+0x2858>
   2530c:	mov	w1, #0x7                   	// #7
   25310:	mov	w0, #0x1                   	// #1
   25314:	str	w1, [x28]
   25318:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   2531c:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   25320:	mov	w1, w0
   25324:	b	24fec <__sanitizer_set_death_callback@@Base+0x2504>
   25328:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   2532c:	mov	w0, w0
   25330:	b	25304 <__sanitizer_set_death_callback@@Base+0x281c>
   25334:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   25338:	mov	w0, w0
   2533c:	b	252cc <__sanitizer_set_death_callback@@Base+0x27e4>
   25340:	mov	w0, #0x1                   	// #1
   25344:	str	wzr, [x28]
   25348:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   2534c:	mov	x0, x27
   25350:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   25354:	add	x1, x1, #0xff8
   25358:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   2535c:	mov	w0, #0x0                   	// #0
   25360:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   25364:	mov	x0, x27
   25368:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2536c:	add	x1, x1, #0x18
   25370:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   25374:	mov	w0, #0x0                   	// #0
   25378:	b	2502c <__sanitizer_set_death_callback@@Base+0x2544>
   2537c:	nop
   25380:	sub	sp, sp, #0x170
   25384:	stp	x29, x30, [sp, #48]
   25388:	add	x29, sp, #0x30
   2538c:	stp	x25, x26, [sp, #112]
   25390:	ldr	x25, [sp, #368]
   25394:	stp	x27, x28, [sp, #128]
   25398:	add	x28, sp, #0x130
   2539c:	ldr	x26, [sp, #392]
   253a0:	mov	x27, x4
   253a4:	stp	x19, x20, [sp, #64]
   253a8:	mov	x19, x2
   253ac:	mov	x20, x3
   253b0:	stp	x23, x24, [sp, #96]
   253b4:	mov	x24, x26
   253b8:	mov	x26, x25
   253bc:	mov	x25, x28
   253c0:	stp	x21, x22, [sp, #80]
   253c4:	stp	x0, x1, [sp, #192]
   253c8:	str	x6, [sp, #208]
   253cc:	str	x5, [sp, #224]
   253d0:	str	w7, [sp, #236]
   253d4:	add	x0, sp, #0xf0
   253d8:	str	x0, [sp, #216]
   253dc:	ldr	x0, [x19, #24]
   253e0:	cbz	x0, 25698 <__sanitizer_set_death_callback@@Base+0x2bb0>
   253e4:	mov	x0, x19
   253e8:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   253ec:	mov	x2, x0
   253f0:	cbz	x0, 25698 <__sanitizer_set_death_callback@@Base+0x2bb0>
   253f4:	ldp	x3, x4, [sp, #376]
   253f8:	add	x1, x24, #0x60
   253fc:	add	x0, x24, #0x58
   25400:	bl	247f0 <__sanitizer_set_death_callback@@Base+0x1d08>
   25404:	mov	x28, x0
   25408:	cbz	x0, 255d0 <__sanitizer_set_death_callback@@Base+0x2ae8>
   2540c:	ldr	x0, [sp, #408]
   25410:	cbz	x0, 25420 <__sanitizer_set_death_callback@@Base+0x2938>
   25414:	ldr	x1, [sp, #408]
   25418:	ldr	w0, [x28, #8]
   2541c:	str	w0, [x1]
   25420:	ldr	x0, [x28, #16]
   25424:	cbz	x0, 25584 <__sanitizer_set_death_callback@@Base+0x2a9c>
   25428:	mov	x23, #0x0                   	// #0
   2542c:	mov	x21, #0x0                   	// #0
   25430:	str	wzr, [sp, #152]
   25434:	str	wzr, [sp, #160]
   25438:	stp	xzr, xzr, [sp, #168]
   2543c:	str	wzr, [sp, #184]
   25440:	str	wzr, [sp, #232]
   25444:	ldr	x2, [x28, #24]
   25448:	b	25480 <__sanitizer_set_death_callback@@Base+0x2998>
   2544c:	cmp	w0, #0x10
   25450:	b.eq	25620 <__sanitizer_set_death_callback@@Base+0x2b38>  // b.none
   25454:	cmp	w0, #0x11
   25458:	b.ne	255f4 <__sanitizer_set_death_callback@@Base+0x2b0c>  // b.any
   2545c:	ldr	w0, [sp, #304]
   25460:	cmp	w0, #0x1
   25464:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   25468:	ldr	x21, [sp, #312]
   2546c:	str	w0, [sp, #184]
   25470:	ldr	x0, [x28, #16]
   25474:	add	x23, x23, #0x1
   25478:	cmp	x0, x23
   2547c:	b.ls	25508 <__sanitizer_set_death_callback@@Base+0x2a20>  // b.plast
   25480:	lsl	x22, x23, #3
   25484:	ldr	w4, [x24, #48]
   25488:	add	x0, x2, x22
   2548c:	mov	x7, x26
   25490:	ldp	w3, w2, [x24, #40]
   25494:	mov	x6, x27
   25498:	ldr	w0, [x0, #4]
   2549c:	mov	x5, x20
   254a0:	str	x25, [sp]
   254a4:	mov	x1, x19
   254a8:	bl	24ef0 <__sanitizer_set_death_callback@@Base+0x2408>
   254ac:	cbz	w0, 255d4 <__sanitizer_set_death_callback@@Base+0x2aec>
   254b0:	ldr	x2, [x28, #24]
   254b4:	ldr	w0, [x2, x22]
   254b8:	cmp	w0, #0x12
   254bc:	b.eq	2566c <__sanitizer_set_death_callback@@Base+0x2b84>  // b.none
   254c0:	b.ls	2544c <__sanitizer_set_death_callback@@Base+0x2964>  // b.plast
   254c4:	cmp	w0, #0x1b
   254c8:	b.eq	25648 <__sanitizer_set_death_callback@@Base+0x2b60>  // b.none
   254cc:	cmp	w0, #0x55
   254d0:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   254d4:	ldr	w0, [sp, #304]
   254d8:	cmp	w0, #0x2
   254dc:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   254e0:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   254e4:	mov	w0, #0x1                   	// #1
   254e8:	str	w0, [sp, #152]
   254ec:	ldr	x0, [sp, #312]
   254f0:	str	x0, [sp, #176]
   254f4:	ldr	x0, [x28, #16]
   254f8:	add	x23, x23, #0x1
   254fc:	cmp	x0, x23
   25500:	b.hi	25480 <__sanitizer_set_death_callback@@Base+0x2998>  // b.pmore
   25504:	nop
   25508:	ldr	w0, [x28, #8]
   2550c:	cmp	w0, #0x2e
   25510:	ccmp	w0, #0x11, #0x4, ne  // ne = any
   25514:	b.ne	25584 <__sanitizer_set_death_callback@@Base+0x2a9c>  // b.any
   25518:	ldr	w0, [sp, #152]
   2551c:	cbnz	w0, 256a0 <__sanitizer_set_death_callback@@Base+0x2bb8>
   25520:	ldr	w1, [sp, #160]
   25524:	ldr	w0, [sp, #184]
   25528:	tst	w0, w1
   2552c:	b.eq	25584 <__sanitizer_set_death_callback@@Base+0x2a9c>  // b.none
   25530:	ldr	x1, [sp, #168]
   25534:	str	x24, [sp, #320]
   25538:	ldr	w0, [sp, #232]
   2553c:	ldr	x8, [sp, #216]
   25540:	cmp	w0, #0x0
   25544:	add	x0, x1, x21
   25548:	csel	x0, x0, x1, ne  // ne = any
   2554c:	stp	x21, x0, [sp, #304]
   25550:	mov	x2, x8
   25554:	ldp	x6, x7, [x25]
   25558:	ldp	x3, x4, [sp, #376]
   2555c:	ldr	x0, [sp, #192]
   25560:	ldr	x1, [sp, #200]
   25564:	ldr	x5, [sp, #400]
   25568:	stp	x6, x7, [x8]
   2556c:	str	x24, [x8, #16]
   25570:	bl	24450 <__sanitizer_set_death_callback@@Base+0x1968>
   25574:	cbz	w0, 255d4 <__sanitizer_set_death_callback@@Base+0x2aec>
   25578:	ldr	w0, [x28, #8]
   2557c:	cmp	w0, #0x11
   25580:	b.eq	25698 <__sanitizer_set_death_callback@@Base+0x2bb0>  // b.none
   25584:	ldr	w0, [x28, #12]
   25588:	cbz	w0, 253dc <__sanitizer_set_death_callback@@Base+0x28f4>
   2558c:	ldr	x0, [sp, #376]
   25590:	stp	x26, x0, [sp]
   25594:	ldr	w7, [sp, #236]
   25598:	ldp	x1, x6, [sp, #200]
   2559c:	str	x24, [sp, #24]
   255a0:	ldr	x0, [sp, #384]
   255a4:	str	x0, [sp, #16]
   255a8:	ldr	x0, [sp, #400]
   255ac:	str	x0, [sp, #32]
   255b0:	ldr	x0, [sp, #192]
   255b4:	str	xzr, [sp, #40]
   255b8:	ldr	x5, [sp, #224]
   255bc:	mov	x4, x27
   255c0:	mov	x3, x20
   255c4:	mov	x2, x19
   255c8:	bl	25380 <__sanitizer_set_death_callback@@Base+0x2898>
   255cc:	cbnz	w0, 253d4 <__sanitizer_set_death_callback@@Base+0x28ec>
   255d0:	mov	w0, #0x0                   	// #0
   255d4:	ldp	x29, x30, [sp, #48]
   255d8:	ldp	x19, x20, [sp, #64]
   255dc:	ldp	x21, x22, [sp, #80]
   255e0:	ldp	x23, x24, [sp, #96]
   255e4:	ldp	x25, x26, [sp, #112]
   255e8:	ldp	x27, x28, [sp, #128]
   255ec:	add	sp, sp, #0x170
   255f0:	ret
   255f4:	cmp	w0, #0x3
   255f8:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   255fc:	ldr	w0, [x28, #8]
   25600:	cmp	w0, #0x11
   25604:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   25608:	ldr	w0, [sp, #304]
   2560c:	cmp	w0, #0x4
   25610:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   25614:	ldr	x0, [sp, #312]
   25618:	str	x0, [x24, #64]
   2561c:	b	25470 <__sanitizer_set_death_callback@@Base+0x2988>
   25620:	ldr	w0, [x28, #8]
   25624:	cmp	w0, #0x11
   25628:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   2562c:	ldr	w0, [sp, #304]
   25630:	cmp	w0, #0x2
   25634:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   25638:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   2563c:	ldr	x0, [sp, #312]
   25640:	str	x0, [x24, #56]
   25644:	b	25470 <__sanitizer_set_death_callback@@Base+0x2988>
   25648:	ldr	w0, [x28, #8]
   2564c:	cmp	w0, #0x11
   25650:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   25654:	ldr	w0, [sp, #304]
   25658:	cmp	w0, #0x4
   2565c:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   25660:	ldr	x0, [sp, #312]
   25664:	str	x0, [x24, #72]
   25668:	b	25470 <__sanitizer_set_death_callback@@Base+0x2988>
   2566c:	ldr	w0, [sp, #304]
   25670:	cmp	w0, #0x1
   25674:	b.eq	25688 <__sanitizer_set_death_callback@@Base+0x2ba0>  // b.none
   25678:	cmp	w0, #0x2
   2567c:	b.ne	25470 <__sanitizer_set_death_callback@@Base+0x2988>  // b.any
   25680:	mov	w0, #0x1                   	// #1
   25684:	str	w0, [sp, #232]
   25688:	str	w0, [sp, #160]
   2568c:	ldr	x0, [sp, #312]
   25690:	str	x0, [sp, #168]
   25694:	b	25470 <__sanitizer_set_death_callback@@Base+0x2988>
   25698:	mov	w0, #0x1                   	// #1
   2569c:	b	255d4 <__sanitizer_set_death_callback@@Base+0x2aec>
   256a0:	ldr	x0, [sp, #176]
   256a4:	ldr	x1, [sp, #208]
   256a8:	cmp	x0, x1
   256ac:	b.cs	257e8 <__sanitizer_set_death_callback@@Base+0x2d00>  // b.hs, b.nlast
   256b0:	ldr	x3, [sp, #176]
   256b4:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   256b8:	ldr	x4, [sp, #208]
   256bc:	add	x0, x0, #0x78
   256c0:	ldr	x2, [sp, #224]
   256c4:	stp	x0, x2, [sp, #304]
   256c8:	ldr	w0, [sp, #236]
   256cc:	sub	x23, x4, x3
   256d0:	str	w0, [sp, #336]
   256d4:	ldr	x0, [sp, #376]
   256d8:	add	x1, x2, x3
   256dc:	stp	x20, x27, [sp, #168]
   256e0:	mov	x22, #0xffff                	// #65535
   256e4:	stp	x1, x23, [sp, #320]
   256e8:	str	x0, [sp, #344]
   256ec:	ldp	x20, x23, [sp, #192]
   256f0:	stp	x28, x19, [sp, #152]
   256f4:	ldr	x0, [sp, #384]
   256f8:	str	x26, [sp, #184]
   256fc:	ldr	x19, [sp, #216]
   25700:	mov	x28, x0
   25704:	ldr	x27, [sp, #376]
   25708:	str	x0, [sp, #352]
   2570c:	str	wzr, [sp, #360]
   25710:	ldr	w1, [x24, #48]
   25714:	mov	x0, x25
   25718:	bl	24c58 <__sanitizer_set_death_callback@@Base+0x2170>
   2571c:	mov	x26, x0
   25720:	ldr	w1, [x24, #48]
   25724:	mov	x0, x25
   25728:	bl	24c58 <__sanitizer_set_death_callback@@Base+0x2170>
   2572c:	orr	x1, x26, x0
   25730:	cbz	x1, 25804 <__sanitizer_set_death_callback@@Base+0x2d1c>
   25734:	ldr	w1, [x24, #48]
   25738:	cmp	w1, #0x4
   2573c:	b.eq	257d8 <__sanitizer_set_death_callback@@Base+0x2cf0>  // b.none
   25740:	b.gt	25774 <__sanitizer_set_death_callback@@Base+0x2c8c>
   25744:	cmp	w1, #0x1
   25748:	b.eq	257cc <__sanitizer_set_death_callback@@Base+0x2ce4>  // b.none
   2574c:	cmp	w1, #0x2
   25750:	b.ne	25788 <__sanitizer_set_death_callback@@Base+0x2ca0>  // b.any
   25754:	cmp	x26, x22
   25758:	cset	w1, eq  // eq = none
   2575c:	cbz	w1, 25788 <__sanitizer_set_death_callback@@Base+0x2ca0>
   25760:	mov	x21, x0
   25764:	ldr	w0, [sp, #360]
   25768:	cbz	w0, 25710 <__sanitizer_set_death_callback@@Base+0x2c28>
   2576c:	mov	w0, #0x0                   	// #0
   25770:	b	255d4 <__sanitizer_set_death_callback@@Base+0x2aec>
   25774:	cmp	w1, #0x8
   25778:	b.ne	25788 <__sanitizer_set_death_callback@@Base+0x2ca0>  // b.any
   2577c:	cmn	x26, #0x1
   25780:	cset	w1, eq  // eq = none
   25784:	cbnz	w1, 25760 <__sanitizer_set_death_callback@@Base+0x2c78>
   25788:	add	x0, x21, x0
   2578c:	add	x2, x21, x26
   25790:	stp	x2, x0, [sp, #280]
   25794:	add	x0, sp, #0x200
   25798:	mov	x4, x28
   2579c:	ldr	x5, [sp, #400]
   257a0:	str	x24, [sp, #296]
   257a4:	ldp	x0, x1, [x0, #-232]
   257a8:	stp	x0, x1, [x19]
   257ac:	mov	x3, x27
   257b0:	str	x24, [x19, #16]
   257b4:	mov	x2, x19
   257b8:	mov	x1, x23
   257bc:	mov	x0, x20
   257c0:	bl	24450 <__sanitizer_set_death_callback@@Base+0x1968>
   257c4:	cbnz	w0, 25764 <__sanitizer_set_death_callback@@Base+0x2c7c>
   257c8:	b	255d4 <__sanitizer_set_death_callback@@Base+0x2aec>
   257cc:	cmp	x26, #0xff
   257d0:	cset	w1, eq  // eq = none
   257d4:	b	2575c <__sanitizer_set_death_callback@@Base+0x2c74>
   257d8:	mov	x1, #0xffffffff            	// #4294967295
   257dc:	cmp	x26, x1
   257e0:	cset	w1, eq  // eq = none
   257e4:	b	2575c <__sanitizer_set_death_callback@@Base+0x2c74>
   257e8:	ldp	x3, x0, [sp, #376]
   257ec:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   257f0:	mov	w2, #0x0                   	// #0
   257f4:	add	x1, x1, #0x58
   257f8:	blr	x3
   257fc:	mov	w0, #0x0                   	// #0
   25800:	b	255d4 <__sanitizer_set_death_callback@@Base+0x2aec>
   25804:	ldr	w0, [sp, #360]
   25808:	ldp	x28, x19, [sp, #152]
   2580c:	ldp	x20, x27, [sp, #168]
   25810:	ldr	x26, [sp, #184]
   25814:	cbz	w0, 25578 <__sanitizer_set_death_callback@@Base+0x2a90>
   25818:	mov	w0, #0x0                   	// #0
   2581c:	b	255d4 <__sanitizer_set_death_callback@@Base+0x2aec>
   25820:	ldr	w2, [x2]
   25824:	mov	x6, x3
   25828:	mov	x7, x0
   2582c:	mov	x3, x4
   25830:	cmp	w2, #0x6
   25834:	mov	x4, x5
   25838:	b.eq	258a0 <__sanitizer_set_death_callback@@Base+0x2db8>  // b.none
   2583c:	cmp	w2, #0x2
   25840:	ccmp	w2, #0x5, #0x4, ne  // ne = any
   25844:	b.eq	258f8 <__sanitizer_set_death_callback@@Base+0x2e10>  // b.none
   25848:	cmp	w2, #0x7
   2584c:	b.ne	25898 <__sanitizer_set_death_callback@@Base+0x2db0>  // b.any
   25850:	ldr	x0, [x0, #8]
   25854:	mov	x5, #0x0                   	// #0
   25858:	ldr	x2, [x6]
   2585c:	ldp	x9, x7, [x0, #40]
   25860:	add	x6, x7, x5
   25864:	cmp	x7, x5
   25868:	b.ls	25898 <__sanitizer_set_death_callback@@Base+0x2db0>  // b.plast
   2586c:	lsr	x6, x6, #1
   25870:	ldr	x1, [x9, x6, lsl #3]
   25874:	ldr	x8, [x1, #24]
   25878:	cmp	x2, x8
   2587c:	b.cc	258f0 <__sanitizer_set_death_callback@@Base+0x2e08>  // b.lo, b.ul, b.last
   25880:	ldr	x10, [x1, #32]
   25884:	add	x5, x6, #0x1
   25888:	cmp	x2, x10
   2588c:	b.cs	25860 <__sanitizer_set_death_callback@@Base+0x2d78>  // b.hs, b.nlast
   25890:	sub	x2, x2, x8
   25894:	b	25900 <__sanitizer_set_death_callback@@Base+0x2e18>
   25898:	mov	x0, #0x0                   	// #0
   2589c:	ret
   258a0:	ldp	x9, x5, [x7, #40]
   258a4:	mov	x0, #0x0                   	// #0
   258a8:	ldr	x2, [x6]
   258ac:	add	x6, x5, x0
   258b0:	cmp	x5, x0
   258b4:	b.ls	25898 <__sanitizer_set_death_callback@@Base+0x2db0>  // b.plast
   258b8:	lsr	x6, x6, #1
   258bc:	ldr	x1, [x9, x6, lsl #3]
   258c0:	ldr	x8, [x1, #24]
   258c4:	cmp	x2, x8
   258c8:	b.cc	258e8 <__sanitizer_set_death_callback@@Base+0x2e00>  // b.lo, b.ul, b.last
   258cc:	ldr	x10, [x1, #32]
   258d0:	add	x0, x6, #0x1
   258d4:	cmp	x2, x10
   258d8:	b.cs	258ac <__sanitizer_set_death_callback@@Base+0x2dc4>  // b.hs, b.nlast
   258dc:	sub	x2, x2, x8
   258e0:	mov	x0, x7
   258e4:	b	25900 <__sanitizer_set_death_callback@@Base+0x2e18>
   258e8:	mov	x5, x6
   258ec:	b	258ac <__sanitizer_set_death_callback@@Base+0x2dc4>
   258f0:	mov	x7, x6
   258f4:	b	25860 <__sanitizer_set_death_callback@@Base+0x2d78>
   258f8:	ldr	x2, [x6]
   258fc:	b	25900 <__sanitizer_set_death_callback@@Base+0x2e18>
   25900:	sub	sp, sp, #0xd0
   25904:	stp	x29, x30, [sp, #16]
   25908:	add	x29, sp, #0x10
   2590c:	stp	x27, x28, [sp, #96]
   25910:	mov	x27, x0
   25914:	ldr	x0, [x1, #16]
   25918:	stp	x21, x22, [sp, #48]
   2591c:	stp	x25, x26, [sp, #80]
   25920:	cmp	x0, x2
   25924:	mov	x25, x4
   25928:	str	x3, [sp, #112]
   2592c:	b.hi	25ad0 <__sanitizer_set_death_callback@@Base+0x2fe8>  // b.pmore
   25930:	stp	x19, x20, [sp, #32]
   25934:	mov	x19, x1
   25938:	sub	x4, x2, x0
   2593c:	ldr	x1, [x1, #8]
   25940:	cmp	x4, x1
   25944:	b.cs	25acc <__sanitizer_set_death_callback@@Base+0x2fe4>  // b.hs, b.nlast
   25948:	ldr	x3, [x19]
   2594c:	add	x0, x0, x1
   25950:	sub	x1, x0, x2
   25954:	ldr	w5, [x27, #120]
   25958:	add	x2, x3, x4
   2595c:	stp	x2, x1, [sp, #160]
   25960:	adrp	x3, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   25964:	ldr	x6, [x27, #56]
   25968:	add	x3, x3, #0xb8
   2596c:	ldr	x1, [sp, #112]
   25970:	add	x21, sp, #0x90
   25974:	mov	x0, x21
   25978:	stp	x3, x6, [sp, #144]
   2597c:	str	w5, [sp, #176]
   25980:	str	x1, [sp, #184]
   25984:	str	x25, [sp, #192]
   25988:	str	wzr, [sp, #200]
   2598c:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   25990:	mov	x2, x0
   25994:	cbz	x0, 25b1c <__sanitizer_set_death_callback@@Base+0x3034>
   25998:	ldr	x3, [sp, #112]
   2599c:	mov	x4, x25
   259a0:	add	x1, x19, #0x60
   259a4:	add	x0, x19, #0x58
   259a8:	bl	247f0 <__sanitizer_set_death_callback@@Base+0x1d08>
   259ac:	mov	x26, x0
   259b0:	cbz	x0, 25b60 <__sanitizer_set_death_callback@@Base+0x3078>
   259b4:	ldr	x0, [x0, #16]
   259b8:	cbz	x0, 25b60 <__sanitizer_set_death_callback@@Base+0x3078>
   259bc:	add	x20, sp, #0x80
   259c0:	mov	x28, #0x0                   	// #0
   259c4:	add	x0, x20, #0x8
   259c8:	mov	x22, #0x0                   	// #0
   259cc:	stp	x23, x24, [sp, #64]
   259d0:	mov	w23, #0x2007                	// #8199
   259d4:	str	x0, [sp, #120]
   259d8:	b	259f8 <__sanitizer_set_death_callback@@Base+0x2f10>
   259dc:	cmp	w2, #0x3
   259e0:	b.ne	259e8 <__sanitizer_set_death_callback@@Base+0x2f00>  // b.any
   259e4:	cbz	x22, 25b08 <__sanitizer_set_death_callback@@Base+0x3020>
   259e8:	ldr	x0, [x26, #16]
   259ec:	add	x28, x28, #0x1
   259f0:	cmp	x0, x28
   259f4:	b.ls	25aa8 <__sanitizer_set_death_callback@@Base+0x2fc0>  // b.plast
   259f8:	ldr	x8, [x26, #24]
   259fc:	lsl	x24, x28, #3
   25a00:	ldp	x5, x6, [x27, #104]
   25a04:	add	x8, x8, x24
   25a08:	ldp	w3, w2, [x19, #40]
   25a0c:	mov	x1, x21
   25a10:	ldr	w4, [x19, #48]
   25a14:	ldr	w0, [x8, #4]
   25a18:	ldr	x7, [x27, #8]
   25a1c:	str	x20, [sp]
   25a20:	bl	24ef0 <__sanitizer_set_death_callback@@Base+0x2408>
   25a24:	cbz	w0, 25b50 <__sanitizer_set_death_callback@@Base+0x3068>
   25a28:	ldr	x0, [x26, #24]
   25a2c:	add	x1, x0, x24
   25a30:	ldr	w2, [x0, x24]
   25a34:	cmp	w2, #0x47
   25a38:	b.eq	25a6c <__sanitizer_set_death_callback@@Base+0x2f84>  // b.none
   25a3c:	b.ls	259dc <__sanitizer_set_death_callback@@Base+0x2ef4>  // b.plast
   25a40:	cmp	w2, #0x6e
   25a44:	b.eq	25a50 <__sanitizer_set_death_callback@@Base+0x2f68>  // b.none
   25a48:	cmp	w2, w23
   25a4c:	b.ne	259e8 <__sanitizer_set_death_callback@@Base+0x2f00>  // b.any
   25a50:	ldr	w0, [sp, #128]
   25a54:	cmp	w0, #0x4
   25a58:	b.ne	259e8 <__sanitizer_set_death_callback@@Base+0x2f00>  // b.any
   25a5c:	ldp	x19, x20, [sp, #32]
   25a60:	ldp	x23, x24, [sp, #64]
   25a64:	ldr	x22, [sp, #136]
   25a68:	b	25aec <__sanitizer_set_death_callback@@Base+0x3004>
   25a6c:	ldr	w0, [x1, #4]
   25a70:	cmp	w0, #0x20
   25a74:	b.eq	259e8 <__sanitizer_set_death_callback@@Base+0x2f00>  // b.none
   25a78:	ldp	x4, x3, [sp, #112]
   25a7c:	mov	x5, x25
   25a80:	mov	x2, x20
   25a84:	mov	x1, x19
   25a88:	mov	x0, x27
   25a8c:	add	x28, x28, #0x1
   25a90:	bl	25820 <__sanitizer_set_death_callback@@Base+0x2d38>
   25a94:	cmp	x0, #0x0
   25a98:	csel	x22, x22, x0, eq  // eq = none
   25a9c:	ldr	x0, [x26, #16]
   25aa0:	cmp	x0, x28
   25aa4:	b.hi	259f8 <__sanitizer_set_death_callback@@Base+0x2f10>  // b.pmore
   25aa8:	ldp	x19, x20, [sp, #32]
   25aac:	ldp	x23, x24, [sp, #64]
   25ab0:	mov	x0, x22
   25ab4:	ldp	x29, x30, [sp, #16]
   25ab8:	ldp	x21, x22, [sp, #48]
   25abc:	ldp	x25, x26, [sp, #80]
   25ac0:	ldp	x27, x28, [sp, #96]
   25ac4:	add	sp, sp, #0xd0
   25ac8:	ret
   25acc:	ldp	x19, x20, [sp, #32]
   25ad0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   25ad4:	ldr	x3, [sp, #112]
   25ad8:	mov	x0, x25
   25adc:	add	x1, x1, #0x88
   25ae0:	mov	w2, #0x0                   	// #0
   25ae4:	mov	x22, #0x0                   	// #0
   25ae8:	blr	x3
   25aec:	mov	x0, x22
   25af0:	ldp	x29, x30, [sp, #16]
   25af4:	ldp	x21, x22, [sp, #48]
   25af8:	ldp	x25, x26, [sp, #80]
   25afc:	ldp	x27, x28, [sp, #96]
   25b00:	add	sp, sp, #0xd0
   25b04:	ret
   25b08:	ldr	w0, [sp, #128]
   25b0c:	ldr	x22, [sp, #136]
   25b10:	cmp	w0, #0x4
   25b14:	csel	x22, x22, xzr, eq  // eq = none
   25b18:	b	259e8 <__sanitizer_set_death_callback@@Base+0x2f00>
   25b1c:	mov	x0, x21
   25b20:	mov	x22, #0x0                   	// #0
   25b24:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   25b28:	add	x1, x1, #0xc8
   25b2c:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   25b30:	mov	x0, x22
   25b34:	ldp	x29, x30, [sp, #16]
   25b38:	ldp	x19, x20, [sp, #32]
   25b3c:	ldp	x21, x22, [sp, #48]
   25b40:	ldp	x25, x26, [sp, #80]
   25b44:	ldp	x27, x28, [sp, #96]
   25b48:	add	sp, sp, #0xd0
   25b4c:	ret
   25b50:	mov	x22, #0x0                   	// #0
   25b54:	ldp	x19, x20, [sp, #32]
   25b58:	ldp	x23, x24, [sp, #64]
   25b5c:	b	25ab0 <__sanitizer_set_death_callback@@Base+0x2fc8>
   25b60:	mov	x22, #0x0                   	// #0
   25b64:	ldp	x19, x20, [sp, #32]
   25b68:	b	25aec <__sanitizer_set_death_callback@@Base+0x3004>
   25b6c:	nop
   25b70:	sub	sp, sp, #0x130
   25b74:	stp	x29, x30, [sp, #16]
   25b78:	add	x29, sp, #0x10
   25b7c:	stp	x25, x26, [sp, #80]
   25b80:	mov	x25, x4
   25b84:	ldr	x4, [x4, #24]
   25b88:	str	x6, [sp, #128]
   25b8c:	stp	x0, x3, [sp, #176]
   25b90:	str	x5, [sp, #216]
   25b94:	cbz	x4, 25de8 <__sanitizer_set_death_callback@@Base+0x3300>
   25b98:	mov	x26, x7
   25b9c:	stp	x23, x24, [sp, #64]
   25ba0:	add	x24, sp, #0xf0
   25ba4:	stp	x27, x28, [sp, #96]
   25ba8:	mov	x27, x2
   25bac:	mov	x28, x1
   25bb0:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   25bb4:	add	x1, x24, #0x8
   25bb8:	add	x0, x0, #0x428
   25bbc:	stp	x19, x20, [sp, #32]
   25bc0:	stp	x21, x22, [sp, #48]
   25bc4:	stp	x1, x0, [sp, #224]
   25bc8:	mov	x0, x25
   25bcc:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   25bd0:	mov	x2, x0
   25bd4:	cbz	x0, 25dd8 <__sanitizer_set_death_callback@@Base+0x32f0>
   25bd8:	ldr	x3, [sp, #128]
   25bdc:	mov	x4, x26
   25be0:	add	x1, x27, #0x60
   25be4:	add	x0, x27, #0x58
   25be8:	bl	247f0 <__sanitizer_set_death_callback@@Base+0x1d08>
   25bec:	mov	x23, x0
   25bf0:	cbz	x0, 25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   25bf4:	ldr	w0, [x0, #8]
   25bf8:	cmp	w0, #0x2e
   25bfc:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   25c00:	b.eq	25fb4 <__sanitizer_set_death_callback@@Base+0x34cc>  // b.none
   25c04:	cmp	w0, #0x1d
   25c08:	b.eq	26030 <__sanitizer_set_death_callback@@Base+0x3548>  // b.none
   25c0c:	ldr	x0, [sp, #304]
   25c10:	mov	w19, #0x0                   	// #0
   25c14:	str	xzr, [sp, #120]
   25c18:	str	x0, [sp, #208]
   25c1c:	ldr	x0, [x23, #16]
   25c20:	str	x0, [sp, #136]
   25c24:	cbz	x0, 26198 <__sanitizer_set_death_callback@@Base+0x36b0>
   25c28:	mov	x21, x27
   25c2c:	mov	x22, #0x0                   	// #0
   25c30:	mov	w20, #0x2007                	// #8199
   25c34:	str	xzr, [sp, #136]
   25c38:	str	wzr, [sp, #144]
   25c3c:	str	wzr, [sp, #152]
   25c40:	str	wzr, [sp, #164]
   25c44:	str	xzr, [sp, #168]
   25c48:	str	xzr, [sp, #192]
   25c4c:	stp	wzr, wzr, [sp, #200]
   25c50:	ldr	x0, [x23, #24]
   25c54:	lsl	x27, x22, #3
   25c58:	ldp	x5, x6, [x28, #104]
   25c5c:	add	x0, x0, x27
   25c60:	ldp	w3, w2, [x21, #40]
   25c64:	mov	x1, x25
   25c68:	ldr	w4, [x21, #48]
   25c6c:	ldr	w0, [x0, #4]
   25c70:	ldr	x7, [x28, #8]
   25c74:	str	x24, [sp]
   25c78:	bl	24ef0 <__sanitizer_set_death_callback@@Base+0x2408>
   25c7c:	cbz	w0, 25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   25c80:	ldr	w0, [x23, #8]
   25c84:	cmp	w0, #0x11
   25c88:	b.eq	25df0 <__sanitizer_set_death_callback@@Base+0x3308>  // b.none
   25c8c:	cbz	w19, 25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   25c90:	ldr	x0, [x23, #24]
   25c94:	add	x1, x0, x27
   25c98:	ldr	w0, [x0, x27]
   25c9c:	cmp	w0, #0x55
   25ca0:	b.eq	25f50 <__sanitizer_set_death_callback@@Base+0x3468>  // b.none
   25ca4:	b.hi	25ecc <__sanitizer_set_death_callback@@Base+0x33e4>  // b.pmore
   25ca8:	cmp	w0, #0x12
   25cac:	b.eq	25f8c <__sanitizer_set_death_callback@@Base+0x34a4>  // b.none
   25cb0:	b.ls	25ea4 <__sanitizer_set_death_callback@@Base+0x33bc>  // b.plast
   25cb4:	cmp	w0, #0x31
   25cb8:	b.eq	25cc4 <__sanitizer_set_death_callback@@Base+0x31dc>  // b.none
   25cbc:	cmp	w0, #0x47
   25cc0:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25cc4:	ldr	w0, [sp, #144]
   25cc8:	cbz	w0, 25ff4 <__sanitizer_set_death_callback@@Base+0x350c>
   25ccc:	nop
   25cd0:	ldr	x0, [x23, #16]
   25cd4:	add	x22, x22, #0x1
   25cd8:	cmp	x0, x22
   25cdc:	b.hi	25c50 <__sanitizer_set_death_callback@@Base+0x3168>  // b.pmore
   25ce0:	mov	x27, x21
   25ce4:	cbz	w19, 25e3c <__sanitizer_set_death_callback@@Base+0x3354>
   25ce8:	ldr	x0, [sp, #120]
   25cec:	ldr	x0, [x0]
   25cf0:	cbz	x0, 25e28 <__sanitizer_set_death_callback@@Base+0x3340>
   25cf4:	ldr	w0, [sp, #152]
   25cf8:	cbnz	w0, 2606c <__sanitizer_set_death_callback@@Base+0x3584>
   25cfc:	ldr	w1, [sp, #164]
   25d00:	ldr	w0, [sp, #200]
   25d04:	tst	w0, w1
   25d08:	b.eq	25e28 <__sanitizer_set_death_callback@@Base+0x3340>  // b.none
   25d0c:	ldr	w0, [sp, #204]
   25d10:	mov	x6, x26
   25d14:	ldr	x3, [sp, #192]
   25d18:	cmp	w0, #0x0
   25d1c:	ldr	x0, [sp, #136]
   25d20:	ldp	x2, x5, [sp, #120]
   25d24:	add	x4, x0, x3
   25d28:	csel	x4, x4, x0, ne  // ne = any
   25d2c:	ldr	x1, [x28, #16]
   25d30:	ldr	x0, [sp, #176]
   25d34:	ldr	x7, [sp, #208]
   25d38:	bl	249c8 <__sanitizer_set_death_callback@@Base+0x1ee0>
   25d3c:	cbz	w0, 25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   25d40:	ldr	w0, [x23, #12]
   25d44:	cbz	w0, 25dd0 <__sanitizer_set_death_callback@@Base+0x32e8>
   25d48:	mov	x2, #0x20                  	// #32
   25d4c:	mov	w1, #0x0                   	// #0
   25d50:	mov	x0, x24
   25d54:	bl	6530 <__asan_internal_memset@plt>
   25d58:	ldr	x0, [sp, #304]
   25d5c:	stp	x0, x24, [sp]
   25d60:	mov	x7, x26
   25d64:	ldr	x6, [sp, #128]
   25d68:	mov	x4, x25
   25d6c:	ldr	x0, [sp, #176]
   25d70:	mov	x2, x27
   25d74:	ldr	x3, [sp, #184]
   25d78:	mov	x1, x28
   25d7c:	ldr	x5, [sp, #216]
   25d80:	bl	25b70 <__sanitizer_set_death_callback@@Base+0x3088>
   25d84:	cbz	w0, 25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   25d88:	ldr	x0, [sp, #264]
   25d8c:	cbz	x0, 25dd0 <__sanitizer_set_death_callback@@Base+0x32e8>
   25d90:	ldr	x2, [sp, #128]
   25d94:	mov	x3, x26
   25d98:	ldr	x0, [sp, #176]
   25d9c:	mov	x1, x24
   25da0:	bl	6600 <__asan_backtrace_vector_release@plt>
   25da4:	cbz	w0, 25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   25da8:	ldr	x1, [sp, #264]
   25dac:	adrp	x3, 27000 <__sanitizer_set_death_callback@@Base+0x4518>
   25db0:	ldr	x19, [sp, #240]
   25db4:	add	x3, x3, #0x3a8
   25db8:	mov	x2, #0x18                  	// #24
   25dbc:	mov	x0, x19
   25dc0:	bl	63a0 <__asan_backtrace_qsort@plt>
   25dc4:	ldr	x1, [sp, #120]
   25dc8:	ldr	x0, [sp, #264]
   25dcc:	stp	x19, x0, [x1, #24]
   25dd0:	ldr	x0, [x25, #24]
   25dd4:	cbnz	x0, 25bc8 <__sanitizer_set_death_callback@@Base+0x30e0>
   25dd8:	ldp	x19, x20, [sp, #32]
   25ddc:	ldp	x21, x22, [sp, #48]
   25de0:	ldp	x23, x24, [sp, #64]
   25de4:	ldp	x27, x28, [sp, #96]
   25de8:	mov	w0, #0x1                   	// #1
   25dec:	b	25e94 <__sanitizer_set_death_callback@@Base+0x33ac>
   25df0:	ldr	x0, [x23, #24]
   25df4:	ldr	w0, [x0, x27]
   25df8:	cmp	w0, #0x11
   25dfc:	b.ne	25c8c <__sanitizer_set_death_callback@@Base+0x31a4>  // b.any
   25e00:	ldr	w0, [sp, #240]
   25e04:	cmp	w0, #0x1
   25e08:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25e0c:	ldr	x0, [sp, #248]
   25e10:	str	x0, [sp, #184]
   25e14:	cbz	w19, 25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   25e18:	str	x0, [sp, #192]
   25e1c:	mov	w0, #0x1                   	// #1
   25e20:	str	w0, [sp, #200]
   25e24:	b	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   25e28:	ldp	x1, x3, [sp, #120]
   25e2c:	mov	x4, x26
   25e30:	ldr	x0, [sp, #176]
   25e34:	mov	x2, #0x28                  	// #40
   25e38:	bl	6890 <__asan_backtrace_free@plt>
   25e3c:	ldr	w0, [x23, #12]
   25e40:	cbz	w0, 25dd0 <__sanitizer_set_death_callback@@Base+0x32e8>
   25e44:	ldr	x0, [sp, #304]
   25e48:	str	x0, [sp]
   25e4c:	ldr	x0, [sp, #312]
   25e50:	str	x0, [sp, #8]
   25e54:	ldr	x6, [sp, #128]
   25e58:	mov	x7, x26
   25e5c:	ldr	x0, [sp, #176]
   25e60:	mov	x4, x25
   25e64:	ldr	x3, [sp, #184]
   25e68:	mov	x2, x27
   25e6c:	ldr	x5, [sp, #216]
   25e70:	mov	x1, x28
   25e74:	bl	25b70 <__sanitizer_set_death_callback@@Base+0x3088>
   25e78:	cbnz	w0, 25dd0 <__sanitizer_set_death_callback@@Base+0x32e8>
   25e7c:	nop
   25e80:	ldp	x19, x20, [sp, #32]
   25e84:	mov	w0, #0x0                   	// #0
   25e88:	ldp	x21, x22, [sp, #48]
   25e8c:	ldp	x23, x24, [sp, #64]
   25e90:	ldp	x27, x28, [sp, #96]
   25e94:	ldp	x29, x30, [sp, #16]
   25e98:	ldp	x25, x26, [sp, #80]
   25e9c:	add	sp, sp, #0x130
   25ea0:	ret
   25ea4:	cmp	w0, #0x3
   25ea8:	b.ne	25f34 <__sanitizer_set_death_callback@@Base+0x344c>  // b.any
   25eac:	ldr	x0, [sp, #120]
   25eb0:	ldr	x0, [x0]
   25eb4:	cbnz	x0, 25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   25eb8:	ldr	w0, [sp, #240]
   25ebc:	cmp	w0, #0x4
   25ec0:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25ec4:	ldr	x0, [sp, #248]
   25ec8:	b	26024 <__sanitizer_set_death_callback@@Base+0x353c>
   25ecc:	cmp	w0, #0x59
   25ed0:	b.eq	25f70 <__sanitizer_set_death_callback@@Base+0x3488>  // b.none
   25ed4:	b.ls	25f08 <__sanitizer_set_death_callback@@Base+0x3420>  // b.plast
   25ed8:	cmp	w0, #0x6e
   25edc:	b.eq	25ee8 <__sanitizer_set_death_callback@@Base+0x3400>  // b.none
   25ee0:	cmp	w0, w20
   25ee4:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25ee8:	ldr	w0, [sp, #240]
   25eec:	cmp	w0, #0x4
   25ef0:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25ef4:	ldr	x1, [sp, #120]
   25ef8:	str	w19, [sp, #144]
   25efc:	ldr	x0, [sp, #248]
   25f00:	str	x0, [x1]
   25f04:	b	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   25f08:	cmp	w0, #0x58
   25f0c:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25f10:	ldr	w0, [sp, #240]
   25f14:	cmp	w0, #0x2
   25f18:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25f1c:	ldr	x0, [sp, #248]
   25f20:	cbnz	x0, 2603c <__sanitizer_set_death_callback@@Base+0x3554>
   25f24:	ldr	x0, [sp, #120]
   25f28:	ldr	x1, [sp, #232]
   25f2c:	str	x1, [x0, #8]
   25f30:	b	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   25f34:	cmp	w0, #0x11
   25f38:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25f3c:	ldr	w0, [sp, #240]
   25f40:	cmp	w0, #0x1
   25f44:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25f48:	ldr	x0, [sp, #248]
   25f4c:	b	25e18 <__sanitizer_set_death_callback@@Base+0x3330>
   25f50:	ldr	w0, [sp, #240]
   25f54:	cmp	w0, #0x2
   25f58:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   25f5c:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25f60:	ldr	x0, [sp, #248]
   25f64:	str	w19, [sp, #152]
   25f68:	str	x0, [sp, #168]
   25f6c:	b	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   25f70:	ldr	w0, [sp, #240]
   25f74:	cmp	w0, #0x2
   25f78:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25f7c:	ldr	x1, [sp, #120]
   25f80:	ldr	x0, [sp, #248]
   25f84:	str	w0, [x1, #16]
   25f88:	b	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   25f8c:	ldr	w0, [sp, #240]
   25f90:	cmp	w0, #0x1
   25f94:	b.eq	25fa4 <__sanitizer_set_death_callback@@Base+0x34bc>  // b.none
   25f98:	cmp	w0, #0x2
   25f9c:	b.ne	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.any
   25fa0:	str	w19, [sp, #204]
   25fa4:	ldr	x0, [sp, #248]
   25fa8:	str	x0, [sp, #136]
   25fac:	str	w19, [sp, #164]
   25fb0:	b	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   25fb4:	cmp	w0, #0x1d
   25fb8:	ldp	x0, x1, [sp, #304]
   25fbc:	csel	x0, x0, x1, ne  // ne = any
   25fc0:	str	x0, [sp, #208]
   25fc4:	ldr	x2, [sp, #128]
   25fc8:	mov	x3, x26
   25fcc:	ldr	x0, [sp, #176]
   25fd0:	mov	x1, #0x28                  	// #40
   25fd4:	bl	65b0 <__asan_backtrace_alloc@plt>
   25fd8:	str	x0, [sp, #120]
   25fdc:	cbz	x0, 25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   25fe0:	mov	x2, #0x28                  	// #40
   25fe4:	mov	w1, #0x0                   	// #0
   25fe8:	mov	w19, #0x1                   	// #1
   25fec:	bl	6530 <__asan_internal_memset@plt>
   25ff0:	b	25c1c <__sanitizer_set_death_callback@@Base+0x3134>
   25ff4:	ldr	w0, [x1, #4]
   25ff8:	cmp	w0, #0x20
   25ffc:	b.eq	261d0 <__sanitizer_set_death_callback@@Base+0x36e8>  // b.none
   26000:	ldr	x4, [sp, #128]
   26004:	mov	x5, x26
   26008:	ldr	x3, [sp, #224]
   2600c:	mov	x2, x24
   26010:	mov	x1, x21
   26014:	mov	x0, x28
   26018:	bl	25820 <__sanitizer_set_death_callback@@Base+0x2d38>
   2601c:	str	wzr, [sp, #144]
   26020:	cbz	x0, 25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   26024:	ldr	x1, [sp, #120]
   26028:	str	x0, [x1]
   2602c:	b	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   26030:	ldr	x0, [sp, #312]
   26034:	str	x0, [sp, #208]
   26038:	b	25fc4 <__sanitizer_set_death_callback@@Base+0x34dc>
   2603c:	ldr	x1, [sp, #216]
   26040:	sub	x2, x0, #0x1
   26044:	ldr	x1, [x1, #48]
   26048:	cmp	x2, x1
   2604c:	b.cs	261ec <__sanitizer_set_death_callback@@Base+0x3704>  // b.hs, b.nlast
   26050:	ldr	x1, [sp, #216]
   26054:	ldr	x1, [x1, #56]
   26058:	add	x0, x1, x0, lsl #3
   2605c:	ldr	x1, [sp, #120]
   26060:	ldur	x0, [x0, #-8]
   26064:	str	x0, [x1, #8]
   26068:	b	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   2606c:	ldr	x0, [x28, #96]
   26070:	ldr	x1, [sp, #168]
   26074:	cmp	x0, x1
   26078:	b.ls	261b4 <__sanitizer_set_death_callback@@Base+0x36cc>  // b.plast
   2607c:	ldr	x3, [x28, #88]
   26080:	stp	x28, x23, [sp, #136]
   26084:	ldr	w4, [x28, #120]
   26088:	ldr	x5, [sp, #168]
   2608c:	str	x25, [sp, #152]
   26090:	ldr	x25, [sp, #176]
   26094:	sub	x1, x0, x5
   26098:	add	x0, x3, x5
   2609c:	stp	x0, x1, [sp, #256]
   260a0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   260a4:	ldr	x0, [sp, #128]
   260a8:	add	x2, x2, #0x78
   260ac:	ldr	x19, [sp, #184]
   260b0:	mov	x28, x0
   260b4:	ldr	x23, [sp, #208]
   260b8:	mov	x21, #0xffffffff            	// #4294967295
   260bc:	mov	x20, #0xffff                	// #65535
   260c0:	stp	x2, x3, [sp, #240]
   260c4:	str	w4, [sp, #272]
   260c8:	str	x0, [sp, #280]
   260cc:	str	x26, [sp, #288]
   260d0:	str	wzr, [sp, #296]
   260d4:	nop
   260d8:	ldr	w1, [x27, #48]
   260dc:	mov	x0, x24
   260e0:	bl	24c58 <__sanitizer_set_death_callback@@Base+0x2170>
   260e4:	mov	x22, x0
   260e8:	ldr	w1, [x27, #48]
   260ec:	mov	x0, x24
   260f0:	bl	24c58 <__sanitizer_set_death_callback@@Base+0x2170>
   260f4:	orr	x1, x22, x0
   260f8:	cbz	x1, 261d8 <__sanitizer_set_death_callback@@Base+0x36f0>
   260fc:	ldr	w1, [x27, #48]
   26100:	cmp	w1, #0x4
   26104:	b.eq	26180 <__sanitizer_set_death_callback@@Base+0x3698>  // b.none
   26108:	b.gt	26138 <__sanitizer_set_death_callback@@Base+0x3650>
   2610c:	cmp	w1, #0x1
   26110:	b.eq	2618c <__sanitizer_set_death_callback@@Base+0x36a4>  // b.none
   26114:	cmp	w1, #0x2
   26118:	b.ne	26150 <__sanitizer_set_death_callback@@Base+0x3668>  // b.any
   2611c:	cmp	x22, x20
   26120:	cset	w1, eq  // eq = none
   26124:	cbz	w1, 26150 <__sanitizer_set_death_callback@@Base+0x3668>
   26128:	mov	x19, x0
   2612c:	ldr	w0, [sp, #296]
   26130:	cbz	w0, 260d8 <__sanitizer_set_death_callback@@Base+0x35f0>
   26134:	b	25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   26138:	cmp	w1, #0x8
   2613c:	b.ne	26150 <__sanitizer_set_death_callback@@Base+0x3668>  // b.any
   26140:	cmn	x22, #0x1
   26144:	cset	w1, eq  // eq = none
   26148:	cbnz	w1, 26128 <__sanitizer_set_death_callback@@Base+0x3640>
   2614c:	nop
   26150:	ldr	x1, [sp, #136]
   26154:	add	x4, x0, x19
   26158:	ldr	x2, [sp, #120]
   2615c:	add	x3, x22, x19
   26160:	ldr	x1, [x1, #16]
   26164:	mov	x7, x23
   26168:	mov	x6, x26
   2616c:	mov	x5, x28
   26170:	mov	x0, x25
   26174:	bl	249c8 <__sanitizer_set_death_callback@@Base+0x1ee0>
   26178:	cbnz	w0, 2612c <__sanitizer_set_death_callback@@Base+0x3644>
   2617c:	b	25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   26180:	cmp	x22, x21
   26184:	cset	w1, eq  // eq = none
   26188:	b	26124 <__sanitizer_set_death_callback@@Base+0x363c>
   2618c:	cmp	x22, #0xff
   26190:	cset	w1, eq  // eq = none
   26194:	b	26124 <__sanitizer_set_death_callback@@Base+0x363c>
   26198:	str	wzr, [sp, #152]
   2619c:	str	wzr, [sp, #164]
   261a0:	str	xzr, [sp, #168]
   261a4:	str	xzr, [sp, #192]
   261a8:	stp	wzr, wzr, [sp, #200]
   261ac:	cbz	w19, 25e3c <__sanitizer_set_death_callback@@Base+0x3354>
   261b0:	b	25ce8 <__sanitizer_set_death_callback@@Base+0x3200>
   261b4:	ldr	x3, [sp, #128]
   261b8:	mov	x0, x26
   261bc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   261c0:	mov	w2, #0x0                   	// #0
   261c4:	add	x1, x1, #0x130
   261c8:	blr	x3
   261cc:	b	25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   261d0:	str	wzr, [sp, #144]
   261d4:	b	25cd0 <__sanitizer_set_death_callback@@Base+0x31e8>
   261d8:	ldr	w0, [sp, #296]
   261dc:	ldp	x28, x23, [sp, #136]
   261e0:	ldr	x25, [sp, #152]
   261e4:	cbz	w0, 25d40 <__sanitizer_set_death_callback@@Base+0x3258>
   261e8:	b	25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   261ec:	mov	x0, x25
   261f0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   261f4:	add	x1, x1, #0xf8
   261f8:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   261fc:	b	25e80 <__sanitizer_set_death_callback@@Base+0x3398>
   26200:	sub	sp, sp, #0x1d0
   26204:	mov	x7, x6
   26208:	stp	x29, x30, [sp, #16]
   2620c:	add	x29, sp, #0x10
   26210:	stp	x23, x24, [sp, #64]
   26214:	mov	x23, x1
   26218:	mov	w1, #0x1                   	// #1
   2621c:	stp	x3, x6, [sp, #112]
   26220:	ldr	x6, [x23, #32]
   26224:	str	w1, [x7]
   26228:	str	x4, [sp, #128]
   2622c:	cbz	x6, 264cc <__sanitizer_set_death_callback@@Base+0x39e4>
   26230:	ldr	x4, [x23, #24]
   26234:	stp	x19, x20, [sp, #32]
   26238:	mov	x20, x0
   2623c:	stp	x21, x22, [sp, #48]
   26240:	mov	x22, x5
   26244:	mov	x21, x2
   26248:	mov	x5, x6
   2624c:	mov	x3, #0x0                   	// #0
   26250:	stp	x25, x26, [sp, #80]
   26254:	add	x0, x5, x3
   26258:	cmp	x5, x3
   2625c:	and	x1, x0, #0xfffffffffffffffe
   26260:	b.ls	264c0 <__sanitizer_set_death_callback@@Base+0x39d8>  // b.plast
   26264:	lsr	x0, x0, #1
   26268:	add	x1, x1, x0
   2626c:	lsl	x2, x1, #3
   26270:	ldr	x1, [x4, x1, lsl #3]
   26274:	add	x24, x4, x2
   26278:	cmp	x1, x21
   2627c:	b.hi	264ac <__sanitizer_set_death_callback@@Base+0x39c4>  // b.pmore
   26280:	ldr	x1, [x24, #8]
   26284:	add	x3, x0, #0x1
   26288:	cmp	x1, x21
   2628c:	b.ls	26254 <__sanitizer_set_death_callback@@Base+0x376c>  // b.plast
   26290:	asr	x2, x2, #3
   26294:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   26298:	movk	x0, #0xaaab
   2629c:	mov	x1, x0
   262a0:	mul	x2, x2, x0
   262a4:	add	x2, x2, #0x1
   262a8:	cmp	x6, x2
   262ac:	b.hi	262dc <__sanitizer_set_death_callback@@Base+0x37f4>  // b.pmore
   262b0:	b	262e8 <__sanitizer_set_death_callback@@Base+0x3800>
   262b4:	ldr	x0, [x24, #32]
   262b8:	cmp	x0, x21
   262bc:	b.ls	262e8 <__sanitizer_set_death_callback@@Base+0x3800>  // b.plast
   262c0:	add	x24, x24, #0x18
   262c4:	sub	x0, x24, x4
   262c8:	asr	x0, x0, #3
   262cc:	mul	x0, x0, x1
   262d0:	add	x0, x0, #0x1
   262d4:	cmp	x6, x0
   262d8:	b.ls	262e8 <__sanitizer_set_death_callback@@Base+0x3800>  // b.plast
   262dc:	ldr	x0, [x24, #24]
   262e0:	cmp	x0, x21
   262e4:	b.ls	262b4 <__sanitizer_set_death_callback@@Base+0x37cc>  // b.plast
   262e8:	ldr	x26, [x24, #16]
   262ec:	cmp	x4, x24
   262f0:	ldr	w1, [x20, #8]
   262f4:	ldr	x19, [x26, #104]
   262f8:	b.cc	26320 <__sanitizer_set_death_callback@@Base+0x3838>  // b.lo, b.ul, b.last
   262fc:	b	26350 <__sanitizer_set_death_callback@@Base+0x3868>
   26300:	cmn	x19, #0x1
   26304:	b.ne	26350 <__sanitizer_set_death_callback@@Base+0x3868>  // b.any
   26308:	ldur	x26, [x24, #-8]
   2630c:	sub	x24, x24, #0x18
   26310:	ldr	x0, [x23, #24]
   26314:	ldr	x19, [x26, #104]
   26318:	cmp	x0, x24
   2631c:	b.cs	26350 <__sanitizer_set_death_callback@@Base+0x3868>  // b.hs, b.nlast
   26320:	ldur	x0, [x24, #-24]
   26324:	cmp	x0, x21
   26328:	b.hi	26350 <__sanitizer_set_death_callback@@Base+0x3868>  // b.pmore
   2632c:	ldur	x0, [x24, #-16]
   26330:	cmp	x0, x21
   26334:	b.ls	26350 <__sanitizer_set_death_callback@@Base+0x3868>  // b.plast
   26338:	cbz	w1, 26300 <__sanitizer_set_death_callback@@Base+0x3818>
   2633c:	add	x0, x26, #0x68
   26340:	ldar	x19, [x0]
   26344:	ldr	w1, [x20, #8]
   26348:	cmn	x19, #0x1
   2634c:	b.eq	26308 <__sanitizer_set_death_callback@@Base+0x3820>  // b.none
   26350:	cbnz	w1, 26548 <__sanitizer_set_death_callback@@Base+0x3a60>
   26354:	cbz	x19, 26554 <__sanitizer_set_death_callback@@Base+0x3a6c>
   26358:	cmn	x19, #0x1
   2635c:	b.eq	26628 <__sanitizer_set_death_callback@@Base+0x3b40>  // b.none
   26360:	ldr	x7, [x24, #16]
   26364:	mov	x2, #0x0                   	// #0
   26368:	ldr	x3, [x7, #112]
   2636c:	add	x0, x2, x3
   26370:	cmp	x2, x3
   26374:	and	x1, x0, #0xfffffffffffffffe
   26378:	b.cs	264fc <__sanitizer_set_death_callback@@Base+0x3a14>  // b.hs, b.nlast
   2637c:	lsr	x0, x0, #1
   26380:	add	x1, x1, x0
   26384:	add	x4, x19, x1, lsl #3
   26388:	ldr	x1, [x19, x1, lsl #3]
   2638c:	cmp	x1, x21
   26390:	b.hi	264e8 <__sanitizer_set_death_callback@@Base+0x3a00>  // b.pmore
   26394:	ldr	x1, [x4, #24]
   26398:	add	x2, x0, #0x1
   2639c:	cmp	x1, x21
   263a0:	b.ls	2636c <__sanitizer_set_death_callback@@Base+0x3884>  // b.plast
   263a4:	ldr	x6, [x7, #128]
   263a8:	ldr	w10, [x4, #16]
   263ac:	ldr	x8, [x4, #8]
   263b0:	cbz	x6, 26530 <__sanitizer_set_death_callback@@Base+0x3a48>
   263b4:	ldr	x4, [x7, #120]
   263b8:	mov	x5, x6
   263bc:	mov	x3, #0x0                   	// #0
   263c0:	add	x0, x5, x3
   263c4:	cmp	x5, x3
   263c8:	and	x1, x0, #0xfffffffffffffffe
   263cc:	b.ls	26530 <__sanitizer_set_death_callback@@Base+0x3a48>  // b.plast
   263d0:	lsr	x0, x0, #1
   263d4:	add	x1, x1, x0
   263d8:	lsl	x2, x1, #3
   263dc:	ldr	x7, [x4, x1, lsl #3]
   263e0:	add	x1, x4, x2
   263e4:	cmp	x7, x21
   263e8:	b.hi	2651c <__sanitizer_set_death_callback@@Base+0x3a34>  // b.pmore
   263ec:	ldr	x7, [x1, #8]
   263f0:	add	x3, x0, #0x1
   263f4:	cmp	x7, x21
   263f8:	b.ls	263c0 <__sanitizer_set_death_callback@@Base+0x38d8>  // b.plast
   263fc:	asr	x0, x2, #3
   26400:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   26404:	movk	x2, #0xaaab
   26408:	mov	x3, x2
   2640c:	mul	x0, x0, x2
   26410:	add	x0, x0, #0x1
   26414:	cmp	x6, x0
   26418:	b.hi	26448 <__sanitizer_set_death_callback@@Base+0x3960>  // b.pmore
   2641c:	b	26454 <__sanitizer_set_death_callback@@Base+0x396c>
   26420:	ldr	x0, [x1, #32]
   26424:	cmp	x0, x21
   26428:	b.ls	26454 <__sanitizer_set_death_callback@@Base+0x396c>  // b.plast
   2642c:	add	x1, x1, #0x18
   26430:	sub	x0, x1, x4
   26434:	asr	x0, x0, #3
   26438:	mul	x0, x0, x3
   2643c:	add	x0, x0, #0x1
   26440:	cmp	x6, x0
   26444:	b.ls	26454 <__sanitizer_set_death_callback@@Base+0x396c>  // b.plast
   26448:	ldr	x0, [x1, #24]
   2644c:	cmp	x0, x21
   26450:	b.ls	26420 <__sanitizer_set_death_callback@@Base+0x3938>  // b.plast
   26454:	ldr	x19, [x1, #16]
   26458:	add	x6, sp, #0x150
   2645c:	ldr	x20, [sp, #112]
   26460:	add	x5, sp, #0x190
   26464:	ldp	x1, x2, [x19, #24]
   26468:	mov	x4, x22
   2646c:	mov	x0, x21
   26470:	mov	x3, x20
   26474:	str	w10, [sp, #336]
   26478:	str	x8, [sp, #400]
   2647c:	bl	24690 <__sanitizer_set_death_callback@@Base+0x1ba8>
   26480:	cbnz	w0, 26778 <__sanitizer_set_death_callback@@Base+0x3c90>
   26484:	ldr	w3, [sp, #336]
   26488:	mov	x1, x21
   2648c:	ldr	x4, [x19]
   26490:	mov	x0, x22
   26494:	ldr	x2, [sp, #400]
   26498:	blr	x20
   2649c:	ldp	x19, x20, [sp, #32]
   264a0:	ldp	x21, x22, [sp, #48]
   264a4:	ldp	x25, x26, [sp, #80]
   264a8:	b	264d8 <__sanitizer_set_death_callback@@Base+0x39f0>
   264ac:	mov	x5, x0
   264b0:	add	x0, x5, x3
   264b4:	cmp	x5, x3
   264b8:	and	x1, x0, #0xfffffffffffffffe
   264bc:	b.hi	26264 <__sanitizer_set_death_callback@@Base+0x377c>  // b.pmore
   264c0:	ldp	x19, x20, [sp, #32]
   264c4:	ldp	x21, x22, [sp, #48]
   264c8:	ldp	x25, x26, [sp, #80]
   264cc:	mov	w0, #0x0                   	// #0
   264d0:	ldr	x1, [sp, #120]
   264d4:	str	wzr, [x1]
   264d8:	ldp	x29, x30, [sp, #16]
   264dc:	ldp	x23, x24, [sp, #64]
   264e0:	add	sp, sp, #0x1d0
   264e4:	ret
   264e8:	mov	x3, x0
   264ec:	add	x0, x2, x3
   264f0:	cmp	x2, x3
   264f4:	and	x1, x0, #0xfffffffffffffffe
   264f8:	b.cc	2637c <__sanitizer_set_death_callback@@Base+0x3894>  // b.lo, b.ul, b.last
   264fc:	ldr	x19, [x7, #80]
   26500:	cbz	x19, 26660 <__sanitizer_set_death_callback@@Base+0x3b78>
   26504:	mov	x2, x19
   26508:	mov	x1, x21
   2650c:	mov	x0, x22
   26510:	mov	x4, #0x0                   	// #0
   26514:	mov	w3, #0x0                   	// #0
   26518:	b	2663c <__sanitizer_set_death_callback@@Base+0x3b54>
   2651c:	mov	x5, x0
   26520:	add	x0, x5, x3
   26524:	cmp	x5, x3
   26528:	and	x1, x0, #0xfffffffffffffffe
   2652c:	b.hi	263d0 <__sanitizer_set_death_callback@@Base+0x38e8>  // b.pmore
   26530:	mov	w3, w10
   26534:	mov	x2, x8
   26538:	mov	x1, x21
   2653c:	mov	x0, x22
   26540:	mov	x4, #0x0                   	// #0
   26544:	b	2663c <__sanitizer_set_death_callback@@Base+0x3b54>
   26548:	add	x0, x26, #0x68
   2654c:	ldar	x19, [x0]
   26550:	cbnz	x19, 26358 <__sanitizer_set_death_callback@@Base+0x3870>
   26554:	add	x3, sp, #0x110
   26558:	add	x0, sp, #0xf0
   2655c:	ldr	x19, [x24, #16]
   26560:	mov	x25, x3
   26564:	mov	x2, #0x18                  	// #24
   26568:	mov	w1, #0x0                   	// #0
   2656c:	stp	x27, x28, [sp, #96]
   26570:	stp	x3, x0, [sp, #136]
   26574:	str	x19, [sp, #160]
   26578:	bl	6530 <__asan_internal_memset@plt>
   2657c:	mov	w1, #0x0                   	// #0
   26580:	mov	x0, x25
   26584:	mov	x2, #0x40                  	// #64
   26588:	str	xzr, [sp, #264]
   2658c:	bl	6530 <__asan_internal_memset@plt>
   26590:	ldr	x0, [x19, #56]
   26594:	ldr	x1, [x23, #80]
   26598:	cmp	x0, x1
   2659c:	b.cc	266f4 <__sanitizer_set_death_callback@@Base+0x3c0c>  // b.lo, b.ul, b.last
   265a0:	ldr	x3, [sp, #128]
   265a4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   265a8:	mov	x0, x22
   265ac:	add	x1, x1, #0x158
   265b0:	mov	w2, #0x0                   	// #0
   265b4:	blr	x3
   265b8:	ldp	x5, x4, [sp, #248]
   265bc:	mov	x3, x22
   265c0:	ldr	x1, [sp, #144]
   265c4:	mov	x0, x20
   265c8:	ldr	x19, [sp, #128]
   265cc:	mov	x25, #0x0                   	// #0
   265d0:	add	x4, x4, x5
   265d4:	stp	xzr, x4, [sp, #248]
   265d8:	mov	x2, x19
   265dc:	mov	x28, #0x0                   	// #0
   265e0:	mov	x27, #0x0                   	// #0
   265e4:	bl	6600 <__asan_backtrace_vector_release@plt>
   265e8:	ldr	x1, [sp, #136]
   265ec:	mov	x2, x19
   265f0:	mov	x3, x22
   265f4:	mov	x0, x20
   265f8:	mov	x19, #0xffffffffffffffff    	// #-1
   265fc:	bl	24588 <__sanitizer_set_death_callback@@Base+0x1aa0>
   26600:	mov	w1, #0x0                   	// #0
   26604:	ldr	w0, [x20, #8]
   26608:	cbnz	w0, 26788 <__sanitizer_set_death_callback@@Base+0x3ca0>
   2660c:	stp	x19, x28, [x26, #104]
   26610:	stp	x25, x27, [x26, #120]
   26614:	cmn	x19, #0x1
   26618:	b.eq	267ac <__sanitizer_set_death_callback@@Base+0x3cc4>  // b.none
   2661c:	ldp	x27, x28, [sp, #96]
   26620:	b	26360 <__sanitizer_set_death_callback@@Base+0x3878>
   26624:	ldp	x27, x28, [sp, #96]
   26628:	mov	x1, x21
   2662c:	mov	x0, x22
   26630:	mov	x4, #0x0                   	// #0
   26634:	mov	w3, #0x0                   	// #0
   26638:	mov	x2, #0x0                   	// #0
   2663c:	ldr	x5, [sp, #112]
   26640:	blr	x5
   26644:	ldp	x29, x30, [sp, #16]
   26648:	ldp	x19, x20, [sp, #32]
   2664c:	ldp	x21, x22, [sp, #48]
   26650:	ldp	x23, x24, [sp, #64]
   26654:	ldp	x25, x26, [sp, #80]
   26658:	add	sp, sp, #0x1d0
   2665c:	ret
   26660:	ldr	x19, [x7, #64]
   26664:	cbz	x19, 266ec <__sanitizer_set_death_callback@@Base+0x3c04>
   26668:	ldrb	w0, [x19]
   2666c:	cmp	w0, #0x2f
   26670:	b.eq	266ec <__sanitizer_set_death_callback@@Base+0x3c04>  // b.none
   26674:	ldr	x0, [x7, #72]
   26678:	cbz	x0, 266ec <__sanitizer_set_death_callback@@Base+0x3c04>
   2667c:	mov	x0, x19
   26680:	bl	64b0 <__asan_internal_strlen@plt>
   26684:	ldr	x1, [x24, #16]
   26688:	mov	x25, x0
   2668c:	ldr	x26, [x1, #72]
   26690:	mov	x0, x26
   26694:	bl	64b0 <__asan_internal_strlen@plt>
   26698:	ldr	x2, [sp, #128]
   2669c:	mov	x23, x0
   266a0:	add	x1, x25, x23
   266a4:	mov	x0, x20
   266a8:	mov	x3, x22
   266ac:	add	x1, x1, #0x2
   266b0:	bl	65b0 <__asan_backtrace_alloc@plt>
   266b4:	mov	x20, x0
   266b8:	cbz	x0, 264c0 <__sanitizer_set_death_callback@@Base+0x39d8>
   266bc:	mov	x1, x26
   266c0:	mov	x2, x23
   266c4:	bl	64a0 <__asan_internal_memcpy@plt>
   266c8:	mov	w3, #0x2f                  	// #47
   266cc:	strb	w3, [x20, x23]
   266d0:	add	x0, x23, #0x1
   266d4:	mov	x1, x19
   266d8:	add	x2, x25, #0x1
   266dc:	add	x0, x20, x0
   266e0:	bl	64a0 <__asan_internal_memcpy@plt>
   266e4:	mov	x19, x20
   266e8:	ldr	x7, [x24, #16]
   266ec:	str	x19, [x7, #80]
   266f0:	b	26504 <__sanitizer_set_death_callback@@Base+0x3a1c>
   266f4:	ldr	x4, [x23, #72]
   266f8:	sub	x2, x1, x0
   266fc:	ldr	w5, [x23, #120]
   26700:	adrp	x3, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   26704:	add	x1, x4, x0
   26708:	stp	x1, x2, [sp, #352]
   2670c:	add	x3, x3, #0x178
   26710:	ldr	x1, [sp, #128]
   26714:	add	x25, sp, #0x150
   26718:	mov	x0, x25
   2671c:	stp	x3, x4, [sp, #336]
   26720:	str	w5, [sp, #368]
   26724:	str	x1, [sp, #376]
   26728:	str	x22, [sp, #384]
   2672c:	str	wzr, [sp, #392]
   26730:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   26734:	mov	x1, #0xffffffff            	// #4294967295
   26738:	mov	w2, w0
   2673c:	cmp	x1, w0, uxtw
   26740:	mov	x0, x25
   26744:	b.eq	26b74 <__sanitizer_set_death_callback@@Base+0x408c>  // b.none
   26748:	str	x2, [sp, #360]
   2674c:	bl	24ba0 <__sanitizer_set_death_callback@@Base+0x20b8>
   26750:	and	w0, w0, #0xffff
   26754:	str	w0, [sp, #272]
   26758:	sub	w0, w0, #0x2
   2675c:	cmp	w0, #0x2
   26760:	b.ls	267e0 <__sanitizer_set_death_callback@@Base+0x3cf8>  // b.plast
   26764:	mov	x0, x25
   26768:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2676c:	add	x1, x1, #0x188
   26770:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   26774:	b	265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26778:	ldp	x19, x20, [sp, #32]
   2677c:	ldp	x21, x22, [sp, #48]
   26780:	ldp	x25, x26, [sp, #80]
   26784:	b	264d8 <__sanitizer_set_death_callback@@Base+0x39f0>
   26788:	add	x0, x26, #0x70
   2678c:	stlr	x28, [x0]
   26790:	add	x0, x26, #0x78
   26794:	stlr	x25, [x0]
   26798:	add	x0, x26, #0x80
   2679c:	stlr	x27, [x0]
   267a0:	add	x11, x26, #0x68
   267a4:	stlr	x19, [x11]
   267a8:	b	26614 <__sanitizer_set_death_callback@@Base+0x3b2c>
   267ac:	cbz	w1, 26624 <__sanitizer_set_death_callback@@Base+0x3b3c>
   267b0:	ldp	x3, x6, [sp, #112]
   267b4:	mov	x5, x22
   267b8:	ldr	x4, [sp, #128]
   267bc:	mov	x2, x21
   267c0:	mov	x0, x20
   267c4:	mov	x1, x23
   267c8:	bl	26200 <__sanitizer_set_death_callback@@Base+0x3718>
   267cc:	ldp	x19, x20, [sp, #32]
   267d0:	ldp	x21, x22, [sp, #48]
   267d4:	ldp	x25, x26, [sp, #80]
   267d8:	ldp	x27, x28, [sp, #96]
   267dc:	b	264d8 <__sanitizer_set_death_callback@@Base+0x39f0>
   267e0:	mov	x0, x25
   267e4:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   267e8:	mov	w0, w0
   267ec:	ldp	x2, x3, [sp, #352]
   267f0:	stp	x2, x3, [sp, #416]
   267f4:	ldp	x2, x3, [sp, #336]
   267f8:	stp	x2, x3, [sp, #400]
   267fc:	ldp	x2, x3, [sp, #368]
   26800:	stp	x2, x3, [sp, #432]
   26804:	ldr	x1, [sp, #360]
   26808:	str	x0, [sp, #424]
   2680c:	ldp	x2, x3, [sp, #384]
   26810:	stp	x2, x3, [sp, #448]
   26814:	cmp	x0, x1
   26818:	b.ls	26b4c <__sanitizer_set_death_callback@@Base+0x4064>  // b.plast
   2681c:	mov	x0, x25
   26820:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   26824:	cbz	w0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26828:	add	x0, sp, #0x190
   2682c:	str	x0, [sp, #152]
   26830:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   26834:	and	w0, w0, #0xff
   26838:	ldr	w1, [sp, #272]
   2683c:	str	w0, [sp, #276]
   26840:	cmp	w1, #0x3
   26844:	b.gt	26b60 <__sanitizer_set_death_callback@@Base+0x4078>
   26848:	mov	w0, #0x1                   	// #1
   2684c:	str	w0, [sp, #280]
   26850:	ldr	x0, [sp, #152]
   26854:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   26858:	ldp	x19, x0, [sp, #416]
   2685c:	cbnz	x0, 26ba8 <__sanitizer_set_death_callback@@Base+0x40c0>
   26860:	ldr	x0, [sp, #152]
   26864:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   26868:	mov	w1, w0
   2686c:	cbz	w0, 26880 <__sanitizer_set_death_callback@@Base+0x3d98>
   26870:	ldrb	w1, [x19]
   26874:	eor	w1, w1, #0xffffff80
   26878:	sub	w1, w1, #0x80
   2687c:	sxtb	w1, w1
   26880:	ldr	x19, [sp, #152]
   26884:	str	w1, [sp, #284]
   26888:	mov	x0, x19
   2688c:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   26890:	and	w1, w0, #0xff
   26894:	mov	x0, x19
   26898:	str	w1, [sp, #288]
   2689c:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   268a0:	and	w1, w0, #0xff
   268a4:	ldp	x19, x0, [sp, #416]
   268a8:	str	w1, [sp, #292]
   268ac:	str	x19, [sp, #296]
   268b0:	sub	w1, w1, #0x1
   268b4:	cmp	x1, x0
   268b8:	b.ls	26bb8 <__sanitizer_set_death_callback@@Base+0x40d0>  // b.plast
   268bc:	ldr	x0, [sp, #152]
   268c0:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   268c4:	cbz	w0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   268c8:	ldp	x19, x0, [sp, #416]
   268cc:	str	xzr, [sp, #304]
   268d0:	add	x27, x19, x0
   268d4:	cmp	x27, x19
   268d8:	b.hi	26900 <__sanitizer_set_death_callback@@Base+0x3e18>  // b.pmore
   268dc:	b	27224 <__sanitizer_set_death_callback@@Base+0x473c>
   268e0:	bl	6800 <__asan_internal_strnlen@plt>
   268e4:	add	x0, x0, #0x1
   268e8:	ldr	x1, [sp, #304]
   268ec:	add	x19, x19, x0
   268f0:	cmp	x27, x19
   268f4:	add	x1, x1, #0x1
   268f8:	str	x1, [sp, #304]
   268fc:	b.ls	26914 <__sanitizer_set_death_callback@@Base+0x3e2c>  // b.plast
   26900:	ldrb	w2, [x19]
   26904:	sub	x1, x27, x19
   26908:	mov	x0, x19
   2690c:	cbnz	w2, 268e0 <__sanitizer_set_death_callback@@Base+0x3df8>
   26910:	ldr	x1, [sp, #304]
   26914:	str	xzr, [sp, #312]
   26918:	cbnz	x1, 26bc8 <__sanitizer_set_death_callback@@Base+0x40e0>
   2691c:	ldr	x0, [sp, #416]
   26920:	mov	x19, #0x0                   	// #0
   26924:	ldrb	w1, [x0]
   26928:	cbz	w1, 26964 <__sanitizer_set_death_callback@@Base+0x3e7c>
   2692c:	ldr	x27, [sp, #152]
   26930:	mov	x0, x27
   26934:	ldr	w1, [sp, #456]
   26938:	cbnz	w1, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   2693c:	ldr	x28, [sp, #312]
   26940:	bl	24e80 <__sanitizer_set_death_callback@@Base+0x2398>
   26944:	ldr	x1, [sp, #312]
   26948:	str	x0, [x28, x19]
   2694c:	ldr	x0, [x1, x19]
   26950:	add	x19, x19, #0x8
   26954:	cbz	x0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26958:	ldr	x0, [sp, #416]
   2695c:	ldrb	w1, [x0]
   26960:	cbnz	w1, 26930 <__sanitizer_set_death_callback@@Base+0x3e48>
   26964:	ldr	x19, [sp, #424]
   26968:	cbnz	x19, 26c10 <__sanitizer_set_death_callback@@Base+0x4128>
   2696c:	ldr	x0, [sp, #152]
   26970:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   26974:	cbz	w0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26978:	ldp	x27, x19, [sp, #416]
   2697c:	str	xzr, [sp, #320]
   26980:	add	x19, x27, x19
   26984:	mov	x1, #0x0                   	// #0
   26988:	cmp	x19, x27
   2698c:	b.ls	26a24 <__sanitizer_set_death_callback@@Base+0x3f3c>  // b.plast
   26990:	ldrb	w0, [x27]
   26994:	cbz	w0, 26c08 <__sanitizer_set_death_callback@@Base+0x4120>
   26998:	sub	x1, x19, x27
   2699c:	mov	x0, x27
   269a0:	bl	6800 <__asan_internal_strnlen@plt>
   269a4:	add	x1, x0, #0x1
   269a8:	add	x2, x27, x1
   269ac:	ldrsb	w1, [x27, x1]
   269b0:	tbz	w1, #31, 26bf4 <__sanitizer_set_death_callback@@Base+0x410c>
   269b4:	add	x27, x27, x0
   269b8:	mov	x0, #0x1                   	// #1
   269bc:	nop
   269c0:	add	x0, x0, #0x1
   269c4:	ldrsb	w1, [x27, x0]
   269c8:	tbnz	w1, #31, 269c0 <__sanitizer_set_death_callback@@Base+0x3ed8>
   269cc:	ldrsb	w1, [x2, x0]
   269d0:	add	x0, x2, x0
   269d4:	tbz	w1, #31, 26bec <__sanitizer_set_death_callback@@Base+0x4104>
   269d8:	sub	x2, x0, #0x1
   269dc:	mov	x27, #0x1                   	// #1
   269e0:	add	x27, x27, #0x1
   269e4:	ldrsb	w1, [x2, x27]
   269e8:	tbnz	w1, #31, 269e0 <__sanitizer_set_death_callback@@Base+0x3ef8>
   269ec:	ldrsb	w1, [x0, x27]
   269f0:	add	x0, x0, x27
   269f4:	tbz	w1, #31, 26be4 <__sanitizer_set_death_callback@@Base+0x40fc>
   269f8:	sub	x2, x0, #0x1
   269fc:	mov	x27, #0x1                   	// #1
   26a00:	add	x27, x27, #0x1
   26a04:	ldrsb	w1, [x2, x27]
   26a08:	tbnz	w1, #31, 26a00 <__sanitizer_set_death_callback@@Base+0x3f18>
   26a0c:	ldr	x1, [sp, #320]
   26a10:	add	x27, x0, x27
   26a14:	cmp	x19, x27
   26a18:	add	x1, x1, #0x1
   26a1c:	str	x1, [sp, #320]
   26a20:	b.hi	26990 <__sanitizer_set_death_callback@@Base+0x3ea8>  // b.pmore
   26a24:	ldp	x2, x3, [sp, #376]
   26a28:	lsl	x1, x1, #3
   26a2c:	mov	x0, x20
   26a30:	bl	65b0 <__asan_backtrace_alloc@plt>
   26a34:	str	x0, [sp, #328]
   26a38:	cbz	x0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26a3c:	ldr	x0, [sp, #416]
   26a40:	mov	x1, #0x0                   	// #0
   26a44:	ldrb	w0, [x0]
   26a48:	cbz	w0, 26c28 <__sanitizer_set_death_callback@@Base+0x4140>
   26a4c:	mov	x27, x1
   26a50:	stp	x24, x23, [sp, #168]
   26a54:	stp	x21, x22, [sp, #184]
   26a58:	ldr	x19, [sp, #152]
   26a5c:	b	26b04 <__sanitizer_set_death_callback@@Base+0x401c>
   26a60:	cbz	x0, 26b3c <__sanitizer_set_death_callback@@Base+0x4054>
   26a64:	ldr	x1, [sp, #304]
   26a68:	sub	x2, x0, #0x1
   26a6c:	cmp	x2, x1
   26a70:	b.cs	2724c <__sanitizer_set_death_callback@@Base+0x4764>  // b.hs, b.nlast
   26a74:	ldr	x1, [sp, #312]
   26a78:	add	x0, x1, x0, lsl #3
   26a7c:	ldur	x23, [x0, #-8]
   26a80:	mov	x0, x23
   26a84:	bl	64b0 <__asan_internal_strlen@plt>
   26a88:	mov	x24, x0
   26a8c:	mov	x0, x22
   26a90:	bl	64b0 <__asan_internal_strlen@plt>
   26a94:	ldp	x2, x3, [sp, #376]
   26a98:	mov	x28, x0
   26a9c:	add	x1, x24, x28
   26aa0:	mov	x0, x20
   26aa4:	add	x1, x1, #0x2
   26aa8:	bl	65b0 <__asan_backtrace_alloc@plt>
   26aac:	mov	x21, x0
   26ab0:	cbz	x0, 26bfc <__sanitizer_set_death_callback@@Base+0x4114>
   26ab4:	mov	x1, x23
   26ab8:	mov	x2, x24
   26abc:	bl	64a0 <__asan_internal_memcpy@plt>
   26ac0:	mov	w3, #0x2f                  	// #47
   26ac4:	strb	w3, [x21, x24]
   26ac8:	add	x0, x24, #0x1
   26acc:	add	x2, x28, #0x1
   26ad0:	add	x0, x21, x0
   26ad4:	mov	x1, x22
   26ad8:	bl	64a0 <__asan_internal_memcpy@plt>
   26adc:	ldr	x0, [sp, #328]
   26ae0:	str	x21, [x0, x27]
   26ae4:	mov	x0, x19
   26ae8:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26aec:	mov	x0, x19
   26af0:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26af4:	ldr	x0, [sp, #416]
   26af8:	add	x27, x27, #0x8
   26afc:	ldrb	w0, [x0]
   26b00:	cbz	w0, 26c20 <__sanitizer_set_death_callback@@Base+0x4138>
   26b04:	ldr	w0, [sp, #456]
   26b08:	cbnz	w0, 26bfc <__sanitizer_set_death_callback@@Base+0x4114>
   26b0c:	mov	x0, x19
   26b10:	bl	24e80 <__sanitizer_set_death_callback@@Base+0x2398>
   26b14:	mov	x22, x0
   26b18:	cbz	x0, 26bfc <__sanitizer_set_death_callback@@Base+0x4114>
   26b1c:	mov	x0, x19
   26b20:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26b24:	ldrb	w1, [x22]
   26b28:	cmp	w1, #0x2f
   26b2c:	b.ne	26a60 <__sanitizer_set_death_callback@@Base+0x3f78>  // b.any
   26b30:	ldr	x0, [sp, #328]
   26b34:	str	x22, [x0, x27]
   26b38:	b	26ae4 <__sanitizer_set_death_callback@@Base+0x3ffc>
   26b3c:	ldr	x0, [sp, #160]
   26b40:	ldr	x23, [x0, #72]
   26b44:	cbnz	x23, 26a80 <__sanitizer_set_death_callback@@Base+0x3f98>
   26b48:	b	26b30 <__sanitizer_set_death_callback@@Base+0x4048>
   26b4c:	ldr	x2, [sp, #352]
   26b50:	sub	x1, x1, x0
   26b54:	add	x0, x2, x0
   26b58:	stp	x0, x1, [sp, #352]
   26b5c:	b	26828 <__sanitizer_set_death_callback@@Base+0x3d40>
   26b60:	ldr	x0, [sp, #152]
   26b64:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   26b68:	and	w0, w0, #0xff
   26b6c:	str	w0, [sp, #280]
   26b70:	b	26850 <__sanitizer_set_death_callback@@Base+0x3d68>
   26b74:	bl	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   26b78:	mov	x1, x0
   26b7c:	mov	x0, x25
   26b80:	str	x1, [sp, #360]
   26b84:	bl	24ba0 <__sanitizer_set_death_callback@@Base+0x20b8>
   26b88:	and	w0, w0, #0xffff
   26b8c:	str	w0, [sp, #272]
   26b90:	sub	w0, w0, #0x2
   26b94:	cmp	w0, #0x2
   26b98:	b.hi	26764 <__sanitizer_set_death_callback@@Base+0x3c7c>  // b.pmore
   26b9c:	mov	x0, x25
   26ba0:	bl	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   26ba4:	b	267ec <__sanitizer_set_death_callback@@Base+0x3d04>
   26ba8:	sub	x0, x0, #0x1
   26bac:	add	x1, x19, #0x1
   26bb0:	stp	x1, x0, [sp, #416]
   26bb4:	b	26870 <__sanitizer_set_death_callback@@Base+0x3d88>
   26bb8:	add	x19, x19, x1
   26bbc:	sub	x0, x0, x1
   26bc0:	stp	x19, x0, [sp, #416]
   26bc4:	b	268cc <__sanitizer_set_death_callback@@Base+0x3de4>
   26bc8:	ldp	x2, x3, [sp, #376]
   26bcc:	lsl	x1, x1, #3
   26bd0:	mov	x0, x20
   26bd4:	bl	65b0 <__asan_backtrace_alloc@plt>
   26bd8:	str	x0, [sp, #312]
   26bdc:	cbnz	x0, 2691c <__sanitizer_set_death_callback@@Base+0x3e34>
   26be0:	b	265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26be4:	mov	x27, #0x1                   	// #1
   26be8:	b	26a0c <__sanitizer_set_death_callback@@Base+0x3f24>
   26bec:	mov	x27, #0x1                   	// #1
   26bf0:	b	269ec <__sanitizer_set_death_callback@@Base+0x3f04>
   26bf4:	mov	x0, #0x1                   	// #1
   26bf8:	b	269cc <__sanitizer_set_death_callback@@Base+0x3ee4>
   26bfc:	ldp	x24, x23, [sp, #168]
   26c00:	ldp	x21, x22, [sp, #184]
   26c04:	b	265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26c08:	ldr	x1, [sp, #320]
   26c0c:	b	26a24 <__sanitizer_set_death_callback@@Base+0x3f3c>
   26c10:	add	x27, x0, #0x1
   26c14:	sub	x19, x19, #0x1
   26c18:	stp	x27, x19, [sp, #416]
   26c1c:	b	2697c <__sanitizer_set_death_callback@@Base+0x3e94>
   26c20:	ldp	x24, x23, [sp, #168]
   26c24:	ldp	x21, x22, [sp, #184]
   26c28:	ldr	w0, [sp, #456]
   26c2c:	cbnz	w0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26c30:	ldr	x0, [sp, #320]
   26c34:	cbz	x0, 271f4 <__sanitizer_set_death_callback@@Base+0x470c>
   26c38:	ldr	x0, [sp, #328]
   26c3c:	ldr	x0, [x0]
   26c40:	str	x0, [sp, #168]
   26c44:	ldr	x0, [sp, #360]
   26c48:	cbz	x0, 26ce8 <__sanitizer_set_death_callback@@Base+0x4200>
   26c4c:	ldr	x1, [sp, #168]
   26c50:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   26c54:	add	x0, x0, #0x428
   26c58:	stp	x23, x21, [sp, #192]
   26c5c:	mov	w2, #0x1                   	// #1
   26c60:	str	x0, [sp, #224]
   26c64:	add	x0, x23, #0x10
   26c68:	ldr	x23, [sp, #144]
   26c6c:	mov	w21, w2
   26c70:	stp	x24, x26, [sp, #176]
   26c74:	mov	x24, x0
   26c78:	mov	x27, #0x0                   	// #0
   26c7c:	str	x22, [sp, #208]
   26c80:	mov	x22, x1
   26c84:	mov	w19, #0x0                   	// #0
   26c88:	mov	x0, x25
   26c8c:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   26c90:	ldr	w2, [sp, #292]
   26c94:	and	w1, w0, #0xff
   26c98:	cmp	w2, w0, uxtb
   26c9c:	b.ls	26ebc <__sanitizer_set_death_callback@@Base+0x43d4>  // b.plast
   26ca0:	cbz	w1, 26f1c <__sanitizer_set_death_callback@@Base+0x4434>
   26ca4:	cmp	w1, #0x5
   26ca8:	b.eq	26e64 <__sanitizer_set_death_callback@@Base+0x437c>  // b.none
   26cac:	b.hi	26e48 <__sanitizer_set_death_callback@@Base+0x4360>  // b.pmore
   26cb0:	cmp	w1, #0x3
   26cb4:	b.eq	27090 <__sanitizer_set_death_callback@@Base+0x45a8>  // b.none
   26cb8:	cmp	w1, #0x4
   26cbc:	b.ne	26e08 <__sanitizer_set_death_callback@@Base+0x4320>  // b.any
   26cc0:	mov	x0, x25
   26cc4:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26cc8:	cbnz	x0, 27194 <__sanitizer_set_death_callback@@Base+0x46ac>
   26ccc:	ldr	x22, [sp, #224]
   26cd0:	ldr	x1, [sp, #360]
   26cd4:	nop
   26cd8:	cbnz	x1, 26c88 <__sanitizer_set_death_callback@@Base+0x41a0>
   26cdc:	ldp	x24, x26, [sp, #176]
   26ce0:	ldp	x23, x21, [sp, #192]
   26ce4:	ldr	x22, [sp, #208]
   26ce8:	ldr	w0, [sp, #392]
   26cec:	cbnz	w0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26cf0:	ldr	x0, [sp, #264]
   26cf4:	cbz	x0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26cf8:	ldr	x19, [sp, #128]
   26cfc:	mov	x3, x22
   26d00:	ldr	x27, [sp, #144]
   26d04:	mov	x0, x20
   26d08:	mov	x2, x19
   26d0c:	mov	x1, #0x18                  	// #24
   26d10:	mov	x4, x27
   26d14:	bl	6510 <__asan_backtrace_vector_grow@plt>
   26d18:	cbz	x0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26d1c:	mov	x1, #0xffffffffffffffff    	// #-1
   26d20:	stp	x1, xzr, [x0]
   26d24:	mov	x3, x22
   26d28:	str	xzr, [x0, #16]
   26d2c:	mov	x2, x19
   26d30:	mov	x1, x27
   26d34:	mov	x0, x20
   26d38:	bl	6600 <__asan_backtrace_vector_release@plt>
   26d3c:	cbz	w0, 265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26d40:	ldr	x0, [sp, #240]
   26d44:	adrp	x3, 24000 <__sanitizer_set_death_callback@@Base+0x1518>
   26d48:	ldr	x1, [sp, #264]
   26d4c:	add	x3, x3, #0x650
   26d50:	mov	x2, #0x18                  	// #24
   26d54:	str	x0, [sp, #144]
   26d58:	bl	63a0 <__asan_backtrace_qsort@plt>
   26d5c:	ldr	w0, [x20, #8]
   26d60:	ldr	x28, [sp, #264]
   26d64:	cbz	w0, 27184 <__sanitizer_set_death_callback@@Base+0x469c>
   26d68:	mov	x0, x25
   26d6c:	mov	x19, x25
   26d70:	mov	x2, #0x20                  	// #32
   26d74:	mov	w1, #0x0                   	// #0
   26d78:	str	xzr, [sp, #176]
   26d7c:	ldr	x27, [x24, #16]
   26d80:	bl	6530 <__asan_internal_memset@plt>
   26d84:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   26d88:	add	x1, x1, #0xb8
   26d8c:	ldr	x3, [x23, #56]
   26d90:	stp	x24, x21, [sp, #160]
   26d94:	mov	x24, x22
   26d98:	ldp	x2, x0, [x27]
   26d9c:	stp	x1, x3, [sp, #400]
   26da0:	ldr	w1, [x23, #120]
   26da4:	str	w1, [sp, #432]
   26da8:	ldr	x1, [sp, #128]
   26dac:	str	x22, [sp, #448]
   26db0:	mov	x22, x19
   26db4:	str	x25, [sp, #184]
   26db8:	ldr	x19, [sp, #136]
   26dbc:	mov	x25, x1
   26dc0:	ldr	x21, [sp, #152]
   26dc4:	stp	x2, x0, [sp, #416]
   26dc8:	str	x1, [sp, #440]
   26dcc:	str	wzr, [sp, #456]
   26dd0:	cbz	x0, 270f8 <__sanitizer_set_death_callback@@Base+0x4610>
   26dd4:	stp	x22, x22, [sp]
   26dd8:	mov	x7, x24
   26ddc:	mov	x6, x25
   26de0:	mov	x5, x19
   26de4:	mov	x4, x21
   26de8:	mov	x2, x27
   26dec:	mov	x1, x23
   26df0:	mov	x0, x20
   26df4:	mov	x3, #0x0                   	// #0
   26df8:	bl	25b70 <__sanitizer_set_death_callback@@Base+0x3088>
   26dfc:	cbz	w0, 27170 <__sanitizer_set_death_callback@@Base+0x4688>
   26e00:	ldr	x0, [sp, #424]
   26e04:	b	26dd0 <__sanitizer_set_death_callback@@Base+0x42e8>
   26e08:	cmp	w1, #0x1
   26e0c:	b.eq	270d0 <__sanitizer_set_death_callback@@Base+0x45e8>  // b.none
   26e10:	cmp	w1, #0x2
   26e14:	b.ne	270a4 <__sanitizer_set_death_callback@@Base+0x45bc>  // b.any
   26e18:	mov	x0, x25
   26e1c:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26e20:	ldr	w2, [sp, #276]
   26e24:	add	x19, x0, w19, uxtw
   26e28:	ldr	w3, [sp, #280]
   26e2c:	ldr	x1, [sp, #360]
   26e30:	mul	x0, x2, x19
   26e34:	udiv	x2, x19, x3
   26e38:	udiv	x0, x0, x3
   26e3c:	msub	w19, w2, w3, w19
   26e40:	add	x27, x27, x0
   26e44:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   26e48:	cmp	w1, #0x9
   26e4c:	b.eq	27078 <__sanitizer_set_death_callback@@Base+0x4590>  // b.none
   26e50:	b.ls	26e74 <__sanitizer_set_death_callback@@Base+0x438c>  // b.plast
   26e54:	cmp	w1, #0xb
   26e58:	b.ls	26f90 <__sanitizer_set_death_callback@@Base+0x44a8>  // b.plast
   26e5c:	cmp	w1, #0xc
   26e60:	b.ne	270a4 <__sanitizer_set_death_callback@@Base+0x45bc>  // b.any
   26e64:	mov	x0, x25
   26e68:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26e6c:	ldr	x1, [sp, #360]
   26e70:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   26e74:	cmp	w1, #0x7
   26e78:	b.ls	26f90 <__sanitizer_set_death_callback@@Base+0x44a8>  // b.plast
   26e7c:	cmp	w1, #0x8
   26e80:	b.ne	270a4 <__sanitizer_set_death_callback@@Base+0x45bc>  // b.any
   26e84:	ldr	w0, [sp, #288]
   26e88:	mov	w1, #0xff                  	// #255
   26e8c:	sub	w2, w1, w2
   26e90:	ldr	w3, [sp, #276]
   26e94:	ldr	w4, [sp, #280]
   26e98:	ldr	x1, [sp, #360]
   26e9c:	udiv	w0, w2, w0
   26ea0:	add	w19, w0, w19
   26ea4:	udiv	w2, w19, w4
   26ea8:	mul	w0, w19, w3
   26eac:	udiv	w0, w0, w4
   26eb0:	msub	w19, w2, w4, w19
   26eb4:	add	x27, x27, x0
   26eb8:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   26ebc:	add	x4, sp, #0x11c
   26ec0:	sub	w2, w1, w2
   26ec4:	mov	x7, x23
   26ec8:	mov	x1, x24
   26ecc:	mov	x3, x22
   26ed0:	mov	x0, x20
   26ed4:	ldp	w10, w6, [x4]
   26ed8:	ldp	w8, w9, [x4, #-8]
   26edc:	udiv	w4, w2, w6
   26ee0:	add	w19, w4, w19
   26ee4:	msub	w2, w4, w6, w2
   26ee8:	ldp	x5, x6, [sp, #376]
   26eec:	add	w2, w2, w10
   26ef0:	mul	w8, w19, w8
   26ef4:	add	w21, w21, w2
   26ef8:	udiv	w10, w19, w9
   26efc:	mov	w4, w21
   26f00:	udiv	w2, w8, w9
   26f04:	msub	w19, w10, w9, w19
   26f08:	add	x27, x27, x2
   26f0c:	mov	x2, x27
   26f10:	bl	248e8 <__sanitizer_set_death_callback@@Base+0x1e00>
   26f14:	ldr	x1, [sp, #360]
   26f18:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   26f1c:	mov	x0, x25
   26f20:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26f24:	mov	x26, x0
   26f28:	mov	x0, x25
   26f2c:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   26f30:	and	w0, w0, #0xff
   26f34:	cmp	w0, #0x3
   26f38:	b.eq	26fc0 <__sanitizer_set_death_callback@@Base+0x44d8>  // b.none
   26f3c:	b.hi	26f6c <__sanitizer_set_death_callback@@Base+0x4484>  // b.pmore
   26f40:	cmp	w0, #0x1
   26f44:	b.eq	26fa8 <__sanitizer_set_death_callback@@Base+0x44c0>  // b.none
   26f48:	cmp	w0, #0x2
   26f4c:	b.ne	26f74 <__sanitizer_set_death_callback@@Base+0x448c>  // b.any
   26f50:	ldr	x0, [sp, #160]
   26f54:	ldr	w1, [x0, #48]
   26f58:	mov	x0, x25
   26f5c:	bl	24c58 <__sanitizer_set_death_callback@@Base+0x2170>
   26f60:	mov	x27, x0
   26f64:	ldr	x1, [sp, #360]
   26f68:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   26f6c:	cmp	w0, #0x4
   26f70:	b.eq	26e64 <__sanitizer_set_death_callback@@Base+0x437c>  // b.none
   26f74:	ldr	x1, [sp, #360]
   26f78:	sub	x26, x26, #0x1
   26f7c:	cmp	x26, x1
   26f80:	b.ls	271b8 <__sanitizer_set_death_callback@@Base+0x46d0>  // b.plast
   26f84:	mov	x0, x25
   26f88:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   26f8c:	cbz	w0, 26f98 <__sanitizer_set_death_callback@@Base+0x44b0>
   26f90:	ldr	x1, [sp, #360]
   26f94:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   26f98:	ldp	x24, x26, [sp, #176]
   26f9c:	ldp	x23, x21, [sp, #192]
   26fa0:	ldr	x22, [sp, #208]
   26fa4:	b	265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   26fa8:	mov	w21, w0
   26fac:	mov	w19, #0x0                   	// #0
   26fb0:	mov	x27, #0x0                   	// #0
   26fb4:	ldr	x22, [sp, #168]
   26fb8:	ldr	x1, [sp, #360]
   26fbc:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   26fc0:	mov	x0, x25
   26fc4:	bl	24e80 <__sanitizer_set_death_callback@@Base+0x2398>
   26fc8:	mov	x28, x0
   26fcc:	cbz	x0, 26f98 <__sanitizer_set_death_callback@@Base+0x44b0>
   26fd0:	mov	x0, x25
   26fd4:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26fd8:	mov	x22, x0
   26fdc:	mov	x0, x25
   26fe0:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26fe4:	mov	x0, x25
   26fe8:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   26fec:	ldrb	w0, [x28]
   26ff0:	cmp	w0, #0x2f
   26ff4:	b.eq	271cc <__sanitizer_set_death_callback@@Base+0x46e4>  // b.none
   26ff8:	cbnz	w22, 271d8 <__sanitizer_set_death_callback@@Base+0x46f0>
   26ffc:	ldr	x0, [sp, #160]
   27000:	ldr	x5, [x0, #72]
   27004:	mov	x0, x5
   27008:	str	x5, [sp, #232]
   2700c:	bl	64b0 <__asan_internal_strlen@plt>
   27010:	mov	x26, x0
   27014:	mov	x0, x28
   27018:	bl	64b0 <__asan_internal_strlen@plt>
   2701c:	mov	x1, x0
   27020:	ldp	x2, x3, [sp, #376]
   27024:	str	x1, [sp, #216]
   27028:	add	x1, x26, x1
   2702c:	mov	x0, x20
   27030:	add	x1, x1, #0x2
   27034:	bl	65b0 <__asan_backtrace_alloc@plt>
   27038:	mov	x22, x0
   2703c:	cbz	x0, 26f98 <__sanitizer_set_death_callback@@Base+0x44b0>
   27040:	ldr	x5, [sp, #232]
   27044:	mov	x2, x26
   27048:	mov	x1, x5
   2704c:	bl	64a0 <__asan_internal_memcpy@plt>
   27050:	ldr	x1, [sp, #216]
   27054:	mov	w0, #0x2f                  	// #47
   27058:	strb	w0, [x22, x26]
   2705c:	add	x0, x26, #0x1
   27060:	add	x2, x1, #0x1
   27064:	add	x0, x22, x0
   27068:	mov	x1, x28
   2706c:	bl	64a0 <__asan_internal_memcpy@plt>
   27070:	ldr	x1, [sp, #360]
   27074:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   27078:	mov	x0, x25
   2707c:	bl	24ba0 <__sanitizer_set_death_callback@@Base+0x20b8>
   27080:	mov	w19, #0x0                   	// #0
   27084:	add	x27, x27, w0, uxth
   27088:	ldr	x1, [sp, #360]
   2708c:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   27090:	mov	x0, x25
   27094:	bl	24da8 <__sanitizer_set_death_callback@@Base+0x22c0>
   27098:	add	w21, w21, w0
   2709c:	ldr	x1, [sp, #360]
   270a0:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   270a4:	ldr	x0, [sp, #296]
   270a8:	sub	w1, w1, #0x1
   270ac:	ldrb	w26, [x0, w1, uxtw]
   270b0:	cbz	w26, 26f90 <__sanitizer_set_death_callback@@Base+0x44a8>
   270b4:	nop
   270b8:	mov	x0, x25
   270bc:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   270c0:	subs	w26, w26, #0x1
   270c4:	b.ne	270b8 <__sanitizer_set_death_callback@@Base+0x45d0>  // b.any
   270c8:	ldr	x1, [sp, #360]
   270cc:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   270d0:	ldp	x5, x6, [sp, #376]
   270d4:	mov	x1, x24
   270d8:	mov	x7, x23
   270dc:	mov	w4, w21
   270e0:	mov	x3, x22
   270e4:	mov	x2, x27
   270e8:	mov	x0, x20
   270ec:	bl	248e8 <__sanitizer_set_death_callback@@Base+0x1e00>
   270f0:	ldr	x1, [sp, #360]
   270f4:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   270f8:	mov	x19, x22
   270fc:	mov	x22, x24
   27100:	ldp	x24, x21, [sp, #160]
   27104:	ldr	x27, [x19, #24]
   27108:	ldr	x25, [sp, #184]
   2710c:	cbz	x27, 27178 <__sanitizer_set_death_callback@@Base+0x4690>
   27110:	ldr	x0, [sp, #176]
   27114:	cbz	x0, 27204 <__sanitizer_set_death_callback@@Base+0x471c>
   27118:	ldr	x2, [sp, #128]
   2711c:	mov	x3, x22
   27120:	ldr	x19, [sp, #176]
   27124:	mov	x0, x20
   27128:	mov	x1, x19
   2712c:	bl	6950 <__asan_backtrace_vector_finish@plt>
   27130:	mov	x25, x0
   27134:	cbz	x0, 27178 <__sanitizer_set_death_callback@@Base+0x4690>
   27138:	str	xzr, [x19, #24]
   2713c:	adrp	x3, 27000 <__sanitizer_set_death_callback@@Base+0x4518>
   27140:	mov	x1, x27
   27144:	add	x3, x3, #0x3a8
   27148:	mov	x0, x25
   2714c:	mov	x2, #0x18                  	// #24
   27150:	bl	63a0 <__asan_backtrace_qsort@plt>
   27154:	ldp	x2, x1, [sp, #128]
   27158:	mov	x3, x22
   2715c:	mov	x0, x20
   27160:	bl	24588 <__sanitizer_set_death_callback@@Base+0x1aa0>
   27164:	mov	w1, #0x1                   	// #1
   27168:	ldr	x19, [sp, #144]
   2716c:	b	26604 <__sanitizer_set_death_callback@@Base+0x3b1c>
   27170:	mov	x22, x24
   27174:	ldp	x24, x21, [sp, #160]
   27178:	mov	x25, #0x0                   	// #0
   2717c:	mov	x27, #0x0                   	// #0
   27180:	b	27154 <__sanitizer_set_death_callback@@Base+0x466c>
   27184:	add	x19, x23, #0x80
   27188:	str	x19, [sp, #176]
   2718c:	ldr	x27, [x24, #16]
   27190:	b	26d84 <__sanitizer_set_death_callback@@Base+0x429c>
   27194:	ldr	x1, [sp, #320]
   27198:	sub	x2, x0, #0x1
   2719c:	cmp	x2, x1
   271a0:	b.cs	2722c <__sanitizer_set_death_callback@@Base+0x4744>  // b.hs, b.nlast
   271a4:	ldr	x2, [sp, #328]
   271a8:	ldr	x1, [sp, #360]
   271ac:	add	x0, x2, x0, lsl #3
   271b0:	ldur	x22, [x0, #-8]
   271b4:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   271b8:	ldr	x0, [sp, #352]
   271bc:	sub	x1, x1, x26
   271c0:	add	x26, x0, x26
   271c4:	stp	x26, x1, [sp, #352]
   271c8:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   271cc:	mov	x22, x28
   271d0:	ldr	x1, [sp, #360]
   271d4:	b	26cd8 <__sanitizer_set_death_callback@@Base+0x41f0>
   271d8:	ldr	x0, [sp, #304]
   271dc:	sub	w22, w22, #0x1
   271e0:	cmp	x22, x0
   271e4:	b.cs	27268 <__sanitizer_set_death_callback@@Base+0x4780>  // b.hs, b.nlast
   271e8:	ldr	x0, [sp, #312]
   271ec:	ldr	x5, [x0, x22, lsl #3]
   271f0:	b	27004 <__sanitizer_set_death_callback@@Base+0x451c>
   271f4:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   271f8:	add	x0, x0, #0x428
   271fc:	str	x0, [sp, #168]
   27200:	b	26c44 <__sanitizer_set_death_callback@@Base+0x415c>
   27204:	ldr	x2, [sp, #128]
   27208:	mov	x1, x25
   2720c:	mov	x3, x22
   27210:	mov	x0, x20
   27214:	bl	6600 <__asan_backtrace_vector_release@plt>
   27218:	cbz	w0, 27178 <__sanitizer_set_death_callback@@Base+0x4690>
   2721c:	ldr	x25, [x19]
   27220:	b	2713c <__sanitizer_set_death_callback@@Base+0x4654>
   27224:	str	xzr, [sp, #312]
   27228:	b	2691c <__sanitizer_set_death_callback@@Base+0x3e34>
   2722c:	mov	x0, x25
   27230:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   27234:	add	x1, x1, #0x210
   27238:	ldp	x24, x26, [sp, #176]
   2723c:	ldp	x23, x21, [sp, #192]
   27240:	ldr	x22, [sp, #208]
   27244:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   27248:	b	265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   2724c:	mov	x0, x25
   27250:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   27254:	add	x1, x1, #0x1a8
   27258:	ldp	x24, x23, [sp, #168]
   2725c:	ldp	x21, x22, [sp, #184]
   27260:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   27264:	b	265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   27268:	mov	x0, x25
   2726c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   27270:	add	x1, x1, #0x1e0
   27274:	ldp	x24, x26, [sp, #176]
   27278:	ldp	x23, x21, [sp, #192]
   2727c:	ldr	x22, [sp, #208]
   27280:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   27284:	b	265b8 <__sanitizer_set_death_callback@@Base+0x3ad0>
   27288:	stp	x29, x30, [sp, #-96]!
   2728c:	mov	x29, sp
   27290:	stp	x23, x24, [sp, #48]
   27294:	mov	x24, x0
   27298:	ldr	w0, [x0, #8]
   2729c:	stp	x19, x20, [sp, #16]
   272a0:	mov	x23, x3
   272a4:	mov	x20, x2
   272a8:	stp	x21, x22, [sp, #32]
   272ac:	mov	x22, x1
   272b0:	mov	x21, x4
   272b4:	cbnz	w0, 27318 <__sanitizer_set_death_callback@@Base+0x4830>
   272b8:	ldr	x19, [x24, #32]
   272bc:	cbz	x19, 27360 <__sanitizer_set_death_callback@@Base+0x4878>
   272c0:	str	x25, [sp, #64]
   272c4:	add	x25, sp, #0x5c
   272c8:	b	272dc <__sanitizer_set_death_callback@@Base+0x47f4>
   272cc:	ldr	w0, [sp, #92]
   272d0:	cbnz	w0, 2738c <__sanitizer_set_death_callback@@Base+0x48a4>
   272d4:	ldr	x19, [x19]
   272d8:	cbz	x19, 2735c <__sanitizer_set_death_callback@@Base+0x4874>
   272dc:	mov	x6, x25
   272e0:	mov	x5, x21
   272e4:	mov	x4, x23
   272e8:	mov	x3, x20
   272ec:	mov	x2, x22
   272f0:	mov	x1, x19
   272f4:	mov	x0, x24
   272f8:	bl	26200 <__sanitizer_set_death_callback@@Base+0x3718>
   272fc:	cbz	w0, 272cc <__sanitizer_set_death_callback@@Base+0x47e4>
   27300:	ldp	x19, x20, [sp, #16]
   27304:	ldp	x21, x22, [sp, #32]
   27308:	ldp	x23, x24, [sp, #48]
   2730c:	ldr	x25, [sp, #64]
   27310:	ldp	x29, x30, [sp], #96
   27314:	ret
   27318:	add	x19, x24, #0x20
   2731c:	str	x25, [sp, #64]
   27320:	add	x25, sp, #0x5c
   27324:	b	27338 <__sanitizer_set_death_callback@@Base+0x4850>
   27328:	bl	26200 <__sanitizer_set_death_callback@@Base+0x3718>
   2732c:	cbnz	w0, 27300 <__sanitizer_set_death_callback@@Base+0x4818>
   27330:	ldr	w0, [sp, #92]
   27334:	cbnz	w0, 2738c <__sanitizer_set_death_callback@@Base+0x48a4>
   27338:	ldar	x19, [x19]
   2733c:	mov	x6, x25
   27340:	mov	x5, x21
   27344:	mov	x4, x23
   27348:	mov	x3, x20
   2734c:	mov	x2, x22
   27350:	mov	x1, x19
   27354:	mov	x0, x24
   27358:	cbnz	x19, 27328 <__sanitizer_set_death_callback@@Base+0x4840>
   2735c:	ldr	x25, [sp, #64]
   27360:	mov	x1, x22
   27364:	mov	x0, x21
   27368:	mov	x4, #0x0                   	// #0
   2736c:	mov	w3, #0x0                   	// #0
   27370:	mov	x2, #0x0                   	// #0
   27374:	blr	x20
   27378:	ldp	x19, x20, [sp, #16]
   2737c:	ldp	x21, x22, [sp, #32]
   27380:	ldp	x23, x24, [sp, #48]
   27384:	ldp	x29, x30, [sp], #96
   27388:	ret
   2738c:	mov	w0, #0x0                   	// #0
   27390:	ldp	x19, x20, [sp, #16]
   27394:	ldp	x21, x22, [sp, #32]
   27398:	ldp	x23, x24, [sp, #48]
   2739c:	ldr	x25, [sp, #64]
   273a0:	ldp	x29, x30, [sp], #96
   273a4:	ret
   273a8:	ldr	x3, [x0]
   273ac:	ldr	x2, [x1]
   273b0:	cmp	x3, x2
   273b4:	b.cc	273ec <__sanitizer_set_death_callback@@Base+0x4904>  // b.lo, b.ul, b.last
   273b8:	b.hi	273e4 <__sanitizer_set_death_callback@@Base+0x48fc>  // b.pmore
   273bc:	ldr	x3, [x0, #8]
   273c0:	ldr	x2, [x1, #8]
   273c4:	cmp	x3, x2
   273c8:	b.cc	273e4 <__sanitizer_set_death_callback@@Base+0x48fc>  // b.lo, b.ul, b.last
   273cc:	b.hi	273ec <__sanitizer_set_death_callback@@Base+0x4904>  // b.pmore
   273d0:	ldr	x0, [x0, #16]
   273d4:	ldr	x1, [x1, #16]
   273d8:	ldr	x0, [x0]
   273dc:	ldr	x1, [x1]
   273e0:	b	67f0 <__asan_internal_strcmp@plt>
   273e4:	mov	w0, #0x1                   	// #1
   273e8:	ret
   273ec:	mov	w0, #0xffffffff            	// #-1
   273f0:	ret
   273f4:	nop
   273f8:	stp	x29, x30, [sp, #-64]!
   273fc:	mov	x29, sp
   27400:	stp	x19, x20, [sp, #16]
   27404:	mov	x20, x2
   27408:	ldr	x2, [x1]
   2740c:	stp	x21, x22, [sp, #32]
   27410:	mov	x21, x1
   27414:	stp	x23, x24, [sp, #48]
   27418:	mov	x22, x0
   2741c:	mov	x23, x3
   27420:	mov	x24, x4
   27424:	cbz	x2, 27464 <__sanitizer_set_death_callback@@Base+0x497c>
   27428:	mov	x19, #0x0                   	// #0
   2742c:	nop
   27430:	ldr	x5, [x20]
   27434:	mov	x4, x24
   27438:	mov	x3, x23
   2743c:	mov	x0, x22
   27440:	add	x5, x5, x19, lsl #5
   27444:	add	x19, x19, #0x1
   27448:	ldp	x2, x1, [x5, #16]
   2744c:	lsl	x2, x2, #3
   27450:	bl	6890 <__asan_backtrace_free@plt>
   27454:	ldr	x5, [x21]
   27458:	cmp	x19, x5
   2745c:	b.cc	27430 <__sanitizer_set_death_callback@@Base+0x4948>  // b.lo, b.ul, b.last
   27460:	lsl	x2, x5, #5
   27464:	ldr	x1, [x20]
   27468:	mov	x4, x24
   2746c:	mov	x3, x23
   27470:	mov	x0, x22
   27474:	bl	6890 <__asan_backtrace_free@plt>
   27478:	ldp	x23, x24, [sp, #48]
   2747c:	str	xzr, [x21]
   27480:	ldp	x21, x22, [sp, #32]
   27484:	str	xzr, [x20]
   27488:	ldp	x19, x20, [sp, #16]
   2748c:	ldp	x29, x30, [sp], #64
   27490:	ret
   27494:	nop

0000000000027498 <__asan_backtrace_dwarf_add@@Base>:
   27498:	sub	sp, sp, #0x2a0
   2749c:	add	x8, sp, #0x160
   274a0:	stp	x29, x30, [sp, #48]
   274a4:	add	x29, sp, #0x30
   274a8:	stp	x4, x5, [sp, #272]
   274ac:	add	x4, sp, #0x148
   274b0:	stp	x19, x20, [sp, #64]
   274b4:	mov	x19, x2
   274b8:	add	x20, sp, #0x180
   274bc:	stp	x21, x22, [sp, #80]
   274c0:	mov	x22, x3
   274c4:	mov	x21, x4
   274c8:	stp	x23, x24, [sp, #96]
   274cc:	stp	x25, x26, [sp, #112]
   274d0:	stp	x27, x28, [sp, #128]
   274d4:	mov	x27, x0
   274d8:	mov	x0, x8
   274dc:	str	x7, [sp, #160]
   274e0:	stp	x8, x1, [sp, #192]
   274e4:	mov	w1, #0x0                   	// #0
   274e8:	str	x4, [sp, #208]
   274ec:	str	x6, [sp, #224]
   274f0:	stp	x2, x3, [sp, #256]
   274f4:	mov	x2, #0x18                  	// #24
   274f8:	str	x20, [sp, #288]
   274fc:	ldr	x23, [sp, #720]
   27500:	ldr	x26, [sp, #728]
   27504:	bl	6530 <__asan_internal_memset@plt>
   27508:	mov	x2, #0x18                  	// #24
   2750c:	mov	w1, #0x0                   	// #0
   27510:	mov	x0, x20
   27514:	bl	6530 <__asan_internal_memset@plt>
   27518:	adrp	x3, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2751c:	add	x3, x3, #0xb8
   27520:	stp	xzr, x3, [sp, #408]
   27524:	mov	x0, x21
   27528:	ldr	w3, [sp, #704]
   2752c:	mov	x2, #0x18                  	// #24
   27530:	mov	w1, #0x0                   	// #0
   27534:	str	xzr, [sp, #376]
   27538:	stp	x19, x19, [sp, #424]
   2753c:	str	x22, [sp, #440]
   27540:	str	w3, [sp, #448]
   27544:	stp	x23, x26, [sp, #456]
   27548:	str	wzr, [sp, #472]
   2754c:	bl	6530 <__asan_internal_memset@plt>
   27550:	ldr	x0, [sp, #440]
   27554:	str	x0, [sp, #152]
   27558:	cbz	x0, 27cf0 <__asan_backtrace_dwarf_add@@Base+0x858>
   2755c:	add	x22, sp, #0x1a0
   27560:	add	x25, sp, #0x1e0
   27564:	add	x28, sp, #0x260
   27568:	mov	x24, x27
   2756c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   27570:	add	x0, x0, #0x280
   27574:	str	xzr, [sp, #152]
   27578:	str	xzr, [sp, #168]
   2757c:	str	x0, [sp, #232]
   27580:	ldr	w0, [sp, #472]
   27584:	str	w0, [sp, #184]
   27588:	cbnz	w0, 27910 <__asan_backtrace_dwarf_add@@Base+0x478>
   2758c:	ldr	x1, [sp, #432]
   27590:	mov	x0, x22
   27594:	str	x1, [sp, #176]
   27598:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   2759c:	mov	w27, w0
   275a0:	mov	x1, #0xffffffff            	// #4294967295
   275a4:	cmp	x1, w0, uxtw
   275a8:	b.eq	27c78 <__asan_backtrace_dwarf_add@@Base+0x7e0>  // b.none
   275ac:	ldp	x2, x3, [x22]
   275b0:	stp	x2, x3, [x25]
   275b4:	ldp	x0, x1, [x22, #16]
   275b8:	stp	x0, x1, [x25, #16]
   275bc:	ldp	x2, x3, [x22, #32]
   275c0:	stp	x2, x3, [x25, #32]
   275c4:	ldp	x2, x3, [x22, #48]
   275c8:	stp	x2, x3, [x25, #48]
   275cc:	ldr	x0, [sp, #440]
   275d0:	str	x27, [sp, #504]
   275d4:	cmp	x0, x27
   275d8:	b.cs	27960 <__asan_backtrace_dwarf_add@@Base+0x4c8>  // b.hs, b.nlast
   275dc:	mov	x0, x22
   275e0:	bl	24a98 <__sanitizer_set_death_callback@@Base+0x1fb0>
   275e4:	cbz	w0, 27910 <__asan_backtrace_dwarf_add@@Base+0x478>
   275e8:	mov	x0, x25
   275ec:	bl	24ba0 <__sanitizer_set_death_callback@@Base+0x20b8>
   275f0:	and	w0, w0, #0xffff
   275f4:	str	w0, [sp, #188]
   275f8:	sub	w0, w0, #0x2
   275fc:	cmp	w0, #0x2
   27600:	b.hi	27990 <__asan_backtrace_dwarf_add@@Base+0x4f8>  // b.pmore
   27604:	ldr	x4, [sp, #208]
   27608:	mov	x3, x26
   2760c:	mov	x2, x23
   27610:	mov	x0, x24
   27614:	mov	x1, #0x8                   	// #8
   27618:	bl	6510 <__asan_backtrace_vector_grow@plt>
   2761c:	mov	x20, x0
   27620:	cbz	x0, 27910 <__asan_backtrace_dwarf_add@@Base+0x478>
   27624:	mov	x3, x26
   27628:	mov	x2, x23
   2762c:	mov	x0, x24
   27630:	mov	x1, #0x88                  	// #136
   27634:	bl	65b0 <__asan_backtrace_alloc@plt>
   27638:	mov	x19, x0
   2763c:	cbz	x0, 27910 <__asan_backtrace_dwarf_add@@Base+0x478>
   27640:	ldr	x1, [sp, #152]
   27644:	str	x19, [x20]
   27648:	add	x0, x0, #0x58
   2764c:	mov	x2, #0x10                  	// #16
   27650:	add	x1, x1, #0x1
   27654:	str	x1, [sp, #152]
   27658:	mov	w1, #0x0                   	// #0
   2765c:	str	x0, [sp, #240]
   27660:	bl	6530 <__asan_internal_memset@plt>
   27664:	ldr	w0, [sp, #184]
   27668:	cbz	w0, 27928 <__asan_backtrace_dwarf_add@@Base+0x490>
   2766c:	mov	x0, x25
   27670:	bl	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   27674:	ldr	x1, [sp, #160]
   27678:	stp	xzr, xzr, [x19, #88]
   2767c:	cmp	x1, x0
   27680:	b.ls	27944 <__asan_backtrace_dwarf_add@@Base+0x4ac>  // b.plast
   27684:	ldr	x3, [sp, #160]
   27688:	add	x4, sp, #0x220
   2768c:	ldr	x2, [sp, #224]
   27690:	str	x23, [sp, #584]
   27694:	str	x26, [sp, #592]
   27698:	add	x20, sp, #0x220
   2769c:	add	x1, x2, x0
   276a0:	sub	x0, x3, x0
   276a4:	stp	x1, x0, [x4, #16]
   276a8:	mov	x21, #0x0                   	// #0
   276ac:	ldr	w0, [sp, #704]
   276b0:	str	w0, [sp, #576]
   276b4:	add	x0, sp, #0x200
   276b8:	ldr	x3, [sp, #232]
   276bc:	stp	x3, x2, [x4]
   276c0:	ldp	x0, x1, [x0, #48]
   276c4:	stp	x0, x1, [x28, #16]
   276c8:	add	x0, sp, #0x200
   276cc:	str	wzr, [sp, #600]
   276d0:	ldp	x0, x1, [x0, #32]
   276d4:	stp	x0, x1, [x28]
   276d8:	add	x0, sp, #0x200
   276dc:	ldp	x0, x1, [x0, #64]
   276e0:	stp	x0, x1, [x28, #32]
   276e4:	add	x0, sp, #0x200
   276e8:	ldp	x0, x1, [x0, #80]
   276ec:	stp	x0, x1, [x28, #48]
   276f0:	mov	x0, x28
   276f4:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   276f8:	cbz	x0, 27748 <__asan_backtrace_dwarf_add@@Base+0x2b0>
   276fc:	nop
   27700:	ldr	w0, [sp, #664]
   27704:	cbnz	w0, 27910 <__asan_backtrace_dwarf_add@@Base+0x478>
   27708:	mov	x0, x28
   2770c:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   27710:	add	x21, x21, #0x1
   27714:	mov	x0, x28
   27718:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   2771c:	b	27728 <__asan_backtrace_dwarf_add@@Base+0x290>
   27720:	mov	x0, x28
   27724:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   27728:	mov	x0, x28
   2772c:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   27730:	cbnz	x0, 27720 <__asan_backtrace_dwarf_add@@Base+0x288>
   27734:	mov	x0, x28
   27738:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   2773c:	mov	x0, x28
   27740:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   27744:	cbnz	x0, 27700 <__asan_backtrace_dwarf_add@@Base+0x268>
   27748:	ldr	w0, [sp, #664]
   2774c:	cbnz	w0, 27910 <__asan_backtrace_dwarf_add@@Base+0x478>
   27750:	cbz	x21, 279d0 <__asan_backtrace_dwarf_add@@Base+0x538>
   27754:	lsl	x1, x21, #5
   27758:	mov	x3, x26
   2775c:	mov	x2, x23
   27760:	mov	x0, x24
   27764:	str	x1, [sp, #216]
   27768:	bl	65b0 <__asan_backtrace_alloc@plt>
   2776c:	str	x0, [x19, #96]
   27770:	cbz	x0, 27910 <__asan_backtrace_dwarf_add@@Base+0x478>
   27774:	ldr	x1, [sp, #216]
   27778:	str	x21, [x19, #88]
   2777c:	mov	x2, x1
   27780:	mov	w1, #0x0                   	// #0
   27784:	bl	6530 <__asan_internal_memset@plt>
   27788:	ldr	w0, [sp, #600]
   2778c:	cbnz	w0, 27ce8 <__asan_backtrace_dwarf_add@@Base+0x850>
   27790:	mov	x0, #0x0                   	// #0
   27794:	stp	x27, x22, [sp, #296]
   27798:	mov	x22, x0
   2779c:	str	x25, [sp, #312]
   277a0:	mov	x25, x20
   277a4:	str	x24, [sp, #248]
   277a8:	str	x23, [sp, #720]
   277ac:	str	x26, [sp, #728]
   277b0:	mov	x0, x25
   277b4:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   277b8:	mov	x21, x0
   277bc:	cbz	x0, 279a8 <__asan_backtrace_dwarf_add@@Base+0x510>
   277c0:	mov	x0, x25
   277c4:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   277c8:	mov	x20, x0
   277cc:	mov	x0, x25
   277d0:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   277d4:	mov	x24, #0x0                   	// #0
   277d8:	ldp	x2, x3, [x25]
   277dc:	stp	x2, x3, [x28]
   277e0:	and	w27, w0, #0xff
   277e4:	ldp	x2, x3, [x25, #16]
   277e8:	stp	x2, x3, [x28, #16]
   277ec:	ldp	x2, x3, [x25, #32]
   277f0:	stp	x2, x3, [x28, #32]
   277f4:	ldp	x2, x3, [x25, #48]
   277f8:	stp	x2, x3, [x28, #48]
   277fc:	b	2780c <__asan_backtrace_dwarf_add@@Base+0x374>
   27800:	add	x24, x24, #0x1
   27804:	mov	x0, x28
   27808:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   2780c:	mov	x0, x28
   27810:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   27814:	cbnz	x0, 27800 <__asan_backtrace_dwarf_add@@Base+0x368>
   27818:	cbnz	x24, 27bf8 <__asan_backtrace_dwarf_add@@Base+0x760>
   2781c:	mov	x23, #0x0                   	// #0
   27820:	mov	x0, x25
   27824:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   27828:	mov	x0, x25
   2782c:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   27830:	ldr	x3, [x19, #96]
   27834:	ldr	w5, [sp, #600]
   27838:	add	x0, x3, x22
   2783c:	str	x21, [x3, x22]
   27840:	add	x22, x22, #0x20
   27844:	stp	w20, w27, [x0, #8]
   27848:	stp	x24, x23, [x0, #16]
   2784c:	cbz	w5, 277b0 <__asan_backtrace_dwarf_add@@Base+0x318>
   27850:	ldr	x27, [sp, #248]
   27854:	ldr	x23, [sp, #720]
   27858:	ldr	x26, [sp, #728]
   2785c:	mov	x0, x27
   27860:	ldr	x1, [sp, #240]
   27864:	add	x2, x19, #0x60
   27868:	mov	x4, x26
   2786c:	mov	x3, x23
   27870:	bl	273f8 <__sanitizer_set_death_callback@@Base+0x4910>
   27874:	ldr	x0, [sp, #152]
   27878:	cbz	x0, 278e4 <__asan_backtrace_dwarf_add@@Base+0x44c>
   2787c:	ldr	x20, [sp, #328]
   27880:	add	x19, x20, x0, lsl #3
   27884:	nop
   27888:	ldr	x1, [x20]
   2788c:	mov	x4, x26
   27890:	mov	x3, x23
   27894:	mov	x0, x27
   27898:	add	x2, x1, #0x60
   2789c:	add	x1, x1, #0x58
   278a0:	bl	273f8 <__sanitizer_set_death_callback@@Base+0x4910>
   278a4:	ldr	x1, [x20], #8
   278a8:	mov	x4, x26
   278ac:	mov	x3, x23
   278b0:	mov	x0, x27
   278b4:	mov	x2, #0x88                  	// #136
   278b8:	bl	6890 <__asan_backtrace_free@plt>
   278bc:	cmp	x19, x20
   278c0:	b.ne	27888 <__asan_backtrace_dwarf_add@@Base+0x3f0>  // b.any
   278c4:	ldp	x5, x4, [sp, #336]
   278c8:	mov	x3, x26
   278cc:	ldr	x1, [sp, #208]
   278d0:	mov	x2, x23
   278d4:	mov	x0, x27
   278d8:	add	x4, x4, x5
   278dc:	stp	xzr, x4, [sp, #336]
   278e0:	bl	6600 <__asan_backtrace_vector_release@plt>
   278e4:	ldr	x0, [sp, #376]
   278e8:	cbnz	x0, 27c90 <__asan_backtrace_dwarf_add@@Base+0x7f8>
   278ec:	mov	w0, #0x0                   	// #0
   278f0:	ldp	x29, x30, [sp, #48]
   278f4:	ldp	x19, x20, [sp, #64]
   278f8:	ldp	x21, x22, [sp, #80]
   278fc:	ldp	x23, x24, [sp, #96]
   27900:	ldp	x25, x26, [sp, #112]
   27904:	ldp	x27, x28, [sp, #128]
   27908:	add	sp, sp, #0x2a0
   2790c:	ret
   27910:	mov	x27, x24
   27914:	ldr	x0, [sp, #152]
   27918:	cbnz	x0, 2787c <__asan_backtrace_dwarf_add@@Base+0x3e4>
   2791c:	ldr	x0, [sp, #376]
   27920:	cbz	x0, 278ec <__asan_backtrace_dwarf_add@@Base+0x454>
   27924:	b	27c90 <__asan_backtrace_dwarf_add@@Base+0x7f8>
   27928:	mov	x0, x25
   2792c:	bl	24ae0 <__sanitizer_set_death_callback@@Base+0x1ff8>
   27930:	ldr	x1, [sp, #160]
   27934:	stp	xzr, xzr, [x19, #88]
   27938:	mov	w0, w0
   2793c:	cmp	x1, x0
   27940:	b.hi	27684 <__asan_backtrace_dwarf_add@@Base+0x1ec>  // b.pmore
   27944:	mov	x27, x24
   27948:	mov	x0, x26
   2794c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   27950:	mov	w2, #0x0                   	// #0
   27954:	add	x1, x1, #0x260
   27958:	blr	x23
   2795c:	b	27914 <__asan_backtrace_dwarf_add@@Base+0x47c>
   27960:	ldr	x1, [sp, #432]
   27964:	sub	x0, x0, x27
   27968:	str	x0, [sp, #440]
   2796c:	add	x0, x1, x27
   27970:	str	x0, [sp, #432]
   27974:	mov	x0, x25
   27978:	bl	24ba0 <__sanitizer_set_death_callback@@Base+0x20b8>
   2797c:	and	w0, w0, #0xffff
   27980:	str	w0, [sp, #188]
   27984:	sub	w0, w0, #0x2
   27988:	cmp	w0, #0x2
   2798c:	b.ls	27604 <__asan_backtrace_dwarf_add@@Base+0x16c>  // b.plast
   27990:	mov	x27, x24
   27994:	mov	x0, x25
   27998:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2799c:	add	x1, x1, #0x240
   279a0:	bl	24530 <__sanitizer_set_death_callback@@Base+0x1a48>
   279a4:	b	27914 <__asan_backtrace_dwarf_add@@Base+0x47c>
   279a8:	ldp	x1, x0, [x19, #88]
   279ac:	adrp	x3, 24000 <__sanitizer_set_death_callback@@Base+0x1518>
   279b0:	mov	x2, #0x20                  	// #32
   279b4:	add	x3, x3, #0x430
   279b8:	ldr	x24, [sp, #248]
   279bc:	ldp	x27, x22, [sp, #296]
   279c0:	ldr	x25, [sp, #312]
   279c4:	ldr	x23, [sp, #720]
   279c8:	ldr	x26, [sp, #728]
   279cc:	bl	63a0 <__asan_backtrace_qsort@plt>
   279d0:	mov	x0, x25
   279d4:	bl	24c08 <__sanitizer_set_death_callback@@Base+0x2120>
   279d8:	ldr	w8, [sp, #184]
   279dc:	mov	x1, #0xc                   	// #12
   279e0:	ldr	x2, [sp, #712]
   279e4:	cmp	w8, #0x0
   279e8:	ldp	x3, x4, [sp, #496]
   279ec:	stp	x2, x23, [sp]
   279f0:	mov	x2, #0x4                   	// #4
   279f4:	csel	x1, x1, x2, ne  // ne = any
   279f8:	stp	x26, x19, [sp, #16]
   279fc:	add	x1, x1, x27
   27a00:	ldr	x2, [sp, #192]
   27a04:	str	x2, [sp, #32]
   27a08:	ldr	x2, [sp, #176]
   27a0c:	str	x28, [sp, #40]
   27a10:	ldr	w7, [sp, #704]
   27a14:	and	w0, w0, #0xff
   27a18:	sub	x2, x3, x2
   27a1c:	str	x2, [x19, #16]
   27a20:	ldr	x2, [sp, #168]
   27a24:	stp	x3, x4, [x19]
   27a28:	add	x1, x2, x1
   27a2c:	stp	x2, x1, [x19, #24]
   27a30:	mov	x2, x25
   27a34:	str	x1, [sp, #168]
   27a38:	ldr	w1, [sp, #188]
   27a3c:	str	w1, [x19, #40]
   27a40:	ldr	x1, [sp, #200]
   27a44:	stp	w8, w0, [x19, #44]
   27a48:	ldr	x5, [sp, #672]
   27a4c:	stp	xzr, xzr, [x19, #56]
   27a50:	mov	x0, x24
   27a54:	ldr	x6, [sp, #680]
   27a58:	str	xzr, [x19, #72]
   27a5c:	ldr	x3, [sp, #688]
   27a60:	ldr	x4, [sp, #696]
   27a64:	str	xzr, [x19, #80]
   27a68:	stp	xzr, xzr, [x19, #104]
   27a6c:	stp	xzr, xzr, [x19, #120]
   27a70:	bl	25380 <__sanitizer_set_death_callback@@Base+0x2898>
   27a74:	cbz	w0, 27910 <__asan_backtrace_dwarf_add@@Base+0x478>
   27a78:	ldr	w0, [sp, #536]
   27a7c:	cbnz	w0, 27910 <__asan_backtrace_dwarf_add@@Base+0x478>
   27a80:	ldr	x0, [sp, #440]
   27a84:	cbnz	x0, 27580 <__asan_backtrace_dwarf_add@@Base+0xe8>
   27a88:	ldr	w0, [sp, #472]
   27a8c:	mov	x27, x24
   27a90:	cbnz	w0, 27914 <__asan_backtrace_dwarf_add@@Base+0x47c>
   27a94:	add	x0, sp, #0x200
   27a98:	ldr	x1, [sp, #192]
   27a9c:	ldp	x2, x3, [x0, #-184]
   27aa0:	stp	x2, x3, [sp, #384]
   27aa4:	ldr	x0, [sp, #344]
   27aa8:	str	x0, [sp, #400]
   27aac:	ldr	x0, [sp, #152]
   27ab0:	mov	x3, x26
   27ab4:	mov	x2, x23
   27ab8:	str	x0, [sp, #408]
   27abc:	mov	x0, x27
   27ac0:	bl	6600 <__asan_backtrace_vector_release@plt>
   27ac4:	cbz	w0, 278ec <__asan_backtrace_dwarf_add@@Base+0x454>
   27ac8:	ldr	x1, [sp, #288]
   27acc:	mov	x3, x26
   27ad0:	mov	x2, x23
   27ad4:	mov	x0, x27
   27ad8:	bl	6600 <__asan_backtrace_vector_release@plt>
   27adc:	cbz	w0, 278ec <__asan_backtrace_dwarf_add@@Base+0x454>
   27ae0:	ldp	x20, x24, [sp, #376]
   27ae4:	mov	x2, #0x18                  	// #24
   27ae8:	ldr	x21, [sp, #352]
   27aec:	adrp	x3, 24000 <__sanitizer_set_death_callback@@Base+0x1518>
   27af0:	add	x3, x3, #0x5f0
   27af4:	mov	x0, x21
   27af8:	mov	x1, x20
   27afc:	ldr	x22, [sp, #408]
   27b00:	bl	63a0 <__asan_backtrace_qsort@plt>
   27b04:	mov	x3, x26
   27b08:	mov	x2, x23
   27b0c:	mov	x0, x27
   27b10:	mov	x1, #0xa0                  	// #160
   27b14:	bl	65b0 <__asan_backtrace_alloc@plt>
   27b18:	mov	x19, x0
   27b1c:	cbz	x0, 278ec <__asan_backtrace_dwarf_add@@Base+0x454>
   27b20:	ldr	x3, [sp, #712]
   27b24:	stp	xzr, x3, [x19]
   27b28:	add	x0, x0, #0x80
   27b2c:	ldr	x3, [sp, #200]
   27b30:	str	x3, [x19, #16]
   27b34:	ldr	x3, [sp, #256]
   27b38:	str	x3, [x19, #56]
   27b3c:	ldr	x3, [sp, #264]
   27b40:	str	x3, [x19, #64]
   27b44:	ldr	x3, [sp, #272]
   27b48:	str	x3, [x19, #72]
   27b4c:	ldr	x3, [sp, #280]
   27b50:	str	x3, [x19, #80]
   27b54:	ldr	x3, [sp, #672]
   27b58:	str	x3, [x19, #88]
   27b5c:	ldr	x3, [sp, #680]
   27b60:	str	x3, [x19, #96]
   27b64:	ldr	x3, [sp, #688]
   27b68:	str	x3, [x19, #104]
   27b6c:	ldr	x3, [sp, #696]
   27b70:	str	x3, [x19, #112]
   27b74:	ldr	w3, [sp, #704]
   27b78:	mov	x2, #0x20                  	// #32
   27b7c:	stp	x21, x20, [x19, #24]
   27b80:	mov	w1, #0x0                   	// #0
   27b84:	stp	x24, x22, [x19, #40]
   27b88:	str	w3, [x19, #120]
   27b8c:	bl	6530 <__asan_internal_memset@plt>
   27b90:	ldr	x0, [sp, #744]
   27b94:	cbz	x0, 27b9c <__asan_backtrace_dwarf_add@@Base+0x704>
   27b98:	str	x19, [x0]
   27b9c:	ldr	w0, [x27, #8]
   27ba0:	add	x2, x27, #0x20
   27ba4:	cbnz	w0, 27cd0 <__asan_backtrace_dwarf_add@@Base+0x838>
   27ba8:	ldr	x0, [x27, #32]
   27bac:	cbz	x0, 27bc0 <__asan_backtrace_dwarf_add@@Base+0x728>
   27bb0:	mov	x1, x0
   27bb4:	ldr	x0, [x0]
   27bb8:	cbnz	x0, 27bb0 <__asan_backtrace_dwarf_add@@Base+0x718>
   27bbc:	mov	x2, x1
   27bc0:	str	x19, [x2]
   27bc4:	ldr	x2, [sp, #736]
   27bc8:	adrp	x1, 27000 <__sanitizer_set_death_callback@@Base+0x4518>
   27bcc:	add	x1, x1, #0x288
   27bd0:	mov	w0, #0x1                   	// #1
   27bd4:	ldp	x29, x30, [sp, #48]
   27bd8:	str	x1, [x2]
   27bdc:	ldp	x19, x20, [sp, #64]
   27be0:	ldp	x21, x22, [sp, #80]
   27be4:	ldp	x23, x24, [sp, #96]
   27be8:	ldp	x25, x26, [sp, #112]
   27bec:	ldp	x27, x28, [sp, #128]
   27bf0:	add	sp, sp, #0x2a0
   27bf4:	ret
   27bf8:	ldr	x0, [sp, #248]
   27bfc:	lsl	x1, x24, #3
   27c00:	ldr	x2, [sp, #720]
   27c04:	ldr	x3, [sp, #728]
   27c08:	bl	65b0 <__asan_backtrace_alloc@plt>
   27c0c:	mov	x23, x0
   27c10:	cbz	x0, 27850 <__asan_backtrace_dwarf_add@@Base+0x3b8>
   27c14:	mov	x0, x25
   27c18:	mov	x24, #0x0                   	// #0
   27c1c:	mov	x25, x24
   27c20:	mov	x24, x22
   27c24:	mov	x22, x20
   27c28:	mov	x20, x0
   27c2c:	str	x19, [sp, #216]
   27c30:	mov	x19, x23
   27c34:	b	27c44 <__asan_backtrace_dwarf_add@@Base+0x7ac>
   27c38:	add	x25, x25, #0x1
   27c3c:	stp	w26, w0, [x19]
   27c40:	add	x19, x19, #0x8
   27c44:	mov	x0, x20
   27c48:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   27c4c:	mov	x26, x0
   27c50:	mov	x0, x20
   27c54:	bl	24ce0 <__sanitizer_set_death_callback@@Base+0x21f8>
   27c58:	cbnz	x26, 27c38 <__asan_backtrace_dwarf_add@@Base+0x7a0>
   27c5c:	mov	x0, x20
   27c60:	mov	x20, x22
   27c64:	mov	x22, x24
   27c68:	mov	x24, x25
   27c6c:	mov	x25, x0
   27c70:	ldr	x19, [sp, #216]
   27c74:	b	27830 <__asan_backtrace_dwarf_add@@Base+0x398>
   27c78:	mov	x0, x22
   27c7c:	bl	24b40 <__sanitizer_set_death_callback@@Base+0x2058>
   27c80:	mov	w1, #0x1                   	// #1
   27c84:	mov	x27, x0
   27c88:	str	w1, [sp, #184]
   27c8c:	b	275ac <__asan_backtrace_dwarf_add@@Base+0x114>
   27c90:	ldp	x5, x4, [sp, #360]
   27c94:	mov	x3, x26
   27c98:	ldr	x1, [sp, #192]
   27c9c:	mov	x2, x23
   27ca0:	mov	x0, x27
   27ca4:	add	x4, x4, x5
   27ca8:	stp	xzr, x4, [sp, #360]
   27cac:	bl	6600 <__asan_backtrace_vector_release@plt>
   27cb0:	b	278ec <__asan_backtrace_dwarf_add@@Base+0x454>
   27cb4:	ldxr	x0, [x1]
   27cb8:	cbnz	x0, 27cc4 <__asan_backtrace_dwarf_add@@Base+0x82c>
   27cbc:	stlxr	w3, x19, [x1]
   27cc0:	cbnz	w3, 27cb4 <__asan_backtrace_dwarf_add@@Base+0x81c>
   27cc4:	dmb	ish
   27cc8:	cmp	x0, #0x0
   27ccc:	b.eq	27bc4 <__asan_backtrace_dwarf_add@@Base+0x72c>  // b.none
   27cd0:	mov	x1, x2
   27cd4:	b	27cdc <__asan_backtrace_dwarf_add@@Base+0x844>
   27cd8:	mov	x1, x0
   27cdc:	ldar	x0, [x1]
   27ce0:	cbnz	x0, 27cd8 <__asan_backtrace_dwarf_add@@Base+0x840>
   27ce4:	b	27cb4 <__asan_backtrace_dwarf_add@@Base+0x81c>
   27ce8:	mov	x27, x24
   27cec:	b	2785c <__asan_backtrace_dwarf_add@@Base+0x3c4>
   27cf0:	ldr	w0, [sp, #472]
   27cf4:	cbz	w0, 27a94 <__asan_backtrace_dwarf_add@@Base+0x5fc>
   27cf8:	b	278e4 <__asan_backtrace_dwarf_add@@Base+0x44c>
   27cfc:	nop
   27d00:	stp	x29, x30, [sp, #-160]!
   27d04:	mov	x29, sp
   27d08:	stp	x19, x20, [sp, #16]
   27d0c:	mov	x20, x0
   27d10:	ldr	w0, [x0, #8]
   27d14:	stp	x21, x22, [sp, #32]
   27d18:	mov	x22, x1
   27d1c:	stp	x23, x24, [sp, #48]
   27d20:	mov	x23, x2
   27d24:	cbnz	w0, 27d80 <__asan_backtrace_dwarf_add@@Base+0x8e8>
   27d28:	ldr	w0, [x20, #56]
   27d2c:	cbnz	w0, 27d54 <__asan_backtrace_dwarf_add@@Base+0x8bc>
   27d30:	ldr	x1, [x20, #24]
   27d34:	str	x1, [sp, #88]
   27d38:	mov	w0, #0x1                   	// #1
   27d3c:	cbz	x1, 27da8 <__asan_backtrace_dwarf_add@@Base+0x910>
   27d40:	ldp	x19, x20, [sp, #16]
   27d44:	ldp	x21, x22, [sp, #32]
   27d48:	ldp	x23, x24, [sp, #48]
   27d4c:	ldp	x29, x30, [sp], #160
   27d50:	ret
   27d54:	mov	x0, x23
   27d58:	mov	w2, #0xffffffff            	// #-1
   27d5c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   27d60:	add	x1, x1, #0x2e8
   27d64:	blr	x22
   27d68:	mov	w0, #0x0                   	// #0
   27d6c:	ldp	x19, x20, [sp, #16]
   27d70:	ldp	x21, x22, [sp, #32]
   27d74:	ldp	x23, x24, [sp, #48]
   27d78:	ldp	x29, x30, [sp], #160
   27d7c:	ret
   27d80:	add	x0, x20, #0x38
   27d84:	ldar	w0, [x0]
   27d88:	cbnz	w0, 27d54 <__asan_backtrace_dwarf_add@@Base+0x8bc>
   27d8c:	ldr	w0, [x20, #8]
   27d90:	cbz	w0, 27d30 <__asan_backtrace_dwarf_add@@Base+0x898>
   27d94:	add	x0, x20, #0x18
   27d98:	ldar	x1, [x0]
   27d9c:	str	x1, [sp, #88]
   27da0:	mov	w0, #0x1                   	// #1
   27da4:	cbnz	x1, 27d40 <__asan_backtrace_dwarf_add@@Base+0x8a8>
   27da8:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   27dac:	add	x24, x24, #0x310
   27db0:	stp	x25, x26, [sp, #64]
   27db4:	adrp	x25, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   27db8:	add	x26, sp, #0x54
   27dbc:	add	x25, x25, #0x2d0
   27dc0:	mov	w19, #0x0                   	// #0
   27dc4:	cmp	w19, #0x3
   27dc8:	b.eq	27ec0 <__asan_backtrace_dwarf_add@@Base+0xa28>  // b.none
   27dcc:	cmp	w19, #0x4
   27dd0:	b.eq	27e9c <__asan_backtrace_dwarf_add@@Base+0xa04>  // b.none
   27dd4:	cmp	w19, #0x1
   27dd8:	b.eq	27e58 <__asan_backtrace_dwarf_add@@Base+0x9c0>  // b.none
   27ddc:	cmp	w19, #0x2
   27de0:	b.ne	27e50 <__asan_backtrace_dwarf_add@@Base+0x9b8>  // b.any
   27de4:	adrp	x21, 3b000 <__asan_backtrace_vector_release@@Base+0x5320>
   27de8:	add	x21, x21, #0x2d8
   27dec:	mov	x3, x26
   27df0:	mov	x2, x23
   27df4:	mov	x1, x22
   27df8:	mov	x0, x21
   27dfc:	bl	6a30 <__asan_backtrace_open@plt>
   27e00:	tbnz	w0, #31, 27e90 <__asan_backtrace_dwarf_add@@Base+0x9f8>
   27e04:	mov	w2, w0
   27e08:	mov	x4, x23
   27e0c:	mov	x3, x22
   27e10:	mov	x1, x21
   27e14:	add	x5, sp, #0x58
   27e18:	mov	x0, x20
   27e1c:	bl	68d0 <__asan_backtrace_initialize@plt>
   27e20:	cbz	w0, 27e78 <__asan_backtrace_dwarf_add@@Base+0x9e0>
   27e24:	ldr	w0, [x20, #8]
   27e28:	ldr	x1, [sp, #88]
   27e2c:	cbnz	w0, 27ec8 <__asan_backtrace_dwarf_add@@Base+0xa30>
   27e30:	ldp	x25, x26, [sp, #64]
   27e34:	str	x1, [x20, #24]
   27e38:	mov	w0, #0x1                   	// #1
   27e3c:	ldp	x19, x20, [sp, #16]
   27e40:	ldp	x21, x22, [sp, #32]
   27e44:	ldp	x23, x24, [sp, #48]
   27e48:	ldp	x29, x30, [sp], #160
   27e4c:	ret
   27e50:	ldr	x21, [x20]
   27e54:	cbnz	x21, 27dec <__asan_backtrace_dwarf_add@@Base+0x954>
   27e58:	add	w19, w19, #0x1
   27e5c:	cmp	w19, #0x5
   27e60:	b.ne	27dc4 <__asan_backtrace_dwarf_add@@Base+0x92c>  // b.any
   27e64:	ldr	x1, [x20]
   27e68:	mov	x0, x23
   27e6c:	cbz	x1, 27edc <__asan_backtrace_dwarf_add@@Base+0xa44>
   27e70:	mov	w2, #0x2                   	// #2
   27e74:	blr	x22
   27e78:	ldr	w0, [x20, #8]
   27e7c:	cbnz	w0, 27ef0 <__asan_backtrace_dwarf_add@@Base+0xa58>
   27e80:	mov	w1, #0x1                   	// #1
   27e84:	ldp	x25, x26, [sp, #64]
   27e88:	str	w1, [x20, #56]
   27e8c:	b	27d40 <__asan_backtrace_dwarf_add@@Base+0x8a8>
   27e90:	ldr	w0, [sp, #84]
   27e94:	cbnz	w0, 27e58 <__asan_backtrace_dwarf_add@@Base+0x9c0>
   27e98:	b	27e78 <__asan_backtrace_dwarf_add@@Base+0x9e0>
   27e9c:	bl	6670 <getpid@plt>
   27ea0:	sxtw	x3, w0
   27ea4:	add	x1, sp, #0x60
   27ea8:	mov	x2, x24
   27eac:	mov	x21, x1
   27eb0:	mov	x0, x1
   27eb4:	mov	x1, #0x40                  	// #64
   27eb8:	bl	6700 <snprintf@plt>
   27ebc:	b	27dec <__asan_backtrace_dwarf_add@@Base+0x954>
   27ec0:	mov	x21, x25
   27ec4:	b	27dec <__asan_backtrace_dwarf_add@@Base+0x954>
   27ec8:	add	x20, x20, #0x18
   27ecc:	stlr	x1, [x20]
   27ed0:	mov	w0, #0x1                   	// #1
   27ed4:	ldp	x25, x26, [sp, #64]
   27ed8:	b	27d40 <__asan_backtrace_dwarf_add@@Base+0x8a8>
   27edc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   27ee0:	mov	w2, #0x0                   	// #0
   27ee4:	add	x1, x1, #0x328
   27ee8:	blr	x22
   27eec:	b	27e78 <__asan_backtrace_dwarf_add@@Base+0x9e0>
   27ef0:	mov	w0, #0x1                   	// #1
   27ef4:	add	x20, x20, #0x38
   27ef8:	stlr	w0, [x20]
   27efc:	ldp	x25, x26, [sp, #64]
   27f00:	mov	w0, #0x0                   	// #0
   27f04:	b	27d40 <__asan_backtrace_dwarf_add@@Base+0x8a8>

0000000000027f08 <__asan_backtrace_pcinfo@@Base>:
   27f08:	stp	x29, x30, [sp, #-64]!
   27f0c:	mov	x29, sp
   27f10:	stp	x19, x20, [sp, #16]
   27f14:	mov	x20, x3
   27f18:	mov	x19, x0
   27f1c:	stp	x21, x22, [sp, #32]
   27f20:	mov	x22, x1
   27f24:	mov	x21, x4
   27f28:	mov	x1, x3
   27f2c:	str	x23, [sp, #48]
   27f30:	mov	x23, x2
   27f34:	mov	x2, x4
   27f38:	bl	27d00 <__asan_backtrace_dwarf_add@@Base+0x868>
   27f3c:	cbz	w0, 27f78 <__asan_backtrace_pcinfo@@Base+0x70>
   27f40:	ldr	w0, [x19, #56]
   27f44:	cbnz	w0, 27f78 <__asan_backtrace_pcinfo@@Base+0x70>
   27f48:	mov	x4, x21
   27f4c:	mov	x3, x20
   27f50:	mov	x2, x23
   27f54:	mov	x1, x22
   27f58:	mov	x0, x19
   27f5c:	ldr	x5, [x19, #24]
   27f60:	ldp	x19, x20, [sp, #16]
   27f64:	mov	x16, x5
   27f68:	ldp	x21, x22, [sp, #32]
   27f6c:	ldr	x23, [sp, #48]
   27f70:	ldp	x29, x30, [sp], #64
   27f74:	br	x16
   27f78:	mov	w0, #0x0                   	// #0
   27f7c:	ldp	x19, x20, [sp, #16]
   27f80:	ldp	x21, x22, [sp, #32]
   27f84:	ldr	x23, [sp, #48]
   27f88:	ldp	x29, x30, [sp], #64
   27f8c:	ret

0000000000027f90 <__asan_backtrace_syminfo@@Base>:
   27f90:	stp	x29, x30, [sp, #-64]!
   27f94:	mov	x29, sp
   27f98:	stp	x19, x20, [sp, #16]
   27f9c:	mov	x20, x3
   27fa0:	mov	x19, x0
   27fa4:	stp	x21, x22, [sp, #32]
   27fa8:	mov	x22, x2
   27fac:	mov	x21, x4
   27fb0:	mov	x2, x4
   27fb4:	str	x23, [sp, #48]
   27fb8:	mov	x23, x1
   27fbc:	mov	x1, x3
   27fc0:	bl	27d00 <__asan_backtrace_dwarf_add@@Base+0x868>
   27fc4:	cbz	w0, 27ff4 <__asan_backtrace_syminfo@@Base+0x64>
   27fc8:	ldr	w1, [x19, #56]
   27fcc:	mov	w0, #0x0                   	// #0
   27fd0:	cbnz	w1, 27ff4 <__asan_backtrace_syminfo@@Base+0x64>
   27fd4:	ldr	x5, [x19, #40]
   27fd8:	mov	x0, x19
   27fdc:	mov	x4, x21
   27fe0:	mov	x3, x20
   27fe4:	mov	x2, x22
   27fe8:	mov	x1, x23
   27fec:	blr	x5
   27ff0:	mov	w0, #0x1                   	// #1
   27ff4:	ldp	x19, x20, [sp, #16]
   27ff8:	ldp	x21, x22, [sp, #32]
   27ffc:	ldr	x23, [sp, #48]
   28000:	ldp	x29, x30, [sp], #64
   28004:	ret

0000000000028008 <__asan_backtrace_open@@Base>:
   28008:	stp	x29, x30, [sp, #-64]!
   2800c:	mov	x29, sp
   28010:	stp	x19, x20, [sp, #16]
   28014:	stp	x21, x22, [sp, #32]
   28018:	mov	x22, x2
   2801c:	mov	x21, x0
   28020:	str	x23, [sp, #48]
   28024:	mov	x23, x1
   28028:	cbz	x3, 2806c <__asan_backtrace_open@@Base+0x64>
   2802c:	str	wzr, [x3]
   28030:	mov	x20, x3
   28034:	mov	w1, #0x80000               	// #524288
   28038:	bl	64c0 <open@plt>
   2803c:	mov	w19, w0
   28040:	tbnz	w0, #31, 28098 <__asan_backtrace_open@@Base+0x90>
   28044:	mov	w0, w19
   28048:	mov	w2, #0x1                   	// #1
   2804c:	mov	w1, #0x2                   	// #2
   28050:	bl	69b0 <fcntl@plt>
   28054:	mov	w0, w19
   28058:	ldp	x19, x20, [sp, #16]
   2805c:	ldp	x21, x22, [sp, #32]
   28060:	ldr	x23, [sp, #48]
   28064:	ldp	x29, x30, [sp], #64
   28068:	ret
   2806c:	mov	w1, #0x80000               	// #524288
   28070:	bl	64c0 <open@plt>
   28074:	mov	w19, w0
   28078:	tbz	w0, #31, 28044 <__asan_backtrace_open@@Base+0x3c>
   2807c:	bl	6790 <__errno_location@plt>
   28080:	ldr	w2, [x0]
   28084:	mov	x1, x21
   28088:	mov	x0, x22
   2808c:	mov	w19, #0xffffffff            	// #-1
   28090:	blr	x23
   28094:	b	28054 <__asan_backtrace_open@@Base+0x4c>
   28098:	bl	6790 <__errno_location@plt>
   2809c:	ldr	w1, [x0]
   280a0:	cmp	w1, #0x2
   280a4:	b.ne	28080 <__asan_backtrace_open@@Base+0x78>  // b.any
   280a8:	mov	w0, #0x1                   	// #1
   280ac:	mov	w19, #0xffffffff            	// #-1
   280b0:	str	w0, [x20]
   280b4:	b	28054 <__asan_backtrace_open@@Base+0x4c>

00000000000280b8 <__asan_backtrace_close@@Base>:
   280b8:	stp	x29, x30, [sp, #-32]!
   280bc:	mov	x29, sp
   280c0:	stp	x19, x20, [sp, #16]
   280c4:	mov	x19, x1
   280c8:	mov	x20, x2
   280cc:	bl	6810 <close@plt>
   280d0:	tbnz	w0, #31, 280e4 <__asan_backtrace_close@@Base+0x2c>
   280d4:	mov	w0, #0x1                   	// #1
   280d8:	ldp	x19, x20, [sp, #16]
   280dc:	ldp	x29, x30, [sp], #32
   280e0:	ret
   280e4:	bl	6790 <__errno_location@plt>
   280e8:	mov	x2, x0
   280ec:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   280f0:	mov	x0, x20
   280f4:	add	x1, x1, #0x358
   280f8:	ldr	w2, [x2]
   280fc:	blr	x19
   28100:	mov	w0, #0x0                   	// #0
   28104:	ldp	x19, x20, [sp, #16]
   28108:	ldp	x29, x30, [sp], #32
   2810c:	ret

0000000000028110 <__asan_backtrace_qsort@@Base>:
   28110:	cmp	x1, #0x1
   28114:	b.ls	28290 <__asan_backtrace_qsort@@Base+0x180>  // b.plast
   28118:	stp	x29, x30, [sp, #-80]!
   2811c:	mov	x29, sp
   28120:	stp	x19, x20, [sp, #16]
   28124:	mov	x20, x2
   28128:	stp	x21, x22, [sp, #32]
   2812c:	mov	x21, x0
   28130:	stp	x23, x24, [sp, #48]
   28134:	mov	x23, x1
   28138:	mov	x24, x3
   2813c:	str	x25, [sp, #64]
   28140:	lsr	x0, x23, #1
   28144:	mov	x4, #0x0                   	// #0
   28148:	madd	x0, x0, x20, x21
   2814c:	cbz	x20, 2816c <__asan_backtrace_qsort@@Base+0x5c>
   28150:	ldrb	w2, [x0, x4]
   28154:	ldrb	w1, [x21, x4]
   28158:	strb	w2, [x21, x4]
   2815c:	strb	w1, [x0, x4]
   28160:	add	x4, x4, #0x1
   28164:	cmp	x20, x4
   28168:	b.ne	28150 <__asan_backtrace_qsort@@Base+0x40>  // b.any
   2816c:	add	x19, x21, x20
   28170:	mov	x25, #0x0                   	// #0
   28174:	mov	x22, #0x1                   	// #1
   28178:	b	2818c <__asan_backtrace_qsort@@Base+0x7c>
   2817c:	add	x22, x22, #0x1
   28180:	add	x19, x19, x20
   28184:	cmp	x22, x23
   28188:	b.cs	281f8 <__asan_backtrace_qsort@@Base+0xe8>  // b.hs, b.nlast
   2818c:	mov	x1, x19
   28190:	mov	x0, x21
   28194:	blr	x24
   28198:	cmp	w0, #0x0
   2819c:	add	x3, x25, #0x1
   281a0:	mov	x5, x3
   281a4:	b.le	2817c <__asan_backtrace_qsort@@Base+0x6c>
   281a8:	add	x3, x25, #0x2
   281ac:	cmp	x5, x22
   281b0:	mov	x25, x22
   281b4:	b.eq	2817c <__asan_backtrace_qsort@@Base+0x6c>  // b.none
   281b8:	madd	x0, x20, x5, x21
   281bc:	cbz	x20, 281e4 <__asan_backtrace_qsort@@Base+0xd4>
   281c0:	mov	x4, #0x0                   	// #0
   281c4:	nop
   281c8:	ldrb	w1, [x19, x4]
   281cc:	ldrb	w2, [x0, x4]
   281d0:	strb	w1, [x0, x4]
   281d4:	strb	w2, [x19, x4]
   281d8:	add	x4, x4, #0x1
   281dc:	cmp	x20, x4
   281e0:	b.ne	281c8 <__asan_backtrace_qsort@@Base+0xb8>  // b.any
   281e4:	add	x22, x22, #0x1
   281e8:	mov	x25, x5
   281ec:	add	x19, x19, x20
   281f0:	cmp	x22, x23
   281f4:	b.cc	2818c <__asan_backtrace_qsort@@Base+0x7c>  // b.lo, b.ul, b.last
   281f8:	cbnz	x25, 28264 <__asan_backtrace_qsort@@Base+0x154>
   281fc:	sub	x0, x23, #0x1
   28200:	cmp	x23, x25, lsl #1
   28204:	madd	x3, x20, x3, x21
   28208:	sub	x23, x0, x25
   2820c:	b.ls	28248 <__asan_backtrace_qsort@@Base+0x138>  // b.plast
   28210:	mov	x0, x21
   28214:	mov	x1, x25
   28218:	mov	x21, x3
   2821c:	mov	x2, x20
   28220:	mov	x3, x24
   28224:	bl	28110 <__asan_backtrace_qsort@@Base>
   28228:	cmp	x23, #0x1
   2822c:	b.hi	28140 <__asan_backtrace_qsort@@Base+0x30>  // b.pmore
   28230:	ldp	x19, x20, [sp, #16]
   28234:	ldp	x21, x22, [sp, #32]
   28238:	ldp	x23, x24, [sp, #48]
   2823c:	ldr	x25, [sp, #64]
   28240:	ldp	x29, x30, [sp], #80
   28244:	ret
   28248:	mov	x1, x23
   2824c:	mov	x0, x3
   28250:	mov	x23, x25
   28254:	mov	x3, x24
   28258:	mov	x2, x20
   2825c:	bl	28110 <__asan_backtrace_qsort@@Base>
   28260:	b	28228 <__asan_backtrace_qsort@@Base+0x118>
   28264:	madd	x1, x25, x20, x21
   28268:	cbz	x20, 281fc <__asan_backtrace_qsort@@Base+0xec>
   2826c:	mov	x0, #0x0                   	// #0
   28270:	ldrb	w4, [x1, x0]
   28274:	ldrb	w2, [x21, x0]
   28278:	strb	w4, [x21, x0]
   2827c:	strb	w2, [x1, x0]
   28280:	add	x0, x0, #0x1
   28284:	cmp	x20, x0
   28288:	b.ne	28270 <__asan_backtrace_qsort@@Base+0x160>  // b.any
   2828c:	b	281fc <__asan_backtrace_qsort@@Base+0xec>
   28290:	ret
   28294:	nop

0000000000028298 <__asan_backtrace_create_state@@Base>:
   28298:	stp	x29, x30, [sp, #-144]!
   2829c:	mov	x29, sp
   282a0:	stp	x19, x20, [sp, #16]
   282a4:	add	x19, sp, #0x48
   282a8:	mov	w20, w1
   282ac:	mov	w1, #0x0                   	// #0
   282b0:	stp	x21, x22, [sp, #32]
   282b4:	mov	x21, x2
   282b8:	mov	x22, x3
   282bc:	mov	x2, #0x48                  	// #72
   282c0:	str	x23, [sp, #48]
   282c4:	mov	x23, x0
   282c8:	mov	x0, x19
   282cc:	bl	6530 <__asan_internal_memset@plt>
   282d0:	mov	x3, x22
   282d4:	mov	x2, x21
   282d8:	mov	x0, x19
   282dc:	mov	x1, #0x48                  	// #72
   282e0:	str	x23, [sp, #72]
   282e4:	str	w20, [sp, #80]
   282e8:	bl	65b0 <__asan_backtrace_alloc@plt>
   282ec:	cbz	x0, 28318 <__asan_backtrace_create_state@@Base+0x80>
   282f0:	ldp	x2, x3, [sp, #72]
   282f4:	stp	x2, x3, [x0]
   282f8:	ldp	x2, x3, [sp, #88]
   282fc:	stp	x2, x3, [x0, #16]
   28300:	ldp	x2, x3, [sp, #104]
   28304:	stp	x2, x3, [x0, #32]
   28308:	ldp	x2, x3, [sp, #120]
   2830c:	stp	x2, x3, [x0, #48]
   28310:	ldr	x1, [sp, #136]
   28314:	str	x1, [x0, #64]
   28318:	ldp	x19, x20, [sp, #16]
   2831c:	ldp	x21, x22, [sp, #32]
   28320:	ldr	x23, [sp, #48]
   28324:	ldp	x29, x30, [sp], #144
   28328:	ret
   2832c:	nop
   28330:	sub	w5, w1, #0x1
   28334:	mov	x4, x0
   28338:	cmp	w5, #0x4f
   2833c:	b.ls	28348 <__asan_backtrace_create_state@@Base+0xb0>  // b.plast
   28340:	mov	x0, #0x0                   	// #0
   28344:	ret
   28348:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2834c:	add	x0, x0, #0x360
   28350:	ldrb	w0, [x0, w5, uxtw]
   28354:	adr	x5, 28360 <__asan_backtrace_create_state@@Base+0xc8>
   28358:	add	x0, x5, w0, sxtb #2
   2835c:	br	x0
   28360:	cbz	x3, 28340 <__asan_backtrace_create_state@@Base+0xa8>
   28364:	ldp	w0, w5, [x4, #40]
   28368:	cmp	w0, w5
   2836c:	b.ge	28340 <__asan_backtrace_create_state@@Base+0xa8>  // b.tcont
   28370:	mov	w5, #0x18                  	// #24
   28374:	add	w7, w0, #0x1
   28378:	ldr	x6, [x4, #32]
   2837c:	smull	x5, w0, w5
   28380:	add	x0, x6, x5
   28384:	str	wzr, [x0, #4]
   28388:	str	w7, [x4, #40]
   2838c:	str	w1, [x6, x5]
   28390:	stp	x2, x3, [x0, #8]
   28394:	ret
   28398:	cbnz	x2, 28364 <__asan_backtrace_create_state@@Base+0xcc>
   2839c:	mov	x0, #0x0                   	// #0
   283a0:	b	28344 <__asan_backtrace_create_state@@Base+0xac>
   283a4:	cmp	x2, #0x0
   283a8:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   283ac:	b.ne	28364 <__asan_backtrace_create_state@@Base+0xcc>  // b.any
   283b0:	mov	x0, #0x0                   	// #0
   283b4:	b	28344 <__asan_backtrace_create_state@@Base+0xac>
   283b8:	ldr	x3, [x0, #24]
   283bc:	mov	x2, x1
   283c0:	mov	w4, #0x4f                  	// #79
   283c4:	ldrb	w1, [x3]
   283c8:	cmp	w1, #0x52
   283cc:	ccmp	w1, w4, #0x4, ne  // ne = any
   283d0:	b.ne	283fc <__asan_backtrace_create_state@@Base+0x164>  // b.any
   283d4:	ldr	w5, [x0, #72]
   283d8:	cmp	w1, #0x52
   283dc:	mov	w1, #0x20                  	// #32
   283e0:	add	w4, w5, #0x3
   283e4:	b.eq	28404 <__asan_backtrace_create_state@@Base+0x16c>  // b.none
   283e8:	add	x3, x3, #0x1
   283ec:	str	x3, [x0, #24]
   283f0:	str	w4, [x0, #72]
   283f4:	mov	x3, #0x0                   	// #0
   283f8:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   283fc:	mov	x0, x2
   28400:	ret
   28404:	add	w4, w5, #0x2
   28408:	add	x3, x3, #0x1
   2840c:	str	x3, [x0, #24]
   28410:	mov	w1, #0x1f                  	// #31
   28414:	str	w4, [x0, #72]
   28418:	mov	x3, #0x0                   	// #0
   2841c:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   28420:	cbz	x1, 28500 <__asan_backtrace_create_state@@Base+0x268>
   28424:	stp	x29, x30, [sp, #-32]!
   28428:	mov	x29, sp
   2842c:	stp	x19, x20, [sp, #16]
   28430:	mov	x20, x0
   28434:	mov	x19, x1
   28438:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2843c:	add	x0, x0, #0x3b0
   28440:	ldr	w1, [x19]
   28444:	sub	w1, w1, #0x1
   28448:	cmp	w1, #0x4f
   2844c:	b.ls	2845c <__asan_backtrace_create_state@@Base+0x1c4>  // b.plast
   28450:	ldp	x19, x20, [sp, #16]
   28454:	ldp	x29, x30, [sp], #32
   28458:	ret
   2845c:	ldrb	w1, [x0, w1, uxtw]
   28460:	adr	x2, 2846c <__asan_backtrace_create_state@@Base+0x1d4>
   28464:	add	x1, x2, w1, sxtb #2
   28468:	br	x1
   2846c:	ldr	x0, [x19, #8]
   28470:	ldr	w0, [x0]
   28474:	cmp	w0, #0x5
   28478:	b.ne	28488 <__asan_backtrace_create_state@@Base+0x1f0>  // b.any
   2847c:	ldr	w0, [x20, #348]
   28480:	add	w0, w0, #0x1
   28484:	str	w0, [x20, #348]
   28488:	ldr	w0, [x20, #308]
   2848c:	cmp	w0, #0x800
   28490:	b.gt	28450 <__asan_backtrace_create_state@@Base+0x1b8>
   28494:	ldr	x1, [x19, #8]
   28498:	add	w0, w0, #0x1
   2849c:	str	w0, [x20, #308]
   284a0:	mov	x0, x20
   284a4:	bl	28420 <__asan_backtrace_create_state@@Base+0x188>
   284a8:	ldr	x1, [x19, #16]
   284ac:	mov	x0, x20
   284b0:	bl	28420 <__asan_backtrace_create_state@@Base+0x188>
   284b4:	ldr	w0, [x20, #308]
   284b8:	sub	w0, w0, #0x1
   284bc:	str	w0, [x20, #308]
   284c0:	ldp	x19, x20, [sp, #16]
   284c4:	ldp	x29, x30, [sp], #32
   284c8:	ret
   284cc:	ldr	x19, [x19, #8]
   284d0:	cbnz	x19, 28440 <__asan_backtrace_create_state@@Base+0x1a8>
   284d4:	b	28450 <__asan_backtrace_create_state@@Base+0x1b8>
   284d8:	ldr	x19, [x19, #16]
   284dc:	cbnz	x19, 28440 <__asan_backtrace_create_state@@Base+0x1a8>
   284e0:	b	28450 <__asan_backtrace_create_state@@Base+0x1b8>
   284e4:	ldr	w0, [x20, #364]
   284e8:	add	w0, w0, #0x1
   284ec:	str	w0, [x20, #364]
   284f0:	ldr	w0, [x20, #308]
   284f4:	cmp	w0, #0x800
   284f8:	b.gt	28450 <__asan_backtrace_create_state@@Base+0x1b8>
   284fc:	b	28494 <__asan_backtrace_create_state@@Base+0x1fc>
   28500:	ret
   28504:	nop
   28508:	cbz	x2, 285a8 <__asan_backtrace_create_state@@Base+0x310>
   2850c:	stp	x29, x30, [sp, #-48]!
   28510:	mov	x29, sp
   28514:	stp	x19, x20, [sp, #16]
   28518:	mov	x20, x1
   2851c:	mov	x19, x0
   28520:	stp	x21, x22, [sp, #32]
   28524:	add	x22, x1, x2
   28528:	ldr	x1, [x0, #256]
   2852c:	b	28550 <__asan_backtrace_create_state@@Base+0x2b8>
   28530:	mov	x0, x1
   28534:	add	x1, x1, #0x1
   28538:	str	x1, [x19, #256]
   2853c:	add	x20, x20, #0x1
   28540:	cmp	x20, x22
   28544:	strb	w21, [x19, x0]
   28548:	strb	w21, [x19, #264]
   2854c:	b.eq	28598 <__asan_backtrace_create_state@@Base+0x300>  // b.none
   28550:	ldrb	w21, [x20]
   28554:	cmp	x1, #0xff
   28558:	b.ne	28530 <__asan_backtrace_create_state@@Base+0x298>  // b.any
   2855c:	ldp	x3, x2, [x19, #272]
   28560:	strb	wzr, [x19, #255]
   28564:	mov	x0, x19
   28568:	add	x20, x20, #0x1
   2856c:	blr	x3
   28570:	ldr	x2, [x19, #320]
   28574:	mov	x0, #0x0                   	// #0
   28578:	mov	x1, #0x1                   	// #1
   2857c:	str	x1, [x19, #256]
   28580:	add	x2, x2, x1
   28584:	str	x2, [x19, #320]
   28588:	strb	w21, [x19, x0]
   2858c:	cmp	x20, x22
   28590:	strb	w21, [x19, #264]
   28594:	b.ne	28550 <__asan_backtrace_create_state@@Base+0x2b8>  // b.any
   28598:	ldp	x19, x20, [sp, #16]
   2859c:	ldp	x21, x22, [sp, #32]
   285a0:	ldp	x29, x30, [sp], #48
   285a4:	ret
   285a8:	ret
   285ac:	nop
   285b0:	ldr	x3, [x0]
   285b4:	mov	x6, x0
   285b8:	ldrb	w4, [x3]
   285bc:	cmp	w4, #0x6e
   285c0:	b.eq	2864c <__asan_backtrace_create_state@@Base+0x3b4>  // b.none
   285c4:	sub	w0, w4, #0x30
   285c8:	and	w0, w0, #0xff
   285cc:	cmp	w0, #0x9
   285d0:	b.hi	28674 <__asan_backtrace_create_state@@Base+0x3dc>  // b.pmore
   285d4:	mov	w9, #0x0                   	// #0
   285d8:	mov	w8, #0xcccd                	// #52429
   285dc:	add	x3, x3, #0x1
   285e0:	mov	w0, #0x0                   	// #0
   285e4:	mov	w7, #0x7fffffff            	// #2147483647
   285e8:	movk	w8, #0xcccc, lsl #16
   285ec:	b	28600 <__asan_backtrace_create_state@@Base+0x368>
   285f0:	umull	x1, w1, w8
   285f4:	lsr	x1, x1, #35
   285f8:	cmp	w1, w0
   285fc:	b.lt	28644 <__asan_backtrace_create_state@@Base+0x3ac>  // b.tstop
   28600:	str	x3, [x6]
   28604:	add	w0, w0, w0, lsl #2
   28608:	add	x3, x3, #0x1
   2860c:	ldurb	w1, [x3, #-1]
   28610:	add	w5, w4, w0, lsl #1
   28614:	sub	w0, w5, #0x30
   28618:	sub	w2, w1, #0x30
   2861c:	mov	w4, w1
   28620:	sub	w1, w7, w2
   28624:	and	w2, w2, #0xff
   28628:	cmp	w2, #0x9
   2862c:	b.ls	285f0 <__asan_backtrace_create_state@@Base+0x358>  // b.plast
   28630:	cmp	w9, #0x0
   28634:	mov	w1, #0x30                  	// #48
   28638:	sub	w5, w1, w5
   2863c:	csel	w0, w5, w0, ne  // ne = any
   28640:	ret
   28644:	mov	w0, #0xffffffff            	// #-1
   28648:	ret
   2864c:	add	x1, x3, #0x1
   28650:	str	x1, [x0]
   28654:	ldrb	w4, [x3, #1]
   28658:	sub	w0, w4, #0x30
   2865c:	and	w0, w0, #0xff
   28660:	cmp	w0, #0x9
   28664:	b.hi	28674 <__asan_backtrace_create_state@@Base+0x3dc>  // b.pmore
   28668:	mov	x3, x1
   2866c:	mov	w9, #0x1                   	// #1
   28670:	b	285d8 <__asan_backtrace_create_state@@Base+0x340>
   28674:	mov	w0, #0x0                   	// #0
   28678:	ret
   2867c:	nop
   28680:	mov	x1, x0
   28684:	ldr	w0, [x0, #40]
   28688:	ldr	w2, [x1, #44]
   2868c:	cmp	w0, w2
   28690:	b.ge	286dc <__asan_backtrace_create_state@@Base+0x444>  // b.tcont
   28694:	stp	x29, x30, [sp, #-16]!
   28698:	mov	w2, #0x18                  	// #24
   2869c:	add	w5, w0, #0x1
   286a0:	mov	x29, sp
   286a4:	ldr	x3, [x1, #32]
   286a8:	smull	x2, w0, w2
   286ac:	mov	w4, #0x42                  	// #66
   286b0:	add	x0, x1, #0x18
   286b4:	add	x10, x3, x2
   286b8:	str	wzr, [x10, #4]
   286bc:	str	w5, [x1, #40]
   286c0:	str	w4, [x3, x2]
   286c4:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   286c8:	sxtw	x0, w0
   286cc:	str	x0, [x10, #8]
   286d0:	mov	x0, x10
   286d4:	ldp	x29, x30, [sp], #16
   286d8:	ret
   286dc:	mov	x10, #0x0                   	// #0
   286e0:	mov	x0, x10
   286e4:	ret
   286e8:	ldr	x1, [x0, #24]
   286ec:	mov	x10, x0
   286f0:	ldrb	w0, [x1]
   286f4:	cmp	w0, #0x5f
   286f8:	b.eq	2873c <__asan_backtrace_create_state@@Base+0x4a4>  // b.none
   286fc:	cmp	w0, #0x6e
   28700:	b.eq	28754 <__asan_backtrace_create_state@@Base+0x4bc>  // b.none
   28704:	stp	x29, x30, [sp, #-16]!
   28708:	add	x0, x10, #0x18
   2870c:	mov	x29, sp
   28710:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   28714:	adds	w0, w0, #0x1
   28718:	b.mi	2874c <__asan_backtrace_create_state@@Base+0x4b4>  // b.first
   2871c:	ldr	x1, [x10, #24]
   28720:	ldrb	w2, [x1]
   28724:	cmp	w2, #0x5f
   28728:	b.ne	2874c <__asan_backtrace_create_state@@Base+0x4b4>  // b.any
   2872c:	add	x1, x1, #0x1
   28730:	str	x1, [x10, #24]
   28734:	ldp	x29, x30, [sp], #16
   28738:	ret
   2873c:	add	x1, x1, #0x1
   28740:	mov	w0, #0x0                   	// #0
   28744:	str	x1, [x10, #24]
   28748:	ret
   2874c:	mov	w0, #0xffffffff            	// #-1
   28750:	b	28734 <__asan_backtrace_create_state@@Base+0x49c>
   28754:	mov	w0, #0xffffffff            	// #-1
   28758:	ret
   2875c:	nop
   28760:	ldr	x1, [x0, #24]
   28764:	ldrb	w2, [x1]
   28768:	cmp	w2, #0x54
   2876c:	b.ne	287d8 <__asan_backtrace_create_state@@Base+0x540>  // b.any
   28770:	stp	x29, x30, [sp, #-16]!
   28774:	add	x1, x1, #0x1
   28778:	mov	x11, x0
   2877c:	mov	x29, sp
   28780:	str	x1, [x0, #24]
   28784:	bl	286e8 <__asan_backtrace_create_state@@Base+0x450>
   28788:	tbnz	w0, #31, 287cc <__asan_backtrace_create_state@@Base+0x534>
   2878c:	ldp	w1, w2, [x11, #40]
   28790:	cmp	w1, w2
   28794:	b.ge	287cc <__asan_backtrace_create_state@@Base+0x534>  // b.tcont
   28798:	mov	w2, #0x18                  	// #24
   2879c:	add	w5, w1, #0x1
   287a0:	ldr	x3, [x11, #32]
   287a4:	smull	x2, w1, w2
   287a8:	sxtw	x1, w0
   287ac:	mov	w4, #0x5                   	// #5
   287b0:	add	x0, x3, x2
   287b4:	str	wzr, [x0, #4]
   287b8:	str	w5, [x11, #40]
   287bc:	str	w4, [x3, x2]
   287c0:	str	x1, [x0, #8]
   287c4:	ldp	x29, x30, [sp], #16
   287c8:	ret
   287cc:	mov	x0, #0x0                   	// #0
   287d0:	ldp	x29, x30, [sp], #16
   287d4:	ret
   287d8:	mov	x0, #0x0                   	// #0
   287dc:	ret
   287e0:	mov	x10, x0
   287e4:	cbnz	w1, 28800 <__asan_backtrace_create_state@@Base+0x568>
   287e8:	ldr	x0, [x0, #24]
   287ec:	ldrb	w1, [x0]
   287f0:	cbz	w1, 28840 <__asan_backtrace_create_state@@Base+0x5a8>
   287f4:	add	x1, x0, #0x1
   287f8:	str	x1, [x10, #24]
   287fc:	ldrb	w1, [x0]
   28800:	stp	x29, x30, [sp, #-16]!
   28804:	cmp	w1, #0x68
   28808:	mov	x29, sp
   2880c:	b.eq	2887c <__asan_backtrace_create_state@@Base+0x5e4>  // b.none
   28810:	cmp	w1, #0x76
   28814:	b.ne	28834 <__asan_backtrace_create_state@@Base+0x59c>  // b.any
   28818:	add	x11, x10, #0x18
   2881c:	mov	x0, x11
   28820:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   28824:	ldr	x0, [x10, #24]
   28828:	ldrb	w1, [x0]
   2882c:	cmp	w1, #0x5f
   28830:	b.eq	28848 <__asan_backtrace_create_state@@Base+0x5b0>  // b.none
   28834:	mov	w0, #0x0                   	// #0
   28838:	ldp	x29, x30, [sp], #16
   2883c:	ret
   28840:	mov	w0, #0x0                   	// #0
   28844:	ret
   28848:	add	x0, x0, #0x1
   2884c:	str	x0, [x10, #24]
   28850:	mov	x0, x11
   28854:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   28858:	ldr	x0, [x10, #24]
   2885c:	ldrb	w1, [x0]
   28860:	cmp	w1, #0x5f
   28864:	b.ne	28834 <__asan_backtrace_create_state@@Base+0x59c>  // b.any
   28868:	add	x1, x0, #0x1
   2886c:	str	x1, [x10, #24]
   28870:	mov	w0, #0x1                   	// #1
   28874:	ldp	x29, x30, [sp], #16
   28878:	ret
   2887c:	add	x0, x10, #0x18
   28880:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   28884:	b	28858 <__asan_backtrace_create_state@@Base+0x5c0>
   28888:	mov	x2, x0
   2888c:	mov	w3, #0x56                  	// #86
   28890:	mov	w0, #0x4b                  	// #75
   28894:	ldrb	w1, [x2]
   28898:	cmp	w1, #0x72
   2889c:	ccmp	w1, w3, #0x4, ne  // ne = any
   288a0:	ccmp	w1, w0, #0x4, ne  // ne = any
   288a4:	mov	w0, #0x1                   	// #1
   288a8:	b.eq	288b8 <__asan_backtrace_create_state@@Base+0x620>  // b.none
   288ac:	cmp	w1, #0x44
   288b0:	mov	w0, #0x0                   	// #0
   288b4:	b.eq	288bc <__asan_backtrace_create_state@@Base+0x624>  // b.none
   288b8:	ret
   288bc:	ldrb	w0, [x2, #1]
   288c0:	and	w1, w0, #0xffffffdf
   288c4:	sub	w0, w0, #0x77
   288c8:	cmp	w1, #0x4f
   288cc:	and	w0, w0, #0xff
   288d0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   288d4:	cset	w0, ls  // ls = plast
   288d8:	ret
   288dc:	nop
   288e0:	ldr	x1, [x0, #24]
   288e4:	mov	x10, x0
   288e8:	ldrb	w0, [x1]
   288ec:	cmp	w0, #0x5f
   288f0:	b.eq	288fc <__asan_backtrace_create_state@@Base+0x664>  // b.none
   288f4:	mov	w0, #0x1                   	// #1
   288f8:	ret
   288fc:	stp	x29, x30, [sp, #-16]!
   28900:	add	x0, x1, #0x1
   28904:	mov	x29, sp
   28908:	str	x0, [x10, #24]
   2890c:	ldrb	w0, [x1, #1]
   28910:	cmp	w0, #0x5f
   28914:	b.eq	28938 <__asan_backtrace_create_state@@Base+0x6a0>  // b.none
   28918:	add	x0, x10, #0x18
   2891c:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   28920:	mov	w1, w0
   28924:	mov	w0, #0x0                   	// #0
   28928:	tbnz	w1, #31, 28930 <__asan_backtrace_create_state@@Base+0x698>
   2892c:	mov	w0, #0x1                   	// #1
   28930:	ldp	x29, x30, [sp], #16
   28934:	ret
   28938:	mov	x0, x10
   2893c:	add	x1, x1, #0x2
   28940:	str	x1, [x0, #24]!
   28944:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   28948:	tbnz	w0, #31, 28978 <__asan_backtrace_create_state@@Base+0x6e0>
   2894c:	cmp	w0, #0x9
   28950:	b.le	2892c <__asan_backtrace_create_state@@Base+0x694>
   28954:	ldr	x1, [x10, #24]
   28958:	mov	w0, #0x0                   	// #0
   2895c:	ldrb	w2, [x1]
   28960:	cmp	w2, #0x5f
   28964:	b.ne	28930 <__asan_backtrace_create_state@@Base+0x698>  // b.any
   28968:	add	x1, x1, #0x1
   2896c:	mov	w0, #0x1                   	// #1
   28970:	str	x1, [x10, #24]
   28974:	b	28930 <__asan_backtrace_create_state@@Base+0x698>
   28978:	mov	w0, #0x0                   	// #0
   2897c:	b	28930 <__asan_backtrace_create_state@@Base+0x698>
   28980:	cbnz	x0, 2899c <__asan_backtrace_create_state@@Base+0x704>
   28984:	b	289a8 <__asan_backtrace_create_state@@Base+0x710>
   28988:	cmp	w1, #0x0
   2898c:	b.le	289b0 <__asan_backtrace_create_state@@Base+0x718>
   28990:	ldr	x0, [x0, #16]
   28994:	sub	w1, w1, #0x1
   28998:	cbz	x0, 289ac <__asan_backtrace_create_state@@Base+0x714>
   2899c:	ldr	w2, [x0]
   289a0:	cmp	w2, #0x2f
   289a4:	b.eq	28988 <__asan_backtrace_create_state@@Base+0x6f0>  // b.none
   289a8:	mov	x0, #0x0                   	// #0
   289ac:	ret
   289b0:	b.ne	289a8 <__asan_backtrace_create_state@@Base+0x710>  // b.any
   289b4:	ldr	x0, [x0, #8]
   289b8:	ret
   289bc:	nop
   289c0:	mov	x2, x0
   289c4:	ldr	x0, [x0, #288]
   289c8:	cbz	x0, 289e0 <__asan_backtrace_create_state@@Base+0x748>
   289cc:	ldr	x1, [x1]
   289d0:	ldr	x0, [x0, #8]
   289d4:	ldr	x0, [x0, #16]
   289d8:	tbnz	w1, #31, 289e8 <__asan_backtrace_create_state@@Base+0x750>
   289dc:	b	28980 <__asan_backtrace_create_state@@Base+0x6e8>
   289e0:	mov	w1, #0x1                   	// #1
   289e4:	str	w1, [x2, #304]
   289e8:	ret
   289ec:	nop
   289f0:	cbz	x1, 28ac4 <__asan_backtrace_create_state@@Base+0x82c>
   289f4:	stp	x29, x30, [sp, #-48]!
   289f8:	mov	x29, sp
   289fc:	stp	x21, x22, [sp, #32]
   28a00:	mov	x21, #0x8001                	// #32769
   28a04:	movk	x21, #0x410, lsl #16
   28a08:	movk	x21, #0xc600, lsl #32
   28a0c:	stp	x19, x20, [sp, #16]
   28a10:	mov	x20, x0
   28a14:	mov	x19, x1
   28a18:	mov	x22, #0x1                   	// #1
   28a1c:	movk	x21, #0x19, lsl #48
   28a20:	ldr	w2, [x19]
   28a24:	cmp	w2, #0x8
   28a28:	b.eq	28a40 <__asan_backtrace_create_state@@Base+0x7a8>  // b.none
   28a2c:	b.hi	28a94 <__asan_backtrace_create_state@@Base+0x7fc>  // b.pmore
   28a30:	cmp	w2, #0x6
   28a34:	b.eq	28a48 <__asan_backtrace_create_state@@Base+0x7b0>  // b.none
   28a38:	cmp	w2, #0x7
   28a3c:	b.ne	28a5c <__asan_backtrace_create_state@@Base+0x7c4>  // b.any
   28a40:	ldr	x19, [x19, #16]
   28a44:	cbnz	x19, 28a20 <__asan_backtrace_create_state@@Base+0x788>
   28a48:	mov	x0, #0x0                   	// #0
   28a4c:	ldp	x19, x20, [sp, #16]
   28a50:	ldp	x21, x22, [sp, #32]
   28a54:	ldp	x29, x30, [sp], #48
   28a58:	ret
   28a5c:	cbz	w2, 28a48 <__asan_backtrace_create_state@@Base+0x7b0>
   28a60:	cmp	w2, #0x5
   28a64:	b.ne	28ab0 <__asan_backtrace_create_state@@Base+0x818>  // b.any
   28a68:	add	x1, x19, #0x8
   28a6c:	mov	x0, x20
   28a70:	bl	289c0 <__asan_backtrace_create_state@@Base+0x728>
   28a74:	cbz	x0, 28a48 <__asan_backtrace_create_state@@Base+0x7b0>
   28a78:	ldr	w1, [x0]
   28a7c:	cmp	w1, #0x2f
   28a80:	b.ne	28a48 <__asan_backtrace_create_state@@Base+0x7b0>  // b.any
   28a84:	ldp	x19, x20, [sp, #16]
   28a88:	ldp	x21, x22, [sp, #32]
   28a8c:	ldp	x29, x30, [sp], #48
   28a90:	ret
   28a94:	sub	w2, w2, #0x18
   28a98:	cmp	w2, #0x34
   28a9c:	b.hi	28ab0 <__asan_backtrace_create_state@@Base+0x818>  // b.pmore
   28aa0:	lsl	x2, x22, x2
   28aa4:	tst	x2, x21
   28aa8:	b.ne	28a48 <__asan_backtrace_create_state@@Base+0x7b0>  // b.any
   28aac:	tbnz	w2, #27, 28a40 <__asan_backtrace_create_state@@Base+0x7a8>
   28ab0:	ldr	x1, [x19, #8]
   28ab4:	mov	x0, x20
   28ab8:	bl	289f0 <__asan_backtrace_create_state@@Base+0x758>
   28abc:	cbz	x0, 28a40 <__asan_backtrace_create_state@@Base+0x7a8>
   28ac0:	b	28a4c <__asan_backtrace_create_state@@Base+0x7b4>
   28ac4:	mov	x0, #0x0                   	// #0
   28ac8:	ret
   28acc:	nop
   28ad0:	stp	x29, x30, [sp, #-48]!
   28ad4:	mov	x29, sp
   28ad8:	stp	x19, x20, [sp, #16]
   28adc:	mov	x19, x2
   28ae0:	add	x2, x1, #0x1
   28ae4:	stp	x21, x22, [sp, #32]
   28ae8:	mov	x21, x1
   28aec:	mov	x22, x0
   28af0:	ldp	x1, x20, [x19, #8]
   28af4:	add	x1, x2, x1
   28af8:	ldr	w2, [x19, #24]
   28afc:	cmp	x1, x20
   28b00:	b.hi	28b44 <__asan_backtrace_create_state@@Base+0x8ac>  // b.pmore
   28b04:	cbnz	w2, 28b34 <__asan_backtrace_create_state@@Base+0x89c>
   28b08:	ldp	x3, x0, [x19]
   28b0c:	mov	x1, x22
   28b10:	mov	x2, x21
   28b14:	add	x0, x3, x0
   28b18:	bl	64a0 <__asan_internal_memcpy@plt>
   28b1c:	ldp	x0, x1, [x19]
   28b20:	add	x0, x0, x21
   28b24:	strb	wzr, [x0, x1]
   28b28:	ldr	x1, [x19, #8]
   28b2c:	add	x1, x1, x21
   28b30:	str	x1, [x19, #8]
   28b34:	ldp	x19, x20, [sp, #16]
   28b38:	ldp	x21, x22, [sp, #32]
   28b3c:	ldp	x29, x30, [sp], #48
   28b40:	ret
   28b44:	cbnz	w2, 28b34 <__asan_backtrace_create_state@@Base+0x89c>
   28b48:	cbz	x20, 28b80 <__asan_backtrace_create_state@@Base+0x8e8>
   28b4c:	nop
   28b50:	lsl	x20, x20, #1
   28b54:	cmp	x1, x20
   28b58:	b.hi	28b50 <__asan_backtrace_create_state@@Base+0x8b8>  // b.pmore
   28b5c:	ldr	x0, [x19]
   28b60:	mov	x1, x20
   28b64:	bl	6590 <realloc@plt>
   28b68:	cbz	x0, 28b90 <__asan_backtrace_create_state@@Base+0x8f8>
   28b6c:	ldr	w2, [x19, #24]
   28b70:	str	x0, [x19]
   28b74:	str	x20, [x19, #16]
   28b78:	cbz	w2, 28b08 <__asan_backtrace_create_state@@Base+0x870>
   28b7c:	b	28b34 <__asan_backtrace_create_state@@Base+0x89c>
   28b80:	cmp	x1, #0x2
   28b84:	mov	x20, #0x2                   	// #2
   28b88:	b.hi	28b50 <__asan_backtrace_create_state@@Base+0x8b8>  // b.pmore
   28b8c:	b	28b5c <__asan_backtrace_create_state@@Base+0x8c4>
   28b90:	ldr	x0, [x19]
   28b94:	bl	6540 <free@plt>
   28b98:	stp	xzr, xzr, [x19]
   28b9c:	mov	w0, #0x1                   	// #1
   28ba0:	str	xzr, [x19, #16]
   28ba4:	str	w0, [x19, #24]
   28ba8:	b	28b34 <__asan_backtrace_create_state@@Base+0x89c>
   28bac:	nop
   28bb0:	stp	x29, x30, [sp, #-80]!
   28bb4:	mov	w2, w1
   28bb8:	adrp	x3, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   28bbc:	mov	x29, sp
   28bc0:	add	x1, x3, #0xa90
   28bc4:	stp	x19, x20, [sp, #16]
   28bc8:	add	x20, sp, #0x30
   28bcc:	mov	x19, x0
   28bd0:	mov	x0, x20
   28bd4:	bl	65f0 <sprintf@plt>
   28bd8:	mov	x0, x20
   28bdc:	bl	64b0 <__asan_internal_strlen@plt>
   28be0:	cbz	x0, 28c60 <__asan_backtrace_create_state@@Base+0x9c8>
   28be4:	stp	x21, x22, [sp, #32]
   28be8:	add	x21, x20, x0
   28bec:	ldr	x1, [x19, #256]
   28bf0:	b	28c14 <__asan_backtrace_create_state@@Base+0x97c>
   28bf4:	mov	x2, x1
   28bf8:	add	x1, x1, #0x1
   28bfc:	str	x1, [x19, #256]
   28c00:	add	x20, x20, #0x1
   28c04:	cmp	x21, x20
   28c08:	strb	w22, [x19, x2]
   28c0c:	strb	w22, [x19, #264]
   28c10:	b.eq	28c5c <__asan_backtrace_create_state@@Base+0x9c4>  // b.none
   28c14:	ldrb	w22, [x20]
   28c18:	cmp	x1, #0xff
   28c1c:	b.ne	28bf4 <__asan_backtrace_create_state@@Base+0x95c>  // b.any
   28c20:	ldp	x3, x2, [x19, #272]
   28c24:	strb	wzr, [x19, #255]
   28c28:	mov	x0, x19
   28c2c:	add	x20, x20, #0x1
   28c30:	blr	x3
   28c34:	ldr	x0, [x19, #320]
   28c38:	mov	x2, #0x0                   	// #0
   28c3c:	mov	x1, #0x1                   	// #1
   28c40:	str	x1, [x19, #256]
   28c44:	add	x0, x0, x1
   28c48:	str	x0, [x19, #320]
   28c4c:	strb	w22, [x19, x2]
   28c50:	cmp	x21, x20
   28c54:	strb	w22, [x19, #264]
   28c58:	b.ne	28c14 <__asan_backtrace_create_state@@Base+0x97c>  // b.any
   28c5c:	ldp	x21, x22, [sp, #32]
   28c60:	ldp	x19, x20, [sp, #16]
   28c64:	ldp	x29, x30, [sp], #80
   28c68:	ret
   28c6c:	nop
   28c70:	stp	x29, x30, [sp, #-240]!
   28c74:	mov	x29, sp
   28c78:	stp	x19, x20, [sp, #16]
   28c7c:	mov	x19, x0
   28c80:	cbz	x2, 28d08 <__asan_backtrace_create_state@@Base+0xa70>
   28c84:	stp	x21, x22, [sp, #32]
   28c88:	ldr	w22, [x0, #304]
   28c8c:	cbnz	w22, 28cd0 <__asan_backtrace_create_state@@Base+0xa38>
   28c90:	ldr	w0, [x2]
   28c94:	mov	x20, x2
   28c98:	cmp	w0, #0x50
   28c9c:	b.ls	28cb0 <__asan_backtrace_create_state@@Base+0xa18>  // b.plast
   28ca0:	mov	w0, #0x1                   	// #1
   28ca4:	ldp	x21, x22, [sp, #32]
   28ca8:	str	w0, [x19, #304]
   28cac:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   28cb0:	mov	w21, w1
   28cb4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   28cb8:	add	x1, x1, #0x400
   28cbc:	stp	x23, x24, [sp, #48]
   28cc0:	ldrh	w1, [x1, w0, uxtw #1]
   28cc4:	adr	x2, 28cd0 <__asan_backtrace_create_state@@Base+0xa38>
   28cc8:	add	x1, x2, w1, sxth #2
   28ccc:	br	x1
   28cd0:	ldp	x21, x22, [sp, #32]
   28cd4:	ldp	x19, x20, [sp, #16]
   28cd8:	ldp	x29, x30, [sp], #240
   28cdc:	ret
   28ce0:	ldr	x0, [x20, #16]
   28ce4:	ldr	w1, [x0]
   28ce8:	cmp	w1, #0x3b
   28cec:	b.ne	28d00 <__asan_backtrace_create_state@@Base+0xa68>  // b.any
   28cf0:	ldr	x0, [x0, #16]
   28cf4:	ldr	w0, [x0]
   28cf8:	cmp	w0, #0x3c
   28cfc:	b.eq	2c2c8 <__asan_backtrace_create_state@@Base+0x4030>  // b.none
   28d00:	ldp	x21, x22, [sp, #32]
   28d04:	ldp	x23, x24, [sp, #48]
   28d08:	mov	w0, #0x1                   	// #1
   28d0c:	str	w0, [x19, #304]
   28d10:	ldp	x19, x20, [sp, #16]
   28d14:	ldp	x29, x30, [sp], #240
   28d18:	ret
   28d1c:	ldp	x1, x2, [x19, #288]
   28d20:	add	x0, sp, #0x70
   28d24:	stp	x2, x20, [sp, #112]
   28d28:	str	wzr, [sp, #128]
   28d2c:	str	x1, [sp, #136]
   28d30:	str	x0, [x19, #296]
   28d34:	ldr	x2, [x20, #8]
   28d38:	mov	x0, x19
   28d3c:	mov	w1, w21
   28d40:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   28d44:	ldr	w0, [sp, #128]
   28d48:	cbz	w0, 2b338 <__asan_backtrace_create_state@@Base+0x30a0>
   28d4c:	ldr	x0, [sp, #112]
   28d50:	str	x0, [x19, #296]
   28d54:	cbz	w22, 2ab10 <__asan_backtrace_create_state@@Base+0x2878>
   28d58:	ldp	x21, x22, [sp, #32]
   28d5c:	str	x23, [x19, #288]
   28d60:	ldp	x23, x24, [sp, #48]
   28d64:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   28d68:	ldr	x4, [x19, #296]
   28d6c:	cbz	x4, 28ea8 <__asan_backtrace_create_state@@Base+0xc10>
   28d70:	mov	x1, x4
   28d74:	nop
   28d78:	ldr	w2, [x1, #16]
   28d7c:	cbnz	w2, 28d9c <__asan_backtrace_create_state@@Base+0xb04>
   28d80:	ldr	x2, [x1, #8]
   28d84:	ldr	w2, [x2]
   28d88:	sub	w3, w2, #0x19
   28d8c:	cmp	w3, #0x2
   28d90:	b.hi	2bd8c <__asan_backtrace_create_state@@Base+0x3af4>  // b.pmore
   28d94:	cmp	w0, w2
   28d98:	b.eq	2bd94 <__asan_backtrace_create_state@@Base+0x3afc>  // b.none
   28d9c:	ldr	x1, [x1]
   28da0:	cbnz	x1, 28d78 <__asan_backtrace_create_state@@Base+0xae0>
   28da4:	b	28ea8 <__asan_backtrace_create_state@@Base+0xc10>
   28da8:	ldp	x23, x24, [sp, #48]
   28dac:	b	28ca0 <__asan_backtrace_create_state@@Base+0xa08>
   28db0:	ldr	x2, [x20, #8]
   28db4:	mov	w22, #0x0                   	// #0
   28db8:	ldr	w1, [x2]
   28dbc:	cmp	w1, #0x27
   28dc0:	b.eq	2b8ec <__asan_backtrace_create_state@@Base+0x3654>  // b.none
   28dc4:	ldr	x1, [x19, #256]
   28dc8:	add	x0, x1, #0x1
   28dcc:	cmp	x1, #0xff
   28dd0:	b.ne	28dfc <__asan_backtrace_create_state@@Base+0xb64>  // b.any
   28dd4:	ldp	x3, x2, [x19, #272]
   28dd8:	strb	wzr, [x19, #255]
   28ddc:	mov	x0, x19
   28de0:	blr	x3
   28de4:	ldr	x3, [x19, #320]
   28de8:	mov	x0, #0x1                   	// #1
   28dec:	mov	x1, #0x0                   	// #0
   28df0:	add	x3, x3, x0
   28df4:	ldr	x2, [x20, #8]
   28df8:	str	x3, [x19, #320]
   28dfc:	str	x0, [x19, #256]
   28e00:	mov	w0, #0x28                  	// #40
   28e04:	strb	w0, [x19, x1]
   28e08:	mov	w1, w21
   28e0c:	strb	w0, [x19, #264]
   28e10:	mov	x0, x19
   28e14:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   28e18:	ldr	x1, [x19, #256]
   28e1c:	cmp	x1, #0xff
   28e20:	b.eq	2bc10 <__asan_backtrace_create_state@@Base+0x3978>  // b.none
   28e24:	add	x3, x1, #0x1
   28e28:	str	x3, [x19, #256]
   28e2c:	mov	w0, #0x29                  	// #41
   28e30:	strb	w0, [x19, x1]
   28e34:	strb	w0, [x19, #264]
   28e38:	ldr	w0, [x20]
   28e3c:	cmp	w0, #0x3e
   28e40:	b.eq	2bdcc <__asan_backtrace_create_state@@Base+0x3b34>  // b.none
   28e44:	cmp	w22, #0x8
   28e48:	b.eq	2bb74 <__asan_backtrace_create_state@@Base+0x38dc>  // b.none
   28e4c:	ldr	x2, [x20, #16]
   28e50:	mov	w1, w21
   28e54:	mov	x0, x19
   28e58:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   28e5c:	ldp	x21, x22, [sp, #32]
   28e60:	ldp	x23, x24, [sp, #48]
   28e64:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   28e68:	ldr	w2, [x19, #312]
   28e6c:	ldr	x0, [x20, #8]
   28e70:	ldr	w1, [x0]
   28e74:	cbnz	w2, 28e84 <__asan_backtrace_create_state@@Base+0xbec>
   28e78:	cmp	w1, #0x5
   28e7c:	mov	w22, #0x0                   	// #0
   28e80:	b.eq	2c378 <__asan_backtrace_create_state@@Base+0x40e0>  // b.none
   28e84:	cmp	w1, #0x23
   28e88:	ldr	x4, [x19, #296]
   28e8c:	b.eq	2b3fc <__asan_backtrace_create_state@@Base+0x3164>  // b.none
   28e90:	ldr	w2, [x20]
   28e94:	cmp	w2, w1
   28e98:	b.eq	2b3fc <__asan_backtrace_create_state@@Base+0x3164>  // b.none
   28e9c:	cmp	w1, #0x24
   28ea0:	b.eq	2aaec <__asan_backtrace_create_state@@Base+0x2854>  // b.none
   28ea4:	nop
   28ea8:	ldr	x1, [x19, #288]
   28eac:	add	x0, sp, #0x70
   28eb0:	stp	x4, x20, [sp, #112]
   28eb4:	str	wzr, [sp, #128]
   28eb8:	str	x1, [sp, #136]
   28ebc:	str	x0, [x19, #296]
   28ec0:	b	28d34 <__asan_backtrace_create_state@@Base+0xa9c>
   28ec4:	ldr	x2, [x20, #8]
   28ec8:	mov	w1, w21
   28ecc:	mov	x0, x19
   28ed0:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   28ed4:	tbz	w21, #2, 2baf8 <__asan_backtrace_create_state@@Base+0x3860>
   28ed8:	ldr	x1, [x19, #256]
   28edc:	add	x0, x1, #0x1
   28ee0:	cmp	x1, #0xff
   28ee4:	b.ne	28f0c <__asan_backtrace_create_state@@Base+0xc74>  // b.any
   28ee8:	ldp	x3, x2, [x19, #272]
   28eec:	strb	wzr, [x19, #255]
   28ef0:	mov	x0, x19
   28ef4:	blr	x3
   28ef8:	ldr	x2, [x19, #320]
   28efc:	mov	x0, #0x1                   	// #1
   28f00:	mov	x1, #0x0                   	// #0
   28f04:	add	x2, x2, x0
   28f08:	str	x2, [x19, #320]
   28f0c:	str	x0, [x19, #256]
   28f10:	mov	w0, #0x2e                  	// #46
   28f14:	strb	w0, [x19, x1]
   28f18:	strb	w0, [x19, #264]
   28f1c:	ldr	x23, [x20, #16]
   28f20:	ldr	w0, [x23]
   28f24:	cmp	w0, #0x47
   28f28:	b.eq	2befc <__asan_backtrace_create_state@@Base+0x3c64>  // b.none
   28f2c:	mov	x2, x23
   28f30:	mov	w1, w21
   28f34:	mov	x0, x19
   28f38:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   28f3c:	ldp	x21, x22, [sp, #32]
   28f40:	ldp	x23, x24, [sp, #48]
   28f44:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   28f48:	ldp	x3, x4, [x19, #288]
   28f4c:	add	x0, sp, #0x70
   28f50:	ldr	x2, [x20, #16]
   28f54:	str	x0, [x19, #296]
   28f58:	mov	w1, w21
   28f5c:	mov	x0, x19
   28f60:	stp	x4, x20, [sp, #112]
   28f64:	str	wzr, [sp, #128]
   28f68:	str	x3, [sp, #136]
   28f6c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   28f70:	ldr	w0, [sp, #128]
   28f74:	cbz	w0, 2bae4 <__asan_backtrace_create_state@@Base+0x384c>
   28f78:	ldr	x0, [sp, #112]
   28f7c:	ldp	x21, x22, [sp, #32]
   28f80:	ldp	x23, x24, [sp, #48]
   28f84:	str	x0, [x19, #296]
   28f88:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   28f8c:	ldr	x2, [x20, #8]
   28f90:	cbz	x2, 28fa0 <__asan_backtrace_create_state@@Base+0xd08>
   28f94:	mov	w1, w21
   28f98:	mov	x0, x19
   28f9c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   28fa0:	ldr	x0, [x20, #16]
   28fa4:	cbz	x0, 2bd74 <__asan_backtrace_create_state@@Base+0x3adc>
   28fa8:	ldr	x1, [x19, #256]
   28fac:	stp	x25, x26, [sp, #64]
   28fb0:	cmp	x1, #0xfd
   28fb4:	b.ls	28fd8 <__asan_backtrace_create_state@@Base+0xd40>  // b.plast
   28fb8:	strb	wzr, [x19, x1]
   28fbc:	mov	x0, x19
   28fc0:	ldp	x3, x2, [x19, #272]
   28fc4:	blr	x3
   28fc8:	str	xzr, [x19, #256]
   28fcc:	ldr	x0, [x19, #320]
   28fd0:	add	x0, x0, #0x1
   28fd4:	str	x0, [x19, #320]
   28fd8:	adrp	x25, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   28fdc:	add	x25, x25, #0x7f0
   28fe0:	mov	x0, x25
   28fe4:	bl	64b0 <__asan_internal_strlen@plt>
   28fe8:	ldr	x22, [x19, #256]
   28fec:	cbz	x0, 2b384 <__asan_backtrace_create_state@@Base+0x30ec>
   28ff0:	adrp	x23, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   28ff4:	add	x25, x0, x25
   28ff8:	add	x23, x23, #0x7f1
   28ffc:	mov	w24, #0x2c                  	// #44
   29000:	b	29024 <__asan_backtrace_create_state@@Base+0xd8c>
   29004:	mov	x0, x22
   29008:	add	x22, x22, #0x1
   2900c:	str	x22, [x19, #256]
   29010:	cmp	x25, x23
   29014:	strb	w24, [x19, x0]
   29018:	strb	w24, [x19, #264]
   2901c:	b.eq	2b384 <__asan_backtrace_create_state@@Base+0x30ec>  // b.none
   29020:	ldrb	w24, [x23], #1
   29024:	cmp	x22, #0xff
   29028:	b.ne	29004 <__asan_backtrace_create_state@@Base+0xd6c>  // b.any
   2902c:	ldp	x3, x2, [x19, #272]
   29030:	strb	wzr, [x19, #255]
   29034:	mov	x1, x22
   29038:	mov	x0, x19
   2903c:	mov	x22, #0x1                   	// #1
   29040:	blr	x3
   29044:	ldr	x1, [x19, #320]
   29048:	mov	x0, #0x0                   	// #0
   2904c:	add	x1, x1, x22
   29050:	str	x1, [x19, #320]
   29054:	b	2900c <__asan_backtrace_create_state@@Base+0xd74>
   29058:	ldr	x2, [x20, #16]
   2905c:	mov	w1, w21
   29060:	mov	x0, x19
   29064:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   29068:	ldp	x21, x22, [sp, #32]
   2906c:	ldp	x23, x24, [sp, #48]
   29070:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   29074:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29078:	add	x24, x24, #0x8c8
   2907c:	mov	x0, x24
   29080:	bl	64b0 <__asan_internal_strlen@plt>
   29084:	cbz	x0, 2aff8 <__asan_backtrace_create_state@@Base+0x2d60>
   29088:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2908c:	add	x24, x0, x24
   29090:	add	x22, x22, #0x8c9
   29094:	mov	w23, #0x67                  	// #103
   29098:	ldr	x1, [x19, #256]
   2909c:	b	290c0 <__asan_backtrace_create_state@@Base+0xe28>
   290a0:	mov	x0, x1
   290a4:	add	x1, x1, #0x1
   290a8:	str	x1, [x19, #256]
   290ac:	cmp	x22, x24
   290b0:	strb	w23, [x19, x0]
   290b4:	strb	w23, [x19, #264]
   290b8:	b.eq	2aff8 <__asan_backtrace_create_state@@Base+0x2d60>  // b.none
   290bc:	ldrb	w23, [x22], #1
   290c0:	cmp	x1, #0xff
   290c4:	b.ne	290a0 <__asan_backtrace_create_state@@Base+0xe08>  // b.any
   290c8:	ldp	x3, x2, [x19, #272]
   290cc:	strb	wzr, [x19, #255]
   290d0:	mov	x0, x19
   290d4:	blr	x3
   290d8:	ldr	x2, [x19, #320]
   290dc:	mov	x1, #0x1                   	// #1
   290e0:	mov	x0, #0x0                   	// #0
   290e4:	add	x2, x2, x1
   290e8:	str	x2, [x19, #320]
   290ec:	b	290a8 <__asan_backtrace_create_state@@Base+0xe10>
   290f0:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   290f4:	add	x24, x24, #0x8e8
   290f8:	mov	x0, x24
   290fc:	bl	64b0 <__asan_internal_strlen@plt>
   29100:	cbz	x0, 2ae80 <__asan_backtrace_create_state@@Base+0x2be8>
   29104:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29108:	add	x24, x0, x24
   2910c:	add	x22, x22, #0x8e9
   29110:	mov	w23, #0x7b                  	// #123
   29114:	ldr	x1, [x19, #256]
   29118:	b	2913c <__asan_backtrace_create_state@@Base+0xea4>
   2911c:	mov	x0, x1
   29120:	add	x1, x1, #0x1
   29124:	str	x1, [x19, #256]
   29128:	cmp	x24, x22
   2912c:	strb	w23, [x19, x0]
   29130:	strb	w23, [x19, #264]
   29134:	b.eq	2ae80 <__asan_backtrace_create_state@@Base+0x2be8>  // b.none
   29138:	ldrb	w23, [x22], #1
   2913c:	cmp	x1, #0xff
   29140:	b.ne	2911c <__asan_backtrace_create_state@@Base+0xe84>  // b.any
   29144:	ldp	x3, x2, [x19, #272]
   29148:	strb	wzr, [x19, #255]
   2914c:	mov	x0, x19
   29150:	blr	x3
   29154:	ldr	x2, [x19, #320]
   29158:	mov	x1, #0x1                   	// #1
   2915c:	mov	x0, #0x0                   	// #0
   29160:	add	x2, x2, x1
   29164:	str	x2, [x19, #320]
   29168:	b	29124 <__asan_backtrace_create_state@@Base+0xe8c>
   2916c:	adrp	x23, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29170:	add	x23, x23, #0x900
   29174:	mov	x0, x23
   29178:	bl	64b0 <__asan_internal_strlen@plt>
   2917c:	cbz	x0, 2adac <__asan_backtrace_create_state@@Base+0x2b14>
   29180:	adrp	x21, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29184:	add	x23, x0, x23
   29188:	add	x21, x21, #0x901
   2918c:	mov	w22, #0x7b                  	// #123
   29190:	ldr	x1, [x19, #256]
   29194:	b	291b8 <__asan_backtrace_create_state@@Base+0xf20>
   29198:	mov	x0, x1
   2919c:	add	x1, x1, #0x1
   291a0:	str	x1, [x19, #256]
   291a4:	cmp	x21, x23
   291a8:	strb	w22, [x19, x0]
   291ac:	strb	w22, [x19, #264]
   291b0:	b.eq	2adac <__asan_backtrace_create_state@@Base+0x2b14>  // b.none
   291b4:	ldrb	w22, [x21], #1
   291b8:	cmp	x1, #0xff
   291bc:	b.ne	29198 <__asan_backtrace_create_state@@Base+0xf00>  // b.any
   291c0:	ldp	x3, x2, [x19, #272]
   291c4:	strb	wzr, [x19, #255]
   291c8:	mov	x0, x19
   291cc:	blr	x3
   291d0:	ldr	x2, [x19, #320]
   291d4:	mov	x1, #0x1                   	// #1
   291d8:	mov	x0, #0x0                   	// #0
   291dc:	add	x2, x2, x1
   291e0:	str	x2, [x19, #320]
   291e4:	b	291a0 <__asan_backtrace_create_state@@Base+0xf08>
   291e8:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   291ec:	add	x24, x24, #0x7a0
   291f0:	mov	x0, x24
   291f4:	bl	64b0 <__asan_internal_strlen@plt>
   291f8:	cbz	x0, 2ad90 <__asan_backtrace_create_state@@Base+0x2af8>
   291fc:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29200:	add	x24, x0, x24
   29204:	add	x22, x22, #0x7a1
   29208:	mov	w23, #0x74                  	// #116
   2920c:	ldr	x1, [x19, #256]
   29210:	b	29234 <__asan_backtrace_create_state@@Base+0xf9c>
   29214:	mov	x0, x1
   29218:	add	x1, x1, #0x1
   2921c:	str	x1, [x19, #256]
   29220:	cmp	x24, x22
   29224:	strb	w23, [x19, x0]
   29228:	strb	w23, [x19, #264]
   2922c:	b.eq	2ad90 <__asan_backtrace_create_state@@Base+0x2af8>  // b.none
   29230:	ldrb	w23, [x22], #1
   29234:	cmp	x1, #0xff
   29238:	b.ne	29214 <__asan_backtrace_create_state@@Base+0xf7c>  // b.any
   2923c:	ldp	x3, x2, [x19, #272]
   29240:	strb	wzr, [x19, #255]
   29244:	mov	x0, x19
   29248:	blr	x3
   2924c:	ldr	x2, [x19, #320]
   29250:	mov	x1, #0x1                   	// #1
   29254:	mov	x0, #0x0                   	// #0
   29258:	add	x2, x2, x1
   2925c:	str	x2, [x19, #320]
   29260:	b	2921c <__asan_backtrace_create_state@@Base+0xf84>
   29264:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29268:	add	x24, x24, #0x618
   2926c:	mov	x0, x24
   29270:	bl	64b0 <__asan_internal_strlen@plt>
   29274:	cbz	x0, 2ad74 <__asan_backtrace_create_state@@Base+0x2adc>
   29278:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2927c:	add	x24, x0, x24
   29280:	add	x22, x22, #0x619
   29284:	mov	w23, #0x74                  	// #116
   29288:	ldr	x1, [x19, #256]
   2928c:	b	292b0 <__asan_backtrace_create_state@@Base+0x1018>
   29290:	mov	x0, x1
   29294:	add	x1, x1, #0x1
   29298:	str	x1, [x19, #256]
   2929c:	cmp	x24, x22
   292a0:	strb	w23, [x19, x0]
   292a4:	strb	w23, [x19, #264]
   292a8:	b.eq	2ad74 <__asan_backtrace_create_state@@Base+0x2adc>  // b.none
   292ac:	ldrb	w23, [x22], #1
   292b0:	cmp	x1, #0xff
   292b4:	b.ne	29290 <__asan_backtrace_create_state@@Base+0xff8>  // b.any
   292b8:	ldp	x3, x2, [x19, #272]
   292bc:	strb	wzr, [x19, #255]
   292c0:	mov	x0, x19
   292c4:	blr	x3
   292c8:	ldr	x2, [x19, #320]
   292cc:	mov	x1, #0x1                   	// #1
   292d0:	mov	x0, #0x0                   	// #0
   292d4:	add	x2, x2, x1
   292d8:	str	x2, [x19, #320]
   292dc:	b	29298 <__asan_backtrace_create_state@@Base+0x1000>
   292e0:	ldp	x2, x20, [x20, #8]
   292e4:	cbz	x2, 292f4 <__asan_backtrace_create_state@@Base+0x105c>
   292e8:	mov	w1, w21
   292ec:	mov	x0, x19
   292f0:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   292f4:	ldr	x1, [x19, #256]
   292f8:	add	x0, x1, #0x1
   292fc:	cmp	x1, #0xff
   29300:	b.ne	29328 <__asan_backtrace_create_state@@Base+0x1090>  // b.any
   29304:	ldp	x3, x2, [x19, #272]
   29308:	strb	wzr, [x19, #255]
   2930c:	mov	x0, x19
   29310:	blr	x3
   29314:	ldr	x2, [x19, #320]
   29318:	mov	x0, #0x1                   	// #1
   2931c:	mov	x1, #0x0                   	// #0
   29320:	add	x2, x2, x0
   29324:	str	x2, [x19, #320]
   29328:	str	x0, [x19, #256]
   2932c:	mov	w0, #0x7b                  	// #123
   29330:	strb	w0, [x19, x1]
   29334:	mov	x2, x20
   29338:	strb	w0, [x19, #264]
   2933c:	mov	w1, w21
   29340:	mov	x0, x19
   29344:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   29348:	ldr	x1, [x19, #256]
   2934c:	add	x0, x1, #0x1
   29350:	cmp	x1, #0xff
   29354:	b.ne	2937c <__asan_backtrace_create_state@@Base+0x10e4>  // b.any
   29358:	ldp	x3, x2, [x19, #272]
   2935c:	strb	wzr, [x19, #255]
   29360:	mov	x0, x19
   29364:	blr	x3
   29368:	ldr	x2, [x19, #320]
   2936c:	mov	x0, #0x1                   	// #1
   29370:	mov	x1, #0x0                   	// #0
   29374:	add	x2, x2, x0
   29378:	str	x2, [x19, #320]
   2937c:	str	x0, [x19, #256]
   29380:	mov	w0, #0x7d                  	// #125
   29384:	strb	w0, [x19, x1]
   29388:	strb	w0, [x19, #264]
   2938c:	ldp	x21, x22, [sp, #32]
   29390:	ldp	x23, x24, [sp, #48]
   29394:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   29398:	ldr	x24, [x20, #8]
   2939c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   293a0:	add	x22, x22, #0x7f8
   293a4:	mov	x0, x22
   293a8:	ldr	w23, [x24, #16]
   293ac:	bl	64b0 <__asan_internal_strlen@plt>
   293b0:	cbz	x0, 2ac94 <__asan_backtrace_create_state@@Base+0x29fc>
   293b4:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   293b8:	add	x22, x0, x22
   293bc:	add	x20, x20, #0x7f9
   293c0:	mov	w21, #0x6f                  	// #111
   293c4:	ldr	x1, [x19, #256]
   293c8:	b	293ec <__asan_backtrace_create_state@@Base+0x1154>
   293cc:	mov	x0, x1
   293d0:	add	x1, x1, #0x1
   293d4:	str	x1, [x19, #256]
   293d8:	cmp	x22, x20
   293dc:	strb	w21, [x19, x0]
   293e0:	strb	w21, [x19, #264]
   293e4:	b.eq	2ac94 <__asan_backtrace_create_state@@Base+0x29fc>  // b.none
   293e8:	ldrb	w21, [x20], #1
   293ec:	cmp	x1, #0xff
   293f0:	b.ne	293cc <__asan_backtrace_create_state@@Base+0x1134>  // b.any
   293f4:	ldp	x3, x2, [x19, #272]
   293f8:	strb	wzr, [x19, #255]
   293fc:	mov	x0, x19
   29400:	blr	x3
   29404:	ldr	x2, [x19, #320]
   29408:	mov	x1, #0x1                   	// #1
   2940c:	mov	x0, #0x0                   	// #0
   29410:	add	x2, x2, x1
   29414:	str	x2, [x19, #320]
   29418:	b	293d4 <__asan_backtrace_create_state@@Base+0x113c>
   2941c:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29420:	add	x24, x24, #0x808
   29424:	mov	x0, x24
   29428:	bl	64b0 <__asan_internal_strlen@plt>
   2942c:	cbz	x0, 2ab7c <__asan_backtrace_create_state@@Base+0x28e4>
   29430:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29434:	add	x24, x0, x24
   29438:	add	x22, x22, #0x809
   2943c:	mov	w23, #0x6f                  	// #111
   29440:	ldr	x1, [x19, #256]
   29444:	b	29468 <__asan_backtrace_create_state@@Base+0x11d0>
   29448:	mov	x0, x1
   2944c:	add	x1, x1, #0x1
   29450:	str	x1, [x19, #256]
   29454:	cmp	x22, x24
   29458:	strb	w23, [x19, x0]
   2945c:	strb	w23, [x19, #264]
   29460:	b.eq	2ab7c <__asan_backtrace_create_state@@Base+0x28e4>  // b.none
   29464:	ldrb	w23, [x22], #1
   29468:	cmp	x1, #0xff
   2946c:	b.ne	29448 <__asan_backtrace_create_state@@Base+0x11b0>  // b.any
   29470:	ldp	x3, x2, [x19, #272]
   29474:	strb	wzr, [x19, #255]
   29478:	mov	x0, x19
   2947c:	blr	x3
   29480:	ldr	x2, [x19, #320]
   29484:	mov	x1, #0x1                   	// #1
   29488:	mov	x0, #0x0                   	// #0
   2948c:	add	x2, x2, x1
   29490:	str	x2, [x19, #320]
   29494:	b	29450 <__asan_backtrace_create_state@@Base+0x11b8>
   29498:	ldr	x2, [x20, #8]
   2949c:	mov	w1, w21
   294a0:	mov	x0, x19
   294a4:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   294a8:	add	x24, x24, #0x910
   294ac:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   294b0:	mov	x0, x24
   294b4:	bl	64b0 <__asan_internal_strlen@plt>
   294b8:	cbz	x0, 2ab1c <__asan_backtrace_create_state@@Base+0x2884>
   294bc:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   294c0:	add	x24, x0, x24
   294c4:	add	x22, x22, #0x911
   294c8:	mov	w23, #0x20                  	// #32
   294cc:	ldr	x1, [x19, #256]
   294d0:	b	294f4 <__asan_backtrace_create_state@@Base+0x125c>
   294d4:	mov	x0, x1
   294d8:	add	x1, x1, #0x1
   294dc:	str	x1, [x19, #256]
   294e0:	cmp	x24, x22
   294e4:	strb	w23, [x19, x0]
   294e8:	strb	w23, [x19, #264]
   294ec:	b.eq	2ab1c <__asan_backtrace_create_state@@Base+0x2884>  // b.none
   294f0:	ldrb	w23, [x22], #1
   294f4:	cmp	x1, #0xff
   294f8:	b.ne	294d4 <__asan_backtrace_create_state@@Base+0x123c>  // b.any
   294fc:	ldp	x3, x2, [x19, #272]
   29500:	strb	wzr, [x19, #255]
   29504:	mov	x0, x19
   29508:	blr	x3
   2950c:	ldr	x2, [x19, #320]
   29510:	mov	x1, #0x1                   	// #1
   29514:	mov	x0, #0x0                   	// #0
   29518:	add	x2, x2, x1
   2951c:	str	x2, [x19, #320]
   29520:	b	294dc <__asan_backtrace_create_state@@Base+0x1244>
   29524:	ldr	x2, [x20, #8]
   29528:	mov	w1, w21
   2952c:	mov	x0, x19
   29530:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   29534:	ldp	x21, x22, [sp, #32]
   29538:	ldp	x23, x24, [sp, #48]
   2953c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   29540:	and	w22, w21, #0xffffff9f
   29544:	ldr	x3, [x19, #296]
   29548:	tbnz	w21, #5, 2bce4 <__asan_backtrace_create_state@@Base+0x3a4c>
   2954c:	ldr	x2, [x20, #8]
   29550:	cbz	x2, 29558 <__asan_backtrace_create_state@@Base+0x12c0>
   29554:	tbz	w21, #6, 2c12c <__asan_backtrace_create_state@@Base+0x3e94>
   29558:	mov	w1, w22
   2955c:	add	x2, x20, #0x10
   29560:	mov	x0, x19
   29564:	bl	2d5d8 <__asan_backtrace_create_state@@Base+0x5340>
   29568:	ldp	x21, x22, [sp, #32]
   2956c:	ldp	x23, x24, [sp, #48]
   29570:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   29574:	ldr	x23, [x20, #8]
   29578:	cbnz	x23, 2b48c <__asan_backtrace_create_state@@Base+0x31f4>
   2957c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29580:	add	x22, x22, #0x898
   29584:	mov	x0, x22
   29588:	bl	64b0 <__asan_internal_strlen@plt>
   2958c:	cbz	x0, 2c848 <__asan_backtrace_create_state@@Base+0x45b0>
   29590:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29594:	add	x22, x0, x22
   29598:	add	x20, x20, #0x899
   2959c:	mov	w21, #0x74                  	// #116
   295a0:	ldr	x1, [x19, #256]
   295a4:	b	295c8 <__asan_backtrace_create_state@@Base+0x1330>
   295a8:	mov	x0, x1
   295ac:	add	x1, x1, #0x1
   295b0:	str	x1, [x19, #256]
   295b4:	cmp	x22, x20
   295b8:	strb	w21, [x19, x0]
   295bc:	strb	w21, [x19, #264]
   295c0:	b.eq	2b8bc <__asan_backtrace_create_state@@Base+0x3624>  // b.none
   295c4:	ldrb	w21, [x20], #1
   295c8:	cmp	x1, #0xff
   295cc:	b.ne	295a8 <__asan_backtrace_create_state@@Base+0x1310>  // b.any
   295d0:	ldp	x3, x2, [x19, #272]
   295d4:	strb	wzr, [x19, #255]
   295d8:	mov	x0, x19
   295dc:	blr	x3
   295e0:	ldr	x2, [x19, #320]
   295e4:	mov	x1, #0x1                   	// #1
   295e8:	mov	x0, #0x0                   	// #0
   295ec:	add	x2, x2, x1
   295f0:	str	x2, [x19, #320]
   295f4:	b	295b0 <__asan_backtrace_create_state@@Base+0x1318>
   295f8:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   295fc:	add	x24, x24, #0x788
   29600:	mov	x0, x24
   29604:	bl	64b0 <__asan_internal_strlen@plt>
   29608:	cbz	x0, 2ab98 <__asan_backtrace_create_state@@Base+0x2900>
   2960c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29610:	add	x24, x0, x24
   29614:	add	x22, x22, #0x789
   29618:	mov	w23, #0x68                  	// #104
   2961c:	ldr	x1, [x19, #256]
   29620:	b	29644 <__asan_backtrace_create_state@@Base+0x13ac>
   29624:	mov	x0, x1
   29628:	add	x1, x1, #0x1
   2962c:	str	x1, [x19, #256]
   29630:	cmp	x22, x24
   29634:	strb	w23, [x19, x0]
   29638:	strb	w23, [x19, #264]
   2963c:	b.eq	2ab98 <__asan_backtrace_create_state@@Base+0x2900>  // b.none
   29640:	ldrb	w23, [x22], #1
   29644:	cmp	x1, #0xff
   29648:	b.ne	29624 <__asan_backtrace_create_state@@Base+0x138c>  // b.any
   2964c:	ldp	x3, x2, [x19, #272]
   29650:	strb	wzr, [x19, #255]
   29654:	mov	x0, x19
   29658:	blr	x3
   2965c:	ldr	x2, [x19, #320]
   29660:	mov	x1, #0x1                   	// #1
   29664:	mov	x0, #0x0                   	// #0
   29668:	add	x2, x2, x1
   2966c:	str	x2, [x19, #320]
   29670:	b	2962c <__asan_backtrace_create_state@@Base+0x1394>
   29674:	ldrsw	x22, [x20, #16]
   29678:	ldr	x20, [x20, #8]
   2967c:	cbz	x22, 2c5d0 <__asan_backtrace_create_state@@Base+0x4338>
   29680:	add	x22, x20, x22
   29684:	ldr	x1, [x19, #256]
   29688:	b	296ac <__asan_backtrace_create_state@@Base+0x1414>
   2968c:	mov	x0, x1
   29690:	add	x1, x1, #0x1
   29694:	str	x1, [x19, #256]
   29698:	add	x20, x20, #0x1
   2969c:	strb	w21, [x19, x0]
   296a0:	cmp	x20, x22
   296a4:	strb	w21, [x19, #264]
   296a8:	b.eq	2b34c <__asan_backtrace_create_state@@Base+0x30b4>  // b.none
   296ac:	ldrb	w21, [x20]
   296b0:	cmp	x1, #0xff
   296b4:	b.ne	2968c <__asan_backtrace_create_state@@Base+0x13f4>  // b.any
   296b8:	ldp	x3, x2, [x19, #272]
   296bc:	strb	wzr, [x19, #255]
   296c0:	mov	x0, x19
   296c4:	blr	x3
   296c8:	ldr	x2, [x19, #320]
   296cc:	mov	x1, #0x1                   	// #1
   296d0:	mov	x0, #0x0                   	// #0
   296d4:	add	x2, x2, x1
   296d8:	str	x2, [x19, #320]
   296dc:	b	29694 <__asan_backtrace_create_state@@Base+0x13fc>
   296e0:	ldp	x1, x5, [x19, #288]
   296e4:	add	x23, sp, #0x70
   296e8:	stp	x5, x20, [sp, #112]
   296ec:	mov	w22, #0x1                   	// #1
   296f0:	mov	w6, w22
   296f4:	str	wzr, [sp, #128]
   296f8:	str	x1, [sp, #136]
   296fc:	str	x23, [x19, #296]
   29700:	mov	x24, x5
   29704:	mov	x0, x5
   29708:	mov	x5, x23
   2970c:	cbnz	x24, 29758 <__asan_backtrace_create_state@@Base+0x14c0>
   29710:	b	2c9b8 <__asan_backtrace_create_state@@Base+0x4720>
   29714:	ldr	w1, [x0, #16]
   29718:	cbnz	w1, 29750 <__asan_backtrace_create_state@@Base+0x14b8>
   2971c:	cmp	w22, #0x3
   29720:	b.hi	2c118 <__asan_backtrace_create_state@@Base+0x3e80>  // b.pmore
   29724:	ubfiz	x1, x22, #5, #32
   29728:	add	w22, w22, #0x1
   2972c:	add	x4, x23, x1
   29730:	ldp	x2, x3, [x0]
   29734:	stp	x2, x3, [x4]
   29738:	ldp	x2, x3, [x0, #16]
   2973c:	stp	x2, x3, [x4, #16]
   29740:	str	x5, [x23, x1]
   29744:	mov	x5, x4
   29748:	str	x4, [x19, #296]
   2974c:	str	w6, [x0, #16]
   29750:	ldr	x0, [x0]
   29754:	cbz	x0, 2976c <__asan_backtrace_create_state@@Base+0x14d4>
   29758:	ldr	x1, [x0, #8]
   2975c:	ldr	w1, [x1]
   29760:	sub	w1, w1, #0x19
   29764:	cmp	w1, #0x2
   29768:	b.ls	29714 <__asan_backtrace_create_state@@Base+0x147c>  // b.plast
   2976c:	ldr	x2, [x20, #16]
   29770:	mov	x0, x19
   29774:	mov	w1, w21
   29778:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2977c:	str	x24, [x19, #296]
   29780:	ldr	w0, [sp, #128]
   29784:	cbnz	w0, 2bd80 <__asan_backtrace_create_state@@Base+0x3ae8>
   29788:	ubfiz	x0, x22, #5, #32
   2978c:	cmp	w22, #0x1
   29790:	add	x23, x23, x0
   29794:	b.eq	297b8 <__asan_backtrace_create_state@@Base+0x1520>  // b.none
   29798:	ldur	x2, [x23, #-24]
   2979c:	sub	w22, w22, #0x1
   297a0:	mov	w1, w21
   297a4:	mov	x0, x19
   297a8:	sub	x23, x23, #0x20
   297ac:	bl	2cd40 <__asan_backtrace_create_state@@Base+0x4aa8>
   297b0:	cmp	w22, #0x1
   297b4:	b.ne	29798 <__asan_backtrace_create_state@@Base+0x1500>  // b.any
   297b8:	ldr	x3, [x19, #296]
   297bc:	mov	w1, w21
   297c0:	add	x2, x20, #0x8
   297c4:	mov	x0, x19
   297c8:	bl	2dc98 <__asan_backtrace_create_state@@Base+0x5a00>
   297cc:	ldp	x21, x22, [sp, #32]
   297d0:	ldp	x23, x24, [sp, #48]
   297d4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   297d8:	ldrsh	w0, [x20, #18]
   297dc:	cbnz	w0, 2bc68 <__asan_backtrace_create_state@@Base+0x39d0>
   297e0:	ldr	x2, [x20, #8]
   297e4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   297e8:	ldr	x0, [x0, #3912]
   297ec:	ldr	x1, [x2, #8]
   297f0:	add	x0, x0, #0x100
   297f4:	cmp	x1, x0
   297f8:	b.eq	2984c <__asan_backtrace_create_state@@Base+0x15b4>  // b.none
   297fc:	mov	w1, w21
   29800:	mov	x0, x19
   29804:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   29808:	ldr	x1, [x19, #256]
   2980c:	add	x0, x1, #0x1
   29810:	cmp	x1, #0xff
   29814:	b.ne	2983c <__asan_backtrace_create_state@@Base+0x15a4>  // b.any
   29818:	ldp	x3, x2, [x19, #272]
   2981c:	strb	wzr, [x19, #255]
   29820:	mov	x0, x19
   29824:	blr	x3
   29828:	ldr	x2, [x19, #320]
   2982c:	mov	x0, #0x1                   	// #1
   29830:	mov	x1, #0x0                   	// #0
   29834:	add	x2, x2, x0
   29838:	str	x2, [x19, #320]
   2983c:	str	x0, [x19, #256]
   29840:	mov	w0, #0x20                  	// #32
   29844:	strb	w0, [x19, x1]
   29848:	strb	w0, [x19, #264]
   2984c:	ldrsh	w0, [x20, #16]
   29850:	cbz	w0, 2b72c <__asan_backtrace_create_state@@Base+0x3494>
   29854:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29858:	add	x22, x22, #0x7e0
   2985c:	mov	x0, x22
   29860:	bl	64b0 <__asan_internal_strlen@plt>
   29864:	cbz	x0, 2c83c <__asan_backtrace_create_state@@Base+0x45a4>
   29868:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2986c:	add	x22, x0, x22
   29870:	add	x20, x20, #0x7e1
   29874:	mov	w21, #0x5f                  	// #95
   29878:	ldr	x1, [x19, #256]
   2987c:	b	298a0 <__asan_backtrace_create_state@@Base+0x1608>
   29880:	mov	x0, x1
   29884:	add	x1, x1, #0x1
   29888:	str	x1, [x19, #256]
   2988c:	cmp	x22, x20
   29890:	strb	w21, [x19, x0]
   29894:	strb	w21, [x19, #264]
   29898:	b.eq	2b8e0 <__asan_backtrace_create_state@@Base+0x3648>  // b.none
   2989c:	ldrb	w21, [x20], #1
   298a0:	cmp	x1, #0xff
   298a4:	b.ne	29880 <__asan_backtrace_create_state@@Base+0x15e8>  // b.any
   298a8:	ldp	x3, x2, [x19, #272]
   298ac:	strb	wzr, [x19, #255]
   298b0:	mov	x0, x19
   298b4:	blr	x3
   298b8:	ldr	x2, [x19, #320]
   298bc:	mov	x1, #0x1                   	// #1
   298c0:	mov	x0, #0x0                   	// #0
   298c4:	add	x2, x2, x1
   298c8:	str	x2, [x19, #320]
   298cc:	b	29888 <__asan_backtrace_create_state@@Base+0x15f0>
   298d0:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   298d4:	add	x24, x24, #0x6c0
   298d8:	mov	x0, x24
   298dc:	bl	64b0 <__asan_internal_strlen@plt>
   298e0:	cbz	x0, 2b1e8 <__asan_backtrace_create_state@@Base+0x2f50>
   298e4:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   298e8:	add	x24, x0, x24
   298ec:	add	x22, x22, #0x6c1
   298f0:	mov	w23, #0x6e                  	// #110
   298f4:	ldr	x1, [x19, #256]
   298f8:	b	2991c <__asan_backtrace_create_state@@Base+0x1684>
   298fc:	mov	x0, x1
   29900:	add	x1, x1, #0x1
   29904:	str	x1, [x19, #256]
   29908:	cmp	x24, x22
   2990c:	strb	w23, [x19, x0]
   29910:	strb	w23, [x19, #264]
   29914:	b.eq	2b1e8 <__asan_backtrace_create_state@@Base+0x2f50>  // b.none
   29918:	ldrb	w23, [x22], #1
   2991c:	cmp	x1, #0xff
   29920:	b.ne	298fc <__asan_backtrace_create_state@@Base+0x1664>  // b.any
   29924:	ldp	x3, x2, [x19, #272]
   29928:	strb	wzr, [x19, #255]
   2992c:	mov	x0, x19
   29930:	blr	x3
   29934:	ldr	x2, [x19, #320]
   29938:	mov	x1, #0x1                   	// #1
   2993c:	mov	x0, #0x0                   	// #0
   29940:	add	x2, x2, x1
   29944:	str	x2, [x19, #320]
   29948:	b	29904 <__asan_backtrace_create_state@@Base+0x166c>
   2994c:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29950:	add	x24, x24, #0x6d8
   29954:	mov	x0, x24
   29958:	bl	64b0 <__asan_internal_strlen@plt>
   2995c:	cbz	x0, 2b1cc <__asan_backtrace_create_state@@Base+0x2f34>
   29960:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29964:	add	x24, x0, x24
   29968:	add	x22, x22, #0x6d9
   2996c:	mov	w23, #0x76                  	// #118
   29970:	ldr	x1, [x19, #256]
   29974:	b	29998 <__asan_backtrace_create_state@@Base+0x1700>
   29978:	mov	x0, x1
   2997c:	add	x1, x1, #0x1
   29980:	str	x1, [x19, #256]
   29984:	cmp	x24, x22
   29988:	strb	w23, [x19, x0]
   2998c:	strb	w23, [x19, #264]
   29990:	b.eq	2b1cc <__asan_backtrace_create_state@@Base+0x2f34>  // b.none
   29994:	ldrb	w23, [x22], #1
   29998:	cmp	x1, #0xff
   2999c:	b.ne	29978 <__asan_backtrace_create_state@@Base+0x16e0>  // b.any
   299a0:	ldp	x3, x2, [x19, #272]
   299a4:	strb	wzr, [x19, #255]
   299a8:	mov	x0, x19
   299ac:	blr	x3
   299b0:	ldr	x2, [x19, #320]
   299b4:	mov	x1, #0x1                   	// #1
   299b8:	mov	x0, #0x0                   	// #0
   299bc:	add	x2, x2, x1
   299c0:	str	x2, [x19, #320]
   299c4:	b	29980 <__asan_backtrace_create_state@@Base+0x16e8>
   299c8:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   299cc:	add	x24, x24, #0x6f0
   299d0:	mov	x0, x24
   299d4:	bl	64b0 <__asan_internal_strlen@plt>
   299d8:	cbz	x0, 2b1b0 <__asan_backtrace_create_state@@Base+0x2f18>
   299dc:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   299e0:	add	x24, x0, x24
   299e4:	add	x22, x22, #0x6f1
   299e8:	mov	w23, #0x63                  	// #99
   299ec:	ldr	x1, [x19, #256]
   299f0:	b	29a14 <__asan_backtrace_create_state@@Base+0x177c>
   299f4:	mov	x0, x1
   299f8:	add	x1, x1, #0x1
   299fc:	str	x1, [x19, #256]
   29a00:	cmp	x24, x22
   29a04:	strb	w23, [x19, x0]
   29a08:	strb	w23, [x19, #264]
   29a0c:	b.eq	2b1b0 <__asan_backtrace_create_state@@Base+0x2f18>  // b.none
   29a10:	ldrb	w23, [x22], #1
   29a14:	cmp	x1, #0xff
   29a18:	b.ne	299f4 <__asan_backtrace_create_state@@Base+0x175c>  // b.any
   29a1c:	ldp	x3, x2, [x19, #272]
   29a20:	strb	wzr, [x19, #255]
   29a24:	mov	x0, x19
   29a28:	blr	x3
   29a2c:	ldr	x2, [x19, #320]
   29a30:	mov	x1, #0x1                   	// #1
   29a34:	mov	x0, #0x0                   	// #0
   29a38:	add	x2, x2, x1
   29a3c:	str	x2, [x19, #320]
   29a40:	b	299fc <__asan_backtrace_create_state@@Base+0x1764>
   29a44:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29a48:	add	x24, x24, #0x710
   29a4c:	mov	x0, x24
   29a50:	bl	64b0 <__asan_internal_strlen@plt>
   29a54:	cbz	x0, 2b194 <__asan_backtrace_create_state@@Base+0x2efc>
   29a58:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29a5c:	add	x24, x0, x24
   29a60:	add	x22, x22, #0x711
   29a64:	mov	w23, #0x6a                  	// #106
   29a68:	ldr	x1, [x19, #256]
   29a6c:	b	29a90 <__asan_backtrace_create_state@@Base+0x17f8>
   29a70:	mov	x0, x1
   29a74:	add	x1, x1, #0x1
   29a78:	str	x1, [x19, #256]
   29a7c:	cmp	x24, x22
   29a80:	strb	w23, [x19, x0]
   29a84:	strb	w23, [x19, #264]
   29a88:	b.eq	2b194 <__asan_backtrace_create_state@@Base+0x2efc>  // b.none
   29a8c:	ldrb	w23, [x22], #1
   29a90:	cmp	x1, #0xff
   29a94:	b.ne	29a70 <__asan_backtrace_create_state@@Base+0x17d8>  // b.any
   29a98:	ldp	x3, x2, [x19, #272]
   29a9c:	strb	wzr, [x19, #255]
   29aa0:	mov	x0, x19
   29aa4:	blr	x3
   29aa8:	ldr	x2, [x19, #320]
   29aac:	mov	x1, #0x1                   	// #1
   29ab0:	mov	x0, #0x0                   	// #0
   29ab4:	add	x2, x2, x1
   29ab8:	str	x2, [x19, #320]
   29abc:	b	29a78 <__asan_backtrace_create_state@@Base+0x17e0>
   29ac0:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29ac4:	add	x24, x24, #0x720
   29ac8:	mov	x0, x24
   29acc:	bl	64b0 <__asan_internal_strlen@plt>
   29ad0:	cbz	x0, 2b178 <__asan_backtrace_create_state@@Base+0x2ee0>
   29ad4:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29ad8:	add	x24, x0, x24
   29adc:	add	x22, x22, #0x721
   29ae0:	mov	w23, #0x67                  	// #103
   29ae4:	ldr	x1, [x19, #256]
   29ae8:	b	29b0c <__asan_backtrace_create_state@@Base+0x1874>
   29aec:	mov	x0, x1
   29af0:	add	x1, x1, #0x1
   29af4:	str	x1, [x19, #256]
   29af8:	cmp	x24, x22
   29afc:	strb	w23, [x19, x0]
   29b00:	strb	w23, [x19, #264]
   29b04:	b.eq	2b178 <__asan_backtrace_create_state@@Base+0x2ee0>  // b.none
   29b08:	ldrb	w23, [x22], #1
   29b0c:	cmp	x1, #0xff
   29b10:	b.ne	29aec <__asan_backtrace_create_state@@Base+0x1854>  // b.any
   29b14:	ldp	x3, x2, [x19, #272]
   29b18:	strb	wzr, [x19, #255]
   29b1c:	mov	x0, x19
   29b20:	blr	x3
   29b24:	ldr	x2, [x19, #320]
   29b28:	mov	x1, #0x1                   	// #1
   29b2c:	mov	x0, #0x0                   	// #0
   29b30:	add	x2, x2, x1
   29b34:	str	x2, [x19, #320]
   29b38:	b	29af4 <__asan_backtrace_create_state@@Base+0x185c>
   29b3c:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29b40:	add	x24, x24, #0x738
   29b44:	mov	x0, x24
   29b48:	bl	64b0 <__asan_internal_strlen@plt>
   29b4c:	cbz	x0, 2b15c <__asan_backtrace_create_state@@Base+0x2ec4>
   29b50:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29b54:	add	x24, x0, x24
   29b58:	add	x22, x22, #0x739
   29b5c:	mov	w23, #0x54                  	// #84
   29b60:	ldr	x1, [x19, #256]
   29b64:	b	29b88 <__asan_backtrace_create_state@@Base+0x18f0>
   29b68:	mov	x0, x1
   29b6c:	add	x1, x1, #0x1
   29b70:	str	x1, [x19, #256]
   29b74:	cmp	x24, x22
   29b78:	strb	w23, [x19, x0]
   29b7c:	strb	w23, [x19, #264]
   29b80:	b.eq	2b15c <__asan_backtrace_create_state@@Base+0x2ec4>  // b.none
   29b84:	ldrb	w23, [x22], #1
   29b88:	cmp	x1, #0xff
   29b8c:	b.ne	29b68 <__asan_backtrace_create_state@@Base+0x18d0>  // b.any
   29b90:	ldp	x3, x2, [x19, #272]
   29b94:	strb	wzr, [x19, #255]
   29b98:	mov	x0, x19
   29b9c:	blr	x3
   29ba0:	ldr	x2, [x19, #320]
   29ba4:	mov	x1, #0x1                   	// #1
   29ba8:	mov	x0, #0x0                   	// #0
   29bac:	add	x2, x2, x1
   29bb0:	str	x2, [x19, #320]
   29bb4:	b	29b70 <__asan_backtrace_create_state@@Base+0x18d8>
   29bb8:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29bbc:	add	x24, x24, #0x750
   29bc0:	mov	x0, x24
   29bc4:	bl	64b0 <__asan_internal_strlen@plt>
   29bc8:	cbz	x0, 2ac5c <__asan_backtrace_create_state@@Base+0x29c4>
   29bcc:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29bd0:	add	x24, x0, x24
   29bd4:	add	x22, x22, #0x751
   29bd8:	mov	w23, #0x54                  	// #84
   29bdc:	ldr	x1, [x19, #256]
   29be0:	b	29c04 <__asan_backtrace_create_state@@Base+0x196c>
   29be4:	mov	x0, x1
   29be8:	add	x1, x1, #0x1
   29bec:	str	x1, [x19, #256]
   29bf0:	cmp	x24, x22
   29bf4:	strb	w23, [x19, x0]
   29bf8:	strb	w23, [x19, #264]
   29bfc:	b.eq	2ac5c <__asan_backtrace_create_state@@Base+0x29c4>  // b.none
   29c00:	ldrb	w23, [x22], #1
   29c04:	cmp	x1, #0xff
   29c08:	b.ne	29be4 <__asan_backtrace_create_state@@Base+0x194c>  // b.any
   29c0c:	ldp	x3, x2, [x19, #272]
   29c10:	strb	wzr, [x19, #255]
   29c14:	mov	x0, x19
   29c18:	blr	x3
   29c1c:	ldr	x2, [x19, #320]
   29c20:	mov	x1, #0x1                   	// #1
   29c24:	mov	x0, #0x0                   	// #0
   29c28:	add	x2, x2, x1
   29c2c:	str	x2, [x19, #320]
   29c30:	b	29bec <__asan_backtrace_create_state@@Base+0x1954>
   29c34:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29c38:	add	x24, x24, #0x770
   29c3c:	mov	x0, x24
   29c40:	bl	64b0 <__asan_internal_strlen@plt>
   29c44:	cbz	x0, 2abb4 <__asan_backtrace_create_state@@Base+0x291c>
   29c48:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29c4c:	add	x24, x0, x24
   29c50:	add	x22, x22, #0x771
   29c54:	mov	w23, #0x72                  	// #114
   29c58:	ldr	x1, [x19, #256]
   29c5c:	b	29c80 <__asan_backtrace_create_state@@Base+0x19e8>
   29c60:	mov	x0, x1
   29c64:	add	x1, x1, #0x1
   29c68:	str	x1, [x19, #256]
   29c6c:	cmp	x24, x22
   29c70:	strb	w23, [x19, x0]
   29c74:	strb	w23, [x19, #264]
   29c78:	b.eq	2abb4 <__asan_backtrace_create_state@@Base+0x291c>  // b.none
   29c7c:	ldrb	w23, [x22], #1
   29c80:	cmp	x1, #0xff
   29c84:	b.ne	29c60 <__asan_backtrace_create_state@@Base+0x19c8>  // b.any
   29c88:	ldp	x3, x2, [x19, #272]
   29c8c:	strb	wzr, [x19, #255]
   29c90:	mov	x0, x19
   29c94:	blr	x3
   29c98:	ldr	x2, [x19, #320]
   29c9c:	mov	x1, #0x1                   	// #1
   29ca0:	mov	x0, #0x0                   	// #0
   29ca4:	add	x2, x2, x1
   29ca8:	str	x2, [x19, #320]
   29cac:	b	29c68 <__asan_backtrace_create_state@@Base+0x19d0>
   29cb0:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29cb4:	add	x24, x24, #0x7b8
   29cb8:	mov	x0, x24
   29cbc:	bl	64b0 <__asan_internal_strlen@plt>
   29cc0:	cbz	x0, 2ac78 <__asan_backtrace_create_state@@Base+0x29e0>
   29cc4:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29cc8:	add	x24, x0, x24
   29ccc:	add	x22, x22, #0x7b9
   29cd0:	mov	w23, #0x6e                  	// #110
   29cd4:	ldr	x1, [x19, #256]
   29cd8:	b	29cfc <__asan_backtrace_create_state@@Base+0x1a64>
   29cdc:	mov	x0, x1
   29ce0:	add	x1, x1, #0x1
   29ce4:	str	x1, [x19, #256]
   29ce8:	cmp	x22, x24
   29cec:	strb	w23, [x19, x0]
   29cf0:	strb	w23, [x19, #264]
   29cf4:	b.eq	2ac78 <__asan_backtrace_create_state@@Base+0x29e0>  // b.none
   29cf8:	ldrb	w23, [x22], #1
   29cfc:	cmp	x1, #0xff
   29d00:	b.ne	29cdc <__asan_backtrace_create_state@@Base+0x1a44>  // b.any
   29d04:	ldp	x3, x2, [x19, #272]
   29d08:	strb	wzr, [x19, #255]
   29d0c:	mov	x0, x19
   29d10:	blr	x3
   29d14:	ldr	x2, [x19, #320]
   29d18:	mov	x1, #0x1                   	// #1
   29d1c:	mov	x0, #0x0                   	// #0
   29d20:	add	x2, x2, x1
   29d24:	str	x2, [x19, #320]
   29d28:	b	29ce4 <__asan_backtrace_create_state@@Base+0x1a4c>
   29d2c:	ldr	x1, [x20, #8]
   29d30:	mov	x0, x19
   29d34:	mov	w23, #0x0                   	// #0
   29d38:	bl	289f0 <__asan_backtrace_create_state@@Base+0x758>
   29d3c:	cbz	x0, 2c64c <__asan_backtrace_create_state@@Base+0x43b4>
   29d40:	stp	x25, x26, [sp, #64]
   29d44:	nop
   29d48:	ldr	w1, [x0]
   29d4c:	cmp	w1, #0x2f
   29d50:	b.ne	2b3ec <__asan_backtrace_create_state@@Base+0x3154>  // b.any
   29d54:	ldr	x1, [x0, #8]
   29d58:	cbz	x1, 2b3ec <__asan_backtrace_create_state@@Base+0x3154>
   29d5c:	ldr	x0, [x0, #16]
   29d60:	add	w23, w23, #0x1
   29d64:	cbnz	x0, 29d48 <__asan_backtrace_create_state@@Base+0x1ab0>
   29d68:	ldr	x25, [x20, #8]
   29d6c:	stp	x27, x28, [sp, #80]
   29d70:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29d74:	sub	w26, w23, #0x1
   29d78:	add	x24, x24, #0x7f0
   29d7c:	b	29d8c <__asan_backtrace_create_state@@Base+0x1af4>
   29d80:	add	w22, w22, #0x1
   29d84:	cmp	w22, w23
   29d88:	b.ge	2b370 <__asan_backtrace_create_state@@Base+0x30d8>  // b.tcont
   29d8c:	str	w22, [x19, #316]
   29d90:	mov	x2, x25
   29d94:	mov	w1, w21
   29d98:	mov	x0, x19
   29d9c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   29da0:	cmp	w26, w22
   29da4:	b.le	29d80 <__asan_backtrace_create_state@@Base+0x1ae8>
   29da8:	mov	x0, x24
   29dac:	bl	64b0 <__asan_internal_strlen@plt>
   29db0:	cbz	x0, 29d80 <__asan_backtrace_create_state@@Base+0x1ae8>
   29db4:	add	x27, x0, x24
   29db8:	mov	w20, #0x2c                  	// #44
   29dbc:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29dc0:	add	x28, x0, #0x7f1
   29dc4:	ldr	x1, [x19, #256]
   29dc8:	b	29dec <__asan_backtrace_create_state@@Base+0x1b54>
   29dcc:	mov	x0, x1
   29dd0:	add	x1, x1, #0x1
   29dd4:	str	x1, [x19, #256]
   29dd8:	cmp	x27, x28
   29ddc:	strb	w20, [x19, x0]
   29de0:	strb	w20, [x19, #264]
   29de4:	b.eq	29d80 <__asan_backtrace_create_state@@Base+0x1ae8>  // b.none
   29de8:	ldrb	w20, [x28], #1
   29dec:	cmp	x1, #0xff
   29df0:	b.ne	29dcc <__asan_backtrace_create_state@@Base+0x1b34>  // b.any
   29df4:	ldp	x4, x2, [x19, #272]
   29df8:	strb	wzr, [x19, #255]
   29dfc:	mov	x0, x19
   29e00:	blr	x4
   29e04:	ldr	x2, [x19, #320]
   29e08:	mov	x1, #0x1                   	// #1
   29e0c:	mov	x0, #0x0                   	// #0
   29e10:	add	x2, x2, x1
   29e14:	str	x2, [x19, #320]
   29e18:	b	29dd4 <__asan_backtrace_create_state@@Base+0x1b3c>
   29e1c:	ldr	x2, [x20, #8]
   29e20:	mov	w1, w21
   29e24:	mov	x0, x19
   29e28:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29e2c:	add	x24, x24, #0x5d8
   29e30:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   29e34:	mov	x0, x24
   29e38:	bl	64b0 <__asan_internal_strlen@plt>
   29e3c:	cbz	x0, 2b090 <__asan_backtrace_create_state@@Base+0x2df8>
   29e40:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29e44:	add	x24, x0, x24
   29e48:	add	x22, x22, #0x5d9
   29e4c:	mov	w23, #0x5b                  	// #91
   29e50:	ldr	x1, [x19, #256]
   29e54:	b	29e78 <__asan_backtrace_create_state@@Base+0x1be0>
   29e58:	mov	x0, x1
   29e5c:	add	x1, x1, #0x1
   29e60:	str	x1, [x19, #256]
   29e64:	cmp	x24, x22
   29e68:	strb	w23, [x19, x0]
   29e6c:	strb	w23, [x19, #264]
   29e70:	b.eq	2b090 <__asan_backtrace_create_state@@Base+0x2df8>  // b.none
   29e74:	ldrb	w23, [x22], #1
   29e78:	cmp	x1, #0xff
   29e7c:	b.ne	29e58 <__asan_backtrace_create_state@@Base+0x1bc0>  // b.any
   29e80:	ldp	x3, x2, [x19, #272]
   29e84:	strb	wzr, [x19, #255]
   29e88:	mov	x0, x19
   29e8c:	blr	x3
   29e90:	ldr	x2, [x19, #320]
   29e94:	mov	x1, #0x1                   	// #1
   29e98:	mov	x0, #0x0                   	// #0
   29e9c:	add	x2, x2, x1
   29ea0:	str	x2, [x19, #320]
   29ea4:	b	29e60 <__asan_backtrace_create_state@@Base+0x1bc8>
   29ea8:	ldr	x0, [x20, #16]
   29eac:	ldr	w0, [x0]
   29eb0:	cmp	w0, #0x39
   29eb4:	b.ne	28d00 <__asan_backtrace_create_state@@Base+0xa68>  // b.any
   29eb8:	ldr	x2, [x20, #8]
   29ebc:	ldr	x0, [x2, #8]
   29ec0:	ldr	x0, [x0]
   29ec4:	ldrb	w1, [x0, #1]
   29ec8:	cmp	w1, #0x63
   29ecc:	b.eq	2c1c8 <__asan_backtrace_create_state@@Base+0x3f30>  // b.none
   29ed0:	add	x3, x20, #0x10
   29ed4:	mov	w1, w21
   29ed8:	mov	x0, x19
   29edc:	bl	2e110 <__asan_backtrace_create_state@@Base+0x5e78>
   29ee0:	cbnz	w0, 2c4b4 <__asan_backtrace_create_state@@Base+0x421c>
   29ee4:	ldr	x0, [x20, #8]
   29ee8:	ldr	w1, [x0]
   29eec:	cmp	w1, #0x32
   29ef0:	b.eq	2c6f4 <__asan_backtrace_create_state@@Base+0x445c>  // b.none
   29ef4:	ldr	x0, [x0, #8]
   29ef8:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29efc:	add	x1, x22, #0x838
   29f00:	ldr	x0, [x0]
   29f04:	bl	67f0 <__asan_internal_strcmp@plt>
   29f08:	cbnz	w0, 2c6ec <__asan_backtrace_create_state@@Base+0x4454>
   29f0c:	ldr	x0, [x20, #16]
   29f10:	ldr	x1, [x0, #8]
   29f14:	ldr	w2, [x1]
   29f18:	cmp	w2, #0x3
   29f1c:	b.eq	2c804 <__asan_backtrace_create_state@@Base+0x456c>  // b.none
   29f20:	ldr	x2, [x0, #8]
   29f24:	mov	w1, w21
   29f28:	mov	x0, x19
   29f2c:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   29f30:	ldr	x0, [x20, #8]
   29f34:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   29f38:	add	x1, x1, #0x840
   29f3c:	ldr	x0, [x0, #8]
   29f40:	ldr	x0, [x0]
   29f44:	bl	67f0 <__asan_internal_strcmp@plt>
   29f48:	cbnz	w0, 2c688 <__asan_backtrace_create_state@@Base+0x43f0>
   29f4c:	ldr	x1, [x19, #256]
   29f50:	cmp	x1, #0xff
   29f54:	b.ne	29f7c <__asan_backtrace_create_state@@Base+0x1ce4>  // b.any
   29f58:	ldp	x3, x2, [x19, #272]
   29f5c:	strb	wzr, [x19, #255]
   29f60:	mov	x0, x19
   29f64:	blr	x3
   29f68:	str	xzr, [x19, #256]
   29f6c:	ldr	x0, [x19, #320]
   29f70:	mov	x1, #0x0                   	// #0
   29f74:	add	x0, x0, #0x1
   29f78:	str	x0, [x19, #320]
   29f7c:	add	x0, x1, #0x1
   29f80:	str	x0, [x19, #256]
   29f84:	mov	w0, #0x5b                  	// #91
   29f88:	strb	w0, [x19, x1]
   29f8c:	strb	w0, [x19, #264]
   29f90:	mov	w1, w21
   29f94:	mov	x0, x19
   29f98:	ldr	x2, [x20, #16]
   29f9c:	ldr	x2, [x2, #16]
   29fa0:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   29fa4:	ldr	x1, [x19, #256]
   29fa8:	cmp	x1, #0xff
   29fac:	b.ne	29fd4 <__asan_backtrace_create_state@@Base+0x1d3c>  // b.any
   29fb0:	ldp	x3, x2, [x19, #272]
   29fb4:	strb	wzr, [x19, #255]
   29fb8:	mov	x0, x19
   29fbc:	blr	x3
   29fc0:	str	xzr, [x19, #256]
   29fc4:	ldr	x0, [x19, #320]
   29fc8:	mov	x1, #0x0                   	// #0
   29fcc:	add	x0, x0, #0x1
   29fd0:	str	x0, [x19, #320]
   29fd4:	add	x0, x1, #0x1
   29fd8:	str	x0, [x19, #256]
   29fdc:	mov	w0, #0x5d                  	// #93
   29fe0:	strb	w0, [x19, x1]
   29fe4:	strb	w0, [x19, #264]
   29fe8:	ldr	x0, [x20, #8]
   29fec:	ldr	w1, [x0]
   29ff0:	cmp	w1, #0x32
   29ff4:	b.eq	2c6d0 <__asan_backtrace_create_state@@Base+0x4438>  // b.none
   29ff8:	ldp	x21, x22, [sp, #32]
   29ffc:	ldp	x23, x24, [sp, #48]
   2a000:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2a004:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a008:	add	x24, x24, #0x878
   2a00c:	mov	x0, x24
   2a010:	bl	64b0 <__asan_internal_strlen@plt>
   2a014:	cbz	x0, 2b31c <__asan_backtrace_create_state@@Base+0x3084>
   2a018:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a01c:	add	x24, x0, x24
   2a020:	add	x22, x22, #0x879
   2a024:	mov	w23, #0x6a                  	// #106
   2a028:	ldr	x1, [x19, #256]
   2a02c:	b	2a050 <__asan_backtrace_create_state@@Base+0x1db8>
   2a030:	mov	x0, x1
   2a034:	add	x1, x1, #0x1
   2a038:	str	x1, [x19, #256]
   2a03c:	cmp	x24, x22
   2a040:	strb	w23, [x19, x0]
   2a044:	strb	w23, [x19, #264]
   2a048:	b.eq	2b31c <__asan_backtrace_create_state@@Base+0x3084>  // b.none
   2a04c:	ldrb	w23, [x22], #1
   2a050:	cmp	x1, #0xff
   2a054:	b.ne	2a030 <__asan_backtrace_create_state@@Base+0x1d98>  // b.any
   2a058:	ldp	x3, x2, [x19, #272]
   2a05c:	strb	wzr, [x19, #255]
   2a060:	mov	x0, x19
   2a064:	blr	x3
   2a068:	ldr	x2, [x19, #320]
   2a06c:	mov	x1, #0x1                   	// #1
   2a070:	mov	x0, #0x0                   	// #0
   2a074:	add	x2, x2, x1
   2a078:	str	x2, [x19, #320]
   2a07c:	b	2a038 <__asan_backtrace_create_state@@Base+0x1da0>
   2a080:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a084:	add	x24, x24, #0x648
   2a088:	mov	x0, x24
   2a08c:	bl	64b0 <__asan_internal_strlen@plt>
   2a090:	cbz	x0, 2b300 <__asan_backtrace_create_state@@Base+0x3068>
   2a094:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a098:	add	x24, x0, x24
   2a09c:	add	x22, x22, #0x649
   2a0a0:	mov	w23, #0x56                  	// #86
   2a0a4:	ldr	x1, [x19, #256]
   2a0a8:	b	2a0cc <__asan_backtrace_create_state@@Base+0x1e34>
   2a0ac:	mov	x0, x1
   2a0b0:	add	x1, x1, #0x1
   2a0b4:	str	x1, [x19, #256]
   2a0b8:	cmp	x24, x22
   2a0bc:	strb	w23, [x19, x0]
   2a0c0:	strb	w23, [x19, #264]
   2a0c4:	b.eq	2b300 <__asan_backtrace_create_state@@Base+0x3068>  // b.none
   2a0c8:	ldrb	w23, [x22], #1
   2a0cc:	cmp	x1, #0xff
   2a0d0:	b.ne	2a0ac <__asan_backtrace_create_state@@Base+0x1e14>  // b.any
   2a0d4:	ldp	x3, x2, [x19, #272]
   2a0d8:	strb	wzr, [x19, #255]
   2a0dc:	mov	x0, x19
   2a0e0:	blr	x3
   2a0e4:	ldr	x2, [x19, #320]
   2a0e8:	mov	x1, #0x1                   	// #1
   2a0ec:	mov	x0, #0x0                   	// #0
   2a0f0:	add	x2, x2, x1
   2a0f4:	str	x2, [x19, #320]
   2a0f8:	b	2a0b4 <__asan_backtrace_create_state@@Base+0x1e1c>
   2a0fc:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a100:	add	x24, x24, #0x658
   2a104:	mov	x0, x24
   2a108:	bl	64b0 <__asan_internal_strlen@plt>
   2a10c:	cbz	x0, 2b258 <__asan_backtrace_create_state@@Base+0x2fc0>
   2a110:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a114:	add	x24, x0, x24
   2a118:	add	x22, x22, #0x659
   2a11c:	mov	w23, #0x63                  	// #99
   2a120:	ldr	x1, [x19, #256]
   2a124:	b	2a148 <__asan_backtrace_create_state@@Base+0x1eb0>
   2a128:	mov	x0, x1
   2a12c:	add	x1, x1, #0x1
   2a130:	str	x1, [x19, #256]
   2a134:	cmp	x24, x22
   2a138:	strb	w23, [x19, x0]
   2a13c:	strb	w23, [x19, #264]
   2a140:	b.eq	2b258 <__asan_backtrace_create_state@@Base+0x2fc0>  // b.none
   2a144:	ldrb	w23, [x22], #1
   2a148:	cmp	x1, #0xff
   2a14c:	b.ne	2a128 <__asan_backtrace_create_state@@Base+0x1e90>  // b.any
   2a150:	ldp	x3, x2, [x19, #272]
   2a154:	strb	wzr, [x19, #255]
   2a158:	mov	x0, x19
   2a15c:	blr	x3
   2a160:	ldr	x2, [x19, #320]
   2a164:	mov	x1, #0x1                   	// #1
   2a168:	mov	x0, #0x0                   	// #0
   2a16c:	add	x2, x2, x1
   2a170:	str	x2, [x19, #320]
   2a174:	b	2a130 <__asan_backtrace_create_state@@Base+0x1e98>
   2a178:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a17c:	add	x24, x24, #0x680
   2a180:	mov	x0, x24
   2a184:	bl	64b0 <__asan_internal_strlen@plt>
   2a188:	cbz	x0, 2b220 <__asan_backtrace_create_state@@Base+0x2f88>
   2a18c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a190:	add	x24, x0, x24
   2a194:	add	x22, x22, #0x681
   2a198:	mov	w23, #0x74                  	// #116
   2a19c:	ldr	x1, [x19, #256]
   2a1a0:	b	2a1c4 <__asan_backtrace_create_state@@Base+0x1f2c>
   2a1a4:	mov	x0, x1
   2a1a8:	add	x1, x1, #0x1
   2a1ac:	str	x1, [x19, #256]
   2a1b0:	cmp	x24, x22
   2a1b4:	strb	w23, [x19, x0]
   2a1b8:	strb	w23, [x19, #264]
   2a1bc:	b.eq	2b220 <__asan_backtrace_create_state@@Base+0x2f88>  // b.none
   2a1c0:	ldrb	w23, [x22], #1
   2a1c4:	cmp	x1, #0xff
   2a1c8:	b.ne	2a1a4 <__asan_backtrace_create_state@@Base+0x1f0c>  // b.any
   2a1cc:	ldp	x3, x2, [x19, #272]
   2a1d0:	strb	wzr, [x19, #255]
   2a1d4:	mov	x0, x19
   2a1d8:	blr	x3
   2a1dc:	ldr	x2, [x19, #320]
   2a1e0:	mov	x1, #0x1                   	// #1
   2a1e4:	mov	x0, #0x0                   	// #0
   2a1e8:	add	x2, x2, x1
   2a1ec:	str	x2, [x19, #320]
   2a1f0:	b	2a1ac <__asan_backtrace_create_state@@Base+0x1f14>
   2a1f4:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a1f8:	add	x24, x24, #0x690
   2a1fc:	mov	x0, x24
   2a200:	bl	64b0 <__asan_internal_strlen@plt>
   2a204:	cbz	x0, 2b204 <__asan_backtrace_create_state@@Base+0x2f6c>
   2a208:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a20c:	add	x24, x0, x24
   2a210:	add	x22, x22, #0x691
   2a214:	mov	w23, #0x74                  	// #116
   2a218:	ldr	x1, [x19, #256]
   2a21c:	b	2a240 <__asan_backtrace_create_state@@Base+0x1fa8>
   2a220:	mov	x0, x1
   2a224:	add	x1, x1, #0x1
   2a228:	str	x1, [x19, #256]
   2a22c:	cmp	x24, x22
   2a230:	strb	w23, [x19, x0]
   2a234:	strb	w23, [x19, #264]
   2a238:	b.eq	2b204 <__asan_backtrace_create_state@@Base+0x2f6c>  // b.none
   2a23c:	ldrb	w23, [x22], #1
   2a240:	cmp	x1, #0xff
   2a244:	b.ne	2a220 <__asan_backtrace_create_state@@Base+0x1f88>  // b.any
   2a248:	ldp	x3, x2, [x19, #272]
   2a24c:	strb	wzr, [x19, #255]
   2a250:	mov	x0, x19
   2a254:	blr	x3
   2a258:	ldr	x2, [x19, #320]
   2a25c:	mov	x1, #0x1                   	// #1
   2a260:	mov	x0, #0x0                   	// #0
   2a264:	add	x2, x2, x1
   2a268:	str	x2, [x19, #320]
   2a26c:	b	2a228 <__asan_backtrace_create_state@@Base+0x1f90>
   2a270:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a274:	add	x24, x24, #0x6a8
   2a278:	mov	x0, x24
   2a27c:	bl	64b0 <__asan_internal_strlen@plt>
   2a280:	cbz	x0, 2b23c <__asan_backtrace_create_state@@Base+0x2fa4>
   2a284:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a288:	add	x24, x0, x24
   2a28c:	add	x22, x22, #0x6a9
   2a290:	mov	w23, #0x74                  	// #116
   2a294:	ldr	x1, [x19, #256]
   2a298:	b	2a2bc <__asan_backtrace_create_state@@Base+0x2024>
   2a29c:	mov	x0, x1
   2a2a0:	add	x1, x1, #0x1
   2a2a4:	str	x1, [x19, #256]
   2a2a8:	cmp	x24, x22
   2a2ac:	strb	w23, [x19, x0]
   2a2b0:	strb	w23, [x19, #264]
   2a2b4:	b.eq	2b23c <__asan_backtrace_create_state@@Base+0x2fa4>  // b.none
   2a2b8:	ldrb	w23, [x22], #1
   2a2bc:	cmp	x1, #0xff
   2a2c0:	b.ne	2a29c <__asan_backtrace_create_state@@Base+0x2004>  // b.any
   2a2c4:	ldp	x3, x2, [x19, #272]
   2a2c8:	strb	wzr, [x19, #255]
   2a2cc:	mov	x0, x19
   2a2d0:	blr	x3
   2a2d4:	ldr	x2, [x19, #320]
   2a2d8:	mov	x1, #0x1                   	// #1
   2a2dc:	mov	x0, #0x0                   	// #0
   2a2e0:	add	x2, x2, x1
   2a2e4:	str	x2, [x19, #320]
   2a2e8:	b	2a2a4 <__asan_backtrace_create_state@@Base+0x200c>
   2a2ec:	stp	x25, x26, [sp, #64]
   2a2f0:	ldr	x25, [x20, #8]
   2a2f4:	ldr	x22, [x19, #296]
   2a2f8:	str	xzr, [x19, #296]
   2a2fc:	cbz	x25, 2c1b0 <__asan_backtrace_create_state@@Base+0x3f18>
   2a300:	add	x23, sp, #0x70
   2a304:	mov	x2, #0x1f                  	// #31
   2a308:	ldr	x6, [x19, #288]
   2a30c:	mov	x3, x23
   2a310:	mov	x0, #0x0                   	// #0
   2a314:	mov	w24, #0x0                   	// #0
   2a318:	mov	x1, #0x1                   	// #1
   2a31c:	movk	x2, #0x1a, lsl #48
   2a320:	str	wzr, [x3, #16]
   2a324:	add	w24, w24, #0x1
   2a328:	str	x0, [x3]
   2a32c:	mov	x4, x3
   2a330:	ldr	w5, [x25]
   2a334:	str	x25, [x3, #8]
   2a338:	str	x6, [x3, #24]
   2a33c:	sub	w0, w5, #0x1c
   2a340:	cmp	w0, #0x34
   2a344:	b.hi	2a354 <__asan_backtrace_create_state@@Base+0x20bc>  // b.pmore
   2a348:	lsl	x0, x1, x0
   2a34c:	tst	x0, x2
   2a350:	b.ne	2b3d0 <__asan_backtrace_create_state@@Base+0x3138>  // b.any
   2a354:	str	x3, [x19, #296]
   2a358:	cmp	w5, #0x2
   2a35c:	b.eq	2c090 <__asan_backtrace_create_state@@Base+0x3df8>  // b.none
   2a360:	cmp	w5, #0x4
   2a364:	b.ne	2a374 <__asan_backtrace_create_state@@Base+0x20dc>  // b.any
   2a368:	add	x0, sp, #0x60
   2a36c:	stp	x6, x25, [sp, #96]
   2a370:	str	x0, [x19, #288]
   2a374:	ldr	x2, [x20, #16]
   2a378:	mov	x0, x19
   2a37c:	mov	w1, w21
   2a380:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2a384:	ldr	w0, [x25]
   2a388:	cmp	w0, #0x4
   2a38c:	b.ne	2a398 <__asan_backtrace_create_state@@Base+0x2100>  // b.any
   2a390:	ldr	x0, [sp, #96]
   2a394:	str	x0, [x19, #288]
   2a398:	sub	w20, w24, #0x1
   2a39c:	mov	w24, #0x20                  	// #32
   2a3a0:	ubfiz	x0, x20, #5, #32
   2a3a4:	add	x23, x23, x0
   2a3a8:	b	2a3b0 <__asan_backtrace_create_state@@Base+0x2118>
   2a3ac:	sub	w20, w20, #0x1
   2a3b0:	ldr	w0, [x23, #16]
   2a3b4:	cbnz	w0, 2a40c <__asan_backtrace_create_state@@Base+0x2174>
   2a3b8:	ldr	x0, [x19, #256]
   2a3bc:	add	x1, x0, #0x1
   2a3c0:	cmp	x0, #0xff
   2a3c4:	b.ne	2a3f0 <__asan_backtrace_create_state@@Base+0x2158>  // b.any
   2a3c8:	ldp	x3, x2, [x19, #272]
   2a3cc:	strb	wzr, [x19, #255]
   2a3d0:	mov	x1, x0
   2a3d4:	mov	x0, x19
   2a3d8:	blr	x3
   2a3dc:	ldr	x2, [x19, #320]
   2a3e0:	mov	x1, #0x1                   	// #1
   2a3e4:	mov	x0, #0x0                   	// #0
   2a3e8:	add	x2, x2, x1
   2a3ec:	str	x2, [x19, #320]
   2a3f0:	str	x1, [x19, #256]
   2a3f4:	mov	w1, w21
   2a3f8:	ldr	x2, [x23, #8]
   2a3fc:	strb	w24, [x19, x0]
   2a400:	strb	w24, [x19, #264]
   2a404:	mov	x0, x19
   2a408:	bl	2cd40 <__asan_backtrace_create_state@@Base+0x4aa8>
   2a40c:	sub	x23, x23, #0x20
   2a410:	cbnz	w20, 2a3ac <__asan_backtrace_create_state@@Base+0x2114>
   2a414:	ldp	x23, x24, [sp, #48]
   2a418:	ldp	x25, x26, [sp, #64]
   2a41c:	str	x22, [x19, #296]
   2a420:	ldp	x21, x22, [sp, #32]
   2a424:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2a428:	ldr	x22, [x20, #8]
   2a42c:	ldr	x24, [x19, #296]
   2a430:	str	xzr, [x19, #296]
   2a434:	ldr	x23, [x19, #368]
   2a438:	str	x20, [x19, #368]
   2a43c:	tbz	w21, #2, 2a454 <__asan_backtrace_create_state@@Base+0x21bc>
   2a440:	ldr	w0, [x22]
   2a444:	cbnz	w0, 2a454 <__asan_backtrace_create_state@@Base+0x21bc>
   2a448:	ldr	w0, [x22, #16]
   2a44c:	cmp	w0, #0x6
   2a450:	b.eq	2c7a0 <__asan_backtrace_create_state@@Base+0x4508>  // b.none
   2a454:	mov	x0, x19
   2a458:	mov	x2, x22
   2a45c:	mov	w1, w21
   2a460:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2a464:	ldrb	w0, [x19, #264]
   2a468:	cmp	w0, #0x3c
   2a46c:	b.eq	2bd38 <__asan_backtrace_create_state@@Base+0x3aa0>  // b.none
   2a470:	ldr	x1, [x19, #256]
   2a474:	cmp	x1, #0xff
   2a478:	b.eq	2aac4 <__asan_backtrace_create_state@@Base+0x282c>  // b.none
   2a47c:	add	x0, x1, #0x1
   2a480:	str	x0, [x19, #256]
   2a484:	mov	w0, #0x3c                  	// #60
   2a488:	strb	w0, [x19, x1]
   2a48c:	mov	w1, w21
   2a490:	strb	w0, [x19, #264]
   2a494:	mov	x0, x19
   2a498:	ldr	x2, [x20, #16]
   2a49c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2a4a0:	ldrb	w0, [x19, #264]
   2a4a4:	cmp	w0, #0x3e
   2a4a8:	b.eq	2bd14 <__asan_backtrace_create_state@@Base+0x3a7c>  // b.none
   2a4ac:	ldr	x1, [x19, #256]
   2a4b0:	cmp	x1, #0xff
   2a4b4:	b.eq	2aa9c <__asan_backtrace_create_state@@Base+0x2804>  // b.none
   2a4b8:	add	x0, x1, #0x1
   2a4bc:	str	x0, [x19, #256]
   2a4c0:	mov	w0, #0x3e                  	// #62
   2a4c4:	strb	w0, [x19, x1]
   2a4c8:	strb	w0, [x19, #264]
   2a4cc:	ldp	x21, x22, [sp, #32]
   2a4d0:	str	x24, [x19, #296]
   2a4d4:	str	x23, [x19, #368]
   2a4d8:	ldp	x23, x24, [sp, #48]
   2a4dc:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2a4e0:	ldr	w0, [x19, #312]
   2a4e4:	cbz	w0, 2b7a8 <__asan_backtrace_create_state@@Base+0x3510>
   2a4e8:	adrp	x23, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a4ec:	add	x23, x23, #0x610
   2a4f0:	adrp	x21, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a4f4:	add	x23, x23, #0x5
   2a4f8:	add	x21, x21, #0x611
   2a4fc:	mov	w22, #0x61                  	// #97
   2a500:	ldr	x1, [x19, #256]
   2a504:	b	2a528 <__asan_backtrace_create_state@@Base+0x2290>
   2a508:	mov	x0, x1
   2a50c:	add	x1, x1, #0x1
   2a510:	str	x1, [x19, #256]
   2a514:	cmp	x23, x21
   2a518:	strb	w22, [x19, x0]
   2a51c:	strb	w22, [x19, #264]
   2a520:	b.eq	2b404 <__asan_backtrace_create_state@@Base+0x316c>  // b.none
   2a524:	ldrb	w22, [x21], #1
   2a528:	cmp	x1, #0xff
   2a52c:	b.ne	2a508 <__asan_backtrace_create_state@@Base+0x2270>  // b.any
   2a530:	ldp	x3, x2, [x19, #272]
   2a534:	strb	wzr, [x19, #255]
   2a538:	mov	x0, x19
   2a53c:	blr	x3
   2a540:	ldr	x2, [x19, #320]
   2a544:	mov	x1, #0x1                   	// #1
   2a548:	mov	x0, #0x0                   	// #0
   2a54c:	add	x2, x2, x1
   2a550:	str	x2, [x19, #320]
   2a554:	b	2a510 <__asan_backtrace_create_state@@Base+0x2278>
   2a558:	ldr	x1, [x19, #256]
   2a55c:	add	x0, x1, #0x1
   2a560:	cmp	x1, #0xff
   2a564:	b.ne	2a58c <__asan_backtrace_create_state@@Base+0x22f4>  // b.any
   2a568:	ldp	x3, x2, [x19, #272]
   2a56c:	strb	wzr, [x19, #255]
   2a570:	mov	x0, x19
   2a574:	blr	x3
   2a578:	ldr	x2, [x19, #320]
   2a57c:	mov	x0, #0x1                   	// #1
   2a580:	mov	x1, #0x0                   	// #0
   2a584:	add	x2, x2, x0
   2a588:	str	x2, [x19, #320]
   2a58c:	str	x0, [x19, #256]
   2a590:	mov	w0, #0x7e                  	// #126
   2a594:	strb	w0, [x19, x1]
   2a598:	mov	w1, w21
   2a59c:	strb	w0, [x19, #264]
   2a5a0:	mov	x0, x19
   2a5a4:	ldr	x2, [x20, #16]
   2a5a8:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2a5ac:	ldp	x21, x22, [sp, #32]
   2a5b0:	ldp	x23, x24, [sp, #48]
   2a5b4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2a5b8:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a5bc:	add	x24, x24, #0x638
   2a5c0:	mov	x0, x24
   2a5c4:	bl	64b0 <__asan_internal_strlen@plt>
   2a5c8:	cbz	x0, 2b140 <__asan_backtrace_create_state@@Base+0x2ea8>
   2a5cc:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a5d0:	add	x24, x0, x24
   2a5d4:	add	x22, x22, #0x639
   2a5d8:	mov	w23, #0x76                  	// #118
   2a5dc:	ldr	x1, [x19, #256]
   2a5e0:	b	2a604 <__asan_backtrace_create_state@@Base+0x236c>
   2a5e4:	mov	x0, x1
   2a5e8:	add	x1, x1, #0x1
   2a5ec:	str	x1, [x19, #256]
   2a5f0:	cmp	x24, x22
   2a5f4:	strb	w23, [x19, x0]
   2a5f8:	strb	w23, [x19, #264]
   2a5fc:	b.eq	2b140 <__asan_backtrace_create_state@@Base+0x2ea8>  // b.none
   2a600:	ldrb	w23, [x22], #1
   2a604:	cmp	x1, #0xff
   2a608:	b.ne	2a5e4 <__asan_backtrace_create_state@@Base+0x234c>  // b.any
   2a60c:	ldp	x3, x2, [x19, #272]
   2a610:	strb	wzr, [x19, #255]
   2a614:	mov	x0, x19
   2a618:	blr	x3
   2a61c:	ldr	x2, [x19, #320]
   2a620:	mov	x1, #0x1                   	// #1
   2a624:	mov	x0, #0x0                   	// #0
   2a628:	add	x2, x2, x1
   2a62c:	str	x2, [x19, #320]
   2a630:	b	2a5ec <__asan_backtrace_create_state@@Base+0x2354>
   2a634:	ldrsw	x22, [x20, #16]
   2a638:	ldr	x20, [x20, #8]
   2a63c:	tbnz	w21, #2, 2b644 <__asan_backtrace_create_state@@Base+0x33ac>
   2a640:	cbz	x22, 2c878 <__asan_backtrace_create_state@@Base+0x45e0>
   2a644:	add	x22, x20, x22
   2a648:	ldr	x1, [x19, #256]
   2a64c:	b	2a670 <__asan_backtrace_create_state@@Base+0x23d8>
   2a650:	mov	x0, x1
   2a654:	add	x1, x1, #0x1
   2a658:	str	x1, [x19, #256]
   2a65c:	add	x20, x20, #0x1
   2a660:	strb	w21, [x19, x0]
   2a664:	cmp	x20, x22
   2a668:	strb	w21, [x19, #264]
   2a66c:	b.eq	2b8b0 <__asan_backtrace_create_state@@Base+0x3618>  // b.none
   2a670:	ldrb	w21, [x20]
   2a674:	cmp	x1, #0xff
   2a678:	b.ne	2a650 <__asan_backtrace_create_state@@Base+0x23b8>  // b.any
   2a67c:	ldp	x3, x2, [x19, #272]
   2a680:	strb	wzr, [x19, #255]
   2a684:	mov	x0, x19
   2a688:	blr	x3
   2a68c:	ldr	x2, [x19, #320]
   2a690:	mov	x1, #0x1                   	// #1
   2a694:	mov	x0, #0x0                   	// #0
   2a698:	add	x2, x2, x1
   2a69c:	str	x2, [x19, #320]
   2a6a0:	b	2a658 <__asan_backtrace_create_state@@Base+0x23c0>
   2a6a4:	ldr	x0, [x20, #8]
   2a6a8:	tbnz	w21, #2, 2b5d8 <__asan_backtrace_create_state@@Base+0x3340>
   2a6ac:	ldrsw	x22, [x0, #8]
   2a6b0:	ldr	x20, [x0]
   2a6b4:	cbz	x22, 2c86c <__asan_backtrace_create_state@@Base+0x45d4>
   2a6b8:	add	x22, x20, x22
   2a6bc:	ldr	x1, [x19, #256]
   2a6c0:	b	2a6e4 <__asan_backtrace_create_state@@Base+0x244c>
   2a6c4:	mov	x0, x1
   2a6c8:	add	x1, x1, #0x1
   2a6cc:	str	x1, [x19, #256]
   2a6d0:	add	x20, x20, #0x1
   2a6d4:	strb	w21, [x19, x0]
   2a6d8:	cmp	x22, x20
   2a6dc:	strb	w21, [x19, #264]
   2a6e0:	b.eq	2b8c8 <__asan_backtrace_create_state@@Base+0x3630>  // b.none
   2a6e4:	ldrb	w21, [x20]
   2a6e8:	cmp	x1, #0xff
   2a6ec:	b.ne	2a6c4 <__asan_backtrace_create_state@@Base+0x242c>  // b.any
   2a6f0:	ldp	x3, x2, [x19, #272]
   2a6f4:	strb	wzr, [x19, #255]
   2a6f8:	mov	x0, x19
   2a6fc:	blr	x3
   2a700:	ldr	x2, [x19, #320]
   2a704:	mov	x1, #0x1                   	// #1
   2a708:	mov	x0, #0x0                   	// #0
   2a70c:	add	x2, x2, x1
   2a710:	str	x2, [x19, #320]
   2a714:	b	2a6cc <__asan_backtrace_create_state@@Base+0x2434>
   2a718:	ldr	x2, [x20, #8]
   2a71c:	mov	w1, w21
   2a720:	mov	x0, x19
   2a724:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2a728:	ldp	x21, x22, [sp, #32]
   2a72c:	ldp	x23, x24, [sp, #48]
   2a730:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2a734:	ldp	x23, x20, [x20, #8]
   2a738:	mov	x22, #0x0                   	// #0
   2a73c:	ldr	w0, [x23]
   2a740:	cmp	w0, #0x32
   2a744:	b.eq	2bdfc <__asan_backtrace_create_state@@Base+0x3b64>  // b.none
   2a748:	cmp	w0, #0x34
   2a74c:	b.eq	2b808 <__asan_backtrace_create_state@@Base+0x3570>  // b.none
   2a750:	mov	x2, x23
   2a754:	mov	w1, w21
   2a758:	mov	x0, x19
   2a75c:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2a760:	cbz	x22, 2b3b4 <__asan_backtrace_create_state@@Base+0x311c>
   2a764:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a768:	mov	x0, x22
   2a76c:	add	x1, x1, #0x828
   2a770:	bl	67f0 <__asan_internal_strcmp@plt>
   2a774:	cbz	w0, 2c41c <__asan_backtrace_create_state@@Base+0x4184>
   2a778:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a77c:	mov	x0, x22
   2a780:	add	x1, x1, #0xdc0
   2a784:	bl	67f0 <__asan_internal_strcmp@plt>
   2a788:	cbnz	w0, 2b3b4 <__asan_backtrace_create_state@@Base+0x311c>
   2a78c:	ldr	x1, [x19, #256]
   2a790:	cmp	x1, #0xff
   2a794:	b.ne	2a7b8 <__asan_backtrace_create_state@@Base+0x2520>  // b.any
   2a798:	ldp	x3, x2, [x19, #272]
   2a79c:	strb	wzr, [x19, #255]
   2a7a0:	mov	x0, x19
   2a7a4:	blr	x3
   2a7a8:	ldr	x0, [x19, #320]
   2a7ac:	mov	x1, #0x0                   	// #0
   2a7b0:	add	x0, x0, #0x1
   2a7b4:	str	x0, [x19, #320]
   2a7b8:	add	x0, x1, #0x1
   2a7bc:	str	x0, [x19, #256]
   2a7c0:	mov	w0, #0x28                  	// #40
   2a7c4:	strb	w0, [x19, x1]
   2a7c8:	strb	w0, [x19, #264]
   2a7cc:	mov	w1, w21
   2a7d0:	mov	x2, x20
   2a7d4:	mov	x0, x19
   2a7d8:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2a7dc:	ldr	x1, [x19, #256]
   2a7e0:	cmp	x1, #0xff
   2a7e4:	b.ne	2a808 <__asan_backtrace_create_state@@Base+0x2570>  // b.any
   2a7e8:	ldp	x3, x2, [x19, #272]
   2a7ec:	strb	wzr, [x19, #255]
   2a7f0:	mov	x0, x19
   2a7f4:	blr	x3
   2a7f8:	ldr	x0, [x19, #320]
   2a7fc:	mov	x1, #0x0                   	// #0
   2a800:	add	x0, x0, #0x1
   2a804:	str	x0, [x19, #320]
   2a808:	add	x0, x1, #0x1
   2a80c:	str	x0, [x19, #256]
   2a810:	mov	w0, #0x29                  	// #41
   2a814:	strb	w0, [x19, x1]
   2a818:	strb	w0, [x19, #264]
   2a81c:	ldp	x21, x22, [sp, #32]
   2a820:	ldp	x23, x24, [sp, #48]
   2a824:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2a828:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a82c:	add	x24, x24, #0x808
   2a830:	mov	x0, x24
   2a834:	bl	64b0 <__asan_internal_strlen@plt>
   2a838:	cbz	x0, 2b0f0 <__asan_backtrace_create_state@@Base+0x2e58>
   2a83c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a840:	add	x24, x0, x24
   2a844:	add	x22, x22, #0x809
   2a848:	mov	w23, #0x6f                  	// #111
   2a84c:	ldr	x1, [x19, #256]
   2a850:	b	2a874 <__asan_backtrace_create_state@@Base+0x25dc>
   2a854:	mov	x0, x1
   2a858:	add	x1, x1, #0x1
   2a85c:	str	x1, [x19, #256]
   2a860:	cmp	x24, x22
   2a864:	strb	w23, [x19, x0]
   2a868:	strb	w23, [x19, #264]
   2a86c:	b.eq	2b0f0 <__asan_backtrace_create_state@@Base+0x2e58>  // b.none
   2a870:	ldrb	w23, [x22], #1
   2a874:	cmp	x1, #0xff
   2a878:	b.ne	2a854 <__asan_backtrace_create_state@@Base+0x25bc>  // b.any
   2a87c:	ldp	x3, x2, [x19, #272]
   2a880:	strb	wzr, [x19, #255]
   2a884:	mov	x0, x19
   2a888:	blr	x3
   2a88c:	ldr	x2, [x19, #320]
   2a890:	mov	x1, #0x1                   	// #1
   2a894:	mov	x0, #0x0                   	// #0
   2a898:	add	x2, x2, x1
   2a89c:	str	x2, [x19, #320]
   2a8a0:	b	2a85c <__asan_backtrace_create_state@@Base+0x25c4>
   2a8a4:	ldr	x1, [x19, #256]
   2a8a8:	ldrb	w20, [x20, #8]
   2a8ac:	add	x0, x1, #0x1
   2a8b0:	cmp	x1, #0xff
   2a8b4:	b.ne	2a8dc <__asan_backtrace_create_state@@Base+0x2644>  // b.any
   2a8b8:	ldp	x3, x2, [x19, #272]
   2a8bc:	strb	wzr, [x19, #255]
   2a8c0:	mov	x0, x19
   2a8c4:	blr	x3
   2a8c8:	ldr	x2, [x19, #320]
   2a8cc:	mov	x0, #0x1                   	// #1
   2a8d0:	mov	x1, #0x0                   	// #0
   2a8d4:	add	x2, x2, x0
   2a8d8:	str	x2, [x19, #320]
   2a8dc:	str	x0, [x19, #256]
   2a8e0:	strb	w20, [x19, x1]
   2a8e4:	strb	w20, [x19, #264]
   2a8e8:	ldp	x21, x22, [sp, #32]
   2a8ec:	ldp	x23, x24, [sp, #48]
   2a8f0:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2a8f4:	ldr	w2, [x20, #8]
   2a8f8:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   2a8fc:	add	x1, x1, #0xa90
   2a900:	add	x20, sp, #0x70
   2a904:	mov	x0, x20
   2a908:	bl	65f0 <sprintf@plt>
   2a90c:	mov	x0, x20
   2a910:	bl	64b0 <__asan_internal_strlen@plt>
   2a914:	cbz	x0, 2c5dc <__asan_backtrace_create_state@@Base+0x4344>
   2a918:	add	x22, x20, x0
   2a91c:	ldr	x1, [x19, #256]
   2a920:	b	2a944 <__asan_backtrace_create_state@@Base+0x26ac>
   2a924:	mov	x0, x1
   2a928:	add	x1, x1, #0x1
   2a92c:	str	x1, [x19, #256]
   2a930:	add	x20, x20, #0x1
   2a934:	strb	w21, [x19, x0]
   2a938:	cmp	x22, x20
   2a93c:	strb	w21, [x19, #264]
   2a940:	b.eq	2b358 <__asan_backtrace_create_state@@Base+0x30c0>  // b.none
   2a944:	ldrb	w21, [x20]
   2a948:	cmp	x1, #0xff
   2a94c:	b.ne	2a924 <__asan_backtrace_create_state@@Base+0x268c>  // b.any
   2a950:	ldp	x3, x2, [x19, #272]
   2a954:	strb	wzr, [x19, #255]
   2a958:	mov	x0, x19
   2a95c:	blr	x3
   2a960:	ldr	x2, [x19, #320]
   2a964:	mov	x1, #0x1                   	// #1
   2a968:	mov	x0, #0x0                   	// #0
   2a96c:	add	x2, x2, x1
   2a970:	str	x2, [x19, #320]
   2a974:	b	2a92c <__asan_backtrace_create_state@@Base+0x2694>
   2a978:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a97c:	add	x24, x24, #0x888
   2a980:	mov	x0, x24
   2a984:	bl	64b0 <__asan_internal_strlen@plt>
   2a988:	cbz	x0, 2b030 <__asan_backtrace_create_state@@Base+0x2d98>
   2a98c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a990:	add	x24, x0, x24
   2a994:	add	x22, x22, #0x889
   2a998:	mov	w23, #0x64                  	// #100
   2a99c:	ldr	x1, [x19, #256]
   2a9a0:	b	2a9c4 <__asan_backtrace_create_state@@Base+0x272c>
   2a9a4:	mov	x0, x1
   2a9a8:	add	x1, x1, #0x1
   2a9ac:	str	x1, [x19, #256]
   2a9b0:	cmp	x24, x22
   2a9b4:	strb	w23, [x19, x0]
   2a9b8:	strb	w23, [x19, #264]
   2a9bc:	b.eq	2b030 <__asan_backtrace_create_state@@Base+0x2d98>  // b.none
   2a9c0:	ldrb	w23, [x22], #1
   2a9c4:	cmp	x1, #0xff
   2a9c8:	b.ne	2a9a4 <__asan_backtrace_create_state@@Base+0x270c>  // b.any
   2a9cc:	ldp	x3, x2, [x19, #272]
   2a9d0:	strb	wzr, [x19, #255]
   2a9d4:	mov	x0, x19
   2a9d8:	blr	x3
   2a9dc:	ldr	x2, [x19, #320]
   2a9e0:	mov	x1, #0x1                   	// #1
   2a9e4:	mov	x0, #0x0                   	// #0
   2a9e8:	add	x2, x2, x1
   2a9ec:	str	x2, [x19, #320]
   2a9f0:	b	2a9ac <__asan_backtrace_create_state@@Base+0x2714>
   2a9f4:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2a9f8:	add	x24, x24, #0x8a8
   2a9fc:	mov	x0, x24
   2aa00:	bl	64b0 <__asan_internal_strlen@plt>
   2aa04:	cbz	x0, 2b014 <__asan_backtrace_create_state@@Base+0x2d7c>
   2aa08:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2aa0c:	add	x24, x0, x24
   2aa10:	add	x22, x22, #0x8a9
   2aa14:	mov	w23, #0x67                  	// #103
   2aa18:	ldr	x1, [x19, #256]
   2aa1c:	b	2aa40 <__asan_backtrace_create_state@@Base+0x27a8>
   2aa20:	mov	x0, x1
   2aa24:	add	x1, x1, #0x1
   2aa28:	str	x1, [x19, #256]
   2aa2c:	cmp	x24, x22
   2aa30:	strb	w23, [x19, x0]
   2aa34:	strb	w23, [x19, #264]
   2aa38:	b.eq	2b014 <__asan_backtrace_create_state@@Base+0x2d7c>  // b.none
   2aa3c:	ldrb	w23, [x22], #1
   2aa40:	cmp	x1, #0xff
   2aa44:	b.ne	2aa20 <__asan_backtrace_create_state@@Base+0x2788>  // b.any
   2aa48:	ldp	x3, x2, [x19, #272]
   2aa4c:	strb	wzr, [x19, #255]
   2aa50:	mov	x0, x19
   2aa54:	blr	x3
   2aa58:	ldr	x2, [x19, #320]
   2aa5c:	mov	x1, #0x1                   	// #1
   2aa60:	mov	x0, #0x0                   	// #0
   2aa64:	add	x2, x2, x1
   2aa68:	str	x2, [x19, #320]
   2aa6c:	b	2aa28 <__asan_backtrace_create_state@@Base+0x2790>
   2aa70:	ldr	x2, [x20, #8]
   2aa74:	mov	w1, w21
   2aa78:	mov	x0, x19
   2aa7c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2aa80:	ldr	x2, [x20, #16]
   2aa84:	mov	w1, w21
   2aa88:	mov	x0, x19
   2aa8c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2aa90:	ldp	x21, x22, [sp, #32]
   2aa94:	ldp	x23, x24, [sp, #48]
   2aa98:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2aa9c:	ldp	x3, x2, [x19, #272]
   2aaa0:	strb	wzr, [x19, #255]
   2aaa4:	mov	x0, x19
   2aaa8:	blr	x3
   2aaac:	ldr	x2, [x19, #320]
   2aab0:	mov	x0, #0x1                   	// #1
   2aab4:	mov	x1, #0x0                   	// #0
   2aab8:	add	x2, x2, x0
   2aabc:	str	x2, [x19, #320]
   2aac0:	b	2a4bc <__asan_backtrace_create_state@@Base+0x2224>
   2aac4:	ldp	x3, x2, [x19, #272]
   2aac8:	strb	wzr, [x19, #255]
   2aacc:	mov	x0, x19
   2aad0:	blr	x3
   2aad4:	ldr	x2, [x19, #320]
   2aad8:	mov	x0, #0x1                   	// #1
   2aadc:	mov	x1, #0x0                   	// #0
   2aae0:	add	x2, x2, x0
   2aae4:	str	x2, [x19, #320]
   2aae8:	b	2a480 <__asan_backtrace_create_state@@Base+0x21e8>
   2aaec:	ldr	x2, [x0, #8]
   2aaf0:	add	x0, sp, #0x70
   2aaf4:	ldr	x1, [x19, #288]
   2aaf8:	stp	x4, x20, [sp, #112]
   2aafc:	str	wzr, [sp, #128]
   2ab00:	str	x1, [sp, #136]
   2ab04:	str	x0, [x19, #296]
   2ab08:	cbnz	x2, 28d38 <__asan_backtrace_create_state@@Base+0xaa0>
   2ab0c:	b	28d34 <__asan_backtrace_create_state@@Base+0xa9c>
   2ab10:	ldp	x21, x22, [sp, #32]
   2ab14:	ldp	x23, x24, [sp, #48]
   2ab18:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2ab1c:	ldr	x2, [x20, #16]
   2ab20:	mov	w1, w21
   2ab24:	mov	x0, x19
   2ab28:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2ab2c:	ldr	x1, [x19, #256]
   2ab30:	add	x0, x1, #0x1
   2ab34:	cmp	x1, #0xff
   2ab38:	b.ne	2ab60 <__asan_backtrace_create_state@@Base+0x28c8>  // b.any
   2ab3c:	ldp	x3, x2, [x19, #272]
   2ab40:	strb	wzr, [x19, #255]
   2ab44:	mov	x0, x19
   2ab48:	blr	x3
   2ab4c:	ldr	x2, [x19, #320]
   2ab50:	mov	x0, #0x1                   	// #1
   2ab54:	mov	x1, #0x0                   	// #0
   2ab58:	add	x2, x2, x0
   2ab5c:	str	x2, [x19, #320]
   2ab60:	str	x0, [x19, #256]
   2ab64:	mov	w0, #0x5d                  	// #93
   2ab68:	strb	w0, [x19, x1]
   2ab6c:	strb	w0, [x19, #264]
   2ab70:	ldp	x21, x22, [sp, #32]
   2ab74:	ldp	x23, x24, [sp, #48]
   2ab78:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2ab7c:	ldr	x2, [x20, #16]
   2ab80:	mov	w1, w21
   2ab84:	mov	x0, x19
   2ab88:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2ab8c:	ldp	x21, x22, [sp, #32]
   2ab90:	ldp	x23, x24, [sp, #48]
   2ab94:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2ab98:	ldr	x2, [x20, #8]
   2ab9c:	mov	w1, w21
   2aba0:	mov	x0, x19
   2aba4:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2aba8:	ldp	x21, x22, [sp, #32]
   2abac:	ldp	x23, x24, [sp, #48]
   2abb0:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2abb4:	ldr	x2, [x20, #16]
   2abb8:	mov	w1, w21
   2abbc:	mov	x0, x19
   2abc0:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2abc4:	add	x24, x24, #0x688
   2abc8:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2abcc:	mov	x0, x24
   2abd0:	bl	64b0 <__asan_internal_strlen@plt>
   2abd4:	cbz	x0, 2ac40 <__asan_backtrace_create_state@@Base+0x29a8>
   2abd8:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2abdc:	add	x24, x0, x24
   2abe0:	add	x22, x22, #0x689
   2abe4:	mov	w23, #0x20                  	// #32
   2abe8:	ldr	x1, [x19, #256]
   2abec:	b	2ac10 <__asan_backtrace_create_state@@Base+0x2978>
   2abf0:	mov	x0, x1
   2abf4:	add	x1, x1, #0x1
   2abf8:	str	x1, [x19, #256]
   2abfc:	cmp	x24, x22
   2ac00:	strb	w23, [x19, x0]
   2ac04:	strb	w23, [x19, #264]
   2ac08:	b.eq	2ac40 <__asan_backtrace_create_state@@Base+0x29a8>  // b.none
   2ac0c:	ldrb	w23, [x22], #1
   2ac10:	cmp	x1, #0xff
   2ac14:	b.ne	2abf0 <__asan_backtrace_create_state@@Base+0x2958>  // b.any
   2ac18:	ldp	x3, x2, [x19, #272]
   2ac1c:	strb	wzr, [x19, #255]
   2ac20:	mov	x0, x19
   2ac24:	blr	x3
   2ac28:	ldr	x2, [x19, #320]
   2ac2c:	mov	x1, #0x1                   	// #1
   2ac30:	mov	x0, #0x0                   	// #0
   2ac34:	add	x2, x2, x1
   2ac38:	str	x2, [x19, #320]
   2ac3c:	b	2abf8 <__asan_backtrace_create_state@@Base+0x2960>
   2ac40:	ldr	x2, [x20, #8]
   2ac44:	mov	w1, w21
   2ac48:	mov	x0, x19
   2ac4c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2ac50:	ldp	x21, x22, [sp, #32]
   2ac54:	ldp	x23, x24, [sp, #48]
   2ac58:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2ac5c:	ldr	x2, [x20, #8]
   2ac60:	mov	w1, w21
   2ac64:	mov	x0, x19
   2ac68:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2ac6c:	ldp	x21, x22, [sp, #32]
   2ac70:	ldp	x23, x24, [sp, #48]
   2ac74:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2ac78:	ldr	x2, [x20, #8]
   2ac7c:	mov	w1, w21
   2ac80:	mov	x0, x19
   2ac84:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2ac88:	ldp	x21, x22, [sp, #32]
   2ac8c:	ldp	x23, x24, [sp, #48]
   2ac90:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2ac94:	ldr	x20, [x24, #8]
   2ac98:	ldrb	w0, [x20]
   2ac9c:	sub	w0, w0, #0x61
   2aca0:	and	w0, w0, #0xff
   2aca4:	cmp	w0, #0x19
   2aca8:	b.hi	2acf4 <__asan_backtrace_create_state@@Base+0x2a5c>  // b.pmore
   2acac:	ldr	x1, [x19, #256]
   2acb0:	add	x0, x1, #0x1
   2acb4:	cmp	x1, #0xff
   2acb8:	b.ne	2ace4 <__asan_backtrace_create_state@@Base+0x2a4c>  // b.any
   2acbc:	ldp	x3, x2, [x19, #272]
   2acc0:	strb	wzr, [x19, #255]
   2acc4:	mov	x0, x19
   2acc8:	blr	x3
   2accc:	ldr	x2, [x19, #320]
   2acd0:	mov	x0, #0x1                   	// #1
   2acd4:	mov	x1, #0x0                   	// #0
   2acd8:	add	x2, x2, x0
   2acdc:	ldr	x20, [x24, #8]
   2ace0:	str	x2, [x19, #320]
   2ace4:	str	x0, [x19, #256]
   2ace8:	mov	w0, #0x20                  	// #32
   2acec:	strb	w0, [x19, x1]
   2acf0:	strb	w0, [x19, #264]
   2acf4:	sxtw	x22, w23
   2acf8:	sub	w0, w23, #0x1
   2acfc:	add	x1, x20, x22
   2ad00:	sxtw	x0, w0
   2ad04:	ldurb	w1, [x1, #-1]
   2ad08:	cmp	w1, #0x20
   2ad0c:	csel	x22, x22, x0, ne  // ne = any
   2ad10:	cbz	x22, 2c538 <__asan_backtrace_create_state@@Base+0x42a0>
   2ad14:	add	x22, x20, x22
   2ad18:	ldr	x1, [x19, #256]
   2ad1c:	b	2ad40 <__asan_backtrace_create_state@@Base+0x2aa8>
   2ad20:	mov	x0, x1
   2ad24:	add	x1, x1, #0x1
   2ad28:	str	x1, [x19, #256]
   2ad2c:	add	x20, x20, #0x1
   2ad30:	strb	w21, [x19, x0]
   2ad34:	cmp	x20, x22
   2ad38:	strb	w21, [x19, #264]
   2ad3c:	b.eq	2b364 <__asan_backtrace_create_state@@Base+0x30cc>  // b.none
   2ad40:	ldrb	w21, [x20]
   2ad44:	cmp	x1, #0xff
   2ad48:	b.ne	2ad20 <__asan_backtrace_create_state@@Base+0x2a88>  // b.any
   2ad4c:	ldp	x3, x2, [x19, #272]
   2ad50:	strb	wzr, [x19, #255]
   2ad54:	mov	x0, x19
   2ad58:	blr	x3
   2ad5c:	ldr	x2, [x19, #320]
   2ad60:	mov	x1, #0x1                   	// #1
   2ad64:	mov	x0, #0x0                   	// #0
   2ad68:	add	x2, x2, x1
   2ad6c:	str	x2, [x19, #320]
   2ad70:	b	2ad28 <__asan_backtrace_create_state@@Base+0x2a90>
   2ad74:	ldr	x2, [x20, #8]
   2ad78:	mov	w1, w21
   2ad7c:	mov	x0, x19
   2ad80:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2ad84:	ldp	x21, x22, [sp, #32]
   2ad88:	ldp	x23, x24, [sp, #48]
   2ad8c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2ad90:	ldr	x2, [x20, #8]
   2ad94:	mov	w1, w21
   2ad98:	mov	x0, x19
   2ad9c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2ada0:	ldp	x21, x22, [sp, #32]
   2ada4:	ldp	x23, x24, [sp, #48]
   2ada8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2adac:	ldr	x2, [x20, #8]
   2adb0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   2adb4:	add	x1, x1, #0xa90
   2adb8:	add	x20, sp, #0x70
   2adbc:	add	w2, w2, #0x1
   2adc0:	mov	x0, x20
   2adc4:	bl	65f0 <sprintf@plt>
   2adc8:	mov	x0, x20
   2adcc:	bl	64b0 <__asan_internal_strlen@plt>
   2add0:	ldr	x1, [x19, #256]
   2add4:	cbz	x0, 2ae34 <__asan_backtrace_create_state@@Base+0x2b9c>
   2add8:	add	x22, x20, x0
   2addc:	b	2ae00 <__asan_backtrace_create_state@@Base+0x2b68>
   2ade0:	mov	x0, x1
   2ade4:	add	x1, x1, #0x1
   2ade8:	str	x1, [x19, #256]
   2adec:	add	x20, x20, #0x1
   2adf0:	strb	w21, [x19, x0]
   2adf4:	cmp	x20, x22
   2adf8:	strb	w21, [x19, #264]
   2adfc:	b.eq	2ae34 <__asan_backtrace_create_state@@Base+0x2b9c>  // b.none
   2ae00:	ldrb	w21, [x20]
   2ae04:	cmp	x1, #0xff
   2ae08:	b.ne	2ade0 <__asan_backtrace_create_state@@Base+0x2b48>  // b.any
   2ae0c:	ldp	x3, x2, [x19, #272]
   2ae10:	strb	wzr, [x19, #255]
   2ae14:	mov	x0, x19
   2ae18:	blr	x3
   2ae1c:	ldr	x2, [x19, #320]
   2ae20:	mov	x1, #0x1                   	// #1
   2ae24:	mov	x0, #0x0                   	// #0
   2ae28:	add	x2, x2, x1
   2ae2c:	str	x2, [x19, #320]
   2ae30:	b	2ade8 <__asan_backtrace_create_state@@Base+0x2b50>
   2ae34:	add	x0, x1, #0x1
   2ae38:	cmp	x1, #0xff
   2ae3c:	b.ne	2ae64 <__asan_backtrace_create_state@@Base+0x2bcc>  // b.any
   2ae40:	ldp	x3, x2, [x19, #272]
   2ae44:	strb	wzr, [x19, #255]
   2ae48:	mov	x0, x19
   2ae4c:	blr	x3
   2ae50:	ldr	x2, [x19, #320]
   2ae54:	mov	x0, #0x1                   	// #1
   2ae58:	mov	x1, #0x0                   	// #0
   2ae5c:	add	x2, x2, x0
   2ae60:	str	x2, [x19, #320]
   2ae64:	str	x0, [x19, #256]
   2ae68:	mov	w0, #0x7d                  	// #125
   2ae6c:	strb	w0, [x19, x1]
   2ae70:	strb	w0, [x19, #264]
   2ae74:	ldp	x21, x22, [sp, #32]
   2ae78:	ldp	x23, x24, [sp, #48]
   2ae7c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2ae80:	ldr	w3, [x19, #312]
   2ae84:	mov	x0, x19
   2ae88:	ldr	x2, [x20, #8]
   2ae8c:	add	w3, w3, #0x1
   2ae90:	str	w3, [x19, #312]
   2ae94:	mov	w1, w21
   2ae98:	adrp	x23, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2ae9c:	add	x23, x23, #0x8f8
   2aea0:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2aea4:	ldr	w0, [x19, #312]
   2aea8:	sub	w0, w0, #0x1
   2aeac:	str	w0, [x19, #312]
   2aeb0:	mov	x0, x23
   2aeb4:	bl	64b0 <__asan_internal_strlen@plt>
   2aeb8:	cbz	x0, 2af24 <__asan_backtrace_create_state@@Base+0x2c8c>
   2aebc:	adrp	x21, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2aec0:	add	x23, x0, x23
   2aec4:	add	x21, x21, #0x8f9
   2aec8:	mov	w22, #0x29                  	// #41
   2aecc:	ldr	x1, [x19, #256]
   2aed0:	b	2aef4 <__asan_backtrace_create_state@@Base+0x2c5c>
   2aed4:	mov	x0, x1
   2aed8:	add	x1, x1, #0x1
   2aedc:	str	x1, [x19, #256]
   2aee0:	cmp	x21, x23
   2aee4:	strb	w22, [x19, x0]
   2aee8:	strb	w22, [x19, #264]
   2aeec:	b.eq	2af24 <__asan_backtrace_create_state@@Base+0x2c8c>  // b.none
   2aef0:	ldrb	w22, [x21], #1
   2aef4:	cmp	x1, #0xff
   2aef8:	b.ne	2aed4 <__asan_backtrace_create_state@@Base+0x2c3c>  // b.any
   2aefc:	ldp	x3, x2, [x19, #272]
   2af00:	strb	wzr, [x19, #255]
   2af04:	mov	x0, x19
   2af08:	blr	x3
   2af0c:	ldr	x2, [x19, #320]
   2af10:	mov	x1, #0x1                   	// #1
   2af14:	mov	x0, #0x0                   	// #0
   2af18:	add	x2, x2, x1
   2af1c:	str	x2, [x19, #320]
   2af20:	b	2aedc <__asan_backtrace_create_state@@Base+0x2c44>
   2af24:	ldr	w2, [x20, #16]
   2af28:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   2af2c:	add	x1, x1, #0xa90
   2af30:	add	x20, sp, #0x70
   2af34:	add	w2, w2, #0x1
   2af38:	mov	x0, x20
   2af3c:	bl	65f0 <sprintf@plt>
   2af40:	mov	x0, x20
   2af44:	bl	64b0 <__asan_internal_strlen@plt>
   2af48:	ldr	x1, [x19, #256]
   2af4c:	cbz	x0, 2afac <__asan_backtrace_create_state@@Base+0x2d14>
   2af50:	add	x22, x20, x0
   2af54:	b	2af78 <__asan_backtrace_create_state@@Base+0x2ce0>
   2af58:	mov	x0, x1
   2af5c:	add	x1, x1, #0x1
   2af60:	str	x1, [x19, #256]
   2af64:	add	x20, x20, #0x1
   2af68:	strb	w21, [x19, x0]
   2af6c:	cmp	x22, x20
   2af70:	strb	w21, [x19, #264]
   2af74:	b.eq	2afac <__asan_backtrace_create_state@@Base+0x2d14>  // b.none
   2af78:	ldrb	w21, [x20]
   2af7c:	cmp	x1, #0xff
   2af80:	b.ne	2af58 <__asan_backtrace_create_state@@Base+0x2cc0>  // b.any
   2af84:	ldp	x3, x2, [x19, #272]
   2af88:	strb	wzr, [x19, #255]
   2af8c:	mov	x0, x19
   2af90:	blr	x3
   2af94:	ldr	x2, [x19, #320]
   2af98:	mov	x1, #0x1                   	// #1
   2af9c:	mov	x0, #0x0                   	// #0
   2afa0:	add	x2, x2, x1
   2afa4:	str	x2, [x19, #320]
   2afa8:	b	2af60 <__asan_backtrace_create_state@@Base+0x2cc8>
   2afac:	add	x0, x1, #0x1
   2afb0:	cmp	x1, #0xff
   2afb4:	b.ne	2afdc <__asan_backtrace_create_state@@Base+0x2d44>  // b.any
   2afb8:	ldp	x3, x2, [x19, #272]
   2afbc:	strb	wzr, [x19, #255]
   2afc0:	mov	x0, x19
   2afc4:	blr	x3
   2afc8:	ldr	x2, [x19, #320]
   2afcc:	mov	x0, #0x1                   	// #1
   2afd0:	mov	x1, #0x0                   	// #0
   2afd4:	add	x2, x2, x0
   2afd8:	str	x2, [x19, #320]
   2afdc:	str	x0, [x19, #256]
   2afe0:	mov	w0, #0x7d                  	// #125
   2afe4:	strb	w0, [x19, x1]
   2afe8:	strb	w0, [x19, #264]
   2afec:	ldp	x21, x22, [sp, #32]
   2aff0:	ldp	x23, x24, [sp, #48]
   2aff4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2aff8:	ldr	x2, [x20, #8]
   2affc:	mov	w1, w21
   2b000:	mov	x0, x19
   2b004:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b008:	ldp	x21, x22, [sp, #32]
   2b00c:	ldp	x23, x24, [sp, #48]
   2b010:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b014:	ldr	x2, [x20, #8]
   2b018:	mov	w1, w21
   2b01c:	mov	x0, x19
   2b020:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b024:	ldp	x21, x22, [sp, #32]
   2b028:	ldp	x23, x24, [sp, #48]
   2b02c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b030:	ldr	x2, [x20, #8]
   2b034:	mov	w1, w21
   2b038:	mov	x0, x19
   2b03c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b040:	ldr	x1, [x19, #256]
   2b044:	add	x0, x1, #0x1
   2b048:	cmp	x1, #0xff
   2b04c:	b.ne	2b074 <__asan_backtrace_create_state@@Base+0x2ddc>  // b.any
   2b050:	ldp	x3, x2, [x19, #272]
   2b054:	strb	wzr, [x19, #255]
   2b058:	mov	x0, x19
   2b05c:	blr	x3
   2b060:	ldr	x2, [x19, #320]
   2b064:	mov	x0, #0x1                   	// #1
   2b068:	mov	x1, #0x0                   	// #0
   2b06c:	add	x2, x2, x0
   2b070:	str	x2, [x19, #320]
   2b074:	str	x0, [x19, #256]
   2b078:	mov	w0, #0x29                  	// #41
   2b07c:	strb	w0, [x19, x1]
   2b080:	strb	w0, [x19, #264]
   2b084:	ldp	x21, x22, [sp, #32]
   2b088:	ldp	x23, x24, [sp, #48]
   2b08c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b090:	ldr	x2, [x20, #16]
   2b094:	mov	w1, w21
   2b098:	mov	x0, x19
   2b09c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b0a0:	ldr	x1, [x19, #256]
   2b0a4:	add	x0, x1, #0x1
   2b0a8:	cmp	x1, #0xff
   2b0ac:	b.ne	2b0d4 <__asan_backtrace_create_state@@Base+0x2e3c>  // b.any
   2b0b0:	ldp	x3, x2, [x19, #272]
   2b0b4:	strb	wzr, [x19, #255]
   2b0b8:	mov	x0, x19
   2b0bc:	blr	x3
   2b0c0:	ldr	x2, [x19, #320]
   2b0c4:	mov	x0, #0x1                   	// #1
   2b0c8:	mov	x1, #0x0                   	// #0
   2b0cc:	add	x2, x2, x0
   2b0d0:	str	x2, [x19, #320]
   2b0d4:	str	x0, [x19, #256]
   2b0d8:	mov	w0, #0x5d                  	// #93
   2b0dc:	strb	w0, [x19, x1]
   2b0e0:	strb	w0, [x19, #264]
   2b0e4:	ldp	x21, x22, [sp, #32]
   2b0e8:	ldp	x23, x24, [sp, #48]
   2b0ec:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b0f0:	ldr	x1, [x19, #368]
   2b0f4:	cbz	x1, 2b108 <__asan_backtrace_create_state@@Base+0x2e70>
   2b0f8:	ldr	x2, [x19, #288]
   2b0fc:	add	x0, sp, #0x70
   2b100:	stp	x2, x1, [sp, #112]
   2b104:	str	x0, [x19, #288]
   2b108:	ldr	x2, [x20, #8]
   2b10c:	ldr	w0, [x2]
   2b110:	cmp	w0, #0x4
   2b114:	b.eq	2b9f8 <__asan_backtrace_create_state@@Base+0x3760>  // b.none
   2b118:	mov	x0, x19
   2b11c:	mov	w1, w21
   2b120:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b124:	ldr	x0, [x19, #368]
   2b128:	cbz	x0, 2c084 <__asan_backtrace_create_state@@Base+0x3dec>
   2b12c:	ldr	x0, [sp, #112]
   2b130:	ldp	x21, x22, [sp, #32]
   2b134:	ldp	x23, x24, [sp, #48]
   2b138:	str	x0, [x19, #288]
   2b13c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b140:	ldr	x2, [x20, #8]
   2b144:	mov	w1, w21
   2b148:	mov	x0, x19
   2b14c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b150:	ldp	x21, x22, [sp, #32]
   2b154:	ldp	x23, x24, [sp, #48]
   2b158:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b15c:	ldr	x2, [x20, #8]
   2b160:	mov	w1, w21
   2b164:	mov	x0, x19
   2b168:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b16c:	ldp	x21, x22, [sp, #32]
   2b170:	ldp	x23, x24, [sp, #48]
   2b174:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b178:	ldr	x2, [x20, #8]
   2b17c:	mov	w1, w21
   2b180:	mov	x0, x19
   2b184:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b188:	ldp	x21, x22, [sp, #32]
   2b18c:	ldp	x23, x24, [sp, #48]
   2b190:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b194:	ldr	x2, [x20, #8]
   2b198:	mov	w1, w21
   2b19c:	mov	x0, x19
   2b1a0:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b1a4:	ldp	x21, x22, [sp, #32]
   2b1a8:	ldp	x23, x24, [sp, #48]
   2b1ac:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b1b0:	ldr	x2, [x20, #8]
   2b1b4:	mov	w1, w21
   2b1b8:	mov	x0, x19
   2b1bc:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b1c0:	ldp	x21, x22, [sp, #32]
   2b1c4:	ldp	x23, x24, [sp, #48]
   2b1c8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b1cc:	ldr	x2, [x20, #8]
   2b1d0:	mov	w1, w21
   2b1d4:	mov	x0, x19
   2b1d8:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b1dc:	ldp	x21, x22, [sp, #32]
   2b1e0:	ldp	x23, x24, [sp, #48]
   2b1e4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b1e8:	ldr	x2, [x20, #8]
   2b1ec:	mov	w1, w21
   2b1f0:	mov	x0, x19
   2b1f4:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b1f8:	ldp	x21, x22, [sp, #32]
   2b1fc:	ldp	x23, x24, [sp, #48]
   2b200:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b204:	ldr	x2, [x20, #8]
   2b208:	mov	w1, w21
   2b20c:	mov	x0, x19
   2b210:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b214:	ldp	x21, x22, [sp, #32]
   2b218:	ldp	x23, x24, [sp, #48]
   2b21c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b220:	ldr	x2, [x20, #8]
   2b224:	mov	w1, w21
   2b228:	mov	x0, x19
   2b22c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b230:	ldp	x21, x22, [sp, #32]
   2b234:	ldp	x23, x24, [sp, #48]
   2b238:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b23c:	ldr	x2, [x20, #8]
   2b240:	mov	w1, w21
   2b244:	mov	x0, x19
   2b248:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b24c:	ldp	x21, x22, [sp, #32]
   2b250:	ldp	x23, x24, [sp, #48]
   2b254:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b258:	ldr	x2, [x20, #8]
   2b25c:	mov	w1, w21
   2b260:	mov	x0, x19
   2b264:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2b268:	add	x24, x24, #0x678
   2b26c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b270:	mov	x0, x24
   2b274:	bl	64b0 <__asan_internal_strlen@plt>
   2b278:	cbz	x0, 2b2e4 <__asan_backtrace_create_state@@Base+0x304c>
   2b27c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2b280:	add	x24, x0, x24
   2b284:	add	x22, x22, #0x679
   2b288:	mov	w23, #0x2d                  	// #45
   2b28c:	ldr	x1, [x19, #256]
   2b290:	b	2b2b4 <__asan_backtrace_create_state@@Base+0x301c>
   2b294:	mov	x0, x1
   2b298:	add	x1, x1, #0x1
   2b29c:	str	x1, [x19, #256]
   2b2a0:	cmp	x24, x22
   2b2a4:	strb	w23, [x19, x0]
   2b2a8:	strb	w23, [x19, #264]
   2b2ac:	b.eq	2b2e4 <__asan_backtrace_create_state@@Base+0x304c>  // b.none
   2b2b0:	ldrb	w23, [x22], #1
   2b2b4:	cmp	x1, #0xff
   2b2b8:	b.ne	2b294 <__asan_backtrace_create_state@@Base+0x2ffc>  // b.any
   2b2bc:	ldp	x3, x2, [x19, #272]
   2b2c0:	strb	wzr, [x19, #255]
   2b2c4:	mov	x0, x19
   2b2c8:	blr	x3
   2b2cc:	ldr	x2, [x19, #320]
   2b2d0:	mov	x1, #0x1                   	// #1
   2b2d4:	mov	x0, #0x0                   	// #0
   2b2d8:	add	x2, x2, x1
   2b2dc:	str	x2, [x19, #320]
   2b2e0:	b	2b29c <__asan_backtrace_create_state@@Base+0x3004>
   2b2e4:	ldr	x2, [x20, #16]
   2b2e8:	mov	w1, w21
   2b2ec:	mov	x0, x19
   2b2f0:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b2f4:	ldp	x21, x22, [sp, #32]
   2b2f8:	ldp	x23, x24, [sp, #48]
   2b2fc:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b300:	ldr	x2, [x20, #8]
   2b304:	mov	w1, w21
   2b308:	mov	x0, x19
   2b30c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b310:	ldp	x21, x22, [sp, #32]
   2b314:	ldp	x23, x24, [sp, #48]
   2b318:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b31c:	ldr	x2, [x20, #8]
   2b320:	mov	w1, w21
   2b324:	mov	x0, x19
   2b328:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b32c:	ldp	x21, x22, [sp, #32]
   2b330:	ldp	x23, x24, [sp, #48]
   2b334:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b338:	mov	x2, x20
   2b33c:	mov	w1, w21
   2b340:	mov	x0, x19
   2b344:	bl	2cd40 <__asan_backtrace_create_state@@Base+0x4aa8>
   2b348:	b	28d4c <__asan_backtrace_create_state@@Base+0xab4>
   2b34c:	ldp	x21, x22, [sp, #32]
   2b350:	ldp	x23, x24, [sp, #48]
   2b354:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b358:	ldp	x21, x22, [sp, #32]
   2b35c:	ldp	x23, x24, [sp, #48]
   2b360:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b364:	ldp	x21, x22, [sp, #32]
   2b368:	ldp	x23, x24, [sp, #48]
   2b36c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b370:	ldp	x21, x22, [sp, #32]
   2b374:	ldp	x23, x24, [sp, #48]
   2b378:	ldp	x25, x26, [sp, #64]
   2b37c:	ldp	x27, x28, [sp, #80]
   2b380:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b384:	ldr	x2, [x20, #16]
   2b388:	mov	x0, x19
   2b38c:	mov	w1, w21
   2b390:	ldr	x20, [x19, #320]
   2b394:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b398:	ldr	x0, [x19, #320]
   2b39c:	cmp	x0, x20
   2b3a0:	b.eq	2bdb0 <__asan_backtrace_create_state@@Base+0x3b18>  // b.none
   2b3a4:	ldp	x21, x22, [sp, #32]
   2b3a8:	ldp	x23, x24, [sp, #48]
   2b3ac:	ldp	x25, x26, [sp, #64]
   2b3b0:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b3b4:	mov	w1, w21
   2b3b8:	mov	x2, x20
   2b3bc:	mov	x0, x19
   2b3c0:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2b3c4:	ldp	x21, x22, [sp, #32]
   2b3c8:	ldp	x23, x24, [sp, #48]
   2b3cc:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b3d0:	ldr	x25, [x25, #8]
   2b3d4:	cbz	x25, 2c1ac <__asan_backtrace_create_state@@Base+0x3f14>
   2b3d8:	add	x3, x3, #0x20
   2b3dc:	cmp	w24, #0x4
   2b3e0:	b.eq	2bd5c <__asan_backtrace_create_state@@Base+0x3ac4>  // b.none
   2b3e4:	mov	x0, x4
   2b3e8:	b	2a320 <__asan_backtrace_create_state@@Base+0x2088>
   2b3ec:	ldr	x25, [x20, #8]
   2b3f0:	cbz	w23, 2c5e8 <__asan_backtrace_create_state@@Base+0x4350>
   2b3f4:	stp	x27, x28, [sp, #80]
   2b3f8:	b	29d70 <__asan_backtrace_create_state@@Base+0x1ad8>
   2b3fc:	mov	x20, x0
   2b400:	b	28ea8 <__asan_backtrace_create_state@@Base+0xc10>
   2b404:	ldr	x2, [x20, #8]
   2b408:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   2b40c:	add	x1, x1, #0xa90
   2b410:	add	x20, sp, #0x70
   2b414:	add	w2, w2, #0x1
   2b418:	mov	x0, x20
   2b41c:	bl	65f0 <sprintf@plt>
   2b420:	mov	x0, x20
   2b424:	bl	64b0 <__asan_internal_strlen@plt>
   2b428:	cbz	x0, 2c7f8 <__asan_backtrace_create_state@@Base+0x4560>
   2b42c:	add	x22, x20, x0
   2b430:	ldr	x1, [x19, #256]
   2b434:	b	2b458 <__asan_backtrace_create_state@@Base+0x31c0>
   2b438:	mov	x0, x1
   2b43c:	add	x1, x1, #0x1
   2b440:	str	x1, [x19, #256]
   2b444:	add	x20, x20, #0x1
   2b448:	strb	w21, [x19, x0]
   2b44c:	cmp	x22, x20
   2b450:	strb	w21, [x19, #264]
   2b454:	b.eq	2b8a4 <__asan_backtrace_create_state@@Base+0x360c>  // b.none
   2b458:	ldrb	w21, [x20]
   2b45c:	cmp	x1, #0xff
   2b460:	b.ne	2b438 <__asan_backtrace_create_state@@Base+0x31a0>  // b.any
   2b464:	ldp	x3, x2, [x19, #272]
   2b468:	strb	wzr, [x19, #255]
   2b46c:	mov	x0, x19
   2b470:	blr	x3
   2b474:	ldr	x2, [x19, #320]
   2b478:	mov	x1, #0x1                   	// #1
   2b47c:	mov	x0, #0x0                   	// #0
   2b480:	add	x2, x2, x1
   2b484:	str	x2, [x19, #320]
   2b488:	b	2b440 <__asan_backtrace_create_state@@Base+0x31a8>
   2b48c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2b490:	add	x22, x22, #0x8a0
   2b494:	mov	x0, x22
   2b498:	bl	64b0 <__asan_internal_strlen@plt>
   2b49c:	cbz	x0, 2b508 <__asan_backtrace_create_state@@Base+0x3270>
   2b4a0:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2b4a4:	add	x22, x0, x22
   2b4a8:	add	x20, x20, #0x8a1
   2b4ac:	mov	w21, #0x7b                  	// #123
   2b4b0:	ldr	x1, [x19, #256]
   2b4b4:	b	2b4d8 <__asan_backtrace_create_state@@Base+0x3240>
   2b4b8:	mov	x0, x1
   2b4bc:	add	x1, x1, #0x1
   2b4c0:	str	x1, [x19, #256]
   2b4c4:	cmp	x22, x20
   2b4c8:	strb	w21, [x19, x0]
   2b4cc:	strb	w21, [x19, #264]
   2b4d0:	b.eq	2b508 <__asan_backtrace_create_state@@Base+0x3270>  // b.none
   2b4d4:	ldrb	w21, [x20], #1
   2b4d8:	cmp	x1, #0xff
   2b4dc:	b.ne	2b4b8 <__asan_backtrace_create_state@@Base+0x3220>  // b.any
   2b4e0:	ldp	x3, x2, [x19, #272]
   2b4e4:	strb	wzr, [x19, #255]
   2b4e8:	mov	x0, x19
   2b4ec:	blr	x3
   2b4f0:	ldr	x2, [x19, #320]
   2b4f4:	mov	x1, #0x1                   	// #1
   2b4f8:	mov	x0, #0x0                   	// #0
   2b4fc:	add	x2, x2, x1
   2b500:	str	x2, [x19, #320]
   2b504:	b	2b4c0 <__asan_backtrace_create_state@@Base+0x3228>
   2b508:	mov	w2, w23
   2b50c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   2b510:	add	x1, x1, #0xa90
   2b514:	add	x20, sp, #0x70
   2b518:	mov	x0, x20
   2b51c:	bl	65f0 <sprintf@plt>
   2b520:	mov	x0, x20
   2b524:	bl	64b0 <__asan_internal_strlen@plt>
   2b528:	ldr	x1, [x19, #256]
   2b52c:	cbz	x0, 2b58c <__asan_backtrace_create_state@@Base+0x32f4>
   2b530:	add	x22, x20, x0
   2b534:	b	2b558 <__asan_backtrace_create_state@@Base+0x32c0>
   2b538:	mov	x0, x1
   2b53c:	add	x1, x1, #0x1
   2b540:	str	x1, [x19, #256]
   2b544:	add	x20, x20, #0x1
   2b548:	strb	w21, [x19, x0]
   2b54c:	cmp	x22, x20
   2b550:	strb	w21, [x19, #264]
   2b554:	b.eq	2b58c <__asan_backtrace_create_state@@Base+0x32f4>  // b.none
   2b558:	ldrb	w21, [x20]
   2b55c:	cmp	x1, #0xff
   2b560:	b.ne	2b538 <__asan_backtrace_create_state@@Base+0x32a0>  // b.any
   2b564:	ldp	x3, x2, [x19, #272]
   2b568:	strb	wzr, [x19, #255]
   2b56c:	mov	x0, x19
   2b570:	blr	x3
   2b574:	ldr	x2, [x19, #320]
   2b578:	mov	x1, #0x1                   	// #1
   2b57c:	mov	x0, #0x0                   	// #0
   2b580:	add	x2, x2, x1
   2b584:	str	x2, [x19, #320]
   2b588:	b	2b540 <__asan_backtrace_create_state@@Base+0x32a8>
   2b58c:	add	x0, x1, #0x1
   2b590:	cmp	x1, #0xff
   2b594:	b.ne	2b5bc <__asan_backtrace_create_state@@Base+0x3324>  // b.any
   2b598:	ldp	x3, x2, [x19, #272]
   2b59c:	strb	wzr, [x19, #255]
   2b5a0:	mov	x0, x19
   2b5a4:	blr	x3
   2b5a8:	ldr	x2, [x19, #320]
   2b5ac:	mov	x0, #0x1                   	// #1
   2b5b0:	mov	x1, #0x0                   	// #0
   2b5b4:	add	x2, x2, x0
   2b5b8:	str	x2, [x19, #320]
   2b5bc:	str	x0, [x19, #256]
   2b5c0:	mov	w0, #0x7d                  	// #125
   2b5c4:	strb	w0, [x19, x1]
   2b5c8:	strb	w0, [x19, #264]
   2b5cc:	ldp	x21, x22, [sp, #32]
   2b5d0:	ldp	x23, x24, [sp, #48]
   2b5d4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b5d8:	ldrsw	x22, [x0, #24]
   2b5dc:	ldr	x20, [x0, #16]
   2b5e0:	cbz	x22, 2c854 <__asan_backtrace_create_state@@Base+0x45bc>
   2b5e4:	add	x22, x20, x22
   2b5e8:	ldr	x1, [x19, #256]
   2b5ec:	b	2b610 <__asan_backtrace_create_state@@Base+0x3378>
   2b5f0:	mov	x0, x1
   2b5f4:	add	x1, x1, #0x1
   2b5f8:	str	x1, [x19, #256]
   2b5fc:	add	x20, x20, #0x1
   2b600:	strb	w21, [x19, x0]
   2b604:	cmp	x22, x20
   2b608:	strb	w21, [x19, #264]
   2b60c:	b.eq	2b8d4 <__asan_backtrace_create_state@@Base+0x363c>  // b.none
   2b610:	ldrb	w21, [x20]
   2b614:	cmp	x1, #0xff
   2b618:	b.ne	2b5f0 <__asan_backtrace_create_state@@Base+0x3358>  // b.any
   2b61c:	ldp	x3, x2, [x19, #272]
   2b620:	strb	wzr, [x19, #255]
   2b624:	mov	x0, x19
   2b628:	blr	x3
   2b62c:	ldr	x2, [x19, #320]
   2b630:	mov	x1, #0x1                   	// #1
   2b634:	mov	x0, #0x0                   	// #0
   2b638:	add	x2, x2, x1
   2b63c:	str	x2, [x19, #320]
   2b640:	b	2b5f8 <__asan_backtrace_create_state@@Base+0x3360>
   2b644:	add	x21, x20, x22
   2b648:	cmp	x21, x20
   2b64c:	b.ls	2c7ec <__asan_backtrace_create_state@@Base+0x4554>  // b.plast
   2b650:	mov	w23, #0x5f                  	// #95
   2b654:	b	2b6a4 <__asan_backtrace_create_state@@Base+0x340c>
   2b658:	ldr	x1, [x19, #256]
   2b65c:	add	x0, x1, #0x1
   2b660:	cmp	x1, #0xff
   2b664:	b.ne	2b68c <__asan_backtrace_create_state@@Base+0x33f4>  // b.any
   2b668:	ldp	x3, x2, [x19, #272]
   2b66c:	strb	wzr, [x19, #255]
   2b670:	mov	x0, x19
   2b674:	blr	x3
   2b678:	ldr	x2, [x19, #320]
   2b67c:	mov	x0, #0x1                   	// #1
   2b680:	mov	x1, #0x0                   	// #0
   2b684:	add	x2, x2, x0
   2b688:	str	x2, [x19, #320]
   2b68c:	str	x0, [x19, #256]
   2b690:	strb	w22, [x19, x1]
   2b694:	strb	w22, [x19, #264]
   2b698:	add	x20, x20, #0x1
   2b69c:	cmp	x21, x20
   2b6a0:	b.ls	2b7f0 <__asan_backtrace_create_state@@Base+0x3558>  // b.plast
   2b6a4:	sub	x0, x21, x20
   2b6a8:	ldrb	w22, [x20]
   2b6ac:	cmp	x0, #0x3
   2b6b0:	b.le	2b658 <__asan_backtrace_create_state@@Base+0x33c0>
   2b6b4:	cmp	w22, #0x5f
   2b6b8:	b.ne	2b658 <__asan_backtrace_create_state@@Base+0x33c0>  // b.any
   2b6bc:	ldrb	w0, [x20, #1]
   2b6c0:	cmp	w0, #0x5f
   2b6c4:	b.ne	2b658 <__asan_backtrace_create_state@@Base+0x33c0>  // b.any
   2b6c8:	ldrb	w0, [x20, #2]
   2b6cc:	cmp	w0, #0x55
   2b6d0:	b.ne	2b658 <__asan_backtrace_create_state@@Base+0x33c0>  // b.any
   2b6d4:	add	x24, x20, #0x3
   2b6d8:	cmp	x21, x24
   2b6dc:	b.ls	2b658 <__asan_backtrace_create_state@@Base+0x33c0>  // b.plast
   2b6e0:	mov	x2, #0x0                   	// #0
   2b6e4:	b	2b700 <__asan_backtrace_create_state@@Base+0x3468>
   2b6e8:	mov	w0, w1
   2b6ec:	sxtw	x0, w0
   2b6f0:	add	x24, x24, #0x1
   2b6f4:	add	x2, x0, x2, lsl #4
   2b6f8:	cmp	x21, x24
   2b6fc:	b.eq	2b658 <__asan_backtrace_create_state@@Base+0x33c0>  // b.none
   2b700:	ldrb	w0, [x24]
   2b704:	sub	w1, w0, #0x30
   2b708:	and	w3, w1, #0xff
   2b70c:	cmp	w3, #0x9
   2b710:	b.ls	2b6e8 <__asan_backtrace_create_state@@Base+0x3450>  // b.plast
   2b714:	sub	w1, w0, #0x41
   2b718:	and	w1, w1, #0xff
   2b71c:	cmp	w1, #0x5
   2b720:	b.hi	2c49c <__asan_backtrace_create_state@@Base+0x4204>  // b.pmore
   2b724:	sub	w0, w0, #0x37
   2b728:	b	2b6ec <__asan_backtrace_create_state@@Base+0x3454>
   2b72c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2b730:	add	x22, x22, #0x7e8
   2b734:	mov	x0, x22
   2b738:	bl	64b0 <__asan_internal_strlen@plt>
   2b73c:	cbz	x0, 2c830 <__asan_backtrace_create_state@@Base+0x4598>
   2b740:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2b744:	add	x22, x0, x22
   2b748:	add	x20, x20, #0x7e9
   2b74c:	mov	w21, #0x5f                  	// #95
   2b750:	ldr	x1, [x19, #256]
   2b754:	b	2b778 <__asan_backtrace_create_state@@Base+0x34e0>
   2b758:	mov	x0, x1
   2b75c:	add	x1, x1, #0x1
   2b760:	str	x1, [x19, #256]
   2b764:	cmp	x22, x20
   2b768:	strb	w21, [x19, x0]
   2b76c:	strb	w21, [x19, #264]
   2b770:	b.eq	2b7fc <__asan_backtrace_create_state@@Base+0x3564>  // b.none
   2b774:	ldrb	w21, [x20], #1
   2b778:	cmp	x1, #0xff
   2b77c:	b.ne	2b758 <__asan_backtrace_create_state@@Base+0x34c0>  // b.any
   2b780:	ldp	x3, x2, [x19, #272]
   2b784:	strb	wzr, [x19, #255]
   2b788:	mov	x0, x19
   2b78c:	blr	x3
   2b790:	ldr	x2, [x19, #320]
   2b794:	mov	x1, #0x1                   	// #1
   2b798:	mov	x0, #0x0                   	// #0
   2b79c:	add	x2, x2, x1
   2b7a0:	str	x2, [x19, #320]
   2b7a4:	b	2b760 <__asan_backtrace_create_state@@Base+0x34c8>
   2b7a8:	add	x1, x20, #0x8
   2b7ac:	mov	x0, x19
   2b7b0:	bl	289c0 <__asan_backtrace_create_state@@Base+0x728>
   2b7b4:	mov	x2, x0
   2b7b8:	cbz	x0, 28d00 <__asan_backtrace_create_state@@Base+0xa68>
   2b7bc:	ldr	w1, [x0]
   2b7c0:	cmp	w1, #0x2f
   2b7c4:	b.eq	2c4c0 <__asan_backtrace_create_state@@Base+0x4228>  // b.none
   2b7c8:	ldr	x20, [x19, #288]
   2b7cc:	mov	w1, w21
   2b7d0:	mov	x0, x19
   2b7d4:	ldr	x3, [x20]
   2b7d8:	str	x3, [x19, #288]
   2b7dc:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b7e0:	ldp	x21, x22, [sp, #32]
   2b7e4:	ldp	x23, x24, [sp, #48]
   2b7e8:	str	x20, [x19, #288]
   2b7ec:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b7f0:	ldp	x21, x22, [sp, #32]
   2b7f4:	ldp	x23, x24, [sp, #48]
   2b7f8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b7fc:	ldp	x21, x22, [sp, #32]
   2b800:	ldp	x23, x24, [sp, #48]
   2b804:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b808:	ldr	x1, [x19, #256]
   2b80c:	add	x0, x1, #0x1
   2b810:	cmp	x1, #0xff
   2b814:	b.ne	2b83c <__asan_backtrace_create_state@@Base+0x35a4>  // b.any
   2b818:	ldp	x3, x2, [x19, #272]
   2b81c:	strb	wzr, [x19, #255]
   2b820:	mov	x0, x19
   2b824:	blr	x3
   2b828:	ldr	x2, [x19, #320]
   2b82c:	mov	x0, #0x1                   	// #1
   2b830:	mov	x1, #0x0                   	// #0
   2b834:	add	x2, x2, x0
   2b838:	str	x2, [x19, #320]
   2b83c:	str	x0, [x19, #256]
   2b840:	mov	w0, #0x28                  	// #40
   2b844:	strb	w0, [x19, x1]
   2b848:	mov	w1, w21
   2b84c:	strb	w0, [x19, #264]
   2b850:	mov	x0, x19
   2b854:	ldr	x2, [x23, #8]
   2b858:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b85c:	ldr	x1, [x19, #256]
   2b860:	add	x0, x1, #0x1
   2b864:	cmp	x1, #0xff
   2b868:	b.ne	2b890 <__asan_backtrace_create_state@@Base+0x35f8>  // b.any
   2b86c:	ldp	x3, x2, [x19, #272]
   2b870:	strb	wzr, [x19, #255]
   2b874:	mov	x0, x19
   2b878:	blr	x3
   2b87c:	ldr	x2, [x19, #320]
   2b880:	mov	x0, #0x1                   	// #1
   2b884:	mov	x1, #0x0                   	// #0
   2b888:	add	x2, x2, x0
   2b88c:	str	x2, [x19, #320]
   2b890:	str	x0, [x19, #256]
   2b894:	mov	w0, #0x29                  	// #41
   2b898:	strb	w0, [x19, x1]
   2b89c:	strb	w0, [x19, #264]
   2b8a0:	b	2a760 <__asan_backtrace_create_state@@Base+0x24c8>
   2b8a4:	ldp	x21, x22, [sp, #32]
   2b8a8:	ldp	x23, x24, [sp, #48]
   2b8ac:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b8b0:	ldp	x21, x22, [sp, #32]
   2b8b4:	ldp	x23, x24, [sp, #48]
   2b8b8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b8bc:	ldp	x21, x22, [sp, #32]
   2b8c0:	ldp	x23, x24, [sp, #48]
   2b8c4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b8c8:	ldp	x21, x22, [sp, #32]
   2b8cc:	ldp	x23, x24, [sp, #48]
   2b8d0:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b8d4:	ldp	x21, x22, [sp, #32]
   2b8d8:	ldp	x23, x24, [sp, #48]
   2b8dc:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b8e0:	ldp	x21, x22, [sp, #32]
   2b8e4:	ldp	x23, x24, [sp, #48]
   2b8e8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b8ec:	ldr	x1, [x2, #8]
   2b8f0:	ldr	w22, [x1, #28]
   2b8f4:	cmp	w22, #0x6
   2b8f8:	b.hi	2b990 <__asan_backtrace_create_state@@Base+0x36f8>  // b.pmore
   2b8fc:	cbz	w22, 28dc4 <__asan_backtrace_create_state@@Base+0xb2c>
   2b900:	ldr	x1, [x20, #16]
   2b904:	ldr	w1, [x1]
   2b908:	cbnz	w1, 28dc4 <__asan_backtrace_create_state@@Base+0xb2c>
   2b90c:	cmp	w0, #0x3e
   2b910:	b.eq	2cc28 <__asan_backtrace_create_state@@Base+0x4990>  // b.none
   2b914:	ldr	x2, [x20, #16]
   2b918:	mov	w1, w21
   2b91c:	mov	x0, x19
   2b920:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2b924:	cmp	w22, #0x4
   2b928:	b.eq	2cbfc <__asan_backtrace_create_state@@Base+0x4964>  // b.none
   2b92c:	b.hi	2c9e0 <__asan_backtrace_create_state@@Base+0x4748>  // b.pmore
   2b930:	cmp	w22, #0x2
   2b934:	b.eq	2cbac <__asan_backtrace_create_state@@Base+0x4914>  // b.none
   2b938:	cmp	w22, #0x3
   2b93c:	b.ne	2cc70 <__asan_backtrace_create_state@@Base+0x49d8>  // b.any
   2b940:	ldr	x1, [x19, #256]
   2b944:	cmp	x1, #0xff
   2b948:	b.ne	2b970 <__asan_backtrace_create_state@@Base+0x36d8>  // b.any
   2b94c:	ldp	x3, x2, [x19, #272]
   2b950:	strb	wzr, [x19, #255]
   2b954:	mov	x0, x19
   2b958:	blr	x3
   2b95c:	str	xzr, [x19, #256]
   2b960:	ldr	x0, [x19, #320]
   2b964:	mov	x1, #0x0                   	// #0
   2b968:	add	x0, x0, #0x1
   2b96c:	str	x0, [x19, #320]
   2b970:	add	x0, x1, #0x1
   2b974:	str	x0, [x19, #256]
   2b978:	mov	w0, #0x6c                  	// #108
   2b97c:	strb	w0, [x19, x1]
   2b980:	strb	w0, [x19, #264]
   2b984:	ldp	x21, x22, [sp, #32]
   2b988:	ldp	x23, x24, [sp, #48]
   2b98c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b990:	cmp	w22, #0x7
   2b994:	b.ne	28dc4 <__asan_backtrace_create_state@@Base+0xb2c>  // b.any
   2b998:	ldr	x1, [x20, #16]
   2b99c:	ldr	w3, [x1]
   2b9a0:	cbnz	w3, 28dc4 <__asan_backtrace_create_state@@Base+0xb2c>
   2b9a4:	ldr	w3, [x1, #16]
   2b9a8:	cmp	w0, #0x3d
   2b9ac:	ccmp	w3, #0x1, #0x0, eq  // eq = none
   2b9b0:	b.ne	28dc4 <__asan_backtrace_create_state@@Base+0xb2c>  // b.any
   2b9b4:	ldr	x0, [x1, #8]
   2b9b8:	ldrb	w0, [x0]
   2b9bc:	cmp	w0, #0x30
   2b9c0:	b.eq	2cc7c <__asan_backtrace_create_state@@Base+0x49e4>  // b.none
   2b9c4:	cmp	w0, #0x31
   2b9c8:	b.ne	28dc4 <__asan_backtrace_create_state@@Base+0xb2c>  // b.any
   2b9cc:	adrp	x20, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   2b9d0:	add	x20, x20, #0x3b0
   2b9d4:	mov	x0, x20
   2b9d8:	bl	64b0 <__asan_internal_strlen@plt>
   2b9dc:	mov	x1, x20
   2b9e0:	mov	x2, x0
   2b9e4:	mov	x0, x19
   2b9e8:	bl	28508 <__asan_backtrace_create_state@@Base+0x270>
   2b9ec:	ldp	x21, x22, [sp, #32]
   2b9f0:	ldp	x23, x24, [sp, #48]
   2b9f4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2b9f8:	ldr	x2, [x2, #8]
   2b9fc:	mov	x0, x19
   2ba00:	mov	w1, w21
   2ba04:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2ba08:	ldr	x0, [x19, #368]
   2ba0c:	cbz	x0, 2ba18 <__asan_backtrace_create_state@@Base+0x3780>
   2ba10:	ldr	x0, [sp, #112]
   2ba14:	str	x0, [x19, #288]
   2ba18:	ldr	x1, [x19, #256]
   2ba1c:	ldrb	w2, [x19, #264]
   2ba20:	mov	x0, x1
   2ba24:	cmp	w2, #0x3c
   2ba28:	b.eq	2c58c <__asan_backtrace_create_state@@Base+0x42f4>  // b.none
   2ba2c:	add	x1, x0, #0x1
   2ba30:	cmp	x0, #0xff
   2ba34:	b.ne	2ba60 <__asan_backtrace_create_state@@Base+0x37c8>  // b.any
   2ba38:	ldp	x3, x2, [x19, #272]
   2ba3c:	strb	wzr, [x19, #255]
   2ba40:	mov	x1, x0
   2ba44:	mov	x0, x19
   2ba48:	blr	x3
   2ba4c:	ldr	x2, [x19, #320]
   2ba50:	mov	x1, #0x1                   	// #1
   2ba54:	mov	x0, #0x0                   	// #0
   2ba58:	add	x2, x2, x1
   2ba5c:	str	x2, [x19, #320]
   2ba60:	str	x1, [x19, #256]
   2ba64:	mov	w2, #0x3c                  	// #60
   2ba68:	strb	w2, [x19, x0]
   2ba6c:	mov	w1, w21
   2ba70:	strb	w2, [x19, #264]
   2ba74:	mov	x0, x19
   2ba78:	ldr	x2, [x20, #8]
   2ba7c:	ldr	x2, [x2, #16]
   2ba80:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2ba84:	ldrb	w0, [x19, #264]
   2ba88:	cmp	w0, #0x3e
   2ba8c:	b.eq	2c544 <__asan_backtrace_create_state@@Base+0x42ac>  // b.none
   2ba90:	ldr	x0, [x19, #256]
   2ba94:	add	x1, x0, #0x1
   2ba98:	cmp	x0, #0xff
   2ba9c:	b.ne	2bac8 <__asan_backtrace_create_state@@Base+0x3830>  // b.any
   2baa0:	ldp	x3, x2, [x19, #272]
   2baa4:	strb	wzr, [x19, #255]
   2baa8:	mov	x1, x0
   2baac:	mov	x0, x19
   2bab0:	blr	x3
   2bab4:	ldr	x2, [x19, #320]
   2bab8:	mov	x1, #0x1                   	// #1
   2babc:	mov	x0, #0x0                   	// #0
   2bac0:	add	x2, x2, x1
   2bac4:	str	x2, [x19, #320]
   2bac8:	str	x1, [x19, #256]
   2bacc:	mov	w1, #0x3e                  	// #62
   2bad0:	strb	w1, [x19, x0]
   2bad4:	strb	w1, [x19, #264]
   2bad8:	ldp	x21, x22, [sp, #32]
   2badc:	ldp	x23, x24, [sp, #48]
   2bae0:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2bae4:	mov	x2, x20
   2bae8:	mov	w1, w21
   2baec:	mov	x0, x19
   2baf0:	bl	2cd40 <__asan_backtrace_create_state@@Base+0x4aa8>
   2baf4:	b	28f78 <__asan_backtrace_create_state@@Base+0xce0>
   2baf8:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2bafc:	add	x22, x22, #0x5e0
   2bb00:	mov	x0, x22
   2bb04:	bl	64b0 <__asan_internal_strlen@plt>
   2bb08:	cbz	x0, 28f1c <__asan_backtrace_create_state@@Base+0xc84>
   2bb0c:	add	x24, x0, x22
   2bb10:	mov	w23, #0x3a                  	// #58
   2bb14:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2bb18:	add	x22, x22, #0x5e1
   2bb1c:	ldr	x1, [x19, #256]
   2bb20:	b	2bb44 <__asan_backtrace_create_state@@Base+0x38ac>
   2bb24:	mov	x0, x1
   2bb28:	add	x1, x1, #0x1
   2bb2c:	str	x1, [x19, #256]
   2bb30:	cmp	x22, x24
   2bb34:	strb	w23, [x19, x0]
   2bb38:	strb	w23, [x19, #264]
   2bb3c:	b.eq	28f1c <__asan_backtrace_create_state@@Base+0xc84>  // b.none
   2bb40:	ldrb	w23, [x22], #1
   2bb44:	cmp	x1, #0xff
   2bb48:	b.ne	2bb24 <__asan_backtrace_create_state@@Base+0x388c>  // b.any
   2bb4c:	ldp	x3, x2, [x19, #272]
   2bb50:	strb	wzr, [x19, #255]
   2bb54:	mov	x0, x19
   2bb58:	blr	x3
   2bb5c:	ldr	x2, [x19, #320]
   2bb60:	mov	x1, #0x1                   	// #1
   2bb64:	mov	x0, #0x0                   	// #0
   2bb68:	add	x2, x2, x1
   2bb6c:	str	x2, [x19, #320]
   2bb70:	b	2bb2c <__asan_backtrace_create_state@@Base+0x3894>
   2bb74:	ldr	x1, [x19, #256]
   2bb78:	cmp	x1, #0xff
   2bb7c:	b.ne	2bba0 <__asan_backtrace_create_state@@Base+0x3908>  // b.any
   2bb80:	ldp	x3, x2, [x19, #272]
   2bb84:	strb	wzr, [x19, #255]
   2bb88:	mov	x0, x19
   2bb8c:	blr	x3
   2bb90:	ldr	x0, [x19, #320]
   2bb94:	mov	x1, #0x0                   	// #0
   2bb98:	add	x0, x0, #0x1
   2bb9c:	str	x0, [x19, #320]
   2bba0:	add	x0, x1, #0x1
   2bba4:	str	x0, [x19, #256]
   2bba8:	mov	w0, #0x5b                  	// #91
   2bbac:	strb	w0, [x19, x1]
   2bbb0:	strb	w0, [x19, #264]
   2bbb4:	mov	w1, w21
   2bbb8:	mov	x0, x19
   2bbbc:	ldr	x2, [x20, #16]
   2bbc0:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2bbc4:	ldr	x1, [x19, #256]
   2bbc8:	cmp	x1, #0xff
   2bbcc:	b.ne	2bbf0 <__asan_backtrace_create_state@@Base+0x3958>  // b.any
   2bbd0:	ldp	x3, x2, [x19, #272]
   2bbd4:	strb	wzr, [x19, #255]
   2bbd8:	mov	x0, x19
   2bbdc:	blr	x3
   2bbe0:	ldr	x0, [x19, #320]
   2bbe4:	mov	x1, #0x0                   	// #0
   2bbe8:	add	x0, x0, #0x1
   2bbec:	str	x0, [x19, #320]
   2bbf0:	add	x0, x1, #0x1
   2bbf4:	str	x0, [x19, #256]
   2bbf8:	mov	w0, #0x5d                  	// #93
   2bbfc:	strb	w0, [x19, x1]
   2bc00:	strb	w0, [x19, #264]
   2bc04:	ldp	x21, x22, [sp, #32]
   2bc08:	ldp	x23, x24, [sp, #48]
   2bc0c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2bc10:	ldp	x3, x2, [x19, #272]
   2bc14:	strb	wzr, [x19, #255]
   2bc18:	mov	x0, x19
   2bc1c:	blr	x3
   2bc20:	ldr	x0, [x19, #320]
   2bc24:	mov	w1, #0x29                  	// #41
   2bc28:	strb	w1, [x19]
   2bc2c:	strb	w1, [x19, #264]
   2bc30:	mov	x1, #0x1                   	// #1
   2bc34:	add	x0, x0, x1
   2bc38:	str	x1, [x19, #256]
   2bc3c:	str	x0, [x19, #320]
   2bc40:	ldr	w0, [x20]
   2bc44:	cmp	w0, #0x3e
   2bc48:	b.ne	28e44 <__asan_backtrace_create_state@@Base+0xbac>  // b.any
   2bc4c:	ldr	x1, [x19, #256]
   2bc50:	mov	w0, #0x2d                  	// #45
   2bc54:	add	x2, x1, #0x1
   2bc58:	str	x2, [x19, #256]
   2bc5c:	strb	w0, [x19, x1]
   2bc60:	strb	w0, [x19, #264]
   2bc64:	b	28e44 <__asan_backtrace_create_state@@Base+0xbac>
   2bc68:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2bc6c:	add	x22, x22, #0x7d8
   2bc70:	mov	x0, x22
   2bc74:	bl	64b0 <__asan_internal_strlen@plt>
   2bc78:	cbz	x0, 297e0 <__asan_backtrace_create_state@@Base+0x1548>
   2bc7c:	add	x24, x0, x22
   2bc80:	mov	w23, #0x5f                  	// #95
   2bc84:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2bc88:	add	x22, x22, #0x7d9
   2bc8c:	ldr	x1, [x19, #256]
   2bc90:	b	2bcb4 <__asan_backtrace_create_state@@Base+0x3a1c>
   2bc94:	mov	x0, x1
   2bc98:	add	x1, x1, #0x1
   2bc9c:	str	x1, [x19, #256]
   2bca0:	cmp	x24, x22
   2bca4:	strb	w23, [x19, x0]
   2bca8:	strb	w23, [x19, #264]
   2bcac:	b.eq	297e0 <__asan_backtrace_create_state@@Base+0x1548>  // b.none
   2bcb0:	ldrb	w23, [x22], #1
   2bcb4:	cmp	x1, #0xff
   2bcb8:	b.ne	2bc94 <__asan_backtrace_create_state@@Base+0x39fc>  // b.any
   2bcbc:	ldp	x3, x2, [x19, #272]
   2bcc0:	strb	wzr, [x19, #255]
   2bcc4:	mov	x0, x19
   2bcc8:	blr	x3
   2bccc:	ldr	x2, [x19, #320]
   2bcd0:	mov	x1, #0x1                   	// #1
   2bcd4:	mov	x0, #0x0                   	// #0
   2bcd8:	add	x2, x2, x1
   2bcdc:	str	x2, [x19, #320]
   2bce0:	b	2bc9c <__asan_backtrace_create_state@@Base+0x3a04>
   2bce4:	add	x2, x20, #0x10
   2bce8:	mov	w1, w22
   2bcec:	mov	x0, x19
   2bcf0:	bl	2d5d8 <__asan_backtrace_create_state@@Base+0x5340>
   2bcf4:	ldr	x2, [x20, #8]
   2bcf8:	cbz	x2, 2c640 <__asan_backtrace_create_state@@Base+0x43a8>
   2bcfc:	mov	w1, w22
   2bd00:	mov	x0, x19
   2bd04:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2bd08:	ldp	x21, x22, [sp, #32]
   2bd0c:	ldp	x23, x24, [sp, #48]
   2bd10:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2bd14:	ldr	x0, [x19, #256]
   2bd18:	cmp	x0, #0xff
   2bd1c:	b.eq	2c4d8 <__asan_backtrace_create_state@@Base+0x4240>  // b.none
   2bd20:	add	x1, x0, #0x1
   2bd24:	str	x1, [x19, #256]
   2bd28:	mov	w2, #0x20                  	// #32
   2bd2c:	strb	w2, [x19, x0]
   2bd30:	strb	w2, [x19, #264]
   2bd34:	b	2a4b0 <__asan_backtrace_create_state@@Base+0x2218>
   2bd38:	ldr	x0, [x19, #256]
   2bd3c:	cmp	x0, #0xff
   2bd40:	b.eq	2c508 <__asan_backtrace_create_state@@Base+0x4270>  // b.none
   2bd44:	add	x1, x0, #0x1
   2bd48:	str	x1, [x19, #256]
   2bd4c:	mov	w2, #0x20                  	// #32
   2bd50:	strb	w2, [x19, x0]
   2bd54:	strb	w2, [x19, #264]
   2bd58:	b	2a474 <__asan_backtrace_create_state@@Base+0x21dc>
   2bd5c:	ldp	x21, x22, [sp, #32]
   2bd60:	ldp	x23, x24, [sp, #48]
   2bd64:	ldp	x25, x26, [sp, #64]
   2bd68:	str	x4, [x19, #296]
   2bd6c:	str	w1, [x19, #304]
   2bd70:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2bd74:	ldp	x21, x22, [sp, #32]
   2bd78:	ldp	x23, x24, [sp, #48]
   2bd7c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2bd80:	ldp	x21, x22, [sp, #32]
   2bd84:	ldp	x23, x24, [sp, #48]
   2bd88:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2bd8c:	mov	w22, #0x0                   	// #0
   2bd90:	b	28ea8 <__asan_backtrace_create_state@@Base+0xc10>
   2bd94:	ldr	x2, [x20, #8]
   2bd98:	mov	w1, w21
   2bd9c:	mov	x0, x19
   2bda0:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2bda4:	ldp	x21, x22, [sp, #32]
   2bda8:	ldp	x23, x24, [sp, #48]
   2bdac:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2bdb0:	ldr	x0, [x19, #256]
   2bdb4:	cmp	x0, x22
   2bdb8:	b.eq	2c6b8 <__asan_backtrace_create_state@@Base+0x4420>  // b.none
   2bdbc:	ldp	x21, x22, [sp, #32]
   2bdc0:	ldp	x23, x24, [sp, #48]
   2bdc4:	ldp	x25, x26, [sp, #64]
   2bdc8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2bdcc:	cmp	x3, #0xff
   2bdd0:	b.ne	2bc4c <__asan_backtrace_create_state@@Base+0x39b4>  // b.any
   2bdd4:	ldp	x4, x2, [x19, #272]
   2bdd8:	strb	wzr, [x19, #255]
   2bddc:	mov	x0, x19
   2bde0:	mov	x1, x3
   2bde4:	blr	x4
   2bde8:	str	xzr, [x19, #256]
   2bdec:	ldr	x0, [x19, #320]
   2bdf0:	add	x0, x0, #0x1
   2bdf4:	str	x0, [x19, #320]
   2bdf8:	b	2bc4c <__asan_backtrace_create_state@@Base+0x39b4>
   2bdfc:	ldr	x0, [x23, #8]
   2be00:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2be04:	add	x1, x1, #0x818
   2be08:	ldr	x22, [x0]
   2be0c:	mov	x0, x22
   2be10:	bl	67f0 <__asan_internal_strcmp@plt>
   2be14:	cbz	w0, 2c5f8 <__asan_backtrace_create_state@@Base+0x4360>
   2be18:	ldr	w0, [x20]
   2be1c:	cmp	w0, #0x39
   2be20:	b.eq	2bed0 <__asan_backtrace_create_state@@Base+0x3c38>  // b.none
   2be24:	cbz	x22, 2be54 <__asan_backtrace_create_state@@Base+0x3bbc>
   2be28:	mov	x0, x22
   2be2c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2be30:	add	x1, x1, #0x820
   2be34:	bl	67f0 <__asan_internal_strcmp@plt>
   2be38:	mov	w3, w0
   2be3c:	cbz	w0, 2ca74 <__asan_backtrace_create_state@@Base+0x47dc>
   2be40:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2be44:	mov	x0, x22
   2be48:	add	x1, x1, #0x920
   2be4c:	bl	67f0 <__asan_internal_strcmp@plt>
   2be50:	cbz	w0, 2be5c <__asan_backtrace_create_state@@Base+0x3bc4>
   2be54:	ldr	w0, [x23]
   2be58:	b	2a748 <__asan_backtrace_create_state@@Base+0x24b0>
   2be5c:	mov	w3, #0x0                   	// #0
   2be60:	b	2be70 <__asan_backtrace_create_state@@Base+0x3bd8>
   2be64:	add	w3, w3, #0x1
   2be68:	ldr	x20, [x20, #16]
   2be6c:	cbz	x20, 2c628 <__asan_backtrace_create_state@@Base+0x4390>
   2be70:	ldr	w0, [x20]
   2be74:	cmp	w0, #0x2f
   2be78:	b.ne	2c628 <__asan_backtrace_create_state@@Base+0x4390>  // b.any
   2be7c:	ldr	x0, [x20, #8]
   2be80:	cbz	x0, 2c628 <__asan_backtrace_create_state@@Base+0x4390>
   2be84:	ldr	w1, [x0]
   2be88:	cmp	w1, #0x4b
   2be8c:	b.ne	2be64 <__asan_backtrace_create_state@@Base+0x3bcc>  // b.any
   2be90:	ldr	x1, [x0, #8]
   2be94:	mov	x0, x19
   2be98:	bl	289f0 <__asan_backtrace_create_state@@Base+0x758>
   2be9c:	mov	w1, #0x0                   	// #0
   2bea0:	cbnz	x0, 2bebc <__asan_backtrace_create_state@@Base+0x3c24>
   2bea4:	b	2bec8 <__asan_backtrace_create_state@@Base+0x3c30>
   2bea8:	ldr	x2, [x0, #8]
   2beac:	cbz	x2, 2bec8 <__asan_backtrace_create_state@@Base+0x3c30>
   2beb0:	ldr	x0, [x0, #16]
   2beb4:	add	w1, w1, #0x1
   2beb8:	cbz	x0, 2bec8 <__asan_backtrace_create_state@@Base+0x3c30>
   2bebc:	ldr	w2, [x0]
   2bec0:	cmp	w2, #0x2f
   2bec4:	b.eq	2bea8 <__asan_backtrace_create_state@@Base+0x3c10>  // b.none
   2bec8:	add	w3, w3, w1
   2becc:	b	2be68 <__asan_backtrace_create_state@@Base+0x3bd0>
   2bed0:	ldr	x2, [x20, #8]
   2bed4:	mov	w1, w21
   2bed8:	mov	x0, x19
   2bedc:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2bee0:	mov	x2, x23
   2bee4:	mov	w1, w21
   2bee8:	mov	x0, x19
   2beec:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2bef0:	ldp	x21, x22, [sp, #32]
   2bef4:	ldp	x23, x24, [sp, #48]
   2bef8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2befc:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2bf00:	add	x20, x20, #0x5e8
   2bf04:	mov	x0, x20
   2bf08:	bl	64b0 <__asan_internal_strlen@plt>
   2bf0c:	cbz	x0, 2bf78 <__asan_backtrace_create_state@@Base+0x3ce0>
   2bf10:	add	x24, x0, x20
   2bf14:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2bf18:	mov	w20, #0x7b                  	// #123
   2bf1c:	add	x22, x22, #0x5e9
   2bf20:	ldr	x1, [x19, #256]
   2bf24:	b	2bf48 <__asan_backtrace_create_state@@Base+0x3cb0>
   2bf28:	mov	x0, x1
   2bf2c:	add	x1, x1, #0x1
   2bf30:	str	x1, [x19, #256]
   2bf34:	cmp	x24, x22
   2bf38:	strb	w20, [x19, x0]
   2bf3c:	strb	w20, [x19, #264]
   2bf40:	b.eq	2bf78 <__asan_backtrace_create_state@@Base+0x3ce0>  // b.none
   2bf44:	ldrb	w20, [x22], #1
   2bf48:	cmp	x1, #0xff
   2bf4c:	b.ne	2bf28 <__asan_backtrace_create_state@@Base+0x3c90>  // b.any
   2bf50:	ldp	x3, x2, [x19, #272]
   2bf54:	strb	wzr, [x19, #255]
   2bf58:	mov	x0, x19
   2bf5c:	blr	x3
   2bf60:	ldr	x2, [x19, #320]
   2bf64:	mov	x1, #0x1                   	// #1
   2bf68:	mov	x0, #0x0                   	// #0
   2bf6c:	add	x2, x2, x1
   2bf70:	str	x2, [x19, #320]
   2bf74:	b	2bf30 <__asan_backtrace_create_state@@Base+0x3c98>
   2bf78:	ldr	w2, [x23, #16]
   2bf7c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   2bf80:	add	x1, x1, #0xa90
   2bf84:	add	x20, sp, #0x70
   2bf88:	add	w2, w2, #0x1
   2bf8c:	mov	x0, x20
   2bf90:	bl	65f0 <sprintf@plt>
   2bf94:	mov	x0, x20
   2bf98:	bl	64b0 <__asan_internal_strlen@plt>
   2bf9c:	cbz	x0, 2c000 <__asan_backtrace_create_state@@Base+0x3d68>
   2bfa0:	add	x24, x20, x0
   2bfa4:	ldr	x1, [x19, #256]
   2bfa8:	b	2bfcc <__asan_backtrace_create_state@@Base+0x3d34>
   2bfac:	mov	x0, x1
   2bfb0:	add	x1, x1, #0x1
   2bfb4:	str	x1, [x19, #256]
   2bfb8:	add	x20, x20, #0x1
   2bfbc:	strb	w22, [x19, x0]
   2bfc0:	cmp	x24, x20
   2bfc4:	strb	w22, [x19, #264]
   2bfc8:	b.eq	2c000 <__asan_backtrace_create_state@@Base+0x3d68>  // b.none
   2bfcc:	ldrb	w22, [x20]
   2bfd0:	cmp	x1, #0xff
   2bfd4:	b.ne	2bfac <__asan_backtrace_create_state@@Base+0x3d14>  // b.any
   2bfd8:	ldp	x3, x2, [x19, #272]
   2bfdc:	strb	wzr, [x19, #255]
   2bfe0:	mov	x0, x19
   2bfe4:	blr	x3
   2bfe8:	ldr	x2, [x19, #320]
   2bfec:	mov	x1, #0x1                   	// #1
   2bff0:	mov	x0, #0x0                   	// #0
   2bff4:	add	x2, x2, x1
   2bff8:	str	x2, [x19, #320]
   2bffc:	b	2bfb4 <__asan_backtrace_create_state@@Base+0x3d1c>
   2c000:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c004:	add	x20, x20, #0x5f8
   2c008:	mov	x0, x20
   2c00c:	bl	64b0 <__asan_internal_strlen@plt>
   2c010:	cbz	x0, 2c07c <__asan_backtrace_create_state@@Base+0x3de4>
   2c014:	add	x24, x0, x20
   2c018:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c01c:	mov	w20, #0x7d                  	// #125
   2c020:	add	x22, x22, #0x5f9
   2c024:	ldr	x1, [x19, #256]
   2c028:	b	2c04c <__asan_backtrace_create_state@@Base+0x3db4>
   2c02c:	mov	x0, x1
   2c030:	add	x1, x1, #0x1
   2c034:	str	x1, [x19, #256]
   2c038:	cmp	x24, x22
   2c03c:	strb	w20, [x19, x0]
   2c040:	strb	w20, [x19, #264]
   2c044:	b.eq	2c07c <__asan_backtrace_create_state@@Base+0x3de4>  // b.none
   2c048:	ldrb	w20, [x22], #1
   2c04c:	cmp	x1, #0xff
   2c050:	b.ne	2c02c <__asan_backtrace_create_state@@Base+0x3d94>  // b.any
   2c054:	ldp	x3, x2, [x19, #272]
   2c058:	strb	wzr, [x19, #255]
   2c05c:	mov	x0, x19
   2c060:	blr	x3
   2c064:	ldr	x2, [x19, #320]
   2c068:	mov	x1, #0x1                   	// #1
   2c06c:	mov	x0, #0x0                   	// #0
   2c070:	add	x2, x2, x1
   2c074:	str	x2, [x19, #320]
   2c078:	b	2c034 <__asan_backtrace_create_state@@Base+0x3d9c>
   2c07c:	ldr	x23, [x23, #8]
   2c080:	b	28f2c <__asan_backtrace_create_state@@Base+0xc94>
   2c084:	ldp	x21, x22, [sp, #32]
   2c088:	ldp	x23, x24, [sp, #48]
   2c08c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c090:	ldr	x25, [x25, #16]
   2c094:	ldr	w5, [x25]
   2c098:	cmp	w5, #0x47
   2c09c:	b.eq	2c790 <__asan_backtrace_create_state@@Base+0x44f8>  // b.none
   2c0a0:	ubfiz	x3, x24, #5, #32
   2c0a4:	sub	w0, w5, #0x1c
   2c0a8:	mov	x1, #0x1f                  	// #31
   2c0ac:	add	x3, x23, x3
   2c0b0:	cmp	w0, #0x34
   2c0b4:	mov	x2, #0x1                   	// #1
   2c0b8:	movk	x1, #0x1a, lsl #48
   2c0bc:	b.hi	2a360 <__asan_backtrace_create_state@@Base+0x20c8>  // b.pmore
   2c0c0:	lsl	x0, x2, x0
   2c0c4:	tst	x0, x1
   2c0c8:	b.eq	2a360 <__asan_backtrace_create_state@@Base+0x20c8>  // b.none
   2c0cc:	cmp	w24, #0x4
   2c0d0:	b.eq	2c1b0 <__asan_backtrace_create_state@@Base+0x3f18>  // b.none
   2c0d4:	ldp	x8, x9, [x3, #-32]
   2c0d8:	stur	x25, [x3, #-24]
   2c0dc:	ldp	x4, x5, [x3, #-16]
   2c0e0:	stur	wzr, [x3, #-16]
   2c0e4:	stp	x8, x9, [x3]
   2c0e8:	sub	x0, x3, #0x20
   2c0ec:	add	w24, w24, #0x1
   2c0f0:	ldr	x25, [x25, #8]
   2c0f4:	stp	x4, x5, [x3, #16]
   2c0f8:	ldr	w5, [x25]
   2c0fc:	stp	x6, x0, [x3, #-8]
   2c100:	sub	w0, w5, #0x1c
   2c104:	str	x3, [x19, #296]
   2c108:	cmp	w0, #0x34
   2c10c:	add	x3, x3, #0x20
   2c110:	b.ls	2c0c0 <__asan_backtrace_create_state@@Base+0x3e28>  // b.plast
   2c114:	b	2a360 <__asan_backtrace_create_state@@Base+0x20c8>
   2c118:	mov	w0, #0x1                   	// #1
   2c11c:	ldp	x21, x22, [sp, #32]
   2c120:	ldp	x23, x24, [sp, #48]
   2c124:	str	w0, [x19, #304]
   2c128:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c12c:	ldr	x4, [x19, #288]
   2c130:	add	x0, sp, #0x70
   2c134:	str	x0, [x19, #296]
   2c138:	mov	w1, w22
   2c13c:	mov	x0, x19
   2c140:	stp	x3, x20, [sp, #112]
   2c144:	str	wzr, [sp, #128]
   2c148:	str	x4, [sp, #136]
   2c14c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2c150:	ldr	w0, [sp, #128]
   2c154:	ldr	x1, [sp, #112]
   2c158:	str	x1, [x19, #296]
   2c15c:	cbnz	w0, 2c860 <__asan_backtrace_create_state@@Base+0x45c8>
   2c160:	ldr	x1, [x19, #256]
   2c164:	cmp	x1, #0xff
   2c168:	b.ne	2c190 <__asan_backtrace_create_state@@Base+0x3ef8>  // b.any
   2c16c:	ldp	x3, x2, [x19, #272]
   2c170:	strb	wzr, [x19, #255]
   2c174:	mov	x0, x19
   2c178:	blr	x3
   2c17c:	str	xzr, [x19, #256]
   2c180:	ldr	x0, [x19, #320]
   2c184:	mov	x1, #0x0                   	// #0
   2c188:	add	x0, x0, #0x1
   2c18c:	str	x0, [x19, #320]
   2c190:	add	x0, x1, #0x1
   2c194:	str	x0, [x19, #256]
   2c198:	mov	w0, #0x20                  	// #32
   2c19c:	strb	w0, [x19, x1]
   2c1a0:	strb	w0, [x19, #264]
   2c1a4:	ldr	x3, [x19, #296]
   2c1a8:	b	29558 <__asan_backtrace_create_state@@Base+0x12c0>
   2c1ac:	str	x3, [x19, #296]
   2c1b0:	mov	w0, #0x1                   	// #1
   2c1b4:	ldp	x21, x22, [sp, #32]
   2c1b8:	ldp	x23, x24, [sp, #48]
   2c1bc:	ldp	x25, x26, [sp, #64]
   2c1c0:	str	w0, [x19, #304]
   2c1c4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c1c8:	ldrb	w0, [x0]
   2c1cc:	sub	w1, w0, #0x72
   2c1d0:	sub	w0, w0, #0x63
   2c1d4:	and	w1, w1, #0xff
   2c1d8:	and	w0, w0, #0xff
   2c1dc:	cmp	w1, #0x1
   2c1e0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   2c1e4:	b.hi	29ed0 <__asan_backtrace_create_state@@Base+0x1c38>  // b.pmore
   2c1e8:	mov	w1, w21
   2c1ec:	mov	x0, x19
   2c1f0:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2c1f4:	ldr	x1, [x19, #256]
   2c1f8:	cmp	x1, #0xff
   2c1fc:	b.ne	2c224 <__asan_backtrace_create_state@@Base+0x3f8c>  // b.any
   2c200:	ldp	x3, x2, [x19, #272]
   2c204:	strb	wzr, [x19, #255]
   2c208:	mov	x0, x19
   2c20c:	blr	x3
   2c210:	str	xzr, [x19, #256]
   2c214:	ldr	x0, [x19, #320]
   2c218:	mov	x1, #0x0                   	// #0
   2c21c:	add	x0, x0, #0x1
   2c220:	str	x0, [x19, #320]
   2c224:	add	x0, x1, #0x1
   2c228:	str	x0, [x19, #256]
   2c22c:	mov	w0, #0x3c                  	// #60
   2c230:	strb	w0, [x19, x1]
   2c234:	strb	w0, [x19, #264]
   2c238:	mov	w1, w21
   2c23c:	mov	x0, x19
   2c240:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c244:	ldr	x2, [x20, #16]
   2c248:	add	x22, x22, #0x830
   2c24c:	ldr	x2, [x2, #8]
   2c250:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2c254:	mov	x0, x22
   2c258:	bl	64b0 <__asan_internal_strlen@plt>
   2c25c:	cbz	x0, 2c438 <__asan_backtrace_create_state@@Base+0x41a0>
   2c260:	add	x24, x0, x22
   2c264:	mov	w23, #0x3e                  	// #62
   2c268:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c26c:	add	x22, x22, #0x831
   2c270:	ldr	x1, [x19, #256]
   2c274:	b	2c298 <__asan_backtrace_create_state@@Base+0x4000>
   2c278:	mov	x0, x1
   2c27c:	add	x1, x1, #0x1
   2c280:	str	x1, [x19, #256]
   2c284:	cmp	x22, x24
   2c288:	strb	w23, [x19, x0]
   2c28c:	strb	w23, [x19, #264]
   2c290:	b.eq	2c438 <__asan_backtrace_create_state@@Base+0x41a0>  // b.none
   2c294:	ldrb	w23, [x22], #1
   2c298:	cmp	x1, #0xff
   2c29c:	b.ne	2c278 <__asan_backtrace_create_state@@Base+0x3fe0>  // b.any
   2c2a0:	ldp	x3, x2, [x19, #272]
   2c2a4:	strb	wzr, [x19, #255]
   2c2a8:	mov	x0, x19
   2c2ac:	blr	x3
   2c2b0:	ldr	x2, [x19, #320]
   2c2b4:	mov	x1, #0x1                   	// #1
   2c2b8:	mov	x0, #0x0                   	// #0
   2c2bc:	add	x2, x2, x1
   2c2c0:	str	x2, [x19, #320]
   2c2c4:	b	2c280 <__asan_backtrace_create_state@@Base+0x3fe8>
   2c2c8:	ldr	x2, [x20, #8]
   2c2cc:	add	x3, x20, #0x10
   2c2d0:	mov	w1, w21
   2c2d4:	mov	x0, x19
   2c2d8:	bl	2e110 <__asan_backtrace_create_state@@Base+0x5e78>
   2c2dc:	cbnz	w0, 2c760 <__asan_backtrace_create_state@@Base+0x44c8>
   2c2e0:	stp	x25, x26, [sp, #64]
   2c2e4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c2e8:	add	x1, x1, #0x848
   2c2ec:	ldp	x25, x3, [x20, #8]
   2c2f0:	ldr	x0, [x25, #8]
   2c2f4:	ldp	x23, x2, [x3, #8]
   2c2f8:	ldr	x0, [x0]
   2c2fc:	ldp	x24, x22, [x2, #8]
   2c300:	bl	67f0 <__asan_internal_strcmp@plt>
   2c304:	cbnz	w0, 2c884 <__asan_backtrace_create_state@@Base+0x45ec>
   2c308:	mov	x2, x23
   2c30c:	mov	w1, w21
   2c310:	mov	x0, x19
   2c314:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2c318:	mov	x2, x25
   2c31c:	mov	w1, w21
   2c320:	mov	x0, x19
   2c324:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2c328:	mov	x2, x24
   2c32c:	mov	w1, w21
   2c330:	mov	x0, x19
   2c334:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c338:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2c33c:	add	x20, x20, #0x850
   2c340:	mov	x0, x20
   2c344:	bl	64b0 <__asan_internal_strlen@plt>
   2c348:	mov	x1, x20
   2c34c:	mov	x2, x0
   2c350:	mov	x0, x19
   2c354:	bl	28508 <__asan_backtrace_create_state@@Base+0x270>
   2c358:	mov	x2, x22
   2c35c:	mov	w1, w21
   2c360:	mov	x0, x19
   2c364:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2c368:	ldp	x21, x22, [sp, #32]
   2c36c:	ldp	x23, x24, [sp, #48]
   2c370:	ldp	x25, x26, [sp, #64]
   2c374:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c378:	ldr	w4, [x19, #344]
   2c37c:	ldr	x5, [x19, #336]
   2c380:	cmp	w4, #0x0
   2c384:	b.le	2c934 <__asan_backtrace_create_state@@Base+0x469c>
   2c388:	sub	w3, w4, #0x1
   2c38c:	add	x1, x5, #0x10
   2c390:	mov	x2, x5
   2c394:	add	x3, x1, w3, uxtw #4
   2c398:	b	2c3a8 <__asan_backtrace_create_state@@Base+0x4110>
   2c39c:	add	x2, x2, #0x10
   2c3a0:	cmp	x3, x2
   2c3a4:	b.eq	2c934 <__asan_backtrace_create_state@@Base+0x469c>  // b.none
   2c3a8:	ldr	x1, [x2]
   2c3ac:	cmp	x0, x1
   2c3b0:	b.ne	2c39c <__asan_backtrace_create_state@@Base+0x4104>  // b.any
   2c3b4:	ldr	x4, [x19, #328]
   2c3b8:	mov	x1, x4
   2c3bc:	cbnz	x4, 2c3d8 <__asan_backtrace_create_state@@Base+0x4140>
   2c3c0:	b	2c76c <__asan_backtrace_create_state@@Base+0x44d4>
   2c3c4:	cmp	x4, x1
   2c3c8:	ccmp	x3, x20, #0x0, ne  // ne = any
   2c3cc:	b.eq	2c3e4 <__asan_backtrace_create_state@@Base+0x414c>  // b.none
   2c3d0:	ldr	x1, [x1, #8]
   2c3d4:	cbz	x1, 2c76c <__asan_backtrace_create_state@@Base+0x44d4>
   2c3d8:	ldr	x3, [x1]
   2c3dc:	cmp	x3, x0
   2c3e0:	b.ne	2c3c4 <__asan_backtrace_create_state@@Base+0x412c>  // b.any
   2c3e4:	add	x1, x0, #0x8
   2c3e8:	mov	x0, x19
   2c3ec:	bl	289c0 <__asan_backtrace_create_state@@Base+0x728>
   2c3f0:	cbz	x0, 28d00 <__asan_backtrace_create_state@@Base+0xa68>
   2c3f4:	mov	w22, #0x0                   	// #0
   2c3f8:	ldr	w1, [x0]
   2c3fc:	cmp	w1, #0x2f
   2c400:	b.ne	28e84 <__asan_backtrace_create_state@@Base+0xbec>  // b.any
   2c404:	ldr	w1, [x19, #316]
   2c408:	tbnz	w1, #31, 2cb98 <__asan_backtrace_create_state@@Base+0x4900>
   2c40c:	bl	28980 <__asan_backtrace_create_state@@Base+0x6e8>
   2c410:	cbz	x0, 2cb00 <__asan_backtrace_create_state@@Base+0x4868>
   2c414:	ldr	w1, [x0]
   2c418:	b	28e84 <__asan_backtrace_create_state@@Base+0xbec>
   2c41c:	mov	w1, w21
   2c420:	mov	x2, x20
   2c424:	mov	x0, x19
   2c428:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2c42c:	ldp	x21, x22, [sp, #32]
   2c430:	ldp	x23, x24, [sp, #48]
   2c434:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c438:	ldr	x2, [x20, #16]
   2c43c:	mov	w1, w21
   2c440:	mov	x0, x19
   2c444:	ldr	x2, [x2, #16]
   2c448:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2c44c:	ldr	x1, [x19, #256]
   2c450:	cmp	x1, #0xff
   2c454:	b.ne	2c47c <__asan_backtrace_create_state@@Base+0x41e4>  // b.any
   2c458:	ldp	x3, x2, [x19, #272]
   2c45c:	strb	wzr, [x19, #255]
   2c460:	mov	x0, x19
   2c464:	blr	x3
   2c468:	str	xzr, [x19, #256]
   2c46c:	ldr	x0, [x19, #320]
   2c470:	mov	x1, #0x0                   	// #0
   2c474:	add	x0, x0, #0x1
   2c478:	str	x0, [x19, #320]
   2c47c:	add	x0, x1, #0x1
   2c480:	str	x0, [x19, #256]
   2c484:	mov	w0, #0x29                  	// #41
   2c488:	strb	w0, [x19, x1]
   2c48c:	strb	w0, [x19, #264]
   2c490:	ldp	x21, x22, [sp, #32]
   2c494:	ldp	x23, x24, [sp, #48]
   2c498:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c49c:	sub	w1, w0, #0x61
   2c4a0:	and	w1, w1, #0xff
   2c4a4:	cmp	w1, #0x5
   2c4a8:	b.hi	2ca14 <__asan_backtrace_create_state@@Base+0x477c>  // b.pmore
   2c4ac:	sub	w0, w0, #0x57
   2c4b0:	b	2b6ec <__asan_backtrace_create_state@@Base+0x3454>
   2c4b4:	ldp	x21, x22, [sp, #32]
   2c4b8:	ldp	x23, x24, [sp, #48]
   2c4bc:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c4c0:	ldr	w1, [x19, #316]
   2c4c4:	tbnz	w1, #31, 2b7c8 <__asan_backtrace_create_state@@Base+0x3530>
   2c4c8:	bl	28980 <__asan_backtrace_create_state@@Base+0x6e8>
   2c4cc:	mov	x2, x0
   2c4d0:	cbnz	x0, 2b7c8 <__asan_backtrace_create_state@@Base+0x3530>
   2c4d4:	b	28d00 <__asan_backtrace_create_state@@Base+0xa68>
   2c4d8:	ldp	x3, x2, [x19, #272]
   2c4dc:	strb	wzr, [x19, #255]
   2c4e0:	mov	x1, x0
   2c4e4:	mov	x0, x19
   2c4e8:	blr	x3
   2c4ec:	ldr	x0, [x19, #320]
   2c4f0:	mov	w2, #0x20                  	// #32
   2c4f4:	mov	x1, #0x1                   	// #1
   2c4f8:	strb	w2, [x19]
   2c4fc:	add	x0, x0, x1
   2c500:	str	x0, [x19, #320]
   2c504:	b	2a4b8 <__asan_backtrace_create_state@@Base+0x2220>
   2c508:	ldp	x3, x2, [x19, #272]
   2c50c:	strb	wzr, [x19, #255]
   2c510:	mov	x1, x0
   2c514:	mov	x0, x19
   2c518:	blr	x3
   2c51c:	ldr	x0, [x19, #320]
   2c520:	mov	w2, #0x20                  	// #32
   2c524:	mov	x1, #0x1                   	// #1
   2c528:	strb	w2, [x19]
   2c52c:	add	x0, x0, x1
   2c530:	str	x0, [x19, #320]
   2c534:	b	2a47c <__asan_backtrace_create_state@@Base+0x21e4>
   2c538:	ldp	x21, x22, [sp, #32]
   2c53c:	ldp	x23, x24, [sp, #48]
   2c540:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c544:	ldr	x1, [x19, #256]
   2c548:	cmp	x1, #0xff
   2c54c:	b.ne	2c574 <__asan_backtrace_create_state@@Base+0x42dc>  // b.any
   2c550:	ldp	x3, x2, [x19, #272]
   2c554:	strb	wzr, [x19, #255]
   2c558:	mov	x0, x19
   2c55c:	blr	x3
   2c560:	str	xzr, [x19, #256]
   2c564:	ldr	x0, [x19, #320]
   2c568:	mov	x1, #0x0                   	// #0
   2c56c:	add	x0, x0, #0x1
   2c570:	str	x0, [x19, #320]
   2c574:	add	x0, x1, #0x1
   2c578:	str	x0, [x19, #256]
   2c57c:	mov	w2, #0x20                  	// #32
   2c580:	strb	w2, [x19, x1]
   2c584:	strb	w2, [x19, #264]
   2c588:	b	2ba94 <__asan_backtrace_create_state@@Base+0x37fc>
   2c58c:	cmp	x1, #0xff
   2c590:	b.ne	2c5b8 <__asan_backtrace_create_state@@Base+0x4320>  // b.any
   2c594:	ldp	x3, x2, [x19, #272]
   2c598:	strb	wzr, [x19, #255]
   2c59c:	mov	x0, x19
   2c5a0:	blr	x3
   2c5a4:	str	xzr, [x19, #256]
   2c5a8:	ldr	x0, [x19, #320]
   2c5ac:	mov	x1, #0x0                   	// #0
   2c5b0:	add	x0, x0, #0x1
   2c5b4:	str	x0, [x19, #320]
   2c5b8:	add	x0, x1, #0x1
   2c5bc:	str	x0, [x19, #256]
   2c5c0:	mov	w2, #0x20                  	// #32
   2c5c4:	strb	w2, [x19, x1]
   2c5c8:	strb	w2, [x19, #264]
   2c5cc:	b	2ba2c <__asan_backtrace_create_state@@Base+0x3794>
   2c5d0:	ldp	x21, x22, [sp, #32]
   2c5d4:	ldp	x23, x24, [sp, #48]
   2c5d8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c5dc:	ldp	x21, x22, [sp, #32]
   2c5e0:	ldp	x23, x24, [sp, #48]
   2c5e4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c5e8:	ldp	x21, x22, [sp, #32]
   2c5ec:	ldp	x23, x24, [sp, #48]
   2c5f0:	ldp	x25, x26, [sp, #64]
   2c5f4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c5f8:	ldr	w0, [x20]
   2c5fc:	cmp	w0, #0x3
   2c600:	b.ne	2be1c <__asan_backtrace_create_state@@Base+0x3b84>  // b.any
   2c604:	ldr	x0, [x20, #8]
   2c608:	ldr	w1, [x0]
   2c60c:	cmp	w1, #0x1
   2c610:	b.ne	2be24 <__asan_backtrace_create_state@@Base+0x3b8c>  // b.any
   2c614:	ldr	x1, [x20, #16]
   2c618:	ldr	w1, [x1]
   2c61c:	cmp	w1, #0x29
   2c620:	csel	x20, x20, x0, ne  // ne = any
   2c624:	b	2be24 <__asan_backtrace_create_state@@Base+0x3b8c>
   2c628:	mov	w1, w3
   2c62c:	mov	x0, x19
   2c630:	bl	28bb0 <__asan_backtrace_create_state@@Base+0x918>
   2c634:	ldp	x21, x22, [sp, #32]
   2c638:	ldp	x23, x24, [sp, #48]
   2c63c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c640:	ldp	x21, x22, [sp, #32]
   2c644:	ldp	x23, x24, [sp, #48]
   2c648:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c64c:	ldr	x2, [x20, #8]
   2c650:	mov	w1, w21
   2c654:	mov	x0, x19
   2c658:	adrp	x20, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   2c65c:	add	x20, x20, #0x2c8
   2c660:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2c664:	mov	x0, x20
   2c668:	bl	64b0 <__asan_internal_strlen@plt>
   2c66c:	mov	x1, x20
   2c670:	mov	x2, x0
   2c674:	mov	x0, x19
   2c678:	bl	28508 <__asan_backtrace_create_state@@Base+0x270>
   2c67c:	ldp	x21, x22, [sp, #32]
   2c680:	ldp	x23, x24, [sp, #48]
   2c684:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c688:	ldr	x0, [x20, #8]
   2c68c:	add	x1, x22, #0x838
   2c690:	ldr	x0, [x0, #8]
   2c694:	ldr	x0, [x0]
   2c698:	bl	67f0 <__asan_internal_strcmp@plt>
   2c69c:	cbnz	w0, 2cac0 <__asan_backtrace_create_state@@Base+0x4828>
   2c6a0:	ldr	x2, [x20, #16]
   2c6a4:	mov	w1, w21
   2c6a8:	mov	x0, x19
   2c6ac:	ldr	x2, [x2, #16]
   2c6b0:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2c6b4:	b	29fe8 <__asan_backtrace_create_state@@Base+0x1d50>
   2c6b8:	sub	x22, x22, #0x2
   2c6bc:	ldp	x23, x24, [sp, #48]
   2c6c0:	ldp	x25, x26, [sp, #64]
   2c6c4:	str	x22, [x19, #256]
   2c6c8:	ldp	x21, x22, [sp, #32]
   2c6cc:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c6d0:	ldr	x0, [x0, #8]
   2c6d4:	ldr	w1, [x0, #16]
   2c6d8:	cmp	w1, #0x1
   2c6dc:	b.eq	2cae4 <__asan_backtrace_create_state@@Base+0x484c>  // b.none
   2c6e0:	ldp	x21, x22, [sp, #32]
   2c6e4:	ldp	x23, x24, [sp, #48]
   2c6e8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c6ec:	ldr	x0, [x20, #16]
   2c6f0:	b	29f20 <__asan_backtrace_create_state@@Base+0x1c88>
   2c6f4:	ldr	x1, [x0, #8]
   2c6f8:	ldr	w2, [x1, #16]
   2c6fc:	cmp	w2, #0x1
   2c700:	b.ne	29ef4 <__asan_backtrace_create_state@@Base+0x1c5c>  // b.any
   2c704:	ldr	x1, [x1, #8]
   2c708:	ldrb	w1, [x1]
   2c70c:	cmp	w1, #0x3e
   2c710:	b.ne	29ef4 <__asan_backtrace_create_state@@Base+0x1c5c>  // b.any
   2c714:	ldr	x1, [x19, #256]
   2c718:	cmp	x1, #0xff
   2c71c:	b.ne	2c744 <__asan_backtrace_create_state@@Base+0x44ac>  // b.any
   2c720:	ldp	x3, x2, [x19, #272]
   2c724:	strb	wzr, [x19, #255]
   2c728:	mov	x0, x19
   2c72c:	blr	x3
   2c730:	str	xzr, [x19, #256]
   2c734:	ldr	x0, [x19, #320]
   2c738:	mov	x1, #0x0                   	// #0
   2c73c:	add	x0, x0, #0x1
   2c740:	str	x0, [x19, #320]
   2c744:	add	x0, x1, #0x1
   2c748:	str	x0, [x19, #256]
   2c74c:	mov	w0, #0x28                  	// #40
   2c750:	strb	w0, [x19, x1]
   2c754:	strb	w0, [x19, #264]
   2c758:	ldr	x0, [x20, #8]
   2c75c:	b	29ef4 <__asan_backtrace_create_state@@Base+0x1c5c>
   2c760:	ldp	x21, x22, [sp, #32]
   2c764:	ldp	x23, x24, [sp, #48]
   2c768:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c76c:	ldr	x2, [x2, #8]
   2c770:	add	x1, x0, #0x8
   2c774:	ldr	x23, [x19, #288]
   2c778:	str	x2, [x19, #288]
   2c77c:	mov	x0, x19
   2c780:	bl	289c0 <__asan_backtrace_create_state@@Base+0x728>
   2c784:	cbz	x0, 2cb04 <__asan_backtrace_create_state@@Base+0x486c>
   2c788:	mov	w22, #0x1                   	// #1
   2c78c:	b	2c3f8 <__asan_backtrace_create_state@@Base+0x4160>
   2c790:	ldr	x25, [x25, #8]
   2c794:	cbz	x25, 2c1b0 <__asan_backtrace_create_state@@Base+0x3f18>
   2c798:	ldr	w5, [x25]
   2c79c:	b	2c0a0 <__asan_backtrace_create_state@@Base+0x3e08>
   2c7a0:	ldr	x0, [x22, #8]
   2c7a4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c7a8:	mov	x2, #0x6                   	// #6
   2c7ac:	add	x1, x1, #0x600
   2c7b0:	bl	6830 <__asan_internal_strncmp@plt>
   2c7b4:	cbnz	w0, 2a454 <__asan_backtrace_create_state@@Base+0x21bc>
   2c7b8:	ldr	x2, [x20, #16]
   2c7bc:	mov	w1, w21
   2c7c0:	mov	x0, x19
   2c7c4:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c7c8:	add	x20, x20, #0x608
   2c7cc:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2c7d0:	mov	x0, x20
   2c7d4:	bl	64b0 <__asan_internal_strlen@plt>
   2c7d8:	mov	x1, x20
   2c7dc:	mov	x2, x0
   2c7e0:	mov	x0, x19
   2c7e4:	bl	28508 <__asan_backtrace_create_state@@Base+0x270>
   2c7e8:	b	2a4cc <__asan_backtrace_create_state@@Base+0x2234>
   2c7ec:	ldp	x21, x22, [sp, #32]
   2c7f0:	ldp	x23, x24, [sp, #48]
   2c7f4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c7f8:	ldp	x21, x22, [sp, #32]
   2c7fc:	ldp	x23, x24, [sp, #48]
   2c800:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c804:	ldr	x0, [x1, #16]
   2c808:	ldr	w0, [x0]
   2c80c:	cmp	w0, #0x29
   2c810:	b.eq	2c81c <__asan_backtrace_create_state@@Base+0x4584>  // b.none
   2c814:	mov	w0, #0x1                   	// #1
   2c818:	str	w0, [x19, #304]
   2c81c:	ldr	x2, [x1, #8]
   2c820:	mov	x0, x19
   2c824:	mov	w1, w21
   2c828:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2c82c:	b	29f30 <__asan_backtrace_create_state@@Base+0x1c98>
   2c830:	ldp	x21, x22, [sp, #32]
   2c834:	ldp	x23, x24, [sp, #48]
   2c838:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c83c:	ldp	x21, x22, [sp, #32]
   2c840:	ldp	x23, x24, [sp, #48]
   2c844:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c848:	ldp	x21, x22, [sp, #32]
   2c84c:	ldp	x23, x24, [sp, #48]
   2c850:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c854:	ldp	x21, x22, [sp, #32]
   2c858:	ldp	x23, x24, [sp, #48]
   2c85c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c860:	ldp	x21, x22, [sp, #32]
   2c864:	ldp	x23, x24, [sp, #48]
   2c868:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c86c:	ldp	x21, x22, [sp, #32]
   2c870:	ldp	x23, x24, [sp, #48]
   2c874:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c878:	ldp	x21, x22, [sp, #32]
   2c87c:	ldp	x23, x24, [sp, #48]
   2c880:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c884:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c888:	add	x20, x20, #0x858
   2c88c:	mov	x0, x20
   2c890:	bl	64b0 <__asan_internal_strlen@plt>
   2c894:	mov	x1, x20
   2c898:	mov	x2, x0
   2c89c:	mov	x0, x19
   2c8a0:	bl	28508 <__asan_backtrace_create_state@@Base+0x270>
   2c8a4:	ldr	x0, [x23, #8]
   2c8a8:	cbz	x0, 2c900 <__asan_backtrace_create_state@@Base+0x4668>
   2c8ac:	mov	w1, w21
   2c8b0:	mov	x2, x23
   2c8b4:	mov	x0, x19
   2c8b8:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2c8bc:	ldr	x1, [x19, #256]
   2c8c0:	cmp	x1, #0xff
   2c8c4:	b.ne	2c8ec <__asan_backtrace_create_state@@Base+0x4654>  // b.any
   2c8c8:	ldp	x3, x2, [x19, #272]
   2c8cc:	strb	wzr, [x19, #255]
   2c8d0:	mov	x0, x19
   2c8d4:	blr	x3
   2c8d8:	str	xzr, [x19, #256]
   2c8dc:	ldr	x0, [x19, #320]
   2c8e0:	mov	x1, #0x0                   	// #0
   2c8e4:	add	x0, x0, #0x1
   2c8e8:	str	x0, [x19, #320]
   2c8ec:	add	x0, x1, #0x1
   2c8f0:	str	x0, [x19, #256]
   2c8f4:	mov	w0, #0x20                  	// #32
   2c8f8:	strb	w0, [x19, x1]
   2c8fc:	strb	w0, [x19, #264]
   2c900:	mov	x2, x24
   2c904:	mov	w1, w21
   2c908:	mov	x0, x19
   2c90c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2c910:	cbz	x22, 2cad4 <__asan_backtrace_create_state@@Base+0x483c>
   2c914:	mov	x2, x22
   2c918:	mov	w1, w21
   2c91c:	mov	x0, x19
   2c920:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2c924:	ldp	x21, x22, [sp, #32]
   2c928:	ldp	x23, x24, [sp, #48]
   2c92c:	ldp	x25, x26, [sp, #64]
   2c930:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c934:	ldr	w1, [x19, #348]
   2c938:	cmp	w4, w1
   2c93c:	b.ge	2c9a4 <__asan_backtrace_create_state@@Base+0x470c>  // b.tcont
   2c940:	sbfiz	x1, x4, #4, #32
   2c944:	add	w2, w4, #0x1
   2c948:	ldr	x3, [x19, #288]
   2c94c:	str	w2, [x19, #344]
   2c950:	str	x0, [x5, x1]
   2c954:	add	x1, x5, w4, sxtw #4
   2c958:	add	x1, x1, #0x8
   2c95c:	cbz	x3, 2cb90 <__asan_backtrace_create_state@@Base+0x48f8>
   2c960:	ldr	w2, [x19, #360]
   2c964:	ldr	w6, [x19, #364]
   2c968:	sbfiz	x5, x2, #4, #32
   2c96c:	b	2c99c <__asan_backtrace_create_state@@Base+0x4704>
   2c970:	ldr	x4, [x19, #352]
   2c974:	add	w2, w2, #0x1
   2c978:	ldr	x7, [x3, #8]
   2c97c:	add	x4, x4, x5
   2c980:	str	w2, [x19, #360]
   2c984:	add	x5, x5, #0x10
   2c988:	str	x7, [x4, #8]
   2c98c:	str	x4, [x1]
   2c990:	mov	x1, x4
   2c994:	ldr	x3, [x3]
   2c998:	cbz	x3, 2cb90 <__asan_backtrace_create_state@@Base+0x48f8>
   2c99c:	cmp	w6, w2
   2c9a0:	b.gt	2c970 <__asan_backtrace_create_state@@Base+0x46d8>
   2c9a4:	mov	w0, #0x1                   	// #1
   2c9a8:	ldp	x21, x22, [sp, #32]
   2c9ac:	ldp	x23, x24, [sp, #48]
   2c9b0:	str	w0, [x19, #304]
   2c9b4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c9b8:	ldr	x2, [x20, #16]
   2c9bc:	mov	x0, x19
   2c9c0:	mov	w1, w21
   2c9c4:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2c9c8:	str	xzr, [x19, #296]
   2c9cc:	ldr	w0, [sp, #128]
   2c9d0:	cbz	w0, 297b8 <__asan_backtrace_create_state@@Base+0x1520>
   2c9d4:	ldp	x21, x22, [sp, #32]
   2c9d8:	ldp	x23, x24, [sp, #48]
   2c9dc:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2c9e0:	cmp	w22, #0x5
   2c9e4:	b.eq	2cb14 <__asan_backtrace_create_state@@Base+0x487c>  // b.none
   2c9e8:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2c9ec:	add	x20, x20, #0x870
   2c9f0:	mov	x0, x20
   2c9f4:	bl	64b0 <__asan_internal_strlen@plt>
   2c9f8:	mov	x1, x20
   2c9fc:	mov	x2, x0
   2ca00:	mov	x0, x19
   2ca04:	bl	28508 <__asan_backtrace_create_state@@Base+0x270>
   2ca08:	ldp	x21, x22, [sp, #32]
   2ca0c:	ldp	x23, x24, [sp, #48]
   2ca10:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2ca14:	cmp	x24, x21
   2ca18:	b.cs	2b658 <__asan_backtrace_create_state@@Base+0x33c0>  // b.hs, b.nlast
   2ca1c:	cmp	x2, #0xff
   2ca20:	ccmp	w0, w23, #0x0, ls  // ls = plast
   2ca24:	b.ne	2b658 <__asan_backtrace_create_state@@Base+0x33c0>  // b.any
   2ca28:	ldr	x1, [x19, #256]
   2ca2c:	and	w22, w2, #0xff
   2ca30:	cmp	x1, #0xff
   2ca34:	b.ne	2ca5c <__asan_backtrace_create_state@@Base+0x47c4>  // b.any
   2ca38:	ldp	x3, x2, [x19, #272]
   2ca3c:	strb	wzr, [x19, #255]
   2ca40:	mov	x0, x19
   2ca44:	blr	x3
   2ca48:	str	xzr, [x19, #256]
   2ca4c:	ldr	x0, [x19, #320]
   2ca50:	mov	x1, #0x0                   	// #0
   2ca54:	add	x0, x0, #0x1
   2ca58:	str	x0, [x19, #320]
   2ca5c:	add	x0, x1, #0x1
   2ca60:	str	x0, [x19, #256]
   2ca64:	strb	w22, [x19, x1]
   2ca68:	mov	x20, x24
   2ca6c:	strb	w22, [x19, #264]
   2ca70:	b	2b698 <__asan_backtrace_create_state@@Base+0x3400>
   2ca74:	mov	x1, x20
   2ca78:	mov	x0, x19
   2ca7c:	bl	289f0 <__asan_backtrace_create_state@@Base+0x758>
   2ca80:	cbnz	x0, 2ca9c <__asan_backtrace_create_state@@Base+0x4804>
   2ca84:	b	2caa8 <__asan_backtrace_create_state@@Base+0x4810>
   2ca88:	ldr	x1, [x0, #8]
   2ca8c:	cbz	x1, 2caa8 <__asan_backtrace_create_state@@Base+0x4810>
   2ca90:	ldr	x0, [x0, #16]
   2ca94:	add	w3, w3, #0x1
   2ca98:	cbz	x0, 2caa8 <__asan_backtrace_create_state@@Base+0x4810>
   2ca9c:	ldr	w1, [x0]
   2caa0:	cmp	w1, #0x2f
   2caa4:	b.eq	2ca88 <__asan_backtrace_create_state@@Base+0x47f0>  // b.none
   2caa8:	mov	w1, w3
   2caac:	mov	x0, x19
   2cab0:	bl	28bb0 <__asan_backtrace_create_state@@Base+0x918>
   2cab4:	ldp	x21, x22, [sp, #32]
   2cab8:	ldp	x23, x24, [sp, #48]
   2cabc:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2cac0:	ldr	x2, [x20, #8]
   2cac4:	mov	w1, w21
   2cac8:	mov	x0, x19
   2cacc:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2cad0:	b	2c6a0 <__asan_backtrace_create_state@@Base+0x4408>
   2cad4:	ldp	x21, x22, [sp, #32]
   2cad8:	ldp	x23, x24, [sp, #48]
   2cadc:	ldp	x25, x26, [sp, #64]
   2cae0:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2cae4:	ldr	x0, [x0, #8]
   2cae8:	ldrb	w0, [x0]
   2caec:	cmp	w0, #0x3e
   2caf0:	b.eq	2cb40 <__asan_backtrace_create_state@@Base+0x48a8>  // b.none
   2caf4:	ldp	x21, x22, [sp, #32]
   2caf8:	ldp	x23, x24, [sp, #48]
   2cafc:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2cb00:	cbz	w22, 28d00 <__asan_backtrace_create_state@@Base+0xa68>
   2cb04:	ldp	x21, x22, [sp, #32]
   2cb08:	str	x23, [x19, #288]
   2cb0c:	ldp	x23, x24, [sp, #48]
   2cb10:	b	28d08 <__asan_backtrace_create_state@@Base+0xa70>
   2cb14:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2cb18:	add	x20, x20, #0x868
   2cb1c:	mov	x0, x20
   2cb20:	bl	64b0 <__asan_internal_strlen@plt>
   2cb24:	mov	x1, x20
   2cb28:	mov	x2, x0
   2cb2c:	mov	x0, x19
   2cb30:	bl	28508 <__asan_backtrace_create_state@@Base+0x270>
   2cb34:	ldp	x21, x22, [sp, #32]
   2cb38:	ldp	x23, x24, [sp, #48]
   2cb3c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2cb40:	ldr	x1, [x19, #256]
   2cb44:	cmp	x1, #0xff
   2cb48:	b.ne	2cb70 <__asan_backtrace_create_state@@Base+0x48d8>  // b.any
   2cb4c:	ldp	x3, x2, [x19, #272]
   2cb50:	strb	wzr, [x19, #255]
   2cb54:	mov	x0, x19
   2cb58:	blr	x3
   2cb5c:	str	xzr, [x19, #256]
   2cb60:	ldr	x0, [x19, #320]
   2cb64:	mov	x1, #0x0                   	// #0
   2cb68:	add	x0, x0, #0x1
   2cb6c:	str	x0, [x19, #320]
   2cb70:	add	x0, x1, #0x1
   2cb74:	str	x0, [x19, #256]
   2cb78:	mov	w0, #0x29                  	// #41
   2cb7c:	strb	w0, [x19, x1]
   2cb80:	strb	w0, [x19, #264]
   2cb84:	ldp	x21, x22, [sp, #32]
   2cb88:	ldp	x23, x24, [sp, #48]
   2cb8c:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2cb90:	str	xzr, [x1]
   2cb94:	b	2c3e4 <__asan_backtrace_create_state@@Base+0x414c>
   2cb98:	ldr	w1, [x20]
   2cb9c:	ldr	x4, [x19, #296]
   2cba0:	cmp	w1, #0x2f
   2cba4:	csel	x20, x20, x0, ne  // ne = any
   2cba8:	b	28ea8 <__asan_backtrace_create_state@@Base+0xc10>
   2cbac:	ldr	x1, [x19, #256]
   2cbb0:	cmp	x1, #0xff
   2cbb4:	b.ne	2cbdc <__asan_backtrace_create_state@@Base+0x4944>  // b.any
   2cbb8:	ldp	x3, x2, [x19, #272]
   2cbbc:	strb	wzr, [x19, #255]
   2cbc0:	mov	x0, x19
   2cbc4:	blr	x3
   2cbc8:	str	xzr, [x19, #256]
   2cbcc:	ldr	x0, [x19, #320]
   2cbd0:	mov	x1, #0x0                   	// #0
   2cbd4:	add	x0, x0, #0x1
   2cbd8:	str	x0, [x19, #320]
   2cbdc:	add	x0, x1, #0x1
   2cbe0:	str	x0, [x19, #256]
   2cbe4:	mov	w0, #0x75                  	// #117
   2cbe8:	strb	w0, [x19, x1]
   2cbec:	strb	w0, [x19, #264]
   2cbf0:	ldp	x21, x22, [sp, #32]
   2cbf4:	ldp	x23, x24, [sp, #48]
   2cbf8:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2cbfc:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2cc00:	add	x20, x20, #0x860
   2cc04:	mov	x0, x20
   2cc08:	bl	64b0 <__asan_internal_strlen@plt>
   2cc0c:	mov	x1, x20
   2cc10:	mov	x2, x0
   2cc14:	mov	x0, x19
   2cc18:	bl	28508 <__asan_backtrace_create_state@@Base+0x270>
   2cc1c:	ldp	x21, x22, [sp, #32]
   2cc20:	ldp	x23, x24, [sp, #48]
   2cc24:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2cc28:	ldr	x1, [x19, #256]
   2cc2c:	cmp	x1, #0xff
   2cc30:	b.ne	2cc58 <__asan_backtrace_create_state@@Base+0x49c0>  // b.any
   2cc34:	ldp	x3, x2, [x19, #272]
   2cc38:	strb	wzr, [x19, #255]
   2cc3c:	mov	x0, x19
   2cc40:	blr	x3
   2cc44:	str	xzr, [x19, #256]
   2cc48:	ldr	x0, [x19, #320]
   2cc4c:	mov	x1, #0x0                   	// #0
   2cc50:	add	x0, x0, #0x1
   2cc54:	str	x0, [x19, #320]
   2cc58:	add	x0, x1, #0x1
   2cc5c:	str	x0, [x19, #256]
   2cc60:	mov	w0, #0x2d                  	// #45
   2cc64:	strb	w0, [x19, x1]
   2cc68:	strb	w0, [x19, #264]
   2cc6c:	b	2b914 <__asan_backtrace_create_state@@Base+0x367c>
   2cc70:	ldp	x21, x22, [sp, #32]
   2cc74:	ldp	x23, x24, [sp, #48]
   2cc78:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2cc7c:	adrp	x20, 36000 <__asan_backtrace_vector_release@@Base+0x320>
   2cc80:	add	x20, x20, #0x3a0
   2cc84:	mov	x0, x20
   2cc88:	bl	64b0 <__asan_internal_strlen@plt>
   2cc8c:	mov	x1, x20
   2cc90:	mov	x2, x0
   2cc94:	mov	x0, x19
   2cc98:	bl	28508 <__asan_backtrace_create_state@@Base+0x270>
   2cc9c:	ldp	x21, x22, [sp, #32]
   2cca0:	ldp	x23, x24, [sp, #48]
   2cca4:	b	28cd4 <__asan_backtrace_create_state@@Base+0xa3c>
   2cca8:	stp	x29, x30, [sp, #-48]!
   2ccac:	mov	x29, sp
   2ccb0:	stp	x19, x20, [sp, #16]
   2ccb4:	mov	x20, x0
   2ccb8:	cbz	x2, 2cd28 <__asan_backtrace_create_state@@Base+0x4a90>
   2ccbc:	ldr	w3, [x2, #4]
   2ccc0:	mov	x19, x2
   2ccc4:	cmp	w3, #0x1
   2ccc8:	b.gt	2cd28 <__asan_backtrace_create_state@@Base+0x4a90>
   2cccc:	ldr	w4, [x0, #308]
   2ccd0:	cmp	w4, #0x400
   2ccd4:	b.gt	2cd28 <__asan_backtrace_create_state@@Base+0x4a90>
   2ccd8:	add	w3, w3, #0x1
   2ccdc:	add	w4, w4, #0x1
   2cce0:	str	w3, [x2, #4]
   2cce4:	add	x3, sp, #0x20
   2cce8:	str	w4, [x0, #308]
   2ccec:	ldr	x4, [x0, #328]
   2ccf0:	str	x3, [x0, #328]
   2ccf4:	stp	x2, x4, [sp, #32]
   2ccf8:	bl	28c70 <__asan_backtrace_create_state@@Base+0x9d8>
   2ccfc:	ldr	w1, [x19, #4]
   2cd00:	ldr	x0, [sp, #40]
   2cd04:	str	x0, [x20, #328]
   2cd08:	ldr	w0, [x20, #308]
   2cd0c:	sub	w1, w1, #0x1
   2cd10:	str	w1, [x19, #4]
   2cd14:	sub	w0, w0, #0x1
   2cd18:	str	w0, [x20, #308]
   2cd1c:	ldp	x19, x20, [sp, #16]
   2cd20:	ldp	x29, x30, [sp], #48
   2cd24:	ret
   2cd28:	mov	w0, #0x1                   	// #1
   2cd2c:	str	w0, [x20, #304]
   2cd30:	ldp	x19, x20, [sp, #16]
   2cd34:	ldp	x29, x30, [sp], #48
   2cd38:	ret
   2cd3c:	nop
   2cd40:	stp	x29, x30, [sp, #-64]!
   2cd44:	mov	x29, sp
   2cd48:	stp	x19, x20, [sp, #16]
   2cd4c:	mov	x19, x0
   2cd50:	ldr	w0, [x2]
   2cd54:	stp	x21, x22, [sp, #32]
   2cd58:	mov	x20, x2
   2cd5c:	sub	w0, w0, #0x3
   2cd60:	mov	w21, w1
   2cd64:	cmp	w0, #0x4d
   2cd68:	b.ls	2cd88 <__asan_backtrace_create_state@@Base+0x4af0>  // b.plast
   2cd6c:	mov	x2, x20
   2cd70:	mov	w1, w21
   2cd74:	mov	x0, x19
   2cd78:	ldp	x19, x20, [sp, #16]
   2cd7c:	ldp	x21, x22, [sp, #32]
   2cd80:	ldp	x29, x30, [sp], #64
   2cd84:	b	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2cd88:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2cd8c:	add	x1, x1, #0x4a4
   2cd90:	ldrh	w0, [x1, w0, uxtw #1]
   2cd94:	adr	x1, 2cda0 <__asan_backtrace_create_state@@Base+0x4b08>
   2cd98:	add	x0, x1, w0, sxth #2
   2cd9c:	br	x0
   2cda0:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2cda4:	add	x22, x22, #0x928
   2cda8:	mov	x0, x22
   2cdac:	bl	64b0 <__asan_internal_strlen@plt>
   2cdb0:	cbz	x0, 2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2cdb4:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2cdb8:	add	x22, x0, x22
   2cdbc:	add	x20, x20, #0x929
   2cdc0:	mov	w21, #0x20                  	// #32
   2cdc4:	ldr	x1, [x19, #256]
   2cdc8:	b	2cdec <__asan_backtrace_create_state@@Base+0x4b54>
   2cdcc:	mov	x0, x1
   2cdd0:	add	x1, x1, #0x1
   2cdd4:	str	x1, [x19, #256]
   2cdd8:	cmp	x20, x22
   2cddc:	strb	w21, [x19, x0]
   2cde0:	strb	w21, [x19, #264]
   2cde4:	b.eq	2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   2cde8:	ldrb	w21, [x20], #1
   2cdec:	cmp	x1, #0xff
   2cdf0:	b.ne	2cdcc <__asan_backtrace_create_state@@Base+0x4b34>  // b.any
   2cdf4:	ldp	x3, x2, [x19, #272]
   2cdf8:	strb	wzr, [x19, #255]
   2cdfc:	mov	x0, x19
   2ce00:	blr	x3
   2ce04:	ldr	x2, [x19, #320]
   2ce08:	mov	x1, #0x1                   	// #1
   2ce0c:	mov	x0, #0x0                   	// #0
   2ce10:	add	x2, x2, x1
   2ce14:	str	x2, [x19, #320]
   2ce18:	b	2cdd4 <__asan_backtrace_create_state@@Base+0x4b3c>
   2ce1c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2ce20:	add	x22, x22, #0x938
   2ce24:	mov	x0, x22
   2ce28:	bl	64b0 <__asan_internal_strlen@plt>
   2ce2c:	cbz	x0, 2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2ce30:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2ce34:	add	x22, x0, x22
   2ce38:	add	x20, x20, #0x939
   2ce3c:	mov	w21, #0x20                  	// #32
   2ce40:	ldr	x1, [x19, #256]
   2ce44:	b	2ce68 <__asan_backtrace_create_state@@Base+0x4bd0>
   2ce48:	mov	x0, x1
   2ce4c:	add	x1, x1, #0x1
   2ce50:	str	x1, [x19, #256]
   2ce54:	cmp	x20, x22
   2ce58:	strb	w21, [x19, x0]
   2ce5c:	strb	w21, [x19, #264]
   2ce60:	b.eq	2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   2ce64:	ldrb	w21, [x20], #1
   2ce68:	cmp	x1, #0xff
   2ce6c:	b.ne	2ce48 <__asan_backtrace_create_state@@Base+0x4bb0>  // b.any
   2ce70:	ldp	x3, x2, [x19, #272]
   2ce74:	strb	wzr, [x19, #255]
   2ce78:	mov	x0, x19
   2ce7c:	blr	x3
   2ce80:	ldr	x2, [x19, #320]
   2ce84:	mov	x1, #0x1                   	// #1
   2ce88:	mov	x0, #0x0                   	// #0
   2ce8c:	add	x2, x2, x1
   2ce90:	str	x2, [x19, #320]
   2ce94:	b	2ce50 <__asan_backtrace_create_state@@Base+0x4bb8>
   2ce98:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2ce9c:	add	x22, x22, #0x948
   2cea0:	mov	x0, x22
   2cea4:	bl	64b0 <__asan_internal_strlen@plt>
   2cea8:	cbz	x0, 2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2ceac:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2ceb0:	add	x22, x0, x22
   2ceb4:	add	x20, x20, #0x949
   2ceb8:	mov	w21, #0x20                  	// #32
   2cebc:	ldr	x1, [x19, #256]
   2cec0:	b	2cee4 <__asan_backtrace_create_state@@Base+0x4c4c>
   2cec4:	mov	x0, x1
   2cec8:	add	x1, x1, #0x1
   2cecc:	str	x1, [x19, #256]
   2ced0:	cmp	x22, x20
   2ced4:	strb	w21, [x19, x0]
   2ced8:	strb	w21, [x19, #264]
   2cedc:	b.eq	2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   2cee0:	ldrb	w21, [x20], #1
   2cee4:	cmp	x1, #0xff
   2cee8:	b.ne	2cec4 <__asan_backtrace_create_state@@Base+0x4c2c>  // b.any
   2ceec:	ldp	x3, x2, [x19, #272]
   2cef0:	strb	wzr, [x19, #255]
   2cef4:	mov	x0, x19
   2cef8:	blr	x3
   2cefc:	ldr	x2, [x19, #320]
   2cf00:	mov	x1, #0x1                   	// #1
   2cf04:	mov	x0, #0x0                   	// #0
   2cf08:	add	x2, x2, x1
   2cf0c:	str	x2, [x19, #320]
   2cf10:	b	2cecc <__asan_backtrace_create_state@@Base+0x4c34>
   2cf14:	tbnz	w21, #2, 2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2cf18:	ldr	x1, [x19, #256]
   2cf1c:	add	x0, x1, #0x1
   2cf20:	cmp	x1, #0xff
   2cf24:	b.ne	2cf4c <__asan_backtrace_create_state@@Base+0x4cb4>  // b.any
   2cf28:	ldp	x3, x2, [x19, #272]
   2cf2c:	strb	wzr, [x19, #255]
   2cf30:	mov	x0, x19
   2cf34:	blr	x3
   2cf38:	ldr	x2, [x19, #320]
   2cf3c:	mov	x0, #0x1                   	// #1
   2cf40:	mov	x1, #0x0                   	// #0
   2cf44:	add	x2, x2, x0
   2cf48:	str	x2, [x19, #320]
   2cf4c:	str	x0, [x19, #256]
   2cf50:	mov	w0, #0x2a                  	// #42
   2cf54:	strb	w0, [x19, x1]
   2cf58:	strb	w0, [x19, #264]
   2cf5c:	ldp	x19, x20, [sp, #16]
   2cf60:	ldp	x21, x22, [sp, #32]
   2cf64:	ldp	x29, x30, [sp], #64
   2cf68:	ret
   2cf6c:	ldr	x1, [x19, #256]
   2cf70:	add	x0, x1, #0x1
   2cf74:	cmp	x1, #0xff
   2cf78:	b.ne	2cfa0 <__asan_backtrace_create_state@@Base+0x4d08>  // b.any
   2cf7c:	ldp	x3, x2, [x19, #272]
   2cf80:	strb	wzr, [x19, #255]
   2cf84:	mov	x0, x19
   2cf88:	blr	x3
   2cf8c:	ldr	x2, [x19, #320]
   2cf90:	mov	x0, #0x1                   	// #1
   2cf94:	mov	x1, #0x0                   	// #0
   2cf98:	add	x2, x2, x0
   2cf9c:	str	x2, [x19, #320]
   2cfa0:	str	x0, [x19, #256]
   2cfa4:	mov	w0, #0x20                  	// #32
   2cfa8:	strb	w0, [x19, x1]
   2cfac:	strb	w0, [x19, #264]
   2cfb0:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2cfb4:	add	x22, x22, #0x980
   2cfb8:	mov	x0, x22
   2cfbc:	bl	64b0 <__asan_internal_strlen@plt>
   2cfc0:	cbz	x0, 2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2cfc4:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2cfc8:	add	x22, x0, x22
   2cfcc:	add	x20, x20, #0x981
   2cfd0:	mov	w21, #0x26                  	// #38
   2cfd4:	ldr	x1, [x19, #256]
   2cfd8:	b	2cffc <__asan_backtrace_create_state@@Base+0x4d64>
   2cfdc:	mov	x2, x1
   2cfe0:	add	x1, x1, #0x1
   2cfe4:	str	x1, [x19, #256]
   2cfe8:	cmp	x20, x22
   2cfec:	strb	w21, [x19, x2]
   2cff0:	strb	w21, [x19, #264]
   2cff4:	b.eq	2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   2cff8:	ldrb	w21, [x20], #1
   2cffc:	cmp	x1, #0xff
   2d000:	b.ne	2cfdc <__asan_backtrace_create_state@@Base+0x4d44>  // b.any
   2d004:	ldp	x3, x2, [x19, #272]
   2d008:	strb	wzr, [x19, #255]
   2d00c:	mov	x0, x19
   2d010:	blr	x3
   2d014:	ldr	x0, [x19, #320]
   2d018:	mov	x1, #0x1                   	// #1
   2d01c:	mov	x2, #0x0                   	// #0
   2d020:	add	x0, x0, x1
   2d024:	str	x0, [x19, #320]
   2d028:	b	2cfe4 <__asan_backtrace_create_state@@Base+0x4d4c>
   2d02c:	ldr	x0, [x19, #256]
   2d030:	cmp	x0, #0xff
   2d034:	b.eq	2d5a0 <__asan_backtrace_create_state@@Base+0x5308>  // b.none
   2d038:	add	x1, x0, #0x1
   2d03c:	str	x1, [x19, #256]
   2d040:	mov	w2, #0x20                  	// #32
   2d044:	strb	w2, [x19, x0]
   2d048:	strb	w2, [x19, #264]
   2d04c:	b	2d468 <__asan_backtrace_create_state@@Base+0x51d0>
   2d050:	ldr	x1, [x19, #256]
   2d054:	add	x0, x1, #0x1
   2d058:	cmp	x1, #0xff
   2d05c:	b.eq	2d578 <__asan_backtrace_create_state@@Base+0x52e0>  // b.none
   2d060:	str	x0, [x19, #256]
   2d064:	mov	w0, #0x20                  	// #32
   2d068:	strb	w0, [x19, x1]
   2d06c:	mov	w1, w21
   2d070:	strb	w0, [x19, #264]
   2d074:	mov	x0, x19
   2d078:	ldr	x2, [x20, #16]
   2d07c:	ldp	x19, x20, [sp, #16]
   2d080:	ldp	x21, x22, [sp, #32]
   2d084:	ldp	x29, x30, [sp], #64
   2d088:	b	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2d08c:	ldrb	w0, [x19, #264]
   2d090:	cmp	w0, #0x28
   2d094:	b.eq	2d0dc <__asan_backtrace_create_state@@Base+0x4e44>  // b.none
   2d098:	ldr	x1, [x19, #256]
   2d09c:	add	x0, x1, #0x1
   2d0a0:	cmp	x1, #0xff
   2d0a4:	b.ne	2d0cc <__asan_backtrace_create_state@@Base+0x4e34>  // b.any
   2d0a8:	ldp	x3, x2, [x19, #272]
   2d0ac:	strb	wzr, [x19, #255]
   2d0b0:	mov	x0, x19
   2d0b4:	blr	x3
   2d0b8:	ldr	x2, [x19, #320]
   2d0bc:	mov	x0, #0x1                   	// #1
   2d0c0:	mov	x1, #0x0                   	// #0
   2d0c4:	add	x2, x2, x0
   2d0c8:	str	x2, [x19, #320]
   2d0cc:	str	x0, [x19, #256]
   2d0d0:	mov	w0, #0x20                  	// #32
   2d0d4:	strb	w0, [x19, x1]
   2d0d8:	strb	w0, [x19, #264]
   2d0dc:	ldr	x2, [x20, #8]
   2d0e0:	mov	w1, w21
   2d0e4:	mov	x0, x19
   2d0e8:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d0ec:	add	x22, x22, #0x9a8
   2d0f0:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2d0f4:	mov	x0, x22
   2d0f8:	bl	64b0 <__asan_internal_strlen@plt>
   2d0fc:	cbz	x0, 2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2d100:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d104:	add	x22, x0, x22
   2d108:	add	x20, x20, #0x9a9
   2d10c:	mov	w21, #0x3a                  	// #58
   2d110:	ldr	x1, [x19, #256]
   2d114:	b	2d138 <__asan_backtrace_create_state@@Base+0x4ea0>
   2d118:	mov	x0, x1
   2d11c:	add	x1, x1, #0x1
   2d120:	str	x1, [x19, #256]
   2d124:	cmp	x20, x22
   2d128:	strb	w21, [x19, x0]
   2d12c:	strb	w21, [x19, #264]
   2d130:	b.eq	2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   2d134:	ldrb	w21, [x20], #1
   2d138:	cmp	x1, #0xff
   2d13c:	b.ne	2d118 <__asan_backtrace_create_state@@Base+0x4e80>  // b.any
   2d140:	ldp	x3, x2, [x19, #272]
   2d144:	strb	wzr, [x19, #255]
   2d148:	mov	x0, x19
   2d14c:	blr	x3
   2d150:	ldr	x2, [x19, #320]
   2d154:	mov	x1, #0x1                   	// #1
   2d158:	mov	x0, #0x0                   	// #0
   2d15c:	add	x2, x2, x1
   2d160:	str	x2, [x19, #320]
   2d164:	b	2d120 <__asan_backtrace_create_state@@Base+0x4e88>
   2d168:	stp	x23, x24, [sp, #48]
   2d16c:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d170:	add	x24, x24, #0x9b0
   2d174:	mov	x0, x24
   2d178:	bl	64b0 <__asan_internal_strlen@plt>
   2d17c:	cbz	x0, 2d548 <__asan_backtrace_create_state@@Base+0x52b0>
   2d180:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d184:	add	x24, x0, x24
   2d188:	add	x22, x22, #0x9b1
   2d18c:	mov	w23, #0x20                  	// #32
   2d190:	ldr	x1, [x19, #256]
   2d194:	b	2d1b8 <__asan_backtrace_create_state@@Base+0x4f20>
   2d198:	mov	x0, x1
   2d19c:	add	x1, x1, #0x1
   2d1a0:	str	x1, [x19, #256]
   2d1a4:	cmp	x22, x24
   2d1a8:	strb	w23, [x19, x0]
   2d1ac:	strb	w23, [x19, #264]
   2d1b0:	b.eq	2d548 <__asan_backtrace_create_state@@Base+0x52b0>  // b.none
   2d1b4:	ldrb	w23, [x22], #1
   2d1b8:	cmp	x1, #0xff
   2d1bc:	b.ne	2d198 <__asan_backtrace_create_state@@Base+0x4f00>  // b.any
   2d1c0:	ldp	x3, x2, [x19, #272]
   2d1c4:	strb	wzr, [x19, #255]
   2d1c8:	mov	x0, x19
   2d1cc:	blr	x3
   2d1d0:	ldr	x2, [x19, #320]
   2d1d4:	mov	x1, #0x1                   	// #1
   2d1d8:	mov	x0, #0x0                   	// #0
   2d1dc:	add	x2, x2, x1
   2d1e0:	str	x2, [x19, #320]
   2d1e4:	b	2d1a0 <__asan_backtrace_create_state@@Base+0x4f08>
   2d1e8:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d1ec:	add	x22, x22, #0x950
   2d1f0:	mov	x0, x22
   2d1f4:	bl	64b0 <__asan_internal_strlen@plt>
   2d1f8:	cbz	x0, 2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2d1fc:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d200:	add	x22, x0, x22
   2d204:	add	x20, x20, #0x951
   2d208:	mov	w21, #0x20                  	// #32
   2d20c:	ldr	x1, [x19, #256]
   2d210:	b	2d234 <__asan_backtrace_create_state@@Base+0x4f9c>
   2d214:	mov	x0, x1
   2d218:	add	x1, x1, #0x1
   2d21c:	str	x1, [x19, #256]
   2d220:	cmp	x22, x20
   2d224:	strb	w21, [x19, x0]
   2d228:	strb	w21, [x19, #264]
   2d22c:	b.eq	2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   2d230:	ldrb	w21, [x20], #1
   2d234:	cmp	x1, #0xff
   2d238:	b.ne	2d214 <__asan_backtrace_create_state@@Base+0x4f7c>  // b.any
   2d23c:	ldp	x3, x2, [x19, #272]
   2d240:	strb	wzr, [x19, #255]
   2d244:	mov	x0, x19
   2d248:	blr	x3
   2d24c:	ldr	x2, [x19, #320]
   2d250:	mov	x1, #0x1                   	// #1
   2d254:	mov	x0, #0x0                   	// #0
   2d258:	add	x2, x2, x1
   2d25c:	str	x2, [x19, #320]
   2d260:	b	2d21c <__asan_backtrace_create_state@@Base+0x4f84>
   2d264:	stp	x23, x24, [sp, #48]
   2d268:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d26c:	add	x24, x24, #0x968
   2d270:	mov	x0, x24
   2d274:	bl	64b0 <__asan_internal_strlen@plt>
   2d278:	cbz	x0, 2d494 <__asan_backtrace_create_state@@Base+0x51fc>
   2d27c:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d280:	add	x24, x0, x24
   2d284:	add	x22, x22, #0x969
   2d288:	mov	w23, #0x20                  	// #32
   2d28c:	ldr	x1, [x19, #256]
   2d290:	b	2d2b4 <__asan_backtrace_create_state@@Base+0x501c>
   2d294:	mov	x0, x1
   2d298:	add	x1, x1, #0x1
   2d29c:	str	x1, [x19, #256]
   2d2a0:	cmp	x22, x24
   2d2a4:	strb	w23, [x19, x0]
   2d2a8:	strb	w23, [x19, #264]
   2d2ac:	b.eq	2d494 <__asan_backtrace_create_state@@Base+0x51fc>  // b.none
   2d2b0:	ldrb	w23, [x22], #1
   2d2b4:	cmp	x1, #0xff
   2d2b8:	b.ne	2d294 <__asan_backtrace_create_state@@Base+0x4ffc>  // b.any
   2d2bc:	ldp	x3, x2, [x19, #272]
   2d2c0:	strb	wzr, [x19, #255]
   2d2c4:	mov	x0, x19
   2d2c8:	blr	x3
   2d2cc:	ldr	x2, [x19, #320]
   2d2d0:	mov	x1, #0x1                   	// #1
   2d2d4:	mov	x0, #0x0                   	// #0
   2d2d8:	add	x2, x2, x1
   2d2dc:	str	x2, [x19, #320]
   2d2e0:	b	2d29c <__asan_backtrace_create_state@@Base+0x5004>
   2d2e4:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d2e8:	add	x22, x22, #0x988
   2d2ec:	mov	x0, x22
   2d2f0:	bl	64b0 <__asan_internal_strlen@plt>
   2d2f4:	cbz	x0, 2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2d2f8:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d2fc:	add	x22, x0, x22
   2d300:	add	x20, x20, #0x989
   2d304:	mov	w21, #0x63                  	// #99
   2d308:	ldr	x1, [x19, #256]
   2d30c:	b	2d330 <__asan_backtrace_create_state@@Base+0x5098>
   2d310:	mov	x0, x1
   2d314:	add	x1, x1, #0x1
   2d318:	str	x1, [x19, #256]
   2d31c:	cmp	x22, x20
   2d320:	strb	w21, [x19, x0]
   2d324:	strb	w21, [x19, #264]
   2d328:	b.eq	2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   2d32c:	ldrb	w21, [x20], #1
   2d330:	cmp	x1, #0xff
   2d334:	b.ne	2d310 <__asan_backtrace_create_state@@Base+0x5078>  // b.any
   2d338:	ldp	x3, x2, [x19, #272]
   2d33c:	strb	wzr, [x19, #255]
   2d340:	mov	x0, x19
   2d344:	blr	x3
   2d348:	ldr	x2, [x19, #320]
   2d34c:	mov	x1, #0x1                   	// #1
   2d350:	mov	x0, #0x0                   	// #0
   2d354:	add	x2, x2, x1
   2d358:	str	x2, [x19, #320]
   2d35c:	b	2d318 <__asan_backtrace_create_state@@Base+0x5080>
   2d360:	ldr	x2, [x2, #8]
   2d364:	b	2cd70 <__asan_backtrace_create_state@@Base+0x4ad8>
   2d368:	stp	x23, x24, [sp, #48]
   2d36c:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d370:	add	x24, x24, #0x978
   2d374:	mov	x0, x24
   2d378:	bl	64b0 <__asan_internal_strlen@plt>
   2d37c:	cbz	x0, 2d494 <__asan_backtrace_create_state@@Base+0x51fc>
   2d380:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d384:	add	x24, x0, x24
   2d388:	add	x22, x22, #0x979
   2d38c:	mov	w23, #0x20                  	// #32
   2d390:	ldr	x1, [x19, #256]
   2d394:	b	2d3b8 <__asan_backtrace_create_state@@Base+0x5120>
   2d398:	mov	x0, x1
   2d39c:	add	x1, x1, #0x1
   2d3a0:	str	x1, [x19, #256]
   2d3a4:	cmp	x24, x22
   2d3a8:	strb	w23, [x19, x0]
   2d3ac:	strb	w23, [x19, #264]
   2d3b0:	b.eq	2d494 <__asan_backtrace_create_state@@Base+0x51fc>  // b.none
   2d3b4:	ldrb	w23, [x22], #1
   2d3b8:	cmp	x1, #0xff
   2d3bc:	b.ne	2d398 <__asan_backtrace_create_state@@Base+0x5100>  // b.any
   2d3c0:	ldp	x3, x2, [x19, #272]
   2d3c4:	strb	wzr, [x19, #255]
   2d3c8:	mov	x0, x19
   2d3cc:	blr	x3
   2d3d0:	ldr	x2, [x19, #320]
   2d3d4:	mov	x1, #0x1                   	// #1
   2d3d8:	mov	x0, #0x0                   	// #0
   2d3dc:	add	x2, x2, x1
   2d3e0:	str	x2, [x19, #320]
   2d3e4:	b	2d3a0 <__asan_backtrace_create_state@@Base+0x5108>
   2d3e8:	adrp	x22, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d3ec:	add	x22, x22, #0x998
   2d3f0:	mov	x0, x22
   2d3f4:	bl	64b0 <__asan_internal_strlen@plt>
   2d3f8:	cbz	x0, 2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2d3fc:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2d400:	add	x22, x0, x22
   2d404:	add	x20, x20, #0x999
   2d408:	mov	w21, #0x69                  	// #105
   2d40c:	ldr	x1, [x19, #256]
   2d410:	b	2d434 <__asan_backtrace_create_state@@Base+0x519c>
   2d414:	mov	x0, x1
   2d418:	add	x1, x1, #0x1
   2d41c:	str	x1, [x19, #256]
   2d420:	cmp	x22, x20
   2d424:	strb	w21, [x19, x0]
   2d428:	strb	w21, [x19, #264]
   2d42c:	b.eq	2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   2d430:	ldrb	w21, [x20], #1
   2d434:	cmp	x1, #0xff
   2d438:	b.ne	2d414 <__asan_backtrace_create_state@@Base+0x517c>  // b.any
   2d43c:	ldp	x3, x2, [x19, #272]
   2d440:	strb	wzr, [x19, #255]
   2d444:	mov	x0, x19
   2d448:	blr	x3
   2d44c:	ldr	x2, [x19, #320]
   2d450:	mov	x1, #0x1                   	// #1
   2d454:	mov	x0, #0x0                   	// #0
   2d458:	add	x2, x2, x1
   2d45c:	str	x2, [x19, #320]
   2d460:	b	2d41c <__asan_backtrace_create_state@@Base+0x5184>
   2d464:	ldr	x1, [x19, #256]
   2d468:	cmp	x1, #0xff
   2d46c:	b.eq	2d550 <__asan_backtrace_create_state@@Base+0x52b8>  // b.none
   2d470:	add	x0, x1, #0x1
   2d474:	str	x0, [x19, #256]
   2d478:	mov	w0, #0x26                  	// #38
   2d47c:	strb	w0, [x19, x1]
   2d480:	strb	w0, [x19, #264]
   2d484:	ldp	x19, x20, [sp, #16]
   2d488:	ldp	x21, x22, [sp, #32]
   2d48c:	ldp	x29, x30, [sp], #64
   2d490:	ret
   2d494:	ldr	x2, [x20, #16]
   2d498:	cbz	x2, 2d5d0 <__asan_backtrace_create_state@@Base+0x5338>
   2d49c:	ldr	x1, [x19, #256]
   2d4a0:	add	x0, x1, #0x1
   2d4a4:	cmp	x1, #0xff
   2d4a8:	b.ne	2d4d4 <__asan_backtrace_create_state@@Base+0x523c>  // b.any
   2d4ac:	ldp	x3, x2, [x19, #272]
   2d4b0:	strb	wzr, [x19, #255]
   2d4b4:	mov	x0, x19
   2d4b8:	blr	x3
   2d4bc:	ldr	x3, [x19, #320]
   2d4c0:	mov	x0, #0x1                   	// #1
   2d4c4:	mov	x1, #0x0                   	// #0
   2d4c8:	add	x3, x3, x0
   2d4cc:	ldr	x2, [x20, #16]
   2d4d0:	str	x3, [x19, #320]
   2d4d4:	str	x0, [x19, #256]
   2d4d8:	mov	w0, #0x28                  	// #40
   2d4dc:	strb	w0, [x19, x1]
   2d4e0:	strb	w0, [x19, #264]
   2d4e4:	mov	w1, w21
   2d4e8:	mov	x0, x19
   2d4ec:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2d4f0:	ldr	x1, [x19, #256]
   2d4f4:	add	x0, x1, #0x1
   2d4f8:	cmp	x1, #0xff
   2d4fc:	b.ne	2d524 <__asan_backtrace_create_state@@Base+0x528c>  // b.any
   2d500:	ldp	x3, x2, [x19, #272]
   2d504:	strb	wzr, [x19, #255]
   2d508:	mov	x0, x19
   2d50c:	blr	x3
   2d510:	ldr	x2, [x19, #320]
   2d514:	mov	x0, #0x1                   	// #1
   2d518:	mov	x1, #0x0                   	// #0
   2d51c:	add	x2, x2, x0
   2d520:	str	x2, [x19, #320]
   2d524:	str	x0, [x19, #256]
   2d528:	mov	w0, #0x29                  	// #41
   2d52c:	strb	w0, [x19, x1]
   2d530:	strb	w0, [x19, #264]
   2d534:	ldp	x19, x20, [sp, #16]
   2d538:	ldp	x21, x22, [sp, #32]
   2d53c:	ldp	x23, x24, [sp, #48]
   2d540:	ldp	x29, x30, [sp], #64
   2d544:	ret
   2d548:	ldr	x2, [x20, #8]
   2d54c:	b	2d4e4 <__asan_backtrace_create_state@@Base+0x524c>
   2d550:	ldp	x3, x2, [x19, #272]
   2d554:	strb	wzr, [x19, #255]
   2d558:	mov	x0, x19
   2d55c:	blr	x3
   2d560:	ldr	x2, [x19, #320]
   2d564:	mov	x0, #0x1                   	// #1
   2d568:	mov	x1, #0x0                   	// #0
   2d56c:	add	x2, x2, x0
   2d570:	str	x2, [x19, #320]
   2d574:	b	2d474 <__asan_backtrace_create_state@@Base+0x51dc>
   2d578:	ldp	x3, x2, [x19, #272]
   2d57c:	strb	wzr, [x19, #255]
   2d580:	mov	x0, x19
   2d584:	blr	x3
   2d588:	ldr	x2, [x19, #320]
   2d58c:	mov	x0, #0x1                   	// #1
   2d590:	mov	x1, #0x0                   	// #0
   2d594:	add	x2, x2, x0
   2d598:	str	x2, [x19, #320]
   2d59c:	b	2d060 <__asan_backtrace_create_state@@Base+0x4dc8>
   2d5a0:	ldp	x3, x2, [x19, #272]
   2d5a4:	strb	wzr, [x19, #255]
   2d5a8:	mov	x1, x0
   2d5ac:	mov	x0, x19
   2d5b0:	blr	x3
   2d5b4:	ldr	x0, [x19, #320]
   2d5b8:	mov	w2, #0x20                  	// #32
   2d5bc:	mov	x1, #0x1                   	// #1
   2d5c0:	strb	w2, [x19]
   2d5c4:	add	x0, x0, x1
   2d5c8:	str	x0, [x19, #320]
   2d5cc:	b	2d470 <__asan_backtrace_create_state@@Base+0x51d8>
   2d5d0:	ldp	x23, x24, [sp, #48]
   2d5d4:	b	2cf5c <__asan_backtrace_create_state@@Base+0x4cc4>
   2d5d8:	stp	x29, x30, [sp, #-64]!
   2d5dc:	mov	x29, sp
   2d5e0:	stp	x19, x20, [sp, #16]
   2d5e4:	mov	x19, x0
   2d5e8:	mov	x20, x3
   2d5ec:	stp	x21, x22, [sp, #32]
   2d5f0:	mov	x21, x2
   2d5f4:	stp	x23, x24, [sp, #48]
   2d5f8:	mov	w23, w1
   2d5fc:	cbz	x3, 2d640 <__asan_backtrace_create_state@@Base+0x53a8>
   2d600:	mov	x2, #0xe000000             	// #234881024
   2d604:	mov	x4, #0x1                   	// #1
   2d608:	movk	x2, #0x862, lsl #32
   2d60c:	ldr	w0, [x3, #16]
   2d610:	cbnz	w0, 2d640 <__asan_backtrace_create_state@@Base+0x53a8>
   2d614:	ldr	x0, [x3, #8]
   2d618:	ldr	w0, [x0]
   2d61c:	cmp	w0, #0x2b
   2d620:	b.hi	2d638 <__asan_backtrace_create_state@@Base+0x53a0>  // b.pmore
   2d624:	lsl	x0, x4, x0
   2d628:	tst	x0, x2
   2d62c:	b.ne	2d708 <__asan_backtrace_create_state@@Base+0x5470>  // b.any
   2d630:	tst	x0, #0x1c00000000
   2d634:	b.ne	2d7d4 <__asan_backtrace_create_state@@Base+0x553c>  // b.any
   2d638:	ldr	x3, [x3]
   2d63c:	cbnz	x3, 2d60c <__asan_backtrace_create_state@@Base+0x5374>
   2d640:	ldr	x22, [x19, #296]
   2d644:	str	xzr, [x19, #296]
   2d648:	mov	w1, w23
   2d64c:	mov	x2, x20
   2d650:	mov	x0, x19
   2d654:	mov	w3, #0x0                   	// #0
   2d658:	bl	2d888 <__asan_backtrace_create_state@@Base+0x55f0>
   2d65c:	ldr	x1, [x19, #256]
   2d660:	cmp	x1, #0xff
   2d664:	b.eq	2d798 <__asan_backtrace_create_state@@Base+0x5500>  // b.none
   2d668:	add	x0, x1, #0x1
   2d66c:	str	x0, [x19, #256]
   2d670:	mov	w2, #0x28                  	// #40
   2d674:	strb	w2, [x19, x1]
   2d678:	strb	w2, [x19, #264]
   2d67c:	ldr	x2, [x21]
   2d680:	cbz	x2, 2d694 <__asan_backtrace_create_state@@Base+0x53fc>
   2d684:	mov	x0, x19
   2d688:	mov	w1, w23
   2d68c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2d690:	ldr	x0, [x19, #256]
   2d694:	cmp	x0, #0xff
   2d698:	b.eq	2d6dc <__asan_backtrace_create_state@@Base+0x5444>  // b.none
   2d69c:	add	x1, x0, #0x1
   2d6a0:	str	x1, [x19, #256]
   2d6a4:	mov	w3, #0x29                  	// #41
   2d6a8:	strb	w3, [x19, x0]
   2d6ac:	mov	x2, x20
   2d6b0:	strb	w3, [x19, #264]
   2d6b4:	mov	w1, w23
   2d6b8:	mov	x0, x19
   2d6bc:	mov	w3, #0x1                   	// #1
   2d6c0:	bl	2d888 <__asan_backtrace_create_state@@Base+0x55f0>
   2d6c4:	ldp	x23, x24, [sp, #48]
   2d6c8:	str	x22, [x19, #296]
   2d6cc:	ldp	x19, x20, [sp, #16]
   2d6d0:	ldp	x21, x22, [sp, #32]
   2d6d4:	ldp	x29, x30, [sp], #64
   2d6d8:	ret
   2d6dc:	ldp	x3, x2, [x19, #272]
   2d6e0:	strb	wzr, [x19, #255]
   2d6e4:	mov	x1, x0
   2d6e8:	mov	x0, x19
   2d6ec:	blr	x3
   2d6f0:	ldr	x2, [x19, #320]
   2d6f4:	mov	x1, #0x1                   	// #1
   2d6f8:	mov	x0, #0x0                   	// #0
   2d6fc:	add	x2, x2, x1
   2d700:	str	x2, [x19, #320]
   2d704:	b	2d6a0 <__asan_backtrace_create_state@@Base+0x5408>
   2d708:	ldrb	w0, [x19, #264]
   2d70c:	ldr	x1, [x19, #256]
   2d710:	cmp	w0, #0x20
   2d714:	b.eq	2d738 <__asan_backtrace_create_state@@Base+0x54a0>  // b.none
   2d718:	cmp	x1, #0xff
   2d71c:	b.eq	2d818 <__asan_backtrace_create_state@@Base+0x5580>  // b.none
   2d720:	add	x2, x1, #0x1
   2d724:	str	x2, [x19, #256]
   2d728:	mov	w0, #0x20                  	// #32
   2d72c:	strb	w0, [x19, x1]
   2d730:	mov	x1, x2
   2d734:	strb	w0, [x19, #264]
   2d738:	cmp	x1, #0xff
   2d73c:	b.eq	2d7f0 <__asan_backtrace_create_state@@Base+0x5558>  // b.none
   2d740:	add	x0, x1, #0x1
   2d744:	str	x0, [x19, #256]
   2d748:	mov	w24, #0x28                  	// #40
   2d74c:	strb	w24, [x19, x1]
   2d750:	mov	x0, x19
   2d754:	strb	w24, [x19, #264]
   2d758:	mov	x2, x20
   2d75c:	ldr	x22, [x19, #296]
   2d760:	str	xzr, [x19, #296]
   2d764:	mov	w1, w23
   2d768:	mov	w3, #0x0                   	// #0
   2d76c:	bl	2d888 <__asan_backtrace_create_state@@Base+0x55f0>
   2d770:	ldr	x0, [x19, #256]
   2d774:	cmp	x0, #0xff
   2d778:	b.eq	2d844 <__asan_backtrace_create_state@@Base+0x55ac>  // b.none
   2d77c:	add	x1, x0, #0x1
   2d780:	str	x1, [x19, #256]
   2d784:	mov	w2, #0x29                  	// #41
   2d788:	strb	w2, [x19, x0]
   2d78c:	strb	w2, [x19, #264]
   2d790:	cmp	x1, #0xff
   2d794:	b.ne	2d668 <__asan_backtrace_create_state@@Base+0x53d0>  // b.any
   2d798:	ldp	x3, x2, [x19, #272]
   2d79c:	strb	wzr, [x19, #255]
   2d7a0:	mov	x0, x19
   2d7a4:	blr	x3
   2d7a8:	mov	w1, #0x28                  	// #40
   2d7ac:	strb	w1, [x19]
   2d7b0:	strb	w1, [x19, #264]
   2d7b4:	mov	x0, #0x1                   	// #1
   2d7b8:	ldr	x1, [x19, #320]
   2d7bc:	ldr	x2, [x21]
   2d7c0:	add	x1, x1, x0
   2d7c4:	str	x0, [x19, #256]
   2d7c8:	str	x1, [x19, #320]
   2d7cc:	cbnz	x2, 2d684 <__asan_backtrace_create_state@@Base+0x53ec>
   2d7d0:	b	2d69c <__asan_backtrace_create_state@@Base+0x5404>
   2d7d4:	ldrb	w0, [x19, #264]
   2d7d8:	ldr	x1, [x19, #256]
   2d7dc:	and	w2, w0, #0xfffffffd
   2d7e0:	cmp	w2, #0x28
   2d7e4:	b.ne	2d710 <__asan_backtrace_create_state@@Base+0x5478>  // b.any
   2d7e8:	cmp	x1, #0xff
   2d7ec:	b.ne	2d740 <__asan_backtrace_create_state@@Base+0x54a8>  // b.any
   2d7f0:	ldp	x3, x2, [x19, #272]
   2d7f4:	strb	wzr, [x19, #255]
   2d7f8:	mov	x0, x19
   2d7fc:	blr	x3
   2d800:	ldr	x2, [x19, #320]
   2d804:	mov	x0, #0x1                   	// #1
   2d808:	mov	x1, #0x0                   	// #0
   2d80c:	add	x2, x2, x0
   2d810:	str	x2, [x19, #320]
   2d814:	b	2d744 <__asan_backtrace_create_state@@Base+0x54ac>
   2d818:	ldp	x3, x2, [x19, #272]
   2d81c:	strb	wzr, [x19, #255]
   2d820:	mov	x0, x19
   2d824:	blr	x3
   2d828:	ldr	x0, [x19, #320]
   2d82c:	mov	w2, #0x20                  	// #32
   2d830:	mov	x1, #0x1                   	// #1
   2d834:	strb	w2, [x19]
   2d838:	add	x0, x0, x1
   2d83c:	str	x0, [x19, #320]
   2d840:	b	2d740 <__asan_backtrace_create_state@@Base+0x54a8>
   2d844:	ldp	x3, x2, [x19, #272]
   2d848:	strb	wzr, [x19, #255]
   2d84c:	mov	x1, x0
   2d850:	mov	x0, x19
   2d854:	blr	x3
   2d858:	strb	w24, [x19, #264]
   2d85c:	mov	w0, #0x2829                	// #10281
   2d860:	strh	w0, [x19]
   2d864:	ldr	x1, [x19, #320]
   2d868:	mov	x0, #0x2                   	// #2
   2d86c:	ldr	x2, [x21]
   2d870:	add	x1, x1, #0x1
   2d874:	str	x0, [x19, #256]
   2d878:	str	x1, [x19, #320]
   2d87c:	cbnz	x2, 2d684 <__asan_backtrace_create_state@@Base+0x53ec>
   2d880:	b	2d69c <__asan_backtrace_create_state@@Base+0x5404>
   2d884:	nop
   2d888:	cbz	x2, 2db04 <__asan_backtrace_create_state@@Base+0x586c>
   2d88c:	stp	x29, x30, [sp, #-112]!
   2d890:	mov	x29, sp
   2d894:	stp	x23, x24, [sp, #48]
   2d898:	mov	x24, #0x1f                  	// #31
   2d89c:	movk	x24, #0x1a, lsl #48
   2d8a0:	stp	x19, x20, [sp, #16]
   2d8a4:	mov	w20, w1
   2d8a8:	mov	x19, x2
   2d8ac:	stp	x21, x22, [sp, #32]
   2d8b0:	mov	w21, w3
   2d8b4:	mov	w22, #0x1                   	// #1
   2d8b8:	stp	x25, x26, [sp, #64]
   2d8bc:	mov	x26, x0
   2d8c0:	mov	x25, #0x1                   	// #1
   2d8c4:	b	2d908 <__asan_backtrace_create_state@@Base+0x5670>
   2d8c8:	ldr	x1, [x19, #24]
   2d8cc:	cmp	w5, #0x29
   2d8d0:	ldr	x23, [x26, #288]
   2d8d4:	str	w22, [x19, #16]
   2d8d8:	str	x1, [x26, #288]
   2d8dc:	b.eq	2d954 <__asan_backtrace_create_state@@Base+0x56bc>  // b.none
   2d8e0:	cmp	w5, #0x2a
   2d8e4:	b.eq	2d984 <__asan_backtrace_create_state@@Base+0x56ec>  // b.none
   2d8e8:	cmp	w5, #0x2
   2d8ec:	b.eq	2d9b4 <__asan_backtrace_create_state@@Base+0x571c>  // b.none
   2d8f0:	mov	w1, w20
   2d8f4:	mov	x0, x26
   2d8f8:	bl	2cd40 <__asan_backtrace_create_state@@Base+0x4aa8>
   2d8fc:	str	x23, [x26, #288]
   2d900:	ldr	x19, [x19]
   2d904:	cbz	x19, 2d96c <__asan_backtrace_create_state@@Base+0x56d4>
   2d908:	ldr	w2, [x26, #304]
   2d90c:	cbnz	w2, 2d96c <__asan_backtrace_create_state@@Base+0x56d4>
   2d910:	ldr	w2, [x19, #16]
   2d914:	cbnz	w2, 2d900 <__asan_backtrace_create_state@@Base+0x5668>
   2d918:	ldr	x2, [x19, #8]
   2d91c:	ldr	w5, [x2]
   2d920:	cbnz	w21, 2d8c8 <__asan_backtrace_create_state@@Base+0x5630>
   2d924:	sub	w4, w5, #0x1c
   2d928:	cmp	w4, #0x34
   2d92c:	b.hi	2d8c8 <__asan_backtrace_create_state@@Base+0x5630>  // b.pmore
   2d930:	lsl	x4, x25, x4
   2d934:	tst	x4, x24
   2d938:	b.ne	2d900 <__asan_backtrace_create_state@@Base+0x5668>  // b.any
   2d93c:	ldr	x1, [x19, #24]
   2d940:	cmp	w5, #0x29
   2d944:	ldr	x23, [x26, #288]
   2d948:	str	w22, [x19, #16]
   2d94c:	str	x1, [x26, #288]
   2d950:	b.ne	2d8e0 <__asan_backtrace_create_state@@Base+0x5648>  // b.any
   2d954:	ldr	x3, [x19]
   2d958:	add	x2, x2, #0x10
   2d95c:	mov	w1, w20
   2d960:	mov	x0, x26
   2d964:	bl	2d5d8 <__asan_backtrace_create_state@@Base+0x5340>
   2d968:	str	x23, [x26, #288]
   2d96c:	ldp	x19, x20, [sp, #16]
   2d970:	ldp	x21, x22, [sp, #32]
   2d974:	ldp	x23, x24, [sp, #48]
   2d978:	ldp	x25, x26, [sp, #64]
   2d97c:	ldp	x29, x30, [sp], #112
   2d980:	ret
   2d984:	ldr	x3, [x19]
   2d988:	mov	w1, w20
   2d98c:	mov	x0, x26
   2d990:	add	x2, x2, #0x8
   2d994:	bl	2dc98 <__asan_backtrace_create_state@@Base+0x5a00>
   2d998:	str	x23, [x26, #288]
   2d99c:	ldp	x19, x20, [sp, #16]
   2d9a0:	ldp	x21, x22, [sp, #32]
   2d9a4:	ldp	x23, x24, [sp, #48]
   2d9a8:	ldp	x25, x26, [sp, #64]
   2d9ac:	ldp	x29, x30, [sp], #112
   2d9b0:	ret
   2d9b4:	ldr	x2, [x2, #8]
   2d9b8:	mov	w1, w20
   2d9bc:	ldr	x21, [x26, #296]
   2d9c0:	str	xzr, [x26, #296]
   2d9c4:	mov	x0, x26
   2d9c8:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2d9cc:	str	x21, [x26, #296]
   2d9d0:	tbz	w20, #2, 2da88 <__asan_backtrace_create_state@@Base+0x57f0>
   2d9d4:	ldr	x1, [x26, #256]
   2d9d8:	add	x0, x1, #0x1
   2d9dc:	cmp	x1, #0xff
   2d9e0:	b.ne	2da08 <__asan_backtrace_create_state@@Base+0x5770>  // b.any
   2d9e4:	ldp	x3, x2, [x26, #272]
   2d9e8:	strb	wzr, [x26, #255]
   2d9ec:	mov	x0, x26
   2d9f0:	blr	x3
   2d9f4:	ldr	x2, [x26, #320]
   2d9f8:	mov	x0, #0x1                   	// #1
   2d9fc:	mov	x1, #0x0                   	// #0
   2da00:	add	x2, x2, x0
   2da04:	str	x2, [x26, #320]
   2da08:	str	x0, [x26, #256]
   2da0c:	mov	w0, #0x2e                  	// #46
   2da10:	strb	w0, [x26, x1]
   2da14:	strb	w0, [x26, #264]
   2da18:	ldr	x0, [x19, #8]
   2da1c:	ldr	x21, [x0, #16]
   2da20:	ldr	w2, [x21]
   2da24:	cmp	w2, #0x47
   2da28:	b.eq	2db08 <__asan_backtrace_create_state@@Base+0x5870>  // b.none
   2da2c:	mov	x1, #0x1f                  	// #31
   2da30:	mov	x3, #0x1                   	// #1
   2da34:	movk	x1, #0x1a, lsl #48
   2da38:	sub	w2, w2, #0x1c
   2da3c:	cmp	w2, #0x34
   2da40:	b.hi	2da50 <__asan_backtrace_create_state@@Base+0x57b8>  // b.pmore
   2da44:	lsl	x2, x3, x2
   2da48:	tst	x2, x1
   2da4c:	b.ne	2da7c <__asan_backtrace_create_state@@Base+0x57e4>  // b.any
   2da50:	mov	x2, x21
   2da54:	mov	w1, w20
   2da58:	mov	x0, x26
   2da5c:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2da60:	str	x23, [x26, #288]
   2da64:	ldp	x19, x20, [sp, #16]
   2da68:	ldp	x21, x22, [sp, #32]
   2da6c:	ldp	x23, x24, [sp, #48]
   2da70:	ldp	x25, x26, [sp, #64]
   2da74:	ldp	x29, x30, [sp], #112
   2da78:	ret
   2da7c:	ldr	x21, [x21, #8]
   2da80:	ldr	w2, [x21]
   2da84:	b	2da38 <__asan_backtrace_create_state@@Base+0x57a0>
   2da88:	adrp	x21, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2da8c:	add	x21, x21, #0x5e0
   2da90:	mov	x0, x21
   2da94:	bl	64b0 <__asan_internal_strlen@plt>
   2da98:	cbz	x0, 2da18 <__asan_backtrace_create_state@@Base+0x5780>
   2da9c:	add	x24, x0, x21
   2daa0:	mov	w22, #0x3a                  	// #58
   2daa4:	adrp	x21, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2daa8:	add	x21, x21, #0x5e1
   2daac:	ldr	x1, [x26, #256]
   2dab0:	b	2dad4 <__asan_backtrace_create_state@@Base+0x583c>
   2dab4:	mov	x0, x1
   2dab8:	add	x1, x1, #0x1
   2dabc:	str	x1, [x26, #256]
   2dac0:	cmp	x21, x24
   2dac4:	strb	w22, [x26, x0]
   2dac8:	strb	w22, [x26, #264]
   2dacc:	b.eq	2da18 <__asan_backtrace_create_state@@Base+0x5780>  // b.none
   2dad0:	ldrb	w22, [x21], #1
   2dad4:	cmp	x1, #0xff
   2dad8:	b.ne	2dab4 <__asan_backtrace_create_state@@Base+0x581c>  // b.any
   2dadc:	ldp	x3, x2, [x26, #272]
   2dae0:	strb	wzr, [x26, #255]
   2dae4:	mov	x0, x26
   2dae8:	blr	x3
   2daec:	ldr	x2, [x26, #320]
   2daf0:	mov	x1, #0x1                   	// #1
   2daf4:	mov	x0, #0x0                   	// #0
   2daf8:	add	x2, x2, x1
   2dafc:	str	x2, [x26, #320]
   2db00:	b	2dabc <__asan_backtrace_create_state@@Base+0x5824>
   2db04:	ret
   2db08:	adrp	x19, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2db0c:	add	x19, x19, #0x5e8
   2db10:	mov	x0, x19
   2db14:	bl	64b0 <__asan_internal_strlen@plt>
   2db18:	cbz	x0, 2db84 <__asan_backtrace_create_state@@Base+0x58ec>
   2db1c:	add	x24, x0, x19
   2db20:	mov	w22, #0x7b                  	// #123
   2db24:	adrp	x19, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2db28:	add	x19, x19, #0x5e9
   2db2c:	ldr	x1, [x26, #256]
   2db30:	b	2db54 <__asan_backtrace_create_state@@Base+0x58bc>
   2db34:	mov	x0, x1
   2db38:	add	x1, x1, #0x1
   2db3c:	str	x1, [x26, #256]
   2db40:	cmp	x24, x19
   2db44:	strb	w22, [x26, x0]
   2db48:	strb	w22, [x26, #264]
   2db4c:	b.eq	2db84 <__asan_backtrace_create_state@@Base+0x58ec>  // b.none
   2db50:	ldrb	w22, [x19], #1
   2db54:	cmp	x1, #0xff
   2db58:	b.ne	2db34 <__asan_backtrace_create_state@@Base+0x589c>  // b.any
   2db5c:	ldp	x3, x2, [x26, #272]
   2db60:	strb	wzr, [x26, #255]
   2db64:	mov	x0, x26
   2db68:	blr	x3
   2db6c:	ldr	x2, [x26, #320]
   2db70:	mov	x1, #0x1                   	// #1
   2db74:	mov	x0, #0x0                   	// #0
   2db78:	add	x2, x2, x1
   2db7c:	str	x2, [x26, #320]
   2db80:	b	2db3c <__asan_backtrace_create_state@@Base+0x58a4>
   2db84:	ldr	w2, [x21, #16]
   2db88:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x6320>
   2db8c:	add	x1, x1, #0xa90
   2db90:	add	x19, sp, #0x50
   2db94:	add	w2, w2, #0x1
   2db98:	mov	x0, x19
   2db9c:	bl	65f0 <sprintf@plt>
   2dba0:	mov	x0, x19
   2dba4:	bl	64b0 <__asan_internal_strlen@plt>
   2dba8:	cbz	x0, 2dc0c <__asan_backtrace_create_state@@Base+0x5974>
   2dbac:	add	x24, x19, x0
   2dbb0:	ldr	x1, [x26, #256]
   2dbb4:	b	2dbd8 <__asan_backtrace_create_state@@Base+0x5940>
   2dbb8:	mov	x0, x1
   2dbbc:	add	x1, x1, #0x1
   2dbc0:	str	x1, [x26, #256]
   2dbc4:	add	x19, x19, #0x1
   2dbc8:	strb	w22, [x26, x0]
   2dbcc:	cmp	x24, x19
   2dbd0:	strb	w22, [x26, #264]
   2dbd4:	b.eq	2dc0c <__asan_backtrace_create_state@@Base+0x5974>  // b.none
   2dbd8:	ldrb	w22, [x19]
   2dbdc:	cmp	x1, #0xff
   2dbe0:	b.ne	2dbb8 <__asan_backtrace_create_state@@Base+0x5920>  // b.any
   2dbe4:	ldp	x3, x2, [x26, #272]
   2dbe8:	strb	wzr, [x26, #255]
   2dbec:	mov	x0, x26
   2dbf0:	blr	x3
   2dbf4:	ldr	x2, [x26, #320]
   2dbf8:	mov	x1, #0x1                   	// #1
   2dbfc:	mov	x0, #0x0                   	// #0
   2dc00:	add	x2, x2, x1
   2dc04:	str	x2, [x26, #320]
   2dc08:	b	2dbc0 <__asan_backtrace_create_state@@Base+0x5928>
   2dc0c:	adrp	x19, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2dc10:	add	x19, x19, #0x5f8
   2dc14:	mov	x0, x19
   2dc18:	bl	64b0 <__asan_internal_strlen@plt>
   2dc1c:	cbz	x0, 2dc88 <__asan_backtrace_create_state@@Base+0x59f0>
   2dc20:	add	x24, x0, x19
   2dc24:	mov	w22, #0x7d                  	// #125
   2dc28:	adrp	x19, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2dc2c:	add	x19, x19, #0x5f9
   2dc30:	ldr	x1, [x26, #256]
   2dc34:	b	2dc58 <__asan_backtrace_create_state@@Base+0x59c0>
   2dc38:	mov	x0, x1
   2dc3c:	add	x1, x1, #0x1
   2dc40:	str	x1, [x26, #256]
   2dc44:	cmp	x24, x19
   2dc48:	strb	w22, [x26, x0]
   2dc4c:	strb	w22, [x26, #264]
   2dc50:	b.eq	2dc88 <__asan_backtrace_create_state@@Base+0x59f0>  // b.none
   2dc54:	ldrb	w22, [x19], #1
   2dc58:	cmp	x1, #0xff
   2dc5c:	b.ne	2dc38 <__asan_backtrace_create_state@@Base+0x59a0>  // b.any
   2dc60:	ldp	x3, x2, [x26, #272]
   2dc64:	strb	wzr, [x26, #255]
   2dc68:	mov	x0, x26
   2dc6c:	blr	x3
   2dc70:	ldr	x2, [x26, #320]
   2dc74:	mov	x1, #0x1                   	// #1
   2dc78:	mov	x0, #0x0                   	// #0
   2dc7c:	add	x2, x2, x1
   2dc80:	str	x2, [x26, #320]
   2dc84:	b	2dc40 <__asan_backtrace_create_state@@Base+0x59a8>
   2dc88:	ldr	x21, [x21, #8]
   2dc8c:	ldr	w2, [x21]
   2dc90:	b	2da2c <__asan_backtrace_create_state@@Base+0x5794>
   2dc94:	nop
   2dc98:	stp	x29, x30, [sp, #-80]!
   2dc9c:	mov	x29, sp
   2dca0:	stp	x19, x20, [sp, #16]
   2dca4:	mov	x19, x0
   2dca8:	mov	x20, x3
   2dcac:	stp	x21, x22, [sp, #32]
   2dcb0:	mov	x0, x3
   2dcb4:	mov	w21, w1
   2dcb8:	mov	x22, x2
   2dcbc:	cbz	x3, 2dce4 <__asan_backtrace_create_state@@Base+0x5a4c>
   2dcc0:	ldr	w4, [x0, #16]
   2dcc4:	cbz	w4, 2dde8 <__asan_backtrace_create_state@@Base+0x5b50>
   2dcc8:	ldr	x0, [x0]
   2dccc:	cbnz	x0, 2dcc0 <__asan_backtrace_create_state@@Base+0x5a28>
   2dcd0:	mov	x2, x20
   2dcd4:	mov	w1, w21
   2dcd8:	mov	x0, x19
   2dcdc:	mov	w3, #0x0                   	// #0
   2dce0:	bl	2d888 <__asan_backtrace_create_state@@Base+0x55f0>
   2dce4:	ldr	x0, [x19, #256]
   2dce8:	cmp	x0, #0xff
   2dcec:	b.eq	2de14 <__asan_backtrace_create_state@@Base+0x5b7c>  // b.none
   2dcf0:	add	x1, x0, #0x1
   2dcf4:	str	x1, [x19, #256]
   2dcf8:	mov	w2, #0x20                  	// #32
   2dcfc:	strb	w2, [x19, x0]
   2dd00:	strb	w2, [x19, #264]
   2dd04:	cmp	x1, #0xff
   2dd08:	b.eq	2ddac <__asan_backtrace_create_state@@Base+0x5b14>  // b.none
   2dd0c:	add	x0, x1, #0x1
   2dd10:	str	x0, [x19, #256]
   2dd14:	mov	w2, #0x5b                  	// #91
   2dd18:	strb	w2, [x19, x1]
   2dd1c:	strb	w2, [x19, #264]
   2dd20:	ldr	x2, [x22]
   2dd24:	cbz	x2, 2dd38 <__asan_backtrace_create_state@@Base+0x5aa0>
   2dd28:	mov	x0, x19
   2dd2c:	mov	w1, w21
   2dd30:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2dd34:	ldr	x0, [x19, #256]
   2dd38:	cmp	x0, #0xff
   2dd3c:	b.eq	2dd64 <__asan_backtrace_create_state@@Base+0x5acc>  // b.none
   2dd40:	add	x1, x0, #0x1
   2dd44:	str	x1, [x19, #256]
   2dd48:	mov	w1, #0x5d                  	// #93
   2dd4c:	strb	w1, [x19, x0]
   2dd50:	strb	w1, [x19, #264]
   2dd54:	ldp	x19, x20, [sp, #16]
   2dd58:	ldp	x21, x22, [sp, #32]
   2dd5c:	ldp	x29, x30, [sp], #80
   2dd60:	ret
   2dd64:	ldp	x3, x2, [x19, #272]
   2dd68:	strb	wzr, [x19, #255]
   2dd6c:	mov	x1, x0
   2dd70:	mov	x0, x19
   2dd74:	blr	x3
   2dd78:	ldr	x2, [x19, #320]
   2dd7c:	mov	x0, #0x0                   	// #0
   2dd80:	mov	x1, #0x1                   	// #1
   2dd84:	str	x1, [x19, #256]
   2dd88:	add	x2, x2, x1
   2dd8c:	str	x2, [x19, #320]
   2dd90:	mov	w1, #0x5d                  	// #93
   2dd94:	strb	w1, [x19, x0]
   2dd98:	strb	w1, [x19, #264]
   2dd9c:	ldp	x19, x20, [sp, #16]
   2dda0:	ldp	x21, x22, [sp, #32]
   2dda4:	ldp	x29, x30, [sp], #80
   2dda8:	ret
   2ddac:	ldp	x3, x2, [x19, #272]
   2ddb0:	strb	wzr, [x19, #255]
   2ddb4:	mov	x0, x19
   2ddb8:	blr	x3
   2ddbc:	mov	w1, #0x5b                  	// #91
   2ddc0:	strb	w1, [x19]
   2ddc4:	strb	w1, [x19, #264]
   2ddc8:	mov	x0, #0x1                   	// #1
   2ddcc:	ldr	x1, [x19, #320]
   2ddd0:	ldr	x2, [x22]
   2ddd4:	add	x1, x1, x0
   2ddd8:	str	x0, [x19, #256]
   2dddc:	str	x1, [x19, #320]
   2dde0:	cbnz	x2, 2dd28 <__asan_backtrace_create_state@@Base+0x5a90>
   2dde4:	b	2dd40 <__asan_backtrace_create_state@@Base+0x5aa8>
   2dde8:	ldr	x0, [x0, #8]
   2ddec:	ldr	w0, [x0]
   2ddf0:	cmp	w0, #0x2a
   2ddf4:	b.ne	2de58 <__asan_backtrace_create_state@@Base+0x5bc0>  // b.any
   2ddf8:	mov	w1, w21
   2ddfc:	mov	x2, x20
   2de00:	mov	x0, x19
   2de04:	mov	w3, #0x0                   	// #0
   2de08:	bl	2d888 <__asan_backtrace_create_state@@Base+0x55f0>
   2de0c:	ldr	x1, [x19, #256]
   2de10:	b	2dd04 <__asan_backtrace_create_state@@Base+0x5a6c>
   2de14:	ldp	x3, x2, [x19, #272]
   2de18:	strb	wzr, [x19, #255]
   2de1c:	mov	x1, x0
   2de20:	mov	x0, x19
   2de24:	blr	x3
   2de28:	mov	w1, #0x5b20                	// #23328
   2de2c:	mov	w0, #0x5b                  	// #91
   2de30:	strh	w1, [x19]
   2de34:	strb	w0, [x19, #264]
   2de38:	mov	x0, #0x2                   	// #2
   2de3c:	ldr	x1, [x19, #320]
   2de40:	ldr	x2, [x22]
   2de44:	add	x1, x1, #0x1
   2de48:	str	x0, [x19, #256]
   2de4c:	str	x1, [x19, #320]
   2de50:	cbnz	x2, 2dd28 <__asan_backtrace_create_state@@Base+0x5a90>
   2de54:	b	2dd40 <__asan_backtrace_create_state@@Base+0x5aa8>
   2de58:	str	x25, [sp, #64]
   2de5c:	adrp	x25, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2de60:	add	x25, x25, #0x890
   2de64:	mov	x0, x25
   2de68:	bl	64b0 <__asan_internal_strlen@plt>
   2de6c:	cbz	x0, 2def0 <__asan_backtrace_create_state@@Base+0x5c58>
   2de70:	add	x25, x0, x25
   2de74:	stp	x23, x24, [sp, #48]
   2de78:	adrp	x23, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2de7c:	mov	w24, #0x20                  	// #32
   2de80:	add	x23, x23, #0x891
   2de84:	ldr	x1, [x19, #256]
   2de88:	b	2deac <__asan_backtrace_create_state@@Base+0x5c14>
   2de8c:	mov	x0, x1
   2de90:	add	x1, x1, #0x1
   2de94:	str	x1, [x19, #256]
   2de98:	cmp	x25, x23
   2de9c:	strb	w24, [x19, x0]
   2dea0:	strb	w24, [x19, #264]
   2dea4:	b.eq	2deec <__asan_backtrace_create_state@@Base+0x5c54>  // b.none
   2dea8:	ldrb	w24, [x23], #1
   2deac:	cmp	x1, #0xff
   2deb0:	b.ne	2de8c <__asan_backtrace_create_state@@Base+0x5bf4>  // b.any
   2deb4:	ldp	x3, x2, [x19, #272]
   2deb8:	strb	wzr, [x19, #255]
   2debc:	mov	x0, x19
   2dec0:	blr	x3
   2dec4:	ldr	x2, [x19, #320]
   2dec8:	mov	x0, #0x0                   	// #0
   2decc:	mov	x1, #0x1                   	// #1
   2ded0:	str	x1, [x19, #256]
   2ded4:	add	x2, x2, x1
   2ded8:	str	x2, [x19, #320]
   2dedc:	strb	w24, [x19, x0]
   2dee0:	cmp	x25, x23
   2dee4:	strb	w24, [x19, #264]
   2dee8:	b.ne	2dea8 <__asan_backtrace_create_state@@Base+0x5c10>  // b.any
   2deec:	ldp	x23, x24, [sp, #48]
   2def0:	mov	w1, w21
   2def4:	mov	x2, x20
   2def8:	mov	x0, x19
   2defc:	mov	w3, #0x0                   	// #0
   2df00:	bl	2d888 <__asan_backtrace_create_state@@Base+0x55f0>
   2df04:	ldr	x1, [x19, #256]
   2df08:	cmp	x1, #0xff
   2df0c:	b.eq	2df2c <__asan_backtrace_create_state@@Base+0x5c94>  // b.none
   2df10:	add	x0, x1, #0x1
   2df14:	str	x0, [x19, #256]
   2df18:	mov	w2, #0x29                  	// #41
   2df1c:	strb	w2, [x19, x1]
   2df20:	strb	w2, [x19, #264]
   2df24:	ldr	x25, [sp, #64]
   2df28:	b	2dce8 <__asan_backtrace_create_state@@Base+0x5a50>
   2df2c:	ldp	x3, x2, [x19, #272]
   2df30:	strb	wzr, [x19, #255]
   2df34:	mov	x0, x19
   2df38:	blr	x3
   2df3c:	ldr	x1, [x19, #320]
   2df40:	mov	w2, #0x29                  	// #41
   2df44:	strb	w2, [x19]
   2df48:	mov	x0, #0x1                   	// #1
   2df4c:	add	x1, x1, x0
   2df50:	ldr	x25, [sp, #64]
   2df54:	str	x1, [x19, #320]
   2df58:	b	2dcf0 <__asan_backtrace_create_state@@Base+0x5a58>
   2df5c:	nop
   2df60:	ldr	w4, [x2]
   2df64:	cmp	w4, #0x32
   2df68:	b.eq	2df70 <__asan_backtrace_create_state@@Base+0x5cd8>  // b.none
   2df6c:	b	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2df70:	stp	x29, x30, [sp, #-48]!
   2df74:	mov	x29, sp
   2df78:	stp	x19, x20, [sp, #16]
   2df7c:	mov	x19, x0
   2df80:	ldr	x0, [x2, #8]
   2df84:	stp	x21, x22, [sp, #32]
   2df88:	ldrsw	x22, [x0, #16]
   2df8c:	ldr	x20, [x0, #8]
   2df90:	cbz	x22, 2e008 <__asan_backtrace_create_state@@Base+0x5d70>
   2df94:	add	x22, x20, x22
   2df98:	ldr	x1, [x19, #256]
   2df9c:	b	2dfc0 <__asan_backtrace_create_state@@Base+0x5d28>
   2dfa0:	mov	x2, x1
   2dfa4:	add	x1, x1, #0x1
   2dfa8:	str	x1, [x19, #256]
   2dfac:	add	x20, x20, #0x1
   2dfb0:	cmp	x20, x22
   2dfb4:	strb	w21, [x19, x2]
   2dfb8:	strb	w21, [x19, #264]
   2dfbc:	b.eq	2e008 <__asan_backtrace_create_state@@Base+0x5d70>  // b.none
   2dfc0:	ldrb	w21, [x20]
   2dfc4:	cmp	x1, #0xff
   2dfc8:	b.ne	2dfa0 <__asan_backtrace_create_state@@Base+0x5d08>  // b.any
   2dfcc:	ldp	x3, x2, [x19, #272]
   2dfd0:	strb	wzr, [x19, #255]
   2dfd4:	mov	x0, x19
   2dfd8:	add	x20, x20, #0x1
   2dfdc:	blr	x3
   2dfe0:	ldr	x0, [x19, #320]
   2dfe4:	mov	x2, #0x0                   	// #0
   2dfe8:	mov	x1, #0x1                   	// #1
   2dfec:	str	x1, [x19, #256]
   2dff0:	add	x0, x0, x1
   2dff4:	str	x0, [x19, #320]
   2dff8:	strb	w21, [x19, x2]
   2dffc:	cmp	x20, x22
   2e000:	strb	w21, [x19, #264]
   2e004:	b.ne	2dfc0 <__asan_backtrace_create_state@@Base+0x5d28>  // b.any
   2e008:	ldp	x19, x20, [sp, #16]
   2e00c:	ldp	x21, x22, [sp, #32]
   2e010:	ldp	x29, x30, [sp], #48
   2e014:	ret
   2e018:	stp	x29, x30, [sp, #-48]!
   2e01c:	mov	x29, sp
   2e020:	str	x21, [sp, #32]
   2e024:	mov	w21, w1
   2e028:	ldr	w1, [x2]
   2e02c:	stp	x19, x20, [sp, #16]
   2e030:	mov	x20, x2
   2e034:	cmp	w1, #0x31
   2e038:	mov	x19, x0
   2e03c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   2e040:	b.ls	2e0d0 <__asan_backtrace_create_state@@Base+0x5e38>  // b.plast
   2e044:	cmp	w1, #0x6
   2e048:	b.eq	2e0d0 <__asan_backtrace_create_state@@Base+0x5e38>  // b.none
   2e04c:	ldr	x1, [x0, #256]
   2e050:	cmp	x1, #0xff
   2e054:	b.eq	2e0ec <__asan_backtrace_create_state@@Base+0x5e54>  // b.none
   2e058:	add	x0, x1, #0x1
   2e05c:	str	x0, [x19, #256]
   2e060:	mov	w0, #0x28                  	// #40
   2e064:	strb	w0, [x19, x1]
   2e068:	mov	x2, x20
   2e06c:	strb	w0, [x19, #264]
   2e070:	mov	w1, w21
   2e074:	mov	x0, x19
   2e078:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2e07c:	ldr	x1, [x19, #256]
   2e080:	add	x0, x1, #0x1
   2e084:	cmp	x1, #0xff
   2e088:	b.ne	2e0b0 <__asan_backtrace_create_state@@Base+0x5e18>  // b.any
   2e08c:	ldp	x3, x2, [x19, #272]
   2e090:	strb	wzr, [x19, #255]
   2e094:	mov	x0, x19
   2e098:	blr	x3
   2e09c:	ldr	x2, [x19, #320]
   2e0a0:	mov	x0, #0x1                   	// #1
   2e0a4:	mov	x1, #0x0                   	// #0
   2e0a8:	add	x2, x2, x0
   2e0ac:	str	x2, [x19, #320]
   2e0b0:	str	x0, [x19, #256]
   2e0b4:	mov	w0, #0x29                  	// #41
   2e0b8:	strb	w0, [x19, x1]
   2e0bc:	strb	w0, [x19, #264]
   2e0c0:	ldp	x19, x20, [sp, #16]
   2e0c4:	ldr	x21, [sp, #32]
   2e0c8:	ldp	x29, x30, [sp], #48
   2e0cc:	ret
   2e0d0:	mov	x2, x20
   2e0d4:	mov	w1, w21
   2e0d8:	mov	x0, x19
   2e0dc:	ldp	x19, x20, [sp, #16]
   2e0e0:	ldr	x21, [sp, #32]
   2e0e4:	ldp	x29, x30, [sp], #48
   2e0e8:	b	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   2e0ec:	ldp	x3, x2, [x0, #272]
   2e0f0:	strb	wzr, [x0, #255]
   2e0f4:	blr	x3
   2e0f8:	ldr	x2, [x19, #320]
   2e0fc:	mov	x0, #0x1                   	// #1
   2e100:	mov	x1, #0x0                   	// #0
   2e104:	add	x2, x2, x0
   2e108:	str	x2, [x19, #320]
   2e10c:	b	2e05c <__asan_backtrace_create_state@@Base+0x5dc4>
   2e110:	stp	x29, x30, [sp, #-80]!
   2e114:	mov	x29, sp
   2e118:	stp	x19, x20, [sp, #16]
   2e11c:	mov	x19, x0
   2e120:	mov	w20, w1
   2e124:	ldr	x0, [x2, #8]
   2e128:	ldr	x0, [x0]
   2e12c:	ldrb	w1, [x0]
   2e130:	cmp	w1, #0x66
   2e134:	b.ne	2e2d8 <__asan_backtrace_create_state@@Base+0x6040>  // b.any
   2e138:	ldr	x1, [x3]
   2e13c:	stp	x23, x24, [sp, #48]
   2e140:	stp	x25, x26, [sp, #64]
   2e144:	mov	x25, #0x0                   	// #0
   2e148:	ldp	x23, x26, [x1, #8]
   2e14c:	stp	x21, x22, [sp, #32]
   2e150:	ldr	w1, [x26]
   2e154:	cmp	w1, #0x3c
   2e158:	b.eq	2e3ac <__asan_backtrace_create_state@@Base+0x6114>  // b.none
   2e15c:	ldr	w22, [x19, #316]
   2e160:	mov	w1, #0xffffffff            	// #-1
   2e164:	str	w1, [x19, #316]
   2e168:	ldrb	w0, [x0, #1]
   2e16c:	cmp	w0, #0x6c
   2e170:	b.eq	2e3cc <__asan_backtrace_create_state@@Base+0x6134>  // b.none
   2e174:	b.hi	2e2e8 <__asan_backtrace_create_state@@Base+0x6050>  // b.pmore
   2e178:	cmp	w0, #0x4c
   2e17c:	b.eq	2e188 <__asan_backtrace_create_state@@Base+0x5ef0>  // b.none
   2e180:	cmp	w0, #0x52
   2e184:	b.ne	2e2b8 <__asan_backtrace_create_state@@Base+0x6020>  // b.any
   2e188:	ldr	x1, [x19, #256]
   2e18c:	add	x0, x1, #0x1
   2e190:	cmp	x1, #0xff
   2e194:	b.eq	2e498 <__asan_backtrace_create_state@@Base+0x6200>  // b.none
   2e198:	str	x0, [x19, #256]
   2e19c:	mov	w0, #0x28                  	// #40
   2e1a0:	strb	w0, [x19, x1]
   2e1a4:	mov	x2, x26
   2e1a8:	strb	w0, [x19, #264]
   2e1ac:	mov	w1, w20
   2e1b0:	mov	x0, x19
   2e1b4:	adrp	x26, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   2e1b8:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2e1bc:	add	x26, x26, #0x2c8
   2e1c0:	mov	x2, x23
   2e1c4:	mov	w1, w20
   2e1c8:	mov	x0, x19
   2e1cc:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2e1d0:	mov	x0, x26
   2e1d4:	bl	64b0 <__asan_internal_strlen@plt>
   2e1d8:	cbz	x0, 2e254 <__asan_backtrace_create_state@@Base+0x5fbc>
   2e1dc:	adrp	x21, 3a000 <__asan_backtrace_vector_release@@Base+0x4320>
   2e1e0:	add	x26, x0, x26
   2e1e4:	add	x21, x21, #0x2c9
   2e1e8:	mov	w24, #0x2e                  	// #46
   2e1ec:	ldr	x1, [x19, #256]
   2e1f0:	b	2e214 <__asan_backtrace_create_state@@Base+0x5f7c>
   2e1f4:	mov	x2, x1
   2e1f8:	add	x1, x1, #0x1
   2e1fc:	str	x1, [x19, #256]
   2e200:	cmp	x21, x26
   2e204:	strb	w24, [x19, x2]
   2e208:	strb	w24, [x19, #264]
   2e20c:	b.eq	2e254 <__asan_backtrace_create_state@@Base+0x5fbc>  // b.none
   2e210:	ldrb	w24, [x21], #1
   2e214:	cmp	x1, #0xff
   2e218:	b.ne	2e1f4 <__asan_backtrace_create_state@@Base+0x5f5c>  // b.any
   2e21c:	ldp	x3, x2, [x19, #272]
   2e220:	strb	wzr, [x19, #255]
   2e224:	mov	x0, x19
   2e228:	blr	x3
   2e22c:	ldr	x0, [x19, #320]
   2e230:	mov	x2, #0x0                   	// #0
   2e234:	mov	x1, #0x1                   	// #1
   2e238:	str	x1, [x19, #256]
   2e23c:	add	x0, x0, x1
   2e240:	str	x0, [x19, #320]
   2e244:	strb	w24, [x19, x2]
   2e248:	cmp	x21, x26
   2e24c:	strb	w24, [x19, #264]
   2e250:	b.ne	2e210 <__asan_backtrace_create_state@@Base+0x5f78>  // b.any
   2e254:	mov	x2, x23
   2e258:	mov	w1, w20
   2e25c:	mov	x0, x19
   2e260:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2e264:	mov	x2, x25
   2e268:	mov	w1, w20
   2e26c:	mov	x0, x19
   2e270:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2e274:	ldr	x1, [x19, #256]
   2e278:	add	x0, x1, #0x1
   2e27c:	cmp	x1, #0xff
   2e280:	b.ne	2e2a8 <__asan_backtrace_create_state@@Base+0x6010>  // b.any
   2e284:	ldp	x3, x2, [x19, #272]
   2e288:	strb	wzr, [x19, #255]
   2e28c:	mov	x0, x19
   2e290:	blr	x3
   2e294:	ldr	x2, [x19, #320]
   2e298:	mov	x0, #0x1                   	// #1
   2e29c:	mov	x1, #0x0                   	// #0
   2e2a0:	add	x2, x2, x0
   2e2a4:	str	x2, [x19, #320]
   2e2a8:	str	x0, [x19, #256]
   2e2ac:	mov	w0, #0x29                  	// #41
   2e2b0:	strb	w0, [x19, x1]
   2e2b4:	strb	w0, [x19, #264]
   2e2b8:	ldp	x23, x24, [sp, #48]
   2e2bc:	mov	w0, #0x1                   	// #1
   2e2c0:	ldp	x25, x26, [sp, #64]
   2e2c4:	str	w22, [x19, #316]
   2e2c8:	ldp	x19, x20, [sp, #16]
   2e2cc:	ldp	x21, x22, [sp, #32]
   2e2d0:	ldp	x29, x30, [sp], #80
   2e2d4:	ret
   2e2d8:	mov	w0, #0x0                   	// #0
   2e2dc:	ldp	x19, x20, [sp, #16]
   2e2e0:	ldp	x29, x30, [sp], #80
   2e2e4:	ret
   2e2e8:	cmp	w0, #0x72
   2e2ec:	b.ne	2e2b8 <__asan_backtrace_create_state@@Base+0x6020>  // b.any
   2e2f0:	ldr	x1, [x19, #256]
   2e2f4:	add	x0, x1, #0x1
   2e2f8:	cmp	x1, #0xff
   2e2fc:	b.eq	2e470 <__asan_backtrace_create_state@@Base+0x61d8>  // b.none
   2e300:	str	x0, [x19, #256]
   2e304:	mov	w0, #0x28                  	// #40
   2e308:	strb	w0, [x19, x1]
   2e30c:	mov	x2, x26
   2e310:	strb	w0, [x19, #264]
   2e314:	mov	w1, w20
   2e318:	mov	x0, x19
   2e31c:	bl	2e018 <__asan_backtrace_create_state@@Base+0x5d80>
   2e320:	mov	x2, x23
   2e324:	mov	w1, w20
   2e328:	mov	x0, x19
   2e32c:	adrp	x23, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2e330:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2e334:	add	x23, x23, #0x9c8
   2e338:	mov	x0, x23
   2e33c:	bl	64b0 <__asan_internal_strlen@plt>
   2e340:	cbz	x0, 2e2b8 <__asan_backtrace_create_state@@Base+0x6020>
   2e344:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2e348:	add	x23, x0, x23
   2e34c:	add	x20, x20, #0x9c9
   2e350:	mov	w21, #0x2e                  	// #46
   2e354:	ldr	x1, [x19, #256]
   2e358:	b	2e37c <__asan_backtrace_create_state@@Base+0x60e4>
   2e35c:	mov	x2, x1
   2e360:	add	x1, x1, #0x1
   2e364:	str	x1, [x19, #256]
   2e368:	cmp	x23, x20
   2e36c:	strb	w21, [x19, x2]
   2e370:	strb	w21, [x19, #264]
   2e374:	b.eq	2e2b8 <__asan_backtrace_create_state@@Base+0x6020>  // b.none
   2e378:	ldrb	w21, [x20], #1
   2e37c:	cmp	x1, #0xff
   2e380:	b.ne	2e35c <__asan_backtrace_create_state@@Base+0x60c4>  // b.any
   2e384:	ldp	x3, x2, [x19, #272]
   2e388:	strb	wzr, [x19, #255]
   2e38c:	mov	x0, x19
   2e390:	blr	x3
   2e394:	ldr	x0, [x19, #320]
   2e398:	mov	x1, #0x1                   	// #1
   2e39c:	mov	x2, #0x0                   	// #0
   2e3a0:	add	x0, x0, x1
   2e3a4:	str	x0, [x19, #320]
   2e3a8:	b	2e364 <__asan_backtrace_create_state@@Base+0x60cc>
   2e3ac:	ldr	w22, [x19, #316]
   2e3b0:	mov	w1, #0xffffffff            	// #-1
   2e3b4:	ldr	x25, [x26, #16]
   2e3b8:	ldr	x26, [x26, #8]
   2e3bc:	str	w1, [x19, #316]
   2e3c0:	ldrb	w0, [x0, #1]
   2e3c4:	cmp	w0, #0x6c
   2e3c8:	b.ne	2e174 <__asan_backtrace_create_state@@Base+0x5edc>  // b.any
   2e3cc:	adrp	x25, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2e3d0:	add	x25, x25, #0x9c0
   2e3d4:	mov	x0, x25
   2e3d8:	bl	64b0 <__asan_internal_strlen@plt>
   2e3dc:	cbz	x0, 2e458 <__asan_backtrace_create_state@@Base+0x61c0>
   2e3e0:	adrp	x21, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2e3e4:	add	x25, x0, x25
   2e3e8:	add	x21, x21, #0x9c1
   2e3ec:	mov	w24, #0x28                  	// #40
   2e3f0:	ldr	x1, [x19, #256]
   2e3f4:	b	2e418 <__asan_backtrace_create_state@@Base+0x6180>
   2e3f8:	mov	x2, x1
   2e3fc:	add	x1, x1, #0x1
   2e400:	str	x1, [x19, #256]
   2e404:	cmp	x25, x21
   2e408:	strb	w24, [x19, x2]
   2e40c:	strb	w24, [x19, #264]
   2e410:	b.eq	2e458 <__asan_backtrace_create_state@@Base+0x61c0>  // b.none
   2e414:	ldrb	w24, [x21], #1
   2e418:	cmp	x1, #0xff
   2e41c:	b.ne	2e3f8 <__asan_backtrace_create_state@@Base+0x6160>  // b.any
   2e420:	ldp	x3, x2, [x19, #272]
   2e424:	strb	wzr, [x19, #255]
   2e428:	mov	x0, x19
   2e42c:	blr	x3
   2e430:	ldr	x0, [x19, #320]
   2e434:	mov	x2, #0x0                   	// #0
   2e438:	mov	x1, #0x1                   	// #1
   2e43c:	str	x1, [x19, #256]
   2e440:	add	x0, x0, x1
   2e444:	str	x0, [x19, #320]
   2e448:	strb	w24, [x19, x2]
   2e44c:	cmp	x25, x21
   2e450:	strb	w24, [x19, #264]
   2e454:	b.ne	2e414 <__asan_backtrace_create_state@@Base+0x617c>  // b.any
   2e458:	mov	x2, x23
   2e45c:	mov	w1, w20
   2e460:	mov	x0, x19
   2e464:	bl	2df60 <__asan_backtrace_create_state@@Base+0x5cc8>
   2e468:	mov	x2, x26
   2e46c:	b	2e268 <__asan_backtrace_create_state@@Base+0x5fd0>
   2e470:	ldp	x3, x2, [x19, #272]
   2e474:	strb	wzr, [x19, #255]
   2e478:	mov	x0, x19
   2e47c:	blr	x3
   2e480:	ldr	x2, [x19, #320]
   2e484:	mov	x0, #0x1                   	// #1
   2e488:	mov	x1, #0x0                   	// #0
   2e48c:	add	x2, x2, x0
   2e490:	str	x2, [x19, #320]
   2e494:	b	2e300 <__asan_backtrace_create_state@@Base+0x6068>
   2e498:	ldp	x3, x2, [x19, #272]
   2e49c:	strb	wzr, [x19, #255]
   2e4a0:	mov	x0, x19
   2e4a4:	blr	x3
   2e4a8:	ldr	x2, [x19, #320]
   2e4ac:	mov	x0, #0x1                   	// #1
   2e4b0:	mov	x1, #0x0                   	// #0
   2e4b4:	add	x2, x2, x0
   2e4b8:	str	x2, [x19, #320]
   2e4bc:	b	2e198 <__asan_backtrace_create_state@@Base+0x5f00>

000000000002e4c0 <__asan_cplus_demangle_fill_name@@Base>:
   2e4c0:	cmp	x1, #0x0
   2e4c4:	mov	x3, x0
   2e4c8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   2e4cc:	ccmp	x0, #0x0, #0x4, gt
   2e4d0:	mov	w0, #0x0                   	// #0
   2e4d4:	b.ne	2e4dc <__asan_cplus_demangle_fill_name@@Base+0x1c>  // b.any
   2e4d8:	ret
   2e4dc:	mov	w0, #0x1                   	// #1
   2e4e0:	stp	xzr, x1, [x3]
   2e4e4:	str	w2, [x3, #16]
   2e4e8:	ret
   2e4ec:	nop
   2e4f0:	stp	x29, x30, [sp, #-32]!
   2e4f4:	mov	x29, sp
   2e4f8:	ldr	w3, [x0, #44]
   2e4fc:	str	x19, [sp, #16]
   2e500:	ldr	w19, [x0, #40]
   2e504:	cmp	w19, w3
   2e508:	b.ge	2e540 <__asan_cplus_demangle_fill_name@@Base+0x80>  // b.tcont
   2e50c:	ldr	x4, [x0, #32]
   2e510:	mov	w5, #0x18                  	// #24
   2e514:	add	w3, w19, #0x1
   2e518:	smaddl	x19, w19, w5, x4
   2e51c:	str	wzr, [x19, #4]
   2e520:	str	w3, [x0, #40]
   2e524:	mov	x0, x19
   2e528:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   2e52c:	cmp	w0, #0x0
   2e530:	csel	x0, x19, xzr, ne  // ne = any
   2e534:	ldr	x19, [sp, #16]
   2e538:	ldp	x29, x30, [sp], #32
   2e53c:	ret
   2e540:	mov	x19, #0x0                   	// #0
   2e544:	mov	x0, x19
   2e548:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   2e54c:	cmp	w0, #0x0
   2e550:	csel	x0, x19, xzr, ne  // ne = any
   2e554:	ldr	x19, [sp, #16]
   2e558:	ldp	x29, x30, [sp], #32
   2e55c:	ret
   2e560:	stp	x29, x30, [sp, #-48]!
   2e564:	mov	x29, sp
   2e568:	stp	x19, x20, [sp, #16]
   2e56c:	mov	x19, x0
   2e570:	add	x0, x0, #0x18
   2e574:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   2e578:	cmp	w0, #0x0
   2e57c:	b.le	2e650 <__asan_cplus_demangle_fill_name@@Base+0x190>
   2e580:	mov	w20, w0
   2e584:	sxtw	x1, w0
   2e588:	ldr	x0, [x19, #8]
   2e58c:	str	x21, [sp, #32]
   2e590:	ldr	x21, [x19, #24]
   2e594:	sub	x0, x0, x21
   2e598:	cmp	x0, w20, sxtw
   2e59c:	b.lt	2e674 <__asan_cplus_demangle_fill_name@@Base+0x1b4>  // b.tstop
   2e5a0:	ldr	w0, [x19, #16]
   2e5a4:	add	x1, x21, x1
   2e5a8:	str	x1, [x19, #24]
   2e5ac:	tbz	w0, #2, 2e5bc <__asan_cplus_demangle_fill_name@@Base+0xfc>
   2e5b0:	ldrb	w0, [x21, w20, sxtw]
   2e5b4:	cmp	w0, #0x24
   2e5b8:	b.eq	2e660 <__asan_cplus_demangle_fill_name@@Base+0x1a0>  // b.none
   2e5bc:	cmp	w20, #0x9
   2e5c0:	b.gt	2e5e8 <__asan_cplus_demangle_fill_name@@Base+0x128>
   2e5c4:	mov	w2, w20
   2e5c8:	mov	x1, x21
   2e5cc:	mov	x0, x19
   2e5d0:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   2e5d4:	ldr	x21, [sp, #32]
   2e5d8:	str	x0, [x19, #64]
   2e5dc:	ldp	x19, x20, [sp, #16]
   2e5e0:	ldp	x29, x30, [sp], #48
   2e5e4:	ret
   2e5e8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2e5ec:	mov	x0, x21
   2e5f0:	add	x1, x1, #0x9d0
   2e5f4:	mov	x2, #0x8                   	// #8
   2e5f8:	bl	68f0 <__asan_internal_memcmp@plt>
   2e5fc:	cbnz	w0, 2e5c4 <__asan_cplus_demangle_fill_name@@Base+0x104>
   2e600:	ldrb	w0, [x21, #8]
   2e604:	mov	w2, #0x5f                  	// #95
   2e608:	mov	w1, #0x24                  	// #36
   2e60c:	cmp	w0, #0x2e
   2e610:	ccmp	w0, w2, #0x4, ne  // ne = any
   2e614:	ccmp	w0, w1, #0x4, ne  // ne = any
   2e618:	b.ne	2e5c4 <__asan_cplus_demangle_fill_name@@Base+0x104>  // b.any
   2e61c:	ldrb	w0, [x21, #9]
   2e620:	cmp	w0, #0x4e
   2e624:	b.ne	2e5c4 <__asan_cplus_demangle_fill_name@@Base+0x104>  // b.any
   2e628:	ldr	w3, [x19, #72]
   2e62c:	mov	x0, x19
   2e630:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2e634:	mov	w2, #0x15                  	// #21
   2e638:	add	w3, w3, #0x16
   2e63c:	add	x1, x1, #0x9e0
   2e640:	sub	w20, w3, w20
   2e644:	str	w20, [x19, #72]
   2e648:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   2e64c:	b	2e5d4 <__asan_cplus_demangle_fill_name@@Base+0x114>
   2e650:	mov	x0, #0x0                   	// #0
   2e654:	ldp	x19, x20, [sp, #16]
   2e658:	ldp	x29, x30, [sp], #48
   2e65c:	ret
   2e660:	add	x1, x1, #0x1
   2e664:	str	x1, [x19, #24]
   2e668:	cmp	w20, #0x9
   2e66c:	b.le	2e5c4 <__asan_cplus_demangle_fill_name@@Base+0x104>
   2e670:	b	2e5e8 <__asan_cplus_demangle_fill_name@@Base+0x128>
   2e674:	mov	x0, #0x0                   	// #0
   2e678:	b	2e5d4 <__asan_cplus_demangle_fill_name@@Base+0x114>
   2e67c:	nop
   2e680:	stp	x29, x30, [sp, #-48]!
   2e684:	mov	x29, sp
   2e688:	ldr	x3, [x0, #24]
   2e68c:	stp	x19, x20, [sp, #16]
   2e690:	mov	x19, x0
   2e694:	str	x21, [sp, #32]
   2e698:	mov	x20, x1
   2e69c:	ldr	x21, [x0, #64]
   2e6a0:	ldrb	w0, [x3]
   2e6a4:	cmp	w0, #0x42
   2e6a8:	b.ne	2e6e8 <__asan_cplus_demangle_fill_name@@Base+0x228>  // b.any
   2e6ac:	nop
   2e6b0:	add	x3, x3, #0x1
   2e6b4:	str	x3, [x19, #24]
   2e6b8:	mov	x0, x19
   2e6bc:	bl	2e560 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   2e6c0:	mov	x3, x0
   2e6c4:	mov	x2, x20
   2e6c8:	mov	x0, x19
   2e6cc:	mov	w1, #0x4c                  	// #76
   2e6d0:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2e6d4:	ldr	x3, [x19, #24]
   2e6d8:	mov	x20, x0
   2e6dc:	ldrb	w0, [x3]
   2e6e0:	cmp	w0, #0x42
   2e6e4:	b.eq	2e6b0 <__asan_cplus_demangle_fill_name@@Base+0x1f0>  // b.none
   2e6e8:	str	x21, [x19, #64]
   2e6ec:	mov	x0, x20
   2e6f0:	ldp	x19, x20, [sp, #16]
   2e6f4:	ldr	x21, [sp, #32]
   2e6f8:	ldp	x29, x30, [sp], #48
   2e6fc:	ret
   2e700:	stp	x29, x30, [sp, #-32]!
   2e704:	mov	x29, sp
   2e708:	str	x19, [sp, #16]
   2e70c:	mov	x19, x0
   2e710:	ldr	x0, [x0, #24]
   2e714:	ldrb	w2, [x0]
   2e718:	cmp	w2, #0x53
   2e71c:	b.ne	2e790 <__asan_cplus_demangle_fill_name@@Base+0x2d0>  // b.any
   2e720:	add	x2, x0, #0x1
   2e724:	str	x2, [x19, #24]
   2e728:	ldrb	w2, [x0, #1]
   2e72c:	cbnz	w2, 2e7a0 <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   2e730:	ldr	w0, [x19, #16]
   2e734:	and	w1, w1, #0x1
   2e738:	ands	w3, w0, #0x8
   2e73c:	ubfx	x4, x0, #3, #1
   2e740:	csel	w1, w1, wzr, eq  // eq = none
   2e744:	cbz	w1, 2e760 <__asan_cplus_demangle_fill_name@@Base+0x2a0>
   2e748:	ldr	x0, [x19, #24]
   2e74c:	ldrb	w0, [x0]
   2e750:	sub	w0, w0, #0x43
   2e754:	and	w0, w0, #0xff
   2e758:	cmp	w0, #0x1
   2e75c:	csinc	w4, w4, wzr, hi  // hi = pmore
   2e760:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0x23320>
   2e764:	add	x0, x0, #0xfd8
   2e768:	add	x3, x0, #0x188
   2e76c:	mov	w1, #0x74                  	// #116
   2e770:	b	2e778 <__asan_cplus_demangle_fill_name@@Base+0x2b8>
   2e774:	ldrb	w1, [x0]
   2e778:	cmp	w1, w2
   2e77c:	b.eq	2e87c <__asan_cplus_demangle_fill_name@@Base+0x3bc>  // b.none
   2e780:	add	x0, x0, #0x38
   2e784:	cmp	x0, x3
   2e788:	b.ne	2e774 <__asan_cplus_demangle_fill_name@@Base+0x2b4>  // b.any
   2e78c:	nop
   2e790:	mov	x0, #0x0                   	// #0
   2e794:	ldr	x19, [sp, #16]
   2e798:	ldp	x29, x30, [sp], #32
   2e79c:	ret
   2e7a0:	add	x2, x0, #0x2
   2e7a4:	str	x2, [x19, #24]
   2e7a8:	ldrb	w2, [x0, #1]
   2e7ac:	sub	w5, w2, #0x30
   2e7b0:	cmp	w2, #0x5f
   2e7b4:	and	w0, w5, #0xff
   2e7b8:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   2e7bc:	b.hi	2e7ec <__asan_cplus_demangle_fill_name@@Base+0x32c>  // b.pmore
   2e7c0:	cmp	w2, #0x5f
   2e7c4:	mov	w1, #0x0                   	// #0
   2e7c8:	b.ne	2e800 <__asan_cplus_demangle_fill_name@@Base+0x340>  // b.any
   2e7cc:	ldr	w0, [x19, #56]
   2e7d0:	cmp	w0, w1
   2e7d4:	b.ls	2e790 <__asan_cplus_demangle_fill_name@@Base+0x2d0>  // b.plast
   2e7d8:	ldr	x0, [x19, #48]
   2e7dc:	ldr	x19, [sp, #16]
   2e7e0:	ldp	x29, x30, [sp], #32
   2e7e4:	ldr	x0, [x0, w1, uxtw #3]
   2e7e8:	ret
   2e7ec:	sub	w0, w2, #0x41
   2e7f0:	and	w0, w0, #0xff
   2e7f4:	cmp	w0, #0x19
   2e7f8:	b.hi	2e730 <__asan_cplus_demangle_fill_name@@Base+0x270>  // b.pmore
   2e7fc:	nop
   2e800:	mov	w3, #0x0                   	// #0
   2e804:	nop
   2e808:	add	w1, w3, w3, lsl #3
   2e80c:	sub	w6, w2, #0x41
   2e810:	mov	w4, w1
   2e814:	and	w5, w5, #0xff
   2e818:	add	w1, w2, w1, lsl #2
   2e81c:	and	w6, w6, #0xff
   2e820:	sub	w1, w1, #0x37
   2e824:	add	w2, w2, w4, lsl #2
   2e828:	cmp	w5, #0x9
   2e82c:	b.hi	2e870 <__asan_cplus_demangle_fill_name@@Base+0x3b0>  // b.pmore
   2e830:	sub	w1, w2, #0x30
   2e834:	cmp	w3, w1
   2e838:	b.hi	2e790 <__asan_cplus_demangle_fill_name@@Base+0x2d0>  // b.pmore
   2e83c:	ldr	x4, [x19, #24]
   2e840:	mov	w3, w1
   2e844:	add	x0, x4, #0x1
   2e848:	ldrb	w2, [x4]
   2e84c:	cbz	w2, 2e860 <__asan_cplus_demangle_fill_name@@Base+0x3a0>
   2e850:	str	x0, [x19, #24]
   2e854:	ldrb	w2, [x4]
   2e858:	cmp	w2, #0x5f
   2e85c:	b.eq	2e868 <__asan_cplus_demangle_fill_name@@Base+0x3a8>  // b.none
   2e860:	sub	w5, w2, #0x30
   2e864:	b	2e808 <__asan_cplus_demangle_fill_name@@Base+0x348>
   2e868:	add	w1, w1, #0x1
   2e86c:	b	2e7cc <__asan_cplus_demangle_fill_name@@Base+0x30c>
   2e870:	cmp	w6, #0x19
   2e874:	b.ls	2e834 <__asan_cplus_demangle_fill_name@@Base+0x374>  // b.plast
   2e878:	b	2e790 <__asan_cplus_demangle_fill_name@@Base+0x2d0>
   2e87c:	ldr	x5, [x0, #40]
   2e880:	ldp	w1, w3, [x19, #40]
   2e884:	cbz	x5, 2e8c0 <__asan_cplus_demangle_fill_name@@Base+0x400>
   2e888:	ldr	w9, [x0, #48]
   2e88c:	cmp	w3, w1
   2e890:	b.le	2e95c <__asan_cplus_demangle_fill_name@@Base+0x49c>
   2e894:	mov	w8, #0x18                  	// #24
   2e898:	ldr	x7, [x19, #32]
   2e89c:	smull	x6, w1, w8
   2e8a0:	add	w1, w1, #0x1
   2e8a4:	add	x2, x7, x6
   2e8a8:	str	wzr, [x2, #4]
   2e8ac:	str	w1, [x19, #40]
   2e8b0:	str	w8, [x7, x6]
   2e8b4:	str	x5, [x2, #8]
   2e8b8:	str	w9, [x2, #16]
   2e8bc:	str	x2, [x19, #64]
   2e8c0:	cbz	w4, 2e948 <__asan_cplus_demangle_fill_name@@Base+0x488>
   2e8c4:	ldr	w2, [x0, #32]
   2e8c8:	ldr	x5, [x0, #24]
   2e8cc:	cmp	w1, w3
   2e8d0:	ldr	w0, [x19, #72]
   2e8d4:	add	w0, w0, w2
   2e8d8:	str	w0, [x19, #72]
   2e8dc:	b.ge	2e954 <__asan_cplus_demangle_fill_name@@Base+0x494>  // b.tcont
   2e8e0:	mov	w4, #0x18                  	// #24
   2e8e4:	add	w6, w1, #0x1
   2e8e8:	ldr	x3, [x19, #32]
   2e8ec:	smull	x1, w1, w4
   2e8f0:	add	x0, x3, x1
   2e8f4:	str	wzr, [x0, #4]
   2e8f8:	str	w6, [x19, #40]
   2e8fc:	str	w4, [x3, x1]
   2e900:	str	x5, [x0, #8]
   2e904:	str	w2, [x0, #16]
   2e908:	ldr	x1, [x19, #24]
   2e90c:	ldrb	w1, [x1]
   2e910:	cmp	w1, #0x42
   2e914:	b.ne	2e794 <__asan_cplus_demangle_fill_name@@Base+0x2d4>  // b.any
   2e918:	mov	x1, x0
   2e91c:	mov	x0, x19
   2e920:	bl	2e680 <__asan_cplus_demangle_fill_name@@Base+0x1c0>
   2e924:	cbz	x0, 2e790 <__asan_cplus_demangle_fill_name@@Base+0x2d0>
   2e928:	ldp	w1, w2, [x19, #56]
   2e92c:	cmp	w1, w2
   2e930:	b.ge	2e790 <__asan_cplus_demangle_fill_name@@Base+0x2d0>  // b.tcont
   2e934:	ldr	x3, [x19, #48]
   2e938:	add	w2, w1, #0x1
   2e93c:	str	x0, [x3, w1, sxtw #3]
   2e940:	str	w2, [x19, #56]
   2e944:	b	2e794 <__asan_cplus_demangle_fill_name@@Base+0x2d4>
   2e948:	ldr	w2, [x0, #16]
   2e94c:	ldr	x5, [x0, #8]
   2e950:	b	2e8cc <__asan_cplus_demangle_fill_name@@Base+0x40c>
   2e954:	mov	x0, #0x0                   	// #0
   2e958:	b	2e908 <__asan_cplus_demangle_fill_name@@Base+0x448>
   2e95c:	mov	x2, #0x0                   	// #0
   2e960:	str	x2, [x19, #64]
   2e964:	b	2e8c0 <__asan_cplus_demangle_fill_name@@Base+0x400>

000000000002e968 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   2e968:	cmp	w1, #0x0
   2e96c:	mov	x3, x0
   2e970:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
   2e974:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2e978:	mov	w0, #0x0                   	// #0
   2e97c:	b.eq	2e994 <__asan_cplus_demangle_fill_extended_operator@@Base+0x2c>  // b.none
   2e980:	mov	x4, #0x33                  	// #51
   2e984:	mov	w0, #0x1                   	// #1
   2e988:	str	x4, [x3]
   2e98c:	str	w1, [x3, #8]
   2e990:	str	x2, [x3, #16]
   2e994:	ret

000000000002e998 <__asan_cplus_demangle_fill_ctor@@Base>:
   2e998:	cmp	x0, #0x0
   2e99c:	mov	x3, x0
   2e9a0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   2e9a4:	mov	w0, #0x0                   	// #0
   2e9a8:	b.eq	2e9d0 <__asan_cplus_demangle_fill_ctor@@Base+0x38>  // b.none
   2e9ac:	sub	w4, w1, #0x1
   2e9b0:	mov	w0, #0x0                   	// #0
   2e9b4:	cmp	w4, #0x4
   2e9b8:	b.hi	2e9d0 <__asan_cplus_demangle_fill_ctor@@Base+0x38>  // b.pmore
   2e9bc:	mov	x4, #0x7                   	// #7
   2e9c0:	mov	w0, #0x1                   	// #1
   2e9c4:	str	x4, [x3]
   2e9c8:	str	w1, [x3, #8]
   2e9cc:	str	x2, [x3, #16]
   2e9d0:	ret
   2e9d4:	nop

000000000002e9d8 <__asan_cplus_demangle_fill_dtor@@Base>:
   2e9d8:	cmp	x0, #0x0
   2e9dc:	mov	x3, x0
   2e9e0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   2e9e4:	mov	w0, #0x0                   	// #0
   2e9e8:	b.eq	2ea10 <__asan_cplus_demangle_fill_dtor@@Base+0x38>  // b.none
   2e9ec:	sub	w4, w1, #0x1
   2e9f0:	mov	w0, #0x0                   	// #0
   2e9f4:	cmp	w4, #0x4
   2e9f8:	b.hi	2ea10 <__asan_cplus_demangle_fill_dtor@@Base+0x38>  // b.pmore
   2e9fc:	mov	x4, #0x8                   	// #8
   2ea00:	mov	w0, #0x1                   	// #1
   2ea04:	str	x4, [x3]
   2ea08:	str	w1, [x3, #8]
   2ea0c:	str	x2, [x3, #16]
   2ea10:	ret
   2ea14:	nop

000000000002ea18 <__asan_cplus_demangle_type@@Base>:
   2ea18:	stp	x29, x30, [sp, #-80]!
   2ea1c:	mov	x29, sp
   2ea20:	ldr	x5, [x0, #24]
   2ea24:	stp	x19, x20, [sp, #16]
   2ea28:	mov	x19, x0
   2ea2c:	mov	x0, x5
   2ea30:	bl	28888 <__asan_backtrace_create_state@@Base+0x5f0>
   2ea34:	cbnz	w0, 2ea74 <__asan_cplus_demangle_type@@Base+0x5c>
   2ea38:	ldrb	w1, [x5]
   2ea3c:	sub	w0, w1, #0x30
   2ea40:	cmp	w0, #0x4a
   2ea44:	b.ls	2ea5c <__asan_cplus_demangle_type@@Base+0x44>  // b.plast
   2ea48:	mov	x20, #0x0                   	// #0
   2ea4c:	mov	x0, x20
   2ea50:	ldp	x19, x20, [sp, #16]
   2ea54:	ldp	x29, x30, [sp], #80
   2ea58:	ret
   2ea5c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2ea60:	add	x2, x2, #0x540
   2ea64:	ldrh	w0, [x2, w0, uxtw #1]
   2ea68:	adr	x2, 2ea74 <__asan_cplus_demangle_type@@Base+0x5c>
   2ea6c:	add	x0, x2, w0, sxth #2
   2ea70:	br	x0
   2ea74:	add	x1, sp, #0x48
   2ea78:	mov	x0, x19
   2ea7c:	mov	w2, #0x0                   	// #0
   2ea80:	stp	x21, x22, [sp, #32]
   2ea84:	bl	30da8 <__asan_cplus_demangle_type@@Base+0x2390>
   2ea88:	mov	x21, x0
   2ea8c:	cbz	x0, 2eb20 <__asan_cplus_demangle_type@@Base+0x108>
   2ea90:	ldr	x0, [x19, #24]
   2ea94:	ldrb	w0, [x0]
   2ea98:	cmp	w0, #0x46
   2ea9c:	mov	x0, x19
   2eaa0:	b.eq	2eb14 <__asan_cplus_demangle_type@@Base+0xfc>  // b.none
   2eaa4:	bl	2ea18 <__asan_cplus_demangle_type@@Base>
   2eaa8:	str	x0, [x21]
   2eaac:	cbz	x0, 2eb20 <__asan_cplus_demangle_type@@Base+0x108>
   2eab0:	ldr	w1, [x0]
   2eab4:	ldr	x20, [sp, #72]
   2eab8:	sub	w1, w1, #0x1f
   2eabc:	cmp	w1, #0x1
   2eac0:	b.ls	2eaf8 <__asan_cplus_demangle_type@@Base+0xe0>  // b.plast
   2eac4:	cbz	x20, 2eb20 <__asan_cplus_demangle_type@@Base+0x108>
   2eac8:	ldp	w0, w1, [x19, #56]
   2eacc:	cmp	w0, w1
   2ead0:	b.ge	2eb20 <__asan_cplus_demangle_type@@Base+0x108>  // b.tcont
   2ead4:	ldr	x2, [x19, #48]
   2ead8:	add	w1, w0, #0x1
   2eadc:	ldp	x21, x22, [sp, #32]
   2eae0:	str	x20, [x2, w0, sxtw #3]
   2eae4:	mov	x0, x20
   2eae8:	str	w1, [x19, #56]
   2eaec:	ldp	x19, x20, [sp, #16]
   2eaf0:	ldp	x29, x30, [sp], #80
   2eaf4:	ret
   2eaf8:	ldr	x1, [x0, #8]
   2eafc:	str	x20, [x0, #8]
   2eb00:	ldr	x0, [x21]
   2eb04:	str	x0, [sp, #72]
   2eb08:	str	x1, [x21]
   2eb0c:	ldr	x20, [sp, #72]
   2eb10:	b	2eac4 <__asan_cplus_demangle_type@@Base+0xac>
   2eb14:	bl	2fd70 <__asan_cplus_demangle_type@@Base+0x1358>
   2eb18:	str	x0, [x21]
   2eb1c:	b	2eaac <__asan_cplus_demangle_type@@Base+0x94>
   2eb20:	ldp	x21, x22, [sp, #32]
   2eb24:	b	2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2eb28:	adrp	x2, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2eb2c:	sub	w1, w1, #0x61
   2eb30:	ldp	w0, w4, [x19, #40]
   2eb34:	sbfiz	x1, x1, #5, #32
   2eb38:	ldr	x2, [x2, #3912]
   2eb3c:	cmp	w0, w4
   2eb40:	add	x1, x1, x2
   2eb44:	b.ge	2f534 <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   2eb48:	mov	w2, #0x18                  	// #24
   2eb4c:	add	w7, w0, #0x1
   2eb50:	ldr	x4, [x19, #32]
   2eb54:	smull	x0, w0, w2
   2eb58:	ldr	w8, [x1, #8]
   2eb5c:	mov	w6, #0x27                  	// #39
   2eb60:	add	x20, x4, x0
   2eb64:	ldr	w2, [x19, #72]
   2eb68:	add	x3, x5, #0x1
   2eb6c:	add	w2, w2, w8
   2eb70:	str	wzr, [x20, #4]
   2eb74:	str	w7, [x19, #40]
   2eb78:	str	w6, [x4, x0]
   2eb7c:	str	x1, [x20, #8]
   2eb80:	str	x3, [x19, #24]
   2eb84:	str	w2, [x19, #72]
   2eb88:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2eb8c:	mov	x0, x19
   2eb90:	bl	311d8 <__asan_cplus_demangle_type@@Base+0x27c0>
   2eb94:	mov	x20, x0
   2eb98:	str	x0, [sp, #72]
   2eb9c:	nop
   2eba0:	cbz	x20, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2eba4:	ldp	w0, w1, [x19, #56]
   2eba8:	cmp	w0, w1
   2ebac:	b.ge	2ea48 <__asan_cplus_demangle_type@@Base+0x30>  // b.tcont
   2ebb0:	ldr	x2, [x19, #48]
   2ebb4:	add	w1, w0, #0x1
   2ebb8:	str	x20, [x2, w0, sxtw #3]
   2ebbc:	str	w1, [x19, #56]
   2ebc0:	ldr	x20, [sp, #72]
   2ebc4:	mov	x0, x20
   2ebc8:	ldp	x19, x20, [sp, #16]
   2ebcc:	ldp	x29, x30, [sp], #80
   2ebd0:	ret
   2ebd4:	mov	x0, x19
   2ebd8:	bl	2fd70 <__asan_cplus_demangle_type@@Base+0x1358>
   2ebdc:	mov	x20, x0
   2ebe0:	str	x0, [sp, #72]
   2ebe4:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ebe8:	add	x0, x5, #0x1
   2ebec:	str	x0, [x19, #24]
   2ebf0:	mov	x0, x19
   2ebf4:	bl	2ea18 <__asan_cplus_demangle_type@@Base>
   2ebf8:	mov	x2, x0
   2ebfc:	mov	x3, #0x0                   	// #0
   2ec00:	mov	x0, x19
   2ec04:	mov	w1, #0x26                  	// #38
   2ec08:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ec0c:	mov	x20, x0
   2ec10:	str	x0, [sp, #72]
   2ec14:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ec18:	add	x0, x5, #0x1
   2ec1c:	str	x0, [x19, #24]
   2ec20:	mov	x0, x19
   2ec24:	bl	2ea18 <__asan_cplus_demangle_type@@Base>
   2ec28:	mov	x2, x0
   2ec2c:	mov	x3, #0x0                   	// #0
   2ec30:	mov	x0, x19
   2ec34:	mov	w1, #0x24                  	// #36
   2ec38:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ec3c:	mov	x20, x0
   2ec40:	str	x0, [sp, #72]
   2ec44:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ec48:	add	x0, x5, #0x1
   2ec4c:	str	x0, [x19, #24]
   2ec50:	mov	x0, x19
   2ec54:	bl	2ea18 <__asan_cplus_demangle_type@@Base>
   2ec58:	mov	x2, x0
   2ec5c:	mov	x3, #0x0                   	// #0
   2ec60:	mov	x0, x19
   2ec64:	mov	w1, #0x25                  	// #37
   2ec68:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ec6c:	mov	x20, x0
   2ec70:	str	x0, [sp, #72]
   2ec74:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ec78:	add	x0, x5, #0x1
   2ec7c:	str	x0, [x19, #24]
   2ec80:	ldrb	w0, [x5, #1]
   2ec84:	cbz	w0, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2ec88:	add	x0, x5, #0x2
   2ec8c:	str	x0, [x19, #24]
   2ec90:	ldrb	w0, [x5, #1]
   2ec94:	cmp	w0, #0x68
   2ec98:	b.eq	2f35c <__asan_cplus_demangle_type@@Base+0x944>  // b.none
   2ec9c:	b.hi	2ef9c <__asan_cplus_demangle_type@@Base+0x584>  // b.pmore
   2eca0:	cmp	w0, #0x63
   2eca4:	b.eq	2f340 <__asan_cplus_demangle_type@@Base+0x928>  // b.none
   2eca8:	b.ls	2ef70 <__asan_cplus_demangle_type@@Base+0x558>  // b.plast
   2ecac:	cmp	w0, #0x65
   2ecb0:	b.eq	2f3fc <__asan_cplus_demangle_type@@Base+0x9e4>  // b.none
   2ecb4:	cmp	w0, #0x66
   2ecb8:	b.ne	2f1b8 <__asan_cplus_demangle_type@@Base+0x7a0>  // b.any
   2ecbc:	ldp	w0, w1, [x19, #40]
   2ecc0:	cmp	w0, w1
   2ecc4:	b.ge	2f534 <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   2ecc8:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2eccc:	mov	w2, #0x18                  	// #24
   2ecd0:	ldr	x4, [x19, #32]
   2ecd4:	smull	x2, w0, w2
   2ecd8:	ldr	x1, [x1, #3912]
   2ecdc:	add	w0, w0, #0x1
   2ece0:	ldr	w3, [x19, #72]
   2ece4:	add	x20, x4, x2
   2ece8:	add	x1, x1, #0x340
   2ecec:	mov	w5, #0x27                  	// #39
   2ecf0:	str	wzr, [x20, #4]
   2ecf4:	str	w0, [x19, #40]
   2ecf8:	add	w0, w3, #0x9
   2ecfc:	str	w5, [x4, x2]
   2ed00:	str	x1, [x20, #8]
   2ed04:	str	w0, [x19, #72]
   2ed08:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2ed0c:	add	x0, x5, #0x1
   2ed10:	str	x0, [x19, #24]
   2ed14:	mov	x0, x19
   2ed18:	bl	2e560 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   2ed1c:	str	x0, [sp, #72]
   2ed20:	ldr	x1, [x19, #24]
   2ed24:	mov	x20, x0
   2ed28:	ldrb	w0, [x1]
   2ed2c:	cmp	w0, #0x49
   2ed30:	b.eq	2f278 <__asan_cplus_demangle_type@@Base+0x860>  // b.none
   2ed34:	mov	x0, x19
   2ed38:	bl	2ea18 <__asan_cplus_demangle_type@@Base>
   2ed3c:	ldr	x3, [sp, #72]
   2ed40:	mov	x2, x0
   2ed44:	mov	w1, #0x21                  	// #33
   2ed48:	mov	x0, x19
   2ed4c:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ed50:	mov	x20, x0
   2ed54:	str	x0, [sp, #72]
   2ed58:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ed5c:	add	x0, x5, #0x1
   2ed60:	str	x0, [x19, #24]
   2ed64:	mov	x0, x19
   2ed68:	bl	2ea18 <__asan_cplus_demangle_type@@Base>
   2ed6c:	mov	x2, x0
   2ed70:	mov	x3, #0x0                   	// #0
   2ed74:	mov	x0, x19
   2ed78:	mov	w1, #0x22                  	// #34
   2ed7c:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ed80:	mov	x20, x0
   2ed84:	str	x0, [sp, #72]
   2ed88:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ed8c:	ldrb	w0, [x5, #1]
   2ed90:	sub	w1, w0, #0x30
   2ed94:	cmp	w0, #0x5f
   2ed98:	and	w1, w1, #0xff
   2ed9c:	ccmp	w1, #0x9, #0x0, ne  // ne = any
   2eda0:	b.ls	2edb4 <__asan_cplus_demangle_type@@Base+0x39c>  // b.plast
   2eda4:	sub	w0, w0, #0x41
   2eda8:	and	w0, w0, #0xff
   2edac:	cmp	w0, #0x19
   2edb0:	b.hi	2f254 <__asan_cplus_demangle_type@@Base+0x83c>  // b.pmore
   2edb4:	mov	w1, #0x0                   	// #0
   2edb8:	mov	x0, x19
   2edbc:	bl	2e700 <__asan_cplus_demangle_fill_name@@Base+0x240>
   2edc0:	str	x0, [sp, #72]
   2edc4:	ldr	x1, [x19, #24]
   2edc8:	mov	x20, x0
   2edcc:	ldrb	w0, [x1]
   2edd0:	cmp	w0, #0x49
   2edd4:	b.ne	2ea4c <__asan_cplus_demangle_type@@Base+0x34>  // b.any
   2edd8:	mov	x0, x19
   2eddc:	bl	311a8 <__asan_cplus_demangle_type@@Base+0x2790>
   2ede0:	mov	x2, x20
   2ede4:	mov	x3, x0
   2ede8:	mov	w1, #0x4                   	// #4
   2edec:	mov	x0, x19
   2edf0:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2edf4:	mov	x20, x0
   2edf8:	str	x0, [sp, #72]
   2edfc:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ee00:	mov	x0, x19
   2ee04:	stp	x21, x22, [sp, #32]
   2ee08:	bl	28760 <__asan_backtrace_create_state@@Base+0x4c8>
   2ee0c:	ldr	x21, [x19, #24]
   2ee10:	str	x0, [sp, #72]
   2ee14:	mov	x20, x0
   2ee18:	ldrb	w0, [x21]
   2ee1c:	cmp	w0, #0x49
   2ee20:	b.eq	2f1f8 <__asan_cplus_demangle_type@@Base+0x7e0>  // b.none
   2ee24:	ldp	x21, x22, [sp, #32]
   2ee28:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ee2c:	add	x0, x5, #0x1
   2ee30:	str	x0, [x19, #24]
   2ee34:	mov	x0, x19
   2ee38:	bl	2e560 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   2ee3c:	mov	x2, x0
   2ee40:	mov	x3, #0x0                   	// #0
   2ee44:	mov	x0, x19
   2ee48:	mov	w1, #0x28                  	// #40
   2ee4c:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ee50:	mov	x20, x0
   2ee54:	str	x0, [sp, #72]
   2ee58:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ee5c:	add	x0, x5, #0x1
   2ee60:	str	x0, [x19, #24]
   2ee64:	mov	x0, x19
   2ee68:	bl	2ea18 <__asan_cplus_demangle_type@@Base>
   2ee6c:	mov	x2, x0
   2ee70:	mov	x3, #0x0                   	// #0
   2ee74:	mov	x0, x19
   2ee78:	mov	w1, #0x23                  	// #35
   2ee7c:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ee80:	mov	x20, x0
   2ee84:	str	x0, [sp, #72]
   2ee88:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ee8c:	add	x1, x5, #0x1
   2ee90:	str	x1, [x19, #24]
   2ee94:	ldrb	w0, [x5, #1]
   2ee98:	cmp	w0, #0x5f
   2ee9c:	b.eq	2f24c <__asan_cplus_demangle_type@@Base+0x834>  // b.none
   2eea0:	sub	w0, w0, #0x30
   2eea4:	and	w0, w0, #0xff
   2eea8:	cmp	w0, #0x9
   2eeac:	b.hi	2f29c <__asan_cplus_demangle_type@@Base+0x884>  // b.pmore
   2eeb0:	add	x3, x5, #0x2
   2eeb4:	nop
   2eeb8:	mov	x2, x3
   2eebc:	str	x3, [x19, #24]
   2eec0:	add	x3, x3, #0x1
   2eec4:	ldrb	w0, [x2]
   2eec8:	sub	w0, w0, #0x30
   2eecc:	and	w0, w0, #0xff
   2eed0:	cmp	w0, #0x9
   2eed4:	b.ls	2eeb8 <__asan_cplus_demangle_type@@Base+0x4a0>  // b.plast
   2eed8:	sub	w2, w2, w1
   2eedc:	mov	x0, x19
   2eee0:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   2eee4:	mov	x20, x0
   2eee8:	cbz	x0, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2eeec:	ldr	x1, [x19, #24]
   2eef0:	ldrb	w0, [x1]
   2eef4:	cmp	w0, #0x5f
   2eef8:	b.ne	2ea48 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   2eefc:	add	x1, x1, #0x1
   2ef00:	str	x1, [x19, #24]
   2ef04:	mov	x0, x19
   2ef08:	bl	6420 <__asan_cplus_demangle_type@plt>
   2ef0c:	mov	x3, x0
   2ef10:	mov	x2, x20
   2ef14:	mov	x0, x19
   2ef18:	mov	w1, #0x2a                  	// #42
   2ef1c:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ef20:	mov	x20, x0
   2ef24:	str	x0, [sp, #72]
   2ef28:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ef2c:	add	x0, x5, #0x1
   2ef30:	str	x0, [x19, #24]
   2ef34:	mov	x0, x19
   2ef38:	bl	6420 <__asan_cplus_demangle_type@plt>
   2ef3c:	mov	x20, x0
   2ef40:	cbz	x0, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2ef44:	mov	x0, x19
   2ef48:	bl	6420 <__asan_cplus_demangle_type@plt>
   2ef4c:	mov	x3, x0
   2ef50:	cbz	x0, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2ef54:	mov	x2, x20
   2ef58:	mov	x0, x19
   2ef5c:	mov	w1, #0x2b                  	// #43
   2ef60:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ef64:	mov	x20, x0
   2ef68:	str	x0, [sp, #72]
   2ef6c:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2ef70:	cmp	w0, #0x54
   2ef74:	b.eq	2f01c <__asan_cplus_demangle_type@@Base+0x604>  // b.none
   2ef78:	cmp	w0, #0x61
   2ef7c:	b.ne	2f0b0 <__asan_cplus_demangle_type@@Base+0x698>  // b.any
   2ef80:	mov	x0, x19
   2ef84:	adrp	x1, 38000 <__asan_backtrace_vector_release@@Base+0x2320>
   2ef88:	mov	w2, #0x4                   	// #4
   2ef8c:	add	x1, x1, #0xa20
   2ef90:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   2ef94:	mov	x20, x0
   2ef98:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2ef9c:	cmp	w0, #0x73
   2efa0:	b.eq	2f308 <__asan_cplus_demangle_type@@Base+0x8f0>  // b.none
   2efa4:	b.ls	2f078 <__asan_cplus_demangle_type@@Base+0x660>  // b.plast
   2efa8:	cmp	w0, #0x75
   2efac:	b.eq	2f44c <__asan_cplus_demangle_type@@Base+0xa34>  // b.none
   2efb0:	cmp	w0, #0x76
   2efb4:	b.ne	2f014 <__asan_cplus_demangle_type@@Base+0x5fc>  // b.any
   2efb8:	ldrb	w0, [x5, #2]
   2efbc:	cmp	w0, #0x5f
   2efc0:	b.eq	2f4e4 <__asan_cplus_demangle_type@@Base+0xacc>  // b.none
   2efc4:	mov	x0, x19
   2efc8:	bl	28680 <__asan_backtrace_create_state@@Base+0x3e8>
   2efcc:	mov	x20, x0
   2efd0:	cbz	x20, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2efd4:	ldr	x0, [x19, #24]
   2efd8:	ldrb	w1, [x0]
   2efdc:	cmp	w1, #0x5f
   2efe0:	b.ne	2ea48 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   2efe4:	add	x0, x0, #0x1
   2efe8:	str	x0, [x19, #24]
   2efec:	mov	x0, x19
   2eff0:	bl	6420 <__asan_cplus_demangle_type@plt>
   2eff4:	mov	x3, x0
   2eff8:	mov	x2, x20
   2effc:	mov	x0, x19
   2f000:	mov	w1, #0x2d                  	// #45
   2f004:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2f008:	mov	x20, x0
   2f00c:	str	x0, [sp, #72]
   2f010:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2f014:	cmp	w0, #0x74
   2f018:	b.ne	2ea48 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   2f01c:	ldr	w20, [x19, #76]
   2f020:	mov	w0, #0x1                   	// #1
   2f024:	str	w0, [x19, #76]
   2f028:	mov	x0, x19
   2f02c:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   2f030:	str	w20, [x19, #76]
   2f034:	mov	x2, x0
   2f038:	mov	x3, #0x0                   	// #0
   2f03c:	mov	x0, x19
   2f040:	mov	w1, #0x43                  	// #67
   2f044:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2f048:	str	x0, [sp, #72]
   2f04c:	mov	x20, x0
   2f050:	cbz	x0, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2f054:	ldr	x0, [x19, #24]
   2f058:	ldrb	w1, [x0]
   2f05c:	cbz	w1, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2f060:	add	x1, x0, #0x1
   2f064:	str	x1, [x19, #24]
   2f068:	ldrb	w0, [x0]
   2f06c:	cmp	w0, #0x45
   2f070:	b.ne	2ea48 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   2f074:	b	2eba4 <__asan_cplus_demangle_type@@Base+0x18c>
   2f078:	cmp	w0, #0x6e
   2f07c:	b.eq	2f3ac <__asan_cplus_demangle_type@@Base+0x994>  // b.none
   2f080:	cmp	w0, #0x70
   2f084:	b.ne	2f160 <__asan_cplus_demangle_type@@Base+0x748>  // b.any
   2f088:	mov	x0, x19
   2f08c:	bl	2ea18 <__asan_cplus_demangle_type@@Base>
   2f090:	mov	x3, #0x0                   	// #0
   2f094:	mov	x2, x0
   2f098:	mov	w1, #0x4b                  	// #75
   2f09c:	mov	x0, x19
   2f0a0:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2f0a4:	mov	x20, x0
   2f0a8:	str	x0, [sp, #72]
   2f0ac:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2f0b0:	cmp	w0, #0x46
   2f0b4:	b.ne	2ea48 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   2f0b8:	ldp	w0, w1, [x19, #40]
   2f0bc:	cmp	w0, w1
   2f0c0:	b.ge	2f520 <__asan_cplus_demangle_type@@Base+0xb08>  // b.tcont
   2f0c4:	mov	w2, #0x18                  	// #24
   2f0c8:	add	w3, w0, #0x1
   2f0cc:	ldr	x1, [x19, #32]
   2f0d0:	smull	x0, w0, w2
   2f0d4:	mov	w2, #0x2c                  	// #44
   2f0d8:	add	x20, x1, x0
   2f0dc:	str	wzr, [x20, #4]
   2f0e0:	str	w3, [x19, #40]
   2f0e4:	str	x20, [sp, #72]
   2f0e8:	str	w2, [x1, x0]
   2f0ec:	ldrb	w0, [x5, #2]
   2f0f0:	sub	w0, w0, #0x30
   2f0f4:	and	w0, w0, #0xff
   2f0f8:	cmp	w0, #0x9
   2f0fc:	cset	w1, ls  // ls = plast
   2f100:	strh	w1, [x20, #16]
   2f104:	b.hi	2f114 <__asan_cplus_demangle_type@@Base+0x6fc>  // b.pmore
   2f108:	add	x0, x19, #0x18
   2f10c:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   2f110:	ldr	x20, [sp, #72]
   2f114:	mov	x0, x19
   2f118:	bl	2ea18 <__asan_cplus_demangle_type@@Base>
   2f11c:	str	x0, [x20, #8]
   2f120:	ldr	x1, [sp, #72]
   2f124:	ldr	x0, [x1, #8]
   2f128:	cbz	x0, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2f12c:	add	x0, x19, #0x18
   2f130:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   2f134:	ldr	x1, [x19, #24]
   2f138:	ldrb	w0, [x1]
   2f13c:	cbz	w0, 2f14c <__asan_cplus_demangle_type@@Base+0x734>
   2f140:	add	x0, x1, #0x1
   2f144:	str	x0, [x19, #24]
   2f148:	ldrb	w0, [x1]
   2f14c:	ldr	x20, [sp, #72]
   2f150:	cmp	w0, #0x73
   2f154:	cset	w0, eq  // eq = none
   2f158:	strh	w0, [x20, #18]
   2f15c:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2f160:	cmp	w0, #0x69
   2f164:	b.ne	2ea48 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   2f168:	ldp	w0, w1, [x19, #40]
   2f16c:	cmp	w0, w1
   2f170:	b.ge	2f534 <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   2f174:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2f178:	mov	w2, #0x18                  	// #24
   2f17c:	ldr	x4, [x19, #32]
   2f180:	smull	x2, w0, w2
   2f184:	ldr	x1, [x1, #3912]
   2f188:	add	w0, w0, #0x1
   2f18c:	ldr	w3, [x19, #72]
   2f190:	add	x20, x4, x2
   2f194:	add	x1, x1, #0x400
   2f198:	mov	w5, #0x27                  	// #39
   2f19c:	str	wzr, [x20, #4]
   2f1a0:	str	w0, [x19, #40]
   2f1a4:	add	w0, w3, #0x8
   2f1a8:	str	w5, [x4, x2]
   2f1ac:	str	x1, [x20, #8]
   2f1b0:	str	w0, [x19, #72]
   2f1b4:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2f1b8:	cmp	w0, #0x64
   2f1bc:	b.ne	2ea48 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   2f1c0:	ldp	w0, w1, [x19, #40]
   2f1c4:	cmp	w0, w1
   2f1c8:	b.ge	2f534 <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   2f1cc:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2f1d0:	mov	w2, #0x18                  	// #24
   2f1d4:	ldr	x4, [x19, #32]
   2f1d8:	smull	x2, w0, w2
   2f1dc:	ldr	x1, [x1, #3912]
   2f1e0:	add	w0, w0, #0x1
   2f1e4:	ldr	w3, [x19, #72]
   2f1e8:	add	x20, x4, x2
   2f1ec:	add	x1, x1, #0x360
   2f1f0:	mov	w5, #0x27                  	// #39
   2f1f4:	b	2ecf0 <__asan_cplus_demangle_type@@Base+0x2d8>
   2f1f8:	ldr	w0, [x19, #80]
   2f1fc:	cbnz	w0, 2f2c0 <__asan_cplus_demangle_type@@Base+0x8a8>
   2f200:	cbz	x20, 2eb20 <__asan_cplus_demangle_type@@Base+0x108>
   2f204:	ldp	w1, w0, [x19, #56]
   2f208:	cmp	w1, w0
   2f20c:	b.ge	2eb20 <__asan_cplus_demangle_type@@Base+0x108>  // b.tcont
   2f210:	ldr	x3, [x19, #48]
   2f214:	add	w2, w1, #0x1
   2f218:	mov	x0, x19
   2f21c:	str	x20, [x3, w1, sxtw #3]
   2f220:	str	w2, [x19, #56]
   2f224:	bl	311a8 <__asan_cplus_demangle_type@@Base+0x2790>
   2f228:	mov	x3, x0
   2f22c:	mov	x2, x20
   2f230:	mov	x0, x19
   2f234:	mov	w1, #0x4                   	// #4
   2f238:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2f23c:	mov	x20, x0
   2f240:	str	x0, [sp, #72]
   2f244:	ldp	x21, x22, [sp, #32]
   2f248:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2f24c:	mov	x20, #0x0                   	// #0
   2f250:	b	2eefc <__asan_cplus_demangle_type@@Base+0x4e4>
   2f254:	mov	x0, x19
   2f258:	bl	311d8 <__asan_cplus_demangle_type@@Base+0x27c0>
   2f25c:	str	x0, [sp, #72]
   2f260:	mov	x20, x0
   2f264:	cbz	x0, 2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2f268:	ldr	w0, [x0]
   2f26c:	cmp	w0, #0x18
   2f270:	b.ne	2eba4 <__asan_cplus_demangle_type@@Base+0x18c>  // b.any
   2f274:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2f278:	mov	x0, x19
   2f27c:	bl	311a8 <__asan_cplus_demangle_type@@Base+0x2790>
   2f280:	mov	x2, x20
   2f284:	mov	x3, x0
   2f288:	mov	w1, #0x4                   	// #4
   2f28c:	mov	x0, x19
   2f290:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2f294:	str	x0, [sp, #72]
   2f298:	b	2ed34 <__asan_cplus_demangle_type@@Base+0x31c>
   2f29c:	ldr	w20, [x19, #76]
   2f2a0:	mov	w0, #0x1                   	// #1
   2f2a4:	str	w0, [x19, #76]
   2f2a8:	mov	x0, x19
   2f2ac:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   2f2b0:	str	w20, [x19, #76]
   2f2b4:	mov	x20, x0
   2f2b8:	cbnz	x0, 2eeec <__asan_cplus_demangle_type@@Base+0x4d4>
   2f2bc:	b	2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2f2c0:	ldr	w22, [x19, #56]
   2f2c4:	mov	x0, x19
   2f2c8:	ldr	w20, [x19, #72]
   2f2cc:	str	x23, [sp, #48]
   2f2d0:	ldr	w23, [x19, #40]
   2f2d4:	bl	311a8 <__asan_cplus_demangle_type@@Base+0x2790>
   2f2d8:	ldr	x1, [x19, #24]
   2f2dc:	ldrb	w1, [x1]
   2f2e0:	cmp	w1, #0x49
   2f2e4:	b.eq	2f49c <__asan_cplus_demangle_type@@Base+0xa84>  // b.none
   2f2e8:	str	x21, [x19, #24]
   2f2ec:	str	w23, [x19, #40]
   2f2f0:	str	w22, [x19, #56]
   2f2f4:	str	w20, [x19, #72]
   2f2f8:	ldp	x21, x22, [sp, #32]
   2f2fc:	ldr	x23, [sp, #48]
   2f300:	ldr	x20, [sp, #72]
   2f304:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2f308:	ldp	w0, w1, [x19, #40]
   2f30c:	cmp	w0, w1
   2f310:	b.ge	2f534 <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   2f314:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2f318:	mov	w2, #0x18                  	// #24
   2f31c:	ldr	x4, [x19, #32]
   2f320:	smull	x2, w0, w2
   2f324:	ldr	x1, [x1, #3912]
   2f328:	add	w0, w0, #0x1
   2f32c:	ldr	w3, [x19, #72]
   2f330:	add	x20, x4, x2
   2f334:	add	x1, x1, #0x3e0
   2f338:	mov	w5, #0x27                  	// #39
   2f33c:	b	2f19c <__asan_cplus_demangle_type@@Base+0x784>
   2f340:	mov	x0, x19
   2f344:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2f348:	mov	w2, #0xe                   	// #14
   2f34c:	add	x1, x1, #0x9f8
   2f350:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   2f354:	mov	x20, x0
   2f358:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2f35c:	ldp	w0, w1, [x19, #40]
   2f360:	cmp	w0, w1
   2f364:	b.ge	2f534 <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   2f368:	mov	w2, #0x18                  	// #24
   2f36c:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2f370:	ldr	x4, [x19, #32]
   2f374:	smull	x2, w0, w2
   2f378:	ldr	w3, [x19, #72]
   2f37c:	add	w0, w0, #0x1
   2f380:	add	x20, x4, x2
   2f384:	mov	w5, #0x27                  	// #39
   2f388:	ldr	x1, [x1, #3912]
   2f38c:	str	wzr, [x20, #4]
   2f390:	str	w0, [x19, #40]
   2f394:	add	x1, x1, #0x3a0
   2f398:	str	w5, [x4, x2]
   2f39c:	add	w0, w3, #0x4
   2f3a0:	str	x1, [x20, #8]
   2f3a4:	str	w0, [x19, #72]
   2f3a8:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2f3ac:	ldp	w0, w1, [x19, #40]
   2f3b0:	cmp	w0, w1
   2f3b4:	b.ge	2f534 <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   2f3b8:	mov	w2, #0x18                  	// #24
   2f3bc:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2f3c0:	ldr	x4, [x19, #32]
   2f3c4:	smull	x2, w0, w2
   2f3c8:	ldr	w3, [x19, #72]
   2f3cc:	add	w0, w0, #0x1
   2f3d0:	add	x20, x4, x2
   2f3d4:	mov	w5, #0x27                  	// #39
   2f3d8:	ldr	x1, [x1, #3912]
   2f3dc:	str	wzr, [x20, #4]
   2f3e0:	str	w0, [x19, #40]
   2f3e4:	add	x1, x1, #0x420
   2f3e8:	str	w5, [x4, x2]
   2f3ec:	add	w0, w3, #0x11
   2f3f0:	str	x1, [x20, #8]
   2f3f4:	str	w0, [x19, #72]
   2f3f8:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2f3fc:	ldp	w0, w1, [x19, #40]
   2f400:	cmp	w0, w1
   2f404:	b.ge	2f534 <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   2f408:	mov	w2, #0x18                  	// #24
   2f40c:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2f410:	ldr	x4, [x19, #32]
   2f414:	smull	x2, w0, w2
   2f418:	ldr	w3, [x19, #72]
   2f41c:	add	w0, w0, #0x1
   2f420:	add	x20, x4, x2
   2f424:	mov	w5, #0x27                  	// #39
   2f428:	ldr	x1, [x1, #3912]
   2f42c:	str	wzr, [x20, #4]
   2f430:	str	w0, [x19, #40]
   2f434:	add	x1, x1, #0x380
   2f438:	str	w5, [x4, x2]
   2f43c:	add	w0, w3, #0xa
   2f440:	str	x1, [x20, #8]
   2f444:	str	w0, [x19, #72]
   2f448:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2f44c:	ldp	w0, w1, [x19, #40]
   2f450:	cmp	w0, w1
   2f454:	b.ge	2f534 <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   2f458:	mov	w2, #0x18                  	// #24
   2f45c:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2f460:	ldr	x4, [x19, #32]
   2f464:	smull	x2, w0, w2
   2f468:	ldr	w3, [x19, #72]
   2f46c:	add	w0, w0, #0x1
   2f470:	add	x20, x4, x2
   2f474:	mov	w5, #0x27                  	// #39
   2f478:	ldr	x1, [x1, #3912]
   2f47c:	str	wzr, [x20, #4]
   2f480:	str	w0, [x19, #40]
   2f484:	add	x1, x1, #0x3c0
   2f488:	str	w5, [x4, x2]
   2f48c:	add	w0, w3, #0x7
   2f490:	str	x1, [x20, #8]
   2f494:	str	w0, [x19, #72]
   2f498:	b	2ea4c <__asan_cplus_demangle_type@@Base+0x34>
   2f49c:	ldr	x2, [sp, #72]
   2f4a0:	cbz	x2, 2f514 <__asan_cplus_demangle_type@@Base+0xafc>
   2f4a4:	ldp	w4, w1, [x19, #56]
   2f4a8:	cmp	w4, w1
   2f4ac:	b.ge	2f514 <__asan_cplus_demangle_type@@Base+0xafc>  // b.tcont
   2f4b0:	ldr	x6, [x19, #48]
   2f4b4:	add	w5, w4, #0x1
   2f4b8:	mov	x3, x0
   2f4bc:	mov	w1, #0x4                   	// #4
   2f4c0:	mov	x0, x19
   2f4c4:	str	x2, [x6, w4, sxtw #3]
   2f4c8:	str	w5, [x19, #56]
   2f4cc:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2f4d0:	mov	x20, x0
   2f4d4:	str	x0, [sp, #72]
   2f4d8:	ldp	x21, x22, [sp, #32]
   2f4dc:	ldr	x23, [sp, #48]
   2f4e0:	b	2eba0 <__asan_cplus_demangle_type@@Base+0x188>
   2f4e4:	stp	x21, x22, [sp, #32]
   2f4e8:	add	x0, x5, #0x3
   2f4ec:	ldr	w21, [x19, #76]
   2f4f0:	mov	w1, #0x1                   	// #1
   2f4f4:	str	x0, [x19, #24]
   2f4f8:	str	w1, [x19, #76]
   2f4fc:	mov	x0, x19
   2f500:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   2f504:	mov	x20, x0
   2f508:	str	w21, [x19, #76]
   2f50c:	ldp	x21, x22, [sp, #32]
   2f510:	b	2efd0 <__asan_cplus_demangle_type@@Base+0x5b8>
   2f514:	ldp	x21, x22, [sp, #32]
   2f518:	ldr	x23, [sp, #48]
   2f51c:	b	2ea48 <__asan_cplus_demangle_type@@Base+0x30>
   2f520:	mov	x0, #0x0                   	// #0
   2f524:	stp	x21, x22, [sp, #32]
   2f528:	str	x23, [sp, #48]
   2f52c:	str	wzr, [x0]
   2f530:	brk	#0x3e8
   2f534:	mov	x0, #0x0                   	// #0
   2f538:	str	xzr, [sp, #72]
   2f53c:	stp	x21, x22, [sp, #32]
   2f540:	str	x23, [sp, #48]
   2f544:	ldr	x0, [x0, #8]
   2f548:	brk	#0x3e8
   2f54c:	nop
   2f550:	stp	x29, x30, [sp, #-64]!
   2f554:	mov	x29, sp
   2f558:	stp	x19, x20, [sp, #16]
   2f55c:	mov	x19, x0
   2f560:	mov	w0, #0x2e                  	// #46
   2f564:	str	xzr, [sp, #56]
   2f568:	ldr	x2, [x19, #24]
   2f56c:	ldrb	w1, [x2]
   2f570:	cmp	w1, #0x45
   2f574:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   2f578:	ccmp	w1, w0, #0x4, ne  // ne = any
   2f57c:	b.eq	2f610 <__asan_cplus_demangle_type@@Base+0xbf8>  // b.none
   2f580:	add	x20, sp, #0x38
   2f584:	stp	x21, x22, [sp, #32]
   2f588:	mov	w22, w0
   2f58c:	mov	w21, #0x4f                  	// #79
   2f590:	cmp	w1, #0x52
   2f594:	mov	x0, x19
   2f598:	ccmp	w1, w21, #0x4, ne  // ne = any
   2f59c:	b.ne	2f5ac <__asan_cplus_demangle_type@@Base+0xb94>  // b.any
   2f5a0:	ldrb	w1, [x2, #1]
   2f5a4:	cmp	w1, #0x45
   2f5a8:	b.eq	2f5ec <__asan_cplus_demangle_type@@Base+0xbd4>  // b.none
   2f5ac:	bl	6420 <__asan_cplus_demangle_type@plt>
   2f5b0:	mov	x2, x0
   2f5b4:	mov	x3, #0x0                   	// #0
   2f5b8:	mov	x0, x19
   2f5bc:	mov	w1, #0x2e                  	// #46
   2f5c0:	cbz	x2, 2f60c <__asan_cplus_demangle_type@@Base+0xbf4>
   2f5c4:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2f5c8:	str	x0, [x20]
   2f5cc:	add	x20, x0, #0x10
   2f5d0:	cbz	x0, 2f60c <__asan_cplus_demangle_type@@Base+0xbf4>
   2f5d4:	ldr	x2, [x19, #24]
   2f5d8:	ldrb	w1, [x2]
   2f5dc:	cmp	w1, #0x45
   2f5e0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   2f5e4:	ccmp	w1, w22, #0x4, ne  // ne = any
   2f5e8:	b.ne	2f590 <__asan_cplus_demangle_type@@Base+0xb78>  // b.any
   2f5ec:	ldr	x0, [sp, #56]
   2f5f0:	cbz	x0, 2f60c <__asan_cplus_demangle_type@@Base+0xbf4>
   2f5f4:	ldr	x1, [x0, #16]
   2f5f8:	cbz	x1, 2f620 <__asan_cplus_demangle_type@@Base+0xc08>
   2f5fc:	ldp	x21, x22, [sp, #32]
   2f600:	ldp	x19, x20, [sp, #16]
   2f604:	ldp	x29, x30, [sp], #64
   2f608:	ret
   2f60c:	ldp	x21, x22, [sp, #32]
   2f610:	mov	x0, #0x0                   	// #0
   2f614:	ldp	x19, x20, [sp, #16]
   2f618:	ldp	x29, x30, [sp], #64
   2f61c:	ret
   2f620:	ldr	x1, [x0, #8]
   2f624:	ldr	w2, [x1]
   2f628:	cmp	w2, #0x27
   2f62c:	b.ne	2f5fc <__asan_cplus_demangle_type@@Base+0xbe4>  // b.any
   2f630:	ldr	x1, [x1, #8]
   2f634:	ldr	w2, [x1, #28]
   2f638:	cmp	w2, #0x9
   2f63c:	b.ne	2f5fc <__asan_cplus_demangle_type@@Base+0xbe4>  // b.any
   2f640:	ldr	w2, [x1, #8]
   2f644:	ldr	w1, [x19, #72]
   2f648:	ldp	x21, x22, [sp, #32]
   2f64c:	sub	w1, w1, w2
   2f650:	str	w1, [x19, #72]
   2f654:	str	xzr, [x0, #8]
   2f658:	b	2f600 <__asan_cplus_demangle_type@@Base+0xbe8>
   2f65c:	nop
   2f660:	stp	x29, x30, [sp, #-48]!
   2f664:	mov	x29, sp
   2f668:	ldr	x1, [x0, #24]
   2f66c:	stp	x19, x20, [sp, #16]
   2f670:	mov	x19, x0
   2f674:	ldrb	w10, [x1]
   2f678:	cbz	w10, 2f744 <__asan_cplus_demangle_type@@Base+0xd2c>
   2f67c:	add	x2, x1, #0x1
   2f680:	str	x2, [x0, #24]
   2f684:	ldrb	w10, [x1, #1]
   2f688:	ldrb	w8, [x1]
   2f68c:	cbnz	w10, 2f74c <__asan_cplus_demangle_type@@Base+0xd34>
   2f690:	adrp	x5, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   2f694:	mov	w4, #0x43                  	// #67
   2f698:	mov	w2, #0x0                   	// #0
   2f69c:	mov	w7, #0x18                  	// #24
   2f6a0:	ldr	x5, [x5, #3944]
   2f6a4:	nop
   2f6a8:	sub	w1, w4, w2
   2f6ac:	add	w1, w1, w1, lsr #31
   2f6b0:	add	w1, w2, w1, asr #1
   2f6b4:	smull	x3, w1, w7
   2f6b8:	add	x9, x3, x5
   2f6bc:	ldr	x3, [x3, x5]
   2f6c0:	ldrb	w6, [x3]
   2f6c4:	cmp	w6, w8
   2f6c8:	b.eq	2f6f0 <__asan_cplus_demangle_type@@Base+0xcd8>  // b.none
   2f6cc:	b.ls	2f73c <__asan_cplus_demangle_type@@Base+0xd24>  // b.plast
   2f6d0:	mov	w4, w1
   2f6d4:	cmp	w2, w4
   2f6d8:	b.ne	2f6a8 <__asan_cplus_demangle_type@@Base+0xc90>  // b.any
   2f6dc:	mov	x20, #0x0                   	// #0
   2f6e0:	mov	x0, x20
   2f6e4:	ldp	x19, x20, [sp, #16]
   2f6e8:	ldp	x29, x30, [sp], #48
   2f6ec:	ret
   2f6f0:	ldrb	w3, [x3, #1]
   2f6f4:	cmp	w3, w10
   2f6f8:	b.ne	2f6cc <__asan_cplus_demangle_type@@Base+0xcb4>  // b.any
   2f6fc:	ldp	w0, w1, [x19, #40]
   2f700:	cmp	w0, w1
   2f704:	b.ge	2f6dc <__asan_cplus_demangle_type@@Base+0xcc4>  // b.tcont
   2f708:	ldr	x1, [x19, #32]
   2f70c:	smull	x7, w0, w7
   2f710:	add	w0, w0, #0x1
   2f714:	mov	w2, #0x32                  	// #50
   2f718:	add	x20, x1, x7
   2f71c:	str	wzr, [x20, #4]
   2f720:	str	w0, [x19, #40]
   2f724:	mov	x0, x20
   2f728:	str	w2, [x1, x7]
   2f72c:	str	x9, [x20, #8]
   2f730:	ldp	x19, x20, [sp, #16]
   2f734:	ldp	x29, x30, [sp], #48
   2f738:	ret
   2f73c:	add	w2, w1, #0x1
   2f740:	b	2f6d4 <__asan_cplus_demangle_type@@Base+0xcbc>
   2f744:	mov	w8, #0x0                   	// #0
   2f748:	b	2f690 <__asan_cplus_demangle_type@@Base+0xc78>
   2f74c:	str	x21, [sp, #32]
   2f750:	add	x2, x1, #0x2
   2f754:	str	x2, [x0, #24]
   2f758:	cmp	w8, #0x76
   2f75c:	ldrb	w10, [x1, #1]
   2f760:	b.ne	2f77c <__asan_cplus_demangle_type@@Base+0xd64>  // b.any
   2f764:	sub	w21, w10, #0x30
   2f768:	and	w1, w21, #0xff
   2f76c:	cmp	w1, #0x9
   2f770:	b.ls	2f7d8 <__asan_cplus_demangle_type@@Base+0xdc0>  // b.plast
   2f774:	ldr	x21, [sp, #32]
   2f778:	b	2f690 <__asan_cplus_demangle_type@@Base+0xc78>
   2f77c:	cmp	w10, #0x76
   2f780:	mov	w1, #0x63                  	// #99
   2f784:	ccmp	w8, w1, #0x0, eq  // eq = none
   2f788:	b.ne	2f774 <__asan_cplus_demangle_type@@Base+0xd5c>  // b.any
   2f78c:	ldp	w1, w21, [x0, #76]
   2f790:	cmp	w1, #0x0
   2f794:	cset	w1, eq  // eq = none
   2f798:	str	w1, [x0, #80]
   2f79c:	bl	6420 <__asan_cplus_demangle_type@plt>
   2f7a0:	mov	x2, x0
   2f7a4:	ldr	w1, [x19, #80]
   2f7a8:	mov	x3, #0x0                   	// #0
   2f7ac:	cbz	w1, 2f81c <__asan_cplus_demangle_type@@Base+0xe04>
   2f7b0:	mov	x0, x19
   2f7b4:	mov	w1, #0x35                  	// #53
   2f7b8:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2f7bc:	mov	x20, x0
   2f7c0:	str	w21, [x19, #80]
   2f7c4:	mov	x0, x20
   2f7c8:	ldp	x19, x20, [sp, #16]
   2f7cc:	ldr	x21, [sp, #32]
   2f7d0:	ldp	x29, x30, [sp], #48
   2f7d4:	ret
   2f7d8:	bl	2e560 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   2f7dc:	mov	x2, x0
   2f7e0:	ldp	w20, w0, [x19, #40]
   2f7e4:	cmp	w20, w0
   2f7e8:	b.ge	2f830 <__asan_cplus_demangle_type@@Base+0xe18>  // b.tcont
   2f7ec:	ldr	x1, [x19, #32]
   2f7f0:	mov	w3, #0x18                  	// #24
   2f7f4:	add	w0, w20, #0x1
   2f7f8:	smaddl	x20, w20, w3, x1
   2f7fc:	str	wzr, [x20, #4]
   2f800:	str	w0, [x19, #40]
   2f804:	mov	w1, w21
   2f808:	mov	x0, x20
   2f80c:	bl	67e0 <__asan_cplus_demangle_fill_extended_operator@plt>
   2f810:	ldr	x21, [sp, #32]
   2f814:	cbnz	w0, 2f6e0 <__asan_cplus_demangle_type@@Base+0xcc8>
   2f818:	b	2f6dc <__asan_cplus_demangle_type@@Base+0xcc4>
   2f81c:	mov	x0, x19
   2f820:	mov	w1, #0x34                  	// #52
   2f824:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2f828:	mov	x20, x0
   2f82c:	b	2f7c0 <__asan_cplus_demangle_type@@Base+0xda8>
   2f830:	mov	x20, #0x0                   	// #0
   2f834:	b	2f804 <__asan_cplus_demangle_type@@Base+0xdec>
   2f838:	stp	x29, x30, [sp, #-48]!
   2f83c:	mov	x29, sp
   2f840:	ldr	x4, [x0, #24]
   2f844:	stp	x19, x20, [sp, #16]
   2f848:	mov	x19, x0
   2f84c:	ldrb	w3, [x4]
   2f850:	sub	w1, w3, #0x30
   2f854:	and	w1, w1, #0xff
   2f858:	cmp	w1, #0x9
   2f85c:	b.ls	2f96c <__asan_cplus_demangle_type@@Base+0xf54>  // b.plast
   2f860:	sub	w1, w3, #0x61
   2f864:	and	w1, w1, #0xff
   2f868:	cmp	w1, #0x19
   2f86c:	b.hi	2f8b4 <__asan_cplus_demangle_type@@Base+0xe9c>  // b.pmore
   2f870:	cmp	w3, #0x6f
   2f874:	b.eq	2f9cc <__asan_cplus_demangle_type@@Base+0xfb4>  // b.none
   2f878:	mov	x0, x19
   2f87c:	bl	2f660 <__asan_cplus_demangle_type@@Base+0xc48>
   2f880:	mov	x20, x0
   2f884:	cbz	x0, 2f894 <__asan_cplus_demangle_type@@Base+0xe7c>
   2f888:	ldr	w0, [x0]
   2f88c:	cmp	w0, #0x32
   2f890:	b.eq	2fa70 <__asan_cplus_demangle_type@@Base+0x1058>  // b.none
   2f894:	ldr	x0, [x19, #24]
   2f898:	ldrb	w1, [x0]
   2f89c:	cmp	w1, #0x42
   2f8a0:	b.eq	2f984 <__asan_cplus_demangle_type@@Base+0xf6c>  // b.none
   2f8a4:	mov	x0, x20
   2f8a8:	ldp	x19, x20, [sp, #16]
   2f8ac:	ldp	x29, x30, [sp], #48
   2f8b0:	ret
   2f8b4:	sub	w1, w3, #0x43
   2f8b8:	and	w1, w1, #0xff
   2f8bc:	cmp	w1, #0x1
   2f8c0:	b.ls	2f9e4 <__asan_cplus_demangle_type@@Base+0xfcc>  // b.plast
   2f8c4:	cmp	w3, #0x4c
   2f8c8:	b.eq	2f998 <__asan_cplus_demangle_type@@Base+0xf80>  // b.none
   2f8cc:	cmp	w3, #0x55
   2f8d0:	b.ne	2f9b8 <__asan_cplus_demangle_type@@Base+0xfa0>  // b.any
   2f8d4:	ldrb	w1, [x4, #1]
   2f8d8:	cmp	w1, #0x6c
   2f8dc:	b.eq	2faf8 <__asan_cplus_demangle_type@@Base+0x10e0>  // b.none
   2f8e0:	cmp	w1, #0x74
   2f8e4:	b.ne	2f9b8 <__asan_cplus_demangle_type@@Base+0xfa0>  // b.any
   2f8e8:	add	x1, x4, #0x1
   2f8ec:	str	x1, [x0, #24]
   2f8f0:	mov	x20, #0x0                   	// #0
   2f8f4:	ldrb	w1, [x4, #1]
   2f8f8:	cmp	w1, #0x74
   2f8fc:	b.ne	2f89c <__asan_cplus_demangle_type@@Base+0xe84>  // b.any
   2f900:	add	x4, x4, #0x2
   2f904:	str	x4, [x0, #24]
   2f908:	bl	286e8 <__asan_backtrace_create_state@@Base+0x450>
   2f90c:	tbnz	w0, #31, 2f894 <__asan_cplus_demangle_type@@Base+0xe7c>
   2f910:	ldp	w1, w2, [x19, #40]
   2f914:	cmp	w1, w2
   2f918:	b.ge	2fa60 <__asan_cplus_demangle_type@@Base+0x1048>  // b.tcont
   2f91c:	ldp	x7, x3, [x19, #24]
   2f920:	mov	w2, #0x18                  	// #24
   2f924:	add	w6, w1, #0x1
   2f928:	mov	w4, #0x48                  	// #72
   2f92c:	smull	x1, w1, w2
   2f930:	sxtw	x0, w0
   2f934:	ldp	w2, w5, [x19, #56]
   2f938:	add	x20, x3, x1
   2f93c:	cmp	w2, w5
   2f940:	str	wzr, [x20, #4]
   2f944:	str	w6, [x19, #40]
   2f948:	str	w4, [x3, x1]
   2f94c:	str	x0, [x20, #8]
   2f950:	b.ge	2fc94 <__asan_cplus_demangle_type@@Base+0x127c>  // b.tcont
   2f954:	ldr	x1, [x19, #48]
   2f958:	add	w0, w2, #0x1
   2f95c:	str	x20, [x1, w2, sxtw #3]
   2f960:	str	w0, [x19, #56]
   2f964:	ldrb	w1, [x7]
   2f968:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2f96c:	bl	2e560 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   2f970:	mov	x20, x0
   2f974:	ldr	x1, [x19, #24]
   2f978:	ldrb	w1, [x1]
   2f97c:	cmp	w1, #0x42
   2f980:	b.ne	2f8a4 <__asan_cplus_demangle_type@@Base+0xe8c>  // b.any
   2f984:	mov	x1, x20
   2f988:	mov	x0, x19
   2f98c:	ldp	x19, x20, [sp, #16]
   2f990:	ldp	x29, x30, [sp], #48
   2f994:	b	2e680 <__asan_cplus_demangle_fill_name@@Base+0x1c0>
   2f998:	add	x4, x4, #0x1
   2f99c:	str	x4, [x0, #24]
   2f9a0:	bl	2e560 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   2f9a4:	mov	x20, x0
   2f9a8:	cbz	x0, 2f9b8 <__asan_cplus_demangle_type@@Base+0xfa0>
   2f9ac:	mov	x0, x19
   2f9b0:	bl	288e0 <__asan_backtrace_create_state@@Base+0x648>
   2f9b4:	cbnz	w0, 2f894 <__asan_cplus_demangle_type@@Base+0xe7c>
   2f9b8:	mov	x20, #0x0                   	// #0
   2f9bc:	mov	x0, x20
   2f9c0:	ldp	x19, x20, [sp, #16]
   2f9c4:	ldp	x29, x30, [sp], #48
   2f9c8:	ret
   2f9cc:	ldrb	w0, [x4, #1]
   2f9d0:	cmp	w0, #0x6e
   2f9d4:	b.ne	2f878 <__asan_cplus_demangle_type@@Base+0xe60>  // b.any
   2f9d8:	add	x4, x4, #0x2
   2f9dc:	str	x4, [x19, #24]
   2f9e0:	b	2f878 <__asan_cplus_demangle_type@@Base+0xe60>
   2f9e4:	ldr	x2, [x0, #64]
   2f9e8:	cbz	x2, 2f9fc <__asan_cplus_demangle_type@@Base+0xfe4>
   2f9ec:	ldr	w0, [x2]
   2f9f0:	cbz	w0, 2fac8 <__asan_cplus_demangle_type@@Base+0x10b0>
   2f9f4:	cmp	w0, #0x18
   2f9f8:	b.eq	2fac8 <__asan_cplus_demangle_type@@Base+0x10b0>  // b.none
   2f9fc:	cmp	w3, #0x43
   2fa00:	b.eq	2fba8 <__asan_cplus_demangle_type@@Base+0x1190>  // b.none
   2fa04:	ldrb	w0, [x4, #1]
   2fa08:	cmp	w0, #0x32
   2fa0c:	b.eq	2fc8c <__asan_cplus_demangle_type@@Base+0x1274>  // b.none
   2fa10:	b.hi	2fc18 <__asan_cplus_demangle_type@@Base+0x1200>  // b.pmore
   2fa14:	cmp	w0, #0x30
   2fa18:	b.eq	2fc38 <__asan_cplus_demangle_type@@Base+0x1220>  // b.none
   2fa1c:	cmp	w0, #0x31
   2fa20:	mov	w1, #0x2                   	// #2
   2fa24:	b.ne	2fc2c <__asan_cplus_demangle_type@@Base+0x1214>  // b.any
   2fa28:	ldp	w20, w0, [x19, #40]
   2fa2c:	add	x4, x4, #0x2
   2fa30:	str	x4, [x19, #24]
   2fa34:	cmp	w20, w0
   2fa38:	b.ge	2fca0 <__asan_cplus_demangle_type@@Base+0x1288>  // b.tcont
   2fa3c:	ldr	x3, [x19, #32]
   2fa40:	mov	w4, #0x18                  	// #24
   2fa44:	add	w0, w20, #0x1
   2fa48:	smaddl	x20, w20, w4, x3
   2fa4c:	str	wzr, [x20, #4]
   2fa50:	str	w0, [x19, #40]
   2fa54:	mov	x0, x20
   2fa58:	bl	6a10 <__asan_cplus_demangle_fill_dtor@plt>
   2fa5c:	cbnz	w0, 2f894 <__asan_cplus_demangle_type@@Base+0xe7c>
   2fa60:	ldr	x0, [x19, #24]
   2fa64:	mov	x20, #0x0                   	// #0
   2fa68:	ldrb	w1, [x0]
   2fa6c:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fa70:	ldr	x3, [x20, #8]
   2fa74:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2fa78:	ldr	w2, [x19, #72]
   2fa7c:	add	x1, x1, #0xa08
   2fa80:	ldr	x0, [x3]
   2fa84:	add	w2, w2, #0x7
   2fa88:	ldr	w3, [x3, #16]
   2fa8c:	add	w2, w2, w3
   2fa90:	str	w2, [x19, #72]
   2fa94:	bl	67f0 <__asan_internal_strcmp@plt>
   2fa98:	cbnz	w0, 2f894 <__asan_cplus_demangle_type@@Base+0xe7c>
   2fa9c:	mov	x0, x19
   2faa0:	bl	2e560 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   2faa4:	mov	x2, x20
   2faa8:	mov	x3, x0
   2faac:	mov	w1, #0x37                  	// #55
   2fab0:	mov	x0, x19
   2fab4:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2fab8:	mov	x20, x0
   2fabc:	ldr	x1, [x19, #24]
   2fac0:	ldrb	w1, [x1]
   2fac4:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fac8:	ldr	w1, [x2, #16]
   2facc:	ldr	w0, [x19, #72]
   2fad0:	add	w0, w0, w1
   2fad4:	str	w0, [x19, #72]
   2fad8:	ldrb	w1, [x4]
   2fadc:	cmp	w1, #0x43
   2fae0:	mov	w3, w1
   2fae4:	b.eq	2fba8 <__asan_cplus_demangle_type@@Base+0x1190>  // b.none
   2fae8:	cmp	w1, #0x44
   2faec:	b.eq	2fa04 <__asan_cplus_demangle_type@@Base+0xfec>  // b.none
   2faf0:	mov	x20, #0x0                   	// #0
   2faf4:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2faf8:	add	x1, x4, #0x1
   2fafc:	str	x1, [x0, #24]
   2fb00:	mov	x20, #0x0                   	// #0
   2fb04:	ldrb	w1, [x4, #1]
   2fb08:	cmp	w1, #0x6c
   2fb0c:	b.ne	2f89c <__asan_cplus_demangle_type@@Base+0xe84>  // b.any
   2fb10:	add	x4, x4, #0x2
   2fb14:	str	x4, [x0, #24]
   2fb18:	bl	2f550 <__asan_cplus_demangle_type@@Base+0xb38>
   2fb1c:	mov	x11, x0
   2fb20:	ldr	x0, [x19, #24]
   2fb24:	ldrb	w1, [x0]
   2fb28:	cbz	x11, 2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fb2c:	cmp	w1, #0x45
   2fb30:	b.ne	2f89c <__asan_cplus_demangle_type@@Base+0xe84>  // b.any
   2fb34:	add	x0, x0, #0x1
   2fb38:	str	x0, [x19, #24]
   2fb3c:	mov	x0, x19
   2fb40:	bl	286e8 <__asan_backtrace_create_state@@Base+0x450>
   2fb44:	tbnz	w0, #31, 2fa60 <__asan_cplus_demangle_type@@Base+0x1048>
   2fb48:	ldp	w1, w2, [x19, #40]
   2fb4c:	ldr	x4, [x19, #24]
   2fb50:	cmp	w1, w2
   2fb54:	b.ge	2fca8 <__asan_cplus_demangle_type@@Base+0x1290>  // b.tcont
   2fb58:	mov	w2, #0x18                  	// #24
   2fb5c:	add	w6, w1, #0x1
   2fb60:	ldr	x3, [x19, #32]
   2fb64:	smull	x1, w1, w2
   2fb68:	ldp	w2, w7, [x19, #56]
   2fb6c:	add	x20, x3, x1
   2fb70:	mov	w5, #0x46                  	// #70
   2fb74:	cmp	w2, w7
   2fb78:	str	wzr, [x20, #4]
   2fb7c:	str	w6, [x19, #40]
   2fb80:	str	w5, [x3, x1]
   2fb84:	str	x11, [x20, #8]
   2fb88:	str	w0, [x20, #16]
   2fb8c:	b.ge	2fca8 <__asan_cplus_demangle_type@@Base+0x1290>  // b.tcont
   2fb90:	ldr	x1, [x19, #48]
   2fb94:	add	w0, w2, #0x1
   2fb98:	str	x20, [x1, w2, sxtw #3]
   2fb9c:	str	w0, [x19, #56]
   2fba0:	ldrb	w1, [x4]
   2fba4:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fba8:	str	x21, [sp, #32]
   2fbac:	ldrb	w0, [x4, #1]
   2fbb0:	cmp	w0, #0x49
   2fbb4:	b.eq	2fc48 <__asan_cplus_demangle_type@@Base+0x1230>  // b.none
   2fbb8:	sub	w1, w0, #0x31
   2fbbc:	and	w1, w1, #0xff
   2fbc0:	cmp	w1, #0x4
   2fbc4:	b.hi	2fc80 <__asan_cplus_demangle_type@@Base+0x1268>  // b.pmore
   2fbc8:	sub	w21, w0, #0x30
   2fbcc:	add	x4, x4, #0x2
   2fbd0:	str	x4, [x19, #24]
   2fbd4:	ldp	w20, w0, [x19, #40]
   2fbd8:	cmp	w20, w0
   2fbdc:	b.ge	2fcc8 <__asan_cplus_demangle_type@@Base+0x12b0>  // b.tcont
   2fbe0:	ldr	x1, [x19, #32]
   2fbe4:	mov	w3, #0x18                  	// #24
   2fbe8:	add	w0, w20, #0x1
   2fbec:	smaddl	x20, w20, w3, x1
   2fbf0:	str	wzr, [x20, #4]
   2fbf4:	str	w0, [x19, #40]
   2fbf8:	mov	w1, w21
   2fbfc:	mov	x0, x20
   2fc00:	bl	6850 <__asan_cplus_demangle_fill_ctor@plt>
   2fc04:	cbz	w0, 2fcb4 <__asan_cplus_demangle_type@@Base+0x129c>
   2fc08:	ldr	x0, [x19, #24]
   2fc0c:	ldr	x21, [sp, #32]
   2fc10:	ldrb	w1, [x0]
   2fc14:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fc18:	cmp	w0, #0x34
   2fc1c:	b.eq	2fc40 <__asan_cplus_demangle_type@@Base+0x1228>  // b.none
   2fc20:	cmp	w0, #0x35
   2fc24:	mov	w1, #0x5                   	// #5
   2fc28:	b.eq	2fa28 <__asan_cplus_demangle_type@@Base+0x1010>  // b.none
   2fc2c:	mov	w1, w3
   2fc30:	mov	x20, #0x0                   	// #0
   2fc34:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fc38:	mov	w1, #0x1                   	// #1
   2fc3c:	b	2fa28 <__asan_cplus_demangle_type@@Base+0x1010>
   2fc40:	mov	w1, #0x4                   	// #4
   2fc44:	b	2fa28 <__asan_cplus_demangle_type@@Base+0x1010>
   2fc48:	add	x0, x4, #0x1
   2fc4c:	str	x0, [x19, #24]
   2fc50:	ldrb	w0, [x4, #2]
   2fc54:	sub	w1, w0, #0x31
   2fc58:	and	w1, w1, #0xff
   2fc5c:	cmp	w1, #0x4
   2fc60:	b.hi	2fcd0 <__asan_cplus_demangle_type@@Base+0x12b8>  // b.pmore
   2fc64:	add	x4, x4, #0x3
   2fc68:	str	x4, [x19, #24]
   2fc6c:	sub	w21, w0, #0x30
   2fc70:	mov	x0, x19
   2fc74:	bl	6420 <__asan_cplus_demangle_type@plt>
   2fc78:	ldr	x2, [x19, #64]
   2fc7c:	b	2fbd4 <__asan_cplus_demangle_type@@Base+0x11bc>
   2fc80:	mov	x20, #0x0                   	// #0
   2fc84:	ldr	x21, [sp, #32]
   2fc88:	b	2f9bc <__asan_cplus_demangle_type@@Base+0xfa4>
   2fc8c:	mov	w1, #0x3                   	// #3
   2fc90:	b	2fa28 <__asan_cplus_demangle_type@@Base+0x1010>
   2fc94:	ldrb	w1, [x7]
   2fc98:	mov	x20, #0x0                   	// #0
   2fc9c:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fca0:	mov	x20, #0x0                   	// #0
   2fca4:	b	2fa54 <__asan_cplus_demangle_type@@Base+0x103c>
   2fca8:	ldrb	w1, [x4]
   2fcac:	mov	x20, #0x0                   	// #0
   2fcb0:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fcb4:	ldr	x0, [x19, #24]
   2fcb8:	mov	x20, #0x0                   	// #0
   2fcbc:	ldr	x21, [sp, #32]
   2fcc0:	ldrb	w1, [x0]
   2fcc4:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fcc8:	mov	x20, #0x0                   	// #0
   2fccc:	b	2fbf8 <__asan_cplus_demangle_type@@Base+0x11e0>
   2fcd0:	ldrb	w1, [x4, #1]
   2fcd4:	mov	x20, #0x0                   	// #0
   2fcd8:	ldr	x21, [sp, #32]
   2fcdc:	b	2f89c <__asan_cplus_demangle_type@@Base+0xe84>
   2fce0:	stp	x29, x30, [sp, #-32]!
   2fce4:	mov	x29, sp
   2fce8:	stp	x19, x20, [sp, #16]
   2fcec:	mov	x19, x0
   2fcf0:	ldr	x0, [x0, #24]
   2fcf4:	ldrb	w2, [x0]
   2fcf8:	cmp	w2, #0x4a
   2fcfc:	b.eq	2fd60 <__asan_cplus_demangle_type@@Base+0x1348>  // b.none
   2fd00:	cbz	w1, 2fd3c <__asan_cplus_demangle_type@@Base+0x1324>
   2fd04:	mov	x0, x19
   2fd08:	bl	6420 <__asan_cplus_demangle_type@plt>
   2fd0c:	mov	x20, x0
   2fd10:	cbz	x0, 2fd50 <__asan_cplus_demangle_type@@Base+0x1338>
   2fd14:	mov	x0, x19
   2fd18:	bl	2f550 <__asan_cplus_demangle_type@@Base+0xb38>
   2fd1c:	mov	x3, x0
   2fd20:	cbz	x0, 2fd50 <__asan_cplus_demangle_type@@Base+0x1338>
   2fd24:	mov	x2, x20
   2fd28:	mov	x0, x19
   2fd2c:	ldp	x19, x20, [sp, #16]
   2fd30:	mov	w1, #0x29                  	// #41
   2fd34:	ldp	x29, x30, [sp], #32
   2fd38:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   2fd3c:	mov	x0, x19
   2fd40:	mov	x20, #0x0                   	// #0
   2fd44:	bl	2f550 <__asan_cplus_demangle_type@@Base+0xb38>
   2fd48:	mov	x3, x0
   2fd4c:	cbnz	x0, 2fd24 <__asan_cplus_demangle_type@@Base+0x130c>
   2fd50:	mov	x0, #0x0                   	// #0
   2fd54:	ldp	x19, x20, [sp, #16]
   2fd58:	ldp	x29, x30, [sp], #32
   2fd5c:	ret
   2fd60:	add	x0, x0, #0x1
   2fd64:	str	x0, [x19, #24]
   2fd68:	b	2fd04 <__asan_cplus_demangle_type@@Base+0x12ec>
   2fd6c:	nop
   2fd70:	stp	x29, x30, [sp, #-32]!
   2fd74:	mov	x29, sp
   2fd78:	str	x19, [sp, #16]
   2fd7c:	mov	x19, x0
   2fd80:	ldr	w0, [x0, #16]
   2fd84:	tbnz	w0, #18, 2fdc0 <__asan_cplus_demangle_type@@Base+0x13a8>
   2fd88:	ldr	w1, [x19, #84]
   2fd8c:	cmp	w1, #0x800
   2fd90:	b.hi	2fdd0 <__asan_cplus_demangle_type@@Base+0x13b8>  // b.pmore
   2fd94:	ldr	x2, [x19, #24]
   2fd98:	add	w0, w1, #0x1
   2fd9c:	str	w0, [x19, #84]
   2fda0:	mov	x0, #0x0                   	// #0
   2fda4:	ldrb	w3, [x2]
   2fda8:	cmp	w3, #0x46
   2fdac:	b.eq	2fde0 <__asan_cplus_demangle_type@@Base+0x13c8>  // b.none
   2fdb0:	str	w1, [x19, #84]
   2fdb4:	ldr	x19, [sp, #16]
   2fdb8:	ldp	x29, x30, [sp], #32
   2fdbc:	ret
   2fdc0:	ldr	x2, [x19, #24]
   2fdc4:	ldrb	w0, [x2]
   2fdc8:	cmp	w0, #0x46
   2fdcc:	b.eq	2fde0 <__asan_cplus_demangle_type@@Base+0x13c8>  // b.none
   2fdd0:	mov	x0, #0x0                   	// #0
   2fdd4:	ldr	x19, [sp, #16]
   2fdd8:	ldp	x29, x30, [sp], #32
   2fddc:	ret
   2fde0:	add	x4, x2, #0x1
   2fde4:	str	x4, [x19, #24]
   2fde8:	add	x3, x2, #0x2
   2fdec:	mov	w1, #0x1                   	// #1
   2fdf0:	ldrb	w2, [x2, #1]
   2fdf4:	mov	x0, x19
   2fdf8:	cmp	w2, #0x59
   2fdfc:	csel	x2, x3, x4, eq  // eq = none
   2fe00:	str	x2, [x19, #24]
   2fe04:	bl	2fce0 <__asan_cplus_demangle_type@@Base+0x12c8>
   2fe08:	mov	x1, x0
   2fe0c:	mov	x0, x19
   2fe10:	bl	283b8 <__asan_backtrace_create_state@@Base+0x120>
   2fe14:	ldr	x1, [x19, #24]
   2fe18:	ldrb	w2, [x1]
   2fe1c:	cmp	w2, #0x45
   2fe20:	b.eq	2fe40 <__asan_cplus_demangle_type@@Base+0x1428>  // b.none
   2fe24:	mov	x0, #0x0                   	// #0
   2fe28:	ldr	w1, [x19, #16]
   2fe2c:	tbnz	w1, #18, 2fdd4 <__asan_cplus_demangle_type@@Base+0x13bc>
   2fe30:	ldr	w1, [x19, #84]
   2fe34:	sub	w1, w1, #0x1
   2fe38:	str	w1, [x19, #84]
   2fe3c:	b	2fdb4 <__asan_cplus_demangle_type@@Base+0x139c>
   2fe40:	add	x1, x1, #0x1
   2fe44:	str	x1, [x19, #24]
   2fe48:	b	2fe28 <__asan_cplus_demangle_type@@Base+0x1410>
   2fe4c:	nop
   2fe50:	stp	x29, x30, [sp, #-112]!
   2fe54:	mov	x29, sp
   2fe58:	ldr	x2, [x0, #24]
   2fe5c:	stp	x19, x20, [sp, #16]
   2fe60:	mov	x19, x0
   2fe64:	str	xzr, [sp, #104]
   2fe68:	ldrb	w3, [x2]
   2fe6c:	cmp	w3, w1, uxtb
   2fe70:	b.eq	304ec <__asan_cplus_demangle_type@@Base+0x1ad4>  // b.none
   2fe74:	stp	x21, x22, [sp, #32]
   2fe78:	add	x21, sp, #0x68
   2fe7c:	mov	w22, #0x1                   	// #1
   2fe80:	stp	x23, x24, [sp, #48]
   2fe84:	adrp	x24, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2fe88:	and	w23, w1, #0xff
   2fe8c:	add	x24, x24, #0x920
   2fe90:	stp	x25, x26, [sp, #64]
   2fe94:	adrp	x25, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   2fe98:	add	x25, x25, #0x838
   2fe9c:	stp	x27, x28, [sp, #80]
   2fea0:	ldr	w26, [x19, #76]
   2fea4:	str	w22, [x19, #76]
   2fea8:	ldrb	w0, [x2]
   2feac:	cmp	w0, #0x4c
   2feb0:	b.eq	30054 <__asan_cplus_demangle_type@@Base+0x163c>  // b.none
   2feb4:	cmp	w0, #0x54
   2feb8:	b.eq	300e4 <__asan_cplus_demangle_type@@Base+0x16cc>  // b.none
   2febc:	cmp	w0, #0x73
   2fec0:	b.eq	30014 <__asan_cplus_demangle_type@@Base+0x15fc>  // b.none
   2fec4:	cmp	w0, #0x66
   2fec8:	b.ne	2ff2c <__asan_cplus_demangle_type@@Base+0x1514>  // b.any
   2fecc:	ldrb	w0, [x2, #1]
   2fed0:	cmp	w0, #0x70
   2fed4:	b.eq	300f4 <__asan_cplus_demangle_type@@Base+0x16dc>  // b.none
   2fed8:	mov	x0, x19
   2fedc:	bl	2f660 <__asan_cplus_demangle_type@@Base+0xc48>
   2fee0:	mov	x20, x0
   2fee4:	cbz	x0, 2ff08 <__asan_cplus_demangle_type@@Base+0x14f0>
   2fee8:	ldr	w0, [x0]
   2feec:	cmp	w0, #0x32
   2fef0:	b.eq	301e0 <__asan_cplus_demangle_type@@Base+0x17c8>  // b.none
   2fef4:	cmp	w0, #0x33
   2fef8:	b.eq	30274 <__asan_cplus_demangle_type@@Base+0x185c>  // b.none
   2fefc:	cmp	w0, #0x34
   2ff00:	b.eq	303e4 <__asan_cplus_demangle_type@@Base+0x19cc>  // b.none
   2ff04:	mov	x20, #0x0                   	// #0
   2ff08:	str	w26, [x19, #76]
   2ff0c:	mov	x0, x20
   2ff10:	ldp	x19, x20, [sp, #16]
   2ff14:	ldp	x21, x22, [sp, #32]
   2ff18:	ldp	x23, x24, [sp, #48]
   2ff1c:	ldp	x25, x26, [sp, #64]
   2ff20:	ldp	x27, x28, [sp, #80]
   2ff24:	ldp	x29, x30, [sp], #112
   2ff28:	ret
   2ff2c:	sub	w1, w0, #0x30
   2ff30:	and	w1, w1, #0xff
   2ff34:	cmp	w1, #0x9
   2ff38:	b.hi	30064 <__asan_cplus_demangle_type@@Base+0x164c>  // b.pmore
   2ff3c:	mov	x0, x19
   2ff40:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   2ff44:	mov	x20, x0
   2ff48:	cbz	x0, 2ff08 <__asan_cplus_demangle_type@@Base+0x14f0>
   2ff4c:	ldr	x0, [x19, #24]
   2ff50:	ldrb	w1, [x0]
   2ff54:	cmp	w1, #0x49
   2ff58:	b.eq	2ffbc <__asan_cplus_demangle_type@@Base+0x15a4>  // b.none
   2ff5c:	str	w26, [x19, #76]
   2ff60:	mov	x2, x20
   2ff64:	mov	x0, x19
   2ff68:	mov	x3, #0x0                   	// #0
   2ff6c:	mov	w1, #0x2e                  	// #46
   2ff70:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ff74:	str	x0, [x21]
   2ff78:	cbz	x0, 2fff0 <__asan_cplus_demangle_type@@Base+0x15d8>
   2ff7c:	ldr	x2, [x19, #24]
   2ff80:	add	x21, x0, #0x10
   2ff84:	ldrb	w0, [x2]
   2ff88:	cmp	w0, w23
   2ff8c:	b.ne	2fea0 <__asan_cplus_demangle_type@@Base+0x1488>  // b.any
   2ff90:	ldr	x20, [sp, #104]
   2ff94:	add	x2, x2, #0x1
   2ff98:	str	x2, [x19, #24]
   2ff9c:	mov	x0, x20
   2ffa0:	ldp	x19, x20, [sp, #16]
   2ffa4:	ldp	x21, x22, [sp, #32]
   2ffa8:	ldp	x23, x24, [sp, #48]
   2ffac:	ldp	x25, x26, [sp, #64]
   2ffb0:	ldp	x27, x28, [sp, #80]
   2ffb4:	ldp	x29, x30, [sp], #112
   2ffb8:	ret
   2ffbc:	add	x0, x0, #0x1
   2ffc0:	str	x0, [x19, #24]
   2ffc4:	mov	x0, x19
   2ffc8:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   2ffcc:	mov	x3, x0
   2ffd0:	mov	x2, x20
   2ffd4:	mov	x0, x19
   2ffd8:	mov	w1, #0x4                   	// #4
   2ffdc:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   2ffe0:	mov	x20, x0
   2ffe4:	nop
   2ffe8:	str	w26, [x19, #76]
   2ffec:	cbnz	x20, 2ff60 <__asan_cplus_demangle_type@@Base+0x1548>
   2fff0:	mov	x20, #0x0                   	// #0
   2fff4:	mov	x0, x20
   2fff8:	ldp	x19, x20, [sp, #16]
   2fffc:	ldp	x21, x22, [sp, #32]
   30000:	ldp	x23, x24, [sp, #48]
   30004:	ldp	x25, x26, [sp, #64]
   30008:	ldp	x27, x28, [sp, #80]
   3000c:	ldp	x29, x30, [sp], #112
   30010:	ret
   30014:	ldrb	w0, [x2, #1]
   30018:	cmp	w0, #0x72
   3001c:	b.eq	3016c <__asan_cplus_demangle_type@@Base+0x1754>  // b.none
   30020:	cmp	w0, #0x70
   30024:	b.ne	2fed8 <__asan_cplus_demangle_type@@Base+0x14c0>  // b.any
   30028:	add	x2, x2, #0x2
   3002c:	str	x2, [x19, #24]
   30030:	mov	x0, x19
   30034:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30038:	mov	x2, x0
   3003c:	mov	x3, #0x0                   	// #0
   30040:	mov	x0, x19
   30044:	mov	w1, #0x4b                  	// #75
   30048:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   3004c:	mov	x20, x0
   30050:	b	2ffe8 <__asan_cplus_demangle_type@@Base+0x15d0>
   30054:	mov	x0, x19
   30058:	bl	320a8 <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   3005c:	mov	x20, x0
   30060:	b	2ffe8 <__asan_cplus_demangle_type@@Base+0x15d0>
   30064:	cmp	w0, #0x6f
   30068:	b.ne	30084 <__asan_cplus_demangle_type@@Base+0x166c>  // b.any
   3006c:	ldrb	w0, [x2, #1]
   30070:	cmp	w0, #0x6e
   30074:	b.ne	2fed8 <__asan_cplus_demangle_type@@Base+0x14c0>  // b.any
   30078:	add	x2, x2, #0x2
   3007c:	str	x2, [x19, #24]
   30080:	b	2ff3c <__asan_cplus_demangle_type@@Base+0x1524>
   30084:	cmp	w0, #0x69
   30088:	mov	w1, #0x74                  	// #116
   3008c:	ccmp	w0, w1, #0x4, ne  // ne = any
   30090:	b.ne	2fed8 <__asan_cplus_demangle_type@@Base+0x14c0>  // b.any
   30094:	ldrb	w1, [x2, #1]
   30098:	cmp	w1, #0x6c
   3009c:	b.ne	2fed8 <__asan_cplus_demangle_type@@Base+0x14c0>  // b.any
   300a0:	add	x1, x2, #0x2
   300a4:	str	x1, [x19, #24]
   300a8:	cmp	w0, #0x74
   300ac:	mov	x20, #0x0                   	// #0
   300b0:	b.eq	30410 <__asan_cplus_demangle_type@@Base+0x19f8>  // b.none
   300b4:	ldrb	w0, [x1, #1]
   300b8:	cbz	w0, 2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>
   300bc:	mov	w1, #0x45                  	// #69
   300c0:	mov	x0, x19
   300c4:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   300c8:	mov	x3, x0
   300cc:	mov	x2, x20
   300d0:	mov	x0, x19
   300d4:	mov	w1, #0x31                  	// #49
   300d8:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   300dc:	mov	x20, x0
   300e0:	b	2ffe8 <__asan_cplus_demangle_type@@Base+0x15d0>
   300e4:	mov	x0, x19
   300e8:	bl	28760 <__asan_backtrace_create_state@@Base+0x4c8>
   300ec:	mov	x20, x0
   300f0:	b	2ffe8 <__asan_cplus_demangle_type@@Base+0x15d0>
   300f4:	add	x0, x2, #0x2
   300f8:	str	x0, [x19, #24]
   300fc:	ldrb	w0, [x2, #2]
   30100:	cmp	w0, #0x54
   30104:	b.eq	3015c <__asan_cplus_demangle_type@@Base+0x1744>  // b.none
   30108:	mov	x0, x19
   3010c:	bl	286e8 <__asan_backtrace_create_state@@Base+0x450>
   30110:	mvn	x1, x0
   30114:	tst	x1, #0x7fffffff
   30118:	b.eq	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.none
   3011c:	add	w0, w0, #0x1
   30120:	ldp	w1, w2, [x19, #40]
   30124:	cmp	w1, w2
   30128:	b.ge	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.tcont
   3012c:	mov	w3, #0x18                  	// #24
   30130:	add	w4, w1, #0x1
   30134:	ldr	x2, [x19, #32]
   30138:	smull	x1, w1, w3
   3013c:	mov	w3, #0x6                   	// #6
   30140:	sxtw	x0, w0
   30144:	add	x20, x2, x1
   30148:	str	wzr, [x20, #4]
   3014c:	str	w4, [x19, #40]
   30150:	str	w3, [x2, x1]
   30154:	str	x0, [x20, #8]
   30158:	b	2ff5c <__asan_cplus_demangle_type@@Base+0x1544>
   3015c:	add	x2, x2, #0x3
   30160:	mov	w0, #0x0                   	// #0
   30164:	str	x2, [x19, #24]
   30168:	b	30120 <__asan_cplus_demangle_type@@Base+0x1708>
   3016c:	add	x2, x2, #0x2
   30170:	str	x2, [x19, #24]
   30174:	mov	x0, x19
   30178:	bl	6420 <__asan_cplus_demangle_type@plt>
   3017c:	mov	x20, x0
   30180:	mov	x0, x19
   30184:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   30188:	ldr	x1, [x19, #24]
   3018c:	mov	x27, x0
   30190:	mov	x3, x27
   30194:	ldrb	w0, [x1]
   30198:	cmp	w0, #0x49
   3019c:	b.ne	301c8 <__asan_cplus_demangle_type@@Base+0x17b0>  // b.any
   301a0:	add	x1, x1, #0x1
   301a4:	str	x1, [x19, #24]
   301a8:	mov	x0, x19
   301ac:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   301b0:	mov	x3, x0
   301b4:	mov	x2, x27
   301b8:	mov	x0, x19
   301bc:	mov	w1, #0x4                   	// #4
   301c0:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   301c4:	mov	x3, x0
   301c8:	mov	x2, x20
   301cc:	mov	x0, x19
   301d0:	mov	w1, #0x1                   	// #1
   301d4:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   301d8:	mov	x20, x0
   301dc:	b	2ffe8 <__asan_cplus_demangle_type@@Base+0x15d0>
   301e0:	ldr	x3, [x20, #8]
   301e4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   301e8:	ldr	w0, [x19, #72]
   301ec:	add	x1, x1, #0xdc0
   301f0:	ldr	w2, [x3, #16]
   301f4:	ldr	x28, [x3]
   301f8:	sub	w2, w2, #0x2
   301fc:	add	w0, w0, w2
   30200:	str	w0, [x19, #72]
   30204:	mov	x0, x28
   30208:	bl	67f0 <__asan_internal_strcmp@plt>
   3020c:	cbz	w0, 3050c <__asan_cplus_demangle_type@@Base+0x1af4>
   30210:	ldr	w1, [x20]
   30214:	cmp	w1, #0x33
   30218:	b.eq	30278 <__asan_cplus_demangle_type@@Base+0x1860>  // b.none
   3021c:	cmp	w1, #0x34
   30220:	b.eq	3042c <__asan_cplus_demangle_type@@Base+0x1a14>  // b.none
   30224:	cmp	w1, #0x32
   30228:	b.ne	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   3022c:	ldr	x0, [x20, #8]
   30230:	ldr	w0, [x0, #20]
   30234:	cmp	w0, #0x2
   30238:	b.eq	30288 <__asan_cplus_demangle_type@@Base+0x1870>  // b.none
   3023c:	b.gt	30308 <__asan_cplus_demangle_type@@Base+0x18f0>
   30240:	cbz	w0, 304c0 <__asan_cplus_demangle_type@@Base+0x1aa8>
   30244:	cmp	w0, #0x1
   30248:	b.ne	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   3024c:	cbnz	x28, 30490 <__asan_cplus_demangle_type@@Base+0x1a78>
   30250:	mov	x0, x19
   30254:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30258:	mov	x3, x0
   3025c:	mov	x2, x20
   30260:	mov	x0, x19
   30264:	mov	w1, #0x37                  	// #55
   30268:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   3026c:	mov	x20, x0
   30270:	b	2ffe8 <__asan_cplus_demangle_type@@Base+0x15d0>
   30274:	mov	x28, #0x0                   	// #0
   30278:	ldr	w0, [x20, #8]
   3027c:	mov	w1, #0x33                  	// #51
   30280:	cmp	w0, #0x2
   30284:	b.ne	3023c <__asan_cplus_demangle_type@@Base+0x1824>  // b.any
   30288:	cbz	x28, 2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>
   3028c:	ldr	x0, [x20, #8]
   30290:	ldr	x0, [x0]
   30294:	ldrb	w1, [x0, #1]
   30298:	cmp	w1, #0x63
   3029c:	b.eq	305bc <__asan_cplus_demangle_type@@Base+0x1ba4>  // b.none
   302a0:	ldrb	w0, [x28]
   302a4:	cmp	w0, #0x66
   302a8:	b.eq	3061c <__asan_cplus_demangle_type@@Base+0x1c04>  // b.none
   302ac:	mov	x0, x19
   302b0:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   302b4:	mov	x27, x0
   302b8:	mov	x1, x25
   302bc:	mov	x0, x28
   302c0:	bl	67f0 <__asan_internal_strcmp@plt>
   302c4:	cbnz	w0, 3051c <__asan_cplus_demangle_type@@Base+0x1b04>
   302c8:	mov	x0, x19
   302cc:	mov	w1, #0x45                  	// #69
   302d0:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   302d4:	mov	x28, x0
   302d8:	mov	x3, x28
   302dc:	mov	x2, x27
   302e0:	mov	w1, #0x39                  	// #57
   302e4:	mov	x0, x19
   302e8:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   302ec:	mov	x3, x0
   302f0:	mov	x2, x20
   302f4:	mov	x0, x19
   302f8:	mov	w1, #0x38                  	// #56
   302fc:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30300:	mov	x20, x0
   30304:	b	2ffe8 <__asan_cplus_demangle_type@@Base+0x15d0>
   30308:	cmp	w0, #0x3
   3030c:	b.ne	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   30310:	cbz	x28, 2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>
   30314:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   30318:	mov	x0, x28
   3031c:	add	x1, x1, #0x848
   30320:	bl	67f0 <__asan_internal_strcmp@plt>
   30324:	cbz	w0, 305ec <__asan_cplus_demangle_type@@Base+0x1bd4>
   30328:	ldrb	w0, [x28]
   3032c:	cmp	w0, #0x66
   30330:	b.eq	3062c <__asan_cplus_demangle_type@@Base+0x1c14>  // b.none
   30334:	cmp	w0, #0x6e
   30338:	b.ne	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   3033c:	ldrb	w0, [x28, #1]
   30340:	mov	w1, #0x61                  	// #97
   30344:	cmp	w0, #0x77
   30348:	ccmp	w0, w1, #0x4, ne  // ne = any
   3034c:	b.ne	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   30350:	mov	w1, #0x5f                  	// #95
   30354:	mov	x0, x19
   30358:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   3035c:	mov	x27, x0
   30360:	mov	x0, x19
   30364:	bl	6420 <__asan_cplus_demangle_type@plt>
   30368:	ldr	x1, [x19, #24]
   3036c:	mov	x28, x0
   30370:	ldrb	w0, [x1]
   30374:	cmp	w0, #0x45
   30378:	b.eq	30660 <__asan_cplus_demangle_type@@Base+0x1c48>  // b.none
   3037c:	cmp	w0, #0x70
   30380:	b.eq	30638 <__asan_cplus_demangle_type@@Base+0x1c20>  // b.none
   30384:	cmp	w0, #0x69
   30388:	b.ne	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   3038c:	ldrb	w0, [x1, #1]
   30390:	cmp	w0, #0x6c
   30394:	b.ne	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   30398:	mov	x0, x19
   3039c:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   303a0:	mov	x3, x0
   303a4:	mov	x2, x28
   303a8:	mov	w1, #0x3c                  	// #60
   303ac:	mov	x0, x19
   303b0:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   303b4:	mov	x2, x27
   303b8:	mov	x3, x0
   303bc:	mov	w1, #0x3b                  	// #59
   303c0:	mov	x0, x19
   303c4:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   303c8:	mov	x3, x0
   303cc:	mov	x2, x20
   303d0:	mov	x0, x19
   303d4:	mov	w1, #0x3a                  	// #58
   303d8:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   303dc:	mov	x20, x0
   303e0:	b	2ffe8 <__asan_cplus_demangle_type@@Base+0x15d0>
   303e4:	ldr	x0, [x19, #24]
   303e8:	ldrb	w1, [x0]
   303ec:	cmp	w1, #0x5f
   303f0:	b.ne	30250 <__asan_cplus_demangle_type@@Base+0x1838>  // b.any
   303f4:	add	x0, x0, #0x1
   303f8:	str	x0, [x19, #24]
   303fc:	mov	w1, #0x45                  	// #69
   30400:	mov	x0, x19
   30404:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   30408:	mov	x3, x0
   3040c:	b	3025c <__asan_cplus_demangle_type@@Base+0x1844>
   30410:	mov	x0, x19
   30414:	bl	6420 <__asan_cplus_demangle_type@plt>
   30418:	ldr	x1, [x19, #24]
   3041c:	mov	x20, x0
   30420:	ldrb	w0, [x1, #1]
   30424:	cbnz	w0, 300bc <__asan_cplus_demangle_type@@Base+0x16a4>
   30428:	b	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>
   3042c:	cbz	x28, 303e4 <__asan_cplus_demangle_type@@Base+0x19cc>
   30430:	ldrb	w0, [x28]
   30434:	mov	w2, #0x6d                  	// #109
   30438:	cmp	w0, #0x70
   3043c:	ccmp	w0, w2, #0x4, ne  // ne = any
   30440:	b.eq	304a8 <__asan_cplus_demangle_type@@Base+0x1a90>  // b.none
   30444:	ldr	x0, [x19, #24]
   30448:	ldrb	w1, [x0]
   3044c:	cmp	w1, #0x5f
   30450:	b.eq	303f4 <__asan_cplus_demangle_type@@Base+0x19dc>  // b.none
   30454:	mov	w27, #0x0                   	// #0
   30458:	mov	x0, x28
   3045c:	mov	x1, x24
   30460:	bl	67f0 <__asan_internal_strcmp@plt>
   30464:	cbz	w0, 304dc <__asan_cplus_demangle_type@@Base+0x1ac4>
   30468:	mov	x0, x19
   3046c:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30470:	mov	x3, x0
   30474:	cbz	w27, 3025c <__asan_cplus_demangle_type@@Base+0x1844>
   30478:	mov	x2, x3
   3047c:	mov	x0, x19
   30480:	mov	w1, #0x39                  	// #57
   30484:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30488:	mov	x3, x0
   3048c:	b	3025c <__asan_cplus_demangle_type@@Base+0x1844>
   30490:	ldrb	w0, [x28]
   30494:	mov	w2, #0x6d                  	// #109
   30498:	cmp	w0, #0x70
   3049c:	ccmp	w0, w2, #0x4, ne  // ne = any
   304a0:	b.ne	30454 <__asan_cplus_demangle_type@@Base+0x1a3c>  // b.any
   304a4:	nop
   304a8:	ldrb	w2, [x28, #1]
   304ac:	cmp	w2, w0
   304b0:	b.eq	3059c <__asan_cplus_demangle_type@@Base+0x1b84>  // b.none
   304b4:	cmp	w1, #0x34
   304b8:	b.ne	30454 <__asan_cplus_demangle_type@@Base+0x1a3c>  // b.any
   304bc:	b	30444 <__asan_cplus_demangle_type@@Base+0x1a2c>
   304c0:	mov	x2, x20
   304c4:	mov	x0, x19
   304c8:	mov	x3, #0x0                   	// #0
   304cc:	mov	w1, #0x36                  	// #54
   304d0:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   304d4:	mov	x20, x0
   304d8:	b	2ffe8 <__asan_cplus_demangle_type@@Base+0x15d0>
   304dc:	mov	x0, x19
   304e0:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   304e4:	mov	x3, x0
   304e8:	b	30474 <__asan_cplus_demangle_type@@Base+0x1a5c>
   304ec:	add	x2, x2, #0x1
   304f0:	str	x2, [x0, #24]
   304f4:	ldp	x19, x20, [sp, #16]
   304f8:	mov	x3, #0x0                   	// #0
   304fc:	ldp	x29, x30, [sp], #112
   30500:	mov	w1, #0x2e                  	// #46
   30504:	mov	x2, #0x0                   	// #0
   30508:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   3050c:	mov	x0, x19
   30510:	bl	6420 <__asan_cplus_demangle_type@plt>
   30514:	mov	x3, x0
   30518:	b	3025c <__asan_cplus_demangle_type@@Base+0x1844>
   3051c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   30520:	mov	x0, x28
   30524:	add	x1, x1, #0xa10
   30528:	bl	67f0 <__asan_internal_strcmp@plt>
   3052c:	cbz	w0, 30554 <__asan_cplus_demangle_type@@Base+0x1b3c>
   30530:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   30534:	mov	x0, x28
   30538:	add	x1, x1, #0xa18
   3053c:	bl	67f0 <__asan_internal_strcmp@plt>
   30540:	cbz	w0, 30554 <__asan_cplus_demangle_type@@Base+0x1b3c>
   30544:	mov	x0, x19
   30548:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   3054c:	mov	x28, x0
   30550:	b	302d8 <__asan_cplus_demangle_type@@Base+0x18c0>
   30554:	mov	x0, x19
   30558:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   3055c:	ldr	x1, [x19, #24]
   30560:	mov	x28, x0
   30564:	ldrb	w0, [x1]
   30568:	cmp	w0, #0x49
   3056c:	b.ne	302d8 <__asan_cplus_demangle_type@@Base+0x18c0>  // b.any
   30570:	add	x1, x1, #0x1
   30574:	str	x1, [x19, #24]
   30578:	mov	x0, x19
   3057c:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   30580:	mov	x3, x0
   30584:	mov	x2, x28
   30588:	mov	x0, x19
   3058c:	mov	w1, #0x4                   	// #4
   30590:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30594:	mov	x28, x0
   30598:	b	302d8 <__asan_cplus_demangle_type@@Base+0x18c0>
   3059c:	ldr	x0, [x19, #24]
   305a0:	mov	w27, #0x1                   	// #1
   305a4:	ldrb	w2, [x0]
   305a8:	cmp	w2, #0x5f
   305ac:	b.ne	30458 <__asan_cplus_demangle_type@@Base+0x1a40>  // b.any
   305b0:	add	x0, x0, #0x1
   305b4:	str	x0, [x19, #24]
   305b8:	b	304b4 <__asan_cplus_demangle_type@@Base+0x1a9c>
   305bc:	ldrb	w0, [x0]
   305c0:	sub	w1, w0, #0x63
   305c4:	sub	w0, w0, #0x72
   305c8:	and	w1, w1, #0xff
   305cc:	and	w0, w0, #0xff
   305d0:	cmp	w1, #0x1
   305d4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   305d8:	b.hi	302a0 <__asan_cplus_demangle_type@@Base+0x1888>  // b.pmore
   305dc:	mov	x0, x19
   305e0:	bl	6420 <__asan_cplus_demangle_type@plt>
   305e4:	mov	x27, x0
   305e8:	b	302b8 <__asan_cplus_demangle_type@@Base+0x18a0>
   305ec:	mov	x0, x19
   305f0:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   305f4:	mov	x27, x0
   305f8:	mov	x0, x19
   305fc:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30600:	mov	x28, x0
   30604:	mov	x0, x19
   30608:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   3060c:	mov	x3, x0
   30610:	cbnz	x0, 303a4 <__asan_cplus_demangle_type@@Base+0x198c>
   30614:	mov	x20, #0x0                   	// #0
   30618:	b	2ff08 <__asan_cplus_demangle_type@@Base+0x14f0>
   3061c:	mov	x0, x19
   30620:	bl	2f660 <__asan_cplus_demangle_type@@Base+0xc48>
   30624:	mov	x27, x0
   30628:	b	302b8 <__asan_cplus_demangle_type@@Base+0x18a0>
   3062c:	mov	x0, x19
   30630:	bl	2f660 <__asan_cplus_demangle_type@@Base+0xc48>
   30634:	b	305f4 <__asan_cplus_demangle_type@@Base+0x1bdc>
   30638:	ldrb	w0, [x1, #1]
   3063c:	cmp	w0, #0x69
   30640:	b.ne	2ff04 <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   30644:	add	x1, x1, #0x2
   30648:	str	x1, [x19, #24]
   3064c:	mov	x0, x19
   30650:	mov	w1, #0x45                  	// #69
   30654:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   30658:	mov	x3, x0
   3065c:	b	303a4 <__asan_cplus_demangle_type@@Base+0x198c>
   30660:	add	x1, x1, #0x1
   30664:	mov	x3, #0x0                   	// #0
   30668:	str	x1, [x19, #24]
   3066c:	b	303a4 <__asan_cplus_demangle_type@@Base+0x198c>
   30670:	ldr	x2, [x0, #24]
   30674:	ldrb	w1, [x2]
   30678:	cmp	w1, #0x4c
   3067c:	b.eq	30888 <__asan_cplus_demangle_type@@Base+0x1e70>  // b.none
   30680:	cmp	w1, #0x54
   30684:	b.eq	3090c <__asan_cplus_demangle_type@@Base+0x1ef4>  // b.none
   30688:	stp	x29, x30, [sp, #-48]!
   3068c:	cmp	w1, #0x73
   30690:	mov	x29, sp
   30694:	stp	x19, x20, [sp, #16]
   30698:	mov	x19, x0
   3069c:	b.eq	3073c <__asan_cplus_demangle_type@@Base+0x1d24>  // b.none
   306a0:	cmp	w1, #0x66
   306a4:	b.eq	306e8 <__asan_cplus_demangle_type@@Base+0x1cd0>  // b.none
   306a8:	sub	w3, w1, #0x30
   306ac:	and	w3, w3, #0xff
   306b0:	cmp	w3, #0x9
   306b4:	b.hi	3088c <__asan_cplus_demangle_type@@Base+0x1e74>  // b.pmore
   306b8:	mov	x0, x19
   306bc:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   306c0:	mov	x20, x0
   306c4:	cbz	x0, 30874 <__asan_cplus_demangle_type@@Base+0x1e5c>
   306c8:	ldr	x0, [x19, #24]
   306cc:	ldrb	w1, [x0]
   306d0:	cmp	w1, #0x49
   306d4:	b.eq	30910 <__asan_cplus_demangle_type@@Base+0x1ef8>  // b.none
   306d8:	mov	x0, x20
   306dc:	ldp	x19, x20, [sp, #16]
   306e0:	ldp	x29, x30, [sp], #48
   306e4:	ret
   306e8:	ldrb	w1, [x2, #1]
   306ec:	cmp	w1, #0x70
   306f0:	b.eq	30778 <__asan_cplus_demangle_type@@Base+0x1d60>  // b.none
   306f4:	mov	x0, x19
   306f8:	bl	2f660 <__asan_cplus_demangle_type@@Base+0xc48>
   306fc:	mov	x20, x0
   30700:	cbz	x0, 30874 <__asan_cplus_demangle_type@@Base+0x1e5c>
   30704:	ldr	w0, [x0]
   30708:	stp	x21, x22, [sp, #32]
   3070c:	cmp	w0, #0x32
   30710:	b.eq	309c8 <__asan_cplus_demangle_type@@Base+0x1fb0>  // b.none
   30714:	cmp	w0, #0x33
   30718:	b.eq	30ab0 <__asan_cplus_demangle_type@@Base+0x2098>  // b.none
   3071c:	cmp	w0, #0x34
   30720:	b.eq	30b38 <__asan_cplus_demangle_type@@Base+0x2120>  // b.none
   30724:	mov	x20, #0x0                   	// #0
   30728:	mov	x0, x20
   3072c:	ldp	x19, x20, [sp, #16]
   30730:	ldp	x21, x22, [sp, #32]
   30734:	ldp	x29, x30, [sp], #48
   30738:	ret
   3073c:	ldrb	w1, [x2, #1]
   30740:	cmp	w1, #0x72
   30744:	b.eq	3093c <__asan_cplus_demangle_type@@Base+0x1f24>  // b.none
   30748:	cmp	w1, #0x70
   3074c:	b.ne	306f4 <__asan_cplus_demangle_type@@Base+0x1cdc>  // b.any
   30750:	add	x2, x2, #0x2
   30754:	str	x2, [x0, #24]
   30758:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   3075c:	mov	x2, x0
   30760:	mov	x0, x19
   30764:	mov	x3, #0x0                   	// #0
   30768:	ldp	x19, x20, [sp, #16]
   3076c:	mov	w1, #0x4b                  	// #75
   30770:	ldp	x29, x30, [sp], #48
   30774:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   30778:	add	x1, x2, #0x2
   3077c:	str	x1, [x0, #24]
   30780:	ldrb	w1, [x2, #2]
   30784:	cmp	w1, #0x54
   30788:	b.eq	30ac0 <__asan_cplus_demangle_type@@Base+0x20a8>  // b.none
   3078c:	bl	286e8 <__asan_backtrace_create_state@@Base+0x450>
   30790:	mvn	x1, x0
   30794:	add	w0, w0, #0x1
   30798:	tst	x1, #0x7fffffff
   3079c:	b.eq	30874 <__asan_cplus_demangle_type@@Base+0x1e5c>  // b.none
   307a0:	ldp	w1, w2, [x19, #40]
   307a4:	cmp	w1, w2
   307a8:	b.ge	30874 <__asan_cplus_demangle_type@@Base+0x1e5c>  // b.tcont
   307ac:	mov	w3, #0x18                  	// #24
   307b0:	add	w4, w1, #0x1
   307b4:	ldr	x2, [x19, #32]
   307b8:	smull	x1, w1, w3
   307bc:	mov	w3, #0x6                   	// #6
   307c0:	sxtw	x0, w0
   307c4:	add	x20, x2, x1
   307c8:	str	wzr, [x20, #4]
   307cc:	str	w4, [x19, #40]
   307d0:	str	w3, [x2, x1]
   307d4:	str	x0, [x20, #8]
   307d8:	b	306d8 <__asan_cplus_demangle_type@@Base+0x1cc0>
   307dc:	cmp	w0, #0x3
   307e0:	b.ne	30724 <__asan_cplus_demangle_type@@Base+0x1d0c>  // b.any
   307e4:	cbz	x21, 30870 <__asan_cplus_demangle_type@@Base+0x1e58>
   307e8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   307ec:	mov	x0, x21
   307f0:	add	x1, x1, #0x848
   307f4:	bl	67f0 <__asan_internal_strcmp@plt>
   307f8:	cbz	w0, 30d18 <__asan_cplus_demangle_type@@Base+0x2300>
   307fc:	ldrb	w0, [x21]
   30800:	cmp	w0, #0x66
   30804:	b.eq	30d54 <__asan_cplus_demangle_type@@Base+0x233c>  // b.none
   30808:	cmp	w0, #0x6e
   3080c:	b.ne	30870 <__asan_cplus_demangle_type@@Base+0x1e58>  // b.any
   30810:	ldrb	w0, [x21, #1]
   30814:	mov	w1, #0x61                  	// #97
   30818:	cmp	w0, #0x77
   3081c:	ccmp	w0, w1, #0x4, ne  // ne = any
   30820:	b.ne	30870 <__asan_cplus_demangle_type@@Base+0x1e58>  // b.any
   30824:	mov	w1, #0x5f                  	// #95
   30828:	mov	x0, x19
   3082c:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   30830:	mov	x21, x0
   30834:	mov	x0, x19
   30838:	bl	6420 <__asan_cplus_demangle_type@plt>
   3083c:	ldr	x1, [x19, #24]
   30840:	mov	x22, x0
   30844:	ldrb	w0, [x1]
   30848:	cmp	w0, #0x45
   3084c:	b.eq	30d98 <__asan_cplus_demangle_type@@Base+0x2380>  // b.none
   30850:	cmp	w0, #0x70
   30854:	b.eq	30d70 <__asan_cplus_demangle_type@@Base+0x2358>  // b.none
   30858:	cmp	w0, #0x69
   3085c:	b.ne	30870 <__asan_cplus_demangle_type@@Base+0x1e58>  // b.any
   30860:	ldrb	w0, [x1, #1]
   30864:	cmp	w0, #0x6c
   30868:	b.eq	30a60 <__asan_cplus_demangle_type@@Base+0x2048>  // b.none
   3086c:	nop
   30870:	ldp	x21, x22, [sp, #32]
   30874:	mov	x20, #0x0                   	// #0
   30878:	mov	x0, x20
   3087c:	ldp	x19, x20, [sp, #16]
   30880:	ldp	x29, x30, [sp], #48
   30884:	ret
   30888:	b	320a8 <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   3088c:	cmp	w1, #0x6f
   30890:	b.ne	308ac <__asan_cplus_demangle_type@@Base+0x1e94>  // b.any
   30894:	ldrb	w0, [x2, #1]
   30898:	cmp	w0, #0x6e
   3089c:	b.ne	306f4 <__asan_cplus_demangle_type@@Base+0x1cdc>  // b.any
   308a0:	add	x2, x2, #0x2
   308a4:	str	x2, [x19, #24]
   308a8:	b	306b8 <__asan_cplus_demangle_type@@Base+0x1ca0>
   308ac:	cmp	w1, #0x69
   308b0:	mov	w3, #0x74                  	// #116
   308b4:	ccmp	w1, w3, #0x4, ne  // ne = any
   308b8:	b.ne	306f4 <__asan_cplus_demangle_type@@Base+0x1cdc>  // b.any
   308bc:	ldrb	w3, [x2, #1]
   308c0:	cmp	w3, #0x6c
   308c4:	b.ne	306f4 <__asan_cplus_demangle_type@@Base+0x1cdc>  // b.any
   308c8:	add	x3, x2, #0x2
   308cc:	str	x3, [x0, #24]
   308d0:	cmp	w1, #0x74
   308d4:	mov	x20, #0x0                   	// #0
   308d8:	b.eq	309b8 <__asan_cplus_demangle_type@@Base+0x1fa0>  // b.none
   308dc:	ldrb	w0, [x3, #1]
   308e0:	cbz	w0, 30874 <__asan_cplus_demangle_type@@Base+0x1e5c>
   308e4:	mov	x0, x19
   308e8:	mov	w1, #0x45                  	// #69
   308ec:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   308f0:	mov	x3, x0
   308f4:	mov	x2, x20
   308f8:	mov	x0, x19
   308fc:	ldp	x19, x20, [sp, #16]
   30900:	mov	w1, #0x31                  	// #49
   30904:	ldp	x29, x30, [sp], #48
   30908:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   3090c:	b	28760 <__asan_backtrace_create_state@@Base+0x4c8>
   30910:	add	x0, x0, #0x1
   30914:	str	x0, [x19, #24]
   30918:	mov	x0, x19
   3091c:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   30920:	mov	x3, x0
   30924:	mov	x2, x20
   30928:	mov	x0, x19
   3092c:	ldp	x19, x20, [sp, #16]
   30930:	mov	w1, #0x4                   	// #4
   30934:	ldp	x29, x30, [sp], #48
   30938:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   3093c:	add	x2, x2, #0x2
   30940:	stp	x21, x22, [sp, #32]
   30944:	str	x2, [x0, #24]
   30948:	bl	6420 <__asan_cplus_demangle_type@plt>
   3094c:	mov	x20, x0
   30950:	mov	x0, x19
   30954:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   30958:	ldr	x1, [x19, #24]
   3095c:	mov	x21, x0
   30960:	mov	x3, x21
   30964:	ldrb	w0, [x1]
   30968:	cmp	w0, #0x49
   3096c:	b.eq	3098c <__asan_cplus_demangle_type@@Base+0x1f74>  // b.none
   30970:	mov	x2, x20
   30974:	mov	x0, x19
   30978:	ldp	x19, x20, [sp, #16]
   3097c:	mov	w1, #0x1                   	// #1
   30980:	ldp	x21, x22, [sp, #32]
   30984:	ldp	x29, x30, [sp], #48
   30988:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   3098c:	add	x1, x1, #0x1
   30990:	str	x1, [x19, #24]
   30994:	mov	x0, x19
   30998:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   3099c:	mov	x3, x0
   309a0:	mov	x2, x21
   309a4:	mov	x0, x19
   309a8:	mov	w1, #0x4                   	// #4
   309ac:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   309b0:	mov	x3, x0
   309b4:	b	30970 <__asan_cplus_demangle_type@@Base+0x1f58>
   309b8:	bl	6420 <__asan_cplus_demangle_type@plt>
   309bc:	mov	x20, x0
   309c0:	ldr	x3, [x19, #24]
   309c4:	b	308dc <__asan_cplus_demangle_type@@Base+0x1ec4>
   309c8:	ldr	x3, [x20, #8]
   309cc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   309d0:	ldr	w0, [x19, #72]
   309d4:	add	x1, x1, #0xdc0
   309d8:	ldr	w2, [x3, #16]
   309dc:	ldr	x21, [x3]
   309e0:	sub	w2, w2, #0x2
   309e4:	add	w0, w0, w2
   309e8:	str	w0, [x19, #72]
   309ec:	mov	x0, x21
   309f0:	bl	67f0 <__asan_internal_strcmp@plt>
   309f4:	cbz	w0, 30c48 <__asan_cplus_demangle_type@@Base+0x2230>
   309f8:	ldr	w1, [x20]
   309fc:	cmp	w1, #0x33
   30a00:	b.eq	30ab4 <__asan_cplus_demangle_type@@Base+0x209c>  // b.none
   30a04:	cmp	w1, #0x34
   30a08:	b.eq	30ad0 <__asan_cplus_demangle_type@@Base+0x20b8>  // b.none
   30a0c:	cmp	w1, #0x32
   30a10:	b.ne	30724 <__asan_cplus_demangle_type@@Base+0x1d0c>  // b.any
   30a14:	ldr	x0, [x20, #8]
   30a18:	ldr	w0, [x0, #20]
   30a1c:	cmp	w0, #0x2
   30a20:	b.eq	30b90 <__asan_cplus_demangle_type@@Base+0x2178>  // b.none
   30a24:	b.gt	307dc <__asan_cplus_demangle_type@@Base+0x1dc4>
   30a28:	cbz	w0, 30c18 <__asan_cplus_demangle_type@@Base+0x2200>
   30a2c:	cmp	w0, #0x1
   30a30:	b.ne	30724 <__asan_cplus_demangle_type@@Base+0x1d0c>  // b.any
   30a34:	cbnz	x21, 30b64 <__asan_cplus_demangle_type@@Base+0x214c>
   30a38:	mov	x0, x19
   30a3c:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30a40:	mov	x3, x0
   30a44:	mov	x2, x20
   30a48:	mov	x0, x19
   30a4c:	ldp	x19, x20, [sp, #16]
   30a50:	mov	w1, #0x37                  	// #55
   30a54:	ldp	x21, x22, [sp, #32]
   30a58:	ldp	x29, x30, [sp], #48
   30a5c:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   30a60:	mov	x0, x19
   30a64:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30a68:	mov	x3, x0
   30a6c:	mov	x2, x22
   30a70:	mov	x0, x19
   30a74:	mov	w1, #0x3c                  	// #60
   30a78:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30a7c:	mov	x2, x21
   30a80:	mov	x3, x0
   30a84:	mov	w1, #0x3b                  	// #59
   30a88:	mov	x0, x19
   30a8c:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30a90:	mov	x3, x0
   30a94:	mov	x2, x20
   30a98:	mov	x0, x19
   30a9c:	ldp	x19, x20, [sp, #16]
   30aa0:	mov	w1, #0x3a                  	// #58
   30aa4:	ldp	x21, x22, [sp, #32]
   30aa8:	ldp	x29, x30, [sp], #48
   30aac:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   30ab0:	mov	x21, #0x0                   	// #0
   30ab4:	ldr	w0, [x20, #8]
   30ab8:	mov	w1, #0x33                  	// #51
   30abc:	b	30a1c <__asan_cplus_demangle_type@@Base+0x2004>
   30ac0:	add	x2, x2, #0x3
   30ac4:	mov	w0, #0x0                   	// #0
   30ac8:	str	x2, [x19, #24]
   30acc:	b	307a0 <__asan_cplus_demangle_type@@Base+0x1d88>
   30ad0:	cbz	x21, 30b38 <__asan_cplus_demangle_type@@Base+0x2120>
   30ad4:	ldrb	w0, [x21]
   30ad8:	mov	w2, #0x6d                  	// #109
   30adc:	cmp	w0, #0x70
   30ae0:	ccmp	w0, w2, #0x4, ne  // ne = any
   30ae4:	b.eq	30b78 <__asan_cplus_demangle_type@@Base+0x2160>  // b.none
   30ae8:	ldr	x0, [x19, #24]
   30aec:	ldrb	w1, [x0]
   30af0:	cmp	w1, #0x5f
   30af4:	b.eq	30b48 <__asan_cplus_demangle_type@@Base+0x2130>  // b.none
   30af8:	mov	w22, #0x0                   	// #0
   30afc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   30b00:	mov	x0, x21
   30b04:	add	x1, x1, #0x920
   30b08:	bl	67f0 <__asan_internal_strcmp@plt>
   30b0c:	cbz	w0, 30c38 <__asan_cplus_demangle_type@@Base+0x2220>
   30b10:	mov	x0, x19
   30b14:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30b18:	mov	x3, x0
   30b1c:	cbz	w22, 30a44 <__asan_cplus_demangle_type@@Base+0x202c>
   30b20:	mov	x2, x3
   30b24:	mov	x0, x19
   30b28:	mov	w1, #0x39                  	// #57
   30b2c:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30b30:	mov	x3, x0
   30b34:	b	30a44 <__asan_cplus_demangle_type@@Base+0x202c>
   30b38:	ldr	x0, [x19, #24]
   30b3c:	ldrb	w1, [x0]
   30b40:	cmp	w1, #0x5f
   30b44:	b.ne	30a38 <__asan_cplus_demangle_type@@Base+0x2020>  // b.any
   30b48:	add	x0, x0, #0x1
   30b4c:	str	x0, [x19, #24]
   30b50:	mov	w1, #0x45                  	// #69
   30b54:	mov	x0, x19
   30b58:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   30b5c:	mov	x3, x0
   30b60:	b	30a44 <__asan_cplus_demangle_type@@Base+0x202c>
   30b64:	ldrb	w0, [x21]
   30b68:	mov	w2, #0x6d                  	// #109
   30b6c:	cmp	w0, #0x70
   30b70:	ccmp	w0, w2, #0x4, ne  // ne = any
   30b74:	b.ne	30af8 <__asan_cplus_demangle_type@@Base+0x20e0>  // b.any
   30b78:	ldrb	w2, [x21, #1]
   30b7c:	cmp	w2, w0
   30b80:	b.eq	30cc8 <__asan_cplus_demangle_type@@Base+0x22b0>  // b.none
   30b84:	cmp	w1, #0x34
   30b88:	b.ne	30af8 <__asan_cplus_demangle_type@@Base+0x20e0>  // b.any
   30b8c:	b	30ae8 <__asan_cplus_demangle_type@@Base+0x20d0>
   30b90:	cbz	x21, 30870 <__asan_cplus_demangle_type@@Base+0x1e58>
   30b94:	ldr	x0, [x20, #8]
   30b98:	ldr	x0, [x0]
   30b9c:	ldrb	w1, [x0, #1]
   30ba0:	cmp	w1, #0x63
   30ba4:	b.eq	30ce8 <__asan_cplus_demangle_type@@Base+0x22d0>  // b.none
   30ba8:	ldrb	w0, [x21]
   30bac:	cmp	w0, #0x66
   30bb0:	b.eq	30d44 <__asan_cplus_demangle_type@@Base+0x232c>  // b.none
   30bb4:	mov	x0, x19
   30bb8:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30bbc:	mov	x22, x0
   30bc0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   30bc4:	mov	x0, x21
   30bc8:	add	x1, x1, #0x838
   30bcc:	bl	67f0 <__asan_internal_strcmp@plt>
   30bd0:	cbnz	w0, 30c58 <__asan_cplus_demangle_type@@Base+0x2240>
   30bd4:	mov	x0, x19
   30bd8:	mov	w1, #0x45                  	// #69
   30bdc:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   30be0:	mov	x21, x0
   30be4:	mov	x3, x21
   30be8:	mov	x2, x22
   30bec:	mov	x0, x19
   30bf0:	mov	w1, #0x39                  	// #57
   30bf4:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30bf8:	mov	x3, x0
   30bfc:	mov	x2, x20
   30c00:	mov	x0, x19
   30c04:	ldp	x19, x20, [sp, #16]
   30c08:	mov	w1, #0x38                  	// #56
   30c0c:	ldp	x21, x22, [sp, #32]
   30c10:	ldp	x29, x30, [sp], #48
   30c14:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   30c18:	mov	x2, x20
   30c1c:	mov	x0, x19
   30c20:	ldp	x19, x20, [sp, #16]
   30c24:	mov	x3, #0x0                   	// #0
   30c28:	ldp	x21, x22, [sp, #32]
   30c2c:	mov	w1, #0x36                  	// #54
   30c30:	ldp	x29, x30, [sp], #48
   30c34:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   30c38:	mov	x0, x19
   30c3c:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   30c40:	mov	x3, x0
   30c44:	b	30b1c <__asan_cplus_demangle_type@@Base+0x2104>
   30c48:	mov	x0, x19
   30c4c:	bl	6420 <__asan_cplus_demangle_type@plt>
   30c50:	mov	x3, x0
   30c54:	b	30a44 <__asan_cplus_demangle_type@@Base+0x202c>
   30c58:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   30c5c:	mov	x0, x21
   30c60:	add	x1, x1, #0xa10
   30c64:	bl	67f0 <__asan_internal_strcmp@plt>
   30c68:	cbz	w0, 30c80 <__asan_cplus_demangle_type@@Base+0x2268>
   30c6c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   30c70:	mov	x0, x21
   30c74:	add	x1, x1, #0xa18
   30c78:	bl	67f0 <__asan_internal_strcmp@plt>
   30c7c:	cbnz	w0, 30d60 <__asan_cplus_demangle_type@@Base+0x2348>
   30c80:	mov	x0, x19
   30c84:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   30c88:	ldr	x1, [x19, #24]
   30c8c:	mov	x21, x0
   30c90:	ldrb	w0, [x1]
   30c94:	cmp	w0, #0x49
   30c98:	b.ne	30be4 <__asan_cplus_demangle_type@@Base+0x21cc>  // b.any
   30c9c:	add	x1, x1, #0x1
   30ca0:	str	x1, [x19, #24]
   30ca4:	mov	x0, x19
   30ca8:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   30cac:	mov	x3, x0
   30cb0:	mov	x2, x21
   30cb4:	mov	x0, x19
   30cb8:	mov	w1, #0x4                   	// #4
   30cbc:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30cc0:	mov	x21, x0
   30cc4:	b	30be4 <__asan_cplus_demangle_type@@Base+0x21cc>
   30cc8:	ldr	x0, [x19, #24]
   30ccc:	mov	w22, #0x1                   	// #1
   30cd0:	ldrb	w2, [x0]
   30cd4:	cmp	w2, #0x5f
   30cd8:	b.ne	30afc <__asan_cplus_demangle_type@@Base+0x20e4>  // b.any
   30cdc:	add	x0, x0, #0x1
   30ce0:	str	x0, [x19, #24]
   30ce4:	b	30b84 <__asan_cplus_demangle_type@@Base+0x216c>
   30ce8:	ldrb	w0, [x0]
   30cec:	sub	w1, w0, #0x63
   30cf0:	sub	w0, w0, #0x72
   30cf4:	and	w1, w1, #0xff
   30cf8:	and	w0, w0, #0xff
   30cfc:	cmp	w1, #0x1
   30d00:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   30d04:	b.hi	30ba8 <__asan_cplus_demangle_type@@Base+0x2190>  // b.pmore
   30d08:	mov	x0, x19
   30d0c:	bl	6420 <__asan_cplus_demangle_type@plt>
   30d10:	mov	x22, x0
   30d14:	b	30bc0 <__asan_cplus_demangle_type@@Base+0x21a8>
   30d18:	mov	x0, x19
   30d1c:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30d20:	mov	x21, x0
   30d24:	mov	x0, x19
   30d28:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30d2c:	mov	x22, x0
   30d30:	mov	x0, x19
   30d34:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30d38:	mov	x3, x0
   30d3c:	cbnz	x0, 30a6c <__asan_cplus_demangle_type@@Base+0x2054>
   30d40:	b	30870 <__asan_cplus_demangle_type@@Base+0x1e58>
   30d44:	mov	x0, x19
   30d48:	bl	2f660 <__asan_cplus_demangle_type@@Base+0xc48>
   30d4c:	mov	x22, x0
   30d50:	b	30bc0 <__asan_cplus_demangle_type@@Base+0x21a8>
   30d54:	mov	x0, x19
   30d58:	bl	2f660 <__asan_cplus_demangle_type@@Base+0xc48>
   30d5c:	b	30d20 <__asan_cplus_demangle_type@@Base+0x2308>
   30d60:	mov	x0, x19
   30d64:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30d68:	mov	x21, x0
   30d6c:	b	30be4 <__asan_cplus_demangle_type@@Base+0x21cc>
   30d70:	ldrb	w0, [x1, #1]
   30d74:	cmp	w0, #0x69
   30d78:	b.ne	30870 <__asan_cplus_demangle_type@@Base+0x1e58>  // b.any
   30d7c:	add	x1, x1, #0x2
   30d80:	str	x1, [x19, #24]
   30d84:	mov	x0, x19
   30d88:	mov	w1, #0x45                  	// #69
   30d8c:	bl	2fe50 <__asan_cplus_demangle_type@@Base+0x1438>
   30d90:	mov	x3, x0
   30d94:	b	30a6c <__asan_cplus_demangle_type@@Base+0x2054>
   30d98:	add	x1, x1, #0x1
   30d9c:	mov	x3, #0x0                   	// #0
   30da0:	str	x1, [x19, #24]
   30da4:	b	30a6c <__asan_cplus_demangle_type@@Base+0x2054>
   30da8:	stp	x29, x30, [sp, #-96]!
   30dac:	cmp	w2, #0x0
   30db0:	mov	x29, sp
   30db4:	stp	x19, x20, [sp, #16]
   30db8:	mov	x19, x0
   30dbc:	mov	w0, #0x1b                  	// #27
   30dc0:	stp	x21, x22, [sp, #32]
   30dc4:	mov	x20, x1
   30dc8:	mov	w22, #0x1c                  	// #28
   30dcc:	ldr	x4, [x19, #24]
   30dd0:	stp	x23, x24, [sp, #48]
   30dd4:	mov	w23, #0x1d                  	// #29
   30dd8:	stp	x25, x26, [sp, #64]
   30ddc:	mov	w25, #0x1e                  	// #30
   30de0:	csel	w25, w25, w0, ne  // ne = any
   30de4:	ldrb	w5, [x4]
   30de8:	mov	w0, #0x1a                  	// #26
   30dec:	csel	w23, w23, w0, ne  // ne = any
   30df0:	mov	w0, #0x19                  	// #25
   30df4:	mov	w24, w2
   30df8:	csel	w22, w22, w0, ne  // ne = any
   30dfc:	mov	x21, x1
   30e00:	mov	x0, x4
   30e04:	mov	w26, #0x1                   	// #1
   30e08:	bl	28888 <__asan_backtrace_create_state@@Base+0x5f0>
   30e0c:	cbz	w0, 30f28 <__asan_cplus_demangle_type@@Base+0x2510>
   30e10:	add	x0, x4, #0x1
   30e14:	str	x0, [x19, #24]
   30e18:	cmp	w5, #0x72
   30e1c:	b.eq	30ee8 <__asan_cplus_demangle_type@@Base+0x24d0>  // b.none
   30e20:	cmp	w5, #0x56
   30e24:	b.eq	30f88 <__asan_cplus_demangle_type@@Base+0x2570>  // b.none
   30e28:	cmp	w5, #0x4b
   30e2c:	b.eq	30fa0 <__asan_cplus_demangle_type@@Base+0x2588>  // b.none
   30e30:	ldrb	w0, [x4, #1]
   30e34:	cbz	w0, 30ec8 <__asan_cplus_demangle_type@@Base+0x24b0>
   30e38:	add	x0, x4, #0x2
   30e3c:	str	x0, [x19, #24]
   30e40:	ldrb	w0, [x4, #1]
   30e44:	cmp	w0, #0x78
   30e48:	b.eq	30fb8 <__asan_cplus_demangle_type@@Base+0x25a0>  // b.none
   30e4c:	and	w1, w0, #0xffffffdf
   30e50:	cmp	w1, #0x4f
   30e54:	and	w1, w1, #0xff
   30e58:	b.ne	30fd0 <__asan_cplus_demangle_type@@Base+0x25b8>  // b.any
   30e5c:	ldr	w2, [x19, #72]
   30e60:	cmp	w0, #0x4f
   30e64:	add	w0, w2, #0x9
   30e68:	str	w0, [x19, #72]
   30e6c:	b.ne	31014 <__asan_cplus_demangle_type@@Base+0x25fc>  // b.any
   30e70:	str	x27, [sp, #80]
   30e74:	mov	x0, x19
   30e78:	ldr	w27, [x19, #76]
   30e7c:	str	w26, [x19, #76]
   30e80:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   30e84:	str	w27, [x19, #76]
   30e88:	mov	x3, x0
   30e8c:	cbz	x0, 3102c <__asan_cplus_demangle_type@@Base+0x2614>
   30e90:	ldr	x0, [x19, #24]
   30e94:	ldrb	w1, [x0]
   30e98:	cmp	w1, #0x45
   30e9c:	b.ne	3102c <__asan_cplus_demangle_type@@Base+0x2614>  // b.any
   30ea0:	add	x0, x0, #0x1
   30ea4:	mov	w1, #0x4f                  	// #79
   30ea8:	ldr	x27, [sp, #80]
   30eac:	str	x0, [x19, #24]
   30eb0:	mov	x2, #0x0                   	// #0
   30eb4:	mov	x0, x19
   30eb8:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30ebc:	str	x0, [x20]
   30ec0:	cbnz	x0, 30f10 <__asan_cplus_demangle_type@@Base+0x24f8>
   30ec4:	nop
   30ec8:	mov	x20, #0x0                   	// #0
   30ecc:	mov	x0, x20
   30ed0:	ldp	x19, x20, [sp, #16]
   30ed4:	ldp	x21, x22, [sp, #32]
   30ed8:	ldp	x23, x24, [sp, #48]
   30edc:	ldp	x25, x26, [sp, #64]
   30ee0:	ldp	x29, x30, [sp], #96
   30ee4:	ret
   30ee8:	ldr	w0, [x19, #72]
   30eec:	mov	w1, w22
   30ef0:	mov	x3, #0x0                   	// #0
   30ef4:	add	w0, w0, #0x9
   30ef8:	str	w0, [x19, #72]
   30efc:	mov	x0, x19
   30f00:	mov	x2, #0x0                   	// #0
   30f04:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   30f08:	str	x0, [x20]
   30f0c:	cbz	x0, 30ec8 <__asan_cplus_demangle_type@@Base+0x24b0>
   30f10:	ldr	x4, [x19, #24]
   30f14:	add	x20, x0, #0x8
   30f18:	mov	x0, x4
   30f1c:	ldrb	w5, [x4]
   30f20:	bl	28888 <__asan_backtrace_create_state@@Base+0x5f0>
   30f24:	cbnz	w0, 30e10 <__asan_cplus_demangle_type@@Base+0x23f8>
   30f28:	cmp	w5, #0x46
   30f2c:	eor	w24, w24, #0x1
   30f30:	cset	w0, eq  // eq = none
   30f34:	tst	w24, w0
   30f38:	b.eq	30ecc <__asan_cplus_demangle_type@@Base+0x24b4>  // b.none
   30f3c:	cmp	x20, x21
   30f40:	b.eq	30ecc <__asan_cplus_demangle_type@@Base+0x24b4>  // b.none
   30f44:	mov	w3, #0x1d                  	// #29
   30f48:	mov	w2, #0x1e                  	// #30
   30f4c:	mov	w1, #0x1c                  	// #28
   30f50:	b	30f68 <__asan_cplus_demangle_type@@Base+0x2550>
   30f54:	cmp	w0, #0x19
   30f58:	b.eq	31024 <__asan_cplus_demangle_type@@Base+0x260c>  // b.none
   30f5c:	add	x21, x21, #0x8
   30f60:	cmp	x20, x21
   30f64:	b.eq	30ecc <__asan_cplus_demangle_type@@Base+0x24b4>  // b.none
   30f68:	ldr	x21, [x21]
   30f6c:	ldr	w0, [x21]
   30f70:	cmp	w0, #0x1a
   30f74:	b.eq	3101c <__asan_cplus_demangle_type@@Base+0x2604>  // b.none
   30f78:	cmp	w0, #0x1b
   30f7c:	b.ne	30f54 <__asan_cplus_demangle_type@@Base+0x253c>  // b.any
   30f80:	str	w2, [x21]
   30f84:	b	30f5c <__asan_cplus_demangle_type@@Base+0x2544>
   30f88:	ldr	w0, [x19, #72]
   30f8c:	mov	w1, w23
   30f90:	mov	x3, #0x0                   	// #0
   30f94:	add	w0, w0, #0x9
   30f98:	str	w0, [x19, #72]
   30f9c:	b	30efc <__asan_cplus_demangle_type@@Base+0x24e4>
   30fa0:	ldr	w0, [x19, #72]
   30fa4:	mov	w1, w25
   30fa8:	mov	x3, #0x0                   	// #0
   30fac:	add	w0, w0, #0x6
   30fb0:	str	w0, [x19, #72]
   30fb4:	b	30efc <__asan_cplus_demangle_type@@Base+0x24e4>
   30fb8:	ldr	w0, [x19, #72]
   30fbc:	mov	x3, #0x0                   	// #0
   30fc0:	mov	w1, #0x4d                  	// #77
   30fc4:	add	w0, w0, #0x11
   30fc8:	str	w0, [x19, #72]
   30fcc:	b	30efc <__asan_cplus_demangle_type@@Base+0x24e4>
   30fd0:	cmp	w0, #0x77
   30fd4:	b.ne	30ec8 <__asan_cplus_demangle_type@@Base+0x24b0>  // b.any
   30fd8:	ldr	w1, [x19, #72]
   30fdc:	mov	x0, x19
   30fe0:	add	w1, w1, #0x6
   30fe4:	str	w1, [x19, #72]
   30fe8:	bl	2f550 <__asan_cplus_demangle_type@@Base+0xb38>
   30fec:	mov	x3, x0
   30ff0:	cbz	x0, 30ec8 <__asan_cplus_demangle_type@@Base+0x24b0>
   30ff4:	ldr	x0, [x19, #24]
   30ff8:	ldrb	w1, [x0]
   30ffc:	cmp	w1, #0x45
   31000:	b.ne	30ec8 <__asan_cplus_demangle_type@@Base+0x24b0>  // b.any
   31004:	add	x0, x0, #0x1
   31008:	mov	w1, #0x50                  	// #80
   3100c:	str	x0, [x19, #24]
   31010:	b	30efc <__asan_cplus_demangle_type@@Base+0x24e4>
   31014:	mov	x3, #0x0                   	// #0
   31018:	b	30efc <__asan_cplus_demangle_type@@Base+0x24e4>
   3101c:	str	w3, [x21]
   31020:	b	30f5c <__asan_cplus_demangle_type@@Base+0x2544>
   31024:	str	w1, [x21]
   31028:	b	30f5c <__asan_cplus_demangle_type@@Base+0x2544>
   3102c:	ldr	x27, [sp, #80]
   31030:	b	30ec8 <__asan_cplus_demangle_type@@Base+0x24b0>
   31034:	nop
   31038:	ldr	x2, [x0, #24]
   3103c:	ldrb	w1, [x2]
   31040:	cmp	w1, #0x4c
   31044:	b.eq	310d0 <__asan_cplus_demangle_type@@Base+0x26b8>  // b.none
   31048:	stp	x29, x30, [sp, #-32]!
   3104c:	mov	x29, sp
   31050:	stp	x19, x20, [sp, #16]
   31054:	mov	x19, x0
   31058:	b.hi	31078 <__asan_cplus_demangle_type@@Base+0x2660>  // b.pmore
   3105c:	sub	w1, w1, #0x49
   31060:	and	w1, w1, #0xff
   31064:	cmp	w1, #0x1
   31068:	b.hi	310c0 <__asan_cplus_demangle_type@@Base+0x26a8>  // b.pmore
   3106c:	ldp	x19, x20, [sp, #16]
   31070:	ldp	x29, x30, [sp], #32
   31074:	b	311a8 <__asan_cplus_demangle_type@@Base+0x2790>
   31078:	cmp	w1, #0x58
   3107c:	b.ne	310c0 <__asan_cplus_demangle_type@@Base+0x26a8>  // b.any
   31080:	add	x2, x2, #0x1
   31084:	ldr	w20, [x0, #76]
   31088:	mov	w1, #0x1                   	// #1
   3108c:	str	x2, [x0, #24]
   31090:	str	w1, [x0, #76]
   31094:	bl	30670 <__asan_cplus_demangle_type@@Base+0x1c58>
   31098:	str	w20, [x19, #76]
   3109c:	ldr	x1, [x19, #24]
   310a0:	ldrb	w2, [x1]
   310a4:	cmp	w2, #0x45
   310a8:	b.ne	310d4 <__asan_cplus_demangle_type@@Base+0x26bc>  // b.any
   310ac:	add	x1, x1, #0x1
   310b0:	str	x1, [x19, #24]
   310b4:	ldp	x19, x20, [sp, #16]
   310b8:	ldp	x29, x30, [sp], #32
   310bc:	ret
   310c0:	mov	x0, x19
   310c4:	ldp	x19, x20, [sp, #16]
   310c8:	ldp	x29, x30, [sp], #32
   310cc:	b	6420 <__asan_cplus_demangle_type@plt>
   310d0:	b	320a8 <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   310d4:	mov	x0, #0x0                   	// #0
   310d8:	b	310b4 <__asan_cplus_demangle_type@@Base+0x269c>
   310dc:	nop
   310e0:	stp	x29, x30, [sp, #-64]!
   310e4:	mov	x29, sp
   310e8:	ldr	x1, [x0, #24]
   310ec:	stp	x19, x20, [sp, #16]
   310f0:	mov	x19, x0
   310f4:	str	x21, [sp, #32]
   310f8:	ldr	x21, [x0, #64]
   310fc:	ldrb	w2, [x1]
   31100:	cmp	w2, #0x45
   31104:	b.eq	31184 <__asan_cplus_demangle_type@@Base+0x276c>  // b.none
   31108:	add	x20, sp, #0x38
   3110c:	str	xzr, [sp, #56]
   31110:	b	31134 <__asan_cplus_demangle_type@@Base+0x271c>
   31114:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   31118:	str	x0, [x20]
   3111c:	add	x20, x0, #0x10
   31120:	cbz	x0, 31150 <__asan_cplus_demangle_type@@Base+0x2738>
   31124:	ldr	x1, [x19, #24]
   31128:	ldrb	w0, [x1]
   3112c:	cmp	w0, #0x45
   31130:	b.eq	31164 <__asan_cplus_demangle_type@@Base+0x274c>  // b.none
   31134:	mov	x0, x19
   31138:	bl	31038 <__asan_cplus_demangle_type@@Base+0x2620>
   3113c:	mov	x3, #0x0                   	// #0
   31140:	mov	x2, x0
   31144:	mov	w1, #0x2f                  	// #47
   31148:	mov	x0, x19
   3114c:	cbnz	x2, 31114 <__asan_cplus_demangle_type@@Base+0x26fc>
   31150:	mov	x0, #0x0                   	// #0
   31154:	ldp	x19, x20, [sp, #16]
   31158:	ldr	x21, [sp, #32]
   3115c:	ldp	x29, x30, [sp], #64
   31160:	ret
   31164:	add	x1, x1, #0x1
   31168:	str	x1, [x19, #24]
   3116c:	str	x21, [x19, #64]
   31170:	ldp	x19, x20, [sp, #16]
   31174:	ldr	x21, [sp, #32]
   31178:	ldr	x0, [sp, #56]
   3117c:	ldp	x29, x30, [sp], #64
   31180:	ret
   31184:	add	x1, x1, #0x1
   31188:	mov	x3, #0x0                   	// #0
   3118c:	ldr	x21, [sp, #32]
   31190:	str	x1, [x0, #24]
   31194:	ldp	x19, x20, [sp, #16]
   31198:	mov	x2, #0x0                   	// #0
   3119c:	ldp	x29, x30, [sp], #64
   311a0:	mov	w1, #0x2f                  	// #47
   311a4:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   311a8:	ldr	x3, [x0, #24]
   311ac:	ldrb	w1, [x3]
   311b0:	sub	w1, w1, #0x49
   311b4:	and	w1, w1, #0xff
   311b8:	cmp	w1, #0x1
   311bc:	b.hi	311cc <__asan_cplus_demangle_type@@Base+0x27b4>  // b.pmore
   311c0:	add	x3, x3, #0x1
   311c4:	str	x3, [x0, #24]
   311c8:	b	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   311cc:	mov	x0, #0x0                   	// #0
   311d0:	ret
   311d4:	nop
   311d8:	stp	x29, x30, [sp, #-112]!
   311dc:	mov	x29, sp
   311e0:	ldr	x2, [x0, #24]
   311e4:	stp	x19, x20, [sp, #16]
   311e8:	ldrb	w1, [x2]
   311ec:	cmp	w1, #0x55
   311f0:	b.eq	313b0 <__asan_cplus_demangle_type@@Base+0x2998>  // b.none
   311f4:	mov	x19, x0
   311f8:	b.hi	31244 <__asan_cplus_demangle_type@@Base+0x282c>  // b.pmore
   311fc:	cmp	w1, #0x4e
   31200:	b.eq	31420 <__asan_cplus_demangle_type@@Base+0x2a08>  // b.none
   31204:	cmp	w1, #0x53
   31208:	b.ne	313c8 <__asan_cplus_demangle_type@@Base+0x29b0>  // b.any
   3120c:	ldrb	w1, [x2, #1]
   31210:	cmp	w1, #0x74
   31214:	b.eq	312d4 <__asan_cplus_demangle_type@@Base+0x28bc>  // b.none
   31218:	mov	w1, #0x0                   	// #0
   3121c:	bl	2e700 <__asan_cplus_demangle_fill_name@@Base+0x240>
   31220:	ldr	x1, [x19, #24]
   31224:	mov	x20, x0
   31228:	ldrb	w0, [x1]
   3122c:	cmp	w0, #0x49
   31230:	b.eq	31368 <__asan_cplus_demangle_type@@Base+0x2950>  // b.none
   31234:	mov	x0, x20
   31238:	ldp	x19, x20, [sp, #16]
   3123c:	ldp	x29, x30, [sp], #112
   31240:	ret
   31244:	cmp	w1, #0x5a
   31248:	b.ne	313c8 <__asan_cplus_demangle_type@@Base+0x29b0>  // b.any
   3124c:	add	x2, x2, #0x1
   31250:	str	x2, [x0, #24]
   31254:	mov	w1, #0x0                   	// #0
   31258:	bl	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   3125c:	mov	x20, x0
   31260:	cbz	x0, 313a8 <__asan_cplus_demangle_type@@Base+0x2990>
   31264:	ldr	x0, [x19, #24]
   31268:	ldrb	w1, [x0]
   3126c:	cmp	w1, #0x45
   31270:	b.ne	313a8 <__asan_cplus_demangle_type@@Base+0x2990>  // b.any
   31274:	add	x1, x0, #0x1
   31278:	str	x1, [x19, #24]
   3127c:	ldrb	w1, [x0, #1]
   31280:	cmp	w1, #0x73
   31284:	b.eq	316d4 <__asan_cplus_demangle_type@@Base+0x2cbc>  // b.none
   31288:	cmp	w1, #0x64
   3128c:	b.eq	315ac <__asan_cplus_demangle_type@@Base+0x2b94>  // b.none
   31290:	mov	x0, x19
   31294:	bl	311d8 <__asan_cplus_demangle_type@@Base+0x27c0>
   31298:	mov	x3, x0
   3129c:	cbz	x0, 312b0 <__asan_cplus_demangle_type@@Base+0x2898>
   312a0:	ldr	w0, [x0]
   312a4:	sub	w0, w0, #0x46
   312a8:	tst	w0, #0xfffffffd
   312ac:	b.ne	31704 <__asan_cplus_demangle_type@@Base+0x2cec>  // b.any
   312b0:	ldr	w0, [x20]
   312b4:	cmp	w0, #0x3
   312b8:	b.eq	3169c <__asan_cplus_demangle_type@@Base+0x2c84>  // b.none
   312bc:	mov	x2, x20
   312c0:	mov	x0, x19
   312c4:	mov	w1, #0x2                   	// #2
   312c8:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   312cc:	mov	x20, x0
   312d0:	b	31234 <__asan_cplus_demangle_type@@Base+0x281c>
   312d4:	add	x2, x2, #0x2
   312d8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   312dc:	add	x1, x1, #0xa30
   312e0:	str	x2, [x0, #24]
   312e4:	mov	w2, #0x3                   	// #3
   312e8:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   312ec:	mov	x20, x0
   312f0:	mov	x0, x19
   312f4:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   312f8:	mov	x2, x20
   312fc:	mov	x3, x0
   31300:	mov	w1, #0x1                   	// #1
   31304:	mov	x0, x19
   31308:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   3130c:	mov	x20, x0
   31310:	ldr	w0, [x19, #72]
   31314:	ldr	x1, [x19, #24]
   31318:	add	w0, w0, #0x3
   3131c:	str	w0, [x19, #72]
   31320:	ldrb	w0, [x1]
   31324:	cmp	w0, #0x49
   31328:	b.ne	31234 <__asan_cplus_demangle_type@@Base+0x281c>  // b.any
   3132c:	cbz	x20, 313a8 <__asan_cplus_demangle_type@@Base+0x2990>
   31330:	ldp	w0, w2, [x19, #56]
   31334:	cmp	w0, w2
   31338:	b.ge	313a8 <__asan_cplus_demangle_type@@Base+0x2990>  // b.tcont
   3133c:	ldr	x4, [x19, #48]
   31340:	add	w2, w0, #0x1
   31344:	mov	x3, #0x0                   	// #0
   31348:	str	x20, [x4, w0, sxtw #3]
   3134c:	str	w2, [x19, #56]
   31350:	ldrb	w0, [x1]
   31354:	sub	w0, w0, #0x49
   31358:	and	w0, w0, #0xff
   3135c:	cmp	w0, #0x1
   31360:	b.hi	3137c <__asan_cplus_demangle_type@@Base+0x2964>  // b.pmore
   31364:	nop
   31368:	add	x1, x1, #0x1
   3136c:	str	x1, [x19, #24]
   31370:	mov	x0, x19
   31374:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   31378:	mov	x3, x0
   3137c:	mov	x2, x20
   31380:	mov	x0, x19
   31384:	mov	w1, #0x4                   	// #4
   31388:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   3138c:	mov	x20, x0
   31390:	b	31234 <__asan_cplus_demangle_type@@Base+0x281c>
   31394:	mov	x0, x19
   31398:	bl	288e0 <__asan_backtrace_create_state@@Base+0x648>
   3139c:	cbnz	w0, 315e8 <__asan_cplus_demangle_type@@Base+0x2bd0>
   313a0:	ldp	x21, x22, [sp, #32]
   313a4:	nop
   313a8:	mov	x20, #0x0                   	// #0
   313ac:	b	31234 <__asan_cplus_demangle_type@@Base+0x281c>
   313b0:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   313b4:	mov	x20, x0
   313b8:	mov	x0, x20
   313bc:	ldp	x19, x20, [sp, #16]
   313c0:	ldp	x29, x30, [sp], #112
   313c4:	ret
   313c8:	mov	x0, x19
   313cc:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   313d0:	ldr	x1, [x19, #24]
   313d4:	mov	x20, x0
   313d8:	ldrb	w0, [x1]
   313dc:	cmp	w0, #0x49
   313e0:	b.ne	31234 <__asan_cplus_demangle_type@@Base+0x281c>  // b.any
   313e4:	cbz	x20, 313a8 <__asan_cplus_demangle_type@@Base+0x2990>
   313e8:	ldp	w2, w0, [x19, #56]
   313ec:	cmp	w2, w0
   313f0:	b.ge	313a8 <__asan_cplus_demangle_type@@Base+0x2990>  // b.tcont
   313f4:	ldr	x4, [x19, #48]
   313f8:	add	w0, w2, #0x1
   313fc:	mov	x3, #0x0                   	// #0
   31400:	str	x20, [x4, w2, sxtw #3]
   31404:	str	w0, [x19, #56]
   31408:	ldrb	w2, [x1]
   3140c:	sub	w2, w2, #0x49
   31410:	and	w2, w2, #0xff
   31414:	cmp	w2, #0x1
   31418:	b.ls	31368 <__asan_cplus_demangle_type@@Base+0x2950>  // b.plast
   3141c:	b	3137c <__asan_cplus_demangle_type@@Base+0x2964>
   31420:	stp	x21, x22, [sp, #32]
   31424:	add	x2, x2, #0x1
   31428:	add	x1, sp, #0x68
   3142c:	str	x2, [x0, #24]
   31430:	mov	w2, #0x1                   	// #1
   31434:	bl	30da8 <__asan_cplus_demangle_type@@Base+0x2390>
   31438:	mov	x22, x0
   3143c:	cbz	x0, 31690 <__asan_cplus_demangle_type@@Base+0x2c78>
   31440:	mov	x1, #0x0                   	// #0
   31444:	mov	x0, x19
   31448:	stp	x23, x24, [sp, #48]
   3144c:	bl	283b8 <__asan_backtrace_create_state@@Base+0x120>
   31450:	mov	x23, x0
   31454:	ldr	x1, [x19, #24]
   31458:	ldrb	w20, [x1]
   3145c:	cbz	w20, 31514 <__asan_cplus_demangle_type@@Base+0x2afc>
   31460:	mov	x21, #0x0                   	// #0
   31464:	mov	w24, #0x4c                  	// #76
   31468:	stp	x25, x26, [sp, #64]
   3146c:	mov	w25, #0x55                  	// #85
   31470:	cmp	w20, #0x44
   31474:	b.eq	31528 <__asan_cplus_demangle_type@@Base+0x2b10>  // b.none
   31478:	sub	w2, w20, #0x30
   3147c:	sub	w0, w20, #0x61
   31480:	and	w2, w2, #0xff
   31484:	and	w0, w0, #0xff
   31488:	cmp	w2, #0x9
   3148c:	mov	x26, x21
   31490:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
   31494:	b.ls	314a8 <__asan_cplus_demangle_type@@Base+0x2a90>  // b.plast
   31498:	cmp	w20, #0x43
   3149c:	ccmp	w20, w25, #0x4, ne  // ne = any
   314a0:	ccmp	w20, w24, #0x4, ne  // ne = any
   314a4:	b.ne	31574 <__asan_cplus_demangle_type@@Base+0x2b5c>  // b.any
   314a8:	mov	x0, x19
   314ac:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   314b0:	mov	x21, x0
   314b4:	cbz	x26, 314d0 <__asan_cplus_demangle_type@@Base+0x2ab8>
   314b8:	mov	w1, #0x1                   	// #1
   314bc:	mov	x3, x21
   314c0:	mov	x2, x26
   314c4:	mov	x0, x19
   314c8:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   314cc:	mov	x21, x0
   314d0:	cmp	w20, #0x53
   314d4:	ldr	x1, [x19, #24]
   314d8:	b.eq	31508 <__asan_cplus_demangle_type@@Base+0x2af0>  // b.none
   314dc:	ldrb	w20, [x1]
   314e0:	cmp	w20, #0x45
   314e4:	b.eq	3155c <__asan_cplus_demangle_type@@Base+0x2b44>  // b.none
   314e8:	cbz	x21, 31510 <__asan_cplus_demangle_type@@Base+0x2af8>
   314ec:	ldp	w0, w2, [x19, #56]
   314f0:	cmp	w0, w2
   314f4:	b.ge	31510 <__asan_cplus_demangle_type@@Base+0x2af8>  // b.tcont
   314f8:	ldr	x3, [x19, #48]
   314fc:	add	w2, w0, #0x1
   31500:	str	x21, [x3, w0, sxtw #3]
   31504:	str	w2, [x19, #56]
   31508:	ldrb	w20, [x1]
   3150c:	cbnz	w20, 31470 <__asan_cplus_demangle_type@@Base+0x2a58>
   31510:	ldp	x25, x26, [sp, #64]
   31514:	mov	x20, #0x0                   	// #0
   31518:	ldp	x23, x24, [sp, #48]
   3151c:	str	xzr, [x22]
   31520:	ldp	x21, x22, [sp, #32]
   31524:	b	31234 <__asan_cplus_demangle_type@@Base+0x281c>
   31528:	ldrb	w0, [x1, #1]
   3152c:	and	w0, w0, #0xffffffdf
   31530:	and	w0, w0, #0xff
   31534:	cmp	w0, #0x54
   31538:	mov	x0, x19
   3153c:	b.ne	31564 <__asan_cplus_demangle_type@@Base+0x2b4c>  // b.any
   31540:	mov	x26, x21
   31544:	bl	6420 <__asan_cplus_demangle_type@plt>
   31548:	mov	x21, x0
   3154c:	mov	w1, #0x1                   	// #1
   31550:	cbnz	x26, 314bc <__asan_cplus_demangle_type@@Base+0x2aa4>
   31554:	ldr	x1, [x19, #24]
   31558:	b	314dc <__asan_cplus_demangle_type@@Base+0x2ac4>
   3155c:	mov	x26, x21
   31560:	b	31498 <__asan_cplus_demangle_type@@Base+0x2a80>
   31564:	mov	x26, x21
   31568:	bl	2f838 <__asan_cplus_demangle_type@@Base+0xe20>
   3156c:	mov	x21, x0
   31570:	b	3154c <__asan_cplus_demangle_type@@Base+0x2b34>
   31574:	cmp	w20, #0x53
   31578:	b.eq	31628 <__asan_cplus_demangle_type@@Base+0x2c10>  // b.none
   3157c:	cmp	w20, #0x49
   31580:	b.eq	316b4 <__asan_cplus_demangle_type@@Base+0x2c9c>  // b.none
   31584:	cmp	w20, #0x54
   31588:	b.eq	31720 <__asan_cplus_demangle_type@@Base+0x2d08>  // b.none
   3158c:	cmp	w20, #0x45
   31590:	b.eq	31644 <__asan_cplus_demangle_type@@Base+0x2c2c>  // b.none
   31594:	cmp	w20, #0x4d
   31598:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   3159c:	b.eq	31510 <__asan_cplus_demangle_type@@Base+0x2af8>  // b.none
   315a0:	add	x1, x1, #0x1
   315a4:	str	x1, [x19, #24]
   315a8:	b	31508 <__asan_cplus_demangle_type@@Base+0x2af0>
   315ac:	stp	x21, x22, [sp, #32]
   315b0:	add	x0, x0, #0x2
   315b4:	str	x0, [x19, #24]
   315b8:	mov	x0, x19
   315bc:	bl	286e8 <__asan_backtrace_create_state@@Base+0x450>
   315c0:	mov	w21, w0
   315c4:	tbnz	w0, #31, 313a0 <__asan_cplus_demangle_type@@Base+0x2988>
   315c8:	mov	x0, x19
   315cc:	bl	311d8 <__asan_cplus_demangle_type@@Base+0x27c0>
   315d0:	mov	x11, x0
   315d4:	cbz	x0, 315e8 <__asan_cplus_demangle_type@@Base+0x2bd0>
   315d8:	ldr	w0, [x0]
   315dc:	sub	w0, w0, #0x46
   315e0:	tst	w0, #0xfffffffd
   315e4:	b.ne	31394 <__asan_cplus_demangle_type@@Base+0x297c>  // b.any
   315e8:	ldp	w1, w0, [x19, #40]
   315ec:	cmp	w1, w0
   315f0:	b.ge	31730 <__asan_cplus_demangle_type@@Base+0x2d18>  // b.tcont
   315f4:	mov	w2, #0x18                  	// #24
   315f8:	add	w4, w1, #0x1
   315fc:	ldr	x0, [x19, #32]
   31600:	smull	x1, w1, w2
   31604:	mov	w2, #0x47                  	// #71
   31608:	add	x3, x0, x1
   3160c:	str	wzr, [x3, #4]
   31610:	str	w4, [x19, #40]
   31614:	str	w2, [x0, x1]
   31618:	str	x11, [x3, #8]
   3161c:	str	w21, [x3, #16]
   31620:	ldp	x21, x22, [sp, #32]
   31624:	b	312b0 <__asan_cplus_demangle_type@@Base+0x2898>
   31628:	mov	x0, x19
   3162c:	mov	w1, #0x1                   	// #1
   31630:	bl	2e700 <__asan_cplus_demangle_fill_name@@Base+0x240>
   31634:	mov	x21, x0
   31638:	cbnz	x26, 314b8 <__asan_cplus_demangle_type@@Base+0x2aa0>
   3163c:	ldr	x1, [x19, #24]
   31640:	b	31508 <__asan_cplus_demangle_type@@Base+0x2af0>
   31644:	str	x21, [x22]
   31648:	cbz	x21, 31688 <__asan_cplus_demangle_type@@Base+0x2c70>
   3164c:	cbz	x23, 3165c <__asan_cplus_demangle_type@@Base+0x2c44>
   31650:	ldr	x0, [sp, #104]
   31654:	str	x0, [x23, #8]
   31658:	str	x23, [sp, #104]
   3165c:	ldr	x0, [x19, #24]
   31660:	ldrb	w1, [x0]
   31664:	cmp	w1, #0x45
   31668:	b.ne	31688 <__asan_cplus_demangle_type@@Base+0x2c70>  // b.any
   3166c:	add	x0, x0, #0x1
   31670:	ldp	x21, x22, [sp, #32]
   31674:	ldp	x23, x24, [sp, #48]
   31678:	ldp	x25, x26, [sp, #64]
   3167c:	str	x0, [x19, #24]
   31680:	ldr	x20, [sp, #104]
   31684:	b	31234 <__asan_cplus_demangle_type@@Base+0x281c>
   31688:	ldp	x23, x24, [sp, #48]
   3168c:	ldp	x25, x26, [sp, #64]
   31690:	mov	x20, #0x0                   	// #0
   31694:	ldp	x21, x22, [sp, #32]
   31698:	b	31234 <__asan_cplus_demangle_type@@Base+0x281c>
   3169c:	ldr	x0, [x20, #16]
   316a0:	ldr	w1, [x0]
   316a4:	cmp	w1, #0x29
   316a8:	b.ne	312bc <__asan_cplus_demangle_type@@Base+0x28a4>  // b.any
   316ac:	str	xzr, [x0, #8]
   316b0:	b	312bc <__asan_cplus_demangle_type@@Base+0x28a4>
   316b4:	cbz	x21, 31510 <__asan_cplus_demangle_type@@Base+0x2af8>
   316b8:	add	x1, x1, #0x1
   316bc:	str	x1, [x19, #24]
   316c0:	mov	x0, x19
   316c4:	bl	310e0 <__asan_cplus_demangle_type@@Base+0x26c8>
   316c8:	mov	x21, x0
   316cc:	mov	w1, #0x4                   	// #4
   316d0:	b	314bc <__asan_cplus_demangle_type@@Base+0x2aa4>
   316d4:	add	x0, x0, #0x2
   316d8:	str	x0, [x19, #24]
   316dc:	mov	x0, x19
   316e0:	bl	288e0 <__asan_backtrace_create_state@@Base+0x648>
   316e4:	cbz	w0, 313a8 <__asan_cplus_demangle_type@@Base+0x2990>
   316e8:	mov	x0, x19
   316ec:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   316f0:	mov	w2, #0xe                   	// #14
   316f4:	add	x1, x1, #0xa20
   316f8:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   316fc:	mov	x3, x0
   31700:	b	312b0 <__asan_cplus_demangle_type@@Base+0x2898>
   31704:	mov	x0, x19
   31708:	str	x3, [sp, #88]
   3170c:	bl	288e0 <__asan_backtrace_create_state@@Base+0x648>
   31710:	ldr	x3, [sp, #88]
   31714:	cbnz	w0, 312b0 <__asan_cplus_demangle_type@@Base+0x2898>
   31718:	mov	x20, #0x0                   	// #0
   3171c:	b	31234 <__asan_cplus_demangle_type@@Base+0x281c>
   31720:	mov	x0, x19
   31724:	bl	28760 <__asan_backtrace_create_state@@Base+0x4c8>
   31728:	mov	x21, x0
   3172c:	b	3154c <__asan_cplus_demangle_type@@Base+0x2b34>
   31730:	mov	x3, #0x0                   	// #0
   31734:	ldp	x21, x22, [sp, #32]
   31738:	b	312b0 <__asan_cplus_demangle_type@@Base+0x2898>
   3173c:	nop
   31740:	stp	x29, x30, [sp, #-80]!
   31744:	mov	w3, #0x54                  	// #84
   31748:	mov	x29, sp
   3174c:	ldr	x2, [x0, #24]
   31750:	stp	x19, x20, [sp, #16]
   31754:	mov	x19, x0
   31758:	stp	x21, x22, [sp, #32]
   3175c:	mov	w21, w1
   31760:	ldrb	w1, [x2]
   31764:	cmp	w1, #0x47
   31768:	ccmp	w1, w3, #0x4, ne  // ne = any
   3176c:	b.ne	317f8 <__asan_cplus_demangle_type@@Base+0x2de0>  // b.any
   31770:	ldr	w3, [x0, #72]
   31774:	add	w1, w3, #0x14
   31778:	str	w1, [x0, #72]
   3177c:	ldrb	w1, [x2]
   31780:	cmp	w1, #0x54
   31784:	b.eq	31990 <__asan_cplus_demangle_type@@Base+0x2f78>  // b.none
   31788:	cmp	w1, #0x47
   3178c:	b.ne	31978 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   31790:	add	x1, x2, #0x1
   31794:	str	x1, [x0, #24]
   31798:	ldrb	w1, [x2, #1]
   3179c:	cbz	w1, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   317a0:	add	x1, x2, #0x2
   317a4:	str	x1, [x0, #24]
   317a8:	ldrb	w1, [x2, #1]
   317ac:	cmp	w1, #0x54
   317b0:	b.eq	31cf4 <__asan_cplus_demangle_type@@Base+0x32dc>  // b.none
   317b4:	b.hi	318ec <__asan_cplus_demangle_type@@Base+0x2ed4>  // b.pmore
   317b8:	cmp	w1, #0x41
   317bc:	b.eq	31ccc <__asan_cplus_demangle_type@@Base+0x32b4>  // b.none
   317c0:	cmp	w1, #0x52
   317c4:	b.ne	31978 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   317c8:	bl	311d8 <__asan_cplus_demangle_type@@Base+0x27c0>
   317cc:	mov	x11, x0
   317d0:	mov	x0, x19
   317d4:	bl	28680 <__asan_backtrace_create_state@@Base+0x3e8>
   317d8:	mov	x3, x0
   317dc:	mov	x0, x19
   317e0:	mov	x2, x11
   317e4:	ldp	x19, x20, [sp, #16]
   317e8:	mov	w1, #0x16                  	// #22
   317ec:	ldp	x21, x22, [sp, #32]
   317f0:	ldp	x29, x30, [sp], #80
   317f4:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   317f8:	bl	311d8 <__asan_cplus_demangle_type@@Base+0x27c0>
   317fc:	mov	x20, x0
   31800:	cbz	x0, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   31804:	cbz	w21, 31854 <__asan_cplus_demangle_type@@Base+0x2e3c>
   31808:	ldr	w0, [x19, #16]
   3180c:	tbnz	w0, #0, 31854 <__asan_cplus_demangle_type@@Base+0x2e3c>
   31810:	mov	x1, #0x1f                  	// #31
   31814:	mov	x2, #0x1                   	// #1
   31818:	movk	x1, #0x1a, lsl #48
   3181c:	ldr	w3, [x20]
   31820:	sub	w0, w3, #0x1c
   31824:	cmp	w0, #0x34
   31828:	b.hi	31838 <__asan_cplus_demangle_type@@Base+0x2e20>  // b.pmore
   3182c:	lsl	x0, x2, x0
   31830:	tst	x0, x1
   31834:	b.ne	31b30 <__asan_cplus_demangle_type@@Base+0x3118>  // b.any
   31838:	cmp	w3, #0x2
   3183c:	b.eq	31b38 <__asan_cplus_demangle_type@@Base+0x3120>  // b.none
   31840:	mov	x0, x20
   31844:	ldp	x19, x20, [sp, #16]
   31848:	ldp	x21, x22, [sp, #32]
   3184c:	ldp	x29, x30, [sp], #80
   31850:	ret
   31854:	ldr	x0, [x19, #24]
   31858:	ldrb	w0, [x0]
   3185c:	cmp	w0, #0x45
   31860:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   31864:	b.eq	31840 <__asan_cplus_demangle_type@@Base+0x2e28>  // b.none
   31868:	mov	x1, #0x1f                  	// #31
   3186c:	mov	x4, x20
   31870:	mov	x2, #0x1                   	// #1
   31874:	movk	x1, #0x1a, lsl #48
   31878:	ldr	w3, [x4]
   3187c:	cmp	w3, #0x4
   31880:	b.eq	31b80 <__asan_cplus_demangle_type@@Base+0x3168>  // b.none
   31884:	sub	w0, w3, #0x1c
   31888:	b.hi	319f8 <__asan_cplus_demangle_type@@Base+0x2fe0>  // b.pmore
   3188c:	cmp	w3, #0x2
   31890:	b.ne	3189c <__asan_cplus_demangle_type@@Base+0x2e84>  // b.any
   31894:	ldr	x4, [x4, #16]
   31898:	cbnz	x4, 31878 <__asan_cplus_demangle_type@@Base+0x2e60>
   3189c:	mov	w1, #0x0                   	// #0
   318a0:	mov	x0, x19
   318a4:	bl	2fce0 <__asan_cplus_demangle_type@@Base+0x12c8>
   318a8:	mov	x3, x0
   318ac:	cbz	x0, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   318b0:	cbnz	w21, 318d0 <__asan_cplus_demangle_type@@Base+0x2eb8>
   318b4:	ldr	w0, [x20]
   318b8:	cmp	w0, #0x2
   318bc:	b.ne	318d0 <__asan_cplus_demangle_type@@Base+0x2eb8>  // b.any
   318c0:	ldr	w0, [x3]
   318c4:	cmp	w0, #0x29
   318c8:	b.ne	318d0 <__asan_cplus_demangle_type@@Base+0x2eb8>  // b.any
   318cc:	str	xzr, [x3, #8]
   318d0:	mov	x2, x20
   318d4:	mov	x0, x19
   318d8:	ldp	x19, x20, [sp, #16]
   318dc:	mov	w1, #0x3                   	// #3
   318e0:	ldp	x21, x22, [sp, #32]
   318e4:	ldp	x29, x30, [sp], #80
   318e8:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   318ec:	cmp	w1, #0x56
   318f0:	b.eq	31ca8 <__asan_cplus_demangle_type@@Base+0x3290>  // b.none
   318f4:	cmp	w1, #0x72
   318f8:	b.ne	31978 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   318fc:	add	x0, x0, #0x18
   31900:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   31904:	cmp	w0, #0x1
   31908:	b.le	31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   3190c:	ldr	x1, [x19, #24]
   31910:	ldrb	w2, [x1]
   31914:	cbz	w2, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   31918:	add	x8, x1, #0x1
   3191c:	str	x8, [x19, #24]
   31920:	ldrb	w1, [x1]
   31924:	cmp	w1, #0x5f
   31928:	b.ne	31978 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   3192c:	sub	w21, w0, #0x1
   31930:	mov	w22, #0x41                  	// #65
   31934:	stp	x23, x24, [sp, #48]
   31938:	mov	w23, #0x18                  	// #24
   3193c:	str	x25, [sp, #64]
   31940:	mov	x25, #0x0                   	// #0
   31944:	ldrb	w0, [x8]
   31948:	cbz	w0, 31970 <__asan_cplus_demangle_type@@Base+0x2f58>
   3194c:	cmp	w0, #0x24
   31950:	b.ne	31c50 <__asan_cplus_demangle_type@@Base+0x3238>  // b.any
   31954:	ldrb	w0, [x8, #1]
   31958:	cmp	w0, #0x53
   3195c:	b.eq	31d44 <__asan_cplus_demangle_type@@Base+0x332c>  // b.none
   31960:	cmp	w0, #0x5f
   31964:	b.eq	31bc4 <__asan_cplus_demangle_type@@Base+0x31ac>  // b.none
   31968:	cmp	w0, #0x24
   3196c:	b.eq	31bc8 <__asan_cplus_demangle_type@@Base+0x31b0>  // b.none
   31970:	ldp	x23, x24, [sp, #48]
   31974:	ldr	x25, [sp, #64]
   31978:	mov	x20, #0x0                   	// #0
   3197c:	mov	x0, x20
   31980:	ldp	x19, x20, [sp, #16]
   31984:	ldp	x21, x22, [sp, #32]
   31988:	ldp	x29, x30, [sp], #80
   3198c:	ret
   31990:	add	x1, x2, #0x1
   31994:	str	x1, [x0, #24]
   31998:	ldrb	w1, [x2, #1]
   3199c:	cbz	w1, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   319a0:	add	x1, x2, #0x2
   319a4:	str	x1, [x0, #24]
   319a8:	ldrb	w1, [x2, #1]
   319ac:	cmp	w1, #0x53
   319b0:	b.eq	31e9c <__asan_cplus_demangle_type@@Base+0x3484>  // b.none
   319b4:	b.hi	31a78 <__asan_cplus_demangle_type@@Base+0x3060>  // b.pmore
   319b8:	cmp	w1, #0x48
   319bc:	b.eq	31e78 <__asan_cplus_demangle_type@@Base+0x3460>  // b.none
   319c0:	b.hi	31a44 <__asan_cplus_demangle_type@@Base+0x302c>  // b.pmore
   319c4:	cmp	w1, #0x43
   319c8:	b.eq	31e18 <__asan_cplus_demangle_type@@Base+0x3400>  // b.none
   319cc:	cmp	w1, #0x46
   319d0:	b.ne	31a18 <__asan_cplus_demangle_type@@Base+0x3000>  // b.any
   319d4:	bl	6420 <__asan_cplus_demangle_type@plt>
   319d8:	mov	x2, x0
   319dc:	mov	x0, x19
   319e0:	mov	x3, #0x0                   	// #0
   319e4:	ldp	x19, x20, [sp, #16]
   319e8:	mov	w1, #0xe                   	// #14
   319ec:	ldp	x21, x22, [sp, #32]
   319f0:	ldp	x29, x30, [sp], #80
   319f4:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   319f8:	cmp	w0, #0x34
   319fc:	b.hi	3189c <__asan_cplus_demangle_type@@Base+0x2e84>  // b.pmore
   31a00:	lsl	x0, x2, x0
   31a04:	tst	x0, x1
   31a08:	b.eq	3189c <__asan_cplus_demangle_type@@Base+0x2e84>  // b.none
   31a0c:	ldr	x4, [x4, #8]
   31a10:	cbnz	x4, 31878 <__asan_cplus_demangle_type@@Base+0x2e60>
   31a14:	b	3189c <__asan_cplus_demangle_type@@Base+0x2e84>
   31a18:	cmp	w1, #0x41
   31a1c:	b.ne	31978 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   31a20:	bl	31038 <__asan_cplus_demangle_type@@Base+0x2620>
   31a24:	mov	x2, x0
   31a28:	mov	x0, x19
   31a2c:	mov	x3, #0x0                   	// #0
   31a30:	ldp	x19, x20, [sp, #16]
   31a34:	mov	w1, #0x30                  	// #48
   31a38:	ldp	x21, x22, [sp, #32]
   31a3c:	ldp	x29, x30, [sp], #80
   31a40:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31a44:	cmp	w1, #0x49
   31a48:	b.eq	31d94 <__asan_cplus_demangle_type@@Base+0x337c>  // b.none
   31a4c:	cmp	w1, #0x4a
   31a50:	b.ne	31978 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   31a54:	bl	6420 <__asan_cplus_demangle_type@plt>
   31a58:	mov	x2, x0
   31a5c:	mov	x0, x19
   31a60:	mov	x3, #0x0                   	// #0
   31a64:	ldp	x19, x20, [sp, #16]
   31a68:	mov	w1, #0x12                  	// #18
   31a6c:	ldp	x21, x22, [sp, #32]
   31a70:	ldp	x29, x30, [sp], #80
   31a74:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31a78:	cmp	w1, #0x63
   31a7c:	b.eq	31d4c <__asan_cplus_demangle_type@@Base+0x3334>  // b.none
   31a80:	b.hi	31ab8 <__asan_cplus_demangle_type@@Base+0x30a0>  // b.pmore
   31a84:	cmp	w1, #0x56
   31a88:	b.eq	31dec <__asan_cplus_demangle_type@@Base+0x33d4>  // b.none
   31a8c:	cmp	w1, #0x57
   31a90:	b.ne	31afc <__asan_cplus_demangle_type@@Base+0x30e4>  // b.any
   31a94:	bl	311d8 <__asan_cplus_demangle_type@@Base+0x27c0>
   31a98:	mov	x2, x0
   31a9c:	mov	x0, x19
   31aa0:	mov	x3, #0x0                   	// #0
   31aa4:	ldp	x19, x20, [sp, #16]
   31aa8:	mov	w1, #0x15                  	// #21
   31aac:	ldp	x21, x22, [sp, #32]
   31ab0:	ldp	x29, x30, [sp], #80
   31ab4:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31ab8:	cmp	w1, #0x68
   31abc:	b.eq	31db8 <__asan_cplus_demangle_type@@Base+0x33a0>  // b.none
   31ac0:	cmp	w1, #0x76
   31ac4:	b.ne	31978 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   31ac8:	bl	287e0 <__asan_backtrace_create_state@@Base+0x548>
   31acc:	cbz	w0, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   31ad0:	mov	x0, x19
   31ad4:	mov	w1, #0x0                   	// #0
   31ad8:	bl	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   31adc:	mov	x2, x0
   31ae0:	mov	x0, x19
   31ae4:	mov	x3, #0x0                   	// #0
   31ae8:	ldp	x19, x20, [sp, #16]
   31aec:	mov	w1, #0x10                  	// #16
   31af0:	ldp	x21, x22, [sp, #32]
   31af4:	ldp	x29, x30, [sp], #80
   31af8:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31afc:	cmp	w1, #0x54
   31b00:	b.ne	31978 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   31b04:	add	w3, w3, #0xa
   31b08:	str	w3, [x0, #72]
   31b0c:	bl	6420 <__asan_cplus_demangle_type@plt>
   31b10:	mov	x2, x0
   31b14:	mov	x0, x19
   31b18:	mov	x3, #0x0                   	// #0
   31b1c:	ldp	x19, x20, [sp, #16]
   31b20:	mov	w1, #0xa                   	// #10
   31b24:	ldp	x21, x22, [sp, #32]
   31b28:	ldp	x29, x30, [sp], #80
   31b2c:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31b30:	ldr	x20, [x20, #8]
   31b34:	b	3181c <__asan_cplus_demangle_type@@Base+0x2e04>
   31b38:	ldr	x3, [x20, #16]
   31b3c:	mov	x1, #0x1f                  	// #31
   31b40:	mov	x2, #0x1                   	// #1
   31b44:	movk	x1, #0x1a, lsl #48
   31b48:	ldr	w0, [x3]
   31b4c:	sub	w0, w0, #0x1c
   31b50:	cmp	w0, #0x34
   31b54:	b.hi	31840 <__asan_cplus_demangle_type@@Base+0x2e28>  // b.pmore
   31b58:	lsl	x0, x2, x0
   31b5c:	tst	x0, x1
   31b60:	b.eq	31840 <__asan_cplus_demangle_type@@Base+0x2e28>  // b.none
   31b64:	ldr	x3, [x3, #8]
   31b68:	str	x3, [x20, #16]
   31b6c:	ldr	w0, [x3]
   31b70:	sub	w0, w0, #0x1c
   31b74:	cmp	w0, #0x34
   31b78:	b.ls	31b58 <__asan_cplus_demangle_type@@Base+0x3140>  // b.plast
   31b7c:	b	31840 <__asan_cplus_demangle_type@@Base+0x2e28>
   31b80:	ldr	x1, [x4, #8]
   31b84:	cbz	x1, 31bb0 <__asan_cplus_demangle_type@@Base+0x3198>
   31b88:	ldr	w0, [x1]
   31b8c:	sub	w2, w0, #0x1
   31b90:	cmp	w0, #0x8
   31b94:	b.hi	31bb8 <__asan_cplus_demangle_type@@Base+0x31a0>  // b.pmore
   31b98:	cmp	w0, #0x6
   31b9c:	b.hi	3189c <__asan_cplus_demangle_type@@Base+0x2e84>  // b.pmore
   31ba0:	cmp	w2, #0x1
   31ba4:	b.hi	31bb0 <__asan_cplus_demangle_type@@Base+0x3198>  // b.pmore
   31ba8:	ldr	x1, [x1, #16]
   31bac:	cbnz	x1, 31b88 <__asan_cplus_demangle_type@@Base+0x3170>
   31bb0:	mov	w1, #0x1                   	// #1
   31bb4:	b	318a0 <__asan_cplus_demangle_type@@Base+0x2e88>
   31bb8:	cmp	w0, #0x35
   31bbc:	cset	w1, ne  // ne = any
   31bc0:	b	318a0 <__asan_cplus_demangle_type@@Base+0x2e88>
   31bc4:	mov	w0, #0x2e                  	// #46
   31bc8:	ldp	w1, w2, [x19, #40]
   31bcc:	ldr	x8, [x19, #24]
   31bd0:	cmp	w1, w2
   31bd4:	add	x8, x8, #0x2
   31bd8:	b.ge	31ec0 <__asan_cplus_demangle_type@@Base+0x34a8>  // b.tcont
   31bdc:	ldr	x4, [x19, #32]
   31be0:	smull	x2, w1, w23
   31be4:	add	w1, w1, #0x1
   31be8:	sub	w21, w21, #0x2
   31bec:	add	x3, x4, x2
   31bf0:	str	wzr, [x3, #4]
   31bf4:	str	w1, [x19, #40]
   31bf8:	str	w22, [x4, x2]
   31bfc:	str	w0, [x3, #8]
   31c00:	str	x8, [x19, #24]
   31c04:	cbz	x25, 31d3c <__asan_cplus_demangle_type@@Base+0x3324>
   31c08:	mov	x2, x25
   31c0c:	mov	x0, x19
   31c10:	mov	w1, #0x40                  	// #64
   31c14:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   31c18:	mov	x25, x0
   31c1c:	cbz	x0, 31970 <__asan_cplus_demangle_type@@Base+0x2f58>
   31c20:	cmp	w21, #0x0
   31c24:	b.gt	31944 <__asan_cplus_demangle_type@@Base+0x2f2c>
   31c28:	mov	x2, x25
   31c2c:	mov	x0, x19
   31c30:	ldp	x19, x20, [sp, #16]
   31c34:	mov	x3, #0x0                   	// #0
   31c38:	ldp	x21, x22, [sp, #32]
   31c3c:	mov	w1, #0x3f                  	// #63
   31c40:	ldp	x23, x24, [sp, #48]
   31c44:	ldr	x25, [sp, #64]
   31c48:	ldp	x29, x30, [sp], #80
   31c4c:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31c50:	mov	x20, #0x1                   	// #1
   31c54:	b	31c5c <__asan_cplus_demangle_type@@Base+0x3244>
   31c58:	mov	x20, x3
   31c5c:	cmp	w21, w20
   31c60:	mov	w24, w20
   31c64:	b.le	31c7c <__asan_cplus_demangle_type@@Base+0x3264>
   31c68:	ldrb	w1, [x8, x20]
   31c6c:	add	x3, x20, #0x1
   31c70:	cmp	w1, #0x24
   31c74:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   31c78:	b.ne	31c58 <__asan_cplus_demangle_type@@Base+0x3240>  // b.any
   31c7c:	mov	x1, x8
   31c80:	mov	w2, w24
   31c84:	mov	x0, x19
   31c88:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   31c8c:	ldr	x8, [x19, #24]
   31c90:	sub	w21, w21, w24
   31c94:	mov	x3, x0
   31c98:	add	x8, x8, x20
   31c9c:	str	x8, [x19, #24]
   31ca0:	cbnz	x0, 31c04 <__asan_cplus_demangle_type@@Base+0x31ec>
   31ca4:	b	31970 <__asan_cplus_demangle_type@@Base+0x2f58>
   31ca8:	bl	311d8 <__asan_cplus_demangle_type@@Base+0x27c0>
   31cac:	mov	x2, x0
   31cb0:	mov	x0, x19
   31cb4:	mov	x3, #0x0                   	// #0
   31cb8:	ldp	x19, x20, [sp, #16]
   31cbc:	mov	w1, #0x13                  	// #19
   31cc0:	ldp	x21, x22, [sp, #32]
   31cc4:	ldp	x29, x30, [sp], #80
   31cc8:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31ccc:	mov	w1, #0x0                   	// #0
   31cd0:	bl	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   31cd4:	mov	x2, x0
   31cd8:	mov	x0, x19
   31cdc:	ldp	x19, x20, [sp, #16]
   31ce0:	mov	x3, #0x0                   	// #0
   31ce4:	ldp	x21, x22, [sp, #32]
   31ce8:	mov	w1, #0x17                  	// #23
   31cec:	ldp	x29, x30, [sp], #80
   31cf0:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31cf4:	ldrb	w1, [x2, #2]
   31cf8:	cbz	w1, 31d10 <__asan_cplus_demangle_type@@Base+0x32f8>
   31cfc:	add	x1, x2, #0x3
   31d00:	str	x1, [x0, #24]
   31d04:	ldrb	w1, [x2, #2]
   31d08:	cmp	w1, #0x6e
   31d0c:	b.eq	31ed4 <__asan_cplus_demangle_type@@Base+0x34bc>  // b.none
   31d10:	mov	x0, x19
   31d14:	mov	w1, #0x0                   	// #0
   31d18:	bl	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   31d1c:	mov	x2, x0
   31d20:	mov	x0, x19
   31d24:	mov	x3, #0x0                   	// #0
   31d28:	ldp	x19, x20, [sp, #16]
   31d2c:	mov	w1, #0x49                  	// #73
   31d30:	ldp	x21, x22, [sp, #32]
   31d34:	ldp	x29, x30, [sp], #80
   31d38:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31d3c:	mov	x25, x3
   31d40:	b	31c20 <__asan_cplus_demangle_type@@Base+0x3208>
   31d44:	mov	w0, #0x2f                  	// #47
   31d48:	b	31bc8 <__asan_cplus_demangle_type@@Base+0x31b0>
   31d4c:	mov	w1, #0x0                   	// #0
   31d50:	bl	287e0 <__asan_backtrace_create_state@@Base+0x548>
   31d54:	cbz	w0, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   31d58:	mov	x0, x19
   31d5c:	mov	w1, #0x0                   	// #0
   31d60:	bl	287e0 <__asan_backtrace_create_state@@Base+0x548>
   31d64:	cbz	w0, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   31d68:	mov	x0, x19
   31d6c:	mov	w1, #0x0                   	// #0
   31d70:	bl	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   31d74:	mov	x2, x0
   31d78:	mov	x0, x19
   31d7c:	mov	x3, #0x0                   	// #0
   31d80:	ldp	x19, x20, [sp, #16]
   31d84:	mov	w1, #0x11                  	// #17
   31d88:	ldp	x21, x22, [sp, #32]
   31d8c:	ldp	x29, x30, [sp], #80
   31d90:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31d94:	bl	6420 <__asan_cplus_demangle_type@plt>
   31d98:	mov	x2, x0
   31d9c:	mov	x0, x19
   31da0:	mov	x3, #0x0                   	// #0
   31da4:	ldp	x19, x20, [sp, #16]
   31da8:	mov	w1, #0xc                   	// #12
   31dac:	ldp	x21, x22, [sp, #32]
   31db0:	ldp	x29, x30, [sp], #80
   31db4:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31db8:	bl	287e0 <__asan_backtrace_create_state@@Base+0x548>
   31dbc:	cbz	w0, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   31dc0:	mov	x0, x19
   31dc4:	mov	w1, #0x0                   	// #0
   31dc8:	bl	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   31dcc:	mov	x2, x0
   31dd0:	mov	x0, x19
   31dd4:	mov	x3, #0x0                   	// #0
   31dd8:	ldp	x19, x20, [sp, #16]
   31ddc:	mov	w1, #0xf                   	// #15
   31de0:	ldp	x21, x22, [sp, #32]
   31de4:	ldp	x29, x30, [sp], #80
   31de8:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31dec:	add	w3, w3, #0xf
   31df0:	str	w3, [x0, #72]
   31df4:	bl	6420 <__asan_cplus_demangle_type@plt>
   31df8:	mov	x2, x0
   31dfc:	mov	x0, x19
   31e00:	mov	x3, #0x0                   	// #0
   31e04:	ldp	x19, x20, [sp, #16]
   31e08:	mov	w1, #0x9                   	// #9
   31e0c:	ldp	x21, x22, [sp, #32]
   31e10:	ldp	x29, x30, [sp], #80
   31e14:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31e18:	bl	6420 <__asan_cplus_demangle_type@plt>
   31e1c:	mov	x20, x0
   31e20:	add	x0, x19, #0x18
   31e24:	bl	285b0 <__asan_backtrace_create_state@@Base+0x318>
   31e28:	tbnz	w0, #31, 31978 <__asan_cplus_demangle_type@@Base+0x2f60>
   31e2c:	ldr	x0, [x19, #24]
   31e30:	ldrb	w1, [x0]
   31e34:	cmp	w1, #0x5f
   31e38:	b.ne	31978 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   31e3c:	add	x0, x0, #0x1
   31e40:	str	x0, [x19, #24]
   31e44:	mov	x0, x19
   31e48:	bl	6420 <__asan_cplus_demangle_type@plt>
   31e4c:	mov	x2, x0
   31e50:	ldr	w1, [x19, #72]
   31e54:	mov	x3, x20
   31e58:	ldp	x21, x22, [sp, #32]
   31e5c:	add	w1, w1, #0x5
   31e60:	str	w1, [x19, #72]
   31e64:	mov	x0, x19
   31e68:	ldp	x19, x20, [sp, #16]
   31e6c:	mov	w1, #0xb                   	// #11
   31e70:	ldp	x29, x30, [sp], #80
   31e74:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31e78:	bl	311d8 <__asan_cplus_demangle_type@@Base+0x27c0>
   31e7c:	mov	x2, x0
   31e80:	mov	x0, x19
   31e84:	mov	x3, #0x0                   	// #0
   31e88:	ldp	x19, x20, [sp, #16]
   31e8c:	mov	w1, #0x14                  	// #20
   31e90:	ldp	x21, x22, [sp, #32]
   31e94:	ldp	x29, x30, [sp], #80
   31e98:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31e9c:	bl	6420 <__asan_cplus_demangle_type@plt>
   31ea0:	mov	x2, x0
   31ea4:	mov	x0, x19
   31ea8:	mov	x3, #0x0                   	// #0
   31eac:	ldp	x19, x20, [sp, #16]
   31eb0:	mov	w1, #0xd                   	// #13
   31eb4:	ldp	x21, x22, [sp, #32]
   31eb8:	ldp	x29, x30, [sp], #80
   31ebc:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31ec0:	mov	x20, #0x0                   	// #0
   31ec4:	ldp	x23, x24, [sp, #48]
   31ec8:	ldr	x25, [sp, #64]
   31ecc:	str	x8, [x19, #24]
   31ed0:	b	31840 <__asan_cplus_demangle_type@@Base+0x2e28>
   31ed4:	mov	w1, #0x0                   	// #0
   31ed8:	bl	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   31edc:	mov	x2, x0
   31ee0:	mov	x0, x19
   31ee4:	ldp	x19, x20, [sp, #16]
   31ee8:	mov	x3, #0x0                   	// #0
   31eec:	ldp	x21, x22, [sp, #32]
   31ef0:	mov	w1, #0x4a                  	// #74
   31ef4:	ldp	x29, x30, [sp], #80
   31ef8:	b	28330 <__asan_backtrace_create_state@@Base+0x98>
   31efc:	nop

0000000000031f00 <__asan_cplus_demangle_mangled_name@@Base>:
   31f00:	stp	x29, x30, [sp, #-48]!
   31f04:	mov	x29, sp
   31f08:	ldr	x2, [x0, #24]
   31f0c:	stp	x19, x20, [sp, #16]
   31f10:	mov	x19, x0
   31f14:	str	x21, [sp, #32]
   31f18:	mov	w21, w1
   31f1c:	ldrb	w3, [x2]
   31f20:	cmp	w3, #0x5f
   31f24:	b.eq	31f64 <__asan_cplus_demangle_mangled_name@@Base+0x64>  // b.none
   31f28:	cbnz	w1, 31f34 <__asan_cplus_demangle_mangled_name@@Base+0x34>
   31f2c:	cmp	w3, #0x5a
   31f30:	b.eq	31f4c <__asan_cplus_demangle_mangled_name@@Base+0x4c>  // b.none
   31f34:	mov	x20, #0x0                   	// #0
   31f38:	mov	x0, x20
   31f3c:	ldp	x19, x20, [sp, #16]
   31f40:	ldr	x21, [sp, #32]
   31f44:	ldp	x29, x30, [sp], #48
   31f48:	ret
   31f4c:	add	x2, x2, #0x1
   31f50:	ldr	x21, [sp, #32]
   31f54:	str	x2, [x19, #24]
   31f58:	ldp	x19, x20, [sp, #16]
   31f5c:	ldp	x29, x30, [sp], #48
   31f60:	b	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   31f64:	add	x3, x2, #0x1
   31f68:	str	x3, [x0, #24]
   31f6c:	ldrb	w3, [x2, #1]
   31f70:	cmp	w3, #0x5a
   31f74:	b.ne	31f34 <__asan_cplus_demangle_mangled_name@@Base+0x34>  // b.any
   31f78:	add	x2, x2, #0x2
   31f7c:	str	x2, [x0, #24]
   31f80:	bl	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   31f84:	mov	x20, x0
   31f88:	cbz	w21, 31f38 <__asan_cplus_demangle_mangled_name@@Base+0x38>
   31f8c:	ldr	w0, [x19, #16]
   31f90:	tbz	w0, #0, 31f38 <__asan_cplus_demangle_mangled_name@@Base+0x38>
   31f94:	ldr	x1, [x19, #24]
   31f98:	ldrb	w0, [x1]
   31f9c:	cmp	w0, #0x2e
   31fa0:	b.ne	31f38 <__asan_cplus_demangle_mangled_name@@Base+0x38>  // b.any
   31fa4:	ldrb	w2, [x1, #1]
   31fa8:	sub	w0, w2, #0x61
   31fac:	cmp	w2, #0x5f
   31fb0:	and	w0, w0, #0xff
   31fb4:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   31fb8:	b.ls	3207c <__asan_cplus_demangle_mangled_name@@Base+0x17c>  // b.plast
   31fbc:	nop
   31fc0:	sub	w2, w2, #0x30
   31fc4:	and	w2, w2, #0xff
   31fc8:	cmp	w2, #0x9
   31fcc:	b.hi	31f38 <__asan_cplus_demangle_mangled_name@@Base+0x38>  // b.pmore
   31fd0:	ldrb	w0, [x1]
   31fd4:	mov	x2, x1
   31fd8:	cmp	w0, #0x2e
   31fdc:	b.ne	3202c <__asan_cplus_demangle_mangled_name@@Base+0x12c>  // b.any
   31fe0:	ldrb	w3, [x2, #1]
   31fe4:	sub	w3, w3, #0x30
   31fe8:	and	w3, w3, #0xff
   31fec:	cmp	w3, #0x9
   31ff0:	b.hi	3202c <__asan_cplus_demangle_mangled_name@@Base+0x12c>  // b.pmore
   31ff4:	ldrb	w0, [x2, #2]
   31ff8:	add	x2, x2, #0x2
   31ffc:	sub	w3, w0, #0x30
   32000:	and	w3, w3, #0xff
   32004:	cmp	w3, #0x9
   32008:	b.hi	31fd8 <__asan_cplus_demangle_mangled_name@@Base+0xd8>  // b.pmore
   3200c:	nop
   32010:	ldrb	w0, [x2, #1]!
   32014:	sub	w3, w0, #0x30
   32018:	and	w3, w3, #0xff
   3201c:	cmp	w3, #0x9
   32020:	b.ls	32010 <__asan_cplus_demangle_mangled_name@@Base+0x110>  // b.plast
   32024:	cmp	w0, #0x2e
   32028:	b.eq	31fe0 <__asan_cplus_demangle_mangled_name@@Base+0xe0>  // b.none
   3202c:	str	x2, [x19, #24]
   32030:	mov	x0, x19
   32034:	sub	w2, w2, w1
   32038:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3203c:	mov	x3, x0
   32040:	mov	x2, x20
   32044:	mov	w1, #0x4e                  	// #78
   32048:	mov	x0, x19
   3204c:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   32050:	ldr	x1, [x19, #24]
   32054:	mov	x20, x0
   32058:	ldrb	w0, [x1]
   3205c:	cmp	w0, #0x2e
   32060:	b.ne	31f38 <__asan_cplus_demangle_mangled_name@@Base+0x38>  // b.any
   32064:	ldrb	w2, [x1, #1]
   32068:	sub	w0, w2, #0x61
   3206c:	cmp	w2, #0x5f
   32070:	and	w0, w0, #0xff
   32074:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   32078:	b.hi	31fc0 <__asan_cplus_demangle_mangled_name@@Base+0xc0>  // b.pmore
   3207c:	ldrb	w0, [x1, #2]
   32080:	add	x2, x1, #0x2
   32084:	b	3208c <__asan_cplus_demangle_mangled_name@@Base+0x18c>
   32088:	ldrb	w0, [x2, #1]!
   3208c:	sub	w3, w0, #0x61
   32090:	cmp	w0, #0x5f
   32094:	and	w3, w3, #0xff
   32098:	ccmp	w3, #0x19, #0x0, ne  // ne = any
   3209c:	b.ls	32088 <__asan_cplus_demangle_mangled_name@@Base+0x188>  // b.plast
   320a0:	b	31fd8 <__asan_cplus_demangle_mangled_name@@Base+0xd8>
   320a4:	nop
   320a8:	ldr	x1, [x0, #24]
   320ac:	ldrb	w2, [x1]
   320b0:	cmp	w2, #0x4c
   320b4:	b.ne	32190 <__asan_cplus_demangle_mangled_name@@Base+0x290>  // b.any
   320b8:	stp	x29, x30, [sp, #-48]!
   320bc:	add	x2, x1, #0x1
   320c0:	mov	x29, sp
   320c4:	stp	x19, x20, [sp, #16]
   320c8:	mov	x19, x0
   320cc:	str	x2, [x0, #24]
   320d0:	mov	w2, #0x5a                  	// #90
   320d4:	ldrb	w1, [x1, #1]
   320d8:	cmp	w1, #0x5f
   320dc:	ccmp	w1, w2, #0x4, ne  // ne = any
   320e0:	b.ne	32110 <__asan_cplus_demangle_mangled_name@@Base+0x210>  // b.any
   320e4:	mov	w1, #0x0                   	// #0
   320e8:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   320ec:	ldr	x1, [x19, #24]
   320f0:	ldrb	w2, [x1]
   320f4:	cmp	w2, #0x45
   320f8:	b.ne	32180 <__asan_cplus_demangle_mangled_name@@Base+0x280>  // b.any
   320fc:	add	x1, x1, #0x1
   32100:	str	x1, [x19, #24]
   32104:	ldp	x19, x20, [sp, #16]
   32108:	ldp	x29, x30, [sp], #48
   3210c:	ret
   32110:	bl	6420 <__asan_cplus_demangle_type@plt>
   32114:	mov	x20, x0
   32118:	cbz	x0, 32180 <__asan_cplus_demangle_mangled_name@@Base+0x280>
   3211c:	ldr	w0, [x0]
   32120:	str	x21, [sp, #32]
   32124:	cmp	w0, #0x27
   32128:	b.eq	321c0 <__asan_cplus_demangle_mangled_name@@Base+0x2c0>  // b.none
   3212c:	ldr	x1, [x19, #24]
   32130:	mov	w21, #0x3d                  	// #61
   32134:	ldrb	w4, [x1]
   32138:	cmp	w4, #0x6e
   3213c:	b.ne	32154 <__asan_cplus_demangle_mangled_name@@Base+0x254>  // b.any
   32140:	add	x0, x1, #0x1
   32144:	str	x0, [x19, #24]
   32148:	mov	w21, #0x3e                  	// #62
   3214c:	ldrb	w4, [x1, #1]
   32150:	mov	x1, x0
   32154:	cmp	w4, #0x45
   32158:	b.eq	321e0 <__asan_cplus_demangle_mangled_name@@Base+0x2e0>  // b.none
   3215c:	add	x3, x1, #0x1
   32160:	b	32174 <__asan_cplus_demangle_mangled_name@@Base+0x274>
   32164:	str	x3, [x19, #24]
   32168:	ldrb	w4, [x3], #1
   3216c:	cmp	w4, #0x45
   32170:	b.eq	32198 <__asan_cplus_demangle_mangled_name@@Base+0x298>  // b.none
   32174:	mov	x2, x3
   32178:	cbnz	w4, 32164 <__asan_cplus_demangle_mangled_name@@Base+0x264>
   3217c:	ldr	x21, [sp, #32]
   32180:	mov	x0, #0x0                   	// #0
   32184:	ldp	x19, x20, [sp, #16]
   32188:	ldp	x29, x30, [sp], #48
   3218c:	ret
   32190:	mov	x0, #0x0                   	// #0
   32194:	ret
   32198:	sub	w2, w2, w1
   3219c:	mov	x0, x19
   321a0:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   321a4:	mov	w1, w21
   321a8:	mov	x3, x0
   321ac:	mov	x2, x20
   321b0:	mov	x0, x19
   321b4:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   321b8:	ldr	x21, [sp, #32]
   321bc:	b	320ec <__asan_cplus_demangle_mangled_name@@Base+0x1ec>
   321c0:	ldr	x0, [x20, #8]
   321c4:	ldr	w1, [x0, #28]
   321c8:	cbz	w1, 3212c <__asan_cplus_demangle_mangled_name@@Base+0x22c>
   321cc:	ldr	w1, [x0, #8]
   321d0:	ldr	w0, [x19, #72]
   321d4:	sub	w0, w0, w1
   321d8:	str	w0, [x19, #72]
   321dc:	b	3212c <__asan_cplus_demangle_mangled_name@@Base+0x22c>
   321e0:	mov	w2, #0x0                   	// #0
   321e4:	b	3219c <__asan_cplus_demangle_mangled_name@@Base+0x29c>

00000000000321e8 <__asan_cplus_demangle_print_callback@@Base>:
   321e8:	stp	x29, x30, [sp, #-416]!
   321ec:	mov	w4, w0
   321f0:	mov	x5, x1
   321f4:	mov	x29, sp
   321f8:	stp	x19, x20, [sp, #16]
   321fc:	add	x19, x29, #0x28
   32200:	mov	x0, x19
   32204:	str	xzr, [x29, #296]
   32208:	strb	wzr, [x29, #304]
   3220c:	stp	x2, x3, [x29, #312]
   32210:	stp	xzr, xzr, [x29, #328]
   32214:	stp	xzr, xzr, [x29, #344]
   32218:	stp	xzr, xzr, [x29, #360]
   3221c:	stp	xzr, xzr, [x29, #376]
   32220:	stp	xzr, xzr, [x29, #392]
   32224:	bl	28420 <__asan_backtrace_create_state@@Base+0x188>
   32228:	ldr	w0, [x29, #348]
   3222c:	cmp	w0, #0x7ff
   32230:	b.gt	32238 <__asan_cplus_demangle_print_callback@@Base+0x50>
   32234:	str	wzr, [x29, #348]
   32238:	ldr	w7, [x29, #404]
   3223c:	mov	w6, #0x1                   	// #1
   32240:	ldr	w3, [x29, #388]
   32244:	mov	x2, x5
   32248:	mov	x20, sp
   3224c:	mov	w1, w4
   32250:	cmp	w3, #0x0
   32254:	mov	x0, x19
   32258:	csel	w5, w3, w6, gt
   3225c:	str	xzr, [x29, #408]
   32260:	mul	w3, w3, w7
   32264:	str	w3, [x29, #404]
   32268:	sub	sp, sp, w5, sxtw #4
   3226c:	cmp	w3, #0x0
   32270:	mov	x4, sp
   32274:	csel	w3, w3, w6, gt
   32278:	str	x4, [x29, #376]
   3227c:	sub	sp, sp, w3, sxtw #4
   32280:	mov	x3, sp
   32284:	str	x3, [x29, #392]
   32288:	bl	2cca8 <__asan_backtrace_create_state@@Base+0x4a10>
   3228c:	mov	sp, x20
   32290:	ldr	x1, [x29, #296]
   32294:	mov	x0, x19
   32298:	ldp	x3, x2, [x29, #312]
   3229c:	strb	wzr, [x19, x1]
   322a0:	blr	x3
   322a4:	ldr	w0, [x29, #344]
   322a8:	mov	sp, x29
   322ac:	cmp	w0, #0x0
   322b0:	cset	w0, eq  // eq = none
   322b4:	ldp	x19, x20, [sp, #16]
   322b8:	ldp	x29, x30, [sp], #416
   322bc:	ret

00000000000322c0 <__asan_cplus_demangle_print@@Base>:
   322c0:	stp	x29, x30, [sp, #-96]!
   322c4:	mov	x29, sp
   322c8:	stp	x19, x20, [sp, #16]
   322cc:	mov	w19, w0
   322d0:	str	x21, [sp, #32]
   322d4:	mov	x21, x3
   322d8:	stp	xzr, xzr, [sp, #64]
   322dc:	str	xzr, [sp, #80]
   322e0:	str	wzr, [sp, #88]
   322e4:	cbnz	w2, 32328 <__asan_cplus_demangle_print@@Base+0x68>
   322e8:	adrp	x2, 28000 <__asan_backtrace_syminfo@@Base+0x70>
   322ec:	mov	w0, w19
   322f0:	add	x3, sp, #0x40
   322f4:	add	x2, x2, #0xad0
   322f8:	bl	66c0 <__asan_cplus_demangle_print_callback@plt>
   322fc:	cbz	w0, 32364 <__asan_cplus_demangle_print@@Base+0xa4>
   32300:	ldr	w2, [sp, #88]
   32304:	ldr	x1, [sp, #80]
   32308:	cmp	w2, #0x0
   3230c:	ldr	x0, [sp, #64]
   32310:	csinc	x1, x1, xzr, eq  // eq = none
   32314:	str	x1, [x21]
   32318:	ldp	x19, x20, [sp, #16]
   3231c:	ldr	x21, [sp, #32]
   32320:	ldp	x29, x30, [sp], #96
   32324:	ret
   32328:	sxtw	x0, w2
   3232c:	mov	x20, #0x2                   	// #2
   32330:	cmp	x0, #0x2
   32334:	b.ls	32344 <__asan_cplus_demangle_print@@Base+0x84>  // b.plast
   32338:	lsl	x20, x20, #1
   3233c:	cmp	x0, x20
   32340:	b.hi	32338 <__asan_cplus_demangle_print@@Base+0x78>  // b.pmore
   32344:	mov	x0, x20
   32348:	str	x1, [sp, #56]
   3234c:	bl	6880 <malloc@plt>
   32350:	ldr	x1, [sp, #56]
   32354:	cbz	x0, 32378 <__asan_cplus_demangle_print@@Base+0xb8>
   32358:	str	x0, [sp, #64]
   3235c:	str	x20, [sp, #80]
   32360:	b	322e8 <__asan_cplus_demangle_print@@Base+0x28>
   32364:	ldr	x0, [sp, #64]
   32368:	bl	6540 <free@plt>
   3236c:	str	xzr, [x21]
   32370:	mov	x0, #0x0                   	// #0
   32374:	b	32318 <__asan_cplus_demangle_print@@Base+0x58>
   32378:	mov	w0, #0x1                   	// #1
   3237c:	str	w0, [sp, #88]
   32380:	b	322e8 <__asan_cplus_demangle_print@@Base+0x28>
   32384:	nop

0000000000032388 <__asan_cplus_demangle_init_info@@Base>:
   32388:	lsl	w4, w2, #1
   3238c:	add	x5, x0, x2
   32390:	stp	x0, x5, [x3]
   32394:	str	w1, [x3, #16]
   32398:	str	x0, [x3, #24]
   3239c:	stp	wzr, w4, [x3, #40]
   323a0:	stp	wzr, w2, [x3, #56]
   323a4:	stp	xzr, xzr, [x3, #64]
   323a8:	str	xzr, [x3, #80]
   323ac:	ret
   323b0:	stp	x29, x30, [sp, #-176]!
   323b4:	mov	x29, sp
   323b8:	stp	x19, x20, [sp, #16]
   323bc:	mov	x19, x0
   323c0:	mov	w20, w1
   323c4:	stp	x21, x22, [sp, #32]
   323c8:	mov	x21, x2
   323cc:	mov	x22, x3
   323d0:	stp	x23, x24, [sp, #48]
   323d4:	str	x25, [sp, #64]
   323d8:	ldrb	w0, [x0]
   323dc:	cmp	w0, #0x5f
   323e0:	b.ne	323f0 <__asan_cplus_demangle_init_info@@Base+0x68>  // b.any
   323e4:	ldrb	w0, [x19, #1]
   323e8:	cmp	w0, #0x5a
   323ec:	b.eq	325cc <__asan_cplus_demangle_init_info@@Base+0x244>  // b.none
   323f0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   323f4:	mov	x0, x19
   323f8:	add	x1, x1, #0x9d0
   323fc:	mov	x2, #0x8                   	// #8
   32400:	bl	6830 <__asan_internal_strncmp@plt>
   32404:	cbnz	w0, 32438 <__asan_cplus_demangle_init_info@@Base+0xb0>
   32408:	ldrb	w0, [x19, #8]
   3240c:	mov	w2, #0x5f                  	// #95
   32410:	mov	w1, #0x24                  	// #36
   32414:	cmp	w0, #0x2e
   32418:	ccmp	w0, w2, #0x4, ne  // ne = any
   3241c:	ccmp	w0, w1, #0x4, ne  // ne = any
   32420:	b.ne	32438 <__asan_cplus_demangle_init_info@@Base+0xb0>  // b.any
   32424:	ldrb	w0, [x19, #9]
   32428:	mov	w1, #0x49                  	// #73
   3242c:	cmp	w0, #0x44
   32430:	ccmp	w0, w1, #0x4, ne  // ne = any
   32434:	b.eq	325d4 <__asan_cplus_demangle_init_info@@Base+0x24c>  // b.none
   32438:	mov	w24, #0x0                   	// #0
   3243c:	tbz	w20, #4, 325ac <__asan_cplus_demangle_init_info@@Base+0x224>
   32440:	mov	x0, x19
   32444:	add	x23, x29, #0x58
   32448:	bl	64b0 <__asan_internal_strlen@plt>
   3244c:	mov	x2, x0
   32450:	mov	x3, x23
   32454:	mov	x0, x19
   32458:	mov	w1, w20
   3245c:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   32460:	ldr	w0, [x29, #132]
   32464:	tbnz	w20, #18, 32470 <__asan_cplus_demangle_init_info@@Base+0xe8>
   32468:	cmp	w0, #0x800
   3246c:	b.hi	325ac <__asan_cplus_demangle_init_info@@Base+0x224>  // b.pmore
   32470:	mov	w2, #0x18                  	// #24
   32474:	ldrsw	x1, [x29, #148]
   32478:	mov	x25, sp
   3247c:	cmp	w24, #0x1
   32480:	smull	x0, w0, w2
   32484:	lsl	x1, x1, #3
   32488:	add	x0, x0, #0xf
   3248c:	add	x1, x1, #0xf
   32490:	and	x0, x0, #0xfffffffffffffff0
   32494:	and	x1, x1, #0xfffffffffffffff0
   32498:	sub	sp, sp, x0
   3249c:	mov	x0, sp
   324a0:	sub	sp, sp, x1
   324a4:	mov	x1, sp
   324a8:	str	x0, [x29, #120]
   324ac:	str	x1, [x29, #136]
   324b0:	b.eq	32568 <__asan_cplus_demangle_init_info@@Base+0x1e0>  // b.none
   324b4:	sub	w0, w24, #0x2
   324b8:	cmp	w0, #0x1
   324bc:	b.hi	3259c <__asan_cplus_demangle_init_info@@Base+0x214>  // b.pmore
   324c0:	ldr	x0, [x29, #112]
   324c4:	cmp	w24, #0x2
   324c8:	cset	w2, ne  // ne = any
   324cc:	add	x24, x0, #0xb
   324d0:	str	x24, [x29, #112]
   324d4:	add	w19, w2, #0x44
   324d8:	ldrb	w1, [x0, #11]
   324dc:	cmp	w1, #0x5f
   324e0:	b.ne	324f0 <__asan_cplus_demangle_init_info@@Base+0x168>  // b.any
   324e4:	ldrb	w1, [x0, #12]
   324e8:	cmp	w1, #0x5a
   324ec:	b.eq	325f0 <__asan_cplus_demangle_init_info@@Base+0x268>  // b.none
   324f0:	mov	x0, x24
   324f4:	bl	64b0 <__asan_internal_strlen@plt>
   324f8:	mov	w2, w0
   324fc:	mov	x1, x24
   32500:	mov	x0, x23
   32504:	bl	2e4f0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   32508:	mov	x2, x0
   3250c:	mov	w1, w19
   32510:	mov	x3, #0x0                   	// #0
   32514:	mov	x0, x23
   32518:	bl	28330 <__asan_backtrace_create_state@@Base+0x98>
   3251c:	mov	x19, x0
   32520:	ldr	x0, [x29, #112]
   32524:	bl	64b0 <__asan_internal_strlen@plt>
   32528:	ldr	x1, [x29, #112]
   3252c:	add	x1, x1, x0
   32530:	str	x1, [x29, #112]
   32534:	tbz	w20, #0, 3257c <__asan_cplus_demangle_init_info@@Base+0x1f4>
   32538:	ldr	x1, [x29, #112]
   3253c:	mov	w0, #0x0                   	// #0
   32540:	ldrb	w1, [x1]
   32544:	cbz	w1, 3257c <__asan_cplus_demangle_init_info@@Base+0x1f4>
   32548:	mov	sp, x25
   3254c:	mov	sp, x29
   32550:	ldp	x19, x20, [sp, #16]
   32554:	ldp	x21, x22, [sp, #32]
   32558:	ldp	x23, x24, [sp, #48]
   3255c:	ldr	x25, [sp, #64]
   32560:	ldp	x29, x30, [sp], #176
   32564:	ret
   32568:	mov	w1, w24
   3256c:	mov	x0, x23
   32570:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   32574:	mov	x19, x0
   32578:	tbnz	w20, #0, 32538 <__asan_cplus_demangle_init_info@@Base+0x1b0>
   3257c:	mov	w0, #0x0                   	// #0
   32580:	cbz	x19, 32548 <__asan_cplus_demangle_init_info@@Base+0x1c0>
   32584:	mov	x3, x22
   32588:	mov	x2, x21
   3258c:	mov	x1, x19
   32590:	mov	w0, w20
   32594:	bl	66c0 <__asan_cplus_demangle_print_callback@plt>
   32598:	b	32548 <__asan_cplus_demangle_init_info@@Base+0x1c0>
   3259c:	mov	x0, x23
   325a0:	bl	6420 <__asan_cplus_demangle_type@plt>
   325a4:	mov	x19, x0
   325a8:	b	32534 <__asan_cplus_demangle_init_info@@Base+0x1ac>
   325ac:	mov	sp, x29
   325b0:	mov	w0, #0x0                   	// #0
   325b4:	ldp	x19, x20, [sp, #16]
   325b8:	ldp	x21, x22, [sp, #32]
   325bc:	ldp	x23, x24, [sp, #48]
   325c0:	ldr	x25, [sp, #64]
   325c4:	ldp	x29, x30, [sp], #176
   325c8:	ret
   325cc:	mov	w24, #0x1                   	// #1
   325d0:	b	32440 <__asan_cplus_demangle_init_info@@Base+0xb8>
   325d4:	ldrb	w1, [x19, #10]
   325d8:	cmp	w1, w2
   325dc:	b.ne	32438 <__asan_cplus_demangle_init_info@@Base+0xb0>  // b.any
   325e0:	cmp	w0, #0x49
   325e4:	cset	w24, ne  // ne = any
   325e8:	add	w24, w24, #0x2
   325ec:	b	32440 <__asan_cplus_demangle_init_info@@Base+0xb8>
   325f0:	add	x2, x0, #0xd
   325f4:	mov	w1, #0x0                   	// #0
   325f8:	mov	x0, x23
   325fc:	str	x2, [x29, #112]
   32600:	bl	31740 <__asan_cplus_demangle_type@@Base+0x2d28>
   32604:	mov	x2, x0
   32608:	b	3250c <__asan_cplus_demangle_init_info@@Base+0x184>
   3260c:	nop
   32610:	stp	x29, x30, [sp, #-64]!
   32614:	adrp	x3, 28000 <__asan_backtrace_syminfo@@Base+0x70>
   32618:	mov	x29, sp
   3261c:	str	x19, [sp, #16]
   32620:	mov	x19, x2
   32624:	add	x2, x3, #0xad0
   32628:	add	x3, sp, #0x20
   3262c:	stp	xzr, xzr, [sp, #32]
   32630:	str	xzr, [sp, #48]
   32634:	str	wzr, [sp, #56]
   32638:	bl	323b0 <__asan_cplus_demangle_init_info@@Base+0x28>
   3263c:	cbz	w0, 32664 <__asan_cplus_demangle_init_info@@Base+0x2dc>
   32640:	ldr	w2, [sp, #56]
   32644:	ldr	x1, [sp, #48]
   32648:	cmp	w2, #0x0
   3264c:	ldr	x0, [sp, #32]
   32650:	csinc	x1, x1, xzr, eq  // eq = none
   32654:	str	x1, [x19]
   32658:	ldr	x19, [sp, #16]
   3265c:	ldp	x29, x30, [sp], #64
   32660:	ret
   32664:	ldr	x0, [sp, #32]
   32668:	bl	6540 <free@plt>
   3266c:	str	xzr, [x19]
   32670:	mov	x0, #0x0                   	// #0
   32674:	b	32658 <__asan_cplus_demangle_init_info@@Base+0x2d0>
   32678:	stp	x29, x30, [sp, #-144]!
   3267c:	mov	x29, sp
   32680:	stp	x19, x20, [sp, #16]
   32684:	mov	x20, x2
   32688:	add	x19, x29, #0x38
   3268c:	stp	x21, x22, [sp, #32]
   32690:	mov	x21, x1
   32694:	mov	x22, x0
   32698:	str	wzr, [x1]
   3269c:	str	wzr, [x2]
   326a0:	bl	64b0 <__asan_internal_strlen@plt>
   326a4:	mov	x2, x0
   326a8:	mov	w1, #0x4000                	// #16384
   326ac:	mov	x0, x22
   326b0:	mov	x3, x19
   326b4:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   326b8:	ldr	w5, [x29, #100]
   326bc:	mov	w2, #0x18                  	// #24
   326c0:	ldrsw	x4, [x29, #116]
   326c4:	mov	x0, x19
   326c8:	mov	w1, #0x1                   	// #1
   326cc:	smull	x5, w5, w2
   326d0:	lsl	x4, x4, #3
   326d4:	add	x4, x4, #0xf
   326d8:	add	x5, x5, #0xf
   326dc:	and	x4, x4, #0xfffffffffffffff0
   326e0:	and	x5, x5, #0xfffffffffffffff0
   326e4:	sub	sp, sp, x5
   326e8:	mov	x2, sp
   326ec:	sub	sp, sp, x4
   326f0:	str	x2, [x29, #88]
   326f4:	mov	x2, sp
   326f8:	str	x2, [x29, #104]
   326fc:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   32700:	cbz	x0, 32724 <__asan_cplus_demangle_init_info@@Base+0x39c>
   32704:	ldr	w3, [x0]
   32708:	cmp	w3, #0x7
   3270c:	b.eq	32758 <__asan_cplus_demangle_init_info@@Base+0x3d0>  // b.none
   32710:	b.hi	32778 <__asan_cplus_demangle_init_info@@Base+0x3f0>  // b.pmore
   32714:	sub	w1, w3, #0x3
   32718:	cmp	w3, #0x2
   3271c:	b.hi	3273c <__asan_cplus_demangle_init_info@@Base+0x3b4>  // b.pmore
   32720:	cbnz	w3, 327a0 <__asan_cplus_demangle_init_info@@Base+0x418>
   32724:	mov	w0, #0x0                   	// #0
   32728:	mov	sp, x29
   3272c:	ldp	x19, x20, [sp, #16]
   32730:	ldp	x21, x22, [sp, #32]
   32734:	ldp	x29, x30, [sp], #144
   32738:	ret
   3273c:	cmp	w1, #0x1
   32740:	b.hi	32724 <__asan_cplus_demangle_init_info@@Base+0x39c>  // b.pmore
   32744:	ldr	x0, [x0, #8]
   32748:	cbz	x0, 32728 <__asan_cplus_demangle_init_info@@Base+0x3a0>
   3274c:	ldr	w3, [x0]
   32750:	cmp	w3, #0x7
   32754:	b.ne	32710 <__asan_cplus_demangle_init_info@@Base+0x388>  // b.any
   32758:	ldr	w1, [x0, #8]
   3275c:	mov	w0, #0x1                   	// #1
   32760:	str	w1, [x21]
   32764:	mov	sp, x29
   32768:	ldp	x19, x20, [sp, #16]
   3276c:	ldp	x21, x22, [sp, #32]
   32770:	ldp	x29, x30, [sp], #144
   32774:	ret
   32778:	cmp	w3, #0x8
   3277c:	b.ne	32724 <__asan_cplus_demangle_init_info@@Base+0x39c>  // b.any
   32780:	ldr	w1, [x0, #8]
   32784:	mov	w0, #0x1                   	// #1
   32788:	str	w1, [x20]
   3278c:	mov	sp, x29
   32790:	ldp	x19, x20, [sp, #16]
   32794:	ldp	x21, x22, [sp, #32]
   32798:	ldp	x29, x30, [sp], #144
   3279c:	ret
   327a0:	ldr	x0, [x0, #16]
   327a4:	cbnz	x0, 3274c <__asan_cplus_demangle_init_info@@Base+0x3c4>
   327a8:	b	32728 <__asan_cplus_demangle_init_info@@Base+0x3a0>
   327ac:	nop

00000000000327b0 <__asan_cplus_demangle_v3@@Base>:
   327b0:	stp	x29, x30, [sp, #-32]!
   327b4:	mov	x29, sp
   327b8:	add	x2, sp, #0x18
   327bc:	bl	32610 <__asan_cplus_demangle_init_info@@Base+0x288>
   327c0:	ldp	x29, x30, [sp], #32
   327c4:	ret

00000000000327c8 <__asan_cplus_demangle_v3_callback@@Base>:
   327c8:	b	323b0 <__asan_cplus_demangle_init_info@@Base+0x28>
   327cc:	nop

00000000000327d0 <__asan_java_demangle_v3@@Base>:
   327d0:	stp	x29, x30, [sp, #-32]!
   327d4:	mov	w1, #0x25                  	// #37
   327d8:	mov	x29, sp
   327dc:	add	x2, sp, #0x18
   327e0:	bl	32610 <__asan_cplus_demangle_init_info@@Base+0x288>
   327e4:	ldp	x29, x30, [sp], #32
   327e8:	ret
   327ec:	nop

00000000000327f0 <__asan_java_demangle_v3_callback@@Base>:
   327f0:	mov	x3, x2
   327f4:	mov	x2, x1
   327f8:	mov	w1, #0x25                  	// #37
   327fc:	b	323b0 <__asan_cplus_demangle_init_info@@Base+0x28>

0000000000032800 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   32800:	stp	x29, x30, [sp, #-32]!
   32804:	mov	x29, sp
   32808:	add	x2, sp, #0x1c
   3280c:	add	x1, sp, #0x18
   32810:	bl	32678 <__asan_cplus_demangle_init_info@@Base+0x2f0>
   32814:	cmp	w0, #0x0
   32818:	ldr	w1, [sp, #24]
   3281c:	ldp	x29, x30, [sp], #32
   32820:	csel	w0, w1, wzr, ne  // ne = any
   32824:	ret

0000000000032828 <__asan_is_gnu_v3_mangled_dtor@@Base>:
   32828:	stp	x29, x30, [sp, #-32]!
   3282c:	mov	x29, sp
   32830:	add	x2, sp, #0x1c
   32834:	add	x1, sp, #0x18
   32838:	bl	32678 <__asan_cplus_demangle_init_info@@Base+0x2f0>
   3283c:	cmp	w0, #0x0
   32840:	ldr	w1, [sp, #28]
   32844:	ldp	x29, x30, [sp], #32
   32848:	csel	w0, w1, wzr, ne  // ne = any
   3284c:	ret

0000000000032850 <__asan_internal_memcpy@@Base>:
   32850:	b	14608 <__sanitizer_set_report_fd@@Base+0x16e8>
   32854:	nop

0000000000032858 <__asan_internal_memset@@Base>:
   32858:	b	14680 <__sanitizer_set_report_fd@@Base+0x1760>
   3285c:	nop

0000000000032860 <__asan_internal_memcmp@@Base>:
   32860:	b	145c8 <__sanitizer_set_report_fd@@Base+0x16a8>
   32864:	nop

0000000000032868 <__asan_internal_strcmp@@Base>:
   32868:	b	147e0 <__sanitizer_set_report_fd@@Base+0x18c0>
   3286c:	nop

0000000000032870 <__asan_internal_strncmp@@Base>:
   32870:	b	14828 <__sanitizer_set_report_fd@@Base+0x1908>
   32874:	nop

0000000000032878 <__asan_internal_strlen@@Base>:
   32878:	b	14910 <__sanitizer_set_report_fd@@Base+0x19f0>
   3287c:	nop

0000000000032880 <__asan_internal_strnlen@@Base>:
   32880:	b	14b18 <__sanitizer_set_report_fd@@Base+0x1bf8>
   32884:	nop
   32888:	stp	x29, x30, [sp, #-16]!
   3288c:	mov	x0, x4
   32890:	mov	w2, #0xffffffff            	// #-1
   32894:	mov	x29, sp
   32898:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   3289c:	add	x1, x1, #0x90
   328a0:	blr	x3
   328a4:	mov	w0, #0x0                   	// #0
   328a8:	ldp	x29, x30, [sp], #16
   328ac:	ret
   328b0:	mov	x0, x4
   328b4:	mov	x16, x3
   328b8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   328bc:	mov	w2, #0xffffffff            	// #-1
   328c0:	add	x1, x1, #0xb0
   328c4:	br	x16
   328c8:	ldr	x2, [x0, #8]
   328cc:	mov	w3, #0xffffffff            	// #-1
   328d0:	ldr	x1, [x1, #8]
   328d4:	cmp	x2, x1
   328d8:	cset	w0, hi  // hi = pmore
   328dc:	csel	w0, w0, w3, cs  // cs = hs, nlast
   328e0:	ret
   328e4:	nop
   328e8:	stp	x29, x30, [sp, #-176]!
   328ec:	mov	x29, sp
   328f0:	stp	x19, x20, [sp, #16]
   328f4:	add	x19, sp, #0x50
   328f8:	mov	x20, x0
   328fc:	mov	x0, x19
   32900:	stp	x21, x22, [sp, #32]
   32904:	mov	x21, x1
   32908:	mov	x22, x3
   3290c:	mov	w1, #0x0                   	// #0
   32910:	stp	x23, x24, [sp, #48]
   32914:	add	x23, x2, #0x1, lsl #12
   32918:	mov	x2, #0x20                  	// #32
   3291c:	bl	6530 <__asan_internal_memset@plt>
   32920:	add	x0, sp, #0x90
   32924:	add	x2, sp, #0x70
   32928:	mov	x5, #0x0                   	// #0
   3292c:	b	3294c <__asan_internal_strnlen@@Base+0xcc>
   32930:	add	w6, w6, #0x1
   32934:	strh	w8, [x2, x7]
   32938:	strh	w8, [x0, x7]
   3293c:	add	x5, x5, #0x1
   32940:	strh	w6, [x19, x4, lsl #1]
   32944:	cmp	x21, x5
   32948:	b.eq	32994 <__asan_internal_strnlen@@Base+0x114>  // b.none
   3294c:	ldrb	w4, [x20, x5]
   32950:	and	w8, w5, #0xffff
   32954:	cmp	w4, #0xf
   32958:	b.hi	32a88 <__asan_internal_strnlen@@Base+0x208>  // b.pmore
   3295c:	sbfiz	x7, x4, #1, #32
   32960:	ldrh	w6, [x19, x7]
   32964:	cbz	w6, 32930 <__asan_internal_strnlen@@Base+0xb0>
   32968:	ldrh	w1, [x0, x7]
   3296c:	strh	w8, [x23, x1, lsl #1]
   32970:	ldrb	w4, [x20, x5]
   32974:	add	x5, x5, #0x1
   32978:	cmp	x21, x5
   3297c:	lsl	x1, x4, #1
   32980:	ldrh	w6, [x19, x1]
   32984:	strh	w8, [x0, x1]
   32988:	add	w6, w6, #0x1
   3298c:	strh	w6, [x19, x4, lsl #1]
   32990:	b.ne	3294c <__asan_internal_strnlen@@Base+0xcc>  // b.any
   32994:	mov	w1, #0x0                   	// #0
   32998:	mov	x0, x22
   3299c:	mov	x2, #0x800                 	// #2048
   329a0:	bl	6530 <__asan_internal_memset@plt>
   329a4:	add	x11, sp, #0x70
   329a8:	mov	x4, #0x0                   	// #0
   329ac:	mov	w1, #0x0                   	// #0
   329b0:	mov	w9, #0x1                   	// #1
   329b4:	lsl	x2, x4, #1
   329b8:	add	x0, x19, x2
   329bc:	ldrh	w0, [x0, #2]
   329c0:	cbnz	w0, 32aa0 <__asan_internal_strnlen@@Base+0x220>
   329c4:	add	x4, x4, #0x1
   329c8:	cmp	x4, #0x8
   329cc:	b.ne	329b4 <__asan_internal_strnlen@@Base+0x134>  // b.any
   329d0:	mov	x7, x19
   329d4:	add	x10, sp, #0x40
   329d8:	mov	x2, #0x9                   	// #9
   329dc:	mov	w8, #0x1                   	// #1
   329e0:	b	329f4 <__asan_internal_strnlen@@Base+0x174>
   329e4:	add	x2, x2, #0x1
   329e8:	add	x7, x7, #0x2
   329ec:	cmp	x2, #0x10
   329f0:	b.eq	32b60 <__asan_internal_strnlen@@Base+0x2e0>  // b.none
   329f4:	ldrh	w6, [x7, #18]
   329f8:	cbz	w6, 329e4 <__asan_internal_strnlen@@Base+0x164>
   329fc:	add	x0, x10, x2, lsl #1
   32a00:	sub	w9, w2, #0x1
   32a04:	mov	w5, #0x0                   	// #0
   32a08:	mov	x3, #0x0                   	// #0
   32a0c:	sturh	w1, [x0, #-18]
   32a10:	b	32a24 <__asan_internal_strnlen@@Base+0x1a4>
   32a14:	add	w3, w5, #0x1
   32a18:	mov	x5, x3
   32a1c:	cmp	x2, w3, uxtw
   32a20:	b.ls	32a80 <__asan_internal_strnlen@@Base+0x200>  // b.plast
   32a24:	lsr	w0, w6, w5
   32a28:	tbz	w0, #0, 32a14 <__asan_internal_strnlen@@Base+0x194>
   32a2c:	sub	w0, w9, w5
   32a30:	subs	x3, x2, x3
   32a34:	lsl	w0, w8, w0
   32a38:	b.eq	32a68 <__asan_internal_strnlen@@Base+0x1e8>  // b.none
   32a3c:	tst	w1, w0
   32a40:	b.eq	32b04 <__asan_internal_strnlen@@Base+0x284>  // b.none
   32a44:	mov	w4, #0x0                   	// #0
   32a48:	b	32a54 <__asan_internal_strnlen@@Base+0x1d4>
   32a4c:	tst	w1, w0
   32a50:	b.eq	32b04 <__asan_internal_strnlen@@Base+0x284>  // b.none
   32a54:	add	w4, w4, #0x1
   32a58:	bic	w1, w1, w0
   32a5c:	lsr	w0, w0, #1
   32a60:	cmp	x3, w4, uxtw
   32a64:	b.hi	32a4c <__asan_internal_strnlen@@Base+0x1cc>  // b.pmore
   32a68:	lsl	w0, w8, w5
   32a6c:	bic	w6, w6, w0
   32a70:	add	w3, w5, #0x1
   32a74:	mov	x5, x3
   32a78:	cmp	x2, w3, uxtw
   32a7c:	b.hi	32a24 <__asan_internal_strnlen@@Base+0x1a4>  // b.pmore
   32a80:	cbz	w6, 329e4 <__asan_internal_strnlen@@Base+0x164>
   32a84:	nop
   32a88:	mov	w0, #0x0                   	// #0
   32a8c:	ldp	x19, x20, [sp, #16]
   32a90:	ldp	x21, x22, [sp, #32]
   32a94:	ldp	x23, x24, [sp, #48]
   32a98:	ldp	x29, x30, [sp], #176
   32a9c:	ret
   32aa0:	add	w3, w4, #0x1
   32aa4:	lsl	w3, w9, w3
   32aa8:	cmp	w3, w0
   32aac:	b.cc	32a88 <__asan_internal_strnlen@@Base+0x208>  // b.lo, b.ul, b.last
   32ab0:	add	x2, x2, x11
   32ab4:	and	x5, x0, #0xffff
   32ab8:	ldrh	w7, [x2, #2]
   32abc:	tst	w7, #0xfe00
   32ac0:	b.ne	32a88 <__asan_internal_strnlen@@Base+0x208>  // b.any
   32ac4:	sxtw	x3, w3
   32ac8:	ubfiz	w12, w4, #9, #7
   32acc:	lsl	w8, w9, w4
   32ad0:	mov	x10, #0x0                   	// #0
   32ad4:	cmp	w1, #0xff
   32ad8:	orr	w6, w12, w7
   32adc:	mov	w0, w1
   32ae0:	b.ls	32af8 <__asan_internal_strnlen@@Base+0x278>  // b.plast
   32ae4:	b	32b14 <__asan_internal_strnlen@@Base+0x294>
   32ae8:	strh	w6, [x22, x0, lsl #1]
   32aec:	add	x0, x0, x3
   32af0:	cmp	x0, #0xff
   32af4:	b.hi	32b14 <__asan_internal_strnlen@@Base+0x294>  // b.pmore
   32af8:	ldrh	w2, [x22, x0, lsl #1]
   32afc:	cbz	w2, 32ae8 <__asan_internal_strnlen@@Base+0x268>
   32b00:	b	32a88 <__asan_internal_strnlen@@Base+0x208>
   32b04:	add	w1, w1, w0
   32b08:	lsl	w0, w8, w5
   32b0c:	bic	w6, w6, w0
   32b10:	b	32a70 <__asan_internal_strnlen@@Base+0x1f0>
   32b14:	add	x10, x10, #0x1
   32b18:	cmp	x10, x5
   32b1c:	b.cs	32b28 <__asan_internal_strnlen@@Base+0x2a8>  // b.hs, b.nlast
   32b20:	ubfiz	x7, x7, #1, #16
   32b24:	ldrh	w7, [x23, x7]
   32b28:	mov	w0, w8
   32b2c:	tst	w8, w1
   32b30:	b.eq	32b94 <__asan_internal_strnlen@@Base+0x314>  // b.none
   32b34:	nop
   32b38:	lsr	w0, w0, #1
   32b3c:	tst	w0, w1
   32b40:	b.ne	32b38 <__asan_internal_strnlen@@Base+0x2b8>  // b.any
   32b44:	cbnz	w0, 32b94 <__asan_internal_strnlen@@Base+0x314>
   32b48:	mov	w1, #0x0                   	// #0
   32b4c:	cmp	x10, x5
   32b50:	b.eq	329c4 <__asan_internal_strnlen@@Base+0x144>  // b.none
   32b54:	tst	w7, #0xfe00
   32b58:	b.eq	32ad4 <__asan_internal_strnlen@@Base+0x254>  // b.none
   32b5c:	b	32a88 <__asan_internal_strnlen@@Base+0x208>
   32b60:	add	x18, sp, #0x70
   32b64:	add	x17, sp, #0x40
   32b68:	mov	x5, #0x7                   	// #7
   32b6c:	mov	x10, #0x0                   	// #0
   32b70:	mov	w8, #0x1                   	// #1
   32b74:	lsl	x0, x5, #1
   32b78:	add	x1, x19, x0
   32b7c:	ldrh	w7, [x1, #16]
   32b80:	cbnz	w7, 32ba4 <__asan_internal_strnlen@@Base+0x324>
   32b84:	subs	x5, x5, #0x1
   32b88:	b.ne	32b74 <__asan_internal_strnlen@@Base+0x2f4>  // b.any
   32b8c:	mov	w0, #0x1                   	// #1
   32b90:	b	32a8c <__asan_internal_strnlen@@Base+0x20c>
   32b94:	sub	w2, w0, #0x1
   32b98:	and	w1, w2, w1
   32b9c:	add	w1, w0, w1
   32ba0:	b	32b4c <__asan_internal_strnlen@@Base+0x2cc>
   32ba4:	add	x1, x0, x18
   32ba8:	add	x0, x0, x17
   32bac:	ubfiz	w12, w5, #9, #7
   32bb0:	lsl	w4, w8, w5
   32bb4:	add	w11, w12, #0x1, lsl #12
   32bb8:	add	w9, w5, #0x7
   32bbc:	ldrh	w14, [x1, #16]
   32bc0:	sxtw	x21, w4
   32bc4:	ldurh	w6, [x0, #-2]
   32bc8:	and	x7, x7, #0xffff
   32bcc:	and	w11, w11, #0xffff
   32bd0:	mov	w4, w4
   32bd4:	mov	w20, w5
   32bd8:	lsl	w9, w8, w9
   32bdc:	mov	x16, #0x0                   	// #0
   32be0:	mov	x13, #0x0                   	// #0
   32be4:	mov	x24, #0x100                 	// #256
   32be8:	mov	x15, #0x0                   	// #0
   32bec:	mov	w2, w16
   32bf0:	cmp	x24, w6, uxtb
   32bf4:	and	x1, x6, #0xff
   32bf8:	b.eq	32c2c <__asan_internal_strnlen@@Base+0x3ac>  // b.none
   32bfc:	lsl	x2, x1, #1
   32c00:	ldrh	w0, [x22, x2]
   32c04:	cbnz	w0, 32ca8 <__asan_internal_strnlen@@Base+0x428>
   32c08:	tst	x10, #0xfffffffffffffe00
   32c0c:	b.ne	32a88 <__asan_internal_strnlen@@Base+0x208>  // b.any
   32c10:	add	w0, w11, w10
   32c14:	mov	x13, x10
   32c18:	mov	x24, x1
   32c1c:	add	x10, x10, x21
   32c20:	mov	x16, x5
   32c24:	strh	w0, [x22, x2]
   32c28:	mov	w2, w20
   32c2c:	lsr	w0, w6, #8
   32c30:	add	x1, x22, x13, lsl #1
   32c34:	lsl	w2, w8, w2
   32c38:	add	x1, x1, #0x200
   32c3c:	cmp	x2, x0
   32c40:	orr	w30, w12, w14
   32c44:	b.hi	32c5c <__asan_internal_strnlen@@Base+0x3dc>  // b.pmore
   32c48:	b	32c68 <__asan_internal_strnlen@@Base+0x3e8>
   32c4c:	strh	w30, [x1, x0, lsl #1]
   32c50:	add	x0, x0, x4
   32c54:	cmp	x2, x0
   32c58:	b.ls	32c68 <__asan_internal_strnlen@@Base+0x3e8>  // b.plast
   32c5c:	ldrh	w3, [x1, x0, lsl #1]
   32c60:	cbz	w3, 32c4c <__asan_internal_strnlen@@Base+0x3cc>
   32c64:	b	32a88 <__asan_internal_strnlen@@Base+0x208>
   32c68:	add	x15, x15, #0x1
   32c6c:	cmp	x7, x15
   32c70:	b.ls	32c7c <__asan_internal_strnlen@@Base+0x3fc>  // b.plast
   32c74:	ubfiz	x14, x14, #1, #16
   32c78:	ldrh	w14, [x23, x14]
   32c7c:	mov	w0, w9
   32c80:	tst	w9, w6
   32c84:	b.eq	32cc8 <__asan_internal_strnlen@@Base+0x448>  // b.none
   32c88:	lsr	w0, w0, #1
   32c8c:	tst	w0, w6
   32c90:	b.ne	32c88 <__asan_internal_strnlen@@Base+0x408>  // b.any
   32c94:	cbnz	w0, 32cc8 <__asan_internal_strnlen@@Base+0x448>
   32c98:	mov	w6, #0x0                   	// #0
   32c9c:	cmp	x7, x15
   32ca0:	b.ne	32bec <__asan_internal_strnlen@@Base+0x36c>  // b.any
   32ca4:	b	32b84 <__asan_internal_strnlen@@Base+0x304>
   32ca8:	tbz	w0, #12, 32a88 <__asan_internal_strnlen@@Base+0x208>
   32cac:	ubfx	x16, x0, #9, #3
   32cb0:	and	x13, x0, #0x1ff
   32cb4:	cmp	x16, x5
   32cb8:	mov	x2, x16
   32cbc:	b.cc	32a88 <__asan_internal_strnlen@@Base+0x208>  // b.lo, b.ul, b.last
   32cc0:	mov	x24, x1
   32cc4:	b	32c2c <__asan_internal_strnlen@@Base+0x3ac>
   32cc8:	sub	w1, w0, #0x1
   32ccc:	and	w6, w1, w6
   32cd0:	add	w6, w0, w6
   32cd4:	b	32c9c <__asan_internal_strnlen@@Base+0x41c>
   32cd8:	mov	x10, x0
   32cdc:	mov	x11, x2
   32ce0:	mov	x0, x4
   32ce4:	ldr	w2, [x10, #8]
   32ce8:	cbnz	w2, 32d70 <__asan_internal_strnlen@@Base+0x4f0>
   32cec:	ldr	x2, [x10, #48]
   32cf0:	cbz	x2, 32d54 <__asan_internal_strnlen@@Base+0x4d4>
   32cf4:	nop
   32cf8:	ldp	x9, x8, [x2, #8]
   32cfc:	mov	x7, #0x0                   	// #0
   32d00:	add	x3, x8, x7
   32d04:	cmp	x8, x7
   32d08:	and	x5, x3, #0xfffffffffffffffe
   32d0c:	b.ls	32d4c <__asan_internal_strnlen@@Base+0x4cc>  // b.plast
   32d10:	lsr	x3, x3, #1
   32d14:	add	x5, x5, x3
   32d18:	add	x5, x9, x5, lsl #3
   32d1c:	ldr	x6, [x5, #8]
   32d20:	cmp	x6, x1
   32d24:	b.hi	32d68 <__asan_internal_strnlen@@Base+0x4e8>  // b.pmore
   32d28:	ldr	x4, [x5, #16]
   32d2c:	add	x7, x3, #0x1
   32d30:	add	x3, x6, x4
   32d34:	cmp	x3, x1
   32d38:	b.ls	32d00 <__asan_internal_strnlen@@Base+0x480>  // b.plast
   32d3c:	ldr	x2, [x5]
   32d40:	mov	x3, x6
   32d44:	mov	x16, x11
   32d48:	br	x16
   32d4c:	ldr	x2, [x2]
   32d50:	cbnz	x2, 32cf8 <__asan_internal_strnlen@@Base+0x478>
   32d54:	mov	x16, x11
   32d58:	mov	x4, #0x0                   	// #0
   32d5c:	mov	x3, #0x0                   	// #0
   32d60:	mov	x2, #0x0                   	// #0
   32d64:	br	x16
   32d68:	mov	x8, x3
   32d6c:	b	32d00 <__asan_internal_strnlen@@Base+0x480>
   32d70:	add	x10, x10, #0x30
   32d74:	nop
   32d78:	ldar	x10, [x10]
   32d7c:	cbz	x10, 32d54 <__asan_internal_strnlen@@Base+0x4d4>
   32d80:	ldp	x9, x8, [x10, #8]
   32d84:	mov	x7, #0x0                   	// #0
   32d88:	add	x3, x8, x7
   32d8c:	cmp	x8, x7
   32d90:	and	x5, x3, #0xfffffffffffffffe
   32d94:	b.ls	32d78 <__asan_internal_strnlen@@Base+0x4f8>  // b.plast
   32d98:	lsr	x3, x3, #1
   32d9c:	add	x5, x5, x3
   32da0:	add	x5, x9, x5, lsl #3
   32da4:	ldr	x6, [x5, #8]
   32da8:	cmp	x6, x1
   32dac:	b.hi	32dd4 <__asan_internal_strnlen@@Base+0x554>  // b.pmore
   32db0:	ldr	x4, [x5, #16]
   32db4:	add	x7, x3, #0x1
   32db8:	add	x3, x6, x4
   32dbc:	cmp	x3, x1
   32dc0:	b.ls	32d88 <__asan_internal_strnlen@@Base+0x508>  // b.plast
   32dc4:	ldr	x2, [x5]
   32dc8:	mov	x3, x6
   32dcc:	mov	x16, x11
   32dd0:	br	x16
   32dd4:	mov	x8, x3
   32dd8:	b	32d88 <__asan_internal_strnlen@@Base+0x508>
   32ddc:	nop
   32de0:	stp	x29, x30, [sp, #-144]!
   32de4:	mov	x29, sp
   32de8:	stp	x27, x28, [sp, #80]
   32dec:	add	x28, x2, x4
   32df0:	mov	x27, x5
   32df4:	stp	x19, x20, [sp, #16]
   32df8:	mov	x20, x6
   32dfc:	stp	x21, x22, [sp, #32]
   32e00:	mov	x22, x2
   32e04:	mov	x21, x7
   32e08:	stp	x23, x24, [sp, #48]
   32e0c:	mov	x23, x0
   32e10:	mov	x0, x5
   32e14:	stp	x25, x26, [sp, #64]
   32e18:	mov	x25, x4
   32e1c:	stp	x3, x1, [sp, #112]
   32e20:	bl	64b0 <__asan_internal_strlen@plt>
   32e24:	mov	x24, x0
   32e28:	add	x0, x28, x0
   32e2c:	mov	x3, x21
   32e30:	add	x26, x0, #0x1
   32e34:	mov	x2, x20
   32e38:	mov	x1, x26
   32e3c:	str	x0, [sp, #104]
   32e40:	mov	x0, x23
   32e44:	bl	65b0 <__asan_backtrace_alloc@plt>
   32e48:	cbz	x0, 32ed8 <__asan_internal_strnlen@@Base+0x658>
   32e4c:	ldr	x8, [sp, #120]
   32e50:	mov	x19, x0
   32e54:	mov	x2, x22
   32e58:	mov	x1, x8
   32e5c:	bl	64a0 <__asan_internal_memcpy@plt>
   32e60:	ldr	x1, [sp, #112]
   32e64:	mov	x2, x25
   32e68:	add	x0, x19, x22
   32e6c:	bl	64a0 <__asan_internal_memcpy@plt>
   32e70:	mov	x2, x24
   32e74:	mov	x1, x27
   32e78:	add	x0, x19, x28
   32e7c:	bl	64a0 <__asan_internal_memcpy@plt>
   32e80:	ldr	x0, [sp, #104]
   32e84:	add	x3, sp, #0x8c
   32e88:	mov	x2, x21
   32e8c:	mov	x1, x20
   32e90:	strb	wzr, [x19, x0]
   32e94:	mov	x0, x19
   32e98:	bl	6a30 <__asan_backtrace_open@plt>
   32e9c:	mov	w22, w0
   32ea0:	mov	x4, x21
   32ea4:	mov	x3, x20
   32ea8:	mov	x2, x26
   32eac:	mov	x1, x19
   32eb0:	mov	x0, x23
   32eb4:	bl	6890 <__asan_backtrace_free@plt>
   32eb8:	mov	w0, w22
   32ebc:	ldp	x19, x20, [sp, #16]
   32ec0:	ldp	x21, x22, [sp, #32]
   32ec4:	ldp	x23, x24, [sp, #48]
   32ec8:	ldp	x25, x26, [sp, #64]
   32ecc:	ldp	x27, x28, [sp, #80]
   32ed0:	ldp	x29, x30, [sp], #144
   32ed4:	ret
   32ed8:	mov	w22, #0xffffffff            	// #-1
   32edc:	b	32eb8 <__asan_internal_strnlen@@Base+0x638>
   32ee0:	stp	x29, x30, [sp, #-256]!
   32ee4:	mov	x29, sp
   32ee8:	stp	x19, x20, [sp, #16]
   32eec:	mov	x20, x0
   32ef0:	mov	x19, x1
   32ef4:	stp	x21, x22, [sp, #32]
   32ef8:	mov	x21, x3
   32efc:	mov	x22, x4
   32f00:	stp	x27, x28, [sp, #80]
   32f04:	add	x27, sp, #0x80
   32f08:	stp	x23, x24, [sp, #48]
   32f0c:	mov	x24, #0x0                   	// #0
   32f10:	stp	x25, x26, [sp, #64]
   32f14:	mov	x25, #0x0                   	// #0
   32f18:	str	x2, [sp, #104]
   32f1c:	mov	x2, x27
   32f20:	mov	x1, x19
   32f24:	mov	w0, #0x0                   	// #0
   32f28:	bl	68a0 <__lxstat@plt>
   32f2c:	tbnz	w0, #31, 32fb8 <__asan_internal_strnlen@@Base+0x738>
   32f30:	ldr	w0, [sp, #144]
   32f34:	and	w0, w0, #0xf000
   32f38:	cmp	w0, #0xa, lsl #12
   32f3c:	b.ne	32fb8 <__asan_internal_strnlen@@Base+0x738>  // b.any
   32f40:	mov	x28, #0x80                  	// #128
   32f44:	b	32f6c <__asan_internal_strnlen@@Base+0x6ec>
   32f48:	cmp	x1, x0
   32f4c:	b.hi	3302c <__asan_internal_strnlen@@Base+0x7ac>  // b.pmore
   32f50:	mov	x2, x28
   32f54:	mov	x1, x26
   32f58:	mov	x4, x22
   32f5c:	mov	x3, x21
   32f60:	mov	x0, x20
   32f64:	lsl	x28, x28, #1
   32f68:	bl	6890 <__asan_backtrace_free@plt>
   32f6c:	mov	x2, x21
   32f70:	mov	x3, x22
   32f74:	mov	x1, x28
   32f78:	mov	x0, x20
   32f7c:	bl	65b0 <__asan_backtrace_alloc@plt>
   32f80:	mov	x26, x0
   32f84:	mov	x2, x28
   32f88:	mov	x0, x19
   32f8c:	cbz	x26, 32fb8 <__asan_internal_strnlen@@Base+0x738>
   32f90:	mov	x1, x26
   32f94:	bl	63b0 <readlink@plt>
   32f98:	sub	x1, x28, #0x1
   32f9c:	tbz	x0, #63, 32f48 <__asan_internal_strnlen@@Base+0x6c8>
   32fa0:	mov	x2, x28
   32fa4:	mov	x1, x26
   32fa8:	mov	x4, x22
   32fac:	mov	x3, x21
   32fb0:	mov	x0, x20
   32fb4:	bl	6890 <__asan_backtrace_free@plt>
   32fb8:	mov	x0, x19
   32fbc:	mov	w1, #0x2f                  	// #47
   32fc0:	bl	6780 <strrchr@plt>
   32fc4:	cbz	x0, 331c8 <__asan_internal_strnlen@@Base+0x948>
   32fc8:	add	x0, x0, #0x1
   32fcc:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   32fd0:	sub	x27, x0, x19
   32fd4:	ldr	x5, [sp, #104]
   32fd8:	add	x3, x3, #0x428
   32fdc:	mov	x7, x22
   32fe0:	mov	x6, x21
   32fe4:	mov	x2, x27
   32fe8:	mov	x1, x19
   32fec:	mov	x0, x20
   32ff0:	mov	x4, #0x0                   	// #0
   32ff4:	bl	32de0 <__asan_internal_strnlen@@Base+0x560>
   32ff8:	mov	w23, w0
   32ffc:	tbnz	w0, #31, 3310c <__asan_internal_strnlen@@Base+0x88c>
   33000:	cmp	x24, #0x0
   33004:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   33008:	b.ne	33190 <__asan_internal_strnlen@@Base+0x910>  // b.any
   3300c:	mov	w0, w23
   33010:	ldp	x19, x20, [sp, #16]
   33014:	ldp	x21, x22, [sp, #32]
   33018:	ldp	x23, x24, [sp, #48]
   3301c:	ldp	x25, x26, [sp, #64]
   33020:	ldp	x27, x28, [sp, #80]
   33024:	ldp	x29, x30, [sp], #256
   33028:	ret
   3302c:	strb	wzr, [x26, x0]
   33030:	ldrb	w0, [x26]
   33034:	cmp	w0, #0x2f
   33038:	b.eq	330e0 <__asan_internal_strnlen@@Base+0x860>  // b.none
   3303c:	mov	x0, x19
   33040:	mov	w1, #0x2f                  	// #47
   33044:	bl	6780 <strrchr@plt>
   33048:	cbz	x0, 330e0 <__asan_internal_strnlen@@Base+0x860>
   3304c:	add	x23, x0, #0x1
   33050:	mov	x0, x26
   33054:	sub	x23, x23, x19
   33058:	bl	64b0 <__asan_internal_strlen@plt>
   3305c:	add	x1, x23, #0x1
   33060:	mov	x3, x22
   33064:	add	x0, x1, x0
   33068:	mov	x2, x21
   3306c:	mov	x1, x0
   33070:	str	x0, [sp, #112]
   33074:	mov	x0, x20
   33078:	bl	65b0 <__asan_backtrace_alloc@plt>
   3307c:	str	x0, [sp, #120]
   33080:	cbz	x0, 331d8 <__asan_internal_strnlen@@Base+0x958>
   33084:	mov	x2, x23
   33088:	mov	x1, x19
   3308c:	bl	64a0 <__asan_internal_memcpy@plt>
   33090:	ldr	x3, [sp, #120]
   33094:	mov	x0, x26
   33098:	add	x23, x3, x23
   3309c:	bl	64b0 <__asan_internal_strlen@plt>
   330a0:	mov	x2, x0
   330a4:	mov	x1, x26
   330a8:	mov	x0, x23
   330ac:	bl	64a0 <__asan_internal_memcpy@plt>
   330b0:	mov	x0, x26
   330b4:	bl	64b0 <__asan_internal_strlen@plt>
   330b8:	mov	x7, x0
   330bc:	mov	x2, x28
   330c0:	mov	x1, x26
   330c4:	ldp	x28, x3, [sp, #112]
   330c8:	strb	wzr, [x23, x7]
   330cc:	mov	x4, x22
   330d0:	mov	x0, x20
   330d4:	mov	x26, x3
   330d8:	mov	x3, x21
   330dc:	bl	6890 <__asan_backtrace_free@plt>
   330e0:	cbz	x24, 330fc <__asan_internal_strnlen@@Base+0x87c>
   330e4:	mov	x2, x25
   330e8:	mov	x1, x24
   330ec:	mov	x4, x22
   330f0:	mov	x3, x21
   330f4:	mov	x0, x20
   330f8:	bl	6890 <__asan_backtrace_free@plt>
   330fc:	mov	x24, x26
   33100:	mov	x25, x28
   33104:	mov	x19, x26
   33108:	b	32f1c <__asan_internal_strnlen@@Base+0x69c>
   3310c:	adrp	x23, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   33110:	add	x23, x23, #0xd8
   33114:	mov	x0, x23
   33118:	bl	64b0 <__asan_internal_strlen@plt>
   3311c:	ldr	x5, [sp, #104]
   33120:	mov	x4, x0
   33124:	mov	x3, x23
   33128:	mov	x7, x22
   3312c:	mov	x6, x21
   33130:	mov	x2, x27
   33134:	mov	x1, x19
   33138:	mov	x0, x20
   3313c:	bl	32de0 <__asan_internal_strnlen@@Base+0x560>
   33140:	mov	w23, w0
   33144:	tbz	w0, #31, 33000 <__asan_internal_strnlen@@Base+0x780>
   33148:	adrp	x23, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   3314c:	add	x23, x23, #0xe0
   33150:	mov	x0, x23
   33154:	bl	64b0 <__asan_internal_strlen@plt>
   33158:	ldr	x5, [sp, #104]
   3315c:	mov	x2, x0
   33160:	mov	x1, x23
   33164:	mov	x7, x22
   33168:	mov	x6, x21
   3316c:	mov	x4, x27
   33170:	mov	x3, x19
   33174:	mov	x0, x20
   33178:	bl	32de0 <__asan_internal_strnlen@@Base+0x560>
   3317c:	cmp	w0, #0x0
   33180:	csinv	w23, w0, wzr, ge  // ge = tcont
   33184:	cmp	x24, #0x0
   33188:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   3318c:	b.eq	3300c <__asan_internal_strnlen@@Base+0x78c>  // b.none
   33190:	mov	x4, x22
   33194:	mov	x3, x21
   33198:	mov	x2, x25
   3319c:	mov	x1, x24
   331a0:	mov	x0, x20
   331a4:	bl	6890 <__asan_backtrace_free@plt>
   331a8:	mov	w0, w23
   331ac:	ldp	x19, x20, [sp, #16]
   331b0:	ldp	x21, x22, [sp, #32]
   331b4:	ldp	x23, x24, [sp, #48]
   331b8:	ldp	x25, x26, [sp, #64]
   331bc:	ldp	x27, x28, [sp, #80]
   331c0:	ldp	x29, x30, [sp], #256
   331c4:	ret
   331c8:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   331cc:	mov	x27, #0x0                   	// #0
   331d0:	add	x19, x3, #0x428
   331d4:	b	32fd4 <__asan_internal_strnlen@@Base+0x754>
   331d8:	mov	w23, #0xffffffff            	// #-1
   331dc:	b	33000 <__asan_internal_strnlen@@Base+0x780>
   331e0:	stp	x29, x30, [sp, #-224]!
   331e4:	cmp	x1, #0x4
   331e8:	mov	x29, sp
   331ec:	stp	x19, x20, [sp, #16]
   331f0:	mov	x19, x3
   331f4:	stp	x21, x22, [sp, #32]
   331f8:	add	x21, x0, x1
   331fc:	mov	x22, x1
   33200:	stp	x23, x24, [sp, #48]
   33204:	mov	x23, x0
   33208:	add	x0, x3, x4
   3320c:	str	x0, [sp, #104]
   33210:	mov	x24, x4
   33214:	b.le	33cd0 <__asan_internal_strnlen@@Base+0x1450>
   33218:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   3321c:	mov	x13, x2
   33220:	add	x0, x20, #0x2f0
   33224:	mov	x5, x23
   33228:	mov	x20, x3
   3322c:	str	x0, [sp, #112]
   33230:	add	x0, x0, #0x200
   33234:	str	x0, [sp, #120]
   33238:	ldrb	w0, [x5]
   3323c:	and	w1, w0, #0xf
   33240:	cmp	w1, #0x8
   33244:	b.ne	336cc <__asan_internal_strnlen@@Base+0xe4c>  // b.any
   33248:	cmp	w0, #0x7f
   3324c:	b.hi	336cc <__asan_internal_strnlen@@Base+0xe4c>  // b.pmore
   33250:	ldrb	w1, [x5, #1]
   33254:	ldrh	w0, [x5]
   33258:	rev16	w0, w0
   3325c:	tbnz	w1, #5, 336cc <__asan_internal_strnlen@@Base+0xe4c>
   33260:	mov	x1, #0x4211                	// #16913
   33264:	and	x0, x0, #0xffff
   33268:	movk	x1, #0x2108, lsl #16
   3326c:	movk	x1, #0x1084, lsl #32
   33270:	movk	x1, #0x842, lsl #48
   33274:	umulh	x2, x0, x1
   33278:	sub	x1, x0, x2
   3327c:	add	x1, x2, x1, lsr #1
   33280:	lsr	x1, x1, #4
   33284:	lsl	x2, x1, #5
   33288:	sub	x1, x2, x1
   3328c:	cmp	x0, x1
   33290:	b.ne	336cc <__asan_internal_strnlen@@Base+0xe4c>  // b.any
   33294:	add	x5, x5, #0x2
   33298:	ands	x10, x5, #0x3
   3329c:	b.eq	33c24 <__asan_internal_strnlen@@Base+0x13a4>  // b.none
   332a0:	mov	x10, #0x0                   	// #0
   332a4:	mov	w3, #0x0                   	// #0
   332a8:	ldrb	w0, [x5], #1
   332ac:	lsl	x0, x0, x3
   332b0:	tst	x5, #0x3
   332b4:	orr	x10, x10, x0
   332b8:	add	w3, w3, #0x8
   332bc:	b.ne	332a8 <__asan_internal_strnlen@@Base+0xa28>  // b.any
   332c0:	cmp	w3, #0xe
   332c4:	b.hi	332e8 <__asan_internal_strnlen@@Base+0xa68>  // b.pmore
   332c8:	sub	x0, x21, x5
   332cc:	cmp	x0, #0x3
   332d0:	b.le	336cc <__asan_internal_strnlen@@Base+0xe4c>
   332d4:	ldr	w0, [x5], #4
   332d8:	lsl	x0, x0, x3
   332dc:	add	w3, w3, #0x20
   332e0:	prfm	pldl1strm, [x5]
   332e4:	orr	x10, x10, x0
   332e8:	ubfx	w0, w10, #1, #2
   332ec:	sub	w7, w3, #0x3
   332f0:	cmp	w0, #0x3
   332f4:	b.eq	336cc <__asan_internal_strnlen@@Base+0xe4c>  // b.none
   332f8:	cbz	w0, 33758 <__asan_internal_strnlen@@Base+0xed8>
   332fc:	stp	x25, x26, [sp, #64]
   33300:	cmp	w0, #0x1
   33304:	lsr	x6, x10, #3
   33308:	stp	x27, x28, [sp, #80]
   3330c:	b.eq	338e4 <__asan_internal_strnlen@@Base+0x1064>  // b.none
   33310:	cmp	w7, #0xe
   33314:	b.hi	33338 <__asan_internal_strnlen@@Base+0xab8>  // b.pmore
   33318:	sub	x0, x21, x5
   3331c:	cmp	x0, #0x3
   33320:	b.le	336e4 <__asan_internal_strnlen@@Base+0xe64>
   33324:	ldr	w0, [x5], #4
   33328:	lsl	x0, x0, x7
   3332c:	add	w7, w3, #0x1d
   33330:	prfm	pldl1strm, [x5]
   33334:	orr	x6, x6, x0
   33338:	and	w25, w6, #0x1f
   3333c:	ubfx	w26, w6, #5, #5
   33340:	add	w25, w25, #0x101
   33344:	sub	w3, w7, #0xe
   33348:	str	w3, [sp, #128]
   3334c:	add	w26, w26, #0x1
   33350:	stp	x10, x5, [sp, #136]
   33354:	cmp	w25, #0x11e
   33358:	ubfx	w27, w6, #10, #4
   3335c:	str	x13, [sp, #152]
   33360:	ccmp	w26, #0x1e, #0x2, ls  // ls = plast
   33364:	str	w7, [sp, #168]
   33368:	add	w27, w27, #0x4
   3336c:	lsr	x28, x6, #14
   33370:	b.hi	336e4 <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   33374:	add	x14, sp, #0xc8
   33378:	mov	x2, #0x13                  	// #19
   3337c:	mov	x0, x14
   33380:	mov	w1, #0x0                   	// #0
   33384:	str	x14, [sp, #160]
   33388:	bl	6530 <__asan_internal_memset@plt>
   3338c:	ldr	w3, [sp, #128]
   33390:	ldp	x10, x5, [sp, #136]
   33394:	cmp	w3, #0xe
   33398:	ldp	x13, x14, [sp, #152]
   3339c:	b.hi	333c4 <__asan_internal_strnlen@@Base+0xb44>  // b.pmore
   333a0:	sub	x0, x21, x5
   333a4:	cmp	x0, #0x3
   333a8:	b.le	336e4 <__asan_internal_strnlen@@Base+0xe64>
   333ac:	ldr	w0, [x5], #4
   333b0:	ldr	w7, [sp, #168]
   333b4:	lsl	x0, x0, x3
   333b8:	add	w3, w7, #0x12
   333bc:	prfm	pldl1strm, [x5]
   333c0:	orr	x28, x28, x0
   333c4:	and	w0, w28, #0x7
   333c8:	strb	w0, [sp, #216]
   333cc:	ubfx	w0, w28, #3, #3
   333d0:	strb	w0, [sp, #217]
   333d4:	ubfx	w0, w28, #6, #3
   333d8:	strb	w0, [sp, #218]
   333dc:	ubfx	w0, w28, #9, #3
   333e0:	strb	w0, [sp, #200]
   333e4:	sub	w7, w3, #0xc
   333e8:	cmp	w27, #0x4
   333ec:	lsr	x6, x28, #12
   333f0:	b.eq	335a0 <__asan_internal_strnlen@@Base+0xd20>  // b.none
   333f4:	and	w6, w6, #0x7
   333f8:	strb	w6, [sp, #208]
   333fc:	cmp	w27, #0x5
   33400:	lsr	x6, x28, #15
   33404:	sub	w7, w3, #0xf
   33408:	b.eq	335a0 <__asan_internal_strnlen@@Base+0xd20>  // b.none
   3340c:	cmp	w7, #0xe
   33410:	b.hi	33434 <__asan_internal_strnlen@@Base+0xbb4>  // b.pmore
   33414:	sub	x0, x21, x5
   33418:	cmp	x0, #0x3
   3341c:	b.le	336e4 <__asan_internal_strnlen@@Base+0xe64>
   33420:	ldr	w0, [x5], #4
   33424:	lsl	x0, x0, x7
   33428:	add	w7, w3, #0x11
   3342c:	prfm	pldl1strm, [x5]
   33430:	orr	x6, x6, x0
   33434:	and	w0, w6, #0x7
   33438:	strb	w0, [sp, #207]
   3343c:	cmp	w27, #0x6
   33440:	lsr	x0, x6, #3
   33444:	b.eq	33c44 <__asan_internal_strnlen@@Base+0x13c4>  // b.none
   33448:	and	w0, w0, #0x7
   3344c:	strb	w0, [sp, #209]
   33450:	cmp	w27, #0x7
   33454:	lsr	x0, x6, #6
   33458:	b.eq	33c58 <__asan_internal_strnlen@@Base+0x13d8>  // b.none
   3345c:	and	w0, w0, #0x7
   33460:	strb	w0, [sp, #206]
   33464:	cmp	w27, #0x8
   33468:	lsr	x0, x6, #9
   3346c:	b.eq	33c38 <__asan_internal_strnlen@@Base+0x13b8>  // b.none
   33470:	and	w0, w0, #0x7
   33474:	strb	w0, [sp, #210]
   33478:	cmp	w27, #0x9
   3347c:	lsr	x0, x6, #12
   33480:	b.eq	33c2c <__asan_internal_strnlen@@Base+0x13ac>  // b.none
   33484:	and	w0, w0, #0x7
   33488:	strb	w0, [sp, #205]
   3348c:	lsr	x6, x6, #15
   33490:	cmp	w27, #0xa
   33494:	sub	w0, w7, #0xf
   33498:	b.eq	33f70 <__asan_internal_strnlen@@Base+0x16f0>  // b.none
   3349c:	cmp	w0, #0xe
   334a0:	b.hi	334c4 <__asan_internal_strnlen@@Base+0xc44>  // b.pmore
   334a4:	sub	x1, x21, x5
   334a8:	cmp	x1, #0x3
   334ac:	b.le	336e4 <__asan_internal_strnlen@@Base+0xe64>
   334b0:	ldr	w1, [x5], #4
   334b4:	lsl	x1, x1, x0
   334b8:	add	w0, w7, #0x11
   334bc:	prfm	pldl1strm, [x5]
   334c0:	orr	x6, x6, x1
   334c4:	and	w1, w6, #0x7
   334c8:	strb	w1, [sp, #211]
   334cc:	cmp	w27, #0xb
   334d0:	lsr	x1, x6, #3
   334d4:	b.eq	33f78 <__asan_internal_strnlen@@Base+0x16f8>  // b.none
   334d8:	and	w1, w1, #0x7
   334dc:	strb	w1, [sp, #204]
   334e0:	cmp	w27, #0xc
   334e4:	lsr	x1, x6, #6
   334e8:	b.eq	33f98 <__asan_internal_strnlen@@Base+0x1718>  // b.none
   334ec:	and	w1, w1, #0x7
   334f0:	strb	w1, [sp, #212]
   334f4:	cmp	w27, #0xd
   334f8:	lsr	x1, x6, #9
   334fc:	b.eq	33fa4 <__asan_internal_strnlen@@Base+0x1724>  // b.none
   33500:	and	w1, w1, #0x7
   33504:	strb	w1, [sp, #203]
   33508:	cmp	w27, #0xe
   3350c:	lsr	x1, x6, #12
   33510:	b.eq	33fb8 <__asan_internal_strnlen@@Base+0x1738>  // b.none
   33514:	and	w1, w1, #0x7
   33518:	strb	w1, [sp, #213]
   3351c:	lsr	x6, x6, #15
   33520:	cmp	w27, #0xf
   33524:	sub	w7, w0, #0xf
   33528:	b.eq	335a0 <__asan_internal_strnlen@@Base+0xd20>  // b.none
   3352c:	cmp	w7, #0xe
   33530:	b.hi	33554 <__asan_internal_strnlen@@Base+0xcd4>  // b.pmore
   33534:	sub	x1, x21, x5
   33538:	cmp	x1, #0x3
   3353c:	b.le	336e4 <__asan_internal_strnlen@@Base+0xe64>
   33540:	ldr	w1, [x5], #4
   33544:	lsl	x1, x1, x7
   33548:	add	w7, w0, #0x11
   3354c:	prfm	pldl1strm, [x5]
   33550:	orr	x6, x6, x1
   33554:	and	w0, w6, #0x7
   33558:	strb	w0, [sp, #202]
   3355c:	cmp	w27, #0x10
   33560:	lsr	x0, x6, #3
   33564:	b.eq	33c44 <__asan_internal_strnlen@@Base+0x13c4>  // b.none
   33568:	and	w0, w0, #0x7
   3356c:	strb	w0, [sp, #214]
   33570:	cmp	w27, #0x11
   33574:	lsr	x0, x6, #6
   33578:	b.eq	33c58 <__asan_internal_strnlen@@Base+0x13d8>  // b.none
   3357c:	and	w0, w0, #0x7
   33580:	strb	w0, [sp, #201]
   33584:	cmp	w27, #0x12
   33588:	lsr	x0, x6, #9
   3358c:	b.eq	33c38 <__asan_internal_strnlen@@Base+0x13b8>  // b.none
   33590:	lsr	x6, x6, #12
   33594:	sub	w7, w7, #0xc
   33598:	and	w0, w0, #0x7
   3359c:	strb	w0, [sp, #215]
   335a0:	mov	x0, x14
   335a4:	mov	x3, x13
   335a8:	mov	x2, x13
   335ac:	mov	x1, #0x13                  	// #19
   335b0:	stp	x13, x10, [sp, #128]
   335b4:	str	x5, [sp, #144]
   335b8:	str	w7, [sp, #152]
   335bc:	str	x6, [sp, #160]
   335c0:	bl	328e8 <__asan_internal_strnlen@@Base+0x68>
   335c4:	cbz	w0, 336e4 <__asan_internal_strnlen@@Base+0xe64>
   335c8:	ldp	x13, x10, [sp, #128]
   335cc:	add	x3, x25, x26
   335d0:	mov	x1, #0x1278                	// #4728
   335d4:	ldr	w7, [sp, #152]
   335d8:	ldr	x5, [sp, #144]
   335dc:	ldr	x6, [sp, #160]
   335e0:	add	x28, x13, x1
   335e4:	add	x3, x28, x3
   335e8:	cmp	x28, x3
   335ec:	b.cs	33c64 <__asan_internal_strnlen@@Base+0x13e4>  // b.hs, b.nlast
   335f0:	mov	x27, x28
   335f4:	b	33608 <__asan_internal_strnlen@@Base+0xd88>
   335f8:	sub	w7, w7, #0x1
   335fc:	strb	w0, [x27], #1
   33600:	cmp	x3, x27
   33604:	b.ls	33c64 <__asan_internal_strnlen@@Base+0x13e4>  // b.plast
   33608:	cmp	w7, #0xe
   3360c:	b.hi	33630 <__asan_internal_strnlen@@Base+0xdb0>  // b.pmore
   33610:	sub	x0, x21, x5
   33614:	cmp	x0, #0x3
   33618:	b.le	336e4 <__asan_internal_strnlen@@Base+0xe64>
   3361c:	ldr	w0, [x5], #4
   33620:	lsl	x0, x0, x7
   33624:	add	w7, w7, #0x20
   33628:	prfm	pldl1strm, [x5]
   3362c:	orr	x6, x6, x0
   33630:	and	x0, x6, #0xff
   33634:	ldrh	w0, [x13, x0, lsl #1]
   33638:	tbnz	w0, #12, 336e4 <__asan_internal_strnlen@@Base+0xe64>
   3363c:	ubfx	x1, x0, #9, #3
   33640:	tst	w0, #0x1f0
   33644:	add	w2, w1, #0x1
   33648:	sub	w7, w7, w1
   3364c:	and	w0, w0, #0x1ff
   33650:	lsr	x6, x6, x2
   33654:	b.eq	335f8 <__asan_internal_strnlen@@Base+0xd78>  // b.none
   33658:	cmp	w0, #0x10
   3365c:	b.eq	33704 <__asan_internal_strnlen@@Base+0xe84>  // b.none
   33660:	cmp	w0, #0x11
   33664:	b.eq	33840 <__asan_internal_strnlen@@Base+0xfc0>  // b.none
   33668:	stp	x10, x5, [sp, #128]
   3366c:	cmp	w0, #0x12
   33670:	str	x13, [sp, #144]
   33674:	b.ne	336e4 <__asan_internal_strnlen@@Base+0xe64>  // b.any
   33678:	and	w2, w6, #0x7f
   3367c:	sub	w7, w7, #0x8
   33680:	lsr	x6, x6, #7
   33684:	str	x6, [sp, #152]
   33688:	str	w7, [sp, #160]
   3368c:	sub	x0, x3, x27
   33690:	str	x3, [sp, #168]
   33694:	add	w2, w2, #0xb
   33698:	cmp	w2, w0
   3369c:	b.hi	336e4 <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   336a0:	mov	x0, x27
   336a4:	mov	w1, #0x0                   	// #0
   336a8:	add	x27, x27, x2
   336ac:	bl	6530 <__asan_internal_memset@plt>
   336b0:	ldr	w7, [sp, #160]
   336b4:	ldp	x10, x5, [sp, #128]
   336b8:	ldp	x13, x6, [sp, #144]
   336bc:	ldr	x3, [sp, #168]
   336c0:	b	33600 <__asan_internal_strnlen@@Base+0xd80>
   336c4:	ldp	x25, x26, [sp, #64]
   336c8:	ldp	x27, x28, [sp, #80]
   336cc:	mov	w0, #0x0                   	// #0
   336d0:	ldp	x19, x20, [sp, #16]
   336d4:	ldp	x21, x22, [sp, #32]
   336d8:	ldp	x23, x24, [sp, #48]
   336dc:	ldp	x29, x30, [sp], #224
   336e0:	ret
   336e4:	mov	w0, #0x0                   	// #0
   336e8:	ldp	x19, x20, [sp, #16]
   336ec:	ldp	x21, x22, [sp, #32]
   336f0:	ldp	x23, x24, [sp, #48]
   336f4:	ldp	x25, x26, [sp, #64]
   336f8:	ldp	x27, x28, [sp, #80]
   336fc:	ldp	x29, x30, [sp], #224
   33700:	ret
   33704:	cmp	x28, x27
   33708:	b.eq	336e4 <__asan_internal_strnlen@@Base+0xe64>  // b.none
   3370c:	and	w0, w6, #0x3
   33710:	sub	x1, x3, x27
   33714:	add	w0, w0, #0x3
   33718:	sub	w7, w7, #0x3
   3371c:	lsr	x6, x6, #2
   33720:	cmp	w0, w1
   33724:	b.hi	336e4 <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   33728:	ldurb	w1, [x27, #-1]
   3372c:	cmp	w0, #0x5
   33730:	b.eq	33824 <__asan_internal_strnlen@@Base+0xfa4>  // b.none
   33734:	cmp	w0, #0x6
   33738:	b.eq	33820 <__asan_internal_strnlen@@Base+0xfa0>  // b.none
   3373c:	cmp	w0, #0x4
   33740:	b.eq	33828 <__asan_internal_strnlen@@Base+0xfa8>  // b.none
   33744:	add	x27, x27, #0x3
   33748:	sturb	w1, [x27, #-3]
   3374c:	sturb	w1, [x27, #-2]
   33750:	sturb	w1, [x27, #-1]
   33754:	b	33600 <__asan_internal_strnlen@@Base+0xd80>
   33758:	sub	w3, w3, #0xc
   3375c:	stp	x10, x13, [sp, #128]
   33760:	lsr	w3, w3, #3
   33764:	mvn	x2, x3
   33768:	add	x6, x5, x2
   3376c:	sub	x0, x21, x6
   33770:	cmp	x0, #0x3
   33774:	b.le	336cc <__asan_internal_strnlen@@Base+0xe4c>
   33778:	ldrb	w7, [x6, #3]
   3377c:	sub	x3, x5, x3
   33780:	ldrb	w0, [x6, #2]
   33784:	add	x1, x3, #0x3
   33788:	ldrb	w2, [x5, x2]
   3378c:	ldrb	w3, [x6, #1]
   33790:	bfi	w0, w7, #8, #24
   33794:	mvn	w0, w0
   33798:	bfi	w2, w3, #8, #24
   3379c:	cmp	w2, w0, uxth
   337a0:	b.ne	336cc <__asan_internal_strnlen@@Base+0xe4c>  // b.any
   337a4:	sub	x0, x21, x1
   337a8:	cmp	w2, w0
   337ac:	b.hi	336cc <__asan_internal_strnlen@@Base+0xe4c>  // b.pmore
   337b0:	ldr	x0, [sp, #104]
   337b4:	sub	x0, x0, x20
   337b8:	cmp	w2, w0
   337bc:	b.hi	336cc <__asan_internal_strnlen@@Base+0xe4c>  // b.pmore
   337c0:	stp	x25, x26, [sp, #64]
   337c4:	and	x25, x2, #0xffff
   337c8:	add	x5, x1, x25
   337cc:	mov	x0, x20
   337d0:	mov	x2, x25
   337d4:	str	x5, [sp, #144]
   337d8:	add	x20, x20, x25
   337dc:	bl	64a0 <__asan_internal_memcpy@plt>
   337e0:	ldr	x5, [sp, #144]
   337e4:	ldp	x10, x13, [sp, #128]
   337e8:	ands	x6, x5, #0x3
   337ec:	b.eq	33fb0 <__asan_internal_strnlen@@Base+0x1730>  // b.none
   337f0:	mov	x6, #0x0                   	// #0
   337f4:	mov	w3, #0x0                   	// #0
   337f8:	ldrb	w0, [x5], #1
   337fc:	lsl	x0, x0, x3
   33800:	tst	x5, #0x3
   33804:	orr	x6, x6, x0
   33808:	add	w3, w3, #0x8
   3380c:	b.ne	337f8 <__asan_internal_strnlen@@Base+0xf78>  // b.any
   33810:	tbnz	w10, #0, 33f84 <__asan_internal_strnlen@@Base+0x1704>
   33814:	mov	x10, x6
   33818:	ldp	x25, x26, [sp, #64]
   3381c:	b	332c0 <__asan_internal_strnlen@@Base+0xa40>
   33820:	strb	w1, [x27], #1
   33824:	strb	w1, [x27], #1
   33828:	strb	w1, [x27], #1
   3382c:	add	x27, x27, #0x3
   33830:	sturb	w1, [x27, #-3]
   33834:	sturb	w1, [x27, #-2]
   33838:	sturb	w1, [x27, #-1]
   3383c:	b	33600 <__asan_internal_strnlen@@Base+0xd80>
   33840:	and	w0, w6, #0x7
   33844:	sub	x1, x3, x27
   33848:	add	w0, w0, #0x3
   3384c:	sub	w7, w7, #0x4
   33850:	lsr	x6, x6, #3
   33854:	cmp	w0, w1
   33858:	b.hi	336e4 <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   3385c:	cmp	w0, #0x7
   33860:	b.eq	338c8 <__asan_internal_strnlen@@Base+0x1048>  // b.none
   33864:	b.hi	338ac <__asan_internal_strnlen@@Base+0x102c>  // b.pmore
   33868:	cmp	w0, #0x5
   3386c:	b.eq	33880 <__asan_internal_strnlen@@Base+0x1000>  // b.none
   33870:	cmp	w0, #0x6
   33874:	b.ne	3389c <__asan_internal_strnlen@@Base+0x101c>  // b.any
   33878:	strb	wzr, [x27], #1
   3387c:	nop
   33880:	strb	wzr, [x27], #1
   33884:	mov	x0, x27
   33888:	strb	wzr, [x0], #1
   3388c:	mov	x27, x0
   33890:	strh	wzr, [x27], #3
   33894:	strb	wzr, [x0, #2]
   33898:	b	33600 <__asan_internal_strnlen@@Base+0xd80>
   3389c:	cmp	w0, #0x4
   338a0:	b.eq	33884 <__asan_internal_strnlen@@Base+0x1004>  // b.none
   338a4:	mov	x0, x27
   338a8:	b	3388c <__asan_internal_strnlen@@Base+0x100c>
   338ac:	cmp	w0, #0x9
   338b0:	b.eq	338c0 <__asan_internal_strnlen@@Base+0x1040>  // b.none
   338b4:	cmp	w0, #0xa
   338b8:	b.ne	338d4 <__asan_internal_strnlen@@Base+0x1054>  // b.any
   338bc:	strb	wzr, [x27], #1
   338c0:	strb	wzr, [x27], #1
   338c4:	strb	wzr, [x27], #1
   338c8:	strb	wzr, [x27], #1
   338cc:	strb	wzr, [x27], #1
   338d0:	b	33880 <__asan_internal_strnlen@@Base+0x1000>
   338d4:	cmp	w0, #0x8
   338d8:	b.ne	338a4 <__asan_internal_strnlen@@Base+0x1024>  // b.any
   338dc:	strb	wzr, [x27], #1
   338e0:	b	338c8 <__asan_internal_strnlen@@Base+0x1048>
   338e4:	ldp	x0, x25, [sp, #112]
   338e8:	str	x0, [sp, #176]
   338ec:	cmp	w7, #0xe
   338f0:	b.hi	33914 <__asan_internal_strnlen@@Base+0x1094>  // b.pmore
   338f4:	sub	x0, x21, x5
   338f8:	cmp	x0, #0x3
   338fc:	b.le	336c4 <__asan_internal_strnlen@@Base+0xe44>
   33900:	ldr	w0, [x5], #4
   33904:	lsl	x0, x0, x7
   33908:	add	w7, w7, #0x20
   3390c:	prfm	pldl1strm, [x5]
   33910:	orr	x6, x6, x0
   33914:	and	x0, x6, #0xff
   33918:	ldrh	w1, [x25, x0, lsl #1]
   3391c:	and	w3, w1, #0x1ff
   33920:	ubfx	x0, x1, #9, #3
   33924:	tbnz	w1, #12, 33968 <__asan_internal_strnlen@@Base+0x10e8>
   33928:	add	w1, w0, #0x1
   3392c:	sub	w7, w7, #0x1
   33930:	sub	w7, w7, w0
   33934:	cmp	w3, #0xff
   33938:	lsr	x6, x6, x1
   3393c:	b.hi	339a4 <__asan_internal_strnlen@@Base+0x1124>  // b.pmore
   33940:	ldr	x0, [sp, #104]
   33944:	cmp	x0, x20
   33948:	b.eq	336c4 <__asan_internal_strnlen@@Base+0xe44>  // b.none
   3394c:	mov	x11, x20
   33950:	cmp	w7, #0xe
   33954:	strb	w3, [x11], #1
   33958:	prfm	pstl1keep, [x11]
   3395c:	mov	x20, x11
   33960:	b.ls	338f4 <__asan_internal_strnlen@@Base+0x1074>  // b.plast
   33964:	b	33914 <__asan_internal_strnlen@@Base+0x1094>
   33968:	mov	w1, #0x1                   	// #1
   3396c:	add	w3, w3, #0x100
   33970:	lsl	w0, w1, w0
   33974:	sub	w0, w0, #0x1
   33978:	and	x0, x0, x6, lsr #8
   3397c:	sub	w7, w7, #0x8
   33980:	add	x3, x0, w3, sxtw
   33984:	ldrh	w0, [x25, x3, lsl #1]
   33988:	and	w3, w0, #0x1ff
   3398c:	ubfx	x0, x0, #9, #3
   33990:	cmp	w3, #0xff
   33994:	add	w1, w0, #0x8
   33998:	sub	w7, w7, w0
   3399c:	lsr	x6, x6, x1
   339a0:	b.ls	33940 <__asan_internal_strnlen@@Base+0x10c0>  // b.plast
   339a4:	cmp	w3, #0x100
   339a8:	b.eq	33fc4 <__asan_internal_strnlen@@Base+0x1744>  // b.none
   339ac:	cmp	w3, #0x108
   339b0:	b.hi	33a54 <__asan_internal_strnlen@@Base+0x11d4>  // b.pmore
   339b4:	sub	w28, w3, #0xfe
   339b8:	cmp	w7, #0xe
   339bc:	b.hi	339e0 <__asan_internal_strnlen@@Base+0x1160>  // b.pmore
   339c0:	sub	x0, x21, x5
   339c4:	cmp	x0, #0x3
   339c8:	b.le	336c4 <__asan_internal_strnlen@@Base+0xe44>
   339cc:	ldr	w0, [x5], #4
   339d0:	lsl	x0, x0, x7
   339d4:	add	w7, w7, #0x20
   339d8:	prfm	pldl1strm, [x5]
   339dc:	orr	x6, x6, x0
   339e0:	ldr	x1, [sp, #176]
   339e4:	and	x0, x6, #0xff
   339e8:	ldrh	w1, [x1, x0, lsl #1]
   339ec:	and	w14, w1, #0x1ff
   339f0:	ubfx	x0, x1, #9, #3
   339f4:	tbnz	w1, #12, 33acc <__asan_internal_strnlen@@Base+0x124c>
   339f8:	add	w1, w0, #0x1
   339fc:	sub	w7, w7, #0x1
   33a00:	sub	w7, w7, w0
   33a04:	lsr	x6, x6, x1
   33a08:	cbnz	w14, 33b08 <__asan_internal_strnlen@@Base+0x1288>
   33a0c:	stp	x10, x5, [sp, #128]
   33a10:	cmp	x19, x20
   33a14:	str	w7, [sp, #144]
   33a18:	stp	x6, x13, [sp, #152]
   33a1c:	b.eq	336c4 <__asan_internal_strnlen@@Base+0xe44>  // b.none
   33a20:	ldr	x0, [sp, #104]
   33a24:	sub	x0, x0, x20
   33a28:	cmp	w28, w0
   33a2c:	b.hi	336c4 <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   33a30:	ldurb	w1, [x20, #-1]
   33a34:	mov	w2, w28
   33a38:	mov	x0, x20
   33a3c:	add	x20, x20, x2
   33a40:	bl	6530 <__asan_internal_memset@plt>
   33a44:	ldr	w7, [sp, #144]
   33a48:	ldp	x10, x5, [sp, #128]
   33a4c:	ldp	x6, x13, [sp, #152]
   33a50:	b	338ec <__asan_internal_strnlen@@Base+0x106c>
   33a54:	cmp	w3, #0x11d
   33a58:	b.eq	33c50 <__asan_internal_strnlen@@Base+0x13d0>  // b.none
   33a5c:	b.hi	336c4 <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   33a60:	cmp	w7, #0xe
   33a64:	b.hi	33a88 <__asan_internal_strnlen@@Base+0x1208>  // b.pmore
   33a68:	sub	x0, x21, x5
   33a6c:	cmp	x0, #0x3
   33a70:	b.le	336c4 <__asan_internal_strnlen@@Base+0xe44>
   33a74:	ldr	w0, [x5], #4
   33a78:	lsl	x0, x0, x7
   33a7c:	add	w7, w7, #0x20
   33a80:	prfm	pldl1strm, [x5]
   33a84:	orr	x6, x6, x0
   33a88:	sub	w3, w3, #0x109
   33a8c:	mov	w2, #0x1                   	// #1
   33a90:	and	w0, w3, #0x3
   33a94:	lsr	w3, w3, #2
   33a98:	add	w1, w3, #0x1
   33a9c:	lsl	w3, w2, w3
   33aa0:	mov	w2, #0xffffffff            	// #-1
   33aa4:	sub	w3, w3, #0x1
   33aa8:	lsl	w2, w2, w1
   33aac:	bic	w2, w6, w2
   33ab0:	lsl	w0, w0, w1
   33ab4:	add	w2, w2, w3, lsl #3
   33ab8:	add	w3, w0, #0xb
   33abc:	sub	w7, w7, w1
   33ac0:	add	w28, w2, w3
   33ac4:	lsr	x6, x6, x1
   33ac8:	b	339b8 <__asan_internal_strnlen@@Base+0x1138>
   33acc:	mov	w1, #0x1                   	// #1
   33ad0:	add	w14, w14, #0x100
   33ad4:	lsl	w0, w1, w0
   33ad8:	sub	w0, w0, #0x1
   33adc:	and	x0, x0, x6, lsr #8
   33ae0:	sub	w7, w7, #0x8
   33ae4:	add	x14, x0, w14, sxtw
   33ae8:	ldr	x0, [sp, #176]
   33aec:	ldrh	w0, [x0, x14, lsl #1]
   33af0:	and	w14, w0, #0x1ff
   33af4:	ubfx	x0, x0, #9, #3
   33af8:	add	w1, w0, #0x8
   33afc:	sub	w7, w7, w0
   33b00:	lsr	x6, x6, x1
   33b04:	cbz	w14, 33a0c <__asan_internal_strnlen@@Base+0x118c>
   33b08:	cmp	w14, #0x1d
   33b0c:	b.hi	336c4 <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   33b10:	add	w27, w14, #0x1
   33b14:	cmp	w14, #0x3
   33b18:	b.ls	33b84 <__asan_internal_strnlen@@Base+0x1304>  // b.plast
   33b1c:	cmp	w7, #0xe
   33b20:	b.hi	33b44 <__asan_internal_strnlen@@Base+0x12c4>  // b.pmore
   33b24:	sub	x0, x21, x5
   33b28:	cmp	x0, #0x3
   33b2c:	b.le	336c4 <__asan_internal_strnlen@@Base+0xe44>
   33b30:	ldr	w0, [x5], #4
   33b34:	lsl	x0, x0, x7
   33b38:	add	w7, w7, #0x20
   33b3c:	prfm	pldl1strm, [x5]
   33b40:	orr	x6, x6, x0
   33b44:	sub	w14, w14, #0x4
   33b48:	mov	w2, #0x1                   	// #1
   33b4c:	and	w0, w14, #0x1
   33b50:	lsr	w14, w14, #1
   33b54:	add	w1, w14, #0x1
   33b58:	lsl	w14, w2, w14
   33b5c:	mov	w2, #0xffffffff            	// #-1
   33b60:	sub	w14, w14, #0x1
   33b64:	lsl	w2, w2, w1
   33b68:	bic	w2, w6, w2
   33b6c:	lsl	w0, w0, w1
   33b70:	add	w14, w2, w14, lsl #2
   33b74:	add	w0, w0, #0x5
   33b78:	sub	w7, w7, w1
   33b7c:	add	w27, w14, w0
   33b80:	lsr	x6, x6, x1
   33b84:	sub	x0, x20, x19
   33b88:	cmp	w27, w0
   33b8c:	b.hi	336c4 <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   33b90:	ldr	x0, [sp, #104]
   33b94:	sub	x0, x0, x20
   33b98:	cmp	w28, w0
   33b9c:	b.hi	336c4 <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   33ba0:	mov	w26, w27
   33ba4:	cmp	w28, w27
   33ba8:	neg	x0, x26
   33bac:	str	x0, [sp, #184]
   33bb0:	b.hi	33bd8 <__asan_internal_strnlen@@Base+0x1358>  // b.pmore
   33bb4:	mov	w2, w28
   33bb8:	add	x1, x20, x0
   33bbc:	mov	x0, x20
   33bc0:	add	x20, x20, x2
   33bc4:	stp	x10, x5, [sp, #128]
   33bc8:	str	w7, [sp, #144]
   33bcc:	stp	x6, x13, [sp, #152]
   33bd0:	bl	64a0 <__asan_internal_memcpy@plt>
   33bd4:	b	33a44 <__asan_internal_strnlen@@Base+0x11c4>
   33bd8:	cmp	w27, w28
   33bdc:	str	x5, [sp, #144]
   33be0:	ldr	x0, [sp, #184]
   33be4:	csel	w2, w27, w28, ls  // ls = plast
   33be8:	csel	w26, w27, w28, ls  // ls = plast
   33bec:	stp	x2, x10, [sp, #128]
   33bf0:	add	x1, x20, x0
   33bf4:	mov	x0, x20
   33bf8:	str	w7, [sp, #152]
   33bfc:	stp	x6, x13, [sp, #160]
   33c00:	bl	64a0 <__asan_internal_memcpy@plt>
   33c04:	ldr	w7, [sp, #152]
   33c08:	ldp	x2, x10, [sp, #128]
   33c0c:	subs	w28, w28, w26
   33c10:	ldr	x5, [sp, #144]
   33c14:	ldp	x6, x13, [sp, #160]
   33c18:	add	x20, x20, x2
   33c1c:	b.ne	33bd8 <__asan_internal_strnlen@@Base+0x1358>  // b.any
   33c20:	b	338ec <__asan_internal_strnlen@@Base+0x106c>
   33c24:	mov	w3, #0x0                   	// #0
   33c28:	b	332c0 <__asan_internal_strnlen@@Base+0xa40>
   33c2c:	sub	w7, w7, #0xc
   33c30:	mov	x6, x0
   33c34:	b	335a0 <__asan_internal_strnlen@@Base+0xd20>
   33c38:	sub	w7, w7, #0x9
   33c3c:	mov	x6, x0
   33c40:	b	335a0 <__asan_internal_strnlen@@Base+0xd20>
   33c44:	sub	w7, w7, #0x3
   33c48:	mov	x6, x0
   33c4c:	b	335a0 <__asan_internal_strnlen@@Base+0xd20>
   33c50:	mov	w28, #0x102                 	// #258
   33c54:	b	339b8 <__asan_internal_strnlen@@Base+0x1138>
   33c58:	sub	w7, w7, #0x6
   33c5c:	mov	x6, x0
   33c60:	b	335a0 <__asan_internal_strnlen@@Base+0xd20>
   33c64:	add	x0, x13, #0x1, lsl #12
   33c68:	stp	x10, x5, [sp, #128]
   33c6c:	str	w7, [sp, #144]
   33c70:	ldrb	w0, [x0, #888]
   33c74:	str	x6, [sp, #152]
   33c78:	cbz	w0, 336e4 <__asan_internal_strnlen@@Base+0xe64>
   33c7c:	mov	x3, x13
   33c80:	mov	x2, x13
   33c84:	mov	x1, x25
   33c88:	mov	x0, x28
   33c8c:	str	x13, [sp, #160]
   33c90:	bl	328e8 <__asan_internal_strnlen@@Base+0x68>
   33c94:	cbz	w0, 336e4 <__asan_internal_strnlen@@Base+0xe64>
   33c98:	ldr	x13, [sp, #160]
   33c9c:	mov	x1, x26
   33ca0:	add	x0, x13, #0x800
   33ca4:	mov	x2, x13
   33ca8:	mov	x3, x0
   33cac:	add	x0, x28, x25
   33cb0:	str	x3, [sp, #176]
   33cb4:	bl	328e8 <__asan_internal_strnlen@@Base+0x68>
   33cb8:	cbz	w0, 336e4 <__asan_internal_strnlen@@Base+0xe64>
   33cbc:	ldp	x6, x13, [sp, #152]
   33cc0:	ldr	w7, [sp, #144]
   33cc4:	ldp	x10, x5, [sp, #128]
   33cc8:	mov	x25, x13
   33ccc:	b	338ec <__asan_internal_strnlen@@Base+0x106c>
   33cd0:	mov	x20, x3
   33cd4:	ldr	x0, [sp, #104]
   33cd8:	cmp	x0, x20
   33cdc:	b.ne	336cc <__asan_internal_strnlen@@Base+0xe4c>  // b.any
   33ce0:	sub	x9, x22, #0x4
   33ce4:	mov	w7, #0x0                   	// #0
   33ce8:	add	x8, x23, x9
   33cec:	ldrb	w0, [x8], #1
   33cf0:	cmp	x21, x8
   33cf4:	orr	w7, w0, w7, lsl #8
   33cf8:	b.ne	33cec <__asan_internal_strnlen@@Base+0x146c>  // b.any
   33cfc:	mov	x11, #0x15af                	// #5551
   33d00:	mov	w5, #0x0                   	// #0
   33d04:	cmp	x24, x11
   33d08:	mov	w3, #0x1                   	// #1
   33d0c:	b.ls	33e18 <__asan_internal_strnlen@@Base+0x1598>  // b.plast
   33d10:	mov	w13, #0x8071                	// #32881
   33d14:	mov	x14, #0x15b0                	// #5552
   33d18:	movk	w13, #0x8007, lsl #16
   33d1c:	mov	w12, #0xfff1                	// #65521
   33d20:	mov	x0, #0x15b0                	// #5552
   33d24:	add	x15, x19, x0
   33d28:	ldrb	w2, [x19]
   33d2c:	add	x19, x19, #0x10
   33d30:	ldurb	w1, [x19, #-15]
   33d34:	ldurb	w0, [x19, #-14]
   33d38:	add	w3, w2, w3
   33d3c:	add	w1, w1, w3
   33d40:	ldurb	w2, [x19, #-13]
   33d44:	add	w0, w0, w1
   33d48:	ldurb	w10, [x19, #-12]
   33d4c:	ldurb	w22, [x19, #-11]
   33d50:	add	w2, w2, w0
   33d54:	add	w10, w10, w2
   33d58:	ldurb	w9, [x19, #-10]
   33d5c:	ldurb	w21, [x19, #-9]
   33d60:	add	w22, w22, w10
   33d64:	ldurb	w17, [x19, #-8]
   33d68:	add	w9, w9, w22
   33d6c:	ldurb	w18, [x19, #-7]
   33d70:	add	w21, w21, w9
   33d74:	ldurb	w20, [x19, #-6]
   33d78:	add	w17, w17, w21
   33d7c:	ldurb	w16, [x19, #-5]
   33d80:	add	w18, w18, w17
   33d84:	ldurb	w8, [x19, #-4]
   33d88:	add	w3, w3, w1
   33d8c:	ldurb	w6, [x19, #-2]
   33d90:	add	w2, w0, w2
   33d94:	ldurb	w1, [x19, #-3]
   33d98:	add	w20, w20, w18
   33d9c:	add	w2, w2, w3
   33da0:	add	w16, w16, w20
   33da4:	add	w3, w10, w22
   33da8:	add	w9, w9, w21
   33dac:	add	w2, w2, w3
   33db0:	add	w8, w8, w16
   33db4:	add	w2, w2, w9
   33db8:	ldurb	w3, [x19, #-1]
   33dbc:	add	w9, w1, w8
   33dc0:	add	w0, w17, w18
   33dc4:	add	w6, w6, w9
   33dc8:	add	w0, w2, w0
   33dcc:	add	w10, w20, w16
   33dd0:	add	w8, w8, w9
   33dd4:	add	w0, w0, w10
   33dd8:	add	w3, w3, w6
   33ddc:	add	w0, w0, w8
   33de0:	add	w6, w6, w3
   33de4:	add	w0, w0, w6
   33de8:	cmp	x19, x15
   33dec:	add	w5, w5, w0
   33df0:	b.ne	33d28 <__asan_internal_strnlen@@Base+0x14a8>  // b.any
   33df4:	umull	x1, w3, w13
   33df8:	sub	x24, x24, x14
   33dfc:	umull	x0, w5, w13
   33e00:	cmp	x24, x11
   33e04:	lsr	x1, x1, #47
   33e08:	lsr	x0, x0, #47
   33e0c:	msub	w3, w1, w12, w3
   33e10:	msub	w5, w0, w12, w5
   33e14:	b.hi	33d20 <__asan_internal_strnlen@@Base+0x14a0>  // b.pmore
   33e18:	cmp	x24, #0xf
   33e1c:	b.ls	33f00 <__asan_internal_strnlen@@Base+0x1680>  // b.plast
   33e20:	sub	x13, x24, #0x10
   33e24:	and	x13, x13, #0xfffffffffffffff0
   33e28:	add	x13, x13, #0x10
   33e2c:	add	x13, x19, x13
   33e30:	ldrb	w1, [x19]
   33e34:	add	x19, x19, #0x10
   33e38:	ldurb	w2, [x19, #-15]
   33e3c:	ldurb	w0, [x19, #-14]
   33e40:	add	w3, w1, w3
   33e44:	add	w2, w2, w3
   33e48:	ldurb	w1, [x19, #-13]
   33e4c:	add	w0, w0, w2
   33e50:	ldurb	w12, [x19, #-12]
   33e54:	ldurb	w17, [x19, #-11]
   33e58:	add	w1, w1, w0
   33e5c:	ldurb	w11, [x19, #-10]
   33e60:	add	w12, w12, w1
   33e64:	ldurb	w16, [x19, #-9]
   33e68:	add	w17, w17, w12
   33e6c:	ldurb	w10, [x19, #-8]
   33e70:	add	w11, w11, w17
   33e74:	ldurb	w15, [x19, #-7]
   33e78:	add	w16, w16, w11
   33e7c:	ldurb	w9, [x19, #-6]
   33e80:	add	w10, w10, w16
   33e84:	ldurb	w14, [x19, #-5]
   33e88:	add	w15, w15, w10
   33e8c:	ldurb	w8, [x19, #-4]
   33e90:	add	w3, w3, w2
   33e94:	ldurb	w6, [x19, #-2]
   33e98:	add	w1, w0, w1
   33e9c:	ldurb	w2, [x19, #-3]
   33ea0:	add	w9, w9, w15
   33ea4:	add	w1, w1, w3
   33ea8:	add	w14, w14, w9
   33eac:	add	w12, w12, w17
   33eb0:	add	w0, w11, w16
   33eb4:	add	w8, w8, w14
   33eb8:	add	w1, w1, w12
   33ebc:	add	w1, w1, w0
   33ec0:	add	w11, w2, w8
   33ec4:	ldurb	w3, [x19, #-1]
   33ec8:	add	w0, w10, w15
   33ecc:	add	w6, w6, w11
   33ed0:	add	w0, w1, w0
   33ed4:	add	w9, w9, w14
   33ed8:	add	w8, w8, w11
   33edc:	add	w0, w0, w9
   33ee0:	add	w3, w3, w6
   33ee4:	add	w0, w0, w8
   33ee8:	add	w6, w6, w3
   33eec:	add	w0, w0, w6
   33ef0:	cmp	x19, x13
   33ef4:	add	w5, w5, w0
   33ef8:	b.ne	33e30 <__asan_internal_strnlen@@Base+0x15b0>  // b.any
   33efc:	and	x24, x24, #0xf
   33f00:	cbz	x24, 33f2c <__asan_internal_strnlen@@Base+0x16ac>
   33f04:	mov	w0, #0x1                   	// #1
   33f08:	sub	w0, w0, w19
   33f0c:	nop
   33f10:	ldrb	w1, [x19]
   33f14:	add	w2, w0, w19
   33f18:	cmp	x2, x24
   33f1c:	add	x19, x19, #0x1
   33f20:	add	w3, w3, w1
   33f24:	add	w5, w5, w3
   33f28:	b.cc	33f10 <__asan_internal_strnlen@@Base+0x1690>  // b.lo, b.ul, b.last
   33f2c:	mov	w0, #0x8071                	// #32881
   33f30:	mov	w2, #0xfff1                	// #65521
   33f34:	movk	w0, #0x8007, lsl #16
   33f38:	ldp	x19, x20, [sp, #16]
   33f3c:	umull	x1, w5, w0
   33f40:	umull	x0, w3, w0
   33f44:	ldp	x21, x22, [sp, #32]
   33f48:	lsr	x1, x1, #47
   33f4c:	lsr	x0, x0, #47
   33f50:	ldp	x23, x24, [sp, #48]
   33f54:	msub	w5, w1, w2, w5
   33f58:	msub	w3, w0, w2, w3
   33f5c:	ldp	x29, x30, [sp], #224
   33f60:	add	w3, w3, w5, lsl #16
   33f64:	cmp	w3, w7
   33f68:	cset	w0, eq  // eq = none
   33f6c:	ret
   33f70:	mov	w7, w0
   33f74:	b	335a0 <__asan_internal_strnlen@@Base+0xd20>
   33f78:	sub	w7, w0, #0x3
   33f7c:	mov	x6, x1
   33f80:	b	335a0 <__asan_internal_strnlen@@Base+0xd20>
   33f84:	sub	x0, x21, x5
   33f88:	cmp	x0, #0x4
   33f8c:	ldp	x25, x26, [sp, #64]
   33f90:	b.gt	33238 <__asan_internal_strnlen@@Base+0x9b8>
   33f94:	b	33cd4 <__asan_internal_strnlen@@Base+0x1454>
   33f98:	sub	w7, w0, #0x6
   33f9c:	mov	x6, x1
   33fa0:	b	335a0 <__asan_internal_strnlen@@Base+0xd20>
   33fa4:	sub	w7, w0, #0x9
   33fa8:	mov	x6, x1
   33fac:	b	335a0 <__asan_internal_strnlen@@Base+0xd20>
   33fb0:	mov	w3, #0x0                   	// #0
   33fb4:	b	33810 <__asan_internal_strnlen@@Base+0xf90>
   33fb8:	sub	w7, w0, #0xc
   33fbc:	mov	x6, x1
   33fc0:	b	335a0 <__asan_internal_strnlen@@Base+0xd20>
   33fc4:	mov	w3, w7
   33fc8:	ldp	x27, x28, [sp, #80]
   33fcc:	b	33810 <__asan_internal_strnlen@@Base+0xf90>
   33fd0:	stp	x29, x30, [sp, #-80]!
   33fd4:	add	x8, x1, #0x4
   33fd8:	mov	x29, sp
   33fdc:	stp	x19, x20, [sp, #16]
   33fe0:	add	x20, x1, #0xc
   33fe4:	mov	x19, #0x0                   	// #0
   33fe8:	stp	x21, x22, [sp, #32]
   33fec:	mov	x22, x6
   33ff0:	stp	x23, x24, [sp, #48]
   33ff4:	mov	x24, x2
   33ff8:	mov	x23, x7
   33ffc:	mov	x2, x4
   34000:	str	x25, [sp, #64]
   34004:	mov	x25, x3
   34008:	mov	x3, x5
   3400c:	nop
   34010:	ldrb	w1, [x8], #1
   34014:	cmp	x20, x8
   34018:	orr	x19, x1, x19, lsl #8
   3401c:	b.ne	34010 <__asan_internal_strnlen@@Base+0x1790>  // b.any
   34020:	ldr	x21, [x22]
   34024:	cbz	x21, 34078 <__asan_internal_strnlen@@Base+0x17f8>
   34028:	ldr	x1, [x23]
   3402c:	cmp	x19, x1
   34030:	b.hi	34078 <__asan_internal_strnlen@@Base+0x17f8>  // b.pmore
   34034:	sub	x1, x24, #0xc
   34038:	mov	x2, x25
   3403c:	mov	x0, x20
   34040:	mov	x4, x19
   34044:	mov	x3, x21
   34048:	bl	331e0 <__asan_internal_strnlen@@Base+0x960>
   3404c:	mov	w1, w0
   34050:	mov	w0, #0x1                   	// #1
   34054:	cbz	w1, 34060 <__asan_internal_strnlen@@Base+0x17e0>
   34058:	str	x21, [x22]
   3405c:	str	x19, [x23]
   34060:	ldp	x19, x20, [sp, #16]
   34064:	ldp	x21, x22, [sp, #32]
   34068:	ldp	x23, x24, [sp, #48]
   3406c:	ldr	x25, [sp, #64]
   34070:	ldp	x29, x30, [sp], #80
   34074:	ret
   34078:	mov	x1, x19
   3407c:	bl	65b0 <__asan_backtrace_alloc@plt>
   34080:	mov	x21, x0
   34084:	cbnz	x0, 34034 <__asan_internal_strnlen@@Base+0x17b4>
   34088:	mov	w0, #0x0                   	// #0
   3408c:	b	34060 <__asan_internal_strnlen@@Base+0x17e0>
   34090:	sub	sp, sp, #0x4a0
   34094:	stp	x29, x30, [sp, #80]
   34098:	add	x29, sp, #0x50
   3409c:	stp	x21, x22, [sp, #112]
   340a0:	mov	x21, x0
   340a4:	ldr	w0, [sp, #1208]
   340a8:	stp	x19, x20, [sp, #96]
   340ac:	mov	w22, w2
   340b0:	mov	x19, x4
   340b4:	stp	x23, x24, [sp, #128]
   340b8:	mov	x20, x5
   340bc:	mov	x23, x7
   340c0:	stp	x25, x26, [sp, #144]
   340c4:	stp	x27, x28, [sp, #160]
   340c8:	mov	x28, x1
   340cc:	stp	x3, x6, [sp, #176]
   340d0:	cbnz	w0, 340e0 <__asan_internal_strnlen@@Base+0x1860>
   340d4:	ldr	x0, [sp, #1184]
   340d8:	str	wzr, [x7]
   340dc:	str	wzr, [x0]
   340e0:	add	x24, sp, #0x198
   340e4:	mov	x5, x20
   340e8:	mov	x6, x24
   340ec:	mov	x4, x19
   340f0:	mov	w1, w22
   340f4:	mov	x0, x21
   340f8:	mov	x3, #0x40                  	// #64
   340fc:	mov	x2, #0x0                   	// #0
   34100:	bl	67b0 <__asan_backtrace_get_view@plt>
   34104:	cbnz	w0, 3416c <__asan_internal_strnlen@@Base+0x18ec>
   34108:	mov	w24, #0x0                   	// #0
   3410c:	mov	x25, #0x0                   	// #0
   34110:	cbnz	w24, 341c4 <__asan_internal_strnlen@@Base+0x1944>
   34114:	cbz	x25, 3412c <__asan_internal_strnlen@@Base+0x18ac>
   34118:	add	x1, x25, #0x18
   3411c:	mov	x0, x21
   34120:	mov	x3, x20
   34124:	mov	x2, x19
   34128:	bl	6430 <__asan_backtrace_release_view@plt>
   3412c:	cmn	w22, #0x1
   34130:	mov	w23, #0x0                   	// #0
   34134:	b.eq	34148 <__asan_internal_strnlen@@Base+0x18c8>  // b.none
   34138:	mov	x2, x20
   3413c:	mov	x1, x19
   34140:	mov	w0, w22
   34144:	bl	6960 <__asan_backtrace_close@plt>
   34148:	mov	w0, w23
   3414c:	ldp	x29, x30, [sp, #80]
   34150:	ldp	x19, x20, [sp, #96]
   34154:	ldp	x21, x22, [sp, #112]
   34158:	ldp	x23, x24, [sp, #128]
   3415c:	ldp	x25, x26, [sp, #144]
   34160:	ldp	x27, x28, [sp, #160]
   34164:	add	sp, sp, #0x4a0
   34168:	ret
   3416c:	ldr	x1, [sp, #408]
   34170:	mov	x2, #0x40                  	// #64
   34174:	add	x0, sp, #0x2a0
   34178:	bl	64a0 <__asan_internal_memcpy@plt>
   3417c:	mov	x1, x24
   34180:	mov	x0, x21
   34184:	mov	x3, x20
   34188:	mov	x2, x19
   3418c:	bl	6430 <__asan_backtrace_release_view@plt>
   34190:	ldr	w1, [sp, #672]
   34194:	mov	w0, #0x457f                	// #17791
   34198:	movk	w0, #0x464c, lsl #16
   3419c:	cmp	w1, w0
   341a0:	b.eq	341dc <__asan_internal_strnlen@@Base+0x195c>  // b.none
   341a4:	mov	x0, x20
   341a8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   341ac:	mov	w2, #0x0                   	// #0
   341b0:	add	x1, x1, #0xf0
   341b4:	mov	w24, #0x0                   	// #0
   341b8:	mov	x25, #0x0                   	// #0
   341bc:	blr	x19
   341c0:	b	34110 <__asan_internal_strnlen@@Base+0x1890>
   341c4:	mov	x3, x20
   341c8:	mov	x2, x19
   341cc:	add	x1, sp, #0x2e0
   341d0:	mov	x0, x21
   341d4:	bl	6430 <__asan_backtrace_release_view@plt>
   341d8:	b	34114 <__asan_internal_strnlen@@Base+0x1894>
   341dc:	ldrb	w0, [sp, #678]
   341e0:	cmp	w0, #0x1
   341e4:	b.ne	34214 <__asan_internal_strnlen@@Base+0x1994>  // b.any
   341e8:	ldrb	w0, [sp, #676]
   341ec:	cmp	w0, #0x2
   341f0:	b.eq	34234 <__asan_internal_strnlen@@Base+0x19b4>  // b.none
   341f4:	mov	x0, x20
   341f8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   341fc:	mov	w2, #0x0                   	// #0
   34200:	add	x1, x1, #0x140
   34204:	mov	w24, #0x0                   	// #0
   34208:	mov	x25, #0x0                   	// #0
   3420c:	blr	x19
   34210:	b	34110 <__asan_internal_strnlen@@Base+0x1890>
   34214:	mov	x0, x20
   34218:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   3421c:	mov	w2, #0x0                   	// #0
   34220:	add	x1, x1, #0x110
   34224:	mov	w24, #0x0                   	// #0
   34228:	mov	x25, #0x0                   	// #0
   3422c:	blr	x19
   34230:	b	34110 <__asan_internal_strnlen@@Base+0x1890>
   34234:	ldrb	w0, [sp, #677]
   34238:	sub	w0, w0, #0x1
   3423c:	and	w0, w0, #0xff
   34240:	cmp	w0, #0x1
   34244:	b.hi	34334 <__asan_internal_strnlen@@Base+0x1ab4>  // b.pmore
   34248:	ldr	w0, [sp, #1200]
   3424c:	cbz	w0, 3425c <__asan_internal_strnlen@@Base+0x19dc>
   34250:	ldrh	w0, [sp, #688]
   34254:	cmp	w0, #0x3
   34258:	b.eq	35308 <__asan_internal_strnlen@@Base+0x2a88>  // b.none
   3425c:	ldrh	w0, [sp, #732]
   34260:	mov	w27, #0xffff                	// #65535
   34264:	ldrh	w25, [sp, #734]
   34268:	ldr	x26, [sp, #712]
   3426c:	cmp	w0, #0x0
   34270:	str	w0, [sp, #232]
   34274:	ccmp	w25, w27, #0x4, ne  // ne = any
   34278:	ccmp	x26, #0x0, #0x4, eq  // eq = none
   3427c:	b.ne	347c8 <__asan_internal_strnlen@@Base+0x1f48>  // b.any
   34280:	ldr	w24, [sp, #232]
   34284:	add	x0, sp, #0x1b0
   34288:	mov	x6, x0
   3428c:	add	x2, x26, #0x40
   34290:	sub	w3, w24, #0x1
   34294:	mov	x5, x20
   34298:	mov	x4, x19
   3429c:	mov	w1, w22
   342a0:	lsl	x3, x3, #6
   342a4:	str	x0, [sp, #216]
   342a8:	mov	x0, x21
   342ac:	bl	67b0 <__asan_backtrace_get_view@plt>
   342b0:	cbz	w0, 34108 <__asan_internal_strnlen@@Base+0x1888>
   342b4:	ldr	x0, [sp, #432]
   342b8:	sub	w3, w25, #0x1
   342bc:	add	x1, sp, #0x1c8
   342c0:	mov	x5, x20
   342c4:	mov	x6, x1
   342c8:	mov	x4, x19
   342cc:	add	x3, x0, x3, lsl #6
   342d0:	str	x1, [sp, #224]
   342d4:	mov	w1, w22
   342d8:	str	x0, [sp, #296]
   342dc:	mov	x0, x21
   342e0:	ldp	x2, x3, [x3, #24]
   342e4:	str	x3, [sp, #208]
   342e8:	bl	67b0 <__asan_backtrace_get_view@plt>
   342ec:	cbnz	w0, 34354 <__asan_internal_strnlen@@Base+0x1ad4>
   342f0:	ldr	x1, [sp, #216]
   342f4:	mov	x3, x20
   342f8:	mov	x2, x19
   342fc:	mov	x0, x21
   34300:	mov	w24, #0x0                   	// #0
   34304:	mov	x25, #0x0                   	// #0
   34308:	bl	6430 <__asan_backtrace_release_view@plt>
   3430c:	str	wzr, [sp, #200]
   34310:	ldr	w0, [sp, #200]
   34314:	cbz	w0, 34110 <__asan_internal_strnlen@@Base+0x1890>
   34318:	mov	x3, x20
   3431c:	mov	x2, x19
   34320:	add	x1, sp, #0x210
   34324:	mov	x0, x21
   34328:	bl	6430 <__asan_backtrace_release_view@plt>
   3432c:	cbz	w24, 34114 <__asan_internal_strnlen@@Base+0x1894>
   34330:	b	341c4 <__asan_internal_strnlen@@Base+0x1944>
   34334:	mov	x0, x20
   34338:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   3433c:	mov	w2, #0x0                   	// #0
   34340:	add	x1, x1, #0x168
   34344:	mov	w24, #0x0                   	// #0
   34348:	mov	x25, #0x0                   	// #0
   3434c:	blr	x19
   34350:	b	34110 <__asan_internal_strnlen@@Base+0x1890>
   34354:	ldr	x3, [sp, #456]
   34358:	add	x0, sp, #0x360
   3435c:	mov	x2, #0x140                 	// #320
   34360:	mov	w1, #0x0                   	// #0
   34364:	str	x0, [sp, #240]
   34368:	str	x3, [sp, #256]
   3436c:	bl	6530 <__asan_internal_memset@plt>
   34370:	cmp	w24, #0x1
   34374:	b.ls	35310 <__asan_internal_strnlen@@Base+0x2a90>  // b.plast
   34378:	add	x0, sp, #0x270
   3437c:	mov	x25, #0x0                   	// #0
   34380:	mov	x1, x0
   34384:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0x24320>
   34388:	add	x0, x0, #0xc00
   3438c:	stp	x28, x23, [sp, #344]
   34390:	ldr	w23, [sp, #1208]
   34394:	str	x1, [sp, #360]
   34398:	add	x1, x1, #0x18
   3439c:	ldr	x28, [sp, #208]
   343a0:	mov	w2, #0x0                   	// #0
   343a4:	ldr	x27, [sp, #296]
   343a8:	stp	x19, x20, [sp, #272]
   343ac:	mov	x20, x0
   343b0:	stp	x25, xzr, [sp, #304]
   343b4:	mov	w25, w2
   343b8:	mov	w26, #0x0                   	// #0
   343bc:	str	x1, [sp, #368]
   343c0:	mov	w1, #0x1                   	// #1
   343c4:	ldr	x24, [sp, #256]
   343c8:	str	x21, [sp, #256]
   343cc:	mov	w21, w1
   343d0:	str	wzr, [sp, #192]
   343d4:	str	wzr, [sp, #200]
   343d8:	str	wzr, [sp, #248]
   343dc:	str	w22, [sp, #264]
   343e0:	str	xzr, [sp, #288]
   343e4:	str	wzr, [sp, #320]
   343e8:	str	wzr, [sp, #324]
   343ec:	stp	xzr, xzr, [sp, #328]
   343f0:	str	wzr, [sp, #376]
   343f4:	nop
   343f8:	ldr	w0, [x27, #4]
   343fc:	cmp	w0, #0x2
   34400:	b.eq	34658 <__asan_internal_strnlen@@Base+0x1dd8>  // b.none
   34404:	cmp	w0, #0xb
   34408:	csel	w25, w25, w21, ne  // ne = any
   3440c:	ldr	w19, [x27]
   34410:	cmp	x19, x28
   34414:	b.cs	34838 <__asan_internal_strnlen@@Base+0x1fb8>  // b.hs, b.nlast
   34418:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x8320>
   3441c:	add	x19, x24, x19
   34420:	add	x1, x1, #0xb8
   34424:	mov	x22, #0x0                   	// #0
   34428:	b	34430 <__asan_internal_strnlen@@Base+0x1bb0>
   3442c:	ldr	x1, [x20, x22, lsl #3]
   34430:	mov	x0, x19
   34434:	bl	67f0 <__asan_internal_strcmp@plt>
   34438:	mov	w1, w22
   3443c:	add	x22, x22, #0x1
   34440:	cbz	w0, 34628 <__asan_internal_strnlen@@Base+0x1da8>
   34444:	cmp	x22, #0xa
   34448:	b.ne	3442c <__asan_internal_strnlen@@Base+0x1bac>  // b.any
   3444c:	ldr	x0, [sp, #1216]
   34450:	eor	w22, w23, #0x1
   34454:	and	w22, w22, #0x1
   34458:	cmp	x0, #0x0
   3445c:	ccmp	w22, #0x0, #0x0, eq  // eq = none
   34460:	b.eq	34490 <__asan_internal_strnlen@@Base+0x1c10>  // b.none
   34464:	ldr	w0, [sp, #200]
   34468:	cbz	w0, 3473c <__asan_internal_strnlen@@Base+0x1ebc>
   3446c:	ldr	w0, [sp, #192]
   34470:	orr	w0, w23, w0
   34474:	cbnz	w0, 34490 <__asan_internal_strnlen@@Base+0x1c10>
   34478:	mov	x0, x19
   3447c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   34480:	add	x1, x1, #0x1d0
   34484:	bl	67f0 <__asan_internal_strcmp@plt>
   34488:	str	wzr, [sp, #192]
   3448c:	cbz	w0, 345a4 <__asan_internal_strnlen@@Base+0x1d24>
   34490:	cbz	w26, 346cc <__asan_internal_strnlen@@Base+0x1e4c>
   34494:	ldrh	w0, [sp, #690]
   34498:	cmp	w0, #0x15
   3449c:	b.eq	34660 <__asan_internal_strnlen@@Base+0x1de0>  // b.none
   344a0:	ldr	w0, [sp, #232]
   344a4:	add	w21, w21, #0x1
   344a8:	add	x27, x27, #0x40
   344ac:	cmp	w0, w21
   344b0:	b.ne	343f8 <__asan_internal_strnlen@@Base+0x1b78>  // b.any
   344b4:	ldr	w0, [sp, #248]
   344b8:	mov	w2, w22
   344bc:	str	w26, [sp, #208]
   344c0:	cmp	w0, #0x0
   344c4:	ldr	w22, [sp, #264]
   344c8:	csel	w0, w0, w25, ne  // ne = any
   344cc:	cmp	w0, #0x0
   344d0:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   344d4:	ldr	x21, [sp, #256]
   344d8:	ldp	x19, x20, [sp, #272]
   344dc:	ldr	x25, [sp, #304]
   344e0:	ldp	x28, x23, [sp, #344]
   344e4:	b.eq	349d8 <__asan_internal_strnlen@@Base+0x2158>  // b.none
   344e8:	sub	w27, w0, #0x1
   344ec:	ldr	x0, [sp, #296]
   344f0:	add	x27, x0, x27, lsl #6
   344f4:	ldr	w0, [sp, #232]
   344f8:	ldr	w7, [x27, #40]
   344fc:	cmp	w0, w7
   34500:	b.hi	348ec <__asan_internal_strnlen@@Base+0x206c>  // b.pmore
   34504:	mov	x0, x20
   34508:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   3450c:	mov	w2, #0x0                   	// #0
   34510:	add	x1, x1, #0x200
   34514:	mov	w24, #0x0                   	// #0
   34518:	blr	x19
   3451c:	str	wzr, [sp, #232]
   34520:	ldr	x1, [sp, #216]
   34524:	mov	x3, x20
   34528:	mov	x2, x19
   3452c:	mov	x0, x21
   34530:	bl	6430 <__asan_backtrace_release_view@plt>
   34534:	ldr	x1, [sp, #224]
   34538:	mov	x0, x21
   3453c:	mov	x3, x20
   34540:	mov	x2, x19
   34544:	bl	6430 <__asan_backtrace_release_view@plt>
   34548:	ldr	w0, [sp, #232]
   3454c:	cbz	w0, 34564 <__asan_internal_strnlen@@Base+0x1ce4>
   34550:	mov	x3, x20
   34554:	mov	x2, x19
   34558:	add	x1, sp, #0x1e0
   3455c:	mov	x0, x21
   34560:	bl	6430 <__asan_backtrace_release_view@plt>
   34564:	cbnz	w24, 3460c <__asan_internal_strnlen@@Base+0x1d8c>
   34568:	ldr	w0, [sp, #192]
   3456c:	cbz	w0, 34584 <__asan_internal_strnlen@@Base+0x1d04>
   34570:	mov	x3, x20
   34574:	mov	x2, x19
   34578:	add	x1, sp, #0x228
   3457c:	mov	x0, x21
   34580:	bl	6430 <__asan_backtrace_release_view@plt>
   34584:	ldr	w0, [sp, #208]
   34588:	cbz	w0, 34310 <__asan_internal_strnlen@@Base+0x1a90>
   3458c:	mov	x3, x20
   34590:	mov	x2, x19
   34594:	add	x1, sp, #0x240
   34598:	mov	x0, x21
   3459c:	bl	6430 <__asan_backtrace_release_view@plt>
   345a0:	b	34310 <__asan_internal_strnlen@@Base+0x1a90>
   345a4:	ldp	x2, x3, [x27, #24]
   345a8:	add	x6, sp, #0x228
   345ac:	ldp	x4, x5, [sp, #272]
   345b0:	ldr	w1, [sp, #264]
   345b4:	ldr	x0, [sp, #256]
   345b8:	bl	67b0 <__asan_backtrace_get_view@plt>
   345bc:	mov	w7, w0
   345c0:	cbz	w0, 34e00 <__asan_internal_strnlen@@Base+0x2580>
   345c4:	ldr	x1, [x27, #32]
   345c8:	mov	w0, #0x1                   	// #1
   345cc:	ldr	x2, [sp, #552]
   345d0:	str	w0, [sp, #192]
   345d4:	str	x2, [sp, #208]
   345d8:	mov	x0, x2
   345dc:	bl	6800 <__asan_internal_strnlen@plt>
   345e0:	add	x0, x0, #0x3
   345e4:	ldr	x1, [x27, #32]
   345e8:	and	x0, x0, #0xfffffffffffffffc
   345ec:	add	x3, x0, #0x4
   345f0:	cmp	x3, x1
   345f4:	b.hi	34490 <__asan_internal_strnlen@@Base+0x1c10>  // b.pmore
   345f8:	ldr	x2, [sp, #208]
   345fc:	str	x2, [sp, #328]
   34600:	ldr	w0, [x2, x0]
   34604:	str	w0, [sp, #320]
   34608:	b	34490 <__asan_internal_strnlen@@Base+0x1c10>
   3460c:	mov	w24, #0x0                   	// #0
   34610:	mov	x3, x20
   34614:	mov	x2, x19
   34618:	add	x1, sp, #0x1f8
   3461c:	mov	x0, x21
   34620:	bl	6430 <__asan_backtrace_release_view@plt>
   34624:	b	34568 <__asan_internal_strnlen@@Base+0x1ce8>
   34628:	ldr	x4, [sp, #240]
   3462c:	sbfiz	x1, x1, #5, #32
   34630:	ldr	x3, [x27, #24]
   34634:	add	x0, sp, #0x368
   34638:	str	x3, [x4, x1]
   3463c:	add	x2, sp, #0x378
   34640:	ldr	x3, [x27, #32]
   34644:	str	x3, [x0, x1]
   34648:	ldr	x0, [x27, #8]
   3464c:	ubfx	w0, w0, #11, #1
   34650:	str	w0, [x2, x1]
   34654:	b	3444c <__asan_internal_strnlen@@Base+0x1bcc>
   34658:	str	w21, [sp, #248]
   3465c:	b	3440c <__asan_internal_strnlen@@Base+0x1b8c>
   34660:	ldr	w0, [sp, #720]
   34664:	tbnz	w0, #1, 344a0 <__asan_internal_strnlen@@Base+0x1c20>
   34668:	ldr	w0, [x27, #4]
   3466c:	cmp	w0, #0x1
   34670:	b.ne	344a0 <__asan_internal_strnlen@@Base+0x1c20>  // b.any
   34674:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   34678:	mov	x0, x19
   3467c:	add	x1, x1, #0x1f8
   34680:	bl	67f0 <__asan_internal_strcmp@plt>
   34684:	cbnz	w0, 344a0 <__asan_internal_strnlen@@Base+0x1c20>
   34688:	ldp	x2, x3, [x27, #24]
   3468c:	ldp	x4, x5, [sp, #272]
   34690:	ldr	w1, [sp, #264]
   34694:	ldr	x0, [sp, #256]
   34698:	ldr	x6, [sp, #368]
   3469c:	bl	67b0 <__asan_backtrace_get_view@plt>
   346a0:	mov	w7, w0
   346a4:	cbz	w0, 34e00 <__asan_internal_strnlen@@Base+0x2580>
   346a8:	ldr	x0, [x27, #16]
   346ac:	str	x0, [sp, #624]
   346b0:	ldr	x0, [sp, #360]
   346b4:	str	x0, [sp, #304]
   346b8:	ldr	x0, [x27, #32]
   346bc:	str	x0, [sp, #640]
   346c0:	ldr	x0, [sp, #648]
   346c4:	str	x0, [sp, #632]
   346c8:	b	344a0 <__asan_internal_strnlen@@Base+0x1c20>
   346cc:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   346d0:	mov	x0, x19
   346d4:	add	x1, x1, #0x1e0
   346d8:	bl	67f0 <__asan_internal_strcmp@plt>
   346dc:	cbnz	w0, 34494 <__asan_internal_strnlen@@Base+0x1c14>
   346e0:	ldp	x2, x3, [x27, #24]
   346e4:	add	x6, sp, #0x240
   346e8:	ldp	x4, x5, [sp, #272]
   346ec:	ldr	w1, [sp, #264]
   346f0:	ldr	x0, [sp, #256]
   346f4:	bl	67b0 <__asan_backtrace_get_view@plt>
   346f8:	mov	w7, w0
   346fc:	cbz	w0, 34e00 <__asan_internal_strnlen@@Base+0x2580>
   34700:	ldr	x1, [x27, #32]
   34704:	mov	w26, #0x1                   	// #1
   34708:	ldr	x0, [sp, #576]
   3470c:	str	x0, [sp, #288]
   34710:	bl	6800 <__asan_internal_strnlen@plt>
   34714:	ldr	x1, [x27, #32]
   34718:	cmp	x1, x0
   3471c:	b.ls	34494 <__asan_internal_strnlen@@Base+0x1c14>  // b.plast
   34720:	add	x0, x0, #0x1
   34724:	sub	w2, w1, w0
   34728:	str	w2, [sp, #324]
   3472c:	ldr	x1, [sp, #288]
   34730:	add	x0, x1, x0
   34734:	str	x0, [sp, #312]
   34738:	b	34494 <__asan_internal_strnlen@@Base+0x1c14>
   3473c:	mov	x0, x19
   34740:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   34744:	add	x1, x1, #0x1b0
   34748:	bl	67f0 <__asan_internal_strcmp@plt>
   3474c:	mov	w7, w0
   34750:	cbnz	w0, 3446c <__asan_internal_strnlen@@Base+0x1bec>
   34754:	ldp	x2, x3, [x27, #24]
   34758:	add	x6, sp, #0x210
   3475c:	ldp	x4, x5, [sp, #272]
   34760:	str	w7, [sp, #208]
   34764:	ldr	w1, [sp, #264]
   34768:	ldr	x0, [sp, #256]
   3476c:	bl	67b0 <__asan_backtrace_get_view@plt>
   34770:	cbz	w0, 35048 <__asan_internal_strnlen@@Base+0x27c8>
   34774:	ldr	x3, [sp, #528]
   34778:	ldr	w7, [sp, #208]
   3477c:	ldr	w0, [x3, #8]
   34780:	cmp	w0, #0x3
   34784:	b.eq	34880 <__asan_internal_strnlen@@Base+0x2000>  // b.none
   34788:	ldr	w0, [sp, #1224]
   3478c:	cbz	w0, 347bc <__asan_internal_strnlen@@Base+0x1f3c>
   34790:	ldr	w0, [sp, #376]
   34794:	ldr	w1, [sp, #1224]
   34798:	cmp	w0, w1
   3479c:	b.ne	35390 <__asan_internal_strnlen@@Base+0x2b10>  // b.any
   347a0:	mov	w2, w0
   347a4:	str	w7, [sp, #200]
   347a8:	ldr	x0, [sp, #336]
   347ac:	ldr	x1, [sp, #1216]
   347b0:	bl	68f0 <__asan_internal_memcmp@plt>
   347b4:	ldr	w7, [sp, #200]
   347b8:	cbnz	w0, 35390 <__asan_internal_strnlen@@Base+0x2b10>
   347bc:	mov	w0, #0x1                   	// #1
   347c0:	str	w0, [sp, #200]
   347c4:	b	3446c <__asan_internal_strnlen@@Base+0x1bec>
   347c8:	add	x0, sp, #0x360
   347cc:	mov	x5, x20
   347d0:	mov	x6, x0
   347d4:	mov	x4, x19
   347d8:	mov	x2, x26
   347dc:	mov	w1, w22
   347e0:	mov	x3, #0x8                   	// #8
   347e4:	str	x0, [sp, #240]
   347e8:	mov	x0, x21
   347ec:	bl	67b0 <__asan_backtrace_get_view@plt>
   347f0:	mov	w24, w0
   347f4:	cbz	w0, 3410c <__asan_internal_strnlen@@Base+0x188c>
   347f8:	ldr	w1, [sp, #232]
   347fc:	ldr	x0, [sp, #864]
   34800:	cbz	w1, 3486c <__asan_internal_strnlen@@Base+0x1fec>
   34804:	ldr	w25, [x0, #40]
   34808:	mov	w1, #0xffff                	// #65535
   3480c:	ldr	w0, [sp, #232]
   34810:	cmp	w0, w25
   34814:	sub	w0, w25, #0x100
   34818:	ccmp	w25, w1, #0x0, ls  // ls = plast
   3481c:	csel	w25, w0, w25, hi  // hi = pmore
   34820:	ldr	x1, [sp, #240]
   34824:	mov	x3, x20
   34828:	mov	x2, x19
   3482c:	mov	x0, x21
   34830:	bl	6430 <__asan_backtrace_release_view@plt>
   34834:	b	34280 <__asan_internal_strnlen@@Base+0x1a00>
   34838:	ldp	x19, x20, [sp, #272]
   3483c:	str	w26, [sp, #208]
   34840:	ldr	w22, [sp, #264]
   34844:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   34848:	mov	w2, #0x0                   	// #0
   3484c:	add	x1, x1, #0x190
   34850:	mov	w24, #0x0                   	// #0
   34854:	ldr	x21, [sp, #256]
   34858:	mov	x0, x20
   3485c:	ldr	x25, [sp, #304]
   34860:	blr	x19
   34864:	str	wzr, [sp, #232]
   34868:	b	34520 <__asan_internal_strnlen@@Base+0x1ca0>
   3486c:	ldr	w1, [x0, #32]
   34870:	cmp	w25, w27
   34874:	str	w1, [sp, #232]
   34878:	b.ne	34820 <__asan_internal_strnlen@@Base+0x1fa0>  // b.any
   3487c:	b	34804 <__asan_internal_strnlen@@Base+0x1f84>
   34880:	ldr	w0, [x3]
   34884:	cmp	w0, #0x4
   34888:	b.ne	34788 <__asan_internal_strnlen@@Base+0x1f08>  // b.any
   3488c:	add	x4, x3, #0xc
   34890:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   34894:	mov	x0, x4
   34898:	add	x1, x1, #0x1c8
   3489c:	mov	x2, #0x4                   	// #4
   348a0:	stp	x4, x3, [sp, #200]
   348a4:	str	w7, [sp, #380]
   348a8:	bl	6830 <__asan_internal_strncmp@plt>
   348ac:	ldr	w7, [sp, #380]
   348b0:	cbnz	w0, 34788 <__asan_internal_strnlen@@Base+0x1f08>
   348b4:	ldr	x3, [sp, #208]
   348b8:	ldp	w0, w2, [x3]
   348bc:	ldr	x3, [x27, #32]
   348c0:	add	w0, w0, #0x3
   348c4:	and	w0, w0, #0xfffffffc
   348c8:	add	w1, w2, #0xc
   348cc:	add	w1, w1, w0
   348d0:	cmp	x3, x1
   348d4:	b.hi	34788 <__asan_internal_strnlen@@Base+0x1f08>  // b.pmore
   348d8:	ldr	x4, [sp, #200]
   348dc:	str	w2, [sp, #376]
   348e0:	add	x0, x4, w0, uxtw
   348e4:	str	x0, [sp, #336]
   348e8:	b	34788 <__asan_internal_strnlen@@Base+0x1f08>
   348ec:	ldp	x2, x3, [x27, #24]
   348f0:	add	x26, sp, #0x1e0
   348f4:	mov	x6, x26
   348f8:	mov	x5, x20
   348fc:	mov	x4, x19
   34900:	mov	w1, w22
   34904:	mov	x0, x21
   34908:	str	w7, [sp, #248]
   3490c:	mov	w24, #0x0                   	// #0
   34910:	bl	67b0 <__asan_backtrace_get_view@plt>
   34914:	str	w0, [sp, #232]
   34918:	cbz	w0, 34520 <__asan_internal_strnlen@@Base+0x1ca0>
   3491c:	ldr	w7, [sp, #248]
   34920:	add	x6, sp, #0x1f8
   34924:	ldr	x0, [sp, #296]
   34928:	sub	w7, w7, #0x1
   3492c:	mov	x5, x20
   34930:	mov	x4, x19
   34934:	mov	w1, w22
   34938:	add	x7, x0, x7, lsl #6
   3493c:	mov	x0, x21
   34940:	str	x7, [sp, #232]
   34944:	ldp	x2, x3, [x7, #24]
   34948:	bl	67b0 <__asan_backtrace_get_view@plt>
   3494c:	mov	w24, w0
   34950:	cbz	w0, 34ef8 <__asan_internal_strnlen@@Base+0x2678>
   34954:	mov	x3, x20
   34958:	mov	x2, x19
   3495c:	mov	x0, x21
   34960:	mov	x1, #0x18                  	// #24
   34964:	bl	65b0 <__asan_backtrace_alloc@plt>
   34968:	mov	x24, x0
   3496c:	cbz	x0, 35400 <__asan_internal_strnlen@@Base+0x2b80>
   34970:	ldr	x5, [x27, #32]
   34974:	mov	x0, #0x18                  	// #24
   34978:	ldr	x7, [sp, #232]
   3497c:	cmp	x5, #0x17
   34980:	udiv	x5, x5, x0
   34984:	ldr	x8, [sp, #480]
   34988:	ldr	x7, [x7, #32]
   3498c:	ldr	x13, [sp, #504]
   34990:	b.ls	353dc <__asan_internal_strnlen@@Base+0x2b5c>  // b.plast
   34994:	mov	x1, x8
   34998:	mov	x2, #0x0                   	// #0
   3499c:	mov	x4, #0x0                   	// #0
   349a0:	b	349b0 <__asan_internal_strnlen@@Base+0x2130>
   349a4:	add	x1, x1, #0x18
   349a8:	cmp	x5, x2
   349ac:	b.ls	34f04 <__asan_internal_strnlen@@Base+0x2684>  // b.plast
   349b0:	ldrb	w0, [x1, #4]
   349b4:	add	x2, x2, #0x1
   349b8:	and	w0, w0, #0xf
   349bc:	sub	w0, w0, #0x1
   349c0:	cmp	w0, #0x1
   349c4:	b.hi	349a4 <__asan_internal_strnlen@@Base+0x2124>  // b.pmore
   349c8:	ldrh	w0, [x1, #6]
   349cc:	cbz	w0, 349a4 <__asan_internal_strnlen@@Base+0x2124>
   349d0:	add	x4, x4, #0x1
   349d4:	b	349a4 <__asan_internal_strnlen@@Base+0x2124>
   349d8:	str	wzr, [sp, #232]
   349dc:	ldr	x1, [sp, #216]
   349e0:	mov	x3, x20
   349e4:	mov	x2, x19
   349e8:	mov	x0, x21
   349ec:	bl	6430 <__asan_backtrace_release_view@plt>
   349f0:	ldr	x1, [sp, #224]
   349f4:	mov	x0, x21
   349f8:	mov	x3, x20
   349fc:	mov	x2, x19
   34a00:	bl	6430 <__asan_backtrace_release_view@plt>
   34a04:	ldr	x0, [sp, #336]
   34a08:	cbz	x0, 34adc <__asan_internal_strnlen@@Base+0x225c>
   34a0c:	adrp	x4, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   34a10:	add	x4, x4, #0x258
   34a14:	mov	x0, x4
   34a18:	str	x4, [sp, #248]
   34a1c:	bl	64b0 <__asan_internal_strlen@plt>
   34a20:	ldr	w27, [sp, #376]
   34a24:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   34a28:	mov	x24, x0
   34a2c:	add	x0, x1, #0x278
   34a30:	bl	64b0 <__asan_internal_strlen@plt>
   34a34:	mov	x2, x0
   34a38:	add	x1, x27, #0x1
   34a3c:	add	x26, x24, x0
   34a40:	mov	x3, x20
   34a44:	mov	x0, x21
   34a48:	add	x1, x26, x1, lsl #1
   34a4c:	stp	x2, x1, [sp, #216]
   34a50:	mov	x2, x19
   34a54:	bl	65b0 <__asan_backtrace_alloc@plt>
   34a58:	mov	x26, x0
   34a5c:	cbz	x0, 34adc <__asan_internal_strnlen@@Base+0x225c>
   34a60:	ldr	x4, [sp, #248]
   34a64:	mov	x2, x24
   34a68:	add	x24, x0, x24
   34a6c:	mov	x1, x4
   34a70:	bl	64a0 <__asan_internal_memcpy@plt>
   34a74:	cbz	x27, 34d90 <__asan_internal_strnlen@@Base+0x2510>
   34a78:	mov	x2, #0x0                   	// #0
   34a7c:	mov	w7, #0x2f                  	// #47
   34a80:	ldr	x5, [sp, #336]
   34a84:	b	34a98 <__asan_internal_strnlen@@Base+0x2218>
   34a88:	add	x24, x24, #0x2
   34a8c:	add	x2, x2, #0x1
   34a90:	cmp	x27, x2
   34a94:	b.eq	34d90 <__asan_internal_strnlen@@Base+0x2510>  // b.none
   34a98:	ldrb	w0, [x5, x2]
   34a9c:	and	w1, w0, #0xf
   34aa0:	lsr	w0, w0, #4
   34aa4:	add	w3, w1, #0x30
   34aa8:	cmp	w0, #0x9
   34aac:	add	w4, w0, #0x30
   34ab0:	add	w0, w0, #0x57
   34ab4:	csel	w0, w0, w4, hi  // hi = pmore
   34ab8:	cmp	w1, #0x9
   34abc:	add	w1, w1, #0x57
   34ac0:	strb	w0, [x24]
   34ac4:	csel	w0, w1, w3, hi  // hi = pmore
   34ac8:	strb	w0, [x24, #1]
   34acc:	cbnz	x2, 34a88 <__asan_internal_strnlen@@Base+0x2208>
   34ad0:	add	x24, x24, #0x3
   34ad4:	sturb	w7, [x24, #-1]
   34ad8:	b	34a8c <__asan_internal_strnlen@@Base+0x220c>
   34adc:	ldr	w0, [sp, #200]
   34ae0:	cbnz	w0, 34ba4 <__asan_internal_strnlen@@Base+0x2324>
   34ae4:	cbz	x25, 34afc <__asan_internal_strnlen@@Base+0x227c>
   34ae8:	add	x1, x25, #0x18
   34aec:	mov	x3, x20
   34af0:	mov	x2, x19
   34af4:	mov	x0, x21
   34af8:	bl	6430 <__asan_backtrace_release_view@plt>
   34afc:	ldr	x0, [sp, #328]
   34b00:	cbz	x0, 34c68 <__asan_internal_strnlen@@Base+0x23e8>
   34b04:	mov	x2, x0
   34b08:	mov	x4, x20
   34b0c:	mov	x3, x19
   34b10:	mov	x1, x28
   34b14:	mov	x0, x21
   34b18:	bl	32ee0 <__asan_internal_strnlen@@Base+0x660>
   34b1c:	mov	w24, w0
   34b20:	tbnz	w0, #31, 34c68 <__asan_internal_strnlen@@Base+0x23e8>
   34b24:	ldr	w0, [sp, #320]
   34b28:	cbnz	w0, 34bbc <__asan_internal_strnlen@@Base+0x233c>
   34b2c:	mov	x3, x20
   34b30:	mov	x2, x19
   34b34:	add	x1, sp, #0x228
   34b38:	mov	x0, x21
   34b3c:	bl	6430 <__asan_backtrace_release_view@plt>
   34b40:	ldr	w0, [sp, #208]
   34b44:	cbnz	w0, 3508c <__asan_internal_strnlen@@Base+0x280c>
   34b48:	ldp	x3, x6, [sp, #176]
   34b4c:	mov	w0, #0x1                   	// #1
   34b50:	ldr	x1, [sp, #1184]
   34b54:	stp	x1, xzr, [sp]
   34b58:	mov	x7, x23
   34b5c:	str	wzr, [sp, #16]
   34b60:	mov	w2, w24
   34b64:	str	w0, [sp, #24]
   34b68:	mov	x5, x20
   34b6c:	str	xzr, [sp, #32]
   34b70:	mov	x4, x19
   34b74:	str	wzr, [sp, #40]
   34b78:	mov	x0, x21
   34b7c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x7320>
   34b80:	add	x1, x1, #0x428
   34b84:	bl	34090 <__asan_internal_strnlen@@Base+0x1810>
   34b88:	mov	w23, w0
   34b8c:	mov	x2, x20
   34b90:	mov	x1, x19
   34b94:	tbz	w0, #31, 34140 <__asan_internal_strnlen@@Base+0x18c0>
   34b98:	mov	w0, w24
   34b9c:	bl	6960 <__asan_backtrace_close@plt>
   34ba0:	b	34148 <__asan_internal_strnlen@@Base+0x18c8>
   34ba4:	mov	x3, x20
   34ba8:	mov	x2, x19
   34bac:	add	x1, sp, #0x210
   34bb0:	mov	x0, x21
   34bb4:	bl	6430 <__asan_backtrace_release_view@plt>
   34bb8:	b	34ae4 <__asan_internal_strnlen@@Base+0x2264>
   34bbc:	add	x2, sp, #0x2e0
   34bc0:	mov	w1, w24
   34bc4:	mov	w0, #0x0                   	// #0
   34bc8:	bl	6360 <__fxstat@plt>
   34bcc:	tbnz	w0, #31, 3506c <__asan_internal_strnlen@@Base+0x27ec>
   34bd0:	ldr	x3, [sp, #784]
   34bd4:	add	x26, sp, #0x258
   34bd8:	mov	x6, x26
   34bdc:	mov	x5, x20
   34be0:	mov	x4, x19
   34be4:	mov	w1, w24
   34be8:	mov	x0, x21
   34bec:	mov	x2, #0x0                   	// #0
   34bf0:	bl	67b0 <__asan_backtrace_get_view@plt>
   34bf4:	cbz	w0, 34c58 <__asan_internal_strnlen@@Base+0x23d8>
   34bf8:	ldr	x2, [sp, #600]
   34bfc:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   34c00:	ldr	x3, [sp, #784]
   34c04:	add	x0, x0, #0x2f0
   34c08:	add	x0, x0, #0x4e0
   34c0c:	mov	w25, #0xffffffff            	// #-1
   34c10:	add	x3, x2, x3
   34c14:	b	34c2c <__asan_internal_strnlen@@Base+0x23ac>
   34c18:	ldrb	w1, [x2], #1
   34c1c:	eor	w1, w1, w25
   34c20:	and	x1, x1, #0xff
   34c24:	ldr	w1, [x0, x1, lsl #2]
   34c28:	eor	w25, w1, w25, lsr #8
   34c2c:	cmp	x3, x2
   34c30:	b.hi	34c18 <__asan_internal_strnlen@@Base+0x2398>  // b.pmore
   34c34:	mov	x0, x21
   34c38:	mov	x1, x26
   34c3c:	mov	x3, x20
   34c40:	mov	x2, x19
   34c44:	bl	6430 <__asan_backtrace_release_view@plt>
   34c48:	mvn	w25, w25
   34c4c:	ldr	w0, [sp, #320]
   34c50:	cmp	w25, w0
   34c54:	b.eq	34b2c <__asan_internal_strnlen@@Base+0x22ac>  // b.none
   34c58:	mov	w0, w24
   34c5c:	mov	x2, x20
   34c60:	mov	x1, x19
   34c64:	bl	6960 <__asan_backtrace_close@plt>
   34c68:	ldr	w0, [sp, #192]
   34c6c:	cbnz	w0, 34ed8 <__asan_internal_strnlen@@Base+0x2658>
   34c70:	ldr	x0, [sp, #288]
   34c74:	str	xzr, [sp, #392]
   34c78:	cbz	x0, 34e20 <__asan_internal_strnlen@@Base+0x25a0>
   34c7c:	mov	x2, x0
   34c80:	mov	x4, x20
   34c84:	mov	x3, x19
   34c88:	mov	x1, x28
   34c8c:	mov	x0, x21
   34c90:	bl	32ee0 <__asan_internal_strnlen@@Base+0x660>
   34c94:	mov	w24, w0
   34c98:	tbnz	w0, #31, 34e20 <__asan_internal_strnlen@@Base+0x25a0>
   34c9c:	mov	w8, #0x1                   	// #1
   34ca0:	str	w8, [sp, #24]
   34ca4:	ldp	x3, x6, [sp, #176]
   34ca8:	mov	x7, x23
   34cac:	ldr	x8, [sp, #312]
   34cb0:	str	x8, [sp, #32]
   34cb4:	ldr	w8, [sp, #324]
   34cb8:	add	x0, sp, #0x188
   34cbc:	ldr	x1, [sp, #1184]
   34cc0:	mov	x5, x20
   34cc4:	mov	x4, x19
   34cc8:	stp	x1, x0, [sp]
   34ccc:	mov	w2, w24
   34cd0:	str	wzr, [sp, #16]
   34cd4:	mov	x1, x28
   34cd8:	str	w8, [sp, #40]
   34cdc:	mov	x0, x21
   34ce0:	bl	34090 <__asan_internal_strnlen@@Base+0x1810>
   34ce4:	mov	w23, w0
   34ce8:	mov	x3, x20
   34cec:	mov	x2, x19
   34cf0:	add	x1, sp, #0x240
   34cf4:	mov	x0, x21
   34cf8:	bl	6430 <__asan_backtrace_release_view@plt>
   34cfc:	tbnz	w23, #31, 353b8 <__asan_internal_strnlen@@Base+0x2b38>
   34d00:	ldr	x0, [sp, #240]
   34d04:	add	x4, sp, #0x4a0
   34d08:	mov	x3, #0x0                   	// #0
   34d0c:	mov	x25, #0x0                   	// #0
   34d10:	mov	x23, x0
   34d14:	b	34d38 <__asan_internal_strnlen@@Base+0x24b8>
   34d18:	cmp	x1, x25
   34d1c:	csel	x25, x25, x1, ge  // ge = tcont
   34d20:	add	x1, x1, x2
   34d24:	cmp	x3, x1
   34d28:	csel	x3, x3, x1, ge  // ge = tcont
   34d2c:	add	x0, x0, #0x20
   34d30:	cmp	x4, x0
   34d34:	b.eq	34d50 <__asan_internal_strnlen@@Base+0x24d0>  // b.none
   34d38:	ldr	x2, [x0, #8]
   34d3c:	cbz	x2, 34d2c <__asan_internal_strnlen@@Base+0x24ac>
   34d40:	ldr	x1, [x0]
   34d44:	cbnz	x25, 34d18 <__asan_internal_strnlen@@Base+0x2498>
   34d48:	mov	x25, x1
   34d4c:	b	34d20 <__asan_internal_strnlen@@Base+0x24a0>
   34d50:	cmp	x25, #0x0
   34d54:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   34d58:	b.ne	34e40 <__asan_internal_strnlen@@Base+0x25c0>  // b.any
   34d5c:	mov	x2, x20
   34d60:	mov	x1, x19
   34d64:	mov	w0, w22
   34d68:	bl	6960 <__asan_backtrace_close@plt>
   34d6c:	mov	w24, w0
   34d70:	cbnz	w0, 34ef0 <__asan_internal_strnlen@@Base+0x2670>
   34d74:	ldr	w0, [sp, #232]
   34d78:	cbz	w0, 3410c <__asan_internal_strnlen@@Base+0x188c>
   34d7c:	mov	x25, #0x0                   	// #0
   34d80:	str	wzr, [sp, #192]
   34d84:	str	wzr, [sp, #200]
   34d88:	str	wzr, [sp, #208]
   34d8c:	b	34610 <__asan_internal_strnlen@@Base+0x1d90>
   34d90:	ldr	x27, [sp, #216]
   34d94:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   34d98:	add	x1, x0, #0x278
   34d9c:	mov	x0, x24
   34da0:	mov	x2, x27
   34da4:	bl	64a0 <__asan_internal_memcpy@plt>
   34da8:	strb	wzr, [x24, x27]
   34dac:	add	x3, sp, #0x2e0
   34db0:	mov	x2, x20
   34db4:	mov	x1, x19
   34db8:	mov	x0, x26
   34dbc:	bl	6a30 <__asan_backtrace_open@plt>
   34dc0:	ldr	x2, [sp, #224]
   34dc4:	mov	w24, w0
   34dc8:	mov	x1, x26
   34dcc:	mov	x4, x20
   34dd0:	mov	x3, x19
   34dd4:	mov	x0, x21
   34dd8:	bl	6890 <__asan_backtrace_free@plt>
   34ddc:	tbnz	w24, #31, 34adc <__asan_internal_strnlen@@Base+0x225c>
   34de0:	mov	x0, x21
   34de4:	mov	x3, x20
   34de8:	mov	x2, x19
   34dec:	add	x1, sp, #0x210
   34df0:	bl	6430 <__asan_backtrace_release_view@plt>
   34df4:	ldr	w0, [sp, #192]
   34df8:	cbz	w0, 34b40 <__asan_internal_strnlen@@Base+0x22c0>
   34dfc:	b	34b2c <__asan_internal_strnlen@@Base+0x22ac>
   34e00:	ldr	w22, [sp, #264]
   34e04:	mov	w24, #0x0                   	// #0
   34e08:	str	w26, [sp, #208]
   34e0c:	str	w7, [sp, #232]
   34e10:	ldr	x21, [sp, #256]
   34e14:	ldp	x19, x20, [sp, #272]
   34e18:	ldr	x25, [sp, #304]
   34e1c:	b	34520 <__asan_internal_strnlen@@Base+0x1ca0>
   34e20:	ldr	w0, [sp, #208]
   34e24:	cbz	w0, 34d00 <__asan_internal_strnlen@@Base+0x2480>
   34e28:	mov	x3, x20
   34e2c:	mov	x2, x19
   34e30:	add	x1, sp, #0x240
   34e34:	mov	x0, x21
   34e38:	bl	6430 <__asan_backtrace_release_view@plt>
   34e3c:	b	34d00 <__asan_internal_strnlen@@Base+0x2480>
   34e40:	add	x0, sp, #0x2e0
   34e44:	sub	x3, x3, x25
   34e48:	mov	x6, x0
   34e4c:	mov	x5, x20
   34e50:	mov	x4, x19
   34e54:	mov	x2, x25
   34e58:	mov	w1, w22
   34e5c:	str	x0, [sp, #192]
   34e60:	mov	x0, x21
   34e64:	bl	67b0 <__asan_backtrace_get_view@plt>
   34e68:	mov	w24, w0
   34e6c:	cbz	w0, 34d74 <__asan_internal_strnlen@@Base+0x24f4>
   34e70:	mov	x2, x20
   34e74:	mov	x1, x19
   34e78:	mov	w0, w22
   34e7c:	bl	6960 <__asan_backtrace_close@plt>
   34e80:	cbz	w0, 353c4 <__asan_internal_strnlen@@Base+0x2b44>
   34e84:	mov	w22, #0x0                   	// #0
   34e88:	mov	w1, #0x0                   	// #0
   34e8c:	ldr	x0, [sp, #240]
   34e90:	ldr	x3, [sp, #736]
   34e94:	b	34eac <__asan_internal_strnlen@@Base+0x262c>
   34e98:	str	xzr, [x0, #16]
   34e9c:	cmp	w2, #0xa
   34ea0:	b.eq	350fc <__asan_internal_strnlen@@Base+0x287c>  // b.none
   34ea4:	add	x0, x0, #0x20
   34ea8:	mov	w1, w2
   34eac:	ldr	x4, [x0, #8]
   34eb0:	add	w2, w1, #0x1
   34eb4:	cmp	w1, #0x4
   34eb8:	cbz	x4, 34e98 <__asan_internal_strnlen@@Base+0x2618>
   34ebc:	ldr	x1, [x0]
   34ec0:	sub	x1, x1, x25
   34ec4:	add	x1, x3, x1
   34ec8:	str	x1, [x0, #16]
   34ecc:	b.hi	34e9c <__asan_internal_strnlen@@Base+0x261c>  // b.pmore
   34ed0:	add	w22, w22, #0x1
   34ed4:	b	34ea4 <__asan_internal_strnlen@@Base+0x2624>
   34ed8:	mov	x3, x20
   34edc:	mov	x2, x19
   34ee0:	add	x1, sp, #0x228
   34ee4:	mov	x0, x21
   34ee8:	bl	6430 <__asan_backtrace_release_view@plt>
   34eec:	b	34c70 <__asan_internal_strnlen@@Base+0x23f0>
   34ef0:	mov	w23, #0x1                   	// #1
   34ef4:	b	34148 <__asan_internal_strnlen@@Base+0x18c8>
   34ef8:	mov	w0, #0x1                   	// #1
   34efc:	str	w0, [sp, #232]
   34f00:	b	34520 <__asan_internal_strnlen@@Base+0x1ca0>
   34f04:	mov	x9, #0x18                  	// #24
   34f08:	mov	x3, x20
   34f0c:	mov	x2, x19
   34f10:	mov	x0, x21
   34f14:	mul	x6, x4, x9
   34f18:	stp	x4, x13, [sp, #248]
   34f1c:	mov	x1, x6
   34f20:	str	x6, [sp, #232]
   34f24:	stp	x7, x5, [sp, #264]
   34f28:	str	x8, [sp, #280]
   34f2c:	bl	65b0 <__asan_backtrace_alloc@plt>
   34f30:	mov	x27, x0
   34f34:	cbz	x0, 350d8 <__asan_internal_strnlen@@Base+0x2858>
   34f38:	ldp	x4, x13, [sp, #248]
   34f3c:	mov	x9, #0x18                  	// #24
   34f40:	ldp	x7, x5, [sp, #264]
   34f44:	mov	x1, #0x0                   	// #0
   34f48:	ldr	x6, [sp, #232]
   34f4c:	mov	w3, #0x0                   	// #0
   34f50:	ldr	x8, [sp, #280]
   34f54:	add	x1, x1, #0x1
   34f58:	ldrb	w0, [x8, #4]
   34f5c:	and	w0, w0, #0xf
   34f60:	sub	w0, w0, #0x1
   34f64:	cmp	w0, #0x1
   34f68:	b.hi	34fd8 <__asan_internal_strnlen@@Base+0x2758>  // b.pmore
   34f6c:	ldrh	w2, [x8, #6]
   34f70:	umull	x0, w3, w9
   34f74:	add	x10, x27, x0
   34f78:	cbz	w2, 34fd8 <__asan_internal_strnlen@@Base+0x2758>
   34f7c:	ldr	w2, [x8]
   34f80:	add	w3, w3, #0x1
   34f84:	add	x11, x13, x2
   34f88:	cmp	x7, x2
   34f8c:	b.ls	350a4 <__asan_internal_strnlen@@Base+0x2824>  // b.plast
   34f90:	str	x11, [x27, x0]
   34f94:	ldr	x0, [x8, #8]
   34f98:	cbz	x25, 34fc4 <__asan_internal_strnlen@@Base+0x2744>
   34f9c:	ldr	x2, [x25]
   34fa0:	cmp	x2, x0
   34fa4:	b.hi	34fc4 <__asan_internal_strnlen@@Base+0x2744>  // b.pmore
   34fa8:	ldr	x12, [x25, #16]
   34fac:	sub	x11, x0, x2
   34fb0:	add	x2, x2, x12
   34fb4:	cmp	x2, x0
   34fb8:	b.ls	34fc4 <__asan_internal_strnlen@@Base+0x2744>  // b.plast
   34fbc:	ldr	x0, [x25, #8]
   34fc0:	ldr	x0, [x0, x11]
   34fc4:	ldr	x2, [sp, #176]
   34fc8:	add	x0, x2, x0
   34fcc:	str	x0, [x10, #8]
   34fd0:	ldr	x0, [x8, #16]
   34fd4:	str	x0, [x10, #16]
   34fd8:	add	x8, x8, #0x18
   34fdc:	cmp	x5, x1
   34fe0:	b.hi	34f54 <__asan_internal_strnlen@@Base+0x26d4>  // b.pmore
   34fe4:	mov	x1, x4
   34fe8:	mov	x0, x27
   34fec:	mov	x2, #0x18                  	// #24
   34ff0:	adrp	x3, 32000 <__asan_cplus_demangle_mangled_name@@Base+0x100>
   34ff4:	add	x3, x3, #0x8c8
   34ff8:	str	x4, [sp, #232]
   34ffc:	bl	63a0 <__asan_backtrace_qsort@plt>
   35000:	stp	xzr, x27, [x24]
   35004:	mov	x1, x26
   35008:	ldr	x4, [sp, #232]
   3500c:	str	x4, [x24, #16]
   35010:	mov	x0, x21
   35014:	mov	x3, x20
   35018:	mov	x2, x19
   3501c:	bl	6430 <__asan_backtrace_release_view@plt>
   35020:	mov	w0, #0x1                   	// #1
   35024:	str	w0, [x23]
   35028:	add	x1, x21, #0x30
   3502c:	ldr	w0, [x21, #8]
   35030:	cbnz	w0, 35354 <__asan_internal_strnlen@@Base+0x2ad4>
   35034:	ldr	x0, [x21, #48]
   35038:	cbz	x0, 353cc <__asan_internal_strnlen@@Base+0x2b4c>
   3503c:	mov	x1, x0
   35040:	ldr	x0, [x0]
   35044:	b	35038 <__asan_internal_strnlen@@Base+0x27b8>
   35048:	mov	w24, w0
   3504c:	ldr	w0, [sp, #200]
   35050:	ldr	w22, [sp, #264]
   35054:	str	w26, [sp, #208]
   35058:	str	w0, [sp, #232]
   3505c:	ldr	x21, [sp, #256]
   35060:	ldp	x19, x20, [sp, #272]
   35064:	ldr	x25, [sp, #304]
   35068:	b	34520 <__asan_internal_strnlen@@Base+0x1ca0>
   3506c:	bl	6790 <__errno_location@plt>
   35070:	mov	x2, x0
   35074:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   35078:	mov	x0, x20
   3507c:	add	x1, x1, #0x280
   35080:	ldr	w2, [x2]
   35084:	blr	x19
   35088:	b	34c58 <__asan_internal_strnlen@@Base+0x23d8>
   3508c:	mov	x3, x20
   35090:	mov	x2, x19
   35094:	add	x1, sp, #0x240
   35098:	mov	x0, x21
   3509c:	bl	6430 <__asan_backtrace_release_view@plt>
   350a0:	b	34b48 <__asan_internal_strnlen@@Base+0x22c8>
   350a4:	str	x6, [sp, #176]
   350a8:	mov	x0, x20
   350ac:	mov	w2, #0x0                   	// #0
   350b0:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   350b4:	add	x1, x1, #0x230
   350b8:	blr	x19
   350bc:	ldr	x6, [sp, #176]
   350c0:	mov	x4, x20
   350c4:	mov	x3, x19
   350c8:	mov	x1, x27
   350cc:	mov	x0, x21
   350d0:	mov	x2, x6
   350d4:	bl	6890 <__asan_backtrace_free@plt>
   350d8:	mov	x1, x24
   350dc:	mov	x4, x20
   350e0:	mov	x3, x19
   350e4:	mov	x0, x21
   350e8:	mov	x2, #0x18                  	// #24
   350ec:	mov	w24, #0x1                   	// #1
   350f0:	bl	6890 <__asan_backtrace_free@plt>
   350f4:	str	w24, [sp, #232]
   350f8:	b	34520 <__asan_internal_strnlen@@Base+0x1ca0>
   350fc:	ldr	x27, [sp, #240]
   35100:	adrp	x25, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   35104:	add	x28, sp, #0x258
   35108:	add	x25, x25, #0x288
   3510c:	add	x0, sp, #0x190
   35110:	mov	w24, #0x5                   	// #5
   35114:	mov	x26, #0x0                   	// #0
   35118:	str	x0, [sp, #200]
   3511c:	ldr	x0, [x27, #8]
   35120:	cbnz	x0, 3519c <__asan_internal_strnlen@@Base+0x291c>
   35124:	ldr	x3, [x27, #168]
   35128:	cbz	x3, 3519c <__asan_internal_strnlen@@Base+0x291c>
   3512c:	cbz	x26, 35430 <__asan_internal_strnlen@@Base+0x2bb0>
   35130:	str	xzr, [sp, #400]
   35134:	mov	x1, x25
   35138:	str	xzr, [sp, #600]
   3513c:	cmp	x3, #0xb
   35140:	mov	x2, #0x4                   	// #4
   35144:	b.ls	35188 <__asan_internal_strnlen@@Base+0x2908>  // b.plast
   35148:	ldr	x4, [x27, #176]
   3514c:	stp	x4, x3, [sp, #208]
   35150:	mov	x0, x4
   35154:	bl	68f0 <__asan_internal_memcmp@plt>
   35158:	cbnz	w0, 35188 <__asan_internal_strnlen@@Base+0x2908>
   3515c:	ldp	x6, x4, [sp, #200]
   35160:	mov	x7, x28
   35164:	ldr	x3, [sp, #216]
   35168:	mov	x5, x20
   3516c:	mov	x0, x21
   35170:	mov	x2, x3
   35174:	mov	x3, x26
   35178:	mov	x1, x4
   3517c:	mov	x4, x19
   35180:	bl	33fd0 <__asan_internal_strnlen@@Base+0x1750>
   35184:	cbz	w0, 35454 <__asan_internal_strnlen@@Base+0x2bd4>
   35188:	ldr	x0, [sp, #400]
   3518c:	str	x0, [x27, #16]
   35190:	ldr	x0, [sp, #600]
   35194:	str	x0, [x27, #8]
   35198:	str	wzr, [x27, #24]
   3519c:	add	x27, x27, #0x20
   351a0:	subs	w24, w24, #0x1
   351a4:	b.ne	3511c <__asan_internal_strnlen@@Base+0x289c>  // b.any
   351a8:	mov	w25, #0x5                   	// #5
   351ac:	ldr	x28, [x23, #8]
   351b0:	cbz	x28, 351ec <__asan_internal_strnlen@@Base+0x296c>
   351b4:	ldr	w0, [x23, #24]
   351b8:	cbz	w0, 351ec <__asan_internal_strnlen@@Base+0x296c>
   351bc:	cbz	x26, 352a0 <__asan_internal_strnlen@@Base+0x2a20>
   351c0:	cmp	x28, #0x17
   351c4:	b.ls	351d8 <__asan_internal_strnlen@@Base+0x2958>  // b.plast
   351c8:	ldr	x27, [x23, #16]
   351cc:	ldr	w4, [x27]
   351d0:	cmp	w4, #0x1
   351d4:	b.eq	352c4 <__asan_internal_strnlen@@Base+0x2a44>  // b.none
   351d8:	mov	x0, #0x0                   	// #0
   351dc:	mov	x24, #0x0                   	// #0
   351e0:	sub	w22, w22, #0x1
   351e4:	stp	x0, x24, [x23, #8]
   351e8:	str	wzr, [x23, #24]
   351ec:	add	x23, x23, #0x20
   351f0:	subs	w25, w25, #0x1
   351f4:	b.ne	351ac <__asan_internal_strnlen@@Base+0x292c>  // b.any
   351f8:	cbz	x26, 35214 <__asan_internal_strnlen@@Base+0x2994>
   351fc:	mov	x1, x26
   35200:	mov	x4, x20
   35204:	mov	x3, x19
   35208:	mov	x0, x21
   3520c:	mov	x2, #0x13b4                	// #5044
   35210:	bl	6890 <__asan_backtrace_free@plt>
   35214:	cbz	w22, 35414 <__asan_internal_strnlen@@Base+0x2b94>
   35218:	mov	w24, #0x1                   	// #1
   3521c:	ldrb	w0, [sp, #677]
   35220:	add	x6, sp, #0x368
   35224:	ldr	x1, [sp, #176]
   35228:	cmp	w0, #0x2
   3522c:	cset	w0, eq  // eq = none
   35230:	ldp	x3, x2, [x6]
   35234:	ldp	x5, x4, [x6, #32]
   35238:	str	w0, [sp, #32]
   3523c:	ldr	x0, [sp, #184]
   35240:	str	x0, [sp, #64]
   35244:	ldr	x0, [sp, #392]
   35248:	str	x0, [sp, #40]
   3524c:	ldr	x0, [sp, #968]
   35250:	str	x0, [sp, #8]
   35254:	ldr	x0, [sp, #976]
   35258:	str	x0, [sp]
   3525c:	ldr	x7, [sp, #936]
   35260:	stp	x19, x20, [sp, #48]
   35264:	ldr	x6, [sp, #944]
   35268:	ldr	x0, [sp, #1000]
   3526c:	str	x0, [sp, #24]
   35270:	ldr	x0, [sp, #1008]
   35274:	str	x0, [sp, #16]
   35278:	ldr	x0, [sp, #1192]
   3527c:	str	x0, [sp, #72]
   35280:	mov	x0, x21
   35284:	bl	6440 <__asan_backtrace_dwarf_add@plt>
   35288:	cbz	w0, 3540c <__asan_internal_strnlen@@Base+0x2b8c>
   3528c:	ldr	x1, [sp, #1184]
   35290:	mov	w0, #0x1                   	// #1
   35294:	mov	w23, w0
   35298:	str	w0, [x1]
   3529c:	b	34148 <__asan_internal_strnlen@@Base+0x18c8>
   352a0:	mov	x3, x20
   352a4:	mov	x2, x19
   352a8:	mov	x0, x21
   352ac:	mov	x1, #0x13b4                	// #5044
   352b0:	bl	65b0 <__asan_backtrace_alloc@plt>
   352b4:	mov	x26, x0
   352b8:	cbz	x0, 35454 <__asan_internal_strnlen@@Base+0x2bd4>
   352bc:	ldr	x28, [x23, #8]
   352c0:	b	351c0 <__asan_internal_strnlen@@Base+0x2940>
   352c4:	ldr	x1, [x27, #8]
   352c8:	mov	x3, x20
   352cc:	mov	x2, x19
   352d0:	mov	x0, x21
   352d4:	str	w4, [sp, #200]
   352d8:	bl	65b0 <__asan_backtrace_alloc@plt>
   352dc:	mov	x24, x0
   352e0:	cbz	x0, 35454 <__asan_internal_strnlen@@Base+0x2bd4>
   352e4:	ldr	x4, [x27, #8]
   352e8:	mov	x3, x0
   352ec:	sub	x1, x28, #0x18
   352f0:	mov	x2, x26
   352f4:	add	x0, x27, #0x18
   352f8:	bl	331e0 <__asan_internal_strnlen@@Base+0x960>
   352fc:	cbz	w0, 351d8 <__asan_internal_strnlen@@Base+0x2958>
   35300:	ldr	x0, [x27, #8]
   35304:	b	351e0 <__asan_internal_strnlen@@Base+0x2960>
   35308:	mov	w23, #0xffffffff            	// #-1
   3530c:	b	34148 <__asan_internal_strnlen@@Base+0x18c8>
   35310:	ldr	x1, [sp, #216]
   35314:	mov	x3, x20
   35318:	mov	x2, x19
   3531c:	mov	x0, x21
   35320:	str	xzr, [sp, #288]
   35324:	bl	6430 <__asan_backtrace_release_view@plt>
   35328:	str	wzr, [sp, #324]
   3532c:	ldr	x1, [sp, #224]
   35330:	mov	x3, x20
   35334:	mov	x2, x19
   35338:	mov	x0, x21
   3533c:	bl	6430 <__asan_backtrace_release_view@plt>
   35340:	str	wzr, [sp, #192]
   35344:	str	wzr, [sp, #208]
   35348:	str	wzr, [sp, #232]
   3534c:	str	xzr, [sp, #312]
   35350:	b	34c68 <__asan_internal_strnlen@@Base+0x23e8>
   35354:	mov	x0, x1
   35358:	b	35360 <__asan_internal_strnlen@@Base+0x2ae0>
   3535c:	mov	x0, x2
   35360:	ldar	x2, [x0]
   35364:	cbnz	x2, 3535c <__asan_internal_strnlen@@Base+0x2adc>
   35368:	ldxr	x2, [x0]
   3536c:	cbnz	x2, 35378 <__asan_internal_strnlen@@Base+0x2af8>
   35370:	stlxr	w3, x24, [x0]
   35374:	cbnz	w3, 35368 <__asan_internal_strnlen@@Base+0x2ae8>
   35378:	dmb	ish
   3537c:	cmp	x2, #0x0
   35380:	b.ne	35354 <__asan_internal_strnlen@@Base+0x2ad4>  // b.any
   35384:	mov	w0, #0x1                   	// #1
   35388:	str	w0, [sp, #232]
   3538c:	b	349dc <__asan_internal_strnlen@@Base+0x215c>
   35390:	mov	w0, #0x1                   	// #1
   35394:	ldr	w22, [sp, #264]
   35398:	mov	w24, #0x0                   	// #0
   3539c:	str	w0, [sp, #200]
   353a0:	str	w26, [sp, #208]
   353a4:	str	w7, [sp, #232]
   353a8:	ldr	x21, [sp, #256]
   353ac:	ldp	x19, x20, [sp, #272]
   353b0:	ldr	x25, [sp, #304]
   353b4:	b	34520 <__asan_internal_strnlen@@Base+0x1ca0>
   353b8:	mov	x2, x20
   353bc:	mov	x1, x19
   353c0:	b	34b98 <__asan_internal_strnlen@@Base+0x2318>
   353c4:	mov	w24, #0x1                   	// #1
   353c8:	b	34d74 <__asan_internal_strnlen@@Base+0x24f4>
   353cc:	mov	w0, #0x1                   	// #1
   353d0:	str	x24, [x1]
   353d4:	str	w0, [sp, #232]
   353d8:	b	349dc <__asan_internal_strnlen@@Base+0x215c>
   353dc:	mov	x3, x20
   353e0:	mov	x2, x19
   353e4:	mov	x0, x21
   353e8:	mov	x1, #0x0                   	// #0
   353ec:	bl	65b0 <__asan_backtrace_alloc@plt>
   353f0:	mov	x27, x0
   353f4:	cbz	x0, 350d8 <__asan_internal_strnlen@@Base+0x2858>
   353f8:	mov	x4, #0x0                   	// #0
   353fc:	b	34fe4 <__asan_internal_strnlen@@Base+0x2764>
   35400:	mov	w24, #0x1                   	// #1
   35404:	str	w24, [sp, #232]
   35408:	b	34520 <__asan_internal_strnlen@@Base+0x1ca0>
   3540c:	mov	w22, #0xffffffff            	// #-1
   35410:	b	34d74 <__asan_internal_strnlen@@Base+0x24f4>
   35414:	ldr	x1, [sp, #192]
   35418:	mov	x3, x20
   3541c:	mov	x2, x19
   35420:	mov	x0, x21
   35424:	mov	w24, #0x0                   	// #0
   35428:	bl	6430 <__asan_backtrace_release_view@plt>
   3542c:	b	3521c <__asan_internal_strnlen@@Base+0x299c>
   35430:	mov	x3, x20
   35434:	mov	x2, x19
   35438:	mov	x0, x21
   3543c:	mov	x1, #0x13b4                	// #5044
   35440:	bl	65b0 <__asan_backtrace_alloc@plt>
   35444:	mov	x26, x0
   35448:	cbz	x0, 35454 <__asan_internal_strnlen@@Base+0x2bd4>
   3544c:	ldr	x3, [x27, #168]
   35450:	b	35130 <__asan_internal_strnlen@@Base+0x28b0>
   35454:	mov	w24, #0x1                   	// #1
   35458:	mov	w22, #0xffffffff            	// #-1
   3545c:	b	34d74 <__asan_internal_strnlen@@Base+0x24f4>
   35460:	sub	sp, sp, #0x70
   35464:	stp	x29, x30, [sp, #48]
   35468:	add	x29, sp, #0x30
   3546c:	ldr	w6, [x2, #56]
   35470:	str	x21, [sp, #80]
   35474:	ldr	x21, [x0, #8]
   35478:	stp	x19, x20, [sp, #64]
   3547c:	cmn	w6, #0x1
   35480:	mov	x20, x0
   35484:	mov	x19, x2
   35488:	cbz	x21, 35494 <__asan_internal_strnlen@@Base+0x2c14>
   3548c:	ldrb	w0, [x21]
   35490:	cbnz	w0, 35520 <__asan_internal_strnlen@@Base+0x2ca0>
   35494:	b.eq	35508 <__asan_internal_strnlen@@Base+0x2c88>  // b.none
   35498:	ldr	x21, [x19, #48]
   3549c:	mov	w0, #0xffffffff            	// #-1
   354a0:	str	w0, [x19, #56]
   354a4:	add	x1, sp, #0x64
   354a8:	mov	w2, w6
   354ac:	ldr	x0, [x19]
   354b0:	add	x6, sp, #0x68
   354b4:	ldr	x3, [x20]
   354b8:	str	x1, [sp]
   354bc:	mov	x1, x21
   354c0:	ldr	x4, [x19, #8]
   354c4:	str	xzr, [sp, #8]
   354c8:	ldr	x5, [x19, #16]
   354cc:	str	wzr, [sp, #16]
   354d0:	ldr	x7, [x19, #32]
   354d4:	str	wzr, [sp, #24]
   354d8:	str	xzr, [sp, #32]
   354dc:	str	wzr, [sp, #40]
   354e0:	bl	34090 <__asan_internal_strnlen@@Base+0x1810>
   354e4:	cbz	w0, 35508 <__asan_internal_strnlen@@Base+0x2c88>
   354e8:	ldr	w0, [sp, #100]
   354ec:	cbz	w0, 35508 <__asan_internal_strnlen@@Base+0x2c88>
   354f0:	ldr	x1, [x19, #40]
   354f4:	mov	w2, #0x1                   	// #1
   354f8:	ldr	x0, [x19, #24]
   354fc:	str	w2, [x1]
   35500:	ldr	x1, [sp, #104]
   35504:	str	x1, [x0]
   35508:	mov	w0, #0x0                   	// #0
   3550c:	ldp	x29, x30, [sp, #48]
   35510:	ldp	x19, x20, [sp, #64]
   35514:	ldr	x21, [sp, #80]
   35518:	add	sp, sp, #0x70
   3551c:	ret
   35520:	ldp	x1, x2, [x2, #8]
   35524:	b.ne	35540 <__asan_internal_strnlen@@Base+0x2cc0>  // b.any
   35528:	add	x3, sp, #0x60
   3552c:	mov	x0, x21
   35530:	bl	6a30 <__asan_backtrace_open@plt>
   35534:	mov	w6, w0
   35538:	tbz	w0, #31, 354a4 <__asan_internal_strnlen@@Base+0x2c24>
   3553c:	b	35508 <__asan_internal_strnlen@@Base+0x2c88>
   35540:	mov	w0, w6
   35544:	bl	6960 <__asan_backtrace_close@plt>
   35548:	ldp	x1, x2, [x19, #8]
   3554c:	mov	w0, #0xffffffff            	// #-1
   35550:	ldr	x21, [x20, #8]
   35554:	str	w0, [x19, #56]
   35558:	add	x3, sp, #0x60
   3555c:	mov	x0, x21
   35560:	bl	6a30 <__asan_backtrace_open@plt>
   35564:	mov	w6, w0
   35568:	tbz	w0, #31, 354a4 <__asan_internal_strnlen@@Base+0x2c24>
   3556c:	b	35508 <__asan_internal_strnlen@@Base+0x2c88>

0000000000035570 <__asan_backtrace_uncompress_zdebug@@Base>:
   35570:	stp	x29, x30, [sp, #-80]!
   35574:	mov	x29, sp
   35578:	stp	x19, x20, [sp, #16]
   3557c:	mov	x20, x3
   35580:	mov	x3, x4
   35584:	stp	x21, x22, [sp, #32]
   35588:	mov	x21, x4
   3558c:	mov	x22, x0
   35590:	stp	x23, x24, [sp, #48]
   35594:	mov	x23, x2
   35598:	mov	x24, x5
   3559c:	mov	x2, x20
   355a0:	stp	x25, x26, [sp, #64]
   355a4:	mov	x26, x1
   355a8:	mov	x25, x6
   355ac:	mov	x1, #0x13b4                	// #5044
   355b0:	bl	65b0 <__asan_backtrace_alloc@plt>
   355b4:	cbz	x0, 35648 <__asan_backtrace_uncompress_zdebug@@Base+0xd8>
   355b8:	str	xzr, [x24]
   355bc:	mov	x19, x0
   355c0:	str	xzr, [x25]
   355c4:	cmp	x23, #0xb
   355c8:	b.hi	35604 <__asan_backtrace_uncompress_zdebug@@Base+0x94>  // b.pmore
   355cc:	mov	w23, #0x1                   	// #1
   355d0:	mov	x4, x21
   355d4:	mov	x3, x20
   355d8:	mov	x1, x19
   355dc:	mov	x0, x22
   355e0:	mov	x2, #0x13b4                	// #5044
   355e4:	bl	6890 <__asan_backtrace_free@plt>
   355e8:	mov	w0, w23
   355ec:	ldp	x19, x20, [sp, #16]
   355f0:	ldp	x21, x22, [sp, #32]
   355f4:	ldp	x23, x24, [sp, #48]
   355f8:	ldp	x25, x26, [sp, #64]
   355fc:	ldp	x29, x30, [sp], #80
   35600:	ret
   35604:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   35608:	mov	x0, x26
   3560c:	add	x1, x1, #0x288
   35610:	mov	x2, #0x4                   	// #4
   35614:	bl	68f0 <__asan_internal_memcmp@plt>
   35618:	cbnz	w0, 355cc <__asan_backtrace_uncompress_zdebug@@Base+0x5c>
   3561c:	mov	x2, x23
   35620:	mov	x7, x25
   35624:	mov	x6, x24
   35628:	mov	x1, x26
   3562c:	mov	x5, x21
   35630:	mov	x4, x20
   35634:	mov	x3, x19
   35638:	mov	x0, x22
   3563c:	bl	33fd0 <__asan_internal_strnlen@@Base+0x1750>
   35640:	mov	w23, w0
   35644:	b	355d0 <__asan_backtrace_uncompress_zdebug@@Base+0x60>
   35648:	mov	w23, #0x0                   	// #0
   3564c:	b	355e8 <__asan_backtrace_uncompress_zdebug@@Base+0x78>

0000000000035650 <__asan_backtrace_initialize@@Base>:
   35650:	sub	sp, sp, #0xe0
   35654:	mov	w6, #0x1                   	// #1
   35658:	stp	x29, x30, [sp, #48]
   3565c:	add	x29, sp, #0x30
   35660:	stp	x23, x24, [sp, #96]
   35664:	adrp	x24, 32000 <__asan_cplus_demangle_mangled_name@@Base+0x100>
   35668:	add	x8, x24, #0x888
   3566c:	str	w6, [sp, #16]
   35670:	mov	x23, x5
   35674:	str	wzr, [sp, #24]
   35678:	mov	x5, x4
   3567c:	str	xzr, [sp, #32]
   35680:	str	wzr, [sp, #40]
   35684:	stp	x27, x28, [sp, #128]
   35688:	add	x28, sp, #0x94
   3568c:	add	x27, sp, #0x98
   35690:	stp	x28, xzr, [sp]
   35694:	mov	x6, x27
   35698:	stp	x25, x26, [sp, #112]
   3569c:	add	x26, sp, #0x90
   356a0:	mov	x25, x1
   356a4:	mov	x7, x26
   356a8:	stp	x19, x20, [sp, #64]
   356ac:	mov	x19, x0
   356b0:	mov	w20, w2
   356b4:	stp	x21, x22, [sp, #80]
   356b8:	mov	x22, x3
   356bc:	mov	x21, x4
   356c0:	mov	x4, x3
   356c4:	mov	x3, #0x0                   	// #0
   356c8:	str	x8, [sp, #152]
   356cc:	bl	34090 <__asan_internal_strnlen@@Base+0x1810>
   356d0:	cbz	w0, 3573c <__asan_backtrace_initialize@@Base+0xec>
   356d4:	cmp	w0, #0x0
   356d8:	add	x1, sp, #0xa0
   356dc:	csinv	w20, w20, wzr, lt  // lt = tstop
   356e0:	adrp	x0, 35000 <__asan_internal_strnlen@@Base+0x2780>
   356e4:	add	x0, x0, #0x460
   356e8:	stp	x19, x22, [sp, #160]
   356ec:	stp	x21, x27, [sp, #176]
   356f0:	stp	x26, x28, [sp, #192]
   356f4:	str	x25, [sp, #208]
   356f8:	str	w20, [sp, #216]
   356fc:	bl	6640 <dl_iterate_phdr@plt>
   35700:	ldr	w0, [x19, #8]
   35704:	cbnz	w0, 3575c <__asan_backtrace_initialize@@Base+0x10c>
   35708:	ldr	w0, [sp, #144]
   3570c:	cbnz	w0, 3578c <__asan_backtrace_initialize@@Base+0x13c>
   35710:	ldr	x0, [x19, #40]
   35714:	cbz	x0, 357bc <__asan_backtrace_initialize@@Base+0x16c>
   35718:	ldr	x0, [x19, #24]
   3571c:	str	x0, [x23]
   35720:	cmp	x0, #0x0
   35724:	add	x24, x24, #0x888
   35728:	ccmp	x0, x24, #0x4, ne  // ne = any
   3572c:	mov	w0, #0x1                   	// #1
   35730:	b.ne	3573c <__asan_backtrace_initialize@@Base+0xec>  // b.any
   35734:	ldr	x1, [sp, #152]
   35738:	str	x1, [x23]
   3573c:	ldp	x29, x30, [sp, #48]
   35740:	ldp	x19, x20, [sp, #64]
   35744:	ldp	x21, x22, [sp, #80]
   35748:	ldp	x23, x24, [sp, #96]
   3574c:	ldp	x25, x26, [sp, #112]
   35750:	ldp	x27, x28, [sp, #128]
   35754:	add	sp, sp, #0xe0
   35758:	ret
   3575c:	ldr	w1, [sp, #144]
   35760:	add	x0, x19, #0x28
   35764:	cbz	w1, 3579c <__asan_backtrace_initialize@@Base+0x14c>
   35768:	adrp	x1, 32000 <__asan_cplus_demangle_mangled_name@@Base+0x100>
   3576c:	add	x1, x1, #0xcd8
   35770:	stlr	x1, [x0]
   35774:	ldr	w0, [x19, #8]
   35778:	cbz	w0, 35718 <__asan_backtrace_initialize@@Base+0xc8>
   3577c:	add	x19, x19, #0x18
   35780:	ldar	x0, [x19]
   35784:	str	x0, [x23]
   35788:	b	35720 <__asan_backtrace_initialize@@Base+0xd0>
   3578c:	adrp	x0, 32000 <__asan_cplus_demangle_mangled_name@@Base+0x100>
   35790:	add	x0, x0, #0xcd8
   35794:	str	x0, [x19, #40]
   35798:	b	35718 <__asan_backtrace_initialize@@Base+0xc8>
   3579c:	adrp	x1, 32000 <__asan_cplus_demangle_mangled_name@@Base+0x100>
   357a0:	add	x1, x1, #0x8b0
   357a4:	ldxr	x2, [x0]
   357a8:	cbnz	x2, 357b4 <__asan_backtrace_initialize@@Base+0x164>
   357ac:	stlxr	w3, x1, [x0]
   357b0:	cbnz	w3, 357a4 <__asan_backtrace_initialize@@Base+0x154>
   357b4:	dmb	ish
   357b8:	b	35774 <__asan_backtrace_initialize@@Base+0x124>
   357bc:	adrp	x0, 32000 <__asan_cplus_demangle_mangled_name@@Base+0x100>
   357c0:	add	x0, x0, #0x8b0
   357c4:	str	x0, [x19, #40]
   357c8:	b	35718 <__asan_backtrace_initialize@@Base+0xc8>
   357cc:	nop

00000000000357d0 <__asan_backtrace_get_view@@Base>:
   357d0:	stp	x29, x30, [sp, #-64]!
   357d4:	mov	x29, sp
   357d8:	stp	x19, x20, [sp, #16]
   357dc:	mov	x19, x3
   357e0:	mov	x20, x4
   357e4:	stp	x21, x22, [sp, #32]
   357e8:	mov	x22, x2
   357ec:	mov	x21, x5
   357f0:	stp	x23, x24, [sp, #48]
   357f4:	mov	w24, w1
   357f8:	mov	x23, x6
   357fc:	bl	6940 <getpagesize@plt>
   35800:	sxtw	x7, w0
   35804:	sub	x8, x19, #0x1
   35808:	neg	x1, x7
   3580c:	mov	w4, w24
   35810:	mov	w3, #0x2                   	// #2
   35814:	udiv	x19, x22, x7
   35818:	mov	w2, #0x1                   	// #1
   3581c:	mov	x0, #0x0                   	// #0
   35820:	msub	w19, w19, w7, w22
   35824:	add	x7, x7, x19
   35828:	sub	x5, x22, x19
   3582c:	add	x7, x8, x7
   35830:	and	x22, x1, x7
   35834:	mov	x1, x22
   35838:	bl	66a0 <mmap@plt>
   3583c:	cmn	x0, #0x1
   35840:	b.eq	3586c <__asan_backtrace_get_view@@Base+0x9c>  // b.none
   35844:	mov	x2, x0
   35848:	add	x19, x0, x19
   3584c:	stp	x19, x2, [x23]
   35850:	mov	w0, #0x1                   	// #1
   35854:	str	x22, [x23, #16]
   35858:	ldp	x19, x20, [sp, #16]
   3585c:	ldp	x21, x22, [sp, #32]
   35860:	ldp	x23, x24, [sp, #48]
   35864:	ldp	x29, x30, [sp], #64
   35868:	ret
   3586c:	bl	6790 <__errno_location@plt>
   35870:	mov	x2, x0
   35874:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   35878:	mov	x0, x21
   3587c:	add	x1, x1, #0xbd0
   35880:	ldr	w2, [x2]
   35884:	blr	x20
   35888:	mov	w0, #0x0                   	// #0
   3588c:	ldp	x19, x20, [sp, #16]
   35890:	ldp	x21, x22, [sp, #32]
   35894:	ldp	x23, x24, [sp, #48]
   35898:	ldp	x29, x30, [sp], #64
   3589c:	ret

00000000000358a0 <__asan_backtrace_release_view@@Base>:
   358a0:	stp	x29, x30, [sp, #-32]!
   358a4:	mov	x29, sp
   358a8:	ldp	x0, x1, [x1, #8]
   358ac:	stp	x19, x20, [sp, #16]
   358b0:	mov	x19, x2
   358b4:	mov	x20, x3
   358b8:	bl	66b0 <munmap@plt>
   358bc:	tbnz	w0, #31, 358cc <__asan_backtrace_release_view@@Base+0x2c>
   358c0:	ldp	x19, x20, [sp, #16]
   358c4:	ldp	x29, x30, [sp], #32
   358c8:	ret
   358cc:	bl	6790 <__errno_location@plt>
   358d0:	mov	x2, x0
   358d4:	mov	x16, x19
   358d8:	mov	x0, x20
   358dc:	ldp	x19, x20, [sp, #16]
   358e0:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   358e4:	ldp	x29, x30, [sp], #32
   358e8:	add	x1, x1, #0xbd8
   358ec:	ldr	w2, [x2]
   358f0:	br	x16
   358f4:	nop
   358f8:	ldr	x9, [x0, #64]
   358fc:	add	x4, x0, #0x40
   35900:	mov	x5, #0x0                   	// #0
   35904:	mov	x3, x9
   35908:	cbnz	x9, 35924 <__asan_backtrace_release_view@@Base+0x84>
   3590c:	b	35958 <__asan_backtrace_release_view@@Base+0xb8>
   35910:	ldr	x7, [x4]
   35914:	ldr	x8, [x3, #8]
   35918:	ldr	x7, [x7, #8]
   3591c:	cmp	x8, x7
   35920:	csel	x4, x4, x6, cs  // cs = hs, nlast
   35924:	mov	x6, x3
   35928:	add	x5, x5, #0x1
   3592c:	ldr	x3, [x3]
   35930:	cbnz	x3, 35910 <__asan_backtrace_release_view@@Base+0x70>
   35934:	cmp	x5, #0xf
   35938:	b.ls	35958 <__asan_backtrace_release_view@@Base+0xb8>  // b.plast
   3593c:	ldr	x3, [x4]
   35940:	ldr	x5, [x3, #8]
   35944:	cmp	x5, x2
   35948:	b.cs	35960 <__asan_backtrace_release_view@@Base+0xc0>  // b.hs, b.nlast
   3594c:	ldr	x3, [x3]
   35950:	str	x3, [x4]
   35954:	ldr	x9, [x0, #64]
   35958:	stp	x9, x2, [x1]
   3595c:	str	x1, [x0, #64]
   35960:	ret
   35964:	nop

0000000000035968 <__asan_backtrace_free@@Base>:
   35968:	stp	x29, x30, [sp, #-48]!
   3596c:	mov	x29, sp
   35970:	stp	x19, x20, [sp, #16]
   35974:	mov	x19, x0
   35978:	mov	x20, x2
   3597c:	str	x21, [sp, #32]
   35980:	mov	x0, #0xffff                	// #65535
   35984:	mov	x21, x1
   35988:	cmp	x2, x0
   3598c:	b.hi	359b0 <__asan_backtrace_free@@Base+0x48>  // b.pmore
   35990:	ldr	w0, [x19, #8]
   35994:	cbnz	w0, 359d0 <__asan_backtrace_free@@Base+0x68>
   35998:	cmp	x2, #0xf
   3599c:	b.hi	35a18 <__asan_backtrace_free@@Base+0xb0>  // b.pmore
   359a0:	ldp	x19, x20, [sp, #16]
   359a4:	ldr	x21, [sp, #32]
   359a8:	ldp	x29, x30, [sp], #48
   359ac:	ret
   359b0:	bl	6940 <getpagesize@plt>
   359b4:	sxtw	x0, w0
   359b8:	orr	x1, x21, x20
   359bc:	sub	x0, x0, #0x1
   359c0:	tst	x0, x1
   359c4:	b.eq	35a2c <__asan_backtrace_free@@Base+0xc4>  // b.none
   359c8:	ldr	w0, [x19, #8]
   359cc:	cbz	w0, 35a18 <__asan_backtrace_free@@Base+0xb0>
   359d0:	add	x0, x19, #0x3c
   359d4:	mov	w2, #0x1                   	// #1
   359d8:	ldxr	w1, [x0]
   359dc:	stxr	w3, w2, [x0]
   359e0:	cbnz	w3, 359d8 <__asan_backtrace_free@@Base+0x70>
   359e4:	dmb	ish
   359e8:	cbnz	w1, 359a0 <__asan_backtrace_free@@Base+0x38>
   359ec:	cmp	x20, #0xf
   359f0:	b.hi	35a18 <__asan_backtrace_free@@Base+0xb0>  // b.pmore
   359f4:	nop
   359f8:	ldr	w0, [x19, #8]
   359fc:	cbz	w0, 359a0 <__asan_backtrace_free@@Base+0x38>
   35a00:	add	x19, x19, #0x3c
   35a04:	stlr	wzr, [x19]
   35a08:	ldp	x19, x20, [sp, #16]
   35a0c:	ldr	x21, [sp, #32]
   35a10:	ldp	x29, x30, [sp], #48
   35a14:	ret
   35a18:	mov	x2, x20
   35a1c:	mov	x1, x21
   35a20:	mov	x0, x19
   35a24:	bl	358f8 <__asan_backtrace_release_view@@Base+0x58>
   35a28:	b	359f8 <__asan_backtrace_free@@Base+0x90>
   35a2c:	mov	x1, x20
   35a30:	mov	x0, x21
   35a34:	bl	66b0 <munmap@plt>
   35a38:	cbnz	w0, 359c8 <__asan_backtrace_free@@Base+0x60>
   35a3c:	b	359a0 <__asan_backtrace_free@@Base+0x38>

0000000000035a40 <__asan_backtrace_alloc@@Base>:
   35a40:	stp	x29, x30, [sp, #-64]!
   35a44:	mov	x29, sp
   35a48:	stp	x19, x20, [sp, #16]
   35a4c:	mov	x20, x1
   35a50:	ldr	w1, [x0, #8]
   35a54:	stp	x21, x22, [sp, #32]
   35a58:	mov	x22, x3
   35a5c:	stp	x23, x24, [sp, #48]
   35a60:	mov	x23, x0
   35a64:	mov	x24, x2
   35a68:	cbnz	w1, 35ad8 <__asan_backtrace_alloc@@Base+0x98>
   35a6c:	ldr	x4, [x0, #64]
   35a70:	add	x6, x0, #0x40
   35a74:	cbnz	x4, 35a84 <__asan_backtrace_alloc@@Base+0x44>
   35a78:	b	35b10 <__asan_backtrace_alloc@@Base+0xd0>
   35a7c:	mov	x6, x19
   35a80:	cbz	x4, 35b00 <__asan_backtrace_alloc@@Base+0xc0>
   35a84:	ldr	x5, [x4, #8]
   35a88:	mov	x19, x4
   35a8c:	ldr	x4, [x4]
   35a90:	cmp	x5, x20
   35a94:	b.cc	35a7c <__asan_backtrace_alloc@@Base+0x3c>  // b.lo, b.ul, b.last
   35a98:	add	x1, x20, #0x7
   35a9c:	str	x4, [x6]
   35aa0:	and	x1, x1, #0xfffffffffffffff8
   35aa4:	cmp	x5, x1
   35aa8:	b.ls	35ab8 <__asan_backtrace_alloc@@Base+0x78>  // b.plast
   35aac:	sub	x2, x5, x1
   35ab0:	cmp	x2, #0xf
   35ab4:	b.hi	35b7c <__asan_backtrace_alloc@@Base+0x13c>  // b.pmore
   35ab8:	ldr	w0, [x23, #8]
   35abc:	cbnz	w0, 35bb4 <__asan_backtrace_alloc@@Base+0x174>
   35ac0:	mov	x0, x19
   35ac4:	ldp	x19, x20, [sp, #16]
   35ac8:	ldp	x21, x22, [sp, #32]
   35acc:	ldp	x23, x24, [sp, #48]
   35ad0:	ldp	x29, x30, [sp], #64
   35ad4:	ret
   35ad8:	add	x0, x0, #0x3c
   35adc:	mov	w2, #0x1                   	// #1
   35ae0:	ldxr	w1, [x0]
   35ae4:	stxr	w3, w2, [x0]
   35ae8:	cbnz	w3, 35ae0 <__asan_backtrace_alloc@@Base+0xa0>
   35aec:	dmb	ish
   35af0:	cbnz	w1, 35b10 <__asan_backtrace_alloc@@Base+0xd0>
   35af4:	ldr	x4, [x23, #64]
   35af8:	add	x6, x23, #0x40
   35afc:	cbnz	x4, 35a84 <__asan_backtrace_alloc@@Base+0x44>
   35b00:	ldr	w0, [x23, #8]
   35b04:	cbz	w0, 35b10 <__asan_backtrace_alloc@@Base+0xd0>
   35b08:	add	x0, x23, #0x3c
   35b0c:	stlr	wzr, [x0]
   35b10:	bl	6940 <getpagesize@plt>
   35b14:	sub	x21, x20, #0x1
   35b18:	sxtw	x1, w0
   35b1c:	mov	x5, #0x0                   	// #0
   35b20:	add	x21, x21, x1
   35b24:	neg	x1, x1
   35b28:	and	x21, x21, x1
   35b2c:	mov	w4, #0xffffffff            	// #-1
   35b30:	mov	x1, x21
   35b34:	mov	w3, #0x22                  	// #34
   35b38:	mov	w2, #0x3                   	// #3
   35b3c:	mov	x0, #0x0                   	// #0
   35b40:	bl	66a0 <mmap@plt>
   35b44:	mov	x19, x0
   35b48:	cmn	x0, #0x1
   35b4c:	b.eq	35b8c <__asan_backtrace_alloc@@Base+0x14c>  // b.none
   35b50:	add	x1, x20, #0x7
   35b54:	and	x1, x1, #0xfffffffffffffff8
   35b58:	cmp	x21, x1
   35b5c:	b.ls	35ac0 <__asan_backtrace_alloc@@Base+0x80>  // b.plast
   35b60:	sub	x2, x21, x1
   35b64:	mov	x4, x22
   35b68:	add	x1, x0, x1
   35b6c:	mov	x3, x24
   35b70:	mov	x0, x23
   35b74:	bl	6890 <__asan_backtrace_free@plt>
   35b78:	b	35ac0 <__asan_backtrace_alloc@@Base+0x80>
   35b7c:	add	x1, x19, x1
   35b80:	mov	x0, x23
   35b84:	bl	358f8 <__asan_backtrace_release_view@@Base+0x58>
   35b88:	b	35ab8 <__asan_backtrace_alloc@@Base+0x78>
   35b8c:	mov	x19, #0x0                   	// #0
   35b90:	cbz	x24, 35ac0 <__asan_backtrace_alloc@@Base+0x80>
   35b94:	bl	6790 <__errno_location@plt>
   35b98:	mov	x2, x0
   35b9c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x9320>
   35ba0:	mov	x0, x22
   35ba4:	add	x1, x1, #0xbd0
   35ba8:	ldr	w2, [x2]
   35bac:	blr	x24
   35bb0:	b	35ac0 <__asan_backtrace_alloc@@Base+0x80>
   35bb4:	add	x0, x23, #0x3c
   35bb8:	stlr	wzr, [x0]
   35bbc:	b	35ac0 <__asan_backtrace_alloc@@Base+0x80>

0000000000035bc0 <__asan_backtrace_vector_grow@@Base>:
   35bc0:	stp	x29, x30, [sp, #-80]!
   35bc4:	mov	x29, sp
   35bc8:	ldp	x6, x5, [x4, #8]
   35bcc:	stp	x19, x20, [sp, #16]
   35bd0:	mov	x19, x4
   35bd4:	stp	x21, x22, [sp, #32]
   35bd8:	mov	x21, x1
   35bdc:	add	x20, x1, x6
   35be0:	cmp	x5, x1
   35be4:	b.cc	35c0c <__asan_backtrace_vector_grow@@Base+0x4c>  // b.lo, b.ul, b.last
   35be8:	ldr	x22, [x4]
   35bec:	add	x22, x22, x6
   35bf0:	sub	x5, x5, x21
   35bf4:	stp	x20, x5, [x19, #8]
   35bf8:	mov	x0, x22
   35bfc:	ldp	x19, x20, [sp, #16]
   35c00:	ldp	x21, x22, [sp, #32]
   35c04:	ldp	x29, x30, [sp], #80
   35c08:	ret
   35c0c:	stp	x23, x24, [sp, #48]
   35c10:	mov	x23, x0
   35c14:	mov	x24, x2
   35c18:	str	x25, [sp, #64]
   35c1c:	mov	x25, x3
   35c20:	cbnz	x6, 35c8c <__asan_backtrace_vector_grow@@Base+0xcc>
   35c24:	lsl	x20, x20, #4
   35c28:	mov	x3, x25
   35c2c:	mov	x2, x24
   35c30:	mov	x1, x20
   35c34:	mov	x0, x23
   35c38:	bl	65b0 <__asan_backtrace_alloc@plt>
   35c3c:	mov	x22, x0
   35c40:	cbz	x0, 35cc0 <__asan_backtrace_vector_grow@@Base+0x100>
   35c44:	ldp	x1, x6, [x19]
   35c48:	cbz	x1, 35c74 <__asan_backtrace_vector_grow@@Base+0xb4>
   35c4c:	mov	x2, x6
   35c50:	bl	64a0 <__asan_internal_memcpy@plt>
   35c54:	ldp	x1, x5, [x19]
   35c58:	mov	x4, x25
   35c5c:	ldr	x2, [x19, #16]
   35c60:	mov	x3, x24
   35c64:	mov	x0, x23
   35c68:	add	x2, x5, x2
   35c6c:	bl	6890 <__asan_backtrace_free@plt>
   35c70:	ldr	x6, [x19, #8]
   35c74:	sub	x5, x20, x6
   35c78:	add	x20, x21, x6
   35c7c:	ldp	x23, x24, [sp, #48]
   35c80:	ldr	x25, [sp, #64]
   35c84:	str	x22, [x19]
   35c88:	b	35bec <__asan_backtrace_vector_grow@@Base+0x2c>
   35c8c:	bl	6940 <getpagesize@plt>
   35c90:	cmp	x20, w0, sxtw
   35c94:	lsl	x6, x20, #1
   35c98:	sxtw	x5, w0
   35c9c:	b.cs	35cac <__asan_backtrace_vector_grow@@Base+0xec>  // b.hs, b.nlast
   35ca0:	cmp	x5, x6
   35ca4:	csel	x20, x5, x6, ls  // ls = plast
   35ca8:	b	35c28 <__asan_backtrace_vector_grow@@Base+0x68>
   35cac:	sub	x20, x6, #0x1
   35cb0:	neg	x0, x5
   35cb4:	add	x20, x20, x5
   35cb8:	and	x20, x20, x0
   35cbc:	b	35c28 <__asan_backtrace_vector_grow@@Base+0x68>
   35cc0:	ldp	x23, x24, [sp, #48]
   35cc4:	ldr	x25, [sp, #64]
   35cc8:	b	35bf8 <__asan_backtrace_vector_grow@@Base+0x38>
   35ccc:	nop

0000000000035cd0 <__asan_backtrace_vector_finish@@Base>:
   35cd0:	ldp	x0, x2, [x1]
   35cd4:	add	x2, x0, x2
   35cd8:	stp	x2, xzr, [x1]
   35cdc:	ret

0000000000035ce0 <__asan_backtrace_vector_release@@Base>:
   35ce0:	stp	x29, x30, [sp, #-32]!
   35ce4:	mov	x4, x3
   35ce8:	mov	x3, x2
   35cec:	mov	x29, sp
   35cf0:	ldp	x2, x6, [x1, #8]
   35cf4:	str	x19, [sp, #16]
   35cf8:	mov	x19, x1
   35cfc:	ldr	x5, [x19]
   35d00:	add	x1, x2, #0x7
   35d04:	and	x1, x1, #0xfffffffffffffff8
   35d08:	add	x2, x2, x6
   35d0c:	sub	x2, x2, x1
   35d10:	add	x1, x5, x1
   35d14:	bl	6890 <__asan_backtrace_free@plt>
   35d18:	str	xzr, [x19, #16]
   35d1c:	ldr	x0, [x19, #8]
   35d20:	cbnz	x0, 35d28 <__asan_backtrace_vector_release@@Base+0x48>
   35d24:	str	xzr, [x19]
   35d28:	mov	w0, #0x1                   	// #1
   35d2c:	ldr	x19, [sp, #16]
   35d30:	ldp	x29, x30, [sp], #32
   35d34:	ret
   35d38:	adrp	x2, 5b000 <_Unwind_Backtrace@GCC_3.3>
   35d3c:	mov	x1, #0x0                   	// #0
   35d40:	ldr	x2, [x2, #888]
   35d44:	b	66f0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000035d48 <.fini>:
   35d48:	stp	x29, x30, [sp, #-16]!
   35d4c:	mov	x29, sp
   35d50:	ldp	x29, x30, [sp], #16
   35d54:	ret
