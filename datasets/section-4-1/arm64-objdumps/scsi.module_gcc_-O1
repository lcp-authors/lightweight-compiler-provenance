
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//scsi.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_scsi_iterate>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #48]
  10:	str	x1, [sp, #56]
  14:	adrp	x0, 0 <grub_scsi_iterate>
  18:	ldr	x0, [x0]
  1c:	ldr	x19, [x0]
  20:	cbz	x19, 78 <grub_scsi_iterate+0x78>
  24:	str	x21, [sp, #32]
  28:	mov	w20, w2
  2c:	adrp	x21, 0 <grub_scsi_iterate>
  30:	b	3c <grub_scsi_iterate+0x3c>
  34:	ldr	x19, [x19, #40]
  38:	cbz	x19, 64 <grub_scsi_iterate+0x64>
  3c:	ldr	x3, [x19]
  40:	cbz	x3, 34 <grub_scsi_iterate+0x34>
  44:	mov	w2, w20
  48:	add	x1, sp, #0x30
  4c:	ldr	x0, [x21]
  50:	blr	x3
  54:	cbz	w0, 34 <grub_scsi_iterate+0x34>
  58:	mov	w0, #0x1                   	// #1
  5c:	ldr	x21, [sp, #32]
  60:	b	6c <grub_scsi_iterate+0x6c>
  64:	mov	w0, #0x0                   	// #0
  68:	ldr	x21, [sp, #32]
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #64
  74:	ret
  78:	mov	w0, #0x0                   	// #0
  7c:	b	6c <grub_scsi_iterate+0x6c>
	...

0000000000000090 <grub_scsi_request_sense>:
  90:	stp	x29, x30, [sp, #-80]!
  94:	mov	x29, sp
  98:	str	x19, [sp, #16]
  9c:	mov	x19, x0
  a0:	mov	w0, #0x3                   	// #3
  a4:	strb	w0, [sp, #64]
  a8:	ldr	w0, [x19, #20]
  ac:	ubfiz	w0, w0, #5, #3
  b0:	strb	w0, [sp, #65]
  b4:	strb	wzr, [sp, #66]
  b8:	strb	wzr, [sp, #67]
  bc:	mov	w0, #0x12                  	// #18
  c0:	strb	w0, [sp, #68]
  c4:	strb	wzr, [sp, #69]
  c8:	mov	x2, #0x6                   	// #6
  cc:	mov	w1, #0x0                   	// #0
  d0:	add	x0, sp, #0x40
  d4:	add	x0, x0, x2
  d8:	bl	0 <grub_memset>
  dc:	ldr	x0, [x19]
  e0:	ldr	x5, [x0, #24]
  e4:	add	x4, sp, #0x28
  e8:	mov	x3, #0x12                  	// #18
  ec:	add	x2, sp, #0x40
  f0:	mov	x1, #0xc                   	// #12
  f4:	mov	x0, x19
  f8:	blr	x5
  fc:	ldr	x19, [sp, #16]
 100:	ldp	x29, x30, [sp], #80
 104:	ret

0000000000000108 <grub_scsi_write>:
 108:	stp	x29, x30, [sp, #-48]!
 10c:	mov	x29, sp
 110:	stp	x19, x20, [sp, #16]
 114:	ldr	x19, [x0, #64]
 118:	ldrb	w0, [x19, #8]
 11c:	cmp	w0, #0x5
 120:	b.eq	1a4 <grub_scsi_write+0x9c>  // b.none
 124:	mov	w20, #0x0                   	// #0
 128:	cbnz	w0, 1b8 <grub_scsi_write+0xb0>
 12c:	cmp	xzr, x1, lsr #32
 130:	b.eq	1c8 <grub_scsi_write+0xc0>  // b.none
 134:	mov	w0, #0xffffff8a            	// #-118
 138:	strb	w0, [sp, #32]
 13c:	ldr	w0, [x19, #20]
 140:	ubfiz	w0, w0, #5, #3
 144:	strb	w0, [sp, #33]
 148:	rev	x1, x1
 14c:	stur	x1, [sp, #34]
 150:	rev	w0, w2
 154:	stur	w0, [sp, #42]
 158:	strb	wzr, [sp, #46]
 15c:	strb	wzr, [sp, #47]
 160:	ldr	w0, [x19, #40]
 164:	ldr	x1, [x19]
 168:	ldr	x5, [x1, #32]
 16c:	mov	x4, x3
 170:	mul	x3, x0, x2
 174:	add	x2, sp, #0x20
 178:	mov	x1, #0x10                  	// #16
 17c:	mov	x0, x19
 180:	blr	x5
 184:	mov	w20, w0
 188:	mov	x0, x19
 18c:	bl	90 <grub_scsi_request_sense>
 190:	cbz	w0, 1b8 <grub_scsi_write+0xb0>
 194:	adrp	x0, 0 <grub_scsi_iterate>
 198:	ldr	x0, [x0]
 19c:	str	w20, [x0]
 1a0:	b	1b8 <grub_scsi_write+0xb0>
 1a4:	adrp	x0, 0 <grub_scsi_iterate>
 1a8:	ldr	x1, [x0]
 1ac:	mov	w0, #0x1d                  	// #29
 1b0:	bl	0 <grub_error>
 1b4:	mov	w20, w0
 1b8:	mov	w0, w20
 1bc:	ldp	x19, x20, [sp, #16]
 1c0:	ldp	x29, x30, [sp], #48
 1c4:	ret
 1c8:	mov	w0, #0x2a                  	// #42
 1cc:	strb	w0, [sp, #32]
 1d0:	ldr	w0, [x19, #20]
 1d4:	ubfiz	w0, w0, #5, #3
 1d8:	strb	w0, [sp, #33]
 1dc:	rev	w1, w1
 1e0:	stur	w1, [sp, #34]
 1e4:	strb	wzr, [sp, #38]
 1e8:	ubfiz	w0, w2, #8, #16
 1ec:	ubfx	w1, w2, #8, #8
 1f0:	orr	w0, w0, w1
 1f4:	sturh	w0, [sp, #39]
 1f8:	strb	wzr, [sp, #41]
 1fc:	strh	wzr, [sp, #42]
 200:	ldr	w0, [x19, #40]
 204:	ldr	x1, [x19]
 208:	ldr	x5, [x1, #32]
 20c:	mov	x4, x3
 210:	mul	x3, x0, x2
 214:	add	x2, sp, #0x20
 218:	mov	x1, #0xc                   	// #12
 21c:	mov	x0, x19
 220:	blr	x5
 224:	mov	w20, w0
 228:	mov	x0, x19
 22c:	bl	90 <grub_scsi_request_sense>
 230:	cbz	w0, 1b8 <grub_scsi_write+0xb0>
 234:	adrp	x0, 0 <grub_scsi_iterate>
 238:	ldr	x0, [x0]
 23c:	str	w20, [x0]
 240:	b	1b8 <grub_scsi_write+0xb0>
 244:	nop
	...

0000000000000258 <grub_scsi_read16>:
 258:	stp	x29, x30, [sp, #-48]!
 25c:	mov	x29, sp
 260:	stp	x19, x20, [sp, #16]
 264:	ldr	x19, [x0, #64]
 268:	mov	w0, #0xffffff88            	// #-120
 26c:	strb	w0, [sp, #32]
 270:	ldr	w0, [x19, #20]
 274:	ubfiz	w0, w0, #5, #3
 278:	strb	w0, [sp, #33]
 27c:	rev	x1, x1
 280:	stur	x1, [sp, #34]
 284:	rev	w0, w2
 288:	stur	w0, [sp, #42]
 28c:	strb	wzr, [sp, #46]
 290:	strb	wzr, [sp, #47]
 294:	ldr	w0, [x19, #40]
 298:	ldr	x1, [x19]
 29c:	ldr	x5, [x1, #24]
 2a0:	mov	x4, x3
 2a4:	mul	x3, x0, x2
 2a8:	add	x2, sp, #0x20
 2ac:	mov	x1, #0x10                  	// #16
 2b0:	mov	x0, x19
 2b4:	blr	x5
 2b8:	mov	w20, w0
 2bc:	mov	x0, x19
 2c0:	bl	90 <grub_scsi_request_sense>
 2c4:	cbz	w0, 2d4 <grub_scsi_read16+0x7c>
 2c8:	adrp	x0, 0 <grub_scsi_iterate>
 2cc:	ldr	x0, [x0]
 2d0:	str	w20, [x0]
 2d4:	mov	w0, w20
 2d8:	ldp	x19, x20, [sp, #16]
 2dc:	ldp	x29, x30, [sp], #48
 2e0:	ret
 2e4:	nop
	...

00000000000002f0 <grub_scsi_read>:
 2f0:	stp	x29, x30, [sp, #-48]!
 2f4:	mov	x29, sp
 2f8:	stp	x19, x20, [sp, #16]
 2fc:	ldr	x19, [x0, #64]
 300:	ldrb	w4, [x19, #8]
 304:	cbz	w4, 328 <grub_scsi_read+0x38>
 308:	mov	w20, #0x0                   	// #0
 30c:	cmp	w4, #0x5
 310:	b.ne	338 <grub_scsi_read+0x48>  // b.any
 314:	cmp	xzr, x1, lsr #32
 318:	b.eq	3c4 <grub_scsi_read+0xd4>  // b.none
 31c:	bl	258 <grub_scsi_read16>
 320:	mov	w20, w0
 324:	b	338 <grub_scsi_read+0x48>
 328:	cmp	xzr, x1, lsr #32
 32c:	b.eq	348 <grub_scsi_read+0x58>  // b.none
 330:	bl	258 <grub_scsi_read16>
 334:	mov	w20, w0
 338:	mov	w0, w20
 33c:	ldp	x19, x20, [sp, #16]
 340:	ldp	x29, x30, [sp], #48
 344:	ret
 348:	mov	w0, #0x28                  	// #40
 34c:	strb	w0, [sp, #32]
 350:	ldr	w0, [x19, #20]
 354:	ubfiz	w0, w0, #5, #3
 358:	strb	w0, [sp, #33]
 35c:	rev	w1, w1
 360:	stur	w1, [sp, #34]
 364:	strb	wzr, [sp, #38]
 368:	ubfiz	w0, w2, #8, #16
 36c:	ubfx	w1, w2, #8, #8
 370:	orr	w0, w0, w1
 374:	sturh	w0, [sp, #39]
 378:	strb	wzr, [sp, #41]
 37c:	strh	wzr, [sp, #42]
 380:	ldr	w0, [x19, #40]
 384:	ldr	x1, [x19]
 388:	ldr	x5, [x1, #24]
 38c:	mov	x4, x3
 390:	mul	x3, x0, x2
 394:	add	x2, sp, #0x20
 398:	mov	x1, #0xc                   	// #12
 39c:	mov	x0, x19
 3a0:	blr	x5
 3a4:	mov	w20, w0
 3a8:	mov	x0, x19
 3ac:	bl	90 <grub_scsi_request_sense>
 3b0:	cbz	w0, 338 <grub_scsi_read+0x48>
 3b4:	adrp	x0, 0 <grub_scsi_iterate>
 3b8:	ldr	x0, [x0]
 3bc:	str	w20, [x0]
 3c0:	b	338 <grub_scsi_read+0x48>
 3c4:	mov	w0, #0xffffffa8            	// #-88
 3c8:	strb	w0, [sp, #32]
 3cc:	ldr	w0, [x19, #20]
 3d0:	ubfiz	w0, w0, #5, #3
 3d4:	strb	w0, [sp, #33]
 3d8:	rev	w1, w1
 3dc:	stur	w1, [sp, #34]
 3e0:	rev	w0, w2
 3e4:	stur	w0, [sp, #38]
 3e8:	strb	wzr, [sp, #42]
 3ec:	strb	wzr, [sp, #43]
 3f0:	ldr	w0, [x19, #40]
 3f4:	ldr	x1, [x19]
 3f8:	ldr	x5, [x1, #24]
 3fc:	mov	x4, x3
 400:	mul	x3, x0, x2
 404:	add	x2, sp, #0x20
 408:	mov	x1, #0xc                   	// #12
 40c:	mov	x0, x19
 410:	blr	x5
 414:	mov	w20, w0
 418:	mov	x0, x19
 41c:	bl	90 <grub_scsi_request_sense>
 420:	cbz	w0, 338 <grub_scsi_read+0x48>
 424:	adrp	x0, 0 <grub_scsi_iterate>
 428:	ldr	x0, [x0]
 42c:	str	w20, [x0]
 430:	b	338 <grub_scsi_read+0x48>
 434:	nop
	...

0000000000000440 <grub_scsi_close>:
 440:	stp	x29, x30, [sp, #-32]!
 444:	mov	x29, sp
 448:	str	x19, [sp, #16]
 44c:	ldr	x19, [x0, #64]
 450:	ldr	x0, [x19]
 454:	ldr	x1, [x0, #16]
 458:	cbz	x1, 464 <grub_scsi_close+0x24>
 45c:	mov	x0, x19
 460:	blr	x1
 464:	mov	x0, x19
 468:	bl	0 <grub_free>
 46c:	ldr	x19, [sp, #16]
 470:	ldp	x29, x30, [sp], #32
 474:	ret

0000000000000478 <grub_scsi_open>:
 478:	stp	x29, x30, [sp, #-144]!
 47c:	mov	x29, sp
 480:	stp	x19, x20, [sp, #16]
 484:	stp	x21, x22, [sp, #32]
 488:	stp	x23, x24, [sp, #48]
 48c:	mov	x20, x0
 490:	mov	x22, x1
 494:	bl	0 <grub_strlen>
 498:	sub	x0, x0, #0x1
 49c:	mov	w23, #0x0                   	// #0
 4a0:	adds	x19, x20, x0
 4a4:	b.cs	4e8 <grub_scsi_open+0x70>  // b.hs, b.nlast
 4a8:	ldrb	w1, [x20, x0]
 4ac:	sub	w0, w1, #0x61
 4b0:	and	w0, w0, #0xff
 4b4:	cmp	w0, #0x19
 4b8:	b.hi	4cc <grub_scsi_open+0x54>  // b.pmore
 4bc:	sub	w23, w1, #0x61
 4c0:	sub	x19, x19, #0x1
 4c4:	cmp	x20, x19
 4c8:	b.hi	4e8 <grub_scsi_open+0x70>  // b.pmore
 4cc:	ldrb	w2, [x19]
 4d0:	sub	w2, w2, #0x30
 4d4:	cmp	w2, #0x9
 4d8:	b.hi	4e8 <grub_scsi_open+0x70>  // b.pmore
 4dc:	sub	x19, x19, #0x1
 4e0:	cmp	x20, x19
 4e4:	b.ls	4cc <grub_scsi_open+0x54>  // b.plast
 4e8:	ldrb	w0, [x19, #1]
 4ec:	sub	w0, w0, #0x30
 4f0:	and	w0, w0, #0xff
 4f4:	cmp	w0, #0x9
 4f8:	b.hi	57c <grub_scsi_open+0x104>  // b.pmore
 4fc:	stp	x25, x26, [sp, #64]
 500:	mov	w2, #0x0                   	// #0
 504:	mov	x1, #0x0                   	// #0
 508:	add	x0, x19, #0x1
 50c:	bl	0 <grub_strtoul>
 510:	mov	x25, x0
 514:	mov	x0, #0x38                  	// #56
 518:	bl	0 <grub_malloc>
 51c:	mov	x21, x0
 520:	cbz	x0, 5a8 <grub_scsi_open+0x130>
 524:	adrp	x0, 0 <grub_scsi_iterate>
 528:	ldr	x26, [x0]
 52c:	mov	w24, #0x0                   	// #0
 530:	sub	x19, x19, x20
 534:	mov	x2, x19
 538:	mov	x1, x20
 53c:	mov	x0, x26
 540:	bl	0 <grub_strncmp>
 544:	cbz	w0, 5bc <grub_scsi_open+0x144>
 548:	add	w24, w24, #0x1
 54c:	add	x26, x26, #0x5
 550:	cmp	w24, #0x3
 554:	b.ne	534 <grub_scsi_open+0xbc>  // b.any
 558:	mov	x0, x21
 55c:	bl	0 <grub_free>
 560:	adrp	x0, 0 <grub_scsi_iterate>
 564:	ldr	x1, [x0]
 568:	mov	w0, #0xc                   	// #12
 56c:	bl	0 <grub_error>
 570:	mov	w19, w0
 574:	ldp	x25, x26, [sp, #64]
 578:	b	590 <grub_scsi_open+0x118>
 57c:	adrp	x0, 0 <grub_scsi_iterate>
 580:	ldr	x1, [x0]
 584:	mov	w0, #0xc                   	// #12
 588:	bl	0 <grub_error>
 58c:	mov	w19, w0
 590:	mov	w0, w19
 594:	ldp	x19, x20, [sp, #16]
 598:	ldp	x21, x22, [sp, #32]
 59c:	ldp	x23, x24, [sp, #48]
 5a0:	ldp	x29, x30, [sp], #144
 5a4:	ret
 5a8:	adrp	x0, 0 <grub_scsi_iterate>
 5ac:	ldr	x0, [x0]
 5b0:	ldr	w19, [x0]
 5b4:	ldp	x25, x26, [sp, #64]
 5b8:	b	590 <grub_scsi_open+0x118>
 5bc:	cmp	w24, #0x3
 5c0:	b.eq	558 <grub_scsi_open+0xe0>  // b.none
 5c4:	adrp	x0, 0 <grub_scsi_iterate>
 5c8:	ldr	x0, [x0]
 5cc:	ldr	x19, [x0]
 5d0:	cbz	x19, 604 <grub_scsi_open+0x18c>
 5d4:	mov	w20, w25
 5d8:	adrp	x26, 0 <grub_scsi_iterate>
 5dc:	ldr	x3, [x19, #8]
 5e0:	mov	x2, x21
 5e4:	mov	w1, w20
 5e8:	mov	w0, w24
 5ec:	blr	x3
 5f0:	cbz	w0, 628 <grub_scsi_open+0x1b0>
 5f4:	ldr	x0, [x26]
 5f8:	str	wzr, [x0]
 5fc:	ldr	x19, [x19, #40]
 600:	cbnz	x19, 5dc <grub_scsi_open+0x164>
 604:	mov	x0, x21
 608:	bl	0 <grub_free>
 60c:	adrp	x0, 0 <grub_scsi_iterate>
 610:	ldr	x1, [x0]
 614:	mov	w0, #0xc                   	// #12
 618:	bl	0 <grub_error>
 61c:	mov	w19, w0
 620:	ldp	x25, x26, [sp, #64]
 624:	b	590 <grub_scsi_open+0x118>
 628:	orr	w0, w23, w25, lsl #8
 62c:	orr	w0, w0, w24, lsl #24
 630:	str	x0, [x22, #32]
 634:	str	x21, [x22, #64]
 638:	str	x19, [x21]
 63c:	str	w23, [x21, #20]
 640:	str	w25, [x21, #12]
 644:	adrp	x0, 0 <grub_scsi_iterate>
 648:	ldr	x3, [x0]
 64c:	adrp	x0, 0 <grub_scsi_iterate>
 650:	ldr	x2, [x0]
 654:	mov	w1, #0x21e                 	// #542
 658:	adrp	x0, 0 <grub_scsi_iterate>
 65c:	ldr	x0, [x0]
 660:	bl	0 <grub_real_dprintf>
 664:	mov	w0, #0x12                  	// #18
 668:	strb	w0, [sp, #88]
 66c:	ldr	w0, [x21, #20]
 670:	ubfiz	w0, w0, #5, #3
 674:	strb	w0, [sp, #89]
 678:	strb	wzr, [sp, #90]
 67c:	strb	wzr, [sp, #91]
 680:	mov	w0, #0x24                  	// #36
 684:	strb	w0, [sp, #92]
 688:	strb	wzr, [sp, #93]
 68c:	mov	x2, #0x6                   	// #6
 690:	mov	w1, #0x0                   	// #0
 694:	add	x0, sp, #0x58
 698:	add	x0, x0, x2
 69c:	bl	0 <grub_memset>
 6a0:	ldr	x0, [x21]
 6a4:	ldr	x5, [x0, #24]
 6a8:	add	x4, sp, #0x68
 6ac:	mov	x3, #0x24                  	// #36
 6b0:	add	x2, sp, #0x58
 6b4:	mov	x1, #0xc                   	// #12
 6b8:	mov	x0, x21
 6bc:	blr	x5
 6c0:	mov	w19, w0
 6c4:	mov	x0, x21
 6c8:	bl	90 <grub_scsi_request_sense>
 6cc:	cbz	w0, 6dc <grub_scsi_open+0x264>
 6d0:	adrp	x0, 0 <grub_scsi_iterate>
 6d4:	ldr	x0, [x0]
 6d8:	str	w19, [x0]
 6dc:	cbnz	w19, a80 <grub_scsi_open+0x608>
 6e0:	ldrb	w0, [sp, #104]
 6e4:	and	w0, w0, #0x1f
 6e8:	strb	w0, [x21, #8]
 6ec:	ldrb	w5, [sp, #105]
 6f0:	lsr	w5, w5, #7
 6f4:	str	w5, [x21, #24]
 6f8:	and	w4, w0, #0xff
 6fc:	adrp	x0, 0 <grub_scsi_iterate>
 700:	ldr	x3, [x0]
 704:	adrp	x0, 0 <grub_scsi_iterate>
 708:	ldr	x2, [x0]
 70c:	mov	w1, #0x228                 	// #552
 710:	adrp	x0, 0 <grub_scsi_iterate>
 714:	ldr	x0, [x0]
 718:	bl	0 <grub_real_dprintf>
 71c:	ldrb	w0, [x21, #8]
 720:	cmp	w0, #0x0
 724:	ccmp	w0, #0x5, #0x4, ne  // ne = any
 728:	b.ne	74c <grub_scsi_open+0x2d4>  // b.any
 72c:	bl	0 <grub_get_time_ms>
 730:	add	x20, x0, #0x1, lsl #12
 734:	add	x20, x20, #0x388
 738:	add	x25, sp, #0x6e
 73c:	mov	x24, #0x6                   	// #6
 740:	mov	x23, #0xc                   	// #12
 744:	adrp	x26, 0 <grub_scsi_iterate>
 748:	b	7ac <grub_scsi_open+0x334>
 74c:	mov	x0, x21
 750:	bl	0 <grub_free>
 754:	adrp	x0, 0 <grub_scsi_iterate>
 758:	ldr	x1, [x0]
 75c:	mov	w0, #0xc                   	// #12
 760:	bl	0 <grub_error>
 764:	mov	w19, w0
 768:	ldp	x25, x26, [sp, #64]
 76c:	b	590 <grub_scsi_open+0x118>
 770:	mov	x0, x21
 774:	bl	0 <grub_free>
 778:	adrp	x0, 0 <grub_scsi_iterate>
 77c:	ldr	x3, [x0]
 780:	adrp	x0, 0 <grub_scsi_iterate>
 784:	ldr	x2, [x0]
 788:	mov	w1, #0x242                 	// #578
 78c:	adrp	x0, 0 <grub_scsi_iterate>
 790:	ldr	x0, [x0]
 794:	bl	0 <grub_real_dprintf>
 798:	mov	w19, #0xe                   	// #14
 79c:	ldp	x25, x26, [sp, #64]
 7a0:	b	590 <grub_scsi_open+0x118>
 7a4:	cmp	w19, #0xe
 7a8:	b.ne	824 <grub_scsi_open+0x3ac>  // b.any
 7ac:	bl	0 <grub_get_time_ms>
 7b0:	cmp	x0, x20
 7b4:	b.hi	770 <grub_scsi_open+0x2f8>  // b.pmore
 7b8:	strb	wzr, [sp, #104]
 7bc:	ldr	w0, [x21, #20]
 7c0:	ubfiz	w0, w0, #5, #3
 7c4:	strb	w0, [sp, #105]
 7c8:	strb	wzr, [sp, #106]
 7cc:	strb	wzr, [sp, #107]
 7d0:	strb	wzr, [sp, #108]
 7d4:	strb	wzr, [sp, #109]
 7d8:	mov	x2, x24
 7dc:	mov	w1, #0x0                   	// #0
 7e0:	mov	x0, x25
 7e4:	bl	0 <grub_memset>
 7e8:	ldr	x0, [x21]
 7ec:	ldr	x5, [x0, #24]
 7f0:	mov	x4, #0x0                   	// #0
 7f4:	mov	x3, #0x0                   	// #0
 7f8:	add	x2, sp, #0x68
 7fc:	mov	x1, x23
 800:	mov	x0, x21
 804:	blr	x5
 808:	mov	w19, w0
 80c:	mov	x0, x21
 810:	bl	90 <grub_scsi_request_sense>
 814:	cbz	w0, 7a4 <grub_scsi_open+0x32c>
 818:	ldr	x0, [x26]
 81c:	str	w19, [x0]
 820:	b	7a4 <grub_scsi_open+0x32c>
 824:	adrp	x0, 0 <grub_scsi_iterate>
 828:	ldr	x0, [x0]
 82c:	str	wzr, [x0]
 830:	mov	w0, #0x25                  	// #37
 834:	strb	w0, [sp, #104]
 838:	ldr	w0, [x21, #20]
 83c:	ubfiz	w0, w0, #5, #3
 840:	strb	w0, [sp, #105]
 844:	stur	wzr, [sp, #106]
 848:	strb	wzr, [sp, #110]
 84c:	strb	wzr, [sp, #111]
 850:	strb	wzr, [sp, #112]
 854:	strb	wzr, [sp, #113]
 858:	strh	wzr, [sp, #114]
 85c:	ldr	x0, [x21]
 860:	ldr	x5, [x0, #24]
 864:	add	x4, sp, #0x58
 868:	mov	x3, #0x8                   	// #8
 86c:	add	x2, sp, #0x68
 870:	mov	x1, #0xc                   	// #12
 874:	mov	x0, x21
 878:	blr	x5
 87c:	mov	w19, w0
 880:	mov	x0, x21
 884:	bl	90 <grub_scsi_request_sense>
 888:	cbz	w0, 898 <grub_scsi_open+0x420>
 88c:	adrp	x0, 0 <grub_scsi_iterate>
 890:	ldr	x0, [x0]
 894:	str	w19, [x0]
 898:	cbnz	w19, a50 <grub_scsi_open+0x5d8>
 89c:	ldr	w0, [sp, #88]
 8a0:	rev	w0, w0
 8a4:	str	x0, [x21, #32]
 8a8:	ldr	w1, [sp, #92]
 8ac:	rev	w1, w1
 8b0:	str	w1, [x21, #40]
 8b4:	mov	x1, #0xffffffff            	// #4294967295
 8b8:	cmp	x0, x1
 8bc:	b.eq	968 <grub_scsi_open+0x4f0>  // b.none
 8c0:	ldr	x0, [x21, #32]
 8c4:	add	x0, x0, #0x1
 8c8:	str	x0, [x22, #16]
 8cc:	mov	w0, #0x1                   	// #1
 8d0:	str	w0, [x22, #28]
 8d4:	ldr	w2, [x21, #40]
 8d8:	sub	w0, w2, #0x1
 8dc:	tst	w0, w2
 8e0:	ccmp	w2, #0x0, #0x4, eq  // eq = none
 8e4:	b.eq	9f0 <grub_scsi_open+0x578>  // b.none
 8e8:	str	wzr, [x22, #24]
 8ec:	ldr	w5, [x21, #40]
 8f0:	cmp	w5, #0x1
 8f4:	b.ls	918 <grub_scsi_open+0x4a0>  // b.plast
 8f8:	mov	w0, #0x1                   	// #1
 8fc:	mov	w2, w0
 900:	str	w0, [x22, #24]
 904:	lsl	w1, w2, w0
 908:	ldr	w5, [x21, #40]
 90c:	cmp	w1, w5
 910:	add	w0, w0, #0x1
 914:	b.cc	900 <grub_scsi_open+0x488>  // b.lo, b.ul, b.last
 918:	adrp	x0, 0 <grub_scsi_iterate>
 91c:	ldr	x23, [x0]
 920:	adrp	x0, 0 <grub_scsi_iterate>
 924:	ldr	x20, [x0]
 928:	ldr	x4, [x21, #32]
 92c:	adrp	x0, 0 <grub_scsi_iterate>
 930:	ldr	x3, [x0]
 934:	mov	x2, x23
 938:	mov	w1, #0x273                 	// #627
 93c:	mov	x0, x20
 940:	bl	0 <grub_real_dprintf>
 944:	ldr	x4, [x22, #16]
 948:	adrp	x0, 0 <grub_scsi_iterate>
 94c:	ldr	x3, [x0]
 950:	mov	x2, x23
 954:	mov	w1, #0x275                 	// #629
 958:	mov	x0, x20
 95c:	bl	0 <grub_real_dprintf>
 960:	ldp	x25, x26, [sp, #64]
 964:	b	590 <grub_scsi_open+0x118>
 968:	mov	w0, #0xffffff9e            	// #-98
 96c:	strb	w0, [sp, #88]
 970:	ldr	w0, [x21, #20]
 974:	lsl	w0, w0, #5
 978:	orr	w0, w0, #0x10
 97c:	strb	w0, [sp, #89]
 980:	stur	xzr, [sp, #90]
 984:	mov	w0, #0x20000000            	// #536870912
 988:	stur	w0, [sp, #98]
 98c:	strb	wzr, [sp, #102]
 990:	strb	wzr, [sp, #103]
 994:	ldr	x0, [x21]
 998:	ldr	x5, [x0, #24]
 99c:	add	x4, sp, #0x68
 9a0:	mov	x3, #0x20                  	// #32
 9a4:	add	x2, sp, #0x58
 9a8:	mov	x1, #0x10                  	// #16
 9ac:	mov	x0, x21
 9b0:	blr	x5
 9b4:	mov	w20, w0
 9b8:	mov	x0, x21
 9bc:	bl	90 <grub_scsi_request_sense>
 9c0:	cbz	w0, 9d0 <grub_scsi_open+0x558>
 9c4:	adrp	x0, 0 <grub_scsi_iterate>
 9c8:	ldr	x0, [x0]
 9cc:	str	w20, [x0]
 9d0:	cbnz	w20, a1c <grub_scsi_open+0x5a4>
 9d4:	ldr	x0, [sp, #104]
 9d8:	rev	x0, x0
 9dc:	str	x0, [x21, #32]
 9e0:	ldr	w0, [sp, #112]
 9e4:	rev	w0, w0
 9e8:	str	w0, [x21, #40]
 9ec:	b	8c0 <grub_scsi_open+0x448>
 9f0:	adrp	x0, 0 <grub_scsi_iterate>
 9f4:	ldr	x1, [x0]
 9f8:	mov	w0, #0x1d                  	// #29
 9fc:	bl	0 <grub_error>
 a00:	mov	x0, x21
 a04:	bl	0 <grub_free>
 a08:	adrp	x0, 0 <grub_scsi_iterate>
 a0c:	ldr	x0, [x0]
 a10:	ldr	w19, [x0]
 a14:	ldp	x25, x26, [sp, #64]
 a18:	b	590 <grub_scsi_open+0x118>
 a1c:	mov	x0, x21
 a20:	bl	0 <grub_free>
 a24:	adrp	x0, 0 <grub_scsi_iterate>
 a28:	ldr	x3, [x0]
 a2c:	adrp	x0, 0 <grub_scsi_iterate>
 a30:	ldr	x2, [x0]
 a34:	mov	w1, #0x25b                 	// #603
 a38:	adrp	x0, 0 <grub_scsi_iterate>
 a3c:	ldr	x0, [x0]
 a40:	bl	0 <grub_real_dprintf>
 a44:	mov	w19, w20
 a48:	ldp	x25, x26, [sp, #64]
 a4c:	b	590 <grub_scsi_open+0x118>
 a50:	mov	x0, x21
 a54:	bl	0 <grub_free>
 a58:	adrp	x0, 0 <grub_scsi_iterate>
 a5c:	ldr	x3, [x0]
 a60:	adrp	x0, 0 <grub_scsi_iterate>
 a64:	ldr	x2, [x0]
 a68:	mov	w1, #0x251                 	// #593
 a6c:	adrp	x0, 0 <grub_scsi_iterate>
 a70:	ldr	x0, [x0]
 a74:	bl	0 <grub_real_dprintf>
 a78:	ldp	x25, x26, [sp, #64]
 a7c:	b	590 <grub_scsi_open+0x118>
 a80:	mov	x0, x21
 a84:	bl	0 <grub_free>
 a88:	adrp	x0, 0 <grub_scsi_iterate>
 a8c:	ldr	x3, [x0]
 a90:	adrp	x0, 0 <grub_scsi_iterate>
 a94:	ldr	x2, [x0]
 a98:	mov	w1, #0x224                 	// #548
 a9c:	adrp	x0, 0 <grub_scsi_iterate>
 aa0:	ldr	x0, [x0]
 aa4:	bl	0 <grub_real_dprintf>
 aa8:	ldp	x25, x26, [sp, #64]
 aac:	b	590 <grub_scsi_open+0x118>
	...

0000000000000b30 <scsi_iterate>:
 b30:	stp	x29, x30, [sp, #-80]!
 b34:	mov	x29, sp
 b38:	stp	x19, x20, [sp, #16]
 b3c:	stp	x21, x22, [sp, #32]
 b40:	stp	x23, x24, [sp, #48]
 b44:	mov	w23, w1
 b48:	mov	w20, w2
 b4c:	mov	x22, x3
 b50:	cmp	w2, #0x1
 b54:	b.eq	bd8 <scsi_iterate+0xa8>  // b.none
 b58:	cmp	w2, #0x0
 b5c:	b.le	bd0 <scsi_iterate+0xa0>
 b60:	stp	x25, x26, [sp, #64]
 b64:	adrp	x1, 0 <grub_scsi_iterate>
 b68:	ldr	x24, [x1]
 b6c:	sbfiz	x1, x0, #2, #32
 b70:	add	x0, x1, w0, sxtw
 b74:	add	x24, x24, x0
 b78:	add	w26, w2, #0x61
 b7c:	mov	w21, #0x61                  	// #97
 b80:	adrp	x25, 0 <grub_scsi_iterate>
 b84:	mov	w3, w21
 b88:	mov	w2, w23
 b8c:	mov	x1, x24
 b90:	ldr	x0, [x25]
 b94:	bl	0 <grub_xasprintf>
 b98:	mov	x19, x0
 b9c:	cbz	x0, c20 <scsi_iterate+0xf0>
 ba0:	ldr	x2, [x22]
 ba4:	ldr	x1, [x22, #8]
 ba8:	blr	x2
 bac:	mov	w20, w0
 bb0:	mov	x0, x19
 bb4:	bl	0 <grub_free>
 bb8:	cbnz	w20, c40 <scsi_iterate+0x110>
 bbc:	add	w21, w21, #0x1
 bc0:	cmp	w21, w26
 bc4:	b.ne	b84 <scsi_iterate+0x54>  // b.any
 bc8:	ldp	x25, x26, [sp, #64]
 bcc:	b	c28 <scsi_iterate+0xf8>
 bd0:	mov	w20, #0x0                   	// #0
 bd4:	b	c28 <scsi_iterate+0xf8>
 bd8:	adrp	x1, 0 <grub_scsi_iterate>
 bdc:	ldr	x1, [x1]
 be0:	sbfiz	x2, x0, #2, #32
 be4:	add	x0, x2, w0, sxtw
 be8:	mov	w2, w23
 bec:	add	x1, x1, x0
 bf0:	adrp	x0, 0 <grub_scsi_iterate>
 bf4:	ldr	x0, [x0]
 bf8:	bl	0 <grub_xasprintf>
 bfc:	mov	x19, x0
 c00:	cbz	x0, c28 <scsi_iterate+0xf8>
 c04:	ldr	x2, [x22]
 c08:	ldr	x1, [x22, #8]
 c0c:	blr	x2
 c10:	mov	w20, w0
 c14:	mov	x0, x19
 c18:	bl	0 <grub_free>
 c1c:	b	c28 <scsi_iterate+0xf8>
 c20:	mov	w20, #0x1                   	// #1
 c24:	ldp	x25, x26, [sp, #64]
 c28:	mov	w0, w20
 c2c:	ldp	x19, x20, [sp, #16]
 c30:	ldp	x21, x22, [sp, #32]
 c34:	ldp	x23, x24, [sp, #48]
 c38:	ldp	x29, x30, [sp], #80
 c3c:	ret
 c40:	mov	w20, #0x1                   	// #1
 c44:	ldp	x25, x26, [sp, #64]
 c48:	b	c28 <scsi_iterate+0xf8>
 c4c:	nop
	...

0000000000000c68 <grub_scsi_dev_register>:
 c68:	adrp	x1, 0 <grub_scsi_iterate>
 c6c:	ldr	x1, [x1]
 c70:	ldr	x2, [x1]
 c74:	str	x2, [x0, #40]
 c78:	str	x0, [x1]
 c7c:	ret
	...

0000000000000c88 <grub_scsi_dev_unregister>:
 c88:	adrp	x1, 0 <grub_scsi_iterate>
 c8c:	ldr	x1, [x1]
 c90:	ldr	x1, [x1]
 c94:	cbz	x1, cc0 <grub_scsi_dev_unregister+0x38>
 c98:	cmp	x1, x0
 c9c:	b.eq	cc4 <grub_scsi_dev_unregister+0x3c>  // b.none
 ca0:	mov	x2, x1
 ca4:	ldr	x1, [x1, #40]
 ca8:	cbz	x1, cc0 <grub_scsi_dev_unregister+0x38>
 cac:	cmp	x0, x1
 cb0:	b.ne	ca0 <grub_scsi_dev_unregister+0x18>  // b.any
 cb4:	add	x2, x2, #0x28
 cb8:	ldr	x0, [x1, #40]
 cbc:	str	x0, [x2]
 cc0:	ret
 cc4:	mov	x1, x0
 cc8:	adrp	x0, 0 <grub_scsi_iterate>
 ccc:	ldr	x2, [x0]
 cd0:	b	cb8 <grub_scsi_dev_unregister+0x30>
 cd4:	nop
	...

0000000000000ce0 <grub_mod_init>:
 ce0:	stp	x29, x30, [sp, #-16]!
 ce4:	mov	x29, sp
 ce8:	adrp	x0, 0 <grub_scsi_iterate>
 cec:	ldr	x0, [x0]
 cf0:	bl	0 <grub_disk_dev_register>
 cf4:	ldp	x29, x30, [sp], #16
 cf8:	ret
 cfc:	nop
	...

0000000000000d08 <grub_mod_fini>:
 d08:	stp	x29, x30, [sp, #-16]!
 d0c:	mov	x29, sp
 d10:	adrp	x0, 0 <grub_scsi_iterate>
 d14:	ldr	x0, [x0]
 d18:	bl	0 <grub_disk_dev_unregister>
 d1c:	ldp	x29, x30, [sp], #16
 d20:	ret
 d24:	nop
	...
