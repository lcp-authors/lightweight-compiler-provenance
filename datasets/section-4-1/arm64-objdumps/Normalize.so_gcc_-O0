
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Normalize.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000038b18 <_init>:
   38b18:	stp	x29, x30, [sp, #-16]!
   38b1c:	mov	x29, sp
   38b20:	bl	38d80 <call_weak_fn>
   38b24:	ldp	x29, x30, [sp], #16
   38b28:	ret

Disassembly of section .plt:

0000000000038b30 <.plt>:
   38b30:	stp	x16, x30, [sp, #-16]!
   38b34:	adrp	x16, 56000 <__FRAME_END__+0xf784>
   38b38:	ldr	x17, [x16, #4088]
   38b3c:	add	x16, x16, #0xff8
   38b40:	br	x17
   38b44:	nop
   38b48:	nop
   38b4c:	nop

0000000000038b50 <memcpy@plt>:
   38b50:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38b54:	ldr	x17, [x16]
   38b58:	add	x16, x16, #0x0
   38b5c:	br	x17

0000000000038b60 <Perl_sv_2bool_flags@plt>:
   38b60:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38b64:	ldr	x17, [x16, #8]
   38b68:	add	x16, x16, #0x8
   38b6c:	br	x17

0000000000038b70 <strlen@plt>:
   38b70:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38b74:	ldr	x17, [x16, #16]
   38b78:	add	x16, x16, #0x10
   38b7c:	br	x17

0000000000038b80 <Perl__utf8n_to_uvchr_msgs_helper@plt>:
   38b80:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38b84:	ldr	x17, [x16, #24]
   38b88:	add	x16, x16, #0x18
   38b8c:	br	x17

0000000000038b90 <Perl_sv_pvn_force_flags@plt>:
   38b90:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38b94:	ldr	x17, [x16, #32]
   38b98:	add	x16, x16, #0x20
   38b9c:	br	x17

0000000000038ba0 <Perl_sv_2uv_flags@plt>:
   38ba0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38ba4:	ldr	x17, [x16, #40]
   38ba8:	add	x16, x16, #0x28
   38bac:	br	x17

0000000000038bb0 <Perl_stack_grow@plt>:
   38bb0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38bb4:	ldr	x17, [x16, #48]
   38bb8:	add	x16, x16, #0x30
   38bbc:	br	x17

0000000000038bc0 <__cxa_finalize@plt>:
   38bc0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38bc4:	ldr	x17, [x16, #56]
   38bc8:	add	x16, x16, #0x38
   38bcc:	br	x17

0000000000038bd0 <qsort@plt>:
   38bd0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38bd4:	ldr	x17, [x16, #64]
   38bd8:	add	x16, x16, #0x40
   38bdc:	br	x17

0000000000038be0 <Perl_sv_2pv_flags@plt>:
   38be0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38be4:	ldr	x17, [x16, #72]
   38be8:	add	x16, x16, #0x48
   38bec:	br	x17

0000000000038bf0 <Perl_xs_boot_epilog@plt>:
   38bf0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38bf4:	ldr	x17, [x16, #80]
   38bf8:	add	x16, x16, #0x50
   38bfc:	br	x17

0000000000038c00 <isSingleton@plt>:
   38c00:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c04:	ldr	x17, [x16, #88]
   38c08:	add	x16, x16, #0x58
   38c0c:	br	x17

0000000000038c10 <Perl_safesysmalloc@plt>:
   38c10:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c14:	ldr	x17, [x16, #96]
   38c18:	add	x16, x16, #0x60
   38c1c:	br	x17

0000000000038c20 <__stack_chk_fail@plt>:
   38c20:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c24:	ldr	x17, [x16, #104]
   38c28:	add	x16, x16, #0x68
   38c2c:	br	x17

0000000000038c30 <__gmon_start__@plt>:
   38c30:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c34:	ldr	x17, [x16, #112]
   38c38:	add	x16, x16, #0x70
   38c3c:	br	x17

0000000000038c40 <Perl_croak_xs_usage@plt>:
   38c40:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c44:	ldr	x17, [x16, #120]
   38c48:	add	x16, x16, #0x78
   38c4c:	br	x17

0000000000038c50 <Perl_sv_utf8_upgrade_flags_grow@plt>:
   38c50:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c54:	ldr	x17, [x16, #128]
   38c58:	add	x16, x16, #0x80
   38c5c:	br	x17

0000000000038c60 <strcmp@plt>:
   38c60:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c64:	ldr	x17, [x16, #136]
   38c68:	add	x16, x16, #0x88
   38c6c:	br	x17

0000000000038c70 <Perl_croak_nocontext@plt>:
   38c70:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c74:	ldr	x17, [x16, #144]
   38c78:	add	x16, x16, #0x90
   38c7c:	br	x17

0000000000038c80 <isComp2nd@plt>:
   38c80:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c84:	ldr	x17, [x16, #152]
   38c88:	add	x16, x16, #0x98
   38c8c:	br	x17

0000000000038c90 <Perl_newXS_deffile@plt>:
   38c90:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38c94:	ldr	x17, [x16, #160]
   38c98:	add	x16, x16, #0xa0
   38c9c:	br	x17

0000000000038ca0 <Perl_newXS_flags@plt>:
   38ca0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38ca4:	ldr	x17, [x16, #168]
   38ca8:	add	x16, x16, #0xa8
   38cac:	br	x17

0000000000038cb0 <Perl_sv_2mortal@plt>:
   38cb0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38cb4:	ldr	x17, [x16, #176]
   38cb8:	add	x16, x16, #0xb0
   38cbc:	br	x17

0000000000038cc0 <Perl_mg_get@plt>:
   38cc0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38cc4:	ldr	x17, [x16, #184]
   38cc8:	add	x16, x16, #0xb8
   38ccc:	br	x17

0000000000038cd0 <Perl_newSVuv@plt>:
   38cd0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38cd4:	ldr	x17, [x16, #192]
   38cd8:	add	x16, x16, #0xc0
   38cdc:	br	x17

0000000000038ce0 <Perl_safesysfree@plt>:
   38ce0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38ce4:	ldr	x17, [x16, #200]
   38ce8:	add	x16, x16, #0xc8
   38cec:	br	x17

0000000000038cf0 <Perl_safesysrealloc@plt>:
   38cf0:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38cf4:	ldr	x17, [x16, #208]
   38cf8:	add	x16, x16, #0xd0
   38cfc:	br	x17

0000000000038d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>:
   38d00:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38d04:	ldr	x17, [x16, #216]
   38d08:	add	x16, x16, #0xd8
   38d0c:	br	x17

0000000000038d10 <Perl_xs_handshake@plt>:
   38d10:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38d14:	ldr	x17, [x16, #224]
   38d18:	add	x16, x16, #0xe0
   38d1c:	br	x17

0000000000038d20 <Perl_sv_setpvn@plt>:
   38d20:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38d24:	ldr	x17, [x16, #232]
   38d28:	add	x16, x16, #0xe8
   38d2c:	br	x17

0000000000038d30 <isNonStDecomp@plt>:
   38d30:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38d34:	ldr	x17, [x16, #240]
   38d38:	add	x16, x16, #0xf0
   38d3c:	br	x17

0000000000038d40 <Perl_sv_setuv_mg@plt>:
   38d40:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38d44:	ldr	x17, [x16, #248]
   38d48:	add	x16, x16, #0xf8
   38d4c:	br	x17

0000000000038d50 <isExclusion@plt>:
   38d50:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38d54:	ldr	x17, [x16, #256]
   38d58:	add	x16, x16, #0x100
   38d5c:	br	x17

0000000000038d60 <Perl_newSVpvn@plt>:
   38d60:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38d64:	ldr	x17, [x16, #264]
   38d68:	add	x16, x16, #0x108
   38d6c:	br	x17

0000000000038d70 <Perl_sv_newmortal@plt>:
   38d70:	adrp	x16, 57000 <memcpy@GLIBC_2.17>
   38d74:	ldr	x17, [x16, #272]
   38d78:	add	x16, x16, #0x110
   38d7c:	br	x17

Disassembly of section .text:

0000000000038d80 <call_weak_fn>:
   38d80:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   38d84:	ldr	x0, [x0, #4032]
   38d88:	cbz	x0, 38d90 <call_weak_fn+0x10>
   38d8c:	b	38c30 <__gmon_start__@plt>
   38d90:	ret

0000000000038d94 <deregister_tm_clones>:
   38d94:	stp	x29, x30, [sp, #-32]!
   38d98:	mov	x29, sp
   38d9c:	adrp	x0, a2000 <UNF_compos_01_d1+0x360>
   38da0:	add	x0, x0, #0x4a0
   38da4:	str	x0, [sp, #24]
   38da8:	ldr	x0, [sp, #24]
   38dac:	str	x0, [sp, #24]
   38db0:	ldr	x1, [sp, #24]
   38db4:	adrp	x0, a2000 <UNF_compos_01_d1+0x360>
   38db8:	add	x0, x0, #0x4a0
   38dbc:	cmp	x1, x0
   38dc0:	b.eq	38df8 <deregister_tm_clones+0x64>  // b.none
   38dc4:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   38dc8:	ldr	x0, [x0, #4008]
   38dcc:	str	x0, [sp, #16]
   38dd0:	ldr	x0, [sp, #16]
   38dd4:	str	x0, [sp, #16]
   38dd8:	ldr	x0, [sp, #16]
   38ddc:	cmp	x0, #0x0
   38de0:	b.eq	38dfc <deregister_tm_clones+0x68>  // b.none
   38de4:	ldr	x1, [sp, #16]
   38de8:	adrp	x0, a2000 <UNF_compos_01_d1+0x360>
   38dec:	add	x0, x0, #0x4a0
   38df0:	blr	x1
   38df4:	b	38dfc <deregister_tm_clones+0x68>
   38df8:	nop
   38dfc:	ldp	x29, x30, [sp], #32
   38e00:	ret

0000000000038e04 <register_tm_clones>:
   38e04:	stp	x29, x30, [sp, #-48]!
   38e08:	mov	x29, sp
   38e0c:	adrp	x0, a2000 <UNF_compos_01_d1+0x360>
   38e10:	add	x0, x0, #0x4a0
   38e14:	str	x0, [sp, #40]
   38e18:	ldr	x0, [sp, #40]
   38e1c:	str	x0, [sp, #40]
   38e20:	ldr	x1, [sp, #40]
   38e24:	adrp	x0, a2000 <UNF_compos_01_d1+0x360>
   38e28:	add	x0, x0, #0x4a0
   38e2c:	sub	x0, x1, x0
   38e30:	asr	x0, x0, #3
   38e34:	lsr	x1, x0, #63
   38e38:	add	x0, x1, x0
   38e3c:	asr	x0, x0, #1
   38e40:	str	x0, [sp, #32]
   38e44:	ldr	x0, [sp, #32]
   38e48:	cmp	x0, #0x0
   38e4c:	b.eq	38e88 <register_tm_clones+0x84>  // b.none
   38e50:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   38e54:	ldr	x0, [x0, #4056]
   38e58:	str	x0, [sp, #24]
   38e5c:	ldr	x0, [sp, #24]
   38e60:	str	x0, [sp, #24]
   38e64:	ldr	x0, [sp, #24]
   38e68:	cmp	x0, #0x0
   38e6c:	b.eq	38e8c <register_tm_clones+0x88>  // b.none
   38e70:	ldr	x2, [sp, #24]
   38e74:	ldr	x1, [sp, #32]
   38e78:	adrp	x0, a2000 <UNF_compos_01_d1+0x360>
   38e7c:	add	x0, x0, #0x4a0
   38e80:	blr	x2
   38e84:	b	38e8c <register_tm_clones+0x88>
   38e88:	nop
   38e8c:	ldp	x29, x30, [sp], #48
   38e90:	ret

0000000000038e94 <__do_global_dtors_aux>:
   38e94:	stp	x29, x30, [sp, #-16]!
   38e98:	mov	x29, sp
   38e9c:	adrp	x0, a2000 <UNF_compos_01_d1+0x360>
   38ea0:	add	x0, x0, #0x4a0
   38ea4:	ldrb	w0, [x0]
   38ea8:	and	x0, x0, #0xff
   38eac:	cmp	x0, #0x0
   38eb0:	b.ne	38eec <__do_global_dtors_aux+0x58>  // b.any
   38eb4:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   38eb8:	ldr	x0, [x0, #4016]
   38ebc:	cmp	x0, #0x0
   38ec0:	b.eq	38ed4 <__do_global_dtors_aux+0x40>  // b.none
   38ec4:	adrp	x0, 57000 <memcpy@GLIBC_2.17>
   38ec8:	add	x0, x0, #0x118
   38ecc:	ldr	x0, [x0]
   38ed0:	bl	38bc0 <__cxa_finalize@plt>
   38ed4:	bl	38d94 <deregister_tm_clones>
   38ed8:	adrp	x0, a2000 <UNF_compos_01_d1+0x360>
   38edc:	add	x0, x0, #0x4a0
   38ee0:	mov	w1, #0x1                   	// #1
   38ee4:	strb	w1, [x0]
   38ee8:	b	38ef0 <__do_global_dtors_aux+0x5c>
   38eec:	nop
   38ef0:	ldp	x29, x30, [sp], #16
   38ef4:	ret

0000000000038ef8 <frame_dummy>:
   38ef8:	stp	x29, x30, [sp, #-16]!
   38efc:	mov	x29, sp
   38f00:	bl	38e04 <register_tm_clones>
   38f04:	nop
   38f08:	ldp	x29, x30, [sp], #16
   38f0c:	ret

0000000000038f10 <S_POPMARK>:
   38f10:	sub	sp, sp, #0x10
   38f14:	str	x0, [sp, #8]
   38f18:	ldr	x0, [sp, #8]
   38f1c:	ldr	x0, [x0, #120]
   38f20:	sub	x2, x0, #0x4
   38f24:	ldr	x1, [sp, #8]
   38f28:	str	x2, [x1, #120]
   38f2c:	ldr	w0, [x0]
   38f30:	add	sp, sp, #0x10
   38f34:	ret

0000000000038f38 <S_croak_memory_wrap>:
   38f38:	stp	x29, x30, [sp, #-16]!
   38f3c:	mov	x29, sp
   38f40:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   38f44:	ldr	x1, [x0, #4048]
   38f48:	adrp	x0, 3e000 <boot_Unicode__Normalize+0x364>
   38f4c:	add	x0, x0, #0x468
   38f50:	bl	38c70 <Perl_croak_nocontext@plt>

0000000000038f54 <Perl_utf8_hop>:
   38f54:	sub	sp, sp, #0x10
   38f58:	str	x0, [sp, #8]
   38f5c:	str	x1, [sp]
   38f60:	ldr	x0, [sp]
   38f64:	cmp	x0, #0x0
   38f68:	b.lt	38fe4 <Perl_utf8_hop+0x90>  // b.tstop
   38f6c:	b	38f9c <Perl_utf8_hop+0x48>
   38f70:	ldr	x0, [sp, #8]
   38f74:	ldrb	w0, [x0]
   38f78:	mov	w2, w0
   38f7c:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   38f80:	ldr	x1, [x0, #4064]
   38f84:	sxtw	x0, w2
   38f88:	ldrb	w0, [x1, x0]
   38f8c:	and	x0, x0, #0xff
   38f90:	ldr	x1, [sp, #8]
   38f94:	add	x0, x1, x0
   38f98:	str	x0, [sp, #8]
   38f9c:	ldr	x0, [sp]
   38fa0:	sub	x1, x0, #0x1
   38fa4:	str	x1, [sp]
   38fa8:	cmp	x0, #0x0
   38fac:	b.ne	38f70 <Perl_utf8_hop+0x1c>  // b.any
   38fb0:	b	38ff8 <Perl_utf8_hop+0xa4>
   38fb4:	ldr	x0, [sp, #8]
   38fb8:	sub	x0, x0, #0x1
   38fbc:	str	x0, [sp, #8]
   38fc0:	b	38fd0 <Perl_utf8_hop+0x7c>
   38fc4:	ldr	x0, [sp, #8]
   38fc8:	sub	x0, x0, #0x1
   38fcc:	str	x0, [sp, #8]
   38fd0:	ldr	x0, [sp, #8]
   38fd4:	ldrb	w0, [x0]
   38fd8:	and	w0, w0, #0xc0
   38fdc:	cmp	w0, #0x80
   38fe0:	b.eq	38fc4 <Perl_utf8_hop+0x70>  // b.none
   38fe4:	ldr	x0, [sp]
   38fe8:	add	x1, x0, #0x1
   38fec:	str	x1, [sp]
   38ff0:	cmp	x0, #0x0
   38ff4:	b.ne	38fb4 <Perl_utf8_hop+0x60>  // b.any
   38ff8:	ldr	x0, [sp, #8]
   38ffc:	add	sp, sp, #0x10
   39000:	ret

0000000000039004 <S_utf8n_to_uvchr_msgs>:
   39004:	stp	x29, x30, [sp, #-112]!
   39008:	mov	x29, sp
   3900c:	str	x0, [sp, #56]
   39010:	str	x1, [sp, #48]
   39014:	str	x2, [sp, #40]
   39018:	str	w3, [sp, #36]
   3901c:	str	x4, [sp, #24]
   39020:	str	x5, [sp, #16]
   39024:	ldr	x0, [sp, #56]
   39028:	str	x0, [sp, #88]
   3902c:	ldr	x1, [sp, #88]
   39030:	ldr	x0, [sp, #48]
   39034:	add	x0, x1, x0
   39038:	str	x0, [sp, #96]
   3903c:	str	xzr, [sp, #72]
   39040:	str	xzr, [sp, #80]
   39044:	b	39154 <S_utf8n_to_uvchr_msgs+0x150>
   39048:	ldr	x0, [sp, #56]
   3904c:	ldrb	w0, [x0]
   39050:	mov	w2, w0
   39054:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   39058:	ldr	x1, [x0, #4024]
   3905c:	sxtw	x0, w2
   39060:	ldrb	w0, [x1, x0]
   39064:	and	x0, x0, #0xff
   39068:	str	x0, [sp, #104]
   3906c:	ldr	x0, [sp, #80]
   39070:	cmp	x0, #0x0
   39074:	b.ne	3909c <S_utf8n_to_uvchr_msgs+0x98>  // b.any
   39078:	ldr	x0, [sp, #104]
   3907c:	mov	w1, w0
   39080:	mov	w0, #0xff                  	// #255
   39084:	asr	w0, w0, w1
   39088:	ldr	x1, [sp, #56]
   3908c:	ldrb	w1, [x1]
   39090:	and	w0, w0, w1
   39094:	sxtw	x0, w0
   39098:	b	390b8 <S_utf8n_to_uvchr_msgs+0xb4>
   3909c:	ldr	x0, [sp, #72]
   390a0:	lsl	x1, x0, #6
   390a4:	ldr	x0, [sp, #56]
   390a8:	ldrb	w0, [x0]
   390ac:	and	x0, x0, #0xff
   390b0:	and	x0, x0, #0x3f
   390b4:	orr	x0, x1, x0
   390b8:	str	x0, [sp, #72]
   390bc:	ldr	x1, [sp, #80]
   390c0:	ldr	x0, [sp, #104]
   390c4:	add	x0, x1, x0
   390c8:	add	x0, x0, #0x100
   390cc:	adrp	x1, 56000 <__FRAME_END__+0xf784>
   390d0:	ldr	x1, [x1, #4024]
   390d4:	ldrb	w0, [x1, x0]
   390d8:	and	x0, x0, #0xff
   390dc:	str	x0, [sp, #80]
   390e0:	ldr	x0, [sp, #80]
   390e4:	cmp	x0, #0x0
   390e8:	b.eq	390fc <S_utf8n_to_uvchr_msgs+0xf8>  // b.none
   390ec:	ldr	x0, [sp, #56]
   390f0:	add	x0, x0, #0x1
   390f4:	str	x0, [sp, #56]
   390f8:	b	39154 <S_utf8n_to_uvchr_msgs+0x150>
   390fc:	ldr	x0, [sp, #40]
   39100:	cmp	x0, #0x0
   39104:	b.eq	39124 <S_utf8n_to_uvchr_msgs+0x120>  // b.none
   39108:	ldr	x1, [sp, #56]
   3910c:	ldr	x0, [sp, #88]
   39110:	sub	x0, x1, x0
   39114:	add	x0, x0, #0x1
   39118:	mov	x1, x0
   3911c:	ldr	x0, [sp, #40]
   39120:	str	x1, [x0]
   39124:	ldr	x0, [sp, #24]
   39128:	cmp	x0, #0x0
   3912c:	b.eq	39138 <S_utf8n_to_uvchr_msgs+0x134>  // b.none
   39130:	ldr	x0, [sp, #24]
   39134:	str	wzr, [x0]
   39138:	ldr	x0, [sp, #16]
   3913c:	cmp	x0, #0x0
   39140:	b.eq	3914c <S_utf8n_to_uvchr_msgs+0x148>  // b.none
   39144:	ldr	x0, [sp, #16]
   39148:	str	xzr, [x0]
   3914c:	ldr	x0, [sp, #72]
   39150:	b	3919c <S_utf8n_to_uvchr_msgs+0x198>
   39154:	ldr	x1, [sp, #56]
   39158:	ldr	x0, [sp, #96]
   3915c:	cmp	x1, x0
   39160:	b.cs	39180 <S_utf8n_to_uvchr_msgs+0x17c>  // b.hs, b.nlast
   39164:	ldr	x0, [sp, #80]
   39168:	cmp	x0, #0x1
   3916c:	cset	w0, ne  // ne = any
   39170:	and	w0, w0, #0xff
   39174:	and	x0, x0, #0xff
   39178:	cmp	x0, #0x0
   3917c:	b.ne	39048 <S_utf8n_to_uvchr_msgs+0x44>  // b.any
   39180:	ldr	x5, [sp, #16]
   39184:	ldr	x4, [sp, #24]
   39188:	ldr	w3, [sp, #36]
   3918c:	ldr	x2, [sp, #40]
   39190:	ldr	x1, [sp, #48]
   39194:	ldr	x0, [sp, #88]
   39198:	bl	38b80 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   3919c:	ldp	x29, x30, [sp], #112
   391a0:	ret

00000000000391a4 <isExclusion>:
   391a4:	sub	sp, sp, #0x10
   391a8:	str	x0, [sp, #8]
   391ac:	ldr	x0, [sp, #8]
   391b0:	cmp	x0, #0x957
   391b4:	b.ls	391c4 <isExclusion+0x20>  // b.plast
   391b8:	ldr	x0, [sp, #8]
   391bc:	cmp	x0, #0x95f
   391c0:	b.ls	39414 <isExclusion+0x270>  // b.plast
   391c4:	ldr	x0, [sp, #8]
   391c8:	cmp	x0, #0x9db
   391cc:	b.ls	391dc <isExclusion+0x38>  // b.plast
   391d0:	ldr	x0, [sp, #8]
   391d4:	cmp	x0, #0x9dd
   391d8:	b.ls	39414 <isExclusion+0x270>  // b.plast
   391dc:	ldr	x0, [sp, #8]
   391e0:	cmp	x0, #0x9df
   391e4:	b.eq	39414 <isExclusion+0x270>  // b.none
   391e8:	ldr	x0, [sp, #8]
   391ec:	cmp	x0, #0xa33
   391f0:	b.eq	39414 <isExclusion+0x270>  // b.none
   391f4:	ldr	x0, [sp, #8]
   391f8:	cmp	x0, #0xa36
   391fc:	b.eq	39414 <isExclusion+0x270>  // b.none
   39200:	ldr	x0, [sp, #8]
   39204:	cmp	x0, #0xa58
   39208:	b.ls	39218 <isExclusion+0x74>  // b.plast
   3920c:	ldr	x0, [sp, #8]
   39210:	cmp	x0, #0xa5b
   39214:	b.ls	39414 <isExclusion+0x270>  // b.plast
   39218:	ldr	x0, [sp, #8]
   3921c:	cmp	x0, #0xa5e
   39220:	b.eq	39414 <isExclusion+0x270>  // b.none
   39224:	ldr	x0, [sp, #8]
   39228:	cmp	x0, #0xb5b
   3922c:	b.ls	3923c <isExclusion+0x98>  // b.plast
   39230:	ldr	x0, [sp, #8]
   39234:	cmp	x0, #0xb5d
   39238:	b.ls	39414 <isExclusion+0x270>  // b.plast
   3923c:	ldr	x0, [sp, #8]
   39240:	cmp	x0, #0xf43
   39244:	b.eq	39414 <isExclusion+0x270>  // b.none
   39248:	ldr	x0, [sp, #8]
   3924c:	cmp	x0, #0xf4d
   39250:	b.eq	39414 <isExclusion+0x270>  // b.none
   39254:	ldr	x0, [sp, #8]
   39258:	cmp	x0, #0xf52
   3925c:	b.eq	39414 <isExclusion+0x270>  // b.none
   39260:	ldr	x0, [sp, #8]
   39264:	cmp	x0, #0xf57
   39268:	b.eq	39414 <isExclusion+0x270>  // b.none
   3926c:	ldr	x0, [sp, #8]
   39270:	cmp	x0, #0xf5c
   39274:	b.eq	39414 <isExclusion+0x270>  // b.none
   39278:	ldr	x0, [sp, #8]
   3927c:	cmp	x0, #0xf69
   39280:	b.eq	39414 <isExclusion+0x270>  // b.none
   39284:	ldr	x0, [sp, #8]
   39288:	cmp	x0, #0xf76
   3928c:	b.eq	39414 <isExclusion+0x270>  // b.none
   39290:	ldr	x0, [sp, #8]
   39294:	cmp	x0, #0xf78
   39298:	b.eq	39414 <isExclusion+0x270>  // b.none
   3929c:	ldr	x0, [sp, #8]
   392a0:	cmp	x0, #0xf93
   392a4:	b.eq	39414 <isExclusion+0x270>  // b.none
   392a8:	ldr	x0, [sp, #8]
   392ac:	cmp	x0, #0xf9d
   392b0:	b.eq	39414 <isExclusion+0x270>  // b.none
   392b4:	ldr	x0, [sp, #8]
   392b8:	cmp	x0, #0xfa2
   392bc:	b.eq	39414 <isExclusion+0x270>  // b.none
   392c0:	ldr	x0, [sp, #8]
   392c4:	cmp	x0, #0xfa7
   392c8:	b.eq	39414 <isExclusion+0x270>  // b.none
   392cc:	ldr	x0, [sp, #8]
   392d0:	cmp	x0, #0xfac
   392d4:	b.eq	39414 <isExclusion+0x270>  // b.none
   392d8:	ldr	x0, [sp, #8]
   392dc:	cmp	x0, #0xfb9
   392e0:	b.eq	39414 <isExclusion+0x270>  // b.none
   392e4:	ldr	x1, [sp, #8]
   392e8:	mov	x0, #0x2adc                	// #10972
   392ec:	cmp	x1, x0
   392f0:	b.eq	39414 <isExclusion+0x270>  // b.none
   392f4:	ldr	x1, [sp, #8]
   392f8:	mov	x0, #0xfb1d                	// #64285
   392fc:	cmp	x1, x0
   39300:	b.eq	39414 <isExclusion+0x270>  // b.none
   39304:	ldr	x1, [sp, #8]
   39308:	mov	x0, #0xfb1f                	// #64287
   3930c:	cmp	x1, x0
   39310:	b.eq	39414 <isExclusion+0x270>  // b.none
   39314:	ldr	x1, [sp, #8]
   39318:	mov	x0, #0xfb29                	// #64297
   3931c:	cmp	x1, x0
   39320:	b.ls	39334 <isExclusion+0x190>  // b.plast
   39324:	ldr	x1, [sp, #8]
   39328:	mov	x0, #0xfb36                	// #64310
   3932c:	cmp	x1, x0
   39330:	b.ls	39414 <isExclusion+0x270>  // b.plast
   39334:	ldr	x1, [sp, #8]
   39338:	mov	x0, #0xfb37                	// #64311
   3933c:	cmp	x1, x0
   39340:	b.ls	39354 <isExclusion+0x1b0>  // b.plast
   39344:	ldr	x1, [sp, #8]
   39348:	mov	x0, #0xfb3c                	// #64316
   3934c:	cmp	x1, x0
   39350:	b.ls	39414 <isExclusion+0x270>  // b.plast
   39354:	ldr	x1, [sp, #8]
   39358:	mov	x0, #0xfb3e                	// #64318
   3935c:	cmp	x1, x0
   39360:	b.eq	39414 <isExclusion+0x270>  // b.none
   39364:	ldr	x1, [sp, #8]
   39368:	mov	x0, #0xfb3f                	// #64319
   3936c:	cmp	x1, x0
   39370:	b.ls	39384 <isExclusion+0x1e0>  // b.plast
   39374:	ldr	x1, [sp, #8]
   39378:	mov	x0, #0xfb41                	// #64321
   3937c:	cmp	x1, x0
   39380:	b.ls	39414 <isExclusion+0x270>  // b.plast
   39384:	ldr	x1, [sp, #8]
   39388:	mov	x0, #0xfb42                	// #64322
   3938c:	cmp	x1, x0
   39390:	b.ls	393a4 <isExclusion+0x200>  // b.plast
   39394:	ldr	x1, [sp, #8]
   39398:	mov	x0, #0xfb44                	// #64324
   3939c:	cmp	x1, x0
   393a0:	b.ls	39414 <isExclusion+0x270>  // b.plast
   393a4:	ldr	x1, [sp, #8]
   393a8:	mov	x0, #0xfb45                	// #64325
   393ac:	cmp	x1, x0
   393b0:	b.ls	393c4 <isExclusion+0x220>  // b.plast
   393b4:	ldr	x1, [sp, #8]
   393b8:	mov	x0, #0xfb4e                	// #64334
   393bc:	cmp	x1, x0
   393c0:	b.ls	39414 <isExclusion+0x270>  // b.plast
   393c4:	ldr	x1, [sp, #8]
   393c8:	mov	x0, #0xd15d                	// #53597
   393cc:	movk	x0, #0x1, lsl #16
   393d0:	cmp	x1, x0
   393d4:	b.ls	393ec <isExclusion+0x248>  // b.plast
   393d8:	ldr	x1, [sp, #8]
   393dc:	mov	x0, #0xd164                	// #53604
   393e0:	movk	x0, #0x1, lsl #16
   393e4:	cmp	x1, x0
   393e8:	b.ls	39414 <isExclusion+0x270>  // b.plast
   393ec:	ldr	x1, [sp, #8]
   393f0:	mov	x0, #0xd1ba                	// #53690
   393f4:	movk	x0, #0x1, lsl #16
   393f8:	cmp	x1, x0
   393fc:	b.ls	3941c <isExclusion+0x278>  // b.plast
   39400:	ldr	x1, [sp, #8]
   39404:	mov	x0, #0xd1c0                	// #53696
   39408:	movk	x0, #0x1, lsl #16
   3940c:	cmp	x1, x0
   39410:	b.hi	3941c <isExclusion+0x278>  // b.pmore
   39414:	mov	w0, #0x1                   	// #1
   39418:	b	39420 <isExclusion+0x27c>
   3941c:	mov	w0, #0x0                   	// #0
   39420:	and	w0, w0, #0x1
   39424:	and	w0, w0, #0xff
   39428:	add	sp, sp, #0x10
   3942c:	ret

0000000000039430 <isSingleton>:
   39430:	sub	sp, sp, #0x10
   39434:	str	x0, [sp, #8]
   39438:	ldr	x0, [sp, #8]
   3943c:	cmp	x0, #0x33f
   39440:	b.ls	39450 <isSingleton+0x20>  // b.plast
   39444:	ldr	x0, [sp, #8]
   39448:	cmp	x0, #0x341
   3944c:	b.ls	39738 <isSingleton+0x308>  // b.plast
   39450:	ldr	x0, [sp, #8]
   39454:	cmp	x0, #0x343
   39458:	b.eq	39738 <isSingleton+0x308>  // b.none
   3945c:	ldr	x0, [sp, #8]
   39460:	cmp	x0, #0x374
   39464:	b.eq	39738 <isSingleton+0x308>  // b.none
   39468:	ldr	x0, [sp, #8]
   3946c:	cmp	x0, #0x37e
   39470:	b.eq	39738 <isSingleton+0x308>  // b.none
   39474:	ldr	x0, [sp, #8]
   39478:	cmp	x0, #0x387
   3947c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39480:	ldr	x1, [sp, #8]
   39484:	mov	x0, #0x1f71                	// #8049
   39488:	cmp	x1, x0
   3948c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39490:	ldr	x1, [sp, #8]
   39494:	mov	x0, #0x1f73                	// #8051
   39498:	cmp	x1, x0
   3949c:	b.eq	39738 <isSingleton+0x308>  // b.none
   394a0:	ldr	x1, [sp, #8]
   394a4:	mov	x0, #0x1f75                	// #8053
   394a8:	cmp	x1, x0
   394ac:	b.eq	39738 <isSingleton+0x308>  // b.none
   394b0:	ldr	x1, [sp, #8]
   394b4:	mov	x0, #0x1f77                	// #8055
   394b8:	cmp	x1, x0
   394bc:	b.eq	39738 <isSingleton+0x308>  // b.none
   394c0:	ldr	x1, [sp, #8]
   394c4:	mov	x0, #0x1f79                	// #8057
   394c8:	cmp	x1, x0
   394cc:	b.eq	39738 <isSingleton+0x308>  // b.none
   394d0:	ldr	x1, [sp, #8]
   394d4:	mov	x0, #0x1f7b                	// #8059
   394d8:	cmp	x1, x0
   394dc:	b.eq	39738 <isSingleton+0x308>  // b.none
   394e0:	ldr	x1, [sp, #8]
   394e4:	mov	x0, #0x1f7d                	// #8061
   394e8:	cmp	x1, x0
   394ec:	b.eq	39738 <isSingleton+0x308>  // b.none
   394f0:	ldr	x1, [sp, #8]
   394f4:	mov	x0, #0x1fbb                	// #8123
   394f8:	cmp	x1, x0
   394fc:	b.eq	39738 <isSingleton+0x308>  // b.none
   39500:	ldr	x1, [sp, #8]
   39504:	mov	x0, #0x1fbe                	// #8126
   39508:	cmp	x1, x0
   3950c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39510:	ldr	x1, [sp, #8]
   39514:	mov	x0, #0x1fc9                	// #8137
   39518:	cmp	x1, x0
   3951c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39520:	ldr	x1, [sp, #8]
   39524:	mov	x0, #0x1fcb                	// #8139
   39528:	cmp	x1, x0
   3952c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39530:	ldr	x1, [sp, #8]
   39534:	mov	x0, #0x1fd3                	// #8147
   39538:	cmp	x1, x0
   3953c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39540:	ldr	x1, [sp, #8]
   39544:	mov	x0, #0x1fdb                	// #8155
   39548:	cmp	x1, x0
   3954c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39550:	ldr	x1, [sp, #8]
   39554:	mov	x0, #0x1fe3                	// #8163
   39558:	cmp	x1, x0
   3955c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39560:	ldr	x1, [sp, #8]
   39564:	mov	x0, #0x1feb                	// #8171
   39568:	cmp	x1, x0
   3956c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39570:	ldr	x1, [sp, #8]
   39574:	mov	x0, #0x1fed                	// #8173
   39578:	cmp	x1, x0
   3957c:	b.ls	39590 <isSingleton+0x160>  // b.plast
   39580:	ldr	x1, [sp, #8]
   39584:	mov	x0, #0x1fef                	// #8175
   39588:	cmp	x1, x0
   3958c:	b.ls	39738 <isSingleton+0x308>  // b.plast
   39590:	ldr	x1, [sp, #8]
   39594:	mov	x0, #0x1ff9                	// #8185
   39598:	cmp	x1, x0
   3959c:	b.eq	39738 <isSingleton+0x308>  // b.none
   395a0:	ldr	x1, [sp, #8]
   395a4:	mov	x0, #0x1ffb                	// #8187
   395a8:	cmp	x1, x0
   395ac:	b.eq	39738 <isSingleton+0x308>  // b.none
   395b0:	ldr	x1, [sp, #8]
   395b4:	mov	x0, #0x1ffd                	// #8189
   395b8:	cmp	x1, x0
   395bc:	b.eq	39738 <isSingleton+0x308>  // b.none
   395c0:	ldr	x1, [sp, #8]
   395c4:	mov	x0, #0x1fff                	// #8191
   395c8:	cmp	x1, x0
   395cc:	b.ls	395e0 <isSingleton+0x1b0>  // b.plast
   395d0:	ldr	x1, [sp, #8]
   395d4:	mov	x0, #0x2001                	// #8193
   395d8:	cmp	x1, x0
   395dc:	b.ls	39738 <isSingleton+0x308>  // b.plast
   395e0:	ldr	x1, [sp, #8]
   395e4:	mov	x0, #0x2126                	// #8486
   395e8:	cmp	x1, x0
   395ec:	b.eq	39738 <isSingleton+0x308>  // b.none
   395f0:	ldr	x1, [sp, #8]
   395f4:	mov	x0, #0x2129                	// #8489
   395f8:	cmp	x1, x0
   395fc:	b.ls	39610 <isSingleton+0x1e0>  // b.plast
   39600:	ldr	x1, [sp, #8]
   39604:	mov	x0, #0x212b                	// #8491
   39608:	cmp	x1, x0
   3960c:	b.ls	39738 <isSingleton+0x308>  // b.plast
   39610:	ldr	x1, [sp, #8]
   39614:	mov	x0, #0x2328                	// #9000
   39618:	cmp	x1, x0
   3961c:	b.ls	39630 <isSingleton+0x200>  // b.plast
   39620:	ldr	x1, [sp, #8]
   39624:	mov	x0, #0x232a                	// #9002
   39628:	cmp	x1, x0
   3962c:	b.ls	39738 <isSingleton+0x308>  // b.plast
   39630:	ldr	x1, [sp, #8]
   39634:	mov	x0, #0xf8ff                	// #63743
   39638:	cmp	x1, x0
   3963c:	b.ls	39650 <isSingleton+0x220>  // b.plast
   39640:	ldr	x1, [sp, #8]
   39644:	mov	x0, #0xfa0d                	// #64013
   39648:	cmp	x1, x0
   3964c:	b.ls	39738 <isSingleton+0x308>  // b.plast
   39650:	ldr	x1, [sp, #8]
   39654:	mov	x0, #0xfa10                	// #64016
   39658:	cmp	x1, x0
   3965c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39660:	ldr	x1, [sp, #8]
   39664:	mov	x0, #0xfa12                	// #64018
   39668:	cmp	x1, x0
   3966c:	b.eq	39738 <isSingleton+0x308>  // b.none
   39670:	ldr	x1, [sp, #8]
   39674:	mov	x0, #0xfa14                	// #64020
   39678:	cmp	x1, x0
   3967c:	b.ls	39690 <isSingleton+0x260>  // b.plast
   39680:	ldr	x1, [sp, #8]
   39684:	mov	x0, #0xfa1e                	// #64030
   39688:	cmp	x1, x0
   3968c:	b.ls	39738 <isSingleton+0x308>  // b.plast
   39690:	ldr	x1, [sp, #8]
   39694:	mov	x0, #0xfa20                	// #64032
   39698:	cmp	x1, x0
   3969c:	b.eq	39738 <isSingleton+0x308>  // b.none
   396a0:	ldr	x1, [sp, #8]
   396a4:	mov	x0, #0xfa22                	// #64034
   396a8:	cmp	x1, x0
   396ac:	b.eq	39738 <isSingleton+0x308>  // b.none
   396b0:	ldr	x1, [sp, #8]
   396b4:	mov	x0, #0xfa24                	// #64036
   396b8:	cmp	x1, x0
   396bc:	b.ls	396d0 <isSingleton+0x2a0>  // b.plast
   396c0:	ldr	x1, [sp, #8]
   396c4:	mov	x0, #0xfa26                	// #64038
   396c8:	cmp	x1, x0
   396cc:	b.ls	39738 <isSingleton+0x308>  // b.plast
   396d0:	ldr	x1, [sp, #8]
   396d4:	mov	x0, #0xfa29                	// #64041
   396d8:	cmp	x1, x0
   396dc:	b.ls	396f0 <isSingleton+0x2c0>  // b.plast
   396e0:	ldr	x1, [sp, #8]
   396e4:	mov	x0, #0xfa6d                	// #64109
   396e8:	cmp	x1, x0
   396ec:	b.ls	39738 <isSingleton+0x308>  // b.plast
   396f0:	ldr	x1, [sp, #8]
   396f4:	mov	x0, #0xfa6f                	// #64111
   396f8:	cmp	x1, x0
   396fc:	b.ls	39710 <isSingleton+0x2e0>  // b.plast
   39700:	ldr	x1, [sp, #8]
   39704:	mov	x0, #0xfad9                	// #64217
   39708:	cmp	x1, x0
   3970c:	b.ls	39738 <isSingleton+0x308>  // b.plast
   39710:	ldr	x1, [sp, #8]
   39714:	mov	x0, #0xf7ff                	// #63487
   39718:	movk	x0, #0x2, lsl #16
   3971c:	cmp	x1, x0
   39720:	b.ls	39740 <isSingleton+0x310>  // b.plast
   39724:	ldr	x1, [sp, #8]
   39728:	mov	x0, #0xfa1d                	// #64029
   3972c:	movk	x0, #0x2, lsl #16
   39730:	cmp	x1, x0
   39734:	b.hi	39740 <isSingleton+0x310>  // b.pmore
   39738:	mov	w0, #0x1                   	// #1
   3973c:	b	39744 <isSingleton+0x314>
   39740:	mov	w0, #0x0                   	// #0
   39744:	and	w0, w0, #0x1
   39748:	and	w0, w0, #0xff
   3974c:	add	sp, sp, #0x10
   39750:	ret

0000000000039754 <isNonStDecomp>:
   39754:	sub	sp, sp, #0x10
   39758:	str	x0, [sp, #8]
   3975c:	ldr	x0, [sp, #8]
   39760:	cmp	x0, #0x344
   39764:	b.eq	3978c <isNonStDecomp+0x38>  // b.none
   39768:	ldr	x0, [sp, #8]
   3976c:	cmp	x0, #0xf73
   39770:	b.eq	3978c <isNonStDecomp+0x38>  // b.none
   39774:	ldr	x0, [sp, #8]
   39778:	cmp	x0, #0xf75
   3977c:	b.eq	3978c <isNonStDecomp+0x38>  // b.none
   39780:	ldr	x0, [sp, #8]
   39784:	cmp	x0, #0xf81
   39788:	b.ne	39794 <isNonStDecomp+0x40>  // b.any
   3978c:	mov	w0, #0x1                   	// #1
   39790:	b	39798 <isNonStDecomp+0x44>
   39794:	mov	w0, #0x0                   	// #0
   39798:	and	w0, w0, #0x1
   3979c:	and	w0, w0, #0xff
   397a0:	add	sp, sp, #0x10
   397a4:	ret

00000000000397a8 <isComp2nd>:
   397a8:	sub	sp, sp, #0x10
   397ac:	str	x0, [sp, #8]
   397b0:	ldr	x0, [sp, #8]
   397b4:	cmp	x0, #0x2ff
   397b8:	b.ls	397c8 <isComp2nd+0x20>  // b.plast
   397bc:	ldr	x0, [sp, #8]
   397c0:	cmp	x0, #0x304
   397c4:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   397c8:	ldr	x0, [sp, #8]
   397cc:	cmp	x0, #0x305
   397d0:	b.ls	397e0 <isComp2nd+0x38>  // b.plast
   397d4:	ldr	x0, [sp, #8]
   397d8:	cmp	x0, #0x30c
   397dc:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   397e0:	ldr	x0, [sp, #8]
   397e4:	cmp	x0, #0x30f
   397e8:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   397ec:	ldr	x0, [sp, #8]
   397f0:	cmp	x0, #0x311
   397f4:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   397f8:	ldr	x0, [sp, #8]
   397fc:	cmp	x0, #0x312
   39800:	b.ls	39810 <isComp2nd+0x68>  // b.plast
   39804:	ldr	x0, [sp, #8]
   39808:	cmp	x0, #0x314
   3980c:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   39810:	ldr	x0, [sp, #8]
   39814:	cmp	x0, #0x31b
   39818:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   3981c:	ldr	x0, [sp, #8]
   39820:	cmp	x0, #0x322
   39824:	b.ls	39834 <isComp2nd+0x8c>  // b.plast
   39828:	ldr	x0, [sp, #8]
   3982c:	cmp	x0, #0x328
   39830:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   39834:	ldr	x0, [sp, #8]
   39838:	cmp	x0, #0x32c
   3983c:	b.ls	3984c <isComp2nd+0xa4>  // b.plast
   39840:	ldr	x0, [sp, #8]
   39844:	cmp	x0, #0x32e
   39848:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   3984c:	ldr	x0, [sp, #8]
   39850:	cmp	x0, #0x32f
   39854:	b.ls	39864 <isComp2nd+0xbc>  // b.plast
   39858:	ldr	x0, [sp, #8]
   3985c:	cmp	x0, #0x331
   39860:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   39864:	ldr	x0, [sp, #8]
   39868:	cmp	x0, #0x338
   3986c:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39870:	ldr	x0, [sp, #8]
   39874:	cmp	x0, #0x342
   39878:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   3987c:	ldr	x0, [sp, #8]
   39880:	cmp	x0, #0x345
   39884:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39888:	ldr	x0, [sp, #8]
   3988c:	cmp	x0, #0x652
   39890:	b.ls	398a0 <isComp2nd+0xf8>  // b.plast
   39894:	ldr	x0, [sp, #8]
   39898:	cmp	x0, #0x655
   3989c:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   398a0:	ldr	x0, [sp, #8]
   398a4:	cmp	x0, #0x93c
   398a8:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   398ac:	ldr	x0, [sp, #8]
   398b0:	cmp	x0, #0x9be
   398b4:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   398b8:	ldr	x0, [sp, #8]
   398bc:	cmp	x0, #0x9d7
   398c0:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   398c4:	ldr	x0, [sp, #8]
   398c8:	cmp	x0, #0xb3e
   398cc:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   398d0:	ldr	x0, [sp, #8]
   398d4:	cmp	x0, #0xb55
   398d8:	b.ls	398e8 <isComp2nd+0x140>  // b.plast
   398dc:	ldr	x0, [sp, #8]
   398e0:	cmp	x0, #0xb57
   398e4:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   398e8:	ldr	x0, [sp, #8]
   398ec:	cmp	x0, #0xbbe
   398f0:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   398f4:	ldr	x0, [sp, #8]
   398f8:	cmp	x0, #0xbd7
   398fc:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39900:	ldr	x0, [sp, #8]
   39904:	cmp	x0, #0xc56
   39908:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   3990c:	ldr	x0, [sp, #8]
   39910:	cmp	x0, #0xcc2
   39914:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39918:	ldr	x0, [sp, #8]
   3991c:	cmp	x0, #0xcd4
   39920:	b.ls	39930 <isComp2nd+0x188>  // b.plast
   39924:	ldr	x0, [sp, #8]
   39928:	cmp	x0, #0xcd6
   3992c:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   39930:	ldr	x0, [sp, #8]
   39934:	cmp	x0, #0xd3e
   39938:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   3993c:	ldr	x0, [sp, #8]
   39940:	cmp	x0, #0xd57
   39944:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39948:	ldr	x0, [sp, #8]
   3994c:	cmp	x0, #0xdca
   39950:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39954:	ldr	x0, [sp, #8]
   39958:	cmp	x0, #0xdcf
   3995c:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39960:	ldr	x0, [sp, #8]
   39964:	cmp	x0, #0xddf
   39968:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   3996c:	ldr	x1, [sp, #8]
   39970:	mov	x0, #0x102e                	// #4142
   39974:	cmp	x1, x0
   39978:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   3997c:	ldr	x1, [sp, #8]
   39980:	mov	x0, #0x1160                	// #4448
   39984:	cmp	x1, x0
   39988:	b.ls	3999c <isComp2nd+0x1f4>  // b.plast
   3998c:	ldr	x1, [sp, #8]
   39990:	mov	x0, #0x1175                	// #4469
   39994:	cmp	x1, x0
   39998:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   3999c:	ldr	x1, [sp, #8]
   399a0:	mov	x0, #0x11a7                	// #4519
   399a4:	cmp	x1, x0
   399a8:	b.ls	399bc <isComp2nd+0x214>  // b.plast
   399ac:	ldr	x1, [sp, #8]
   399b0:	mov	x0, #0x11c2                	// #4546
   399b4:	cmp	x1, x0
   399b8:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   399bc:	ldr	x1, [sp, #8]
   399c0:	mov	x0, #0x1b35                	// #6965
   399c4:	cmp	x1, x0
   399c8:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   399cc:	ldr	x1, [sp, #8]
   399d0:	mov	x0, #0x3098                	// #12440
   399d4:	cmp	x1, x0
   399d8:	b.ls	399ec <isComp2nd+0x244>  // b.plast
   399dc:	ldr	x1, [sp, #8]
   399e0:	mov	x0, #0x309a                	// #12442
   399e4:	cmp	x1, x0
   399e8:	b.ls	39a8c <isComp2nd+0x2e4>  // b.plast
   399ec:	ldr	x1, [sp, #8]
   399f0:	mov	x0, #0x10ba                	// #4282
   399f4:	movk	x0, #0x1, lsl #16
   399f8:	cmp	x1, x0
   399fc:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39a00:	ldr	x1, [sp, #8]
   39a04:	mov	x0, #0x1127                	// #4391
   39a08:	movk	x0, #0x1, lsl #16
   39a0c:	cmp	x1, x0
   39a10:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39a14:	ldr	x1, [sp, #8]
   39a18:	mov	x0, #0x133e                	// #4926
   39a1c:	movk	x0, #0x1, lsl #16
   39a20:	cmp	x1, x0
   39a24:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39a28:	ldr	x1, [sp, #8]
   39a2c:	mov	x0, #0x1357                	// #4951
   39a30:	movk	x0, #0x1, lsl #16
   39a34:	cmp	x1, x0
   39a38:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39a3c:	ldr	x1, [sp, #8]
   39a40:	mov	x0, #0x14b0                	// #5296
   39a44:	movk	x0, #0x1, lsl #16
   39a48:	cmp	x1, x0
   39a4c:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39a50:	ldr	x1, [sp, #8]
   39a54:	mov	x0, #0x14ba                	// #5306
   39a58:	movk	x0, #0x1, lsl #16
   39a5c:	cmp	x1, x0
   39a60:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39a64:	ldr	x1, [sp, #8]
   39a68:	mov	x0, #0x14bd                	// #5309
   39a6c:	movk	x0, #0x1, lsl #16
   39a70:	cmp	x1, x0
   39a74:	b.eq	39a8c <isComp2nd+0x2e4>  // b.none
   39a78:	ldr	x1, [sp, #8]
   39a7c:	mov	x0, #0x15af                	// #5551
   39a80:	movk	x0, #0x1, lsl #16
   39a84:	cmp	x1, x0
   39a88:	b.ne	39a94 <isComp2nd+0x2ec>  // b.any
   39a8c:	mov	w0, #0x1                   	// #1
   39a90:	b	39a98 <isComp2nd+0x2f0>
   39a94:	mov	w0, #0x0                   	// #0
   39a98:	and	w0, w0, #0x1
   39a9c:	and	w0, w0, #0xff
   39aa0:	add	sp, sp, #0x10
   39aa4:	ret

0000000000039aa8 <compare_cc>:
   39aa8:	sub	sp, sp, #0x20
   39aac:	str	x0, [sp, #8]
   39ab0:	str	x1, [sp]
   39ab4:	ldr	x0, [sp, #8]
   39ab8:	ldrb	w0, [x0]
   39abc:	mov	w1, w0
   39ac0:	ldr	x0, [sp]
   39ac4:	ldrb	w0, [x0]
   39ac8:	sub	w0, w1, w0
   39acc:	str	w0, [sp, #28]
   39ad0:	ldr	w0, [sp, #28]
   39ad4:	cmp	w0, #0x0
   39ad8:	b.eq	39ae4 <compare_cc+0x3c>  // b.none
   39adc:	ldr	w0, [sp, #28]
   39ae0:	b	39b24 <compare_cc+0x7c>
   39ae4:	ldr	x0, [sp, #8]
   39ae8:	ldr	x1, [x0, #16]
   39aec:	ldr	x0, [sp]
   39af0:	ldr	x0, [x0, #16]
   39af4:	cmp	x1, x0
   39af8:	cset	w0, hi  // hi = pmore
   39afc:	and	w0, w0, #0xff
   39b00:	mov	w2, w0
   39b04:	ldr	x0, [sp, #8]
   39b08:	ldr	x1, [x0, #16]
   39b0c:	ldr	x0, [sp]
   39b10:	ldr	x0, [x0, #16]
   39b14:	cmp	x1, x0
   39b18:	cset	w0, cc  // cc = lo, ul, last
   39b1c:	and	w0, w0, #0xff
   39b20:	sub	w0, w2, w0
   39b24:	add	sp, sp, #0x20
   39b28:	ret

0000000000039b2c <dec_canonical>:
   39b2c:	sub	sp, sp, #0x20
   39b30:	str	x0, [sp, #8]
   39b34:	ldr	x1, [sp, #8]
   39b38:	mov	w0, #0x10ffff              	// #1114111
   39b3c:	cmp	x1, x0
   39b40:	b.ls	39b4c <dec_canonical+0x20>  // b.plast
   39b44:	mov	x0, #0x0                   	// #0
   39b48:	b	39bc4 <dec_canonical+0x98>
   39b4c:	ldr	x0, [sp, #8]
   39b50:	lsr	x1, x0, #16
   39b54:	adrp	x0, 74000 <UNF_canon_02+0x4f8>
   39b58:	add	x0, x0, #0x308
   39b5c:	ldr	x0, [x0, x1, lsl #3]
   39b60:	str	x0, [sp, #16]
   39b64:	ldr	x0, [sp, #16]
   39b68:	cmp	x0, #0x0
   39b6c:	b.ne	39b78 <dec_canonical+0x4c>  // b.any
   39b70:	mov	x0, #0x0                   	// #0
   39b74:	b	39bc4 <dec_canonical+0x98>
   39b78:	ldr	x0, [sp, #8]
   39b7c:	lsr	x0, x0, #8
   39b80:	and	x0, x0, #0xff
   39b84:	lsl	x0, x0, #3
   39b88:	ldr	x1, [sp, #16]
   39b8c:	add	x0, x1, x0
   39b90:	ldr	x0, [x0]
   39b94:	str	x0, [sp, #24]
   39b98:	ldr	x0, [sp, #24]
   39b9c:	cmp	x0, #0x0
   39ba0:	b.eq	39bc0 <dec_canonical+0x94>  // b.none
   39ba4:	ldr	x0, [sp, #8]
   39ba8:	and	x0, x0, #0xff
   39bac:	lsl	x0, x0, #3
   39bb0:	ldr	x1, [sp, #24]
   39bb4:	add	x0, x1, x0
   39bb8:	ldr	x0, [x0]
   39bbc:	b	39bc4 <dec_canonical+0x98>
   39bc0:	mov	x0, #0x0                   	// #0
   39bc4:	add	sp, sp, #0x20
   39bc8:	ret

0000000000039bcc <dec_compat>:
   39bcc:	sub	sp, sp, #0x20
   39bd0:	str	x0, [sp, #8]
   39bd4:	ldr	x1, [sp, #8]
   39bd8:	mov	w0, #0x10ffff              	// #1114111
   39bdc:	cmp	x1, x0
   39be0:	b.ls	39bec <dec_compat+0x20>  // b.plast
   39be4:	mov	x0, #0x0                   	// #0
   39be8:	b	39c64 <dec_compat+0x98>
   39bec:	ldr	x0, [sp, #8]
   39bf0:	lsr	x1, x0, #16
   39bf4:	adrp	x0, 93000 <UNF_compat_02+0x470>
   39bf8:	add	x0, x0, #0x390
   39bfc:	ldr	x0, [x0, x1, lsl #3]
   39c00:	str	x0, [sp, #16]
   39c04:	ldr	x0, [sp, #16]
   39c08:	cmp	x0, #0x0
   39c0c:	b.ne	39c18 <dec_compat+0x4c>  // b.any
   39c10:	mov	x0, #0x0                   	// #0
   39c14:	b	39c64 <dec_compat+0x98>
   39c18:	ldr	x0, [sp, #8]
   39c1c:	lsr	x0, x0, #8
   39c20:	and	x0, x0, #0xff
   39c24:	lsl	x0, x0, #3
   39c28:	ldr	x1, [sp, #16]
   39c2c:	add	x0, x1, x0
   39c30:	ldr	x0, [x0]
   39c34:	str	x0, [sp, #24]
   39c38:	ldr	x0, [sp, #24]
   39c3c:	cmp	x0, #0x0
   39c40:	b.eq	39c60 <dec_compat+0x94>  // b.none
   39c44:	ldr	x0, [sp, #8]
   39c48:	and	x0, x0, #0xff
   39c4c:	lsl	x0, x0, #3
   39c50:	ldr	x1, [sp, #24]
   39c54:	add	x0, x1, x0
   39c58:	ldr	x0, [x0]
   39c5c:	b	39c64 <dec_compat+0x98>
   39c60:	mov	x0, #0x0                   	// #0
   39c64:	add	sp, sp, #0x20
   39c68:	ret

0000000000039c6c <composite_uv>:
   39c6c:	sub	sp, sp, #0x50
   39c70:	str	x0, [sp, #8]
   39c74:	str	x1, [sp]
   39c78:	ldr	x0, [sp]
   39c7c:	cmp	x0, #0x0
   39c80:	b.eq	39ca4 <composite_uv+0x38>  // b.none
   39c84:	ldr	x1, [sp, #8]
   39c88:	mov	w0, #0x10ffff              	// #1114111
   39c8c:	cmp	x1, x0
   39c90:	b.hi	39ca4 <composite_uv+0x38>  // b.pmore
   39c94:	ldr	x1, [sp]
   39c98:	mov	w0, #0x10ffff              	// #1114111
   39c9c:	cmp	x1, x0
   39ca0:	b.ls	39cac <composite_uv+0x40>  // b.plast
   39ca4:	mov	x0, #0x0                   	// #0
   39ca8:	b	39ecc <composite_uv+0x260>
   39cac:	ldr	x1, [sp, #8]
   39cb0:	mov	x0, #0x10ff                	// #4351
   39cb4:	cmp	x1, x0
   39cb8:	b.ls	39d4c <composite_uv+0xe0>  // b.plast
   39cbc:	ldr	x1, [sp, #8]
   39cc0:	mov	x0, #0x1112                	// #4370
   39cc4:	cmp	x1, x0
   39cc8:	b.hi	39d4c <composite_uv+0xe0>  // b.pmore
   39ccc:	ldr	x1, [sp]
   39cd0:	mov	x0, #0x1160                	// #4448
   39cd4:	cmp	x1, x0
   39cd8:	b.ls	39d4c <composite_uv+0xe0>  // b.plast
   39cdc:	ldr	x1, [sp]
   39ce0:	mov	x0, #0x1175                	// #4469
   39ce4:	cmp	x1, x0
   39ce8:	b.hi	39d4c <composite_uv+0xe0>  // b.pmore
   39cec:	ldr	x1, [sp, #8]
   39cf0:	mov	x0, #0xffffffffffffef00    	// #-4352
   39cf4:	add	x0, x1, x0
   39cf8:	str	x0, [sp, #32]
   39cfc:	ldr	x1, [sp]
   39d00:	mov	x0, #0xffffffffffffee9f    	// #-4449
   39d04:	add	x0, x1, x0
   39d08:	str	x0, [sp, #40]
   39d0c:	ldr	x1, [sp, #32]
   39d10:	mov	x0, x1
   39d14:	lsl	x0, x0, #2
   39d18:	add	x0, x0, x1
   39d1c:	lsl	x0, x0, #2
   39d20:	add	x1, x0, x1
   39d24:	ldr	x0, [sp, #40]
   39d28:	add	x1, x1, x0
   39d2c:	mov	x0, x1
   39d30:	lsl	x0, x0, #3
   39d34:	sub	x0, x0, x1
   39d38:	lsl	x0, x0, #2
   39d3c:	mov	x1, x0
   39d40:	mov	x0, #0xac00                	// #44032
   39d44:	add	x0, x1, x0
   39d48:	b	39ecc <composite_uv+0x260>
   39d4c:	ldr	x1, [sp, #8]
   39d50:	mov	x0, #0xabff                	// #44031
   39d54:	cmp	x1, x0
   39d58:	b.ls	39df0 <composite_uv+0x184>  // b.plast
   39d5c:	ldr	x1, [sp, #8]
   39d60:	mov	x0, #0xd7a3                	// #55203
   39d64:	cmp	x1, x0
   39d68:	b.hi	39df0 <composite_uv+0x184>  // b.pmore
   39d6c:	ldr	x1, [sp, #8]
   39d70:	mov	x0, #0xffffffffffff5400    	// #-44032
   39d74:	add	x2, x1, x0
   39d78:	lsr	x1, x2, #2
   39d7c:	mov	x0, #0x4925                	// #18725
   39d80:	movk	x0, #0x2492, lsl #16
   39d84:	movk	x0, #0x9249, lsl #32
   39d88:	movk	x0, #0x4924, lsl #48
   39d8c:	umulh	x0, x1, x0
   39d90:	lsr	x1, x0, #1
   39d94:	mov	x0, x1
   39d98:	lsl	x0, x0, #3
   39d9c:	sub	x0, x0, x1
   39da0:	lsl	x0, x0, #2
   39da4:	sub	x1, x2, x0
   39da8:	cmp	x1, #0x0
   39dac:	b.ne	39df0 <composite_uv+0x184>  // b.any
   39db0:	ldr	x1, [sp]
   39db4:	mov	x0, #0x11a7                	// #4519
   39db8:	cmp	x1, x0
   39dbc:	b.ls	39df0 <composite_uv+0x184>  // b.plast
   39dc0:	ldr	x1, [sp]
   39dc4:	mov	x0, #0x11c2                	// #4546
   39dc8:	cmp	x1, x0
   39dcc:	b.hi	39df0 <composite_uv+0x184>  // b.pmore
   39dd0:	ldr	x1, [sp]
   39dd4:	mov	x0, #0xffffffffffffee59    	// #-4519
   39dd8:	add	x0, x1, x0
   39ddc:	str	x0, [sp, #48]
   39de0:	ldr	x1, [sp, #8]
   39de4:	ldr	x0, [sp, #48]
   39de8:	add	x0, x1, x0
   39dec:	b	39ecc <composite_uv+0x260>
   39df0:	ldr	x0, [sp, #8]
   39df4:	lsr	x1, x0, #16
   39df8:	adrp	x0, 94000 <UNF_compos_01+0x3e8>
   39dfc:	add	x0, x0, #0x418
   39e00:	ldr	x0, [x0, x1, lsl #3]
   39e04:	str	x0, [sp, #56]
   39e08:	ldr	x0, [sp, #56]
   39e0c:	cmp	x0, #0x0
   39e10:	b.ne	39e1c <composite_uv+0x1b0>  // b.any
   39e14:	mov	x0, #0x0                   	// #0
   39e18:	b	39ecc <composite_uv+0x260>
   39e1c:	ldr	x0, [sp, #8]
   39e20:	lsr	x0, x0, #8
   39e24:	and	x0, x0, #0xff
   39e28:	lsl	x0, x0, #3
   39e2c:	ldr	x1, [sp, #56]
   39e30:	add	x0, x1, x0
   39e34:	ldr	x0, [x0]
   39e38:	str	x0, [sp, #64]
   39e3c:	ldr	x0, [sp, #64]
   39e40:	cmp	x0, #0x0
   39e44:	b.ne	39e50 <composite_uv+0x1e4>  // b.any
   39e48:	mov	x0, #0x0                   	// #0
   39e4c:	b	39ecc <composite_uv+0x260>
   39e50:	ldr	x0, [sp, #8]
   39e54:	and	x0, x0, #0xff
   39e58:	lsl	x0, x0, #3
   39e5c:	ldr	x1, [sp, #64]
   39e60:	add	x0, x1, x0
   39e64:	ldr	x0, [x0]
   39e68:	str	x0, [sp, #72]
   39e6c:	ldr	x0, [sp, #72]
   39e70:	cmp	x0, #0x0
   39e74:	b.ne	39e80 <composite_uv+0x214>  // b.any
   39e78:	mov	x0, #0x0                   	// #0
   39e7c:	b	39ecc <composite_uv+0x260>
   39e80:	ldr	x0, [sp, #72]
   39e84:	str	x0, [sp, #24]
   39e88:	b	39eb8 <composite_uv+0x24c>
   39e8c:	ldr	x0, [sp, #24]
   39e90:	ldr	x0, [x0]
   39e94:	ldr	x1, [sp]
   39e98:	cmp	x1, x0
   39e9c:	b.ne	39eac <composite_uv+0x240>  // b.any
   39ea0:	ldr	x0, [sp, #24]
   39ea4:	ldr	x0, [x0, #8]
   39ea8:	b	39ecc <composite_uv+0x260>
   39eac:	ldr	x0, [sp, #24]
   39eb0:	add	x0, x0, #0x10
   39eb4:	str	x0, [sp, #24]
   39eb8:	ldr	x0, [sp, #24]
   39ebc:	ldr	x0, [x0]
   39ec0:	cmp	x0, #0x0
   39ec4:	b.ne	39e8c <composite_uv+0x220>  // b.any
   39ec8:	mov	x0, #0x0                   	// #0
   39ecc:	add	sp, sp, #0x50
   39ed0:	ret

0000000000039ed4 <getCombinClass>:
   39ed4:	sub	sp, sp, #0x20
   39ed8:	str	x0, [sp, #8]
   39edc:	ldr	x1, [sp, #8]
   39ee0:	mov	w0, #0x10ffff              	// #1114111
   39ee4:	cmp	x1, x0
   39ee8:	b.ls	39ef4 <getCombinClass+0x20>  // b.plast
   39eec:	mov	w0, #0x0                   	// #0
   39ef0:	b	39f68 <getCombinClass+0x94>
   39ef4:	ldr	x0, [sp, #8]
   39ef8:	lsr	x1, x0, #16
   39efc:	adrp	x0, 61000 <UNF_combin_00+0x580>
   39f00:	add	x0, x0, #0xa80
   39f04:	ldr	x0, [x0, x1, lsl #3]
   39f08:	str	x0, [sp, #16]
   39f0c:	ldr	x0, [sp, #16]
   39f10:	cmp	x0, #0x0
   39f14:	b.ne	39f20 <getCombinClass+0x4c>  // b.any
   39f18:	mov	w0, #0x0                   	// #0
   39f1c:	b	39f68 <getCombinClass+0x94>
   39f20:	ldr	x0, [sp, #8]
   39f24:	lsr	x0, x0, #8
   39f28:	and	x0, x0, #0xff
   39f2c:	lsl	x0, x0, #3
   39f30:	ldr	x1, [sp, #16]
   39f34:	add	x0, x1, x0
   39f38:	ldr	x0, [x0]
   39f3c:	str	x0, [sp, #24]
   39f40:	ldr	x0, [sp, #24]
   39f44:	cmp	x0, #0x0
   39f48:	b.eq	39f64 <getCombinClass+0x90>  // b.none
   39f4c:	ldr	x0, [sp, #8]
   39f50:	and	x0, x0, #0xff
   39f54:	ldr	x1, [sp, #24]
   39f58:	add	x0, x1, x0
   39f5c:	ldrb	w0, [x0]
   39f60:	b	39f68 <getCombinClass+0x94>
   39f64:	mov	w0, #0x0                   	// #0
   39f68:	add	sp, sp, #0x20
   39f6c:	ret

0000000000039f70 <pv_cat_decompHangul>:
   39f70:	stp	x29, x30, [sp, #-80]!
   39f74:	mov	x29, sp
   39f78:	str	x0, [sp, #40]
   39f7c:	str	x1, [sp, #32]
   39f80:	str	x2, [sp, #24]
   39f84:	ldr	x1, [sp, #24]
   39f88:	mov	x0, #0xffffffffffff5400    	// #-44032
   39f8c:	add	x0, x1, x0
   39f90:	str	x0, [sp, #48]
   39f94:	ldr	x0, [sp, #48]
   39f98:	lsr	x1, x0, #2
   39f9c:	mov	x0, #0xf74b                	// #63307
   39fa0:	movk	x0, #0x9406, lsl #16
   39fa4:	movk	x0, #0x2b89, lsl #32
   39fa8:	movk	x0, #0x1bdd, lsl #48
   39fac:	umulh	x0, x1, x0
   39fb0:	lsr	x0, x0, #4
   39fb4:	str	x0, [sp, #56]
   39fb8:	ldr	x1, [sp, #48]
   39fbc:	lsr	x2, x1, #2
   39fc0:	mov	x0, #0xf74b                	// #63307
   39fc4:	movk	x0, #0x9406, lsl #16
   39fc8:	movk	x0, #0x2b89, lsl #32
   39fcc:	movk	x0, #0x1bdd, lsl #48
   39fd0:	umulh	x0, x2, x0
   39fd4:	lsr	x0, x0, #4
   39fd8:	mov	x2, #0x24c                 	// #588
   39fdc:	mul	x0, x0, x2
   39fe0:	sub	x0, x1, x0
   39fe4:	lsr	x1, x0, #2
   39fe8:	mov	x0, #0x4925                	// #18725
   39fec:	movk	x0, #0x2492, lsl #16
   39ff0:	movk	x0, #0x9249, lsl #32
   39ff4:	movk	x0, #0x4924, lsl #48
   39ff8:	umulh	x0, x1, x0
   39ffc:	lsr	x0, x0, #1
   3a000:	str	x0, [sp, #64]
   3a004:	ldr	x1, [sp, #48]
   3a008:	lsr	x2, x1, #2
   3a00c:	mov	x0, #0x4925                	// #18725
   3a010:	movk	x0, #0x2492, lsl #16
   3a014:	movk	x0, #0x9249, lsl #32
   3a018:	movk	x0, #0x4924, lsl #48
   3a01c:	umulh	x0, x2, x0
   3a020:	lsr	x2, x0, #1
   3a024:	mov	x0, x2
   3a028:	lsl	x0, x0, #3
   3a02c:	sub	x0, x0, x2
   3a030:	lsl	x0, x0, #2
   3a034:	sub	x0, x1, x0
   3a038:	str	x0, [sp, #72]
   3a03c:	ldr	x1, [sp, #24]
   3a040:	mov	x0, #0xabff                	// #44031
   3a044:	cmp	x1, x0
   3a048:	b.ls	3a05c <pv_cat_decompHangul+0xec>  // b.plast
   3a04c:	ldr	x1, [sp, #24]
   3a050:	mov	x0, #0xd7a3                	// #55203
   3a054:	cmp	x1, x0
   3a058:	b.ls	3a064 <pv_cat_decompHangul+0xf4>  // b.plast
   3a05c:	ldr	x0, [sp, #32]
   3a060:	b	3a0ec <pv_cat_decompHangul+0x17c>
   3a064:	ldr	x1, [sp, #56]
   3a068:	mov	x0, #0x1100                	// #4352
   3a06c:	add	x0, x1, x0
   3a070:	mov	x4, #0x0                   	// #0
   3a074:	mov	x3, #0x0                   	// #0
   3a078:	mov	x2, x0
   3a07c:	ldr	x1, [sp, #32]
   3a080:	ldr	x0, [sp, #40]
   3a084:	bl	38d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   3a088:	str	x0, [sp, #32]
   3a08c:	ldr	x1, [sp, #64]
   3a090:	mov	x0, #0x1161                	// #4449
   3a094:	add	x0, x1, x0
   3a098:	mov	x4, #0x0                   	// #0
   3a09c:	mov	x3, #0x0                   	// #0
   3a0a0:	mov	x2, x0
   3a0a4:	ldr	x1, [sp, #32]
   3a0a8:	ldr	x0, [sp, #40]
   3a0ac:	bl	38d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   3a0b0:	str	x0, [sp, #32]
   3a0b4:	ldr	x0, [sp, #72]
   3a0b8:	cmp	x0, #0x0
   3a0bc:	b.eq	3a0e8 <pv_cat_decompHangul+0x178>  // b.none
   3a0c0:	ldr	x1, [sp, #72]
   3a0c4:	mov	x0, #0x11a7                	// #4519
   3a0c8:	add	x0, x1, x0
   3a0cc:	mov	x4, #0x0                   	// #0
   3a0d0:	mov	x3, #0x0                   	// #0
   3a0d4:	mov	x2, x0
   3a0d8:	ldr	x1, [sp, #32]
   3a0dc:	ldr	x0, [sp, #40]
   3a0e0:	bl	38d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   3a0e4:	str	x0, [sp, #32]
   3a0e8:	ldr	x0, [sp, #32]
   3a0ec:	ldp	x29, x30, [sp], #80
   3a0f0:	ret

000000000003a0f4 <sv_2pvunicode>:
   3a0f4:	stp	x29, x30, [sp, #-80]!
   3a0f8:	mov	x29, sp
   3a0fc:	str	x0, [sp, #40]
   3a100:	str	x1, [sp, #32]
   3a104:	str	x2, [sp, #24]
   3a108:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3a10c:	ldr	x0, [x0, #4040]
   3a110:	ldr	x1, [x0]
   3a114:	str	x1, [sp, #72]
   3a118:	mov	x1, #0x0                   	// #0
   3a11c:	ldr	x0, [sp, #32]
   3a120:	ldr	w1, [x0, #12]
   3a124:	mov	w0, #0x400                 	// #1024
   3a128:	movk	w0, #0x20, lsl #16
   3a12c:	and	w0, w1, w0
   3a130:	cmp	w0, #0x400
   3a134:	b.ne	3a154 <sv_2pvunicode+0x60>  // b.any
   3a138:	ldr	x0, [sp, #32]
   3a13c:	ldr	x0, [x0]
   3a140:	ldr	x0, [x0, #16]
   3a144:	str	x0, [sp, #48]
   3a148:	ldr	x0, [sp, #32]
   3a14c:	ldr	x0, [x0, #16]
   3a150:	b	3a16c <sv_2pvunicode+0x78>
   3a154:	add	x0, sp, #0x30
   3a158:	mov	w3, #0x2                   	// #2
   3a15c:	mov	x2, x0
   3a160:	ldr	x1, [sp, #32]
   3a164:	ldr	x0, [sp, #40]
   3a168:	bl	38be0 <Perl_sv_2pv_flags@plt>
   3a16c:	str	x0, [sp, #56]
   3a170:	ldr	x0, [sp, #32]
   3a174:	ldr	w0, [x0, #12]
   3a178:	and	w0, w0, #0x20000000
   3a17c:	cmp	w0, #0x0
   3a180:	b.ne	3a278 <sv_2pvunicode+0x184>  // b.any
   3a184:	ldr	x0, [sp, #48]
   3a188:	mov	x2, x0
   3a18c:	ldr	x1, [sp, #56]
   3a190:	ldr	x0, [sp, #40]
   3a194:	bl	38d60 <Perl_newSVpvn@plt>
   3a198:	mov	x1, x0
   3a19c:	ldr	x0, [sp, #40]
   3a1a0:	bl	38cb0 <Perl_sv_2mortal@plt>
   3a1a4:	str	x0, [sp, #64]
   3a1a8:	ldr	x0, [sp, #64]
   3a1ac:	ldr	w0, [x0, #12]
   3a1b0:	and	w0, w0, #0x400
   3a1b4:	cmp	w0, #0x0
   3a1b8:	b.ne	3a210 <sv_2pvunicode+0x11c>  // b.any
   3a1bc:	ldr	x0, [sp, #64]
   3a1c0:	ldr	w1, [x0, #12]
   3a1c4:	mov	w0, #0x8f00                	// #36608
   3a1c8:	movk	w0, #0x19a1, lsl #16
   3a1cc:	and	w0, w1, w0
   3a1d0:	cmp	w0, #0x400
   3a1d4:	b.ne	3a1f4 <sv_2pvunicode+0x100>  // b.any
   3a1d8:	ldr	x0, [sp, #64]
   3a1dc:	ldr	x0, [x0]
   3a1e0:	ldr	x0, [x0, #16]
   3a1e4:	str	x0, [sp, #48]
   3a1e8:	ldr	x0, [sp, #64]
   3a1ec:	ldr	x0, [x0, #16]
   3a1f0:	b	3a20c <sv_2pvunicode+0x118>
   3a1f4:	add	x0, sp, #0x30
   3a1f8:	mov	w3, #0x2                   	// #2
   3a1fc:	mov	x2, x0
   3a200:	ldr	x1, [sp, #64]
   3a204:	ldr	x0, [sp, #40]
   3a208:	bl	38b90 <Perl_sv_pvn_force_flags@plt>
   3a20c:	str	x0, [sp, #56]
   3a210:	mov	x3, #0x0                   	// #0
   3a214:	mov	w2, #0x2                   	// #2
   3a218:	ldr	x1, [sp, #64]
   3a21c:	ldr	x0, [sp, #40]
   3a220:	bl	38c50 <Perl_sv_utf8_upgrade_flags_grow@plt>
   3a224:	ldr	x0, [sp, #64]
   3a228:	ldr	w1, [x0, #12]
   3a22c:	mov	w0, #0x400                 	// #1024
   3a230:	movk	w0, #0x20, lsl #16
   3a234:	and	w0, w1, w0
   3a238:	cmp	w0, #0x400
   3a23c:	b.ne	3a25c <sv_2pvunicode+0x168>  // b.any
   3a240:	ldr	x0, [sp, #64]
   3a244:	ldr	x0, [x0]
   3a248:	ldr	x0, [x0, #16]
   3a24c:	str	x0, [sp, #48]
   3a250:	ldr	x0, [sp, #64]
   3a254:	ldr	x0, [x0, #16]
   3a258:	b	3a274 <sv_2pvunicode+0x180>
   3a25c:	add	x0, sp, #0x30
   3a260:	mov	w3, #0x2                   	// #2
   3a264:	mov	x2, x0
   3a268:	ldr	x1, [sp, #64]
   3a26c:	ldr	x0, [sp, #40]
   3a270:	bl	38be0 <Perl_sv_2pv_flags@plt>
   3a274:	str	x0, [sp, #56]
   3a278:	ldr	x0, [sp, #24]
   3a27c:	cmp	x0, #0x0
   3a280:	b.eq	3a290 <sv_2pvunicode+0x19c>  // b.none
   3a284:	ldr	x1, [sp, #48]
   3a288:	ldr	x0, [sp, #24]
   3a28c:	str	x1, [x0]
   3a290:	ldr	x0, [sp, #56]
   3a294:	mov	x1, x0
   3a298:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3a29c:	ldr	x0, [x0, #4040]
   3a2a0:	ldr	x2, [sp, #72]
   3a2a4:	ldr	x0, [x0]
   3a2a8:	eor	x0, x2, x0
   3a2ac:	cmp	x0, #0x0
   3a2b0:	b.eq	3a2b8 <sv_2pvunicode+0x1c4>  // b.none
   3a2b4:	bl	38c20 <__stack_chk_fail@plt>
   3a2b8:	mov	x0, x1
   3a2bc:	ldp	x29, x30, [sp], #80
   3a2c0:	ret

000000000003a2c4 <pv_utf8_decompose>:
   3a2c4:	stp	x29, x30, [sp, #-160]!
   3a2c8:	mov	x29, sp
   3a2cc:	str	x0, [sp, #56]
   3a2d0:	str	x1, [sp, #48]
   3a2d4:	str	x2, [sp, #40]
   3a2d8:	str	x3, [sp, #32]
   3a2dc:	str	x4, [sp, #24]
   3a2e0:	strb	w5, [sp, #23]
   3a2e4:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3a2e8:	ldr	x0, [x0, #4040]
   3a2ec:	ldr	x1, [x0]
   3a2f0:	str	x1, [sp, #152]
   3a2f4:	mov	x1, #0x0                   	// #0
   3a2f8:	ldr	x0, [sp, #48]
   3a2fc:	str	x0, [sp, #72]
   3a300:	ldr	x1, [sp, #48]
   3a304:	ldr	x0, [sp, #40]
   3a308:	add	x0, x1, x0
   3a30c:	str	x0, [sp, #112]
   3a310:	ldr	x0, [sp, #32]
   3a314:	ldr	x0, [x0]
   3a318:	str	x0, [sp, #80]
   3a31c:	ldr	x0, [sp, #80]
   3a320:	str	x0, [sp, #88]
   3a324:	b	3a564 <pv_utf8_decompose+0x2a0>
   3a328:	ldr	x1, [sp, #112]
   3a32c:	ldr	x0, [sp, #72]
   3a330:	sub	x0, x1, x0
   3a334:	mov	x1, x0
   3a338:	add	x0, sp, #0x40
   3a33c:	mov	x5, #0x0                   	// #0
   3a340:	mov	x4, #0x0                   	// #0
   3a344:	mov	w3, #0x0                   	// #0
   3a348:	mov	x2, x0
   3a34c:	ldr	x0, [sp, #72]
   3a350:	bl	39004 <S_utf8n_to_uvchr_msgs>
   3a354:	str	x0, [sp, #120]
   3a358:	ldr	x0, [sp, #64]
   3a35c:	cmp	x0, #0x0
   3a360:	b.ne	3a378 <pv_utf8_decompose+0xb4>  // b.any
   3a364:	adrp	x0, 45000 <_fini+0x6bac>
   3a368:	add	x1, x0, #0xd10
   3a36c:	adrp	x0, 45000 <_fini+0x6bac>
   3a370:	add	x0, x0, #0xd20
   3a374:	bl	38c70 <Perl_croak_nocontext@plt>
   3a378:	ldr	x0, [sp, #64]
   3a37c:	ldr	x1, [sp, #72]
   3a380:	add	x0, x1, x0
   3a384:	str	x0, [sp, #72]
   3a388:	ldr	x1, [sp, #120]
   3a38c:	mov	x0, #0xabff                	// #44031
   3a390:	cmp	x1, x0
   3a394:	b.ls	3a418 <pv_utf8_decompose+0x154>  // b.plast
   3a398:	ldr	x1, [sp, #120]
   3a39c:	mov	x0, #0xd7a3                	// #55203
   3a3a0:	cmp	x1, x0
   3a3a4:	b.hi	3a418 <pv_utf8_decompose+0x154>  // b.pmore
   3a3a8:	ldr	x1, [sp, #88]
   3a3ac:	ldr	x0, [sp, #80]
   3a3b0:	sub	x0, x1, x0
   3a3b4:	str	x0, [sp, #128]
   3a3b8:	ldr	x0, [sp, #128]
   3a3bc:	add	x0, x0, #0x27
   3a3c0:	ldr	x1, [sp, #24]
   3a3c4:	cmp	x1, x0
   3a3c8:	b.cs	3a400 <pv_utf8_decompose+0x13c>  // b.hs, b.nlast
   3a3cc:	ldr	x0, [sp, #24]
   3a3d0:	add	x0, x0, #0x27
   3a3d4:	str	x0, [sp, #24]
   3a3d8:	ldr	x0, [sp, #24]
   3a3dc:	add	x0, x0, #0x1
   3a3e0:	mov	x1, x0
   3a3e4:	ldr	x0, [sp, #80]
   3a3e8:	bl	38cf0 <Perl_safesysrealloc@plt>
   3a3ec:	str	x0, [sp, #80]
   3a3f0:	ldr	x1, [sp, #80]
   3a3f4:	ldr	x0, [sp, #128]
   3a3f8:	add	x0, x1, x0
   3a3fc:	str	x0, [sp, #88]
   3a400:	ldr	x2, [sp, #120]
   3a404:	ldr	x1, [sp, #88]
   3a408:	ldr	x0, [sp, #56]
   3a40c:	bl	39f70 <pv_cat_decompHangul>
   3a410:	str	x0, [sp, #88]
   3a414:	b	3a564 <pv_utf8_decompose+0x2a0>
   3a418:	ldrb	w0, [sp, #23]
   3a41c:	cmp	w0, #0x0
   3a420:	b.eq	3a430 <pv_utf8_decompose+0x16c>  // b.none
   3a424:	ldr	x0, [sp, #120]
   3a428:	bl	39bcc <dec_compat>
   3a42c:	b	3a438 <pv_utf8_decompose+0x174>
   3a430:	ldr	x0, [sp, #120]
   3a434:	bl	39b2c <dec_canonical>
   3a438:	str	x0, [sp, #96]
   3a43c:	ldr	x0, [sp, #96]
   3a440:	cmp	x0, #0x0
   3a444:	b.eq	3a4f0 <pv_utf8_decompose+0x22c>  // b.none
   3a448:	ldr	x0, [sp, #96]
   3a44c:	bl	38b70 <strlen@plt>
   3a450:	str	x0, [sp, #104]
   3a454:	ldr	x1, [sp, #88]
   3a458:	ldr	x0, [sp, #80]
   3a45c:	sub	x0, x1, x0
   3a460:	str	x0, [sp, #144]
   3a464:	ldr	x1, [sp, #144]
   3a468:	ldr	x0, [sp, #104]
   3a46c:	add	x0, x1, x0
   3a470:	ldr	x1, [sp, #24]
   3a474:	cmp	x1, x0
   3a478:	b.cs	3a4d8 <pv_utf8_decompose+0x214>  // b.hs, b.nlast
   3a47c:	ldr	x1, [sp, #24]
   3a480:	ldr	x0, [sp, #104]
   3a484:	add	x0, x1, x0
   3a488:	str	x0, [sp, #24]
   3a48c:	ldr	x0, [sp, #24]
   3a490:	add	x0, x0, #0x1
   3a494:	mov	x1, x0
   3a498:	ldr	x0, [sp, #80]
   3a49c:	bl	38cf0 <Perl_safesysrealloc@plt>
   3a4a0:	str	x0, [sp, #80]
   3a4a4:	ldr	x1, [sp, #80]
   3a4a8:	ldr	x0, [sp, #144]
   3a4ac:	add	x0, x1, x0
   3a4b0:	str	x0, [sp, #88]
   3a4b4:	b	3a4d8 <pv_utf8_decompose+0x214>
   3a4b8:	ldr	x1, [sp, #96]
   3a4bc:	add	x0, x1, #0x1
   3a4c0:	str	x0, [sp, #96]
   3a4c4:	ldr	x0, [sp, #88]
   3a4c8:	add	x2, x0, #0x1
   3a4cc:	str	x2, [sp, #88]
   3a4d0:	ldrb	w1, [x1]
   3a4d4:	strb	w1, [x0]
   3a4d8:	ldr	x0, [sp, #104]
   3a4dc:	sub	x1, x0, #0x1
   3a4e0:	str	x1, [sp, #104]
   3a4e4:	cmp	x0, #0x0
   3a4e8:	b.ne	3a4b8 <pv_utf8_decompose+0x1f4>  // b.any
   3a4ec:	b	3a564 <pv_utf8_decompose+0x2a0>
   3a4f0:	ldr	x1, [sp, #88]
   3a4f4:	ldr	x0, [sp, #80]
   3a4f8:	sub	x0, x1, x0
   3a4fc:	str	x0, [sp, #136]
   3a500:	ldr	x0, [sp, #136]
   3a504:	add	x0, x0, #0xd
   3a508:	ldr	x1, [sp, #24]
   3a50c:	cmp	x1, x0
   3a510:	b.cs	3a548 <pv_utf8_decompose+0x284>  // b.hs, b.nlast
   3a514:	ldr	x0, [sp, #24]
   3a518:	add	x0, x0, #0xd
   3a51c:	str	x0, [sp, #24]
   3a520:	ldr	x0, [sp, #24]
   3a524:	add	x0, x0, #0x1
   3a528:	mov	x1, x0
   3a52c:	ldr	x0, [sp, #80]
   3a530:	bl	38cf0 <Perl_safesysrealloc@plt>
   3a534:	str	x0, [sp, #80]
   3a538:	ldr	x1, [sp, #80]
   3a53c:	ldr	x0, [sp, #136]
   3a540:	add	x0, x1, x0
   3a544:	str	x0, [sp, #88]
   3a548:	mov	x4, #0x0                   	// #0
   3a54c:	mov	x3, #0x0                   	// #0
   3a550:	ldr	x2, [sp, #120]
   3a554:	ldr	x1, [sp, #88]
   3a558:	ldr	x0, [sp, #56]
   3a55c:	bl	38d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   3a560:	str	x0, [sp, #88]
   3a564:	ldr	x1, [sp, #72]
   3a568:	ldr	x0, [sp, #112]
   3a56c:	cmp	x1, x0
   3a570:	b.cc	3a328 <pv_utf8_decompose+0x64>  // b.lo, b.ul, b.last
   3a574:	ldr	x0, [sp, #32]
   3a578:	ldr	x1, [sp, #80]
   3a57c:	str	x1, [x0]
   3a580:	ldr	x0, [sp, #88]
   3a584:	mov	x1, x0
   3a588:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3a58c:	ldr	x0, [x0, #4040]
   3a590:	ldr	x2, [sp, #152]
   3a594:	ldr	x0, [x0]
   3a598:	eor	x0, x2, x0
   3a59c:	cmp	x0, #0x0
   3a5a0:	b.eq	3a5a8 <pv_utf8_decompose+0x2e4>  // b.none
   3a5a4:	bl	38c20 <__stack_chk_fail@plt>
   3a5a8:	mov	x0, x1
   3a5ac:	ldp	x29, x30, [sp], #160
   3a5b0:	ret

000000000003a5b4 <pv_utf8_reorder>:
   3a5b4:	stp	x29, x30, [sp, #-432]!
   3a5b8:	mov	x29, sp
   3a5bc:	str	x0, [sp, #56]
   3a5c0:	str	x1, [sp, #48]
   3a5c4:	str	x2, [sp, #40]
   3a5c8:	str	x3, [sp, #32]
   3a5cc:	str	x4, [sp, #24]
   3a5d0:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3a5d4:	ldr	x0, [x0, #4040]
   3a5d8:	ldr	x1, [x0]
   3a5dc:	str	x1, [sp, #424]
   3a5e0:	mov	x1, #0x0                   	// #0
   3a5e4:	ldr	x0, [sp, #48]
   3a5e8:	str	x0, [sp, #80]
   3a5ec:	ldr	x1, [sp, #48]
   3a5f0:	ldr	x0, [sp, #40]
   3a5f4:	add	x0, x1, x0
   3a5f8:	str	x0, [sp, #152]
   3a5fc:	ldr	x0, [sp, #32]
   3a600:	ldr	x0, [x0]
   3a604:	str	x0, [sp, #88]
   3a608:	ldr	x0, [sp, #88]
   3a60c:	str	x0, [sp, #96]
   3a610:	add	x0, sp, #0xb8
   3a614:	str	x0, [sp, #104]
   3a618:	str	xzr, [sp, #112]
   3a61c:	mov	x0, #0xa                   	// #10
   3a620:	str	x0, [sp, #120]
   3a624:	str	xzr, [sp, #128]
   3a628:	b	3a9e8 <pv_utf8_reorder+0x434>
   3a62c:	ldr	x1, [sp, #152]
   3a630:	ldr	x0, [sp, #80]
   3a634:	sub	x0, x1, x0
   3a638:	mov	x1, x0
   3a63c:	add	x0, sp, #0x48
   3a640:	mov	x5, #0x0                   	// #0
   3a644:	mov	x4, #0x0                   	// #0
   3a648:	mov	w3, #0x0                   	// #0
   3a64c:	mov	x2, x0
   3a650:	ldr	x0, [sp, #80]
   3a654:	bl	39004 <S_utf8n_to_uvchr_msgs>
   3a658:	str	x0, [sp, #160]
   3a65c:	ldr	x0, [sp, #72]
   3a660:	cmp	x0, #0x0
   3a664:	b.ne	3a67c <pv_utf8_reorder+0xc8>  // b.any
   3a668:	adrp	x0, 45000 <_fini+0x6bac>
   3a66c:	add	x1, x0, #0xd58
   3a670:	adrp	x0, 45000 <_fini+0x6bac>
   3a674:	add	x0, x0, #0xd20
   3a678:	bl	38c70 <Perl_croak_nocontext@plt>
   3a67c:	ldr	x0, [sp, #72]
   3a680:	ldr	x1, [sp, #80]
   3a684:	add	x0, x1, x0
   3a688:	str	x0, [sp, #80]
   3a68c:	ldr	x0, [sp, #160]
   3a690:	bl	39ed4 <getCombinClass>
   3a694:	strb	w0, [sp, #71]
   3a698:	ldrb	w0, [sp, #71]
   3a69c:	cmp	w0, #0x0
   3a6a0:	b.eq	3a878 <pv_utf8_reorder+0x2c4>  // b.none
   3a6a4:	ldr	x0, [sp, #128]
   3a6a8:	add	x0, x0, #0x1
   3a6ac:	ldr	x1, [sp, #120]
   3a6b0:	cmp	x1, x0
   3a6b4:	b.cs	3a7e0 <pv_utf8_reorder+0x22c>  // b.hs, b.nlast
   3a6b8:	ldr	x0, [sp, #128]
   3a6bc:	add	x0, x0, #0x5
   3a6c0:	str	x0, [sp, #120]
   3a6c4:	ldr	x0, [sp, #128]
   3a6c8:	cmp	x0, #0xa
   3a6cc:	b.ne	3a78c <pv_utf8_reorder+0x1d8>  // b.any
   3a6d0:	ldr	x1, [sp, #120]
   3a6d4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3a6d8:	movk	x0, #0xaaa, lsl #48
   3a6dc:	cmp	x1, x0
   3a6e0:	cset	w0, hi  // hi = pmore
   3a6e4:	and	w0, w0, #0xff
   3a6e8:	and	x0, x0, #0xff
   3a6ec:	cmp	x0, #0x0
   3a6f0:	b.eq	3a6f8 <pv_utf8_reorder+0x144>  // b.none
   3a6f4:	bl	38f38 <S_croak_memory_wrap>
   3a6f8:	ldr	x1, [sp, #120]
   3a6fc:	mov	x0, x1
   3a700:	lsl	x0, x0, #1
   3a704:	add	x0, x0, x1
   3a708:	lsl	x0, x0, #3
   3a70c:	bl	38c10 <Perl_safesysmalloc@plt>
   3a710:	str	x0, [sp, #112]
   3a714:	str	xzr, [sp, #136]
   3a718:	b	3a778 <pv_utf8_reorder+0x1c4>
   3a71c:	ldr	x1, [sp, #136]
   3a720:	mov	x0, x1
   3a724:	lsl	x0, x0, #1
   3a728:	add	x0, x0, x1
   3a72c:	lsl	x0, x0, #3
   3a730:	mov	x1, x0
   3a734:	ldr	x0, [sp, #112]
   3a738:	add	x2, x0, x1
   3a73c:	ldr	x1, [sp, #136]
   3a740:	mov	x0, x1
   3a744:	lsl	x0, x0, #1
   3a748:	add	x0, x0, x1
   3a74c:	lsl	x0, x0, #3
   3a750:	add	x1, sp, #0xb8
   3a754:	mov	x3, x2
   3a758:	add	x2, x1, x0
   3a75c:	ldp	x0, x1, [x2]
   3a760:	stp	x0, x1, [x3]
   3a764:	ldr	x0, [x2, #16]
   3a768:	str	x0, [x3, #16]
   3a76c:	ldr	x0, [sp, #136]
   3a770:	add	x0, x0, #0x1
   3a774:	str	x0, [sp, #136]
   3a778:	ldr	x1, [sp, #136]
   3a77c:	ldr	x0, [sp, #128]
   3a780:	cmp	x1, x0
   3a784:	b.cc	3a71c <pv_utf8_reorder+0x168>  // b.lo, b.ul, b.last
   3a788:	b	3a7d8 <pv_utf8_reorder+0x224>
   3a78c:	ldr	x1, [sp, #120]
   3a790:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3a794:	movk	x0, #0xaaa, lsl #48
   3a798:	cmp	x1, x0
   3a79c:	cset	w0, hi  // hi = pmore
   3a7a0:	and	w0, w0, #0xff
   3a7a4:	and	x0, x0, #0xff
   3a7a8:	cmp	x0, #0x0
   3a7ac:	b.eq	3a7b4 <pv_utf8_reorder+0x200>  // b.none
   3a7b0:	bl	38f38 <S_croak_memory_wrap>
   3a7b4:	ldr	x1, [sp, #120]
   3a7b8:	mov	x0, x1
   3a7bc:	lsl	x0, x0, #1
   3a7c0:	add	x0, x0, x1
   3a7c4:	lsl	x0, x0, #3
   3a7c8:	mov	x1, x0
   3a7cc:	ldr	x0, [sp, #112]
   3a7d0:	bl	38cf0 <Perl_safesysrealloc@plt>
   3a7d4:	str	x0, [sp, #112]
   3a7d8:	ldr	x0, [sp, #112]
   3a7dc:	str	x0, [sp, #104]
   3a7e0:	ldr	x1, [sp, #128]
   3a7e4:	mov	x0, x1
   3a7e8:	lsl	x0, x0, #1
   3a7ec:	add	x0, x0, x1
   3a7f0:	lsl	x0, x0, #3
   3a7f4:	mov	x1, x0
   3a7f8:	ldr	x0, [sp, #104]
   3a7fc:	add	x0, x0, x1
   3a800:	ldrb	w1, [sp, #71]
   3a804:	strb	w1, [x0]
   3a808:	ldr	x1, [sp, #128]
   3a80c:	mov	x0, x1
   3a810:	lsl	x0, x0, #1
   3a814:	add	x0, x0, x1
   3a818:	lsl	x0, x0, #3
   3a81c:	mov	x1, x0
   3a820:	ldr	x0, [sp, #104]
   3a824:	add	x0, x0, x1
   3a828:	ldr	x1, [sp, #160]
   3a82c:	str	x1, [x0, #8]
   3a830:	ldr	x1, [sp, #128]
   3a834:	mov	x0, x1
   3a838:	lsl	x0, x0, #1
   3a83c:	add	x0, x0, x1
   3a840:	lsl	x0, x0, #3
   3a844:	mov	x1, x0
   3a848:	ldr	x0, [sp, #104]
   3a84c:	add	x0, x0, x1
   3a850:	ldr	x1, [sp, #128]
   3a854:	str	x1, [x0, #16]
   3a858:	ldr	x0, [sp, #128]
   3a85c:	add	x0, x0, #0x1
   3a860:	str	x0, [sp, #128]
   3a864:	ldr	x1, [sp, #80]
   3a868:	ldr	x0, [sp, #152]
   3a86c:	cmp	x1, x0
   3a870:	b.cs	3a878 <pv_utf8_reorder+0x2c4>  // b.hs, b.nlast
   3a874:	b	3a9e8 <pv_utf8_reorder+0x434>
   3a878:	ldr	x0, [sp, #128]
   3a87c:	cmp	x0, #0x0
   3a880:	b.eq	3a968 <pv_utf8_reorder+0x3b4>  // b.none
   3a884:	ldr	x0, [sp, #128]
   3a888:	cmp	x0, #0x1
   3a88c:	b.ls	3a8a8 <pv_utf8_reorder+0x2f4>  // b.plast
   3a890:	adrp	x0, 39000 <Perl_utf8_hop+0xac>
   3a894:	add	x3, x0, #0xaa8
   3a898:	mov	x2, #0x18                  	// #24
   3a89c:	ldr	x1, [sp, #128]
   3a8a0:	ldr	x0, [sp, #104]
   3a8a4:	bl	38bd0 <qsort@plt>
   3a8a8:	str	xzr, [sp, #144]
   3a8ac:	b	3a954 <pv_utf8_reorder+0x3a0>
   3a8b0:	ldr	x1, [sp, #96]
   3a8b4:	ldr	x0, [sp, #88]
   3a8b8:	sub	x0, x1, x0
   3a8bc:	str	x0, [sp, #168]
   3a8c0:	ldr	x0, [sp, #168]
   3a8c4:	add	x0, x0, #0xd
   3a8c8:	ldr	x1, [sp, #24]
   3a8cc:	cmp	x1, x0
   3a8d0:	b.cs	3a908 <pv_utf8_reorder+0x354>  // b.hs, b.nlast
   3a8d4:	ldr	x0, [sp, #24]
   3a8d8:	add	x0, x0, #0xd
   3a8dc:	str	x0, [sp, #24]
   3a8e0:	ldr	x0, [sp, #24]
   3a8e4:	add	x0, x0, #0x1
   3a8e8:	mov	x1, x0
   3a8ec:	ldr	x0, [sp, #88]
   3a8f0:	bl	38cf0 <Perl_safesysrealloc@plt>
   3a8f4:	str	x0, [sp, #88]
   3a8f8:	ldr	x1, [sp, #88]
   3a8fc:	ldr	x0, [sp, #168]
   3a900:	add	x0, x1, x0
   3a904:	str	x0, [sp, #96]
   3a908:	ldr	x1, [sp, #144]
   3a90c:	mov	x0, x1
   3a910:	lsl	x0, x0, #1
   3a914:	add	x0, x0, x1
   3a918:	lsl	x0, x0, #3
   3a91c:	mov	x1, x0
   3a920:	ldr	x0, [sp, #104]
   3a924:	add	x0, x0, x1
   3a928:	ldr	x0, [x0, #8]
   3a92c:	mov	x4, #0x0                   	// #0
   3a930:	mov	x3, #0x0                   	// #0
   3a934:	mov	x2, x0
   3a938:	ldr	x1, [sp, #96]
   3a93c:	ldr	x0, [sp, #56]
   3a940:	bl	38d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   3a944:	str	x0, [sp, #96]
   3a948:	ldr	x0, [sp, #144]
   3a94c:	add	x0, x0, #0x1
   3a950:	str	x0, [sp, #144]
   3a954:	ldr	x1, [sp, #144]
   3a958:	ldr	x0, [sp, #128]
   3a95c:	cmp	x1, x0
   3a960:	b.cc	3a8b0 <pv_utf8_reorder+0x2fc>  // b.lo, b.ul, b.last
   3a964:	str	xzr, [sp, #128]
   3a968:	ldrb	w0, [sp, #71]
   3a96c:	cmp	w0, #0x0
   3a970:	b.ne	3a9e8 <pv_utf8_reorder+0x434>  // b.any
   3a974:	ldr	x1, [sp, #96]
   3a978:	ldr	x0, [sp, #88]
   3a97c:	sub	x0, x1, x0
   3a980:	str	x0, [sp, #176]
   3a984:	ldr	x0, [sp, #176]
   3a988:	add	x0, x0, #0xd
   3a98c:	ldr	x1, [sp, #24]
   3a990:	cmp	x1, x0
   3a994:	b.cs	3a9cc <pv_utf8_reorder+0x418>  // b.hs, b.nlast
   3a998:	ldr	x0, [sp, #24]
   3a99c:	add	x0, x0, #0xd
   3a9a0:	str	x0, [sp, #24]
   3a9a4:	ldr	x0, [sp, #24]
   3a9a8:	add	x0, x0, #0x1
   3a9ac:	mov	x1, x0
   3a9b0:	ldr	x0, [sp, #88]
   3a9b4:	bl	38cf0 <Perl_safesysrealloc@plt>
   3a9b8:	str	x0, [sp, #88]
   3a9bc:	ldr	x1, [sp, #88]
   3a9c0:	ldr	x0, [sp, #176]
   3a9c4:	add	x0, x1, x0
   3a9c8:	str	x0, [sp, #96]
   3a9cc:	mov	x4, #0x0                   	// #0
   3a9d0:	mov	x3, #0x0                   	// #0
   3a9d4:	ldr	x2, [sp, #160]
   3a9d8:	ldr	x1, [sp, #96]
   3a9dc:	ldr	x0, [sp, #56]
   3a9e0:	bl	38d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   3a9e4:	str	x0, [sp, #96]
   3a9e8:	ldr	x1, [sp, #80]
   3a9ec:	ldr	x0, [sp, #152]
   3a9f0:	cmp	x1, x0
   3a9f4:	b.cc	3a62c <pv_utf8_reorder+0x78>  // b.lo, b.ul, b.last
   3a9f8:	ldr	x0, [sp, #112]
   3a9fc:	cmp	x0, #0x0
   3aa00:	b.eq	3aa0c <pv_utf8_reorder+0x458>  // b.none
   3aa04:	ldr	x0, [sp, #112]
   3aa08:	bl	38ce0 <Perl_safesysfree@plt>
   3aa0c:	ldr	x0, [sp, #32]
   3aa10:	ldr	x1, [sp, #88]
   3aa14:	str	x1, [x0]
   3aa18:	ldr	x0, [sp, #96]
   3aa1c:	mov	x1, x0
   3aa20:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3aa24:	ldr	x0, [x0, #4040]
   3aa28:	ldr	x2, [sp, #424]
   3aa2c:	ldr	x0, [x0]
   3aa30:	eor	x0, x2, x0
   3aa34:	cmp	x0, #0x0
   3aa38:	b.eq	3aa40 <pv_utf8_reorder+0x48c>  // b.none
   3aa3c:	bl	38c20 <__stack_chk_fail@plt>
   3aa40:	mov	x0, x1
   3aa44:	ldp	x29, x30, [sp], #432
   3aa48:	ret

000000000003aa4c <pv_utf8_compose>:
   3aa4c:	stp	x29, x30, [sp, #-288]!
   3aa50:	mov	x29, sp
   3aa54:	str	x0, [sp, #56]
   3aa58:	str	x1, [sp, #48]
   3aa5c:	str	x2, [sp, #40]
   3aa60:	str	x3, [sp, #32]
   3aa64:	str	x4, [sp, #24]
   3aa68:	strb	w5, [sp, #23]
   3aa6c:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3aa70:	ldr	x0, [x0, #4040]
   3aa74:	ldr	x1, [x0]
   3aa78:	str	x1, [sp, #280]
   3aa7c:	mov	x1, #0x0                   	// #0
   3aa80:	ldr	x0, [sp, #48]
   3aa84:	str	x0, [sp, #80]
   3aa88:	ldr	x1, [sp, #48]
   3aa8c:	ldr	x0, [sp, #40]
   3aa90:	add	x0, x1, x0
   3aa94:	str	x0, [sp, #152]
   3aa98:	ldr	x0, [sp, #32]
   3aa9c:	ldr	x0, [x0]
   3aaa0:	str	x0, [sp, #88]
   3aaa4:	ldr	x0, [sp, #88]
   3aaa8:	str	x0, [sp, #96]
   3aaac:	str	xzr, [sp, #104]
   3aab0:	strb	wzr, [sp, #68]
   3aab4:	strb	wzr, [sp, #69]
   3aab8:	add	x0, sp, #0xc8
   3aabc:	str	x0, [sp, #112]
   3aac0:	str	xzr, [sp, #120]
   3aac4:	mov	x0, #0xa                   	// #10
   3aac8:	str	x0, [sp, #128]
   3aacc:	str	xzr, [sp, #136]
   3aad0:	b	3af48 <pv_utf8_compose+0x4fc>
   3aad4:	ldr	x1, [sp, #152]
   3aad8:	ldr	x0, [sp, #80]
   3aadc:	sub	x0, x1, x0
   3aae0:	mov	x1, x0
   3aae4:	add	x0, sp, #0x48
   3aae8:	mov	x5, #0x0                   	// #0
   3aaec:	mov	x4, #0x0                   	// #0
   3aaf0:	mov	w3, #0x0                   	// #0
   3aaf4:	mov	x2, x0
   3aaf8:	ldr	x0, [sp, #80]
   3aafc:	bl	39004 <S_utf8n_to_uvchr_msgs>
   3ab00:	str	x0, [sp, #160]
   3ab04:	ldr	x0, [sp, #72]
   3ab08:	cmp	x0, #0x0
   3ab0c:	b.ne	3ab24 <pv_utf8_compose+0xd8>  // b.any
   3ab10:	adrp	x0, 45000 <_fini+0x6bac>
   3ab14:	add	x1, x0, #0xd60
   3ab18:	adrp	x0, 45000 <_fini+0x6bac>
   3ab1c:	add	x0, x0, #0xd20
   3ab20:	bl	38c70 <Perl_croak_nocontext@plt>
   3ab24:	ldr	x0, [sp, #72]
   3ab28:	ldr	x1, [sp, #80]
   3ab2c:	add	x0, x1, x0
   3ab30:	str	x0, [sp, #80]
   3ab34:	ldr	x0, [sp, #160]
   3ab38:	bl	39ed4 <getCombinClass>
   3ab3c:	strb	w0, [sp, #71]
   3ab40:	ldrb	w0, [sp, #68]
   3ab44:	eor	w0, w0, #0x1
   3ab48:	and	w0, w0, #0xff
   3ab4c:	cmp	w0, #0x0
   3ab50:	b.eq	3abfc <pv_utf8_compose+0x1b0>  // b.none
   3ab54:	ldrb	w0, [sp, #71]
   3ab58:	cmp	w0, #0x0
   3ab5c:	b.ne	3ab84 <pv_utf8_compose+0x138>  // b.any
   3ab60:	ldr	x0, [sp, #160]
   3ab64:	str	x0, [sp, #104]
   3ab68:	mov	w0, #0x1                   	// #1
   3ab6c:	strb	w0, [sp, #68]
   3ab70:	ldr	x1, [sp, #80]
   3ab74:	ldr	x0, [sp, #152]
   3ab78:	cmp	x1, x0
   3ab7c:	b.cs	3ae08 <pv_utf8_compose+0x3bc>  // b.hs, b.nlast
   3ab80:	b	3af48 <pv_utf8_compose+0x4fc>
   3ab84:	ldr	x1, [sp, #96]
   3ab88:	ldr	x0, [sp, #88]
   3ab8c:	sub	x0, x1, x0
   3ab90:	str	x0, [sp, #176]
   3ab94:	ldr	x0, [sp, #176]
   3ab98:	add	x0, x0, #0xd
   3ab9c:	ldr	x1, [sp, #24]
   3aba0:	cmp	x1, x0
   3aba4:	b.cs	3abdc <pv_utf8_compose+0x190>  // b.hs, b.nlast
   3aba8:	ldr	x0, [sp, #24]
   3abac:	add	x0, x0, #0xd
   3abb0:	str	x0, [sp, #24]
   3abb4:	ldr	x0, [sp, #24]
   3abb8:	add	x0, x0, #0x1
   3abbc:	mov	x1, x0
   3abc0:	ldr	x0, [sp, #88]
   3abc4:	bl	38cf0 <Perl_safesysrealloc@plt>
   3abc8:	str	x0, [sp, #88]
   3abcc:	ldr	x1, [sp, #88]
   3abd0:	ldr	x0, [sp, #176]
   3abd4:	add	x0, x1, x0
   3abd8:	str	x0, [sp, #96]
   3abdc:	mov	x4, #0x0                   	// #0
   3abe0:	mov	x3, #0x0                   	// #0
   3abe4:	ldr	x2, [sp, #160]
   3abe8:	ldr	x1, [sp, #96]
   3abec:	ldr	x0, [sp, #56]
   3abf0:	bl	38d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   3abf4:	str	x0, [sp, #96]
   3abf8:	b	3af48 <pv_utf8_compose+0x4fc>
   3abfc:	ldrb	w0, [sp, #23]
   3ac00:	cmp	w0, #0x0
   3ac04:	b.eq	3ac14 <pv_utf8_compose+0x1c8>  // b.none
   3ac08:	ldr	x0, [sp, #136]
   3ac0c:	cmp	x0, #0x0
   3ac10:	b.ne	3ac40 <pv_utf8_compose+0x1f4>  // b.any
   3ac14:	ldrb	w0, [sp, #71]
   3ac18:	cmp	w0, #0x0
   3ac1c:	b.eq	3ac30 <pv_utf8_compose+0x1e4>  // b.none
   3ac20:	ldrb	w1, [sp, #69]
   3ac24:	ldrb	w0, [sp, #71]
   3ac28:	cmp	w1, w0
   3ac2c:	b.eq	3ac40 <pv_utf8_compose+0x1f4>  // b.none
   3ac30:	ldrb	w1, [sp, #69]
   3ac34:	ldrb	w0, [sp, #71]
   3ac38:	cmp	w1, w0
   3ac3c:	b.ls	3ac48 <pv_utf8_compose+0x1fc>  // b.plast
   3ac40:	strb	wzr, [sp, #70]
   3ac44:	b	3aca8 <pv_utf8_compose+0x25c>
   3ac48:	ldr	x1, [sp, #160]
   3ac4c:	ldr	x0, [sp, #104]
   3ac50:	bl	39c6c <composite_uv>
   3ac54:	str	x0, [sp, #168]
   3ac58:	ldr	x0, [sp, #168]
   3ac5c:	cmp	x0, #0x0
   3ac60:	b.eq	3aca4 <pv_utf8_compose+0x258>  // b.none
   3ac64:	ldr	x0, [sp, #168]
   3ac68:	bl	38d50 <isExclusion@plt>
   3ac6c:	and	w0, w0, #0xff
   3ac70:	eor	w0, w0, #0x1
   3ac74:	and	w0, w0, #0xff
   3ac78:	cmp	w0, #0x0
   3ac7c:	b.eq	3aca4 <pv_utf8_compose+0x258>  // b.none
   3ac80:	ldr	x0, [sp, #168]
   3ac84:	str	x0, [sp, #104]
   3ac88:	mov	w0, #0x1                   	// #1
   3ac8c:	strb	w0, [sp, #70]
   3ac90:	ldr	x1, [sp, #80]
   3ac94:	ldr	x0, [sp, #152]
   3ac98:	cmp	x1, x0
   3ac9c:	b.cs	3aca8 <pv_utf8_compose+0x25c>  // b.hs, b.nlast
   3aca0:	b	3af48 <pv_utf8_compose+0x4fc>
   3aca4:	strb	wzr, [sp, #70]
   3aca8:	ldrb	w0, [sp, #70]
   3acac:	eor	w0, w0, #0x1
   3acb0:	and	w0, w0, #0xff
   3acb4:	cmp	w0, #0x0
   3acb8:	b.eq	3ae08 <pv_utf8_compose+0x3bc>  // b.none
   3acbc:	ldrb	w0, [sp, #71]
   3acc0:	strb	w0, [sp, #69]
   3acc4:	ldrb	w0, [sp, #71]
   3acc8:	cmp	w0, #0x0
   3accc:	b.ne	3ace0 <pv_utf8_compose+0x294>  // b.any
   3acd0:	ldr	x1, [sp, #80]
   3acd4:	ldr	x0, [sp, #152]
   3acd8:	cmp	x1, x0
   3acdc:	b.cc	3adec <pv_utf8_compose+0x3a0>  // b.lo, b.ul, b.last
   3ace0:	ldr	x0, [sp, #136]
   3ace4:	add	x0, x0, #0x1
   3ace8:	ldr	x1, [sp, #128]
   3acec:	cmp	x1, x0
   3acf0:	b.cs	3adc8 <pv_utf8_compose+0x37c>  // b.hs, b.nlast
   3acf4:	ldr	x0, [sp, #136]
   3acf8:	add	x0, x0, #0x5
   3acfc:	str	x0, [sp, #128]
   3ad00:	ldr	x0, [sp, #136]
   3ad04:	cmp	x0, #0xa
   3ad08:	b.ne	3ad84 <pv_utf8_compose+0x338>  // b.any
   3ad0c:	ldr	x1, [sp, #128]
   3ad10:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   3ad14:	cmp	x1, x0
   3ad18:	cset	w0, hi  // hi = pmore
   3ad1c:	and	w0, w0, #0xff
   3ad20:	and	x0, x0, #0xff
   3ad24:	cmp	x0, #0x0
   3ad28:	b.eq	3ad30 <pv_utf8_compose+0x2e4>  // b.none
   3ad2c:	bl	38f38 <S_croak_memory_wrap>
   3ad30:	ldr	x0, [sp, #128]
   3ad34:	lsl	x0, x0, #3
   3ad38:	bl	38c10 <Perl_safesysmalloc@plt>
   3ad3c:	str	x0, [sp, #120]
   3ad40:	ldr	x1, [sp, #136]
   3ad44:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   3ad48:	cmp	x1, x0
   3ad4c:	cset	w0, hi  // hi = pmore
   3ad50:	and	w0, w0, #0xff
   3ad54:	and	x0, x0, #0xff
   3ad58:	cmp	x0, #0x0
   3ad5c:	b.eq	3ad64 <pv_utf8_compose+0x318>  // b.none
   3ad60:	bl	38f38 <S_croak_memory_wrap>
   3ad64:	ldr	x0, [sp, #136]
   3ad68:	lsl	x1, x0, #3
   3ad6c:	add	x0, sp, #0xc8
   3ad70:	mov	x2, x1
   3ad74:	mov	x1, x0
   3ad78:	ldr	x0, [sp, #120]
   3ad7c:	bl	38b50 <memcpy@plt>
   3ad80:	b	3adc0 <pv_utf8_compose+0x374>
   3ad84:	ldr	x1, [sp, #128]
   3ad88:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   3ad8c:	cmp	x1, x0
   3ad90:	cset	w0, hi  // hi = pmore
   3ad94:	and	w0, w0, #0xff
   3ad98:	and	x0, x0, #0xff
   3ad9c:	cmp	x0, #0x0
   3ada0:	b.eq	3ada8 <pv_utf8_compose+0x35c>  // b.none
   3ada4:	bl	38f38 <S_croak_memory_wrap>
   3ada8:	ldr	x0, [sp, #128]
   3adac:	lsl	x0, x0, #3
   3adb0:	mov	x1, x0
   3adb4:	ldr	x0, [sp, #120]
   3adb8:	bl	38cf0 <Perl_safesysrealloc@plt>
   3adbc:	str	x0, [sp, #120]
   3adc0:	ldr	x0, [sp, #120]
   3adc4:	str	x0, [sp, #112]
   3adc8:	ldr	x0, [sp, #136]
   3adcc:	lsl	x0, x0, #3
   3add0:	ldr	x1, [sp, #112]
   3add4:	add	x0, x1, x0
   3add8:	ldr	x1, [sp, #160]
   3addc:	str	x1, [x0]
   3ade0:	ldr	x0, [sp, #136]
   3ade4:	add	x0, x0, #0x1
   3ade8:	str	x0, [sp, #136]
   3adec:	ldrb	w0, [sp, #71]
   3adf0:	cmp	w0, #0x0
   3adf4:	b.eq	3ae08 <pv_utf8_compose+0x3bc>  // b.none
   3adf8:	ldr	x1, [sp, #80]
   3adfc:	ldr	x0, [sp, #152]
   3ae00:	cmp	x1, x0
   3ae04:	b.cc	3af44 <pv_utf8_compose+0x4f8>  // b.lo, b.ul, b.last
   3ae08:	ldr	x1, [sp, #96]
   3ae0c:	ldr	x0, [sp, #88]
   3ae10:	sub	x0, x1, x0
   3ae14:	str	x0, [sp, #184]
   3ae18:	ldr	x0, [sp, #184]
   3ae1c:	add	x0, x0, #0xd
   3ae20:	ldr	x1, [sp, #24]
   3ae24:	cmp	x1, x0
   3ae28:	b.cs	3ae60 <pv_utf8_compose+0x414>  // b.hs, b.nlast
   3ae2c:	ldr	x0, [sp, #24]
   3ae30:	add	x0, x0, #0xd
   3ae34:	str	x0, [sp, #24]
   3ae38:	ldr	x0, [sp, #24]
   3ae3c:	add	x0, x0, #0x1
   3ae40:	mov	x1, x0
   3ae44:	ldr	x0, [sp, #88]
   3ae48:	bl	38cf0 <Perl_safesysrealloc@plt>
   3ae4c:	str	x0, [sp, #88]
   3ae50:	ldr	x1, [sp, #88]
   3ae54:	ldr	x0, [sp, #184]
   3ae58:	add	x0, x1, x0
   3ae5c:	str	x0, [sp, #96]
   3ae60:	mov	x4, #0x0                   	// #0
   3ae64:	mov	x3, #0x0                   	// #0
   3ae68:	ldr	x2, [sp, #104]
   3ae6c:	ldr	x1, [sp, #96]
   3ae70:	ldr	x0, [sp, #56]
   3ae74:	bl	38d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   3ae78:	str	x0, [sp, #96]
   3ae7c:	ldr	x0, [sp, #136]
   3ae80:	cmp	x0, #0x0
   3ae84:	b.eq	3af38 <pv_utf8_compose+0x4ec>  // b.none
   3ae88:	str	xzr, [sp, #144]
   3ae8c:	b	3af24 <pv_utf8_compose+0x4d8>
   3ae90:	ldr	x1, [sp, #96]
   3ae94:	ldr	x0, [sp, #88]
   3ae98:	sub	x0, x1, x0
   3ae9c:	str	x0, [sp, #192]
   3aea0:	ldr	x0, [sp, #192]
   3aea4:	add	x0, x0, #0xd
   3aea8:	ldr	x1, [sp, #24]
   3aeac:	cmp	x1, x0
   3aeb0:	b.cs	3aee8 <pv_utf8_compose+0x49c>  // b.hs, b.nlast
   3aeb4:	ldr	x0, [sp, #24]
   3aeb8:	add	x0, x0, #0xd
   3aebc:	str	x0, [sp, #24]
   3aec0:	ldr	x0, [sp, #24]
   3aec4:	add	x0, x0, #0x1
   3aec8:	mov	x1, x0
   3aecc:	ldr	x0, [sp, #88]
   3aed0:	bl	38cf0 <Perl_safesysrealloc@plt>
   3aed4:	str	x0, [sp, #88]
   3aed8:	ldr	x1, [sp, #88]
   3aedc:	ldr	x0, [sp, #192]
   3aee0:	add	x0, x1, x0
   3aee4:	str	x0, [sp, #96]
   3aee8:	ldr	x0, [sp, #144]
   3aeec:	lsl	x0, x0, #3
   3aef0:	ldr	x1, [sp, #112]
   3aef4:	add	x0, x1, x0
   3aef8:	ldr	x0, [x0]
   3aefc:	mov	x4, #0x0                   	// #0
   3af00:	mov	x3, #0x0                   	// #0
   3af04:	mov	x2, x0
   3af08:	ldr	x1, [sp, #96]
   3af0c:	ldr	x0, [sp, #56]
   3af10:	bl	38d00 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   3af14:	str	x0, [sp, #96]
   3af18:	ldr	x0, [sp, #144]
   3af1c:	add	x0, x0, #0x1
   3af20:	str	x0, [sp, #144]
   3af24:	ldr	x1, [sp, #144]
   3af28:	ldr	x0, [sp, #136]
   3af2c:	cmp	x1, x0
   3af30:	b.cc	3ae90 <pv_utf8_compose+0x444>  // b.lo, b.ul, b.last
   3af34:	str	xzr, [sp, #136]
   3af38:	ldr	x0, [sp, #160]
   3af3c:	str	x0, [sp, #104]
   3af40:	b	3af48 <pv_utf8_compose+0x4fc>
   3af44:	nop
   3af48:	ldr	x1, [sp, #80]
   3af4c:	ldr	x0, [sp, #152]
   3af50:	cmp	x1, x0
   3af54:	b.cc	3aad4 <pv_utf8_compose+0x88>  // b.lo, b.ul, b.last
   3af58:	ldr	x0, [sp, #120]
   3af5c:	cmp	x0, #0x0
   3af60:	b.eq	3af6c <pv_utf8_compose+0x520>  // b.none
   3af64:	ldr	x0, [sp, #120]
   3af68:	bl	38ce0 <Perl_safesysfree@plt>
   3af6c:	ldr	x0, [sp, #32]
   3af70:	ldr	x1, [sp, #88]
   3af74:	str	x1, [x0]
   3af78:	ldr	x0, [sp, #96]
   3af7c:	mov	x1, x0
   3af80:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3af84:	ldr	x0, [x0, #4040]
   3af88:	ldr	x2, [sp, #280]
   3af8c:	ldr	x0, [x0]
   3af90:	eor	x0, x2, x0
   3af94:	cmp	x0, #0x0
   3af98:	b.eq	3afa0 <pv_utf8_compose+0x554>  // b.none
   3af9c:	bl	38c20 <__stack_chk_fail@plt>
   3afa0:	mov	x0, x1
   3afa4:	ldp	x29, x30, [sp], #288
   3afa8:	ret

000000000003afac <XS_Unicode__Normalize_decompose>:
   3afac:	stp	x29, x30, [sp, #-160]!
   3afb0:	mov	x29, sp
   3afb4:	str	x19, [sp, #16]
   3afb8:	str	x0, [sp, #40]
   3afbc:	str	x1, [sp, #32]
   3afc0:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3afc4:	ldr	x0, [x0, #4040]
   3afc8:	ldr	x1, [x0]
   3afcc:	str	x1, [sp, #152]
   3afd0:	mov	x1, #0x0                   	// #0
   3afd4:	ldr	x0, [sp, #40]
   3afd8:	ldr	x0, [x0]
   3afdc:	str	x0, [sp, #80]
   3afe0:	ldr	x0, [sp, #40]
   3afe4:	bl	38f10 <S_POPMARK>
   3afe8:	str	w0, [sp, #48]
   3afec:	ldr	x0, [sp, #40]
   3aff0:	ldr	x1, [x0, #24]
   3aff4:	ldr	w0, [sp, #48]
   3aff8:	add	w2, w0, #0x1
   3affc:	str	w2, [sp, #48]
   3b000:	sxtw	x0, w0
   3b004:	lsl	x0, x0, #3
   3b008:	add	x0, x1, x0
   3b00c:	str	x0, [sp, #88]
   3b010:	ldr	x1, [sp, #80]
   3b014:	ldr	x0, [sp, #88]
   3b018:	sub	x0, x1, x0
   3b01c:	asr	x0, x0, #3
   3b020:	str	w0, [sp, #52]
   3b024:	ldr	w0, [sp, #52]
   3b028:	cmp	w0, #0x0
   3b02c:	b.le	3b03c <XS_Unicode__Normalize_decompose+0x90>
   3b030:	ldr	w0, [sp, #52]
   3b034:	cmp	w0, #0x2
   3b038:	b.le	3b04c <XS_Unicode__Normalize_decompose+0xa0>
   3b03c:	adrp	x0, 45000 <_fini+0x6bac>
   3b040:	add	x1, x0, #0xd68
   3b044:	ldr	x0, [sp, #32]
   3b048:	bl	38c40 <Perl_croak_xs_usage@plt>
   3b04c:	ldr	x0, [sp, #40]
   3b050:	ldr	x1, [x0, #24]
   3b054:	ldrsw	x0, [sp, #48]
   3b058:	lsl	x0, x0, #3
   3b05c:	add	x0, x1, x0
   3b060:	ldr	x0, [x0]
   3b064:	str	x0, [sp, #96]
   3b068:	ldr	w0, [sp, #52]
   3b06c:	cmp	w0, #0x1
   3b070:	b.gt	3b084 <XS_Unicode__Normalize_decompose+0xd8>
   3b074:	ldr	x0, [sp, #40]
   3b078:	add	x0, x0, #0x168
   3b07c:	str	x0, [sp, #72]
   3b080:	b	3b0a4 <XS_Unicode__Normalize_decompose+0xf8>
   3b084:	ldr	x0, [sp, #40]
   3b088:	ldr	x1, [x0, #24]
   3b08c:	ldrsw	x0, [sp, #48]
   3b090:	add	x0, x0, #0x1
   3b094:	lsl	x0, x0, #3
   3b098:	add	x0, x1, x0
   3b09c:	ldr	x0, [x0]
   3b0a0:	str	x0, [sp, #72]
   3b0a4:	add	x0, sp, #0x40
   3b0a8:	mov	x2, x0
   3b0ac:	ldr	x1, [sp, #96]
   3b0b0:	ldr	x0, [sp, #40]
   3b0b4:	bl	3a0f4 <sv_2pvunicode>
   3b0b8:	str	x0, [sp, #104]
   3b0bc:	mov	x2, #0x0                   	// #0
   3b0c0:	adrp	x0, 45000 <_fini+0x6bac>
   3b0c4:	add	x1, x0, #0xd80
   3b0c8:	ldr	x0, [sp, #40]
   3b0cc:	bl	38d60 <Perl_newSVpvn@plt>
   3b0d0:	str	x0, [sp, #112]
   3b0d4:	ldr	x0, [sp, #64]
   3b0d8:	str	x0, [sp, #120]
   3b0dc:	ldr	x0, [sp, #120]
   3b0e0:	add	x0, x0, #0x1
   3b0e4:	bl	38c10 <Perl_safesysmalloc@plt>
   3b0e8:	str	x0, [sp, #56]
   3b0ec:	ldr	x19, [sp, #64]
   3b0f0:	ldr	x0, [sp, #72]
   3b0f4:	cmp	x0, #0x0
   3b0f8:	cset	w0, ne  // ne = any
   3b0fc:	and	w0, w0, #0xff
   3b100:	and	x0, x0, #0xff
   3b104:	cmp	x0, #0x0
   3b108:	b.eq	3b2d4 <XS_Unicode__Normalize_decompose+0x328>  // b.none
   3b10c:	ldr	x0, [sp, #72]
   3b110:	ldr	w0, [x0, #12]
   3b114:	lsr	w0, w0, #21
   3b118:	mov	w0, w0
   3b11c:	and	x0, x0, #0x1
   3b120:	cmp	x0, #0x0
   3b124:	b.eq	3b13c <XS_Unicode__Normalize_decompose+0x190>  // b.none
   3b128:	ldr	x1, [sp, #72]
   3b12c:	ldr	x0, [sp, #40]
   3b130:	bl	38cc0 <Perl_mg_get@plt>
   3b134:	cmp	w0, #0x0
   3b138:	nop
   3b13c:	ldr	x0, [sp, #40]
   3b140:	add	x0, x0, #0x138
   3b144:	ldr	x1, [sp, #72]
   3b148:	sub	x0, x1, x0
   3b14c:	asr	x1, x0, #3
   3b150:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3b154:	movk	x0, #0xaaab
   3b158:	mul	x0, x1, x0
   3b15c:	cmp	x0, #0x3
   3b160:	b.hi	3b180 <XS_Unicode__Normalize_decompose+0x1d4>  // b.pmore
   3b164:	ldr	x0, [sp, #40]
   3b168:	add	x0, x0, #0x138
   3b16c:	ldr	x1, [sp, #72]
   3b170:	cmp	x1, x0
   3b174:	cset	w0, eq  // eq = none
   3b178:	and	w0, w0, #0xff
   3b17c:	b	3b2c4 <XS_Unicode__Normalize_decompose+0x318>
   3b180:	ldr	x0, [sp, #72]
   3b184:	ldr	w0, [x0, #12]
   3b188:	and	w0, w0, #0xff00
   3b18c:	cmp	w0, #0x0
   3b190:	b.eq	3b2c0 <XS_Unicode__Normalize_decompose+0x314>  // b.none
   3b194:	ldr	x0, [sp, #72]
   3b198:	ldr	w0, [x0, #12]
   3b19c:	and	w0, w0, #0x400
   3b1a0:	cmp	w0, #0x0
   3b1a4:	b.eq	3b210 <XS_Unicode__Normalize_decompose+0x264>  // b.none
   3b1a8:	ldr	x0, [sp, #72]
   3b1ac:	ldr	x0, [x0]
   3b1b0:	cmp	x0, #0x0
   3b1b4:	b.eq	3b1fc <XS_Unicode__Normalize_decompose+0x250>  // b.none
   3b1b8:	ldr	x0, [sp, #72]
   3b1bc:	ldr	x0, [x0]
   3b1c0:	ldr	x0, [x0, #16]
   3b1c4:	cmp	x0, #0x1
   3b1c8:	b.hi	3b1f4 <XS_Unicode__Normalize_decompose+0x248>  // b.pmore
   3b1cc:	ldr	x0, [sp, #72]
   3b1d0:	ldr	x0, [x0]
   3b1d4:	ldr	x0, [x0, #16]
   3b1d8:	cmp	x0, #0x0
   3b1dc:	b.eq	3b1fc <XS_Unicode__Normalize_decompose+0x250>  // b.none
   3b1e0:	ldr	x0, [sp, #72]
   3b1e4:	ldr	x0, [x0, #16]
   3b1e8:	ldrb	w0, [x0]
   3b1ec:	cmp	w0, #0x30
   3b1f0:	b.eq	3b1fc <XS_Unicode__Normalize_decompose+0x250>  // b.none
   3b1f4:	mov	w0, #0x1                   	// #1
   3b1f8:	b	3b200 <XS_Unicode__Normalize_decompose+0x254>
   3b1fc:	mov	w0, #0x0                   	// #0
   3b200:	cmp	w0, #0x0
   3b204:	cset	w0, ne  // ne = any
   3b208:	and	w0, w0, #0xff
   3b20c:	b	3b2c4 <XS_Unicode__Normalize_decompose+0x318>
   3b210:	ldr	x0, [sp, #72]
   3b214:	ldr	w0, [x0, #12]
   3b218:	and	w0, w0, #0x100
   3b21c:	cmp	w0, #0x0
   3b220:	b.eq	3b240 <XS_Unicode__Normalize_decompose+0x294>  // b.none
   3b224:	ldr	x0, [sp, #72]
   3b228:	ldr	x0, [x0]
   3b22c:	ldr	x0, [x0, #32]
   3b230:	cmp	x0, #0x0
   3b234:	cset	w0, ne  // ne = any
   3b238:	and	w0, w0, #0xff
   3b23c:	b	3b2c4 <XS_Unicode__Normalize_decompose+0x318>
   3b240:	ldr	x0, [sp, #72]
   3b244:	ldr	w0, [x0, #12]
   3b248:	and	w0, w0, #0x800
   3b24c:	cmp	w0, #0x0
   3b250:	b.eq	3b28c <XS_Unicode__Normalize_decompose+0x2e0>  // b.none
   3b254:	ldr	x0, [sp, #72]
   3b258:	ldr	x0, [x0, #16]
   3b25c:	ldr	w0, [x0, #12]
   3b260:	and	w0, w0, #0x100000
   3b264:	cmp	w0, #0x0
   3b268:	b.eq	3b2a8 <XS_Unicode__Normalize_decompose+0x2fc>  // b.none
   3b26c:	ldr	x0, [sp, #72]
   3b270:	ldr	x0, [x0, #16]
   3b274:	ldr	x0, [x0]
   3b278:	ldr	x0, [x0]
   3b27c:	ldr	w0, [x0, #12]
   3b280:	and	w0, w0, #0x10000000
   3b284:	cmp	w0, #0x0
   3b288:	b.eq	3b2a8 <XS_Unicode__Normalize_decompose+0x2fc>  // b.none
   3b28c:	mov	w2, #0x0                   	// #0
   3b290:	ldr	x1, [sp, #72]
   3b294:	ldr	x0, [sp, #40]
   3b298:	bl	38b60 <Perl_sv_2bool_flags@plt>
   3b29c:	and	w0, w0, #0xff
   3b2a0:	cmp	w0, #0x0
   3b2a4:	b.eq	3b2b0 <XS_Unicode__Normalize_decompose+0x304>  // b.none
   3b2a8:	mov	w0, #0x1                   	// #1
   3b2ac:	b	3b2b4 <XS_Unicode__Normalize_decompose+0x308>
   3b2b0:	mov	w0, #0x0                   	// #0
   3b2b4:	and	w0, w0, #0x1
   3b2b8:	and	w0, w0, #0xff
   3b2bc:	b	3b2c4 <XS_Unicode__Normalize_decompose+0x318>
   3b2c0:	mov	w0, #0x0                   	// #0
   3b2c4:	cmp	w0, #0x0
   3b2c8:	b.eq	3b2d4 <XS_Unicode__Normalize_decompose+0x328>  // b.none
   3b2cc:	mov	w0, #0x1                   	// #1
   3b2d0:	b	3b2d8 <XS_Unicode__Normalize_decompose+0x32c>
   3b2d4:	mov	w0, #0x0                   	// #0
   3b2d8:	and	w0, w0, #0x1
   3b2dc:	and	w1, w0, #0xff
   3b2e0:	add	x0, sp, #0x38
   3b2e4:	mov	w5, w1
   3b2e8:	ldr	x4, [sp, #120]
   3b2ec:	mov	x3, x0
   3b2f0:	mov	x2, x19
   3b2f4:	ldr	x1, [sp, #104]
   3b2f8:	ldr	x0, [sp, #40]
   3b2fc:	bl	3a2c4 <pv_utf8_decompose>
   3b300:	str	x0, [sp, #128]
   3b304:	ldr	x2, [sp, #56]
   3b308:	ldr	x0, [sp, #56]
   3b30c:	ldr	x1, [sp, #128]
   3b310:	sub	x0, x1, x0
   3b314:	mov	x3, x0
   3b318:	ldr	x1, [sp, #112]
   3b31c:	ldr	x0, [sp, #40]
   3b320:	bl	38d20 <Perl_sv_setpvn@plt>
   3b324:	ldr	x0, [sp, #112]
   3b328:	ldr	w0, [x0, #12]
   3b32c:	orr	w1, w0, #0x20000000
   3b330:	ldr	x0, [sp, #112]
   3b334:	str	w1, [x0, #12]
   3b338:	ldr	x0, [sp, #56]
   3b33c:	bl	38ce0 <Perl_safesysfree@plt>
   3b340:	ldr	x0, [sp, #112]
   3b344:	str	x0, [sp, #136]
   3b348:	ldr	x1, [sp, #136]
   3b34c:	ldr	x0, [sp, #40]
   3b350:	bl	38cb0 <Perl_sv_2mortal@plt>
   3b354:	str	x0, [sp, #136]
   3b358:	ldr	x0, [sp, #40]
   3b35c:	ldr	x1, [x0, #24]
   3b360:	ldrsw	x0, [sp, #48]
   3b364:	lsl	x0, x0, #3
   3b368:	add	x0, x1, x0
   3b36c:	ldr	x1, [sp, #136]
   3b370:	str	x1, [x0]
   3b374:	mov	x0, #0x1                   	// #1
   3b378:	str	x0, [sp, #144]
   3b37c:	ldr	x0, [sp, #40]
   3b380:	ldr	x1, [x0, #24]
   3b384:	ldrsw	x2, [sp, #48]
   3b388:	ldr	x0, [sp, #144]
   3b38c:	add	x0, x2, x0
   3b390:	lsl	x0, x0, #3
   3b394:	sub	x0, x0, #0x8
   3b398:	add	x1, x1, x0
   3b39c:	ldr	x0, [sp, #40]
   3b3a0:	str	x1, [x0]
   3b3a4:	nop
   3b3a8:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3b3ac:	ldr	x0, [x0, #4040]
   3b3b0:	ldr	x1, [sp, #152]
   3b3b4:	ldr	x0, [x0]
   3b3b8:	eor	x0, x1, x0
   3b3bc:	cmp	x0, #0x0
   3b3c0:	b.eq	3b3c8 <XS_Unicode__Normalize_decompose+0x41c>  // b.none
   3b3c4:	bl	38c20 <__stack_chk_fail@plt>
   3b3c8:	ldr	x19, [sp, #16]
   3b3cc:	ldp	x29, x30, [sp], #160
   3b3d0:	ret

000000000003b3d4 <XS_Unicode__Normalize_reorder>:
   3b3d4:	stp	x29, x30, [sp, #-144]!
   3b3d8:	mov	x29, sp
   3b3dc:	str	x0, [sp, #24]
   3b3e0:	str	x1, [sp, #16]
   3b3e4:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3b3e8:	ldr	x0, [x0, #4040]
   3b3ec:	ldr	x1, [x0]
   3b3f0:	str	x1, [sp, #136]
   3b3f4:	mov	x1, #0x0                   	// #0
   3b3f8:	ldr	x0, [sp, #24]
   3b3fc:	ldr	x0, [x0]
   3b400:	str	x0, [sp, #64]
   3b404:	ldr	x0, [sp, #24]
   3b408:	bl	38f10 <S_POPMARK>
   3b40c:	str	w0, [sp, #40]
   3b410:	ldr	x0, [sp, #24]
   3b414:	ldr	x1, [x0, #24]
   3b418:	ldr	w0, [sp, #40]
   3b41c:	add	w2, w0, #0x1
   3b420:	str	w2, [sp, #40]
   3b424:	sxtw	x0, w0
   3b428:	lsl	x0, x0, #3
   3b42c:	add	x0, x1, x0
   3b430:	str	x0, [sp, #72]
   3b434:	ldr	x1, [sp, #64]
   3b438:	ldr	x0, [sp, #72]
   3b43c:	sub	x0, x1, x0
   3b440:	asr	x0, x0, #3
   3b444:	str	w0, [sp, #44]
   3b448:	ldr	w0, [sp, #44]
   3b44c:	cmp	w0, #0x1
   3b450:	b.eq	3b464 <XS_Unicode__Normalize_reorder+0x90>  // b.none
   3b454:	adrp	x0, 45000 <_fini+0x6bac>
   3b458:	add	x1, x0, #0xd88
   3b45c:	ldr	x0, [sp, #16]
   3b460:	bl	38c40 <Perl_croak_xs_usage@plt>
   3b464:	ldr	x0, [sp, #24]
   3b468:	ldr	x1, [x0, #24]
   3b46c:	ldrsw	x0, [sp, #40]
   3b470:	lsl	x0, x0, #3
   3b474:	add	x0, x1, x0
   3b478:	ldr	x0, [x0]
   3b47c:	str	x0, [sp, #80]
   3b480:	add	x0, sp, #0x38
   3b484:	mov	x2, x0
   3b488:	ldr	x1, [sp, #80]
   3b48c:	ldr	x0, [sp, #24]
   3b490:	bl	3a0f4 <sv_2pvunicode>
   3b494:	str	x0, [sp, #88]
   3b498:	mov	x2, #0x0                   	// #0
   3b49c:	adrp	x0, 45000 <_fini+0x6bac>
   3b4a0:	add	x1, x0, #0xd80
   3b4a4:	ldr	x0, [sp, #24]
   3b4a8:	bl	38d60 <Perl_newSVpvn@plt>
   3b4ac:	str	x0, [sp, #96]
   3b4b0:	ldr	x0, [sp, #56]
   3b4b4:	str	x0, [sp, #104]
   3b4b8:	ldr	x0, [sp, #104]
   3b4bc:	add	x0, x0, #0x1
   3b4c0:	bl	38c10 <Perl_safesysmalloc@plt>
   3b4c4:	str	x0, [sp, #48]
   3b4c8:	ldr	x0, [sp, #56]
   3b4cc:	add	x1, sp, #0x30
   3b4d0:	ldr	x4, [sp, #104]
   3b4d4:	mov	x3, x1
   3b4d8:	mov	x2, x0
   3b4dc:	ldr	x1, [sp, #88]
   3b4e0:	ldr	x0, [sp, #24]
   3b4e4:	bl	3a5b4 <pv_utf8_reorder>
   3b4e8:	str	x0, [sp, #112]
   3b4ec:	ldr	x2, [sp, #48]
   3b4f0:	ldr	x0, [sp, #48]
   3b4f4:	ldr	x1, [sp, #112]
   3b4f8:	sub	x0, x1, x0
   3b4fc:	mov	x3, x0
   3b500:	ldr	x1, [sp, #96]
   3b504:	ldr	x0, [sp, #24]
   3b508:	bl	38d20 <Perl_sv_setpvn@plt>
   3b50c:	ldr	x0, [sp, #96]
   3b510:	ldr	w0, [x0, #12]
   3b514:	orr	w1, w0, #0x20000000
   3b518:	ldr	x0, [sp, #96]
   3b51c:	str	w1, [x0, #12]
   3b520:	ldr	x0, [sp, #48]
   3b524:	bl	38ce0 <Perl_safesysfree@plt>
   3b528:	ldr	x0, [sp, #96]
   3b52c:	str	x0, [sp, #120]
   3b530:	ldr	x1, [sp, #120]
   3b534:	ldr	x0, [sp, #24]
   3b538:	bl	38cb0 <Perl_sv_2mortal@plt>
   3b53c:	str	x0, [sp, #120]
   3b540:	ldr	x0, [sp, #24]
   3b544:	ldr	x1, [x0, #24]
   3b548:	ldrsw	x0, [sp, #40]
   3b54c:	lsl	x0, x0, #3
   3b550:	add	x0, x1, x0
   3b554:	ldr	x1, [sp, #120]
   3b558:	str	x1, [x0]
   3b55c:	mov	x0, #0x1                   	// #1
   3b560:	str	x0, [sp, #128]
   3b564:	ldr	x0, [sp, #24]
   3b568:	ldr	x1, [x0, #24]
   3b56c:	ldrsw	x2, [sp, #40]
   3b570:	ldr	x0, [sp, #128]
   3b574:	add	x0, x2, x0
   3b578:	lsl	x0, x0, #3
   3b57c:	sub	x0, x0, #0x8
   3b580:	add	x1, x1, x0
   3b584:	ldr	x0, [sp, #24]
   3b588:	str	x1, [x0]
   3b58c:	nop
   3b590:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3b594:	ldr	x0, [x0, #4040]
   3b598:	ldr	x1, [sp, #136]
   3b59c:	ldr	x0, [x0]
   3b5a0:	eor	x0, x1, x0
   3b5a4:	cmp	x0, #0x0
   3b5a8:	b.eq	3b5b0 <XS_Unicode__Normalize_reorder+0x1dc>  // b.none
   3b5ac:	bl	38c20 <__stack_chk_fail@plt>
   3b5b0:	ldp	x29, x30, [sp], #144
   3b5b4:	ret

000000000003b5b8 <XS_Unicode__Normalize_compose>:
   3b5b8:	stp	x29, x30, [sp, #-160]!
   3b5bc:	mov	x29, sp
   3b5c0:	str	x0, [sp, #24]
   3b5c4:	str	x1, [sp, #16]
   3b5c8:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3b5cc:	ldr	x0, [x0, #4040]
   3b5d0:	ldr	x1, [x0]
   3b5d4:	str	x1, [sp, #152]
   3b5d8:	mov	x1, #0x0                   	// #0
   3b5dc:	ldr	x0, [sp, #24]
   3b5e0:	ldr	x0, [x0]
   3b5e4:	str	x0, [sp, #72]
   3b5e8:	ldr	x0, [sp, #24]
   3b5ec:	bl	38f10 <S_POPMARK>
   3b5f0:	str	w0, [sp, #44]
   3b5f4:	ldr	x0, [sp, #24]
   3b5f8:	ldr	x1, [x0, #24]
   3b5fc:	ldr	w0, [sp, #44]
   3b600:	add	w2, w0, #0x1
   3b604:	str	w2, [sp, #44]
   3b608:	sxtw	x0, w0
   3b60c:	lsl	x0, x0, #3
   3b610:	add	x0, x1, x0
   3b614:	str	x0, [sp, #80]
   3b618:	ldr	x1, [sp, #72]
   3b61c:	ldr	x0, [sp, #80]
   3b620:	sub	x0, x1, x0
   3b624:	asr	x0, x0, #3
   3b628:	str	w0, [sp, #48]
   3b62c:	ldr	x0, [sp, #16]
   3b630:	ldr	x0, [x0]
   3b634:	str	x0, [sp, #88]
   3b638:	ldr	x0, [sp, #88]
   3b63c:	ldr	w0, [x0, #40]
   3b640:	str	w0, [sp, #52]
   3b644:	ldr	w0, [sp, #48]
   3b648:	cmp	w0, #0x1
   3b64c:	b.eq	3b660 <XS_Unicode__Normalize_compose+0xa8>  // b.none
   3b650:	adrp	x0, 45000 <_fini+0x6bac>
   3b654:	add	x1, x0, #0xd88
   3b658:	ldr	x0, [sp, #16]
   3b65c:	bl	38c40 <Perl_croak_xs_usage@plt>
   3b660:	ldr	x0, [sp, #24]
   3b664:	ldr	x1, [x0, #24]
   3b668:	ldrsw	x0, [sp, #44]
   3b66c:	lsl	x0, x0, #3
   3b670:	add	x0, x1, x0
   3b674:	ldr	x0, [x0]
   3b678:	str	x0, [sp, #96]
   3b67c:	add	x0, sp, #0x40
   3b680:	mov	x2, x0
   3b684:	ldr	x1, [sp, #96]
   3b688:	ldr	x0, [sp, #24]
   3b68c:	bl	3a0f4 <sv_2pvunicode>
   3b690:	str	x0, [sp, #104]
   3b694:	mov	x2, #0x0                   	// #0
   3b698:	adrp	x0, 45000 <_fini+0x6bac>
   3b69c:	add	x1, x0, #0xd80
   3b6a0:	ldr	x0, [sp, #24]
   3b6a4:	bl	38d60 <Perl_newSVpvn@plt>
   3b6a8:	str	x0, [sp, #112]
   3b6ac:	ldr	x0, [sp, #64]
   3b6b0:	str	x0, [sp, #120]
   3b6b4:	ldr	x0, [sp, #120]
   3b6b8:	add	x0, x0, #0x1
   3b6bc:	bl	38c10 <Perl_safesysmalloc@plt>
   3b6c0:	str	x0, [sp, #56]
   3b6c4:	ldr	x1, [sp, #64]
   3b6c8:	ldr	w0, [sp, #52]
   3b6cc:	cmp	w0, #0x0
   3b6d0:	cset	w0, ne  // ne = any
   3b6d4:	and	w2, w0, #0xff
   3b6d8:	add	x0, sp, #0x38
   3b6dc:	mov	w5, w2
   3b6e0:	ldr	x4, [sp, #120]
   3b6e4:	mov	x3, x0
   3b6e8:	mov	x2, x1
   3b6ec:	ldr	x1, [sp, #104]
   3b6f0:	ldr	x0, [sp, #24]
   3b6f4:	bl	3aa4c <pv_utf8_compose>
   3b6f8:	str	x0, [sp, #128]
   3b6fc:	ldr	x2, [sp, #56]
   3b700:	ldr	x0, [sp, #56]
   3b704:	ldr	x1, [sp, #128]
   3b708:	sub	x0, x1, x0
   3b70c:	mov	x3, x0
   3b710:	ldr	x1, [sp, #112]
   3b714:	ldr	x0, [sp, #24]
   3b718:	bl	38d20 <Perl_sv_setpvn@plt>
   3b71c:	ldr	x0, [sp, #112]
   3b720:	ldr	w0, [x0, #12]
   3b724:	orr	w1, w0, #0x20000000
   3b728:	ldr	x0, [sp, #112]
   3b72c:	str	w1, [x0, #12]
   3b730:	ldr	x0, [sp, #56]
   3b734:	bl	38ce0 <Perl_safesysfree@plt>
   3b738:	ldr	x0, [sp, #112]
   3b73c:	str	x0, [sp, #136]
   3b740:	ldr	x1, [sp, #136]
   3b744:	ldr	x0, [sp, #24]
   3b748:	bl	38cb0 <Perl_sv_2mortal@plt>
   3b74c:	str	x0, [sp, #136]
   3b750:	ldr	x0, [sp, #24]
   3b754:	ldr	x1, [x0, #24]
   3b758:	ldrsw	x0, [sp, #44]
   3b75c:	lsl	x0, x0, #3
   3b760:	add	x0, x1, x0
   3b764:	ldr	x1, [sp, #136]
   3b768:	str	x1, [x0]
   3b76c:	mov	x0, #0x1                   	// #1
   3b770:	str	x0, [sp, #144]
   3b774:	ldr	x0, [sp, #24]
   3b778:	ldr	x1, [x0, #24]
   3b77c:	ldrsw	x2, [sp, #44]
   3b780:	ldr	x0, [sp, #144]
   3b784:	add	x0, x2, x0
   3b788:	lsl	x0, x0, #3
   3b78c:	sub	x0, x0, #0x8
   3b790:	add	x1, x1, x0
   3b794:	ldr	x0, [sp, #24]
   3b798:	str	x1, [x0]
   3b79c:	nop
   3b7a0:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3b7a4:	ldr	x0, [x0, #4040]
   3b7a8:	ldr	x1, [sp, #152]
   3b7ac:	ldr	x0, [x0]
   3b7b0:	eor	x0, x1, x0
   3b7b4:	cmp	x0, #0x0
   3b7b8:	b.eq	3b7c0 <XS_Unicode__Normalize_compose+0x208>  // b.none
   3b7bc:	bl	38c20 <__stack_chk_fail@plt>
   3b7c0:	ldp	x29, x30, [sp], #160
   3b7c4:	ret

000000000003b7c8 <XS_Unicode__Normalize_NFD>:
   3b7c8:	stp	x29, x30, [sp, #-176]!
   3b7cc:	mov	x29, sp
   3b7d0:	str	x0, [sp, #24]
   3b7d4:	str	x1, [sp, #16]
   3b7d8:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3b7dc:	ldr	x0, [x0, #4040]
   3b7e0:	ldr	x1, [x0]
   3b7e4:	str	x1, [sp, #168]
   3b7e8:	mov	x1, #0x0                   	// #0
   3b7ec:	ldr	x0, [sp, #24]
   3b7f0:	ldr	x0, [x0]
   3b7f4:	str	x0, [sp, #72]
   3b7f8:	ldr	x0, [sp, #24]
   3b7fc:	bl	38f10 <S_POPMARK>
   3b800:	str	w0, [sp, #36]
   3b804:	ldr	x0, [sp, #24]
   3b808:	ldr	x1, [x0, #24]
   3b80c:	ldr	w0, [sp, #36]
   3b810:	add	w2, w0, #0x1
   3b814:	str	w2, [sp, #36]
   3b818:	sxtw	x0, w0
   3b81c:	lsl	x0, x0, #3
   3b820:	add	x0, x1, x0
   3b824:	str	x0, [sp, #80]
   3b828:	ldr	x1, [sp, #72]
   3b82c:	ldr	x0, [sp, #80]
   3b830:	sub	x0, x1, x0
   3b834:	asr	x0, x0, #3
   3b838:	str	w0, [sp, #40]
   3b83c:	ldr	x0, [sp, #16]
   3b840:	ldr	x0, [x0]
   3b844:	str	x0, [sp, #88]
   3b848:	ldr	x0, [sp, #88]
   3b84c:	ldr	w0, [x0, #40]
   3b850:	str	w0, [sp, #44]
   3b854:	ldr	w0, [sp, #40]
   3b858:	cmp	w0, #0x1
   3b85c:	b.eq	3b870 <XS_Unicode__Normalize_NFD+0xa8>  // b.none
   3b860:	adrp	x0, 45000 <_fini+0x6bac>
   3b864:	add	x1, x0, #0xd88
   3b868:	ldr	x0, [sp, #16]
   3b86c:	bl	38c40 <Perl_croak_xs_usage@plt>
   3b870:	ldr	x0, [sp, #24]
   3b874:	ldr	x1, [x0, #24]
   3b878:	ldrsw	x0, [sp, #36]
   3b87c:	lsl	x0, x0, #3
   3b880:	add	x0, x1, x0
   3b884:	ldr	x0, [x0]
   3b888:	str	x0, [sp, #96]
   3b88c:	add	x0, sp, #0x40
   3b890:	mov	x2, x0
   3b894:	ldr	x1, [sp, #96]
   3b898:	ldr	x0, [sp, #24]
   3b89c:	bl	3a0f4 <sv_2pvunicode>
   3b8a0:	str	x0, [sp, #104]
   3b8a4:	ldr	x0, [sp, #64]
   3b8a8:	str	x0, [sp, #112]
   3b8ac:	ldr	x0, [sp, #112]
   3b8b0:	add	x0, x0, #0x1
   3b8b4:	bl	38c10 <Perl_safesysmalloc@plt>
   3b8b8:	str	x0, [sp, #48]
   3b8bc:	ldr	x1, [sp, #64]
   3b8c0:	ldr	w0, [sp, #44]
   3b8c4:	cmp	w0, #0x1
   3b8c8:	cset	w0, eq  // eq = none
   3b8cc:	and	w2, w0, #0xff
   3b8d0:	add	x0, sp, #0x30
   3b8d4:	mov	w5, w2
   3b8d8:	ldr	x4, [sp, #112]
   3b8dc:	mov	x3, x0
   3b8e0:	mov	x2, x1
   3b8e4:	ldr	x1, [sp, #104]
   3b8e8:	ldr	x0, [sp, #24]
   3b8ec:	bl	3a2c4 <pv_utf8_decompose>
   3b8f0:	str	x0, [sp, #120]
   3b8f4:	ldr	x0, [sp, #120]
   3b8f8:	strb	wzr, [x0]
   3b8fc:	ldr	x0, [sp, #48]
   3b900:	ldr	x1, [sp, #120]
   3b904:	sub	x0, x1, x0
   3b908:	str	x0, [sp, #112]
   3b90c:	ldr	x0, [sp, #112]
   3b910:	str	x0, [sp, #128]
   3b914:	ldr	x0, [sp, #128]
   3b918:	add	x0, x0, #0x1
   3b91c:	bl	38c10 <Perl_safesysmalloc@plt>
   3b920:	str	x0, [sp, #56]
   3b924:	ldr	x0, [sp, #48]
   3b928:	add	x1, sp, #0x38
   3b92c:	ldr	x4, [sp, #128]
   3b930:	mov	x3, x1
   3b934:	ldr	x2, [sp, #112]
   3b938:	mov	x1, x0
   3b93c:	ldr	x0, [sp, #24]
   3b940:	bl	3a5b4 <pv_utf8_reorder>
   3b944:	str	x0, [sp, #136]
   3b948:	ldr	x0, [sp, #136]
   3b94c:	strb	wzr, [x0]
   3b950:	ldr	x0, [sp, #56]
   3b954:	ldr	x1, [sp, #136]
   3b958:	sub	x0, x1, x0
   3b95c:	str	x0, [sp, #128]
   3b960:	mov	x2, #0x0                   	// #0
   3b964:	adrp	x0, 45000 <_fini+0x6bac>
   3b968:	add	x1, x0, #0xd80
   3b96c:	ldr	x0, [sp, #24]
   3b970:	bl	38d60 <Perl_newSVpvn@plt>
   3b974:	str	x0, [sp, #144]
   3b978:	ldr	x0, [sp, #56]
   3b97c:	ldr	x3, [sp, #128]
   3b980:	mov	x2, x0
   3b984:	ldr	x1, [sp, #144]
   3b988:	ldr	x0, [sp, #24]
   3b98c:	bl	38d20 <Perl_sv_setpvn@plt>
   3b990:	ldr	x0, [sp, #144]
   3b994:	ldr	w0, [x0, #12]
   3b998:	orr	w1, w0, #0x20000000
   3b99c:	ldr	x0, [sp, #144]
   3b9a0:	str	w1, [x0, #12]
   3b9a4:	ldr	x0, [sp, #48]
   3b9a8:	bl	38ce0 <Perl_safesysfree@plt>
   3b9ac:	ldr	x0, [sp, #56]
   3b9b0:	bl	38ce0 <Perl_safesysfree@plt>
   3b9b4:	ldr	x0, [sp, #144]
   3b9b8:	str	x0, [sp, #152]
   3b9bc:	ldr	x1, [sp, #152]
   3b9c0:	ldr	x0, [sp, #24]
   3b9c4:	bl	38cb0 <Perl_sv_2mortal@plt>
   3b9c8:	str	x0, [sp, #152]
   3b9cc:	ldr	x0, [sp, #24]
   3b9d0:	ldr	x1, [x0, #24]
   3b9d4:	ldrsw	x0, [sp, #36]
   3b9d8:	lsl	x0, x0, #3
   3b9dc:	add	x0, x1, x0
   3b9e0:	ldr	x1, [sp, #152]
   3b9e4:	str	x1, [x0]
   3b9e8:	mov	x0, #0x1                   	// #1
   3b9ec:	str	x0, [sp, #160]
   3b9f0:	ldr	x0, [sp, #24]
   3b9f4:	ldr	x1, [x0, #24]
   3b9f8:	ldrsw	x2, [sp, #36]
   3b9fc:	ldr	x0, [sp, #160]
   3ba00:	add	x0, x2, x0
   3ba04:	lsl	x0, x0, #3
   3ba08:	sub	x0, x0, #0x8
   3ba0c:	add	x1, x1, x0
   3ba10:	ldr	x0, [sp, #24]
   3ba14:	str	x1, [x0]
   3ba18:	nop
   3ba1c:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3ba20:	ldr	x0, [x0, #4040]
   3ba24:	ldr	x1, [sp, #168]
   3ba28:	ldr	x0, [x0]
   3ba2c:	eor	x0, x1, x0
   3ba30:	cmp	x0, #0x0
   3ba34:	b.eq	3ba3c <XS_Unicode__Normalize_NFD+0x274>  // b.none
   3ba38:	bl	38c20 <__stack_chk_fail@plt>
   3ba3c:	ldp	x29, x30, [sp], #176
   3ba40:	ret

000000000003ba44 <XS_Unicode__Normalize_NFC>:
   3ba44:	stp	x29, x30, [sp, #-208]!
   3ba48:	mov	x29, sp
   3ba4c:	str	x0, [sp, #24]
   3ba50:	str	x1, [sp, #16]
   3ba54:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3ba58:	ldr	x0, [x0, #4040]
   3ba5c:	ldr	x1, [x0]
   3ba60:	str	x1, [sp, #200]
   3ba64:	mov	x1, #0x0                   	// #0
   3ba68:	ldr	x0, [sp, #24]
   3ba6c:	ldr	x0, [x0]
   3ba70:	str	x0, [sp, #88]
   3ba74:	ldr	x0, [sp, #24]
   3ba78:	bl	38f10 <S_POPMARK>
   3ba7c:	str	w0, [sp, #44]
   3ba80:	ldr	x0, [sp, #24]
   3ba84:	ldr	x1, [x0, #24]
   3ba88:	ldr	w0, [sp, #44]
   3ba8c:	add	w2, w0, #0x1
   3ba90:	str	w2, [sp, #44]
   3ba94:	sxtw	x0, w0
   3ba98:	lsl	x0, x0, #3
   3ba9c:	add	x0, x1, x0
   3baa0:	str	x0, [sp, #96]
   3baa4:	ldr	x1, [sp, #88]
   3baa8:	ldr	x0, [sp, #96]
   3baac:	sub	x0, x1, x0
   3bab0:	asr	x0, x0, #3
   3bab4:	str	w0, [sp, #48]
   3bab8:	ldr	x0, [sp, #16]
   3babc:	ldr	x0, [x0]
   3bac0:	str	x0, [sp, #104]
   3bac4:	ldr	x0, [sp, #104]
   3bac8:	ldr	w0, [x0, #40]
   3bacc:	str	w0, [sp, #52]
   3bad0:	ldr	w0, [sp, #48]
   3bad4:	cmp	w0, #0x1
   3bad8:	b.eq	3baec <XS_Unicode__Normalize_NFC+0xa8>  // b.none
   3badc:	adrp	x0, 45000 <_fini+0x6bac>
   3bae0:	add	x1, x0, #0xd88
   3bae4:	ldr	x0, [sp, #16]
   3bae8:	bl	38c40 <Perl_croak_xs_usage@plt>
   3baec:	ldr	x0, [sp, #24]
   3baf0:	ldr	x1, [x0, #24]
   3baf4:	ldrsw	x0, [sp, #44]
   3baf8:	lsl	x0, x0, #3
   3bafc:	add	x0, x1, x0
   3bb00:	ldr	x0, [x0]
   3bb04:	str	x0, [sp, #112]
   3bb08:	add	x0, sp, #0x50
   3bb0c:	mov	x2, x0
   3bb10:	ldr	x1, [sp, #112]
   3bb14:	ldr	x0, [sp, #24]
   3bb18:	bl	3a0f4 <sv_2pvunicode>
   3bb1c:	str	x0, [sp, #120]
   3bb20:	ldr	x0, [sp, #80]
   3bb24:	str	x0, [sp, #128]
   3bb28:	ldr	x0, [sp, #128]
   3bb2c:	add	x0, x0, #0x1
   3bb30:	bl	38c10 <Perl_safesysmalloc@plt>
   3bb34:	str	x0, [sp, #56]
   3bb38:	ldr	x1, [sp, #80]
   3bb3c:	ldr	w0, [sp, #52]
   3bb40:	cmp	w0, #0x1
   3bb44:	cset	w0, eq  // eq = none
   3bb48:	and	w2, w0, #0xff
   3bb4c:	add	x0, sp, #0x38
   3bb50:	mov	w5, w2
   3bb54:	ldr	x4, [sp, #128]
   3bb58:	mov	x3, x0
   3bb5c:	mov	x2, x1
   3bb60:	ldr	x1, [sp, #120]
   3bb64:	ldr	x0, [sp, #24]
   3bb68:	bl	3a2c4 <pv_utf8_decompose>
   3bb6c:	str	x0, [sp, #136]
   3bb70:	ldr	x0, [sp, #136]
   3bb74:	strb	wzr, [x0]
   3bb78:	ldr	x0, [sp, #56]
   3bb7c:	ldr	x1, [sp, #136]
   3bb80:	sub	x0, x1, x0
   3bb84:	str	x0, [sp, #128]
   3bb88:	ldr	x0, [sp, #128]
   3bb8c:	str	x0, [sp, #144]
   3bb90:	ldr	x0, [sp, #144]
   3bb94:	add	x0, x0, #0x1
   3bb98:	bl	38c10 <Perl_safesysmalloc@plt>
   3bb9c:	str	x0, [sp, #64]
   3bba0:	ldr	x0, [sp, #56]
   3bba4:	add	x1, sp, #0x40
   3bba8:	ldr	x4, [sp, #144]
   3bbac:	mov	x3, x1
   3bbb0:	ldr	x2, [sp, #128]
   3bbb4:	mov	x1, x0
   3bbb8:	ldr	x0, [sp, #24]
   3bbbc:	bl	3a5b4 <pv_utf8_reorder>
   3bbc0:	str	x0, [sp, #152]
   3bbc4:	ldr	x0, [sp, #152]
   3bbc8:	strb	wzr, [x0]
   3bbcc:	ldr	x0, [sp, #64]
   3bbd0:	ldr	x1, [sp, #152]
   3bbd4:	sub	x0, x1, x0
   3bbd8:	str	x0, [sp, #144]
   3bbdc:	ldr	x0, [sp, #144]
   3bbe0:	str	x0, [sp, #160]
   3bbe4:	ldr	x0, [sp, #160]
   3bbe8:	add	x0, x0, #0x1
   3bbec:	bl	38c10 <Perl_safesysmalloc@plt>
   3bbf0:	str	x0, [sp, #72]
   3bbf4:	ldr	x1, [sp, #64]
   3bbf8:	ldr	w0, [sp, #52]
   3bbfc:	cmp	w0, #0x2
   3bc00:	cset	w0, eq  // eq = none
   3bc04:	and	w2, w0, #0xff
   3bc08:	add	x0, sp, #0x48
   3bc0c:	mov	w5, w2
   3bc10:	ldr	x4, [sp, #160]
   3bc14:	mov	x3, x0
   3bc18:	ldr	x2, [sp, #144]
   3bc1c:	ldr	x0, [sp, #24]
   3bc20:	bl	3aa4c <pv_utf8_compose>
   3bc24:	str	x0, [sp, #168]
   3bc28:	ldr	x0, [sp, #168]
   3bc2c:	strb	wzr, [x0]
   3bc30:	ldr	x0, [sp, #72]
   3bc34:	ldr	x1, [sp, #168]
   3bc38:	sub	x0, x1, x0
   3bc3c:	str	x0, [sp, #160]
   3bc40:	mov	x2, #0x0                   	// #0
   3bc44:	adrp	x0, 45000 <_fini+0x6bac>
   3bc48:	add	x1, x0, #0xd80
   3bc4c:	ldr	x0, [sp, #24]
   3bc50:	bl	38d60 <Perl_newSVpvn@plt>
   3bc54:	str	x0, [sp, #176]
   3bc58:	ldr	x0, [sp, #72]
   3bc5c:	ldr	x3, [sp, #160]
   3bc60:	mov	x2, x0
   3bc64:	ldr	x1, [sp, #176]
   3bc68:	ldr	x0, [sp, #24]
   3bc6c:	bl	38d20 <Perl_sv_setpvn@plt>
   3bc70:	ldr	x0, [sp, #176]
   3bc74:	ldr	w0, [x0, #12]
   3bc78:	orr	w1, w0, #0x20000000
   3bc7c:	ldr	x0, [sp, #176]
   3bc80:	str	w1, [x0, #12]
   3bc84:	ldr	x0, [sp, #56]
   3bc88:	bl	38ce0 <Perl_safesysfree@plt>
   3bc8c:	ldr	x0, [sp, #64]
   3bc90:	bl	38ce0 <Perl_safesysfree@plt>
   3bc94:	ldr	x0, [sp, #72]
   3bc98:	bl	38ce0 <Perl_safesysfree@plt>
   3bc9c:	ldr	x0, [sp, #176]
   3bca0:	str	x0, [sp, #184]
   3bca4:	ldr	x1, [sp, #184]
   3bca8:	ldr	x0, [sp, #24]
   3bcac:	bl	38cb0 <Perl_sv_2mortal@plt>
   3bcb0:	str	x0, [sp, #184]
   3bcb4:	ldr	x0, [sp, #24]
   3bcb8:	ldr	x1, [x0, #24]
   3bcbc:	ldrsw	x0, [sp, #44]
   3bcc0:	lsl	x0, x0, #3
   3bcc4:	add	x0, x1, x0
   3bcc8:	ldr	x1, [sp, #184]
   3bccc:	str	x1, [x0]
   3bcd0:	mov	x0, #0x1                   	// #1
   3bcd4:	str	x0, [sp, #192]
   3bcd8:	ldr	x0, [sp, #24]
   3bcdc:	ldr	x1, [x0, #24]
   3bce0:	ldrsw	x2, [sp, #44]
   3bce4:	ldr	x0, [sp, #192]
   3bce8:	add	x0, x2, x0
   3bcec:	lsl	x0, x0, #3
   3bcf0:	sub	x0, x0, #0x8
   3bcf4:	add	x1, x1, x0
   3bcf8:	ldr	x0, [sp, #24]
   3bcfc:	str	x1, [x0]
   3bd00:	nop
   3bd04:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3bd08:	ldr	x0, [x0, #4040]
   3bd0c:	ldr	x1, [sp, #200]
   3bd10:	ldr	x0, [x0]
   3bd14:	eor	x0, x1, x0
   3bd18:	cmp	x0, #0x0
   3bd1c:	b.eq	3bd24 <XS_Unicode__Normalize_NFC+0x2e0>  // b.none
   3bd20:	bl	38c20 <__stack_chk_fail@plt>
   3bd24:	ldp	x29, x30, [sp], #208
   3bd28:	ret

000000000003bd2c <XS_Unicode__Normalize_checkNFD>:
   3bd2c:	stp	x29, x30, [sp, #-160]!
   3bd30:	mov	x29, sp
   3bd34:	str	x0, [sp, #24]
   3bd38:	str	x1, [sp, #16]
   3bd3c:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3bd40:	ldr	x0, [x0, #4040]
   3bd44:	ldr	x1, [x0]
   3bd48:	str	x1, [sp, #152]
   3bd4c:	mov	x1, #0x0                   	// #0
   3bd50:	ldr	x0, [sp, #24]
   3bd54:	ldr	x0, [x0]
   3bd58:	str	x0, [sp, #80]
   3bd5c:	ldr	x0, [sp, #24]
   3bd60:	bl	38f10 <S_POPMARK>
   3bd64:	str	w0, [sp, #44]
   3bd68:	ldr	x0, [sp, #24]
   3bd6c:	ldr	x1, [x0, #24]
   3bd70:	ldr	w0, [sp, #44]
   3bd74:	add	w2, w0, #0x1
   3bd78:	str	w2, [sp, #44]
   3bd7c:	sxtw	x0, w0
   3bd80:	lsl	x0, x0, #3
   3bd84:	add	x0, x1, x0
   3bd88:	str	x0, [sp, #88]
   3bd8c:	ldr	x1, [sp, #80]
   3bd90:	ldr	x0, [sp, #88]
   3bd94:	sub	x0, x1, x0
   3bd98:	asr	x0, x0, #3
   3bd9c:	str	w0, [sp, #48]
   3bda0:	ldr	x0, [sp, #16]
   3bda4:	ldr	x0, [x0]
   3bda8:	str	x0, [sp, #96]
   3bdac:	ldr	x0, [sp, #96]
   3bdb0:	ldr	w0, [x0, #40]
   3bdb4:	str	w0, [sp, #52]
   3bdb8:	ldr	w0, [sp, #48]
   3bdbc:	cmp	w0, #0x1
   3bdc0:	b.eq	3bdd4 <XS_Unicode__Normalize_checkNFD+0xa8>  // b.none
   3bdc4:	adrp	x0, 45000 <_fini+0x6bac>
   3bdc8:	add	x1, x0, #0xd88
   3bdcc:	ldr	x0, [sp, #16]
   3bdd0:	bl	38c40 <Perl_croak_xs_usage@plt>
   3bdd4:	ldr	x0, [sp, #24]
   3bdd8:	ldr	x1, [x0, #24]
   3bddc:	ldrsw	x0, [sp, #44]
   3bde0:	lsl	x0, x0, #3
   3bde4:	add	x0, x1, x0
   3bde8:	ldr	x0, [x0]
   3bdec:	str	x0, [sp, #104]
   3bdf0:	mov	w0, #0x1                   	// #1
   3bdf4:	strb	w0, [sp, #42]
   3bdf8:	add	x0, sp, #0x38
   3bdfc:	mov	x2, x0
   3be00:	ldr	x1, [sp, #104]
   3be04:	ldr	x0, [sp, #24]
   3be08:	bl	3a0f4 <sv_2pvunicode>
   3be0c:	str	x0, [sp, #112]
   3be10:	ldr	x0, [sp, #56]
   3be14:	ldr	x1, [sp, #112]
   3be18:	add	x0, x1, x0
   3be1c:	str	x0, [sp, #120]
   3be20:	strb	wzr, [sp, #41]
   3be24:	ldr	x0, [sp, #112]
   3be28:	str	x0, [sp, #72]
   3be2c:	b	3bf20 <XS_Unicode__Normalize_checkNFD+0x1f4>
   3be30:	ldr	x1, [sp, #120]
   3be34:	ldr	x0, [sp, #72]
   3be38:	sub	x0, x1, x0
   3be3c:	mov	x1, x0
   3be40:	add	x0, sp, #0x40
   3be44:	mov	x5, #0x0                   	// #0
   3be48:	mov	x4, #0x0                   	// #0
   3be4c:	mov	w3, #0x0                   	// #0
   3be50:	mov	x2, x0
   3be54:	ldr	x0, [sp, #72]
   3be58:	bl	39004 <S_utf8n_to_uvchr_msgs>
   3be5c:	str	x0, [sp, #128]
   3be60:	ldr	x0, [sp, #64]
   3be64:	cmp	x0, #0x0
   3be68:	b.ne	3be80 <XS_Unicode__Normalize_checkNFD+0x154>  // b.any
   3be6c:	adrp	x0, 45000 <_fini+0x6bac>
   3be70:	add	x1, x0, #0xd90
   3be74:	adrp	x0, 45000 <_fini+0x6bac>
   3be78:	add	x0, x0, #0xd20
   3be7c:	bl	38c70 <Perl_croak_nocontext@plt>
   3be80:	ldr	x0, [sp, #128]
   3be84:	bl	39ed4 <getCombinClass>
   3be88:	strb	w0, [sp, #43]
   3be8c:	ldrb	w1, [sp, #41]
   3be90:	ldrb	w0, [sp, #43]
   3be94:	cmp	w1, w0
   3be98:	b.ls	3beb0 <XS_Unicode__Normalize_checkNFD+0x184>  // b.plast
   3be9c:	ldrb	w0, [sp, #43]
   3bea0:	cmp	w0, #0x0
   3bea4:	b.eq	3beb0 <XS_Unicode__Normalize_checkNFD+0x184>  // b.none
   3bea8:	strb	wzr, [sp, #42]
   3beac:	b	3bf30 <XS_Unicode__Normalize_checkNFD+0x204>
   3beb0:	ldr	x1, [sp, #128]
   3beb4:	mov	x0, #0xabff                	// #44031
   3beb8:	cmp	x1, x0
   3bebc:	b.ls	3bed0 <XS_Unicode__Normalize_checkNFD+0x1a4>  // b.plast
   3bec0:	ldr	x1, [sp, #128]
   3bec4:	mov	x0, #0xd7a3                	// #55203
   3bec8:	cmp	x1, x0
   3becc:	b.ls	3bf00 <XS_Unicode__Normalize_checkNFD+0x1d4>  // b.plast
   3bed0:	ldr	w0, [sp, #52]
   3bed4:	cmp	w0, #0x0
   3bed8:	b.eq	3bef0 <XS_Unicode__Normalize_checkNFD+0x1c4>  // b.none
   3bedc:	ldr	x0, [sp, #128]
   3bee0:	bl	39bcc <dec_compat>
   3bee4:	cmp	x0, #0x0
   3bee8:	b.ne	3bf00 <XS_Unicode__Normalize_checkNFD+0x1d4>  // b.any
   3beec:	b	3bf08 <XS_Unicode__Normalize_checkNFD+0x1dc>
   3bef0:	ldr	x0, [sp, #128]
   3bef4:	bl	39b2c <dec_canonical>
   3bef8:	cmp	x0, #0x0
   3befc:	b.eq	3bf08 <XS_Unicode__Normalize_checkNFD+0x1dc>  // b.none
   3bf00:	strb	wzr, [sp, #42]
   3bf04:	b	3bf30 <XS_Unicode__Normalize_checkNFD+0x204>
   3bf08:	ldrb	w0, [sp, #43]
   3bf0c:	strb	w0, [sp, #41]
   3bf10:	ldr	x0, [sp, #64]
   3bf14:	ldr	x1, [sp, #72]
   3bf18:	add	x0, x1, x0
   3bf1c:	str	x0, [sp, #72]
   3bf20:	ldr	x1, [sp, #72]
   3bf24:	ldr	x0, [sp, #120]
   3bf28:	cmp	x1, x0
   3bf2c:	b.cc	3be30 <XS_Unicode__Normalize_checkNFD+0x104>  // b.lo, b.ul, b.last
   3bf30:	ldrb	w0, [sp, #42]
   3bf34:	cmp	w0, #0x0
   3bf38:	b.eq	3bf48 <XS_Unicode__Normalize_checkNFD+0x21c>  // b.none
   3bf3c:	ldr	x0, [sp, #24]
   3bf40:	add	x0, x0, #0x138
   3bf44:	b	3bf50 <XS_Unicode__Normalize_checkNFD+0x224>
   3bf48:	ldr	x0, [sp, #24]
   3bf4c:	add	x0, x0, #0x168
   3bf50:	str	x0, [sp, #136]
   3bf54:	ldr	x1, [sp, #136]
   3bf58:	ldr	x0, [sp, #24]
   3bf5c:	bl	38cb0 <Perl_sv_2mortal@plt>
   3bf60:	str	x0, [sp, #136]
   3bf64:	ldr	x0, [sp, #24]
   3bf68:	ldr	x1, [x0, #24]
   3bf6c:	ldrsw	x0, [sp, #44]
   3bf70:	lsl	x0, x0, #3
   3bf74:	add	x0, x1, x0
   3bf78:	ldr	x1, [sp, #136]
   3bf7c:	str	x1, [x0]
   3bf80:	mov	x0, #0x1                   	// #1
   3bf84:	str	x0, [sp, #144]
   3bf88:	ldr	x0, [sp, #24]
   3bf8c:	ldr	x1, [x0, #24]
   3bf90:	ldrsw	x2, [sp, #44]
   3bf94:	ldr	x0, [sp, #144]
   3bf98:	add	x0, x2, x0
   3bf9c:	lsl	x0, x0, #3
   3bfa0:	sub	x0, x0, #0x8
   3bfa4:	add	x1, x1, x0
   3bfa8:	ldr	x0, [sp, #24]
   3bfac:	str	x1, [x0]
   3bfb0:	nop
   3bfb4:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3bfb8:	ldr	x0, [x0, #4040]
   3bfbc:	ldr	x1, [sp, #152]
   3bfc0:	ldr	x0, [x0]
   3bfc4:	eor	x0, x1, x0
   3bfc8:	cmp	x0, #0x0
   3bfcc:	b.eq	3bfd4 <XS_Unicode__Normalize_checkNFD+0x2a8>  // b.none
   3bfd0:	bl	38c20 <__stack_chk_fail@plt>
   3bfd4:	ldp	x29, x30, [sp], #160
   3bfd8:	ret

000000000003bfdc <XS_Unicode__Normalize_checkNFC>:
   3bfdc:	stp	x29, x30, [sp, #-176]!
   3bfe0:	mov	x29, sp
   3bfe4:	str	x0, [sp, #24]
   3bfe8:	str	x1, [sp, #16]
   3bfec:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3bff0:	ldr	x0, [x0, #4040]
   3bff4:	ldr	x1, [x0]
   3bff8:	str	x1, [sp, #168]
   3bffc:	mov	x1, #0x0                   	// #0
   3c000:	ldr	x0, [sp, #24]
   3c004:	ldr	x0, [x0]
   3c008:	str	x0, [sp, #72]
   3c00c:	ldr	x0, [sp, #24]
   3c010:	bl	38f10 <S_POPMARK>
   3c014:	str	w0, [sp, #36]
   3c018:	ldr	x0, [sp, #24]
   3c01c:	ldr	x1, [x0, #24]
   3c020:	ldr	w0, [sp, #36]
   3c024:	add	w2, w0, #0x1
   3c028:	str	w2, [sp, #36]
   3c02c:	sxtw	x0, w0
   3c030:	lsl	x0, x0, #3
   3c034:	add	x0, x1, x0
   3c038:	str	x0, [sp, #80]
   3c03c:	ldr	x1, [sp, #72]
   3c040:	ldr	x0, [sp, #80]
   3c044:	sub	x0, x1, x0
   3c048:	asr	x0, x0, #3
   3c04c:	str	w0, [sp, #40]
   3c050:	ldr	x0, [sp, #16]
   3c054:	ldr	x0, [x0]
   3c058:	str	x0, [sp, #88]
   3c05c:	ldr	x0, [sp, #88]
   3c060:	ldr	w0, [x0, #40]
   3c064:	str	w0, [sp, #44]
   3c068:	ldr	w0, [sp, #40]
   3c06c:	cmp	w0, #0x1
   3c070:	b.eq	3c084 <XS_Unicode__Normalize_checkNFC+0xa8>  // b.none
   3c074:	adrp	x0, 45000 <_fini+0x6bac>
   3c078:	add	x1, x0, #0xd88
   3c07c:	ldr	x0, [sp, #16]
   3c080:	bl	38c40 <Perl_croak_xs_usage@plt>
   3c084:	ldr	x0, [sp, #24]
   3c088:	ldr	x1, [x0, #24]
   3c08c:	ldrsw	x0, [sp, #36]
   3c090:	lsl	x0, x0, #3
   3c094:	add	x0, x1, x0
   3c098:	ldr	x0, [x0]
   3c09c:	str	x0, [sp, #96]
   3c0a0:	mov	w0, #0x1                   	// #1
   3c0a4:	strb	w0, [sp, #33]
   3c0a8:	strb	wzr, [sp, #34]
   3c0ac:	add	x0, sp, #0x30
   3c0b0:	mov	x2, x0
   3c0b4:	ldr	x1, [sp, #96]
   3c0b8:	ldr	x0, [sp, #24]
   3c0bc:	bl	3a0f4 <sv_2pvunicode>
   3c0c0:	str	x0, [sp, #104]
   3c0c4:	ldr	x0, [sp, #48]
   3c0c8:	ldr	x1, [sp, #104]
   3c0cc:	add	x0, x1, x0
   3c0d0:	str	x0, [sp, #112]
   3c0d4:	strb	wzr, [sp, #32]
   3c0d8:	ldr	x0, [sp, #104]
   3c0dc:	str	x0, [sp, #64]
   3c0e0:	b	3c258 <XS_Unicode__Normalize_checkNFC+0x27c>
   3c0e4:	ldr	x1, [sp, #112]
   3c0e8:	ldr	x0, [sp, #64]
   3c0ec:	sub	x0, x1, x0
   3c0f0:	mov	x1, x0
   3c0f4:	add	x0, sp, #0x38
   3c0f8:	mov	x5, #0x0                   	// #0
   3c0fc:	mov	x4, #0x0                   	// #0
   3c100:	mov	w3, #0x0                   	// #0
   3c104:	mov	x2, x0
   3c108:	ldr	x0, [sp, #64]
   3c10c:	bl	39004 <S_utf8n_to_uvchr_msgs>
   3c110:	str	x0, [sp, #120]
   3c114:	ldr	x0, [sp, #56]
   3c118:	cmp	x0, #0x0
   3c11c:	b.ne	3c134 <XS_Unicode__Normalize_checkNFC+0x158>  // b.any
   3c120:	adrp	x0, 45000 <_fini+0x6bac>
   3c124:	add	x1, x0, #0xda8
   3c128:	adrp	x0, 45000 <_fini+0x6bac>
   3c12c:	add	x0, x0, #0xd20
   3c130:	bl	38c70 <Perl_croak_nocontext@plt>
   3c134:	ldr	x0, [sp, #120]
   3c138:	bl	39ed4 <getCombinClass>
   3c13c:	strb	w0, [sp, #35]
   3c140:	ldrb	w1, [sp, #32]
   3c144:	ldrb	w0, [sp, #35]
   3c148:	cmp	w1, w0
   3c14c:	b.ls	3c164 <XS_Unicode__Normalize_checkNFC+0x188>  // b.plast
   3c150:	ldrb	w0, [sp, #35]
   3c154:	cmp	w0, #0x0
   3c158:	b.eq	3c164 <XS_Unicode__Normalize_checkNFC+0x188>  // b.none
   3c15c:	strb	wzr, [sp, #33]
   3c160:	b	3c268 <XS_Unicode__Normalize_checkNFC+0x28c>
   3c164:	ldr	x1, [sp, #120]
   3c168:	mov	x0, #0xabff                	// #44031
   3c16c:	cmp	x1, x0
   3c170:	b.ls	3c184 <XS_Unicode__Normalize_checkNFC+0x1a8>  // b.plast
   3c174:	ldr	x1, [sp, #120]
   3c178:	mov	x0, #0xd7a3                	// #55203
   3c17c:	cmp	x1, x0
   3c180:	b.ls	3c240 <XS_Unicode__Normalize_checkNFC+0x264>  // b.plast
   3c184:	ldr	x0, [sp, #120]
   3c188:	bl	38d50 <isExclusion@plt>
   3c18c:	and	w0, w0, #0xff
   3c190:	cmp	w0, #0x0
   3c194:	b.ne	3c1c0 <XS_Unicode__Normalize_checkNFC+0x1e4>  // b.any
   3c198:	ldr	x0, [sp, #120]
   3c19c:	bl	38c00 <isSingleton@plt>
   3c1a0:	and	w0, w0, #0xff
   3c1a4:	cmp	w0, #0x0
   3c1a8:	b.ne	3c1c0 <XS_Unicode__Normalize_checkNFC+0x1e4>  // b.any
   3c1ac:	ldr	x0, [sp, #120]
   3c1b0:	bl	38d30 <isNonStDecomp@plt>
   3c1b4:	and	w0, w0, #0xff
   3c1b8:	cmp	w0, #0x0
   3c1bc:	b.eq	3c1c8 <XS_Unicode__Normalize_checkNFC+0x1ec>  // b.none
   3c1c0:	strb	wzr, [sp, #33]
   3c1c4:	b	3c268 <XS_Unicode__Normalize_checkNFC+0x28c>
   3c1c8:	ldr	x0, [sp, #120]
   3c1cc:	bl	38c80 <isComp2nd@plt>
   3c1d0:	and	w0, w0, #0xff
   3c1d4:	cmp	w0, #0x0
   3c1d8:	b.eq	3c1e8 <XS_Unicode__Normalize_checkNFC+0x20c>  // b.none
   3c1dc:	mov	w0, #0x1                   	// #1
   3c1e0:	strb	w0, [sp, #34]
   3c1e4:	b	3c240 <XS_Unicode__Normalize_checkNFC+0x264>
   3c1e8:	ldr	w0, [sp, #44]
   3c1ec:	cmp	w0, #0x0
   3c1f0:	b.eq	3c240 <XS_Unicode__Normalize_checkNFC+0x264>  // b.none
   3c1f4:	ldr	x0, [sp, #120]
   3c1f8:	bl	39b2c <dec_canonical>
   3c1fc:	str	x0, [sp, #128]
   3c200:	ldr	x0, [sp, #120]
   3c204:	bl	39bcc <dec_compat>
   3c208:	str	x0, [sp, #136]
   3c20c:	ldr	x0, [sp, #136]
   3c210:	cmp	x0, #0x0
   3c214:	b.eq	3c240 <XS_Unicode__Normalize_checkNFC+0x264>  // b.none
   3c218:	ldr	x0, [sp, #128]
   3c21c:	cmp	x0, #0x0
   3c220:	b.eq	3c238 <XS_Unicode__Normalize_checkNFC+0x25c>  // b.none
   3c224:	ldr	x1, [sp, #136]
   3c228:	ldr	x0, [sp, #128]
   3c22c:	bl	38c60 <strcmp@plt>
   3c230:	cmp	w0, #0x0
   3c234:	b.eq	3c240 <XS_Unicode__Normalize_checkNFC+0x264>  // b.none
   3c238:	strb	wzr, [sp, #33]
   3c23c:	b	3c268 <XS_Unicode__Normalize_checkNFC+0x28c>
   3c240:	ldrb	w0, [sp, #35]
   3c244:	strb	w0, [sp, #32]
   3c248:	ldr	x0, [sp, #56]
   3c24c:	ldr	x1, [sp, #64]
   3c250:	add	x0, x1, x0
   3c254:	str	x0, [sp, #64]
   3c258:	ldr	x1, [sp, #64]
   3c25c:	ldr	x0, [sp, #112]
   3c260:	cmp	x1, x0
   3c264:	b.cc	3c0e4 <XS_Unicode__Normalize_checkNFC+0x108>  // b.lo, b.ul, b.last
   3c268:	ldrb	w0, [sp, #34]
   3c26c:	cmp	w0, #0x0
   3c270:	b.eq	3c2d4 <XS_Unicode__Normalize_checkNFC+0x2f8>  // b.none
   3c274:	ldrb	w0, [sp, #33]
   3c278:	cmp	w0, #0x0
   3c27c:	b.eq	3c2d4 <XS_Unicode__Normalize_checkNFC+0x2f8>  // b.none
   3c280:	ldr	x0, [sp, #24]
   3c284:	ldr	x1, [x0, #24]
   3c288:	ldrsw	x0, [sp, #36]
   3c28c:	lsl	x0, x0, #3
   3c290:	add	x0, x1, x0
   3c294:	ldr	x1, [sp, #24]
   3c298:	add	x1, x1, #0x150
   3c29c:	str	x1, [x0]
   3c2a0:	mov	x0, #0x1                   	// #1
   3c2a4:	str	x0, [sp, #144]
   3c2a8:	ldr	x0, [sp, #24]
   3c2ac:	ldr	x1, [x0, #24]
   3c2b0:	ldrsw	x2, [sp, #36]
   3c2b4:	ldr	x0, [sp, #144]
   3c2b8:	add	x0, x2, x0
   3c2bc:	lsl	x0, x0, #3
   3c2c0:	sub	x0, x0, #0x8
   3c2c4:	add	x1, x1, x0
   3c2c8:	ldr	x0, [sp, #24]
   3c2cc:	str	x1, [x0]
   3c2d0:	b	3c358 <XS_Unicode__Normalize_checkNFC+0x37c>
   3c2d4:	ldrb	w0, [sp, #33]
   3c2d8:	cmp	w0, #0x0
   3c2dc:	b.eq	3c2ec <XS_Unicode__Normalize_checkNFC+0x310>  // b.none
   3c2e0:	ldr	x0, [sp, #24]
   3c2e4:	add	x0, x0, #0x138
   3c2e8:	b	3c2f4 <XS_Unicode__Normalize_checkNFC+0x318>
   3c2ec:	ldr	x0, [sp, #24]
   3c2f0:	add	x0, x0, #0x168
   3c2f4:	str	x0, [sp, #152]
   3c2f8:	ldr	x1, [sp, #152]
   3c2fc:	ldr	x0, [sp, #24]
   3c300:	bl	38cb0 <Perl_sv_2mortal@plt>
   3c304:	str	x0, [sp, #152]
   3c308:	ldr	x0, [sp, #24]
   3c30c:	ldr	x1, [x0, #24]
   3c310:	ldrsw	x0, [sp, #36]
   3c314:	lsl	x0, x0, #3
   3c318:	add	x0, x1, x0
   3c31c:	ldr	x1, [sp, #152]
   3c320:	str	x1, [x0]
   3c324:	mov	x0, #0x1                   	// #1
   3c328:	str	x0, [sp, #160]
   3c32c:	ldr	x0, [sp, #24]
   3c330:	ldr	x1, [x0, #24]
   3c334:	ldrsw	x2, [sp, #36]
   3c338:	ldr	x0, [sp, #160]
   3c33c:	add	x0, x2, x0
   3c340:	lsl	x0, x0, #3
   3c344:	sub	x0, x0, #0x8
   3c348:	add	x1, x1, x0
   3c34c:	ldr	x0, [sp, #24]
   3c350:	str	x1, [x0]
   3c354:	nop
   3c358:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3c35c:	ldr	x0, [x0, #4040]
   3c360:	ldr	x1, [sp, #168]
   3c364:	ldr	x0, [x0]
   3c368:	eor	x0, x1, x0
   3c36c:	cmp	x0, #0x0
   3c370:	b.eq	3c378 <XS_Unicode__Normalize_checkNFC+0x39c>  // b.none
   3c374:	bl	38c20 <__stack_chk_fail@plt>
   3c378:	ldp	x29, x30, [sp], #176
   3c37c:	ret

000000000003c380 <XS_Unicode__Normalize_checkFCD>:
   3c380:	stp	x29, x30, [sp, #-224]!
   3c384:	mov	x29, sp
   3c388:	str	x0, [sp, #24]
   3c38c:	str	x1, [sp, #16]
   3c390:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3c394:	ldr	x0, [x0, #4040]
   3c398:	ldr	x1, [x0]
   3c39c:	str	x1, [sp, #216]
   3c3a0:	mov	x1, #0x0                   	// #0
   3c3a4:	ldr	x0, [sp, #24]
   3c3a8:	ldr	x0, [x0]
   3c3ac:	str	x0, [sp, #104]
   3c3b0:	ldr	x0, [sp, #24]
   3c3b4:	bl	38f10 <S_POPMARK>
   3c3b8:	str	w0, [sp, #44]
   3c3bc:	ldr	x0, [sp, #24]
   3c3c0:	ldr	x1, [x0, #24]
   3c3c4:	ldr	w0, [sp, #44]
   3c3c8:	add	w2, w0, #0x1
   3c3cc:	str	w2, [sp, #44]
   3c3d0:	sxtw	x0, w0
   3c3d4:	lsl	x0, x0, #3
   3c3d8:	add	x0, x1, x0
   3c3dc:	str	x0, [sp, #112]
   3c3e0:	ldr	x1, [sp, #104]
   3c3e4:	ldr	x0, [sp, #112]
   3c3e8:	sub	x0, x1, x0
   3c3ec:	asr	x0, x0, #3
   3c3f0:	str	w0, [sp, #48]
   3c3f4:	ldr	x0, [sp, #16]
   3c3f8:	ldr	x0, [x0]
   3c3fc:	str	x0, [sp, #120]
   3c400:	ldr	x0, [sp, #120]
   3c404:	ldr	w0, [x0, #40]
   3c408:	str	w0, [sp, #52]
   3c40c:	ldr	w0, [sp, #48]
   3c410:	cmp	w0, #0x1
   3c414:	b.eq	3c428 <XS_Unicode__Normalize_checkFCD+0xa8>  // b.none
   3c418:	adrp	x0, 45000 <_fini+0x6bac>
   3c41c:	add	x1, x0, #0xd88
   3c420:	ldr	x0, [sp, #16]
   3c424:	bl	38c40 <Perl_croak_xs_usage@plt>
   3c428:	ldr	x0, [sp, #24]
   3c42c:	ldr	x1, [x0, #24]
   3c430:	ldrsw	x0, [sp, #44]
   3c434:	lsl	x0, x0, #3
   3c438:	add	x0, x1, x0
   3c43c:	ldr	x0, [x0]
   3c440:	str	x0, [sp, #128]
   3c444:	mov	w0, #0x1                   	// #1
   3c448:	strb	w0, [sp, #41]
   3c44c:	strb	wzr, [sp, #42]
   3c450:	add	x0, sp, #0x38
   3c454:	mov	x2, x0
   3c458:	ldr	x1, [sp, #128]
   3c45c:	ldr	x0, [sp, #24]
   3c460:	bl	3a0f4 <sv_2pvunicode>
   3c464:	str	x0, [sp, #136]
   3c468:	ldr	x0, [sp, #56]
   3c46c:	ldr	x1, [sp, #136]
   3c470:	add	x0, x1, x0
   3c474:	str	x0, [sp, #144]
   3c478:	strb	wzr, [sp, #40]
   3c47c:	ldr	x0, [sp, #136]
   3c480:	str	x0, [sp, #80]
   3c484:	b	3c6a8 <XS_Unicode__Normalize_checkFCD+0x328>
   3c488:	str	xzr, [sp, #96]
   3c48c:	ldr	x1, [sp, #144]
   3c490:	ldr	x0, [sp, #80]
   3c494:	sub	x0, x1, x0
   3c498:	mov	x1, x0
   3c49c:	add	x0, sp, #0x40
   3c4a0:	mov	x5, #0x0                   	// #0
   3c4a4:	mov	x4, #0x0                   	// #0
   3c4a8:	mov	w3, #0x0                   	// #0
   3c4ac:	mov	x2, x0
   3c4b0:	ldr	x0, [sp, #80]
   3c4b4:	bl	39004 <S_utf8n_to_uvchr_msgs>
   3c4b8:	str	x0, [sp, #152]
   3c4bc:	ldr	x0, [sp, #64]
   3c4c0:	cmp	x0, #0x0
   3c4c4:	b.ne	3c4dc <XS_Unicode__Normalize_checkFCD+0x15c>  // b.any
   3c4c8:	adrp	x0, 45000 <_fini+0x6bac>
   3c4cc:	add	x1, x0, #0xdc0
   3c4d0:	adrp	x0, 45000 <_fini+0x6bac>
   3c4d4:	add	x0, x0, #0xd20
   3c4d8:	bl	38c70 <Perl_croak_nocontext@plt>
   3c4dc:	ldr	x0, [sp, #152]
   3c4e0:	bl	39b2c <dec_canonical>
   3c4e4:	str	x0, [sp, #160]
   3c4e8:	ldr	x0, [sp, #160]
   3c4ec:	cmp	x0, #0x0
   3c4f0:	b.eq	3c544 <XS_Unicode__Normalize_checkFCD+0x1c4>  // b.none
   3c4f4:	ldr	x0, [sp, #160]
   3c4f8:	bl	38b70 <strlen@plt>
   3c4fc:	str	x0, [sp, #96]
   3c500:	add	x0, sp, #0x48
   3c504:	mov	x5, #0x0                   	// #0
   3c508:	mov	x4, #0x0                   	// #0
   3c50c:	mov	w3, #0x0                   	// #0
   3c510:	mov	x2, x0
   3c514:	ldr	x1, [sp, #96]
   3c518:	ldr	x0, [sp, #160]
   3c51c:	bl	39004 <S_utf8n_to_uvchr_msgs>
   3c520:	str	x0, [sp, #88]
   3c524:	ldr	x0, [sp, #72]
   3c528:	cmp	x0, #0x0
   3c52c:	b.ne	3c54c <XS_Unicode__Normalize_checkFCD+0x1cc>  // b.any
   3c530:	adrp	x0, 45000 <_fini+0x6bac>
   3c534:	add	x1, x0, #0xdc0
   3c538:	adrp	x0, 45000 <_fini+0x6bac>
   3c53c:	add	x0, x0, #0xd20
   3c540:	bl	38c70 <Perl_croak_nocontext@plt>
   3c544:	ldr	x0, [sp, #152]
   3c548:	str	x0, [sp, #88]
   3c54c:	ldr	x0, [sp, #88]
   3c550:	bl	39ed4 <getCombinClass>
   3c554:	strb	w0, [sp, #43]
   3c558:	ldrb	w0, [sp, #43]
   3c55c:	cmp	w0, #0x0
   3c560:	b.eq	3c57c <XS_Unicode__Normalize_checkFCD+0x1fc>  // b.none
   3c564:	ldrb	w1, [sp, #43]
   3c568:	ldrb	w0, [sp, #40]
   3c56c:	cmp	w1, w0
   3c570:	b.cs	3c57c <XS_Unicode__Normalize_checkFCD+0x1fc>  // b.hs, b.nlast
   3c574:	strb	wzr, [sp, #41]
   3c578:	b	3c6b8 <XS_Unicode__Normalize_checkFCD+0x338>
   3c57c:	ldr	w0, [sp, #52]
   3c580:	cmp	w0, #0x0
   3c584:	b.eq	3c5e8 <XS_Unicode__Normalize_checkFCD+0x268>  // b.none
   3c588:	ldr	x0, [sp, #152]
   3c58c:	bl	38d50 <isExclusion@plt>
   3c590:	and	w0, w0, #0xff
   3c594:	cmp	w0, #0x0
   3c598:	b.ne	3c5c4 <XS_Unicode__Normalize_checkFCD+0x244>  // b.any
   3c59c:	ldr	x0, [sp, #152]
   3c5a0:	bl	38c00 <isSingleton@plt>
   3c5a4:	and	w0, w0, #0xff
   3c5a8:	cmp	w0, #0x0
   3c5ac:	b.ne	3c5c4 <XS_Unicode__Normalize_checkFCD+0x244>  // b.any
   3c5b0:	ldr	x0, [sp, #152]
   3c5b4:	bl	38d30 <isNonStDecomp@plt>
   3c5b8:	and	w0, w0, #0xff
   3c5bc:	cmp	w0, #0x0
   3c5c0:	b.eq	3c5cc <XS_Unicode__Normalize_checkFCD+0x24c>  // b.none
   3c5c4:	strb	wzr, [sp, #41]
   3c5c8:	b	3c6b8 <XS_Unicode__Normalize_checkFCD+0x338>
   3c5cc:	ldr	x0, [sp, #152]
   3c5d0:	bl	38c80 <isComp2nd@plt>
   3c5d4:	and	w0, w0, #0xff
   3c5d8:	cmp	w0, #0x0
   3c5dc:	b.eq	3c5e8 <XS_Unicode__Normalize_checkFCD+0x268>  // b.none
   3c5e0:	mov	w0, #0x1                   	// #1
   3c5e4:	strb	w0, [sp, #42]
   3c5e8:	ldr	x0, [sp, #160]
   3c5ec:	cmp	x0, #0x0
   3c5f0:	b.eq	3c690 <XS_Unicode__Normalize_checkFCD+0x310>  // b.none
   3c5f4:	ldr	x1, [sp, #160]
   3c5f8:	ldr	x0, [sp, #96]
   3c5fc:	add	x0, x1, x0
   3c600:	str	x0, [sp, #168]
   3c604:	mov	x1, #0xffffffffffffffff    	// #-1
   3c608:	ldr	x0, [sp, #168]
   3c60c:	bl	38f54 <Perl_utf8_hop>
   3c610:	str	x0, [sp, #176]
   3c614:	ldr	x1, [sp, #176]
   3c618:	ldr	x0, [sp, #160]
   3c61c:	cmp	x1, x0
   3c620:	b.cs	3c630 <XS_Unicode__Normalize_checkFCD+0x2b0>  // b.hs, b.nlast
   3c624:	adrp	x0, 45000 <_fini+0x6bac>
   3c628:	add	x0, x0, #0xdd8
   3c62c:	bl	38c70 <Perl_croak_nocontext@plt>
   3c630:	ldr	x1, [sp, #168]
   3c634:	ldr	x0, [sp, #176]
   3c638:	sub	x0, x1, x0
   3c63c:	mov	x1, x0
   3c640:	add	x0, sp, #0x48
   3c644:	mov	x5, #0x0                   	// #0
   3c648:	mov	x4, #0x0                   	// #0
   3c64c:	mov	w3, #0x0                   	// #0
   3c650:	mov	x2, x0
   3c654:	ldr	x0, [sp, #176]
   3c658:	bl	39004 <S_utf8n_to_uvchr_msgs>
   3c65c:	str	x0, [sp, #184]
   3c660:	ldr	x0, [sp, #72]
   3c664:	cmp	x0, #0x0
   3c668:	b.ne	3c680 <XS_Unicode__Normalize_checkFCD+0x300>  // b.any
   3c66c:	adrp	x0, 45000 <_fini+0x6bac>
   3c670:	add	x1, x0, #0xdc0
   3c674:	adrp	x0, 45000 <_fini+0x6bac>
   3c678:	add	x0, x0, #0xd20
   3c67c:	bl	38c70 <Perl_croak_nocontext@plt>
   3c680:	ldr	x0, [sp, #184]
   3c684:	bl	39ed4 <getCombinClass>
   3c688:	strb	w0, [sp, #40]
   3c68c:	b	3c698 <XS_Unicode__Normalize_checkFCD+0x318>
   3c690:	ldrb	w0, [sp, #43]
   3c694:	strb	w0, [sp, #40]
   3c698:	ldr	x0, [sp, #64]
   3c69c:	ldr	x1, [sp, #80]
   3c6a0:	add	x0, x1, x0
   3c6a4:	str	x0, [sp, #80]
   3c6a8:	ldr	x1, [sp, #80]
   3c6ac:	ldr	x0, [sp, #144]
   3c6b0:	cmp	x1, x0
   3c6b4:	b.cc	3c488 <XS_Unicode__Normalize_checkFCD+0x108>  // b.lo, b.ul, b.last
   3c6b8:	ldrb	w0, [sp, #42]
   3c6bc:	cmp	w0, #0x0
   3c6c0:	b.eq	3c724 <XS_Unicode__Normalize_checkFCD+0x3a4>  // b.none
   3c6c4:	ldrb	w0, [sp, #41]
   3c6c8:	cmp	w0, #0x0
   3c6cc:	b.eq	3c724 <XS_Unicode__Normalize_checkFCD+0x3a4>  // b.none
   3c6d0:	ldr	x0, [sp, #24]
   3c6d4:	ldr	x1, [x0, #24]
   3c6d8:	ldrsw	x0, [sp, #44]
   3c6dc:	lsl	x0, x0, #3
   3c6e0:	add	x0, x1, x0
   3c6e4:	ldr	x1, [sp, #24]
   3c6e8:	add	x1, x1, #0x150
   3c6ec:	str	x1, [x0]
   3c6f0:	mov	x0, #0x1                   	// #1
   3c6f4:	str	x0, [sp, #192]
   3c6f8:	ldr	x0, [sp, #24]
   3c6fc:	ldr	x1, [x0, #24]
   3c700:	ldrsw	x2, [sp, #44]
   3c704:	ldr	x0, [sp, #192]
   3c708:	add	x0, x2, x0
   3c70c:	lsl	x0, x0, #3
   3c710:	sub	x0, x0, #0x8
   3c714:	add	x1, x1, x0
   3c718:	ldr	x0, [sp, #24]
   3c71c:	str	x1, [x0]
   3c720:	b	3c7a8 <XS_Unicode__Normalize_checkFCD+0x428>
   3c724:	ldrb	w0, [sp, #41]
   3c728:	cmp	w0, #0x0
   3c72c:	b.eq	3c73c <XS_Unicode__Normalize_checkFCD+0x3bc>  // b.none
   3c730:	ldr	x0, [sp, #24]
   3c734:	add	x0, x0, #0x138
   3c738:	b	3c744 <XS_Unicode__Normalize_checkFCD+0x3c4>
   3c73c:	ldr	x0, [sp, #24]
   3c740:	add	x0, x0, #0x168
   3c744:	str	x0, [sp, #200]
   3c748:	ldr	x1, [sp, #200]
   3c74c:	ldr	x0, [sp, #24]
   3c750:	bl	38cb0 <Perl_sv_2mortal@plt>
   3c754:	str	x0, [sp, #200]
   3c758:	ldr	x0, [sp, #24]
   3c75c:	ldr	x1, [x0, #24]
   3c760:	ldrsw	x0, [sp, #44]
   3c764:	lsl	x0, x0, #3
   3c768:	add	x0, x1, x0
   3c76c:	ldr	x1, [sp, #200]
   3c770:	str	x1, [x0]
   3c774:	mov	x0, #0x1                   	// #1
   3c778:	str	x0, [sp, #208]
   3c77c:	ldr	x0, [sp, #24]
   3c780:	ldr	x1, [x0, #24]
   3c784:	ldrsw	x2, [sp, #44]
   3c788:	ldr	x0, [sp, #208]
   3c78c:	add	x0, x2, x0
   3c790:	lsl	x0, x0, #3
   3c794:	sub	x0, x0, #0x8
   3c798:	add	x1, x1, x0
   3c79c:	ldr	x0, [sp, #24]
   3c7a0:	str	x1, [x0]
   3c7a4:	nop
   3c7a8:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3c7ac:	ldr	x0, [x0, #4040]
   3c7b0:	ldr	x1, [sp, #216]
   3c7b4:	ldr	x0, [x0]
   3c7b8:	eor	x0, x1, x0
   3c7bc:	cmp	x0, #0x0
   3c7c0:	b.eq	3c7c8 <XS_Unicode__Normalize_checkFCD+0x448>  // b.none
   3c7c4:	bl	38c20 <__stack_chk_fail@plt>
   3c7c8:	ldp	x29, x30, [sp], #224
   3c7cc:	ret

000000000003c7d0 <XS_Unicode__Normalize_getCombinClass>:
   3c7d0:	stp	x29, x30, [sp, #-96]!
   3c7d4:	mov	x29, sp
   3c7d8:	str	x0, [sp, #24]
   3c7dc:	str	x1, [sp, #16]
   3c7e0:	ldr	x0, [sp, #24]
   3c7e4:	ldr	x0, [x0]
   3c7e8:	str	x0, [sp, #48]
   3c7ec:	ldr	x0, [sp, #24]
   3c7f0:	bl	38f10 <S_POPMARK>
   3c7f4:	str	w0, [sp, #40]
   3c7f8:	ldr	x0, [sp, #24]
   3c7fc:	ldr	x1, [x0, #24]
   3c800:	ldr	w0, [sp, #40]
   3c804:	add	w2, w0, #0x1
   3c808:	str	w2, [sp, #40]
   3c80c:	sxtw	x0, w0
   3c810:	lsl	x0, x0, #3
   3c814:	add	x0, x1, x0
   3c818:	str	x0, [sp, #56]
   3c81c:	ldr	x1, [sp, #48]
   3c820:	ldr	x0, [sp, #56]
   3c824:	sub	x0, x1, x0
   3c828:	asr	x0, x0, #3
   3c82c:	str	w0, [sp, #44]
   3c830:	ldr	w0, [sp, #44]
   3c834:	cmp	w0, #0x1
   3c838:	b.eq	3c84c <XS_Unicode__Normalize_getCombinClass+0x7c>  // b.none
   3c83c:	adrp	x0, 45000 <_fini+0x6bac>
   3c840:	add	x1, x0, #0xe10
   3c844:	ldr	x0, [sp, #16]
   3c848:	bl	38c40 <Perl_croak_xs_usage@plt>
   3c84c:	ldr	x0, [sp, #24]
   3c850:	ldr	x1, [x0, #24]
   3c854:	ldrsw	x0, [sp, #40]
   3c858:	lsl	x0, x0, #3
   3c85c:	add	x0, x1, x0
   3c860:	ldr	x0, [x0]
   3c864:	ldr	w1, [x0, #12]
   3c868:	mov	w0, #0x100                 	// #256
   3c86c:	movk	w0, #0x8020, lsl #16
   3c870:	and	w1, w1, w0
   3c874:	mov	w0, #0x100                 	// #256
   3c878:	movk	w0, #0x8000, lsl #16
   3c87c:	cmp	w1, w0
   3c880:	b.ne	3c8a8 <XS_Unicode__Normalize_getCombinClass+0xd8>  // b.any
   3c884:	ldr	x0, [sp, #24]
   3c888:	ldr	x1, [x0, #24]
   3c88c:	ldrsw	x0, [sp, #40]
   3c890:	lsl	x0, x0, #3
   3c894:	add	x0, x1, x0
   3c898:	ldr	x0, [x0]
   3c89c:	ldr	x0, [x0]
   3c8a0:	ldr	x0, [x0, #32]
   3c8a4:	b	3c8d0 <XS_Unicode__Normalize_getCombinClass+0x100>
   3c8a8:	ldr	x0, [sp, #24]
   3c8ac:	ldr	x1, [x0, #24]
   3c8b0:	ldrsw	x0, [sp, #40]
   3c8b4:	lsl	x0, x0, #3
   3c8b8:	add	x0, x1, x0
   3c8bc:	ldr	x0, [x0]
   3c8c0:	mov	w2, #0x2                   	// #2
   3c8c4:	mov	x1, x0
   3c8c8:	ldr	x0, [sp, #24]
   3c8cc:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3c8d0:	str	x0, [sp, #64]
   3c8d4:	ldr	x0, [sp, #24]
   3c8d8:	ldr	x0, [x0, #8]
   3c8dc:	ldrb	w0, [x0, #35]
   3c8e0:	and	w0, w0, #0x4
   3c8e4:	cmp	w0, #0x0
   3c8e8:	b.eq	3c910 <XS_Unicode__Normalize_getCombinClass+0x140>  // b.none
   3c8ec:	ldr	x0, [sp, #24]
   3c8f0:	ldr	x1, [x0, #16]
   3c8f4:	ldr	x0, [sp, #24]
   3c8f8:	ldr	x0, [x0, #8]
   3c8fc:	ldr	x0, [x0, #24]
   3c900:	lsl	x0, x0, #3
   3c904:	add	x0, x1, x0
   3c908:	ldr	x0, [x0]
   3c90c:	b	3c918 <XS_Unicode__Normalize_getCombinClass+0x148>
   3c910:	ldr	x0, [sp, #24]
   3c914:	bl	38d70 <Perl_sv_newmortal@plt>
   3c918:	str	x0, [sp, #72]
   3c91c:	ldr	x0, [sp, #64]
   3c920:	bl	39ed4 <getCombinClass>
   3c924:	strb	w0, [sp, #39]
   3c928:	ldr	x0, [sp, #24]
   3c92c:	ldr	x1, [x0, #24]
   3c930:	ldrsw	x0, [sp, #40]
   3c934:	lsl	x0, x0, #3
   3c938:	sub	x0, x0, #0x8
   3c93c:	add	x0, x1, x0
   3c940:	str	x0, [sp, #48]
   3c944:	ldrb	w0, [sp, #39]
   3c948:	str	x0, [sp, #80]
   3c94c:	ldr	x0, [sp, #72]
   3c950:	ldr	w1, [x0, #12]
   3c954:	mov	w0, #0x8ff                 	// #2303
   3c958:	movk	w0, #0x9981, lsl #16
   3c95c:	and	w0, w1, w0
   3c960:	cmp	w0, #0x1
   3c964:	cset	w0, eq  // eq = none
   3c968:	and	w0, w0, #0xff
   3c96c:	mov	w1, w0
   3c970:	ldr	x0, [sp, #24]
   3c974:	ldrb	w0, [x0, #185]
   3c978:	eor	w0, w0, #0x1
   3c97c:	and	w0, w0, #0xff
   3c980:	and	w0, w1, w0
   3c984:	ldr	x1, [sp, #80]
   3c988:	mvn	x1, x1
   3c98c:	lsr	x1, x1, #63
   3c990:	and	w1, w1, #0xff
   3c994:	and	w0, w0, w1
   3c998:	cmp	w0, #0x0
   3c99c:	cset	w0, ne  // ne = any
   3c9a0:	and	w0, w0, #0xff
   3c9a4:	and	x0, x0, #0xff
   3c9a8:	cmp	x0, #0x0
   3c9ac:	b.eq	3c9d8 <XS_Unicode__Normalize_getCombinClass+0x208>  // b.none
   3c9b0:	ldr	x0, [sp, #72]
   3c9b4:	ldr	w1, [x0, #12]
   3c9b8:	mov	w0, #0x1100                	// #4352
   3c9bc:	orr	w1, w1, w0
   3c9c0:	ldr	x0, [sp, #72]
   3c9c4:	str	w1, [x0, #12]
   3c9c8:	ldr	x1, [sp, #80]
   3c9cc:	ldr	x0, [sp, #72]
   3c9d0:	str	x1, [x0, #16]
   3c9d4:	b	3c9e8 <XS_Unicode__Normalize_getCombinClass+0x218>
   3c9d8:	ldr	x2, [sp, #80]
   3c9dc:	ldr	x1, [sp, #72]
   3c9e0:	ldr	x0, [sp, #24]
   3c9e4:	bl	38d40 <Perl_sv_setuv_mg@plt>
   3c9e8:	ldr	x0, [sp, #48]
   3c9ec:	add	x0, x0, #0x8
   3c9f0:	str	x0, [sp, #48]
   3c9f4:	ldr	x0, [sp, #48]
   3c9f8:	ldr	x1, [sp, #72]
   3c9fc:	str	x1, [x0]
   3ca00:	mov	x0, #0x1                   	// #1
   3ca04:	str	x0, [sp, #88]
   3ca08:	ldr	x0, [sp, #24]
   3ca0c:	ldr	x1, [x0, #24]
   3ca10:	ldrsw	x2, [sp, #40]
   3ca14:	ldr	x0, [sp, #88]
   3ca18:	add	x0, x2, x0
   3ca1c:	lsl	x0, x0, #3
   3ca20:	sub	x0, x0, #0x8
   3ca24:	add	x1, x1, x0
   3ca28:	ldr	x0, [sp, #24]
   3ca2c:	str	x1, [x0]
   3ca30:	nop
   3ca34:	ldp	x29, x30, [sp], #96
   3ca38:	ret

000000000003ca3c <XS_Unicode__Normalize_isExclusion>:
   3ca3c:	stp	x29, x30, [sp, #-80]!
   3ca40:	mov	x29, sp
   3ca44:	str	x0, [sp, #24]
   3ca48:	str	x1, [sp, #16]
   3ca4c:	ldr	x0, [sp, #24]
   3ca50:	ldr	x0, [x0]
   3ca54:	str	x0, [sp, #48]
   3ca58:	ldr	x0, [sp, #24]
   3ca5c:	bl	38f10 <S_POPMARK>
   3ca60:	str	w0, [sp, #40]
   3ca64:	ldr	x0, [sp, #24]
   3ca68:	ldr	x1, [x0, #24]
   3ca6c:	ldr	w0, [sp, #40]
   3ca70:	add	w2, w0, #0x1
   3ca74:	str	w2, [sp, #40]
   3ca78:	sxtw	x0, w0
   3ca7c:	lsl	x0, x0, #3
   3ca80:	add	x0, x1, x0
   3ca84:	str	x0, [sp, #56]
   3ca88:	ldr	x1, [sp, #48]
   3ca8c:	ldr	x0, [sp, #56]
   3ca90:	sub	x0, x1, x0
   3ca94:	asr	x0, x0, #3
   3ca98:	str	w0, [sp, #44]
   3ca9c:	ldr	w0, [sp, #44]
   3caa0:	cmp	w0, #0x1
   3caa4:	b.eq	3cab8 <XS_Unicode__Normalize_isExclusion+0x7c>  // b.none
   3caa8:	adrp	x0, 45000 <_fini+0x6bac>
   3caac:	add	x1, x0, #0xe10
   3cab0:	ldr	x0, [sp, #16]
   3cab4:	bl	38c40 <Perl_croak_xs_usage@plt>
   3cab8:	ldr	x0, [sp, #24]
   3cabc:	ldr	x1, [x0, #24]
   3cac0:	ldrsw	x0, [sp, #40]
   3cac4:	lsl	x0, x0, #3
   3cac8:	add	x0, x1, x0
   3cacc:	ldr	x0, [x0]
   3cad0:	ldr	w1, [x0, #12]
   3cad4:	mov	w0, #0x100                 	// #256
   3cad8:	movk	w0, #0x8020, lsl #16
   3cadc:	and	w1, w1, w0
   3cae0:	mov	w0, #0x100                 	// #256
   3cae4:	movk	w0, #0x8000, lsl #16
   3cae8:	cmp	w1, w0
   3caec:	b.ne	3cb14 <XS_Unicode__Normalize_isExclusion+0xd8>  // b.any
   3caf0:	ldr	x0, [sp, #24]
   3caf4:	ldr	x1, [x0, #24]
   3caf8:	ldrsw	x0, [sp, #40]
   3cafc:	lsl	x0, x0, #3
   3cb00:	add	x0, x1, x0
   3cb04:	ldr	x0, [x0]
   3cb08:	ldr	x0, [x0]
   3cb0c:	ldr	x0, [x0, #32]
   3cb10:	b	3cb3c <XS_Unicode__Normalize_isExclusion+0x100>
   3cb14:	ldr	x0, [sp, #24]
   3cb18:	ldr	x1, [x0, #24]
   3cb1c:	ldrsw	x0, [sp, #40]
   3cb20:	lsl	x0, x0, #3
   3cb24:	add	x0, x1, x0
   3cb28:	ldr	x0, [x0]
   3cb2c:	mov	w2, #0x2                   	// #2
   3cb30:	mov	x1, x0
   3cb34:	ldr	x0, [sp, #24]
   3cb38:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3cb3c:	str	x0, [sp, #64]
   3cb40:	ldr	x0, [sp, #64]
   3cb44:	bl	38d50 <isExclusion@plt>
   3cb48:	strb	w0, [sp, #39]
   3cb4c:	ldrb	w0, [sp, #39]
   3cb50:	cmp	w0, #0x0
   3cb54:	b.eq	3cb64 <XS_Unicode__Normalize_isExclusion+0x128>  // b.none
   3cb58:	ldr	x0, [sp, #24]
   3cb5c:	add	x0, x0, #0x138
   3cb60:	b	3cb6c <XS_Unicode__Normalize_isExclusion+0x130>
   3cb64:	ldr	x0, [sp, #24]
   3cb68:	add	x0, x0, #0x168
   3cb6c:	ldr	x1, [sp, #24]
   3cb70:	ldr	x2, [x1, #24]
   3cb74:	ldrsw	x1, [sp, #40]
   3cb78:	lsl	x1, x1, #3
   3cb7c:	add	x1, x2, x1
   3cb80:	str	x0, [x1]
   3cb84:	mov	x0, #0x1                   	// #1
   3cb88:	str	x0, [sp, #72]
   3cb8c:	ldr	x0, [sp, #24]
   3cb90:	ldr	x1, [x0, #24]
   3cb94:	ldrsw	x2, [sp, #40]
   3cb98:	ldr	x0, [sp, #72]
   3cb9c:	add	x0, x2, x0
   3cba0:	lsl	x0, x0, #3
   3cba4:	sub	x0, x0, #0x8
   3cba8:	add	x1, x1, x0
   3cbac:	ldr	x0, [sp, #24]
   3cbb0:	str	x1, [x0]
   3cbb4:	nop
   3cbb8:	ldp	x29, x30, [sp], #80
   3cbbc:	ret

000000000003cbc0 <XS_Unicode__Normalize_isSingleton>:
   3cbc0:	stp	x29, x30, [sp, #-80]!
   3cbc4:	mov	x29, sp
   3cbc8:	str	x0, [sp, #24]
   3cbcc:	str	x1, [sp, #16]
   3cbd0:	ldr	x0, [sp, #24]
   3cbd4:	ldr	x0, [x0]
   3cbd8:	str	x0, [sp, #48]
   3cbdc:	ldr	x0, [sp, #24]
   3cbe0:	bl	38f10 <S_POPMARK>
   3cbe4:	str	w0, [sp, #40]
   3cbe8:	ldr	x0, [sp, #24]
   3cbec:	ldr	x1, [x0, #24]
   3cbf0:	ldr	w0, [sp, #40]
   3cbf4:	add	w2, w0, #0x1
   3cbf8:	str	w2, [sp, #40]
   3cbfc:	sxtw	x0, w0
   3cc00:	lsl	x0, x0, #3
   3cc04:	add	x0, x1, x0
   3cc08:	str	x0, [sp, #56]
   3cc0c:	ldr	x1, [sp, #48]
   3cc10:	ldr	x0, [sp, #56]
   3cc14:	sub	x0, x1, x0
   3cc18:	asr	x0, x0, #3
   3cc1c:	str	w0, [sp, #44]
   3cc20:	ldr	w0, [sp, #44]
   3cc24:	cmp	w0, #0x1
   3cc28:	b.eq	3cc3c <XS_Unicode__Normalize_isSingleton+0x7c>  // b.none
   3cc2c:	adrp	x0, 45000 <_fini+0x6bac>
   3cc30:	add	x1, x0, #0xe10
   3cc34:	ldr	x0, [sp, #16]
   3cc38:	bl	38c40 <Perl_croak_xs_usage@plt>
   3cc3c:	ldr	x0, [sp, #24]
   3cc40:	ldr	x1, [x0, #24]
   3cc44:	ldrsw	x0, [sp, #40]
   3cc48:	lsl	x0, x0, #3
   3cc4c:	add	x0, x1, x0
   3cc50:	ldr	x0, [x0]
   3cc54:	ldr	w1, [x0, #12]
   3cc58:	mov	w0, #0x100                 	// #256
   3cc5c:	movk	w0, #0x8020, lsl #16
   3cc60:	and	w1, w1, w0
   3cc64:	mov	w0, #0x100                 	// #256
   3cc68:	movk	w0, #0x8000, lsl #16
   3cc6c:	cmp	w1, w0
   3cc70:	b.ne	3cc98 <XS_Unicode__Normalize_isSingleton+0xd8>  // b.any
   3cc74:	ldr	x0, [sp, #24]
   3cc78:	ldr	x1, [x0, #24]
   3cc7c:	ldrsw	x0, [sp, #40]
   3cc80:	lsl	x0, x0, #3
   3cc84:	add	x0, x1, x0
   3cc88:	ldr	x0, [x0]
   3cc8c:	ldr	x0, [x0]
   3cc90:	ldr	x0, [x0, #32]
   3cc94:	b	3ccc0 <XS_Unicode__Normalize_isSingleton+0x100>
   3cc98:	ldr	x0, [sp, #24]
   3cc9c:	ldr	x1, [x0, #24]
   3cca0:	ldrsw	x0, [sp, #40]
   3cca4:	lsl	x0, x0, #3
   3cca8:	add	x0, x1, x0
   3ccac:	ldr	x0, [x0]
   3ccb0:	mov	w2, #0x2                   	// #2
   3ccb4:	mov	x1, x0
   3ccb8:	ldr	x0, [sp, #24]
   3ccbc:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3ccc0:	str	x0, [sp, #64]
   3ccc4:	ldr	x0, [sp, #64]
   3ccc8:	bl	38c00 <isSingleton@plt>
   3cccc:	strb	w0, [sp, #39]
   3ccd0:	ldrb	w0, [sp, #39]
   3ccd4:	cmp	w0, #0x0
   3ccd8:	b.eq	3cce8 <XS_Unicode__Normalize_isSingleton+0x128>  // b.none
   3ccdc:	ldr	x0, [sp, #24]
   3cce0:	add	x0, x0, #0x138
   3cce4:	b	3ccf0 <XS_Unicode__Normalize_isSingleton+0x130>
   3cce8:	ldr	x0, [sp, #24]
   3ccec:	add	x0, x0, #0x168
   3ccf0:	ldr	x1, [sp, #24]
   3ccf4:	ldr	x2, [x1, #24]
   3ccf8:	ldrsw	x1, [sp, #40]
   3ccfc:	lsl	x1, x1, #3
   3cd00:	add	x1, x2, x1
   3cd04:	str	x0, [x1]
   3cd08:	mov	x0, #0x1                   	// #1
   3cd0c:	str	x0, [sp, #72]
   3cd10:	ldr	x0, [sp, #24]
   3cd14:	ldr	x1, [x0, #24]
   3cd18:	ldrsw	x2, [sp, #40]
   3cd1c:	ldr	x0, [sp, #72]
   3cd20:	add	x0, x2, x0
   3cd24:	lsl	x0, x0, #3
   3cd28:	sub	x0, x0, #0x8
   3cd2c:	add	x1, x1, x0
   3cd30:	ldr	x0, [sp, #24]
   3cd34:	str	x1, [x0]
   3cd38:	nop
   3cd3c:	ldp	x29, x30, [sp], #80
   3cd40:	ret

000000000003cd44 <XS_Unicode__Normalize_isNonStDecomp>:
   3cd44:	stp	x29, x30, [sp, #-80]!
   3cd48:	mov	x29, sp
   3cd4c:	str	x0, [sp, #24]
   3cd50:	str	x1, [sp, #16]
   3cd54:	ldr	x0, [sp, #24]
   3cd58:	ldr	x0, [x0]
   3cd5c:	str	x0, [sp, #48]
   3cd60:	ldr	x0, [sp, #24]
   3cd64:	bl	38f10 <S_POPMARK>
   3cd68:	str	w0, [sp, #40]
   3cd6c:	ldr	x0, [sp, #24]
   3cd70:	ldr	x1, [x0, #24]
   3cd74:	ldr	w0, [sp, #40]
   3cd78:	add	w2, w0, #0x1
   3cd7c:	str	w2, [sp, #40]
   3cd80:	sxtw	x0, w0
   3cd84:	lsl	x0, x0, #3
   3cd88:	add	x0, x1, x0
   3cd8c:	str	x0, [sp, #56]
   3cd90:	ldr	x1, [sp, #48]
   3cd94:	ldr	x0, [sp, #56]
   3cd98:	sub	x0, x1, x0
   3cd9c:	asr	x0, x0, #3
   3cda0:	str	w0, [sp, #44]
   3cda4:	ldr	w0, [sp, #44]
   3cda8:	cmp	w0, #0x1
   3cdac:	b.eq	3cdc0 <XS_Unicode__Normalize_isNonStDecomp+0x7c>  // b.none
   3cdb0:	adrp	x0, 45000 <_fini+0x6bac>
   3cdb4:	add	x1, x0, #0xe10
   3cdb8:	ldr	x0, [sp, #16]
   3cdbc:	bl	38c40 <Perl_croak_xs_usage@plt>
   3cdc0:	ldr	x0, [sp, #24]
   3cdc4:	ldr	x1, [x0, #24]
   3cdc8:	ldrsw	x0, [sp, #40]
   3cdcc:	lsl	x0, x0, #3
   3cdd0:	add	x0, x1, x0
   3cdd4:	ldr	x0, [x0]
   3cdd8:	ldr	w1, [x0, #12]
   3cddc:	mov	w0, #0x100                 	// #256
   3cde0:	movk	w0, #0x8020, lsl #16
   3cde4:	and	w1, w1, w0
   3cde8:	mov	w0, #0x100                 	// #256
   3cdec:	movk	w0, #0x8000, lsl #16
   3cdf0:	cmp	w1, w0
   3cdf4:	b.ne	3ce1c <XS_Unicode__Normalize_isNonStDecomp+0xd8>  // b.any
   3cdf8:	ldr	x0, [sp, #24]
   3cdfc:	ldr	x1, [x0, #24]
   3ce00:	ldrsw	x0, [sp, #40]
   3ce04:	lsl	x0, x0, #3
   3ce08:	add	x0, x1, x0
   3ce0c:	ldr	x0, [x0]
   3ce10:	ldr	x0, [x0]
   3ce14:	ldr	x0, [x0, #32]
   3ce18:	b	3ce44 <XS_Unicode__Normalize_isNonStDecomp+0x100>
   3ce1c:	ldr	x0, [sp, #24]
   3ce20:	ldr	x1, [x0, #24]
   3ce24:	ldrsw	x0, [sp, #40]
   3ce28:	lsl	x0, x0, #3
   3ce2c:	add	x0, x1, x0
   3ce30:	ldr	x0, [x0]
   3ce34:	mov	w2, #0x2                   	// #2
   3ce38:	mov	x1, x0
   3ce3c:	ldr	x0, [sp, #24]
   3ce40:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3ce44:	str	x0, [sp, #64]
   3ce48:	ldr	x0, [sp, #64]
   3ce4c:	bl	38d30 <isNonStDecomp@plt>
   3ce50:	strb	w0, [sp, #39]
   3ce54:	ldrb	w0, [sp, #39]
   3ce58:	cmp	w0, #0x0
   3ce5c:	b.eq	3ce6c <XS_Unicode__Normalize_isNonStDecomp+0x128>  // b.none
   3ce60:	ldr	x0, [sp, #24]
   3ce64:	add	x0, x0, #0x138
   3ce68:	b	3ce74 <XS_Unicode__Normalize_isNonStDecomp+0x130>
   3ce6c:	ldr	x0, [sp, #24]
   3ce70:	add	x0, x0, #0x168
   3ce74:	ldr	x1, [sp, #24]
   3ce78:	ldr	x2, [x1, #24]
   3ce7c:	ldrsw	x1, [sp, #40]
   3ce80:	lsl	x1, x1, #3
   3ce84:	add	x1, x2, x1
   3ce88:	str	x0, [x1]
   3ce8c:	mov	x0, #0x1                   	// #1
   3ce90:	str	x0, [sp, #72]
   3ce94:	ldr	x0, [sp, #24]
   3ce98:	ldr	x1, [x0, #24]
   3ce9c:	ldrsw	x2, [sp, #40]
   3cea0:	ldr	x0, [sp, #72]
   3cea4:	add	x0, x2, x0
   3cea8:	lsl	x0, x0, #3
   3ceac:	sub	x0, x0, #0x8
   3ceb0:	add	x1, x1, x0
   3ceb4:	ldr	x0, [sp, #24]
   3ceb8:	str	x1, [x0]
   3cebc:	nop
   3cec0:	ldp	x29, x30, [sp], #80
   3cec4:	ret

000000000003cec8 <XS_Unicode__Normalize_isComp2nd>:
   3cec8:	stp	x29, x30, [sp, #-96]!
   3cecc:	mov	x29, sp
   3ced0:	str	x0, [sp, #24]
   3ced4:	str	x1, [sp, #16]
   3ced8:	ldr	x0, [sp, #24]
   3cedc:	ldr	x0, [x0]
   3cee0:	str	x0, [sp, #56]
   3cee4:	ldr	x0, [sp, #24]
   3cee8:	bl	38f10 <S_POPMARK>
   3ceec:	str	w0, [sp, #44]
   3cef0:	ldr	x0, [sp, #24]
   3cef4:	ldr	x1, [x0, #24]
   3cef8:	ldr	w0, [sp, #44]
   3cefc:	add	w2, w0, #0x1
   3cf00:	str	w2, [sp, #44]
   3cf04:	sxtw	x0, w0
   3cf08:	lsl	x0, x0, #3
   3cf0c:	add	x0, x1, x0
   3cf10:	str	x0, [sp, #64]
   3cf14:	ldr	x1, [sp, #56]
   3cf18:	ldr	x0, [sp, #64]
   3cf1c:	sub	x0, x1, x0
   3cf20:	asr	x0, x0, #3
   3cf24:	str	w0, [sp, #48]
   3cf28:	ldr	x0, [sp, #16]
   3cf2c:	ldr	x0, [x0]
   3cf30:	str	x0, [sp, #72]
   3cf34:	ldr	x0, [sp, #72]
   3cf38:	ldr	w0, [x0, #40]
   3cf3c:	str	w0, [sp, #52]
   3cf40:	ldr	w0, [sp, #48]
   3cf44:	cmp	w0, #0x1
   3cf48:	b.eq	3cf5c <XS_Unicode__Normalize_isComp2nd+0x94>  // b.none
   3cf4c:	adrp	x0, 45000 <_fini+0x6bac>
   3cf50:	add	x1, x0, #0xe10
   3cf54:	ldr	x0, [sp, #16]
   3cf58:	bl	38c40 <Perl_croak_xs_usage@plt>
   3cf5c:	ldr	x0, [sp, #24]
   3cf60:	ldr	x1, [x0, #24]
   3cf64:	ldrsw	x0, [sp, #44]
   3cf68:	lsl	x0, x0, #3
   3cf6c:	add	x0, x1, x0
   3cf70:	ldr	x0, [x0]
   3cf74:	ldr	w1, [x0, #12]
   3cf78:	mov	w0, #0x100                 	// #256
   3cf7c:	movk	w0, #0x8020, lsl #16
   3cf80:	and	w1, w1, w0
   3cf84:	mov	w0, #0x100                 	// #256
   3cf88:	movk	w0, #0x8000, lsl #16
   3cf8c:	cmp	w1, w0
   3cf90:	b.ne	3cfb8 <XS_Unicode__Normalize_isComp2nd+0xf0>  // b.any
   3cf94:	ldr	x0, [sp, #24]
   3cf98:	ldr	x1, [x0, #24]
   3cf9c:	ldrsw	x0, [sp, #44]
   3cfa0:	lsl	x0, x0, #3
   3cfa4:	add	x0, x1, x0
   3cfa8:	ldr	x0, [x0]
   3cfac:	ldr	x0, [x0]
   3cfb0:	ldr	x0, [x0, #32]
   3cfb4:	b	3cfe0 <XS_Unicode__Normalize_isComp2nd+0x118>
   3cfb8:	ldr	x0, [sp, #24]
   3cfbc:	ldr	x1, [x0, #24]
   3cfc0:	ldrsw	x0, [sp, #44]
   3cfc4:	lsl	x0, x0, #3
   3cfc8:	add	x0, x1, x0
   3cfcc:	ldr	x0, [x0]
   3cfd0:	mov	w2, #0x2                   	// #2
   3cfd4:	mov	x1, x0
   3cfd8:	ldr	x0, [sp, #24]
   3cfdc:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3cfe0:	str	x0, [sp, #80]
   3cfe4:	ldr	x0, [sp, #80]
   3cfe8:	bl	38c80 <isComp2nd@plt>
   3cfec:	strb	w0, [sp, #43]
   3cff0:	ldrb	w0, [sp, #43]
   3cff4:	cmp	w0, #0x0
   3cff8:	b.eq	3d008 <XS_Unicode__Normalize_isComp2nd+0x140>  // b.none
   3cffc:	ldr	x0, [sp, #24]
   3d000:	add	x0, x0, #0x138
   3d004:	b	3d010 <XS_Unicode__Normalize_isComp2nd+0x148>
   3d008:	ldr	x0, [sp, #24]
   3d00c:	add	x0, x0, #0x168
   3d010:	ldr	x1, [sp, #24]
   3d014:	ldr	x2, [x1, #24]
   3d018:	ldrsw	x1, [sp, #44]
   3d01c:	lsl	x1, x1, #3
   3d020:	add	x1, x2, x1
   3d024:	str	x0, [x1]
   3d028:	mov	x0, #0x1                   	// #1
   3d02c:	str	x0, [sp, #88]
   3d030:	ldr	x0, [sp, #24]
   3d034:	ldr	x1, [x0, #24]
   3d038:	ldrsw	x2, [sp, #44]
   3d03c:	ldr	x0, [sp, #88]
   3d040:	add	x0, x2, x0
   3d044:	lsl	x0, x0, #3
   3d048:	sub	x0, x0, #0x8
   3d04c:	add	x1, x1, x0
   3d050:	ldr	x0, [sp, #24]
   3d054:	str	x1, [x0]
   3d058:	nop
   3d05c:	ldp	x29, x30, [sp], #96
   3d060:	ret

000000000003d064 <XS_Unicode__Normalize_isNFD_NO>:
   3d064:	stp	x29, x30, [sp, #-96]!
   3d068:	mov	x29, sp
   3d06c:	str	x0, [sp, #24]
   3d070:	str	x1, [sp, #16]
   3d074:	ldr	x0, [sp, #24]
   3d078:	ldr	x0, [x0]
   3d07c:	str	x0, [sp, #48]
   3d080:	ldr	x0, [sp, #24]
   3d084:	bl	38f10 <S_POPMARK>
   3d088:	str	w0, [sp, #36]
   3d08c:	ldr	x0, [sp, #24]
   3d090:	ldr	x1, [x0, #24]
   3d094:	ldr	w0, [sp, #36]
   3d098:	add	w2, w0, #0x1
   3d09c:	str	w2, [sp, #36]
   3d0a0:	sxtw	x0, w0
   3d0a4:	lsl	x0, x0, #3
   3d0a8:	add	x0, x1, x0
   3d0ac:	str	x0, [sp, #56]
   3d0b0:	ldr	x1, [sp, #48]
   3d0b4:	ldr	x0, [sp, #56]
   3d0b8:	sub	x0, x1, x0
   3d0bc:	asr	x0, x0, #3
   3d0c0:	str	w0, [sp, #40]
   3d0c4:	ldr	x0, [sp, #16]
   3d0c8:	ldr	x0, [x0]
   3d0cc:	str	x0, [sp, #64]
   3d0d0:	ldr	x0, [sp, #64]
   3d0d4:	ldr	w0, [x0, #40]
   3d0d8:	str	w0, [sp, #44]
   3d0dc:	ldr	w0, [sp, #40]
   3d0e0:	cmp	w0, #0x1
   3d0e4:	b.eq	3d0f8 <XS_Unicode__Normalize_isNFD_NO+0x94>  // b.none
   3d0e8:	adrp	x0, 45000 <_fini+0x6bac>
   3d0ec:	add	x1, x0, #0xe10
   3d0f0:	ldr	x0, [sp, #16]
   3d0f4:	bl	38c40 <Perl_croak_xs_usage@plt>
   3d0f8:	ldr	x0, [sp, #24]
   3d0fc:	ldr	x1, [x0, #24]
   3d100:	ldrsw	x0, [sp, #36]
   3d104:	lsl	x0, x0, #3
   3d108:	add	x0, x1, x0
   3d10c:	ldr	x0, [x0]
   3d110:	ldr	w1, [x0, #12]
   3d114:	mov	w0, #0x100                 	// #256
   3d118:	movk	w0, #0x8020, lsl #16
   3d11c:	and	w1, w1, w0
   3d120:	mov	w0, #0x100                 	// #256
   3d124:	movk	w0, #0x8000, lsl #16
   3d128:	cmp	w1, w0
   3d12c:	b.ne	3d154 <XS_Unicode__Normalize_isNFD_NO+0xf0>  // b.any
   3d130:	ldr	x0, [sp, #24]
   3d134:	ldr	x1, [x0, #24]
   3d138:	ldrsw	x0, [sp, #36]
   3d13c:	lsl	x0, x0, #3
   3d140:	add	x0, x1, x0
   3d144:	ldr	x0, [x0]
   3d148:	ldr	x0, [x0]
   3d14c:	ldr	x0, [x0, #32]
   3d150:	b	3d17c <XS_Unicode__Normalize_isNFD_NO+0x118>
   3d154:	ldr	x0, [sp, #24]
   3d158:	ldr	x1, [x0, #24]
   3d15c:	ldrsw	x0, [sp, #36]
   3d160:	lsl	x0, x0, #3
   3d164:	add	x0, x1, x0
   3d168:	ldr	x0, [x0]
   3d16c:	mov	w2, #0x2                   	// #2
   3d170:	mov	x1, x0
   3d174:	ldr	x0, [sp, #24]
   3d178:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3d17c:	str	x0, [sp, #72]
   3d180:	strb	wzr, [sp, #35]
   3d184:	ldr	x1, [sp, #72]
   3d188:	mov	x0, #0xabff                	// #44031
   3d18c:	cmp	x1, x0
   3d190:	b.ls	3d1a4 <XS_Unicode__Normalize_isNFD_NO+0x140>  // b.plast
   3d194:	ldr	x1, [sp, #72]
   3d198:	mov	x0, #0xd7a3                	// #55203
   3d19c:	cmp	x1, x0
   3d1a0:	b.ls	3d1d4 <XS_Unicode__Normalize_isNFD_NO+0x170>  // b.plast
   3d1a4:	ldr	w0, [sp, #44]
   3d1a8:	cmp	w0, #0x0
   3d1ac:	b.eq	3d1c4 <XS_Unicode__Normalize_isNFD_NO+0x160>  // b.none
   3d1b0:	ldr	x0, [sp, #72]
   3d1b4:	bl	39bcc <dec_compat>
   3d1b8:	cmp	x0, #0x0
   3d1bc:	b.ne	3d1d4 <XS_Unicode__Normalize_isNFD_NO+0x170>  // b.any
   3d1c0:	b	3d1dc <XS_Unicode__Normalize_isNFD_NO+0x178>
   3d1c4:	ldr	x0, [sp, #72]
   3d1c8:	bl	39b2c <dec_canonical>
   3d1cc:	cmp	x0, #0x0
   3d1d0:	b.eq	3d1dc <XS_Unicode__Normalize_isNFD_NO+0x178>  // b.none
   3d1d4:	mov	w0, #0x1                   	// #1
   3d1d8:	strb	w0, [sp, #35]
   3d1dc:	ldrb	w0, [sp, #35]
   3d1e0:	cmp	w0, #0x0
   3d1e4:	b.eq	3d1f4 <XS_Unicode__Normalize_isNFD_NO+0x190>  // b.none
   3d1e8:	ldr	x0, [sp, #24]
   3d1ec:	add	x0, x0, #0x138
   3d1f0:	b	3d1fc <XS_Unicode__Normalize_isNFD_NO+0x198>
   3d1f4:	ldr	x0, [sp, #24]
   3d1f8:	add	x0, x0, #0x168
   3d1fc:	str	x0, [sp, #80]
   3d200:	ldr	x1, [sp, #80]
   3d204:	ldr	x0, [sp, #24]
   3d208:	bl	38cb0 <Perl_sv_2mortal@plt>
   3d20c:	str	x0, [sp, #80]
   3d210:	ldr	x0, [sp, #24]
   3d214:	ldr	x1, [x0, #24]
   3d218:	ldrsw	x0, [sp, #36]
   3d21c:	lsl	x0, x0, #3
   3d220:	add	x0, x1, x0
   3d224:	ldr	x1, [sp, #80]
   3d228:	str	x1, [x0]
   3d22c:	mov	x0, #0x1                   	// #1
   3d230:	str	x0, [sp, #88]
   3d234:	ldr	x0, [sp, #24]
   3d238:	ldr	x1, [x0, #24]
   3d23c:	ldrsw	x2, [sp, #36]
   3d240:	ldr	x0, [sp, #88]
   3d244:	add	x0, x2, x0
   3d248:	lsl	x0, x0, #3
   3d24c:	sub	x0, x0, #0x8
   3d250:	add	x1, x1, x0
   3d254:	ldr	x0, [sp, #24]
   3d258:	str	x1, [x0]
   3d25c:	nop
   3d260:	ldp	x29, x30, [sp], #96
   3d264:	ret

000000000003d268 <XS_Unicode__Normalize_isComp_Ex>:
   3d268:	stp	x29, x30, [sp, #-112]!
   3d26c:	mov	x29, sp
   3d270:	str	x0, [sp, #24]
   3d274:	str	x1, [sp, #16]
   3d278:	ldr	x0, [sp, #24]
   3d27c:	ldr	x0, [x0]
   3d280:	str	x0, [sp, #48]
   3d284:	ldr	x0, [sp, #24]
   3d288:	bl	38f10 <S_POPMARK>
   3d28c:	str	w0, [sp, #36]
   3d290:	ldr	x0, [sp, #24]
   3d294:	ldr	x1, [x0, #24]
   3d298:	ldr	w0, [sp, #36]
   3d29c:	add	w2, w0, #0x1
   3d2a0:	str	w2, [sp, #36]
   3d2a4:	sxtw	x0, w0
   3d2a8:	lsl	x0, x0, #3
   3d2ac:	add	x0, x1, x0
   3d2b0:	str	x0, [sp, #56]
   3d2b4:	ldr	x1, [sp, #48]
   3d2b8:	ldr	x0, [sp, #56]
   3d2bc:	sub	x0, x1, x0
   3d2c0:	asr	x0, x0, #3
   3d2c4:	str	w0, [sp, #40]
   3d2c8:	ldr	x0, [sp, #16]
   3d2cc:	ldr	x0, [x0]
   3d2d0:	str	x0, [sp, #64]
   3d2d4:	ldr	x0, [sp, #64]
   3d2d8:	ldr	w0, [x0, #40]
   3d2dc:	str	w0, [sp, #44]
   3d2e0:	ldr	w0, [sp, #40]
   3d2e4:	cmp	w0, #0x1
   3d2e8:	b.eq	3d2fc <XS_Unicode__Normalize_isComp_Ex+0x94>  // b.none
   3d2ec:	adrp	x0, 45000 <_fini+0x6bac>
   3d2f0:	add	x1, x0, #0xe10
   3d2f4:	ldr	x0, [sp, #16]
   3d2f8:	bl	38c40 <Perl_croak_xs_usage@plt>
   3d2fc:	ldr	x0, [sp, #24]
   3d300:	ldr	x1, [x0, #24]
   3d304:	ldrsw	x0, [sp, #36]
   3d308:	lsl	x0, x0, #3
   3d30c:	add	x0, x1, x0
   3d310:	ldr	x0, [x0]
   3d314:	ldr	w1, [x0, #12]
   3d318:	mov	w0, #0x100                 	// #256
   3d31c:	movk	w0, #0x8020, lsl #16
   3d320:	and	w1, w1, w0
   3d324:	mov	w0, #0x100                 	// #256
   3d328:	movk	w0, #0x8000, lsl #16
   3d32c:	cmp	w1, w0
   3d330:	b.ne	3d358 <XS_Unicode__Normalize_isComp_Ex+0xf0>  // b.any
   3d334:	ldr	x0, [sp, #24]
   3d338:	ldr	x1, [x0, #24]
   3d33c:	ldrsw	x0, [sp, #36]
   3d340:	lsl	x0, x0, #3
   3d344:	add	x0, x1, x0
   3d348:	ldr	x0, [x0]
   3d34c:	ldr	x0, [x0]
   3d350:	ldr	x0, [x0, #32]
   3d354:	b	3d380 <XS_Unicode__Normalize_isComp_Ex+0x118>
   3d358:	ldr	x0, [sp, #24]
   3d35c:	ldr	x1, [x0, #24]
   3d360:	ldrsw	x0, [sp, #36]
   3d364:	lsl	x0, x0, #3
   3d368:	add	x0, x1, x0
   3d36c:	ldr	x0, [x0]
   3d370:	mov	w2, #0x2                   	// #2
   3d374:	mov	x1, x0
   3d378:	ldr	x0, [sp, #24]
   3d37c:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3d380:	str	x0, [sp, #72]
   3d384:	strb	wzr, [sp, #35]
   3d388:	ldr	x0, [sp, #72]
   3d38c:	bl	38d50 <isExclusion@plt>
   3d390:	and	w0, w0, #0xff
   3d394:	cmp	w0, #0x0
   3d398:	b.ne	3d3c4 <XS_Unicode__Normalize_isComp_Ex+0x15c>  // b.any
   3d39c:	ldr	x0, [sp, #72]
   3d3a0:	bl	38c00 <isSingleton@plt>
   3d3a4:	and	w0, w0, #0xff
   3d3a8:	cmp	w0, #0x0
   3d3ac:	b.ne	3d3c4 <XS_Unicode__Normalize_isComp_Ex+0x15c>  // b.any
   3d3b0:	ldr	x0, [sp, #72]
   3d3b4:	bl	38d30 <isNonStDecomp@plt>
   3d3b8:	and	w0, w0, #0xff
   3d3bc:	cmp	w0, #0x0
   3d3c0:	b.eq	3d3d0 <XS_Unicode__Normalize_isComp_Ex+0x168>  // b.none
   3d3c4:	mov	w0, #0x1                   	// #1
   3d3c8:	strb	w0, [sp, #35]
   3d3cc:	b	3d428 <XS_Unicode__Normalize_isComp_Ex+0x1c0>
   3d3d0:	ldr	w0, [sp, #44]
   3d3d4:	cmp	w0, #0x0
   3d3d8:	b.eq	3d428 <XS_Unicode__Normalize_isComp_Ex+0x1c0>  // b.none
   3d3dc:	ldr	x0, [sp, #72]
   3d3e0:	bl	39b2c <dec_canonical>
   3d3e4:	str	x0, [sp, #80]
   3d3e8:	ldr	x0, [sp, #72]
   3d3ec:	bl	39bcc <dec_compat>
   3d3f0:	str	x0, [sp, #88]
   3d3f4:	ldr	x0, [sp, #88]
   3d3f8:	cmp	x0, #0x0
   3d3fc:	b.eq	3d428 <XS_Unicode__Normalize_isComp_Ex+0x1c0>  // b.none
   3d400:	ldr	x0, [sp, #80]
   3d404:	cmp	x0, #0x0
   3d408:	b.eq	3d420 <XS_Unicode__Normalize_isComp_Ex+0x1b8>  // b.none
   3d40c:	ldr	x1, [sp, #88]
   3d410:	ldr	x0, [sp, #80]
   3d414:	bl	38c60 <strcmp@plt>
   3d418:	cmp	w0, #0x0
   3d41c:	b.eq	3d428 <XS_Unicode__Normalize_isComp_Ex+0x1c0>  // b.none
   3d420:	mov	w0, #0x1                   	// #1
   3d424:	strb	w0, [sp, #35]
   3d428:	ldrb	w0, [sp, #35]
   3d42c:	cmp	w0, #0x0
   3d430:	b.eq	3d440 <XS_Unicode__Normalize_isComp_Ex+0x1d8>  // b.none
   3d434:	ldr	x0, [sp, #24]
   3d438:	add	x0, x0, #0x138
   3d43c:	b	3d448 <XS_Unicode__Normalize_isComp_Ex+0x1e0>
   3d440:	ldr	x0, [sp, #24]
   3d444:	add	x0, x0, #0x168
   3d448:	str	x0, [sp, #96]
   3d44c:	ldr	x1, [sp, #96]
   3d450:	ldr	x0, [sp, #24]
   3d454:	bl	38cb0 <Perl_sv_2mortal@plt>
   3d458:	str	x0, [sp, #96]
   3d45c:	ldr	x0, [sp, #24]
   3d460:	ldr	x1, [x0, #24]
   3d464:	ldrsw	x0, [sp, #36]
   3d468:	lsl	x0, x0, #3
   3d46c:	add	x0, x1, x0
   3d470:	ldr	x1, [sp, #96]
   3d474:	str	x1, [x0]
   3d478:	mov	x0, #0x1                   	// #1
   3d47c:	str	x0, [sp, #104]
   3d480:	ldr	x0, [sp, #24]
   3d484:	ldr	x1, [x0, #24]
   3d488:	ldrsw	x2, [sp, #36]
   3d48c:	ldr	x0, [sp, #104]
   3d490:	add	x0, x2, x0
   3d494:	lsl	x0, x0, #3
   3d498:	sub	x0, x0, #0x8
   3d49c:	add	x1, x1, x0
   3d4a0:	ldr	x0, [sp, #24]
   3d4a4:	str	x1, [x0]
   3d4a8:	nop
   3d4ac:	ldp	x29, x30, [sp], #112
   3d4b0:	ret

000000000003d4b4 <XS_Unicode__Normalize_getComposite>:
   3d4b4:	stp	x29, x30, [sp, #-96]!
   3d4b8:	mov	x29, sp
   3d4bc:	str	x0, [sp, #24]
   3d4c0:	str	x1, [sp, #16]
   3d4c4:	ldr	x0, [sp, #24]
   3d4c8:	ldr	x0, [x0]
   3d4cc:	str	x0, [sp, #40]
   3d4d0:	ldr	x0, [sp, #24]
   3d4d4:	bl	38f10 <S_POPMARK>
   3d4d8:	str	w0, [sp, #32]
   3d4dc:	ldr	x0, [sp, #24]
   3d4e0:	ldr	x1, [x0, #24]
   3d4e4:	ldr	w0, [sp, #32]
   3d4e8:	add	w2, w0, #0x1
   3d4ec:	str	w2, [sp, #32]
   3d4f0:	sxtw	x0, w0
   3d4f4:	lsl	x0, x0, #3
   3d4f8:	add	x0, x1, x0
   3d4fc:	str	x0, [sp, #48]
   3d500:	ldr	x1, [sp, #40]
   3d504:	ldr	x0, [sp, #48]
   3d508:	sub	x0, x1, x0
   3d50c:	asr	x0, x0, #3
   3d510:	str	w0, [sp, #36]
   3d514:	ldr	w0, [sp, #36]
   3d518:	cmp	w0, #0x2
   3d51c:	b.eq	3d530 <XS_Unicode__Normalize_getComposite+0x7c>  // b.none
   3d520:	adrp	x0, 45000 <_fini+0x6bac>
   3d524:	add	x1, x0, #0xe18
   3d528:	ldr	x0, [sp, #16]
   3d52c:	bl	38c40 <Perl_croak_xs_usage@plt>
   3d530:	ldr	x0, [sp, #24]
   3d534:	ldr	x1, [x0, #24]
   3d538:	ldrsw	x0, [sp, #32]
   3d53c:	lsl	x0, x0, #3
   3d540:	add	x0, x1, x0
   3d544:	ldr	x0, [x0]
   3d548:	ldr	w1, [x0, #12]
   3d54c:	mov	w0, #0x100                 	// #256
   3d550:	movk	w0, #0x8020, lsl #16
   3d554:	and	w1, w1, w0
   3d558:	mov	w0, #0x100                 	// #256
   3d55c:	movk	w0, #0x8000, lsl #16
   3d560:	cmp	w1, w0
   3d564:	b.ne	3d58c <XS_Unicode__Normalize_getComposite+0xd8>  // b.any
   3d568:	ldr	x0, [sp, #24]
   3d56c:	ldr	x1, [x0, #24]
   3d570:	ldrsw	x0, [sp, #32]
   3d574:	lsl	x0, x0, #3
   3d578:	add	x0, x1, x0
   3d57c:	ldr	x0, [x0]
   3d580:	ldr	x0, [x0]
   3d584:	ldr	x0, [x0, #32]
   3d588:	b	3d5b4 <XS_Unicode__Normalize_getComposite+0x100>
   3d58c:	ldr	x0, [sp, #24]
   3d590:	ldr	x1, [x0, #24]
   3d594:	ldrsw	x0, [sp, #32]
   3d598:	lsl	x0, x0, #3
   3d59c:	add	x0, x1, x0
   3d5a0:	ldr	x0, [x0]
   3d5a4:	mov	w2, #0x2                   	// #2
   3d5a8:	mov	x1, x0
   3d5ac:	ldr	x0, [sp, #24]
   3d5b0:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3d5b4:	str	x0, [sp, #56]
   3d5b8:	ldr	x0, [sp, #24]
   3d5bc:	ldr	x1, [x0, #24]
   3d5c0:	ldrsw	x0, [sp, #32]
   3d5c4:	add	x0, x0, #0x1
   3d5c8:	lsl	x0, x0, #3
   3d5cc:	add	x0, x1, x0
   3d5d0:	ldr	x0, [x0]
   3d5d4:	ldr	w1, [x0, #12]
   3d5d8:	mov	w0, #0x100                 	// #256
   3d5dc:	movk	w0, #0x8020, lsl #16
   3d5e0:	and	w1, w1, w0
   3d5e4:	mov	w0, #0x100                 	// #256
   3d5e8:	movk	w0, #0x8000, lsl #16
   3d5ec:	cmp	w1, w0
   3d5f0:	b.ne	3d61c <XS_Unicode__Normalize_getComposite+0x168>  // b.any
   3d5f4:	ldr	x0, [sp, #24]
   3d5f8:	ldr	x1, [x0, #24]
   3d5fc:	ldrsw	x0, [sp, #32]
   3d600:	add	x0, x0, #0x1
   3d604:	lsl	x0, x0, #3
   3d608:	add	x0, x1, x0
   3d60c:	ldr	x0, [x0]
   3d610:	ldr	x0, [x0]
   3d614:	ldr	x0, [x0, #32]
   3d618:	b	3d648 <XS_Unicode__Normalize_getComposite+0x194>
   3d61c:	ldr	x0, [sp, #24]
   3d620:	ldr	x1, [x0, #24]
   3d624:	ldrsw	x0, [sp, #32]
   3d628:	add	x0, x0, #0x1
   3d62c:	lsl	x0, x0, #3
   3d630:	add	x0, x1, x0
   3d634:	ldr	x0, [x0]
   3d638:	mov	w2, #0x2                   	// #2
   3d63c:	mov	x1, x0
   3d640:	ldr	x0, [sp, #24]
   3d644:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3d648:	str	x0, [sp, #64]
   3d64c:	ldr	x1, [sp, #64]
   3d650:	ldr	x0, [sp, #56]
   3d654:	bl	39c6c <composite_uv>
   3d658:	str	x0, [sp, #72]
   3d65c:	ldr	x0, [sp, #72]
   3d660:	cmp	x0, #0x0
   3d664:	b.eq	3d678 <XS_Unicode__Normalize_getComposite+0x1c4>  // b.none
   3d668:	ldr	x1, [sp, #72]
   3d66c:	ldr	x0, [sp, #24]
   3d670:	bl	38cd0 <Perl_newSVuv@plt>
   3d674:	b	3d680 <XS_Unicode__Normalize_getComposite+0x1cc>
   3d678:	ldr	x0, [sp, #24]
   3d67c:	add	x0, x0, #0x150
   3d680:	str	x0, [sp, #80]
   3d684:	ldr	x1, [sp, #80]
   3d688:	ldr	x0, [sp, #24]
   3d68c:	bl	38cb0 <Perl_sv_2mortal@plt>
   3d690:	str	x0, [sp, #80]
   3d694:	ldr	x0, [sp, #24]
   3d698:	ldr	x1, [x0, #24]
   3d69c:	ldrsw	x0, [sp, #32]
   3d6a0:	lsl	x0, x0, #3
   3d6a4:	add	x0, x1, x0
   3d6a8:	ldr	x1, [sp, #80]
   3d6ac:	str	x1, [x0]
   3d6b0:	mov	x0, #0x1                   	// #1
   3d6b4:	str	x0, [sp, #88]
   3d6b8:	ldr	x0, [sp, #24]
   3d6bc:	ldr	x1, [x0, #24]
   3d6c0:	ldrsw	x2, [sp, #32]
   3d6c4:	ldr	x0, [sp, #88]
   3d6c8:	add	x0, x2, x0
   3d6cc:	lsl	x0, x0, #3
   3d6d0:	sub	x0, x0, #0x8
   3d6d4:	add	x1, x1, x0
   3d6d8:	ldr	x0, [sp, #24]
   3d6dc:	str	x1, [x0]
   3d6e0:	nop
   3d6e4:	ldp	x29, x30, [sp], #96
   3d6e8:	ret

000000000003d6ec <XS_Unicode__Normalize_getCanon>:
   3d6ec:	stp	x29, x30, [sp, #-176]!
   3d6f0:	mov	x29, sp
   3d6f4:	str	x0, [sp, #24]
   3d6f8:	str	x1, [sp, #16]
   3d6fc:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3d700:	ldr	x0, [x0, #4040]
   3d704:	ldr	x1, [x0]
   3d708:	str	x1, [sp, #168]
   3d70c:	mov	x1, #0x0                   	// #0
   3d710:	ldr	x0, [sp, #24]
   3d714:	ldr	x0, [x0]
   3d718:	str	x0, [sp, #56]
   3d71c:	ldr	x0, [sp, #24]
   3d720:	bl	38f10 <S_POPMARK>
   3d724:	str	w0, [sp, #36]
   3d728:	ldr	x0, [sp, #24]
   3d72c:	ldr	x1, [x0, #24]
   3d730:	ldr	w0, [sp, #36]
   3d734:	add	w2, w0, #0x1
   3d738:	str	w2, [sp, #36]
   3d73c:	sxtw	x0, w0
   3d740:	lsl	x0, x0, #3
   3d744:	add	x0, x1, x0
   3d748:	str	x0, [sp, #64]
   3d74c:	ldr	x1, [sp, #56]
   3d750:	ldr	x0, [sp, #64]
   3d754:	sub	x0, x1, x0
   3d758:	asr	x0, x0, #3
   3d75c:	str	w0, [sp, #40]
   3d760:	ldr	x0, [sp, #16]
   3d764:	ldr	x0, [x0]
   3d768:	str	x0, [sp, #72]
   3d76c:	ldr	x0, [sp, #72]
   3d770:	ldr	w0, [x0, #40]
   3d774:	str	w0, [sp, #44]
   3d778:	ldr	w0, [sp, #40]
   3d77c:	cmp	w0, #0x1
   3d780:	b.eq	3d794 <XS_Unicode__Normalize_getCanon+0xa8>  // b.none
   3d784:	adrp	x0, 45000 <_fini+0x6bac>
   3d788:	add	x1, x0, #0xe10
   3d78c:	ldr	x0, [sp, #16]
   3d790:	bl	38c40 <Perl_croak_xs_usage@plt>
   3d794:	ldr	x0, [sp, #24]
   3d798:	ldr	x1, [x0, #24]
   3d79c:	ldrsw	x0, [sp, #36]
   3d7a0:	lsl	x0, x0, #3
   3d7a4:	add	x0, x1, x0
   3d7a8:	ldr	x0, [x0]
   3d7ac:	ldr	w1, [x0, #12]
   3d7b0:	mov	w0, #0x100                 	// #256
   3d7b4:	movk	w0, #0x8020, lsl #16
   3d7b8:	and	w1, w1, w0
   3d7bc:	mov	w0, #0x100                 	// #256
   3d7c0:	movk	w0, #0x8000, lsl #16
   3d7c4:	cmp	w1, w0
   3d7c8:	b.ne	3d7f0 <XS_Unicode__Normalize_getCanon+0x104>  // b.any
   3d7cc:	ldr	x0, [sp, #24]
   3d7d0:	ldr	x1, [x0, #24]
   3d7d4:	ldrsw	x0, [sp, #36]
   3d7d8:	lsl	x0, x0, #3
   3d7dc:	add	x0, x1, x0
   3d7e0:	ldr	x0, [x0]
   3d7e4:	ldr	x0, [x0]
   3d7e8:	ldr	x0, [x0, #32]
   3d7ec:	b	3d818 <XS_Unicode__Normalize_getCanon+0x12c>
   3d7f0:	ldr	x0, [sp, #24]
   3d7f4:	ldr	x1, [x0, #24]
   3d7f8:	ldrsw	x0, [sp, #36]
   3d7fc:	lsl	x0, x0, #3
   3d800:	add	x0, x1, x0
   3d804:	ldr	x0, [x0]
   3d808:	mov	w2, #0x2                   	// #2
   3d80c:	mov	x1, x0
   3d810:	ldr	x0, [sp, #24]
   3d814:	bl	38ba0 <Perl_sv_2uv_flags@plt>
   3d818:	str	x0, [sp, #80]
   3d81c:	ldr	x1, [sp, #80]
   3d820:	mov	x0, #0xabff                	// #44031
   3d824:	cmp	x1, x0
   3d828:	b.ls	3d87c <XS_Unicode__Normalize_getCanon+0x190>  // b.plast
   3d82c:	ldr	x1, [sp, #80]
   3d830:	mov	x0, #0xd7a3                	// #55203
   3d834:	cmp	x1, x0
   3d838:	b.hi	3d87c <XS_Unicode__Normalize_getCanon+0x190>  // b.pmore
   3d83c:	add	x0, sp, #0x80
   3d840:	str	x0, [sp, #88]
   3d844:	ldr	x2, [sp, #80]
   3d848:	ldr	x1, [sp, #88]
   3d84c:	ldr	x0, [sp, #24]
   3d850:	bl	39f70 <pv_cat_decompHangul>
   3d854:	str	x0, [sp, #96]
   3d858:	ldr	x1, [sp, #96]
   3d85c:	ldr	x0, [sp, #88]
   3d860:	sub	x0, x1, x0
   3d864:	mov	x2, x0
   3d868:	ldr	x1, [sp, #88]
   3d86c:	ldr	x0, [sp, #24]
   3d870:	bl	38d60 <Perl_newSVpvn@plt>
   3d874:	str	x0, [sp, #48]
   3d878:	b	3d91c <XS_Unicode__Normalize_getCanon+0x230>
   3d87c:	ldr	w0, [sp, #44]
   3d880:	cmp	w0, #0x0
   3d884:	b.eq	3d894 <XS_Unicode__Normalize_getCanon+0x1a8>  // b.none
   3d888:	ldr	x0, [sp, #80]
   3d88c:	bl	39bcc <dec_compat>
   3d890:	b	3d89c <XS_Unicode__Normalize_getCanon+0x1b0>
   3d894:	ldr	x0, [sp, #80]
   3d898:	bl	39b2c <dec_canonical>
   3d89c:	str	x0, [sp, #104]
   3d8a0:	ldr	x0, [sp, #104]
   3d8a4:	cmp	x0, #0x0
   3d8a8:	b.ne	3d900 <XS_Unicode__Normalize_getCanon+0x214>  // b.any
   3d8ac:	ldr	x0, [sp, #24]
   3d8b0:	ldr	x1, [x0, #24]
   3d8b4:	ldrsw	x0, [sp, #36]
   3d8b8:	lsl	x0, x0, #3
   3d8bc:	add	x0, x1, x0
   3d8c0:	ldr	x1, [sp, #24]
   3d8c4:	add	x1, x1, #0x150
   3d8c8:	str	x1, [x0]
   3d8cc:	mov	x0, #0x1                   	// #1
   3d8d0:	str	x0, [sp, #112]
   3d8d4:	ldr	x0, [sp, #24]
   3d8d8:	ldr	x1, [x0, #24]
   3d8dc:	ldrsw	x2, [sp, #36]
   3d8e0:	ldr	x0, [sp, #112]
   3d8e4:	add	x0, x2, x0
   3d8e8:	lsl	x0, x0, #3
   3d8ec:	sub	x0, x0, #0x8
   3d8f0:	add	x1, x1, x0
   3d8f4:	ldr	x0, [sp, #24]
   3d8f8:	str	x1, [x0]
   3d8fc:	b	3d990 <XS_Unicode__Normalize_getCanon+0x2a4>
   3d900:	ldr	x0, [sp, #104]
   3d904:	bl	38b70 <strlen@plt>
   3d908:	mov	x2, x0
   3d90c:	ldr	x1, [sp, #104]
   3d910:	ldr	x0, [sp, #24]
   3d914:	bl	38d60 <Perl_newSVpvn@plt>
   3d918:	str	x0, [sp, #48]
   3d91c:	ldr	x0, [sp, #48]
   3d920:	ldr	w0, [x0, #12]
   3d924:	orr	w1, w0, #0x20000000
   3d928:	ldr	x0, [sp, #48]
   3d92c:	str	w1, [x0, #12]
   3d930:	ldr	x1, [sp, #48]
   3d934:	ldr	x0, [sp, #24]
   3d938:	bl	38cb0 <Perl_sv_2mortal@plt>
   3d93c:	str	x0, [sp, #48]
   3d940:	ldr	x0, [sp, #24]
   3d944:	ldr	x1, [x0, #24]
   3d948:	ldrsw	x0, [sp, #36]
   3d94c:	lsl	x0, x0, #3
   3d950:	add	x0, x1, x0
   3d954:	ldr	x1, [sp, #48]
   3d958:	str	x1, [x0]
   3d95c:	mov	x0, #0x1                   	// #1
   3d960:	str	x0, [sp, #120]
   3d964:	ldr	x0, [sp, #24]
   3d968:	ldr	x1, [x0, #24]
   3d96c:	ldrsw	x2, [sp, #36]
   3d970:	ldr	x0, [sp, #120]
   3d974:	add	x0, x2, x0
   3d978:	lsl	x0, x0, #3
   3d97c:	sub	x0, x0, #0x8
   3d980:	add	x1, x1, x0
   3d984:	ldr	x0, [sp, #24]
   3d988:	str	x1, [x0]
   3d98c:	nop
   3d990:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3d994:	ldr	x0, [x0, #4040]
   3d998:	ldr	x1, [sp, #168]
   3d99c:	ldr	x0, [x0]
   3d9a0:	eor	x0, x1, x0
   3d9a4:	cmp	x0, #0x0
   3d9a8:	b.eq	3d9b0 <XS_Unicode__Normalize_getCanon+0x2c4>  // b.none
   3d9ac:	bl	38c20 <__stack_chk_fail@plt>
   3d9b0:	ldp	x29, x30, [sp], #176
   3d9b4:	ret

000000000003d9b8 <XS_Unicode__Normalize_splitOnLastStarter>:
   3d9b8:	stp	x29, x30, [sp, #-128]!
   3d9bc:	mov	x29, sp
   3d9c0:	str	x0, [sp, #24]
   3d9c4:	str	x1, [sp, #16]
   3d9c8:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3d9cc:	ldr	x0, [x0, #4040]
   3d9d0:	ldr	x1, [x0]
   3d9d4:	str	x1, [sp, #120]
   3d9d8:	mov	x1, #0x0                   	// #0
   3d9dc:	ldr	x0, [sp, #24]
   3d9e0:	ldr	x0, [x0]
   3d9e4:	str	x0, [sp, #56]
   3d9e8:	ldr	x0, [sp, #24]
   3d9ec:	bl	38f10 <S_POPMARK>
   3d9f0:	str	w0, [sp, #40]
   3d9f4:	ldr	x0, [sp, #24]
   3d9f8:	ldr	x1, [x0, #24]
   3d9fc:	ldr	w0, [sp, #40]
   3da00:	add	w2, w0, #0x1
   3da04:	str	w2, [sp, #40]
   3da08:	sxtw	x0, w0
   3da0c:	lsl	x0, x0, #3
   3da10:	add	x0, x1, x0
   3da14:	str	x0, [sp, #72]
   3da18:	ldr	x1, [sp, #56]
   3da1c:	ldr	x0, [sp, #72]
   3da20:	sub	x0, x1, x0
   3da24:	asr	x0, x0, #3
   3da28:	str	w0, [sp, #44]
   3da2c:	ldr	w0, [sp, #44]
   3da30:	cmp	w0, #0x1
   3da34:	b.eq	3da48 <XS_Unicode__Normalize_splitOnLastStarter+0x90>  // b.none
   3da38:	adrp	x0, 45000 <_fini+0x6bac>
   3da3c:	add	x1, x0, #0xd88
   3da40:	ldr	x0, [sp, #16]
   3da44:	bl	38c40 <Perl_croak_xs_usage@plt>
   3da48:	ldrsw	x0, [sp, #44]
   3da4c:	lsl	x0, x0, #3
   3da50:	neg	x0, x0
   3da54:	ldr	x1, [sp, #56]
   3da58:	add	x0, x1, x0
   3da5c:	str	x0, [sp, #56]
   3da60:	ldr	x0, [sp, #24]
   3da64:	ldr	x1, [x0, #24]
   3da68:	ldrsw	x0, [sp, #40]
   3da6c:	lsl	x0, x0, #3
   3da70:	add	x0, x1, x0
   3da74:	ldr	x0, [x0]
   3da78:	str	x0, [sp, #80]
   3da7c:	add	x0, sp, #0x30
   3da80:	mov	x2, x0
   3da84:	ldr	x1, [sp, #80]
   3da88:	ldr	x0, [sp, #24]
   3da8c:	bl	3a0f4 <sv_2pvunicode>
   3da90:	str	x0, [sp, #88]
   3da94:	ldr	x0, [sp, #48]
   3da98:	ldr	x1, [sp, #88]
   3da9c:	add	x0, x1, x0
   3daa0:	str	x0, [sp, #96]
   3daa4:	ldr	x0, [sp, #96]
   3daa8:	str	x0, [sp, #64]
   3daac:	b	3db1c <XS_Unicode__Normalize_splitOnLastStarter+0x164>
   3dab0:	mov	x1, #0xffffffffffffffff    	// #-1
   3dab4:	ldr	x0, [sp, #64]
   3dab8:	bl	38f54 <Perl_utf8_hop>
   3dabc:	str	x0, [sp, #64]
   3dac0:	ldr	x1, [sp, #64]
   3dac4:	ldr	x0, [sp, #88]
   3dac8:	cmp	x1, x0
   3dacc:	b.cs	3dadc <XS_Unicode__Normalize_splitOnLastStarter+0x124>  // b.hs, b.nlast
   3dad0:	adrp	x0, 45000 <_fini+0x6bac>
   3dad4:	add	x0, x0, #0xdd8
   3dad8:	bl	38c70 <Perl_croak_nocontext@plt>
   3dadc:	ldr	x1, [sp, #96]
   3dae0:	ldr	x0, [sp, #64]
   3dae4:	sub	x0, x1, x0
   3dae8:	mov	x5, #0x0                   	// #0
   3daec:	mov	x4, #0x0                   	// #0
   3daf0:	mov	w3, #0x0                   	// #0
   3daf4:	mov	x2, #0x0                   	// #0
   3daf8:	mov	x1, x0
   3dafc:	ldr	x0, [sp, #64]
   3db00:	bl	39004 <S_utf8n_to_uvchr_msgs>
   3db04:	str	x0, [sp, #104]
   3db08:	ldr	x0, [sp, #104]
   3db0c:	bl	39ed4 <getCombinClass>
   3db10:	and	w0, w0, #0xff
   3db14:	cmp	w0, #0x0
   3db18:	b.eq	3db30 <XS_Unicode__Normalize_splitOnLastStarter+0x178>  // b.none
   3db1c:	ldr	x1, [sp, #88]
   3db20:	ldr	x0, [sp, #64]
   3db24:	cmp	x1, x0
   3db28:	b.cc	3dab0 <XS_Unicode__Normalize_splitOnLastStarter+0xf8>  // b.lo, b.ul, b.last
   3db2c:	b	3db34 <XS_Unicode__Normalize_splitOnLastStarter+0x17c>
   3db30:	nop
   3db34:	ldr	x1, [sp, #64]
   3db38:	ldr	x0, [sp, #88]
   3db3c:	sub	x0, x1, x0
   3db40:	mov	x2, x0
   3db44:	ldr	x1, [sp, #88]
   3db48:	ldr	x0, [sp, #24]
   3db4c:	bl	38d60 <Perl_newSVpvn@plt>
   3db50:	mov	x1, x0
   3db54:	ldr	x0, [sp, #24]
   3db58:	bl	38cb0 <Perl_sv_2mortal@plt>
   3db5c:	str	x0, [sp, #112]
   3db60:	ldr	x0, [sp, #112]
   3db64:	ldr	w0, [x0, #12]
   3db68:	orr	w1, w0, #0x20000000
   3db6c:	ldr	x0, [sp, #112]
   3db70:	str	w1, [x0, #12]
   3db74:	ldr	x0, [sp, #24]
   3db78:	ldr	x1, [x0, #32]
   3db7c:	ldr	x0, [sp, #56]
   3db80:	sub	x0, x1, x0
   3db84:	cmp	x0, #0x0
   3db88:	cset	w0, le
   3db8c:	and	w0, w0, #0xff
   3db90:	and	x0, x0, #0xff
   3db94:	cmp	x0, #0x0
   3db98:	b.eq	3dbb4 <XS_Unicode__Normalize_splitOnLastStarter+0x1fc>  // b.none
   3db9c:	mov	x3, #0x1                   	// #1
   3dba0:	ldr	x2, [sp, #56]
   3dba4:	ldr	x1, [sp, #56]
   3dba8:	ldr	x0, [sp, #24]
   3dbac:	bl	38bb0 <Perl_stack_grow@plt>
   3dbb0:	str	x0, [sp, #56]
   3dbb4:	ldr	x0, [sp, #56]
   3dbb8:	add	x0, x0, #0x8
   3dbbc:	str	x0, [sp, #56]
   3dbc0:	ldr	x0, [sp, #56]
   3dbc4:	ldr	x1, [sp, #112]
   3dbc8:	str	x1, [x0]
   3dbcc:	ldr	x1, [sp, #96]
   3dbd0:	ldr	x0, [sp, #64]
   3dbd4:	sub	x0, x1, x0
   3dbd8:	mov	x2, x0
   3dbdc:	ldr	x1, [sp, #64]
   3dbe0:	ldr	x0, [sp, #24]
   3dbe4:	bl	38d60 <Perl_newSVpvn@plt>
   3dbe8:	mov	x1, x0
   3dbec:	ldr	x0, [sp, #24]
   3dbf0:	bl	38cb0 <Perl_sv_2mortal@plt>
   3dbf4:	str	x0, [sp, #112]
   3dbf8:	ldr	x0, [sp, #112]
   3dbfc:	ldr	w0, [x0, #12]
   3dc00:	orr	w1, w0, #0x20000000
   3dc04:	ldr	x0, [sp, #112]
   3dc08:	str	w1, [x0, #12]
   3dc0c:	ldr	x0, [sp, #24]
   3dc10:	ldr	x1, [x0, #32]
   3dc14:	ldr	x0, [sp, #56]
   3dc18:	sub	x0, x1, x0
   3dc1c:	cmp	x0, #0x0
   3dc20:	cset	w0, le
   3dc24:	and	w0, w0, #0xff
   3dc28:	and	x0, x0, #0xff
   3dc2c:	cmp	x0, #0x0
   3dc30:	b.eq	3dc4c <XS_Unicode__Normalize_splitOnLastStarter+0x294>  // b.none
   3dc34:	mov	x3, #0x1                   	// #1
   3dc38:	ldr	x2, [sp, #56]
   3dc3c:	ldr	x1, [sp, #56]
   3dc40:	ldr	x0, [sp, #24]
   3dc44:	bl	38bb0 <Perl_stack_grow@plt>
   3dc48:	str	x0, [sp, #56]
   3dc4c:	ldr	x0, [sp, #56]
   3dc50:	add	x0, x0, #0x8
   3dc54:	str	x0, [sp, #56]
   3dc58:	ldr	x0, [sp, #56]
   3dc5c:	ldr	x1, [sp, #112]
   3dc60:	str	x1, [x0]
   3dc64:	ldr	x0, [sp, #24]
   3dc68:	ldr	x1, [sp, #56]
   3dc6c:	str	x1, [x0]
   3dc70:	nop
   3dc74:	adrp	x0, 56000 <__FRAME_END__+0xf784>
   3dc78:	ldr	x0, [x0, #4040]
   3dc7c:	ldr	x1, [sp, #120]
   3dc80:	ldr	x0, [x0]
   3dc84:	eor	x0, x1, x0
   3dc88:	cmp	x0, #0x0
   3dc8c:	b.eq	3dc94 <XS_Unicode__Normalize_splitOnLastStarter+0x2dc>  // b.none
   3dc90:	bl	38c20 <__stack_chk_fail@plt>
   3dc94:	ldp	x29, x30, [sp], #128
   3dc98:	ret

000000000003dc9c <boot_Unicode__Normalize>:
   3dc9c:	stp	x29, x30, [sp, #-256]!
   3dca0:	mov	x29, sp
   3dca4:	str	x0, [sp, #24]
   3dca8:	str	x1, [sp, #16]
   3dcac:	adrp	x0, 45000 <_fini+0x6bac>
   3dcb0:	add	x4, x0, #0xe20
   3dcb4:	adrp	x0, 45000 <_fini+0x6bac>
   3dcb8:	add	x3, x0, #0xe28
   3dcbc:	adrp	x0, 45000 <_fini+0x6bac>
   3dcc0:	add	x2, x0, #0xe30
   3dcc4:	ldr	x1, [sp, #24]
   3dcc8:	mov	w0, #0x4e7                 	// #1255
   3dccc:	movk	w0, #0xd30, lsl #16
   3dcd0:	bl	38d10 <Perl_xs_handshake@plt>
   3dcd4:	str	w0, [sp, #40]
   3dcd8:	ldr	x0, [sp, #24]
   3dcdc:	ldr	x1, [x0, #24]
   3dce0:	ldrsw	x0, [sp, #40]
   3dce4:	lsl	x0, x0, #3
   3dce8:	add	x0, x1, x0
   3dcec:	str	x0, [sp, #48]
   3dcf0:	ldr	x0, [sp, #24]
   3dcf4:	ldr	x0, [x0]
   3dcf8:	str	x0, [sp, #56]
   3dcfc:	ldr	x1, [sp, #56]
   3dd00:	ldr	x0, [sp, #48]
   3dd04:	sub	x0, x1, x0
   3dd08:	asr	x0, x0, #3
   3dd0c:	str	w0, [sp, #44]
   3dd10:	adrp	x0, 45000 <_fini+0x6bac>
   3dd14:	add	x0, x0, #0xe30
   3dd18:	str	x0, [sp, #64]
   3dd1c:	mov	w5, #0x0                   	// #0
   3dd20:	adrp	x0, 45000 <_fini+0x6bac>
   3dd24:	add	x4, x0, #0xe40
   3dd28:	ldr	x3, [sp, #64]
   3dd2c:	adrp	x0, 3a000 <pv_cat_decompHangul+0x90>
   3dd30:	add	x2, x0, #0xfac
   3dd34:	adrp	x0, 45000 <_fini+0x6bac>
   3dd38:	add	x1, x0, #0xe48
   3dd3c:	ldr	x0, [sp, #24]
   3dd40:	bl	38ca0 <Perl_newXS_flags@plt>
   3dd44:	mov	w5, #0x0                   	// #0
   3dd48:	adrp	x0, 45000 <_fini+0x6bac>
   3dd4c:	add	x4, x0, #0x618
   3dd50:	ldr	x3, [sp, #64]
   3dd54:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3dd58:	add	x2, x0, #0x3d4
   3dd5c:	adrp	x0, 45000 <_fini+0x6bac>
   3dd60:	add	x1, x0, #0xe68
   3dd64:	ldr	x0, [sp, #24]
   3dd68:	bl	38ca0 <Perl_newXS_flags@plt>
   3dd6c:	mov	w5, #0x0                   	// #0
   3dd70:	adrp	x0, 45000 <_fini+0x6bac>
   3dd74:	add	x4, x0, #0x618
   3dd78:	ldr	x3, [sp, #64]
   3dd7c:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3dd80:	add	x2, x0, #0x5b8
   3dd84:	adrp	x0, 45000 <_fini+0x6bac>
   3dd88:	add	x1, x0, #0xe88
   3dd8c:	ldr	x0, [sp, #24]
   3dd90:	bl	38ca0 <Perl_newXS_flags@plt>
   3dd94:	str	x0, [sp, #16]
   3dd98:	ldr	x0, [sp, #16]
   3dd9c:	ldr	x0, [x0]
   3dda0:	str	x0, [sp, #72]
   3dda4:	ldr	x0, [sp, #72]
   3dda8:	str	wzr, [x0, #40]
   3ddac:	mov	w5, #0x0                   	// #0
   3ddb0:	adrp	x0, 45000 <_fini+0x6bac>
   3ddb4:	add	x4, x0, #0x618
   3ddb8:	ldr	x3, [sp, #64]
   3ddbc:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3ddc0:	add	x2, x0, #0x5b8
   3ddc4:	adrp	x0, 45000 <_fini+0x6bac>
   3ddc8:	add	x1, x0, #0xea8
   3ddcc:	ldr	x0, [sp, #24]
   3ddd0:	bl	38ca0 <Perl_newXS_flags@plt>
   3ddd4:	str	x0, [sp, #16]
   3ddd8:	ldr	x0, [sp, #16]
   3dddc:	ldr	x0, [x0]
   3dde0:	str	x0, [sp, #80]
   3dde4:	ldr	x0, [sp, #80]
   3dde8:	mov	w1, #0x1                   	// #1
   3ddec:	str	w1, [x0, #40]
   3ddf0:	mov	w5, #0x0                   	// #0
   3ddf4:	adrp	x0, 45000 <_fini+0x6bac>
   3ddf8:	add	x4, x0, #0x618
   3ddfc:	ldr	x3, [sp, #64]
   3de00:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3de04:	add	x2, x0, #0x7c8
   3de08:	adrp	x0, 45000 <_fini+0x6bac>
   3de0c:	add	x1, x0, #0xed0
   3de10:	ldr	x0, [sp, #24]
   3de14:	bl	38ca0 <Perl_newXS_flags@plt>
   3de18:	str	x0, [sp, #16]
   3de1c:	ldr	x0, [sp, #16]
   3de20:	ldr	x0, [x0]
   3de24:	str	x0, [sp, #88]
   3de28:	ldr	x0, [sp, #88]
   3de2c:	str	wzr, [x0, #40]
   3de30:	mov	w5, #0x0                   	// #0
   3de34:	adrp	x0, 45000 <_fini+0x6bac>
   3de38:	add	x4, x0, #0x618
   3de3c:	ldr	x3, [sp, #64]
   3de40:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3de44:	add	x2, x0, #0x7c8
   3de48:	adrp	x0, 45000 <_fini+0x6bac>
   3de4c:	add	x1, x0, #0xee8
   3de50:	ldr	x0, [sp, #24]
   3de54:	bl	38ca0 <Perl_newXS_flags@plt>
   3de58:	str	x0, [sp, #16]
   3de5c:	ldr	x0, [sp, #16]
   3de60:	ldr	x0, [x0]
   3de64:	str	x0, [sp, #96]
   3de68:	ldr	x0, [sp, #96]
   3de6c:	mov	w1, #0x1                   	// #1
   3de70:	str	w1, [x0, #40]
   3de74:	mov	w5, #0x0                   	// #0
   3de78:	adrp	x0, 45000 <_fini+0x6bac>
   3de7c:	add	x4, x0, #0x618
   3de80:	ldr	x3, [sp, #64]
   3de84:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3de88:	add	x2, x0, #0xa44
   3de8c:	adrp	x0, 45000 <_fini+0x6bac>
   3de90:	add	x1, x0, #0xf08
   3de94:	ldr	x0, [sp, #24]
   3de98:	bl	38ca0 <Perl_newXS_flags@plt>
   3de9c:	str	x0, [sp, #16]
   3dea0:	ldr	x0, [sp, #16]
   3dea4:	ldr	x0, [x0]
   3dea8:	str	x0, [sp, #104]
   3deac:	ldr	x0, [sp, #104]
   3deb0:	mov	w1, #0x2                   	// #2
   3deb4:	str	w1, [x0, #40]
   3deb8:	mov	w5, #0x0                   	// #0
   3debc:	adrp	x0, 45000 <_fini+0x6bac>
   3dec0:	add	x4, x0, #0x618
   3dec4:	ldr	x3, [sp, #64]
   3dec8:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3decc:	add	x2, x0, #0xa44
   3ded0:	adrp	x0, 45000 <_fini+0x6bac>
   3ded4:	add	x1, x0, #0xf20
   3ded8:	ldr	x0, [sp, #24]
   3dedc:	bl	38ca0 <Perl_newXS_flags@plt>
   3dee0:	str	x0, [sp, #16]
   3dee4:	ldr	x0, [sp, #16]
   3dee8:	ldr	x0, [x0]
   3deec:	str	x0, [sp, #112]
   3def0:	ldr	x0, [sp, #112]
   3def4:	str	wzr, [x0, #40]
   3def8:	mov	w5, #0x0                   	// #0
   3defc:	adrp	x0, 45000 <_fini+0x6bac>
   3df00:	add	x4, x0, #0x618
   3df04:	ldr	x3, [sp, #64]
   3df08:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3df0c:	add	x2, x0, #0xa44
   3df10:	adrp	x0, 45000 <_fini+0x6bac>
   3df14:	add	x1, x0, #0xf38
   3df18:	ldr	x0, [sp, #24]
   3df1c:	bl	38ca0 <Perl_newXS_flags@plt>
   3df20:	str	x0, [sp, #16]
   3df24:	ldr	x0, [sp, #16]
   3df28:	ldr	x0, [x0]
   3df2c:	str	x0, [sp, #120]
   3df30:	ldr	x0, [sp, #120]
   3df34:	mov	w1, #0x1                   	// #1
   3df38:	str	w1, [x0, #40]
   3df3c:	mov	w5, #0x0                   	// #0
   3df40:	adrp	x0, 45000 <_fini+0x6bac>
   3df44:	add	x4, x0, #0x618
   3df48:	ldr	x3, [sp, #64]
   3df4c:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3df50:	add	x2, x0, #0xd2c
   3df54:	adrp	x0, 45000 <_fini+0x6bac>
   3df58:	add	x1, x0, #0xf58
   3df5c:	ldr	x0, [sp, #24]
   3df60:	bl	38ca0 <Perl_newXS_flags@plt>
   3df64:	str	x0, [sp, #16]
   3df68:	ldr	x0, [sp, #16]
   3df6c:	ldr	x0, [x0]
   3df70:	str	x0, [sp, #128]
   3df74:	ldr	x0, [sp, #128]
   3df78:	str	wzr, [x0, #40]
   3df7c:	mov	w5, #0x0                   	// #0
   3df80:	adrp	x0, 45000 <_fini+0x6bac>
   3df84:	add	x4, x0, #0x618
   3df88:	ldr	x3, [sp, #64]
   3df8c:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3df90:	add	x2, x0, #0xd2c
   3df94:	adrp	x0, 45000 <_fini+0x6bac>
   3df98:	add	x1, x0, #0xf78
   3df9c:	ldr	x0, [sp, #24]
   3dfa0:	bl	38ca0 <Perl_newXS_flags@plt>
   3dfa4:	str	x0, [sp, #16]
   3dfa8:	ldr	x0, [sp, #16]
   3dfac:	ldr	x0, [x0]
   3dfb0:	str	x0, [sp, #136]
   3dfb4:	ldr	x0, [sp, #136]
   3dfb8:	mov	w1, #0x1                   	// #1
   3dfbc:	str	w1, [x0, #40]
   3dfc0:	mov	w5, #0x0                   	// #0
   3dfc4:	adrp	x0, 45000 <_fini+0x6bac>
   3dfc8:	add	x4, x0, #0x618
   3dfcc:	ldr	x3, [sp, #64]
   3dfd0:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3dfd4:	add	x2, x0, #0xfdc
   3dfd8:	adrp	x0, 45000 <_fini+0x6bac>
   3dfdc:	add	x1, x0, #0xf98
   3dfe0:	ldr	x0, [sp, #24]
   3dfe4:	bl	38ca0 <Perl_newXS_flags@plt>
   3dfe8:	str	x0, [sp, #16]
   3dfec:	ldr	x0, [sp, #16]
   3dff0:	ldr	x0, [x0]
   3dff4:	str	x0, [sp, #144]
   3dff8:	ldr	x0, [sp, #144]
   3dffc:	str	wzr, [x0, #40]
   3e000:	mov	w5, #0x0                   	// #0
   3e004:	adrp	x0, 45000 <_fini+0x6bac>
   3e008:	add	x4, x0, #0x618
   3e00c:	ldr	x3, [sp, #64]
   3e010:	adrp	x0, 3b000 <XS_Unicode__Normalize_decompose+0x54>
   3e014:	add	x2, x0, #0xfdc
   3e018:	adrp	x0, 45000 <_fini+0x6bac>
   3e01c:	add	x1, x0, #0xfb8
   3e020:	ldr	x0, [sp, #24]
   3e024:	bl	38ca0 <Perl_newXS_flags@plt>
   3e028:	str	x0, [sp, #16]
   3e02c:	ldr	x0, [sp, #16]
   3e030:	ldr	x0, [x0]
   3e034:	str	x0, [sp, #152]
   3e038:	ldr	x0, [sp, #152]
   3e03c:	mov	w1, #0x1                   	// #1
   3e040:	str	w1, [x0, #40]
   3e044:	mov	w5, #0x0                   	// #0
   3e048:	adrp	x0, 45000 <_fini+0x6bac>
   3e04c:	add	x4, x0, #0x618
   3e050:	ldr	x3, [sp, #64]
   3e054:	adrp	x0, 3c000 <XS_Unicode__Normalize_checkNFC+0x24>
   3e058:	add	x2, x0, #0x380
   3e05c:	adrp	x0, 45000 <_fini+0x6bac>
   3e060:	add	x1, x0, #0xfd8
   3e064:	ldr	x0, [sp, #24]
   3e068:	bl	38ca0 <Perl_newXS_flags@plt>
   3e06c:	str	x0, [sp, #16]
   3e070:	ldr	x0, [sp, #16]
   3e074:	ldr	x0, [x0]
   3e078:	str	x0, [sp, #160]
   3e07c:	ldr	x0, [sp, #160]
   3e080:	mov	w1, #0x1                   	// #1
   3e084:	str	w1, [x0, #40]
   3e088:	mov	w5, #0x0                   	// #0
   3e08c:	adrp	x0, 45000 <_fini+0x6bac>
   3e090:	add	x4, x0, #0x618
   3e094:	ldr	x3, [sp, #64]
   3e098:	adrp	x0, 3c000 <XS_Unicode__Normalize_checkNFC+0x24>
   3e09c:	add	x2, x0, #0x380
   3e0a0:	adrp	x0, 45000 <_fini+0x6bac>
   3e0a4:	add	x1, x0, #0xff8
   3e0a8:	ldr	x0, [sp, #24]
   3e0ac:	bl	38ca0 <Perl_newXS_flags@plt>
   3e0b0:	str	x0, [sp, #16]
   3e0b4:	ldr	x0, [sp, #16]
   3e0b8:	ldr	x0, [x0]
   3e0bc:	str	x0, [sp, #168]
   3e0c0:	ldr	x0, [sp, #168]
   3e0c4:	str	wzr, [x0, #40]
   3e0c8:	mov	w5, #0x0                   	// #0
   3e0cc:	adrp	x0, 45000 <_fini+0x6bac>
   3e0d0:	add	x4, x0, #0x618
   3e0d4:	ldr	x3, [sp, #64]
   3e0d8:	adrp	x0, 3c000 <XS_Unicode__Normalize_checkNFC+0x24>
   3e0dc:	add	x2, x0, #0x7d0
   3e0e0:	adrp	x0, 46000 <_fini+0x7bac>
   3e0e4:	add	x1, x0, #0x18
   3e0e8:	ldr	x0, [sp, #24]
   3e0ec:	bl	38ca0 <Perl_newXS_flags@plt>
   3e0f0:	mov	w5, #0x0                   	// #0
   3e0f4:	adrp	x0, 45000 <_fini+0x6bac>
   3e0f8:	add	x4, x0, #0x618
   3e0fc:	ldr	x3, [sp, #64]
   3e100:	adrp	x0, 3c000 <XS_Unicode__Normalize_checkNFC+0x24>
   3e104:	add	x2, x0, #0xa3c
   3e108:	adrp	x0, 46000 <_fini+0x7bac>
   3e10c:	add	x1, x0, #0x40
   3e110:	ldr	x0, [sp, #24]
   3e114:	bl	38ca0 <Perl_newXS_flags@plt>
   3e118:	mov	w5, #0x0                   	// #0
   3e11c:	adrp	x0, 45000 <_fini+0x6bac>
   3e120:	add	x4, x0, #0x618
   3e124:	ldr	x3, [sp, #64]
   3e128:	adrp	x0, 3c000 <XS_Unicode__Normalize_checkNFC+0x24>
   3e12c:	add	x2, x0, #0xbc0
   3e130:	adrp	x0, 46000 <_fini+0x7bac>
   3e134:	add	x1, x0, #0x60
   3e138:	ldr	x0, [sp, #24]
   3e13c:	bl	38ca0 <Perl_newXS_flags@plt>
   3e140:	mov	w5, #0x0                   	// #0
   3e144:	adrp	x0, 45000 <_fini+0x6bac>
   3e148:	add	x4, x0, #0x618
   3e14c:	ldr	x3, [sp, #64]
   3e150:	adrp	x0, 3c000 <XS_Unicode__Normalize_checkNFC+0x24>
   3e154:	add	x2, x0, #0xd44
   3e158:	adrp	x0, 46000 <_fini+0x7bac>
   3e15c:	add	x1, x0, #0x80
   3e160:	ldr	x0, [sp, #24]
   3e164:	bl	38ca0 <Perl_newXS_flags@plt>
   3e168:	mov	w5, #0x0                   	// #0
   3e16c:	adrp	x0, 45000 <_fini+0x6bac>
   3e170:	add	x4, x0, #0x618
   3e174:	ldr	x3, [sp, #64]
   3e178:	adrp	x0, 3c000 <XS_Unicode__Normalize_checkNFC+0x24>
   3e17c:	add	x2, x0, #0xec8
   3e180:	adrp	x0, 46000 <_fini+0x7bac>
   3e184:	add	x1, x0, #0xa8
   3e188:	ldr	x0, [sp, #24]
   3e18c:	bl	38ca0 <Perl_newXS_flags@plt>
   3e190:	str	x0, [sp, #16]
   3e194:	ldr	x0, [sp, #16]
   3e198:	ldr	x0, [x0]
   3e19c:	str	x0, [sp, #176]
   3e1a0:	ldr	x0, [sp, #176]
   3e1a4:	str	wzr, [x0, #40]
   3e1a8:	mov	w5, #0x0                   	// #0
   3e1ac:	adrp	x0, 45000 <_fini+0x6bac>
   3e1b0:	add	x4, x0, #0x618
   3e1b4:	ldr	x3, [sp, #64]
   3e1b8:	adrp	x0, 3c000 <XS_Unicode__Normalize_checkNFC+0x24>
   3e1bc:	add	x2, x0, #0xec8
   3e1c0:	adrp	x0, 46000 <_fini+0x7bac>
   3e1c4:	add	x1, x0, #0xc8
   3e1c8:	ldr	x0, [sp, #24]
   3e1cc:	bl	38ca0 <Perl_newXS_flags@plt>
   3e1d0:	str	x0, [sp, #16]
   3e1d4:	ldr	x0, [sp, #16]
   3e1d8:	ldr	x0, [x0]
   3e1dc:	str	x0, [sp, #184]
   3e1e0:	ldr	x0, [sp, #184]
   3e1e4:	mov	w1, #0x1                   	// #1
   3e1e8:	str	w1, [x0, #40]
   3e1ec:	mov	w5, #0x0                   	// #0
   3e1f0:	adrp	x0, 45000 <_fini+0x6bac>
   3e1f4:	add	x4, x0, #0x618
   3e1f8:	ldr	x3, [sp, #64]
   3e1fc:	adrp	x0, 3c000 <XS_Unicode__Normalize_checkNFC+0x24>
   3e200:	add	x2, x0, #0xec8
   3e204:	adrp	x0, 46000 <_fini+0x7bac>
   3e208:	add	x1, x0, #0xe8
   3e20c:	ldr	x0, [sp, #24]
   3e210:	bl	38ca0 <Perl_newXS_flags@plt>
   3e214:	str	x0, [sp, #16]
   3e218:	ldr	x0, [sp, #16]
   3e21c:	ldr	x0, [x0]
   3e220:	str	x0, [sp, #192]
   3e224:	ldr	x0, [sp, #192]
   3e228:	mov	w1, #0x2                   	// #2
   3e22c:	str	w1, [x0, #40]
   3e230:	mov	w5, #0x0                   	// #0
   3e234:	adrp	x0, 45000 <_fini+0x6bac>
   3e238:	add	x4, x0, #0x618
   3e23c:	ldr	x3, [sp, #64]
   3e240:	adrp	x0, 3d000 <XS_Unicode__Normalize_isComp2nd+0x138>
   3e244:	add	x2, x0, #0x64
   3e248:	adrp	x0, 46000 <_fini+0x7bac>
   3e24c:	add	x1, x0, #0x110
   3e250:	ldr	x0, [sp, #24]
   3e254:	bl	38ca0 <Perl_newXS_flags@plt>
   3e258:	str	x0, [sp, #16]
   3e25c:	ldr	x0, [sp, #16]
   3e260:	ldr	x0, [x0]
   3e264:	str	x0, [sp, #200]
   3e268:	ldr	x0, [sp, #200]
   3e26c:	str	wzr, [x0, #40]
   3e270:	mov	w5, #0x0                   	// #0
   3e274:	adrp	x0, 45000 <_fini+0x6bac>
   3e278:	add	x4, x0, #0x618
   3e27c:	ldr	x3, [sp, #64]
   3e280:	adrp	x0, 3d000 <XS_Unicode__Normalize_isComp2nd+0x138>
   3e284:	add	x2, x0, #0x64
   3e288:	adrp	x0, 46000 <_fini+0x7bac>
   3e28c:	add	x1, x0, #0x130
   3e290:	ldr	x0, [sp, #24]
   3e294:	bl	38ca0 <Perl_newXS_flags@plt>
   3e298:	str	x0, [sp, #16]
   3e29c:	ldr	x0, [sp, #16]
   3e2a0:	ldr	x0, [x0]
   3e2a4:	str	x0, [sp, #208]
   3e2a8:	ldr	x0, [sp, #208]
   3e2ac:	mov	w1, #0x1                   	// #1
   3e2b0:	str	w1, [x0, #40]
   3e2b4:	mov	w5, #0x0                   	// #0
   3e2b8:	adrp	x0, 45000 <_fini+0x6bac>
   3e2bc:	add	x4, x0, #0x618
   3e2c0:	ldr	x3, [sp, #64]
   3e2c4:	adrp	x0, 3d000 <XS_Unicode__Normalize_isComp2nd+0x138>
   3e2c8:	add	x2, x0, #0x268
   3e2cc:	adrp	x0, 46000 <_fini+0x7bac>
   3e2d0:	add	x1, x0, #0x150
   3e2d4:	ldr	x0, [sp, #24]
   3e2d8:	bl	38ca0 <Perl_newXS_flags@plt>
   3e2dc:	str	x0, [sp, #16]
   3e2e0:	ldr	x0, [sp, #16]
   3e2e4:	ldr	x0, [x0]
   3e2e8:	str	x0, [sp, #216]
   3e2ec:	ldr	x0, [sp, #216]
   3e2f0:	str	wzr, [x0, #40]
   3e2f4:	mov	w5, #0x0                   	// #0
   3e2f8:	adrp	x0, 45000 <_fini+0x6bac>
   3e2fc:	add	x4, x0, #0x618
   3e300:	ldr	x3, [sp, #64]
   3e304:	adrp	x0, 3d000 <XS_Unicode__Normalize_isComp2nd+0x138>
   3e308:	add	x2, x0, #0x268
   3e30c:	adrp	x0, 46000 <_fini+0x7bac>
   3e310:	add	x1, x0, #0x170
   3e314:	ldr	x0, [sp, #24]
   3e318:	bl	38ca0 <Perl_newXS_flags@plt>
   3e31c:	str	x0, [sp, #16]
   3e320:	ldr	x0, [sp, #16]
   3e324:	ldr	x0, [x0]
   3e328:	str	x0, [sp, #224]
   3e32c:	ldr	x0, [sp, #224]
   3e330:	str	wzr, [x0, #40]
   3e334:	mov	w5, #0x0                   	// #0
   3e338:	adrp	x0, 45000 <_fini+0x6bac>
   3e33c:	add	x4, x0, #0x618
   3e340:	ldr	x3, [sp, #64]
   3e344:	adrp	x0, 3d000 <XS_Unicode__Normalize_isComp2nd+0x138>
   3e348:	add	x2, x0, #0x268
   3e34c:	adrp	x0, 46000 <_fini+0x7bac>
   3e350:	add	x1, x0, #0x190
   3e354:	ldr	x0, [sp, #24]
   3e358:	bl	38ca0 <Perl_newXS_flags@plt>
   3e35c:	str	x0, [sp, #16]
   3e360:	ldr	x0, [sp, #16]
   3e364:	ldr	x0, [x0]
   3e368:	str	x0, [sp, #232]
   3e36c:	ldr	x0, [sp, #232]
   3e370:	mov	w1, #0x1                   	// #1
   3e374:	str	w1, [x0, #40]
   3e378:	mov	w5, #0x0                   	// #0
   3e37c:	adrp	x0, 46000 <_fini+0x7bac>
   3e380:	add	x4, x0, #0x1b0
   3e384:	ldr	x3, [sp, #64]
   3e388:	adrp	x0, 3d000 <XS_Unicode__Normalize_isComp2nd+0x138>
   3e38c:	add	x2, x0, #0x4b4
   3e390:	adrp	x0, 46000 <_fini+0x7bac>
   3e394:	add	x1, x0, #0x1b8
   3e398:	ldr	x0, [sp, #24]
   3e39c:	bl	38ca0 <Perl_newXS_flags@plt>
   3e3a0:	mov	w5, #0x0                   	// #0
   3e3a4:	adrp	x0, 45000 <_fini+0x6bac>
   3e3a8:	add	x4, x0, #0x618
   3e3ac:	ldr	x3, [sp, #64]
   3e3b0:	adrp	x0, 3d000 <XS_Unicode__Normalize_isComp2nd+0x138>
   3e3b4:	add	x2, x0, #0x6ec
   3e3b8:	adrp	x0, 46000 <_fini+0x7bac>
   3e3bc:	add	x1, x0, #0x1e0
   3e3c0:	ldr	x0, [sp, #24]
   3e3c4:	bl	38ca0 <Perl_newXS_flags@plt>
   3e3c8:	str	x0, [sp, #16]
   3e3cc:	ldr	x0, [sp, #16]
   3e3d0:	ldr	x0, [x0]
   3e3d4:	str	x0, [sp, #240]
   3e3d8:	ldr	x0, [sp, #240]
   3e3dc:	str	wzr, [x0, #40]
   3e3e0:	mov	w5, #0x0                   	// #0
   3e3e4:	adrp	x0, 45000 <_fini+0x6bac>
   3e3e8:	add	x4, x0, #0x618
   3e3ec:	ldr	x3, [sp, #64]
   3e3f0:	adrp	x0, 3d000 <XS_Unicode__Normalize_isComp2nd+0x138>
   3e3f4:	add	x2, x0, #0x6ec
   3e3f8:	adrp	x0, 46000 <_fini+0x7bac>
   3e3fc:	add	x1, x0, #0x200
   3e400:	ldr	x0, [sp, #24]
   3e404:	bl	38ca0 <Perl_newXS_flags@plt>
   3e408:	str	x0, [sp, #16]
   3e40c:	ldr	x0, [sp, #16]
   3e410:	ldr	x0, [x0]
   3e414:	str	x0, [sp, #248]
   3e418:	ldr	x0, [sp, #248]
   3e41c:	mov	w1, #0x1                   	// #1
   3e420:	str	w1, [x0, #40]
   3e424:	adrp	x0, 3d000 <XS_Unicode__Normalize_isComp2nd+0x138>
   3e428:	add	x2, x0, #0x9b8
   3e42c:	adrp	x0, 46000 <_fini+0x7bac>
   3e430:	add	x1, x0, #0x220
   3e434:	ldr	x0, [sp, #24]
   3e438:	bl	38c90 <Perl_newXS_deffile@plt>
   3e43c:	ldr	w1, [sp, #40]
   3e440:	ldr	x0, [sp, #24]
   3e444:	bl	38bf0 <Perl_xs_boot_epilog@plt>
   3e448:	nop
   3e44c:	ldp	x29, x30, [sp], #256
   3e450:	ret

Disassembly of section .fini:

000000000003e454 <_fini>:
   3e454:	stp	x29, x30, [sp, #-16]!
   3e458:	mov	x29, sp
   3e45c:	ldp	x29, x30, [sp], #16
   3e460:	ret
