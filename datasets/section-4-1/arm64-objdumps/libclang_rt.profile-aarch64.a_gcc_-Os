In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.profile-aarch64.a_gcc_-Os:

GCDAProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <read_32bit_value>:
   0:	adrp	x0, 0 <read_32bit_value>
   4:	add	x2, x0, #0x0
   8:	ldr	w0, [x0]
   c:	cbnz	w0, 24 <read_32bit_value+0x24>
  10:	ldp	x1, x0, [x2, #8]
  14:	ldr	w0, [x0, x1]
  18:	add	x1, x1, #0x4
  1c:	str	x1, [x2, #8]
  20:	ret
  24:	mov	w0, #0xffffffff            	// #-1
  28:	b	20 <read_32bit_value+0x20>

000000000000002c <llvm_writeout_files>:
  2c:	stp	x29, x30, [sp, #-32]!
  30:	adrp	x0, 10 <read_32bit_value+0x10>
  34:	mov	x29, sp
  38:	ldr	x0, [x0]
  3c:	stp	x19, x20, [sp, #16]
  40:	adrp	x20, 0 <read_32bit_value>
  44:	add	x20, x20, #0x0
  48:	ldr	x19, [x0]
  4c:	add	x20, x20, #0x18
  50:	cbnz	x19, 60 <llvm_writeout_files+0x34>
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret
  60:	ldr	x0, [x19]
  64:	cmp	x0, x20
  68:	b.ne	74 <llvm_writeout_files+0x48>  // b.any
  6c:	ldr	x0, [x19, #8]
  70:	blr	x0
  74:	ldr	x19, [x19, #16]
  78:	b	50 <llvm_writeout_files+0x24>

000000000000007c <fn_list_insert>:
  7c:	stp	x29, x30, [sp, #-32]!
  80:	mov	x29, sp
  84:	stp	x19, x20, [sp, #16]
  88:	mov	x20, x1
  8c:	mov	x19, x0
  90:	mov	x0, #0x18                  	// #24
  94:	bl	0 <malloc>
  98:	adrp	x1, 0 <read_32bit_value>
  9c:	add	x1, x1, #0x0
  a0:	add	x1, x1, #0x18
  a4:	stp	x1, x20, [x0]
  a8:	ldr	x1, [x19]
  ac:	str	xzr, [x0, #16]
  b0:	cbnz	x1, c4 <fn_list_insert+0x48>
  b4:	stp	x0, x0, [x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	ret
  c4:	ldr	x1, [x19, #8]
  c8:	str	x0, [x1, #16]
  cc:	str	x0, [x19, #8]
  d0:	b	b8 <fn_list_insert+0x3c>

00000000000000d4 <fn_list_remove>:
  d4:	stp	x29, x30, [sp, #-48]!
  d8:	mov	x29, sp
  dc:	stp	x19, x20, [sp, #16]
  e0:	mov	x19, x0
  e4:	mov	x20, #0x0                   	// #0
  e8:	stp	x21, x22, [sp, #32]
  ec:	adrp	x21, 0 <read_32bit_value>
  f0:	add	x21, x21, #0x0
  f4:	ldr	x0, [x0]
  f8:	add	x21, x21, #0x18
  fc:	cbnz	x0, 110 <fn_list_remove+0x3c>
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x21, x22, [sp, #32]
 108:	ldp	x29, x30, [sp], #48
 10c:	ret
 110:	ldr	x1, [x0]
 114:	ldr	x22, [x0, #16]
 118:	cmp	x1, x21
 11c:	b.ne	150 <fn_list_remove+0x7c>  // b.any
 120:	ldr	x1, [x19]
 124:	cmp	x1, x0
 128:	b.ne	130 <fn_list_remove+0x5c>  // b.any
 12c:	str	x22, [x19]
 130:	ldr	x1, [x19, #8]
 134:	cmp	x1, x0
 138:	b.ne	140 <fn_list_remove+0x6c>  // b.any
 13c:	str	x20, [x19, #8]
 140:	cbz	x20, 148 <fn_list_remove+0x74>
 144:	str	x22, [x20, #16]
 148:	bl	0 <free>
 14c:	mov	x0, x20
 150:	mov	x20, x0
 154:	mov	x0, x22
 158:	b	fc <fn_list_remove+0x28>

000000000000015c <llvm_delete_writeout_function_list>:
 15c:	adrp	x0, 10 <read_32bit_value+0x10>
 160:	ldr	x0, [x0]
 164:	b	d4 <fn_list_remove>

0000000000000168 <llvm_delete_flush_function_list>:
 168:	adrp	x0, 10 <read_32bit_value+0x10>
 16c:	ldr	x0, [x0]
 170:	b	d4 <fn_list_remove>

0000000000000174 <read_le_32bit_value>:
 174:	adrp	x0, 0 <read_32bit_value>
 178:	add	x2, x0, #0x0
 17c:	mov	x1, x0
 180:	ldr	w3, [x0]
 184:	cbnz	w3, 1c4 <read_le_32bit_value+0x50>
 188:	ldp	x3, x5, [x2, #8]
 18c:	mov	w0, #0x0                   	// #0
 190:	mov	x2, #0x0                   	// #0
 194:	add	x5, x5, x3
 198:	ldrb	w4, [x5, x2]
 19c:	lsl	w6, w2, #3
 1a0:	add	x2, x2, #0x1
 1a4:	cmp	x2, #0x4
 1a8:	lsl	w4, w4, w6
 1ac:	orr	w0, w0, w4
 1b0:	b.ne	198 <read_le_32bit_value+0x24>  // b.any
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x4
 1bc:	str	x3, [x1, #8]
 1c0:	ret
 1c4:	mov	w0, #0xffffffff            	// #-1
 1c8:	b	1c0 <read_le_32bit_value+0x4c>

00000000000001cc <resize_write_buffer>:
 1cc:	stp	x29, x30, [sp, #-32]!
 1d0:	adrp	x1, 0 <read_32bit_value>
 1d4:	mov	x29, sp
 1d8:	stp	x19, x20, [sp, #16]
 1dc:	add	x20, x1, #0x0
 1e0:	ldr	w1, [x1]
 1e4:	cbz	w1, 21c <resize_write_buffer+0x50>
 1e8:	ldr	x19, [x20, #8]
 1ec:	ldr	x1, [x20, #32]
 1f0:	add	x0, x0, x19
 1f4:	cmp	x0, x1
 1f8:	b.ls	21c <resize_write_buffer+0x50>  // b.plast
 1fc:	sub	x19, x0, #0x1
 200:	ldr	x0, [x20, #16]
 204:	and	x19, x19, #0xfffffffffffe0000
 208:	add	x19, x19, #0x20, lsl #12
 20c:	mov	x1, x19
 210:	bl	0 <realloc>
 214:	str	x0, [x20, #16]
 218:	str	x19, [x20, #32]
 21c:	ldp	x19, x20, [sp, #16]
 220:	ldp	x29, x30, [sp], #32
 224:	ret

0000000000000228 <write_bytes>:
 228:	stp	x29, x30, [sp, #-48]!
 22c:	mov	x29, sp
 230:	stp	x19, x20, [sp, #16]
 234:	adrp	x19, 0 <read_32bit_value>
 238:	add	x19, x19, #0x0
 23c:	mov	x20, x1
 240:	stp	x21, x22, [sp, #32]
 244:	mov	x22, x0
 248:	mov	x0, x1
 24c:	bl	1cc <resize_write_buffer>
 250:	ldp	x21, x0, [x19, #8]
 254:	mov	x2, x20
 258:	mov	x1, x22
 25c:	add	x20, x21, x20
 260:	add	x0, x0, x21
 264:	bl	0 <memcpy>
 268:	str	x20, [x19, #8]
 26c:	ldp	x19, x20, [sp, #16]
 270:	ldp	x21, x22, [sp, #32]
 274:	ldp	x29, x30, [sp], #48
 278:	ret

000000000000027c <write_32bit_value>:
 27c:	stp	x29, x30, [sp, #-32]!
 280:	mov	x1, #0x4                   	// #4
 284:	mov	x29, sp
 288:	str	w0, [sp, #28]
 28c:	add	x0, sp, #0x1c
 290:	bl	228 <write_bytes>
 294:	ldp	x29, x30, [sp], #32
 298:	ret

000000000000029c <llvm_gcda_start_file>:
 29c:	stp	x29, x30, [sp, #-96]!
 2a0:	mov	x29, sp
 2a4:	stp	x19, x20, [sp, #16]
 2a8:	mov	w20, w2
 2ac:	stp	x21, x22, [sp, #32]
 2b0:	mov	x22, x0
 2b4:	mov	x21, x1
 2b8:	add	x0, sp, #0x54
 2bc:	add	x1, sp, #0x58
 2c0:	stp	x23, x24, [sp, #48]
 2c4:	str	x25, [sp, #64]
 2c8:	bl	0 <lprofGetPathPrefix>
 2cc:	cbnz	x0, 3a8 <llvm_gcda_start_file+0x10c>
 2d0:	mov	x0, x22
 2d4:	bl	0 <strdup>
 2d8:	mov	x19, x0
 2dc:	adrp	x25, 0 <read_32bit_value>
 2e0:	add	x24, x25, #0x0
 2e4:	mov	x0, x19
 2e8:	mov	w1, #0x2                   	// #2
 2ec:	str	wzr, [x25]
 2f0:	mov	x22, x25
 2f4:	str	x19, [x24, #40]
 2f8:	adrp	x19, 0 <read_32bit_value>
 2fc:	bl	0 <open>
 300:	mov	x23, x19
 304:	str	w0, [x19]
 308:	cmn	w0, #0x1
 30c:	b.ne	450 <llvm_gcda_start_file+0x1b4>  // b.any
 310:	mov	w0, #0x1                   	// #1
 314:	str	w0, [x25]
 318:	ldr	x0, [x24, #40]
 31c:	mov	w2, #0x1a4                 	// #420
 320:	mov	w1, #0x42                  	// #66
 324:	bl	0 <open>
 328:	str	w0, [x19]
 32c:	cmn	w0, #0x1
 330:	b.eq	3e0 <llvm_gcda_start_file+0x144>  // b.none
 334:	adrp	x19, 0 <read_32bit_value>
 338:	add	x19, x19, #0x0
 33c:	ldr	w0, [x23]
 340:	bl	0 <lprofLockFd>
 344:	ldr	w0, [x23]
 348:	mov	x1, x19
 34c:	add	x19, x22, #0x0
 350:	bl	0 <fdopen>
 354:	stp	xzr, xzr, [x19, #8]
 358:	ldr	w1, [x22]
 35c:	str	xzr, [x19, #32]
 360:	str	x0, [x19, #48]
 364:	cbz	w1, 45c <llvm_gcda_start_file+0x1c0>
 368:	mov	x0, #0x20000               	// #131072
 36c:	bl	1cc <resize_write_buffer>
 370:	ldr	x0, [x19, #16]
 374:	mov	x2, #0x20000               	// #131072
 378:	mov	w1, #0x0                   	// #0
 37c:	bl	0 <memset>
 380:	mov	x1, #0x4                   	// #4
 384:	adrp	x0, 0 <read_32bit_value>
 388:	add	x0, x0, #0x0
 38c:	bl	228 <write_bytes>
 390:	mov	x1, #0x4                   	// #4
 394:	mov	x0, x21
 398:	bl	228 <write_bytes>
 39c:	mov	w0, w20
 3a0:	bl	27c <write_32bit_value>
 3a4:	b	438 <llvm_gcda_start_file+0x19c>
 3a8:	mov	x23, x0
 3ac:	mov	x0, x22
 3b0:	bl	0 <strlen>
 3b4:	ldr	x24, [sp, #88]
 3b8:	add	x1, x24, #0x2
 3bc:	add	x0, x1, x0
 3c0:	bl	0 <malloc>
 3c4:	mov	x19, x0
 3c8:	ldr	w4, [sp, #84]
 3cc:	mov	x3, x24
 3d0:	mov	x2, x23
 3d4:	mov	x1, x22
 3d8:	bl	0 <lprofApplyPathPrefix>
 3dc:	b	2dc <llvm_gcda_start_file+0x40>
 3e0:	ldr	x0, [x24, #40]
 3e4:	bl	0 <__llvm_profile_recursive_mkdir>
 3e8:	ldr	x0, [x24, #40]
 3ec:	mov	w2, #0x1a4                 	// #420
 3f0:	mov	w1, #0x42                  	// #66
 3f4:	bl	0 <open>
 3f8:	str	w0, [x19]
 3fc:	cmn	w0, #0x1
 400:	b.ne	334 <llvm_gcda_start_file+0x98>  // b.any
 404:	bl	0 <__errno_location>
 408:	ldr	w0, [x0]
 40c:	adrp	x1, 0 <stderr>
 410:	ldr	x20, [x24, #40]
 414:	ldr	x1, [x1]
 418:	ldr	x19, [x1]
 41c:	bl	0 <strerror>
 420:	adrp	x1, 0 <read_32bit_value>
 424:	mov	x3, x0
 428:	mov	x2, x20
 42c:	add	x1, x1, #0x0
 430:	mov	x0, x19
 434:	bl	0 <fprintf>
 438:	ldp	x19, x20, [sp, #16]
 43c:	ldp	x21, x22, [sp, #32]
 440:	ldp	x23, x24, [sp, #48]
 444:	ldr	x25, [sp, #64]
 448:	ldp	x29, x30, [sp], #96
 44c:	ret
 450:	adrp	x19, 0 <read_32bit_value>
 454:	add	x19, x19, #0x0
 458:	b	33c <llvm_gcda_start_file+0xa0>
 45c:	mov	x1, #0x0                   	// #0
 460:	mov	w2, #0x2                   	// #2
 464:	bl	0 <fseek>
 468:	ldr	x0, [x19, #48]
 46c:	bl	0 <ftell>
 470:	str	x0, [x19, #56]
 474:	mov	x1, x0
 478:	cbz	x0, 4d4 <llvm_gcda_start_file+0x238>
 47c:	ldr	w4, [x23]
 480:	mov	x5, #0x0                   	// #0
 484:	mov	w3, #0x1                   	// #1
 488:	mov	w2, #0x3                   	// #3
 48c:	mov	x0, #0x0                   	// #0
 490:	bl	0 <mmap>
 494:	str	x0, [x19, #16]
 498:	cmn	x0, #0x1
 49c:	b.ne	380 <llvm_gcda_start_file+0xe4>  // b.any
 4a0:	bl	0 <__errno_location>
 4a4:	ldr	w0, [x0]
 4a8:	adrp	x1, 0 <stderr>
 4ac:	ldr	x19, [x19, #40]
 4b0:	ldr	x1, [x1]
 4b4:	ldr	x23, [x1]
 4b8:	bl	0 <strerror>
 4bc:	adrp	x1, 0 <read_32bit_value>
 4c0:	mov	x3, x0
 4c4:	mov	x2, x19
 4c8:	add	x1, x1, #0x0
 4cc:	mov	x0, x23
 4d0:	bl	0 <fprintf>
 4d4:	add	x19, x22, #0x0
 4d8:	mov	w0, #0x1                   	// #1
 4dc:	str	w0, [x22]
 4e0:	str	xzr, [x19, #16]
 4e4:	str	xzr, [x19, #32]
 4e8:	b	368 <llvm_gcda_start_file+0xcc>

00000000000004ec <llvm_gcda_increment_indirect_counter>:
 4ec:	ldr	w0, [x0]
 4f0:	cmn	w0, #0x1
 4f4:	b.eq	50c <llvm_gcda_increment_indirect_counter+0x20>  // b.none
 4f8:	ldr	x0, [x1, w0, uxtw #3]
 4fc:	cbz	x0, 50c <llvm_gcda_increment_indirect_counter+0x20>
 500:	ldr	x1, [x0]
 504:	add	x1, x1, #0x1
 508:	str	x1, [x0]
 50c:	ret

0000000000000510 <llvm_gcda_emit_function>:
 510:	stp	x29, x30, [sp, #-80]!
 514:	mov	x29, sp
 518:	stp	x23, x24, [sp, #48]
 51c:	mov	w24, w0
 520:	adrp	x0, 0 <read_32bit_value>
 524:	stp	x19, x20, [sp, #16]
 528:	ldr	x0, [x0]
 52c:	stp	x21, x22, [sp, #32]
 530:	str	x25, [sp, #64]
 534:	ands	w25, w3, #0xff
 538:	cbz	x0, 5fc <llvm_gcda_emit_function+0xec>
 53c:	cset	w20, ne  // ne = any
 540:	mov	x19, x1
 544:	adrp	x21, 0 <read_32bit_value>
 548:	mov	w23, w2
 54c:	mov	w22, w4
 550:	add	w20, w20, #0x2
 554:	add	x0, x21, #0x0
 558:	mov	x1, #0x4                   	// #4
 55c:	bl	228 <write_bytes>
 560:	cbz	x19, 578 <llvm_gcda_emit_function+0x68>
 564:	mov	x0, x19
 568:	add	w20, w20, #0x2
 56c:	bl	0 <strlen>
 570:	lsr	x0, x0, #2
 574:	add	w20, w20, w0
 578:	mov	w0, w20
 57c:	bl	27c <write_32bit_value>
 580:	mov	w0, w24
 584:	bl	27c <write_32bit_value>
 588:	mov	w0, w23
 58c:	bl	27c <write_32bit_value>
 590:	cbz	w25, 59c <llvm_gcda_emit_function+0x8c>
 594:	mov	w0, w22
 598:	bl	27c <write_32bit_value>
 59c:	cbz	x19, 5fc <llvm_gcda_emit_function+0xec>
 5a0:	mov	x0, x19
 5a4:	bl	0 <strlen>
 5a8:	lsr	x0, x0, #2
 5ac:	add	x21, x21, #0x0
 5b0:	add	w0, w0, #0x1
 5b4:	bl	27c <write_32bit_value>
 5b8:	mov	x0, x19
 5bc:	bl	0 <strlen>
 5c0:	mov	x1, x0
 5c4:	mov	x0, x19
 5c8:	bl	228 <write_bytes>
 5cc:	mov	x0, x19
 5d0:	bl	0 <strlen>
 5d4:	and	x0, x0, #0x3
 5d8:	mov	x1, #0x4                   	// #4
 5dc:	sub	x1, x1, x0
 5e0:	add	x0, x21, #0x5
 5e4:	ldp	x19, x20, [sp, #16]
 5e8:	ldp	x21, x22, [sp, #32]
 5ec:	ldp	x23, x24, [sp, #48]
 5f0:	ldr	x25, [sp, #64]
 5f4:	ldp	x29, x30, [sp], #80
 5f8:	b	228 <write_bytes>
 5fc:	ldp	x19, x20, [sp, #16]
 600:	ldp	x21, x22, [sp, #32]
 604:	ldp	x23, x24, [sp, #48]
 608:	ldr	x25, [sp, #64]
 60c:	ldp	x29, x30, [sp], #80
 610:	ret

0000000000000614 <llvm_gcda_emit_arcs>:
 614:	stp	x29, x30, [sp, #-64]!
 618:	mov	x29, sp
 61c:	stp	x21, x22, [sp, #32]
 620:	adrp	x21, 0 <read_32bit_value>
 624:	add	x7, x21, #0x0
 628:	stp	x19, x20, [sp, #16]
 62c:	mov	w19, w0
 630:	ldr	x0, [x7, #48]
 634:	stp	x23, x24, [sp, #48]
 638:	cbz	x0, 774 <llvm_gcda_emit_arcs+0x160>
 63c:	mov	x23, x1
 640:	ldr	x22, [x7, #8]
 644:	bl	174 <read_le_32bit_value>
 648:	mov	w3, w0
 64c:	cmn	w0, #0x1
 650:	b.eq	738 <llvm_gcda_emit_arcs+0x124>  // b.none
 654:	mov	w0, #0x1a10000             	// #27328512
 658:	cmp	w3, w0
 65c:	b.eq	68c <llvm_gcda_emit_arcs+0x78>  // b.none
 660:	ldr	x2, [x7, #40]
 664:	adrp	x1, 0 <read_32bit_value>
 668:	add	x1, x1, #0x0
 66c:	adrp	x0, 0 <stderr>
 670:	ldp	x19, x20, [sp, #16]
 674:	ldr	x0, [x0]
 678:	ldp	x21, x22, [sp, #32]
 67c:	ldp	x23, x24, [sp, #48]
 680:	ldp	x29, x30, [sp], #64
 684:	ldr	x0, [x0]
 688:	b	0 <fprintf>
 68c:	bl	0 <read_32bit_value>
 690:	mov	w3, w0
 694:	cmn	w0, #0x1
 698:	b.eq	6a4 <llvm_gcda_emit_arcs+0x90>  // b.none
 69c:	cmp	w19, w0, lsr #1
 6a0:	b.eq	6b8 <llvm_gcda_emit_arcs+0xa4>  // b.none
 6a4:	add	x21, x21, #0x0
 6a8:	adrp	x1, 0 <read_32bit_value>
 6ac:	add	x1, x1, #0x0
 6b0:	ldr	x2, [x21, #40]
 6b4:	b	66c <llvm_gcda_emit_arcs+0x58>
 6b8:	ubfiz	x0, x19, #3, #32
 6bc:	mov	w24, w19
 6c0:	bl	0 <malloc>
 6c4:	mov	x20, x0
 6c8:	mov	x4, #0x0                   	// #0
 6cc:	cmp	x24, x4
 6d0:	b.ne	71c <llvm_gcda_emit_arcs+0x108>  // b.any
 6d4:	add	x21, x21, #0x0
 6d8:	mov	x1, #0x4                   	// #4
 6dc:	adrp	x0, 0 <read_32bit_value>
 6e0:	add	x0, x0, #0x0
 6e4:	add	x0, x0, #0xa
 6e8:	str	x22, [x21, #8]
 6ec:	mov	x21, #0x0                   	// #0
 6f0:	bl	228 <write_bytes>
 6f4:	lsl	w0, w19, #1
 6f8:	bl	27c <write_32bit_value>
 6fc:	cmp	x19, x21
 700:	b.ne	740 <llvm_gcda_emit_arcs+0x12c>  // b.any
 704:	mov	x0, x20
 708:	ldp	x19, x20, [sp, #16]
 70c:	ldp	x21, x22, [sp, #32]
 710:	ldp	x23, x24, [sp, #48]
 714:	ldp	x29, x30, [sp], #64
 718:	b	0 <free>
 71c:	bl	0 <read_32bit_value>
 720:	mov	w3, w0
 724:	bl	0 <read_32bit_value>
 728:	orr	x3, x3, x0, lsl #32
 72c:	str	x3, [x20, x4, lsl #3]
 730:	add	x4, x4, #0x1
 734:	b	6cc <llvm_gcda_emit_arcs+0xb8>
 738:	mov	x20, #0x0                   	// #0
 73c:	b	6d4 <llvm_gcda_emit_arcs+0xc0>
 740:	ldr	x22, [x23, x21, lsl #3]
 744:	cbz	x20, 76c <llvm_gcda_emit_arcs+0x158>
 748:	ldr	x0, [x20, x21, lsl #3]
 74c:	add	x22, x22, x0
 750:	str	x22, [x23, x21, lsl #3]
 754:	mov	w0, w22
 758:	add	x21, x21, #0x1
 75c:	bl	27c <write_32bit_value>
 760:	lsr	x0, x22, #32
 764:	bl	27c <write_32bit_value>
 768:	b	6fc <llvm_gcda_emit_arcs+0xe8>
 76c:	mov	x0, #0x0                   	// #0
 770:	b	74c <llvm_gcda_emit_arcs+0x138>
 774:	ldp	x19, x20, [sp, #16]
 778:	ldp	x21, x22, [sp, #32]
 77c:	ldp	x23, x24, [sp, #48]
 780:	ldp	x29, x30, [sp], #64
 784:	ret

0000000000000788 <llvm_gcda_summary_info>:
 788:	stp	x29, x30, [sp, #-48]!
 78c:	mov	x29, sp
 790:	stp	x19, x20, [sp, #16]
 794:	adrp	x19, 0 <read_32bit_value>
 798:	add	x7, x19, #0x0
 79c:	ldr	x0, [x7, #48]
 7a0:	str	x21, [sp, #32]
 7a4:	cbz	x0, 89c <llvm_gcda_summary_info+0x114>
 7a8:	ldr	x8, [x7, #8]
 7ac:	bl	174 <read_le_32bit_value>
 7b0:	mov	w3, w0
 7b4:	cmn	w0, #0x1
 7b8:	b.eq	8ac <llvm_gcda_summary_info+0x124>  // b.none
 7bc:	mov	w0, #0xa1000000            	// #-1593835520
 7c0:	cmp	w3, w0
 7c4:	b.eq	7f0 <llvm_gcda_summary_info+0x68>  // b.none
 7c8:	ldr	x2, [x7, #40]
 7cc:	adrp	x1, 0 <read_32bit_value>
 7d0:	add	x1, x1, #0x0
 7d4:	adrp	x0, 0 <stderr>
 7d8:	ldp	x19, x20, [sp, #16]
 7dc:	ldr	x0, [x0]
 7e0:	ldr	x21, [sp, #32]
 7e4:	ldp	x29, x30, [sp], #48
 7e8:	ldr	x0, [x0]
 7ec:	b	0 <fprintf>
 7f0:	bl	0 <read_32bit_value>
 7f4:	mov	w3, w0
 7f8:	cmp	w0, #0x9
 7fc:	b.eq	810 <llvm_gcda_summary_info+0x88>  // b.none
 800:	adrp	x1, 0 <read_32bit_value>
 804:	add	x1, x1, #0x0
 808:	ldr	x2, [x7, #40]
 80c:	b	7d4 <llvm_gcda_summary_info+0x4c>
 810:	bl	0 <read_32bit_value>
 814:	bl	0 <read_32bit_value>
 818:	bl	0 <read_32bit_value>
 81c:	ldr	w1, [x7, #64]
 820:	cmp	w1, #0x0
 824:	cinc	w21, w0, eq  // eq = none
 828:	add	x0, x19, #0x0
 82c:	mov	x1, #0x4                   	// #4
 830:	adrp	x20, 0 <read_32bit_value>
 834:	str	x8, [x0, #8]
 838:	add	x0, x20, #0x0
 83c:	add	x0, x0, #0xf
 840:	bl	228 <write_bytes>
 844:	mov	w0, #0x9                   	// #9
 848:	bl	27c <write_32bit_value>
 84c:	mov	w0, #0x0                   	// #0
 850:	bl	27c <write_32bit_value>
 854:	mov	w0, #0x0                   	// #0
 858:	bl	27c <write_32bit_value>
 85c:	mov	w0, w21
 860:	mov	w21, #0x6                   	// #6
 864:	bl	27c <write_32bit_value>
 868:	mov	w0, #0x0                   	// #0
 86c:	bl	27c <write_32bit_value>
 870:	subs	w21, w21, #0x1
 874:	b.ne	868 <llvm_gcda_summary_info+0xe0>  // b.any
 878:	mov	x1, #0x4                   	// #4
 87c:	add	x20, x20, #0x0
 880:	add	x19, x19, #0x0
 884:	add	x0, x20, #0x14
 888:	bl	228 <write_bytes>
 88c:	mov	w0, #0x0                   	// #0
 890:	bl	27c <write_32bit_value>
 894:	mov	w0, #0x1                   	// #1
 898:	str	w0, [x19, #64]
 89c:	ldp	x19, x20, [sp, #16]
 8a0:	ldr	x21, [sp, #32]
 8a4:	ldp	x29, x30, [sp], #48
 8a8:	ret
 8ac:	mov	w21, #0x1                   	// #1
 8b0:	b	828 <llvm_gcda_summary_info+0xa0>

00000000000008b4 <llvm_gcda_end_file>:
 8b4:	stp	x29, x30, [sp, #-48]!
 8b8:	mov	x29, sp
 8bc:	stp	x19, x20, [sp, #16]
 8c0:	adrp	x19, 0 <read_32bit_value>
 8c4:	add	x20, x19, #0x0
 8c8:	str	x21, [sp, #32]
 8cc:	ldr	x21, [x20, #48]
 8d0:	cbz	x21, 930 <llvm_gcda_end_file+0x7c>
 8d4:	adrp	x0, 0 <read_32bit_value>
 8d8:	add	x0, x0, #0x0
 8dc:	add	x0, x0, #0x19
 8e0:	mov	x1, #0x8                   	// #8
 8e4:	bl	228 <write_bytes>
 8e8:	ldr	w0, [x19]
 8ec:	cbz	w0, 948 <llvm_gcda_end_file+0x94>
 8f0:	ldp	x1, x0, [x20, #8]
 8f4:	mov	x3, x21
 8f8:	mov	x2, #0x1                   	// #1
 8fc:	bl	0 <fwrite>
 900:	ldr	x0, [x20, #16]
 904:	bl	0 <free>
 908:	add	x20, x19, #0x0
 90c:	ldr	x0, [x20, #48]
 910:	bl	0 <fflush>
 914:	adrp	x0, 0 <read_32bit_value>
 918:	ldr	w0, [x0]
 91c:	bl	0 <lprofUnlockFd>
 920:	ldr	x0, [x20, #48]
 924:	bl	0 <fclose>
 928:	str	xzr, [x20, #16]
 92c:	str	xzr, [x20, #48]
 930:	add	x19, x19, #0x0
 934:	ldr	x21, [sp, #32]
 938:	ldr	x0, [x19, #40]
 93c:	ldp	x19, x20, [sp, #16]
 940:	ldp	x29, x30, [sp], #48
 944:	b	0 <free>
 948:	ldr	x0, [x20, #16]
 94c:	mov	w2, #0x4                   	// #4
 950:	ldr	x1, [x20, #56]
 954:	bl	0 <msync>
 958:	cmn	w0, #0x1
 95c:	b.ne	994 <llvm_gcda_end_file+0xe0>  // b.any
 960:	bl	0 <__errno_location>
 964:	ldr	w0, [x0]
 968:	adrp	x1, 0 <stderr>
 96c:	ldr	x20, [x20, #40]
 970:	ldr	x1, [x1]
 974:	ldr	x21, [x1]
 978:	bl	0 <strerror>
 97c:	adrp	x1, 0 <read_32bit_value>
 980:	mov	x3, x0
 984:	mov	x2, x20
 988:	add	x1, x1, #0x0
 98c:	mov	x0, x21
 990:	bl	0 <fprintf>
 994:	add	x20, x19, #0x0
 998:	ldr	x0, [x20, #16]
 99c:	ldr	x1, [x20, #56]
 9a0:	bl	0 <munmap>
 9a4:	str	xzr, [x20, #16]
 9a8:	str	xzr, [x20, #56]
 9ac:	b	908 <llvm_gcda_end_file+0x54>

00000000000009b0 <llvm_register_writeout_function>:
 9b0:	mov	x1, x0
 9b4:	adrp	x0, 10 <read_32bit_value+0x10>
 9b8:	ldr	x0, [x0]
 9bc:	b	7c <fn_list_insert>

00000000000009c0 <llvm_register_flush_function>:
 9c0:	mov	x1, x0
 9c4:	adrp	x0, 10 <read_32bit_value+0x10>
 9c8:	ldr	x0, [x0]
 9cc:	b	7c <fn_list_insert>

00000000000009d0 <__gcov_flush>:
 9d0:	stp	x29, x30, [sp, #-32]!
 9d4:	adrp	x0, 10 <read_32bit_value+0x10>
 9d8:	mov	x29, sp
 9dc:	ldr	x0, [x0]
 9e0:	str	x19, [sp, #16]
 9e4:	ldr	x19, [x0]
 9e8:	cbnz	x19, 9f8 <__gcov_flush+0x28>
 9ec:	ldr	x19, [sp, #16]
 9f0:	ldp	x29, x30, [sp], #32
 9f4:	ret
 9f8:	ldr	x0, [x19, #8]
 9fc:	blr	x0
 a00:	ldr	x19, [x19, #16]
 a04:	b	9e8 <__gcov_flush+0x18>

0000000000000a08 <llvm_gcov_init>:
 a08:	stp	x29, x30, [sp, #-32]!
 a0c:	mov	x29, sp
 a10:	str	x19, [sp, #16]
 a14:	mov	x19, x1
 a18:	cbz	x0, a20 <llvm_gcov_init+0x18>
 a1c:	bl	9b0 <llvm_register_writeout_function>
 a20:	cbz	x19, a2c <llvm_gcov_init+0x24>
 a24:	mov	x0, x19
 a28:	bl	9c0 <llvm_register_flush_function>
 a2c:	adrp	x0, 0 <read_32bit_value>
 a30:	add	x0, x0, #0x0
 a34:	ldr	w1, [x0, #68]
 a38:	cbnz	w1, a70 <llvm_gcov_init+0x68>
 a3c:	mov	w1, #0x1                   	// #1
 a40:	str	w1, [x0, #68]
 a44:	adrp	x0, 168 <llvm_delete_flush_function_list>
 a48:	add	x0, x0, #0x0
 a4c:	bl	0 <atexit>
 a50:	adrp	x0, 15c <llvm_delete_writeout_function_list>
 a54:	add	x0, x0, #0x0
 a58:	bl	0 <atexit>
 a5c:	ldr	x19, [sp, #16]
 a60:	adrp	x0, 2c <llvm_writeout_files>
 a64:	ldp	x29, x30, [sp], #32
 a68:	add	x0, x0, #0x0
 a6c:	b	0 <atexit>
 a70:	ldr	x19, [sp, #16]
 a74:	ldp	x29, x30, [sp], #32
 a78:	ret

InstrProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_get_magic>:
   0:	mov	x0, #0x7281                	// #29313
   4:	movk	x0, #0x6f66, lsl #16
   8:	movk	x0, #0x7072, lsl #32
   c:	movk	x0, #0xff6c, lsl #48
  10:	ret

0000000000000014 <lprofProfileDumped>:
  14:	adrp	x0, 0 <__llvm_profile_get_magic>
  18:	ldr	w0, [x0]
  1c:	ret

0000000000000020 <lprofSetProfileDumped>:
  20:	adrp	x0, 0 <__llvm_profile_get_magic>
  24:	mov	w1, #0x1                   	// #1
  28:	str	w1, [x0]
  2c:	ret

0000000000000030 <__llvm_profile_set_dumped>:
  30:	adrp	x0, 0 <__llvm_profile_get_magic>
  34:	mov	w1, #0x1                   	// #1
  38:	str	w1, [x0]
  3c:	ret

0000000000000040 <__llvm_profile_get_num_padding_bytes>:
  40:	neg	w0, w0
  44:	and	w0, w0, #0x7
  48:	ret

000000000000004c <__llvm_profile_get_version>:
  4c:	adrp	x0, 0 <__llvm_profile_get_magic>
  50:	ldr	x0, [x0]
  54:	ldr	x0, [x0]
  58:	ret

000000000000005c <__llvm_profile_reset_counters>:
  5c:	stp	x29, x30, [sp, #-32]!
  60:	mov	x29, sp
  64:	str	x19, [sp, #16]
  68:	bl	0 <__llvm_profile_begin_counters>
  6c:	mov	x19, x0
  70:	bl	0 <__llvm_profile_end_counters>
  74:	sub	x2, x0, x19
  78:	mov	w1, #0x0                   	// #0
  7c:	mov	x0, x19
  80:	bl	0 <memset>
  84:	bl	0 <__llvm_profile_begin_data>
  88:	mov	x19, x0
  8c:	bl	0 <__llvm_profile_end_data>
  90:	cmp	x19, x0
  94:	b.cc	ac <__llvm_profile_reset_counters+0x50>  // b.lo, b.ul, b.last
  98:	adrp	x0, 0 <__llvm_profile_get_magic>
  9c:	ldr	x19, [sp, #16]
  a0:	str	wzr, [x0]
  a4:	ldp	x29, x30, [sp], #32
  a8:	ret
  ac:	ldr	x4, [x19, #32]
  b0:	cbnz	x4, bc <__llvm_profile_reset_counters+0x60>
  b4:	add	x19, x19, #0x30
  b8:	b	90 <__llvm_profile_reset_counters+0x34>
  bc:	ldrh	w1, [x19, #46]
  c0:	ldrh	w3, [x19, #44]
  c4:	add	x3, x3, x1
  c8:	mov	w1, #0x0                   	// #0
  cc:	mov	w2, w1
  d0:	cmp	x3, w1, uxtw
  d4:	b.ls	b4 <__llvm_profile_reset_counters+0x58>  // b.plast
  d8:	ldr	x2, [x4, x2, lsl #3]
  dc:	cbnz	x2, e8 <__llvm_profile_reset_counters+0x8c>
  e0:	add	w1, w1, #0x1
  e4:	b	cc <__llvm_profile_reset_counters+0x70>
  e8:	str	xzr, [x2, #8]
  ec:	ldr	x2, [x2, #16]
  f0:	b	dc <__llvm_profile_reset_counters+0x80>

InstrProfilingValue.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getValueProfRecordHeaderSize>:
   0:	add	w0, w0, #0xf
   4:	and	w0, w0, #0xfffffff8
   8:	ret

000000000000000c <getFirstValueProfRecord>:
   c:	add	x0, x0, #0x8
  10:	ret

0000000000000014 <getNumValueSitesRT>:
  14:	ldr	x0, [x0]
  18:	add	x1, x0, w1, uxtw #1
  1c:	ldrh	w0, [x1, #44]
  20:	ret

0000000000000024 <getNumValueDataRT>:
  24:	ldr	x3, [x0, #24]
  28:	mov	w2, w1
  2c:	ldr	x3, [x3, w1, uxtw #3]
  30:	cbz	x3, 64 <getNumValueDataRT+0x40>
  34:	ldr	x0, [x0]
  38:	mov	x1, #0x0                   	// #0
  3c:	add	x2, x0, x2, lsl #1
  40:	mov	w0, #0x0                   	// #0
  44:	ldrh	w2, [x2, #44]
  48:	cmp	w2, w1
  4c:	b.hi	54 <getNumValueDataRT+0x30>  // b.pmore
  50:	ret
  54:	ldrb	w4, [x3, x1]
  58:	add	x1, x1, #0x1
  5c:	add	w0, w0, w4
  60:	b	48 <getNumValueDataRT+0x24>
  64:	mov	w0, #0x0                   	// #0
  68:	b	50 <getNumValueDataRT+0x2c>

000000000000006c <getNumValueDataForSiteRT>:
  6c:	ldr	x0, [x0, #24]
  70:	ldr	x0, [x0, w1, uxtw #3]
  74:	ldrb	w0, [x0, w2, uxtw]
  78:	ret

000000000000007c <initializeValueProfRuntimeRecord>:
  7c:	mov	x3, x0
  80:	adrp	x0, 0 <getValueProfRecordHeaderSize>
  84:	add	x2, x0, #0x0
  88:	mov	x4, #0x0                   	// #0
  8c:	str	x3, [x0]
  90:	mov	x10, x2
  94:	add	x3, x3, #0x2c
  98:	mov	w0, #0x0                   	// #0
  9c:	ldur	x7, [x3, #-12]
  a0:	str	x1, [x2, #24]
  a4:	mov	x1, x2
  a8:	mov	w6, #0x0                   	// #0
  ac:	mov	w11, #0xff                  	// #255
  b0:	ldrh	w8, [x3, x4]
  b4:	cbz	w8, e0 <initializeValueProfRuntimeRecord+0x64>
  b8:	add	x2, x7, w6, uxtw #3
  bc:	cmp	x7, #0x0
  c0:	add	w0, w0, #0x1
  c4:	lsl	x12, x4, #2
  c8:	csel	x2, x2, xzr, ne  // ne = any
  cc:	mov	x5, #0x0                   	// #0
  d0:	str	x2, [x1, #8]
  d4:	cmp	w8, w5
  d8:	b.hi	f4 <initializeValueProfRuntimeRecord+0x78>  // b.pmore
  dc:	add	w6, w6, w8
  e0:	add	x4, x4, #0x2
  e4:	add	x1, x1, #0x8
  e8:	cmp	x4, #0x4
  ec:	b.ne	b0 <initializeValueProfRuntimeRecord+0x34>  // b.any
  f0:	ret
  f4:	cbz	x7, 130 <initializeValueProfRuntimeRecord+0xb4>
  f8:	ldr	x2, [x1, #8]
  fc:	ldr	x9, [x2, x5, lsl #3]
 100:	mov	w2, #0x0                   	// #0
 104:	cbnz	x9, 124 <initializeValueProfRuntimeRecord+0xa8>
 108:	ldr	x9, [x10, #24]
 10c:	cmp	w2, #0xff
 110:	csel	w2, w2, w11, ls  // ls = plast
 114:	ldr	x9, [x9, x12]
 118:	strb	w2, [x9, x5]
 11c:	add	x5, x5, #0x1
 120:	b	d4 <initializeValueProfRuntimeRecord+0x58>
 124:	add	w2, w2, #0x1
 128:	ldr	x9, [x9, #16]
 12c:	b	104 <initializeValueProfRuntimeRecord+0x88>
 130:	mov	w2, #0x0                   	// #0
 134:	b	108 <initializeValueProfRuntimeRecord+0x8c>

0000000000000138 <getNextNValueData>:
 138:	mov	w5, w0
 13c:	mov	x0, x3
 140:	cbnz	x3, 158 <getNextNValueData+0x20>
 144:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 148:	add	x0, x0, #0x0
 14c:	add	x5, x0, w5, uxtw #3
 150:	ldr	x0, [x5, #8]
 154:	ldr	x0, [x0, w1, uxtw #3]
 158:	add	x4, x2, w4, uxtw #4
 15c:	cmp	x4, x2
 160:	b.ne	168 <getNextNValueData+0x30>  // b.any
 164:	ret
 168:	ldr	x1, [x0]
 16c:	str	x1, [x2]
 170:	add	x2, x2, #0x10
 174:	ldp	x1, x0, [x0, #8]
 178:	stur	x1, [x2, #-8]
 17c:	b	15c <getNextNValueData+0x24>

0000000000000180 <getNumValueDataForSiteWrapper>:
 180:	mov	w2, w1
 184:	mov	w1, w0
 188:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 18c:	add	x0, x0, #0x0
 190:	b	6c <getNumValueDataForSiteRT>

0000000000000194 <allocateValueProfileCounters>:
 194:	stp	x29, x30, [sp, #-32]!
 198:	mov	x29, sp
 19c:	str	x19, [sp, #16]
 1a0:	mov	x19, x0
 1a4:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 1a8:	add	x1, x0, #0x0
 1ac:	str	wzr, [x0]
 1b0:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 1b4:	ldr	w0, [x0]
 1b8:	cbnz	w0, 1c4 <allocateValueProfileCounters+0x30>
 1bc:	mov	w0, #0xff                  	// #255
 1c0:	str	w0, [x1, #4]
 1c4:	ldrh	w2, [x19, #44]
 1c8:	mov	x1, #0x8                   	// #8
 1cc:	ldrh	w0, [x19, #46]
 1d0:	add	x0, x2, x0
 1d4:	bl	0 <calloc>
 1d8:	mov	x1, x0
 1dc:	cbz	x0, 208 <allocateValueProfileCounters+0x74>
 1e0:	add	x19, x19, #0x20
 1e4:	ldxr	x2, [x19]
 1e8:	cbnz	x2, 1f4 <allocateValueProfileCounters+0x60>
 1ec:	stlxr	w3, x1, [x19]
 1f0:	cbnz	w3, 1e4 <allocateValueProfileCounters+0x50>
 1f4:	dmb	ish
 1f8:	cmp	x2, #0x0
 1fc:	mov	w1, #0x1                   	// #1
 200:	b.eq	20c <allocateValueProfileCounters+0x78>  // b.none
 204:	bl	0 <free>
 208:	mov	w1, #0x0                   	// #0
 20c:	mov	w0, w1
 210:	ldr	x19, [sp, #16]
 214:	ldp	x29, x30, [sp], #32
 218:	ret

000000000000021c <allocateOneNode>:
 21c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 220:	ldr	w0, [x0]
 224:	cbnz	w0, 234 <allocateOneNode+0x18>
 228:	mov	x1, #0x18                  	// #24
 22c:	mov	x0, #0x1                   	// #1
 230:	b	0 <calloc>
 234:	adrp	x0, 0 <CurrentVNode>
 238:	adrp	x2, 0 <EndVNode>
 23c:	add	x1, x0, #0x0
 240:	ldr	x0, [x0]
 244:	ldr	x3, [x2]
 248:	add	x0, x0, #0x18
 24c:	cmp	x3, x0
 250:	b.cs	2a4 <allocateOneNode+0x88>  // b.hs, b.nlast
 254:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 258:	add	x0, x0, #0x0
 25c:	ldr	w1, [x0, #36]
 260:	add	w2, w1, #0x1
 264:	str	w2, [x0, #36]
 268:	cmp	w1, #0x9
 26c:	b.gt	2c8 <allocateOneNode+0xac>
 270:	stp	x29, x30, [sp, #-16]!
 274:	adrp	x0, 0 <stderr>
 278:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 27c:	mov	x29, sp
 280:	ldr	x0, [x0]
 284:	add	x2, x2, #0x0
 288:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 28c:	add	x1, x1, #0x0
 290:	ldr	x0, [x0]
 294:	bl	0 <fprintf>
 298:	mov	x0, #0x0                   	// #0
 29c:	ldp	x29, x30, [sp], #16
 2a0:	ret
 2a4:	ldxr	x0, [x1]
 2a8:	add	x3, x0, #0x18
 2ac:	stlxr	w4, x3, [x1]
 2b0:	cbnz	w4, 2a4 <allocateOneNode+0x88>
 2b4:	dmb	ish
 2b8:	ldr	x2, [x2]
 2bc:	add	x1, x0, #0x18
 2c0:	cmp	x2, x1
 2c4:	b.cs	2d0 <allocateOneNode+0xb4>  // b.hs, b.nlast
 2c8:	mov	x0, #0x0                   	// #0
 2cc:	ret
 2d0:	ret

00000000000002d4 <getValueProfRecordSize>:
 2d4:	add	w0, w0, #0xf
 2d8:	and	w0, w0, #0xfffffff8
 2dc:	add	w0, w0, w1, lsl #4
 2e0:	ret

00000000000002e4 <getValueProfRecordValueData>:
 2e4:	ldr	w1, [x0, #4]
 2e8:	add	w1, w1, #0xf
 2ec:	and	x1, x1, #0xfffffff8
 2f0:	add	x0, x0, x1
 2f4:	ret

00000000000002f8 <getValueProfRecordNumValueData>:
 2f8:	mov	x1, x0
 2fc:	mov	x2, #0x0                   	// #0
 300:	add	x1, x1, #0x8
 304:	mov	w0, #0x0                   	// #0
 308:	ldur	w3, [x1, #-4]
 30c:	cmp	w3, w2
 310:	b.hi	318 <getValueProfRecordNumValueData+0x20>  // b.pmore
 314:	ret
 318:	ldrb	w4, [x1, x2]
 31c:	add	x2, x2, #0x1
 320:	add	w0, w0, w4
 324:	b	30c <getValueProfRecordNumValueData+0x14>

0000000000000328 <getValueProfRecordNext>:
 328:	mov	x5, x0
 32c:	stp	x29, x30, [sp, #-16]!
 330:	mov	x29, sp
 334:	bl	2f8 <getValueProfRecordNumValueData>
 338:	ldr	w1, [x5, #4]
 33c:	ldp	x29, x30, [sp], #16
 340:	add	w1, w1, #0xf
 344:	and	w1, w1, #0xfffffff8
 348:	add	w0, w1, w0, lsl #4
 34c:	add	x0, x5, w0, uxtw
 350:	ret

0000000000000354 <getValueProfDataSize>:
 354:	stp	x29, x30, [sp, #-64]!
 358:	mov	x29, sp
 35c:	str	x23, [sp, #48]
 360:	ldr	x23, [x0]
 364:	stp	x21, x22, [sp, #32]
 368:	mov	x21, x0
 36c:	mov	w22, #0x0                   	// #0
 370:	stp	x19, x20, [sp, #16]
 374:	mov	w20, #0x8                   	// #8
 378:	ldr	x2, [x21, #16]
 37c:	mov	w1, w22
 380:	mov	x0, x23
 384:	blr	x2
 388:	mov	w19, w0
 38c:	cbz	w0, 3b0 <getValueProfDataSize+0x5c>
 390:	ldr	x2, [x21, #24]
 394:	add	w19, w19, #0xf
 398:	and	w19, w19, #0xfffffff8
 39c:	mov	w1, w22
 3a0:	add	w20, w19, w20
 3a4:	mov	x0, x23
 3a8:	blr	x2
 3ac:	add	w20, w20, w0, lsl #4
 3b0:	cbz	w22, 3cc <getValueProfDataSize+0x78>
 3b4:	mov	w0, w20
 3b8:	ldp	x19, x20, [sp, #16]
 3bc:	ldp	x21, x22, [sp, #32]
 3c0:	ldr	x23, [sp, #48]
 3c4:	ldp	x29, x30, [sp], #64
 3c8:	ret
 3cc:	mov	w22, #0x1                   	// #1
 3d0:	b	378 <getValueProfDataSize+0x24>

00000000000003d4 <getValueProfDataSizeWrapper>:
 3d4:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 3d8:	add	x0, x0, #0x0
 3dc:	b	354 <getValueProfDataSize>

00000000000003e0 <serializeValueProfRecordFrom>:
 3e0:	stp	x29, x30, [sp, #-80]!
 3e4:	mov	x29, sp
 3e8:	stp	x19, x20, [sp, #16]
 3ec:	mov	x20, #0x0                   	// #0
 3f0:	stp	x21, x22, [sp, #32]
 3f4:	stp	x23, x24, [sp, #48]
 3f8:	mov	w23, w2
 3fc:	stp	x25, x26, [sp, #64]
 400:	mov	x25, x1
 404:	add	x26, x0, #0x8
 408:	ldr	x24, [x1]
 40c:	str	w2, [x0]
 410:	str	w3, [x0, #4]
 414:	bl	2e4 <getValueProfRecordValueData>
 418:	mov	x22, x0
 41c:	mov	w19, w3
 420:	cmp	x20, x19
 424:	b.ne	440 <serializeValueProfRecordFrom+0x60>  // b.any
 428:	ldp	x19, x20, [sp, #16]
 42c:	ldp	x21, x22, [sp, #32]
 430:	ldp	x23, x24, [sp, #48]
 434:	ldp	x25, x26, [sp, #64]
 438:	ldp	x29, x30, [sp], #80
 43c:	ret
 440:	ldr	x3, [x25, #32]
 444:	mov	w2, w20
 448:	mov	w1, w23
 44c:	mov	x0, x24
 450:	blr	x3
 454:	strb	w0, [x26, x20]
 458:	mov	w21, w0
 45c:	mov	w3, w20
 460:	ldr	x4, [x25, #48]
 464:	ubfiz	x21, x21, #4, #32
 468:	mov	x1, x22
 46c:	mov	w2, w23
 470:	mov	x0, x24
 474:	add	x22, x22, x21
 478:	add	x20, x20, #0x1
 47c:	blr	x4
 480:	b	420 <serializeValueProfRecordFrom+0x40>

0000000000000484 <serializeValueProfDataFrom>:
 484:	stp	x29, x30, [sp, #-48]!
 488:	mov	x29, sp
 48c:	stp	x19, x20, [sp, #16]
 490:	mov	x20, x0
 494:	stp	x21, x22, [sp, #32]
 498:	cbz	x1, 508 <serializeValueProfDataFrom+0x84>
 49c:	ldr	w21, [x1]
 4a0:	mov	x19, x1
 4a4:	ldp	x0, x1, [x20]
 4a8:	str	w21, [x19]
 4ac:	add	x21, x19, #0x8
 4b0:	mov	w22, #0x0                   	// #0
 4b4:	blr	x1
 4b8:	str	w0, [x19, #4]
 4bc:	ldr	x0, [x20]
 4c0:	mov	w1, w22
 4c4:	ldr	x2, [x20, #16]
 4c8:	blr	x2
 4cc:	mov	w3, w0
 4d0:	cbz	w0, 4f0 <serializeValueProfDataFrom+0x6c>
 4d4:	mov	w2, w22
 4d8:	mov	x1, x20
 4dc:	mov	x0, x21
 4e0:	bl	3e0 <serializeValueProfRecordFrom>
 4e4:	mov	x0, x21
 4e8:	bl	328 <getValueProfRecordNext>
 4ec:	mov	x21, x0
 4f0:	cbz	w22, 524 <serializeValueProfDataFrom+0xa0>
 4f4:	mov	x0, x19
 4f8:	ldp	x19, x20, [sp, #16]
 4fc:	ldp	x21, x22, [sp, #32]
 500:	ldp	x29, x30, [sp], #48
 504:	ret
 508:	bl	354 <getValueProfDataSize>
 50c:	mov	w21, w0
 510:	ldr	x1, [x20, #56]
 514:	mov	w0, w0
 518:	blr	x1
 51c:	mov	x19, x0
 520:	b	4a4 <serializeValueProfDataFrom+0x20>
 524:	mov	w22, #0x1                   	// #1
 528:	b	4bc <serializeValueProfDataFrom+0x38>

000000000000052c <lprofSetupValueProfiler>:
 52c:	stp	x29, x30, [sp, #-32]!
 530:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 534:	add	x0, x0, #0x0
 538:	mov	x29, sp
 53c:	str	x19, [sp, #16]
 540:	adrp	x19, 0 <getValueProfRecordHeaderSize>
 544:	bl	0 <getenv>
 548:	cbz	x0, 56c <lprofSetupValueProfiler+0x40>
 54c:	ldrb	w1, [x0]
 550:	cbz	w1, 56c <lprofSetupValueProfiler+0x40>
 554:	bl	0 <atoi>
 558:	add	x1, x19, #0x0
 55c:	str	w0, [x1, #4]
 560:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 564:	mov	w1, #0x1                   	// #1
 568:	str	w1, [x0]
 56c:	add	x19, x19, #0x0
 570:	ldr	w0, [x19, #4]
 574:	cmp	w0, #0xff
 578:	b.ls	584 <lprofSetupValueProfiler+0x58>  // b.plast
 57c:	mov	w0, #0xff                  	// #255
 580:	str	w0, [x19, #4]
 584:	ldr	x19, [sp, #16]
 588:	ldp	x29, x30, [sp], #32
 58c:	ret

0000000000000590 <lprofSetMaxValsPerSite>:
 590:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 594:	str	w0, [x1]
 598:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 59c:	mov	w1, #0x1                   	// #1
 5a0:	str	w1, [x0]
 5a4:	ret

00000000000005a8 <__llvm_profile_set_num_value_sites>:
 5a8:	add	x1, x0, w1, uxtw #1
 5ac:	strh	w2, [x1, #44]
 5b0:	ret

00000000000005b4 <__llvm_profile_iterate_data>:
 5b4:	add	x0, x0, #0x30
 5b8:	ret

00000000000005bc <__llvm_get_function_addr>:
 5bc:	ldr	x0, [x0, #24]
 5c0:	ret

00000000000005c4 <__llvm_profile_instrument_target>:
 5c4:	cbz	x1, 72c <__llvm_profile_instrument_target+0x168>
 5c8:	stp	x29, x30, [sp, #-64]!
 5cc:	mov	x29, sp
 5d0:	stp	x21, x22, [sp, #32]
 5d4:	mov	x21, x0
 5d8:	ldr	x0, [x1, #32]
 5dc:	stp	x19, x20, [sp, #16]
 5e0:	mov	x19, x1
 5e4:	stp	x23, x24, [sp, #48]
 5e8:	mov	w20, w2
 5ec:	cbz	x0, 648 <__llvm_profile_instrument_target+0x84>
 5f0:	ldr	x23, [x19, #32]
 5f4:	ubfiz	x20, x20, #3, #32
 5f8:	mov	w2, #0x0                   	// #0
 5fc:	mov	x4, #0xffffffffffffffff    	// #-1
 600:	add	x24, x23, x20
 604:	mov	x0, #0x0                   	// #0
 608:	ldr	x1, [x23, x20]
 60c:	mov	x19, #0x0                   	// #0
 610:	cbnz	x1, 668 <__llvm_profile_instrument_target+0xa4>
 614:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 618:	add	x3, x1, #0x0
 61c:	mov	x22, x1
 620:	ldr	w3, [x3, #4]
 624:	cmp	w2, w3
 628:	b.cc	6ac <__llvm_profile_instrument_target+0xe8>  // b.lo, b.ul, b.last
 62c:	ldr	x1, [x0, #8]
 630:	cmp	x1, #0x1
 634:	b.hi	6a4 <__llvm_profile_instrument_target+0xe0>  // b.pmore
 638:	mov	x1, #0x1                   	// #1
 63c:	str	x21, [x0]
 640:	str	x1, [x0, #8]
 644:	b	654 <__llvm_profile_instrument_target+0x90>
 648:	mov	x0, x1
 64c:	bl	194 <allocateValueProfileCounters>
 650:	cbnz	w0, 5f0 <__llvm_profile_instrument_target+0x2c>
 654:	ldp	x19, x20, [sp, #16]
 658:	ldp	x21, x22, [sp, #32]
 65c:	ldp	x23, x24, [sp, #48]
 660:	ldp	x29, x30, [sp], #64
 664:	ret
 668:	ldp	x5, x3, [x1]
 66c:	cmp	x21, x5
 670:	b.ne	680 <__llvm_profile_instrument_target+0xbc>  // b.any
 674:	add	x3, x3, #0x1
 678:	str	x3, [x1, #8]
 67c:	b	654 <__llvm_profile_instrument_target+0x90>
 680:	cmp	x4, x3
 684:	b.ls	690 <__llvm_profile_instrument_target+0xcc>  // b.plast
 688:	mov	x4, x3
 68c:	mov	x0, x1
 690:	add	w2, w2, #0x1
 694:	mov	x19, x1
 698:	and	w2, w2, #0xff
 69c:	ldr	x1, [x1, #16]
 6a0:	b	610 <__llvm_profile_instrument_target+0x4c>
 6a4:	sub	x1, x1, #0x1
 6a8:	b	640 <__llvm_profile_instrument_target+0x7c>
 6ac:	bl	21c <allocateOneNode>
 6b0:	cbz	x0, 654 <__llvm_profile_instrument_target+0x90>
 6b4:	ldr	x1, [x0, #8]
 6b8:	add	x1, x1, #0x1
 6bc:	stp	x21, x1, [x0]
 6c0:	ldr	x1, [x23, x20]
 6c4:	cbnz	x1, 6ec <__llvm_profile_instrument_target+0x128>
 6c8:	ldxr	x1, [x24]
 6cc:	cbnz	x1, 6d8 <__llvm_profile_instrument_target+0x114>
 6d0:	stlxr	w2, x0, [x24]
 6d4:	cbnz	w2, 6c8 <__llvm_profile_instrument_target+0x104>
 6d8:	cmp	x1, #0x0
 6dc:	dmb	ish
 6e0:	cset	w1, eq  // eq = none
 6e4:	cbnz	w1, 654 <__llvm_profile_instrument_target+0x90>
 6e8:	b	6f0 <__llvm_profile_instrument_target+0x12c>
 6ec:	cbnz	x19, 70c <__llvm_profile_instrument_target+0x148>
 6f0:	ldr	w1, [x22]
 6f4:	cbnz	w1, 654 <__llvm_profile_instrument_target+0x90>
 6f8:	ldp	x19, x20, [sp, #16]
 6fc:	ldp	x21, x22, [sp, #32]
 700:	ldp	x23, x24, [sp, #48]
 704:	ldp	x29, x30, [sp], #64
 708:	b	0 <free>
 70c:	ldr	x1, [x19, #16]
 710:	cbnz	x1, 6f0 <__llvm_profile_instrument_target+0x12c>
 714:	add	x19, x19, #0x10
 718:	ldxr	x1, [x19]
 71c:	cbnz	x1, 6d8 <__llvm_profile_instrument_target+0x114>
 720:	stlxr	w2, x0, [x19]
 724:	cbz	w2, 6d8 <__llvm_profile_instrument_target+0x114>
 728:	b	718 <__llvm_profile_instrument_target+0x154>
 72c:	ret

0000000000000730 <__llvm_profile_instrument_target_value>:
 730:	cbz	x1, 8a8 <__llvm_profile_instrument_target_value+0x178>
 734:	stp	x29, x30, [sp, #-80]!
 738:	mov	x29, sp
 73c:	stp	x19, x20, [sp, #16]
 740:	mov	x19, x3
 744:	stp	x21, x22, [sp, #32]
 748:	stp	x23, x24, [sp, #48]
 74c:	str	x25, [sp, #64]
 750:	cbz	x3, 7c4 <__llvm_profile_instrument_target_value+0x94>
 754:	mov	x22, x0
 758:	mov	x20, x1
 75c:	ldr	x0, [x1, #32]
 760:	mov	w21, w2
 764:	cbz	x0, 7b8 <__llvm_profile_instrument_target_value+0x88>
 768:	ldr	x24, [x20, #32]
 76c:	ubfiz	x21, x21, #3, #32
 770:	mov	w2, #0x0                   	// #0
 774:	mov	x4, #0xffffffffffffffff    	// #-1
 778:	add	x25, x24, x21
 77c:	mov	x0, #0x0                   	// #0
 780:	ldr	x1, [x24, x21]
 784:	mov	x20, #0x0                   	// #0
 788:	cbnz	x1, 7dc <__llvm_profile_instrument_target_value+0xac>
 78c:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 790:	add	x3, x1, #0x0
 794:	mov	x23, x1
 798:	ldr	w3, [x3, #4]
 79c:	cmp	w2, w3
 7a0:	b.cc	824 <__llvm_profile_instrument_target_value+0xf4>  // b.lo, b.ul, b.last
 7a4:	ldr	x3, [x0, #8]
 7a8:	cmp	x19, x3
 7ac:	b.cc	818 <__llvm_profile_instrument_target_value+0xe8>  // b.lo, b.ul, b.last
 7b0:	stp	x22, x19, [x0]
 7b4:	b	7c4 <__llvm_profile_instrument_target_value+0x94>
 7b8:	mov	x0, x1
 7bc:	bl	194 <allocateValueProfileCounters>
 7c0:	cbnz	w0, 768 <__llvm_profile_instrument_target_value+0x38>
 7c4:	ldp	x19, x20, [sp, #16]
 7c8:	ldp	x21, x22, [sp, #32]
 7cc:	ldp	x23, x24, [sp, #48]
 7d0:	ldr	x25, [sp, #64]
 7d4:	ldp	x29, x30, [sp], #80
 7d8:	ret
 7dc:	ldp	x5, x3, [x1]
 7e0:	cmp	x22, x5
 7e4:	b.ne	7f4 <__llvm_profile_instrument_target_value+0xc4>  // b.any
 7e8:	add	x19, x19, x3
 7ec:	str	x19, [x1, #8]
 7f0:	b	7c4 <__llvm_profile_instrument_target_value+0x94>
 7f4:	cmp	x4, x3
 7f8:	b.ls	804 <__llvm_profile_instrument_target_value+0xd4>  // b.plast
 7fc:	mov	x4, x3
 800:	mov	x0, x1
 804:	add	w2, w2, #0x1
 808:	mov	x20, x1
 80c:	and	w2, w2, #0xff
 810:	ldr	x1, [x1, #16]
 814:	b	788 <__llvm_profile_instrument_target_value+0x58>
 818:	sub	x3, x3, x19
 81c:	str	x3, [x0, #8]
 820:	b	7c4 <__llvm_profile_instrument_target_value+0x94>
 824:	bl	21c <allocateOneNode>
 828:	cbz	x0, 7c4 <__llvm_profile_instrument_target_value+0x94>
 82c:	ldr	x3, [x0, #8]
 830:	ldr	x1, [x24, x21]
 834:	add	x19, x3, x19
 838:	stp	x22, x19, [x0]
 83c:	cbnz	x1, 864 <__llvm_profile_instrument_target_value+0x134>
 840:	ldxr	x1, [x25]
 844:	cbnz	x1, 850 <__llvm_profile_instrument_target_value+0x120>
 848:	stlxr	w2, x0, [x25]
 84c:	cbnz	w2, 840 <__llvm_profile_instrument_target_value+0x110>
 850:	cmp	x1, #0x0
 854:	dmb	ish
 858:	cset	w1, eq  // eq = none
 85c:	cbnz	w1, 7c4 <__llvm_profile_instrument_target_value+0x94>
 860:	b	868 <__llvm_profile_instrument_target_value+0x138>
 864:	cbnz	x20, 888 <__llvm_profile_instrument_target_value+0x158>
 868:	ldr	w1, [x23]
 86c:	cbnz	w1, 7c4 <__llvm_profile_instrument_target_value+0x94>
 870:	ldp	x19, x20, [sp, #16]
 874:	ldp	x21, x22, [sp, #32]
 878:	ldp	x23, x24, [sp, #48]
 87c:	ldr	x25, [sp, #64]
 880:	ldp	x29, x30, [sp], #80
 884:	b	0 <free>
 888:	ldr	x1, [x20, #16]
 88c:	cbnz	x1, 868 <__llvm_profile_instrument_target_value+0x138>
 890:	add	x20, x20, #0x10
 894:	ldxr	x1, [x20]
 898:	cbnz	x1, 850 <__llvm_profile_instrument_target_value+0x120>
 89c:	stlxr	w2, x0, [x20]
 8a0:	cbz	w2, 850 <__llvm_profile_instrument_target_value+0x120>
 8a4:	b	894 <__llvm_profile_instrument_target_value+0x164>
 8a8:	ret

00000000000008ac <__llvm_profile_instrument_range>:
 8ac:	mov	x6, #0x8000000000000000    	// #-9223372036854775808
 8b0:	cmp	x5, x6
 8b4:	ccmp	x0, x5, #0x1, ne  // ne = any
 8b8:	b.lt	8c4 <__llvm_profile_instrument_range+0x18>  // b.tstop
 8bc:	mov	x0, x5
 8c0:	b	5c4 <__llvm_profile_instrument_target>
 8c4:	cmp	x0, x3
 8c8:	ccmp	x0, x4, #0x0, ge  // ge = tcont
 8cc:	add	x4, x4, #0x1
 8d0:	csel	x0, x4, x0, gt
 8d4:	b	8c0 <__llvm_profile_instrument_range+0x14>

00000000000008d8 <lprofGetVPDataReader>:
 8d8:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 8dc:	add	x0, x0, #0x0
 8e0:	add	x0, x0, #0x40
 8e4:	ret

InstrProfilingBuffer.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_is_continuous_mode_enabled>:
   0:	adrp	x0, 0 <__llvm_profile_is_continuous_mode_enabled>
   4:	ldr	w0, [x0]
   8:	ret

000000000000000c <__llvm_profile_enable_continuous_mode>:
   c:	adrp	x0, 0 <__llvm_profile_is_continuous_mode_enabled>
  10:	mov	w1, #0x1                   	// #1
  14:	str	w1, [x0]
  18:	ret

000000000000001c <__llvm_profile_get_data_size>:
  1c:	add	x1, x1, #0x2f
  20:	sub	x1, x1, x0
  24:	mov	x0, #0x30                  	// #48
  28:	udiv	x0, x1, x0
  2c:	ret

0000000000000030 <__llvm_profile_get_padding_sizes_for_counters>:
  30:	stp	x29, x30, [sp, #-64]!
  34:	mov	x29, sp
  38:	stp	x19, x20, [sp, #16]
  3c:	mov	x19, x0
  40:	adrp	x0, 0 <__llvm_profile_is_continuous_mode_enabled>
  44:	stp	x21, x22, [sp, #32]
  48:	mov	x20, x5
  4c:	ldr	w0, [x0]
  50:	stp	x23, x24, [sp, #48]
  54:	mov	x22, x2
  58:	mov	x24, x3
  5c:	mov	x23, x4
  60:	cbnz	w0, 90 <__llvm_profile_get_padding_sizes_for_counters+0x60>
  64:	str	xzr, [x3]
  68:	mov	x0, x2
  6c:	str	xzr, [x4]
  70:	bl	0 <__llvm_profile_get_num_padding_bytes>
  74:	and	x0, x0, #0xff
  78:	str	x0, [x20]
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x21, x22, [sp, #32]
  84:	ldp	x23, x24, [sp, #48]
  88:	ldp	x29, x30, [sp], #64
  8c:	ret
  90:	mov	x21, x1
  94:	bl	0 <getpagesize>
  98:	mov	w6, w0
  9c:	mov	x0, #0x30                  	// #48
  a0:	lsl	x5, x21, #3
  a4:	mul	x0, x19, x0
  a8:	add	x0, x0, #0x50
  ac:	udiv	x1, x0, x6
  b0:	msub	x0, x1, x6, x0
  b4:	cbz	x0, bc <__llvm_profile_get_padding_sizes_for_counters+0x8c>
  b8:	sub	x0, x6, x0
  bc:	udiv	x1, x5, x6
  c0:	str	x0, [x24]
  c4:	msub	x1, x1, x6, x5
  c8:	cbz	x1, d0 <__llvm_profile_get_padding_sizes_for_counters+0xa0>
  cc:	sub	x1, x6, x1
  d0:	udiv	x0, x22, x6
  d4:	str	x1, [x23]
  d8:	msub	x2, x0, x6, x22
  dc:	cbz	x2, e4 <__llvm_profile_get_padding_sizes_for_counters+0xb4>
  e0:	sub	x2, x6, x2
  e4:	str	x2, [x20]
  e8:	b	7c <__llvm_profile_get_padding_sizes_for_counters+0x4c>

00000000000000ec <__llvm_profile_get_size_for_buffer_internal>:
  ec:	stp	x29, x30, [sp, #-80]!
  f0:	add	x1, x1, #0x2f
  f4:	sub	x1, x1, x0
  f8:	mov	x29, sp
  fc:	stp	x21, x22, [sp, #32]
 100:	mov	x22, #0x30                  	// #48
 104:	sub	x21, x5, x4
 108:	stp	x19, x20, [sp, #16]
 10c:	sub	x20, x3, x2
 110:	add	x5, sp, #0x48
 114:	udiv	x19, x1, x22
 118:	add	x4, sp, #0x40
 11c:	add	x3, sp, #0x38
 120:	mov	x2, x21
 124:	asr	x1, x20, #3
 128:	mov	x0, x19
 12c:	bl	30 <__llvm_profile_get_padding_sizes_for_counters>
 130:	ldp	x0, x1, [sp, #56]
 134:	madd	x19, x19, x22, x21
 138:	ldr	x2, [sp, #72]
 13c:	ldp	x21, x22, [sp, #32]
 140:	add	x2, x2, #0x50
 144:	add	x0, x0, x1
 148:	add	x0, x0, x2
 14c:	add	x0, x0, x19
 150:	add	x0, x0, x20
 154:	ldp	x19, x20, [sp, #16]
 158:	ldp	x29, x30, [sp], #80
 15c:	ret

0000000000000160 <__llvm_profile_get_size_for_buffer>:
 160:	stp	x29, x30, [sp, #-64]!
 164:	mov	x29, sp
 168:	stp	x19, x20, [sp, #16]
 16c:	stp	x21, x22, [sp, #32]
 170:	str	x23, [sp, #48]
 174:	bl	0 <__llvm_profile_begin_data>
 178:	mov	x19, x0
 17c:	bl	0 <__llvm_profile_end_data>
 180:	mov	x20, x0
 184:	bl	0 <__llvm_profile_begin_counters>
 188:	mov	x21, x0
 18c:	bl	0 <__llvm_profile_end_counters>
 190:	mov	x22, x0
 194:	bl	0 <__llvm_profile_begin_names>
 198:	mov	x23, x0
 19c:	bl	0 <__llvm_profile_end_names>
 1a0:	mov	x4, x23
 1a4:	mov	x5, x0
 1a8:	mov	x3, x22
 1ac:	mov	x2, x21
 1b0:	mov	x1, x20
 1b4:	mov	x0, x19
 1b8:	ldp	x19, x20, [sp, #16]
 1bc:	ldp	x21, x22, [sp, #32]
 1c0:	ldr	x23, [sp, #48]
 1c4:	ldp	x29, x30, [sp], #64
 1c8:	b	ec <__llvm_profile_get_size_for_buffer_internal>

00000000000001cc <initBufferWriter>:
 1cc:	adrp	x2, 0 <lprofBufferWriter>
 1d0:	ldr	x2, [x2]
 1d4:	stp	x2, x1, [x0]
 1d8:	ret

00000000000001dc <__llvm_profile_write_buffer>:
 1dc:	stp	x29, x30, [sp, #-32]!
 1e0:	adrp	x1, 0 <lprofBufferWriter>
 1e4:	mov	w2, #0x0                   	// #0
 1e8:	mov	x29, sp
 1ec:	ldr	x1, [x1]
 1f0:	stp	x1, x0, [sp, #16]
 1f4:	add	x0, sp, #0x10
 1f8:	mov	x1, #0x0                   	// #0
 1fc:	bl	0 <lprofWriteData>
 200:	ldp	x29, x30, [sp], #32
 204:	ret

0000000000000208 <__llvm_profile_write_buffer_internal>:
 208:	sub	sp, sp, #0x30
 20c:	adrp	x8, 0 <lprofBufferWriter>
 210:	mov	x7, x6
 214:	mov	x6, x5
 218:	mov	x5, #0x0                   	// #0
 21c:	stp	x29, x30, [sp, #16]
 220:	add	x29, sp, #0x10
 224:	ldr	x8, [x8]
 228:	str	wzr, [sp]
 22c:	stp	x8, x0, [sp, #32]
 230:	add	x0, sp, #0x20
 234:	bl	0 <lprofWriteDataImpl>
 238:	ldp	x29, x30, [sp, #16]
 23c:	add	sp, sp, #0x30
 240:	ret

InstrProfilingFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getPNSStr>:
       0:	sub	w0, w0, #0x1
       4:	cmp	w0, #0x3
       8:	b.hi	48 <getPNSStr+0x48>  // b.pmore
       c:	adrp	x1, 0 <getPNSStr>
      10:	add	x1, x1, #0x0
      14:	ldrb	w0, [x1, w0, uxtw]
      18:	adr	x1, 24 <getPNSStr+0x24>
      1c:	add	x0, x1, w0, sxtb #2
      20:	br	x0
      24:	adrp	x0, 0 <getPNSStr>
      28:	add	x0, x0, #0x0
      2c:	ret
      30:	adrp	x0, 0 <getPNSStr>
      34:	add	x0, x0, #0x0
      38:	b	2c <getPNSStr+0x2c>
      3c:	adrp	x0, 0 <getPNSStr>
      40:	add	x0, x0, #0x0
      44:	b	2c <getPNSStr+0x2c>
      48:	adrp	x0, 0 <getPNSStr>
      4c:	add	x0, x0, #0x0
      50:	b	2c <getPNSStr+0x2c>
      54:	adrp	x0, 0 <getPNSStr>
      58:	add	x0, x0, #0x0
      5c:	b	2c <getPNSStr+0x2c>

0000000000000060 <doMerging>:
      60:	adrp	x0, 0 <getPNSStr>
      64:	add	x1, x0, #0x0
      68:	ldr	w0, [x0]
      6c:	ldr	w1, [x1, #184]
      70:	orr	w0, w0, w1
      74:	cmp	w0, #0x0
      78:	cset	w0, ne  // ne = any
      7c:	ret

0000000000000080 <getMergePoolSize>:
      80:	ldr	w3, [x1]
      84:	mov	w2, #0x0                   	// #0
      88:	mov	w6, #0xa                   	// #10
      8c:	ldrb	w4, [x0, w3, uxtw]
      90:	cmp	w4, #0x6d
      94:	b.ne	a8 <getMergePoolSize+0x28>  // b.any
      98:	cmp	w2, #0x0
      9c:	str	w3, [x1]
      a0:	csinc	w0, w2, wzr, ne  // ne = any
      a4:	ret
      a8:	sub	w5, w4, #0x30
      ac:	add	w3, w3, #0x1
      b0:	and	w5, w5, #0xff
      b4:	cmp	w5, #0x9
      b8:	b.hi	c8 <getMergePoolSize+0x48>  // b.pmore
      bc:	madd	w2, w2, w6, w4
      c0:	sub	w2, w2, #0x30
      c4:	b	8c <getMergePoolSize+0xc>
      c8:	mov	w0, #0x0                   	// #0
      cc:	b	a4 <getMergePoolSize+0x24>

00000000000000d0 <fileWriter>:
      d0:	stp	x29, x30, [sp, #-96]!
      d4:	mov	x29, sp
      d8:	stp	x21, x22, [sp, #32]
      dc:	ldr	x22, [x0, #8]
      e0:	mov	w0, #0x20                  	// #32
      e4:	stp	x19, x20, [sp, #16]
      e8:	mov	x19, x1
      ec:	umaddl	x21, w2, w0, x1
      f0:	str	x25, [sp, #64]
      f4:	add	x25, sp, #0x58
      f8:	stp	x23, x24, [sp, #48]
      fc:	mov	x24, #0x8                   	// #8
     100:	str	xzr, [sp, #88]
     104:	cmp	x19, x21
     108:	b.ne	114 <fileWriter+0x44>  // b.any
     10c:	mov	w0, #0x0                   	// #0
     110:	b	194 <fileWriter+0xc4>
     114:	ldp	x0, x1, [x19]
     118:	ldr	x2, [x19, #16]
     11c:	cbz	x0, 13c <fileWriter+0x6c>
     120:	mov	x3, x22
     124:	bl	0 <fwrite>
     128:	ldr	x1, [x19, #16]
     12c:	cmp	x0, x1
     130:	b.ne	190 <fileWriter+0xc0>  // b.any
     134:	add	x19, x19, #0x20
     138:	b	104 <fileWriter+0x34>
     13c:	ldr	w0, [x19, #24]
     140:	mul	x20, x1, x2
     144:	cbz	w0, 178 <fileWriter+0xa8>
     148:	cbz	x20, 134 <fileWriter+0x64>
     14c:	cmp	x20, #0x8
     150:	mov	x3, x22
     154:	csel	x23, x20, x24, ls  // ls = plast
     158:	mov	x0, x25
     15c:	mov	x2, x23
     160:	mov	x1, #0x1                   	// #1
     164:	bl	0 <fwrite>
     168:	cmp	x0, x23
     16c:	b.ne	190 <fileWriter+0xc0>  // b.any
     170:	sub	x20, x20, x0
     174:	b	148 <fileWriter+0x78>
     178:	mov	x1, x20
     17c:	mov	x0, x22
     180:	mov	w2, #0x1                   	// #1
     184:	bl	0 <fseek>
     188:	cmn	w0, #0x1
     18c:	b.ne	134 <fileWriter+0x64>  // b.any
     190:	mov	w0, #0x1                   	// #1
     194:	ldp	x19, x20, [sp, #16]
     198:	ldp	x21, x22, [sp, #32]
     19c:	ldp	x23, x24, [sp, #48]
     1a0:	ldr	x25, [sp, #64]
     1a4:	ldp	x29, x30, [sp], #96
     1a8:	ret

00000000000001ac <getCurFilenameLength>:
     1ac:	stp	x29, x30, [sp, #-64]!
     1b0:	mov	x29, sp
     1b4:	stp	x19, x20, [sp, #16]
     1b8:	adrp	x20, 0 <getPNSStr>
     1bc:	add	x0, x20, #0x0
     1c0:	stp	x21, x22, [sp, #32]
     1c4:	add	x21, x0, #0x8
     1c8:	ldr	x0, [x0, #8]
     1cc:	str	x23, [sp, #48]
     1d0:	cbz	x0, 248 <getCurFilenameLength+0x9c>
     1d4:	ldrb	w1, [x0]
     1d8:	cbz	w1, 248 <getCurFilenameLength+0x9c>
     1dc:	bl	0 <strlen>
     1e0:	mov	x19, x0
     1e4:	ldr	x0, [x21, #168]
     1e8:	ldr	w22, [x21, #176]
     1ec:	cbnz	x0, 20c <getCurFilenameLength+0x60>
     1f0:	cbnz	w22, 20c <getCurFilenameLength+0x60>
     1f4:	mov	w0, w19
     1f8:	ldp	x19, x20, [sp, #16]
     1fc:	ldp	x21, x22, [sp, #32]
     200:	ldr	x23, [sp, #48]
     204:	ldp	x29, x30, [sp], #64
     208:	ret
     20c:	add	x20, x20, #0x0
     210:	add	x0, x20, #0x30
     214:	bl	0 <strlen>
     218:	mov	x21, x0
     21c:	add	x0, x20, #0x20
     220:	bl	0 <strlen>
     224:	sub	x2, x0, #0x2
     228:	ldp	w0, w1, [x20, #176]
     22c:	sub	x21, x21, #0x2
     230:	mul	w0, w0, w2
     234:	madd	w21, w1, w21, w0
     238:	add	w0, w21, w19
     23c:	cbz	w22, 1f8 <getCurFilenameLength+0x4c>
     240:	add	w0, w0, #0x18
     244:	b	1f8 <getCurFilenameLength+0x4c>
     248:	mov	w0, #0x0                   	// #0
     24c:	b	1f8 <getCurFilenameLength+0x4c>

0000000000000250 <getCurFilename>:
     250:	stp	x29, x30, [sp, #-160]!
     254:	mov	x29, sp
     258:	stp	x19, x20, [sp, #16]
     25c:	adrp	x20, 0 <getPNSStr>
     260:	stp	x23, x24, [sp, #48]
     264:	add	x23, x20, #0x0
     268:	stp	x21, x22, [sp, #32]
     26c:	mov	x21, x0
     270:	ldr	x19, [x23, #8]
     274:	stp	x25, x26, [sp, #64]
     278:	stp	x27, x28, [sp, #80]
     27c:	cbz	x19, 2d0 <getCurFilename+0x80>
     280:	mov	w22, w1
     284:	ldrb	w1, [x19]
     288:	cbz	w1, 424 <getCurFilename+0x1d4>
     28c:	ldr	x1, [x23, #176]
     290:	cbnz	x1, 2f0 <getCurFilename+0xa0>
     294:	ldr	w0, [x23, #184]
     298:	cbnz	w0, 2f0 <getCurFilename+0xa0>
     29c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     2a0:	cbnz	w0, 2f0 <getCurFilename+0xa0>
     2a4:	ldr	x19, [x23, #8]
     2a8:	cbz	w22, 2d0 <getCurFilename+0x80>
     2ac:	mov	x0, x19
     2b0:	bl	0 <strlen>
     2b4:	sxtw	x20, w0
     2b8:	mov	x1, x19
     2bc:	mov	x2, x20
     2c0:	mov	x0, x21
     2c4:	bl	0 <memcpy>
     2c8:	strb	wzr, [x21, x20]
     2cc:	mov	x19, x21
     2d0:	mov	x0, x19
     2d4:	ldp	x19, x20, [sp, #16]
     2d8:	ldp	x21, x22, [sp, #32]
     2dc:	ldp	x23, x24, [sp, #48]
     2e0:	ldp	x25, x26, [sp, #64]
     2e4:	ldp	x27, x28, [sp, #80]
     2e8:	ldp	x29, x30, [sp], #160
     2ec:	ret
     2f0:	add	x20, x20, #0x0
     2f4:	adrp	x24, 0 <getPNSStr>
     2f8:	add	x0, x20, #0x20
     2fc:	bl	0 <strlen>
     300:	add	x28, sp, #0x7c
     304:	mov	x22, x0
     308:	add	x24, x24, #0x0
     30c:	add	x0, x20, #0x30
     310:	add	x25, sp, #0x80
     314:	str	w22, [sp, #100]
     318:	bl	0 <strlen>
     31c:	mov	x23, x0
     320:	mov	w27, #0x0                   	// #0
     324:	str	w0, [sp, #104]
     328:	str	wzr, [sp, #124]
     32c:	ldr	w0, [sp, #124]
     330:	sxtw	x2, w27
     334:	add	x26, x21, w27, sxtw
     338:	ldrb	w1, [x19, w0, sxtw]
     33c:	cbnz	w1, 348 <getCurFilename+0xf8>
     340:	strb	wzr, [x26]
     344:	b	2cc <getCurFilename+0x7c>
     348:	cmp	w1, #0x25
     34c:	b.ne	418 <getCurFilename+0x1c8>  // b.any
     350:	add	w0, w0, #0x1
     354:	str	w0, [sp, #124]
     358:	ldrb	w0, [x19, w0, sxtw]
     35c:	cmp	w0, #0x70
     360:	b.ne	38c <getCurFilename+0x13c>  // b.any
     364:	mov	x2, x22
     368:	add	x1, x20, #0x20
     36c:	mov	x0, x26
     370:	bl	0 <memcpy>
     374:	ldr	w0, [sp, #100]
     378:	add	w27, w27, w0
     37c:	ldr	w0, [sp, #124]
     380:	add	w0, w0, #0x1
     384:	str	w0, [sp, #124]
     388:	b	32c <getCurFilename+0xdc>
     38c:	cmp	w0, #0x68
     390:	b.ne	3ac <getCurFilename+0x15c>  // b.any
     394:	mov	x2, x23
     398:	add	x1, x20, #0x30
     39c:	mov	x0, x26
     3a0:	bl	0 <memcpy>
     3a4:	ldr	w0, [sp, #104]
     3a8:	b	378 <getCurFilename+0x128>
     3ac:	mov	x1, x28
     3b0:	mov	x0, x19
     3b4:	bl	80 <getMergePoolSize>
     3b8:	cbz	w0, 37c <getCurFilename+0x12c>
     3bc:	bl	0 <getpid>
     3c0:	ldr	w1, [x20, #184]
     3c4:	udiv	w4, w0, w1
     3c8:	msub	w4, w4, w1, w0
     3cc:	str	w4, [sp, #108]
     3d0:	bl	0 <lprofGetLoadModuleSignature>
     3d4:	mov	x3, x0
     3d8:	ldr	w4, [sp, #108]
     3dc:	mov	x2, x24
     3e0:	mov	x1, #0x19                  	// #25
     3e4:	mov	x0, x25
     3e8:	bl	0 <snprintf>
     3ec:	cmp	w0, #0x18
     3f0:	mov	w3, #0x18                  	// #24
     3f4:	csel	w3, w0, w3, lt  // lt = tstop
     3f8:	mov	x1, x25
     3fc:	mov	x0, x26
     400:	sxtw	x2, w3
     404:	str	w3, [sp, #108]
     408:	bl	0 <memcpy>
     40c:	ldr	w3, [sp, #108]
     410:	add	w27, w27, w3
     414:	b	37c <getCurFilename+0x12c>
     418:	add	w27, w27, #0x1
     41c:	strb	w1, [x21, x2]
     420:	b	37c <getCurFilename+0x12c>
     424:	mov	x19, #0x0                   	// #0
     428:	b	2d0 <getCurFilename+0x80>

000000000000042c <createProfileDir>:
     42c:	stp	x29, x30, [sp, #-32]!
     430:	mov	x29, sp
     434:	stp	x19, x20, [sp, #16]
     438:	mov	x19, x0
     43c:	bl	0 <strlen>
     440:	mov	x20, x0
     444:	mov	x0, x19
     448:	bl	0 <lprofFindFirstDirSeparator>
     44c:	cbz	x0, 474 <createProfileDir+0x48>
     450:	add	x0, x20, #0x10
     454:	add	x2, x20, #0x1
     458:	and	x0, x0, #0xfffffffffffffff0
     45c:	mov	x1, x19
     460:	sub	sp, sp, x0
     464:	mov	x3, sp
     468:	mov	x0, x3
     46c:	bl	0 <strncpy>
     470:	bl	0 <__llvm_profile_recursive_mkdir>
     474:	mov	sp, x29
     478:	ldp	x19, x20, [sp, #16]
     47c:	ldp	x29, x30, [sp], #32
     480:	ret

0000000000000484 <truncateCurrentFile>:
     484:	stp	x29, x30, [sp, #-32]!
     488:	mov	x29, sp
     48c:	stp	x19, x20, [sp, #16]
     490:	bl	1ac <getCurFilenameLength>
     494:	add	w0, w0, #0x1
     498:	mov	w1, #0x0                   	// #0
     49c:	sxtw	x0, w0
     4a0:	add	x0, x0, #0xf
     4a4:	and	x0, x0, #0xfffffffffffffff0
     4a8:	sub	sp, sp, x0
     4ac:	mov	x0, sp
     4b0:	bl	250 <getCurFilename>
     4b4:	cbz	x0, 50c <truncateCurrentFile+0x88>
     4b8:	adrp	x20, 0 <getPNSStr>
     4bc:	add	x20, x20, #0x0
     4c0:	mov	x19, x0
     4c4:	mov	x0, x20
     4c8:	bl	0 <getenv>
     4cc:	cbnz	x0, 50c <truncateCurrentFile+0x88>
     4d0:	mov	x1, x20
     4d4:	mov	w2, #0x1                   	// #1
     4d8:	mov	x0, x20
     4dc:	bl	0 <setenv>
     4e0:	mov	x0, x19
     4e4:	bl	42c <createProfileDir>
     4e8:	adrp	x0, 0 <getPNSStr>
     4ec:	ldr	w0, [x0]
     4f0:	cbnz	w0, 50c <truncateCurrentFile+0x88>
     4f4:	adrp	x1, 0 <getPNSStr>
     4f8:	mov	x0, x19
     4fc:	add	x1, x1, #0x0
     500:	bl	0 <fopen>
     504:	cbz	x0, 50c <truncateCurrentFile+0x88>
     508:	bl	0 <fclose>
     50c:	mov	sp, x29
     510:	ldp	x19, x20, [sp, #16]
     514:	ldp	x29, x30, [sp], #32
     518:	ret

000000000000051c <getProfileFileSizeForMerging>:
     51c:	stp	x29, x30, [sp, #-48]!
     520:	mov	w2, #0x2                   	// #2
     524:	mov	x29, sp
     528:	stp	x19, x20, [sp, #16]
     52c:	mov	x20, x1
     530:	mov	x1, #0x0                   	// #0
     534:	str	x21, [sp, #32]
     538:	mov	x21, x0
     53c:	bl	0 <fseek>
     540:	cmn	w0, #0x1
     544:	b.ne	58c <getProfileFileSizeForMerging+0x70>  // b.any
     548:	mov	w19, w0
     54c:	adrp	x0, 0 <stderr>
     550:	ldr	x0, [x0]
     554:	ldr	x20, [x0]
     558:	bl	0 <__errno_location>
     55c:	ldr	w0, [x0]
     560:	bl	0 <strerror>
     564:	mov	x2, x0
     568:	adrp	x1, 0 <getPNSStr>
     56c:	add	x1, x1, #0x0
     570:	mov	x0, x20
     574:	bl	0 <fprintf>
     578:	mov	w0, w19
     57c:	ldp	x19, x20, [sp, #16]
     580:	ldr	x21, [sp, #32]
     584:	ldp	x29, x30, [sp], #48
     588:	ret
     58c:	mov	x0, x21
     590:	bl	0 <ftell>
     594:	str	x0, [x20]
     598:	mov	w2, #0x0                   	// #0
     59c:	mov	x0, x21
     5a0:	mov	x1, #0x0                   	// #0
     5a4:	bl	0 <fseek>
     5a8:	mov	w19, w0
     5ac:	cmn	w0, #0x1
     5b0:	b.ne	5dc <getProfileFileSizeForMerging+0xc0>  // b.any
     5b4:	adrp	x0, 0 <stderr>
     5b8:	ldr	x0, [x0]
     5bc:	ldr	x20, [x0]
     5c0:	bl	0 <__errno_location>
     5c4:	ldr	w0, [x0]
     5c8:	bl	0 <strerror>
     5cc:	mov	x2, x0
     5d0:	adrp	x1, 0 <getPNSStr>
     5d4:	add	x1, x1, #0x0
     5d8:	b	570 <getProfileFileSizeForMerging+0x54>
     5dc:	ldr	x0, [x20]
     5e0:	mov	w19, #0x0                   	// #0
     5e4:	sub	x0, x0, #0x1
     5e8:	cmp	x0, #0x4e
     5ec:	b.hi	578 <getProfileFileSizeForMerging+0x5c>  // b.pmore
     5f0:	adrp	x0, 0 <stderr>
     5f4:	adrp	x2, 0 <getPNSStr>
     5f8:	adrp	x1, 0 <getPNSStr>
     5fc:	add	x2, x2, #0x0
     600:	ldr	x0, [x0]
     604:	add	x1, x1, #0x0
     608:	mov	w19, #0xffffffff            	// #-1
     60c:	ldr	x0, [x0]
     610:	bl	0 <fprintf>
     614:	b	578 <getProfileFileSizeForMerging+0x5c>

0000000000000618 <unlockProfile>:
     618:	stp	x29, x30, [sp, #-32]!
     61c:	mov	x29, sp
     620:	stp	x19, x20, [sp, #16]
     624:	mov	x19, x0
     628:	ldr	w0, [x0]
     62c:	mov	x20, x1
     630:	cbnz	w0, 654 <unlockProfile+0x3c>
     634:	adrp	x0, 0 <stderr>
     638:	adrp	x2, 0 <getPNSStr>
     63c:	adrp	x1, 0 <getPNSStr>
     640:	add	x2, x2, #0x0
     644:	ldr	x0, [x0]
     648:	add	x1, x1, #0x0
     64c:	ldr	x0, [x0]
     650:	bl	0 <fprintf>
     654:	mov	x0, x20
     658:	bl	0 <lprofUnlockFileHandle>
     65c:	str	wzr, [x19]
     660:	ldp	x19, x20, [sp, #16]
     664:	ldp	x29, x30, [sp], #32
     668:	ret

000000000000066c <setupIOBuffer>:
     66c:	stp	x29, x30, [sp, #-16]!
     670:	adrp	x0, 0 <getPNSStr>
     674:	add	x0, x0, #0x0
     678:	mov	x29, sp
     67c:	bl	0 <getenv>
     680:	cbz	x0, 6ac <setupIOBuffer+0x40>
     684:	ldrb	w1, [x0]
     688:	cbz	w1, 6ac <setupIOBuffer+0x40>
     68c:	bl	0 <atoi>
     690:	adrp	x1, 0 <VPBufferSize>
     694:	str	w0, [x1]
     698:	mov	x1, #0x1                   	// #1
     69c:	mov	w0, w0
     6a0:	bl	0 <calloc>
     6a4:	adrp	x1, 0 <DynamicBufferIOBuffer>
     6a8:	str	x0, [x1]
     6ac:	ldp	x29, x30, [sp], #16
     6b0:	ret

00000000000006b4 <mmapProfileForMerging>:
     6b4:	stp	x29, x30, [sp, #-48]!
     6b8:	mov	x29, sp
     6bc:	str	x21, [sp, #32]
     6c0:	mov	x21, x2
     6c4:	stp	x19, x20, [sp, #16]
     6c8:	mov	x20, x1
     6cc:	bl	0 <fileno>
     6d0:	mov	w3, #0x1                   	// #1
     6d4:	mov	w4, w0
     6d8:	mov	w2, w3
     6dc:	mov	x1, x20
     6e0:	mov	x5, #0x0                   	// #0
     6e4:	mov	x0, #0x0                   	// #0
     6e8:	bl	0 <mmap>
     6ec:	str	x0, [x21]
     6f0:	cmn	x0, #0x1
     6f4:	b.ne	738 <mmapProfileForMerging+0x84>  // b.any
     6f8:	adrp	x0, 0 <stderr>
     6fc:	ldr	x0, [x0]
     700:	ldr	x20, [x0]
     704:	bl	0 <__errno_location>
     708:	ldr	w0, [x0]
     70c:	bl	0 <strerror>
     710:	mov	x2, x0
     714:	adrp	x1, 0 <getPNSStr>
     718:	mov	x0, x20
     71c:	add	x1, x1, #0x0
     720:	bl	0 <fprintf>
     724:	mov	w0, #0xffffffff            	// #-1
     728:	ldp	x19, x20, [sp, #16]
     72c:	ldr	x21, [sp, #32]
     730:	ldp	x29, x30, [sp], #48
     734:	ret
     738:	mov	x1, x20
     73c:	bl	0 <__llvm_profile_check_compatibility>
     740:	cbz	w0, 728 <mmapProfileForMerging+0x74>
     744:	ldr	x0, [x21]
     748:	mov	x1, x20
     74c:	bl	0 <munmap>
     750:	adrp	x0, 0 <stderr>
     754:	adrp	x2, 0 <getPNSStr>
     758:	adrp	x1, 0 <getPNSStr>
     75c:	add	x2, x2, #0x0
     760:	ldr	x0, [x0]
     764:	add	x1, x1, #0x0
     768:	ldr	x0, [x0]
     76c:	b	720 <mmapProfileForMerging+0x6c>

0000000000000770 <writeFile>:
     770:	stp	x29, x30, [sp, #-80]!
     774:	adrp	x1, 0 <lprofMergeValueProfData>
     778:	mov	x29, sp
     77c:	stp	x21, x22, [sp, #32]
     780:	mov	x22, x0
     784:	adrp	x0, 0 <VPMergeHook>
     788:	ldr	x1, [x1]
     78c:	stp	x19, x20, [sp, #16]
     790:	adrp	x21, 0 <getPNSStr>
     794:	ldr	x0, [x0]
     798:	str	x1, [x0]
     79c:	bl	60 <doMerging>
     7a0:	add	x1, x21, #0x0
     7a4:	ldr	x19, [x1, #192]
     7a8:	cbz	w0, 918 <writeFile+0x1a8>
     7ac:	cbz	x19, 894 <writeFile+0x124>
     7b0:	mov	x0, x19
     7b4:	bl	0 <lprofLockFileHandle>
     7b8:	add	x1, sp, #0x38
     7bc:	mov	x0, x19
     7c0:	bl	51c <getProfileFileSizeForMerging>
     7c4:	cmn	w0, #0x1
     7c8:	b.eq	8dc <writeFile+0x16c>  // b.none
     7cc:	ldr	x1, [sp, #56]
     7d0:	cbz	x1, 8c4 <writeFile+0x154>
     7d4:	add	x2, sp, #0x40
     7d8:	mov	x0, x19
     7dc:	bl	6b4 <mmapProfileForMerging>
     7e0:	cmn	w0, #0x1
     7e4:	b.eq	8dc <writeFile+0x16c>  // b.none
     7e8:	ldp	x1, x0, [sp, #56]
     7ec:	bl	0 <__llvm_profile_merge_from_buffer>
     7f0:	mov	x0, x19
     7f4:	bl	0 <fileno>
     7f8:	mov	w20, w0
     7fc:	bl	0 <__llvm_profile_get_size_for_buffer>
     800:	mov	x1, x0
     804:	mov	w0, w20
     808:	bl	0 <ftruncate>
     80c:	mov	w20, #0x1                   	// #1
     810:	ldp	x1, x0, [sp, #56]
     814:	bl	0 <munmap>
     818:	mov	x0, x19
     81c:	mov	w2, #0x0                   	// #0
     820:	mov	x1, #0x0                   	// #0
     824:	bl	0 <fseek>
     828:	cmn	w0, #0x1
     82c:	b.eq	8dc <writeFile+0x16c>  // b.none
     830:	adrp	x0, 0 <free>
     834:	adrp	x1, 0 <FreeHook>
     838:	add	x21, x21, #0x0
     83c:	ldr	x0, [x0]
     840:	str	x0, [x1]
     844:	bl	66c <setupIOBuffer>
     848:	adrp	x0, 0 <getPNSStr>
     84c:	add	x0, x0, #0x0
     850:	stp	x0, x19, [sp, #64]
     854:	bl	0 <lprofGetVPDataReader>
     858:	mov	x1, x0
     85c:	mov	w2, w20
     860:	add	x0, sp, #0x40
     864:	bl	0 <lprofWriteData>
     868:	mov	w20, w0
     86c:	ldr	x0, [x21, #192]
     870:	cmp	x0, x19
     874:	mov	x0, x19
     878:	b.ne	93c <writeFile+0x1cc>  // b.any
     87c:	bl	0 <fflush>
     880:	bl	60 <doMerging>
     884:	cbz	w0, 8b0 <writeFile+0x140>
     888:	mov	x0, x19
     88c:	bl	0 <lprofUnlockFileHandle>
     890:	b	8b0 <writeFile+0x140>
     894:	mov	x0, x22
     898:	bl	42c <createProfileDir>
     89c:	mov	x0, x22
     8a0:	bl	0 <lprofOpenFileEx>
     8a4:	mov	x19, x0
     8a8:	cbnz	x0, 7b8 <writeFile+0x48>
     8ac:	mov	w20, #0xffffffff            	// #-1
     8b0:	mov	w0, w20
     8b4:	ldp	x19, x20, [sp, #16]
     8b8:	ldp	x21, x22, [sp, #32]
     8bc:	ldp	x29, x30, [sp], #80
     8c0:	ret
     8c4:	mov	x0, x19
     8c8:	bl	0 <fileno>
     8cc:	mov	x1, #0x0                   	// #0
     8d0:	bl	0 <ftruncate>
     8d4:	mov	w20, w0
     8d8:	cbz	w0, 818 <writeFile+0xa8>
     8dc:	adrp	x0, 0 <stderr>
     8e0:	ldr	x0, [x0]
     8e4:	ldr	x20, [x0]
     8e8:	bl	0 <__errno_location>
     8ec:	ldr	w0, [x0]
     8f0:	bl	0 <strerror>
     8f4:	mov	x3, x0
     8f8:	mov	x2, x22
     8fc:	adrp	x1, 0 <getPNSStr>
     900:	add	x1, x1, #0x0
     904:	mov	x0, x20
     908:	bl	0 <fprintf>
     90c:	mov	x0, x19
     910:	bl	0 <fclose>
     914:	b	8ac <writeFile+0x13c>
     918:	cbnz	x19, 934 <writeFile+0x1c4>
     91c:	mov	x0, x22
     920:	adrp	x1, 0 <getPNSStr>
     924:	add	x1, x1, #0x0
     928:	bl	0 <fopen>
     92c:	mov	x19, x0
     930:	cbz	x0, 8ac <writeFile+0x13c>
     934:	mov	w20, #0x0                   	// #0
     938:	b	830 <writeFile+0xc0>
     93c:	bl	0 <fclose>
     940:	b	8b0 <writeFile+0x140>

0000000000000944 <writeProfileWithFileObject>:
     944:	stp	x29, x30, [sp, #-48]!
     948:	mov	x29, sp
     94c:	stp	x19, x20, [sp, #16]
     950:	adrp	x19, 0 <getPNSStr>
     954:	add	x2, x19, #0x0
     958:	stp	x21, x22, [sp, #32]
     95c:	mov	x21, x0
     960:	str	x1, [x2, #192]
     964:	bl	770 <writeFile>
     968:	mov	w20, w0
     96c:	cbz	w0, 9a0 <writeProfileWithFileObject+0x5c>
     970:	adrp	x0, 0 <stderr>
     974:	ldr	x0, [x0]
     978:	ldr	x22, [x0]
     97c:	bl	0 <__errno_location>
     980:	ldr	w0, [x0]
     984:	bl	0 <strerror>
     988:	mov	x3, x0
     98c:	adrp	x1, 0 <getPNSStr>
     990:	mov	x2, x21
     994:	add	x1, x1, #0x0
     998:	mov	x0, x22
     99c:	bl	0 <fprintf>
     9a0:	add	x19, x19, #0x0
     9a4:	mov	w0, w20
     9a8:	ldp	x21, x22, [sp, #32]
     9ac:	str	xzr, [x19, #192]
     9b0:	ldp	x19, x20, [sp, #16]
     9b4:	ldp	x29, x30, [sp], #48
     9b8:	ret

00000000000009bc <initializeProfileForContinuousMode>:
     9bc:	stp	x29, x30, [sp, #-128]!
     9c0:	mov	x29, sp
     9c4:	stp	x19, x20, [sp, #16]
     9c8:	stp	x21, x22, [sp, #32]
     9cc:	stp	x23, x24, [sp, #48]
     9d0:	stp	x25, x26, [sp, #64]
     9d4:	stp	x27, x28, [sp, #80]
     9d8:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     9dc:	cbz	w0, a58 <initializeProfileForContinuousMode+0x9c>
     9e0:	bl	0 <__llvm_profile_begin_data>
     9e4:	mov	x19, x0
     9e8:	bl	0 <__llvm_profile_end_data>
     9ec:	mov	x20, x0
     9f0:	bl	0 <__llvm_profile_begin_counters>
     9f4:	mov	x21, x0
     9f8:	bl	0 <__llvm_profile_end_counters>
     9fc:	mov	x22, x0
     a00:	bl	0 <__llvm_profile_begin_names>
     a04:	mov	x25, x0
     a08:	bl	0 <__llvm_profile_end_names>
     a0c:	mov	x26, x0
     a10:	mov	x1, x20
     a14:	mov	x0, x19
     a18:	bl	0 <__llvm_profile_get_data_size>
     a1c:	mov	x23, x0
     a20:	bl	0 <getpagesize>
     a24:	mov	w24, w0
     a28:	mov	x27, x24
     a2c:	sdiv	x0, x21, x24
     a30:	msub	x0, x0, x24, x21
     a34:	cbz	x0, a78 <initializeProfileForContinuousMode+0xbc>
     a38:	adrp	x1, 0 <getPNSStr>
     a3c:	mov	w3, w24
     a40:	mov	x2, x21
     a44:	add	x1, x1, #0x0
     a48:	adrp	x0, 0 <stderr>
     a4c:	ldr	x0, [x0]
     a50:	ldr	x0, [x0]
     a54:	bl	0 <fprintf>
     a58:	mov	sp, x29
     a5c:	ldp	x19, x20, [sp, #16]
     a60:	ldp	x21, x22, [sp, #32]
     a64:	ldp	x23, x24, [sp, #48]
     a68:	ldp	x25, x26, [sp, #64]
     a6c:	ldp	x27, x28, [sp, #80]
     a70:	ldp	x29, x30, [sp], #128
     a74:	ret
     a78:	sdiv	x20, x19, x24
     a7c:	msub	x20, x20, x24, x19
     a80:	cbz	x20, a98 <initializeProfileForContinuousMode+0xdc>
     a84:	adrp	x1, 0 <getPNSStr>
     a88:	mov	w3, w24
     a8c:	mov	x2, x19
     a90:	add	x1, x1, #0x0
     a94:	b	a48 <initializeProfileForContinuousMode+0x8c>
     a98:	bl	1ac <getCurFilenameLength>
     a9c:	add	w1, w0, #0x1
     aa0:	sxtw	x1, w1
     aa4:	add	x1, x1, #0xf
     aa8:	and	x1, x1, #0xfffffffffffffff0
     aac:	sub	sp, sp, x1
     ab0:	mov	w1, #0x0                   	// #0
     ab4:	mov	x0, sp
     ab8:	bl	250 <getCurFilename>
     abc:	mov	x28, x0
     ac0:	cbz	x0, a58 <initializeProfileForContinuousMode+0x9c>
     ac4:	str	wzr, [x29, #100]
     ac8:	bl	60 <doMerging>
     acc:	cbnz	w0, c00 <initializeProfileForContinuousMode+0x244>
     ad0:	mov	x0, x28
     ad4:	adrp	x1, 0 <getPNSStr>
     ad8:	add	x1, x1, #0x0
     adc:	bl	0 <fopen>
     ae0:	mov	x19, x0
     ae4:	cbz	x0, b1c <initializeProfileForContinuousMode+0x160>
     ae8:	bl	0 <ftello>
     aec:	mov	x20, x0
     af0:	sdiv	x0, x0, x24
     af4:	msub	x24, x0, x24, x20
     af8:	cbz	x24, b40 <initializeProfileForContinuousMode+0x184>
     afc:	adrp	x0, 0 <stderr>
     b00:	adrp	x1, 0 <getPNSStr>
     b04:	mov	w3, w27
     b08:	mov	x2, x20
     b0c:	ldr	x0, [x0]
     b10:	add	x1, x1, #0x0
     b14:	ldr	x0, [x0]
     b18:	bl	0 <fprintf>
     b1c:	ldr	w2, [x29, #100]
     b20:	cbz	w2, a58 <initializeProfileForContinuousMode+0x9c>
     b24:	adrp	x0, 0 <stderr>
     b28:	adrp	x1, 0 <getPNSStr>
     b2c:	add	x1, x1, #0x0
     b30:	ldr	x0, [x0]
     b34:	ldr	x0, [x0]
     b38:	bl	0 <fprintf>
     b3c:	b	a58 <initializeProfileForContinuousMode+0x9c>
     b40:	mov	x1, x19
     b44:	mov	x0, x28
     b48:	bl	944 <writeProfileWithFileObject>
     b4c:	cbnz	w0, b1c <initializeProfileForContinuousMode+0x160>
     b50:	sub	x22, x22, x21
     b54:	mov	x0, x19
     b58:	bl	0 <fileno>
     b5c:	mov	w24, w0
     b60:	asr	x1, x22, #3
     b64:	add	x5, x29, #0x78
     b68:	add	x4, x29, #0x70
     b6c:	add	x3, x29, #0x68
     b70:	sub	x2, x26, x25
     b74:	mov	x0, x23
     b78:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
     b7c:	ldp	x6, x1, [x29, #104]
     b80:	mov	x5, #0x30                  	// #48
     b84:	mov	w4, w24
     b88:	mov	x0, x21
     b8c:	madd	x20, x23, x5, x20
     b90:	mov	w3, #0x11                  	// #17
     b94:	mov	w2, #0x3                   	// #3
     b98:	add	x6, x6, #0x50
     b9c:	add	x22, x22, x1
     ba0:	add	x20, x6, x20
     ba4:	mov	x1, x22
     ba8:	mov	x5, x20
     bac:	bl	0 <mmap>
     bb0:	cmp	x21, x0
     bb4:	b.eq	bf4 <initializeProfileForContinuousMode+0x238>  // b.none
     bb8:	adrp	x0, 0 <stderr>
     bbc:	ldr	x0, [x0]
     bc0:	ldr	x23, [x0]
     bc4:	bl	0 <__errno_location>
     bc8:	ldr	w0, [x0]
     bcc:	bl	0 <strerror>
     bd0:	mov	x2, x0
     bd4:	adrp	x1, 0 <getPNSStr>
     bd8:	mov	x6, x20
     bdc:	mov	w5, w24
     be0:	mov	x4, x22
     be4:	mov	x3, x21
     be8:	add	x1, x1, #0x0
     bec:	mov	x0, x23
     bf0:	bl	0 <fprintf>
     bf4:	mov	x1, x19
     bf8:	add	x0, x29, #0x64
     bfc:	b	c34 <initializeProfileForContinuousMode+0x278>
     c00:	mov	x0, x28
     c04:	bl	0 <lprofOpenFileEx>
     c08:	mov	x19, x0
     c0c:	cbz	x0, b1c <initializeProfileForContinuousMode+0x160>
     c10:	mov	w1, #0x1                   	// #1
     c14:	add	x24, x29, #0x64
     c18:	str	w1, [x29, #100]
     c1c:	add	x1, x29, #0x70
     c20:	bl	51c <getProfileFileSizeForMerging>
     c24:	cmn	w0, #0x1
     c28:	b.ne	c3c <initializeProfileForContinuousMode+0x280>  // b.any
     c2c:	mov	x1, x19
     c30:	mov	x0, x24
     c34:	bl	618 <unlockProfile>
     c38:	b	b1c <initializeProfileForContinuousMode+0x160>
     c3c:	ldr	x1, [x29, #112]
     c40:	cbnz	x1, c58 <initializeProfileForContinuousMode+0x29c>
     c44:	mov	x1, x19
     c48:	mov	x0, x28
     c4c:	bl	944 <writeProfileWithFileObject>
     c50:	cbz	w0, b50 <initializeProfileForContinuousMode+0x194>
     c54:	b	c2c <initializeProfileForContinuousMode+0x270>
     c58:	add	x2, x29, #0x78
     c5c:	mov	x0, x19
     c60:	bl	6b4 <mmapProfileForMerging>
     c64:	cmn	w0, #0x1
     c68:	b.eq	c2c <initializeProfileForContinuousMode+0x270>  // b.none
     c6c:	ldp	x1, x0, [x29, #112]
     c70:	bl	0 <munmap>
     c74:	cmn	w0, #0x1
     c78:	b.ne	b50 <initializeProfileForContinuousMode+0x194>  // b.any
     c7c:	b	c2c <initializeProfileForContinuousMode+0x270>

0000000000000c80 <parseAndSetFilename>:
     c80:	stp	x29, x30, [sp, #-128]!
     c84:	mov	x29, sp
     c88:	stp	x19, x20, [sp, #16]
     c8c:	mov	x20, x0
     c90:	adrp	x19, 0 <getPNSStr>
     c94:	add	x0, x19, #0x0
     c98:	stp	x21, x22, [sp, #32]
     c9c:	stp	x23, x24, [sp, #48]
     ca0:	stp	x25, x26, [sp, #64]
     ca4:	stp	x27, x28, [sp, #80]
     ca8:	ldr	w27, [x0, #188]
     cac:	cmp	w27, w1
     cb0:	b.hi	cec <parseAndSetFilename+0x6c>  // b.pmore
     cb4:	mov	w21, w1
     cb8:	mov	w23, w2
     cbc:	cbnz	x20, cc8 <parseAndSetFilename+0x48>
     cc0:	adrp	x20, 0 <getPNSStr>
     cc4:	add	x20, x20, #0x0
     cc8:	add	x0, x19, #0x0
     ccc:	add	x22, x0, #0x8
     cd0:	ldr	x24, [x0, #8]
     cd4:	cbz	x24, d08 <parseAndSetFilename+0x88>
     cd8:	mov	x1, x20
     cdc:	mov	x0, x24
     ce0:	bl	0 <strcmp>
     ce4:	cbnz	w0, d08 <parseAndSetFilename+0x88>
     ce8:	str	w21, [x22, #180]
     cec:	ldp	x19, x20, [sp, #16]
     cf0:	ldp	x21, x22, [sp, #32]
     cf4:	ldp	x23, x24, [sp, #48]
     cf8:	ldp	x25, x26, [sp, #64]
     cfc:	ldp	x27, x28, [sp, #80]
     d00:	ldp	x29, x30, [sp], #128
     d04:	ret
     d08:	add	x0, x19, #0x0
     d0c:	ldr	x0, [x0, #24]
     d10:	cbz	x0, d18 <parseAndSetFilename+0x98>
     d14:	bl	0 <free>
     d18:	add	x0, x19, #0x0
     d1c:	add	x1, x0, #0x8
     d20:	ldr	x0, [x0, #8]
     d24:	cbz	x0, d34 <parseAndSetFilename+0xb4>
     d28:	ldr	w1, [x1, #8]
     d2c:	cbz	w1, d34 <parseAndSetFilename+0xb4>
     d30:	bl	0 <free>
     d34:	add	x22, x19, #0x0
     d38:	mov	x2, #0xb8                  	// #184
     d3c:	add	x25, x22, #0x8
     d40:	mov	w1, #0x0                   	// #0
     d44:	mov	x0, x25
     d48:	bl	0 <memset>
     d4c:	cbnz	w23, de8 <parseAndSetFilename+0x168>
     d50:	str	x20, [x22, #8]
     d54:	add	x0, sp, #0x7c
     d58:	add	x25, x19, #0x0
     d5c:	adrp	x26, 0 <getPNSStr>
     d60:	add	x26, x26, #0x0
     d64:	mov	w28, #0x0                   	// #0
     d68:	mov	w22, #0x0                   	// #0
     d6c:	mov	w23, #0x0                   	// #0
     d70:	str	x0, [sp, #96]
     d74:	add	x0, x25, #0x30
     d78:	str	x0, [sp, #104]
     d7c:	str	wzr, [sp, #124]
     d80:	ldr	w0, [sp, #124]
     d84:	ldrb	w1, [x20, w0, sxtw]
     d88:	cbnz	w1, e00 <parseAndSetFilename+0x180>
     d8c:	add	x0, x19, #0x0
     d90:	stp	w23, w22, [x0, #176]
     d94:	add	x19, x19, #0x0
     d98:	adrp	x0, 0 <getPNSStr>
     d9c:	add	x0, x0, #0x0
     da0:	str	w21, [x19, #188]
     da4:	cbnz	x24, f40 <parseAndSetFilename+0x2c0>
     da8:	bl	0 <getenv>
     dac:	cbz	x0, ddc <parseAndSetFilename+0x15c>
     db0:	adrp	x0, 0 <stderr>
     db4:	ldr	x2, [x19, #8]
     db8:	ldr	x0, [x0]
     dbc:	ldr	x4, [x0]
     dc0:	mov	w0, w21
     dc4:	bl	0 <getPNSStr>
     dc8:	mov	x3, x0
     dcc:	adrp	x1, 0 <getPNSStr>
     dd0:	mov	x0, x4
     dd4:	add	x1, x1, #0x0
     dd8:	bl	0 <fprintf>
     ddc:	bl	484 <truncateCurrentFile>
     de0:	bl	9bc <initializeProfileForContinuousMode>
     de4:	b	cec <parseAndSetFilename+0x6c>
     de8:	mov	x0, x20
     dec:	bl	0 <strdup>
     df0:	str	x0, [x22, #8]
     df4:	mov	w0, #0x1                   	// #1
     df8:	str	w0, [x25, #8]
     dfc:	b	d54 <parseAndSetFilename+0xd4>
     e00:	cmp	w1, #0x25
     e04:	b.ne	e24 <parseAndSetFilename+0x1a4>  // b.any
     e08:	add	w0, w0, #0x1
     e0c:	str	w0, [sp, #124]
     e10:	ldrb	w0, [x20, w0, sxtw]
     e14:	cmp	w0, #0x70
     e18:	b.ne	e54 <parseAndSetFilename+0x1d4>  // b.any
     e1c:	cbz	w23, e34 <parseAndSetFilename+0x1b4>
     e20:	add	w23, w23, #0x1
     e24:	ldr	w0, [sp, #124]
     e28:	add	w0, w0, #0x1
     e2c:	str	w0, [sp, #124]
     e30:	b	d80 <parseAndSetFilename+0x100>
     e34:	bl	0 <getpid>
     e38:	mov	w23, #0x1                   	// #1
     e3c:	sxtw	x3, w0
     e40:	mov	x2, x26
     e44:	add	x0, x25, #0x20
     e48:	mov	x1, #0x10                  	// #16
     e4c:	bl	0 <snprintf>
     e50:	b	e24 <parseAndSetFilename+0x1a4>
     e54:	cmp	w0, #0x68
     e58:	b.ne	ed4 <parseAndSetFilename+0x254>  // b.any
     e5c:	cbz	w22, e68 <parseAndSetFilename+0x1e8>
     e60:	add	w22, w22, #0x1
     e64:	b	e24 <parseAndSetFilename+0x1a4>
     e68:	ldr	x0, [sp, #104]
     e6c:	mov	w1, #0x80                  	// #128
     e70:	bl	0 <lprofGetHostName>
     e74:	cbz	w0, f38 <parseAndSetFilename+0x2b8>
     e78:	adrp	x1, 0 <getPNSStr>
     e7c:	mov	x2, x20
     e80:	add	x1, x1, #0x0
     e84:	adrp	x0, 0 <stderr>
     e88:	ldr	x0, [x0]
     e8c:	ldr	x0, [x0]
     e90:	bl	0 <fprintf>
     e94:	add	x0, x19, #0x0
     e98:	add	x1, x0, #0x8
     e9c:	ldr	x0, [x0, #8]
     ea0:	cbz	x0, eb0 <parseAndSetFilename+0x230>
     ea4:	ldr	w1, [x1, #8]
     ea8:	cbz	w1, eb0 <parseAndSetFilename+0x230>
     eac:	bl	0 <free>
     eb0:	add	x20, x19, #0x0
     eb4:	mov	x2, #0xac                  	// #172
     eb8:	add	x0, x20, #0x10
     ebc:	mov	w1, #0x0                   	// #0
     ec0:	bl	0 <memset>
     ec4:	adrp	x0, 0 <getPNSStr>
     ec8:	add	x0, x0, #0x0
     ecc:	str	x0, [x20, #8]
     ed0:	b	d94 <parseAndSetFilename+0x114>
     ed4:	cmp	w0, #0x63
     ed8:	b.ne	f08 <parseAndSetFilename+0x288>  // b.any
     edc:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     ee0:	cbz	w0, ef4 <parseAndSetFilename+0x274>
     ee4:	adrp	x1, 0 <getPNSStr>
     ee8:	mov	x2, x20
     eec:	add	x1, x1, #0x0
     ef0:	b	e84 <parseAndSetFilename+0x204>
     ef4:	bl	0 <__llvm_profile_enable_continuous_mode>
     ef8:	ldr	w0, [sp, #124]
     efc:	add	w0, w0, #0x1
     f00:	str	w0, [sp, #124]
     f04:	b	e24 <parseAndSetFilename+0x1a4>
     f08:	ldr	x1, [sp, #96]
     f0c:	mov	x0, x20
     f10:	bl	80 <getMergePoolSize>
     f14:	cbz	w0, e24 <parseAndSetFilename+0x1a4>
     f18:	cbz	w28, f2c <parseAndSetFilename+0x2ac>
     f1c:	adrp	x1, 0 <getPNSStr>
     f20:	mov	x2, x20
     f24:	add	x1, x1, #0x0
     f28:	b	e84 <parseAndSetFilename+0x204>
     f2c:	mov	w28, #0x1                   	// #1
     f30:	str	w0, [x25, #184]
     f34:	b	e24 <parseAndSetFilename+0x1a4>
     f38:	mov	w22, #0x1                   	// #1
     f3c:	b	e24 <parseAndSetFilename+0x1a4>
     f40:	bl	0 <getenv>
     f44:	cbz	x0, ddc <parseAndSetFilename+0x15c>
     f48:	adrp	x0, 0 <stderr>
     f4c:	ldr	x0, [x0]
     f50:	ldr	x6, [x0]
     f54:	mov	w0, w27
     f58:	bl	0 <getPNSStr>
     f5c:	mov	x3, x0
     f60:	ldr	x4, [x19, #8]
     f64:	mov	w0, w21
     f68:	bl	0 <getPNSStr>
     f6c:	mov	x5, x0
     f70:	mov	x2, x24
     f74:	mov	x0, x6
     f78:	adrp	x1, 0 <getPNSStr>
     f7c:	add	x1, x1, #0x0
     f80:	bl	0 <fprintf>
     f84:	b	ddc <parseAndSetFilename+0x15c>

0000000000000f88 <__llvm_profile_set_file_object>:
     f88:	stp	x29, x30, [sp, #-32]!
     f8c:	mov	x29, sp
     f90:	stp	x19, x20, [sp, #16]
     f94:	mov	x19, x0
     f98:	mov	w20, w1
     f9c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     fa0:	cbz	w0, fd4 <__llvm_profile_set_file_object+0x4c>
     fa4:	adrp	x0, 0 <stderr>
     fa8:	ldr	x0, [x0]
     fac:	ldr	x20, [x0]
     fb0:	mov	x0, x19
     fb4:	bl	0 <fileno>
     fb8:	mov	w2, w0
     fbc:	mov	x0, x20
     fc0:	adrp	x1, 0 <getPNSStr>
     fc4:	ldp	x19, x20, [sp, #16]
     fc8:	add	x1, x1, #0x0
     fcc:	ldp	x29, x30, [sp], #32
     fd0:	b	0 <fprintf>
     fd4:	adrp	x0, 0 <getPNSStr>
     fd8:	add	x1, x0, #0x0
     fdc:	str	w20, [x0]
     fe0:	str	x19, [x1, #192]
     fe4:	ldp	x19, x20, [sp, #16]
     fe8:	ldp	x29, x30, [sp], #32
     fec:	ret

0000000000000ff0 <lprofCreateBufferIOInternal>:
     ff0:	stp	x29, x30, [sp, #-32]!
     ff4:	mov	x29, sp
     ff8:	stp	x19, x20, [sp, #16]
     ffc:	mov	x20, x0
    1000:	adrp	x0, 0 <free>
    1004:	mov	w19, w1
    1008:	adrp	x1, 0 <FreeHook>
    100c:	ldr	x0, [x0]
    1010:	str	x0, [x1]
    1014:	mov	w0, w19
    1018:	mov	x1, #0x1                   	// #1
    101c:	bl	0 <calloc>
    1020:	adrp	x1, 0 <DynamicBufferIOBuffer>
    1024:	str	x0, [x1]
    1028:	adrp	x0, 0 <VPBufferSize>
    102c:	mov	x1, #0x1                   	// #1
    1030:	str	w19, [x0]
    1034:	mov	x0, #0x10                  	// #16
    1038:	bl	0 <calloc>
    103c:	adrp	x2, 0 <getPNSStr>
    1040:	add	x2, x2, #0x0
    1044:	stp	x2, x20, [x0]
    1048:	bl	0 <lprofCreateBufferIO>
    104c:	mov	w1, #0x1                   	// #1
    1050:	ldp	x19, x20, [sp, #16]
    1054:	str	w1, [x0, #8]
    1058:	ldp	x29, x30, [sp], #32
    105c:	ret

0000000000001060 <__llvm_profile_get_path_prefix>:
    1060:	stp	x29, x30, [sp, #-48]!
    1064:	mov	x29, sp
    1068:	stp	x19, x20, [sp, #16]
    106c:	adrp	x20, 0 <getPNSStr>
    1070:	add	x20, x20, #0x0
    1074:	stp	x21, x22, [sp, #32]
    1078:	add	x20, x20, #0x8
    107c:	ldr	x19, [x20, #16]
    1080:	cbnz	x19, 10b8 <__llvm_profile_get_path_prefix+0x58>
    1084:	bl	1ac <getCurFilenameLength>
    1088:	add	w0, w0, #0x1
    108c:	mov	w1, #0x0                   	// #0
    1090:	sxtw	x0, w0
    1094:	add	x0, x0, #0xf
    1098:	and	x0, x0, #0xfffffffffffffff0
    109c:	sub	sp, sp, x0
    10a0:	mov	x0, sp
    10a4:	bl	250 <getCurFilename>
    10a8:	mov	x21, x0
    10ac:	cbnz	x0, 10d0 <__llvm_profile_get_path_prefix+0x70>
    10b0:	adrp	x19, 0 <getPNSStr>
    10b4:	add	x19, x19, #0x0
    10b8:	mov	sp, x29
    10bc:	mov	x0, x19
    10c0:	ldp	x19, x20, [sp, #16]
    10c4:	ldp	x21, x22, [sp, #32]
    10c8:	ldp	x29, x30, [sp], #48
    10cc:	ret
    10d0:	bl	0 <lprofFindLastDirSeparator>
    10d4:	cbz	x0, 10b0 <__llvm_profile_get_path_prefix+0x50>
    10d8:	sub	x3, x0, x21
    10dc:	add	w22, w3, #0x1
    10e0:	add	w3, w3, #0x2
    10e4:	sxtw	x0, w3
    10e8:	bl	0 <malloc>
    10ec:	mov	x19, x0
    10f0:	cbnz	x0, 1118 <__llvm_profile_get_path_prefix+0xb8>
    10f4:	adrp	x0, 0 <stderr>
    10f8:	adrp	x2, 0 <getPNSStr>
    10fc:	adrp	x1, 0 <getPNSStr>
    1100:	add	x2, x2, #0x0
    1104:	ldr	x0, [x0]
    1108:	add	x1, x1, #0x0
    110c:	ldr	x0, [x0]
    1110:	bl	0 <fprintf>
    1114:	b	10b0 <__llvm_profile_get_path_prefix+0x50>
    1118:	sxtw	x22, w22
    111c:	mov	x1, x21
    1120:	mov	x2, x22
    1124:	bl	0 <memcpy>
    1128:	str	x19, [x20, #16]
    112c:	strb	wzr, [x19, x22]
    1130:	b	10b8 <__llvm_profile_get_path_prefix+0x58>

0000000000001134 <__llvm_profile_get_filename>:
    1134:	stp	x29, x30, [sp, #-32]!
    1138:	mov	x29, sp
    113c:	str	x19, [sp, #16]
    1140:	bl	1ac <getCurFilenameLength>
    1144:	add	w0, w0, #0x1
    1148:	sxtw	x0, w0
    114c:	bl	0 <malloc>
    1150:	cbnz	x0, 1180 <__llvm_profile_get_filename+0x4c>
    1154:	adrp	x0, 0 <stderr>
    1158:	adrp	x2, 0 <getPNSStr>
    115c:	adrp	x1, 0 <getPNSStr>
    1160:	add	x2, x2, #0x0
    1164:	ldr	x0, [x0]
    1168:	add	x1, x1, #0x0
    116c:	ldr	x0, [x0]
    1170:	bl	0 <fprintf>
    1174:	adrp	x19, 0 <getPNSStr>
    1178:	add	x19, x19, #0x0
    117c:	b	1190 <__llvm_profile_get_filename+0x5c>
    1180:	mov	x19, x0
    1184:	mov	w1, #0x1                   	// #1
    1188:	bl	250 <getCurFilename>
    118c:	cbz	x0, 1174 <__llvm_profile_get_filename+0x40>
    1190:	mov	x0, x19
    1194:	ldr	x19, [sp, #16]
    1198:	ldp	x29, x30, [sp], #32
    119c:	ret

00000000000011a0 <__llvm_profile_initialize_file>:
    11a0:	stp	x29, x30, [sp, #-32]!
    11a4:	mov	x29, sp
    11a8:	stp	x19, x20, [sp, #16]
    11ac:	adrp	x19, 0 <__llvm_profile_filename>
    11b0:	ldr	x0, [x19]
    11b4:	ldrb	w20, [x0]
    11b8:	adrp	x0, 0 <getPNSStr>
    11bc:	add	x0, x0, #0x0
    11c0:	bl	0 <getenv>
    11c4:	cbz	x0, 11e4 <__llvm_profile_initialize_file+0x44>
    11c8:	ldrb	w1, [x0]
    11cc:	cbz	w1, 11e4 <__llvm_profile_initialize_file+0x44>
    11d0:	mov	w2, #0x1                   	// #1
    11d4:	mov	w1, #0x3                   	// #3
    11d8:	ldp	x19, x20, [sp, #16]
    11dc:	ldp	x29, x30, [sp], #32
    11e0:	b	c80 <parseAndSetFilename>
    11e4:	cbnz	w20, 11f8 <__llvm_profile_initialize_file+0x58>
    11e8:	mov	w1, #0x1                   	// #1
    11ec:	mov	x0, #0x0                   	// #0
    11f0:	mov	w2, #0x0                   	// #0
    11f4:	b	11d8 <__llvm_profile_initialize_file+0x38>
    11f8:	ldr	x0, [x19]
    11fc:	mov	w1, #0x2                   	// #2
    1200:	b	11f0 <__llvm_profile_initialize_file+0x50>

0000000000001204 <__llvm_profile_set_filename>:
    1204:	stp	x29, x30, [sp, #-32]!
    1208:	mov	x29, sp
    120c:	str	x19, [sp, #16]
    1210:	mov	x19, x0
    1214:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    1218:	cbnz	w0, 1234 <__llvm_profile_set_filename+0x30>
    121c:	mov	x0, x19
    1220:	mov	w2, #0x1                   	// #1
    1224:	ldr	x19, [sp, #16]
    1228:	mov	w1, #0x4                   	// #4
    122c:	ldp	x29, x30, [sp], #32
    1230:	b	c80 <parseAndSetFilename>
    1234:	ldr	x19, [sp, #16]
    1238:	ldp	x29, x30, [sp], #32
    123c:	ret

0000000000001240 <__llvm_profile_write_file>:
    1240:	stp	x29, x30, [sp, #-48]!
    1244:	mov	x29, sp
    1248:	stp	x19, x20, [sp, #16]
    124c:	stp	x21, x22, [sp, #32]
    1250:	bl	0 <lprofProfileDumped>
    1254:	cbz	w0, 1294 <__llvm_profile_write_file+0x54>
    1258:	adrp	x0, 0 <stderr>
    125c:	adrp	x2, 0 <getPNSStr>
    1260:	adrp	x1, 0 <getPNSStr>
    1264:	add	x2, x2, #0x0
    1268:	ldr	x0, [x0]
    126c:	add	x1, x1, #0x0
    1270:	mov	w19, #0x0                   	// #0
    1274:	ldr	x0, [x0]
    1278:	bl	0 <fprintf>
    127c:	mov	sp, x29
    1280:	mov	w0, w19
    1284:	ldp	x19, x20, [sp, #16]
    1288:	ldp	x21, x22, [sp, #32]
    128c:	ldp	x29, x30, [sp], #48
    1290:	ret
    1294:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    1298:	cbnz	w0, 1258 <__llvm_profile_write_file+0x18>
    129c:	bl	1ac <getCurFilenameLength>
    12a0:	add	w0, w0, #0x1
    12a4:	mov	w1, #0x0                   	// #0
    12a8:	sxtw	x0, w0
    12ac:	add	x0, x0, #0xf
    12b0:	and	x0, x0, #0xfffffffffffffff0
    12b4:	sub	sp, sp, x0
    12b8:	mov	x0, sp
    12bc:	bl	250 <getCurFilename>
    12c0:	mov	x20, x0
    12c4:	cbnz	x0, 12f0 <__llvm_profile_write_file+0xb0>
    12c8:	adrp	x0, 0 <stderr>
    12cc:	adrp	x2, 0 <getPNSStr>
    12d0:	adrp	x1, 0 <getPNSStr>
    12d4:	add	x2, x2, #0x0
    12d8:	ldr	x0, [x0]
    12dc:	add	x1, x1, #0x0
    12e0:	ldr	x0, [x0]
    12e4:	bl	0 <fprintf>
    12e8:	mov	w19, #0xffffffff            	// #-1
    12ec:	b	127c <__llvm_profile_write_file+0x3c>
    12f0:	bl	0 <__llvm_profile_get_version>
    12f4:	and	x0, x0, #0xffffffffffffff
    12f8:	cmp	x0, #0x5
    12fc:	b.eq	132c <__llvm_profile_write_file+0xec>  // b.none
    1300:	adrp	x0, 0 <stderr>
    1304:	ldr	x0, [x0]
    1308:	ldr	x19, [x0]
    130c:	bl	0 <__llvm_profile_get_version>
    1310:	mov	w2, #0x5                   	// #5
    1314:	mov	w3, w0
    1318:	adrp	x1, 0 <getPNSStr>
    131c:	mov	x0, x19
    1320:	add	x1, x1, #0x0
    1324:	bl	0 <fprintf>
    1328:	b	12e8 <__llvm_profile_write_file+0xa8>
    132c:	bl	0 <lprofSuspendSigKill>
    1330:	mov	w21, w0
    1334:	mov	x0, x20
    1338:	bl	770 <writeFile>
    133c:	mov	w19, w0
    1340:	cbz	w0, 1374 <__llvm_profile_write_file+0x134>
    1344:	adrp	x0, 0 <stderr>
    1348:	ldr	x0, [x0]
    134c:	ldr	x22, [x0]
    1350:	bl	0 <__errno_location>
    1354:	ldr	w0, [x0]
    1358:	bl	0 <strerror>
    135c:	mov	x3, x0
    1360:	adrp	x1, 0 <getPNSStr>
    1364:	mov	x2, x20
    1368:	add	x1, x1, #0x0
    136c:	mov	x0, x22
    1370:	bl	0 <fprintf>
    1374:	cmp	w21, #0x1
    1378:	b.ne	127c <__llvm_profile_write_file+0x3c>  // b.any
    137c:	bl	0 <lprofRestoreSigKill>
    1380:	b	127c <__llvm_profile_write_file+0x3c>

0000000000001384 <writeFileWithoutReturn>:
    1384:	b	1240 <__llvm_profile_write_file>

0000000000001388 <__llvm_profile_dump>:
    1388:	stp	x29, x30, [sp, #-32]!
    138c:	mov	x29, sp
    1390:	str	x19, [sp, #16]
    1394:	bl	60 <doMerging>
    1398:	cbnz	w0, 13bc <__llvm_profile_dump+0x34>
    139c:	adrp	x0, 0 <stderr>
    13a0:	adrp	x2, 0 <getPNSStr>
    13a4:	adrp	x1, 0 <getPNSStr>
    13a8:	add	x2, x2, #0x0
    13ac:	ldr	x0, [x0]
    13b0:	add	x1, x1, #0x0
    13b4:	ldr	x0, [x0]
    13b8:	bl	0 <fprintf>
    13bc:	bl	1240 <__llvm_profile_write_file>
    13c0:	mov	w19, w0
    13c4:	bl	0 <lprofSetProfileDumped>
    13c8:	mov	w0, w19
    13cc:	ldr	x19, [sp, #16]
    13d0:	ldp	x29, x30, [sp], #32
    13d4:	ret

00000000000013d8 <__llvm_orderfile_write_file>:
    13d8:	stp	x29, x30, [sp, #-48]!
    13dc:	mov	x29, sp
    13e0:	stp	x19, x20, [sp, #16]
    13e4:	stp	x21, x22, [sp, #32]
    13e8:	bl	1ac <getCurFilenameLength>
    13ec:	add	w0, w0, #0x7
    13f0:	mov	w1, #0x1                   	// #1
    13f4:	sxtw	x0, w0
    13f8:	add	x0, x0, #0xf
    13fc:	and	x0, x0, #0xfffffffffffffff0
    1400:	sub	sp, sp, x0
    1404:	mov	x20, sp
    1408:	mov	x0, x20
    140c:	bl	250 <getCurFilename>
    1410:	cbnz	x0, 1450 <__llvm_orderfile_write_file+0x78>
    1414:	adrp	x0, 0 <stderr>
    1418:	adrp	x2, 0 <getPNSStr>
    141c:	adrp	x1, 0 <getPNSStr>
    1420:	add	x2, x2, #0x0
    1424:	ldr	x0, [x0]
    1428:	add	x1, x1, #0x0
    142c:	ldr	x0, [x0]
    1430:	bl	0 <fprintf>
    1434:	mov	w20, #0xffffffff            	// #-1
    1438:	mov	sp, x29
    143c:	mov	w0, w20
    1440:	ldp	x19, x20, [sp, #16]
    1444:	ldp	x21, x22, [sp, #32]
    1448:	ldp	x29, x30, [sp], #48
    144c:	ret
    1450:	mov	x19, x0
    1454:	bl	0 <strlen>
    1458:	adrp	x1, 0 <getPNSStr>
    145c:	add	x1, x1, #0x0
    1460:	add	x2, x20, w0, sxtw
    1464:	ldr	w3, [x1]
    1468:	str	w3, [x20, w0, sxtw]
    146c:	add	w0, w0, #0x6
    1470:	ldrh	w1, [x1, #4]
    1474:	strh	w1, [x2, #4]
    1478:	strb	wzr, [x20, w0, sxtw]
    147c:	bl	0 <__llvm_profile_get_version>
    1480:	and	x0, x0, #0xffffffffffffff
    1484:	cmp	x0, #0x5
    1488:	b.eq	14b8 <__llvm_orderfile_write_file+0xe0>  // b.none
    148c:	adrp	x0, 0 <stderr>
    1490:	ldr	x0, [x0]
    1494:	ldr	x19, [x0]
    1498:	bl	0 <__llvm_profile_get_version>
    149c:	mov	w2, #0x5                   	// #5
    14a0:	mov	w3, w0
    14a4:	adrp	x1, 0 <getPNSStr>
    14a8:	mov	x0, x19
    14ac:	add	x1, x1, #0x0
    14b0:	bl	0 <fprintf>
    14b4:	b	1434 <__llvm_orderfile_write_file+0x5c>
    14b8:	bl	0 <lprofSuspendSigKill>
    14bc:	mov	w21, w0
    14c0:	adrp	x1, 0 <getPNSStr>
    14c4:	mov	x0, x19
    14c8:	add	x1, x1, #0x0
    14cc:	bl	0 <fopen>
    14d0:	mov	x20, x0
    14d4:	cbnz	x0, 1538 <__llvm_orderfile_write_file+0x160>
    14d8:	adrp	x0, 0 <stderr>
    14dc:	adrp	x1, 0 <getPNSStr>
    14e0:	mov	x2, x19
    14e4:	add	x1, x1, #0x0
    14e8:	ldr	x0, [x0]
    14ec:	mov	w20, #0xffffffff            	// #-1
    14f0:	ldr	x0, [x0]
    14f4:	bl	0 <fprintf>
    14f8:	adrp	x0, 0 <stderr>
    14fc:	ldr	x0, [x0]
    1500:	ldr	x22, [x0]
    1504:	bl	0 <__errno_location>
    1508:	ldr	w0, [x0]
    150c:	bl	0 <strerror>
    1510:	mov	x3, x0
    1514:	adrp	x1, 0 <getPNSStr>
    1518:	mov	x2, x19
    151c:	add	x1, x1, #0x0
    1520:	mov	x0, x22
    1524:	bl	0 <fprintf>
    1528:	cmp	w21, #0x1
    152c:	b.ne	1438 <__llvm_orderfile_write_file+0x60>  // b.any
    1530:	bl	0 <lprofRestoreSigKill>
    1534:	b	1438 <__llvm_orderfile_write_file+0x60>
    1538:	adrp	x0, 0 <free>
    153c:	adrp	x1, 0 <FreeHook>
    1540:	ldr	x0, [x0]
    1544:	str	x0, [x1]
    1548:	bl	66c <setupIOBuffer>
    154c:	bl	0 <__llvm_profile_begin_orderfile>
    1550:	mov	x3, x20
    1554:	mov	x2, #0x20000               	// #131072
    1558:	mov	x1, #0x4                   	// #4
    155c:	bl	0 <fwrite>
    1560:	mov	x22, x0
    1564:	mov	x0, x20
    1568:	bl	0 <fclose>
    156c:	cmp	x22, #0x20, lsl #12
    1570:	b.eq	157c <__llvm_orderfile_write_file+0x1a4>  // b.none
    1574:	mov	w20, #0x1                   	// #1
    1578:	b	14f8 <__llvm_orderfile_write_file+0x120>
    157c:	mov	w20, #0x0                   	// #0
    1580:	b	1528 <__llvm_orderfile_write_file+0x150>

0000000000001584 <__llvm_orderfile_dump>:
    1584:	b	13d8 <__llvm_orderfile_write_file>

0000000000001588 <__llvm_profile_register_write_file_atexit>:
    1588:	stp	x29, x30, [sp, #-32]!
    158c:	mov	x29, sp
    1590:	str	x19, [sp, #16]
    1594:	adrp	x19, 0 <getPNSStr>
    1598:	add	x19, x19, #0x0
    159c:	ldr	w0, [x19, #200]
    15a0:	cbnz	w0, 15c4 <__llvm_profile_register_write_file_atexit+0x3c>
    15a4:	bl	0 <lprofSetupValueProfiler>
    15a8:	mov	w0, #0x1                   	// #1
    15ac:	str	w0, [x19, #200]
    15b0:	ldr	x19, [sp, #16]
    15b4:	adrp	x0, 0 <getPNSStr>
    15b8:	ldp	x29, x30, [sp], #32
    15bc:	add	x0, x0, #0x0
    15c0:	b	0 <atexit>
    15c4:	mov	w0, #0x0                   	// #0
    15c8:	ldr	x19, [sp, #16]
    15cc:	ldp	x29, x30, [sp], #32
    15d0:	ret

InstrProfilingMerge.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofGetLoadModuleSignature>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	str	x25, [sp, #64]
  18:	bl	0 <__llvm_profile_end_counters>
  1c:	mov	x19, x0
  20:	bl	0 <__llvm_profile_begin_counters>
  24:	mov	x25, x0
  28:	bl	0 <__llvm_profile_begin_data>
  2c:	mov	x20, x0
  30:	bl	0 <__llvm_profile_end_data>
  34:	mov	x1, x0
  38:	mov	x0, x20
  3c:	bl	0 <__llvm_profile_get_data_size>
  40:	mov	x22, x0
  44:	sub	x19, x19, x25
  48:	bl	0 <__llvm_profile_end_names>
  4c:	mov	x21, x0
  50:	bl	0 <__llvm_profile_begin_names>
  54:	mov	x23, x0
  58:	bl	0 <__llvm_profile_end_vnodes>
  5c:	mov	x20, x0
  60:	bl	0 <__llvm_profile_begin_vnodes>
  64:	mov	x24, x0
  68:	sub	x20, x20, x24
  6c:	bl	0 <__llvm_profile_begin_data>
  70:	mov	x1, x0
  74:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  78:	asr	x20, x20, #3
  7c:	movk	x0, #0xaaab
  80:	asr	x19, x19, #3
  84:	sub	x21, x21, x23
  88:	mul	x20, x20, x0
  8c:	lsl	x0, x22, #20
  90:	add	x21, x0, x21, lsl #40
  94:	lsl	x20, x20, #10
  98:	add	x19, x20, x19, lsl #30
  9c:	add	x19, x19, x21
  a0:	cbz	x22, a8 <lprofGetLoadModuleSignature+0xa8>
  a4:	ldr	x22, [x1]
  a8:	add	x0, x22, x19
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x21, x22, [sp, #32]
  b4:	ldp	x23, x24, [sp, #48]
  b8:	ldr	x25, [sp, #64]
  bc:	ldp	x29, x30, [sp], #80
  c0:	ret

00000000000000c4 <__llvm_profile_check_compatibility>:
  c4:	cmp	x1, #0x4f
  c8:	b.hi	ec <__llvm_profile_check_compatibility+0x28>  // b.pmore
  cc:	mov	w0, #0x1                   	// #1
  d0:	ret
  d4:	mov	w0, #0x1                   	// #1
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldr	x23, [sp, #48]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret
  ec:	stp	x29, x30, [sp, #-64]!
  f0:	mov	x29, sp
  f4:	stp	x19, x20, [sp, #16]
  f8:	mov	x19, x0
  fc:	ldr	x20, [x0]
 100:	stp	x21, x22, [sp, #32]
 104:	mov	x22, x1
 108:	ldr	x21, [x0, #16]
 10c:	str	x23, [sp, #48]
 110:	bl	0 <__llvm_profile_get_magic>
 114:	cmp	x20, x0
 118:	b.ne	d4 <__llvm_profile_check_compatibility+0x10>  // b.any
 11c:	ldr	x20, [x19, #8]
 120:	bl	0 <__llvm_profile_get_version>
 124:	cmp	x20, x0
 128:	b.ne	d4 <__llvm_profile_check_compatibility+0x10>  // b.any
 12c:	ldr	x23, [x19, #16]
 130:	bl	0 <__llvm_profile_begin_data>
 134:	mov	x20, x0
 138:	bl	0 <__llvm_profile_end_data>
 13c:	mov	x1, x0
 140:	mov	x0, x20
 144:	bl	0 <__llvm_profile_get_data_size>
 148:	cmp	x23, x0
 14c:	b.ne	d4 <__llvm_profile_check_compatibility+0x10>  // b.any
 150:	ldr	x23, [x19, #32]
 154:	bl	0 <__llvm_profile_end_counters>
 158:	mov	x20, x0
 15c:	bl	0 <__llvm_profile_begin_counters>
 160:	sub	x20, x20, x0
 164:	cmp	x23, x20, asr #3
 168:	b.ne	d4 <__llvm_profile_check_compatibility+0x10>  // b.any
 16c:	ldr	x23, [x19, #48]
 170:	bl	0 <__llvm_profile_end_names>
 174:	mov	x20, x0
 178:	bl	0 <__llvm_profile_begin_names>
 17c:	sub	x20, x20, x0
 180:	cmp	x23, x20
 184:	b.ne	d4 <__llvm_profile_check_compatibility+0x10>  // b.any
 188:	ldr	x0, [x19, #72]
 18c:	cmp	x0, #0x1
 190:	b.ne	d4 <__llvm_profile_check_compatibility+0x10>  // b.any
 194:	ldr	x1, [x19, #32]
 198:	mov	x20, #0x30                  	// #48
 19c:	ldr	x0, [x19, #48]
 1a0:	add	x1, x0, x1
 1a4:	ldr	x0, [x19, #16]
 1a8:	madd	x0, x0, x20, x1
 1ac:	add	x0, x0, #0x50
 1b0:	cmp	x0, x22
 1b4:	b.hi	d4 <__llvm_profile_check_compatibility+0x10>  // b.pmore
 1b8:	add	x19, x19, #0x50
 1bc:	bl	0 <__llvm_profile_begin_data>
 1c0:	madd	x21, x21, x20, x19
 1c4:	cmp	x19, x21
 1c8:	b.cc	1d4 <__llvm_profile_check_compatibility+0x110>  // b.lo, b.ul, b.last
 1cc:	mov	w0, #0x0                   	// #0
 1d0:	b	d8 <__llvm_profile_check_compatibility+0x14>
 1d4:	ldr	x1, [x0]
 1d8:	ldr	x2, [x19]
 1dc:	cmp	x2, x1
 1e0:	b.ne	d4 <__llvm_profile_check_compatibility+0x10>  // b.any
 1e4:	ldr	x1, [x0, #8]
 1e8:	ldr	x2, [x19, #8]
 1ec:	cmp	x2, x1
 1f0:	b.ne	d4 <__llvm_profile_check_compatibility+0x10>  // b.any
 1f4:	ldr	w1, [x0, #40]
 1f8:	ldr	w2, [x19, #40]
 1fc:	cmp	w2, w1
 200:	b.ne	d4 <__llvm_profile_check_compatibility+0x10>  // b.any
 204:	add	x19, x19, #0x30
 208:	add	x0, x0, #0x30
 20c:	b	1c4 <__llvm_profile_check_compatibility+0x100>

0000000000000210 <__llvm_profile_merge_from_buffer>:
 210:	stp	x29, x30, [sp, #-64]!
 214:	mov	x29, sp
 218:	stp	x21, x22, [sp, #32]
 21c:	mov	x21, x0
 220:	stp	x19, x20, [sp, #16]
 224:	add	x19, x0, #0x50
 228:	ldr	x20, [x21, #32]
 22c:	stp	x23, x24, [sp, #48]
 230:	adrp	x24, 8 <lprofGetLoadModuleSignature+0x8>
 234:	ldr	x22, [x0, #16]
 238:	mov	x0, #0x30                  	// #48
 23c:	ldr	x23, [x21, #48]
 240:	lsl	x20, x20, #3
 244:	madd	x22, x22, x0, x19
 248:	add	x20, x20, x23
 24c:	mov	x0, x23
 250:	bl	0 <__llvm_profile_get_num_padding_bytes>
 254:	add	x20, x20, w0, uxtb
 258:	add	x20, x22, x20
 25c:	bl	0 <__llvm_profile_begin_data>
 260:	mov	x23, x0
 264:	cmp	x19, x22
 268:	b.cc	280 <__llvm_profile_merge_from_buffer+0x70>  // b.lo, b.ul, b.last
 26c:	ldp	x19, x20, [sp, #16]
 270:	ldp	x21, x22, [sp, #32]
 274:	ldp	x23, x24, [sp, #48]
 278:	ldp	x29, x30, [sp], #64
 27c:	ret
 280:	ldr	x2, [x19, #16]
 284:	ldr	x0, [x21, #56]
 288:	ldr	w4, [x19, #40]
 28c:	sub	x2, x2, x0
 290:	mov	x0, #0x0                   	// #0
 294:	and	x2, x2, #0xfffffffffffffff8
 298:	ldr	x3, [x23, #16]
 29c:	add	x2, x22, x2
 2a0:	cmp	w4, w0
 2a4:	b.hi	2ec <__llvm_profile_merge_from_buffer+0xdc>  // b.pmore
 2a8:	ldr	x2, [x24]
 2ac:	cbz	x2, 2e0 <__llvm_profile_merge_from_buffer+0xd0>
 2b0:	ldrh	w0, [x19, #44]
 2b4:	ldrh	w1, [x19, #46]
 2b8:	cmp	w0, #0x0
 2bc:	cset	w0, ne  // ne = any
 2c0:	cmp	w1, #0x0
 2c4:	cinc	w0, w0, ne  // ne = any
 2c8:	cbz	w0, 2e0 <__llvm_profile_merge_from_buffer+0xd0>
 2cc:	mov	x0, x20
 2d0:	mov	x1, x23
 2d4:	blr	x2
 2d8:	ldr	w0, [x20]
 2dc:	add	x20, x20, x0
 2e0:	add	x19, x19, #0x30
 2e4:	add	x23, x23, #0x30
 2e8:	b	264 <__llvm_profile_merge_from_buffer+0x54>
 2ec:	ldr	x1, [x3, x0, lsl #3]
 2f0:	ldr	x5, [x2, x0, lsl #3]
 2f4:	add	x1, x1, x5
 2f8:	str	x1, [x3, x0, lsl #3]
 2fc:	add	x0, x0, #0x1
 300:	b	2a0 <__llvm_profile_merge_from_buffer+0x90>

InstrProfilingMergeFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofMergeValueProfData>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x0
  18:	mov	x24, x1
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	w26, #0x0                   	// #0
  24:	mov	w25, #0x0                   	// #0
  28:	stp	x27, x28, [sp, #80]
  2c:	bl	0 <getFirstValueProfRecord>
  30:	mov	x19, x0
  34:	ldr	w0, [x23, #4]
  38:	cmp	w0, w25
  3c:	b.hi	5c <lprofMergeValueProfData+0x5c>  // b.pmore
  40:	ldp	x19, x20, [sp, #16]
  44:	ldp	x21, x22, [sp, #32]
  48:	ldp	x23, x24, [sp, #48]
  4c:	ldp	x25, x26, [sp, #64]
  50:	ldp	x27, x28, [sp, #80]
  54:	ldp	x29, x30, [sp], #112
  58:	ret
  5c:	mov	x0, x19
  60:	bl	0 <getValueProfRecordValueData>
  64:	mov	x21, x0
  68:	mov	w28, #0x0                   	// #0
  6c:	mov	w20, #0x0                   	// #0
  70:	ldr	w0, [x19, #4]
  74:	add	w27, w20, w26
  78:	cmp	w0, w20
  7c:	b.hi	98 <lprofMergeValueProfData+0x98>  // b.pmore
  80:	mov	x0, x19
  84:	add	w25, w25, #0x1
  88:	bl	0 <getValueProfRecordNext>
  8c:	mov	w26, w27
  90:	mov	x19, x0
  94:	b	34 <lprofMergeValueProfData+0x34>
  98:	add	x0, x19, w20, uxtw
  9c:	mov	w22, #0x0                   	// #0
  a0:	ldrb	w5, [x0, #8]
  a4:	add	w4, w22, w28
  a8:	cmp	w5, w22
  ac:	b.hi	bc <lprofMergeValueProfData+0xbc>  // b.pmore
  b0:	add	w28, w28, w5
  b4:	add	w20, w20, #0x1
  b8:	b	70 <lprofMergeValueProfData+0x70>
  bc:	ubfiz	x4, x4, #4, #32
  c0:	mov	w2, w27
  c4:	add	x0, x21, x4
  c8:	mov	x1, x24
  cc:	str	w5, [sp, #108]
  d0:	add	w22, w22, #0x1
  d4:	ldr	x3, [x0, #8]
  d8:	ldr	x0, [x21, x4]
  dc:	bl	0 <__llvm_profile_instrument_target_value>
  e0:	ldr	w5, [sp, #108]
  e4:	b	a4 <lprofMergeValueProfData+0xa4>

InstrProfilingNameVar.c.o:     file format elf64-littleaarch64


InstrProfilingWriter.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofBufferWriter>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	w22, #0x20                  	// #32
  10:	umaddl	x22, w2, w22, x1
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x0
  1c:	mov	x19, x1
  20:	cmp	x19, x22
  24:	b.ne	3c <lprofBufferWriter+0x3c>  // b.any
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x21, x22, [sp, #32]
  34:	ldp	x29, x30, [sp], #48
  38:	ret
  3c:	ldp	x1, x21, [x19]
  40:	ldr	x2, [x19, #16]
  44:	mul	x21, x21, x2
  48:	cbz	x1, 58 <lprofBufferWriter+0x58>
  4c:	ldr	x0, [x20, #8]
  50:	mov	x2, x21
  54:	bl	0 <memcpy>
  58:	ldr	x2, [x20, #8]
  5c:	add	x19, x19, #0x20
  60:	add	x2, x2, x21
  64:	str	x2, [x20, #8]
  68:	b	20 <lprofBufferWriter+0x20>

000000000000006c <lprofCreateBufferIO>:
  6c:	adrp	x1, 0 <lprofBufferWriter>
  70:	mov	x3, x0
  74:	add	x0, x1, #0x0
  78:	ldr	x2, [x1]
  7c:	ldr	w4, [x0, #8]
  80:	cbnz	x2, 90 <lprofCreateBufferIO+0x24>
  84:	adrp	x2, 0 <lprofBufferWriter>
  88:	add	x2, x2, #0x0
  8c:	mov	w4, #0x2000                	// #8192
  90:	add	x1, x1, #0x0
  94:	add	x0, x1, #0x10
  98:	str	wzr, [x0, #8]
  9c:	str	x3, [x1, #16]
  a0:	str	x2, [x0, #16]
  a4:	stp	w4, wzr, [x0, #24]
  a8:	ret

00000000000000ac <lprofDeleteBufferIO>:
  ac:	stp	x29, x30, [sp, #-32]!
  b0:	mov	x29, sp
  b4:	ldr	w1, [x0, #8]
  b8:	stp	x19, x20, [sp, #16]
  bc:	adrp	x19, 0 <lprofBufferWriter>
  c0:	cbz	w1, d4 <lprofDeleteBufferIO+0x28>
  c4:	add	x1, x19, #0x0
  c8:	ldr	x0, [x0]
  cc:	ldr	x1, [x1, #48]
  d0:	blr	x1
  d4:	ldr	x0, [x19]
  d8:	add	x20, x19, #0x0
  dc:	cbz	x0, f0 <lprofDeleteBufferIO+0x44>
  e0:	ldr	x1, [x20, #48]
  e4:	blr	x1
  e8:	str	xzr, [x19]
  ec:	str	wzr, [x20, #8]
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x29, x30, [sp], #32
  f8:	ret

00000000000000fc <lprofBufferIOFlush>:
  fc:	stp	x29, x30, [sp, #-64]!
 100:	mov	x29, sp
 104:	str	x19, [sp, #16]
 108:	mov	x19, x0
 10c:	ldr	w0, [x0, #28]
 110:	cbz	w0, 154 <lprofBufferIOFlush+0x58>
 114:	mov	w0, w0
 118:	str	x0, [sp, #48]
 11c:	ldr	x0, [x19]
 120:	mov	x2, #0x1                   	// #1
 124:	ldr	x1, [x19, #16]
 128:	stp	x1, x2, [sp, #32]
 12c:	add	x1, sp, #0x20
 130:	ldr	x3, [x0]
 134:	str	wzr, [sp, #56]
 138:	blr	x3
 13c:	cbz	w0, 150 <lprofBufferIOFlush+0x54>
 140:	mov	w0, #0xffffffff            	// #-1
 144:	ldr	x19, [sp, #16]
 148:	ldp	x29, x30, [sp], #64
 14c:	ret
 150:	str	wzr, [x19, #28]
 154:	mov	w0, #0x0                   	// #0
 158:	b	144 <lprofBufferIOFlush+0x48>

000000000000015c <lprofBufferIOWrite>:
 15c:	stp	x29, x30, [sp, #-96]!
 160:	mov	x29, sp
 164:	stp	x21, x22, [sp, #32]
 168:	mov	x21, x1
 16c:	ldr	w1, [x0, #28]
 170:	stp	x19, x20, [sp, #16]
 174:	mov	w20, w2
 178:	add	w1, w2, w1
 17c:	ldr	w2, [x0, #24]
 180:	mov	x19, x0
 184:	cmp	w1, w2
 188:	b.hi	1f4 <lprofBufferIOWrite+0x98>  // b.pmore
 18c:	mov	w0, w20
 190:	str	x21, [sp, #64]
 194:	mov	x21, #0x1                   	// #1
 198:	str	x21, [sp, #72]
 19c:	str	x0, [sp, #80]
 1a0:	add	x22, sp, #0x40
 1a4:	ldr	w0, [x19, #24]
 1a8:	str	wzr, [sp, #88]
 1ac:	cmp	w0, w20
 1b0:	b.cc	204 <lprofBufferIOWrite+0xa8>  // b.lo, b.ul, b.last
 1b4:	ldr	x1, [x19, #16]
 1b8:	add	x20, sp, #0x30
 1bc:	ldr	w0, [x19, #28]
 1c0:	add	x1, x1, x0
 1c4:	mov	x0, x20
 1c8:	bl	0 <initBufferWriter>
 1cc:	mov	x1, x22
 1d0:	mov	w2, w21
 1d4:	mov	x0, x20
 1d8:	bl	0 <lprofBufferWriter>
 1dc:	ldr	x1, [x19, #16]
 1e0:	ldr	x0, [sp, #56]
 1e4:	sub	x0, x0, x1
 1e8:	str	w0, [x19, #28]
 1ec:	mov	w0, #0x0                   	// #0
 1f0:	b	220 <lprofBufferIOWrite+0xc4>
 1f4:	bl	fc <lprofBufferIOFlush>
 1f8:	cbz	w0, 18c <lprofBufferIOWrite+0x30>
 1fc:	mov	w0, #0xffffffff            	// #-1
 200:	b	220 <lprofBufferIOWrite+0xc4>
 204:	ldr	x0, [x19]
 208:	mov	w2, w21
 20c:	mov	x1, x22
 210:	ldr	x3, [x0]
 214:	blr	x3
 218:	cmp	w0, #0x0
 21c:	csetm	w0, ne  // ne = any
 220:	ldp	x19, x20, [sp, #16]
 224:	ldp	x21, x22, [sp, #32]
 228:	ldp	x29, x30, [sp], #96
 22c:	ret

0000000000000230 <writeOneValueProfData>:
 230:	stp	x29, x30, [sp, #-160]!
 234:	mov	x29, sp
 238:	stp	x19, x20, [sp, #16]
 23c:	mov	x19, x1
 240:	add	x20, x2, #0x2c
 244:	stp	x21, x22, [sp, #32]
 248:	mov	x22, x0
 24c:	mov	x21, #0x0                   	// #0
 250:	stp	x23, x24, [sp, #48]
 254:	mov	x23, x2
 258:	stp	x25, x26, [sp, #64]
 25c:	add	x25, x29, #0x90
 260:	stp	x27, x28, [sp, #80]
 264:	ldrh	w0, [x20, x21, lsl #1]
 268:	cbnz	w0, 2dc <writeOneValueProfData+0xac>
 26c:	str	xzr, [x25, x21, lsl #3]
 270:	cbz	x21, 2d4 <writeOneValueProfData+0xa4>
 274:	ldr	x2, [x19]
 278:	mov	x1, x25
 27c:	mov	x0, x23
 280:	blr	x2
 284:	mov	w21, w0
 288:	cbz	w0, 40c <writeOneValueProfData+0x1dc>
 28c:	ldr	x0, [x19, #32]
 290:	blr	x0
 294:	stp	w0, w21, [x29, #120]
 298:	add	x21, x29, #0x78
 29c:	mov	x0, x22
 2a0:	mov	x1, x21
 2a4:	mov	w2, #0x8                   	// #8
 2a8:	bl	15c <lprofBufferIOWrite>
 2ac:	cbz	w0, 308 <writeOneValueProfData+0xd8>
 2b0:	mov	w0, #0xffffffff            	// #-1
 2b4:	mov	sp, x29
 2b8:	ldp	x19, x20, [sp, #16]
 2bc:	ldp	x21, x22, [sp, #32]
 2c0:	ldp	x23, x24, [sp, #48]
 2c4:	ldp	x25, x26, [sp, #64]
 2c8:	ldp	x27, x28, [sp, #80]
 2cc:	ldp	x29, x30, [sp], #160
 2d0:	ret
 2d4:	mov	x21, #0x1                   	// #1
 2d8:	b	264 <writeOneValueProfData+0x34>
 2dc:	ldr	x1, [x19, #8]
 2e0:	blr	x1
 2e4:	sub	w2, w0, #0x8
 2e8:	add	x0, x2, #0xf
 2ec:	mov	w1, #0x0                   	// #0
 2f0:	and	x0, x0, #0x1fffffff0
 2f4:	sub	sp, sp, x0
 2f8:	mov	x0, sp
 2fc:	str	x0, [x25, x21, lsl #3]
 300:	bl	0 <memset>
 304:	b	270 <writeOneValueProfData+0x40>
 308:	ldr	x1, [x19, #16]
 30c:	mov	x0, x21
 310:	add	x21, x21, #0x8
 314:	blr	x1
 318:	cmp	x21, x0
 31c:	b.ne	2b0 <writeOneValueProfData+0x80>  // b.any
 320:	adrp	x23, 0 <lprofBufferWriter>
 324:	add	x23, x23, #0x0
 328:	add	x23, x23, #0x38
 32c:	add	x0, x29, #0x80
 330:	mov	x24, #0x0                   	// #0
 334:	str	x0, [x29, #104]
 338:	ldrh	w0, [x20]
 33c:	mov	w26, w24
 340:	cbnz	w0, 354 <writeOneValueProfData+0x124>
 344:	add	x20, x20, #0x2
 348:	cbnz	x24, 40c <writeOneValueProfData+0x1dc>
 34c:	mov	x24, #0x1                   	// #1
 350:	b	338 <writeOneValueProfData+0x108>
 354:	ldr	x1, [x29, #104]
 358:	mov	w2, #0x8                   	// #8
 35c:	stp	w24, w0, [x29, #128]
 360:	mov	x0, x22
 364:	bl	15c <lprofBufferIOWrite>
 368:	cbnz	w0, 2b0 <writeOneValueProfData+0x80>
 36c:	ldrh	w0, [x20]
 370:	ldr	x1, [x19, #8]
 374:	blr	x1
 378:	sub	w2, w0, #0x8
 37c:	ldr	x1, [x25, x24, lsl #3]
 380:	mov	x0, x22
 384:	bl	15c <lprofBufferIOWrite>
 388:	cbnz	w0, 2b0 <writeOneValueProfData+0x80>
 38c:	mov	w28, #0x0                   	// #0
 390:	ldrh	w0, [x20]
 394:	cmp	w0, w28
 398:	b.ls	344 <writeOneValueProfData+0x114>  // b.plast
 39c:	ldr	x2, [x19, #24]
 3a0:	mov	w1, w28
 3a4:	mov	w0, w26
 3a8:	blr	x2
 3ac:	mov	w21, w0
 3b0:	cbz	w0, 404 <writeOneValueProfData+0x1d4>
 3b4:	mov	x3, #0x0                   	// #0
 3b8:	ldr	x6, [x19, #40]
 3bc:	cmp	w21, #0x10
 3c0:	mov	w0, #0x10                  	// #16
 3c4:	csel	w27, w21, w0, ls  // ls = plast
 3c8:	mov	x2, x23
 3cc:	mov	w1, w28
 3d0:	mov	w4, w27
 3d4:	mov	w0, w26
 3d8:	blr	x6
 3dc:	mov	x3, x0
 3e0:	lsl	w2, w27, #4
 3e4:	mov	x1, x23
 3e8:	mov	x0, x22
 3ec:	str	x3, [x29, #96]
 3f0:	bl	15c <lprofBufferIOWrite>
 3f4:	cbnz	w0, 2b0 <writeOneValueProfData+0x80>
 3f8:	subs	w21, w21, w27
 3fc:	ldr	x3, [x29, #96]
 400:	b.ne	3b8 <writeOneValueProfData+0x188>  // b.any
 404:	add	w28, w28, #0x1
 408:	b	390 <writeOneValueProfData+0x160>
 40c:	mov	w0, #0x0                   	// #0
 410:	b	2b4 <writeOneValueProfData+0x84>

0000000000000414 <lprofWriteDataImpl>:
 414:	stp	x29, x30, [sp, #-432]!
 418:	mov	x29, sp
 41c:	stp	x19, x20, [sp, #16]
 420:	mov	x20, x1
 424:	mov	x19, x4
 428:	mov	x1, x2
 42c:	stp	x21, x22, [sp, #32]
 430:	mov	x22, x0
 434:	mov	x21, x7
 438:	mov	x0, x20
 43c:	stp	x23, x24, [sp, #48]
 440:	mov	x23, x2
 444:	mov	x24, x5
 448:	stp	x25, x26, [sp, #64]
 44c:	mov	x26, x3
 450:	mov	x25, x6
 454:	str	x27, [sp, #80]
 458:	bl	0 <__llvm_profile_get_data_size>
 45c:	cbnz	x0, 484 <lprofWriteDataImpl+0x70>
 460:	mov	w19, #0x0                   	// #0
 464:	mov	w0, w19
 468:	ldp	x19, x20, [sp, #16]
 46c:	ldp	x21, x22, [sp, #32]
 470:	ldp	x23, x24, [sp, #48]
 474:	ldp	x25, x26, [sp, #64]
 478:	ldr	x27, [sp, #80]
 47c:	ldp	x29, x30, [sp], #432
 480:	ret
 484:	sub	x19, x19, x26
 488:	sub	x21, x21, x25
 48c:	add	x4, sp, #0x70
 490:	add	x3, sp, #0x68
 494:	asr	x19, x19, #3
 498:	mov	x2, x21
 49c:	mov	x1, x19
 4a0:	add	x5, sp, #0x78
 4a4:	mov	x27, x0
 4a8:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
 4ac:	bl	0 <__llvm_profile_get_magic>
 4b0:	str	x0, [sp, #128]
 4b4:	bl	0 <__llvm_profile_get_version>
 4b8:	stp	x0, x27, [sp, #136]
 4bc:	add	x2, sp, #0x80
 4c0:	ldr	x0, [sp, #112]
 4c4:	str	x0, [sp, #168]
 4c8:	str	x0, [sp, #352]
 4cc:	mov	x4, #0x1                   	// #1
 4d0:	ldr	w0, [sp, #432]
 4d4:	ldr	x1, [sp, #104]
 4d8:	str	x2, [sp, #208]
 4dc:	mov	x2, #0x50                  	// #80
 4e0:	cmp	w0, #0x0
 4e4:	stp	x1, x19, [sp, #152]
 4e8:	stp	x21, x26, [sp, #176]
 4ec:	stp	x25, x4, [sp, #192]
 4f0:	csel	x25, x25, xzr, eq  // eq = none
 4f4:	str	x2, [sp, #216]
 4f8:	mov	x2, #0x30                  	// #48
 4fc:	str	x4, [sp, #224]
 500:	str	wzr, [sp, #232]
 504:	str	x20, [sp, #240]
 508:	str	x2, [sp, #248]
 50c:	mov	w2, #0x7                   	// #7
 510:	str	x27, [sp, #256]
 514:	str	wzr, [sp, #264]
 518:	stp	xzr, x4, [sp, #272]
 51c:	str	x1, [sp, #288]
 520:	mov	x1, #0x8                   	// #8
 524:	str	w4, [sp, #296]
 528:	str	x26, [sp, #304]
 52c:	str	x1, [sp, #312]
 530:	add	x1, sp, #0xd0
 534:	str	x19, [sp, #320]
 538:	str	wzr, [sp, #328]
 53c:	stp	xzr, x4, [sp, #336]
 540:	str	w4, [sp, #360]
 544:	stp	x25, x4, [sp, #368]
 548:	ldr	x3, [x22]
 54c:	str	x21, [sp, #384]
 550:	ldr	x0, [sp, #120]
 554:	str	wzr, [sp, #392]
 558:	stp	xzr, x4, [sp, #400]
 55c:	str	x0, [sp, #416]
 560:	mov	x0, x22
 564:	str	w4, [sp, #424]
 568:	blr	x3
 56c:	cbz	w0, 578 <lprofWriteDataImpl+0x164>
 570:	mov	w19, #0xffffffff            	// #-1
 574:	b	464 <lprofWriteDataImpl+0x50>
 578:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 57c:	cbnz	w0, 460 <lprofWriteDataImpl+0x4c>
 580:	cbz	x24, 460 <lprofWriteDataImpl+0x4c>
 584:	mov	x0, x22
 588:	bl	6c <lprofCreateBufferIO>
 58c:	mov	x21, x0
 590:	cmp	x23, x20
 594:	b.hi	5b4 <lprofWriteDataImpl+0x1a0>  // b.pmore
 598:	mov	x0, x21
 59c:	bl	fc <lprofBufferIOFlush>
 5a0:	mov	w19, w0
 5a4:	cbnz	w0, 570 <lprofWriteDataImpl+0x15c>
 5a8:	mov	x0, x21
 5ac:	bl	ac <lprofDeleteBufferIO>
 5b0:	b	464 <lprofWriteDataImpl+0x50>
 5b4:	mov	x2, x20
 5b8:	mov	x1, x24
 5bc:	mov	x0, x21
 5c0:	bl	230 <writeOneValueProfData>
 5c4:	cbnz	w0, 570 <lprofWriteDataImpl+0x15c>
 5c8:	add	x20, x20, #0x30
 5cc:	b	590 <lprofWriteDataImpl+0x17c>

00000000000005d0 <lprofWriteData>:
 5d0:	sub	sp, sp, #0x60
 5d4:	stp	x29, x30, [sp, #16]
 5d8:	add	x29, sp, #0x10
 5dc:	stp	x19, x20, [sp, #32]
 5e0:	mov	x19, x0
 5e4:	stp	x21, x22, [sp, #48]
 5e8:	stp	x23, x24, [sp, #64]
 5ec:	mov	x24, x1
 5f0:	stp	x25, x26, [sp, #80]
 5f4:	mov	w26, w2
 5f8:	bl	0 <__llvm_profile_begin_data>
 5fc:	mov	x20, x0
 600:	bl	0 <__llvm_profile_end_data>
 604:	mov	x21, x0
 608:	bl	0 <__llvm_profile_begin_counters>
 60c:	mov	x22, x0
 610:	bl	0 <__llvm_profile_end_counters>
 614:	mov	x23, x0
 618:	bl	0 <__llvm_profile_begin_names>
 61c:	mov	x25, x0
 620:	bl	0 <__llvm_profile_end_names>
 624:	str	w26, [sp]
 628:	mov	x7, x0
 62c:	mov	x6, x25
 630:	mov	x5, x24
 634:	mov	x4, x23
 638:	mov	x3, x22
 63c:	mov	x2, x21
 640:	mov	x1, x20
 644:	mov	x0, x19
 648:	bl	414 <lprofWriteDataImpl>
 64c:	ldp	x29, x30, [sp, #16]
 650:	ldp	x19, x20, [sp, #32]
 654:	ldp	x21, x22, [sp, #48]
 658:	ldp	x23, x24, [sp, #64]
 65c:	ldp	x25, x26, [sp, #80]
 660:	add	sp, sp, #0x60
 664:	ret

InstrProfilingPlatformDarwin.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformFuchsia.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformLinux.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_begin_data>:
   0:	adrp	x0, 0 <__start___llvm_prf_data>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <__llvm_profile_end_data>:
   c:	adrp	x0, 0 <__stop___llvm_prf_data>
  10:	add	x0, x0, #0x0
  14:	ret

0000000000000018 <__llvm_profile_begin_names>:
  18:	adrp	x0, 0 <__start___llvm_prf_names>
  1c:	add	x0, x0, #0x0
  20:	ret

0000000000000024 <__llvm_profile_end_names>:
  24:	adrp	x0, 0 <__stop___llvm_prf_names>
  28:	add	x0, x0, #0x0
  2c:	ret

0000000000000030 <__llvm_profile_begin_counters>:
  30:	adrp	x0, 0 <__start___llvm_prf_cnts>
  34:	add	x0, x0, #0x0
  38:	ret

000000000000003c <__llvm_profile_end_counters>:
  3c:	adrp	x0, 0 <__stop___llvm_prf_cnts>
  40:	add	x0, x0, #0x0
  44:	ret

0000000000000048 <__llvm_profile_begin_orderfile>:
  48:	adrp	x0, 0 <__start___llvm_orderfile>
  4c:	add	x0, x0, #0x0
  50:	ret

0000000000000054 <__llvm_profile_begin_vnodes>:
  54:	adrp	x0, 0 <__start___llvm_prf_vnds>
  58:	add	x0, x0, #0x0
  5c:	ret

0000000000000060 <__llvm_profile_end_vnodes>:
  60:	adrp	x0, 0 <__stop___llvm_prf_vnds>
  64:	add	x0, x0, #0x0
  68:	ret

InstrProfilingPlatformOther.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformWindows.c.o:     file format elf64-littleaarch64


InstrProfilingRuntime.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_InstrProfilingRuntime.cpp>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__llvm_profile_initialize_file>
   c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
  10:	cbnz	w0, 1c <_GLOBAL__sub_I_InstrProfilingRuntime.cpp+0x1c>
  14:	ldp	x29, x30, [sp], #16
  18:	b	0 <__llvm_profile_register_write_file_atexit>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

InstrProfilingUtil.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_recursive_mkdir>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	adrp	x22, 0 <__llvm_profile_recursive_mkdir>
  10:	ldr	x22, [x22]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x0
  1c:	add	x19, x0, #0x1
  20:	ldrb	w21, [x19]
  24:	cbnz	w21, 38 <__llvm_profile_recursive_mkdir+0x38>
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x21, x22, [sp, #32]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	cmp	w21, #0x2f
  3c:	b.ne	54 <__llvm_profile_recursive_mkdir+0x54>  // b.any
  40:	strb	wzr, [x19]
  44:	mov	x0, x20
  48:	ldr	w1, [x22]
  4c:	bl	0 <mkdir>
  50:	strb	w21, [x19]
  54:	add	x19, x19, #0x1
  58:	b	20 <__llvm_profile_recursive_mkdir+0x20>

000000000000005c <__llvm_profile_set_dir_mode>:
  5c:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
  60:	ldr	x1, [x1]
  64:	str	w0, [x1]
  68:	ret

000000000000006c <__llvm_profile_get_dir_mode>:
  6c:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
  70:	ldr	x0, [x0]
  74:	ldr	w0, [x0]
  78:	ret

000000000000007c <lprofGetHostName>:
  7c:	stp	x29, x30, [sp, #-448]!
  80:	mov	x29, sp
  84:	str	x21, [sp, #32]
  88:	add	x21, sp, #0x38
  8c:	stp	x19, x20, [sp, #16]
  90:	mov	x19, x0
  94:	mov	w20, w1
  98:	mov	x0, x21
  9c:	bl	0 <uname>
  a0:	tbnz	w0, #31, b8 <lprofGetHostName+0x3c>
  a4:	sxtw	x2, w20
  a8:	add	x1, x21, #0x41
  ac:	mov	x0, x19
  b0:	bl	0 <strncpy>
  b4:	mov	w0, #0x0                   	// #0
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #448
  c4:	ret

00000000000000c8 <lprofLockFd>:
  c8:	stp	x29, x30, [sp, #-64]!
  cc:	mov	x29, sp
  d0:	stp	x19, x20, [sp, #16]
  d4:	mov	w19, w0
  d8:	add	x20, sp, #0x20
  dc:	strh	wzr, [sp, #34]
  e0:	stp	xzr, xzr, [sp, #40]
  e4:	bl	0 <getpid>
  e8:	str	w0, [sp, #56]
  ec:	mov	w0, #0x1                   	// #1
  f0:	strh	w0, [sp, #32]
  f4:	mov	x2, x20
  f8:	mov	w0, w19
  fc:	mov	w1, #0x7                   	// #7
 100:	bl	0 <fcntl>
 104:	cmn	w0, #0x1
 108:	b.eq	114 <lprofLockFd+0x4c>  // b.none
 10c:	mov	w0, #0x0                   	// #0
 110:	b	12c <lprofLockFd+0x64>
 114:	bl	0 <__errno_location>
 118:	ldr	w0, [x0]
 11c:	cmp	w0, #0x4
 120:	b.eq	f4 <lprofLockFd+0x2c>  // b.none
 124:	cmp	w0, #0x25
 128:	csetm	w0, eq  // eq = none
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x29, x30, [sp], #64
 134:	ret

0000000000000138 <lprofUnlockFd>:
 138:	stp	x29, x30, [sp, #-64]!
 13c:	mov	x29, sp
 140:	stp	x19, x20, [sp, #16]
 144:	mov	w19, w0
 148:	add	x20, sp, #0x20
 14c:	strh	wzr, [sp, #34]
 150:	stp	xzr, xzr, [sp, #40]
 154:	bl	0 <getpid>
 158:	str	w0, [sp, #56]
 15c:	mov	w0, #0x2                   	// #2
 160:	strh	w0, [sp, #32]
 164:	mov	x2, x20
 168:	mov	w0, w19
 16c:	mov	w1, #0x7                   	// #7
 170:	bl	0 <fcntl>
 174:	cmn	w0, #0x1
 178:	b.eq	184 <lprofUnlockFd+0x4c>  // b.none
 17c:	mov	w0, #0x0                   	// #0
 180:	b	19c <lprofUnlockFd+0x64>
 184:	bl	0 <__errno_location>
 188:	ldr	w0, [x0]
 18c:	cmp	w0, #0x4
 190:	b.eq	164 <lprofUnlockFd+0x2c>  // b.none
 194:	cmp	w0, #0x25
 198:	csetm	w0, eq  // eq = none
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldp	x29, x30, [sp], #64
 1a4:	ret

00000000000001a8 <lprofLockFileHandle>:
 1a8:	stp	x29, x30, [sp, #-16]!
 1ac:	mov	x29, sp
 1b0:	bl	0 <fileno>
 1b4:	ldp	x29, x30, [sp], #16
 1b8:	b	c8 <lprofLockFd>

00000000000001bc <lprofUnlockFileHandle>:
 1bc:	stp	x29, x30, [sp, #-16]!
 1c0:	mov	x29, sp
 1c4:	bl	0 <fileno>
 1c8:	ldp	x29, x30, [sp], #16
 1cc:	b	138 <lprofUnlockFd>

00000000000001d0 <lprofOpenFileEx>:
 1d0:	stp	x29, x30, [sp, #-32]!
 1d4:	mov	w2, #0x1b6                 	// #438
 1d8:	mov	w1, #0x42                  	// #66
 1dc:	mov	x29, sp
 1e0:	str	x19, [sp, #16]
 1e4:	bl	0 <open>
 1e8:	tbnz	w0, #31, 230 <lprofOpenFileEx+0x60>
 1ec:	mov	w19, w0
 1f0:	bl	c8 <lprofLockFd>
 1f4:	cbz	w0, 218 <lprofOpenFileEx+0x48>
 1f8:	adrp	x0, 0 <stderr>
 1fc:	adrp	x2, 0 <__llvm_profile_recursive_mkdir>
 200:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 204:	add	x2, x2, #0x0
 208:	ldr	x0, [x0]
 20c:	add	x1, x1, #0x0
 210:	ldr	x0, [x0]
 214:	bl	0 <fprintf>
 218:	mov	w0, w19
 21c:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 220:	ldr	x19, [sp, #16]
 224:	add	x1, x1, #0x0
 228:	ldp	x29, x30, [sp], #32
 22c:	b	0 <fdopen>
 230:	mov	x0, #0x0                   	// #0
 234:	ldr	x19, [sp, #16]
 238:	ldp	x29, x30, [sp], #32
 23c:	ret

0000000000000240 <lprofGetPathPrefix>:
 240:	stp	x29, x30, [sp, #-48]!
 244:	mov	x29, sp
 248:	stp	x19, x20, [sp, #16]
 24c:	mov	x20, x1
 250:	str	x21, [sp, #32]
 254:	mov	x21, x0
 258:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 25c:	add	x0, x0, #0x0
 260:	bl	0 <getenv>
 264:	mov	x19, x0
 268:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 26c:	add	x0, x0, #0x0
 270:	bl	0 <getenv>
 274:	str	xzr, [x20]
 278:	str	wzr, [x21]
 27c:	cbz	x19, 2a4 <lprofGetPathPrefix+0x64>
 280:	ldrb	w2, [x19]
 284:	cbz	w2, 2b8 <lprofGetPathPrefix+0x78>
 288:	cbz	x0, 298 <lprofGetPathPrefix+0x58>
 28c:	bl	0 <atoi>
 290:	tbnz	w0, #31, 298 <lprofGetPathPrefix+0x58>
 294:	str	w0, [x21]
 298:	mov	x0, x19
 29c:	bl	0 <strlen>
 2a0:	str	x0, [x20]
 2a4:	mov	x0, x19
 2a8:	ldp	x19, x20, [sp, #16]
 2ac:	ldr	x21, [sp, #32]
 2b0:	ldp	x29, x30, [sp], #48
 2b4:	ret
 2b8:	mov	x19, #0x0                   	// #0
 2bc:	b	2a4 <lprofGetPathPrefix+0x64>

00000000000002c0 <lprofApplyPathPrefix>:
 2c0:	stp	x29, x30, [sp, #-48]!
 2c4:	mov	x29, sp
 2c8:	stp	x19, x20, [sp, #16]
 2cc:	mov	x19, x3
 2d0:	mov	x20, x1
 2d4:	stp	x21, x22, [sp, #32]
 2d8:	mov	x21, x2
 2dc:	mov	x22, x0
 2e0:	add	x0, x1, #0x1
 2e4:	mov	w1, #0x0                   	// #0
 2e8:	cmp	w1, w4
 2ec:	b.lt	340 <lprofApplyPathPrefix+0x80>  // b.tstop
 2f0:	mov	x1, x21
 2f4:	add	x21, x21, x19
 2f8:	mov	x2, x19
 2fc:	mov	x0, x22
 300:	bl	0 <memcpy>
 304:	ldurb	w0, [x21, #-1]
 308:	cmp	w0, #0x2f
 30c:	b.eq	31c <lprofApplyPathPrefix+0x5c>  // b.none
 310:	mov	w0, #0x2f                  	// #47
 314:	strb	w0, [x22, x19]
 318:	add	x19, x19, #0x1
 31c:	mov	x0, x20
 320:	bl	0 <strlen>
 324:	mov	x1, x20
 328:	add	x2, x0, #0x1
 32c:	add	x0, x22, x19
 330:	ldp	x19, x20, [sp, #16]
 334:	ldp	x21, x22, [sp, #32]
 338:	ldp	x29, x30, [sp], #48
 33c:	b	0 <memcpy>
 340:	ldrb	w2, [x0]
 344:	cbz	w2, 2f0 <lprofApplyPathPrefix+0x30>
 348:	cmp	w2, #0x2f
 34c:	b.ne	358 <lprofApplyPathPrefix+0x98>  // b.any
 350:	add	w1, w1, #0x1
 354:	mov	x20, x0
 358:	add	x0, x0, #0x1
 35c:	b	2e8 <lprofApplyPathPrefix+0x28>

0000000000000360 <lprofFindFirstDirSeparator>:
 360:	mov	w1, #0x2f                  	// #47
 364:	b	0 <strchr>

0000000000000368 <lprofFindLastDirSeparator>:
 368:	mov	w1, #0x2f                  	// #47
 36c:	b	0 <strrchr>

0000000000000370 <lprofSuspendSigKill>:
 370:	stp	x29, x30, [sp, #-32]!
 374:	mov	w0, #0x2                   	// #2
 378:	mov	x29, sp
 37c:	add	x1, sp, #0x1c
 380:	str	wzr, [sp, #28]
 384:	bl	0 <prctl>
 388:	cbnz	w0, 3a4 <lprofSuspendSigKill+0x34>
 38c:	ldr	w0, [sp, #28]
 390:	cmp	w0, #0x9
 394:	b.ne	3a4 <lprofSuspendSigKill+0x34>  // b.any
 398:	mov	w1, #0x0                   	// #0
 39c:	mov	w0, #0x1                   	// #1
 3a0:	bl	0 <prctl>
 3a4:	ldr	w0, [sp, #28]
 3a8:	ldp	x29, x30, [sp], #32
 3ac:	cmp	w0, #0x9
 3b0:	cset	w0, eq  // eq = none
 3b4:	ret

00000000000003b8 <lprofRestoreSigKill>:
 3b8:	mov	w1, #0x9                   	// #9
 3bc:	mov	w0, #0x1                   	// #1
 3c0:	b	0 <prctl>
