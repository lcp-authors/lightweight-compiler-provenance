
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcap.so.2.31_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001a10 <.init>:
    1a10:	stp	x29, x30, [sp, #-16]!
    1a14:	mov	x29, sp
    1a18:	bl	1d50 <cap_to_name@plt+0x10>
    1a1c:	ldp	x29, x30, [sp], #16
    1a20:	ret

Disassembly of section .plt:

0000000000001a30 <removexattr@plt-0x20>:
    1a30:	stp	x16, x30, [sp, #-16]!
    1a34:	adrp	x16, 14000 <cap_set_nsowner@@Base+0x100e8>
    1a38:	ldr	x17, [x16, #4088]
    1a3c:	add	x16, x16, #0xff8
    1a40:	br	x17
    1a44:	nop
    1a48:	nop
    1a4c:	nop

0000000000001a50 <removexattr@plt>:
    1a50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a54:	ldr	x17, [x16]
    1a58:	add	x16, x16, #0x0
    1a5c:	br	x17

0000000000001a60 <setuid@plt>:
    1a60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #8]
    1a68:	add	x16, x16, #0x8
    1a6c:	br	x17

0000000000001a70 <strtoul@plt>:
    1a70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #16]
    1a78:	add	x16, x16, #0x10
    1a7c:	br	x17

0000000000001a80 <strlen@plt>:
    1a80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #24]
    1a88:	add	x16, x16, #0x18
    1a8c:	br	x17

0000000000001a90 <psx_load_syscalls@plt>:
    1a90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #32]
    1a98:	add	x16, x16, #0x20
    1a9c:	br	x17

0000000000001aa0 <cap_get_secbits@plt>:
    1aa0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #40]
    1aa8:	add	x16, x16, #0x28
    1aac:	br	x17

0000000000001ab0 <cap_clear_flag@plt>:
    1ab0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #48]
    1ab8:	add	x16, x16, #0x30
    1abc:	br	x17

0000000000001ac0 <cap_max_bits@plt>:
    1ac0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #56]
    1ac8:	add	x16, x16, #0x38
    1acc:	br	x17

0000000000001ad0 <_libcap_strdup@plt>:
    1ad0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #64]
    1ad8:	add	x16, x16, #0x40
    1adc:	br	x17

0000000000001ae0 <cap_get_ambient@plt>:
    1ae0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #72]
    1ae8:	add	x16, x16, #0x48
    1aec:	br	x17

0000000000001af0 <__cxa_finalize@plt>:
    1af0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #80]
    1af8:	add	x16, x16, #0x50
    1afc:	br	x17

0000000000001b00 <sprintf@plt>:
    1b00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #88]
    1b08:	add	x16, x16, #0x58
    1b0c:	br	x17

0000000000001b10 <asprintf@plt>:
    1b10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #96]
    1b18:	add	x16, x16, #0x60
    1b1c:	br	x17

0000000000001b20 <__ctype_tolower_loc@plt>:
    1b20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #104]
    1b28:	add	x16, x16, #0x68
    1b2c:	br	x17

0000000000001b30 <capset@plt>:
    1b30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #112]
    1b38:	add	x16, x16, #0x70
    1b3c:	br	x17

0000000000001b40 <malloc@plt>:
    1b40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #120]
    1b48:	add	x16, x16, #0x78
    1b4c:	br	x17

0000000000001b50 <cap_set_syscall@plt>:
    1b50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #128]
    1b58:	add	x16, x16, #0x80
    1b5c:	br	x17

0000000000001b60 <setxattr@plt>:
    1b60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #136]
    1b68:	add	x16, x16, #0x88
    1b6c:	br	x17

0000000000001b70 <cap_reset_ambient@plt>:
    1b70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #144]
    1b78:	add	x16, x16, #0x90
    1b7c:	br	x17

0000000000001b80 <cap_get_bound@plt>:
    1b80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #152]
    1b88:	add	x16, x16, #0x98
    1b8c:	br	x17

0000000000001b90 <memset@plt>:
    1b90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #160]
    1b98:	add	x16, x16, #0xa0
    1b9c:	br	x17

0000000000001ba0 <calloc@plt>:
    1ba0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #168]
    1ba8:	add	x16, x16, #0xa8
    1bac:	br	x17

0000000000001bb0 <cap_set_proc@plt>:
    1bb0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #176]
    1bb8:	add	x16, x16, #0xb0
    1bbc:	br	x17

0000000000001bc0 <__gmon_start__@plt>:
    1bc0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #184]
    1bc8:	add	x16, x16, #0xb8
    1bcc:	br	x17

0000000000001bd0 <fremovexattr@plt>:
    1bd0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #192]
    1bd8:	add	x16, x16, #0xc0
    1bdc:	br	x17

0000000000001be0 <setgid@plt>:
    1be0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #200]
    1be8:	add	x16, x16, #0xc8
    1bec:	br	x17

0000000000001bf0 <cap_init@plt>:
    1bf0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #208]
    1bf8:	add	x16, x16, #0xd0
    1bfc:	br	x17

0000000000001c00 <getxattr@plt>:
    1c00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #216]
    1c08:	add	x16, x16, #0xd8
    1c0c:	br	x17

0000000000001c10 <__ctype_b_loc@plt>:
    1c10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #224]
    1c18:	add	x16, x16, #0xe0
    1c1c:	br	x17

0000000000001c20 <cap_get_proc@plt>:
    1c20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #232]
    1c28:	add	x16, x16, #0xe8
    1c2c:	br	x17

0000000000001c30 <__lxstat64@plt>:
    1c30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #240]
    1c38:	add	x16, x16, #0xf0
    1c3c:	br	x17

0000000000001c40 <cap_drop_bound@plt>:
    1c40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #248]
    1c48:	add	x16, x16, #0xf8
    1c4c:	br	x17

0000000000001c50 <free@plt>:
    1c50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #256]
    1c58:	add	x16, x16, #0x100
    1c5c:	br	x17

0000000000001c60 <__fxstat64@plt>:
    1c60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #264]
    1c68:	add	x16, x16, #0x108
    1c6c:	br	x17

0000000000001c70 <fgetxattr@plt>:
    1c70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #272]
    1c78:	add	x16, x16, #0x110
    1c7c:	br	x17

0000000000001c80 <setgroups@plt>:
    1c80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #280]
    1c88:	add	x16, x16, #0x118
    1c8c:	br	x17

0000000000001c90 <strcpy@plt>:
    1c90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #288]
    1c98:	add	x16, x16, #0x120
    1c9c:	br	x17

0000000000001ca0 <fsetxattr@plt>:
    1ca0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #296]
    1ca8:	add	x16, x16, #0x128
    1cac:	br	x17

0000000000001cb0 <capgetp@plt>:
    1cb0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #304]
    1cb8:	add	x16, x16, #0x130
    1cbc:	br	x17

0000000000001cc0 <cap_free@plt>:
    1cc0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #312]
    1cc8:	add	x16, x16, #0x138
    1ccc:	br	x17

0000000000001cd0 <cap_set_flag@plt>:
    1cd0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #320]
    1cd8:	add	x16, x16, #0x140
    1cdc:	br	x17

0000000000001ce0 <cap_compare@plt>:
    1ce0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #328]
    1ce8:	add	x16, x16, #0x148
    1cec:	br	x17

0000000000001cf0 <capget@plt>:
    1cf0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #336]
    1cf8:	add	x16, x16, #0x150
    1cfc:	br	x17

0000000000001d00 <cap_set_secbits@plt>:
    1d00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #344]
    1d08:	add	x16, x16, #0x158
    1d0c:	br	x17

0000000000001d10 <__errno_location@plt>:
    1d10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #352]
    1d18:	add	x16, x16, #0x160
    1d1c:	br	x17

0000000000001d20 <prctl@plt>:
    1d20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #360]
    1d28:	add	x16, x16, #0x168
    1d2c:	br	x17

0000000000001d30 <syscall@plt>:
    1d30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #368]
    1d38:	add	x16, x16, #0x170
    1d3c:	br	x17

0000000000001d40 <cap_to_name@plt>:
    1d40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #376]
    1d48:	add	x16, x16, #0x178
    1d4c:	br	x17

Disassembly of section .text:

0000000000001d50 <cap_max_bits@@Base-0x154>:
    1d50:	adrp	x0, 14000 <cap_set_nsowner@@Base+0x100e8>
    1d54:	ldr	x0, [x0, #4056]
    1d58:	cbz	x0, 1d60 <cap_to_name@plt+0x20>
    1d5c:	b	1bc0 <__gmon_start__@plt>
    1d60:	ret
    1d64:	nop
    1d68:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x110e8>
    1d6c:	add	x0, x0, #0x2c8
    1d70:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x110e8>
    1d74:	add	x1, x1, #0x2c8
    1d78:	cmp	x1, x0
    1d7c:	b.eq	1d94 <cap_to_name@plt+0x54>  // b.none
    1d80:	adrp	x1, 14000 <cap_set_nsowner@@Base+0x100e8>
    1d84:	ldr	x1, [x1, #4040]
    1d88:	cbz	x1, 1d94 <cap_to_name@plt+0x54>
    1d8c:	mov	x16, x1
    1d90:	br	x16
    1d94:	ret
    1d98:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x110e8>
    1d9c:	add	x0, x0, #0x2c8
    1da0:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x110e8>
    1da4:	add	x1, x1, #0x2c8
    1da8:	sub	x1, x1, x0
    1dac:	lsr	x2, x1, #63
    1db0:	add	x1, x2, x1, asr #3
    1db4:	cmp	xzr, x1, asr #1
    1db8:	asr	x1, x1, #1
    1dbc:	b.eq	1dd4 <cap_to_name@plt+0x94>  // b.none
    1dc0:	adrp	x2, 14000 <cap_set_nsowner@@Base+0x100e8>
    1dc4:	ldr	x2, [x2, #4064]
    1dc8:	cbz	x2, 1dd4 <cap_to_name@plt+0x94>
    1dcc:	mov	x16, x2
    1dd0:	br	x16
    1dd4:	ret
    1dd8:	stp	x29, x30, [sp, #-32]!
    1ddc:	mov	x29, sp
    1de0:	str	x19, [sp, #16]
    1de4:	adrp	x19, 15000 <cap_set_nsowner@@Base+0x110e8>
    1de8:	ldrb	w0, [x19, #712]
    1dec:	cbnz	w0, 1e14 <cap_to_name@plt+0xd4>
    1df0:	adrp	x0, 14000 <cap_set_nsowner@@Base+0x100e8>
    1df4:	ldr	x0, [x0, #4048]
    1df8:	cbz	x0, 1e08 <cap_to_name@plt+0xc8>
    1dfc:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x110e8>
    1e00:	ldr	x0, [x0, #384]
    1e04:	bl	1af0 <__cxa_finalize@plt>
    1e08:	bl	1d68 <cap_to_name@plt+0x28>
    1e0c:	mov	w0, #0x1                   	// #1
    1e10:	strb	w0, [x19, #712]
    1e14:	ldr	x19, [sp, #16]
    1e18:	ldp	x29, x30, [sp], #32
    1e1c:	ret
    1e20:	b	1d98 <cap_to_name@plt+0x58>
    1e24:	stp	x29, x30, [sp, #-48]!
    1e28:	stp	x22, x21, [sp, #16]
    1e2c:	stp	x20, x19, [sp, #32]
    1e30:	mov	x29, sp
    1e34:	adrp	x20, 15000 <cap_set_nsowner@@Base+0x110e8>
    1e38:	ldr	w8, [x20, #716]
    1e3c:	cbnz	w8, 1e94 <cap_to_name@plt+0x154>
    1e40:	mov	x0, xzr
    1e44:	mov	x1, xzr
    1e48:	bl	1b50 <cap_set_syscall@plt>
    1e4c:	mov	w21, wzr
    1e50:	mov	w22, #0x40                  	// #64
    1e54:	add	w8, w21, w22
    1e58:	cmp	w8, #0x0
    1e5c:	cinc	w8, w8, lt  // lt = tstop
    1e60:	asr	w19, w8, #1
    1e64:	mov	w0, w19
    1e68:	bl	1b80 <cap_get_bound@plt>
    1e6c:	sub	w8, w19, #0x1
    1e70:	cmp	w0, #0x0
    1e74:	csel	w22, w8, w22, lt  // lt = tstop
    1e78:	csinc	w21, w21, w19, lt  // lt = tstop
    1e7c:	cmp	w21, w22
    1e80:	b.le	1e54 <cap_to_name@plt+0x114>
    1e84:	cmp	w21, #0x0
    1e88:	mov	w8, #0x26                  	// #38
    1e8c:	csel	w8, w8, w21, eq  // eq = none
    1e90:	str	w8, [x20, #716]
    1e94:	ldp	x20, x19, [sp, #32]
    1e98:	ldp	x22, x21, [sp, #16]
    1e9c:	ldp	x29, x30, [sp], #48
    1ea0:	ret

0000000000001ea4 <cap_max_bits@@Base>:
    1ea4:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    1ea8:	ldr	w0, [x8, #716]
    1eac:	ret

0000000000001eb0 <cap_init@@Base>:
    1eb0:	stp	x29, x30, [sp, #-32]!
    1eb4:	str	x19, [sp, #16]
    1eb8:	mov	x29, sp
    1ebc:	mov	w0, #0x1                   	// #1
    1ec0:	mov	w1, #0x28                  	// #40
    1ec4:	bl	1ba0 <calloc@plt>
    1ec8:	mov	x19, x0
    1ecc:	cbz	x0, 1f34 <cap_init@@Base+0x84>
    1ed0:	mov	x8, #0x90d0                	// #37072
    1ed4:	movk	x8, #0xca, lsl #16
    1ed8:	movk	x8, #0x522, lsl #32
    1edc:	movk	x8, #0x2008, lsl #48
    1ee0:	str	x8, [x19], #4
    1ee4:	mov	x0, x19
    1ee8:	mov	x1, xzr
    1eec:	bl	1cf0 <capget@plt>
    1ef0:	ldr	w8, [x19]
    1ef4:	mov	w9, #0x330                 	// #816
    1ef8:	movk	w9, #0x1998, lsl #16
    1efc:	cmp	w8, w9
    1f00:	b.eq	1f40 <cap_init@@Base+0x90>  // b.none
    1f04:	mov	w9, #0x1026                	// #4134
    1f08:	movk	w9, #0x2007, lsl #16
    1f0c:	cmp	w8, w9
    1f10:	b.eq	1f40 <cap_init@@Base+0x90>  // b.none
    1f14:	mov	w9, #0x522                 	// #1314
    1f18:	movk	w9, #0x2008, lsl #16
    1f1c:	cmp	w8, w9
    1f20:	b.eq	1f40 <cap_init@@Base+0x90>  // b.none
    1f24:	mov	x0, x19
    1f28:	bl	1cc0 <cap_free@plt>
    1f2c:	mov	x19, xzr
    1f30:	b	1f40 <cap_init@@Base+0x90>
    1f34:	bl	1d10 <__errno_location@plt>
    1f38:	mov	w8, #0xc                   	// #12
    1f3c:	str	w8, [x0]
    1f40:	mov	x0, x19
    1f44:	ldr	x19, [sp, #16]
    1f48:	ldp	x29, x30, [sp], #32
    1f4c:	ret

0000000000001f50 <cap_free@@Base>:
    1f50:	stp	x29, x30, [sp, #-32]!
    1f54:	str	x19, [sp, #16]
    1f58:	mov	x29, sp
    1f5c:	cbz	x0, 1fcc <cap_free@@Base+0x7c>
    1f60:	mov	x19, x0
    1f64:	ldr	w8, [x19, #-4]!
    1f68:	mov	w9, #0x95d0                	// #38352
    1f6c:	movk	w9, #0xca, lsl #16
    1f70:	cmp	w8, w9
    1f74:	b.eq	1f98 <cap_free@@Base+0x48>  // b.none
    1f78:	mov	w9, #0x90d0                	// #37072
    1f7c:	movk	w9, #0xca, lsl #16
    1f80:	cmp	w8, w9
    1f84:	b.ne	1fbc <cap_free@@Base+0x6c>  // b.any
    1f88:	movi	v0.2d, #0x0
    1f8c:	str	xzr, [x19, #32]
    1f90:	stp	q0, q0, [x19]
    1f94:	b	1fac <cap_free@@Base+0x5c>
    1f98:	bl	1a80 <strlen@plt>
    1f9c:	add	x2, x0, #0x4
    1fa0:	mov	x0, x19
    1fa4:	mov	w1, wzr
    1fa8:	bl	1b90 <memset@plt>
    1fac:	mov	x0, x19
    1fb0:	bl	1c50 <free@plt>
    1fb4:	mov	w0, wzr
    1fb8:	b	1fcc <cap_free@@Base+0x7c>
    1fbc:	bl	1d10 <__errno_location@plt>
    1fc0:	mov	w8, #0x16                  	// #22
    1fc4:	str	w8, [x0]
    1fc8:	mov	w0, #0xffffffff            	// #-1
    1fcc:	ldr	x19, [sp, #16]
    1fd0:	ldp	x29, x30, [sp], #32
    1fd4:	ret

0000000000001fd8 <_libcap_strdup@@Base>:
    1fd8:	stp	x29, x30, [sp, #-32]!
    1fdc:	str	x19, [sp, #16]
    1fe0:	mov	x29, sp
    1fe4:	cbz	x0, 2014 <_libcap_strdup@@Base+0x3c>
    1fe8:	mov	x19, x0
    1fec:	bl	1a80 <strlen@plt>
    1ff0:	add	x0, x0, #0x5
    1ff4:	bl	1b40 <malloc@plt>
    1ff8:	cbz	x0, 2024 <_libcap_strdup@@Base+0x4c>
    1ffc:	mov	w8, #0x95d0                	// #38352
    2000:	movk	w8, #0xca, lsl #16
    2004:	str	w8, [x0], #4
    2008:	mov	x1, x19
    200c:	bl	1c90 <strcpy@plt>
    2010:	b	2038 <_libcap_strdup@@Base+0x60>
    2014:	bl	1d10 <__errno_location@plt>
    2018:	mov	x8, x0
    201c:	mov	w9, #0x16                  	// #22
    2020:	b	2030 <_libcap_strdup@@Base+0x58>
    2024:	bl	1d10 <__errno_location@plt>
    2028:	mov	x8, x0
    202c:	mov	w9, #0xc                   	// #12
    2030:	mov	x0, xzr
    2034:	str	w9, [x8]
    2038:	ldr	x19, [sp, #16]
    203c:	ldp	x29, x30, [sp], #32
    2040:	ret

0000000000002044 <cap_dup@@Base>:
    2044:	stp	x29, x30, [sp, #-32]!
    2048:	str	x19, [sp, #16]
    204c:	mov	x29, sp
    2050:	cbz	x0, 2088 <cap_dup@@Base+0x44>
    2054:	ldur	w8, [x0, #-4]
    2058:	mov	w9, #0x90d0                	// #37072
    205c:	movk	w9, #0xca, lsl #16
    2060:	mov	x19, x0
    2064:	cmp	w8, w9
    2068:	b.ne	2088 <cap_dup@@Base+0x44>  // b.any
    206c:	bl	1bf0 <cap_init@plt>
    2070:	cbz	x0, 209c <cap_dup@@Base+0x58>
    2074:	ldr	w8, [x19, #32]
    2078:	ldp	q1, q0, [x19]
    207c:	str	w8, [x0, #32]
    2080:	stp	q1, q0, [x0]
    2084:	b	209c <cap_dup@@Base+0x58>
    2088:	bl	1d10 <__errno_location@plt>
    208c:	mov	x8, x0
    2090:	mov	w9, #0x16                  	// #22
    2094:	mov	x0, xzr
    2098:	str	w9, [x8]
    209c:	ldr	x19, [sp, #16]
    20a0:	ldp	x29, x30, [sp], #32
    20a4:	ret

00000000000020a8 <psx_load_syscalls@@Base>:
    20a8:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    20ac:	mov	w9, #0x1                   	// #1
    20b0:	strb	w9, [x8, #720]
    20b4:	ret

00000000000020b8 <cap_set_syscall@@Base>:
    20b8:	stp	x29, x30, [sp, #-16]!
    20bc:	mov	x29, sp
    20c0:	cbz	x0, 20dc <cap_set_syscall@@Base+0x24>
    20c4:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    20c8:	adrp	x9, 15000 <cap_set_nsowner@@Base+0x110e8>
    20cc:	str	x0, [x8, #392]
    20d0:	str	x1, [x9, #400]
    20d4:	ldp	x29, x30, [sp], #16
    20d8:	ret
    20dc:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x110e8>
    20e0:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x110e8>
    20e4:	add	x0, x0, #0x188
    20e8:	add	x1, x1, #0x190
    20ec:	bl	1a90 <psx_load_syscalls@plt>
    20f0:	ldp	x29, x30, [sp], #16
    20f4:	ret

00000000000020f8 <cap_get_proc@@Base>:
    20f8:	stp	x29, x30, [sp, #-32]!
    20fc:	str	x19, [sp, #16]
    2100:	mov	x29, sp
    2104:	bl	1bf0 <cap_init@plt>
    2108:	mov	x19, x0
    210c:	cbz	x0, 212c <cap_get_proc@@Base+0x34>
    2110:	add	x1, x19, #0x8
    2114:	mov	x0, x19
    2118:	bl	1cf0 <capget@plt>
    211c:	cbz	w0, 212c <cap_get_proc@@Base+0x34>
    2120:	mov	x0, x19
    2124:	bl	1cc0 <cap_free@plt>
    2128:	mov	x19, xzr
    212c:	mov	x0, x19
    2130:	ldr	x19, [sp, #16]
    2134:	ldp	x29, x30, [sp], #32
    2138:	ret

000000000000213c <cap_set_proc@@Base>:
    213c:	stp	x29, x30, [sp, #-16]!
    2140:	mov	x29, sp
    2144:	cbz	x0, 216c <cap_set_proc@@Base+0x30>
    2148:	ldur	w8, [x0, #-4]
    214c:	mov	w9, #0x90d0                	// #37072
    2150:	movk	w9, #0xca, lsl #16
    2154:	cmp	w8, w9
    2158:	b.ne	216c <cap_set_proc@@Base+0x30>  // b.any
    215c:	add	x1, x0, #0x8
    2160:	bl	2184 <cap_set_proc@@Base+0x48>
    2164:	ldp	x29, x30, [sp], #16
    2168:	ret
    216c:	bl	1d10 <__errno_location@plt>
    2170:	mov	w8, #0x16                  	// #22
    2174:	str	w8, [x0]
    2178:	mov	w0, #0xffffffff            	// #-1
    217c:	ldp	x29, x30, [sp], #16
    2180:	ret
    2184:	stp	x29, x30, [sp, #-16]!
    2188:	mov	x29, sp
    218c:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    2190:	ldr	x8, [x8, #392]
    2194:	mov	x2, x1
    2198:	mov	x1, x0
    219c:	mov	w0, #0x5b                  	// #91
    21a0:	mov	x3, xzr
    21a4:	blr	x8
    21a8:	ldp	x29, x30, [sp], #16
    21ac:	ret

00000000000021b0 <capgetp@@Base>:
    21b0:	stp	x29, x30, [sp, #-32]!
    21b4:	str	x19, [sp, #16]
    21b8:	mov	x29, sp
    21bc:	cbz	x1, 21f0 <capgetp@@Base+0x40>
    21c0:	ldur	w8, [x1, #-4]
    21c4:	mov	w9, #0x90d0                	// #37072
    21c8:	movk	w9, #0xca, lsl #16
    21cc:	mov	x19, x1
    21d0:	cmp	w8, w9
    21d4:	b.ne	21f0 <capgetp@@Base+0x40>  // b.any
    21d8:	str	w0, [x19, #4]
    21dc:	add	x1, x19, #0x8
    21e0:	mov	x0, x19
    21e4:	bl	1cf0 <capget@plt>
    21e8:	str	wzr, [x19, #4]
    21ec:	b	2200 <capgetp@@Base+0x50>
    21f0:	bl	1d10 <__errno_location@plt>
    21f4:	mov	w8, #0x16                  	// #22
    21f8:	str	w8, [x0]
    21fc:	mov	w0, #0xffffffff            	// #-1
    2200:	ldr	x19, [sp, #16]
    2204:	ldp	x29, x30, [sp], #32
    2208:	ret

000000000000220c <cap_get_pid@@Base>:
    220c:	stp	x29, x30, [sp, #-48]!
    2210:	str	x21, [sp, #16]
    2214:	stp	x20, x19, [sp, #32]
    2218:	mov	x29, sp
    221c:	mov	w20, w0
    2220:	bl	1bf0 <cap_init@plt>
    2224:	mov	x19, x0
    2228:	cbz	x0, 2258 <cap_get_pid@@Base+0x4c>
    222c:	mov	w0, w20
    2230:	mov	x1, x19
    2234:	bl	1cb0 <capgetp@plt>
    2238:	cbz	w0, 2258 <cap_get_pid@@Base+0x4c>
    223c:	bl	1d10 <__errno_location@plt>
    2240:	ldr	w21, [x0]
    2244:	mov	x20, x0
    2248:	mov	x0, x19
    224c:	bl	1cc0 <cap_free@plt>
    2250:	mov	x19, xzr
    2254:	str	w21, [x20]
    2258:	mov	x0, x19
    225c:	ldp	x20, x19, [sp, #32]
    2260:	ldr	x21, [sp, #16]
    2264:	ldp	x29, x30, [sp], #48
    2268:	ret

000000000000226c <capsetp@@Base>:
    226c:	stp	x29, x30, [sp, #-32]!
    2270:	str	x19, [sp, #16]
    2274:	mov	x29, sp
    2278:	cbz	x1, 22b4 <capsetp@@Base+0x48>
    227c:	ldur	w8, [x1, #-4]
    2280:	mov	w9, #0x90d0                	// #37072
    2284:	movk	w9, #0xca, lsl #16
    2288:	mov	x19, x1
    228c:	cmp	w8, w9
    2290:	b.ne	22b4 <capsetp@@Base+0x48>  // b.any
    2294:	str	w0, [x19, #4]
    2298:	add	x1, x19, #0x8
    229c:	mov	x0, x19
    22a0:	bl	1b30 <capset@plt>
    22a4:	mov	w8, #0x522                 	// #1314
    22a8:	movk	w8, #0x2008, lsl #16
    22ac:	str	x8, [x19]
    22b0:	b	22c4 <capsetp@@Base+0x58>
    22b4:	bl	1d10 <__errno_location@plt>
    22b8:	mov	w8, #0x16                  	// #22
    22bc:	str	w8, [x0]
    22c0:	mov	w0, #0xffffffff            	// #-1
    22c4:	ldr	x19, [sp, #16]
    22c8:	ldp	x29, x30, [sp], #32
    22cc:	ret

00000000000022d0 <cap_get_bound@@Base>:
    22d0:	stp	x29, x30, [sp, #-32]!
    22d4:	str	x19, [sp, #16]
    22d8:	mov	x29, sp
    22dc:	sxtw	x1, w0
    22e0:	mov	w0, #0x17                  	// #23
    22e4:	bl	2308 <cap_get_bound@@Base+0x38>
    22e8:	tbz	w0, #31, 22fc <cap_get_bound@@Base+0x2c>
    22ec:	neg	w19, w0
    22f0:	bl	1d10 <__errno_location@plt>
    22f4:	str	w19, [x0]
    22f8:	mov	w0, #0xffffffff            	// #-1
    22fc:	ldr	x19, [sp, #16]
    2300:	ldp	x29, x30, [sp], #32
    2304:	ret
    2308:	stp	x29, x30, [sp, #-16]!
    230c:	mov	x29, sp
    2310:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    2314:	ldr	x8, [x8, #392]
    2318:	mov	x2, x1
    231c:	mov	x1, x0
    2320:	mov	w0, #0xa7                  	// #167
    2324:	mov	x3, xzr
    2328:	blr	x8
    232c:	ldp	x29, x30, [sp], #16
    2330:	ret

0000000000002334 <cap_drop_bound@@Base>:
    2334:	stp	x29, x30, [sp, #-32]!
    2338:	str	x19, [sp, #16]
    233c:	mov	x29, sp
    2340:	sxtw	x1, w0
    2344:	mov	w0, #0x18                  	// #24
    2348:	bl	2308 <cap_get_bound@@Base+0x38>
    234c:	tbz	w0, #31, 2360 <cap_drop_bound@@Base+0x2c>
    2350:	neg	w19, w0
    2354:	bl	1d10 <__errno_location@plt>
    2358:	str	w19, [x0]
    235c:	mov	w0, #0xffffffff            	// #-1
    2360:	ldr	x19, [sp, #16]
    2364:	ldp	x29, x30, [sp], #32
    2368:	ret

000000000000236c <cap_get_ambient@@Base>:
    236c:	stp	x29, x30, [sp, #-32]!
    2370:	str	x19, [sp, #16]
    2374:	mov	x29, sp
    2378:	sxtw	x2, w0
    237c:	mov	w0, #0x2f                  	// #47
    2380:	mov	w1, #0x1                   	// #1
    2384:	mov	x3, xzr
    2388:	mov	x4, xzr
    238c:	bl	1d20 <prctl@plt>
    2390:	tbz	w0, #31, 23a4 <cap_get_ambient@@Base+0x38>
    2394:	neg	w19, w0
    2398:	bl	1d10 <__errno_location@plt>
    239c:	str	w19, [x0]
    23a0:	mov	w0, #0xffffffff            	// #-1
    23a4:	ldr	x19, [sp, #16]
    23a8:	ldp	x29, x30, [sp], #32
    23ac:	ret

00000000000023b0 <cap_set_ambient@@Base>:
    23b0:	stp	x29, x30, [sp, #-32]!
    23b4:	str	x19, [sp, #16]
    23b8:	mov	x29, sp
    23bc:	cmp	w1, #0x1
    23c0:	b.eq	23d0 <cap_set_ambient@@Base+0x20>  // b.none
    23c4:	cbnz	w1, 23ec <cap_set_ambient@@Base+0x3c>
    23c8:	mov	w8, #0x3                   	// #3
    23cc:	b	23d4 <cap_set_ambient@@Base+0x24>
    23d0:	mov	w8, #0x2                   	// #2
    23d4:	sxtw	x1, w0
    23d8:	mov	x0, x8
    23dc:	bl	2408 <cap_set_ambient@@Base+0x58>
    23e0:	tbz	w0, #31, 23fc <cap_set_ambient@@Base+0x4c>
    23e4:	neg	w19, w0
    23e8:	b	23f0 <cap_set_ambient@@Base+0x40>
    23ec:	mov	w19, #0x16                  	// #22
    23f0:	bl	1d10 <__errno_location@plt>
    23f4:	str	w19, [x0]
    23f8:	mov	w0, #0xffffffff            	// #-1
    23fc:	ldr	x19, [sp, #16]
    2400:	ldp	x29, x30, [sp], #32
    2404:	ret
    2408:	stp	x29, x30, [sp, #-16]!
    240c:	mov	x29, sp
    2410:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    2414:	ldr	x8, [x8, #400]
    2418:	mov	x3, x1
    241c:	mov	x2, x0
    2420:	mov	w0, #0xa7                  	// #167
    2424:	mov	w1, #0x2f                  	// #47
    2428:	mov	x4, xzr
    242c:	mov	x5, xzr
    2430:	mov	x6, xzr
    2434:	blr	x8
    2438:	ldp	x29, x30, [sp], #16
    243c:	ret

0000000000002440 <cap_reset_ambient@@Base>:
    2440:	stp	x29, x30, [sp, #-48]!
    2444:	str	x21, [sp, #16]
    2448:	stp	x20, x19, [sp, #32]
    244c:	mov	x29, sp
    2450:	bl	1d10 <__errno_location@plt>
    2454:	ldr	w21, [x0]
    2458:	mov	x19, x0
    245c:	mov	w20, wzr
    2460:	mov	w0, w20
    2464:	bl	1ae0 <cap_get_ambient@plt>
    2468:	cmn	w0, #0x1
    246c:	b.eq	2494 <cap_reset_ambient@@Base+0x54>  // b.none
    2470:	add	w20, w20, #0x1
    2474:	cbz	w0, 2460 <cap_reset_ambient@@Base+0x20>
    2478:	mov	w0, #0x4                   	// #4
    247c:	mov	x1, xzr
    2480:	bl	2408 <cap_set_ambient@@Base+0x58>
    2484:	tbz	w0, #31, 249c <cap_reset_ambient@@Base+0x5c>
    2488:	neg	w21, w0
    248c:	mov	w0, #0xffffffff            	// #-1
    2490:	b	2498 <cap_reset_ambient@@Base+0x58>
    2494:	mov	w0, wzr
    2498:	str	w21, [x19]
    249c:	ldp	x20, x19, [sp, #32]
    24a0:	ldr	x21, [sp, #16]
    24a4:	ldp	x29, x30, [sp], #48
    24a8:	ret

00000000000024ac <cap_get_secbits@@Base>:
    24ac:	stp	x29, x30, [sp, #-16]!
    24b0:	mov	x29, sp
    24b4:	mov	w0, #0x1b                  	// #27
    24b8:	mov	x1, xzr
    24bc:	mov	x2, xzr
    24c0:	bl	1d20 <prctl@plt>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

00000000000024cc <cap_set_secbits@@Base>:
    24cc:	stp	x29, x30, [sp, #-16]!
    24d0:	mov	x29, sp
    24d4:	mov	w1, w0
    24d8:	mov	w0, #0x1c                  	// #28
    24dc:	bl	2308 <cap_get_bound@@Base+0x38>
    24e0:	ldp	x29, x30, [sp], #16
    24e4:	ret

00000000000024e8 <cap_set_mode@@Base>:
    24e8:	stp	x29, x30, [sp, #-48]!
    24ec:	str	x21, [sp, #16]
    24f0:	stp	x20, x19, [sp, #32]
    24f4:	mov	x29, sp
    24f8:	mov	w8, #0x8                   	// #8
    24fc:	mov	w20, w0
    2500:	str	w8, [x29, #28]
    2504:	bl	1c20 <cap_get_proc@plt>
    2508:	add	x3, x29, #0x1c
    250c:	mov	w2, #0x1                   	// #1
    2510:	mov	w4, #0x1                   	// #1
    2514:	mov	w1, wzr
    2518:	mov	x19, x0
    251c:	bl	1cd0 <cap_set_flag@plt>
    2520:	mov	w21, w0
    2524:	mov	x0, x19
    2528:	bl	1bb0 <cap_set_proc@plt>
    252c:	orr	w21, w0, w21
    2530:	cbz	w21, 2568 <cap_set_mode@@Base+0x80>
    2534:	mov	x0, x19
    2538:	mov	w1, wzr
    253c:	bl	1ab0 <cap_clear_flag@plt>
    2540:	mov	x0, x19
    2544:	bl	1bb0 <cap_set_proc@plt>
    2548:	orr	w20, w0, w21
    254c:	mov	x0, x19
    2550:	bl	1cc0 <cap_free@plt>
    2554:	mov	w0, w20
    2558:	ldp	x20, x19, [sp, #32]
    255c:	ldr	x21, [sp, #16]
    2560:	ldp	x29, x30, [sp], #48
    2564:	ret
    2568:	sub	w8, w20, #0x1
    256c:	cmp	w8, #0x2
    2570:	b.cs	2584 <cap_set_mode@@Base+0x9c>  // b.hs, b.nlast
    2574:	mov	w1, #0x2                   	// #2
    2578:	mov	x0, x19
    257c:	bl	1ab0 <cap_clear_flag@plt>
    2580:	b	258c <cap_set_mode@@Base+0xa4>
    2584:	cmp	w20, #0x3
    2588:	b.ne	25f8 <cap_set_mode@@Base+0x110>  // b.any
    258c:	mov	w0, wzr
    2590:	bl	1ae0 <cap_get_ambient@plt>
    2594:	tbnz	w0, #31, 25ac <cap_set_mode@@Base+0xc4>
    2598:	bl	1b70 <cap_reset_ambient@plt>
    259c:	mov	w21, w0
    25a0:	cbnz	w0, 2534 <cap_set_mode@@Base+0x4c>
    25a4:	mov	w0, #0xef                  	// #239
    25a8:	b	25b0 <cap_set_mode@@Base+0xc8>
    25ac:	mov	w0, #0x2f                  	// #47
    25b0:	bl	1d00 <cap_set_secbits@plt>
    25b4:	cmp	w20, #0x1
    25b8:	mov	w21, w0
    25bc:	b.ne	2534 <cap_set_mode@@Base+0x4c>  // b.any
    25c0:	mov	w0, wzr
    25c4:	bl	1b80 <cap_get_bound@plt>
    25c8:	tbnz	w0, #31, 25e8 <cap_set_mode@@Base+0x100>
    25cc:	mov	w20, wzr
    25d0:	mov	w0, w20
    25d4:	bl	1c40 <cap_drop_bound@plt>
    25d8:	add	w20, w20, #0x1
    25dc:	mov	w0, w20
    25e0:	bl	1b80 <cap_get_bound@plt>
    25e4:	tbz	w0, #31, 25d0 <cap_set_mode@@Base+0xe8>
    25e8:	mov	w1, #0x1                   	// #1
    25ec:	mov	x0, x19
    25f0:	bl	1ab0 <cap_clear_flag@plt>
    25f4:	b	2534 <cap_set_mode@@Base+0x4c>
    25f8:	bl	1d10 <__errno_location@plt>
    25fc:	mov	w8, #0x16                  	// #22
    2600:	str	w8, [x0]
    2604:	mov	w21, #0xffffffff            	// #-1
    2608:	b	2534 <cap_set_mode@@Base+0x4c>

000000000000260c <cap_get_mode@@Base>:
    260c:	stp	x29, x30, [sp, #-48]!
    2610:	stp	x22, x21, [sp, #16]
    2614:	stp	x20, x19, [sp, #32]
    2618:	mov	x29, sp
    261c:	bl	1aa0 <cap_get_secbits@plt>
    2620:	mov	w8, #0x2f                  	// #47
    2624:	bics	wzr, w8, w0
    2628:	b.ne	266c <cap_get_mode@@Base+0x60>  // b.any
    262c:	mov	w19, w0
    2630:	bl	1d10 <__errno_location@plt>
    2634:	ldr	w22, [x0]
    2638:	mov	x20, x0
    263c:	mov	w21, wzr
    2640:	mov	w0, w21
    2644:	bl	1ae0 <cap_get_ambient@plt>
    2648:	cbnz	w0, 2654 <cap_get_mode@@Base+0x48>
    264c:	add	w21, w21, #0x1
    2650:	b	2640 <cap_get_mode@@Base+0x34>
    2654:	cmn	w0, #0x1
    2658:	b.ne	266c <cap_get_mode@@Base+0x60>  // b.any
    265c:	cmp	w19, #0xef
    2660:	str	w22, [x20]
    2664:	b.eq	2680 <cap_get_mode@@Base+0x74>  // b.none
    2668:	cbz	w21, 2680 <cap_get_mode@@Base+0x74>
    266c:	mov	w0, wzr
    2670:	ldp	x20, x19, [sp, #32]
    2674:	ldp	x22, x21, [sp, #16]
    2678:	ldp	x29, x30, [sp], #48
    267c:	ret
    2680:	bl	1c20 <cap_get_proc@plt>
    2684:	mov	x20, x0
    2688:	bl	1bf0 <cap_init@plt>
    268c:	mov	x1, x20
    2690:	mov	x21, x0
    2694:	bl	1ce0 <cap_compare@plt>
    2698:	mov	w19, w0
    269c:	mov	x0, x21
    26a0:	bl	1cc0 <cap_free@plt>
    26a4:	mov	x0, x20
    26a8:	bl	1cc0 <cap_free@plt>
    26ac:	tbnz	w19, #2, 26e4 <cap_get_mode@@Base+0xd8>
    26b0:	tst	w19, #0x3
    26b4:	b.ne	26fc <cap_get_mode@@Base+0xf0>  // b.any
    26b8:	mov	w19, wzr
    26bc:	mov	w20, #0x5                   	// #5
    26c0:	mov	w0, w19
    26c4:	bl	1b80 <cap_get_bound@plt>
    26c8:	cmp	w0, #0x0
    26cc:	cset	w8, ne  // ne = any
    26d0:	cmn	w0, #0x1
    26d4:	csel	w8, w20, w8, eq  // eq = none
    26d8:	cbnz	w8, 26ec <cap_get_mode@@Base+0xe0>
    26dc:	add	w19, w19, #0x1
    26e0:	b	26c0 <cap_get_mode@@Base+0xb4>
    26e4:	mov	w0, #0x3                   	// #3
    26e8:	b	2670 <cap_get_mode@@Base+0x64>
    26ec:	cmp	w8, #0x5
    26f0:	b.ne	26fc <cap_get_mode@@Base+0xf0>  // b.any
    26f4:	mov	w0, #0x1                   	// #1
    26f8:	b	2670 <cap_get_mode@@Base+0x64>
    26fc:	mov	w0, #0x2                   	// #2
    2700:	b	2670 <cap_get_mode@@Base+0x64>

0000000000002704 <cap_setuid@@Base>:
    2704:	sub	sp, sp, #0x40
    2708:	stp	x29, x30, [sp, #16]
    270c:	stp	x22, x21, [sp, #32]
    2710:	stp	x20, x19, [sp, #48]
    2714:	add	x29, sp, #0x10
    2718:	mov	w8, #0x7                   	// #7
    271c:	mov	w21, w0
    2720:	stur	w8, [x29, #-4]
    2724:	bl	1c20 <cap_get_proc@plt>
    2728:	sub	x3, x29, #0x4
    272c:	mov	w2, #0x1                   	// #1
    2730:	mov	w4, #0x1                   	// #1
    2734:	mov	w1, wzr
    2738:	mov	x19, x0
    273c:	bl	1cd0 <cap_set_flag@plt>
    2740:	mov	w0, #0x8                   	// #8
    2744:	mov	w1, #0x1                   	// #1
    2748:	bl	2308 <cap_get_bound@@Base+0x38>
    274c:	mov	x0, x19
    2750:	bl	1bb0 <cap_set_proc@plt>
    2754:	mov	w20, w0
    2758:	cbnz	w0, 27ac <cap_setuid@@Base+0xa8>
    275c:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    2760:	ldrb	w8, [x8, #720]
    2764:	tbz	w8, #0, 2778 <cap_setuid@@Base+0x74>
    2768:	mov	w0, w21
    276c:	bl	1a60 <setuid@plt>
    2770:	mov	w20, w0
    2774:	b	27ac <cap_setuid@@Base+0xa8>
    2778:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    277c:	ldr	x8, [x8, #392]
    2780:	mov	w1, w21
    2784:	mov	w0, #0x92                  	// #146
    2788:	mov	x2, xzr
    278c:	mov	x3, xzr
    2790:	blr	x8
    2794:	mov	x20, x0
    2798:	tbz	w20, #31, 27ac <cap_setuid@@Base+0xa8>
    279c:	neg	w20, w20
    27a0:	bl	1d10 <__errno_location@plt>
    27a4:	str	w20, [x0]
    27a8:	mov	w20, #0xffffffff            	// #-1
    27ac:	bl	1d10 <__errno_location@plt>
    27b0:	ldr	w22, [x0]
    27b4:	mov	x21, x0
    27b8:	mov	w0, #0x8                   	// #8
    27bc:	mov	x1, xzr
    27c0:	bl	2308 <cap_get_bound@@Base+0x38>
    27c4:	mov	x0, x19
    27c8:	mov	w1, wzr
    27cc:	bl	1ab0 <cap_clear_flag@plt>
    27d0:	mov	x0, x19
    27d4:	bl	1bb0 <cap_set_proc@plt>
    27d8:	mov	x0, x19
    27dc:	bl	1cc0 <cap_free@plt>
    27e0:	str	w22, [x21]
    27e4:	mov	w0, w20
    27e8:	ldp	x20, x19, [sp, #48]
    27ec:	ldp	x22, x21, [sp, #32]
    27f0:	ldp	x29, x30, [sp, #16]
    27f4:	add	sp, sp, #0x40
    27f8:	ret

00000000000027fc <cap_setgroups@@Base>:
    27fc:	stp	x29, x30, [sp, #-64]!
    2800:	str	x23, [sp, #16]
    2804:	stp	x22, x21, [sp, #32]
    2808:	stp	x20, x19, [sp, #48]
    280c:	mov	x29, sp
    2810:	mov	w8, #0x6                   	// #6
    2814:	mov	x20, x2
    2818:	mov	x21, x1
    281c:	mov	w23, w0
    2820:	str	w8, [x29, #28]
    2824:	bl	1c20 <cap_get_proc@plt>
    2828:	add	x3, x29, #0x1c
    282c:	mov	w2, #0x1                   	// #1
    2830:	mov	w4, #0x1                   	// #1
    2834:	mov	w1, wzr
    2838:	mov	x19, x0
    283c:	bl	1cd0 <cap_set_flag@plt>
    2840:	mov	x0, x19
    2844:	bl	1bb0 <cap_set_proc@plt>
    2848:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    284c:	ldrb	w8, [x8, #720]
    2850:	mov	w22, w0
    2854:	tbz	w8, #0, 2864 <cap_setgroups@@Base+0x68>
    2858:	cbz	w22, 2874 <cap_setgroups@@Base+0x78>
    285c:	cbnz	w22, 28f0 <cap_setgroups@@Base+0xf4>
    2860:	b	2884 <cap_setgroups@@Base+0x88>
    2864:	cbz	w22, 2898 <cap_setgroups@@Base+0x9c>
    2868:	cbz	w22, 28bc <cap_setgroups@@Base+0xc0>
    286c:	tbz	w22, #31, 28f0 <cap_setgroups@@Base+0xf4>
    2870:	b	28e0 <cap_setgroups@@Base+0xe4>
    2874:	mov	w0, w23
    2878:	bl	1be0 <setgid@plt>
    287c:	mov	w22, w0
    2880:	cbnz	w22, 28f0 <cap_setgroups@@Base+0xf4>
    2884:	mov	x0, x21
    2888:	mov	x1, x20
    288c:	bl	1c80 <setgroups@plt>
    2890:	mov	w22, w0
    2894:	b	28f0 <cap_setgroups@@Base+0xf4>
    2898:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    289c:	ldr	x8, [x8, #392]
    28a0:	mov	w1, w23
    28a4:	mov	w0, #0x90                  	// #144
    28a8:	mov	x2, xzr
    28ac:	mov	x3, xzr
    28b0:	blr	x8
    28b4:	mov	x22, x0
    28b8:	cbnz	w22, 286c <cap_setgroups@@Base+0x70>
    28bc:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x110e8>
    28c0:	ldr	x8, [x8, #392]
    28c4:	mov	w0, #0x9f                  	// #159
    28c8:	mov	x1, x21
    28cc:	mov	x2, x20
    28d0:	mov	x3, xzr
    28d4:	blr	x8
    28d8:	mov	x22, x0
    28dc:	tbz	w22, #31, 28f0 <cap_setgroups@@Base+0xf4>
    28e0:	neg	w20, w22
    28e4:	bl	1d10 <__errno_location@plt>
    28e8:	str	w20, [x0]
    28ec:	mov	w22, #0xffffffff            	// #-1
    28f0:	bl	1d10 <__errno_location@plt>
    28f4:	ldr	w21, [x0]
    28f8:	mov	x20, x0
    28fc:	mov	x0, x19
    2900:	mov	w1, wzr
    2904:	bl	1ab0 <cap_clear_flag@plt>
    2908:	mov	x0, x19
    290c:	bl	1bb0 <cap_set_proc@plt>
    2910:	mov	x0, x19
    2914:	bl	1cc0 <cap_free@plt>
    2918:	str	w21, [x20]
    291c:	mov	w0, w22
    2920:	ldp	x20, x19, [sp, #48]
    2924:	ldp	x22, x21, [sp, #32]
    2928:	ldr	x23, [sp, #16]
    292c:	ldp	x29, x30, [sp], #64
    2930:	ret
    2934:	stp	x29, x30, [sp, #-16]!
    2938:	mov	x29, sp
    293c:	bl	1d30 <syscall@plt>
    2940:	ldp	x29, x30, [sp], #16
    2944:	ret
    2948:	stp	x29, x30, [sp, #-16]!
    294c:	mov	x29, sp
    2950:	bl	1d30 <syscall@plt>
    2954:	ldp	x29, x30, [sp], #16
    2958:	ret

000000000000295c <cap_size@@Base>:
    295c:	mov	w0, #0x1d                  	// #29
    2960:	ret

0000000000002964 <cap_copy_ext@@Base>:
    2964:	stp	x29, x30, [sp, #-16]!
    2968:	mov	x29, sp
    296c:	cbz	x1, 2a04 <cap_copy_ext@@Base+0xa0>
    2970:	cbz	x0, 2a04 <cap_copy_ext@@Base+0xa0>
    2974:	cmp	x2, #0x1d
    2978:	b.lt	2a04 <cap_copy_ext@@Base+0xa0>  // b.tstop
    297c:	ldur	w8, [x1, #-4]
    2980:	mov	w9, #0x90d0                	// #37072
    2984:	movk	w9, #0xca, lsl #16
    2988:	cmp	w8, w9
    298c:	b.ne	2a04 <cap_copy_ext@@Base+0xa0>  // b.any
    2990:	mov	w11, #0xc290                	// #49808
    2994:	movk	w11, #0x5101, lsl #16
    2998:	mov	w12, #0x8                   	// #8
    299c:	mov	x8, xzr
    29a0:	add	x9, x1, #0x8
    29a4:	add	x10, x0, #0xe
    29a8:	str	w11, [x0]
    29ac:	strb	w12, [x0, #4]
    29b0:	mov	w0, #0x1d                  	// #29
    29b4:	mov	x11, xzr
    29b8:	ldr	w12, [x9, x11]
    29bc:	add	x13, x10, x11
    29c0:	add	x11, x11, #0xc
    29c4:	cmp	x11, #0xc
    29c8:	sturb	w12, [x13, #-9]
    29cc:	lsr	w14, w12, #8
    29d0:	lsr	w15, w12, #16
    29d4:	lsr	w12, w12, #24
    29d8:	sturb	w14, [x13, #-6]
    29dc:	sturb	w15, [x13, #-3]
    29e0:	strb	w12, [x13]
    29e4:	b.eq	29b8 <cap_copy_ext@@Base+0x54>  // b.none
    29e8:	add	x8, x8, #0x1
    29ec:	add	x9, x9, #0x4
    29f0:	cmp	x8, #0x3
    29f4:	add	x10, x10, #0x1
    29f8:	b.ne	29b4 <cap_copy_ext@@Base+0x50>  // b.any
    29fc:	ldp	x29, x30, [sp], #16
    2a00:	ret
    2a04:	bl	1d10 <__errno_location@plt>
    2a08:	mov	w8, #0x16                  	// #22
    2a0c:	str	w8, [x0]
    2a10:	mov	x0, #0xffffffffffffffff    	// #-1
    2a14:	ldp	x29, x30, [sp], #16
    2a18:	ret

0000000000002a1c <cap_copy_int@@Base>:
    2a1c:	stp	x29, x30, [sp, #-32]!
    2a20:	str	x19, [sp, #16]
    2a24:	mov	x29, sp
    2a28:	cbz	x0, 2a44 <cap_copy_int@@Base+0x28>
    2a2c:	ldr	w8, [x0]
    2a30:	mov	w9, #0xc290                	// #49808
    2a34:	movk	w9, #0x5101, lsl #16
    2a38:	mov	x19, x0
    2a3c:	cmp	w8, w9
    2a40:	b.eq	2a64 <cap_copy_int@@Base+0x48>  // b.none
    2a44:	bl	1d10 <__errno_location@plt>
    2a48:	mov	x8, x0
    2a4c:	mov	w9, #0x16                  	// #22
    2a50:	mov	x0, xzr
    2a54:	str	w9, [x8]
    2a58:	ldr	x19, [sp, #16]
    2a5c:	ldp	x29, x30, [sp], #32
    2a60:	ret
    2a64:	bl	1bf0 <cap_init@plt>
    2a68:	cbz	x0, 2a58 <cap_copy_int@@Base+0x3c>
    2a6c:	ldrb	w9, [x19, #4]
    2a70:	mov	x8, xzr
    2a74:	add	x10, x19, #0x5
    2a78:	add	x11, x0, #0x8
    2a7c:	b	2a90 <cap_copy_int@@Base+0x74>
    2a80:	add	x8, x8, #0x1
    2a84:	cmp	x8, #0x3
    2a88:	add	x11, x11, #0x4
    2a8c:	b.eq	2a58 <cap_copy_int@@Base+0x3c>  // b.none
    2a90:	mov	x12, xzr
    2a94:	mov	w13, wzr
    2a98:	b	2aac <cap_copy_int@@Base+0x90>
    2a9c:	str	w14, [x11, x12]
    2aa0:	add	x12, x12, #0xc
    2aa4:	cmp	x12, #0x18
    2aa8:	b.eq	2a80 <cap_copy_int@@Base+0x64>  // b.none
    2aac:	cmp	w13, w9
    2ab0:	b.ne	2ac4 <cap_copy_int@@Base+0xa8>  // b.any
    2ab4:	mov	w14, wzr
    2ab8:	cmp	w13, w9
    2abc:	b.ne	2ae0 <cap_copy_int@@Base+0xc4>  // b.any
    2ac0:	b	2af8 <cap_copy_int@@Base+0xdc>
    2ac4:	sxtw	x14, w13
    2ac8:	add	x14, x14, w13, sxtw #1
    2acc:	add	x14, x10, x14
    2ad0:	ldrb	w14, [x14, x8]
    2ad4:	add	w13, w13, #0x1
    2ad8:	cmp	w13, w9
    2adc:	b.eq	2af8 <cap_copy_int@@Base+0xdc>  // b.none
    2ae0:	sxtw	x15, w13
    2ae4:	add	x15, x15, w13, sxtw #1
    2ae8:	add	x15, x10, x15
    2aec:	ldrb	w15, [x15, x8]
    2af0:	add	w13, w13, #0x1
    2af4:	bfi	w14, w15, #8, #8
    2af8:	cmp	w13, w9
    2afc:	b.ne	2b0c <cap_copy_int@@Base+0xf0>  // b.any
    2b00:	cmp	w13, w9
    2b04:	b.eq	2a9c <cap_copy_int@@Base+0x80>  // b.none
    2b08:	b	2b2c <cap_copy_int@@Base+0x110>
    2b0c:	sxtw	x15, w13
    2b10:	add	x15, x15, w13, sxtw #1
    2b14:	add	x15, x10, x15
    2b18:	ldrb	w15, [x15, x8]
    2b1c:	add	w13, w13, #0x1
    2b20:	bfi	w14, w15, #16, #8
    2b24:	cmp	w13, w9
    2b28:	b.eq	2a9c <cap_copy_int@@Base+0x80>  // b.none
    2b2c:	sxtw	x15, w13
    2b30:	add	x15, x15, w13, sxtw #1
    2b34:	add	x15, x10, x15
    2b38:	ldrb	w15, [x15, x8]
    2b3c:	add	w13, w13, #0x1
    2b40:	bfi	w14, w15, #24, #8
    2b44:	b	2a9c <cap_copy_int@@Base+0x80>

0000000000002b48 <cap_get_flag@@Base>:
    2b48:	stp	x29, x30, [sp, #-16]!
    2b4c:	mov	x29, sp
    2b50:	cbz	x0, 2ba4 <cap_get_flag@@Base+0x5c>
    2b54:	cbz	x3, 2ba4 <cap_get_flag@@Base+0x5c>
    2b58:	cmp	w2, #0x2
    2b5c:	b.hi	2ba4 <cap_get_flag@@Base+0x5c>  // b.pmore
    2b60:	cmp	w1, #0x3f
    2b64:	b.hi	2ba4 <cap_get_flag@@Base+0x5c>  // b.pmore
    2b68:	ldur	w8, [x0, #-4]
    2b6c:	mov	w9, #0x90d0                	// #37072
    2b70:	movk	w9, #0xca, lsl #16
    2b74:	cmp	w8, w9
    2b78:	b.ne	2ba4 <cap_get_flag@@Base+0x5c>  // b.any
    2b7c:	asr	w9, w1, #5
    2b80:	mov	w10, #0xc                   	// #12
    2b84:	smaddl	x9, w9, w10, x0
    2b88:	add	x9, x9, w2, uxtw #2
    2b8c:	ldr	w9, [x9, #8]
    2b90:	mov	w8, wzr
    2b94:	lsr	w9, w9, w1
    2b98:	and	w9, w9, #0x1
    2b9c:	str	w9, [x3]
    2ba0:	b	2bb4 <cap_get_flag@@Base+0x6c>
    2ba4:	bl	1d10 <__errno_location@plt>
    2ba8:	mov	w8, #0x16                  	// #22
    2bac:	str	w8, [x0]
    2bb0:	mov	w8, #0xffffffff            	// #-1
    2bb4:	mov	w0, w8
    2bb8:	ldp	x29, x30, [sp], #16
    2bbc:	ret

0000000000002bc0 <cap_set_flag@@Base>:
    2bc0:	stp	x29, x30, [sp, #-16]!
    2bc4:	mov	x29, sp
    2bc8:	cbz	x0, 2c18 <cap_set_flag@@Base+0x58>
    2bcc:	cmp	w1, #0x2
    2bd0:	b.hi	2c18 <cap_set_flag@@Base+0x58>  // b.pmore
    2bd4:	sub	w8, w2, #0x1
    2bd8:	cmp	w8, #0x3e
    2bdc:	b.hi	2c18 <cap_set_flag@@Base+0x58>  // b.pmore
    2be0:	ldur	w8, [x0, #-4]
    2be4:	mov	w9, #0x90d0                	// #37072
    2be8:	movk	w9, #0xca, lsl #16
    2bec:	cmp	w8, w9
    2bf0:	b.ne	2c18 <cap_set_flag@@Base+0x58>  // b.any
    2bf4:	cmp	w4, #0x1
    2bf8:	b.hi	2c18 <cap_set_flag@@Base+0x58>  // b.pmore
    2bfc:	cmp	w2, #0x1
    2c00:	b.lt	2c78 <cap_set_flag@@Base+0xb8>  // b.tstop
    2c04:	mov	w8, w1
    2c08:	mov	w9, w2
    2c0c:	mov	w10, #0x1                   	// #1
    2c10:	mov	w11, #0xc                   	// #12
    2c14:	b	2c48 <cap_set_flag@@Base+0x88>
    2c18:	bl	1d10 <__errno_location@plt>
    2c1c:	mov	w8, #0x16                  	// #22
    2c20:	str	w8, [x0]
    2c24:	mov	w0, #0xffffffff            	// #-1
    2c28:	ldp	x29, x30, [sp], #16
    2c2c:	ret
    2c30:	ldr	w14, [x13, #8]
    2c34:	bic	w12, w14, w12
    2c38:	str	w12, [x13, #8]
    2c3c:	subs	x9, x9, #0x1
    2c40:	add	x3, x3, #0x4
    2c44:	b.eq	2c78 <cap_set_flag@@Base+0xb8>  // b.none
    2c48:	ldr	w13, [x3]
    2c4c:	cmp	w13, #0x3f
    2c50:	b.hi	2c3c <cap_set_flag@@Base+0x7c>  // b.pmore
    2c54:	lsl	w12, w10, w13
    2c58:	asr	w13, w13, #5
    2c5c:	smaddl	x13, w13, w11, x0
    2c60:	cmp	w4, #0x1
    2c64:	add	x13, x13, x8, lsl #2
    2c68:	b.ne	2c30 <cap_set_flag@@Base+0x70>  // b.any
    2c6c:	ldr	w14, [x13, #8]
    2c70:	orr	w12, w14, w12
    2c74:	b	2c38 <cap_set_flag@@Base+0x78>
    2c78:	mov	w0, wzr
    2c7c:	ldp	x29, x30, [sp], #16
    2c80:	ret

0000000000002c84 <cap_clear@@Base>:
    2c84:	stp	x29, x30, [sp, #-16]!
    2c88:	mov	x29, sp
    2c8c:	cbz	x0, 2cbc <cap_clear@@Base+0x38>
    2c90:	ldur	w9, [x0, #-4]
    2c94:	mov	w10, #0x90d0                	// #37072
    2c98:	movk	w10, #0xca, lsl #16
    2c9c:	mov	x8, x0
    2ca0:	cmp	w9, w10
    2ca4:	b.ne	2cbc <cap_clear@@Base+0x38>  // b.any
    2ca8:	mov	w0, wzr
    2cac:	stp	xzr, xzr, [x8, #8]
    2cb0:	str	xzr, [x8, #24]
    2cb4:	ldp	x29, x30, [sp], #16
    2cb8:	ret
    2cbc:	bl	1d10 <__errno_location@plt>
    2cc0:	mov	w8, #0x16                  	// #22
    2cc4:	str	w8, [x0]
    2cc8:	mov	w0, #0xffffffff            	// #-1
    2ccc:	ldp	x29, x30, [sp], #16
    2cd0:	ret

0000000000002cd4 <cap_clear_flag@@Base>:
    2cd4:	stp	x29, x30, [sp, #-16]!
    2cd8:	mov	x29, sp
    2cdc:	cbz	x0, 2d20 <cap_clear_flag@@Base+0x4c>
    2ce0:	cmp	w1, #0x2
    2ce4:	b.hi	2d20 <cap_clear_flag@@Base+0x4c>  // b.pmore
    2ce8:	ldur	w8, [x0, #-4]
    2cec:	mov	w9, #0x90d0                	// #37072
    2cf0:	movk	w9, #0xca, lsl #16
    2cf4:	cmp	w8, w9
    2cf8:	b.ne	2d20 <cap_clear_flag@@Base+0x4c>  // b.any
    2cfc:	add	x8, x0, w1, uxtw #2
    2d00:	mov	w9, #0x8                   	// #8
    2d04:	str	wzr, [x8, x9]
    2d08:	add	x9, x9, #0xc
    2d0c:	cmp	x9, #0x20
    2d10:	b.ne	2d04 <cap_clear_flag@@Base+0x30>  // b.any
    2d14:	mov	w0, wzr
    2d18:	ldp	x29, x30, [sp], #16
    2d1c:	ret
    2d20:	bl	1d10 <__errno_location@plt>
    2d24:	mov	w8, #0x16                  	// #22
    2d28:	str	w8, [x0]
    2d2c:	mov	w0, #0xffffffff            	// #-1
    2d30:	ldp	x29, x30, [sp], #16
    2d34:	ret

0000000000002d38 <cap_compare@@Base>:
    2d38:	stp	x29, x30, [sp, #-16]!
    2d3c:	mov	x29, sp
    2d40:	cbz	x0, 2dcc <cap_compare@@Base+0x94>
    2d44:	cbz	x1, 2dcc <cap_compare@@Base+0x94>
    2d48:	ldur	w10, [x0, #-4]
    2d4c:	mov	w9, #0x90d0                	// #37072
    2d50:	movk	w9, #0xca, lsl #16
    2d54:	mov	x8, x0
    2d58:	cmp	w10, w9
    2d5c:	b.ne	2dcc <cap_compare@@Base+0x94>  // b.any
    2d60:	ldur	w10, [x1, #-4]
    2d64:	cmp	w10, w9
    2d68:	b.ne	2dcc <cap_compare@@Base+0x94>  // b.any
    2d6c:	mov	x9, xzr
    2d70:	mov	w0, wzr
    2d74:	add	x10, x1, #0x8
    2d78:	add	x8, x8, #0x8
    2d7c:	add	x11, x8, x9
    2d80:	add	x12, x10, x9
    2d84:	ldr	w15, [x11]
    2d88:	ldr	w16, [x12, #8]
    2d8c:	ldp	w13, w12, [x12]
    2d90:	ldp	w11, w14, [x11, #4]
    2d94:	add	x9, x9, #0xc
    2d98:	cmp	w15, w13
    2d9c:	cset	w13, ne  // ne = any
    2da0:	cmp	w14, w16
    2da4:	cset	w14, ne  // ne = any
    2da8:	cmp	w11, w12
    2dac:	orr	w11, w0, w13
    2db0:	cset	w12, ne  // ne = any
    2db4:	orr	w11, w11, w14, lsl #2
    2db8:	cmp	x9, #0x18
    2dbc:	orr	w0, w11, w12, lsl #1
    2dc0:	b.ne	2d7c <cap_compare@@Base+0x44>  // b.any
    2dc4:	ldp	x29, x30, [sp], #16
    2dc8:	ret
    2dcc:	bl	1d10 <__errno_location@plt>
    2dd0:	mov	w8, #0x16                  	// #22
    2dd4:	str	w8, [x0]
    2dd8:	mov	w0, #0xffffffff            	// #-1
    2ddc:	ldp	x29, x30, [sp], #16
    2de0:	ret

0000000000002de4 <cap_from_text@@Base>:
    2de4:	sub	sp, sp, #0x70
    2de8:	stp	x29, x30, [sp, #16]
    2dec:	stp	x28, x27, [sp, #32]
    2df0:	stp	x26, x25, [sp, #48]
    2df4:	stp	x24, x23, [sp, #64]
    2df8:	stp	x22, x21, [sp, #80]
    2dfc:	stp	x20, x19, [sp, #96]
    2e00:	add	x29, sp, #0x10
    2e04:	str	x0, [sp, #8]
    2e08:	cbz	x0, 31dc <cap_from_text@@Base+0x3f8>
    2e0c:	bl	1bf0 <cap_init@plt>
    2e10:	mov	x19, x0
    2e14:	cbz	x0, 31ec <cap_from_text@@Base+0x408>
    2e18:	ldr	w8, [x19]
    2e1c:	mov	w9, #0x330                 	// #816
    2e20:	movk	w9, #0x1998, lsl #16
    2e24:	mov	w24, #0x1                   	// #1
    2e28:	cmp	w8, w9
    2e2c:	b.eq	2e58 <cap_from_text@@Base+0x74>  // b.none
    2e30:	mov	w9, #0x522                 	// #1314
    2e34:	movk	w9, #0x2008, lsl #16
    2e38:	cmp	w8, w9
    2e3c:	b.eq	2e50 <cap_from_text@@Base+0x6c>  // b.none
    2e40:	mov	w9, #0x1026                	// #4134
    2e44:	movk	w9, #0x2007, lsl #16
    2e48:	cmp	w8, w9
    2e4c:	b.ne	31dc <cap_from_text@@Base+0x3f8>  // b.any
    2e50:	mov	w20, #0x2                   	// #2
    2e54:	b	2e5c <cap_from_text@@Base+0x78>
    2e58:	mov	w20, #0x1                   	// #1
    2e5c:	bl	1c10 <__ctype_b_loc@plt>
    2e60:	adrp	x22, 4000 <cap_set_nsowner@@Base+0xe8>
    2e64:	adrp	x26, 3000 <cap_from_text@@Base+0x21c>
    2e68:	mov	x21, x0
    2e6c:	add	x22, x22, #0x1a1
    2e70:	mov	x25, sp
    2e74:	add	x26, x26, #0xf5d
    2e78:	b	2e84 <cap_from_text@@Base+0xa0>
    2e7c:	mov	w8, #0x1                   	// #1
    2e80:	cbnz	w8, 31cc <cap_from_text@@Base+0x3e8>
    2e84:	ldr	x10, [sp, #8]
    2e88:	str	xzr, [sp]
    2e8c:	ldr	x8, [x21]
    2e90:	ldrb	w9, [x10]
    2e94:	ldrh	w8, [x8, x9, lsl #1]
    2e98:	tbz	w8, #13, 2eb0 <cap_from_text@@Base+0xcc>
    2e9c:	ldr	x11, [x21]
    2ea0:	ldrb	w9, [x10, #1]!
    2ea4:	ldrh	w8, [x11, x9, lsl #1]
    2ea8:	tbnz	w8, #13, 2ea0 <cap_from_text@@Base+0xbc>
    2eac:	str	x10, [sp, #8]
    2eb0:	cbz	w9, 2e7c <cap_from_text@@Base+0x98>
    2eb4:	cmp	w9, #0x5f
    2eb8:	b.eq	2ee8 <cap_from_text@@Base+0x104>  // b.none
    2ebc:	tbnz	w8, #3, 2ee8 <cap_from_text@@Base+0x104>
    2ec0:	cmp	w9, #0x2b
    2ec4:	mov	w8, #0x9                   	// #9
    2ec8:	b.eq	2e80 <cap_from_text@@Base+0x9c>  // b.none
    2ecc:	cmp	w9, #0x2d
    2ed0:	b.eq	2e80 <cap_from_text@@Base+0x9c>  // b.none
    2ed4:	mov	x0, sp
    2ed8:	mov	w1, w20
    2edc:	bl	32c4 <cap_from_text@@Base+0x4e0>
    2ee0:	mov	w23, wzr
    2ee4:	b	2f74 <cap_from_text@@Base+0x190>
    2ee8:	ldr	x23, [sp, #8]
    2eec:	mov	x1, x22
    2ef0:	mov	x0, x23
    2ef4:	bl	3210 <cap_from_text@@Base+0x42c>
    2ef8:	cbz	x0, 2f14 <cap_from_text@@Base+0x130>
    2efc:	add	x8, x23, #0x3
    2f00:	mov	x0, sp
    2f04:	mov	w1, w20
    2f08:	str	x8, [sp, #8]
    2f0c:	bl	32c4 <cap_from_text@@Base+0x4e0>
    2f10:	b	2f3c <cap_from_text@@Base+0x158>
    2f14:	add	x0, sp, #0x8
    2f18:	bl	333c <cap_from_text@@Base+0x558>
    2f1c:	cmn	w0, #0x1
    2f20:	b.eq	31bc <cap_from_text@@Base+0x3d8>  // b.none
    2f24:	asr	w8, w0, #5
    2f28:	sbfiz	x8, x8, #2, #32
    2f2c:	ldr	w9, [x25, x8]
    2f30:	lsl	w10, w24, w0
    2f34:	orr	w9, w9, w10
    2f38:	str	w9, [x25, x8]
    2f3c:	ldr	x8, [sp, #8]
    2f40:	ldrb	w9, [x8]
    2f44:	cmp	w9, #0x2c
    2f48:	b.ne	2f70 <cap_from_text@@Base+0x18c>  // b.any
    2f4c:	add	x10, x8, #0x1
    2f50:	ldr	x9, [x21]
    2f54:	str	x10, [sp, #8]
    2f58:	ldrb	w8, [x8, #1]
    2f5c:	cmp	x8, #0x5f
    2f60:	b.eq	2ee8 <cap_from_text@@Base+0x104>  // b.none
    2f64:	ldrh	w8, [x9, x8, lsl #1]
    2f68:	tbnz	w8, #3, 2ee8 <cap_from_text@@Base+0x104>
    2f6c:	b	31bc <cap_from_text@@Base+0x3d8>
    2f70:	mov	w23, #0x1                   	// #1
    2f74:	ldr	x8, [sp, #8]
    2f78:	add	x9, x8, #0x1
    2f7c:	str	x9, [sp, #8]
    2f80:	ldrb	w27, [x8]
    2f84:	cmp	w27, #0x2b
    2f88:	b.eq	2ff0 <cap_from_text@@Base+0x20c>  // b.none
    2f8c:	cmp	w27, #0x2d
    2f90:	b.eq	2ff0 <cap_from_text@@Base+0x20c>  // b.none
    2f94:	cmp	w27, #0x3d
    2f98:	b.ne	31bc <cap_from_text@@Base+0x3d8>  // b.any
    2f9c:	ldrb	w9, [x9]
    2fa0:	cmp	w9, #0x2d
    2fa4:	b.eq	2fb0 <cap_from_text@@Base+0x1cc>  // b.none
    2fa8:	cmp	w9, #0x2b
    2fac:	b.ne	2fd0 <cap_from_text@@Base+0x1ec>  // b.any
    2fb0:	cbz	w23, 31bc <cap_from_text@@Base+0x3d8>
    2fb4:	add	x8, x8, #0x2
    2fb8:	cmp	w9, #0x2b
    2fbc:	str	x8, [sp, #8]
    2fc0:	mov	w8, #0x4d                  	// #77
    2fc4:	mov	w9, #0x50                  	// #80
    2fc8:	csel	w27, w9, w8, eq  // eq = none
    2fcc:	b	2ff0 <cap_from_text@@Base+0x20c>
    2fd0:	cmp	w27, #0x3d
    2fd4:	mov	w8, #0x9                   	// #9
    2fd8:	b.hi	2e80 <cap_from_text@@Base+0x9c>  // b.pmore
    2fdc:	mov	x10, #0x280000000000        	// #43980465111040
    2fe0:	lsl	x9, x24, x27
    2fe4:	movk	x10, #0x2000, lsl #48
    2fe8:	tst	x9, x10
    2fec:	b.eq	2e80 <cap_from_text@@Base+0x9c>  // b.none
    2ff0:	mov	w28, wzr
    2ff4:	ldr	x9, [sp, #8]
    2ff8:	ldrb	w8, [x9]
    2ffc:	cbz	x8, 3034 <cap_from_text@@Base+0x250>
    3000:	ldr	x10, [x21]
    3004:	ldrh	w10, [x10, x8, lsl #1]
    3008:	tbnz	w10, #13, 3034 <cap_from_text@@Base+0x250>
    300c:	add	x9, x9, #0x1
    3010:	cmp	w8, #0x70
    3014:	str	x9, [sp, #8]
    3018:	b.eq	31ac <cap_from_text@@Base+0x3c8>  // b.none
    301c:	cmp	w8, #0x69
    3020:	b.eq	31b4 <cap_from_text@@Base+0x3d0>  // b.none
    3024:	cmp	w8, #0x65
    3028:	b.ne	31bc <cap_from_text@@Base+0x3d8>  // b.any
    302c:	orr	w28, w28, #0x1
    3030:	b	3040 <cap_from_text@@Base+0x25c>
    3034:	and	w8, w27, #0xff
    3038:	cmp	w8, #0x3d
    303c:	b.ne	31bc <cap_from_text@@Base+0x3d8>  // b.any
    3040:	and	w8, w27, #0xff
    3044:	sub	w8, w8, #0x2b
    3048:	cmp	w8, #0x25
    304c:	b.hi	3154 <cap_from_text@@Base+0x370>  // b.pmore
    3050:	adr	x9, 3060 <cap_from_text@@Base+0x27c>
    3054:	ldrb	w10, [x26, x8]
    3058:	add	x9, x9, x10, lsl #2
    305c:	br	x9
    3060:	mov	x1, sp
    3064:	mov	x0, x19
    3068:	mov	w2, wzr
    306c:	mov	w3, w20
    3070:	bl	3434 <cap_from_text@@Base+0x650>
    3074:	mov	x1, sp
    3078:	mov	w2, #0x1                   	// #1
    307c:	mov	x0, x19
    3080:	mov	w3, w20
    3084:	bl	3434 <cap_from_text@@Base+0x650>
    3088:	mov	x1, sp
    308c:	mov	w2, #0x2                   	// #2
    3090:	mov	x0, x19
    3094:	mov	w3, w20
    3098:	bl	3434 <cap_from_text@@Base+0x650>
    309c:	and	w8, w27, #0xff
    30a0:	cmp	w8, #0x4d
    30a4:	b.ne	30b8 <cap_from_text@@Base+0x2d4>  // b.any
    30a8:	tbnz	w28, #0, 30c8 <cap_from_text@@Base+0x2e4>
    30ac:	tbnz	w28, #1, 30e0 <cap_from_text@@Base+0x2fc>
    30b0:	tbnz	w28, #2, 30f8 <cap_from_text@@Base+0x314>
    30b4:	b	3154 <cap_from_text@@Base+0x370>
    30b8:	tbnz	w28, #0, 3110 <cap_from_text@@Base+0x32c>
    30bc:	tbnz	w28, #1, 3128 <cap_from_text@@Base+0x344>
    30c0:	tbnz	w28, #2, 3140 <cap_from_text@@Base+0x35c>
    30c4:	b	3154 <cap_from_text@@Base+0x370>
    30c8:	mov	x1, sp
    30cc:	mov	x0, x19
    30d0:	mov	w2, wzr
    30d4:	mov	w3, w20
    30d8:	bl	3434 <cap_from_text@@Base+0x650>
    30dc:	tbz	w28, #1, 30b0 <cap_from_text@@Base+0x2cc>
    30e0:	mov	x1, sp
    30e4:	mov	w2, #0x1                   	// #1
    30e8:	mov	x0, x19
    30ec:	mov	w3, w20
    30f0:	bl	3434 <cap_from_text@@Base+0x650>
    30f4:	tbz	w28, #2, 3154 <cap_from_text@@Base+0x370>
    30f8:	mov	x1, sp
    30fc:	mov	w2, #0x2                   	// #2
    3100:	mov	x0, x19
    3104:	mov	w3, w20
    3108:	bl	3434 <cap_from_text@@Base+0x650>
    310c:	b	3154 <cap_from_text@@Base+0x370>
    3110:	mov	x1, sp
    3114:	mov	x0, x19
    3118:	mov	w2, wzr
    311c:	mov	w3, w20
    3120:	bl	3474 <cap_from_text@@Base+0x690>
    3124:	tbz	w28, #1, 30c0 <cap_from_text@@Base+0x2dc>
    3128:	mov	x1, sp
    312c:	mov	w2, #0x1                   	// #1
    3130:	mov	x0, x19
    3134:	mov	w3, w20
    3138:	bl	3474 <cap_from_text@@Base+0x690>
    313c:	tbz	w28, #2, 3154 <cap_from_text@@Base+0x370>
    3140:	mov	x1, sp
    3144:	mov	w2, #0x2                   	// #2
    3148:	mov	x0, x19
    314c:	mov	w3, w20
    3150:	bl	3474 <cap_from_text@@Base+0x690>
    3154:	ldr	x9, [sp, #8]
    3158:	ldrb	w8, [x9]
    315c:	cmp	w8, #0x2d
    3160:	b.eq	316c <cap_from_text@@Base+0x388>  // b.none
    3164:	cmp	w8, #0x2b
    3168:	b.ne	3190 <cap_from_text@@Base+0x3ac>  // b.any
    316c:	cbz	w23, 31bc <cap_from_text@@Base+0x3d8>
    3170:	add	x10, x9, #0x1
    3174:	str	x10, [sp, #8]
    3178:	ldr	x10, [x21]
    317c:	ldrb	w9, [x9, #1]
    3180:	ldrh	w9, [x10, x9, lsl #1]
    3184:	tbz	w9, #10, 31bc <cap_from_text@@Base+0x3d8>
    3188:	mov	w28, wzr
    318c:	mov	w27, w8
    3190:	ldr	x8, [sp, #8]
    3194:	ldrb	w8, [x8]
    3198:	cbz	x8, 2e80 <cap_from_text@@Base+0x9c>
    319c:	ldr	x9, [x21]
    31a0:	ldrh	w8, [x9, x8, lsl #1]
    31a4:	tbz	w8, #13, 2ff4 <cap_from_text@@Base+0x210>
    31a8:	b	31c4 <cap_from_text@@Base+0x3e0>
    31ac:	orr	w28, w28, #0x2
    31b0:	b	3040 <cap_from_text@@Base+0x25c>
    31b4:	orr	w28, w28, #0x4
    31b8:	b	3040 <cap_from_text@@Base+0x25c>
    31bc:	mov	w8, #0x9                   	// #9
    31c0:	b	2e80 <cap_from_text@@Base+0x9c>
    31c4:	mov	w8, wzr
    31c8:	b	2e80 <cap_from_text@@Base+0x9c>
    31cc:	cmp	w8, #0x9
    31d0:	b.ne	31ec <cap_from_text@@Base+0x408>  // b.any
    31d4:	mov	x0, x19
    31d8:	bl	1cc0 <cap_free@plt>
    31dc:	bl	1d10 <__errno_location@plt>
    31e0:	mov	x19, xzr
    31e4:	mov	w8, #0x16                  	// #22
    31e8:	str	w8, [x0]
    31ec:	mov	x0, x19
    31f0:	ldp	x20, x19, [sp, #96]
    31f4:	ldp	x22, x21, [sp, #80]
    31f8:	ldp	x24, x23, [sp, #64]
    31fc:	ldp	x26, x25, [sp, #48]
    3200:	ldp	x28, x27, [sp, #32]
    3204:	ldp	x29, x30, [sp, #16]
    3208:	add	sp, sp, #0x70
    320c:	ret
    3210:	stp	x29, x30, [sp, #-48]!
    3214:	stp	x22, x21, [sp, #16]
    3218:	stp	x20, x19, [sp, #32]
    321c:	mov	x29, sp
    3220:	ldrb	w22, [x1]
    3224:	mov	x19, x0
    3228:	cmp	w22, #0x0
    322c:	cset	w21, eq  // eq = none
    3230:	cbz	w22, 3284 <cap_from_text@@Base+0x4a0>
    3234:	mov	x20, x1
    3238:	bl	1b20 <__ctype_tolower_loc@plt>
    323c:	ldr	x8, [x0]
    3240:	ldrb	w9, [x19]
    3244:	ldr	w9, [x8, x9, lsl #2]
    3248:	cmp	w9, w22
    324c:	b.ne	3280 <cap_from_text@@Base+0x49c>  // b.any
    3250:	add	x9, x20, #0x1
    3254:	add	x19, x19, #0x1
    3258:	ldrb	w10, [x9]
    325c:	cmp	w10, #0x0
    3260:	cset	w21, eq  // eq = none
    3264:	cbz	w10, 3284 <cap_from_text@@Base+0x4a0>
    3268:	ldrb	w11, [x19], #1
    326c:	add	x9, x9, #0x1
    3270:	ldr	w11, [x8, x11, lsl #2]
    3274:	cmp	w11, w10
    3278:	b.eq	3258 <cap_from_text@@Base+0x474>  // b.none
    327c:	sub	x19, x19, #0x1
    3280:	cbz	w21, 32b0 <cap_from_text@@Base+0x4cc>
    3284:	bl	1c10 <__ctype_b_loc@plt>
    3288:	ldr	x8, [x0]
    328c:	ldrb	w9, [x19]
    3290:	ldrh	w8, [x8, x9, lsl #1]
    3294:	cmp	x9, #0x5f
    3298:	cset	w9, eq  // eq = none
    329c:	and	w8, w8, #0x8
    32a0:	orr	w8, w9, w8, lsr #3
    32a4:	cmp	w8, #0x0
    32a8:	csel	x0, xzr, x19, ne  // ne = any
    32ac:	b	32b4 <cap_from_text@@Base+0x4d0>
    32b0:	mov	x0, xzr
    32b4:	ldp	x20, x19, [sp, #32]
    32b8:	ldp	x22, x21, [sp, #16]
    32bc:	ldp	x29, x30, [sp], #48
    32c0:	ret
    32c4:	stp	x29, x30, [sp, #-32]!
    32c8:	stp	x20, x19, [sp, #16]
    32cc:	mov	x29, sp
    32d0:	mov	w19, w1
    32d4:	mov	x20, x0
    32d8:	bl	1ac0 <cap_max_bits@plt>
    32dc:	cbz	w19, 3330 <cap_from_text@@Base+0x54c>
    32e0:	add	w8, w0, #0x1f
    32e4:	cmp	w0, #0x0
    32e8:	csel	w8, w8, w0, lt  // lt = tstop
    32ec:	and	w8, w8, #0xffffffe0
    32f0:	mov	x9, #0xffffffffffffffff    	// #-1
    32f4:	sub	w8, w0, w8
    32f8:	sub	w11, w19, #0x1
    32fc:	lsl	x8, x9, x8
    3300:	lsl	w10, w19, #5
    3304:	mvn	w8, w8
    3308:	add	x9, x20, w11, uxtw #2
    330c:	sub	w11, w10, #0x20
    3310:	cmp	w0, w11
    3314:	csel	w12, w8, wzr, hi  // hi = pmore
    3318:	cmp	w0, w10
    331c:	csinv	w10, w12, wzr, cc  // cc = lo, ul, last
    3320:	subs	w19, w19, #0x1
    3324:	str	w10, [x9], #-4
    3328:	mov	w10, w11
    332c:	b.ne	330c <cap_from_text@@Base+0x528>  // b.any
    3330:	ldp	x20, x19, [sp, #16]
    3334:	ldp	x29, x30, [sp], #32
    3338:	ret
    333c:	sub	sp, sp, #0x40
    3340:	stp	x29, x30, [sp, #16]
    3344:	stp	x22, x21, [sp, #32]
    3348:	stp	x20, x19, [sp, #48]
    334c:	add	x29, sp, #0x10
    3350:	ldr	x20, [x0]
    3354:	mov	x19, x0
    3358:	str	x20, [sp, #8]
    335c:	bl	1c10 <__ctype_b_loc@plt>
    3360:	ldr	x8, [x0]
    3364:	ldrb	w9, [x20]
    3368:	ldrh	w9, [x8, x9, lsl #1]
    336c:	tbnz	w9, #11, 33f8 <cap_from_text@@Base+0x614>
    3370:	ldrb	w9, [x20]
    3374:	cbz	w9, 33a4 <cap_from_text@@Base+0x5c0>
    3378:	mov	w10, #0x1                   	// #1
    337c:	b	338c <cap_from_text@@Base+0x5a8>
    3380:	ldrb	w9, [x20, w10, uxtw]
    3384:	add	w10, w10, #0x1
    3388:	cbz	w9, 33a4 <cap_from_text@@Base+0x5c0>
    338c:	and	w11, w9, #0xff
    3390:	cmp	w11, #0x5f
    3394:	b.eq	3380 <cap_from_text@@Base+0x59c>  // b.none
    3398:	and	x9, x9, #0xff
    339c:	ldrh	w9, [x8, x9, lsl #1]
    33a0:	tbnz	w9, #10, 3380 <cap_from_text@@Base+0x59c>
    33a4:	bl	1ac0 <cap_max_bits@plt>
    33a8:	cbz	w0, 3410 <cap_from_text@@Base+0x62c>
    33ac:	adrp	x10, 14000 <cap_set_nsowner@@Base+0x100e8>
    33b0:	ldr	x10, [x10, #4032]
    33b4:	mov	w8, #0x1                   	// #1
    33b8:	sub	w9, w0, #0x1
    33bc:	sub	w21, w8, w0
    33c0:	add	x22, x10, w9, uxtw #3
    33c4:	b	33d8 <cap_from_text@@Base+0x5f4>
    33c8:	add	w21, w21, #0x1
    33cc:	cmp	w21, #0x1
    33d0:	sub	x22, x22, #0x8
    33d4:	b.eq	3410 <cap_from_text@@Base+0x62c>  // b.none
    33d8:	ldr	x1, [x22]
    33dc:	cbz	x1, 33c8 <cap_from_text@@Base+0x5e4>
    33e0:	mov	x0, x20
    33e4:	bl	3210 <cap_from_text@@Base+0x42c>
    33e8:	cbz	x0, 33c8 <cap_from_text@@Base+0x5e4>
    33ec:	str	x0, [x19]
    33f0:	neg	w0, w21
    33f4:	b	3420 <cap_from_text@@Base+0x63c>
    33f8:	add	x1, sp, #0x8
    33fc:	mov	x0, x20
    3400:	mov	w2, wzr
    3404:	bl	1a70 <strtoul@plt>
    3408:	cmp	x0, #0x3f
    340c:	b.ls	3418 <cap_from_text@@Base+0x634>  // b.plast
    3410:	mov	w0, #0xffffffff            	// #-1
    3414:	b	3420 <cap_from_text@@Base+0x63c>
    3418:	ldr	x8, [sp, #8]
    341c:	str	x8, [x19]
    3420:	ldp	x20, x19, [sp, #48]
    3424:	ldp	x22, x21, [sp, #32]
    3428:	ldp	x29, x30, [sp, #16]
    342c:	add	sp, sp, #0x40
    3430:	ret
    3434:	cbz	w3, 3470 <cap_from_text@@Base+0x68c>
    3438:	mov	w10, w2
    343c:	lsl	x10, x10, #2
    3440:	mov	w11, #0xc                   	// #12
    3444:	smaddl	x10, w3, w11, x10
    3448:	add	x10, x10, x0
    344c:	sxtw	x9, w3
    3450:	sub	x8, x1, #0x4
    3454:	sub	x10, x10, #0x4
    3458:	ldr	w11, [x8, x9, lsl #2]
    345c:	ldr	w12, [x10]
    3460:	subs	x9, x9, #0x1
    3464:	bic	w11, w12, w11
    3468:	str	w11, [x10], #-12
    346c:	b.ne	3458 <cap_from_text@@Base+0x674>  // b.any
    3470:	ret
    3474:	cbz	w3, 34b0 <cap_from_text@@Base+0x6cc>
    3478:	mov	w10, w2
    347c:	lsl	x10, x10, #2
    3480:	mov	w11, #0xc                   	// #12
    3484:	smaddl	x10, w3, w11, x10
    3488:	add	x10, x10, x0
    348c:	sxtw	x9, w3
    3490:	sub	x8, x1, #0x4
    3494:	sub	x10, x10, #0x4
    3498:	ldr	w11, [x8, x9, lsl #2]
    349c:	ldr	w12, [x10]
    34a0:	subs	x9, x9, #0x1
    34a4:	orr	w11, w12, w11
    34a8:	str	w11, [x10], #-12
    34ac:	b.ne	3498 <cap_from_text@@Base+0x6b4>  // b.any
    34b0:	ret

00000000000034b4 <cap_from_name@@Base>:
    34b4:	stp	x29, x30, [sp, #-32]!
    34b8:	str	x19, [sp, #16]
    34bc:	mov	x29, sp
    34c0:	str	x0, [x29, #24]
    34c4:	add	x0, x29, #0x18
    34c8:	mov	x19, x1
    34cc:	bl	333c <cap_from_text@@Base+0x558>
    34d0:	cbz	x19, 34dc <cap_from_name@@Base+0x28>
    34d4:	tbnz	w0, #31, 34dc <cap_from_name@@Base+0x28>
    34d8:	str	w0, [x19]
    34dc:	ldr	x19, [sp, #16]
    34e0:	asr	w0, w0, #31
    34e4:	ldp	x29, x30, [sp], #32
    34e8:	ret

00000000000034ec <cap_to_name@@Base>:
    34ec:	stp	x29, x30, [sp, #-32]!
    34f0:	str	x19, [sp, #16]
    34f4:	mov	x29, sp
    34f8:	mov	w2, w0
    34fc:	cmp	w0, #0x26
    3500:	b.cc	3530 <cap_to_name@@Base+0x44>  // b.lo, b.ul, b.last
    3504:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3508:	add	x1, x1, #0x1a5
    350c:	add	x0, x29, #0x18
    3510:	bl	1b10 <asprintf@plt>
    3514:	ldr	x0, [x29, #24]
    3518:	bl	1ad0 <_libcap_strdup@plt>
    351c:	ldr	x8, [x29, #24]
    3520:	mov	x19, x0
    3524:	mov	x0, x8
    3528:	bl	1c50 <free@plt>
    352c:	b	3544 <cap_to_name@@Base+0x58>
    3530:	adrp	x8, 14000 <cap_set_nsowner@@Base+0x100e8>
    3534:	ldr	x8, [x8, #4032]
    3538:	ldr	x0, [x8, w2, sxtw #3]
    353c:	bl	1ad0 <_libcap_strdup@plt>
    3540:	mov	x19, x0
    3544:	mov	x0, x19
    3548:	ldr	x19, [sp, #16]
    354c:	ldp	x29, x30, [sp], #32
    3550:	ret

0000000000003554 <cap_to_text@@Base>:
    3554:	stp	x29, x30, [sp, #-96]!
    3558:	stp	x28, x27, [sp, #16]
    355c:	stp	x26, x25, [sp, #32]
    3560:	stp	x24, x23, [sp, #48]
    3564:	stp	x22, x21, [sp, #64]
    3568:	stp	x20, x19, [sp, #80]
    356c:	mov	x29, sp
    3570:	sub	sp, sp, #0x5f0
    3574:	cbz	x0, 3834 <cap_to_text@@Base+0x2e0>
    3578:	ldur	w8, [x0, #-4]
    357c:	mov	w9, #0x90d0                	// #37072
    3580:	movk	w9, #0xca, lsl #16
    3584:	mov	x20, x0
    3588:	cmp	w8, w9
    358c:	b.ne	3834 <cap_to_text@@Base+0x2e0>  // b.any
    3590:	movi	v0.2d, #0x0
    3594:	str	x1, [sp, #24]
    3598:	stp	q0, q0, [sp, #32]
    359c:	bl	1ac0 <cap_max_bits@plt>
    35a0:	mov	w21, w0
    35a4:	cbz	w0, 35d8 <cap_to_text@@Base+0x84>
    35a8:	mov	w22, wzr
    35ac:	add	x19, sp, #0x20
    35b0:	mov	x0, x20
    35b4:	mov	w1, w22
    35b8:	bl	3a0c <cap_to_text@@Base+0x4b8>
    35bc:	sbfiz	x8, x0, #2, #32
    35c0:	ldr	w9, [x19, x8]
    35c4:	add	w22, w22, #0x1
    35c8:	cmp	w21, w22
    35cc:	add	w9, w9, #0x1
    35d0:	str	w9, [x19, x8]
    35d4:	b.ne	35b0 <cap_to_text@@Base+0x5c>  // b.any
    35d8:	mov	w23, #0x7                   	// #7
    35dc:	mov	w8, #0x6                   	// #6
    35e0:	add	x9, sp, #0x20
    35e4:	ldr	w10, [x9, x8, lsl #2]
    35e8:	ldr	w11, [x9, w23, sxtw #2]
    35ec:	cmp	w10, w11
    35f0:	csel	w23, w23, w8, lt  // lt = tstop
    35f4:	sub	x8, x8, #0x1
    35f8:	cmn	x8, #0x1
    35fc:	b.ne	35e4 <cap_to_text@@Base+0x90>  // b.any
    3600:	adrp	x8, 4000 <cap_set_nsowner@@Base+0xe8>
    3604:	adrp	x9, 4000 <cap_set_nsowner@@Base+0xe8>
    3608:	add	x8, x8, #0x9c
    360c:	add	x9, x9, #0x1b5
    3610:	tst	w23, #0x1
    3614:	adrp	x10, 4000 <cap_set_nsowner@@Base+0xe8>
    3618:	add	x10, x10, #0x1b0
    361c:	adrp	x11, 4000 <cap_set_nsowner@@Base+0xe8>
    3620:	csel	x2, x9, x8, eq  // eq = none
    3624:	tst	w23, #0x4
    3628:	add	x11, x11, #0x145
    362c:	csel	x3, x9, x10, eq  // eq = none
    3630:	tst	w23, #0x2
    3634:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3638:	csel	x4, x9, x11, eq  // eq = none
    363c:	add	x1, x1, #0x1a8
    3640:	add	x0, sp, #0x44
    3644:	add	x19, sp, #0x44
    3648:	bl	1b00 <sprintf@plt>
    364c:	add	x8, sp, #0x20
    3650:	add	x22, x19, w0, sxtw
    3654:	mvn	w26, w23
    3658:	add	w12, w23, #0x1
    365c:	mov	w19, #0x8                   	// #8
    3660:	mov	w13, #0x20                  	// #32
    3664:	sub	x28, x8, #0x4
    3668:	cbz	w19, 384c <cap_to_text@@Base+0x2f8>
    366c:	mov	x24, xzr
    3670:	neg	w8, w19
    3674:	add	x9, x28, w19, sxtw #2
    3678:	sub	w10, w12, w19
    367c:	b	368c <cap_to_text@@Base+0x138>
    3680:	sub	x24, x24, #0x1
    3684:	cmp	w8, w24
    3688:	b.eq	384c <cap_to_text@@Base+0x2f8>  // b.none
    368c:	cmp	w10, w24
    3690:	b.eq	3680 <cap_to_text@@Base+0x12c>  // b.none
    3694:	ldr	w11, [x9, x24, lsl #2]
    3698:	cbz	w11, 3680 <cap_to_text@@Base+0x12c>
    369c:	sub	w8, w19, #0x1
    36a0:	strb	w13, [x22], #1
    36a4:	stp	w12, w26, [sp, #16]
    36a8:	str	x8, [sp, #8]
    36ac:	cbz	w21, 3748 <cap_to_text@@Base+0x1f4>
    36b0:	mov	w26, wzr
    36b4:	add	x25, x8, x24
    36b8:	b	36e4 <cap_to_text@@Base+0x190>
    36bc:	mov	x0, x27
    36c0:	bl	1cc0 <cap_free@plt>
    36c4:	bl	1d10 <__errno_location@plt>
    36c8:	mov	w9, #0x22                  	// #34
    36cc:	mov	w8, wzr
    36d0:	str	w9, [x0]
    36d4:	cbz	w8, 39e8 <cap_to_text@@Base+0x494>
    36d8:	add	w26, w26, #0x1
    36dc:	cmp	w21, w26
    36e0:	b.eq	3748 <cap_to_text@@Base+0x1f4>  // b.none
    36e4:	mov	x0, x20
    36e8:	mov	w1, w26
    36ec:	bl	3a0c <cap_to_text@@Base+0x4b8>
    36f0:	cmp	w25, w0
    36f4:	b.ne	36d8 <cap_to_text@@Base+0x184>  // b.any
    36f8:	mov	w0, w26
    36fc:	bl	1d40 <cap_to_name@plt>
    3700:	mov	x27, x0
    3704:	bl	1a80 <strlen@plt>
    3708:	add	x8, sp, #0x44
    370c:	sub	x8, x22, x8
    3710:	add	x8, x8, x0
    3714:	cmp	x8, #0x541
    3718:	b.cs	36bc <cap_to_text@@Base+0x168>  // b.hs, b.nlast
    371c:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3720:	mov	x0, x22
    3724:	add	x1, x1, #0x1b2
    3728:	mov	x2, x27
    372c:	bl	1b00 <sprintf@plt>
    3730:	add	x22, x22, w0, sxtw
    3734:	mov	x0, x27
    3738:	bl	1cc0 <cap_free@plt>
    373c:	mov	w8, #0x1                   	// #1
    3740:	cbnz	w8, 36d8 <cap_to_text@@Base+0x184>
    3744:	b	39e8 <cap_to_text@@Base+0x494>
    3748:	ldr	x8, [sp, #8]
    374c:	ldr	w26, [sp, #20]
    3750:	sub	x22, x22, #0x1
    3754:	add	x25, x8, x24
    3758:	ands	w8, w25, w26
    375c:	b.eq	37ac <cap_to_text@@Base+0x258>  // b.none
    3760:	adrp	x9, 4000 <cap_set_nsowner@@Base+0xe8>
    3764:	adrp	x10, 4000 <cap_set_nsowner@@Base+0xe8>
    3768:	tst	w8, #0x1
    376c:	add	x9, x9, #0x9c
    3770:	add	x10, x10, #0x1b5
    3774:	csel	x2, x10, x9, eq  // eq = none
    3778:	adrp	x9, 4000 <cap_set_nsowner@@Base+0xe8>
    377c:	tst	w8, #0x4
    3780:	add	x9, x9, #0x1b0
    3784:	csel	x3, x10, x9, eq  // eq = none
    3788:	tst	w8, #0x2
    378c:	adrp	x8, 4000 <cap_set_nsowner@@Base+0xe8>
    3790:	add	x8, x8, #0x145
    3794:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3798:	csel	x4, x10, x8, eq  // eq = none
    379c:	mov	x0, x22
    37a0:	add	x1, x1, #0x1b6
    37a4:	bl	1b00 <sprintf@plt>
    37a8:	add	x22, x22, w0, sxtw
    37ac:	add	w8, w19, w24
    37b0:	neg	w8, w8
    37b4:	ands	w8, w23, w8
    37b8:	b.eq	3808 <cap_to_text@@Base+0x2b4>  // b.none
    37bc:	adrp	x9, 4000 <cap_set_nsowner@@Base+0xe8>
    37c0:	adrp	x10, 4000 <cap_set_nsowner@@Base+0xe8>
    37c4:	tst	w8, #0x1
    37c8:	add	x9, x9, #0x9c
    37cc:	add	x10, x10, #0x1b5
    37d0:	csel	x2, x10, x9, eq  // eq = none
    37d4:	adrp	x9, 4000 <cap_set_nsowner@@Base+0xe8>
    37d8:	tst	w8, #0x4
    37dc:	add	x9, x9, #0x1b0
    37e0:	csel	x3, x10, x9, eq  // eq = none
    37e4:	tst	w8, #0x2
    37e8:	adrp	x8, 4000 <cap_set_nsowner@@Base+0xe8>
    37ec:	add	x8, x8, #0x145
    37f0:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    37f4:	csel	x4, x10, x8, eq  // eq = none
    37f8:	mov	x0, x22
    37fc:	add	x1, x1, #0x1be
    3800:	bl	1b00 <sprintf@plt>
    3804:	add	x22, x22, w0, sxtw
    3808:	ldr	w12, [sp, #16]
    380c:	add	x8, sp, #0x44
    3810:	sub	x8, x22, x8
    3814:	cmp	x8, #0x541
    3818:	mov	w19, w25
    381c:	mov	w13, #0x20                  	// #32
    3820:	b.lt	3668 <cap_to_text@@Base+0x114>  // b.tstop
    3824:	bl	1d10 <__errno_location@plt>
    3828:	mov	x8, x0
    382c:	mov	w9, #0x22                  	// #34
    3830:	b	3840 <cap_to_text@@Base+0x2ec>
    3834:	bl	1d10 <__errno_location@plt>
    3838:	mov	x8, x0
    383c:	mov	w9, #0x16                  	// #22
    3840:	mov	x0, xzr
    3844:	str	w9, [x8]
    3848:	b	39ec <cap_to_text@@Base+0x498>
    384c:	movi	v0.2d, #0x0
    3850:	cmp	w21, #0x3f
    3854:	stp	q0, q0, [sp, #32]
    3858:	b.hi	388c <cap_to_text@@Base+0x338>  // b.pmore
    385c:	add	x19, sp, #0x20
    3860:	mov	w23, w21
    3864:	mov	x0, x20
    3868:	mov	w1, w23
    386c:	bl	3a0c <cap_to_text@@Base+0x4b8>
    3870:	sbfiz	x8, x0, #2, #32
    3874:	ldr	w9, [x19, x8]
    3878:	add	w23, w23, #0x1
    387c:	cmp	w23, #0x40
    3880:	add	w9, w9, #0x1
    3884:	str	w9, [x19, x8]
    3888:	b.ne	3864 <cap_to_text@@Base+0x310>  // b.any
    388c:	add	x8, sp, #0x20
    3890:	mov	w19, #0x8                   	// #8
    3894:	adrp	x23, 4000 <cap_set_nsowner@@Base+0xe8>
    3898:	adrp	x28, 4000 <cap_set_nsowner@@Base+0xe8>
    389c:	mov	w10, #0x20                  	// #32
    38a0:	add	x27, sp, #0x44
    38a4:	add	x23, x23, #0x1b2
    38a8:	sub	x24, x8, #0x4
    38ac:	add	x28, x28, #0x1b6
    38b0:	sxtw	x8, w19
    38b4:	cmp	x8, #0x2
    38b8:	b.lt	39c8 <cap_to_text@@Base+0x474>  // b.tstop
    38bc:	ldr	w9, [x24, x8, lsl #2]
    38c0:	sub	x19, x8, #0x1
    38c4:	mov	x8, x19
    38c8:	cbz	w9, 38b4 <cap_to_text@@Base+0x360>
    38cc:	cmp	w21, #0x3f
    38d0:	strb	w10, [x22], #1
    38d4:	b.hi	3964 <cap_to_text@@Base+0x410>  // b.pmore
    38d8:	mov	w25, w21
    38dc:	b	3908 <cap_to_text@@Base+0x3b4>
    38e0:	mov	x0, x26
    38e4:	bl	1cc0 <cap_free@plt>
    38e8:	bl	1d10 <__errno_location@plt>
    38ec:	mov	w9, #0x22                  	// #34
    38f0:	mov	w8, wzr
    38f4:	str	w9, [x0]
    38f8:	cbz	w8, 39e8 <cap_to_text@@Base+0x494>
    38fc:	add	w25, w25, #0x1
    3900:	cmp	w25, #0x40
    3904:	b.eq	3964 <cap_to_text@@Base+0x410>  // b.none
    3908:	mov	x0, x20
    390c:	mov	w1, w25
    3910:	bl	3a0c <cap_to_text@@Base+0x4b8>
    3914:	cmp	w0, w19
    3918:	b.ne	38fc <cap_to_text@@Base+0x3a8>  // b.any
    391c:	mov	w0, w25
    3920:	bl	1d40 <cap_to_name@plt>
    3924:	mov	x26, x0
    3928:	bl	1a80 <strlen@plt>
    392c:	sub	x8, x22, x27
    3930:	add	x8, x8, x0
    3934:	cmp	x8, #0x541
    3938:	b.cs	38e0 <cap_to_text@@Base+0x38c>  // b.hs, b.nlast
    393c:	mov	x0, x22
    3940:	mov	x1, x23
    3944:	mov	x2, x26
    3948:	bl	1b00 <sprintf@plt>
    394c:	add	x22, x22, w0, sxtw
    3950:	mov	x0, x26
    3954:	bl	1cc0 <cap_free@plt>
    3958:	mov	w8, #0x1                   	// #1
    395c:	cbnz	w8, 38fc <cap_to_text@@Base+0x3a8>
    3960:	b	39e8 <cap_to_text@@Base+0x494>
    3964:	adrp	x8, 4000 <cap_set_nsowner@@Base+0xe8>
    3968:	adrp	x9, 4000 <cap_set_nsowner@@Base+0xe8>
    396c:	tst	w19, #0x1
    3970:	add	x8, x8, #0x9c
    3974:	add	x9, x9, #0x1b5
    3978:	csel	x2, x9, x8, eq  // eq = none
    397c:	adrp	x8, 4000 <cap_set_nsowner@@Base+0xe8>
    3980:	tst	w19, #0x4
    3984:	add	x8, x8, #0x1b0
    3988:	csel	x3, x9, x8, eq  // eq = none
    398c:	adrp	x8, 4000 <cap_set_nsowner@@Base+0xe8>
    3990:	sub	x22, x22, #0x1
    3994:	tst	w19, #0x2
    3998:	add	x8, x8, #0x145
    399c:	csel	x4, x9, x8, eq  // eq = none
    39a0:	mov	x0, x22
    39a4:	mov	x1, x28
    39a8:	bl	1b00 <sprintf@plt>
    39ac:	add	x22, x22, w0, sxtw
    39b0:	sub	x8, x22, x27
    39b4:	cmp	x8, #0x540
    39b8:	mov	w10, #0x20                  	// #32
    39bc:	b.gt	3824 <cap_to_text@@Base+0x2d0>
    39c0:	sxtw	x8, w19
    39c4:	b	38b4 <cap_to_text@@Base+0x360>
    39c8:	ldr	x9, [sp, #24]
    39cc:	cbz	x9, 39dc <cap_to_text@@Base+0x488>
    39d0:	add	x8, sp, #0x44
    39d4:	sub	x8, x22, x8
    39d8:	str	x8, [x9]
    39dc:	add	x0, sp, #0x44
    39e0:	bl	1ad0 <_libcap_strdup@plt>
    39e4:	b	39ec <cap_to_text@@Base+0x498>
    39e8:	mov	x0, xzr
    39ec:	add	sp, sp, #0x5f0
    39f0:	ldp	x20, x19, [sp, #80]
    39f4:	ldp	x22, x21, [sp, #64]
    39f8:	ldp	x24, x23, [sp, #48]
    39fc:	ldp	x26, x25, [sp, #32]
    3a00:	ldp	x28, x27, [sp, #16]
    3a04:	ldp	x29, x30, [sp], #96
    3a08:	ret
    3a0c:	asr	w8, w1, #5
    3a10:	mov	w9, #0xc                   	// #12
    3a14:	smaddl	x8, w8, w9, x0
    3a18:	ldp	w9, w11, [x8, #8]
    3a1c:	mov	w10, #0x1                   	// #1
    3a20:	lsl	w10, w10, w1
    3a24:	ldr	w8, [x8, #16]
    3a28:	tst	w9, w10
    3a2c:	cset	w9, ne  // ne = any
    3a30:	tst	w11, w10
    3a34:	orr	w11, w9, #0x2
    3a38:	csel	w9, w9, w11, eq  // eq = none
    3a3c:	orr	w11, w9, #0x4
    3a40:	tst	w8, w10
    3a44:	csel	w0, w9, w11, eq  // eq = none
    3a48:	ret

0000000000003a4c <cap_mode_name@@Base>:
    3a4c:	cmp	w0, #0x3
    3a50:	b.hi	3a64 <cap_mode_name@@Base+0x18>  // b.pmore
    3a54:	adrp	x8, 14000 <cap_set_nsowner@@Base+0x100e8>
    3a58:	add	x8, x8, #0xdb8
    3a5c:	ldr	x0, [x8, w0, sxtw #3]
    3a60:	ret
    3a64:	adrp	x0, 4000 <cap_set_nsowner@@Base+0xe8>
    3a68:	add	x0, x0, #0x1ea
    3a6c:	ret

0000000000003a70 <cap_get_fd@@Base>:
    3a70:	sub	sp, sp, #0x40
    3a74:	stp	x29, x30, [sp, #32]
    3a78:	stp	x20, x19, [sp, #48]
    3a7c:	add	x29, sp, #0x20
    3a80:	mov	w20, w0
    3a84:	bl	1bf0 <cap_init@plt>
    3a88:	cbz	x0, 3ad0 <cap_get_fd@@Base+0x60>
    3a8c:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3a90:	mov	x19, x0
    3a94:	add	x1, x1, #0x1f2
    3a98:	add	x2, sp, #0x8
    3a9c:	mov	w3, #0x18                  	// #24
    3aa0:	mov	w0, w20
    3aa4:	bl	1c70 <fgetxattr@plt>
    3aa8:	mov	x2, x0
    3aac:	cmp	w2, #0x3
    3ab0:	b.gt	3ac4 <cap_get_fd@@Base+0x54>
    3ab4:	mov	x0, x19
    3ab8:	bl	1cc0 <cap_free@plt>
    3abc:	mov	x0, xzr
    3ac0:	b	3ad0 <cap_get_fd@@Base+0x60>
    3ac4:	add	x0, sp, #0x8
    3ac8:	mov	x1, x19
    3acc:	bl	3ae0 <cap_get_fd@@Base+0x70>
    3ad0:	ldp	x20, x19, [sp, #48]
    3ad4:	ldp	x29, x30, [sp, #32]
    3ad8:	add	sp, sp, #0x40
    3adc:	ret
    3ae0:	stp	x29, x30, [sp, #-32]!
    3ae4:	str	x19, [sp, #16]
    3ae8:	mov	x29, sp
    3aec:	ldr	w9, [x0]
    3af0:	mov	w11, #0x3000000             	// #50331648
    3af4:	mov	x8, x0
    3af8:	mov	x19, x1
    3afc:	and	w10, w9, #0xff000000
    3b00:	cmp	w10, w11
    3b04:	b.eq	3ba0 <cap_get_fd@@Base+0x130>  // b.none
    3b08:	mov	w11, #0x2000000             	// #33554432
    3b0c:	cmp	w10, w11
    3b10:	b.eq	3bb8 <cap_get_fd@@Base+0x148>  // b.none
    3b14:	mov	w11, #0x1000000             	// #16777216
    3b18:	cmp	w10, w11
    3b1c:	b.ne	3bc4 <cap_get_fd@@Base+0x154>  // b.any
    3b20:	sub	w11, w2, #0xc
    3b24:	mov	w10, #0x1                   	// #1
    3b28:	cbnz	w11, 3bc4 <cap_get_fd@@Base+0x154>
    3b2c:	mov	x2, #0x18                  	// #24
    3b30:	mov	x12, #0xfff4                	// #65524
    3b34:	movk	x2, #0xfff4, lsl #32
    3b38:	movk	x12, #0xffff, lsl #16
    3b3c:	mov	x11, xzr
    3b40:	add	x0, x19, #0x8
    3b44:	add	x8, x8, #0x8
    3b48:	movk	x2, #0xffff, lsl #48
    3b4c:	movk	x12, #0xb, lsl #32
    3b50:	b	3b6c <cap_get_fd@@Base+0xfc>
    3b54:	add	x11, x11, #0x1
    3b58:	add	x2, x2, x12
    3b5c:	add	x0, x0, #0xc
    3b60:	cmp	x10, x11
    3b64:	add	x8, x8, #0x8
    3b68:	b.eq	3b8c <cap_get_fd@@Base+0x11c>  // b.none
    3b6c:	ldr	w13, [x8]
    3b70:	str	w13, [x0, #8]
    3b74:	ldur	w14, [x8, #-4]
    3b78:	str	w14, [x0, #4]
    3b7c:	tbz	w9, #0, 3b54 <cap_get_fd@@Base+0xe4>
    3b80:	orr	w13, w14, w13
    3b84:	str	w13, [x0]
    3b88:	b	3b54 <cap_get_fd@@Base+0xe4>
    3b8c:	cmp	w11, #0x1
    3b90:	b.hi	3bd0 <cap_get_fd@@Base+0x160>  // b.pmore
    3b94:	mov	w1, wzr
    3b98:	bl	1b90 <memset@plt>
    3b9c:	b	3bd0 <cap_get_fd@@Base+0x160>
    3ba0:	ldr	w10, [x8, #20]
    3ba4:	sub	w11, w2, #0x18
    3ba8:	str	w10, [x19, #32]
    3bac:	mov	w10, #0x2                   	// #2
    3bb0:	cbnz	w11, 3bc4 <cap_get_fd@@Base+0x154>
    3bb4:	b	3b2c <cap_get_fd@@Base+0xbc>
    3bb8:	sub	w11, w2, #0x14
    3bbc:	mov	w10, #0x2                   	// #2
    3bc0:	cbz	w11, 3b2c <cap_get_fd@@Base+0xbc>
    3bc4:	mov	x0, x19
    3bc8:	bl	1cc0 <cap_free@plt>
    3bcc:	mov	x19, xzr
    3bd0:	mov	x0, x19
    3bd4:	ldr	x19, [sp, #16]
    3bd8:	ldp	x29, x30, [sp], #32
    3bdc:	ret

0000000000003be0 <cap_get_file@@Base>:
    3be0:	sub	sp, sp, #0x40
    3be4:	stp	x29, x30, [sp, #32]
    3be8:	stp	x20, x19, [sp, #48]
    3bec:	add	x29, sp, #0x20
    3bf0:	mov	x20, x0
    3bf4:	bl	1bf0 <cap_init@plt>
    3bf8:	cbz	x0, 3c40 <cap_get_file@@Base+0x60>
    3bfc:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3c00:	mov	x19, x0
    3c04:	add	x1, x1, #0x1f2
    3c08:	add	x2, sp, #0x8
    3c0c:	mov	w3, #0x18                  	// #24
    3c10:	mov	x0, x20
    3c14:	bl	1c00 <getxattr@plt>
    3c18:	mov	x2, x0
    3c1c:	cmp	w2, #0x3
    3c20:	b.gt	3c34 <cap_get_file@@Base+0x54>
    3c24:	mov	x0, x19
    3c28:	bl	1cc0 <cap_free@plt>
    3c2c:	mov	x0, xzr
    3c30:	b	3c40 <cap_get_file@@Base+0x60>
    3c34:	add	x0, sp, #0x8
    3c38:	mov	x1, x19
    3c3c:	bl	3ae0 <cap_get_fd@@Base+0x70>
    3c40:	ldp	x20, x19, [sp, #48]
    3c44:	ldp	x29, x30, [sp, #32]
    3c48:	add	sp, sp, #0x40
    3c4c:	ret

0000000000003c50 <cap_get_nsowner@@Base>:
    3c50:	ldr	w0, [x0, #32]
    3c54:	ret

0000000000003c58 <cap_set_fd@@Base>:
    3c58:	sub	sp, sp, #0xc0
    3c5c:	stp	x29, x30, [sp, #160]
    3c60:	stp	x20, x19, [sp, #176]
    3c64:	add	x29, sp, #0xa0
    3c68:	mov	x20, x1
    3c6c:	mov	x1, sp
    3c70:	mov	w19, w0
    3c74:	bl	3f28 <cap_set_nsowner@@Base+0x10>
    3c78:	cbz	w0, 3c84 <cap_set_fd@@Base+0x2c>
    3c7c:	mov	w0, #0xffffffff            	// #-1
    3c80:	b	3cf0 <cap_set_fd@@Base+0x98>
    3c84:	ldr	w8, [sp, #16]
    3c88:	and	w8, w8, #0xf000
    3c8c:	cmp	w8, #0x8, lsl #12
    3c90:	b.ne	3ccc <cap_set_fd@@Base+0x74>  // b.any
    3c94:	cbz	x20, 3ce0 <cap_set_fd@@Base+0x88>
    3c98:	sub	x0, x29, #0x18
    3c9c:	sub	x2, x29, #0x1c
    3ca0:	mov	x1, x20
    3ca4:	bl	3d00 <cap_set_fd@@Base+0xa8>
    3ca8:	cbnz	w0, 3c7c <cap_set_fd@@Base+0x24>
    3cac:	ldursw	x3, [x29, #-28]
    3cb0:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3cb4:	add	x1, x1, #0x1f2
    3cb8:	sub	x2, x29, #0x18
    3cbc:	mov	w0, w19
    3cc0:	mov	w4, wzr
    3cc4:	bl	1ca0 <fsetxattr@plt>
    3cc8:	b	3cf0 <cap_set_fd@@Base+0x98>
    3ccc:	bl	1d10 <__errno_location@plt>
    3cd0:	mov	w8, #0x16                  	// #22
    3cd4:	str	w8, [x0]
    3cd8:	mov	w0, #0xffffffff            	// #-1
    3cdc:	b	3cf0 <cap_set_fd@@Base+0x98>
    3ce0:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3ce4:	add	x1, x1, #0x1f2
    3ce8:	mov	w0, w19
    3cec:	bl	1bd0 <fremovexattr@plt>
    3cf0:	ldp	x20, x19, [sp, #176]
    3cf4:	ldp	x29, x30, [sp, #160]
    3cf8:	add	sp, sp, #0xc0
    3cfc:	ret
    3d00:	stp	x29, x30, [sp, #-16]!
    3d04:	mov	x29, sp
    3d08:	cbz	x1, 3e40 <cap_set_fd@@Base+0x1e8>
    3d0c:	ldur	w8, [x1, #-4]
    3d10:	mov	w9, #0x90d0                	// #37072
    3d14:	movk	w9, #0xca, lsl #16
    3d18:	cmp	w8, w9
    3d1c:	b.ne	3e40 <cap_set_fd@@Base+0x1e8>  // b.any
    3d20:	ldr	w8, [x1]
    3d24:	mov	w9, #0x330                 	// #816
    3d28:	movk	w9, #0x1998, lsl #16
    3d2c:	cmp	w8, w9
    3d30:	b.eq	3d64 <cap_set_fd@@Base+0x10c>  // b.none
    3d34:	mov	w9, #0x522                 	// #1314
    3d38:	movk	w9, #0x2008, lsl #16
    3d3c:	cmp	w8, w9
    3d40:	b.eq	3d54 <cap_set_fd@@Base+0xfc>  // b.none
    3d44:	mov	w9, #0x1026                	// #4134
    3d48:	movk	w9, #0x2007, lsl #16
    3d4c:	cmp	w8, w9
    3d50:	b.ne	3e40 <cap_set_fd@@Base+0x1e8>  // b.any
    3d54:	mov	w8, #0x2                   	// #2
    3d58:	mov	w9, #0x2000000             	// #33554432
    3d5c:	mov	w10, #0x14                  	// #20
    3d60:	b	3d70 <cap_set_fd@@Base+0x118>
    3d64:	mov	w8, #0x1                   	// #1
    3d68:	mov	w9, #0x1000000             	// #16777216
    3d6c:	mov	w10, #0xc                   	// #12
    3d70:	str	w10, [x2]
    3d74:	ldr	w10, [x1, #32]
    3d78:	cbz	w10, 3da8 <cap_set_fd@@Base+0x150>
    3d7c:	ldr	w8, [x1]
    3d80:	mov	w9, #0x521                 	// #1313
    3d84:	movk	w9, #0x2008, lsl #16
    3d88:	cmp	w8, w9
    3d8c:	b.ls	3e40 <cap_set_fd@@Base+0x1e8>  // b.plast
    3d90:	mov	w8, #0x18                  	// #24
    3d94:	str	w8, [x2]
    3d98:	ldr	w9, [x1, #32]
    3d9c:	mov	w8, #0x2                   	// #2
    3da0:	str	w9, [x0, #20]
    3da4:	mov	w9, #0x3000000             	// #50331648
    3da8:	mov	w10, wzr
    3dac:	add	x11, x1, #0x8
    3db0:	mov	x12, x8
    3db4:	ldr	w13, [x11], #12
    3db8:	subs	x12, x12, #0x1
    3dbc:	orr	w10, w13, w10
    3dc0:	b.ne	3db4 <cap_set_fd@@Base+0x15c>  // b.any
    3dc4:	cmp	w8, #0x2
    3dc8:	b.cs	3dfc <cap_set_fd@@Base+0x1a4>  // b.hs, b.nlast
    3dcc:	mov	w11, #0xc                   	// #12
    3dd0:	madd	x11, x8, x11, x1
    3dd4:	ldr	w11, [x11, #8]
    3dd8:	cbnz	w11, 3e40 <cap_set_fd@@Base+0x1e8>
    3ddc:	mov	w11, #0xc                   	// #12
    3de0:	madd	x11, x8, x11, x1
    3de4:	ldr	w11, [x11, #16]
    3de8:	cbnz	w11, 3e40 <cap_set_fd@@Base+0x1e8>
    3dec:	mov	w11, #0xc                   	// #12
    3df0:	madd	x11, x8, x11, x1
    3df4:	ldr	w11, [x11, #12]
    3df8:	cbnz	w11, 3e40 <cap_set_fd@@Base+0x1e8>
    3dfc:	add	x11, x1, #0x10
    3e00:	add	x12, x0, #0x8
    3e04:	b	3e18 <cap_set_fd@@Base+0x1c0>
    3e08:	add	x11, x11, #0xc
    3e0c:	subs	x8, x8, #0x1
    3e10:	add	x12, x12, #0x8
    3e14:	b.eq	3e5c <cap_set_fd@@Base+0x204>  // b.none
    3e18:	ldur	w13, [x11, #-4]
    3e1c:	stur	w13, [x12, #-4]
    3e20:	ldr	w13, [x11]
    3e24:	str	w13, [x12]
    3e28:	cbz	w10, 3e08 <cap_set_fd@@Base+0x1b0>
    3e2c:	ldp	w13, w14, [x11, #-4]
    3e30:	ldur	w15, [x11, #-8]
    3e34:	orr	w13, w14, w13
    3e38:	bics	wzr, w13, w15
    3e3c:	b.eq	3e08 <cap_set_fd@@Base+0x1b0>  // b.none
    3e40:	bl	1d10 <__errno_location@plt>
    3e44:	mov	w8, #0x16                  	// #22
    3e48:	str	w8, [x0]
    3e4c:	mov	w8, #0xffffffff            	// #-1
    3e50:	mov	w0, w8
    3e54:	ldp	x29, x30, [sp], #16
    3e58:	ret
    3e5c:	mov	w8, wzr
    3e60:	cbz	w10, 3e68 <cap_set_fd@@Base+0x210>
    3e64:	orr	w9, w9, #0x1
    3e68:	str	w9, [x0]
    3e6c:	b	3e50 <cap_set_fd@@Base+0x1f8>

0000000000003e70 <cap_set_file@@Base>:
    3e70:	sub	sp, sp, #0xc0
    3e74:	stp	x29, x30, [sp, #160]
    3e78:	stp	x20, x19, [sp, #176]
    3e7c:	add	x29, sp, #0xa0
    3e80:	mov	x20, x1
    3e84:	mov	x1, sp
    3e88:	mov	x19, x0
    3e8c:	bl	3f38 <cap_set_nsowner@@Base+0x20>
    3e90:	cbz	w0, 3e9c <cap_set_file@@Base+0x2c>
    3e94:	mov	w0, #0xffffffff            	// #-1
    3e98:	b	3f08 <cap_set_file@@Base+0x98>
    3e9c:	ldr	w8, [sp, #16]
    3ea0:	and	w8, w8, #0xf000
    3ea4:	cmp	w8, #0x8, lsl #12
    3ea8:	b.ne	3ee4 <cap_set_file@@Base+0x74>  // b.any
    3eac:	cbz	x20, 3ef8 <cap_set_file@@Base+0x88>
    3eb0:	sub	x0, x29, #0x18
    3eb4:	sub	x2, x29, #0x1c
    3eb8:	mov	x1, x20
    3ebc:	bl	3d00 <cap_set_fd@@Base+0xa8>
    3ec0:	cbnz	w0, 3e94 <cap_set_file@@Base+0x24>
    3ec4:	ldursw	x3, [x29, #-28]
    3ec8:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3ecc:	add	x1, x1, #0x1f2
    3ed0:	sub	x2, x29, #0x18
    3ed4:	mov	x0, x19
    3ed8:	mov	w4, wzr
    3edc:	bl	1b60 <setxattr@plt>
    3ee0:	b	3f08 <cap_set_file@@Base+0x98>
    3ee4:	bl	1d10 <__errno_location@plt>
    3ee8:	mov	w8, #0x16                  	// #22
    3eec:	str	w8, [x0]
    3ef0:	mov	w0, #0xffffffff            	// #-1
    3ef4:	b	3f08 <cap_set_file@@Base+0x98>
    3ef8:	adrp	x1, 4000 <cap_set_nsowner@@Base+0xe8>
    3efc:	add	x1, x1, #0x1f2
    3f00:	mov	x0, x19
    3f04:	bl	1a50 <removexattr@plt>
    3f08:	ldp	x20, x19, [sp, #176]
    3f0c:	ldp	x29, x30, [sp, #160]
    3f10:	add	sp, sp, #0xc0
    3f14:	ret

0000000000003f18 <cap_set_nsowner@@Base>:
    3f18:	str	w1, [x0, #32]
    3f1c:	mov	w0, wzr
    3f20:	ret
    3f24:	nop
    3f28:	mov	x2, x1
    3f2c:	mov	w1, w0
    3f30:	mov	w0, #0x0                   	// #0
    3f34:	b	1c60 <__fxstat64@plt>
    3f38:	mov	x2, x1
    3f3c:	mov	x1, x0
    3f40:	mov	w0, #0x0                   	// #0
    3f44:	b	1c30 <__lxstat64@plt>

Disassembly of section .fini:

0000000000003f48 <.fini>:
    3f48:	stp	x29, x30, [sp, #-16]!
    3f4c:	mov	x29, sp
    3f50:	ldp	x29, x30, [sp], #16
    3f54:	ret
