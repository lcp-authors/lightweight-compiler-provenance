
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//UTF-7.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006e8 <.init>:
 6e8:	stp	x29, x30, [sp, #-16]!
 6ec:	mov	x29, sp
 6f0:	bl	7a0 <__assert_fail@plt+0x10>
 6f4:	ldp	x29, x30, [sp], #16
 6f8:	ret

Disassembly of section .plt:

0000000000000700 <__cxa_finalize@plt-0x20>:
 700:	stp	x16, x30, [sp, #-16]!
 704:	adrp	x16, 13000 <gconv@@Base+0x12698>
 708:	ldr	x17, [x16, #4088]
 70c:	add	x16, x16, #0xff8
 710:	br	x17
 714:	nop
 718:	nop
 71c:	nop

0000000000000720 <__cxa_finalize@plt>:
 720:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16]
 728:	add	x16, x16, #0x0
 72c:	br	x17

0000000000000730 <__gconv_transliterate@plt>:
 730:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #8]
 738:	add	x16, x16, #0x8
 73c:	br	x17

0000000000000740 <__stack_chk_fail@plt>:
 740:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #16]
 748:	add	x16, x16, #0x10
 74c:	br	x17

0000000000000750 <__gmon_start__@plt>:
 750:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #24]
 758:	add	x16, x16, #0x18
 75c:	br	x17

0000000000000760 <abort@plt>:
 760:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 764:	ldr	x17, [x16, #32]
 768:	add	x16, x16, #0x20
 76c:	br	x17

0000000000000770 <strcmp@plt>:
 770:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 774:	ldr	x17, [x16, #40]
 778:	add	x16, x16, #0x28
 77c:	br	x17

0000000000000780 <_dl_mcount_wrapper_check@plt>:
 780:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 784:	ldr	x17, [x16, #48]
 788:	add	x16, x16, #0x30
 78c:	br	x17

0000000000000790 <__assert_fail@plt>:
 790:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 794:	ldr	x17, [x16, #56]
 798:	add	x16, x16, #0x38
 79c:	br	x17

Disassembly of section .text:

00000000000007a0 <gconv_init@@Base-0x140>:
     7a0:	adrp	x0, 13000 <gconv@@Base+0x12698>
     7a4:	ldr	x0, [x0, #4048]
     7a8:	cbz	x0, 7b0 <__assert_fail@plt+0x20>
     7ac:	b	750 <__gmon_start__@plt>
     7b0:	ret
     7b4:	nop
     7b8:	adrp	x0, 14000 <gconv@@Base+0x13698>
     7bc:	add	x0, x0, #0x48
     7c0:	adrp	x1, 14000 <gconv@@Base+0x13698>
     7c4:	add	x1, x1, #0x48
     7c8:	cmp	x1, x0
     7cc:	b.eq	7e4 <__assert_fail@plt+0x54>  // b.none
     7d0:	adrp	x1, 13000 <gconv@@Base+0x12698>
     7d4:	ldr	x1, [x1, #4024]
     7d8:	cbz	x1, 7e4 <__assert_fail@plt+0x54>
     7dc:	mov	x16, x1
     7e0:	br	x16
     7e4:	ret
     7e8:	adrp	x0, 14000 <gconv@@Base+0x13698>
     7ec:	add	x0, x0, #0x48
     7f0:	adrp	x1, 14000 <gconv@@Base+0x13698>
     7f4:	add	x1, x1, #0x48
     7f8:	sub	x1, x1, x0
     7fc:	lsr	x2, x1, #63
     800:	add	x1, x2, x1, asr #3
     804:	cmp	xzr, x1, asr #1
     808:	asr	x1, x1, #1
     80c:	b.eq	824 <__assert_fail@plt+0x94>  // b.none
     810:	adrp	x2, 13000 <gconv@@Base+0x12698>
     814:	ldr	x2, [x2, #4064]
     818:	cbz	x2, 824 <__assert_fail@plt+0x94>
     81c:	mov	x16, x2
     820:	br	x16
     824:	ret
     828:	stp	x29, x30, [sp, #-32]!
     82c:	mov	x29, sp
     830:	str	x19, [sp, #16]
     834:	adrp	x19, 14000 <gconv@@Base+0x13698>
     838:	ldrb	w0, [x19, #72]
     83c:	cbnz	w0, 864 <__assert_fail@plt+0xd4>
     840:	adrp	x0, 13000 <gconv@@Base+0x12698>
     844:	ldr	x0, [x0, #4032]
     848:	cbz	x0, 858 <__assert_fail@plt+0xc8>
     84c:	adrp	x0, 14000 <gconv@@Base+0x13698>
     850:	ldr	x0, [x0, #64]
     854:	bl	720 <__cxa_finalize@plt>
     858:	bl	7b8 <__assert_fail@plt+0x28>
     85c:	mov	w0, #0x1                   	// #1
     860:	strb	w0, [x19, #72]
     864:	ldr	x19, [sp, #16]
     868:	ldp	x29, x30, [sp], #32
     86c:	ret
     870:	b	7e8 <__assert_fail@plt+0x58>
     874:	nop
     878:	cmp	w0, #0x19
     87c:	b.ls	8b4 <__assert_fail@plt+0x124>  // b.plast
     880:	cmp	w0, #0x33
     884:	b.ls	8a8 <__assert_fail@plt+0x118>  // b.plast
     888:	cmp	w0, #0x3d
     88c:	b.ls	8c8 <__assert_fail@plt+0x138>  // b.plast
     890:	cmp	w0, #0x3e
     894:	b.eq	8c0 <__assert_fail@plt+0x130>  // b.none
     898:	cmp	w0, #0x3f
     89c:	mov	w0, #0x2f                  	// #47
     8a0:	b.ne	8d4 <__assert_fail@plt+0x144>  // b.any
     8a4:	ret
     8a8:	add	w0, w0, #0x47
     8ac:	and	w0, w0, #0xff
     8b0:	ret
     8b4:	add	w0, w0, #0x41
     8b8:	and	w0, w0, #0xff
     8bc:	ret
     8c0:	mov	w0, #0x2b                  	// #43
     8c4:	ret
     8c8:	sub	w0, w0, #0x4
     8cc:	and	w0, w0, #0xff
     8d0:	ret
     8d4:	stp	x29, x30, [sp, #-16]!
     8d8:	mov	x29, sp
     8dc:	bl	760 <abort@plt>

00000000000008e0 <gconv_init@@Base>:
     8e0:	stp	x29, x30, [sp, #-32]!
     8e4:	mov	x29, sp
     8e8:	stp	x19, x20, [sp, #16]
     8ec:	mov	x19, x0
     8f0:	adrp	x20, 2000 <gconv@@Base+0x1698>
     8f4:	ldr	x0, [x0, #24]
     8f8:	add	x20, x20, #0xc20
     8fc:	mov	x1, x20
     900:	bl	770 <strcmp@plt>
     904:	cbnz	w0, 934 <gconv_init@@Base+0x54>
     908:	mov	x1, #0x1                   	// #1
     90c:	mov	x0, #0x400000004           	// #17179869188
     910:	movk	x1, #0x6, lsl #32
     914:	stp	x1, x0, [x19, #72]
     918:	str	xzr, [x19, #96]
     91c:	mov	w1, #0x1                   	// #1
     920:	mov	w0, #0x0                   	// #0
     924:	str	w1, [x19, #88]
     928:	ldp	x19, x20, [sp, #16]
     92c:	ldp	x29, x30, [sp], #32
     930:	ret
     934:	ldr	x0, [x19, #32]
     938:	mov	x1, x20
     93c:	bl	770 <strcmp@plt>
     940:	cbnz	w0, 960 <gconv_init@@Base+0x80>
     944:	mov	x1, #0x1                   	// #1
     948:	mov	x0, #0xffffffffffffffff    	// #-1
     94c:	mov	x2, #0x400000004           	// #17179869188
     950:	movk	x1, #0x6, lsl #32
     954:	stp	x2, x1, [x19, #72]
     958:	str	x0, [x19, #96]
     95c:	b	91c <gconv_init@@Base+0x3c>
     960:	mov	w0, #0x1                   	// #1
     964:	b	928 <gconv_init@@Base+0x48>

0000000000000968 <gconv@@Base>:
     968:	stp	x29, x30, [sp, #-320]!
     96c:	mov	x29, sp
     970:	stp	x21, x22, [sp, #32]
     974:	mov	x21, x1
     978:	adrp	x1, 13000 <gconv@@Base+0x12698>
     97c:	stp	x23, x24, [sp, #48]
     980:	ldr	w23, [x21, #16]
     984:	ldr	x1, [x1, #4056]
     988:	stp	x19, x20, [sp, #16]
     98c:	mov	x19, x3
     990:	ldr	x8, [x1]
     994:	str	x8, [sp, #312]
     998:	mov	x8, #0x0                   	// #0
     99c:	add	x1, x0, #0x68
     9a0:	stp	x27, x28, [sp, #80]
     9a4:	stp	x2, x4, [sp, #104]
     9a8:	add	x2, x21, #0x30
     9ac:	str	w23, [sp, #120]
     9b0:	str	x0, [sp, #128]
     9b4:	str	w7, [sp, #140]
     9b8:	stp	x5, xzr, [sp, #144]
     9bc:	str	x1, [sp, #168]
     9c0:	str	x2, [sp, #176]
     9c4:	tbnz	w23, #0, 9ec <gconv@@Base+0x84>
     9c8:	ldr	x0, [x0, #104]
     9cc:	ldr	x1, [x1, #40]
     9d0:	str	x1, [sp, #152]
     9d4:	cbz	x0, 9ec <gconv@@Base+0x84>
     9d8:	adrp	x0, 13000 <gconv@@Base+0x12698>
     9dc:	ldr	x0, [x0, #4040]
     9e0:	ldr	x0, [x0]
     9e4:	eor	x0, x1, x0
     9e8:	str	x0, [sp, #152]
     9ec:	cbnz	w6, 19e8 <gconv@@Base+0x1080>
     9f0:	ldr	x1, [sp, #112]
     9f4:	add	x0, sp, #0xf0
     9f8:	ldr	x2, [sp, #144]
     9fc:	cmp	x1, #0x0
     a00:	csel	x1, x21, x1, eq  // eq = none
     a04:	stp	x25, x26, [sp, #64]
     a08:	cmp	x2, #0x0
     a0c:	csel	x0, x0, xzr, ne  // ne = any
     a10:	ldr	x22, [x1]
     a14:	str	x0, [sp, #192]
     a18:	ldr	x0, [sp, #104]
     a1c:	str	xzr, [sp, #240]
     a20:	ldr	x26, [x21, #8]
     a24:	ldr	x25, [x0]
     a28:	ldr	w0, [sp, #140]
     a2c:	ldr	x20, [x21, #32]
     a30:	cbnz	w0, 11f4 <gconv@@Base+0x88c>
     a34:	ldr	x0, [sp, #128]
     a38:	ldr	x0, [x0, #96]
     a3c:	add	x1, sp, #0x118
     a40:	mov	x28, x21
     a44:	mov	x21, x20
     a48:	str	x1, [sp, #200]
     a4c:	add	x1, sp, #0x110
     a50:	str	x1, [sp, #208]
     a54:	add	x1, sp, #0xf8
     a58:	str	x1, [sp, #184]
     a5c:	mov	x1, x19
     a60:	mov	x19, x26
     a64:	mov	x26, x22
     a68:	mov	x22, x1
     a6c:	ldr	x1, [x21]
     a70:	str	x1, [sp, #160]
     a74:	cbz	x0, bc8 <gconv@@Base+0x260>
     a78:	stp	x25, x26, [sp, #272]
     a7c:	cmp	x22, x25
     a80:	b.eq	1cac <gconv@@Base+0x1344>  // b.none
     a84:	adrp	x24, 2000 <gconv@@Base+0x1698>
     a88:	mov	x20, x26
     a8c:	add	x24, x24, #0xe18
     a90:	mov	x0, x25
     a94:	mov	w27, #0x4                   	// #4
     a98:	add	x2, x0, #0x4
     a9c:	cmp	x22, x2
     aa0:	b.cc	1138 <gconv@@Base+0x7d0>  // b.lo, b.ul, b.last
     aa4:	cmp	x19, x20
     aa8:	b.ls	ed8 <gconv@@Base+0x570>  // b.plast
     aac:	ldr	w2, [x21]
     ab0:	ldr	w23, [x0]
     ab4:	ands	w3, w2, #0x18
     ab8:	b.ne	c40 <gconv@@Base+0x2d8>  // b.any
     abc:	cmp	w23, #0x7f
     ac0:	b.hi	df4 <gconv@@Base+0x48c>  // b.pmore
     ac4:	lsr	w0, w23, #3
     ac8:	and	w2, w23, #0x7
     acc:	add	x0, x24, x0
     ad0:	ldrb	w1, [x0, #16]
     ad4:	asr	w0, w1, w2
     ad8:	tbnz	w0, #0, 1128 <gconv@@Base+0x7c0>
     adc:	cmp	w23, #0x2b
     ae0:	b.ne	ec8 <gconv@@Base+0x560>  // b.any
     ae4:	add	x0, x20, #0x2
     ae8:	cmp	x19, x0
     aec:	b.cc	ed8 <gconv@@Base+0x570>  // b.lo, b.ul, b.last
     af0:	add	x0, x20, #0x1
     af4:	str	x0, [sp, #280]
     af8:	strb	w23, [x20]
     afc:	mov	w1, #0x2d                  	// #45
     b00:	ldr	x0, [sp, #280]
     b04:	add	x2, x0, #0x1
     b08:	str	x2, [sp, #280]
     b0c:	strb	w1, [x0]
     b10:	ldp	x0, x20, [sp, #272]
     b14:	add	x0, x0, #0x4
     b18:	str	x0, [sp, #272]
     b1c:	cmp	x22, x0
     b20:	b.ne	a98 <gconv@@Base+0x130>  // b.any
     b24:	nop
     b28:	ldr	x1, [sp, #104]
     b2c:	str	x0, [x1]
     b30:	ldr	x0, [sp, #112]
     b34:	cbnz	x0, 1040 <gconv@@Base+0x6d8>
     b38:	ldp	w1, w0, [x28, #16]
     b3c:	add	w0, w0, #0x1
     b40:	str	w0, [x28, #20]
     b44:	tbnz	w1, #0, 156c <gconv@@Base+0xc04>
     b48:	cmp	x26, x20
     b4c:	b.cs	15a4 <gconv@@Base+0xc3c>  // b.hs, b.nlast
     b50:	ldr	x1, [x28]
     b54:	str	x1, [sp, #248]
     b58:	ldr	x23, [sp, #152]
     b5c:	mov	x0, x23
     b60:	bl	780 <_dl_mcount_wrapper_check@plt>
     b64:	ldp	x0, x1, [sp, #168]
     b68:	mov	x3, x20
     b6c:	ldr	w7, [sp, #140]
     b70:	mov	w6, #0x0                   	// #0
     b74:	ldr	x5, [sp, #144]
     b78:	mov	x4, #0x0                   	// #0
     b7c:	ldr	x2, [sp, #184]
     b80:	blr	x23
     b84:	mov	w24, w0
     b88:	cmp	w0, #0x4
     b8c:	b.eq	1118 <gconv@@Base+0x7b0>  // b.none
     b90:	ldr	x27, [sp, #248]
     b94:	cmp	x27, x20
     b98:	b.ne	1448 <gconv@@Base+0xae0>  // b.any
     b9c:	cbnz	w24, 1c9c <gconv@@Base+0x1334>
     ba0:	ldr	x0, [sp, #104]
     ba4:	ldr	x1, [x21]
     ba8:	str	x1, [sp, #160]
     bac:	ldr	x25, [x0]
     bb0:	ldr	w0, [x28, #16]
     bb4:	str	w0, [sp, #120]
     bb8:	ldr	x0, [sp, #128]
     bbc:	ldr	x26, [x28]
     bc0:	ldr	x0, [x0, #96]
     bc4:	cbnz	x0, a78 <gconv@@Base+0x110>
     bc8:	cmp	x22, x25
     bcc:	b.eq	2244 <gconv@@Base+0x18dc>  // b.none
     bd0:	add	x5, x26, #0x4
     bd4:	cmp	x5, x19
     bd8:	b.hi	19d8 <gconv@@Base+0x1070>  // b.pmore
     bdc:	ldr	w0, [sp, #120]
     be0:	adrp	x7, 2000 <gconv@@Base+0x1698>
     be4:	mov	x2, x25
     be8:	add	x7, x7, #0xe18
     bec:	mov	x20, x26
     bf0:	and	w3, w0, #0x2
     bf4:	mov	w27, #0x4                   	// #4
     bf8:	mov	w18, #0x6                   	// #6
     bfc:	mov	w8, #0xffff2800            	// #-55296
     c00:	mov	w16, #0xffff2400            	// #-56320
     c04:	mov	w17, #0x2400                	// #9216
     c08:	mov	x23, #0x100                 	// #256
     c0c:	nop
     c10:	ldr	w1, [x21]
     c14:	ldrb	w4, [x2]
     c18:	cmp	wzr, w1, asr #3
     c1c:	asr	w1, w1, #3
     c20:	b.ne	fb0 <gconv@@Base+0x648>  // b.any
     c24:	cmp	w4, #0x7f
     c28:	b.ls	107c <gconv@@Base+0x714>  // b.plast
     c2c:	ldr	x1, [sp, #192]
     c30:	cbz	x1, c38 <gconv@@Base+0x2d0>
     c34:	cbnz	w3, 164c <gconv@@Base+0xce4>
     c38:	mov	w27, #0x6                   	// #6
     c3c:	b	1030 <gconv@@Base+0x6c8>
     c40:	cmp	w23, #0x7f
     c44:	b.hi	cb8 <gconv@@Base+0x350>  // b.pmore
     c48:	lsr	w0, w23, #3
     c4c:	and	w4, w23, #0x7
     c50:	add	x0, x24, x0
     c54:	ldrb	w1, [x0, #16]
     c58:	asr	w1, w1, w4
     c5c:	tbz	w1, #0, ee4 <gconv@@Base+0x57c>
     c60:	ldrb	w1, [x0, #32]
     c64:	cmp	w3, #0xf
     c68:	asr	w1, w1, w4
     c6c:	and	w1, w1, #0x1
     c70:	cinc	w0, w1, gt
     c74:	add	w0, w0, #0x1
     c78:	add	x0, x20, w0, sxtw
     c7c:	cmp	x19, x0
     c80:	b.cc	ed8 <gconv@@Base+0x570>  // b.lo, b.ul, b.last
     c84:	cmp	w3, #0xf
     c88:	add	x3, x20, #0x1
     c8c:	b.gt	13e0 <gconv@@Base+0xa78>
     c90:	cbz	w1, ca8 <gconv@@Base+0x340>
     c94:	str	x3, [sp, #280]
     c98:	mov	w0, #0x2d                  	// #45
     c9c:	strb	w0, [x20]
     ca0:	ldr	x20, [sp, #280]
     ca4:	add	x3, x20, #0x1
     ca8:	str	x3, [sp, #280]
     cac:	strb	w23, [x20]
     cb0:	str	wzr, [x21]
     cb4:	b	b10 <gconv@@Base+0x1a8>
     cb8:	mov	w0, #0xffff                	// #65535
     cbc:	cmp	w23, w0
     cc0:	b.ls	ee4 <gconv@@Base+0x57c>  // b.plast
     cc4:	mov	w0, #0x10ffff              	// #1114111
     cc8:	cmp	w23, w0
     ccc:	b.hi	11d0 <gconv@@Base+0x868>  // b.pmore
     cd0:	cmp	w3, #0x18
     cd4:	cset	x0, eq  // eq = none
     cd8:	add	x0, x0, #0x5
     cdc:	add	x0, x20, x0
     ce0:	cmp	x19, x0
     ce4:	b.cc	ed8 <gconv@@Base+0x570>  // b.lo, b.ul, b.last
     ce8:	sub	w1, w23, #0x10, lsl #12
     cec:	mov	w3, #0xd800                	// #55296
     cf0:	and	w23, w23, #0x3ff
     cf4:	ubfx	x0, x2, #3, #2
     cf8:	add	w1, w3, w1, lsr #10
     cfc:	mov	w6, #0xdc00                	// #56320
     d00:	add	w23, w23, w6
     d04:	cmp	w0, #0x2
     d08:	asr	w2, w2, #3
     d0c:	orr	w23, w23, w1, lsl #16
     d10:	b.eq	15ac <gconv@@Base+0xc44>  // b.none
     d14:	cmp	w0, #0x3
     d18:	b.ne	db4 <gconv@@Base+0x44c>  // b.any
     d1c:	add	x1, x20, #0x1
     d20:	orr	w0, w2, #0x3
     d24:	str	x1, [sp, #280]
     d28:	bl	878 <__assert_fail@plt+0xe8>
     d2c:	strb	w0, [x20]
     d30:	ubfx	x0, x23, #24, #6
     d34:	ldr	x20, [sp, #280]
     d38:	add	x1, x20, #0x1
     d3c:	str	x1, [sp, #280]
     d40:	bl	878 <__assert_fail@plt+0xe8>
     d44:	strb	w0, [x20]
     d48:	ubfx	x0, x23, #18, #6
     d4c:	ldr	x20, [sp, #280]
     d50:	add	x1, x20, #0x1
     d54:	str	x1, [sp, #280]
     d58:	bl	878 <__assert_fail@plt+0xe8>
     d5c:	strb	w0, [x20]
     d60:	ubfx	x0, x23, #12, #6
     d64:	ldr	x20, [sp, #280]
     d68:	add	x1, x20, #0x1
     d6c:	str	x1, [sp, #280]
     d70:	bl	878 <__assert_fail@plt+0xe8>
     d74:	strb	w0, [x20]
     d78:	ubfx	x0, x23, #6, #6
     d7c:	ldr	x20, [sp, #280]
     d80:	add	x1, x20, #0x1
     d84:	str	x1, [sp, #280]
     d88:	bl	878 <__assert_fail@plt+0xe8>
     d8c:	strb	w0, [x20]
     d90:	and	w0, w23, #0x3f
     d94:	ldr	x20, [sp, #280]
     d98:	add	x1, x20, #0x1
     d9c:	str	x1, [sp, #280]
     da0:	bl	878 <__assert_fail@plt+0xe8>
     da4:	strb	w0, [x20]
     da8:	mov	w0, #0x8                   	// #8
     dac:	str	w0, [x21]
     db0:	b	b10 <gconv@@Base+0x1a8>
     db4:	cmp	w0, #0x1
     db8:	b.ne	2c08 <gconv@@Base+0x22a0>  // b.any
     dbc:	add	x0, x20, #0x1
     dc0:	str	x0, [sp, #280]
     dc4:	mov	w0, #0x32                  	// #50
     dc8:	strb	w0, [x20]
     dcc:	ubfx	x0, x23, #20, #6
     dd0:	ldr	x20, [sp, #280]
     dd4:	add	x1, x20, #0x1
     dd8:	str	x1, [sp, #280]
     ddc:	bl	878 <__assert_fail@plt+0xe8>
     de0:	strb	w0, [x20]
     de4:	ubfx	x0, x23, #14, #6
     de8:	ldr	x20, [sp, #280]
     dec:	add	x1, x20, #0x1
     df0:	b	f20 <gconv@@Base+0x5b8>
     df4:	mov	w0, #0xffff                	// #65535
     df8:	cmp	w23, w0
     dfc:	b.ls	ec8 <gconv@@Base+0x560>  // b.plast
     e00:	mov	w0, #0x10ffff              	// #1114111
     e04:	cmp	w23, w0
     e08:	b.hi	1354 <gconv@@Base+0x9ec>  // b.pmore
     e0c:	add	x0, x20, #0x6
     e10:	cmp	x19, x0
     e14:	b.cc	ed8 <gconv@@Base+0x570>  // b.lo, b.ul, b.last
     e18:	add	x0, x20, #0x1
     e1c:	str	x0, [sp, #280]
     e20:	mov	w0, #0x2b                  	// #43
     e24:	strb	w0, [x20]
     e28:	mov	w3, #0xdc00                	// #56320
     e2c:	and	w20, w23, #0x3ff
     e30:	ldr	x1, [sp, #280]
     e34:	add	w20, w20, w3
     e38:	mov	w2, #0x32                  	// #50
     e3c:	sub	w0, w23, #0x10, lsl #12
     e40:	add	x3, x1, #0x1
     e44:	str	x3, [sp, #280]
     e48:	strb	w2, [x1]
     e4c:	mov	w1, #0xd800                	// #55296
     e50:	add	w0, w1, w0, lsr #10
     e54:	ldr	x23, [sp, #280]
     e58:	orr	w20, w20, w0, lsl #16
     e5c:	ubfx	x0, x0, #4, #6
     e60:	add	x1, x23, #0x1
     e64:	str	x1, [sp, #280]
     e68:	bl	878 <__assert_fail@plt+0xe8>
     e6c:	strb	w0, [x23]
     e70:	ubfx	x0, x20, #14, #6
     e74:	ldr	x23, [sp, #280]
     e78:	add	x1, x23, #0x1
     e7c:	str	x1, [sp, #280]
     e80:	bl	878 <__assert_fail@plt+0xe8>
     e84:	strb	w0, [x23]
     e88:	ubfx	x0, x20, #8, #6
     e8c:	ldr	x23, [sp, #280]
     e90:	add	x1, x23, #0x1
     e94:	str	x1, [sp, #280]
     e98:	bl	878 <__assert_fail@plt+0xe8>
     e9c:	strb	w0, [x23]
     ea0:	ubfx	x0, x20, #2, #6
     ea4:	ubfiz	w20, w20, #7, #2
     ea8:	ldr	x23, [sp, #280]
     eac:	orr	w20, w20, #0x10
     eb0:	add	x1, x23, #0x1
     eb4:	str	x1, [sp, #280]
     eb8:	bl	878 <__assert_fail@plt+0xe8>
     ebc:	strb	w0, [x23]
     ec0:	str	w20, [x21]
     ec4:	b	b10 <gconv@@Base+0x1a8>
     ec8:	add	x0, x20, #0x3
     ecc:	cmp	x19, x0
     ed0:	b.cs	13a0 <gconv@@Base+0xa38>  // b.hs, b.nlast
     ed4:	nop
     ed8:	mov	w27, #0x5                   	// #5
     edc:	ldr	x0, [sp, #272]
     ee0:	b	b28 <gconv@@Base+0x1c0>
     ee4:	cmp	w3, #0xf
     ee8:	cset	x0, gt
     eec:	add	x0, x0, #0x2
     ef0:	add	x0, x20, x0
     ef4:	cmp	x19, x0
     ef8:	b.cc	ed8 <gconv@@Base+0x570>  // b.lo, b.ul, b.last
     efc:	ubfx	x1, x2, #3, #2
     f00:	asr	w2, w2, #3
     f04:	cmp	w1, #0x2
     f08:	b.eq	1614 <gconv@@Base+0xcac>  // b.none
     f0c:	cmp	w1, #0x3
     f10:	b.ne	f6c <gconv@@Base+0x604>  // b.any
     f14:	and	w2, w2, #0xfffffffc
     f18:	add	x1, x20, #0x1
     f1c:	orr	w0, w2, w23, lsr #14
     f20:	str	x1, [sp, #280]
     f24:	bl	878 <__assert_fail@plt+0xe8>
     f28:	strb	w0, [x20]
     f2c:	ubfx	x0, x23, #8, #6
     f30:	ldr	x20, [sp, #280]
     f34:	add	x1, x20, #0x1
     f38:	str	x1, [sp, #280]
     f3c:	bl	878 <__assert_fail@plt+0xe8>
     f40:	strb	w0, [x20]
     f44:	ubfx	x0, x23, #2, #6
     f48:	ubfiz	w23, w23, #7, #2
     f4c:	ldr	x20, [sp, #280]
     f50:	orr	w23, w23, #0x10
     f54:	add	x1, x20, #0x1
     f58:	str	x1, [sp, #280]
     f5c:	bl	878 <__assert_fail@plt+0xe8>
     f60:	strb	w0, [x20]
     f64:	str	w23, [x21]
     f68:	b	b10 <gconv@@Base+0x1a8>
     f6c:	cmp	w1, #0x1
     f70:	b.ne	2c08 <gconv@@Base+0x22a0>  // b.any
     f74:	add	x0, x20, #0x1
     f78:	str	x0, [sp, #280]
     f7c:	lsr	w0, w23, #10
     f80:	bl	878 <__assert_fail@plt+0xe8>
     f84:	strb	w0, [x20]
     f88:	ubfx	x0, x23, #4, #6
     f8c:	ldr	x20, [sp, #280]
     f90:	ubfiz	w23, w23, #5, #4
     f94:	orr	w23, w23, #0x18
     f98:	add	x1, x20, #0x1
     f9c:	str	x1, [sp, #280]
     fa0:	bl	878 <__assert_fail@plt+0xe8>
     fa4:	strb	w0, [x20]
     fa8:	str	w23, [x21]
     fac:	b	b10 <gconv@@Base+0x1a8>
     fb0:	sub	w0, w4, #0x41
     fb4:	ldr	w6, [x21, #4]
     fb8:	and	w9, w0, #0xff
     fbc:	cmp	w9, #0x19
     fc0:	b.ls	fd8 <gconv@@Base+0x670>  // b.plast
     fc4:	sub	w0, w4, #0x61
     fc8:	and	w0, w0, #0xff
     fcc:	cmp	w0, #0x19
     fd0:	b.hi	1144 <gconv@@Base+0x7dc>  // b.pmore
     fd4:	sub	w0, w4, #0x47
     fd8:	cmp	w1, #0x6
     fdc:	b.le	10cc <gconv@@Base+0x764>
     fe0:	sub	w4, w1, #0x6
     fe4:	sub	w9, w1, #0x11
     fe8:	cmp	w9, #0x5
     fec:	lsl	w0, w0, w4
     ff0:	orr	w0, w0, w6
     ff4:	b.hi	1180 <gconv@@Base+0x818>  // b.pmore
     ff8:	lsr	w6, w0, #16
     ffc:	add	w9, w6, w8
    1000:	cmp	w9, #0x3ff
    1004:	b.hi	13cc <gconv@@Base+0xa64>  // b.pmore
    1008:	str	w0, [x21, #4]
    100c:	add	x2, x2, #0x1
    1010:	lsl	w4, w4, #3
    1014:	str	w4, [x21]
    1018:	cmp	x2, x22
    101c:	b.eq	1030 <gconv@@Base+0x6c8>  // b.none
    1020:	add	x5, x20, #0x4
    1024:	cmp	x19, x5
    1028:	b.cs	c10 <gconv@@Base+0x2a8>  // b.hs, b.nlast
    102c:	mov	w27, #0x5                   	// #5
    1030:	ldr	x0, [sp, #104]
    1034:	str	x2, [x0]
    1038:	ldr	x0, [sp, #112]
    103c:	cbz	x0, b38 <gconv@@Base+0x1d0>
    1040:	ldp	x25, x26, [sp, #64]
    1044:	str	x20, [x0]
    1048:	adrp	x0, 13000 <gconv@@Base+0x12698>
    104c:	ldr	x0, [x0, #4056]
    1050:	ldr	x1, [sp, #312]
    1054:	ldr	x0, [x0]
    1058:	eor	x0, x1, x0
    105c:	cbnz	x0, 2b4c <gconv@@Base+0x21e4>
    1060:	mov	w0, w27
    1064:	ldp	x19, x20, [sp, #16]
    1068:	ldp	x21, x22, [sp, #32]
    106c:	ldp	x23, x24, [sp, #48]
    1070:	ldp	x27, x28, [sp, #80]
    1074:	ldp	x29, x30, [sp], #320
    1078:	ret
    107c:	lsr	w1, w4, #3
    1080:	and	w0, w4, #0x7
    1084:	ldrb	w1, [x7, w1, uxtw]
    1088:	asr	w0, w1, w0
    108c:	tbz	w0, #0, 10a0 <gconv@@Base+0x738>
    1090:	add	x2, x2, #0x1
    1094:	str	w4, [x20]
    1098:	mov	x20, x5
    109c:	b	1018 <gconv@@Base+0x6b0>
    10a0:	cmp	w4, #0x2b
    10a4:	b.ne	c2c <gconv@@Base+0x2c4>  // b.any
    10a8:	add	x0, x2, #0x2
    10ac:	cmp	x22, x0
    10b0:	b.cc	1644 <gconv@@Base+0xcdc>  // b.lo, b.ul, b.last
    10b4:	ldrb	w1, [x2, #1]
    10b8:	cmp	w1, #0x2d
    10bc:	b.eq	11c0 <gconv@@Base+0x858>  // b.none
    10c0:	add	x2, x2, #0x1
    10c4:	str	x23, [x21]
    10c8:	b	1018 <gconv@@Base+0x6b0>
    10cc:	lsl	w4, w0, w1
    10d0:	sub	w10, w18, w1
    10d4:	lsl	w4, w4, #26
    10d8:	str	w4, [x21, #4]
    10dc:	and	w9, w6, #0xffff
    10e0:	add	w6, w8, w6, lsr #16
    10e4:	lsr	w0, w0, w10
    10e8:	cmp	w6, #0x3ff
    10ec:	orr	w0, w0, w9
    10f0:	add	w4, w1, #0x1a
    10f4:	b.hi	2a20 <gconv@@Base+0x20b8>  // b.pmore
    10f8:	add	w1, w0, w16
    10fc:	cmp	w1, #0x3ff
    1100:	b.hi	2a00 <gconv@@Base+0x2098>  // b.pmore
    1104:	add	w6, w17, w6, lsl #10
    1108:	add	w0, w6, w0
    110c:	str	w0, [x20]
    1110:	mov	x20, x5
    1114:	b	100c <gconv@@Base+0x6a4>
    1118:	mov	w24, w27
    111c:	cmp	w27, #0x5
    1120:	b.ne	b9c <gconv@@Base+0x234>  // b.any
    1124:	b	ba0 <gconv@@Base+0x238>
    1128:	add	x0, x20, #0x1
    112c:	str	x0, [sp, #280]
    1130:	strb	w23, [x20]
    1134:	b	b10 <gconv@@Base+0x1a8>
    1138:	mov	w27, #0x7                   	// #7
    113c:	ldr	x0, [sp, #272]
    1140:	b	b28 <gconv@@Base+0x1c0>
    1144:	sub	w0, w4, #0x30
    1148:	and	w0, w0, #0xff
    114c:	cmp	w0, #0x9
    1150:	b.ls	13c4 <gconv@@Base+0xa5c>  // b.plast
    1154:	cmp	w4, #0x2b
    1158:	b.eq	19d0 <gconv@@Base+0x1068>  // b.none
    115c:	cmp	w4, #0x2f
    1160:	b.eq	1664 <gconv@@Base+0xcfc>  // b.none
    1164:	cmp	w6, #0x0
    1168:	ccmp	w1, #0x1a, #0x4, eq  // eq = none
    116c:	b.le	1198 <gconv@@Base+0x830>
    1170:	cmp	w4, #0x2d
    1174:	str	wzr, [x21]
    1178:	cinc	x2, x2, eq  // eq = none
    117c:	b	1018 <gconv@@Base+0x6b0>
    1180:	sub	w1, w1, #0xb
    1184:	cmp	w1, #0x5
    1188:	b.hi	1008 <gconv@@Base+0x6a0>  // b.pmore
    118c:	add	w1, w16, w0, uxth
    1190:	cmp	w1, #0x3ff
    1194:	b.ls	1008 <gconv@@Base+0x6a0>  // b.plast
    1198:	ldr	x1, [sp, #192]
    119c:	cbz	x1, c38 <gconv@@Base+0x2d0>
    11a0:	cbz	w3, c38 <gconv@@Base+0x2d0>
    11a4:	ldr	x0, [x1]
    11a8:	str	wzr, [x21]
    11ac:	add	x2, x2, #0x1
    11b0:	mov	w27, #0x6                   	// #6
    11b4:	add	x0, x0, #0x1
    11b8:	str	x0, [x1]
    11bc:	b	1018 <gconv@@Base+0x6b0>
    11c0:	mov	x2, x0
    11c4:	str	w4, [x20]
    11c8:	mov	x20, x5
    11cc:	b	1018 <gconv@@Base+0x6b0>
    11d0:	ldr	x0, [sp, #192]
    11d4:	cbz	x0, 2274 <gconv@@Base+0x190c>
    11d8:	ldr	w0, [x28, #16]
    11dc:	tbnz	w0, #3, 140c <gconv@@Base+0xaa4>
    11e0:	ldr	x1, [sp, #120]
    11e4:	ldr	x0, [sp, #272]
    11e8:	tbnz	w1, #1, 1624 <gconv@@Base+0xcbc>
    11ec:	mov	w27, #0x6                   	// #6
    11f0:	b	b28 <gconv@@Base+0x1c0>
    11f4:	ldr	w3, [x20]
    11f8:	ands	w2, w3, #0x7
    11fc:	b.eq	a34 <gconv@@Base+0xcc>  // b.none
    1200:	ldr	x0, [sp, #112]
    1204:	cbnz	x0, 2aac <gconv@@Base+0x2144>
    1208:	ldr	x0, [sp, #128]
    120c:	ldr	x0, [x0, #96]
    1210:	cbz	x0, 1674 <gconv@@Base+0xd0c>
    1214:	stp	x25, x22, [sp, #256]
    1218:	cmp	w2, #0x4
    121c:	b.hi	2bd8 <gconv@@Base+0x2270>  // b.pmore
    1220:	mov	w7, w2
    1224:	cbz	w2, 2238 <gconv@@Base+0x18d0>
    1228:	add	x4, x20, #0x3
    122c:	add	x24, sp, #0x130
    1230:	mov	x0, #0x1                   	// #1
    1234:	add	x1, x24, x0
    1238:	ldrb	w5, [x4, x0]
    123c:	cmp	x0, x7
    1240:	add	x0, x0, #0x1
    1244:	sturb	w5, [x1, #-1]
    1248:	b.ne	1234 <gconv@@Base+0x8cc>  // b.any
    124c:	mov	x0, #0x4                   	// #4
    1250:	sub	x0, x0, x7
    1254:	add	x0, x25, x0
    1258:	cmp	x19, x0
    125c:	b.cc	23cc <gconv@@Base+0x1a64>  // b.lo, b.ul, b.last
    1260:	add	x0, x25, #0x1
    1264:	add	x24, sp, #0x130
    1268:	cmp	x22, x26
    126c:	b.cs	1dc0 <gconv@@Base+0x1458>  // b.hs, b.nlast
    1270:	add	x7, x7, #0x1
    1274:	str	x0, [sp, #256]
    1278:	add	x28, x24, x7
    127c:	cmp	x7, #0x3
    1280:	ldurb	w1, [x0, #-1]
    1284:	ccmp	x19, x0, #0x0, ls  // ls = plast
    1288:	add	x0, x0, #0x1
    128c:	sturb	w1, [x28, #-1]
    1290:	b.hi	1270 <gconv@@Base+0x908>  // b.pmore
    1294:	str	x24, [sp, #256]
    1298:	ands	w2, w3, #0x18
    129c:	ldr	w27, [sp, #304]
    12a0:	b.ne	1cbc <gconv@@Base+0x1354>  // b.any
    12a4:	cmp	w27, #0x7f
    12a8:	b.hi	1f70 <gconv@@Base+0x1608>  // b.pmore
    12ac:	lsr	w2, w27, #3
    12b0:	adrp	x0, 2000 <gconv@@Base+0x1698>
    12b4:	add	x0, x0, #0xe18
    12b8:	and	w1, w27, #0x7
    12bc:	add	x0, x0, x2
    12c0:	ldrb	w0, [x0, #16]
    12c4:	asr	w0, w0, w1
    12c8:	tbnz	w0, #0, 25e8 <gconv@@Base+0x1c80>
    12cc:	cmp	w27, #0x2b
    12d0:	b.ne	25b0 <gconv@@Base+0x1c48>  // b.any
    12d4:	add	x0, x22, #0x2
    12d8:	cmp	x26, x0
    12dc:	b.cc	1dc0 <gconv@@Base+0x1458>  // b.lo, b.ul, b.last
    12e0:	add	x0, x22, #0x1
    12e4:	str	x0, [sp, #264]
    12e8:	strb	w27, [x22]
    12ec:	mov	w1, #0x2d                  	// #45
    12f0:	ldr	x0, [sp, #264]
    12f4:	add	x2, x0, #0x1
    12f8:	str	x2, [sp, #264]
    12fc:	strb	w1, [x0]
    1300:	ldr	x0, [sp, #256]
    1304:	add	x0, x0, #0x4
    1308:	str	x0, [sp, #256]
    130c:	cmp	x0, x24
    1310:	b.eq	2258 <gconv@@Base+0x18f0>  // b.none
    1314:	ldr	w1, [x20]
    1318:	sub	x0, x0, x24
    131c:	and	x2, x1, #0x7
    1320:	cmp	x0, x2
    1324:	b.le	2b3c <gconv@@Base+0x21d4>
    1328:	ldr	x3, [sp, #104]
    132c:	sub	x0, x0, x2
    1330:	ldr	w2, [x21, #16]
    1334:	and	w1, w1, #0xfffffff8
    1338:	str	w2, [sp, #120]
    133c:	ldr	x12, [x3]
    1340:	ldr	x22, [sp, #264]
    1344:	add	x25, x12, x0
    1348:	str	x25, [x3]
    134c:	str	w1, [x20]
    1350:	b	a34 <gconv@@Base+0xcc>
    1354:	ldr	x0, [sp, #192]
    1358:	cbz	x0, 2274 <gconv@@Base+0x190c>
    135c:	ldr	w0, [x28, #16]
    1360:	tbz	w0, #3, 11e0 <gconv@@Base+0x878>
    1364:	ldr	x0, [sp, #104]
    1368:	mov	x4, x22
    136c:	ldp	x6, x5, [sp, #192]
    1370:	mov	x1, x28
    1374:	ldr	x2, [x0]
    1378:	ldr	x0, [sp, #128]
    137c:	ldr	x3, [sp, #208]
    1380:	bl	730 <__gconv_transliterate@plt>
    1384:	mov	w27, w0
    1388:	cmp	w0, #0x6
    138c:	b.eq	166c <gconv@@Base+0xd04>  // b.none
    1390:	cmp	w0, #0x5
    1394:	ldp	x0, x20, [sp, #272]
    1398:	b.ne	b1c <gconv@@Base+0x1b4>  // b.any
    139c:	b	b28 <gconv@@Base+0x1c0>
    13a0:	add	x0, x20, #0x1
    13a4:	str	x0, [sp, #280]
    13a8:	mov	w0, #0x2b                  	// #43
    13ac:	strb	w0, [x20]
    13b0:	lsr	w0, w23, #10
    13b4:	ldr	x20, [sp, #280]
    13b8:	add	x1, x20, #0x1
    13bc:	str	x1, [sp, #280]
    13c0:	b	f80 <gconv@@Base+0x618>
    13c4:	add	w0, w4, #0x4
    13c8:	b	fd8 <gconv@@Base+0x670>
    13cc:	lsl	w0, w0, #16
    13d0:	add	w4, w1, #0xa
    13d4:	str	w6, [x20]
    13d8:	mov	x20, x5
    13dc:	b	1008 <gconv@@Base+0x6a0>
    13e0:	asr	w0, w2, #3
    13e4:	str	w1, [sp, #216]
    13e8:	and	w0, w0, #0xfffffffc
    13ec:	str	x3, [sp, #280]
    13f0:	bl	878 <__assert_fail@plt+0xe8>
    13f4:	strb	w0, [x20]
    13f8:	ldr	w1, [sp, #216]
    13fc:	ldr	x20, [sp, #280]
    1400:	add	x3, x20, #0x1
    1404:	cbz	w1, ca8 <gconv@@Base+0x340>
    1408:	b	c94 <gconv@@Base+0x32c>
    140c:	ldr	x0, [sp, #104]
    1410:	mov	x4, x22
    1414:	ldp	x6, x5, [sp, #192]
    1418:	mov	x1, x28
    141c:	ldr	x2, [x0]
    1420:	ldr	x0, [sp, #128]
    1424:	ldr	x3, [sp, #208]
    1428:	bl	730 <__gconv_transliterate@plt>
    142c:	mov	w27, w0
    1430:	cmp	w0, #0x6
    1434:	b.eq	166c <gconv@@Base+0xd04>  // b.none
    1438:	cmp	w0, #0x5
    143c:	ldp	x0, x20, [sp, #272]
    1440:	b.ne	b1c <gconv@@Base+0x1b4>  // b.any
    1444:	b	b28 <gconv@@Base+0x1c0>
    1448:	ldr	x0, [sp, #104]
    144c:	str	x25, [x0]
    1450:	ldr	x0, [sp, #160]
    1454:	str	x0, [x21]
    1458:	ldr	x0, [sp, #128]
    145c:	ldr	x0, [x0, #96]
    1460:	cbz	x0, 1798 <gconv@@Base+0xe30>
    1464:	ldr	w0, [x28, #16]
    1468:	cmp	x22, x25
    146c:	str	w0, [sp, #160]
    1470:	stp	x25, x26, [sp, #288]
    1474:	b.eq	2848 <gconv@@Base+0x1ee0>  // b.none
    1478:	add	x0, sp, #0x128
    147c:	adrp	x18, 2000 <gconv@@Base+0x1698>
    1480:	mov	x8, x26
    1484:	add	x23, x18, #0xe18
    1488:	str	x0, [sp, #216]
    148c:	add	x0, sp, #0x120
    1490:	str	x0, [sp, #224]
    1494:	mov	w0, #0x4                   	// #4
    1498:	str	w0, [sp, #120]
    149c:	add	x0, x25, #0x4
    14a0:	cmp	x22, x0
    14a4:	b.cc	21e4 <gconv@@Base+0x187c>  // b.lo, b.ul, b.last
    14a8:	cmp	x27, x8
    14ac:	b.ls	1920 <gconv@@Base+0xfb8>  // b.plast
    14b0:	ldr	w0, [x21]
    14b4:	ldr	w20, [x25]
    14b8:	ands	w1, w0, #0x18
    14bc:	b.ne	1818 <gconv@@Base+0xeb0>  // b.any
    14c0:	cmp	w20, #0x7f
    14c4:	b.hi	1b7c <gconv@@Base+0x1214>  // b.pmore
    14c8:	lsr	w0, w20, #3
    14cc:	and	w2, w20, #0x7
    14d0:	add	x0, x23, x0
    14d4:	ldrb	w1, [x0, #16]
    14d8:	asr	w0, w1, w2
    14dc:	tbnz	w0, #0, 1dcc <gconv@@Base+0x1464>
    14e0:	cmp	w20, #0x2b
    14e4:	b.ne	1b88 <gconv@@Base+0x1220>  // b.any
    14e8:	add	x0, x8, #0x2
    14ec:	cmp	x27, x0
    14f0:	b.cc	1920 <gconv@@Base+0xfb8>  // b.lo, b.ul, b.last
    14f4:	add	x0, x8, #0x1
    14f8:	str	x0, [sp, #296]
    14fc:	strb	w20, [x8]
    1500:	mov	w1, #0x2d                  	// #45
    1504:	ldr	x0, [sp, #296]
    1508:	add	x2, x0, #0x1
    150c:	str	x2, [sp, #296]
    1510:	strb	w1, [x0]
    1514:	nop
    1518:	ldp	x25, x8, [sp, #288]
    151c:	add	x25, x25, #0x4
    1520:	str	x25, [sp, #288]
    1524:	cmp	x22, x25
    1528:	b.ne	149c <gconv@@Base+0xb34>  // b.any
    152c:	ldr	x0, [sp, #104]
    1530:	ldrsw	x23, [sp, #120]
    1534:	ldr	x27, [sp, #248]
    1538:	str	x22, [x0]
    153c:	cmp	x27, x8
    1540:	b.ne	1e18 <gconv@@Base+0x14b0>  // b.any
    1544:	cmp	x23, #0x5
    1548:	b.eq	1938 <gconv@@Base+0xfd0>  // b.none
    154c:	adrp	x3, 2000 <gconv@@Base+0x1698>
    1550:	adrp	x1, 2000 <gconv@@Base+0x1698>
    1554:	adrp	x0, 2000 <gconv@@Base+0x1698>
    1558:	add	x3, x3, #0xe10
    155c:	add	x1, x1, #0xc28
    1560:	add	x0, x0, #0xd98
    1564:	mov	w2, #0x2eb                 	// #747
    1568:	bl	790 <__assert_fail@plt>
    156c:	ldr	x2, [sp, #144]
    1570:	mov	x21, x28
    1574:	ldr	x1, [sp, #240]
    1578:	mov	x19, x22
    157c:	ldr	x0, [x2]
    1580:	str	x20, [x28]
    1584:	add	x0, x0, x1
    1588:	str	x0, [x2]
    158c:	ldr	w0, [sp, #140]
    1590:	cmp	w0, #0x0
    1594:	ccmp	w27, #0x7, #0x0, ne  // ne = any
    1598:	b.eq	2064 <gconv@@Base+0x16fc>  // b.none
    159c:	ldp	x25, x26, [sp, #64]
    15a0:	b	1048 <gconv@@Base+0x6e0>
    15a4:	mov	w24, w27
    15a8:	b	b9c <gconv@@Base+0x234>
    15ac:	and	w2, w2, #0xfffffffc
    15b0:	add	x1, x20, #0x1
    15b4:	mov	w0, #0xd                   	// #13
    15b8:	orr	w0, w2, w0
    15bc:	str	x1, [sp, #280]
    15c0:	bl	878 <__assert_fail@plt+0xe8>
    15c4:	strb	w0, [x20]
    15c8:	ubfx	x0, x23, #22, #6
    15cc:	ldr	x20, [sp, #280]
    15d0:	add	x1, x20, #0x1
    15d4:	str	x1, [sp, #280]
    15d8:	bl	878 <__assert_fail@plt+0xe8>
    15dc:	strb	w0, [x20]
    15e0:	ubfx	x0, x23, #16, #6
    15e4:	ldr	x20, [sp, #280]
    15e8:	add	x1, x20, #0x1
    15ec:	str	x1, [sp, #280]
    15f0:	bl	878 <__assert_fail@plt+0xe8>
    15f4:	strb	w0, [x20]
    15f8:	mov	w2, #0x33                  	// #51
    15fc:	ubfx	x0, x23, #4, #6
    1600:	ldr	x1, [sp, #280]
    1604:	add	x3, x1, #0x1
    1608:	str	x3, [sp, #280]
    160c:	strb	w2, [x1]
    1610:	b	f8c <gconv@@Base+0x624>
    1614:	and	w2, w2, #0xfffffffc
    1618:	add	x1, x20, #0x1
    161c:	orr	w0, w2, w23, lsr #12
    1620:	b	d6c <gconv@@Base+0x404>
    1624:	ldr	x2, [sp, #192]
    1628:	add	x0, x0, #0x4
    162c:	mov	w27, #0x6                   	// #6
    1630:	str	x0, [sp, #272]
    1634:	ldr	x1, [x2]
    1638:	add	x1, x1, #0x1
    163c:	str	x1, [x2]
    1640:	b	b1c <gconv@@Base+0x1b4>
    1644:	mov	w27, #0x7                   	// #7
    1648:	b	1030 <gconv@@Base+0x6c8>
    164c:	ldr	x0, [x1]
    1650:	add	x2, x2, #0x1
    1654:	mov	w27, #0x6                   	// #6
    1658:	add	x0, x0, #0x1
    165c:	str	x0, [x1]
    1660:	b	1018 <gconv@@Base+0x6b0>
    1664:	mov	w0, #0x3f                  	// #63
    1668:	b	fd8 <gconv@@Base+0x670>
    166c:	ldr	x20, [sp, #280]
    1670:	b	11e0 <gconv@@Base+0x878>
    1674:	cmp	w2, #0x4
    1678:	b.hi	2bf8 <gconv@@Base+0x2290>  // b.pmore
    167c:	mov	w14, w2
    1680:	mov	x1, x14
    1684:	cbz	w2, 2544 <gconv@@Base+0x1bdc>
    1688:	add	x4, x20, #0x3
    168c:	add	x24, sp, #0x130
    1690:	mov	x2, #0x1                   	// #1
    1694:	nop
    1698:	add	x5, x24, x2
    169c:	ldrb	w8, [x4, x2]
    16a0:	cmp	x14, x2
    16a4:	add	x2, x2, #0x1
    16a8:	sturb	w8, [x5, #-1]
    16ac:	b.ne	1698 <gconv@@Base+0xd30>  // b.any
    16b0:	add	x7, x22, #0x4
    16b4:	mov	x2, x25
    16b8:	add	x24, sp, #0x130
    16bc:	cmp	x26, x7
    16c0:	b.cc	1dc0 <gconv@@Base+0x1458>  // b.lo, b.ul, b.last
    16c4:	nop
    16c8:	add	x1, x1, #0x1
    16cc:	ldrb	w5, [x2], #1
    16d0:	add	x4, x24, x1
    16d4:	cmp	x1, #0x5
    16d8:	ccmp	x19, x2, #0x0, ls  // ls = plast
    16dc:	sturb	w5, [x4, #-1]
    16e0:	b.hi	16c8 <gconv@@Base+0xd60>  // b.pmore
    16e4:	cmp	wzr, w3, asr #3
    16e8:	ldrb	w5, [sp, #304]
    16ec:	asr	w3, w3, #3
    16f0:	b.eq	2044 <gconv@@Base+0x16dc>  // b.none
    16f4:	sub	w1, w5, #0x41
    16f8:	ldr	w2, [x20, #4]
    16fc:	and	w4, w1, #0xff
    1700:	cmp	w4, #0x19
    1704:	b.hi	2508 <gconv@@Base+0x1ba0>  // b.pmore
    1708:	mov	w0, w1
    170c:	cmp	w3, #0x6
    1710:	b.le	25f8 <gconv@@Base+0x1c90>
    1714:	sub	w4, w3, #0x6
    1718:	sub	w1, w3, #0x11
    171c:	cmp	w1, #0x5
    1720:	lsl	w0, w0, w4
    1724:	orr	w0, w0, w2
    1728:	b.hi	2764 <gconv@@Base+0x1dfc>  // b.pmore
    172c:	lsr	w1, w0, #16
    1730:	mov	w10, #0xffff2800            	// #-55296
    1734:	add	w2, w1, w10
    1738:	cmp	w2, #0x3ff
    173c:	b.ls	1750 <gconv@@Base+0xde8>  // b.plast
    1740:	lsl	w0, w0, #16
    1744:	add	w4, w3, #0xa
    1748:	str	w1, [x22]
    174c:	mov	x22, x7
    1750:	str	w0, [x20, #4]
    1754:	lsl	w6, w4, #3
    1758:	mov	x0, #0x1                   	// #1
    175c:	str	w6, [x20]
    1760:	and	x1, x6, #0x7
    1764:	cmp	x1, x0
    1768:	b.ge	2a6c <gconv@@Base+0x2104>  // b.tcont
    176c:	ldr	w23, [x21, #16]
    1770:	sub	x0, x0, x1
    1774:	and	w6, w6, #0xfffffff8
    1778:	add	x25, x25, x0
    177c:	str	w23, [sp, #120]
    1780:	ldr	x0, [sp, #104]
    1784:	str	x25, [x0]
    1788:	ldr	x0, [sp, #128]
    178c:	ldr	x0, [x0, #96]
    1790:	str	w6, [x20]
    1794:	b	a3c <gconv@@Base+0xd4>
    1798:	ldr	w0, [x28, #16]
    179c:	cmp	x22, x25
    17a0:	b.eq	2848 <gconv@@Base+0x1ee0>  // b.none
    17a4:	add	x3, x26, #0x4
    17a8:	mov	x8, x26
    17ac:	cmp	x27, x3
    17b0:	mov	w7, #0x4                   	// #4
    17b4:	b.cc	2748 <gconv@@Base+0x1de0>  // b.lo, b.ul, b.last
    17b8:	adrp	x5, 2000 <gconv@@Base+0x1698>
    17bc:	and	w9, w0, #0x2
    17c0:	add	x5, x5, #0xe18
    17c4:	mov	w18, #0x6                   	// #6
    17c8:	mov	w6, #0xffff2800            	// #-55296
    17cc:	mov	w16, #0xffff2400            	// #-56320
    17d0:	mov	w20, #0x2400                	// #9216
    17d4:	mov	x23, #0x100                 	// #256
    17d8:	ldr	w0, [x21]
    17dc:	ldrb	w1, [x25]
    17e0:	cmp	wzr, w0, asr #3
    17e4:	asr	w2, w0, #3
    17e8:	b.ne	1950 <gconv@@Base+0xfe8>  // b.any
    17ec:	cmp	w1, #0x7f
    17f0:	b.ls	1be4 <gconv@@Base+0x127c>  // b.plast
    17f4:	ldr	x1, [sp, #192]
    17f8:	cbz	x1, 26d8 <gconv@@Base+0x1d70>
    17fc:	cbz	w9, 26d8 <gconv@@Base+0x1d70>
    1800:	ldr	x0, [x1]
    1804:	add	x25, x25, #0x1
    1808:	mov	w7, #0x6                   	// #6
    180c:	add	x0, x0, #0x1
    1810:	str	x0, [x1]
    1814:	b	1c20 <gconv@@Base+0x12b8>
    1818:	cmp	w20, #0x7f
    181c:	b.hi	1a78 <gconv@@Base+0x1110>  // b.pmore
    1820:	lsr	w2, w20, #3
    1824:	and	w4, w20, #0x7
    1828:	add	x2, x23, x2
    182c:	ldrb	w3, [x2, #16]
    1830:	asr	w3, w3, w4
    1834:	tbz	w3, #0, 1890 <gconv@@Base+0xf28>
    1838:	ldrb	w25, [x2, #32]
    183c:	cmp	w1, #0xf
    1840:	asr	w25, w25, w4
    1844:	and	w25, w25, #0x1
    1848:	cinc	w2, w25, gt
    184c:	add	w2, w2, #0x1
    1850:	add	x2, x8, w2, sxtw
    1854:	cmp	x27, x2
    1858:	b.cc	1920 <gconv@@Base+0xfb8>  // b.lo, b.ul, b.last
    185c:	cmp	w1, #0xf
    1860:	add	x1, x8, #0x1
    1864:	b.gt	20c4 <gconv@@Base+0x175c>
    1868:	cbz	w25, 1880 <gconv@@Base+0xf18>
    186c:	str	x1, [sp, #296]
    1870:	mov	w0, #0x2d                  	// #45
    1874:	strb	w0, [x8]
    1878:	ldr	x8, [sp, #296]
    187c:	add	x1, x8, #0x1
    1880:	str	x1, [sp, #296]
    1884:	strb	w20, [x8]
    1888:	str	wzr, [x21]
    188c:	b	1518 <gconv@@Base+0xbb0>
    1890:	cmp	w1, #0xf
    1894:	cset	x1, gt
    1898:	add	x1, x1, #0x2
    189c:	add	x1, x8, x1
    18a0:	cmp	x27, x1
    18a4:	b.cc	1920 <gconv@@Base+0xfb8>  // b.lo, b.ul, b.last
    18a8:	ubfx	x1, x0, #3, #2
    18ac:	asr	w0, w0, #3
    18b0:	cmp	w1, #0x2
    18b4:	b.eq	240c <gconv@@Base+0x1aa4>  // b.none
    18b8:	cmp	w1, #0x3
    18bc:	b.ne	2200 <gconv@@Base+0x1898>  // b.any
    18c0:	add	x1, x8, #0x1
    18c4:	and	w0, w0, #0xfffffffc
    18c8:	orr	w0, w0, w20, lsr #14
    18cc:	str	x8, [sp, #232]
    18d0:	str	x1, [sp, #296]
    18d4:	bl	878 <__assert_fail@plt+0xe8>
    18d8:	ldr	x8, [sp, #232]
    18dc:	strb	w0, [x8]
    18e0:	ldr	x25, [sp, #296]
    18e4:	ubfx	x0, x20, #8, #6
    18e8:	add	x1, x25, #0x1
    18ec:	str	x1, [sp, #296]
    18f0:	bl	878 <__assert_fail@plt+0xe8>
    18f4:	strb	w0, [x25]
    18f8:	ubfx	x0, x20, #2, #6
    18fc:	ubfiz	w20, w20, #7, #2
    1900:	ldr	x25, [sp, #296]
    1904:	orr	w20, w20, #0x10
    1908:	add	x1, x25, #0x1
    190c:	str	x1, [sp, #296]
    1910:	bl	878 <__assert_fail@plt+0xe8>
    1914:	strb	w0, [x25]
    1918:	str	w20, [x21]
    191c:	b	1518 <gconv@@Base+0xbb0>
    1920:	ldr	x2, [sp, #104]
    1924:	ldr	x0, [sp, #248]
    1928:	ldr	x1, [sp, #288]
    192c:	str	x1, [x2]
    1930:	cmp	x8, x0
    1934:	b.ne	1e18 <gconv@@Base+0x14b0>  // b.any
    1938:	cmp	x8, x26
    193c:	b.ne	b9c <gconv@@Base+0x234>  // b.any
    1940:	ldr	w0, [x28, #20]
    1944:	sub	w0, w0, #0x1
    1948:	str	w0, [x28, #20]
    194c:	b	b9c <gconv@@Base+0x234>
    1950:	sub	w0, w1, #0x41
    1954:	ldr	w4, [x21, #4]
    1958:	and	w10, w0, #0xff
    195c:	cmp	w10, #0x19
    1960:	b.ls	1988 <gconv@@Base+0x1020>  // b.plast
    1964:	sub	w0, w1, #0x61
    1968:	and	w0, w0, #0xff
    196c:	cmp	w0, #0x19
    1970:	b.ls	1e48 <gconv@@Base+0x14e0>  // b.plast
    1974:	sub	w0, w1, #0x30
    1978:	and	w0, w0, #0xff
    197c:	cmp	w0, #0x9
    1980:	b.hi	2368 <gconv@@Base+0x1a00>  // b.pmore
    1984:	add	w0, w1, #0x4
    1988:	cmp	w2, #0x6
    198c:	b.le	1c44 <gconv@@Base+0x12dc>
    1990:	sub	w1, w2, #0x6
    1994:	sub	w10, w2, #0x11
    1998:	cmp	w10, #0x5
    199c:	lsl	w0, w0, w1
    19a0:	orr	w0, w0, w4
    19a4:	b.hi	1e50 <gconv@@Base+0x14e8>  // b.pmore
    19a8:	lsr	w4, w0, #16
    19ac:	add	w10, w4, w6
    19b0:	cmp	w10, #0x3ff
    19b4:	b.ls	19c8 <gconv@@Base+0x1060>  // b.plast
    19b8:	lsl	w0, w0, #16
    19bc:	add	w1, w2, #0xa
    19c0:	str	w4, [x8]
    19c4:	mov	x8, x3
    19c8:	str	w0, [x21, #4]
    19cc:	b	1c8c <gconv@@Base+0x1324>
    19d0:	mov	w0, #0x3e                  	// #62
    19d4:	b	fd8 <gconv@@Base+0x670>
    19d8:	mov	x2, x25
    19dc:	mov	x20, x26
    19e0:	mov	w27, #0x5                   	// #5
    19e4:	b	1030 <gconv@@Base+0x6c8>
    19e8:	ldr	x0, [sp, #112]
    19ec:	cbnz	x0, 2bb4 <gconv@@Base+0x224c>
    19f0:	cmp	w6, #0x1
    19f4:	ldr	x19, [x21, #32]
    19f8:	b.ne	2150 <gconv@@Base+0x17e8>  // b.any
    19fc:	ldr	x0, [sp, #128]
    1a00:	stp	x25, x26, [sp, #64]
    1a04:	ldp	x20, x1, [x21]
    1a08:	ldr	x0, [x0, #96]
    1a0c:	ldr	x25, [x19]
    1a10:	cbz	x0, 20ec <gconv@@Base+0x1784>
    1a14:	ldr	w0, [x19]
    1a18:	ands	w2, w0, #0x18
    1a1c:	b.eq	22d8 <gconv@@Base+0x1970>  // b.none
    1a20:	cmp	w2, #0xf
    1a24:	b.le	2654 <gconv@@Base+0x1cec>
    1a28:	add	x23, x20, #0x2
    1a2c:	mov	w27, #0x5                   	// #5
    1a30:	cmp	x1, x23
    1a34:	b.cc	159c <gconv@@Base+0xc34>  // b.lo, b.ul, b.last
    1a38:	mov	x24, x20
    1a3c:	asr	w0, w0, #3
    1a40:	and	w0, w0, #0xfffffffc
    1a44:	bl	878 <__assert_fail@plt+0xe8>
    1a48:	strb	w0, [x24], #1
    1a4c:	mov	w0, #0x2d                  	// #45
    1a50:	strb	w0, [x24]
    1a54:	ldr	x1, [x21, #32]
    1a58:	ldr	w0, [x21, #16]
    1a5c:	str	wzr, [x1]
    1a60:	tbz	w0, #0, 2670 <gconv@@Base+0x1d08>
    1a64:	mov	x20, x23
    1a68:	mov	w27, #0x0                   	// #0
    1a6c:	ldp	x25, x26, [sp, #64]
    1a70:	str	x20, [x21]
    1a74:	b	1048 <gconv@@Base+0x6e0>
    1a78:	mov	w2, #0xffff                	// #65535
    1a7c:	cmp	w20, w2
    1a80:	b.ls	1890 <gconv@@Base+0xf28>  // b.plast
    1a84:	mov	w2, #0x10ffff              	// #1114111
    1a88:	cmp	w20, w2
    1a8c:	b.hi	1e90 <gconv@@Base+0x1528>  // b.pmore
    1a90:	cmp	w1, #0x18
    1a94:	cset	x1, eq  // eq = none
    1a98:	add	x1, x1, #0x5
    1a9c:	add	x1, x8, x1
    1aa0:	cmp	x27, x1
    1aa4:	b.cc	1920 <gconv@@Base+0xfb8>  // b.lo, b.ul, b.last
    1aa8:	sub	w3, w20, #0x10, lsl #12
    1aac:	mov	w4, #0xd800                	// #55296
    1ab0:	and	w2, w20, #0x3ff
    1ab4:	ubfx	x1, x0, #3, #2
    1ab8:	add	w20, w4, w3, lsr #10
    1abc:	mov	w5, #0xdc00                	// #56320
    1ac0:	add	w2, w2, w5
    1ac4:	cmp	w1, #0x2
    1ac8:	asr	w0, w0, #3
    1acc:	orr	w20, w2, w20, lsl #16
    1ad0:	b.eq	2430 <gconv@@Base+0x1ac8>  // b.none
    1ad4:	cmp	w1, #0x3
    1ad8:	b.ne	2198 <gconv@@Base+0x1830>  // b.any
    1adc:	add	x1, x8, #0x1
    1ae0:	orr	w0, w0, #0x3
    1ae4:	str	x8, [sp, #232]
    1ae8:	str	x1, [sp, #296]
    1aec:	bl	878 <__assert_fail@plt+0xe8>
    1af0:	ldr	x8, [sp, #232]
    1af4:	strb	w0, [x8]
    1af8:	ubfx	x0, x20, #24, #6
    1afc:	ldr	x25, [sp, #296]
    1b00:	add	x1, x25, #0x1
    1b04:	str	x1, [sp, #296]
    1b08:	bl	878 <__assert_fail@plt+0xe8>
    1b0c:	strb	w0, [x25]
    1b10:	ubfx	x0, x20, #18, #6
    1b14:	ldr	x25, [sp, #296]
    1b18:	add	x1, x25, #0x1
    1b1c:	str	x1, [sp, #296]
    1b20:	bl	878 <__assert_fail@plt+0xe8>
    1b24:	strb	w0, [x25]
    1b28:	ubfx	x0, x20, #12, #6
    1b2c:	ldr	x25, [sp, #296]
    1b30:	add	x1, x25, #0x1
    1b34:	str	x1, [sp, #296]
    1b38:	bl	878 <__assert_fail@plt+0xe8>
    1b3c:	strb	w0, [x25]
    1b40:	ldr	x25, [sp, #296]
    1b44:	ubfx	x0, x20, #6, #6
    1b48:	add	x1, x25, #0x1
    1b4c:	str	x1, [sp, #296]
    1b50:	bl	878 <__assert_fail@plt+0xe8>
    1b54:	strb	w0, [x25]
    1b58:	and	w0, w20, #0x3f
    1b5c:	ldr	x20, [sp, #296]
    1b60:	add	x1, x20, #0x1
    1b64:	str	x1, [sp, #296]
    1b68:	bl	878 <__assert_fail@plt+0xe8>
    1b6c:	strb	w0, [x20]
    1b70:	mov	w0, #0x8                   	// #8
    1b74:	str	w0, [x21]
    1b78:	b	1518 <gconv@@Base+0xbb0>
    1b7c:	mov	w0, #0xffff                	// #65535
    1b80:	cmp	w20, w0
    1b84:	b.hi	1ddc <gconv@@Base+0x1474>  // b.pmore
    1b88:	add	x0, x8, #0x3
    1b8c:	cmp	x27, x0
    1b90:	b.cc	1920 <gconv@@Base+0xfb8>  // b.lo, b.ul, b.last
    1b94:	add	x0, x8, #0x1
    1b98:	str	x0, [sp, #296]
    1b9c:	mov	w0, #0x2b                  	// #43
    1ba0:	strb	w0, [x8]
    1ba4:	lsr	w0, w20, #10
    1ba8:	ldr	x25, [sp, #296]
    1bac:	add	x1, x25, #0x1
    1bb0:	str	x1, [sp, #296]
    1bb4:	bl	878 <__assert_fail@plt+0xe8>
    1bb8:	strb	w0, [x25]
    1bbc:	ubfx	x0, x20, #4, #6
    1bc0:	ldr	x25, [sp, #296]
    1bc4:	ubfiz	w20, w20, #5, #4
    1bc8:	orr	w20, w20, #0x18
    1bcc:	add	x1, x25, #0x1
    1bd0:	str	x1, [sp, #296]
    1bd4:	bl	878 <__assert_fail@plt+0xe8>
    1bd8:	strb	w0, [x25]
    1bdc:	str	w20, [x21]
    1be0:	b	1518 <gconv@@Base+0xbb0>
    1be4:	lsr	w2, w1, #3
    1be8:	and	w0, w1, #0x7
    1bec:	ldrb	w2, [x5, w2, uxtw]
    1bf0:	asr	w0, w2, w0
    1bf4:	tbnz	w0, #0, 1e38 <gconv@@Base+0x14d0>
    1bf8:	cmp	w1, #0x2b
    1bfc:	b.ne	17f4 <gconv@@Base+0xe8c>  // b.any
    1c00:	add	x0, x25, #0x2
    1c04:	cmp	x22, x0
    1c08:	b.cc	2668 <gconv@@Base+0x1d00>  // b.lo, b.ul, b.last
    1c0c:	ldrb	w2, [x25, #1]
    1c10:	cmp	w2, #0x2d
    1c14:	b.eq	2228 <gconv@@Base+0x18c0>  // b.none
    1c18:	add	x25, x25, #0x1
    1c1c:	str	x23, [x21]
    1c20:	cmp	x22, x25
    1c24:	b.eq	275c <gconv@@Base+0x1df4>  // b.none
    1c28:	add	x3, x8, #0x4
    1c2c:	cmp	x27, x3
    1c30:	b.cs	17d8 <gconv@@Base+0xe70>  // b.hs, b.nlast
    1c34:	mov	x23, #0x5                   	// #5
    1c38:	ldr	x0, [sp, #104]
    1c3c:	str	x25, [x0]
    1c40:	b	153c <gconv@@Base+0xbd4>
    1c44:	lsl	w1, w0, w2
    1c48:	sub	w11, w18, w2
    1c4c:	lsl	w1, w1, #26
    1c50:	str	w1, [x21, #4]
    1c54:	and	w10, w4, #0xffff
    1c58:	add	w4, w6, w4, lsr #16
    1c5c:	lsr	w0, w0, w11
    1c60:	cmp	w4, #0x3ff
    1c64:	orr	w0, w0, w10
    1c68:	add	w1, w2, #0x1a
    1c6c:	b.hi	2a20 <gconv@@Base+0x20b8>  // b.pmore
    1c70:	add	w2, w0, w16
    1c74:	cmp	w2, #0x3ff
    1c78:	b.hi	2a00 <gconv@@Base+0x2098>  // b.pmore
    1c7c:	add	w4, w20, w4, lsl #10
    1c80:	add	w0, w4, w0
    1c84:	str	w0, [x8]
    1c88:	mov	x8, x3
    1c8c:	lsl	w1, w1, #3
    1c90:	add	x25, x25, #0x1
    1c94:	str	w1, [x21]
    1c98:	b	1c20 <gconv@@Base+0x12b8>
    1c9c:	mov	x21, x28
    1ca0:	mov	x19, x22
    1ca4:	mov	w27, w24
    1ca8:	b	158c <gconv@@Base+0xc24>
    1cac:	mov	x20, x26
    1cb0:	mov	x0, x22
    1cb4:	mov	w27, #0x4                   	// #4
    1cb8:	b	b28 <gconv@@Base+0x1c0>
    1cbc:	cmp	w27, #0x7f
    1cc0:	b.ls	1ef4 <gconv@@Base+0x158c>  // b.plast
    1cc4:	mov	w0, #0xffff                	// #65535
    1cc8:	cmp	w27, w0
    1ccc:	b.ls	22e0 <gconv@@Base+0x1978>  // b.plast
    1cd0:	mov	w0, #0x10ffff              	// #1114111
    1cd4:	cmp	w27, w0
    1cd8:	b.hi	2394 <gconv@@Base+0x1a2c>  // b.pmore
    1cdc:	cmp	w2, #0x18
    1ce0:	cset	x0, eq  // eq = none
    1ce4:	add	x0, x0, #0x5
    1ce8:	add	x0, x22, x0
    1cec:	cmp	x26, x0
    1cf0:	b.cc	1dc0 <gconv@@Base+0x1458>  // b.lo, b.ul, b.last
    1cf4:	sub	w23, w27, #0x10, lsl #12
    1cf8:	mov	w0, #0xd800                	// #55296
    1cfc:	and	w2, w27, #0x3ff
    1d00:	ubfx	x1, x3, #3, #2
    1d04:	add	w23, w0, w23, lsr #10
    1d08:	mov	w7, #0xdc00                	// #56320
    1d0c:	add	w2, w2, w7
    1d10:	cmp	w1, #0x2
    1d14:	asr	w0, w3, #3
    1d18:	orr	w23, w2, w23, lsl #16
    1d1c:	b.eq	27b8 <gconv@@Base+0x1e50>  // b.none
    1d20:	cmp	w1, #0x3
    1d24:	b.ne	24e4 <gconv@@Base+0x1b7c>  // b.any
    1d28:	add	x1, x22, #0x1
    1d2c:	orr	w0, w0, #0x3
    1d30:	str	x1, [sp, #264]
    1d34:	bl	878 <__assert_fail@plt+0xe8>
    1d38:	strb	w0, [x22]
    1d3c:	ubfx	x0, x23, #24, #6
    1d40:	ldr	x25, [sp, #264]
    1d44:	add	x1, x25, #0x1
    1d48:	str	x1, [sp, #264]
    1d4c:	bl	878 <__assert_fail@plt+0xe8>
    1d50:	strb	w0, [x25]
    1d54:	ubfx	x0, x23, #18, #6
    1d58:	ldr	x25, [sp, #264]
    1d5c:	add	x1, x25, #0x1
    1d60:	str	x1, [sp, #264]
    1d64:	bl	878 <__assert_fail@plt+0xe8>
    1d68:	strb	w0, [x25]
    1d6c:	ubfx	x0, x23, #12, #6
    1d70:	ldr	x25, [sp, #264]
    1d74:	add	x1, x25, #0x1
    1d78:	str	x1, [sp, #264]
    1d7c:	bl	878 <__assert_fail@plt+0xe8>
    1d80:	strb	w0, [x25]
    1d84:	ubfx	x0, x23, #6, #6
    1d88:	ldr	x25, [sp, #264]
    1d8c:	add	x1, x25, #0x1
    1d90:	str	x1, [sp, #264]
    1d94:	bl	878 <__assert_fail@plt+0xe8>
    1d98:	strb	w0, [x25]
    1d9c:	and	w0, w23, #0x3f
    1da0:	ldr	x23, [sp, #264]
    1da4:	add	x1, x23, #0x1
    1da8:	str	x1, [sp, #264]
    1dac:	bl	878 <__assert_fail@plt+0xe8>
    1db0:	strb	w0, [x23]
    1db4:	mov	w0, #0x8                   	// #8
    1db8:	str	w0, [x20]
    1dbc:	b	1300 <gconv@@Base+0x998>
    1dc0:	mov	w27, #0x5                   	// #5
    1dc4:	ldp	x25, x26, [sp, #64]
    1dc8:	b	1048 <gconv@@Base+0x6e0>
    1dcc:	add	x0, x8, #0x1
    1dd0:	str	x0, [sp, #296]
    1dd4:	strb	w20, [x8]
    1dd8:	b	1518 <gconv@@Base+0xbb0>
    1ddc:	mov	w0, #0x10ffff              	// #1114111
    1de0:	cmp	w20, w0
    1de4:	b.ls	2280 <gconv@@Base+0x1918>  // b.plast
    1de8:	ldr	x0, [sp, #192]
    1dec:	cbz	x0, 21e4 <gconv@@Base+0x187c>
    1df0:	ldr	w0, [x28, #16]
    1df4:	tbnz	w0, #3, 26e8 <gconv@@Base+0x1d80>
    1df8:	ldr	x0, [sp, #160]
    1dfc:	ldr	x12, [sp, #288]
    1e00:	tbnz	w0, #1, 2520 <gconv@@Base+0x1bb8>
    1e04:	ldr	x1, [sp, #104]
    1e08:	ldr	x0, [sp, #248]
    1e0c:	str	x12, [x1]
    1e10:	cmp	x8, x0
    1e14:	b.eq	154c <gconv@@Base+0xbe4>  // b.none
    1e18:	adrp	x3, 2000 <gconv@@Base+0x1698>
    1e1c:	adrp	x1, 2000 <gconv@@Base+0x1698>
    1e20:	adrp	x0, 2000 <gconv@@Base+0x1698>
    1e24:	add	x3, x3, #0xe10
    1e28:	add	x1, x1, #0xc28
    1e2c:	add	x0, x0, #0xd80
    1e30:	mov	w2, #0x2ea                 	// #746
    1e34:	bl	790 <__assert_fail@plt>
    1e38:	add	x25, x25, #0x1
    1e3c:	str	w1, [x8]
    1e40:	mov	x8, x3
    1e44:	b	1c20 <gconv@@Base+0x12b8>
    1e48:	sub	w0, w1, #0x47
    1e4c:	b	1988 <gconv@@Base+0x1020>
    1e50:	sub	w2, w2, #0xb
    1e54:	cmp	w2, #0x5
    1e58:	b.hi	19c8 <gconv@@Base+0x1060>  // b.pmore
    1e5c:	add	w2, w16, w0, uxth
    1e60:	cmp	w2, #0x3ff
    1e64:	b.ls	19c8 <gconv@@Base+0x1060>  // b.plast
    1e68:	ldr	x1, [sp, #192]
    1e6c:	cbz	x1, 26d8 <gconv@@Base+0x1d70>
    1e70:	cbz	w9, 26d8 <gconv@@Base+0x1d70>
    1e74:	ldr	x0, [x1]
    1e78:	str	wzr, [x21]
    1e7c:	add	x25, x25, #0x1
    1e80:	mov	w7, #0x6                   	// #6
    1e84:	add	x0, x0, #0x1
    1e88:	str	x0, [x1]
    1e8c:	b	1c20 <gconv@@Base+0x12b8>
    1e90:	ldr	x0, [sp, #192]
    1e94:	cbz	x0, 21e4 <gconv@@Base+0x187c>
    1e98:	ldr	w0, [x28, #16]
    1e9c:	tbz	w0, #3, 1df8 <gconv@@Base+0x1490>
    1ea0:	ldr	x0, [sp, #104]
    1ea4:	mov	x4, x22
    1ea8:	ldp	x5, x3, [sp, #216]
    1eac:	mov	x1, x28
    1eb0:	ldr	x2, [x0]
    1eb4:	ldr	x0, [sp, #128]
    1eb8:	ldr	x6, [sp, #192]
    1ebc:	bl	730 <__gconv_transliterate@plt>
    1ec0:	str	w0, [sp, #120]
    1ec4:	cmp	w0, #0x6
    1ec8:	b.eq	2740 <gconv@@Base+0x1dd8>  // b.none
    1ecc:	ldr	w0, [sp, #120]
    1ed0:	ldp	x25, x8, [sp, #288]
    1ed4:	cmp	w0, #0x5
    1ed8:	b.ne	1524 <gconv@@Base+0xbbc>  // b.any
    1edc:	ldr	x1, [sp, #104]
    1ee0:	ldr	x0, [sp, #248]
    1ee4:	str	x25, [x1]
    1ee8:	cmp	x8, x0
    1eec:	b.eq	1938 <gconv@@Base+0xfd0>  // b.none
    1ef0:	b	1e18 <gconv@@Base+0x14b0>
    1ef4:	lsr	w1, w27, #3
    1ef8:	adrp	x0, 2000 <gconv@@Base+0x1698>
    1efc:	add	x0, x0, #0xe18
    1f00:	and	w4, w27, #0x7
    1f04:	add	x0, x0, x1
    1f08:	ldrb	w1, [x0, #16]
    1f0c:	asr	w1, w1, w4
    1f10:	tbz	w1, #0, 22e0 <gconv@@Base+0x1978>
    1f14:	ldrb	w23, [x0, #32]
    1f18:	cmp	w2, #0xf
    1f1c:	asr	w4, w23, w4
    1f20:	and	w23, w4, #0x1
    1f24:	cinc	w0, w23, gt
    1f28:	add	w0, w0, #0x1
    1f2c:	add	x0, x22, w0, sxtw
    1f30:	cmp	x26, x0
    1f34:	b.cc	1dc0 <gconv@@Base+0x1458>  // b.lo, b.ul, b.last
    1f38:	cmp	w2, #0xf
    1f3c:	add	x1, x22, #0x1
    1f40:	mov	x0, x22
    1f44:	b.gt	2130 <gconv@@Base+0x17c8>
    1f48:	cbz	w23, 1f60 <gconv@@Base+0x15f8>
    1f4c:	str	x1, [sp, #264]
    1f50:	mov	w1, #0x2d                  	// #45
    1f54:	strb	w1, [x0]
    1f58:	ldr	x0, [sp, #264]
    1f5c:	add	x1, x0, #0x1
    1f60:	str	x1, [sp, #264]
    1f64:	strb	w27, [x0]
    1f68:	str	wzr, [x20]
    1f6c:	b	1300 <gconv@@Base+0x998>
    1f70:	mov	w0, #0xffff                	// #65535
    1f74:	cmp	w27, w0
    1f78:	b.ls	25b0 <gconv@@Base+0x1c48>  // b.plast
    1f7c:	mov	w0, #0x10ffff              	// #1114111
    1f80:	cmp	w27, w0
    1f84:	b.hi	2394 <gconv@@Base+0x1a2c>  // b.pmore
    1f88:	add	x0, x22, #0x6
    1f8c:	cmp	x26, x0
    1f90:	b.cc	1dc0 <gconv@@Base+0x1458>  // b.lo, b.ul, b.last
    1f94:	add	x0, x22, #0x1
    1f98:	str	x0, [sp, #264]
    1f9c:	mov	w0, #0x2b                  	// #43
    1fa0:	strb	w0, [x22]
    1fa4:	mov	w1, #0xdc00                	// #56320
    1fa8:	and	w23, w27, #0x3ff
    1fac:	add	w23, w23, w1
    1fb0:	sub	w0, w27, #0x10, lsl #12
    1fb4:	ldr	x1, [sp, #264]
    1fb8:	mov	w2, #0x32                  	// #50
    1fbc:	add	x3, x1, #0x1
    1fc0:	str	x3, [sp, #264]
    1fc4:	strb	w2, [x1]
    1fc8:	mov	w1, #0xd800                	// #55296
    1fcc:	add	w0, w1, w0, lsr #10
    1fd0:	ldr	x25, [sp, #264]
    1fd4:	orr	w23, w23, w0, lsl #16
    1fd8:	ubfx	x0, x0, #4, #6
    1fdc:	add	x1, x25, #0x1
    1fe0:	str	x1, [sp, #264]
    1fe4:	bl	878 <__assert_fail@plt+0xe8>
    1fe8:	strb	w0, [x25]
    1fec:	ubfx	x0, x23, #14, #6
    1ff0:	ldr	x25, [sp, #264]
    1ff4:	add	x1, x25, #0x1
    1ff8:	str	x1, [sp, #264]
    1ffc:	bl	878 <__assert_fail@plt+0xe8>
    2000:	strb	w0, [x25]
    2004:	ubfx	x0, x23, #8, #6
    2008:	ldr	x25, [sp, #264]
    200c:	add	x1, x25, #0x1
    2010:	str	x1, [sp, #264]
    2014:	bl	878 <__assert_fail@plt+0xe8>
    2018:	strb	w0, [x25]
    201c:	ubfx	x0, x23, #2, #6
    2020:	ubfiz	w23, w23, #7, #2
    2024:	ldr	x25, [sp, #264]
    2028:	orr	w23, w23, #0x10
    202c:	add	x1, x25, #0x1
    2030:	str	x1, [sp, #264]
    2034:	bl	878 <__assert_fail@plt+0xe8>
    2038:	strb	w0, [x25]
    203c:	str	w23, [x20]
    2040:	b	1300 <gconv@@Base+0x998>
    2044:	cmp	w5, #0x7f
    2048:	b.ls	254c <gconv@@Base+0x1be4>  // b.plast
    204c:	ldr	x0, [sp, #192]
    2050:	cbz	x0, 2058 <gconv@@Base+0x16f0>
    2054:	tbnz	w23, #1, 2a5c <gconv@@Base+0x20f4>
    2058:	mov	w27, #0x6                   	// #6
    205c:	ldp	x25, x26, [sp, #64]
    2060:	b	1048 <gconv@@Base+0x6e0>
    2064:	ldr	x0, [sp, #104]
    2068:	ldr	x0, [x0]
    206c:	sub	x3, x19, x0
    2070:	cmp	x3, #0x3
    2074:	b.gt	2b94 <gconv@@Base+0x222c>
    2078:	ldr	x4, [x21, #32]
    207c:	cmp	x0, x19
    2080:	add	x0, x0, #0x1
    2084:	add	x1, x4, #0x4
    2088:	b.cs	2978 <gconv@@Base+0x2010>  // b.hs, b.nlast
    208c:	ldr	x5, [sp, #104]
    2090:	str	x0, [x5]
    2094:	cmp	x19, x0
    2098:	add	x0, x0, #0x1
    209c:	ldurb	w2, [x0, #-2]
    20a0:	strb	w2, [x1], #1
    20a4:	b.ne	2090 <gconv@@Base+0x1728>  // b.any
    20a8:	mov	w1, w3
    20ac:	ldr	w0, [x4]
    20b0:	ldp	x25, x26, [sp, #64]
    20b4:	and	w0, w0, #0xfffffff8
    20b8:	orr	w0, w0, w1
    20bc:	str	w0, [x4]
    20c0:	b	1048 <gconv@@Base+0x6e0>
    20c4:	asr	w0, w0, #3
    20c8:	str	x8, [sp, #232]
    20cc:	and	w0, w0, #0xfffffffc
    20d0:	str	x1, [sp, #296]
    20d4:	bl	878 <__assert_fail@plt+0xe8>
    20d8:	ldr	x8, [sp, #232]
    20dc:	strb	w0, [x8]
    20e0:	ldr	x8, [sp, #296]
    20e4:	add	x1, x8, #0x1
    20e8:	b	1868 <gconv@@Base+0xf00>
    20ec:	str	xzr, [x19]
    20f0:	ldr	w23, [x21, #16]
    20f4:	tbnz	w23, #0, 1a68 <gconv@@Base+0x1100>
    20f8:	ldr	x19, [sp, #152]
    20fc:	mov	x0, x19
    2100:	bl	780 <_dl_mcount_wrapper_check@plt>
    2104:	ldp	x0, x1, [sp, #168]
    2108:	mov	w6, #0x1                   	// #1
    210c:	ldr	w7, [sp, #140]
    2110:	mov	x4, #0x0                   	// #0
    2114:	ldr	x5, [sp, #144]
    2118:	mov	x3, #0x0                   	// #0
    211c:	mov	x2, #0x0                   	// #0
    2120:	blr	x19
    2124:	mov	w27, w0
    2128:	ldp	x25, x26, [sp, #64]
    212c:	b	1048 <gconv@@Base+0x6e0>
    2130:	asr	w0, w3, #3
    2134:	str	x1, [sp, #264]
    2138:	and	w0, w0, #0xfffffffc
    213c:	bl	878 <__assert_fail@plt+0xe8>
    2140:	strb	w0, [x22]
    2144:	ldr	x0, [sp, #264]
    2148:	add	x1, x0, #0x1
    214c:	b	1f48 <gconv@@Base+0x15e0>
    2150:	str	xzr, [x19]
    2154:	mov	w27, #0x0                   	// #0
    2158:	ldr	w0, [x21, #16]
    215c:	tbnz	w0, #0, 1048 <gconv@@Base+0x6e0>
    2160:	ldr	x19, [sp, #152]
    2164:	str	w6, [sp, #104]
    2168:	mov	x0, x19
    216c:	bl	780 <_dl_mcount_wrapper_check@plt>
    2170:	ldp	x0, x1, [sp, #168]
    2174:	mov	x4, #0x0                   	// #0
    2178:	ldr	w6, [sp, #104]
    217c:	mov	x3, #0x0                   	// #0
    2180:	ldr	w7, [sp, #140]
    2184:	mov	x2, #0x0                   	// #0
    2188:	ldr	x5, [sp, #144]
    218c:	blr	x19
    2190:	mov	w27, w0
    2194:	b	1048 <gconv@@Base+0x6e0>
    2198:	cmp	w1, #0x1
    219c:	b.ne	2c08 <gconv@@Base+0x22a0>  // b.any
    21a0:	add	x0, x8, #0x1
    21a4:	str	x0, [sp, #296]
    21a8:	mov	w0, #0x32                  	// #50
    21ac:	strb	w0, [x8]
    21b0:	ubfx	x0, x20, #20, #6
    21b4:	ldr	x25, [sp, #296]
    21b8:	add	x1, x25, #0x1
    21bc:	str	x1, [sp, #296]
    21c0:	bl	878 <__assert_fail@plt+0xe8>
    21c4:	strb	w0, [x25]
    21c8:	ubfx	x0, x20, #14, #6
    21cc:	ldr	x25, [sp, #296]
    21d0:	add	x1, x25, #0x1
    21d4:	str	x1, [sp, #296]
    21d8:	bl	878 <__assert_fail@plt+0xe8>
    21dc:	strb	w0, [x25]
    21e0:	b	18e0 <gconv@@Base+0xf78>
    21e4:	ldr	x2, [sp, #104]
    21e8:	ldr	x0, [sp, #248]
    21ec:	ldr	x1, [sp, #288]
    21f0:	str	x1, [x2]
    21f4:	cmp	x8, x0
    21f8:	b.eq	154c <gconv@@Base+0xbe4>  // b.none
    21fc:	b	1e18 <gconv@@Base+0x14b0>
    2200:	cmp	w1, #0x1
    2204:	b.ne	2c08 <gconv@@Base+0x22a0>  // b.any
    2208:	add	x0, x8, #0x1
    220c:	str	x8, [sp, #232]
    2210:	str	x0, [sp, #296]
    2214:	lsr	w0, w20, #10
    2218:	bl	878 <__assert_fail@plt+0xe8>
    221c:	ldr	x8, [sp, #232]
    2220:	strb	w0, [x8]
    2224:	b	1bbc <gconv@@Base+0x1254>
    2228:	mov	x25, x0
    222c:	str	w1, [x8]
    2230:	mov	x8, x3
    2234:	b	1c20 <gconv@@Base+0x12b8>
    2238:	mov	x0, #0x4                   	// #4
    223c:	mov	x7, #0x0                   	// #0
    2240:	b	1254 <gconv@@Base+0x8ec>
    2244:	mov	x2, x22
    2248:	mov	x20, x26
    224c:	mov	w27, #0x4                   	// #4
    2250:	b	1030 <gconv@@Base+0x6c8>
    2254:	cbnz	w27, 159c <gconv@@Base+0xc34>
    2258:	ldr	x0, [sp, #104]
    225c:	ldr	x25, [x0]
    2260:	ldr	w0, [x21, #16]
    2264:	str	w0, [sp, #120]
    2268:	ldr	x0, [sp, #128]
    226c:	ldr	x0, [x0, #96]
    2270:	b	a3c <gconv@@Base+0xd4>
    2274:	mov	w27, #0x6                   	// #6
    2278:	ldr	x0, [sp, #272]
    227c:	b	b28 <gconv@@Base+0x1c0>
    2280:	add	x0, x8, #0x6
    2284:	cmp	x27, x0
    2288:	b.cc	1920 <gconv@@Base+0xfb8>  // b.lo, b.ul, b.last
    228c:	add	x0, x8, #0x1
    2290:	str	x0, [sp, #296]
    2294:	mov	w0, #0x2b                  	// #43
    2298:	strb	w0, [x8]
    229c:	sub	w0, w20, #0x10, lsl #12
    22a0:	mov	w2, #0x32                  	// #50
    22a4:	ldr	x1, [sp, #296]
    22a8:	and	w20, w20, #0x3ff
    22ac:	mov	w4, #0xdc00                	// #56320
    22b0:	add	w20, w20, w4
    22b4:	add	x3, x1, #0x1
    22b8:	str	x3, [sp, #296]
    22bc:	strb	w2, [x1]
    22c0:	mov	w1, #0xd800                	// #55296
    22c4:	add	w0, w1, w0, lsr #10
    22c8:	ldr	x25, [sp, #296]
    22cc:	orr	w20, w20, w0, lsl #16
    22d0:	ubfx	x0, x0, #4, #6
    22d4:	b	21b8 <gconv@@Base+0x1850>
    22d8:	str	wzr, [x19]
    22dc:	b	20f4 <gconv@@Base+0x178c>
    22e0:	cmp	w2, #0xf
    22e4:	cset	x0, gt
    22e8:	add	x0, x0, #0x2
    22ec:	add	x0, x22, x0
    22f0:	cmp	x26, x0
    22f4:	b.cc	1dc0 <gconv@@Base+0x1458>  // b.lo, b.ul, b.last
    22f8:	ubfx	x0, x3, #3, #2
    22fc:	asr	w3, w3, #3
    2300:	cmp	w0, #0x2
    2304:	b.eq	285c <gconv@@Base+0x1ef4>  // b.none
    2308:	cmp	w0, #0x3
    230c:	b.ne	24a0 <gconv@@Base+0x1b38>  // b.any
    2310:	and	w3, w3, #0xfffffffc
    2314:	add	x1, x22, #0x1
    2318:	orr	w0, w3, w27, lsr #14
    231c:	str	x1, [sp, #264]
    2320:	bl	878 <__assert_fail@plt+0xe8>
    2324:	strb	w0, [x22]
    2328:	ubfx	x0, x27, #8, #6
    232c:	ldr	x23, [sp, #264]
    2330:	add	x1, x23, #0x1
    2334:	str	x1, [sp, #264]
    2338:	bl	878 <__assert_fail@plt+0xe8>
    233c:	strb	w0, [x23]
    2340:	ubfx	x0, x27, #2, #6
    2344:	ubfiz	w27, w27, #7, #2
    2348:	ldr	x23, [sp, #264]
    234c:	orr	w27, w27, #0x10
    2350:	add	x1, x23, #0x1
    2354:	str	x1, [sp, #264]
    2358:	bl	878 <__assert_fail@plt+0xe8>
    235c:	strb	w0, [x23]
    2360:	str	w27, [x20]
    2364:	b	1300 <gconv@@Base+0x998>
    2368:	cmp	w1, #0x2b
    236c:	b.eq	26e0 <gconv@@Base+0x1d78>  // b.none
    2370:	cmp	w1, #0x2f
    2374:	b.eq	2840 <gconv@@Base+0x1ed8>  // b.none
    2378:	cmp	w4, #0x0
    237c:	ccmp	w2, #0x1a, #0x4, eq  // eq = none
    2380:	b.le	1e68 <gconv@@Base+0x1500>
    2384:	cmp	w1, #0x2d
    2388:	str	wzr, [x21]
    238c:	cinc	x25, x25, eq  // eq = none
    2390:	b	1c20 <gconv@@Base+0x12b8>
    2394:	ldr	x0, [sp, #192]
    2398:	cbz	x0, 2058 <gconv@@Base+0x16f0>
    239c:	tbnz	w23, #3, 2894 <gconv@@Base+0x1f2c>
    23a0:	tbz	w23, #1, 2058 <gconv@@Base+0x16f0>
    23a4:	mov	x0, x24
    23a8:	ldr	x2, [sp, #192]
    23ac:	add	x0, x0, #0x4
    23b0:	str	x0, [sp, #256]
    23b4:	ldr	x1, [x2]
    23b8:	add	x1, x1, #0x1
    23bc:	str	x1, [x2]
    23c0:	cmp	x0, x24
    23c4:	b.ne	1314 <gconv@@Base+0x9ac>  // b.any
    23c8:	b	2058 <gconv@@Base+0x16f0>
    23cc:	ldr	x0, [sp, #104]
    23d0:	cmp	x25, x19
    23d4:	str	x19, [x0]
    23d8:	b.cs	2400 <gconv@@Base+0x1a98>  // b.hs, b.nlast
    23dc:	add	x12, x25, #0x1
    23e0:	add	x8, x20, x7
    23e4:	str	x12, [sp, #256]
    23e8:	cmp	x19, x12
    23ec:	add	x8, x8, #0x1
    23f0:	add	x12, x12, #0x1
    23f4:	ldurb	w0, [x12, #-2]
    23f8:	strb	w0, [x8, #3]
    23fc:	b.ne	23e4 <gconv@@Base+0x1a7c>  // b.any
    2400:	mov	w27, #0x7                   	// #7
    2404:	ldp	x25, x26, [sp, #64]
    2408:	b	1048 <gconv@@Base+0x6e0>
    240c:	add	x1, x8, #0x1
    2410:	and	w0, w0, #0xfffffffc
    2414:	orr	w0, w0, w20, lsr #12
    2418:	str	x8, [sp, #232]
    241c:	str	x1, [sp, #296]
    2420:	bl	878 <__assert_fail@plt+0xe8>
    2424:	ldr	x8, [sp, #232]
    2428:	strb	w0, [x8]
    242c:	b	1b40 <gconv@@Base+0x11d8>
    2430:	mov	w1, #0xd                   	// #13
    2434:	and	w0, w0, #0xfffffffc
    2438:	orr	w0, w0, w1
    243c:	add	x1, x8, #0x1
    2440:	str	x8, [sp, #232]
    2444:	str	x1, [sp, #296]
    2448:	bl	878 <__assert_fail@plt+0xe8>
    244c:	ldr	x8, [sp, #232]
    2450:	strb	w0, [x8]
    2454:	ubfx	x0, x20, #22, #6
    2458:	ldr	x25, [sp, #296]
    245c:	add	x1, x25, #0x1
    2460:	str	x1, [sp, #296]
    2464:	bl	878 <__assert_fail@plt+0xe8>
    2468:	strb	w0, [x25]
    246c:	ubfx	x0, x20, #16, #6
    2470:	ldr	x25, [sp, #296]
    2474:	add	x1, x25, #0x1
    2478:	str	x1, [sp, #296]
    247c:	bl	878 <__assert_fail@plt+0xe8>
    2480:	strb	w0, [x25]
    2484:	mov	w2, #0x33                  	// #51
    2488:	ubfx	x0, x20, #4, #6
    248c:	ldr	x1, [sp, #296]
    2490:	add	x3, x1, #0x1
    2494:	str	x3, [sp, #296]
    2498:	strb	w2, [x1]
    249c:	b	1bc0 <gconv@@Base+0x1258>
    24a0:	cmp	w0, #0x1
    24a4:	b.ne	2c08 <gconv@@Base+0x22a0>  // b.any
    24a8:	add	x1, x22, #0x1
    24ac:	lsr	w0, w27, #10
    24b0:	str	x1, [sp, #264]
    24b4:	bl	878 <__assert_fail@plt+0xe8>
    24b8:	strb	w0, [x22]
    24bc:	ldr	x23, [sp, #264]
    24c0:	ubfx	x0, x27, #4, #6
    24c4:	ubfiz	w27, w27, #5, #4
    24c8:	add	x1, x23, #0x1
    24cc:	str	x1, [sp, #264]
    24d0:	orr	w27, w27, #0x18
    24d4:	bl	878 <__assert_fail@plt+0xe8>
    24d8:	strb	w0, [x23]
    24dc:	str	w27, [x20]
    24e0:	b	1300 <gconv@@Base+0x998>
    24e4:	cmp	w1, #0x1
    24e8:	b.ne	2c08 <gconv@@Base+0x22a0>  // b.any
    24ec:	add	x0, x22, #0x1
    24f0:	str	x0, [sp, #264]
    24f4:	mov	w0, #0x32                  	// #50
    24f8:	strb	w0, [x22]
    24fc:	ubfx	x0, x23, #20, #6
    2500:	ldr	x25, [sp, #264]
    2504:	b	1fdc <gconv@@Base+0x1674>
    2508:	sub	w1, w5, #0x61
    250c:	and	w1, w1, #0xff
    2510:	cmp	w1, #0x19
    2514:	b.hi	2728 <gconv@@Base+0x1dc0>  // b.pmore
    2518:	sub	w0, w5, #0x47
    251c:	b	170c <gconv@@Base+0xda4>
    2520:	ldr	x1, [sp, #192]
    2524:	add	x25, x12, #0x4
    2528:	mov	w2, #0x6                   	// #6
    252c:	str	w2, [sp, #120]
    2530:	str	x25, [sp, #288]
    2534:	ldr	x0, [x1]
    2538:	add	x0, x0, #0x1
    253c:	str	x0, [x1]
    2540:	b	1524 <gconv@@Base+0xbbc>
    2544:	mov	x1, #0x0                   	// #0
    2548:	b	16b0 <gconv@@Base+0xd48>
    254c:	lsr	w3, w5, #3
    2550:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2554:	add	x0, x0, #0xe18
    2558:	and	w2, w5, #0x7
    255c:	ldrb	w0, [x0, w3, uxtw]
    2560:	asr	w0, w0, w2
    2564:	tbz	w0, #0, 257c <gconv@@Base+0x1c14>
    2568:	str	w5, [x22]
    256c:	mov	x0, #0x1                   	// #1
    2570:	mov	x22, x7
    2574:	ldr	w6, [x20]
    2578:	b	1760 <gconv@@Base+0xdf8>
    257c:	cmp	w5, #0x2b
    2580:	b.ne	204c <gconv@@Base+0x16e4>  // b.any
    2584:	add	x0, x24, #0x2
    2588:	cmp	x4, x0
    258c:	b.cc	2980 <gconv@@Base+0x2018>  // b.lo, b.ul, b.last
    2590:	ldrb	w0, [sp, #305]
    2594:	cmp	w0, #0x2d
    2598:	b.eq	27a4 <gconv@@Base+0x1e3c>  // b.none
    259c:	str	wzr, [x20, #4]
    25a0:	mov	w6, #0x100                 	// #256
    25a4:	ldr	w23, [x21, #16]
    25a8:	mov	x0, #0x1                   	// #1
    25ac:	b	1778 <gconv@@Base+0xe10>
    25b0:	add	x0, x22, #0x3
    25b4:	cmp	x26, x0
    25b8:	b.cc	1dc0 <gconv@@Base+0x1458>  // b.lo, b.ul, b.last
    25bc:	add	x0, x22, #0x1
    25c0:	str	x0, [sp, #264]
    25c4:	mov	w0, #0x2b                  	// #43
    25c8:	strb	w0, [x22]
    25cc:	lsr	w0, w27, #10
    25d0:	ldr	x23, [sp, #264]
    25d4:	add	x1, x23, #0x1
    25d8:	str	x1, [sp, #264]
    25dc:	bl	878 <__assert_fail@plt+0xe8>
    25e0:	strb	w0, [x23]
    25e4:	b	24bc <gconv@@Base+0x1b54>
    25e8:	add	x0, x22, #0x1
    25ec:	str	x0, [sp, #264]
    25f0:	strb	w27, [x22]
    25f4:	b	1300 <gconv@@Base+0x998>
    25f8:	lsl	w1, w0, w3
    25fc:	mov	w4, #0x6                   	// #6
    2600:	lsl	w1, w1, #26
    2604:	sub	w4, w4, w3
    2608:	str	w1, [x20, #4]
    260c:	mov	w1, #0xffff2800            	// #-55296
    2610:	add	w1, w1, w2, lsr #16
    2614:	and	w2, w2, #0xffff
    2618:	lsr	w0, w0, w4
    261c:	cmp	w1, #0x3ff
    2620:	add	w4, w3, #0x1a
    2624:	orr	w0, w0, w2
    2628:	b.hi	2b74 <gconv@@Base+0x220c>  // b.pmore
    262c:	mov	w9, #0xffff2400            	// #-56320
    2630:	add	w2, w0, w9
    2634:	cmp	w2, #0x3ff
    2638:	b.hi	2b54 <gconv@@Base+0x21ec>  // b.pmore
    263c:	add	w0, w0, w1, lsl #10
    2640:	mov	w8, #0x2400                	// #9216
    2644:	add	w0, w0, w8
    2648:	str	w0, [x22]
    264c:	mov	x22, x7
    2650:	b	1754 <gconv@@Base+0xdec>
    2654:	add	x23, x20, #0x1
    2658:	cmp	x1, x23
    265c:	b.cc	1dc0 <gconv@@Base+0x1458>  // b.lo, b.ul, b.last
    2660:	mov	x24, x20
    2664:	b	1a4c <gconv@@Base+0x10e4>
    2668:	mov	x23, #0x7                   	// #7
    266c:	b	1c38 <gconv@@Base+0x12d0>
    2670:	cmp	x20, x23
    2674:	b.cs	20f8 <gconv@@Base+0x1790>  // b.hs, b.nlast
    2678:	ldr	x21, [sp, #152]
    267c:	str	x20, [sp, #296]
    2680:	mov	x0, x21
    2684:	bl	780 <_dl_mcount_wrapper_check@plt>
    2688:	ldp	x0, x1, [sp, #168]
    268c:	mov	x3, x23
    2690:	ldr	w7, [sp, #140]
    2694:	add	x2, sp, #0x128
    2698:	ldr	x5, [sp, #144]
    269c:	mov	w6, #0x0                   	// #0
    26a0:	mov	x4, #0x0                   	// #0
    26a4:	blr	x21
    26a8:	mov	w27, w0
    26ac:	cmp	w0, #0x4
    26b0:	b.eq	20f8 <gconv@@Base+0x1790>  // b.none
    26b4:	ldr	x0, [sp, #296]
    26b8:	cmp	x0, x23
    26bc:	b.ne	26cc <gconv@@Base+0x1d64>  // b.any
    26c0:	cbz	w27, 20f8 <gconv@@Base+0x1790>
    26c4:	ldp	x25, x26, [sp, #64]
    26c8:	b	1048 <gconv@@Base+0x6e0>
    26cc:	str	x25, [x19]
    26d0:	cbnz	w27, 26c4 <gconv@@Base+0x1d5c>
    26d4:	b	20f8 <gconv@@Base+0x1790>
    26d8:	mov	x23, #0x6                   	// #6
    26dc:	b	1c38 <gconv@@Base+0x12d0>
    26e0:	mov	w0, #0x3e                  	// #62
    26e4:	b	1988 <gconv@@Base+0x1020>
    26e8:	ldr	x0, [sp, #104]
    26ec:	mov	x4, x22
    26f0:	ldp	x5, x3, [sp, #216]
    26f4:	mov	x1, x28
    26f8:	ldr	x2, [x0]
    26fc:	ldr	x0, [sp, #128]
    2700:	ldr	x6, [sp, #192]
    2704:	bl	730 <__gconv_transliterate@plt>
    2708:	str	w0, [sp, #120]
    270c:	cmp	w0, #0x6
    2710:	b.eq	2740 <gconv@@Base+0x1dd8>  // b.none
    2714:	ldr	w0, [sp, #120]
    2718:	cmp	w0, #0x5
    271c:	b.eq	2a40 <gconv@@Base+0x20d8>  // b.none
    2720:	ldp	x25, x8, [sp, #288]
    2724:	b	1524 <gconv@@Base+0xbbc>
    2728:	sub	w1, w5, #0x30
    272c:	and	w1, w1, #0xff
    2730:	cmp	w1, #0x9
    2734:	b.hi	294c <gconv@@Base+0x1fe4>  // b.pmore
    2738:	add	w0, w5, #0x4
    273c:	b	170c <gconv@@Base+0xda4>
    2740:	ldr	x8, [sp, #296]
    2744:	b	1df8 <gconv@@Base+0x1490>
    2748:	ldr	x0, [sp, #104]
    274c:	cmp	x27, x26
    2750:	str	x25, [x0]
    2754:	b.eq	1940 <gconv@@Base+0xfd8>  // b.none
    2758:	b	1e18 <gconv@@Base+0x14b0>
    275c:	sxtw	x23, w7
    2760:	b	1c38 <gconv@@Base+0x12d0>
    2764:	sub	w3, w3, #0xb
    2768:	cmp	w3, #0x5
    276c:	b.hi	1750 <gconv@@Base+0xde8>  // b.pmore
    2770:	mov	w1, #0xffff2400            	// #-56320
    2774:	add	w1, w1, w0, uxth
    2778:	cmp	w1, #0x3ff
    277c:	b.ls	1750 <gconv@@Base+0xde8>  // b.plast
    2780:	ldr	x0, [sp, #192]
    2784:	cbz	x0, 2058 <gconv@@Base+0x16f0>
    2788:	tbz	w23, #1, 2058 <gconv@@Base+0x16f0>
    278c:	mov	x1, x0
    2790:	ldr	x0, [x0]
    2794:	add	x0, x0, #0x1
    2798:	str	x0, [x1]
    279c:	mov	x0, #0x1                   	// #1
    27a0:	b	1778 <gconv@@Base+0xe10>
    27a4:	str	w5, [x22]
    27a8:	mov	x0, #0x2                   	// #2
    27ac:	mov	x22, x7
    27b0:	ldr	w6, [x20]
    27b4:	b	1760 <gconv@@Base+0xdf8>
    27b8:	add	x1, x22, #0x1
    27bc:	mov	w2, #0xd                   	// #13
    27c0:	and	w0, w0, #0xfffffffc
    27c4:	str	x1, [sp, #264]
    27c8:	orr	w0, w0, w2
    27cc:	bl	878 <__assert_fail@plt+0xe8>
    27d0:	strb	w0, [x22]
    27d4:	ubfx	x0, x23, #22, #6
    27d8:	ldr	x25, [sp, #264]
    27dc:	add	x1, x25, #0x1
    27e0:	str	x1, [sp, #264]
    27e4:	bl	878 <__assert_fail@plt+0xe8>
    27e8:	strb	w0, [x25]
    27ec:	ubfx	x0, x23, #16, #6
    27f0:	ldr	x25, [sp, #264]
    27f4:	add	x1, x25, #0x1
    27f8:	str	x1, [sp, #264]
    27fc:	bl	878 <__assert_fail@plt+0xe8>
    2800:	strb	w0, [x25]
    2804:	mov	w2, #0x33                  	// #51
    2808:	ubfx	x0, x23, #4, #6
    280c:	ldr	x1, [sp, #264]
    2810:	ubfiz	w23, w23, #5, #4
    2814:	orr	w23, w23, #0x18
    2818:	add	x3, x1, #0x1
    281c:	str	x3, [sp, #264]
    2820:	strb	w2, [x1]
    2824:	ldr	x25, [sp, #264]
    2828:	add	x1, x25, #0x1
    282c:	str	x1, [sp, #264]
    2830:	bl	878 <__assert_fail@plt+0xe8>
    2834:	strb	w0, [x25]
    2838:	str	w23, [x20]
    283c:	b	1300 <gconv@@Base+0x998>
    2840:	mov	w0, #0x3f                  	// #63
    2844:	b	1988 <gconv@@Base+0x1020>
    2848:	ldr	x0, [sp, #104]
    284c:	cmp	x27, x26
    2850:	str	x22, [x0]
    2854:	b.eq	154c <gconv@@Base+0xbe4>  // b.none
    2858:	b	1e18 <gconv@@Base+0x14b0>
    285c:	and	w3, w3, #0xfffffffc
    2860:	add	x1, x22, #0x1
    2864:	orr	w0, w3, w27, lsr #12
    2868:	str	x1, [sp, #264]
    286c:	bl	878 <__assert_fail@plt+0xe8>
    2870:	strb	w0, [x22]
    2874:	ubfx	x0, x27, #6, #6
    2878:	ldr	x23, [sp, #264]
    287c:	add	x1, x23, #0x1
    2880:	str	x1, [sp, #264]
    2884:	bl	878 <__assert_fail@plt+0xe8>
    2888:	strb	w0, [x23]
    288c:	and	w0, w27, #0x3f
    2890:	b	1da0 <gconv@@Base+0x1438>
    2894:	mov	x6, x0
    2898:	mov	x2, x25
    289c:	ldr	x0, [sp, #128]
    28a0:	add	x5, sp, #0x108
    28a4:	mov	x4, x28
    28a8:	add	x3, sp, #0x100
    28ac:	mov	x1, x21
    28b0:	str	x7, [sp, #120]
    28b4:	bl	730 <__gconv_transliterate@plt>
    28b8:	mov	w27, w0
    28bc:	cmp	w0, #0x6
    28c0:	ldr	x7, [sp, #120]
    28c4:	b.eq	29e4 <gconv@@Base+0x207c>  // b.none
    28c8:	ldr	x0, [sp, #256]
    28cc:	cmp	x0, x24
    28d0:	b.ne	1314 <gconv@@Base+0x9ac>  // b.any
    28d4:	cmp	w27, #0x7
    28d8:	b.ne	2254 <gconv@@Base+0x18ec>  // b.any
    28dc:	add	x0, x24, #0x4
    28e0:	cmp	x28, x0
    28e4:	b.eq	2aec <gconv@@Base+0x2184>  // b.none
    28e8:	ldr	x3, [sp, #104]
    28ec:	ldr	w0, [x20]
    28f0:	ldr	x1, [x3]
    28f4:	and	x2, x0, #0x7
    28f8:	sub	x2, x7, x2
    28fc:	and	w0, w0, #0xfffffff8
    2900:	add	x1, x1, x2
    2904:	str	x1, [x3]
    2908:	cmp	x7, w0, sxtw
    290c:	b.le	2acc <gconv@@Base+0x2164>
    2910:	cmp	x7, #0x4
    2914:	b.hi	2a8c <gconv@@Base+0x2124>  // b.pmore
    2918:	orr	w0, w0, w7
    291c:	str	w0, [x20]
    2920:	cmp	x28, x24
    2924:	b.ls	2400 <gconv@@Base+0x1a98>  // b.plast
    2928:	add	x24, x24, #0x1
    292c:	add	x8, x20, #0x4
    2930:	str	x24, [sp, #256]
    2934:	cmp	x28, x24
    2938:	add	x24, x24, #0x1
    293c:	ldurb	w0, [x24, #-2]
    2940:	strb	w0, [x8], #1
    2944:	b.ne	2930 <gconv@@Base+0x1fc8>  // b.any
    2948:	b	2400 <gconv@@Base+0x1a98>
    294c:	cmp	w5, #0x2b
    2950:	b.eq	29f8 <gconv@@Base+0x2090>  // b.none
    2954:	cmp	w5, #0x2f
    2958:	b.eq	29f0 <gconv@@Base+0x2088>  // b.none
    295c:	cmp	w2, #0x0
    2960:	ccmp	w3, #0x1a, #0x4, eq  // eq = none
    2964:	b.le	2780 <gconv@@Base+0x1e18>
    2968:	cmp	w5, #0x2d
    296c:	b.eq	25a8 <gconv@@Base+0x1c40>  // b.none
    2970:	str	wzr, [x20]
    2974:	b	a3c <gconv@@Base+0xd4>
    2978:	mov	w1, #0x0                   	// #0
    297c:	b	20ac <gconv@@Base+0x1744>
    2980:	add	x0, x24, #0x6
    2984:	cmp	x4, x0
    2988:	b.eq	2b2c <gconv@@Base+0x21c4>  // b.none
    298c:	ldr	x0, [sp, #104]
    2990:	sub	x14, x1, x14
    2994:	add	x12, x25, x14
    2998:	cmp	x1, #0x0
    299c:	str	x12, [x0]
    29a0:	b.le	2b1c <gconv@@Base+0x21b4>
    29a4:	cmp	x1, #0x4
    29a8:	b.gt	2b0c <gconv@@Base+0x21a4>
    29ac:	str	w1, [x20]
    29b0:	cmp	x4, x24
    29b4:	b.ls	2400 <gconv@@Base+0x1a98>  // b.plast
    29b8:	add	x8, x20, #0x4
    29bc:	add	x24, x24, #0x1
    29c0:	cmp	x4, x24
    29c4:	strb	w5, [x8], #1
    29c8:	b.eq	2400 <gconv@@Base+0x1a98>  // b.none
    29cc:	ldrb	w5, [x24]
    29d0:	add	x24, x24, #0x1
    29d4:	strb	w5, [x8], #1
    29d8:	cmp	x4, x24
    29dc:	b.ne	29cc <gconv@@Base+0x2064>  // b.any
    29e0:	b	2400 <gconv@@Base+0x1a98>
    29e4:	ldr	x0, [sp, #256]
    29e8:	tbz	w23, #1, 23c0 <gconv@@Base+0x1a58>
    29ec:	b	23a8 <gconv@@Base+0x1a40>
    29f0:	mov	w0, #0x3f                  	// #63
    29f4:	b	170c <gconv@@Base+0xda4>
    29f8:	mov	w0, #0x3e                  	// #62
    29fc:	b	170c <gconv@@Base+0xda4>
    2a00:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2a04:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2a08:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2a0c:	add	x3, x3, #0xdd0
    2a10:	add	x1, x1, #0xc58
    2a14:	add	x0, x0, #0xcb8
    2a18:	mov	w2, #0x150                 	// #336
    2a1c:	bl	790 <__assert_fail@plt>
    2a20:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2a24:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2a28:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2a2c:	add	x3, x3, #0xdd0
    2a30:	add	x1, x1, #0xc58
    2a34:	add	x0, x0, #0xc98
    2a38:	mov	w2, #0x150                 	// #336
    2a3c:	bl	790 <__assert_fail@plt>
    2a40:	ldr	x2, [sp, #104]
    2a44:	ldp	x1, x8, [sp, #288]
    2a48:	ldr	x0, [sp, #248]
    2a4c:	str	x1, [x2]
    2a50:	cmp	x0, x8
    2a54:	b.eq	1938 <gconv@@Base+0xfd0>  // b.none
    2a58:	b	1e18 <gconv@@Base+0x14b0>
    2a5c:	mov	x1, x0
    2a60:	ldr	x0, [x0]
    2a64:	add	x0, x0, #0x1
    2a68:	str	x0, [x1]
    2a6c:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2a70:	add	x3, x3, #0xdf8
    2a74:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2a78:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2a7c:	add	x1, x1, #0xc58
    2a80:	add	x0, x0, #0xcd8
    2a84:	mov	w2, #0x1c9                 	// #457
    2a88:	bl	790 <__assert_fail@plt>
    2a8c:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2a90:	add	x3, x3, #0xde0
    2a94:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2a98:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2a9c:	add	x1, x1, #0xc58
    2aa0:	add	x0, x0, #0xd50
    2aa4:	mov	w2, #0x1e6                 	// #486
    2aa8:	bl	790 <__assert_fail@plt>
    2aac:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2ab0:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2ab4:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2ab8:	add	x3, x3, #0xe10
    2abc:	add	x1, x1, #0xc28
    2ac0:	add	x0, x0, #0xc40
    2ac4:	mov	w2, #0x234                 	// #564
    2ac8:	bl	790 <__assert_fail@plt>
    2acc:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2ad0:	add	x3, x3, #0xde0
    2ad4:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2ad8:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2adc:	add	x1, x1, #0xc58
    2ae0:	add	x0, x0, #0xd28
    2ae4:	mov	w2, #0x1e5                 	// #485
    2ae8:	bl	790 <__assert_fail@plt>
    2aec:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2af0:	add	x3, x3, #0xde0
    2af4:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2af8:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2afc:	add	x1, x1, #0xc58
    2b00:	add	x0, x0, #0xd00
    2b04:	mov	w2, #0x1db                 	// #475
    2b08:	bl	790 <__assert_fail@plt>
    2b0c:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2b10:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2b14:	add	x3, x3, #0xdf8
    2b18:	b	2a98 <gconv@@Base+0x2130>
    2b1c:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2b20:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2b24:	add	x3, x3, #0xdf8
    2b28:	b	2ad8 <gconv@@Base+0x2170>
    2b2c:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2b30:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2b34:	add	x3, x3, #0xdf8
    2b38:	b	2af8 <gconv@@Base+0x2190>
    2b3c:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2b40:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2b44:	add	x3, x3, #0xde0
    2b48:	b	2a78 <gconv@@Base+0x2110>
    2b4c:	stp	x25, x26, [sp, #64]
    2b50:	bl	740 <__stack_chk_fail@plt>
    2b54:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2b58:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2b5c:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2b60:	add	x3, x3, #0xdf8
    2b64:	add	x1, x1, #0xc58
    2b68:	add	x0, x0, #0xcb8
    2b6c:	mov	w2, #0x1be                 	// #446
    2b70:	bl	790 <__assert_fail@plt>
    2b74:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2b78:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2b7c:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2b80:	add	x3, x3, #0xdf8
    2b84:	add	x1, x1, #0xc58
    2b88:	add	x0, x0, #0xc98
    2b8c:	mov	w2, #0x1be                 	// #446
    2b90:	bl	790 <__assert_fail@plt>
    2b94:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2b98:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2b9c:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2ba0:	add	x3, x3, #0xe10
    2ba4:	add	x1, x1, #0xc28
    2ba8:	add	x0, x0, #0xdb8
    2bac:	mov	w2, #0x31e                 	// #798
    2bb0:	bl	790 <__assert_fail@plt>
    2bb4:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2bb8:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2bbc:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2bc0:	add	x3, x3, #0xe10
    2bc4:	add	x1, x1, #0xc28
    2bc8:	add	x0, x0, #0xc40
    2bcc:	mov	w2, #0x1a4                 	// #420
    2bd0:	stp	x25, x26, [sp, #64]
    2bd4:	bl	790 <__assert_fail@plt>
    2bd8:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2bdc:	add	x3, x3, #0xde0
    2be0:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2be4:	adrp	x0, 2000 <gconv@@Base+0x1698>
    2be8:	add	x1, x1, #0xc58
    2bec:	add	x0, x0, #0xc68
    2bf0:	mov	w2, #0x18b                 	// #395
    2bf4:	bl	790 <__assert_fail@plt>
    2bf8:	adrp	x3, 2000 <gconv@@Base+0x1698>
    2bfc:	adrp	x1, 2000 <gconv@@Base+0x1698>
    2c00:	add	x3, x3, #0xdf8
    2c04:	b	2be4 <gconv@@Base+0x227c>
    2c08:	bl	760 <abort@plt>

Disassembly of section .fini:

0000000000002c0c <.fini>:
    2c0c:	stp	x29, x30, [sp, #-16]!
    2c10:	mov	x29, sp
    2c14:	ldp	x29, x30, [sp], #16
    2c18:	ret
