
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libman-2.9.0.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a738 <.init>:
    a738:	stp	x29, x30, [sp, #-16]!
    a73c:	mov	x29, sp
    a740:	bl	b7e0 <xgetcwd@plt+0x10>
    a744:	ldp	x29, x30, [sp], #16
    a748:	ret

Disassembly of section .plt:

000000000000a750 <base_len@plt-0x20>:
    a750:	stp	x16, x30, [sp, #-16]!
    a754:	adrp	x16, 5c000 <vasnprintf@@Base+0x1be04>
    a758:	ldr	x17, [x16, #4088]
    a75c:	add	x16, x16, #0xff8
    a760:	br	x17
    a764:	nop
    a768:	nop
    a76c:	nop

000000000000a770 <base_len@plt>:
    a770:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a774:	ldr	x17, [x16]
    a778:	add	x16, x16, #0x0
    a77c:	br	x17

000000000000a780 <mbrtowc@plt>:
    a780:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a784:	ldr	x17, [x16, #8]
    a788:	add	x16, x16, #0x8
    a78c:	br	x17

000000000000a790 <memcpy@plt>:
    a790:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a794:	ldr	x17, [x16, #16]
    a798:	add	x16, x16, #0x10
    a79c:	br	x17

000000000000a7a0 <memmove@plt>:
    a7a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a7a4:	ldr	x17, [x16, #24]
    a7a8:	add	x16, x16, #0x18
    a7ac:	br	x17

000000000000a7b0 <pthread_rwlockattr_init@plt>:
    a7b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a7b4:	ldr	x17, [x16, #32]
    a7b8:	add	x16, x16, #0x20
    a7bc:	br	x17

000000000000a7c0 <gl_list_nx_create_empty@plt>:
    a7c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a7c4:	ldr	x17, [x16, #40]
    a7c8:	add	x16, x16, #0x28
    a7cc:	br	x17

000000000000a7d0 <_exit@plt>:
    a7d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a7d4:	ldr	x17, [x16, #48]
    a7d8:	add	x16, x16, #0x30
    a7dc:	br	x17

000000000000a7e0 <getcwd@plt>:
    a7e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a7e4:	ldr	x17, [x16, #56]
    a7e8:	add	x16, x16, #0x38
    a7ec:	br	x17

000000000000a7f0 <same_nameat@plt>:
    a7f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a7f4:	ldr	x17, [x16, #64]
    a7f8:	add	x16, x16, #0x40
    a7fc:	br	x17

000000000000a800 <fwrite_unlocked@plt>:
    a800:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a804:	ldr	x17, [x16, #72]
    a808:	add	x16, x16, #0x48
    a80c:	br	x17

000000000000a810 <get_canonical_charset_name@plt>:
    a810:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a814:	ldr	x17, [x16, #80]
    a818:	add	x16, x16, #0x50
    a81c:	br	x17

000000000000a820 <strlen@plt>:
    a820:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a824:	ldr	x17, [x16, #88]
    a828:	add	x16, x16, #0x58
    a82c:	br	x17

000000000000a830 <gl_list_nx_add_last@plt>:
    a830:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a834:	ldr	x17, [x16, #96]
    a838:	add	x16, x16, #0x60
    a83c:	br	x17

000000000000a840 <exit@plt>:
    a840:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a844:	ldr	x17, [x16, #104]
    a848:	add	x16, x16, #0x68
    a84c:	br	x17

000000000000a850 <error@plt>:
    a850:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a854:	ldr	x17, [x16, #112]
    a858:	add	x16, x16, #0x70
    a85c:	br	x17

000000000000a860 <pthread_mutexattr_settype@plt>:
    a860:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a864:	ldr	x17, [x16, #120]
    a868:	add	x16, x16, #0x78
    a86c:	br	x17

000000000000a870 <fchdir@plt>:
    a870:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a874:	ldr	x17, [x16, #128]
    a878:	add	x16, x16, #0x80
    a87c:	br	x17

000000000000a880 <perror@plt>:
    a880:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a884:	ldr	x17, [x16, #136]
    a888:	add	x16, x16, #0x88
    a88c:	br	x17

000000000000a890 <flockfile@plt>:
    a890:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a894:	ldr	x17, [x16, #144]
    a898:	add	x16, x16, #0x90
    a89c:	br	x17

000000000000a8a0 <getegid@plt>:
    a8a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a8a4:	ldr	x17, [x16, #152]
    a8a8:	add	x16, x16, #0x98
    a8ac:	br	x17

000000000000a8b0 <wctype@plt>:
    a8b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a8b4:	ldr	x17, [x16, #160]
    a8b8:	add	x16, x16, #0xa0
    a8bc:	br	x17

000000000000a8c0 <sigprocmask@plt>:
    a8c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a8c4:	ldr	x17, [x16, #168]
    a8c8:	add	x16, x16, #0xa8
    a8cc:	br	x17

000000000000a8d0 <rpl_mbrtowc@plt>:
    a8d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a8d4:	ldr	x17, [x16, #176]
    a8d8:	add	x16, x16, #0xb0
    a8dc:	br	x17

000000000000a8e0 <geteuid@plt>:
    a8e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a8e4:	ldr	x17, [x16, #184]
    a8e8:	add	x16, x16, #0xb8
    a8ec:	br	x17

000000000000a8f0 <get_roff_encoding@plt>:
    a8f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a8f4:	ldr	x17, [x16, #192]
    a8f8:	add	x16, x16, #0xc0
    a8fc:	br	x17

000000000000a900 <pthread_rwlock_init@plt>:
    a900:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a904:	ldr	x17, [x16, #200]
    a908:	add	x16, x16, #0xc8
    a90c:	br	x17

000000000000a910 <getresuid@plt>:
    a910:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a914:	ldr	x17, [x16, #208]
    a918:	add	x16, x16, #0xd0
    a91c:	br	x17

000000000000a920 <pthread_rwlockattr_setkind_np@plt>:
    a920:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a924:	ldr	x17, [x16, #216]
    a928:	add	x16, x16, #0xd8
    a92c:	br	x17

000000000000a930 <chdir_long@plt>:
    a930:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a934:	ldr	x17, [x16, #224]
    a938:	add	x16, x16, #0xe0
    a93c:	br	x17

000000000000a940 <hash_insert@plt>:
    a940:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a944:	ldr	x17, [x16, #232]
    a948:	add	x16, x16, #0xe8
    a94c:	br	x17

000000000000a950 <setenv@plt>:
    a950:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a954:	ldr	x17, [x16, #240]
    a958:	add	x16, x16, #0xf0
    a95c:	br	x17

000000000000a960 <readlink@plt>:
    a960:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a964:	ldr	x17, [x16, #248]
    a968:	add	x16, x16, #0xf8
    a96c:	br	x17

000000000000a970 <gl_sortedlist_add@plt>:
    a970:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a974:	ldr	x17, [x16, #256]
    a978:	add	x16, x16, #0x100
    a97c:	br	x17

000000000000a980 <__cxa_finalize@plt>:
    a980:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a984:	ldr	x17, [x16, #264]
    a988:	add	x16, x16, #0x108
    a98c:	br	x17

000000000000a990 <sprintf@plt>:
    a990:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a994:	ldr	x17, [x16, #272]
    a998:	add	x16, x16, #0x110
    a99c:	br	x17

000000000000a9a0 <getuid@plt>:
    a9a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a9a4:	ldr	x17, [x16, #280]
    a9a8:	add	x16, x16, #0x118
    a9ac:	br	x17

000000000000a9b0 <pipe@plt>:
    a9b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a9b4:	ldr	x17, [x16, #288]
    a9b8:	add	x16, x16, #0x120
    a9bc:	br	x17

000000000000a9c0 <opendir@plt>:
    a9c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a9c4:	ldr	x17, [x16, #296]
    a9c8:	add	x16, x16, #0x128
    a9cc:	br	x17

000000000000a9d0 <__cxa_atexit@plt>:
    a9d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a9d4:	ldr	x17, [x16, #304]
    a9d8:	add	x16, x16, #0x130
    a9dc:	br	x17

000000000000a9e0 <timespec_cmp@plt>:
    a9e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a9e4:	ldr	x17, [x16, #312]
    a9e8:	add	x16, x16, #0x138
    a9ec:	br	x17

000000000000a9f0 <fputc@plt>:
    a9f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    a9f4:	ldr	x17, [x16, #320]
    a9f8:	add	x16, x16, #0x140
    a9fc:	br	x17

000000000000aa00 <clock_gettime@plt>:
    aa00:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa04:	ldr	x17, [x16, #328]
    aa08:	add	x16, x16, #0x148
    aa0c:	br	x17

000000000000aa10 <qsort@plt>:
    aa10:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa14:	ldr	x17, [x16, #336]
    aa18:	add	x16, x16, #0x150
    aa1c:	br	x17

000000000000aa20 <kill@plt>:
    aa20:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa24:	ldr	x17, [x16, #344]
    aa28:	add	x16, x16, #0x158
    aa2c:	br	x17

000000000000aa30 <argp_fmtstream_set_lmargin@plt>:
    aa30:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa34:	ldr	x17, [x16, #352]
    aa38:	add	x16, x16, #0x160
    aa3c:	br	x17

000000000000aa40 <_argp_fmtstream_update@plt>:
    aa40:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa44:	ldr	x17, [x16, #360]
    aa48:	add	x16, x16, #0x168
    aa4c:	br	x17

000000000000aa50 <argp_fmtstream_putc@plt>:
    aa50:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa54:	ldr	x17, [x16, #368]
    aa58:	add	x16, x16, #0x170
    aa5c:	br	x17

000000000000aa60 <__ctype_tolower_loc@plt>:
    aa60:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa64:	ldr	x17, [x16, #376]
    aa68:	add	x16, x16, #0x178
    aa6c:	br	x17

000000000000aa70 <snprintf@plt>:
    aa70:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa74:	ldr	x17, [x16, #384]
    aa78:	add	x16, x16, #0x180
    aa7c:	br	x17

000000000000aa80 <mdir_name@plt>:
    aa80:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa84:	ldr	x17, [x16, #392]
    aa88:	add	x16, x16, #0x188
    aa8c:	br	x17

000000000000aa90 <triple_free@plt>:
    aa90:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aa94:	ldr	x17, [x16, #400]
    aa98:	add	x16, x16, #0x190
    aa9c:	br	x17

000000000000aaa0 <putc_unlocked@plt>:
    aaa0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aaa4:	ldr	x17, [x16, #408]
    aaa8:	add	x16, x16, #0x198
    aaac:	br	x17

000000000000aab0 <debug@plt>:
    aab0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aab4:	ldr	x17, [x16, #416]
    aab8:	add	x16, x16, #0x1a0
    aabc:	br	x17

000000000000aac0 <hash_free@plt>:
    aac0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aac4:	ldr	x17, [x16, #424]
    aac8:	add	x16, x16, #0x1a8
    aacc:	br	x17

000000000000aad0 <fclose@plt>:
    aad0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aad4:	ldr	x17, [x16, #432]
    aad8:	add	x16, x16, #0x1b0
    aadc:	br	x17

000000000000aae0 <atoi@plt>:
    aae0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aae4:	ldr	x17, [x16, #440]
    aae8:	add	x16, x16, #0x1b8
    aaec:	br	x17

000000000000aaf0 <rpl_regcomp@plt>:
    aaf0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aaf4:	ldr	x17, [x16, #448]
    aaf8:	add	x16, x16, #0x1c0
    aafc:	br	x17

000000000000ab00 <getpid@plt>:
    ab00:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab04:	ldr	x17, [x16, #456]
    ab08:	add	x16, x16, #0x1c8
    ab0c:	br	x17

000000000000ab10 <nl_langinfo@plt>:
    ab10:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab14:	ldr	x17, [x16, #464]
    ab18:	add	x16, x16, #0x1d0
    ab1c:	br	x17

000000000000ab20 <fopen@plt>:
    ab20:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab24:	ldr	x17, [x16, #472]
    ab28:	add	x16, x16, #0x1d8
    ab2c:	br	x17

000000000000ab30 <iswctype@plt>:
    ab30:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab34:	ldr	x17, [x16, #480]
    ab38:	add	x16, x16, #0x1e0
    ab3c:	br	x17

000000000000ab40 <malloc@plt>:
    ab40:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab44:	ldr	x17, [x16, #488]
    ab48:	add	x16, x16, #0x1e8
    ab4c:	br	x17

000000000000ab50 <gl_list_node_nx_set_value@plt>:
    ab50:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab54:	ldr	x17, [x16, #496]
    ab58:	add	x16, x16, #0x1f0
    ab5c:	br	x17

000000000000ab60 <record_file@plt>:
    ab60:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab64:	ldr	x17, [x16, #504]
    ab68:	add	x16, x16, #0x1f8
    ab6c:	br	x17

000000000000ab70 <toupper@plt>:
    ab70:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab74:	ldr	x17, [x16, #512]
    ab78:	add	x16, x16, #0x200
    ab7c:	br	x17

000000000000ab80 <gl_list_iterator@plt>:
    ab80:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab84:	ldr	x17, [x16, #520]
    ab88:	add	x16, x16, #0x208
    ab8c:	br	x17

000000000000ab90 <futimesat@plt>:
    ab90:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ab94:	ldr	x17, [x16, #528]
    ab98:	add	x16, x16, #0x210
    ab9c:	br	x17

000000000000aba0 <gl_list_nx_add_after@plt>:
    aba0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aba4:	ldr	x17, [x16, #536]
    aba8:	add	x16, x16, #0x218
    abac:	br	x17

000000000000abb0 <funlockfile@plt>:
    abb0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    abb4:	ldr	x17, [x16, #544]
    abb8:	add	x16, x16, #0x220
    abbc:	br	x17

000000000000abc0 <stdopen@plt>:
    abc0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    abc4:	ldr	x17, [x16, #552]
    abc8:	add	x16, x16, #0x228
    abcc:	br	x17

000000000000abd0 <open@plt>:
    abd0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    abd4:	ldr	x17, [x16, #560]
    abd8:	add	x16, x16, #0x230
    abdc:	br	x17

000000000000abe0 <argp_failure@plt>:
    abe0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    abe4:	ldr	x17, [x16, #568]
    abe8:	add	x16, x16, #0x238
    abec:	br	x17

000000000000abf0 <xrealloc@plt>:
    abf0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    abf4:	ldr	x17, [x16, #576]
    abf8:	add	x16, x16, #0x240
    abfc:	br	x17

000000000000ac00 <dir_name@plt>:
    ac00:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac04:	ldr	x17, [x16, #584]
    ac08:	add	x16, x16, #0x248
    ac0c:	br	x17

000000000000ac10 <argp_fmtstream_puts@plt>:
    ac10:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac14:	ldr	x17, [x16, #592]
    ac18:	add	x16, x16, #0x250
    ac1c:	br	x17

000000000000ac20 <idpriv_temp_drop@plt>:
    ac20:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac24:	ldr	x17, [x16, #600]
    ac28:	add	x16, x16, #0x258
    ac2c:	br	x17

000000000000ac30 <sigemptyset@plt>:
    ac30:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac34:	ldr	x17, [x16, #608]
    ac38:	add	x16, x16, #0x260
    ac3c:	br	x17

000000000000ac40 <get_groff_preconv@plt>:
    ac40:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac44:	ldr	x17, [x16, #616]
    ac48:	add	x16, x16, #0x268
    ac4c:	br	x17

000000000000ac50 <futimens@plt>:
    ac50:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac54:	ldr	x17, [x16, #624]
    ac58:	add	x16, x16, #0x270
    ac5c:	br	x17

000000000000ac60 <strncmp@plt>:
    ac60:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac64:	ldr	x17, [x16, #632]
    ac68:	add	x16, x16, #0x278
    ac6c:	br	x17

000000000000ac70 <bindtextdomain@plt>:
    ac70:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac74:	ldr	x17, [x16, #640]
    ac78:	add	x16, x16, #0x280
    ac7c:	br	x17

000000000000ac80 <xsum@plt>:
    ac80:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac84:	ldr	x17, [x16, #648]
    ac88:	add	x16, x16, #0x288
    ac8c:	br	x17

000000000000ac90 <gl_list_nx_set_at@plt>:
    ac90:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ac94:	ldr	x17, [x16, #656]
    ac98:	add	x16, x16, #0x290
    ac9c:	br	x17

000000000000aca0 <fstatfs@plt>:
    aca0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aca4:	ldr	x17, [x16, #664]
    aca8:	add	x16, x16, #0x298
    acac:	br	x17

000000000000acb0 <memset@plt>:
    acb0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    acb4:	ldr	x17, [x16, #672]
    acb8:	add	x16, x16, #0x2a0
    acbc:	br	x17

000000000000acc0 <gettimeofday@plt>:
    acc0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    acc4:	ldr	x17, [x16, #680]
    acc8:	add	x16, x16, #0x2a8
    accc:	br	x17

000000000000acd0 <gl_map_nx_put@plt>:
    acd0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    acd4:	ldr	x17, [x16, #688]
    acd8:	add	x16, x16, #0x2b0
    acdc:	br	x17

000000000000ace0 <xmalloc@plt>:
    ace0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ace4:	ldr	x17, [x16, #696]
    ace8:	add	x16, x16, #0x2b8
    acec:	br	x17

000000000000acf0 <getpwnam@plt>:
    acf0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    acf4:	ldr	x17, [x16, #704]
    acf8:	add	x16, x16, #0x2c0
    acfc:	br	x17

000000000000ad00 <lstatat@plt>:
    ad00:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad04:	ldr	x17, [x16, #712]
    ad08:	add	x16, x16, #0x2c8
    ad0c:	br	x17

000000000000ad10 <xstrdup@plt>:
    ad10:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad14:	ldr	x17, [x16, #720]
    ad18:	add	x16, x16, #0x2d0
    ad1c:	br	x17

000000000000ad20 <sleep@plt>:
    ad20:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad24:	ldr	x17, [x16, #728]
    ad28:	add	x16, x16, #0x2d8
    ad2c:	br	x17

000000000000ad30 <same_name@plt>:
    ad30:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad34:	ldr	x17, [x16, #736]
    ad38:	add	x16, x16, #0x2e0
    ad3c:	br	x17

000000000000ad40 <strerror_r@plt>:
    ad40:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad44:	ldr	x17, [x16, #744]
    ad48:	add	x16, x16, #0x2e8
    ad4c:	br	x17

000000000000ad50 <gl_set_create_empty@plt>:
    ad50:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad54:	ldr	x17, [x16, #752]
    ad58:	add	x16, x16, #0x2f0
    ad5c:	br	x17

000000000000ad60 <gl_list_iterator_next@plt>:
    ad60:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad64:	ldr	x17, [x16, #760]
    ad68:	add	x16, x16, #0x2f8
    ad6c:	br	x17

000000000000ad70 <gl_list_nx_add_first@plt>:
    ad70:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad74:	ldr	x17, [x16, #768]
    ad78:	add	x16, x16, #0x300
    ad7c:	br	x17

000000000000ad80 <calloc@plt>:
    ad80:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad84:	ldr	x17, [x16, #776]
    ad88:	add	x16, x16, #0x308
    ad8c:	br	x17

000000000000ad90 <last_component@plt>:
    ad90:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ad94:	ldr	x17, [x16, #784]
    ad98:	add	x16, x16, #0x310
    ad9c:	br	x17

000000000000ada0 <xnrealloc@plt>:
    ada0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ada4:	ldr	x17, [x16, #792]
    ada8:	add	x16, x16, #0x318
    adac:	br	x17

000000000000adb0 <hard_locale@plt>:
    adb0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    adb4:	ldr	x17, [x16, #800]
    adb8:	add	x16, x16, #0x320
    adbc:	br	x17

000000000000adc0 <hash_insert_if_absent@plt>:
    adc0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    adc4:	ldr	x17, [x16, #808]
    adc8:	add	x16, x16, #0x328
    adcc:	br	x17

000000000000add0 <hash_get_n_buckets_used@plt>:
    add0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    add4:	ldr	x17, [x16, #816]
    add8:	add	x16, x16, #0x330
    addc:	br	x17

000000000000ade0 <strcasecmp@plt>:
    ade0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ade4:	ldr	x17, [x16, #824]
    ade8:	add	x16, x16, #0x338
    adec:	br	x17

000000000000adf0 <readdir@plt>:
    adf0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    adf4:	ldr	x17, [x16, #832]
    adf8:	add	x16, x16, #0x340
    adfc:	br	x17

000000000000ae00 <realloc@plt>:
    ae00:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae04:	ldr	x17, [x16, #840]
    ae08:	add	x16, x16, #0x348
    ae0c:	br	x17

000000000000ae10 <hash_initialize@plt>:
    ae10:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae14:	ldr	x17, [x16, #848]
    ae18:	add	x16, x16, #0x350
    ae1c:	br	x17

000000000000ae20 <try_tempname@plt>:
    ae20:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae24:	ldr	x17, [x16, #856]
    ae28:	add	x16, x16, #0x358
    ae2c:	br	x17

000000000000ae30 <get_stat_atime_ns@plt>:
    ae30:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae34:	ldr	x17, [x16, #864]
    ae38:	add	x16, x16, #0x360
    ae3c:	br	x17

000000000000ae40 <closedir@plt>:
    ae40:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae44:	ldr	x17, [x16, #872]
    ae48:	add	x16, x16, #0x368
    ae4c:	br	x17

000000000000ae50 <strerror@plt>:
    ae50:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae54:	ldr	x17, [x16, #880]
    ae58:	add	x16, x16, #0x370
    ae5c:	br	x17

000000000000ae60 <get_stat_mtime@plt>:
    ae60:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae64:	ldr	x17, [x16, #888]
    ae68:	add	x16, x16, #0x378
    ae6c:	br	x17

000000000000ae70 <pthread_mutex_init@plt>:
    ae70:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae74:	ldr	x17, [x16, #896]
    ae78:	add	x16, x16, #0x380
    ae7c:	br	x17

000000000000ae80 <close@plt>:
    ae80:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae84:	ldr	x17, [x16, #904]
    ae88:	add	x16, x16, #0x388
    ae8c:	br	x17

000000000000ae90 <gl_list_nx_create@plt>:
    ae90:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    ae94:	ldr	x17, [x16, #912]
    ae98:	add	x16, x16, #0x390
    ae9c:	br	x17

000000000000aea0 <sigaction@plt>:
    aea0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aea4:	ldr	x17, [x16, #920]
    aea8:	add	x16, x16, #0x398
    aeac:	br	x17

000000000000aeb0 <hash_lookup@plt>:
    aeb0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aeb4:	ldr	x17, [x16, #928]
    aeb8:	add	x16, x16, #0x3a0
    aebc:	br	x17

000000000000aec0 <strrchr@plt>:
    aec0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aec4:	ldr	x17, [x16, #936]
    aec8:	add	x16, x16, #0x3a8
    aecc:	br	x17

000000000000aed0 <gl_map_get@plt>:
    aed0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aed4:	ldr	x17, [x16, #944]
    aed8:	add	x16, x16, #0x3b0
    aedc:	br	x17

000000000000aee0 <xalloc_die@plt>:
    aee0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aee4:	ldr	x17, [x16, #952]
    aee8:	add	x16, x16, #0x3b8
    aeec:	br	x17

000000000000aef0 <memmem@plt>:
    aef0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aef4:	ldr	x17, [x16, #960]
    aef8:	add	x16, x16, #0x3c0
    aefc:	br	x17

000000000000af00 <__gmon_start__@plt>:
    af00:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af04:	ldr	x17, [x16, #968]
    af08:	add	x16, x16, #0x3c8
    af0c:	br	x17

000000000000af10 <get_stat_atime@plt>:
    af10:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af14:	ldr	x17, [x16, #976]
    af18:	add	x16, x16, #0x3d0
    af1c:	br	x17

000000000000af20 <drop_effective_privs@plt>:
    af20:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af24:	ldr	x17, [x16, #984]
    af28:	add	x16, x16, #0x3d8
    af2c:	br	x17

000000000000af30 <argp_fmtstream_point@plt>:
    af30:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af34:	ldr	x17, [x16, #992]
    af38:	add	x16, x16, #0x3e0
    af3c:	br	x17

000000000000af40 <btowc@plt>:
    af40:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af44:	ldr	x17, [x16, #1000]
    af48:	add	x16, x16, #0x3e8
    af4c:	br	x17

000000000000af50 <mkdtemp@plt>:
    af50:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af54:	ldr	x17, [x16, #1008]
    af58:	add	x16, x16, #0x3f0
    af5c:	br	x17

000000000000af60 <argp_fmtstream_printf@plt>:
    af60:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af64:	ldr	x17, [x16, #1016]
    af68:	add	x16, x16, #0x3f8
    af6c:	br	x17

000000000000af70 <abort@plt>:
    af70:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af74:	ldr	x17, [x16, #1024]
    af78:	add	x16, x16, #0x400
    af7c:	br	x17

000000000000af80 <_option_is_end@plt>:
    af80:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af84:	ldr	x17, [x16, #1032]
    af88:	add	x16, x16, #0x408
    af8c:	br	x17

000000000000af90 <_getopt_long_only_r@plt>:
    af90:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    af94:	ldr	x17, [x16, #1040]
    af98:	add	x16, x16, #0x410
    af9c:	br	x17

000000000000afa0 <hash_rehash@plt>:
    afa0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    afa4:	ldr	x17, [x16, #1048]
    afa8:	add	x16, x16, #0x418
    afac:	br	x17

000000000000afb0 <mbsinit@plt>:
    afb0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    afb4:	ldr	x17, [x16, #1056]
    afb8:	add	x16, x16, #0x420
    afbc:	br	x17

000000000000afc0 <access@plt>:
    afc0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    afc4:	ldr	x17, [x16, #1064]
    afc8:	add	x16, x16, #0x428
    afcc:	br	x17

000000000000afd0 <fdutimens@plt>:
    afd0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    afd4:	ldr	x17, [x16, #1072]
    afd8:	add	x16, x16, #0x430
    afdc:	br	x17

000000000000afe0 <gl_map_nx_getput@plt>:
    afe0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    afe4:	ldr	x17, [x16, #1080]
    afe8:	add	x16, x16, #0x438
    afec:	br	x17

000000000000aff0 <gl_map_free@plt>:
    aff0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    aff4:	ldr	x17, [x16, #1088]
    aff8:	add	x16, x16, #0x440
    affc:	br	x17

000000000000b000 <memcmp@plt>:
    b000:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b004:	ldr	x17, [x16, #1096]
    b008:	add	x16, x16, #0x448
    b00c:	br	x17

000000000000b010 <hash_pjw_bare@plt>:
    b010:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b014:	ldr	x17, [x16, #1104]
    b018:	add	x16, x16, #0x450
    b01c:	br	x17

000000000000b020 <textdomain@plt>:
    b020:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b024:	ldr	x17, [x16, #1112]
    b028:	add	x16, x16, #0x458
    b02c:	br	x17

000000000000b030 <gl_map_nx_create_empty@plt>:
    b030:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b034:	ldr	x17, [x16, #1120]
    b038:	add	x16, x16, #0x460
    b03c:	br	x17

000000000000b040 <strsep@plt>:
    b040:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b044:	ldr	x17, [x16, #1128]
    b048:	add	x16, x16, #0x468
    b04c:	br	x17

000000000000b050 <gl_list_iterator_free@plt>:
    b050:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b054:	ldr	x17, [x16, #1136]
    b058:	add	x16, x16, #0x470
    b05c:	br	x17

000000000000b060 <xmax@plt>:
    b060:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b064:	ldr	x17, [x16, #1144]
    b068:	add	x16, x16, #0x478
    b06c:	br	x17

000000000000b070 <strcmp@plt>:
    b070:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b074:	ldr	x17, [x16, #1152]
    b078:	add	x16, x16, #0x480
    b07c:	br	x17

000000000000b080 <_getopt_long_r@plt>:
    b080:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b084:	ldr	x17, [x16, #1160]
    b088:	add	x16, x16, #0x488
    b08c:	br	x17

000000000000b090 <__ctype_b_loc@plt>:
    b090:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b094:	ldr	x17, [x16, #1168]
    b098:	add	x16, x16, #0x490
    b09c:	br	x17

000000000000b0a0 <rmdir@plt>:
    b0a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b0a4:	ldr	x17, [x16, #1176]
    b0a8:	add	x16, x16, #0x498
    b0ac:	br	x17

000000000000b0b0 <seen_file@plt>:
    b0b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b0b4:	ldr	x17, [x16, #1184]
    b0b8:	add	x16, x16, #0x4a0
    b0bc:	br	x17

000000000000b0c0 <hash_get_max_bucket_length@plt>:
    b0c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b0c4:	ldr	x17, [x16, #1192]
    b0c8:	add	x16, x16, #0x4a8
    b0cc:	br	x17

000000000000b0d0 <gl_map_put@plt>:
    b0d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b0d4:	ldr	x17, [x16, #1200]
    b0d8:	add	x16, x16, #0x4b0
    b0dc:	br	x17

000000000000b0e0 <getline@plt>:
    b0e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b0e4:	ldr	x17, [x16, #1208]
    b0e8:	add	x16, x16, #0x4b8
    b0ec:	br	x17

000000000000b0f0 <dir_len@plt>:
    b0f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b0f4:	ldr	x17, [x16, #1216]
    b0f8:	add	x16, x16, #0x4c0
    b0fc:	br	x17

000000000000b100 <chdir@plt>:
    b100:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b104:	ldr	x17, [x16, #1224]
    b108:	add	x16, x16, #0x4c8
    b10c:	br	x17

000000000000b110 <dup_safer@plt>:
    b110:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b114:	ldr	x17, [x16, #1232]
    b118:	add	x16, x16, #0x4d0
    b11c:	br	x17

000000000000b120 <dgettext@plt>:
    b120:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b124:	ldr	x17, [x16, #1240]
    b128:	add	x16, x16, #0x4d8
    b12c:	br	x17

000000000000b130 <free@plt>:
    b130:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b134:	ldr	x17, [x16, #1248]
    b138:	add	x16, x16, #0x4e0
    b13c:	br	x17

000000000000b140 <renameat2@plt>:
    b140:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b144:	ldr	x17, [x16, #1256]
    b148:	add	x16, x16, #0x4e8
    b14c:	br	x17

000000000000b150 <argp_make_fmtstream@plt>:
    b150:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b154:	ldr	x17, [x16, #1264]
    b158:	add	x16, x16, #0x4f0
    b15c:	br	x17

000000000000b160 <__ctype_get_mb_cur_max@plt>:
    b160:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b164:	ldr	x17, [x16, #1272]
    b168:	add	x16, x16, #0x4f8
    b16c:	br	x17

000000000000b170 <getgid@plt>:
    b170:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b174:	ldr	x17, [x16, #1280]
    b178:	add	x16, x16, #0x500
    b17c:	br	x17

000000000000b180 <renameat@plt>:
    b180:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b184:	ldr	x17, [x16, #1288]
    b188:	add	x16, x16, #0x508
    b18c:	br	x17

000000000000b190 <mempcpy@plt>:
    b190:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b194:	ldr	x17, [x16, #1296]
    b198:	add	x16, x16, #0x510
    b19c:	br	x17

000000000000b1a0 <xasprintf@plt>:
    b1a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b1a4:	ldr	x17, [x16, #1304]
    b1a8:	add	x16, x16, #0x518
    b1ac:	br	x17

000000000000b1b0 <vasnprintf@plt>:
    b1b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b1b4:	ldr	x17, [x16, #1312]
    b1b8:	add	x16, x16, #0x520
    b1bc:	br	x17

000000000000b1c0 <gl_sortedlist_nx_add@plt>:
    b1c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b1c4:	ldr	x17, [x16, #1320]
    b1c8:	add	x16, x16, #0x528
    b1cc:	br	x17

000000000000b1d0 <printf_fetchargs@plt>:
    b1d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b1d4:	ldr	x17, [x16, #1328]
    b1d8:	add	x16, x16, #0x530
    b1dc:	br	x17

000000000000b1e0 <hash_get_n_buckets@plt>:
    b1e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b1e4:	ldr	x17, [x16, #1336]
    b1e8:	add	x16, x16, #0x538
    b1ec:	br	x17

000000000000b1f0 <nanosleep@plt>:
    b1f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b1f4:	ldr	x17, [x16, #1344]
    b1f8:	add	x16, x16, #0x540
    b1fc:	br	x17

000000000000b200 <vasprintf@plt>:
    b200:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b204:	ldr	x17, [x16, #1352]
    b208:	add	x16, x16, #0x548
    b20c:	br	x17

000000000000b210 <rpl_getopt_internal@plt>:
    b210:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b214:	ldr	x17, [x16, #1360]
    b218:	add	x16, x16, #0x550
    b21c:	br	x17

000000000000b220 <gl_list_nx_add_at@plt>:
    b220:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b224:	ldr	x17, [x16, #1368]
    b228:	add	x16, x16, #0x558
    b22c:	br	x17

000000000000b230 <strndup@plt>:
    b230:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b234:	ldr	x17, [x16, #1376]
    b238:	add	x16, x16, #0x560
    b23c:	br	x17

000000000000b240 <strspn@plt>:
    b240:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b244:	ldr	x17, [x16, #1384]
    b248:	add	x16, x16, #0x568
    b24c:	br	x17

000000000000b250 <gl_list_nx_add_before@plt>:
    b250:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b254:	ldr	x17, [x16, #1392]
    b258:	add	x16, x16, #0x570
    b25c:	br	x17

000000000000b260 <rpl_ioctl@plt>:
    b260:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b264:	ldr	x17, [x16, #1400]
    b268:	add	x16, x16, #0x578
    b26c:	br	x17

000000000000b270 <strchr@plt>:
    b270:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b274:	ldr	x17, [x16, #1408]
    b278:	add	x16, x16, #0x580
    b27c:	br	x17

000000000000b280 <areadlink_with_size@plt>:
    b280:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b284:	ldr	x17, [x16, #1416]
    b288:	add	x16, x16, #0x588
    b28c:	br	x17

000000000000b290 <argp_error@plt>:
    b290:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b294:	ldr	x17, [x16, #1424]
    b298:	add	x16, x16, #0x590
    b29c:	br	x17

000000000000b2a0 <memrchr@plt>:
    b2a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b2a4:	ldr	x17, [x16, #1432]
    b2a8:	add	x16, x16, #0x598
    b2ac:	br	x17

000000000000b2b0 <utimensat@plt>:
    b2b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b2b4:	ldr	x17, [x16, #1440]
    b2b8:	add	x16, x16, #0x5a0
    b2bc:	br	x17

000000000000b2c0 <pipeline_peekline@plt>:
    b2c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b2c4:	ldr	x17, [x16, #1448]
    b2c8:	add	x16, x16, #0x5a8
    b2cc:	br	x17

000000000000b2d0 <do_cleanups_sigsafe@plt>:
    b2d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b2d4:	ldr	x17, [x16, #1456]
    b2d8:	add	x16, x16, #0x5b0
    b2dc:	br	x17

000000000000b2e0 <fwrite@plt>:
    b2e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b2e4:	ldr	x17, [x16, #1464]
    b2e8:	add	x16, x16, #0x5b8
    b2ec:	br	x17

000000000000b2f0 <rotr_sz@plt>:
    b2f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b2f4:	ldr	x17, [x16, #1472]
    b2f8:	add	x16, x16, #0x5c0
    b2fc:	br	x17

000000000000b300 <rpl_fcntl@plt>:
    b300:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b304:	ldr	x17, [x16, #1480]
    b308:	add	x16, x16, #0x5c8
    b30c:	br	x17

000000000000b310 <fnmatch@plt>:
    b310:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b314:	ldr	x17, [x16, #1488]
    b318:	add	x16, x16, #0x5d0
    b31c:	br	x17

000000000000b320 <fcntl@plt>:
    b320:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b324:	ldr	x17, [x16, #1496]
    b328:	add	x16, x16, #0x5d8
    b32c:	br	x17

000000000000b330 <idpriv_drop@plt>:
    b330:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b334:	ldr	x17, [x16, #1504]
    b338:	add	x16, x16, #0x5e0
    b33c:	br	x17

000000000000b340 <rpl_regerror@plt>:
    b340:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b344:	ldr	x17, [x16, #1512]
    b348:	add	x16, x16, #0x5e8
    b34c:	br	x17

000000000000b350 <pthread_mutex_destroy@plt>:
    b350:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b354:	ldr	x17, [x16, #1520]
    b358:	add	x16, x16, #0x5f0
    b35c:	br	x17

000000000000b360 <strcpy@plt>:
    b360:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b364:	ldr	x17, [x16, #1528]
    b368:	add	x16, x16, #0x5f8
    b36c:	br	x17

000000000000b370 <hash_pjw@plt>:
    b370:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b374:	ldr	x17, [x16, #1536]
    b378:	add	x16, x16, #0x600
    b37c:	br	x17

000000000000b380 <_argp_input@plt>:
    b380:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b384:	ldr	x17, [x16, #1544]
    b388:	add	x16, x16, #0x608
    b38c:	br	x17

000000000000b390 <__lxstat@plt>:
    b390:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b394:	ldr	x17, [x16, #1552]
    b398:	add	x16, x16, #0x610
    b39c:	br	x17

000000000000b3a0 <dup_safer_flag@plt>:
    b3a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b3a4:	ldr	x17, [x16, #1560]
    b3a8:	add	x16, x16, #0x618
    b3ac:	br	x17

000000000000b3b0 <memchr@plt>:
    b3b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b3b4:	ldr	x17, [x16, #1568]
    b3b8:	add	x16, x16, #0x620
    b3bc:	br	x17

000000000000b3c0 <idpriv_temp_restore@plt>:
    b3c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b3c4:	ldr	x17, [x16, #1576]
    b3c8:	add	x16, x16, #0x628
    b3cc:	br	x17

000000000000b3d0 <new_string_list@plt>:
    b3d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b3d4:	ldr	x17, [x16, #1584]
    b3d8:	add	x16, x16, #0x630
    b3dc:	br	x17

000000000000b3e0 <getresgid@plt>:
    b3e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b3e4:	ldr	x17, [x16, #1592]
    b3e8:	add	x16, x16, #0x638
    b3ec:	br	x17

000000000000b3f0 <isatty@plt>:
    b3f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b3f4:	ldr	x17, [x16, #1600]
    b3f8:	add	x16, x16, #0x640
    b3fc:	br	x17

000000000000b400 <xzalloc@plt>:
    b400:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b404:	ldr	x17, [x16, #1608]
    b408:	add	x16, x16, #0x648
    b40c:	br	x17

000000000000b410 <xstrndup@plt>:
    b410:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b414:	ldr	x17, [x16, #1616]
    b418:	add	x16, x16, #0x650
    b41c:	br	x17

000000000000b420 <pthread_mutexattr_init@plt>:
    b420:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b424:	ldr	x17, [x16, #1624]
    b428:	add	x16, x16, #0x658
    b42c:	br	x17

000000000000b430 <gl_list_free@plt>:
    b430:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b434:	ldr	x17, [x16, #1632]
    b438:	add	x16, x16, #0x660
    b43c:	br	x17

000000000000b440 <gl_set_nx_create_empty@plt>:
    b440:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b444:	ldr	x17, [x16, #1640]
    b448:	add	x16, x16, #0x668
    b44c:	br	x17

000000000000b450 <setresuid@plt>:
    b450:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b454:	ldr	x17, [x16, #1648]
    b458:	add	x16, x16, #0x670
    b45c:	br	x17

000000000000b460 <utimes@plt>:
    b460:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b464:	ldr	x17, [x16, #1656]
    b468:	add	x16, x16, #0x678
    b46c:	br	x17

000000000000b470 <iswalnum@plt>:
    b470:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b474:	ldr	x17, [x16, #1664]
    b478:	add	x16, x16, #0x680
    b47c:	br	x17

000000000000b480 <__fxstat@plt>:
    b480:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b484:	ldr	x17, [x16, #1672]
    b488:	add	x16, x16, #0x688
    b48c:	br	x17

000000000000b490 <pthread_mutexattr_destroy@plt>:
    b490:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b494:	ldr	x17, [x16, #1680]
    b498:	add	x16, x16, #0x690
    b49c:	br	x17

000000000000b4a0 <strchrnul@plt>:
    b4a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b4a4:	ldr	x17, [x16, #1688]
    b4a8:	add	x16, x16, #0x698
    b4ac:	br	x17

000000000000b4b0 <strstr@plt>:
    b4b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b4b4:	ldr	x17, [x16, #1696]
    b4b8:	add	x16, x16, #0x6a0
    b4bc:	br	x17

000000000000b4c0 <_argp_fmtstream_ensure@plt>:
    b4c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b4c4:	ldr	x17, [x16, #1704]
    b4c8:	add	x16, x16, #0x6a8
    b4cc:	br	x17

000000000000b4d0 <argp_state_help@plt>:
    b4d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b4d4:	ldr	x17, [x16, #1712]
    b4d8:	add	x16, x16, #0x6b0
    b4dc:	br	x17

000000000000b4e0 <_option_is_short@plt>:
    b4e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b4e4:	ldr	x17, [x16, #1720]
    b4e8:	add	x16, x16, #0x6b8
    b4ec:	br	x17

000000000000b4f0 <gl_map_create_empty@plt>:
    b4f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b4f4:	ldr	x17, [x16, #1728]
    b4f8:	add	x16, x16, #0x6c0
    b4fc:	br	x17

000000000000b500 <pthread_rwlockattr_destroy@plt>:
    b500:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b504:	ldr	x17, [x16, #1736]
    b508:	add	x16, x16, #0x6c8
    b50c:	br	x17

000000000000b510 <vsnprintf@plt>:
    b510:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b514:	ldr	x17, [x16, #1744]
    b518:	add	x16, x16, #0x6d0
    b51c:	br	x17

000000000000b520 <argp_fmtstream_free@plt>:
    b520:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b524:	ldr	x17, [x16, #1752]
    b528:	add	x16, x16, #0x6d8
    b52c:	br	x17

000000000000b530 <get_locale_charset@plt>:
    b530:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b534:	ldr	x17, [x16, #1760]
    b538:	add	x16, x16, #0x6e0
    b53c:	br	x17

000000000000b540 <xvasprintf@plt>:
    b540:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b544:	ldr	x17, [x16, #1768]
    b548:	add	x16, x16, #0x6e8
    b54c:	br	x17

000000000000b550 <fputs_unlocked@plt>:
    b550:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b554:	ldr	x17, [x16, #1776]
    b558:	add	x16, x16, #0x6f0
    b55c:	br	x17

000000000000b560 <gl_list_create_empty@plt>:
    b560:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b564:	ldr	x17, [x16, #1784]
    b568:	add	x16, x16, #0x6f8
    b56c:	br	x17

000000000000b570 <sigaddset@plt>:
    b570:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b574:	ldr	x17, [x16, #1792]
    b578:	add	x16, x16, #0x700
    b57c:	br	x17

000000000000b580 <pathsearch_executable@plt>:
    b580:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b584:	ldr	x17, [x16, #1800]
    b588:	add	x16, x16, #0x708
    b58c:	br	x17

000000000000b590 <towupper@plt>:
    b590:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b594:	ldr	x17, [x16, #1808]
    b598:	add	x16, x16, #0x710
    b59c:	br	x17

000000000000b5a0 <gl_set_nx_add@plt>:
    b5a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b5a4:	ldr	x17, [x16, #1816]
    b5a8:	add	x16, x16, #0x718
    b5ac:	br	x17

000000000000b5b0 <argp_fmtstream_write@plt>:
    b5b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b5b4:	ldr	x17, [x16, #1824]
    b5b8:	add	x16, x16, #0x720
    b5bc:	br	x17

000000000000b5c0 <fd_safer_flag@plt>:
    b5c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b5c4:	ldr	x17, [x16, #1832]
    b5c8:	add	x16, x16, #0x728
    b5cc:	br	x17

000000000000b5d0 <get_stat_mtime_ns@plt>:
    b5d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b5d4:	ldr	x17, [x16, #1840]
    b5d8:	add	x16, x16, #0x730
    b5dc:	br	x17

000000000000b5e0 <xmemdup@plt>:
    b5e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b5e4:	ldr	x17, [x16, #1848]
    b5e8:	add	x16, x16, #0x738
    b5ec:	br	x17

000000000000b5f0 <strcspn@plt>:
    b5f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b5f4:	ldr	x17, [x16, #1856]
    b5f8:	add	x16, x16, #0x740
    b5fc:	br	x17

000000000000b600 <_getopt_internal_r@plt>:
    b600:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b604:	ldr	x17, [x16, #1864]
    b608:	add	x16, x16, #0x748
    b60c:	br	x17

000000000000b610 <vfprintf@plt>:
    b610:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b614:	ldr	x17, [x16, #1872]
    b618:	add	x16, x16, #0x750
    b61c:	br	x17

000000000000b620 <openat@plt>:
    b620:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b624:	ldr	x17, [x16, #1880]
    b628:	add	x16, x16, #0x758
    b62c:	br	x17

000000000000b630 <__assert_fail@plt>:
    b630:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b634:	ldr	x17, [x16, #1888]
    b638:	add	x16, x16, #0x760
    b63c:	br	x17

000000000000b640 <__errno_location@plt>:
    b640:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b644:	ldr	x17, [x16, #1896]
    b648:	add	x16, x16, #0x768
    b64c:	br	x17

000000000000b650 <tolower@plt>:
    b650:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b654:	ldr	x17, [x16, #1904]
    b658:	add	x16, x16, #0x770
    b65c:	br	x17

000000000000b660 <setresgid@plt>:
    b660:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b664:	ldr	x17, [x16, #1912]
    b668:	add	x16, x16, #0x778
    b66c:	br	x17

000000000000b670 <getenv@plt>:
    b670:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b674:	ldr	x17, [x16, #1920]
    b678:	add	x16, x16, #0x780
    b67c:	br	x17

000000000000b680 <locale_charset@plt>:
    b680:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b684:	ldr	x17, [x16, #1928]
    b688:	add	x16, x16, #0x788
    b68c:	br	x17

000000000000b690 <__xstat@plt>:
    b690:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b694:	ldr	x17, [x16, #1936]
    b698:	add	x16, x16, #0x790
    b69c:	br	x17

000000000000b6a0 <pthread_mutex_lock@plt>:
    b6a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b6a4:	ldr	x17, [x16, #1944]
    b6a8:	add	x16, x16, #0x798
    b6ac:	br	x17

000000000000b6b0 <printf_parse@plt>:
    b6b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b6b4:	ldr	x17, [x16, #1952]
    b6b8:	add	x16, x16, #0x7a0
    b6bc:	br	x17

000000000000b6c0 <fd_safer@plt>:
    b6c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b6c4:	ldr	x17, [x16, #1960]
    b6c8:	add	x16, x16, #0x7a8
    b6cc:	br	x17

000000000000b6d0 <pthread_mutex_unlock@plt>:
    b6d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b6d4:	ldr	x17, [x16, #1968]
    b6d8:	add	x16, x16, #0x7b0
    b6dc:	br	x17

000000000000b6e0 <argp_fmtstream_set_wmargin@plt>:
    b6e0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b6e4:	ldr	x17, [x16, #1976]
    b6e8:	add	x16, x16, #0x7b8
    b6ec:	br	x17

000000000000b6f0 <unlink@plt>:
    b6f0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b6f4:	ldr	x17, [x16, #1984]
    b6f8:	add	x16, x16, #0x7c0
    b6fc:	br	x17

000000000000b700 <gettext@plt>:
    b700:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b704:	ldr	x17, [x16, #1992]
    b708:	add	x16, x16, #0x7c8
    b70c:	br	x17

000000000000b710 <mkdir@plt>:
    b710:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b714:	ldr	x17, [x16, #2000]
    b718:	add	x16, x16, #0x7d0
    b71c:	br	x17

000000000000b720 <towlower@plt>:
    b720:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b724:	ldr	x17, [x16, #2008]
    b728:	add	x16, x16, #0x7d8
    b72c:	br	x17

000000000000b730 <gettime@plt>:
    b730:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b734:	ldr	x17, [x16, #2016]
    b738:	add	x16, x16, #0x7e0
    b73c:	br	x17

000000000000b740 <rpl_re_compile_fastmap@plt>:
    b740:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b744:	ldr	x17, [x16, #2024]
    b748:	add	x16, x16, #0x7e8
    b74c:	br	x17

000000000000b750 <fprintf@plt>:
    b750:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b754:	ldr	x17, [x16, #2032]
    b758:	add	x16, x16, #0x7f0
    b75c:	br	x17

000000000000b760 <hash_get_n_entries@plt>:
    b760:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b764:	ldr	x17, [x16, #2040]
    b768:	add	x16, x16, #0x7f8
    b76c:	br	x17

000000000000b770 <xnmalloc@plt>:
    b770:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b774:	ldr	x17, [x16, #2048]
    b778:	add	x16, x16, #0x800
    b77c:	br	x17

000000000000b780 <ioctl@plt>:
    b780:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b784:	ldr	x17, [x16, #2056]
    b788:	add	x16, x16, #0x808
    b78c:	br	x17

000000000000b790 <setlocale@plt>:
    b790:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b794:	ldr	x17, [x16, #2064]
    b798:	add	x16, x16, #0x810
    b79c:	br	x17

000000000000b7a0 <__fxstatat@plt>:
    b7a0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b7a4:	ldr	x17, [x16, #2072]
    b7a8:	add	x16, x16, #0x818
    b7ac:	br	x17

000000000000b7b0 <wcrtomb@plt>:
    b7b0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b7b4:	ldr	x17, [x16, #2080]
    b7b8:	add	x16, x16, #0x820
    b7bc:	br	x17

000000000000b7c0 <xsum4@plt>:
    b7c0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b7c4:	ldr	x17, [x16, #2088]
    b7c8:	add	x16, x16, #0x828
    b7cc:	br	x17

000000000000b7d0 <xgetcwd@plt>:
    b7d0:	adrp	x16, 5d000 <base_len@@Base+0x455fc>
    b7d4:	ldr	x17, [x16, #2096]
    b7d8:	add	x16, x16, #0x830
    b7dc:	br	x17

Disassembly of section .text:

000000000000b7e0 <appendstr@@Base-0x190>:
    b7e0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    b7e4:	ldr	x0, [x0, #3904]
    b7e8:	cbz	x0, b7f0 <xgetcwd@plt+0x20>
    b7ec:	b	af00 <__gmon_start__@plt>
    b7f0:	ret
    b7f4:	stp	x29, x30, [sp, #-32]!
    b7f8:	mov	x29, sp
    b7fc:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b800:	add	x0, x0, #0x398
    b804:	str	x0, [sp, #24]
    b808:	ldr	x0, [sp, #24]
    b80c:	str	x0, [sp, #24]
    b810:	ldr	x1, [sp, #24]
    b814:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b818:	add	x0, x0, #0x398
    b81c:	cmp	x1, x0
    b820:	b.eq	b858 <xgetcwd@plt+0x88>  // b.none
    b824:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    b828:	ldr	x0, [x0, #3776]
    b82c:	str	x0, [sp, #16]
    b830:	ldr	x0, [sp, #16]
    b834:	str	x0, [sp, #16]
    b838:	ldr	x0, [sp, #16]
    b83c:	cmp	x0, #0x0
    b840:	b.eq	b85c <xgetcwd@plt+0x8c>  // b.none
    b844:	ldr	x1, [sp, #16]
    b848:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b84c:	add	x0, x0, #0x398
    b850:	blr	x1
    b854:	b	b85c <xgetcwd@plt+0x8c>
    b858:	nop
    b85c:	ldp	x29, x30, [sp], #32
    b860:	ret
    b864:	stp	x29, x30, [sp, #-48]!
    b868:	mov	x29, sp
    b86c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b870:	add	x0, x0, #0x398
    b874:	str	x0, [sp, #40]
    b878:	ldr	x0, [sp, #40]
    b87c:	str	x0, [sp, #40]
    b880:	ldr	x1, [sp, #40]
    b884:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b888:	add	x0, x0, #0x398
    b88c:	sub	x0, x1, x0
    b890:	asr	x0, x0, #3
    b894:	lsr	x1, x0, #63
    b898:	add	x0, x1, x0
    b89c:	asr	x0, x0, #1
    b8a0:	str	x0, [sp, #32]
    b8a4:	ldr	x0, [sp, #32]
    b8a8:	cmp	x0, #0x0
    b8ac:	b.eq	b8e8 <xgetcwd@plt+0x118>  // b.none
    b8b0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    b8b4:	ldr	x0, [x0, #4024]
    b8b8:	str	x0, [sp, #24]
    b8bc:	ldr	x0, [sp, #24]
    b8c0:	str	x0, [sp, #24]
    b8c4:	ldr	x0, [sp, #24]
    b8c8:	cmp	x0, #0x0
    b8cc:	b.eq	b8ec <xgetcwd@plt+0x11c>  // b.none
    b8d0:	ldr	x2, [sp, #24]
    b8d4:	ldr	x1, [sp, #32]
    b8d8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b8dc:	add	x0, x0, #0x398
    b8e0:	blr	x2
    b8e4:	b	b8ec <xgetcwd@plt+0x11c>
    b8e8:	nop
    b8ec:	ldp	x29, x30, [sp], #48
    b8f0:	ret
    b8f4:	stp	x29, x30, [sp, #-16]!
    b8f8:	mov	x29, sp
    b8fc:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b900:	add	x0, x0, #0x398
    b904:	ldrb	w0, [x0]
    b908:	and	x0, x0, #0xff
    b90c:	cmp	x0, #0x0
    b910:	b.ne	b94c <xgetcwd@plt+0x17c>  // b.any
    b914:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    b918:	ldr	x0, [x0, #3800]
    b91c:	cmp	x0, #0x0
    b920:	b.eq	b934 <xgetcwd@plt+0x164>  // b.none
    b924:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    b928:	add	x0, x0, #0x838
    b92c:	ldr	x0, [x0]
    b930:	bl	a980 <__cxa_finalize@plt>
    b934:	bl	b7f4 <xgetcwd@plt+0x24>
    b938:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    b93c:	add	x0, x0, #0x398
    b940:	mov	w1, #0x1                   	// #1
    b944:	strb	w1, [x0]
    b948:	b	b950 <xgetcwd@plt+0x180>
    b94c:	nop
    b950:	ldp	x29, x30, [sp], #16
    b954:	ret
    b958:	stp	x29, x30, [sp, #-16]!
    b95c:	mov	x29, sp
    b960:	bl	b864 <xgetcwd@plt+0x94>
    b964:	nop
    b968:	ldp	x29, x30, [sp], #16
    b96c:	ret

000000000000b970 <appendstr@@Base>:
    b970:	stp	x29, x30, [sp, #-288]!
    b974:	mov	x29, sp
    b978:	str	x0, [sp, #24]
    b97c:	str	x1, [sp, #232]
    b980:	str	x2, [sp, #240]
    b984:	str	x3, [sp, #248]
    b988:	str	x4, [sp, #256]
    b98c:	str	x5, [sp, #264]
    b990:	str	x6, [sp, #272]
    b994:	str	x7, [sp, #280]
    b998:	str	q0, [sp, #96]
    b99c:	str	q1, [sp, #112]
    b9a0:	str	q2, [sp, #128]
    b9a4:	str	q3, [sp, #144]
    b9a8:	str	q4, [sp, #160]
    b9ac:	str	q5, [sp, #176]
    b9b0:	str	q6, [sp, #192]
    b9b4:	str	q7, [sp, #208]
    b9b8:	ldr	x0, [sp, #24]
    b9bc:	cmp	x0, #0x0
    b9c0:	b.eq	b9d0 <appendstr@@Base+0x60>  // b.none
    b9c4:	ldr	x0, [sp, #24]
    b9c8:	bl	a820 <strlen@plt>
    b9cc:	b	b9d4 <appendstr@@Base+0x64>
    b9d0:	mov	x0, #0x0                   	// #0
    b9d4:	str	x0, [sp, #72]
    b9d8:	add	x0, sp, #0x120
    b9dc:	str	x0, [sp, #32]
    b9e0:	add	x0, sp, #0x120
    b9e4:	str	x0, [sp, #40]
    b9e8:	add	x0, sp, #0xe0
    b9ec:	str	x0, [sp, #48]
    b9f0:	mov	w0, #0xffffffc8            	// #-56
    b9f4:	str	w0, [sp, #56]
    b9f8:	mov	w0, #0xffffff80            	// #-128
    b9fc:	str	w0, [sp, #60]
    ba00:	ldr	x0, [sp, #72]
    ba04:	add	x0, x0, #0x1
    ba08:	str	x0, [sp, #88]
    ba0c:	b	ba28 <appendstr@@Base+0xb8>
    ba10:	ldr	x0, [sp, #64]
    ba14:	bl	a820 <strlen@plt>
    ba18:	mov	x1, x0
    ba1c:	ldr	x0, [sp, #88]
    ba20:	add	x0, x0, x1
    ba24:	str	x0, [sp, #88]
    ba28:	ldr	w1, [sp, #56]
    ba2c:	ldr	x0, [sp, #32]
    ba30:	cmp	w1, #0x0
    ba34:	b.lt	ba48 <appendstr@@Base+0xd8>  // b.tstop
    ba38:	add	x1, x0, #0xf
    ba3c:	and	x1, x1, #0xfffffffffffffff8
    ba40:	str	x1, [sp, #32]
    ba44:	b	ba78 <appendstr@@Base+0x108>
    ba48:	add	w2, w1, #0x8
    ba4c:	str	w2, [sp, #56]
    ba50:	ldr	w2, [sp, #56]
    ba54:	cmp	w2, #0x0
    ba58:	b.le	ba6c <appendstr@@Base+0xfc>
    ba5c:	add	x1, x0, #0xf
    ba60:	and	x1, x1, #0xfffffffffffffff8
    ba64:	str	x1, [sp, #32]
    ba68:	b	ba78 <appendstr@@Base+0x108>
    ba6c:	ldr	x2, [sp, #40]
    ba70:	sxtw	x0, w1
    ba74:	add	x0, x2, x0
    ba78:	ldr	x0, [x0]
    ba7c:	str	x0, [sp, #64]
    ba80:	ldr	x0, [sp, #64]
    ba84:	cmp	x0, #0x0
    ba88:	b.ne	ba10 <appendstr@@Base+0xa0>  // b.any
    ba8c:	ldr	x1, [sp, #88]
    ba90:	ldr	x0, [sp, #24]
    ba94:	bl	abf0 <xrealloc@plt>
    ba98:	str	x0, [sp, #24]
    ba9c:	ldr	x1, [sp, #24]
    baa0:	ldr	x0, [sp, #72]
    baa4:	add	x0, x1, x0
    baa8:	str	x0, [sp, #80]
    baac:	add	x0, sp, #0x120
    bab0:	str	x0, [sp, #32]
    bab4:	add	x0, sp, #0x120
    bab8:	str	x0, [sp, #40]
    babc:	add	x0, sp, #0xe0
    bac0:	str	x0, [sp, #48]
    bac4:	mov	w0, #0xffffffc8            	// #-56
    bac8:	str	w0, [sp, #56]
    bacc:	mov	w0, #0xffffff80            	// #-128
    bad0:	str	w0, [sp, #60]
    bad4:	b	bafc <appendstr@@Base+0x18c>
    bad8:	ldr	x1, [sp, #64]
    badc:	ldr	x0, [sp, #80]
    bae0:	bl	b360 <strcpy@plt>
    bae4:	ldr	x0, [sp, #64]
    bae8:	bl	a820 <strlen@plt>
    baec:	mov	x1, x0
    baf0:	ldr	x0, [sp, #80]
    baf4:	add	x0, x0, x1
    baf8:	str	x0, [sp, #80]
    bafc:	ldr	w1, [sp, #56]
    bb00:	ldr	x0, [sp, #32]
    bb04:	cmp	w1, #0x0
    bb08:	b.lt	bb1c <appendstr@@Base+0x1ac>  // b.tstop
    bb0c:	add	x1, x0, #0xf
    bb10:	and	x1, x1, #0xfffffffffffffff8
    bb14:	str	x1, [sp, #32]
    bb18:	b	bb4c <appendstr@@Base+0x1dc>
    bb1c:	add	w2, w1, #0x8
    bb20:	str	w2, [sp, #56]
    bb24:	ldr	w2, [sp, #56]
    bb28:	cmp	w2, #0x0
    bb2c:	b.le	bb40 <appendstr@@Base+0x1d0>
    bb30:	add	x1, x0, #0xf
    bb34:	and	x1, x1, #0xfffffffffffffff8
    bb38:	str	x1, [sp, #32]
    bb3c:	b	bb4c <appendstr@@Base+0x1dc>
    bb40:	ldr	x2, [sp, #40]
    bb44:	sxtw	x0, w1
    bb48:	add	x0, x2, x0
    bb4c:	ldr	x0, [x0]
    bb50:	str	x0, [sp, #64]
    bb54:	ldr	x0, [sp, #64]
    bb58:	cmp	x0, #0x0
    bb5c:	b.ne	bad8 <appendstr@@Base+0x168>  // b.any
    bb60:	ldr	x0, [sp, #24]
    bb64:	ldp	x29, x30, [sp], #288
    bb68:	ret
    bb6c:	stp	x29, x30, [sp, #-320]!
    bb70:	mov	x29, sp
    bb74:	str	w0, [sp, #28]
    bb78:	mov	w0, #0x1                   	// #1
    bb7c:	bl	b2d0 <do_cleanups_sigsafe@plt>
    bb80:	add	x0, sp, #0xa8
    bb84:	mov	x2, #0x98                  	// #152
    bb88:	mov	w1, #0x0                   	// #0
    bb8c:	bl	acb0 <memset@plt>
    bb90:	str	xzr, [sp, #168]
    bb94:	add	x0, sp, #0xa8
    bb98:	add	x0, x0, #0x8
    bb9c:	bl	ac30 <sigemptyset@plt>
    bba0:	str	wzr, [sp, #304]
    bba4:	add	x0, sp, #0xa8
    bba8:	mov	x2, #0x0                   	// #0
    bbac:	mov	x1, x0
    bbb0:	ldr	w0, [sp, #28]
    bbb4:	bl	aea0 <sigaction@plt>
    bbb8:	cmp	w0, #0x0
    bbbc:	b.eq	bbc8 <appendstr@@Base+0x258>  // b.none
    bbc0:	mov	w0, #0x2                   	// #2
    bbc4:	bl	a7d0 <_exit@plt>
    bbc8:	add	x0, sp, #0x28
    bbcc:	bl	ac30 <sigemptyset@plt>
    bbd0:	cmp	w0, #0x0
    bbd4:	b.ne	bc08 <appendstr@@Base+0x298>  // b.any
    bbd8:	add	x0, sp, #0x28
    bbdc:	ldr	w1, [sp, #28]
    bbe0:	bl	b570 <sigaddset@plt>
    bbe4:	cmp	w0, #0x0
    bbe8:	b.ne	bc08 <appendstr@@Base+0x298>  // b.any
    bbec:	add	x0, sp, #0x28
    bbf0:	mov	x2, #0x0                   	// #0
    bbf4:	mov	x1, x0
    bbf8:	mov	w0, #0x1                   	// #1
    bbfc:	bl	a8c0 <sigprocmask@plt>
    bc00:	cmp	w0, #0x0
    bc04:	b.eq	bc10 <appendstr@@Base+0x2a0>  // b.none
    bc08:	mov	w0, #0x2                   	// #2
    bc0c:	bl	a7d0 <_exit@plt>
    bc10:	bl	ab00 <getpid@plt>
    bc14:	ldr	w1, [sp, #28]
    bc18:	bl	aa20 <kill@plt>
    bc1c:	bl	af70 <abort@plt>
    bc20:	stp	x29, x30, [sp, #-192]!
    bc24:	mov	x29, sp
    bc28:	str	w0, [sp, #28]
    bc2c:	str	x1, [sp, #16]
    bc30:	ldr	x2, [sp, #16]
    bc34:	mov	x1, #0x0                   	// #0
    bc38:	ldr	w0, [sp, #28]
    bc3c:	bl	aea0 <sigaction@plt>
    bc40:	cmp	w0, #0x0
    bc44:	b.eq	bc50 <appendstr@@Base+0x2e0>  // b.none
    bc48:	mov	w0, #0xffffffff            	// #-1
    bc4c:	b	bca8 <appendstr@@Base+0x338>
    bc50:	ldr	x0, [sp, #16]
    bc54:	ldr	x0, [x0]
    bc58:	cmp	x0, #0x0
    bc5c:	b.ne	bca4 <appendstr@@Base+0x334>  // b.any
    bc60:	add	x0, sp, #0x28
    bc64:	mov	x2, #0x98                  	// #152
    bc68:	mov	w1, #0x0                   	// #0
    bc6c:	bl	acb0 <memset@plt>
    bc70:	adrp	x0, b000 <memcmp@plt>
    bc74:	add	x0, x0, #0xb6c
    bc78:	str	x0, [sp, #40]
    bc7c:	add	x0, sp, #0x28
    bc80:	add	x0, x0, #0x8
    bc84:	bl	ac30 <sigemptyset@plt>
    bc88:	str	wzr, [sp, #176]
    bc8c:	add	x0, sp, #0x28
    bc90:	ldr	x2, [sp, #16]
    bc94:	mov	x1, x0
    bc98:	ldr	w0, [sp, #28]
    bc9c:	bl	aea0 <sigaction@plt>
    bca0:	b	bca8 <appendstr@@Base+0x338>
    bca4:	mov	w0, #0x0                   	// #0
    bca8:	ldp	x29, x30, [sp], #192
    bcac:	ret
    bcb0:	stp	x29, x30, [sp, #-16]!
    bcb4:	mov	x29, sp
    bcb8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bcbc:	add	x1, x0, #0x3a0
    bcc0:	mov	w0, #0x1                   	// #1
    bcc4:	bl	bc20 <appendstr@@Base+0x2b0>
    bcc8:	cmp	w0, #0x0
    bccc:	b.ne	bd00 <appendstr@@Base+0x390>  // b.any
    bcd0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bcd4:	add	x1, x0, #0x438
    bcd8:	mov	w0, #0x2                   	// #2
    bcdc:	bl	bc20 <appendstr@@Base+0x2b0>
    bce0:	cmp	w0, #0x0
    bce4:	b.ne	bd00 <appendstr@@Base+0x390>  // b.any
    bce8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bcec:	add	x1, x0, #0x4d0
    bcf0:	mov	w0, #0xf                   	// #15
    bcf4:	bl	bc20 <appendstr@@Base+0x2b0>
    bcf8:	cmp	w0, #0x0
    bcfc:	b.eq	bd08 <appendstr@@Base+0x398>  // b.none
    bd00:	mov	w0, #0xffffffff            	// #-1
    bd04:	b	bd0c <appendstr@@Base+0x39c>
    bd08:	mov	w0, #0x0                   	// #0
    bd0c:	ldp	x29, x30, [sp], #16
    bd10:	ret
    bd14:	stp	x29, x30, [sp, #-192]!
    bd18:	mov	x29, sp
    bd1c:	str	w0, [sp, #28]
    bd20:	str	x1, [sp, #16]
    bd24:	add	x0, sp, #0x28
    bd28:	mov	x2, x0
    bd2c:	mov	x1, #0x0                   	// #0
    bd30:	ldr	w0, [sp, #28]
    bd34:	bl	aea0 <sigaction@plt>
    bd38:	cmp	w0, #0x0
    bd3c:	b.eq	bd48 <appendstr@@Base+0x3d8>  // b.none
    bd40:	mov	w0, #0xffffffff            	// #-1
    bd44:	b	bd74 <appendstr@@Base+0x404>
    bd48:	ldr	x1, [sp, #40]
    bd4c:	adrp	x0, b000 <memcmp@plt>
    bd50:	add	x0, x0, #0xb6c
    bd54:	cmp	x1, x0
    bd58:	b.ne	bd70 <appendstr@@Base+0x400>  // b.any
    bd5c:	mov	x2, #0x0                   	// #0
    bd60:	ldr	x1, [sp, #16]
    bd64:	ldr	w0, [sp, #28]
    bd68:	bl	aea0 <sigaction@plt>
    bd6c:	b	bd74 <appendstr@@Base+0x404>
    bd70:	mov	w0, #0x0                   	// #0
    bd74:	ldp	x29, x30, [sp], #192
    bd78:	ret
    bd7c:	stp	x29, x30, [sp, #-32]!
    bd80:	mov	x29, sp
    bd84:	str	x19, [sp, #16]
    bd88:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bd8c:	add	x1, x0, #0x3a0
    bd90:	mov	w0, #0x1                   	// #1
    bd94:	bl	bd14 <appendstr@@Base+0x3a4>
    bd98:	mov	w19, w0
    bd9c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bda0:	add	x1, x0, #0x438
    bda4:	mov	w0, #0x2                   	// #2
    bda8:	bl	bd14 <appendstr@@Base+0x3a4>
    bdac:	orr	w19, w19, w0
    bdb0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bdb4:	add	x1, x0, #0x4d0
    bdb8:	mov	w0, #0xf                   	// #15
    bdbc:	bl	bd14 <appendstr@@Base+0x3a4>
    bdc0:	orr	w0, w19, w0
    bdc4:	cmp	w0, #0x0
    bdc8:	b.eq	bdd4 <appendstr@@Base+0x464>  // b.none
    bdcc:	mov	w0, #0xffffffff            	// #-1
    bdd0:	b	bdd8 <appendstr@@Base+0x468>
    bdd4:	mov	w0, #0x0                   	// #0
    bdd8:	ldr	x19, [sp, #16]
    bddc:	ldp	x29, x30, [sp], #32
    bde0:	ret

000000000000bde4 <do_cleanups_sigsafe@@Base>:
    bde4:	stp	x29, x30, [sp, #-48]!
    bde8:	mov	x29, sp
    bdec:	str	w0, [sp, #28]
    bdf0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bdf4:	add	x0, x0, #0x574
    bdf8:	ldr	w1, [x0]
    bdfc:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    be00:	add	x0, x0, #0x570
    be04:	ldr	w0, [x0]
    be08:	cmp	w1, w0
    be0c:	b.ls	be30 <do_cleanups_sigsafe@@Base+0x4c>  // b.plast
    be10:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    be14:	add	x3, x0, #0x408
    be18:	mov	w2, #0xa9                  	// #169
    be1c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    be20:	add	x1, x0, #0x3d0
    be24:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    be28:	add	x0, x0, #0x3e0
    be2c:	bl	b630 <__assert_fail@plt>
    be30:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    be34:	add	x0, x0, #0x574
    be38:	ldr	w0, [x0]
    be3c:	str	w0, [sp, #44]
    be40:	b	bef8 <do_cleanups_sigsafe@@Base+0x114>
    be44:	ldr	w0, [sp, #28]
    be48:	cmp	w0, #0x0
    be4c:	b.eq	be88 <do_cleanups_sigsafe@@Base+0xa4>  // b.none
    be50:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    be54:	add	x0, x0, #0x568
    be58:	ldr	x2, [x0]
    be5c:	ldr	w0, [sp, #44]
    be60:	sub	w0, w0, #0x1
    be64:	mov	w1, w0
    be68:	mov	x0, x1
    be6c:	lsl	x0, x0, #1
    be70:	add	x0, x0, x1
    be74:	lsl	x0, x0, #3
    be78:	add	x0, x2, x0
    be7c:	ldr	w0, [x0, #16]
    be80:	cmp	w0, #0x0
    be84:	b.eq	beec <do_cleanups_sigsafe@@Base+0x108>  // b.none
    be88:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    be8c:	add	x0, x0, #0x568
    be90:	ldr	x2, [x0]
    be94:	ldr	w0, [sp, #44]
    be98:	sub	w0, w0, #0x1
    be9c:	mov	w1, w0
    bea0:	mov	x0, x1
    bea4:	lsl	x0, x0, #1
    bea8:	add	x0, x0, x1
    beac:	lsl	x0, x0, #3
    beb0:	add	x0, x2, x0
    beb4:	ldr	x2, [x0]
    beb8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bebc:	add	x0, x0, #0x568
    bec0:	ldr	x3, [x0]
    bec4:	ldr	w0, [sp, #44]
    bec8:	sub	w0, w0, #0x1
    becc:	mov	w1, w0
    bed0:	mov	x0, x1
    bed4:	lsl	x0, x0, #1
    bed8:	add	x0, x0, x1
    bedc:	lsl	x0, x0, #3
    bee0:	add	x0, x3, x0
    bee4:	ldr	x0, [x0, #8]
    bee8:	blr	x2
    beec:	ldr	w0, [sp, #44]
    bef0:	sub	w0, w0, #0x1
    bef4:	str	w0, [sp, #44]
    bef8:	ldr	w0, [sp, #44]
    befc:	cmp	w0, #0x0
    bf00:	b.ne	be44 <do_cleanups_sigsafe@@Base+0x60>  // b.any
    bf04:	nop
    bf08:	nop
    bf0c:	ldp	x29, x30, [sp], #48
    bf10:	ret

000000000000bf14 <do_cleanups@@Base>:
    bf14:	stp	x29, x30, [sp, #-16]!
    bf18:	mov	x29, sp
    bf1c:	mov	w0, #0x0                   	// #0
    bf20:	bl	b2d0 <do_cleanups_sigsafe@plt>
    bf24:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bf28:	add	x0, x0, #0x574
    bf2c:	str	wzr, [x0]
    bf30:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bf34:	add	x0, x0, #0x570
    bf38:	str	wzr, [x0]
    bf3c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bf40:	add	x0, x0, #0x568
    bf44:	ldr	x0, [x0]
    bf48:	bl	b130 <free@plt>
    bf4c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bf50:	add	x0, x0, #0x568
    bf54:	str	xzr, [x0]
    bf58:	nop
    bf5c:	ldp	x29, x30, [sp], #16
    bf60:	ret

000000000000bf64 <push_cleanup@@Base>:
    bf64:	stp	x29, x30, [sp, #-64]!
    bf68:	mov	x29, sp
    bf6c:	str	x0, [sp, #40]
    bf70:	str	x1, [sp, #32]
    bf74:	str	w2, [sp, #28]
    bf78:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bf7c:	add	x0, x0, #0x574
    bf80:	ldr	w1, [x0]
    bf84:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bf88:	add	x0, x0, #0x570
    bf8c:	ldr	w0, [x0]
    bf90:	cmp	w1, w0
    bf94:	b.ls	bfb8 <push_cleanup@@Base+0x54>  // b.plast
    bf98:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    bf9c:	add	x3, x0, #0x420
    bfa0:	mov	w2, #0xc8                  	// #200
    bfa4:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    bfa8:	add	x1, x0, #0x3d0
    bfac:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    bfb0:	add	x0, x0, #0x3e0
    bfb4:	bl	b630 <__assert_fail@plt>
    bfb8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bfbc:	add	x0, x0, #0x578
    bfc0:	ldr	w0, [x0]
    bfc4:	cmp	w0, #0x0
    bfc8:	b.ne	bff8 <push_cleanup@@Base+0x94>  // b.any
    bfcc:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    bfd0:	ldr	x0, [x0, #3840]
    bfd4:	bl	42360 <vasnprintf@@Base+0x2164>
    bfd8:	cmp	w0, #0x0
    bfdc:	b.eq	bfe8 <push_cleanup@@Base+0x84>  // b.none
    bfe0:	mov	w0, #0xffffffff            	// #-1
    bfe4:	b	c1d0 <push_cleanup@@Base+0x26c>
    bfe8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bfec:	add	x0, x0, #0x578
    bff0:	mov	w1, #0x1                   	// #1
    bff4:	str	w1, [x0]
    bff8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    bffc:	add	x0, x0, #0x574
    c000:	ldr	w1, [x0]
    c004:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c008:	add	x0, x0, #0x570
    c00c:	ldr	w0, [x0]
    c010:	cmp	w1, w0
    c014:	b.ne	c0c4 <push_cleanup@@Base+0x160>  // b.any
    c018:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c01c:	add	x0, x0, #0x568
    c020:	ldr	x0, [x0]
    c024:	cmp	x0, #0x0
    c028:	b.eq	c064 <push_cleanup@@Base+0x100>  // b.none
    c02c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c030:	add	x0, x0, #0x568
    c034:	ldr	x3, [x0]
    c038:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c03c:	add	x0, x0, #0x570
    c040:	ldr	w0, [x0]
    c044:	add	w0, w0, #0x1
    c048:	mov	w0, w0
    c04c:	mov	x2, #0x18                  	// #24
    c050:	mov	x1, x0
    c054:	mov	x0, x3
    c058:	bl	ada0 <xnrealloc@plt>
    c05c:	str	x0, [sp, #56]
    c060:	b	c084 <push_cleanup@@Base+0x120>
    c064:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c068:	add	x0, x0, #0x570
    c06c:	ldr	w0, [x0]
    c070:	add	w0, w0, #0x1
    c074:	mov	w0, w0
    c078:	mov	x1, #0x18                  	// #24
    c07c:	bl	b770 <xnmalloc@plt>
    c080:	str	x0, [sp, #56]
    c084:	ldr	x0, [sp, #56]
    c088:	cmp	x0, #0x0
    c08c:	b.ne	c098 <push_cleanup@@Base+0x134>  // b.any
    c090:	mov	w0, #0xffffffff            	// #-1
    c094:	b	c1d0 <push_cleanup@@Base+0x26c>
    c098:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c09c:	add	x0, x0, #0x568
    c0a0:	ldr	x1, [sp, #56]
    c0a4:	str	x1, [x0]
    c0a8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c0ac:	add	x0, x0, #0x570
    c0b0:	ldr	w0, [x0]
    c0b4:	add	w1, w0, #0x1
    c0b8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c0bc:	add	x0, x0, #0x570
    c0c0:	str	w1, [x0]
    c0c4:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c0c8:	add	x0, x0, #0x574
    c0cc:	ldr	w1, [x0]
    c0d0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c0d4:	add	x0, x0, #0x570
    c0d8:	ldr	w0, [x0]
    c0dc:	cmp	w1, w0
    c0e0:	b.cc	c104 <push_cleanup@@Base+0x1a0>  // b.lo, b.ul, b.last
    c0e4:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c0e8:	add	x3, x0, #0x420
    c0ec:	mov	w2, #0xe0                  	// #224
    c0f0:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c0f4:	add	x1, x0, #0x3d0
    c0f8:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c0fc:	add	x0, x0, #0x3f0
    c100:	bl	b630 <__assert_fail@plt>
    c104:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c108:	add	x0, x0, #0x568
    c10c:	ldr	x2, [x0]
    c110:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c114:	add	x0, x0, #0x574
    c118:	ldr	w0, [x0]
    c11c:	mov	w1, w0
    c120:	mov	x0, x1
    c124:	lsl	x0, x0, #1
    c128:	add	x0, x0, x1
    c12c:	lsl	x0, x0, #3
    c130:	add	x0, x2, x0
    c134:	ldr	x1, [sp, #40]
    c138:	str	x1, [x0]
    c13c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c140:	add	x0, x0, #0x568
    c144:	ldr	x2, [x0]
    c148:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c14c:	add	x0, x0, #0x574
    c150:	ldr	w0, [x0]
    c154:	mov	w1, w0
    c158:	mov	x0, x1
    c15c:	lsl	x0, x0, #1
    c160:	add	x0, x0, x1
    c164:	lsl	x0, x0, #3
    c168:	add	x0, x2, x0
    c16c:	ldr	x1, [sp, #32]
    c170:	str	x1, [x0, #8]
    c174:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c178:	add	x0, x0, #0x568
    c17c:	ldr	x2, [x0]
    c180:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c184:	add	x0, x0, #0x574
    c188:	ldr	w0, [x0]
    c18c:	mov	w1, w0
    c190:	mov	x0, x1
    c194:	lsl	x0, x0, #1
    c198:	add	x0, x0, x1
    c19c:	lsl	x0, x0, #3
    c1a0:	add	x0, x2, x0
    c1a4:	ldr	w1, [sp, #28]
    c1a8:	str	w1, [x0, #16]
    c1ac:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c1b0:	add	x0, x0, #0x574
    c1b4:	ldr	w0, [x0]
    c1b8:	add	w1, w0, #0x1
    c1bc:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c1c0:	add	x0, x0, #0x574
    c1c4:	str	w1, [x0]
    c1c8:	bl	bcb0 <appendstr@@Base+0x340>
    c1cc:	mov	w0, #0x0                   	// #0
    c1d0:	ldp	x29, x30, [sp], #64
    c1d4:	ret

000000000000c1d8 <pop_cleanup@@Base>:
    c1d8:	stp	x29, x30, [sp, #-48]!
    c1dc:	mov	x29, sp
    c1e0:	str	x0, [sp, #24]
    c1e4:	str	x1, [sp, #16]
    c1e8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c1ec:	add	x0, x0, #0x574
    c1f0:	ldr	w0, [x0]
    c1f4:	cmp	w0, #0x0
    c1f8:	b.ne	c21c <pop_cleanup@@Base+0x44>  // b.any
    c1fc:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c200:	add	x3, x0, #0x430
    c204:	mov	w2, #0xf5                  	// #245
    c208:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c20c:	add	x1, x0, #0x3d0
    c210:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c214:	add	x0, x0, #0x400
    c218:	bl	b630 <__assert_fail@plt>
    c21c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c220:	add	x0, x0, #0x574
    c224:	ldr	w0, [x0]
    c228:	str	w0, [sp, #44]
    c22c:	b	c368 <pop_cleanup@@Base+0x190>
    c230:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c234:	add	x0, x0, #0x568
    c238:	ldr	x2, [x0]
    c23c:	ldr	w0, [sp, #44]
    c240:	sub	w0, w0, #0x1
    c244:	mov	w1, w0
    c248:	mov	x0, x1
    c24c:	lsl	x0, x0, #1
    c250:	add	x0, x0, x1
    c254:	lsl	x0, x0, #3
    c258:	add	x0, x2, x0
    c25c:	ldr	x0, [x0]
    c260:	ldr	x1, [sp, #24]
    c264:	cmp	x1, x0
    c268:	b.ne	c35c <pop_cleanup@@Base+0x184>  // b.any
    c26c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c270:	add	x0, x0, #0x568
    c274:	ldr	x2, [x0]
    c278:	ldr	w0, [sp, #44]
    c27c:	sub	w0, w0, #0x1
    c280:	mov	w1, w0
    c284:	mov	x0, x1
    c288:	lsl	x0, x0, #1
    c28c:	add	x0, x0, x1
    c290:	lsl	x0, x0, #3
    c294:	add	x0, x2, x0
    c298:	ldr	x0, [x0, #8]
    c29c:	ldr	x1, [sp, #16]
    c2a0:	cmp	x1, x0
    c2a4:	b.ne	c35c <pop_cleanup@@Base+0x184>  // b.any
    c2a8:	ldr	w0, [sp, #44]
    c2ac:	str	w0, [sp, #40]
    c2b0:	b	c324 <pop_cleanup@@Base+0x14c>
    c2b4:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c2b8:	add	x0, x0, #0x568
    c2bc:	ldr	x2, [x0]
    c2c0:	ldr	w1, [sp, #40]
    c2c4:	mov	x0, x1
    c2c8:	lsl	x0, x0, #1
    c2cc:	add	x0, x0, x1
    c2d0:	lsl	x0, x0, #3
    c2d4:	add	x3, x2, x0
    c2d8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c2dc:	add	x0, x0, #0x568
    c2e0:	ldr	x2, [x0]
    c2e4:	ldr	w0, [sp, #40]
    c2e8:	sub	w0, w0, #0x1
    c2ec:	mov	w1, w0
    c2f0:	mov	x0, x1
    c2f4:	lsl	x0, x0, #1
    c2f8:	add	x0, x0, x1
    c2fc:	lsl	x0, x0, #3
    c300:	add	x0, x2, x0
    c304:	mov	x2, x0
    c308:	ldp	x0, x1, [x3]
    c30c:	stp	x0, x1, [x2]
    c310:	ldr	x0, [x3, #16]
    c314:	str	x0, [x2, #16]
    c318:	ldr	w0, [sp, #40]
    c31c:	add	w0, w0, #0x1
    c320:	str	w0, [sp, #40]
    c324:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c328:	add	x0, x0, #0x574
    c32c:	ldr	w0, [x0]
    c330:	ldr	w1, [sp, #40]
    c334:	cmp	w1, w0
    c338:	b.cc	c2b4 <pop_cleanup@@Base+0xdc>  // b.lo, b.ul, b.last
    c33c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c340:	add	x0, x0, #0x574
    c344:	ldr	w0, [x0]
    c348:	sub	w1, w0, #0x1
    c34c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c350:	add	x0, x0, #0x574
    c354:	str	w1, [x0]
    c358:	b	c374 <pop_cleanup@@Base+0x19c>
    c35c:	ldr	w0, [sp, #44]
    c360:	sub	w0, w0, #0x1
    c364:	str	w0, [sp, #44]
    c368:	ldr	w0, [sp, #44]
    c36c:	cmp	w0, #0x0
    c370:	b.ne	c230 <pop_cleanup@@Base+0x58>  // b.any
    c374:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c378:	add	x0, x0, #0x574
    c37c:	ldr	w0, [x0]
    c380:	cmp	w0, #0x0
    c384:	b.ne	c38c <pop_cleanup@@Base+0x1b4>  // b.any
    c388:	bl	bd7c <appendstr@@Base+0x40c>
    c38c:	nop
    c390:	ldp	x29, x30, [sp], #48
    c394:	ret

000000000000c398 <pop_all_cleanups@@Base>:
    c398:	stp	x29, x30, [sp, #-16]!
    c39c:	mov	x29, sp
    c3a0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    c3a4:	add	x0, x0, #0x574
    c3a8:	str	wzr, [x0]
    c3ac:	bl	bd7c <appendstr@@Base+0x40c>
    c3b0:	nop
    c3b4:	ldp	x29, x30, [sp], #16
    c3b8:	ret

000000000000c3bc <init_debug@@Base>:
    c3bc:	stp	x29, x30, [sp, #-32]!
    c3c0:	mov	x29, sp
    c3c4:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c3c8:	add	x0, x0, #0x440
    c3cc:	bl	b670 <getenv@plt>
    c3d0:	str	x0, [sp, #24]
    c3d4:	ldr	x0, [sp, #24]
    c3d8:	cmp	x0, #0x0
    c3dc:	b.eq	c408 <init_debug@@Base+0x4c>  // b.none
    c3e0:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c3e4:	add	x1, x0, #0x450
    c3e8:	ldr	x0, [sp, #24]
    c3ec:	bl	b070 <strcmp@plt>
    c3f0:	cmp	w0, #0x0
    c3f4:	b.ne	c408 <init_debug@@Base+0x4c>  // b.any
    c3f8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c3fc:	ldr	x0, [x0, #3808]
    c400:	mov	w1, #0x1                   	// #1
    c404:	strb	w1, [x0]
    c408:	nop
    c40c:	ldp	x29, x30, [sp], #32
    c410:	ret
    c414:	stp	x29, x30, [sp, #-80]!
    c418:	mov	x29, sp
    c41c:	str	x19, [sp, #16]
    c420:	str	x0, [sp, #72]
    c424:	mov	x19, x1
    c428:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c42c:	ldr	x0, [x0, #3808]
    c430:	ldrb	w0, [x0]
    c434:	cmp	w0, #0x0
    c438:	b.eq	c474 <init_debug@@Base+0xb8>  // b.none
    c43c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c440:	ldr	x0, [x0, #3816]
    c444:	ldr	x4, [x0]
    c448:	add	x2, sp, #0x20
    c44c:	mov	x3, x19
    c450:	ldp	x0, x1, [x3]
    c454:	stp	x0, x1, [x2]
    c458:	ldp	x0, x1, [x3, #16]
    c45c:	stp	x0, x1, [x2, #16]
    c460:	add	x0, sp, #0x20
    c464:	mov	x2, x0
    c468:	ldr	x1, [sp, #72]
    c46c:	mov	x0, x4
    c470:	bl	b610 <vfprintf@plt>
    c474:	nop
    c478:	ldr	x19, [sp, #16]
    c47c:	ldp	x29, x30, [sp], #80
    c480:	ret

000000000000c484 <debug@@Base>:
    c484:	stp	x29, x30, [sp, #-288]!
    c488:	mov	x29, sp
    c48c:	str	x0, [sp, #56]
    c490:	str	x1, [sp, #232]
    c494:	str	x2, [sp, #240]
    c498:	str	x3, [sp, #248]
    c49c:	str	x4, [sp, #256]
    c4a0:	str	x5, [sp, #264]
    c4a4:	str	x6, [sp, #272]
    c4a8:	str	x7, [sp, #280]
    c4ac:	str	q0, [sp, #96]
    c4b0:	str	q1, [sp, #112]
    c4b4:	str	q2, [sp, #128]
    c4b8:	str	q3, [sp, #144]
    c4bc:	str	q4, [sp, #160]
    c4c0:	str	q5, [sp, #176]
    c4c4:	str	q6, [sp, #192]
    c4c8:	str	q7, [sp, #208]
    c4cc:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c4d0:	ldr	x0, [x0, #3808]
    c4d4:	ldrb	w0, [x0]
    c4d8:	cmp	w0, #0x0
    c4dc:	b.eq	c530 <debug@@Base+0xac>  // b.none
    c4e0:	add	x0, sp, #0x120
    c4e4:	str	x0, [sp, #64]
    c4e8:	add	x0, sp, #0x120
    c4ec:	str	x0, [sp, #72]
    c4f0:	add	x0, sp, #0xe0
    c4f4:	str	x0, [sp, #80]
    c4f8:	mov	w0, #0xffffffc8            	// #-56
    c4fc:	str	w0, [sp, #88]
    c500:	mov	w0, #0xffffff80            	// #-128
    c504:	str	w0, [sp, #92]
    c508:	add	x2, sp, #0x10
    c50c:	add	x3, sp, #0x40
    c510:	ldp	x0, x1, [x3]
    c514:	stp	x0, x1, [x2]
    c518:	ldp	x0, x1, [x3, #16]
    c51c:	stp	x0, x1, [x2, #16]
    c520:	add	x0, sp, #0x10
    c524:	mov	x1, x0
    c528:	ldr	x0, [sp, #56]
    c52c:	bl	c414 <init_debug@@Base+0x58>
    c530:	nop
    c534:	ldp	x29, x30, [sp], #288
    c538:	ret

000000000000c53c <debug_error@@Base>:
    c53c:	stp	x29, x30, [sp, #-288]!
    c540:	mov	x29, sp
    c544:	str	x0, [sp, #56]
    c548:	str	x1, [sp, #232]
    c54c:	str	x2, [sp, #240]
    c550:	str	x3, [sp, #248]
    c554:	str	x4, [sp, #256]
    c558:	str	x5, [sp, #264]
    c55c:	str	x6, [sp, #272]
    c560:	str	x7, [sp, #280]
    c564:	str	q0, [sp, #96]
    c568:	str	q1, [sp, #112]
    c56c:	str	q2, [sp, #128]
    c570:	str	q3, [sp, #144]
    c574:	str	q4, [sp, #160]
    c578:	str	q5, [sp, #176]
    c57c:	str	q6, [sp, #192]
    c580:	str	q7, [sp, #208]
    c584:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c588:	ldr	x0, [x0, #3808]
    c58c:	ldrb	w0, [x0]
    c590:	cmp	w0, #0x0
    c594:	b.eq	c604 <debug_error@@Base+0xc8>  // b.none
    c598:	add	x0, sp, #0x120
    c59c:	str	x0, [sp, #64]
    c5a0:	add	x0, sp, #0x120
    c5a4:	str	x0, [sp, #72]
    c5a8:	add	x0, sp, #0xe0
    c5ac:	str	x0, [sp, #80]
    c5b0:	mov	w0, #0xffffffc8            	// #-56
    c5b4:	str	w0, [sp, #88]
    c5b8:	mov	w0, #0xffffff80            	// #-128
    c5bc:	str	w0, [sp, #92]
    c5c0:	add	x2, sp, #0x10
    c5c4:	add	x3, sp, #0x40
    c5c8:	ldp	x0, x1, [x3]
    c5cc:	stp	x0, x1, [x2]
    c5d0:	ldp	x0, x1, [x3, #16]
    c5d4:	stp	x0, x1, [x2, #16]
    c5d8:	add	x0, sp, #0x10
    c5dc:	mov	x1, x0
    c5e0:	ldr	x0, [sp, #56]
    c5e4:	bl	c414 <init_debug@@Base+0x58>
    c5e8:	bl	b640 <__errno_location@plt>
    c5ec:	ldr	w0, [x0]
    c5f0:	bl	ae50 <strerror@plt>
    c5f4:	mov	x1, x0
    c5f8:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c5fc:	add	x0, x0, #0x458
    c600:	bl	aab0 <debug@plt>
    c604:	nop
    c608:	ldp	x29, x30, [sp], #288
    c60c:	ret

000000000000c610 <get_groff_preconv@@Base>:
    c610:	stp	x29, x30, [sp, #-16]!
    c614:	mov	x29, sp
    c618:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c61c:	ldr	x0, [x0, #3832]
    c620:	ldr	x0, [x0]
    c624:	cmp	x0, #0x0
    c628:	b.eq	c65c <get_groff_preconv@@Base+0x4c>  // b.none
    c62c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c630:	ldr	x0, [x0, #3832]
    c634:	ldr	x0, [x0]
    c638:	ldrb	w0, [x0]
    c63c:	cmp	w0, #0x0
    c640:	b.eq	c654 <get_groff_preconv@@Base+0x44>  // b.none
    c644:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c648:	ldr	x0, [x0, #3832]
    c64c:	ldr	x0, [x0]
    c650:	b	c6fc <get_groff_preconv@@Base+0xec>
    c654:	mov	x0, #0x0                   	// #0
    c658:	b	c6fc <get_groff_preconv@@Base+0xec>
    c65c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c660:	add	x0, x0, #0xcd0
    c664:	bl	b580 <pathsearch_executable@plt>
    c668:	and	w0, w0, #0xff
    c66c:	cmp	w0, #0x0
    c670:	b.eq	c68c <get_groff_preconv@@Base+0x7c>  // b.none
    c674:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c678:	ldr	x0, [x0, #3832]
    c67c:	adrp	x1, 42000 <vasnprintf@@Base+0x1e04>
    c680:	add	x1, x1, #0xcd0
    c684:	str	x1, [x0]
    c688:	b	c6d0 <get_groff_preconv@@Base+0xc0>
    c68c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c690:	add	x0, x0, #0xce0
    c694:	bl	b580 <pathsearch_executable@plt>
    c698:	and	w0, w0, #0xff
    c69c:	cmp	w0, #0x0
    c6a0:	b.eq	c6bc <get_groff_preconv@@Base+0xac>  // b.none
    c6a4:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c6a8:	ldr	x0, [x0, #3832]
    c6ac:	adrp	x1, 42000 <vasnprintf@@Base+0x1e04>
    c6b0:	add	x1, x1, #0xce0
    c6b4:	str	x1, [x0]
    c6b8:	b	c6d0 <get_groff_preconv@@Base+0xc0>
    c6bc:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c6c0:	ldr	x0, [x0, #3832]
    c6c4:	adrp	x1, 42000 <vasnprintf@@Base+0x1e04>
    c6c8:	add	x1, x1, #0xce8
    c6cc:	str	x1, [x0]
    c6d0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c6d4:	ldr	x0, [x0, #3832]
    c6d8:	ldr	x0, [x0]
    c6dc:	ldrb	w0, [x0]
    c6e0:	cmp	w0, #0x0
    c6e4:	b.eq	c6f8 <get_groff_preconv@@Base+0xe8>  // b.none
    c6e8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    c6ec:	ldr	x0, [x0, #3832]
    c6f0:	ldr	x0, [x0]
    c6f4:	b	c6fc <get_groff_preconv@@Base+0xec>
    c6f8:	mov	x0, #0x0                   	// #0
    c6fc:	ldp	x29, x30, [sp], #16
    c700:	ret

000000000000c704 <get_page_encoding@@Base>:
    c704:	stp	x29, x30, [sp, #-80]!
    c708:	mov	x29, sp
    c70c:	str	x19, [sp, #16]
    c710:	str	x0, [sp, #40]
    c714:	ldr	x0, [sp, #40]
    c718:	cmp	x0, #0x0
    c71c:	b.eq	c730 <get_page_encoding@@Base+0x2c>  // b.none
    c720:	ldr	x0, [sp, #40]
    c724:	ldrb	w0, [x0]
    c728:	cmp	w0, #0x0
    c72c:	b.ne	c75c <get_page_encoding@@Base+0x58>  // b.any
    c730:	mov	x1, #0x0                   	// #0
    c734:	mov	w0, #0x5                   	// #5
    c738:	bl	b790 <setlocale@plt>
    c73c:	str	x0, [sp, #40]
    c740:	ldr	x0, [sp, #40]
    c744:	cmp	x0, #0x0
    c748:	b.ne	c75c <get_page_encoding@@Base+0x58>  // b.any
    c74c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c750:	add	x0, x0, #0x688
    c754:	bl	ad10 <xstrdup@plt>
    c758:	b	c83c <get_page_encoding@@Base+0x138>
    c75c:	mov	w1, #0x2e                  	// #46
    c760:	ldr	x0, [sp, #40]
    c764:	bl	b270 <strchr@plt>
    c768:	str	x0, [sp, #64]
    c76c:	ldr	x0, [sp, #64]
    c770:	cmp	x0, #0x0
    c774:	b.eq	c7c8 <get_page_encoding@@Base+0xc4>  // b.none
    c778:	ldr	x0, [sp, #64]
    c77c:	add	x19, x0, #0x1
    c780:	ldr	x0, [sp, #64]
    c784:	add	x2, x0, #0x1
    c788:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c78c:	add	x1, x0, #0xcf0
    c790:	mov	x0, x2
    c794:	bl	b5f0 <strcspn@plt>
    c798:	mov	x1, x0
    c79c:	mov	x0, x19
    c7a0:	bl	b410 <xstrndup@plt>
    c7a4:	str	x0, [sp, #56]
    c7a8:	ldr	x0, [sp, #56]
    c7ac:	bl	a810 <get_canonical_charset_name@plt>
    c7b0:	bl	ad10 <xstrdup@plt>
    c7b4:	str	x0, [sp, #48]
    c7b8:	ldr	x0, [sp, #56]
    c7bc:	bl	b130 <free@plt>
    c7c0:	ldr	x0, [sp, #48]
    c7c4:	b	c83c <get_page_encoding@@Base+0x138>
    c7c8:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    c7cc:	add	x0, x0, #0x840
    c7d0:	str	x0, [sp, #72]
    c7d4:	b	c820 <get_page_encoding@@Base+0x11c>
    c7d8:	ldr	x0, [sp, #72]
    c7dc:	ldr	x19, [x0]
    c7e0:	ldr	x0, [sp, #72]
    c7e4:	ldr	x0, [x0]
    c7e8:	bl	a820 <strlen@plt>
    c7ec:	mov	x2, x0
    c7f0:	ldr	x1, [sp, #40]
    c7f4:	mov	x0, x19
    c7f8:	bl	ac60 <strncmp@plt>
    c7fc:	cmp	w0, #0x0
    c800:	b.ne	c814 <get_page_encoding@@Base+0x110>  // b.any
    c804:	ldr	x0, [sp, #72]
    c808:	ldr	x0, [x0, #8]
    c80c:	bl	ad10 <xstrdup@plt>
    c810:	b	c83c <get_page_encoding@@Base+0x138>
    c814:	ldr	x0, [sp, #72]
    c818:	add	x0, x0, #0x10
    c81c:	str	x0, [sp, #72]
    c820:	ldr	x0, [sp, #72]
    c824:	ldr	x0, [x0]
    c828:	cmp	x0, #0x0
    c82c:	b.ne	c7d8 <get_page_encoding@@Base+0xd4>  // b.any
    c830:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c834:	add	x0, x0, #0x688
    c838:	bl	ad10 <xstrdup@plt>
    c83c:	ldr	x19, [sp, #16]
    c840:	ldp	x29, x30, [sp], #80
    c844:	ret

000000000000c848 <get_source_encoding@@Base>:
    c848:	stp	x29, x30, [sp, #-64]!
    c84c:	mov	x29, sp
    c850:	str	x19, [sp, #16]
    c854:	str	x0, [sp, #40]
    c858:	ldr	x0, [sp, #40]
    c85c:	cmp	x0, #0x0
    c860:	b.eq	c874 <get_source_encoding@@Base+0x2c>  // b.none
    c864:	ldr	x0, [sp, #40]
    c868:	ldrb	w0, [x0]
    c86c:	cmp	w0, #0x0
    c870:	b.ne	c89c <get_source_encoding@@Base+0x54>  // b.any
    c874:	mov	x1, #0x0                   	// #0
    c878:	mov	w0, #0x5                   	// #5
    c87c:	bl	b790 <setlocale@plt>
    c880:	str	x0, [sp, #40]
    c884:	ldr	x0, [sp, #40]
    c888:	cmp	x0, #0x0
    c88c:	b.ne	c89c <get_source_encoding@@Base+0x54>  // b.any
    c890:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c894:	add	x0, x0, #0x688
    c898:	b	c908 <get_source_encoding@@Base+0xc0>
    c89c:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    c8a0:	add	x0, x0, #0x840
    c8a4:	str	x0, [sp, #56]
    c8a8:	b	c8f0 <get_source_encoding@@Base+0xa8>
    c8ac:	ldr	x0, [sp, #56]
    c8b0:	ldr	x19, [x0]
    c8b4:	ldr	x0, [sp, #56]
    c8b8:	ldr	x0, [x0]
    c8bc:	bl	a820 <strlen@plt>
    c8c0:	mov	x2, x0
    c8c4:	ldr	x1, [sp, #40]
    c8c8:	mov	x0, x19
    c8cc:	bl	ac60 <strncmp@plt>
    c8d0:	cmp	w0, #0x0
    c8d4:	b.ne	c8e4 <get_source_encoding@@Base+0x9c>  // b.any
    c8d8:	ldr	x0, [sp, #56]
    c8dc:	ldr	x0, [x0, #8]
    c8e0:	b	c908 <get_source_encoding@@Base+0xc0>
    c8e4:	ldr	x0, [sp, #56]
    c8e8:	add	x0, x0, #0x10
    c8ec:	str	x0, [sp, #56]
    c8f0:	ldr	x0, [sp, #56]
    c8f4:	ldr	x0, [x0]
    c8f8:	cmp	x0, #0x0
    c8fc:	b.ne	c8ac <get_source_encoding@@Base+0x64>  // b.any
    c900:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    c904:	add	x0, x0, #0x688
    c908:	ldr	x19, [sp, #16]
    c90c:	ldp	x29, x30, [sp], #64
    c910:	ret

000000000000c914 <get_canonical_charset_name@@Base>:
    c914:	stp	x29, x30, [sp, #-64]!
    c918:	mov	x29, sp
    c91c:	str	x0, [sp, #24]
    c920:	ldr	x0, [sp, #24]
    c924:	bl	ad10 <xstrdup@plt>
    c928:	str	x0, [sp, #40]
    c92c:	ldr	x0, [sp, #40]
    c930:	str	x0, [sp, #48]
    c934:	b	c95c <get_canonical_charset_name@@Base+0x48>
    c938:	ldr	x0, [sp, #48]
    c93c:	ldrb	w0, [x0]
    c940:	bl	ab70 <toupper@plt>
    c944:	and	w1, w0, #0xff
    c948:	ldr	x0, [sp, #48]
    c94c:	strb	w1, [x0]
    c950:	ldr	x0, [sp, #48]
    c954:	add	x0, x0, #0x1
    c958:	str	x0, [sp, #48]
    c95c:	ldr	x0, [sp, #48]
    c960:	ldrb	w0, [x0]
    c964:	cmp	w0, #0x0
    c968:	b.ne	c938 <get_canonical_charset_name@@Base+0x24>  // b.any
    c96c:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    c970:	add	x0, x0, #0xb20
    c974:	str	x0, [sp, #56]
    c978:	b	c9b4 <get_canonical_charset_name@@Base+0xa0>
    c97c:	ldr	x0, [sp, #56]
    c980:	ldr	x0, [x0]
    c984:	ldr	x1, [sp, #40]
    c988:	bl	b070 <strcmp@plt>
    c98c:	cmp	w0, #0x0
    c990:	b.ne	c9a8 <get_canonical_charset_name@@Base+0x94>  // b.any
    c994:	ldr	x0, [sp, #40]
    c998:	bl	b130 <free@plt>
    c99c:	ldr	x0, [sp, #56]
    c9a0:	ldr	x0, [x0, #8]
    c9a4:	b	c9d0 <get_canonical_charset_name@@Base+0xbc>
    c9a8:	ldr	x0, [sp, #56]
    c9ac:	add	x0, x0, #0x10
    c9b0:	str	x0, [sp, #56]
    c9b4:	ldr	x0, [sp, #56]
    c9b8:	ldr	x0, [x0]
    c9bc:	cmp	x0, #0x0
    c9c0:	b.ne	c97c <get_canonical_charset_name@@Base+0x68>  // b.any
    c9c4:	ldr	x0, [sp, #40]
    c9c8:	bl	b130 <free@plt>
    c9cc:	ldr	x0, [sp, #24]
    c9d0:	ldp	x29, x30, [sp], #64
    c9d4:	ret

000000000000c9d8 <get_locale_charset@@Base>:
    c9d8:	stp	x29, x30, [sp, #-32]!
    c9dc:	mov	x29, sp
    c9e0:	mov	x1, #0x0                   	// #0
    c9e4:	mov	w0, #0x0                   	// #0
    c9e8:	bl	b790 <setlocale@plt>
    c9ec:	str	x0, [sp, #24]
    c9f0:	ldr	x0, [sp, #24]
    c9f4:	cmp	x0, #0x0
    c9f8:	b.eq	ca08 <get_locale_charset@@Base+0x30>  // b.none
    c9fc:	ldr	x0, [sp, #24]
    ca00:	bl	ad10 <xstrdup@plt>
    ca04:	str	x0, [sp, #24]
    ca08:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    ca0c:	add	x1, x0, #0xce8
    ca10:	mov	w0, #0x0                   	// #0
    ca14:	bl	b790 <setlocale@plt>
    ca18:	bl	b680 <locale_charset@plt>
    ca1c:	str	x0, [sp, #16]
    ca20:	ldr	x1, [sp, #24]
    ca24:	mov	w0, #0x0                   	// #0
    ca28:	bl	b790 <setlocale@plt>
    ca2c:	ldr	x0, [sp, #24]
    ca30:	bl	b130 <free@plt>
    ca34:	ldr	x0, [sp, #16]
    ca38:	cmp	x0, #0x0
    ca3c:	b.eq	ca5c <get_locale_charset@@Base+0x84>  // b.none
    ca40:	ldr	x0, [sp, #16]
    ca44:	ldrb	w0, [x0]
    ca48:	cmp	w0, #0x0
    ca4c:	b.eq	ca5c <get_locale_charset@@Base+0x84>  // b.none
    ca50:	ldr	x0, [sp, #16]
    ca54:	bl	a810 <get_canonical_charset_name@plt>
    ca58:	b	ca60 <get_locale_charset@@Base+0x88>
    ca5c:	mov	x0, #0x0                   	// #0
    ca60:	ldp	x29, x30, [sp], #32
    ca64:	ret

000000000000ca68 <find_charset_locale@@Base>:
    ca68:	stp	x29, x30, [sp, #-144]!
    ca6c:	mov	x29, sp
    ca70:	str	x0, [sp, #24]
    ca74:	ldr	x0, [sp, #24]
    ca78:	bl	a810 <get_canonical_charset_name@plt>
    ca7c:	str	x0, [sp, #120]
    ca80:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    ca84:	add	x1, x0, #0xd18
    ca88:	add	x0, sp, #0x38
    ca8c:	ldp	x2, x3, [x1]
    ca90:	stp	x2, x3, [x0]
    ca94:	ldr	x2, [x1, #16]
    ca98:	str	x2, [x0, #16]
    ca9c:	ldrh	w1, [x1, #24]
    caa0:	strh	w1, [x0, #24]
    caa4:	str	xzr, [sp, #112]
    caa8:	str	xzr, [sp, #48]
    caac:	str	xzr, [sp, #40]
    cab0:	str	xzr, [sp, #128]
    cab4:	bl	b530 <get_locale_charset@plt>
    cab8:	mov	x1, x0
    cabc:	ldr	x0, [sp, #24]
    cac0:	bl	b070 <strcmp@plt>
    cac4:	cmp	w0, #0x0
    cac8:	b.ne	cad4 <find_charset_locale@@Base+0x6c>  // b.any
    cacc:	mov	x0, #0x0                   	// #0
    cad0:	b	ccdc <find_charset_locale@@Base+0x274>
    cad4:	mov	x1, #0x0                   	// #0
    cad8:	mov	w0, #0x0                   	// #0
    cadc:	bl	b790 <setlocale@plt>
    cae0:	str	x0, [sp, #136]
    cae4:	ldr	x0, [sp, #136]
    cae8:	cmp	x0, #0x0
    caec:	b.eq	cafc <find_charset_locale@@Base+0x94>  // b.none
    caf0:	ldr	x0, [sp, #136]
    caf4:	bl	ad10 <xstrdup@plt>
    caf8:	str	x0, [sp, #136]
    cafc:	add	x2, sp, #0x38
    cb00:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cb04:	add	x1, x0, #0xcf8
    cb08:	mov	x0, x2
    cb0c:	bl	ab20 <fopen@plt>
    cb10:	str	x0, [sp, #112]
    cb14:	b	cbe4 <find_charset_locale@@Base+0x17c>
    cb18:	ldr	x0, [sp, #48]
    cb1c:	mov	w1, #0x20                  	// #32
    cb20:	bl	b270 <strchr@plt>
    cb24:	str	x0, [sp, #104]
    cb28:	ldr	x0, [sp, #104]
    cb2c:	cmp	x0, #0x0
    cb30:	b.eq	cbd8 <find_charset_locale@@Base+0x170>  // b.none
    cb34:	ldr	x0, [sp, #104]
    cb38:	add	x0, x0, #0x1
    cb3c:	bl	ad10 <xstrdup@plt>
    cb40:	str	x0, [sp, #96]
    cb44:	mov	w1, #0xa                   	// #10
    cb48:	ldr	x0, [sp, #96]
    cb4c:	bl	b270 <strchr@plt>
    cb50:	str	x0, [sp, #88]
    cb54:	ldr	x0, [sp, #88]
    cb58:	cmp	x0, #0x0
    cb5c:	b.eq	cb68 <find_charset_locale@@Base+0x100>  // b.none
    cb60:	ldr	x0, [sp, #88]
    cb64:	strb	wzr, [x0]
    cb68:	ldr	x0, [sp, #96]
    cb6c:	bl	a810 <get_canonical_charset_name@plt>
    cb70:	mov	x1, x0
    cb74:	ldr	x0, [sp, #120]
    cb78:	bl	b070 <strcmp@plt>
    cb7c:	cmp	w0, #0x0
    cb80:	b.ne	cbd0 <find_charset_locale@@Base+0x168>  // b.any
    cb84:	ldr	x2, [sp, #48]
    cb88:	ldr	x0, [sp, #48]
    cb8c:	ldr	x1, [sp, #104]
    cb90:	sub	x0, x1, x0
    cb94:	mov	x1, x0
    cb98:	mov	x0, x2
    cb9c:	bl	b410 <xstrndup@plt>
    cba0:	str	x0, [sp, #128]
    cba4:	ldr	x1, [sp, #128]
    cba8:	mov	w0, #0x0                   	// #0
    cbac:	bl	b790 <setlocale@plt>
    cbb0:	cmp	x0, #0x0
    cbb4:	b.eq	cbc4 <find_charset_locale@@Base+0x15c>  // b.none
    cbb8:	ldr	x0, [sp, #96]
    cbbc:	bl	b130 <free@plt>
    cbc0:	b	cca8 <find_charset_locale@@Base+0x240>
    cbc4:	ldr	x0, [sp, #128]
    cbc8:	bl	b130 <free@plt>
    cbcc:	str	xzr, [sp, #128]
    cbd0:	ldr	x0, [sp, #96]
    cbd4:	bl	b130 <free@plt>
    cbd8:	ldr	x0, [sp, #48]
    cbdc:	bl	b130 <free@plt>
    cbe0:	str	xzr, [sp, #48]
    cbe4:	ldr	x0, [sp, #112]
    cbe8:	cmp	x0, #0x0
    cbec:	b.eq	cc08 <find_charset_locale@@Base+0x1a0>  // b.none
    cbf0:	add	x1, sp, #0x28
    cbf4:	add	x0, sp, #0x30
    cbf8:	ldr	x2, [sp, #112]
    cbfc:	bl	b0e0 <getline@plt>
    cc00:	cmp	x0, #0x0
    cc04:	b.ge	cb18 <find_charset_locale@@Base+0xb0>  // b.tcont
    cc08:	ldr	x0, [sp, #120]
    cc0c:	bl	a820 <strlen@plt>
    cc10:	cmp	x0, #0x4
    cc14:	b.ls	cc94 <find_charset_locale@@Base+0x22c>  // b.plast
    cc18:	mov	x2, #0x5                   	// #5
    cc1c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cc20:	add	x1, x0, #0x928
    cc24:	ldr	x0, [sp, #120]
    cc28:	bl	ac60 <strncmp@plt>
    cc2c:	cmp	w0, #0x0
    cc30:	b.ne	cc94 <find_charset_locale@@Base+0x22c>  // b.any
    cc34:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cc38:	add	x0, x0, #0xd00
    cc3c:	bl	ad10 <xstrdup@plt>
    cc40:	str	x0, [sp, #128]
    cc44:	ldr	x1, [sp, #128]
    cc48:	mov	w0, #0x0                   	// #0
    cc4c:	bl	b790 <setlocale@plt>
    cc50:	cmp	x0, #0x0
    cc54:	b.ne	cc9c <find_charset_locale@@Base+0x234>  // b.any
    cc58:	ldr	x0, [sp, #128]
    cc5c:	bl	b130 <free@plt>
    cc60:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cc64:	add	x0, x0, #0xd08
    cc68:	bl	ad10 <xstrdup@plt>
    cc6c:	str	x0, [sp, #128]
    cc70:	ldr	x1, [sp, #128]
    cc74:	mov	w0, #0x0                   	// #0
    cc78:	bl	b790 <setlocale@plt>
    cc7c:	cmp	x0, #0x0
    cc80:	b.ne	cca4 <find_charset_locale@@Base+0x23c>  // b.any
    cc84:	ldr	x0, [sp, #128]
    cc88:	bl	b130 <free@plt>
    cc8c:	str	xzr, [sp, #128]
    cc90:	b	cca8 <find_charset_locale@@Base+0x240>
    cc94:	nop
    cc98:	b	cca8 <find_charset_locale@@Base+0x240>
    cc9c:	nop
    cca0:	b	cca8 <find_charset_locale@@Base+0x240>
    cca4:	nop
    cca8:	ldr	x0, [sp, #48]
    ccac:	bl	b130 <free@plt>
    ccb0:	ldr	x1, [sp, #136]
    ccb4:	mov	w0, #0x0                   	// #0
    ccb8:	bl	b790 <setlocale@plt>
    ccbc:	ldr	x0, [sp, #136]
    ccc0:	bl	b130 <free@plt>
    ccc4:	ldr	x0, [sp, #112]
    ccc8:	cmp	x0, #0x0
    cccc:	b.eq	ccd8 <find_charset_locale@@Base+0x270>  // b.none
    ccd0:	ldr	x0, [sp, #112]
    ccd4:	bl	aad0 <fclose@plt>
    ccd8:	ldr	x0, [sp, #128]
    ccdc:	ldp	x29, x30, [sp], #144
    cce0:	ret
    cce4:	stp	x29, x30, [sp, #-32]!
    cce8:	mov	x29, sp
    ccec:	str	x0, [sp, #24]
    ccf0:	str	x1, [sp, #16]
    ccf4:	ldr	x1, [sp, #16]
    ccf8:	ldr	x0, [sp, #24]
    ccfc:	bl	b070 <strcmp@plt>
    cd00:	cmp	w0, #0x0
    cd04:	b.ne	cd10 <find_charset_locale@@Base+0x2a8>  // b.any
    cd08:	mov	w0, #0x1                   	// #1
    cd0c:	b	ce3c <find_charset_locale@@Base+0x3d4>
    cd10:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cd14:	add	x1, x0, #0x7a8
    cd18:	ldr	x0, [sp, #24]
    cd1c:	bl	b070 <strcmp@plt>
    cd20:	cmp	w0, #0x0
    cd24:	b.ne	cd30 <find_charset_locale@@Base+0x2c8>  // b.any
    cd28:	mov	w0, #0x1                   	// #1
    cd2c:	b	ce3c <find_charset_locale@@Base+0x3d4>
    cd30:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cd34:	add	x1, x0, #0x928
    cd38:	ldr	x0, [sp, #24]
    cd3c:	bl	b070 <strcmp@plt>
    cd40:	cmp	w0, #0x0
    cd44:	b.ne	cd50 <find_charset_locale@@Base+0x2e8>  // b.any
    cd48:	mov	w0, #0x1                   	// #1
    cd4c:	b	ce3c <find_charset_locale@@Base+0x3d4>
    cd50:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cd54:	add	x1, x0, #0x7a8
    cd58:	ldr	x0, [sp, #16]
    cd5c:	bl	b070 <strcmp@plt>
    cd60:	cmp	w0, #0x0
    cd64:	b.ne	cd70 <find_charset_locale@@Base+0x308>  // b.any
    cd68:	mov	w0, #0x1                   	// #1
    cd6c:	b	ce3c <find_charset_locale@@Base+0x3d4>
    cd70:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cd74:	add	x1, x0, #0x680
    cd78:	ldr	x0, [sp, #24]
    cd7c:	bl	b070 <strcmp@plt>
    cd80:	cmp	w0, #0x0
    cd84:	b.eq	ce18 <find_charset_locale@@Base+0x3b0>  // b.none
    cd88:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cd8c:	add	x1, x0, #0x668
    cd90:	ldr	x0, [sp, #24]
    cd94:	bl	b070 <strcmp@plt>
    cd98:	cmp	w0, #0x0
    cd9c:	b.eq	ce18 <find_charset_locale@@Base+0x3b0>  // b.none
    cda0:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cda4:	add	x1, x0, #0x570
    cda8:	ldr	x0, [sp, #24]
    cdac:	bl	b070 <strcmp@plt>
    cdb0:	cmp	w0, #0x0
    cdb4:	b.eq	ce18 <find_charset_locale@@Base+0x3b0>  // b.none
    cdb8:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cdbc:	add	x1, x0, #0x7d8
    cdc0:	ldr	x0, [sp, #24]
    cdc4:	bl	b070 <strcmp@plt>
    cdc8:	cmp	w0, #0x0
    cdcc:	b.eq	ce18 <find_charset_locale@@Base+0x3b0>  // b.none
    cdd0:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cdd4:	add	x1, x0, #0x650
    cdd8:	ldr	x0, [sp, #24]
    cddc:	bl	b070 <strcmp@plt>
    cde0:	cmp	w0, #0x0
    cde4:	b.eq	ce18 <find_charset_locale@@Base+0x3b0>  // b.none
    cde8:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    cdec:	add	x1, x0, #0x580
    cdf0:	ldr	x0, [sp, #24]
    cdf4:	bl	b070 <strcmp@plt>
    cdf8:	cmp	w0, #0x0
    cdfc:	b.eq	ce18 <find_charset_locale@@Base+0x3b0>  // b.none
    ce00:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    ce04:	add	x1, x0, #0x7f8
    ce08:	ldr	x0, [sp, #24]
    ce0c:	bl	b070 <strcmp@plt>
    ce10:	cmp	w0, #0x0
    ce14:	b.ne	ce38 <find_charset_locale@@Base+0x3d0>  // b.any
    ce18:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    ce1c:	add	x1, x0, #0x928
    ce20:	ldr	x0, [sp, #16]
    ce24:	bl	b070 <strcmp@plt>
    ce28:	cmp	w0, #0x0
    ce2c:	b.ne	ce38 <find_charset_locale@@Base+0x3d0>  // b.any
    ce30:	mov	w0, #0x1                   	// #1
    ce34:	b	ce3c <find_charset_locale@@Base+0x3d4>
    ce38:	mov	w0, #0x0                   	// #0
    ce3c:	ldp	x29, x30, [sp], #32
    ce40:	ret

000000000000ce44 <get_default_device@@Base>:
    ce44:	stp	x29, x30, [sp, #-48]!
    ce48:	mov	x29, sp
    ce4c:	str	x0, [sp, #24]
    ce50:	str	x1, [sp, #16]
    ce54:	bl	ac40 <get_groff_preconv@plt>
    ce58:	cmp	x0, #0x0
    ce5c:	b.eq	ce9c <get_default_device@@Base+0x58>  // b.none
    ce60:	ldr	x0, [sp, #24]
    ce64:	cmp	x0, #0x0
    ce68:	b.eq	ce90 <get_default_device@@Base+0x4c>  // b.none
    ce6c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    ce70:	add	x1, x0, #0x7a8
    ce74:	ldr	x0, [sp, #24]
    ce78:	bl	b070 <strcmp@plt>
    ce7c:	cmp	w0, #0x0
    ce80:	b.ne	ce90 <get_default_device@@Base+0x4c>  // b.any
    ce84:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    ce88:	add	x0, x0, #0x930
    ce8c:	b	cf40 <get_default_device@@Base+0xfc>
    ce90:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    ce94:	add	x0, x0, #0x940
    ce98:	b	cf40 <get_default_device@@Base+0xfc>
    ce9c:	ldr	x0, [sp, #24]
    cea0:	cmp	x0, #0x0
    cea4:	b.ne	ceb8 <get_default_device@@Base+0x74>  // b.any
    cea8:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    ceac:	add	x0, x0, #0xe80
    ceb0:	ldr	x0, [x0]
    ceb4:	b	cf40 <get_default_device@@Base+0xfc>
    ceb8:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    cebc:	add	x0, x0, #0xde0
    cec0:	str	x0, [sp, #40]
    cec4:	b	cf24 <get_default_device@@Base+0xe0>
    cec8:	ldr	x0, [sp, #40]
    cecc:	ldr	x0, [x0]
    ced0:	ldr	x1, [sp, #24]
    ced4:	bl	b070 <strcmp@plt>
    ced8:	cmp	w0, #0x0
    cedc:	b.ne	cf18 <get_default_device@@Base+0xd4>  // b.any
    cee0:	ldr	x0, [sp, #40]
    cee4:	ldr	x0, [x0, #8]
    cee8:	ldr	x1, [sp, #16]
    ceec:	bl	a8f0 <get_roff_encoding@plt>
    cef0:	str	x0, [sp, #32]
    cef4:	ldr	x1, [sp, #32]
    cef8:	ldr	x0, [sp, #16]
    cefc:	bl	cce4 <find_charset_locale@@Base+0x27c>
    cf00:	and	w0, w0, #0xff
    cf04:	cmp	w0, #0x0
    cf08:	b.eq	cf18 <get_default_device@@Base+0xd4>  // b.none
    cf0c:	ldr	x0, [sp, #40]
    cf10:	ldr	x0, [x0, #8]
    cf14:	b	cf40 <get_default_device@@Base+0xfc>
    cf18:	ldr	x0, [sp, #40]
    cf1c:	add	x0, x0, #0x10
    cf20:	str	x0, [sp, #40]
    cf24:	ldr	x0, [sp, #40]
    cf28:	ldr	x0, [x0]
    cf2c:	cmp	x0, #0x0
    cf30:	b.ne	cec8 <get_default_device@@Base+0x84>  // b.any
    cf34:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    cf38:	add	x0, x0, #0xe80
    cf3c:	ldr	x0, [x0]
    cf40:	ldp	x29, x30, [sp], #48
    cf44:	ret

000000000000cf48 <is_roff_device@@Base>:
    cf48:	stp	x29, x30, [sp, #-48]!
    cf4c:	mov	x29, sp
    cf50:	str	x0, [sp, #24]
    cf54:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    cf58:	add	x0, x0, #0xe88
    cf5c:	str	x0, [sp, #40]
    cf60:	b	cf90 <is_roff_device@@Base+0x48>
    cf64:	ldr	x0, [sp, #40]
    cf68:	ldr	x0, [x0]
    cf6c:	ldr	x1, [sp, #24]
    cf70:	bl	b070 <strcmp@plt>
    cf74:	cmp	w0, #0x0
    cf78:	b.ne	cf84 <is_roff_device@@Base+0x3c>  // b.any
    cf7c:	mov	w0, #0x1                   	// #1
    cf80:	b	cfa4 <is_roff_device@@Base+0x5c>
    cf84:	ldr	x0, [sp, #40]
    cf88:	add	x0, x0, #0x18
    cf8c:	str	x0, [sp, #40]
    cf90:	ldr	x0, [sp, #40]
    cf94:	ldr	x0, [x0]
    cf98:	cmp	x0, #0x0
    cf9c:	b.ne	cf64 <is_roff_device@@Base+0x1c>  // b.any
    cfa0:	mov	w0, #0x0                   	// #0
    cfa4:	ldp	x29, x30, [sp], #48
    cfa8:	ret

000000000000cfac <get_roff_encoding@@Base>:
    cfac:	stp	x29, x30, [sp, #-64]!
    cfb0:	mov	x29, sp
    cfb4:	str	x0, [sp, #24]
    cfb8:	str	x1, [sp, #16]
    cfbc:	strb	wzr, [sp, #55]
    cfc0:	str	xzr, [sp, #40]
    cfc4:	ldr	x0, [sp, #24]
    cfc8:	cmp	x0, #0x0
    cfcc:	b.eq	d02c <get_roff_encoding@@Base+0x80>  // b.none
    cfd0:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    cfd4:	add	x0, x0, #0xe88
    cfd8:	str	x0, [sp, #56]
    cfdc:	b	d01c <get_roff_encoding@@Base+0x70>
    cfe0:	ldr	x0, [sp, #56]
    cfe4:	ldr	x0, [x0]
    cfe8:	ldr	x1, [sp, #24]
    cfec:	bl	b070 <strcmp@plt>
    cff0:	cmp	w0, #0x0
    cff4:	b.ne	d010 <get_roff_encoding@@Base+0x64>  // b.any
    cff8:	mov	w0, #0x1                   	// #1
    cffc:	strb	w0, [sp, #55]
    d000:	ldr	x0, [sp, #56]
    d004:	ldr	x0, [x0, #8]
    d008:	str	x0, [sp, #40]
    d00c:	b	d02c <get_roff_encoding@@Base+0x80>
    d010:	ldr	x0, [sp, #56]
    d014:	add	x0, x0, #0x18
    d018:	str	x0, [sp, #56]
    d01c:	ldr	x0, [sp, #56]
    d020:	ldr	x0, [x0]
    d024:	cmp	x0, #0x0
    d028:	b.ne	cfe0 <get_roff_encoding@@Base+0x34>  // b.any
    d02c:	ldrb	w0, [sp, #55]
    d030:	eor	w0, w0, #0x1
    d034:	and	w0, w0, #0xff
    d038:	cmp	w0, #0x0
    d03c:	b.eq	d04c <get_roff_encoding@@Base+0xa0>  // b.none
    d040:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d044:	add	x0, x0, #0x9a0
    d048:	str	x0, [sp, #40]
    d04c:	ldr	x0, [sp, #24]
    d050:	cmp	x0, #0x0
    d054:	b.eq	d160 <get_roff_encoding@@Base+0x1b4>  // b.none
    d058:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d05c:	add	x1, x0, #0x940
    d060:	ldr	x0, [sp, #24]
    d064:	bl	b070 <strcmp@plt>
    d068:	cmp	w0, #0x0
    d06c:	b.ne	d160 <get_roff_encoding@@Base+0x1b4>  // b.any
    d070:	bl	ac40 <get_groff_preconv@plt>
    d074:	cmp	x0, #0x0
    d078:	b.ne	d160 <get_roff_encoding@@Base+0x1b4>  // b.any
    d07c:	bl	b530 <get_locale_charset@plt>
    d080:	mov	x2, x0
    d084:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d088:	add	x1, x0, #0x928
    d08c:	mov	x0, x2
    d090:	bl	b070 <strcmp@plt>
    d094:	cmp	w0, #0x0
    d098:	b.ne	d160 <get_roff_encoding@@Base+0x1b4>  // b.any
    d09c:	mov	x1, #0x0                   	// #0
    d0a0:	mov	w0, #0x0                   	// #0
    d0a4:	bl	b790 <setlocale@plt>
    d0a8:	str	x0, [sp, #32]
    d0ac:	mov	x2, #0x5                   	// #5
    d0b0:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d0b4:	add	x1, x0, #0xd38
    d0b8:	ldr	x0, [sp, #32]
    d0bc:	bl	ac60 <strncmp@plt>
    d0c0:	cmp	w0, #0x0
    d0c4:	b.eq	d154 <get_roff_encoding@@Base+0x1a8>  // b.none
    d0c8:	mov	x2, #0x5                   	// #5
    d0cc:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d0d0:	add	x1, x0, #0xd40
    d0d4:	ldr	x0, [sp, #32]
    d0d8:	bl	ac60 <strncmp@plt>
    d0dc:	cmp	w0, #0x0
    d0e0:	b.eq	d154 <get_roff_encoding@@Base+0x1a8>  // b.none
    d0e4:	mov	x2, #0x5                   	// #5
    d0e8:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d0ec:	add	x1, x0, #0x648
    d0f0:	ldr	x0, [sp, #32]
    d0f4:	bl	ac60 <strncmp@plt>
    d0f8:	cmp	w0, #0x0
    d0fc:	b.eq	d154 <get_roff_encoding@@Base+0x1a8>  // b.none
    d100:	mov	x2, #0x5                   	// #5
    d104:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d108:	add	x1, x0, #0x660
    d10c:	ldr	x0, [sp, #32]
    d110:	bl	ac60 <strncmp@plt>
    d114:	cmp	w0, #0x0
    d118:	b.eq	d154 <get_roff_encoding@@Base+0x1a8>  // b.none
    d11c:	mov	x2, #0x5                   	// #5
    d120:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d124:	add	x1, x0, #0x658
    d128:	ldr	x0, [sp, #32]
    d12c:	bl	ac60 <strncmp@plt>
    d130:	cmp	w0, #0x0
    d134:	b.eq	d154 <get_roff_encoding@@Base+0x1a8>  // b.none
    d138:	mov	x2, #0x5                   	// #5
    d13c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d140:	add	x1, x0, #0x678
    d144:	ldr	x0, [sp, #32]
    d148:	bl	ac60 <strncmp@plt>
    d14c:	cmp	w0, #0x0
    d150:	b.ne	d160 <get_roff_encoding@@Base+0x1b4>  // b.any
    d154:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d158:	add	x0, x0, #0x928
    d15c:	str	x0, [sp, #40]
    d160:	ldr	x0, [sp, #40]
    d164:	cmp	x0, #0x0
    d168:	b.eq	d174 <get_roff_encoding@@Base+0x1c8>  // b.none
    d16c:	ldr	x0, [sp, #40]
    d170:	b	d178 <get_roff_encoding@@Base+0x1cc>
    d174:	ldr	x0, [sp, #16]
    d178:	ldp	x29, x30, [sp], #64
    d17c:	ret

000000000000d180 <get_output_encoding@@Base>:
    d180:	stp	x29, x30, [sp, #-48]!
    d184:	mov	x29, sp
    d188:	str	x0, [sp, #24]
    d18c:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    d190:	add	x0, x0, #0xe88
    d194:	str	x0, [sp, #40]
    d198:	b	d1cc <get_output_encoding@@Base+0x4c>
    d19c:	ldr	x0, [sp, #40]
    d1a0:	ldr	x0, [x0]
    d1a4:	ldr	x1, [sp, #24]
    d1a8:	bl	b070 <strcmp@plt>
    d1ac:	cmp	w0, #0x0
    d1b0:	b.ne	d1c0 <get_output_encoding@@Base+0x40>  // b.any
    d1b4:	ldr	x0, [sp, #40]
    d1b8:	ldr	x0, [x0, #16]
    d1bc:	b	d1e0 <get_output_encoding@@Base+0x60>
    d1c0:	ldr	x0, [sp, #40]
    d1c4:	add	x0, x0, #0x18
    d1c8:	str	x0, [sp, #40]
    d1cc:	ldr	x0, [sp, #40]
    d1d0:	ldr	x0, [x0]
    d1d4:	cmp	x0, #0x0
    d1d8:	b.ne	d19c <get_output_encoding@@Base+0x1c>  // b.any
    d1dc:	mov	x0, #0x0                   	// #0
    d1e0:	ldp	x29, x30, [sp], #48
    d1e4:	ret

000000000000d1e8 <get_less_charset@@Base>:
    d1e8:	stp	x29, x30, [sp, #-48]!
    d1ec:	mov	x29, sp
    d1f0:	str	x0, [sp, #24]
    d1f4:	ldr	x0, [sp, #24]
    d1f8:	cmp	x0, #0x0
    d1fc:	b.eq	d250 <get_less_charset@@Base+0x68>  // b.none
    d200:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    d204:	add	x0, x0, #0xff0
    d208:	str	x0, [sp, #40]
    d20c:	b	d240 <get_less_charset@@Base+0x58>
    d210:	ldr	x0, [sp, #40]
    d214:	ldr	x0, [x0]
    d218:	ldr	x1, [sp, #24]
    d21c:	bl	b070 <strcmp@plt>
    d220:	cmp	w0, #0x0
    d224:	b.ne	d234 <get_less_charset@@Base+0x4c>  // b.any
    d228:	ldr	x0, [sp, #40]
    d22c:	ldr	x0, [x0, #8]
    d230:	b	d258 <get_less_charset@@Base+0x70>
    d234:	ldr	x0, [sp, #40]
    d238:	add	x0, x0, #0x18
    d23c:	str	x0, [sp, #40]
    d240:	ldr	x0, [sp, #40]
    d244:	ldr	x0, [x0]
    d248:	cmp	x0, #0x0
    d24c:	b.ne	d210 <get_less_charset@@Base+0x28>  // b.any
    d250:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d254:	add	x0, x0, #0x9e0
    d258:	ldp	x29, x30, [sp], #48
    d25c:	ret

000000000000d260 <get_jless_charset@@Base>:
    d260:	stp	x29, x30, [sp, #-48]!
    d264:	mov	x29, sp
    d268:	str	x0, [sp, #24]
    d26c:	ldr	x0, [sp, #24]
    d270:	cmp	x0, #0x0
    d274:	b.eq	d2c8 <get_jless_charset@@Base+0x68>  // b.none
    d278:	adrp	x0, 5d000 <base_len@@Base+0x455fc>
    d27c:	add	x0, x0, #0xff0
    d280:	str	x0, [sp, #40]
    d284:	b	d2b8 <get_jless_charset@@Base+0x58>
    d288:	ldr	x0, [sp, #40]
    d28c:	ldr	x0, [x0]
    d290:	ldr	x1, [sp, #24]
    d294:	bl	b070 <strcmp@plt>
    d298:	cmp	w0, #0x0
    d29c:	b.ne	d2ac <get_jless_charset@@Base+0x4c>  // b.any
    d2a0:	ldr	x0, [sp, #40]
    d2a4:	ldr	x0, [x0, #16]
    d2a8:	b	d2cc <get_jless_charset@@Base+0x6c>
    d2ac:	ldr	x0, [sp, #40]
    d2b0:	add	x0, x0, #0x18
    d2b4:	str	x0, [sp, #40]
    d2b8:	ldr	x0, [sp, #40]
    d2bc:	ldr	x0, [x0]
    d2c0:	cmp	x0, #0x0
    d2c4:	b.ne	d288 <get_jless_charset@@Base+0x28>  // b.any
    d2c8:	mov	x0, #0x0                   	// #0
    d2cc:	ldp	x29, x30, [sp], #48
    d2d0:	ret
    d2d4:	stp	x29, x30, [sp, #-48]!
    d2d8:	mov	x29, sp
    d2dc:	str	x0, [sp, #24]
    d2e0:	ldr	x0, [sp, #24]
    d2e4:	bl	a820 <strlen@plt>
    d2e8:	str	x0, [sp, #32]
    d2ec:	ldr	x0, [sp, #32]
    d2f0:	cmp	x0, #0x4
    d2f4:	b.ls	d334 <get_jless_charset@@Base+0xd4>  // b.plast
    d2f8:	ldr	x0, [sp, #32]
    d2fc:	sub	x0, x0, #0x4
    d300:	ldr	x1, [sp, #24]
    d304:	add	x2, x1, x0
    d308:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d30c:	add	x1, x0, #0xd48
    d310:	mov	x0, x2
    d314:	bl	ade0 <strcasecmp@plt>
    d318:	cmp	w0, #0x0
    d31c:	b.ne	d334 <get_jless_charset@@Base+0xd4>  // b.any
    d320:	ldr	x0, [sp, #32]
    d324:	sub	x0, x0, #0x4
    d328:	ldr	x1, [sp, #24]
    d32c:	add	x0, x1, x0
    d330:	strb	wzr, [x0]
    d334:	ldr	x0, [sp, #32]
    d338:	cmp	x0, #0x4
    d33c:	b.ls	d37c <get_jless_charset@@Base+0x11c>  // b.plast
    d340:	ldr	x0, [sp, #32]
    d344:	sub	x0, x0, #0x4
    d348:	ldr	x1, [sp, #24]
    d34c:	add	x2, x1, x0
    d350:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d354:	add	x1, x0, #0xd50
    d358:	mov	x0, x2
    d35c:	bl	ade0 <strcasecmp@plt>
    d360:	cmp	w0, #0x0
    d364:	b.ne	d37c <get_jless_charset@@Base+0x11c>  // b.any
    d368:	ldr	x0, [sp, #32]
    d36c:	sub	x0, x0, #0x4
    d370:	ldr	x1, [sp, #24]
    d374:	add	x0, x1, x0
    d378:	strb	wzr, [x0]
    d37c:	ldr	x0, [sp, #32]
    d380:	cmp	x0, #0x5
    d384:	b.ls	d3c4 <get_jless_charset@@Base+0x164>  // b.plast
    d388:	ldr	x0, [sp, #32]
    d38c:	sub	x0, x0, #0x5
    d390:	ldr	x1, [sp, #24]
    d394:	add	x2, x1, x0
    d398:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d39c:	add	x1, x0, #0xd58
    d3a0:	mov	x0, x2
    d3a4:	bl	ade0 <strcasecmp@plt>
    d3a8:	cmp	w0, #0x0
    d3ac:	b.ne	d3c4 <get_jless_charset@@Base+0x164>  // b.any
    d3b0:	ldr	x0, [sp, #32]
    d3b4:	sub	x0, x0, #0x5
    d3b8:	ldr	x1, [sp, #24]
    d3bc:	add	x0, x1, x0
    d3c0:	strb	wzr, [x0]
    d3c4:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d3c8:	add	x0, x0, #0xb0
    d3cc:	str	x0, [sp, #40]
    d3d0:	b	d410 <get_jless_charset@@Base+0x1b0>
    d3d4:	ldr	x0, [sp, #40]
    d3d8:	ldr	x0, [x0]
    d3dc:	ldr	x1, [sp, #24]
    d3e0:	bl	ade0 <strcasecmp@plt>
    d3e4:	cmp	w0, #0x0
    d3e8:	b.ne	d404 <get_jless_charset@@Base+0x1a4>  // b.any
    d3ec:	ldr	x0, [sp, #24]
    d3f0:	bl	b130 <free@plt>
    d3f4:	ldr	x0, [sp, #40]
    d3f8:	ldr	x0, [x0, #8]
    d3fc:	bl	ad10 <xstrdup@plt>
    d400:	b	d424 <get_jless_charset@@Base+0x1c4>
    d404:	ldr	x0, [sp, #40]
    d408:	add	x0, x0, #0x10
    d40c:	str	x0, [sp, #40]
    d410:	ldr	x0, [sp, #40]
    d414:	ldr	x0, [x0]
    d418:	cmp	x0, #0x0
    d41c:	b.ne	d3d4 <get_jless_charset@@Base+0x174>  // b.any
    d420:	ldr	x0, [sp, #24]
    d424:	ldp	x29, x30, [sp], #48
    d428:	ret

000000000000d42c <check_preprocessor_encoding@@Base>:
    d42c:	stp	x29, x30, [sp, #-112]!
    d430:	mov	x29, sp
    d434:	str	x0, [sp, #40]
    d438:	str	x1, [sp, #32]
    d43c:	str	x2, [sp, #24]
    d440:	str	xzr, [sp, #104]
    d444:	ldr	x0, [sp, #40]
    d448:	bl	b2c0 <pipeline_peekline@plt>
    d44c:	str	x0, [sp, #64]
    d450:	str	xzr, [sp, #96]
    d454:	str	xzr, [sp, #72]
    d458:	ldr	x0, [sp, #64]
    d45c:	cmp	x0, #0x0
    d460:	b.eq	d50c <check_preprocessor_encoding@@Base+0xe0>  // b.none
    d464:	mov	x2, #0x4                   	// #4
    d468:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d46c:	add	x1, x0, #0xd60
    d470:	ldr	x0, [sp, #64]
    d474:	bl	ac60 <strncmp@plt>
    d478:	cmp	w0, #0x0
    d47c:	b.eq	d49c <check_preprocessor_encoding@@Base+0x70>  // b.none
    d480:	mov	x2, #0x4                   	// #4
    d484:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d488:	add	x1, x0, #0xd68
    d48c:	ldr	x0, [sp, #64]
    d490:	bl	ac60 <strncmp@plt>
    d494:	cmp	w0, #0x0
    d498:	b.ne	d50c <check_preprocessor_encoding@@Base+0xe0>  // b.any
    d49c:	mov	w1, #0xa                   	// #10
    d4a0:	ldr	x0, [sp, #64]
    d4a4:	bl	b270 <strchr@plt>
    d4a8:	str	x0, [sp, #56]
    d4ac:	ldr	x0, [sp, #64]
    d4b0:	add	x0, x0, #0x4
    d4b4:	str	x0, [sp, #96]
    d4b8:	ldr	x0, [sp, #56]
    d4bc:	cmp	x0, #0x0
    d4c0:	b.ne	d4dc <check_preprocessor_encoding@@Base+0xb0>  // b.any
    d4c4:	ldr	x0, [sp, #96]
    d4c8:	bl	a820 <strlen@plt>
    d4cc:	mov	x1, x0
    d4d0:	ldr	x0, [sp, #96]
    d4d4:	add	x0, x0, x1
    d4d8:	b	d4e0 <check_preprocessor_encoding@@Base+0xb4>
    d4dc:	ldr	x0, [sp, #56]
    d4e0:	str	x0, [sp, #88]
    d4e4:	ldr	x1, [sp, #88]
    d4e8:	ldr	x0, [sp, #96]
    d4ec:	sub	x0, x1, x0
    d4f0:	mov	x1, x0
    d4f4:	mov	x3, #0x3                   	// #3
    d4f8:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d4fc:	add	x2, x0, #0xd70
    d500:	ldr	x0, [sp, #96]
    d504:	bl	aef0 <memmem@plt>
    d508:	str	x0, [sp, #80]
    d50c:	ldr	x0, [sp, #96]
    d510:	cmp	x0, #0x0
    d514:	b.eq	d648 <check_preprocessor_encoding@@Base+0x21c>  // b.none
    d518:	ldr	x0, [sp, #80]
    d51c:	cmp	x0, #0x0
    d520:	b.eq	d648 <check_preprocessor_encoding@@Base+0x21c>  // b.none
    d524:	ldr	x0, [sp, #80]
    d528:	add	x0, x0, #0x3
    d52c:	str	x0, [sp, #80]
    d530:	b	d61c <check_preprocessor_encoding@@Base+0x1f0>
    d534:	ldr	x0, [sp, #80]
    d538:	add	x0, x0, #0x1
    d53c:	str	x0, [sp, #80]
    d540:	ldr	x0, [sp, #80]
    d544:	ldrb	w0, [x0]
    d548:	cmp	w0, #0x20
    d54c:	b.eq	d534 <check_preprocessor_encoding@@Base+0x108>  // b.none
    d550:	mov	x2, #0x7                   	// #7
    d554:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d558:	add	x1, x0, #0xd78
    d55c:	ldr	x0, [sp, #80]
    d560:	bl	ac60 <strncmp@plt>
    d564:	cmp	w0, #0x0
    d568:	b.ne	d5e4 <check_preprocessor_encoding@@Base+0x1b8>  // b.any
    d56c:	ldr	x0, [sp, #80]
    d570:	add	x0, x0, #0x7
    d574:	str	x0, [sp, #80]
    d578:	b	d588 <check_preprocessor_encoding@@Base+0x15c>
    d57c:	ldr	x0, [sp, #80]
    d580:	add	x0, x0, #0x1
    d584:	str	x0, [sp, #80]
    d588:	ldr	x0, [sp, #80]
    d58c:	ldrb	w0, [x0]
    d590:	cmp	w0, #0x20
    d594:	b.eq	d57c <check_preprocessor_encoding@@Base+0x150>  // b.none
    d598:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d59c:	add	x0, x0, #0xd80
    d5a0:	str	x0, [sp, #48]
    d5a4:	ldr	x1, [sp, #48]
    d5a8:	ldr	x0, [sp, #80]
    d5ac:	bl	b240 <strspn@plt>
    d5b0:	str	x0, [sp, #72]
    d5b4:	ldr	x1, [sp, #72]
    d5b8:	ldr	x0, [sp, #80]
    d5bc:	bl	b410 <xstrndup@plt>
    d5c0:	str	x0, [sp, #104]
    d5c4:	ldr	x0, [sp, #104]
    d5c8:	bl	d2d4 <get_jless_charset@@Base+0x74>
    d5cc:	str	x0, [sp, #104]
    d5d0:	ldr	x1, [sp, #104]
    d5d4:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d5d8:	add	x0, x0, #0xdc8
    d5dc:	bl	aab0 <debug@plt>
    d5e0:	b	d648 <check_preprocessor_encoding@@Base+0x21c>
    d5e4:	ldr	x1, [sp, #88]
    d5e8:	ldr	x0, [sp, #80]
    d5ec:	sub	x0, x1, x0
    d5f0:	mov	x2, x0
    d5f4:	mov	w1, #0x3b                  	// #59
    d5f8:	ldr	x0, [sp, #80]
    d5fc:	bl	b3b0 <memchr@plt>
    d600:	str	x0, [sp, #80]
    d604:	ldr	x0, [sp, #80]
    d608:	cmp	x0, #0x0
    d60c:	b.eq	d61c <check_preprocessor_encoding@@Base+0x1f0>  // b.none
    d610:	ldr	x0, [sp, #80]
    d614:	add	x0, x0, #0x1
    d618:	str	x0, [sp, #80]
    d61c:	ldr	x0, [sp, #80]
    d620:	cmp	x0, #0x0
    d624:	b.eq	d648 <check_preprocessor_encoding@@Base+0x21c>  // b.none
    d628:	ldr	x1, [sp, #80]
    d62c:	ldr	x0, [sp, #88]
    d630:	cmp	x1, x0
    d634:	b.cs	d648 <check_preprocessor_encoding@@Base+0x21c>  // b.hs, b.nlast
    d638:	ldr	x0, [sp, #80]
    d63c:	ldrb	w0, [x0]
    d640:	cmp	w0, #0x0
    d644:	b.ne	d540 <check_preprocessor_encoding@@Base+0x114>  // b.any
    d648:	ldr	x0, [sp, #32]
    d64c:	cmp	x0, #0x0
    d650:	b.eq	d738 <check_preprocessor_encoding@@Base+0x30c>  // b.none
    d654:	ldr	x0, [sp, #24]
    d658:	cmp	x0, #0x0
    d65c:	b.eq	d738 <check_preprocessor_encoding@@Base+0x30c>  // b.none
    d660:	ldr	x0, [sp, #104]
    d664:	cmp	x0, #0x0
    d668:	b.eq	d738 <check_preprocessor_encoding@@Base+0x30c>  // b.none
    d66c:	ldr	x1, [sp, #32]
    d670:	ldr	x0, [sp, #104]
    d674:	bl	ade0 <strcasecmp@plt>
    d678:	cmp	w0, #0x0
    d67c:	b.eq	d738 <check_preprocessor_encoding@@Base+0x30c>  // b.none
    d680:	ldr	x0, [sp, #88]
    d684:	cmp	x0, #0x0
    d688:	b.ne	d6ac <check_preprocessor_encoding@@Base+0x280>  // b.any
    d68c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d690:	add	x3, x0, #0xe28
    d694:	mov	w2, #0x39a                 	// #922
    d698:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d69c:	add	x1, x0, #0xde8
    d6a0:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d6a4:	add	x0, x0, #0xdf8
    d6a8:	bl	b630 <__assert_fail@plt>
    d6ac:	ldr	x0, [sp, #80]
    d6b0:	cmp	x0, #0x0
    d6b4:	b.ne	d6d8 <check_preprocessor_encoding@@Base+0x2ac>  // b.any
    d6b8:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d6bc:	add	x3, x0, #0xe28
    d6c0:	mov	w2, #0x39b                 	// #923
    d6c4:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d6c8:	add	x1, x0, #0xde8
    d6cc:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d6d0:	add	x0, x0, #0xe08
    d6d4:	bl	b630 <__assert_fail@plt>
    d6d8:	ldr	x1, [sp, #80]
    d6dc:	ldr	x0, [sp, #64]
    d6e0:	sub	x0, x1, x0
    d6e4:	mov	w6, w0
    d6e8:	ldr	x1, [sp, #80]
    d6ec:	ldr	x0, [sp, #72]
    d6f0:	add	x0, x1, x0
    d6f4:	ldr	x1, [sp, #88]
    d6f8:	sub	x0, x1, x0
    d6fc:	mov	w2, w0
    d700:	ldr	x1, [sp, #80]
    d704:	ldr	x0, [sp, #72]
    d708:	add	x0, x1, x0
    d70c:	mov	x5, x0
    d710:	mov	w4, w2
    d714:	ldr	x3, [sp, #32]
    d718:	ldr	x2, [sp, #64]
    d71c:	mov	w1, w6
    d720:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d724:	add	x0, x0, #0xe18
    d728:	bl	b1a0 <xasprintf@plt>
    d72c:	mov	x1, x0
    d730:	ldr	x0, [sp, #24]
    d734:	str	x1, [x0]
    d738:	ldr	x0, [sp, #104]
    d73c:	ldp	x29, x30, [sp], #112
    d740:	ret

000000000000d744 <string_equals@@Base>:
    d744:	stp	x29, x30, [sp, #-32]!
    d748:	mov	x29, sp
    d74c:	str	x0, [sp, #24]
    d750:	str	x1, [sp, #16]
    d754:	ldr	x1, [sp, #16]
    d758:	ldr	x0, [sp, #24]
    d75c:	bl	b070 <strcmp@plt>
    d760:	cmp	w0, #0x0
    d764:	cset	w0, eq  // eq = none
    d768:	and	w0, w0, #0xff
    d76c:	ldp	x29, x30, [sp], #32
    d770:	ret

000000000000d774 <string_hash@@Base>:
    d774:	stp	x29, x30, [sp, #-32]!
    d778:	mov	x29, sp
    d77c:	str	x0, [sp, #24]
    d780:	ldr	x0, [sp, #24]
    d784:	bl	a820 <strlen@plt>
    d788:	mov	x1, x0
    d78c:	ldr	x0, [sp, #24]
    d790:	bl	b010 <hash_pjw_bare@plt>
    d794:	ldp	x29, x30, [sp], #32
    d798:	ret

000000000000d79c <plain_free@@Base>:
    d79c:	stp	x29, x30, [sp, #-32]!
    d7a0:	mov	x29, sp
    d7a4:	str	x0, [sp, #24]
    d7a8:	ldr	x0, [sp, #24]
    d7ac:	bl	b130 <free@plt>
    d7b0:	nop
    d7b4:	ldp	x29, x30, [sp], #32
    d7b8:	ret

000000000000d7bc <new_string_list@@Base>:
    d7bc:	stp	x29, x30, [sp, #-32]!
    d7c0:	mov	x29, sp
    d7c4:	str	x0, [sp, #24]
    d7c8:	strb	w1, [sp, #23]
    d7cc:	ldrb	w4, [sp, #23]
    d7d0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    d7d4:	ldr	x3, [x0, #4000]
    d7d8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    d7dc:	ldr	x2, [x0, #3864]
    d7e0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    d7e4:	ldr	x1, [x0, #3824]
    d7e8:	ldr	x0, [sp, #24]
    d7ec:	bl	b560 <gl_list_create_empty@plt>
    d7f0:	ldp	x29, x30, [sp], #32
    d7f4:	ret

000000000000d7f8 <new_string_map@@Base>:
    d7f8:	stp	x29, x30, [sp, #-32]!
    d7fc:	mov	x29, sp
    d800:	str	x0, [sp, #24]
    d804:	str	x1, [sp, #16]
    d808:	ldr	x4, [sp, #16]
    d80c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    d810:	ldr	x3, [x0, #4000]
    d814:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    d818:	ldr	x2, [x0, #3864]
    d81c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    d820:	ldr	x1, [x0, #3824]
    d824:	ldr	x0, [sp, #24]
    d828:	bl	b4f0 <gl_map_create_empty@plt>
    d82c:	ldp	x29, x30, [sp], #32
    d830:	ret

000000000000d834 <new_string_set@@Base>:
    d834:	stp	x29, x30, [sp, #-32]!
    d838:	mov	x29, sp
    d83c:	str	x0, [sp, #24]
    d840:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    d844:	ldr	x3, [x0, #4000]
    d848:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    d84c:	ldr	x2, [x0, #3864]
    d850:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    d854:	ldr	x1, [x0, #3824]
    d858:	ldr	x0, [sp, #24]
    d85c:	bl	ad50 <gl_set_create_empty@plt>
    d860:	ldp	x29, x30, [sp], #32
    d864:	ret

000000000000d868 <get_line_length@@Base>:
    d868:	stp	x29, x30, [sp, #-64]!
    d86c:	mov	x29, sp
    d870:	mov	w0, #0xffffffff            	// #-1
    d874:	str	w0, [sp, #60]
    d878:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d87c:	add	x0, x0, #0x350
    d880:	ldr	w0, [x0]
    d884:	cmn	w0, #0x1
    d888:	b.eq	d89c <get_line_length@@Base+0x34>  // b.none
    d88c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d890:	add	x0, x0, #0x350
    d894:	ldr	w0, [x0]
    d898:	b	da50 <get_line_length@@Base+0x1e8>
    d89c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d8a0:	add	x0, x0, #0x350
    d8a4:	mov	w1, #0x50                  	// #80
    d8a8:	str	w1, [x0]
    d8ac:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d8b0:	add	x0, x0, #0xe48
    d8b4:	bl	b670 <getenv@plt>
    d8b8:	str	x0, [sp, #48]
    d8bc:	ldr	x0, [sp, #48]
    d8c0:	cmp	x0, #0x0
    d8c4:	b.eq	d900 <get_line_length@@Base+0x98>  // b.none
    d8c8:	ldr	x0, [sp, #48]
    d8cc:	bl	aae0 <atoi@plt>
    d8d0:	str	w0, [sp, #44]
    d8d4:	ldr	w0, [sp, #44]
    d8d8:	cmp	w0, #0x0
    d8dc:	b.le	d900 <get_line_length@@Base+0x98>
    d8e0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d8e4:	add	x0, x0, #0x350
    d8e8:	ldr	w1, [sp, #44]
    d8ec:	str	w1, [x0]
    d8f0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d8f4:	add	x0, x0, #0x350
    d8f8:	ldr	w0, [x0]
    d8fc:	b	da50 <get_line_length@@Base+0x1e8>
    d900:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d904:	add	x0, x0, #0xe58
    d908:	bl	b670 <getenv@plt>
    d90c:	str	x0, [sp, #48]
    d910:	ldr	x0, [sp, #48]
    d914:	cmp	x0, #0x0
    d918:	b.eq	d954 <get_line_length@@Base+0xec>  // b.none
    d91c:	ldr	x0, [sp, #48]
    d920:	bl	aae0 <atoi@plt>
    d924:	str	w0, [sp, #44]
    d928:	ldr	w0, [sp, #44]
    d92c:	cmp	w0, #0x0
    d930:	b.le	d954 <get_line_length@@Base+0xec>
    d934:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d938:	add	x0, x0, #0x350
    d93c:	ldr	w1, [sp, #44]
    d940:	str	w1, [x0]
    d944:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    d948:	add	x0, x0, #0x350
    d94c:	ldr	w0, [x0]
    d950:	b	da50 <get_line_length@@Base+0x1e8>
    d954:	mov	w1, #0x0                   	// #0
    d958:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d95c:	add	x0, x0, #0xe60
    d960:	bl	abd0 <open@plt>
    d964:	str	w0, [sp, #40]
    d968:	ldr	w0, [sp, #40]
    d96c:	cmp	w0, #0x0
    d970:	b.lt	d980 <get_line_length@@Base+0x118>  // b.tstop
    d974:	ldr	w0, [sp, #40]
    d978:	str	w0, [sp, #60]
    d97c:	b	d9b0 <get_line_length@@Base+0x148>
    d980:	mov	w0, #0x1                   	// #1
    d984:	bl	b3f0 <isatty@plt>
    d988:	cmp	w0, #0x0
    d98c:	b.eq	d99c <get_line_length@@Base+0x134>  // b.none
    d990:	mov	w0, #0x1                   	// #1
    d994:	str	w0, [sp, #60]
    d998:	b	d9b0 <get_line_length@@Base+0x148>
    d99c:	mov	w0, #0x0                   	// #0
    d9a0:	bl	b3f0 <isatty@plt>
    d9a4:	cmp	w0, #0x0
    d9a8:	b.eq	d9b0 <get_line_length@@Base+0x148>  // b.none
    d9ac:	str	wzr, [sp, #60]
    d9b0:	ldr	w0, [sp, #60]
    d9b4:	cmp	w0, #0x0
    d9b8:	b.lt	da34 <get_line_length@@Base+0x1cc>  // b.tstop
    d9bc:	add	x0, sp, #0x18
    d9c0:	mov	x2, x0
    d9c4:	mov	w1, #0x5413                	// #21523
    d9c8:	ldr	w0, [sp, #60]
    d9cc:	bl	b260 <rpl_ioctl@plt>
    d9d0:	str	w0, [sp, #36]
    d9d4:	ldr	w0, [sp, #40]
    d9d8:	cmp	w0, #0x0
    d9dc:	b.lt	d9e8 <get_line_length@@Base+0x180>  // b.tstop
    d9e0:	ldr	w0, [sp, #40]
    d9e4:	bl	ae80 <close@plt>
    d9e8:	ldr	w0, [sp, #36]
    d9ec:	cmp	w0, #0x0
    d9f0:	b.eq	da04 <get_line_length@@Base+0x19c>  // b.none
    d9f4:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    d9f8:	add	x0, x0, #0xe70
    d9fc:	bl	a880 <perror@plt>
    da00:	b	da34 <get_line_length@@Base+0x1cc>
    da04:	ldrh	w0, [sp, #26]
    da08:	cmp	w0, #0x0
    da0c:	b.eq	da34 <get_line_length@@Base+0x1cc>  // b.none
    da10:	ldrh	w0, [sp, #26]
    da14:	mov	w1, w0
    da18:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    da1c:	add	x0, x0, #0x350
    da20:	str	w1, [x0]
    da24:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    da28:	add	x0, x0, #0x350
    da2c:	ldr	w0, [x0]
    da30:	b	da50 <get_line_length@@Base+0x1e8>
    da34:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    da38:	add	x0, x0, #0x350
    da3c:	mov	w1, #0x50                  	// #80
    da40:	str	w1, [x0]
    da44:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    da48:	add	x0, x0, #0x350
    da4c:	ldr	w0, [x0]
    da50:	ldp	x29, x30, [sp], #64
    da54:	ret
    da58:	stp	x29, x30, [sp, #-80]!
    da5c:	mov	x29, sp
    da60:	str	x0, [sp, #24]
    da64:	str	x1, [sp, #16]
    da68:	ldr	x0, [sp, #24]
    da6c:	str	x0, [sp, #72]
    da70:	ldr	x0, [sp, #16]
    da74:	str	x0, [sp, #64]
    da78:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    da7c:	ldr	x0, [x0, #3984]
    da80:	ldr	x0, [x0]
    da84:	ldr	x1, [sp, #72]
    da88:	bl	aed0 <gl_map_get@plt>
    da8c:	str	x0, [sp, #56]
    da90:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    da94:	ldr	x0, [x0, #3984]
    da98:	ldr	x0, [x0]
    da9c:	ldr	x1, [sp, #64]
    daa0:	bl	aed0 <gl_map_get@plt>
    daa4:	str	x0, [sp, #48]
    daa8:	ldr	x0, [sp, #56]
    daac:	cmp	x0, #0x0
    dab0:	b.eq	dac0 <get_line_length@@Base+0x258>  // b.none
    dab4:	ldr	x0, [sp, #56]
    dab8:	ldr	x0, [x0]
    dabc:	b	dac4 <get_line_length@@Base+0x25c>
    dac0:	mov	x0, #0xffffffffffffffff    	// #-1
    dac4:	str	x0, [sp, #40]
    dac8:	ldr	x0, [sp, #48]
    dacc:	cmp	x0, #0x0
    dad0:	b.eq	dae0 <get_line_length@@Base+0x278>  // b.none
    dad4:	ldr	x0, [sp, #48]
    dad8:	ldr	x0, [x0]
    dadc:	b	dae4 <get_line_length@@Base+0x27c>
    dae0:	mov	x0, #0xffffffffffffffff    	// #-1
    dae4:	str	x0, [sp, #32]
    dae8:	ldr	x1, [sp, #40]
    daec:	ldr	x0, [sp, #32]
    daf0:	cmp	x1, x0
    daf4:	b.cs	db00 <get_line_length@@Base+0x298>  // b.hs, b.nlast
    daf8:	mov	w0, #0xffffffff            	// #-1
    dafc:	b	db1c <get_line_length@@Base+0x2b4>
    db00:	ldr	x1, [sp, #40]
    db04:	ldr	x0, [sp, #32]
    db08:	cmp	x1, x0
    db0c:	b.ls	db18 <get_line_length@@Base+0x2b0>  // b.plast
    db10:	mov	w0, #0x1                   	// #1
    db14:	b	db1c <get_line_length@@Base+0x2b4>
    db18:	mov	w0, #0x0                   	// #0
    db1c:	ldp	x29, x30, [sp], #80
    db20:	ret

000000000000db24 <order_files@@Base>:
    db24:	stp	x29, x30, [sp, #-352]!
    db28:	mov	x29, sp
    db2c:	str	x0, [sp, #24]
    db30:	str	x1, [sp, #16]
    db34:	ldr	x0, [sp, #16]
    db38:	ldr	x0, [x0]
    db3c:	str	x0, [sp, #344]
    db40:	mov	w0, #0x4000                	// #16384
    db44:	str	w0, [sp, #340]
    db48:	ldr	w0, [sp, #340]
    db4c:	orr	w0, w0, #0x200000
    db50:	str	w0, [sp, #340]
    db54:	ldr	w1, [sp, #340]
    db58:	ldr	x0, [sp, #24]
    db5c:	bl	abd0 <open@plt>
    db60:	str	w0, [sp, #336]
    db64:	ldr	w0, [sp, #336]
    db68:	cmp	w0, #0x0
    db6c:	b.lt	dd18 <order_files@@Base+0x1f4>  // b.tstop
    db70:	add	x0, sp, #0xc0
    db74:	mov	x1, x0
    db78:	ldr	w0, [sp, #336]
    db7c:	bl	aca0 <fstatfs@plt>
    db80:	cmp	w0, #0x0
    db84:	b.ge	db94 <order_files@@Base+0x70>  // b.tcont
    db88:	ldr	w0, [sp, #336]
    db8c:	bl	ae80 <close@plt>
    db90:	b	dd1c <order_files@@Base+0x1f8>
    db94:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    db98:	ldr	x4, [x0, #4000]
    db9c:	mov	x3, #0x0                   	// #0
    dba0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    dba4:	ldr	x2, [x0, #3864]
    dba8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    dbac:	ldr	x1, [x0, #3824]
    dbb0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    dbb4:	ldr	x0, [x0, #3912]
    dbb8:	bl	b4f0 <gl_map_create_empty@plt>
    dbbc:	mov	x1, x0
    dbc0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    dbc4:	ldr	x0, [x0, #3984]
    dbc8:	str	x1, [x0]
    dbcc:	mov	w1, #0x0                   	// #0
    dbd0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    dbd4:	ldr	x0, [x0, #3896]
    dbd8:	bl	b3d0 <new_string_list@plt>
    dbdc:	str	x0, [sp, #328]
    dbe0:	add	x0, sp, #0x20
    dbe4:	mov	x8, x0
    dbe8:	ldr	x0, [sp, #344]
    dbec:	bl	ab80 <gl_list_iterator@plt>
    dbf0:	b	dcb8 <order_files@@Base+0x194>
    dbf4:	ldr	x0, [sp, #184]
    dbf8:	mov	w2, #0x0                   	// #0
    dbfc:	mov	x1, x0
    dc00:	ldr	w0, [sp, #336]
    dc04:	bl	b620 <openat@plt>
    dc08:	str	w0, [sp, #324]
    dc0c:	ldr	w0, [sp, #324]
    dc10:	cmp	w0, #0x0
    dc14:	b.ge	dc1c <order_files@@Base+0xf8>  // b.tcont
    dc18:	b	dcb8 <order_files@@Base+0x194>
    dc1c:	add	x0, sp, #0x58
    dc20:	mov	x2, #0x58                  	// #88
    dc24:	mov	w1, #0x0                   	// #0
    dc28:	bl	acb0 <memset@plt>
    dc2c:	str	xzr, [sp, #88]
    dc30:	ldr	x0, [sp, #200]
    dc34:	str	x0, [sp, #96]
    dc38:	str	wzr, [sp, #104]
    dc3c:	mov	w0, #0x1                   	// #1
    dc40:	str	w0, [sp, #112]
    dc44:	add	x0, sp, #0x58
    dc48:	mov	x2, x0
    dc4c:	mov	w1, #0x660b                	// #26123
    dc50:	movk	w1, #0xc020, lsl #16
    dc54:	ldr	w0, [sp, #324]
    dc58:	bl	b260 <rpl_ioctl@plt>
    dc5c:	cmp	w0, #0x0
    dc60:	b.ne	dc94 <order_files@@Base+0x170>  // b.any
    dc64:	mov	x0, #0x8                   	// #8
    dc68:	bl	ace0 <xmalloc@plt>
    dc6c:	str	x0, [sp, #312]
    dc70:	ldr	x1, [sp, #128]
    dc74:	ldr	x0, [sp, #312]
    dc78:	str	x1, [x0]
    dc7c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    dc80:	ldr	x0, [x0, #3984]
    dc84:	ldr	x0, [x0]
    dc88:	ldr	x1, [sp, #184]
    dc8c:	ldr	x2, [sp, #312]
    dc90:	bl	b0d0 <gl_map_put@plt>
    dc94:	ldr	w0, [sp, #324]
    dc98:	bl	ae80 <close@plt>
    dc9c:	ldr	x0, [sp, #184]
    dca0:	bl	ad10 <xstrdup@plt>
    dca4:	mov	x2, x0
    dca8:	adrp	x0, d000 <get_roff_encoding@@Base+0x54>
    dcac:	add	x1, x0, #0xa58
    dcb0:	ldr	x0, [sp, #328]
    dcb4:	bl	a970 <gl_sortedlist_add@plt>
    dcb8:	add	x2, sp, #0xb0
    dcbc:	add	x1, sp, #0xb8
    dcc0:	add	x0, sp, #0x20
    dcc4:	bl	ad60 <gl_list_iterator_next@plt>
    dcc8:	and	w0, w0, #0xff
    dccc:	cmp	w0, #0x0
    dcd0:	b.ne	dbf4 <order_files@@Base+0xd0>  // b.any
    dcd4:	add	x0, sp, #0x20
    dcd8:	bl	b050 <gl_list_iterator_free@plt>
    dcdc:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    dce0:	ldr	x0, [x0, #3984]
    dce4:	ldr	x0, [x0]
    dce8:	bl	aff0 <gl_map_free@plt>
    dcec:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    dcf0:	ldr	x0, [x0, #3984]
    dcf4:	str	xzr, [x0]
    dcf8:	ldr	w0, [sp, #336]
    dcfc:	bl	ae80 <close@plt>
    dd00:	ldr	x0, [sp, #344]
    dd04:	bl	b430 <gl_list_free@plt>
    dd08:	ldr	x0, [sp, #16]
    dd0c:	ldr	x1, [sp, #328]
    dd10:	str	x1, [x0]
    dd14:	b	dd1c <order_files@@Base+0x1f8>
    dd18:	nop
    dd1c:	ldp	x29, x30, [sp], #352
    dd20:	ret
    dd24:	stp	x29, x30, [sp, #-208]!
    dd28:	mov	x29, sp
    dd2c:	str	x0, [sp, #24]
    dd30:	str	w1, [sp, #20]
    dd34:	str	xzr, [sp, #200]
    dd38:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    dd3c:	add	x0, x0, #0xe88
    dd40:	bl	b670 <getenv@plt>
    dd44:	str	x0, [sp, #176]
    dd48:	strb	wzr, [sp, #191]
    dd4c:	ldr	x0, [sp, #176]
    dd50:	cmp	x0, #0x0
    dd54:	b.ne	dd60 <order_files@@Base+0x23c>  // b.any
    dd58:	mov	w0, #0x0                   	// #0
    dd5c:	b	ded0 <order_files@@Base+0x3ac>
    dd60:	mov	w1, #0x2f                  	// #47
    dd64:	ldr	x0, [sp, #24]
    dd68:	bl	b270 <strchr@plt>
    dd6c:	cmp	x0, #0x0
    dd70:	b.eq	ddc8 <order_files@@Base+0x2a4>  // b.none
    dd74:	add	x0, sp, #0x20
    dd78:	mov	x1, x0
    dd7c:	ldr	x0, [sp, #24]
    dd80:	bl	42370 <vasnprintf@@Base+0x2174>
    dd84:	cmn	w0, #0x1
    dd88:	b.ne	dd94 <order_files@@Base+0x270>  // b.any
    dd8c:	mov	w0, #0x0                   	// #0
    dd90:	b	ded0 <order_files@@Base+0x3ac>
    dd94:	ldr	w0, [sp, #48]
    dd98:	and	w0, w0, #0xf000
    dd9c:	cmp	w0, #0x8, lsl #12
    dda0:	b.ne	ddc0 <order_files@@Base+0x29c>  // b.any
    dda4:	ldr	w1, [sp, #48]
    dda8:	ldr	w0, [sp, #20]
    ddac:	and	w0, w1, w0
    ddb0:	cmp	w0, #0x0
    ddb4:	b.eq	ddc0 <order_files@@Base+0x29c>  // b.none
    ddb8:	mov	w0, #0x1                   	// #1
    ddbc:	b	ded0 <order_files@@Base+0x3ac>
    ddc0:	mov	w0, #0x0                   	// #0
    ddc4:	b	ded0 <order_files@@Base+0x3ac>
    ddc8:	ldr	x0, [sp, #176]
    ddcc:	bl	ad10 <xstrdup@plt>
    ddd0:	str	x0, [sp, #176]
    ddd4:	ldr	x0, [sp, #176]
    ddd8:	str	x0, [sp, #160]
    dddc:	add	x2, sp, #0xa0
    dde0:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    dde4:	add	x1, x0, #0xe90
    dde8:	mov	x0, x2
    ddec:	bl	b040 <strsep@plt>
    ddf0:	str	x0, [sp, #192]
    ddf4:	b	deb0 <order_files@@Base+0x38c>
    ddf8:	ldr	x0, [sp, #192]
    ddfc:	ldrb	w0, [x0]
    de00:	cmp	w0, #0x0
    de04:	b.ne	de24 <order_files@@Base+0x300>  // b.any
    de08:	ldr	x0, [sp, #200]
    de0c:	cmp	x0, #0x0
    de10:	b.ne	de1c <order_files@@Base+0x2f8>  // b.any
    de14:	bl	b7d0 <xgetcwd@plt>
    de18:	str	x0, [sp, #200]
    de1c:	ldr	x0, [sp, #200]
    de20:	str	x0, [sp, #192]
    de24:	ldr	x2, [sp, #24]
    de28:	ldr	x1, [sp, #192]
    de2c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    de30:	add	x0, x0, #0xe98
    de34:	bl	b1a0 <xasprintf@plt>
    de38:	str	x0, [sp, #168]
    de3c:	add	x0, sp, #0x20
    de40:	mov	x1, x0
    de44:	ldr	x0, [sp, #168]
    de48:	bl	42370 <vasnprintf@@Base+0x2174>
    de4c:	cmn	w0, #0x1
    de50:	b.ne	de60 <order_files@@Base+0x33c>  // b.any
    de54:	ldr	x0, [sp, #168]
    de58:	bl	b130 <free@plt>
    de5c:	b	de98 <order_files@@Base+0x374>
    de60:	ldr	x0, [sp, #168]
    de64:	bl	b130 <free@plt>
    de68:	ldr	w0, [sp, #48]
    de6c:	and	w0, w0, #0xf000
    de70:	cmp	w0, #0x8, lsl #12
    de74:	b.ne	de98 <order_files@@Base+0x374>  // b.any
    de78:	ldr	w1, [sp, #48]
    de7c:	ldr	w0, [sp, #20]
    de80:	and	w0, w1, w0
    de84:	cmp	w0, #0x0
    de88:	b.eq	de98 <order_files@@Base+0x374>  // b.none
    de8c:	mov	w0, #0x1                   	// #1
    de90:	strb	w0, [sp, #191]
    de94:	b	debc <order_files@@Base+0x398>
    de98:	add	x2, sp, #0xa0
    de9c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    dea0:	add	x1, x0, #0xe90
    dea4:	mov	x0, x2
    dea8:	bl	b040 <strsep@plt>
    deac:	str	x0, [sp, #192]
    deb0:	ldr	x0, [sp, #192]
    deb4:	cmp	x0, #0x0
    deb8:	b.ne	ddf8 <order_files@@Base+0x2d4>  // b.any
    debc:	ldr	x0, [sp, #176]
    dec0:	bl	b130 <free@plt>
    dec4:	ldr	x0, [sp, #200]
    dec8:	bl	b130 <free@plt>
    decc:	ldrb	w0, [sp, #191]
    ded0:	ldp	x29, x30, [sp], #208
    ded4:	ret

000000000000ded8 <pathsearch_executable@@Base>:
    ded8:	stp	x29, x30, [sp, #-32]!
    dedc:	mov	x29, sp
    dee0:	str	x0, [sp, #24]
    dee4:	mov	w1, #0x49                  	// #73
    dee8:	ldr	x0, [sp, #24]
    deec:	bl	dd24 <order_files@@Base+0x200>
    def0:	and	w0, w0, #0xff
    def4:	ldp	x29, x30, [sp], #32
    def8:	ret

000000000000defc <directory_on_path@@Base>:
    defc:	stp	x29, x30, [sp, #-80]!
    df00:	mov	x29, sp
    df04:	str	x0, [sp, #24]
    df08:	str	xzr, [sp, #72]
    df0c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    df10:	add	x0, x0, #0xe88
    df14:	bl	b670 <getenv@plt>
    df18:	str	x0, [sp, #48]
    df1c:	strb	wzr, [sp, #63]
    df20:	ldr	x0, [sp, #48]
    df24:	cmp	x0, #0x0
    df28:	b.ne	df34 <directory_on_path@@Base+0x38>  // b.any
    df2c:	mov	w0, #0x0                   	// #0
    df30:	b	dfe8 <directory_on_path@@Base+0xec>
    df34:	ldr	x0, [sp, #48]
    df38:	bl	ad10 <xstrdup@plt>
    df3c:	str	x0, [sp, #48]
    df40:	ldr	x0, [sp, #48]
    df44:	str	x0, [sp, #40]
    df48:	add	x2, sp, #0x28
    df4c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    df50:	add	x1, x0, #0xe90
    df54:	mov	x0, x2
    df58:	bl	b040 <strsep@plt>
    df5c:	str	x0, [sp, #64]
    df60:	b	dfc8 <directory_on_path@@Base+0xcc>
    df64:	ldr	x0, [sp, #64]
    df68:	ldrb	w0, [x0]
    df6c:	cmp	w0, #0x0
    df70:	b.ne	df90 <directory_on_path@@Base+0x94>  // b.any
    df74:	ldr	x0, [sp, #72]
    df78:	cmp	x0, #0x0
    df7c:	b.ne	df88 <directory_on_path@@Base+0x8c>  // b.any
    df80:	bl	b7d0 <xgetcwd@plt>
    df84:	str	x0, [sp, #72]
    df88:	ldr	x0, [sp, #72]
    df8c:	str	x0, [sp, #64]
    df90:	ldr	x1, [sp, #24]
    df94:	ldr	x0, [sp, #64]
    df98:	bl	b070 <strcmp@plt>
    df9c:	cmp	w0, #0x0
    dfa0:	b.ne	dfb0 <directory_on_path@@Base+0xb4>  // b.any
    dfa4:	mov	w0, #0x1                   	// #1
    dfa8:	strb	w0, [sp, #63]
    dfac:	b	dfd4 <directory_on_path@@Base+0xd8>
    dfb0:	add	x2, sp, #0x28
    dfb4:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    dfb8:	add	x1, x0, #0xe90
    dfbc:	mov	x0, x2
    dfc0:	bl	b040 <strsep@plt>
    dfc4:	str	x0, [sp, #64]
    dfc8:	ldr	x0, [sp, #64]
    dfcc:	cmp	x0, #0x0
    dfd0:	b.ne	df64 <directory_on_path@@Base+0x68>  // b.any
    dfd4:	ldr	x0, [sp, #48]
    dfd8:	bl	b130 <free@plt>
    dfdc:	ldr	x0, [sp, #72]
    dfe0:	bl	b130 <free@plt>
    dfe4:	ldrb	w0, [sp, #63]
    dfe8:	ldp	x29, x30, [sp], #80
    dfec:	ret

000000000000dff0 <sandbox_init@@Base>:
    dff0:	stp	x29, x30, [sp, #-32]!
    dff4:	mov	x29, sp
    dff8:	mov	x0, #0x1                   	// #1
    dffc:	bl	b400 <xzalloc@plt>
    e000:	str	x0, [sp, #24]
    e004:	ldr	x0, [sp, #24]
    e008:	strb	wzr, [x0]
    e00c:	ldr	x0, [sp, #24]
    e010:	ldp	x29, x30, [sp], #32
    e014:	ret
    e018:	sub	sp, sp, #0x10
    e01c:	str	x0, [sp, #8]
    e020:	str	w1, [sp, #4]
    e024:	nop
    e028:	add	sp, sp, #0x10
    e02c:	ret

000000000000e030 <sandbox_load@@Base>:
    e030:	stp	x29, x30, [sp, #-48]!
    e034:	mov	x29, sp
    e038:	str	x0, [sp, #24]
    e03c:	ldr	x0, [sp, #24]
    e040:	str	x0, [sp, #40]
    e044:	mov	w1, #0x0                   	// #0
    e048:	ldr	x0, [sp, #40]
    e04c:	bl	e018 <sandbox_init@@Base+0x28>
    e050:	nop
    e054:	ldp	x29, x30, [sp], #48
    e058:	ret

000000000000e05c <sandbox_load_permissive@@Base>:
    e05c:	stp	x29, x30, [sp, #-48]!
    e060:	mov	x29, sp
    e064:	str	x0, [sp, #24]
    e068:	ldr	x0, [sp, #24]
    e06c:	str	x0, [sp, #40]
    e070:	mov	w1, #0x1                   	// #1
    e074:	ldr	x0, [sp, #40]
    e078:	bl	e018 <sandbox_init@@Base+0x28>
    e07c:	nop
    e080:	ldp	x29, x30, [sp], #48
    e084:	ret

000000000000e088 <sandbox_free@@Base>:
    e088:	stp	x29, x30, [sp, #-48]!
    e08c:	mov	x29, sp
    e090:	str	x0, [sp, #24]
    e094:	ldr	x0, [sp, #24]
    e098:	str	x0, [sp, #40]
    e09c:	ldr	x0, [sp, #40]
    e0a0:	bl	b130 <free@plt>
    e0a4:	nop
    e0a8:	ldp	x29, x30, [sp], #48
    e0ac:	ret
    e0b0:	stp	x29, x30, [sp, #-32]!
    e0b4:	mov	x29, sp
    e0b8:	str	x19, [sp, #16]
    e0bc:	bl	b640 <__errno_location@plt>
    e0c0:	ldr	w19, [x0]
    e0c4:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e0c8:	add	x0, x0, #0xea0
    e0cc:	bl	b700 <gettext@plt>
    e0d0:	mov	x2, x0
    e0d4:	mov	w1, w19
    e0d8:	mov	w0, #0x2                   	// #2
    e0dc:	bl	a850 <error@plt>
    e0e0:	nop
    e0e4:	ldr	x19, [sp, #16]
    e0e8:	ldp	x29, x30, [sp], #32
    e0ec:	ret

000000000000e0f0 <init_security@@Base>:
    e0f0:	stp	x29, x30, [sp, #-16]!
    e0f4:	mov	x29, sp
    e0f8:	bl	a9a0 <getuid@plt>
    e0fc:	mov	w1, w0
    e100:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e104:	ldr	x0, [x0, #4064]
    e108:	str	w1, [x0]
    e10c:	bl	a8e0 <geteuid@plt>
    e110:	mov	w1, w0
    e114:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e118:	ldr	x0, [x0, #3784]
    e11c:	str	w1, [x0]
    e120:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e124:	ldr	x0, [x0, #3784]
    e128:	ldr	w1, [x0]
    e12c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e130:	ldr	x0, [x0, #3952]
    e134:	str	w1, [x0]
    e138:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e13c:	ldr	x0, [x0, #4064]
    e140:	ldr	w0, [x0]
    e144:	mov	w1, w0
    e148:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e14c:	ldr	x0, [x0, #3784]
    e150:	ldr	w0, [x0]
    e154:	mov	w2, w0
    e158:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e15c:	add	x0, x0, #0xeb8
    e160:	bl	aab0 <debug@plt>
    e164:	bl	b170 <getgid@plt>
    e168:	mov	w1, w0
    e16c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e170:	ldr	x0, [x0, #3960]
    e174:	str	w1, [x0]
    e178:	bl	a8a0 <getegid@plt>
    e17c:	mov	w1, w0
    e180:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e184:	ldr	x0, [x0, #3760]
    e188:	str	w1, [x0]
    e18c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e190:	ldr	x0, [x0, #3760]
    e194:	ldr	w1, [x0]
    e198:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e19c:	ldr	x0, [x0, #3792]
    e1a0:	str	w1, [x0]
    e1a4:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e1a8:	ldr	x0, [x0, #3960]
    e1ac:	ldr	w0, [x0]
    e1b0:	mov	w1, w0
    e1b4:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e1b8:	ldr	x0, [x0, #3760]
    e1bc:	ldr	w0, [x0]
    e1c0:	mov	w2, w0
    e1c4:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e1c8:	add	x0, x0, #0xed0
    e1cc:	bl	aab0 <debug@plt>
    e1d0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e1d4:	add	x0, x0, #0x5b0
    e1d8:	str	wzr, [x0]
    e1dc:	bl	af20 <drop_effective_privs@plt>
    e1e0:	nop
    e1e4:	ldp	x29, x30, [sp], #16
    e1e8:	ret

000000000000e1ec <running_setuid@@Base>:
    e1ec:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e1f0:	ldr	x0, [x0, #4064]
    e1f4:	ldr	w1, [x0]
    e1f8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e1fc:	ldr	x0, [x0, #3784]
    e200:	ldr	w0, [x0]
    e204:	cmp	w1, w0
    e208:	cset	w0, ne  // ne = any
    e20c:	and	w0, w0, #0xff
    e210:	ret

000000000000e214 <get_man_owner@@Base>:
    e214:	stp	x29, x30, [sp, #-16]!
    e218:	mov	x29, sp
    e21c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e220:	add	x0, x0, #0x5a8
    e224:	ldr	x0, [x0]
    e228:	cmp	x0, #0x0
    e22c:	b.eq	e240 <get_man_owner@@Base+0x2c>  // b.none
    e230:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e234:	add	x0, x0, #0x5a8
    e238:	ldr	x0, [x0]
    e23c:	b	e2d8 <get_man_owner@@Base+0xc4>
    e240:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e244:	add	x0, x0, #0xee8
    e248:	bl	acf0 <getpwnam@plt>
    e24c:	mov	x1, x0
    e250:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e254:	add	x0, x0, #0x5a8
    e258:	str	x1, [x0]
    e25c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e260:	add	x0, x0, #0x5a8
    e264:	ldr	x0, [x0]
    e268:	cmp	x0, #0x0
    e26c:	b.ne	e298 <get_man_owner@@Base+0x84>  // b.any
    e270:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e274:	add	x0, x0, #0xef0
    e278:	bl	b700 <gettext@plt>
    e27c:	mov	x1, x0
    e280:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e284:	add	x3, x0, #0xee8
    e288:	mov	x2, x1
    e28c:	mov	w1, #0x0                   	// #0
    e290:	mov	w0, #0x1                   	// #1
    e294:	bl	a850 <error@plt>
    e298:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e29c:	add	x0, x0, #0x5a8
    e2a0:	ldr	x0, [x0]
    e2a4:	cmp	x0, #0x0
    e2a8:	b.ne	e2cc <get_man_owner@@Base+0xb8>  // b.any
    e2ac:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e2b0:	add	x3, x0, #0xfa0
    e2b4:	mov	w2, #0x78                  	// #120
    e2b8:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e2bc:	add	x1, x0, #0xf18
    e2c0:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e2c4:	add	x0, x0, #0xf28
    e2c8:	bl	b630 <__assert_fail@plt>
    e2cc:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e2d0:	add	x0, x0, #0x5a8
    e2d4:	ldr	x0, [x0]
    e2d8:	ldp	x29, x30, [sp], #16
    e2dc:	ret

000000000000e2e0 <drop_effective_privs@@Base>:
    e2e0:	stp	x29, x30, [sp, #-16]!
    e2e4:	mov	x29, sp
    e2e8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e2ec:	ldr	x0, [x0, #3952]
    e2f0:	ldr	w1, [x0]
    e2f4:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e2f8:	ldr	x0, [x0, #4064]
    e2fc:	ldr	w0, [x0]
    e300:	cmp	w1, w0
    e304:	b.eq	e354 <drop_effective_privs@@Base+0x74>  // b.none
    e308:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e30c:	add	x0, x0, #0xf38
    e310:	bl	aab0 <debug@plt>
    e314:	bl	ac20 <idpriv_temp_drop@plt>
    e318:	cmp	w0, #0x0
    e31c:	b.eq	e324 <drop_effective_privs@@Base+0x44>  // b.none
    e320:	bl	e0b0 <sandbox_free@@Base+0x28>
    e324:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e328:	ldr	x0, [x0, #4064]
    e32c:	ldr	w1, [x0]
    e330:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e334:	ldr	x0, [x0, #3952]
    e338:	str	w1, [x0]
    e33c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e340:	ldr	x0, [x0, #3960]
    e344:	ldr	w1, [x0]
    e348:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e34c:	ldr	x0, [x0, #3792]
    e350:	str	w1, [x0]
    e354:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e358:	add	x0, x0, #0x5b0
    e35c:	ldr	w0, [x0]
    e360:	add	w1, w0, #0x1
    e364:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e368:	add	x0, x0, #0x5b0
    e36c:	str	w1, [x0]
    e370:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e374:	add	x0, x0, #0x5b0
    e378:	ldr	w0, [x0]
    e37c:	mov	w1, w0
    e380:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e384:	add	x0, x0, #0xf50
    e388:	bl	aab0 <debug@plt>
    e38c:	nop
    e390:	ldp	x29, x30, [sp], #16
    e394:	ret

000000000000e398 <regain_effective_privs@@Base>:
    e398:	stp	x29, x30, [sp, #-16]!
    e39c:	mov	x29, sp
    e3a0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e3a4:	add	x0, x0, #0x5b0
    e3a8:	ldr	w0, [x0]
    e3ac:	cmp	w0, #0x0
    e3b0:	b.eq	e400 <regain_effective_privs@@Base+0x68>  // b.none
    e3b4:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e3b8:	add	x0, x0, #0x5b0
    e3bc:	ldr	w0, [x0]
    e3c0:	sub	w1, w0, #0x1
    e3c4:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e3c8:	add	x0, x0, #0x5b0
    e3cc:	str	w1, [x0]
    e3d0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e3d4:	add	x0, x0, #0x5b0
    e3d8:	ldr	w0, [x0]
    e3dc:	mov	w1, w0
    e3e0:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e3e4:	add	x0, x0, #0xf68
    e3e8:	bl	aab0 <debug@plt>
    e3ec:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
    e3f0:	add	x0, x0, #0x5b0
    e3f4:	ldr	w0, [x0]
    e3f8:	cmp	w0, #0x0
    e3fc:	b.ne	e470 <regain_effective_privs@@Base+0xd8>  // b.any
    e400:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e404:	ldr	x0, [x0, #3952]
    e408:	ldr	w1, [x0]
    e40c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e410:	ldr	x0, [x0, #3784]
    e414:	ldr	w0, [x0]
    e418:	cmp	w1, w0
    e41c:	b.eq	e474 <regain_effective_privs@@Base+0xdc>  // b.none
    e420:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e424:	add	x0, x0, #0xf80
    e428:	bl	aab0 <debug@plt>
    e42c:	bl	b3c0 <idpriv_temp_restore@plt>
    e430:	cmp	w0, #0x0
    e434:	b.eq	e43c <regain_effective_privs@@Base+0xa4>  // b.none
    e438:	bl	e0b0 <sandbox_free@@Base+0x28>
    e43c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e440:	ldr	x0, [x0, #3784]
    e444:	ldr	w1, [x0]
    e448:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e44c:	ldr	x0, [x0, #3952]
    e450:	str	w1, [x0]
    e454:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e458:	ldr	x0, [x0, #3760]
    e45c:	ldr	w1, [x0]
    e460:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
    e464:	ldr	x0, [x0, #3792]
    e468:	str	w1, [x0]
    e46c:	b	e474 <regain_effective_privs@@Base+0xdc>
    e470:	nop
    e474:	ldp	x29, x30, [sp], #16
    e478:	ret

000000000000e47c <drop_privs@@Base>:
    e47c:	stp	x29, x30, [sp, #-32]!
    e480:	mov	x29, sp
    e484:	str	x0, [sp, #24]
    e488:	bl	b330 <idpriv_drop@plt>
    e48c:	cmp	w0, #0x0
    e490:	b.eq	e498 <drop_privs@@Base+0x1c>  // b.none
    e494:	bl	e0b0 <sandbox_free@@Base+0x28>
    e498:	nop
    e49c:	ldp	x29, x30, [sp], #32
    e4a0:	ret
    e4a4:	stp	x29, x30, [sp, #-48]!
    e4a8:	mov	x29, sp
    e4ac:	str	x19, [sp, #16]
    e4b0:	str	xzr, [sp, #40]
    e4b4:	bl	a9a0 <getuid@plt>
    e4b8:	mov	w19, w0
    e4bc:	bl	a8e0 <geteuid@plt>
    e4c0:	cmp	w19, w0
    e4c4:	b.ne	e550 <drop_privs@@Base+0xd4>  // b.any
    e4c8:	bl	b170 <getgid@plt>
    e4cc:	mov	w19, w0
    e4d0:	bl	a8a0 <getegid@plt>
    e4d4:	cmp	w19, w0
    e4d8:	b.ne	e550 <drop_privs@@Base+0xd4>  // b.any
    e4dc:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e4e0:	add	x0, x0, #0xfb0
    e4e4:	bl	b670 <getenv@plt>
    e4e8:	str	x0, [sp, #40]
    e4ec:	ldr	x0, [sp, #40]
    e4f0:	cmp	x0, #0x0
    e4f4:	b.eq	e50c <drop_privs@@Base+0x90>  // b.none
    e4f8:	mov	w1, #0x2                   	// #2
    e4fc:	ldr	x0, [sp, #40]
    e500:	bl	afc0 <access@plt>
    e504:	cmp	w0, #0x0
    e508:	b.eq	e510 <drop_privs@@Base+0x94>  // b.none
    e50c:	str	xzr, [sp, #40]
    e510:	ldr	x0, [sp, #40]
    e514:	cmp	x0, #0x0
    e518:	b.ne	e550 <drop_privs@@Base+0xd4>  // b.any
    e51c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e520:	add	x0, x0, #0xfb8
    e524:	bl	b670 <getenv@plt>
    e528:	str	x0, [sp, #40]
    e52c:	ldr	x0, [sp, #40]
    e530:	cmp	x0, #0x0
    e534:	b.eq	e54c <drop_privs@@Base+0xd0>  // b.none
    e538:	mov	w1, #0x2                   	// #2
    e53c:	ldr	x0, [sp, #40]
    e540:	bl	afc0 <access@plt>
    e544:	cmp	w0, #0x0
    e548:	b.eq	e550 <drop_privs@@Base+0xd4>  // b.none
    e54c:	str	xzr, [sp, #40]
    e550:	ldr	x0, [sp, #40]
    e554:	cmp	x0, #0x0
    e558:	b.ne	e58c <drop_privs@@Base+0x110>  // b.any
    e55c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e560:	add	x0, x0, #0xfc0
    e564:	str	x0, [sp, #40]
    e568:	ldr	x0, [sp, #40]
    e56c:	cmp	x0, #0x0
    e570:	b.eq	e588 <drop_privs@@Base+0x10c>  // b.none
    e574:	mov	w1, #0x2                   	// #2
    e578:	ldr	x0, [sp, #40]
    e57c:	bl	afc0 <access@plt>
    e580:	cmp	w0, #0x0
    e584:	b.eq	e58c <drop_privs@@Base+0x110>  // b.none
    e588:	str	xzr, [sp, #40]
    e58c:	ldr	x0, [sp, #40]
    e590:	cmp	x0, #0x0
    e594:	b.ne	e5bc <drop_privs@@Base+0x140>  // b.any
    e598:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e59c:	add	x0, x0, #0xfc0
    e5a0:	str	x0, [sp, #40]
    e5a4:	mov	w1, #0x2                   	// #2
    e5a8:	ldr	x0, [sp, #40]
    e5ac:	bl	afc0 <access@plt>
    e5b0:	cmp	w0, #0x0
    e5b4:	b.eq	e5bc <drop_privs@@Base+0x140>  // b.none
    e5b8:	str	xzr, [sp, #40]
    e5bc:	ldr	x0, [sp, #40]
    e5c0:	ldr	x19, [sp, #16]
    e5c4:	ldp	x29, x30, [sp], #48
    e5c8:	ret

000000000000e5cc <create_tempdir@@Base>:
    e5cc:	stp	x29, x30, [sp, #-48]!
    e5d0:	mov	x29, sp
    e5d4:	str	x0, [sp, #24]
    e5d8:	bl	e4a4 <drop_privs@@Base+0x28>
    e5dc:	str	x0, [sp, #40]
    e5e0:	ldr	x0, [sp, #40]
    e5e4:	cmp	x0, #0x0
    e5e8:	b.ne	e5f4 <create_tempdir@@Base+0x28>  // b.any
    e5ec:	mov	x0, #0x0                   	// #0
    e5f0:	b	e628 <create_tempdir@@Base+0x5c>
    e5f4:	ldr	x2, [sp, #24]
    e5f8:	ldr	x1, [sp, #40]
    e5fc:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e600:	add	x0, x0, #0xfc8
    e604:	bl	b1a0 <xasprintf@plt>
    e608:	str	x0, [sp, #32]
    e60c:	ldr	x0, [sp, #32]
    e610:	bl	af50 <mkdtemp@plt>
    e614:	cmp	x0, #0x0
    e618:	b.ne	e624 <create_tempdir@@Base+0x58>  // b.any
    e61c:	mov	x0, #0x0                   	// #0
    e620:	b	e628 <create_tempdir@@Base+0x5c>
    e624:	ldr	x0, [sp, #32]
    e628:	ldp	x29, x30, [sp], #48
    e62c:	ret

000000000000e630 <is_changed@@Base>:
    e630:	stp	x29, x30, [sp, #-320]!
    e634:	mov	x29, sp
    e638:	stp	x20, x21, [sp, #16]
    e63c:	str	x0, [sp, #40]
    e640:	str	x1, [sp, #32]
    e644:	str	wzr, [sp, #316]
    e648:	ldr	x2, [sp, #32]
    e64c:	ldr	x1, [sp, #40]
    e650:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e654:	add	x0, x0, #0xfd8
    e658:	bl	aab0 <debug@plt>
    e65c:	add	x0, sp, #0xb0
    e660:	mov	x1, x0
    e664:	ldr	x0, [sp, #40]
    e668:	bl	42370 <vasnprintf@@Base+0x2174>
    e66c:	str	w0, [sp, #312]
    e670:	ldr	w0, [sp, #312]
    e674:	cmp	w0, #0x0
    e678:	b.eq	e684 <is_changed@@Base+0x54>  // b.none
    e67c:	mov	w0, #0x1                   	// #1
    e680:	str	w0, [sp, #316]
    e684:	add	x0, sp, #0x30
    e688:	mov	x1, x0
    e68c:	ldr	x0, [sp, #32]
    e690:	bl	42370 <vasnprintf@@Base+0x2174>
    e694:	str	w0, [sp, #308]
    e698:	ldr	w0, [sp, #308]
    e69c:	cmp	w0, #0x0
    e6a0:	b.eq	e6b0 <is_changed@@Base+0x80>  // b.none
    e6a4:	ldr	w0, [sp, #316]
    e6a8:	orr	w0, w0, #0x2
    e6ac:	str	w0, [sp, #316]
    e6b0:	ldr	w0, [sp, #316]
    e6b4:	cmp	w0, #0x0
    e6b8:	b.eq	e6e0 <is_changed@@Base+0xb0>  // b.none
    e6bc:	ldr	w0, [sp, #316]
    e6c0:	neg	w0, w0
    e6c4:	mov	w1, w0
    e6c8:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e6cc:	add	x0, x0, #0xff0
    e6d0:	bl	aab0 <debug@plt>
    e6d4:	ldr	w0, [sp, #316]
    e6d8:	neg	w0, w0
    e6dc:	b	e76c <is_changed@@Base+0x13c>
    e6e0:	ldr	x0, [sp, #224]
    e6e4:	cmp	x0, #0x0
    e6e8:	b.ne	e6f8 <is_changed@@Base+0xc8>  // b.any
    e6ec:	ldr	w0, [sp, #316]
    e6f0:	orr	w0, w0, #0x2
    e6f4:	str	w0, [sp, #316]
    e6f8:	ldr	x0, [sp, #96]
    e6fc:	cmp	x0, #0x0
    e700:	b.ne	e710 <is_changed@@Base+0xe0>  // b.any
    e704:	ldr	w0, [sp, #316]
    e708:	orr	w0, w0, #0x4
    e70c:	str	w0, [sp, #316]
    e710:	add	x0, sp, #0xb0
    e714:	bl	ae60 <get_stat_mtime@plt>
    e718:	mov	x20, x0
    e71c:	mov	x21, x1
    e720:	add	x0, sp, #0x30
    e724:	bl	ae60 <get_stat_mtime@plt>
    e728:	mov	x2, x0
    e72c:	mov	x3, x1
    e730:	mov	x0, x20
    e734:	mov	x1, x21
    e738:	bl	a9e0 <timespec_cmp@plt>
    e73c:	cmp	w0, #0x0
    e740:	cset	w0, ne  // ne = any
    e744:	and	w0, w0, #0xff
    e748:	mov	w1, w0
    e74c:	ldr	w0, [sp, #316]
    e750:	orr	w0, w0, w1
    e754:	str	w0, [sp, #316]
    e758:	ldr	w1, [sp, #316]
    e75c:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e760:	add	x0, x0, #0xff0
    e764:	bl	aab0 <debug@plt>
    e768:	ldr	w0, [sp, #316]
    e76c:	ldp	x20, x21, [sp, #16]
    e770:	ldp	x29, x30, [sp], #320
    e774:	ret

000000000000e778 <is_directory@@Base>:
    e778:	stp	x29, x30, [sp, #-176]!
    e77c:	mov	x29, sp
    e780:	str	x0, [sp, #24]
    e784:	add	x0, sp, #0x28
    e788:	mov	x1, x0
    e78c:	ldr	x0, [sp, #24]
    e790:	bl	42370 <vasnprintf@@Base+0x2174>
    e794:	str	w0, [sp, #172]
    e798:	ldr	w0, [sp, #172]
    e79c:	cmp	w0, #0x0
    e7a0:	b.eq	e7ac <is_directory@@Base+0x34>  // b.none
    e7a4:	ldr	w0, [sp, #172]
    e7a8:	b	e7c0 <is_directory@@Base+0x48>
    e7ac:	ldr	w0, [sp, #56]
    e7b0:	and	w0, w0, #0x4000
    e7b4:	cmp	w0, #0x0
    e7b8:	cset	w0, ne  // ne = any
    e7bc:	and	w0, w0, #0xff
    e7c0:	ldp	x29, x30, [sp], #176
    e7c4:	ret

000000000000e7c8 <escape_shell@@Base>:
    e7c8:	stp	x29, x30, [sp, #-64]!
    e7cc:	mov	x29, sp
    e7d0:	str	x0, [sp, #24]
    e7d4:	ldr	x0, [sp, #24]
    e7d8:	cmp	x0, #0x0
    e7dc:	b.ne	e7e8 <escape_shell@@Base+0x20>  // b.any
    e7e0:	mov	x0, #0x0                   	// #0
    e7e4:	b	e904 <escape_shell@@Base+0x13c>
    e7e8:	ldr	x0, [sp, #24]
    e7ec:	bl	a820 <strlen@plt>
    e7f0:	lsl	x0, x0, #1
    e7f4:	add	x0, x0, #0x1
    e7f8:	bl	ace0 <xmalloc@plt>
    e7fc:	str	x0, [sp, #40]
    e800:	ldr	x0, [sp, #40]
    e804:	str	x0, [sp, #56]
    e808:	ldr	x0, [sp, #24]
    e80c:	str	x0, [sp, #48]
    e810:	b	e8e8 <escape_shell@@Base+0x120>
    e814:	ldr	x0, [sp, #48]
    e818:	ldrb	w0, [x0]
    e81c:	cmp	w0, #0x2f
    e820:	b.ls	e834 <escape_shell@@Base+0x6c>  // b.plast
    e824:	ldr	x0, [sp, #48]
    e828:	ldrb	w0, [x0]
    e82c:	cmp	w0, #0x39
    e830:	b.ls	e894 <escape_shell@@Base+0xcc>  // b.plast
    e834:	ldr	x0, [sp, #48]
    e838:	ldrb	w0, [x0]
    e83c:	cmp	w0, #0x40
    e840:	b.ls	e854 <escape_shell@@Base+0x8c>  // b.plast
    e844:	ldr	x0, [sp, #48]
    e848:	ldrb	w0, [x0]
    e84c:	cmp	w0, #0x5a
    e850:	b.ls	e894 <escape_shell@@Base+0xcc>  // b.plast
    e854:	ldr	x0, [sp, #48]
    e858:	ldrb	w0, [x0]
    e85c:	cmp	w0, #0x60
    e860:	b.ls	e874 <escape_shell@@Base+0xac>  // b.plast
    e864:	ldr	x0, [sp, #48]
    e868:	ldrb	w0, [x0]
    e86c:	cmp	w0, #0x7a
    e870:	b.ls	e894 <escape_shell@@Base+0xcc>  // b.plast
    e874:	ldr	x0, [sp, #48]
    e878:	ldrb	w0, [x0]
    e87c:	mov	w1, w0
    e880:	adrp	x0, 42000 <vasnprintf@@Base+0x1e04>
    e884:	add	x0, x0, #0xff8
    e888:	bl	b270 <strchr@plt>
    e88c:	cmp	x0, #0x0
    e890:	b.eq	e8b0 <escape_shell@@Base+0xe8>  // b.none
    e894:	ldr	x0, [sp, #56]
    e898:	add	x1, x0, #0x1
    e89c:	str	x1, [sp, #56]
    e8a0:	ldr	x1, [sp, #48]
    e8a4:	ldrb	w1, [x1]
    e8a8:	strb	w1, [x0]
    e8ac:	b	e8dc <escape_shell@@Base+0x114>
    e8b0:	ldr	x0, [sp, #56]
    e8b4:	add	x1, x0, #0x1
    e8b8:	str	x1, [sp, #56]
    e8bc:	mov	w1, #0x5c                  	// #92
    e8c0:	strb	w1, [x0]
    e8c4:	ldr	x0, [sp, #56]
    e8c8:	add	x1, x0, #0x1
    e8cc:	str	x1, [sp, #56]
    e8d0:	ldr	x1, [sp, #48]
    e8d4:	ldrb	w1, [x1]
    e8d8:	strb	w1, [x0]
    e8dc:	ldr	x0, [sp, #48]
    e8e0:	add	x0, x0, #0x1
    e8e4:	str	x0, [sp, #48]
    e8e8:	ldr	x0, [sp, #48]
    e8ec:	ldrb	w0, [x0]
    e8f0:	cmp	w0, #0x0
    e8f4:	b.ne	e814 <escape_shell@@Base+0x4c>  // b.any
    e8f8:	ldr	x0, [sp, #56]
    e8fc:	strb	wzr, [x0]
    e900:	ldr	x0, [sp, #40]
    e904:	ldp	x29, x30, [sp], #64
    e908:	ret

000000000000e90c <remove_directory@@Base>:
    e90c:	stp	x29, x30, [sp, #-192]!
    e910:	mov	x29, sp
    e914:	str	x0, [sp, #24]
    e918:	str	w1, [sp, #20]
    e91c:	ldr	x0, [sp, #24]
    e920:	bl	a9c0 <opendir@plt>
    e924:	str	x0, [sp, #184]
    e928:	ldr	x0, [sp, #184]
    e92c:	cmp	x0, #0x0
    e930:	b.ne	ea58 <remove_directory@@Base+0x14c>  // b.any
    e934:	mov	w0, #0xffffffff            	// #-1
    e938:	b	ea94 <remove_directory@@Base+0x188>
    e93c:	ldr	x0, [sp, #176]
    e940:	add	x2, x0, #0x13
    e944:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    e948:	add	x1, x0, #0x0
    e94c:	mov	x0, x2
    e950:	bl	b070 <strcmp@plt>
    e954:	cmp	w0, #0x0
    e958:	b.eq	ea58 <remove_directory@@Base+0x14c>  // b.none
    e95c:	ldr	x0, [sp, #176]
    e960:	add	x2, x0, #0x13
    e964:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    e968:	add	x1, x0, #0x8
    e96c:	mov	x0, x2
    e970:	bl	b070 <strcmp@plt>
    e974:	cmp	w0, #0x0
    e978:	b.ne	e980 <remove_directory@@Base+0x74>  // b.any
    e97c:	b	ea58 <remove_directory@@Base+0x14c>
    e980:	ldr	x0, [sp, #176]
    e984:	add	x0, x0, #0x13
    e988:	mov	x2, x0
    e98c:	ldr	x1, [sp, #24]
    e990:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    e994:	add	x0, x0, #0x10
    e998:	bl	b1a0 <xasprintf@plt>
    e99c:	str	x0, [sp, #168]
    e9a0:	add	x0, sp, #0x28
    e9a4:	mov	x1, x0
    e9a8:	ldr	x0, [sp, #168]
    e9ac:	bl	42370 <vasnprintf@@Base+0x2174>
    e9b0:	cmn	w0, #0x1
    e9b4:	b.ne	e9d0 <remove_directory@@Base+0xc4>  // b.any
    e9b8:	ldr	x0, [sp, #168]
    e9bc:	bl	b130 <free@plt>
    e9c0:	ldr	x0, [sp, #184]
    e9c4:	bl	ae40 <closedir@plt>
    e9c8:	mov	w0, #0xffffffff            	// #-1
    e9cc:	b	ea94 <remove_directory@@Base+0x188>
    e9d0:	ldr	w0, [sp, #20]
    e9d4:	cmp	w0, #0x0
    e9d8:	b.eq	ea18 <remove_directory@@Base+0x10c>  // b.none
    e9dc:	ldr	w0, [sp, #56]
    e9e0:	and	w0, w0, #0xf000
    e9e4:	cmp	w0, #0x4, lsl #12
    e9e8:	b.ne	ea18 <remove_directory@@Base+0x10c>  // b.any
    e9ec:	ldr	w1, [sp, #20]
    e9f0:	ldr	x0, [sp, #168]
    e9f4:	bl	e90c <remove_directory@@Base>
    e9f8:	cmn	w0, #0x1
    e9fc:	b.ne	ea50 <remove_directory@@Base+0x144>  // b.any
    ea00:	ldr	x0, [sp, #168]
    ea04:	bl	b130 <free@plt>
    ea08:	ldr	x0, [sp, #184]
    ea0c:	bl	ae40 <closedir@plt>
    ea10:	mov	w0, #0xffffffff            	// #-1
    ea14:	b	ea94 <remove_directory@@Base+0x188>
    ea18:	ldr	w0, [sp, #56]
    ea1c:	and	w0, w0, #0xf000
    ea20:	cmp	w0, #0x8, lsl #12
    ea24:	b.ne	ea50 <remove_directory@@Base+0x144>  // b.any
    ea28:	ldr	x0, [sp, #168]
    ea2c:	bl	b6f0 <unlink@plt>
    ea30:	cmn	w0, #0x1
    ea34:	b.ne	ea50 <remove_directory@@Base+0x144>  // b.any
    ea38:	ldr	x0, [sp, #168]
    ea3c:	bl	b130 <free@plt>
    ea40:	ldr	x0, [sp, #184]
    ea44:	bl	ae40 <closedir@plt>
    ea48:	mov	w0, #0xffffffff            	// #-1
    ea4c:	b	ea94 <remove_directory@@Base+0x188>
    ea50:	ldr	x0, [sp, #168]
    ea54:	bl	b130 <free@plt>
    ea58:	ldr	x0, [sp, #184]
    ea5c:	bl	adf0 <readdir@plt>
    ea60:	str	x0, [sp, #176]
    ea64:	ldr	x0, [sp, #176]
    ea68:	cmp	x0, #0x0
    ea6c:	b.ne	e93c <remove_directory@@Base+0x30>  // b.any
    ea70:	ldr	x0, [sp, #184]
    ea74:	bl	ae40 <closedir@plt>
    ea78:	ldr	x0, [sp, #24]
    ea7c:	bl	b0a0 <rmdir@plt>
    ea80:	cmn	w0, #0x1
    ea84:	b.ne	ea90 <remove_directory@@Base+0x184>  // b.any
    ea88:	mov	w0, #0xffffffff            	// #-1
    ea8c:	b	ea94 <remove_directory@@Base+0x188>
    ea90:	mov	w0, #0x0                   	// #0
    ea94:	ldp	x29, x30, [sp], #192
    ea98:	ret

000000000000ea9c <trim_spaces@@Base>:
    ea9c:	stp	x29, x30, [sp, #-48]!
    eaa0:	mov	x29, sp
    eaa4:	str	x0, [sp, #24]
    eaa8:	b	eab8 <trim_spaces@@Base+0x1c>
    eaac:	ldr	x0, [sp, #24]
    eab0:	add	x0, x0, #0x1
    eab4:	str	x0, [sp, #24]
    eab8:	ldr	x0, [sp, #24]
    eabc:	ldrb	w0, [x0]
    eac0:	cmp	w0, #0x20
    eac4:	b.eq	eaac <trim_spaces@@Base+0x10>  // b.none
    eac8:	ldr	x0, [sp, #24]
    eacc:	bl	a820 <strlen@plt>
    ead0:	str	w0, [sp, #44]
    ead4:	b	eae4 <trim_spaces@@Base+0x48>
    ead8:	ldr	w0, [sp, #44]
    eadc:	sub	w0, w0, #0x1
    eae0:	str	w0, [sp, #44]
    eae4:	ldr	w0, [sp, #44]
    eae8:	cmp	w0, #0x0
    eaec:	b.eq	eb0c <trim_spaces@@Base+0x70>  // b.none
    eaf0:	ldrsw	x0, [sp, #44]
    eaf4:	sub	x0, x0, #0x1
    eaf8:	ldr	x1, [sp, #24]
    eafc:	add	x0, x1, x0
    eb00:	ldrb	w0, [x0]
    eb04:	cmp	w0, #0x20
    eb08:	b.eq	ead8 <trim_spaces@@Base+0x3c>  // b.none
    eb0c:	ldrsw	x0, [sp, #44]
    eb10:	mov	x1, x0
    eb14:	ldr	x0, [sp, #24]
    eb18:	bl	b410 <xstrndup@plt>
    eb1c:	ldp	x29, x30, [sp], #48
    eb20:	ret

000000000000eb24 <lang_dir@@Base>:
    eb24:	stp	x29, x30, [sp, #-64]!
    eb28:	mov	x29, sp
    eb2c:	str	x0, [sp, #24]
    eb30:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    eb34:	add	x0, x0, #0x18
    eb38:	bl	ad10 <xstrdup@plt>
    eb3c:	str	x0, [sp, #48]
    eb40:	ldr	x0, [sp, #24]
    eb44:	cmp	x0, #0x0
    eb48:	b.ne	eb54 <lang_dir@@Base+0x30>  // b.any
    eb4c:	ldr	x0, [sp, #48]
    eb50:	b	ecc8 <lang_dir@@Base+0x1a4>
    eb54:	mov	x2, #0x4                   	// #4
    eb58:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    eb5c:	add	x1, x0, #0x20
    eb60:	ldr	x0, [sp, #24]
    eb64:	bl	ac60 <strncmp@plt>
    eb68:	cmp	w0, #0x0
    eb6c:	b.ne	eb7c <lang_dir@@Base+0x58>  // b.any
    eb70:	ldr	x0, [sp, #24]
    eb74:	str	x0, [sp, #56]
    eb78:	b	eba8 <lang_dir@@Base+0x84>
    eb7c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    eb80:	add	x1, x0, #0x28
    eb84:	ldr	x0, [sp, #24]
    eb88:	bl	b4b0 <strstr@plt>
    eb8c:	str	x0, [sp, #56]
    eb90:	ldr	x0, [sp, #56]
    eb94:	cmp	x0, #0x0
    eb98:	b.eq	eba8 <lang_dir@@Base+0x84>  // b.none
    eb9c:	ldr	x0, [sp, #56]
    eba0:	add	x0, x0, #0x1
    eba4:	str	x0, [sp, #56]
    eba8:	ldr	x0, [sp, #56]
    ebac:	cmp	x0, #0x0
    ebb0:	b.ne	ebbc <lang_dir@@Base+0x98>  // b.any
    ebb4:	ldr	x0, [sp, #48]
    ebb8:	b	ecc8 <lang_dir@@Base+0x1a4>
    ebbc:	ldr	x0, [sp, #56]
    ebc0:	add	x2, x0, #0x2
    ebc4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ebc8:	add	x1, x0, #0x30
    ebcc:	mov	x0, x2
    ebd0:	bl	b4b0 <strstr@plt>
    ebd4:	str	x0, [sp, #40]
    ebd8:	ldr	x0, [sp, #40]
    ebdc:	cmp	x0, #0x0
    ebe0:	b.ne	ebec <lang_dir@@Base+0xc8>  // b.any
    ebe4:	ldr	x0, [sp, #48]
    ebe8:	b	ecc8 <lang_dir@@Base+0x1a4>
    ebec:	ldr	x0, [sp, #40]
    ebf0:	add	x0, x0, #0x5
    ebf4:	ldrb	w0, [x0]
    ebf8:	cmp	w0, #0x2f
    ebfc:	b.eq	ec08 <lang_dir@@Base+0xe4>  // b.none
    ec00:	ldr	x0, [sp, #48]
    ec04:	b	ecc8 <lang_dir@@Base+0x1a4>
    ec08:	ldr	x0, [sp, #40]
    ec0c:	add	x0, x0, #0x4
    ec10:	ldrb	w0, [x0]
    ec14:	mov	w1, w0
    ec18:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ec1c:	add	x0, x0, #0x38
    ec20:	bl	b270 <strchr@plt>
    ec24:	cmp	x0, #0x0
    ec28:	b.ne	ec34 <lang_dir@@Base+0x110>  // b.any
    ec2c:	ldr	x0, [sp, #48]
    ec30:	b	ecc8 <lang_dir@@Base+0x1a4>
    ec34:	ldr	x0, [sp, #56]
    ec38:	add	x0, x0, #0x3
    ec3c:	ldr	x1, [sp, #40]
    ec40:	cmp	x1, x0
    ec44:	b.ne	ec60 <lang_dir@@Base+0x13c>  // b.any
    ec48:	ldr	x0, [sp, #48]
    ec4c:	bl	b130 <free@plt>
    ec50:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ec54:	add	x0, x0, #0x48
    ec58:	bl	ad10 <xstrdup@plt>
    ec5c:	b	ecc8 <lang_dir@@Base+0x1a4>
    ec60:	ldr	x0, [sp, #56]
    ec64:	add	x0, x0, #0x4
    ec68:	str	x0, [sp, #56]
    ec6c:	mov	w1, #0x2f                  	// #47
    ec70:	ldr	x0, [sp, #56]
    ec74:	bl	b270 <strchr@plt>
    ec78:	str	x0, [sp, #40]
    ec7c:	ldr	x0, [sp, #40]
    ec80:	cmp	x0, #0x0
    ec84:	b.ne	ec90 <lang_dir@@Base+0x16c>  // b.any
    ec88:	ldr	x0, [sp, #48]
    ec8c:	b	ecc8 <lang_dir@@Base+0x1a4>
    ec90:	ldr	x0, [sp, #48]
    ec94:	bl	b130 <free@plt>
    ec98:	ldr	x1, [sp, #40]
    ec9c:	ldr	x0, [sp, #56]
    eca0:	sub	x0, x1, x0
    eca4:	mov	x1, x0
    eca8:	ldr	x0, [sp, #56]
    ecac:	bl	b410 <xstrndup@plt>
    ecb0:	str	x0, [sp, #48]
    ecb4:	ldr	x1, [sp, #48]
    ecb8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ecbc:	add	x0, x0, #0x50
    ecc0:	bl	aab0 <debug@plt>
    ecc4:	ldr	x0, [sp, #48]
    ecc8:	ldp	x29, x30, [sp], #64
    eccc:	ret

000000000000ecd0 <init_locale@@Base>:
    ecd0:	stp	x29, x30, [sp, #-32]!
    ecd4:	mov	x29, sp
    ecd8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ecdc:	add	x1, x0, #0x18
    ece0:	mov	w0, #0x6                   	// #6
    ece4:	bl	b790 <setlocale@plt>
    ece8:	str	x0, [sp, #24]
    ecec:	ldr	x0, [sp, #24]
    ecf0:	cmp	x0, #0x0
    ecf4:	b.ne	ed34 <init_locale@@Base+0x64>  // b.any
    ecf8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ecfc:	add	x0, x0, #0x70
    ed00:	bl	b670 <getenv@plt>
    ed04:	cmp	x0, #0x0
    ed08:	b.ne	ed34 <init_locale@@Base+0x64>  // b.any
    ed0c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ed10:	add	x0, x0, #0x88
    ed14:	bl	b670 <getenv@plt>
    ed18:	cmp	x0, #0x0
    ed1c:	b.ne	ed34 <init_locale@@Base+0x64>  // b.any
    ed20:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ed24:	add	x2, x0, #0xa0
    ed28:	mov	w1, #0x0                   	// #0
    ed2c:	mov	w0, #0x0                   	// #0
    ed30:	bl	a850 <error@plt>
    ed34:	mov	w2, #0x1                   	// #1
    ed38:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ed3c:	add	x1, x0, #0xe0
    ed40:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ed44:	add	x0, x0, #0x70
    ed48:	bl	a950 <setenv@plt>
    ed4c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ed50:	add	x1, x0, #0xe8
    ed54:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ed58:	add	x0, x0, #0x100
    ed5c:	bl	ac70 <bindtextdomain@plt>
    ed60:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ed64:	add	x1, x0, #0xe8
    ed68:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ed6c:	add	x0, x0, #0x108
    ed70:	bl	ac70 <bindtextdomain@plt>
    ed74:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ed78:	add	x0, x0, #0x100
    ed7c:	bl	b020 <textdomain@plt>
    ed80:	nop
    ed84:	ldp	x29, x30, [sp], #32
    ed88:	ret

000000000000ed8c <word_fnmatch@@Base>:
    ed8c:	stp	x29, x30, [sp, #-64]!
    ed90:	mov	x29, sp
    ed94:	str	x0, [sp, #24]
    ed98:	str	x1, [sp, #16]
    ed9c:	ldr	x0, [sp, #16]
    eda0:	bl	ad10 <xstrdup@plt>
    eda4:	str	x0, [sp, #40]
    eda8:	ldr	x0, [sp, #40]
    edac:	str	x0, [sp, #56]
    edb0:	ldr	x0, [sp, #40]
    edb4:	str	x0, [sp, #48]
    edb8:	b	ee6c <word_fnmatch@@Base+0xe0>
    edbc:	bl	b090 <__ctype_b_loc@plt>
    edc0:	ldr	x1, [x0]
    edc4:	ldr	x0, [sp, #48]
    edc8:	ldrb	w0, [x0]
    edcc:	and	x0, x0, #0xff
    edd0:	lsl	x0, x0, #1
    edd4:	add	x0, x1, x0
    edd8:	ldrh	w0, [x0]
    eddc:	and	w0, w0, #0x400
    ede0:	cmp	w0, #0x0
    ede4:	b.ne	ee5c <word_fnmatch@@Base+0xd0>  // b.any
    ede8:	ldr	x0, [sp, #48]
    edec:	ldrb	w0, [x0]
    edf0:	cmp	w0, #0x5f
    edf4:	b.eq	ee5c <word_fnmatch@@Base+0xd0>  // b.none
    edf8:	ldr	x0, [sp, #56]
    edfc:	add	x0, x0, #0x1
    ee00:	ldr	x1, [sp, #48]
    ee04:	cmp	x1, x0
    ee08:	b.hi	ee1c <word_fnmatch@@Base+0x90>  // b.pmore
    ee0c:	ldr	x0, [sp, #56]
    ee10:	add	x0, x0, #0x1
    ee14:	str	x0, [sp, #56]
    ee18:	b	ee60 <word_fnmatch@@Base+0xd4>
    ee1c:	ldr	x0, [sp, #48]
    ee20:	strb	wzr, [x0]
    ee24:	mov	w2, #0x10                  	// #16
    ee28:	ldr	x1, [sp, #56]
    ee2c:	ldr	x0, [sp, #24]
    ee30:	bl	b310 <fnmatch@plt>
    ee34:	cmp	w0, #0x0
    ee38:	b.ne	ee4c <word_fnmatch@@Base+0xc0>  // b.any
    ee3c:	ldr	x0, [sp, #40]
    ee40:	bl	b130 <free@plt>
    ee44:	mov	w0, #0x1                   	// #1
    ee48:	b	ee88 <word_fnmatch@@Base+0xfc>
    ee4c:	ldr	x0, [sp, #48]
    ee50:	add	x0, x0, #0x1
    ee54:	str	x0, [sp, #56]
    ee58:	b	ee60 <word_fnmatch@@Base+0xd4>
    ee5c:	nop
    ee60:	ldr	x0, [sp, #48]
    ee64:	add	x0, x0, #0x1
    ee68:	str	x0, [sp, #48]
    ee6c:	ldr	x0, [sp, #48]
    ee70:	ldrb	w0, [x0]
    ee74:	cmp	w0, #0x0
    ee78:	b.ne	edbc <word_fnmatch@@Base+0x30>  // b.any
    ee7c:	ldr	x0, [sp, #40]
    ee80:	bl	b130 <free@plt>
    ee84:	mov	w0, #0x0                   	// #0
    ee88:	ldp	x29, x30, [sp], #64
    ee8c:	ret

000000000000ee90 <xregcomp@@Base>:
    ee90:	stp	x29, x30, [sp, #-80]!
    ee94:	mov	x29, sp
    ee98:	str	x0, [sp, #40]
    ee9c:	str	x1, [sp, #32]
    eea0:	str	w2, [sp, #28]
    eea4:	ldr	w2, [sp, #28]
    eea8:	ldr	x1, [sp, #32]
    eeac:	ldr	x0, [sp, #40]
    eeb0:	bl	aaf0 <rpl_regcomp@plt>
    eeb4:	str	w0, [sp, #76]
    eeb8:	ldr	w0, [sp, #76]
    eebc:	cmp	w0, #0x0
    eec0:	b.eq	ef20 <xregcomp@@Base+0x90>  // b.none
    eec4:	mov	x3, #0x0                   	// #0
    eec8:	mov	x2, #0x0                   	// #0
    eecc:	ldr	x1, [sp, #40]
    eed0:	ldr	w0, [sp, #76]
    eed4:	bl	b340 <rpl_regerror@plt>
    eed8:	str	x0, [sp, #64]
    eedc:	ldr	x0, [sp, #64]
    eee0:	bl	ace0 <xmalloc@plt>
    eee4:	str	x0, [sp, #56]
    eee8:	ldr	x3, [sp, #64]
    eeec:	ldr	x2, [sp, #56]
    eef0:	ldr	x1, [sp, #40]
    eef4:	ldr	w0, [sp, #76]
    eef8:	bl	b340 <rpl_regerror@plt>
    eefc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
    ef00:	add	x0, x0, #0x118
    ef04:	bl	b700 <gettext@plt>
    ef08:	ldr	x4, [sp, #56]
    ef0c:	ldr	x3, [sp, #32]
    ef10:	mov	x2, x0
    ef14:	mov	w1, #0x0                   	// #0
    ef18:	mov	w0, #0x2                   	// #2
    ef1c:	bl	a850 <error@plt>
    ef20:	nop
    ef24:	ldp	x29, x30, [sp], #80
    ef28:	ret

000000000000ef2c <areadlink_with_size@@Base>:
    ef2c:	stp	x29, x30, [sp, #-240]!
    ef30:	mov	x29, sp
    ef34:	str	x0, [sp, #24]
    ef38:	str	x1, [sp, #16]
    ef3c:	mov	x0, #0x400                 	// #1024
    ef40:	str	x0, [sp, #208]
    ef44:	mov	x0, #0x2000                	// #8192
    ef48:	str	x0, [sp, #200]
    ef4c:	ldr	x1, [sp, #208]
    ef50:	ldr	x0, [sp, #200]
    ef54:	cmp	x1, x0
    ef58:	b.cs	ef68 <areadlink_with_size@@Base+0x3c>  // b.hs, b.nlast
    ef5c:	ldr	x0, [sp, #208]
    ef60:	add	x0, x0, #0x1
    ef64:	b	ef6c <areadlink_with_size@@Base+0x40>
    ef68:	ldr	x0, [sp, #200]
    ef6c:	str	x0, [sp, #192]
    ef70:	ldr	x0, [sp, #16]
    ef74:	cmp	x0, #0x0
    ef78:	b.eq	efa0 <areadlink_with_size@@Base+0x74>  // b.none
    ef7c:	ldr	x1, [sp, #16]
    ef80:	ldr	x0, [sp, #192]
    ef84:	cmp	x1, x0
    ef88:	b.cs	ef98 <areadlink_with_size@@Base+0x6c>  // b.hs, b.nlast
    ef8c:	ldr	x0, [sp, #16]
    ef90:	add	x0, x0, #0x1
    ef94:	b	efa4 <areadlink_with_size@@Base+0x78>
    ef98:	ldr	x0, [sp, #192]
    ef9c:	b	efa4 <areadlink_with_size@@Base+0x78>
    efa0:	mov	x0, #0x80                  	// #128
    efa4:	str	x0, [sp, #232]
    efa8:	add	x0, sp, #0x20
    efac:	str	x0, [sp, #224]
    efb0:	str	xzr, [sp, #216]
    efb4:	ldr	x0, [sp, #16]
    efb8:	cmp	x0, #0x0
    efbc:	b.ne	efcc <areadlink_with_size@@Base+0xa0>  // b.any
    efc0:	ldr	x0, [sp, #232]
    efc4:	cmp	x0, #0x80
    efc8:	b.eq	eff4 <areadlink_with_size@@Base+0xc8>  // b.none
    efcc:	ldr	x0, [sp, #232]
    efd0:	bl	ab40 <malloc@plt>
    efd4:	str	x0, [sp, #216]
    efd8:	ldr	x0, [sp, #216]
    efdc:	str	x0, [sp, #224]
    efe0:	ldr	x0, [sp, #216]
    efe4:	cmp	x0, #0x0
    efe8:	b.ne	eff4 <areadlink_with_size@@Base+0xc8>  // b.any
    efec:	mov	x0, #0x0                   	// #0
    eff0:	b	f15c <areadlink_with_size@@Base+0x230>
    eff4:	ldr	x2, [sp, #232]
    eff8:	ldr	x1, [sp, #224]
    effc:	ldr	x0, [sp, #24]
    f000:	bl	a960 <readlink@plt>
    f004:	str	x0, [sp, #184]
    f008:	ldr	x0, [sp, #184]
    f00c:	str	x0, [sp, #176]
    f010:	ldr	x0, [sp, #184]
    f014:	cmp	x0, #0x0
    f018:	b.ge	f058 <areadlink_with_size@@Base+0x12c>  // b.tcont
    f01c:	bl	b640 <__errno_location@plt>
    f020:	ldr	w0, [x0]
    f024:	cmp	w0, #0x22
    f028:	b.eq	f058 <areadlink_with_size@@Base+0x12c>  // b.none
    f02c:	bl	b640 <__errno_location@plt>
    f030:	ldr	w0, [x0]
    f034:	str	w0, [sp, #172]
    f038:	ldr	x0, [sp, #216]
    f03c:	bl	b130 <free@plt>
    f040:	bl	b640 <__errno_location@plt>
    f044:	mov	x1, x0
    f048:	ldr	w0, [sp, #172]
    f04c:	str	w0, [x1]
    f050:	mov	x0, #0x0                   	// #0
    f054:	b	f15c <areadlink_with_size@@Base+0x230>
    f058:	ldr	x1, [sp, #176]
    f05c:	ldr	x0, [sp, #232]
    f060:	cmp	x1, x0
    f064:	b.cs	f104 <areadlink_with_size@@Base+0x1d8>  // b.hs, b.nlast
    f068:	ldr	x1, [sp, #224]
    f06c:	ldr	x0, [sp, #176]
    f070:	add	x0, x1, x0
    f074:	strb	wzr, [x0]
    f078:	ldr	x0, [sp, #216]
    f07c:	cmp	x0, #0x0
    f080:	b.ne	f0bc <areadlink_with_size@@Base+0x190>  // b.any
    f084:	ldr	x0, [sp, #176]
    f088:	add	x0, x0, #0x1
    f08c:	bl	ab40 <malloc@plt>
    f090:	str	x0, [sp, #216]
    f094:	ldr	x0, [sp, #216]
    f098:	cmp	x0, #0x0
    f09c:	b.eq	f0fc <areadlink_with_size@@Base+0x1d0>  // b.none
    f0a0:	ldr	x0, [sp, #176]
    f0a4:	add	x0, x0, #0x1
    f0a8:	mov	x2, x0
    f0ac:	ldr	x1, [sp, #224]
    f0b0:	ldr	x0, [sp, #216]
    f0b4:	bl	a790 <memcpy@plt>
    f0b8:	b	f15c <areadlink_with_size@@Base+0x230>
    f0bc:	ldr	x0, [sp, #176]
    f0c0:	add	x0, x0, #0x1
    f0c4:	ldr	x1, [sp, #232]
    f0c8:	cmp	x1, x0
    f0cc:	b.ls	f0fc <areadlink_with_size@@Base+0x1d0>  // b.plast
    f0d0:	ldr	x0, [sp, #176]
    f0d4:	add	x0, x0, #0x1
    f0d8:	mov	x1, x0
    f0dc:	ldr	x0, [sp, #216]
    f0e0:	bl	ae00 <realloc@plt>
    f0e4:	str	x0, [sp, #160]
    f0e8:	ldr	x0, [sp, #160]
    f0ec:	cmp	x0, #0x0
    f0f0:	b.eq	f0fc <areadlink_with_size@@Base+0x1d0>  // b.none
    f0f4:	ldr	x0, [sp, #160]
    f0f8:	str	x0, [sp, #216]
    f0fc:	ldr	x0, [sp, #216]
    f100:	b	f15c <areadlink_with_size@@Base+0x230>
    f104:	ldr	x0, [sp, #216]
    f108:	bl	b130 <free@plt>
    f10c:	ldr	x1, [sp, #232]
    f110:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    f114:	cmp	x1, x0
    f118:	b.hi	f12c <areadlink_with_size@@Base+0x200>  // b.pmore
    f11c:	ldr	x0, [sp, #232]
    f120:	lsl	x0, x0, #1
    f124:	str	x0, [sp, #232]
    f128:	b	efa8 <areadlink_with_size@@Base+0x7c>
    f12c:	ldr	x1, [sp, #232]
    f130:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
    f134:	cmp	x1, x0
    f138:	b.hi	f148 <areadlink_with_size@@Base+0x21c>  // b.pmore
    f13c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    f140:	str	x0, [sp, #232]
    f144:	b	efa8 <areadlink_with_size@@Base+0x7c>
    f148:	bl	b640 <__errno_location@plt>
    f14c:	mov	x1, x0
    f150:	mov	w0, #0xc                   	// #12
    f154:	str	w0, [x1]
    f158:	mov	x0, #0x0                   	// #0
    f15c:	ldp	x29, x30, [sp], #240
    f160:	ret

000000000000f164 <argp_make_fmtstream@@Base>:
    f164:	stp	x29, x30, [sp, #-64]!
    f168:	mov	x29, sp
    f16c:	str	x0, [sp, #40]
    f170:	str	x1, [sp, #32]
    f174:	str	x2, [sp, #24]
    f178:	str	x3, [sp, #16]
    f17c:	mov	x0, #0x48                  	// #72
    f180:	bl	ab40 <malloc@plt>
    f184:	str	x0, [sp, #56]
    f188:	ldr	x0, [sp, #56]
    f18c:	cmp	x0, #0x0
    f190:	b.eq	f22c <argp_make_fmtstream@@Base+0xc8>  // b.none
    f194:	ldr	x0, [sp, #56]
    f198:	ldr	x1, [sp, #40]
    f19c:	str	x1, [x0]
    f1a0:	ldr	x0, [sp, #56]
    f1a4:	ldr	x1, [sp, #32]
    f1a8:	str	x1, [x0, #8]
    f1ac:	ldr	x0, [sp, #56]
    f1b0:	ldr	x1, [sp, #24]
    f1b4:	str	x1, [x0, #16]
    f1b8:	ldr	x0, [sp, #56]
    f1bc:	ldr	x1, [sp, #16]
    f1c0:	str	x1, [x0, #24]
    f1c4:	ldr	x0, [sp, #56]
    f1c8:	str	xzr, [x0, #40]
    f1cc:	ldr	x0, [sp, #56]
    f1d0:	str	xzr, [x0, #32]
    f1d4:	mov	x0, #0xc8                  	// #200
    f1d8:	bl	ab40 <malloc@plt>
    f1dc:	mov	x1, x0
    f1e0:	ldr	x0, [sp, #56]
    f1e4:	str	x1, [x0, #48]
    f1e8:	ldr	x0, [sp, #56]
    f1ec:	ldr	x0, [x0, #48]
    f1f0:	cmp	x0, #0x0
    f1f4:	b.ne	f208 <argp_make_fmtstream@@Base+0xa4>  // b.any
    f1f8:	ldr	x0, [sp, #56]
    f1fc:	bl	b130 <free@plt>
    f200:	str	xzr, [sp, #56]
    f204:	b	f22c <argp_make_fmtstream@@Base+0xc8>
    f208:	ldr	x0, [sp, #56]
    f20c:	ldr	x1, [x0, #48]
    f210:	ldr	x0, [sp, #56]
    f214:	str	x1, [x0, #56]
    f218:	ldr	x0, [sp, #56]
    f21c:	ldr	x0, [x0, #48]
    f220:	add	x1, x0, #0xc8
    f224:	ldr	x0, [sp, #56]
    f228:	str	x1, [x0, #64]
    f22c:	ldr	x0, [sp, #56]
    f230:	ldp	x29, x30, [sp], #64
    f234:	ret

000000000000f238 <argp_fmtstream_free@@Base>:
    f238:	stp	x29, x30, [sp, #-32]!
    f23c:	mov	x29, sp
    f240:	str	x0, [sp, #24]
    f244:	ldr	x0, [sp, #24]
    f248:	bl	aa40 <_argp_fmtstream_update@plt>
    f24c:	ldr	x0, [sp, #24]
    f250:	ldr	x1, [x0, #56]
    f254:	ldr	x0, [sp, #24]
    f258:	ldr	x0, [x0, #48]
    f25c:	cmp	x1, x0
    f260:	b.ls	f2a0 <argp_fmtstream_free@@Base+0x68>  // b.plast
    f264:	ldr	x0, [sp, #24]
    f268:	ldr	x4, [x0, #48]
    f26c:	ldr	x0, [sp, #24]
    f270:	ldr	x1, [x0, #56]
    f274:	ldr	x0, [sp, #24]
    f278:	ldr	x0, [x0, #48]
    f27c:	sub	x0, x1, x0
    f280:	mov	x1, x0
    f284:	ldr	x0, [sp, #24]
    f288:	ldr	x0, [x0]
    f28c:	mov	x3, x0
    f290:	mov	x2, x1
    f294:	mov	x1, #0x1                   	// #1
    f298:	mov	x0, x4
    f29c:	bl	a800 <fwrite_unlocked@plt>
    f2a0:	ldr	x0, [sp, #24]
    f2a4:	ldr	x0, [x0, #48]
    f2a8:	bl	b130 <free@plt>
    f2ac:	ldr	x0, [sp, #24]
    f2b0:	bl	b130 <free@plt>
    f2b4:	nop
    f2b8:	ldp	x29, x30, [sp], #32
    f2bc:	ret

000000000000f2c0 <_argp_fmtstream_update@@Base>:
    f2c0:	stp	x29, x30, [sp, #-112]!
    f2c4:	mov	x29, sp
    f2c8:	str	x0, [sp, #24]
    f2cc:	ldr	x0, [sp, #24]
    f2d0:	ldr	x1, [x0, #48]
    f2d4:	ldr	x0, [sp, #24]
    f2d8:	ldr	x0, [x0, #32]
    f2dc:	add	x0, x1, x0
    f2e0:	str	x0, [sp, #104]
    f2e4:	b	fae8 <_argp_fmtstream_update@@Base+0x828>
    f2e8:	ldr	x0, [sp, #24]
    f2ec:	ldr	x0, [x0, #40]
    f2f0:	cmp	x0, #0x0
    f2f4:	b.ne	f3e0 <_argp_fmtstream_update@@Base+0x120>  // b.any
    f2f8:	ldr	x0, [sp, #24]
    f2fc:	ldr	x0, [x0, #8]
    f300:	cmp	x0, #0x0
    f304:	b.eq	f3e0 <_argp_fmtstream_update@@Base+0x120>  // b.none
    f308:	ldr	x0, [sp, #24]
    f30c:	ldr	x0, [x0, #8]
    f310:	str	x0, [sp, #48]
    f314:	ldr	x0, [sp, #24]
    f318:	ldr	x1, [x0, #56]
    f31c:	ldr	x0, [sp, #48]
    f320:	add	x1, x1, x0
    f324:	ldr	x0, [sp, #24]
    f328:	ldr	x0, [x0, #64]
    f32c:	cmp	x1, x0
    f330:	b.cs	f39c <_argp_fmtstream_update@@Base+0xdc>  // b.hs, b.nlast
    f334:	ldr	x1, [sp, #104]
    f338:	ldr	x0, [sp, #48]
    f33c:	add	x3, x1, x0
    f340:	ldr	x0, [sp, #24]
    f344:	ldr	x1, [x0, #56]
    f348:	ldr	x0, [sp, #104]
    f34c:	sub	x0, x1, x0
    f350:	mov	x2, x0
    f354:	ldr	x1, [sp, #104]
    f358:	mov	x0, x3
    f35c:	bl	a7a0 <memmove@plt>
    f360:	ldr	x0, [sp, #24]
    f364:	ldr	x1, [x0, #56]
    f368:	ldr	x0, [sp, #48]
    f36c:	add	x1, x1, x0
    f370:	ldr	x0, [sp, #24]
    f374:	str	x1, [x0, #56]
    f378:	ldr	x2, [sp, #48]
    f37c:	mov	w1, #0x20                  	// #32
    f380:	ldr	x0, [sp, #104]
    f384:	bl	acb0 <memset@plt>
    f388:	ldr	x1, [sp, #104]
    f38c:	ldr	x0, [sp, #48]
    f390:	add	x0, x1, x0
    f394:	str	x0, [sp, #104]
    f398:	b	f3d4 <_argp_fmtstream_update@@Base+0x114>
    f39c:	str	xzr, [sp, #80]
    f3a0:	b	f3c4 <_argp_fmtstream_update@@Base+0x104>
    f3a4:	ldr	x0, [sp, #24]
    f3a8:	ldr	x0, [x0]
    f3ac:	mov	x1, x0
    f3b0:	mov	w0, #0x20                  	// #32
    f3b4:	bl	aaa0 <putc_unlocked@plt>
    f3b8:	ldr	x0, [sp, #80]
    f3bc:	add	x0, x0, #0x1
    f3c0:	str	x0, [sp, #80]
    f3c4:	ldr	x1, [sp, #80]
    f3c8:	ldr	x0, [sp, #48]
    f3cc:	cmp	x1, x0
    f3d0:	b.cc	f3a4 <_argp_fmtstream_update@@Base+0xe4>  // b.lo, b.ul, b.last
    f3d4:	ldr	x1, [sp, #48]
    f3d8:	ldr	x0, [sp, #24]
    f3dc:	str	x1, [x0, #40]
    f3e0:	ldr	x0, [sp, #24]
    f3e4:	ldr	x1, [x0, #56]
    f3e8:	ldr	x0, [sp, #104]
    f3ec:	sub	x0, x1, x0
    f3f0:	str	x0, [sp, #88]
    f3f4:	ldr	x2, [sp, #88]
    f3f8:	mov	w1, #0xa                   	// #10
    f3fc:	ldr	x0, [sp, #104]
    f400:	bl	b3b0 <memchr@plt>
    f404:	str	x0, [sp, #96]
    f408:	ldr	x0, [sp, #24]
    f40c:	ldr	x0, [x0, #40]
    f410:	cmp	x0, #0x0
    f414:	b.ge	f420 <_argp_fmtstream_update@@Base+0x160>  // b.tcont
    f418:	ldr	x0, [sp, #24]
    f41c:	str	xzr, [x0, #40]
    f420:	ldr	x0, [sp, #96]
    f424:	cmp	x0, #0x0
    f428:	b.ne	f484 <_argp_fmtstream_update@@Base+0x1c4>  // b.any
    f42c:	ldr	x0, [sp, #24]
    f430:	ldr	x0, [x0, #40]
    f434:	mov	x1, x0
    f438:	ldr	x0, [sp, #88]
    f43c:	add	x1, x1, x0
    f440:	ldr	x0, [sp, #24]
    f444:	ldr	x0, [x0, #16]
    f448:	cmp	x1, x0
    f44c:	b.cs	f474 <_argp_fmtstream_update@@Base+0x1b4>  // b.hs, b.nlast
    f450:	ldr	x0, [sp, #24]
    f454:	ldr	x0, [x0, #40]
    f458:	mov	x1, x0
    f45c:	ldr	x0, [sp, #88]
    f460:	add	x0, x1, x0
    f464:	mov	x1, x0
    f468:	ldr	x0, [sp, #24]
    f46c:	str	x1, [x0, #40]
    f470:	b	fafc <_argp_fmtstream_update@@Base+0x83c>
    f474:	ldr	x0, [sp, #24]
    f478:	ldr	x0, [x0, #56]
    f47c:	str	x0, [sp, #96]
    f480:	b	f4c4 <_argp_fmtstream_update@@Base+0x204>
    f484:	ldr	x0, [sp, #24]
    f488:	ldr	x1, [x0, #40]
    f48c:	ldr	x2, [sp, #96]
    f490:	ldr	x0, [sp, #104]
    f494:	sub	x0, x2, x0
    f498:	add	x0, x1, x0
    f49c:	ldr	x1, [sp, #24]
    f4a0:	ldr	x1, [x1, #16]
    f4a4:	cmp	x0, x1
    f4a8:	b.ge	f4c4 <_argp_fmtstream_update@@Base+0x204>  // b.tcont
    f4ac:	ldr	x0, [sp, #24]
    f4b0:	str	xzr, [x0, #40]
    f4b4:	ldr	x0, [sp, #96]
    f4b8:	add	x0, x0, #0x1
    f4bc:	str	x0, [sp, #104]
    f4c0:	b	fae8 <_argp_fmtstream_update@@Base+0x828>
    f4c4:	ldr	x0, [sp, #24]
    f4c8:	ldr	x0, [x0, #16]
    f4cc:	sub	x0, x0, #0x1
    f4d0:	str	x0, [sp, #40]
    f4d4:	ldr	x0, [sp, #24]
    f4d8:	ldr	x0, [x0, #24]
    f4dc:	cmp	x0, #0x0
    f4e0:	b.ge	f5dc <_argp_fmtstream_update@@Base+0x31c>  // b.tcont
    f4e4:	ldr	x0, [sp, #24]
    f4e8:	ldr	x0, [x0, #56]
    f4ec:	ldr	x1, [sp, #96]
    f4f0:	cmp	x1, x0
    f4f4:	b.cs	f590 <_argp_fmtstream_update@@Base+0x2d0>  // b.hs, b.nlast
    f4f8:	ldr	x0, [sp, #24]
    f4fc:	ldr	x0, [x0, #40]
    f500:	mov	x1, x0
    f504:	ldr	x0, [sp, #40]
    f508:	sub	x0, x0, x1
    f50c:	ldr	x1, [sp, #104]
    f510:	add	x3, x1, x0
    f514:	ldr	x0, [sp, #24]
    f518:	ldr	x1, [x0, #56]
    f51c:	ldr	x0, [sp, #96]
    f520:	sub	x0, x1, x0
    f524:	mov	x2, x0
    f528:	ldr	x1, [sp, #96]
    f52c:	mov	x0, x3
    f530:	bl	a7a0 <memmove@plt>
    f534:	ldr	x0, [sp, #24]
    f538:	ldr	x1, [x0, #56]
    f53c:	ldr	x0, [sp, #24]
    f540:	ldr	x0, [x0, #40]
    f544:	mov	x2, x0
    f548:	ldr	x0, [sp, #40]
    f54c:	sub	x0, x0, x2
    f550:	ldr	x2, [sp, #104]
    f554:	add	x2, x2, x0
    f558:	ldr	x0, [sp, #96]
    f55c:	sub	x0, x2, x0
    f560:	neg	x0, x0
    f564:	add	x1, x1, x0
    f568:	ldr	x0, [sp, #24]
    f56c:	str	x1, [x0, #56]
    f570:	ldr	x0, [sp, #24]
    f574:	str	xzr, [x0, #40]
    f578:	ldr	x0, [sp, #40]
    f57c:	add	x0, x0, #0x1
    f580:	ldr	x1, [sp, #104]
    f584:	add	x0, x1, x0
    f588:	str	x0, [sp, #104]
    f58c:	b	fae8 <_argp_fmtstream_update@@Base+0x828>
    f590:	ldr	x0, [sp, #24]
    f594:	ldr	x0, [x0, #40]
    f598:	mov	x1, x0
    f59c:	ldr	x0, [sp, #88]
    f5a0:	add	x0, x1, x0
    f5a4:	mov	x1, x0
    f5a8:	ldr	x0, [sp, #24]
    f5ac:	str	x1, [x0, #40]
    f5b0:	ldr	x0, [sp, #24]
    f5b4:	ldr	x1, [x0, #56]
    f5b8:	ldr	x0, [sp, #24]
    f5bc:	ldr	x0, [x0, #40]
    f5c0:	mov	x2, x0
    f5c4:	ldr	x0, [sp, #40]
    f5c8:	sub	x0, x0, x2
    f5cc:	add	x1, x1, x0
    f5d0:	ldr	x0, [sp, #24]
    f5d4:	str	x1, [x0, #56]
    f5d8:	b	fafc <_argp_fmtstream_update@@Base+0x83c>
    f5dc:	ldr	x0, [sp, #24]
    f5e0:	ldr	x0, [x0, #40]
    f5e4:	mov	x1, x0
    f5e8:	ldr	x0, [sp, #40]
    f5ec:	sub	x0, x0, x1
    f5f0:	add	x0, x0, #0x1
    f5f4:	ldr	x1, [sp, #104]
    f5f8:	add	x0, x1, x0
    f5fc:	str	x0, [sp, #72]
    f600:	b	f610 <_argp_fmtstream_update@@Base+0x350>
    f604:	ldr	x0, [sp, #72]
    f608:	sub	x0, x0, #0x1
    f60c:	str	x0, [sp, #72]
    f610:	ldr	x1, [sp, #72]
    f614:	ldr	x0, [sp, #104]
    f618:	cmp	x1, x0
    f61c:	b.cc	f64c <_argp_fmtstream_update@@Base+0x38c>  // b.lo, b.ul, b.last
    f620:	bl	b090 <__ctype_b_loc@plt>
    f624:	ldr	x1, [x0]
    f628:	ldr	x0, [sp, #72]
    f62c:	ldrb	w0, [x0]
    f630:	and	x0, x0, #0xff
    f634:	lsl	x0, x0, #1
    f638:	add	x0, x1, x0
    f63c:	ldrh	w0, [x0]
    f640:	and	w0, w0, #0x1
    f644:	cmp	w0, #0x0
    f648:	b.eq	f604 <_argp_fmtstream_update@@Base+0x344>  // b.none
    f64c:	ldr	x0, [sp, #72]
    f650:	add	x0, x0, #0x1
    f654:	str	x0, [sp, #64]
    f658:	ldr	x1, [sp, #64]
    f65c:	ldr	x0, [sp, #104]
    f660:	cmp	x1, x0
    f664:	b.ls	f6d0 <_argp_fmtstream_update@@Base+0x410>  // b.plast
    f668:	ldr	x1, [sp, #72]
    f66c:	ldr	x0, [sp, #104]
    f670:	cmp	x1, x0
    f674:	b.cc	f6c0 <_argp_fmtstream_update@@Base+0x400>  // b.lo, b.ul, b.last
    f678:	ldr	x0, [sp, #72]
    f67c:	sub	x0, x0, #0x1
    f680:	str	x0, [sp, #72]
    f684:	ldr	x1, [sp, #72]
    f688:	ldr	x0, [sp, #104]
    f68c:	cmp	x1, x0
    f690:	b.cc	f6c0 <_argp_fmtstream_update@@Base+0x400>  // b.lo, b.ul, b.last
    f694:	bl	b090 <__ctype_b_loc@plt>
    f698:	ldr	x1, [x0]
    f69c:	ldr	x0, [sp, #72]
    f6a0:	ldrb	w0, [x0]
    f6a4:	and	x0, x0, #0xff
    f6a8:	lsl	x0, x0, #1
    f6ac:	add	x0, x1, x0
    f6b0:	ldrh	w0, [x0]
    f6b4:	and	w0, w0, #0x1
    f6b8:	cmp	w0, #0x0
    f6bc:	b.ne	f678 <_argp_fmtstream_update@@Base+0x3b8>  // b.any
    f6c0:	ldr	x0, [sp, #72]
    f6c4:	add	x0, x0, #0x1
    f6c8:	str	x0, [sp, #96]
    f6cc:	b	f7bc <_argp_fmtstream_update@@Base+0x4fc>
    f6d0:	ldr	x0, [sp, #24]
    f6d4:	ldr	x0, [x0, #40]
    f6d8:	mov	x1, x0
    f6dc:	ldr	x0, [sp, #40]
    f6e0:	sub	x0, x0, x1
    f6e4:	add	x0, x0, #0x1
    f6e8:	ldr	x1, [sp, #104]
    f6ec:	add	x0, x1, x0
    f6f0:	str	x0, [sp, #72]
    f6f4:	ldr	x1, [sp, #72]
    f6f8:	ldr	x0, [sp, #96]
    f6fc:	cmp	x1, x0
    f700:	b.cs	f74c <_argp_fmtstream_update@@Base+0x48c>  // b.hs, b.nlast
    f704:	ldr	x0, [sp, #72]
    f708:	add	x0, x0, #0x1
    f70c:	str	x0, [sp, #72]
    f710:	ldr	x1, [sp, #72]
    f714:	ldr	x0, [sp, #96]
    f718:	cmp	x1, x0
    f71c:	b.cs	f74c <_argp_fmtstream_update@@Base+0x48c>  // b.hs, b.nlast
    f720:	bl	b090 <__ctype_b_loc@plt>
    f724:	ldr	x1, [x0]
    f728:	ldr	x0, [sp, #72]
    f72c:	ldrb	w0, [x0]
    f730:	and	x0, x0, #0xff
    f734:	lsl	x0, x0, #1
    f738:	add	x0, x1, x0
    f73c:	ldrh	w0, [x0]
    f740:	and	w0, w0, #0x1
    f744:	cmp	w0, #0x0
    f748:	b.eq	f704 <_argp_fmtstream_update@@Base+0x444>  // b.none
    f74c:	ldr	x1, [sp, #72]
    f750:	ldr	x0, [sp, #96]
    f754:	cmp	x1, x0
    f758:	b.ne	f774 <_argp_fmtstream_update@@Base+0x4b4>  // b.any
    f75c:	ldr	x0, [sp, #24]
    f760:	str	xzr, [x0, #40]
    f764:	ldr	x0, [sp, #96]
    f768:	add	x0, x0, #0x1
    f76c:	str	x0, [sp, #104]
    f770:	b	fae8 <_argp_fmtstream_update@@Base+0x828>
    f774:	ldr	x0, [sp, #72]
    f778:	str	x0, [sp, #96]
    f77c:	ldr	x0, [sp, #72]
    f780:	add	x0, x0, #0x1
    f784:	str	x0, [sp, #72]
    f788:	bl	b090 <__ctype_b_loc@plt>
    f78c:	ldr	x1, [x0]
    f790:	ldr	x0, [sp, #72]
    f794:	ldrb	w0, [x0]
    f798:	and	x0, x0, #0xff
    f79c:	lsl	x0, x0, #1
    f7a0:	add	x0, x1, x0
    f7a4:	ldrh	w0, [x0]
    f7a8:	and	w0, w0, #0x1
    f7ac:	cmp	w0, #0x0
    f7b0:	b.ne	f77c <_argp_fmtstream_update@@Base+0x4bc>  // b.any
    f7b4:	ldr	x0, [sp, #72]
    f7b8:	str	x0, [sp, #64]
    f7bc:	ldr	x0, [sp, #88]
    f7c0:	add	x0, x0, #0x1
    f7c4:	ldr	x1, [sp, #104]
    f7c8:	add	x0, x1, x0
    f7cc:	ldr	x1, [sp, #64]
    f7d0:	cmp	x1, x0
    f7d4:	b.ne	f7fc <_argp_fmtstream_update@@Base+0x53c>  // b.any
    f7d8:	ldr	x0, [sp, #24]
    f7dc:	ldr	x1, [x0, #24]
    f7e0:	ldr	x0, [sp, #24]
    f7e4:	ldr	x2, [x0, #64]
    f7e8:	ldr	x0, [sp, #96]
    f7ec:	sub	x0, x2, x0
    f7f0:	cmp	x1, x0
    f7f4:	b.ge	f81c <_argp_fmtstream_update@@Base+0x55c>  // b.tcont
    f7f8:	b	f96c <_argp_fmtstream_update@@Base+0x6ac>
    f7fc:	ldr	x0, [sp, #96]
    f800:	add	x0, x0, #0x1
    f804:	ldr	x1, [sp, #64]
    f808:	sub	x1, x1, x0
    f80c:	ldr	x0, [sp, #24]
    f810:	ldr	x0, [x0, #24]
    f814:	cmp	x1, x0
    f818:	b.ge	f96c <_argp_fmtstream_update@@Base+0x6ac>  // b.tcont
    f81c:	ldr	x0, [sp, #24]
    f820:	ldr	x0, [x0, #56]
    f824:	ldr	x1, [sp, #64]
    f828:	cmp	x1, x0
    f82c:	b.cs	f96c <_argp_fmtstream_update@@Base+0x6ac>  // b.hs, b.nlast
    f830:	ldr	x0, [sp, #24]
    f834:	ldr	x1, [x0, #64]
    f838:	ldr	x0, [sp, #24]
    f83c:	ldr	x0, [x0, #56]
    f840:	sub	x1, x1, x0
    f844:	ldr	x0, [sp, #24]
    f848:	ldr	x0, [x0, #24]
    f84c:	add	x0, x0, #0x1
    f850:	cmp	x1, x0
    f854:	b.le	f8d4 <_argp_fmtstream_update@@Base+0x614>
    f858:	ldr	x0, [sp, #24]
    f85c:	ldr	x1, [x0, #56]
    f860:	ldr	x0, [sp, #64]
    f864:	sub	x0, x1, x0
    f868:	str	x0, [sp, #32]
    f86c:	ldr	x0, [sp, #24]
    f870:	ldr	x0, [x0, #24]
    f874:	add	x0, x0, #0x1
    f878:	ldr	x1, [sp, #96]
    f87c:	add	x0, x1, x0
    f880:	ldr	x2, [sp, #32]
    f884:	ldr	x1, [sp, #64]
    f888:	bl	a7a0 <memmove@plt>
    f88c:	ldr	x0, [sp, #24]
    f890:	ldr	x0, [x0, #24]
    f894:	add	x0, x0, #0x1
    f898:	ldr	x1, [sp, #96]
    f89c:	add	x0, x1, x0
    f8a0:	str	x0, [sp, #64]
    f8a4:	ldr	x1, [sp, #64]
    f8a8:	ldr	x0, [sp, #32]
    f8ac:	add	x1, x1, x0
    f8b0:	ldr	x0, [sp, #104]
    f8b4:	sub	x0, x1, x0
    f8b8:	str	x0, [sp, #88]
    f8bc:	ldr	x0, [sp, #96]
    f8c0:	add	x1, x0, #0x1
    f8c4:	str	x1, [sp, #96]
    f8c8:	mov	w1, #0xa                   	// #10
    f8cc:	strb	w1, [x0]
    f8d0:	b	f980 <_argp_fmtstream_update@@Base+0x6c0>
    f8d4:	ldr	x0, [sp, #24]
    f8d8:	ldr	x0, [x0, #48]
    f8dc:	ldr	x1, [sp, #96]
    f8e0:	cmp	x1, x0
    f8e4:	b.ls	f920 <_argp_fmtstream_update@@Base+0x660>  // b.plast
    f8e8:	ldr	x0, [sp, #24]
    f8ec:	ldr	x4, [x0, #48]
    f8f0:	ldr	x0, [sp, #24]
    f8f4:	ldr	x0, [x0, #48]
    f8f8:	ldr	x1, [sp, #96]
    f8fc:	sub	x0, x1, x0
    f900:	mov	x1, x0
    f904:	ldr	x0, [sp, #24]
    f908:	ldr	x0, [x0]
    f90c:	mov	x3, x0
    f910:	mov	x2, x1
    f914:	mov	x1, #0x1                   	// #1
    f918:	mov	x0, x4
    f91c:	bl	a800 <fwrite_unlocked@plt>
    f920:	ldr	x0, [sp, #24]
    f924:	ldr	x0, [x0]
    f928:	mov	x1, x0
    f92c:	mov	w0, #0xa                   	// #10
    f930:	bl	aaa0 <putc_unlocked@plt>
    f934:	ldr	x0, [sp, #24]
    f938:	ldr	x0, [x0, #48]
    f93c:	ldr	x1, [sp, #104]
    f940:	sub	x0, x1, x0
    f944:	mov	x1, x0
    f948:	ldr	x0, [sp, #88]
    f94c:	add	x0, x0, x1
    f950:	str	x0, [sp, #88]
    f954:	ldr	x0, [sp, #24]
    f958:	ldr	x0, [x0, #48]
    f95c:	str	x0, [sp, #104]
    f960:	ldr	x0, [sp, #104]
    f964:	str	x0, [sp, #96]
    f968:	b	f980 <_argp_fmtstream_update@@Base+0x6c0>
    f96c:	ldr	x0, [sp, #96]
    f970:	add	x1, x0, #0x1
    f974:	str	x1, [sp, #96]
    f978:	mov	w1, #0xa                   	// #10
    f97c:	strb	w1, [x0]
    f980:	ldr	x1, [sp, #64]
    f984:	ldr	x0, [sp, #96]
    f988:	sub	x1, x1, x0
    f98c:	ldr	x0, [sp, #24]
    f990:	ldr	x0, [x0, #24]
    f994:	cmp	x1, x0
    f998:	b.ge	f9d8 <_argp_fmtstream_update@@Base+0x718>  // b.tcont
    f99c:	ldr	x0, [sp, #88]
    f9a0:	add	x0, x0, #0x1
    f9a4:	ldr	x1, [sp, #104]
    f9a8:	add	x0, x1, x0
    f9ac:	ldr	x1, [sp, #64]
    f9b0:	cmp	x1, x0
    f9b4:	b.ne	fa18 <_argp_fmtstream_update@@Base+0x758>  // b.any
    f9b8:	ldr	x0, [sp, #24]
    f9bc:	ldr	x1, [x0, #64]
    f9c0:	ldr	x0, [sp, #64]
    f9c4:	sub	x1, x1, x0
    f9c8:	ldr	x0, [sp, #24]
    f9cc:	ldr	x0, [x0, #24]
    f9d0:	cmp	x1, x0
    f9d4:	b.lt	fa18 <_argp_fmtstream_update@@Base+0x758>  // b.tstop
    f9d8:	str	wzr, [sp, #60]
    f9dc:	b	fa00 <_argp_fmtstream_update@@Base+0x740>
    f9e0:	ldr	x0, [sp, #96]
    f9e4:	add	x1, x0, #0x1
    f9e8:	str	x1, [sp, #96]
    f9ec:	mov	w1, #0x20                  	// #32
    f9f0:	strb	w1, [x0]
    f9f4:	ldr	w0, [sp, #60]
    f9f8:	add	w0, w0, #0x1
    f9fc:	str	w0, [sp, #60]
    fa00:	ldrsw	x1, [sp, #60]
    fa04:	ldr	x0, [sp, #24]
    fa08:	ldr	x0, [x0, #24]
    fa0c:	cmp	x1, x0
    fa10:	b.lt	f9e0 <_argp_fmtstream_update@@Base+0x720>  // b.tstop
    fa14:	b	fa54 <_argp_fmtstream_update@@Base+0x794>
    fa18:	str	wzr, [sp, #60]
    fa1c:	b	fa40 <_argp_fmtstream_update@@Base+0x780>
    fa20:	ldr	x0, [sp, #24]
    fa24:	ldr	x0, [x0]
    fa28:	mov	x1, x0
    fa2c:	mov	w0, #0x20                  	// #32
    fa30:	bl	aaa0 <putc_unlocked@plt>
    fa34:	ldr	w0, [sp, #60]
    fa38:	add	w0, w0, #0x1
    fa3c:	str	w0, [sp, #60]
    fa40:	ldrsw	x1, [sp, #60]
    fa44:	ldr	x0, [sp, #24]
    fa48:	ldr	x0, [x0, #24]
    fa4c:	cmp	x1, x0
    fa50:	b.lt	fa20 <_argp_fmtstream_update@@Base+0x760>  // b.tstop
    fa54:	ldr	x1, [sp, #96]
    fa58:	ldr	x0, [sp, #64]
    fa5c:	cmp	x1, x0
    fa60:	b.cs	fa88 <_argp_fmtstream_update@@Base+0x7c8>  // b.hs, b.nlast
    fa64:	ldr	x1, [sp, #104]
    fa68:	ldr	x0, [sp, #88]
    fa6c:	add	x1, x1, x0
    fa70:	ldr	x0, [sp, #64]
    fa74:	sub	x0, x1, x0
    fa78:	mov	x2, x0
    fa7c:	ldr	x1, [sp, #64]
    fa80:	ldr	x0, [sp, #96]
    fa84:	bl	a7a0 <memmove@plt>
    fa88:	ldr	x1, [sp, #64]
    fa8c:	ldr	x0, [sp, #104]
    fa90:	sub	x0, x1, x0
    fa94:	mov	x1, x0
    fa98:	ldr	x0, [sp, #88]
    fa9c:	sub	x0, x0, x1
    faa0:	str	x0, [sp, #88]
    faa4:	ldr	x0, [sp, #96]
    faa8:	str	x0, [sp, #104]
    faac:	ldr	x1, [sp, #96]
    fab0:	ldr	x0, [sp, #88]
    fab4:	add	x1, x1, x0
    fab8:	ldr	x0, [sp, #24]
    fabc:	str	x1, [x0, #56]
    fac0:	ldr	x0, [sp, #24]
    fac4:	ldr	x0, [x0, #24]
    fac8:	cmp	x0, #0x0
    facc:	b.eq	fadc <_argp_fmtstream_update@@Base+0x81c>  // b.none
    fad0:	ldr	x0, [sp, #24]
    fad4:	ldr	x0, [x0, #24]
    fad8:	b	fae0 <_argp_fmtstream_update@@Base+0x820>
    fadc:	mov	x0, #0xffffffffffffffff    	// #-1
    fae0:	ldr	x1, [sp, #24]
    fae4:	str	x0, [x1, #40]
    fae8:	ldr	x0, [sp, #24]
    faec:	ldr	x0, [x0, #56]
    faf0:	ldr	x1, [sp, #104]
    faf4:	cmp	x1, x0
    faf8:	b.cc	f2e8 <_argp_fmtstream_update@@Base+0x28>  // b.lo, b.ul, b.last
    fafc:	ldr	x0, [sp, #24]
    fb00:	ldr	x1, [x0, #56]
    fb04:	ldr	x0, [sp, #24]
    fb08:	ldr	x0, [x0, #48]
    fb0c:	sub	x0, x1, x0
    fb10:	mov	x1, x0
    fb14:	ldr	x0, [sp, #24]
    fb18:	str	x1, [x0, #32]
    fb1c:	nop
    fb20:	ldp	x29, x30, [sp], #112
    fb24:	ret

000000000000fb28 <_argp_fmtstream_ensure@@Base>:
    fb28:	stp	x29, x30, [sp, #-64]!
    fb2c:	mov	x29, sp
    fb30:	str	x0, [sp, #24]
    fb34:	str	x1, [sp, #16]
    fb38:	ldr	x0, [sp, #24]
    fb3c:	ldr	x1, [x0, #64]
    fb40:	ldr	x0, [sp, #24]
    fb44:	ldr	x0, [x0, #56]
    fb48:	sub	x0, x1, x0
    fb4c:	mov	x1, x0
    fb50:	ldr	x0, [sp, #16]
    fb54:	cmp	x0, x1
    fb58:	b.ls	fd1c <_argp_fmtstream_ensure@@Base+0x1f4>  // b.plast
    fb5c:	ldr	x0, [sp, #24]
    fb60:	bl	aa40 <_argp_fmtstream_update@plt>
    fb64:	ldr	x0, [sp, #24]
    fb68:	ldr	x4, [x0, #48]
    fb6c:	ldr	x0, [sp, #24]
    fb70:	ldr	x1, [x0, #56]
    fb74:	ldr	x0, [sp, #24]
    fb78:	ldr	x0, [x0, #48]
    fb7c:	sub	x0, x1, x0
    fb80:	mov	x1, x0
    fb84:	ldr	x0, [sp, #24]
    fb88:	ldr	x0, [x0]
    fb8c:	mov	x3, x0
    fb90:	mov	x2, x1
    fb94:	mov	x1, #0x1                   	// #1
    fb98:	mov	x0, x4
    fb9c:	bl	a800 <fwrite_unlocked@plt>
    fba0:	str	x0, [sp, #56]
    fba4:	ldr	x0, [sp, #24]
    fba8:	ldr	x1, [x0, #56]
    fbac:	ldr	x0, [sp, #24]
    fbb0:	ldr	x0, [x0, #48]
    fbb4:	sub	x0, x1, x0
    fbb8:	ldr	x1, [sp, #56]
    fbbc:	cmp	x1, x0
    fbc0:	b.ne	fc04 <_argp_fmtstream_ensure@@Base+0xdc>  // b.any
    fbc4:	ldr	x0, [sp, #24]
    fbc8:	ldr	x1, [x0, #48]
    fbcc:	ldr	x0, [sp, #24]
    fbd0:	str	x1, [x0, #56]
    fbd4:	ldr	x0, [sp, #24]
    fbd8:	str	xzr, [x0, #32]
    fbdc:	ldr	x0, [sp, #24]
    fbe0:	ldr	x1, [x0, #64]
    fbe4:	ldr	x0, [sp, #24]
    fbe8:	ldr	x0, [x0, #48]
    fbec:	sub	x0, x1, x0
    fbf0:	mov	x1, x0
    fbf4:	ldr	x0, [sp, #16]
    fbf8:	cmp	x0, x1
    fbfc:	b.ls	fd1c <_argp_fmtstream_ensure@@Base+0x1f4>  // b.plast
    fc00:	b	fc7c <_argp_fmtstream_ensure@@Base+0x154>
    fc04:	ldr	x0, [sp, #24]
    fc08:	ldr	x1, [x0, #56]
    fc0c:	ldr	x0, [sp, #56]
    fc10:	neg	x0, x0
    fc14:	add	x1, x1, x0
    fc18:	ldr	x0, [sp, #24]
    fc1c:	str	x1, [x0, #56]
    fc20:	ldr	x0, [sp, #24]
    fc24:	ldr	x1, [x0, #32]
    fc28:	ldr	x0, [sp, #56]
    fc2c:	sub	x1, x1, x0
    fc30:	ldr	x0, [sp, #24]
    fc34:	str	x1, [x0, #32]
    fc38:	ldr	x0, [sp, #24]
    fc3c:	ldr	x3, [x0, #48]
    fc40:	ldr	x0, [sp, #24]
    fc44:	ldr	x1, [x0, #48]
    fc48:	ldr	x0, [sp, #56]
    fc4c:	add	x4, x1, x0
    fc50:	ldr	x0, [sp, #24]
    fc54:	ldr	x1, [x0, #56]
    fc58:	ldr	x0, [sp, #24]
    fc5c:	ldr	x0, [x0, #48]
    fc60:	sub	x0, x1, x0
    fc64:	mov	x2, x0
    fc68:	mov	x1, x4
    fc6c:	mov	x0, x3
    fc70:	bl	a7a0 <memmove@plt>
    fc74:	mov	w0, #0x0                   	// #0
    fc78:	b	fd20 <_argp_fmtstream_ensure@@Base+0x1f8>
    fc7c:	ldr	x0, [sp, #24]
    fc80:	ldr	x1, [x0, #64]
    fc84:	ldr	x0, [sp, #24]
    fc88:	ldr	x0, [x0, #48]
    fc8c:	sub	x0, x1, x0
    fc90:	str	x0, [sp, #48]
    fc94:	ldr	x1, [sp, #48]
    fc98:	ldr	x0, [sp, #16]
    fc9c:	add	x0, x1, x0
    fca0:	str	x0, [sp, #40]
    fca4:	ldr	x1, [sp, #40]
    fca8:	ldr	x0, [sp, #48]
    fcac:	cmp	x1, x0
    fcb0:	b.cc	fcd4 <_argp_fmtstream_ensure@@Base+0x1ac>  // b.lo, b.ul, b.last
    fcb4:	ldr	x0, [sp, #24]
    fcb8:	ldr	x0, [x0, #48]
    fcbc:	ldr	x1, [sp, #40]
    fcc0:	bl	ae00 <realloc@plt>
    fcc4:	str	x0, [sp, #32]
    fcc8:	ldr	x0, [sp, #32]
    fccc:	cmp	x0, #0x0
    fcd0:	b.ne	fcec <_argp_fmtstream_ensure@@Base+0x1c4>  // b.any
    fcd4:	bl	b640 <__errno_location@plt>
    fcd8:	mov	x1, x0
    fcdc:	mov	w0, #0xc                   	// #12
    fce0:	str	w0, [x1]
    fce4:	mov	w0, #0x0                   	// #0
    fce8:	b	fd20 <_argp_fmtstream_ensure@@Base+0x1f8>
    fcec:	ldr	x0, [sp, #24]
    fcf0:	ldr	x1, [sp, #32]
    fcf4:	str	x1, [x0, #48]
    fcf8:	ldr	x1, [sp, #32]
    fcfc:	ldr	x0, [sp, #40]
    fd00:	add	x1, x1, x0
    fd04:	ldr	x0, [sp, #24]
    fd08:	str	x1, [x0, #64]
    fd0c:	ldr	x0, [sp, #24]
    fd10:	ldr	x1, [x0, #48]
    fd14:	ldr	x0, [sp, #24]
    fd18:	str	x1, [x0, #56]
    fd1c:	mov	w0, #0x1                   	// #1
    fd20:	ldp	x29, x30, [sp], #64
    fd24:	ret

000000000000fd28 <argp_fmtstream_printf@@Base>:
    fd28:	stp	x29, x30, [sp, #-304]!
    fd2c:	mov	x29, sp
    fd30:	str	x0, [sp, #56]
    fd34:	str	x1, [sp, #48]
    fd38:	str	x2, [sp, #256]
    fd3c:	str	x3, [sp, #264]
    fd40:	str	x4, [sp, #272]
    fd44:	str	x5, [sp, #280]
    fd48:	str	x6, [sp, #288]
    fd4c:	str	x7, [sp, #296]
    fd50:	str	q0, [sp, #128]
    fd54:	str	q1, [sp, #144]
    fd58:	str	q2, [sp, #160]
    fd5c:	str	q3, [sp, #176]
    fd60:	str	q4, [sp, #192]
    fd64:	str	q5, [sp, #208]
    fd68:	str	q6, [sp, #224]
    fd6c:	str	q7, [sp, #240]
    fd70:	mov	x0, #0x96                  	// #150
    fd74:	str	x0, [sp, #120]
    fd78:	ldr	x1, [sp, #120]
    fd7c:	ldr	x0, [sp, #56]
    fd80:	bl	b4c0 <_argp_fmtstream_ensure@plt>
    fd84:	cmp	w0, #0x0
    fd88:	b.ne	fd94 <argp_fmtstream_printf@@Base+0x6c>  // b.any
    fd8c:	mov	x0, #0xffffffffffffffff    	// #-1
    fd90:	b	fe5c <argp_fmtstream_printf@@Base+0x134>
    fd94:	add	x0, sp, #0x130
    fd98:	str	x0, [sp, #72]
    fd9c:	add	x0, sp, #0x130
    fda0:	str	x0, [sp, #80]
    fda4:	add	x0, sp, #0x100
    fda8:	str	x0, [sp, #88]
    fdac:	mov	w0, #0xffffffd0            	// #-48
    fdb0:	str	w0, [sp, #96]
    fdb4:	mov	w0, #0xffffff80            	// #-128
    fdb8:	str	w0, [sp, #100]
    fdbc:	ldr	x0, [sp, #56]
    fdc0:	ldr	x1, [x0, #64]
    fdc4:	ldr	x0, [sp, #56]
    fdc8:	ldr	x0, [x0, #56]
    fdcc:	sub	x0, x1, x0
    fdd0:	str	x0, [sp, #112]
    fdd4:	ldr	x0, [sp, #56]
    fdd8:	ldr	x4, [x0, #56]
    fddc:	add	x2, sp, #0x10
    fde0:	add	x3, sp, #0x48
    fde4:	ldp	x0, x1, [x3]
    fde8:	stp	x0, x1, [x2]
    fdec:	ldp	x0, x1, [x3, #16]
    fdf0:	stp	x0, x1, [x2, #16]
    fdf4:	add	x0, sp, #0x10
    fdf8:	mov	x3, x0
    fdfc:	ldr	x2, [sp, #48]
    fe00:	ldr	x1, [sp, #112]
    fe04:	mov	x0, x4
    fe08:	bl	b510 <vsnprintf@plt>
    fe0c:	str	w0, [sp, #108]
    fe10:	ldrsw	x0, [sp, #108]
    fe14:	ldr	x1, [sp, #112]
    fe18:	cmp	x1, x0
    fe1c:	b.hi	fe30 <argp_fmtstream_printf@@Base+0x108>  // b.pmore
    fe20:	ldr	w0, [sp, #108]
    fe24:	add	w0, w0, #0x1
    fe28:	sxtw	x0, w0
    fe2c:	str	x0, [sp, #120]
    fe30:	ldrsw	x0, [sp, #108]
    fe34:	ldr	x1, [sp, #112]
    fe38:	cmp	x1, x0
    fe3c:	b.ls	fd78 <argp_fmtstream_printf@@Base+0x50>  // b.plast
    fe40:	ldr	x0, [sp, #56]
    fe44:	ldr	x1, [x0, #56]
    fe48:	ldrsw	x0, [sp, #108]
    fe4c:	add	x1, x1, x0
    fe50:	ldr	x0, [sp, #56]
    fe54:	str	x1, [x0, #56]
    fe58:	ldrsw	x0, [sp, #108]
    fe5c:	ldp	x29, x30, [sp], #304
    fe60:	ret

000000000000fe64 <argp_fmtstream_write@@Base>:
    fe64:	stp	x29, x30, [sp, #-48]!
    fe68:	mov	x29, sp
    fe6c:	str	x0, [sp, #40]
    fe70:	str	x1, [sp, #32]
    fe74:	str	x2, [sp, #24]
    fe78:	ldr	x0, [sp, #40]
    fe7c:	ldr	x1, [x0, #56]
    fe80:	ldr	x0, [sp, #24]
    fe84:	add	x1, x1, x0
    fe88:	ldr	x0, [sp, #40]
    fe8c:	ldr	x0, [x0, #64]
    fe90:	cmp	x1, x0
    fe94:	b.ls	feac <argp_fmtstream_write@@Base+0x48>  // b.plast
    fe98:	ldr	x1, [sp, #24]
    fe9c:	ldr	x0, [sp, #40]
    fea0:	bl	b4c0 <_argp_fmtstream_ensure@plt>
    fea4:	cmp	w0, #0x0
    fea8:	b.eq	fee0 <argp_fmtstream_write@@Base+0x7c>  // b.none
    feac:	ldr	x0, [sp, #40]
    feb0:	ldr	x0, [x0, #56]
    feb4:	ldr	x2, [sp, #24]
    feb8:	ldr	x1, [sp, #32]
    febc:	bl	a790 <memcpy@plt>
    fec0:	ldr	x0, [sp, #40]
    fec4:	ldr	x1, [x0, #56]
    fec8:	ldr	x0, [sp, #24]
    fecc:	add	x1, x1, x0
    fed0:	ldr	x0, [sp, #40]
    fed4:	str	x1, [x0, #56]
    fed8:	ldr	x0, [sp, #24]
    fedc:	b	fee4 <argp_fmtstream_write@@Base+0x80>
    fee0:	mov	x0, #0x0                   	// #0
    fee4:	ldp	x29, x30, [sp], #48
    fee8:	ret

000000000000feec <argp_fmtstream_puts@@Base>:
    feec:	stp	x29, x30, [sp, #-48]!
    fef0:	mov	x29, sp
    fef4:	str	x0, [sp, #24]
    fef8:	str	x1, [sp, #16]
    fefc:	ldr	x0, [sp, #16]
    ff00:	bl	a820 <strlen@plt>
    ff04:	str	x0, [sp, #40]
    ff08:	ldr	x0, [sp, #40]
    ff0c:	cmp	x0, #0x0
    ff10:	b.eq	ff48 <argp_fmtstream_puts@@Base+0x5c>  // b.none
    ff14:	ldr	x2, [sp, #40]
    ff18:	ldr	x1, [sp, #16]
    ff1c:	ldr	x0, [sp, #24]
    ff20:	bl	fe64 <argp_fmtstream_write@@Base>
    ff24:	str	x0, [sp, #32]
    ff28:	ldr	x1, [sp, #32]
    ff2c:	ldr	x0, [sp, #40]
    ff30:	cmp	x1, x0
    ff34:	b.ne	ff40 <argp_fmtstream_puts@@Base+0x54>  // b.any
    ff38:	mov	w0, #0x0                   	// #0
    ff3c:	b	ff4c <argp_fmtstream_puts@@Base+0x60>
    ff40:	mov	w0, #0xffffffff            	// #-1
    ff44:	b	ff4c <argp_fmtstream_puts@@Base+0x60>
    ff48:	mov	w0, #0x0                   	// #0
    ff4c:	ldp	x29, x30, [sp], #48
    ff50:	ret

000000000000ff54 <argp_fmtstream_putc@@Base>:
    ff54:	stp	x29, x30, [sp, #-32]!
    ff58:	mov	x29, sp
    ff5c:	str	x0, [sp, #24]
    ff60:	str	w1, [sp, #20]
    ff64:	ldr	x0, [sp, #24]
    ff68:	ldr	x1, [x0, #56]
    ff6c:	ldr	x0, [sp, #24]
    ff70:	ldr	x0, [x0, #64]
    ff74:	cmp	x1, x0
    ff78:	b.cc	ff90 <argp_fmtstream_putc@@Base+0x3c>  // b.lo, b.ul, b.last
    ff7c:	mov	x1, #0x1                   	// #1
    ff80:	ldr	x0, [sp, #24]
    ff84:	bl	b4c0 <_argp_fmtstream_ensure@plt>
    ff88:	cmp	w0, #0x0
    ff8c:	b.eq	ffb8 <argp_fmtstream_putc@@Base+0x64>  // b.none
    ff90:	ldr	x0, [sp, #24]
    ff94:	ldr	x0, [x0, #56]
    ff98:	add	x2, x0, #0x1
    ff9c:	ldr	x1, [sp, #24]
    ffa0:	str	x2, [x1, #56]
    ffa4:	ldr	w1, [sp, #20]
    ffa8:	and	w1, w1, #0xff
    ffac:	strb	w1, [x0]
    ffb0:	ldrb	w0, [x0]
    ffb4:	b	ffbc <argp_fmtstream_putc@@Base+0x68>
    ffb8:	mov	w0, #0xffffffff            	// #-1
    ffbc:	ldp	x29, x30, [sp], #32
    ffc0:	ret

000000000000ffc4 <argp_fmtstream_set_lmargin@@Base>:
    ffc4:	stp	x29, x30, [sp, #-48]!
    ffc8:	mov	x29, sp
    ffcc:	str	x0, [sp, #24]
    ffd0:	str	x1, [sp, #16]
    ffd4:	ldr	x0, [sp, #24]
    ffd8:	ldr	x1, [x0, #56]
    ffdc:	ldr	x0, [sp, #24]
    ffe0:	ldr	x0, [x0, #48]
    ffe4:	sub	x0, x1, x0
    ffe8:	mov	x1, x0
    ffec:	ldr	x0, [sp, #24]
    fff0:	ldr	x0, [x0, #32]
    fff4:	cmp	x1, x0
    fff8:	b.ls	10004 <argp_fmtstream_set_lmargin@@Base+0x40>  // b.plast
    fffc:	ldr	x0, [sp, #24]
   10000:	bl	aa40 <_argp_fmtstream_update@plt>
   10004:	ldr	x0, [sp, #24]
   10008:	ldr	x0, [x0, #8]
   1000c:	str	x0, [sp, #40]
   10010:	ldr	x0, [sp, #24]
   10014:	ldr	x1, [sp, #16]
   10018:	str	x1, [x0, #8]
   1001c:	ldr	x0, [sp, #40]
   10020:	ldp	x29, x30, [sp], #48
   10024:	ret

0000000000010028 <argp_fmtstream_set_rmargin@@Base>:
   10028:	stp	x29, x30, [sp, #-48]!
   1002c:	mov	x29, sp
   10030:	str	x0, [sp, #24]
   10034:	str	x1, [sp, #16]
   10038:	ldr	x0, [sp, #24]
   1003c:	ldr	x1, [x0, #56]
   10040:	ldr	x0, [sp, #24]
   10044:	ldr	x0, [x0, #48]
   10048:	sub	x0, x1, x0
   1004c:	mov	x1, x0
   10050:	ldr	x0, [sp, #24]
   10054:	ldr	x0, [x0, #32]
   10058:	cmp	x1, x0
   1005c:	b.ls	10068 <argp_fmtstream_set_rmargin@@Base+0x40>  // b.plast
   10060:	ldr	x0, [sp, #24]
   10064:	bl	aa40 <_argp_fmtstream_update@plt>
   10068:	ldr	x0, [sp, #24]
   1006c:	ldr	x0, [x0, #16]
   10070:	str	x0, [sp, #40]
   10074:	ldr	x0, [sp, #24]
   10078:	ldr	x1, [sp, #16]
   1007c:	str	x1, [x0, #16]
   10080:	ldr	x0, [sp, #40]
   10084:	ldp	x29, x30, [sp], #48
   10088:	ret

000000000001008c <argp_fmtstream_set_wmargin@@Base>:
   1008c:	stp	x29, x30, [sp, #-48]!
   10090:	mov	x29, sp
   10094:	str	x0, [sp, #24]
   10098:	str	x1, [sp, #16]
   1009c:	ldr	x0, [sp, #24]
   100a0:	ldr	x1, [x0, #56]
   100a4:	ldr	x0, [sp, #24]
   100a8:	ldr	x0, [x0, #48]
   100ac:	sub	x0, x1, x0
   100b0:	mov	x1, x0
   100b4:	ldr	x0, [sp, #24]
   100b8:	ldr	x0, [x0, #32]
   100bc:	cmp	x1, x0
   100c0:	b.ls	100cc <argp_fmtstream_set_wmargin@@Base+0x40>  // b.plast
   100c4:	ldr	x0, [sp, #24]
   100c8:	bl	aa40 <_argp_fmtstream_update@plt>
   100cc:	ldr	x0, [sp, #24]
   100d0:	ldr	x0, [x0, #24]
   100d4:	str	x0, [sp, #40]
   100d8:	ldr	x1, [sp, #16]
   100dc:	ldr	x0, [sp, #24]
   100e0:	str	x1, [x0, #24]
   100e4:	ldr	x0, [sp, #40]
   100e8:	ldp	x29, x30, [sp], #48
   100ec:	ret

00000000000100f0 <argp_fmtstream_point@@Base>:
   100f0:	stp	x29, x30, [sp, #-32]!
   100f4:	mov	x29, sp
   100f8:	str	x0, [sp, #24]
   100fc:	ldr	x0, [sp, #24]
   10100:	ldr	x1, [x0, #56]
   10104:	ldr	x0, [sp, #24]
   10108:	ldr	x0, [x0, #48]
   1010c:	sub	x0, x1, x0
   10110:	mov	x1, x0
   10114:	ldr	x0, [sp, #24]
   10118:	ldr	x0, [x0, #32]
   1011c:	cmp	x1, x0
   10120:	b.ls	1012c <argp_fmtstream_point@@Base+0x3c>  // b.plast
   10124:	ldr	x0, [sp, #24]
   10128:	bl	aa40 <_argp_fmtstream_update@plt>
   1012c:	ldr	x0, [sp, #24]
   10130:	ldr	x0, [x0, #40]
   10134:	mov	x1, #0x0                   	// #0
   10138:	cmp	x0, #0x0
   1013c:	csel	x0, x0, x1, ge  // ge = tcont
   10140:	ldp	x29, x30, [sp], #32
   10144:	ret
   10148:	stp	x29, x30, [sp, #-48]!
   1014c:	mov	x29, sp
   10150:	str	x0, [sp, #24]
   10154:	str	x1, [sp, #16]
   10158:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1015c:	add	x0, x0, #0x130
   10160:	str	x0, [sp, #40]
   10164:	b	10200 <argp_fmtstream_point@@Base+0x110>
   10168:	ldr	x0, [sp, #40]
   1016c:	ldrb	w0, [x0, #14]
   10170:	cmp	w0, #0x0
   10174:	b.ne	101f0 <argp_fmtstream_point@@Base+0x100>  // b.any
   10178:	ldr	x0, [sp, #40]
   1017c:	ldrb	w0, [x0, #15]
   10180:	cmp	w0, #0x20
   10184:	b.eq	101f0 <argp_fmtstream_point@@Base+0x100>  // b.none
   10188:	ldr	x0, [sp, #40]
   1018c:	ldrb	w0, [x0, #15]
   10190:	and	x0, x0, #0xff
   10194:	ldr	x1, [sp, #16]
   10198:	add	x0, x1, x0
   1019c:	ldr	w1, [x0]
   101a0:	ldr	x0, [sp, #16]
   101a4:	ldr	w0, [x0, #32]
   101a8:	cmp	w1, w0
   101ac:	b.lt	101f4 <argp_fmtstream_point@@Base+0x104>  // b.tstop
   101b0:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   101b4:	add	x1, x0, #0x1c0
   101b8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   101bc:	add	x0, x0, #0x1f8
   101c0:	bl	b120 <dgettext@plt>
   101c4:	mov	x1, x0
   101c8:	ldr	x0, [sp, #40]
   101cc:	mov	x5, x0
   101d0:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   101d4:	add	x4, x0, #0x208
   101d8:	mov	x3, x1
   101dc:	mov	w2, #0x0                   	// #0
   101e0:	mov	w1, #0x0                   	// #0
   101e4:	ldr	x0, [sp, #24]
   101e8:	bl	abe0 <argp_failure@plt>
   101ec:	b	10248 <argp_fmtstream_point@@Base+0x158>
   101f0:	nop
   101f4:	ldr	x0, [sp, #40]
   101f8:	add	x0, x0, #0x10
   101fc:	str	x0, [sp, #40]
   10200:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10204:	add	x0, x0, #0x1c0
   10208:	ldr	x1, [sp, #40]
   1020c:	cmp	x1, x0
   10210:	b.cc	10168 <argp_fmtstream_point@@Base+0x78>  // b.lo, b.ul, b.last
   10214:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   10218:	add	x0, x0, #0x358
   1021c:	ldr	x1, [sp, #16]
   10220:	ldp	x2, x3, [x1]
   10224:	stp	x2, x3, [x0]
   10228:	ldp	x2, x3, [x1, #16]
   1022c:	stp	x2, x3, [x0, #16]
   10230:	ldr	x1, [x1, #32]
   10234:	str	x1, [x0, #32]
   10238:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1023c:	add	x0, x0, #0x358
   10240:	mov	w1, #0x1                   	// #1
   10244:	str	w1, [x0, #36]
   10248:	ldp	x29, x30, [sp], #48
   1024c:	ret
   10250:	stp	x29, x30, [sp, #-112]!
   10254:	mov	x29, sp
   10258:	str	x0, [sp, #24]
   1025c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10260:	add	x0, x0, #0x210
   10264:	bl	b670 <getenv@plt>
   10268:	str	x0, [sp, #104]
   1026c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   10270:	add	x1, x0, #0x358
   10274:	add	x0, sp, #0x20
   10278:	ldp	x2, x3, [x1]
   1027c:	stp	x2, x3, [x0]
   10280:	ldp	x2, x3, [x1, #16]
   10284:	stp	x2, x3, [x0, #16]
   10288:	ldr	x1, [x1, #32]
   1028c:	str	x1, [x0, #32]
   10290:	ldr	x0, [sp, #104]
   10294:	cmp	x0, #0x0
   10298:	b.eq	1074c <argp_fmtstream_point@@Base+0x65c>  // b.none
   1029c:	b	1072c <argp_fmtstream_point@@Base+0x63c>
   102a0:	ldr	x0, [sp, #104]
   102a4:	add	x0, x0, #0x1
   102a8:	str	x0, [sp, #104]
   102ac:	bl	b090 <__ctype_b_loc@plt>
   102b0:	ldr	x1, [x0]
   102b4:	ldr	x0, [sp, #104]
   102b8:	ldrb	w0, [x0]
   102bc:	and	x0, x0, #0xff
   102c0:	lsl	x0, x0, #1
   102c4:	add	x0, x1, x0
   102c8:	ldrh	w0, [x0]
   102cc:	and	w0, w0, #0x2000
   102d0:	cmp	w0, #0x0
   102d4:	b.ne	102a0 <argp_fmtstream_point@@Base+0x1b0>  // b.any
   102d8:	bl	b090 <__ctype_b_loc@plt>
   102dc:	ldr	x1, [x0]
   102e0:	ldr	x0, [sp, #104]
   102e4:	ldrb	w0, [x0]
   102e8:	and	x0, x0, #0xff
   102ec:	lsl	x0, x0, #1
   102f0:	add	x0, x1, x0
   102f4:	ldrh	w0, [x0]
   102f8:	and	w0, w0, #0x400
   102fc:	cmp	w0, #0x0
   10300:	b.eq	106d8 <argp_fmtstream_point@@Base+0x5e8>  // b.none
   10304:	str	wzr, [sp, #84]
   10308:	str	wzr, [sp, #80]
   1030c:	ldr	x0, [sp, #104]
   10310:	str	x0, [sp, #72]
   10314:	b	10324 <argp_fmtstream_point@@Base+0x234>
   10318:	ldr	x0, [sp, #72]
   1031c:	add	x0, x0, #0x1
   10320:	str	x0, [sp, #72]
   10324:	bl	b090 <__ctype_b_loc@plt>
   10328:	ldr	x1, [x0]
   1032c:	ldr	x0, [sp, #72]
   10330:	ldrb	w0, [x0]
   10334:	and	x0, x0, #0xff
   10338:	lsl	x0, x0, #1
   1033c:	add	x0, x1, x0
   10340:	ldrh	w0, [x0]
   10344:	and	w0, w0, #0x8
   10348:	cmp	w0, #0x0
   1034c:	b.ne	10318 <argp_fmtstream_point@@Base+0x228>  // b.any
   10350:	ldr	x0, [sp, #72]
   10354:	ldrb	w0, [x0]
   10358:	cmp	w0, #0x2d
   1035c:	b.eq	10318 <argp_fmtstream_point@@Base+0x228>  // b.none
   10360:	ldr	x0, [sp, #72]
   10364:	ldrb	w0, [x0]
   10368:	cmp	w0, #0x5f
   1036c:	b.eq	10318 <argp_fmtstream_point@@Base+0x228>  // b.none
   10370:	ldr	x1, [sp, #72]
   10374:	ldr	x0, [sp, #104]
   10378:	sub	x0, x1, x0
   1037c:	str	x0, [sp, #96]
   10380:	b	10390 <argp_fmtstream_point@@Base+0x2a0>
   10384:	ldr	x0, [sp, #72]
   10388:	add	x0, x0, #0x1
   1038c:	str	x0, [sp, #72]
   10390:	bl	b090 <__ctype_b_loc@plt>
   10394:	ldr	x1, [x0]
   10398:	ldr	x0, [sp, #72]
   1039c:	ldrb	w0, [x0]
   103a0:	and	x0, x0, #0xff
   103a4:	lsl	x0, x0, #1
   103a8:	add	x0, x1, x0
   103ac:	ldrh	w0, [x0]
   103b0:	and	w0, w0, #0x2000
   103b4:	cmp	w0, #0x0
   103b8:	b.ne	10384 <argp_fmtstream_point@@Base+0x294>  // b.any
   103bc:	ldr	x0, [sp, #72]
   103c0:	ldrb	w0, [x0]
   103c4:	cmp	w0, #0x0
   103c8:	b.eq	103dc <argp_fmtstream_point@@Base+0x2ec>  // b.none
   103cc:	ldr	x0, [sp, #72]
   103d0:	ldrb	w0, [x0]
   103d4:	cmp	w0, #0x2c
   103d8:	b.ne	103e8 <argp_fmtstream_point@@Base+0x2f8>  // b.any
   103dc:	mov	w0, #0x1                   	// #1
   103e0:	str	w0, [sp, #84]
   103e4:	b	10440 <argp_fmtstream_point@@Base+0x350>
   103e8:	ldr	x0, [sp, #72]
   103ec:	ldrb	w0, [x0]
   103f0:	cmp	w0, #0x3d
   103f4:	b.ne	10440 <argp_fmtstream_point@@Base+0x350>  // b.any
   103f8:	ldr	x0, [sp, #72]
   103fc:	add	x0, x0, #0x1
   10400:	str	x0, [sp, #72]
   10404:	b	10414 <argp_fmtstream_point@@Base+0x324>
   10408:	ldr	x0, [sp, #72]
   1040c:	add	x0, x0, #0x1
   10410:	str	x0, [sp, #72]
   10414:	bl	b090 <__ctype_b_loc@plt>
   10418:	ldr	x1, [x0]
   1041c:	ldr	x0, [sp, #72]
   10420:	ldrb	w0, [x0]
   10424:	and	x0, x0, #0xff
   10428:	lsl	x0, x0, #1
   1042c:	add	x0, x1, x0
   10430:	ldrh	w0, [x0]
   10434:	and	w0, w0, #0x2000
   10438:	cmp	w0, #0x0
   1043c:	b.ne	10408 <argp_fmtstream_point@@Base+0x318>  // b.any
   10440:	ldr	w0, [sp, #84]
   10444:	cmp	w0, #0x0
   10448:	b.eq	104b0 <argp_fmtstream_point@@Base+0x3c0>  // b.none
   1044c:	ldr	x0, [sp, #104]
   10450:	ldrb	w0, [x0]
   10454:	cmp	w0, #0x6e
   10458:	b.ne	104a4 <argp_fmtstream_point@@Base+0x3b4>  // b.any
   1045c:	ldr	x0, [sp, #104]
   10460:	add	x0, x0, #0x1
   10464:	ldrb	w0, [x0]
   10468:	cmp	w0, #0x6f
   1046c:	b.ne	104a4 <argp_fmtstream_point@@Base+0x3b4>  // b.any
   10470:	ldr	x0, [sp, #104]
   10474:	add	x0, x0, #0x2
   10478:	ldrb	w0, [x0]
   1047c:	cmp	w0, #0x2d
   10480:	b.ne	104a4 <argp_fmtstream_point@@Base+0x3b4>  // b.any
   10484:	str	wzr, [sp, #80]
   10488:	ldr	x0, [sp, #104]
   1048c:	add	x0, x0, #0x3
   10490:	str	x0, [sp, #104]
   10494:	ldr	x0, [sp, #96]
   10498:	sub	x0, x0, #0x3
   1049c:	str	x0, [sp, #96]
   104a0:	b	10560 <argp_fmtstream_point@@Base+0x470>
   104a4:	mov	w0, #0x1                   	// #1
   104a8:	str	w0, [sp, #80]
   104ac:	b	10560 <argp_fmtstream_point@@Base+0x470>
   104b0:	bl	b090 <__ctype_b_loc@plt>
   104b4:	ldr	x1, [x0]
   104b8:	ldr	x0, [sp, #72]
   104bc:	ldrb	w0, [x0]
   104c0:	and	x0, x0, #0xff
   104c4:	lsl	x0, x0, #1
   104c8:	add	x0, x1, x0
   104cc:	ldrh	w0, [x0]
   104d0:	and	w0, w0, #0x800
   104d4:	cmp	w0, #0x0
   104d8:	b.eq	10560 <argp_fmtstream_point@@Base+0x470>  // b.none
   104dc:	ldr	x0, [sp, #72]
   104e0:	bl	aae0 <atoi@plt>
   104e4:	str	w0, [sp, #80]
   104e8:	b	104f8 <argp_fmtstream_point@@Base+0x408>
   104ec:	ldr	x0, [sp, #72]
   104f0:	add	x0, x0, #0x1
   104f4:	str	x0, [sp, #72]
   104f8:	bl	b090 <__ctype_b_loc@plt>
   104fc:	ldr	x1, [x0]
   10500:	ldr	x0, [sp, #72]
   10504:	ldrb	w0, [x0]
   10508:	and	x0, x0, #0xff
   1050c:	lsl	x0, x0, #1
   10510:	add	x0, x1, x0
   10514:	ldrh	w0, [x0]
   10518:	and	w0, w0, #0x800
   1051c:	cmp	w0, #0x0
   10520:	b.ne	104ec <argp_fmtstream_point@@Base+0x3fc>  // b.any
   10524:	b	10534 <argp_fmtstream_point@@Base+0x444>
   10528:	ldr	x0, [sp, #72]
   1052c:	add	x0, x0, #0x1
   10530:	str	x0, [sp, #72]
   10534:	bl	b090 <__ctype_b_loc@plt>
   10538:	ldr	x1, [x0]
   1053c:	ldr	x0, [sp, #72]
   10540:	ldrb	w0, [x0]
   10544:	and	x0, x0, #0xff
   10548:	lsl	x0, x0, #1
   1054c:	add	x0, x1, x0
   10550:	ldrh	w0, [x0]
   10554:	and	w0, w0, #0x2000
   10558:	cmp	w0, #0x0
   1055c:	b.ne	10528 <argp_fmtstream_point@@Base+0x438>  // b.any
   10560:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10564:	add	x0, x0, #0x130
   10568:	str	x0, [sp, #88]
   1056c:	b	10640 <argp_fmtstream_point@@Base+0x550>
   10570:	ldr	x0, [sp, #88]
   10574:	bl	a820 <strlen@plt>
   10578:	mov	x1, x0
   1057c:	ldr	x0, [sp, #96]
   10580:	cmp	x0, x1
   10584:	b.ne	10634 <argp_fmtstream_point@@Base+0x544>  // b.any
   10588:	ldr	x0, [sp, #88]
   1058c:	ldr	x2, [sp, #96]
   10590:	mov	x1, x0
   10594:	ldr	x0, [sp, #104]
   10598:	bl	ac60 <strncmp@plt>
   1059c:	cmp	w0, #0x0
   105a0:	b.ne	10634 <argp_fmtstream_point@@Base+0x544>  // b.any
   105a4:	ldr	w0, [sp, #84]
   105a8:	cmp	w0, #0x0
   105ac:	b.eq	10614 <argp_fmtstream_point@@Base+0x524>  // b.none
   105b0:	ldr	x0, [sp, #88]
   105b4:	ldrb	w0, [x0, #14]
   105b8:	eor	w0, w0, #0x1
   105bc:	and	w0, w0, #0xff
   105c0:	cmp	w0, #0x0
   105c4:	b.eq	10614 <argp_fmtstream_point@@Base+0x524>  // b.none
   105c8:	ldr	x0, [sp, #24]
   105cc:	cmp	x0, #0x0
   105d0:	b.eq	105e0 <argp_fmtstream_point@@Base+0x4f0>  // b.none
   105d4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   105d8:	add	x0, x0, #0x1f8
   105dc:	b	105e4 <argp_fmtstream_point@@Base+0x4f4>
   105e0:	mov	x0, #0x0                   	// #0
   105e4:	adrp	x1, 43000 <vasnprintf@@Base+0x2e04>
   105e8:	add	x1, x1, #0x220
   105ec:	bl	b120 <dgettext@plt>
   105f0:	ldr	x1, [sp, #96]
   105f4:	ldr	x5, [sp, #104]
   105f8:	mov	w4, w1
   105fc:	mov	x3, x0
   10600:	mov	w2, #0x0                   	// #0
   10604:	mov	w1, #0x0                   	// #0
   10608:	ldr	x0, [sp, #24]
   1060c:	bl	abe0 <argp_failure@plt>
   10610:	b	10654 <argp_fmtstream_point@@Base+0x564>
   10614:	ldr	x0, [sp, #88]
   10618:	ldrb	w0, [x0, #15]
   1061c:	and	x0, x0, #0xff
   10620:	add	x1, sp, #0x20
   10624:	add	x0, x1, x0
   10628:	ldr	w1, [sp, #80]
   1062c:	str	w1, [x0]
   10630:	b	10654 <argp_fmtstream_point@@Base+0x564>
   10634:	ldr	x0, [sp, #88]
   10638:	add	x0, x0, #0x10
   1063c:	str	x0, [sp, #88]
   10640:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10644:	add	x0, x0, #0x1c0
   10648:	ldr	x1, [sp, #88]
   1064c:	cmp	x1, x0
   10650:	b.cc	10570 <argp_fmtstream_point@@Base+0x480>  // b.lo, b.ul, b.last
   10654:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10658:	add	x0, x0, #0x1c0
   1065c:	ldr	x1, [sp, #88]
   10660:	cmp	x1, x0
   10664:	b.ne	106b0 <argp_fmtstream_point@@Base+0x5c0>  // b.any
   10668:	ldr	x0, [sp, #24]
   1066c:	cmp	x0, #0x0
   10670:	b.eq	10680 <argp_fmtstream_point@@Base+0x590>  // b.none
   10674:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10678:	add	x0, x0, #0x1f8
   1067c:	b	10684 <argp_fmtstream_point@@Base+0x594>
   10680:	mov	x0, #0x0                   	// #0
   10684:	adrp	x1, 43000 <vasnprintf@@Base+0x2e04>
   10688:	add	x1, x1, #0x250
   1068c:	bl	b120 <dgettext@plt>
   10690:	ldr	x1, [sp, #96]
   10694:	ldr	x5, [sp, #104]
   10698:	mov	w4, w1
   1069c:	mov	x3, x0
   106a0:	mov	w2, #0x0                   	// #0
   106a4:	mov	w1, #0x0                   	// #0
   106a8:	ldr	x0, [sp, #24]
   106ac:	bl	abe0 <argp_failure@plt>
   106b0:	ldr	x0, [sp, #72]
   106b4:	str	x0, [sp, #104]
   106b8:	ldr	x0, [sp, #104]
   106bc:	ldrb	w0, [x0]
   106c0:	cmp	w0, #0x2c
   106c4:	b.ne	1072c <argp_fmtstream_point@@Base+0x63c>  // b.any
   106c8:	ldr	x0, [sp, #104]
   106cc:	add	x0, x0, #0x1
   106d0:	str	x0, [sp, #104]
   106d4:	b	1072c <argp_fmtstream_point@@Base+0x63c>
   106d8:	ldr	x0, [sp, #104]
   106dc:	ldrb	w0, [x0]
   106e0:	cmp	w0, #0x0
   106e4:	b.eq	1072c <argp_fmtstream_point@@Base+0x63c>  // b.none
   106e8:	ldr	x0, [sp, #24]
   106ec:	cmp	x0, #0x0
   106f0:	b.eq	10700 <argp_fmtstream_point@@Base+0x610>  // b.none
   106f4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   106f8:	add	x0, x0, #0x1f8
   106fc:	b	10704 <argp_fmtstream_point@@Base+0x614>
   10700:	mov	x0, #0x0                   	// #0
   10704:	adrp	x1, 43000 <vasnprintf@@Base+0x2e04>
   10708:	add	x1, x1, #0x278
   1070c:	bl	b120 <dgettext@plt>
   10710:	ldr	x4, [sp, #104]
   10714:	mov	x3, x0
   10718:	mov	w2, #0x0                   	// #0
   1071c:	mov	w1, #0x0                   	// #0
   10720:	ldr	x0, [sp, #24]
   10724:	bl	abe0 <argp_failure@plt>
   10728:	b	1073c <argp_fmtstream_point@@Base+0x64c>
   1072c:	ldr	x0, [sp, #104]
   10730:	ldrb	w0, [x0]
   10734:	cmp	w0, #0x0
   10738:	b.ne	102ac <argp_fmtstream_point@@Base+0x1bc>  // b.any
   1073c:	add	x0, sp, #0x20
   10740:	mov	x1, x0
   10744:	ldr	x0, [sp, #24]
   10748:	bl	10148 <argp_fmtstream_point@@Base+0x58>
   1074c:	nop
   10750:	ldp	x29, x30, [sp], #112
   10754:	ret
   10758:	sub	sp, sp, #0x20
   1075c:	strb	w0, [sp, #31]
   10760:	str	x1, [sp, #16]
   10764:	str	x2, [sp, #8]
   10768:	b	10794 <argp_fmtstream_point@@Base+0x6a4>
   1076c:	ldr	x0, [sp, #16]
   10770:	ldrb	w0, [x0]
   10774:	ldrb	w1, [sp, #31]
   10778:	cmp	w1, w0
   1077c:	b.ne	10788 <argp_fmtstream_point@@Base+0x698>  // b.any
   10780:	mov	w0, #0x1                   	// #1
   10784:	b	107a8 <argp_fmtstream_point@@Base+0x6b8>
   10788:	ldr	x0, [sp, #16]
   1078c:	add	x0, x0, #0x1
   10790:	str	x0, [sp, #16]
   10794:	ldr	x1, [sp, #16]
   10798:	ldr	x0, [sp, #8]
   1079c:	cmp	x1, x0
   107a0:	b.cc	1076c <argp_fmtstream_point@@Base+0x67c>  // b.lo, b.ul, b.last
   107a4:	mov	w0, #0x0                   	// #0
   107a8:	add	sp, sp, #0x20
   107ac:	ret
   107b0:	stp	x29, x30, [sp, #-80]!
   107b4:	mov	x29, sp
   107b8:	str	x0, [sp, #24]
   107bc:	str	x1, [sp, #16]
   107c0:	ldr	x0, [sp, #24]
   107c4:	ldr	x0, [x0]
   107c8:	str	x0, [sp, #40]
   107cc:	str	wzr, [sp, #52]
   107d0:	mov	x0, #0x20                  	// #32
   107d4:	bl	ab40 <malloc@plt>
   107d8:	str	x0, [sp, #32]
   107dc:	ldr	x0, [sp, #32]
   107e0:	cmp	x0, #0x0
   107e4:	b.ne	10808 <argp_fmtstream_point@@Base+0x718>  // b.any
   107e8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   107ec:	add	x3, x0, #0x4a8
   107f0:	mov	w2, #0x1c3                 	// #451
   107f4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   107f8:	add	x1, x0, #0x298
   107fc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10800:	add	x0, x0, #0x2a8
   10804:	bl	b630 <__assert_fail@plt>
   10808:	ldr	x0, [sp, #32]
   1080c:	str	wzr, [x0, #8]
   10810:	ldr	x0, [sp, #32]
   10814:	str	xzr, [x0, #24]
   10818:	ldr	x0, [sp, #40]
   1081c:	cmp	x0, #0x0
   10820:	b.eq	10ac8 <argp_fmtstream_point@@Base+0x9d8>  // b.none
   10824:	str	wzr, [sp, #48]
   10828:	ldr	x0, [sp, #40]
   1082c:	ldr	w0, [x0, #24]
   10830:	and	w0, w0, #0x4
   10834:	cmp	w0, #0x0
   10838:	b.eq	1085c <argp_fmtstream_point@@Base+0x76c>  // b.none
   1083c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10840:	add	x3, x0, #0x4a8
   10844:	mov	w2, #0x1cd                 	// #461
   10848:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1084c:	add	x1, x0, #0x298
   10850:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10854:	add	x0, x0, #0x2b0
   10858:	bl	b630 <__assert_fail@plt>
   1085c:	ldr	x0, [sp, #40]
   10860:	str	x0, [sp, #64]
   10864:	b	108b8 <argp_fmtstream_point@@Base+0x7c8>
   10868:	ldr	x0, [sp, #64]
   1086c:	ldr	w0, [x0, #24]
   10870:	and	w0, w0, #0x4
   10874:	cmp	w0, #0x0
   10878:	b.ne	10890 <argp_fmtstream_point@@Base+0x7a0>  // b.any
   1087c:	ldr	x0, [sp, #32]
   10880:	ldr	w0, [x0, #8]
   10884:	add	w1, w0, #0x1
   10888:	ldr	x0, [sp, #32]
   1088c:	str	w1, [x0, #8]
   10890:	ldr	x0, [sp, #64]
   10894:	bl	b4e0 <_option_is_short@plt>
   10898:	cmp	w0, #0x0
   1089c:	b.eq	108ac <argp_fmtstream_point@@Base+0x7bc>  // b.none
   108a0:	ldr	w0, [sp, #52]
   108a4:	add	w0, w0, #0x1
   108a8:	str	w0, [sp, #52]
   108ac:	ldr	x0, [sp, #64]
   108b0:	add	x0, x0, #0x30
   108b4:	str	x0, [sp, #64]
   108b8:	ldr	x0, [sp, #64]
   108bc:	bl	af80 <_option_is_end@plt>
   108c0:	cmp	w0, #0x0
   108c4:	b.eq	10868 <argp_fmtstream_point@@Base+0x778>  // b.none
   108c8:	ldr	x0, [sp, #32]
   108cc:	ldr	w0, [x0, #8]
   108d0:	mov	w1, w0
   108d4:	mov	x0, x1
   108d8:	lsl	x0, x0, #3
   108dc:	sub	x0, x0, x1
   108e0:	lsl	x0, x0, #3
   108e4:	bl	ab40 <malloc@plt>
   108e8:	mov	x1, x0
   108ec:	ldr	x0, [sp, #32]
   108f0:	str	x1, [x0]
   108f4:	ldr	w0, [sp, #52]
   108f8:	add	w0, w0, #0x1
   108fc:	mov	w0, w0
   10900:	bl	ab40 <malloc@plt>
   10904:	mov	x1, x0
   10908:	ldr	x0, [sp, #32]
   1090c:	str	x1, [x0, #16]
   10910:	ldr	x0, [sp, #32]
   10914:	ldr	x0, [x0]
   10918:	cmp	x0, #0x0
   1091c:	b.eq	10930 <argp_fmtstream_point@@Base+0x840>  // b.none
   10920:	ldr	x0, [sp, #32]
   10924:	ldr	x0, [x0, #16]
   10928:	cmp	x0, #0x0
   1092c:	b.ne	10950 <argp_fmtstream_point@@Base+0x860>  // b.any
   10930:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10934:	add	x3, x0, #0x4a8
   10938:	mov	w2, #0x1db                 	// #475
   1093c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10940:	add	x1, x0, #0x298
   10944:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   10948:	add	x0, x0, #0x2c0
   1094c:	bl	b630 <__assert_fail@plt>
   10950:	ldr	x0, [sp, #32]
   10954:	ldr	x0, [x0, #16]
   10958:	str	x0, [sp, #72]
   1095c:	ldr	x0, [sp, #40]
   10960:	str	x0, [sp, #64]
   10964:	ldr	x0, [sp, #32]
   10968:	ldr	x0, [x0]
   1096c:	str	x0, [sp, #56]
   10970:	b	10ab0 <argp_fmtstream_point@@Base+0x9c0>
   10974:	ldr	x0, [sp, #56]
   10978:	ldr	x1, [sp, #64]
   1097c:	str	x1, [x0]
   10980:	ldr	x0, [sp, #56]
   10984:	str	wzr, [x0, #8]
   10988:	ldr	x0, [sp, #56]
   1098c:	ldr	x1, [sp, #72]
   10990:	str	x1, [x0, #16]
   10994:	ldr	x0, [sp, #64]
   10998:	ldr	w0, [x0, #40]
   1099c:	cmp	w0, #0x0
   109a0:	b.eq	109b0 <argp_fmtstream_point@@Base+0x8c0>  // b.none
   109a4:	ldr	x0, [sp, #64]
   109a8:	ldr	w0, [x0, #40]
   109ac:	b	109e0 <argp_fmtstream_point@@Base+0x8f0>
   109b0:	ldr	x0, [sp, #64]
   109b4:	ldr	x0, [x0]
   109b8:	cmp	x0, #0x0
   109bc:	b.ne	109dc <argp_fmtstream_point@@Base+0x8ec>  // b.any
   109c0:	ldr	x0, [sp, #64]
   109c4:	ldr	w0, [x0, #8]
   109c8:	cmp	w0, #0x0
   109cc:	b.ne	109dc <argp_fmtstream_point@@Base+0x8ec>  // b.any
   109d0:	ldr	w0, [sp, #48]
   109d4:	add	w0, w0, #0x1
   109d8:	b	109e0 <argp_fmtstream_point@@Base+0x8f0>
   109dc:	ldr	w0, [sp, #48]
   109e0:	str	w0, [sp, #48]
   109e4:	ldr	x0, [sp, #56]
   109e8:	ldr	w1, [sp, #48]
   109ec:	str	w1, [x0, #24]
   109f0:	ldr	x0, [sp, #56]
   109f4:	ldr	x1, [sp, #16]
   109f8:	str	x1, [x0, #32]
   109fc:	ldr	x0, [sp, #56]
   10a00:	ldr	x1, [sp, #24]
   10a04:	str	x1, [x0, #40]
   10a08:	ldr	x0, [sp, #56]
   10a0c:	ldr	w0, [x0, #8]
   10a10:	add	w1, w0, #0x1
   10a14:	ldr	x0, [sp, #56]
   10a18:	str	w1, [x0, #8]
   10a1c:	ldr	x0, [sp, #64]
   10a20:	bl	b4e0 <_option_is_short@plt>
   10a24:	cmp	w0, #0x0
   10a28:	b.eq	10a74 <argp_fmtstream_point@@Base+0x984>  // b.none
   10a2c:	ldr	x0, [sp, #64]
   10a30:	ldr	w0, [x0, #8]
   10a34:	and	w3, w0, #0xff
   10a38:	ldr	x0, [sp, #32]
   10a3c:	ldr	x0, [x0, #16]
   10a40:	ldr	x2, [sp, #72]
   10a44:	mov	x1, x0
   10a48:	mov	w0, w3
   10a4c:	bl	10758 <argp_fmtstream_point@@Base+0x668>
   10a50:	cmp	w0, #0x0
   10a54:	b.ne	10a74 <argp_fmtstream_point@@Base+0x984>  // b.any
   10a58:	ldr	x0, [sp, #64]
   10a5c:	ldr	w2, [x0, #8]
   10a60:	ldr	x0, [sp, #72]
   10a64:	add	x1, x0, #0x1
   10a68:	str	x1, [sp, #72]
   10a6c:	and	w1, w2, #0xff
   10a70:	strb	w1, [x0]
   10a74:	ldr	x0, [sp, #64]
   10a78:	add	x0, x0, #0x30
   10a7c:	str	x0, [sp, #64]
   10a80:	ldr	x0, [sp, #64]
   10a84:	bl	af80 <_option_is_end@plt>
   10a88:	cmp	w0, #0x0
   10a8c:	b.ne	10aa4 <argp_fmtstream_point@@Base+0x9b4>  // b.any
   10a90:	ldr	x0, [sp, #64]
   10a94:	ldr	w0, [x0, #24]
   10a98:	and	w0, w0, #0x4
   10a9c:	cmp	w0, #0x0
   10aa0:	b.ne	10a08 <argp_fmtstream_point@@Base+0x918>  // b.any
   10aa4:	ldr	x0, [sp, #56]
   10aa8:	add	x0, x0, #0x38
   10aac:	str	x0, [sp, #56]
   10ab0:	ldr	x0, [sp, #64]
   10ab4:	bl	af80 <_option_is_end@plt>
   10ab8:	cmp	w0, #0x0
   10abc:	b.eq	10974 <argp_fmtstream_point@@Base+0x884>  // b.none
   10ac0:	ldr	x0, [sp, #72]
   10ac4:	strb	wzr, [x0]
   10ac8:	ldr	x0, [sp, #32]
   10acc:	ldp	x29, x30, [sp], #80
   10ad0:	ret
   10ad4:	stp	x29, x30, [sp, #-80]!
   10ad8:	mov	x29, sp
   10adc:	str	x0, [sp, #56]
   10ae0:	str	w1, [sp, #52]
   10ae4:	str	x2, [sp, #40]
   10ae8:	str	w3, [sp, #48]
   10aec:	str	x4, [sp, #32]
   10af0:	str	x5, [sp, #24]
   10af4:	mov	x0, #0x30                  	// #48
   10af8:	bl	ab40 <malloc@plt>
   10afc:	str	x0, [sp, #72]
   10b00:	ldr	x0, [sp, #72]
   10b04:	cmp	x0, #0x0
   10b08:	b.eq	10b8c <argp_fmtstream_point@@Base+0xa9c>  // b.none
   10b0c:	ldr	x0, [sp, #72]
   10b10:	ldr	w1, [sp, #52]
   10b14:	str	w1, [x0, #12]
   10b18:	ldr	x0, [sp, #72]
   10b1c:	ldr	x1, [sp, #40]
   10b20:	str	x1, [x0]
   10b24:	ldr	x0, [sp, #72]
   10b28:	ldr	w1, [sp, #48]
   10b2c:	str	w1, [x0, #8]
   10b30:	ldr	x0, [sp, #72]
   10b34:	ldr	x1, [sp, #32]
   10b38:	str	x1, [x0, #16]
   10b3c:	ldr	x0, [sp, #72]
   10b40:	ldr	x1, [sp, #24]
   10b44:	str	x1, [x0, #24]
   10b48:	ldr	x0, [sp, #32]
   10b4c:	cmp	x0, #0x0
   10b50:	b.eq	10b64 <argp_fmtstream_point@@Base+0xa74>  // b.none
   10b54:	ldr	x0, [sp, #32]
   10b58:	ldr	w0, [x0, #32]
   10b5c:	add	w0, w0, #0x1
   10b60:	b	10b68 <argp_fmtstream_point@@Base+0xa78>
   10b64:	mov	w0, #0x0                   	// #0
   10b68:	ldr	x1, [sp, #72]
   10b6c:	str	w0, [x1, #32]
   10b70:	ldr	x0, [sp, #56]
   10b74:	ldr	x1, [x0, #24]
   10b78:	ldr	x0, [sp, #72]
   10b7c:	str	x1, [x0, #40]
   10b80:	ldr	x0, [sp, #56]
   10b84:	ldr	x1, [sp, #72]
   10b88:	str	x1, [x0, #24]
   10b8c:	ldr	x0, [sp, #72]
   10b90:	ldp	x29, x30, [sp], #80
   10b94:	ret
   10b98:	stp	x29, x30, [sp, #-48]!
   10b9c:	mov	x29, sp
   10ba0:	str	x0, [sp, #24]
   10ba4:	ldr	x0, [sp, #24]
   10ba8:	ldr	x0, [x0, #24]
   10bac:	str	x0, [sp, #40]
   10bb0:	b	10bd0 <argp_fmtstream_point@@Base+0xae0>
   10bb4:	ldr	x0, [sp, #40]
   10bb8:	ldr	x0, [x0, #40]
   10bbc:	str	x0, [sp, #32]
   10bc0:	ldr	x0, [sp, #40]
   10bc4:	bl	b130 <free@plt>
   10bc8:	ldr	x0, [sp, #32]
   10bcc:	str	x0, [sp, #40]
   10bd0:	ldr	x0, [sp, #40]
   10bd4:	cmp	x0, #0x0
   10bd8:	b.ne	10bb4 <argp_fmtstream_point@@Base+0xac4>  // b.any
   10bdc:	ldr	x0, [sp, #24]
   10be0:	ldr	w0, [x0, #8]
   10be4:	cmp	w0, #0x0
   10be8:	b.eq	10c04 <argp_fmtstream_point@@Base+0xb14>  // b.none
   10bec:	ldr	x0, [sp, #24]
   10bf0:	ldr	x0, [x0]
   10bf4:	bl	b130 <free@plt>
   10bf8:	ldr	x0, [sp, #24]
   10bfc:	ldr	x0, [x0, #16]
   10c00:	bl	b130 <free@plt>
   10c04:	ldr	x0, [sp, #24]
   10c08:	bl	b130 <free@plt>
   10c0c:	nop
   10c10:	ldp	x29, x30, [sp], #48
   10c14:	ret
   10c18:	stp	x29, x30, [sp, #-80]!
   10c1c:	mov	x29, sp
   10c20:	str	x0, [sp, #40]
   10c24:	str	x1, [sp, #32]
   10c28:	str	x2, [sp, #24]
   10c2c:	str	x3, [sp, #16]
   10c30:	str	wzr, [sp, #72]
   10c34:	ldr	x0, [sp, #40]
   10c38:	ldr	x0, [x0]
   10c3c:	str	x0, [sp, #56]
   10c40:	ldr	x0, [sp, #40]
   10c44:	ldr	x0, [x0, #16]
   10c48:	str	x0, [sp, #48]
   10c4c:	ldr	x0, [sp, #56]
   10c50:	str	x0, [sp, #64]
   10c54:	ldr	x0, [sp, #40]
   10c58:	ldr	w0, [x0, #8]
   10c5c:	str	w0, [sp, #76]
   10c60:	b	10d00 <argp_fmtstream_point@@Base+0xc10>
   10c64:	ldr	x0, [sp, #64]
   10c68:	bl	b4e0 <_option_is_short@plt>
   10c6c:	cmp	w0, #0x0
   10c70:	b.eq	10ce8 <argp_fmtstream_point@@Base+0xbf8>  // b.none
   10c74:	ldr	x0, [sp, #48]
   10c78:	ldrb	w0, [x0]
   10c7c:	mov	w1, w0
   10c80:	ldr	x0, [sp, #64]
   10c84:	ldr	w0, [x0, #8]
   10c88:	cmp	w1, w0
   10c8c:	b.ne	10ce8 <argp_fmtstream_point@@Base+0xbf8>  // b.any
   10c90:	ldr	x0, [sp, #64]
   10c94:	ldr	w0, [x0, #24]
   10c98:	and	w0, w0, #0x4
   10c9c:	cmp	w0, #0x0
   10ca0:	b.ne	10cac <argp_fmtstream_point@@Base+0xbbc>  // b.any
   10ca4:	ldr	x0, [sp, #64]
   10ca8:	str	x0, [sp, #56]
   10cac:	ldr	x0, [sp, #64]
   10cb0:	ldr	w0, [x0, #24]
   10cb4:	and	w0, w0, #0x2
   10cb8:	cmp	w0, #0x0
   10cbc:	b.ne	10cdc <argp_fmtstream_point@@Base+0xbec>  // b.any
   10cc0:	ldr	x4, [sp, #32]
   10cc4:	ldr	x3, [sp, #16]
   10cc8:	ldr	x2, [sp, #24]
   10ccc:	ldr	x1, [sp, #56]
   10cd0:	ldr	x0, [sp, #64]
   10cd4:	blr	x4
   10cd8:	str	w0, [sp, #72]
   10cdc:	ldr	x0, [sp, #48]
   10ce0:	add	x0, x0, #0x1
   10ce4:	str	x0, [sp, #48]
   10ce8:	ldr	x0, [sp, #64]
   10cec:	add	x0, x0, #0x30
   10cf0:	str	x0, [sp, #64]
   10cf4:	ldr	w0, [sp, #76]
   10cf8:	sub	w0, w0, #0x1
   10cfc:	str	w0, [sp, #76]
   10d00:	ldr	w0, [sp, #76]
   10d04:	cmp	w0, #0x0
   10d08:	b.eq	10d18 <argp_fmtstream_point@@Base+0xc28>  // b.none
   10d0c:	ldr	w0, [sp, #72]
   10d10:	cmp	w0, #0x0
   10d14:	b.eq	10c64 <argp_fmtstream_point@@Base+0xb74>  // b.none
   10d18:	ldr	w0, [sp, #72]
   10d1c:	ldp	x29, x30, [sp], #80
   10d20:	ret
   10d24:	stp	x29, x30, [sp, #-48]!
   10d28:	mov	x29, sp
   10d2c:	str	x0, [sp, #40]
   10d30:	str	x1, [sp, #32]
   10d34:	str	x2, [sp, #24]
   10d38:	str	x3, [sp, #16]
   10d3c:	ldr	x0, [sp, #40]
   10d40:	bl	b4e0 <_option_is_short@plt>
   10d44:	cmp	w0, #0x0
   10d48:	b.eq	10d58 <argp_fmtstream_point@@Base+0xc68>  // b.none
   10d4c:	ldr	x0, [sp, #40]
   10d50:	ldr	w0, [x0, #8]
   10d54:	b	10d5c <argp_fmtstream_point@@Base+0xc6c>
   10d58:	mov	w0, #0x0                   	// #0
   10d5c:	ldp	x29, x30, [sp], #48
   10d60:	ret
   10d64:	stp	x29, x30, [sp, #-32]!
   10d68:	mov	x29, sp
   10d6c:	str	x0, [sp, #24]
   10d70:	ldr	x0, [sp, #24]
   10d74:	ldr	x0, [x0, #40]
   10d78:	ldr	x0, [x0, #48]
   10d7c:	mov	x3, #0x0                   	// #0
   10d80:	mov	x2, x0
   10d84:	adrp	x0, 10000 <argp_fmtstream_set_lmargin@@Base+0x3c>
   10d88:	add	x1, x0, #0xd24
   10d8c:	ldr	x0, [sp, #24]
   10d90:	bl	10c18 <argp_fmtstream_point@@Base+0xb28>
   10d94:	and	w0, w0, #0xff
   10d98:	ldp	x29, x30, [sp], #32
   10d9c:	ret
   10da0:	sub	sp, sp, #0x20
   10da4:	str	x0, [sp, #8]
   10da8:	ldr	x0, [sp, #8]
   10dac:	ldr	x0, [x0]
   10db0:	str	x0, [sp, #24]
   10db4:	ldr	x0, [sp, #8]
   10db8:	ldr	w0, [x0, #8]
   10dbc:	str	w0, [sp, #20]
   10dc0:	b	10e0c <argp_fmtstream_point@@Base+0xd1c>
   10dc4:	ldr	x0, [sp, #24]
   10dc8:	ldr	x0, [x0]
   10dcc:	cmp	x0, #0x0
   10dd0:	b.eq	10df4 <argp_fmtstream_point@@Base+0xd04>  // b.none
   10dd4:	ldr	x0, [sp, #24]
   10dd8:	ldr	w0, [x0, #24]
   10ddc:	and	w0, w0, #0x2
   10de0:	cmp	w0, #0x0
   10de4:	b.ne	10df4 <argp_fmtstream_point@@Base+0xd04>  // b.any
   10de8:	ldr	x0, [sp, #24]
   10dec:	ldr	x0, [x0]
   10df0:	b	10e1c <argp_fmtstream_point@@Base+0xd2c>
   10df4:	ldr	x0, [sp, #24]
   10df8:	add	x0, x0, #0x30
   10dfc:	str	x0, [sp, #24]
   10e00:	ldr	w0, [sp, #20]
   10e04:	sub	w0, w0, #0x1
   10e08:	str	w0, [sp, #20]
   10e0c:	ldr	w0, [sp, #20]
   10e10:	cmp	w0, #0x0
   10e14:	b.ne	10dc4 <argp_fmtstream_point@@Base+0xcd4>  // b.any
   10e18:	mov	x0, #0x0                   	// #0
   10e1c:	add	sp, sp, #0x20
   10e20:	ret
   10e24:	stp	x29, x30, [sp, #-64]!
   10e28:	mov	x29, sp
   10e2c:	str	x0, [sp, #24]
   10e30:	str	x1, [sp, #16]
   10e34:	ldr	x0, [sp, #24]
   10e38:	ldr	x0, [x0]
   10e3c:	str	x0, [sp, #56]
   10e40:	ldr	x0, [sp, #24]
   10e44:	ldr	w0, [x0, #8]
   10e48:	str	w0, [sp, #52]
   10e4c:	b	10edc <argp_fmtstream_point@@Base+0xdec>
   10e50:	ldr	x0, [sp, #56]
   10e54:	ldr	x0, [x0]
   10e58:	str	x0, [sp, #40]
   10e5c:	ldr	x0, [sp, #56]
   10e60:	ldr	w0, [x0, #8]
   10e64:	str	w0, [sp, #36]
   10e68:	b	10ebc <argp_fmtstream_point@@Base+0xdcc>
   10e6c:	ldr	x0, [sp, #40]
   10e70:	ldr	x0, [x0]
   10e74:	cmp	x0, #0x0
   10e78:	b.eq	10eb0 <argp_fmtstream_point@@Base+0xdc0>  // b.none
   10e7c:	ldr	x0, [sp, #40]
   10e80:	ldr	w0, [x0, #24]
   10e84:	and	w0, w0, #0x2
   10e88:	cmp	w0, #0x0
   10e8c:	b.ne	10eb0 <argp_fmtstream_point@@Base+0xdc0>  // b.any
   10e90:	ldr	x0, [sp, #40]
   10e94:	ldr	x0, [x0]
   10e98:	ldr	x1, [sp, #16]
   10e9c:	bl	b070 <strcmp@plt>
   10ea0:	cmp	w0, #0x0
   10ea4:	b.ne	10eb0 <argp_fmtstream_point@@Base+0xdc0>  // b.any
   10ea8:	ldr	x0, [sp, #56]
   10eac:	b	10ef4 <argp_fmtstream_point@@Base+0xe04>
   10eb0:	ldr	x0, [sp, #40]
   10eb4:	add	x0, x0, #0x30
   10eb8:	str	x0, [sp, #40]
   10ebc:	ldr	w0, [sp, #36]
   10ec0:	sub	w1, w0, #0x1
   10ec4:	str	w1, [sp, #36]
   10ec8:	cmp	w0, #0x0
   10ecc:	b.ne	10e6c <argp_fmtstream_point@@Base+0xd7c>  // b.any
   10ed0:	ldr	x0, [sp, #56]
   10ed4:	add	x0, x0, #0x38
   10ed8:	str	x0, [sp, #56]
   10edc:	ldr	w0, [sp, #52]
   10ee0:	sub	w1, w0, #0x1
   10ee4:	str	w1, [sp, #52]
   10ee8:	cmp	w0, #0x0
   10eec:	b.ne	10e50 <argp_fmtstream_point@@Base+0xd60>  // b.any
   10ef0:	mov	x0, #0x0                   	// #0
   10ef4:	ldp	x29, x30, [sp], #64
   10ef8:	ret
   10efc:	stp	x29, x30, [sp, #-64]!
   10f00:	mov	x29, sp
   10f04:	str	x0, [sp, #40]
   10f08:	str	x1, [sp, #32]
   10f0c:	str	w2, [sp, #28]
   10f10:	ldr	x1, [sp, #32]
   10f14:	ldr	x0, [sp, #40]
   10f18:	bl	10e24 <argp_fmtstream_point@@Base+0xd34>
   10f1c:	str	x0, [sp, #56]
   10f20:	ldr	x0, [sp, #56]
   10f24:	cmp	x0, #0x0
   10f28:	b.eq	10f38 <argp_fmtstream_point@@Base+0xe48>  // b.none
   10f2c:	ldr	x0, [sp, #56]
   10f30:	ldr	w1, [sp, #28]
   10f34:	str	w1, [x0, #24]
   10f38:	nop
   10f3c:	ldp	x29, x30, [sp], #64
   10f40:	ret
   10f44:	sub	sp, sp, #0x10
   10f48:	str	w0, [sp, #12]
   10f4c:	str	w1, [sp, #8]
   10f50:	str	w2, [sp, #4]
   10f54:	ldr	w1, [sp, #12]
   10f58:	ldr	w0, [sp, #8]
   10f5c:	cmp	w1, w0
   10f60:	b.ne	10f6c <argp_fmtstream_point@@Base+0xe7c>  // b.any
   10f64:	ldr	w0, [sp, #4]
   10f68:	b	10fb8 <argp_fmtstream_point@@Base+0xec8>
   10f6c:	ldr	w0, [sp, #12]
   10f70:	cmp	w0, #0x0
   10f74:	b.ge	10f84 <argp_fmtstream_point@@Base+0xe94>  // b.tcont
   10f78:	ldr	w0, [sp, #8]
   10f7c:	cmp	w0, #0x0
   10f80:	b.lt	10f9c <argp_fmtstream_point@@Base+0xeac>  // b.tstop
   10f84:	ldr	w0, [sp, #12]
   10f88:	cmp	w0, #0x0
   10f8c:	b.lt	10fac <argp_fmtstream_point@@Base+0xebc>  // b.tstop
   10f90:	ldr	w0, [sp, #8]
   10f94:	cmp	w0, #0x0
   10f98:	b.lt	10fac <argp_fmtstream_point@@Base+0xebc>  // b.tstop
   10f9c:	ldr	w1, [sp, #12]
   10fa0:	ldr	w0, [sp, #8]
   10fa4:	sub	w0, w1, w0
   10fa8:	b	10fb8 <argp_fmtstream_point@@Base+0xec8>
   10fac:	ldr	w1, [sp, #8]
   10fb0:	ldr	w0, [sp, #12]
   10fb4:	sub	w0, w1, w0
   10fb8:	add	sp, sp, #0x10
   10fbc:	ret
   10fc0:	stp	x29, x30, [sp, #-32]!
   10fc4:	mov	x29, sp
   10fc8:	str	x0, [sp, #24]
   10fcc:	str	x1, [sp, #16]
   10fd0:	b	10fe0 <argp_fmtstream_point@@Base+0xef0>
   10fd4:	ldr	x0, [sp, #24]
   10fd8:	ldr	x0, [x0, #16]
   10fdc:	str	x0, [sp, #24]
   10fe0:	ldr	x0, [sp, #24]
   10fe4:	ldr	w1, [x0, #32]
   10fe8:	ldr	x0, [sp, #16]
   10fec:	ldr	w0, [x0, #32]
   10ff0:	cmp	w1, w0
   10ff4:	b.gt	10fd4 <argp_fmtstream_point@@Base+0xee4>
   10ff8:	b	11008 <argp_fmtstream_point@@Base+0xf18>
   10ffc:	ldr	x0, [sp, #16]
   11000:	ldr	x0, [x0, #16]
   11004:	str	x0, [sp, #16]
   11008:	ldr	x0, [sp, #16]
   1100c:	ldr	w1, [x0, #32]
   11010:	ldr	x0, [sp, #24]
   11014:	ldr	w0, [x0, #32]
   11018:	cmp	w1, w0
   1101c:	b.gt	10ffc <argp_fmtstream_point@@Base+0xf0c>
   11020:	b	1103c <argp_fmtstream_point@@Base+0xf4c>
   11024:	ldr	x0, [sp, #24]
   11028:	ldr	x0, [x0, #16]
   1102c:	str	x0, [sp, #24]
   11030:	ldr	x0, [sp, #16]
   11034:	ldr	x0, [x0, #16]
   11038:	str	x0, [sp, #16]
   1103c:	ldr	x0, [sp, #24]
   11040:	ldr	x1, [x0, #16]
   11044:	ldr	x0, [sp, #16]
   11048:	ldr	x0, [x0, #16]
   1104c:	cmp	x1, x0
   11050:	b.ne	11024 <argp_fmtstream_point@@Base+0xf34>  // b.any
   11054:	ldr	x0, [sp, #24]
   11058:	ldr	w3, [x0, #12]
   1105c:	ldr	x0, [sp, #16]
   11060:	ldr	w4, [x0, #12]
   11064:	ldr	x0, [sp, #16]
   11068:	ldr	w1, [x0, #8]
   1106c:	ldr	x0, [sp, #24]
   11070:	ldr	w0, [x0, #8]
   11074:	sub	w0, w1, w0
   11078:	mov	w2, w0
   1107c:	mov	w1, w4
   11080:	mov	w0, w3
   11084:	bl	10f44 <argp_fmtstream_point@@Base+0xe54>
   11088:	ldp	x29, x30, [sp], #32
   1108c:	ret
   11090:	sub	sp, sp, #0x10
   11094:	str	x0, [sp, #8]
   11098:	b	110a8 <argp_fmtstream_point@@Base+0xfb8>
   1109c:	ldr	x0, [sp, #8]
   110a0:	ldr	x0, [x0, #16]
   110a4:	str	x0, [sp, #8]
   110a8:	ldr	x0, [sp, #8]
   110ac:	ldr	x0, [x0, #16]
   110b0:	cmp	x0, #0x0
   110b4:	b.ne	1109c <argp_fmtstream_point@@Base+0xfac>  // b.any
   110b8:	ldr	x0, [sp, #8]
   110bc:	add	sp, sp, #0x10
   110c0:	ret
   110c4:	sub	sp, sp, #0x10
   110c8:	str	x0, [sp, #8]
   110cc:	str	x1, [sp]
   110d0:	b	110e0 <argp_fmtstream_point@@Base+0xff0>
   110d4:	ldr	x0, [sp, #8]
   110d8:	ldr	x0, [x0, #16]
   110dc:	str	x0, [sp, #8]
   110e0:	ldr	x0, [sp, #8]
   110e4:	cmp	x0, #0x0
   110e8:	b.eq	110fc <argp_fmtstream_point@@Base+0x100c>  // b.none
   110ec:	ldr	x1, [sp, #8]
   110f0:	ldr	x0, [sp]
   110f4:	cmp	x1, x0
   110f8:	b.ne	110d4 <argp_fmtstream_point@@Base+0xfe4>  // b.any
   110fc:	ldr	x1, [sp, #8]
   11100:	ldr	x0, [sp]
   11104:	cmp	x1, x0
   11108:	cset	w0, eq  // eq = none
   1110c:	and	w0, w0, #0xff
   11110:	add	sp, sp, #0x10
   11114:	ret
   11118:	stp	x29, x30, [sp, #-48]!
   1111c:	mov	x29, sp
   11120:	str	x0, [sp, #24]
   11124:	b	1113c <argp_fmtstream_point@@Base+0x104c>
   11128:	ldr	x0, [sp, #24]
   1112c:	ldr	x0, [x0]
   11130:	add	x1, x0, #0x1
   11134:	ldr	x0, [sp, #24]
   11138:	str	x1, [x0]
   1113c:	bl	b090 <__ctype_b_loc@plt>
   11140:	ldr	x1, [x0]
   11144:	ldr	x0, [sp, #24]
   11148:	ldr	x0, [x0]
   1114c:	ldrb	w0, [x0]
   11150:	and	x0, x0, #0xff
   11154:	lsl	x0, x0, #1
   11158:	add	x0, x1, x0
   1115c:	ldrh	w0, [x0]
   11160:	and	w0, w0, #0x2000
   11164:	cmp	w0, #0x0
   11168:	b.ne	11128 <argp_fmtstream_point@@Base+0x1038>  // b.any
   1116c:	ldr	x0, [sp, #24]
   11170:	ldr	x0, [x0]
   11174:	ldrb	w0, [x0]
   11178:	cmp	w0, #0x2d
   1117c:	cset	w0, ne  // ne = any
   11180:	and	w0, w0, #0xff
   11184:	str	w0, [sp, #44]
   11188:	b	111a0 <argp_fmtstream_point@@Base+0x10b0>
   1118c:	ldr	x0, [sp, #24]
   11190:	ldr	x0, [x0]
   11194:	add	x1, x0, #0x1
   11198:	ldr	x0, [sp, #24]
   1119c:	str	x1, [x0]
   111a0:	ldr	x0, [sp, #24]
   111a4:	ldr	x0, [x0]
   111a8:	ldrb	w0, [x0]
   111ac:	cmp	w0, #0x0
   111b0:	b.eq	111e4 <argp_fmtstream_point@@Base+0x10f4>  // b.none
   111b4:	bl	b090 <__ctype_b_loc@plt>
   111b8:	ldr	x1, [x0]
   111bc:	ldr	x0, [sp, #24]
   111c0:	ldr	x0, [x0]
   111c4:	ldrb	w0, [x0]
   111c8:	and	x0, x0, #0xff
   111cc:	lsl	x0, x0, #1
   111d0:	add	x0, x1, x0
   111d4:	ldrh	w0, [x0]
   111d8:	and	w0, w0, #0x8
   111dc:	cmp	w0, #0x0
   111e0:	b.eq	1118c <argp_fmtstream_point@@Base+0x109c>  // b.none
   111e4:	ldr	w0, [sp, #44]
   111e8:	ldp	x29, x30, [sp], #48
   111ec:	ret
   111f0:	stp	x29, x30, [sp, #-96]!
   111f4:	mov	x29, sp
   111f8:	str	x19, [sp, #16]
   111fc:	str	x0, [sp, #40]
   11200:	str	x1, [sp, #32]
   11204:	ldr	x0, [sp, #40]
   11208:	ldr	w0, [x0, #24]
   1120c:	str	w0, [sp, #84]
   11210:	ldr	x0, [sp, #32]
   11214:	ldr	w0, [x0, #24]
   11218:	str	w0, [sp, #80]
   1121c:	ldr	x0, [sp, #40]
   11220:	ldr	x1, [x0, #32]
   11224:	ldr	x0, [sp, #32]
   11228:	ldr	x0, [x0, #32]
   1122c:	cmp	x1, x0
   11230:	b.eq	112b8 <argp_fmtstream_point@@Base+0x11c8>  // b.none
   11234:	ldr	x0, [sp, #40]
   11238:	ldr	x0, [x0, #32]
   1123c:	cmp	x0, #0x0
   11240:	b.ne	11268 <argp_fmtstream_point@@Base+0x1178>  // b.any
   11244:	ldr	x0, [sp, #32]
   11248:	ldr	x0, [x0, #32]
   1124c:	bl	11090 <argp_fmtstream_point@@Base+0xfa0>
   11250:	ldr	w0, [x0, #12]
   11254:	mov	w2, #0xffffffff            	// #-1
   11258:	mov	w1, w0
   1125c:	ldr	w0, [sp, #84]
   11260:	bl	10f44 <argp_fmtstream_point@@Base+0xe54>
   11264:	b	114d4 <argp_fmtstream_point@@Base+0x13e4>
   11268:	ldr	x0, [sp, #32]
   1126c:	ldr	x0, [x0, #32]
   11270:	cmp	x0, #0x0
   11274:	b.ne	11298 <argp_fmtstream_point@@Base+0x11a8>  // b.any
   11278:	ldr	x0, [sp, #40]
   1127c:	ldr	x0, [x0, #32]
   11280:	bl	11090 <argp_fmtstream_point@@Base+0xfa0>
   11284:	ldr	w0, [x0, #12]
   11288:	mov	w2, #0x1                   	// #1
   1128c:	ldr	w1, [sp, #80]
   11290:	bl	10f44 <argp_fmtstream_point@@Base+0xe54>
   11294:	b	114d4 <argp_fmtstream_point@@Base+0x13e4>
   11298:	ldr	x0, [sp, #40]
   1129c:	ldr	x2, [x0, #32]
   112a0:	ldr	x0, [sp, #32]
   112a4:	ldr	x0, [x0, #32]
   112a8:	mov	x1, x0
   112ac:	mov	x0, x2
   112b0:	bl	10fc0 <argp_fmtstream_point@@Base+0xed0>
   112b4:	b	114d4 <argp_fmtstream_point@@Base+0x13e4>
   112b8:	ldr	w1, [sp, #84]
   112bc:	ldr	w0, [sp, #80]
   112c0:	cmp	w1, w0
   112c4:	b.ne	114c4 <argp_fmtstream_point@@Base+0x13d4>  // b.any
   112c8:	ldr	x0, [sp, #40]
   112cc:	bl	10d64 <argp_fmtstream_point@@Base+0xc74>
   112d0:	and	w0, w0, #0xff
   112d4:	str	w0, [sp, #76]
   112d8:	ldr	x0, [sp, #32]
   112dc:	bl	10d64 <argp_fmtstream_point@@Base+0xc74>
   112e0:	and	w0, w0, #0xff
   112e4:	str	w0, [sp, #72]
   112e8:	ldr	x0, [sp, #40]
   112ec:	ldr	x0, [x0]
   112f0:	ldr	w0, [x0, #24]
   112f4:	and	w0, w0, #0x8
   112f8:	str	w0, [sp, #92]
   112fc:	ldr	x0, [sp, #32]
   11300:	ldr	x0, [x0]
   11304:	ldr	w0, [x0, #24]
   11308:	and	w0, w0, #0x8
   1130c:	str	w0, [sp, #88]
   11310:	ldr	x0, [sp, #40]
   11314:	bl	10da0 <argp_fmtstream_point@@Base+0xcb0>
   11318:	str	x0, [sp, #56]
   1131c:	ldr	x0, [sp, #32]
   11320:	bl	10da0 <argp_fmtstream_point@@Base+0xcb0>
   11324:	str	x0, [sp, #48]
   11328:	ldr	w0, [sp, #92]
   1132c:	cmp	w0, #0x0
   11330:	b.eq	11360 <argp_fmtstream_point@@Base+0x1270>  // b.none
   11334:	ldr	x0, [sp, #56]
   11338:	cmp	x0, #0x0
   1133c:	b.eq	11358 <argp_fmtstream_point@@Base+0x1268>  // b.none
   11340:	add	x0, sp, #0x38
   11344:	bl	11118 <argp_fmtstream_point@@Base+0x1028>
   11348:	cmp	w0, #0x0
   1134c:	b.eq	11358 <argp_fmtstream_point@@Base+0x1268>  // b.none
   11350:	mov	w0, #0x1                   	// #1
   11354:	b	1135c <argp_fmtstream_point@@Base+0x126c>
   11358:	mov	w0, #0x0                   	// #0
   1135c:	str	w0, [sp, #92]
   11360:	ldr	w0, [sp, #88]
   11364:	cmp	w0, #0x0
   11368:	b.eq	11398 <argp_fmtstream_point@@Base+0x12a8>  // b.none
   1136c:	ldr	x0, [sp, #48]
   11370:	cmp	x0, #0x0
   11374:	b.eq	11390 <argp_fmtstream_point@@Base+0x12a0>  // b.none
   11378:	add	x0, sp, #0x30
   1137c:	bl	11118 <argp_fmtstream_point@@Base+0x1028>
   11380:	cmp	w0, #0x0
   11384:	b.eq	11390 <argp_fmtstream_point@@Base+0x12a0>  // b.none
   11388:	mov	w0, #0x1                   	// #1
   1138c:	b	11394 <argp_fmtstream_point@@Base+0x12a4>
   11390:	mov	w0, #0x0                   	// #0
   11394:	str	w0, [sp, #88]
   11398:	ldr	w1, [sp, #92]
   1139c:	ldr	w0, [sp, #88]
   113a0:	cmp	w1, w0
   113a4:	b.eq	113b8 <argp_fmtstream_point@@Base+0x12c8>  // b.none
   113a8:	ldr	w1, [sp, #92]
   113ac:	ldr	w0, [sp, #88]
   113b0:	sub	w0, w1, w0
   113b4:	b	114d4 <argp_fmtstream_point@@Base+0x13e4>
   113b8:	ldr	w0, [sp, #76]
   113bc:	cmp	w0, #0x0
   113c0:	b.ne	113f8 <argp_fmtstream_point@@Base+0x1308>  // b.any
   113c4:	ldr	w0, [sp, #72]
   113c8:	cmp	w0, #0x0
   113cc:	b.ne	113f8 <argp_fmtstream_point@@Base+0x1308>  // b.any
   113d0:	ldr	x0, [sp, #56]
   113d4:	cmp	x0, #0x0
   113d8:	b.eq	113f8 <argp_fmtstream_point@@Base+0x1308>  // b.none
   113dc:	ldr	x0, [sp, #48]
   113e0:	cmp	x0, #0x0
   113e4:	b.eq	113f8 <argp_fmtstream_point@@Base+0x1308>  // b.none
   113e8:	ldr	x0, [sp, #56]
   113ec:	ldr	x1, [sp, #48]
   113f0:	bl	ade0 <strcasecmp@plt>
   113f4:	b	114d4 <argp_fmtstream_point@@Base+0x13e4>
   113f8:	ldr	w0, [sp, #76]
   113fc:	cmp	w0, #0x0
   11400:	b.ne	11424 <argp_fmtstream_point@@Base+0x1334>  // b.any
   11404:	ldr	x0, [sp, #56]
   11408:	cmp	x0, #0x0
   1140c:	b.eq	1141c <argp_fmtstream_point@@Base+0x132c>  // b.none
   11410:	ldr	x0, [sp, #56]
   11414:	ldrb	w0, [x0]
   11418:	b	1142c <argp_fmtstream_point@@Base+0x133c>
   1141c:	mov	w0, #0x0                   	// #0
   11420:	b	1142c <argp_fmtstream_point@@Base+0x133c>
   11424:	ldr	w0, [sp, #76]
   11428:	and	w0, w0, #0xff
   1142c:	strb	w0, [sp, #71]
   11430:	ldr	w0, [sp, #72]
   11434:	cmp	w0, #0x0
   11438:	b.ne	1145c <argp_fmtstream_point@@Base+0x136c>  // b.any
   1143c:	ldr	x0, [sp, #48]
   11440:	cmp	x0, #0x0
   11444:	b.eq	11454 <argp_fmtstream_point@@Base+0x1364>  // b.none
   11448:	ldr	x0, [sp, #48]
   1144c:	ldrb	w0, [x0]
   11450:	b	11464 <argp_fmtstream_point@@Base+0x1374>
   11454:	mov	w0, #0x0                   	// #0
   11458:	b	11464 <argp_fmtstream_point@@Base+0x1374>
   1145c:	ldr	w0, [sp, #72]
   11460:	and	w0, w0, #0xff
   11464:	strb	w0, [sp, #70]
   11468:	bl	aa60 <__ctype_tolower_loc@plt>
   1146c:	ldr	x1, [x0]
   11470:	ldrb	w0, [sp, #71]
   11474:	lsl	x0, x0, #2
   11478:	add	x0, x1, x0
   1147c:	ldr	w19, [x0]
   11480:	bl	aa60 <__ctype_tolower_loc@plt>
   11484:	ldr	x1, [x0]
   11488:	ldrb	w0, [sp, #70]
   1148c:	lsl	x0, x0, #2
   11490:	add	x0, x1, x0
   11494:	ldr	w0, [x0]
   11498:	sub	w0, w19, w0
   1149c:	str	w0, [sp, #64]
   114a0:	ldr	w0, [sp, #64]
   114a4:	cmp	w0, #0x0
   114a8:	b.ne	114bc <argp_fmtstream_point@@Base+0x13cc>  // b.any
   114ac:	ldrb	w1, [sp, #70]
   114b0:	ldrb	w0, [sp, #71]
   114b4:	sub	w0, w1, w0
   114b8:	b	114d4 <argp_fmtstream_point@@Base+0x13e4>
   114bc:	ldr	w0, [sp, #64]
   114c0:	b	114d4 <argp_fmtstream_point@@Base+0x13e4>
   114c4:	mov	w2, #0x0                   	// #0
   114c8:	ldr	w1, [sp, #80]
   114cc:	ldr	w0, [sp, #84]
   114d0:	bl	10f44 <argp_fmtstream_point@@Base+0xe54>
   114d4:	ldr	x19, [sp, #16]
   114d8:	ldp	x29, x30, [sp], #96
   114dc:	ret
   114e0:	stp	x29, x30, [sp, #-32]!
   114e4:	mov	x29, sp
   114e8:	str	x0, [sp, #24]
   114ec:	str	x1, [sp, #16]
   114f0:	ldr	x1, [sp, #16]
   114f4:	ldr	x0, [sp, #24]
   114f8:	bl	111f0 <argp_fmtstream_point@@Base+0x1100>
   114fc:	ldp	x29, x30, [sp], #32
   11500:	ret
   11504:	stp	x29, x30, [sp, #-48]!
   11508:	mov	x29, sp
   1150c:	str	x0, [sp, #24]
   11510:	ldr	x0, [sp, #24]
   11514:	ldr	w0, [x0, #8]
   11518:	cmp	w0, #0x0
   1151c:	b.eq	11594 <argp_fmtstream_point@@Base+0x14a4>  // b.none
   11520:	str	wzr, [sp, #44]
   11524:	ldr	x0, [sp, #24]
   11528:	ldr	x0, [x0]
   1152c:	str	x0, [sp, #32]
   11530:	b	11558 <argp_fmtstream_point@@Base+0x1468>
   11534:	ldr	x0, [sp, #32]
   11538:	ldr	w1, [sp, #44]
   1153c:	str	w1, [x0, #48]
   11540:	ldr	w0, [sp, #44]
   11544:	add	w0, w0, #0x1
   11548:	str	w0, [sp, #44]
   1154c:	ldr	x0, [sp, #32]
   11550:	add	x0, x0, #0x38
   11554:	str	x0, [sp, #32]
   11558:	ldr	x0, [sp, #24]
   1155c:	ldr	w0, [x0, #8]
   11560:	ldr	w1, [sp, #44]
   11564:	cmp	w1, w0
   11568:	b.cc	11534 <argp_fmtstream_point@@Base+0x1444>  // b.lo, b.ul, b.last
   1156c:	ldr	x0, [sp, #24]
   11570:	ldr	x4, [x0]
   11574:	ldr	x0, [sp, #24]
   11578:	ldr	w0, [x0, #8]
   1157c:	mov	w1, w0
   11580:	adrp	x0, 11000 <argp_fmtstream_point@@Base+0xf10>
   11584:	add	x3, x0, #0x4e0
   11588:	mov	x2, #0x38                  	// #56
   1158c:	mov	x0, x4
   11590:	bl	aa10 <qsort@plt>
   11594:	nop
   11598:	ldp	x29, x30, [sp], #48
   1159c:	ret
   115a0:	stp	x29, x30, [sp, #-144]!
   115a4:	mov	x29, sp
   115a8:	str	x19, [sp, #16]
   115ac:	str	x0, [sp, #40]
   115b0:	str	x1, [sp, #32]
   115b4:	ldr	x0, [sp, #40]
   115b8:	add	x0, x0, #0x18
   115bc:	str	x0, [sp, #136]
   115c0:	b	115d4 <argp_fmtstream_point@@Base+0x14e4>
   115c4:	ldr	x0, [sp, #136]
   115c8:	ldr	x0, [x0]
   115cc:	add	x0, x0, #0x28
   115d0:	str	x0, [sp, #136]
   115d4:	ldr	x0, [sp, #136]
   115d8:	ldr	x0, [x0]
   115dc:	cmp	x0, #0x0
   115e0:	b.ne	115c4 <argp_fmtstream_point@@Base+0x14d4>  // b.any
   115e4:	ldr	x0, [sp, #32]
   115e8:	ldr	x1, [x0, #24]
   115ec:	ldr	x0, [sp, #136]
   115f0:	str	x1, [x0]
   115f4:	ldr	x0, [sp, #32]
   115f8:	str	xzr, [x0, #24]
   115fc:	ldr	x0, [sp, #32]
   11600:	ldr	w0, [x0, #8]
   11604:	cmp	w0, #0x0
   11608:	b.eq	11940 <argp_fmtstream_point@@Base+0x1850>  // b.none
   1160c:	ldr	x0, [sp, #40]
   11610:	ldr	w0, [x0, #8]
   11614:	cmp	w0, #0x0
   11618:	b.ne	11658 <argp_fmtstream_point@@Base+0x1568>  // b.any
   1161c:	ldr	x0, [sp, #32]
   11620:	ldr	w1, [x0, #8]
   11624:	ldr	x0, [sp, #40]
   11628:	str	w1, [x0, #8]
   1162c:	ldr	x0, [sp, #32]
   11630:	ldr	x1, [x0]
   11634:	ldr	x0, [sp, #40]
   11638:	str	x1, [x0]
   1163c:	ldr	x0, [sp, #32]
   11640:	ldr	x1, [x0, #16]
   11644:	ldr	x0, [sp, #40]
   11648:	str	x1, [x0, #16]
   1164c:	ldr	x0, [sp, #32]
   11650:	str	wzr, [x0, #8]
   11654:	b	11940 <argp_fmtstream_point@@Base+0x1850>
   11658:	ldr	x0, [sp, #40]
   1165c:	ldr	w1, [x0, #8]
   11660:	ldr	x0, [sp, #32]
   11664:	ldr	w0, [x0, #8]
   11668:	add	w0, w1, w0
   1166c:	str	w0, [sp, #84]
   11670:	ldr	w1, [sp, #84]
   11674:	mov	x0, x1
   11678:	lsl	x0, x0, #3
   1167c:	sub	x0, x0, x1
   11680:	lsl	x0, x0, #3
   11684:	bl	ab40 <malloc@plt>
   11688:	str	x0, [sp, #72]
   1168c:	ldr	x0, [sp, #40]
   11690:	ldr	x0, [x0, #16]
   11694:	bl	a820 <strlen@plt>
   11698:	str	w0, [sp, #68]
   1169c:	ldr	w19, [sp, #68]
   116a0:	ldr	x0, [sp, #32]
   116a4:	ldr	x0, [x0, #16]
   116a8:	bl	a820 <strlen@plt>
   116ac:	add	x0, x19, x0
   116b0:	add	x0, x0, #0x1
   116b4:	bl	ab40 <malloc@plt>
   116b8:	str	x0, [sp, #56]
   116bc:	ldr	x0, [sp, #72]
   116c0:	cmp	x0, #0x0
   116c4:	b.eq	116d4 <argp_fmtstream_point@@Base+0x15e4>  // b.none
   116c8:	ldr	x0, [sp, #56]
   116cc:	cmp	x0, #0x0
   116d0:	b.ne	116f4 <argp_fmtstream_point@@Base+0x1604>  // b.any
   116d4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   116d8:	add	x3, x0, #0x4b8
   116dc:	mov	w2, #0x370                 	// #880
   116e0:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   116e4:	add	x1, x0, #0x298
   116e8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   116ec:	add	x0, x0, #0x2e8
   116f0:	bl	b630 <__assert_fail@plt>
   116f4:	ldr	x0, [sp, #40]
   116f8:	ldr	x3, [x0]
   116fc:	ldr	x0, [sp, #40]
   11700:	ldr	w0, [x0, #8]
   11704:	mov	w1, w0
   11708:	mov	x0, x1
   1170c:	lsl	x0, x0, #3
   11710:	sub	x0, x0, x1
   11714:	lsl	x0, x0, #3
   11718:	mov	x2, x0
   1171c:	mov	x1, x3
   11720:	ldr	x0, [sp, #72]
   11724:	bl	b190 <mempcpy@plt>
   11728:	mov	x4, x0
   1172c:	ldr	x0, [sp, #32]
   11730:	ldr	x3, [x0]
   11734:	ldr	x0, [sp, #32]
   11738:	ldr	w0, [x0, #8]
   1173c:	mov	w1, w0
   11740:	mov	x0, x1
   11744:	lsl	x0, x0, #3
   11748:	sub	x0, x0, x1
   1174c:	lsl	x0, x0, #3
   11750:	mov	x2, x0
   11754:	mov	x1, x3
   11758:	mov	x0, x4
   1175c:	bl	b190 <mempcpy@plt>
   11760:	ldr	x0, [sp, #40]
   11764:	ldr	x0, [x0, #16]
   11768:	ldr	w1, [sp, #68]
   1176c:	mov	x2, x1
   11770:	mov	x1, x0
   11774:	ldr	x0, [sp, #56]
   11778:	bl	b190 <mempcpy@plt>
   1177c:	ldr	x0, [sp, #72]
   11780:	str	x0, [sp, #104]
   11784:	ldr	x0, [sp, #40]
   11788:	ldr	w0, [x0, #8]
   1178c:	str	w0, [sp, #132]
   11790:	b	117d4 <argp_fmtstream_point@@Base+0x16e4>
   11794:	ldr	x0, [sp, #104]
   11798:	ldr	x1, [x0, #16]
   1179c:	ldr	x0, [sp, #40]
   117a0:	ldr	x0, [x0, #16]
   117a4:	sub	x0, x1, x0
   117a8:	mov	x1, x0
   117ac:	ldr	x0, [sp, #56]
   117b0:	add	x1, x0, x1
   117b4:	ldr	x0, [sp, #104]
   117b8:	str	x1, [x0, #16]
   117bc:	ldr	x0, [sp, #104]
   117c0:	add	x0, x0, #0x38
   117c4:	str	x0, [sp, #104]
   117c8:	ldr	w0, [sp, #132]
   117cc:	sub	w0, w0, #0x1
   117d0:	str	w0, [sp, #132]
   117d4:	ldr	w0, [sp, #132]
   117d8:	cmp	w0, #0x0
   117dc:	b.ne	11794 <argp_fmtstream_point@@Base+0x16a4>  // b.any
   117e0:	ldr	w0, [sp, #68]
   117e4:	ldr	x1, [sp, #56]
   117e8:	add	x0, x1, x0
   117ec:	str	x0, [sp, #120]
   117f0:	ldr	x0, [sp, #32]
   117f4:	ldr	x0, [x0, #16]
   117f8:	str	x0, [sp, #112]
   117fc:	ldr	x0, [sp, #32]
   11800:	ldr	w0, [x0, #8]
   11804:	str	w0, [sp, #132]
   11808:	b	118f0 <argp_fmtstream_point@@Base+0x1800>
   1180c:	ldr	x0, [sp, #104]
   11810:	ldr	x1, [sp, #120]
   11814:	str	x1, [x0, #16]
   11818:	ldr	x0, [sp, #104]
   1181c:	ldr	w0, [x0, #8]
   11820:	str	w0, [sp, #100]
   11824:	ldr	x0, [sp, #104]
   11828:	ldr	x0, [x0]
   1182c:	str	x0, [sp, #88]
   11830:	b	118cc <argp_fmtstream_point@@Base+0x17dc>
   11834:	ldr	x0, [sp, #112]
   11838:	ldrb	w0, [x0]
   1183c:	str	w0, [sp, #52]
   11840:	ldr	x0, [sp, #88]
   11844:	bl	b4e0 <_option_is_short@plt>
   11848:	cmp	w0, #0x0
   1184c:	b.eq	118b4 <argp_fmtstream_point@@Base+0x17c4>  // b.none
   11850:	ldr	x0, [sp, #88]
   11854:	ldr	w0, [x0, #8]
   11858:	ldr	w1, [sp, #52]
   1185c:	cmp	w1, w0
   11860:	b.ne	118b4 <argp_fmtstream_point@@Base+0x17c4>  // b.any
   11864:	ldr	w0, [sp, #52]
   11868:	and	w3, w0, #0xff
   1186c:	ldr	w0, [sp, #68]
   11870:	ldr	x1, [sp, #56]
   11874:	add	x0, x1, x0
   11878:	mov	x2, x0
   1187c:	ldr	x1, [sp, #56]
   11880:	mov	w0, w3
   11884:	bl	10758 <argp_fmtstream_point@@Base+0x668>
   11888:	cmp	w0, #0x0
   1188c:	b.ne	118a8 <argp_fmtstream_point@@Base+0x17b8>  // b.any
   11890:	ldr	x0, [sp, #120]
   11894:	add	x1, x0, #0x1
   11898:	str	x1, [sp, #120]
   1189c:	ldr	w1, [sp, #52]
   118a0:	and	w1, w1, #0xff
   118a4:	strb	w1, [x0]
   118a8:	ldr	x0, [sp, #112]
   118ac:	add	x0, x0, #0x1
   118b0:	str	x0, [sp, #112]
   118b4:	ldr	x0, [sp, #88]
   118b8:	add	x0, x0, #0x30
   118bc:	str	x0, [sp, #88]
   118c0:	ldr	w0, [sp, #100]
   118c4:	sub	w0, w0, #0x1
   118c8:	str	w0, [sp, #100]
   118cc:	ldr	w0, [sp, #100]
   118d0:	cmp	w0, #0x0
   118d4:	b.ne	11834 <argp_fmtstream_point@@Base+0x1744>  // b.any
   118d8:	ldr	x0, [sp, #104]
   118dc:	add	x0, x0, #0x38
   118e0:	str	x0, [sp, #104]
   118e4:	ldr	w0, [sp, #132]
   118e8:	sub	w0, w0, #0x1
   118ec:	str	w0, [sp, #132]
   118f0:	ldr	w0, [sp, #132]
   118f4:	cmp	w0, #0x0
   118f8:	b.ne	1180c <argp_fmtstream_point@@Base+0x171c>  // b.any
   118fc:	ldr	x0, [sp, #120]
   11900:	strb	wzr, [x0]
   11904:	ldr	x0, [sp, #40]
   11908:	ldr	x0, [x0]
   1190c:	bl	b130 <free@plt>
   11910:	ldr	x0, [sp, #40]
   11914:	ldr	x0, [x0, #16]
   11918:	bl	b130 <free@plt>
   1191c:	ldr	x0, [sp, #40]
   11920:	ldr	x1, [sp, #72]
   11924:	str	x1, [x0]
   11928:	ldr	x0, [sp, #40]
   1192c:	ldr	w1, [sp, #84]
   11930:	str	w1, [x0, #8]
   11934:	ldr	x0, [sp, #40]
   11938:	ldr	x1, [sp, #56]
   1193c:	str	x1, [x0, #16]
   11940:	ldr	x0, [sp, #32]
   11944:	bl	10b98 <argp_fmtstream_point@@Base+0xaa8>
   11948:	nop
   1194c:	ldr	x19, [sp, #16]
   11950:	ldp	x29, x30, [sp], #144
   11954:	ret
   11958:	stp	x29, x30, [sp, #-48]!
   1195c:	mov	x29, sp
   11960:	str	x0, [sp, #24]
   11964:	str	w1, [sp, #20]
   11968:	ldr	x0, [sp, #24]
   1196c:	bl	af30 <argp_fmtstream_point@plt>
   11970:	mov	w1, w0
   11974:	ldr	w0, [sp, #20]
   11978:	sub	w0, w0, w1
   1197c:	str	w0, [sp, #44]
   11980:	b	11990 <argp_fmtstream_point@@Base+0x18a0>
   11984:	mov	w1, #0x20                  	// #32
   11988:	ldr	x0, [sp, #24]
   1198c:	bl	aa50 <argp_fmtstream_putc@plt>
   11990:	ldr	w0, [sp, #44]
   11994:	sub	w1, w0, #0x1
   11998:	str	w1, [sp, #44]
   1199c:	cmp	w0, #0x0
   119a0:	b.gt	11984 <argp_fmtstream_point@@Base+0x1894>
   119a4:	nop
   119a8:	nop
   119ac:	ldp	x29, x30, [sp], #48
   119b0:	ret
   119b4:	stp	x29, x30, [sp, #-32]!
   119b8:	mov	x29, sp
   119bc:	str	x0, [sp, #24]
   119c0:	str	x1, [sp, #16]
   119c4:	ldr	x0, [sp, #24]
   119c8:	bl	af30 <argp_fmtstream_point@plt>
   119cc:	mov	x1, x0
   119d0:	ldr	x0, [sp, #16]
   119d4:	add	x1, x1, x0
   119d8:	ldr	x0, [sp, #24]
   119dc:	ldr	x0, [x0, #16]
   119e0:	cmp	x1, x0
   119e4:	b.cc	119f8 <argp_fmtstream_point@@Base+0x1908>  // b.lo, b.ul, b.last
   119e8:	mov	w1, #0xa                   	// #10
   119ec:	ldr	x0, [sp, #24]
   119f0:	bl	aa50 <argp_fmtstream_putc@plt>
   119f4:	b	11a04 <argp_fmtstream_point@@Base+0x1914>
   119f8:	mov	w1, #0x20                  	// #32
   119fc:	ldr	x0, [sp, #24]
   11a00:	bl	aa50 <argp_fmtstream_putc@plt>
   11a04:	nop
   11a08:	ldp	x29, x30, [sp], #32
   11a0c:	ret
   11a10:	stp	x29, x30, [sp, #-64]!
   11a14:	mov	x29, sp
   11a18:	str	x0, [sp, #56]
   11a1c:	str	x1, [sp, #48]
   11a20:	str	x2, [sp, #40]
   11a24:	str	x3, [sp, #32]
   11a28:	str	x4, [sp, #24]
   11a2c:	ldr	x0, [sp, #56]
   11a30:	ldr	x0, [x0, #16]
   11a34:	cmp	x0, #0x0
   11a38:	b.eq	11a9c <argp_fmtstream_point@@Base+0x19ac>  // b.none
   11a3c:	ldr	x0, [sp, #56]
   11a40:	ldr	w0, [x0, #24]
   11a44:	and	w0, w0, #0x1
   11a48:	cmp	w0, #0x0
   11a4c:	b.eq	11a78 <argp_fmtstream_point@@Base+0x1988>  // b.none
   11a50:	ldr	x0, [sp, #56]
   11a54:	ldr	x0, [x0, #16]
   11a58:	mov	x1, x0
   11a5c:	ldr	x0, [sp, #32]
   11a60:	bl	b120 <dgettext@plt>
   11a64:	mov	x2, x0
   11a68:	ldr	x1, [sp, #40]
   11a6c:	ldr	x0, [sp, #24]
   11a70:	bl	af60 <argp_fmtstream_printf@plt>
   11a74:	b	11a9c <argp_fmtstream_point@@Base+0x19ac>
   11a78:	ldr	x0, [sp, #56]
   11a7c:	ldr	x0, [x0, #16]
   11a80:	mov	x1, x0
   11a84:	ldr	x0, [sp, #32]
   11a88:	bl	b120 <dgettext@plt>
   11a8c:	mov	x2, x0
   11a90:	ldr	x1, [sp, #48]
   11a94:	ldr	x0, [sp, #24]
   11a98:	bl	af60 <argp_fmtstream_printf@plt>
   11a9c:	nop
   11aa0:	ldp	x29, x30, [sp], #64
   11aa4:	ret
   11aa8:	stp	x29, x30, [sp, #-64]!
   11aac:	mov	x29, sp
   11ab0:	str	x0, [sp, #40]
   11ab4:	str	w1, [sp, #36]
   11ab8:	str	x2, [sp, #24]
   11abc:	str	x3, [sp, #16]
   11ac0:	ldr	x0, [sp, #24]
   11ac4:	cmp	x0, #0x0
   11ac8:	b.eq	11b08 <argp_fmtstream_point@@Base+0x1a18>  // b.none
   11acc:	ldr	x0, [sp, #24]
   11ad0:	ldr	x0, [x0, #40]
   11ad4:	cmp	x0, #0x0
   11ad8:	b.eq	11b08 <argp_fmtstream_point@@Base+0x1a18>  // b.none
   11adc:	ldr	x1, [sp, #16]
   11ae0:	ldr	x0, [sp, #24]
   11ae4:	bl	b380 <_argp_input@plt>
   11ae8:	str	x0, [sp, #56]
   11aec:	ldr	x0, [sp, #24]
   11af0:	ldr	x3, [x0, #40]
   11af4:	ldr	x2, [sp, #56]
   11af8:	ldr	x1, [sp, #40]
   11afc:	ldr	w0, [sp, #36]
   11b00:	blr	x3
   11b04:	b	11b0c <argp_fmtstream_point@@Base+0x1a1c>
   11b08:	ldr	x0, [sp, #40]
   11b0c:	ldp	x29, x30, [sp], #64
   11b10:	ret
   11b14:	stp	x29, x30, [sp, #-64]!
   11b18:	mov	x29, sp
   11b1c:	str	x0, [sp, #40]
   11b20:	str	x1, [sp, #32]
   11b24:	str	x2, [sp, #24]
   11b28:	ldr	x0, [sp, #40]
   11b2c:	cmp	x0, #0x0
   11b30:	b.eq	11b48 <argp_fmtstream_point@@Base+0x1a58>  // b.none
   11b34:	ldr	x0, [sp, #32]
   11b38:	ldr	x0, [x0, #48]
   11b3c:	ldr	x1, [sp, #40]
   11b40:	bl	b120 <dgettext@plt>
   11b44:	b	11b4c <argp_fmtstream_point@@Base+0x1a5c>
   11b48:	mov	x0, #0x0                   	// #0
   11b4c:	str	x0, [sp, #56]
   11b50:	ldr	x0, [sp, #24]
   11b54:	ldr	x0, [x0, #32]
   11b58:	mov	x3, x0
   11b5c:	ldr	x2, [sp, #32]
   11b60:	mov	w1, #0x3                   	// #3
   11b64:	movk	w1, #0x200, lsl #16
   11b68:	ldr	x0, [sp, #56]
   11b6c:	bl	11aa8 <argp_fmtstream_point@@Base+0x19b8>
   11b70:	str	x0, [sp, #48]
   11b74:	ldr	x0, [sp, #48]
   11b78:	cmp	x0, #0x0
   11b7c:	b.eq	11c5c <argp_fmtstream_point@@Base+0x1b6c>  // b.none
   11b80:	ldr	x0, [sp, #48]
   11b84:	ldrb	w0, [x0]
   11b88:	cmp	w0, #0x0
   11b8c:	b.eq	11c4c <argp_fmtstream_point@@Base+0x1b5c>  // b.none
   11b90:	ldr	x0, [sp, #24]
   11b94:	ldr	x0, [x0, #16]
   11b98:	ldr	x0, [x0]
   11b9c:	cmp	x0, #0x0
   11ba0:	b.eq	11bb4 <argp_fmtstream_point@@Base+0x1ac4>  // b.none
   11ba4:	ldr	x0, [sp, #24]
   11ba8:	ldr	x0, [x0, #8]
   11bac:	mov	w1, #0xa                   	// #10
   11bb0:	bl	aa50 <argp_fmtstream_putc@plt>
   11bb4:	ldr	x0, [sp, #24]
   11bb8:	ldr	x2, [x0, #8]
   11bbc:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   11bc0:	add	x0, x0, #0x358
   11bc4:	ldr	w0, [x0, #24]
   11bc8:	mov	w1, w0
   11bcc:	mov	x0, x2
   11bd0:	bl	11958 <argp_fmtstream_point@@Base+0x1868>
   11bd4:	ldr	x0, [sp, #24]
   11bd8:	ldr	x2, [x0, #8]
   11bdc:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   11be0:	add	x0, x0, #0x358
   11be4:	ldr	w0, [x0, #24]
   11be8:	sxtw	x0, w0
   11bec:	mov	x1, x0
   11bf0:	mov	x0, x2
   11bf4:	bl	aa30 <argp_fmtstream_set_lmargin@plt>
   11bf8:	ldr	x0, [sp, #24]
   11bfc:	ldr	x2, [x0, #8]
   11c00:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   11c04:	add	x0, x0, #0x358
   11c08:	ldr	w0, [x0, #24]
   11c0c:	sxtw	x0, w0
   11c10:	mov	x1, x0
   11c14:	mov	x0, x2
   11c18:	bl	b6e0 <argp_fmtstream_set_wmargin@plt>
   11c1c:	ldr	x0, [sp, #24]
   11c20:	ldr	x0, [x0, #8]
   11c24:	ldr	x1, [sp, #48]
   11c28:	bl	ac10 <argp_fmtstream_puts@plt>
   11c2c:	ldr	x0, [sp, #24]
   11c30:	ldr	x0, [x0, #8]
   11c34:	mov	x1, #0x0                   	// #0
   11c38:	bl	aa30 <argp_fmtstream_set_lmargin@plt>
   11c3c:	ldr	x0, [sp, #24]
   11c40:	ldr	x0, [x0, #8]
   11c44:	mov	w1, #0xa                   	// #10
   11c48:	bl	aa50 <argp_fmtstream_putc@plt>
   11c4c:	ldr	x0, [sp, #24]
   11c50:	ldr	x0, [x0, #16]
   11c54:	mov	w1, #0x1                   	// #1
   11c58:	str	w1, [x0, #8]
   11c5c:	ldr	x1, [sp, #48]
   11c60:	ldr	x0, [sp, #56]
   11c64:	cmp	x1, x0
   11c68:	b.eq	11c74 <argp_fmtstream_point@@Base+0x1b84>  // b.none
   11c6c:	ldr	x0, [sp, #48]
   11c70:	bl	b130 <free@plt>
   11c74:	nop
   11c78:	ldp	x29, x30, [sp], #64
   11c7c:	ret
   11c80:	stp	x29, x30, [sp, #-64]!
   11c84:	mov	x29, sp
   11c88:	str	w0, [sp, #28]
   11c8c:	str	x1, [sp, #16]
   11c90:	ldr	x0, [sp, #16]
   11c94:	ldr	w0, [x0, #24]
   11c98:	cmp	w0, #0x0
   11c9c:	b.eq	11dc0 <argp_fmtstream_point@@Base+0x1cd0>  // b.none
   11ca0:	ldr	x0, [sp, #16]
   11ca4:	ldr	x0, [x0, #16]
   11ca8:	ldr	x0, [x0]
   11cac:	str	x0, [sp, #56]
   11cb0:	ldr	x0, [sp, #16]
   11cb4:	ldr	x0, [x0]
   11cb8:	ldr	x0, [x0, #32]
   11cbc:	str	x0, [sp, #48]
   11cc0:	ldr	x0, [sp, #16]
   11cc4:	ldr	x0, [x0, #16]
   11cc8:	ldr	w0, [x0, #8]
   11ccc:	cmp	w0, #0x0
   11cd0:	b.eq	11d0c <argp_fmtstream_point@@Base+0x1c1c>  // b.none
   11cd4:	ldr	x0, [sp, #56]
   11cd8:	cmp	x0, #0x0
   11cdc:	b.eq	11d0c <argp_fmtstream_point@@Base+0x1c1c>  // b.none
   11ce0:	ldr	x0, [sp, #16]
   11ce4:	ldr	x0, [x0]
   11ce8:	ldr	w1, [x0, #24]
   11cec:	ldr	x0, [sp, #56]
   11cf0:	ldr	w0, [x0, #24]
   11cf4:	cmp	w1, w0
   11cf8:	b.eq	11d0c <argp_fmtstream_point@@Base+0x1c1c>  // b.none
   11cfc:	ldr	x0, [sp, #16]
   11d00:	ldr	x0, [x0, #8]
   11d04:	mov	w1, #0xa                   	// #10
   11d08:	bl	aa50 <argp_fmtstream_putc@plt>
   11d0c:	ldr	x0, [sp, #48]
   11d10:	cmp	x0, #0x0
   11d14:	b.eq	11db4 <argp_fmtstream_point@@Base+0x1cc4>  // b.none
   11d18:	ldr	x0, [sp, #48]
   11d1c:	ldr	x0, [x0]
   11d20:	cmp	x0, #0x0
   11d24:	b.eq	11db4 <argp_fmtstream_point@@Base+0x1cc4>  // b.none
   11d28:	ldr	x0, [sp, #48]
   11d2c:	ldr	x0, [x0]
   11d30:	ldrb	w0, [x0]
   11d34:	cmp	w0, #0x0
   11d38:	b.eq	11db4 <argp_fmtstream_point@@Base+0x1cc4>  // b.none
   11d3c:	ldr	x0, [sp, #56]
   11d40:	cmp	x0, #0x0
   11d44:	b.eq	11d74 <argp_fmtstream_point@@Base+0x1c84>  // b.none
   11d48:	ldr	x0, [sp, #56]
   11d4c:	ldr	x0, [x0, #32]
   11d50:	ldr	x1, [sp, #48]
   11d54:	cmp	x1, x0
   11d58:	b.eq	11db4 <argp_fmtstream_point@@Base+0x1cc4>  // b.none
   11d5c:	ldr	x0, [sp, #56]
   11d60:	ldr	x0, [x0, #32]
   11d64:	ldr	x1, [sp, #48]
   11d68:	bl	110c4 <argp_fmtstream_point@@Base+0xfd4>
   11d6c:	cmp	w0, #0x0
   11d70:	b.ne	11db4 <argp_fmtstream_point@@Base+0x1cc4>  // b.any
   11d74:	ldr	x0, [sp, #16]
   11d78:	ldr	x0, [x0, #8]
   11d7c:	ldr	x0, [x0, #24]
   11d80:	str	w0, [sp, #44]
   11d84:	ldr	x0, [sp, #48]
   11d88:	ldr	x3, [x0]
   11d8c:	ldr	x0, [sp, #48]
   11d90:	ldr	x0, [x0, #24]
   11d94:	ldr	x2, [sp, #16]
   11d98:	mov	x1, x0
   11d9c:	mov	x0, x3
   11da0:	bl	11b14 <argp_fmtstream_point@@Base+0x1a24>
   11da4:	ldr	x0, [sp, #16]
   11da8:	ldr	x0, [x0, #8]
   11dac:	ldrsw	x1, [sp, #44]
   11db0:	bl	b6e0 <argp_fmtstream_set_wmargin@plt>
   11db4:	ldr	x0, [sp, #16]
   11db8:	str	wzr, [x0, #24]
   11dbc:	b	11dd8 <argp_fmtstream_point@@Base+0x1ce8>
   11dc0:	ldr	x0, [sp, #16]
   11dc4:	ldr	x2, [x0, #8]
   11dc8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   11dcc:	add	x1, x0, #0x308
   11dd0:	mov	x0, x2
   11dd4:	bl	ac10 <argp_fmtstream_puts@plt>
   11dd8:	ldr	x0, [sp, #16]
   11ddc:	ldr	x0, [x0, #8]
   11de0:	ldr	w1, [sp, #28]
   11de4:	bl	11958 <argp_fmtstream_point@@Base+0x1868>
   11de8:	nop
   11dec:	ldp	x29, x30, [sp], #64
   11df0:	ret
   11df4:	stp	x29, x30, [sp, #-160]!
   11df8:	mov	x29, sp
   11dfc:	str	x0, [sp, #40]
   11e00:	str	x1, [sp, #32]
   11e04:	str	x2, [sp, #24]
   11e08:	str	x3, [sp, #16]
   11e0c:	ldr	x0, [sp, #40]
   11e10:	ldr	x0, [x0]
   11e14:	str	x0, [sp, #120]
   11e18:	ldr	x0, [sp, #40]
   11e1c:	ldr	x0, [x0, #16]
   11e20:	str	x0, [sp, #136]
   11e24:	str	wzr, [sp, #132]
   11e28:	mov	x1, #0x0                   	// #0
   11e2c:	ldr	x0, [sp, #24]
   11e30:	bl	aa30 <argp_fmtstream_set_lmargin@plt>
   11e34:	str	w0, [sp, #116]
   11e38:	ldr	x0, [sp, #24]
   11e3c:	ldr	x0, [x0, #24]
   11e40:	str	w0, [sp, #112]
   11e44:	ldr	x0, [sp, #40]
   11e48:	str	x0, [sp, #48]
   11e4c:	ldr	x0, [sp, #24]
   11e50:	str	x0, [sp, #56]
   11e54:	ldr	x0, [sp, #16]
   11e58:	str	x0, [sp, #64]
   11e5c:	mov	w0, #0x1                   	// #1
   11e60:	str	w0, [sp, #72]
   11e64:	ldr	x0, [sp, #32]
   11e68:	str	x0, [sp, #80]
   11e6c:	ldr	x0, [sp, #120]
   11e70:	ldr	w0, [x0, #24]
   11e74:	and	w0, w0, #0x8
   11e78:	cmp	w0, #0x0
   11e7c:	b.ne	11eec <argp_fmtstream_point@@Base+0x1dfc>  // b.any
   11e80:	ldr	x0, [sp, #120]
   11e84:	str	x0, [sp, #144]
   11e88:	ldr	x0, [sp, #40]
   11e8c:	ldr	w0, [x0, #8]
   11e90:	str	w0, [sp, #156]
   11e94:	b	11ee0 <argp_fmtstream_point@@Base+0x1df0>
   11e98:	ldr	x0, [sp, #144]
   11e9c:	ldr	x0, [x0]
   11ea0:	cmp	x0, #0x0
   11ea4:	b.eq	11ec8 <argp_fmtstream_point@@Base+0x1dd8>  // b.none
   11ea8:	ldr	x0, [sp, #144]
   11eac:	ldr	w0, [x0, #24]
   11eb0:	and	w0, w0, #0x2
   11eb4:	cmp	w0, #0x0
   11eb8:	b.ne	11ec8 <argp_fmtstream_point@@Base+0x1dd8>  // b.any
   11ebc:	mov	w0, #0x1                   	// #1
   11ec0:	str	w0, [sp, #132]
   11ec4:	b	11eec <argp_fmtstream_point@@Base+0x1dfc>
   11ec8:	ldr	x0, [sp, #144]
   11ecc:	add	x0, x0, #0x30
   11ed0:	str	x0, [sp, #144]
   11ed4:	ldr	w0, [sp, #156]
   11ed8:	sub	w0, w0, #0x1
   11edc:	str	w0, [sp, #156]
   11ee0:	ldr	w0, [sp, #156]
   11ee4:	cmp	w0, #0x0
   11ee8:	b.ne	11e98 <argp_fmtstream_point@@Base+0x1da8>  // b.any
   11eec:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   11ef0:	add	x0, x0, #0x358
   11ef4:	ldr	w0, [x0, #8]
   11ef8:	sxtw	x0, w0
   11efc:	mov	x1, x0
   11f00:	ldr	x0, [sp, #24]
   11f04:	bl	b6e0 <argp_fmtstream_set_wmargin@plt>
   11f08:	ldr	x0, [sp, #120]
   11f0c:	str	x0, [sp, #144]
   11f10:	ldr	x0, [sp, #40]
   11f14:	ldr	w0, [x0, #8]
   11f18:	str	w0, [sp, #156]
   11f1c:	b	12040 <argp_fmtstream_point@@Base+0x1f50>
   11f20:	ldr	x0, [sp, #144]
   11f24:	bl	b4e0 <_option_is_short@plt>
   11f28:	cmp	w0, #0x0
   11f2c:	b.eq	12028 <argp_fmtstream_point@@Base+0x1f38>  // b.none
   11f30:	ldr	x0, [sp, #144]
   11f34:	ldr	w0, [x0, #8]
   11f38:	ldr	x1, [sp, #136]
   11f3c:	ldrb	w1, [x1]
   11f40:	cmp	w0, w1
   11f44:	b.ne	12028 <argp_fmtstream_point@@Base+0x1f38>  // b.any
   11f48:	ldr	x0, [sp, #144]
   11f4c:	ldr	w0, [x0, #24]
   11f50:	and	w0, w0, #0x2
   11f54:	cmp	w0, #0x0
   11f58:	b.ne	1201c <argp_fmtstream_point@@Base+0x1f2c>  // b.any
   11f5c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   11f60:	add	x0, x0, #0x358
   11f64:	ldr	w0, [x0, #8]
   11f68:	mov	w2, w0
   11f6c:	add	x0, sp, #0x30
   11f70:	mov	x1, x0
   11f74:	mov	w0, w2
   11f78:	bl	11c80 <argp_fmtstream_point@@Base+0x1b90>
   11f7c:	mov	w1, #0x2d                  	// #45
   11f80:	ldr	x0, [sp, #24]
   11f84:	bl	aa50 <argp_fmtstream_putc@plt>
   11f88:	ldr	x0, [sp, #136]
   11f8c:	ldrb	w0, [x0]
   11f90:	mov	w1, w0
   11f94:	ldr	x0, [sp, #24]
   11f98:	bl	aa50 <argp_fmtstream_putc@plt>
   11f9c:	ldr	w0, [sp, #132]
   11fa0:	cmp	w0, #0x0
   11fa4:	b.eq	11fbc <argp_fmtstream_point@@Base+0x1ecc>  // b.none
   11fa8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   11fac:	add	x0, x0, #0x358
   11fb0:	ldr	w0, [x0]
   11fb4:	cmp	w0, #0x0
   11fb8:	b.eq	12000 <argp_fmtstream_point@@Base+0x1f10>  // b.none
   11fbc:	ldr	x0, [sp, #32]
   11fc0:	cmp	x0, #0x0
   11fc4:	b.eq	11fd8 <argp_fmtstream_point@@Base+0x1ee8>  // b.none
   11fc8:	ldr	x0, [sp, #40]
   11fcc:	ldr	x0, [x0, #40]
   11fd0:	ldr	x0, [x0, #48]
   11fd4:	b	11fdc <argp_fmtstream_point@@Base+0x1eec>
   11fd8:	mov	x0, #0x0                   	// #0
   11fdc:	ldr	x4, [sp, #24]
   11fe0:	mov	x3, x0
   11fe4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   11fe8:	add	x2, x0, #0x310
   11fec:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   11ff0:	add	x1, x0, #0x318
   11ff4:	ldr	x0, [sp, #120]
   11ff8:	bl	11a10 <argp_fmtstream_point@@Base+0x1920>
   11ffc:	b	1201c <argp_fmtstream_point@@Base+0x1f2c>
   12000:	ldr	x0, [sp, #120]
   12004:	ldr	x0, [x0, #16]
   12008:	cmp	x0, #0x0
   1200c:	b.eq	1201c <argp_fmtstream_point@@Base+0x1f2c>  // b.none
   12010:	ldr	x0, [sp, #16]
   12014:	mov	w1, #0x1                   	// #1
   12018:	str	w1, [x0, #12]
   1201c:	ldr	x0, [sp, #136]
   12020:	add	x0, x0, #0x1
   12024:	str	x0, [sp, #136]
   12028:	ldr	x0, [sp, #144]
   1202c:	add	x0, x0, #0x30
   12030:	str	x0, [sp, #144]
   12034:	ldr	w0, [sp, #156]
   12038:	sub	w0, w0, #0x1
   1203c:	str	w0, [sp, #156]
   12040:	ldr	w0, [sp, #156]
   12044:	cmp	w0, #0x0
   12048:	b.ne	11f20 <argp_fmtstream_point@@Base+0x1e30>  // b.any
   1204c:	ldr	x0, [sp, #120]
   12050:	ldr	w0, [x0, #24]
   12054:	and	w0, w0, #0x8
   12058:	cmp	w0, #0x0
   1205c:	b.eq	12138 <argp_fmtstream_point@@Base+0x2048>  // b.none
   12060:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   12064:	add	x0, x0, #0x358
   12068:	ldr	w0, [x0, #16]
   1206c:	sxtw	x0, w0
   12070:	mov	x1, x0
   12074:	ldr	x0, [sp, #24]
   12078:	bl	b6e0 <argp_fmtstream_set_wmargin@plt>
   1207c:	ldr	x0, [sp, #120]
   12080:	str	x0, [sp, #144]
   12084:	ldr	x0, [sp, #40]
   12088:	ldr	w0, [x0, #8]
   1208c:	str	w0, [sp, #156]
   12090:	b	12128 <argp_fmtstream_point@@Base+0x2038>
   12094:	ldr	x0, [sp, #144]
   12098:	ldr	x0, [x0]
   1209c:	cmp	x0, #0x0
   120a0:	b.eq	12110 <argp_fmtstream_point@@Base+0x2020>  // b.none
   120a4:	ldr	x0, [sp, #144]
   120a8:	ldr	w0, [x0, #24]
   120ac:	and	w0, w0, #0x2
   120b0:	cmp	w0, #0x0
   120b4:	b.ne	12110 <argp_fmtstream_point@@Base+0x2020>  // b.any
   120b8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   120bc:	add	x0, x0, #0x358
   120c0:	ldr	w0, [x0, #16]
   120c4:	mov	w2, w0
   120c8:	add	x0, sp, #0x30
   120cc:	mov	x1, x0
   120d0:	mov	w0, w2
   120d4:	bl	11c80 <argp_fmtstream_point@@Base+0x1b90>
   120d8:	ldr	x0, [sp, #32]
   120dc:	cmp	x0, #0x0
   120e0:	b.eq	120f4 <argp_fmtstream_point@@Base+0x2004>  // b.none
   120e4:	ldr	x0, [sp, #40]
   120e8:	ldr	x0, [x0, #40]
   120ec:	ldr	x0, [x0, #48]
   120f0:	b	120f8 <argp_fmtstream_point@@Base+0x2008>
   120f4:	mov	x0, #0x0                   	// #0
   120f8:	ldr	x1, [sp, #144]
   120fc:	ldr	x1, [x1]
   12100:	bl	b120 <dgettext@plt>
   12104:	mov	x1, x0
   12108:	ldr	x0, [sp, #24]
   1210c:	bl	ac10 <argp_fmtstream_puts@plt>
   12110:	ldr	x0, [sp, #144]
   12114:	add	x0, x0, #0x30
   12118:	str	x0, [sp, #144]
   1211c:	ldr	w0, [sp, #156]
   12120:	sub	w0, w0, #0x1
   12124:	str	w0, [sp, #156]
   12128:	ldr	w0, [sp, #156]
   1212c:	cmp	w0, #0x0
   12130:	b.ne	12094 <argp_fmtstream_point@@Base+0x1fa4>  // b.any
   12134:	b	12230 <argp_fmtstream_point@@Base+0x2140>
   12138:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1213c:	add	x0, x0, #0x358
   12140:	ldr	w0, [x0, #12]
   12144:	sxtw	x0, w0
   12148:	mov	x1, x0
   1214c:	ldr	x0, [sp, #24]
   12150:	bl	b6e0 <argp_fmtstream_set_wmargin@plt>
   12154:	ldr	x0, [sp, #120]
   12158:	str	x0, [sp, #144]
   1215c:	ldr	x0, [sp, #40]
   12160:	ldr	w0, [x0, #8]
   12164:	str	w0, [sp, #156]
   12168:	b	12224 <argp_fmtstream_point@@Base+0x2134>
   1216c:	ldr	x0, [sp, #144]
   12170:	ldr	x0, [x0]
   12174:	cmp	x0, #0x0
   12178:	b.eq	1220c <argp_fmtstream_point@@Base+0x211c>  // b.none
   1217c:	ldr	x0, [sp, #144]
   12180:	ldr	w0, [x0, #24]
   12184:	and	w0, w0, #0x2
   12188:	cmp	w0, #0x0
   1218c:	b.ne	1220c <argp_fmtstream_point@@Base+0x211c>  // b.any
   12190:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   12194:	add	x0, x0, #0x358
   12198:	ldr	w0, [x0, #12]
   1219c:	mov	w2, w0
   121a0:	add	x0, sp, #0x30
   121a4:	mov	x1, x0
   121a8:	mov	w0, w2
   121ac:	bl	11c80 <argp_fmtstream_point@@Base+0x1b90>
   121b0:	ldr	x0, [sp, #144]
   121b4:	ldr	x0, [x0]
   121b8:	mov	x2, x0
   121bc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   121c0:	add	x1, x0, #0x320
   121c4:	ldr	x0, [sp, #24]
   121c8:	bl	af60 <argp_fmtstream_printf@plt>
   121cc:	ldr	x0, [sp, #32]
   121d0:	cmp	x0, #0x0
   121d4:	b.eq	121e8 <argp_fmtstream_point@@Base+0x20f8>  // b.none
   121d8:	ldr	x0, [sp, #40]
   121dc:	ldr	x0, [x0, #40]
   121e0:	ldr	x0, [x0, #48]
   121e4:	b	121ec <argp_fmtstream_point@@Base+0x20fc>
   121e8:	mov	x0, #0x0                   	// #0
   121ec:	ldr	x4, [sp, #24]
   121f0:	mov	x3, x0
   121f4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   121f8:	add	x2, x0, #0x328
   121fc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   12200:	add	x1, x0, #0x330
   12204:	ldr	x0, [sp, #120]
   12208:	bl	11a10 <argp_fmtstream_point@@Base+0x1920>
   1220c:	ldr	x0, [sp, #144]
   12210:	add	x0, x0, #0x30
   12214:	str	x0, [sp, #144]
   12218:	ldr	w0, [sp, #156]
   1221c:	sub	w0, w0, #0x1
   12220:	str	w0, [sp, #156]
   12224:	ldr	w0, [sp, #156]
   12228:	cmp	w0, #0x0
   1222c:	b.ne	1216c <argp_fmtstream_point@@Base+0x207c>  // b.any
   12230:	mov	x1, #0x0                   	// #0
   12234:	ldr	x0, [sp, #24]
   12238:	bl	aa30 <argp_fmtstream_set_lmargin@plt>
   1223c:	ldr	w0, [sp, #72]
   12240:	cmp	w0, #0x0
   12244:	b.eq	12290 <argp_fmtstream_point@@Base+0x21a0>  // b.none
   12248:	ldr	x0, [sp, #120]
   1224c:	bl	b4e0 <_option_is_short@plt>
   12250:	cmp	w0, #0x0
   12254:	b.ne	1242c <argp_fmtstream_point@@Base+0x233c>  // b.any
   12258:	ldr	x0, [sp, #120]
   1225c:	ldr	x0, [x0]
   12260:	cmp	x0, #0x0
   12264:	b.ne	1242c <argp_fmtstream_point@@Base+0x233c>  // b.any
   12268:	ldr	x0, [sp, #120]
   1226c:	ldr	x3, [x0, #32]
   12270:	ldr	x0, [sp, #40]
   12274:	ldr	x0, [x0, #40]
   12278:	add	x1, sp, #0x30
   1227c:	mov	x2, x1
   12280:	mov	x1, x0
   12284:	mov	x0, x3
   12288:	bl	11b14 <argp_fmtstream_point@@Base+0x1a24>
   1228c:	b	1241c <argp_fmtstream_point@@Base+0x232c>
   12290:	ldr	x0, [sp, #120]
   12294:	ldr	x0, [x0, #32]
   12298:	cmp	x0, #0x0
   1229c:	b.eq	122d0 <argp_fmtstream_point@@Base+0x21e0>  // b.none
   122a0:	ldr	x0, [sp, #32]
   122a4:	cmp	x0, #0x0
   122a8:	b.eq	122bc <argp_fmtstream_point@@Base+0x21cc>  // b.none
   122ac:	ldr	x0, [sp, #40]
   122b0:	ldr	x0, [x0, #40]
   122b4:	ldr	x0, [x0, #48]
   122b8:	b	122c0 <argp_fmtstream_point@@Base+0x21d0>
   122bc:	mov	x0, #0x0                   	// #0
   122c0:	ldr	x1, [sp, #120]
   122c4:	ldr	x1, [x1, #32]
   122c8:	bl	b120 <dgettext@plt>
   122cc:	b	122d4 <argp_fmtstream_point@@Base+0x21e4>
   122d0:	mov	x0, #0x0                   	// #0
   122d4:	str	x0, [sp, #104]
   122d8:	ldr	x0, [sp, #120]
   122dc:	ldr	w1, [x0, #8]
   122e0:	ldr	x0, [sp, #40]
   122e4:	ldr	x0, [x0, #40]
   122e8:	ldr	x3, [sp, #32]
   122ec:	mov	x2, x0
   122f0:	ldr	x0, [sp, #104]
   122f4:	bl	11aa8 <argp_fmtstream_point@@Base+0x19b8>
   122f8:	str	x0, [sp, #96]
   122fc:	ldr	x0, [sp, #96]
   12300:	cmp	x0, #0x0
   12304:	b.eq	123e0 <argp_fmtstream_point@@Base+0x22f0>  // b.none
   12308:	ldr	x0, [sp, #96]
   1230c:	ldrb	w0, [x0]
   12310:	cmp	w0, #0x0
   12314:	b.eq	123e0 <argp_fmtstream_point@@Base+0x22f0>  // b.none
   12318:	ldr	x0, [sp, #24]
   1231c:	bl	af30 <argp_fmtstream_point@plt>
   12320:	str	w0, [sp, #92]
   12324:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   12328:	add	x0, x0, #0x358
   1232c:	ldr	w0, [x0, #20]
   12330:	sxtw	x0, w0
   12334:	mov	x1, x0
   12338:	ldr	x0, [sp, #24]
   1233c:	bl	aa30 <argp_fmtstream_set_lmargin@plt>
   12340:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   12344:	add	x0, x0, #0x358
   12348:	ldr	w0, [x0, #20]
   1234c:	sxtw	x0, w0
   12350:	mov	x1, x0
   12354:	ldr	x0, [sp, #24]
   12358:	bl	b6e0 <argp_fmtstream_set_wmargin@plt>
   1235c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   12360:	add	x0, x0, #0x358
   12364:	ldr	w0, [x0, #20]
   12368:	add	w0, w0, #0x3
   1236c:	mov	w1, w0
   12370:	ldr	w0, [sp, #92]
   12374:	cmp	w0, w1
   12378:	b.ls	1238c <argp_fmtstream_point@@Base+0x229c>  // b.plast
   1237c:	mov	w1, #0xa                   	// #10
   12380:	ldr	x0, [sp, #24]
   12384:	bl	aa50 <argp_fmtstream_putc@plt>
   12388:	b	123d4 <argp_fmtstream_point@@Base+0x22e4>
   1238c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   12390:	add	x0, x0, #0x358
   12394:	ldr	w0, [x0, #20]
   12398:	mov	w1, w0
   1239c:	ldr	w0, [sp, #92]
   123a0:	cmp	w0, w1
   123a4:	b.cc	123bc <argp_fmtstream_point@@Base+0x22cc>  // b.lo, b.ul, b.last
   123a8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   123ac:	add	x1, x0, #0x338
   123b0:	ldr	x0, [sp, #24]
   123b4:	bl	ac10 <argp_fmtstream_puts@plt>
   123b8:	b	123d4 <argp_fmtstream_point@@Base+0x22e4>
   123bc:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   123c0:	add	x0, x0, #0x358
   123c4:	ldr	w0, [x0, #20]
   123c8:	mov	w1, w0
   123cc:	ldr	x0, [sp, #24]
   123d0:	bl	11958 <argp_fmtstream_point@@Base+0x1868>
   123d4:	ldr	x1, [sp, #96]
   123d8:	ldr	x0, [sp, #24]
   123dc:	bl	ac10 <argp_fmtstream_puts@plt>
   123e0:	ldr	x0, [sp, #96]
   123e4:	cmp	x0, #0x0
   123e8:	b.eq	12404 <argp_fmtstream_point@@Base+0x2314>  // b.none
   123ec:	ldr	x1, [sp, #96]
   123f0:	ldr	x0, [sp, #104]
   123f4:	cmp	x1, x0
   123f8:	b.eq	12404 <argp_fmtstream_point@@Base+0x2314>  // b.none
   123fc:	ldr	x0, [sp, #96]
   12400:	bl	b130 <free@plt>
   12404:	mov	x1, #0x0                   	// #0
   12408:	ldr	x0, [sp, #24]
   1240c:	bl	aa30 <argp_fmtstream_set_lmargin@plt>
   12410:	mov	w1, #0xa                   	// #10
   12414:	ldr	x0, [sp, #24]
   12418:	bl	aa50 <argp_fmtstream_putc@plt>
   1241c:	ldr	x0, [sp, #16]
   12420:	ldr	x1, [sp, #40]
   12424:	str	x1, [x0]
   12428:	b	12430 <argp_fmtstream_point@@Base+0x2340>
   1242c:	nop
   12430:	ldrsw	x0, [sp, #116]
   12434:	mov	x1, x0
   12438:	ldr	x0, [sp, #24]
   1243c:	bl	aa30 <argp_fmtstream_set_lmargin@plt>
   12440:	ldrsw	x0, [sp, #112]
   12444:	mov	x1, x0
   12448:	ldr	x0, [sp, #24]
   1244c:	bl	b6e0 <argp_fmtstream_set_wmargin@plt>
   12450:	nop
   12454:	ldp	x29, x30, [sp], #160
   12458:	ret
   1245c:	stp	x29, x30, [sp, #-96]!
   12460:	mov	x29, sp
   12464:	str	x0, [sp, #40]
   12468:	str	x1, [sp, #32]
   1246c:	str	x2, [sp, #24]
   12470:	str	xzr, [sp, #48]
   12474:	str	wzr, [sp, #56]
   12478:	str	wzr, [sp, #60]
   1247c:	ldr	x0, [sp, #40]
   12480:	ldr	x0, [x0]
   12484:	str	x0, [sp, #80]
   12488:	ldr	x0, [sp, #40]
   1248c:	ldr	w0, [x0, #8]
   12490:	str	w0, [sp, #92]
   12494:	b	124c8 <argp_fmtstream_point@@Base+0x23d8>
   12498:	add	x0, sp, #0x30
   1249c:	mov	x3, x0
   124a0:	ldr	x2, [sp, #24]
   124a4:	ldr	x1, [sp, #32]
   124a8:	ldr	x0, [sp, #80]
   124ac:	bl	11df4 <argp_fmtstream_point@@Base+0x1d04>
   124b0:	ldr	x0, [sp, #80]
   124b4:	add	x0, x0, #0x38
   124b8:	str	x0, [sp, #80]
   124bc:	ldr	w0, [sp, #92]
   124c0:	sub	w0, w0, #0x1
   124c4:	str	w0, [sp, #92]
   124c8:	ldr	w0, [sp, #92]
   124cc:	cmp	w0, #0x0
   124d0:	b.ne	12498 <argp_fmtstream_point@@Base+0x23a8>  // b.any
   124d4:	ldr	w0, [sp, #60]
   124d8:	cmp	w0, #0x0
   124dc:	b.eq	125bc <argp_fmtstream_point@@Base+0x24cc>  // b.none
   124e0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   124e4:	add	x0, x0, #0x358
   124e8:	ldr	w0, [x0, #4]
   124ec:	cmp	w0, #0x0
   124f0:	b.eq	125bc <argp_fmtstream_point@@Base+0x24cc>  // b.none
   124f4:	ldr	x0, [sp, #32]
   124f8:	cmp	x0, #0x0
   124fc:	b.eq	1250c <argp_fmtstream_point@@Base+0x241c>  // b.none
   12500:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   12504:	add	x0, x0, #0x1f8
   12508:	b	12510 <argp_fmtstream_point@@Base+0x2420>
   1250c:	mov	x0, #0x0                   	// #0
   12510:	adrp	x1, 43000 <vasnprintf@@Base+0x2e04>
   12514:	add	x1, x1, #0x340
   12518:	bl	b120 <dgettext@plt>
   1251c:	str	x0, [sp, #72]
   12520:	ldr	x0, [sp, #32]
   12524:	cmp	x0, #0x0
   12528:	b.eq	12538 <argp_fmtstream_point@@Base+0x2448>  // b.none
   1252c:	ldr	x0, [sp, #32]
   12530:	ldr	x0, [x0]
   12534:	b	1253c <argp_fmtstream_point@@Base+0x244c>
   12538:	mov	x0, #0x0                   	// #0
   1253c:	ldr	x3, [sp, #32]
   12540:	mov	x2, x0
   12544:	mov	w1, #0x5                   	// #5
   12548:	movk	w1, #0x200, lsl #16
   1254c:	ldr	x0, [sp, #72]
   12550:	bl	11aa8 <argp_fmtstream_point@@Base+0x19b8>
   12554:	str	x0, [sp, #64]
   12558:	ldr	x0, [sp, #64]
   1255c:	cmp	x0, #0x0
   12560:	b.eq	12598 <argp_fmtstream_point@@Base+0x24a8>  // b.none
   12564:	ldr	x0, [sp, #64]
   12568:	ldrb	w0, [x0]
   1256c:	cmp	w0, #0x0
   12570:	b.eq	12598 <argp_fmtstream_point@@Base+0x24a8>  // b.none
   12574:	mov	w1, #0xa                   	// #10
   12578:	ldr	x0, [sp, #24]
   1257c:	bl	aa50 <argp_fmtstream_putc@plt>
   12580:	ldr	x1, [sp, #64]
   12584:	ldr	x0, [sp, #24]
   12588:	bl	ac10 <argp_fmtstream_puts@plt>
   1258c:	mov	w1, #0xa                   	// #10
   12590:	ldr	x0, [sp, #24]
   12594:	bl	aa50 <argp_fmtstream_putc@plt>
   12598:	ldr	x0, [sp, #64]
   1259c:	cmp	x0, #0x0
   125a0:	b.eq	125bc <argp_fmtstream_point@@Base+0x24cc>  // b.none
   125a4:	ldr	x1, [sp, #64]
   125a8:	ldr	x0, [sp, #72]
   125ac:	cmp	x1, x0
   125b0:	b.eq	125bc <argp_fmtstream_point@@Base+0x24cc>  // b.none
   125b4:	ldr	x0, [sp, #64]
   125b8:	bl	b130 <free@plt>
   125bc:	nop
   125c0:	ldp	x29, x30, [sp], #96
   125c4:	ret
   125c8:	sub	sp, sp, #0x30
   125cc:	str	x0, [sp, #24]
   125d0:	str	x1, [sp, #16]
   125d4:	str	x2, [sp, #8]
   125d8:	str	x3, [sp]
   125dc:	ldr	x0, [sp]
   125e0:	str	x0, [sp, #40]
   125e4:	ldr	x0, [sp, #24]
   125e8:	ldr	x0, [x0, #16]
   125ec:	cmp	x0, #0x0
   125f0:	b.ne	12648 <argp_fmtstream_point@@Base+0x2558>  // b.any
   125f4:	ldr	x0, [sp, #16]
   125f8:	ldr	x0, [x0, #16]
   125fc:	cmp	x0, #0x0
   12600:	b.ne	12648 <argp_fmtstream_point@@Base+0x2558>  // b.any
   12604:	ldr	x0, [sp, #24]
   12608:	ldr	w1, [x0, #24]
   1260c:	ldr	x0, [sp, #16]
   12610:	ldr	w0, [x0, #24]
   12614:	orr	w0, w1, w0
   12618:	and	w0, w0, #0x10
   1261c:	cmp	w0, #0x0
   12620:	b.ne	12648 <argp_fmtstream_point@@Base+0x2558>  // b.any
   12624:	ldr	x0, [sp, #24]
   12628:	ldr	w3, [x0, #8]
   1262c:	ldr	x0, [sp, #40]
   12630:	ldr	x0, [x0]
   12634:	add	x2, x0, #0x1
   12638:	ldr	x1, [sp, #40]
   1263c:	str	x2, [x1]
   12640:	and	w1, w3, #0xff
   12644:	strb	w1, [x0]
   12648:	mov	w0, #0x0                   	// #0
   1264c:	add	sp, sp, #0x30
   12650:	ret
   12654:	stp	x29, x30, [sp, #-80]!
   12658:	mov	x29, sp
   1265c:	str	x0, [sp, #40]
   12660:	str	x1, [sp, #32]
   12664:	str	x2, [sp, #24]
   12668:	str	x3, [sp, #16]
   1266c:	ldr	x0, [sp, #16]
   12670:	str	x0, [sp, #64]
   12674:	ldr	x0, [sp, #40]
   12678:	ldr	x0, [x0, #16]
   1267c:	str	x0, [sp, #72]
   12680:	ldr	x0, [sp, #40]
   12684:	ldr	w1, [x0, #24]
   12688:	ldr	x0, [sp, #32]
   1268c:	ldr	w0, [x0, #24]
   12690:	orr	w0, w1, w0
   12694:	str	w0, [sp, #60]
   12698:	ldr	x0, [sp, #72]
   1269c:	cmp	x0, #0x0
   126a0:	b.ne	126b0 <argp_fmtstream_point@@Base+0x25c0>  // b.any
   126a4:	ldr	x0, [sp, #32]
   126a8:	ldr	x0, [x0, #16]
   126ac:	str	x0, [sp, #72]
   126b0:	ldr	x0, [sp, #72]
   126b4:	cmp	x0, #0x0
   126b8:	b.eq	12748 <argp_fmtstream_point@@Base+0x2658>  // b.none
   126bc:	ldr	w0, [sp, #60]
   126c0:	and	w0, w0, #0x10
   126c4:	cmp	w0, #0x0
   126c8:	b.ne	12748 <argp_fmtstream_point@@Base+0x2658>  // b.any
   126cc:	ldr	x1, [sp, #72]
   126d0:	ldr	x0, [sp, #24]
   126d4:	bl	b120 <dgettext@plt>
   126d8:	str	x0, [sp, #72]
   126dc:	ldr	w0, [sp, #60]
   126e0:	and	w0, w0, #0x1
   126e4:	cmp	w0, #0x0
   126e8:	b.eq	12710 <argp_fmtstream_point@@Base+0x2620>  // b.none
   126ec:	ldr	x0, [sp, #40]
   126f0:	ldr	w0, [x0, #8]
   126f4:	ldr	x3, [sp, #72]
   126f8:	mov	w2, w0
   126fc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   12700:	add	x1, x0, #0x3b8
   12704:	ldr	x0, [sp, #64]
   12708:	bl	af60 <argp_fmtstream_printf@plt>
   1270c:	b	12748 <argp_fmtstream_point@@Base+0x2658>
   12710:	ldr	x0, [sp, #72]
   12714:	bl	a820 <strlen@plt>
   12718:	add	x0, x0, #0x6
   1271c:	mov	x1, x0
   12720:	ldr	x0, [sp, #64]
   12724:	bl	119b4 <argp_fmtstream_point@@Base+0x18c4>
   12728:	ldr	x0, [sp, #40]
   1272c:	ldr	w0, [x0, #8]
   12730:	ldr	x3, [sp, #72]
   12734:	mov	w2, w0
   12738:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1273c:	add	x1, x0, #0x3c8
   12740:	ldr	x0, [sp, #64]
   12744:	bl	af60 <argp_fmtstream_printf@plt>
   12748:	mov	w0, #0x0                   	// #0
   1274c:	ldp	x29, x30, [sp], #80
   12750:	ret
   12754:	stp	x29, x30, [sp, #-80]!
   12758:	mov	x29, sp
   1275c:	str	x0, [sp, #40]
   12760:	str	x1, [sp, #32]
   12764:	str	x2, [sp, #24]
   12768:	str	x3, [sp, #16]
   1276c:	ldr	x0, [sp, #16]
   12770:	str	x0, [sp, #64]
   12774:	ldr	x0, [sp, #40]
   12778:	ldr	x0, [x0, #16]
   1277c:	str	x0, [sp, #72]
   12780:	ldr	x0, [sp, #40]
   12784:	ldr	w1, [x0, #24]
   12788:	ldr	x0, [sp, #32]
   1278c:	ldr	w0, [x0, #24]
   12790:	orr	w0, w1, w0
   12794:	str	w0, [sp, #60]
   12798:	ldr	x0, [sp, #72]
   1279c:	cmp	x0, #0x0
   127a0:	b.ne	127b0 <argp_fmtstream_point@@Base+0x26c0>  // b.any
   127a4:	ldr	x0, [sp, #32]
   127a8:	ldr	x0, [x0, #16]
   127ac:	str	x0, [sp, #72]
   127b0:	ldr	w0, [sp, #60]
   127b4:	and	w0, w0, #0x10
   127b8:	cmp	w0, #0x0
   127bc:	b.ne	12850 <argp_fmtstream_point@@Base+0x2760>  // b.any
   127c0:	ldr	x0, [sp, #72]
   127c4:	cmp	x0, #0x0
   127c8:	b.eq	12834 <argp_fmtstream_point@@Base+0x2744>  // b.none
   127cc:	ldr	x1, [sp, #72]
   127d0:	ldr	x0, [sp, #24]
   127d4:	bl	b120 <dgettext@plt>
   127d8:	str	x0, [sp, #72]
   127dc:	ldr	w0, [sp, #60]
   127e0:	and	w0, w0, #0x1
   127e4:	cmp	w0, #0x0
   127e8:	b.eq	12810 <argp_fmtstream_point@@Base+0x2720>  // b.none
   127ec:	ldr	x0, [sp, #40]
   127f0:	ldr	x0, [x0]
   127f4:	ldr	x3, [sp, #72]
   127f8:	mov	x2, x0
   127fc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   12800:	add	x1, x0, #0x3d8
   12804:	ldr	x0, [sp, #64]
   12808:	bl	af60 <argp_fmtstream_printf@plt>
   1280c:	b	12850 <argp_fmtstream_point@@Base+0x2760>
   12810:	ldr	x0, [sp, #40]
   12814:	ldr	x0, [x0]
   12818:	ldr	x3, [sp, #72]
   1281c:	mov	x2, x0
   12820:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   12824:	add	x1, x0, #0x3e8
   12828:	ldr	x0, [sp, #64]
   1282c:	bl	af60 <argp_fmtstream_printf@plt>
   12830:	b	12850 <argp_fmtstream_point@@Base+0x2760>
   12834:	ldr	x0, [sp, #40]
   12838:	ldr	x0, [x0]
   1283c:	mov	x2, x0
   12840:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   12844:	add	x1, x0, #0x3f8
   12848:	ldr	x0, [sp, #64]
   1284c:	bl	af60 <argp_fmtstream_printf@plt>
   12850:	mov	w0, #0x0                   	// #0
   12854:	ldp	x29, x30, [sp], #80
   12858:	ret
   1285c:	stp	x29, x30, [sp, #-128]!
   12860:	mov	x29, sp
   12864:	str	x0, [x29, #24]
   12868:	str	x1, [x29, #16]
   1286c:	ldr	x0, [x29, #24]
   12870:	ldr	w0, [x0, #8]
   12874:	cmp	w0, #0x0
   12878:	b.eq	12adc <argp_fmtstream_point@@Base+0x29ec>  // b.none
   1287c:	ldr	x0, [x29, #24]
   12880:	ldr	x0, [x0, #16]
   12884:	bl	a820 <strlen@plt>
   12888:	add	x0, x0, #0x1
   1288c:	add	x0, x0, #0xf
   12890:	lsr	x0, x0, #4
   12894:	lsl	x0, x0, #4
   12898:	sub	sp, sp, x0
   1289c:	mov	x0, sp
   128a0:	add	x0, x0, #0xf
   128a4:	lsr	x0, x0, #4
   128a8:	lsl	x0, x0, #4
   128ac:	str	x0, [x29, #104]
   128b0:	ldr	x0, [x29, #104]
   128b4:	str	x0, [x29, #32]
   128b8:	ldr	x0, [x29, #24]
   128bc:	ldr	x0, [x0]
   128c0:	str	x0, [x29, #112]
   128c4:	ldr	x0, [x29, #24]
   128c8:	ldr	w0, [x0, #8]
   128cc:	str	w0, [x29, #124]
   128d0:	b	12914 <argp_fmtstream_point@@Base+0x2824>
   128d4:	ldr	x0, [x29, #112]
   128d8:	ldr	x0, [x0, #40]
   128dc:	ldr	x0, [x0, #48]
   128e0:	add	x1, x29, #0x20
   128e4:	mov	x3, x1
   128e8:	mov	x2, x0
   128ec:	adrp	x0, 12000 <argp_fmtstream_point@@Base+0x1f10>
   128f0:	add	x1, x0, #0x5c8
   128f4:	ldr	x0, [x29, #112]
   128f8:	bl	10c18 <argp_fmtstream_point@@Base+0xb28>
   128fc:	ldr	x0, [x29, #112]
   12900:	add	x0, x0, #0x38
   12904:	str	x0, [x29, #112]
   12908:	ldr	w0, [x29, #124]
   1290c:	sub	w0, w0, #0x1
   12910:	str	w0, [x29, #124]
   12914:	ldr	w0, [x29, #124]
   12918:	cmp	w0, #0x0
   1291c:	b.ne	128d4 <argp_fmtstream_point@@Base+0x27e4>  // b.any
   12920:	ldr	x0, [x29, #32]
   12924:	ldr	x1, [x29, #104]
   12928:	cmp	x1, x0
   1292c:	b.cs	12954 <argp_fmtstream_point@@Base+0x2864>  // b.hs, b.nlast
   12930:	ldr	x0, [x29, #32]
   12934:	add	x1, x0, #0x1
   12938:	str	x1, [x29, #32]
   1293c:	strb	wzr, [x0]
   12940:	ldr	x2, [x29, #104]
   12944:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   12948:	add	x1, x0, #0x400
   1294c:	ldr	x0, [x29, #16]
   12950:	bl	af60 <argp_fmtstream_printf@plt>
   12954:	ldr	x0, [x29, #24]
   12958:	ldr	x0, [x0]
   1295c:	str	x0, [x29, #112]
   12960:	ldr	x0, [x29, #24]
   12964:	ldr	w0, [x0, #8]
   12968:	str	w0, [x29, #124]
   1296c:	b	129ac <argp_fmtstream_point@@Base+0x28bc>
   12970:	ldr	x0, [x29, #112]
   12974:	ldr	x0, [x0, #40]
   12978:	ldr	x0, [x0, #48]
   1297c:	ldr	x3, [x29, #16]
   12980:	mov	x2, x0
   12984:	adrp	x0, 12000 <argp_fmtstream_point@@Base+0x1f10>
   12988:	add	x1, x0, #0x654
   1298c:	ldr	x0, [x29, #112]
   12990:	bl	10c18 <argp_fmtstream_point@@Base+0xb28>
   12994:	ldr	x0, [x29, #112]
   12998:	add	x0, x0, #0x38
   1299c:	str	x0, [x29, #112]
   129a0:	ldr	w0, [x29, #124]
   129a4:	sub	w0, w0, #0x1
   129a8:	str	w0, [x29, #124]
   129ac:	ldr	w0, [x29, #124]
   129b0:	cmp	w0, #0x0
   129b4:	b.ne	12970 <argp_fmtstream_point@@Base+0x2880>  // b.any
   129b8:	ldr	x0, [x29, #24]
   129bc:	ldr	x0, [x0]
   129c0:	str	x0, [x29, #112]
   129c4:	ldr	x0, [x29, #24]
   129c8:	ldr	w0, [x0, #8]
   129cc:	str	w0, [x29, #124]
   129d0:	b	12ad0 <argp_fmtstream_point@@Base+0x29e0>
   129d4:	ldr	x0, [x29, #112]
   129d8:	ldr	x0, [x0, #40]
   129dc:	ldr	x0, [x0, #48]
   129e0:	ldr	x1, [x29, #112]
   129e4:	str	x1, [x29, #96]
   129e8:	adrp	x1, 12000 <argp_fmtstream_point@@Base+0x1f10>
   129ec:	add	x1, x1, #0x754
   129f0:	str	x1, [x29, #88]
   129f4:	str	x0, [x29, #80]
   129f8:	ldr	x0, [x29, #16]
   129fc:	str	x0, [x29, #72]
   12a00:	str	wzr, [x29, #68]
   12a04:	ldr	x0, [x29, #96]
   12a08:	ldr	x0, [x0]
   12a0c:	str	x0, [x29, #56]
   12a10:	ldr	x0, [x29, #56]
   12a14:	str	x0, [x29, #48]
   12a18:	ldr	x0, [x29, #96]
   12a1c:	ldr	w0, [x0, #8]
   12a20:	str	w0, [x29, #44]
   12a24:	b	12a9c <argp_fmtstream_point@@Base+0x29ac>
   12a28:	ldr	x0, [x29, #48]
   12a2c:	ldr	x0, [x0]
   12a30:	cmp	x0, #0x0
   12a34:	b.eq	12a84 <argp_fmtstream_point@@Base+0x2994>  // b.none
   12a38:	ldr	x0, [x29, #48]
   12a3c:	ldr	w0, [x0, #24]
   12a40:	and	w0, w0, #0x4
   12a44:	cmp	w0, #0x0
   12a48:	b.ne	12a54 <argp_fmtstream_point@@Base+0x2964>  // b.any
   12a4c:	ldr	x0, [x29, #48]
   12a50:	str	x0, [x29, #56]
   12a54:	ldr	x0, [x29, #48]
   12a58:	ldr	w0, [x0, #24]
   12a5c:	and	w0, w0, #0x2
   12a60:	cmp	w0, #0x0
   12a64:	b.ne	12a84 <argp_fmtstream_point@@Base+0x2994>  // b.any
   12a68:	ldr	x4, [x29, #88]
   12a6c:	ldr	x3, [x29, #72]
   12a70:	ldr	x2, [x29, #80]
   12a74:	ldr	x1, [x29, #56]
   12a78:	ldr	x0, [x29, #48]
   12a7c:	blr	x4
   12a80:	str	w0, [x29, #68]
   12a84:	ldr	x0, [x29, #48]
   12a88:	add	x0, x0, #0x30
   12a8c:	str	x0, [x29, #48]
   12a90:	ldr	w0, [x29, #44]
   12a94:	sub	w0, w0, #0x1
   12a98:	str	w0, [x29, #44]
   12a9c:	ldr	w0, [x29, #44]
   12aa0:	cmp	w0, #0x0
   12aa4:	b.eq	12ab4 <argp_fmtstream_point@@Base+0x29c4>  // b.none
   12aa8:	ldr	w0, [x29, #68]
   12aac:	cmp	w0, #0x0
   12ab0:	b.eq	12a28 <argp_fmtstream_point@@Base+0x2938>  // b.none
   12ab4:	nop
   12ab8:	ldr	x0, [x29, #112]
   12abc:	add	x0, x0, #0x38
   12ac0:	str	x0, [x29, #112]
   12ac4:	ldr	w0, [x29, #124]
   12ac8:	sub	w0, w0, #0x1
   12acc:	str	w0, [x29, #124]
   12ad0:	ldr	w0, [x29, #124]
   12ad4:	cmp	w0, #0x0
   12ad8:	b.ne	129d4 <argp_fmtstream_point@@Base+0x28e4>  // b.any
   12adc:	nop
   12ae0:	mov	sp, x29
   12ae4:	ldp	x29, x30, [sp], #128
   12ae8:	ret
   12aec:	stp	x29, x30, [sp, #-64]!
   12af0:	mov	x29, sp
   12af4:	str	x0, [sp, #24]
   12af8:	str	x1, [sp, #16]
   12afc:	ldr	x0, [sp, #24]
   12b00:	ldr	x0, [x0, #32]
   12b04:	str	x0, [sp, #56]
   12b08:	ldr	x1, [sp, #16]
   12b0c:	ldr	x0, [sp, #24]
   12b10:	bl	107b0 <argp_fmtstream_point@@Base+0x6c0>
   12b14:	str	x0, [sp, #48]
   12b18:	ldr	x0, [sp, #56]
   12b1c:	cmp	x0, #0x0
   12b20:	b.eq	12bc8 <argp_fmtstream_point@@Base+0x2ad8>  // b.none
   12b24:	b	12bb8 <argp_fmtstream_point@@Base+0x2ac8>
   12b28:	ldr	x0, [sp, #56]
   12b2c:	ldr	w0, [x0, #24]
   12b30:	cmp	w0, #0x0
   12b34:	b.ne	12b48 <argp_fmtstream_point@@Base+0x2a58>  // b.any
   12b38:	ldr	x0, [sp, #56]
   12b3c:	ldr	x0, [x0, #16]
   12b40:	cmp	x0, #0x0
   12b44:	b.eq	12b88 <argp_fmtstream_point@@Base+0x2a98>  // b.none
   12b48:	ldr	x0, [sp, #56]
   12b4c:	ldr	w6, [x0, #24]
   12b50:	ldr	x0, [sp, #56]
   12b54:	ldr	x2, [x0, #16]
   12b58:	ldr	x0, [sp, #24]
   12b5c:	ldr	x0, [x0, #32]
   12b60:	ldr	x1, [sp, #56]
   12b64:	sub	x0, x1, x0
   12b68:	asr	x0, x0, #5
   12b6c:	ldr	x5, [sp, #24]
   12b70:	ldr	x4, [sp, #16]
   12b74:	mov	w3, w0
   12b78:	mov	w1, w6
   12b7c:	ldr	x0, [sp, #48]
   12b80:	bl	10ad4 <argp_fmtstream_point@@Base+0x9e4>
   12b84:	b	12b8c <argp_fmtstream_point@@Base+0x2a9c>
   12b88:	ldr	x0, [sp, #16]
   12b8c:	str	x0, [sp, #40]
   12b90:	ldr	x0, [sp, #56]
   12b94:	ldr	x0, [x0]
   12b98:	ldr	x1, [sp, #40]
   12b9c:	bl	12aec <argp_fmtstream_point@@Base+0x29fc>
   12ba0:	mov	x1, x0
   12ba4:	ldr	x0, [sp, #48]
   12ba8:	bl	115a0 <argp_fmtstream_point@@Base+0x14b0>
   12bac:	ldr	x0, [sp, #56]
   12bb0:	add	x0, x0, #0x20
   12bb4:	str	x0, [sp, #56]
   12bb8:	ldr	x0, [sp, #56]
   12bbc:	ldr	x0, [x0]
   12bc0:	cmp	x0, #0x0
   12bc4:	b.ne	12b28 <argp_fmtstream_point@@Base+0x2a38>  // b.any
   12bc8:	ldr	x0, [sp, #48]
   12bcc:	ldp	x29, x30, [sp], #64
   12bd0:	ret
   12bd4:	stp	x29, x30, [sp, #-48]!
   12bd8:	mov	x29, sp
   12bdc:	str	x0, [sp, #24]
   12be0:	str	xzr, [sp, #40]
   12be4:	ldr	x0, [sp, #24]
   12be8:	ldr	x0, [x0, #32]
   12bec:	str	x0, [sp, #32]
   12bf0:	ldr	x0, [sp, #24]
   12bf4:	ldr	x0, [x0, #16]
   12bf8:	cmp	x0, #0x0
   12bfc:	b.eq	12c24 <argp_fmtstream_point@@Base+0x2b34>  // b.none
   12c00:	ldr	x0, [sp, #24]
   12c04:	ldr	x0, [x0, #16]
   12c08:	mov	w1, #0xa                   	// #10
   12c0c:	bl	b270 <strchr@plt>
   12c10:	cmp	x0, #0x0
   12c14:	b.eq	12c24 <argp_fmtstream_point@@Base+0x2b34>  // b.none
   12c18:	ldr	x0, [sp, #40]
   12c1c:	add	x0, x0, #0x1
   12c20:	str	x0, [sp, #40]
   12c24:	ldr	x0, [sp, #32]
   12c28:	cmp	x0, #0x0
   12c2c:	b.eq	12c68 <argp_fmtstream_point@@Base+0x2b78>  // b.none
   12c30:	b	12c58 <argp_fmtstream_point@@Base+0x2b68>
   12c34:	ldr	x0, [sp, #32]
   12c38:	add	x1, x0, #0x20
   12c3c:	str	x1, [sp, #32]
   12c40:	ldr	x0, [x0]
   12c44:	bl	12bd4 <argp_fmtstream_point@@Base+0x2ae4>
   12c48:	mov	x1, x0
   12c4c:	ldr	x0, [sp, #40]
   12c50:	add	x0, x0, x1
   12c54:	str	x0, [sp, #40]
   12c58:	ldr	x0, [sp, #32]
   12c5c:	ldr	x0, [x0]
   12c60:	cmp	x0, #0x0
   12c64:	b.ne	12c34 <argp_fmtstream_point@@Base+0x2b44>  // b.any
   12c68:	ldr	x0, [sp, #40]
   12c6c:	ldp	x29, x30, [sp], #48
   12c70:	ret
   12c74:	stp	x29, x30, [sp, #-128]!
   12c78:	mov	x29, sp
   12c7c:	str	x0, [sp, #56]
   12c80:	str	x1, [sp, #48]
   12c84:	str	x2, [sp, #40]
   12c88:	str	w3, [sp, #36]
   12c8c:	str	x4, [sp, #24]
   12c90:	ldr	x0, [sp, #40]
   12c94:	ldr	x0, [x0]
   12c98:	str	x0, [sp, #80]
   12c9c:	str	wzr, [sp, #124]
   12ca0:	ldr	x0, [sp, #56]
   12ca4:	ldr	x0, [x0, #32]
   12ca8:	str	x0, [sp, #112]
   12cac:	ldr	x0, [sp, #56]
   12cb0:	ldr	x0, [x0, #16]
   12cb4:	cmp	x0, #0x0
   12cb8:	b.eq	12cdc <argp_fmtstream_point@@Base+0x2bec>  // b.none
   12cbc:	ldr	x0, [sp, #56]
   12cc0:	ldr	x2, [x0, #48]
   12cc4:	ldr	x0, [sp, #56]
   12cc8:	ldr	x0, [x0, #16]
   12ccc:	mov	x1, x0
   12cd0:	mov	x0, x2
   12cd4:	bl	b120 <dgettext@plt>
   12cd8:	b	12ce0 <argp_fmtstream_point@@Base+0x2bf0>
   12cdc:	mov	x0, #0x0                   	// #0
   12ce0:	str	x0, [sp, #72]
   12ce4:	ldr	x3, [sp, #48]
   12ce8:	ldr	x2, [sp, #56]
   12cec:	mov	w1, #0x6                   	// #6
   12cf0:	movk	w1, #0x200, lsl #16
   12cf4:	ldr	x0, [sp, #72]
   12cf8:	bl	11aa8 <argp_fmtstream_point@@Base+0x19b8>
   12cfc:	str	x0, [sp, #64]
   12d00:	str	xzr, [sp, #104]
   12d04:	ldr	x0, [sp, #64]
   12d08:	cmp	x0, #0x0
   12d0c:	b.eq	12dd4 <argp_fmtstream_point@@Base+0x2ce4>  // b.none
   12d10:	ldr	x0, [sp, #64]
   12d14:	str	x0, [sp, #96]
   12d18:	mov	w1, #0xa                   	// #10
   12d1c:	ldr	x0, [sp, #96]
   12d20:	bl	b4a0 <strchrnul@plt>
   12d24:	str	x0, [sp, #104]
   12d28:	ldr	x0, [sp, #104]
   12d2c:	ldrb	w0, [x0]
   12d30:	cmp	w0, #0x0
   12d34:	b.eq	12d9c <argp_fmtstream_point@@Base+0x2cac>  // b.none
   12d38:	mov	w0, #0x1                   	// #1
   12d3c:	str	w0, [sp, #124]
   12d40:	str	wzr, [sp, #92]
   12d44:	b	12d70 <argp_fmtstream_point@@Base+0x2c80>
   12d48:	ldr	x0, [sp, #104]
   12d4c:	add	x0, x0, #0x1
   12d50:	str	x0, [sp, #96]
   12d54:	mov	w1, #0xa                   	// #10
   12d58:	ldr	x0, [sp, #96]
   12d5c:	bl	b4a0 <strchrnul@plt>
   12d60:	str	x0, [sp, #104]
   12d64:	ldr	w0, [sp, #92]
   12d68:	add	w0, w0, #0x1
   12d6c:	str	w0, [sp, #92]
   12d70:	ldr	x0, [sp, #80]
   12d74:	ldrb	w0, [x0]
   12d78:	mov	w1, w0
   12d7c:	ldr	w0, [sp, #92]
   12d80:	cmp	w0, w1
   12d84:	b.lt	12d48 <argp_fmtstream_point@@Base+0x2c58>  // b.tstop
   12d88:	ldr	x0, [sp, #40]
   12d8c:	ldr	x0, [x0]
   12d90:	add	x1, x0, #0x1
   12d94:	ldr	x0, [sp, #40]
   12d98:	str	x1, [x0]
   12d9c:	ldr	x0, [sp, #104]
   12da0:	add	x1, x0, #0x1
   12da4:	ldr	x0, [sp, #96]
   12da8:	sub	x0, x1, x0
   12dac:	mov	x1, x0
   12db0:	ldr	x0, [sp, #24]
   12db4:	bl	119b4 <argp_fmtstream_point@@Base+0x18c4>
   12db8:	ldr	x1, [sp, #104]
   12dbc:	ldr	x0, [sp, #96]
   12dc0:	sub	x0, x1, x0
   12dc4:	mov	x2, x0
   12dc8:	ldr	x1, [sp, #96]
   12dcc:	ldr	x0, [sp, #24]
   12dd0:	bl	b5b0 <argp_fmtstream_write@plt>
   12dd4:	ldr	x0, [sp, #64]
   12dd8:	cmp	x0, #0x0
   12ddc:	b.eq	12df8 <argp_fmtstream_point@@Base+0x2d08>  // b.none
   12de0:	ldr	x1, [sp, #64]
   12de4:	ldr	x0, [sp, #72]
   12de8:	cmp	x1, x0
   12dec:	b.eq	12df8 <argp_fmtstream_point@@Base+0x2d08>  // b.none
   12df0:	ldr	x0, [sp, #64]
   12df4:	bl	b130 <free@plt>
   12df8:	ldr	x0, [sp, #112]
   12dfc:	cmp	x0, #0x0
   12e00:	b.eq	12e4c <argp_fmtstream_point@@Base+0x2d5c>  // b.none
   12e04:	b	12e3c <argp_fmtstream_point@@Base+0x2d4c>
   12e08:	ldr	x0, [sp, #112]
   12e0c:	add	x1, x0, #0x20
   12e10:	str	x1, [sp, #112]
   12e14:	ldr	x0, [x0]
   12e18:	ldr	x4, [sp, #24]
   12e1c:	ldr	w3, [sp, #36]
   12e20:	ldr	x2, [sp, #40]
   12e24:	ldr	x1, [sp, #48]
   12e28:	bl	12c74 <argp_fmtstream_point@@Base+0x2b84>
   12e2c:	cmp	w0, #0x0
   12e30:	cset	w0, eq  // eq = none
   12e34:	and	w0, w0, #0xff
   12e38:	str	w0, [sp, #36]
   12e3c:	ldr	x0, [sp, #112]
   12e40:	ldr	x0, [x0]
   12e44:	cmp	x0, #0x0
   12e48:	b.ne	12e08 <argp_fmtstream_point@@Base+0x2d18>  // b.any
   12e4c:	ldr	w0, [sp, #36]
   12e50:	cmp	w0, #0x0
   12e54:	b.eq	12eac <argp_fmtstream_point@@Base+0x2dbc>  // b.none
   12e58:	ldr	w0, [sp, #124]
   12e5c:	cmp	w0, #0x0
   12e60:	b.eq	12eac <argp_fmtstream_point@@Base+0x2dbc>  // b.none
   12e64:	ldr	x0, [sp, #104]
   12e68:	ldrb	w0, [x0]
   12e6c:	cmp	w0, #0x0
   12e70:	b.eq	12e94 <argp_fmtstream_point@@Base+0x2da4>  // b.none
   12e74:	ldr	x0, [sp, #80]
   12e78:	ldrb	w0, [x0]
   12e7c:	add	w0, w0, #0x1
   12e80:	and	w1, w0, #0xff
   12e84:	ldr	x0, [sp, #80]
   12e88:	strb	w1, [x0]
   12e8c:	str	wzr, [sp, #36]
   12e90:	b	12eac <argp_fmtstream_point@@Base+0x2dbc>
   12e94:	ldr	x0, [sp, #80]
   12e98:	ldrb	w0, [x0]
   12e9c:	cmp	w0, #0x0
   12ea0:	b.eq	12eac <argp_fmtstream_point@@Base+0x2dbc>  // b.none
   12ea4:	ldr	x0, [sp, #80]
   12ea8:	strb	wzr, [x0]
   12eac:	ldr	w0, [sp, #36]
   12eb0:	cmp	w0, #0x0
   12eb4:	cset	w0, eq  // eq = none
   12eb8:	and	w0, w0, #0xff
   12ebc:	ldp	x29, x30, [sp], #128
   12ec0:	ret
   12ec4:	stp	x29, x30, [sp, #-128]!
   12ec8:	mov	x29, sp
   12ecc:	str	x0, [sp, #56]
   12ed0:	str	x1, [sp, #48]
   12ed4:	str	w2, [sp, #44]
   12ed8:	str	w3, [sp, #40]
   12edc:	str	w4, [sp, #36]
   12ee0:	str	x5, [sp, #24]
   12ee4:	str	xzr, [sp, #104]
   12ee8:	str	wzr, [sp, #100]
   12eec:	str	xzr, [sp, #88]
   12ef0:	ldr	x0, [sp, #56]
   12ef4:	ldr	x0, [x0, #24]
   12ef8:	cmp	x0, #0x0
   12efc:	b.eq	12f20 <argp_fmtstream_point@@Base+0x2e30>  // b.none
   12f00:	ldr	x0, [sp, #56]
   12f04:	ldr	x2, [x0, #48]
   12f08:	ldr	x0, [sp, #56]
   12f0c:	ldr	x0, [x0, #24]
   12f10:	mov	x1, x0
   12f14:	mov	x0, x2
   12f18:	bl	b120 <dgettext@plt>
   12f1c:	b	12f24 <argp_fmtstream_point@@Base+0x2e34>
   12f20:	mov	x0, #0x0                   	// #0
   12f24:	str	x0, [sp, #72]
   12f28:	ldr	x0, [sp, #56]
   12f2c:	ldr	x0, [x0, #32]
   12f30:	str	x0, [sp, #80]
   12f34:	ldr	x0, [sp, #72]
   12f38:	cmp	x0, #0x0
   12f3c:	b.eq	12fb8 <argp_fmtstream_point@@Base+0x2ec8>  // b.none
   12f40:	mov	w1, #0xb                   	// #11
   12f44:	ldr	x0, [sp, #72]
   12f48:	bl	b270 <strchr@plt>
   12f4c:	str	x0, [sp, #64]
   12f50:	ldr	w0, [sp, #44]
   12f54:	cmp	w0, #0x0
   12f58:	b.eq	12f7c <argp_fmtstream_point@@Base+0x2e8c>  // b.none
   12f5c:	ldr	x0, [sp, #64]
   12f60:	cmp	x0, #0x0
   12f64:	b.eq	12f74 <argp_fmtstream_point@@Base+0x2e84>  // b.none
   12f68:	ldr	x0, [sp, #64]
   12f6c:	add	x0, x0, #0x1
   12f70:	b	12f80 <argp_fmtstream_point@@Base+0x2e90>
   12f74:	mov	x0, #0x0                   	// #0
   12f78:	b	12f80 <argp_fmtstream_point@@Base+0x2e90>
   12f7c:	ldr	x0, [sp, #72]
   12f80:	str	x0, [sp, #112]
   12f84:	ldr	w0, [sp, #44]
   12f88:	cmp	w0, #0x0
   12f8c:	b.ne	12fac <argp_fmtstream_point@@Base+0x2ebc>  // b.any
   12f90:	ldr	x0, [sp, #64]
   12f94:	cmp	x0, #0x0
   12f98:	b.eq	12fac <argp_fmtstream_point@@Base+0x2ebc>  // b.none
   12f9c:	ldr	x1, [sp, #64]
   12fa0:	ldr	x0, [sp, #72]
   12fa4:	sub	x0, x1, x0
   12fa8:	b	12fb0 <argp_fmtstream_point@@Base+0x2ec0>
   12fac:	mov	x0, #0x0                   	// #0
   12fb0:	str	x0, [sp, #88]
   12fb4:	b	12fbc <argp_fmtstream_point@@Base+0x2ecc>
   12fb8:	str	xzr, [sp, #112]
   12fbc:	ldr	x0, [sp, #56]
   12fc0:	ldr	x0, [x0, #40]
   12fc4:	cmp	x0, #0x0
   12fc8:	b.eq	13034 <argp_fmtstream_point@@Base+0x2f44>  // b.none
   12fcc:	ldr	x0, [sp, #88]
   12fd0:	cmp	x0, #0x0
   12fd4:	b.eq	12fe8 <argp_fmtstream_point@@Base+0x2ef8>  // b.none
   12fd8:	ldr	x1, [sp, #88]
   12fdc:	ldr	x0, [sp, #112]
   12fe0:	bl	b230 <strndup@plt>
   12fe4:	str	x0, [sp, #112]
   12fe8:	ldr	x1, [sp, #48]
   12fec:	ldr	x0, [sp, #56]
   12ff0:	bl	b380 <_argp_input@plt>
   12ff4:	str	x0, [sp, #104]
   12ff8:	ldr	x0, [sp, #56]
   12ffc:	ldr	x3, [x0, #40]
   13000:	ldr	w0, [sp, #44]
   13004:	cmp	w0, #0x0
   13008:	b.eq	13018 <argp_fmtstream_point@@Base+0x2f28>  // b.none
   1300c:	mov	w0, #0x2                   	// #2
   13010:	movk	w0, #0x200, lsl #16
   13014:	b	13020 <argp_fmtstream_point@@Base+0x2f30>
   13018:	mov	w0, #0x1                   	// #1
   1301c:	movk	w0, #0x200, lsl #16
   13020:	ldr	x2, [sp, #104]
   13024:	ldr	x1, [sp, #112]
   13028:	blr	x3
   1302c:	str	x0, [sp, #120]
   13030:	b	1303c <argp_fmtstream_point@@Base+0x2f4c>
   13034:	ldr	x0, [sp, #112]
   13038:	str	x0, [sp, #120]
   1303c:	ldr	x0, [sp, #120]
   13040:	cmp	x0, #0x0
   13044:	b.eq	130cc <argp_fmtstream_point@@Base+0x2fdc>  // b.none
   13048:	ldr	w0, [sp, #40]
   1304c:	cmp	w0, #0x0
   13050:	b.eq	13060 <argp_fmtstream_point@@Base+0x2f70>  // b.none
   13054:	mov	w1, #0xa                   	// #10
   13058:	ldr	x0, [sp, #24]
   1305c:	bl	aa50 <argp_fmtstream_putc@plt>
   13060:	ldr	x1, [sp, #120]
   13064:	ldr	x0, [sp, #112]
   13068:	cmp	x1, x0
   1306c:	b.ne	13090 <argp_fmtstream_point@@Base+0x2fa0>  // b.any
   13070:	ldr	x0, [sp, #88]
   13074:	cmp	x0, #0x0
   13078:	b.eq	13090 <argp_fmtstream_point@@Base+0x2fa0>  // b.none
   1307c:	ldr	x2, [sp, #88]
   13080:	ldr	x1, [sp, #112]
   13084:	ldr	x0, [sp, #24]
   13088:	bl	b5b0 <argp_fmtstream_write@plt>
   1308c:	b	1309c <argp_fmtstream_point@@Base+0x2fac>
   13090:	ldr	x1, [sp, #120]
   13094:	ldr	x0, [sp, #24]
   13098:	bl	ac10 <argp_fmtstream_puts@plt>
   1309c:	ldr	x0, [sp, #24]
   130a0:	bl	af30 <argp_fmtstream_point@plt>
   130a4:	mov	x1, x0
   130a8:	ldr	x0, [sp, #24]
   130ac:	ldr	x0, [x0, #8]
   130b0:	cmp	x1, x0
   130b4:	b.ls	130c4 <argp_fmtstream_point@@Base+0x2fd4>  // b.plast
   130b8:	mov	w1, #0xa                   	// #10
   130bc:	ldr	x0, [sp, #24]
   130c0:	bl	aa50 <argp_fmtstream_putc@plt>
   130c4:	mov	w0, #0x1                   	// #1
   130c8:	str	w0, [sp, #100]
   130cc:	ldr	x0, [sp, #120]
   130d0:	cmp	x0, #0x0
   130d4:	b.eq	130f0 <argp_fmtstream_point@@Base+0x3000>  // b.none
   130d8:	ldr	x1, [sp, #120]
   130dc:	ldr	x0, [sp, #112]
   130e0:	cmp	x1, x0
   130e4:	b.eq	130f0 <argp_fmtstream_point@@Base+0x3000>  // b.none
   130e8:	ldr	x0, [sp, #120]
   130ec:	bl	b130 <free@plt>
   130f0:	ldr	x0, [sp, #112]
   130f4:	cmp	x0, #0x0
   130f8:	b.eq	13120 <argp_fmtstream_point@@Base+0x3030>  // b.none
   130fc:	ldr	x0, [sp, #88]
   13100:	cmp	x0, #0x0
   13104:	b.eq	13120 <argp_fmtstream_point@@Base+0x3030>  // b.none
   13108:	ldr	x0, [sp, #56]
   1310c:	ldr	x0, [x0, #40]
   13110:	cmp	x0, #0x0
   13114:	b.eq	13120 <argp_fmtstream_point@@Base+0x3030>  // b.none
   13118:	ldr	x0, [sp, #112]
   1311c:	bl	b130 <free@plt>
   13120:	ldr	w0, [sp, #44]
   13124:	cmp	w0, #0x0
   13128:	b.eq	131d0 <argp_fmtstream_point@@Base+0x30e0>  // b.none
   1312c:	ldr	x0, [sp, #56]
   13130:	ldr	x0, [x0, #40]
   13134:	cmp	x0, #0x0
   13138:	b.eq	131d0 <argp_fmtstream_point@@Base+0x30e0>  // b.none
   1313c:	ldr	x0, [sp, #56]
   13140:	ldr	x3, [x0, #40]
   13144:	ldr	x2, [sp, #104]
   13148:	mov	x1, #0x0                   	// #0
   1314c:	mov	w0, #0x4                   	// #4
   13150:	movk	w0, #0x200, lsl #16
   13154:	blr	x3
   13158:	str	x0, [sp, #120]
   1315c:	ldr	x0, [sp, #120]
   13160:	cmp	x0, #0x0
   13164:	b.eq	131d0 <argp_fmtstream_point@@Base+0x30e0>  // b.none
   13168:	ldr	w0, [sp, #100]
   1316c:	cmp	w0, #0x0
   13170:	b.ne	13180 <argp_fmtstream_point@@Base+0x3090>  // b.any
   13174:	ldr	w0, [sp, #40]
   13178:	cmp	w0, #0x0
   1317c:	b.eq	1318c <argp_fmtstream_point@@Base+0x309c>  // b.none
   13180:	mov	w1, #0xa                   	// #10
   13184:	ldr	x0, [sp, #24]
   13188:	bl	aa50 <argp_fmtstream_putc@plt>
   1318c:	ldr	x1, [sp, #120]
   13190:	ldr	x0, [sp, #24]
   13194:	bl	ac10 <argp_fmtstream_puts@plt>
   13198:	ldr	x0, [sp, #120]
   1319c:	bl	b130 <free@plt>
   131a0:	ldr	x0, [sp, #24]
   131a4:	bl	af30 <argp_fmtstream_point@plt>
   131a8:	mov	x1, x0
   131ac:	ldr	x0, [sp, #24]
   131b0:	ldr	x0, [x0, #8]
   131b4:	cmp	x1, x0
   131b8:	b.ls	131c8 <argp_fmtstream_point@@Base+0x30d8>  // b.plast
   131bc:	mov	w1, #0xa                   	// #10
   131c0:	ldr	x0, [sp, #24]
   131c4:	bl	aa50 <argp_fmtstream_putc@plt>
   131c8:	mov	w0, #0x1                   	// #1
   131cc:	str	w0, [sp, #100]
   131d0:	ldr	x0, [sp, #80]
   131d4:	cmp	x0, #0x0
   131d8:	b.eq	13268 <argp_fmtstream_point@@Base+0x3178>  // b.none
   131dc:	b	13240 <argp_fmtstream_point@@Base+0x3150>
   131e0:	ldr	x0, [sp, #80]
   131e4:	add	x1, x0, #0x20
   131e8:	str	x1, [sp, #80]
   131ec:	ldr	x6, [x0]
   131f0:	ldr	w0, [sp, #100]
   131f4:	cmp	w0, #0x0
   131f8:	b.ne	13208 <argp_fmtstream_point@@Base+0x3118>  // b.any
   131fc:	ldr	w0, [sp, #40]
   13200:	cmp	w0, #0x0
   13204:	b.eq	13210 <argp_fmtstream_point@@Base+0x3120>  // b.none
   13208:	mov	w0, #0x1                   	// #1
   1320c:	b	13214 <argp_fmtstream_point@@Base+0x3124>
   13210:	mov	w0, #0x0                   	// #0
   13214:	ldr	x5, [sp, #24]
   13218:	ldr	w4, [sp, #36]
   1321c:	mov	w3, w0
   13220:	ldr	w2, [sp, #44]
   13224:	ldr	x1, [sp, #48]
   13228:	mov	x0, x6
   1322c:	bl	12ec4 <argp_fmtstream_point@@Base+0x2dd4>
   13230:	mov	w1, w0
   13234:	ldr	w0, [sp, #100]
   13238:	orr	w0, w0, w1
   1323c:	str	w0, [sp, #100]
   13240:	ldr	x0, [sp, #80]
   13244:	ldr	x0, [x0]
   13248:	cmp	x0, #0x0
   1324c:	b.eq	13268 <argp_fmtstream_point@@Base+0x3178>  // b.none
   13250:	ldr	w0, [sp, #36]
   13254:	cmp	w0, #0x0
   13258:	b.eq	131e0 <argp_fmtstream_point@@Base+0x30f0>  // b.none
   1325c:	ldr	w0, [sp, #100]
   13260:	cmp	w0, #0x0
   13264:	b.eq	131e0 <argp_fmtstream_point@@Base+0x30f0>  // b.none
   13268:	ldr	w0, [sp, #100]
   1326c:	ldp	x29, x30, [sp], #128
   13270:	ret
   13274:	stp	x29, x30, [sp, #-144]!
   13278:	mov	x29, sp
   1327c:	str	x0, [x29, #56]
   13280:	str	x1, [x29, #48]
   13284:	str	x2, [x29, #40]
   13288:	str	w3, [x29, #36]
   1328c:	str	x4, [x29, #24]
   13290:	str	wzr, [x29, #140]
   13294:	str	xzr, [x29, #128]
   13298:	ldr	x0, [x29, #40]
   1329c:	cmp	x0, #0x0
   132a0:	b.eq	136cc <argp_fmtstream_point@@Base+0x35dc>  // b.none
   132a4:	ldr	x0, [x29, #40]
   132a8:	bl	a890 <flockfile@plt>
   132ac:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   132b0:	add	x0, x0, #0x358
   132b4:	ldr	w0, [x0, #36]
   132b8:	cmp	w0, #0x0
   132bc:	b.ne	132c8 <argp_fmtstream_point@@Base+0x31d8>  // b.any
   132c0:	ldr	x0, [x29, #48]
   132c4:	bl	10250 <argp_fmtstream_point@@Base+0x160>
   132c8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   132cc:	add	x0, x0, #0x358
   132d0:	ldr	w0, [x0, #32]
   132d4:	sxtw	x0, w0
   132d8:	mov	x3, #0x0                   	// #0
   132dc:	mov	x2, x0
   132e0:	mov	x1, #0x0                   	// #0
   132e4:	ldr	x0, [x29, #40]
   132e8:	bl	b150 <argp_make_fmtstream@plt>
   132ec:	str	x0, [x29, #112]
   132f0:	ldr	x0, [x29, #112]
   132f4:	cmp	x0, #0x0
   132f8:	b.ne	13308 <argp_fmtstream_point@@Base+0x3218>  // b.any
   132fc:	ldr	x0, [x29, #40]
   13300:	bl	abb0 <funlockfile@plt>
   13304:	b	136d0 <argp_fmtstream_point@@Base+0x35e0>
   13308:	ldr	w1, [x29, #36]
   1330c:	mov	w0, #0xb                   	// #11
   13310:	and	w0, w1, w0
   13314:	cmp	w0, #0x0
   13318:	b.eq	1335c <argp_fmtstream_point@@Base+0x326c>  // b.none
   1331c:	mov	x1, #0x0                   	// #0
   13320:	ldr	x0, [x29, #56]
   13324:	bl	12aec <argp_fmtstream_point@@Base+0x29fc>
   13328:	str	x0, [x29, #128]
   1332c:	mov	w2, #0xffffffff            	// #-1
   13330:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13334:	add	x1, x0, #0x408
   13338:	ldr	x0, [x29, #128]
   1333c:	bl	10efc <argp_fmtstream_point@@Base+0xe0c>
   13340:	mov	w2, #0xffffffff            	// #-1
   13344:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13348:	add	x1, x0, #0x410
   1334c:	ldr	x0, [x29, #128]
   13350:	bl	10efc <argp_fmtstream_point@@Base+0xe0c>
   13354:	ldr	x0, [x29, #128]
   13358:	bl	11504 <argp_fmtstream_point@@Base+0x1414>
   1335c:	ldr	w0, [x29, #36]
   13360:	and	w0, w0, #0x3
   13364:	cmp	w0, #0x0
   13368:	b.eq	13528 <argp_fmtstream_point@@Base+0x3438>  // b.none
   1336c:	mov	w0, #0x1                   	// #1
   13370:	str	w0, [x29, #124]
   13374:	ldr	x0, [x29, #56]
   13378:	bl	12bd4 <argp_fmtstream_point@@Base+0x2ae4>
   1337c:	str	x0, [x29, #104]
   13380:	ldr	x0, [x29, #104]
   13384:	add	x0, x0, #0xf
   13388:	lsr	x0, x0, #4
   1338c:	lsl	x0, x0, #4
   13390:	sub	sp, sp, x0
   13394:	mov	x0, sp
   13398:	add	x0, x0, #0xf
   1339c:	lsr	x0, x0, #4
   133a0:	lsl	x0, x0, #4
   133a4:	str	x0, [x29, #96]
   133a8:	ldr	x2, [x29, #104]
   133ac:	mov	w1, #0x0                   	// #0
   133b0:	ldr	x0, [x29, #96]
   133b4:	bl	acb0 <memset@plt>
   133b8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   133bc:	add	x0, x0, #0x358
   133c0:	ldr	w0, [x0, #28]
   133c4:	sxtw	x0, w0
   133c8:	mov	x1, x0
   133cc:	ldr	x0, [x29, #112]
   133d0:	bl	b6e0 <argp_fmtstream_set_wmargin@plt>
   133d4:	str	w0, [x29, #92]
   133d8:	ldr	x0, [x29, #96]
   133dc:	str	x0, [x29, #72]
   133e0:	ldr	w0, [x29, #124]
   133e4:	cmp	w0, #0x0
   133e8:	b.eq	1341c <argp_fmtstream_point@@Base+0x332c>  // b.none
   133ec:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   133f0:	add	x1, x0, #0x418
   133f4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   133f8:	add	x0, x0, #0x1f8
   133fc:	bl	b120 <dgettext@plt>
   13400:	ldr	x3, [x29, #24]
   13404:	mov	x2, x0
   13408:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1340c:	add	x1, x0, #0x420
   13410:	ldr	x0, [x29, #112]
   13414:	bl	af60 <argp_fmtstream_printf@plt>
   13418:	b	13448 <argp_fmtstream_point@@Base+0x3358>
   1341c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13420:	add	x1, x0, #0x428
   13424:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13428:	add	x0, x0, #0x1f8
   1342c:	bl	b120 <dgettext@plt>
   13430:	ldr	x3, [x29, #24]
   13434:	mov	x2, x0
   13438:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1343c:	add	x1, x0, #0x420
   13440:	ldr	x0, [x29, #112]
   13444:	bl	af60 <argp_fmtstream_printf@plt>
   13448:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1344c:	add	x0, x0, #0x358
   13450:	ldr	w0, [x0, #28]
   13454:	sxtw	x0, w0
   13458:	mov	x1, x0
   1345c:	ldr	x0, [x29, #112]
   13460:	bl	aa30 <argp_fmtstream_set_lmargin@plt>
   13464:	str	w0, [x29, #88]
   13468:	ldr	w0, [x29, #36]
   1346c:	and	w0, w0, #0x2
   13470:	cmp	w0, #0x0
   13474:	b.eq	134ac <argp_fmtstream_point@@Base+0x33bc>  // b.none
   13478:	ldr	x0, [x29, #128]
   1347c:	ldr	w0, [x0, #8]
   13480:	cmp	w0, #0x0
   13484:	b.eq	134c4 <argp_fmtstream_point@@Base+0x33d4>  // b.none
   13488:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1348c:	add	x1, x0, #0x430
   13490:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13494:	add	x0, x0, #0x1f8
   13498:	bl	b120 <dgettext@plt>
   1349c:	mov	x1, x0
   134a0:	ldr	x0, [x29, #112]
   134a4:	bl	ac10 <argp_fmtstream_puts@plt>
   134a8:	b	134c4 <argp_fmtstream_point@@Base+0x33d4>
   134ac:	ldr	x1, [x29, #112]
   134b0:	ldr	x0, [x29, #128]
   134b4:	bl	1285c <argp_fmtstream_point@@Base+0x276c>
   134b8:	ldr	w0, [x29, #36]
   134bc:	orr	w0, w0, #0x2
   134c0:	str	w0, [x29, #36]
   134c4:	add	x0, x29, #0x48
   134c8:	ldr	x4, [x29, #112]
   134cc:	mov	w3, #0x1                   	// #1
   134d0:	mov	x2, x0
   134d4:	ldr	x1, [x29, #48]
   134d8:	ldr	x0, [x29, #56]
   134dc:	bl	12c74 <argp_fmtstream_point@@Base+0x2b84>
   134e0:	str	w0, [x29, #84]
   134e4:	ldrsw	x0, [x29, #92]
   134e8:	mov	x1, x0
   134ec:	ldr	x0, [x29, #112]
   134f0:	bl	b6e0 <argp_fmtstream_set_wmargin@plt>
   134f4:	ldrsw	x0, [x29, #88]
   134f8:	mov	x1, x0
   134fc:	ldr	x0, [x29, #112]
   13500:	bl	aa30 <argp_fmtstream_set_lmargin@plt>
   13504:	mov	w1, #0xa                   	// #10
   13508:	ldr	x0, [x29, #112]
   1350c:	bl	aa50 <argp_fmtstream_putc@plt>
   13510:	mov	w0, #0x1                   	// #1
   13514:	str	w0, [x29, #140]
   13518:	str	wzr, [x29, #124]
   1351c:	ldr	w0, [x29, #84]
   13520:	cmp	w0, #0x0
   13524:	b.ne	133b8 <argp_fmtstream_point@@Base+0x32c8>  // b.any
   13528:	ldr	w0, [x29, #36]
   1352c:	and	w0, w0, #0x10
   13530:	cmp	w0, #0x0
   13534:	b.eq	13564 <argp_fmtstream_point@@Base+0x3474>  // b.none
   13538:	ldr	x5, [x29, #112]
   1353c:	mov	w4, #0x1                   	// #1
   13540:	mov	w3, #0x0                   	// #0
   13544:	mov	w2, #0x0                   	// #0
   13548:	ldr	x1, [x29, #48]
   1354c:	ldr	x0, [x29, #56]
   13550:	bl	12ec4 <argp_fmtstream_point@@Base+0x2dd4>
   13554:	mov	w1, w0
   13558:	ldr	w0, [x29, #140]
   1355c:	orr	w0, w0, w1
   13560:	str	w0, [x29, #140]
   13564:	ldr	w0, [x29, #36]
   13568:	and	w0, w0, #0x4
   1356c:	cmp	w0, #0x0
   13570:	b.eq	135a4 <argp_fmtstream_point@@Base+0x34b4>  // b.none
   13574:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13578:	add	x1, x0, #0x440
   1357c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13580:	add	x0, x0, #0x1f8
   13584:	bl	b120 <dgettext@plt>
   13588:	ldr	x3, [x29, #24]
   1358c:	ldr	x2, [x29, #24]
   13590:	mov	x1, x0
   13594:	ldr	x0, [x29, #112]
   13598:	bl	af60 <argp_fmtstream_printf@plt>
   1359c:	mov	w0, #0x1                   	// #1
   135a0:	str	w0, [x29, #140]
   135a4:	ldr	w0, [x29, #36]
   135a8:	and	w0, w0, #0x8
   135ac:	cmp	w0, #0x0
   135b0:	b.eq	135f4 <argp_fmtstream_point@@Base+0x3504>  // b.none
   135b4:	ldr	x0, [x29, #128]
   135b8:	ldr	w0, [x0, #8]
   135bc:	cmp	w0, #0x0
   135c0:	b.eq	135f4 <argp_fmtstream_point@@Base+0x3504>  // b.none
   135c4:	ldr	w0, [x29, #140]
   135c8:	cmp	w0, #0x0
   135cc:	b.eq	135dc <argp_fmtstream_point@@Base+0x34ec>  // b.none
   135d0:	mov	w1, #0xa                   	// #10
   135d4:	ldr	x0, [x29, #112]
   135d8:	bl	aa50 <argp_fmtstream_putc@plt>
   135dc:	ldr	x2, [x29, #112]
   135e0:	ldr	x1, [x29, #48]
   135e4:	ldr	x0, [x29, #128]
   135e8:	bl	1245c <argp_fmtstream_point@@Base+0x236c>
   135ec:	mov	w0, #0x1                   	// #1
   135f0:	str	w0, [x29, #140]
   135f4:	ldr	w0, [x29, #36]
   135f8:	and	w0, w0, #0x20
   135fc:	cmp	w0, #0x0
   13600:	b.eq	13630 <argp_fmtstream_point@@Base+0x3540>  // b.none
   13604:	ldr	x5, [x29, #112]
   13608:	mov	w4, #0x0                   	// #0
   1360c:	ldr	w3, [x29, #140]
   13610:	mov	w2, #0x1                   	// #1
   13614:	ldr	x1, [x29, #48]
   13618:	ldr	x0, [x29, #56]
   1361c:	bl	12ec4 <argp_fmtstream_point@@Base+0x2dd4>
   13620:	mov	w1, w0
   13624:	ldr	w0, [x29, #140]
   13628:	orr	w0, w0, w1
   1362c:	str	w0, [x29, #140]
   13630:	ldr	w0, [x29, #36]
   13634:	and	w0, w0, #0x40
   13638:	cmp	w0, #0x0
   1363c:	b.eq	136a4 <argp_fmtstream_point@@Base+0x35b4>  // b.none
   13640:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13644:	ldr	x0, [x0, #3968]
   13648:	ldr	x0, [x0]
   1364c:	cmp	x0, #0x0
   13650:	b.eq	136a4 <argp_fmtstream_point@@Base+0x35b4>  // b.none
   13654:	ldr	w0, [x29, #140]
   13658:	cmp	w0, #0x0
   1365c:	b.eq	1366c <argp_fmtstream_point@@Base+0x357c>  // b.none
   13660:	mov	w1, #0xa                   	// #10
   13664:	ldr	x0, [x29, #112]
   13668:	bl	aa50 <argp_fmtstream_putc@plt>
   1366c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13670:	add	x1, x0, #0x478
   13674:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13678:	add	x0, x0, #0x1f8
   1367c:	bl	b120 <dgettext@plt>
   13680:	mov	x1, x0
   13684:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13688:	ldr	x0, [x0, #3968]
   1368c:	ldr	x0, [x0]
   13690:	mov	x2, x0
   13694:	ldr	x0, [x29, #112]
   13698:	bl	af60 <argp_fmtstream_printf@plt>
   1369c:	mov	w0, #0x1                   	// #1
   136a0:	str	w0, [x29, #140]
   136a4:	ldr	x0, [x29, #40]
   136a8:	bl	abb0 <funlockfile@plt>
   136ac:	ldr	x0, [x29, #128]
   136b0:	cmp	x0, #0x0
   136b4:	b.eq	136c0 <argp_fmtstream_point@@Base+0x35d0>  // b.none
   136b8:	ldr	x0, [x29, #128]
   136bc:	bl	10b98 <argp_fmtstream_point@@Base+0xaa8>
   136c0:	ldr	x0, [x29, #112]
   136c4:	bl	b520 <argp_fmtstream_free@plt>
   136c8:	b	136d0 <argp_fmtstream_point@@Base+0x35e0>
   136cc:	nop
   136d0:	mov	sp, x29
   136d4:	ldp	x29, x30, [sp], #144
   136d8:	ret

00000000000136dc <argp_help@@Base>:
   136dc:	stp	x29, x30, [sp, #-48]!
   136e0:	mov	x29, sp
   136e4:	str	x0, [sp, #40]
   136e8:	str	x1, [sp, #32]
   136ec:	str	w2, [sp, #28]
   136f0:	str	x3, [sp, #16]
   136f4:	ldr	x4, [sp, #16]
   136f8:	ldr	w3, [sp, #28]
   136fc:	ldr	x2, [sp, #32]
   13700:	mov	x1, #0x0                   	// #0
   13704:	ldr	x0, [sp, #40]
   13708:	bl	13274 <argp_fmtstream_point@@Base+0x3184>
   1370c:	nop
   13710:	ldp	x29, x30, [sp], #48
   13714:	ret

0000000000013718 <argp_state_help@@Base>:
   13718:	stp	x29, x30, [sp, #-48]!
   1371c:	mov	x29, sp
   13720:	str	x0, [sp, #40]
   13724:	str	x1, [sp, #32]
   13728:	str	w2, [sp, #28]
   1372c:	ldr	x0, [sp, #40]
   13730:	cmp	x0, #0x0
   13734:	b.eq	1374c <argp_state_help@@Base+0x34>  // b.none
   13738:	ldr	x0, [sp, #40]
   1373c:	ldr	w0, [x0, #28]
   13740:	and	w0, w0, #0x2
   13744:	cmp	w0, #0x0
   13748:	b.ne	13834 <argp_state_help@@Base+0x11c>  // b.any
   1374c:	ldr	x0, [sp, #32]
   13750:	cmp	x0, #0x0
   13754:	b.eq	13834 <argp_state_help@@Base+0x11c>  // b.none
   13758:	ldr	x0, [sp, #40]
   1375c:	cmp	x0, #0x0
   13760:	b.eq	13784 <argp_state_help@@Base+0x6c>  // b.none
   13764:	ldr	x0, [sp, #40]
   13768:	ldr	w0, [x0, #28]
   1376c:	and	w0, w0, #0x40
   13770:	cmp	w0, #0x0
   13774:	b.eq	13784 <argp_state_help@@Base+0x6c>  // b.none
   13778:	ldr	w0, [sp, #28]
   1377c:	orr	w0, w0, #0x80
   13780:	str	w0, [sp, #28]
   13784:	ldr	x0, [sp, #40]
   13788:	cmp	x0, #0x0
   1378c:	b.eq	1379c <argp_state_help@@Base+0x84>  // b.none
   13790:	ldr	x0, [sp, #40]
   13794:	ldr	x5, [x0]
   13798:	b	137a0 <argp_state_help@@Base+0x88>
   1379c:	mov	x5, #0x0                   	// #0
   137a0:	ldr	x0, [sp, #40]
   137a4:	cmp	x0, #0x0
   137a8:	b.eq	137b8 <argp_state_help@@Base+0xa0>  // b.none
   137ac:	ldr	x0, [sp, #40]
   137b0:	ldr	x0, [x0, #64]
   137b4:	b	137c4 <argp_state_help@@Base+0xac>
   137b8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   137bc:	ldr	x0, [x0, #4008]
   137c0:	ldr	x0, [x0]
   137c4:	mov	x4, x0
   137c8:	ldr	w3, [sp, #28]
   137cc:	ldr	x2, [sp, #32]
   137d0:	ldr	x1, [sp, #40]
   137d4:	mov	x0, x5
   137d8:	bl	13274 <argp_fmtstream_point@@Base+0x3184>
   137dc:	ldr	x0, [sp, #40]
   137e0:	cmp	x0, #0x0
   137e4:	b.eq	137fc <argp_state_help@@Base+0xe4>  // b.none
   137e8:	ldr	x0, [sp, #40]
   137ec:	ldr	w0, [x0, #28]
   137f0:	and	w0, w0, #0x20
   137f4:	cmp	w0, #0x0
   137f8:	b.ne	13834 <argp_state_help@@Base+0x11c>  // b.any
   137fc:	ldr	w0, [sp, #28]
   13800:	and	w0, w0, #0x100
   13804:	cmp	w0, #0x0
   13808:	b.eq	1381c <argp_state_help@@Base+0x104>  // b.none
   1380c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13810:	ldr	x0, [x0, #4048]
   13814:	ldr	w0, [x0]
   13818:	bl	a840 <exit@plt>
   1381c:	ldr	w0, [sp, #28]
   13820:	and	w0, w0, #0x200
   13824:	cmp	w0, #0x0
   13828:	b.eq	13834 <argp_state_help@@Base+0x11c>  // b.none
   1382c:	mov	w0, #0x0                   	// #0
   13830:	bl	a840 <exit@plt>
   13834:	nop
   13838:	ldp	x29, x30, [sp], #48
   1383c:	ret

0000000000013840 <argp_error@@Base>:
   13840:	stp	x29, x30, [sp, #-288]!
   13844:	mov	x29, sp
   13848:	str	x0, [sp, #56]
   1384c:	str	x1, [sp, #48]
   13850:	str	x2, [sp, #240]
   13854:	str	x3, [sp, #248]
   13858:	str	x4, [sp, #256]
   1385c:	str	x5, [sp, #264]
   13860:	str	x6, [sp, #272]
   13864:	str	x7, [sp, #280]
   13868:	str	q0, [sp, #112]
   1386c:	str	q1, [sp, #128]
   13870:	str	q2, [sp, #144]
   13874:	str	q3, [sp, #160]
   13878:	str	q4, [sp, #176]
   1387c:	str	q5, [sp, #192]
   13880:	str	q6, [sp, #208]
   13884:	str	q7, [sp, #224]
   13888:	ldr	x0, [sp, #56]
   1388c:	cmp	x0, #0x0
   13890:	b.eq	138a8 <argp_error@@Base+0x68>  // b.none
   13894:	ldr	x0, [sp, #56]
   13898:	ldr	w0, [x0, #28]
   1389c:	and	w0, w0, #0x2
   138a0:	cmp	w0, #0x0
   138a4:	b.ne	139a0 <argp_error@@Base+0x160>  // b.any
   138a8:	ldr	x0, [sp, #56]
   138ac:	cmp	x0, #0x0
   138b0:	b.eq	138c0 <argp_error@@Base+0x80>  // b.none
   138b4:	ldr	x0, [sp, #56]
   138b8:	ldr	x0, [x0, #72]
   138bc:	b	138cc <argp_error@@Base+0x8c>
   138c0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   138c4:	ldr	x0, [x0, #3816]
   138c8:	ldr	x0, [x0]
   138cc:	str	x0, [sp, #104]
   138d0:	ldr	x0, [sp, #104]
   138d4:	cmp	x0, #0x0
   138d8:	b.eq	139a0 <argp_error@@Base+0x160>  // b.none
   138dc:	ldr	x0, [sp, #104]
   138e0:	bl	a890 <flockfile@plt>
   138e4:	add	x0, sp, #0x120
   138e8:	str	x0, [sp, #72]
   138ec:	add	x0, sp, #0x120
   138f0:	str	x0, [sp, #80]
   138f4:	add	x0, sp, #0xf0
   138f8:	str	x0, [sp, #88]
   138fc:	mov	w0, #0xffffffd0            	// #-48
   13900:	str	w0, [sp, #96]
   13904:	mov	w0, #0xffffff80            	// #-128
   13908:	str	w0, [sp, #100]
   1390c:	ldr	x0, [sp, #56]
   13910:	cmp	x0, #0x0
   13914:	b.eq	13924 <argp_error@@Base+0xe4>  // b.none
   13918:	ldr	x0, [sp, #56]
   1391c:	ldr	x0, [x0, #64]
   13920:	b	13930 <argp_error@@Base+0xf0>
   13924:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13928:	ldr	x0, [x0, #4008]
   1392c:	ldr	x0, [x0]
   13930:	ldr	x1, [sp, #104]
   13934:	bl	b550 <fputs_unlocked@plt>
   13938:	ldr	x1, [sp, #104]
   1393c:	mov	w0, #0x3a                  	// #58
   13940:	bl	aaa0 <putc_unlocked@plt>
   13944:	ldr	x1, [sp, #104]
   13948:	mov	w0, #0x20                  	// #32
   1394c:	bl	aaa0 <putc_unlocked@plt>
   13950:	add	x2, sp, #0x10
   13954:	add	x3, sp, #0x48
   13958:	ldp	x0, x1, [x3]
   1395c:	stp	x0, x1, [x2]
   13960:	ldp	x0, x1, [x3, #16]
   13964:	stp	x0, x1, [x2, #16]
   13968:	add	x0, sp, #0x10
   1396c:	mov	x2, x0
   13970:	ldr	x1, [sp, #48]
   13974:	ldr	x0, [sp, #104]
   13978:	bl	b610 <vfprintf@plt>
   1397c:	ldr	x1, [sp, #104]
   13980:	mov	w0, #0xa                   	// #10
   13984:	bl	aaa0 <putc_unlocked@plt>
   13988:	mov	w2, #0x104                 	// #260
   1398c:	ldr	x1, [sp, #104]
   13990:	ldr	x0, [sp, #56]
   13994:	bl	b4d0 <argp_state_help@plt>
   13998:	ldr	x0, [sp, #104]
   1399c:	bl	abb0 <funlockfile@plt>
   139a0:	nop
   139a4:	ldp	x29, x30, [sp], #288
   139a8:	ret

00000000000139ac <argp_failure@@Base>:
   139ac:	stp	x29, x30, [sp, #-464]!
   139b0:	mov	x29, sp
   139b4:	str	x0, [sp, #72]
   139b8:	str	w1, [sp, #68]
   139bc:	str	w2, [sp, #64]
   139c0:	str	x3, [sp, #56]
   139c4:	str	x4, [sp, #432]
   139c8:	str	x5, [sp, #440]
   139cc:	str	x6, [sp, #448]
   139d0:	str	x7, [sp, #456]
   139d4:	str	q0, [sp, #304]
   139d8:	str	q1, [sp, #320]
   139dc:	str	q2, [sp, #336]
   139e0:	str	q3, [sp, #352]
   139e4:	str	q4, [sp, #368]
   139e8:	str	q5, [sp, #384]
   139ec:	str	q6, [sp, #400]
   139f0:	str	q7, [sp, #416]
   139f4:	ldr	x0, [sp, #72]
   139f8:	cmp	x0, #0x0
   139fc:	b.eq	13a14 <argp_failure@@Base+0x68>  // b.none
   13a00:	ldr	x0, [sp, #72]
   13a04:	ldr	w0, [x0, #28]
   13a08:	and	w0, w0, #0x2
   13a0c:	cmp	w0, #0x0
   13a10:	b.ne	13bc4 <argp_failure@@Base+0x218>  // b.any
   13a14:	ldr	x0, [sp, #72]
   13a18:	cmp	x0, #0x0
   13a1c:	b.eq	13a2c <argp_failure@@Base+0x80>  // b.none
   13a20:	ldr	x0, [sp, #72]
   13a24:	ldr	x0, [x0, #72]
   13a28:	b	13a38 <argp_failure@@Base+0x8c>
   13a2c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13a30:	ldr	x0, [x0, #3816]
   13a34:	ldr	x0, [x0]
   13a38:	str	x0, [sp, #288]
   13a3c:	ldr	x0, [sp, #288]
   13a40:	cmp	x0, #0x0
   13a44:	b.eq	13bc4 <argp_failure@@Base+0x218>  // b.none
   13a48:	ldr	x0, [sp, #288]
   13a4c:	bl	a890 <flockfile@plt>
   13a50:	ldr	x0, [sp, #72]
   13a54:	cmp	x0, #0x0
   13a58:	b.eq	13a68 <argp_failure@@Base+0xbc>  // b.none
   13a5c:	ldr	x0, [sp, #72]
   13a60:	ldr	x0, [x0, #64]
   13a64:	b	13a74 <argp_failure@@Base+0xc8>
   13a68:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13a6c:	ldr	x0, [x0, #4008]
   13a70:	ldr	x0, [x0]
   13a74:	ldr	x1, [sp, #288]
   13a78:	bl	b550 <fputs_unlocked@plt>
   13a7c:	ldr	x0, [sp, #56]
   13a80:	cmp	x0, #0x0
   13a84:	b.eq	13af4 <argp_failure@@Base+0x148>  // b.none
   13a88:	add	x0, sp, #0x1d0
   13a8c:	str	x0, [sp, #88]
   13a90:	add	x0, sp, #0x1d0
   13a94:	str	x0, [sp, #96]
   13a98:	add	x0, sp, #0x1b0
   13a9c:	str	x0, [sp, #104]
   13aa0:	mov	w0, #0xffffffe0            	// #-32
   13aa4:	str	w0, [sp, #112]
   13aa8:	mov	w0, #0xffffff80            	// #-128
   13aac:	str	w0, [sp, #116]
   13ab0:	ldr	x1, [sp, #288]
   13ab4:	mov	w0, #0x3a                  	// #58
   13ab8:	bl	aaa0 <putc_unlocked@plt>
   13abc:	ldr	x1, [sp, #288]
   13ac0:	mov	w0, #0x20                  	// #32
   13ac4:	bl	aaa0 <putc_unlocked@plt>
   13ac8:	add	x2, sp, #0x10
   13acc:	add	x3, sp, #0x58
   13ad0:	ldp	x0, x1, [x3]
   13ad4:	stp	x0, x1, [x2]
   13ad8:	ldp	x0, x1, [x3, #16]
   13adc:	stp	x0, x1, [x2, #16]
   13ae0:	add	x0, sp, #0x10
   13ae4:	mov	x2, x0
   13ae8:	ldr	x1, [sp, #56]
   13aec:	ldr	x0, [sp, #288]
   13af0:	bl	b610 <vfprintf@plt>
   13af4:	ldr	w0, [sp, #64]
   13af8:	cmp	w0, #0x0
   13afc:	b.eq	13b7c <argp_failure@@Base+0x1d0>  // b.none
   13b00:	str	xzr, [sp, #296]
   13b04:	ldr	x1, [sp, #288]
   13b08:	mov	w0, #0x3a                  	// #58
   13b0c:	bl	aaa0 <putc_unlocked@plt>
   13b10:	ldr	x1, [sp, #288]
   13b14:	mov	w0, #0x20                  	// #32
   13b18:	bl	aaa0 <putc_unlocked@plt>
   13b1c:	add	x0, sp, #0x58
   13b20:	mov	x2, #0xc8                  	// #200
   13b24:	mov	x1, x0
   13b28:	ldr	w0, [sp, #64]
   13b2c:	bl	ad40 <strerror_r@plt>
   13b30:	str	x0, [sp, #296]
   13b34:	ldr	x0, [sp, #296]
   13b38:	cmp	x0, #0x0
   13b3c:	b.ne	13b70 <argp_failure@@Base+0x1c4>  // b.any
   13b40:	ldr	w0, [sp, #64]
   13b44:	bl	ae50 <strerror@plt>
   13b48:	str	x0, [sp, #296]
   13b4c:	ldr	x0, [sp, #296]
   13b50:	cmp	x0, #0x0
   13b54:	b.ne	13b70 <argp_failure@@Base+0x1c4>  // b.any
   13b58:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13b5c:	add	x1, x0, #0x490
   13b60:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13b64:	add	x0, x0, #0x1f8
   13b68:	bl	b120 <dgettext@plt>
   13b6c:	str	x0, [sp, #296]
   13b70:	ldr	x1, [sp, #288]
   13b74:	ldr	x0, [sp, #296]
   13b78:	bl	b550 <fputs_unlocked@plt>
   13b7c:	ldr	x1, [sp, #288]
   13b80:	mov	w0, #0xa                   	// #10
   13b84:	bl	aaa0 <putc_unlocked@plt>
   13b88:	ldr	x0, [sp, #288]
   13b8c:	bl	abb0 <funlockfile@plt>
   13b90:	ldr	w0, [sp, #68]
   13b94:	cmp	w0, #0x0
   13b98:	b.eq	13bc4 <argp_failure@@Base+0x218>  // b.none
   13b9c:	ldr	x0, [sp, #72]
   13ba0:	cmp	x0, #0x0
   13ba4:	b.eq	13bbc <argp_failure@@Base+0x210>  // b.none
   13ba8:	ldr	x0, [sp, #72]
   13bac:	ldr	w0, [x0, #28]
   13bb0:	and	w0, w0, #0x20
   13bb4:	cmp	w0, #0x0
   13bb8:	b.ne	13bc4 <argp_failure@@Base+0x218>  // b.any
   13bbc:	ldr	w0, [sp, #68]
   13bc0:	bl	a840 <exit@plt>
   13bc4:	nop
   13bc8:	ldp	x29, x30, [sp], #464
   13bcc:	ret
   13bd0:	stp	x29, x30, [sp, #-48]!
   13bd4:	mov	x29, sp
   13bd8:	str	w0, [sp, #44]
   13bdc:	str	x1, [sp, #32]
   13be0:	str	x2, [sp, #24]
   13be4:	ldr	w0, [sp, #44]
   13be8:	cmp	w0, #0x3f
   13bec:	b.eq	13c30 <argp_failure@@Base+0x284>  // b.none
   13bf0:	ldr	w0, [sp, #44]
   13bf4:	cmp	w0, #0x3f
   13bf8:	b.gt	13d2c <argp_failure@@Base+0x380>
   13bfc:	ldr	w0, [sp, #44]
   13c00:	cmn	w0, #0x2
   13c04:	b.eq	13c68 <argp_failure@@Base+0x2bc>  // b.none
   13c08:	ldr	w0, [sp, #44]
   13c0c:	cmn	w0, #0x2
   13c10:	b.gt	13d2c <argp_failure@@Base+0x380>
   13c14:	ldr	w0, [sp, #44]
   13c18:	cmn	w0, #0x4
   13c1c:	b.eq	13cc8 <argp_failure@@Base+0x31c>  // b.none
   13c20:	ldr	w0, [sp, #44]
   13c24:	cmn	w0, #0x3
   13c28:	b.eq	13c4c <argp_failure@@Base+0x2a0>  // b.none
   13c2c:	b	13d2c <argp_failure@@Base+0x380>
   13c30:	ldr	x0, [sp, #24]
   13c34:	ldr	x0, [x0, #80]
   13c38:	mov	w2, #0x27a                 	// #634
   13c3c:	mov	x1, x0
   13c40:	ldr	x0, [sp, #24]
   13c44:	bl	b4d0 <argp_state_help@plt>
   13c48:	b	13d38 <argp_failure@@Base+0x38c>
   13c4c:	ldr	x0, [sp, #24]
   13c50:	ldr	x0, [x0, #80]
   13c54:	mov	w2, #0x201                 	// #513
   13c58:	mov	x1, x0
   13c5c:	ldr	x0, [sp, #24]
   13c60:	bl	b4d0 <argp_state_help@plt>
   13c64:	b	13d38 <argp_failure@@Base+0x38c>
   13c68:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13c6c:	ldr	x0, [x0, #3768]
   13c70:	ldr	x1, [sp, #32]
   13c74:	str	x1, [x0]
   13c78:	ldr	x0, [sp, #32]
   13c7c:	bl	ad90 <last_component@plt>
   13c80:	mov	x1, x0
   13c84:	ldr	x0, [sp, #24]
   13c88:	str	x1, [x0, #64]
   13c8c:	ldr	x0, [sp, #24]
   13c90:	ldr	x1, [x0, #64]
   13c94:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13c98:	ldr	x0, [x0, #4008]
   13c9c:	str	x1, [x0]
   13ca0:	ldr	x0, [sp, #24]
   13ca4:	ldr	w0, [x0, #28]
   13ca8:	and	w0, w0, #0x3
   13cac:	cmp	w0, #0x1
   13cb0:	b.ne	13d34 <argp_failure@@Base+0x388>  // b.any
   13cb4:	ldr	x0, [sp, #24]
   13cb8:	ldr	x0, [x0, #16]
   13cbc:	ldr	x1, [sp, #32]
   13cc0:	str	x1, [x0]
   13cc4:	b	13d34 <argp_failure@@Base+0x388>
   13cc8:	ldr	x0, [sp, #32]
   13ccc:	cmp	x0, #0x0
   13cd0:	b.eq	13cdc <argp_failure@@Base+0x330>  // b.none
   13cd4:	ldr	x0, [sp, #32]
   13cd8:	b	13ce4 <argp_failure@@Base+0x338>
   13cdc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13ce0:	add	x0, x0, #0x578
   13ce4:	bl	aae0 <atoi@plt>
   13ce8:	mov	w1, w0
   13cec:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   13cf0:	add	x0, x0, #0x5b4
   13cf4:	str	w1, [x0]
   13cf8:	b	13d04 <argp_failure@@Base+0x358>
   13cfc:	mov	w0, #0x1                   	// #1
   13d00:	bl	ad20 <sleep@plt>
   13d04:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   13d08:	add	x0, x0, #0x5b4
   13d0c:	ldr	w0, [x0]
   13d10:	sub	w2, w0, #0x1
   13d14:	adrp	x1, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   13d18:	add	x1, x1, #0x5b4
   13d1c:	str	w2, [x1]
   13d20:	cmp	w0, #0x0
   13d24:	b.gt	13cfc <argp_failure@@Base+0x350>
   13d28:	b	13d38 <argp_failure@@Base+0x38c>
   13d2c:	mov	w0, #0x7                   	// #7
   13d30:	b	13d3c <argp_failure@@Base+0x390>
   13d34:	nop
   13d38:	mov	w0, #0x0                   	// #0
   13d3c:	ldp	x29, x30, [sp], #48
   13d40:	ret
   13d44:	stp	x29, x30, [sp, #-48]!
   13d48:	mov	x29, sp
   13d4c:	str	w0, [sp, #44]
   13d50:	str	x1, [sp, #32]
   13d54:	str	x2, [sp, #24]
   13d58:	ldr	w0, [sp, #44]
   13d5c:	cmp	w0, #0x56
   13d60:	b.ne	13e1c <argp_failure@@Base+0x470>  // b.any
   13d64:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13d68:	ldr	x0, [x0, #4056]
   13d6c:	ldr	x0, [x0]
   13d70:	cmp	x0, #0x0
   13d74:	b.eq	13d98 <argp_failure@@Base+0x3ec>  // b.none
   13d78:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13d7c:	ldr	x0, [x0, #4056]
   13d80:	ldr	x2, [x0]
   13d84:	ldr	x0, [sp, #24]
   13d88:	ldr	x0, [x0, #80]
   13d8c:	ldr	x1, [sp, #24]
   13d90:	blr	x2
   13d94:	b	13e00 <argp_failure@@Base+0x454>
   13d98:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13d9c:	ldr	x0, [x0, #3936]
   13da0:	ldr	x0, [x0]
   13da4:	cmp	x0, #0x0
   13da8:	b.eq	13dd8 <argp_failure@@Base+0x42c>  // b.none
   13dac:	ldr	x0, [sp, #24]
   13db0:	ldr	x3, [x0, #80]
   13db4:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   13db8:	ldr	x0, [x0, #3936]
   13dbc:	ldr	x0, [x0]
   13dc0:	mov	x2, x0
   13dc4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13dc8:	add	x1, x0, #0x5b0
   13dcc:	mov	x0, x3
   13dd0:	bl	b750 <fprintf@plt>
   13dd4:	b	13e00 <argp_failure@@Base+0x454>
   13dd8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13ddc:	add	x1, x0, #0x5b8
   13de0:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13de4:	add	x0, x0, #0x580
   13de8:	bl	b120 <dgettext@plt>
   13dec:	mov	x2, x0
   13df0:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   13df4:	add	x1, x0, #0x5e0
   13df8:	ldr	x0, [sp, #24]
   13dfc:	bl	b290 <argp_error@plt>
   13e00:	ldr	x0, [sp, #24]
   13e04:	ldr	w0, [x0, #28]
   13e08:	and	w0, w0, #0x20
   13e0c:	cmp	w0, #0x0
   13e10:	b.ne	13e24 <argp_failure@@Base+0x478>  // b.any
   13e14:	mov	w0, #0x0                   	// #0
   13e18:	bl	a840 <exit@plt>
   13e1c:	mov	w0, #0x7                   	// #7
   13e20:	b	13e2c <argp_failure@@Base+0x480>
   13e24:	nop
   13e28:	mov	w0, #0x0                   	// #0
   13e2c:	ldp	x29, x30, [sp], #48
   13e30:	ret
   13e34:	stp	x29, x30, [sp, #-48]!
   13e38:	mov	x29, sp
   13e3c:	str	x0, [sp, #24]
   13e40:	str	x1, [sp, #16]
   13e44:	ldr	x0, [sp, #24]
   13e48:	str	x0, [sp, #40]
   13e4c:	b	13e94 <argp_failure@@Base+0x4e8>
   13e50:	ldr	x0, [sp, #16]
   13e54:	cmp	x0, #0x0
   13e58:	b.eq	13e88 <argp_failure@@Base+0x4dc>  // b.none
   13e5c:	ldr	x0, [sp, #40]
   13e60:	ldr	x0, [x0]
   13e64:	ldr	x1, [sp, #16]
   13e68:	bl	b070 <strcmp@plt>
   13e6c:	cmp	w0, #0x0
   13e70:	b.ne	13e88 <argp_failure@@Base+0x4dc>  // b.any
   13e74:	ldr	x1, [sp, #40]
   13e78:	ldr	x0, [sp, #24]
   13e7c:	sub	x0, x1, x0
   13e80:	asr	x0, x0, #5
   13e84:	b	13ec8 <argp_failure@@Base+0x51c>
   13e88:	ldr	x0, [sp, #40]
   13e8c:	add	x0, x0, #0x20
   13e90:	str	x0, [sp, #40]
   13e94:	ldr	x0, [sp, #40]
   13e98:	ldr	x0, [x0]
   13e9c:	cmp	x0, #0x0
   13ea0:	b.ne	13e50 <argp_failure@@Base+0x4a4>  // b.any
   13ea4:	ldr	x0, [sp, #16]
   13ea8:	cmp	x0, #0x0
   13eac:	b.ne	13ec4 <argp_failure@@Base+0x518>  // b.any
   13eb0:	ldr	x1, [sp, #40]
   13eb4:	ldr	x0, [sp, #24]
   13eb8:	sub	x0, x1, x0
   13ebc:	asr	x0, x0, #5
   13ec0:	b	13ec8 <argp_failure@@Base+0x51c>
   13ec4:	mov	w0, #0xffffffff            	// #-1
   13ec8:	ldp	x29, x30, [sp], #48
   13ecc:	ret
   13ed0:	stp	x29, x30, [sp, #-64]!
   13ed4:	mov	x29, sp
   13ed8:	str	x0, [sp, #40]
   13edc:	str	x1, [sp, #32]
   13ee0:	str	w2, [sp, #28]
   13ee4:	str	x3, [sp, #16]
   13ee8:	ldr	x0, [sp, #40]
   13eec:	ldr	x0, [x0]
   13ef0:	cmp	x0, #0x0
   13ef4:	b.eq	13f6c <argp_failure@@Base+0x5c0>  // b.none
   13ef8:	ldr	x0, [sp, #40]
   13efc:	ldr	x1, [x0, #64]
   13f00:	ldr	x0, [sp, #32]
   13f04:	str	x1, [x0, #56]
   13f08:	ldr	x0, [sp, #40]
   13f0c:	ldr	x1, [x0, #48]
   13f10:	ldr	x0, [sp, #32]
   13f14:	str	x1, [x0, #40]
   13f18:	ldr	x0, [sp, #40]
   13f1c:	ldr	x1, [x0, #56]
   13f20:	ldr	x0, [sp, #32]
   13f24:	str	x1, [x0, #48]
   13f28:	ldr	x0, [sp, #40]
   13f2c:	ldr	w1, [x0, #24]
   13f30:	ldr	x0, [sp, #32]
   13f34:	str	w1, [x0, #32]
   13f38:	ldr	x0, [sp, #40]
   13f3c:	ldr	x3, [x0]
   13f40:	ldr	x2, [sp, #32]
   13f44:	ldr	x1, [sp, #16]
   13f48:	ldr	w0, [sp, #28]
   13f4c:	blr	x3
   13f50:	str	w0, [sp, #60]
   13f54:	ldr	x0, [sp, #32]
   13f58:	ldr	x1, [x0, #56]
   13f5c:	ldr	x0, [sp, #40]
   13f60:	str	x1, [x0, #64]
   13f64:	ldr	w0, [sp, #60]
   13f68:	b	13f70 <argp_failure@@Base+0x5c4>
   13f6c:	mov	w0, #0x7                   	// #7
   13f70:	ldp	x29, x30, [sp], #64
   13f74:	ret
   13f78:	stp	x29, x30, [sp, #-96]!
   13f7c:	mov	x29, sp
   13f80:	str	x0, [sp, #56]
   13f84:	str	x1, [sp, #48]
   13f88:	str	w2, [sp, #44]
   13f8c:	str	x3, [sp, #32]
   13f90:	str	x4, [sp, #24]
   13f94:	ldr	x0, [sp, #56]
   13f98:	ldr	x0, [x0]
   13f9c:	str	x0, [sp, #88]
   13fa0:	ldr	x0, [sp, #56]
   13fa4:	ldr	x0, [x0, #32]
   13fa8:	str	x0, [sp, #80]
   13fac:	ldr	x0, [sp, #88]
   13fb0:	cmp	x0, #0x0
   13fb4:	b.ne	13fc8 <argp_failure@@Base+0x61c>  // b.any
   13fb8:	ldr	x0, [sp, #56]
   13fbc:	ldr	x0, [x0, #8]
   13fc0:	cmp	x0, #0x0
   13fc4:	b.eq	142d4 <argp_failure@@Base+0x928>  // b.none
   13fc8:	ldr	x0, [sp, #88]
   13fcc:	cmp	x0, #0x0
   13fd0:	b.eq	141f4 <argp_failure@@Base+0x848>  // b.none
   13fd4:	ldr	x0, [sp, #88]
   13fd8:	str	x0, [sp, #72]
   13fdc:	b	141e4 <argp_failure@@Base+0x838>
   13fe0:	ldr	x0, [sp, #72]
   13fe4:	ldr	w0, [x0, #24]
   13fe8:	and	w0, w0, #0x4
   13fec:	cmp	w0, #0x0
   13ff0:	b.ne	13ffc <argp_failure@@Base+0x650>  // b.any
   13ff4:	ldr	x0, [sp, #72]
   13ff8:	str	x0, [sp, #88]
   13ffc:	ldr	x0, [sp, #88]
   14000:	ldr	w0, [x0, #24]
   14004:	and	w0, w0, #0x8
   14008:	cmp	w0, #0x0
   1400c:	b.ne	141d8 <argp_failure@@Base+0x82c>  // b.any
   14010:	ldr	x0, [sp, #72]
   14014:	bl	b4e0 <_option_is_short@plt>
   14018:	cmp	w0, #0x0
   1401c:	b.eq	140ac <argp_failure@@Base+0x700>  // b.none
   14020:	ldr	x0, [sp, #72]
   14024:	ldr	w3, [x0, #8]
   14028:	ldr	x0, [sp, #24]
   1402c:	ldr	x0, [x0, #8]
   14030:	add	x2, x0, #0x1
   14034:	ldr	x1, [sp, #24]
   14038:	str	x2, [x1, #8]
   1403c:	and	w1, w3, #0xff
   14040:	strb	w1, [x0]
   14044:	ldr	x0, [sp, #88]
   14048:	ldr	x0, [x0, #16]
   1404c:	cmp	x0, #0x0
   14050:	b.eq	140a0 <argp_failure@@Base+0x6f4>  // b.none
   14054:	ldr	x0, [sp, #24]
   14058:	ldr	x0, [x0, #8]
   1405c:	add	x2, x0, #0x1
   14060:	ldr	x1, [sp, #24]
   14064:	str	x2, [x1, #8]
   14068:	mov	w1, #0x3a                  	// #58
   1406c:	strb	w1, [x0]
   14070:	ldr	x0, [sp, #88]
   14074:	ldr	w0, [x0, #24]
   14078:	and	w0, w0, #0x1
   1407c:	cmp	w0, #0x0
   14080:	b.eq	140a0 <argp_failure@@Base+0x6f4>  // b.none
   14084:	ldr	x0, [sp, #24]
   14088:	ldr	x0, [x0, #8]
   1408c:	add	x2, x0, #0x1
   14090:	ldr	x1, [sp, #24]
   14094:	str	x2, [x1, #8]
   14098:	mov	w1, #0x3a                  	// #58
   1409c:	strb	w1, [x0]
   140a0:	ldr	x0, [sp, #24]
   140a4:	ldr	x0, [x0, #8]
   140a8:	strb	wzr, [x0]
   140ac:	ldr	x0, [sp, #72]
   140b0:	ldr	x0, [x0]
   140b4:	cmp	x0, #0x0
   140b8:	b.eq	141d8 <argp_failure@@Base+0x82c>  // b.none
   140bc:	ldr	x0, [sp, #24]
   140c0:	ldr	x0, [x0]
   140c4:	ldr	x2, [x0, #16]
   140c8:	ldr	x0, [sp, #72]
   140cc:	ldr	x0, [x0]
   140d0:	mov	x1, x0
   140d4:	mov	x0, x2
   140d8:	bl	13e34 <argp_failure@@Base+0x488>
   140dc:	cmp	w0, #0x0
   140e0:	b.ge	141d8 <argp_failure@@Base+0x82c>  // b.tcont
   140e4:	ldr	x0, [sp, #24]
   140e8:	ldr	x0, [x0, #16]
   140ec:	ldr	x1, [sp, #72]
   140f0:	ldr	x1, [x1]
   140f4:	str	x1, [x0]
   140f8:	ldr	x0, [sp, #88]
   140fc:	ldr	x0, [x0, #16]
   14100:	cmp	x0, #0x0
   14104:	b.eq	1412c <argp_failure@@Base+0x780>  // b.none
   14108:	ldr	x0, [sp, #88]
   1410c:	ldr	w0, [x0, #24]
   14110:	and	w0, w0, #0x1
   14114:	cmp	w0, #0x0
   14118:	b.eq	14124 <argp_failure@@Base+0x778>  // b.none
   1411c:	mov	w0, #0x2                   	// #2
   14120:	b	14130 <argp_failure@@Base+0x784>
   14124:	mov	w0, #0x1                   	// #1
   14128:	b	14130 <argp_failure@@Base+0x784>
   1412c:	mov	w0, #0x0                   	// #0
   14130:	ldr	x1, [sp, #24]
   14134:	ldr	x1, [x1, #16]
   14138:	str	w0, [x1, #8]
   1413c:	ldr	x0, [sp, #24]
   14140:	ldr	x0, [x0, #16]
   14144:	str	xzr, [x0, #16]
   14148:	ldr	x0, [sp, #72]
   1414c:	ldr	w0, [x0, #8]
   14150:	cmp	w0, #0x0
   14154:	b.eq	14168 <argp_failure@@Base+0x7bc>  // b.none
   14158:	ldr	x0, [sp, #72]
   1415c:	ldr	w0, [x0, #8]
   14160:	and	w0, w0, #0xffffff
   14164:	b	14174 <argp_failure@@Base+0x7c8>
   14168:	ldr	x0, [sp, #88]
   1416c:	ldr	w0, [x0, #8]
   14170:	and	w0, w0, #0xffffff
   14174:	ldr	x1, [sp, #24]
   14178:	ldr	x1, [x1]
   1417c:	ldr	x1, [x1, #80]
   14180:	ldr	x2, [sp, #32]
   14184:	sub	x1, x2, x1
   14188:	asr	x2, x1, #3
   1418c:	mov	x1, #0x8e39                	// #36409
   14190:	movk	x1, #0x38e3, lsl #16
   14194:	movk	x1, #0xe38e, lsl #32
   14198:	movk	x1, #0x8e38, lsl #48
   1419c:	mul	x1, x2, x1
   141a0:	add	w1, w1, #0x1
   141a4:	lsl	w1, w1, #24
   141a8:	add	w1, w0, w1
   141ac:	ldr	x0, [sp, #24]
   141b0:	ldr	x0, [x0, #16]
   141b4:	str	w1, [x0, #24]
   141b8:	ldr	x0, [sp, #24]
   141bc:	ldr	x0, [x0, #16]
   141c0:	add	x1, x0, #0x20
   141c4:	ldr	x0, [sp, #24]
   141c8:	str	x1, [x0, #16]
   141cc:	ldr	x0, [sp, #24]
   141d0:	ldr	x0, [x0, #16]
   141d4:	str	xzr, [x0]
   141d8:	ldr	x0, [sp, #72]
   141dc:	add	x0, x0, #0x30
   141e0:	str	x0, [sp, #72]
   141e4:	ldr	x0, [sp, #72]
   141e8:	bl	af80 <_option_is_end@plt>
   141ec:	cmp	w0, #0x0
   141f0:	b.eq	13fe0 <argp_failure@@Base+0x634>  // b.none
   141f4:	ldr	x0, [sp, #56]
   141f8:	ldr	x1, [x0, #8]
   141fc:	ldr	x0, [sp, #32]
   14200:	str	x1, [x0]
   14204:	ldr	x0, [sp, #32]
   14208:	ldr	x1, [sp, #56]
   1420c:	str	x1, [x0, #8]
   14210:	ldr	x0, [sp, #24]
   14214:	ldr	x1, [x0, #8]
   14218:	ldr	x0, [sp, #32]
   1421c:	str	x1, [x0, #16]
   14220:	ldr	x0, [sp, #32]
   14224:	str	wzr, [x0, #24]
   14228:	ldr	x0, [sp, #32]
   1422c:	ldr	x1, [sp, #48]
   14230:	str	x1, [x0, #32]
   14234:	ldr	x0, [sp, #32]
   14238:	ldr	w1, [sp, #44]
   1423c:	str	w1, [x0, #40]
   14240:	ldr	x0, [sp, #32]
   14244:	str	xzr, [x0, #48]
   14248:	ldr	x0, [sp, #32]
   1424c:	str	xzr, [x0, #64]
   14250:	ldr	x0, [sp, #32]
   14254:	str	xzr, [x0, #56]
   14258:	ldr	x0, [sp, #80]
   1425c:	cmp	x0, #0x0
   14260:	b.eq	142c0 <argp_failure@@Base+0x914>  // b.none
   14264:	str	wzr, [sp, #68]
   14268:	b	14278 <argp_failure@@Base+0x8cc>
   1426c:	ldr	w0, [sp, #68]
   14270:	add	w0, w0, #0x1
   14274:	str	w0, [sp, #68]
   14278:	ldr	w0, [sp, #68]
   1427c:	lsl	x0, x0, #5
   14280:	ldr	x1, [sp, #80]
   14284:	add	x0, x1, x0
   14288:	ldr	x0, [x0]
   1428c:	cmp	x0, #0x0
   14290:	b.ne	1426c <argp_failure@@Base+0x8c0>  // b.any
   14294:	ldr	x0, [sp, #24]
   14298:	ldr	x1, [x0, #24]
   1429c:	ldr	x0, [sp, #32]
   142a0:	str	x1, [x0, #56]
   142a4:	ldr	x0, [sp, #24]
   142a8:	ldr	x1, [x0, #24]
   142ac:	ldr	w0, [sp, #68]
   142b0:	lsl	x0, x0, #3
   142b4:	add	x1, x1, x0
   142b8:	ldr	x0, [sp, #24]
   142bc:	str	x1, [x0, #24]
   142c0:	ldr	x0, [sp, #32]
   142c4:	add	x1, x0, #0x48
   142c8:	str	x1, [sp, #32]
   142cc:	str	x0, [sp, #48]
   142d0:	b	142d8 <argp_failure@@Base+0x92c>
   142d4:	str	xzr, [sp, #48]
   142d8:	ldr	x0, [sp, #80]
   142dc:	cmp	x0, #0x0
   142e0:	b.eq	14334 <argp_failure@@Base+0x988>  // b.none
   142e4:	str	wzr, [sp, #64]
   142e8:	b	14324 <argp_failure@@Base+0x978>
   142ec:	ldr	x0, [sp, #80]
   142f0:	add	x1, x0, #0x20
   142f4:	str	x1, [sp, #80]
   142f8:	ldr	x5, [x0]
   142fc:	ldr	w0, [sp, #64]
   14300:	add	w1, w0, #0x1
   14304:	str	w1, [sp, #64]
   14308:	ldr	x4, [sp, #24]
   1430c:	ldr	x3, [sp, #32]
   14310:	mov	w2, w0
   14314:	ldr	x1, [sp, #48]
   14318:	mov	x0, x5
   1431c:	bl	13f78 <argp_failure@@Base+0x5cc>
   14320:	str	x0, [sp, #32]
   14324:	ldr	x0, [sp, #80]
   14328:	ldr	x0, [x0]
   1432c:	cmp	x0, #0x0
   14330:	b.ne	142ec <argp_failure@@Base+0x940>  // b.any
   14334:	ldr	x0, [sp, #32]
   14338:	ldp	x29, x30, [sp], #96
   1433c:	ret
   14340:	stp	x29, x30, [sp, #-80]!
   14344:	mov	x29, sp
   14348:	str	x0, [sp, #40]
   1434c:	str	x1, [sp, #32]
   14350:	str	w2, [sp, #28]
   14354:	ldr	x0, [sp, #40]
   14358:	str	x0, [sp, #48]
   1435c:	ldr	x0, [sp, #40]
   14360:	ldr	x0, [x0, #8]
   14364:	str	x0, [sp, #56]
   14368:	ldr	x0, [sp, #40]
   1436c:	ldr	x0, [x0, #16]
   14370:	str	x0, [sp, #64]
   14374:	ldr	x0, [sp, #40]
   14378:	ldr	x0, [x0, #96]
   1437c:	str	x0, [sp, #72]
   14380:	ldr	w0, [sp, #28]
   14384:	and	w0, w0, #0x8
   14388:	cmp	w0, #0x0
   1438c:	b.eq	143a8 <argp_failure@@Base+0x9fc>  // b.none
   14390:	ldr	x0, [sp, #56]
   14394:	add	x1, x0, #0x1
   14398:	str	x1, [sp, #56]
   1439c:	mov	w1, #0x2d                  	// #45
   143a0:	strb	w1, [x0]
   143a4:	b	143cc <argp_failure@@Base+0xa20>
   143a8:	ldr	w0, [sp, #28]
   143ac:	and	w0, w0, #0x4
   143b0:	cmp	w0, #0x0
   143b4:	b.eq	143cc <argp_failure@@Base+0xa20>  // b.none
   143b8:	ldr	x0, [sp, #56]
   143bc:	add	x1, x0, #0x1
   143c0:	str	x1, [sp, #56]
   143c4:	mov	w1, #0x2b                  	// #43
   143c8:	strb	w1, [x0]
   143cc:	ldr	x0, [sp, #56]
   143d0:	strb	wzr, [x0]
   143d4:	ldr	x0, [sp, #64]
   143d8:	str	xzr, [x0]
   143dc:	ldr	x0, [sp, #40]
   143e0:	ldr	x1, [sp, #32]
   143e4:	str	x1, [x0]
   143e8:	ldr	x0, [sp, #32]
   143ec:	cmp	x0, #0x0
   143f0:	b.eq	14428 <argp_failure@@Base+0xa7c>  // b.none
   143f4:	ldr	x0, [sp, #40]
   143f8:	ldr	x0, [x0, #80]
   143fc:	add	x1, sp, #0x30
   14400:	mov	x4, x1
   14404:	mov	x3, x0
   14408:	mov	w2, #0x0                   	// #0
   1440c:	mov	x1, #0x0                   	// #0
   14410:	ldr	x0, [sp, #32]
   14414:	bl	13f78 <argp_failure@@Base+0x5cc>
   14418:	mov	x1, x0
   1441c:	ldr	x0, [sp, #40]
   14420:	str	x1, [x0, #88]
   14424:	b	14438 <argp_failure@@Base+0xa8c>
   14428:	ldr	x0, [sp, #40]
   1442c:	ldr	x1, [x0, #80]
   14430:	ldr	x0, [sp, #40]
   14434:	str	x1, [x0, #88]
   14438:	nop
   1443c:	ldp	x29, x30, [sp], #80
   14440:	ret
   14444:	stp	x29, x30, [sp, #-64]!
   14448:	mov	x29, sp
   1444c:	str	x0, [sp, #24]
   14450:	str	x1, [sp, #16]
   14454:	ldr	x0, [sp, #24]
   14458:	ldr	x0, [x0, #32]
   1445c:	str	x0, [sp, #56]
   14460:	ldr	x0, [sp, #24]
   14464:	ldr	x0, [x0]
   14468:	str	x0, [sp, #48]
   1446c:	ldr	x0, [sp, #48]
   14470:	cmp	x0, #0x0
   14474:	b.ne	14488 <argp_failure@@Base+0xadc>  // b.any
   14478:	ldr	x0, [sp, #24]
   1447c:	ldr	x0, [x0, #8]
   14480:	cmp	x0, #0x0
   14484:	b.eq	14514 <argp_failure@@Base+0xb68>  // b.none
   14488:	ldr	x0, [sp, #16]
   1448c:	ldr	x0, [x0, #16]
   14490:	add	x1, x0, #0x1
   14494:	ldr	x0, [sp, #16]
   14498:	str	x1, [x0, #16]
   1449c:	ldr	x0, [sp, #48]
   144a0:	cmp	x0, #0x0
   144a4:	b.eq	14514 <argp_failure@@Base+0xb68>  // b.none
   144a8:	str	wzr, [sp, #44]
   144ac:	b	144bc <argp_failure@@Base+0xb10>
   144b0:	ldr	w0, [sp, #44]
   144b4:	add	w0, w0, #0x1
   144b8:	str	w0, [sp, #44]
   144bc:	ldr	x0, [sp, #48]
   144c0:	add	x1, x0, #0x30
   144c4:	str	x1, [sp, #48]
   144c8:	bl	af80 <_option_is_end@plt>
   144cc:	cmp	w0, #0x0
   144d0:	b.eq	144b0 <argp_failure@@Base+0xb04>  // b.none
   144d4:	ldr	x0, [sp, #16]
   144d8:	ldr	x2, [x0]
   144dc:	ldr	w1, [sp, #44]
   144e0:	mov	w0, w1
   144e4:	lsl	w0, w0, #1
   144e8:	add	w0, w0, w1
   144ec:	sxtw	x0, w0
   144f0:	add	x1, x2, x0
   144f4:	ldr	x0, [sp, #16]
   144f8:	str	x1, [x0]
   144fc:	ldr	x0, [sp, #16]
   14500:	ldr	x1, [x0, #8]
   14504:	ldrsw	x0, [sp, #44]
   14508:	add	x1, x1, x0
   1450c:	ldr	x0, [sp, #16]
   14510:	str	x1, [x0, #8]
   14514:	ldr	x0, [sp, #56]
   14518:	cmp	x0, #0x0
   1451c:	b.eq	14560 <argp_failure@@Base+0xbb4>  // b.none
   14520:	b	14550 <argp_failure@@Base+0xba4>
   14524:	ldr	x0, [sp, #56]
   14528:	add	x1, x0, #0x20
   1452c:	str	x1, [sp, #56]
   14530:	ldr	x0, [x0]
   14534:	ldr	x1, [sp, #16]
   14538:	bl	14444 <argp_failure@@Base+0xa98>
   1453c:	ldr	x0, [sp, #16]
   14540:	ldr	x0, [x0, #24]
   14544:	add	x1, x0, #0x1
   14548:	ldr	x0, [sp, #16]
   1454c:	str	x1, [x0, #24]
   14550:	ldr	x0, [sp, #56]
   14554:	ldr	x0, [x0]
   14558:	cmp	x0, #0x0
   1455c:	b.ne	14524 <argp_failure@@Base+0xb78>  // b.any
   14560:	nop
   14564:	ldp	x29, x30, [sp], #64
   14568:	ret
   1456c:	stp	x29, x30, [sp, #-240]!
   14570:	mov	x29, sp
   14574:	str	x0, [sp, #56]
   14578:	str	x1, [sp, #48]
   1457c:	str	w2, [sp, #44]
   14580:	str	x3, [sp, #32]
   14584:	str	w4, [sp, #40]
   14588:	str	x5, [sp, #24]
   1458c:	str	wzr, [sp, #236]
   14590:	stp	xzr, xzr, [sp, #64]
   14594:	stp	xzr, xzr, [sp, #80]
   14598:	stp	xzr, xzr, [sp, #96]
   1459c:	str	xzr, [sp, #112]
   145a0:	mov	w0, #0x1                   	// #1
   145a4:	str	w0, [sp, #64]
   145a8:	mov	w0, #0x1                   	// #1
   145ac:	str	w0, [sp, #68]
   145b0:	ldr	w0, [sp, #40]
   145b4:	and	w0, w0, #0x4
   145b8:	cmp	w0, #0x0
   145bc:	cset	w0, eq  // eq = none
   145c0:	and	w0, w0, #0xff
   145c4:	and	x0, x0, #0xff
   145c8:	str	x0, [sp, #120]
   145cc:	str	xzr, [sp, #128]
   145d0:	str	xzr, [sp, #136]
   145d4:	str	xzr, [sp, #144]
   145d8:	ldr	x0, [sp, #48]
   145dc:	cmp	x0, #0x0
   145e0:	b.eq	145f4 <argp_failure@@Base+0xc48>  // b.none
   145e4:	add	x0, sp, #0x78
   145e8:	mov	x1, x0
   145ec:	ldr	x0, [sp, #48]
   145f0:	bl	14444 <argp_failure@@Base+0xa98>
   145f4:	ldr	x0, [sp, #136]
   145f8:	add	x1, x0, #0x1
   145fc:	mov	x0, x1
   14600:	lsl	x0, x0, #3
   14604:	add	x0, x0, x1
   14608:	lsl	x0, x0, #3
   1460c:	str	x0, [sp, #216]
   14610:	ldr	x0, [sp, #144]
   14614:	lsl	x0, x0, #3
   14618:	str	x0, [sp, #208]
   1461c:	ldr	x0, [sp, #128]
   14620:	add	x0, x0, #0x1
   14624:	lsl	x0, x0, #5
   14628:	str	x0, [sp, #200]
   1462c:	ldr	x0, [sp, #120]
   14630:	add	x0, x0, #0x1
   14634:	str	x0, [sp, #192]
   14638:	ldr	x0, [sp, #216]
   1463c:	str	x0, [sp, #184]
   14640:	ldr	x1, [sp, #184]
   14644:	ldr	x0, [sp, #208]
   14648:	add	x0, x1, x0
   1464c:	add	x0, x0, #0x7
   14650:	and	x0, x0, #0xfffffffffffffff8
   14654:	str	x0, [sp, #176]
   14658:	ldr	x1, [sp, #176]
   1465c:	ldr	x0, [sp, #200]
   14660:	add	x0, x1, x0
   14664:	str	x0, [sp, #168]
   14668:	ldr	x1, [sp, #168]
   1466c:	ldr	x0, [sp, #192]
   14670:	add	x0, x1, x0
   14674:	str	x0, [sp, #160]
   14678:	ldr	x0, [sp, #160]
   1467c:	bl	ab40 <malloc@plt>
   14680:	mov	x1, x0
   14684:	ldr	x0, [sp, #56]
   14688:	str	x1, [x0, #208]
   1468c:	ldr	x0, [sp, #56]
   14690:	ldr	x0, [x0, #208]
   14694:	cmp	x0, #0x0
   14698:	b.ne	146a4 <argp_failure@@Base+0xcf8>  // b.any
   1469c:	mov	w0, #0xc                   	// #12
   146a0:	b	149e4 <argp_failure@@Base+0x1038>
   146a4:	ldr	x0, [sp, #56]
   146a8:	ldr	x0, [x0, #208]
   146ac:	str	x0, [sp, #152]
   146b0:	ldr	x0, [sp, #56]
   146b4:	ldr	x1, [x0, #208]
   146b8:	ldr	x0, [sp, #56]
   146bc:	str	x1, [x0, #80]
   146c0:	ldr	x1, [sp, #152]
   146c4:	ldr	x0, [sp, #184]
   146c8:	add	x1, x1, x0
   146cc:	ldr	x0, [sp, #56]
   146d0:	str	x1, [x0, #96]
   146d4:	ldr	x1, [sp, #152]
   146d8:	ldr	x0, [sp, #176]
   146dc:	add	x1, x1, x0
   146e0:	ldr	x0, [sp, #56]
   146e4:	str	x1, [x0, #16]
   146e8:	ldr	x1, [sp, #152]
   146ec:	ldr	x0, [sp, #168]
   146f0:	add	x1, x1, x0
   146f4:	ldr	x0, [sp, #56]
   146f8:	str	x1, [x0, #8]
   146fc:	ldr	x0, [sp, #56]
   14700:	add	x0, x0, #0x18
   14704:	mov	x1, x0
   14708:	add	x0, sp, #0x40
   1470c:	ldp	x2, x3, [x0]
   14710:	stp	x2, x3, [x1]
   14714:	ldp	x2, x3, [x0, #16]
   14718:	stp	x2, x3, [x1, #16]
   1471c:	ldp	x2, x3, [x0, #32]
   14720:	stp	x2, x3, [x1, #32]
   14724:	ldr	x0, [x0, #48]
   14728:	str	x0, [x1, #48]
   1472c:	ldr	x0, [sp, #56]
   14730:	ldr	x0, [x0, #96]
   14734:	ldr	x2, [sp, #208]
   14738:	mov	w1, #0x0                   	// #0
   1473c:	bl	acb0 <memset@plt>
   14740:	ldr	w2, [sp, #40]
   14744:	ldr	x1, [sp, #48]
   14748:	ldr	x0, [sp, #56]
   1474c:	bl	14340 <argp_failure@@Base+0x994>
   14750:	ldr	x0, [sp, #56]
   14754:	add	x0, x0, #0x70
   14758:	mov	x2, #0x60                  	// #96
   1475c:	mov	w1, #0x0                   	// #0
   14760:	bl	acb0 <memset@plt>
   14764:	ldr	x0, [sp, #56]
   14768:	ldr	x1, [x0]
   1476c:	ldr	x0, [sp, #56]
   14770:	str	x1, [x0, #112]
   14774:	ldr	x0, [sp, #56]
   14778:	ldr	w1, [sp, #44]
   1477c:	str	w1, [x0, #120]
   14780:	ldr	x0, [sp, #56]
   14784:	ldr	x1, [sp, #32]
   14788:	str	x1, [x0, #128]
   1478c:	ldr	w1, [sp, #40]
   14790:	ldr	x0, [sp, #56]
   14794:	str	w1, [x0, #140]
   14798:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   1479c:	ldr	x0, [x0, #3816]
   147a0:	ldr	x1, [x0]
   147a4:	ldr	x0, [sp, #56]
   147a8:	str	x1, [x0, #184]
   147ac:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   147b0:	ldr	x0, [x0, #3872]
   147b4:	ldr	x1, [x0]
   147b8:	ldr	x0, [sp, #56]
   147bc:	str	x1, [x0, #192]
   147c0:	ldr	x0, [sp, #56]
   147c4:	str	wzr, [x0, #136]
   147c8:	ldr	x0, [sp, #56]
   147cc:	ldr	x1, [sp, #56]
   147d0:	str	x1, [x0, #200]
   147d4:	ldr	x0, [sp, #56]
   147d8:	mov	w1, #0x1                   	// #1
   147dc:	str	w1, [x0, #104]
   147e0:	ldr	x0, [sp, #56]
   147e4:	ldr	x1, [x0, #80]
   147e8:	ldr	x0, [sp, #56]
   147ec:	ldr	x0, [x0, #88]
   147f0:	cmp	x1, x0
   147f4:	b.cs	14808 <argp_failure@@Base+0xe5c>  // b.hs, b.nlast
   147f8:	ldr	x0, [sp, #56]
   147fc:	ldr	x0, [x0, #80]
   14800:	ldr	x1, [sp, #24]
   14804:	str	x1, [x0, #48]
   14808:	ldr	x0, [sp, #56]
   1480c:	ldr	x0, [x0, #80]
   14810:	str	x0, [sp, #224]
   14814:	b	148d4 <argp_failure@@Base+0xf28>
   14818:	ldr	x0, [sp, #224]
   1481c:	ldr	x0, [x0, #32]
   14820:	cmp	x0, #0x0
   14824:	b.eq	14854 <argp_failure@@Base+0xea8>  // b.none
   14828:	ldr	x0, [sp, #224]
   1482c:	ldr	x0, [x0, #32]
   14830:	ldr	x1, [x0, #56]
   14834:	ldr	x0, [sp, #224]
   14838:	ldr	w0, [x0, #40]
   1483c:	mov	w0, w0
   14840:	lsl	x0, x0, #3
   14844:	add	x0, x1, x0
   14848:	ldr	x1, [x0]
   1484c:	ldr	x0, [sp, #224]
   14850:	str	x1, [x0, #48]
   14854:	ldr	x0, [sp, #224]
   14858:	ldr	x0, [x0]
   1485c:	cmp	x0, #0x0
   14860:	b.ne	148a4 <argp_failure@@Base+0xef8>  // b.any
   14864:	ldr	x0, [sp, #224]
   14868:	ldr	x0, [x0, #8]
   1486c:	ldr	x0, [x0, #32]
   14870:	cmp	x0, #0x0
   14874:	b.eq	148a4 <argp_failure@@Base+0xef8>  // b.none
   14878:	ldr	x0, [sp, #224]
   1487c:	ldr	x0, [x0, #8]
   14880:	ldr	x0, [x0, #32]
   14884:	ldr	x0, [x0]
   14888:	cmp	x0, #0x0
   1488c:	b.eq	148a4 <argp_failure@@Base+0xef8>  // b.none
   14890:	ldr	x0, [sp, #224]
   14894:	ldr	x0, [x0, #56]
   14898:	ldr	x1, [sp, #224]
   1489c:	ldr	x1, [x1, #48]
   148a0:	str	x1, [x0]
   148a4:	ldr	x0, [sp, #56]
   148a8:	add	x0, x0, #0x70
   148ac:	mov	x3, #0x0                   	// #0
   148b0:	mov	w2, #0x3                   	// #3
   148b4:	movk	w2, #0x100, lsl #16
   148b8:	mov	x1, x0
   148bc:	ldr	x0, [sp, #224]
   148c0:	bl	13ed0 <argp_failure@@Base+0x524>
   148c4:	str	w0, [sp, #236]
   148c8:	ldr	x0, [sp, #224]
   148cc:	add	x0, x0, #0x48
   148d0:	str	x0, [sp, #224]
   148d4:	ldr	x0, [sp, #56]
   148d8:	ldr	x0, [x0, #88]
   148dc:	ldr	x1, [sp, #224]
   148e0:	cmp	x1, x0
   148e4:	b.cs	14900 <argp_failure@@Base+0xf54>  // b.hs, b.nlast
   148e8:	ldr	w0, [sp, #236]
   148ec:	cmp	w0, #0x0
   148f0:	b.eq	14818 <argp_failure@@Base+0xe6c>  // b.none
   148f4:	ldr	w0, [sp, #236]
   148f8:	cmp	w0, #0x7
   148fc:	b.eq	14818 <argp_failure@@Base+0xe6c>  // b.none
   14900:	ldr	w0, [sp, #236]
   14904:	cmp	w0, #0x7
   14908:	b.ne	14910 <argp_failure@@Base+0xf64>  // b.any
   1490c:	str	wzr, [sp, #236]
   14910:	ldr	w0, [sp, #236]
   14914:	cmp	w0, #0x0
   14918:	b.eq	14924 <argp_failure@@Base+0xf78>  // b.none
   1491c:	ldr	w0, [sp, #236]
   14920:	b	149e4 <argp_failure@@Base+0x1038>
   14924:	ldr	x0, [sp, #56]
   14928:	ldr	w0, [x0, #140]
   1492c:	and	w0, w0, #0x2
   14930:	cmp	w0, #0x0
   14934:	b.eq	14980 <argp_failure@@Base+0xfd4>  // b.none
   14938:	ldr	x0, [sp, #56]
   1493c:	str	wzr, [x0, #28]
   14940:	ldr	x0, [sp, #56]
   14944:	ldr	w0, [x0, #140]
   14948:	and	w0, w0, #0x1
   1494c:	cmp	w0, #0x0
   14950:	b.eq	1498c <argp_failure@@Base+0xfe0>  // b.none
   14954:	ldr	x0, [sp, #56]
   14958:	ldr	x0, [x0, #128]
   1495c:	sub	x1, x0, #0x8
   14960:	ldr	x0, [sp, #56]
   14964:	str	x1, [x0, #128]
   14968:	ldr	x0, [sp, #56]
   1496c:	ldr	w0, [x0, #120]
   14970:	add	w1, w0, #0x1
   14974:	ldr	x0, [sp, #56]
   14978:	str	w1, [x0, #120]
   1497c:	b	1498c <argp_failure@@Base+0xfe0>
   14980:	ldr	x0, [sp, #56]
   14984:	mov	w1, #0x1                   	// #1
   14988:	str	w1, [x0, #28]
   1498c:	ldr	x0, [sp, #56]
   14990:	ldr	x0, [x0, #128]
   14994:	ldr	x1, [sp, #32]
   14998:	cmp	x1, x0
   1499c:	b.ne	149cc <argp_failure@@Base+0x1020>  // b.any
   149a0:	ldr	x0, [sp, #32]
   149a4:	ldr	x0, [x0]
   149a8:	cmp	x0, #0x0
   149ac:	b.eq	149cc <argp_failure@@Base+0x1020>  // b.none
   149b0:	ldr	x0, [sp, #32]
   149b4:	ldr	x0, [x0]
   149b8:	bl	ad90 <last_component@plt>
   149bc:	mov	x1, x0
   149c0:	ldr	x0, [sp, #56]
   149c4:	str	x1, [x0, #176]
   149c8:	b	149e0 <argp_failure@@Base+0x1034>
   149cc:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   149d0:	ldr	x0, [x0, #4008]
   149d4:	ldr	x1, [x0]
   149d8:	ldr	x0, [sp, #56]
   149dc:	str	x1, [x0, #176]
   149e0:	mov	w0, #0x0                   	// #0
   149e4:	ldp	x29, x30, [sp], #240
   149e8:	ret
   149ec:	stp	x29, x30, [sp, #-80]!
   149f0:	mov	x29, sp
   149f4:	str	x19, [sp, #16]
   149f8:	str	x0, [sp, #56]
   149fc:	str	w1, [sp, #52]
   14a00:	str	w2, [sp, #48]
   14a04:	str	x3, [sp, #40]
   14a08:	ldr	w0, [sp, #52]
   14a0c:	cmp	w0, #0x7
   14a10:	b.ne	14a24 <argp_failure@@Base+0x1078>  // b.any
   14a14:	ldr	w0, [sp, #48]
   14a18:	cmp	w0, #0x0
   14a1c:	b.eq	14a24 <argp_failure@@Base+0x1078>  // b.none
   14a20:	str	wzr, [sp, #52]
   14a24:	ldr	w0, [sp, #52]
   14a28:	cmp	w0, #0x0
   14a2c:	b.ne	14be4 <argp_failure@@Base+0x1238>  // b.any
   14a30:	ldr	x0, [sp, #56]
   14a34:	ldr	w1, [x0, #136]
   14a38:	ldr	x0, [sp, #56]
   14a3c:	ldr	w0, [x0, #120]
   14a40:	cmp	w1, w0
   14a44:	b.ne	14b64 <argp_failure@@Base+0x11b8>  // b.any
   14a48:	ldr	x0, [sp, #56]
   14a4c:	ldr	x0, [x0, #80]
   14a50:	str	x0, [sp, #72]
   14a54:	b	14a98 <argp_failure@@Base+0x10ec>
   14a58:	ldr	x0, [sp, #72]
   14a5c:	ldr	w0, [x0, #24]
   14a60:	cmp	w0, #0x0
   14a64:	b.ne	14a8c <argp_failure@@Base+0x10e0>  // b.any
   14a68:	ldr	x0, [sp, #56]
   14a6c:	add	x0, x0, #0x70
   14a70:	mov	x3, #0x0                   	// #0
   14a74:	mov	w2, #0x2                   	// #2
   14a78:	movk	w2, #0x100, lsl #16
   14a7c:	mov	x1, x0
   14a80:	ldr	x0, [sp, #72]
   14a84:	bl	13ed0 <argp_failure@@Base+0x524>
   14a88:	str	w0, [sp, #52]
   14a8c:	ldr	x0, [sp, #72]
   14a90:	add	x0, x0, #0x48
   14a94:	str	x0, [sp, #72]
   14a98:	ldr	x0, [sp, #56]
   14a9c:	ldr	x0, [x0, #88]
   14aa0:	ldr	x1, [sp, #72]
   14aa4:	cmp	x1, x0
   14aa8:	b.cs	14ac4 <argp_failure@@Base+0x1118>  // b.hs, b.nlast
   14aac:	ldr	w0, [sp, #52]
   14ab0:	cmp	w0, #0x0
   14ab4:	b.eq	14a58 <argp_failure@@Base+0x10ac>  // b.none
   14ab8:	ldr	w0, [sp, #52]
   14abc:	cmp	w0, #0x7
   14ac0:	b.eq	14a58 <argp_failure@@Base+0x10ac>  // b.none
   14ac4:	ldr	x0, [sp, #56]
   14ac8:	ldr	x0, [x0, #88]
   14acc:	sub	x0, x0, #0x48
   14ad0:	str	x0, [sp, #72]
   14ad4:	b	14b08 <argp_failure@@Base+0x115c>
   14ad8:	ldr	x0, [sp, #56]
   14adc:	add	x0, x0, #0x70
   14ae0:	mov	x3, #0x0                   	// #0
   14ae4:	mov	w2, #0x1                   	// #1
   14ae8:	movk	w2, #0x100, lsl #16
   14aec:	mov	x1, x0
   14af0:	ldr	x0, [sp, #72]
   14af4:	bl	13ed0 <argp_failure@@Base+0x524>
   14af8:	str	w0, [sp, #52]
   14afc:	ldr	x0, [sp, #72]
   14b00:	sub	x0, x0, #0x48
   14b04:	str	x0, [sp, #72]
   14b08:	ldr	x0, [sp, #56]
   14b0c:	ldr	x0, [x0, #80]
   14b10:	ldr	x1, [sp, #72]
   14b14:	cmp	x1, x0
   14b18:	b.cc	14b34 <argp_failure@@Base+0x1188>  // b.lo, b.ul, b.last
   14b1c:	ldr	w0, [sp, #52]
   14b20:	cmp	w0, #0x0
   14b24:	b.eq	14ad8 <argp_failure@@Base+0x112c>  // b.none
   14b28:	ldr	w0, [sp, #52]
   14b2c:	cmp	w0, #0x7
   14b30:	b.eq	14ad8 <argp_failure@@Base+0x112c>  // b.none
   14b34:	ldr	w0, [sp, #52]
   14b38:	cmp	w0, #0x7
   14b3c:	b.ne	14b44 <argp_failure@@Base+0x1198>  // b.any
   14b40:	str	wzr, [sp, #52]
   14b44:	ldr	x0, [sp, #40]
   14b48:	cmp	x0, #0x0
   14b4c:	b.eq	14be4 <argp_failure@@Base+0x1238>  // b.none
   14b50:	ldr	x0, [sp, #56]
   14b54:	ldr	w1, [x0, #136]
   14b58:	ldr	x0, [sp, #40]
   14b5c:	str	w1, [x0]
   14b60:	b	14be4 <argp_failure@@Base+0x1238>
   14b64:	ldr	x0, [sp, #40]
   14b68:	cmp	x0, #0x0
   14b6c:	b.eq	14b84 <argp_failure@@Base+0x11d8>  // b.none
   14b70:	ldr	x0, [sp, #56]
   14b74:	ldr	w1, [x0, #136]
   14b78:	ldr	x0, [sp, #40]
   14b7c:	str	w1, [x0]
   14b80:	b	14be4 <argp_failure@@Base+0x1238>
   14b84:	ldr	x0, [sp, #56]
   14b88:	ldr	w0, [x0, #140]
   14b8c:	and	w0, w0, #0x2
   14b90:	cmp	w0, #0x0
   14b94:	b.ne	14bdc <argp_failure@@Base+0x1230>  // b.any
   14b98:	ldr	x0, [sp, #56]
   14b9c:	ldr	x0, [x0, #184]
   14ba0:	cmp	x0, #0x0
   14ba4:	b.eq	14bdc <argp_failure@@Base+0x1230>  // b.none
   14ba8:	ldr	x0, [sp, #56]
   14bac:	ldr	x19, [x0, #184]
   14bb0:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   14bb4:	add	x1, x0, #0x5e8
   14bb8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   14bbc:	add	x0, x0, #0x580
   14bc0:	bl	b120 <dgettext@plt>
   14bc4:	mov	x1, x0
   14bc8:	ldr	x0, [sp, #56]
   14bcc:	ldr	x0, [x0, #176]
   14bd0:	mov	x2, x0
   14bd4:	mov	x0, x19
   14bd8:	bl	b750 <fprintf@plt>
   14bdc:	mov	w0, #0x7                   	// #7
   14be0:	str	w0, [sp, #52]
   14be4:	ldr	w0, [sp, #52]
   14be8:	cmp	w0, #0x0
   14bec:	b.eq	14c70 <argp_failure@@Base+0x12c4>  // b.none
   14bf0:	ldr	w0, [sp, #52]
   14bf4:	cmp	w0, #0x7
   14bf8:	b.ne	14c1c <argp_failure@@Base+0x1270>  // b.any
   14bfc:	ldr	x0, [sp, #56]
   14c00:	add	x3, x0, #0x70
   14c04:	ldr	x0, [sp, #56]
   14c08:	ldr	x0, [x0, #184]
   14c0c:	mov	w2, #0x104                 	// #260
   14c10:	mov	x1, x0
   14c14:	mov	x0, x3
   14c18:	bl	b4d0 <argp_state_help@plt>
   14c1c:	ldr	x0, [sp, #56]
   14c20:	ldr	x0, [x0, #80]
   14c24:	str	x0, [sp, #72]
   14c28:	b	14c58 <argp_failure@@Base+0x12ac>
   14c2c:	ldr	x0, [sp, #56]
   14c30:	add	x0, x0, #0x70
   14c34:	mov	x3, #0x0                   	// #0
   14c38:	mov	w2, #0x5                   	// #5
   14c3c:	movk	w2, #0x100, lsl #16
   14c40:	mov	x1, x0
   14c44:	ldr	x0, [sp, #72]
   14c48:	bl	13ed0 <argp_failure@@Base+0x524>
   14c4c:	ldr	x0, [sp, #72]
   14c50:	add	x0, x0, #0x48
   14c54:	str	x0, [sp, #72]
   14c58:	ldr	x0, [sp, #56]
   14c5c:	ldr	x0, [x0, #88]
   14c60:	ldr	x1, [sp, #72]
   14c64:	cmp	x1, x0
   14c68:	b.cc	14c2c <argp_failure@@Base+0x1280>  // b.lo, b.ul, b.last
   14c6c:	b	14cf0 <argp_failure@@Base+0x1344>
   14c70:	ldr	x0, [sp, #56]
   14c74:	ldr	x0, [x0, #88]
   14c78:	sub	x0, x0, #0x48
   14c7c:	str	x0, [sp, #72]
   14c80:	b	14cb4 <argp_failure@@Base+0x1308>
   14c84:	ldr	x0, [sp, #56]
   14c88:	add	x0, x0, #0x70
   14c8c:	mov	x3, #0x0                   	// #0
   14c90:	mov	w2, #0x4                   	// #4
   14c94:	movk	w2, #0x100, lsl #16
   14c98:	mov	x1, x0
   14c9c:	ldr	x0, [sp, #72]
   14ca0:	bl	13ed0 <argp_failure@@Base+0x524>
   14ca4:	str	w0, [sp, #52]
   14ca8:	ldr	x0, [sp, #72]
   14cac:	sub	x0, x0, #0x48
   14cb0:	str	x0, [sp, #72]
   14cb4:	ldr	x0, [sp, #56]
   14cb8:	ldr	x0, [x0, #80]
   14cbc:	ldr	x1, [sp, #72]
   14cc0:	cmp	x1, x0
   14cc4:	b.cc	14ce0 <argp_failure@@Base+0x1334>  // b.lo, b.ul, b.last
   14cc8:	ldr	w0, [sp, #52]
   14ccc:	cmp	w0, #0x0
   14cd0:	b.eq	14c84 <argp_failure@@Base+0x12d8>  // b.none
   14cd4:	ldr	w0, [sp, #52]
   14cd8:	cmp	w0, #0x7
   14cdc:	b.eq	14c84 <argp_failure@@Base+0x12d8>  // b.none
   14ce0:	ldr	w0, [sp, #52]
   14ce4:	cmp	w0, #0x7
   14ce8:	b.ne	14cf0 <argp_failure@@Base+0x1344>  // b.any
   14cec:	str	wzr, [sp, #52]
   14cf0:	ldr	x0, [sp, #56]
   14cf4:	ldr	x0, [x0, #88]
   14cf8:	sub	x0, x0, #0x48
   14cfc:	str	x0, [sp, #72]
   14d00:	b	14d30 <argp_failure@@Base+0x1384>
   14d04:	ldr	x0, [sp, #56]
   14d08:	add	x0, x0, #0x70
   14d0c:	mov	x3, #0x0                   	// #0
   14d10:	mov	w2, #0x7                   	// #7
   14d14:	movk	w2, #0x100, lsl #16
   14d18:	mov	x1, x0
   14d1c:	ldr	x0, [sp, #72]
   14d20:	bl	13ed0 <argp_failure@@Base+0x524>
   14d24:	ldr	x0, [sp, #72]
   14d28:	sub	x0, x0, #0x48
   14d2c:	str	x0, [sp, #72]
   14d30:	ldr	x0, [sp, #56]
   14d34:	ldr	x0, [x0, #80]
   14d38:	ldr	x1, [sp, #72]
   14d3c:	cmp	x1, x0
   14d40:	b.cs	14d04 <argp_failure@@Base+0x1358>  // b.hs, b.nlast
   14d44:	ldr	w0, [sp, #52]
   14d48:	cmp	w0, #0x7
   14d4c:	b.ne	14d58 <argp_failure@@Base+0x13ac>  // b.any
   14d50:	mov	w0, #0x16                  	// #22
   14d54:	str	w0, [sp, #52]
   14d58:	ldr	x0, [sp, #56]
   14d5c:	ldr	x0, [x0, #208]
   14d60:	bl	b130 <free@plt>
   14d64:	ldr	w0, [sp, #52]
   14d68:	ldr	x19, [sp, #16]
   14d6c:	ldp	x29, x30, [sp], #80
   14d70:	ret
   14d74:	stp	x29, x30, [sp, #-64]!
   14d78:	mov	x29, sp
   14d7c:	str	x0, [sp, #24]
   14d80:	str	x1, [sp, #16]
   14d84:	ldr	x0, [sp, #24]
   14d88:	ldr	w0, [x0, #136]
   14d8c:	sub	w1, w0, #0x1
   14d90:	ldr	x0, [sp, #24]
   14d94:	str	w1, [x0, #136]
   14d98:	ldr	x0, [sp, #24]
   14d9c:	ldr	w0, [x0, #136]
   14da0:	str	w0, [sp, #40]
   14da4:	mov	w0, #0x7                   	// #7
   14da8:	str	w0, [sp, #60]
   14dac:	str	wzr, [sp, #44]
   14db0:	ldr	x0, [sp, #24]
   14db4:	ldr	x0, [x0, #80]
   14db8:	str	x0, [sp, #48]
   14dbc:	b	14e50 <argp_failure@@Base+0x14a4>
   14dc0:	ldr	x0, [sp, #24]
   14dc4:	ldr	w0, [x0, #136]
   14dc8:	add	w1, w0, #0x1
   14dcc:	ldr	x0, [sp, #24]
   14dd0:	str	w1, [x0, #136]
   14dd4:	str	wzr, [sp, #44]
   14dd8:	ldr	x0, [sp, #24]
   14ddc:	add	x0, x0, #0x70
   14de0:	ldr	x3, [sp, #16]
   14de4:	ldr	w2, [sp, #44]
   14de8:	mov	x1, x0
   14dec:	ldr	x0, [sp, #48]
   14df0:	bl	13ed0 <argp_failure@@Base+0x524>
   14df4:	str	w0, [sp, #60]
   14df8:	ldr	w0, [sp, #60]
   14dfc:	cmp	w0, #0x7
   14e00:	b.ne	14e44 <argp_failure@@Base+0x1498>  // b.any
   14e04:	ldr	x0, [sp, #24]
   14e08:	ldr	w0, [x0, #136]
   14e0c:	sub	w1, w0, #0x1
   14e10:	ldr	x0, [sp, #24]
   14e14:	str	w1, [x0, #136]
   14e18:	mov	w0, #0x6                   	// #6
   14e1c:	movk	w0, #0x100, lsl #16
   14e20:	str	w0, [sp, #44]
   14e24:	ldr	x0, [sp, #24]
   14e28:	add	x0, x0, #0x70
   14e2c:	mov	x3, #0x0                   	// #0
   14e30:	ldr	w2, [sp, #44]
   14e34:	mov	x1, x0
   14e38:	ldr	x0, [sp, #48]
   14e3c:	bl	13ed0 <argp_failure@@Base+0x524>
   14e40:	str	w0, [sp, #60]
   14e44:	ldr	x0, [sp, #48]
   14e48:	add	x0, x0, #0x48
   14e4c:	str	x0, [sp, #48]
   14e50:	ldr	x0, [sp, #24]
   14e54:	ldr	x0, [x0, #88]
   14e58:	ldr	x1, [sp, #48]
   14e5c:	cmp	x1, x0
   14e60:	b.cs	14e70 <argp_failure@@Base+0x14c4>  // b.hs, b.nlast
   14e64:	ldr	w0, [sp, #60]
   14e68:	cmp	w0, #0x7
   14e6c:	b.eq	14dc0 <argp_failure@@Base+0x1414>  // b.none
   14e70:	ldr	w0, [sp, #60]
   14e74:	cmp	w0, #0x0
   14e78:	b.ne	14ef0 <argp_failure@@Base+0x1544>  // b.any
   14e7c:	ldr	w1, [sp, #44]
   14e80:	mov	w0, #0x6                   	// #6
   14e84:	movk	w0, #0x100, lsl #16
   14e88:	cmp	w1, w0
   14e8c:	b.ne	14ea0 <argp_failure@@Base+0x14f4>  // b.any
   14e90:	ldr	x0, [sp, #24]
   14e94:	ldr	w1, [x0, #120]
   14e98:	ldr	x0, [sp, #24]
   14e9c:	str	w1, [x0, #136]
   14ea0:	ldr	x0, [sp, #24]
   14ea4:	ldr	w0, [x0, #136]
   14ea8:	ldr	w1, [sp, #40]
   14eac:	cmp	w1, w0
   14eb0:	b.ge	14ee4 <argp_failure@@Base+0x1538>  // b.tcont
   14eb4:	ldr	x0, [sp, #48]
   14eb8:	sub	x0, x0, #0x48
   14ebc:	str	x0, [sp, #48]
   14ec0:	ldr	x0, [sp, #48]
   14ec4:	ldr	w1, [x0, #24]
   14ec8:	ldr	x2, [sp, #24]
   14ecc:	ldr	w3, [x2, #136]
   14ed0:	ldr	w2, [sp, #40]
   14ed4:	sub	w2, w3, w2
   14ed8:	add	w1, w1, w2
   14edc:	str	w1, [x0, #24]
   14ee0:	b	14ef0 <argp_failure@@Base+0x1544>
   14ee4:	ldr	x0, [sp, #24]
   14ee8:	mov	w1, #0x1                   	// #1
   14eec:	str	w1, [x0, #104]
   14ef0:	ldr	w0, [sp, #60]
   14ef4:	ldp	x29, x30, [sp], #64
   14ef8:	ret
   14efc:	stp	x29, x30, [sp, #-112]!
   14f00:	mov	x29, sp
   14f04:	stp	x19, x20, [sp, #16]
   14f08:	str	x0, [sp, #56]
   14f0c:	str	w1, [sp, #52]
   14f10:	str	x2, [sp, #40]
   14f14:	ldr	w0, [sp, #52]
   14f18:	asr	w0, w0, #24
   14f1c:	str	w0, [sp, #84]
   14f20:	mov	w0, #0x7                   	// #7
   14f24:	str	w0, [sp, #108]
   14f28:	ldr	w0, [sp, #84]
   14f2c:	cmp	w0, #0x0
   14f30:	b.ne	14fc4 <argp_failure@@Base+0x1618>  // b.any
   14f34:	ldr	x0, [sp, #56]
   14f38:	ldr	x0, [x0, #8]
   14f3c:	ldr	w1, [sp, #52]
   14f40:	bl	b270 <strchr@plt>
   14f44:	str	x0, [sp, #72]
   14f48:	ldr	x0, [sp, #72]
   14f4c:	cmp	x0, #0x0
   14f50:	b.eq	15038 <argp_failure@@Base+0x168c>  // b.none
   14f54:	ldr	x0, [sp, #56]
   14f58:	ldr	x0, [x0, #80]
   14f5c:	str	x0, [sp, #96]
   14f60:	b	14fac <argp_failure@@Base+0x1600>
   14f64:	ldr	x0, [sp, #96]
   14f68:	ldr	x0, [x0, #16]
   14f6c:	ldr	x1, [sp, #72]
   14f70:	cmp	x1, x0
   14f74:	b.cs	14fa0 <argp_failure@@Base+0x15f4>  // b.hs, b.nlast
   14f78:	ldr	x0, [sp, #56]
   14f7c:	add	x1, x0, #0x70
   14f80:	ldr	x0, [sp, #56]
   14f84:	ldr	x0, [x0, #40]
   14f88:	mov	x3, x0
   14f8c:	ldr	w2, [sp, #52]
   14f90:	ldr	x0, [sp, #96]
   14f94:	bl	13ed0 <argp_failure@@Base+0x524>
   14f98:	str	w0, [sp, #108]
   14f9c:	b	15038 <argp_failure@@Base+0x168c>
   14fa0:	ldr	x0, [sp, #96]
   14fa4:	add	x0, x0, #0x48
   14fa8:	str	x0, [sp, #96]
   14fac:	ldr	x0, [sp, #56]
   14fb0:	ldr	x0, [x0, #88]
   14fb4:	ldr	x1, [sp, #96]
   14fb8:	cmp	x1, x0
   14fbc:	b.cc	14f64 <argp_failure@@Base+0x15b8>  // b.lo, b.ul, b.last
   14fc0:	b	15038 <argp_failure@@Base+0x168c>
   14fc4:	ldr	w0, [sp, #52]
   14fc8:	and	w0, w0, #0x800000
   14fcc:	cmp	w0, #0x0
   14fd0:	b.eq	14fdc <argp_failure@@Base+0x1630>  // b.none
   14fd4:	mov	w0, #0xff000000            	// #-16777216
   14fd8:	b	14fe0 <argp_failure@@Base+0x1634>
   14fdc:	mov	w0, #0x0                   	// #0
   14fe0:	ldr	w1, [sp, #52]
   14fe4:	and	w1, w1, #0xffffff
   14fe8:	orr	w0, w0, w1
   14fec:	str	w0, [sp, #80]
   14ff0:	ldr	x0, [sp, #56]
   14ff4:	ldr	x2, [x0, #80]
   14ff8:	ldrsw	x1, [sp, #84]
   14ffc:	mov	x0, x1
   15000:	lsl	x0, x0, #3
   15004:	add	x0, x0, x1
   15008:	lsl	x0, x0, #3
   1500c:	sub	x0, x0, #0x48
   15010:	add	x4, x2, x0
   15014:	ldr	x0, [sp, #56]
   15018:	add	x1, x0, #0x70
   1501c:	ldr	x0, [sp, #56]
   15020:	ldr	x0, [x0, #40]
   15024:	mov	x3, x0
   15028:	ldr	w2, [sp, #80]
   1502c:	mov	x0, x4
   15030:	bl	13ed0 <argp_failure@@Base+0x524>
   15034:	str	w0, [sp, #108]
   15038:	ldr	w0, [sp, #108]
   1503c:	cmp	w0, #0x7
   15040:	b.ne	15120 <argp_failure@@Base+0x1774>  // b.any
   15044:	ldr	w0, [sp, #84]
   15048:	cmp	w0, #0x0
   1504c:	b.ne	15088 <argp_failure@@Base+0x16dc>  // b.any
   15050:	ldr	x0, [sp, #56]
   15054:	add	x19, x0, #0x70
   15058:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1505c:	add	x1, x0, #0x628
   15060:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   15064:	add	x0, x0, #0x580
   15068:	bl	b120 <dgettext@plt>
   1506c:	mov	x3, x0
   15070:	ldr	w2, [sp, #52]
   15074:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   15078:	add	x1, x0, #0x600
   1507c:	mov	x0, x19
   15080:	bl	b290 <argp_error@plt>
   15084:	b	15120 <argp_failure@@Base+0x1774>
   15088:	ldr	x0, [sp, #56]
   1508c:	ldr	x0, [x0, #16]
   15090:	str	x0, [sp, #88]
   15094:	b	150a4 <argp_failure@@Base+0x16f8>
   15098:	ldr	x0, [sp, #88]
   1509c:	add	x0, x0, #0x20
   150a0:	str	x0, [sp, #88]
   150a4:	ldr	x0, [sp, #88]
   150a8:	ldr	w0, [x0, #24]
   150ac:	ldr	w1, [sp, #52]
   150b0:	cmp	w1, w0
   150b4:	b.eq	150c8 <argp_failure@@Base+0x171c>  // b.none
   150b8:	ldr	x0, [sp, #88]
   150bc:	ldr	x0, [x0]
   150c0:	cmp	x0, #0x0
   150c4:	b.ne	15098 <argp_failure@@Base+0x16ec>  // b.any
   150c8:	ldr	x0, [sp, #56]
   150cc:	add	x20, x0, #0x70
   150d0:	ldr	x0, [sp, #88]
   150d4:	ldr	x0, [x0]
   150d8:	cmp	x0, #0x0
   150dc:	b.eq	150ec <argp_failure@@Base+0x1740>  // b.none
   150e0:	ldr	x0, [sp, #88]
   150e4:	ldr	x19, [x0]
   150e8:	b	150f4 <argp_failure@@Base+0x1748>
   150ec:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   150f0:	add	x19, x0, #0x608
   150f4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   150f8:	add	x1, x0, #0x628
   150fc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   15100:	add	x0, x0, #0x580
   15104:	bl	b120 <dgettext@plt>
   15108:	mov	x3, x0
   1510c:	mov	x2, x19
   15110:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   15114:	add	x1, x0, #0x610
   15118:	mov	x0, x20
   1511c:	bl	b290 <argp_error@plt>
   15120:	ldr	w0, [sp, #108]
   15124:	ldp	x19, x20, [sp, #16]
   15128:	ldp	x29, x30, [sp], #112
   1512c:	ret
   15130:	stp	x29, x30, [sp, #-48]!
   15134:	mov	x29, sp
   15138:	str	x0, [sp, #24]
   1513c:	str	x1, [sp, #16]
   15140:	str	wzr, [sp, #40]
   15144:	ldr	x0, [sp, #24]
   15148:	ldr	w0, [x0, #148]
   1514c:	cmp	w0, #0x0
   15150:	b.eq	15174 <argp_failure@@Base+0x17c8>  // b.none
   15154:	ldr	x0, [sp, #24]
   15158:	ldr	w1, [x0, #136]
   1515c:	ldr	x0, [sp, #24]
   15160:	ldr	w0, [x0, #148]
   15164:	cmp	w1, w0
   15168:	b.ge	15174 <argp_failure@@Base+0x17c8>  // b.tcont
   1516c:	ldr	x0, [sp, #24]
   15170:	str	wzr, [x0, #148]
   15174:	ldr	x0, [sp, #24]
   15178:	ldr	w0, [x0, #104]
   1517c:	cmp	w0, #0x0
   15180:	b.eq	152f0 <argp_failure@@Base+0x1944>  // b.none
   15184:	ldr	x0, [sp, #24]
   15188:	ldr	w0, [x0, #148]
   1518c:	cmp	w0, #0x0
   15190:	b.ne	152f0 <argp_failure@@Base+0x1944>  // b.any
   15194:	ldr	x0, [sp, #24]
   15198:	ldr	w1, [x0, #136]
   1519c:	ldr	x0, [sp, #24]
   151a0:	str	w1, [x0, #24]
   151a4:	ldr	x0, [sp, #24]
   151a8:	mov	w1, #0xffffffff            	// #-1
   151ac:	str	w1, [x0, #32]
   151b0:	ldr	x0, [sp, #24]
   151b4:	ldr	w0, [x0, #140]
   151b8:	and	w0, w0, #0x40
   151bc:	cmp	w0, #0x0
   151c0:	b.eq	15204 <argp_failure@@Base+0x1858>  // b.none
   151c4:	ldr	x0, [sp, #24]
   151c8:	ldr	w6, [x0, #120]
   151cc:	ldr	x0, [sp, #24]
   151d0:	ldr	x1, [x0, #128]
   151d4:	ldr	x0, [sp, #24]
   151d8:	ldr	x2, [x0, #8]
   151dc:	ldr	x0, [sp, #24]
   151e0:	ldr	x3, [x0, #16]
   151e4:	ldr	x0, [sp, #24]
   151e8:	add	x0, x0, #0x18
   151ec:	mov	x5, x0
   151f0:	mov	x4, #0x0                   	// #0
   151f4:	mov	w0, w6
   151f8:	bl	af90 <_getopt_long_only_r@plt>
   151fc:	str	w0, [sp, #44]
   15200:	b	15240 <argp_failure@@Base+0x1894>
   15204:	ldr	x0, [sp, #24]
   15208:	ldr	w6, [x0, #120]
   1520c:	ldr	x0, [sp, #24]
   15210:	ldr	x1, [x0, #128]
   15214:	ldr	x0, [sp, #24]
   15218:	ldr	x2, [x0, #8]
   1521c:	ldr	x0, [sp, #24]
   15220:	ldr	x3, [x0, #16]
   15224:	ldr	x0, [sp, #24]
   15228:	add	x0, x0, #0x18
   1522c:	mov	x5, x0
   15230:	mov	x4, #0x0                   	// #0
   15234:	mov	w0, w6
   15238:	bl	b080 <_getopt_long_r@plt>
   1523c:	str	w0, [sp, #44]
   15240:	ldr	x0, [sp, #24]
   15244:	ldr	w1, [x0, #24]
   15248:	ldr	x0, [sp, #24]
   1524c:	str	w1, [x0, #136]
   15250:	ldr	w0, [sp, #44]
   15254:	cmn	w0, #0x1
   15258:	b.ne	152c4 <argp_failure@@Base+0x1918>  // b.any
   1525c:	ldr	x0, [sp, #24]
   15260:	str	wzr, [x0, #104]
   15264:	ldr	x0, [sp, #24]
   15268:	ldr	w0, [x0, #136]
   1526c:	cmp	w0, #0x1
   15270:	b.le	152fc <argp_failure@@Base+0x1950>
   15274:	ldr	x0, [sp, #24]
   15278:	ldr	x1, [x0, #128]
   1527c:	ldr	x0, [sp, #24]
   15280:	ldr	w0, [x0, #136]
   15284:	sxtw	x0, w0
   15288:	lsl	x0, x0, #3
   1528c:	sub	x0, x0, #0x8
   15290:	add	x0, x1, x0
   15294:	ldr	x2, [x0]
   15298:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1529c:	add	x1, x0, #0x620
   152a0:	mov	x0, x2
   152a4:	bl	b070 <strcmp@plt>
   152a8:	cmp	w0, #0x0
   152ac:	b.ne	152fc <argp_failure@@Base+0x1950>  // b.any
   152b0:	ldr	x0, [sp, #24]
   152b4:	ldr	w1, [x0, #136]
   152b8:	ldr	x0, [sp, #24]
   152bc:	str	w1, [x0, #148]
   152c0:	b	152fc <argp_failure@@Base+0x1950>
   152c4:	ldr	w0, [sp, #44]
   152c8:	cmp	w0, #0x3f
   152cc:	b.ne	152fc <argp_failure@@Base+0x1950>  // b.any
   152d0:	ldr	x0, [sp, #24]
   152d4:	ldr	w0, [x0, #32]
   152d8:	cmn	w0, #0x1
   152dc:	b.eq	152fc <argp_failure@@Base+0x1950>  // b.none
   152e0:	ldr	x0, [sp, #16]
   152e4:	str	wzr, [x0]
   152e8:	mov	w0, #0x7                   	// #7
   152ec:	b	15408 <argp_failure@@Base+0x1a5c>
   152f0:	mov	w0, #0xffffffff            	// #-1
   152f4:	str	w0, [sp, #44]
   152f8:	b	15300 <argp_failure@@Base+0x1954>
   152fc:	nop
   15300:	ldr	w0, [sp, #44]
   15304:	cmn	w0, #0x1
   15308:	b.ne	15388 <argp_failure@@Base+0x19dc>  // b.any
   1530c:	ldr	x0, [sp, #24]
   15310:	ldr	w1, [x0, #136]
   15314:	ldr	x0, [sp, #24]
   15318:	ldr	w0, [x0, #120]
   1531c:	cmp	w1, w0
   15320:	b.ge	15338 <argp_failure@@Base+0x198c>  // b.tcont
   15324:	ldr	x0, [sp, #24]
   15328:	ldr	w0, [x0, #140]
   1532c:	and	w0, w0, #0x4
   15330:	cmp	w0, #0x0
   15334:	b.eq	1534c <argp_failure@@Base+0x19a0>  // b.none
   15338:	ldr	x0, [sp, #16]
   1533c:	mov	w1, #0x1                   	// #1
   15340:	str	w1, [x0]
   15344:	mov	w0, #0x7                   	// #7
   15348:	b	15408 <argp_failure@@Base+0x1a5c>
   1534c:	mov	w0, #0x1                   	// #1
   15350:	str	w0, [sp, #44]
   15354:	ldr	x0, [sp, #24]
   15358:	ldr	x1, [x0, #128]
   1535c:	ldr	x0, [sp, #24]
   15360:	ldr	w0, [x0, #136]
   15364:	add	w3, w0, #0x1
   15368:	ldr	x2, [sp, #24]
   1536c:	str	w3, [x2, #136]
   15370:	sxtw	x0, w0
   15374:	lsl	x0, x0, #3
   15378:	add	x0, x1, x0
   1537c:	ldr	x1, [x0]
   15380:	ldr	x0, [sp, #24]
   15384:	str	x1, [x0, #40]
   15388:	ldr	w0, [sp, #44]
   1538c:	cmp	w0, #0x1
   15390:	b.ne	153b0 <argp_failure@@Base+0x1a04>  // b.any
   15394:	ldr	x0, [sp, #24]
   15398:	ldr	x0, [x0, #40]
   1539c:	mov	x1, x0
   153a0:	ldr	x0, [sp, #24]
   153a4:	bl	14d74 <argp_failure@@Base+0x13c8>
   153a8:	str	w0, [sp, #40]
   153ac:	b	153cc <argp_failure@@Base+0x1a20>
   153b0:	ldr	x0, [sp, #24]
   153b4:	ldr	x0, [x0, #40]
   153b8:	mov	x2, x0
   153bc:	ldr	w1, [sp, #44]
   153c0:	ldr	x0, [sp, #24]
   153c4:	bl	14efc <argp_failure@@Base+0x1550>
   153c8:	str	w0, [sp, #40]
   153cc:	ldr	w0, [sp, #40]
   153d0:	cmp	w0, #0x7
   153d4:	b.ne	15404 <argp_failure@@Base+0x1a58>  // b.any
   153d8:	ldr	w0, [sp, #44]
   153dc:	cmn	w0, #0x1
   153e0:	b.eq	153f0 <argp_failure@@Base+0x1a44>  // b.none
   153e4:	ldr	w0, [sp, #44]
   153e8:	cmp	w0, #0x1
   153ec:	b.ne	153f8 <argp_failure@@Base+0x1a4c>  // b.any
   153f0:	mov	w0, #0x1                   	// #1
   153f4:	b	153fc <argp_failure@@Base+0x1a50>
   153f8:	mov	w0, #0x0                   	// #0
   153fc:	ldr	x1, [sp, #16]
   15400:	str	w0, [x1]
   15404:	ldr	w0, [sp, #40]
   15408:	ldp	x29, x30, [sp], #48
   1540c:	ret

0000000000015410 <argp_parse@@Base>:
   15410:	stp	x29, x30, [sp, #-320]!
   15414:	mov	x29, sp
   15418:	str	x0, [x29, #56]
   1541c:	str	w1, [x29, #52]
   15420:	str	x2, [x29, #40]
   15424:	str	w3, [x29, #48]
   15428:	str	x4, [x29, #32]
   1542c:	str	x5, [x29, #24]
   15430:	str	wzr, [x29, #76]
   15434:	ldr	w0, [x29, #48]
   15438:	and	w0, w0, #0x1
   1543c:	cmp	w0, #0x0
   15440:	b.ne	1549c <argp_parse@@Base+0x8c>  // b.any
   15444:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   15448:	ldr	x0, [x0, #3768]
   1544c:	ldr	x0, [x0]
   15450:	cmp	x0, #0x0
   15454:	b.ne	1546c <argp_parse@@Base+0x5c>  // b.any
   15458:	ldr	x0, [x29, #40]
   1545c:	ldr	x1, [x0]
   15460:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   15464:	ldr	x0, [x0, #3768]
   15468:	str	x1, [x0]
   1546c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   15470:	ldr	x0, [x0, #4008]
   15474:	ldr	x0, [x0]
   15478:	cmp	x0, #0x0
   1547c:	b.ne	1549c <argp_parse@@Base+0x8c>  // b.any
   15480:	ldr	x0, [x29, #40]
   15484:	ldr	x0, [x0]
   15488:	bl	ad90 <last_component@plt>
   1548c:	mov	x1, x0
   15490:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   15494:	ldr	x0, [x0, #4008]
   15498:	str	x1, [x0]
   1549c:	ldr	w0, [x29, #48]
   154a0:	and	w0, w0, #0x10
   154a4:	cmp	w0, #0x0
   154a8:	b.ne	15590 <argp_parse@@Base+0x180>  // b.any
   154ac:	sub	sp, sp, #0x80
   154b0:	mov	x0, sp
   154b4:	add	x0, x0, #0xf
   154b8:	lsr	x0, x0, #4
   154bc:	lsl	x0, x0, #4
   154c0:	str	x0, [x29, #304]
   154c4:	sub	sp, sp, #0x40
   154c8:	mov	x0, sp
   154cc:	add	x0, x0, #0xf
   154d0:	lsr	x0, x0, #4
   154d4:	lsl	x0, x0, #4
   154d8:	str	x0, [x29, #296]
   154dc:	mov	x2, #0x38                  	// #56
   154e0:	mov	w1, #0x0                   	// #0
   154e4:	ldr	x0, [x29, #296]
   154e8:	bl	acb0 <memset@plt>
   154ec:	ldr	x0, [x29, #296]
   154f0:	ldr	x1, [x29, #304]
   154f4:	str	x1, [x0, #32]
   154f8:	mov	x2, #0x80                  	// #128
   154fc:	mov	w1, #0x0                   	// #0
   15500:	ldr	x0, [x29, #304]
   15504:	bl	acb0 <memset@plt>
   15508:	ldr	x0, [x29, #56]
   1550c:	cmp	x0, #0x0
   15510:	b.eq	15528 <argp_parse@@Base+0x118>  // b.none
   15514:	ldr	x0, [x29, #304]
   15518:	add	x1, x0, #0x20
   1551c:	str	x1, [x29, #304]
   15520:	ldr	x1, [x29, #56]
   15524:	str	x1, [x0]
   15528:	ldr	x0, [x29, #304]
   1552c:	add	x1, x0, #0x20
   15530:	str	x1, [x29, #304]
   15534:	adrp	x1, 5c000 <vasnprintf@@Base+0x1be04>
   15538:	add	x1, x1, #0x888
   1553c:	str	x1, [x0]
   15540:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   15544:	ldr	x0, [x0, #3936]
   15548:	ldr	x0, [x0]
   1554c:	cmp	x0, #0x0
   15550:	b.ne	15568 <argp_parse@@Base+0x158>  // b.any
   15554:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   15558:	ldr	x0, [x0, #4056]
   1555c:	ldr	x0, [x0]
   15560:	cmp	x0, #0x0
   15564:	b.eq	15580 <argp_parse@@Base+0x170>  // b.none
   15568:	ldr	x0, [x29, #304]
   1556c:	add	x1, x0, #0x20
   15570:	str	x1, [x29, #304]
   15574:	adrp	x1, 5c000 <vasnprintf@@Base+0x1be04>
   15578:	add	x1, x1, #0x920
   1557c:	str	x1, [x0]
   15580:	ldr	x0, [x29, #304]
   15584:	str	xzr, [x0]
   15588:	ldr	x0, [x29, #296]
   1558c:	str	x0, [x29, #56]
   15590:	ldr	w1, [x29, #48]
   15594:	add	x0, x29, #0x50
   15598:	ldr	x5, [x29, #24]
   1559c:	mov	w4, w1
   155a0:	ldr	x3, [x29, #40]
   155a4:	ldr	w2, [x29, #52]
   155a8:	ldr	x1, [x29, #56]
   155ac:	bl	1456c <argp_failure@@Base+0xbc0>
   155b0:	str	w0, [x29, #316]
   155b4:	ldr	w0, [x29, #316]
   155b8:	cmp	w0, #0x0
   155bc:	b.ne	155fc <argp_parse@@Base+0x1ec>  // b.any
   155c0:	b	155d4 <argp_parse@@Base+0x1c4>
   155c4:	add	x1, x29, #0x4c
   155c8:	add	x0, x29, #0x50
   155cc:	bl	15130 <argp_failure@@Base+0x1784>
   155d0:	str	w0, [x29, #316]
   155d4:	ldr	w0, [x29, #316]
   155d8:	cmp	w0, #0x0
   155dc:	b.eq	155c4 <argp_parse@@Base+0x1b4>  // b.none
   155e0:	ldr	w1, [x29, #76]
   155e4:	add	x0, x29, #0x50
   155e8:	ldr	x3, [x29, #32]
   155ec:	mov	w2, w1
   155f0:	ldr	w1, [x29, #316]
   155f4:	bl	149ec <argp_failure@@Base+0x1040>
   155f8:	str	w0, [x29, #316]
   155fc:	ldr	w0, [x29, #316]
   15600:	mov	sp, x29
   15604:	ldp	x29, x30, [sp], #320
   15608:	ret

000000000001560c <_argp_input@@Base>:
   1560c:	sub	sp, sp, #0x20
   15610:	str	x0, [sp, #8]
   15614:	str	x1, [sp]
   15618:	ldr	x0, [sp]
   1561c:	cmp	x0, #0x0
   15620:	b.eq	15680 <_argp_input@@Base+0x74>  // b.none
   15624:	ldr	x0, [sp]
   15628:	ldr	x0, [x0, #88]
   1562c:	str	x0, [sp, #16]
   15630:	ldr	x0, [sp, #16]
   15634:	ldr	x0, [x0, #80]
   15638:	str	x0, [sp, #24]
   1563c:	b	1566c <_argp_input@@Base+0x60>
   15640:	ldr	x0, [sp, #24]
   15644:	ldr	x0, [x0, #8]
   15648:	ldr	x1, [sp, #8]
   1564c:	cmp	x1, x0
   15650:	b.ne	15660 <_argp_input@@Base+0x54>  // b.any
   15654:	ldr	x0, [sp, #24]
   15658:	ldr	x0, [x0, #48]
   1565c:	b	15684 <_argp_input@@Base+0x78>
   15660:	ldr	x0, [sp, #24]
   15664:	add	x0, x0, #0x48
   15668:	str	x0, [sp, #24]
   1566c:	ldr	x0, [sp, #16]
   15670:	ldr	x0, [x0, #88]
   15674:	ldr	x1, [sp, #24]
   15678:	cmp	x1, x0
   1567c:	b.cc	15640 <_argp_input@@Base+0x34>  // b.lo, b.ul, b.last
   15680:	mov	x0, #0x0                   	// #0
   15684:	add	sp, sp, #0x20
   15688:	ret

000000000001568c <argp_usage@@Base>:
   1568c:	stp	x29, x30, [sp, #-32]!
   15690:	mov	x29, sp
   15694:	str	x0, [sp, #24]
   15698:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   1569c:	ldr	x0, [x0, #3816]
   156a0:	ldr	x0, [x0]
   156a4:	mov	w2, #0x106                 	// #262
   156a8:	mov	x1, x0
   156ac:	ldr	x0, [sp, #24]
   156b0:	bl	b4d0 <argp_state_help@plt>
   156b4:	nop
   156b8:	ldp	x29, x30, [sp], #32
   156bc:	ret

00000000000156c0 <_option_is_short@@Base>:
   156c0:	stp	x29, x30, [sp, #-48]!
   156c4:	mov	x29, sp
   156c8:	str	x0, [sp, #24]
   156cc:	ldr	x0, [sp, #24]
   156d0:	ldr	w0, [x0, #24]
   156d4:	and	w0, w0, #0x8
   156d8:	cmp	w0, #0x0
   156dc:	b.eq	156e8 <_option_is_short@@Base+0x28>  // b.none
   156e0:	mov	w0, #0x0                   	// #0
   156e4:	b	1573c <_option_is_short@@Base+0x7c>
   156e8:	ldr	x0, [sp, #24]
   156ec:	ldr	w0, [x0, #8]
   156f0:	str	w0, [sp, #44]
   156f4:	ldr	w0, [sp, #44]
   156f8:	cmp	w0, #0x0
   156fc:	b.le	15738 <_option_is_short@@Base+0x78>
   15700:	ldr	w0, [sp, #44]
   15704:	cmp	w0, #0xff
   15708:	b.gt	15738 <_option_is_short@@Base+0x78>
   1570c:	bl	b090 <__ctype_b_loc@plt>
   15710:	ldr	x1, [x0]
   15714:	ldrsw	x0, [sp, #44]
   15718:	lsl	x0, x0, #1
   1571c:	add	x0, x1, x0
   15720:	ldrh	w0, [x0]
   15724:	and	w0, w0, #0x4000
   15728:	cmp	w0, #0x0
   1572c:	b.eq	15738 <_option_is_short@@Base+0x78>  // b.none
   15730:	mov	w0, #0x1                   	// #1
   15734:	b	1573c <_option_is_short@@Base+0x7c>
   15738:	mov	w0, #0x0                   	// #0
   1573c:	ldp	x29, x30, [sp], #48
   15740:	ret

0000000000015744 <_option_is_end@@Base>:
   15744:	sub	sp, sp, #0x10
   15748:	str	x0, [sp, #8]
   1574c:	ldr	x0, [sp, #8]
   15750:	ldr	w0, [x0, #8]
   15754:	cmp	w0, #0x0
   15758:	b.ne	15794 <_option_is_end@@Base+0x50>  // b.any
   1575c:	ldr	x0, [sp, #8]
   15760:	ldr	x0, [x0]
   15764:	cmp	x0, #0x0
   15768:	b.ne	15794 <_option_is_end@@Base+0x50>  // b.any
   1576c:	ldr	x0, [sp, #8]
   15770:	ldr	x0, [x0, #32]
   15774:	cmp	x0, #0x0
   15778:	b.ne	15794 <_option_is_end@@Base+0x50>  // b.any
   1577c:	ldr	x0, [sp, #8]
   15780:	ldr	w0, [x0, #40]
   15784:	cmp	w0, #0x0
   15788:	b.ne	15794 <_option_is_end@@Base+0x50>  // b.any
   1578c:	mov	w0, #0x1                   	// #1
   15790:	b	15798 <_option_is_end@@Base+0x54>
   15794:	mov	w0, #0x0                   	// #0
   15798:	add	sp, sp, #0x10
   1579c:	ret
   157a0:	stp	x29, x30, [sp, #-80]!
   157a4:	mov	x29, sp
   157a8:	str	x0, [sp, #56]
   157ac:	str	x1, [sp, #48]
   157b0:	str	x2, [sp, #40]
   157b4:	str	x3, [sp, #32]
   157b8:	strb	w4, [sp, #31]
   157bc:	mov	x0, #0x40                  	// #64
   157c0:	bl	ab40 <malloc@plt>
   157c4:	str	x0, [sp, #72]
   157c8:	ldr	x0, [sp, #72]
   157cc:	cmp	x0, #0x0
   157d0:	b.ne	157dc <_option_is_end@@Base+0x98>  // b.any
   157d4:	mov	x0, #0x0                   	// #0
   157d8:	b	15834 <_option_is_end@@Base+0xf0>
   157dc:	ldr	x0, [sp, #72]
   157e0:	ldr	x1, [sp, #56]
   157e4:	str	x1, [x0]
   157e8:	ldr	x0, [sp, #72]
   157ec:	ldr	x1, [sp, #48]
   157f0:	str	x1, [x0, #8]
   157f4:	ldr	x0, [sp, #72]
   157f8:	ldr	x1, [sp, #40]
   157fc:	str	x1, [x0, #16]
   15800:	ldr	x0, [sp, #72]
   15804:	ldr	x1, [sp, #32]
   15808:	str	x1, [x0, #24]
   1580c:	ldr	x0, [sp, #72]
   15810:	ldrb	w1, [sp, #31]
   15814:	strb	w1, [x0, #32]
   15818:	ldr	x0, [sp, #72]
   1581c:	str	xzr, [x0, #40]
   15820:	ldr	x0, [sp, #72]
   15824:	str	xzr, [x0, #48]
   15828:	ldr	x0, [sp, #72]
   1582c:	str	xzr, [x0, #56]
   15830:	ldr	x0, [sp, #72]
   15834:	ldp	x29, x30, [sp], #80
   15838:	ret
   1583c:	stp	x29, x30, [sp, #-96]!
   15840:	mov	x29, sp
   15844:	str	x0, [sp, #72]
   15848:	str	x1, [sp, #64]
   1584c:	str	x2, [sp, #56]
   15850:	str	x3, [sp, #48]
   15854:	strb	w4, [sp, #47]
   15858:	str	x5, [sp, #32]
   1585c:	str	x6, [sp, #24]
   15860:	mov	x0, #0x40                  	// #64
   15864:	bl	ab40 <malloc@plt>
   15868:	str	x0, [sp, #88]
   1586c:	ldr	x0, [sp, #88]
   15870:	cmp	x0, #0x0
   15874:	b.ne	15880 <_option_is_end@@Base+0x13c>  // b.any
   15878:	mov	x0, #0x0                   	// #0
   1587c:	b	15974 <_option_is_end@@Base+0x230>
   15880:	ldr	x0, [sp, #88]
   15884:	ldr	x1, [sp, #72]
   15888:	str	x1, [x0]
   1588c:	ldr	x0, [sp, #88]
   15890:	ldr	x1, [sp, #64]
   15894:	str	x1, [x0, #8]
   15898:	ldr	x0, [sp, #88]
   1589c:	ldr	x1, [sp, #56]
   158a0:	str	x1, [x0, #16]
   158a4:	ldr	x0, [sp, #88]
   158a8:	ldr	x1, [sp, #48]
   158ac:	str	x1, [x0, #24]
   158b0:	ldr	x0, [sp, #88]
   158b4:	ldrb	w1, [sp, #47]
   158b8:	strb	w1, [x0, #32]
   158bc:	ldr	x0, [sp, #32]
   158c0:	cmp	x0, #0x0
   158c4:	b.eq	15934 <_option_is_end@@Base+0x1f0>  // b.none
   158c8:	ldr	x1, [sp, #32]
   158cc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   158d0:	cmp	x1, x0
   158d4:	b.hi	1595c <_option_is_end@@Base+0x218>  // b.pmore
   158d8:	ldr	x0, [sp, #32]
   158dc:	lsl	x0, x0, #3
   158e0:	cmn	x0, #0x1
   158e4:	b.eq	1595c <_option_is_end@@Base+0x218>  // b.none
   158e8:	ldr	x0, [sp, #32]
   158ec:	lsl	x0, x0, #3
   158f0:	bl	ab40 <malloc@plt>
   158f4:	mov	x1, x0
   158f8:	ldr	x0, [sp, #88]
   158fc:	str	x1, [x0, #40]
   15900:	ldr	x0, [sp, #88]
   15904:	ldr	x0, [x0, #40]
   15908:	cmp	x0, #0x0
   1590c:	b.eq	15964 <_option_is_end@@Base+0x220>  // b.none
   15910:	ldr	x0, [sp, #88]
   15914:	ldr	x3, [x0, #40]
   15918:	ldr	x0, [sp, #32]
   1591c:	lsl	x0, x0, #3
   15920:	mov	x2, x0
   15924:	ldr	x1, [sp, #24]
   15928:	mov	x0, x3
   1592c:	bl	a790 <memcpy@plt>
   15930:	b	1593c <_option_is_end@@Base+0x1f8>
   15934:	ldr	x0, [sp, #88]
   15938:	str	xzr, [x0, #40]
   1593c:	ldr	x0, [sp, #88]
   15940:	ldr	x1, [sp, #32]
   15944:	str	x1, [x0, #48]
   15948:	ldr	x0, [sp, #88]
   1594c:	ldr	x1, [sp, #32]
   15950:	str	x1, [x0, #56]
   15954:	ldr	x0, [sp, #88]
   15958:	b	15974 <_option_is_end@@Base+0x230>
   1595c:	nop
   15960:	b	15968 <_option_is_end@@Base+0x224>
   15964:	nop
   15968:	ldr	x0, [sp, #88]
   1596c:	bl	b130 <free@plt>
   15970:	mov	x0, #0x0                   	// #0
   15974:	ldp	x29, x30, [sp], #96
   15978:	ret
   1597c:	sub	sp, sp, #0x10
   15980:	str	x0, [sp, #8]
   15984:	ldr	x0, [sp, #8]
   15988:	ldr	x0, [x0, #48]
   1598c:	add	sp, sp, #0x10
   15990:	ret
   15994:	stp	x29, x30, [sp, #-48]!
   15998:	mov	x29, sp
   1599c:	str	x0, [sp, #24]
   159a0:	str	x1, [sp, #16]
   159a4:	ldr	x0, [sp, #16]
   159a8:	sub	x0, x0, #0x1
   159ac:	str	x0, [sp, #40]
   159b0:	ldr	x0, [sp, #24]
   159b4:	ldr	x0, [x0, #48]
   159b8:	ldr	x1, [sp, #40]
   159bc:	cmp	x1, x0
   159c0:	b.cc	159c8 <_option_is_end@@Base+0x284>  // b.lo, b.ul, b.last
   159c4:	bl	af70 <abort@plt>
   159c8:	ldr	x0, [sp, #24]
   159cc:	ldr	x1, [x0, #40]
   159d0:	ldr	x0, [sp, #40]
   159d4:	lsl	x0, x0, #3
   159d8:	add	x0, x1, x0
   159dc:	ldr	x0, [x0]
   159e0:	ldp	x29, x30, [sp], #48
   159e4:	ret
   159e8:	stp	x29, x30, [sp, #-64]!
   159ec:	mov	x29, sp
   159f0:	str	x0, [sp, #40]
   159f4:	str	x1, [sp, #32]
   159f8:	str	x2, [sp, #24]
   159fc:	ldr	x0, [sp, #32]
   15a00:	sub	x0, x0, #0x1
   15a04:	str	x0, [sp, #56]
   15a08:	ldr	x0, [sp, #40]
   15a0c:	ldr	x0, [x0, #48]
   15a10:	ldr	x1, [sp, #56]
   15a14:	cmp	x1, x0
   15a18:	b.cc	15a20 <_option_is_end@@Base+0x2dc>  // b.lo, b.ul, b.last
   15a1c:	bl	af70 <abort@plt>
   15a20:	ldr	x0, [sp, #40]
   15a24:	ldr	x1, [x0, #40]
   15a28:	ldr	x0, [sp, #56]
   15a2c:	lsl	x0, x0, #3
   15a30:	add	x0, x1, x0
   15a34:	ldr	x1, [sp, #24]
   15a38:	str	x1, [x0]
   15a3c:	mov	w0, #0x0                   	// #0
   15a40:	ldp	x29, x30, [sp], #64
   15a44:	ret
   15a48:	stp	x29, x30, [sp, #-48]!
   15a4c:	mov	x29, sp
   15a50:	str	x0, [sp, #24]
   15a54:	str	x1, [sp, #16]
   15a58:	ldr	x0, [sp, #16]
   15a5c:	sub	x0, x0, #0x1
   15a60:	str	x0, [sp, #40]
   15a64:	ldr	x0, [sp, #24]
   15a68:	ldr	x0, [x0, #48]
   15a6c:	ldr	x1, [sp, #40]
   15a70:	cmp	x1, x0
   15a74:	b.cc	15a7c <_option_is_end@@Base+0x338>  // b.lo, b.ul, b.last
   15a78:	bl	af70 <abort@plt>
   15a7c:	ldr	x0, [sp, #40]
   15a80:	add	x0, x0, #0x1
   15a84:	str	x0, [sp, #40]
   15a88:	ldr	x0, [sp, #24]
   15a8c:	ldr	x0, [x0, #48]
   15a90:	ldr	x1, [sp, #40]
   15a94:	cmp	x1, x0
   15a98:	b.cs	15aa8 <_option_is_end@@Base+0x364>  // b.hs, b.nlast
   15a9c:	ldr	x0, [sp, #40]
   15aa0:	add	x0, x0, #0x1
   15aa4:	b	15aac <_option_is_end@@Base+0x368>
   15aa8:	mov	x0, #0x0                   	// #0
   15aac:	ldp	x29, x30, [sp], #48
   15ab0:	ret
   15ab4:	stp	x29, x30, [sp, #-48]!
   15ab8:	mov	x29, sp
   15abc:	str	x0, [sp, #24]
   15ac0:	str	x1, [sp, #16]
   15ac4:	ldr	x0, [sp, #16]
   15ac8:	sub	x0, x0, #0x1
   15acc:	str	x0, [sp, #40]
   15ad0:	ldr	x0, [sp, #24]
   15ad4:	ldr	x0, [x0, #48]
   15ad8:	ldr	x1, [sp, #40]
   15adc:	cmp	x1, x0
   15ae0:	b.cc	15ae8 <_option_is_end@@Base+0x3a4>  // b.lo, b.ul, b.last
   15ae4:	bl	af70 <abort@plt>
   15ae8:	ldr	x0, [sp, #40]
   15aec:	cmp	x0, #0x0
   15af0:	b.eq	15afc <_option_is_end@@Base+0x3b8>  // b.none
   15af4:	ldr	x0, [sp, #40]
   15af8:	b	15b00 <_option_is_end@@Base+0x3bc>
   15afc:	mov	x0, #0x0                   	// #0
   15b00:	ldp	x29, x30, [sp], #48
   15b04:	ret
   15b08:	stp	x29, x30, [sp, #-48]!
   15b0c:	mov	x29, sp
   15b10:	str	x0, [sp, #24]
   15b14:	str	x1, [sp, #16]
   15b18:	ldr	x0, [sp, #24]
   15b1c:	ldr	x0, [x0, #48]
   15b20:	str	x0, [sp, #40]
   15b24:	ldr	x1, [sp, #16]
   15b28:	ldr	x0, [sp, #40]
   15b2c:	cmp	x1, x0
   15b30:	b.cc	15b38 <_option_is_end@@Base+0x3f4>  // b.lo, b.ul, b.last
   15b34:	bl	af70 <abort@plt>
   15b38:	ldr	x0, [sp, #24]
   15b3c:	ldr	x1, [x0, #40]
   15b40:	ldr	x0, [sp, #16]
   15b44:	lsl	x0, x0, #3
   15b48:	add	x0, x1, x0
   15b4c:	ldr	x0, [x0]
   15b50:	ldp	x29, x30, [sp], #48
   15b54:	ret
   15b58:	stp	x29, x30, [sp, #-64]!
   15b5c:	mov	x29, sp
   15b60:	str	x0, [sp, #40]
   15b64:	str	x1, [sp, #32]
   15b68:	str	x2, [sp, #24]
   15b6c:	ldr	x0, [sp, #40]
   15b70:	ldr	x0, [x0, #48]
   15b74:	str	x0, [sp, #56]
   15b78:	ldr	x1, [sp, #32]
   15b7c:	ldr	x0, [sp, #56]
   15b80:	cmp	x1, x0
   15b84:	b.cc	15b8c <_option_is_end@@Base+0x448>  // b.lo, b.ul, b.last
   15b88:	bl	af70 <abort@plt>
   15b8c:	ldr	x0, [sp, #40]
   15b90:	ldr	x1, [x0, #40]
   15b94:	ldr	x0, [sp, #32]
   15b98:	lsl	x0, x0, #3
   15b9c:	add	x0, x1, x0
   15ba0:	ldr	x1, [sp, #24]
   15ba4:	str	x1, [x0]
   15ba8:	ldr	x0, [sp, #32]
   15bac:	add	x0, x0, #0x1
   15bb0:	ldp	x29, x30, [sp], #64
   15bb4:	ret
   15bb8:	stp	x29, x30, [sp, #-80]!
   15bbc:	mov	x29, sp
   15bc0:	str	x0, [sp, #40]
   15bc4:	str	x1, [sp, #32]
   15bc8:	str	x2, [sp, #24]
   15bcc:	str	x3, [sp, #16]
   15bd0:	ldr	x0, [sp, #40]
   15bd4:	ldr	x0, [x0, #48]
   15bd8:	str	x0, [sp, #56]
   15bdc:	ldr	x1, [sp, #32]
   15be0:	ldr	x0, [sp, #24]
   15be4:	cmp	x1, x0
   15be8:	b.hi	15bfc <_option_is_end@@Base+0x4b8>  // b.pmore
   15bec:	ldr	x1, [sp, #24]
   15bf0:	ldr	x0, [sp, #56]
   15bf4:	cmp	x1, x0
   15bf8:	b.ls	15c00 <_option_is_end@@Base+0x4bc>  // b.plast
   15bfc:	bl	af70 <abort@plt>
   15c00:	ldr	x1, [sp, #32]
   15c04:	ldr	x0, [sp, #24]
   15c08:	cmp	x1, x0
   15c0c:	b.cs	15cec <_option_is_end@@Base+0x5a8>  // b.hs, b.nlast
   15c10:	ldr	x0, [sp, #40]
   15c14:	ldr	x0, [x0, #8]
   15c18:	str	x0, [sp, #48]
   15c1c:	ldr	x0, [sp, #48]
   15c20:	cmp	x0, #0x0
   15c24:	b.eq	15c8c <_option_is_end@@Base+0x548>  // b.none
   15c28:	ldr	x0, [sp, #32]
   15c2c:	str	x0, [sp, #72]
   15c30:	ldr	x0, [sp, #40]
   15c34:	ldr	x1, [x0, #40]
   15c38:	ldr	x0, [sp, #72]
   15c3c:	lsl	x0, x0, #3
   15c40:	add	x0, x1, x0
   15c44:	ldr	x0, [x0]
   15c48:	ldr	x2, [sp, #48]
   15c4c:	mov	x1, x0
   15c50:	ldr	x0, [sp, #16]
   15c54:	blr	x2
   15c58:	and	w0, w0, #0xff
   15c5c:	cmp	w0, #0x0
   15c60:	b.eq	15c6c <_option_is_end@@Base+0x528>  // b.none
   15c64:	ldr	x0, [sp, #72]
   15c68:	b	15cf0 <_option_is_end@@Base+0x5ac>
   15c6c:	ldr	x0, [sp, #72]
   15c70:	add	x0, x0, #0x1
   15c74:	str	x0, [sp, #72]
   15c78:	ldr	x1, [sp, #72]
   15c7c:	ldr	x0, [sp, #24]
   15c80:	cmp	x1, x0
   15c84:	b.eq	15ce0 <_option_is_end@@Base+0x59c>  // b.none
   15c88:	b	15c30 <_option_is_end@@Base+0x4ec>
   15c8c:	ldr	x0, [sp, #32]
   15c90:	str	x0, [sp, #64]
   15c94:	ldr	x0, [sp, #40]
   15c98:	ldr	x1, [x0, #40]
   15c9c:	ldr	x0, [sp, #64]
   15ca0:	lsl	x0, x0, #3
   15ca4:	add	x0, x1, x0
   15ca8:	ldr	x0, [x0]
   15cac:	ldr	x1, [sp, #16]
   15cb0:	cmp	x1, x0
   15cb4:	b.ne	15cc0 <_option_is_end@@Base+0x57c>  // b.any
   15cb8:	ldr	x0, [sp, #64]
   15cbc:	b	15cf0 <_option_is_end@@Base+0x5ac>
   15cc0:	ldr	x0, [sp, #64]
   15cc4:	add	x0, x0, #0x1
   15cc8:	str	x0, [sp, #64]
   15ccc:	ldr	x1, [sp, #64]
   15cd0:	ldr	x0, [sp, #24]
   15cd4:	cmp	x1, x0
   15cd8:	b.eq	15ce8 <_option_is_end@@Base+0x5a4>  // b.none
   15cdc:	b	15c94 <_option_is_end@@Base+0x550>
   15ce0:	nop
   15ce4:	b	15cec <_option_is_end@@Base+0x5a8>
   15ce8:	nop
   15cec:	mov	x0, #0xffffffffffffffff    	// #-1
   15cf0:	ldp	x29, x30, [sp], #80
   15cf4:	ret
   15cf8:	stp	x29, x30, [sp, #-64]!
   15cfc:	mov	x29, sp
   15d00:	str	x0, [sp, #40]
   15d04:	str	x1, [sp, #32]
   15d08:	str	x2, [sp, #24]
   15d0c:	str	x3, [sp, #16]
   15d10:	ldr	x3, [sp, #16]
   15d14:	ldr	x2, [sp, #24]
   15d18:	ldr	x1, [sp, #32]
   15d1c:	ldr	x0, [sp, #40]
   15d20:	bl	15bb8 <_option_is_end@@Base+0x474>
   15d24:	str	x0, [sp, #56]
   15d28:	ldr	x0, [sp, #56]
   15d2c:	add	x0, x0, #0x1
   15d30:	ldp	x29, x30, [sp], #64
   15d34:	ret
   15d38:	stp	x29, x30, [sp, #-64]!
   15d3c:	mov	x29, sp
   15d40:	str	x0, [sp, #24]
   15d44:	ldr	x0, [sp, #24]
   15d48:	ldr	x0, [x0, #56]
   15d4c:	cmp	x0, #0x0
   15d50:	b.lt	15d64 <_option_is_end@@Base+0x620>  // b.tstop
   15d54:	ldr	x0, [sp, #24]
   15d58:	ldr	x0, [x0, #56]
   15d5c:	lsl	x0, x0, #1
   15d60:	b	15d68 <_option_is_end@@Base+0x624>
   15d64:	mov	x0, #0xffffffffffffffff    	// #-1
   15d68:	str	x0, [sp, #56]
   15d6c:	mov	x1, #0x1                   	// #1
   15d70:	ldr	x0, [sp, #56]
   15d74:	bl	ac80 <xsum@plt>
   15d78:	str	x0, [sp, #56]
   15d7c:	ldr	x1, [sp, #56]
   15d80:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   15d84:	cmp	x1, x0
   15d88:	b.hi	15d98 <_option_is_end@@Base+0x654>  // b.pmore
   15d8c:	ldr	x0, [sp, #56]
   15d90:	lsl	x0, x0, #3
   15d94:	b	15d9c <_option_is_end@@Base+0x658>
   15d98:	mov	x0, #0xffffffffffffffff    	// #-1
   15d9c:	str	x0, [sp, #48]
   15da0:	ldr	x0, [sp, #48]
   15da4:	cmn	x0, #0x1
   15da8:	b.ne	15db4 <_option_is_end@@Base+0x670>  // b.any
   15dac:	mov	w0, #0xffffffff            	// #-1
   15db0:	b	15df8 <_option_is_end@@Base+0x6b4>
   15db4:	ldr	x0, [sp, #24]
   15db8:	ldr	x0, [x0, #40]
   15dbc:	ldr	x1, [sp, #48]
   15dc0:	bl	ae00 <realloc@plt>
   15dc4:	str	x0, [sp, #40]
   15dc8:	ldr	x0, [sp, #40]
   15dcc:	cmp	x0, #0x0
   15dd0:	b.ne	15ddc <_option_is_end@@Base+0x698>  // b.any
   15dd4:	mov	w0, #0xffffffff            	// #-1
   15dd8:	b	15df8 <_option_is_end@@Base+0x6b4>
   15ddc:	ldr	x0, [sp, #24]
   15de0:	ldr	x1, [sp, #40]
   15de4:	str	x1, [x0, #40]
   15de8:	ldr	x0, [sp, #24]
   15dec:	ldr	x1, [sp, #56]
   15df0:	str	x1, [x0, #56]
   15df4:	mov	w0, #0x0                   	// #0
   15df8:	ldp	x29, x30, [sp], #64
   15dfc:	ret
   15e00:	stp	x29, x30, [sp, #-64]!
   15e04:	mov	x29, sp
   15e08:	str	x0, [sp, #24]
   15e0c:	str	x1, [sp, #16]
   15e10:	ldr	x0, [sp, #24]
   15e14:	ldr	x0, [x0, #48]
   15e18:	str	x0, [sp, #48]
   15e1c:	ldr	x0, [sp, #24]
   15e20:	ldr	x0, [x0, #56]
   15e24:	ldr	x1, [sp, #48]
   15e28:	cmp	x1, x0
   15e2c:	b.ne	15e48 <_option_is_end@@Base+0x704>  // b.any
   15e30:	ldr	x0, [sp, #24]
   15e34:	bl	15d38 <_option_is_end@@Base+0x5f4>
   15e38:	cmp	w0, #0x0
   15e3c:	b.ge	15e48 <_option_is_end@@Base+0x704>  // b.tcont
   15e40:	mov	x0, #0x0                   	// #0
   15e44:	b	15ec4 <_option_is_end@@Base+0x780>
   15e48:	ldr	x0, [sp, #24]
   15e4c:	ldr	x0, [x0, #40]
   15e50:	str	x0, [sp, #40]
   15e54:	ldr	x0, [sp, #48]
   15e58:	str	x0, [sp, #56]
   15e5c:	b	15e98 <_option_is_end@@Base+0x754>
   15e60:	ldr	x0, [sp, #56]
   15e64:	lsl	x0, x0, #3
   15e68:	sub	x0, x0, #0x8
   15e6c:	ldr	x1, [sp, #40]
   15e70:	add	x1, x1, x0
   15e74:	ldr	x0, [sp, #56]
   15e78:	lsl	x0, x0, #3
   15e7c:	ldr	x2, [sp, #40]
   15e80:	add	x0, x2, x0
   15e84:	ldr	x1, [x1]
   15e88:	str	x1, [x0]
   15e8c:	ldr	x0, [sp, #56]
   15e90:	sub	x0, x0, #0x1
   15e94:	str	x0, [sp, #56]
   15e98:	ldr	x0, [sp, #56]
   15e9c:	cmp	x0, #0x0
   15ea0:	b.ne	15e60 <_option_is_end@@Base+0x71c>  // b.any
   15ea4:	ldr	x0, [sp, #40]
   15ea8:	ldr	x1, [sp, #16]
   15eac:	str	x1, [x0]
   15eb0:	ldr	x0, [sp, #48]
   15eb4:	add	x1, x0, #0x1
   15eb8:	ldr	x0, [sp, #24]
   15ebc:	str	x1, [x0, #48]
   15ec0:	mov	x0, #0x1                   	// #1
   15ec4:	ldp	x29, x30, [sp], #64
   15ec8:	ret
   15ecc:	stp	x29, x30, [sp, #-48]!
   15ed0:	mov	x29, sp
   15ed4:	str	x0, [sp, #24]
   15ed8:	str	x1, [sp, #16]
   15edc:	ldr	x0, [sp, #24]
   15ee0:	ldr	x0, [x0, #48]
   15ee4:	str	x0, [sp, #40]
   15ee8:	ldr	x0, [sp, #24]
   15eec:	ldr	x0, [x0, #56]
   15ef0:	ldr	x1, [sp, #40]
   15ef4:	cmp	x1, x0
   15ef8:	b.ne	15f14 <_option_is_end@@Base+0x7d0>  // b.any
   15efc:	ldr	x0, [sp, #24]
   15f00:	bl	15d38 <_option_is_end@@Base+0x5f4>
   15f04:	cmp	w0, #0x0
   15f08:	b.ge	15f14 <_option_is_end@@Base+0x7d0>  // b.tcont
   15f0c:	mov	x0, #0x0                   	// #0
   15f10:	b	15f48 <_option_is_end@@Base+0x804>
   15f14:	ldr	x0, [sp, #24]
   15f18:	ldr	x1, [x0, #40]
   15f1c:	ldr	x0, [sp, #40]
   15f20:	lsl	x0, x0, #3
   15f24:	add	x0, x1, x0
   15f28:	ldr	x1, [sp, #16]
   15f2c:	str	x1, [x0]
   15f30:	ldr	x0, [sp, #40]
   15f34:	add	x1, x0, #0x1
   15f38:	ldr	x0, [sp, #24]
   15f3c:	str	x1, [x0, #48]
   15f40:	ldr	x0, [sp, #40]
   15f44:	add	x0, x0, #0x1
   15f48:	ldp	x29, x30, [sp], #48
   15f4c:	ret
   15f50:	stp	x29, x30, [sp, #-96]!
   15f54:	mov	x29, sp
   15f58:	str	x0, [sp, #40]
   15f5c:	str	x1, [sp, #32]
   15f60:	str	x2, [sp, #24]
   15f64:	ldr	x0, [sp, #40]
   15f68:	ldr	x0, [x0, #48]
   15f6c:	str	x0, [sp, #80]
   15f70:	ldr	x0, [sp, #32]
   15f74:	sub	x0, x0, #0x1
   15f78:	str	x0, [sp, #72]
   15f7c:	ldr	x1, [sp, #72]
   15f80:	ldr	x0, [sp, #80]
   15f84:	cmp	x1, x0
   15f88:	b.cc	15f90 <_option_is_end@@Base+0x84c>  // b.lo, b.ul, b.last
   15f8c:	bl	af70 <abort@plt>
   15f90:	ldr	x0, [sp, #72]
   15f94:	str	x0, [sp, #64]
   15f98:	ldr	x0, [sp, #40]
   15f9c:	ldr	x0, [x0, #56]
   15fa0:	ldr	x1, [sp, #80]
   15fa4:	cmp	x1, x0
   15fa8:	b.ne	15fc4 <_option_is_end@@Base+0x880>  // b.any
   15fac:	ldr	x0, [sp, #40]
   15fb0:	bl	15d38 <_option_is_end@@Base+0x5f4>
   15fb4:	cmp	w0, #0x0
   15fb8:	b.ge	15fc4 <_option_is_end@@Base+0x880>  // b.tcont
   15fbc:	mov	x0, #0x0                   	// #0
   15fc0:	b	16054 <_option_is_end@@Base+0x910>
   15fc4:	ldr	x0, [sp, #40]
   15fc8:	ldr	x0, [x0, #40]
   15fcc:	str	x0, [sp, #56]
   15fd0:	ldr	x0, [sp, #80]
   15fd4:	str	x0, [sp, #88]
   15fd8:	b	16014 <_option_is_end@@Base+0x8d0>
   15fdc:	ldr	x0, [sp, #88]
   15fe0:	lsl	x0, x0, #3
   15fe4:	sub	x0, x0, #0x8
   15fe8:	ldr	x1, [sp, #56]
   15fec:	add	x1, x1, x0
   15ff0:	ldr	x0, [sp, #88]
   15ff4:	lsl	x0, x0, #3
   15ff8:	ldr	x2, [sp, #56]
   15ffc:	add	x0, x2, x0
   16000:	ldr	x1, [x1]
   16004:	str	x1, [x0]
   16008:	ldr	x0, [sp, #88]
   1600c:	sub	x0, x0, #0x1
   16010:	str	x0, [sp, #88]
   16014:	ldr	x1, [sp, #88]
   16018:	ldr	x0, [sp, #64]
   1601c:	cmp	x1, x0
   16020:	b.hi	15fdc <_option_is_end@@Base+0x898>  // b.pmore
   16024:	ldr	x0, [sp, #64]
   16028:	lsl	x0, x0, #3
   1602c:	ldr	x1, [sp, #56]
   16030:	add	x0, x1, x0
   16034:	ldr	x1, [sp, #24]
   16038:	str	x1, [x0]
   1603c:	ldr	x0, [sp, #80]
   16040:	add	x1, x0, #0x1
   16044:	ldr	x0, [sp, #40]
   16048:	str	x1, [x0, #48]
   1604c:	ldr	x0, [sp, #64]
   16050:	add	x0, x0, #0x1
   16054:	ldp	x29, x30, [sp], #96
   16058:	ret
   1605c:	stp	x29, x30, [sp, #-96]!
   16060:	mov	x29, sp
   16064:	str	x0, [sp, #40]
   16068:	str	x1, [sp, #32]
   1606c:	str	x2, [sp, #24]
   16070:	ldr	x0, [sp, #40]
   16074:	ldr	x0, [x0, #48]
   16078:	str	x0, [sp, #80]
   1607c:	ldr	x0, [sp, #32]
   16080:	sub	x0, x0, #0x1
   16084:	str	x0, [sp, #72]
   16088:	ldr	x1, [sp, #72]
   1608c:	ldr	x0, [sp, #80]
   16090:	cmp	x1, x0
   16094:	b.cc	1609c <_option_is_end@@Base+0x958>  // b.lo, b.ul, b.last
   16098:	bl	af70 <abort@plt>
   1609c:	ldr	x0, [sp, #72]
   160a0:	add	x0, x0, #0x1
   160a4:	str	x0, [sp, #64]
   160a8:	ldr	x0, [sp, #40]
   160ac:	ldr	x0, [x0, #56]
   160b0:	ldr	x1, [sp, #80]
   160b4:	cmp	x1, x0
   160b8:	b.ne	160d4 <_option_is_end@@Base+0x990>  // b.any
   160bc:	ldr	x0, [sp, #40]
   160c0:	bl	15d38 <_option_is_end@@Base+0x5f4>
   160c4:	cmp	w0, #0x0
   160c8:	b.ge	160d4 <_option_is_end@@Base+0x990>  // b.tcont
   160cc:	mov	x0, #0x0                   	// #0
   160d0:	b	16164 <_option_is_end@@Base+0xa20>
   160d4:	ldr	x0, [sp, #40]
   160d8:	ldr	x0, [x0, #40]
   160dc:	str	x0, [sp, #56]
   160e0:	ldr	x0, [sp, #80]
   160e4:	str	x0, [sp, #88]
   160e8:	b	16124 <_option_is_end@@Base+0x9e0>
   160ec:	ldr	x0, [sp, #88]
   160f0:	lsl	x0, x0, #3
   160f4:	sub	x0, x0, #0x8
   160f8:	ldr	x1, [sp, #56]
   160fc:	add	x1, x1, x0
   16100:	ldr	x0, [sp, #88]
   16104:	lsl	x0, x0, #3
   16108:	ldr	x2, [sp, #56]
   1610c:	add	x0, x2, x0
   16110:	ldr	x1, [x1]
   16114:	str	x1, [x0]
   16118:	ldr	x0, [sp, #88]
   1611c:	sub	x0, x0, #0x1
   16120:	str	x0, [sp, #88]
   16124:	ldr	x1, [sp, #88]
   16128:	ldr	x0, [sp, #64]
   1612c:	cmp	x1, x0
   16130:	b.hi	160ec <_option_is_end@@Base+0x9a8>  // b.pmore
   16134:	ldr	x0, [sp, #64]
   16138:	lsl	x0, x0, #3
   1613c:	ldr	x1, [sp, #56]
   16140:	add	x0, x1, x0
   16144:	ldr	x1, [sp, #24]
   16148:	str	x1, [x0]
   1614c:	ldr	x0, [sp, #80]
   16150:	add	x1, x0, #0x1
   16154:	ldr	x0, [sp, #40]
   16158:	str	x1, [x0, #48]
   1615c:	ldr	x0, [sp, #64]
   16160:	add	x0, x0, #0x1
   16164:	ldp	x29, x30, [sp], #96
   16168:	ret
   1616c:	stp	x29, x30, [sp, #-80]!
   16170:	mov	x29, sp
   16174:	str	x0, [sp, #40]
   16178:	str	x1, [sp, #32]
   1617c:	str	x2, [sp, #24]
   16180:	ldr	x0, [sp, #40]
   16184:	ldr	x0, [x0, #48]
   16188:	str	x0, [sp, #64]
   1618c:	ldr	x1, [sp, #32]
   16190:	ldr	x0, [sp, #64]
   16194:	cmp	x1, x0
   16198:	b.ls	161a0 <_option_is_end@@Base+0xa5c>  // b.plast
   1619c:	bl	af70 <abort@plt>
   161a0:	ldr	x0, [sp, #40]
   161a4:	ldr	x0, [x0, #56]
   161a8:	ldr	x1, [sp, #64]
   161ac:	cmp	x1, x0
   161b0:	b.ne	161cc <_option_is_end@@Base+0xa88>  // b.any
   161b4:	ldr	x0, [sp, #40]
   161b8:	bl	15d38 <_option_is_end@@Base+0x5f4>
   161bc:	cmp	w0, #0x0
   161c0:	b.ge	161cc <_option_is_end@@Base+0xa88>  // b.tcont
   161c4:	mov	x0, #0x0                   	// #0
   161c8:	b	1625c <_option_is_end@@Base+0xb18>
   161cc:	ldr	x0, [sp, #40]
   161d0:	ldr	x0, [x0, #40]
   161d4:	str	x0, [sp, #56]
   161d8:	ldr	x0, [sp, #64]
   161dc:	str	x0, [sp, #72]
   161e0:	b	1621c <_option_is_end@@Base+0xad8>
   161e4:	ldr	x0, [sp, #72]
   161e8:	lsl	x0, x0, #3
   161ec:	sub	x0, x0, #0x8
   161f0:	ldr	x1, [sp, #56]
   161f4:	add	x1, x1, x0
   161f8:	ldr	x0, [sp, #72]
   161fc:	lsl	x0, x0, #3
   16200:	ldr	x2, [sp, #56]
   16204:	add	x0, x2, x0
   16208:	ldr	x1, [x1]
   1620c:	str	x1, [x0]
   16210:	ldr	x0, [sp, #72]
   16214:	sub	x0, x0, #0x1
   16218:	str	x0, [sp, #72]
   1621c:	ldr	x1, [sp, #72]
   16220:	ldr	x0, [sp, #32]
   16224:	cmp	x1, x0
   16228:	b.hi	161e4 <_option_is_end@@Base+0xaa0>  // b.pmore
   1622c:	ldr	x0, [sp, #32]
   16230:	lsl	x0, x0, #3
   16234:	ldr	x1, [sp, #56]
   16238:	add	x0, x1, x0
   1623c:	ldr	x1, [sp, #24]
   16240:	str	x1, [x0]
   16244:	ldr	x0, [sp, #64]
   16248:	add	x1, x0, #0x1
   1624c:	ldr	x0, [sp, #40]
   16250:	str	x1, [x0, #48]
   16254:	ldr	x0, [sp, #32]
   16258:	add	x0, x0, #0x1
   1625c:	ldp	x29, x30, [sp], #80
   16260:	ret
   16264:	stp	x29, x30, [sp, #-80]!
   16268:	mov	x29, sp
   1626c:	str	x0, [sp, #24]
   16270:	str	x1, [sp, #16]
   16274:	ldr	x0, [sp, #24]
   16278:	ldr	x0, [x0, #48]
   1627c:	str	x0, [sp, #64]
   16280:	ldr	x0, [sp, #16]
   16284:	sub	x0, x0, #0x1
   16288:	str	x0, [sp, #56]
   1628c:	ldr	x1, [sp, #56]
   16290:	ldr	x0, [sp, #64]
   16294:	cmp	x1, x0
   16298:	b.cc	162a0 <_option_is_end@@Base+0xb5c>  // b.lo, b.ul, b.last
   1629c:	bl	af70 <abort@plt>
   162a0:	ldr	x0, [sp, #56]
   162a4:	str	x0, [sp, #48]
   162a8:	ldr	x0, [sp, #24]
   162ac:	ldr	x0, [x0, #40]
   162b0:	str	x0, [sp, #40]
   162b4:	ldr	x0, [sp, #24]
   162b8:	ldr	x0, [x0, #24]
   162bc:	cmp	x0, #0x0
   162c0:	b.eq	162e4 <_option_is_end@@Base+0xba0>  // b.none
   162c4:	ldr	x0, [sp, #24]
   162c8:	ldr	x1, [x0, #24]
   162cc:	ldr	x0, [sp, #48]
   162d0:	lsl	x0, x0, #3
   162d4:	ldr	x2, [sp, #40]
   162d8:	add	x0, x2, x0
   162dc:	ldr	x0, [x0]
   162e0:	blr	x1
   162e4:	ldr	x0, [sp, #48]
   162e8:	add	x0, x0, #0x1
   162ec:	str	x0, [sp, #72]
   162f0:	b	1632c <_option_is_end@@Base+0xbe8>
   162f4:	ldr	x0, [sp, #72]
   162f8:	lsl	x0, x0, #3
   162fc:	ldr	x1, [sp, #40]
   16300:	add	x1, x1, x0
   16304:	ldr	x0, [sp, #72]
   16308:	lsl	x0, x0, #3
   1630c:	sub	x0, x0, #0x8
   16310:	ldr	x2, [sp, #40]
   16314:	add	x0, x2, x0
   16318:	ldr	x1, [x1]
   1631c:	str	x1, [x0]
   16320:	ldr	x0, [sp, #72]
   16324:	add	x0, x0, #0x1
   16328:	str	x0, [sp, #72]
   1632c:	ldr	x1, [sp, #72]
   16330:	ldr	x0, [sp, #64]
   16334:	cmp	x1, x0
   16338:	b.cc	162f4 <_option_is_end@@Base+0xbb0>  // b.lo, b.ul, b.last
   1633c:	ldr	x0, [sp, #64]
   16340:	sub	x1, x0, #0x1
   16344:	ldr	x0, [sp, #24]
   16348:	str	x1, [x0, #48]
   1634c:	mov	w0, #0x1                   	// #1
   16350:	ldp	x29, x30, [sp], #80
   16354:	ret
   16358:	stp	x29, x30, [sp, #-64]!
   1635c:	mov	x29, sp
   16360:	str	x0, [sp, #24]
   16364:	str	x1, [sp, #16]
   16368:	ldr	x0, [sp, #24]
   1636c:	ldr	x0, [x0, #48]
   16370:	str	x0, [sp, #48]
   16374:	ldr	x1, [sp, #16]
   16378:	ldr	x0, [sp, #48]
   1637c:	cmp	x1, x0
   16380:	b.cc	16388 <_option_is_end@@Base+0xc44>  // b.lo, b.ul, b.last
   16384:	bl	af70 <abort@plt>
   16388:	ldr	x0, [sp, #24]
   1638c:	ldr	x0, [x0, #40]
   16390:	str	x0, [sp, #40]
   16394:	ldr	x0, [sp, #24]
   16398:	ldr	x0, [x0, #24]
   1639c:	cmp	x0, #0x0
   163a0:	b.eq	163c4 <_option_is_end@@Base+0xc80>  // b.none
   163a4:	ldr	x0, [sp, #24]
   163a8:	ldr	x1, [x0, #24]
   163ac:	ldr	x0, [sp, #16]
   163b0:	lsl	x0, x0, #3
   163b4:	ldr	x2, [sp, #40]
   163b8:	add	x0, x2, x0
   163bc:	ldr	x0, [x0]
   163c0:	blr	x1
   163c4:	ldr	x0, [sp, #16]
   163c8:	add	x0, x0, #0x1
   163cc:	str	x0, [sp, #56]
   163d0:	b	1640c <_option_is_end@@Base+0xcc8>
   163d4:	ldr	x0, [sp, #56]
   163d8:	lsl	x0, x0, #3
   163dc:	ldr	x1, [sp, #40]
   163e0:	add	x1, x1, x0
   163e4:	ldr	x0, [sp, #56]
   163e8:	lsl	x0, x0, #3
   163ec:	sub	x0, x0, #0x8
   163f0:	ldr	x2, [sp, #40]
   163f4:	add	x0, x2, x0
   163f8:	ldr	x1, [x1]
   163fc:	str	x1, [x0]
   16400:	ldr	x0, [sp, #56]
   16404:	add	x0, x0, #0x1
   16408:	str	x0, [sp, #56]
   1640c:	ldr	x1, [sp, #56]
   16410:	ldr	x0, [sp, #48]
   16414:	cmp	x1, x0
   16418:	b.cc	163d4 <_option_is_end@@Base+0xc90>  // b.lo, b.ul, b.last
   1641c:	ldr	x0, [sp, #48]
   16420:	sub	x1, x0, #0x1
   16424:	ldr	x0, [sp, #24]
   16428:	str	x1, [x0, #48]
   1642c:	mov	w0, #0x1                   	// #1
   16430:	ldp	x29, x30, [sp], #64
   16434:	ret
   16438:	stp	x29, x30, [sp, #-48]!
   1643c:	mov	x29, sp
   16440:	str	x0, [sp, #24]
   16444:	str	x1, [sp, #16]
   16448:	ldr	x0, [sp, #24]
   1644c:	ldr	x0, [x0, #48]
   16450:	ldr	x3, [sp, #16]
   16454:	mov	x2, x0
   16458:	mov	x1, #0x0                   	// #0
   1645c:	ldr	x0, [sp, #24]
   16460:	bl	15bb8 <_option_is_end@@Base+0x474>
   16464:	str	x0, [sp, #40]
   16468:	ldr	x0, [sp, #40]
   1646c:	cmn	x0, #0x1
   16470:	b.ne	1647c <_option_is_end@@Base+0xd38>  // b.any
   16474:	mov	w0, #0x0                   	// #0
   16478:	b	1648c <_option_is_end@@Base+0xd48>
   1647c:	ldr	x1, [sp, #40]
   16480:	ldr	x0, [sp, #24]
   16484:	bl	16358 <_option_is_end@@Base+0xc14>
   16488:	and	w0, w0, #0xff
   1648c:	ldp	x29, x30, [sp], #48
   16490:	ret
   16494:	stp	x29, x30, [sp, #-64]!
   16498:	mov	x29, sp
   1649c:	str	x0, [sp, #24]
   164a0:	ldr	x0, [sp, #24]
   164a4:	ldr	x0, [x0, #40]
   164a8:	cmp	x0, #0x0
   164ac:	b.eq	1652c <_option_is_end@@Base+0xde8>  // b.none
   164b0:	ldr	x0, [sp, #24]
   164b4:	ldr	x0, [x0, #24]
   164b8:	cmp	x0, #0x0
   164bc:	b.eq	16520 <_option_is_end@@Base+0xddc>  // b.none
   164c0:	ldr	x0, [sp, #24]
   164c4:	ldr	x0, [x0, #48]
   164c8:	str	x0, [sp, #56]
   164cc:	ldr	x0, [sp, #56]
   164d0:	cmp	x0, #0x0
   164d4:	b.eq	16520 <_option_is_end@@Base+0xddc>  // b.none
   164d8:	ldr	x0, [sp, #24]
   164dc:	ldr	x0, [x0, #24]
   164e0:	str	x0, [sp, #40]
   164e4:	ldr	x0, [sp, #24]
   164e8:	ldr	x0, [x0, #40]
   164ec:	str	x0, [sp, #48]
   164f0:	ldr	x0, [sp, #48]
   164f4:	add	x1, x0, #0x8
   164f8:	str	x1, [sp, #48]
   164fc:	ldr	x0, [x0]
   16500:	ldr	x1, [sp, #40]
   16504:	blr	x1
   16508:	ldr	x0, [sp, #56]
   1650c:	sub	x0, x0, #0x1
   16510:	str	x0, [sp, #56]
   16514:	ldr	x0, [sp, #56]
   16518:	cmp	x0, #0x0
   1651c:	b.ne	164f0 <_option_is_end@@Base+0xdac>  // b.any
   16520:	ldr	x0, [sp, #24]
   16524:	ldr	x0, [x0, #40]
   16528:	bl	b130 <free@plt>
   1652c:	ldr	x0, [sp, #24]
   16530:	bl	b130 <free@plt>
   16534:	nop
   16538:	ldp	x29, x30, [sp], #64
   1653c:	ret
   16540:	sub	sp, sp, #0x50
   16544:	mov	x2, x8
   16548:	str	x0, [sp, #8]
   1654c:	ldr	x0, [sp, #8]
   16550:	ldr	x0, [x0]
   16554:	str	x0, [sp, #24]
   16558:	ldr	x0, [sp, #8]
   1655c:	str	x0, [sp, #32]
   16560:	ldr	x0, [sp, #8]
   16564:	ldr	x0, [x0, #48]
   16568:	str	x0, [sp, #40]
   1656c:	ldr	x0, [sp, #8]
   16570:	ldr	x0, [x0, #40]
   16574:	str	x0, [sp, #48]
   16578:	ldr	x0, [sp, #8]
   1657c:	ldr	x1, [x0, #40]
   16580:	ldr	x0, [sp, #8]
   16584:	ldr	x0, [x0, #48]
   16588:	lsl	x0, x0, #3
   1658c:	add	x0, x1, x0
   16590:	str	x0, [sp, #56]
   16594:	mov	x1, x2
   16598:	add	x0, sp, #0x18
   1659c:	ldp	x2, x3, [x0]
   165a0:	stp	x2, x3, [x1]
   165a4:	ldp	x2, x3, [x0, #16]
   165a8:	stp	x2, x3, [x1, #16]
   165ac:	ldp	x2, x3, [x0, #32]
   165b0:	stp	x2, x3, [x1, #32]
   165b4:	ldr	x0, [x0, #48]
   165b8:	str	x0, [x1, #48]
   165bc:	add	sp, sp, #0x50
   165c0:	ret
   165c4:	stp	x29, x30, [sp, #-112]!
   165c8:	mov	x29, sp
   165cc:	mov	x3, x8
   165d0:	str	x0, [sp, #40]
   165d4:	str	x1, [sp, #32]
   165d8:	str	x2, [sp, #24]
   165dc:	ldr	x1, [sp, #32]
   165e0:	ldr	x0, [sp, #24]
   165e4:	cmp	x1, x0
   165e8:	b.hi	16600 <_option_is_end@@Base+0xebc>  // b.pmore
   165ec:	ldr	x0, [sp, #40]
   165f0:	ldr	x0, [x0, #48]
   165f4:	ldr	x1, [sp, #24]
   165f8:	cmp	x1, x0
   165fc:	b.ls	16604 <_option_is_end@@Base+0xec0>  // b.plast
   16600:	bl	af70 <abort@plt>
   16604:	ldr	x0, [sp, #40]
   16608:	ldr	x0, [x0]
   1660c:	str	x0, [sp, #56]
   16610:	ldr	x0, [sp, #40]
   16614:	str	x0, [sp, #64]
   16618:	ldr	x0, [sp, #40]
   1661c:	ldr	x0, [x0, #48]
   16620:	str	x0, [sp, #72]
   16624:	ldr	x0, [sp, #40]
   16628:	ldr	x1, [x0, #40]
   1662c:	ldr	x0, [sp, #32]
   16630:	lsl	x0, x0, #3
   16634:	add	x0, x1, x0
   16638:	str	x0, [sp, #80]
   1663c:	ldr	x0, [sp, #40]
   16640:	ldr	x1, [x0, #40]
   16644:	ldr	x0, [sp, #24]
   16648:	lsl	x0, x0, #3
   1664c:	add	x0, x1, x0
   16650:	str	x0, [sp, #88]
   16654:	mov	x1, x3
   16658:	add	x0, sp, #0x38
   1665c:	ldp	x2, x3, [x0]
   16660:	stp	x2, x3, [x1]
   16664:	ldp	x2, x3, [x0, #16]
   16668:	stp	x2, x3, [x1, #16]
   1666c:	ldp	x2, x3, [x0, #32]
   16670:	stp	x2, x3, [x1, #32]
   16674:	ldr	x0, [x0, #48]
   16678:	str	x0, [x1, #48]
   1667c:	ldp	x29, x30, [sp], #112
   16680:	ret
   16684:	stp	x29, x30, [sp, #-64]!
   16688:	mov	x29, sp
   1668c:	str	x0, [sp, #40]
   16690:	str	x1, [sp, #32]
   16694:	str	x2, [sp, #24]
   16698:	ldr	x0, [sp, #40]
   1669c:	ldr	x0, [x0, #8]
   166a0:	str	x0, [sp, #56]
   166a4:	ldr	x0, [sp, #40]
   166a8:	ldr	x1, [x0, #16]
   166ac:	ldr	x0, [sp, #56]
   166b0:	ldr	x0, [x0, #48]
   166b4:	cmp	x1, x0
   166b8:	b.eq	16718 <_option_is_end@@Base+0xfd4>  // b.none
   166bc:	ldr	x0, [sp, #40]
   166c0:	ldr	x1, [x0, #16]
   166c4:	ldr	x0, [sp, #56]
   166c8:	ldr	x0, [x0, #48]
   166cc:	add	x0, x0, #0x1
   166d0:	cmp	x1, x0
   166d4:	b.eq	166dc <_option_is_end@@Base+0xf98>  // b.none
   166d8:	bl	af70 <abort@plt>
   166dc:	ldr	x0, [sp, #40]
   166e0:	ldr	x0, [x0, #16]
   166e4:	sub	x1, x0, #0x1
   166e8:	ldr	x0, [sp, #40]
   166ec:	str	x1, [x0, #16]
   166f0:	ldr	x0, [sp, #40]
   166f4:	ldr	x0, [x0, #24]
   166f8:	sub	x1, x0, #0x8
   166fc:	ldr	x0, [sp, #40]
   16700:	str	x1, [x0, #24]
   16704:	ldr	x0, [sp, #40]
   16708:	ldr	x0, [x0, #32]
   1670c:	sub	x1, x0, #0x8
   16710:	ldr	x0, [sp, #40]
   16714:	str	x1, [x0, #32]
   16718:	ldr	x0, [sp, #40]
   1671c:	ldr	x1, [x0, #24]
   16720:	ldr	x0, [sp, #40]
   16724:	ldr	x0, [x0, #32]
   16728:	cmp	x1, x0
   1672c:	b.cs	16794 <_option_is_end@@Base+0x1050>  // b.hs, b.nlast
   16730:	ldr	x0, [sp, #40]
   16734:	ldr	x0, [x0, #24]
   16738:	str	x0, [sp, #48]
   1673c:	ldr	x0, [sp, #48]
   16740:	ldr	x1, [x0]
   16744:	ldr	x0, [sp, #32]
   16748:	str	x1, [x0]
   1674c:	ldr	x0, [sp, #24]
   16750:	cmp	x0, #0x0
   16754:	b.eq	1677c <_option_is_end@@Base+0x1038>  // b.none
   16758:	ldr	x0, [sp, #56]
   1675c:	ldr	x0, [x0, #40]
   16760:	ldr	x1, [sp, #48]
   16764:	sub	x0, x1, x0
   16768:	asr	x0, x0, #3
   1676c:	add	x0, x0, #0x1
   16770:	mov	x1, x0
   16774:	ldr	x0, [sp, #24]
   16778:	str	x1, [x0]
   1677c:	ldr	x0, [sp, #48]
   16780:	add	x1, x0, #0x8
   16784:	ldr	x0, [sp, #40]
   16788:	str	x1, [x0, #24]
   1678c:	mov	w0, #0x1                   	// #1
   16790:	b	16798 <_option_is_end@@Base+0x1054>
   16794:	mov	w0, #0x0                   	// #0
   16798:	ldp	x29, x30, [sp], #64
   1679c:	ret
   167a0:	sub	sp, sp, #0x10
   167a4:	str	x0, [sp, #8]
   167a8:	nop
   167ac:	add	sp, sp, #0x10
   167b0:	ret
   167b4:	stp	x29, x30, [sp, #-96]!
   167b8:	mov	x29, sp
   167bc:	str	x0, [sp, #56]
   167c0:	str	x1, [sp, #48]
   167c4:	str	x2, [sp, #40]
   167c8:	str	x3, [sp, #32]
   167cc:	str	x4, [sp, #24]
   167d0:	ldr	x1, [sp, #40]
   167d4:	ldr	x0, [sp, #32]
   167d8:	cmp	x1, x0
   167dc:	b.hi	167f4 <_option_is_end@@Base+0x10b0>  // b.pmore
   167e0:	ldr	x0, [sp, #56]
   167e4:	ldr	x0, [x0, #48]
   167e8:	ldr	x1, [sp, #32]
   167ec:	cmp	x1, x0
   167f0:	b.ls	167f8 <_option_is_end@@Base+0x10b4>  // b.plast
   167f4:	bl	af70 <abort@plt>
   167f8:	ldr	x1, [sp, #40]
   167fc:	ldr	x0, [sp, #32]
   16800:	cmp	x1, x0
   16804:	b.cs	16948 <_option_is_end@@Base+0x1204>  // b.hs, b.nlast
   16808:	ldr	x1, [sp, #32]
   1680c:	ldr	x0, [sp, #40]
   16810:	sub	x0, x1, x0
   16814:	lsr	x0, x0, #1
   16818:	ldr	x1, [sp, #40]
   1681c:	add	x0, x1, x0
   16820:	str	x0, [sp, #88]
   16824:	ldr	x0, [sp, #56]
   16828:	ldr	x1, [x0, #40]
   1682c:	ldr	x0, [sp, #88]
   16830:	lsl	x0, x0, #3
   16834:	add	x0, x1, x0
   16838:	ldr	x0, [x0]
   1683c:	ldr	x2, [sp, #48]
   16840:	ldr	x1, [sp, #24]
   16844:	blr	x2
   16848:	str	w0, [sp, #84]
   1684c:	ldr	w0, [sp, #84]
   16850:	cmp	w0, #0x0
   16854:	b.ge	16868 <_option_is_end@@Base+0x1124>  // b.tcont
   16858:	ldr	x0, [sp, #88]
   1685c:	add	x0, x0, #0x1
   16860:	str	x0, [sp, #40]
   16864:	b	16938 <_option_is_end@@Base+0x11f4>
   16868:	ldr	w0, [sp, #84]
   1686c:	cmp	w0, #0x0
   16870:	b.le	16880 <_option_is_end@@Base+0x113c>
   16874:	ldr	x0, [sp, #88]
   16878:	str	x0, [sp, #32]
   1687c:	b	16938 <_option_is_end@@Base+0x11f4>
   16880:	ldr	x0, [sp, #88]
   16884:	str	x0, [sp, #32]
   16888:	b	16918 <_option_is_end@@Base+0x11d4>
   1688c:	ldr	x1, [sp, #32]
   16890:	ldr	x0, [sp, #40]
   16894:	sub	x0, x1, x0
   16898:	lsr	x0, x0, #1
   1689c:	ldr	x1, [sp, #40]
   168a0:	add	x0, x1, x0
   168a4:	str	x0, [sp, #72]
   168a8:	ldr	x0, [sp, #56]
   168ac:	ldr	x1, [x0, #40]
   168b0:	ldr	x0, [sp, #72]
   168b4:	lsl	x0, x0, #3
   168b8:	add	x0, x1, x0
   168bc:	ldr	x0, [x0]
   168c0:	ldr	x2, [sp, #48]
   168c4:	ldr	x1, [sp, #24]
   168c8:	blr	x2
   168cc:	str	w0, [sp, #68]
   168d0:	ldr	w0, [sp, #68]
   168d4:	cmp	w0, #0x0
   168d8:	b.ge	168ec <_option_is_end@@Base+0x11a8>  // b.tcont
   168dc:	ldr	x0, [sp, #72]
   168e0:	add	x0, x0, #0x1
   168e4:	str	x0, [sp, #40]
   168e8:	b	16918 <_option_is_end@@Base+0x11d4>
   168ec:	ldr	w0, [sp, #68]
   168f0:	cmp	w0, #0x0
   168f4:	b.le	168fc <_option_is_end@@Base+0x11b8>
   168f8:	bl	af70 <abort@plt>
   168fc:	ldr	x1, [sp, #72]
   16900:	ldr	x0, [sp, #40]
   16904:	cmp	x1, x0
   16908:	b.eq	1692c <_option_is_end@@Base+0x11e8>  // b.none
   1690c:	ldr	x0, [sp, #72]
   16910:	sub	x0, x0, #0x1
   16914:	str	x0, [sp, #32]
   16918:	ldr	x1, [sp, #40]
   1691c:	ldr	x0, [sp, #32]
   16920:	cmp	x1, x0
   16924:	b.cc	1688c <_option_is_end@@Base+0x1148>  // b.lo, b.ul, b.last
   16928:	b	16930 <_option_is_end@@Base+0x11ec>
   1692c:	nop
   16930:	ldr	x0, [sp, #40]
   16934:	b	1694c <_option_is_end@@Base+0x1208>
   16938:	ldr	x1, [sp, #40]
   1693c:	ldr	x0, [sp, #32]
   16940:	cmp	x1, x0
   16944:	b.cc	16808 <_option_is_end@@Base+0x10c4>  // b.lo, b.ul, b.last
   16948:	mov	x0, #0xffffffffffffffff    	// #-1
   1694c:	ldp	x29, x30, [sp], #96
   16950:	ret
   16954:	stp	x29, x30, [sp, #-48]!
   16958:	mov	x29, sp
   1695c:	str	x0, [sp, #40]
   16960:	str	x1, [sp, #32]
   16964:	str	x2, [sp, #24]
   16968:	ldr	x0, [sp, #40]
   1696c:	ldr	x0, [x0, #48]
   16970:	ldr	x4, [sp, #24]
   16974:	mov	x3, x0
   16978:	mov	x2, #0x0                   	// #0
   1697c:	ldr	x1, [sp, #32]
   16980:	ldr	x0, [sp, #40]
   16984:	bl	167b4 <_option_is_end@@Base+0x1070>
   16988:	ldp	x29, x30, [sp], #48
   1698c:	ret
   16990:	stp	x29, x30, [sp, #-80]!
   16994:	mov	x29, sp
   16998:	str	x0, [sp, #56]
   1699c:	str	x1, [sp, #48]
   169a0:	str	x2, [sp, #40]
   169a4:	str	x3, [sp, #32]
   169a8:	str	x4, [sp, #24]
   169ac:	ldr	x4, [sp, #24]
   169b0:	ldr	x3, [sp, #32]
   169b4:	ldr	x2, [sp, #40]
   169b8:	ldr	x1, [sp, #48]
   169bc:	ldr	x0, [sp, #56]
   169c0:	bl	167b4 <_option_is_end@@Base+0x1070>
   169c4:	str	x0, [sp, #72]
   169c8:	ldr	x0, [sp, #72]
   169cc:	add	x0, x0, #0x1
   169d0:	ldp	x29, x30, [sp], #80
   169d4:	ret
   169d8:	stp	x29, x30, [sp, #-64]!
   169dc:	mov	x29, sp
   169e0:	str	x0, [sp, #40]
   169e4:	str	x1, [sp, #32]
   169e8:	str	x2, [sp, #24]
   169ec:	ldr	x0, [sp, #40]
   169f0:	ldr	x0, [x0, #48]
   169f4:	ldr	x4, [sp, #24]
   169f8:	mov	x3, x0
   169fc:	mov	x2, #0x0                   	// #0
   16a00:	ldr	x1, [sp, #32]
   16a04:	ldr	x0, [sp, #40]
   16a08:	bl	167b4 <_option_is_end@@Base+0x1070>
   16a0c:	str	x0, [sp, #56]
   16a10:	ldr	x0, [sp, #56]
   16a14:	add	x0, x0, #0x1
   16a18:	ldp	x29, x30, [sp], #64
   16a1c:	ret
   16a20:	stp	x29, x30, [sp, #-96]!
   16a24:	mov	x29, sp
   16a28:	str	x0, [sp, #40]
   16a2c:	str	x1, [sp, #32]
   16a30:	str	x2, [sp, #24]
   16a34:	ldr	x0, [sp, #40]
   16a38:	ldr	x0, [x0, #48]
   16a3c:	str	x0, [sp, #72]
   16a40:	str	xzr, [sp, #88]
   16a44:	ldr	x0, [sp, #72]
   16a48:	str	x0, [sp, #80]
   16a4c:	b	16ad4 <_option_is_end@@Base+0x1390>
   16a50:	ldr	x1, [sp, #80]
   16a54:	ldr	x0, [sp, #88]
   16a58:	sub	x0, x1, x0
   16a5c:	lsr	x0, x0, #1
   16a60:	ldr	x1, [sp, #88]
   16a64:	add	x0, x1, x0
   16a68:	str	x0, [sp, #64]
   16a6c:	ldr	x0, [sp, #40]
   16a70:	ldr	x1, [x0, #40]
   16a74:	ldr	x0, [sp, #64]
   16a78:	lsl	x0, x0, #3
   16a7c:	add	x0, x1, x0
   16a80:	ldr	x0, [x0]
   16a84:	ldr	x2, [sp, #32]
   16a88:	ldr	x1, [sp, #24]
   16a8c:	blr	x2
   16a90:	str	w0, [sp, #60]
   16a94:	ldr	w0, [sp, #60]
   16a98:	cmp	w0, #0x0
   16a9c:	b.ge	16ab0 <_option_is_end@@Base+0x136c>  // b.tcont
   16aa0:	ldr	x0, [sp, #64]
   16aa4:	add	x0, x0, #0x1
   16aa8:	str	x0, [sp, #88]
   16aac:	b	16ad4 <_option_is_end@@Base+0x1390>
   16ab0:	ldr	w0, [sp, #60]
   16ab4:	cmp	w0, #0x0
   16ab8:	b.le	16ac8 <_option_is_end@@Base+0x1384>
   16abc:	ldr	x0, [sp, #64]
   16ac0:	str	x0, [sp, #80]
   16ac4:	b	16ad4 <_option_is_end@@Base+0x1390>
   16ac8:	ldr	x0, [sp, #64]
   16acc:	str	x0, [sp, #88]
   16ad0:	b	16ae4 <_option_is_end@@Base+0x13a0>
   16ad4:	ldr	x1, [sp, #88]
   16ad8:	ldr	x0, [sp, #80]
   16adc:	cmp	x1, x0
   16ae0:	b.cc	16a50 <_option_is_end@@Base+0x130c>  // b.lo, b.ul, b.last
   16ae4:	ldr	x2, [sp, #24]
   16ae8:	ldr	x1, [sp, #88]
   16aec:	ldr	x0, [sp, #40]
   16af0:	bl	1616c <_option_is_end@@Base+0xa28>
   16af4:	ldp	x29, x30, [sp], #96
   16af8:	ret
   16afc:	stp	x29, x30, [sp, #-64]!
   16b00:	mov	x29, sp
   16b04:	str	x0, [sp, #40]
   16b08:	str	x1, [sp, #32]
   16b0c:	str	x2, [sp, #24]
   16b10:	ldr	x2, [sp, #24]
   16b14:	ldr	x1, [sp, #32]
   16b18:	ldr	x0, [sp, #40]
   16b1c:	bl	16954 <_option_is_end@@Base+0x1210>
   16b20:	str	x0, [sp, #56]
   16b24:	ldr	x0, [sp, #56]
   16b28:	cmn	x0, #0x1
   16b2c:	b.ne	16b38 <_option_is_end@@Base+0x13f4>  // b.any
   16b30:	mov	w0, #0x0                   	// #0
   16b34:	b	16b48 <_option_is_end@@Base+0x1404>
   16b38:	ldr	x1, [sp, #56]
   16b3c:	ldr	x0, [sp, #40]
   16b40:	bl	16358 <_option_is_end@@Base+0xc14>
   16b44:	and	w0, w0, #0xff
   16b48:	ldp	x29, x30, [sp], #64
   16b4c:	ret

0000000000016b50 <rotl64@@Base>:
   16b50:	sub	sp, sp, #0x10
   16b54:	str	x0, [sp, #8]
   16b58:	str	w1, [sp, #4]
   16b5c:	ldr	w0, [sp, #4]
   16b60:	ldr	x1, [sp, #8]
   16b64:	neg	w0, w0
   16b68:	ror	x0, x1, x0
   16b6c:	add	sp, sp, #0x10
   16b70:	ret

0000000000016b74 <rotr64@@Base>:
   16b74:	sub	sp, sp, #0x10
   16b78:	str	x0, [sp, #8]
   16b7c:	str	w1, [sp, #4]
   16b80:	ldr	w0, [sp, #4]
   16b84:	ldr	x1, [sp, #8]
   16b88:	ror	x0, x1, x0
   16b8c:	add	sp, sp, #0x10
   16b90:	ret

0000000000016b94 <rotl32@@Base>:
   16b94:	sub	sp, sp, #0x10
   16b98:	str	w0, [sp, #12]
   16b9c:	str	w1, [sp, #8]
   16ba0:	ldr	w0, [sp, #8]
   16ba4:	ldr	w1, [sp, #12]
   16ba8:	neg	w0, w0
   16bac:	ror	w0, w1, w0
   16bb0:	add	sp, sp, #0x10
   16bb4:	ret

0000000000016bb8 <rotr32@@Base>:
   16bb8:	sub	sp, sp, #0x10
   16bbc:	str	w0, [sp, #12]
   16bc0:	str	w1, [sp, #8]
   16bc4:	ldr	w0, [sp, #8]
   16bc8:	ldr	w1, [sp, #12]
   16bcc:	ror	w0, w1, w0
   16bd0:	add	sp, sp, #0x10
   16bd4:	ret

0000000000016bd8 <rotl_sz@@Base>:
   16bd8:	sub	sp, sp, #0x10
   16bdc:	str	x0, [sp, #8]
   16be0:	str	w1, [sp, #4]
   16be4:	ldr	w0, [sp, #4]
   16be8:	ldr	x1, [sp, #8]
   16bec:	lsl	x1, x1, x0
   16bf0:	ldr	w0, [sp, #4]
   16bf4:	mov	w2, #0x40                  	// #64
   16bf8:	sub	w0, w2, w0
   16bfc:	ldr	x2, [sp, #8]
   16c00:	lsr	x0, x2, x0
   16c04:	orr	x0, x1, x0
   16c08:	add	sp, sp, #0x10
   16c0c:	ret

0000000000016c10 <rotr_sz@@Base>:
   16c10:	sub	sp, sp, #0x10
   16c14:	str	x0, [sp, #8]
   16c18:	str	w1, [sp, #4]
   16c1c:	ldr	w0, [sp, #4]
   16c20:	ldr	x1, [sp, #8]
   16c24:	lsr	x1, x1, x0
   16c28:	ldr	w0, [sp, #4]
   16c2c:	mov	w2, #0x40                  	// #64
   16c30:	sub	w0, w2, w0
   16c34:	ldr	x2, [sp, #8]
   16c38:	lsl	x0, x2, x0
   16c3c:	orr	x0, x1, x0
   16c40:	add	sp, sp, #0x10
   16c44:	ret

0000000000016c48 <rotl16@@Base>:
   16c48:	sub	sp, sp, #0x10
   16c4c:	strh	w0, [sp, #14]
   16c50:	str	w1, [sp, #8]
   16c54:	ldrh	w1, [sp, #14]
   16c58:	ldr	w0, [sp, #8]
   16c5c:	lsl	w0, w1, w0
   16c60:	and	w1, w0, #0xffff
   16c64:	ldrh	w2, [sp, #14]
   16c68:	mov	w3, #0x10                  	// #16
   16c6c:	ldr	w0, [sp, #8]
   16c70:	sub	w0, w3, w0
   16c74:	lsr	w0, w2, w0
   16c78:	and	w0, w0, #0xffff
   16c7c:	orr	w0, w1, w0
   16c80:	and	w0, w0, #0xffff
   16c84:	add	sp, sp, #0x10
   16c88:	ret

0000000000016c8c <rotr16@@Base>:
   16c8c:	sub	sp, sp, #0x10
   16c90:	strh	w0, [sp, #14]
   16c94:	str	w1, [sp, #8]
   16c98:	ldrh	w1, [sp, #14]
   16c9c:	ldr	w0, [sp, #8]
   16ca0:	lsr	w0, w1, w0
   16ca4:	and	w1, w0, #0xffff
   16ca8:	ldrh	w2, [sp, #14]
   16cac:	mov	w3, #0x10                  	// #16
   16cb0:	ldr	w0, [sp, #8]
   16cb4:	sub	w0, w3, w0
   16cb8:	lsl	w0, w2, w0
   16cbc:	and	w0, w0, #0xffff
   16cc0:	orr	w0, w1, w0
   16cc4:	and	w0, w0, #0xffff
   16cc8:	add	sp, sp, #0x10
   16ccc:	ret

0000000000016cd0 <rotl8@@Base>:
   16cd0:	sub	sp, sp, #0x10
   16cd4:	strb	w0, [sp, #15]
   16cd8:	str	w1, [sp, #8]
   16cdc:	ldrb	w1, [sp, #15]
   16ce0:	ldr	w0, [sp, #8]
   16ce4:	lsl	w0, w1, w0
   16ce8:	and	w1, w0, #0xff
   16cec:	ldrb	w2, [sp, #15]
   16cf0:	mov	w3, #0x8                   	// #8
   16cf4:	ldr	w0, [sp, #8]
   16cf8:	sub	w0, w3, w0
   16cfc:	lsr	w0, w2, w0
   16d00:	and	w0, w0, #0xff
   16d04:	orr	w0, w1, w0
   16d08:	and	w0, w0, #0xff
   16d0c:	add	sp, sp, #0x10
   16d10:	ret

0000000000016d14 <rotr8@@Base>:
   16d14:	sub	sp, sp, #0x10
   16d18:	strb	w0, [sp, #15]
   16d1c:	str	w1, [sp, #8]
   16d20:	ldrb	w1, [sp, #15]
   16d24:	ldr	w0, [sp, #8]
   16d28:	lsr	w0, w1, w0
   16d2c:	and	w1, w0, #0xff
   16d30:	ldrb	w2, [sp, #15]
   16d34:	mov	w3, #0x8                   	// #8
   16d38:	ldr	w0, [sp, #8]
   16d3c:	sub	w0, w3, w0
   16d40:	lsl	w0, w2, w0
   16d44:	and	w0, w0, #0xff
   16d48:	orr	w0, w1, w0
   16d4c:	and	w0, w0, #0xff
   16d50:	add	sp, sp, #0x10
   16d54:	ret
   16d58:	stp	x29, x30, [sp, #-64]!
   16d5c:	mov	x29, sp
   16d60:	str	x0, [sp, #40]
   16d64:	str	x1, [sp, #32]
   16d68:	str	x2, [sp, #24]
   16d6c:	ldr	x0, [sp, #40]
   16d70:	ldr	x0, [x0]
   16d74:	cmp	x0, #0x0
   16d78:	b.ne	16dc8 <rotr8@@Base+0xb4>  // b.any
   16d7c:	mov	x0, #0x7                   	// #7
   16d80:	str	x0, [sp, #56]
   16d84:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   16d88:	ldr	x4, [x0, #3848]
   16d8c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   16d90:	ldr	x3, [x0, #3928]
   16d94:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   16d98:	ldr	x2, [x0, #3888]
   16d9c:	mov	x1, #0x0                   	// #0
   16da0:	ldr	x0, [sp, #56]
   16da4:	bl	ae10 <hash_initialize@plt>
   16da8:	mov	x1, x0
   16dac:	ldr	x0, [sp, #40]
   16db0:	str	x1, [x0]
   16db4:	ldr	x0, [sp, #40]
   16db8:	ldr	x0, [x0]
   16dbc:	cmp	x0, #0x0
   16dc0:	b.ne	16dc8 <rotr8@@Base+0xb4>  // b.any
   16dc4:	bl	aee0 <xalloc_die@plt>
   16dc8:	ldr	x0, [sp, #40]
   16dcc:	ldr	x0, [x0]
   16dd0:	ldr	x2, [sp, #24]
   16dd4:	ldr	x1, [sp, #32]
   16dd8:	bl	b0b0 <seen_file@plt>
   16ddc:	and	w0, w0, #0xff
   16de0:	cmp	w0, #0x0
   16de4:	b.eq	16df0 <rotr8@@Base+0xdc>  // b.none
   16de8:	mov	w0, #0x1                   	// #1
   16dec:	b	16e08 <rotr8@@Base+0xf4>
   16df0:	ldr	x0, [sp, #40]
   16df4:	ldr	x0, [x0]
   16df8:	ldr	x2, [sp, #24]
   16dfc:	ldr	x1, [sp, #32]
   16e00:	bl	ab60 <record_file@plt>
   16e04:	mov	w0, #0x0                   	// #0
   16e08:	ldp	x29, x30, [sp], #64
   16e0c:	ret

0000000000016e10 <canonicalize_filename_mode@@Base>:
   16e10:	stp	x29, x30, [sp, #-304]!
   16e14:	mov	x29, sp
   16e18:	str	x0, [sp, #24]
   16e1c:	str	w1, [sp, #20]
   16e20:	str	xzr, [sp, #280]
   16e24:	str	xzr, [sp, #248]
   16e28:	str	xzr, [sp, #160]
   16e2c:	ldr	w0, [sp, #20]
   16e30:	and	w0, w0, #0xfffffffc
   16e34:	str	w0, [sp, #220]
   16e38:	ldr	w0, [sp, #220]
   16e3c:	and	w0, w0, #0x4
   16e40:	cmp	w0, #0x0
   16e44:	cset	w0, ne  // ne = any
   16e48:	strb	w0, [sp, #219]
   16e4c:	ldr	w0, [sp, #20]
   16e50:	and	w0, w0, #0x3
   16e54:	str	w0, [sp, #20]
   16e58:	ldr	w0, [sp, #20]
   16e5c:	sub	w1, w0, #0x1
   16e60:	ldr	w0, [sp, #20]
   16e64:	and	w0, w1, w0
   16e68:	cmp	w0, #0x0
   16e6c:	b.eq	16e88 <canonicalize_filename_mode@@Base+0x78>  // b.none
   16e70:	bl	b640 <__errno_location@plt>
   16e74:	mov	x1, x0
   16e78:	mov	w0, #0x16                  	// #22
   16e7c:	str	w0, [x1]
   16e80:	mov	x0, #0x0                   	// #0
   16e84:	b	17698 <canonicalize_filename_mode@@Base+0x888>
   16e88:	ldr	x0, [sp, #24]
   16e8c:	cmp	x0, #0x0
   16e90:	b.ne	16eac <canonicalize_filename_mode@@Base+0x9c>  // b.any
   16e94:	bl	b640 <__errno_location@plt>
   16e98:	mov	x1, x0
   16e9c:	mov	w0, #0x16                  	// #22
   16ea0:	str	w0, [x1]
   16ea4:	mov	x0, #0x0                   	// #0
   16ea8:	b	17698 <canonicalize_filename_mode@@Base+0x888>
   16eac:	ldr	x0, [sp, #24]
   16eb0:	ldrb	w0, [x0]
   16eb4:	cmp	w0, #0x0
   16eb8:	b.ne	16ed4 <canonicalize_filename_mode@@Base+0xc4>  // b.any
   16ebc:	bl	b640 <__errno_location@plt>
   16ec0:	mov	x1, x0
   16ec4:	mov	w0, #0x2                   	// #2
   16ec8:	str	w0, [x1]
   16ecc:	mov	x0, #0x0                   	// #0
   16ed0:	b	17698 <canonicalize_filename_mode@@Base+0x888>
   16ed4:	str	xzr, [sp, #232]
   16ed8:	ldr	x0, [sp, #24]
   16edc:	ldrb	w0, [x0]
   16ee0:	cmp	w0, #0x2f
   16ee4:	b.eq	16f8c <canonicalize_filename_mode@@Base+0x17c>  // b.none
   16ee8:	bl	b7d0 <xgetcwd@plt>
   16eec:	str	x0, [sp, #296]
   16ef0:	ldr	x0, [sp, #296]
   16ef4:	cmp	x0, #0x0
   16ef8:	b.ne	16f04 <canonicalize_filename_mode@@Base+0xf4>  // b.any
   16efc:	mov	x0, #0x0                   	// #0
   16f00:	b	17698 <canonicalize_filename_mode@@Base+0x888>
   16f04:	ldr	x0, [sp, #296]
   16f08:	bl	a820 <strlen@plt>
   16f0c:	mov	x1, x0
   16f10:	ldr	x0, [sp, #296]
   16f14:	add	x0, x0, x1
   16f18:	str	x0, [sp, #288]
   16f1c:	ldr	x1, [sp, #288]
   16f20:	ldr	x0, [sp, #296]
   16f24:	sub	x0, x1, x0
   16f28:	cmp	x0, #0xfff
   16f2c:	b.gt	16f74 <canonicalize_filename_mode@@Base+0x164>
   16f30:	mov	x1, #0x1000                	// #4096
   16f34:	ldr	x0, [sp, #296]
   16f38:	bl	abf0 <xrealloc@plt>
   16f3c:	str	x0, [sp, #208]
   16f40:	ldr	x1, [sp, #288]
   16f44:	ldr	x0, [sp, #296]
   16f48:	sub	x0, x1, x0
   16f4c:	mov	x1, x0
   16f50:	ldr	x0, [sp, #208]
   16f54:	add	x0, x0, x1
   16f58:	str	x0, [sp, #288]
   16f5c:	ldr	x0, [sp, #208]
   16f60:	str	x0, [sp, #296]
   16f64:	ldr	x0, [sp, #296]
   16f68:	add	x0, x0, #0x1, lsl #12
   16f6c:	str	x0, [sp, #256]
   16f70:	b	16f7c <canonicalize_filename_mode@@Base+0x16c>
   16f74:	ldr	x0, [sp, #288]
   16f78:	str	x0, [sp, #256]
   16f7c:	ldr	x0, [sp, #24]
   16f80:	str	x0, [sp, #272]
   16f84:	str	xzr, [sp, #232]
   16f88:	b	175a0 <canonicalize_filename_mode@@Base+0x790>
   16f8c:	mov	x0, #0x1000                	// #4096
   16f90:	bl	ace0 <xmalloc@plt>
   16f94:	str	x0, [sp, #296]
   16f98:	ldr	x0, [sp, #296]
   16f9c:	add	x0, x0, #0x1, lsl #12
   16fa0:	str	x0, [sp, #256]
   16fa4:	ldr	x0, [sp, #296]
   16fa8:	str	x0, [sp, #288]
   16fac:	ldr	x0, [sp, #232]
   16fb0:	cmp	x0, #0x0
   16fb4:	b.eq	16fd8 <canonicalize_filename_mode@@Base+0x1c8>  // b.none
   16fb8:	ldr	x2, [sp, #232]
   16fbc:	ldr	x1, [sp, #24]
   16fc0:	ldr	x0, [sp, #296]
   16fc4:	bl	a790 <memcpy@plt>
   16fc8:	ldr	x1, [sp, #288]
   16fcc:	ldr	x0, [sp, #232]
   16fd0:	add	x0, x1, x0
   16fd4:	str	x0, [sp, #288]
   16fd8:	ldr	x0, [sp, #288]
   16fdc:	add	x1, x0, #0x1
   16fe0:	str	x1, [sp, #288]
   16fe4:	mov	w1, #0x2f                  	// #47
   16fe8:	strb	w1, [x0]
   16fec:	ldr	x1, [sp, #24]
   16ff0:	ldr	x0, [sp, #232]
   16ff4:	add	x0, x1, x0
   16ff8:	str	x0, [sp, #272]
   16ffc:	b	175a0 <canonicalize_filename_mode@@Base+0x790>
   17000:	ldr	x0, [sp, #272]
   17004:	add	x0, x0, #0x1
   17008:	str	x0, [sp, #272]
   1700c:	ldr	x0, [sp, #272]
   17010:	ldrb	w0, [x0]
   17014:	cmp	w0, #0x2f
   17018:	b.eq	17000 <canonicalize_filename_mode@@Base+0x1f0>  // b.none
   1701c:	ldr	x0, [sp, #272]
   17020:	str	x0, [sp, #264]
   17024:	b	17034 <canonicalize_filename_mode@@Base+0x224>
   17028:	ldr	x0, [sp, #264]
   1702c:	add	x0, x0, #0x1
   17030:	str	x0, [sp, #264]
   17034:	ldr	x0, [sp, #264]
   17038:	ldrb	w0, [x0]
   1703c:	cmp	w0, #0x0
   17040:	b.eq	17054 <canonicalize_filename_mode@@Base+0x244>  // b.none
   17044:	ldr	x0, [sp, #264]
   17048:	ldrb	w0, [x0]
   1704c:	cmp	w0, #0x2f
   17050:	b.ne	17028 <canonicalize_filename_mode@@Base+0x218>  // b.any
   17054:	ldr	x1, [sp, #264]
   17058:	ldr	x0, [sp, #272]
   1705c:	cmp	x1, x0
   17060:	b.eq	175b4 <canonicalize_filename_mode@@Base+0x7a4>  // b.none
   17064:	ldr	x1, [sp, #264]
   17068:	ldr	x0, [sp, #272]
   1706c:	sub	x0, x1, x0
   17070:	cmp	x0, #0x1
   17074:	b.ne	17088 <canonicalize_filename_mode@@Base+0x278>  // b.any
   17078:	ldr	x0, [sp, #272]
   1707c:	ldrb	w0, [x0]
   17080:	cmp	w0, #0x2e
   17084:	b.eq	17598 <canonicalize_filename_mode@@Base+0x788>  // b.none
   17088:	ldr	x1, [sp, #264]
   1708c:	ldr	x0, [sp, #272]
   17090:	sub	x0, x1, x0
   17094:	cmp	x0, #0x2
   17098:	b.ne	17120 <canonicalize_filename_mode@@Base+0x310>  // b.any
   1709c:	ldr	x0, [sp, #272]
   170a0:	ldrb	w0, [x0]
   170a4:	cmp	w0, #0x2e
   170a8:	b.ne	17120 <canonicalize_filename_mode@@Base+0x310>  // b.any
   170ac:	ldr	x0, [sp, #272]
   170b0:	add	x0, x0, #0x1
   170b4:	ldrb	w0, [x0]
   170b8:	cmp	w0, #0x2e
   170bc:	b.ne	17120 <canonicalize_filename_mode@@Base+0x310>  // b.any
   170c0:	ldr	x0, [sp, #232]
   170c4:	add	x0, x0, #0x1
   170c8:	ldr	x1, [sp, #296]
   170cc:	add	x0, x1, x0
   170d0:	ldr	x1, [sp, #288]
   170d4:	cmp	x1, x0
   170d8:	b.ls	1757c <canonicalize_filename_mode@@Base+0x76c>  // b.plast
   170dc:	ldr	x0, [sp, #288]
   170e0:	sub	x0, x0, #0x1
   170e4:	str	x0, [sp, #288]
   170e8:	b	170f8 <canonicalize_filename_mode@@Base+0x2e8>
   170ec:	ldr	x0, [sp, #288]
   170f0:	sub	x0, x0, #0x1
   170f4:	str	x0, [sp, #288]
   170f8:	ldr	x1, [sp, #288]
   170fc:	ldr	x0, [sp, #296]
   17100:	cmp	x1, x0
   17104:	b.ls	1757c <canonicalize_filename_mode@@Base+0x76c>  // b.plast
   17108:	ldr	x0, [sp, #288]
   1710c:	sub	x0, x0, #0x1
   17110:	ldrb	w0, [x0]
   17114:	cmp	w0, #0x2f
   17118:	b.ne	170ec <canonicalize_filename_mode@@Base+0x2dc>  // b.any
   1711c:	b	1757c <canonicalize_filename_mode@@Base+0x76c>
   17120:	ldr	x0, [sp, #288]
   17124:	sub	x0, x0, #0x1
   17128:	ldrb	w0, [x0]
   1712c:	cmp	w0, #0x2f
   17130:	b.eq	17148 <canonicalize_filename_mode@@Base+0x338>  // b.none
   17134:	ldr	x0, [sp, #288]
   17138:	add	x1, x0, #0x1
   1713c:	str	x1, [sp, #288]
   17140:	mov	w1, #0x2f                  	// #47
   17144:	strb	w1, [x0]
   17148:	ldr	x1, [sp, #264]
   1714c:	ldr	x0, [sp, #272]
   17150:	sub	x0, x1, x0
   17154:	mov	x1, x0
   17158:	ldr	x0, [sp, #288]
   1715c:	add	x0, x0, x1
   17160:	ldr	x1, [sp, #256]
   17164:	cmp	x1, x0
   17168:	b.hi	17200 <canonicalize_filename_mode@@Base+0x3f0>  // b.pmore
   1716c:	ldr	x1, [sp, #288]
   17170:	ldr	x0, [sp, #296]
   17174:	sub	x0, x1, x0
   17178:	str	x0, [sp, #200]
   1717c:	ldr	x1, [sp, #256]
   17180:	ldr	x0, [sp, #296]
   17184:	sub	x0, x1, x0
   17188:	str	x0, [sp, #224]
   1718c:	ldr	x1, [sp, #264]
   17190:	ldr	x0, [sp, #272]
   17194:	sub	x0, x1, x0
   17198:	cmp	x0, #0xfff
   1719c:	b.le	171c4 <canonicalize_filename_mode@@Base+0x3b4>
   171a0:	ldr	x1, [sp, #264]
   171a4:	ldr	x0, [sp, #272]
   171a8:	sub	x0, x1, x0
   171ac:	mov	x1, x0
   171b0:	ldr	x0, [sp, #224]
   171b4:	add	x0, x1, x0
   171b8:	add	x0, x0, #0x1
   171bc:	str	x0, [sp, #224]
   171c0:	b	171d0 <canonicalize_filename_mode@@Base+0x3c0>
   171c4:	ldr	x0, [sp, #224]
   171c8:	add	x0, x0, #0x1, lsl #12
   171cc:	str	x0, [sp, #224]
   171d0:	ldr	x1, [sp, #224]
   171d4:	ldr	x0, [sp, #296]
   171d8:	bl	abf0 <xrealloc@plt>
   171dc:	str	x0, [sp, #296]
   171e0:	ldr	x1, [sp, #296]
   171e4:	ldr	x0, [sp, #224]
   171e8:	add	x0, x1, x0
   171ec:	str	x0, [sp, #256]
   171f0:	ldr	x0, [sp, #200]
   171f4:	ldr	x1, [sp, #296]
   171f8:	add	x0, x1, x0
   171fc:	str	x0, [sp, #288]
   17200:	ldr	x1, [sp, #264]
   17204:	ldr	x0, [sp, #272]
   17208:	sub	x0, x1, x0
   1720c:	mov	x2, x0
   17210:	ldr	x1, [sp, #272]
   17214:	ldr	x0, [sp, #288]
   17218:	bl	a790 <memcpy@plt>
   1721c:	str	x0, [sp, #288]
   17220:	ldr	x1, [sp, #264]
   17224:	ldr	x0, [sp, #272]
   17228:	sub	x0, x1, x0
   1722c:	mov	x1, x0
   17230:	ldr	x0, [sp, #288]
   17234:	add	x0, x0, x1
   17238:	str	x0, [sp, #288]
   1723c:	ldr	x0, [sp, #288]
   17240:	strb	wzr, [x0]
   17244:	ldrb	w0, [sp, #219]
   17248:	cmp	w0, #0x0
   1724c:	b.eq	17264 <canonicalize_filename_mode@@Base+0x454>  // b.none
   17250:	ldr	w0, [sp, #20]
   17254:	cmp	w0, #0x2
   17258:	b.ne	17264 <canonicalize_filename_mode@@Base+0x454>  // b.any
   1725c:	str	wzr, [sp, #48]
   17260:	b	17314 <canonicalize_filename_mode@@Base+0x504>
   17264:	ldrb	w0, [sp, #219]
   17268:	cmp	w0, #0x0
   1726c:	b.eq	17290 <canonicalize_filename_mode@@Base+0x480>  // b.none
   17270:	add	x0, sp, #0x20
   17274:	mov	x1, x0
   17278:	ldr	x0, [sp, #296]
   1727c:	bl	42370 <vasnprintf@@Base+0x2174>
   17280:	cmp	w0, #0x0
   17284:	cset	w0, ne  // ne = any
   17288:	and	w0, w0, #0xff
   1728c:	b	172ac <canonicalize_filename_mode@@Base+0x49c>
   17290:	add	x0, sp, #0x20
   17294:	mov	x1, x0
   17298:	ldr	x0, [sp, #296]
   1729c:	bl	42390 <vasnprintf@@Base+0x2194>
   172a0:	cmp	w0, #0x0
   172a4:	cset	w0, ne  // ne = any
   172a8:	and	w0, w0, #0xff
   172ac:	cmp	w0, #0x0
   172b0:	b.eq	17314 <canonicalize_filename_mode@@Base+0x504>  // b.none
   172b4:	bl	b640 <__errno_location@plt>
   172b8:	ldr	w0, [x0]
   172bc:	str	w0, [sp, #244]
   172c0:	ldr	w0, [sp, #20]
   172c4:	cmp	w0, #0x0
   172c8:	b.eq	17654 <canonicalize_filename_mode@@Base+0x844>  // b.none
   172cc:	ldr	w0, [sp, #20]
   172d0:	cmp	w0, #0x1
   172d4:	b.ne	17310 <canonicalize_filename_mode@@Base+0x500>  // b.any
   172d8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   172dc:	add	x1, x0, #0x660
   172e0:	ldr	x0, [sp, #264]
   172e4:	bl	b240 <strspn@plt>
   172e8:	mov	x1, x0
   172ec:	ldr	x0, [sp, #264]
   172f0:	add	x0, x0, x1
   172f4:	ldrb	w0, [x0]
   172f8:	cmp	w0, #0x0
   172fc:	b.ne	1765c <canonicalize_filename_mode@@Base+0x84c>  // b.any
   17300:	ldr	w0, [sp, #244]
   17304:	cmp	w0, #0x2
   17308:	b.eq	17584 <canonicalize_filename_mode@@Base+0x774>  // b.none
   1730c:	b	1765c <canonicalize_filename_mode@@Base+0x84c>
   17310:	str	wzr, [sp, #48]
   17314:	ldr	w0, [sp, #48]
   17318:	and	w0, w0, #0xf000
   1731c:	cmp	w0, #0xa, lsl #12
   17320:	b.ne	17544 <canonicalize_filename_mode@@Base+0x734>  // b.any
   17324:	add	x1, sp, #0x20
   17328:	add	x0, sp, #0xa0
   1732c:	mov	x2, x1
   17330:	ldr	x1, [sp, #24]
   17334:	bl	16d58 <rotr8@@Base+0x44>
   17338:	and	w0, w0, #0xff
   1733c:	cmp	w0, #0x0
   17340:	b.eq	1735c <canonicalize_filename_mode@@Base+0x54c>  // b.none
   17344:	ldr	w0, [sp, #20]
   17348:	cmp	w0, #0x2
   1734c:	b.eq	1758c <canonicalize_filename_mode@@Base+0x77c>  // b.none
   17350:	mov	w0, #0x28                  	// #40
   17354:	str	w0, [sp, #244]
   17358:	b	17660 <canonicalize_filename_mode@@Base+0x850>
   1735c:	ldr	x0, [sp, #80]
   17360:	mov	x1, x0
   17364:	ldr	x0, [sp, #296]
   17368:	bl	b280 <areadlink_with_size@plt>
   1736c:	str	x0, [sp, #192]
   17370:	ldr	x0, [sp, #192]
   17374:	cmp	x0, #0x0
   17378:	b.ne	173a8 <canonicalize_filename_mode@@Base+0x598>  // b.any
   1737c:	ldr	w0, [sp, #20]
   17380:	cmp	w0, #0x2
   17384:	b.ne	17398 <canonicalize_filename_mode@@Base+0x588>  // b.any
   17388:	bl	b640 <__errno_location@plt>
   1738c:	ldr	w0, [x0]
   17390:	cmp	w0, #0xc
   17394:	b.ne	17594 <canonicalize_filename_mode@@Base+0x784>  // b.any
   17398:	bl	b640 <__errno_location@plt>
   1739c:	ldr	w0, [x0]
   173a0:	str	w0, [sp, #244]
   173a4:	b	17660 <canonicalize_filename_mode@@Base+0x850>
   173a8:	ldr	x0, [sp, #192]
   173ac:	bl	a820 <strlen@plt>
   173b0:	str	x0, [sp, #184]
   173b4:	ldr	x0, [sp, #264]
   173b8:	bl	a820 <strlen@plt>
   173bc:	str	x0, [sp, #176]
   173c0:	ldr	x0, [sp, #248]
   173c4:	cmp	x0, #0x0
   173c8:	b.ne	173fc <canonicalize_filename_mode@@Base+0x5ec>  // b.any
   173cc:	ldr	x1, [sp, #184]
   173d0:	ldr	x0, [sp, #176]
   173d4:	add	x0, x1, x0
   173d8:	add	x0, x0, #0x1
   173dc:	mov	x1, #0x1000                	// #4096
   173e0:	cmp	x0, #0x1, lsl #12
   173e4:	csel	x0, x0, x1, cs  // cs = hs, nlast
   173e8:	str	x0, [sp, #248]
   173ec:	ldr	x0, [sp, #248]
   173f0:	bl	ace0 <xmalloc@plt>
   173f4:	str	x0, [sp, #280]
   173f8:	b	1743c <canonicalize_filename_mode@@Base+0x62c>
   173fc:	ldr	x1, [sp, #184]
   17400:	ldr	x0, [sp, #176]
   17404:	add	x0, x1, x0
   17408:	add	x0, x0, #0x1
   1740c:	ldr	x1, [sp, #248]
   17410:	cmp	x1, x0
   17414:	b.cs	1743c <canonicalize_filename_mode@@Base+0x62c>  // b.hs, b.nlast
   17418:	ldr	x1, [sp, #184]
   1741c:	ldr	x0, [sp, #176]
   17420:	add	x0, x1, x0
   17424:	add	x0, x0, #0x1
   17428:	str	x0, [sp, #248]
   1742c:	ldr	x1, [sp, #248]
   17430:	ldr	x0, [sp, #280]
   17434:	bl	abf0 <xrealloc@plt>
   17438:	str	x0, [sp, #280]
   1743c:	ldr	x1, [sp, #280]
   17440:	ldr	x0, [sp, #184]
   17444:	add	x3, x1, x0
   17448:	ldr	x0, [sp, #176]
   1744c:	add	x0, x0, #0x1
   17450:	mov	x2, x0
   17454:	ldr	x1, [sp, #264]
   17458:	mov	x0, x3
   1745c:	bl	a7a0 <memmove@plt>
   17460:	ldr	x2, [sp, #184]
   17464:	ldr	x1, [sp, #192]
   17468:	ldr	x0, [sp, #280]
   1746c:	bl	a790 <memcpy@plt>
   17470:	str	x0, [sp, #264]
   17474:	ldr	x0, [sp, #264]
   17478:	str	x0, [sp, #24]
   1747c:	ldr	x0, [sp, #192]
   17480:	ldrb	w0, [x0]
   17484:	cmp	w0, #0x2f
   17488:	b.ne	174dc <canonicalize_filename_mode@@Base+0x6cc>  // b.any
   1748c:	str	xzr, [sp, #168]
   17490:	ldr	x0, [sp, #168]
   17494:	cmp	x0, #0x0
   17498:	b.eq	174ac <canonicalize_filename_mode@@Base+0x69c>  // b.none
   1749c:	ldr	x2, [sp, #168]
   174a0:	ldr	x1, [sp, #192]
   174a4:	ldr	x0, [sp, #296]
   174a8:	bl	a790 <memcpy@plt>
   174ac:	ldr	x1, [sp, #296]
   174b0:	ldr	x0, [sp, #168]
   174b4:	add	x0, x1, x0
   174b8:	str	x0, [sp, #288]
   174bc:	ldr	x0, [sp, #288]
   174c0:	add	x1, x0, #0x1
   174c4:	str	x1, [sp, #288]
   174c8:	mov	w1, #0x2f                  	// #47
   174cc:	strb	w1, [x0]
   174d0:	ldr	x0, [sp, #168]
   174d4:	str	x0, [sp, #232]
   174d8:	b	17538 <canonicalize_filename_mode@@Base+0x728>
   174dc:	ldr	x0, [sp, #232]
   174e0:	add	x0, x0, #0x1
   174e4:	ldr	x1, [sp, #296]
   174e8:	add	x0, x1, x0
   174ec:	ldr	x1, [sp, #288]
   174f0:	cmp	x1, x0
   174f4:	b.ls	17538 <canonicalize_filename_mode@@Base+0x728>  // b.plast
   174f8:	ldr	x0, [sp, #288]
   174fc:	sub	x0, x0, #0x1
   17500:	str	x0, [sp, #288]
   17504:	b	17514 <canonicalize_filename_mode@@Base+0x704>
   17508:	ldr	x0, [sp, #288]
   1750c:	sub	x0, x0, #0x1
   17510:	str	x0, [sp, #288]
   17514:	ldr	x1, [sp, #288]
   17518:	ldr	x0, [sp, #296]
   1751c:	cmp	x1, x0
   17520:	b.ls	17538 <canonicalize_filename_mode@@Base+0x728>  // b.plast
   17524:	ldr	x0, [sp, #288]
   17528:	sub	x0, x0, #0x1
   1752c:	ldrb	w0, [x0]
   17530:	cmp	w0, #0x2f
   17534:	b.ne	17508 <canonicalize_filename_mode@@Base+0x6f8>  // b.any
   17538:	ldr	x0, [sp, #192]
   1753c:	bl	b130 <free@plt>
   17540:	b	17598 <canonicalize_filename_mode@@Base+0x788>
   17544:	ldr	w0, [sp, #48]
   17548:	and	w0, w0, #0xf000
   1754c:	cmp	w0, #0x4, lsl #12
   17550:	b.eq	17598 <canonicalize_filename_mode@@Base+0x788>  // b.none
   17554:	ldr	x0, [sp, #264]
   17558:	ldrb	w0, [x0]
   1755c:	cmp	w0, #0x0
   17560:	b.eq	17598 <canonicalize_filename_mode@@Base+0x788>  // b.none
   17564:	ldr	w0, [sp, #20]
   17568:	cmp	w0, #0x2
   1756c:	b.eq	17598 <canonicalize_filename_mode@@Base+0x788>  // b.none
   17570:	mov	w0, #0x14                  	// #20
   17574:	str	w0, [sp, #244]
   17578:	b	17660 <canonicalize_filename_mode@@Base+0x850>
   1757c:	nop
   17580:	b	17598 <canonicalize_filename_mode@@Base+0x788>
   17584:	nop
   17588:	b	17598 <canonicalize_filename_mode@@Base+0x788>
   1758c:	nop
   17590:	b	17598 <canonicalize_filename_mode@@Base+0x788>
   17594:	nop
   17598:	ldr	x0, [sp, #264]
   1759c:	str	x0, [sp, #272]
   175a0:	ldr	x0, [sp, #272]
   175a4:	ldrb	w0, [x0]
   175a8:	cmp	w0, #0x0
   175ac:	b.ne	1700c <canonicalize_filename_mode@@Base+0x1fc>  // b.any
   175b0:	b	175b8 <canonicalize_filename_mode@@Base+0x7a8>
   175b4:	nop
   175b8:	ldr	x0, [sp, #232]
   175bc:	add	x0, x0, #0x1
   175c0:	ldr	x1, [sp, #296]
   175c4:	add	x0, x1, x0
   175c8:	ldr	x1, [sp, #288]
   175cc:	cmp	x1, x0
   175d0:	b.ls	175f4 <canonicalize_filename_mode@@Base+0x7e4>  // b.plast
   175d4:	ldr	x0, [sp, #288]
   175d8:	sub	x0, x0, #0x1
   175dc:	ldrb	w0, [x0]
   175e0:	cmp	w0, #0x2f
   175e4:	b.ne	175f4 <canonicalize_filename_mode@@Base+0x7e4>  // b.any
   175e8:	ldr	x0, [sp, #288]
   175ec:	sub	x0, x0, #0x1
   175f0:	str	x0, [sp, #288]
   175f4:	ldr	x0, [sp, #288]
   175f8:	strb	wzr, [x0]
   175fc:	ldr	x0, [sp, #288]
   17600:	add	x0, x0, #0x1
   17604:	ldr	x1, [sp, #256]
   17608:	cmp	x1, x0
   1760c:	b.eq	17630 <canonicalize_filename_mode@@Base+0x820>  // b.none
   17610:	ldr	x1, [sp, #288]
   17614:	ldr	x0, [sp, #296]
   17618:	sub	x0, x1, x0
   1761c:	add	x0, x0, #0x1
   17620:	mov	x1, x0
   17624:	ldr	x0, [sp, #296]
   17628:	bl	abf0 <xrealloc@plt>
   1762c:	str	x0, [sp, #296]
   17630:	ldr	x0, [sp, #280]
   17634:	bl	b130 <free@plt>
   17638:	ldr	x0, [sp, #160]
   1763c:	cmp	x0, #0x0
   17640:	b.eq	1764c <canonicalize_filename_mode@@Base+0x83c>  // b.none
   17644:	ldr	x0, [sp, #160]
   17648:	bl	aac0 <hash_free@plt>
   1764c:	ldr	x0, [sp, #296]
   17650:	b	17698 <canonicalize_filename_mode@@Base+0x888>
   17654:	nop
   17658:	b	17660 <canonicalize_filename_mode@@Base+0x850>
   1765c:	nop
   17660:	ldr	x0, [sp, #280]
   17664:	bl	b130 <free@plt>
   17668:	ldr	x0, [sp, #296]
   1766c:	bl	b130 <free@plt>
   17670:	ldr	x0, [sp, #160]
   17674:	cmp	x0, #0x0
   17678:	b.eq	17684 <canonicalize_filename_mode@@Base+0x874>  // b.none
   1767c:	ldr	x0, [sp, #160]
   17680:	bl	aac0 <hash_free@plt>
   17684:	bl	b640 <__errno_location@plt>
   17688:	mov	x1, x0
   1768c:	ldr	w0, [sp, #244]
   17690:	str	w0, [x1]
   17694:	mov	x0, #0x0                   	// #0
   17698:	ldp	x29, x30, [sp], #304
   1769c:	ret

00000000000176a0 <set_cloexec_flag@@Base>:
   176a0:	stp	x29, x30, [sp, #-48]!
   176a4:	mov	x29, sp
   176a8:	str	w0, [sp, #28]
   176ac:	strb	w1, [sp, #27]
   176b0:	mov	w2, #0x0                   	// #0
   176b4:	mov	w1, #0x1                   	// #1
   176b8:	ldr	w0, [sp, #28]
   176bc:	bl	b300 <rpl_fcntl@plt>
   176c0:	str	w0, [sp, #44]
   176c4:	ldr	w0, [sp, #44]
   176c8:	cmp	w0, #0x0
   176cc:	b.lt	17724 <set_cloexec_flag@@Base+0x84>  // b.tstop
   176d0:	ldrb	w0, [sp, #27]
   176d4:	cmp	w0, #0x0
   176d8:	b.eq	176e8 <set_cloexec_flag@@Base+0x48>  // b.none
   176dc:	ldr	w0, [sp, #44]
   176e0:	orr	w0, w0, #0x1
   176e4:	b	176f0 <set_cloexec_flag@@Base+0x50>
   176e8:	ldr	w0, [sp, #44]
   176ec:	and	w0, w0, #0xfffffffe
   176f0:	str	w0, [sp, #40]
   176f4:	ldr	w1, [sp, #44]
   176f8:	ldr	w0, [sp, #40]
   176fc:	cmp	w1, w0
   17700:	b.eq	1771c <set_cloexec_flag@@Base+0x7c>  // b.none
   17704:	ldr	w2, [sp, #40]
   17708:	mov	w1, #0x2                   	// #2
   1770c:	ldr	w0, [sp, #28]
   17710:	bl	b300 <rpl_fcntl@plt>
   17714:	cmn	w0, #0x1
   17718:	b.eq	17724 <set_cloexec_flag@@Base+0x84>  // b.none
   1771c:	mov	w0, #0x0                   	// #0
   17720:	b	17728 <set_cloexec_flag@@Base+0x88>
   17724:	mov	w0, #0xffffffff            	// #-1
   17728:	ldp	x29, x30, [sp], #48
   1772c:	ret

0000000000017730 <dup_cloexec@@Base>:
   17730:	stp	x29, x30, [sp, #-32]!
   17734:	mov	x29, sp
   17738:	str	w0, [sp, #28]
   1773c:	mov	w2, #0x0                   	// #0
   17740:	mov	w1, #0x406                 	// #1030
   17744:	ldr	w0, [sp, #28]
   17748:	bl	b300 <rpl_fcntl@plt>
   1774c:	ldp	x29, x30, [sp], #32
   17750:	ret

0000000000017754 <dir_name@@Base>:
   17754:	stp	x29, x30, [sp, #-48]!
   17758:	mov	x29, sp
   1775c:	str	x0, [sp, #24]
   17760:	ldr	x0, [sp, #24]
   17764:	bl	aa80 <mdir_name@plt>
   17768:	str	x0, [sp, #40]
   1776c:	ldr	x0, [sp, #40]
   17770:	cmp	x0, #0x0
   17774:	b.ne	1777c <dir_name@@Base+0x28>  // b.any
   17778:	bl	aee0 <xalloc_die@plt>
   1777c:	ldr	x0, [sp, #40]
   17780:	ldp	x29, x30, [sp], #48
   17784:	ret

0000000000017788 <base_name@@Base>:
   17788:	stp	x29, x30, [sp, #-48]!
   1778c:	mov	x29, sp
   17790:	str	x0, [sp, #24]
   17794:	ldr	x0, [sp, #24]
   17798:	bl	ad90 <last_component@plt>
   1779c:	str	x0, [sp, #32]
   177a0:	ldr	x0, [sp, #32]
   177a4:	ldrb	w0, [x0]
   177a8:	cmp	w0, #0x0
   177ac:	b.ne	177c8 <base_name@@Base+0x40>  // b.any
   177b0:	ldr	x0, [sp, #24]
   177b4:	bl	a770 <base_len@plt>
   177b8:	mov	x1, x0
   177bc:	ldr	x0, [sp, #24]
   177c0:	bl	b410 <xstrndup@plt>
   177c4:	b	17804 <base_name@@Base+0x7c>
   177c8:	ldr	x0, [sp, #32]
   177cc:	bl	a770 <base_len@plt>
   177d0:	str	x0, [sp, #40]
   177d4:	ldr	x1, [sp, #32]
   177d8:	ldr	x0, [sp, #40]
   177dc:	add	x0, x1, x0
   177e0:	ldrb	w0, [x0]
   177e4:	cmp	w0, #0x2f
   177e8:	b.ne	177f8 <base_name@@Base+0x70>  // b.any
   177ec:	ldr	x0, [sp, #40]
   177f0:	add	x0, x0, #0x1
   177f4:	str	x0, [sp, #40]
   177f8:	ldr	x1, [sp, #40]
   177fc:	ldr	x0, [sp, #32]
   17800:	bl	b410 <xstrndup@plt>
   17804:	ldp	x29, x30, [sp], #48
   17808:	ret

000000000001780c <dir_len@@Base>:
   1780c:	stp	x29, x30, [sp, #-48]!
   17810:	mov	x29, sp
   17814:	str	x0, [sp, #24]
   17818:	str	xzr, [sp, #32]
   1781c:	ldr	x0, [sp, #32]
   17820:	cmp	x0, #0x0
   17824:	b.ne	17848 <dir_len@@Base+0x3c>  // b.any
   17828:	ldr	x0, [sp, #24]
   1782c:	ldrb	w0, [x0]
   17830:	cmp	w0, #0x2f
   17834:	b.ne	17840 <dir_len@@Base+0x34>  // b.any
   17838:	mov	x0, #0x1                   	// #1
   1783c:	b	1784c <dir_len@@Base+0x40>
   17840:	mov	x0, #0x0                   	// #0
   17844:	b	1784c <dir_len@@Base+0x40>
   17848:	mov	x0, #0x0                   	// #0
   1784c:	ldr	x1, [sp, #32]
   17850:	add	x0, x1, x0
   17854:	str	x0, [sp, #32]
   17858:	ldr	x0, [sp, #24]
   1785c:	bl	ad90 <last_component@plt>
   17860:	mov	x1, x0
   17864:	ldr	x0, [sp, #24]
   17868:	sub	x0, x1, x0
   1786c:	str	x0, [sp, #40]
   17870:	b	1789c <dir_len@@Base+0x90>
   17874:	ldr	x0, [sp, #40]
   17878:	sub	x0, x0, #0x1
   1787c:	ldr	x1, [sp, #24]
   17880:	add	x0, x1, x0
   17884:	ldrb	w0, [x0]
   17888:	cmp	w0, #0x2f
   1788c:	b.ne	178b0 <dir_len@@Base+0xa4>  // b.any
   17890:	ldr	x0, [sp, #40]
   17894:	sub	x0, x0, #0x1
   17898:	str	x0, [sp, #40]
   1789c:	ldr	x1, [sp, #32]
   178a0:	ldr	x0, [sp, #40]
   178a4:	cmp	x1, x0
   178a8:	b.cc	17874 <dir_len@@Base+0x68>  // b.lo, b.ul, b.last
   178ac:	b	178b4 <dir_len@@Base+0xa8>
   178b0:	nop
   178b4:	ldr	x0, [sp, #40]
   178b8:	ldp	x29, x30, [sp], #48
   178bc:	ret

00000000000178c0 <mdir_name@@Base>:
   178c0:	stp	x29, x30, [sp, #-64]!
   178c4:	mov	x29, sp
   178c8:	str	x0, [sp, #24]
   178cc:	ldr	x0, [sp, #24]
   178d0:	bl	b0f0 <dir_len@plt>
   178d4:	str	x0, [sp, #56]
   178d8:	ldr	x0, [sp, #56]
   178dc:	cmp	x0, #0x0
   178e0:	cset	w0, eq  // eq = none
   178e4:	strb	w0, [sp, #55]
   178e8:	ldrb	w1, [sp, #55]
   178ec:	ldr	x0, [sp, #56]
   178f0:	add	x0, x1, x0
   178f4:	add	x0, x0, #0x1
   178f8:	bl	ab40 <malloc@plt>
   178fc:	str	x0, [sp, #40]
   17900:	ldr	x0, [sp, #40]
   17904:	cmp	x0, #0x0
   17908:	b.ne	17914 <mdir_name@@Base+0x54>  // b.any
   1790c:	mov	x0, #0x0                   	// #0
   17910:	b	17960 <mdir_name@@Base+0xa0>
   17914:	ldr	x2, [sp, #56]
   17918:	ldr	x1, [sp, #24]
   1791c:	ldr	x0, [sp, #40]
   17920:	bl	a790 <memcpy@plt>
   17924:	ldrb	w0, [sp, #55]
   17928:	cmp	w0, #0x0
   1792c:	b.eq	1794c <mdir_name@@Base+0x8c>  // b.none
   17930:	ldr	x0, [sp, #56]
   17934:	add	x1, x0, #0x1
   17938:	str	x1, [sp, #56]
   1793c:	ldr	x1, [sp, #40]
   17940:	add	x0, x1, x0
   17944:	mov	w1, #0x2e                  	// #46
   17948:	strb	w1, [x0]
   1794c:	ldr	x1, [sp, #40]
   17950:	ldr	x0, [sp, #56]
   17954:	add	x0, x1, x0
   17958:	strb	wzr, [x0]
   1795c:	ldr	x0, [sp, #40]
   17960:	ldp	x29, x30, [sp], #64
   17964:	ret

0000000000017968 <last_component@@Base>:
   17968:	sub	sp, sp, #0x30
   1796c:	str	x0, [sp, #8]
   17970:	ldr	x0, [sp, #8]
   17974:	str	x0, [sp, #40]
   17978:	strb	wzr, [sp, #31]
   1797c:	b	1798c <last_component@@Base+0x24>
   17980:	ldr	x0, [sp, #40]
   17984:	add	x0, x0, #0x1
   17988:	str	x0, [sp, #40]
   1798c:	ldr	x0, [sp, #40]
   17990:	ldrb	w0, [x0]
   17994:	cmp	w0, #0x2f
   17998:	b.eq	17980 <last_component@@Base+0x18>  // b.none
   1799c:	ldr	x0, [sp, #40]
   179a0:	str	x0, [sp, #32]
   179a4:	b	179e8 <last_component@@Base+0x80>
   179a8:	ldr	x0, [sp, #32]
   179ac:	ldrb	w0, [x0]
   179b0:	cmp	w0, #0x2f
   179b4:	b.ne	179c4 <last_component@@Base+0x5c>  // b.any
   179b8:	mov	w0, #0x1                   	// #1
   179bc:	strb	w0, [sp, #31]
   179c0:	b	179dc <last_component@@Base+0x74>
   179c4:	ldrb	w0, [sp, #31]
   179c8:	cmp	w0, #0x0
   179cc:	b.eq	179dc <last_component@@Base+0x74>  // b.none
   179d0:	ldr	x0, [sp, #32]
   179d4:	str	x0, [sp, #40]
   179d8:	strb	wzr, [sp, #31]
   179dc:	ldr	x0, [sp, #32]
   179e0:	add	x0, x0, #0x1
   179e4:	str	x0, [sp, #32]
   179e8:	ldr	x0, [sp, #32]
   179ec:	ldrb	w0, [x0]
   179f0:	cmp	w0, #0x0
   179f4:	b.ne	179a8 <last_component@@Base+0x40>  // b.any
   179f8:	ldr	x0, [sp, #40]
   179fc:	add	sp, sp, #0x30
   17a00:	ret

0000000000017a04 <base_len@@Base>:
   17a04:	stp	x29, x30, [sp, #-48]!
   17a08:	mov	x29, sp
   17a0c:	str	x0, [sp, #24]
   17a10:	str	xzr, [sp, #32]
   17a14:	ldr	x0, [sp, #24]
   17a18:	bl	a820 <strlen@plt>
   17a1c:	str	x0, [sp, #40]
   17a20:	b	17a30 <base_len@@Base+0x2c>
   17a24:	ldr	x0, [sp, #40]
   17a28:	sub	x0, x0, #0x1
   17a2c:	str	x0, [sp, #40]
   17a30:	ldr	x0, [sp, #40]
   17a34:	cmp	x0, #0x1
   17a38:	b.ls	17a58 <base_len@@Base+0x54>  // b.plast
   17a3c:	ldr	x0, [sp, #40]
   17a40:	sub	x0, x0, #0x1
   17a44:	ldr	x1, [sp, #24]
   17a48:	add	x0, x1, x0
   17a4c:	ldrb	w0, [x0]
   17a50:	cmp	w0, #0x2f
   17a54:	b.eq	17a24 <base_len@@Base+0x20>  // b.none
   17a58:	ldr	x0, [sp, #40]
   17a5c:	ldp	x29, x30, [sp], #48
   17a60:	ret

0000000000017a64 <strip_trailing_slashes@@Base>:
   17a64:	stp	x29, x30, [sp, #-64]!
   17a68:	mov	x29, sp
   17a6c:	str	x0, [sp, #24]
   17a70:	ldr	x0, [sp, #24]
   17a74:	bl	ad90 <last_component@plt>
   17a78:	str	x0, [sp, #56]
   17a7c:	ldr	x0, [sp, #56]
   17a80:	ldrb	w0, [x0]
   17a84:	cmp	w0, #0x0
   17a88:	b.ne	17a94 <strip_trailing_slashes@@Base+0x30>  // b.any
   17a8c:	ldr	x0, [sp, #24]
   17a90:	str	x0, [sp, #56]
   17a94:	ldr	x0, [sp, #56]
   17a98:	bl	a770 <base_len@plt>
   17a9c:	mov	x1, x0
   17aa0:	ldr	x0, [sp, #56]
   17aa4:	add	x0, x0, x1
   17aa8:	str	x0, [sp, #48]
   17aac:	ldr	x0, [sp, #48]
   17ab0:	ldrb	w0, [x0]
   17ab4:	cmp	w0, #0x0
   17ab8:	cset	w0, ne  // ne = any
   17abc:	strb	w0, [sp, #47]
   17ac0:	ldr	x0, [sp, #48]
   17ac4:	strb	wzr, [x0]
   17ac8:	ldrb	w0, [sp, #47]
   17acc:	ldp	x29, x30, [sp], #64
   17ad0:	ret

0000000000017ad4 <fd_safer_flag@@Base>:
   17ad4:	stp	x29, x30, [sp, #-48]!
   17ad8:	mov	x29, sp
   17adc:	str	w0, [sp, #28]
   17ae0:	str	w1, [sp, #24]
   17ae4:	ldr	w0, [sp, #28]
   17ae8:	cmp	w0, #0x0
   17aec:	b.lt	17b38 <fd_safer_flag@@Base+0x64>  // b.tstop
   17af0:	ldr	w0, [sp, #28]
   17af4:	cmp	w0, #0x2
   17af8:	b.gt	17b38 <fd_safer_flag@@Base+0x64>
   17afc:	ldr	w1, [sp, #24]
   17b00:	ldr	w0, [sp, #28]
   17b04:	bl	b3a0 <dup_safer_flag@plt>
   17b08:	str	w0, [sp, #44]
   17b0c:	bl	b640 <__errno_location@plt>
   17b10:	ldr	w0, [x0]
   17b14:	str	w0, [sp, #40]
   17b18:	ldr	w0, [sp, #28]
   17b1c:	bl	ae80 <close@plt>
   17b20:	bl	b640 <__errno_location@plt>
   17b24:	mov	x1, x0
   17b28:	ldr	w0, [sp, #40]
   17b2c:	str	w0, [x1]
   17b30:	ldr	w0, [sp, #44]
   17b34:	str	w0, [sp, #28]
   17b38:	ldr	w0, [sp, #28]
   17b3c:	ldp	x29, x30, [sp], #48
   17b40:	ret

0000000000017b44 <dup_safer_flag@@Base>:
   17b44:	stp	x29, x30, [sp, #-32]!
   17b48:	mov	x29, sp
   17b4c:	str	w0, [sp, #28]
   17b50:	str	w1, [sp, #24]
   17b54:	ldr	w0, [sp, #24]
   17b58:	and	w0, w0, #0x80000
   17b5c:	cmp	w0, #0x0
   17b60:	b.eq	17b6c <dup_safer_flag@@Base+0x28>  // b.none
   17b64:	mov	w0, #0x406                 	// #1030
   17b68:	b	17b70 <dup_safer_flag@@Base+0x2c>
   17b6c:	mov	w0, #0x0                   	// #0
   17b70:	mov	w2, #0x3                   	// #3
   17b74:	mov	w1, w0
   17b78:	ldr	w0, [sp, #28]
   17b7c:	bl	b300 <rpl_fcntl@plt>
   17b80:	ldp	x29, x30, [sp], #32
   17b84:	ret

0000000000017b88 <record_file@@Base>:
   17b88:	stp	x29, x30, [sp, #-64]!
   17b8c:	mov	x29, sp
   17b90:	str	x0, [sp, #40]
   17b94:	str	x1, [sp, #32]
   17b98:	str	x2, [sp, #24]
   17b9c:	ldr	x0, [sp, #40]
   17ba0:	cmp	x0, #0x0
   17ba4:	b.eq	17c24 <record_file@@Base+0x9c>  // b.none
   17ba8:	mov	x0, #0x18                  	// #24
   17bac:	bl	ace0 <xmalloc@plt>
   17bb0:	str	x0, [sp, #56]
   17bb4:	ldr	x0, [sp, #32]
   17bb8:	bl	ad10 <xstrdup@plt>
   17bbc:	mov	x1, x0
   17bc0:	ldr	x0, [sp, #56]
   17bc4:	str	x1, [x0]
   17bc8:	ldr	x0, [sp, #24]
   17bcc:	ldr	x1, [x0, #8]
   17bd0:	ldr	x0, [sp, #56]
   17bd4:	str	x1, [x0, #8]
   17bd8:	ldr	x0, [sp, #24]
   17bdc:	ldr	x1, [x0]
   17be0:	ldr	x0, [sp, #56]
   17be4:	str	x1, [x0, #16]
   17be8:	ldr	x1, [sp, #56]
   17bec:	ldr	x0, [sp, #40]
   17bf0:	bl	a940 <hash_insert@plt>
   17bf4:	str	x0, [sp, #48]
   17bf8:	ldr	x0, [sp, #48]
   17bfc:	cmp	x0, #0x0
   17c00:	b.ne	17c08 <record_file@@Base+0x80>  // b.any
   17c04:	bl	aee0 <xalloc_die@plt>
   17c08:	ldr	x1, [sp, #48]
   17c0c:	ldr	x0, [sp, #56]
   17c10:	cmp	x1, x0
   17c14:	b.eq	17c28 <record_file@@Base+0xa0>  // b.none
   17c18:	ldr	x0, [sp, #56]
   17c1c:	bl	aa90 <triple_free@plt>
   17c20:	b	17c28 <record_file@@Base+0xa0>
   17c24:	nop
   17c28:	ldp	x29, x30, [sp], #64
   17c2c:	ret

0000000000017c30 <seen_file@@Base>:
   17c30:	stp	x29, x30, [sp, #-80]!
   17c34:	mov	x29, sp
   17c38:	str	x0, [sp, #40]
   17c3c:	str	x1, [sp, #32]
   17c40:	str	x2, [sp, #24]
   17c44:	ldr	x0, [sp, #40]
   17c48:	cmp	x0, #0x0
   17c4c:	b.ne	17c58 <seen_file@@Base+0x28>  // b.any
   17c50:	mov	w0, #0x0                   	// #0
   17c54:	b	17c94 <seen_file@@Base+0x64>
   17c58:	ldr	x0, [sp, #32]
   17c5c:	str	x0, [sp, #56]
   17c60:	ldr	x0, [sp, #24]
   17c64:	ldr	x0, [x0, #8]
   17c68:	str	x0, [sp, #64]
   17c6c:	ldr	x0, [sp, #24]
   17c70:	ldr	x0, [x0]
   17c74:	str	x0, [sp, #72]
   17c78:	add	x0, sp, #0x38
   17c7c:	mov	x1, x0
   17c80:	ldr	x0, [sp, #40]
   17c84:	bl	aeb0 <hash_lookup@plt>
   17c88:	cmp	x0, #0x0
   17c8c:	cset	w0, ne  // ne = any
   17c90:	and	w0, w0, #0xff
   17c94:	ldp	x29, x30, [sp], #80
   17c98:	ret

0000000000017c9c <mfile_name_concat@@Base>:
   17c9c:	stp	x29, x30, [sp, #-112]!
   17ca0:	mov	x29, sp
   17ca4:	str	x0, [sp, #40]
   17ca8:	str	x1, [sp, #32]
   17cac:	str	x2, [sp, #24]
   17cb0:	ldr	x0, [sp, #40]
   17cb4:	bl	ad90 <last_component@plt>
   17cb8:	str	x0, [sp, #96]
   17cbc:	ldr	x0, [sp, #96]
   17cc0:	bl	a770 <base_len@plt>
   17cc4:	str	x0, [sp, #88]
   17cc8:	ldr	x1, [sp, #96]
   17ccc:	ldr	x0, [sp, #40]
   17cd0:	sub	x0, x1, x0
   17cd4:	mov	x1, x0
   17cd8:	ldr	x0, [sp, #88]
   17cdc:	add	x0, x0, x1
   17ce0:	str	x0, [sp, #80]
   17ce4:	ldr	x0, [sp, #32]
   17ce8:	bl	a820 <strlen@plt>
   17cec:	str	x0, [sp, #72]
   17cf0:	strb	wzr, [sp, #111]
   17cf4:	ldr	x0, [sp, #88]
   17cf8:	cmp	x0, #0x0
   17cfc:	b.eq	17d38 <mfile_name_concat@@Base+0x9c>  // b.none
   17d00:	ldr	x0, [sp, #80]
   17d04:	sub	x0, x0, #0x1
   17d08:	ldr	x1, [sp, #40]
   17d0c:	add	x0, x1, x0
   17d10:	ldrb	w0, [x0]
   17d14:	cmp	w0, #0x2f
   17d18:	b.eq	17d50 <mfile_name_concat@@Base+0xb4>  // b.none
   17d1c:	ldr	x0, [sp, #32]
   17d20:	ldrb	w0, [x0]
   17d24:	cmp	w0, #0x2f
   17d28:	b.eq	17d50 <mfile_name_concat@@Base+0xb4>  // b.none
   17d2c:	mov	w0, #0x2f                  	// #47
   17d30:	strb	w0, [sp, #111]
   17d34:	b	17d50 <mfile_name_concat@@Base+0xb4>
   17d38:	ldr	x0, [sp, #32]
   17d3c:	ldrb	w0, [x0]
   17d40:	cmp	w0, #0x2f
   17d44:	b.ne	17d50 <mfile_name_concat@@Base+0xb4>  // b.any
   17d48:	mov	w0, #0x2e                  	// #46
   17d4c:	strb	w0, [sp, #111]
   17d50:	ldrb	w0, [sp, #111]
   17d54:	cmp	w0, #0x0
   17d58:	cset	w0, ne  // ne = any
   17d5c:	and	w0, w0, #0xff
   17d60:	and	x1, x0, #0xff
   17d64:	ldr	x0, [sp, #80]
   17d68:	add	x1, x1, x0
   17d6c:	ldr	x0, [sp, #72]
   17d70:	add	x0, x1, x0
   17d74:	add	x0, x0, #0x1
   17d78:	bl	ab40 <malloc@plt>
   17d7c:	str	x0, [sp, #64]
   17d80:	ldr	x0, [sp, #64]
   17d84:	cmp	x0, #0x0
   17d88:	b.ne	17d94 <mfile_name_concat@@Base+0xf8>  // b.any
   17d8c:	mov	x0, #0x0                   	// #0
   17d90:	b	17e0c <mfile_name_concat@@Base+0x170>
   17d94:	ldr	x2, [sp, #80]
   17d98:	ldr	x1, [sp, #40]
   17d9c:	ldr	x0, [sp, #64]
   17da0:	bl	b190 <mempcpy@plt>
   17da4:	str	x0, [sp, #56]
   17da8:	ldr	x0, [sp, #56]
   17dac:	ldrb	w1, [sp, #111]
   17db0:	strb	w1, [x0]
   17db4:	ldrb	w0, [sp, #111]
   17db8:	cmp	w0, #0x0
   17dbc:	cset	w0, ne  // ne = any
   17dc0:	and	w0, w0, #0xff
   17dc4:	and	x0, x0, #0xff
   17dc8:	ldr	x1, [sp, #56]
   17dcc:	add	x0, x1, x0
   17dd0:	str	x0, [sp, #56]
   17dd4:	ldr	x0, [sp, #24]
   17dd8:	cmp	x0, #0x0
   17ddc:	b.eq	17dec <mfile_name_concat@@Base+0x150>  // b.none
   17de0:	ldr	x0, [sp, #24]
   17de4:	ldr	x1, [sp, #56]
   17de8:	str	x1, [x0]
   17dec:	ldr	x2, [sp, #72]
   17df0:	ldr	x1, [sp, #32]
   17df4:	ldr	x0, [sp, #56]
   17df8:	bl	b190 <mempcpy@plt>
   17dfc:	str	x0, [sp, #56]
   17e00:	ldr	x0, [sp, #56]
   17e04:	strb	wzr, [x0]
   17e08:	ldr	x0, [sp, #64]
   17e0c:	ldp	x29, x30, [sp], #112
   17e10:	ret

0000000000017e14 <getprogname@@Base>:
   17e14:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   17e18:	ldr	x0, [x0, #4008]
   17e1c:	ldr	x0, [x0]
   17e20:	ret

0000000000017e24 <gettime@@Base>:
   17e24:	stp	x29, x30, [sp, #-32]!
   17e28:	mov	x29, sp
   17e2c:	str	x0, [sp, #24]
   17e30:	ldr	x1, [sp, #24]
   17e34:	mov	w0, #0x0                   	// #0
   17e38:	bl	aa00 <clock_gettime@plt>
   17e3c:	nop
   17e40:	ldp	x29, x30, [sp], #32
   17e44:	ret

0000000000017e48 <current_timespec@@Base>:
   17e48:	stp	x29, x30, [sp, #-32]!
   17e4c:	mov	x29, sp
   17e50:	add	x0, sp, #0x10
   17e54:	bl	b730 <gettime@plt>
   17e58:	ldp	x0, x1, [sp, #16]
   17e5c:	ldp	x29, x30, [sp], #32
   17e60:	ret

0000000000017e64 <hard_locale@@Base>:
   17e64:	stp	x29, x30, [sp, #-48]!
   17e68:	mov	x29, sp
   17e6c:	str	w0, [sp, #28]
   17e70:	mov	w0, #0x1                   	// #1
   17e74:	strb	w0, [sp, #47]
   17e78:	mov	x1, #0x0                   	// #0
   17e7c:	ldr	w0, [sp, #28]
   17e80:	bl	b790 <setlocale@plt>
   17e84:	str	x0, [sp, #32]
   17e88:	ldr	x0, [sp, #32]
   17e8c:	cmp	x0, #0x0
   17e90:	b.eq	17ec8 <hard_locale@@Base+0x64>  // b.none
   17e94:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   17e98:	add	x1, x0, #0x668
   17e9c:	ldr	x0, [sp, #32]
   17ea0:	bl	b070 <strcmp@plt>
   17ea4:	cmp	w0, #0x0
   17ea8:	b.eq	17ec4 <hard_locale@@Base+0x60>  // b.none
   17eac:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   17eb0:	add	x1, x0, #0x670
   17eb4:	ldr	x0, [sp, #32]
   17eb8:	bl	b070 <strcmp@plt>
   17ebc:	cmp	w0, #0x0
   17ec0:	b.ne	17ec8 <hard_locale@@Base+0x64>  // b.any
   17ec4:	strb	wzr, [sp, #47]
   17ec8:	ldrb	w0, [sp, #47]
   17ecc:	ldp	x29, x30, [sp], #48
   17ed0:	ret

0000000000017ed4 <hash_get_n_buckets@@Base>:
   17ed4:	sub	sp, sp, #0x10
   17ed8:	str	x0, [sp, #8]
   17edc:	ldr	x0, [sp, #8]
   17ee0:	ldr	x0, [x0, #16]
   17ee4:	add	sp, sp, #0x10
   17ee8:	ret

0000000000017eec <hash_get_n_buckets_used@@Base>:
   17eec:	sub	sp, sp, #0x10
   17ef0:	str	x0, [sp, #8]
   17ef4:	ldr	x0, [sp, #8]
   17ef8:	ldr	x0, [x0, #24]
   17efc:	add	sp, sp, #0x10
   17f00:	ret

0000000000017f04 <hash_get_n_entries@@Base>:
   17f04:	sub	sp, sp, #0x10
   17f08:	str	x0, [sp, #8]
   17f0c:	ldr	x0, [sp, #8]
   17f10:	ldr	x0, [x0, #32]
   17f14:	add	sp, sp, #0x10
   17f18:	ret

0000000000017f1c <hash_get_max_bucket_length@@Base>:
   17f1c:	sub	sp, sp, #0x30
   17f20:	str	x0, [sp, #8]
   17f24:	str	xzr, [sp, #32]
   17f28:	ldr	x0, [sp, #8]
   17f2c:	ldr	x0, [x0]
   17f30:	str	x0, [sp, #40]
   17f34:	b	17fa4 <hash_get_max_bucket_length@@Base+0x88>
   17f38:	ldr	x0, [sp, #40]
   17f3c:	ldr	x0, [x0]
   17f40:	cmp	x0, #0x0
   17f44:	b.eq	17f98 <hash_get_max_bucket_length@@Base+0x7c>  // b.none
   17f48:	ldr	x0, [sp, #40]
   17f4c:	str	x0, [sp, #24]
   17f50:	mov	x0, #0x1                   	// #1
   17f54:	str	x0, [sp, #16]
   17f58:	b	17f68 <hash_get_max_bucket_length@@Base+0x4c>
   17f5c:	ldr	x0, [sp, #16]
   17f60:	add	x0, x0, #0x1
   17f64:	str	x0, [sp, #16]
   17f68:	ldr	x0, [sp, #24]
   17f6c:	ldr	x0, [x0, #8]
   17f70:	str	x0, [sp, #24]
   17f74:	ldr	x0, [sp, #24]
   17f78:	cmp	x0, #0x0
   17f7c:	b.ne	17f5c <hash_get_max_bucket_length@@Base+0x40>  // b.any
   17f80:	ldr	x1, [sp, #16]
   17f84:	ldr	x0, [sp, #32]
   17f88:	cmp	x1, x0
   17f8c:	b.ls	17f98 <hash_get_max_bucket_length@@Base+0x7c>  // b.plast
   17f90:	ldr	x0, [sp, #16]
   17f94:	str	x0, [sp, #32]
   17f98:	ldr	x0, [sp, #40]
   17f9c:	add	x0, x0, #0x10
   17fa0:	str	x0, [sp, #40]
   17fa4:	ldr	x0, [sp, #8]
   17fa8:	ldr	x0, [x0, #8]
   17fac:	ldr	x1, [sp, #40]
   17fb0:	cmp	x1, x0
   17fb4:	b.cc	17f38 <hash_get_max_bucket_length@@Base+0x1c>  // b.lo, b.ul, b.last
   17fb8:	ldr	x0, [sp, #32]
   17fbc:	add	sp, sp, #0x30
   17fc0:	ret

0000000000017fc4 <hash_table_ok@@Base>:
   17fc4:	sub	sp, sp, #0x30
   17fc8:	str	x0, [sp, #8]
   17fcc:	str	xzr, [sp, #32]
   17fd0:	str	xzr, [sp, #24]
   17fd4:	ldr	x0, [sp, #8]
   17fd8:	ldr	x0, [x0]
   17fdc:	str	x0, [sp, #40]
   17fe0:	b	18048 <hash_table_ok@@Base+0x84>
   17fe4:	ldr	x0, [sp, #40]
   17fe8:	ldr	x0, [x0]
   17fec:	cmp	x0, #0x0
   17ff0:	b.eq	1803c <hash_table_ok@@Base+0x78>  // b.none
   17ff4:	ldr	x0, [sp, #40]
   17ff8:	str	x0, [sp, #16]
   17ffc:	ldr	x0, [sp, #32]
   18000:	add	x0, x0, #0x1
   18004:	str	x0, [sp, #32]
   18008:	ldr	x0, [sp, #24]
   1800c:	add	x0, x0, #0x1
   18010:	str	x0, [sp, #24]
   18014:	b	18024 <hash_table_ok@@Base+0x60>
   18018:	ldr	x0, [sp, #24]
   1801c:	add	x0, x0, #0x1
   18020:	str	x0, [sp, #24]
   18024:	ldr	x0, [sp, #16]
   18028:	ldr	x0, [x0, #8]
   1802c:	str	x0, [sp, #16]
   18030:	ldr	x0, [sp, #16]
   18034:	cmp	x0, #0x0
   18038:	b.ne	18018 <hash_table_ok@@Base+0x54>  // b.any
   1803c:	ldr	x0, [sp, #40]
   18040:	add	x0, x0, #0x10
   18044:	str	x0, [sp, #40]
   18048:	ldr	x0, [sp, #8]
   1804c:	ldr	x0, [x0, #8]
   18050:	ldr	x1, [sp, #40]
   18054:	cmp	x1, x0
   18058:	b.cc	17fe4 <hash_table_ok@@Base+0x20>  // b.lo, b.ul, b.last
   1805c:	ldr	x0, [sp, #8]
   18060:	ldr	x0, [x0, #24]
   18064:	ldr	x1, [sp, #32]
   18068:	cmp	x1, x0
   1806c:	b.ne	1808c <hash_table_ok@@Base+0xc8>  // b.any
   18070:	ldr	x0, [sp, #8]
   18074:	ldr	x0, [x0, #32]
   18078:	ldr	x1, [sp, #24]
   1807c:	cmp	x1, x0
   18080:	b.ne	1808c <hash_table_ok@@Base+0xc8>  // b.any
   18084:	mov	w0, #0x1                   	// #1
   18088:	b	18090 <hash_table_ok@@Base+0xcc>
   1808c:	mov	w0, #0x0                   	// #0
   18090:	add	sp, sp, #0x30
   18094:	ret

0000000000018098 <hash_print_statistics@@Base>:
   18098:	stp	x29, x30, [sp, #-64]!
   1809c:	mov	x29, sp
   180a0:	str	x0, [sp, #24]
   180a4:	str	x1, [sp, #16]
   180a8:	ldr	x0, [sp, #24]
   180ac:	bl	b760 <hash_get_n_entries@plt>
   180b0:	str	x0, [sp, #56]
   180b4:	ldr	x0, [sp, #24]
   180b8:	bl	b1e0 <hash_get_n_buckets@plt>
   180bc:	str	x0, [sp, #48]
   180c0:	ldr	x0, [sp, #24]
   180c4:	bl	add0 <hash_get_n_buckets_used@plt>
   180c8:	str	x0, [sp, #40]
   180cc:	ldr	x0, [sp, #24]
   180d0:	bl	b0c0 <hash_get_max_bucket_length@plt>
   180d4:	str	x0, [sp, #32]
   180d8:	ldr	x2, [sp, #56]
   180dc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   180e0:	add	x1, x0, #0x690
   180e4:	ldr	x0, [sp, #16]
   180e8:	bl	b750 <fprintf@plt>
   180ec:	ldr	x2, [sp, #48]
   180f0:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   180f4:	add	x1, x0, #0x6a8
   180f8:	ldr	x0, [sp, #16]
   180fc:	bl	b750 <fprintf@plt>
   18100:	ldr	d0, [sp, #40]
   18104:	ucvtf	d0, d0
   18108:	mov	x0, #0x4059000000000000    	// #4636737291354636288
   1810c:	fmov	d1, x0
   18110:	fmul	d1, d0, d1
   18114:	ldr	d0, [sp, #48]
   18118:	ucvtf	d0, d0
   1811c:	fdiv	d0, d1, d0
   18120:	ldr	x2, [sp, #40]
   18124:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   18128:	add	x1, x0, #0x6c0
   1812c:	ldr	x0, [sp, #16]
   18130:	bl	b750 <fprintf@plt>
   18134:	ldr	x2, [sp, #32]
   18138:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1813c:	add	x1, x0, #0x6e8
   18140:	ldr	x0, [sp, #16]
   18144:	bl	b750 <fprintf@plt>
   18148:	nop
   1814c:	ldp	x29, x30, [sp], #64
   18150:	ret
   18154:	stp	x29, x30, [sp, #-48]!
   18158:	mov	x29, sp
   1815c:	str	x0, [sp, #24]
   18160:	str	x1, [sp, #16]
   18164:	ldr	x0, [sp, #24]
   18168:	ldr	x2, [x0, #48]
   1816c:	ldr	x0, [sp, #24]
   18170:	ldr	x0, [x0, #16]
   18174:	mov	x1, x0
   18178:	ldr	x0, [sp, #16]
   1817c:	blr	x2
   18180:	str	x0, [sp, #40]
   18184:	ldr	x0, [sp, #24]
   18188:	ldr	x0, [x0, #16]
   1818c:	ldr	x1, [sp, #40]
   18190:	cmp	x1, x0
   18194:	b.cc	1819c <hash_print_statistics@@Base+0x104>  // b.lo, b.ul, b.last
   18198:	bl	af70 <abort@plt>
   1819c:	ldr	x0, [sp, #24]
   181a0:	ldr	x1, [x0]
   181a4:	ldr	x0, [sp, #40]
   181a8:	lsl	x0, x0, #4
   181ac:	add	x0, x1, x0
   181b0:	ldp	x29, x30, [sp], #48
   181b4:	ret

00000000000181b8 <hash_lookup@@Base>:
   181b8:	stp	x29, x30, [sp, #-48]!
   181bc:	mov	x29, sp
   181c0:	str	x0, [sp, #24]
   181c4:	str	x1, [sp, #16]
   181c8:	ldr	x1, [sp, #16]
   181cc:	ldr	x0, [sp, #24]
   181d0:	bl	18154 <hash_print_statistics@@Base+0xbc>
   181d4:	str	x0, [sp, #32]
   181d8:	ldr	x0, [sp, #32]
   181dc:	ldr	x0, [x0]
   181e0:	cmp	x0, #0x0
   181e4:	b.ne	181f0 <hash_lookup@@Base+0x38>  // b.any
   181e8:	mov	x0, #0x0                   	// #0
   181ec:	b	18260 <hash_lookup@@Base+0xa8>
   181f0:	ldr	x0, [sp, #32]
   181f4:	str	x0, [sp, #40]
   181f8:	b	18250 <hash_lookup@@Base+0x98>
   181fc:	ldr	x0, [sp, #40]
   18200:	ldr	x0, [x0]
   18204:	ldr	x1, [sp, #16]
   18208:	cmp	x1, x0
   1820c:	b.eq	18238 <hash_lookup@@Base+0x80>  // b.none
   18210:	ldr	x0, [sp, #24]
   18214:	ldr	x2, [x0, #56]
   18218:	ldr	x0, [sp, #40]
   1821c:	ldr	x0, [x0]
   18220:	mov	x1, x0
   18224:	ldr	x0, [sp, #16]
   18228:	blr	x2
   1822c:	and	w0, w0, #0xff
   18230:	cmp	w0, #0x0
   18234:	b.eq	18244 <hash_lookup@@Base+0x8c>  // b.none
   18238:	ldr	x0, [sp, #40]
   1823c:	ldr	x0, [x0]
   18240:	b	18260 <hash_lookup@@Base+0xa8>
   18244:	ldr	x0, [sp, #40]
   18248:	ldr	x0, [x0, #8]
   1824c:	str	x0, [sp, #40]
   18250:	ldr	x0, [sp, #40]
   18254:	cmp	x0, #0x0
   18258:	b.ne	181fc <hash_lookup@@Base+0x44>  // b.any
   1825c:	mov	x0, #0x0                   	// #0
   18260:	ldp	x29, x30, [sp], #48
   18264:	ret

0000000000018268 <hash_get_first@@Base>:
   18268:	stp	x29, x30, [sp, #-48]!
   1826c:	mov	x29, sp
   18270:	str	x0, [sp, #24]
   18274:	ldr	x0, [sp, #24]
   18278:	ldr	x0, [x0, #32]
   1827c:	cmp	x0, #0x0
   18280:	b.ne	1828c <hash_get_first@@Base+0x24>  // b.any
   18284:	mov	x0, #0x0                   	// #0
   18288:	b	182dc <hash_get_first@@Base+0x74>
   1828c:	ldr	x0, [sp, #24]
   18290:	ldr	x0, [x0]
   18294:	str	x0, [sp, #40]
   18298:	ldr	x0, [sp, #24]
   1829c:	ldr	x0, [x0, #8]
   182a0:	ldr	x1, [sp, #40]
   182a4:	cmp	x1, x0
   182a8:	b.cc	182b0 <hash_get_first@@Base+0x48>  // b.lo, b.ul, b.last
   182ac:	bl	af70 <abort@plt>
   182b0:	ldr	x0, [sp, #40]
   182b4:	ldr	x0, [x0]
   182b8:	cmp	x0, #0x0
   182bc:	b.eq	182cc <hash_get_first@@Base+0x64>  // b.none
   182c0:	ldr	x0, [sp, #40]
   182c4:	ldr	x0, [x0]
   182c8:	b	182dc <hash_get_first@@Base+0x74>
   182cc:	ldr	x0, [sp, #40]
   182d0:	add	x0, x0, #0x10
   182d4:	str	x0, [sp, #40]
   182d8:	b	18298 <hash_get_first@@Base+0x30>
   182dc:	ldp	x29, x30, [sp], #48
   182e0:	ret

00000000000182e4 <hash_get_next@@Base>:
   182e4:	stp	x29, x30, [sp, #-48]!
   182e8:	mov	x29, sp
   182ec:	str	x0, [sp, #24]
   182f0:	str	x1, [sp, #16]
   182f4:	ldr	x1, [sp, #16]
   182f8:	ldr	x0, [sp, #24]
   182fc:	bl	18154 <hash_print_statistics@@Base+0xbc>
   18300:	str	x0, [sp, #40]
   18304:	ldr	x0, [sp, #40]
   18308:	str	x0, [sp, #32]
   1830c:	ldr	x0, [sp, #32]
   18310:	ldr	x0, [x0]
   18314:	ldr	x1, [sp, #16]
   18318:	cmp	x1, x0
   1831c:	b.ne	18340 <hash_get_next@@Base+0x5c>  // b.any
   18320:	ldr	x0, [sp, #32]
   18324:	ldr	x0, [x0, #8]
   18328:	cmp	x0, #0x0
   1832c:	b.eq	18340 <hash_get_next@@Base+0x5c>  // b.none
   18330:	ldr	x0, [sp, #32]
   18334:	ldr	x0, [x0, #8]
   18338:	ldr	x0, [x0]
   1833c:	b	1839c <hash_get_next@@Base+0xb8>
   18340:	ldr	x0, [sp, #32]
   18344:	ldr	x0, [x0, #8]
   18348:	str	x0, [sp, #32]
   1834c:	ldr	x0, [sp, #32]
   18350:	cmp	x0, #0x0
   18354:	b.ne	1830c <hash_get_next@@Base+0x28>  // b.any
   18358:	b	18378 <hash_get_next@@Base+0x94>
   1835c:	ldr	x0, [sp, #40]
   18360:	ldr	x0, [x0]
   18364:	cmp	x0, #0x0
   18368:	b.eq	18378 <hash_get_next@@Base+0x94>  // b.none
   1836c:	ldr	x0, [sp, #40]
   18370:	ldr	x0, [x0]
   18374:	b	1839c <hash_get_next@@Base+0xb8>
   18378:	ldr	x0, [sp, #40]
   1837c:	add	x0, x0, #0x10
   18380:	str	x0, [sp, #40]
   18384:	ldr	x0, [sp, #24]
   18388:	ldr	x0, [x0, #8]
   1838c:	ldr	x1, [sp, #40]
   18390:	cmp	x1, x0
   18394:	b.cc	1835c <hash_get_next@@Base+0x78>  // b.lo, b.ul, b.last
   18398:	mov	x0, #0x0                   	// #0
   1839c:	ldp	x29, x30, [sp], #48
   183a0:	ret

00000000000183a4 <hash_get_entries@@Base>:
   183a4:	sub	sp, sp, #0x40
   183a8:	str	x0, [sp, #24]
   183ac:	str	x1, [sp, #16]
   183b0:	str	x2, [sp, #8]
   183b4:	str	xzr, [sp, #56]
   183b8:	ldr	x0, [sp, #24]
   183bc:	ldr	x0, [x0]
   183c0:	str	x0, [sp, #48]
   183c4:	b	18444 <hash_get_entries@@Base+0xa0>
   183c8:	ldr	x0, [sp, #48]
   183cc:	ldr	x0, [x0]
   183d0:	cmp	x0, #0x0
   183d4:	b.eq	18438 <hash_get_entries@@Base+0x94>  // b.none
   183d8:	ldr	x0, [sp, #48]
   183dc:	str	x0, [sp, #40]
   183e0:	b	1842c <hash_get_entries@@Base+0x88>
   183e4:	ldr	x1, [sp, #56]
   183e8:	ldr	x0, [sp, #8]
   183ec:	cmp	x1, x0
   183f0:	b.cc	183fc <hash_get_entries@@Base+0x58>  // b.lo, b.ul, b.last
   183f4:	ldr	x0, [sp, #56]
   183f8:	b	1845c <hash_get_entries@@Base+0xb8>
   183fc:	ldr	x0, [sp, #56]
   18400:	add	x1, x0, #0x1
   18404:	str	x1, [sp, #56]
   18408:	lsl	x0, x0, #3
   1840c:	ldr	x1, [sp, #16]
   18410:	add	x0, x1, x0
   18414:	ldr	x1, [sp, #40]
   18418:	ldr	x1, [x1]
   1841c:	str	x1, [x0]
   18420:	ldr	x0, [sp, #40]
   18424:	ldr	x0, [x0, #8]
   18428:	str	x0, [sp, #40]
   1842c:	ldr	x0, [sp, #40]
   18430:	cmp	x0, #0x0
   18434:	b.ne	183e4 <hash_get_entries@@Base+0x40>  // b.any
   18438:	ldr	x0, [sp, #48]
   1843c:	add	x0, x0, #0x10
   18440:	str	x0, [sp, #48]
   18444:	ldr	x0, [sp, #24]
   18448:	ldr	x0, [x0, #8]
   1844c:	ldr	x1, [sp, #48]
   18450:	cmp	x1, x0
   18454:	b.cc	183c8 <hash_get_entries@@Base+0x24>  // b.lo, b.ul, b.last
   18458:	ldr	x0, [sp, #56]
   1845c:	add	sp, sp, #0x40
   18460:	ret

0000000000018464 <hash_do_for_each@@Base>:
   18464:	stp	x29, x30, [sp, #-80]!
   18468:	mov	x29, sp
   1846c:	str	x0, [sp, #40]
   18470:	str	x1, [sp, #32]
   18474:	str	x2, [sp, #24]
   18478:	str	xzr, [sp, #72]
   1847c:	ldr	x0, [sp, #40]
   18480:	ldr	x0, [x0]
   18484:	str	x0, [sp, #64]
   18488:	b	18508 <hash_do_for_each@@Base+0xa4>
   1848c:	ldr	x0, [sp, #64]
   18490:	ldr	x0, [x0]
   18494:	cmp	x0, #0x0
   18498:	b.eq	184fc <hash_do_for_each@@Base+0x98>  // b.none
   1849c:	ldr	x0, [sp, #64]
   184a0:	str	x0, [sp, #56]
   184a4:	b	184f0 <hash_do_for_each@@Base+0x8c>
   184a8:	ldr	x0, [sp, #56]
   184ac:	ldr	x0, [x0]
   184b0:	ldr	x2, [sp, #32]
   184b4:	ldr	x1, [sp, #24]
   184b8:	blr	x2
   184bc:	and	w0, w0, #0xff
   184c0:	eor	w0, w0, #0x1
   184c4:	and	w0, w0, #0xff
   184c8:	cmp	w0, #0x0
   184cc:	b.eq	184d8 <hash_do_for_each@@Base+0x74>  // b.none
   184d0:	ldr	x0, [sp, #72]
   184d4:	b	18520 <hash_do_for_each@@Base+0xbc>
   184d8:	ldr	x0, [sp, #72]
   184dc:	add	x0, x0, #0x1
   184e0:	str	x0, [sp, #72]
   184e4:	ldr	x0, [sp, #56]
   184e8:	ldr	x0, [x0, #8]
   184ec:	str	x0, [sp, #56]
   184f0:	ldr	x0, [sp, #56]
   184f4:	cmp	x0, #0x0
   184f8:	b.ne	184a8 <hash_do_for_each@@Base+0x44>  // b.any
   184fc:	ldr	x0, [sp, #64]
   18500:	add	x0, x0, #0x10
   18504:	str	x0, [sp, #64]
   18508:	ldr	x0, [sp, #40]
   1850c:	ldr	x0, [x0, #8]
   18510:	ldr	x1, [sp, #64]
   18514:	cmp	x1, x0
   18518:	b.cc	1848c <hash_do_for_each@@Base+0x28>  // b.lo, b.ul, b.last
   1851c:	ldr	x0, [sp, #72]
   18520:	ldp	x29, x30, [sp], #80
   18524:	ret

0000000000018528 <hash_string@@Base>:
   18528:	sub	sp, sp, #0x20
   1852c:	str	x0, [sp, #8]
   18530:	str	x1, [sp]
   18534:	str	xzr, [sp, #24]
   18538:	b	18578 <hash_string@@Base+0x50>
   1853c:	ldr	x1, [sp, #24]
   18540:	mov	x0, x1
   18544:	lsl	x0, x0, #5
   18548:	sub	x1, x0, x1
   1854c:	ldrb	w0, [sp, #23]
   18550:	add	x0, x1, x0
   18554:	ldr	x1, [sp]
   18558:	udiv	x2, x0, x1
   1855c:	ldr	x1, [sp]
   18560:	mul	x1, x2, x1
   18564:	sub	x0, x0, x1
   18568:	str	x0, [sp, #24]
   1856c:	ldr	x0, [sp, #8]
   18570:	add	x0, x0, #0x1
   18574:	str	x0, [sp, #8]
   18578:	ldr	x0, [sp, #8]
   1857c:	ldrb	w0, [x0]
   18580:	strb	w0, [sp, #23]
   18584:	ldrb	w0, [sp, #23]
   18588:	cmp	w0, #0x0
   1858c:	b.ne	1853c <hash_string@@Base+0x14>  // b.any
   18590:	ldr	x0, [sp, #24]
   18594:	add	sp, sp, #0x20
   18598:	ret
   1859c:	sub	sp, sp, #0x20
   185a0:	str	x0, [sp, #8]
   185a4:	mov	x0, #0x3                   	// #3
   185a8:	str	x0, [sp, #24]
   185ac:	ldr	x0, [sp, #24]
   185b0:	mul	x0, x0, x0
   185b4:	str	x0, [sp, #16]
   185b8:	b	185e8 <hash_string@@Base+0xc0>
   185bc:	ldr	x0, [sp, #24]
   185c0:	add	x0, x0, #0x1
   185c4:	str	x0, [sp, #24]
   185c8:	ldr	x0, [sp, #24]
   185cc:	lsl	x0, x0, #2
   185d0:	ldr	x1, [sp, #16]
   185d4:	add	x0, x1, x0
   185d8:	str	x0, [sp, #16]
   185dc:	ldr	x0, [sp, #24]
   185e0:	add	x0, x0, #0x1
   185e4:	str	x0, [sp, #24]
   185e8:	ldr	x1, [sp, #16]
   185ec:	ldr	x0, [sp, #8]
   185f0:	cmp	x1, x0
   185f4:	b.cs	18618 <hash_string@@Base+0xf0>  // b.hs, b.nlast
   185f8:	ldr	x0, [sp, #8]
   185fc:	ldr	x1, [sp, #24]
   18600:	udiv	x2, x0, x1
   18604:	ldr	x1, [sp, #24]
   18608:	mul	x1, x2, x1
   1860c:	sub	x0, x0, x1
   18610:	cmp	x0, #0x0
   18614:	b.ne	185bc <hash_string@@Base+0x94>  // b.any
   18618:	ldr	x0, [sp, #8]
   1861c:	ldr	x1, [sp, #24]
   18620:	udiv	x2, x0, x1
   18624:	ldr	x1, [sp, #24]
   18628:	mul	x1, x2, x1
   1862c:	sub	x0, x0, x1
   18630:	cmp	x0, #0x0
   18634:	cset	w0, ne  // ne = any
   18638:	and	w0, w0, #0xff
   1863c:	add	sp, sp, #0x20
   18640:	ret
   18644:	stp	x29, x30, [sp, #-32]!
   18648:	mov	x29, sp
   1864c:	str	x0, [sp, #24]
   18650:	ldr	x0, [sp, #24]
   18654:	cmp	x0, #0x9
   18658:	b.hi	18664 <hash_string@@Base+0x13c>  // b.pmore
   1865c:	mov	x0, #0xa                   	// #10
   18660:	str	x0, [sp, #24]
   18664:	ldr	x0, [sp, #24]
   18668:	orr	x0, x0, #0x1
   1866c:	str	x0, [sp, #24]
   18670:	b	18680 <hash_string@@Base+0x158>
   18674:	ldr	x0, [sp, #24]
   18678:	add	x0, x0, #0x2
   1867c:	str	x0, [sp, #24]
   18680:	ldr	x0, [sp, #24]
   18684:	cmn	x0, #0x1
   18688:	b.eq	186a8 <hash_string@@Base+0x180>  // b.none
   1868c:	ldr	x0, [sp, #24]
   18690:	bl	1859c <hash_string@@Base+0x74>
   18694:	and	w0, w0, #0xff
   18698:	eor	w0, w0, #0x1
   1869c:	and	w0, w0, #0xff
   186a0:	cmp	w0, #0x0
   186a4:	b.ne	18674 <hash_string@@Base+0x14c>  // b.any
   186a8:	ldr	x0, [sp, #24]
   186ac:	ldp	x29, x30, [sp], #32
   186b0:	ret

00000000000186b4 <hash_reset_tuning@@Base>:
   186b4:	sub	sp, sp, #0x10
   186b8:	str	x0, [sp, #8]
   186bc:	ldr	x1, [sp, #8]
   186c0:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   186c4:	add	x0, x0, #0x678
   186c8:	mov	x2, x1
   186cc:	mov	x3, x0
   186d0:	ldp	x0, x1, [x3]
   186d4:	stp	x0, x1, [x2]
   186d8:	ldr	w0, [x3, #16]
   186dc:	str	w0, [x2, #16]
   186e0:	nop
   186e4:	add	sp, sp, #0x10
   186e8:	ret
   186ec:	stp	x29, x30, [sp, #-48]!
   186f0:	mov	x29, sp
   186f4:	str	x0, [sp, #24]
   186f8:	str	x1, [sp, #16]
   186fc:	ldr	x0, [sp, #24]
   18700:	mov	w1, #0x3                   	// #3
   18704:	bl	b2f0 <rotr_sz@plt>
   18708:	str	x0, [sp, #40]
   1870c:	ldr	x0, [sp, #40]
   18710:	ldr	x1, [sp, #16]
   18714:	udiv	x2, x0, x1
   18718:	ldr	x1, [sp, #16]
   1871c:	mul	x1, x2, x1
   18720:	sub	x0, x0, x1
   18724:	ldp	x29, x30, [sp], #48
   18728:	ret
   1872c:	sub	sp, sp, #0x10
   18730:	str	x0, [sp, #8]
   18734:	str	x1, [sp]
   18738:	ldr	x1, [sp, #8]
   1873c:	ldr	x0, [sp]
   18740:	cmp	x1, x0
   18744:	cset	w0, eq  // eq = none
   18748:	and	w0, w0, #0xff
   1874c:	add	sp, sp, #0x10
   18750:	ret
   18754:	sub	sp, sp, #0x20
   18758:	str	x0, [sp, #8]
   1875c:	ldr	x0, [sp, #8]
   18760:	ldr	x0, [x0, #40]
   18764:	str	x0, [sp, #24]
   18768:	ldr	x1, [sp, #24]
   1876c:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   18770:	add	x0, x0, #0x678
   18774:	cmp	x1, x0
   18778:	b.ne	18784 <hash_reset_tuning@@Base+0xd0>  // b.any
   1877c:	mov	w0, #0x1                   	// #1
   18780:	b	18860 <hash_reset_tuning@@Base+0x1ac>
   18784:	mov	w0, #0xcccd                	// #52429
   18788:	movk	w0, #0x3dcc, lsl #16
   1878c:	fmov	s0, w0
   18790:	str	s0, [sp, #20]
   18794:	ldr	x0, [sp, #24]
   18798:	ldr	s0, [x0, #8]
   1879c:	ldr	s1, [sp, #20]
   187a0:	fcmpe	s1, s0
   187a4:	b.pl	1884c <hash_reset_tuning@@Base+0x198>  // b.nfrst
   187a8:	ldr	x0, [sp, #24]
   187ac:	ldr	s1, [x0, #8]
   187b0:	fmov	s2, #1.000000000000000000e+00
   187b4:	ldr	s0, [sp, #20]
   187b8:	fsub	s0, s2, s0
   187bc:	fcmpe	s1, s0
   187c0:	b.pl	1884c <hash_reset_tuning@@Base+0x198>  // b.nfrst
   187c4:	ldr	s1, [sp, #20]
   187c8:	fmov	s0, #1.000000000000000000e+00
   187cc:	fadd	s1, s1, s0
   187d0:	ldr	x0, [sp, #24]
   187d4:	ldr	s0, [x0, #12]
   187d8:	fcmpe	s1, s0
   187dc:	b.pl	1884c <hash_reset_tuning@@Base+0x198>  // b.nfrst
   187e0:	ldr	x0, [sp, #24]
   187e4:	ldr	s0, [x0]
   187e8:	fcmpe	s0, #0.0
   187ec:	b.lt	1884c <hash_reset_tuning@@Base+0x198>  // b.tstop
   187f0:	ldr	x0, [sp, #24]
   187f4:	ldr	s1, [x0]
   187f8:	ldr	s0, [sp, #20]
   187fc:	fadd	s1, s1, s0
   18800:	ldr	x0, [sp, #24]
   18804:	ldr	s0, [x0, #4]
   18808:	fcmpe	s1, s0
   1880c:	b.pl	1884c <hash_reset_tuning@@Base+0x198>  // b.nfrst
   18810:	ldr	x0, [sp, #24]
   18814:	ldr	s1, [x0, #4]
   18818:	fmov	s0, #1.000000000000000000e+00
   1881c:	fcmpe	s1, s0
   18820:	b.hi	1884c <hash_reset_tuning@@Base+0x198>  // b.pmore
   18824:	ldr	x0, [sp, #24]
   18828:	ldr	s1, [x0]
   1882c:	ldr	s0, [sp, #20]
   18830:	fadd	s1, s1, s0
   18834:	ldr	x0, [sp, #24]
   18838:	ldr	s0, [x0, #8]
   1883c:	fcmpe	s1, s0
   18840:	b.pl	1884c <hash_reset_tuning@@Base+0x198>  // b.nfrst
   18844:	mov	w0, #0x1                   	// #1
   18848:	b	18860 <hash_reset_tuning@@Base+0x1ac>
   1884c:	ldr	x0, [sp, #8]
   18850:	adrp	x1, 43000 <vasnprintf@@Base+0x2e04>
   18854:	add	x1, x1, #0x678
   18858:	str	x1, [x0, #40]
   1885c:	mov	w0, #0x0                   	// #0
   18860:	add	sp, sp, #0x20
   18864:	ret
   18868:	stp	x29, x30, [sp, #-48]!
   1886c:	mov	x29, sp
   18870:	str	x0, [sp, #24]
   18874:	str	x1, [sp, #16]
   18878:	ldr	x0, [sp, #16]
   1887c:	ldrb	w0, [x0, #16]
   18880:	eor	w0, w0, #0x1
   18884:	and	w0, w0, #0xff
   18888:	cmp	w0, #0x0
   1888c:	b.eq	188d0 <hash_reset_tuning@@Base+0x21c>  // b.none
   18890:	ldr	x0, [sp, #24]
   18894:	ucvtf	s1, x0
   18898:	ldr	x0, [sp, #16]
   1889c:	ldr	s0, [x0, #8]
   188a0:	fdiv	s0, s1, s0
   188a4:	str	s0, [sp, #44]
   188a8:	ldr	s0, [sp, #44]
   188ac:	mov	w0, #0x5f800000            	// #1602224128
   188b0:	fmov	s1, w0
   188b4:	fcmpe	s0, s1
   188b8:	b.lt	188c4 <hash_reset_tuning@@Base+0x210>  // b.tstop
   188bc:	mov	x0, #0x0                   	// #0
   188c0:	b	18924 <hash_reset_tuning@@Base+0x270>
   188c4:	ldr	s0, [sp, #44]
   188c8:	fcvtzu	x0, s0
   188cc:	str	x0, [sp, #24]
   188d0:	ldr	x0, [sp, #24]
   188d4:	bl	18644 <hash_string@@Base+0x11c>
   188d8:	str	x0, [sp, #24]
   188dc:	mov	x0, #0x0                   	// #0
   188e0:	ldr	x1, [sp, #24]
   188e4:	lsl	x1, x1, #3
   188e8:	ldr	x2, [sp, #24]
   188ec:	lsr	x2, x2, #61
   188f0:	cmp	x2, #0x0
   188f4:	b.eq	188fc <hash_reset_tuning@@Base+0x248>  // b.none
   188f8:	mov	x0, #0x1                   	// #1
   188fc:	cmp	x1, #0x0
   18900:	b.ge	18908 <hash_reset_tuning@@Base+0x254>  // b.tcont
   18904:	mov	x0, #0x1                   	// #1
   18908:	and	w0, w0, #0x1
   1890c:	and	w0, w0, #0xff
   18910:	cmp	w0, #0x0
   18914:	b.eq	18920 <hash_reset_tuning@@Base+0x26c>  // b.none
   18918:	mov	x0, #0x0                   	// #0
   1891c:	b	18924 <hash_reset_tuning@@Base+0x270>
   18920:	ldr	x0, [sp, #24]
   18924:	ldp	x29, x30, [sp], #48
   18928:	ret

000000000001892c <hash_initialize@@Base>:
   1892c:	stp	x29, x30, [sp, #-80]!
   18930:	mov	x29, sp
   18934:	str	x0, [sp, #56]
   18938:	str	x1, [sp, #48]
   1893c:	str	x2, [sp, #40]
   18940:	str	x3, [sp, #32]
   18944:	str	x4, [sp, #24]
   18948:	ldr	x0, [sp, #40]
   1894c:	cmp	x0, #0x0
   18950:	b.ne	18960 <hash_initialize@@Base+0x34>  // b.any
   18954:	adrp	x0, 18000 <hash_table_ok@@Base+0x3c>
   18958:	add	x0, x0, #0x6ec
   1895c:	str	x0, [sp, #40]
   18960:	ldr	x0, [sp, #32]
   18964:	cmp	x0, #0x0
   18968:	b.ne	18978 <hash_initialize@@Base+0x4c>  // b.any
   1896c:	adrp	x0, 18000 <hash_table_ok@@Base+0x3c>
   18970:	add	x0, x0, #0x72c
   18974:	str	x0, [sp, #32]
   18978:	mov	x0, #0x50                  	// #80
   1897c:	bl	ab40 <malloc@plt>
   18980:	str	x0, [sp, #72]
   18984:	ldr	x0, [sp, #72]
   18988:	cmp	x0, #0x0
   1898c:	b.ne	18998 <hash_initialize@@Base+0x6c>  // b.any
   18990:	mov	x0, #0x0                   	// #0
   18994:	b	18ab0 <hash_initialize@@Base+0x184>
   18998:	ldr	x0, [sp, #48]
   1899c:	cmp	x0, #0x0
   189a0:	b.ne	189b0 <hash_initialize@@Base+0x84>  // b.any
   189a4:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   189a8:	add	x0, x0, #0x678
   189ac:	str	x0, [sp, #48]
   189b0:	ldr	x0, [sp, #72]
   189b4:	ldr	x1, [sp, #48]
   189b8:	str	x1, [x0, #40]
   189bc:	ldr	x0, [sp, #72]
   189c0:	bl	18754 <hash_reset_tuning@@Base+0xa0>
   189c4:	and	w0, w0, #0xff
   189c8:	eor	w0, w0, #0x1
   189cc:	and	w0, w0, #0xff
   189d0:	cmp	w0, #0x0
   189d4:	b.ne	18a90 <hash_initialize@@Base+0x164>  // b.any
   189d8:	ldr	x1, [sp, #48]
   189dc:	ldr	x0, [sp, #56]
   189e0:	bl	18868 <hash_reset_tuning@@Base+0x1b4>
   189e4:	mov	x1, x0
   189e8:	ldr	x0, [sp, #72]
   189ec:	str	x1, [x0, #16]
   189f0:	ldr	x0, [sp, #72]
   189f4:	ldr	x0, [x0, #16]
   189f8:	cmp	x0, #0x0
   189fc:	b.eq	18a98 <hash_initialize@@Base+0x16c>  // b.none
   18a00:	ldr	x0, [sp, #72]
   18a04:	ldr	x0, [x0, #16]
   18a08:	mov	x1, #0x10                  	// #16
   18a0c:	bl	ad80 <calloc@plt>
   18a10:	mov	x1, x0
   18a14:	ldr	x0, [sp, #72]
   18a18:	str	x1, [x0]
   18a1c:	ldr	x0, [sp, #72]
   18a20:	ldr	x0, [x0]
   18a24:	cmp	x0, #0x0
   18a28:	b.eq	18aa0 <hash_initialize@@Base+0x174>  // b.none
   18a2c:	ldr	x0, [sp, #72]
   18a30:	ldr	x1, [x0]
   18a34:	ldr	x0, [sp, #72]
   18a38:	ldr	x0, [x0, #16]
   18a3c:	lsl	x0, x0, #4
   18a40:	add	x1, x1, x0
   18a44:	ldr	x0, [sp, #72]
   18a48:	str	x1, [x0, #8]
   18a4c:	ldr	x0, [sp, #72]
   18a50:	str	xzr, [x0, #24]
   18a54:	ldr	x0, [sp, #72]
   18a58:	str	xzr, [x0, #32]
   18a5c:	ldr	x0, [sp, #72]
   18a60:	ldr	x1, [sp, #40]
   18a64:	str	x1, [x0, #48]
   18a68:	ldr	x0, [sp, #72]
   18a6c:	ldr	x1, [sp, #32]
   18a70:	str	x1, [x0, #56]
   18a74:	ldr	x0, [sp, #72]
   18a78:	ldr	x1, [sp, #24]
   18a7c:	str	x1, [x0, #64]
   18a80:	ldr	x0, [sp, #72]
   18a84:	str	xzr, [x0, #72]
   18a88:	ldr	x0, [sp, #72]
   18a8c:	b	18ab0 <hash_initialize@@Base+0x184>
   18a90:	nop
   18a94:	b	18aa4 <hash_initialize@@Base+0x178>
   18a98:	nop
   18a9c:	b	18aa4 <hash_initialize@@Base+0x178>
   18aa0:	nop
   18aa4:	ldr	x0, [sp, #72]
   18aa8:	bl	b130 <free@plt>
   18aac:	mov	x0, #0x0                   	// #0
   18ab0:	ldp	x29, x30, [sp], #80
   18ab4:	ret

0000000000018ab8 <hash_clear@@Base>:
   18ab8:	stp	x29, x30, [sp, #-64]!
   18abc:	mov	x29, sp
   18ac0:	str	x0, [sp, #24]
   18ac4:	ldr	x0, [sp, #24]
   18ac8:	ldr	x0, [x0]
   18acc:	str	x0, [sp, #56]
   18ad0:	b	18b9c <hash_clear@@Base+0xe4>
   18ad4:	ldr	x0, [sp, #56]
   18ad8:	ldr	x0, [x0]
   18adc:	cmp	x0, #0x0
   18ae0:	b.eq	18b90 <hash_clear@@Base+0xd8>  // b.none
   18ae4:	ldr	x0, [sp, #56]
   18ae8:	ldr	x0, [x0, #8]
   18aec:	str	x0, [sp, #48]
   18af0:	b	18b50 <hash_clear@@Base+0x98>
   18af4:	ldr	x0, [sp, #24]
   18af8:	ldr	x0, [x0, #64]
   18afc:	cmp	x0, #0x0
   18b00:	b.eq	18b18 <hash_clear@@Base+0x60>  // b.none
   18b04:	ldr	x0, [sp, #24]
   18b08:	ldr	x1, [x0, #64]
   18b0c:	ldr	x0, [sp, #48]
   18b10:	ldr	x0, [x0]
   18b14:	blr	x1
   18b18:	ldr	x0, [sp, #48]
   18b1c:	str	xzr, [x0]
   18b20:	ldr	x0, [sp, #48]
   18b24:	ldr	x0, [x0, #8]
   18b28:	str	x0, [sp, #40]
   18b2c:	ldr	x0, [sp, #24]
   18b30:	ldr	x1, [x0, #72]
   18b34:	ldr	x0, [sp, #48]
   18b38:	str	x1, [x0, #8]
   18b3c:	ldr	x0, [sp, #24]
   18b40:	ldr	x1, [sp, #48]
   18b44:	str	x1, [x0, #72]
   18b48:	ldr	x0, [sp, #40]
   18b4c:	str	x0, [sp, #48]
   18b50:	ldr	x0, [sp, #48]
   18b54:	cmp	x0, #0x0
   18b58:	b.ne	18af4 <hash_clear@@Base+0x3c>  // b.any
   18b5c:	ldr	x0, [sp, #24]
   18b60:	ldr	x0, [x0, #64]
   18b64:	cmp	x0, #0x0
   18b68:	b.eq	18b80 <hash_clear@@Base+0xc8>  // b.none
   18b6c:	ldr	x0, [sp, #24]
   18b70:	ldr	x1, [x0, #64]
   18b74:	ldr	x0, [sp, #56]
   18b78:	ldr	x0, [x0]
   18b7c:	blr	x1
   18b80:	ldr	x0, [sp, #56]
   18b84:	str	xzr, [x0]
   18b88:	ldr	x0, [sp, #56]
   18b8c:	str	xzr, [x0, #8]
   18b90:	ldr	x0, [sp, #56]
   18b94:	add	x0, x0, #0x10
   18b98:	str	x0, [sp, #56]
   18b9c:	ldr	x0, [sp, #24]
   18ba0:	ldr	x0, [x0, #8]
   18ba4:	ldr	x1, [sp, #56]
   18ba8:	cmp	x1, x0
   18bac:	b.cc	18ad4 <hash_clear@@Base+0x1c>  // b.lo, b.ul, b.last
   18bb0:	ldr	x0, [sp, #24]
   18bb4:	str	xzr, [x0, #24]
   18bb8:	ldr	x0, [sp, #24]
   18bbc:	str	xzr, [x0, #32]
   18bc0:	nop
   18bc4:	ldp	x29, x30, [sp], #64
   18bc8:	ret

0000000000018bcc <hash_free@@Base>:
   18bcc:	stp	x29, x30, [sp, #-64]!
   18bd0:	mov	x29, sp
   18bd4:	str	x0, [sp, #24]
   18bd8:	ldr	x0, [sp, #24]
   18bdc:	ldr	x0, [x0, #64]
   18be0:	cmp	x0, #0x0
   18be4:	b.eq	18c70 <hash_free@@Base+0xa4>  // b.none
   18be8:	ldr	x0, [sp, #24]
   18bec:	ldr	x0, [x0, #32]
   18bf0:	cmp	x0, #0x0
   18bf4:	b.eq	18c70 <hash_free@@Base+0xa4>  // b.none
   18bf8:	ldr	x0, [sp, #24]
   18bfc:	ldr	x0, [x0]
   18c00:	str	x0, [sp, #56]
   18c04:	b	18c5c <hash_free@@Base+0x90>
   18c08:	ldr	x0, [sp, #56]
   18c0c:	ldr	x0, [x0]
   18c10:	cmp	x0, #0x0
   18c14:	b.eq	18c50 <hash_free@@Base+0x84>  // b.none
   18c18:	ldr	x0, [sp, #56]
   18c1c:	str	x0, [sp, #48]
   18c20:	b	18c44 <hash_free@@Base+0x78>
   18c24:	ldr	x0, [sp, #24]
   18c28:	ldr	x1, [x0, #64]
   18c2c:	ldr	x0, [sp, #48]
   18c30:	ldr	x0, [x0]
   18c34:	blr	x1
   18c38:	ldr	x0, [sp, #48]
   18c3c:	ldr	x0, [x0, #8]
   18c40:	str	x0, [sp, #48]
   18c44:	ldr	x0, [sp, #48]
   18c48:	cmp	x0, #0x0
   18c4c:	b.ne	18c24 <hash_free@@Base+0x58>  // b.any
   18c50:	ldr	x0, [sp, #56]
   18c54:	add	x0, x0, #0x10
   18c58:	str	x0, [sp, #56]
   18c5c:	ldr	x0, [sp, #24]
   18c60:	ldr	x0, [x0, #8]
   18c64:	ldr	x1, [sp, #56]
   18c68:	cmp	x1, x0
   18c6c:	b.cc	18c08 <hash_free@@Base+0x3c>  // b.lo, b.ul, b.last
   18c70:	ldr	x0, [sp, #24]
   18c74:	ldr	x0, [x0]
   18c78:	str	x0, [sp, #56]
   18c7c:	b	18cc4 <hash_free@@Base+0xf8>
   18c80:	ldr	x0, [sp, #56]
   18c84:	ldr	x0, [x0, #8]
   18c88:	str	x0, [sp, #48]
   18c8c:	b	18cac <hash_free@@Base+0xe0>
   18c90:	ldr	x0, [sp, #48]
   18c94:	ldr	x0, [x0, #8]
   18c98:	str	x0, [sp, #40]
   18c9c:	ldr	x0, [sp, #48]
   18ca0:	bl	b130 <free@plt>
   18ca4:	ldr	x0, [sp, #40]
   18ca8:	str	x0, [sp, #48]
   18cac:	ldr	x0, [sp, #48]
   18cb0:	cmp	x0, #0x0
   18cb4:	b.ne	18c90 <hash_free@@Base+0xc4>  // b.any
   18cb8:	ldr	x0, [sp, #56]
   18cbc:	add	x0, x0, #0x10
   18cc0:	str	x0, [sp, #56]
   18cc4:	ldr	x0, [sp, #24]
   18cc8:	ldr	x0, [x0, #8]
   18ccc:	ldr	x1, [sp, #56]
   18cd0:	cmp	x1, x0
   18cd4:	b.cc	18c80 <hash_free@@Base+0xb4>  // b.lo, b.ul, b.last
   18cd8:	ldr	x0, [sp, #24]
   18cdc:	ldr	x0, [x0, #72]
   18ce0:	str	x0, [sp, #48]
   18ce4:	b	18d04 <hash_free@@Base+0x138>
   18ce8:	ldr	x0, [sp, #48]
   18cec:	ldr	x0, [x0, #8]
   18cf0:	str	x0, [sp, #40]
   18cf4:	ldr	x0, [sp, #48]
   18cf8:	bl	b130 <free@plt>
   18cfc:	ldr	x0, [sp, #40]
   18d00:	str	x0, [sp, #48]
   18d04:	ldr	x0, [sp, #48]
   18d08:	cmp	x0, #0x0
   18d0c:	b.ne	18ce8 <hash_free@@Base+0x11c>  // b.any
   18d10:	ldr	x0, [sp, #24]
   18d14:	ldr	x0, [x0]
   18d18:	bl	b130 <free@plt>
   18d1c:	ldr	x0, [sp, #24]
   18d20:	bl	b130 <free@plt>
   18d24:	nop
   18d28:	ldp	x29, x30, [sp], #64
   18d2c:	ret
   18d30:	stp	x29, x30, [sp, #-48]!
   18d34:	mov	x29, sp
   18d38:	str	x0, [sp, #24]
   18d3c:	ldr	x0, [sp, #24]
   18d40:	ldr	x0, [x0, #72]
   18d44:	cmp	x0, #0x0
   18d48:	b.eq	18d6c <hash_free@@Base+0x1a0>  // b.none
   18d4c:	ldr	x0, [sp, #24]
   18d50:	ldr	x0, [x0, #72]
   18d54:	str	x0, [sp, #40]
   18d58:	ldr	x0, [sp, #40]
   18d5c:	ldr	x1, [x0, #8]
   18d60:	ldr	x0, [sp, #24]
   18d64:	str	x1, [x0, #72]
   18d68:	b	18d78 <hash_free@@Base+0x1ac>
   18d6c:	mov	x0, #0x10                  	// #16
   18d70:	bl	ab40 <malloc@plt>
   18d74:	str	x0, [sp, #40]
   18d78:	ldr	x0, [sp, #40]
   18d7c:	ldp	x29, x30, [sp], #48
   18d80:	ret
   18d84:	sub	sp, sp, #0x10
   18d88:	str	x0, [sp, #8]
   18d8c:	str	x1, [sp]
   18d90:	ldr	x0, [sp]
   18d94:	str	xzr, [x0]
   18d98:	ldr	x0, [sp, #8]
   18d9c:	ldr	x1, [x0, #72]
   18da0:	ldr	x0, [sp]
   18da4:	str	x1, [x0, #8]
   18da8:	ldr	x0, [sp, #8]
   18dac:	ldr	x1, [sp]
   18db0:	str	x1, [x0, #72]
   18db4:	nop
   18db8:	add	sp, sp, #0x10
   18dbc:	ret
   18dc0:	stp	x29, x30, [sp, #-96]!
   18dc4:	mov	x29, sp
   18dc8:	str	x0, [sp, #40]
   18dcc:	str	x1, [sp, #32]
   18dd0:	str	x2, [sp, #24]
   18dd4:	strb	w3, [sp, #23]
   18dd8:	ldr	x1, [sp, #32]
   18ddc:	ldr	x0, [sp, #40]
   18de0:	bl	18154 <hash_print_statistics@@Base+0xbc>
   18de4:	str	x0, [sp, #80]
   18de8:	ldr	x0, [sp, #24]
   18dec:	ldr	x1, [sp, #80]
   18df0:	str	x1, [x0]
   18df4:	ldr	x0, [sp, #80]
   18df8:	ldr	x0, [x0]
   18dfc:	cmp	x0, #0x0
   18e00:	b.ne	18e0c <hash_free@@Base+0x240>  // b.any
   18e04:	mov	x0, #0x0                   	// #0
   18e08:	b	18f68 <hash_free@@Base+0x39c>
   18e0c:	ldr	x0, [sp, #80]
   18e10:	ldr	x0, [x0]
   18e14:	ldr	x1, [sp, #32]
   18e18:	cmp	x1, x0
   18e1c:	b.eq	18e48 <hash_free@@Base+0x27c>  // b.none
   18e20:	ldr	x0, [sp, #40]
   18e24:	ldr	x2, [x0, #56]
   18e28:	ldr	x0, [sp, #80]
   18e2c:	ldr	x0, [x0]
   18e30:	mov	x1, x0
   18e34:	ldr	x0, [sp, #32]
   18e38:	blr	x2
   18e3c:	and	w0, w0, #0xff
   18e40:	cmp	w0, #0x0
   18e44:	b.eq	18eac <hash_free@@Base+0x2e0>  // b.none
   18e48:	ldr	x0, [sp, #80]
   18e4c:	ldr	x0, [x0]
   18e50:	str	x0, [sp, #56]
   18e54:	ldrb	w0, [sp, #23]
   18e58:	cmp	w0, #0x0
   18e5c:	b.eq	18ea4 <hash_free@@Base+0x2d8>  // b.none
   18e60:	ldr	x0, [sp, #80]
   18e64:	ldr	x0, [x0, #8]
   18e68:	cmp	x0, #0x0
   18e6c:	b.eq	18e9c <hash_free@@Base+0x2d0>  // b.none
   18e70:	ldr	x0, [sp, #80]
   18e74:	ldr	x0, [x0, #8]
   18e78:	str	x0, [sp, #48]
   18e7c:	ldr	x2, [sp, #80]
   18e80:	ldr	x0, [sp, #48]
   18e84:	ldp	x0, x1, [x0]
   18e88:	stp	x0, x1, [x2]
   18e8c:	ldr	x1, [sp, #48]
   18e90:	ldr	x0, [sp, #40]
   18e94:	bl	18d84 <hash_free@@Base+0x1b8>
   18e98:	b	18ea4 <hash_free@@Base+0x2d8>
   18e9c:	ldr	x0, [sp, #80]
   18ea0:	str	xzr, [x0]
   18ea4:	ldr	x0, [sp, #56]
   18ea8:	b	18f68 <hash_free@@Base+0x39c>
   18eac:	ldr	x0, [sp, #80]
   18eb0:	str	x0, [sp, #88]
   18eb4:	b	18f54 <hash_free@@Base+0x388>
   18eb8:	ldr	x0, [sp, #88]
   18ebc:	ldr	x0, [x0, #8]
   18ec0:	ldr	x0, [x0]
   18ec4:	ldr	x1, [sp, #32]
   18ec8:	cmp	x1, x0
   18ecc:	b.eq	18efc <hash_free@@Base+0x330>  // b.none
   18ed0:	ldr	x0, [sp, #40]
   18ed4:	ldr	x2, [x0, #56]
   18ed8:	ldr	x0, [sp, #88]
   18edc:	ldr	x0, [x0, #8]
   18ee0:	ldr	x0, [x0]
   18ee4:	mov	x1, x0
   18ee8:	ldr	x0, [sp, #32]
   18eec:	blr	x2
   18ef0:	and	w0, w0, #0xff
   18ef4:	cmp	w0, #0x0
   18ef8:	b.eq	18f48 <hash_free@@Base+0x37c>  // b.none
   18efc:	ldr	x0, [sp, #88]
   18f00:	ldr	x0, [x0, #8]
   18f04:	ldr	x0, [x0]
   18f08:	str	x0, [sp, #72]
   18f0c:	ldrb	w0, [sp, #23]
   18f10:	cmp	w0, #0x0
   18f14:	b.eq	18f40 <hash_free@@Base+0x374>  // b.none
   18f18:	ldr	x0, [sp, #88]
   18f1c:	ldr	x0, [x0, #8]
   18f20:	str	x0, [sp, #64]
   18f24:	ldr	x0, [sp, #64]
   18f28:	ldr	x1, [x0, #8]
   18f2c:	ldr	x0, [sp, #88]
   18f30:	str	x1, [x0, #8]
   18f34:	ldr	x1, [sp, #64]
   18f38:	ldr	x0, [sp, #40]
   18f3c:	bl	18d84 <hash_free@@Base+0x1b8>
   18f40:	ldr	x0, [sp, #72]
   18f44:	b	18f68 <hash_free@@Base+0x39c>
   18f48:	ldr	x0, [sp, #88]
   18f4c:	ldr	x0, [x0, #8]
   18f50:	str	x0, [sp, #88]
   18f54:	ldr	x0, [sp, #88]
   18f58:	ldr	x0, [x0, #8]
   18f5c:	cmp	x0, #0x0
   18f60:	b.ne	18eb8 <hash_free@@Base+0x2ec>  // b.any
   18f64:	mov	x0, #0x0                   	// #0
   18f68:	ldp	x29, x30, [sp], #96
   18f6c:	ret
   18f70:	stp	x29, x30, [sp, #-96]!
   18f74:	mov	x29, sp
   18f78:	str	x0, [sp, #40]
   18f7c:	str	x1, [sp, #32]
   18f80:	strb	w2, [sp, #31]
   18f84:	ldr	x0, [sp, #32]
   18f88:	ldr	x0, [x0]
   18f8c:	str	x0, [sp, #88]
   18f90:	b	19128 <hash_free@@Base+0x55c>
   18f94:	ldr	x0, [sp, #88]
   18f98:	ldr	x0, [x0]
   18f9c:	cmp	x0, #0x0
   18fa0:	b.eq	1911c <hash_free@@Base+0x550>  // b.none
   18fa4:	ldr	x0, [sp, #88]
   18fa8:	ldr	x0, [x0, #8]
   18fac:	str	x0, [sp, #80]
   18fb0:	b	19040 <hash_free@@Base+0x474>
   18fb4:	ldr	x0, [sp, #80]
   18fb8:	ldr	x0, [x0]
   18fbc:	str	x0, [sp, #72]
   18fc0:	ldr	x1, [sp, #72]
   18fc4:	ldr	x0, [sp, #40]
   18fc8:	bl	18154 <hash_print_statistics@@Base+0xbc>
   18fcc:	str	x0, [sp, #64]
   18fd0:	ldr	x0, [sp, #80]
   18fd4:	ldr	x0, [x0, #8]
   18fd8:	str	x0, [sp, #48]
   18fdc:	ldr	x0, [sp, #64]
   18fe0:	ldr	x0, [x0]
   18fe4:	cmp	x0, #0x0
   18fe8:	b.eq	1900c <hash_free@@Base+0x440>  // b.none
   18fec:	ldr	x0, [sp, #64]
   18ff0:	ldr	x1, [x0, #8]
   18ff4:	ldr	x0, [sp, #80]
   18ff8:	str	x1, [x0, #8]
   18ffc:	ldr	x0, [sp, #64]
   19000:	ldr	x1, [sp, #80]
   19004:	str	x1, [x0, #8]
   19008:	b	19038 <hash_free@@Base+0x46c>
   1900c:	ldr	x0, [sp, #64]
   19010:	ldr	x1, [sp, #72]
   19014:	str	x1, [x0]
   19018:	ldr	x0, [sp, #40]
   1901c:	ldr	x0, [x0, #24]
   19020:	add	x1, x0, #0x1
   19024:	ldr	x0, [sp, #40]
   19028:	str	x1, [x0, #24]
   1902c:	ldr	x1, [sp, #80]
   19030:	ldr	x0, [sp, #40]
   19034:	bl	18d84 <hash_free@@Base+0x1b8>
   19038:	ldr	x0, [sp, #48]
   1903c:	str	x0, [sp, #80]
   19040:	ldr	x0, [sp, #80]
   19044:	cmp	x0, #0x0
   19048:	b.ne	18fb4 <hash_free@@Base+0x3e8>  // b.any
   1904c:	ldr	x0, [sp, #88]
   19050:	ldr	x0, [x0]
   19054:	str	x0, [sp, #72]
   19058:	ldr	x0, [sp, #88]
   1905c:	str	xzr, [x0, #8]
   19060:	ldrb	w0, [sp, #31]
   19064:	cmp	w0, #0x0
   19068:	b.ne	19118 <hash_free@@Base+0x54c>  // b.any
   1906c:	ldr	x1, [sp, #72]
   19070:	ldr	x0, [sp, #40]
   19074:	bl	18154 <hash_print_statistics@@Base+0xbc>
   19078:	str	x0, [sp, #64]
   1907c:	ldr	x0, [sp, #64]
   19080:	ldr	x0, [x0]
   19084:	cmp	x0, #0x0
   19088:	b.eq	190d8 <hash_free@@Base+0x50c>  // b.none
   1908c:	ldr	x0, [sp, #40]
   19090:	bl	18d30 <hash_free@@Base+0x164>
   19094:	str	x0, [sp, #56]
   19098:	ldr	x0, [sp, #56]
   1909c:	cmp	x0, #0x0
   190a0:	b.ne	190ac <hash_free@@Base+0x4e0>  // b.any
   190a4:	mov	w0, #0x0                   	// #0
   190a8:	b	19140 <hash_free@@Base+0x574>
   190ac:	ldr	x0, [sp, #56]
   190b0:	ldr	x1, [sp, #72]
   190b4:	str	x1, [x0]
   190b8:	ldr	x0, [sp, #64]
   190bc:	ldr	x1, [x0, #8]
   190c0:	ldr	x0, [sp, #56]
   190c4:	str	x1, [x0, #8]
   190c8:	ldr	x0, [sp, #64]
   190cc:	ldr	x1, [sp, #56]
   190d0:	str	x1, [x0, #8]
   190d4:	b	190f8 <hash_free@@Base+0x52c>
   190d8:	ldr	x0, [sp, #64]
   190dc:	ldr	x1, [sp, #72]
   190e0:	str	x1, [x0]
   190e4:	ldr	x0, [sp, #40]
   190e8:	ldr	x0, [x0, #24]
   190ec:	add	x1, x0, #0x1
   190f0:	ldr	x0, [sp, #40]
   190f4:	str	x1, [x0, #24]
   190f8:	ldr	x0, [sp, #88]
   190fc:	str	xzr, [x0]
   19100:	ldr	x0, [sp, #32]
   19104:	ldr	x0, [x0, #24]
   19108:	sub	x1, x0, #0x1
   1910c:	ldr	x0, [sp, #32]
   19110:	str	x1, [x0, #24]
   19114:	b	1911c <hash_free@@Base+0x550>
   19118:	nop
   1911c:	ldr	x0, [sp, #88]
   19120:	add	x0, x0, #0x10
   19124:	str	x0, [sp, #88]
   19128:	ldr	x0, [sp, #32]
   1912c:	ldr	x0, [x0, #8]
   19130:	ldr	x1, [sp, #88]
   19134:	cmp	x1, x0
   19138:	b.cc	18f94 <hash_free@@Base+0x3c8>  // b.lo, b.ul, b.last
   1913c:	mov	w0, #0x1                   	// #1
   19140:	ldp	x29, x30, [sp], #96
   19144:	ret

0000000000019148 <hash_rehash@@Base>:
   19148:	stp	x29, x30, [sp, #-128]!
   1914c:	mov	x29, sp
   19150:	str	x0, [sp, #24]
   19154:	str	x1, [sp, #16]
   19158:	ldr	x0, [sp, #24]
   1915c:	ldr	x0, [x0, #40]
   19160:	mov	x1, x0
   19164:	ldr	x0, [sp, #16]
   19168:	bl	18868 <hash_reset_tuning@@Base+0x1b4>
   1916c:	str	x0, [sp, #120]
   19170:	ldr	x0, [sp, #120]
   19174:	cmp	x0, #0x0
   19178:	b.ne	19184 <hash_rehash@@Base+0x3c>  // b.any
   1917c:	mov	w0, #0x0                   	// #0
   19180:	b	1934c <hash_rehash@@Base+0x204>
   19184:	ldr	x0, [sp, #24]
   19188:	ldr	x0, [x0, #16]
   1918c:	ldr	x1, [sp, #120]
   19190:	cmp	x1, x0
   19194:	b.ne	191a0 <hash_rehash@@Base+0x58>  // b.any
   19198:	mov	w0, #0x1                   	// #1
   1919c:	b	1934c <hash_rehash@@Base+0x204>
   191a0:	add	x0, sp, #0x20
   191a4:	str	x0, [sp, #112]
   191a8:	mov	x1, #0x10                  	// #16
   191ac:	ldr	x0, [sp, #120]
   191b0:	bl	ad80 <calloc@plt>
   191b4:	mov	x1, x0
   191b8:	ldr	x0, [sp, #112]
   191bc:	str	x1, [x0]
   191c0:	ldr	x0, [sp, #112]
   191c4:	ldr	x0, [x0]
   191c8:	cmp	x0, #0x0
   191cc:	b.ne	191d8 <hash_rehash@@Base+0x90>  // b.any
   191d0:	mov	w0, #0x0                   	// #0
   191d4:	b	1934c <hash_rehash@@Base+0x204>
   191d8:	ldr	x0, [sp, #112]
   191dc:	ldr	x1, [sp, #120]
   191e0:	str	x1, [x0, #16]
   191e4:	ldr	x0, [sp, #112]
   191e8:	ldr	x1, [x0]
   191ec:	ldr	x0, [sp, #120]
   191f0:	lsl	x0, x0, #4
   191f4:	add	x1, x1, x0
   191f8:	ldr	x0, [sp, #112]
   191fc:	str	x1, [x0, #8]
   19200:	ldr	x0, [sp, #112]
   19204:	str	xzr, [x0, #24]
   19208:	ldr	x0, [sp, #112]
   1920c:	str	xzr, [x0, #32]
   19210:	ldr	x0, [sp, #24]
   19214:	ldr	x1, [x0, #40]
   19218:	ldr	x0, [sp, #112]
   1921c:	str	x1, [x0, #40]
   19220:	ldr	x0, [sp, #24]
   19224:	ldr	x1, [x0, #48]
   19228:	ldr	x0, [sp, #112]
   1922c:	str	x1, [x0, #48]
   19230:	ldr	x0, [sp, #24]
   19234:	ldr	x1, [x0, #56]
   19238:	ldr	x0, [sp, #112]
   1923c:	str	x1, [x0, #56]
   19240:	ldr	x0, [sp, #24]
   19244:	ldr	x1, [x0, #64]
   19248:	ldr	x0, [sp, #112]
   1924c:	str	x1, [x0, #64]
   19250:	ldr	x0, [sp, #24]
   19254:	ldr	x1, [x0, #72]
   19258:	ldr	x0, [sp, #112]
   1925c:	str	x1, [x0, #72]
   19260:	mov	w2, #0x0                   	// #0
   19264:	ldr	x1, [sp, #24]
   19268:	ldr	x0, [sp, #112]
   1926c:	bl	18f70 <hash_free@@Base+0x3a4>
   19270:	and	w0, w0, #0xff
   19274:	cmp	w0, #0x0
   19278:	b.eq	192e0 <hash_rehash@@Base+0x198>  // b.none
   1927c:	ldr	x0, [sp, #24]
   19280:	ldr	x0, [x0]
   19284:	bl	b130 <free@plt>
   19288:	ldr	x0, [sp, #112]
   1928c:	ldr	x1, [x0]
   19290:	ldr	x0, [sp, #24]
   19294:	str	x1, [x0]
   19298:	ldr	x0, [sp, #112]
   1929c:	ldr	x1, [x0, #8]
   192a0:	ldr	x0, [sp, #24]
   192a4:	str	x1, [x0, #8]
   192a8:	ldr	x0, [sp, #112]
   192ac:	ldr	x1, [x0, #16]
   192b0:	ldr	x0, [sp, #24]
   192b4:	str	x1, [x0, #16]
   192b8:	ldr	x0, [sp, #112]
   192bc:	ldr	x1, [x0, #24]
   192c0:	ldr	x0, [sp, #24]
   192c4:	str	x1, [x0, #24]
   192c8:	ldr	x0, [sp, #112]
   192cc:	ldr	x1, [x0, #72]
   192d0:	ldr	x0, [sp, #24]
   192d4:	str	x1, [x0, #72]
   192d8:	mov	w0, #0x1                   	// #1
   192dc:	b	1934c <hash_rehash@@Base+0x204>
   192e0:	ldr	x0, [sp, #112]
   192e4:	ldr	x1, [x0, #72]
   192e8:	ldr	x0, [sp, #24]
   192ec:	str	x1, [x0, #72]
   192f0:	mov	w2, #0x1                   	// #1
   192f4:	ldr	x1, [sp, #112]
   192f8:	ldr	x0, [sp, #24]
   192fc:	bl	18f70 <hash_free@@Base+0x3a4>
   19300:	and	w0, w0, #0xff
   19304:	eor	w0, w0, #0x1
   19308:	and	w0, w0, #0xff
   1930c:	cmp	w0, #0x0
   19310:	b.ne	19338 <hash_rehash@@Base+0x1f0>  // b.any
   19314:	mov	w2, #0x0                   	// #0
   19318:	ldr	x1, [sp, #112]
   1931c:	ldr	x0, [sp, #24]
   19320:	bl	18f70 <hash_free@@Base+0x3a4>
   19324:	and	w0, w0, #0xff
   19328:	eor	w0, w0, #0x1
   1932c:	and	w0, w0, #0xff
   19330:	cmp	w0, #0x0
   19334:	b.eq	1933c <hash_rehash@@Base+0x1f4>  // b.none
   19338:	bl	af70 <abort@plt>
   1933c:	ldr	x0, [sp, #112]
   19340:	ldr	x0, [x0]
   19344:	bl	b130 <free@plt>
   19348:	mov	w0, #0x0                   	// #0
   1934c:	ldp	x29, x30, [sp], #128
   19350:	ret

0000000000019354 <hash_insert_if_absent@@Base>:
   19354:	stp	x29, x30, [sp, #-96]!
   19358:	mov	x29, sp
   1935c:	str	x0, [sp, #40]
   19360:	str	x1, [sp, #32]
   19364:	str	x2, [sp, #24]
   19368:	ldr	x0, [sp, #32]
   1936c:	cmp	x0, #0x0
   19370:	b.ne	19378 <hash_insert_if_absent@@Base+0x24>  // b.any
   19374:	bl	af70 <abort@plt>
   19378:	add	x0, sp, #0x38
   1937c:	mov	w3, #0x0                   	// #0
   19380:	mov	x2, x0
   19384:	ldr	x1, [sp, #32]
   19388:	ldr	x0, [sp, #40]
   1938c:	bl	18dc0 <hash_free@@Base+0x1f4>
   19390:	str	x0, [sp, #88]
   19394:	ldr	x0, [sp, #88]
   19398:	cmp	x0, #0x0
   1939c:	b.eq	193c0 <hash_insert_if_absent@@Base+0x6c>  // b.none
   193a0:	ldr	x0, [sp, #24]
   193a4:	cmp	x0, #0x0
   193a8:	b.eq	193b8 <hash_insert_if_absent@@Base+0x64>  // b.none
   193ac:	ldr	x0, [sp, #24]
   193b0:	ldr	x1, [sp, #88]
   193b4:	str	x1, [x0]
   193b8:	mov	w0, #0x0                   	// #0
   193bc:	b	195a4 <hash_insert_if_absent@@Base+0x250>
   193c0:	ldr	x0, [sp, #40]
   193c4:	ldr	x0, [x0, #24]
   193c8:	ucvtf	s1, x0
   193cc:	ldr	x0, [sp, #40]
   193d0:	ldr	x0, [x0, #40]
   193d4:	ldr	s2, [x0, #8]
   193d8:	ldr	x0, [sp, #40]
   193dc:	ldr	x0, [x0, #16]
   193e0:	ucvtf	s0, x0
   193e4:	fmul	s0, s2, s0
   193e8:	fcmpe	s1, s0
   193ec:	b.le	194f8 <hash_insert_if_absent@@Base+0x1a4>
   193f0:	ldr	x0, [sp, #40]
   193f4:	bl	18754 <hash_reset_tuning@@Base+0xa0>
   193f8:	ldr	x0, [sp, #40]
   193fc:	ldr	x0, [x0, #24]
   19400:	ucvtf	s1, x0
   19404:	ldr	x0, [sp, #40]
   19408:	ldr	x0, [x0, #40]
   1940c:	ldr	s2, [x0, #8]
   19410:	ldr	x0, [sp, #40]
   19414:	ldr	x0, [x0, #16]
   19418:	ucvtf	s0, x0
   1941c:	fmul	s0, s2, s0
   19420:	fcmpe	s1, s0
   19424:	b.le	194f8 <hash_insert_if_absent@@Base+0x1a4>
   19428:	ldr	x0, [sp, #40]
   1942c:	ldr	x0, [x0, #40]
   19430:	str	x0, [sp, #80]
   19434:	ldr	x0, [sp, #80]
   19438:	ldrb	w0, [x0, #16]
   1943c:	cmp	w0, #0x0
   19440:	b.eq	19460 <hash_insert_if_absent@@Base+0x10c>  // b.none
   19444:	ldr	x0, [sp, #40]
   19448:	ldr	x0, [x0, #16]
   1944c:	ucvtf	s1, x0
   19450:	ldr	x0, [sp, #80]
   19454:	ldr	s0, [x0, #12]
   19458:	fmul	s0, s1, s0
   1945c:	b	19484 <hash_insert_if_absent@@Base+0x130>
   19460:	ldr	x0, [sp, #40]
   19464:	ldr	x0, [x0, #16]
   19468:	ucvtf	s1, x0
   1946c:	ldr	x0, [sp, #80]
   19470:	ldr	s0, [x0, #12]
   19474:	fmul	s1, s1, s0
   19478:	ldr	x0, [sp, #80]
   1947c:	ldr	s0, [x0, #8]
   19480:	fmul	s0, s1, s0
   19484:	str	s0, [sp, #76]
   19488:	ldr	s0, [sp, #76]
   1948c:	mov	w0, #0x5f800000            	// #1602224128
   19490:	fmov	s1, w0
   19494:	fcmpe	s0, s1
   19498:	b.lt	194a4 <hash_insert_if_absent@@Base+0x150>  // b.tstop
   1949c:	mov	w0, #0xffffffff            	// #-1
   194a0:	b	195a4 <hash_insert_if_absent@@Base+0x250>
   194a4:	ldr	s0, [sp, #76]
   194a8:	fcvtzu	x0, s0
   194ac:	mov	x1, x0
   194b0:	ldr	x0, [sp, #40]
   194b4:	bl	afa0 <hash_rehash@plt>
   194b8:	and	w0, w0, #0xff
   194bc:	eor	w0, w0, #0x1
   194c0:	and	w0, w0, #0xff
   194c4:	cmp	w0, #0x0
   194c8:	b.eq	194d4 <hash_insert_if_absent@@Base+0x180>  // b.none
   194cc:	mov	w0, #0xffffffff            	// #-1
   194d0:	b	195a4 <hash_insert_if_absent@@Base+0x250>
   194d4:	add	x0, sp, #0x38
   194d8:	mov	w3, #0x0                   	// #0
   194dc:	mov	x2, x0
   194e0:	ldr	x1, [sp, #32]
   194e4:	ldr	x0, [sp, #40]
   194e8:	bl	18dc0 <hash_free@@Base+0x1f4>
   194ec:	cmp	x0, #0x0
   194f0:	b.eq	194f8 <hash_insert_if_absent@@Base+0x1a4>  // b.none
   194f4:	bl	af70 <abort@plt>
   194f8:	ldr	x0, [sp, #56]
   194fc:	ldr	x0, [x0]
   19500:	cmp	x0, #0x0
   19504:	b.eq	1956c <hash_insert_if_absent@@Base+0x218>  // b.none
   19508:	ldr	x0, [sp, #40]
   1950c:	bl	18d30 <hash_free@@Base+0x164>
   19510:	str	x0, [sp, #64]
   19514:	ldr	x0, [sp, #64]
   19518:	cmp	x0, #0x0
   1951c:	b.ne	19528 <hash_insert_if_absent@@Base+0x1d4>  // b.any
   19520:	mov	w0, #0xffffffff            	// #-1
   19524:	b	195a4 <hash_insert_if_absent@@Base+0x250>
   19528:	ldr	x0, [sp, #64]
   1952c:	ldr	x1, [sp, #32]
   19530:	str	x1, [x0]
   19534:	ldr	x0, [sp, #56]
   19538:	ldr	x1, [x0, #8]
   1953c:	ldr	x0, [sp, #64]
   19540:	str	x1, [x0, #8]
   19544:	ldr	x0, [sp, #56]
   19548:	ldr	x1, [sp, #64]
   1954c:	str	x1, [x0, #8]
   19550:	ldr	x0, [sp, #40]
   19554:	ldr	x0, [x0, #32]
   19558:	add	x1, x0, #0x1
   1955c:	ldr	x0, [sp, #40]
   19560:	str	x1, [x0, #32]
   19564:	mov	w0, #0x1                   	// #1
   19568:	b	195a4 <hash_insert_if_absent@@Base+0x250>
   1956c:	ldr	x0, [sp, #56]
   19570:	ldr	x1, [sp, #32]
   19574:	str	x1, [x0]
   19578:	ldr	x0, [sp, #40]
   1957c:	ldr	x0, [x0, #32]
   19580:	add	x1, x0, #0x1
   19584:	ldr	x0, [sp, #40]
   19588:	str	x1, [x0, #32]
   1958c:	ldr	x0, [sp, #40]
   19590:	ldr	x0, [x0, #24]
   19594:	add	x1, x0, #0x1
   19598:	ldr	x0, [sp, #40]
   1959c:	str	x1, [x0, #24]
   195a0:	mov	w0, #0x1                   	// #1
   195a4:	ldp	x29, x30, [sp], #96
   195a8:	ret

00000000000195ac <hash_insert@@Base>:
   195ac:	stp	x29, x30, [sp, #-48]!
   195b0:	mov	x29, sp
   195b4:	str	x0, [sp, #24]
   195b8:	str	x1, [sp, #16]
   195bc:	add	x0, sp, #0x20
   195c0:	mov	x2, x0
   195c4:	ldr	x1, [sp, #16]
   195c8:	ldr	x0, [sp, #24]
   195cc:	bl	adc0 <hash_insert_if_absent@plt>
   195d0:	str	w0, [sp, #44]
   195d4:	ldr	w0, [sp, #44]
   195d8:	cmn	w0, #0x1
   195dc:	b.eq	195fc <hash_insert@@Base+0x50>  // b.none
   195e0:	ldr	w0, [sp, #44]
   195e4:	cmp	w0, #0x0
   195e8:	b.ne	195f4 <hash_insert@@Base+0x48>  // b.any
   195ec:	ldr	x0, [sp, #32]
   195f0:	b	19600 <hash_insert@@Base+0x54>
   195f4:	ldr	x0, [sp, #16]
   195f8:	b	19600 <hash_insert@@Base+0x54>
   195fc:	mov	x0, #0x0                   	// #0
   19600:	ldp	x29, x30, [sp], #48
   19604:	ret

0000000000019608 <hash_delete@@Base>:
   19608:	stp	x29, x30, [sp, #-80]!
   1960c:	mov	x29, sp
   19610:	str	x0, [sp, #24]
   19614:	str	x1, [sp, #16]
   19618:	add	x0, sp, #0x20
   1961c:	mov	w3, #0x1                   	// #1
   19620:	mov	x2, x0
   19624:	ldr	x1, [sp, #16]
   19628:	ldr	x0, [sp, #24]
   1962c:	bl	18dc0 <hash_free@@Base+0x1f4>
   19630:	str	x0, [sp, #64]
   19634:	ldr	x0, [sp, #64]
   19638:	cmp	x0, #0x0
   1963c:	b.ne	19648 <hash_delete@@Base+0x40>  // b.any
   19640:	mov	x0, #0x0                   	// #0
   19644:	b	197b4 <hash_delete@@Base+0x1ac>
   19648:	ldr	x0, [sp, #24]
   1964c:	ldr	x0, [x0, #32]
   19650:	sub	x1, x0, #0x1
   19654:	ldr	x0, [sp, #24]
   19658:	str	x1, [x0, #32]
   1965c:	ldr	x0, [sp, #32]
   19660:	ldr	x0, [x0]
   19664:	cmp	x0, #0x0
   19668:	b.ne	197b0 <hash_delete@@Base+0x1a8>  // b.any
   1966c:	ldr	x0, [sp, #24]
   19670:	ldr	x0, [x0, #24]
   19674:	sub	x1, x0, #0x1
   19678:	ldr	x0, [sp, #24]
   1967c:	str	x1, [x0, #24]
   19680:	ldr	x0, [sp, #24]
   19684:	ldr	x0, [x0, #24]
   19688:	ucvtf	s1, x0
   1968c:	ldr	x0, [sp, #24]
   19690:	ldr	x0, [x0, #40]
   19694:	ldr	s2, [x0]
   19698:	ldr	x0, [sp, #24]
   1969c:	ldr	x0, [x0, #16]
   196a0:	ucvtf	s0, x0
   196a4:	fmul	s0, s2, s0
   196a8:	fcmpe	s1, s0
   196ac:	b.pl	197b0 <hash_delete@@Base+0x1a8>  // b.nfrst
   196b0:	ldr	x0, [sp, #24]
   196b4:	bl	18754 <hash_reset_tuning@@Base+0xa0>
   196b8:	ldr	x0, [sp, #24]
   196bc:	ldr	x0, [x0, #24]
   196c0:	ucvtf	s1, x0
   196c4:	ldr	x0, [sp, #24]
   196c8:	ldr	x0, [x0, #40]
   196cc:	ldr	s2, [x0]
   196d0:	ldr	x0, [sp, #24]
   196d4:	ldr	x0, [x0, #16]
   196d8:	ucvtf	s0, x0
   196dc:	fmul	s0, s2, s0
   196e0:	fcmpe	s1, s0
   196e4:	b.pl	197b0 <hash_delete@@Base+0x1a8>  // b.nfrst
   196e8:	ldr	x0, [sp, #24]
   196ec:	ldr	x0, [x0, #40]
   196f0:	str	x0, [sp, #56]
   196f4:	ldr	x0, [sp, #56]
   196f8:	ldrb	w0, [x0, #16]
   196fc:	cmp	w0, #0x0
   19700:	b.eq	19724 <hash_delete@@Base+0x11c>  // b.none
   19704:	ldr	x0, [sp, #24]
   19708:	ldr	x0, [x0, #16]
   1970c:	ucvtf	s1, x0
   19710:	ldr	x0, [sp, #56]
   19714:	ldr	s0, [x0, #4]
   19718:	fmul	s0, s1, s0
   1971c:	fcvtzu	x0, s0
   19720:	b	1974c <hash_delete@@Base+0x144>
   19724:	ldr	x0, [sp, #24]
   19728:	ldr	x0, [x0, #16]
   1972c:	ucvtf	s1, x0
   19730:	ldr	x0, [sp, #56]
   19734:	ldr	s0, [x0, #4]
   19738:	fmul	s1, s1, s0
   1973c:	ldr	x0, [sp, #56]
   19740:	ldr	s0, [x0, #8]
   19744:	fmul	s0, s1, s0
   19748:	fcvtzu	x0, s0
   1974c:	str	x0, [sp, #48]
   19750:	ldr	x1, [sp, #48]
   19754:	ldr	x0, [sp, #24]
   19758:	bl	afa0 <hash_rehash@plt>
   1975c:	and	w0, w0, #0xff
   19760:	eor	w0, w0, #0x1
   19764:	and	w0, w0, #0xff
   19768:	cmp	w0, #0x0
   1976c:	b.eq	197b0 <hash_delete@@Base+0x1a8>  // b.none
   19770:	ldr	x0, [sp, #24]
   19774:	ldr	x0, [x0, #72]
   19778:	str	x0, [sp, #72]
   1977c:	b	1979c <hash_delete@@Base+0x194>
   19780:	ldr	x0, [sp, #72]
   19784:	ldr	x0, [x0, #8]
   19788:	str	x0, [sp, #40]
   1978c:	ldr	x0, [sp, #72]
   19790:	bl	b130 <free@plt>
   19794:	ldr	x0, [sp, #40]
   19798:	str	x0, [sp, #72]
   1979c:	ldr	x0, [sp, #72]
   197a0:	cmp	x0, #0x0
   197a4:	b.ne	19780 <hash_delete@@Base+0x178>  // b.any
   197a8:	ldr	x0, [sp, #24]
   197ac:	str	xzr, [x0, #72]
   197b0:	ldr	x0, [sp, #64]
   197b4:	ldp	x29, x30, [sp], #80
   197b8:	ret
   197bc:	sub	sp, sp, #0x20
   197c0:	str	x0, [sp, #8]
   197c4:	str	xzr, [sp, #24]
   197c8:	b	19808 <hash_delete@@Base+0x200>
   197cc:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   197d0:	add	x0, x0, #0x700
   197d4:	ldr	x1, [sp, #24]
   197d8:	ldr	x0, [x0, x1, lsl #3]
   197dc:	ldr	x1, [sp, #8]
   197e0:	cmp	x1, x0
   197e4:	b.hi	197fc <hash_delete@@Base+0x1f4>  // b.pmore
   197e8:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   197ec:	add	x0, x0, #0x700
   197f0:	ldr	x1, [sp, #24]
   197f4:	ldr	x0, [x0, x1, lsl #3]
   197f8:	b	19818 <hash_delete@@Base+0x210>
   197fc:	ldr	x0, [sp, #24]
   19800:	add	x0, x0, #0x1
   19804:	str	x0, [sp, #24]
   19808:	ldr	x0, [sp, #24]
   1980c:	cmp	x0, #0xe7
   19810:	b.ls	197cc <hash_delete@@Base+0x1c4>  // b.plast
   19814:	mov	x0, #0xffffffffffffffff    	// #-1
   19818:	add	sp, sp, #0x20
   1981c:	ret
   19820:	stp	x29, x30, [sp, #-96]!
   19824:	mov	x29, sp
   19828:	str	x0, [sp, #24]
   1982c:	str	x1, [sp, #16]
   19830:	ldr	x0, [sp, #16]
   19834:	bl	197bc <hash_delete@@Base+0x1b4>
   19838:	str	x0, [sp, #72]
   1983c:	ldr	x0, [sp, #24]
   19840:	ldr	x0, [x0, #48]
   19844:	ldr	x1, [sp, #72]
   19848:	cmp	x1, x0
   1984c:	b.ls	19984 <hash_delete@@Base+0x37c>  // b.plast
   19850:	ldr	x0, [sp, #24]
   19854:	ldr	x0, [x0, #40]
   19858:	str	x0, [sp, #64]
   1985c:	ldr	x1, [sp, #72]
   19860:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   19864:	cmp	x1, x0
   19868:	b.hi	19974 <hash_delete@@Base+0x36c>  // b.pmore
   1986c:	ldr	x0, [sp, #72]
   19870:	lsl	x0, x0, #3
   19874:	cmn	x0, #0x1
   19878:	b.eq	19974 <hash_delete@@Base+0x36c>  // b.none
   1987c:	mov	x1, #0x8                   	// #8
   19880:	ldr	x0, [sp, #72]
   19884:	bl	ad80 <calloc@plt>
   19888:	str	x0, [sp, #56]
   1988c:	ldr	x0, [sp, #56]
   19890:	cmp	x0, #0x0
   19894:	b.eq	1997c <hash_delete@@Base+0x374>  // b.none
   19898:	ldr	x0, [sp, #24]
   1989c:	ldr	x0, [x0, #48]
   198a0:	str	x0, [sp, #88]
   198a4:	b	19944 <hash_delete@@Base+0x33c>
   198a8:	ldr	x0, [sp, #88]
   198ac:	sub	x0, x0, #0x1
   198b0:	str	x0, [sp, #88]
   198b4:	ldr	x0, [sp, #88]
   198b8:	lsl	x0, x0, #3
   198bc:	ldr	x1, [sp, #64]
   198c0:	add	x0, x1, x0
   198c4:	ldr	x0, [x0]
   198c8:	str	x0, [sp, #80]
   198cc:	b	19938 <hash_delete@@Base+0x330>
   198d0:	ldr	x0, [sp, #80]
   198d4:	ldr	x0, [x0]
   198d8:	str	x0, [sp, #48]
   198dc:	ldr	x0, [sp, #80]
   198e0:	ldr	x0, [x0, #8]
   198e4:	ldr	x1, [sp, #72]
   198e8:	udiv	x2, x0, x1
   198ec:	ldr	x1, [sp, #72]
   198f0:	mul	x1, x2, x1
   198f4:	sub	x0, x0, x1
   198f8:	str	x0, [sp, #40]
   198fc:	ldr	x0, [sp, #40]
   19900:	lsl	x0, x0, #3
   19904:	ldr	x1, [sp, #56]
   19908:	add	x0, x1, x0
   1990c:	ldr	x1, [x0]
   19910:	ldr	x0, [sp, #80]
   19914:	str	x1, [x0]
   19918:	ldr	x0, [sp, #40]
   1991c:	lsl	x0, x0, #3
   19920:	ldr	x1, [sp, #56]
   19924:	add	x0, x1, x0
   19928:	ldr	x1, [sp, #80]
   1992c:	str	x1, [x0]
   19930:	ldr	x0, [sp, #48]
   19934:	str	x0, [sp, #80]
   19938:	ldr	x0, [sp, #80]
   1993c:	cmp	x0, #0x0
   19940:	b.ne	198d0 <hash_delete@@Base+0x2c8>  // b.any
   19944:	ldr	x0, [sp, #88]
   19948:	cmp	x0, #0x0
   1994c:	b.ne	198a8 <hash_delete@@Base+0x2a0>  // b.any
   19950:	ldr	x0, [sp, #24]
   19954:	ldr	x1, [sp, #56]
   19958:	str	x1, [x0, #40]
   1995c:	ldr	x0, [sp, #24]
   19960:	ldr	x1, [sp, #72]
   19964:	str	x1, [x0, #48]
   19968:	ldr	x0, [sp, #64]
   1996c:	bl	b130 <free@plt>
   19970:	b	19984 <hash_delete@@Base+0x37c>
   19974:	nop
   19978:	b	19988 <hash_delete@@Base+0x380>
   1997c:	nop
   19980:	b	19988 <hash_delete@@Base+0x380>
   19984:	nop
   19988:	ldp	x29, x30, [sp], #96
   1998c:	ret
   19990:	stp	x29, x30, [sp, #-48]!
   19994:	mov	x29, sp
   19998:	str	x0, [sp, #24]
   1999c:	ldr	x0, [sp, #24]
   199a0:	ldr	x0, [x0, #56]
   199a4:	str	x0, [sp, #40]
   199a8:	ldr	x0, [sp, #40]
   199ac:	lsr	x0, x0, #1
   199b0:	mov	x1, x0
   199b4:	ldr	x0, [sp, #40]
   199b8:	bl	ac80 <xsum@plt>
   199bc:	str	x0, [sp, #32]
   199c0:	ldr	x0, [sp, #24]
   199c4:	ldr	x0, [x0, #48]
   199c8:	ldr	x1, [sp, #32]
   199cc:	cmp	x1, x0
   199d0:	b.ls	199e0 <hash_delete@@Base+0x3d8>  // b.plast
   199d4:	ldr	x1, [sp, #32]
   199d8:	ldr	x0, [sp, #24]
   199dc:	bl	19820 <hash_delete@@Base+0x218>
   199e0:	nop
   199e4:	ldp	x29, x30, [sp], #48
   199e8:	ret
   199ec:	stp	x29, x30, [sp, #-80]!
   199f0:	mov	x29, sp
   199f4:	str	x0, [sp, #56]
   199f8:	str	x1, [sp, #48]
   199fc:	str	x2, [sp, #40]
   19a00:	str	x3, [sp, #32]
   19a04:	str	x4, [sp, #24]
   19a08:	mov	x0, #0x40                  	// #64
   19a0c:	bl	ab40 <malloc@plt>
   19a10:	str	x0, [sp, #72]
   19a14:	ldr	x0, [sp, #72]
   19a18:	cmp	x0, #0x0
   19a1c:	b.ne	19a28 <hash_delete@@Base+0x420>  // b.any
   19a20:	mov	x0, #0x0                   	// #0
   19a24:	b	19abc <hash_delete@@Base+0x4b4>
   19a28:	ldr	x0, [sp, #72]
   19a2c:	ldr	x1, [sp, #56]
   19a30:	str	x1, [x0]
   19a34:	ldr	x0, [sp, #72]
   19a38:	ldr	x1, [sp, #48]
   19a3c:	str	x1, [x0, #8]
   19a40:	ldr	x0, [sp, #72]
   19a44:	ldr	x1, [sp, #32]
   19a48:	str	x1, [x0, #16]
   19a4c:	ldr	x0, [sp, #72]
   19a50:	ldr	x1, [sp, #24]
   19a54:	str	x1, [x0, #24]
   19a58:	ldr	x0, [sp, #72]
   19a5c:	ldr	x1, [sp, #40]
   19a60:	str	x1, [x0, #32]
   19a64:	ldr	x0, [sp, #72]
   19a68:	mov	x1, #0xb                   	// #11
   19a6c:	str	x1, [x0, #48]
   19a70:	ldr	x0, [sp, #72]
   19a74:	ldr	x0, [x0, #48]
   19a78:	mov	x1, #0x8                   	// #8
   19a7c:	bl	ad80 <calloc@plt>
   19a80:	mov	x1, x0
   19a84:	ldr	x0, [sp, #72]
   19a88:	str	x1, [x0, #40]
   19a8c:	ldr	x0, [sp, #72]
   19a90:	ldr	x0, [x0, #40]
   19a94:	cmp	x0, #0x0
   19a98:	b.eq	19aac <hash_delete@@Base+0x4a4>  // b.none
   19a9c:	ldr	x0, [sp, #72]
   19aa0:	str	xzr, [x0, #56]
   19aa4:	ldr	x0, [sp, #72]
   19aa8:	b	19abc <hash_delete@@Base+0x4b4>
   19aac:	nop
   19ab0:	ldr	x0, [sp, #72]
   19ab4:	bl	b130 <free@plt>
   19ab8:	mov	x0, #0x0                   	// #0
   19abc:	ldp	x29, x30, [sp], #80
   19ac0:	ret
   19ac4:	sub	sp, sp, #0x10
   19ac8:	str	x0, [sp, #8]
   19acc:	ldr	x0, [sp, #8]
   19ad0:	ldr	x0, [x0, #56]
   19ad4:	add	sp, sp, #0x10
   19ad8:	ret
   19adc:	stp	x29, x30, [sp, #-80]!
   19ae0:	mov	x29, sp
   19ae4:	str	x0, [sp, #40]
   19ae8:	str	x1, [sp, #32]
   19aec:	str	x2, [sp, #24]
   19af0:	ldr	x0, [sp, #40]
   19af4:	ldr	x0, [x0, #32]
   19af8:	cmp	x0, #0x0
   19afc:	b.eq	19b14 <hash_delete@@Base+0x50c>  // b.none
   19b00:	ldr	x0, [sp, #40]
   19b04:	ldr	x1, [x0, #32]
   19b08:	ldr	x0, [sp, #32]
   19b0c:	blr	x1
   19b10:	b	19b18 <hash_delete@@Base+0x510>
   19b14:	ldr	x0, [sp, #32]
   19b18:	str	x0, [sp, #64]
   19b1c:	ldr	x0, [sp, #40]
   19b20:	ldr	x1, [x0, #48]
   19b24:	ldr	x0, [sp, #64]
   19b28:	udiv	x2, x0, x1
   19b2c:	mul	x1, x2, x1
   19b30:	sub	x0, x0, x1
   19b34:	str	x0, [sp, #56]
   19b38:	ldr	x0, [sp, #40]
   19b3c:	ldr	x0, [x0, #8]
   19b40:	str	x0, [sp, #48]
   19b44:	ldr	x0, [sp, #40]
   19b48:	ldr	x1, [x0, #40]
   19b4c:	ldr	x0, [sp, #56]
   19b50:	lsl	x0, x0, #3
   19b54:	add	x0, x1, x0
   19b58:	ldr	x0, [x0]
   19b5c:	str	x0, [sp, #72]
   19b60:	b	19be8 <hash_delete@@Base+0x5e0>
   19b64:	ldr	x0, [sp, #72]
   19b68:	ldr	x0, [x0, #8]
   19b6c:	ldr	x1, [sp, #64]
   19b70:	cmp	x1, x0
   19b74:	b.ne	19bdc <hash_delete@@Base+0x5d4>  // b.any
   19b78:	ldr	x0, [sp, #48]
   19b7c:	cmp	x0, #0x0
   19b80:	b.eq	19ba4 <hash_delete@@Base+0x59c>  // b.none
   19b84:	ldr	x0, [sp, #72]
   19b88:	ldr	x0, [x0, #16]
   19b8c:	ldr	x2, [sp, #48]
   19b90:	mov	x1, x0
   19b94:	ldr	x0, [sp, #32]
   19b98:	blr	x2
   19b9c:	and	w0, w0, #0xff
   19ba0:	b	19bbc <hash_delete@@Base+0x5b4>
   19ba4:	ldr	x0, [sp, #72]
   19ba8:	ldr	x0, [x0, #16]
   19bac:	ldr	x1, [sp, #32]
   19bb0:	cmp	x1, x0
   19bb4:	cset	w0, eq  // eq = none
   19bb8:	and	w0, w0, #0xff
   19bbc:	cmp	w0, #0x0
   19bc0:	b.eq	19bdc <hash_delete@@Base+0x5d4>  // b.none
   19bc4:	ldr	x0, [sp, #72]
   19bc8:	ldr	x1, [x0, #24]
   19bcc:	ldr	x0, [sp, #24]
   19bd0:	str	x1, [x0]
   19bd4:	mov	w0, #0x1                   	// #1
   19bd8:	b	19bf8 <hash_delete@@Base+0x5f0>
   19bdc:	ldr	x0, [sp, #72]
   19be0:	ldr	x0, [x0]
   19be4:	str	x0, [sp, #72]
   19be8:	ldr	x0, [sp, #72]
   19bec:	cmp	x0, #0x0
   19bf0:	b.ne	19b64 <hash_delete@@Base+0x55c>  // b.any
   19bf4:	mov	w0, #0x0                   	// #0
   19bf8:	ldp	x29, x30, [sp], #80
   19bfc:	ret
   19c00:	stp	x29, x30, [sp, #-96]!
   19c04:	mov	x29, sp
   19c08:	str	x0, [sp, #40]
   19c0c:	str	x1, [sp, #32]
   19c10:	str	x2, [sp, #24]
   19c14:	str	x3, [sp, #16]
   19c18:	ldr	x0, [sp, #40]
   19c1c:	ldr	x0, [x0, #32]
   19c20:	cmp	x0, #0x0
   19c24:	b.eq	19c3c <hash_delete@@Base+0x634>  // b.none
   19c28:	ldr	x0, [sp, #40]
   19c2c:	ldr	x1, [x0, #32]
   19c30:	ldr	x0, [sp, #32]
   19c34:	blr	x1
   19c38:	b	19c40 <hash_delete@@Base+0x638>
   19c3c:	ldr	x0, [sp, #32]
   19c40:	str	x0, [sp, #80]
   19c44:	ldr	x0, [sp, #40]
   19c48:	ldr	x1, [x0, #48]
   19c4c:	ldr	x0, [sp, #80]
   19c50:	udiv	x2, x0, x1
   19c54:	mul	x1, x2, x1
   19c58:	sub	x0, x0, x1
   19c5c:	str	x0, [sp, #72]
   19c60:	ldr	x0, [sp, #40]
   19c64:	ldr	x0, [x0, #8]
   19c68:	str	x0, [sp, #64]
   19c6c:	ldr	x0, [sp, #40]
   19c70:	ldr	x1, [x0, #40]
   19c74:	ldr	x0, [sp, #72]
   19c78:	lsl	x0, x0, #3
   19c7c:	add	x0, x1, x0
   19c80:	ldr	x0, [x0]
   19c84:	str	x0, [sp, #88]
   19c88:	b	19d1c <hash_delete@@Base+0x714>
   19c8c:	ldr	x0, [sp, #88]
   19c90:	ldr	x0, [x0, #8]
   19c94:	ldr	x1, [sp, #80]
   19c98:	cmp	x1, x0
   19c9c:	b.ne	19d10 <hash_delete@@Base+0x708>  // b.any
   19ca0:	ldr	x0, [sp, #64]
   19ca4:	cmp	x0, #0x0
   19ca8:	b.eq	19ccc <hash_delete@@Base+0x6c4>  // b.none
   19cac:	ldr	x0, [sp, #88]
   19cb0:	ldr	x0, [x0, #16]
   19cb4:	ldr	x2, [sp, #64]
   19cb8:	mov	x1, x0
   19cbc:	ldr	x0, [sp, #32]
   19cc0:	blr	x2
   19cc4:	and	w0, w0, #0xff
   19cc8:	b	19ce4 <hash_delete@@Base+0x6dc>
   19ccc:	ldr	x0, [sp, #88]
   19cd0:	ldr	x0, [x0, #16]
   19cd4:	ldr	x1, [sp, #32]
   19cd8:	cmp	x1, x0
   19cdc:	cset	w0, eq  // eq = none
   19ce0:	and	w0, w0, #0xff
   19ce4:	cmp	w0, #0x0
   19ce8:	b.eq	19d10 <hash_delete@@Base+0x708>  // b.none
   19cec:	ldr	x0, [sp, #88]
   19cf0:	ldr	x1, [x0, #24]
   19cf4:	ldr	x0, [sp, #16]
   19cf8:	str	x1, [x0]
   19cfc:	ldr	x0, [sp, #88]
   19d00:	ldr	x1, [sp, #24]
   19d04:	str	x1, [x0, #24]
   19d08:	mov	w0, #0x0                   	// #0
   19d0c:	b	19dc8 <hash_delete@@Base+0x7c0>
   19d10:	ldr	x0, [sp, #88]
   19d14:	ldr	x0, [x0]
   19d18:	str	x0, [sp, #88]
   19d1c:	ldr	x0, [sp, #88]
   19d20:	cmp	x0, #0x0
   19d24:	b.ne	19c8c <hash_delete@@Base+0x684>  // b.any
   19d28:	mov	x0, #0x20                  	// #32
   19d2c:	bl	ab40 <malloc@plt>
   19d30:	str	x0, [sp, #56]
   19d34:	ldr	x0, [sp, #56]
   19d38:	cmp	x0, #0x0
   19d3c:	b.ne	19d48 <hash_delete@@Base+0x740>  // b.any
   19d40:	mov	w0, #0xffffffff            	// #-1
   19d44:	b	19dc8 <hash_delete@@Base+0x7c0>
   19d48:	ldr	x0, [sp, #56]
   19d4c:	ldr	x1, [sp, #32]
   19d50:	str	x1, [x0, #16]
   19d54:	ldr	x0, [sp, #56]
   19d58:	ldr	x1, [sp, #24]
   19d5c:	str	x1, [x0, #24]
   19d60:	ldr	x0, [sp, #56]
   19d64:	ldr	x1, [sp, #80]
   19d68:	str	x1, [x0, #8]
   19d6c:	ldr	x0, [sp, #40]
   19d70:	ldr	x1, [x0, #40]
   19d74:	ldr	x0, [sp, #72]
   19d78:	lsl	x0, x0, #3
   19d7c:	add	x0, x1, x0
   19d80:	ldr	x1, [x0]
   19d84:	ldr	x0, [sp, #56]
   19d88:	str	x1, [x0]
   19d8c:	ldr	x0, [sp, #40]
   19d90:	ldr	x1, [x0, #40]
   19d94:	ldr	x0, [sp, #72]
   19d98:	lsl	x0, x0, #3
   19d9c:	add	x0, x1, x0
   19da0:	ldr	x1, [sp, #56]
   19da4:	str	x1, [x0]
   19da8:	ldr	x0, [sp, #40]
   19dac:	ldr	x0, [x0, #56]
   19db0:	add	x1, x0, #0x1
   19db4:	ldr	x0, [sp, #40]
   19db8:	str	x1, [x0, #56]
   19dbc:	ldr	x0, [sp, #40]
   19dc0:	bl	19990 <hash_delete@@Base+0x388>
   19dc4:	mov	w0, #0x1                   	// #1
   19dc8:	ldp	x29, x30, [sp], #96
   19dcc:	ret
   19dd0:	stp	x29, x30, [sp, #-96]!
   19dd4:	mov	x29, sp
   19dd8:	str	x0, [sp, #40]
   19ddc:	str	x1, [sp, #32]
   19de0:	str	x2, [sp, #24]
   19de4:	ldr	x0, [sp, #40]
   19de8:	ldr	x0, [x0, #32]
   19dec:	cmp	x0, #0x0
   19df0:	b.eq	19e08 <hash_delete@@Base+0x800>  // b.none
   19df4:	ldr	x0, [sp, #40]
   19df8:	ldr	x1, [x0, #32]
   19dfc:	ldr	x0, [sp, #32]
   19e00:	blr	x1
   19e04:	b	19e0c <hash_delete@@Base+0x804>
   19e08:	ldr	x0, [sp, #32]
   19e0c:	str	x0, [sp, #80]
   19e10:	ldr	x0, [sp, #40]
   19e14:	ldr	x1, [x0, #48]
   19e18:	ldr	x0, [sp, #80]
   19e1c:	udiv	x2, x0, x1
   19e20:	mul	x1, x2, x1
   19e24:	sub	x0, x0, x1
   19e28:	str	x0, [sp, #72]
   19e2c:	ldr	x0, [sp, #40]
   19e30:	ldr	x0, [x0, #8]
   19e34:	str	x0, [sp, #64]
   19e38:	ldr	x0, [sp, #40]
   19e3c:	ldr	x1, [x0, #40]
   19e40:	ldr	x0, [sp, #72]
   19e44:	lsl	x0, x0, #3
   19e48:	add	x0, x1, x0
   19e4c:	str	x0, [sp, #88]
   19e50:	b	19f34 <hash_delete@@Base+0x92c>
   19e54:	ldr	x0, [sp, #88]
   19e58:	ldr	x0, [x0]
   19e5c:	str	x0, [sp, #56]
   19e60:	ldr	x0, [sp, #56]
   19e64:	ldr	x0, [x0, #8]
   19e68:	ldr	x1, [sp, #80]
   19e6c:	cmp	x1, x0
   19e70:	b.ne	19f28 <hash_delete@@Base+0x920>  // b.any
   19e74:	ldr	x0, [sp, #64]
   19e78:	cmp	x0, #0x0
   19e7c:	b.eq	19ea0 <hash_delete@@Base+0x898>  // b.none
   19e80:	ldr	x0, [sp, #56]
   19e84:	ldr	x0, [x0, #16]
   19e88:	ldr	x2, [sp, #64]
   19e8c:	mov	x1, x0
   19e90:	ldr	x0, [sp, #32]
   19e94:	blr	x2
   19e98:	and	w0, w0, #0xff
   19e9c:	b	19eb8 <hash_delete@@Base+0x8b0>
   19ea0:	ldr	x0, [sp, #56]
   19ea4:	ldr	x0, [x0, #16]
   19ea8:	ldr	x1, [sp, #32]
   19eac:	cmp	x1, x0
   19eb0:	cset	w0, eq  // eq = none
   19eb4:	and	w0, w0, #0xff
   19eb8:	cmp	w0, #0x0
   19ebc:	b.eq	19f28 <hash_delete@@Base+0x920>  // b.none
   19ec0:	ldr	x0, [sp, #56]
   19ec4:	ldr	x1, [x0, #24]
   19ec8:	ldr	x0, [sp, #24]
   19ecc:	str	x1, [x0]
   19ed0:	ldr	x0, [sp, #56]
   19ed4:	ldr	x1, [x0]
   19ed8:	ldr	x0, [sp, #88]
   19edc:	str	x1, [x0]
   19ee0:	ldr	x0, [sp, #40]
   19ee4:	ldr	x0, [x0, #56]
   19ee8:	sub	x1, x0, #0x1
   19eec:	ldr	x0, [sp, #40]
   19ef0:	str	x1, [x0, #56]
   19ef4:	ldr	x0, [sp, #40]
   19ef8:	ldr	x0, [x0, #16]
   19efc:	cmp	x0, #0x0
   19f00:	b.eq	19f18 <hash_delete@@Base+0x910>  // b.none
   19f04:	ldr	x0, [sp, #40]
   19f08:	ldr	x1, [x0, #16]
   19f0c:	ldr	x0, [sp, #56]
   19f10:	ldr	x0, [x0, #16]
   19f14:	blr	x1
   19f18:	ldr	x0, [sp, #56]
   19f1c:	bl	b130 <free@plt>
   19f20:	mov	w0, #0x1                   	// #1
   19f24:	b	19f48 <hash_delete@@Base+0x940>
   19f28:	ldr	x0, [sp, #88]
   19f2c:	ldr	x0, [x0]
   19f30:	str	x0, [sp, #88]
   19f34:	ldr	x0, [sp, #88]
   19f38:	ldr	x0, [x0]
   19f3c:	cmp	x0, #0x0
   19f40:	b.ne	19e54 <hash_delete@@Base+0x84c>  // b.any
   19f44:	mov	w0, #0x0                   	// #0
   19f48:	ldp	x29, x30, [sp], #96
   19f4c:	ret
   19f50:	stp	x29, x30, [sp, #-80]!
   19f54:	mov	x29, sp
   19f58:	str	x0, [sp, #24]
   19f5c:	ldr	x0, [sp, #24]
   19f60:	ldr	x0, [x0, #56]
   19f64:	cmp	x0, #0x0
   19f68:	b.eq	1a034 <hash_delete@@Base+0xa2c>  // b.none
   19f6c:	ldr	x0, [sp, #24]
   19f70:	ldr	x0, [x0, #16]
   19f74:	str	x0, [sp, #56]
   19f78:	ldr	x0, [sp, #24]
   19f7c:	ldr	x0, [x0, #24]
   19f80:	str	x0, [sp, #48]
   19f84:	ldr	x0, [sp, #24]
   19f88:	ldr	x0, [x0, #40]
   19f8c:	str	x0, [sp, #40]
   19f90:	ldr	x0, [sp, #24]
   19f94:	ldr	x0, [x0, #48]
   19f98:	str	x0, [sp, #72]
   19f9c:	b	1a028 <hash_delete@@Base+0xa20>
   19fa0:	ldr	x0, [sp, #72]
   19fa4:	sub	x0, x0, #0x1
   19fa8:	str	x0, [sp, #72]
   19fac:	ldr	x0, [sp, #72]
   19fb0:	lsl	x0, x0, #3
   19fb4:	ldr	x1, [sp, #40]
   19fb8:	add	x0, x1, x0
   19fbc:	ldr	x0, [x0]
   19fc0:	str	x0, [sp, #64]
   19fc4:	b	1a01c <hash_delete@@Base+0xa14>
   19fc8:	ldr	x0, [sp, #64]
   19fcc:	ldr	x0, [x0]
   19fd0:	str	x0, [sp, #32]
   19fd4:	ldr	x0, [sp, #48]
   19fd8:	cmp	x0, #0x0
   19fdc:	b.eq	19ff0 <hash_delete@@Base+0x9e8>  // b.none
   19fe0:	ldr	x0, [sp, #64]
   19fe4:	ldr	x0, [x0, #24]
   19fe8:	ldr	x1, [sp, #48]
   19fec:	blr	x1
   19ff0:	ldr	x0, [sp, #56]
   19ff4:	cmp	x0, #0x0
   19ff8:	b.eq	1a00c <hash_delete@@Base+0xa04>  // b.none
   19ffc:	ldr	x0, [sp, #64]
   1a000:	ldr	x0, [x0, #16]
   1a004:	ldr	x1, [sp, #56]
   1a008:	blr	x1
   1a00c:	ldr	x0, [sp, #64]
   1a010:	bl	b130 <free@plt>
   1a014:	ldr	x0, [sp, #32]
   1a018:	str	x0, [sp, #64]
   1a01c:	ldr	x0, [sp, #64]
   1a020:	cmp	x0, #0x0
   1a024:	b.ne	19fc8 <hash_delete@@Base+0x9c0>  // b.any
   1a028:	ldr	x0, [sp, #72]
   1a02c:	cmp	x0, #0x0
   1a030:	b.ne	19fa0 <hash_delete@@Base+0x998>  // b.any
   1a034:	ldr	x0, [sp, #24]
   1a038:	ldr	x0, [x0, #40]
   1a03c:	bl	b130 <free@plt>
   1a040:	ldr	x0, [sp, #24]
   1a044:	bl	b130 <free@plt>
   1a048:	nop
   1a04c:	ldp	x29, x30, [sp], #80
   1a050:	ret
   1a054:	sub	sp, sp, #0x50
   1a058:	mov	x1, x8
   1a05c:	str	x0, [sp, #8]
   1a060:	ldr	x0, [sp, #8]
   1a064:	ldr	x0, [x0]
   1a068:	str	x0, [sp, #24]
   1a06c:	ldr	x0, [sp, #8]
   1a070:	str	x0, [sp, #32]
   1a074:	str	xzr, [sp, #48]
   1a078:	str	xzr, [sp, #64]
   1a07c:	ldr	x0, [sp, #8]
   1a080:	ldr	x0, [x0, #48]
   1a084:	str	x0, [sp, #72]
   1a088:	add	x0, sp, #0x18
   1a08c:	ldp	x2, x3, [x0]
   1a090:	stp	x2, x3, [x1]
   1a094:	ldp	x2, x3, [x0, #16]
   1a098:	stp	x2, x3, [x1, #16]
   1a09c:	ldp	x2, x3, [x0, #32]
   1a0a0:	stp	x2, x3, [x1, #32]
   1a0a4:	ldr	x0, [x0, #48]
   1a0a8:	str	x0, [x1, #48]
   1a0ac:	add	sp, sp, #0x50
   1a0b0:	ret
   1a0b4:	sub	sp, sp, #0x50
   1a0b8:	str	x0, [sp, #24]
   1a0bc:	str	x1, [sp, #16]
   1a0c0:	str	x2, [sp, #8]
   1a0c4:	ldr	x0, [sp, #24]
   1a0c8:	ldr	x0, [x0, #24]
   1a0cc:	cmp	x0, #0x0
   1a0d0:	b.eq	1a118 <hash_delete@@Base+0xb10>  // b.none
   1a0d4:	ldr	x0, [sp, #24]
   1a0d8:	ldr	x0, [x0, #24]
   1a0dc:	str	x0, [sp, #40]
   1a0e0:	ldr	x0, [sp, #40]
   1a0e4:	ldr	x1, [x0, #16]
   1a0e8:	ldr	x0, [sp, #16]
   1a0ec:	str	x1, [x0]
   1a0f0:	ldr	x0, [sp, #40]
   1a0f4:	ldr	x1, [x0, #24]
   1a0f8:	ldr	x0, [sp, #8]
   1a0fc:	str	x1, [x0]
   1a100:	ldr	x0, [sp, #40]
   1a104:	ldr	x1, [x0]
   1a108:	ldr	x0, [sp, #24]
   1a10c:	str	x1, [x0, #24]
   1a110:	mov	w0, #0x1                   	// #1
   1a114:	b	1a1e0 <hash_delete@@Base+0xbd8>
   1a118:	ldr	x0, [sp, #24]
   1a11c:	ldr	x0, [x0, #48]
   1a120:	str	x0, [sp, #64]
   1a124:	ldr	x0, [sp, #24]
   1a128:	ldr	x0, [x0, #40]
   1a12c:	str	x0, [sp, #72]
   1a130:	ldr	x1, [sp, #72]
   1a134:	ldr	x0, [sp, #64]
   1a138:	cmp	x1, x0
   1a13c:	b.cs	1a1d0 <hash_delete@@Base+0xbc8>  // b.hs, b.nlast
   1a140:	ldr	x0, [sp, #24]
   1a144:	ldr	x0, [x0, #8]
   1a148:	ldr	x0, [x0, #40]
   1a14c:	str	x0, [sp, #56]
   1a150:	ldr	x0, [sp, #72]
   1a154:	add	x1, x0, #0x1
   1a158:	str	x1, [sp, #72]
   1a15c:	lsl	x0, x0, #3
   1a160:	ldr	x1, [sp, #56]
   1a164:	add	x0, x1, x0
   1a168:	ldr	x0, [x0]
   1a16c:	str	x0, [sp, #48]
   1a170:	ldr	x0, [sp, #48]
   1a174:	cmp	x0, #0x0
   1a178:	b.eq	1a1c0 <hash_delete@@Base+0xbb8>  // b.none
   1a17c:	ldr	x0, [sp, #48]
   1a180:	ldr	x1, [x0, #16]
   1a184:	ldr	x0, [sp, #16]
   1a188:	str	x1, [x0]
   1a18c:	ldr	x0, [sp, #48]
   1a190:	ldr	x1, [x0, #24]
   1a194:	ldr	x0, [sp, #8]
   1a198:	str	x1, [x0]
   1a19c:	ldr	x0, [sp, #48]
   1a1a0:	ldr	x1, [x0]
   1a1a4:	ldr	x0, [sp, #24]
   1a1a8:	str	x1, [x0, #24]
   1a1ac:	ldr	x0, [sp, #24]
   1a1b0:	ldr	x1, [sp, #72]
   1a1b4:	str	x1, [x0, #40]
   1a1b8:	mov	w0, #0x1                   	// #1
   1a1bc:	b	1a1e0 <hash_delete@@Base+0xbd8>
   1a1c0:	ldr	x1, [sp, #72]
   1a1c4:	ldr	x0, [sp, #64]
   1a1c8:	cmp	x1, x0
   1a1cc:	b.cc	1a150 <hash_delete@@Base+0xb48>  // b.lo, b.ul, b.last
   1a1d0:	ldr	x0, [sp, #24]
   1a1d4:	ldr	x1, [sp, #64]
   1a1d8:	str	x1, [x0, #40]
   1a1dc:	mov	w0, #0x0                   	// #0
   1a1e0:	add	sp, sp, #0x50
   1a1e4:	ret
   1a1e8:	sub	sp, sp, #0x10
   1a1ec:	str	x0, [sp, #8]
   1a1f0:	nop
   1a1f4:	add	sp, sp, #0x10
   1a1f8:	ret

000000000001a1fc <hash_pjw@@Base>:
   1a1fc:	sub	sp, sp, #0x20
   1a200:	str	x0, [sp, #8]
   1a204:	str	x1, [sp]
   1a208:	str	xzr, [sp, #16]
   1a20c:	ldr	x0, [sp, #8]
   1a210:	str	x0, [sp, #24]
   1a214:	b	1a240 <hash_pjw@@Base+0x44>
   1a218:	ldr	x0, [sp, #24]
   1a21c:	ldrb	w0, [x0]
   1a220:	and	x1, x0, #0xff
   1a224:	ldr	x0, [sp, #16]
   1a228:	ror	x0, x0, #55
   1a22c:	add	x0, x1, x0
   1a230:	str	x0, [sp, #16]
   1a234:	ldr	x0, [sp, #24]
   1a238:	add	x0, x0, #0x1
   1a23c:	str	x0, [sp, #24]
   1a240:	ldr	x0, [sp, #24]
   1a244:	ldrb	w0, [x0]
   1a248:	cmp	w0, #0x0
   1a24c:	b.ne	1a218 <hash_pjw@@Base+0x1c>  // b.any
   1a250:	ldr	x0, [sp, #16]
   1a254:	ldr	x1, [sp]
   1a258:	udiv	x2, x0, x1
   1a25c:	ldr	x1, [sp]
   1a260:	mul	x1, x2, x1
   1a264:	sub	x0, x0, x1
   1a268:	add	sp, sp, #0x20
   1a26c:	ret

000000000001a270 <hash_pjw_bare@@Base>:
   1a270:	sub	sp, sp, #0x30
   1a274:	str	x0, [sp, #8]
   1a278:	str	x1, [sp]
   1a27c:	ldr	x0, [sp, #8]
   1a280:	str	x0, [sp, #24]
   1a284:	str	xzr, [sp, #40]
   1a288:	str	wzr, [sp, #36]
   1a28c:	b	1a2c0 <hash_pjw_bare@@Base+0x50>
   1a290:	ldr	w0, [sp, #36]
   1a294:	ldr	x1, [sp, #24]
   1a298:	add	x0, x1, x0
   1a29c:	ldrb	w0, [x0]
   1a2a0:	and	x1, x0, #0xff
   1a2a4:	ldr	x0, [sp, #40]
   1a2a8:	ror	x0, x0, #55
   1a2ac:	add	x0, x1, x0
   1a2b0:	str	x0, [sp, #40]
   1a2b4:	ldr	w0, [sp, #36]
   1a2b8:	add	w0, w0, #0x1
   1a2bc:	str	w0, [sp, #36]
   1a2c0:	ldr	w0, [sp, #36]
   1a2c4:	ldr	x1, [sp]
   1a2c8:	cmp	x1, x0
   1a2cc:	b.hi	1a290 <hash_pjw_bare@@Base+0x20>  // b.pmore
   1a2d0:	ldr	x0, [sp, #40]
   1a2d4:	add	sp, sp, #0x30
   1a2d8:	ret
   1a2dc:	sub	sp, sp, #0x20
   1a2e0:	str	x0, [sp, #8]
   1a2e4:	str	xzr, [sp, #24]
   1a2e8:	b	1a328 <hash_pjw_bare@@Base+0xb8>
   1a2ec:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1a2f0:	add	x0, x0, #0xe40
   1a2f4:	ldr	x1, [sp, #24]
   1a2f8:	ldr	x0, [x0, x1, lsl #3]
   1a2fc:	ldr	x1, [sp, #8]
   1a300:	cmp	x1, x0
   1a304:	b.hi	1a31c <hash_pjw_bare@@Base+0xac>  // b.pmore
   1a308:	adrp	x0, 43000 <vasnprintf@@Base+0x2e04>
   1a30c:	add	x0, x0, #0xe40
   1a310:	ldr	x1, [sp, #24]
   1a314:	ldr	x0, [x0, x1, lsl #3]
   1a318:	b	1a338 <hash_pjw_bare@@Base+0xc8>
   1a31c:	ldr	x0, [sp, #24]
   1a320:	add	x0, x0, #0x1
   1a324:	str	x0, [sp, #24]
   1a328:	ldr	x0, [sp, #24]
   1a32c:	cmp	x0, #0xe7
   1a330:	b.ls	1a2ec <hash_pjw_bare@@Base+0x7c>  // b.plast
   1a334:	mov	x0, #0xffffffffffffffff    	// #-1
   1a338:	add	sp, sp, #0x20
   1a33c:	ret
   1a340:	stp	x29, x30, [sp, #-96]!
   1a344:	mov	x29, sp
   1a348:	str	x0, [sp, #24]
   1a34c:	str	x1, [sp, #16]
   1a350:	ldr	x0, [sp, #16]
   1a354:	bl	1a2dc <hash_pjw_bare@@Base+0x6c>
   1a358:	str	x0, [sp, #72]
   1a35c:	ldr	x0, [sp, #24]
   1a360:	ldr	x0, [x0, #40]
   1a364:	ldr	x1, [sp, #72]
   1a368:	cmp	x1, x0
   1a36c:	b.ls	1a4a4 <hash_pjw_bare@@Base+0x234>  // b.plast
   1a370:	ldr	x0, [sp, #24]
   1a374:	ldr	x0, [x0, #32]
   1a378:	str	x0, [sp, #64]
   1a37c:	ldr	x1, [sp, #72]
   1a380:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   1a384:	cmp	x1, x0
   1a388:	b.hi	1a494 <hash_pjw_bare@@Base+0x224>  // b.pmore
   1a38c:	ldr	x0, [sp, #72]
   1a390:	lsl	x0, x0, #3
   1a394:	cmn	x0, #0x1
   1a398:	b.eq	1a494 <hash_pjw_bare@@Base+0x224>  // b.none
   1a39c:	mov	x1, #0x8                   	// #8
   1a3a0:	ldr	x0, [sp, #72]
   1a3a4:	bl	ad80 <calloc@plt>
   1a3a8:	str	x0, [sp, #56]
   1a3ac:	ldr	x0, [sp, #56]
   1a3b0:	cmp	x0, #0x0
   1a3b4:	b.eq	1a49c <hash_pjw_bare@@Base+0x22c>  // b.none
   1a3b8:	ldr	x0, [sp, #24]
   1a3bc:	ldr	x0, [x0, #40]
   1a3c0:	str	x0, [sp, #88]
   1a3c4:	b	1a464 <hash_pjw_bare@@Base+0x1f4>
   1a3c8:	ldr	x0, [sp, #88]
   1a3cc:	sub	x0, x0, #0x1
   1a3d0:	str	x0, [sp, #88]
   1a3d4:	ldr	x0, [sp, #88]
   1a3d8:	lsl	x0, x0, #3
   1a3dc:	ldr	x1, [sp, #64]
   1a3e0:	add	x0, x1, x0
   1a3e4:	ldr	x0, [x0]
   1a3e8:	str	x0, [sp, #80]
   1a3ec:	b	1a458 <hash_pjw_bare@@Base+0x1e8>
   1a3f0:	ldr	x0, [sp, #80]
   1a3f4:	ldr	x0, [x0]
   1a3f8:	str	x0, [sp, #48]
   1a3fc:	ldr	x0, [sp, #80]
   1a400:	ldr	x0, [x0, #8]
   1a404:	ldr	x1, [sp, #72]
   1a408:	udiv	x2, x0, x1
   1a40c:	ldr	x1, [sp, #72]
   1a410:	mul	x1, x2, x1
   1a414:	sub	x0, x0, x1
   1a418:	str	x0, [sp, #40]
   1a41c:	ldr	x0, [sp, #40]
   1a420:	lsl	x0, x0, #3
   1a424:	ldr	x1, [sp, #56]
   1a428:	add	x0, x1, x0
   1a42c:	ldr	x1, [x0]
   1a430:	ldr	x0, [sp, #80]
   1a434:	str	x1, [x0]
   1a438:	ldr	x0, [sp, #40]
   1a43c:	lsl	x0, x0, #3
   1a440:	ldr	x1, [sp, #56]
   1a444:	add	x0, x1, x0
   1a448:	ldr	x1, [sp, #80]
   1a44c:	str	x1, [x0]
   1a450:	ldr	x0, [sp, #48]
   1a454:	str	x0, [sp, #80]
   1a458:	ldr	x0, [sp, #80]
   1a45c:	cmp	x0, #0x0
   1a460:	b.ne	1a3f0 <hash_pjw_bare@@Base+0x180>  // b.any
   1a464:	ldr	x0, [sp, #88]
   1a468:	cmp	x0, #0x0
   1a46c:	b.ne	1a3c8 <hash_pjw_bare@@Base+0x158>  // b.any
   1a470:	ldr	x0, [sp, #24]
   1a474:	ldr	x1, [sp, #56]
   1a478:	str	x1, [x0, #32]
   1a47c:	ldr	x0, [sp, #24]
   1a480:	ldr	x1, [sp, #72]
   1a484:	str	x1, [x0, #40]
   1a488:	ldr	x0, [sp, #64]
   1a48c:	bl	b130 <free@plt>
   1a490:	b	1a4a4 <hash_pjw_bare@@Base+0x234>
   1a494:	nop
   1a498:	b	1a4a8 <hash_pjw_bare@@Base+0x238>
   1a49c:	nop
   1a4a0:	b	1a4a8 <hash_pjw_bare@@Base+0x238>
   1a4a4:	nop
   1a4a8:	ldp	x29, x30, [sp], #96
   1a4ac:	ret
   1a4b0:	stp	x29, x30, [sp, #-48]!
   1a4b4:	mov	x29, sp
   1a4b8:	str	x0, [sp, #24]
   1a4bc:	ldr	x0, [sp, #24]
   1a4c0:	ldr	x0, [x0, #48]
   1a4c4:	str	x0, [sp, #40]
   1a4c8:	ldr	x0, [sp, #40]
   1a4cc:	lsr	x0, x0, #1
   1a4d0:	mov	x1, x0
   1a4d4:	ldr	x0, [sp, #40]
   1a4d8:	bl	ac80 <xsum@plt>
   1a4dc:	str	x0, [sp, #32]
   1a4e0:	ldr	x0, [sp, #24]
   1a4e4:	ldr	x0, [x0, #40]
   1a4e8:	ldr	x1, [sp, #32]
   1a4ec:	cmp	x1, x0
   1a4f0:	b.ls	1a500 <hash_pjw_bare@@Base+0x290>  // b.plast
   1a4f4:	ldr	x1, [sp, #32]
   1a4f8:	ldr	x0, [sp, #24]
   1a4fc:	bl	1a340 <hash_pjw_bare@@Base+0xd0>
   1a500:	nop
   1a504:	ldp	x29, x30, [sp], #48
   1a508:	ret
   1a50c:	stp	x29, x30, [sp, #-64]!
   1a510:	mov	x29, sp
   1a514:	str	x0, [sp, #40]
   1a518:	str	x1, [sp, #32]
   1a51c:	str	x2, [sp, #24]
   1a520:	str	x3, [sp, #16]
   1a524:	mov	x0, #0x38                  	// #56
   1a528:	bl	ab40 <malloc@plt>
   1a52c:	str	x0, [sp, #56]
   1a530:	ldr	x0, [sp, #56]
   1a534:	cmp	x0, #0x0
   1a538:	b.ne	1a544 <hash_pjw_bare@@Base+0x2d4>  // b.any
   1a53c:	mov	x0, #0x0                   	// #0
   1a540:	b	1a5cc <hash_pjw_bare@@Base+0x35c>
   1a544:	ldr	x0, [sp, #56]
   1a548:	ldr	x1, [sp, #40]
   1a54c:	str	x1, [x0]
   1a550:	ldr	x0, [sp, #56]
   1a554:	ldr	x1, [sp, #32]
   1a558:	str	x1, [x0, #8]
   1a55c:	ldr	x0, [sp, #56]
   1a560:	ldr	x1, [sp, #16]
   1a564:	str	x1, [x0, #16]
   1a568:	ldr	x0, [sp, #56]
   1a56c:	ldr	x1, [sp, #24]
   1a570:	str	x1, [x0, #24]
   1a574:	ldr	x0, [sp, #56]
   1a578:	mov	x1, #0xb                   	// #11
   1a57c:	str	x1, [x0, #40]
   1a580:	ldr	x0, [sp, #56]
   1a584:	ldr	x0, [x0, #40]
   1a588:	mov	x1, #0x8                   	// #8
   1a58c:	bl	ad80 <calloc@plt>
   1a590:	mov	x1, x0
   1a594:	ldr	x0, [sp, #56]
   1a598:	str	x1, [x0, #32]
   1a59c:	ldr	x0, [sp, #56]
   1a5a0:	ldr	x0, [x0, #32]
   1a5a4:	cmp	x0, #0x0
   1a5a8:	b.eq	1a5bc <hash_pjw_bare@@Base+0x34c>  // b.none
   1a5ac:	ldr	x0, [sp, #56]
   1a5b0:	str	xzr, [x0, #48]
   1a5b4:	ldr	x0, [sp, #56]
   1a5b8:	b	1a5cc <hash_pjw_bare@@Base+0x35c>
   1a5bc:	nop
   1a5c0:	ldr	x0, [sp, #56]
   1a5c4:	bl	b130 <free@plt>
   1a5c8:	mov	x0, #0x0                   	// #0
   1a5cc:	ldp	x29, x30, [sp], #64
   1a5d0:	ret
   1a5d4:	sub	sp, sp, #0x10
   1a5d8:	str	x0, [sp, #8]
   1a5dc:	ldr	x0, [sp, #8]
   1a5e0:	ldr	x0, [x0, #48]
   1a5e4:	add	sp, sp, #0x10
   1a5e8:	ret
   1a5ec:	stp	x29, x30, [sp, #-64]!
   1a5f0:	mov	x29, sp
   1a5f4:	str	x0, [sp, #24]
   1a5f8:	str	x1, [sp, #16]
   1a5fc:	ldr	x0, [sp, #24]
   1a600:	ldr	x0, [x0, #24]
   1a604:	cmp	x0, #0x0
   1a608:	b.eq	1a620 <hash_pjw_bare@@Base+0x3b0>  // b.none
   1a60c:	ldr	x0, [sp, #24]
   1a610:	ldr	x1, [x0, #24]
   1a614:	ldr	x0, [sp, #16]
   1a618:	blr	x1
   1a61c:	b	1a624 <hash_pjw_bare@@Base+0x3b4>
   1a620:	ldr	x0, [sp, #16]
   1a624:	str	x0, [sp, #48]
   1a628:	ldr	x0, [sp, #24]
   1a62c:	ldr	x1, [x0, #40]
   1a630:	ldr	x0, [sp, #48]
   1a634:	udiv	x2, x0, x1
   1a638:	mul	x1, x2, x1
   1a63c:	sub	x0, x0, x1
   1a640:	str	x0, [sp, #40]
   1a644:	ldr	x0, [sp, #24]
   1a648:	ldr	x0, [x0, #8]
   1a64c:	str	x0, [sp, #32]
   1a650:	ldr	x0, [sp, #24]
   1a654:	ldr	x1, [x0, #32]
   1a658:	ldr	x0, [sp, #40]
   1a65c:	lsl	x0, x0, #3
   1a660:	add	x0, x1, x0
   1a664:	ldr	x0, [x0]
   1a668:	str	x0, [sp, #56]
   1a66c:	b	1a6e4 <hash_pjw_bare@@Base+0x474>
   1a670:	ldr	x0, [sp, #56]
   1a674:	ldr	x0, [x0, #8]
   1a678:	ldr	x1, [sp, #48]
   1a67c:	cmp	x1, x0
   1a680:	b.ne	1a6d8 <hash_pjw_bare@@Base+0x468>  // b.any
   1a684:	ldr	x0, [sp, #32]
   1a688:	cmp	x0, #0x0
   1a68c:	b.eq	1a6b0 <hash_pjw_bare@@Base+0x440>  // b.none
   1a690:	ldr	x0, [sp, #56]
   1a694:	ldr	x0, [x0, #16]
   1a698:	ldr	x2, [sp, #32]
   1a69c:	mov	x1, x0
   1a6a0:	ldr	x0, [sp, #16]
   1a6a4:	blr	x2
   1a6a8:	and	w0, w0, #0xff
   1a6ac:	b	1a6c8 <hash_pjw_bare@@Base+0x458>
   1a6b0:	ldr	x0, [sp, #56]
   1a6b4:	ldr	x0, [x0, #16]
   1a6b8:	ldr	x1, [sp, #16]
   1a6bc:	cmp	x1, x0
   1a6c0:	cset	w0, eq  // eq = none
   1a6c4:	and	w0, w0, #0xff
   1a6c8:	cmp	w0, #0x0
   1a6cc:	b.eq	1a6d8 <hash_pjw_bare@@Base+0x468>  // b.none
   1a6d0:	mov	w0, #0x1                   	// #1
   1a6d4:	b	1a6f4 <hash_pjw_bare@@Base+0x484>
   1a6d8:	ldr	x0, [sp, #56]
   1a6dc:	ldr	x0, [x0]
   1a6e0:	str	x0, [sp, #56]
   1a6e4:	ldr	x0, [sp, #56]
   1a6e8:	cmp	x0, #0x0
   1a6ec:	b.ne	1a670 <hash_pjw_bare@@Base+0x400>  // b.any
   1a6f0:	mov	w0, #0x0                   	// #0
   1a6f4:	ldp	x29, x30, [sp], #64
   1a6f8:	ret
   1a6fc:	stp	x29, x30, [sp, #-80]!
   1a700:	mov	x29, sp
   1a704:	str	x0, [sp, #24]
   1a708:	str	x1, [sp, #16]
   1a70c:	ldr	x0, [sp, #24]
   1a710:	ldr	x0, [x0, #24]
   1a714:	cmp	x0, #0x0
   1a718:	b.eq	1a730 <hash_pjw_bare@@Base+0x4c0>  // b.none
   1a71c:	ldr	x0, [sp, #24]
   1a720:	ldr	x1, [x0, #24]
   1a724:	ldr	x0, [sp, #16]
   1a728:	blr	x1
   1a72c:	b	1a734 <hash_pjw_bare@@Base+0x4c4>
   1a730:	ldr	x0, [sp, #16]
   1a734:	str	x0, [sp, #64]
   1a738:	ldr	x0, [sp, #24]
   1a73c:	ldr	x1, [x0, #40]
   1a740:	ldr	x0, [sp, #64]
   1a744:	udiv	x2, x0, x1
   1a748:	mul	x1, x2, x1
   1a74c:	sub	x0, x0, x1
   1a750:	str	x0, [sp, #56]
   1a754:	ldr	x0, [sp, #24]
   1a758:	ldr	x0, [x0, #8]
   1a75c:	str	x0, [sp, #48]
   1a760:	ldr	x0, [sp, #24]
   1a764:	ldr	x1, [x0, #32]
   1a768:	ldr	x0, [sp, #56]
   1a76c:	lsl	x0, x0, #3
   1a770:	add	x0, x1, x0
   1a774:	ldr	x0, [x0]
   1a778:	str	x0, [sp, #72]
   1a77c:	b	1a7f4 <hash_pjw_bare@@Base+0x584>
   1a780:	ldr	x0, [sp, #72]
   1a784:	ldr	x0, [x0, #8]
   1a788:	ldr	x1, [sp, #64]
   1a78c:	cmp	x1, x0
   1a790:	b.ne	1a7e8 <hash_pjw_bare@@Base+0x578>  // b.any
   1a794:	ldr	x0, [sp, #48]
   1a798:	cmp	x0, #0x0
   1a79c:	b.eq	1a7c0 <hash_pjw_bare@@Base+0x550>  // b.none
   1a7a0:	ldr	x0, [sp, #72]
   1a7a4:	ldr	x0, [x0, #16]
   1a7a8:	ldr	x2, [sp, #48]
   1a7ac:	mov	x1, x0
   1a7b0:	ldr	x0, [sp, #16]
   1a7b4:	blr	x2
   1a7b8:	and	w0, w0, #0xff
   1a7bc:	b	1a7d8 <hash_pjw_bare@@Base+0x568>
   1a7c0:	ldr	x0, [sp, #72]
   1a7c4:	ldr	x0, [x0, #16]
   1a7c8:	ldr	x1, [sp, #16]
   1a7cc:	cmp	x1, x0
   1a7d0:	cset	w0, eq  // eq = none
   1a7d4:	and	w0, w0, #0xff
   1a7d8:	cmp	w0, #0x0
   1a7dc:	b.eq	1a7e8 <hash_pjw_bare@@Base+0x578>  // b.none
   1a7e0:	mov	w0, #0x0                   	// #0
   1a7e4:	b	1a894 <hash_pjw_bare@@Base+0x624>
   1a7e8:	ldr	x0, [sp, #72]
   1a7ec:	ldr	x0, [x0]
   1a7f0:	str	x0, [sp, #72]
   1a7f4:	ldr	x0, [sp, #72]
   1a7f8:	cmp	x0, #0x0
   1a7fc:	b.ne	1a780 <hash_pjw_bare@@Base+0x510>  // b.any
   1a800:	mov	x0, #0x18                  	// #24
   1a804:	bl	ab40 <malloc@plt>
   1a808:	str	x0, [sp, #40]
   1a80c:	ldr	x0, [sp, #40]
   1a810:	cmp	x0, #0x0
   1a814:	b.ne	1a820 <hash_pjw_bare@@Base+0x5b0>  // b.any
   1a818:	mov	w0, #0xffffffff            	// #-1
   1a81c:	b	1a894 <hash_pjw_bare@@Base+0x624>
   1a820:	ldr	x0, [sp, #40]
   1a824:	ldr	x1, [sp, #16]
   1a828:	str	x1, [x0, #16]
   1a82c:	ldr	x0, [sp, #40]
   1a830:	ldr	x1, [sp, #64]
   1a834:	str	x1, [x0, #8]
   1a838:	ldr	x0, [sp, #24]
   1a83c:	ldr	x1, [x0, #32]
   1a840:	ldr	x0, [sp, #56]
   1a844:	lsl	x0, x0, #3
   1a848:	add	x0, x1, x0
   1a84c:	ldr	x1, [x0]
   1a850:	ldr	x0, [sp, #40]
   1a854:	str	x1, [x0]
   1a858:	ldr	x0, [sp, #24]
   1a85c:	ldr	x1, [x0, #32]
   1a860:	ldr	x0, [sp, #56]
   1a864:	lsl	x0, x0, #3
   1a868:	add	x0, x1, x0
   1a86c:	ldr	x1, [sp, #40]
   1a870:	str	x1, [x0]
   1a874:	ldr	x0, [sp, #24]
   1a878:	ldr	x0, [x0, #48]
   1a87c:	add	x1, x0, #0x1
   1a880:	ldr	x0, [sp, #24]
   1a884:	str	x1, [x0, #48]
   1a888:	ldr	x0, [sp, #24]
   1a88c:	bl	1a4b0 <hash_pjw_bare@@Base+0x240>
   1a890:	mov	w0, #0x1                   	// #1
   1a894:	ldp	x29, x30, [sp], #80
   1a898:	ret
   1a89c:	stp	x29, x30, [sp, #-80]!
   1a8a0:	mov	x29, sp
   1a8a4:	str	x0, [sp, #24]
   1a8a8:	str	x1, [sp, #16]
   1a8ac:	ldr	x0, [sp, #24]
   1a8b0:	ldr	x0, [x0, #24]
   1a8b4:	cmp	x0, #0x0
   1a8b8:	b.eq	1a8d0 <hash_pjw_bare@@Base+0x660>  // b.none
   1a8bc:	ldr	x0, [sp, #24]
   1a8c0:	ldr	x1, [x0, #24]
   1a8c4:	ldr	x0, [sp, #16]
   1a8c8:	blr	x1
   1a8cc:	b	1a8d4 <hash_pjw_bare@@Base+0x664>
   1a8d0:	ldr	x0, [sp, #16]
   1a8d4:	str	x0, [sp, #64]
   1a8d8:	ldr	x0, [sp, #24]
   1a8dc:	ldr	x1, [x0, #40]
   1a8e0:	ldr	x0, [sp, #64]
   1a8e4:	udiv	x2, x0, x1
   1a8e8:	mul	x1, x2, x1
   1a8ec:	sub	x0, x0, x1
   1a8f0:	str	x0, [sp, #56]
   1a8f4:	ldr	x0, [sp, #24]
   1a8f8:	ldr	x0, [x0, #8]
   1a8fc:	str	x0, [sp, #48]
   1a900:	ldr	x0, [sp, #24]
   1a904:	ldr	x1, [x0, #32]
   1a908:	ldr	x0, [sp, #56]
   1a90c:	lsl	x0, x0, #3
   1a910:	add	x0, x1, x0
   1a914:	str	x0, [sp, #72]
   1a918:	b	1a9ec <hash_pjw_bare@@Base+0x77c>
   1a91c:	ldr	x0, [sp, #72]
   1a920:	ldr	x0, [x0]
   1a924:	str	x0, [sp, #40]
   1a928:	ldr	x0, [sp, #40]
   1a92c:	ldr	x0, [x0, #8]
   1a930:	ldr	x1, [sp, #64]
   1a934:	cmp	x1, x0
   1a938:	b.ne	1a9e0 <hash_pjw_bare@@Base+0x770>  // b.any
   1a93c:	ldr	x0, [sp, #48]
   1a940:	cmp	x0, #0x0
   1a944:	b.eq	1a968 <hash_pjw_bare@@Base+0x6f8>  // b.none
   1a948:	ldr	x0, [sp, #40]
   1a94c:	ldr	x0, [x0, #16]
   1a950:	ldr	x2, [sp, #48]
   1a954:	mov	x1, x0
   1a958:	ldr	x0, [sp, #16]
   1a95c:	blr	x2
   1a960:	and	w0, w0, #0xff
   1a964:	b	1a980 <hash_pjw_bare@@Base+0x710>
   1a968:	ldr	x0, [sp, #40]
   1a96c:	ldr	x0, [x0, #16]
   1a970:	ldr	x1, [sp, #16]
   1a974:	cmp	x1, x0
   1a978:	cset	w0, eq  // eq = none
   1a97c:	and	w0, w0, #0xff
   1a980:	cmp	w0, #0x0
   1a984:	b.eq	1a9e0 <hash_pjw_bare@@Base+0x770>  // b.none
   1a988:	ldr	x0, [sp, #40]
   1a98c:	ldr	x1, [x0]
   1a990:	ldr	x0, [sp, #72]
   1a994:	str	x1, [x0]
   1a998:	ldr	x0, [sp, #24]
   1a99c:	ldr	x0, [x0, #48]
   1a9a0:	sub	x1, x0, #0x1
   1a9a4:	ldr	x0, [sp, #24]
   1a9a8:	str	x1, [x0, #48]
   1a9ac:	ldr	x0, [sp, #24]
   1a9b0:	ldr	x0, [x0, #16]
   1a9b4:	cmp	x0, #0x0
   1a9b8:	b.eq	1a9d0 <hash_pjw_bare@@Base+0x760>  // b.none
   1a9bc:	ldr	x0, [sp, #24]
   1a9c0:	ldr	x1, [x0, #16]
   1a9c4:	ldr	x0, [sp, #40]
   1a9c8:	ldr	x0, [x0, #16]
   1a9cc:	blr	x1
   1a9d0:	ldr	x0, [sp, #40]
   1a9d4:	bl	b130 <free@plt>
   1a9d8:	mov	w0, #0x1                   	// #1
   1a9dc:	b	1aa00 <hash_pjw_bare@@Base+0x790>
   1a9e0:	ldr	x0, [sp, #72]
   1a9e4:	ldr	x0, [x0]
   1a9e8:	str	x0, [sp, #72]
   1a9ec:	ldr	x0, [sp, #72]
   1a9f0:	ldr	x0, [x0]
   1a9f4:	cmp	x0, #0x0
   1a9f8:	b.ne	1a91c <hash_pjw_bare@@Base+0x6ac>  // b.any
   1a9fc:	mov	w0, #0x0                   	// #0
   1aa00:	ldp	x29, x30, [sp], #80
   1aa04:	ret
   1aa08:	stp	x29, x30, [sp, #-80]!
   1aa0c:	mov	x29, sp
   1aa10:	str	x0, [sp, #24]
   1aa14:	ldr	x0, [sp, #24]
   1aa18:	ldr	x0, [x0, #48]
   1aa1c:	cmp	x0, #0x0
   1aa20:	b.eq	1aac4 <hash_pjw_bare@@Base+0x854>  // b.none
   1aa24:	ldr	x0, [sp, #24]
   1aa28:	ldr	x0, [x0, #16]
   1aa2c:	str	x0, [sp, #56]
   1aa30:	ldr	x0, [sp, #24]
   1aa34:	ldr	x0, [x0, #32]
   1aa38:	str	x0, [sp, #48]
   1aa3c:	ldr	x0, [sp, #24]
   1aa40:	ldr	x0, [x0, #40]
   1aa44:	str	x0, [sp, #72]
   1aa48:	b	1aab8 <hash_pjw_bare@@Base+0x848>
   1aa4c:	ldr	x0, [sp, #72]
   1aa50:	sub	x0, x0, #0x1
   1aa54:	str	x0, [sp, #72]
   1aa58:	ldr	x0, [sp, #72]
   1aa5c:	lsl	x0, x0, #3
   1aa60:	ldr	x1, [sp, #48]
   1aa64:	add	x0, x1, x0
   1aa68:	ldr	x0, [x0]
   1aa6c:	str	x0, [sp, #64]
   1aa70:	b	1aaac <hash_pjw_bare@@Base+0x83c>
   1aa74:	ldr	x0, [sp, #64]
   1aa78:	ldr	x0, [x0]
   1aa7c:	str	x0, [sp, #40]
   1aa80:	ldr	x0, [sp, #56]
   1aa84:	cmp	x0, #0x0
   1aa88:	b.eq	1aa9c <hash_pjw_bare@@Base+0x82c>  // b.none
   1aa8c:	ldr	x0, [sp, #64]
   1aa90:	ldr	x0, [x0, #16]
   1aa94:	ldr	x1, [sp, #56]
   1aa98:	blr	x1
   1aa9c:	ldr	x0, [sp, #64]
   1aaa0:	bl	b130 <free@plt>
   1aaa4:	ldr	x0, [sp, #40]
   1aaa8:	str	x0, [sp, #64]
   1aaac:	ldr	x0, [sp, #64]
   1aab0:	cmp	x0, #0x0
   1aab4:	b.ne	1aa74 <hash_pjw_bare@@Base+0x804>  // b.any
   1aab8:	ldr	x0, [sp, #72]
   1aabc:	cmp	x0, #0x0
   1aac0:	b.ne	1aa4c <hash_pjw_bare@@Base+0x7dc>  // b.any
   1aac4:	ldr	x0, [sp, #24]
   1aac8:	ldr	x0, [x0, #32]
   1aacc:	bl	b130 <free@plt>
   1aad0:	ldr	x0, [sp, #24]
   1aad4:	bl	b130 <free@plt>
   1aad8:	nop
   1aadc:	ldp	x29, x30, [sp], #80
   1aae0:	ret
   1aae4:	sub	sp, sp, #0x50
   1aae8:	mov	x1, x8
   1aaec:	str	x0, [sp, #8]
   1aaf0:	ldr	x0, [sp, #8]
   1aaf4:	ldr	x0, [x0]
   1aaf8:	str	x0, [sp, #24]
   1aafc:	ldr	x0, [sp, #8]
   1ab00:	str	x0, [sp, #32]
   1ab04:	str	xzr, [sp, #48]
   1ab08:	str	xzr, [sp, #64]
   1ab0c:	ldr	x0, [sp, #8]
   1ab10:	ldr	x0, [x0, #40]
   1ab14:	str	x0, [sp, #72]
   1ab18:	add	x0, sp, #0x18
   1ab1c:	ldp	x2, x3, [x0]
   1ab20:	stp	x2, x3, [x1]
   1ab24:	ldp	x2, x3, [x0, #16]
   1ab28:	stp	x2, x3, [x1, #16]
   1ab2c:	ldp	x2, x3, [x0, #32]
   1ab30:	stp	x2, x3, [x1, #32]
   1ab34:	ldr	x0, [x0, #48]
   1ab38:	str	x0, [x1, #48]
   1ab3c:	add	sp, sp, #0x50
   1ab40:	ret
   1ab44:	sub	sp, sp, #0x40
   1ab48:	str	x0, [sp, #8]
   1ab4c:	str	x1, [sp]
   1ab50:	ldr	x0, [sp, #8]
   1ab54:	ldr	x0, [x0, #24]
   1ab58:	cmp	x0, #0x0
   1ab5c:	b.eq	1ab94 <hash_pjw_bare@@Base+0x924>  // b.none
   1ab60:	ldr	x0, [sp, #8]
   1ab64:	ldr	x0, [x0, #24]
   1ab68:	str	x0, [sp, #24]
   1ab6c:	ldr	x0, [sp, #24]
   1ab70:	ldr	x1, [x0, #16]
   1ab74:	ldr	x0, [sp]
   1ab78:	str	x1, [x0]
   1ab7c:	ldr	x0, [sp, #24]
   1ab80:	ldr	x1, [x0]
   1ab84:	ldr	x0, [sp, #8]
   1ab88:	str	x1, [x0, #24]
   1ab8c:	mov	w0, #0x1                   	// #1
   1ab90:	b	1ac4c <hash_pjw_bare@@Base+0x9dc>
   1ab94:	ldr	x0, [sp, #8]
   1ab98:	ldr	x0, [x0, #48]
   1ab9c:	str	x0, [sp, #48]
   1aba0:	ldr	x0, [sp, #8]
   1aba4:	ldr	x0, [x0, #40]
   1aba8:	str	x0, [sp, #56]
   1abac:	ldr	x1, [sp, #56]
   1abb0:	ldr	x0, [sp, #48]
   1abb4:	cmp	x1, x0
   1abb8:	b.cs	1ac3c <hash_pjw_bare@@Base+0x9cc>  // b.hs, b.nlast
   1abbc:	ldr	x0, [sp, #8]
   1abc0:	ldr	x0, [x0, #8]
   1abc4:	ldr	x0, [x0, #32]
   1abc8:	str	x0, [sp, #40]
   1abcc:	ldr	x0, [sp, #56]
   1abd0:	add	x1, x0, #0x1
   1abd4:	str	x1, [sp, #56]
   1abd8:	lsl	x0, x0, #3
   1abdc:	ldr	x1, [sp, #40]
   1abe0:	add	x0, x1, x0
   1abe4:	ldr	x0, [x0]
   1abe8:	str	x0, [sp, #32]
   1abec:	ldr	x0, [sp, #32]
   1abf0:	cmp	x0, #0x0
   1abf4:	b.eq	1ac2c <hash_pjw_bare@@Base+0x9bc>  // b.none
   1abf8:	ldr	x0, [sp, #32]
   1abfc:	ldr	x1, [x0, #16]
   1ac00:	ldr	x0, [sp]
   1ac04:	str	x1, [x0]
   1ac08:	ldr	x0, [sp, #32]
   1ac0c:	ldr	x1, [x0]
   1ac10:	ldr	x0, [sp, #8]
   1ac14:	str	x1, [x0, #24]
   1ac18:	ldr	x0, [sp, #8]
   1ac1c:	ldr	x1, [sp, #56]
   1ac20:	str	x1, [x0, #40]
   1ac24:	mov	w0, #0x1                   	// #1
   1ac28:	b	1ac4c <hash_pjw_bare@@Base+0x9dc>
   1ac2c:	ldr	x1, [sp, #56]
   1ac30:	ldr	x0, [sp, #48]
   1ac34:	cmp	x1, x0
   1ac38:	b.cc	1abcc <hash_pjw_bare@@Base+0x95c>  // b.lo, b.ul, b.last
   1ac3c:	ldr	x0, [sp, #8]
   1ac40:	ldr	x1, [sp, #48]
   1ac44:	str	x1, [x0, #40]
   1ac48:	mov	w0, #0x0                   	// #0
   1ac4c:	add	sp, sp, #0x40
   1ac50:	ret
   1ac54:	sub	sp, sp, #0x10
   1ac58:	str	x0, [sp, #8]
   1ac5c:	nop
   1ac60:	add	sp, sp, #0x10
   1ac64:	ret

000000000001ac68 <triple_hash@@Base>:
   1ac68:	stp	x29, x30, [sp, #-48]!
   1ac6c:	mov	x29, sp
   1ac70:	str	x0, [sp, #24]
   1ac74:	str	x1, [sp, #16]
   1ac78:	ldr	x0, [sp, #24]
   1ac7c:	str	x0, [sp, #40]
   1ac80:	ldr	x0, [sp, #40]
   1ac84:	ldr	x0, [x0]
   1ac88:	ldr	x1, [sp, #16]
   1ac8c:	bl	b370 <hash_pjw@plt>
   1ac90:	str	x0, [sp, #32]
   1ac94:	ldr	x0, [sp, #40]
   1ac98:	ldr	x1, [x0, #8]
   1ac9c:	ldr	x0, [sp, #32]
   1aca0:	eor	x0, x1, x0
   1aca4:	ldr	x1, [sp, #16]
   1aca8:	udiv	x2, x0, x1
   1acac:	ldr	x1, [sp, #16]
   1acb0:	mul	x1, x2, x1
   1acb4:	sub	x0, x0, x1
   1acb8:	ldp	x29, x30, [sp], #48
   1acbc:	ret

000000000001acc0 <triple_hash_no_name@@Base>:
   1acc0:	sub	sp, sp, #0x20
   1acc4:	str	x0, [sp, #8]
   1acc8:	str	x1, [sp]
   1accc:	ldr	x0, [sp, #8]
   1acd0:	str	x0, [sp, #24]
   1acd4:	ldr	x0, [sp, #24]
   1acd8:	ldr	x0, [x0, #8]
   1acdc:	ldr	x1, [sp]
   1ace0:	udiv	x2, x0, x1
   1ace4:	ldr	x1, [sp]
   1ace8:	mul	x1, x2, x1
   1acec:	sub	x0, x0, x1
   1acf0:	add	sp, sp, #0x20
   1acf4:	ret

000000000001acf8 <triple_compare@@Base>:
   1acf8:	stp	x29, x30, [sp, #-48]!
   1acfc:	mov	x29, sp
   1ad00:	str	x0, [sp, #24]
   1ad04:	str	x1, [sp, #16]
   1ad08:	ldr	x0, [sp, #24]
   1ad0c:	str	x0, [sp, #40]
   1ad10:	ldr	x0, [sp, #16]
   1ad14:	str	x0, [sp, #32]
   1ad18:	ldr	x0, [sp, #40]
   1ad1c:	ldr	x1, [x0, #8]
   1ad20:	ldr	x0, [sp, #32]
   1ad24:	ldr	x0, [x0, #8]
   1ad28:	cmp	x1, x0
   1ad2c:	b.ne	1ad78 <triple_compare@@Base+0x80>  // b.any
   1ad30:	ldr	x0, [sp, #40]
   1ad34:	ldr	x1, [x0, #16]
   1ad38:	ldr	x0, [sp, #32]
   1ad3c:	ldr	x0, [x0, #16]
   1ad40:	cmp	x1, x0
   1ad44:	b.ne	1ad78 <triple_compare@@Base+0x80>  // b.any
   1ad48:	ldr	x0, [sp, #40]
   1ad4c:	ldr	x2, [x0]
   1ad50:	ldr	x0, [sp, #32]
   1ad54:	ldr	x0, [x0]
   1ad58:	mov	x1, x0
   1ad5c:	mov	x0, x2
   1ad60:	bl	ad30 <same_name@plt>
   1ad64:	and	w0, w0, #0xff
   1ad68:	cmp	w0, #0x0
   1ad6c:	b.eq	1ad78 <triple_compare@@Base+0x80>  // b.none
   1ad70:	mov	w0, #0x1                   	// #1
   1ad74:	b	1ad7c <triple_compare@@Base+0x84>
   1ad78:	mov	w0, #0x0                   	// #0
   1ad7c:	and	w0, w0, #0x1
   1ad80:	and	w0, w0, #0xff
   1ad84:	ldp	x29, x30, [sp], #48
   1ad88:	ret

000000000001ad8c <triple_compare_ino_str@@Base>:
   1ad8c:	stp	x29, x30, [sp, #-48]!
   1ad90:	mov	x29, sp
   1ad94:	str	x0, [sp, #24]
   1ad98:	str	x1, [sp, #16]
   1ad9c:	ldr	x0, [sp, #24]
   1ada0:	str	x0, [sp, #40]
   1ada4:	ldr	x0, [sp, #16]
   1ada8:	str	x0, [sp, #32]
   1adac:	ldr	x0, [sp, #40]
   1adb0:	ldr	x1, [x0, #8]
   1adb4:	ldr	x0, [sp, #32]
   1adb8:	ldr	x0, [x0, #8]
   1adbc:	cmp	x1, x0
   1adc0:	b.ne	1ae08 <triple_compare_ino_str@@Base+0x7c>  // b.any
   1adc4:	ldr	x0, [sp, #40]
   1adc8:	ldr	x1, [x0, #16]
   1adcc:	ldr	x0, [sp, #32]
   1add0:	ldr	x0, [x0, #16]
   1add4:	cmp	x1, x0
   1add8:	b.ne	1ae08 <triple_compare_ino_str@@Base+0x7c>  // b.any
   1addc:	ldr	x0, [sp, #40]
   1ade0:	ldr	x2, [x0]
   1ade4:	ldr	x0, [sp, #32]
   1ade8:	ldr	x0, [x0]
   1adec:	mov	x1, x0
   1adf0:	mov	x0, x2
   1adf4:	bl	b070 <strcmp@plt>
   1adf8:	cmp	w0, #0x0
   1adfc:	b.ne	1ae08 <triple_compare_ino_str@@Base+0x7c>  // b.any
   1ae00:	mov	w0, #0x1                   	// #1
   1ae04:	b	1ae0c <triple_compare_ino_str@@Base+0x80>
   1ae08:	mov	w0, #0x0                   	// #0
   1ae0c:	and	w0, w0, #0x1
   1ae10:	and	w0, w0, #0xff
   1ae14:	ldp	x29, x30, [sp], #48
   1ae18:	ret

000000000001ae1c <triple_free@@Base>:
   1ae1c:	stp	x29, x30, [sp, #-48]!
   1ae20:	mov	x29, sp
   1ae24:	str	x0, [sp, #24]
   1ae28:	ldr	x0, [sp, #24]
   1ae2c:	str	x0, [sp, #40]
   1ae30:	ldr	x0, [sp, #40]
   1ae34:	ldr	x0, [x0]
   1ae38:	bl	b130 <free@plt>
   1ae3c:	ldr	x0, [sp, #40]
   1ae40:	bl	b130 <free@plt>
   1ae44:	nop
   1ae48:	ldp	x29, x30, [sp], #48
   1ae4c:	ret

000000000001ae50 <idpriv_drop@@Base>:
   1ae50:	stp	x29, x30, [sp, #-48]!
   1ae54:	mov	x29, sp
   1ae58:	bl	a9a0 <getuid@plt>
   1ae5c:	str	w0, [sp, #44]
   1ae60:	bl	b170 <getgid@plt>
   1ae64:	str	w0, [sp, #40]
   1ae68:	ldr	w0, [sp, #40]
   1ae6c:	ldr	w1, [sp, #40]
   1ae70:	ldr	w2, [sp, #40]
   1ae74:	bl	b660 <setresgid@plt>
   1ae78:	cmp	w0, #0x0
   1ae7c:	b.ge	1ae88 <idpriv_drop@@Base+0x38>  // b.tcont
   1ae80:	mov	w0, #0xffffffff            	// #-1
   1ae84:	b	1af44 <idpriv_drop@@Base+0xf4>
   1ae88:	ldr	w0, [sp, #44]
   1ae8c:	ldr	w1, [sp, #44]
   1ae90:	ldr	w2, [sp, #44]
   1ae94:	bl	b450 <setresuid@plt>
   1ae98:	cmp	w0, #0x0
   1ae9c:	b.ge	1aea8 <idpriv_drop@@Base+0x58>  // b.tcont
   1aea0:	mov	w0, #0xffffffff            	// #-1
   1aea4:	b	1af44 <idpriv_drop@@Base+0xf4>
   1aea8:	add	x2, sp, #0x1c
   1aeac:	add	x1, sp, #0x20
   1aeb0:	add	x0, sp, #0x24
   1aeb4:	bl	a910 <getresuid@plt>
   1aeb8:	cmp	w0, #0x0
   1aebc:	b.lt	1aef0 <idpriv_drop@@Base+0xa0>  // b.tstop
   1aec0:	ldr	w1, [sp, #36]
   1aec4:	ldr	w0, [sp, #44]
   1aec8:	cmp	w1, w0
   1aecc:	b.ne	1aef0 <idpriv_drop@@Base+0xa0>  // b.any
   1aed0:	ldr	w1, [sp, #32]
   1aed4:	ldr	w0, [sp, #44]
   1aed8:	cmp	w1, w0
   1aedc:	b.ne	1aef0 <idpriv_drop@@Base+0xa0>  // b.any
   1aee0:	ldr	w1, [sp, #28]
   1aee4:	ldr	w0, [sp, #44]
   1aee8:	cmp	w1, w0
   1aeec:	b.eq	1aef4 <idpriv_drop@@Base+0xa4>  // b.none
   1aef0:	bl	af70 <abort@plt>
   1aef4:	add	x2, sp, #0x10
   1aef8:	add	x1, sp, #0x14
   1aefc:	add	x0, sp, #0x18
   1af00:	bl	b3e0 <getresgid@plt>
   1af04:	cmp	w0, #0x0
   1af08:	b.lt	1af3c <idpriv_drop@@Base+0xec>  // b.tstop
   1af0c:	ldr	w1, [sp, #24]
   1af10:	ldr	w0, [sp, #40]
   1af14:	cmp	w1, w0
   1af18:	b.ne	1af3c <idpriv_drop@@Base+0xec>  // b.any
   1af1c:	ldr	w1, [sp, #20]
   1af20:	ldr	w0, [sp, #40]
   1af24:	cmp	w1, w0
   1af28:	b.ne	1af3c <idpriv_drop@@Base+0xec>  // b.any
   1af2c:	ldr	w1, [sp, #16]
   1af30:	ldr	w0, [sp, #40]
   1af34:	cmp	w1, w0
   1af38:	b.eq	1af40 <idpriv_drop@@Base+0xf0>  // b.none
   1af3c:	bl	af70 <abort@plt>
   1af40:	mov	w0, #0x0                   	// #0
   1af44:	ldp	x29, x30, [sp], #48
   1af48:	ret

000000000001af4c <idpriv_temp_drop@@Base>:
   1af4c:	stp	x29, x30, [sp, #-48]!
   1af50:	mov	x29, sp
   1af54:	bl	a9a0 <getuid@plt>
   1af58:	str	w0, [sp, #44]
   1af5c:	bl	b170 <getgid@plt>
   1af60:	str	w0, [sp, #40]
   1af64:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1af68:	add	x0, x0, #0x384
   1af6c:	ldr	w0, [x0]
   1af70:	cmn	w0, #0x1
   1af74:	b.ne	1af8c <idpriv_temp_drop@@Base+0x40>  // b.any
   1af78:	bl	a8e0 <geteuid@plt>
   1af7c:	mov	w1, w0
   1af80:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1af84:	add	x0, x0, #0x384
   1af88:	str	w1, [x0]
   1af8c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1af90:	add	x0, x0, #0x388
   1af94:	ldr	w0, [x0]
   1af98:	cmn	w0, #0x1
   1af9c:	b.ne	1afb4 <idpriv_temp_drop@@Base+0x68>  // b.any
   1afa0:	bl	a8a0 <getegid@plt>
   1afa4:	mov	w1, w0
   1afa8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1afac:	add	x0, x0, #0x388
   1afb0:	str	w1, [x0]
   1afb4:	ldr	w1, [sp, #40]
   1afb8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1afbc:	add	x0, x0, #0x388
   1afc0:	ldr	w0, [x0]
   1afc4:	mov	w2, w0
   1afc8:	mov	w0, #0xffffffff            	// #-1
   1afcc:	bl	b660 <setresgid@plt>
   1afd0:	cmp	w0, #0x0
   1afd4:	b.ge	1afe0 <idpriv_temp_drop@@Base+0x94>  // b.tcont
   1afd8:	mov	w0, #0xffffffff            	// #-1
   1afdc:	b	1b0b8 <idpriv_temp_drop@@Base+0x16c>
   1afe0:	ldr	w1, [sp, #44]
   1afe4:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1afe8:	add	x0, x0, #0x384
   1afec:	ldr	w0, [x0]
   1aff0:	mov	w2, w0
   1aff4:	mov	w0, #0xffffffff            	// #-1
   1aff8:	bl	b450 <setresuid@plt>
   1affc:	cmp	w0, #0x0
   1b000:	b.ge	1b00c <idpriv_temp_drop@@Base+0xc0>  // b.tcont
   1b004:	mov	w0, #0xffffffff            	// #-1
   1b008:	b	1b0b8 <idpriv_temp_drop@@Base+0x16c>
   1b00c:	add	x2, sp, #0x1c
   1b010:	add	x1, sp, #0x20
   1b014:	add	x0, sp, #0x24
   1b018:	bl	a910 <getresuid@plt>
   1b01c:	cmp	w0, #0x0
   1b020:	b.lt	1b05c <idpriv_temp_drop@@Base+0x110>  // b.tstop
   1b024:	ldr	w1, [sp, #36]
   1b028:	ldr	w0, [sp, #44]
   1b02c:	cmp	w1, w0
   1b030:	b.ne	1b05c <idpriv_temp_drop@@Base+0x110>  // b.any
   1b034:	ldr	w1, [sp, #32]
   1b038:	ldr	w0, [sp, #44]
   1b03c:	cmp	w1, w0
   1b040:	b.ne	1b05c <idpriv_temp_drop@@Base+0x110>  // b.any
   1b044:	ldr	w0, [sp, #28]
   1b048:	adrp	x1, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b04c:	add	x1, x1, #0x384
   1b050:	ldr	w1, [x1]
   1b054:	cmp	w0, w1
   1b058:	b.eq	1b060 <idpriv_temp_drop@@Base+0x114>  // b.none
   1b05c:	bl	af70 <abort@plt>
   1b060:	add	x2, sp, #0x10
   1b064:	add	x1, sp, #0x14
   1b068:	add	x0, sp, #0x18
   1b06c:	bl	b3e0 <getresgid@plt>
   1b070:	cmp	w0, #0x0
   1b074:	b.lt	1b0b0 <idpriv_temp_drop@@Base+0x164>  // b.tstop
   1b078:	ldr	w1, [sp, #24]
   1b07c:	ldr	w0, [sp, #40]
   1b080:	cmp	w1, w0
   1b084:	b.ne	1b0b0 <idpriv_temp_drop@@Base+0x164>  // b.any
   1b088:	ldr	w1, [sp, #20]
   1b08c:	ldr	w0, [sp, #40]
   1b090:	cmp	w1, w0
   1b094:	b.ne	1b0b0 <idpriv_temp_drop@@Base+0x164>  // b.any
   1b098:	ldr	w0, [sp, #16]
   1b09c:	adrp	x1, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b0a0:	add	x1, x1, #0x388
   1b0a4:	ldr	w1, [x1]
   1b0a8:	cmp	w0, w1
   1b0ac:	b.eq	1b0b4 <idpriv_temp_drop@@Base+0x168>  // b.none
   1b0b0:	bl	af70 <abort@plt>
   1b0b4:	mov	w0, #0x0                   	// #0
   1b0b8:	ldp	x29, x30, [sp], #48
   1b0bc:	ret

000000000001b0c0 <idpriv_temp_restore@@Base>:
   1b0c0:	stp	x29, x30, [sp, #-48]!
   1b0c4:	mov	x29, sp
   1b0c8:	bl	a9a0 <getuid@plt>
   1b0cc:	str	w0, [sp, #44]
   1b0d0:	bl	b170 <getgid@plt>
   1b0d4:	str	w0, [sp, #40]
   1b0d8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b0dc:	add	x0, x0, #0x384
   1b0e0:	ldr	w0, [x0]
   1b0e4:	cmn	w0, #0x1
   1b0e8:	b.eq	1b100 <idpriv_temp_restore@@Base+0x40>  // b.none
   1b0ec:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b0f0:	add	x0, x0, #0x388
   1b0f4:	ldr	w0, [x0]
   1b0f8:	cmn	w0, #0x1
   1b0fc:	b.ne	1b104 <idpriv_temp_restore@@Base+0x44>  // b.any
   1b100:	bl	af70 <abort@plt>
   1b104:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b108:	add	x0, x0, #0x384
   1b10c:	ldr	w0, [x0]
   1b110:	mov	w2, #0xffffffff            	// #-1
   1b114:	mov	w1, w0
   1b118:	mov	w0, #0xffffffff            	// #-1
   1b11c:	bl	b450 <setresuid@plt>
   1b120:	cmp	w0, #0x0
   1b124:	b.ge	1b130 <idpriv_temp_restore@@Base+0x70>  // b.tcont
   1b128:	mov	w0, #0xffffffff            	// #-1
   1b12c:	b	1b218 <idpriv_temp_restore@@Base+0x158>
   1b130:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b134:	add	x0, x0, #0x388
   1b138:	ldr	w0, [x0]
   1b13c:	mov	w2, #0xffffffff            	// #-1
   1b140:	mov	w1, w0
   1b144:	mov	w0, #0xffffffff            	// #-1
   1b148:	bl	b660 <setresgid@plt>
   1b14c:	cmp	w0, #0x0
   1b150:	b.ge	1b15c <idpriv_temp_restore@@Base+0x9c>  // b.tcont
   1b154:	mov	w0, #0xffffffff            	// #-1
   1b158:	b	1b218 <idpriv_temp_restore@@Base+0x158>
   1b15c:	add	x2, sp, #0x1c
   1b160:	add	x1, sp, #0x20
   1b164:	add	x0, sp, #0x24
   1b168:	bl	a910 <getresuid@plt>
   1b16c:	cmp	w0, #0x0
   1b170:	b.lt	1b1b4 <idpriv_temp_restore@@Base+0xf4>  // b.tstop
   1b174:	ldr	w1, [sp, #36]
   1b178:	ldr	w0, [sp, #44]
   1b17c:	cmp	w1, w0
   1b180:	b.ne	1b1b4 <idpriv_temp_restore@@Base+0xf4>  // b.any
   1b184:	ldr	w0, [sp, #32]
   1b188:	adrp	x1, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b18c:	add	x1, x1, #0x384
   1b190:	ldr	w1, [x1]
   1b194:	cmp	w0, w1
   1b198:	b.ne	1b1b4 <idpriv_temp_restore@@Base+0xf4>  // b.any
   1b19c:	ldr	w0, [sp, #28]
   1b1a0:	adrp	x1, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b1a4:	add	x1, x1, #0x384
   1b1a8:	ldr	w1, [x1]
   1b1ac:	cmp	w0, w1
   1b1b0:	b.eq	1b1b8 <idpriv_temp_restore@@Base+0xf8>  // b.none
   1b1b4:	bl	af70 <abort@plt>
   1b1b8:	add	x2, sp, #0x10
   1b1bc:	add	x1, sp, #0x14
   1b1c0:	add	x0, sp, #0x18
   1b1c4:	bl	b3e0 <getresgid@plt>
   1b1c8:	cmp	w0, #0x0
   1b1cc:	b.lt	1b210 <idpriv_temp_restore@@Base+0x150>  // b.tstop
   1b1d0:	ldr	w1, [sp, #24]
   1b1d4:	ldr	w0, [sp, #40]
   1b1d8:	cmp	w1, w0
   1b1dc:	b.ne	1b210 <idpriv_temp_restore@@Base+0x150>  // b.any
   1b1e0:	ldr	w0, [sp, #20]
   1b1e4:	adrp	x1, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b1e8:	add	x1, x1, #0x388
   1b1ec:	ldr	w1, [x1]
   1b1f0:	cmp	w0, w1
   1b1f4:	b.ne	1b210 <idpriv_temp_restore@@Base+0x150>  // b.any
   1b1f8:	ldr	w0, [sp, #16]
   1b1fc:	adrp	x1, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b200:	add	x1, x1, #0x388
   1b204:	ldr	w1, [x1]
   1b208:	cmp	w0, w1
   1b20c:	b.eq	1b214 <idpriv_temp_restore@@Base+0x154>  // b.none
   1b210:	bl	af70 <abort@plt>
   1b214:	mov	w0, #0x0                   	// #0
   1b218:	ldp	x29, x30, [sp], #48
   1b21c:	ret
   1b220:	sub	sp, sp, #0x20
   1b224:	str	x0, [sp, #8]
   1b228:	str	xzr, [sp, #24]
   1b22c:	b	1b26c <idpriv_temp_restore@@Base+0x1ac>
   1b230:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1b234:	add	x0, x0, #0x580
   1b238:	ldr	x1, [sp, #24]
   1b23c:	ldr	x0, [x0, x1, lsl #3]
   1b240:	ldr	x1, [sp, #8]
   1b244:	cmp	x1, x0
   1b248:	b.hi	1b260 <idpriv_temp_restore@@Base+0x1a0>  // b.pmore
   1b24c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1b250:	add	x0, x0, #0x580
   1b254:	ldr	x1, [sp, #24]
   1b258:	ldr	x0, [x0, x1, lsl #3]
   1b25c:	b	1b27c <idpriv_temp_restore@@Base+0x1bc>
   1b260:	ldr	x0, [sp, #24]
   1b264:	add	x0, x0, #0x1
   1b268:	str	x0, [sp, #24]
   1b26c:	ldr	x0, [sp, #24]
   1b270:	cmp	x0, #0xe7
   1b274:	b.ls	1b230 <idpriv_temp_restore@@Base+0x170>  // b.plast
   1b278:	mov	x0, #0xffffffffffffffff    	// #-1
   1b27c:	add	sp, sp, #0x20
   1b280:	ret
   1b284:	stp	x29, x30, [sp, #-96]!
   1b288:	mov	x29, sp
   1b28c:	str	x0, [sp, #24]
   1b290:	str	x1, [sp, #16]
   1b294:	ldr	x0, [sp, #16]
   1b298:	bl	1b220 <idpriv_temp_restore@@Base+0x160>
   1b29c:	str	x0, [sp, #72]
   1b2a0:	ldr	x0, [sp, #24]
   1b2a4:	ldr	x0, [x0, #48]
   1b2a8:	ldr	x1, [sp, #72]
   1b2ac:	cmp	x1, x0
   1b2b0:	b.ls	1b3e8 <idpriv_temp_restore@@Base+0x328>  // b.plast
   1b2b4:	ldr	x0, [sp, #24]
   1b2b8:	ldr	x0, [x0, #40]
   1b2bc:	str	x0, [sp, #64]
   1b2c0:	ldr	x1, [sp, #72]
   1b2c4:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   1b2c8:	cmp	x1, x0
   1b2cc:	b.hi	1b3d8 <idpriv_temp_restore@@Base+0x318>  // b.pmore
   1b2d0:	ldr	x0, [sp, #72]
   1b2d4:	lsl	x0, x0, #3
   1b2d8:	cmn	x0, #0x1
   1b2dc:	b.eq	1b3d8 <idpriv_temp_restore@@Base+0x318>  // b.none
   1b2e0:	mov	x1, #0x8                   	// #8
   1b2e4:	ldr	x0, [sp, #72]
   1b2e8:	bl	ad80 <calloc@plt>
   1b2ec:	str	x0, [sp, #56]
   1b2f0:	ldr	x0, [sp, #56]
   1b2f4:	cmp	x0, #0x0
   1b2f8:	b.eq	1b3e0 <idpriv_temp_restore@@Base+0x320>  // b.none
   1b2fc:	ldr	x0, [sp, #24]
   1b300:	ldr	x0, [x0, #48]
   1b304:	str	x0, [sp, #88]
   1b308:	b	1b3a8 <idpriv_temp_restore@@Base+0x2e8>
   1b30c:	ldr	x0, [sp, #88]
   1b310:	sub	x0, x0, #0x1
   1b314:	str	x0, [sp, #88]
   1b318:	ldr	x0, [sp, #88]
   1b31c:	lsl	x0, x0, #3
   1b320:	ldr	x1, [sp, #64]
   1b324:	add	x0, x1, x0
   1b328:	ldr	x0, [x0]
   1b32c:	str	x0, [sp, #80]
   1b330:	b	1b39c <idpriv_temp_restore@@Base+0x2dc>
   1b334:	ldr	x0, [sp, #80]
   1b338:	ldr	x0, [x0]
   1b33c:	str	x0, [sp, #48]
   1b340:	ldr	x0, [sp, #80]
   1b344:	ldr	x0, [x0, #8]
   1b348:	ldr	x1, [sp, #72]
   1b34c:	udiv	x2, x0, x1
   1b350:	ldr	x1, [sp, #72]
   1b354:	mul	x1, x2, x1
   1b358:	sub	x0, x0, x1
   1b35c:	str	x0, [sp, #40]
   1b360:	ldr	x0, [sp, #40]
   1b364:	lsl	x0, x0, #3
   1b368:	ldr	x1, [sp, #56]
   1b36c:	add	x0, x1, x0
   1b370:	ldr	x1, [x0]
   1b374:	ldr	x0, [sp, #80]
   1b378:	str	x1, [x0]
   1b37c:	ldr	x0, [sp, #40]
   1b380:	lsl	x0, x0, #3
   1b384:	ldr	x1, [sp, #56]
   1b388:	add	x0, x1, x0
   1b38c:	ldr	x1, [sp, #80]
   1b390:	str	x1, [x0]
   1b394:	ldr	x0, [sp, #48]
   1b398:	str	x0, [sp, #80]
   1b39c:	ldr	x0, [sp, #80]
   1b3a0:	cmp	x0, #0x0
   1b3a4:	b.ne	1b334 <idpriv_temp_restore@@Base+0x274>  // b.any
   1b3a8:	ldr	x0, [sp, #88]
   1b3ac:	cmp	x0, #0x0
   1b3b0:	b.ne	1b30c <idpriv_temp_restore@@Base+0x24c>  // b.any
   1b3b4:	ldr	x0, [sp, #24]
   1b3b8:	ldr	x1, [sp, #56]
   1b3bc:	str	x1, [x0, #40]
   1b3c0:	ldr	x0, [sp, #24]
   1b3c4:	ldr	x1, [sp, #72]
   1b3c8:	str	x1, [x0, #48]
   1b3cc:	ldr	x0, [sp, #64]
   1b3d0:	bl	b130 <free@plt>
   1b3d4:	b	1b3e8 <idpriv_temp_restore@@Base+0x328>
   1b3d8:	nop
   1b3dc:	b	1b3ec <idpriv_temp_restore@@Base+0x32c>
   1b3e0:	nop
   1b3e4:	b	1b3ec <idpriv_temp_restore@@Base+0x32c>
   1b3e8:	nop
   1b3ec:	ldp	x29, x30, [sp], #96
   1b3f0:	ret
   1b3f4:	stp	x29, x30, [sp, #-48]!
   1b3f8:	mov	x29, sp
   1b3fc:	str	x0, [sp, #24]
   1b400:	ldr	x0, [sp, #24]
   1b404:	ldr	x0, [x0, #96]
   1b408:	str	x0, [sp, #40]
   1b40c:	ldr	x0, [sp, #40]
   1b410:	lsr	x0, x0, #1
   1b414:	mov	x1, x0
   1b418:	ldr	x0, [sp, #40]
   1b41c:	bl	ac80 <xsum@plt>
   1b420:	str	x0, [sp, #32]
   1b424:	ldr	x0, [sp, #24]
   1b428:	ldr	x0, [x0, #48]
   1b42c:	ldr	x1, [sp, #32]
   1b430:	cmp	x1, x0
   1b434:	b.ls	1b444 <idpriv_temp_restore@@Base+0x384>  // b.plast
   1b438:	ldr	x1, [sp, #32]
   1b43c:	ldr	x0, [sp, #24]
   1b440:	bl	1b284 <idpriv_temp_restore@@Base+0x1c4>
   1b444:	nop
   1b448:	ldp	x29, x30, [sp], #48
   1b44c:	ret
   1b450:	sub	sp, sp, #0x20
   1b454:	str	x0, [sp, #8]
   1b458:	str	x1, [sp]
   1b45c:	ldr	x0, [sp]
   1b460:	ldr	x0, [x0, #8]
   1b464:	ldr	x1, [sp, #8]
   1b468:	ldr	x1, [x1, #48]
   1b46c:	udiv	x2, x0, x1
   1b470:	mul	x1, x2, x1
   1b474:	sub	x0, x0, x1
   1b478:	str	x0, [sp, #24]
   1b47c:	ldr	x0, [sp, #8]
   1b480:	ldr	x1, [x0, #40]
   1b484:	ldr	x0, [sp, #24]
   1b488:	lsl	x0, x0, #3
   1b48c:	add	x0, x1, x0
   1b490:	ldr	x1, [x0]
   1b494:	ldr	x0, [sp]
   1b498:	str	x1, [x0]
   1b49c:	ldr	x0, [sp, #8]
   1b4a0:	ldr	x1, [x0, #40]
   1b4a4:	ldr	x0, [sp, #24]
   1b4a8:	lsl	x0, x0, #3
   1b4ac:	add	x0, x1, x0
   1b4b0:	ldr	x1, [sp]
   1b4b4:	str	x1, [x0]
   1b4b8:	nop
   1b4bc:	add	sp, sp, #0x20
   1b4c0:	ret
   1b4c4:	stp	x29, x30, [sp, #-48]!
   1b4c8:	mov	x29, sp
   1b4cc:	str	x0, [sp, #24]
   1b4d0:	str	x1, [sp, #16]
   1b4d4:	ldr	x0, [sp, #16]
   1b4d8:	ldr	x0, [x0, #8]
   1b4dc:	ldr	x1, [sp, #24]
   1b4e0:	ldr	x1, [x1, #48]
   1b4e4:	udiv	x2, x0, x1
   1b4e8:	mul	x1, x2, x1
   1b4ec:	sub	x0, x0, x1
   1b4f0:	str	x0, [sp, #32]
   1b4f4:	ldr	x0, [sp, #24]
   1b4f8:	ldr	x1, [x0, #40]
   1b4fc:	ldr	x0, [sp, #32]
   1b500:	lsl	x0, x0, #3
   1b504:	add	x0, x1, x0
   1b508:	str	x0, [sp, #40]
   1b50c:	ldr	x0, [sp, #40]
   1b510:	ldr	x1, [x0]
   1b514:	ldr	x0, [sp, #16]
   1b518:	cmp	x1, x0
   1b51c:	b.ne	1b534 <idpriv_temp_restore@@Base+0x474>  // b.any
   1b520:	ldr	x0, [sp, #16]
   1b524:	ldr	x1, [x0]
   1b528:	ldr	x0, [sp, #40]
   1b52c:	str	x1, [x0]
   1b530:	b	1b558 <idpriv_temp_restore@@Base+0x498>
   1b534:	ldr	x0, [sp, #40]
   1b538:	ldr	x0, [x0]
   1b53c:	cmp	x0, #0x0
   1b540:	b.ne	1b548 <idpriv_temp_restore@@Base+0x488>  // b.any
   1b544:	bl	af70 <abort@plt>
   1b548:	ldr	x0, [sp, #40]
   1b54c:	ldr	x0, [x0]
   1b550:	str	x0, [sp, #40]
   1b554:	b	1b50c <idpriv_temp_restore@@Base+0x44c>
   1b558:	nop
   1b55c:	ldp	x29, x30, [sp], #48
   1b560:	ret
   1b564:	stp	x29, x30, [sp, #-80]!
   1b568:	mov	x29, sp
   1b56c:	str	x0, [sp, #56]
   1b570:	str	x1, [sp, #48]
   1b574:	str	x2, [sp, #40]
   1b578:	str	x3, [sp, #32]
   1b57c:	strb	w4, [sp, #31]
   1b580:	mov	x0, #0x68                  	// #104
   1b584:	bl	ab40 <malloc@plt>
   1b588:	str	x0, [sp, #72]
   1b58c:	ldr	x0, [sp, #72]
   1b590:	cmp	x0, #0x0
   1b594:	b.ne	1b5a0 <idpriv_temp_restore@@Base+0x4e0>  // b.any
   1b598:	mov	x0, #0x0                   	// #0
   1b59c:	b	1b654 <idpriv_temp_restore@@Base+0x594>
   1b5a0:	ldr	x0, [sp, #72]
   1b5a4:	ldr	x1, [sp, #56]
   1b5a8:	str	x1, [x0]
   1b5ac:	ldr	x0, [sp, #72]
   1b5b0:	ldr	x1, [sp, #48]
   1b5b4:	str	x1, [x0, #8]
   1b5b8:	ldr	x0, [sp, #72]
   1b5bc:	ldr	x1, [sp, #40]
   1b5c0:	str	x1, [x0, #16]
   1b5c4:	ldr	x0, [sp, #72]
   1b5c8:	ldr	x1, [sp, #32]
   1b5cc:	str	x1, [x0, #24]
   1b5d0:	ldr	x0, [sp, #72]
   1b5d4:	ldrb	w1, [sp, #31]
   1b5d8:	strb	w1, [x0, #32]
   1b5dc:	ldr	x0, [sp, #72]
   1b5e0:	mov	x1, #0xb                   	// #11
   1b5e4:	str	x1, [x0, #48]
   1b5e8:	ldr	x0, [sp, #72]
   1b5ec:	ldr	x0, [x0, #48]
   1b5f0:	mov	x1, #0x8                   	// #8
   1b5f4:	bl	ad80 <calloc@plt>
   1b5f8:	mov	x1, x0
   1b5fc:	ldr	x0, [sp, #72]
   1b600:	str	x1, [x0, #40]
   1b604:	ldr	x0, [sp, #72]
   1b608:	ldr	x0, [x0, #40]
   1b60c:	cmp	x0, #0x0
   1b610:	b.eq	1b644 <idpriv_temp_restore@@Base+0x584>  // b.none
   1b614:	ldr	x0, [sp, #72]
   1b618:	add	x1, x0, #0x38
   1b61c:	ldr	x0, [sp, #72]
   1b620:	str	x1, [x0, #72]
   1b624:	ldr	x0, [sp, #72]
   1b628:	add	x1, x0, #0x38
   1b62c:	ldr	x0, [sp, #72]
   1b630:	str	x1, [x0, #80]
   1b634:	ldr	x0, [sp, #72]
   1b638:	str	xzr, [x0, #96]
   1b63c:	ldr	x0, [sp, #72]
   1b640:	b	1b654 <idpriv_temp_restore@@Base+0x594>
   1b644:	nop
   1b648:	ldr	x0, [sp, #72]
   1b64c:	bl	b130 <free@plt>
   1b650:	mov	x0, #0x0                   	// #0
   1b654:	ldp	x29, x30, [sp], #80
   1b658:	ret
   1b65c:	stp	x29, x30, [sp, #-128]!
   1b660:	mov	x29, sp
   1b664:	str	x0, [sp, #72]
   1b668:	str	x1, [sp, #64]
   1b66c:	str	x2, [sp, #56]
   1b670:	str	x3, [sp, #48]
   1b674:	strb	w4, [sp, #47]
   1b678:	str	x5, [sp, #32]
   1b67c:	str	x6, [sp, #24]
   1b680:	mov	x0, #0x68                  	// #104
   1b684:	bl	ab40 <malloc@plt>
   1b688:	str	x0, [sp, #96]
   1b68c:	ldr	x0, [sp, #96]
   1b690:	cmp	x0, #0x0
   1b694:	b.ne	1b6a0 <idpriv_temp_restore@@Base+0x5e0>  // b.any
   1b698:	mov	x0, #0x0                   	// #0
   1b69c:	b	1b8d0 <idpriv_temp_restore@@Base+0x810>
   1b6a0:	ldr	x0, [sp, #96]
   1b6a4:	ldr	x1, [sp, #72]
   1b6a8:	str	x1, [x0]
   1b6ac:	ldr	x0, [sp, #96]
   1b6b0:	ldr	x1, [sp, #64]
   1b6b4:	str	x1, [x0, #8]
   1b6b8:	ldr	x0, [sp, #96]
   1b6bc:	ldr	x1, [sp, #56]
   1b6c0:	str	x1, [x0, #16]
   1b6c4:	ldr	x0, [sp, #96]
   1b6c8:	ldr	x1, [sp, #48]
   1b6cc:	str	x1, [x0, #24]
   1b6d0:	ldr	x0, [sp, #96]
   1b6d4:	ldrb	w1, [sp, #47]
   1b6d8:	strb	w1, [x0, #32]
   1b6dc:	ldr	x0, [sp, #32]
   1b6e0:	lsr	x0, x0, #1
   1b6e4:	mov	x1, x0
   1b6e8:	ldr	x0, [sp, #32]
   1b6ec:	bl	ac80 <xsum@plt>
   1b6f0:	str	x0, [sp, #112]
   1b6f4:	ldr	x0, [sp, #112]
   1b6f8:	cmp	x0, #0x9
   1b6fc:	b.hi	1b708 <idpriv_temp_restore@@Base+0x648>  // b.pmore
   1b700:	mov	x0, #0xa                   	// #10
   1b704:	str	x0, [sp, #112]
   1b708:	ldr	x0, [sp, #112]
   1b70c:	bl	1b220 <idpriv_temp_restore@@Base+0x160>
   1b710:	mov	x1, x0
   1b714:	ldr	x0, [sp, #96]
   1b718:	str	x1, [x0, #48]
   1b71c:	ldr	x0, [sp, #96]
   1b720:	ldr	x1, [x0, #48]
   1b724:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   1b728:	cmp	x1, x0
   1b72c:	b.hi	1b8b8 <idpriv_temp_restore@@Base+0x7f8>  // b.pmore
   1b730:	ldr	x0, [sp, #96]
   1b734:	ldr	x0, [x0, #48]
   1b738:	lsl	x0, x0, #3
   1b73c:	cmn	x0, #0x1
   1b740:	b.eq	1b8b8 <idpriv_temp_restore@@Base+0x7f8>  // b.none
   1b744:	ldr	x0, [sp, #96]
   1b748:	ldr	x0, [x0, #48]
   1b74c:	mov	x1, #0x8                   	// #8
   1b750:	bl	ad80 <calloc@plt>
   1b754:	mov	x1, x0
   1b758:	ldr	x0, [sp, #96]
   1b75c:	str	x1, [x0, #40]
   1b760:	ldr	x0, [sp, #96]
   1b764:	ldr	x0, [x0, #40]
   1b768:	cmp	x0, #0x0
   1b76c:	b.eq	1b8c0 <idpriv_temp_restore@@Base+0x800>  // b.none
   1b770:	ldr	x0, [sp, #96]
   1b774:	ldr	x1, [sp, #32]
   1b778:	str	x1, [x0, #96]
   1b77c:	ldr	x0, [sp, #96]
   1b780:	add	x0, x0, #0x38
   1b784:	str	x0, [sp, #120]
   1b788:	b	1b838 <idpriv_temp_restore@@Base+0x778>
   1b78c:	mov	x0, #0x28                  	// #40
   1b790:	bl	ab40 <malloc@plt>
   1b794:	str	x0, [sp, #88]
   1b798:	ldr	x0, [sp, #88]
   1b79c:	cmp	x0, #0x0
   1b7a0:	b.eq	1b868 <idpriv_temp_restore@@Base+0x7a8>  // b.none
   1b7a4:	ldr	x0, [sp, #24]
   1b7a8:	ldr	x1, [x0]
   1b7ac:	ldr	x0, [sp, #88]
   1b7b0:	str	x1, [x0, #32]
   1b7b4:	ldr	x0, [sp, #96]
   1b7b8:	ldr	x0, [x0, #16]
   1b7bc:	cmp	x0, #0x0
   1b7c0:	b.eq	1b7e0 <idpriv_temp_restore@@Base+0x720>  // b.none
   1b7c4:	ldr	x0, [sp, #96]
   1b7c8:	ldr	x1, [x0, #16]
   1b7cc:	ldr	x0, [sp, #88]
   1b7d0:	ldr	x0, [x0, #32]
   1b7d4:	blr	x1
   1b7d8:	mov	x1, x0
   1b7dc:	b	1b7ec <idpriv_temp_restore@@Base+0x72c>
   1b7e0:	ldr	x0, [sp, #88]
   1b7e4:	ldr	x0, [x0, #32]
   1b7e8:	mov	x1, x0
   1b7ec:	ldr	x0, [sp, #88]
   1b7f0:	str	x1, [x0, #8]
   1b7f4:	ldr	x1, [sp, #88]
   1b7f8:	ldr	x0, [sp, #96]
   1b7fc:	bl	1b450 <idpriv_temp_restore@@Base+0x390>
   1b800:	ldr	x0, [sp, #88]
   1b804:	ldr	x1, [sp, #120]
   1b808:	str	x1, [x0, #24]
   1b80c:	ldr	x0, [sp, #120]
   1b810:	ldr	x1, [sp, #88]
   1b814:	str	x1, [x0, #16]
   1b818:	ldr	x0, [sp, #88]
   1b81c:	str	x0, [sp, #120]
   1b820:	ldr	x0, [sp, #24]
   1b824:	add	x0, x0, #0x8
   1b828:	str	x0, [sp, #24]
   1b82c:	ldr	x0, [sp, #32]
   1b830:	sub	x0, x0, #0x1
   1b834:	str	x0, [sp, #32]
   1b838:	ldr	x0, [sp, #32]
   1b83c:	cmp	x0, #0x0
   1b840:	b.ne	1b78c <idpriv_temp_restore@@Base+0x6cc>  // b.any
   1b844:	ldr	x0, [sp, #96]
   1b848:	add	x1, x0, #0x38
   1b84c:	ldr	x0, [sp, #120]
   1b850:	str	x1, [x0, #16]
   1b854:	ldr	x0, [sp, #96]
   1b858:	ldr	x1, [sp, #120]
   1b85c:	str	x1, [x0, #80]
   1b860:	ldr	x0, [sp, #96]
   1b864:	b	1b8d0 <idpriv_temp_restore@@Base+0x810>
   1b868:	nop
   1b86c:	ldr	x0, [sp, #120]
   1b870:	str	x0, [sp, #104]
   1b874:	b	1b894 <idpriv_temp_restore@@Base+0x7d4>
   1b878:	ldr	x0, [sp, #104]
   1b87c:	ldr	x0, [x0, #24]
   1b880:	str	x0, [sp, #80]
   1b884:	ldr	x0, [sp, #104]
   1b888:	bl	b130 <free@plt>
   1b88c:	ldr	x0, [sp, #80]
   1b890:	str	x0, [sp, #104]
   1b894:	ldr	x0, [sp, #96]
   1b898:	add	x0, x0, #0x38
   1b89c:	ldr	x1, [sp, #104]
   1b8a0:	cmp	x1, x0
   1b8a4:	b.ne	1b878 <idpriv_temp_restore@@Base+0x7b8>  // b.any
   1b8a8:	ldr	x0, [sp, #96]
   1b8ac:	ldr	x0, [x0, #40]
   1b8b0:	bl	b130 <free@plt>
   1b8b4:	b	1b8c4 <idpriv_temp_restore@@Base+0x804>
   1b8b8:	nop
   1b8bc:	b	1b8c4 <idpriv_temp_restore@@Base+0x804>
   1b8c0:	nop
   1b8c4:	ldr	x0, [sp, #96]
   1b8c8:	bl	b130 <free@plt>
   1b8cc:	mov	x0, #0x0                   	// #0
   1b8d0:	ldp	x29, x30, [sp], #128
   1b8d4:	ret
   1b8d8:	sub	sp, sp, #0x10
   1b8dc:	str	x0, [sp, #8]
   1b8e0:	ldr	x0, [sp, #8]
   1b8e4:	ldr	x0, [x0, #96]
   1b8e8:	add	sp, sp, #0x10
   1b8ec:	ret
   1b8f0:	sub	sp, sp, #0x10
   1b8f4:	str	x0, [sp, #8]
   1b8f8:	str	x1, [sp]
   1b8fc:	ldr	x0, [sp]
   1b900:	ldr	x0, [x0, #32]
   1b904:	add	sp, sp, #0x10
   1b908:	ret
   1b90c:	stp	x29, x30, [sp, #-64]!
   1b910:	mov	x29, sp
   1b914:	str	x0, [sp, #40]
   1b918:	str	x1, [sp, #32]
   1b91c:	str	x2, [sp, #24]
   1b920:	ldr	x0, [sp, #32]
   1b924:	ldr	x0, [x0, #32]
   1b928:	ldr	x1, [sp, #24]
   1b92c:	cmp	x1, x0
   1b930:	b.eq	1b9b4 <idpriv_temp_restore@@Base+0x8f4>  // b.none
   1b934:	ldr	x0, [sp, #40]
   1b938:	ldr	x0, [x0, #16]
   1b93c:	cmp	x0, #0x0
   1b940:	b.eq	1b958 <idpriv_temp_restore@@Base+0x898>  // b.none
   1b944:	ldr	x0, [sp, #40]
   1b948:	ldr	x1, [x0, #16]
   1b94c:	ldr	x0, [sp, #24]
   1b950:	blr	x1
   1b954:	b	1b95c <idpriv_temp_restore@@Base+0x89c>
   1b958:	ldr	x0, [sp, #24]
   1b95c:	str	x0, [sp, #56]
   1b960:	ldr	x0, [sp, #32]
   1b964:	ldr	x0, [x0, #8]
   1b968:	ldr	x1, [sp, #56]
   1b96c:	cmp	x1, x0
   1b970:	b.eq	1b9a8 <idpriv_temp_restore@@Base+0x8e8>  // b.none
   1b974:	ldr	x1, [sp, #32]
   1b978:	ldr	x0, [sp, #40]
   1b97c:	bl	1b4c4 <idpriv_temp_restore@@Base+0x404>
   1b980:	ldr	x0, [sp, #32]
   1b984:	ldr	x1, [sp, #24]
   1b988:	str	x1, [x0, #32]
   1b98c:	ldr	x0, [sp, #32]
   1b990:	ldr	x1, [sp, #56]
   1b994:	str	x1, [x0, #8]
   1b998:	ldr	x1, [sp, #32]
   1b99c:	ldr	x0, [sp, #40]
   1b9a0:	bl	1b450 <idpriv_temp_restore@@Base+0x390>
   1b9a4:	b	1b9b4 <idpriv_temp_restore@@Base+0x8f4>
   1b9a8:	ldr	x0, [sp, #32]
   1b9ac:	ldr	x1, [sp, #24]
   1b9b0:	str	x1, [x0, #32]
   1b9b4:	mov	w0, #0x0                   	// #0
   1b9b8:	ldp	x29, x30, [sp], #64
   1b9bc:	ret
   1b9c0:	sub	sp, sp, #0x10
   1b9c4:	str	x0, [sp, #8]
   1b9c8:	str	x1, [sp]
   1b9cc:	ldr	x0, [sp]
   1b9d0:	ldr	x1, [x0, #16]
   1b9d4:	ldr	x0, [sp, #8]
   1b9d8:	add	x0, x0, #0x38
   1b9dc:	cmp	x1, x0
   1b9e0:	b.eq	1b9f0 <idpriv_temp_restore@@Base+0x930>  // b.none
   1b9e4:	ldr	x0, [sp]
   1b9e8:	ldr	x0, [x0, #16]
   1b9ec:	b	1b9f4 <idpriv_temp_restore@@Base+0x934>
   1b9f0:	mov	x0, #0x0                   	// #0
   1b9f4:	add	sp, sp, #0x10
   1b9f8:	ret
   1b9fc:	sub	sp, sp, #0x10
   1ba00:	str	x0, [sp, #8]
   1ba04:	str	x1, [sp]
   1ba08:	ldr	x0, [sp]
   1ba0c:	ldr	x1, [x0, #24]
   1ba10:	ldr	x0, [sp, #8]
   1ba14:	add	x0, x0, #0x38
   1ba18:	cmp	x1, x0
   1ba1c:	b.eq	1ba2c <idpriv_temp_restore@@Base+0x96c>  // b.none
   1ba20:	ldr	x0, [sp]
   1ba24:	ldr	x0, [x0, #24]
   1ba28:	b	1ba30 <idpriv_temp_restore@@Base+0x970>
   1ba2c:	mov	x0, #0x0                   	// #0
   1ba30:	add	sp, sp, #0x10
   1ba34:	ret
   1ba38:	stp	x29, x30, [sp, #-48]!
   1ba3c:	mov	x29, sp
   1ba40:	str	x0, [sp, #24]
   1ba44:	str	x1, [sp, #16]
   1ba48:	ldr	x0, [sp, #24]
   1ba4c:	ldr	x0, [x0, #96]
   1ba50:	str	x0, [sp, #32]
   1ba54:	ldr	x1, [sp, #16]
   1ba58:	ldr	x0, [sp, #32]
   1ba5c:	cmp	x1, x0
   1ba60:	b.cc	1ba68 <idpriv_temp_restore@@Base+0x9a8>  // b.lo, b.ul, b.last
   1ba64:	bl	af70 <abort@plt>
   1ba68:	ldr	x0, [sp, #32]
   1ba6c:	sub	x0, x0, #0x1
   1ba70:	lsr	x0, x0, #1
   1ba74:	ldr	x1, [sp, #16]
   1ba78:	cmp	x1, x0
   1ba7c:	b.hi	1bab8 <idpriv_temp_restore@@Base+0x9f8>  // b.pmore
   1ba80:	ldr	x0, [sp, #24]
   1ba84:	ldr	x0, [x0, #72]
   1ba88:	str	x0, [sp, #40]
   1ba8c:	b	1baa8 <idpriv_temp_restore@@Base+0x9e8>
   1ba90:	ldr	x0, [sp, #40]
   1ba94:	ldr	x0, [x0, #16]
   1ba98:	str	x0, [sp, #40]
   1ba9c:	ldr	x0, [sp, #16]
   1baa0:	sub	x0, x0, #0x1
   1baa4:	str	x0, [sp, #16]
   1baa8:	ldr	x0, [sp, #16]
   1baac:	cmp	x0, #0x0
   1bab0:	b.ne	1ba90 <idpriv_temp_restore@@Base+0x9d0>  // b.any
   1bab4:	b	1bb00 <idpriv_temp_restore@@Base+0xa40>
   1bab8:	ldr	x1, [sp, #32]
   1babc:	ldr	x0, [sp, #16]
   1bac0:	sub	x0, x1, x0
   1bac4:	sub	x0, x0, #0x1
   1bac8:	str	x0, [sp, #16]
   1bacc:	ldr	x0, [sp, #24]
   1bad0:	ldr	x0, [x0, #80]
   1bad4:	str	x0, [sp, #40]
   1bad8:	b	1baf4 <idpriv_temp_restore@@Base+0xa34>
   1badc:	ldr	x0, [sp, #40]
   1bae0:	ldr	x0, [x0, #24]
   1bae4:	str	x0, [sp, #40]
   1bae8:	ldr	x0, [sp, #16]
   1baec:	sub	x0, x0, #0x1
   1baf0:	str	x0, [sp, #16]
   1baf4:	ldr	x0, [sp, #16]
   1baf8:	cmp	x0, #0x0
   1bafc:	b.ne	1badc <idpriv_temp_restore@@Base+0xa1c>  // b.any
   1bb00:	ldr	x0, [sp, #40]
   1bb04:	ldr	x0, [x0, #32]
   1bb08:	ldp	x29, x30, [sp], #48
   1bb0c:	ret
   1bb10:	stp	x29, x30, [sp, #-80]!
   1bb14:	mov	x29, sp
   1bb18:	str	x0, [sp, #40]
   1bb1c:	str	x1, [sp, #32]
   1bb20:	str	x2, [sp, #24]
   1bb24:	ldr	x0, [sp, #40]
   1bb28:	ldr	x0, [x0, #96]
   1bb2c:	str	x0, [sp, #64]
   1bb30:	ldr	x1, [sp, #32]
   1bb34:	ldr	x0, [sp, #64]
   1bb38:	cmp	x1, x0
   1bb3c:	b.cc	1bb44 <idpriv_temp_restore@@Base+0xa84>  // b.lo, b.ul, b.last
   1bb40:	bl	af70 <abort@plt>
   1bb44:	ldr	x0, [sp, #64]
   1bb48:	sub	x0, x0, #0x1
   1bb4c:	lsr	x0, x0, #1
   1bb50:	ldr	x1, [sp, #32]
   1bb54:	cmp	x1, x0
   1bb58:	b.hi	1bb94 <idpriv_temp_restore@@Base+0xad4>  // b.pmore
   1bb5c:	ldr	x0, [sp, #40]
   1bb60:	ldr	x0, [x0, #72]
   1bb64:	str	x0, [sp, #72]
   1bb68:	b	1bb84 <idpriv_temp_restore@@Base+0xac4>
   1bb6c:	ldr	x0, [sp, #72]
   1bb70:	ldr	x0, [x0, #16]
   1bb74:	str	x0, [sp, #72]
   1bb78:	ldr	x0, [sp, #32]
   1bb7c:	sub	x0, x0, #0x1
   1bb80:	str	x0, [sp, #32]
   1bb84:	ldr	x0, [sp, #32]
   1bb88:	cmp	x0, #0x0
   1bb8c:	b.ne	1bb6c <idpriv_temp_restore@@Base+0xaac>  // b.any
   1bb90:	b	1bbdc <idpriv_temp_restore@@Base+0xb1c>
   1bb94:	ldr	x1, [sp, #64]
   1bb98:	ldr	x0, [sp, #32]
   1bb9c:	sub	x0, x1, x0
   1bba0:	sub	x0, x0, #0x1
   1bba4:	str	x0, [sp, #32]
   1bba8:	ldr	x0, [sp, #40]
   1bbac:	ldr	x0, [x0, #80]
   1bbb0:	str	x0, [sp, #72]
   1bbb4:	b	1bbd0 <idpriv_temp_restore@@Base+0xb10>
   1bbb8:	ldr	x0, [sp, #72]
   1bbbc:	ldr	x0, [x0, #24]
   1bbc0:	str	x0, [sp, #72]
   1bbc4:	ldr	x0, [sp, #32]
   1bbc8:	sub	x0, x0, #0x1
   1bbcc:	str	x0, [sp, #32]
   1bbd0:	ldr	x0, [sp, #32]
   1bbd4:	cmp	x0, #0x0
   1bbd8:	b.ne	1bbb8 <idpriv_temp_restore@@Base+0xaf8>  // b.any
   1bbdc:	ldr	x0, [sp, #72]
   1bbe0:	ldr	x0, [x0, #32]
   1bbe4:	ldr	x1, [sp, #24]
   1bbe8:	cmp	x1, x0
   1bbec:	b.eq	1bc70 <idpriv_temp_restore@@Base+0xbb0>  // b.none
   1bbf0:	ldr	x0, [sp, #40]
   1bbf4:	ldr	x0, [x0, #16]
   1bbf8:	cmp	x0, #0x0
   1bbfc:	b.eq	1bc14 <idpriv_temp_restore@@Base+0xb54>  // b.none
   1bc00:	ldr	x0, [sp, #40]
   1bc04:	ldr	x1, [x0, #16]
   1bc08:	ldr	x0, [sp, #24]
   1bc0c:	blr	x1
   1bc10:	b	1bc18 <idpriv_temp_restore@@Base+0xb58>
   1bc14:	ldr	x0, [sp, #24]
   1bc18:	str	x0, [sp, #56]
   1bc1c:	ldr	x0, [sp, #72]
   1bc20:	ldr	x0, [x0, #8]
   1bc24:	ldr	x1, [sp, #56]
   1bc28:	cmp	x1, x0
   1bc2c:	b.eq	1bc64 <idpriv_temp_restore@@Base+0xba4>  // b.none
   1bc30:	ldr	x1, [sp, #72]
   1bc34:	ldr	x0, [sp, #40]
   1bc38:	bl	1b4c4 <idpriv_temp_restore@@Base+0x404>
   1bc3c:	ldr	x0, [sp, #72]
   1bc40:	ldr	x1, [sp, #24]
   1bc44:	str	x1, [x0, #32]
   1bc48:	ldr	x0, [sp, #72]
   1bc4c:	ldr	x1, [sp, #56]
   1bc50:	str	x1, [x0, #8]
   1bc54:	ldr	x1, [sp, #72]
   1bc58:	ldr	x0, [sp, #40]
   1bc5c:	bl	1b450 <idpriv_temp_restore@@Base+0x390>
   1bc60:	b	1bc70 <idpriv_temp_restore@@Base+0xbb0>
   1bc64:	ldr	x0, [sp, #72]
   1bc68:	ldr	x1, [sp, #24]
   1bc6c:	str	x1, [x0, #32]
   1bc70:	ldr	x0, [sp, #72]
   1bc74:	ldp	x29, x30, [sp], #80
   1bc78:	ret
   1bc7c:	stp	x29, x30, [sp, #-128]!
   1bc80:	mov	x29, sp
   1bc84:	str	x0, [sp, #40]
   1bc88:	str	x1, [sp, #32]
   1bc8c:	str	x2, [sp, #24]
   1bc90:	str	x3, [sp, #16]
   1bc94:	ldr	x0, [sp, #40]
   1bc98:	ldr	x0, [x0, #96]
   1bc9c:	str	x0, [sp, #80]
   1bca0:	ldr	x1, [sp, #32]
   1bca4:	ldr	x0, [sp, #24]
   1bca8:	cmp	x1, x0
   1bcac:	b.hi	1bcc0 <idpriv_temp_restore@@Base+0xc00>  // b.pmore
   1bcb0:	ldr	x1, [sp, #24]
   1bcb4:	ldr	x0, [sp, #80]
   1bcb8:	cmp	x1, x0
   1bcbc:	b.ls	1bcc4 <idpriv_temp_restore@@Base+0xc04>  // b.plast
   1bcc0:	bl	af70 <abort@plt>
   1bcc4:	ldr	x0, [sp, #40]
   1bcc8:	ldr	x0, [x0, #16]
   1bccc:	cmp	x0, #0x0
   1bcd0:	b.eq	1bce8 <idpriv_temp_restore@@Base+0xc28>  // b.none
   1bcd4:	ldr	x0, [sp, #40]
   1bcd8:	ldr	x1, [x0, #16]
   1bcdc:	ldr	x0, [sp, #16]
   1bce0:	blr	x1
   1bce4:	b	1bcec <idpriv_temp_restore@@Base+0xc2c>
   1bce8:	ldr	x0, [sp, #16]
   1bcec:	str	x0, [sp, #72]
   1bcf0:	ldr	x0, [sp, #40]
   1bcf4:	ldr	x1, [x0, #48]
   1bcf8:	ldr	x0, [sp, #72]
   1bcfc:	udiv	x2, x0, x1
   1bd00:	mul	x1, x2, x1
   1bd04:	sub	x0, x0, x1
   1bd08:	str	x0, [sp, #64]
   1bd0c:	ldr	x0, [sp, #40]
   1bd10:	ldr	x0, [x0, #8]
   1bd14:	str	x0, [sp, #56]
   1bd18:	ldr	x0, [sp, #40]
   1bd1c:	ldrb	w0, [x0, #32]
   1bd20:	eor	w0, w0, #0x1
   1bd24:	and	w0, w0, #0xff
   1bd28:	cmp	w0, #0x0
   1bd2c:	b.eq	1beac <idpriv_temp_restore@@Base+0xdec>  // b.none
   1bd30:	str	xzr, [sp, #120]
   1bd34:	ldr	x0, [sp, #40]
   1bd38:	ldr	x1, [x0, #40]
   1bd3c:	ldr	x0, [sp, #64]
   1bd40:	lsl	x0, x0, #3
   1bd44:	add	x0, x1, x0
   1bd48:	ldr	x0, [x0]
   1bd4c:	str	x0, [sp, #112]
   1bd50:	b	1bdcc <idpriv_temp_restore@@Base+0xd0c>
   1bd54:	ldr	x0, [sp, #112]
   1bd58:	ldr	x0, [x0, #8]
   1bd5c:	ldr	x1, [sp, #72]
   1bd60:	cmp	x1, x0
   1bd64:	b.ne	1bdc0 <idpriv_temp_restore@@Base+0xd00>  // b.any
   1bd68:	ldr	x0, [sp, #56]
   1bd6c:	cmp	x0, #0x0
   1bd70:	b.eq	1bd94 <idpriv_temp_restore@@Base+0xcd4>  // b.none
   1bd74:	ldr	x0, [sp, #112]
   1bd78:	ldr	x0, [x0, #32]
   1bd7c:	ldr	x2, [sp, #56]
   1bd80:	mov	x1, x0
   1bd84:	ldr	x0, [sp, #16]
   1bd88:	blr	x2
   1bd8c:	and	w0, w0, #0xff
   1bd90:	b	1bdac <idpriv_temp_restore@@Base+0xcec>
   1bd94:	ldr	x0, [sp, #112]
   1bd98:	ldr	x0, [x0, #32]
   1bd9c:	ldr	x1, [sp, #16]
   1bda0:	cmp	x1, x0
   1bda4:	cset	w0, eq  // eq = none
   1bda8:	and	w0, w0, #0xff
   1bdac:	cmp	w0, #0x0
   1bdb0:	b.eq	1bdc0 <idpriv_temp_restore@@Base+0xd00>  // b.none
   1bdb4:	ldr	x0, [sp, #112]
   1bdb8:	str	x0, [sp, #120]
   1bdbc:	b	1bdd8 <idpriv_temp_restore@@Base+0xd18>
   1bdc0:	ldr	x0, [sp, #112]
   1bdc4:	ldr	x0, [x0]
   1bdc8:	str	x0, [sp, #112]
   1bdcc:	ldr	x0, [sp, #112]
   1bdd0:	cmp	x0, #0x0
   1bdd4:	b.ne	1bd54 <idpriv_temp_restore@@Base+0xc94>  // b.any
   1bdd8:	ldr	x0, [sp, #32]
   1bddc:	cmp	x0, #0x0
   1bde0:	b.eq	1be34 <idpriv_temp_restore@@Base+0xd74>  // b.none
   1bde4:	ldr	x0, [sp, #40]
   1bde8:	ldr	x0, [x0, #72]
   1bdec:	str	x0, [sp, #112]
   1bdf0:	ldr	x1, [sp, #112]
   1bdf4:	ldr	x0, [sp, #120]
   1bdf8:	cmp	x1, x0
   1bdfc:	b.ne	1be08 <idpriv_temp_restore@@Base+0xd48>  // b.any
   1be00:	mov	x0, #0x0                   	// #0
   1be04:	b	1c148 <idpriv_temp_restore@@Base+0x1088>
   1be08:	ldr	x0, [sp, #32]
   1be0c:	sub	x0, x0, #0x1
   1be10:	str	x0, [sp, #32]
   1be14:	ldr	x0, [sp, #32]
   1be18:	cmp	x0, #0x0
   1be1c:	b.eq	1be30 <idpriv_temp_restore@@Base+0xd70>  // b.none
   1be20:	ldr	x0, [sp, #112]
   1be24:	ldr	x0, [x0, #16]
   1be28:	str	x0, [sp, #112]
   1be2c:	b	1bdf0 <idpriv_temp_restore@@Base+0xd30>
   1be30:	nop
   1be34:	ldr	x1, [sp, #24]
   1be38:	ldr	x0, [sp, #80]
   1be3c:	cmp	x1, x0
   1be40:	b.cs	1bea4 <idpriv_temp_restore@@Base+0xde4>  // b.hs, b.nlast
   1be44:	ldr	x1, [sp, #80]
   1be48:	ldr	x0, [sp, #24]
   1be4c:	sub	x0, x1, x0
   1be50:	str	x0, [sp, #24]
   1be54:	ldr	x0, [sp, #40]
   1be58:	ldr	x0, [x0, #80]
   1be5c:	str	x0, [sp, #112]
   1be60:	ldr	x1, [sp, #112]
   1be64:	ldr	x0, [sp, #120]
   1be68:	cmp	x1, x0
   1be6c:	b.ne	1be78 <idpriv_temp_restore@@Base+0xdb8>  // b.any
   1be70:	mov	x0, #0x0                   	// #0
   1be74:	b	1c148 <idpriv_temp_restore@@Base+0x1088>
   1be78:	ldr	x0, [sp, #24]
   1be7c:	sub	x0, x0, #0x1
   1be80:	str	x0, [sp, #24]
   1be84:	ldr	x0, [sp, #24]
   1be88:	cmp	x0, #0x0
   1be8c:	b.eq	1bea0 <idpriv_temp_restore@@Base+0xde0>  // b.none
   1be90:	ldr	x0, [sp, #112]
   1be94:	ldr	x0, [x0, #24]
   1be98:	str	x0, [sp, #112]
   1be9c:	b	1be60 <idpriv_temp_restore@@Base+0xda0>
   1bea0:	nop
   1bea4:	ldr	x0, [sp, #120]
   1bea8:	b	1c148 <idpriv_temp_restore@@Base+0x1088>
   1beac:	strb	wzr, [sp, #111]
   1beb0:	str	xzr, [sp, #96]
   1beb4:	ldr	x0, [sp, #40]
   1beb8:	ldr	x1, [x0, #40]
   1bebc:	ldr	x0, [sp, #64]
   1bec0:	lsl	x0, x0, #3
   1bec4:	add	x0, x1, x0
   1bec8:	ldr	x0, [x0]
   1becc:	str	x0, [sp, #88]
   1bed0:	b	1bf64 <idpriv_temp_restore@@Base+0xea4>
   1bed4:	ldr	x0, [sp, #88]
   1bed8:	ldr	x0, [x0, #8]
   1bedc:	ldr	x1, [sp, #72]
   1bee0:	cmp	x1, x0
   1bee4:	b.ne	1bf58 <idpriv_temp_restore@@Base+0xe98>  // b.any
   1bee8:	ldr	x0, [sp, #56]
   1beec:	cmp	x0, #0x0
   1bef0:	b.eq	1bf14 <idpriv_temp_restore@@Base+0xe54>  // b.none
   1bef4:	ldr	x0, [sp, #88]
   1bef8:	ldr	x0, [x0, #32]
   1befc:	ldr	x2, [sp, #56]
   1bf00:	mov	x1, x0
   1bf04:	ldr	x0, [sp, #16]
   1bf08:	blr	x2
   1bf0c:	and	w0, w0, #0xff
   1bf10:	b	1bf2c <idpriv_temp_restore@@Base+0xe6c>
   1bf14:	ldr	x0, [sp, #88]
   1bf18:	ldr	x0, [x0, #32]
   1bf1c:	ldr	x1, [sp, #16]
   1bf20:	cmp	x1, x0
   1bf24:	cset	w0, eq  // eq = none
   1bf28:	and	w0, w0, #0xff
   1bf2c:	cmp	w0, #0x0
   1bf30:	b.eq	1bf58 <idpriv_temp_restore@@Base+0xe98>  // b.none
   1bf34:	ldr	x0, [sp, #96]
   1bf38:	cmp	x0, #0x0
   1bf3c:	b.ne	1bf4c <idpriv_temp_restore@@Base+0xe8c>  // b.any
   1bf40:	ldr	x0, [sp, #88]
   1bf44:	str	x0, [sp, #96]
   1bf48:	b	1bf58 <idpriv_temp_restore@@Base+0xe98>
   1bf4c:	mov	w0, #0x1                   	// #1
   1bf50:	strb	w0, [sp, #111]
   1bf54:	b	1bf70 <idpriv_temp_restore@@Base+0xeb0>
   1bf58:	ldr	x0, [sp, #88]
   1bf5c:	ldr	x0, [x0]
   1bf60:	str	x0, [sp, #88]
   1bf64:	ldr	x0, [sp, #88]
   1bf68:	cmp	x0, #0x0
   1bf6c:	b.ne	1bed4 <idpriv_temp_restore@@Base+0xe14>  // b.any
   1bf70:	ldrb	w0, [sp, #111]
   1bf74:	cmp	w0, #0x0
   1bf78:	b.eq	1c058 <idpriv_temp_restore@@Base+0xf98>  // b.none
   1bf7c:	ldr	x1, [sp, #24]
   1bf80:	ldr	x0, [sp, #32]
   1bf84:	sub	x0, x1, x0
   1bf88:	str	x0, [sp, #24]
   1bf8c:	ldr	x0, [sp, #40]
   1bf90:	ldr	x0, [x0, #72]
   1bf94:	str	x0, [sp, #88]
   1bf98:	b	1bfb4 <idpriv_temp_restore@@Base+0xef4>
   1bf9c:	ldr	x0, [sp, #88]
   1bfa0:	ldr	x0, [x0, #16]
   1bfa4:	str	x0, [sp, #88]
   1bfa8:	ldr	x0, [sp, #32]
   1bfac:	sub	x0, x0, #0x1
   1bfb0:	str	x0, [sp, #32]
   1bfb4:	ldr	x0, [sp, #32]
   1bfb8:	cmp	x0, #0x0
   1bfbc:	b.ne	1bf9c <idpriv_temp_restore@@Base+0xedc>  // b.any
   1bfc0:	b	1c044 <idpriv_temp_restore@@Base+0xf84>
   1bfc4:	ldr	x0, [sp, #88]
   1bfc8:	ldr	x0, [x0, #8]
   1bfcc:	ldr	x1, [sp, #72]
   1bfd0:	cmp	x1, x0
   1bfd4:	b.ne	1c02c <idpriv_temp_restore@@Base+0xf6c>  // b.any
   1bfd8:	ldr	x0, [sp, #56]
   1bfdc:	cmp	x0, #0x0
   1bfe0:	b.eq	1c004 <idpriv_temp_restore@@Base+0xf44>  // b.none
   1bfe4:	ldr	x0, [sp, #88]
   1bfe8:	ldr	x0, [x0, #32]
   1bfec:	ldr	x2, [sp, #56]
   1bff0:	mov	x1, x0
   1bff4:	ldr	x0, [sp, #16]
   1bff8:	blr	x2
   1bffc:	and	w0, w0, #0xff
   1c000:	b	1c01c <idpriv_temp_restore@@Base+0xf5c>
   1c004:	ldr	x0, [sp, #88]
   1c008:	ldr	x0, [x0, #32]
   1c00c:	ldr	x1, [sp, #16]
   1c010:	cmp	x1, x0
   1c014:	cset	w0, eq  // eq = none
   1c018:	and	w0, w0, #0xff
   1c01c:	cmp	w0, #0x0
   1c020:	b.eq	1c02c <idpriv_temp_restore@@Base+0xf6c>  // b.none
   1c024:	ldr	x0, [sp, #88]
   1c028:	b	1c148 <idpriv_temp_restore@@Base+0x1088>
   1c02c:	ldr	x0, [sp, #88]
   1c030:	ldr	x0, [x0, #16]
   1c034:	str	x0, [sp, #88]
   1c038:	ldr	x0, [sp, #24]
   1c03c:	sub	x0, x0, #0x1
   1c040:	str	x0, [sp, #24]
   1c044:	ldr	x0, [sp, #24]
   1c048:	cmp	x0, #0x0
   1c04c:	b.ne	1bfc4 <idpriv_temp_restore@@Base+0xf04>  // b.any
   1c050:	mov	x0, #0x0                   	// #0
   1c054:	b	1c148 <idpriv_temp_restore@@Base+0x1088>
   1c058:	ldr	x0, [sp, #32]
   1c05c:	cmp	x0, #0x0
   1c060:	b.eq	1c0cc <idpriv_temp_restore@@Base+0x100c>  // b.none
   1c064:	ldr	x0, [sp, #40]
   1c068:	ldr	x0, [x0, #72]
   1c06c:	str	x0, [sp, #88]
   1c070:	b	1c0b0 <idpriv_temp_restore@@Base+0xff0>
   1c074:	ldr	x1, [sp, #88]
   1c078:	ldr	x0, [sp, #96]
   1c07c:	cmp	x1, x0
   1c080:	b.ne	1c08c <idpriv_temp_restore@@Base+0xfcc>  // b.any
   1c084:	mov	x0, #0x0                   	// #0
   1c088:	b	1c148 <idpriv_temp_restore@@Base+0x1088>
   1c08c:	ldr	x0, [sp, #32]
   1c090:	sub	x0, x0, #0x1
   1c094:	str	x0, [sp, #32]
   1c098:	ldr	x0, [sp, #32]
   1c09c:	cmp	x0, #0x0
   1c0a0:	b.eq	1c0c8 <idpriv_temp_restore@@Base+0x1008>  // b.none
   1c0a4:	ldr	x0, [sp, #88]
   1c0a8:	ldr	x0, [x0, #16]
   1c0ac:	str	x0, [sp, #88]
   1c0b0:	ldr	x0, [sp, #40]
   1c0b4:	add	x0, x0, #0x38
   1c0b8:	ldr	x1, [sp, #88]
   1c0bc:	cmp	x1, x0
   1c0c0:	b.ne	1c074 <idpriv_temp_restore@@Base+0xfb4>  // b.any
   1c0c4:	b	1c0cc <idpriv_temp_restore@@Base+0x100c>
   1c0c8:	nop
   1c0cc:	ldr	x0, [sp, #40]
   1c0d0:	ldr	x0, [x0, #96]
   1c0d4:	ldr	x1, [sp, #24]
   1c0d8:	cmp	x1, x0
   1c0dc:	b.cs	1c144 <idpriv_temp_restore@@Base+0x1084>  // b.hs, b.nlast
   1c0e0:	ldr	x0, [sp, #40]
   1c0e4:	ldr	x1, [x0, #96]
   1c0e8:	ldr	x0, [sp, #24]
   1c0ec:	sub	x0, x1, x0
   1c0f0:	str	x0, [sp, #24]
   1c0f4:	ldr	x0, [sp, #40]
   1c0f8:	ldr	x0, [x0, #80]
   1c0fc:	str	x0, [sp, #88]
   1c100:	ldr	x1, [sp, #88]
   1c104:	ldr	x0, [sp, #96]
   1c108:	cmp	x1, x0
   1c10c:	b.ne	1c118 <idpriv_temp_restore@@Base+0x1058>  // b.any
   1c110:	mov	x0, #0x0                   	// #0
   1c114:	b	1c148 <idpriv_temp_restore@@Base+0x1088>
   1c118:	ldr	x0, [sp, #24]
   1c11c:	sub	x0, x0, #0x1
   1c120:	str	x0, [sp, #24]
   1c124:	ldr	x0, [sp, #24]
   1c128:	cmp	x0, #0x0
   1c12c:	b.eq	1c140 <idpriv_temp_restore@@Base+0x1080>  // b.none
   1c130:	ldr	x0, [sp, #88]
   1c134:	ldr	x0, [x0, #24]
   1c138:	str	x0, [sp, #88]
   1c13c:	b	1c100 <idpriv_temp_restore@@Base+0x1040>
   1c140:	nop
   1c144:	ldr	x0, [sp, #96]
   1c148:	ldp	x29, x30, [sp], #128
   1c14c:	ret
   1c150:	stp	x29, x30, [sp, #-128]!
   1c154:	mov	x29, sp
   1c158:	str	x0, [sp, #40]
   1c15c:	str	x1, [sp, #32]
   1c160:	str	x2, [sp, #24]
   1c164:	str	x3, [sp, #16]
   1c168:	ldr	x0, [sp, #40]
   1c16c:	ldr	x0, [x0, #96]
   1c170:	str	x0, [sp, #80]
   1c174:	ldr	x1, [sp, #32]
   1c178:	ldr	x0, [sp, #24]
   1c17c:	cmp	x1, x0
   1c180:	b.hi	1c194 <idpriv_temp_restore@@Base+0x10d4>  // b.pmore
   1c184:	ldr	x1, [sp, #24]
   1c188:	ldr	x0, [sp, #80]
   1c18c:	cmp	x1, x0
   1c190:	b.ls	1c198 <idpriv_temp_restore@@Base+0x10d8>  // b.plast
   1c194:	bl	af70 <abort@plt>
   1c198:	ldr	x0, [sp, #40]
   1c19c:	ldr	x0, [x0, #16]
   1c1a0:	cmp	x0, #0x0
   1c1a4:	b.eq	1c1bc <idpriv_temp_restore@@Base+0x10fc>  // b.none
   1c1a8:	ldr	x0, [sp, #40]
   1c1ac:	ldr	x1, [x0, #16]
   1c1b0:	ldr	x0, [sp, #16]
   1c1b4:	blr	x1
   1c1b8:	b	1c1c0 <idpriv_temp_restore@@Base+0x1100>
   1c1bc:	ldr	x0, [sp, #16]
   1c1c0:	str	x0, [sp, #72]
   1c1c4:	ldr	x0, [sp, #40]
   1c1c8:	ldr	x1, [x0, #48]
   1c1cc:	ldr	x0, [sp, #72]
   1c1d0:	udiv	x2, x0, x1
   1c1d4:	mul	x1, x2, x1
   1c1d8:	sub	x0, x0, x1
   1c1dc:	str	x0, [sp, #64]
   1c1e0:	ldr	x0, [sp, #40]
   1c1e4:	ldr	x0, [x0, #8]
   1c1e8:	str	x0, [sp, #56]
   1c1ec:	ldr	x0, [sp, #40]
   1c1f0:	ldrb	w0, [x0, #32]
   1c1f4:	eor	w0, w0, #0x1
   1c1f8:	and	w0, w0, #0xff
   1c1fc:	cmp	w0, #0x0
   1c200:	b.eq	1c2a0 <idpriv_temp_restore@@Base+0x11e0>  // b.none
   1c204:	ldr	x0, [sp, #40]
   1c208:	ldr	x1, [x0, #40]
   1c20c:	ldr	x0, [sp, #64]
   1c210:	lsl	x0, x0, #3
   1c214:	add	x0, x1, x0
   1c218:	ldr	x0, [x0]
   1c21c:	str	x0, [sp, #120]
   1c220:	b	1c290 <idpriv_temp_restore@@Base+0x11d0>
   1c224:	ldr	x0, [sp, #120]
   1c228:	ldr	x0, [x0, #8]
   1c22c:	ldr	x1, [sp, #72]
   1c230:	cmp	x1, x0
   1c234:	b.ne	1c284 <idpriv_temp_restore@@Base+0x11c4>  // b.any
   1c238:	ldr	x0, [sp, #56]
   1c23c:	cmp	x0, #0x0
   1c240:	b.eq	1c264 <idpriv_temp_restore@@Base+0x11a4>  // b.none
   1c244:	ldr	x0, [sp, #120]
   1c248:	ldr	x0, [x0, #32]
   1c24c:	ldr	x2, [sp, #56]
   1c250:	mov	x1, x0
   1c254:	ldr	x0, [sp, #16]
   1c258:	blr	x2
   1c25c:	and	w0, w0, #0xff
   1c260:	b	1c27c <idpriv_temp_restore@@Base+0x11bc>
   1c264:	ldr	x0, [sp, #120]
   1c268:	ldr	x0, [x0, #32]
   1c26c:	ldr	x1, [sp, #16]
   1c270:	cmp	x1, x0
   1c274:	cset	w0, eq  // eq = none
   1c278:	and	w0, w0, #0xff
   1c27c:	cmp	w0, #0x0
   1c280:	b.ne	1c454 <idpriv_temp_restore@@Base+0x1394>  // b.any
   1c284:	ldr	x0, [sp, #120]
   1c288:	ldr	x0, [x0]
   1c28c:	str	x0, [sp, #120]
   1c290:	ldr	x0, [sp, #120]
   1c294:	cmp	x0, #0x0
   1c298:	b.ne	1c224 <idpriv_temp_restore@@Base+0x1164>  // b.any
   1c29c:	b	1c458 <idpriv_temp_restore@@Base+0x1398>
   1c2a0:	strb	wzr, [sp, #119]
   1c2a4:	str	xzr, [sp, #104]
   1c2a8:	ldr	x0, [sp, #40]
   1c2ac:	ldr	x1, [x0, #40]
   1c2b0:	ldr	x0, [sp, #64]
   1c2b4:	lsl	x0, x0, #3
   1c2b8:	add	x0, x1, x0
   1c2bc:	ldr	x0, [x0]
   1c2c0:	str	x0, [sp, #120]
   1c2c4:	b	1c358 <idpriv_temp_restore@@Base+0x1298>
   1c2c8:	ldr	x0, [sp, #120]
   1c2cc:	ldr	x0, [x0, #8]
   1c2d0:	ldr	x1, [sp, #72]
   1c2d4:	cmp	x1, x0
   1c2d8:	b.ne	1c34c <idpriv_temp_restore@@Base+0x128c>  // b.any
   1c2dc:	ldr	x0, [sp, #56]
   1c2e0:	cmp	x0, #0x0
   1c2e4:	b.eq	1c308 <idpriv_temp_restore@@Base+0x1248>  // b.none
   1c2e8:	ldr	x0, [sp, #120]
   1c2ec:	ldr	x0, [x0, #32]
   1c2f0:	ldr	x2, [sp, #56]
   1c2f4:	mov	x1, x0
   1c2f8:	ldr	x0, [sp, #16]
   1c2fc:	blr	x2
   1c300:	and	w0, w0, #0xff
   1c304:	b	1c320 <idpriv_temp_restore@@Base+0x1260>
   1c308:	ldr	x0, [sp, #120]
   1c30c:	ldr	x0, [x0, #32]
   1c310:	ldr	x1, [sp, #16]
   1c314:	cmp	x1, x0
   1c318:	cset	w0, eq  // eq = none
   1c31c:	and	w0, w0, #0xff
   1c320:	cmp	w0, #0x0
   1c324:	b.eq	1c34c <idpriv_temp_restore@@Base+0x128c>  // b.none
   1c328:	ldr	x0, [sp, #104]
   1c32c:	cmp	x0, #0x0
   1c330:	b.ne	1c340 <idpriv_temp_restore@@Base+0x1280>  // b.any
   1c334:	ldr	x0, [sp, #120]
   1c338:	str	x0, [sp, #104]
   1c33c:	b	1c34c <idpriv_temp_restore@@Base+0x128c>
   1c340:	mov	w0, #0x1                   	// #1
   1c344:	strb	w0, [sp, #119]
   1c348:	b	1c364 <idpriv_temp_restore@@Base+0x12a4>
   1c34c:	ldr	x0, [sp, #120]
   1c350:	ldr	x0, [x0]
   1c354:	str	x0, [sp, #120]
   1c358:	ldr	x0, [sp, #120]
   1c35c:	cmp	x0, #0x0
   1c360:	b.ne	1c2c8 <idpriv_temp_restore@@Base+0x1208>  // b.any
   1c364:	ldrb	w0, [sp, #119]
   1c368:	cmp	w0, #0x0
   1c36c:	b.eq	1c448 <idpriv_temp_restore@@Base+0x1388>  // b.none
   1c370:	ldr	x0, [sp, #32]
   1c374:	str	x0, [sp, #96]
   1c378:	ldr	x0, [sp, #40]
   1c37c:	ldr	x0, [x0, #72]
   1c380:	str	x0, [sp, #120]
   1c384:	b	1c3a0 <idpriv_temp_restore@@Base+0x12e0>
   1c388:	ldr	x0, [sp, #120]
   1c38c:	ldr	x0, [x0, #16]
   1c390:	str	x0, [sp, #120]
   1c394:	ldr	x0, [sp, #32]
   1c398:	sub	x0, x0, #0x1
   1c39c:	str	x0, [sp, #32]
   1c3a0:	ldr	x0, [sp, #32]
   1c3a4:	cmp	x0, #0x0
   1c3a8:	b.ne	1c388 <idpriv_temp_restore@@Base+0x12c8>  // b.any
   1c3ac:	b	1c430 <idpriv_temp_restore@@Base+0x1370>
   1c3b0:	ldr	x0, [sp, #120]
   1c3b4:	ldr	x0, [x0, #8]
   1c3b8:	ldr	x1, [sp, #72]
   1c3bc:	cmp	x1, x0
   1c3c0:	b.ne	1c418 <idpriv_temp_restore@@Base+0x1358>  // b.any
   1c3c4:	ldr	x0, [sp, #56]
   1c3c8:	cmp	x0, #0x0
   1c3cc:	b.eq	1c3f0 <idpriv_temp_restore@@Base+0x1330>  // b.none
   1c3d0:	ldr	x0, [sp, #120]
   1c3d4:	ldr	x0, [x0, #32]
   1c3d8:	ldr	x2, [sp, #56]
   1c3dc:	mov	x1, x0
   1c3e0:	ldr	x0, [sp, #16]
   1c3e4:	blr	x2
   1c3e8:	and	w0, w0, #0xff
   1c3ec:	b	1c408 <idpriv_temp_restore@@Base+0x1348>
   1c3f0:	ldr	x0, [sp, #120]
   1c3f4:	ldr	x0, [x0, #32]
   1c3f8:	ldr	x1, [sp, #16]
   1c3fc:	cmp	x1, x0
   1c400:	cset	w0, eq  // eq = none
   1c404:	and	w0, w0, #0xff
   1c408:	cmp	w0, #0x0
   1c40c:	b.eq	1c418 <idpriv_temp_restore@@Base+0x1358>  // b.none
   1c410:	ldr	x0, [sp, #96]
   1c414:	b	1c4d0 <idpriv_temp_restore@@Base+0x1410>
   1c418:	ldr	x0, [sp, #120]
   1c41c:	ldr	x0, [x0, #16]
   1c420:	str	x0, [sp, #120]
   1c424:	ldr	x0, [sp, #96]
   1c428:	add	x0, x0, #0x1
   1c42c:	str	x0, [sp, #96]
   1c430:	ldr	x1, [sp, #96]
   1c434:	ldr	x0, [sp, #24]
   1c438:	cmp	x1, x0
   1c43c:	b.cc	1c3b0 <idpriv_temp_restore@@Base+0x12f0>  // b.lo, b.ul, b.last
   1c440:	mov	x0, #0xffffffffffffffff    	// #-1
   1c444:	b	1c4d0 <idpriv_temp_restore@@Base+0x1410>
   1c448:	ldr	x0, [sp, #104]
   1c44c:	str	x0, [sp, #120]
   1c450:	b	1c458 <idpriv_temp_restore@@Base+0x1398>
   1c454:	nop
   1c458:	ldr	x0, [sp, #120]
   1c45c:	cmp	x0, #0x0
   1c460:	b.ne	1c46c <idpriv_temp_restore@@Base+0x13ac>  // b.any
   1c464:	mov	x0, #0xffffffffffffffff    	// #-1
   1c468:	b	1c4d0 <idpriv_temp_restore@@Base+0x1410>
   1c46c:	str	xzr, [sp, #88]
   1c470:	b	1c48c <idpriv_temp_restore@@Base+0x13cc>
   1c474:	ldr	x0, [sp, #88]
   1c478:	add	x0, x0, #0x1
   1c47c:	str	x0, [sp, #88]
   1c480:	ldr	x0, [sp, #120]
   1c484:	ldr	x0, [x0, #24]
   1c488:	str	x0, [sp, #120]
   1c48c:	ldr	x0, [sp, #120]
   1c490:	ldr	x1, [x0, #24]
   1c494:	ldr	x0, [sp, #40]
   1c498:	add	x0, x0, #0x38
   1c49c:	cmp	x1, x0
   1c4a0:	b.ne	1c474 <idpriv_temp_restore@@Base+0x13b4>  // b.any
   1c4a4:	ldr	x1, [sp, #88]
   1c4a8:	ldr	x0, [sp, #32]
   1c4ac:	cmp	x1, x0
   1c4b0:	b.cc	1c4cc <idpriv_temp_restore@@Base+0x140c>  // b.lo, b.ul, b.last
   1c4b4:	ldr	x1, [sp, #88]
   1c4b8:	ldr	x0, [sp, #24]
   1c4bc:	cmp	x1, x0
   1c4c0:	b.cs	1c4cc <idpriv_temp_restore@@Base+0x140c>  // b.hs, b.nlast
   1c4c4:	ldr	x0, [sp, #88]
   1c4c8:	b	1c4d0 <idpriv_temp_restore@@Base+0x1410>
   1c4cc:	mov	x0, #0xffffffffffffffff    	// #-1
   1c4d0:	ldp	x29, x30, [sp], #128
   1c4d4:	ret
   1c4d8:	stp	x29, x30, [sp, #-48]!
   1c4dc:	mov	x29, sp
   1c4e0:	str	x0, [sp, #24]
   1c4e4:	str	x1, [sp, #16]
   1c4e8:	mov	x0, #0x28                  	// #40
   1c4ec:	bl	ab40 <malloc@plt>
   1c4f0:	str	x0, [sp, #40]
   1c4f4:	ldr	x0, [sp, #40]
   1c4f8:	cmp	x0, #0x0
   1c4fc:	b.ne	1c508 <idpriv_temp_restore@@Base+0x1448>  // b.any
   1c500:	mov	x0, #0x0                   	// #0
   1c504:	b	1c5bc <idpriv_temp_restore@@Base+0x14fc>
   1c508:	ldr	x0, [sp, #40]
   1c50c:	ldr	x1, [sp, #16]
   1c510:	str	x1, [x0, #32]
   1c514:	ldr	x0, [sp, #24]
   1c518:	ldr	x0, [x0, #16]
   1c51c:	cmp	x0, #0x0
   1c520:	b.eq	1c540 <idpriv_temp_restore@@Base+0x1480>  // b.none
   1c524:	ldr	x0, [sp, #24]
   1c528:	ldr	x1, [x0, #16]
   1c52c:	ldr	x0, [sp, #40]
   1c530:	ldr	x0, [x0, #32]
   1c534:	blr	x1
   1c538:	mov	x1, x0
   1c53c:	b	1c54c <idpriv_temp_restore@@Base+0x148c>
   1c540:	ldr	x0, [sp, #40]
   1c544:	ldr	x0, [x0, #32]
   1c548:	mov	x1, x0
   1c54c:	ldr	x0, [sp, #40]
   1c550:	str	x1, [x0, #8]
   1c554:	ldr	x1, [sp, #40]
   1c558:	ldr	x0, [sp, #24]
   1c55c:	bl	1b450 <idpriv_temp_restore@@Base+0x390>
   1c560:	ldr	x0, [sp, #24]
   1c564:	add	x1, x0, #0x38
   1c568:	ldr	x0, [sp, #40]
   1c56c:	str	x1, [x0, #24]
   1c570:	ldr	x0, [sp, #24]
   1c574:	ldr	x1, [x0, #72]
   1c578:	ldr	x0, [sp, #40]
   1c57c:	str	x1, [x0, #16]
   1c580:	ldr	x0, [sp, #40]
   1c584:	ldr	x0, [x0, #16]
   1c588:	ldr	x1, [sp, #40]
   1c58c:	str	x1, [x0, #24]
   1c590:	ldr	x0, [sp, #24]
   1c594:	ldr	x1, [sp, #40]
   1c598:	str	x1, [x0, #72]
   1c59c:	ldr	x0, [sp, #24]
   1c5a0:	ldr	x0, [x0, #96]
   1c5a4:	add	x1, x0, #0x1
   1c5a8:	ldr	x0, [sp, #24]
   1c5ac:	str	x1, [x0, #96]
   1c5b0:	ldr	x0, [sp, #24]
   1c5b4:	bl	1b3f4 <idpriv_temp_restore@@Base+0x334>
   1c5b8:	ldr	x0, [sp, #40]
   1c5bc:	ldp	x29, x30, [sp], #48
   1c5c0:	ret
   1c5c4:	stp	x29, x30, [sp, #-48]!
   1c5c8:	mov	x29, sp
   1c5cc:	str	x0, [sp, #24]
   1c5d0:	str	x1, [sp, #16]
   1c5d4:	mov	x0, #0x28                  	// #40
   1c5d8:	bl	ab40 <malloc@plt>
   1c5dc:	str	x0, [sp, #40]
   1c5e0:	ldr	x0, [sp, #40]
   1c5e4:	cmp	x0, #0x0
   1c5e8:	b.ne	1c5f4 <idpriv_temp_restore@@Base+0x1534>  // b.any
   1c5ec:	mov	x0, #0x0                   	// #0
   1c5f0:	b	1c6a8 <idpriv_temp_restore@@Base+0x15e8>
   1c5f4:	ldr	x0, [sp, #40]
   1c5f8:	ldr	x1, [sp, #16]
   1c5fc:	str	x1, [x0, #32]
   1c600:	ldr	x0, [sp, #24]
   1c604:	ldr	x0, [x0, #16]
   1c608:	cmp	x0, #0x0
   1c60c:	b.eq	1c62c <idpriv_temp_restore@@Base+0x156c>  // b.none
   1c610:	ldr	x0, [sp, #24]
   1c614:	ldr	x1, [x0, #16]
   1c618:	ldr	x0, [sp, #40]
   1c61c:	ldr	x0, [x0, #32]
   1c620:	blr	x1
   1c624:	mov	x1, x0
   1c628:	b	1c638 <idpriv_temp_restore@@Base+0x1578>
   1c62c:	ldr	x0, [sp, #40]
   1c630:	ldr	x0, [x0, #32]
   1c634:	mov	x1, x0
   1c638:	ldr	x0, [sp, #40]
   1c63c:	str	x1, [x0, #8]
   1c640:	ldr	x1, [sp, #40]
   1c644:	ldr	x0, [sp, #24]
   1c648:	bl	1b450 <idpriv_temp_restore@@Base+0x390>
   1c64c:	ldr	x0, [sp, #24]
   1c650:	add	x1, x0, #0x38
   1c654:	ldr	x0, [sp, #40]
   1c658:	str	x1, [x0, #16]
   1c65c:	ldr	x0, [sp, #24]
   1c660:	ldr	x1, [x0, #80]
   1c664:	ldr	x0, [sp, #40]
   1c668:	str	x1, [x0, #24]
   1c66c:	ldr	x0, [sp, #40]
   1c670:	ldr	x0, [x0, #24]
   1c674:	ldr	x1, [sp, #40]
   1c678:	str	x1, [x0, #16]
   1c67c:	ldr	x0, [sp, #24]
   1c680:	ldr	x1, [sp, #40]
   1c684:	str	x1, [x0, #80]
   1c688:	ldr	x0, [sp, #24]
   1c68c:	ldr	x0, [x0, #96]
   1c690:	add	x1, x0, #0x1
   1c694:	ldr	x0, [sp, #24]
   1c698:	str	x1, [x0, #96]
   1c69c:	ldr	x0, [sp, #24]
   1c6a0:	bl	1b3f4 <idpriv_temp_restore@@Base+0x334>
   1c6a4:	ldr	x0, [sp, #40]
   1c6a8:	ldp	x29, x30, [sp], #48
   1c6ac:	ret
   1c6b0:	stp	x29, x30, [sp, #-64]!
   1c6b4:	mov	x29, sp
   1c6b8:	str	x0, [sp, #40]
   1c6bc:	str	x1, [sp, #32]
   1c6c0:	str	x2, [sp, #24]
   1c6c4:	mov	x0, #0x28                  	// #40
   1c6c8:	bl	ab40 <malloc@plt>
   1c6cc:	str	x0, [sp, #56]
   1c6d0:	ldr	x0, [sp, #56]
   1c6d4:	cmp	x0, #0x0
   1c6d8:	b.ne	1c6e4 <idpriv_temp_restore@@Base+0x1624>  // b.any
   1c6dc:	mov	x0, #0x0                   	// #0
   1c6e0:	b	1c794 <idpriv_temp_restore@@Base+0x16d4>
   1c6e4:	ldr	x0, [sp, #56]
   1c6e8:	ldr	x1, [sp, #24]
   1c6ec:	str	x1, [x0, #32]
   1c6f0:	ldr	x0, [sp, #40]
   1c6f4:	ldr	x0, [x0, #16]
   1c6f8:	cmp	x0, #0x0
   1c6fc:	b.eq	1c71c <idpriv_temp_restore@@Base+0x165c>  // b.none
   1c700:	ldr	x0, [sp, #40]
   1c704:	ldr	x1, [x0, #16]
   1c708:	ldr	x0, [sp, #56]
   1c70c:	ldr	x0, [x0, #32]
   1c710:	blr	x1
   1c714:	mov	x1, x0
   1c718:	b	1c728 <idpriv_temp_restore@@Base+0x1668>
   1c71c:	ldr	x0, [sp, #56]
   1c720:	ldr	x0, [x0, #32]
   1c724:	mov	x1, x0
   1c728:	ldr	x0, [sp, #56]
   1c72c:	str	x1, [x0, #8]
   1c730:	ldr	x1, [sp, #56]
   1c734:	ldr	x0, [sp, #40]
   1c738:	bl	1b450 <idpriv_temp_restore@@Base+0x390>
   1c73c:	ldr	x0, [sp, #56]
   1c740:	ldr	x1, [sp, #32]
   1c744:	str	x1, [x0, #16]
   1c748:	ldr	x0, [sp, #32]
   1c74c:	ldr	x1, [x0, #24]
   1c750:	ldr	x0, [sp, #56]
   1c754:	str	x1, [x0, #24]
   1c758:	ldr	x0, [sp, #56]
   1c75c:	ldr	x0, [x0, #24]
   1c760:	ldr	x1, [sp, #56]
   1c764:	str	x1, [x0, #16]
   1c768:	ldr	x0, [sp, #32]
   1c76c:	ldr	x1, [sp, #56]
   1c770:	str	x1, [x0, #24]
   1c774:	ldr	x0, [sp, #40]
   1c778:	ldr	x0, [x0, #96]
   1c77c:	add	x1, x0, #0x1
   1c780:	ldr	x0, [sp, #40]
   1c784:	str	x1, [x0, #96]
   1c788:	ldr	x0, [sp, #40]
   1c78c:	bl	1b3f4 <idpriv_temp_restore@@Base+0x334>
   1c790:	ldr	x0, [sp, #56]
   1c794:	ldp	x29, x30, [sp], #64
   1c798:	ret
   1c79c:	stp	x29, x30, [sp, #-64]!
   1c7a0:	mov	x29, sp
   1c7a4:	str	x0, [sp, #40]
   1c7a8:	str	x1, [sp, #32]
   1c7ac:	str	x2, [sp, #24]
   1c7b0:	mov	x0, #0x28                  	// #40
   1c7b4:	bl	ab40 <malloc@plt>
   1c7b8:	str	x0, [sp, #56]
   1c7bc:	ldr	x0, [sp, #56]
   1c7c0:	cmp	x0, #0x0
   1c7c4:	b.ne	1c7d0 <idpriv_temp_restore@@Base+0x1710>  // b.any
   1c7c8:	mov	x0, #0x0                   	// #0
   1c7cc:	b	1c880 <idpriv_temp_restore@@Base+0x17c0>
   1c7d0:	ldr	x0, [sp, #56]
   1c7d4:	ldr	x1, [sp, #24]
   1c7d8:	str	x1, [x0, #32]
   1c7dc:	ldr	x0, [sp, #40]
   1c7e0:	ldr	x0, [x0, #16]
   1c7e4:	cmp	x0, #0x0
   1c7e8:	b.eq	1c808 <idpriv_temp_restore@@Base+0x1748>  // b.none
   1c7ec:	ldr	x0, [sp, #40]
   1c7f0:	ldr	x1, [x0, #16]
   1c7f4:	ldr	x0, [sp, #56]
   1c7f8:	ldr	x0, [x0, #32]
   1c7fc:	blr	x1
   1c800:	mov	x1, x0
   1c804:	b	1c814 <idpriv_temp_restore@@Base+0x1754>
   1c808:	ldr	x0, [sp, #56]
   1c80c:	ldr	x0, [x0, #32]
   1c810:	mov	x1, x0
   1c814:	ldr	x0, [sp, #56]
   1c818:	str	x1, [x0, #8]
   1c81c:	ldr	x1, [sp, #56]
   1c820:	ldr	x0, [sp, #40]
   1c824:	bl	1b450 <idpriv_temp_restore@@Base+0x390>
   1c828:	ldr	x0, [sp, #56]
   1c82c:	ldr	x1, [sp, #32]
   1c830:	str	x1, [x0, #24]
   1c834:	ldr	x0, [sp, #32]
   1c838:	ldr	x1, [x0, #16]
   1c83c:	ldr	x0, [sp, #56]
   1c840:	str	x1, [x0, #16]
   1c844:	ldr	x0, [sp, #56]
   1c848:	ldr	x0, [x0, #16]
   1c84c:	ldr	x1, [sp, #56]
   1c850:	str	x1, [x0, #24]
   1c854:	ldr	x0, [sp, #32]
   1c858:	ldr	x1, [sp, #56]
   1c85c:	str	x1, [x0, #16]
   1c860:	ldr	x0, [sp, #40]
   1c864:	ldr	x0, [x0, #96]
   1c868:	add	x1, x0, #0x1
   1c86c:	ldr	x0, [sp, #40]
   1c870:	str	x1, [x0, #96]
   1c874:	ldr	x0, [sp, #40]
   1c878:	bl	1b3f4 <idpriv_temp_restore@@Base+0x334>
   1c87c:	ldr	x0, [sp, #56]
   1c880:	ldp	x29, x30, [sp], #64
   1c884:	ret
   1c888:	stp	x29, x30, [sp, #-80]!
   1c88c:	mov	x29, sp
   1c890:	str	x0, [sp, #40]
   1c894:	str	x1, [sp, #32]
   1c898:	str	x2, [sp, #24]
   1c89c:	ldr	x0, [sp, #40]
   1c8a0:	ldr	x0, [x0, #96]
   1c8a4:	str	x0, [sp, #56]
   1c8a8:	ldr	x1, [sp, #32]
   1c8ac:	ldr	x0, [sp, #56]
   1c8b0:	cmp	x1, x0
   1c8b4:	b.ls	1c8bc <idpriv_temp_restore@@Base+0x17fc>  // b.plast
   1c8b8:	bl	af70 <abort@plt>
   1c8bc:	mov	x0, #0x28                  	// #40
   1c8c0:	bl	ab40 <malloc@plt>
   1c8c4:	str	x0, [sp, #48]
   1c8c8:	ldr	x0, [sp, #48]
   1c8cc:	cmp	x0, #0x0
   1c8d0:	b.ne	1c8dc <idpriv_temp_restore@@Base+0x181c>  // b.any
   1c8d4:	mov	x0, #0x0                   	// #0
   1c8d8:	b	1ca54 <idpriv_temp_restore@@Base+0x1994>
   1c8dc:	ldr	x0, [sp, #48]
   1c8e0:	ldr	x1, [sp, #24]
   1c8e4:	str	x1, [x0, #32]
   1c8e8:	ldr	x0, [sp, #40]
   1c8ec:	ldr	x0, [x0, #16]
   1c8f0:	cmp	x0, #0x0
   1c8f4:	b.eq	1c914 <idpriv_temp_restore@@Base+0x1854>  // b.none
   1c8f8:	ldr	x0, [sp, #40]
   1c8fc:	ldr	x1, [x0, #16]
   1c900:	ldr	x0, [sp, #48]
   1c904:	ldr	x0, [x0, #32]
   1c908:	blr	x1
   1c90c:	mov	x1, x0
   1c910:	b	1c920 <idpriv_temp_restore@@Base+0x1860>
   1c914:	ldr	x0, [sp, #48]
   1c918:	ldr	x0, [x0, #32]
   1c91c:	mov	x1, x0
   1c920:	ldr	x0, [sp, #48]
   1c924:	str	x1, [x0, #8]
   1c928:	ldr	x1, [sp, #48]
   1c92c:	ldr	x0, [sp, #40]
   1c930:	bl	1b450 <idpriv_temp_restore@@Base+0x390>
   1c934:	ldr	x0, [sp, #56]
   1c938:	lsr	x0, x0, #1
   1c93c:	ldr	x1, [sp, #32]
   1c940:	cmp	x1, x0
   1c944:	b.hi	1c9b8 <idpriv_temp_restore@@Base+0x18f8>  // b.pmore
   1c948:	ldr	x0, [sp, #40]
   1c94c:	add	x0, x0, #0x38
   1c950:	str	x0, [sp, #72]
   1c954:	b	1c970 <idpriv_temp_restore@@Base+0x18b0>
   1c958:	ldr	x0, [sp, #72]
   1c95c:	ldr	x0, [x0, #16]
   1c960:	str	x0, [sp, #72]
   1c964:	ldr	x0, [sp, #32]
   1c968:	sub	x0, x0, #0x1
   1c96c:	str	x0, [sp, #32]
   1c970:	ldr	x0, [sp, #32]
   1c974:	cmp	x0, #0x0
   1c978:	b.ne	1c958 <idpriv_temp_restore@@Base+0x1898>  // b.any
   1c97c:	ldr	x0, [sp, #48]
   1c980:	ldr	x1, [sp, #72]
   1c984:	str	x1, [x0, #24]
   1c988:	ldr	x0, [sp, #72]
   1c98c:	ldr	x1, [x0, #16]
   1c990:	ldr	x0, [sp, #48]
   1c994:	str	x1, [x0, #16]
   1c998:	ldr	x0, [sp, #48]
   1c99c:	ldr	x0, [x0, #16]
   1c9a0:	ldr	x1, [sp, #48]
   1c9a4:	str	x1, [x0, #24]
   1c9a8:	ldr	x0, [sp, #72]
   1c9ac:	ldr	x1, [sp, #48]
   1c9b0:	str	x1, [x0, #16]
   1c9b4:	b	1ca34 <idpriv_temp_restore@@Base+0x1974>
   1c9b8:	ldr	x1, [sp, #56]
   1c9bc:	ldr	x0, [sp, #32]
   1c9c0:	sub	x0, x1, x0
   1c9c4:	str	x0, [sp, #32]
   1c9c8:	ldr	x0, [sp, #40]
   1c9cc:	add	x0, x0, #0x38
   1c9d0:	str	x0, [sp, #64]
   1c9d4:	b	1c9f0 <idpriv_temp_restore@@Base+0x1930>
   1c9d8:	ldr	x0, [sp, #64]
   1c9dc:	ldr	x0, [x0, #24]
   1c9e0:	str	x0, [sp, #64]
   1c9e4:	ldr	x0, [sp, #32]
   1c9e8:	sub	x0, x0, #0x1
   1c9ec:	str	x0, [sp, #32]
   1c9f0:	ldr	x0, [sp, #32]
   1c9f4:	cmp	x0, #0x0
   1c9f8:	b.ne	1c9d8 <idpriv_temp_restore@@Base+0x1918>  // b.any
   1c9fc:	ldr	x0, [sp, #48]
   1ca00:	ldr	x1, [sp, #64]
   1ca04:	str	x1, [x0, #16]
   1ca08:	ldr	x0, [sp, #64]
   1ca0c:	ldr	x1, [x0, #24]
   1ca10:	ldr	x0, [sp, #48]
   1ca14:	str	x1, [x0, #24]
   1ca18:	ldr	x0, [sp, #48]
   1ca1c:	ldr	x0, [x0, #24]
   1ca20:	ldr	x1, [sp, #48]
   1ca24:	str	x1, [x0, #16]
   1ca28:	ldr	x0, [sp, #64]
   1ca2c:	ldr	x1, [sp, #48]
   1ca30:	str	x1, [x0, #24]
   1ca34:	ldr	x0, [sp, #40]
   1ca38:	ldr	x0, [x0, #96]
   1ca3c:	add	x1, x0, #0x1
   1ca40:	ldr	x0, [sp, #40]
   1ca44:	str	x1, [x0, #96]
   1ca48:	ldr	x0, [sp, #40]
   1ca4c:	bl	1b3f4 <idpriv_temp_restore@@Base+0x334>
   1ca50:	ldr	x0, [sp, #48]
   1ca54:	ldp	x29, x30, [sp], #80
   1ca58:	ret
   1ca5c:	stp	x29, x30, [sp, #-48]!
   1ca60:	mov	x29, sp
   1ca64:	str	x0, [sp, #24]
   1ca68:	str	x1, [sp, #16]
   1ca6c:	ldr	x1, [sp, #16]
   1ca70:	ldr	x0, [sp, #24]
   1ca74:	bl	1b4c4 <idpriv_temp_restore@@Base+0x404>
   1ca78:	ldr	x0, [sp, #16]
   1ca7c:	ldr	x0, [x0, #24]
   1ca80:	str	x0, [sp, #40]
   1ca84:	ldr	x0, [sp, #16]
   1ca88:	ldr	x0, [x0, #16]
   1ca8c:	str	x0, [sp, #32]
   1ca90:	ldr	x0, [sp, #40]
   1ca94:	ldr	x1, [sp, #32]
   1ca98:	str	x1, [x0, #16]
   1ca9c:	ldr	x0, [sp, #32]
   1caa0:	ldr	x1, [sp, #40]
   1caa4:	str	x1, [x0, #24]
   1caa8:	ldr	x0, [sp, #24]
   1caac:	ldr	x0, [x0, #96]
   1cab0:	sub	x1, x0, #0x1
   1cab4:	ldr	x0, [sp, #24]
   1cab8:	str	x1, [x0, #96]
   1cabc:	ldr	x0, [sp, #24]
   1cac0:	ldr	x0, [x0, #24]
   1cac4:	cmp	x0, #0x0
   1cac8:	b.eq	1cae0 <idpriv_temp_restore@@Base+0x1a20>  // b.none
   1cacc:	ldr	x0, [sp, #24]
   1cad0:	ldr	x1, [x0, #24]
   1cad4:	ldr	x0, [sp, #16]
   1cad8:	ldr	x0, [x0, #32]
   1cadc:	blr	x1
   1cae0:	ldr	x0, [sp, #16]
   1cae4:	bl	b130 <free@plt>
   1cae8:	mov	w0, #0x1                   	// #1
   1caec:	ldp	x29, x30, [sp], #48
   1caf0:	ret
   1caf4:	stp	x29, x30, [sp, #-80]!
   1caf8:	mov	x29, sp
   1cafc:	str	x0, [sp, #24]
   1cb00:	str	x1, [sp, #16]
   1cb04:	ldr	x0, [sp, #24]
   1cb08:	ldr	x0, [x0, #96]
   1cb0c:	str	x0, [sp, #48]
   1cb10:	ldr	x1, [sp, #16]
   1cb14:	ldr	x0, [sp, #48]
   1cb18:	cmp	x1, x0
   1cb1c:	b.cc	1cb24 <idpriv_temp_restore@@Base+0x1a64>  // b.lo, b.ul, b.last
   1cb20:	bl	af70 <abort@plt>
   1cb24:	ldr	x0, [sp, #48]
   1cb28:	sub	x0, x0, #0x1
   1cb2c:	lsr	x0, x0, #1
   1cb30:	ldr	x1, [sp, #16]
   1cb34:	cmp	x1, x0
   1cb38:	b.hi	1cba8 <idpriv_temp_restore@@Base+0x1ae8>  // b.pmore
   1cb3c:	ldr	x0, [sp, #24]
   1cb40:	add	x0, x0, #0x38
   1cb44:	str	x0, [sp, #64]
   1cb48:	b	1cb64 <idpriv_temp_restore@@Base+0x1aa4>
   1cb4c:	ldr	x0, [sp, #64]
   1cb50:	ldr	x0, [x0, #16]
   1cb54:	str	x0, [sp, #64]
   1cb58:	ldr	x0, [sp, #16]
   1cb5c:	sub	x0, x0, #0x1
   1cb60:	str	x0, [sp, #16]
   1cb64:	ldr	x0, [sp, #16]
   1cb68:	cmp	x0, #0x0
   1cb6c:	b.ne	1cb4c <idpriv_temp_restore@@Base+0x1a8c>  // b.any
   1cb70:	ldr	x0, [sp, #64]
   1cb74:	ldr	x0, [x0, #16]
   1cb78:	str	x0, [sp, #72]
   1cb7c:	ldr	x0, [sp, #64]
   1cb80:	ldr	x0, [x0, #16]
   1cb84:	ldr	x0, [x0, #16]
   1cb88:	str	x0, [sp, #32]
   1cb8c:	ldr	x0, [sp, #64]
   1cb90:	ldr	x1, [sp, #32]
   1cb94:	str	x1, [x0, #16]
   1cb98:	ldr	x0, [sp, #32]
   1cb9c:	ldr	x1, [sp, #64]
   1cba0:	str	x1, [x0, #24]
   1cba4:	b	1cc24 <idpriv_temp_restore@@Base+0x1b64>
   1cba8:	ldr	x1, [sp, #48]
   1cbac:	ldr	x0, [sp, #16]
   1cbb0:	sub	x0, x1, x0
   1cbb4:	sub	x0, x0, #0x1
   1cbb8:	str	x0, [sp, #16]
   1cbbc:	ldr	x0, [sp, #24]
   1cbc0:	add	x0, x0, #0x38
   1cbc4:	str	x0, [sp, #56]
   1cbc8:	b	1cbe4 <idpriv_temp_restore@@Base+0x1b24>
   1cbcc:	ldr	x0, [sp, #56]
   1cbd0:	ldr	x0, [x0, #24]
   1cbd4:	str	x0, [sp, #56]
   1cbd8:	ldr	x0, [sp, #16]
   1cbdc:	sub	x0, x0, #0x1
   1cbe0:	str	x0, [sp, #16]
   1cbe4:	ldr	x0, [sp, #16]
   1cbe8:	cmp	x0, #0x0
   1cbec:	b.ne	1cbcc <idpriv_temp_restore@@Base+0x1b0c>  // b.any
   1cbf0:	ldr	x0, [sp, #56]
   1cbf4:	ldr	x0, [x0, #24]
   1cbf8:	str	x0, [sp, #72]
   1cbfc:	ldr	x0, [sp, #56]
   1cc00:	ldr	x0, [x0, #24]
   1cc04:	ldr	x0, [x0, #24]
   1cc08:	str	x0, [sp, #40]
   1cc0c:	ldr	x0, [sp, #56]
   1cc10:	ldr	x1, [sp, #40]
   1cc14:	str	x1, [x0, #24]
   1cc18:	ldr	x0, [sp, #40]
   1cc1c:	ldr	x1, [sp, #56]
   1cc20:	str	x1, [x0, #16]
   1cc24:	ldr	x1, [sp, #72]
   1cc28:	ldr	x0, [sp, #24]
   1cc2c:	bl	1b4c4 <idpriv_temp_restore@@Base+0x404>
   1cc30:	ldr	x0, [sp, #24]
   1cc34:	ldr	x0, [x0, #96]
   1cc38:	sub	x1, x0, #0x1
   1cc3c:	ldr	x0, [sp, #24]
   1cc40:	str	x1, [x0, #96]
   1cc44:	ldr	x0, [sp, #24]
   1cc48:	ldr	x0, [x0, #24]
   1cc4c:	cmp	x0, #0x0
   1cc50:	b.eq	1cc68 <idpriv_temp_restore@@Base+0x1ba8>  // b.none
   1cc54:	ldr	x0, [sp, #24]
   1cc58:	ldr	x1, [x0, #24]
   1cc5c:	ldr	x0, [sp, #72]
   1cc60:	ldr	x0, [x0, #32]
   1cc64:	blr	x1
   1cc68:	ldr	x0, [sp, #72]
   1cc6c:	bl	b130 <free@plt>
   1cc70:	mov	w0, #0x1                   	// #1
   1cc74:	ldp	x29, x30, [sp], #80
   1cc78:	ret
   1cc7c:	stp	x29, x30, [sp, #-48]!
   1cc80:	mov	x29, sp
   1cc84:	str	x0, [sp, #24]
   1cc88:	str	x1, [sp, #16]
   1cc8c:	ldr	x0, [sp, #24]
   1cc90:	ldr	x0, [x0, #96]
   1cc94:	ldr	x3, [sp, #16]
   1cc98:	mov	x2, x0
   1cc9c:	mov	x1, #0x0                   	// #0
   1cca0:	ldr	x0, [sp, #24]
   1cca4:	bl	1bc7c <idpriv_temp_restore@@Base+0xbbc>
   1cca8:	str	x0, [sp, #40]
   1ccac:	ldr	x0, [sp, #40]
   1ccb0:	cmp	x0, #0x0
   1ccb4:	b.eq	1cccc <idpriv_temp_restore@@Base+0x1c0c>  // b.none
   1ccb8:	ldr	x1, [sp, #40]
   1ccbc:	ldr	x0, [sp, #24]
   1ccc0:	bl	1ca5c <idpriv_temp_restore@@Base+0x199c>
   1ccc4:	and	w0, w0, #0xff
   1ccc8:	b	1ccd0 <idpriv_temp_restore@@Base+0x1c10>
   1cccc:	mov	w0, #0x0                   	// #0
   1ccd0:	ldp	x29, x30, [sp], #48
   1ccd4:	ret
   1ccd8:	stp	x29, x30, [sp, #-64]!
   1ccdc:	mov	x29, sp
   1cce0:	str	x0, [sp, #24]
   1cce4:	ldr	x0, [sp, #24]
   1cce8:	ldr	x0, [x0, #24]
   1ccec:	str	x0, [sp, #48]
   1ccf0:	ldr	x0, [sp, #24]
   1ccf4:	ldr	x0, [x0, #72]
   1ccf8:	str	x0, [sp, #56]
   1ccfc:	b	1cd38 <idpriv_temp_restore@@Base+0x1c78>
   1cd00:	ldr	x0, [sp, #56]
   1cd04:	ldr	x0, [x0, #16]
   1cd08:	str	x0, [sp, #40]
   1cd0c:	ldr	x0, [sp, #48]
   1cd10:	cmp	x0, #0x0
   1cd14:	b.eq	1cd28 <idpriv_temp_restore@@Base+0x1c68>  // b.none
   1cd18:	ldr	x0, [sp, #56]
   1cd1c:	ldr	x0, [x0, #32]
   1cd20:	ldr	x1, [sp, #48]
   1cd24:	blr	x1
   1cd28:	ldr	x0, [sp, #56]
   1cd2c:	bl	b130 <free@plt>
   1cd30:	ldr	x0, [sp, #40]
   1cd34:	str	x0, [sp, #56]
   1cd38:	ldr	x0, [sp, #24]
   1cd3c:	add	x0, x0, #0x38
   1cd40:	ldr	x1, [sp, #56]
   1cd44:	cmp	x1, x0
   1cd48:	b.ne	1cd00 <idpriv_temp_restore@@Base+0x1c40>  // b.any
   1cd4c:	ldr	x0, [sp, #24]
   1cd50:	ldr	x0, [x0, #40]
   1cd54:	bl	b130 <free@plt>
   1cd58:	ldr	x0, [sp, #24]
   1cd5c:	bl	b130 <free@plt>
   1cd60:	nop
   1cd64:	ldp	x29, x30, [sp], #64
   1cd68:	ret
   1cd6c:	sub	sp, sp, #0x50
   1cd70:	mov	x1, x8
   1cd74:	str	x0, [sp, #8]
   1cd78:	ldr	x0, [sp, #8]
   1cd7c:	ldr	x0, [x0]
   1cd80:	str	x0, [sp, #24]
   1cd84:	ldr	x0, [sp, #8]
   1cd88:	str	x0, [sp, #32]
   1cd8c:	ldr	x0, [sp, #8]
   1cd90:	ldr	x0, [x0, #72]
   1cd94:	str	x0, [sp, #48]
   1cd98:	ldr	x0, [sp, #8]
   1cd9c:	add	x0, x0, #0x38
   1cda0:	str	x0, [sp, #56]
   1cda4:	add	x0, sp, #0x18
   1cda8:	ldp	x2, x3, [x0]
   1cdac:	stp	x2, x3, [x1]
   1cdb0:	ldp	x2, x3, [x0, #16]
   1cdb4:	stp	x2, x3, [x1, #16]
   1cdb8:	ldp	x2, x3, [x0, #32]
   1cdbc:	stp	x2, x3, [x1, #32]
   1cdc0:	ldr	x0, [x0, #48]
   1cdc4:	str	x0, [x1, #48]
   1cdc8:	add	sp, sp, #0x50
   1cdcc:	ret
   1cdd0:	stp	x29, x30, [sp, #-176]!
   1cdd4:	mov	x29, sp
   1cdd8:	mov	x3, x8
   1cddc:	str	x0, [sp, #40]
   1cde0:	str	x1, [sp, #32]
   1cde4:	str	x2, [sp, #24]
   1cde8:	ldr	x1, [sp, #32]
   1cdec:	ldr	x0, [sp, #24]
   1cdf0:	cmp	x1, x0
   1cdf4:	b.hi	1ce0c <idpriv_temp_restore@@Base+0x1d4c>  // b.pmore
   1cdf8:	ldr	x0, [sp, #40]
   1cdfc:	ldr	x0, [x0, #96]
   1ce00:	ldr	x1, [sp, #24]
   1ce04:	cmp	x1, x0
   1ce08:	b.ls	1ce10 <idpriv_temp_restore@@Base+0x1d50>  // b.plast
   1ce0c:	bl	af70 <abort@plt>
   1ce10:	ldr	x0, [sp, #40]
   1ce14:	ldr	x0, [x0]
   1ce18:	str	x0, [sp, #48]
   1ce1c:	ldr	x0, [sp, #40]
   1ce20:	str	x0, [sp, #56]
   1ce24:	ldr	x0, [sp, #32]
   1ce28:	str	x0, [sp, #120]
   1ce2c:	ldr	x1, [sp, #24]
   1ce30:	ldr	x0, [sp, #32]
   1ce34:	sub	x0, x1, x0
   1ce38:	str	x0, [sp, #112]
   1ce3c:	ldr	x0, [sp, #40]
   1ce40:	ldr	x1, [x0, #96]
   1ce44:	ldr	x0, [sp, #24]
   1ce48:	sub	x0, x1, x0
   1ce4c:	str	x0, [sp, #104]
   1ce50:	ldr	x1, [sp, #120]
   1ce54:	ldr	x0, [sp, #112]
   1ce58:	cmp	x1, x0
   1ce5c:	b.ls	1cef0 <idpriv_temp_restore@@Base+0x1e30>  // b.plast
   1ce60:	ldr	x1, [sp, #120]
   1ce64:	ldr	x0, [sp, #104]
   1ce68:	cmp	x1, x0
   1ce6c:	b.ls	1cef0 <idpriv_temp_restore@@Base+0x1e30>  // b.plast
   1ce70:	ldr	x0, [sp, #40]
   1ce74:	add	x0, x0, #0x38
   1ce78:	str	x0, [sp, #168]
   1ce7c:	ldr	x0, [sp, #104]
   1ce80:	str	x0, [sp, #160]
   1ce84:	b	1cea0 <idpriv_temp_restore@@Base+0x1de0>
   1ce88:	ldr	x0, [sp, #168]
   1ce8c:	ldr	x0, [x0, #24]
   1ce90:	str	x0, [sp, #168]
   1ce94:	ldr	x0, [sp, #160]
   1ce98:	sub	x0, x0, #0x1
   1ce9c:	str	x0, [sp, #160]
   1cea0:	ldr	x0, [sp, #160]
   1cea4:	cmp	x0, #0x0
   1cea8:	b.ne	1ce88 <idpriv_temp_restore@@Base+0x1dc8>  // b.any
   1ceac:	ldr	x0, [sp, #168]
   1ceb0:	str	x0, [sp, #80]
   1ceb4:	ldr	x0, [sp, #112]
   1ceb8:	str	x0, [sp, #160]
   1cebc:	b	1ced8 <idpriv_temp_restore@@Base+0x1e18>
   1cec0:	ldr	x0, [sp, #168]
   1cec4:	ldr	x0, [x0, #24]
   1cec8:	str	x0, [sp, #168]
   1cecc:	ldr	x0, [sp, #160]
   1ced0:	sub	x0, x0, #0x1
   1ced4:	str	x0, [sp, #160]
   1ced8:	ldr	x0, [sp, #160]
   1cedc:	cmp	x0, #0x0
   1cee0:	b.ne	1cec0 <idpriv_temp_restore@@Base+0x1e00>  // b.any
   1cee4:	ldr	x0, [sp, #168]
   1cee8:	str	x0, [sp, #72]
   1ceec:	b	1d008 <idpriv_temp_restore@@Base+0x1f48>
   1cef0:	ldr	x1, [sp, #112]
   1cef4:	ldr	x0, [sp, #104]
   1cef8:	cmp	x1, x0
   1cefc:	b.ls	1cf8c <idpriv_temp_restore@@Base+0x1ecc>  // b.plast
   1cf00:	ldr	x0, [sp, #40]
   1cf04:	ldr	x0, [x0, #72]
   1cf08:	str	x0, [sp, #152]
   1cf0c:	ldr	x0, [sp, #120]
   1cf10:	str	x0, [sp, #144]
   1cf14:	b	1cf30 <idpriv_temp_restore@@Base+0x1e70>
   1cf18:	ldr	x0, [sp, #152]
   1cf1c:	ldr	x0, [x0, #16]
   1cf20:	str	x0, [sp, #152]
   1cf24:	ldr	x0, [sp, #144]
   1cf28:	sub	x0, x0, #0x1
   1cf2c:	str	x0, [sp, #144]
   1cf30:	ldr	x0, [sp, #144]
   1cf34:	cmp	x0, #0x0
   1cf38:	b.ne	1cf18 <idpriv_temp_restore@@Base+0x1e58>  // b.any
   1cf3c:	ldr	x0, [sp, #152]
   1cf40:	str	x0, [sp, #72]
   1cf44:	ldr	x0, [sp, #40]
   1cf48:	add	x0, x0, #0x38
   1cf4c:	str	x0, [sp, #152]
   1cf50:	ldr	x0, [sp, #104]
   1cf54:	str	x0, [sp, #144]
   1cf58:	b	1cf74 <idpriv_temp_restore@@Base+0x1eb4>
   1cf5c:	ldr	x0, [sp, #152]
   1cf60:	ldr	x0, [x0, #24]
   1cf64:	str	x0, [sp, #152]
   1cf68:	ldr	x0, [sp, #144]
   1cf6c:	sub	x0, x0, #0x1
   1cf70:	str	x0, [sp, #144]
   1cf74:	ldr	x0, [sp, #144]
   1cf78:	cmp	x0, #0x0
   1cf7c:	b.ne	1cf5c <idpriv_temp_restore@@Base+0x1e9c>  // b.any
   1cf80:	ldr	x0, [sp, #152]
   1cf84:	str	x0, [sp, #80]
   1cf88:	b	1d008 <idpriv_temp_restore@@Base+0x1f48>
   1cf8c:	ldr	x0, [sp, #40]
   1cf90:	ldr	x0, [x0, #72]
   1cf94:	str	x0, [sp, #136]
   1cf98:	ldr	x0, [sp, #120]
   1cf9c:	str	x0, [sp, #128]
   1cfa0:	b	1cfbc <idpriv_temp_restore@@Base+0x1efc>
   1cfa4:	ldr	x0, [sp, #136]
   1cfa8:	ldr	x0, [x0, #16]
   1cfac:	str	x0, [sp, #136]
   1cfb0:	ldr	x0, [sp, #128]
   1cfb4:	sub	x0, x0, #0x1
   1cfb8:	str	x0, [sp, #128]
   1cfbc:	ldr	x0, [sp, #128]
   1cfc0:	cmp	x0, #0x0
   1cfc4:	b.ne	1cfa4 <idpriv_temp_restore@@Base+0x1ee4>  // b.any
   1cfc8:	ldr	x0, [sp, #136]
   1cfcc:	str	x0, [sp, #72]
   1cfd0:	ldr	x0, [sp, #112]
   1cfd4:	str	x0, [sp, #128]
   1cfd8:	b	1cff4 <idpriv_temp_restore@@Base+0x1f34>
   1cfdc:	ldr	x0, [sp, #136]
   1cfe0:	ldr	x0, [x0, #16]
   1cfe4:	str	x0, [sp, #136]
   1cfe8:	ldr	x0, [sp, #128]
   1cfec:	sub	x0, x0, #0x1
   1cff0:	str	x0, [sp, #128]
   1cff4:	ldr	x0, [sp, #128]
   1cff8:	cmp	x0, #0x0
   1cffc:	b.ne	1cfdc <idpriv_temp_restore@@Base+0x1f1c>  // b.any
   1d000:	ldr	x0, [sp, #136]
   1d004:	str	x0, [sp, #80]
   1d008:	mov	x1, x3
   1d00c:	add	x0, sp, #0x30
   1d010:	ldp	x2, x3, [x0]
   1d014:	stp	x2, x3, [x1]
   1d018:	ldp	x2, x3, [x0, #16]
   1d01c:	stp	x2, x3, [x1, #16]
   1d020:	ldp	x2, x3, [x0, #32]
   1d024:	stp	x2, x3, [x1, #32]
   1d028:	ldr	x0, [x0, #48]
   1d02c:	str	x0, [x1, #48]
   1d030:	ldp	x29, x30, [sp], #176
   1d034:	ret
   1d038:	sub	sp, sp, #0x30
   1d03c:	str	x0, [sp, #24]
   1d040:	str	x1, [sp, #16]
   1d044:	str	x2, [sp, #8]
   1d048:	ldr	x0, [sp, #24]
   1d04c:	ldr	x1, [x0, #24]
   1d050:	ldr	x0, [sp, #24]
   1d054:	ldr	x0, [x0, #32]
   1d058:	cmp	x1, x0
   1d05c:	b.eq	1d0ac <idpriv_temp_restore@@Base+0x1fec>  // b.none
   1d060:	ldr	x0, [sp, #24]
   1d064:	ldr	x0, [x0, #24]
   1d068:	str	x0, [sp, #40]
   1d06c:	ldr	x0, [sp, #40]
   1d070:	ldr	x1, [x0, #32]
   1d074:	ldr	x0, [sp, #16]
   1d078:	str	x1, [x0]
   1d07c:	ldr	x0, [sp, #8]
   1d080:	cmp	x0, #0x0
   1d084:	b.eq	1d094 <idpriv_temp_restore@@Base+0x1fd4>  // b.none
   1d088:	ldr	x0, [sp, #8]
   1d08c:	ldr	x1, [sp, #40]
   1d090:	str	x1, [x0]
   1d094:	ldr	x0, [sp, #40]
   1d098:	ldr	x1, [x0, #16]
   1d09c:	ldr	x0, [sp, #24]
   1d0a0:	str	x1, [x0, #24]
   1d0a4:	mov	w0, #0x1                   	// #1
   1d0a8:	b	1d0b0 <idpriv_temp_restore@@Base+0x1ff0>
   1d0ac:	mov	w0, #0x0                   	// #0
   1d0b0:	add	sp, sp, #0x30
   1d0b4:	ret
   1d0b8:	sub	sp, sp, #0x10
   1d0bc:	str	x0, [sp, #8]
   1d0c0:	nop
   1d0c4:	add	sp, sp, #0x10
   1d0c8:	ret
   1d0cc:	stp	x29, x30, [sp, #-64]!
   1d0d0:	mov	x29, sp
   1d0d4:	str	x0, [sp, #40]
   1d0d8:	str	x1, [sp, #32]
   1d0dc:	str	x2, [sp, #24]
   1d0e0:	ldr	x0, [sp, #40]
   1d0e4:	ldr	x0, [x0, #72]
   1d0e8:	str	x0, [sp, #56]
   1d0ec:	b	1d134 <idpriv_temp_restore@@Base+0x2074>
   1d0f0:	ldr	x0, [sp, #56]
   1d0f4:	ldr	x0, [x0, #32]
   1d0f8:	ldr	x2, [sp, #32]
   1d0fc:	ldr	x1, [sp, #24]
   1d100:	blr	x2
   1d104:	str	w0, [sp, #52]
   1d108:	ldr	w0, [sp, #52]
   1d10c:	cmp	w0, #0x0
   1d110:	b.gt	1d14c <idpriv_temp_restore@@Base+0x208c>
   1d114:	ldr	w0, [sp, #52]
   1d118:	cmp	w0, #0x0
   1d11c:	b.ne	1d128 <idpriv_temp_restore@@Base+0x2068>  // b.any
   1d120:	ldr	x0, [sp, #56]
   1d124:	b	1d154 <idpriv_temp_restore@@Base+0x2094>
   1d128:	ldr	x0, [sp, #56]
   1d12c:	ldr	x0, [x0, #16]
   1d130:	str	x0, [sp, #56]
   1d134:	ldr	x0, [sp, #40]
   1d138:	add	x0, x0, #0x38
   1d13c:	ldr	x1, [sp, #56]
   1d140:	cmp	x1, x0
   1d144:	b.ne	1d0f0 <idpriv_temp_restore@@Base+0x2030>  // b.any
   1d148:	b	1d150 <idpriv_temp_restore@@Base+0x2090>
   1d14c:	nop
   1d150:	mov	x0, #0x0                   	// #0
   1d154:	ldp	x29, x30, [sp], #64
   1d158:	ret
   1d15c:	stp	x29, x30, [sp, #-96]!
   1d160:	mov	x29, sp
   1d164:	str	x0, [sp, #56]
   1d168:	str	x1, [sp, #48]
   1d16c:	str	x2, [sp, #40]
   1d170:	str	x3, [sp, #32]
   1d174:	str	x4, [sp, #24]
   1d178:	ldr	x0, [sp, #56]
   1d17c:	ldr	x0, [x0, #96]
   1d180:	str	x0, [sp, #72]
   1d184:	ldr	x1, [sp, #40]
   1d188:	ldr	x0, [sp, #32]
   1d18c:	cmp	x1, x0
   1d190:	b.hi	1d1a8 <idpriv_temp_restore@@Base+0x20e8>  // b.pmore
   1d194:	ldr	x0, [sp, #56]
   1d198:	ldr	x0, [x0, #96]
   1d19c:	ldr	x1, [sp, #32]
   1d1a0:	cmp	x1, x0
   1d1a4:	b.ls	1d1ac <idpriv_temp_restore@@Base+0x20ec>  // b.plast
   1d1a8:	bl	af70 <abort@plt>
   1d1ac:	ldr	x1, [sp, #32]
   1d1b0:	ldr	x0, [sp, #40]
   1d1b4:	sub	x0, x1, x0
   1d1b8:	str	x0, [sp, #32]
   1d1bc:	ldr	x0, [sp, #32]
   1d1c0:	cmp	x0, #0x0
   1d1c4:	b.eq	1d2cc <idpriv_temp_restore@@Base+0x220c>  // b.none
   1d1c8:	ldr	x0, [sp, #40]
   1d1cc:	str	x0, [sp, #88]
   1d1d0:	ldr	x0, [sp, #72]
   1d1d4:	sub	x0, x0, #0x1
   1d1d8:	lsr	x0, x0, #1
   1d1dc:	ldr	x1, [sp, #88]
   1d1e0:	cmp	x1, x0
   1d1e4:	b.hi	1d220 <idpriv_temp_restore@@Base+0x2160>  // b.pmore
   1d1e8:	ldr	x0, [sp, #56]
   1d1ec:	ldr	x0, [x0, #72]
   1d1f0:	str	x0, [sp, #80]
   1d1f4:	b	1d210 <idpriv_temp_restore@@Base+0x2150>
   1d1f8:	ldr	x0, [sp, #80]
   1d1fc:	ldr	x0, [x0, #16]
   1d200:	str	x0, [sp, #80]
   1d204:	ldr	x0, [sp, #88]
   1d208:	sub	x0, x0, #0x1
   1d20c:	str	x0, [sp, #88]
   1d210:	ldr	x0, [sp, #88]
   1d214:	cmp	x0, #0x0
   1d218:	b.ne	1d1f8 <idpriv_temp_restore@@Base+0x2138>  // b.any
   1d21c:	b	1d268 <idpriv_temp_restore@@Base+0x21a8>
   1d220:	ldr	x1, [sp, #72]
   1d224:	ldr	x0, [sp, #88]
   1d228:	sub	x0, x1, x0
   1d22c:	sub	x0, x0, #0x1
   1d230:	str	x0, [sp, #88]
   1d234:	ldr	x0, [sp, #56]
   1d238:	ldr	x0, [x0, #80]
   1d23c:	str	x0, [sp, #80]
   1d240:	b	1d25c <idpriv_temp_restore@@Base+0x219c>
   1d244:	ldr	x0, [sp, #80]
   1d248:	ldr	x0, [x0, #24]
   1d24c:	str	x0, [sp, #80]
   1d250:	ldr	x0, [sp, #88]
   1d254:	sub	x0, x0, #0x1
   1d258:	str	x0, [sp, #88]
   1d25c:	ldr	x0, [sp, #88]
   1d260:	cmp	x0, #0x0
   1d264:	b.ne	1d244 <idpriv_temp_restore@@Base+0x2184>  // b.any
   1d268:	ldr	x0, [sp, #80]
   1d26c:	ldr	x0, [x0, #32]
   1d270:	ldr	x2, [sp, #48]
   1d274:	ldr	x1, [sp, #24]
   1d278:	blr	x2
   1d27c:	str	w0, [sp, #68]
   1d280:	ldr	w0, [sp, #68]
   1d284:	cmp	w0, #0x0
   1d288:	b.gt	1d2c8 <idpriv_temp_restore@@Base+0x2208>
   1d28c:	ldr	w0, [sp, #68]
   1d290:	cmp	w0, #0x0
   1d294:	b.ne	1d2a0 <idpriv_temp_restore@@Base+0x21e0>  // b.any
   1d298:	ldr	x0, [sp, #80]
   1d29c:	b	1d2d0 <idpriv_temp_restore@@Base+0x2210>
   1d2a0:	ldr	x0, [sp, #80]
   1d2a4:	ldr	x0, [x0, #16]
   1d2a8:	str	x0, [sp, #80]
   1d2ac:	ldr	x0, [sp, #32]
   1d2b0:	sub	x0, x0, #0x1
   1d2b4:	str	x0, [sp, #32]
   1d2b8:	ldr	x0, [sp, #32]
   1d2bc:	cmp	x0, #0x0
   1d2c0:	b.ne	1d268 <idpriv_temp_restore@@Base+0x21a8>  // b.any
   1d2c4:	b	1d2cc <idpriv_temp_restore@@Base+0x220c>
   1d2c8:	nop
   1d2cc:	mov	x0, #0x0                   	// #0
   1d2d0:	ldp	x29, x30, [sp], #96
   1d2d4:	ret
   1d2d8:	stp	x29, x30, [sp, #-80]!
   1d2dc:	mov	x29, sp
   1d2e0:	str	x0, [sp, #40]
   1d2e4:	str	x1, [sp, #32]
   1d2e8:	str	x2, [sp, #24]
   1d2ec:	ldr	x0, [sp, #40]
   1d2f0:	ldr	x0, [x0, #72]
   1d2f4:	str	x0, [sp, #72]
   1d2f8:	str	xzr, [sp, #64]
   1d2fc:	b	1d350 <idpriv_temp_restore@@Base+0x2290>
   1d300:	ldr	x0, [sp, #72]
   1d304:	ldr	x0, [x0, #32]
   1d308:	ldr	x2, [sp, #32]
   1d30c:	ldr	x1, [sp, #24]
   1d310:	blr	x2
   1d314:	str	w0, [sp, #60]
   1d318:	ldr	w0, [sp, #60]
   1d31c:	cmp	w0, #0x0
   1d320:	b.gt	1d368 <idpriv_temp_restore@@Base+0x22a8>
   1d324:	ldr	w0, [sp, #60]
   1d328:	cmp	w0, #0x0
   1d32c:	b.ne	1d338 <idpriv_temp_restore@@Base+0x2278>  // b.any
   1d330:	ldr	x0, [sp, #64]
   1d334:	b	1d370 <idpriv_temp_restore@@Base+0x22b0>
   1d338:	ldr	x0, [sp, #72]
   1d33c:	ldr	x0, [x0, #16]
   1d340:	str	x0, [sp, #72]
   1d344:	ldr	x0, [sp, #64]
   1d348:	add	x0, x0, #0x1
   1d34c:	str	x0, [sp, #64]
   1d350:	ldr	x0, [sp, #40]
   1d354:	add	x0, x0, #0x38
   1d358:	ldr	x1, [sp, #72]
   1d35c:	cmp	x1, x0
   1d360:	b.ne	1d300 <idpriv_temp_restore@@Base+0x2240>  // b.any
   1d364:	b	1d36c <idpriv_temp_restore@@Base+0x22ac>
   1d368:	nop
   1d36c:	mov	x0, #0xffffffffffffffff    	// #-1
   1d370:	ldp	x29, x30, [sp], #80
   1d374:	ret
   1d378:	stp	x29, x30, [sp, #-112]!
   1d37c:	mov	x29, sp
   1d380:	str	x0, [sp, #56]
   1d384:	str	x1, [sp, #48]
   1d388:	str	x2, [sp, #40]
   1d38c:	str	x3, [sp, #32]
   1d390:	str	x4, [sp, #24]
   1d394:	ldr	x0, [sp, #56]
   1d398:	ldr	x0, [x0, #96]
   1d39c:	str	x0, [sp, #80]
   1d3a0:	ldr	x1, [sp, #40]
   1d3a4:	ldr	x0, [sp, #32]
   1d3a8:	cmp	x1, x0
   1d3ac:	b.hi	1d3c4 <idpriv_temp_restore@@Base+0x2304>  // b.pmore
   1d3b0:	ldr	x0, [sp, #56]
   1d3b4:	ldr	x0, [x0, #96]
   1d3b8:	ldr	x1, [sp, #32]
   1d3bc:	cmp	x1, x0
   1d3c0:	b.ls	1d3c8 <idpriv_temp_restore@@Base+0x2308>  // b.plast
   1d3c4:	bl	af70 <abort@plt>
   1d3c8:	ldr	x1, [sp, #32]
   1d3cc:	ldr	x0, [sp, #40]
   1d3d0:	sub	x0, x1, x0
   1d3d4:	str	x0, [sp, #32]
   1d3d8:	ldr	x0, [sp, #32]
   1d3dc:	cmp	x0, #0x0
   1d3e0:	b.eq	1d4fc <idpriv_temp_restore@@Base+0x243c>  // b.none
   1d3e4:	ldr	x0, [sp, #40]
   1d3e8:	str	x0, [sp, #104]
   1d3ec:	ldr	x0, [sp, #40]
   1d3f0:	str	x0, [sp, #96]
   1d3f4:	ldr	x0, [sp, #80]
   1d3f8:	sub	x0, x0, #0x1
   1d3fc:	lsr	x0, x0, #1
   1d400:	ldr	x1, [sp, #96]
   1d404:	cmp	x1, x0
   1d408:	b.hi	1d444 <idpriv_temp_restore@@Base+0x2384>  // b.pmore
   1d40c:	ldr	x0, [sp, #56]
   1d410:	ldr	x0, [x0, #72]
   1d414:	str	x0, [sp, #88]
   1d418:	b	1d434 <idpriv_temp_restore@@Base+0x2374>
   1d41c:	ldr	x0, [sp, #88]
   1d420:	ldr	x0, [x0, #16]
   1d424:	str	x0, [sp, #88]
   1d428:	ldr	x0, [sp, #96]
   1d42c:	sub	x0, x0, #0x1
   1d430:	str	x0, [sp, #96]
   1d434:	ldr	x0, [sp, #96]
   1d438:	cmp	x0, #0x0
   1d43c:	b.ne	1d41c <idpriv_temp_restore@@Base+0x235c>  // b.any
   1d440:	b	1d48c <idpriv_temp_restore@@Base+0x23cc>
   1d444:	ldr	x1, [sp, #80]
   1d448:	ldr	x0, [sp, #96]
   1d44c:	sub	x0, x1, x0
   1d450:	sub	x0, x0, #0x1
   1d454:	str	x0, [sp, #96]
   1d458:	ldr	x0, [sp, #56]
   1d45c:	ldr	x0, [x0, #80]
   1d460:	str	x0, [sp, #88]
   1d464:	b	1d480 <idpriv_temp_restore@@Base+0x23c0>
   1d468:	ldr	x0, [sp, #88]
   1d46c:	ldr	x0, [x0, #24]
   1d470:	str	x0, [sp, #88]
   1d474:	ldr	x0, [sp, #96]
   1d478:	sub	x0, x0, #0x1
   1d47c:	str	x0, [sp, #96]
   1d480:	ldr	x0, [sp, #96]
   1d484:	cmp	x0, #0x0
   1d488:	b.ne	1d468 <idpriv_temp_restore@@Base+0x23a8>  // b.any
   1d48c:	ldr	x0, [sp, #88]
   1d490:	ldr	x0, [x0, #32]
   1d494:	ldr	x2, [sp, #48]
   1d498:	ldr	x1, [sp, #24]
   1d49c:	blr	x2
   1d4a0:	str	w0, [sp, #76]
   1d4a4:	ldr	w0, [sp, #76]
   1d4a8:	cmp	w0, #0x0
   1d4ac:	b.gt	1d4f8 <idpriv_temp_restore@@Base+0x2438>
   1d4b0:	ldr	w0, [sp, #76]
   1d4b4:	cmp	w0, #0x0
   1d4b8:	b.ne	1d4c4 <idpriv_temp_restore@@Base+0x2404>  // b.any
   1d4bc:	ldr	x0, [sp, #104]
   1d4c0:	b	1d500 <idpriv_temp_restore@@Base+0x2440>
   1d4c4:	ldr	x0, [sp, #88]
   1d4c8:	ldr	x0, [x0, #16]
   1d4cc:	str	x0, [sp, #88]
   1d4d0:	ldr	x0, [sp, #104]
   1d4d4:	add	x0, x0, #0x1
   1d4d8:	str	x0, [sp, #104]
   1d4dc:	ldr	x0, [sp, #32]
   1d4e0:	sub	x0, x0, #0x1
   1d4e4:	str	x0, [sp, #32]
   1d4e8:	ldr	x0, [sp, #32]
   1d4ec:	cmp	x0, #0x0
   1d4f0:	b.ne	1d48c <idpriv_temp_restore@@Base+0x23cc>  // b.any
   1d4f4:	b	1d4fc <idpriv_temp_restore@@Base+0x243c>
   1d4f8:	nop
   1d4fc:	mov	x0, #0xffffffffffffffff    	// #-1
   1d500:	ldp	x29, x30, [sp], #112
   1d504:	ret
   1d508:	stp	x29, x30, [sp, #-64]!
   1d50c:	mov	x29, sp
   1d510:	str	x0, [sp, #40]
   1d514:	str	x1, [sp, #32]
   1d518:	str	x2, [sp, #24]
   1d51c:	ldr	x0, [sp, #40]
   1d520:	ldr	x0, [x0, #72]
   1d524:	str	x0, [sp, #56]
   1d528:	b	1d568 <idpriv_temp_restore@@Base+0x24a8>
   1d52c:	ldr	x0, [sp, #56]
   1d530:	ldr	x0, [x0, #32]
   1d534:	ldr	x2, [sp, #32]
   1d538:	ldr	x1, [sp, #24]
   1d53c:	blr	x2
   1d540:	cmp	w0, #0x0
   1d544:	b.lt	1d55c <idpriv_temp_restore@@Base+0x249c>  // b.tstop
   1d548:	ldr	x2, [sp, #24]
   1d54c:	ldr	x1, [sp, #56]
   1d550:	ldr	x0, [sp, #40]
   1d554:	bl	1c6b0 <idpriv_temp_restore@@Base+0x15f0>
   1d558:	b	1d588 <idpriv_temp_restore@@Base+0x24c8>
   1d55c:	ldr	x0, [sp, #56]
   1d560:	ldr	x0, [x0, #16]
   1d564:	str	x0, [sp, #56]
   1d568:	ldr	x0, [sp, #40]
   1d56c:	add	x0, x0, #0x38
   1d570:	ldr	x1, [sp, #56]
   1d574:	cmp	x1, x0
   1d578:	b.ne	1d52c <idpriv_temp_restore@@Base+0x246c>  // b.any
   1d57c:	ldr	x1, [sp, #24]
   1d580:	ldr	x0, [sp, #40]
   1d584:	bl	1c5c4 <idpriv_temp_restore@@Base+0x1504>
   1d588:	ldp	x29, x30, [sp], #64
   1d58c:	ret
   1d590:	stp	x29, x30, [sp, #-64]!
   1d594:	mov	x29, sp
   1d598:	str	x0, [sp, #40]
   1d59c:	str	x1, [sp, #32]
   1d5a0:	str	x2, [sp, #24]
   1d5a4:	ldr	x0, [sp, #40]
   1d5a8:	ldr	x0, [x0, #72]
   1d5ac:	str	x0, [sp, #56]
   1d5b0:	b	1d604 <idpriv_temp_restore@@Base+0x2544>
   1d5b4:	ldr	x0, [sp, #56]
   1d5b8:	ldr	x0, [x0, #32]
   1d5bc:	ldr	x2, [sp, #32]
   1d5c0:	ldr	x1, [sp, #24]
   1d5c4:	blr	x2
   1d5c8:	str	w0, [sp, #52]
   1d5cc:	ldr	w0, [sp, #52]
   1d5d0:	cmp	w0, #0x0
   1d5d4:	b.gt	1d61c <idpriv_temp_restore@@Base+0x255c>
   1d5d8:	ldr	w0, [sp, #52]
   1d5dc:	cmp	w0, #0x0
   1d5e0:	b.ne	1d5f8 <idpriv_temp_restore@@Base+0x2538>  // b.any
   1d5e4:	ldr	x1, [sp, #56]
   1d5e8:	ldr	x0, [sp, #40]
   1d5ec:	bl	1ca5c <idpriv_temp_restore@@Base+0x199c>
   1d5f0:	and	w0, w0, #0xff
   1d5f4:	b	1d624 <idpriv_temp_restore@@Base+0x2564>
   1d5f8:	ldr	x0, [sp, #56]
   1d5fc:	ldr	x0, [x0, #16]
   1d600:	str	x0, [sp, #56]
   1d604:	ldr	x0, [sp, #40]
   1d608:	add	x0, x0, #0x38
   1d60c:	ldr	x1, [sp, #56]
   1d610:	cmp	x1, x0
   1d614:	b.ne	1d5b4 <idpriv_temp_restore@@Base+0x24f4>  // b.any
   1d618:	b	1d620 <idpriv_temp_restore@@Base+0x2560>
   1d61c:	nop
   1d620:	mov	w0, #0x0                   	// #0
   1d624:	ldp	x29, x30, [sp], #64
   1d628:	ret

000000000001d62c <gl_list_nx_create_empty@@Base>:
   1d62c:	stp	x29, x30, [sp, #-64]!
   1d630:	mov	x29, sp
   1d634:	str	x0, [sp, #56]
   1d638:	str	x1, [sp, #48]
   1d63c:	str	x2, [sp, #40]
   1d640:	str	x3, [sp, #32]
   1d644:	strb	w4, [sp, #31]
   1d648:	ldr	x0, [sp, #56]
   1d64c:	ldr	x5, [x0]
   1d650:	ldrb	w4, [sp, #31]
   1d654:	ldr	x3, [sp, #32]
   1d658:	ldr	x2, [sp, #40]
   1d65c:	ldr	x1, [sp, #48]
   1d660:	ldr	x0, [sp, #56]
   1d664:	blr	x5
   1d668:	ldp	x29, x30, [sp], #64
   1d66c:	ret

000000000001d670 <gl_list_nx_create@@Base>:
   1d670:	stp	x29, x30, [sp, #-80]!
   1d674:	mov	x29, sp
   1d678:	str	x0, [sp, #72]
   1d67c:	str	x1, [sp, #64]
   1d680:	str	x2, [sp, #56]
   1d684:	str	x3, [sp, #48]
   1d688:	strb	w4, [sp, #47]
   1d68c:	str	x5, [sp, #32]
   1d690:	str	x6, [sp, #24]
   1d694:	ldr	x0, [sp, #72]
   1d698:	ldr	x7, [x0, #8]
   1d69c:	ldr	x6, [sp, #24]
   1d6a0:	ldr	x5, [sp, #32]
   1d6a4:	ldrb	w4, [sp, #47]
   1d6a8:	ldr	x3, [sp, #48]
   1d6ac:	ldr	x2, [sp, #56]
   1d6b0:	ldr	x1, [sp, #64]
   1d6b4:	ldr	x0, [sp, #72]
   1d6b8:	blr	x7
   1d6bc:	ldp	x29, x30, [sp], #80
   1d6c0:	ret

000000000001d6c4 <gl_list_size@@Base>:
   1d6c4:	stp	x29, x30, [sp, #-32]!
   1d6c8:	mov	x29, sp
   1d6cc:	str	x0, [sp, #24]
   1d6d0:	ldr	x0, [sp, #24]
   1d6d4:	ldr	x0, [x0]
   1d6d8:	ldr	x1, [x0, #16]
   1d6dc:	ldr	x0, [sp, #24]
   1d6e0:	blr	x1
   1d6e4:	ldp	x29, x30, [sp], #32
   1d6e8:	ret

000000000001d6ec <gl_list_node_value@@Base>:
   1d6ec:	stp	x29, x30, [sp, #-32]!
   1d6f0:	mov	x29, sp
   1d6f4:	str	x0, [sp, #24]
   1d6f8:	str	x1, [sp, #16]
   1d6fc:	ldr	x0, [sp, #24]
   1d700:	ldr	x0, [x0]
   1d704:	ldr	x2, [x0, #24]
   1d708:	ldr	x1, [sp, #16]
   1d70c:	ldr	x0, [sp, #24]
   1d710:	blr	x2
   1d714:	ldp	x29, x30, [sp], #32
   1d718:	ret

000000000001d71c <gl_list_node_nx_set_value@@Base>:
   1d71c:	stp	x29, x30, [sp, #-48]!
   1d720:	mov	x29, sp
   1d724:	str	x0, [sp, #40]
   1d728:	str	x1, [sp, #32]
   1d72c:	str	x2, [sp, #24]
   1d730:	ldr	x0, [sp, #40]
   1d734:	ldr	x0, [x0]
   1d738:	ldr	x3, [x0, #32]
   1d73c:	ldr	x2, [sp, #24]
   1d740:	ldr	x1, [sp, #32]
   1d744:	ldr	x0, [sp, #40]
   1d748:	blr	x3
   1d74c:	ldp	x29, x30, [sp], #48
   1d750:	ret

000000000001d754 <gl_list_next_node@@Base>:
   1d754:	stp	x29, x30, [sp, #-32]!
   1d758:	mov	x29, sp
   1d75c:	str	x0, [sp, #24]
   1d760:	str	x1, [sp, #16]
   1d764:	ldr	x0, [sp, #24]
   1d768:	ldr	x0, [x0]
   1d76c:	ldr	x2, [x0, #40]
   1d770:	ldr	x1, [sp, #16]
   1d774:	ldr	x0, [sp, #24]
   1d778:	blr	x2
   1d77c:	ldp	x29, x30, [sp], #32
   1d780:	ret

000000000001d784 <gl_list_previous_node@@Base>:
   1d784:	stp	x29, x30, [sp, #-32]!
   1d788:	mov	x29, sp
   1d78c:	str	x0, [sp, #24]
   1d790:	str	x1, [sp, #16]
   1d794:	ldr	x0, [sp, #24]
   1d798:	ldr	x0, [x0]
   1d79c:	ldr	x2, [x0, #48]
   1d7a0:	ldr	x1, [sp, #16]
   1d7a4:	ldr	x0, [sp, #24]
   1d7a8:	blr	x2
   1d7ac:	ldp	x29, x30, [sp], #32
   1d7b0:	ret

000000000001d7b4 <gl_list_get_at@@Base>:
   1d7b4:	stp	x29, x30, [sp, #-32]!
   1d7b8:	mov	x29, sp
   1d7bc:	str	x0, [sp, #24]
   1d7c0:	str	x1, [sp, #16]
   1d7c4:	ldr	x0, [sp, #24]
   1d7c8:	ldr	x0, [x0]
   1d7cc:	ldr	x2, [x0, #56]
   1d7d0:	ldr	x1, [sp, #16]
   1d7d4:	ldr	x0, [sp, #24]
   1d7d8:	blr	x2
   1d7dc:	ldp	x29, x30, [sp], #32
   1d7e0:	ret

000000000001d7e4 <gl_list_nx_set_at@@Base>:
   1d7e4:	stp	x29, x30, [sp, #-48]!
   1d7e8:	mov	x29, sp
   1d7ec:	str	x0, [sp, #40]
   1d7f0:	str	x1, [sp, #32]
   1d7f4:	str	x2, [sp, #24]
   1d7f8:	ldr	x0, [sp, #40]
   1d7fc:	ldr	x0, [x0]
   1d800:	ldr	x3, [x0, #64]
   1d804:	ldr	x2, [sp, #24]
   1d808:	ldr	x1, [sp, #32]
   1d80c:	ldr	x0, [sp, #40]
   1d810:	blr	x3
   1d814:	ldp	x29, x30, [sp], #48
   1d818:	ret

000000000001d81c <gl_list_search@@Base>:
   1d81c:	stp	x29, x30, [sp, #-48]!
   1d820:	mov	x29, sp
   1d824:	str	x0, [sp, #24]
   1d828:	str	x1, [sp, #16]
   1d82c:	ldr	x0, [sp, #24]
   1d830:	ldr	x0, [x0]
   1d834:	ldr	x1, [x0, #16]
   1d838:	ldr	x0, [sp, #24]
   1d83c:	blr	x1
   1d840:	str	x0, [sp, #40]
   1d844:	ldr	x0, [sp, #24]
   1d848:	ldr	x0, [x0]
   1d84c:	ldr	x4, [x0, #72]
   1d850:	ldr	x3, [sp, #16]
   1d854:	ldr	x2, [sp, #40]
   1d858:	mov	x1, #0x0                   	// #0
   1d85c:	ldr	x0, [sp, #24]
   1d860:	blr	x4
   1d864:	ldp	x29, x30, [sp], #48
   1d868:	ret

000000000001d86c <gl_list_search_from@@Base>:
   1d86c:	stp	x29, x30, [sp, #-64]!
   1d870:	mov	x29, sp
   1d874:	str	x0, [sp, #40]
   1d878:	str	x1, [sp, #32]
   1d87c:	str	x2, [sp, #24]
   1d880:	ldr	x0, [sp, #40]
   1d884:	ldr	x0, [x0]
   1d888:	ldr	x1, [x0, #16]
   1d88c:	ldr	x0, [sp, #40]
   1d890:	blr	x1
   1d894:	str	x0, [sp, #56]
   1d898:	ldr	x0, [sp, #40]
   1d89c:	ldr	x0, [x0]
   1d8a0:	ldr	x4, [x0, #72]
   1d8a4:	ldr	x3, [sp, #24]
   1d8a8:	ldr	x2, [sp, #56]
   1d8ac:	ldr	x1, [sp, #32]
   1d8b0:	ldr	x0, [sp, #40]
   1d8b4:	blr	x4
   1d8b8:	ldp	x29, x30, [sp], #64
   1d8bc:	ret

000000000001d8c0 <gl_list_search_from_to@@Base>:
   1d8c0:	stp	x29, x30, [sp, #-48]!
   1d8c4:	mov	x29, sp
   1d8c8:	str	x0, [sp, #40]
   1d8cc:	str	x1, [sp, #32]
   1d8d0:	str	x2, [sp, #24]
   1d8d4:	str	x3, [sp, #16]
   1d8d8:	ldr	x0, [sp, #40]
   1d8dc:	ldr	x0, [x0]
   1d8e0:	ldr	x4, [x0, #72]
   1d8e4:	ldr	x3, [sp, #16]
   1d8e8:	ldr	x2, [sp, #24]
   1d8ec:	ldr	x1, [sp, #32]
   1d8f0:	ldr	x0, [sp, #40]
   1d8f4:	blr	x4
   1d8f8:	ldp	x29, x30, [sp], #48
   1d8fc:	ret

000000000001d900 <gl_list_indexof@@Base>:
   1d900:	stp	x29, x30, [sp, #-48]!
   1d904:	mov	x29, sp
   1d908:	str	x0, [sp, #24]
   1d90c:	str	x1, [sp, #16]
   1d910:	ldr	x0, [sp, #24]
   1d914:	ldr	x0, [x0]
   1d918:	ldr	x1, [x0, #16]
   1d91c:	ldr	x0, [sp, #24]
   1d920:	blr	x1
   1d924:	str	x0, [sp, #40]
   1d928:	ldr	x0, [sp, #24]
   1d92c:	ldr	x0, [x0]
   1d930:	ldr	x4, [x0, #80]
   1d934:	ldr	x3, [sp, #16]
   1d938:	ldr	x2, [sp, #40]
   1d93c:	mov	x1, #0x0                   	// #0
   1d940:	ldr	x0, [sp, #24]
   1d944:	blr	x4
   1d948:	ldp	x29, x30, [sp], #48
   1d94c:	ret

000000000001d950 <gl_list_indexof_from@@Base>:
   1d950:	stp	x29, x30, [sp, #-64]!
   1d954:	mov	x29, sp
   1d958:	str	x0, [sp, #40]
   1d95c:	str	x1, [sp, #32]
   1d960:	str	x2, [sp, #24]
   1d964:	ldr	x0, [sp, #40]
   1d968:	ldr	x0, [x0]
   1d96c:	ldr	x1, [x0, #16]
   1d970:	ldr	x0, [sp, #40]
   1d974:	blr	x1
   1d978:	str	x0, [sp, #56]
   1d97c:	ldr	x0, [sp, #40]
   1d980:	ldr	x0, [x0]
   1d984:	ldr	x4, [x0, #80]
   1d988:	ldr	x3, [sp, #24]
   1d98c:	ldr	x2, [sp, #56]
   1d990:	ldr	x1, [sp, #32]
   1d994:	ldr	x0, [sp, #40]
   1d998:	blr	x4
   1d99c:	ldp	x29, x30, [sp], #64
   1d9a0:	ret

000000000001d9a4 <gl_list_indexof_from_to@@Base>:
   1d9a4:	stp	x29, x30, [sp, #-48]!
   1d9a8:	mov	x29, sp
   1d9ac:	str	x0, [sp, #40]
   1d9b0:	str	x1, [sp, #32]
   1d9b4:	str	x2, [sp, #24]
   1d9b8:	str	x3, [sp, #16]
   1d9bc:	ldr	x0, [sp, #40]
   1d9c0:	ldr	x0, [x0]
   1d9c4:	ldr	x4, [x0, #80]
   1d9c8:	ldr	x3, [sp, #16]
   1d9cc:	ldr	x2, [sp, #24]
   1d9d0:	ldr	x1, [sp, #32]
   1d9d4:	ldr	x0, [sp, #40]
   1d9d8:	blr	x4
   1d9dc:	ldp	x29, x30, [sp], #48
   1d9e0:	ret

000000000001d9e4 <gl_list_nx_add_first@@Base>:
   1d9e4:	stp	x29, x30, [sp, #-32]!
   1d9e8:	mov	x29, sp
   1d9ec:	str	x0, [sp, #24]
   1d9f0:	str	x1, [sp, #16]
   1d9f4:	ldr	x0, [sp, #24]
   1d9f8:	ldr	x0, [x0]
   1d9fc:	ldr	x2, [x0, #88]
   1da00:	ldr	x1, [sp, #16]
   1da04:	ldr	x0, [sp, #24]
   1da08:	blr	x2
   1da0c:	ldp	x29, x30, [sp], #32
   1da10:	ret

000000000001da14 <gl_list_nx_add_last@@Base>:
   1da14:	stp	x29, x30, [sp, #-32]!
   1da18:	mov	x29, sp
   1da1c:	str	x0, [sp, #24]
   1da20:	str	x1, [sp, #16]
   1da24:	ldr	x0, [sp, #24]
   1da28:	ldr	x0, [x0]
   1da2c:	ldr	x2, [x0, #96]
   1da30:	ldr	x1, [sp, #16]
   1da34:	ldr	x0, [sp, #24]
   1da38:	blr	x2
   1da3c:	ldp	x29, x30, [sp], #32
   1da40:	ret

000000000001da44 <gl_list_nx_add_before@@Base>:
   1da44:	stp	x29, x30, [sp, #-48]!
   1da48:	mov	x29, sp
   1da4c:	str	x0, [sp, #40]
   1da50:	str	x1, [sp, #32]
   1da54:	str	x2, [sp, #24]
   1da58:	ldr	x0, [sp, #40]
   1da5c:	ldr	x0, [x0]
   1da60:	ldr	x3, [x0, #104]
   1da64:	ldr	x2, [sp, #24]
   1da68:	ldr	x1, [sp, #32]
   1da6c:	ldr	x0, [sp, #40]
   1da70:	blr	x3
   1da74:	ldp	x29, x30, [sp], #48
   1da78:	ret

000000000001da7c <gl_list_nx_add_after@@Base>:
   1da7c:	stp	x29, x30, [sp, #-48]!
   1da80:	mov	x29, sp
   1da84:	str	x0, [sp, #40]
   1da88:	str	x1, [sp, #32]
   1da8c:	str	x2, [sp, #24]
   1da90:	ldr	x0, [sp, #40]
   1da94:	ldr	x0, [x0]
   1da98:	ldr	x3, [x0, #112]
   1da9c:	ldr	x2, [sp, #24]
   1daa0:	ldr	x1, [sp, #32]
   1daa4:	ldr	x0, [sp, #40]
   1daa8:	blr	x3
   1daac:	ldp	x29, x30, [sp], #48
   1dab0:	ret

000000000001dab4 <gl_list_nx_add_at@@Base>:
   1dab4:	stp	x29, x30, [sp, #-48]!
   1dab8:	mov	x29, sp
   1dabc:	str	x0, [sp, #40]
   1dac0:	str	x1, [sp, #32]
   1dac4:	str	x2, [sp, #24]
   1dac8:	ldr	x0, [sp, #40]
   1dacc:	ldr	x0, [x0]
   1dad0:	ldr	x3, [x0, #120]
   1dad4:	ldr	x2, [sp, #24]
   1dad8:	ldr	x1, [sp, #32]
   1dadc:	ldr	x0, [sp, #40]
   1dae0:	blr	x3
   1dae4:	ldp	x29, x30, [sp], #48
   1dae8:	ret

000000000001daec <gl_list_remove_node@@Base>:
   1daec:	stp	x29, x30, [sp, #-32]!
   1daf0:	mov	x29, sp
   1daf4:	str	x0, [sp, #24]
   1daf8:	str	x1, [sp, #16]
   1dafc:	ldr	x0, [sp, #24]
   1db00:	ldr	x0, [x0]
   1db04:	ldr	x2, [x0, #128]
   1db08:	ldr	x1, [sp, #16]
   1db0c:	ldr	x0, [sp, #24]
   1db10:	blr	x2
   1db14:	and	w0, w0, #0xff
   1db18:	ldp	x29, x30, [sp], #32
   1db1c:	ret

000000000001db20 <gl_list_remove_at@@Base>:
   1db20:	stp	x29, x30, [sp, #-32]!
   1db24:	mov	x29, sp
   1db28:	str	x0, [sp, #24]
   1db2c:	str	x1, [sp, #16]
   1db30:	ldr	x0, [sp, #24]
   1db34:	ldr	x0, [x0]
   1db38:	ldr	x2, [x0, #136]
   1db3c:	ldr	x1, [sp, #16]
   1db40:	ldr	x0, [sp, #24]
   1db44:	blr	x2
   1db48:	and	w0, w0, #0xff
   1db4c:	ldp	x29, x30, [sp], #32
   1db50:	ret

000000000001db54 <gl_list_remove@@Base>:
   1db54:	stp	x29, x30, [sp, #-32]!
   1db58:	mov	x29, sp
   1db5c:	str	x0, [sp, #24]
   1db60:	str	x1, [sp, #16]
   1db64:	ldr	x0, [sp, #24]
   1db68:	ldr	x0, [x0]
   1db6c:	ldr	x2, [x0, #144]
   1db70:	ldr	x1, [sp, #16]
   1db74:	ldr	x0, [sp, #24]
   1db78:	blr	x2
   1db7c:	and	w0, w0, #0xff
   1db80:	ldp	x29, x30, [sp], #32
   1db84:	ret

000000000001db88 <gl_list_free@@Base>:
   1db88:	stp	x29, x30, [sp, #-32]!
   1db8c:	mov	x29, sp
   1db90:	str	x0, [sp, #24]
   1db94:	ldr	x0, [sp, #24]
   1db98:	ldr	x0, [x0]
   1db9c:	ldr	x1, [x0, #152]
   1dba0:	ldr	x0, [sp, #24]
   1dba4:	blr	x1
   1dba8:	nop
   1dbac:	ldp	x29, x30, [sp], #32
   1dbb0:	ret

000000000001dbb4 <gl_list_iterator@@Base>:
   1dbb4:	stp	x29, x30, [sp, #-32]!
   1dbb8:	mov	x29, sp
   1dbbc:	mov	x2, x8
   1dbc0:	str	x0, [sp, #24]
   1dbc4:	ldr	x0, [sp, #24]
   1dbc8:	ldr	x0, [x0]
   1dbcc:	ldr	x1, [x0, #160]
   1dbd0:	mov	x8, x2
   1dbd4:	ldr	x0, [sp, #24]
   1dbd8:	blr	x1
   1dbdc:	ldp	x29, x30, [sp], #32
   1dbe0:	ret

000000000001dbe4 <gl_list_iterator_from_to@@Base>:
   1dbe4:	stp	x29, x30, [sp, #-48]!
   1dbe8:	mov	x29, sp
   1dbec:	mov	x4, x8
   1dbf0:	str	x0, [sp, #40]
   1dbf4:	str	x1, [sp, #32]
   1dbf8:	str	x2, [sp, #24]
   1dbfc:	ldr	x0, [sp, #40]
   1dc00:	ldr	x0, [x0]
   1dc04:	ldr	x3, [x0, #168]
   1dc08:	mov	x8, x4
   1dc0c:	ldr	x2, [sp, #24]
   1dc10:	ldr	x1, [sp, #32]
   1dc14:	ldr	x0, [sp, #40]
   1dc18:	blr	x3
   1dc1c:	ldp	x29, x30, [sp], #48
   1dc20:	ret

000000000001dc24 <gl_list_iterator_next@@Base>:
   1dc24:	stp	x29, x30, [sp, #-48]!
   1dc28:	mov	x29, sp
   1dc2c:	str	x0, [sp, #40]
   1dc30:	str	x1, [sp, #32]
   1dc34:	str	x2, [sp, #24]
   1dc38:	ldr	x0, [sp, #40]
   1dc3c:	ldr	x0, [x0]
   1dc40:	ldr	x3, [x0, #176]
   1dc44:	ldr	x2, [sp, #24]
   1dc48:	ldr	x1, [sp, #32]
   1dc4c:	ldr	x0, [sp, #40]
   1dc50:	blr	x3
   1dc54:	and	w0, w0, #0xff
   1dc58:	ldp	x29, x30, [sp], #48
   1dc5c:	ret

000000000001dc60 <gl_list_iterator_free@@Base>:
   1dc60:	stp	x29, x30, [sp, #-32]!
   1dc64:	mov	x29, sp
   1dc68:	str	x0, [sp, #24]
   1dc6c:	ldr	x0, [sp, #24]
   1dc70:	ldr	x0, [x0]
   1dc74:	ldr	x1, [x0, #184]
   1dc78:	ldr	x0, [sp, #24]
   1dc7c:	blr	x1
   1dc80:	nop
   1dc84:	ldp	x29, x30, [sp], #32
   1dc88:	ret

000000000001dc8c <gl_sortedlist_search@@Base>:
   1dc8c:	stp	x29, x30, [sp, #-48]!
   1dc90:	mov	x29, sp
   1dc94:	str	x0, [sp, #40]
   1dc98:	str	x1, [sp, #32]
   1dc9c:	str	x2, [sp, #24]
   1dca0:	ldr	x0, [sp, #40]
   1dca4:	ldr	x0, [x0]
   1dca8:	ldr	x3, [x0, #192]
   1dcac:	ldr	x2, [sp, #24]
   1dcb0:	ldr	x1, [sp, #32]
   1dcb4:	ldr	x0, [sp, #40]
   1dcb8:	blr	x3
   1dcbc:	ldp	x29, x30, [sp], #48
   1dcc0:	ret

000000000001dcc4 <gl_sortedlist_search_from_to@@Base>:
   1dcc4:	stp	x29, x30, [sp, #-64]!
   1dcc8:	mov	x29, sp
   1dccc:	str	x0, [sp, #56]
   1dcd0:	str	x1, [sp, #48]
   1dcd4:	str	x2, [sp, #40]
   1dcd8:	str	x3, [sp, #32]
   1dcdc:	str	x4, [sp, #24]
   1dce0:	ldr	x0, [sp, #56]
   1dce4:	ldr	x0, [x0]
   1dce8:	ldr	x5, [x0, #200]
   1dcec:	ldr	x4, [sp, #24]
   1dcf0:	ldr	x3, [sp, #32]
   1dcf4:	ldr	x2, [sp, #40]
   1dcf8:	ldr	x1, [sp, #48]
   1dcfc:	ldr	x0, [sp, #56]
   1dd00:	blr	x5
   1dd04:	ldp	x29, x30, [sp], #64
   1dd08:	ret

000000000001dd0c <gl_sortedlist_indexof@@Base>:
   1dd0c:	stp	x29, x30, [sp, #-48]!
   1dd10:	mov	x29, sp
   1dd14:	str	x0, [sp, #40]
   1dd18:	str	x1, [sp, #32]
   1dd1c:	str	x2, [sp, #24]
   1dd20:	ldr	x0, [sp, #40]
   1dd24:	ldr	x0, [x0]
   1dd28:	ldr	x3, [x0, #208]
   1dd2c:	ldr	x2, [sp, #24]
   1dd30:	ldr	x1, [sp, #32]
   1dd34:	ldr	x0, [sp, #40]
   1dd38:	blr	x3
   1dd3c:	ldp	x29, x30, [sp], #48
   1dd40:	ret

000000000001dd44 <gl_sortedlist_indexof_from_to@@Base>:
   1dd44:	stp	x29, x30, [sp, #-64]!
   1dd48:	mov	x29, sp
   1dd4c:	str	x0, [sp, #56]
   1dd50:	str	x1, [sp, #48]
   1dd54:	str	x2, [sp, #40]
   1dd58:	str	x3, [sp, #32]
   1dd5c:	str	x4, [sp, #24]
   1dd60:	ldr	x0, [sp, #56]
   1dd64:	ldr	x0, [x0]
   1dd68:	ldr	x5, [x0, #216]
   1dd6c:	ldr	x4, [sp, #24]
   1dd70:	ldr	x3, [sp, #32]
   1dd74:	ldr	x2, [sp, #40]
   1dd78:	ldr	x1, [sp, #48]
   1dd7c:	ldr	x0, [sp, #56]
   1dd80:	blr	x5
   1dd84:	ldp	x29, x30, [sp], #64
   1dd88:	ret

000000000001dd8c <gl_sortedlist_nx_add@@Base>:
   1dd8c:	stp	x29, x30, [sp, #-48]!
   1dd90:	mov	x29, sp
   1dd94:	str	x0, [sp, #40]
   1dd98:	str	x1, [sp, #32]
   1dd9c:	str	x2, [sp, #24]
   1dda0:	ldr	x0, [sp, #40]
   1dda4:	ldr	x0, [x0]
   1dda8:	ldr	x3, [x0, #224]
   1ddac:	ldr	x2, [sp, #24]
   1ddb0:	ldr	x1, [sp, #32]
   1ddb4:	ldr	x0, [sp, #40]
   1ddb8:	blr	x3
   1ddbc:	ldp	x29, x30, [sp], #48
   1ddc0:	ret

000000000001ddc4 <gl_sortedlist_remove@@Base>:
   1ddc4:	stp	x29, x30, [sp, #-48]!
   1ddc8:	mov	x29, sp
   1ddcc:	str	x0, [sp, #40]
   1ddd0:	str	x1, [sp, #32]
   1ddd4:	str	x2, [sp, #24]
   1ddd8:	ldr	x0, [sp, #40]
   1dddc:	ldr	x0, [x0]
   1dde0:	ldr	x3, [x0, #232]
   1dde4:	ldr	x2, [sp, #24]
   1dde8:	ldr	x1, [sp, #32]
   1ddec:	ldr	x0, [sp, #40]
   1ddf0:	blr	x3
   1ddf4:	and	w0, w0, #0xff
   1ddf8:	ldp	x29, x30, [sp], #48
   1ddfc:	ret

000000000001de00 <locale_charset@@Base>:
   1de00:	stp	x29, x30, [sp, #-32]!
   1de04:	mov	x29, sp
   1de08:	mov	w0, #0xe                   	// #14
   1de0c:	bl	ab10 <nl_langinfo@plt>
   1de10:	str	x0, [sp, #24]
   1de14:	ldr	x0, [sp, #24]
   1de18:	cmp	x0, #0x0
   1de1c:	b.ne	1de2c <locale_charset@@Base+0x2c>  // b.any
   1de20:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1de24:	add	x0, x0, #0xcc0
   1de28:	str	x0, [sp, #24]
   1de2c:	ldr	x0, [sp, #24]
   1de30:	ldrb	w0, [x0]
   1de34:	cmp	w0, #0x0
   1de38:	b.ne	1de48 <locale_charset@@Base+0x48>  // b.any
   1de3c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1de40:	add	x0, x0, #0xcc8
   1de44:	str	x0, [sp, #24]
   1de48:	ldr	x0, [sp, #24]
   1de4c:	ldp	x29, x30, [sp], #32
   1de50:	ret

000000000001de54 <glthread_rwlock_init_for_glibc@@Base>:
   1de54:	stp	x29, x30, [sp, #-48]!
   1de58:	mov	x29, sp
   1de5c:	str	x0, [sp, #24]
   1de60:	add	x0, sp, #0x20
   1de64:	bl	a7b0 <pthread_rwlockattr_init@plt>
   1de68:	str	w0, [sp, #44]
   1de6c:	ldr	w0, [sp, #44]
   1de70:	cmp	w0, #0x0
   1de74:	b.eq	1de80 <glthread_rwlock_init_for_glibc@@Base+0x2c>  // b.none
   1de78:	ldr	w0, [sp, #44]
   1de7c:	b	1debc <glthread_rwlock_init_for_glibc@@Base+0x68>
   1de80:	add	x0, sp, #0x20
   1de84:	mov	w1, #0x2                   	// #2
   1de88:	bl	a920 <pthread_rwlockattr_setkind_np@plt>
   1de8c:	str	w0, [sp, #44]
   1de90:	ldr	w0, [sp, #44]
   1de94:	cmp	w0, #0x0
   1de98:	b.ne	1deb0 <glthread_rwlock_init_for_glibc@@Base+0x5c>  // b.any
   1de9c:	add	x0, sp, #0x20
   1dea0:	mov	x1, x0
   1dea4:	ldr	x0, [sp, #24]
   1dea8:	bl	a900 <pthread_rwlock_init@plt>
   1deac:	str	w0, [sp, #44]
   1deb0:	add	x0, sp, #0x20
   1deb4:	bl	b500 <pthread_rwlockattr_destroy@plt>
   1deb8:	ldr	w0, [sp, #44]
   1debc:	ldp	x29, x30, [sp], #48
   1dec0:	ret

000000000001dec4 <glthread_recursive_lock_init_multithreaded@@Base>:
   1dec4:	stp	x29, x30, [sp, #-48]!
   1dec8:	mov	x29, sp
   1decc:	str	x0, [sp, #24]
   1ded0:	add	x0, sp, #0x20
   1ded4:	bl	b420 <pthread_mutexattr_init@plt>
   1ded8:	str	w0, [sp, #44]
   1dedc:	ldr	w0, [sp, #44]
   1dee0:	cmp	w0, #0x0
   1dee4:	b.eq	1def0 <glthread_recursive_lock_init_multithreaded@@Base+0x2c>  // b.none
   1dee8:	ldr	w0, [sp, #44]
   1deec:	b	1df70 <glthread_recursive_lock_init_multithreaded@@Base+0xac>
   1def0:	add	x0, sp, #0x20
   1def4:	mov	w1, #0x1                   	// #1
   1def8:	bl	a860 <pthread_mutexattr_settype@plt>
   1defc:	str	w0, [sp, #44]
   1df00:	ldr	w0, [sp, #44]
   1df04:	cmp	w0, #0x0
   1df08:	b.eq	1df1c <glthread_recursive_lock_init_multithreaded@@Base+0x58>  // b.none
   1df0c:	add	x0, sp, #0x20
   1df10:	bl	b490 <pthread_mutexattr_destroy@plt>
   1df14:	ldr	w0, [sp, #44]
   1df18:	b	1df70 <glthread_recursive_lock_init_multithreaded@@Base+0xac>
   1df1c:	add	x0, sp, #0x20
   1df20:	mov	x1, x0
   1df24:	ldr	x0, [sp, #24]
   1df28:	bl	ae70 <pthread_mutex_init@plt>
   1df2c:	str	w0, [sp, #44]
   1df30:	ldr	w0, [sp, #44]
   1df34:	cmp	w0, #0x0
   1df38:	b.eq	1df4c <glthread_recursive_lock_init_multithreaded@@Base+0x88>  // b.none
   1df3c:	add	x0, sp, #0x20
   1df40:	bl	b490 <pthread_mutexattr_destroy@plt>
   1df44:	ldr	w0, [sp, #44]
   1df48:	b	1df70 <glthread_recursive_lock_init_multithreaded@@Base+0xac>
   1df4c:	add	x0, sp, #0x20
   1df50:	bl	b490 <pthread_mutexattr_destroy@plt>
   1df54:	str	w0, [sp, #44]
   1df58:	ldr	w0, [sp, #44]
   1df5c:	cmp	w0, #0x0
   1df60:	b.eq	1df6c <glthread_recursive_lock_init_multithreaded@@Base+0xa8>  // b.none
   1df64:	ldr	w0, [sp, #44]
   1df68:	b	1df70 <glthread_recursive_lock_init_multithreaded@@Base+0xac>
   1df6c:	mov	w0, #0x0                   	// #0
   1df70:	ldp	x29, x30, [sp], #48
   1df74:	ret

000000000001df78 <glthread_once_singlethreaded@@Base>:
   1df78:	sub	sp, sp, #0x20
   1df7c:	str	x0, [sp, #8]
   1df80:	ldr	x0, [sp, #8]
   1df84:	str	x0, [sp, #24]
   1df88:	ldr	x0, [sp, #24]
   1df8c:	ldrb	w1, [x0]
   1df90:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1df94:	add	x0, x0, #0xcd0
   1df98:	ldrb	w0, [x0]
   1df9c:	cmp	w1, w0
   1dfa0:	b.ne	1dfc8 <glthread_once_singlethreaded@@Base+0x50>  // b.any
   1dfa4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1dfa8:	add	x0, x0, #0xcd0
   1dfac:	ldrb	w0, [x0]
   1dfb0:	mvn	w0, w0
   1dfb4:	and	w1, w0, #0xff
   1dfb8:	ldr	x0, [sp, #24]
   1dfbc:	strb	w1, [x0]
   1dfc0:	mov	w0, #0x1                   	// #1
   1dfc4:	b	1dfcc <glthread_once_singlethreaded@@Base+0x54>
   1dfc8:	mov	w0, #0x0                   	// #0
   1dfcc:	add	sp, sp, #0x20
   1dfd0:	ret

000000000001dfd4 <mmalloca@@Base>:
   1dfd4:	stp	x29, x30, [sp, #-64]!
   1dfd8:	mov	x29, sp
   1dfdc:	str	x0, [sp, #24]
   1dfe0:	ldr	x0, [sp, #24]
   1dfe4:	add	x0, x0, #0x20
   1dfe8:	str	x0, [sp, #56]
   1dfec:	ldr	x1, [sp, #56]
   1dff0:	ldr	x0, [sp, #24]
   1dff4:	cmp	x1, x0
   1dff8:	b.cc	1e04c <mmalloca@@Base+0x78>  // b.lo, b.ul, b.last
   1dffc:	ldr	x0, [sp, #56]
   1e000:	bl	ab40 <malloc@plt>
   1e004:	str	x0, [sp, #48]
   1e008:	ldr	x0, [sp, #48]
   1e00c:	cmp	x0, #0x0
   1e010:	b.eq	1e04c <mmalloca@@Base+0x78>  // b.none
   1e014:	ldr	x0, [sp, #48]
   1e018:	add	x0, x0, #0x10
   1e01c:	and	x0, x0, #0xffffffffffffffe0
   1e020:	add	x0, x0, #0x10
   1e024:	str	x0, [sp, #40]
   1e028:	ldr	x1, [sp, #40]
   1e02c:	ldr	x0, [sp, #48]
   1e030:	sub	x1, x1, x0
   1e034:	ldr	x0, [sp, #40]
   1e038:	sub	x0, x0, #0x1
   1e03c:	and	w1, w1, #0xff
   1e040:	strb	w1, [x0]
   1e044:	ldr	x0, [sp, #40]
   1e048:	b	1e050 <mmalloca@@Base+0x7c>
   1e04c:	mov	x0, #0x0                   	// #0
   1e050:	ldp	x29, x30, [sp], #64
   1e054:	ret

000000000001e058 <freea@@Base>:
   1e058:	stp	x29, x30, [sp, #-48]!
   1e05c:	mov	x29, sp
   1e060:	str	x0, [sp, #24]
   1e064:	ldr	x0, [sp, #24]
   1e068:	and	x0, x0, #0xf
   1e06c:	cmp	x0, #0x0
   1e070:	b.eq	1e078 <freea@@Base+0x20>  // b.none
   1e074:	bl	af70 <abort@plt>
   1e078:	ldr	x0, [sp, #24]
   1e07c:	and	x0, x0, #0x10
   1e080:	cmp	x0, #0x0
   1e084:	b.eq	1e0b0 <freea@@Base+0x58>  // b.none
   1e088:	ldr	x0, [sp, #24]
   1e08c:	sub	x0, x0, #0x1
   1e090:	ldrb	w0, [x0]
   1e094:	and	x0, x0, #0xff
   1e098:	neg	x0, x0
   1e09c:	ldr	x1, [sp, #24]
   1e0a0:	add	x0, x1, x0
   1e0a4:	str	x0, [sp, #40]
   1e0a8:	ldr	x0, [sp, #40]
   1e0ac:	bl	b130 <free@plt>
   1e0b0:	nop
   1e0b4:	ldp	x29, x30, [sp], #48
   1e0b8:	ret

000000000001e0bc <gl_map_nx_create_empty@@Base>:
   1e0bc:	stp	x29, x30, [sp, #-64]!
   1e0c0:	mov	x29, sp
   1e0c4:	str	x0, [sp, #56]
   1e0c8:	str	x1, [sp, #48]
   1e0cc:	str	x2, [sp, #40]
   1e0d0:	str	x3, [sp, #32]
   1e0d4:	str	x4, [sp, #24]
   1e0d8:	ldr	x0, [sp, #56]
   1e0dc:	ldr	x5, [x0]
   1e0e0:	ldr	x4, [sp, #24]
   1e0e4:	ldr	x3, [sp, #32]
   1e0e8:	ldr	x2, [sp, #40]
   1e0ec:	ldr	x1, [sp, #48]
   1e0f0:	ldr	x0, [sp, #56]
   1e0f4:	blr	x5
   1e0f8:	ldp	x29, x30, [sp], #64
   1e0fc:	ret

000000000001e100 <gl_map_size@@Base>:
   1e100:	stp	x29, x30, [sp, #-32]!
   1e104:	mov	x29, sp
   1e108:	str	x0, [sp, #24]
   1e10c:	ldr	x0, [sp, #24]
   1e110:	ldr	x0, [x0]
   1e114:	ldr	x1, [x0, #8]
   1e118:	ldr	x0, [sp, #24]
   1e11c:	blr	x1
   1e120:	ldp	x29, x30, [sp], #32
   1e124:	ret

000000000001e128 <gl_map_search@@Base>:
   1e128:	stp	x29, x30, [sp, #-48]!
   1e12c:	mov	x29, sp
   1e130:	str	x0, [sp, #40]
   1e134:	str	x1, [sp, #32]
   1e138:	str	x2, [sp, #24]
   1e13c:	ldr	x0, [sp, #40]
   1e140:	ldr	x0, [x0]
   1e144:	ldr	x3, [x0, #16]
   1e148:	ldr	x2, [sp, #24]
   1e14c:	ldr	x1, [sp, #32]
   1e150:	ldr	x0, [sp, #40]
   1e154:	blr	x3
   1e158:	and	w0, w0, #0xff
   1e15c:	ldp	x29, x30, [sp], #48
   1e160:	ret

000000000001e164 <gl_map_nx_getput@@Base>:
   1e164:	stp	x29, x30, [sp, #-48]!
   1e168:	mov	x29, sp
   1e16c:	str	x0, [sp, #40]
   1e170:	str	x1, [sp, #32]
   1e174:	str	x2, [sp, #24]
   1e178:	str	x3, [sp, #16]
   1e17c:	ldr	x0, [sp, #40]
   1e180:	ldr	x0, [x0]
   1e184:	ldr	x4, [x0, #24]
   1e188:	ldr	x3, [sp, #16]
   1e18c:	ldr	x2, [sp, #24]
   1e190:	ldr	x1, [sp, #32]
   1e194:	ldr	x0, [sp, #40]
   1e198:	blr	x4
   1e19c:	ldp	x29, x30, [sp], #48
   1e1a0:	ret

000000000001e1a4 <gl_map_getremove@@Base>:
   1e1a4:	stp	x29, x30, [sp, #-48]!
   1e1a8:	mov	x29, sp
   1e1ac:	str	x0, [sp, #40]
   1e1b0:	str	x1, [sp, #32]
   1e1b4:	str	x2, [sp, #24]
   1e1b8:	ldr	x0, [sp, #40]
   1e1bc:	ldr	x0, [x0]
   1e1c0:	ldr	x3, [x0, #32]
   1e1c4:	ldr	x2, [sp, #24]
   1e1c8:	ldr	x1, [sp, #32]
   1e1cc:	ldr	x0, [sp, #40]
   1e1d0:	blr	x3
   1e1d4:	and	w0, w0, #0xff
   1e1d8:	ldp	x29, x30, [sp], #48
   1e1dc:	ret

000000000001e1e0 <gl_map_free@@Base>:
   1e1e0:	stp	x29, x30, [sp, #-32]!
   1e1e4:	mov	x29, sp
   1e1e8:	str	x0, [sp, #24]
   1e1ec:	ldr	x0, [sp, #24]
   1e1f0:	ldr	x0, [x0]
   1e1f4:	ldr	x1, [x0, #40]
   1e1f8:	ldr	x0, [sp, #24]
   1e1fc:	blr	x1
   1e200:	nop
   1e204:	ldp	x29, x30, [sp], #32
   1e208:	ret

000000000001e20c <gl_map_iterator@@Base>:
   1e20c:	stp	x29, x30, [sp, #-32]!
   1e210:	mov	x29, sp
   1e214:	mov	x2, x8
   1e218:	str	x0, [sp, #24]
   1e21c:	ldr	x0, [sp, #24]
   1e220:	ldr	x0, [x0]
   1e224:	ldr	x1, [x0, #48]
   1e228:	mov	x8, x2
   1e22c:	ldr	x0, [sp, #24]
   1e230:	blr	x1
   1e234:	ldp	x29, x30, [sp], #32
   1e238:	ret

000000000001e23c <gl_map_iterator_next@@Base>:
   1e23c:	stp	x29, x30, [sp, #-48]!
   1e240:	mov	x29, sp
   1e244:	str	x0, [sp, #40]
   1e248:	str	x1, [sp, #32]
   1e24c:	str	x2, [sp, #24]
   1e250:	ldr	x0, [sp, #40]
   1e254:	ldr	x0, [x0]
   1e258:	ldr	x3, [x0, #56]
   1e25c:	ldr	x2, [sp, #24]
   1e260:	ldr	x1, [sp, #32]
   1e264:	ldr	x0, [sp, #40]
   1e268:	blr	x3
   1e26c:	and	w0, w0, #0xff
   1e270:	ldp	x29, x30, [sp], #48
   1e274:	ret

000000000001e278 <gl_map_iterator_free@@Base>:
   1e278:	stp	x29, x30, [sp, #-32]!
   1e27c:	mov	x29, sp
   1e280:	str	x0, [sp, #24]
   1e284:	ldr	x0, [sp, #24]
   1e288:	ldr	x0, [x0]
   1e28c:	ldr	x1, [x0, #64]
   1e290:	ldr	x0, [sp, #24]
   1e294:	blr	x1
   1e298:	nop
   1e29c:	ldp	x29, x30, [sp], #32
   1e2a0:	ret

000000000001e2a4 <gl_map_get@@Base>:
   1e2a4:	stp	x29, x30, [sp, #-48]!
   1e2a8:	mov	x29, sp
   1e2ac:	str	x0, [sp, #24]
   1e2b0:	str	x1, [sp, #16]
   1e2b4:	str	xzr, [sp, #40]
   1e2b8:	add	x0, sp, #0x28
   1e2bc:	mov	x2, x0
   1e2c0:	ldr	x1, [sp, #16]
   1e2c4:	ldr	x0, [sp, #24]
   1e2c8:	bl	1e128 <gl_map_search@@Base>
   1e2cc:	ldr	x0, [sp, #40]
   1e2d0:	ldp	x29, x30, [sp], #48
   1e2d4:	ret

000000000001e2d8 <gl_map_nx_put@@Base>:
   1e2d8:	stp	x29, x30, [sp, #-80]!
   1e2dc:	mov	x29, sp
   1e2e0:	str	x0, [sp, #40]
   1e2e4:	str	x1, [sp, #32]
   1e2e8:	str	x2, [sp, #24]
   1e2ec:	add	x0, sp, #0x38
   1e2f0:	mov	x3, x0
   1e2f4:	ldr	x2, [sp, #24]
   1e2f8:	ldr	x1, [sp, #32]
   1e2fc:	ldr	x0, [sp, #40]
   1e300:	bl	1e164 <gl_map_nx_getput@@Base>
   1e304:	str	w0, [sp, #76]
   1e308:	ldr	w0, [sp, #76]
   1e30c:	cmp	w0, #0x0
   1e310:	b.ne	1e338 <gl_map_nx_put@@Base+0x60>  // b.any
   1e314:	ldr	x0, [sp, #40]
   1e318:	ldr	x0, [x0, #24]
   1e31c:	str	x0, [sp, #64]
   1e320:	ldr	x0, [sp, #64]
   1e324:	cmp	x0, #0x0
   1e328:	b.eq	1e338 <gl_map_nx_put@@Base+0x60>  // b.none
   1e32c:	ldr	x0, [sp, #56]
   1e330:	ldr	x1, [sp, #64]
   1e334:	blr	x1
   1e338:	ldr	w0, [sp, #76]
   1e33c:	ldp	x29, x30, [sp], #80
   1e340:	ret

000000000001e344 <gl_map_remove@@Base>:
   1e344:	stp	x29, x30, [sp, #-64]!
   1e348:	mov	x29, sp
   1e34c:	str	x0, [sp, #24]
   1e350:	str	x1, [sp, #16]
   1e354:	add	x0, sp, #0x28
   1e358:	mov	x2, x0
   1e35c:	ldr	x1, [sp, #16]
   1e360:	ldr	x0, [sp, #24]
   1e364:	bl	1e1a4 <gl_map_getremove@@Base>
   1e368:	strb	w0, [sp, #63]
   1e36c:	ldrb	w0, [sp, #63]
   1e370:	cmp	w0, #0x0
   1e374:	b.eq	1e39c <gl_map_remove@@Base+0x58>  // b.none
   1e378:	ldr	x0, [sp, #24]
   1e37c:	ldr	x0, [x0, #24]
   1e380:	str	x0, [sp, #48]
   1e384:	ldr	x0, [sp, #48]
   1e388:	cmp	x0, #0x0
   1e38c:	b.eq	1e39c <gl_map_remove@@Base+0x58>  // b.none
   1e390:	ldr	x0, [sp, #40]
   1e394:	ldr	x1, [sp, #48]
   1e398:	blr	x1
   1e39c:	ldrb	w0, [sp, #63]
   1e3a0:	ldp	x29, x30, [sp], #64
   1e3a4:	ret

000000000001e3a8 <get_nonblocking_flag@@Base>:
   1e3a8:	stp	x29, x30, [sp, #-48]!
   1e3ac:	mov	x29, sp
   1e3b0:	str	w0, [sp, #28]
   1e3b4:	mov	w2, #0x0                   	// #0
   1e3b8:	mov	w1, #0x3                   	// #3
   1e3bc:	ldr	w0, [sp, #28]
   1e3c0:	bl	b320 <fcntl@plt>
   1e3c4:	str	w0, [sp, #44]
   1e3c8:	ldr	w0, [sp, #44]
   1e3cc:	cmp	w0, #0x0
   1e3d0:	b.ge	1e3dc <get_nonblocking_flag@@Base+0x34>  // b.tcont
   1e3d4:	mov	w0, #0xffffffff            	// #-1
   1e3d8:	b	1e3f0 <get_nonblocking_flag@@Base+0x48>
   1e3dc:	ldr	w0, [sp, #44]
   1e3e0:	and	w0, w0, #0x800
   1e3e4:	cmp	w0, #0x0
   1e3e8:	cset	w0, ne  // ne = any
   1e3ec:	and	w0, w0, #0xff
   1e3f0:	ldp	x29, x30, [sp], #48
   1e3f4:	ret

000000000001e3f8 <set_nonblocking_flag@@Base>:
   1e3f8:	stp	x29, x30, [sp, #-48]!
   1e3fc:	mov	x29, sp
   1e400:	str	w0, [sp, #28]
   1e404:	strb	w1, [sp, #27]
   1e408:	mov	w2, #0x0                   	// #0
   1e40c:	mov	w1, #0x3                   	// #3
   1e410:	ldr	w0, [sp, #28]
   1e414:	bl	b320 <fcntl@plt>
   1e418:	str	w0, [sp, #44]
   1e41c:	ldr	w0, [sp, #44]
   1e420:	cmp	w0, #0x0
   1e424:	b.ge	1e430 <set_nonblocking_flag@@Base+0x38>  // b.tcont
   1e428:	mov	w0, #0xffffffff            	// #-1
   1e42c:	b	1e494 <set_nonblocking_flag@@Base+0x9c>
   1e430:	ldr	w0, [sp, #44]
   1e434:	and	w0, w0, #0x800
   1e438:	cmp	w0, #0x0
   1e43c:	cset	w0, ne  // ne = any
   1e440:	and	w0, w0, #0xff
   1e444:	mov	w1, w0
   1e448:	ldrb	w0, [sp, #27]
   1e44c:	cmp	w1, w0
   1e450:	b.ne	1e45c <set_nonblocking_flag@@Base+0x64>  // b.any
   1e454:	mov	w0, #0x0                   	// #0
   1e458:	b	1e494 <set_nonblocking_flag@@Base+0x9c>
   1e45c:	ldrb	w0, [sp, #27]
   1e460:	cmp	w0, #0x0
   1e464:	b.eq	1e478 <set_nonblocking_flag@@Base+0x80>  // b.none
   1e468:	ldr	w0, [sp, #44]
   1e46c:	orr	w0, w0, #0x800
   1e470:	str	w0, [sp, #44]
   1e474:	b	1e484 <set_nonblocking_flag@@Base+0x8c>
   1e478:	ldr	w0, [sp, #44]
   1e47c:	and	w0, w0, #0xfffff7ff
   1e480:	str	w0, [sp, #44]
   1e484:	ldr	w2, [sp, #44]
   1e488:	mov	w1, #0x4                   	// #4
   1e48c:	ldr	w0, [sp, #28]
   1e490:	bl	b320 <fcntl@plt>
   1e494:	ldp	x29, x30, [sp], #48
   1e498:	ret

000000000001e49c <openat_save_fail@@Base>:
   1e49c:	stp	x29, x30, [sp, #-48]!
   1e4a0:	mov	x29, sp
   1e4a4:	str	x19, [sp, #16]
   1e4a8:	str	w0, [sp, #44]
   1e4ac:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   1e4b0:	ldr	x0, [x0, #3976]
   1e4b4:	ldr	w19, [x0]
   1e4b8:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1e4bc:	add	x1, x0, #0xcd8
   1e4c0:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1e4c4:	add	x0, x0, #0xd08
   1e4c8:	bl	b120 <dgettext@plt>
   1e4cc:	mov	x2, x0
   1e4d0:	ldr	w1, [sp, #44]
   1e4d4:	mov	w0, w19
   1e4d8:	bl	a850 <error@plt>
   1e4dc:	bl	af70 <abort@plt>

000000000001e4e0 <openat_restore_fail@@Base>:
   1e4e0:	stp	x29, x30, [sp, #-48]!
   1e4e4:	mov	x29, sp
   1e4e8:	str	x19, [sp, #16]
   1e4ec:	str	w0, [sp, #44]
   1e4f0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   1e4f4:	ldr	x0, [x0, #3976]
   1e4f8:	ldr	w19, [x0]
   1e4fc:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1e500:	add	x1, x0, #0xd18
   1e504:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1e508:	add	x0, x0, #0xd08
   1e50c:	bl	b120 <dgettext@plt>
   1e510:	mov	x2, x0
   1e514:	ldr	w1, [sp, #44]
   1e518:	mov	w0, w19
   1e51c:	bl	a850 <error@plt>
   1e520:	bl	af70 <abort@plt>

000000000001e524 <set_program_name@@Base>:
   1e524:	stp	x29, x30, [sp, #-48]!
   1e528:	mov	x29, sp
   1e52c:	str	x0, [sp, #24]
   1e530:	ldr	x0, [sp, #24]
   1e534:	cmp	x0, #0x0
   1e538:	b.ne	1e564 <set_program_name@@Base+0x40>  // b.any
   1e53c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   1e540:	ldr	x0, [x0, #3816]
   1e544:	ldr	x0, [x0]
   1e548:	mov	x3, x0
   1e54c:	mov	x2, #0x37                  	// #55
   1e550:	mov	x1, #0x1                   	// #1
   1e554:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1e558:	add	x0, x0, #0xd48
   1e55c:	bl	b2e0 <fwrite@plt>
   1e560:	bl	af70 <abort@plt>
   1e564:	mov	w1, #0x2f                  	// #47
   1e568:	ldr	x0, [sp, #24]
   1e56c:	bl	aec0 <strrchr@plt>
   1e570:	str	x0, [sp, #40]
   1e574:	ldr	x0, [sp, #40]
   1e578:	cmp	x0, #0x0
   1e57c:	b.eq	1e58c <set_program_name@@Base+0x68>  // b.none
   1e580:	ldr	x0, [sp, #40]
   1e584:	add	x0, x0, #0x1
   1e588:	b	1e590 <set_program_name@@Base+0x6c>
   1e58c:	ldr	x0, [sp, #24]
   1e590:	str	x0, [sp, #32]
   1e594:	ldr	x1, [sp, #32]
   1e598:	ldr	x0, [sp, #24]
   1e59c:	sub	x0, x1, x0
   1e5a0:	cmp	x0, #0x6
   1e5a4:	b.le	1e60c <set_program_name@@Base+0xe8>
   1e5a8:	ldr	x0, [sp, #32]
   1e5ac:	sub	x3, x0, #0x7
   1e5b0:	mov	x2, #0x7                   	// #7
   1e5b4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1e5b8:	add	x1, x0, #0xd80
   1e5bc:	mov	x0, x3
   1e5c0:	bl	ac60 <strncmp@plt>
   1e5c4:	cmp	w0, #0x0
   1e5c8:	b.ne	1e60c <set_program_name@@Base+0xe8>  // b.any
   1e5cc:	ldr	x0, [sp, #32]
   1e5d0:	str	x0, [sp, #24]
   1e5d4:	mov	x2, #0x3                   	// #3
   1e5d8:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   1e5dc:	add	x1, x0, #0xd88
   1e5e0:	ldr	x0, [sp, #32]
   1e5e4:	bl	ac60 <strncmp@plt>
   1e5e8:	cmp	w0, #0x0
   1e5ec:	b.ne	1e60c <set_program_name@@Base+0xe8>  // b.any
   1e5f0:	ldr	x0, [sp, #32]
   1e5f4:	add	x0, x0, #0x3
   1e5f8:	str	x0, [sp, #24]
   1e5fc:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   1e600:	ldr	x0, [x0, #4008]
   1e604:	ldr	x1, [sp, #24]
   1e608:	str	x1, [x0]
   1e60c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   1e610:	ldr	x0, [x0, #3992]
   1e614:	ldr	x1, [sp, #24]
   1e618:	str	x1, [x0]
   1e61c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   1e620:	ldr	x0, [x0, #3768]
   1e624:	ldr	x1, [sp, #24]
   1e628:	str	x1, [x0]
   1e62c:	nop
   1e630:	ldp	x29, x30, [sp], #48
   1e634:	ret
   1e638:	stp	x29, x30, [sp, #-32]!
   1e63c:	mov	x29, sp
   1e640:	str	x0, [sp, #24]
   1e644:	ldr	x0, [sp, #24]
   1e648:	ldr	x0, [x0]
   1e64c:	cmp	x0, #0x0
   1e650:	b.eq	1e660 <set_program_name@@Base+0x13c>  // b.none
   1e654:	ldr	x0, [sp, #24]
   1e658:	ldr	x0, [x0]
   1e65c:	bl	1e638 <set_program_name@@Base+0x114>
   1e660:	ldr	x0, [sp, #24]
   1e664:	ldr	x0, [x0, #8]
   1e668:	cmp	x0, #0x0
   1e66c:	b.eq	1e67c <set_program_name@@Base+0x158>  // b.none
   1e670:	ldr	x0, [sp, #24]
   1e674:	ldr	x0, [x0, #8]
   1e678:	bl	1e638 <set_program_name@@Base+0x114>
   1e67c:	ldr	x0, [sp, #24]
   1e680:	bl	b130 <free@plt>
   1e684:	nop
   1e688:	ldp	x29, x30, [sp], #32
   1e68c:	ret
   1e690:	stp	x29, x30, [sp, #-80]!
   1e694:	mov	x29, sp
   1e698:	str	w0, [sp, #44]
   1e69c:	str	x1, [sp, #32]
   1e6a0:	str	x2, [sp, #24]
   1e6a4:	ldr	x0, [sp, #32]
   1e6a8:	sub	x0, x0, #0x1
   1e6ac:	lsr	x0, x0, #1
   1e6b0:	str	x0, [sp, #72]
   1e6b4:	ldr	x0, [sp, #32]
   1e6b8:	lsr	x0, x0, #1
   1e6bc:	str	x0, [sp, #64]
   1e6c0:	mov	x0, #0x30                  	// #48
   1e6c4:	bl	ab40 <malloc@plt>
   1e6c8:	str	x0, [sp, #56]
   1e6cc:	ldr	x0, [sp, #56]
   1e6d0:	cmp	x0, #0x0
   1e6d4:	b.ne	1e6e0 <set_program_name@@Base+0x1bc>  // b.any
   1e6d8:	mov	x0, #0x0                   	// #0
   1e6dc:	b	1e830 <set_program_name@@Base+0x30c>
   1e6e0:	ldr	x0, [sp, #72]
   1e6e4:	cmp	x0, #0x0
   1e6e8:	b.eq	1e730 <set_program_name@@Base+0x20c>  // b.none
   1e6ec:	ldr	w0, [sp, #44]
   1e6f0:	sub	w0, w0, #0x1
   1e6f4:	ldr	x2, [sp, #24]
   1e6f8:	ldr	x1, [sp, #72]
   1e6fc:	bl	1e690 <set_program_name@@Base+0x16c>
   1e700:	mov	x1, x0
   1e704:	ldr	x0, [sp, #56]
   1e708:	str	x1, [x0]
   1e70c:	ldr	x0, [sp, #56]
   1e710:	ldr	x0, [x0]
   1e714:	cmp	x0, #0x0
   1e718:	b.eq	1e818 <set_program_name@@Base+0x2f4>  // b.none
   1e71c:	ldr	x0, [sp, #56]
   1e720:	ldr	x0, [x0]
   1e724:	ldr	x1, [sp, #56]
   1e728:	str	x1, [x0, #16]
   1e72c:	b	1e738 <set_program_name@@Base+0x214>
   1e730:	ldr	x0, [sp, #56]
   1e734:	str	xzr, [x0]
   1e738:	ldr	x0, [sp, #72]
   1e73c:	lsl	x0, x0, #3
   1e740:	ldr	x1, [sp, #24]
   1e744:	add	x0, x1, x0
   1e748:	ldr	x1, [x0]
   1e74c:	ldr	x0, [sp, #56]
   1e750:	str	x1, [x0, #40]
   1e754:	ldr	x0, [sp, #64]
   1e758:	cmp	x0, #0x0
   1e75c:	b.eq	1e7bc <set_program_name@@Base+0x298>  // b.none
   1e760:	ldr	w0, [sp, #44]
   1e764:	sub	w3, w0, #0x1
   1e768:	ldr	x0, [sp, #72]
   1e76c:	add	x0, x0, #0x1
   1e770:	lsl	x0, x0, #3
   1e774:	ldr	x1, [sp, #24]
   1e778:	add	x0, x1, x0
   1e77c:	mov	x2, x0
   1e780:	ldr	x1, [sp, #64]
   1e784:	mov	w0, w3
   1e788:	bl	1e690 <set_program_name@@Base+0x16c>
   1e78c:	mov	x1, x0
   1e790:	ldr	x0, [sp, #56]
   1e794:	str	x1, [x0, #8]
   1e798:	ldr	x0, [sp, #56]
   1e79c:	ldr	x0, [x0, #8]
   1e7a0:	cmp	x0, #0x0
   1e7a4:	b.eq	1e7f4 <set_program_name@@Base+0x2d0>  // b.none
   1e7a8:	ldr	x0, [sp, #56]
   1e7ac:	ldr	x0, [x0, #8]
   1e7b0:	ldr	x1, [sp, #56]
   1e7b4:	str	x1, [x0, #16]
   1e7b8:	b	1e7c4 <set_program_name@@Base+0x2a0>
   1e7bc:	ldr	x0, [sp, #56]
   1e7c0:	str	xzr, [x0, #8]
   1e7c4:	ldr	w0, [sp, #44]
   1e7c8:	cmp	w0, #0x0
   1e7cc:	cset	w0, eq  // eq = none
   1e7d0:	and	w0, w0, #0xff
   1e7d4:	mov	w1, w0
   1e7d8:	ldr	x0, [sp, #56]
   1e7dc:	str	w1, [x0, #24]
   1e7e0:	ldr	x0, [sp, #56]
   1e7e4:	ldr	x1, [sp, #32]
   1e7e8:	str	x1, [x0, #32]
   1e7ec:	ldr	x0, [sp, #56]
   1e7f0:	b	1e830 <set_program_name@@Base+0x30c>
   1e7f4:	nop
   1e7f8:	ldr	x0, [sp, #56]
   1e7fc:	ldr	x0, [x0]
   1e800:	cmp	x0, #0x0
   1e804:	b.eq	1e820 <set_program_name@@Base+0x2fc>  // b.none
   1e808:	ldr	x0, [sp, #56]
   1e80c:	ldr	x0, [x0]
   1e810:	bl	1e638 <set_program_name@@Base+0x114>
   1e814:	b	1e824 <set_program_name@@Base+0x300>
   1e818:	nop
   1e81c:	b	1e824 <set_program_name@@Base+0x300>
   1e820:	nop
   1e824:	ldr	x0, [sp, #56]
   1e828:	bl	b130 <free@plt>
   1e82c:	mov	x0, #0x0                   	// #0
   1e830:	ldp	x29, x30, [sp], #80
   1e834:	ret
   1e838:	stp	x29, x30, [sp, #-112]!
   1e83c:	mov	x29, sp
   1e840:	str	x0, [sp, #72]
   1e844:	str	x1, [sp, #64]
   1e848:	str	x2, [sp, #56]
   1e84c:	str	x3, [sp, #48]
   1e850:	strb	w4, [sp, #47]
   1e854:	str	x5, [sp, #32]
   1e858:	str	x6, [sp, #24]
   1e85c:	mov	x0, #0x30                  	// #48
   1e860:	bl	ab40 <malloc@plt>
   1e864:	str	x0, [sp, #88]
   1e868:	ldr	x0, [sp, #88]
   1e86c:	cmp	x0, #0x0
   1e870:	b.ne	1e87c <set_program_name@@Base+0x358>  // b.any
   1e874:	mov	x0, #0x0                   	// #0
   1e878:	b	1e958 <set_program_name@@Base+0x434>
   1e87c:	ldr	x0, [sp, #88]
   1e880:	ldr	x1, [sp, #72]
   1e884:	str	x1, [x0]
   1e888:	ldr	x0, [sp, #88]
   1e88c:	ldr	x1, [sp, #64]
   1e890:	str	x1, [x0, #8]
   1e894:	ldr	x0, [sp, #88]
   1e898:	ldr	x1, [sp, #56]
   1e89c:	str	x1, [x0, #16]
   1e8a0:	ldr	x0, [sp, #88]
   1e8a4:	ldr	x1, [sp, #48]
   1e8a8:	str	x1, [x0, #24]
   1e8ac:	ldr	x0, [sp, #88]
   1e8b0:	ldrb	w1, [sp, #47]
   1e8b4:	strb	w1, [x0, #32]
   1e8b8:	ldr	x0, [sp, #32]
   1e8bc:	cmp	x0, #0x0
   1e8c0:	b.eq	1e938 <set_program_name@@Base+0x414>  // b.none
   1e8c4:	ldr	x0, [sp, #32]
   1e8c8:	add	x0, x0, #0x1
   1e8cc:	str	x0, [sp, #96]
   1e8d0:	str	wzr, [sp, #108]
   1e8d4:	b	1e8f0 <set_program_name@@Base+0x3cc>
   1e8d8:	ldr	w0, [sp, #108]
   1e8dc:	add	w0, w0, #0x1
   1e8e0:	str	w0, [sp, #108]
   1e8e4:	ldr	x0, [sp, #96]
   1e8e8:	lsr	x0, x0, #1
   1e8ec:	str	x0, [sp, #96]
   1e8f0:	ldr	x0, [sp, #96]
   1e8f4:	cmp	x0, #0x1
   1e8f8:	b.hi	1e8d8 <set_program_name@@Base+0x3b4>  // b.pmore
   1e8fc:	ldr	x2, [sp, #24]
   1e900:	ldr	x1, [sp, #32]
   1e904:	ldr	w0, [sp, #108]
   1e908:	bl	1e690 <set_program_name@@Base+0x16c>
   1e90c:	mov	x1, x0
   1e910:	ldr	x0, [sp, #88]
   1e914:	str	x1, [x0, #40]
   1e918:	ldr	x0, [sp, #88]
   1e91c:	ldr	x0, [x0, #40]
   1e920:	cmp	x0, #0x0
   1e924:	b.eq	1e948 <set_program_name@@Base+0x424>  // b.none
   1e928:	ldr	x0, [sp, #88]
   1e92c:	ldr	x0, [x0, #40]
   1e930:	str	xzr, [x0, #16]
   1e934:	b	1e940 <set_program_name@@Base+0x41c>
   1e938:	ldr	x0, [sp, #88]
   1e93c:	str	xzr, [x0, #40]
   1e940:	ldr	x0, [sp, #88]
   1e944:	b	1e958 <set_program_name@@Base+0x434>
   1e948:	nop
   1e94c:	ldr	x0, [sp, #88]
   1e950:	bl	b130 <free@plt>
   1e954:	mov	x0, #0x0                   	// #0
   1e958:	ldp	x29, x30, [sp], #112
   1e95c:	ret
   1e960:	sub	sp, sp, #0x30
   1e964:	str	x0, [sp, #8]
   1e968:	str	x1, [sp]
   1e96c:	ldr	x0, [sp, #8]
   1e970:	ldr	x0, [x0]
   1e974:	str	x0, [sp, #40]
   1e978:	ldr	x0, [sp]
   1e97c:	ldr	x0, [x0]
   1e980:	str	x0, [sp, #32]
   1e984:	ldr	x0, [sp]
   1e988:	ldr	x0, [x0, #8]
   1e98c:	str	x0, [sp, #24]
   1e990:	ldr	x0, [sp, #8]
   1e994:	ldr	x1, [sp, #32]
   1e998:	str	x1, [x0, #8]
   1e99c:	ldr	x0, [sp]
   1e9a0:	ldr	x1, [sp, #8]
   1e9a4:	str	x1, [x0]
   1e9a8:	ldr	x0, [sp, #8]
   1e9ac:	ldr	x1, [x0, #16]
   1e9b0:	ldr	x0, [sp]
   1e9b4:	str	x1, [x0, #16]
   1e9b8:	ldr	x0, [sp, #8]
   1e9bc:	ldr	x1, [sp]
   1e9c0:	str	x1, [x0, #16]
   1e9c4:	ldr	x0, [sp, #32]
   1e9c8:	cmp	x0, #0x0
   1e9cc:	b.eq	1e9dc <set_program_name@@Base+0x4b8>  // b.none
   1e9d0:	ldr	x0, [sp, #32]
   1e9d4:	ldr	x1, [sp, #8]
   1e9d8:	str	x1, [x0, #16]
   1e9dc:	ldr	x0, [sp, #40]
   1e9e0:	cmp	x0, #0x0
   1e9e4:	b.eq	1e9f8 <set_program_name@@Base+0x4d4>  // b.none
   1e9e8:	ldr	x0, [sp, #40]
   1e9ec:	ldr	x0, [x0, #32]
   1e9f0:	add	x0, x0, #0x1
   1e9f4:	b	1e9fc <set_program_name@@Base+0x4d8>
   1e9f8:	mov	x0, #0x1                   	// #1
   1e9fc:	ldr	x1, [sp, #32]
   1ea00:	cmp	x1, #0x0
   1ea04:	b.eq	1ea14 <set_program_name@@Base+0x4f0>  // b.none
   1ea08:	ldr	x1, [sp, #32]
   1ea0c:	ldr	x1, [x1, #32]
   1ea10:	b	1ea18 <set_program_name@@Base+0x4f4>
   1ea14:	mov	x1, #0x0                   	// #0
   1ea18:	add	x1, x0, x1
   1ea1c:	ldr	x0, [sp, #8]
   1ea20:	str	x1, [x0, #32]
   1ea24:	ldr	x0, [sp, #8]
   1ea28:	ldr	x1, [x0, #32]
   1ea2c:	ldr	x0, [sp, #24]
   1ea30:	cmp	x0, #0x0
   1ea34:	b.eq	1ea44 <set_program_name@@Base+0x520>  // b.none
   1ea38:	ldr	x0, [sp, #24]
   1ea3c:	ldr	x0, [x0, #32]
   1ea40:	b	1ea48 <set_program_name@@Base+0x524>
   1ea44:	mov	x0, #0x0                   	// #0
   1ea48:	add	x0, x0, x1
   1ea4c:	add	x1, x0, #0x1
   1ea50:	ldr	x0, [sp]
   1ea54:	str	x1, [x0, #32]
   1ea58:	ldr	x0, [sp]
   1ea5c:	add	sp, sp, #0x30
   1ea60:	ret
   1ea64:	sub	sp, sp, #0x30
   1ea68:	str	x0, [sp, #8]
   1ea6c:	str	x1, [sp]
   1ea70:	ldr	x0, [sp, #8]
   1ea74:	ldr	x0, [x0]
   1ea78:	str	x0, [sp, #40]
   1ea7c:	ldr	x0, [sp, #8]
   1ea80:	ldr	x0, [x0, #8]
   1ea84:	str	x0, [sp, #32]
   1ea88:	ldr	x0, [sp]
   1ea8c:	ldr	x0, [x0, #8]
   1ea90:	str	x0, [sp, #24]
   1ea94:	ldr	x0, [sp]
   1ea98:	ldr	x1, [sp, #32]
   1ea9c:	str	x1, [x0]
   1eaa0:	ldr	x0, [sp, #8]
   1eaa4:	ldr	x1, [sp]
   1eaa8:	str	x1, [x0, #8]
   1eaac:	ldr	x0, [sp]
   1eab0:	ldr	x1, [x0, #16]
   1eab4:	ldr	x0, [sp, #8]
   1eab8:	str	x1, [x0, #16]
   1eabc:	ldr	x0, [sp]
   1eac0:	ldr	x1, [sp, #8]
   1eac4:	str	x1, [x0, #16]
   1eac8:	ldr	x0, [sp, #32]
   1eacc:	cmp	x0, #0x0
   1ead0:	b.eq	1eae0 <set_program_name@@Base+0x5bc>  // b.none
   1ead4:	ldr	x0, [sp, #32]
   1ead8:	ldr	x1, [sp]
   1eadc:	str	x1, [x0, #16]
   1eae0:	ldr	x0, [sp, #32]
   1eae4:	cmp	x0, #0x0
   1eae8:	b.eq	1eafc <set_program_name@@Base+0x5d8>  // b.none
   1eaec:	ldr	x0, [sp, #32]
   1eaf0:	ldr	x0, [x0, #32]
   1eaf4:	add	x0, x0, #0x1
   1eaf8:	b	1eb00 <set_program_name@@Base+0x5dc>
   1eafc:	mov	x0, #0x1                   	// #1
   1eb00:	ldr	x1, [sp, #24]
   1eb04:	cmp	x1, #0x0
   1eb08:	b.eq	1eb18 <set_program_name@@Base+0x5f4>  // b.none
   1eb0c:	ldr	x1, [sp, #24]
   1eb10:	ldr	x1, [x1, #32]
   1eb14:	b	1eb1c <set_program_name@@Base+0x5f8>
   1eb18:	mov	x1, #0x0                   	// #0
   1eb1c:	add	x1, x0, x1
   1eb20:	ldr	x0, [sp]
   1eb24:	str	x1, [x0, #32]
   1eb28:	ldr	x0, [sp, #40]
   1eb2c:	cmp	x0, #0x0
   1eb30:	b.eq	1eb44 <set_program_name@@Base+0x620>  // b.none
   1eb34:	ldr	x0, [sp, #40]
   1eb38:	ldr	x0, [x0, #32]
   1eb3c:	add	x0, x0, #0x1
   1eb40:	b	1eb48 <set_program_name@@Base+0x624>
   1eb44:	mov	x0, #0x1                   	// #1
   1eb48:	ldr	x1, [sp]
   1eb4c:	ldr	x1, [x1, #32]
   1eb50:	add	x1, x0, x1
   1eb54:	ldr	x0, [sp, #8]
   1eb58:	str	x1, [x0, #32]
   1eb5c:	ldr	x0, [sp, #8]
   1eb60:	add	sp, sp, #0x30
   1eb64:	ret
   1eb68:	stp	x29, x30, [sp, #-80]!
   1eb6c:	mov	x29, sp
   1eb70:	str	x0, [sp, #40]
   1eb74:	str	x1, [sp, #32]
   1eb78:	str	x2, [sp, #24]
   1eb7c:	ldr	x0, [sp, #24]
   1eb80:	ldr	w0, [x0, #24]
   1eb84:	cmp	w0, #0x0
   1eb88:	b.ne	1eb9c <set_program_name@@Base+0x678>  // b.any
   1eb8c:	ldr	x0, [sp, #32]
   1eb90:	mov	w1, #0x1                   	// #1
   1eb94:	str	w1, [x0, #24]
   1eb98:	b	1edec <set_program_name@@Base+0x8c8>
   1eb9c:	ldr	x0, [sp, #24]
   1eba0:	ldr	x0, [x0, #16]
   1eba4:	str	x0, [sp, #56]
   1eba8:	ldr	x0, [sp, #56]
   1ebac:	ldr	x0, [x0]
   1ebb0:	ldr	x1, [sp, #24]
   1ebb4:	cmp	x1, x0
   1ebb8:	b.ne	1ebcc <set_program_name@@Base+0x6a8>  // b.any
   1ebbc:	ldr	x0, [sp, #56]
   1ebc0:	ldr	x0, [x0, #8]
   1ebc4:	str	x0, [sp, #72]
   1ebc8:	b	1ebf4 <set_program_name@@Base+0x6d0>
   1ebcc:	ldr	x0, [sp, #56]
   1ebd0:	ldr	x0, [x0, #8]
   1ebd4:	ldr	x1, [sp, #24]
   1ebd8:	cmp	x1, x0
   1ebdc:	b.ne	1ebf0 <set_program_name@@Base+0x6cc>  // b.any
   1ebe0:	ldr	x0, [sp, #56]
   1ebe4:	ldr	x0, [x0]
   1ebe8:	str	x0, [sp, #72]
   1ebec:	b	1ebf4 <set_program_name@@Base+0x6d0>
   1ebf0:	bl	af70 <abort@plt>
   1ebf4:	ldr	x0, [sp, #72]
   1ebf8:	cmp	x0, #0x0
   1ebfc:	b.eq	1ec58 <set_program_name@@Base+0x734>  // b.none
   1ec00:	ldr	x0, [sp, #72]
   1ec04:	ldr	w0, [x0, #24]
   1ec08:	cmp	w0, #0x1
   1ec0c:	b.ne	1ec58 <set_program_name@@Base+0x734>  // b.any
   1ec10:	ldr	x0, [sp, #32]
   1ec14:	mov	w1, #0x1                   	// #1
   1ec18:	str	w1, [x0, #24]
   1ec1c:	ldr	x0, [sp, #72]
   1ec20:	str	wzr, [x0, #24]
   1ec24:	ldr	x0, [sp, #72]
   1ec28:	ldr	w1, [x0, #24]
   1ec2c:	ldr	x0, [sp, #24]
   1ec30:	str	w1, [x0, #24]
   1ec34:	ldr	x0, [sp, #56]
   1ec38:	str	x0, [sp, #32]
   1ec3c:	ldr	x0, [sp, #32]
   1ec40:	ldr	x0, [x0, #16]
   1ec44:	str	x0, [sp, #24]
   1ec48:	ldr	x0, [sp, #24]
   1ec4c:	cmp	x0, #0x0
   1ec50:	b.eq	1ede4 <set_program_name@@Base+0x8c0>  // b.none
   1ec54:	b	1eb7c <set_program_name@@Base+0x658>
   1ec58:	ldr	x0, [sp, #56]
   1ec5c:	ldr	x0, [x0, #16]
   1ec60:	cmp	x0, #0x0
   1ec64:	b.ne	1ec78 <set_program_name@@Base+0x754>  // b.any
   1ec68:	ldr	x0, [sp, #40]
   1ec6c:	add	x0, x0, #0x28
   1ec70:	str	x0, [sp, #64]
   1ec74:	b	1ecd0 <set_program_name@@Base+0x7ac>
   1ec78:	ldr	x0, [sp, #56]
   1ec7c:	ldr	x0, [x0, #16]
   1ec80:	ldr	x0, [x0]
   1ec84:	ldr	x1, [sp, #56]
   1ec88:	cmp	x1, x0
   1ec8c:	b.ne	1eca0 <set_program_name@@Base+0x77c>  // b.any
   1ec90:	ldr	x0, [sp, #56]
   1ec94:	ldr	x0, [x0, #16]
   1ec98:	str	x0, [sp, #64]
   1ec9c:	b	1ecd0 <set_program_name@@Base+0x7ac>
   1eca0:	ldr	x0, [sp, #56]
   1eca4:	ldr	x0, [x0, #16]
   1eca8:	ldr	x0, [x0, #8]
   1ecac:	ldr	x1, [sp, #56]
   1ecb0:	cmp	x1, x0
   1ecb4:	b.ne	1eccc <set_program_name@@Base+0x7a8>  // b.any
   1ecb8:	ldr	x0, [sp, #56]
   1ecbc:	ldr	x0, [x0, #16]
   1ecc0:	add	x0, x0, #0x8
   1ecc4:	str	x0, [sp, #64]
   1ecc8:	b	1ecd0 <set_program_name@@Base+0x7ac>
   1eccc:	bl	af70 <abort@plt>
   1ecd0:	ldr	x0, [sp, #56]
   1ecd4:	ldr	x0, [x0]
   1ecd8:	ldr	x1, [sp, #24]
   1ecdc:	cmp	x1, x0
   1ece0:	b.ne	1ed64 <set_program_name@@Base+0x840>  // b.any
   1ece4:	ldr	x0, [sp, #24]
   1ece8:	ldr	x0, [x0, #8]
   1ecec:	ldr	x1, [sp, #32]
   1ecf0:	cmp	x1, x0
   1ecf4:	b.ne	1ed24 <set_program_name@@Base+0x800>  // b.any
   1ecf8:	ldr	x1, [sp, #32]
   1ecfc:	ldr	x0, [sp, #24]
   1ed00:	bl	1e960 <set_program_name@@Base+0x43c>
   1ed04:	mov	x1, x0
   1ed08:	ldr	x0, [sp, #56]
   1ed0c:	str	x1, [x0]
   1ed10:	ldr	x0, [sp, #24]
   1ed14:	str	x0, [sp, #32]
   1ed18:	ldr	x0, [sp, #56]
   1ed1c:	ldr	x0, [x0]
   1ed20:	str	x0, [sp, #24]
   1ed24:	ldr	x1, [sp, #56]
   1ed28:	ldr	x0, [sp, #24]
   1ed2c:	bl	1ea64 <set_program_name@@Base+0x540>
   1ed30:	mov	x1, x0
   1ed34:	ldr	x0, [sp, #64]
   1ed38:	str	x1, [x0]
   1ed3c:	ldr	x0, [sp, #24]
   1ed40:	str	wzr, [x0, #24]
   1ed44:	ldr	x0, [sp, #56]
   1ed48:	mov	w1, #0x1                   	// #1
   1ed4c:	str	w1, [x0, #24]
   1ed50:	ldr	x0, [sp, #56]
   1ed54:	ldr	w1, [x0, #24]
   1ed58:	ldr	x0, [sp, #32]
   1ed5c:	str	w1, [x0, #24]
   1ed60:	b	1edec <set_program_name@@Base+0x8c8>
   1ed64:	ldr	x0, [sp, #24]
   1ed68:	ldr	x0, [x0]
   1ed6c:	ldr	x1, [sp, #32]
   1ed70:	cmp	x1, x0
   1ed74:	b.ne	1eda4 <set_program_name@@Base+0x880>  // b.any
   1ed78:	ldr	x1, [sp, #24]
   1ed7c:	ldr	x0, [sp, #32]
   1ed80:	bl	1ea64 <set_program_name@@Base+0x540>
   1ed84:	mov	x1, x0
   1ed88:	ldr	x0, [sp, #56]
   1ed8c:	str	x1, [x0, #8]
   1ed90:	ldr	x0, [sp, #24]
   1ed94:	str	x0, [sp, #32]
   1ed98:	ldr	x0, [sp, #56]
   1ed9c:	ldr	x0, [x0, #8]
   1eda0:	str	x0, [sp, #24]
   1eda4:	ldr	x1, [sp, #24]
   1eda8:	ldr	x0, [sp, #56]
   1edac:	bl	1e960 <set_program_name@@Base+0x43c>
   1edb0:	mov	x1, x0
   1edb4:	ldr	x0, [sp, #64]
   1edb8:	str	x1, [x0]
   1edbc:	ldr	x0, [sp, #24]
   1edc0:	str	wzr, [x0, #24]
   1edc4:	ldr	x0, [sp, #56]
   1edc8:	mov	w1, #0x1                   	// #1
   1edcc:	str	w1, [x0, #24]
   1edd0:	ldr	x0, [sp, #56]
   1edd4:	ldr	w1, [x0, #24]
   1edd8:	ldr	x0, [sp, #32]
   1eddc:	str	w1, [x0, #24]
   1ede0:	b	1edec <set_program_name@@Base+0x8c8>
   1ede4:	ldr	x0, [sp, #32]
   1ede8:	str	wzr, [x0, #24]
   1edec:	ldp	x29, x30, [sp], #80
   1edf0:	ret
   1edf4:	stp	x29, x30, [sp, #-80]!
   1edf8:	mov	x29, sp
   1edfc:	str	x0, [sp, #40]
   1ee00:	str	x1, [sp, #32]
   1ee04:	str	x2, [sp, #24]
   1ee08:	ldr	x0, [sp, #24]
   1ee0c:	ldr	x0, [x0, #16]
   1ee10:	cmp	x0, #0x0
   1ee14:	b.ne	1ee28 <set_program_name@@Base+0x904>  // b.any
   1ee18:	ldr	x0, [sp, #40]
   1ee1c:	add	x0, x0, #0x28
   1ee20:	str	x0, [sp, #72]
   1ee24:	b	1ee80 <set_program_name@@Base+0x95c>
   1ee28:	ldr	x0, [sp, #24]
   1ee2c:	ldr	x0, [x0, #16]
   1ee30:	ldr	x0, [x0]
   1ee34:	ldr	x1, [sp, #24]
   1ee38:	cmp	x1, x0
   1ee3c:	b.ne	1ee50 <set_program_name@@Base+0x92c>  // b.any
   1ee40:	ldr	x0, [sp, #24]
   1ee44:	ldr	x0, [x0, #16]
   1ee48:	str	x0, [sp, #72]
   1ee4c:	b	1ee80 <set_program_name@@Base+0x95c>
   1ee50:	ldr	x0, [sp, #24]
   1ee54:	ldr	x0, [x0, #16]
   1ee58:	ldr	x0, [x0, #8]
   1ee5c:	ldr	x1, [sp, #24]
   1ee60:	cmp	x1, x0
   1ee64:	b.ne	1ee7c <set_program_name@@Base+0x958>  // b.any
   1ee68:	ldr	x0, [sp, #24]
   1ee6c:	ldr	x0, [x0, #16]
   1ee70:	add	x0, x0, #0x8
   1ee74:	str	x0, [sp, #72]
   1ee78:	b	1ee80 <set_program_name@@Base+0x95c>
   1ee7c:	bl	af70 <abort@plt>
   1ee80:	ldr	x0, [sp, #24]
   1ee84:	ldr	x0, [x0]
   1ee88:	ldr	x1, [sp, #32]
   1ee8c:	cmp	x1, x0
   1ee90:	b.ne	1f034 <set_program_name@@Base+0xb10>  // b.any
   1ee94:	ldr	x0, [sp, #24]
   1ee98:	ldr	x0, [x0, #8]
   1ee9c:	str	x0, [sp, #64]
   1eea0:	ldr	x0, [sp, #64]
   1eea4:	ldr	w0, [x0, #24]
   1eea8:	cmp	w0, #0x1
   1eeac:	b.ne	1eef0 <set_program_name@@Base+0x9cc>  // b.any
   1eeb0:	ldr	x1, [sp, #64]
   1eeb4:	ldr	x0, [sp, #24]
   1eeb8:	bl	1e960 <set_program_name@@Base+0x43c>
   1eebc:	mov	x1, x0
   1eec0:	ldr	x0, [sp, #72]
   1eec4:	str	x1, [x0]
   1eec8:	ldr	x0, [sp, #24]
   1eecc:	mov	w1, #0x1                   	// #1
   1eed0:	str	w1, [x0, #24]
   1eed4:	ldr	x0, [sp, #64]
   1eed8:	str	wzr, [x0, #24]
   1eedc:	ldr	x0, [sp, #64]
   1eee0:	str	x0, [sp, #72]
   1eee4:	ldr	x0, [sp, #24]
   1eee8:	ldr	x0, [x0, #8]
   1eeec:	str	x0, [sp, #64]
   1eef0:	ldr	x0, [sp, #64]
   1eef4:	ldr	x0, [x0, #8]
   1eef8:	cmp	x0, #0x0
   1eefc:	b.eq	1ef54 <set_program_name@@Base+0xa30>  // b.none
   1ef00:	ldr	x0, [sp, #64]
   1ef04:	ldr	x0, [x0, #8]
   1ef08:	ldr	w0, [x0, #24]
   1ef0c:	cmp	w0, #0x1
   1ef10:	b.ne	1ef54 <set_program_name@@Base+0xa30>  // b.any
   1ef14:	ldr	x1, [sp, #64]
   1ef18:	ldr	x0, [sp, #24]
   1ef1c:	bl	1e960 <set_program_name@@Base+0x43c>
   1ef20:	mov	x1, x0
   1ef24:	ldr	x0, [sp, #72]
   1ef28:	str	x1, [x0]
   1ef2c:	ldr	x0, [sp, #24]
   1ef30:	ldr	w1, [x0, #24]
   1ef34:	ldr	x0, [sp, #64]
   1ef38:	str	w1, [x0, #24]
   1ef3c:	ldr	x0, [sp, #24]
   1ef40:	str	wzr, [x0, #24]
   1ef44:	ldr	x0, [sp, #64]
   1ef48:	ldr	x0, [x0, #8]
   1ef4c:	str	wzr, [x0, #24]
   1ef50:	b	1f214 <set_program_name@@Base+0xcf0>
   1ef54:	ldr	x0, [sp, #64]
   1ef58:	ldr	x0, [x0]
   1ef5c:	cmp	x0, #0x0
   1ef60:	b.eq	1eff4 <set_program_name@@Base+0xad0>  // b.none
   1ef64:	ldr	x0, [sp, #64]
   1ef68:	ldr	x0, [x0]
   1ef6c:	ldr	w0, [x0, #24]
   1ef70:	cmp	w0, #0x1
   1ef74:	b.ne	1eff4 <set_program_name@@Base+0xad0>  // b.any
   1ef78:	ldr	x0, [sp, #64]
   1ef7c:	ldr	x0, [x0]
   1ef80:	ldr	x1, [sp, #64]
   1ef84:	bl	1ea64 <set_program_name@@Base+0x540>
   1ef88:	mov	x1, x0
   1ef8c:	ldr	x0, [sp, #24]
   1ef90:	str	x1, [x0, #8]
   1ef94:	ldr	x0, [sp, #64]
   1ef98:	mov	w1, #0x1                   	// #1
   1ef9c:	str	w1, [x0, #24]
   1efa0:	ldr	x0, [sp, #24]
   1efa4:	ldr	x0, [x0, #8]
   1efa8:	str	x0, [sp, #64]
   1efac:	ldr	x0, [sp, #64]
   1efb0:	str	wzr, [x0, #24]
   1efb4:	ldr	x1, [sp, #64]
   1efb8:	ldr	x0, [sp, #24]
   1efbc:	bl	1e960 <set_program_name@@Base+0x43c>
   1efc0:	mov	x1, x0
   1efc4:	ldr	x0, [sp, #72]
   1efc8:	str	x1, [x0]
   1efcc:	ldr	x0, [sp, #24]
   1efd0:	ldr	w1, [x0, #24]
   1efd4:	ldr	x0, [sp, #64]
   1efd8:	str	w1, [x0, #24]
   1efdc:	ldr	x0, [sp, #24]
   1efe0:	str	wzr, [x0, #24]
   1efe4:	ldr	x0, [sp, #64]
   1efe8:	ldr	x0, [x0, #8]
   1efec:	str	wzr, [x0, #24]
   1eff0:	b	1f214 <set_program_name@@Base+0xcf0>
   1eff4:	ldr	x0, [sp, #24]
   1eff8:	ldr	w0, [x0, #24]
   1effc:	cmp	w0, #0x0
   1f000:	b.ne	1f01c <set_program_name@@Base+0xaf8>  // b.any
   1f004:	ldr	x0, [sp, #64]
   1f008:	mov	w1, #0x1                   	// #1
   1f00c:	str	w1, [x0, #24]
   1f010:	ldr	x0, [sp, #24]
   1f014:	str	x0, [sp, #32]
   1f018:	b	1f1f4 <set_program_name@@Base+0xcd0>
   1f01c:	ldr	x0, [sp, #24]
   1f020:	str	wzr, [x0, #24]
   1f024:	ldr	x0, [sp, #64]
   1f028:	mov	w1, #0x1                   	// #1
   1f02c:	str	w1, [x0, #24]
   1f030:	b	1f214 <set_program_name@@Base+0xcf0>
   1f034:	ldr	x0, [sp, #24]
   1f038:	ldr	x0, [x0, #8]
   1f03c:	ldr	x1, [sp, #32]
   1f040:	cmp	x1, x0
   1f044:	b.ne	1f1f0 <set_program_name@@Base+0xccc>  // b.any
   1f048:	ldr	x0, [sp, #24]
   1f04c:	ldr	x0, [x0]
   1f050:	str	x0, [sp, #56]
   1f054:	ldr	x0, [sp, #56]
   1f058:	ldr	w0, [x0, #24]
   1f05c:	cmp	w0, #0x1
   1f060:	b.ne	1f0a8 <set_program_name@@Base+0xb84>  // b.any
   1f064:	ldr	x1, [sp, #24]
   1f068:	ldr	x0, [sp, #56]
   1f06c:	bl	1ea64 <set_program_name@@Base+0x540>
   1f070:	mov	x1, x0
   1f074:	ldr	x0, [sp, #72]
   1f078:	str	x1, [x0]
   1f07c:	ldr	x0, [sp, #24]
   1f080:	mov	w1, #0x1                   	// #1
   1f084:	str	w1, [x0, #24]
   1f088:	ldr	x0, [sp, #56]
   1f08c:	str	wzr, [x0, #24]
   1f090:	ldr	x0, [sp, #56]
   1f094:	add	x0, x0, #0x8
   1f098:	str	x0, [sp, #72]
   1f09c:	ldr	x0, [sp, #24]
   1f0a0:	ldr	x0, [x0]
   1f0a4:	str	x0, [sp, #56]
   1f0a8:	ldr	x0, [sp, #56]
   1f0ac:	ldr	x0, [x0]
   1f0b0:	cmp	x0, #0x0
   1f0b4:	b.eq	1f10c <set_program_name@@Base+0xbe8>  // b.none
   1f0b8:	ldr	x0, [sp, #56]
   1f0bc:	ldr	x0, [x0]
   1f0c0:	ldr	w0, [x0, #24]
   1f0c4:	cmp	w0, #0x1
   1f0c8:	b.ne	1f10c <set_program_name@@Base+0xbe8>  // b.any
   1f0cc:	ldr	x1, [sp, #24]
   1f0d0:	ldr	x0, [sp, #56]
   1f0d4:	bl	1ea64 <set_program_name@@Base+0x540>
   1f0d8:	mov	x1, x0
   1f0dc:	ldr	x0, [sp, #72]
   1f0e0:	str	x1, [x0]
   1f0e4:	ldr	x0, [sp, #24]
   1f0e8:	ldr	w1, [x0, #24]
   1f0ec:	ldr	x0, [sp, #56]
   1f0f0:	str	w1, [x0, #24]
   1f0f4:	ldr	x0, [sp, #24]
   1f0f8:	str	wzr, [x0, #24]
   1f0fc:	ldr	x0, [sp, #56]
   1f100:	ldr	x0, [x0]
   1f104:	str	wzr, [x0, #24]
   1f108:	b	1f214 <set_program_name@@Base+0xcf0>
   1f10c:	ldr	x0, [sp, #56]
   1f110:	ldr	x0, [x0, #8]
   1f114:	cmp	x0, #0x0
   1f118:	b.eq	1f1b0 <set_program_name@@Base+0xc8c>  // b.none
   1f11c:	ldr	x0, [sp, #56]
   1f120:	ldr	x0, [x0, #8]
   1f124:	ldr	w0, [x0, #24]
   1f128:	cmp	w0, #0x1
   1f12c:	b.ne	1f1b0 <set_program_name@@Base+0xc8c>  // b.any
   1f130:	ldr	x0, [sp, #56]
   1f134:	ldr	x0, [x0, #8]
   1f138:	mov	x1, x0
   1f13c:	ldr	x0, [sp, #56]
   1f140:	bl	1e960 <set_program_name@@Base+0x43c>
   1f144:	mov	x1, x0
   1f148:	ldr	x0, [sp, #24]
   1f14c:	str	x1, [x0]
   1f150:	ldr	x0, [sp, #56]
   1f154:	mov	w1, #0x1                   	// #1
   1f158:	str	w1, [x0, #24]
   1f15c:	ldr	x0, [sp, #24]
   1f160:	ldr	x0, [x0]
   1f164:	str	x0, [sp, #56]
   1f168:	ldr	x0, [sp, #56]
   1f16c:	str	wzr, [x0, #24]
   1f170:	ldr	x1, [sp, #24]
   1f174:	ldr	x0, [sp, #56]
   1f178:	bl	1ea64 <set_program_name@@Base+0x540>
   1f17c:	mov	x1, x0
   1f180:	ldr	x0, [sp, #72]
   1f184:	str	x1, [x0]
   1f188:	ldr	x0, [sp, #24]
   1f18c:	ldr	w1, [x0, #24]
   1f190:	ldr	x0, [sp, #56]
   1f194:	str	w1, [x0, #24]
   1f198:	ldr	x0, [sp, #24]
   1f19c:	str	wzr, [x0, #24]
   1f1a0:	ldr	x0, [sp, #56]
   1f1a4:	ldr	x0, [x0]
   1f1a8:	str	wzr, [x0, #24]
   1f1ac:	b	1f214 <set_program_name@@Base+0xcf0>
   1f1b0:	ldr	x0, [sp, #24]
   1f1b4:	ldr	w0, [x0, #24]
   1f1b8:	cmp	w0, #0x0
   1f1bc:	b.ne	1f1d8 <set_program_name@@Base+0xcb4>  // b.any
   1f1c0:	ldr	x0, [sp, #56]
   1f1c4:	mov	w1, #0x1                   	// #1
   1f1c8:	str	w1, [x0, #24]
   1f1cc:	ldr	x0, [sp, #24]
   1f1d0:	str	x0, [sp, #32]
   1f1d4:	b	1f1f4 <set_program_name@@Base+0xcd0>
   1f1d8:	ldr	x0, [sp, #24]
   1f1dc:	str	wzr, [x0, #24]
   1f1e0:	ldr	x0, [sp, #56]
   1f1e4:	mov	w1, #0x1                   	// #1
   1f1e8:	str	w1, [x0, #24]
   1f1ec:	b	1f214 <set_program_name@@Base+0xcf0>
   1f1f0:	bl	af70 <abort@plt>
   1f1f4:	ldr	x0, [sp, #32]
   1f1f8:	ldr	x0, [x0, #16]
   1f1fc:	str	x0, [sp, #24]
   1f200:	ldr	x0, [sp, #24]
   1f204:	cmp	x0, #0x0
   1f208:	b.eq	1f210 <set_program_name@@Base+0xcec>  // b.none
   1f20c:	b	1ee08 <set_program_name@@Base+0x8e4>
   1f210:	nop
   1f214:	ldp	x29, x30, [sp], #80
   1f218:	ret
   1f21c:	stp	x29, x30, [sp, #-112]!
   1f220:	mov	x29, sp
   1f224:	str	x0, [sp, #24]
   1f228:	str	x1, [sp, #16]
   1f22c:	ldr	x0, [sp, #16]
   1f230:	ldr	x0, [x0, #16]
   1f234:	str	x0, [sp, #72]
   1f238:	ldr	x0, [sp, #16]
   1f23c:	ldr	x0, [x0]
   1f240:	cmp	x0, #0x0
   1f244:	b.ne	1f328 <set_program_name@@Base+0xe04>  // b.any
   1f248:	ldr	x0, [sp, #16]
   1f24c:	ldr	x0, [x0, #8]
   1f250:	str	x0, [sp, #32]
   1f254:	ldr	x0, [sp, #32]
   1f258:	cmp	x0, #0x0
   1f25c:	b.eq	1f274 <set_program_name@@Base+0xd50>  // b.none
   1f260:	ldr	x0, [sp, #32]
   1f264:	ldr	x1, [sp, #72]
   1f268:	str	x1, [x0, #16]
   1f26c:	ldr	x0, [sp, #32]
   1f270:	str	wzr, [x0, #24]
   1f274:	ldr	x0, [sp, #72]
   1f278:	cmp	x0, #0x0
   1f27c:	b.ne	1f290 <set_program_name@@Base+0xd6c>  // b.any
   1f280:	ldr	x0, [sp, #24]
   1f284:	ldr	x1, [sp, #32]
   1f288:	str	x1, [x0, #40]
   1f28c:	b	1f5c4 <set_program_name@@Base+0x10a0>
   1f290:	ldr	x0, [sp, #72]
   1f294:	ldr	x0, [x0]
   1f298:	ldr	x1, [sp, #16]
   1f29c:	cmp	x1, x0
   1f2a0:	b.ne	1f2b4 <set_program_name@@Base+0xd90>  // b.any
   1f2a4:	ldr	x0, [sp, #72]
   1f2a8:	ldr	x1, [sp, #32]
   1f2ac:	str	x1, [x0]
   1f2b0:	b	1f2c0 <set_program_name@@Base+0xd9c>
   1f2b4:	ldr	x0, [sp, #72]
   1f2b8:	ldr	x1, [sp, #32]
   1f2bc:	str	x1, [x0, #8]
   1f2c0:	ldr	x0, [sp, #72]
   1f2c4:	str	x0, [sp, #104]
   1f2c8:	b	1f2ec <set_program_name@@Base+0xdc8>
   1f2cc:	ldr	x0, [sp, #104]
   1f2d0:	ldr	x0, [x0, #32]
   1f2d4:	sub	x1, x0, #0x1
   1f2d8:	ldr	x0, [sp, #104]
   1f2dc:	str	x1, [x0, #32]
   1f2e0:	ldr	x0, [sp, #104]
   1f2e4:	ldr	x0, [x0, #16]
   1f2e8:	str	x0, [sp, #104]
   1f2ec:	ldr	x0, [sp, #104]
   1f2f0:	cmp	x0, #0x0
   1f2f4:	b.ne	1f2cc <set_program_name@@Base+0xda8>  // b.any
   1f2f8:	ldr	x0, [sp, #32]
   1f2fc:	cmp	x0, #0x0
   1f300:	b.ne	1f5c4 <set_program_name@@Base+0x10a0>  // b.any
   1f304:	ldr	x0, [sp, #16]
   1f308:	ldr	w0, [x0, #24]
   1f30c:	cmp	w0, #0x0
   1f310:	b.ne	1f5c4 <set_program_name@@Base+0x10a0>  // b.any
   1f314:	ldr	x2, [sp, #72]
   1f318:	ldr	x1, [sp, #32]
   1f31c:	ldr	x0, [sp, #24]
   1f320:	bl	1edf4 <set_program_name@@Base+0x8d0>
   1f324:	b	1f5c4 <set_program_name@@Base+0x10a0>
   1f328:	ldr	x0, [sp, #16]
   1f32c:	ldr	x0, [x0, #8]
   1f330:	cmp	x0, #0x0
   1f334:	b.ne	1f3e0 <set_program_name@@Base+0xebc>  // b.any
   1f338:	ldr	x0, [sp, #16]
   1f33c:	ldr	x0, [x0]
   1f340:	str	x0, [sp, #40]
   1f344:	ldr	x0, [sp, #40]
   1f348:	ldr	x1, [sp, #72]
   1f34c:	str	x1, [x0, #16]
   1f350:	ldr	x0, [sp, #40]
   1f354:	str	wzr, [x0, #24]
   1f358:	ldr	x0, [sp, #72]
   1f35c:	cmp	x0, #0x0
   1f360:	b.ne	1f374 <set_program_name@@Base+0xe50>  // b.any
   1f364:	ldr	x0, [sp, #24]
   1f368:	ldr	x1, [sp, #40]
   1f36c:	str	x1, [x0, #40]
   1f370:	b	1f5c4 <set_program_name@@Base+0x10a0>
   1f374:	ldr	x0, [sp, #72]
   1f378:	ldr	x0, [x0]
   1f37c:	ldr	x1, [sp, #16]
   1f380:	cmp	x1, x0
   1f384:	b.ne	1f398 <set_program_name@@Base+0xe74>  // b.any
   1f388:	ldr	x0, [sp, #72]
   1f38c:	ldr	x1, [sp, #40]
   1f390:	str	x1, [x0]
   1f394:	b	1f3a4 <set_program_name@@Base+0xe80>
   1f398:	ldr	x0, [sp, #72]
   1f39c:	ldr	x1, [sp, #40]
   1f3a0:	str	x1, [x0, #8]
   1f3a4:	ldr	x0, [sp, #72]
   1f3a8:	str	x0, [sp, #96]
   1f3ac:	b	1f3d0 <set_program_name@@Base+0xeac>
   1f3b0:	ldr	x0, [sp, #96]
   1f3b4:	ldr	x0, [x0, #32]
   1f3b8:	sub	x1, x0, #0x1
   1f3bc:	ldr	x0, [sp, #96]
   1f3c0:	str	x1, [x0, #32]
   1f3c4:	ldr	x0, [sp, #96]
   1f3c8:	ldr	x0, [x0, #16]
   1f3cc:	str	x0, [sp, #96]
   1f3d0:	ldr	x0, [sp, #96]
   1f3d4:	cmp	x0, #0x0
   1f3d8:	b.ne	1f3b0 <set_program_name@@Base+0xe8c>  // b.any
   1f3dc:	b	1f5c4 <set_program_name@@Base+0x10a0>
   1f3e0:	ldr	x0, [sp, #16]
   1f3e4:	ldr	x0, [x0]
   1f3e8:	str	x0, [sp, #88]
   1f3ec:	b	1f3fc <set_program_name@@Base+0xed8>
   1f3f0:	ldr	x0, [sp, #88]
   1f3f4:	ldr	x0, [x0, #8]
   1f3f8:	str	x0, [sp, #88]
   1f3fc:	ldr	x0, [sp, #88]
   1f400:	ldr	x0, [x0, #8]
   1f404:	cmp	x0, #0x0
   1f408:	b.ne	1f3f0 <set_program_name@@Base+0xecc>  // b.any
   1f40c:	ldr	x0, [sp, #88]
   1f410:	ldr	x0, [x0, #16]
   1f414:	str	x0, [sp, #64]
   1f418:	ldr	x0, [sp, #88]
   1f41c:	ldr	x0, [x0]
   1f420:	str	x0, [sp, #56]
   1f424:	ldr	x0, [sp, #88]
   1f428:	ldr	w0, [x0, #24]
   1f42c:	str	w0, [sp, #52]
   1f430:	ldr	x1, [sp, #64]
   1f434:	ldr	x0, [sp, #16]
   1f438:	cmp	x1, x0
   1f43c:	b.eq	1f464 <set_program_name@@Base+0xf40>  // b.none
   1f440:	ldr	x0, [sp, #56]
   1f444:	cmp	x0, #0x0
   1f448:	b.eq	1f458 <set_program_name@@Base+0xf34>  // b.none
   1f44c:	ldr	x0, [sp, #56]
   1f450:	ldr	x1, [sp, #64]
   1f454:	str	x1, [x0, #16]
   1f458:	ldr	x0, [sp, #64]
   1f45c:	ldr	x1, [sp, #56]
   1f460:	str	x1, [x0, #8]
   1f464:	ldr	x0, [sp, #64]
   1f468:	str	x0, [sp, #80]
   1f46c:	b	1f490 <set_program_name@@Base+0xf6c>
   1f470:	ldr	x0, [sp, #80]
   1f474:	ldr	x0, [x0, #32]
   1f478:	sub	x1, x0, #0x1
   1f47c:	ldr	x0, [sp, #80]
   1f480:	str	x1, [x0, #32]
   1f484:	ldr	x0, [sp, #80]
   1f488:	ldr	x0, [x0, #16]
   1f48c:	str	x0, [sp, #80]
   1f490:	ldr	x0, [sp, #80]
   1f494:	cmp	x0, #0x0
   1f498:	b.ne	1f470 <set_program_name@@Base+0xf4c>  // b.any
   1f49c:	ldr	x1, [sp, #64]
   1f4a0:	ldr	x0, [sp, #16]
   1f4a4:	cmp	x1, x0
   1f4a8:	b.eq	1f4cc <set_program_name@@Base+0xfa8>  // b.none
   1f4ac:	ldr	x0, [sp, #16]
   1f4b0:	ldr	x1, [x0]
   1f4b4:	ldr	x0, [sp, #88]
   1f4b8:	str	x1, [x0]
   1f4bc:	ldr	x0, [sp, #88]
   1f4c0:	ldr	x0, [x0]
   1f4c4:	ldr	x1, [sp, #88]
   1f4c8:	str	x1, [x0, #16]
   1f4cc:	ldr	x0, [sp, #16]
   1f4d0:	ldr	x1, [x0, #8]
   1f4d4:	ldr	x0, [sp, #88]
   1f4d8:	str	x1, [x0, #8]
   1f4dc:	ldr	x0, [sp, #88]
   1f4e0:	ldr	x0, [x0, #8]
   1f4e4:	ldr	x1, [sp, #88]
   1f4e8:	str	x1, [x0, #16]
   1f4ec:	ldr	x0, [sp, #16]
   1f4f0:	ldr	w1, [x0, #24]
   1f4f4:	ldr	x0, [sp, #88]
   1f4f8:	str	w1, [x0, #24]
   1f4fc:	ldr	x0, [sp, #16]
   1f500:	ldr	x1, [x0, #32]
   1f504:	ldr	x0, [sp, #88]
   1f508:	str	x1, [x0, #32]
   1f50c:	ldr	x0, [sp, #88]
   1f510:	ldr	x1, [sp, #72]
   1f514:	str	x1, [x0, #16]
   1f518:	ldr	x0, [sp, #72]
   1f51c:	cmp	x0, #0x0
   1f520:	b.ne	1f534 <set_program_name@@Base+0x1010>  // b.any
   1f524:	ldr	x0, [sp, #24]
   1f528:	ldr	x1, [sp, #88]
   1f52c:	str	x1, [x0, #40]
   1f530:	b	1f564 <set_program_name@@Base+0x1040>
   1f534:	ldr	x0, [sp, #72]
   1f538:	ldr	x0, [x0]
   1f53c:	ldr	x1, [sp, #16]
   1f540:	cmp	x1, x0
   1f544:	b.ne	1f558 <set_program_name@@Base+0x1034>  // b.any
   1f548:	ldr	x0, [sp, #72]
   1f54c:	ldr	x1, [sp, #88]
   1f550:	str	x1, [x0]
   1f554:	b	1f564 <set_program_name@@Base+0x1040>
   1f558:	ldr	x0, [sp, #72]
   1f55c:	ldr	x1, [sp, #88]
   1f560:	str	x1, [x0, #8]
   1f564:	ldr	w0, [sp, #52]
   1f568:	cmp	w0, #0x0
   1f56c:	b.ne	1f5c4 <set_program_name@@Base+0x10a0>  // b.any
   1f570:	ldr	x0, [sp, #56]
   1f574:	cmp	x0, #0x0
   1f578:	b.eq	1f598 <set_program_name@@Base+0x1074>  // b.none
   1f57c:	ldr	x0, [sp, #56]
   1f580:	ldr	w0, [x0, #24]
   1f584:	cmp	w0, #0x1
   1f588:	b.ne	1f598 <set_program_name@@Base+0x1074>  // b.any
   1f58c:	ldr	x0, [sp, #56]
   1f590:	str	wzr, [x0, #24]
   1f594:	b	1f5c4 <set_program_name@@Base+0x10a0>
   1f598:	ldr	x1, [sp, #64]
   1f59c:	ldr	x0, [sp, #16]
   1f5a0:	cmp	x1, x0
   1f5a4:	b.eq	1f5b0 <set_program_name@@Base+0x108c>  // b.none
   1f5a8:	ldr	x0, [sp, #64]
   1f5ac:	b	1f5b4 <set_program_name@@Base+0x1090>
   1f5b0:	ldr	x0, [sp, #88]
   1f5b4:	mov	x2, x0
   1f5b8:	ldr	x1, [sp, #56]
   1f5bc:	ldr	x0, [sp, #24]
   1f5c0:	bl	1edf4 <set_program_name@@Base+0x8d0>
   1f5c4:	nop
   1f5c8:	ldp	x29, x30, [sp], #112
   1f5cc:	ret
   1f5d0:	stp	x29, x30, [sp, #-64]!
   1f5d4:	mov	x29, sp
   1f5d8:	str	x0, [sp, #24]
   1f5dc:	str	x1, [sp, #16]
   1f5e0:	mov	x0, #0x30                  	// #48
   1f5e4:	bl	ab40 <malloc@plt>
   1f5e8:	str	x0, [sp, #40]
   1f5ec:	ldr	x0, [sp, #40]
   1f5f0:	cmp	x0, #0x0
   1f5f4:	b.ne	1f600 <set_program_name@@Base+0x10dc>  // b.any
   1f5f8:	mov	x0, #0x0                   	// #0
   1f5fc:	b	1f6e8 <set_program_name@@Base+0x11c4>
   1f600:	ldr	x0, [sp, #40]
   1f604:	str	xzr, [x0]
   1f608:	ldr	x0, [sp, #40]
   1f60c:	str	xzr, [x0, #8]
   1f610:	ldr	x0, [sp, #40]
   1f614:	mov	x1, #0x1                   	// #1
   1f618:	str	x1, [x0, #32]
   1f61c:	ldr	x0, [sp, #40]
   1f620:	ldr	x1, [sp, #16]
   1f624:	str	x1, [x0, #40]
   1f628:	ldr	x0, [sp, #24]
   1f62c:	ldr	x0, [x0, #40]
   1f630:	cmp	x0, #0x0
   1f634:	b.ne	1f658 <set_program_name@@Base+0x1134>  // b.any
   1f638:	ldr	x0, [sp, #40]
   1f63c:	str	wzr, [x0, #24]
   1f640:	ldr	x0, [sp, #24]
   1f644:	ldr	x1, [sp, #40]
   1f648:	str	x1, [x0, #40]
   1f64c:	ldr	x0, [sp, #40]
   1f650:	str	xzr, [x0, #16]
   1f654:	b	1f6e4 <set_program_name@@Base+0x11c0>
   1f658:	ldr	x0, [sp, #24]
   1f65c:	ldr	x0, [x0, #40]
   1f660:	str	x0, [sp, #56]
   1f664:	b	1f674 <set_program_name@@Base+0x1150>
   1f668:	ldr	x0, [sp, #56]
   1f66c:	ldr	x0, [x0]
   1f670:	str	x0, [sp, #56]
   1f674:	ldr	x0, [sp, #56]
   1f678:	ldr	x0, [x0]
   1f67c:	cmp	x0, #0x0
   1f680:	b.ne	1f668 <set_program_name@@Base+0x1144>  // b.any
   1f684:	ldr	x0, [sp, #56]
   1f688:	ldr	x1, [sp, #40]
   1f68c:	str	x1, [x0]
   1f690:	ldr	x0, [sp, #40]
   1f694:	ldr	x1, [sp, #56]
   1f698:	str	x1, [x0, #16]
   1f69c:	ldr	x0, [sp, #56]
   1f6a0:	str	x0, [sp, #48]
   1f6a4:	b	1f6c8 <set_program_name@@Base+0x11a4>
   1f6a8:	ldr	x0, [sp, #48]
   1f6ac:	ldr	x0, [x0, #32]
   1f6b0:	add	x1, x0, #0x1
   1f6b4:	ldr	x0, [sp, #48]
   1f6b8:	str	x1, [x0, #32]
   1f6bc:	ldr	x0, [sp, #48]
   1f6c0:	ldr	x0, [x0, #16]
   1f6c4:	str	x0, [sp, #48]
   1f6c8:	ldr	x0, [sp, #48]
   1f6cc:	cmp	x0, #0x0
   1f6d0:	b.ne	1f6a8 <set_program_name@@Base+0x1184>  // b.any
   1f6d4:	ldr	x2, [sp, #56]
   1f6d8:	ldr	x1, [sp, #40]
   1f6dc:	ldr	x0, [sp, #24]
   1f6e0:	bl	1eb68 <set_program_name@@Base+0x644>
   1f6e4:	ldr	x0, [sp, #40]
   1f6e8:	ldp	x29, x30, [sp], #64
   1f6ec:	ret
   1f6f0:	stp	x29, x30, [sp, #-64]!
   1f6f4:	mov	x29, sp
   1f6f8:	str	x0, [sp, #24]
   1f6fc:	str	x1, [sp, #16]
   1f700:	mov	x0, #0x30                  	// #48
   1f704:	bl	ab40 <malloc@plt>
   1f708:	str	x0, [sp, #40]
   1f70c:	ldr	x0, [sp, #40]
   1f710:	cmp	x0, #0x0
   1f714:	b.ne	1f720 <set_program_name@@Base+0x11fc>  // b.any
   1f718:	mov	x0, #0x0                   	// #0
   1f71c:	b	1f808 <set_program_name@@Base+0x12e4>
   1f720:	ldr	x0, [sp, #40]
   1f724:	str	xzr, [x0]
   1f728:	ldr	x0, [sp, #40]
   1f72c:	str	xzr, [x0, #8]
   1f730:	ldr	x0, [sp, #40]
   1f734:	mov	x1, #0x1                   	// #1
   1f738:	str	x1, [x0, #32]
   1f73c:	ldr	x0, [sp, #40]
   1f740:	ldr	x1, [sp, #16]
   1f744:	str	x1, [x0, #40]
   1f748:	ldr	x0, [sp, #24]
   1f74c:	ldr	x0, [x0, #40]
   1f750:	cmp	x0, #0x0
   1f754:	b.ne	1f778 <set_program_name@@Base+0x1254>  // b.any
   1f758:	ldr	x0, [sp, #40]
   1f75c:	str	wzr, [x0, #24]
   1f760:	ldr	x0, [sp, #24]
   1f764:	ldr	x1, [sp, #40]
   1f768:	str	x1, [x0, #40]
   1f76c:	ldr	x0, [sp, #40]
   1f770:	str	xzr, [x0, #16]
   1f774:	b	1f804 <set_program_name@@Base+0x12e0>
   1f778:	ldr	x0, [sp, #24]
   1f77c:	ldr	x0, [x0, #40]
   1f780:	str	x0, [sp, #56]
   1f784:	b	1f794 <set_program_name@@Base+0x1270>
   1f788:	ldr	x0, [sp, #56]
   1f78c:	ldr	x0, [x0, #8]
   1f790:	str	x0, [sp, #56]
   1f794:	ldr	x0, [sp, #56]
   1f798:	ldr	x0, [x0, #8]
   1f79c:	cmp	x0, #0x0
   1f7a0:	b.ne	1f788 <set_program_name@@Base+0x1264>  // b.any
   1f7a4:	ldr	x0, [sp, #56]
   1f7a8:	ldr	x1, [sp, #40]
   1f7ac:	str	x1, [x0, #8]
   1f7b0:	ldr	x0, [sp, #40]
   1f7b4:	ldr	x1, [sp, #56]
   1f7b8:	str	x1, [x0, #16]
   1f7bc:	ldr	x0, [sp, #56]
   1f7c0:	str	x0, [sp, #48]
   1f7c4:	b	1f7e8 <set_program_name@@Base+0x12c4>
   1f7c8:	ldr	x0, [sp, #48]
   1f7cc:	ldr	x0, [x0, #32]
   1f7d0:	add	x1, x0, #0x1
   1f7d4:	ldr	x0, [sp, #48]
   1f7d8:	str	x1, [x0, #32]
   1f7dc:	ldr	x0, [sp, #48]
   1f7e0:	ldr	x0, [x0, #16]
   1f7e4:	str	x0, [sp, #48]
   1f7e8:	ldr	x0, [sp, #48]
   1f7ec:	cmp	x0, #0x0
   1f7f0:	b.ne	1f7c8 <set_program_name@@Base+0x12a4>  // b.any
   1f7f4:	ldr	x2, [sp, #56]
   1f7f8:	ldr	x1, [sp, #40]
   1f7fc:	ldr	x0, [sp, #24]
   1f800:	bl	1eb68 <set_program_name@@Base+0x644>
   1f804:	ldr	x0, [sp, #40]
   1f808:	ldp	x29, x30, [sp], #64
   1f80c:	ret
   1f810:	stp	x29, x30, [sp, #-64]!
   1f814:	mov	x29, sp
   1f818:	str	x0, [sp, #40]
   1f81c:	str	x1, [sp, #32]
   1f820:	str	x2, [sp, #24]
   1f824:	mov	x0, #0x30                  	// #48
   1f828:	bl	ab40 <malloc@plt>
   1f82c:	str	x0, [sp, #48]
   1f830:	ldr	x0, [sp, #48]
   1f834:	cmp	x0, #0x0
   1f838:	b.ne	1f844 <set_program_name@@Base+0x1320>  // b.any
   1f83c:	mov	x0, #0x0                   	// #0
   1f840:	b	1f91c <set_program_name@@Base+0x13f8>
   1f844:	ldr	x0, [sp, #48]
   1f848:	str	xzr, [x0]
   1f84c:	ldr	x0, [sp, #48]
   1f850:	str	xzr, [x0, #8]
   1f854:	ldr	x0, [sp, #48]
   1f858:	mov	x1, #0x1                   	// #1
   1f85c:	str	x1, [x0, #32]
   1f860:	ldr	x0, [sp, #48]
   1f864:	ldr	x1, [sp, #24]
   1f868:	str	x1, [x0, #40]
   1f86c:	ldr	x0, [sp, #32]
   1f870:	ldr	x0, [x0]
   1f874:	cmp	x0, #0x0
   1f878:	b.ne	1f88c <set_program_name@@Base+0x1368>  // b.any
   1f87c:	ldr	x0, [sp, #32]
   1f880:	ldr	x1, [sp, #48]
   1f884:	str	x1, [x0]
   1f888:	b	1f8c4 <set_program_name@@Base+0x13a0>
   1f88c:	ldr	x0, [sp, #32]
   1f890:	ldr	x0, [x0]
   1f894:	str	x0, [sp, #32]
   1f898:	b	1f8a8 <set_program_name@@Base+0x1384>
   1f89c:	ldr	x0, [sp, #32]
   1f8a0:	ldr	x0, [x0, #8]
   1f8a4:	str	x0, [sp, #32]
   1f8a8:	ldr	x0, [sp, #32]
   1f8ac:	ldr	x0, [x0, #8]
   1f8b0:	cmp	x0, #0x0
   1f8b4:	b.ne	1f89c <set_program_name@@Base+0x1378>  // b.any
   1f8b8:	ldr	x0, [sp, #32]
   1f8bc:	ldr	x1, [sp, #48]
   1f8c0:	str	x1, [x0, #8]
   1f8c4:	ldr	x0, [sp, #48]
   1f8c8:	ldr	x1, [sp, #32]
   1f8cc:	str	x1, [x0, #16]
   1f8d0:	ldr	x0, [sp, #32]
   1f8d4:	str	x0, [sp, #56]
   1f8d8:	b	1f8fc <set_program_name@@Base+0x13d8>
   1f8dc:	ldr	x0, [sp, #56]
   1f8e0:	ldr	x0, [x0, #32]
   1f8e4:	add	x1, x0, #0x1
   1f8e8:	ldr	x0, [sp, #56]
   1f8ec:	str	x1, [x0, #32]
   1f8f0:	ldr	x0, [sp, #56]
   1f8f4:	ldr	x0, [x0, #16]
   1f8f8:	str	x0, [sp, #56]
   1f8fc:	ldr	x0, [sp, #56]
   1f900:	cmp	x0, #0x0
   1f904:	b.ne	1f8dc <set_program_name@@Base+0x13b8>  // b.any
   1f908:	ldr	x2, [sp, #32]
   1f90c:	ldr	x1, [sp, #48]
   1f910:	ldr	x0, [sp, #40]
   1f914:	bl	1eb68 <set_program_name@@Base+0x644>
   1f918:	ldr	x0, [sp, #48]
   1f91c:	ldp	x29, x30, [sp], #64
   1f920:	ret
   1f924:	stp	x29, x30, [sp, #-64]!
   1f928:	mov	x29, sp
   1f92c:	str	x0, [sp, #40]
   1f930:	str	x1, [sp, #32]
   1f934:	str	x2, [sp, #24]
   1f938:	mov	x0, #0x30                  	// #48
   1f93c:	bl	ab40 <malloc@plt>
   1f940:	str	x0, [sp, #48]
   1f944:	ldr	x0, [sp, #48]
   1f948:	cmp	x0, #0x0
   1f94c:	b.ne	1f958 <set_program_name@@Base+0x1434>  // b.any
   1f950:	mov	x0, #0x0                   	// #0
   1f954:	b	1fa30 <set_program_name@@Base+0x150c>
   1f958:	ldr	x0, [sp, #48]
   1f95c:	str	xzr, [x0]
   1f960:	ldr	x0, [sp, #48]
   1f964:	str	xzr, [x0, #8]
   1f968:	ldr	x0, [sp, #48]
   1f96c:	mov	x1, #0x1                   	// #1
   1f970:	str	x1, [x0, #32]
   1f974:	ldr	x0, [sp, #48]
   1f978:	ldr	x1, [sp, #24]
   1f97c:	str	x1, [x0, #40]
   1f980:	ldr	x0, [sp, #32]
   1f984:	ldr	x0, [x0, #8]
   1f988:	cmp	x0, #0x0
   1f98c:	b.ne	1f9a0 <set_program_name@@Base+0x147c>  // b.any
   1f990:	ldr	x0, [sp, #32]
   1f994:	ldr	x1, [sp, #48]
   1f998:	str	x1, [x0, #8]
   1f99c:	b	1f9d8 <set_program_name@@Base+0x14b4>
   1f9a0:	ldr	x0, [sp, #32]
   1f9a4:	ldr	x0, [x0, #8]
   1f9a8:	str	x0, [sp, #32]
   1f9ac:	b	1f9bc <set_program_name@@Base+0x1498>
   1f9b0:	ldr	x0, [sp, #32]
   1f9b4:	ldr	x0, [x0]
   1f9b8:	str	x0, [sp, #32]
   1f9bc:	ldr	x0, [sp, #32]
   1f9c0:	ldr	x0, [x0]
   1f9c4:	cmp	x0, #0x0
   1f9c8:	b.ne	1f9b0 <set_program_name@@Base+0x148c>  // b.any
   1f9cc:	ldr	x0, [sp, #32]
   1f9d0:	ldr	x1, [sp, #48]
   1f9d4:	str	x1, [x0]
   1f9d8:	ldr	x0, [sp, #48]
   1f9dc:	ldr	x1, [sp, #32]
   1f9e0:	str	x1, [x0, #16]
   1f9e4:	ldr	x0, [sp, #32]
   1f9e8:	str	x0, [sp, #56]
   1f9ec:	b	1fa10 <set_program_name@@Base+0x14ec>
   1f9f0:	ldr	x0, [sp, #56]
   1f9f4:	ldr	x0, [x0, #32]
   1f9f8:	add	x1, x0, #0x1
   1f9fc:	ldr	x0, [sp, #56]
   1fa00:	str	x1, [x0, #32]
   1fa04:	ldr	x0, [sp, #56]
   1fa08:	ldr	x0, [x0, #16]
   1fa0c:	str	x0, [sp, #56]
   1fa10:	ldr	x0, [sp, #56]
   1fa14:	cmp	x0, #0x0
   1fa18:	b.ne	1f9f0 <set_program_name@@Base+0x14cc>  // b.any
   1fa1c:	ldr	x2, [sp, #32]
   1fa20:	ldr	x1, [sp, #48]
   1fa24:	ldr	x0, [sp, #40]
   1fa28:	bl	1eb68 <set_program_name@@Base+0x644>
   1fa2c:	ldr	x0, [sp, #48]
   1fa30:	ldp	x29, x30, [sp], #64
   1fa34:	ret
   1fa38:	stp	x29, x30, [sp, #-80]!
   1fa3c:	mov	x29, sp
   1fa40:	str	x0, [sp, #56]
   1fa44:	str	x1, [sp, #48]
   1fa48:	str	x2, [sp, #40]
   1fa4c:	str	x3, [sp, #32]
   1fa50:	strb	w4, [sp, #31]
   1fa54:	mov	x0, #0x30                  	// #48
   1fa58:	bl	ab40 <malloc@plt>
   1fa5c:	str	x0, [sp, #72]
   1fa60:	ldr	x0, [sp, #72]
   1fa64:	cmp	x0, #0x0
   1fa68:	b.ne	1fa74 <set_program_name@@Base+0x1550>  // b.any
   1fa6c:	mov	x0, #0x0                   	// #0
   1fa70:	b	1fabc <set_program_name@@Base+0x1598>
   1fa74:	ldr	x0, [sp, #72]
   1fa78:	ldr	x1, [sp, #56]
   1fa7c:	str	x1, [x0]
   1fa80:	ldr	x0, [sp, #72]
   1fa84:	ldr	x1, [sp, #48]
   1fa88:	str	x1, [x0, #8]
   1fa8c:	ldr	x0, [sp, #72]
   1fa90:	ldr	x1, [sp, #40]
   1fa94:	str	x1, [x0, #16]
   1fa98:	ldr	x0, [sp, #72]
   1fa9c:	ldr	x1, [sp, #32]
   1faa0:	str	x1, [x0, #24]
   1faa4:	ldr	x0, [sp, #72]
   1faa8:	ldrb	w1, [sp, #31]
   1faac:	strb	w1, [x0, #32]
   1fab0:	ldr	x0, [sp, #72]
   1fab4:	str	xzr, [x0, #40]
   1fab8:	ldr	x0, [sp, #72]
   1fabc:	ldp	x29, x30, [sp], #80
   1fac0:	ret
   1fac4:	sub	sp, sp, #0x10
   1fac8:	str	x0, [sp, #8]
   1facc:	ldr	x0, [sp, #8]
   1fad0:	ldr	x0, [x0, #40]
   1fad4:	cmp	x0, #0x0
   1fad8:	b.eq	1faec <set_program_name@@Base+0x15c8>  // b.none
   1fadc:	ldr	x0, [sp, #8]
   1fae0:	ldr	x0, [x0, #40]
   1fae4:	ldr	x0, [x0, #32]
   1fae8:	b	1faf0 <set_program_name@@Base+0x15cc>
   1faec:	mov	x0, #0x0                   	// #0
   1faf0:	add	sp, sp, #0x10
   1faf4:	ret
   1faf8:	sub	sp, sp, #0x10
   1fafc:	str	x0, [sp, #8]
   1fb00:	str	x1, [sp]
   1fb04:	ldr	x0, [sp]
   1fb08:	ldr	x0, [x0, #40]
   1fb0c:	add	sp, sp, #0x10
   1fb10:	ret
   1fb14:	sub	sp, sp, #0x20
   1fb18:	str	x0, [sp, #24]
   1fb1c:	str	x1, [sp, #16]
   1fb20:	str	x2, [sp, #8]
   1fb24:	ldr	x0, [sp, #16]
   1fb28:	ldr	x1, [sp, #8]
   1fb2c:	str	x1, [x0, #40]
   1fb30:	mov	w0, #0x0                   	// #0
   1fb34:	add	sp, sp, #0x20
   1fb38:	ret
   1fb3c:	sub	sp, sp, #0x10
   1fb40:	str	x0, [sp, #8]
   1fb44:	str	x1, [sp]
   1fb48:	ldr	x0, [sp]
   1fb4c:	ldr	x0, [x0, #8]
   1fb50:	cmp	x0, #0x0
   1fb54:	b.eq	1fb94 <set_program_name@@Base+0x1670>  // b.none
   1fb58:	ldr	x0, [sp]
   1fb5c:	ldr	x0, [x0, #8]
   1fb60:	str	x0, [sp]
   1fb64:	b	1fb74 <set_program_name@@Base+0x1650>
   1fb68:	ldr	x0, [sp]
   1fb6c:	ldr	x0, [x0]
   1fb70:	str	x0, [sp]
   1fb74:	ldr	x0, [sp]
   1fb78:	ldr	x0, [x0]
   1fb7c:	cmp	x0, #0x0
   1fb80:	b.ne	1fb68 <set_program_name@@Base+0x1644>  // b.any
   1fb84:	b	1fbc8 <set_program_name@@Base+0x16a4>
   1fb88:	ldr	x0, [sp]
   1fb8c:	ldr	x0, [x0, #16]
   1fb90:	str	x0, [sp]
   1fb94:	ldr	x0, [sp]
   1fb98:	ldr	x0, [x0, #16]
   1fb9c:	cmp	x0, #0x0
   1fba0:	b.eq	1fbbc <set_program_name@@Base+0x1698>  // b.none
   1fba4:	ldr	x0, [sp]
   1fba8:	ldr	x0, [x0, #16]
   1fbac:	ldr	x0, [x0, #8]
   1fbb0:	ldr	x1, [sp]
   1fbb4:	cmp	x1, x0
   1fbb8:	b.eq	1fb88 <set_program_name@@Base+0x1664>  // b.none
   1fbbc:	ldr	x0, [sp]
   1fbc0:	ldr	x0, [x0, #16]
   1fbc4:	str	x0, [sp]
   1fbc8:	ldr	x0, [sp]
   1fbcc:	add	sp, sp, #0x10
   1fbd0:	ret
   1fbd4:	sub	sp, sp, #0x10
   1fbd8:	str	x0, [sp, #8]
   1fbdc:	str	x1, [sp]
   1fbe0:	ldr	x0, [sp]
   1fbe4:	ldr	x0, [x0]
   1fbe8:	cmp	x0, #0x0
   1fbec:	b.eq	1fc2c <set_program_name@@Base+0x1708>  // b.none
   1fbf0:	ldr	x0, [sp]
   1fbf4:	ldr	x0, [x0]
   1fbf8:	str	x0, [sp]
   1fbfc:	b	1fc0c <set_program_name@@Base+0x16e8>
   1fc00:	ldr	x0, [sp]
   1fc04:	ldr	x0, [x0, #8]
   1fc08:	str	x0, [sp]
   1fc0c:	ldr	x0, [sp]
   1fc10:	ldr	x0, [x0, #8]
   1fc14:	cmp	x0, #0x0
   1fc18:	b.ne	1fc00 <set_program_name@@Base+0x16dc>  // b.any
   1fc1c:	b	1fc60 <set_program_name@@Base+0x173c>
   1fc20:	ldr	x0, [sp]
   1fc24:	ldr	x0, [x0, #16]
   1fc28:	str	x0, [sp]
   1fc2c:	ldr	x0, [sp]
   1fc30:	ldr	x0, [x0, #16]
   1fc34:	cmp	x0, #0x0
   1fc38:	b.eq	1fc54 <set_program_name@@Base+0x1730>  // b.none
   1fc3c:	ldr	x0, [sp]
   1fc40:	ldr	x0, [x0, #16]
   1fc44:	ldr	x0, [x0]
   1fc48:	ldr	x1, [sp]
   1fc4c:	cmp	x1, x0
   1fc50:	b.eq	1fc20 <set_program_name@@Base+0x16fc>  // b.none
   1fc54:	ldr	x0, [sp]
   1fc58:	ldr	x0, [x0, #16]
   1fc5c:	str	x0, [sp]
   1fc60:	ldr	x0, [sp]
   1fc64:	add	sp, sp, #0x10
   1fc68:	ret
   1fc6c:	sub	sp, sp, #0x20
   1fc70:	str	x0, [sp, #8]
   1fc74:	str	x1, [sp]
   1fc78:	ldr	x0, [sp, #8]
   1fc7c:	str	x0, [sp, #24]
   1fc80:	ldr	x0, [sp, #24]
   1fc84:	ldr	x0, [x0]
   1fc88:	cmp	x0, #0x0
   1fc8c:	b.eq	1fcd0 <set_program_name@@Base+0x17ac>  // b.none
   1fc90:	ldr	x0, [sp, #24]
   1fc94:	ldr	x0, [x0]
   1fc98:	ldr	x0, [x0, #32]
   1fc9c:	ldr	x1, [sp]
   1fca0:	cmp	x1, x0
   1fca4:	b.cs	1fcb8 <set_program_name@@Base+0x1794>  // b.hs, b.nlast
   1fca8:	ldr	x0, [sp, #24]
   1fcac:	ldr	x0, [x0]
   1fcb0:	str	x0, [sp, #24]
   1fcb4:	b	1fcf4 <set_program_name@@Base+0x17d0>
   1fcb8:	ldr	x0, [sp, #24]
   1fcbc:	ldr	x0, [x0]
   1fcc0:	ldr	x0, [x0, #32]
   1fcc4:	ldr	x1, [sp]
   1fcc8:	sub	x0, x1, x0
   1fccc:	str	x0, [sp]
   1fcd0:	ldr	x0, [sp]
   1fcd4:	cmp	x0, #0x0
   1fcd8:	b.eq	1fcf8 <set_program_name@@Base+0x17d4>  // b.none
   1fcdc:	ldr	x0, [sp]
   1fce0:	sub	x0, x0, #0x1
   1fce4:	str	x0, [sp]
   1fce8:	ldr	x0, [sp, #24]
   1fcec:	ldr	x0, [x0, #8]
   1fcf0:	str	x0, [sp, #24]
   1fcf4:	b	1fc80 <set_program_name@@Base+0x175c>
   1fcf8:	nop
   1fcfc:	ldr	x0, [sp, #24]
   1fd00:	add	sp, sp, #0x20
   1fd04:	ret
   1fd08:	stp	x29, x30, [sp, #-48]!
   1fd0c:	mov	x29, sp
   1fd10:	str	x0, [sp, #24]
   1fd14:	str	x1, [sp, #16]
   1fd18:	ldr	x0, [sp, #24]
   1fd1c:	ldr	x0, [x0, #40]
   1fd20:	str	x0, [sp, #40]
   1fd24:	ldr	x0, [sp, #40]
   1fd28:	cmp	x0, #0x0
   1fd2c:	b.eq	1fd44 <set_program_name@@Base+0x1820>  // b.none
   1fd30:	ldr	x0, [sp, #40]
   1fd34:	ldr	x0, [x0, #32]
   1fd38:	ldr	x1, [sp, #16]
   1fd3c:	cmp	x1, x0
   1fd40:	b.cc	1fd48 <set_program_name@@Base+0x1824>  // b.lo, b.ul, b.last
   1fd44:	bl	af70 <abort@plt>
   1fd48:	ldr	x1, [sp, #16]
   1fd4c:	ldr	x0, [sp, #40]
   1fd50:	bl	1fc6c <set_program_name@@Base+0x1748>
   1fd54:	str	x0, [sp, #40]
   1fd58:	ldr	x0, [sp, #40]
   1fd5c:	ldr	x0, [x0, #40]
   1fd60:	ldp	x29, x30, [sp], #48
   1fd64:	ret
   1fd68:	stp	x29, x30, [sp, #-64]!
   1fd6c:	mov	x29, sp
   1fd70:	str	x0, [sp, #40]
   1fd74:	str	x1, [sp, #32]
   1fd78:	str	x2, [sp, #24]
   1fd7c:	ldr	x0, [sp, #40]
   1fd80:	ldr	x0, [x0, #40]
   1fd84:	str	x0, [sp, #56]
   1fd88:	ldr	x0, [sp, #56]
   1fd8c:	cmp	x0, #0x0
   1fd90:	b.eq	1fda8 <set_program_name@@Base+0x1884>  // b.none
   1fd94:	ldr	x0, [sp, #56]
   1fd98:	ldr	x0, [x0, #32]
   1fd9c:	ldr	x1, [sp, #32]
   1fda0:	cmp	x1, x0
   1fda4:	b.cc	1fdac <set_program_name@@Base+0x1888>  // b.lo, b.ul, b.last
   1fda8:	bl	af70 <abort@plt>
   1fdac:	ldr	x1, [sp, #32]
   1fdb0:	ldr	x0, [sp, #56]
   1fdb4:	bl	1fc6c <set_program_name@@Base+0x1748>
   1fdb8:	str	x0, [sp, #56]
   1fdbc:	ldr	x0, [sp, #56]
   1fdc0:	ldr	x1, [sp, #24]
   1fdc4:	str	x1, [x0, #40]
   1fdc8:	ldr	x0, [sp, #56]
   1fdcc:	ldp	x29, x30, [sp], #64
   1fdd0:	ret
   1fdd4:	sub	sp, sp, #0x7a0
   1fdd8:	stp	x29, x30, [sp]
   1fddc:	mov	x29, sp
   1fde0:	str	x0, [sp, #40]
   1fde4:	str	x1, [sp, #32]
   1fde8:	str	x2, [sp, #24]
   1fdec:	str	x3, [sp, #16]
   1fdf0:	ldr	x1, [sp, #32]
   1fdf4:	ldr	x0, [sp, #24]
   1fdf8:	cmp	x1, x0
   1fdfc:	b.hi	1fe30 <set_program_name@@Base+0x190c>  // b.pmore
   1fe00:	ldr	x0, [sp, #40]
   1fe04:	ldr	x0, [x0, #40]
   1fe08:	cmp	x0, #0x0
   1fe0c:	b.eq	1fe20 <set_program_name@@Base+0x18fc>  // b.none
   1fe10:	ldr	x0, [sp, #40]
   1fe14:	ldr	x0, [x0, #40]
   1fe18:	ldr	x0, [x0, #32]
   1fe1c:	b	1fe24 <set_program_name@@Base+0x1900>
   1fe20:	mov	x0, #0x0                   	// #0
   1fe24:	ldr	x1, [sp, #24]
   1fe28:	cmp	x0, x1
   1fe2c:	b.cs	1fe34 <set_program_name@@Base+0x1910>  // b.hs, b.nlast
   1fe30:	bl	af70 <abort@plt>
   1fe34:	ldr	x0, [sp, #40]
   1fe38:	ldr	x0, [x0, #8]
   1fe3c:	str	x0, [sp, #1920]
   1fe40:	ldr	x0, [sp, #40]
   1fe44:	ldr	x0, [x0, #40]
   1fe48:	str	x0, [sp, #1944]
   1fe4c:	add	x0, sp, #0x38
   1fe50:	str	x0, [sp, #1936]
   1fe54:	str	xzr, [sp, #1928]
   1fe58:	ldr	x0, [sp, #32]
   1fe5c:	cmp	x0, #0x0
   1fe60:	b.ne	1ff8c <set_program_name@@Base+0x1a68>  // b.any
   1fe64:	ldr	x0, [sp, #1944]
   1fe68:	cmp	x0, #0x0
   1fe6c:	b.ne	1fe74 <set_program_name@@Base+0x1950>  // b.any
   1fe70:	b	1fea4 <set_program_name@@Base+0x1980>
   1fe74:	ldr	x0, [sp, #1936]
   1fe78:	ldr	x1, [sp, #1944]
   1fe7c:	str	x1, [x0]
   1fe80:	ldr	x0, [sp, #1936]
   1fe84:	str	xzr, [x0, #8]
   1fe88:	ldr	x0, [sp, #1944]
   1fe8c:	ldr	x0, [x0]
   1fe90:	str	x0, [sp, #1944]
   1fe94:	ldr	x0, [sp, #1936]
   1fe98:	add	x0, x0, #0x10
   1fe9c:	str	x0, [sp, #1936]
   1fea0:	b	1fe64 <set_program_name@@Base+0x1940>
   1fea4:	add	x0, sp, #0x38
   1fea8:	ldr	x1, [sp, #1936]
   1feac:	cmp	x1, x0
   1feb0:	b.ne	1febc <set_program_name@@Base+0x1998>  // b.any
   1feb4:	mov	x0, #0x0                   	// #0
   1feb8:	b	20138 <set_program_name@@Base+0x1c14>
   1febc:	ldr	x0, [sp, #1936]
   1fec0:	sub	x0, x0, #0x10
   1fec4:	str	x0, [sp, #1936]
   1fec8:	ldr	x0, [sp, #1936]
   1fecc:	ldr	x0, [x0, #8]
   1fed0:	cmp	x0, #0x0
   1fed4:	b.eq	1fedc <set_program_name@@Base+0x19b8>  // b.none
   1fed8:	b	1fea4 <set_program_name@@Base+0x1980>
   1fedc:	nop
   1fee0:	ldr	x0, [sp, #1936]
   1fee4:	ldr	x0, [x0]
   1fee8:	str	x0, [sp, #1944]
   1feec:	ldr	x0, [sp, #1920]
   1fef0:	cmp	x0, #0x0
   1fef4:	b.eq	1ff18 <set_program_name@@Base+0x19f4>  // b.none
   1fef8:	ldr	x0, [sp, #1944]
   1fefc:	ldr	x0, [x0, #40]
   1ff00:	ldr	x2, [sp, #1920]
   1ff04:	mov	x1, x0
   1ff08:	ldr	x0, [sp, #16]
   1ff0c:	blr	x2
   1ff10:	and	w0, w0, #0xff
   1ff14:	b	1ff30 <set_program_name@@Base+0x1a0c>
   1ff18:	ldr	x0, [sp, #1944]
   1ff1c:	ldr	x0, [x0, #40]
   1ff20:	ldr	x1, [sp, #16]
   1ff24:	cmp	x1, x0
   1ff28:	cset	w0, eq  // eq = none
   1ff2c:	and	w0, w0, #0xff
   1ff30:	cmp	w0, #0x0
   1ff34:	b.eq	1ff40 <set_program_name@@Base+0x1a1c>  // b.none
   1ff38:	ldr	x0, [sp, #1944]
   1ff3c:	b	20138 <set_program_name@@Base+0x1c14>
   1ff40:	ldr	x0, [sp, #1928]
   1ff44:	add	x0, x0, #0x1
   1ff48:	str	x0, [sp, #1928]
   1ff4c:	ldr	x1, [sp, #1928]
   1ff50:	ldr	x0, [sp, #24]
   1ff54:	cmp	x1, x0
   1ff58:	b.cc	1ff64 <set_program_name@@Base+0x1a40>  // b.lo, b.ul, b.last
   1ff5c:	mov	x0, #0x0                   	// #0
   1ff60:	b	20138 <set_program_name@@Base+0x1c14>
   1ff64:	ldr	x0, [sp, #1936]
   1ff68:	mov	x1, #0x1                   	// #1
   1ff6c:	str	x1, [x0, #8]
   1ff70:	ldr	x0, [sp, #1944]
   1ff74:	ldr	x0, [x0, #8]
   1ff78:	str	x0, [sp, #1944]
   1ff7c:	ldr	x0, [sp, #1936]
   1ff80:	add	x0, x0, #0x10
   1ff84:	str	x0, [sp, #1936]
   1ff88:	b	1fe64 <set_program_name@@Base+0x1940>
   1ff8c:	ldr	x0, [sp, #1944]
   1ff90:	cmp	x0, #0x0
   1ff94:	b.eq	1ffdc <set_program_name@@Base+0x1ab8>  // b.none
   1ff98:	ldr	x0, [sp, #1944]
   1ff9c:	ldr	x0, [x0, #32]
   1ffa0:	ldr	x1, [sp, #32]
   1ffa4:	cmp	x1, x0
   1ffa8:	b.cs	1ffe4 <set_program_name@@Base+0x1ac0>  // b.hs, b.nlast
   1ffac:	ldr	x0, [sp, #1936]
   1ffb0:	ldr	x1, [sp, #1944]
   1ffb4:	str	x1, [x0]
   1ffb8:	ldr	x0, [sp, #1936]
   1ffbc:	str	xzr, [x0, #8]
   1ffc0:	ldr	x0, [sp, #1944]
   1ffc4:	ldr	x0, [x0]
   1ffc8:	str	x0, [sp, #1944]
   1ffcc:	ldr	x0, [sp, #1936]
   1ffd0:	add	x0, x0, #0x10
   1ffd4:	str	x0, [sp, #1936]
   1ffd8:	b	1ff8c <set_program_name@@Base+0x1a68>
   1ffdc:	nop
   1ffe0:	b	1ffe8 <set_program_name@@Base+0x1ac4>
   1ffe4:	nop
   1ffe8:	add	x0, sp, #0x38
   1ffec:	ldr	x1, [sp, #1936]
   1fff0:	cmp	x1, x0
   1fff4:	b.ne	20000 <set_program_name@@Base+0x1adc>  // b.any
   1fff8:	mov	x0, #0x0                   	// #0
   1fffc:	b	20138 <set_program_name@@Base+0x1c14>
   20000:	ldr	x0, [sp, #1936]
   20004:	sub	x0, x0, #0x10
   20008:	str	x0, [sp, #1936]
   2000c:	ldr	x0, [sp, #1936]
   20010:	ldr	x0, [x0, #8]
   20014:	cmp	x0, #0x0
   20018:	b.eq	20034 <set_program_name@@Base+0x1b10>  // b.none
   2001c:	ldr	x0, [sp, #1936]
   20020:	ldr	x0, [x0, #8]
   20024:	ldr	x1, [sp, #32]
   20028:	add	x0, x1, x0
   2002c:	str	x0, [sp, #32]
   20030:	b	1ffe8 <set_program_name@@Base+0x1ac4>
   20034:	nop
   20038:	ldr	x0, [sp, #1936]
   2003c:	ldr	x0, [x0]
   20040:	str	x0, [sp, #1944]
   20044:	ldr	x0, [sp, #1944]
   20048:	ldr	x0, [x0]
   2004c:	cmp	x0, #0x0
   20050:	b.eq	20068 <set_program_name@@Base+0x1b44>  // b.none
   20054:	ldr	x0, [sp, #1944]
   20058:	ldr	x0, [x0]
   2005c:	ldr	x0, [x0, #32]
   20060:	add	x0, x0, #0x1
   20064:	b	2006c <set_program_name@@Base+0x1b48>
   20068:	mov	x0, #0x1                   	// #1
   2006c:	str	x0, [sp, #1912]
   20070:	ldr	x1, [sp, #32]
   20074:	ldr	x0, [sp, #1912]
   20078:	cmp	x1, x0
   2007c:	b.cs	200dc <set_program_name@@Base+0x1bb8>  // b.hs, b.nlast
   20080:	ldr	x0, [sp, #1920]
   20084:	cmp	x0, #0x0
   20088:	b.eq	200ac <set_program_name@@Base+0x1b88>  // b.none
   2008c:	ldr	x0, [sp, #1944]
   20090:	ldr	x0, [x0, #40]
   20094:	ldr	x2, [sp, #1920]
   20098:	mov	x1, x0
   2009c:	ldr	x0, [sp, #16]
   200a0:	blr	x2
   200a4:	and	w0, w0, #0xff
   200a8:	b	200c4 <set_program_name@@Base+0x1ba0>
   200ac:	ldr	x0, [sp, #1944]
   200b0:	ldr	x0, [x0, #40]
   200b4:	ldr	x1, [sp, #16]
   200b8:	cmp	x1, x0
   200bc:	cset	w0, eq  // eq = none
   200c0:	and	w0, w0, #0xff
   200c4:	cmp	w0, #0x0
   200c8:	b.eq	200d4 <set_program_name@@Base+0x1bb0>  // b.none
   200cc:	ldr	x0, [sp, #1944]
   200d0:	b	20138 <set_program_name@@Base+0x1c14>
   200d4:	ldr	x0, [sp, #1912]
   200d8:	str	x0, [sp, #32]
   200dc:	ldr	x0, [sp, #1928]
   200e0:	add	x0, x0, #0x1
   200e4:	str	x0, [sp, #1928]
   200e8:	ldr	x1, [sp, #1928]
   200ec:	ldr	x0, [sp, #24]
   200f0:	cmp	x1, x0
   200f4:	b.cc	20100 <set_program_name@@Base+0x1bdc>  // b.lo, b.ul, b.last
   200f8:	mov	x0, #0x0                   	// #0
   200fc:	b	20138 <set_program_name@@Base+0x1c14>
   20100:	ldr	x1, [sp, #32]
   20104:	ldr	x0, [sp, #1912]
   20108:	sub	x0, x1, x0
   2010c:	str	x0, [sp, #32]
   20110:	ldr	x0, [sp, #1936]
   20114:	ldr	x1, [sp, #1912]
   20118:	str	x1, [x0, #8]
   2011c:	ldr	x0, [sp, #1944]
   20120:	ldr	x0, [x0, #8]
   20124:	str	x0, [sp, #1944]
   20128:	ldr	x0, [sp, #1936]
   2012c:	add	x0, x0, #0x10
   20130:	str	x0, [sp, #1936]
   20134:	b	1ff8c <set_program_name@@Base+0x1a68>
   20138:	ldp	x29, x30, [sp]
   2013c:	add	sp, sp, #0x7a0
   20140:	ret
   20144:	sub	sp, sp, #0x7a0
   20148:	stp	x29, x30, [sp]
   2014c:	mov	x29, sp
   20150:	str	x0, [sp, #40]
   20154:	str	x1, [sp, #32]
   20158:	str	x2, [sp, #24]
   2015c:	str	x3, [sp, #16]
   20160:	ldr	x1, [sp, #32]
   20164:	ldr	x0, [sp, #24]
   20168:	cmp	x1, x0
   2016c:	b.hi	201a0 <set_program_name@@Base+0x1c7c>  // b.pmore
   20170:	ldr	x0, [sp, #40]
   20174:	ldr	x0, [x0, #40]
   20178:	cmp	x0, #0x0
   2017c:	b.eq	20190 <set_program_name@@Base+0x1c6c>  // b.none
   20180:	ldr	x0, [sp, #40]
   20184:	ldr	x0, [x0, #40]
   20188:	ldr	x0, [x0, #32]
   2018c:	b	20194 <set_program_name@@Base+0x1c70>
   20190:	mov	x0, #0x0                   	// #0
   20194:	ldr	x1, [sp, #24]
   20198:	cmp	x0, x1
   2019c:	b.cs	201a4 <set_program_name@@Base+0x1c80>  // b.hs, b.nlast
   201a0:	bl	af70 <abort@plt>
   201a4:	ldr	x0, [sp, #40]
   201a8:	ldr	x0, [x0, #8]
   201ac:	str	x0, [sp, #1920]
   201b0:	ldr	x0, [sp, #40]
   201b4:	ldr	x0, [x0, #40]
   201b8:	str	x0, [sp, #1944]
   201bc:	add	x0, sp, #0x38
   201c0:	str	x0, [sp, #1936]
   201c4:	str	xzr, [sp, #1928]
   201c8:	ldr	x0, [sp, #32]
   201cc:	cmp	x0, #0x0
   201d0:	b.ne	202fc <set_program_name@@Base+0x1dd8>  // b.any
   201d4:	ldr	x0, [sp, #1944]
   201d8:	cmp	x0, #0x0
   201dc:	b.ne	201e4 <set_program_name@@Base+0x1cc0>  // b.any
   201e0:	b	20214 <set_program_name@@Base+0x1cf0>
   201e4:	ldr	x0, [sp, #1936]
   201e8:	ldr	x1, [sp, #1944]
   201ec:	str	x1, [x0]
   201f0:	ldr	x0, [sp, #1936]
   201f4:	str	xzr, [x0, #8]
   201f8:	ldr	x0, [sp, #1944]
   201fc:	ldr	x0, [x0]
   20200:	str	x0, [sp, #1944]
   20204:	ldr	x0, [sp, #1936]
   20208:	add	x0, x0, #0x10
   2020c:	str	x0, [sp, #1936]
   20210:	b	201d4 <set_program_name@@Base+0x1cb0>
   20214:	add	x0, sp, #0x38
   20218:	ldr	x1, [sp, #1936]
   2021c:	cmp	x1, x0
   20220:	b.ne	2022c <set_program_name@@Base+0x1d08>  // b.any
   20224:	mov	x0, #0xffffffffffffffff    	// #-1
   20228:	b	204a8 <set_program_name@@Base+0x1f84>
   2022c:	ldr	x0, [sp, #1936]
   20230:	sub	x0, x0, #0x10
   20234:	str	x0, [sp, #1936]
   20238:	ldr	x0, [sp, #1936]
   2023c:	ldr	x0, [x0, #8]
   20240:	cmp	x0, #0x0
   20244:	b.eq	2024c <set_program_name@@Base+0x1d28>  // b.none
   20248:	b	20214 <set_program_name@@Base+0x1cf0>
   2024c:	nop
   20250:	ldr	x0, [sp, #1936]
   20254:	ldr	x0, [x0]
   20258:	str	x0, [sp, #1944]
   2025c:	ldr	x0, [sp, #1920]
   20260:	cmp	x0, #0x0
   20264:	b.eq	20288 <set_program_name@@Base+0x1d64>  // b.none
   20268:	ldr	x0, [sp, #1944]
   2026c:	ldr	x0, [x0, #40]
   20270:	ldr	x2, [sp, #1920]
   20274:	mov	x1, x0
   20278:	ldr	x0, [sp, #16]
   2027c:	blr	x2
   20280:	and	w0, w0, #0xff
   20284:	b	202a0 <set_program_name@@Base+0x1d7c>
   20288:	ldr	x0, [sp, #1944]
   2028c:	ldr	x0, [x0, #40]
   20290:	ldr	x1, [sp, #16]
   20294:	cmp	x1, x0
   20298:	cset	w0, eq  // eq = none
   2029c:	and	w0, w0, #0xff
   202a0:	cmp	w0, #0x0
   202a4:	b.eq	202b0 <set_program_name@@Base+0x1d8c>  // b.none
   202a8:	ldr	x0, [sp, #1928]
   202ac:	b	204a8 <set_program_name@@Base+0x1f84>
   202b0:	ldr	x0, [sp, #1928]
   202b4:	add	x0, x0, #0x1
   202b8:	str	x0, [sp, #1928]
   202bc:	ldr	x1, [sp, #1928]
   202c0:	ldr	x0, [sp, #24]
   202c4:	cmp	x1, x0
   202c8:	b.cc	202d4 <set_program_name@@Base+0x1db0>  // b.lo, b.ul, b.last
   202cc:	mov	x0, #0xffffffffffffffff    	// #-1
   202d0:	b	204a8 <set_program_name@@Base+0x1f84>
   202d4:	ldr	x0, [sp, #1936]
   202d8:	mov	x1, #0x1                   	// #1
   202dc:	str	x1, [x0, #8]
   202e0:	ldr	x0, [sp, #1944]
   202e4:	ldr	x0, [x0, #8]
   202e8:	str	x0, [sp, #1944]
   202ec:	ldr	x0, [sp, #1936]
   202f0:	add	x0, x0, #0x10
   202f4:	str	x0, [sp, #1936]
   202f8:	b	201d4 <set_program_name@@Base+0x1cb0>
   202fc:	ldr	x0, [sp, #1944]
   20300:	cmp	x0, #0x0
   20304:	b.eq	2034c <set_program_name@@Base+0x1e28>  // b.none
   20308:	ldr	x0, [sp, #1944]
   2030c:	ldr	x0, [x0, #32]
   20310:	ldr	x1, [sp, #32]
   20314:	cmp	x1, x0
   20318:	b.cs	20354 <set_program_name@@Base+0x1e30>  // b.hs, b.nlast
   2031c:	ldr	x0, [sp, #1936]
   20320:	ldr	x1, [sp, #1944]
   20324:	str	x1, [x0]
   20328:	ldr	x0, [sp, #1936]
   2032c:	str	xzr, [x0, #8]
   20330:	ldr	x0, [sp, #1944]
   20334:	ldr	x0, [x0]
   20338:	str	x0, [sp, #1944]
   2033c:	ldr	x0, [sp, #1936]
   20340:	add	x0, x0, #0x10
   20344:	str	x0, [sp, #1936]
   20348:	b	202fc <set_program_name@@Base+0x1dd8>
   2034c:	nop
   20350:	b	20358 <set_program_name@@Base+0x1e34>
   20354:	nop
   20358:	add	x0, sp, #0x38
   2035c:	ldr	x1, [sp, #1936]
   20360:	cmp	x1, x0
   20364:	b.ne	20370 <set_program_name@@Base+0x1e4c>  // b.any
   20368:	mov	x0, #0xffffffffffffffff    	// #-1
   2036c:	b	204a8 <set_program_name@@Base+0x1f84>
   20370:	ldr	x0, [sp, #1936]
   20374:	sub	x0, x0, #0x10
   20378:	str	x0, [sp, #1936]
   2037c:	ldr	x0, [sp, #1936]
   20380:	ldr	x0, [x0, #8]
   20384:	cmp	x0, #0x0
   20388:	b.eq	203a4 <set_program_name@@Base+0x1e80>  // b.none
   2038c:	ldr	x0, [sp, #1936]
   20390:	ldr	x0, [x0, #8]
   20394:	ldr	x1, [sp, #32]
   20398:	add	x0, x1, x0
   2039c:	str	x0, [sp, #32]
   203a0:	b	20358 <set_program_name@@Base+0x1e34>
   203a4:	nop
   203a8:	ldr	x0, [sp, #1936]
   203ac:	ldr	x0, [x0]
   203b0:	str	x0, [sp, #1944]
   203b4:	ldr	x0, [sp, #1944]
   203b8:	ldr	x0, [x0]
   203bc:	cmp	x0, #0x0
   203c0:	b.eq	203d8 <set_program_name@@Base+0x1eb4>  // b.none
   203c4:	ldr	x0, [sp, #1944]
   203c8:	ldr	x0, [x0]
   203cc:	ldr	x0, [x0, #32]
   203d0:	add	x0, x0, #0x1
   203d4:	b	203dc <set_program_name@@Base+0x1eb8>
   203d8:	mov	x0, #0x1                   	// #1
   203dc:	str	x0, [sp, #1912]
   203e0:	ldr	x1, [sp, #32]
   203e4:	ldr	x0, [sp, #1912]
   203e8:	cmp	x1, x0
   203ec:	b.cs	2044c <set_program_name@@Base+0x1f28>  // b.hs, b.nlast
   203f0:	ldr	x0, [sp, #1920]
   203f4:	cmp	x0, #0x0
   203f8:	b.eq	2041c <set_program_name@@Base+0x1ef8>  // b.none
   203fc:	ldr	x0, [sp, #1944]
   20400:	ldr	x0, [x0, #40]
   20404:	ldr	x2, [sp, #1920]
   20408:	mov	x1, x0
   2040c:	ldr	x0, [sp, #16]
   20410:	blr	x2
   20414:	and	w0, w0, #0xff
   20418:	b	20434 <set_program_name@@Base+0x1f10>
   2041c:	ldr	x0, [sp, #1944]
   20420:	ldr	x0, [x0, #40]
   20424:	ldr	x1, [sp, #16]
   20428:	cmp	x1, x0
   2042c:	cset	w0, eq  // eq = none
   20430:	and	w0, w0, #0xff
   20434:	cmp	w0, #0x0
   20438:	b.eq	20444 <set_program_name@@Base+0x1f20>  // b.none
   2043c:	ldr	x0, [sp, #1928]
   20440:	b	204a8 <set_program_name@@Base+0x1f84>
   20444:	ldr	x0, [sp, #1912]
   20448:	str	x0, [sp, #32]
   2044c:	ldr	x0, [sp, #1928]
   20450:	add	x0, x0, #0x1
   20454:	str	x0, [sp, #1928]
   20458:	ldr	x1, [sp, #1928]
   2045c:	ldr	x0, [sp, #24]
   20460:	cmp	x1, x0
   20464:	b.cc	20470 <set_program_name@@Base+0x1f4c>  // b.lo, b.ul, b.last
   20468:	mov	x0, #0xffffffffffffffff    	// #-1
   2046c:	b	204a8 <set_program_name@@Base+0x1f84>
   20470:	ldr	x1, [sp, #32]
   20474:	ldr	x0, [sp, #1912]
   20478:	sub	x0, x1, x0
   2047c:	str	x0, [sp, #32]
   20480:	ldr	x0, [sp, #1936]
   20484:	ldr	x1, [sp, #1912]
   20488:	str	x1, [x0, #8]
   2048c:	ldr	x0, [sp, #1944]
   20490:	ldr	x0, [x0, #8]
   20494:	str	x0, [sp, #1944]
   20498:	ldr	x0, [sp, #1936]
   2049c:	add	x0, x0, #0x10
   204a0:	str	x0, [sp, #1936]
   204a4:	b	202fc <set_program_name@@Base+0x1dd8>
   204a8:	ldp	x29, x30, [sp]
   204ac:	add	sp, sp, #0x7a0
   204b0:	ret
   204b4:	stp	x29, x30, [sp, #-64]!
   204b8:	mov	x29, sp
   204bc:	str	x0, [sp, #40]
   204c0:	str	x1, [sp, #32]
   204c4:	str	x2, [sp, #24]
   204c8:	ldr	x0, [sp, #40]
   204cc:	ldr	x0, [x0, #40]
   204d0:	cmp	x0, #0x0
   204d4:	b.eq	204e8 <set_program_name@@Base+0x1fc4>  // b.none
   204d8:	ldr	x0, [sp, #40]
   204dc:	ldr	x0, [x0, #40]
   204e0:	ldr	x0, [x0, #32]
   204e4:	b	204ec <set_program_name@@Base+0x1fc8>
   204e8:	mov	x0, #0x0                   	// #0
   204ec:	str	x0, [sp, #56]
   204f0:	ldr	x1, [sp, #32]
   204f4:	ldr	x0, [sp, #56]
   204f8:	cmp	x1, x0
   204fc:	b.ls	20504 <set_program_name@@Base+0x1fe0>  // b.plast
   20500:	bl	af70 <abort@plt>
   20504:	ldr	x1, [sp, #32]
   20508:	ldr	x0, [sp, #56]
   2050c:	cmp	x1, x0
   20510:	b.ne	20524 <set_program_name@@Base+0x2000>  // b.any
   20514:	ldr	x1, [sp, #24]
   20518:	ldr	x0, [sp, #40]
   2051c:	bl	1f6f0 <set_program_name@@Base+0x11cc>
   20520:	b	20544 <set_program_name@@Base+0x2020>
   20524:	ldr	x0, [sp, #40]
   20528:	ldr	x0, [x0, #40]
   2052c:	ldr	x1, [sp, #32]
   20530:	bl	1fc6c <set_program_name@@Base+0x1748>
   20534:	ldr	x2, [sp, #24]
   20538:	mov	x1, x0
   2053c:	ldr	x0, [sp, #40]
   20540:	bl	1f810 <set_program_name@@Base+0x12ec>
   20544:	ldp	x29, x30, [sp], #64
   20548:	ret
   2054c:	stp	x29, x30, [sp, #-32]!
   20550:	mov	x29, sp
   20554:	str	x0, [sp, #24]
   20558:	str	x1, [sp, #16]
   2055c:	ldr	x1, [sp, #16]
   20560:	ldr	x0, [sp, #24]
   20564:	bl	1f21c <set_program_name@@Base+0xcf8>
   20568:	ldr	x0, [sp, #24]
   2056c:	ldr	x0, [x0, #24]
   20570:	cmp	x0, #0x0
   20574:	b.eq	2058c <set_program_name@@Base+0x2068>  // b.none
   20578:	ldr	x0, [sp, #24]
   2057c:	ldr	x1, [x0, #24]
   20580:	ldr	x0, [sp, #16]
   20584:	ldr	x0, [x0, #40]
   20588:	blr	x1
   2058c:	ldr	x0, [sp, #16]
   20590:	bl	b130 <free@plt>
   20594:	mov	w0, #0x1                   	// #1
   20598:	ldp	x29, x30, [sp], #32
   2059c:	ret
   205a0:	stp	x29, x30, [sp, #-48]!
   205a4:	mov	x29, sp
   205a8:	str	x0, [sp, #24]
   205ac:	str	x1, [sp, #16]
   205b0:	ldr	x0, [sp, #24]
   205b4:	ldr	x0, [x0, #40]
   205b8:	str	x0, [sp, #40]
   205bc:	ldr	x0, [sp, #40]
   205c0:	cmp	x0, #0x0
   205c4:	b.eq	205dc <set_program_name@@Base+0x20b8>  // b.none
   205c8:	ldr	x0, [sp, #40]
   205cc:	ldr	x0, [x0, #32]
   205d0:	ldr	x1, [sp, #16]
   205d4:	cmp	x1, x0
   205d8:	b.cc	205e0 <set_program_name@@Base+0x20bc>  // b.lo, b.ul, b.last
   205dc:	bl	af70 <abort@plt>
   205e0:	ldr	x1, [sp, #16]
   205e4:	ldr	x0, [sp, #40]
   205e8:	bl	1fc6c <set_program_name@@Base+0x1748>
   205ec:	str	x0, [sp, #40]
   205f0:	ldr	x1, [sp, #40]
   205f4:	ldr	x0, [sp, #24]
   205f8:	bl	2054c <set_program_name@@Base+0x2028>
   205fc:	and	w0, w0, #0xff
   20600:	ldp	x29, x30, [sp], #48
   20604:	ret
   20608:	stp	x29, x30, [sp, #-48]!
   2060c:	mov	x29, sp
   20610:	str	x0, [sp, #24]
   20614:	str	x1, [sp, #16]
   20618:	ldr	x0, [sp, #24]
   2061c:	ldr	x0, [x0, #40]
   20620:	cmp	x0, #0x0
   20624:	b.eq	2066c <set_program_name@@Base+0x2148>  // b.none
   20628:	ldr	x0, [sp, #24]
   2062c:	ldr	x0, [x0, #40]
   20630:	ldr	x0, [x0, #32]
   20634:	ldr	x3, [sp, #16]
   20638:	mov	x2, x0
   2063c:	mov	x1, #0x0                   	// #0
   20640:	ldr	x0, [sp, #24]
   20644:	bl	1fdd4 <set_program_name@@Base+0x18b0>
   20648:	str	x0, [sp, #40]
   2064c:	ldr	x0, [sp, #40]
   20650:	cmp	x0, #0x0
   20654:	b.eq	2066c <set_program_name@@Base+0x2148>  // b.none
   20658:	ldr	x1, [sp, #40]
   2065c:	ldr	x0, [sp, #24]
   20660:	bl	2054c <set_program_name@@Base+0x2028>
   20664:	and	w0, w0, #0xff
   20668:	b	20670 <set_program_name@@Base+0x214c>
   2066c:	mov	w0, #0x0                   	// #0
   20670:	ldp	x29, x30, [sp], #48
   20674:	ret
   20678:	sub	sp, sp, #0x770
   2067c:	stp	x29, x30, [sp]
   20680:	mov	x29, sp
   20684:	str	x0, [sp, #24]
   20688:	ldr	x0, [sp, #24]
   2068c:	ldr	x0, [x0, #40]
   20690:	str	x0, [sp, #1896]
   20694:	add	x0, sp, #0x20
   20698:	str	x0, [sp, #1888]
   2069c:	ldr	x0, [sp, #1896]
   206a0:	cmp	x0, #0x0
   206a4:	b.ne	206ac <set_program_name@@Base+0x2188>  // b.any
   206a8:	b	206dc <set_program_name@@Base+0x21b8>
   206ac:	ldr	x0, [sp, #1888]
   206b0:	ldr	x1, [sp, #1896]
   206b4:	str	x1, [x0]
   206b8:	ldr	x0, [sp, #1888]
   206bc:	str	xzr, [x0, #8]
   206c0:	ldr	x0, [sp, #1896]
   206c4:	ldr	x0, [x0]
   206c8:	str	x0, [sp, #1896]
   206cc:	ldr	x0, [sp, #1888]
   206d0:	add	x0, x0, #0x10
   206d4:	str	x0, [sp, #1888]
   206d8:	b	2069c <set_program_name@@Base+0x2178>
   206dc:	add	x0, sp, #0x20
   206e0:	ldr	x1, [sp, #1888]
   206e4:	cmp	x1, x0
   206e8:	b.eq	20770 <set_program_name@@Base+0x224c>  // b.none
   206ec:	ldr	x0, [sp, #1888]
   206f0:	sub	x0, x0, #0x10
   206f4:	str	x0, [sp, #1888]
   206f8:	ldr	x0, [sp, #1888]
   206fc:	ldr	x0, [x0]
   20700:	str	x0, [sp, #1896]
   20704:	ldr	x0, [sp, #1888]
   20708:	ldr	x0, [x0, #8]
   2070c:	cmp	x0, #0x0
   20710:	b.eq	20744 <set_program_name@@Base+0x2220>  // b.none
   20714:	ldr	x0, [sp, #24]
   20718:	ldr	x0, [x0, #24]
   2071c:	cmp	x0, #0x0
   20720:	b.eq	20738 <set_program_name@@Base+0x2214>  // b.none
   20724:	ldr	x0, [sp, #24]
   20728:	ldr	x1, [x0, #24]
   2072c:	ldr	x0, [sp, #1896]
   20730:	ldr	x0, [x0, #40]
   20734:	blr	x1
   20738:	ldr	x0, [sp, #1896]
   2073c:	bl	b130 <free@plt>
   20740:	b	206dc <set_program_name@@Base+0x21b8>
   20744:	nop
   20748:	ldr	x0, [sp, #1888]
   2074c:	mov	x1, #0x1                   	// #1
   20750:	str	x1, [x0, #8]
   20754:	ldr	x0, [sp, #1896]
   20758:	ldr	x0, [x0, #8]
   2075c:	str	x0, [sp, #1896]
   20760:	ldr	x0, [sp, #1888]
   20764:	add	x0, x0, #0x10
   20768:	str	x0, [sp, #1888]
   2076c:	b	2069c <set_program_name@@Base+0x2178>
   20770:	nop
   20774:	ldr	x0, [sp, #24]
   20778:	bl	b130 <free@plt>
   2077c:	nop
   20780:	ldp	x29, x30, [sp]
   20784:	add	sp, sp, #0x770
   20788:	ret
   2078c:	sub	sp, sp, #0x50
   20790:	mov	x1, x8
   20794:	str	x0, [sp, #8]
   20798:	ldr	x0, [sp, #8]
   2079c:	ldr	x0, [x0]
   207a0:	str	x0, [sp, #16]
   207a4:	ldr	x0, [sp, #8]
   207a8:	str	x0, [sp, #24]
   207ac:	ldr	x0, [sp, #8]
   207b0:	ldr	x0, [x0, #40]
   207b4:	str	x0, [sp, #72]
   207b8:	ldr	x0, [sp, #72]
   207bc:	cmp	x0, #0x0
   207c0:	b.eq	207e4 <set_program_name@@Base+0x22c0>  // b.none
   207c4:	b	207d4 <set_program_name@@Base+0x22b0>
   207c8:	ldr	x0, [sp, #72]
   207cc:	ldr	x0, [x0]
   207d0:	str	x0, [sp, #72]
   207d4:	ldr	x0, [sp, #72]
   207d8:	ldr	x0, [x0]
   207dc:	cmp	x0, #0x0
   207e0:	b.ne	207c8 <set_program_name@@Base+0x22a4>  // b.any
   207e4:	ldr	x0, [sp, #72]
   207e8:	str	x0, [sp, #40]
   207ec:	str	xzr, [sp, #48]
   207f0:	add	x0, sp, #0x10
   207f4:	ldp	x2, x3, [x0]
   207f8:	stp	x2, x3, [x1]
   207fc:	ldp	x2, x3, [x0, #16]
   20800:	stp	x2, x3, [x1, #16]
   20804:	ldp	x2, x3, [x0, #32]
   20808:	stp	x2, x3, [x1, #32]
   2080c:	ldr	x0, [x0, #48]
   20810:	str	x0, [x1, #48]
   20814:	add	sp, sp, #0x50
   20818:	ret
   2081c:	stp	x29, x30, [sp, #-128]!
   20820:	mov	x29, sp
   20824:	str	x19, [sp, #16]
   20828:	mov	x19, x8
   2082c:	str	x0, [sp, #56]
   20830:	str	x1, [sp, #48]
   20834:	str	x2, [sp, #40]
   20838:	ldr	x0, [sp, #56]
   2083c:	ldr	x0, [x0, #40]
   20840:	cmp	x0, #0x0
   20844:	b.eq	20858 <set_program_name@@Base+0x2334>  // b.none
   20848:	ldr	x0, [sp, #56]
   2084c:	ldr	x0, [x0, #40]
   20850:	ldr	x0, [x0, #32]
   20854:	b	2085c <set_program_name@@Base+0x2338>
   20858:	mov	x0, #0x0                   	// #0
   2085c:	str	x0, [sp, #120]
   20860:	ldr	x1, [sp, #48]
   20864:	ldr	x0, [sp, #40]
   20868:	cmp	x1, x0
   2086c:	b.hi	20880 <set_program_name@@Base+0x235c>  // b.pmore
   20870:	ldr	x1, [sp, #40]
   20874:	ldr	x0, [sp, #120]
   20878:	cmp	x1, x0
   2087c:	b.ls	20884 <set_program_name@@Base+0x2360>  // b.plast
   20880:	bl	af70 <abort@plt>
   20884:	ldr	x0, [sp, #56]
   20888:	ldr	x0, [x0]
   2088c:	str	x0, [sp, #64]
   20890:	ldr	x0, [sp, #56]
   20894:	str	x0, [sp, #72]
   20898:	ldr	x1, [sp, #48]
   2089c:	ldr	x0, [sp, #120]
   208a0:	cmp	x1, x0
   208a4:	b.cs	208bc <set_program_name@@Base+0x2398>  // b.hs, b.nlast
   208a8:	ldr	x0, [sp, #56]
   208ac:	ldr	x0, [x0, #40]
   208b0:	ldr	x1, [sp, #48]
   208b4:	bl	1fc6c <set_program_name@@Base+0x1748>
   208b8:	b	208c0 <set_program_name@@Base+0x239c>
   208bc:	mov	x0, #0x0                   	// #0
   208c0:	str	x0, [sp, #88]
   208c4:	ldr	x1, [sp, #40]
   208c8:	ldr	x0, [sp, #120]
   208cc:	cmp	x1, x0
   208d0:	b.cs	208e8 <set_program_name@@Base+0x23c4>  // b.hs, b.nlast
   208d4:	ldr	x0, [sp, #56]
   208d8:	ldr	x0, [x0, #40]
   208dc:	ldr	x1, [sp, #40]
   208e0:	bl	1fc6c <set_program_name@@Base+0x1748>
   208e4:	b	208ec <set_program_name@@Base+0x23c8>
   208e8:	mov	x0, #0x0                   	// #0
   208ec:	str	x0, [sp, #96]
   208f0:	mov	x1, x19
   208f4:	add	x0, sp, #0x40
   208f8:	ldp	x2, x3, [x0]
   208fc:	stp	x2, x3, [x1]
   20900:	ldp	x2, x3, [x0, #16]
   20904:	stp	x2, x3, [x1, #16]
   20908:	ldp	x2, x3, [x0, #32]
   2090c:	stp	x2, x3, [x1, #32]
   20910:	ldr	x0, [x0, #48]
   20914:	str	x0, [x1, #48]
   20918:	ldr	x19, [sp, #16]
   2091c:	ldp	x29, x30, [sp], #128
   20920:	ret
   20924:	sub	sp, sp, #0x30
   20928:	str	x0, [sp, #24]
   2092c:	str	x1, [sp, #16]
   20930:	str	x2, [sp, #8]
   20934:	ldr	x0, [sp, #24]
   20938:	ldr	x1, [x0, #24]
   2093c:	ldr	x0, [sp, #24]
   20940:	ldr	x0, [x0, #32]
   20944:	cmp	x1, x0
   20948:	b.eq	20a14 <set_program_name@@Base+0x24f0>  // b.none
   2094c:	ldr	x0, [sp, #24]
   20950:	ldr	x0, [x0, #24]
   20954:	str	x0, [sp, #40]
   20958:	ldr	x0, [sp, #40]
   2095c:	ldr	x1, [x0, #40]
   20960:	ldr	x0, [sp, #16]
   20964:	str	x1, [x0]
   20968:	ldr	x0, [sp, #8]
   2096c:	cmp	x0, #0x0
   20970:	b.eq	20980 <set_program_name@@Base+0x245c>  // b.none
   20974:	ldr	x0, [sp, #8]
   20978:	ldr	x1, [sp, #40]
   2097c:	str	x1, [x0]
   20980:	ldr	x0, [sp, #40]
   20984:	ldr	x0, [x0, #8]
   20988:	cmp	x0, #0x0
   2098c:	b.eq	209cc <set_program_name@@Base+0x24a8>  // b.none
   20990:	ldr	x0, [sp, #40]
   20994:	ldr	x0, [x0, #8]
   20998:	str	x0, [sp, #40]
   2099c:	b	209ac <set_program_name@@Base+0x2488>
   209a0:	ldr	x0, [sp, #40]
   209a4:	ldr	x0, [x0]
   209a8:	str	x0, [sp, #40]
   209ac:	ldr	x0, [sp, #40]
   209b0:	ldr	x0, [x0]
   209b4:	cmp	x0, #0x0
   209b8:	b.ne	209a0 <set_program_name@@Base+0x247c>  // b.any
   209bc:	b	20a00 <set_program_name@@Base+0x24dc>
   209c0:	ldr	x0, [sp, #40]
   209c4:	ldr	x0, [x0, #16]
   209c8:	str	x0, [sp, #40]
   209cc:	ldr	x0, [sp, #40]
   209d0:	ldr	x0, [x0, #16]
   209d4:	cmp	x0, #0x0
   209d8:	b.eq	209f4 <set_program_name@@Base+0x24d0>  // b.none
   209dc:	ldr	x0, [sp, #40]
   209e0:	ldr	x0, [x0, #16]
   209e4:	ldr	x0, [x0, #8]
   209e8:	ldr	x1, [sp, #40]
   209ec:	cmp	x1, x0
   209f0:	b.eq	209c0 <set_program_name@@Base+0x249c>  // b.none
   209f4:	ldr	x0, [sp, #40]
   209f8:	ldr	x0, [x0, #16]
   209fc:	str	x0, [sp, #40]
   20a00:	ldr	x0, [sp, #24]
   20a04:	ldr	x1, [sp, #40]
   20a08:	str	x1, [x0, #24]
   20a0c:	mov	w0, #0x1                   	// #1
   20a10:	b	20a18 <set_program_name@@Base+0x24f4>
   20a14:	mov	w0, #0x0                   	// #0
   20a18:	add	sp, sp, #0x30
   20a1c:	ret
   20a20:	sub	sp, sp, #0x10
   20a24:	str	x0, [sp, #8]
   20a28:	nop
   20a2c:	add	sp, sp, #0x10
   20a30:	ret
   20a34:	stp	x29, x30, [sp, #-80]!
   20a38:	mov	x29, sp
   20a3c:	str	x0, [sp, #40]
   20a40:	str	x1, [sp, #32]
   20a44:	str	x2, [sp, #24]
   20a48:	ldr	x0, [sp, #40]
   20a4c:	ldr	x0, [x0, #40]
   20a50:	str	x0, [sp, #72]
   20a54:	b	20b2c <set_program_name@@Base+0x2608>
   20a58:	ldr	x0, [sp, #72]
   20a5c:	ldr	x0, [x0, #40]
   20a60:	ldr	x2, [sp, #32]
   20a64:	ldr	x1, [sp, #24]
   20a68:	blr	x2
   20a6c:	str	w0, [sp, #60]
   20a70:	ldr	w0, [sp, #60]
   20a74:	cmp	w0, #0x0
   20a78:	b.ge	20a8c <set_program_name@@Base+0x2568>  // b.tcont
   20a7c:	ldr	x0, [sp, #72]
   20a80:	ldr	x0, [x0, #8]
   20a84:	str	x0, [sp, #72]
   20a88:	b	20b2c <set_program_name@@Base+0x2608>
   20a8c:	ldr	w0, [sp, #60]
   20a90:	cmp	w0, #0x0
   20a94:	b.le	20aa8 <set_program_name@@Base+0x2584>
   20a98:	ldr	x0, [sp, #72]
   20a9c:	ldr	x0, [x0]
   20aa0:	str	x0, [sp, #72]
   20aa4:	b	20b2c <set_program_name@@Base+0x2608>
   20aa8:	ldr	x0, [sp, #72]
   20aac:	str	x0, [sp, #64]
   20ab0:	ldr	x0, [sp, #72]
   20ab4:	ldr	x0, [x0]
   20ab8:	str	x0, [sp, #72]
   20abc:	b	20b18 <set_program_name@@Base+0x25f4>
   20ac0:	ldr	x0, [sp, #72]
   20ac4:	ldr	x0, [x0, #40]
   20ac8:	ldr	x2, [sp, #32]
   20acc:	ldr	x1, [sp, #24]
   20ad0:	blr	x2
   20ad4:	str	w0, [sp, #56]
   20ad8:	ldr	w0, [sp, #56]
   20adc:	cmp	w0, #0x0
   20ae0:	b.ge	20af4 <set_program_name@@Base+0x25d0>  // b.tcont
   20ae4:	ldr	x0, [sp, #72]
   20ae8:	ldr	x0, [x0, #8]
   20aec:	str	x0, [sp, #72]
   20af0:	b	20b18 <set_program_name@@Base+0x25f4>
   20af4:	ldr	w0, [sp, #56]
   20af8:	cmp	w0, #0x0
   20afc:	b.le	20b04 <set_program_name@@Base+0x25e0>
   20b00:	bl	af70 <abort@plt>
   20b04:	ldr	x0, [sp, #72]
   20b08:	str	x0, [sp, #64]
   20b0c:	ldr	x0, [sp, #72]
   20b10:	ldr	x0, [x0]
   20b14:	str	x0, [sp, #72]
   20b18:	ldr	x0, [sp, #72]
   20b1c:	cmp	x0, #0x0
   20b20:	b.ne	20ac0 <set_program_name@@Base+0x259c>  // b.any
   20b24:	ldr	x0, [sp, #64]
   20b28:	b	20b3c <set_program_name@@Base+0x2618>
   20b2c:	ldr	x0, [sp, #72]
   20b30:	cmp	x0, #0x0
   20b34:	b.ne	20a58 <set_program_name@@Base+0x2534>  // b.any
   20b38:	mov	x0, #0x0                   	// #0
   20b3c:	ldp	x29, x30, [sp], #80
   20b40:	ret
   20b44:	stp	x29, x30, [sp, #-112]!
   20b48:	mov	x29, sp
   20b4c:	str	x0, [sp, #56]
   20b50:	str	x1, [sp, #48]
   20b54:	str	x2, [sp, #40]
   20b58:	str	x3, [sp, #32]
   20b5c:	str	x4, [sp, #24]
   20b60:	ldr	x1, [sp, #40]
   20b64:	ldr	x0, [sp, #32]
   20b68:	cmp	x1, x0
   20b6c:	b.hi	20ba0 <set_program_name@@Base+0x267c>  // b.pmore
   20b70:	ldr	x0, [sp, #56]
   20b74:	ldr	x0, [x0, #40]
   20b78:	cmp	x0, #0x0
   20b7c:	b.eq	20b90 <set_program_name@@Base+0x266c>  // b.none
   20b80:	ldr	x0, [sp, #56]
   20b84:	ldr	x0, [x0, #40]
   20b88:	ldr	x0, [x0, #32]
   20b8c:	b	20b94 <set_program_name@@Base+0x2670>
   20b90:	mov	x0, #0x0                   	// #0
   20b94:	ldr	x1, [sp, #32]
   20b98:	cmp	x0, x1
   20b9c:	b.cs	20ba4 <set_program_name@@Base+0x2680>  // b.hs, b.nlast
   20ba0:	bl	af70 <abort@plt>
   20ba4:	ldr	x0, [sp, #56]
   20ba8:	ldr	x0, [x0, #40]
   20bac:	str	x0, [sp, #104]
   20bb0:	b	20d90 <set_program_name@@Base+0x286c>
   20bb4:	ldr	x0, [sp, #104]
   20bb8:	ldr	x0, [x0]
   20bbc:	cmp	x0, #0x0
   20bc0:	b.eq	20bd4 <set_program_name@@Base+0x26b0>  // b.none
   20bc4:	ldr	x0, [sp, #104]
   20bc8:	ldr	x0, [x0]
   20bcc:	ldr	x0, [x0, #32]
   20bd0:	b	20bd8 <set_program_name@@Base+0x26b4>
   20bd4:	mov	x0, #0x0                   	// #0
   20bd8:	str	x0, [sp, #88]
   20bdc:	ldr	x1, [sp, #40]
   20be0:	ldr	x0, [sp, #88]
   20be4:	cmp	x1, x0
   20be8:	b.ls	20c24 <set_program_name@@Base+0x2700>  // b.plast
   20bec:	ldr	x1, [sp, #40]
   20bf0:	ldr	x0, [sp, #88]
   20bf4:	sub	x0, x1, x0
   20bf8:	sub	x0, x0, #0x1
   20bfc:	str	x0, [sp, #40]
   20c00:	ldr	x1, [sp, #32]
   20c04:	ldr	x0, [sp, #88]
   20c08:	sub	x0, x1, x0
   20c0c:	sub	x0, x0, #0x1
   20c10:	str	x0, [sp, #32]
   20c14:	ldr	x0, [sp, #104]
   20c18:	ldr	x0, [x0, #8]
   20c1c:	str	x0, [sp, #104]
   20c20:	b	20d90 <set_program_name@@Base+0x286c>
   20c24:	ldr	x1, [sp, #32]
   20c28:	ldr	x0, [sp, #88]
   20c2c:	cmp	x1, x0
   20c30:	b.hi	20c44 <set_program_name@@Base+0x2720>  // b.pmore
   20c34:	ldr	x0, [sp, #104]
   20c38:	ldr	x0, [x0]
   20c3c:	str	x0, [sp, #104]
   20c40:	b	20d90 <set_program_name@@Base+0x286c>
   20c44:	ldr	x0, [sp, #104]
   20c48:	ldr	x0, [x0, #40]
   20c4c:	ldr	x2, [sp, #48]
   20c50:	ldr	x1, [sp, #24]
   20c54:	blr	x2
   20c58:	str	w0, [sp, #84]
   20c5c:	ldr	w0, [sp, #84]
   20c60:	cmp	w0, #0x0
   20c64:	b.ge	20c90 <set_program_name@@Base+0x276c>  // b.tcont
   20c68:	str	xzr, [sp, #40]
   20c6c:	ldr	x1, [sp, #32]
   20c70:	ldr	x0, [sp, #88]
   20c74:	sub	x0, x1, x0
   20c78:	sub	x0, x0, #0x1
   20c7c:	str	x0, [sp, #32]
   20c80:	ldr	x0, [sp, #104]
   20c84:	ldr	x0, [x0, #8]
   20c88:	str	x0, [sp, #104]
   20c8c:	b	20d90 <set_program_name@@Base+0x286c>
   20c90:	ldr	w0, [sp, #84]
   20c94:	cmp	w0, #0x0
   20c98:	b.le	20cac <set_program_name@@Base+0x2788>
   20c9c:	ldr	x0, [sp, #104]
   20ca0:	ldr	x0, [x0]
   20ca4:	str	x0, [sp, #104]
   20ca8:	b	20d90 <set_program_name@@Base+0x286c>
   20cac:	ldr	x0, [sp, #104]
   20cb0:	str	x0, [sp, #96]
   20cb4:	ldr	x0, [sp, #104]
   20cb8:	ldr	x0, [x0]
   20cbc:	str	x0, [sp, #104]
   20cc0:	b	20d7c <set_program_name@@Base+0x2858>
   20cc4:	ldr	x0, [sp, #104]
   20cc8:	ldr	x0, [x0]
   20ccc:	cmp	x0, #0x0
   20cd0:	b.eq	20ce4 <set_program_name@@Base+0x27c0>  // b.none
   20cd4:	ldr	x0, [sp, #104]
   20cd8:	ldr	x0, [x0]
   20cdc:	ldr	x0, [x0, #32]
   20ce0:	b	20ce8 <set_program_name@@Base+0x27c4>
   20ce4:	mov	x0, #0x0                   	// #0
   20ce8:	str	x0, [sp, #72]
   20cec:	ldr	x1, [sp, #40]
   20cf0:	ldr	x0, [sp, #72]
   20cf4:	cmp	x1, x0
   20cf8:	b.ls	20d20 <set_program_name@@Base+0x27fc>  // b.plast
   20cfc:	ldr	x1, [sp, #40]
   20d00:	ldr	x0, [sp, #72]
   20d04:	sub	x0, x1, x0
   20d08:	sub	x0, x0, #0x1
   20d0c:	str	x0, [sp, #40]
   20d10:	ldr	x0, [sp, #104]
   20d14:	ldr	x0, [x0, #8]
   20d18:	str	x0, [sp, #104]
   20d1c:	b	20d7c <set_program_name@@Base+0x2858>
   20d20:	ldr	x0, [sp, #104]
   20d24:	ldr	x0, [x0, #40]
   20d28:	ldr	x2, [sp, #48]
   20d2c:	ldr	x1, [sp, #24]
   20d30:	blr	x2
   20d34:	str	w0, [sp, #68]
   20d38:	ldr	w0, [sp, #68]
   20d3c:	cmp	w0, #0x0
   20d40:	b.ge	20d58 <set_program_name@@Base+0x2834>  // b.tcont
   20d44:	str	xzr, [sp, #40]
   20d48:	ldr	x0, [sp, #104]
   20d4c:	ldr	x0, [x0, #8]
   20d50:	str	x0, [sp, #104]
   20d54:	b	20d7c <set_program_name@@Base+0x2858>
   20d58:	ldr	w0, [sp, #68]
   20d5c:	cmp	w0, #0x0
   20d60:	b.le	20d68 <set_program_name@@Base+0x2844>
   20d64:	bl	af70 <abort@plt>
   20d68:	ldr	x0, [sp, #104]
   20d6c:	str	x0, [sp, #96]
   20d70:	ldr	x0, [sp, #104]
   20d74:	ldr	x0, [x0]
   20d78:	str	x0, [sp, #104]
   20d7c:	ldr	x0, [sp, #104]
   20d80:	cmp	x0, #0x0
   20d84:	b.ne	20cc4 <set_program_name@@Base+0x27a0>  // b.any
   20d88:	ldr	x0, [sp, #96]
   20d8c:	b	20da0 <set_program_name@@Base+0x287c>
   20d90:	ldr	x0, [sp, #104]
   20d94:	cmp	x0, #0x0
   20d98:	b.ne	20bb4 <set_program_name@@Base+0x2690>  // b.any
   20d9c:	mov	x0, #0x0                   	// #0
   20da0:	ldp	x29, x30, [sp], #112
   20da4:	ret
   20da8:	stp	x29, x30, [sp, #-80]!
   20dac:	mov	x29, sp
   20db0:	str	x0, [sp, #40]
   20db4:	str	x1, [sp, #32]
   20db8:	str	x2, [sp, #24]
   20dbc:	ldr	x0, [sp, #40]
   20dc0:	ldr	x0, [x0, #40]
   20dc4:	str	x0, [sp, #72]
   20dc8:	str	xzr, [sp, #64]
   20dcc:	b	20f5c <set_program_name@@Base+0x2a38>
   20dd0:	ldr	x0, [sp, #72]
   20dd4:	ldr	x0, [x0, #40]
   20dd8:	ldr	x2, [sp, #32]
   20ddc:	ldr	x1, [sp, #24]
   20de0:	blr	x2
   20de4:	str	w0, [sp, #52]
   20de8:	ldr	w0, [sp, #52]
   20dec:	cmp	w0, #0x0
   20df0:	b.ge	20e38 <set_program_name@@Base+0x2914>  // b.tcont
   20df4:	ldr	x0, [sp, #72]
   20df8:	ldr	x0, [x0]
   20dfc:	cmp	x0, #0x0
   20e00:	b.eq	20e1c <set_program_name@@Base+0x28f8>  // b.none
   20e04:	ldr	x0, [sp, #72]
   20e08:	ldr	x0, [x0]
   20e0c:	ldr	x0, [x0, #32]
   20e10:	ldr	x1, [sp, #64]
   20e14:	add	x0, x1, x0
   20e18:	str	x0, [sp, #64]
   20e1c:	ldr	x0, [sp, #64]
   20e20:	add	x0, x0, #0x1
   20e24:	str	x0, [sp, #64]
   20e28:	ldr	x0, [sp, #72]
   20e2c:	ldr	x0, [x0, #8]
   20e30:	str	x0, [sp, #72]
   20e34:	b	20f5c <set_program_name@@Base+0x2a38>
   20e38:	ldr	w0, [sp, #52]
   20e3c:	cmp	w0, #0x0
   20e40:	b.le	20e54 <set_program_name@@Base+0x2930>
   20e44:	ldr	x0, [sp, #72]
   20e48:	ldr	x0, [x0]
   20e4c:	str	x0, [sp, #72]
   20e50:	b	20f5c <set_program_name@@Base+0x2a38>
   20e54:	ldr	x0, [sp, #72]
   20e58:	ldr	x0, [x0]
   20e5c:	cmp	x0, #0x0
   20e60:	b.eq	20e74 <set_program_name@@Base+0x2950>  // b.none
   20e64:	ldr	x0, [sp, #72]
   20e68:	ldr	x0, [x0]
   20e6c:	ldr	x0, [x0, #32]
   20e70:	b	20e78 <set_program_name@@Base+0x2954>
   20e74:	mov	x0, #0x0                   	// #0
   20e78:	ldr	x1, [sp, #64]
   20e7c:	add	x0, x0, x1
   20e80:	str	x0, [sp, #56]
   20e84:	ldr	x0, [sp, #72]
   20e88:	ldr	x0, [x0]
   20e8c:	str	x0, [sp, #72]
   20e90:	b	20f48 <set_program_name@@Base+0x2a24>
   20e94:	ldr	x0, [sp, #72]
   20e98:	ldr	x0, [x0, #40]
   20e9c:	ldr	x2, [sp, #32]
   20ea0:	ldr	x1, [sp, #24]
   20ea4:	blr	x2
   20ea8:	str	w0, [sp, #48]
   20eac:	ldr	w0, [sp, #48]
   20eb0:	cmp	w0, #0x0
   20eb4:	b.ge	20efc <set_program_name@@Base+0x29d8>  // b.tcont
   20eb8:	ldr	x0, [sp, #72]
   20ebc:	ldr	x0, [x0]
   20ec0:	cmp	x0, #0x0
   20ec4:	b.eq	20ee0 <set_program_name@@Base+0x29bc>  // b.none
   20ec8:	ldr	x0, [sp, #72]
   20ecc:	ldr	x0, [x0]
   20ed0:	ldr	x0, [x0, #32]
   20ed4:	ldr	x1, [sp, #64]
   20ed8:	add	x0, x1, x0
   20edc:	str	x0, [sp, #64]
   20ee0:	ldr	x0, [sp, #64]
   20ee4:	add	x0, x0, #0x1
   20ee8:	str	x0, [sp, #64]
   20eec:	ldr	x0, [sp, #72]
   20ef0:	ldr	x0, [x0, #8]
   20ef4:	str	x0, [sp, #72]
   20ef8:	b	20f48 <set_program_name@@Base+0x2a24>
   20efc:	ldr	w0, [sp, #48]
   20f00:	cmp	w0, #0x0
   20f04:	b.le	20f0c <set_program_name@@Base+0x29e8>
   20f08:	bl	af70 <abort@plt>
   20f0c:	ldr	x0, [sp, #72]
   20f10:	ldr	x0, [x0]
   20f14:	cmp	x0, #0x0
   20f18:	b.eq	20f2c <set_program_name@@Base+0x2a08>  // b.none
   20f1c:	ldr	x0, [sp, #72]
   20f20:	ldr	x0, [x0]
   20f24:	ldr	x0, [x0, #32]
   20f28:	b	20f30 <set_program_name@@Base+0x2a0c>
   20f2c:	mov	x0, #0x0                   	// #0
   20f30:	ldr	x1, [sp, #64]
   20f34:	add	x0, x0, x1
   20f38:	str	x0, [sp, #56]
   20f3c:	ldr	x0, [sp, #72]
   20f40:	ldr	x0, [x0]
   20f44:	str	x0, [sp, #72]
   20f48:	ldr	x0, [sp, #72]
   20f4c:	cmp	x0, #0x0
   20f50:	b.ne	20e94 <set_program_name@@Base+0x2970>  // b.any
   20f54:	ldr	x0, [sp, #56]
   20f58:	b	20f6c <set_program_name@@Base+0x2a48>
   20f5c:	ldr	x0, [sp, #72]
   20f60:	cmp	x0, #0x0
   20f64:	b.ne	20dd0 <set_program_name@@Base+0x28ac>  // b.any
   20f68:	mov	x0, #0xffffffffffffffff    	// #-1
   20f6c:	ldp	x29, x30, [sp], #80
   20f70:	ret
   20f74:	stp	x29, x30, [sp, #-128]!
   20f78:	mov	x29, sp
   20f7c:	str	x0, [sp, #56]
   20f80:	str	x1, [sp, #48]
   20f84:	str	x2, [sp, #40]
   20f88:	str	x3, [sp, #32]
   20f8c:	str	x4, [sp, #24]
   20f90:	ldr	x1, [sp, #40]
   20f94:	ldr	x0, [sp, #32]
   20f98:	cmp	x1, x0
   20f9c:	b.hi	20fd0 <set_program_name@@Base+0x2aac>  // b.pmore
   20fa0:	ldr	x0, [sp, #56]
   20fa4:	ldr	x0, [x0, #40]
   20fa8:	cmp	x0, #0x0
   20fac:	b.eq	20fc0 <set_program_name@@Base+0x2a9c>  // b.none
   20fb0:	ldr	x0, [sp, #56]
   20fb4:	ldr	x0, [x0, #40]
   20fb8:	ldr	x0, [x0, #32]
   20fbc:	b	20fc4 <set_program_name@@Base+0x2aa0>
   20fc0:	mov	x0, #0x0                   	// #0
   20fc4:	ldr	x1, [sp, #32]
   20fc8:	cmp	x0, x1
   20fcc:	b.cs	20fd4 <set_program_name@@Base+0x2ab0>  // b.hs, b.nlast
   20fd0:	bl	af70 <abort@plt>
   20fd4:	ldr	x0, [sp, #56]
   20fd8:	ldr	x0, [x0, #40]
   20fdc:	str	x0, [sp, #120]
   20fe0:	str	xzr, [sp, #112]
   20fe4:	b	2122c <set_program_name@@Base+0x2d08>
   20fe8:	ldr	x0, [sp, #120]
   20fec:	ldr	x0, [x0]
   20ff0:	cmp	x0, #0x0
   20ff4:	b.eq	21008 <set_program_name@@Base+0x2ae4>  // b.none
   20ff8:	ldr	x0, [sp, #120]
   20ffc:	ldr	x0, [x0]
   21000:	ldr	x0, [x0, #32]
   21004:	b	2100c <set_program_name@@Base+0x2ae8>
   21008:	mov	x0, #0x0                   	// #0
   2100c:	str	x0, [sp, #96]
   21010:	ldr	x1, [sp, #40]
   21014:	ldr	x0, [sp, #96]
   21018:	cmp	x1, x0
   2101c:	b.ls	2106c <set_program_name@@Base+0x2b48>  // b.plast
   21020:	ldr	x1, [sp, #40]
   21024:	ldr	x0, [sp, #96]
   21028:	sub	x0, x1, x0
   2102c:	sub	x0, x0, #0x1
   21030:	str	x0, [sp, #40]
   21034:	ldr	x1, [sp, #32]
   21038:	ldr	x0, [sp, #96]
   2103c:	sub	x0, x1, x0
   21040:	sub	x0, x0, #0x1
   21044:	str	x0, [sp, #32]
   21048:	ldr	x1, [sp, #96]
   2104c:	ldr	x0, [sp, #112]
   21050:	add	x0, x1, x0
   21054:	add	x0, x0, #0x1
   21058:	str	x0, [sp, #112]
   2105c:	ldr	x0, [sp, #120]
   21060:	ldr	x0, [x0, #8]
   21064:	str	x0, [sp, #120]
   21068:	b	2122c <set_program_name@@Base+0x2d08>
   2106c:	ldr	x1, [sp, #32]
   21070:	ldr	x0, [sp, #96]
   21074:	cmp	x1, x0
   21078:	b.hi	2108c <set_program_name@@Base+0x2b68>  // b.pmore
   2107c:	ldr	x0, [sp, #120]
   21080:	ldr	x0, [x0]
   21084:	str	x0, [sp, #120]
   21088:	b	2122c <set_program_name@@Base+0x2d08>
   2108c:	ldr	x0, [sp, #120]
   21090:	ldr	x0, [x0, #40]
   21094:	ldr	x2, [sp, #48]
   21098:	ldr	x1, [sp, #24]
   2109c:	blr	x2
   210a0:	str	w0, [sp, #92]
   210a4:	ldr	w0, [sp, #92]
   210a8:	cmp	w0, #0x0
   210ac:	b.ge	210ec <set_program_name@@Base+0x2bc8>  // b.tcont
   210b0:	str	xzr, [sp, #40]
   210b4:	ldr	x1, [sp, #32]
   210b8:	ldr	x0, [sp, #96]
   210bc:	sub	x0, x1, x0
   210c0:	sub	x0, x0, #0x1
   210c4:	str	x0, [sp, #32]
   210c8:	ldr	x1, [sp, #96]
   210cc:	ldr	x0, [sp, #112]
   210d0:	add	x0, x1, x0
   210d4:	add	x0, x0, #0x1
   210d8:	str	x0, [sp, #112]
   210dc:	ldr	x0, [sp, #120]
   210e0:	ldr	x0, [x0, #8]
   210e4:	str	x0, [sp, #120]
   210e8:	b	2122c <set_program_name@@Base+0x2d08>
   210ec:	ldr	w0, [sp, #92]
   210f0:	cmp	w0, #0x0
   210f4:	b.le	21108 <set_program_name@@Base+0x2be4>
   210f8:	ldr	x0, [sp, #120]
   210fc:	ldr	x0, [x0]
   21100:	str	x0, [sp, #120]
   21104:	b	2122c <set_program_name@@Base+0x2d08>
   21108:	ldr	x0, [sp, #120]
   2110c:	ldr	x0, [x0]
   21110:	cmp	x0, #0x0
   21114:	b.eq	21128 <set_program_name@@Base+0x2c04>  // b.none
   21118:	ldr	x0, [sp, #120]
   2111c:	ldr	x0, [x0]
   21120:	ldr	x0, [x0, #32]
   21124:	b	2112c <set_program_name@@Base+0x2c08>
   21128:	mov	x0, #0x0                   	// #0
   2112c:	ldr	x1, [sp, #112]
   21130:	add	x0, x0, x1
   21134:	str	x0, [sp, #104]
   21138:	ldr	x0, [sp, #120]
   2113c:	ldr	x0, [x0]
   21140:	str	x0, [sp, #120]
   21144:	b	21218 <set_program_name@@Base+0x2cf4>
   21148:	ldr	x0, [sp, #120]
   2114c:	ldr	x0, [x0]
   21150:	cmp	x0, #0x0
   21154:	b.eq	21168 <set_program_name@@Base+0x2c44>  // b.none
   21158:	ldr	x0, [sp, #120]
   2115c:	ldr	x0, [x0]
   21160:	ldr	x0, [x0, #32]
   21164:	b	2116c <set_program_name@@Base+0x2c48>
   21168:	mov	x0, #0x0                   	// #0
   2116c:	str	x0, [sp, #80]
   21170:	ldr	x1, [sp, #40]
   21174:	ldr	x0, [sp, #80]
   21178:	cmp	x1, x0
   2117c:	b.ls	211a4 <set_program_name@@Base+0x2c80>  // b.plast
   21180:	ldr	x1, [sp, #40]
   21184:	ldr	x0, [sp, #80]
   21188:	sub	x0, x1, x0
   2118c:	sub	x0, x0, #0x1
   21190:	str	x0, [sp, #40]
   21194:	ldr	x0, [sp, #120]
   21198:	ldr	x0, [x0, #8]
   2119c:	str	x0, [sp, #120]
   211a0:	b	21218 <set_program_name@@Base+0x2cf4>
   211a4:	ldr	x0, [sp, #120]
   211a8:	ldr	x0, [x0, #40]
   211ac:	ldr	x2, [sp, #48]
   211b0:	ldr	x1, [sp, #24]
   211b4:	blr	x2
   211b8:	str	w0, [sp, #76]
   211bc:	ldr	w0, [sp, #76]
   211c0:	cmp	w0, #0x0
   211c4:	b.ge	211ec <set_program_name@@Base+0x2cc8>  // b.tcont
   211c8:	ldr	x1, [sp, #80]
   211cc:	ldr	x0, [sp, #112]
   211d0:	add	x0, x1, x0
   211d4:	add	x0, x0, #0x1
   211d8:	str	x0, [sp, #112]
   211dc:	ldr	x0, [sp, #120]
   211e0:	ldr	x0, [x0, #8]
   211e4:	str	x0, [sp, #120]
   211e8:	b	21218 <set_program_name@@Base+0x2cf4>
   211ec:	ldr	w0, [sp, #76]
   211f0:	cmp	w0, #0x0
   211f4:	b.le	211fc <set_program_name@@Base+0x2cd8>
   211f8:	bl	af70 <abort@plt>
   211fc:	ldr	x1, [sp, #112]
   21200:	ldr	x0, [sp, #80]
   21204:	add	x0, x1, x0
   21208:	str	x0, [sp, #104]
   2120c:	ldr	x0, [sp, #120]
   21210:	ldr	x0, [x0]
   21214:	str	x0, [sp, #120]
   21218:	ldr	x0, [sp, #120]
   2121c:	cmp	x0, #0x0
   21220:	b.ne	21148 <set_program_name@@Base+0x2c24>  // b.any
   21224:	ldr	x0, [sp, #104]
   21228:	b	2123c <set_program_name@@Base+0x2d18>
   2122c:	ldr	x0, [sp, #120]
   21230:	cmp	x0, #0x0
   21234:	b.ne	20fe8 <set_program_name@@Base+0x2ac4>  // b.any
   21238:	mov	x0, #0xffffffffffffffff    	// #-1
   2123c:	ldp	x29, x30, [sp], #128
   21240:	ret
   21244:	stp	x29, x30, [sp, #-64]!
   21248:	mov	x29, sp
   2124c:	str	x0, [sp, #40]
   21250:	str	x1, [sp, #32]
   21254:	str	x2, [sp, #24]
   21258:	ldr	x0, [sp, #40]
   2125c:	ldr	x0, [x0, #40]
   21260:	str	x0, [sp, #56]
   21264:	ldr	x0, [sp, #56]
   21268:	cmp	x0, #0x0
   2126c:	b.ne	21280 <set_program_name@@Base+0x2d5c>  // b.any
   21270:	ldr	x1, [sp, #24]
   21274:	ldr	x0, [sp, #40]
   21278:	bl	1f5d0 <set_program_name@@Base+0x10ac>
   2127c:	b	21328 <set_program_name@@Base+0x2e04>
   21280:	ldr	x0, [sp, #56]
   21284:	ldr	x0, [x0, #40]
   21288:	ldr	x2, [sp, #32]
   2128c:	ldr	x1, [sp, #24]
   21290:	blr	x2
   21294:	str	w0, [sp, #52]
   21298:	ldr	w0, [sp, #52]
   2129c:	cmp	w0, #0x0
   212a0:	b.ge	212d8 <set_program_name@@Base+0x2db4>  // b.tcont
   212a4:	ldr	x0, [sp, #56]
   212a8:	ldr	x0, [x0, #8]
   212ac:	cmp	x0, #0x0
   212b0:	b.ne	212c8 <set_program_name@@Base+0x2da4>  // b.any
   212b4:	ldr	x2, [sp, #24]
   212b8:	ldr	x1, [sp, #56]
   212bc:	ldr	x0, [sp, #40]
   212c0:	bl	1f924 <set_program_name@@Base+0x1400>
   212c4:	b	21328 <set_program_name@@Base+0x2e04>
   212c8:	ldr	x0, [sp, #56]
   212cc:	ldr	x0, [x0, #8]
   212d0:	str	x0, [sp, #56]
   212d4:	b	21280 <set_program_name@@Base+0x2d5c>
   212d8:	ldr	w0, [sp, #52]
   212dc:	cmp	w0, #0x0
   212e0:	b.le	21318 <set_program_name@@Base+0x2df4>
   212e4:	ldr	x0, [sp, #56]
   212e8:	ldr	x0, [x0]
   212ec:	cmp	x0, #0x0
   212f0:	b.ne	21308 <set_program_name@@Base+0x2de4>  // b.any
   212f4:	ldr	x2, [sp, #24]
   212f8:	ldr	x1, [sp, #56]
   212fc:	ldr	x0, [sp, #40]
   21300:	bl	1f810 <set_program_name@@Base+0x12ec>
   21304:	b	21328 <set_program_name@@Base+0x2e04>
   21308:	ldr	x0, [sp, #56]
   2130c:	ldr	x0, [x0]
   21310:	str	x0, [sp, #56]
   21314:	b	21280 <set_program_name@@Base+0x2d5c>
   21318:	ldr	x2, [sp, #24]
   2131c:	ldr	x1, [sp, #56]
   21320:	ldr	x0, [sp, #40]
   21324:	bl	1f810 <set_program_name@@Base+0x12ec>
   21328:	ldp	x29, x30, [sp], #64
   2132c:	ret
   21330:	stp	x29, x30, [sp, #-64]!
   21334:	mov	x29, sp
   21338:	str	x0, [sp, #40]
   2133c:	str	x1, [sp, #32]
   21340:	str	x2, [sp, #24]
   21344:	ldr	x2, [sp, #24]
   21348:	ldr	x1, [sp, #32]
   2134c:	ldr	x0, [sp, #40]
   21350:	bl	20a34 <set_program_name@@Base+0x2510>
   21354:	str	x0, [sp, #56]
   21358:	ldr	x0, [sp, #56]
   2135c:	cmp	x0, #0x0
   21360:	b.eq	21378 <set_program_name@@Base+0x2e54>  // b.none
   21364:	ldr	x1, [sp, #56]
   21368:	ldr	x0, [sp, #40]
   2136c:	bl	2054c <set_program_name@@Base+0x2028>
   21370:	and	w0, w0, #0xff
   21374:	b	2137c <set_program_name@@Base+0x2e58>
   21378:	mov	w0, #0x0                   	// #0
   2137c:	ldp	x29, x30, [sp], #64
   21380:	ret
   21384:	stp	x29, x30, [sp, #-48]!
   21388:	mov	x29, sp
   2138c:	str	x0, [sp, #24]
   21390:	str	x1, [sp, #16]
   21394:	ldr	x0, [sp, #24]
   21398:	ldr	x0, [x0]
   2139c:	cmp	x0, #0x0
   213a0:	b.eq	213b8 <set_program_name@@Base+0x2e94>  // b.none
   213a4:	ldr	x0, [sp, #24]
   213a8:	ldr	x0, [x0]
   213ac:	ldr	x1, [sp, #24]
   213b0:	bl	21384 <set_program_name@@Base+0x2e60>
   213b4:	b	213bc <set_program_name@@Base+0x2e98>
   213b8:	mov	w0, #0x0                   	// #0
   213bc:	str	w0, [sp, #44]
   213c0:	ldr	x0, [sp, #24]
   213c4:	ldr	x0, [x0, #8]
   213c8:	cmp	x0, #0x0
   213cc:	b.eq	213e4 <set_program_name@@Base+0x2ec0>  // b.none
   213d0:	ldr	x0, [sp, #24]
   213d4:	ldr	x0, [x0, #8]
   213d8:	ldr	x1, [sp, #24]
   213dc:	bl	21384 <set_program_name@@Base+0x2e60>
   213e0:	b	213e8 <set_program_name@@Base+0x2ec4>
   213e4:	mov	w0, #0x0                   	// #0
   213e8:	str	w0, [sp, #40]
   213ec:	ldr	x0, [sp, #24]
   213f0:	ldr	x0, [x0, #16]
   213f4:	ldr	x1, [sp, #16]
   213f8:	cmp	x1, x0
   213fc:	b.eq	21404 <set_program_name@@Base+0x2ee0>  // b.none
   21400:	bl	af70 <abort@plt>
   21404:	ldr	x0, [sp, #24]
   21408:	ldr	x2, [x0, #32]
   2140c:	ldr	x0, [sp, #24]
   21410:	ldr	x0, [x0]
   21414:	cmp	x0, #0x0
   21418:	b.eq	21430 <set_program_name@@Base+0x2f0c>  // b.none
   2141c:	ldr	x0, [sp, #24]
   21420:	ldr	x0, [x0]
   21424:	ldr	x0, [x0, #32]
   21428:	add	x0, x0, #0x1
   2142c:	b	21434 <set_program_name@@Base+0x2f10>
   21430:	mov	x0, #0x1                   	// #1
   21434:	ldr	x1, [sp, #24]
   21438:	ldr	x1, [x1, #8]
   2143c:	cmp	x1, #0x0
   21440:	b.eq	21454 <set_program_name@@Base+0x2f30>  // b.none
   21444:	ldr	x1, [sp, #24]
   21448:	ldr	x1, [x1, #8]
   2144c:	ldr	x1, [x1, #32]
   21450:	b	21458 <set_program_name@@Base+0x2f34>
   21454:	mov	x1, #0x0                   	// #0
   21458:	add	x0, x0, x1
   2145c:	cmp	x2, x0
   21460:	b.eq	21468 <set_program_name@@Base+0x2f44>  // b.none
   21464:	bl	af70 <abort@plt>
   21468:	ldr	x0, [sp, #24]
   2146c:	ldr	w0, [x0, #24]
   21470:	cmp	w0, #0x0
   21474:	b.eq	2148c <set_program_name@@Base+0x2f68>  // b.none
   21478:	ldr	x0, [sp, #24]
   2147c:	ldr	w0, [x0, #24]
   21480:	cmp	w0, #0x1
   21484:	b.eq	2148c <set_program_name@@Base+0x2f68>  // b.none
   21488:	bl	af70 <abort@plt>
   2148c:	ldr	x0, [sp, #16]
   21490:	cmp	x0, #0x0
   21494:	b.ne	214ac <set_program_name@@Base+0x2f88>  // b.any
   21498:	ldr	x0, [sp, #24]
   2149c:	ldr	w0, [x0, #24]
   214a0:	cmp	w0, #0x0
   214a4:	b.eq	214ac <set_program_name@@Base+0x2f88>  // b.none
   214a8:	bl	af70 <abort@plt>
   214ac:	ldr	w1, [sp, #44]
   214b0:	ldr	w0, [sp, #40]
   214b4:	cmp	w1, w0
   214b8:	b.eq	214c0 <set_program_name@@Base+0x2f9c>  // b.none
   214bc:	bl	af70 <abort@plt>
   214c0:	ldr	x0, [sp, #24]
   214c4:	ldr	w0, [x0, #24]
   214c8:	cmp	w0, #0x0
   214cc:	b.ne	214d8 <set_program_name@@Base+0x2fb4>  // b.any
   214d0:	mov	w0, #0x1                   	// #1
   214d4:	b	214dc <set_program_name@@Base+0x2fb8>
   214d8:	mov	w0, #0x0                   	// #0
   214dc:	ldr	w1, [sp, #44]
   214e0:	add	w0, w0, w1
   214e4:	ldp	x29, x30, [sp], #48
   214e8:	ret

00000000000214ec <gl_rbtree_list_check_invariants@@Base>:
   214ec:	stp	x29, x30, [sp, #-32]!
   214f0:	mov	x29, sp
   214f4:	str	x0, [sp, #24]
   214f8:	ldr	x0, [sp, #24]
   214fc:	ldr	x0, [x0, #40]
   21500:	cmp	x0, #0x0
   21504:	b.eq	21518 <gl_rbtree_list_check_invariants@@Base+0x2c>  // b.none
   21508:	ldr	x0, [sp, #24]
   2150c:	ldr	x0, [x0, #40]
   21510:	mov	x1, #0x0                   	// #0
   21514:	bl	21384 <set_program_name@@Base+0x2e60>
   21518:	nop
   2151c:	ldp	x29, x30, [sp], #32
   21520:	ret
   21524:	stp	x29, x30, [sp, #-32]!
   21528:	mov	x29, sp
   2152c:	str	w0, [sp, #28]
   21530:	bl	b640 <__errno_location@plt>
   21534:	mov	x1, x0
   21538:	ldr	w0, [sp, #28]
   2153c:	str	w0, [x1]
   21540:	mov	w0, #0xffffffff            	// #-1
   21544:	ldp	x29, x30, [sp], #32
   21548:	ret

000000000002154c <renameatu@@Base>:
   2154c:	stp	x29, x30, [sp, #-368]!
   21550:	mov	x29, sp
   21554:	str	w0, [sp, #44]
   21558:	str	x1, [sp, #32]
   2155c:	str	w2, [sp, #40]
   21560:	str	x3, [sp, #24]
   21564:	str	w4, [sp, #20]
   21568:	mov	w0, #0xffffffff            	// #-1
   2156c:	str	w0, [sp, #360]
   21570:	mov	w0, #0x16                  	// #22
   21574:	str	w0, [sp, #356]
   21578:	ldr	w4, [sp, #20]
   2157c:	ldr	x3, [sp, #24]
   21580:	ldr	w2, [sp, #40]
   21584:	ldr	x1, [sp, #32]
   21588:	ldr	w0, [sp, #44]
   2158c:	bl	b140 <renameat2@plt>
   21590:	str	w0, [sp, #360]
   21594:	bl	b640 <__errno_location@plt>
   21598:	ldr	w0, [x0]
   2159c:	str	w0, [sp, #356]
   215a0:	ldr	w0, [sp, #360]
   215a4:	cmp	w0, #0x0
   215a8:	b.ge	215d0 <renameatu@@Base+0x84>  // b.tcont
   215ac:	ldr	w0, [sp, #356]
   215b0:	cmp	w0, #0x16
   215b4:	b.eq	215d8 <renameatu@@Base+0x8c>  // b.none
   215b8:	ldr	w0, [sp, #356]
   215bc:	cmp	w0, #0x26
   215c0:	b.eq	215d8 <renameatu@@Base+0x8c>  // b.none
   215c4:	ldr	w0, [sp, #356]
   215c8:	cmp	w0, #0x5f
   215cc:	b.eq	215d8 <renameatu@@Base+0x8c>  // b.none
   215d0:	ldr	w0, [sp, #360]
   215d4:	b	21870 <renameatu@@Base+0x324>
   215d8:	ldr	x0, [sp, #32]
   215dc:	str	x0, [sp, #344]
   215e0:	ldr	x0, [sp, #24]
   215e4:	str	x0, [sp, #336]
   215e8:	mov	w0, #0x14                  	// #20
   215ec:	str	w0, [sp, #332]
   215f0:	strb	wzr, [sp, #367]
   215f4:	ldr	w0, [sp, #20]
   215f8:	cmp	w0, #0x0
   215fc:	b.eq	21674 <renameatu@@Base+0x128>  // b.none
   21600:	ldr	w0, [sp, #20]
   21604:	and	w0, w0, #0xfffffffe
   21608:	cmp	w0, #0x0
   2160c:	b.eq	2161c <renameatu@@Base+0xd0>  // b.none
   21610:	mov	w0, #0x5f                  	// #95
   21614:	bl	21524 <gl_rbtree_list_check_invariants@@Base+0x38>
   21618:	b	21870 <renameatu@@Base+0x324>
   2161c:	add	x0, sp, #0xb0
   21620:	mov	x2, x0
   21624:	ldr	x1, [sp, #24]
   21628:	ldr	w0, [sp, #40]
   2162c:	bl	ad00 <lstatat@plt>
   21630:	cmp	w0, #0x0
   21634:	b.eq	21648 <renameatu@@Base+0xfc>  // b.none
   21638:	bl	b640 <__errno_location@plt>
   2163c:	ldr	w0, [x0]
   21640:	cmp	w0, #0x4b
   21644:	b.ne	21654 <renameatu@@Base+0x108>  // b.any
   21648:	mov	w0, #0x11                  	// #17
   2164c:	bl	21524 <gl_rbtree_list_check_invariants@@Base+0x38>
   21650:	b	21870 <renameatu@@Base+0x324>
   21654:	bl	b640 <__errno_location@plt>
   21658:	ldr	w0, [x0]
   2165c:	cmp	w0, #0x2
   21660:	b.eq	2166c <renameatu@@Base+0x120>  // b.none
   21664:	mov	w0, #0xffffffff            	// #-1
   21668:	b	21870 <renameatu@@Base+0x324>
   2166c:	mov	w0, #0x1                   	// #1
   21670:	strb	w0, [sp, #367]
   21674:	ldr	x0, [sp, #32]
   21678:	bl	a820 <strlen@plt>
   2167c:	str	x0, [sp, #320]
   21680:	ldr	x0, [sp, #24]
   21684:	bl	a820 <strlen@plt>
   21688:	str	x0, [sp, #312]
   2168c:	ldr	x0, [sp, #320]
   21690:	cmp	x0, #0x0
   21694:	b.eq	216a4 <renameatu@@Base+0x158>  // b.none
   21698:	ldr	x0, [sp, #312]
   2169c:	cmp	x0, #0x0
   216a0:	b.ne	216bc <renameatu@@Base+0x170>  // b.any
   216a4:	ldr	x3, [sp, #24]
   216a8:	ldr	w2, [sp, #40]
   216ac:	ldr	x1, [sp, #32]
   216b0:	ldr	w0, [sp, #44]
   216b4:	bl	b180 <renameat@plt>
   216b8:	b	21870 <renameatu@@Base+0x324>
   216bc:	ldr	x0, [sp, #320]
   216c0:	sub	x0, x0, #0x1
   216c4:	ldr	x1, [sp, #32]
   216c8:	add	x0, x1, x0
   216cc:	ldrb	w0, [x0]
   216d0:	cmp	w0, #0x2f
   216d4:	cset	w0, eq  // eq = none
   216d8:	strb	w0, [sp, #311]
   216dc:	ldr	x0, [sp, #312]
   216e0:	sub	x0, x0, #0x1
   216e4:	ldr	x1, [sp, #24]
   216e8:	add	x0, x1, x0
   216ec:	ldrb	w0, [x0]
   216f0:	cmp	w0, #0x2f
   216f4:	cset	w0, eq  // eq = none
   216f8:	strb	w0, [sp, #310]
   216fc:	ldrb	w0, [sp, #311]
   21700:	eor	w0, w0, #0x1
   21704:	and	w0, w0, #0xff
   21708:	cmp	w0, #0x0
   2170c:	b.eq	2173c <renameatu@@Base+0x1f0>  // b.none
   21710:	ldrb	w0, [sp, #310]
   21714:	eor	w0, w0, #0x1
   21718:	and	w0, w0, #0xff
   2171c:	cmp	w0, #0x0
   21720:	b.eq	2173c <renameatu@@Base+0x1f0>  // b.none
   21724:	ldr	x3, [sp, #24]
   21728:	ldr	w2, [sp, #40]
   2172c:	ldr	x1, [sp, #32]
   21730:	ldr	w0, [sp, #44]
   21734:	bl	b180 <renameat@plt>
   21738:	b	21870 <renameatu@@Base+0x324>
   2173c:	add	x0, sp, #0x30
   21740:	mov	x2, x0
   21744:	ldr	x1, [sp, #32]
   21748:	ldr	w0, [sp, #44]
   2174c:	bl	ad00 <lstatat@plt>
   21750:	cmp	w0, #0x0
   21754:	b.eq	21760 <renameatu@@Base+0x214>  // b.none
   21758:	mov	w0, #0xffffffff            	// #-1
   2175c:	b	21870 <renameatu@@Base+0x324>
   21760:	ldrb	w0, [sp, #367]
   21764:	cmp	w0, #0x0
   21768:	b.eq	21788 <renameatu@@Base+0x23c>  // b.none
   2176c:	ldr	w0, [sp, #64]
   21770:	and	w0, w0, #0xf000
   21774:	cmp	w0, #0x4, lsl #12
   21778:	b.eq	21804 <renameatu@@Base+0x2b8>  // b.none
   2177c:	mov	w0, #0x2                   	// #2
   21780:	bl	21524 <gl_rbtree_list_check_invariants@@Base+0x38>
   21784:	b	21870 <renameatu@@Base+0x324>
   21788:	add	x0, sp, #0xb0
   2178c:	mov	x2, x0
   21790:	ldr	x1, [sp, #24]
   21794:	ldr	w0, [sp, #40]
   21798:	bl	ad00 <lstatat@plt>
   2179c:	cmp	w0, #0x0
   217a0:	b.eq	217cc <renameatu@@Base+0x280>  // b.none
   217a4:	bl	b640 <__errno_location@plt>
   217a8:	ldr	w0, [x0]
   217ac:	cmp	w0, #0x2
   217b0:	b.ne	217c4 <renameatu@@Base+0x278>  // b.any
   217b4:	ldr	w0, [sp, #64]
   217b8:	and	w0, w0, #0xf000
   217bc:	cmp	w0, #0x4, lsl #12
   217c0:	b.eq	21804 <renameatu@@Base+0x2b8>  // b.none
   217c4:	mov	w0, #0xffffffff            	// #-1
   217c8:	b	21870 <renameatu@@Base+0x324>
   217cc:	ldr	w0, [sp, #192]
   217d0:	and	w0, w0, #0xf000
   217d4:	cmp	w0, #0x4, lsl #12
   217d8:	b.eq	217e8 <renameatu@@Base+0x29c>  // b.none
   217dc:	mov	w0, #0x14                  	// #20
   217e0:	bl	21524 <gl_rbtree_list_check_invariants@@Base+0x38>
   217e4:	b	21870 <renameatu@@Base+0x324>
   217e8:	ldr	w0, [sp, #64]
   217ec:	and	w0, w0, #0xf000
   217f0:	cmp	w0, #0x4, lsl #12
   217f4:	b.eq	21804 <renameatu@@Base+0x2b8>  // b.none
   217f8:	mov	w0, #0x15                  	// #21
   217fc:	bl	21524 <gl_rbtree_list_check_invariants@@Base+0x38>
   21800:	b	21870 <renameatu@@Base+0x324>
   21804:	ldr	x3, [sp, #336]
   21808:	ldr	w2, [sp, #40]
   2180c:	ldr	x1, [sp, #344]
   21810:	ldr	w0, [sp, #44]
   21814:	bl	b180 <renameat@plt>
   21818:	str	w0, [sp, #360]
   2181c:	bl	b640 <__errno_location@plt>
   21820:	ldr	w0, [x0]
   21824:	str	w0, [sp, #332]
   21828:	nop
   2182c:	ldr	x1, [sp, #344]
   21830:	ldr	x0, [sp, #32]
   21834:	cmp	x1, x0
   21838:	b.eq	21844 <renameatu@@Base+0x2f8>  // b.none
   2183c:	ldr	x0, [sp, #344]
   21840:	bl	b130 <free@plt>
   21844:	ldr	x1, [sp, #336]
   21848:	ldr	x0, [sp, #24]
   2184c:	cmp	x1, x0
   21850:	b.eq	2185c <renameatu@@Base+0x310>  // b.none
   21854:	ldr	x0, [sp, #336]
   21858:	bl	b130 <free@plt>
   2185c:	bl	b640 <__errno_location@plt>
   21860:	mov	x1, x0
   21864:	ldr	w0, [sp, #332]
   21868:	str	w0, [x1]
   2186c:	ldr	w0, [sp, #360]
   21870:	ldp	x29, x30, [sp], #368
   21874:	ret

0000000000021878 <same_name@@Base>:
   21878:	stp	x29, x30, [sp, #-32]!
   2187c:	mov	x29, sp
   21880:	str	x0, [sp, #24]
   21884:	str	x1, [sp, #16]
   21888:	ldr	x3, [sp, #16]
   2188c:	mov	w2, #0xffffff9c            	// #-100
   21890:	ldr	x1, [sp, #24]
   21894:	mov	w0, #0xffffff9c            	// #-100
   21898:	bl	a7f0 <same_nameat@plt>
   2189c:	and	w0, w0, #0xff
   218a0:	ldp	x29, x30, [sp], #32
   218a4:	ret

00000000000218a8 <same_nameat@@Base>:
   218a8:	stp	x29, x30, [sp, #-384]!
   218ac:	mov	x29, sp
   218b0:	str	w0, [sp, #44]
   218b4:	str	x1, [sp, #32]
   218b8:	str	w2, [sp, #40]
   218bc:	str	x3, [sp, #24]
   218c0:	ldr	x0, [sp, #32]
   218c4:	bl	ad90 <last_component@plt>
   218c8:	str	x0, [sp, #368]
   218cc:	ldr	x0, [sp, #24]
   218d0:	bl	ad90 <last_component@plt>
   218d4:	str	x0, [sp, #360]
   218d8:	ldr	x0, [sp, #368]
   218dc:	bl	a770 <base_len@plt>
   218e0:	str	x0, [sp, #352]
   218e4:	ldr	x0, [sp, #360]
   218e8:	bl	a770 <base_len@plt>
   218ec:	str	x0, [sp, #344]
   218f0:	ldr	x1, [sp, #352]
   218f4:	ldr	x0, [sp, #344]
   218f8:	cmp	x1, x0
   218fc:	b.ne	21920 <same_nameat@@Base+0x78>  // b.any
   21900:	ldr	x2, [sp, #344]
   21904:	ldr	x1, [sp, #360]
   21908:	ldr	x0, [sp, #368]
   2190c:	bl	b000 <memcmp@plt>
   21910:	cmp	w0, #0x0
   21914:	b.ne	21920 <same_nameat@@Base+0x78>  // b.any
   21918:	mov	w0, #0x1                   	// #1
   2191c:	b	21924 <same_nameat@@Base+0x7c>
   21920:	mov	w0, #0x0                   	// #0
   21924:	strb	w0, [sp, #343]
   21928:	ldrb	w0, [sp, #343]
   2192c:	and	w0, w0, #0x1
   21930:	strb	w0, [sp, #343]
   21934:	ldrb	w0, [sp, #343]
   21938:	strb	w0, [sp, #342]
   2193c:	strb	wzr, [sp, #383]
   21940:	ldrb	w0, [sp, #342]
   21944:	cmp	w0, #0x0
   21948:	b.eq	21a30 <same_nameat@@Base+0x188>  // b.none
   2194c:	ldr	x0, [sp, #32]
   21950:	bl	ac00 <dir_name@plt>
   21954:	str	x0, [sp, #328]
   21958:	mov	w0, #0x100                 	// #256
   2195c:	str	w0, [sp, #324]
   21960:	add	x0, sp, #0x38
   21964:	ldr	w3, [sp, #324]
   21968:	mov	x2, x0
   2196c:	ldr	x1, [sp, #328]
   21970:	ldr	w0, [sp, #44]
   21974:	bl	423a0 <vasnprintf@@Base+0x21a4>
   21978:	cmp	w0, #0x0
   2197c:	b.eq	2199c <same_nameat@@Base+0xf4>  // b.none
   21980:	bl	b640 <__errno_location@plt>
   21984:	ldr	w1, [x0]
   21988:	ldr	x3, [sp, #328]
   2198c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   21990:	add	x2, x0, #0xd90
   21994:	mov	w0, #0x1                   	// #1
   21998:	bl	a850 <error@plt>
   2199c:	ldr	x0, [sp, #328]
   219a0:	bl	b130 <free@plt>
   219a4:	ldr	x0, [sp, #24]
   219a8:	bl	ac00 <dir_name@plt>
   219ac:	str	x0, [sp, #312]
   219b0:	add	x0, sp, #0xb8
   219b4:	ldr	w3, [sp, #324]
   219b8:	mov	x2, x0
   219bc:	ldr	x1, [sp, #312]
   219c0:	ldr	w0, [sp, #40]
   219c4:	bl	423a0 <vasnprintf@@Base+0x21a4>
   219c8:	cmp	w0, #0x0
   219cc:	b.eq	219ec <same_nameat@@Base+0x144>  // b.none
   219d0:	bl	b640 <__errno_location@plt>
   219d4:	ldr	w1, [x0]
   219d8:	ldr	x3, [sp, #312]
   219dc:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   219e0:	add	x2, x0, #0xd90
   219e4:	mov	w0, #0x1                   	// #1
   219e8:	bl	a850 <error@plt>
   219ec:	ldr	x1, [sp, #64]
   219f0:	ldr	x0, [sp, #192]
   219f4:	cmp	x1, x0
   219f8:	b.ne	21a14 <same_nameat@@Base+0x16c>  // b.any
   219fc:	ldr	x1, [sp, #56]
   21a00:	ldr	x0, [sp, #184]
   21a04:	cmp	x1, x0
   21a08:	b.ne	21a14 <same_nameat@@Base+0x16c>  // b.any
   21a0c:	mov	w0, #0x1                   	// #1
   21a10:	b	21a18 <same_nameat@@Base+0x170>
   21a14:	mov	w0, #0x0                   	// #0
   21a18:	strb	w0, [sp, #383]
   21a1c:	ldrb	w0, [sp, #383]
   21a20:	and	w0, w0, #0x1
   21a24:	strb	w0, [sp, #383]
   21a28:	ldr	x0, [sp, #312]
   21a2c:	bl	b130 <free@plt>
   21a30:	ldrb	w0, [sp, #383]
   21a34:	ldp	x29, x30, [sp], #384
   21a38:	ret

0000000000021a3c <save_cwd@@Base>:
   21a3c:	stp	x29, x30, [sp, #-32]!
   21a40:	mov	x29, sp
   21a44:	str	x0, [sp, #24]
   21a48:	ldr	x0, [sp, #24]
   21a4c:	str	xzr, [x0, #8]
   21a50:	mov	w1, #0x80000               	// #524288
   21a54:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   21a58:	add	x0, x0, #0xd98
   21a5c:	bl	abd0 <open@plt>
   21a60:	mov	w1, w0
   21a64:	ldr	x0, [sp, #24]
   21a68:	str	w1, [x0]
   21a6c:	ldr	x0, [sp, #24]
   21a70:	ldr	w0, [x0]
   21a74:	mov	w1, #0x80000               	// #524288
   21a78:	bl	b5c0 <fd_safer_flag@plt>
   21a7c:	mov	w1, w0
   21a80:	ldr	x0, [sp, #24]
   21a84:	str	w1, [x0]
   21a88:	ldr	x0, [sp, #24]
   21a8c:	ldr	w0, [x0]
   21a90:	cmp	w0, #0x0
   21a94:	b.ge	21ad0 <save_cwd@@Base+0x94>  // b.tcont
   21a98:	mov	x1, #0x0                   	// #0
   21a9c:	mov	x0, #0x0                   	// #0
   21aa0:	bl	a7e0 <getcwd@plt>
   21aa4:	mov	x1, x0
   21aa8:	ldr	x0, [sp, #24]
   21aac:	str	x1, [x0, #8]
   21ab0:	ldr	x0, [sp, #24]
   21ab4:	ldr	x0, [x0, #8]
   21ab8:	cmp	x0, #0x0
   21abc:	b.eq	21ac8 <save_cwd@@Base+0x8c>  // b.none
   21ac0:	mov	w0, #0x0                   	// #0
   21ac4:	b	21ad4 <save_cwd@@Base+0x98>
   21ac8:	mov	w0, #0xffffffff            	// #-1
   21acc:	b	21ad4 <save_cwd@@Base+0x98>
   21ad0:	mov	w0, #0x0                   	// #0
   21ad4:	ldp	x29, x30, [sp], #32
   21ad8:	ret

0000000000021adc <restore_cwd@@Base>:
   21adc:	stp	x29, x30, [sp, #-32]!
   21ae0:	mov	x29, sp
   21ae4:	str	x0, [sp, #24]
   21ae8:	ldr	x0, [sp, #24]
   21aec:	ldr	w0, [x0]
   21af0:	cmp	w0, #0x0
   21af4:	b.lt	21b08 <restore_cwd@@Base+0x2c>  // b.tstop
   21af8:	ldr	x0, [sp, #24]
   21afc:	ldr	w0, [x0]
   21b00:	bl	a870 <fchdir@plt>
   21b04:	b	21b14 <restore_cwd@@Base+0x38>
   21b08:	ldr	x0, [sp, #24]
   21b0c:	ldr	x0, [x0, #8]
   21b10:	bl	a930 <chdir_long@plt>
   21b14:	ldp	x29, x30, [sp], #32
   21b18:	ret

0000000000021b1c <free_cwd@@Base>:
   21b1c:	stp	x29, x30, [sp, #-32]!
   21b20:	mov	x29, sp
   21b24:	str	x0, [sp, #24]
   21b28:	ldr	x0, [sp, #24]
   21b2c:	ldr	w0, [x0]
   21b30:	cmp	w0, #0x0
   21b34:	b.lt	21b44 <free_cwd@@Base+0x28>  // b.tstop
   21b38:	ldr	x0, [sp, #24]
   21b3c:	ldr	w0, [x0]
   21b40:	bl	ae80 <close@plt>
   21b44:	ldr	x0, [sp, #24]
   21b48:	ldr	x0, [x0, #8]
   21b4c:	bl	b130 <free@plt>
   21b50:	nop
   21b54:	ldp	x29, x30, [sp], #32
   21b58:	ret
   21b5c:	sub	sp, sp, #0x10
   21b60:	str	x0, [sp, #8]
   21b64:	ldr	x0, [sp, #8]
   21b68:	add	x1, x0, #0x10
   21b6c:	ldr	x0, [sp, #8]
   21b70:	str	x1, [x0]
   21b74:	ldr	x0, [sp, #8]
   21b78:	mov	x1, #0x400                 	// #1024
   21b7c:	str	x1, [x0, #8]
   21b80:	nop
   21b84:	add	sp, sp, #0x10
   21b88:	ret
   21b8c:	stp	x29, x30, [sp, #-32]!
   21b90:	mov	x29, sp
   21b94:	str	x0, [sp, #24]
   21b98:	ldr	x0, [sp, #24]
   21b9c:	ldr	x1, [x0]
   21ba0:	ldr	x0, [sp, #24]
   21ba4:	add	x0, x0, #0x10
   21ba8:	cmp	x1, x0
   21bac:	b.eq	21bbc <free_cwd@@Base+0xa0>  // b.none
   21bb0:	ldr	x0, [sp, #24]
   21bb4:	ldr	x0, [x0]
   21bb8:	bl	b130 <free@plt>
   21bbc:	nop
   21bc0:	ldp	x29, x30, [sp], #32
   21bc4:	ret

0000000000021bc8 <gl_scratch_buffer_grow@@Base>:
   21bc8:	stp	x29, x30, [sp, #-48]!
   21bcc:	mov	x29, sp
   21bd0:	str	x0, [sp, #24]
   21bd4:	ldr	x0, [sp, #24]
   21bd8:	ldr	x0, [x0, #8]
   21bdc:	lsl	x0, x0, #1
   21be0:	str	x0, [sp, #32]
   21be4:	ldr	x0, [sp, #24]
   21be8:	bl	21b8c <free_cwd@@Base+0x70>
   21bec:	ldr	x0, [sp, #24]
   21bf0:	ldr	x0, [x0, #8]
   21bf4:	ldr	x1, [sp, #32]
   21bf8:	cmp	x1, x0
   21bfc:	cset	w0, cs  // cs = hs, nlast
   21c00:	and	w0, w0, #0xff
   21c04:	and	x0, x0, #0xff
   21c08:	cmp	x0, #0x0
   21c0c:	b.eq	21c20 <gl_scratch_buffer_grow@@Base+0x58>  // b.none
   21c10:	ldr	x0, [sp, #32]
   21c14:	bl	ab40 <malloc@plt>
   21c18:	str	x0, [sp, #40]
   21c1c:	b	21c34 <gl_scratch_buffer_grow@@Base+0x6c>
   21c20:	bl	b640 <__errno_location@plt>
   21c24:	mov	x1, x0
   21c28:	mov	w0, #0xc                   	// #12
   21c2c:	str	w0, [x1]
   21c30:	str	xzr, [sp, #40]
   21c34:	ldr	x0, [sp, #40]
   21c38:	cmp	x0, #0x0
   21c3c:	cset	w0, eq  // eq = none
   21c40:	and	w0, w0, #0xff
   21c44:	and	x0, x0, #0xff
   21c48:	cmp	x0, #0x0
   21c4c:	b.eq	21c60 <gl_scratch_buffer_grow@@Base+0x98>  // b.none
   21c50:	ldr	x0, [sp, #24]
   21c54:	bl	21b5c <free_cwd@@Base+0x40>
   21c58:	mov	w0, #0x0                   	// #0
   21c5c:	b	21c7c <gl_scratch_buffer_grow@@Base+0xb4>
   21c60:	ldr	x0, [sp, #24]
   21c64:	ldr	x1, [sp, #40]
   21c68:	str	x1, [x0]
   21c6c:	ldr	x0, [sp, #24]
   21c70:	ldr	x1, [sp, #32]
   21c74:	str	x1, [x0, #8]
   21c78:	mov	w0, #0x1                   	// #1
   21c7c:	ldp	x29, x30, [sp], #48
   21c80:	ret
   21c84:	sub	sp, sp, #0x10
   21c88:	str	x0, [sp, #8]
   21c8c:	ldr	x0, [sp, #8]
   21c90:	add	x1, x0, #0x10
   21c94:	ldr	x0, [sp, #8]
   21c98:	str	x1, [x0]
   21c9c:	ldr	x0, [sp, #8]
   21ca0:	mov	x1, #0x400                 	// #1024
   21ca4:	str	x1, [x0, #8]
   21ca8:	nop
   21cac:	add	sp, sp, #0x10
   21cb0:	ret

0000000000021cb4 <gl_scratch_buffer_grow_preserve@@Base>:
   21cb4:	stp	x29, x30, [sp, #-48]!
   21cb8:	mov	x29, sp
   21cbc:	str	x0, [sp, #24]
   21cc0:	ldr	x0, [sp, #24]
   21cc4:	ldr	x0, [x0, #8]
   21cc8:	lsl	x0, x0, #1
   21ccc:	str	x0, [sp, #32]
   21cd0:	ldr	x0, [sp, #24]
   21cd4:	ldr	x1, [x0]
   21cd8:	ldr	x0, [sp, #24]
   21cdc:	add	x0, x0, #0x10
   21ce0:	cmp	x1, x0
   21ce4:	b.ne	21d28 <gl_scratch_buffer_grow_preserve@@Base+0x74>  // b.any
   21ce8:	ldr	x0, [sp, #32]
   21cec:	bl	ab40 <malloc@plt>
   21cf0:	str	x0, [sp, #40]
   21cf4:	ldr	x0, [sp, #40]
   21cf8:	cmp	x0, #0x0
   21cfc:	b.ne	21d08 <gl_scratch_buffer_grow_preserve@@Base+0x54>  // b.any
   21d00:	mov	w0, #0x0                   	// #0
   21d04:	b	21dcc <gl_scratch_buffer_grow_preserve@@Base+0x118>
   21d08:	ldr	x0, [sp, #24]
   21d0c:	add	x1, x0, #0x10
   21d10:	ldr	x0, [sp, #24]
   21d14:	ldr	x0, [x0, #8]
   21d18:	mov	x2, x0
   21d1c:	ldr	x0, [sp, #40]
   21d20:	bl	a790 <memcpy@plt>
   21d24:	b	21db0 <gl_scratch_buffer_grow_preserve@@Base+0xfc>
   21d28:	ldr	x0, [sp, #24]
   21d2c:	ldr	x0, [x0, #8]
   21d30:	ldr	x1, [sp, #32]
   21d34:	cmp	x1, x0
   21d38:	cset	w0, cs  // cs = hs, nlast
   21d3c:	and	w0, w0, #0xff
   21d40:	and	x0, x0, #0xff
   21d44:	cmp	x0, #0x0
   21d48:	b.eq	21d64 <gl_scratch_buffer_grow_preserve@@Base+0xb0>  // b.none
   21d4c:	ldr	x0, [sp, #24]
   21d50:	ldr	x0, [x0]
   21d54:	ldr	x1, [sp, #32]
   21d58:	bl	ae00 <realloc@plt>
   21d5c:	str	x0, [sp, #40]
   21d60:	b	21d78 <gl_scratch_buffer_grow_preserve@@Base+0xc4>
   21d64:	bl	b640 <__errno_location@plt>
   21d68:	mov	x1, x0
   21d6c:	mov	w0, #0xc                   	// #12
   21d70:	str	w0, [x1]
   21d74:	str	xzr, [sp, #40]
   21d78:	ldr	x0, [sp, #40]
   21d7c:	cmp	x0, #0x0
   21d80:	cset	w0, eq  // eq = none
   21d84:	and	w0, w0, #0xff
   21d88:	and	x0, x0, #0xff
   21d8c:	cmp	x0, #0x0
   21d90:	b.eq	21db0 <gl_scratch_buffer_grow_preserve@@Base+0xfc>  // b.none
   21d94:	ldr	x0, [sp, #24]
   21d98:	ldr	x0, [x0]
   21d9c:	bl	b130 <free@plt>
   21da0:	ldr	x0, [sp, #24]
   21da4:	bl	21c84 <gl_scratch_buffer_grow@@Base+0xbc>
   21da8:	mov	w0, #0x0                   	// #0
   21dac:	b	21dcc <gl_scratch_buffer_grow_preserve@@Base+0x118>
   21db0:	ldr	x0, [sp, #24]
   21db4:	ldr	x1, [sp, #40]
   21db8:	str	x1, [x0]
   21dbc:	ldr	x0, [sp, #24]
   21dc0:	ldr	x1, [sp, #32]
   21dc4:	str	x1, [x0, #8]
   21dc8:	mov	w0, #0x1                   	// #1
   21dcc:	ldp	x29, x30, [sp], #48
   21dd0:	ret
   21dd4:	sub	sp, sp, #0x10
   21dd8:	str	x0, [sp, #8]
   21ddc:	ldr	x0, [sp, #8]
   21de0:	add	x1, x0, #0x10
   21de4:	ldr	x0, [sp, #8]
   21de8:	str	x1, [x0]
   21dec:	ldr	x0, [sp, #8]
   21df0:	mov	x1, #0x400                 	// #1024
   21df4:	str	x1, [x0, #8]
   21df8:	nop
   21dfc:	add	sp, sp, #0x10
   21e00:	ret
   21e04:	stp	x29, x30, [sp, #-32]!
   21e08:	mov	x29, sp
   21e0c:	str	x0, [sp, #24]
   21e10:	ldr	x0, [sp, #24]
   21e14:	ldr	x1, [x0]
   21e18:	ldr	x0, [sp, #24]
   21e1c:	add	x0, x0, #0x10
   21e20:	cmp	x1, x0
   21e24:	b.eq	21e34 <gl_scratch_buffer_grow_preserve@@Base+0x180>  // b.none
   21e28:	ldr	x0, [sp, #24]
   21e2c:	ldr	x0, [x0]
   21e30:	bl	b130 <free@plt>
   21e34:	nop
   21e38:	ldp	x29, x30, [sp], #32
   21e3c:	ret

0000000000021e40 <gl_scratch_buffer_set_array_size@@Base>:
   21e40:	stp	x29, x30, [sp, #-64]!
   21e44:	mov	x29, sp
   21e48:	str	x0, [sp, #40]
   21e4c:	str	x1, [sp, #32]
   21e50:	str	x2, [sp, #24]
   21e54:	ldr	x1, [sp, #32]
   21e58:	ldr	x0, [sp, #24]
   21e5c:	mul	x0, x1, x0
   21e60:	str	x0, [sp, #56]
   21e64:	ldr	x1, [sp, #32]
   21e68:	ldr	x0, [sp, #24]
   21e6c:	orr	x0, x1, x0
   21e70:	lsr	x0, x0, #32
   21e74:	cmp	x0, #0x0
   21e78:	b.eq	21ec8 <gl_scratch_buffer_set_array_size@@Base+0x88>  // b.none
   21e7c:	ldr	x0, [sp, #32]
   21e80:	cmp	x0, #0x0
   21e84:	b.eq	21ec8 <gl_scratch_buffer_set_array_size@@Base+0x88>  // b.none
   21e88:	ldr	x1, [sp, #56]
   21e8c:	ldr	x0, [sp, #32]
   21e90:	udiv	x0, x1, x0
   21e94:	ldr	x1, [sp, #24]
   21e98:	cmp	x1, x0
   21e9c:	b.eq	21ec8 <gl_scratch_buffer_set_array_size@@Base+0x88>  // b.none
   21ea0:	ldr	x0, [sp, #40]
   21ea4:	bl	21e04 <gl_scratch_buffer_grow_preserve@@Base+0x150>
   21ea8:	ldr	x0, [sp, #40]
   21eac:	bl	21dd4 <gl_scratch_buffer_grow_preserve@@Base+0x120>
   21eb0:	bl	b640 <__errno_location@plt>
   21eb4:	mov	x1, x0
   21eb8:	mov	w0, #0xc                   	// #12
   21ebc:	str	w0, [x1]
   21ec0:	mov	w0, #0x0                   	// #0
   21ec4:	b	21f30 <gl_scratch_buffer_set_array_size@@Base+0xf0>
   21ec8:	ldr	x0, [sp, #40]
   21ecc:	ldr	x0, [x0, #8]
   21ed0:	ldr	x1, [sp, #56]
   21ed4:	cmp	x1, x0
   21ed8:	b.hi	21ee4 <gl_scratch_buffer_set_array_size@@Base+0xa4>  // b.pmore
   21edc:	mov	w0, #0x1                   	// #1
   21ee0:	b	21f30 <gl_scratch_buffer_set_array_size@@Base+0xf0>
   21ee4:	ldr	x0, [sp, #40]
   21ee8:	bl	21e04 <gl_scratch_buffer_grow_preserve@@Base+0x150>
   21eec:	ldr	x0, [sp, #56]
   21ef0:	bl	ab40 <malloc@plt>
   21ef4:	str	x0, [sp, #48]
   21ef8:	ldr	x0, [sp, #48]
   21efc:	cmp	x0, #0x0
   21f00:	b.ne	21f14 <gl_scratch_buffer_set_array_size@@Base+0xd4>  // b.any
   21f04:	ldr	x0, [sp, #40]
   21f08:	bl	21dd4 <gl_scratch_buffer_grow_preserve@@Base+0x120>
   21f0c:	mov	w0, #0x0                   	// #0
   21f10:	b	21f30 <gl_scratch_buffer_set_array_size@@Base+0xf0>
   21f14:	ldr	x0, [sp, #40]
   21f18:	ldr	x1, [sp, #48]
   21f1c:	str	x1, [x0]
   21f20:	ldr	x0, [sp, #40]
   21f24:	ldr	x1, [sp, #56]
   21f28:	str	x1, [x0, #8]
   21f2c:	mov	w0, #0x1                   	// #1
   21f30:	ldp	x29, x30, [sp], #64
   21f34:	ret

0000000000021f38 <gl_set_nx_create_empty@@Base>:
   21f38:	stp	x29, x30, [sp, #-48]!
   21f3c:	mov	x29, sp
   21f40:	str	x0, [sp, #40]
   21f44:	str	x1, [sp, #32]
   21f48:	str	x2, [sp, #24]
   21f4c:	str	x3, [sp, #16]
   21f50:	ldr	x0, [sp, #40]
   21f54:	ldr	x4, [x0]
   21f58:	ldr	x3, [sp, #16]
   21f5c:	ldr	x2, [sp, #24]
   21f60:	ldr	x1, [sp, #32]
   21f64:	ldr	x0, [sp, #40]
   21f68:	blr	x4
   21f6c:	ldp	x29, x30, [sp], #48
   21f70:	ret

0000000000021f74 <gl_set_size@@Base>:
   21f74:	stp	x29, x30, [sp, #-32]!
   21f78:	mov	x29, sp
   21f7c:	str	x0, [sp, #24]
   21f80:	ldr	x0, [sp, #24]
   21f84:	ldr	x0, [x0]
   21f88:	ldr	x1, [x0, #8]
   21f8c:	ldr	x0, [sp, #24]
   21f90:	blr	x1
   21f94:	ldp	x29, x30, [sp], #32
   21f98:	ret

0000000000021f9c <gl_set_search@@Base>:
   21f9c:	stp	x29, x30, [sp, #-32]!
   21fa0:	mov	x29, sp
   21fa4:	str	x0, [sp, #24]
   21fa8:	str	x1, [sp, #16]
   21fac:	ldr	x0, [sp, #24]
   21fb0:	ldr	x0, [x0]
   21fb4:	ldr	x2, [x0, #16]
   21fb8:	ldr	x1, [sp, #16]
   21fbc:	ldr	x0, [sp, #24]
   21fc0:	blr	x2
   21fc4:	and	w0, w0, #0xff
   21fc8:	ldp	x29, x30, [sp], #32
   21fcc:	ret

0000000000021fd0 <gl_set_nx_add@@Base>:
   21fd0:	stp	x29, x30, [sp, #-32]!
   21fd4:	mov	x29, sp
   21fd8:	str	x0, [sp, #24]
   21fdc:	str	x1, [sp, #16]
   21fe0:	ldr	x0, [sp, #24]
   21fe4:	ldr	x0, [x0]
   21fe8:	ldr	x2, [x0, #24]
   21fec:	ldr	x1, [sp, #16]
   21ff0:	ldr	x0, [sp, #24]
   21ff4:	blr	x2
   21ff8:	ldp	x29, x30, [sp], #32
   21ffc:	ret

0000000000022000 <gl_set_remove@@Base>:
   22000:	stp	x29, x30, [sp, #-32]!
   22004:	mov	x29, sp
   22008:	str	x0, [sp, #24]
   2200c:	str	x1, [sp, #16]
   22010:	ldr	x0, [sp, #24]
   22014:	ldr	x0, [x0]
   22018:	ldr	x2, [x0, #32]
   2201c:	ldr	x1, [sp, #16]
   22020:	ldr	x0, [sp, #24]
   22024:	blr	x2
   22028:	and	w0, w0, #0xff
   2202c:	ldp	x29, x30, [sp], #32
   22030:	ret

0000000000022034 <gl_set_free@@Base>:
   22034:	stp	x29, x30, [sp, #-32]!
   22038:	mov	x29, sp
   2203c:	str	x0, [sp, #24]
   22040:	ldr	x0, [sp, #24]
   22044:	ldr	x0, [x0]
   22048:	ldr	x1, [x0, #40]
   2204c:	ldr	x0, [sp, #24]
   22050:	blr	x1
   22054:	nop
   22058:	ldp	x29, x30, [sp], #32
   2205c:	ret

0000000000022060 <gl_set_iterator@@Base>:
   22060:	stp	x29, x30, [sp, #-32]!
   22064:	mov	x29, sp
   22068:	mov	x2, x8
   2206c:	str	x0, [sp, #24]
   22070:	ldr	x0, [sp, #24]
   22074:	ldr	x0, [x0]
   22078:	ldr	x1, [x0, #48]
   2207c:	mov	x8, x2
   22080:	ldr	x0, [sp, #24]
   22084:	blr	x1
   22088:	ldp	x29, x30, [sp], #32
   2208c:	ret

0000000000022090 <gl_set_iterator_next@@Base>:
   22090:	stp	x29, x30, [sp, #-32]!
   22094:	mov	x29, sp
   22098:	str	x0, [sp, #24]
   2209c:	str	x1, [sp, #16]
   220a0:	ldr	x0, [sp, #24]
   220a4:	ldr	x0, [x0]
   220a8:	ldr	x2, [x0, #56]
   220ac:	ldr	x1, [sp, #16]
   220b0:	ldr	x0, [sp, #24]
   220b4:	blr	x2
   220b8:	and	w0, w0, #0xff
   220bc:	ldp	x29, x30, [sp], #32
   220c0:	ret

00000000000220c4 <gl_set_iterator_free@@Base>:
   220c4:	stp	x29, x30, [sp, #-32]!
   220c8:	mov	x29, sp
   220cc:	str	x0, [sp, #24]
   220d0:	ldr	x0, [sp, #24]
   220d4:	ldr	x0, [x0]
   220d8:	ldr	x1, [x0, #64]
   220dc:	ldr	x0, [sp, #24]
   220e0:	blr	x1
   220e4:	nop
   220e8:	ldp	x29, x30, [sp], #32
   220ec:	ret

00000000000220f0 <get_handler@@Base>:
   220f0:	sub	sp, sp, #0x10
   220f4:	str	x0, [sp, #8]
   220f8:	ldr	x0, [sp, #8]
   220fc:	ldr	x0, [x0]
   22100:	add	sp, sp, #0x10
   22104:	ret

0000000000022108 <gl_sockets_startup@@Base>:
   22108:	sub	sp, sp, #0x10
   2210c:	str	w0, [sp, #12]
   22110:	mov	w0, #0x0                   	// #0
   22114:	add	sp, sp, #0x10
   22118:	ret

000000000002211c <gl_sockets_cleanup@@Base>:
   2211c:	mov	w0, #0x0                   	// #0
   22120:	ret

0000000000022124 <get_stat_atime_ns@@Base>:
   22124:	sub	sp, sp, #0x10
   22128:	str	x0, [sp, #8]
   2212c:	ldr	x0, [sp, #8]
   22130:	ldr	x0, [x0, #80]
   22134:	add	sp, sp, #0x10
   22138:	ret

000000000002213c <get_stat_ctime_ns@@Base>:
   2213c:	sub	sp, sp, #0x10
   22140:	str	x0, [sp, #8]
   22144:	ldr	x0, [sp, #8]
   22148:	ldr	x0, [x0, #112]
   2214c:	add	sp, sp, #0x10
   22150:	ret

0000000000022154 <get_stat_mtime_ns@@Base>:
   22154:	sub	sp, sp, #0x10
   22158:	str	x0, [sp, #8]
   2215c:	ldr	x0, [sp, #8]
   22160:	ldr	x0, [x0, #96]
   22164:	add	sp, sp, #0x10
   22168:	ret

000000000002216c <get_stat_birthtime_ns@@Base>:
   2216c:	sub	sp, sp, #0x10
   22170:	str	x0, [sp, #8]
   22174:	mov	x0, #0x0                   	// #0
   22178:	add	sp, sp, #0x10
   2217c:	ret

0000000000022180 <get_stat_atime@@Base>:
   22180:	sub	sp, sp, #0x10
   22184:	str	x0, [sp, #8]
   22188:	ldr	x0, [sp, #8]
   2218c:	ldp	x0, x1, [x0, #72]
   22190:	add	sp, sp, #0x10
   22194:	ret

0000000000022198 <get_stat_ctime@@Base>:
   22198:	sub	sp, sp, #0x10
   2219c:	str	x0, [sp, #8]
   221a0:	ldr	x0, [sp, #8]
   221a4:	ldp	x0, x1, [x0, #104]
   221a8:	add	sp, sp, #0x10
   221ac:	ret

00000000000221b0 <get_stat_mtime@@Base>:
   221b0:	sub	sp, sp, #0x10
   221b4:	str	x0, [sp, #8]
   221b8:	ldr	x0, [sp, #8]
   221bc:	ldp	x0, x1, [x0, #88]
   221c0:	add	sp, sp, #0x10
   221c4:	ret

00000000000221c8 <get_stat_birthtime@@Base>:
   221c8:	sub	sp, sp, #0x20
   221cc:	str	x0, [sp, #8]
   221d0:	mov	x0, #0xffffffffffffffff    	// #-1
   221d4:	str	x0, [sp, #16]
   221d8:	mov	x0, #0xffffffffffffffff    	// #-1
   221dc:	str	x0, [sp, #24]
   221e0:	ldp	x0, x1, [sp, #16]
   221e4:	add	sp, sp, #0x20
   221e8:	ret

00000000000221ec <stat_time_normalize@@Base>:
   221ec:	sub	sp, sp, #0x10
   221f0:	str	w0, [sp, #12]
   221f4:	str	x1, [sp]
   221f8:	ldr	w0, [sp, #12]
   221fc:	add	sp, sp, #0x10
   22200:	ret

0000000000022204 <statat@@Base>:
   22204:	stp	x29, x30, [sp, #-48]!
   22208:	mov	x29, sp
   2220c:	str	w0, [sp, #44]
   22210:	str	x1, [sp, #32]
   22214:	str	x2, [sp, #24]
   22218:	mov	w3, #0x0                   	// #0
   2221c:	ldr	x2, [sp, #24]
   22220:	ldr	x1, [sp, #32]
   22224:	ldr	w0, [sp, #44]
   22228:	bl	423a0 <vasnprintf@@Base+0x21a4>
   2222c:	ldp	x29, x30, [sp], #48
   22230:	ret

0000000000022234 <lstatat@@Base>:
   22234:	stp	x29, x30, [sp, #-48]!
   22238:	mov	x29, sp
   2223c:	str	w0, [sp, #44]
   22240:	str	x1, [sp, #32]
   22244:	str	x2, [sp, #24]
   22248:	mov	w3, #0x100                 	// #256
   2224c:	ldr	x2, [sp, #24]
   22250:	ldr	x1, [sp, #32]
   22254:	ldr	w0, [sp, #44]
   22258:	bl	423a0 <vasnprintf@@Base+0x21a4>
   2225c:	ldp	x29, x30, [sp], #48
   22260:	ret

0000000000022264 <stdopen@@Base>:
   22264:	stp	x29, x30, [sp, #-32]!
   22268:	mov	x29, sp
   2226c:	str	wzr, [sp, #28]
   22270:	b	2232c <stdopen@@Base+0xc8>
   22274:	mov	w1, #0x1                   	// #1
   22278:	ldr	w0, [sp, #28]
   2227c:	bl	b300 <rpl_fcntl@plt>
   22280:	cmp	w0, #0x0
   22284:	b.ge	22320 <stdopen@@Base+0xbc>  // b.tcont
   22288:	ldr	w0, [sp, #28]
   2228c:	cmp	w0, #0x0
   22290:	cset	w0, eq  // eq = none
   22294:	and	w0, w0, #0xff
   22298:	str	w0, [sp, #24]
   2229c:	ldr	w0, [sp, #28]
   222a0:	cmp	w0, #0x0
   222a4:	b.ne	222bc <stdopen@@Base+0x58>  // b.any
   222a8:	ldr	w1, [sp, #24]
   222ac:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   222b0:	add	x0, x0, #0xda0
   222b4:	bl	abd0 <open@plt>
   222b8:	b	222c0 <stdopen@@Base+0x5c>
   222bc:	mov	w0, #0xffffffff            	// #-1
   222c0:	str	w0, [sp, #20]
   222c4:	ldr	w0, [sp, #20]
   222c8:	cmp	w0, #0x0
   222cc:	b.ge	222e4 <stdopen@@Base+0x80>  // b.tcont
   222d0:	ldr	w1, [sp, #24]
   222d4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   222d8:	add	x0, x0, #0xdb0
   222dc:	bl	abd0 <open@plt>
   222e0:	b	222e8 <stdopen@@Base+0x84>
   222e4:	ldr	w0, [sp, #20]
   222e8:	str	w0, [sp, #16]
   222ec:	ldr	w0, [sp, #16]
   222f0:	cmp	w0, #0x0
   222f4:	b.ge	22304 <stdopen@@Base+0xa0>  // b.tcont
   222f8:	bl	b640 <__errno_location@plt>
   222fc:	ldr	w0, [x0]
   22300:	b	2233c <stdopen@@Base+0xd8>
   22304:	ldr	w0, [sp, #16]
   22308:	cmp	w0, #0x2
   2230c:	b.le	22320 <stdopen@@Base+0xbc>
   22310:	ldr	w0, [sp, #16]
   22314:	bl	ae80 <close@plt>
   22318:	mov	w0, #0x0                   	// #0
   2231c:	b	2233c <stdopen@@Base+0xd8>
   22320:	ldr	w0, [sp, #28]
   22324:	add	w0, w0, #0x1
   22328:	str	w0, [sp, #28]
   2232c:	ldr	w0, [sp, #28]
   22330:	cmp	w0, #0x2
   22334:	b.le	22274 <stdopen@@Base+0x10>
   22338:	mov	w0, #0x0                   	// #0
   2233c:	ldp	x29, x30, [sp], #32
   22340:	ret

0000000000022344 <strnlen1@@Base>:
   22344:	stp	x29, x30, [sp, #-48]!
   22348:	mov	x29, sp
   2234c:	str	x0, [sp, #24]
   22350:	str	x1, [sp, #16]
   22354:	ldr	x2, [sp, #16]
   22358:	mov	w1, #0x0                   	// #0
   2235c:	ldr	x0, [sp, #24]
   22360:	bl	b3b0 <memchr@plt>
   22364:	str	x0, [sp, #40]
   22368:	ldr	x0, [sp, #40]
   2236c:	cmp	x0, #0x0
   22370:	b.eq	22388 <strnlen1@@Base+0x44>  // b.none
   22374:	ldr	x1, [sp, #40]
   22378:	ldr	x0, [sp, #24]
   2237c:	sub	x0, x1, x0
   22380:	add	x0, x0, #0x1
   22384:	b	2238c <strnlen1@@Base+0x48>
   22388:	ldr	x0, [sp, #16]
   2238c:	ldp	x29, x30, [sp], #48
   22390:	ret

0000000000022394 <try_tempname@@Base>:
   22394:	stp	x29, x30, [sp, #-112]!
   22398:	mov	x29, sp
   2239c:	str	x0, [sp, #40]
   223a0:	str	w1, [sp, #36]
   223a4:	str	x2, [sp, #24]
   223a8:	str	x3, [sp, #16]
   223ac:	mov	w0, #0xffffffff            	// #-1
   223b0:	str	w0, [sp, #104]
   223b4:	bl	b640 <__errno_location@plt>
   223b8:	ldr	w0, [x0]
   223bc:	str	w0, [sp, #100]
   223c0:	mov	w0, #0xa2f8                	// #41720
   223c4:	movk	w0, #0x3, lsl #16
   223c8:	str	w0, [sp, #96]
   223cc:	ldr	x0, [sp, #40]
   223d0:	bl	a820 <strlen@plt>
   223d4:	str	w0, [sp, #92]
   223d8:	ldr	w0, [sp, #36]
   223dc:	add	w0, w0, #0x5
   223e0:	ldr	w1, [sp, #92]
   223e4:	cmp	w1, w0
   223e8:	b.le	22424 <try_tempname@@Base+0x90>
   223ec:	ldr	w0, [sp, #92]
   223f0:	sub	w1, w0, #0x6
   223f4:	ldr	w0, [sp, #36]
   223f8:	sub	w0, w1, w0
   223fc:	sxtw	x0, w0
   22400:	ldr	x1, [sp, #40]
   22404:	add	x3, x1, x0
   22408:	mov	x2, #0x6                   	// #6
   2240c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   22410:	add	x1, x0, #0xe00
   22414:	mov	x0, x3
   22418:	bl	b000 <memcmp@plt>
   2241c:	cmp	w0, #0x0
   22420:	b.eq	2243c <try_tempname@@Base+0xa8>  // b.none
   22424:	bl	b640 <__errno_location@plt>
   22428:	mov	x1, x0
   2242c:	mov	w0, #0x16                  	// #22
   22430:	str	w0, [x1]
   22434:	mov	w0, #0xffffffff            	// #-1
   22438:	b	227d8 <try_tempname@@Base+0x444>
   2243c:	ldr	w0, [sp, #92]
   22440:	sub	w1, w0, #0x6
   22444:	ldr	w0, [sp, #36]
   22448:	sub	w0, w1, w0
   2244c:	sxtw	x0, w0
   22450:	ldr	x1, [sp, #40]
   22454:	add	x0, x1, x0
   22458:	str	x0, [sp, #80]
   2245c:	add	x0, sp, #0x30
   22460:	mov	x1, #0x0                   	// #0
   22464:	bl	acc0 <gettimeofday@plt>
   22468:	ldr	x0, [sp, #56]
   2246c:	lsl	x0, x0, #16
   22470:	ldr	x1, [sp, #48]
   22474:	eor	x0, x0, x1
   22478:	str	x0, [sp, #72]
   2247c:	bl	ab00 <getpid@plt>
   22480:	sxtw	x1, w0
   22484:	ldr	x0, [sp, #72]
   22488:	eor	x1, x1, x0
   2248c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   22490:	add	x0, x0, #0x5c8
   22494:	ldr	x0, [x0]
   22498:	add	x1, x1, x0
   2249c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   224a0:	add	x0, x0, #0x5c8
   224a4:	str	x1, [x0]
   224a8:	str	wzr, [sp, #108]
   224ac:	b	227b4 <try_tempname@@Base+0x420>
   224b0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   224b4:	add	x0, x0, #0x5c8
   224b8:	ldr	x0, [x0]
   224bc:	str	x0, [sp, #64]
   224c0:	ldr	x2, [sp, #64]
   224c4:	lsr	x1, x2, #1
   224c8:	mov	x0, #0x2109                	// #8457
   224cc:	movk	x0, #0x1084, lsl #16
   224d0:	movk	x0, #0x842, lsl #32
   224d4:	movk	x0, #0x8421, lsl #48
   224d8:	umulh	x0, x1, x0
   224dc:	lsr	x1, x0, #4
   224e0:	mov	x0, x1
   224e4:	lsl	x0, x0, #5
   224e8:	sub	x0, x0, x1
   224ec:	lsl	x0, x0, #1
   224f0:	sub	x1, x2, x0
   224f4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   224f8:	add	x0, x0, #0xdc0
   224fc:	ldrb	w1, [x0, x1]
   22500:	ldr	x0, [sp, #80]
   22504:	strb	w1, [x0]
   22508:	ldr	x0, [sp, #64]
   2250c:	lsr	x1, x0, #1
   22510:	mov	x0, #0x2109                	// #8457
   22514:	movk	x0, #0x1084, lsl #16
   22518:	movk	x0, #0x842, lsl #32
   2251c:	movk	x0, #0x8421, lsl #48
   22520:	umulh	x0, x1, x0
   22524:	lsr	x0, x0, #4
   22528:	str	x0, [sp, #64]
   2252c:	ldr	x2, [sp, #64]
   22530:	lsr	x1, x2, #1
   22534:	mov	x0, #0x2109                	// #8457
   22538:	movk	x0, #0x1084, lsl #16
   2253c:	movk	x0, #0x842, lsl #32
   22540:	movk	x0, #0x8421, lsl #48
   22544:	umulh	x0, x1, x0
   22548:	lsr	x1, x0, #4
   2254c:	mov	x0, x1
   22550:	lsl	x0, x0, #5
   22554:	sub	x0, x0, x1
   22558:	lsl	x0, x0, #1
   2255c:	sub	x1, x2, x0
   22560:	ldr	x0, [sp, #80]
   22564:	add	x0, x0, #0x1
   22568:	adrp	x2, 44000 <vasnprintf@@Base+0x3e04>
   2256c:	add	x2, x2, #0xdc0
   22570:	ldrb	w1, [x2, x1]
   22574:	strb	w1, [x0]
   22578:	ldr	x0, [sp, #64]
   2257c:	lsr	x1, x0, #1
   22580:	mov	x0, #0x2109                	// #8457
   22584:	movk	x0, #0x1084, lsl #16
   22588:	movk	x0, #0x842, lsl #32
   2258c:	movk	x0, #0x8421, lsl #48
   22590:	umulh	x0, x1, x0
   22594:	lsr	x0, x0, #4
   22598:	str	x0, [sp, #64]
   2259c:	ldr	x2, [sp, #64]
   225a0:	lsr	x1, x2, #1
   225a4:	mov	x0, #0x2109                	// #8457
   225a8:	movk	x0, #0x1084, lsl #16
   225ac:	movk	x0, #0x842, lsl #32
   225b0:	movk	x0, #0x8421, lsl #48
   225b4:	umulh	x0, x1, x0
   225b8:	lsr	x1, x0, #4
   225bc:	mov	x0, x1
   225c0:	lsl	x0, x0, #5
   225c4:	sub	x0, x0, x1
   225c8:	lsl	x0, x0, #1
   225cc:	sub	x1, x2, x0
   225d0:	ldr	x0, [sp, #80]
   225d4:	add	x0, x0, #0x2
   225d8:	adrp	x2, 44000 <vasnprintf@@Base+0x3e04>
   225dc:	add	x2, x2, #0xdc0
   225e0:	ldrb	w1, [x2, x1]
   225e4:	strb	w1, [x0]
   225e8:	ldr	x0, [sp, #64]
   225ec:	lsr	x1, x0, #1
   225f0:	mov	x0, #0x2109                	// #8457
   225f4:	movk	x0, #0x1084, lsl #16
   225f8:	movk	x0, #0x842, lsl #32
   225fc:	movk	x0, #0x8421, lsl #48
   22600:	umulh	x0, x1, x0
   22604:	lsr	x0, x0, #4
   22608:	str	x0, [sp, #64]
   2260c:	ldr	x2, [sp, #64]
   22610:	lsr	x1, x2, #1
   22614:	mov	x0, #0x2109                	// #8457
   22618:	movk	x0, #0x1084, lsl #16
   2261c:	movk	x0, #0x842, lsl #32
   22620:	movk	x0, #0x8421, lsl #48
   22624:	umulh	x0, x1, x0
   22628:	lsr	x1, x0, #4
   2262c:	mov	x0, x1
   22630:	lsl	x0, x0, #5
   22634:	sub	x0, x0, x1
   22638:	lsl	x0, x0, #1
   2263c:	sub	x1, x2, x0
   22640:	ldr	x0, [sp, #80]
   22644:	add	x0, x0, #0x3
   22648:	adrp	x2, 44000 <vasnprintf@@Base+0x3e04>
   2264c:	add	x2, x2, #0xdc0
   22650:	ldrb	w1, [x2, x1]
   22654:	strb	w1, [x0]
   22658:	ldr	x0, [sp, #64]
   2265c:	lsr	x1, x0, #1
   22660:	mov	x0, #0x2109                	// #8457
   22664:	movk	x0, #0x1084, lsl #16
   22668:	movk	x0, #0x842, lsl #32
   2266c:	movk	x0, #0x8421, lsl #48
   22670:	umulh	x0, x1, x0
   22674:	lsr	x0, x0, #4
   22678:	str	x0, [sp, #64]
   2267c:	ldr	x2, [sp, #64]
   22680:	lsr	x1, x2, #1
   22684:	mov	x0, #0x2109                	// #8457
   22688:	movk	x0, #0x1084, lsl #16
   2268c:	movk	x0, #0x842, lsl #32
   22690:	movk	x0, #0x8421, lsl #48
   22694:	umulh	x0, x1, x0
   22698:	lsr	x1, x0, #4
   2269c:	mov	x0, x1
   226a0:	lsl	x0, x0, #5
   226a4:	sub	x0, x0, x1
   226a8:	lsl	x0, x0, #1
   226ac:	sub	x1, x2, x0
   226b0:	ldr	x0, [sp, #80]
   226b4:	add	x0, x0, #0x4
   226b8:	adrp	x2, 44000 <vasnprintf@@Base+0x3e04>
   226bc:	add	x2, x2, #0xdc0
   226c0:	ldrb	w1, [x2, x1]
   226c4:	strb	w1, [x0]
   226c8:	ldr	x0, [sp, #64]
   226cc:	lsr	x1, x0, #1
   226d0:	mov	x0, #0x2109                	// #8457
   226d4:	movk	x0, #0x1084, lsl #16
   226d8:	movk	x0, #0x842, lsl #32
   226dc:	movk	x0, #0x8421, lsl #48
   226e0:	umulh	x0, x1, x0
   226e4:	lsr	x0, x0, #4
   226e8:	str	x0, [sp, #64]
   226ec:	ldr	x2, [sp, #64]
   226f0:	lsr	x1, x2, #1
   226f4:	mov	x0, #0x2109                	// #8457
   226f8:	movk	x0, #0x1084, lsl #16
   226fc:	movk	x0, #0x842, lsl #32
   22700:	movk	x0, #0x8421, lsl #48
   22704:	umulh	x0, x1, x0
   22708:	lsr	x1, x0, #4
   2270c:	mov	x0, x1
   22710:	lsl	x0, x0, #5
   22714:	sub	x0, x0, x1
   22718:	lsl	x0, x0, #1
   2271c:	sub	x1, x2, x0
   22720:	ldr	x0, [sp, #80]
   22724:	add	x0, x0, #0x5
   22728:	adrp	x2, 44000 <vasnprintf@@Base+0x3e04>
   2272c:	add	x2, x2, #0xdc0
   22730:	ldrb	w1, [x2, x1]
   22734:	strb	w1, [x0]
   22738:	ldr	x2, [sp, #16]
   2273c:	ldr	x1, [sp, #24]
   22740:	ldr	x0, [sp, #40]
   22744:	blr	x2
   22748:	str	w0, [sp, #104]
   2274c:	ldr	w0, [sp, #104]
   22750:	cmp	w0, #0x0
   22754:	b.lt	22770 <try_tempname@@Base+0x3dc>  // b.tstop
   22758:	bl	b640 <__errno_location@plt>
   2275c:	mov	x1, x0
   22760:	ldr	w0, [sp, #100]
   22764:	str	w0, [x1]
   22768:	ldr	w0, [sp, #104]
   2276c:	b	227d8 <try_tempname@@Base+0x444>
   22770:	bl	b640 <__errno_location@plt>
   22774:	ldr	w0, [x0]
   22778:	cmp	w0, #0x11
   2277c:	b.eq	22788 <try_tempname@@Base+0x3f4>  // b.none
   22780:	mov	w0, #0xffffffff            	// #-1
   22784:	b	227d8 <try_tempname@@Base+0x444>
   22788:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   2278c:	add	x0, x0, #0x5c8
   22790:	ldr	x1, [x0]
   22794:	mov	x0, #0x1e61                	// #7777
   22798:	add	x1, x1, x0
   2279c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   227a0:	add	x0, x0, #0x5c8
   227a4:	str	x1, [x0]
   227a8:	ldr	w0, [sp, #108]
   227ac:	add	w0, w0, #0x1
   227b0:	str	w0, [sp, #108]
   227b4:	ldr	w1, [sp, #108]
   227b8:	ldr	w0, [sp, #96]
   227bc:	cmp	w1, w0
   227c0:	b.cc	224b0 <try_tempname@@Base+0x11c>  // b.lo, b.ul, b.last
   227c4:	bl	b640 <__errno_location@plt>
   227c8:	mov	x1, x0
   227cc:	mov	w0, #0x11                  	// #17
   227d0:	str	w0, [x1]
   227d4:	mov	w0, #0xffffffff            	// #-1
   227d8:	ldp	x29, x30, [sp], #112
   227dc:	ret
   227e0:	stp	x29, x30, [sp, #-48]!
   227e4:	mov	x29, sp
   227e8:	str	x0, [sp, #24]
   227ec:	str	x1, [sp, #16]
   227f0:	ldr	x0, [sp, #16]
   227f4:	str	x0, [sp, #40]
   227f8:	ldr	x0, [sp, #40]
   227fc:	ldr	w1, [x0]
   22800:	mov	w0, #0xffffff3c            	// #-196
   22804:	and	w1, w1, w0
   22808:	mov	w0, #0xc2                  	// #194
   2280c:	orr	w0, w1, w0
   22810:	mov	w2, #0x180                 	// #384
   22814:	mov	w1, w0
   22818:	ldr	x0, [sp, #24]
   2281c:	bl	abd0 <open@plt>
   22820:	ldp	x29, x30, [sp], #48
   22824:	ret
   22828:	stp	x29, x30, [sp, #-32]!
   2282c:	mov	x29, sp
   22830:	str	x0, [sp, #24]
   22834:	str	x1, [sp, #16]
   22838:	mov	w1, #0x1c0                 	// #448
   2283c:	ldr	x0, [sp, #24]
   22840:	bl	b710 <mkdir@plt>
   22844:	ldp	x29, x30, [sp], #32
   22848:	ret
   2284c:	stp	x29, x30, [sp, #-160]!
   22850:	mov	x29, sp
   22854:	str	x0, [sp, #24]
   22858:	str	x1, [sp, #16]
   2285c:	add	x0, sp, #0x20
   22860:	mov	x1, x0
   22864:	ldr	x0, [sp, #24]
   22868:	bl	42390 <vasnprintf@@Base+0x2194>
   2286c:	cmp	w0, #0x0
   22870:	b.eq	22884 <try_tempname@@Base+0x4f0>  // b.none
   22874:	bl	b640 <__errno_location@plt>
   22878:	ldr	w0, [x0]
   2287c:	cmp	w0, #0x4b
   22880:	b.ne	22894 <try_tempname@@Base+0x500>  // b.any
   22884:	bl	b640 <__errno_location@plt>
   22888:	mov	x1, x0
   2288c:	mov	w0, #0x11                  	// #17
   22890:	str	w0, [x1]
   22894:	bl	b640 <__errno_location@plt>
   22898:	ldr	w0, [x0]
   2289c:	cmp	w0, #0x2
   228a0:	b.ne	228ac <try_tempname@@Base+0x518>  // b.any
   228a4:	mov	w0, #0x0                   	// #0
   228a8:	b	228b0 <try_tempname@@Base+0x51c>
   228ac:	mov	w0, #0xffffffff            	// #-1
   228b0:	ldp	x29, x30, [sp], #160
   228b4:	ret

00000000000228b8 <gen_tempname@@Base>:
   228b8:	stp	x29, x30, [sp, #-64]!
   228bc:	mov	x29, sp
   228c0:	str	x0, [sp, #40]
   228c4:	str	w1, [sp, #36]
   228c8:	str	w2, [sp, #32]
   228cc:	str	w3, [sp, #28]
   228d0:	ldr	w0, [sp, #28]
   228d4:	cmp	w0, #0x2
   228d8:	b.eq	22924 <gen_tempname@@Base+0x6c>  // b.none
   228dc:	ldr	w0, [sp, #28]
   228e0:	cmp	w0, #0x2
   228e4:	b.gt	22934 <gen_tempname@@Base+0x7c>
   228e8:	ldr	w0, [sp, #28]
   228ec:	cmp	w0, #0x0
   228f0:	b.eq	22904 <gen_tempname@@Base+0x4c>  // b.none
   228f4:	ldr	w0, [sp, #28]
   228f8:	cmp	w0, #0x1
   228fc:	b.eq	22914 <gen_tempname@@Base+0x5c>  // b.none
   22900:	b	22934 <gen_tempname@@Base+0x7c>
   22904:	adrp	x0, 22000 <gl_set_remove@@Base>
   22908:	add	x0, x0, #0x7e0
   2290c:	str	x0, [sp, #56]
   22910:	b	22954 <gen_tempname@@Base+0x9c>
   22914:	adrp	x0, 22000 <gl_set_remove@@Base>
   22918:	add	x0, x0, #0x828
   2291c:	str	x0, [sp, #56]
   22920:	b	22954 <gen_tempname@@Base+0x9c>
   22924:	adrp	x0, 22000 <gl_set_remove@@Base>
   22928:	add	x0, x0, #0x84c
   2292c:	str	x0, [sp, #56]
   22930:	b	22954 <gen_tempname@@Base+0x9c>
   22934:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   22938:	add	x3, x0, #0xe40
   2293c:	mov	w2, #0x13f                 	// #319
   22940:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   22944:	add	x1, x0, #0xe08
   22948:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   2294c:	add	x0, x0, #0xe18
   22950:	bl	b630 <__assert_fail@plt>
   22954:	add	x0, sp, #0x20
   22958:	ldr	x3, [sp, #56]
   2295c:	mov	x2, x0
   22960:	ldr	w1, [sp, #36]
   22964:	ldr	x0, [sp, #40]
   22968:	bl	ae20 <try_tempname@plt>
   2296c:	ldp	x29, x30, [sp], #64
   22970:	ret

0000000000022974 <make_timespec@@Base>:
   22974:	sub	sp, sp, #0x20
   22978:	str	x0, [sp, #8]
   2297c:	str	x1, [sp]
   22980:	ldr	x0, [sp, #8]
   22984:	str	x0, [sp, #16]
   22988:	ldr	x0, [sp]
   2298c:	str	x0, [sp, #24]
   22990:	ldp	x0, x1, [sp, #16]
   22994:	add	sp, sp, #0x20
   22998:	ret

000000000002299c <timespec_cmp@@Base>:
   2299c:	sub	sp, sp, #0x20
   229a0:	stp	x0, x1, [sp, #16]
   229a4:	stp	x2, x3, [sp]
   229a8:	ldr	x1, [sp, #16]
   229ac:	ldr	x0, [sp]
   229b0:	cmp	x1, x0
   229b4:	b.ge	229c0 <timespec_cmp@@Base+0x24>  // b.tcont
   229b8:	mov	w0, #0xffffffff            	// #-1
   229bc:	b	22a28 <timespec_cmp@@Base+0x8c>
   229c0:	ldr	x1, [sp, #16]
   229c4:	ldr	x0, [sp]
   229c8:	cmp	x1, x0
   229cc:	b.le	229d8 <timespec_cmp@@Base+0x3c>
   229d0:	mov	w0, #0x1                   	// #1
   229d4:	b	22a28 <timespec_cmp@@Base+0x8c>
   229d8:	ldr	x0, [sp, #24]
   229dc:	cmn	x0, #0x1
   229e0:	b.lt	229f8 <timespec_cmp@@Base+0x5c>  // b.tstop
   229e4:	ldr	x1, [sp, #24]
   229e8:	mov	x0, #0x9400                	// #37888
   229ec:	movk	x0, #0x7735, lsl #16
   229f0:	cmp	x1, x0
   229f4:	b.le	229f8 <timespec_cmp@@Base+0x5c>
   229f8:	ldr	x0, [sp, #8]
   229fc:	cmn	x0, #0x1
   22a00:	b.lt	22a18 <timespec_cmp@@Base+0x7c>  // b.tstop
   22a04:	ldr	x1, [sp, #8]
   22a08:	mov	x0, #0x9400                	// #37888
   22a0c:	movk	x0, #0x7735, lsl #16
   22a10:	cmp	x1, x0
   22a14:	b.le	22a18 <timespec_cmp@@Base+0x7c>
   22a18:	ldr	x0, [sp, #24]
   22a1c:	mov	w1, w0
   22a20:	ldr	x0, [sp, #8]
   22a24:	sub	w0, w1, w0
   22a28:	add	sp, sp, #0x20
   22a2c:	ret

0000000000022a30 <timespec_sign@@Base>:
   22a30:	sub	sp, sp, #0x10
   22a34:	stp	x0, x1, [sp]
   22a38:	ldr	x0, [sp]
   22a3c:	cmp	x0, #0x0
   22a40:	b.lt	22a6c <timespec_sign@@Base+0x3c>  // b.tstop
   22a44:	ldr	x0, [sp]
   22a48:	cmp	x0, #0x0
   22a4c:	b.ne	22a5c <timespec_sign@@Base+0x2c>  // b.any
   22a50:	ldr	x0, [sp, #8]
   22a54:	cmp	x0, #0x0
   22a58:	b.eq	22a64 <timespec_sign@@Base+0x34>  // b.none
   22a5c:	mov	w0, #0x1                   	// #1
   22a60:	b	22a70 <timespec_sign@@Base+0x40>
   22a64:	mov	w0, #0x0                   	// #0
   22a68:	b	22a70 <timespec_sign@@Base+0x40>
   22a6c:	mov	w0, #0xffffffff            	// #-1
   22a70:	add	sp, sp, #0x10
   22a74:	ret

0000000000022a78 <timespectod@@Base>:
   22a78:	sub	sp, sp, #0x10
   22a7c:	stp	x0, x1, [sp]
   22a80:	ldr	d0, [sp]
   22a84:	scvtf	d1, d0
   22a88:	ldr	d0, [sp, #8]
   22a8c:	scvtf	d0, d0
   22a90:	mov	x0, #0xcd6500000000        	// #225833675390976
   22a94:	movk	x0, #0x41cd, lsl #48
   22a98:	fmov	d2, x0
   22a9c:	fdiv	d0, d0, d2
   22aa0:	fadd	d0, d1, d0
   22aa4:	add	sp, sp, #0x10
   22aa8:	ret

0000000000022aac <dup_safer@@Base>:
   22aac:	stp	x29, x30, [sp, #-32]!
   22ab0:	mov	x29, sp
   22ab4:	str	w0, [sp, #28]
   22ab8:	mov	w2, #0x3                   	// #3
   22abc:	mov	w1, #0x0                   	// #0
   22ac0:	ldr	w0, [sp, #28]
   22ac4:	bl	b300 <rpl_fcntl@plt>
   22ac8:	ldp	x29, x30, [sp], #32
   22acc:	ret

0000000000022ad0 <fd_safer@@Base>:
   22ad0:	stp	x29, x30, [sp, #-48]!
   22ad4:	mov	x29, sp
   22ad8:	str	w0, [sp, #28]
   22adc:	ldr	w0, [sp, #28]
   22ae0:	cmp	w0, #0x0
   22ae4:	b.lt	22b2c <fd_safer@@Base+0x5c>  // b.tstop
   22ae8:	ldr	w0, [sp, #28]
   22aec:	cmp	w0, #0x2
   22af0:	b.gt	22b2c <fd_safer@@Base+0x5c>
   22af4:	ldr	w0, [sp, #28]
   22af8:	bl	b110 <dup_safer@plt>
   22afc:	str	w0, [sp, #44]
   22b00:	bl	b640 <__errno_location@plt>
   22b04:	ldr	w0, [x0]
   22b08:	str	w0, [sp, #40]
   22b0c:	ldr	w0, [sp, #28]
   22b10:	bl	ae80 <close@plt>
   22b14:	bl	b640 <__errno_location@plt>
   22b18:	mov	x1, x0
   22b1c:	ldr	w0, [sp, #40]
   22b20:	str	w0, [x1]
   22b24:	ldr	w0, [sp, #44]
   22b28:	str	w0, [sp, #28]
   22b2c:	ldr	w0, [sp, #28]
   22b30:	ldp	x29, x30, [sp], #48
   22b34:	ret

0000000000022b38 <pipe_safer@@Base>:
   22b38:	stp	x29, x30, [sp, #-64]!
   22b3c:	mov	x29, sp
   22b40:	str	x19, [sp, #16]
   22b44:	str	x0, [sp, #40]
   22b48:	ldr	x0, [sp, #40]
   22b4c:	bl	a9b0 <pipe@plt>
   22b50:	cmp	w0, #0x0
   22b54:	b.ne	22c14 <pipe_safer@@Base+0xdc>  // b.any
   22b58:	str	wzr, [sp, #60]
   22b5c:	b	22c00 <pipe_safer@@Base+0xc8>
   22b60:	ldrsw	x0, [sp, #60]
   22b64:	lsl	x0, x0, #2
   22b68:	ldr	x1, [sp, #40]
   22b6c:	add	x0, x1, x0
   22b70:	ldr	w2, [x0]
   22b74:	ldrsw	x0, [sp, #60]
   22b78:	lsl	x0, x0, #2
   22b7c:	ldr	x1, [sp, #40]
   22b80:	add	x19, x1, x0
   22b84:	mov	w0, w2
   22b88:	bl	b6c0 <fd_safer@plt>
   22b8c:	str	w0, [x19]
   22b90:	ldrsw	x0, [sp, #60]
   22b94:	lsl	x0, x0, #2
   22b98:	ldr	x1, [sp, #40]
   22b9c:	add	x0, x1, x0
   22ba0:	ldr	w0, [x0]
   22ba4:	cmp	w0, #0x0
   22ba8:	b.ge	22bf4 <pipe_safer@@Base+0xbc>  // b.tcont
   22bac:	bl	b640 <__errno_location@plt>
   22bb0:	ldr	w0, [x0]
   22bb4:	str	w0, [sp, #56]
   22bb8:	mov	w1, #0x1                   	// #1
   22bbc:	ldr	w0, [sp, #60]
   22bc0:	sub	w0, w1, w0
   22bc4:	sxtw	x0, w0
   22bc8:	lsl	x0, x0, #2
   22bcc:	ldr	x1, [sp, #40]
   22bd0:	add	x0, x1, x0
   22bd4:	ldr	w0, [x0]
   22bd8:	bl	ae80 <close@plt>
   22bdc:	bl	b640 <__errno_location@plt>
   22be0:	mov	x1, x0
   22be4:	ldr	w0, [sp, #56]
   22be8:	str	w0, [x1]
   22bec:	mov	w0, #0xffffffff            	// #-1
   22bf0:	b	22c18 <pipe_safer@@Base+0xe0>
   22bf4:	ldr	w0, [sp, #60]
   22bf8:	add	w0, w0, #0x1
   22bfc:	str	w0, [sp, #60]
   22c00:	ldr	w0, [sp, #60]
   22c04:	cmp	w0, #0x1
   22c08:	b.le	22b60 <pipe_safer@@Base+0x28>
   22c0c:	mov	w0, #0x0                   	// #0
   22c10:	b	22c18 <pipe_safer@@Base+0xe0>
   22c14:	mov	w0, #0xffffffff            	// #-1
   22c18:	ldr	x19, [sp, #16]
   22c1c:	ldp	x29, x30, [sp], #64
   22c20:	ret
   22c24:	stp	x29, x30, [sp, #-48]!
   22c28:	mov	x29, sp
   22c2c:	str	x0, [sp, #24]
   22c30:	str	wzr, [sp, #44]
   22c34:	str	wzr, [sp, #40]
   22c38:	ldr	x0, [sp, #24]
   22c3c:	ldr	x1, [x0, #8]
   22c40:	mov	x0, #0x3fffffff            	// #1073741823
   22c44:	cmp	x1, x0
   22c48:	b.eq	22c88 <pipe_safer@@Base+0x150>  // b.none
   22c4c:	ldr	x0, [sp, #24]
   22c50:	ldr	x1, [x0, #8]
   22c54:	mov	x0, #0x3ffffffe            	// #1073741822
   22c58:	cmp	x1, x0
   22c5c:	b.eq	22c88 <pipe_safer@@Base+0x150>  // b.none
   22c60:	ldr	x0, [sp, #24]
   22c64:	ldr	x0, [x0, #8]
   22c68:	cmp	x0, #0x0
   22c6c:	b.lt	22ce8 <pipe_safer@@Base+0x1b0>  // b.tstop
   22c70:	ldr	x0, [sp, #24]
   22c74:	ldr	x1, [x0, #8]
   22c78:	mov	x0, #0xc9ff                	// #51711
   22c7c:	movk	x0, #0x3b9a, lsl #16
   22c80:	cmp	x1, x0
   22c84:	b.gt	22ce8 <pipe_safer@@Base+0x1b0>
   22c88:	ldr	x0, [sp, #24]
   22c8c:	add	x0, x0, #0x10
   22c90:	ldr	x1, [x0, #8]
   22c94:	mov	x0, #0x3fffffff            	// #1073741823
   22c98:	cmp	x1, x0
   22c9c:	b.eq	22d00 <pipe_safer@@Base+0x1c8>  // b.none
   22ca0:	ldr	x0, [sp, #24]
   22ca4:	add	x0, x0, #0x10
   22ca8:	ldr	x1, [x0, #8]
   22cac:	mov	x0, #0x3ffffffe            	// #1073741822
   22cb0:	cmp	x1, x0
   22cb4:	b.eq	22d00 <pipe_safer@@Base+0x1c8>  // b.none
   22cb8:	ldr	x0, [sp, #24]
   22cbc:	add	x0, x0, #0x10
   22cc0:	ldr	x0, [x0, #8]
   22cc4:	cmp	x0, #0x0
   22cc8:	b.lt	22ce8 <pipe_safer@@Base+0x1b0>  // b.tstop
   22ccc:	ldr	x0, [sp, #24]
   22cd0:	add	x0, x0, #0x10
   22cd4:	ldr	x1, [x0, #8]
   22cd8:	mov	x0, #0xc9ff                	// #51711
   22cdc:	movk	x0, #0x3b9a, lsl #16
   22ce0:	cmp	x1, x0
   22ce4:	b.le	22d00 <pipe_safer@@Base+0x1c8>
   22ce8:	bl	b640 <__errno_location@plt>
   22cec:	mov	x1, x0
   22cf0:	mov	w0, #0x16                  	// #22
   22cf4:	str	w0, [x1]
   22cf8:	mov	w0, #0xffffffff            	// #-1
   22cfc:	b	22ddc <pipe_safer@@Base+0x2a4>
   22d00:	ldr	x0, [sp, #24]
   22d04:	ldr	x1, [x0, #8]
   22d08:	mov	x0, #0x3fffffff            	// #1073741823
   22d0c:	cmp	x1, x0
   22d10:	b.eq	22d28 <pipe_safer@@Base+0x1f0>  // b.none
   22d14:	ldr	x0, [sp, #24]
   22d18:	ldr	x1, [x0, #8]
   22d1c:	mov	x0, #0x3ffffffe            	// #1073741822
   22d20:	cmp	x1, x0
   22d24:	b.ne	22d58 <pipe_safer@@Base+0x220>  // b.any
   22d28:	ldr	x0, [sp, #24]
   22d2c:	str	xzr, [x0]
   22d30:	mov	w0, #0x1                   	// #1
   22d34:	str	w0, [sp, #44]
   22d38:	ldr	x0, [sp, #24]
   22d3c:	ldr	x1, [x0, #8]
   22d40:	mov	x0, #0x3ffffffe            	// #1073741822
   22d44:	cmp	x1, x0
   22d48:	b.ne	22d58 <pipe_safer@@Base+0x220>  // b.any
   22d4c:	ldr	w0, [sp, #40]
   22d50:	add	w0, w0, #0x1
   22d54:	str	w0, [sp, #40]
   22d58:	ldr	x0, [sp, #24]
   22d5c:	add	x0, x0, #0x10
   22d60:	ldr	x1, [x0, #8]
   22d64:	mov	x0, #0x3fffffff            	// #1073741823
   22d68:	cmp	x1, x0
   22d6c:	b.eq	22d88 <pipe_safer@@Base+0x250>  // b.none
   22d70:	ldr	x0, [sp, #24]
   22d74:	add	x0, x0, #0x10
   22d78:	ldr	x1, [x0, #8]
   22d7c:	mov	x0, #0x3ffffffe            	// #1073741822
   22d80:	cmp	x1, x0
   22d84:	b.ne	22dc0 <pipe_safer@@Base+0x288>  // b.any
   22d88:	ldr	x0, [sp, #24]
   22d8c:	add	x0, x0, #0x10
   22d90:	str	xzr, [x0]
   22d94:	mov	w0, #0x1                   	// #1
   22d98:	str	w0, [sp, #44]
   22d9c:	ldr	x0, [sp, #24]
   22da0:	add	x0, x0, #0x10
   22da4:	ldr	x1, [x0, #8]
   22da8:	mov	x0, #0x3ffffffe            	// #1073741822
   22dac:	cmp	x1, x0
   22db0:	b.ne	22dc0 <pipe_safer@@Base+0x288>  // b.any
   22db4:	ldr	w0, [sp, #40]
   22db8:	add	w0, w0, #0x1
   22dbc:	str	w0, [sp, #40]
   22dc0:	ldr	w0, [sp, #40]
   22dc4:	cmp	w0, #0x1
   22dc8:	cset	w0, eq  // eq = none
   22dcc:	and	w0, w0, #0xff
   22dd0:	mov	w1, w0
   22dd4:	ldr	w0, [sp, #44]
   22dd8:	add	w0, w1, w0
   22ddc:	ldp	x29, x30, [sp], #48
   22de0:	ret
   22de4:	stp	x29, x30, [sp, #-64]!
   22de8:	mov	x29, sp
   22dec:	str	x19, [sp, #16]
   22df0:	str	x0, [sp, #40]
   22df4:	str	x1, [sp, #32]
   22df8:	ldr	x0, [sp, #32]
   22dfc:	ldr	x0, [x0]
   22e00:	str	x0, [sp, #56]
   22e04:	ldr	x0, [sp, #56]
   22e08:	ldr	x1, [x0, #8]
   22e0c:	mov	x0, #0x3ffffffe            	// #1073741822
   22e10:	cmp	x1, x0
   22e14:	b.ne	22e38 <pipe_safer@@Base+0x300>  // b.any
   22e18:	ldr	x0, [sp, #56]
   22e1c:	add	x0, x0, #0x10
   22e20:	ldr	x1, [x0, #8]
   22e24:	mov	x0, #0x3ffffffe            	// #1073741822
   22e28:	cmp	x1, x0
   22e2c:	b.ne	22e38 <pipe_safer@@Base+0x300>  // b.any
   22e30:	mov	w0, #0x1                   	// #1
   22e34:	b	22f10 <pipe_safer@@Base+0x3d8>
   22e38:	ldr	x0, [sp, #56]
   22e3c:	ldr	x1, [x0, #8]
   22e40:	mov	x0, #0x3fffffff            	// #1073741823
   22e44:	cmp	x1, x0
   22e48:	b.ne	22e74 <pipe_safer@@Base+0x33c>  // b.any
   22e4c:	ldr	x0, [sp, #56]
   22e50:	add	x0, x0, #0x10
   22e54:	ldr	x1, [x0, #8]
   22e58:	mov	x0, #0x3fffffff            	// #1073741823
   22e5c:	cmp	x1, x0
   22e60:	b.ne	22e74 <pipe_safer@@Base+0x33c>  // b.any
   22e64:	ldr	x0, [sp, #32]
   22e68:	str	xzr, [x0]
   22e6c:	mov	w0, #0x0                   	// #0
   22e70:	b	22f10 <pipe_safer@@Base+0x3d8>
   22e74:	ldr	x0, [sp, #56]
   22e78:	ldr	x1, [x0, #8]
   22e7c:	mov	x0, #0x3ffffffe            	// #1073741822
   22e80:	cmp	x1, x0
   22e84:	b.ne	22e9c <pipe_safer@@Base+0x364>  // b.any
   22e88:	ldr	x0, [sp, #40]
   22e8c:	bl	af10 <get_stat_atime@plt>
   22e90:	ldr	x2, [sp, #56]
   22e94:	stp	x0, x1, [x2]
   22e98:	b	22eb8 <pipe_safer@@Base+0x380>
   22e9c:	ldr	x0, [sp, #56]
   22ea0:	ldr	x1, [x0, #8]
   22ea4:	mov	x0, #0x3fffffff            	// #1073741823
   22ea8:	cmp	x1, x0
   22eac:	b.ne	22eb8 <pipe_safer@@Base+0x380>  // b.any
   22eb0:	ldr	x0, [sp, #56]
   22eb4:	bl	b730 <gettime@plt>
   22eb8:	ldr	x0, [sp, #56]
   22ebc:	add	x0, x0, #0x10
   22ec0:	ldr	x1, [x0, #8]
   22ec4:	mov	x0, #0x3ffffffe            	// #1073741822
   22ec8:	cmp	x1, x0
   22ecc:	b.ne	22ee8 <pipe_safer@@Base+0x3b0>  // b.any
   22ed0:	ldr	x0, [sp, #56]
   22ed4:	add	x19, x0, #0x10
   22ed8:	ldr	x0, [sp, #40]
   22edc:	bl	ae60 <get_stat_mtime@plt>
   22ee0:	stp	x0, x1, [x19]
   22ee4:	b	22f0c <pipe_safer@@Base+0x3d4>
   22ee8:	ldr	x0, [sp, #56]
   22eec:	add	x0, x0, #0x10
   22ef0:	ldr	x1, [x0, #8]
   22ef4:	mov	x0, #0x3fffffff            	// #1073741823
   22ef8:	cmp	x1, x0
   22efc:	b.ne	22f0c <pipe_safer@@Base+0x3d4>  // b.any
   22f00:	ldr	x0, [sp, #56]
   22f04:	add	x0, x0, #0x10
   22f08:	bl	b730 <gettime@plt>
   22f0c:	mov	w0, #0x0                   	// #0
   22f10:	ldr	x19, [sp, #16]
   22f14:	ldp	x29, x30, [sp], #64
   22f18:	ret

0000000000022f1c <fdutimens@@Base>:
   22f1c:	stp	x29, x30, [sp, #-352]!
   22f20:	mov	x29, sp
   22f24:	str	x19, [sp, #16]
   22f28:	str	w0, [sp, #60]
   22f2c:	str	x1, [sp, #48]
   22f30:	str	x2, [sp, #40]
   22f34:	ldr	x0, [sp, #40]
   22f38:	cmp	x0, #0x0
   22f3c:	b.eq	22f48 <fdutimens@@Base+0x2c>  // b.none
   22f40:	add	x0, sp, #0x110
   22f44:	b	22f4c <fdutimens@@Base+0x30>
   22f48:	mov	x0, #0x0                   	// #0
   22f4c:	str	x0, [sp, #264]
   22f50:	str	wzr, [sp, #348]
   22f54:	ldr	x0, [sp, #264]
   22f58:	cmp	x0, #0x0
   22f5c:	b.eq	22f84 <fdutimens@@Base+0x68>  // b.none
   22f60:	ldr	x0, [sp, #40]
   22f64:	ldp	x0, x1, [x0]
   22f68:	stp	x0, x1, [sp, #272]
   22f6c:	ldr	x0, [sp, #40]
   22f70:	ldp	x0, x1, [x0, #16]
   22f74:	stp	x0, x1, [sp, #288]
   22f78:	ldr	x0, [sp, #264]
   22f7c:	bl	22c24 <pipe_safer@@Base+0xec>
   22f80:	str	w0, [sp, #348]
   22f84:	ldr	w0, [sp, #348]
   22f88:	cmp	w0, #0x0
   22f8c:	b.ge	22f98 <fdutimens@@Base+0x7c>  // b.tcont
   22f90:	mov	w0, #0xffffffff            	// #-1
   22f94:	b	23488 <fdutimens@@Base+0x56c>
   22f98:	ldr	w0, [sp, #60]
   22f9c:	cmp	w0, #0x0
   22fa0:	b.ge	22fc8 <fdutimens@@Base+0xac>  // b.tcont
   22fa4:	ldr	x0, [sp, #48]
   22fa8:	cmp	x0, #0x0
   22fac:	b.ne	22fc8 <fdutimens@@Base+0xac>  // b.any
   22fb0:	bl	b640 <__errno_location@plt>
   22fb4:	mov	x1, x0
   22fb8:	mov	w0, #0x9                   	// #9
   22fbc:	str	w0, [x1]
   22fc0:	mov	w0, #0xffffffff            	// #-1
   22fc4:	b	23488 <fdutimens@@Base+0x56c>
   22fc8:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   22fcc:	add	x0, x0, #0x5d0
   22fd0:	ldr	w0, [x0]
   22fd4:	cmp	w0, #0x0
   22fd8:	b.lt	23188 <fdutimens@@Base+0x26c>  // b.tstop
   22fdc:	ldr	w0, [sp, #348]
   22fe0:	cmp	w0, #0x2
   22fe4:	b.ne	230a0 <fdutimens@@Base+0x184>  // b.any
   22fe8:	ldr	w0, [sp, #60]
   22fec:	cmp	w0, #0x0
   22ff0:	b.ge	23014 <fdutimens@@Base+0xf8>  // b.tcont
   22ff4:	add	x0, sp, #0x88
   22ff8:	mov	x1, x0
   22ffc:	ldr	x0, [sp, #48]
   23000:	bl	42370 <vasnprintf@@Base+0x2174>
   23004:	cmp	w0, #0x0
   23008:	cset	w0, ne  // ne = any
   2300c:	and	w0, w0, #0xff
   23010:	b	23030 <fdutimens@@Base+0x114>
   23014:	add	x0, sp, #0x88
   23018:	mov	x1, x0
   2301c:	ldr	w0, [sp, #60]
   23020:	bl	42380 <vasnprintf@@Base+0x2184>
   23024:	cmp	w0, #0x0
   23028:	cset	w0, ne  // ne = any
   2302c:	and	w0, w0, #0xff
   23030:	cmp	w0, #0x0
   23034:	b.eq	23040 <fdutimens@@Base+0x124>  // b.none
   23038:	mov	w0, #0xffffffff            	// #-1
   2303c:	b	23488 <fdutimens@@Base+0x56c>
   23040:	ldr	x0, [sp, #264]
   23044:	ldr	x1, [x0, #8]
   23048:	mov	x0, #0x3ffffffe            	// #1073741822
   2304c:	cmp	x1, x0
   23050:	b.ne	23068 <fdutimens@@Base+0x14c>  // b.any
   23054:	ldr	x19, [sp, #264]
   23058:	add	x0, sp, #0x88
   2305c:	bl	af10 <get_stat_atime@plt>
   23060:	stp	x0, x1, [x19]
   23064:	b	23094 <fdutimens@@Base+0x178>
   23068:	ldr	x0, [sp, #264]
   2306c:	add	x0, x0, #0x10
   23070:	ldr	x1, [x0, #8]
   23074:	mov	x0, #0x3ffffffe            	// #1073741822
   23078:	cmp	x1, x0
   2307c:	b.ne	23094 <fdutimens@@Base+0x178>  // b.any
   23080:	ldr	x0, [sp, #264]
   23084:	add	x19, x0, #0x10
   23088:	add	x0, sp, #0x88
   2308c:	bl	ae60 <get_stat_mtime@plt>
   23090:	stp	x0, x1, [x19]
   23094:	ldr	w0, [sp, #348]
   23098:	add	w0, w0, #0x1
   2309c:	str	w0, [sp, #348]
   230a0:	ldr	w0, [sp, #60]
   230a4:	cmp	w0, #0x0
   230a8:	b.ge	23118 <fdutimens@@Base+0x1fc>  // b.tcont
   230ac:	ldr	x0, [sp, #264]
   230b0:	mov	w3, #0x0                   	// #0
   230b4:	mov	x2, x0
   230b8:	ldr	x1, [sp, #48]
   230bc:	mov	w0, #0xffffff9c            	// #-100
   230c0:	bl	b2b0 <utimensat@plt>
   230c4:	str	w0, [sp, #324]
   230c8:	ldr	w0, [sp, #324]
   230cc:	cmp	w0, #0x0
   230d0:	b.le	230e4 <fdutimens@@Base+0x1c8>
   230d4:	bl	b640 <__errno_location@plt>
   230d8:	mov	x1, x0
   230dc:	mov	w0, #0x26                  	// #38
   230e0:	str	w0, [x1]
   230e4:	ldr	w0, [sp, #324]
   230e8:	cmp	w0, #0x0
   230ec:	b.eq	23100 <fdutimens@@Base+0x1e4>  // b.none
   230f0:	bl	b640 <__errno_location@plt>
   230f4:	ldr	w0, [x0]
   230f8:	cmp	w0, #0x26
   230fc:	b.eq	23118 <fdutimens@@Base+0x1fc>  // b.none
   23100:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   23104:	add	x0, x0, #0x5d0
   23108:	mov	w1, #0x1                   	// #1
   2310c:	str	w1, [x0]
   23110:	ldr	w0, [sp, #324]
   23114:	b	23488 <fdutimens@@Base+0x56c>
   23118:	ldr	w0, [sp, #60]
   2311c:	cmp	w0, #0x0
   23120:	b.lt	23188 <fdutimens@@Base+0x26c>  // b.tstop
   23124:	ldr	x0, [sp, #264]
   23128:	mov	x1, x0
   2312c:	ldr	w0, [sp, #60]
   23130:	bl	ac50 <futimens@plt>
   23134:	str	w0, [sp, #324]
   23138:	ldr	w0, [sp, #324]
   2313c:	cmp	w0, #0x0
   23140:	b.le	23154 <fdutimens@@Base+0x238>
   23144:	bl	b640 <__errno_location@plt>
   23148:	mov	x1, x0
   2314c:	mov	w0, #0x26                  	// #38
   23150:	str	w0, [x1]
   23154:	ldr	w0, [sp, #324]
   23158:	cmp	w0, #0x0
   2315c:	b.eq	23170 <fdutimens@@Base+0x254>  // b.none
   23160:	bl	b640 <__errno_location@plt>
   23164:	ldr	w0, [x0]
   23168:	cmp	w0, #0x26
   2316c:	b.eq	23188 <fdutimens@@Base+0x26c>  // b.none
   23170:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   23174:	add	x0, x0, #0x5d0
   23178:	mov	w1, #0x1                   	// #1
   2317c:	str	w1, [x0]
   23180:	ldr	w0, [sp, #324]
   23184:	b	23488 <fdutimens@@Base+0x56c>
   23188:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   2318c:	add	x0, x0, #0x5d0
   23190:	mov	w1, #0xffffffff            	// #-1
   23194:	str	w1, [x0]
   23198:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   2319c:	add	x0, x0, #0x5d4
   231a0:	mov	w1, #0xffffffff            	// #-1
   231a4:	str	w1, [x0]
   231a8:	ldr	w0, [sp, #348]
   231ac:	cmp	w0, #0x0
   231b0:	b.eq	23244 <fdutimens@@Base+0x328>  // b.none
   231b4:	ldr	w0, [sp, #348]
   231b8:	cmp	w0, #0x3
   231bc:	b.eq	23218 <fdutimens@@Base+0x2fc>  // b.none
   231c0:	ldr	w0, [sp, #60]
   231c4:	cmp	w0, #0x0
   231c8:	b.ge	231ec <fdutimens@@Base+0x2d0>  // b.tcont
   231cc:	add	x0, sp, #0x88
   231d0:	mov	x1, x0
   231d4:	ldr	x0, [sp, #48]
   231d8:	bl	42370 <vasnprintf@@Base+0x2174>
   231dc:	cmp	w0, #0x0
   231e0:	cset	w0, ne  // ne = any
   231e4:	and	w0, w0, #0xff
   231e8:	b	23208 <fdutimens@@Base+0x2ec>
   231ec:	add	x0, sp, #0x88
   231f0:	mov	x1, x0
   231f4:	ldr	w0, [sp, #60]
   231f8:	bl	42380 <vasnprintf@@Base+0x2184>
   231fc:	cmp	w0, #0x0
   23200:	cset	w0, ne  // ne = any
   23204:	and	w0, w0, #0xff
   23208:	cmp	w0, #0x0
   2320c:	b.eq	23218 <fdutimens@@Base+0x2fc>  // b.none
   23210:	mov	w0, #0xffffffff            	// #-1
   23214:	b	23488 <fdutimens@@Base+0x56c>
   23218:	ldr	x0, [sp, #264]
   2321c:	cmp	x0, #0x0
   23220:	b.eq	23244 <fdutimens@@Base+0x328>  // b.none
   23224:	add	x1, sp, #0x108
   23228:	add	x0, sp, #0x88
   2322c:	bl	22de4 <pipe_safer@@Base+0x2ac>
   23230:	and	w0, w0, #0xff
   23234:	cmp	w0, #0x0
   23238:	b.eq	23244 <fdutimens@@Base+0x328>  // b.none
   2323c:	mov	w0, #0x0                   	// #0
   23240:	b	23488 <fdutimens@@Base+0x56c>
   23244:	ldr	x0, [sp, #264]
   23248:	cmp	x0, #0x0
   2324c:	b.eq	232d4 <fdutimens@@Base+0x3b8>  // b.none
   23250:	ldr	x0, [sp, #264]
   23254:	ldr	x0, [x0]
   23258:	str	x0, [sp, #72]
   2325c:	ldr	x0, [sp, #264]
   23260:	ldr	x0, [x0, #8]
   23264:	mov	x1, #0xf7cf                	// #63439
   23268:	movk	x1, #0xe353, lsl #16
   2326c:	movk	x1, #0x9ba5, lsl #32
   23270:	movk	x1, #0x20c4, lsl #48
   23274:	smulh	x1, x0, x1
   23278:	asr	x1, x1, #7
   2327c:	asr	x0, x0, #63
   23280:	sub	x0, x1, x0
   23284:	str	x0, [sp, #80]
   23288:	ldr	x0, [sp, #264]
   2328c:	add	x0, x0, #0x10
   23290:	ldr	x0, [x0]
   23294:	str	x0, [sp, #88]
   23298:	ldr	x0, [sp, #264]
   2329c:	add	x0, x0, #0x10
   232a0:	ldr	x0, [x0, #8]
   232a4:	mov	x1, #0xf7cf                	// #63439
   232a8:	movk	x1, #0xe353, lsl #16
   232ac:	movk	x1, #0x9ba5, lsl #32
   232b0:	movk	x1, #0x20c4, lsl #48
   232b4:	smulh	x1, x0, x1
   232b8:	asr	x1, x1, #7
   232bc:	asr	x0, x0, #63
   232c0:	sub	x0, x1, x0
   232c4:	str	x0, [sp, #96]
   232c8:	add	x0, sp, #0x48
   232cc:	str	x0, [sp, #336]
   232d0:	b	232d8 <fdutimens@@Base+0x3bc>
   232d4:	str	xzr, [sp, #336]
   232d8:	ldr	w0, [sp, #60]
   232dc:	cmp	w0, #0x0
   232e0:	b.ge	232f8 <fdutimens@@Base+0x3dc>  // b.tcont
   232e4:	ldr	x2, [sp, #336]
   232e8:	ldr	x1, [sp, #48]
   232ec:	mov	w0, #0xffffff9c            	// #-100
   232f0:	bl	ab90 <futimesat@plt>
   232f4:	b	23488 <fdutimens@@Base+0x56c>
   232f8:	ldr	x2, [sp, #336]
   232fc:	mov	x1, #0x0                   	// #0
   23300:	ldr	w0, [sp, #60]
   23304:	bl	ab90 <futimesat@plt>
   23308:	cmp	w0, #0x0
   2330c:	b.ne	23468 <fdutimens@@Base+0x54c>  // b.any
   23310:	ldr	x0, [sp, #336]
   23314:	cmp	x0, #0x0
   23318:	b.eq	23460 <fdutimens@@Base+0x544>  // b.none
   2331c:	ldr	x0, [sp, #336]
   23320:	ldr	x1, [x0, #8]
   23324:	mov	x0, #0xa11f                	// #41247
   23328:	movk	x0, #0x7, lsl #16
   2332c:	cmp	x1, x0
   23330:	cset	w0, gt
   23334:	strb	w0, [sp, #323]
   23338:	ldr	x0, [sp, #336]
   2333c:	add	x0, x0, #0x10
   23340:	ldr	x1, [x0, #8]
   23344:	mov	x0, #0xa11f                	// #41247
   23348:	movk	x0, #0x7, lsl #16
   2334c:	cmp	x1, x0
   23350:	cset	w0, gt
   23354:	strb	w0, [sp, #322]
   23358:	ldrb	w1, [sp, #323]
   2335c:	ldrb	w0, [sp, #322]
   23360:	orr	w0, w1, w0
   23364:	and	w0, w0, #0xff
   23368:	cmp	w0, #0x0
   2336c:	b.eq	23460 <fdutimens@@Base+0x544>  // b.none
   23370:	add	x0, sp, #0x88
   23374:	mov	x1, x0
   23378:	ldr	w0, [sp, #60]
   2337c:	bl	42380 <vasnprintf@@Base+0x2184>
   23380:	cmp	w0, #0x0
   23384:	b.ne	23460 <fdutimens@@Base+0x544>  // b.any
   23388:	ldr	x1, [sp, #208]
   2338c:	ldr	x0, [sp, #336]
   23390:	ldr	x0, [x0]
   23394:	sub	x0, x1, x0
   23398:	str	x0, [sp, #312]
   2339c:	ldr	x1, [sp, #224]
   233a0:	ldr	x0, [sp, #336]
   233a4:	add	x0, x0, #0x10
   233a8:	ldr	x0, [x0]
   233ac:	sub	x0, x1, x0
   233b0:	str	x0, [sp, #304]
   233b4:	str	xzr, [sp, #328]
   233b8:	ldr	x0, [sp, #336]
   233bc:	ldp	x0, x1, [x0]
   233c0:	stp	x0, x1, [sp, #104]
   233c4:	ldr	x0, [sp, #336]
   233c8:	ldp	x0, x1, [x0, #16]
   233cc:	stp	x0, x1, [sp, #120]
   233d0:	ldrb	w0, [sp, #323]
   233d4:	cmp	w0, #0x0
   233d8:	b.eq	23408 <fdutimens@@Base+0x4ec>  // b.none
   233dc:	ldr	x0, [sp, #312]
   233e0:	cmp	x0, #0x1
   233e4:	b.ne	23408 <fdutimens@@Base+0x4ec>  // b.any
   233e8:	add	x0, sp, #0x88
   233ec:	bl	ae30 <get_stat_atime_ns@plt>
   233f0:	cmp	x0, #0x0
   233f4:	b.ne	23408 <fdutimens@@Base+0x4ec>  // b.any
   233f8:	add	x0, sp, #0x68
   233fc:	str	x0, [sp, #328]
   23400:	ldr	x0, [sp, #328]
   23404:	str	xzr, [x0, #8]
   23408:	ldrb	w0, [sp, #322]
   2340c:	cmp	w0, #0x0
   23410:	b.eq	23444 <fdutimens@@Base+0x528>  // b.none
   23414:	ldr	x0, [sp, #304]
   23418:	cmp	x0, #0x1
   2341c:	b.ne	23444 <fdutimens@@Base+0x528>  // b.any
   23420:	add	x0, sp, #0x88
   23424:	bl	b5d0 <get_stat_mtime_ns@plt>
   23428:	cmp	x0, #0x0
   2342c:	b.ne	23444 <fdutimens@@Base+0x528>  // b.any
   23430:	add	x0, sp, #0x68
   23434:	str	x0, [sp, #328]
   23438:	ldr	x0, [sp, #328]
   2343c:	add	x0, x0, #0x10
   23440:	str	xzr, [x0, #8]
   23444:	ldr	x0, [sp, #328]
   23448:	cmp	x0, #0x0
   2344c:	b.eq	23460 <fdutimens@@Base+0x544>  // b.none
   23450:	ldr	x2, [sp, #328]
   23454:	mov	x1, #0x0                   	// #0
   23458:	ldr	w0, [sp, #60]
   2345c:	bl	ab90 <futimesat@plt>
   23460:	mov	w0, #0x0                   	// #0
   23464:	b	23488 <fdutimens@@Base+0x56c>
   23468:	ldr	x0, [sp, #48]
   2346c:	cmp	x0, #0x0
   23470:	b.ne	2347c <fdutimens@@Base+0x560>  // b.any
   23474:	mov	w0, #0xffffffff            	// #-1
   23478:	b	23488 <fdutimens@@Base+0x56c>
   2347c:	ldr	x1, [sp, #336]
   23480:	ldr	x0, [sp, #48]
   23484:	bl	b460 <utimes@plt>
   23488:	ldr	x19, [sp, #16]
   2348c:	ldp	x29, x30, [sp], #352
   23490:	ret

0000000000023494 <utimens@@Base>:
   23494:	stp	x29, x30, [sp, #-32]!
   23498:	mov	x29, sp
   2349c:	str	x0, [sp, #24]
   234a0:	str	x1, [sp, #16]
   234a4:	ldr	x2, [sp, #16]
   234a8:	ldr	x1, [sp, #24]
   234ac:	mov	w0, #0xffffffff            	// #-1
   234b0:	bl	afd0 <fdutimens@plt>
   234b4:	ldp	x29, x30, [sp], #32
   234b8:	ret

00000000000234bc <lutimens@@Base>:
   234bc:	stp	x29, x30, [sp, #-224]!
   234c0:	mov	x29, sp
   234c4:	str	x19, [sp, #16]
   234c8:	str	x0, [sp, #40]
   234cc:	str	x1, [sp, #32]
   234d0:	ldr	x0, [sp, #32]
   234d4:	cmp	x0, #0x0
   234d8:	b.eq	234e4 <lutimens@@Base+0x28>  // b.none
   234dc:	add	x0, sp, #0xb8
   234e0:	b	234e8 <lutimens@@Base+0x2c>
   234e4:	mov	x0, #0x0                   	// #0
   234e8:	str	x0, [sp, #176]
   234ec:	str	wzr, [sp, #220]
   234f0:	ldr	x0, [sp, #176]
   234f4:	cmp	x0, #0x0
   234f8:	b.eq	23520 <lutimens@@Base+0x64>  // b.none
   234fc:	ldr	x0, [sp, #32]
   23500:	ldp	x0, x1, [x0]
   23504:	stp	x0, x1, [sp, #184]
   23508:	ldr	x0, [sp, #32]
   2350c:	ldp	x0, x1, [x0, #16]
   23510:	stp	x0, x1, [sp, #200]
   23514:	ldr	x0, [sp, #176]
   23518:	bl	22c24 <pipe_safer@@Base+0xec>
   2351c:	str	w0, [sp, #220]
   23520:	ldr	w0, [sp, #220]
   23524:	cmp	w0, #0x0
   23528:	b.ge	23534 <lutimens@@Base+0x78>  // b.tcont
   2352c:	mov	w0, #0xffffffff            	// #-1
   23530:	b	2372c <lutimens@@Base+0x270>
   23534:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   23538:	add	x0, x0, #0x5d4
   2353c:	ldr	w0, [x0]
   23540:	cmp	w0, #0x0
   23544:	b.lt	23650 <lutimens@@Base+0x194>  // b.tstop
   23548:	ldr	w0, [sp, #220]
   2354c:	cmp	w0, #0x2
   23550:	b.ne	235d4 <lutimens@@Base+0x118>  // b.any
   23554:	add	x0, sp, #0x30
   23558:	mov	x1, x0
   2355c:	ldr	x0, [sp, #40]
   23560:	bl	42390 <vasnprintf@@Base+0x2194>
   23564:	cmp	w0, #0x0
   23568:	b.eq	23574 <lutimens@@Base+0xb8>  // b.none
   2356c:	mov	w0, #0xffffffff            	// #-1
   23570:	b	2372c <lutimens@@Base+0x270>
   23574:	ldr	x0, [sp, #176]
   23578:	ldr	x1, [x0, #8]
   2357c:	mov	x0, #0x3ffffffe            	// #1073741822
   23580:	cmp	x1, x0
   23584:	b.ne	2359c <lutimens@@Base+0xe0>  // b.any
   23588:	ldr	x19, [sp, #176]
   2358c:	add	x0, sp, #0x30
   23590:	bl	af10 <get_stat_atime@plt>
   23594:	stp	x0, x1, [x19]
   23598:	b	235c8 <lutimens@@Base+0x10c>
   2359c:	ldr	x0, [sp, #176]
   235a0:	add	x0, x0, #0x10
   235a4:	ldr	x1, [x0, #8]
   235a8:	mov	x0, #0x3ffffffe            	// #1073741822
   235ac:	cmp	x1, x0
   235b0:	b.ne	235c8 <lutimens@@Base+0x10c>  // b.any
   235b4:	ldr	x0, [sp, #176]
   235b8:	add	x19, x0, #0x10
   235bc:	add	x0, sp, #0x30
   235c0:	bl	ae60 <get_stat_mtime@plt>
   235c4:	stp	x0, x1, [x19]
   235c8:	ldr	w0, [sp, #220]
   235cc:	add	w0, w0, #0x1
   235d0:	str	w0, [sp, #220]
   235d4:	ldr	x0, [sp, #176]
   235d8:	mov	w3, #0x100                 	// #256
   235dc:	mov	x2, x0
   235e0:	ldr	x1, [sp, #40]
   235e4:	mov	w0, #0xffffff9c            	// #-100
   235e8:	bl	b2b0 <utimensat@plt>
   235ec:	str	w0, [sp, #216]
   235f0:	ldr	w0, [sp, #216]
   235f4:	cmp	w0, #0x0
   235f8:	b.le	2360c <lutimens@@Base+0x150>
   235fc:	bl	b640 <__errno_location@plt>
   23600:	mov	x1, x0
   23604:	mov	w0, #0x26                  	// #38
   23608:	str	w0, [x1]
   2360c:	ldr	w0, [sp, #216]
   23610:	cmp	w0, #0x0
   23614:	b.eq	23628 <lutimens@@Base+0x16c>  // b.none
   23618:	bl	b640 <__errno_location@plt>
   2361c:	ldr	w0, [x0]
   23620:	cmp	w0, #0x26
   23624:	b.eq	23650 <lutimens@@Base+0x194>  // b.none
   23628:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   2362c:	add	x0, x0, #0x5d0
   23630:	mov	w1, #0x1                   	// #1
   23634:	str	w1, [x0]
   23638:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   2363c:	add	x0, x0, #0x5d4
   23640:	mov	w1, #0x1                   	// #1
   23644:	str	w1, [x0]
   23648:	ldr	w0, [sp, #216]
   2364c:	b	2372c <lutimens@@Base+0x270>
   23650:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   23654:	add	x0, x0, #0x5d4
   23658:	mov	w1, #0xffffffff            	// #-1
   2365c:	str	w1, [x0]
   23660:	ldr	w0, [sp, #220]
   23664:	cmp	w0, #0x0
   23668:	b.eq	236c4 <lutimens@@Base+0x208>  // b.none
   2366c:	ldr	w0, [sp, #220]
   23670:	cmp	w0, #0x3
   23674:	b.eq	23698 <lutimens@@Base+0x1dc>  // b.none
   23678:	add	x0, sp, #0x30
   2367c:	mov	x1, x0
   23680:	ldr	x0, [sp, #40]
   23684:	bl	42390 <vasnprintf@@Base+0x2194>
   23688:	cmp	w0, #0x0
   2368c:	b.eq	23698 <lutimens@@Base+0x1dc>  // b.none
   23690:	mov	w0, #0xffffffff            	// #-1
   23694:	b	2372c <lutimens@@Base+0x270>
   23698:	ldr	x0, [sp, #176]
   2369c:	cmp	x0, #0x0
   236a0:	b.eq	236c4 <lutimens@@Base+0x208>  // b.none
   236a4:	add	x1, sp, #0xb0
   236a8:	add	x0, sp, #0x30
   236ac:	bl	22de4 <pipe_safer@@Base+0x2ac>
   236b0:	and	w0, w0, #0xff
   236b4:	cmp	w0, #0x0
   236b8:	b.eq	236c4 <lutimens@@Base+0x208>  // b.none
   236bc:	mov	w0, #0x0                   	// #0
   236c0:	b	2372c <lutimens@@Base+0x270>
   236c4:	ldr	w0, [sp, #220]
   236c8:	cmp	w0, #0x0
   236cc:	b.ne	236f0 <lutimens@@Base+0x234>  // b.any
   236d0:	add	x0, sp, #0x30
   236d4:	mov	x1, x0
   236d8:	ldr	x0, [sp, #40]
   236dc:	bl	42390 <vasnprintf@@Base+0x2194>
   236e0:	cmp	w0, #0x0
   236e4:	b.eq	236f0 <lutimens@@Base+0x234>  // b.none
   236e8:	mov	w0, #0xffffffff            	// #-1
   236ec:	b	2372c <lutimens@@Base+0x270>
   236f0:	ldr	w0, [sp, #64]
   236f4:	and	w0, w0, #0xf000
   236f8:	cmp	w0, #0xa, lsl #12
   236fc:	b.eq	23718 <lutimens@@Base+0x25c>  // b.none
   23700:	ldr	x0, [sp, #176]
   23704:	mov	x2, x0
   23708:	ldr	x1, [sp, #40]
   2370c:	mov	w0, #0xffffffff            	// #-1
   23710:	bl	afd0 <fdutimens@plt>
   23714:	b	2372c <lutimens@@Base+0x270>
   23718:	bl	b640 <__errno_location@plt>
   2371c:	mov	x1, x0
   23720:	mov	w0, #0x26                  	// #38
   23724:	str	w0, [x1]
   23728:	mov	w0, #0xffffffff            	// #-1
   2372c:	ldr	x19, [sp, #16]
   23730:	ldp	x29, x30, [sp], #224
   23734:	ret

0000000000023738 <xnmalloc@@Base>:
   23738:	stp	x29, x30, [sp, #-32]!
   2373c:	mov	x29, sp
   23740:	str	x0, [sp, #24]
   23744:	str	x1, [sp, #16]
   23748:	mov	x0, #0x0                   	// #0
   2374c:	ldr	x6, [sp, #24]
   23750:	ldr	x1, [sp, #16]
   23754:	mul	x7, x6, x1
   23758:	umulh	x1, x6, x1
   2375c:	mov	x2, x7
   23760:	mov	x3, x1
   23764:	mov	x4, x3
   23768:	mov	x5, #0x0                   	// #0
   2376c:	cmp	x4, #0x0
   23770:	b.eq	23778 <xnmalloc@@Base+0x40>  // b.none
   23774:	mov	x0, #0x1                   	// #1
   23778:	cmp	x2, #0x0
   2377c:	b.ge	23784 <xnmalloc@@Base+0x4c>  // b.tcont
   23780:	mov	x0, #0x1                   	// #1
   23784:	and	w0, w0, #0x1
   23788:	and	w0, w0, #0xff
   2378c:	cmp	w0, #0x0
   23790:	b.eq	23798 <xnmalloc@@Base+0x60>  // b.none
   23794:	bl	aee0 <xalloc_die@plt>
   23798:	ldr	x1, [sp, #24]
   2379c:	ldr	x0, [sp, #16]
   237a0:	mul	x0, x1, x0
   237a4:	bl	ace0 <xmalloc@plt>
   237a8:	ldp	x29, x30, [sp], #32
   237ac:	ret

00000000000237b0 <xnrealloc@@Base>:
   237b0:	stp	x29, x30, [sp, #-48]!
   237b4:	mov	x29, sp
   237b8:	str	x0, [sp, #40]
   237bc:	str	x1, [sp, #32]
   237c0:	str	x2, [sp, #24]
   237c4:	mov	x0, #0x0                   	// #0
   237c8:	ldr	x2, [sp, #32]
   237cc:	ldr	x1, [sp, #24]
   237d0:	mul	x3, x2, x1
   237d4:	umulh	x1, x2, x1
   237d8:	mov	x4, x3
   237dc:	mov	x5, x1
   237e0:	mov	x6, x5
   237e4:	mov	x7, #0x0                   	// #0
   237e8:	cmp	x6, #0x0
   237ec:	b.eq	237f4 <xnrealloc@@Base+0x44>  // b.none
   237f0:	mov	x0, #0x1                   	// #1
   237f4:	cmp	x4, #0x0
   237f8:	b.ge	23800 <xnrealloc@@Base+0x50>  // b.tcont
   237fc:	mov	x0, #0x1                   	// #1
   23800:	and	w0, w0, #0x1
   23804:	and	w0, w0, #0xff
   23808:	cmp	w0, #0x0
   2380c:	b.eq	23814 <xnrealloc@@Base+0x64>  // b.none
   23810:	bl	aee0 <xalloc_die@plt>
   23814:	ldr	x1, [sp, #32]
   23818:	ldr	x0, [sp, #24]
   2381c:	mul	x0, x1, x0
   23820:	mov	x1, x0
   23824:	ldr	x0, [sp, #40]
   23828:	bl	abf0 <xrealloc@plt>
   2382c:	ldp	x29, x30, [sp], #48
   23830:	ret

0000000000023834 <x2nrealloc@@Base>:
   23834:	stp	x29, x30, [sp, #-64]!
   23838:	mov	x29, sp
   2383c:	str	x0, [sp, #40]
   23840:	str	x1, [sp, #32]
   23844:	str	x2, [sp, #24]
   23848:	ldr	x0, [sp, #32]
   2384c:	ldr	x0, [x0]
   23850:	str	x0, [sp, #56]
   23854:	ldr	x0, [sp, #40]
   23858:	cmp	x0, #0x0
   2385c:	b.ne	238ec <x2nrealloc@@Base+0xb8>  // b.any
   23860:	ldr	x0, [sp, #56]
   23864:	cmp	x0, #0x0
   23868:	b.ne	2389c <x2nrealloc@@Base+0x68>  // b.any
   2386c:	mov	x1, #0x80                  	// #128
   23870:	ldr	x0, [sp, #24]
   23874:	udiv	x0, x1, x0
   23878:	str	x0, [sp, #56]
   2387c:	ldr	x0, [sp, #56]
   23880:	cmp	x0, #0x0
   23884:	cset	w0, eq  // eq = none
   23888:	and	w0, w0, #0xff
   2388c:	and	x0, x0, #0xff
   23890:	ldr	x1, [sp, #56]
   23894:	add	x0, x1, x0
   23898:	str	x0, [sp, #56]
   2389c:	mov	x0, #0x0                   	// #0
   238a0:	ldr	x2, [sp, #56]
   238a4:	ldr	x1, [sp, #24]
   238a8:	mul	x3, x2, x1
   238ac:	umulh	x1, x2, x1
   238b0:	mov	x4, x3
   238b4:	mov	x5, x1
   238b8:	mov	x6, x5
   238bc:	mov	x7, #0x0                   	// #0
   238c0:	cmp	x6, #0x0
   238c4:	b.eq	238cc <x2nrealloc@@Base+0x98>  // b.none
   238c8:	mov	x0, #0x1                   	// #1
   238cc:	cmp	x4, #0x0
   238d0:	b.ge	238d8 <x2nrealloc@@Base+0xa4>  // b.tcont
   238d4:	mov	x0, #0x1                   	// #1
   238d8:	and	w0, w0, #0x1
   238dc:	and	w0, w0, #0xff
   238e0:	cmp	w0, #0x0
   238e4:	b.eq	23924 <x2nrealloc@@Base+0xf0>  // b.none
   238e8:	bl	aee0 <xalloc_die@plt>
   238ec:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   238f0:	movk	x1, #0x5554
   238f4:	ldr	x0, [sp, #24]
   238f8:	udiv	x0, x1, x0
   238fc:	ldr	x1, [sp, #56]
   23900:	cmp	x1, x0
   23904:	b.cc	2390c <x2nrealloc@@Base+0xd8>  // b.lo, b.ul, b.last
   23908:	bl	aee0 <xalloc_die@plt>
   2390c:	ldr	x0, [sp, #56]
   23910:	lsr	x1, x0, #1
   23914:	ldr	x0, [sp, #56]
   23918:	add	x0, x1, x0
   2391c:	add	x0, x0, #0x1
   23920:	str	x0, [sp, #56]
   23924:	ldr	x0, [sp, #32]
   23928:	ldr	x1, [sp, #56]
   2392c:	str	x1, [x0]
   23930:	ldr	x1, [sp, #56]
   23934:	ldr	x0, [sp, #24]
   23938:	mul	x0, x1, x0
   2393c:	mov	x1, x0
   23940:	ldr	x0, [sp, #40]
   23944:	bl	abf0 <xrealloc@plt>
   23948:	ldp	x29, x30, [sp], #64
   2394c:	ret

0000000000023950 <xcharalloc@@Base>:
   23950:	stp	x29, x30, [sp, #-32]!
   23954:	mov	x29, sp
   23958:	str	x0, [sp, #24]
   2395c:	ldr	x0, [sp, #24]
   23960:	bl	ace0 <xmalloc@plt>
   23964:	ldp	x29, x30, [sp], #32
   23968:	ret

000000000002396c <xmalloc@@Base>:
   2396c:	stp	x29, x30, [sp, #-48]!
   23970:	mov	x29, sp
   23974:	str	x0, [sp, #24]
   23978:	ldr	x0, [sp, #24]
   2397c:	bl	ab40 <malloc@plt>
   23980:	str	x0, [sp, #40]
   23984:	ldr	x0, [sp, #40]
   23988:	cmp	x0, #0x0
   2398c:	b.ne	239a0 <xmalloc@@Base+0x34>  // b.any
   23990:	ldr	x0, [sp, #24]
   23994:	cmp	x0, #0x0
   23998:	b.eq	239a0 <xmalloc@@Base+0x34>  // b.none
   2399c:	bl	aee0 <xalloc_die@plt>
   239a0:	ldr	x0, [sp, #40]
   239a4:	ldp	x29, x30, [sp], #48
   239a8:	ret

00000000000239ac <xrealloc@@Base>:
   239ac:	stp	x29, x30, [sp, #-32]!
   239b0:	mov	x29, sp
   239b4:	str	x0, [sp, #24]
   239b8:	str	x1, [sp, #16]
   239bc:	ldr	x0, [sp, #16]
   239c0:	cmp	x0, #0x0
   239c4:	b.ne	239e4 <xrealloc@@Base+0x38>  // b.any
   239c8:	ldr	x0, [sp, #24]
   239cc:	cmp	x0, #0x0
   239d0:	b.eq	239e4 <xrealloc@@Base+0x38>  // b.none
   239d4:	ldr	x0, [sp, #24]
   239d8:	bl	b130 <free@plt>
   239dc:	mov	x0, #0x0                   	// #0
   239e0:	b	23a14 <xrealloc@@Base+0x68>
   239e4:	ldr	x1, [sp, #16]
   239e8:	ldr	x0, [sp, #24]
   239ec:	bl	ae00 <realloc@plt>
   239f0:	str	x0, [sp, #24]
   239f4:	ldr	x0, [sp, #24]
   239f8:	cmp	x0, #0x0
   239fc:	b.ne	23a10 <xrealloc@@Base+0x64>  // b.any
   23a00:	ldr	x0, [sp, #16]
   23a04:	cmp	x0, #0x0
   23a08:	b.eq	23a10 <xrealloc@@Base+0x64>  // b.none
   23a0c:	bl	aee0 <xalloc_die@plt>
   23a10:	ldr	x0, [sp, #24]
   23a14:	ldp	x29, x30, [sp], #32
   23a18:	ret

0000000000023a1c <x2realloc@@Base>:
   23a1c:	stp	x29, x30, [sp, #-32]!
   23a20:	mov	x29, sp
   23a24:	str	x0, [sp, #24]
   23a28:	str	x1, [sp, #16]
   23a2c:	mov	x2, #0x1                   	// #1
   23a30:	ldr	x1, [sp, #16]
   23a34:	ldr	x0, [sp, #24]
   23a38:	bl	23834 <x2nrealloc@@Base>
   23a3c:	ldp	x29, x30, [sp], #32
   23a40:	ret

0000000000023a44 <xzalloc@@Base>:
   23a44:	stp	x29, x30, [sp, #-32]!
   23a48:	mov	x29, sp
   23a4c:	str	x0, [sp, #24]
   23a50:	ldr	x0, [sp, #24]
   23a54:	bl	ace0 <xmalloc@plt>
   23a58:	ldr	x2, [sp, #24]
   23a5c:	mov	w1, #0x0                   	// #0
   23a60:	bl	acb0 <memset@plt>
   23a64:	ldp	x29, x30, [sp], #32
   23a68:	ret

0000000000023a6c <xcalloc@@Base>:
   23a6c:	stp	x29, x30, [sp, #-48]!
   23a70:	mov	x29, sp
   23a74:	str	x0, [sp, #24]
   23a78:	str	x1, [sp, #16]
   23a7c:	mov	x0, #0x0                   	// #0
   23a80:	ldr	x6, [sp, #24]
   23a84:	ldr	x1, [sp, #16]
   23a88:	mul	x7, x6, x1
   23a8c:	umulh	x1, x6, x1
   23a90:	mov	x2, x7
   23a94:	mov	x3, x1
   23a98:	mov	x4, x3
   23a9c:	mov	x5, #0x0                   	// #0
   23aa0:	cmp	x4, #0x0
   23aa4:	b.eq	23aac <xcalloc@@Base+0x40>  // b.none
   23aa8:	mov	x0, #0x1                   	// #1
   23aac:	cmp	x2, #0x0
   23ab0:	b.ge	23ab8 <xcalloc@@Base+0x4c>  // b.tcont
   23ab4:	mov	x0, #0x1                   	// #1
   23ab8:	and	w0, w0, #0x1
   23abc:	and	w0, w0, #0xff
   23ac0:	cmp	w0, #0x0
   23ac4:	b.ne	23ae4 <xcalloc@@Base+0x78>  // b.any
   23ac8:	ldr	x1, [sp, #16]
   23acc:	ldr	x0, [sp, #24]
   23ad0:	bl	ad80 <calloc@plt>
   23ad4:	str	x0, [sp, #40]
   23ad8:	ldr	x0, [sp, #40]
   23adc:	cmp	x0, #0x0
   23ae0:	b.ne	23ae8 <xcalloc@@Base+0x7c>  // b.any
   23ae4:	bl	aee0 <xalloc_die@plt>
   23ae8:	ldr	x0, [sp, #40]
   23aec:	ldp	x29, x30, [sp], #48
   23af0:	ret

0000000000023af4 <xmemdup@@Base>:
   23af4:	stp	x29, x30, [sp, #-32]!
   23af8:	mov	x29, sp
   23afc:	str	x0, [sp, #24]
   23b00:	str	x1, [sp, #16]
   23b04:	ldr	x0, [sp, #16]
   23b08:	bl	ace0 <xmalloc@plt>
   23b0c:	ldr	x2, [sp, #16]
   23b10:	ldr	x1, [sp, #24]
   23b14:	bl	a790 <memcpy@plt>
   23b18:	ldp	x29, x30, [sp], #32
   23b1c:	ret

0000000000023b20 <xstrdup@@Base>:
   23b20:	stp	x29, x30, [sp, #-32]!
   23b24:	mov	x29, sp
   23b28:	str	x0, [sp, #24]
   23b2c:	ldr	x0, [sp, #24]
   23b30:	bl	a820 <strlen@plt>
   23b34:	add	x0, x0, #0x1
   23b38:	mov	x1, x0
   23b3c:	ldr	x0, [sp, #24]
   23b40:	bl	b5e0 <xmemdup@plt>
   23b44:	ldp	x29, x30, [sp], #32
   23b48:	ret

0000000000023b4c <xalloc_die@@Base>:
   23b4c:	stp	x29, x30, [sp, #-32]!
   23b50:	mov	x29, sp
   23b54:	str	x19, [sp, #16]
   23b58:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   23b5c:	ldr	x0, [x0, #3976]
   23b60:	ldr	w19, [x0]
   23b64:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   23b68:	add	x1, x0, #0xe50
   23b6c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   23b70:	add	x0, x0, #0xe68
   23b74:	bl	b120 <dgettext@plt>
   23b78:	mov	x3, x0
   23b7c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   23b80:	add	x2, x0, #0xe78
   23b84:	mov	w1, #0x0                   	// #0
   23b88:	mov	w0, w19
   23b8c:	bl	a850 <error@plt>
   23b90:	bl	af70 <abort@plt>

0000000000023b94 <xgetcwd@@Base>:
   23b94:	stp	x29, x30, [sp, #-32]!
   23b98:	mov	x29, sp
   23b9c:	mov	x1, #0x0                   	// #0
   23ba0:	mov	x0, #0x0                   	// #0
   23ba4:	bl	a7e0 <getcwd@plt>
   23ba8:	str	x0, [sp, #24]
   23bac:	ldr	x0, [sp, #24]
   23bb0:	cmp	x0, #0x0
   23bb4:	b.ne	23bcc <xgetcwd@@Base+0x38>  // b.any
   23bb8:	bl	b640 <__errno_location@plt>
   23bbc:	ldr	w0, [x0]
   23bc0:	cmp	w0, #0xc
   23bc4:	b.ne	23bcc <xgetcwd@@Base+0x38>  // b.any
   23bc8:	bl	aee0 <xalloc_die@plt>
   23bcc:	ldr	x0, [sp, #24]
   23bd0:	ldp	x29, x30, [sp], #32
   23bd4:	ret

0000000000023bd8 <gl_list_create_empty@@Base>:
   23bd8:	stp	x29, x30, [sp, #-80]!
   23bdc:	mov	x29, sp
   23be0:	str	x0, [sp, #56]
   23be4:	str	x1, [sp, #48]
   23be8:	str	x2, [sp, #40]
   23bec:	str	x3, [sp, #32]
   23bf0:	strb	w4, [sp, #31]
   23bf4:	ldrb	w4, [sp, #31]
   23bf8:	ldr	x3, [sp, #32]
   23bfc:	ldr	x2, [sp, #40]
   23c00:	ldr	x1, [sp, #48]
   23c04:	ldr	x0, [sp, #56]
   23c08:	bl	a7c0 <gl_list_nx_create_empty@plt>
   23c0c:	str	x0, [sp, #72]
   23c10:	ldr	x0, [sp, #72]
   23c14:	cmp	x0, #0x0
   23c18:	b.ne	23c20 <gl_list_create_empty@@Base+0x48>  // b.any
   23c1c:	bl	aee0 <xalloc_die@plt>
   23c20:	ldr	x0, [sp, #72]
   23c24:	ldp	x29, x30, [sp], #80
   23c28:	ret

0000000000023c2c <gl_list_create@@Base>:
   23c2c:	stp	x29, x30, [sp, #-96]!
   23c30:	mov	x29, sp
   23c34:	str	x0, [sp, #72]
   23c38:	str	x1, [sp, #64]
   23c3c:	str	x2, [sp, #56]
   23c40:	str	x3, [sp, #48]
   23c44:	strb	w4, [sp, #47]
   23c48:	str	x5, [sp, #32]
   23c4c:	str	x6, [sp, #24]
   23c50:	ldr	x6, [sp, #24]
   23c54:	ldr	x5, [sp, #32]
   23c58:	ldrb	w4, [sp, #47]
   23c5c:	ldr	x3, [sp, #48]
   23c60:	ldr	x2, [sp, #56]
   23c64:	ldr	x1, [sp, #64]
   23c68:	ldr	x0, [sp, #72]
   23c6c:	bl	ae90 <gl_list_nx_create@plt>
   23c70:	str	x0, [sp, #88]
   23c74:	ldr	x0, [sp, #88]
   23c78:	cmp	x0, #0x0
   23c7c:	b.ne	23c84 <gl_list_create@@Base+0x58>  // b.any
   23c80:	bl	aee0 <xalloc_die@plt>
   23c84:	ldr	x0, [sp, #88]
   23c88:	ldp	x29, x30, [sp], #96
   23c8c:	ret

0000000000023c90 <gl_list_node_set_value@@Base>:
   23c90:	stp	x29, x30, [sp, #-64]!
   23c94:	mov	x29, sp
   23c98:	str	x0, [sp, #40]
   23c9c:	str	x1, [sp, #32]
   23ca0:	str	x2, [sp, #24]
   23ca4:	ldr	x2, [sp, #24]
   23ca8:	ldr	x1, [sp, #32]
   23cac:	ldr	x0, [sp, #40]
   23cb0:	bl	ab50 <gl_list_node_nx_set_value@plt>
   23cb4:	str	w0, [sp, #60]
   23cb8:	ldr	w0, [sp, #60]
   23cbc:	cmp	w0, #0x0
   23cc0:	b.ge	23cc8 <gl_list_node_set_value@@Base+0x38>  // b.tcont
   23cc4:	bl	aee0 <xalloc_die@plt>
   23cc8:	nop
   23ccc:	ldp	x29, x30, [sp], #64
   23cd0:	ret

0000000000023cd4 <gl_list_set_at@@Base>:
   23cd4:	stp	x29, x30, [sp, #-64]!
   23cd8:	mov	x29, sp
   23cdc:	str	x0, [sp, #40]
   23ce0:	str	x1, [sp, #32]
   23ce4:	str	x2, [sp, #24]
   23ce8:	ldr	x2, [sp, #24]
   23cec:	ldr	x1, [sp, #32]
   23cf0:	ldr	x0, [sp, #40]
   23cf4:	bl	ac90 <gl_list_nx_set_at@plt>
   23cf8:	str	x0, [sp, #56]
   23cfc:	ldr	x0, [sp, #56]
   23d00:	cmp	x0, #0x0
   23d04:	b.ne	23d0c <gl_list_set_at@@Base+0x38>  // b.any
   23d08:	bl	aee0 <xalloc_die@plt>
   23d0c:	ldr	x0, [sp, #56]
   23d10:	ldp	x29, x30, [sp], #64
   23d14:	ret

0000000000023d18 <gl_list_add_first@@Base>:
   23d18:	stp	x29, x30, [sp, #-48]!
   23d1c:	mov	x29, sp
   23d20:	str	x0, [sp, #24]
   23d24:	str	x1, [sp, #16]
   23d28:	ldr	x1, [sp, #16]
   23d2c:	ldr	x0, [sp, #24]
   23d30:	bl	ad70 <gl_list_nx_add_first@plt>
   23d34:	str	x0, [sp, #40]
   23d38:	ldr	x0, [sp, #40]
   23d3c:	cmp	x0, #0x0
   23d40:	b.ne	23d48 <gl_list_add_first@@Base+0x30>  // b.any
   23d44:	bl	aee0 <xalloc_die@plt>
   23d48:	ldr	x0, [sp, #40]
   23d4c:	ldp	x29, x30, [sp], #48
   23d50:	ret

0000000000023d54 <gl_list_add_last@@Base>:
   23d54:	stp	x29, x30, [sp, #-48]!
   23d58:	mov	x29, sp
   23d5c:	str	x0, [sp, #24]
   23d60:	str	x1, [sp, #16]
   23d64:	ldr	x1, [sp, #16]
   23d68:	ldr	x0, [sp, #24]
   23d6c:	bl	a830 <gl_list_nx_add_last@plt>
   23d70:	str	x0, [sp, #40]
   23d74:	ldr	x0, [sp, #40]
   23d78:	cmp	x0, #0x0
   23d7c:	b.ne	23d84 <gl_list_add_last@@Base+0x30>  // b.any
   23d80:	bl	aee0 <xalloc_die@plt>
   23d84:	ldr	x0, [sp, #40]
   23d88:	ldp	x29, x30, [sp], #48
   23d8c:	ret

0000000000023d90 <gl_list_add_before@@Base>:
   23d90:	stp	x29, x30, [sp, #-64]!
   23d94:	mov	x29, sp
   23d98:	str	x0, [sp, #40]
   23d9c:	str	x1, [sp, #32]
   23da0:	str	x2, [sp, #24]
   23da4:	ldr	x2, [sp, #24]
   23da8:	ldr	x1, [sp, #32]
   23dac:	ldr	x0, [sp, #40]
   23db0:	bl	b250 <gl_list_nx_add_before@plt>
   23db4:	str	x0, [sp, #56]
   23db8:	ldr	x0, [sp, #56]
   23dbc:	cmp	x0, #0x0
   23dc0:	b.ne	23dc8 <gl_list_add_before@@Base+0x38>  // b.any
   23dc4:	bl	aee0 <xalloc_die@plt>
   23dc8:	ldr	x0, [sp, #56]
   23dcc:	ldp	x29, x30, [sp], #64
   23dd0:	ret

0000000000023dd4 <gl_list_add_after@@Base>:
   23dd4:	stp	x29, x30, [sp, #-64]!
   23dd8:	mov	x29, sp
   23ddc:	str	x0, [sp, #40]
   23de0:	str	x1, [sp, #32]
   23de4:	str	x2, [sp, #24]
   23de8:	ldr	x2, [sp, #24]
   23dec:	ldr	x1, [sp, #32]
   23df0:	ldr	x0, [sp, #40]
   23df4:	bl	aba0 <gl_list_nx_add_after@plt>
   23df8:	str	x0, [sp, #56]
   23dfc:	ldr	x0, [sp, #56]
   23e00:	cmp	x0, #0x0
   23e04:	b.ne	23e0c <gl_list_add_after@@Base+0x38>  // b.any
   23e08:	bl	aee0 <xalloc_die@plt>
   23e0c:	ldr	x0, [sp, #56]
   23e10:	ldp	x29, x30, [sp], #64
   23e14:	ret

0000000000023e18 <gl_list_add_at@@Base>:
   23e18:	stp	x29, x30, [sp, #-64]!
   23e1c:	mov	x29, sp
   23e20:	str	x0, [sp, #40]
   23e24:	str	x1, [sp, #32]
   23e28:	str	x2, [sp, #24]
   23e2c:	ldr	x2, [sp, #24]
   23e30:	ldr	x1, [sp, #32]
   23e34:	ldr	x0, [sp, #40]
   23e38:	bl	b220 <gl_list_nx_add_at@plt>
   23e3c:	str	x0, [sp, #56]
   23e40:	ldr	x0, [sp, #56]
   23e44:	cmp	x0, #0x0
   23e48:	b.ne	23e50 <gl_list_add_at@@Base+0x38>  // b.any
   23e4c:	bl	aee0 <xalloc_die@plt>
   23e50:	ldr	x0, [sp, #56]
   23e54:	ldp	x29, x30, [sp], #64
   23e58:	ret

0000000000023e5c <gl_sortedlist_add@@Base>:
   23e5c:	stp	x29, x30, [sp, #-64]!
   23e60:	mov	x29, sp
   23e64:	str	x0, [sp, #40]
   23e68:	str	x1, [sp, #32]
   23e6c:	str	x2, [sp, #24]
   23e70:	ldr	x2, [sp, #24]
   23e74:	ldr	x1, [sp, #32]
   23e78:	ldr	x0, [sp, #40]
   23e7c:	bl	b1c0 <gl_sortedlist_nx_add@plt>
   23e80:	str	x0, [sp, #56]
   23e84:	ldr	x0, [sp, #56]
   23e88:	cmp	x0, #0x0
   23e8c:	b.ne	23e94 <gl_sortedlist_add@@Base+0x38>  // b.any
   23e90:	bl	aee0 <xalloc_die@plt>
   23e94:	ldr	x0, [sp, #56]
   23e98:	ldp	x29, x30, [sp], #64
   23e9c:	ret

0000000000023ea0 <gl_map_create_empty@@Base>:
   23ea0:	stp	x29, x30, [sp, #-80]!
   23ea4:	mov	x29, sp
   23ea8:	str	x0, [sp, #56]
   23eac:	str	x1, [sp, #48]
   23eb0:	str	x2, [sp, #40]
   23eb4:	str	x3, [sp, #32]
   23eb8:	str	x4, [sp, #24]
   23ebc:	ldr	x4, [sp, #24]
   23ec0:	ldr	x3, [sp, #32]
   23ec4:	ldr	x2, [sp, #40]
   23ec8:	ldr	x1, [sp, #48]
   23ecc:	ldr	x0, [sp, #56]
   23ed0:	bl	b030 <gl_map_nx_create_empty@plt>
   23ed4:	str	x0, [sp, #72]
   23ed8:	ldr	x0, [sp, #72]
   23edc:	cmp	x0, #0x0
   23ee0:	b.ne	23ee8 <gl_map_create_empty@@Base+0x48>  // b.any
   23ee4:	bl	aee0 <xalloc_die@plt>
   23ee8:	ldr	x0, [sp, #72]
   23eec:	ldp	x29, x30, [sp], #80
   23ef0:	ret

0000000000023ef4 <gl_map_put@@Base>:
   23ef4:	stp	x29, x30, [sp, #-64]!
   23ef8:	mov	x29, sp
   23efc:	str	x0, [sp, #40]
   23f00:	str	x1, [sp, #32]
   23f04:	str	x2, [sp, #24]
   23f08:	ldr	x2, [sp, #24]
   23f0c:	ldr	x1, [sp, #32]
   23f10:	ldr	x0, [sp, #40]
   23f14:	bl	acd0 <gl_map_nx_put@plt>
   23f18:	str	w0, [sp, #60]
   23f1c:	ldr	w0, [sp, #60]
   23f20:	cmp	w0, #0x0
   23f24:	b.ge	23f2c <gl_map_put@@Base+0x38>  // b.tcont
   23f28:	bl	aee0 <xalloc_die@plt>
   23f2c:	ldr	w0, [sp, #60]
   23f30:	cmp	w0, #0x0
   23f34:	cset	w0, ne  // ne = any
   23f38:	and	w0, w0, #0xff
   23f3c:	ldp	x29, x30, [sp], #64
   23f40:	ret

0000000000023f44 <gl_map_getput@@Base>:
   23f44:	stp	x29, x30, [sp, #-64]!
   23f48:	mov	x29, sp
   23f4c:	str	x0, [sp, #40]
   23f50:	str	x1, [sp, #32]
   23f54:	str	x2, [sp, #24]
   23f58:	str	x3, [sp, #16]
   23f5c:	ldr	x3, [sp, #16]
   23f60:	ldr	x2, [sp, #24]
   23f64:	ldr	x1, [sp, #32]
   23f68:	ldr	x0, [sp, #40]
   23f6c:	bl	afe0 <gl_map_nx_getput@plt>
   23f70:	str	w0, [sp, #60]
   23f74:	ldr	w0, [sp, #60]
   23f78:	cmp	w0, #0x0
   23f7c:	b.ge	23f84 <gl_map_getput@@Base+0x40>  // b.tcont
   23f80:	bl	aee0 <xalloc_die@plt>
   23f84:	ldr	w0, [sp, #60]
   23f88:	cmp	w0, #0x0
   23f8c:	cset	w0, ne  // ne = any
   23f90:	and	w0, w0, #0xff
   23f94:	ldp	x29, x30, [sp], #64
   23f98:	ret

0000000000023f9c <gl_set_create_empty@@Base>:
   23f9c:	stp	x29, x30, [sp, #-64]!
   23fa0:	mov	x29, sp
   23fa4:	str	x0, [sp, #40]
   23fa8:	str	x1, [sp, #32]
   23fac:	str	x2, [sp, #24]
   23fb0:	str	x3, [sp, #16]
   23fb4:	ldr	x3, [sp, #16]
   23fb8:	ldr	x2, [sp, #24]
   23fbc:	ldr	x1, [sp, #32]
   23fc0:	ldr	x0, [sp, #40]
   23fc4:	bl	b440 <gl_set_nx_create_empty@plt>
   23fc8:	str	x0, [sp, #56]
   23fcc:	ldr	x0, [sp, #56]
   23fd0:	cmp	x0, #0x0
   23fd4:	b.ne	23fdc <gl_set_create_empty@@Base+0x40>  // b.any
   23fd8:	bl	aee0 <xalloc_die@plt>
   23fdc:	ldr	x0, [sp, #56]
   23fe0:	ldp	x29, x30, [sp], #64
   23fe4:	ret

0000000000023fe8 <gl_set_add@@Base>:
   23fe8:	stp	x29, x30, [sp, #-48]!
   23fec:	mov	x29, sp
   23ff0:	str	x0, [sp, #24]
   23ff4:	str	x1, [sp, #16]
   23ff8:	ldr	x1, [sp, #16]
   23ffc:	ldr	x0, [sp, #24]
   24000:	bl	b5a0 <gl_set_nx_add@plt>
   24004:	str	w0, [sp, #44]
   24008:	ldr	w0, [sp, #44]
   2400c:	cmp	w0, #0x0
   24010:	b.ge	24018 <gl_set_add@@Base+0x30>  // b.tcont
   24014:	bl	aee0 <xalloc_die@plt>
   24018:	ldr	w0, [sp, #44]
   2401c:	cmp	w0, #0x0
   24020:	cset	w0, ne  // ne = any
   24024:	and	w0, w0, #0xff
   24028:	ldp	x29, x30, [sp], #48
   2402c:	ret

0000000000024030 <xsum@@Base>:
   24030:	sub	sp, sp, #0x20
   24034:	str	x0, [sp, #8]
   24038:	str	x1, [sp]
   2403c:	ldr	x1, [sp, #8]
   24040:	ldr	x0, [sp]
   24044:	add	x0, x1, x0
   24048:	str	x0, [sp, #24]
   2404c:	ldr	x1, [sp, #24]
   24050:	ldr	x0, [sp, #8]
   24054:	cmp	x1, x0
   24058:	b.cc	24064 <xsum@@Base+0x34>  // b.lo, b.ul, b.last
   2405c:	ldr	x0, [sp, #24]
   24060:	b	24068 <xsum@@Base+0x38>
   24064:	mov	x0, #0xffffffffffffffff    	// #-1
   24068:	add	sp, sp, #0x20
   2406c:	ret

0000000000024070 <xsum3@@Base>:
   24070:	stp	x29, x30, [sp, #-48]!
   24074:	mov	x29, sp
   24078:	str	x0, [sp, #40]
   2407c:	str	x1, [sp, #32]
   24080:	str	x2, [sp, #24]
   24084:	ldr	x1, [sp, #32]
   24088:	ldr	x0, [sp, #40]
   2408c:	bl	24030 <xsum@@Base>
   24090:	ldr	x1, [sp, #24]
   24094:	bl	24030 <xsum@@Base>
   24098:	ldp	x29, x30, [sp], #48
   2409c:	ret

00000000000240a0 <xsum4@@Base>:
   240a0:	stp	x29, x30, [sp, #-48]!
   240a4:	mov	x29, sp
   240a8:	str	x0, [sp, #40]
   240ac:	str	x1, [sp, #32]
   240b0:	str	x2, [sp, #24]
   240b4:	str	x3, [sp, #16]
   240b8:	ldr	x1, [sp, #32]
   240bc:	ldr	x0, [sp, #40]
   240c0:	bl	24030 <xsum@@Base>
   240c4:	ldr	x1, [sp, #24]
   240c8:	bl	24030 <xsum@@Base>
   240cc:	ldr	x1, [sp, #16]
   240d0:	bl	24030 <xsum@@Base>
   240d4:	ldp	x29, x30, [sp], #48
   240d8:	ret

00000000000240dc <xmax@@Base>:
   240dc:	sub	sp, sp, #0x10
   240e0:	str	x0, [sp, #8]
   240e4:	str	x1, [sp]
   240e8:	ldr	x0, [sp]
   240ec:	ldr	x2, [sp, #8]
   240f0:	ldr	x1, [sp, #8]
   240f4:	cmp	x2, x0
   240f8:	csel	x0, x1, x0, cs  // cs = hs, nlast
   240fc:	add	sp, sp, #0x10
   24100:	ret

0000000000024104 <xstdopen@@Base>:
   24104:	stp	x29, x30, [sp, #-48]!
   24108:	mov	x29, sp
   2410c:	str	x19, [sp, #16]
   24110:	bl	abc0 <stdopen@plt>
   24114:	str	w0, [sp, #44]
   24118:	ldr	w0, [sp, #44]
   2411c:	cmp	w0, #0x0
   24120:	b.eq	24154 <xstdopen@@Base+0x50>  // b.none
   24124:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   24128:	ldr	x0, [x0, #3976]
   2412c:	ldr	w19, [x0]
   24130:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24134:	add	x1, x0, #0xe80
   24138:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   2413c:	add	x0, x0, #0xea0
   24140:	bl	b120 <dgettext@plt>
   24144:	mov	x2, x0
   24148:	ldr	w1, [sp, #44]
   2414c:	mov	w0, w19
   24150:	bl	a850 <error@plt>
   24154:	nop
   24158:	ldr	x19, [sp, #16]
   2415c:	ldp	x29, x30, [sp], #48
   24160:	ret

0000000000024164 <xstrndup@@Base>:
   24164:	stp	x29, x30, [sp, #-48]!
   24168:	mov	x29, sp
   2416c:	str	x0, [sp, #24]
   24170:	str	x1, [sp, #16]
   24174:	ldr	x1, [sp, #16]
   24178:	ldr	x0, [sp, #24]
   2417c:	bl	b230 <strndup@plt>
   24180:	str	x0, [sp, #40]
   24184:	ldr	x0, [sp, #40]
   24188:	cmp	x0, #0x0
   2418c:	b.ne	24194 <xstrndup@@Base+0x30>  // b.any
   24190:	bl	aee0 <xalloc_die@plt>
   24194:	ldr	x0, [sp, #40]
   24198:	ldp	x29, x30, [sp], #48
   2419c:	ret
   241a0:	stp	x29, x30, [sp, #-144]!
   241a4:	mov	x29, sp
   241a8:	str	x19, [sp, #16]
   241ac:	str	x0, [sp, #40]
   241b0:	mov	x19, x1
   241b4:	str	xzr, [sp, #136]
   241b8:	add	x2, sp, #0x38
   241bc:	mov	x3, x19
   241c0:	ldp	x0, x1, [x3]
   241c4:	stp	x0, x1, [x2]
   241c8:	ldp	x0, x1, [x3, #16]
   241cc:	stp	x0, x1, [x2, #16]
   241d0:	ldr	x0, [sp, #40]
   241d4:	str	x0, [sp, #128]
   241d8:	b	24258 <xstrndup@@Base+0xf4>
   241dc:	ldr	w1, [sp, #80]
   241e0:	ldr	x0, [sp, #56]
   241e4:	cmp	w1, #0x0
   241e8:	b.lt	241fc <xstrndup@@Base+0x98>  // b.tstop
   241ec:	add	x1, x0, #0xf
   241f0:	and	x1, x1, #0xfffffffffffffff8
   241f4:	str	x1, [sp, #56]
   241f8:	b	2422c <xstrndup@@Base+0xc8>
   241fc:	add	w2, w1, #0x8
   24200:	str	w2, [sp, #80]
   24204:	ldr	w2, [sp, #80]
   24208:	cmp	w2, #0x0
   2420c:	b.le	24220 <xstrndup@@Base+0xbc>
   24210:	add	x1, x0, #0xf
   24214:	and	x1, x1, #0xfffffffffffffff8
   24218:	str	x1, [sp, #56]
   2421c:	b	2422c <xstrndup@@Base+0xc8>
   24220:	ldr	x2, [sp, #64]
   24224:	sxtw	x0, w1
   24228:	add	x0, x2, x0
   2422c:	ldr	x0, [x0]
   24230:	str	x0, [sp, #88]
   24234:	ldr	x0, [sp, #88]
   24238:	bl	a820 <strlen@plt>
   2423c:	mov	x1, x0
   24240:	ldr	x0, [sp, #136]
   24244:	bl	ac80 <xsum@plt>
   24248:	str	x0, [sp, #136]
   2424c:	ldr	x0, [sp, #128]
   24250:	sub	x0, x0, #0x1
   24254:	str	x0, [sp, #128]
   24258:	ldr	x0, [sp, #128]
   2425c:	cmp	x0, #0x0
   24260:	b.ne	241dc <xstrndup@@Base+0x78>  // b.any
   24264:	ldr	x0, [sp, #136]
   24268:	cmn	x0, #0x1
   2426c:	b.eq	24280 <xstrndup@@Base+0x11c>  // b.none
   24270:	ldr	x1, [sp, #136]
   24274:	mov	x0, #0x7fffffff            	// #2147483647
   24278:	cmp	x1, x0
   2427c:	b.ls	24298 <xstrndup@@Base+0x134>  // b.plast
   24280:	bl	b640 <__errno_location@plt>
   24284:	mov	x1, x0
   24288:	mov	w0, #0x4b                  	// #75
   2428c:	str	w0, [x1]
   24290:	mov	x0, #0x0                   	// #0
   24294:	b	24364 <xstrndup@@Base+0x200>
   24298:	ldr	x0, [sp, #136]
   2429c:	add	x0, x0, #0x1
   242a0:	bl	ace0 <xmalloc@plt>
   242a4:	str	x0, [sp, #112]
   242a8:	ldr	x0, [sp, #112]
   242ac:	str	x0, [sp, #120]
   242b0:	ldr	x0, [sp, #40]
   242b4:	str	x0, [sp, #128]
   242b8:	b	2434c <xstrndup@@Base+0x1e8>
   242bc:	ldr	w1, [x19, #24]
   242c0:	ldr	x0, [x19]
   242c4:	cmp	w1, #0x0
   242c8:	b.lt	242dc <xstrndup@@Base+0x178>  // b.tstop
   242cc:	add	x1, x0, #0xf
   242d0:	and	x1, x1, #0xfffffffffffffff8
   242d4:	str	x1, [x19]
   242d8:	b	2430c <xstrndup@@Base+0x1a8>
   242dc:	add	w2, w1, #0x8
   242e0:	str	w2, [x19, #24]
   242e4:	ldr	w2, [x19, #24]
   242e8:	cmp	w2, #0x0
   242ec:	b.le	24300 <xstrndup@@Base+0x19c>
   242f0:	add	x1, x0, #0xf
   242f4:	and	x1, x1, #0xfffffffffffffff8
   242f8:	str	x1, [x19]
   242fc:	b	2430c <xstrndup@@Base+0x1a8>
   24300:	ldr	x2, [x19, #8]
   24304:	sxtw	x0, w1
   24308:	add	x0, x2, x0
   2430c:	ldr	x0, [x0]
   24310:	str	x0, [sp, #104]
   24314:	ldr	x0, [sp, #104]
   24318:	bl	a820 <strlen@plt>
   2431c:	str	x0, [sp, #96]
   24320:	ldr	x2, [sp, #96]
   24324:	ldr	x1, [sp, #104]
   24328:	ldr	x0, [sp, #120]
   2432c:	bl	a790 <memcpy@plt>
   24330:	ldr	x1, [sp, #120]
   24334:	ldr	x0, [sp, #96]
   24338:	add	x0, x1, x0
   2433c:	str	x0, [sp, #120]
   24340:	ldr	x0, [sp, #128]
   24344:	sub	x0, x0, #0x1
   24348:	str	x0, [sp, #128]
   2434c:	ldr	x0, [sp, #128]
   24350:	cmp	x0, #0x0
   24354:	b.ne	242bc <xstrndup@@Base+0x158>  // b.any
   24358:	ldr	x0, [sp, #120]
   2435c:	strb	wzr, [x0]
   24360:	ldr	x0, [sp, #112]
   24364:	ldr	x19, [sp, #16]
   24368:	ldp	x29, x30, [sp], #144
   2436c:	ret

0000000000024370 <xvasprintf@@Base>:
   24370:	stp	x29, x30, [sp, #-112]!
   24374:	mov	x29, sp
   24378:	str	x19, [sp, #16]
   2437c:	str	x0, [sp, #72]
   24380:	mov	x19, x1
   24384:	str	xzr, [sp, #104]
   24388:	ldr	x0, [sp, #72]
   2438c:	str	x0, [sp, #96]
   24390:	ldr	x0, [sp, #96]
   24394:	ldrb	w0, [x0]
   24398:	cmp	w0, #0x0
   2439c:	b.ne	243cc <xvasprintf@@Base+0x5c>  // b.any
   243a0:	add	x2, sp, #0x20
   243a4:	mov	x3, x19
   243a8:	ldp	x0, x1, [x3]
   243ac:	stp	x0, x1, [x2]
   243b0:	ldp	x0, x1, [x3, #16]
   243b4:	stp	x0, x1, [x2, #16]
   243b8:	add	x0, sp, #0x20
   243bc:	mov	x1, x0
   243c0:	ldr	x0, [sp, #104]
   243c4:	bl	241a0 <xstrndup@@Base+0x3c>
   243c8:	b	24474 <xvasprintf@@Base+0x104>
   243cc:	ldr	x0, [sp, #96]
   243d0:	ldrb	w0, [x0]
   243d4:	cmp	w0, #0x25
   243d8:	b.ne	24414 <xvasprintf@@Base+0xa4>  // b.any
   243dc:	ldr	x0, [sp, #96]
   243e0:	add	x0, x0, #0x1
   243e4:	str	x0, [sp, #96]
   243e8:	ldr	x0, [sp, #96]
   243ec:	ldrb	w0, [x0]
   243f0:	cmp	w0, #0x73
   243f4:	b.ne	2441c <xvasprintf@@Base+0xac>  // b.any
   243f8:	ldr	x0, [sp, #96]
   243fc:	add	x0, x0, #0x1
   24400:	str	x0, [sp, #96]
   24404:	ldr	x0, [sp, #104]
   24408:	add	x0, x0, #0x1
   2440c:	str	x0, [sp, #104]
   24410:	b	24390 <xvasprintf@@Base+0x20>
   24414:	nop
   24418:	b	24420 <xvasprintf@@Base+0xb0>
   2441c:	nop
   24420:	add	x2, sp, #0x20
   24424:	mov	x3, x19
   24428:	ldp	x0, x1, [x3]
   2442c:	stp	x0, x1, [x2]
   24430:	ldp	x0, x1, [x3, #16]
   24434:	stp	x0, x1, [x2, #16]
   24438:	add	x1, sp, #0x20
   2443c:	add	x0, sp, #0x58
   24440:	mov	x2, x1
   24444:	ldr	x1, [sp, #72]
   24448:	bl	b200 <vasprintf@plt>
   2444c:	cmp	w0, #0x0
   24450:	b.ge	24470 <xvasprintf@@Base+0x100>  // b.tcont
   24454:	bl	b640 <__errno_location@plt>
   24458:	ldr	w0, [x0]
   2445c:	cmp	w0, #0xc
   24460:	b.ne	24468 <xvasprintf@@Base+0xf8>  // b.any
   24464:	bl	aee0 <xalloc_die@plt>
   24468:	mov	x0, #0x0                   	// #0
   2446c:	b	24474 <xvasprintf@@Base+0x104>
   24470:	ldr	x0, [sp, #88]
   24474:	ldr	x19, [sp, #16]
   24478:	ldp	x29, x30, [sp], #112
   2447c:	ret

0000000000024480 <xasprintf@@Base>:
   24480:	stp	x29, x30, [sp, #-304]!
   24484:	mov	x29, sp
   24488:	str	x0, [sp, #56]
   2448c:	str	x1, [sp, #248]
   24490:	str	x2, [sp, #256]
   24494:	str	x3, [sp, #264]
   24498:	str	x4, [sp, #272]
   2449c:	str	x5, [sp, #280]
   244a0:	str	x6, [sp, #288]
   244a4:	str	x7, [sp, #296]
   244a8:	str	q0, [sp, #112]
   244ac:	str	q1, [sp, #128]
   244b0:	str	q2, [sp, #144]
   244b4:	str	q3, [sp, #160]
   244b8:	str	q4, [sp, #176]
   244bc:	str	q5, [sp, #192]
   244c0:	str	q6, [sp, #208]
   244c4:	str	q7, [sp, #224]
   244c8:	add	x0, sp, #0x130
   244cc:	str	x0, [sp, #72]
   244d0:	add	x0, sp, #0x130
   244d4:	str	x0, [sp, #80]
   244d8:	add	x0, sp, #0xf0
   244dc:	str	x0, [sp, #88]
   244e0:	mov	w0, #0xffffffc8            	// #-56
   244e4:	str	w0, [sp, #96]
   244e8:	mov	w0, #0xffffff80            	// #-128
   244ec:	str	w0, [sp, #100]
   244f0:	add	x2, sp, #0x10
   244f4:	add	x3, sp, #0x48
   244f8:	ldp	x0, x1, [x3]
   244fc:	stp	x0, x1, [x2]
   24500:	ldp	x0, x1, [x3, #16]
   24504:	stp	x0, x1, [x2, #16]
   24508:	add	x0, sp, #0x10
   2450c:	mov	x1, x0
   24510:	ldr	x0, [sp, #56]
   24514:	bl	b540 <xvasprintf@plt>
   24518:	str	x0, [sp, #104]
   2451c:	ldr	x0, [sp, #104]
   24520:	ldp	x29, x30, [sp], #304
   24524:	ret

0000000000024528 <asnprintf@@Base>:
   24528:	stp	x29, x30, [sp, #-304]!
   2452c:	mov	x29, sp
   24530:	str	x0, [sp, #72]
   24534:	str	x1, [sp, #64]
   24538:	str	x2, [sp, #56]
   2453c:	str	x3, [sp, #264]
   24540:	str	x4, [sp, #272]
   24544:	str	x5, [sp, #280]
   24548:	str	x6, [sp, #288]
   2454c:	str	x7, [sp, #296]
   24550:	str	q0, [sp, #128]
   24554:	str	q1, [sp, #144]
   24558:	str	q2, [sp, #160]
   2455c:	str	q3, [sp, #176]
   24560:	str	q4, [sp, #192]
   24564:	str	q5, [sp, #208]
   24568:	str	q6, [sp, #224]
   2456c:	str	q7, [sp, #240]
   24570:	add	x0, sp, #0x130
   24574:	str	x0, [sp, #88]
   24578:	add	x0, sp, #0x130
   2457c:	str	x0, [sp, #96]
   24580:	add	x0, sp, #0x100
   24584:	str	x0, [sp, #104]
   24588:	mov	w0, #0xffffffd8            	// #-40
   2458c:	str	w0, [sp, #112]
   24590:	mov	w0, #0xffffff80            	// #-128
   24594:	str	w0, [sp, #116]
   24598:	add	x2, sp, #0x10
   2459c:	add	x3, sp, #0x58
   245a0:	ldp	x0, x1, [x3]
   245a4:	stp	x0, x1, [x2]
   245a8:	ldp	x0, x1, [x3, #16]
   245ac:	stp	x0, x1, [x2, #16]
   245b0:	add	x0, sp, #0x10
   245b4:	mov	x3, x0
   245b8:	ldr	x2, [sp, #56]
   245bc:	ldr	x1, [sp, #64]
   245c0:	ldr	x0, [sp, #72]
   245c4:	bl	b1b0 <vasnprintf@plt>
   245c8:	str	x0, [sp, #120]
   245cc:	ldr	x0, [sp, #120]
   245d0:	ldp	x29, x30, [sp], #304
   245d4:	ret
   245d8:	sub	sp, sp, #0x10
   245dc:	str	x0, [sp, #8]
   245e0:	ldr	x0, [sp, #8]
   245e4:	mov	w1, #0xffffff9c            	// #-100
   245e8:	str	w1, [x0]
   245ec:	nop
   245f0:	add	sp, sp, #0x10
   245f4:	ret
   245f8:	stp	x29, x30, [sp, #-32]!
   245fc:	mov	x29, sp
   24600:	str	x0, [sp, #24]
   24604:	ldr	x0, [sp, #24]
   24608:	ldr	w0, [x0]
   2460c:	bl	a870 <fchdir@plt>
   24610:	ldp	x29, x30, [sp], #32
   24614:	ret
   24618:	stp	x29, x30, [sp, #-48]!
   2461c:	mov	x29, sp
   24620:	str	x0, [sp, #24]
   24624:	ldr	x0, [sp, #24]
   24628:	ldr	w0, [x0]
   2462c:	cmp	w0, #0x0
   24630:	b.lt	24680 <asnprintf@@Base+0x158>  // b.tstop
   24634:	ldr	x0, [sp, #24]
   24638:	ldr	w0, [x0]
   2463c:	bl	ae80 <close@plt>
   24640:	cmp	w0, #0x0
   24644:	cset	w0, ne  // ne = any
   24648:	strb	w0, [sp, #47]
   2464c:	ldrb	w0, [sp, #47]
   24650:	eor	w0, w0, #0x1
   24654:	and	w0, w0, #0xff
   24658:	cmp	w0, #0x0
   2465c:	b.ne	24680 <asnprintf@@Base+0x158>  // b.any
   24660:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24664:	add	x3, x0, #0xf28
   24668:	mov	w2, #0x40                  	// #64
   2466c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24670:	add	x1, x0, #0xeb0
   24674:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24678:	add	x0, x0, #0xec0
   2467c:	bl	b630 <__assert_fail@plt>
   24680:	nop
   24684:	ldp	x29, x30, [sp], #48
   24688:	ret
   2468c:	stp	x29, x30, [sp, #-48]!
   24690:	mov	x29, sp
   24694:	str	x0, [sp, #24]
   24698:	str	x1, [sp, #16]
   2469c:	ldr	x0, [sp, #24]
   246a0:	ldr	w0, [x0]
   246a4:	mov	w2, #0x4900                	// #18688
   246a8:	ldr	x1, [sp, #16]
   246ac:	bl	b620 <openat@plt>
   246b0:	str	w0, [sp, #44]
   246b4:	ldr	w0, [sp, #44]
   246b8:	cmp	w0, #0x0
   246bc:	b.ge	246c8 <asnprintf@@Base+0x1a0>  // b.tcont
   246c0:	mov	w0, #0xffffffff            	// #-1
   246c4:	b	246e0 <asnprintf@@Base+0x1b8>
   246c8:	ldr	x0, [sp, #24]
   246cc:	bl	24618 <asnprintf@@Base+0xf0>
   246d0:	ldr	x0, [sp, #24]
   246d4:	ldr	w1, [sp, #44]
   246d8:	str	w1, [x0]
   246dc:	mov	w0, #0x0                   	// #0
   246e0:	ldp	x29, x30, [sp], #48
   246e4:	ret
   246e8:	stp	x29, x30, [sp, #-48]!
   246ec:	mov	x29, sp
   246f0:	str	x0, [sp, #24]
   246f4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   246f8:	add	x1, x0, #0xed0
   246fc:	ldr	x0, [sp, #24]
   24700:	bl	b240 <strspn@plt>
   24704:	str	x0, [sp, #40]
   24708:	ldr	x1, [sp, #24]
   2470c:	ldr	x0, [sp, #40]
   24710:	add	x0, x1, x0
   24714:	ldp	x29, x30, [sp], #48
   24718:	ret

000000000002471c <chdir_long@@Base>:
   2471c:	stp	x29, x30, [sp, #-112]!
   24720:	mov	x29, sp
   24724:	str	x0, [sp, #24]
   24728:	ldr	x0, [sp, #24]
   2472c:	bl	b100 <chdir@plt>
   24730:	str	w0, [sp, #108]
   24734:	ldr	w0, [sp, #108]
   24738:	cmp	w0, #0x0
   2473c:	b.eq	24750 <chdir_long@@Base+0x34>  // b.none
   24740:	bl	b640 <__errno_location@plt>
   24744:	ldr	w0, [x0]
   24748:	cmp	w0, #0x24
   2474c:	b.eq	24758 <chdir_long@@Base+0x3c>  // b.none
   24750:	ldr	w0, [sp, #108]
   24754:	b	24a70 <chdir_long@@Base+0x354>
   24758:	ldr	x0, [sp, #24]
   2475c:	bl	a820 <strlen@plt>
   24760:	str	x0, [sp, #96]
   24764:	ldr	x1, [sp, #24]
   24768:	ldr	x0, [sp, #96]
   2476c:	add	x0, x1, x0
   24770:	str	x0, [sp, #88]
   24774:	add	x0, sp, #0x28
   24778:	bl	245d8 <asnprintf@@Base+0xb0>
   2477c:	ldr	x0, [sp, #96]
   24780:	cmp	x0, #0x0
   24784:	b.ne	247a8 <chdir_long@@Base+0x8c>  // b.any
   24788:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   2478c:	add	x3, x0, #0xf38
   24790:	mov	w2, #0x7e                  	// #126
   24794:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24798:	add	x1, x0, #0xeb0
   2479c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   247a0:	add	x0, x0, #0xed8
   247a4:	bl	b630 <__assert_fail@plt>
   247a8:	ldr	x0, [sp, #96]
   247ac:	cmp	x0, #0xfff
   247b0:	b.hi	247d4 <chdir_long@@Base+0xb8>  // b.pmore
   247b4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   247b8:	add	x3, x0, #0xf38
   247bc:	mov	w2, #0x7f                  	// #127
   247c0:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   247c4:	add	x1, x0, #0xeb0
   247c8:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   247cc:	add	x0, x0, #0xee0
   247d0:	bl	b630 <__assert_fail@plt>
   247d4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   247d8:	add	x1, x0, #0xed0
   247dc:	ldr	x0, [sp, #24]
   247e0:	bl	b240 <strspn@plt>
   247e4:	str	x0, [sp, #80]
   247e8:	ldr	x0, [sp, #80]
   247ec:	cmp	x0, #0x2
   247f0:	b.ne	24888 <chdir_long@@Base+0x16c>  // b.any
   247f4:	ldr	x0, [sp, #24]
   247f8:	add	x3, x0, #0x3
   247fc:	ldr	x0, [sp, #24]
   24800:	add	x0, x0, #0x3
   24804:	ldr	x1, [sp, #88]
   24808:	sub	x0, x1, x0
   2480c:	mov	x2, x0
   24810:	mov	w1, #0x2f                  	// #47
   24814:	mov	x0, x3
   24818:	bl	b3b0 <memchr@plt>
   2481c:	str	x0, [sp, #72]
   24820:	ldr	x0, [sp, #72]
   24824:	cmp	x0, #0x0
   24828:	b.ne	24844 <chdir_long@@Base+0x128>  // b.any
   2482c:	bl	b640 <__errno_location@plt>
   24830:	mov	x1, x0
   24834:	mov	w0, #0x24                  	// #36
   24838:	str	w0, [x1]
   2483c:	mov	w0, #0xffffffff            	// #-1
   24840:	b	24a70 <chdir_long@@Base+0x354>
   24844:	ldr	x0, [sp, #72]
   24848:	strb	wzr, [x0]
   2484c:	add	x0, sp, #0x28
   24850:	ldr	x1, [sp, #24]
   24854:	bl	2468c <asnprintf@@Base+0x164>
   24858:	str	w0, [sp, #68]
   2485c:	ldr	x0, [sp, #72]
   24860:	mov	w1, #0x2f                  	// #47
   24864:	strb	w1, [x0]
   24868:	ldr	w0, [sp, #68]
   2486c:	cmp	w0, #0x0
   24870:	b.ne	24a24 <chdir_long@@Base+0x308>  // b.any
   24874:	ldr	x0, [sp, #72]
   24878:	add	x0, x0, #0x1
   2487c:	bl	246e8 <asnprintf@@Base+0x1c0>
   24880:	str	x0, [sp, #24]
   24884:	b	248c0 <chdir_long@@Base+0x1a4>
   24888:	ldr	x0, [sp, #80]
   2488c:	cmp	x0, #0x0
   24890:	b.eq	248c0 <chdir_long@@Base+0x1a4>  // b.none
   24894:	add	x2, sp, #0x28
   24898:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   2489c:	add	x1, x0, #0xed0
   248a0:	mov	x0, x2
   248a4:	bl	2468c <asnprintf@@Base+0x164>
   248a8:	cmp	w0, #0x0
   248ac:	b.ne	24a2c <chdir_long@@Base+0x310>  // b.any
   248b0:	ldr	x1, [sp, #24]
   248b4:	ldr	x0, [sp, #80]
   248b8:	add	x0, x1, x0
   248bc:	str	x0, [sp, #24]
   248c0:	ldr	x0, [sp, #24]
   248c4:	ldrb	w0, [x0]
   248c8:	cmp	w0, #0x2f
   248cc:	b.ne	248f0 <chdir_long@@Base+0x1d4>  // b.any
   248d0:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   248d4:	add	x3, x0, #0xf38
   248d8:	mov	w2, #0xa2                  	// #162
   248dc:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   248e0:	add	x1, x0, #0xeb0
   248e4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   248e8:	add	x0, x0, #0xef0
   248ec:	bl	b630 <__assert_fail@plt>
   248f0:	ldr	x1, [sp, #24]
   248f4:	ldr	x0, [sp, #88]
   248f8:	cmp	x1, x0
   248fc:	b.ls	249cc <chdir_long@@Base+0x2b0>  // b.plast
   24900:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24904:	add	x3, x0, #0xf38
   24908:	mov	w2, #0xa3                  	// #163
   2490c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24910:	add	x1, x0, #0xeb0
   24914:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24918:	add	x0, x0, #0xf00
   2491c:	bl	b630 <__assert_fail@plt>
   24920:	mov	x2, #0x1000                	// #4096
   24924:	mov	w1, #0x2f                  	// #47
   24928:	ldr	x0, [sp, #24]
   2492c:	bl	b2a0 <memrchr@plt>
   24930:	str	x0, [sp, #56]
   24934:	ldr	x0, [sp, #56]
   24938:	cmp	x0, #0x0
   2493c:	b.ne	24958 <chdir_long@@Base+0x23c>  // b.any
   24940:	bl	b640 <__errno_location@plt>
   24944:	mov	x1, x0
   24948:	mov	w0, #0x24                  	// #36
   2494c:	str	w0, [x1]
   24950:	mov	w0, #0xffffffff            	// #-1
   24954:	b	24a70 <chdir_long@@Base+0x354>
   24958:	ldr	x0, [sp, #56]
   2495c:	strb	wzr, [x0]
   24960:	ldr	x1, [sp, #56]
   24964:	ldr	x0, [sp, #24]
   24968:	sub	x0, x1, x0
   2496c:	cmp	x0, #0xfff
   24970:	b.le	24994 <chdir_long@@Base+0x278>
   24974:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24978:	add	x3, x0, #0xf38
   2497c:	mov	w2, #0xb3                  	// #179
   24980:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   24984:	add	x1, x0, #0xeb0
   24988:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   2498c:	add	x0, x0, #0xf10
   24990:	bl	b630 <__assert_fail@plt>
   24994:	add	x0, sp, #0x28
   24998:	ldr	x1, [sp, #24]
   2499c:	bl	2468c <asnprintf@@Base+0x164>
   249a0:	str	w0, [sp, #52]
   249a4:	ldr	x0, [sp, #56]
   249a8:	mov	w1, #0x2f                  	// #47
   249ac:	strb	w1, [x0]
   249b0:	ldr	w0, [sp, #52]
   249b4:	cmp	w0, #0x0
   249b8:	b.ne	24a34 <chdir_long@@Base+0x318>  // b.any
   249bc:	ldr	x0, [sp, #56]
   249c0:	add	x0, x0, #0x1
   249c4:	bl	246e8 <asnprintf@@Base+0x1c0>
   249c8:	str	x0, [sp, #24]
   249cc:	ldr	x1, [sp, #88]
   249d0:	ldr	x0, [sp, #24]
   249d4:	sub	x0, x1, x0
   249d8:	cmp	x0, #0xfff
   249dc:	b.gt	24920 <chdir_long@@Base+0x204>
   249e0:	ldr	x1, [sp, #24]
   249e4:	ldr	x0, [sp, #88]
   249e8:	cmp	x1, x0
   249ec:	b.cs	24a04 <chdir_long@@Base+0x2e8>  // b.hs, b.nlast
   249f0:	add	x0, sp, #0x28
   249f4:	ldr	x1, [sp, #24]
   249f8:	bl	2468c <asnprintf@@Base+0x164>
   249fc:	cmp	w0, #0x0
   24a00:	b.ne	24a3c <chdir_long@@Base+0x320>  // b.any
   24a04:	add	x0, sp, #0x28
   24a08:	bl	245f8 <asnprintf@@Base+0xd0>
   24a0c:	cmp	w0, #0x0
   24a10:	b.ne	24a44 <chdir_long@@Base+0x328>  // b.any
   24a14:	add	x0, sp, #0x28
   24a18:	bl	24618 <asnprintf@@Base+0xf0>
   24a1c:	mov	w0, #0x0                   	// #0
   24a20:	b	24a70 <chdir_long@@Base+0x354>
   24a24:	nop
   24a28:	b	24a48 <chdir_long@@Base+0x32c>
   24a2c:	nop
   24a30:	b	24a48 <chdir_long@@Base+0x32c>
   24a34:	nop
   24a38:	b	24a48 <chdir_long@@Base+0x32c>
   24a3c:	nop
   24a40:	b	24a48 <chdir_long@@Base+0x32c>
   24a44:	nop
   24a48:	bl	b640 <__errno_location@plt>
   24a4c:	ldr	w0, [x0]
   24a50:	str	w0, [sp, #48]
   24a54:	add	x0, sp, #0x28
   24a58:	bl	24618 <asnprintf@@Base+0xf0>
   24a5c:	bl	b640 <__errno_location@plt>
   24a60:	mov	x1, x0
   24a64:	ldr	w0, [sp, #48]
   24a68:	str	w0, [x1]
   24a6c:	mov	w0, #0xffffffff            	// #-1
   24a70:	ldp	x29, x30, [sp], #112
   24a74:	ret

0000000000024a78 <rpl_fcntl@@Base>:
   24a78:	stp	x29, x30, [sp, #-272]!
   24a7c:	mov	x29, sp
   24a80:	str	w0, [sp, #28]
   24a84:	str	w1, [sp, #24]
   24a88:	str	x2, [sp, #224]
   24a8c:	str	x3, [sp, #232]
   24a90:	str	x4, [sp, #240]
   24a94:	str	x5, [sp, #248]
   24a98:	str	x6, [sp, #256]
   24a9c:	str	x7, [sp, #264]
   24aa0:	str	q0, [sp, #96]
   24aa4:	str	q1, [sp, #112]
   24aa8:	str	q2, [sp, #128]
   24aac:	str	q3, [sp, #144]
   24ab0:	str	q4, [sp, #160]
   24ab4:	str	q5, [sp, #176]
   24ab8:	str	q6, [sp, #192]
   24abc:	str	q7, [sp, #208]
   24ac0:	mov	w0, #0xffffffff            	// #-1
   24ac4:	str	w0, [sp, #92]
   24ac8:	add	x0, sp, #0x110
   24acc:	str	x0, [sp, #40]
   24ad0:	add	x0, sp, #0x110
   24ad4:	str	x0, [sp, #48]
   24ad8:	add	x0, sp, #0xe0
   24adc:	str	x0, [sp, #56]
   24ae0:	mov	w0, #0xffffffd0            	// #-48
   24ae4:	str	w0, [sp, #64]
   24ae8:	mov	w0, #0xffffff80            	// #-128
   24aec:	str	w0, [sp, #68]
   24af0:	ldr	w0, [sp, #24]
   24af4:	cmp	w0, #0x0
   24af8:	b.eq	24b0c <rpl_fcntl@@Base+0x94>  // b.none
   24afc:	ldr	w0, [sp, #24]
   24b00:	cmp	w0, #0x406
   24b04:	b.eq	24b78 <rpl_fcntl@@Base+0x100>  // b.none
   24b08:	b	24be4 <rpl_fcntl@@Base+0x16c>
   24b0c:	ldr	w1, [sp, #64]
   24b10:	ldr	x0, [sp, #40]
   24b14:	cmp	w1, #0x0
   24b18:	b.lt	24b2c <rpl_fcntl@@Base+0xb4>  // b.tstop
   24b1c:	add	x1, x0, #0xb
   24b20:	and	x1, x1, #0xfffffffffffffff8
   24b24:	str	x1, [sp, #40]
   24b28:	b	24b5c <rpl_fcntl@@Base+0xe4>
   24b2c:	add	w2, w1, #0x8
   24b30:	str	w2, [sp, #64]
   24b34:	ldr	w2, [sp, #64]
   24b38:	cmp	w2, #0x0
   24b3c:	b.le	24b50 <rpl_fcntl@@Base+0xd8>
   24b40:	add	x1, x0, #0xb
   24b44:	and	x1, x1, #0xfffffffffffffff8
   24b48:	str	x1, [sp, #40]
   24b4c:	b	24b5c <rpl_fcntl@@Base+0xe4>
   24b50:	ldr	x2, [sp, #48]
   24b54:	sxtw	x0, w1
   24b58:	add	x0, x2, x0
   24b5c:	ldr	w0, [x0]
   24b60:	str	w0, [sp, #84]
   24b64:	ldr	w1, [sp, #84]
   24b68:	ldr	w0, [sp, #28]
   24b6c:	bl	24db4 <rpl_fcntl@@Base+0x33c>
   24b70:	str	w0, [sp, #92]
   24b74:	b	24da8 <rpl_fcntl@@Base+0x330>
   24b78:	ldr	w1, [sp, #64]
   24b7c:	ldr	x0, [sp, #40]
   24b80:	cmp	w1, #0x0
   24b84:	b.lt	24b98 <rpl_fcntl@@Base+0x120>  // b.tstop
   24b88:	add	x1, x0, #0xb
   24b8c:	and	x1, x1, #0xfffffffffffffff8
   24b90:	str	x1, [sp, #40]
   24b94:	b	24bc8 <rpl_fcntl@@Base+0x150>
   24b98:	add	w2, w1, #0x8
   24b9c:	str	w2, [sp, #64]
   24ba0:	ldr	w2, [sp, #64]
   24ba4:	cmp	w2, #0x0
   24ba8:	b.le	24bbc <rpl_fcntl@@Base+0x144>
   24bac:	add	x1, x0, #0xb
   24bb0:	and	x1, x1, #0xfffffffffffffff8
   24bb4:	str	x1, [sp, #40]
   24bb8:	b	24bc8 <rpl_fcntl@@Base+0x150>
   24bbc:	ldr	x2, [sp, #48]
   24bc0:	sxtw	x0, w1
   24bc4:	add	x0, x2, x0
   24bc8:	ldr	w0, [x0]
   24bcc:	str	w0, [sp, #88]
   24bd0:	ldr	w1, [sp, #88]
   24bd4:	ldr	w0, [sp, #28]
   24bd8:	bl	24de4 <rpl_fcntl@@Base+0x36c>
   24bdc:	str	w0, [sp, #92]
   24be0:	b	24da8 <rpl_fcntl@@Base+0x330>
   24be4:	ldr	w0, [sp, #24]
   24be8:	cmp	w0, #0xb
   24bec:	b.gt	24c94 <rpl_fcntl@@Base+0x21c>
   24bf0:	ldr	w0, [sp, #24]
   24bf4:	cmp	w0, #0x0
   24bf8:	b.ge	24c4c <rpl_fcntl@@Base+0x1d4>  // b.tcont
   24bfc:	b	24d34 <rpl_fcntl@@Base+0x2bc>
   24c00:	ldr	w0, [sp, #24]
   24c04:	sub	w0, w0, #0x400
   24c08:	mov	x1, #0x1                   	// #1
   24c0c:	lsl	x0, x1, x0
   24c10:	mov	x1, #0x2c5                 	// #709
   24c14:	and	x1, x0, x1
   24c18:	cmp	x1, #0x0
   24c1c:	cset	w1, ne  // ne = any
   24c20:	and	w1, w1, #0xff
   24c24:	cmp	w1, #0x0
   24c28:	b.ne	24cc4 <rpl_fcntl@@Base+0x24c>  // b.any
   24c2c:	mov	x1, #0x502                 	// #1282
   24c30:	and	x0, x0, x1
   24c34:	cmp	x0, #0x0
   24c38:	cset	w0, ne  // ne = any
   24c3c:	and	w0, w0, #0xff
   24c40:	cmp	w0, #0x0
   24c44:	b.ne	24cb0 <rpl_fcntl@@Base+0x238>  // b.any
   24c48:	b	24d34 <rpl_fcntl@@Base+0x2bc>
   24c4c:	ldr	w0, [sp, #24]
   24c50:	mov	x1, #0x1                   	// #1
   24c54:	lsl	x0, x1, x0
   24c58:	mov	x1, #0x515                 	// #1301
   24c5c:	and	x1, x0, x1
   24c60:	cmp	x1, #0x0
   24c64:	cset	w1, ne  // ne = any
   24c68:	and	w1, w1, #0xff
   24c6c:	cmp	w1, #0x0
   24c70:	b.ne	24cc4 <rpl_fcntl@@Base+0x24c>  // b.any
   24c74:	mov	x1, #0xa0a                 	// #2570
   24c78:	and	x0, x0, x1
   24c7c:	cmp	x0, #0x0
   24c80:	cset	w0, ne  // ne = any
   24c84:	and	w0, w0, #0xff
   24c88:	cmp	w0, #0x0
   24c8c:	b.ne	24cb0 <rpl_fcntl@@Base+0x238>  // b.any
   24c90:	b	24d34 <rpl_fcntl@@Base+0x2bc>
   24c94:	ldr	w0, [sp, #24]
   24c98:	cmp	w0, #0x40a
   24c9c:	b.gt	24d34 <rpl_fcntl@@Base+0x2bc>
   24ca0:	ldr	w0, [sp, #24]
   24ca4:	cmp	w0, #0x400
   24ca8:	b.ge	24c00 <rpl_fcntl@@Base+0x188>  // b.tcont
   24cac:	b	24d34 <rpl_fcntl@@Base+0x2bc>
   24cb0:	ldr	w1, [sp, #24]
   24cb4:	ldr	w0, [sp, #28]
   24cb8:	bl	b320 <fcntl@plt>
   24cbc:	str	w0, [sp, #92]
   24cc0:	b	24da4 <rpl_fcntl@@Base+0x32c>
   24cc4:	ldr	w1, [sp, #64]
   24cc8:	ldr	x0, [sp, #40]
   24ccc:	cmp	w1, #0x0
   24cd0:	b.lt	24ce4 <rpl_fcntl@@Base+0x26c>  // b.tstop
   24cd4:	add	x1, x0, #0xb
   24cd8:	and	x1, x1, #0xfffffffffffffff8
   24cdc:	str	x1, [sp, #40]
   24ce0:	b	24d14 <rpl_fcntl@@Base+0x29c>
   24ce4:	add	w2, w1, #0x8
   24ce8:	str	w2, [sp, #64]
   24cec:	ldr	w2, [sp, #64]
   24cf0:	cmp	w2, #0x0
   24cf4:	b.le	24d08 <rpl_fcntl@@Base+0x290>
   24cf8:	add	x1, x0, #0xb
   24cfc:	and	x1, x1, #0xfffffffffffffff8
   24d00:	str	x1, [sp, #40]
   24d04:	b	24d14 <rpl_fcntl@@Base+0x29c>
   24d08:	ldr	x2, [sp, #48]
   24d0c:	sxtw	x0, w1
   24d10:	add	x0, x2, x0
   24d14:	ldr	w0, [x0]
   24d18:	str	w0, [sp, #80]
   24d1c:	ldr	w2, [sp, #80]
   24d20:	ldr	w1, [sp, #24]
   24d24:	ldr	w0, [sp, #28]
   24d28:	bl	b320 <fcntl@plt>
   24d2c:	str	w0, [sp, #92]
   24d30:	b	24da4 <rpl_fcntl@@Base+0x32c>
   24d34:	ldr	w1, [sp, #64]
   24d38:	ldr	x0, [sp, #40]
   24d3c:	cmp	w1, #0x0
   24d40:	b.lt	24d54 <rpl_fcntl@@Base+0x2dc>  // b.tstop
   24d44:	add	x1, x0, #0xf
   24d48:	and	x1, x1, #0xfffffffffffffff8
   24d4c:	str	x1, [sp, #40]
   24d50:	b	24d84 <rpl_fcntl@@Base+0x30c>
   24d54:	add	w2, w1, #0x8
   24d58:	str	w2, [sp, #64]
   24d5c:	ldr	w2, [sp, #64]
   24d60:	cmp	w2, #0x0
   24d64:	b.le	24d78 <rpl_fcntl@@Base+0x300>
   24d68:	add	x1, x0, #0xf
   24d6c:	and	x1, x1, #0xfffffffffffffff8
   24d70:	str	x1, [sp, #40]
   24d74:	b	24d84 <rpl_fcntl@@Base+0x30c>
   24d78:	ldr	x2, [sp, #48]
   24d7c:	sxtw	x0, w1
   24d80:	add	x0, x2, x0
   24d84:	ldr	x0, [x0]
   24d88:	str	x0, [sp, #72]
   24d8c:	ldr	x2, [sp, #72]
   24d90:	ldr	w1, [sp, #24]
   24d94:	ldr	w0, [sp, #28]
   24d98:	bl	b320 <fcntl@plt>
   24d9c:	str	w0, [sp, #92]
   24da0:	nop
   24da4:	nop
   24da8:	ldr	w0, [sp, #92]
   24dac:	ldp	x29, x30, [sp], #272
   24db0:	ret
   24db4:	stp	x29, x30, [sp, #-48]!
   24db8:	mov	x29, sp
   24dbc:	str	w0, [sp, #28]
   24dc0:	str	w1, [sp, #24]
   24dc4:	ldr	w2, [sp, #24]
   24dc8:	mov	w1, #0x0                   	// #0
   24dcc:	ldr	w0, [sp, #28]
   24dd0:	bl	b320 <fcntl@plt>
   24dd4:	str	w0, [sp, #44]
   24dd8:	ldr	w0, [sp, #44]
   24ddc:	ldp	x29, x30, [sp], #48
   24de0:	ret
   24de4:	stp	x29, x30, [sp, #-48]!
   24de8:	mov	x29, sp
   24dec:	str	w0, [sp, #28]
   24df0:	str	w1, [sp, #24]
   24df4:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   24df8:	add	x0, x0, #0x5d8
   24dfc:	ldr	w0, [x0]
   24e00:	cmp	w0, #0x0
   24e04:	b.lt	24e7c <rpl_fcntl@@Base+0x404>  // b.tstop
   24e08:	ldr	w2, [sp, #24]
   24e0c:	mov	w1, #0x406                 	// #1030
   24e10:	ldr	w0, [sp, #28]
   24e14:	bl	b320 <fcntl@plt>
   24e18:	str	w0, [sp, #44]
   24e1c:	ldr	w0, [sp, #44]
   24e20:	cmp	w0, #0x0
   24e24:	b.ge	24e38 <rpl_fcntl@@Base+0x3c0>  // b.tcont
   24e28:	bl	b640 <__errno_location@plt>
   24e2c:	ldr	w0, [x0]
   24e30:	cmp	w0, #0x16
   24e34:	b.eq	24e4c <rpl_fcntl@@Base+0x3d4>  // b.none
   24e38:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   24e3c:	add	x0, x0, #0x5d8
   24e40:	mov	w1, #0x1                   	// #1
   24e44:	str	w1, [x0]
   24e48:	b	24e8c <rpl_fcntl@@Base+0x414>
   24e4c:	ldr	w1, [sp, #24]
   24e50:	ldr	w0, [sp, #28]
   24e54:	bl	24db4 <rpl_fcntl@@Base+0x33c>
   24e58:	str	w0, [sp, #44]
   24e5c:	ldr	w0, [sp, #44]
   24e60:	cmp	w0, #0x0
   24e64:	b.lt	24e8c <rpl_fcntl@@Base+0x414>  // b.tstop
   24e68:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   24e6c:	add	x0, x0, #0x5d8
   24e70:	mov	w1, #0xffffffff            	// #-1
   24e74:	str	w1, [x0]
   24e78:	b	24e8c <rpl_fcntl@@Base+0x414>
   24e7c:	ldr	w1, [sp, #24]
   24e80:	ldr	w0, [sp, #28]
   24e84:	bl	24db4 <rpl_fcntl@@Base+0x33c>
   24e88:	str	w0, [sp, #44]
   24e8c:	ldr	w0, [sp, #44]
   24e90:	cmp	w0, #0x0
   24e94:	b.lt	24f14 <rpl_fcntl@@Base+0x49c>  // b.tstop
   24e98:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   24e9c:	add	x0, x0, #0x5d8
   24ea0:	ldr	w0, [x0]
   24ea4:	cmn	w0, #0x1
   24ea8:	b.ne	24f14 <rpl_fcntl@@Base+0x49c>  // b.any
   24eac:	mov	w1, #0x1                   	// #1
   24eb0:	ldr	w0, [sp, #44]
   24eb4:	bl	b320 <fcntl@plt>
   24eb8:	str	w0, [sp, #40]
   24ebc:	ldr	w0, [sp, #40]
   24ec0:	cmp	w0, #0x0
   24ec4:	b.lt	24ee8 <rpl_fcntl@@Base+0x470>  // b.tstop
   24ec8:	ldr	w0, [sp, #40]
   24ecc:	orr	w0, w0, #0x1
   24ed0:	mov	w2, w0
   24ed4:	mov	w1, #0x2                   	// #2
   24ed8:	ldr	w0, [sp, #44]
   24edc:	bl	b320 <fcntl@plt>
   24ee0:	cmn	w0, #0x1
   24ee4:	b.ne	24f14 <rpl_fcntl@@Base+0x49c>  // b.any
   24ee8:	bl	b640 <__errno_location@plt>
   24eec:	ldr	w0, [x0]
   24ef0:	str	w0, [sp, #36]
   24ef4:	ldr	w0, [sp, #44]
   24ef8:	bl	ae80 <close@plt>
   24efc:	bl	b640 <__errno_location@plt>
   24f00:	mov	x1, x0
   24f04:	ldr	w0, [sp, #36]
   24f08:	str	w0, [x1]
   24f0c:	mov	w0, #0xffffffff            	// #-1
   24f10:	str	w0, [sp, #44]
   24f14:	ldr	w0, [sp, #44]
   24f18:	ldp	x29, x30, [sp], #48
   24f1c:	ret
   24f20:	sub	sp, sp, #0x40
   24f24:	str	x0, [sp, #8]
   24f28:	str	x1, [sp]
   24f2c:	ldr	x0, [sp]
   24f30:	ldr	w0, [x0, #44]
   24f34:	str	w0, [sp, #60]
   24f38:	ldr	x0, [sp]
   24f3c:	ldr	w0, [x0, #48]
   24f40:	str	w0, [sp, #44]
   24f44:	ldr	x0, [sp]
   24f48:	ldr	w0, [x0]
   24f4c:	str	w0, [sp, #56]
   24f50:	b	25130 <rpl_fcntl@@Base+0x6b8>
   24f54:	ldr	w1, [sp, #56]
   24f58:	ldr	w0, [sp, #44]
   24f5c:	sub	w1, w1, w0
   24f60:	ldr	w2, [sp, #44]
   24f64:	ldr	w0, [sp, #60]
   24f68:	sub	w0, w2, w0
   24f6c:	cmp	w1, w0
   24f70:	b.le	25064 <rpl_fcntl@@Base+0x5ec>
   24f74:	ldr	w1, [sp, #44]
   24f78:	ldr	w0, [sp, #60]
   24f7c:	sub	w0, w1, w0
   24f80:	str	w0, [sp, #28]
   24f84:	str	wzr, [sp, #52]
   24f88:	b	25040 <rpl_fcntl@@Base+0x5c8>
   24f8c:	ldr	w1, [sp, #60]
   24f90:	ldr	w0, [sp, #52]
   24f94:	add	w0, w1, w0
   24f98:	sxtw	x0, w0
   24f9c:	lsl	x0, x0, #3
   24fa0:	ldr	x1, [sp, #8]
   24fa4:	add	x0, x1, x0
   24fa8:	ldr	x0, [x0]
   24fac:	str	x0, [sp, #32]
   24fb0:	ldr	w1, [sp, #44]
   24fb4:	ldr	w0, [sp, #60]
   24fb8:	sub	w0, w1, w0
   24fbc:	ldr	w1, [sp, #56]
   24fc0:	sub	w1, w1, w0
   24fc4:	ldr	w0, [sp, #52]
   24fc8:	add	w0, w1, w0
   24fcc:	sxtw	x0, w0
   24fd0:	lsl	x0, x0, #3
   24fd4:	ldr	x1, [sp, #8]
   24fd8:	add	x1, x1, x0
   24fdc:	ldr	w2, [sp, #60]
   24fe0:	ldr	w0, [sp, #52]
   24fe4:	add	w0, w2, w0
   24fe8:	sxtw	x0, w0
   24fec:	lsl	x0, x0, #3
   24ff0:	ldr	x2, [sp, #8]
   24ff4:	add	x0, x2, x0
   24ff8:	ldr	x1, [x1]
   24ffc:	str	x1, [x0]
   25000:	ldr	w1, [sp, #44]
   25004:	ldr	w0, [sp, #60]
   25008:	sub	w0, w1, w0
   2500c:	ldr	w1, [sp, #56]
   25010:	sub	w1, w1, w0
   25014:	ldr	w0, [sp, #52]
   25018:	add	w0, w1, w0
   2501c:	sxtw	x0, w0
   25020:	lsl	x0, x0, #3
   25024:	ldr	x1, [sp, #8]
   25028:	add	x0, x1, x0
   2502c:	ldr	x1, [sp, #32]
   25030:	str	x1, [x0]
   25034:	ldr	w0, [sp, #52]
   25038:	add	w0, w0, #0x1
   2503c:	str	w0, [sp, #52]
   25040:	ldr	w1, [sp, #52]
   25044:	ldr	w0, [sp, #28]
   25048:	cmp	w1, w0
   2504c:	b.lt	24f8c <rpl_fcntl@@Base+0x514>  // b.tstop
   25050:	ldr	w1, [sp, #56]
   25054:	ldr	w0, [sp, #28]
   25058:	sub	w0, w1, w0
   2505c:	str	w0, [sp, #56]
   25060:	b	25130 <rpl_fcntl@@Base+0x6b8>
   25064:	ldr	w1, [sp, #56]
   25068:	ldr	w0, [sp, #44]
   2506c:	sub	w0, w1, w0
   25070:	str	w0, [sp, #40]
   25074:	str	wzr, [sp, #48]
   25078:	b	25110 <rpl_fcntl@@Base+0x698>
   2507c:	ldr	w1, [sp, #60]
   25080:	ldr	w0, [sp, #48]
   25084:	add	w0, w1, w0
   25088:	sxtw	x0, w0
   2508c:	lsl	x0, x0, #3
   25090:	ldr	x1, [sp, #8]
   25094:	add	x0, x1, x0
   25098:	ldr	x0, [x0]
   2509c:	str	x0, [sp, #32]
   250a0:	ldr	w1, [sp, #44]
   250a4:	ldr	w0, [sp, #48]
   250a8:	add	w0, w1, w0
   250ac:	sxtw	x0, w0
   250b0:	lsl	x0, x0, #3
   250b4:	ldr	x1, [sp, #8]
   250b8:	add	x1, x1, x0
   250bc:	ldr	w2, [sp, #60]
   250c0:	ldr	w0, [sp, #48]
   250c4:	add	w0, w2, w0
   250c8:	sxtw	x0, w0
   250cc:	lsl	x0, x0, #3
   250d0:	ldr	x2, [sp, #8]
   250d4:	add	x0, x2, x0
   250d8:	ldr	x1, [x1]
   250dc:	str	x1, [x0]
   250e0:	ldr	w1, [sp, #44]
   250e4:	ldr	w0, [sp, #48]
   250e8:	add	w0, w1, w0
   250ec:	sxtw	x0, w0
   250f0:	lsl	x0, x0, #3
   250f4:	ldr	x1, [sp, #8]
   250f8:	add	x0, x1, x0
   250fc:	ldr	x1, [sp, #32]
   25100:	str	x1, [x0]
   25104:	ldr	w0, [sp, #48]
   25108:	add	w0, w0, #0x1
   2510c:	str	w0, [sp, #48]
   25110:	ldr	w1, [sp, #48]
   25114:	ldr	w0, [sp, #40]
   25118:	cmp	w1, w0
   2511c:	b.lt	2507c <rpl_fcntl@@Base+0x604>  // b.tstop
   25120:	ldr	w1, [sp, #60]
   25124:	ldr	w0, [sp, #40]
   25128:	add	w0, w1, w0
   2512c:	str	w0, [sp, #60]
   25130:	ldr	w1, [sp, #56]
   25134:	ldr	w0, [sp, #44]
   25138:	cmp	w1, w0
   2513c:	b.le	25150 <rpl_fcntl@@Base+0x6d8>
   25140:	ldr	w1, [sp, #44]
   25144:	ldr	w0, [sp, #60]
   25148:	cmp	w1, w0
   2514c:	b.gt	24f54 <rpl_fcntl@@Base+0x4dc>
   25150:	ldr	x0, [sp]
   25154:	ldr	w1, [x0, #44]
   25158:	ldr	x0, [sp]
   2515c:	ldr	w2, [x0]
   25160:	ldr	x0, [sp]
   25164:	ldr	w0, [x0, #48]
   25168:	sub	w0, w2, w0
   2516c:	add	w1, w1, w0
   25170:	ldr	x0, [sp]
   25174:	str	w1, [x0, #44]
   25178:	ldr	x0, [sp]
   2517c:	ldr	w1, [x0]
   25180:	ldr	x0, [sp]
   25184:	str	w1, [x0, #48]
   25188:	nop
   2518c:	add	sp, sp, #0x40
   25190:	ret
   25194:	stp	x29, x30, [sp, #-160]!
   25198:	mov	x29, sp
   2519c:	str	x19, [sp, #16]
   251a0:	str	w0, [sp, #92]
   251a4:	str	x1, [sp, #80]
   251a8:	str	x2, [sp, #72]
   251ac:	str	x3, [sp, #64]
   251b0:	str	x4, [sp, #56]
   251b4:	str	w5, [sp, #88]
   251b8:	str	x6, [sp, #48]
   251bc:	str	w7, [sp, #44]
   251c0:	str	xzr, [sp, #136]
   251c4:	ldr	x0, [sp, #48]
   251c8:	ldr	x0, [x0, #32]
   251cc:	str	x0, [sp, #152]
   251d0:	b	251e0 <rpl_fcntl@@Base+0x768>
   251d4:	ldr	x0, [sp, #152]
   251d8:	add	x0, x0, #0x1
   251dc:	str	x0, [sp, #152]
   251e0:	ldr	x0, [sp, #152]
   251e4:	ldrb	w0, [x0]
   251e8:	cmp	w0, #0x0
   251ec:	b.eq	25200 <rpl_fcntl@@Base+0x788>  // b.none
   251f0:	ldr	x0, [sp, #152]
   251f4:	ldrb	w0, [x0]
   251f8:	cmp	w0, #0x3d
   251fc:	b.ne	251d4 <rpl_fcntl@@Base+0x75c>  // b.any
   25200:	ldr	x0, [sp, #48]
   25204:	ldr	x0, [x0, #32]
   25208:	ldr	x1, [sp, #152]
   2520c:	sub	x0, x1, x0
   25210:	str	x0, [sp, #96]
   25214:	ldr	x0, [sp, #64]
   25218:	str	x0, [sp, #144]
   2521c:	str	wzr, [sp, #132]
   25220:	b	25294 <rpl_fcntl@@Base+0x81c>
   25224:	ldr	x0, [sp, #144]
   25228:	ldr	x3, [x0]
   2522c:	ldr	x0, [sp, #48]
   25230:	ldr	x0, [x0, #32]
   25234:	ldr	x2, [sp, #96]
   25238:	mov	x1, x0
   2523c:	mov	x0, x3
   25240:	bl	ac60 <strncmp@plt>
   25244:	cmp	w0, #0x0
   25248:	b.ne	2527c <rpl_fcntl@@Base+0x804>  // b.any
   2524c:	ldr	x0, [sp, #144]
   25250:	ldr	x0, [x0]
   25254:	bl	a820 <strlen@plt>
   25258:	mov	x1, x0
   2525c:	ldr	x0, [sp, #96]
   25260:	cmp	x0, x1
   25264:	b.ne	2527c <rpl_fcntl@@Base+0x804>  // b.any
   25268:	ldr	x0, [sp, #144]
   2526c:	str	x0, [sp, #136]
   25270:	ldr	w0, [sp, #132]
   25274:	str	w0, [sp, #128]
   25278:	b	252a4 <rpl_fcntl@@Base+0x82c>
   2527c:	ldr	x0, [sp, #144]
   25280:	add	x0, x0, #0x20
   25284:	str	x0, [sp, #144]
   25288:	ldr	w0, [sp, #132]
   2528c:	add	w0, w0, #0x1
   25290:	str	w0, [sp, #132]
   25294:	ldr	x0, [sp, #144]
   25298:	ldr	x0, [x0]
   2529c:	cmp	x0, #0x0
   252a0:	b.ne	25224 <rpl_fcntl@@Base+0x7ac>  // b.any
   252a4:	ldr	x0, [sp, #136]
   252a8:	cmp	x0, #0x0
   252ac:	b.ne	25620 <rpl_fcntl@@Base+0xba8>  // b.any
   252b0:	str	xzr, [sp, #120]
   252b4:	str	wzr, [sp, #116]
   252b8:	str	wzr, [sp, #112]
   252bc:	mov	w0, #0xffffffff            	// #-1
   252c0:	str	w0, [sp, #108]
   252c4:	ldr	x0, [sp, #64]
   252c8:	str	x0, [sp, #144]
   252cc:	str	wzr, [sp, #128]
   252d0:	b	25438 <rpl_fcntl@@Base+0x9c0>
   252d4:	ldr	x0, [sp, #144]
   252d8:	ldr	x3, [x0]
   252dc:	ldr	x0, [sp, #48]
   252e0:	ldr	x0, [x0, #32]
   252e4:	ldr	x2, [sp, #96]
   252e8:	mov	x1, x0
   252ec:	mov	x0, x3
   252f0:	bl	ac60 <strncmp@plt>
   252f4:	cmp	w0, #0x0
   252f8:	b.ne	25420 <rpl_fcntl@@Base+0x9a8>  // b.any
   252fc:	ldr	x0, [sp, #136]
   25300:	cmp	x0, #0x0
   25304:	b.ne	2531c <rpl_fcntl@@Base+0x8a4>  // b.any
   25308:	ldr	x0, [sp, #144]
   2530c:	str	x0, [sp, #136]
   25310:	ldr	w0, [sp, #128]
   25314:	str	w0, [sp, #108]
   25318:	b	25420 <rpl_fcntl@@Base+0x9a8>
   2531c:	ldr	w0, [sp, #88]
   25320:	cmp	w0, #0x0
   25324:	b.ne	25370 <rpl_fcntl@@Base+0x8f8>  // b.any
   25328:	ldr	x0, [sp, #136]
   2532c:	ldr	w1, [x0, #8]
   25330:	ldr	x0, [sp, #144]
   25334:	ldr	w0, [x0, #8]
   25338:	cmp	w1, w0
   2533c:	b.ne	25370 <rpl_fcntl@@Base+0x8f8>  // b.any
   25340:	ldr	x0, [sp, #136]
   25344:	ldr	x1, [x0, #16]
   25348:	ldr	x0, [sp, #144]
   2534c:	ldr	x0, [x0, #16]
   25350:	cmp	x1, x0
   25354:	b.ne	25370 <rpl_fcntl@@Base+0x8f8>  // b.any
   25358:	ldr	x0, [sp, #136]
   2535c:	ldr	w1, [x0, #24]
   25360:	ldr	x0, [sp, #144]
   25364:	ldr	w0, [x0, #24]
   25368:	cmp	w1, w0
   2536c:	b.eq	25420 <rpl_fcntl@@Base+0x9a8>  // b.none
   25370:	ldr	w0, [sp, #112]
   25374:	cmp	w0, #0x0
   25378:	b.ne	25420 <rpl_fcntl@@Base+0x9a8>  // b.any
   2537c:	ldr	w0, [sp, #44]
   25380:	cmp	w0, #0x0
   25384:	b.ne	25394 <rpl_fcntl@@Base+0x91c>  // b.any
   25388:	mov	w0, #0x1                   	// #1
   2538c:	str	w0, [sp, #112]
   25390:	b	25400 <rpl_fcntl@@Base+0x988>
   25394:	ldr	x0, [sp, #120]
   25398:	cmp	x0, #0x0
   2539c:	b.ne	25400 <rpl_fcntl@@Base+0x988>  // b.any
   253a0:	ldrsw	x0, [sp, #132]
   253a4:	bl	ab40 <malloc@plt>
   253a8:	str	x0, [sp, #120]
   253ac:	ldr	x0, [sp, #120]
   253b0:	cmp	x0, #0x0
   253b4:	b.ne	253c4 <rpl_fcntl@@Base+0x94c>  // b.any
   253b8:	mov	w0, #0x1                   	// #1
   253bc:	str	w0, [sp, #112]
   253c0:	b	253cc <rpl_fcntl@@Base+0x954>
   253c4:	mov	w0, #0x1                   	// #1
   253c8:	str	w0, [sp, #116]
   253cc:	ldr	x0, [sp, #120]
   253d0:	cmp	x0, #0x0
   253d4:	b.eq	25400 <rpl_fcntl@@Base+0x988>  // b.none
   253d8:	ldrsw	x0, [sp, #132]
   253dc:	mov	x2, x0
   253e0:	mov	w1, #0x0                   	// #0
   253e4:	ldr	x0, [sp, #120]
   253e8:	bl	acb0 <memset@plt>
   253ec:	ldrsw	x0, [sp, #108]
   253f0:	ldr	x1, [sp, #120]
   253f4:	add	x0, x1, x0
   253f8:	mov	w1, #0x1                   	// #1
   253fc:	strb	w1, [x0]
   25400:	ldr	x0, [sp, #120]
   25404:	cmp	x0, #0x0
   25408:	b.eq	25420 <rpl_fcntl@@Base+0x9a8>  // b.none
   2540c:	ldrsw	x0, [sp, #128]
   25410:	ldr	x1, [sp, #120]
   25414:	add	x0, x1, x0
   25418:	mov	w1, #0x1                   	// #1
   2541c:	strb	w1, [x0]
   25420:	ldr	x0, [sp, #144]
   25424:	add	x0, x0, #0x20
   25428:	str	x0, [sp, #144]
   2542c:	ldr	w0, [sp, #128]
   25430:	add	w0, w0, #0x1
   25434:	str	w0, [sp, #128]
   25438:	ldr	x0, [sp, #144]
   2543c:	ldr	x0, [x0]
   25440:	cmp	x0, #0x0
   25444:	b.ne	252d4 <rpl_fcntl@@Base+0x85c>  // b.any
   25448:	ldr	x0, [sp, #120]
   2544c:	cmp	x0, #0x0
   25450:	b.ne	25460 <rpl_fcntl@@Base+0x9e8>  // b.any
   25454:	ldr	w0, [sp, #112]
   25458:	cmp	w0, #0x0
   2545c:	b.eq	25618 <rpl_fcntl@@Base+0xba0>  // b.none
   25460:	ldr	w0, [sp, #44]
   25464:	cmp	w0, #0x0
   25468:	b.eq	255c0 <rpl_fcntl@@Base+0xb48>  // b.none
   2546c:	ldr	w0, [sp, #112]
   25470:	cmp	w0, #0x0
   25474:	b.eq	254c8 <rpl_fcntl@@Base+0xa50>  // b.none
   25478:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2547c:	ldr	x0, [x0, #3816]
   25480:	ldr	x19, [x0]
   25484:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   25488:	add	x1, x0, #0xf48
   2548c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   25490:	add	x0, x0, #0xf68
   25494:	bl	b120 <dgettext@plt>
   25498:	mov	x5, x0
   2549c:	ldr	x0, [sp, #80]
   254a0:	ldr	x1, [x0]
   254a4:	ldr	x0, [sp, #48]
   254a8:	ldr	x0, [x0, #32]
   254ac:	mov	x4, x0
   254b0:	ldr	x3, [sp, #160]
   254b4:	mov	x2, x1
   254b8:	mov	x1, x5
   254bc:	mov	x0, x19
   254c0:	bl	b750 <fprintf@plt>
   254c4:	b	255c0 <rpl_fcntl@@Base+0xb48>
   254c8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   254cc:	ldr	x0, [x0, #3816]
   254d0:	ldr	x0, [x0]
   254d4:	bl	a890 <flockfile@plt>
   254d8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   254dc:	ldr	x0, [x0, #3816]
   254e0:	ldr	x19, [x0]
   254e4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   254e8:	add	x1, x0, #0xf78
   254ec:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   254f0:	add	x0, x0, #0xf68
   254f4:	bl	b120 <dgettext@plt>
   254f8:	mov	x5, x0
   254fc:	ldr	x0, [sp, #80]
   25500:	ldr	x1, [x0]
   25504:	ldr	x0, [sp, #48]
   25508:	ldr	x0, [x0, #32]
   2550c:	mov	x4, x0
   25510:	ldr	x3, [sp, #160]
   25514:	mov	x2, x1
   25518:	mov	x1, x5
   2551c:	mov	x0, x19
   25520:	bl	b750 <fprintf@plt>
   25524:	str	wzr, [sp, #128]
   25528:	b	25588 <rpl_fcntl@@Base+0xb10>
   2552c:	ldrsw	x0, [sp, #128]
   25530:	ldr	x1, [sp, #120]
   25534:	add	x0, x1, x0
   25538:	ldrb	w0, [x0]
   2553c:	cmp	w0, #0x0
   25540:	b.eq	2557c <rpl_fcntl@@Base+0xb04>  // b.none
   25544:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   25548:	ldr	x0, [x0, #3816]
   2554c:	ldr	x4, [x0]
   25550:	ldrsw	x0, [sp, #128]
   25554:	lsl	x0, x0, #5
   25558:	ldr	x1, [sp, #64]
   2555c:	add	x0, x1, x0
   25560:	ldr	x0, [x0]
   25564:	mov	x3, x0
   25568:	ldr	x2, [sp, #160]
   2556c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   25570:	add	x1, x0, #0xfa8
   25574:	mov	x0, x4
   25578:	bl	b750 <fprintf@plt>
   2557c:	ldr	w0, [sp, #128]
   25580:	add	w0, w0, #0x1
   25584:	str	w0, [sp, #128]
   25588:	ldr	w1, [sp, #128]
   2558c:	ldr	w0, [sp, #132]
   25590:	cmp	w1, w0
   25594:	b.lt	2552c <rpl_fcntl@@Base+0xab4>  // b.tstop
   25598:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2559c:	ldr	x0, [x0, #3816]
   255a0:	ldr	x0, [x0]
   255a4:	mov	x1, x0
   255a8:	mov	w0, #0xa                   	// #10
   255ac:	bl	a9f0 <fputc@plt>
   255b0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   255b4:	ldr	x0, [x0, #3816]
   255b8:	ldr	x0, [x0]
   255bc:	bl	abb0 <funlockfile@plt>
   255c0:	ldr	w0, [sp, #116]
   255c4:	cmp	w0, #0x0
   255c8:	b.eq	255d4 <rpl_fcntl@@Base+0xb5c>  // b.none
   255cc:	ldr	x0, [sp, #120]
   255d0:	bl	b130 <free@plt>
   255d4:	ldr	x0, [sp, #48]
   255d8:	ldr	x19, [x0, #32]
   255dc:	ldr	x0, [sp, #48]
   255e0:	ldr	x0, [x0, #32]
   255e4:	bl	a820 <strlen@plt>
   255e8:	add	x1, x19, x0
   255ec:	ldr	x0, [sp, #48]
   255f0:	str	x1, [x0, #32]
   255f4:	ldr	x0, [sp, #48]
   255f8:	ldr	w0, [x0]
   255fc:	add	w1, w0, #0x1
   25600:	ldr	x0, [sp, #48]
   25604:	str	w1, [x0]
   25608:	ldr	x0, [sp, #48]
   2560c:	str	wzr, [x0, #8]
   25610:	mov	w0, #0x3f                  	// #63
   25614:	b	258fc <rpl_fcntl@@Base+0xe84>
   25618:	ldr	w0, [sp, #108]
   2561c:	str	w0, [sp, #128]
   25620:	ldr	x0, [sp, #136]
   25624:	cmp	x0, #0x0
   25628:	b.ne	25710 <rpl_fcntl@@Base+0xc98>  // b.any
   2562c:	ldr	w0, [sp, #88]
   25630:	cmp	w0, #0x0
   25634:	b.eq	25684 <rpl_fcntl@@Base+0xc0c>  // b.none
   25638:	ldr	x0, [sp, #48]
   2563c:	ldr	w0, [x0]
   25640:	sxtw	x0, w0
   25644:	lsl	x0, x0, #3
   25648:	ldr	x1, [sp, #80]
   2564c:	add	x0, x1, x0
   25650:	ldr	x0, [x0]
   25654:	add	x0, x0, #0x1
   25658:	ldrb	w0, [x0]
   2565c:	cmp	w0, #0x2d
   25660:	b.eq	25684 <rpl_fcntl@@Base+0xc0c>  // b.none
   25664:	ldr	x0, [sp, #48]
   25668:	ldr	x0, [x0, #32]
   2566c:	ldrb	w0, [x0]
   25670:	mov	w1, w0
   25674:	ldr	x0, [sp, #72]
   25678:	bl	b270 <strchr@plt>
   2567c:	cmp	x0, #0x0
   25680:	b.ne	25708 <rpl_fcntl@@Base+0xc90>  // b.any
   25684:	ldr	w0, [sp, #44]
   25688:	cmp	w0, #0x0
   2568c:	b.eq	256dc <rpl_fcntl@@Base+0xc64>  // b.none
   25690:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   25694:	ldr	x0, [x0, #3816]
   25698:	ldr	x19, [x0]
   2569c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   256a0:	add	x1, x0, #0xfb0
   256a4:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   256a8:	add	x0, x0, #0xf68
   256ac:	bl	b120 <dgettext@plt>
   256b0:	mov	x5, x0
   256b4:	ldr	x0, [sp, #80]
   256b8:	ldr	x1, [x0]
   256bc:	ldr	x0, [sp, #48]
   256c0:	ldr	x0, [x0, #32]
   256c4:	mov	x4, x0
   256c8:	ldr	x3, [sp, #160]
   256cc:	mov	x2, x1
   256d0:	mov	x1, x5
   256d4:	mov	x0, x19
   256d8:	bl	b750 <fprintf@plt>
   256dc:	ldr	x0, [sp, #48]
   256e0:	str	xzr, [x0, #32]
   256e4:	ldr	x0, [sp, #48]
   256e8:	ldr	w0, [x0]
   256ec:	add	w1, w0, #0x1
   256f0:	ldr	x0, [sp, #48]
   256f4:	str	w1, [x0]
   256f8:	ldr	x0, [sp, #48]
   256fc:	str	wzr, [x0, #8]
   25700:	mov	w0, #0x3f                  	// #63
   25704:	b	258fc <rpl_fcntl@@Base+0xe84>
   25708:	mov	w0, #0xffffffff            	// #-1
   2570c:	b	258fc <rpl_fcntl@@Base+0xe84>
   25710:	ldr	x0, [sp, #48]
   25714:	ldr	w0, [x0]
   25718:	add	w1, w0, #0x1
   2571c:	ldr	x0, [sp, #48]
   25720:	str	w1, [x0]
   25724:	ldr	x0, [sp, #48]
   25728:	str	xzr, [x0, #32]
   2572c:	ldr	x0, [sp, #152]
   25730:	ldrb	w0, [x0]
   25734:	cmp	w0, #0x0
   25738:	b.eq	257d0 <rpl_fcntl@@Base+0xd58>  // b.none
   2573c:	ldr	x0, [sp, #136]
   25740:	ldr	w0, [x0, #8]
   25744:	cmp	w0, #0x0
   25748:	b.eq	25760 <rpl_fcntl@@Base+0xce8>  // b.none
   2574c:	ldr	x0, [sp, #152]
   25750:	add	x1, x0, #0x1
   25754:	ldr	x0, [sp, #48]
   25758:	str	x1, [x0, #16]
   2575c:	b	258b0 <rpl_fcntl@@Base+0xe38>
   25760:	ldr	w0, [sp, #44]
   25764:	cmp	w0, #0x0
   25768:	b.eq	257b8 <rpl_fcntl@@Base+0xd40>  // b.none
   2576c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   25770:	ldr	x0, [x0, #3816]
   25774:	ldr	x19, [x0]
   25778:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   2577c:	add	x1, x0, #0xfd0
   25780:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   25784:	add	x0, x0, #0xf68
   25788:	bl	b120 <dgettext@plt>
   2578c:	mov	x5, x0
   25790:	ldr	x0, [sp, #80]
   25794:	ldr	x1, [x0]
   25798:	ldr	x0, [sp, #136]
   2579c:	ldr	x0, [x0]
   257a0:	mov	x4, x0
   257a4:	ldr	x3, [sp, #160]
   257a8:	mov	x2, x1
   257ac:	mov	x1, x5
   257b0:	mov	x0, x19
   257b4:	bl	b750 <fprintf@plt>
   257b8:	ldr	x0, [sp, #136]
   257bc:	ldr	w1, [x0, #24]
   257c0:	ldr	x0, [sp, #48]
   257c4:	str	w1, [x0, #8]
   257c8:	mov	w0, #0x3f                  	// #63
   257cc:	b	258fc <rpl_fcntl@@Base+0xe84>
   257d0:	ldr	x0, [sp, #136]
   257d4:	ldr	w0, [x0, #8]
   257d8:	cmp	w0, #0x1
   257dc:	b.ne	258b0 <rpl_fcntl@@Base+0xe38>  // b.any
   257e0:	ldr	x0, [sp, #48]
   257e4:	ldr	w0, [x0]
   257e8:	ldr	w1, [sp, #92]
   257ec:	cmp	w1, w0
   257f0:	b.le	25828 <rpl_fcntl@@Base+0xdb0>
   257f4:	ldr	x0, [sp, #48]
   257f8:	ldr	w0, [x0]
   257fc:	add	w2, w0, #0x1
   25800:	ldr	x1, [sp, #48]
   25804:	str	w2, [x1]
   25808:	sxtw	x0, w0
   2580c:	lsl	x0, x0, #3
   25810:	ldr	x1, [sp, #80]
   25814:	add	x0, x1, x0
   25818:	ldr	x1, [x0]
   2581c:	ldr	x0, [sp, #48]
   25820:	str	x1, [x0, #16]
   25824:	b	258b0 <rpl_fcntl@@Base+0xe38>
   25828:	ldr	w0, [sp, #44]
   2582c:	cmp	w0, #0x0
   25830:	b.eq	25880 <rpl_fcntl@@Base+0xe08>  // b.none
   25834:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   25838:	ldr	x0, [x0, #3816]
   2583c:	ldr	x19, [x0]
   25840:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   25844:	add	x1, x0, #0x0
   25848:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   2584c:	add	x0, x0, #0xf68
   25850:	bl	b120 <dgettext@plt>
   25854:	mov	x5, x0
   25858:	ldr	x0, [sp, #80]
   2585c:	ldr	x1, [x0]
   25860:	ldr	x0, [sp, #136]
   25864:	ldr	x0, [x0]
   25868:	mov	x4, x0
   2586c:	ldr	x3, [sp, #160]
   25870:	mov	x2, x1
   25874:	mov	x1, x5
   25878:	mov	x0, x19
   2587c:	bl	b750 <fprintf@plt>
   25880:	ldr	x0, [sp, #136]
   25884:	ldr	w1, [x0, #24]
   25888:	ldr	x0, [sp, #48]
   2588c:	str	w1, [x0, #8]
   25890:	ldr	x0, [sp, #72]
   25894:	ldrb	w0, [x0]
   25898:	cmp	w0, #0x3a
   2589c:	b.ne	258a8 <rpl_fcntl@@Base+0xe30>  // b.any
   258a0:	mov	w0, #0x3a                  	// #58
   258a4:	b	258fc <rpl_fcntl@@Base+0xe84>
   258a8:	mov	w0, #0x3f                  	// #63
   258ac:	b	258fc <rpl_fcntl@@Base+0xe84>
   258b0:	ldr	x0, [sp, #56]
   258b4:	cmp	x0, #0x0
   258b8:	b.eq	258c8 <rpl_fcntl@@Base+0xe50>  // b.none
   258bc:	ldr	x0, [sp, #56]
   258c0:	ldr	w1, [sp, #128]
   258c4:	str	w1, [x0]
   258c8:	ldr	x0, [sp, #136]
   258cc:	ldr	x0, [x0, #16]
   258d0:	cmp	x0, #0x0
   258d4:	b.eq	258f4 <rpl_fcntl@@Base+0xe7c>  // b.none
   258d8:	ldr	x0, [sp, #136]
   258dc:	ldr	x0, [x0, #16]
   258e0:	ldr	x1, [sp, #136]
   258e4:	ldr	w1, [x1, #24]
   258e8:	str	w1, [x0]
   258ec:	mov	w0, #0x0                   	// #0
   258f0:	b	258fc <rpl_fcntl@@Base+0xe84>
   258f4:	ldr	x0, [sp, #136]
   258f8:	ldr	w0, [x0, #24]
   258fc:	ldr	x19, [sp, #16]
   25900:	ldp	x29, x30, [sp], #160
   25904:	ret
   25908:	stp	x29, x30, [sp, #-48]!
   2590c:	mov	x29, sp
   25910:	str	w0, [sp, #44]
   25914:	str	x1, [sp, #32]
   25918:	str	x2, [sp, #24]
   2591c:	str	x3, [sp, #16]
   25920:	str	w4, [sp, #40]
   25924:	ldr	x0, [sp, #16]
   25928:	ldr	w0, [x0]
   2592c:	cmp	w0, #0x0
   25930:	b.ne	25940 <rpl_fcntl@@Base+0xec8>  // b.any
   25934:	ldr	x0, [sp, #16]
   25938:	mov	w1, #0x1                   	// #1
   2593c:	str	w1, [x0]
   25940:	ldr	x0, [sp, #16]
   25944:	ldr	w1, [x0]
   25948:	ldr	x0, [sp, #16]
   2594c:	str	w1, [x0, #48]
   25950:	ldr	x0, [sp, #16]
   25954:	ldr	w1, [x0, #48]
   25958:	ldr	x0, [sp, #16]
   2595c:	str	w1, [x0, #44]
   25960:	ldr	x0, [sp, #16]
   25964:	str	xzr, [x0, #32]
   25968:	ldr	x0, [sp, #24]
   2596c:	ldrb	w0, [x0]
   25970:	cmp	w0, #0x2d
   25974:	b.ne	25994 <rpl_fcntl@@Base+0xf1c>  // b.any
   25978:	ldr	x0, [sp, #16]
   2597c:	mov	w1, #0x2                   	// #2
   25980:	str	w1, [x0, #40]
   25984:	ldr	x0, [sp, #24]
   25988:	add	x0, x0, #0x1
   2598c:	str	x0, [sp, #24]
   25990:	b	259f4 <rpl_fcntl@@Base+0xf7c>
   25994:	ldr	x0, [sp, #24]
   25998:	ldrb	w0, [x0]
   2599c:	cmp	w0, #0x2b
   259a0:	b.ne	259bc <rpl_fcntl@@Base+0xf44>  // b.any
   259a4:	ldr	x0, [sp, #16]
   259a8:	str	wzr, [x0, #40]
   259ac:	ldr	x0, [sp, #24]
   259b0:	add	x0, x0, #0x1
   259b4:	str	x0, [sp, #24]
   259b8:	b	259f4 <rpl_fcntl@@Base+0xf7c>
   259bc:	ldr	w0, [sp, #40]
   259c0:	cmp	w0, #0x0
   259c4:	b.ne	259dc <rpl_fcntl@@Base+0xf64>  // b.any
   259c8:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   259cc:	add	x0, x0, #0x28
   259d0:	bl	b670 <getenv@plt>
   259d4:	cmp	x0, #0x0
   259d8:	b.eq	259e8 <rpl_fcntl@@Base+0xf70>  // b.none
   259dc:	ldr	x0, [sp, #16]
   259e0:	str	wzr, [x0, #40]
   259e4:	b	259f4 <rpl_fcntl@@Base+0xf7c>
   259e8:	ldr	x0, [sp, #16]
   259ec:	mov	w1, #0x1                   	// #1
   259f0:	str	w1, [x0, #40]
   259f4:	ldr	x0, [sp, #16]
   259f8:	mov	w1, #0x1                   	// #1
   259fc:	str	w1, [x0, #24]
   25a00:	ldr	x0, [sp, #24]
   25a04:	ldp	x29, x30, [sp], #48
   25a08:	ret

0000000000025a0c <_getopt_internal_r@@Base>:
   25a0c:	sub	sp, sp, #0x90
   25a10:	stp	x29, x30, [sp, #16]
   25a14:	add	x29, sp, #0x10
   25a18:	str	x19, [sp, #32]
   25a1c:	str	w0, [sp, #108]
   25a20:	str	x1, [sp, #96]
   25a24:	str	x2, [sp, #88]
   25a28:	str	x3, [sp, #80]
   25a2c:	str	x4, [sp, #72]
   25a30:	str	w5, [sp, #104]
   25a34:	str	x6, [sp, #64]
   25a38:	str	w7, [sp, #60]
   25a3c:	ldr	x0, [sp, #64]
   25a40:	ldr	w0, [x0, #4]
   25a44:	str	w0, [sp, #140]
   25a48:	ldr	w0, [sp, #108]
   25a4c:	cmp	w0, #0x0
   25a50:	b.gt	25a5c <_getopt_internal_r@@Base+0x50>
   25a54:	mov	w0, #0xffffffff            	// #-1
   25a58:	b	2638c <_getopt_internal_r@@Base+0x980>
   25a5c:	ldr	x0, [sp, #64]
   25a60:	str	xzr, [x0, #16]
   25a64:	ldr	x0, [sp, #64]
   25a68:	ldr	w0, [x0]
   25a6c:	cmp	w0, #0x0
   25a70:	b.eq	25a84 <_getopt_internal_r@@Base+0x78>  // b.none
   25a74:	ldr	x0, [sp, #64]
   25a78:	ldr	w0, [x0, #24]
   25a7c:	cmp	w0, #0x0
   25a80:	b.ne	25aa4 <_getopt_internal_r@@Base+0x98>  // b.any
   25a84:	ldr	w4, [sp, #60]
   25a88:	ldr	x3, [sp, #64]
   25a8c:	ldr	x2, [sp, #88]
   25a90:	ldr	x1, [sp, #96]
   25a94:	ldr	w0, [sp, #108]
   25a98:	bl	25908 <rpl_fcntl@@Base+0xe90>
   25a9c:	str	x0, [sp, #88]
   25aa0:	b	25ad0 <_getopt_internal_r@@Base+0xc4>
   25aa4:	ldr	x0, [sp, #88]
   25aa8:	ldrb	w0, [x0]
   25aac:	cmp	w0, #0x2d
   25ab0:	b.eq	25ac4 <_getopt_internal_r@@Base+0xb8>  // b.none
   25ab4:	ldr	x0, [sp, #88]
   25ab8:	ldrb	w0, [x0]
   25abc:	cmp	w0, #0x2b
   25ac0:	b.ne	25ad0 <_getopt_internal_r@@Base+0xc4>  // b.any
   25ac4:	ldr	x0, [sp, #88]
   25ac8:	add	x0, x0, #0x1
   25acc:	str	x0, [sp, #88]
   25ad0:	ldr	x0, [sp, #88]
   25ad4:	ldrb	w0, [x0]
   25ad8:	cmp	w0, #0x3a
   25adc:	b.ne	25ae4 <_getopt_internal_r@@Base+0xd8>  // b.any
   25ae0:	str	wzr, [sp, #140]
   25ae4:	ldr	x0, [sp, #64]
   25ae8:	ldr	x0, [x0, #32]
   25aec:	cmp	x0, #0x0
   25af0:	b.eq	25b08 <_getopt_internal_r@@Base+0xfc>  // b.none
   25af4:	ldr	x0, [sp, #64]
   25af8:	ldr	x0, [x0, #32]
   25afc:	ldrb	w0, [x0]
   25b00:	cmp	w0, #0x0
   25b04:	b.ne	25fc0 <_getopt_internal_r@@Base+0x5b4>  // b.any
   25b08:	ldr	x0, [sp, #64]
   25b0c:	ldr	w1, [x0, #48]
   25b10:	ldr	x0, [sp, #64]
   25b14:	ldr	w0, [x0]
   25b18:	cmp	w1, w0
   25b1c:	b.le	25b30 <_getopt_internal_r@@Base+0x124>
   25b20:	ldr	x0, [sp, #64]
   25b24:	ldr	w1, [x0]
   25b28:	ldr	x0, [sp, #64]
   25b2c:	str	w1, [x0, #48]
   25b30:	ldr	x0, [sp, #64]
   25b34:	ldr	w1, [x0, #44]
   25b38:	ldr	x0, [sp, #64]
   25b3c:	ldr	w0, [x0]
   25b40:	cmp	w1, w0
   25b44:	b.le	25b58 <_getopt_internal_r@@Base+0x14c>
   25b48:	ldr	x0, [sp, #64]
   25b4c:	ldr	w1, [x0]
   25b50:	ldr	x0, [sp, #64]
   25b54:	str	w1, [x0, #44]
   25b58:	ldr	x0, [sp, #64]
   25b5c:	ldr	w0, [x0, #40]
   25b60:	cmp	w0, #0x1
   25b64:	b.ne	25c60 <_getopt_internal_r@@Base+0x254>  // b.any
   25b68:	ldr	x0, [sp, #64]
   25b6c:	ldr	w1, [x0, #44]
   25b70:	ldr	x0, [sp, #64]
   25b74:	ldr	w0, [x0, #48]
   25b78:	cmp	w1, w0
   25b7c:	b.eq	25ba8 <_getopt_internal_r@@Base+0x19c>  // b.none
   25b80:	ldr	x0, [sp, #64]
   25b84:	ldr	w1, [x0, #48]
   25b88:	ldr	x0, [sp, #64]
   25b8c:	ldr	w0, [x0]
   25b90:	cmp	w1, w0
   25b94:	b.eq	25ba8 <_getopt_internal_r@@Base+0x19c>  // b.none
   25b98:	ldr	x1, [sp, #64]
   25b9c:	ldr	x0, [sp, #96]
   25ba0:	bl	24f20 <rpl_fcntl@@Base+0x4a8>
   25ba4:	b	25bd0 <_getopt_internal_r@@Base+0x1c4>
   25ba8:	ldr	x0, [sp, #64]
   25bac:	ldr	w1, [x0, #48]
   25bb0:	ldr	x0, [sp, #64]
   25bb4:	ldr	w0, [x0]
   25bb8:	cmp	w1, w0
   25bbc:	b.eq	25be8 <_getopt_internal_r@@Base+0x1dc>  // b.none
   25bc0:	ldr	x0, [sp, #64]
   25bc4:	ldr	w1, [x0]
   25bc8:	ldr	x0, [sp, #64]
   25bcc:	str	w1, [x0, #44]
   25bd0:	b	25be8 <_getopt_internal_r@@Base+0x1dc>
   25bd4:	ldr	x0, [sp, #64]
   25bd8:	ldr	w0, [x0]
   25bdc:	add	w1, w0, #0x1
   25be0:	ldr	x0, [sp, #64]
   25be4:	str	w1, [x0]
   25be8:	ldr	x0, [sp, #64]
   25bec:	ldr	w0, [x0]
   25bf0:	ldr	w1, [sp, #108]
   25bf4:	cmp	w1, w0
   25bf8:	b.le	25c50 <_getopt_internal_r@@Base+0x244>
   25bfc:	ldr	x0, [sp, #64]
   25c00:	ldr	w0, [x0]
   25c04:	sxtw	x0, w0
   25c08:	lsl	x0, x0, #3
   25c0c:	ldr	x1, [sp, #96]
   25c10:	add	x0, x1, x0
   25c14:	ldr	x0, [x0]
   25c18:	ldrb	w0, [x0]
   25c1c:	cmp	w0, #0x2d
   25c20:	b.ne	25bd4 <_getopt_internal_r@@Base+0x1c8>  // b.any
   25c24:	ldr	x0, [sp, #64]
   25c28:	ldr	w0, [x0]
   25c2c:	sxtw	x0, w0
   25c30:	lsl	x0, x0, #3
   25c34:	ldr	x1, [sp, #96]
   25c38:	add	x0, x1, x0
   25c3c:	ldr	x0, [x0]
   25c40:	add	x0, x0, #0x1
   25c44:	ldrb	w0, [x0]
   25c48:	cmp	w0, #0x0
   25c4c:	b.eq	25bd4 <_getopt_internal_r@@Base+0x1c8>  // b.none
   25c50:	ldr	x0, [sp, #64]
   25c54:	ldr	w1, [x0]
   25c58:	ldr	x0, [sp, #64]
   25c5c:	str	w1, [x0, #48]
   25c60:	ldr	x0, [sp, #64]
   25c64:	ldr	w0, [x0]
   25c68:	ldr	w1, [sp, #108]
   25c6c:	cmp	w1, w0
   25c70:	b.eq	25d3c <_getopt_internal_r@@Base+0x330>  // b.none
   25c74:	ldr	x0, [sp, #64]
   25c78:	ldr	w0, [x0]
   25c7c:	sxtw	x0, w0
   25c80:	lsl	x0, x0, #3
   25c84:	ldr	x1, [sp, #96]
   25c88:	add	x0, x1, x0
   25c8c:	ldr	x2, [x0]
   25c90:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   25c94:	add	x1, x0, #0x38
   25c98:	mov	x0, x2
   25c9c:	bl	b070 <strcmp@plt>
   25ca0:	cmp	w0, #0x0
   25ca4:	b.ne	25d3c <_getopt_internal_r@@Base+0x330>  // b.any
   25ca8:	ldr	x0, [sp, #64]
   25cac:	ldr	w0, [x0]
   25cb0:	add	w1, w0, #0x1
   25cb4:	ldr	x0, [sp, #64]
   25cb8:	str	w1, [x0]
   25cbc:	ldr	x0, [sp, #64]
   25cc0:	ldr	w1, [x0, #44]
   25cc4:	ldr	x0, [sp, #64]
   25cc8:	ldr	w0, [x0, #48]
   25ccc:	cmp	w1, w0
   25cd0:	b.eq	25cfc <_getopt_internal_r@@Base+0x2f0>  // b.none
   25cd4:	ldr	x0, [sp, #64]
   25cd8:	ldr	w1, [x0, #48]
   25cdc:	ldr	x0, [sp, #64]
   25ce0:	ldr	w0, [x0]
   25ce4:	cmp	w1, w0
   25ce8:	b.eq	25cfc <_getopt_internal_r@@Base+0x2f0>  // b.none
   25cec:	ldr	x1, [sp, #64]
   25cf0:	ldr	x0, [sp, #96]
   25cf4:	bl	24f20 <rpl_fcntl@@Base+0x4a8>
   25cf8:	b	25d24 <_getopt_internal_r@@Base+0x318>
   25cfc:	ldr	x0, [sp, #64]
   25d00:	ldr	w1, [x0, #44]
   25d04:	ldr	x0, [sp, #64]
   25d08:	ldr	w0, [x0, #48]
   25d0c:	cmp	w1, w0
   25d10:	b.ne	25d24 <_getopt_internal_r@@Base+0x318>  // b.any
   25d14:	ldr	x0, [sp, #64]
   25d18:	ldr	w1, [x0]
   25d1c:	ldr	x0, [sp, #64]
   25d20:	str	w1, [x0, #44]
   25d24:	ldr	x0, [sp, #64]
   25d28:	ldr	w1, [sp, #108]
   25d2c:	str	w1, [x0, #48]
   25d30:	ldr	x0, [sp, #64]
   25d34:	ldr	w1, [sp, #108]
   25d38:	str	w1, [x0]
   25d3c:	ldr	x0, [sp, #64]
   25d40:	ldr	w0, [x0]
   25d44:	ldr	w1, [sp, #108]
   25d48:	cmp	w1, w0
   25d4c:	b.ne	25d80 <_getopt_internal_r@@Base+0x374>  // b.any
   25d50:	ldr	x0, [sp, #64]
   25d54:	ldr	w1, [x0, #44]
   25d58:	ldr	x0, [sp, #64]
   25d5c:	ldr	w0, [x0, #48]
   25d60:	cmp	w1, w0
   25d64:	b.eq	25d78 <_getopt_internal_r@@Base+0x36c>  // b.none
   25d68:	ldr	x0, [sp, #64]
   25d6c:	ldr	w1, [x0, #44]
   25d70:	ldr	x0, [sp, #64]
   25d74:	str	w1, [x0]
   25d78:	mov	w0, #0xffffffff            	// #-1
   25d7c:	b	2638c <_getopt_internal_r@@Base+0x980>
   25d80:	ldr	x0, [sp, #64]
   25d84:	ldr	w0, [x0]
   25d88:	sxtw	x0, w0
   25d8c:	lsl	x0, x0, #3
   25d90:	ldr	x1, [sp, #96]
   25d94:	add	x0, x1, x0
   25d98:	ldr	x0, [x0]
   25d9c:	ldrb	w0, [x0]
   25da0:	cmp	w0, #0x2d
   25da4:	b.ne	25dd4 <_getopt_internal_r@@Base+0x3c8>  // b.any
   25da8:	ldr	x0, [sp, #64]
   25dac:	ldr	w0, [x0]
   25db0:	sxtw	x0, w0
   25db4:	lsl	x0, x0, #3
   25db8:	ldr	x1, [sp, #96]
   25dbc:	add	x0, x1, x0
   25dc0:	ldr	x0, [x0]
   25dc4:	add	x0, x0, #0x1
   25dc8:	ldrb	w0, [x0]
   25dcc:	cmp	w0, #0x0
   25dd0:	b.ne	25e24 <_getopt_internal_r@@Base+0x418>  // b.any
   25dd4:	ldr	x0, [sp, #64]
   25dd8:	ldr	w0, [x0, #40]
   25ddc:	cmp	w0, #0x0
   25de0:	b.ne	25dec <_getopt_internal_r@@Base+0x3e0>  // b.any
   25de4:	mov	w0, #0xffffffff            	// #-1
   25de8:	b	2638c <_getopt_internal_r@@Base+0x980>
   25dec:	ldr	x0, [sp, #64]
   25df0:	ldr	w0, [x0]
   25df4:	add	w2, w0, #0x1
   25df8:	ldr	x1, [sp, #64]
   25dfc:	str	w2, [x1]
   25e00:	sxtw	x0, w0
   25e04:	lsl	x0, x0, #3
   25e08:	ldr	x1, [sp, #96]
   25e0c:	add	x0, x1, x0
   25e10:	ldr	x1, [x0]
   25e14:	ldr	x0, [sp, #64]
   25e18:	str	x1, [x0, #16]
   25e1c:	mov	w0, #0x1                   	// #1
   25e20:	b	2638c <_getopt_internal_r@@Base+0x980>
   25e24:	ldr	x0, [sp, #80]
   25e28:	cmp	x0, #0x0
   25e2c:	b.eq	25f98 <_getopt_internal_r@@Base+0x58c>  // b.none
   25e30:	ldr	x0, [sp, #64]
   25e34:	ldr	w0, [x0]
   25e38:	sxtw	x0, w0
   25e3c:	lsl	x0, x0, #3
   25e40:	ldr	x1, [sp, #96]
   25e44:	add	x0, x1, x0
   25e48:	ldr	x0, [x0]
   25e4c:	add	x0, x0, #0x1
   25e50:	ldrb	w0, [x0]
   25e54:	cmp	w0, #0x2d
   25e58:	b.ne	25eb8 <_getopt_internal_r@@Base+0x4ac>  // b.any
   25e5c:	ldr	x0, [sp, #64]
   25e60:	ldr	w0, [x0]
   25e64:	sxtw	x0, w0
   25e68:	lsl	x0, x0, #3
   25e6c:	ldr	x1, [sp, #96]
   25e70:	add	x0, x1, x0
   25e74:	ldr	x0, [x0]
   25e78:	add	x1, x0, #0x2
   25e7c:	ldr	x0, [sp, #64]
   25e80:	str	x1, [x0, #32]
   25e84:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   25e88:	add	x0, x0, #0x38
   25e8c:	str	x0, [sp]
   25e90:	ldr	w7, [sp, #140]
   25e94:	ldr	x6, [sp, #64]
   25e98:	ldr	w5, [sp, #104]
   25e9c:	ldr	x4, [sp, #72]
   25ea0:	ldr	x3, [sp, #80]
   25ea4:	ldr	x2, [sp, #88]
   25ea8:	ldr	x1, [sp, #96]
   25eac:	ldr	w0, [sp, #108]
   25eb0:	bl	25194 <rpl_fcntl@@Base+0x71c>
   25eb4:	b	2638c <_getopt_internal_r@@Base+0x980>
   25eb8:	ldr	w0, [sp, #104]
   25ebc:	cmp	w0, #0x0
   25ec0:	b.eq	25f98 <_getopt_internal_r@@Base+0x58c>  // b.none
   25ec4:	ldr	x0, [sp, #64]
   25ec8:	ldr	w0, [x0]
   25ecc:	sxtw	x0, w0
   25ed0:	lsl	x0, x0, #3
   25ed4:	ldr	x1, [sp, #96]
   25ed8:	add	x0, x1, x0
   25edc:	ldr	x0, [x0]
   25ee0:	add	x0, x0, #0x2
   25ee4:	ldrb	w0, [x0]
   25ee8:	cmp	w0, #0x0
   25eec:	b.ne	25f28 <_getopt_internal_r@@Base+0x51c>  // b.any
   25ef0:	ldr	x0, [sp, #64]
   25ef4:	ldr	w0, [x0]
   25ef8:	sxtw	x0, w0
   25efc:	lsl	x0, x0, #3
   25f00:	ldr	x1, [sp, #96]
   25f04:	add	x0, x1, x0
   25f08:	ldr	x0, [x0]
   25f0c:	add	x0, x0, #0x1
   25f10:	ldrb	w0, [x0]
   25f14:	mov	w1, w0
   25f18:	ldr	x0, [sp, #88]
   25f1c:	bl	b270 <strchr@plt>
   25f20:	cmp	x0, #0x0
   25f24:	b.ne	25f98 <_getopt_internal_r@@Base+0x58c>  // b.any
   25f28:	ldr	x0, [sp, #64]
   25f2c:	ldr	w0, [x0]
   25f30:	sxtw	x0, w0
   25f34:	lsl	x0, x0, #3
   25f38:	ldr	x1, [sp, #96]
   25f3c:	add	x0, x1, x0
   25f40:	ldr	x0, [x0]
   25f44:	add	x1, x0, #0x1
   25f48:	ldr	x0, [sp, #64]
   25f4c:	str	x1, [x0, #32]
   25f50:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   25f54:	add	x0, x0, #0x40
   25f58:	str	x0, [sp]
   25f5c:	ldr	w7, [sp, #140]
   25f60:	ldr	x6, [sp, #64]
   25f64:	ldr	w5, [sp, #104]
   25f68:	ldr	x4, [sp, #72]
   25f6c:	ldr	x3, [sp, #80]
   25f70:	ldr	x2, [sp, #88]
   25f74:	ldr	x1, [sp, #96]
   25f78:	ldr	w0, [sp, #108]
   25f7c:	bl	25194 <rpl_fcntl@@Base+0x71c>
   25f80:	str	w0, [sp, #132]
   25f84:	ldr	w0, [sp, #132]
   25f88:	cmn	w0, #0x1
   25f8c:	b.eq	25f98 <_getopt_internal_r@@Base+0x58c>  // b.none
   25f90:	ldr	w0, [sp, #132]
   25f94:	b	2638c <_getopt_internal_r@@Base+0x980>
   25f98:	ldr	x0, [sp, #64]
   25f9c:	ldr	w0, [x0]
   25fa0:	sxtw	x0, w0
   25fa4:	lsl	x0, x0, #3
   25fa8:	ldr	x1, [sp, #96]
   25fac:	add	x0, x1, x0
   25fb0:	ldr	x0, [x0]
   25fb4:	add	x1, x0, #0x1
   25fb8:	ldr	x0, [sp, #64]
   25fbc:	str	x1, [x0, #32]
   25fc0:	ldr	x0, [sp, #64]
   25fc4:	ldr	x0, [x0, #32]
   25fc8:	add	x2, x0, #0x1
   25fcc:	ldr	x1, [sp, #64]
   25fd0:	str	x2, [x1, #32]
   25fd4:	ldrb	w0, [x0]
   25fd8:	strb	w0, [sp, #139]
   25fdc:	ldrb	w0, [sp, #139]
   25fe0:	mov	w1, w0
   25fe4:	ldr	x0, [sp, #88]
   25fe8:	bl	b270 <strchr@plt>
   25fec:	str	x0, [sp, #120]
   25ff0:	ldr	x0, [sp, #64]
   25ff4:	ldr	x0, [x0, #32]
   25ff8:	ldrb	w0, [x0]
   25ffc:	cmp	w0, #0x0
   26000:	b.ne	26018 <_getopt_internal_r@@Base+0x60c>  // b.any
   26004:	ldr	x0, [sp, #64]
   26008:	ldr	w0, [x0]
   2600c:	add	w1, w0, #0x1
   26010:	ldr	x0, [sp, #64]
   26014:	str	w1, [x0]
   26018:	ldr	x0, [sp, #120]
   2601c:	cmp	x0, #0x0
   26020:	b.eq	2603c <_getopt_internal_r@@Base+0x630>  // b.none
   26024:	ldrb	w0, [sp, #139]
   26028:	cmp	w0, #0x3a
   2602c:	b.eq	2603c <_getopt_internal_r@@Base+0x630>  // b.none
   26030:	ldrb	w0, [sp, #139]
   26034:	cmp	w0, #0x3b
   26038:	b.ne	260a0 <_getopt_internal_r@@Base+0x694>  // b.any
   2603c:	ldr	w0, [sp, #140]
   26040:	cmp	w0, #0x0
   26044:	b.eq	2608c <_getopt_internal_r@@Base+0x680>  // b.none
   26048:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2604c:	ldr	x0, [x0, #3816]
   26050:	ldr	x19, [x0]
   26054:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   26058:	add	x1, x0, #0x48
   2605c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   26060:	add	x0, x0, #0xf68
   26064:	bl	b120 <dgettext@plt>
   26068:	mov	x4, x0
   2606c:	ldr	x0, [sp, #96]
   26070:	ldr	x0, [x0]
   26074:	ldrb	w1, [sp, #139]
   26078:	mov	w3, w1
   2607c:	mov	x2, x0
   26080:	mov	x1, x4
   26084:	mov	x0, x19
   26088:	bl	b750 <fprintf@plt>
   2608c:	ldrb	w1, [sp, #139]
   26090:	ldr	x0, [sp, #64]
   26094:	str	w1, [x0, #8]
   26098:	mov	w0, #0x3f                  	// #63
   2609c:	b	2638c <_getopt_internal_r@@Base+0x980>
   260a0:	ldr	x0, [sp, #120]
   260a4:	ldrb	w0, [x0]
   260a8:	cmp	w0, #0x57
   260ac:	b.ne	26204 <_getopt_internal_r@@Base+0x7f8>  // b.any
   260b0:	ldr	x0, [sp, #120]
   260b4:	add	x0, x0, #0x1
   260b8:	ldrb	w0, [x0]
   260bc:	cmp	w0, #0x3b
   260c0:	b.ne	26204 <_getopt_internal_r@@Base+0x7f8>  // b.any
   260c4:	ldr	x0, [sp, #80]
   260c8:	cmp	x0, #0x0
   260cc:	b.eq	26204 <_getopt_internal_r@@Base+0x7f8>  // b.none
   260d0:	ldr	x0, [sp, #64]
   260d4:	ldr	x0, [x0, #32]
   260d8:	ldrb	w0, [x0]
   260dc:	cmp	w0, #0x0
   260e0:	b.eq	260f8 <_getopt_internal_r@@Base+0x6ec>  // b.none
   260e4:	ldr	x0, [sp, #64]
   260e8:	ldr	x1, [x0, #32]
   260ec:	ldr	x0, [sp, #64]
   260f0:	str	x1, [x0, #16]
   260f4:	b	261b8 <_getopt_internal_r@@Base+0x7ac>
   260f8:	ldr	x0, [sp, #64]
   260fc:	ldr	w0, [x0]
   26100:	ldr	w1, [sp, #108]
   26104:	cmp	w1, w0
   26108:	b.ne	26194 <_getopt_internal_r@@Base+0x788>  // b.any
   2610c:	ldr	w0, [sp, #140]
   26110:	cmp	w0, #0x0
   26114:	b.eq	2615c <_getopt_internal_r@@Base+0x750>  // b.none
   26118:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2611c:	ldr	x0, [x0, #3816]
   26120:	ldr	x19, [x0]
   26124:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   26128:	add	x1, x0, #0x68
   2612c:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   26130:	add	x0, x0, #0xf68
   26134:	bl	b120 <dgettext@plt>
   26138:	mov	x4, x0
   2613c:	ldr	x0, [sp, #96]
   26140:	ldr	x0, [x0]
   26144:	ldrb	w1, [sp, #139]
   26148:	mov	w3, w1
   2614c:	mov	x2, x0
   26150:	mov	x1, x4
   26154:	mov	x0, x19
   26158:	bl	b750 <fprintf@plt>
   2615c:	ldrb	w1, [sp, #139]
   26160:	ldr	x0, [sp, #64]
   26164:	str	w1, [x0, #8]
   26168:	ldr	x0, [sp, #88]
   2616c:	ldrb	w0, [x0]
   26170:	cmp	w0, #0x3a
   26174:	b.ne	26184 <_getopt_internal_r@@Base+0x778>  // b.any
   26178:	mov	w0, #0x3a                  	// #58
   2617c:	strb	w0, [sp, #139]
   26180:	b	2618c <_getopt_internal_r@@Base+0x780>
   26184:	mov	w0, #0x3f                  	// #63
   26188:	strb	w0, [sp, #139]
   2618c:	ldrb	w0, [sp, #139]
   26190:	b	2638c <_getopt_internal_r@@Base+0x980>
   26194:	ldr	x0, [sp, #64]
   26198:	ldr	w0, [x0]
   2619c:	sxtw	x0, w0
   261a0:	lsl	x0, x0, #3
   261a4:	ldr	x1, [sp, #96]
   261a8:	add	x0, x1, x0
   261ac:	ldr	x1, [x0]
   261b0:	ldr	x0, [sp, #64]
   261b4:	str	x1, [x0, #16]
   261b8:	ldr	x0, [sp, #64]
   261bc:	ldr	x1, [x0, #16]
   261c0:	ldr	x0, [sp, #64]
   261c4:	str	x1, [x0, #32]
   261c8:	ldr	x0, [sp, #64]
   261cc:	str	xzr, [x0, #16]
   261d0:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   261d4:	add	x0, x0, #0x98
   261d8:	str	x0, [sp]
   261dc:	ldr	w7, [sp, #140]
   261e0:	ldr	x6, [sp, #64]
   261e4:	mov	w5, #0x0                   	// #0
   261e8:	ldr	x4, [sp, #72]
   261ec:	ldr	x3, [sp, #80]
   261f0:	ldr	x2, [sp, #88]
   261f4:	ldr	x1, [sp, #96]
   261f8:	ldr	w0, [sp, #108]
   261fc:	bl	25194 <rpl_fcntl@@Base+0x71c>
   26200:	b	2638c <_getopt_internal_r@@Base+0x980>
   26204:	ldr	x0, [sp, #120]
   26208:	add	x0, x0, #0x1
   2620c:	ldrb	w0, [x0]
   26210:	cmp	w0, #0x3a
   26214:	b.ne	26388 <_getopt_internal_r@@Base+0x97c>  // b.any
   26218:	ldr	x0, [sp, #120]
   2621c:	add	x0, x0, #0x2
   26220:	ldrb	w0, [x0]
   26224:	cmp	w0, #0x3a
   26228:	b.ne	2627c <_getopt_internal_r@@Base+0x870>  // b.any
   2622c:	ldr	x0, [sp, #64]
   26230:	ldr	x0, [x0, #32]
   26234:	ldrb	w0, [x0]
   26238:	cmp	w0, #0x0
   2623c:	b.eq	26268 <_getopt_internal_r@@Base+0x85c>  // b.none
   26240:	ldr	x0, [sp, #64]
   26244:	ldr	x1, [x0, #32]
   26248:	ldr	x0, [sp, #64]
   2624c:	str	x1, [x0, #16]
   26250:	ldr	x0, [sp, #64]
   26254:	ldr	w0, [x0]
   26258:	add	w1, w0, #0x1
   2625c:	ldr	x0, [sp, #64]
   26260:	str	w1, [x0]
   26264:	b	26270 <_getopt_internal_r@@Base+0x864>
   26268:	ldr	x0, [sp, #64]
   2626c:	str	xzr, [x0, #16]
   26270:	ldr	x0, [sp, #64]
   26274:	str	xzr, [x0, #32]
   26278:	b	26388 <_getopt_internal_r@@Base+0x97c>
   2627c:	ldr	x0, [sp, #64]
   26280:	ldr	x0, [x0, #32]
   26284:	ldrb	w0, [x0]
   26288:	cmp	w0, #0x0
   2628c:	b.eq	262b8 <_getopt_internal_r@@Base+0x8ac>  // b.none
   26290:	ldr	x0, [sp, #64]
   26294:	ldr	x1, [x0, #32]
   26298:	ldr	x0, [sp, #64]
   2629c:	str	x1, [x0, #16]
   262a0:	ldr	x0, [sp, #64]
   262a4:	ldr	w0, [x0]
   262a8:	add	w1, w0, #0x1
   262ac:	ldr	x0, [sp, #64]
   262b0:	str	w1, [x0]
   262b4:	b	26380 <_getopt_internal_r@@Base+0x974>
   262b8:	ldr	x0, [sp, #64]
   262bc:	ldr	w0, [x0]
   262c0:	ldr	w1, [sp, #108]
   262c4:	cmp	w1, w0
   262c8:	b.ne	26350 <_getopt_internal_r@@Base+0x944>  // b.any
   262cc:	ldr	w0, [sp, #140]
   262d0:	cmp	w0, #0x0
   262d4:	b.eq	2631c <_getopt_internal_r@@Base+0x910>  // b.none
   262d8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   262dc:	ldr	x0, [x0, #3816]
   262e0:	ldr	x19, [x0]
   262e4:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   262e8:	add	x1, x0, #0x68
   262ec:	adrp	x0, 44000 <vasnprintf@@Base+0x3e04>
   262f0:	add	x0, x0, #0xf68
   262f4:	bl	b120 <dgettext@plt>
   262f8:	mov	x4, x0
   262fc:	ldr	x0, [sp, #96]
   26300:	ldr	x0, [x0]
   26304:	ldrb	w1, [sp, #139]
   26308:	mov	w3, w1
   2630c:	mov	x2, x0
   26310:	mov	x1, x4
   26314:	mov	x0, x19
   26318:	bl	b750 <fprintf@plt>
   2631c:	ldrb	w1, [sp, #139]
   26320:	ldr	x0, [sp, #64]
   26324:	str	w1, [x0, #8]
   26328:	ldr	x0, [sp, #88]
   2632c:	ldrb	w0, [x0]
   26330:	cmp	w0, #0x3a
   26334:	b.ne	26344 <_getopt_internal_r@@Base+0x938>  // b.any
   26338:	mov	w0, #0x3a                  	// #58
   2633c:	strb	w0, [sp, #139]
   26340:	b	26380 <_getopt_internal_r@@Base+0x974>
   26344:	mov	w0, #0x3f                  	// #63
   26348:	strb	w0, [sp, #139]
   2634c:	b	26380 <_getopt_internal_r@@Base+0x974>
   26350:	ldr	x0, [sp, #64]
   26354:	ldr	w0, [x0]
   26358:	add	w2, w0, #0x1
   2635c:	ldr	x1, [sp, #64]
   26360:	str	w2, [x1]
   26364:	sxtw	x0, w0
   26368:	lsl	x0, x0, #3
   2636c:	ldr	x1, [sp, #96]
   26370:	add	x0, x1, x0
   26374:	ldr	x1, [x0]
   26378:	ldr	x0, [sp, #64]
   2637c:	str	x1, [x0, #16]
   26380:	ldr	x0, [sp, #64]
   26384:	str	xzr, [x0, #32]
   26388:	ldrb	w0, [sp, #139]
   2638c:	ldr	x19, [sp, #32]
   26390:	ldp	x29, x30, [sp, #16]
   26394:	add	sp, sp, #0x90
   26398:	ret

000000000002639c <rpl_getopt_internal@@Base>:
   2639c:	stp	x29, x30, [sp, #-80]!
   263a0:	mov	x29, sp
   263a4:	str	w0, [sp, #60]
   263a8:	str	x1, [sp, #48]
   263ac:	str	x2, [sp, #40]
   263b0:	str	x3, [sp, #32]
   263b4:	str	x4, [sp, #24]
   263b8:	str	w5, [sp, #56]
   263bc:	str	w6, [sp, #20]
   263c0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   263c4:	ldr	x0, [x0, #4032]
   263c8:	ldr	w1, [x0]
   263cc:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   263d0:	add	x0, x0, #0x5e0
   263d4:	str	w1, [x0]
   263d8:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   263dc:	ldr	x0, [x0, #3856]
   263e0:	ldr	w1, [x0]
   263e4:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   263e8:	add	x0, x0, #0x5e0
   263ec:	str	w1, [x0, #4]
   263f0:	ldr	w7, [sp, #20]
   263f4:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   263f8:	add	x6, x0, #0x5e0
   263fc:	ldr	w5, [sp, #56]
   26400:	ldr	x4, [sp, #24]
   26404:	ldr	x3, [sp, #32]
   26408:	ldr	x2, [sp, #40]
   2640c:	ldr	x1, [sp, #48]
   26410:	ldr	w0, [sp, #60]
   26414:	bl	b600 <_getopt_internal_r@plt>
   26418:	str	w0, [sp, #76]
   2641c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   26420:	add	x0, x0, #0x5e0
   26424:	ldr	w1, [x0]
   26428:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2642c:	ldr	x0, [x0, #4032]
   26430:	str	w1, [x0]
   26434:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   26438:	add	x0, x0, #0x5e0
   2643c:	ldr	x1, [x0, #16]
   26440:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   26444:	ldr	x0, [x0, #4016]
   26448:	str	x1, [x0]
   2644c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   26450:	add	x0, x0, #0x5e0
   26454:	ldr	w1, [x0, #8]
   26458:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2645c:	ldr	x0, [x0, #3880]
   26460:	str	w1, [x0]
   26464:	ldr	w0, [sp, #76]
   26468:	ldp	x29, x30, [sp], #80
   2646c:	ret

0000000000026470 <rpl_getopt@@Base>:
   26470:	stp	x29, x30, [sp, #-48]!
   26474:	mov	x29, sp
   26478:	str	w0, [sp, #44]
   2647c:	str	x1, [sp, #32]
   26480:	str	x2, [sp, #24]
   26484:	mov	w6, #0x1                   	// #1
   26488:	mov	w5, #0x0                   	// #0
   2648c:	mov	x4, #0x0                   	// #0
   26490:	mov	x3, #0x0                   	// #0
   26494:	ldr	x2, [sp, #24]
   26498:	ldr	x1, [sp, #32]
   2649c:	ldr	w0, [sp, #44]
   264a0:	bl	b210 <rpl_getopt_internal@plt>
   264a4:	ldp	x29, x30, [sp], #48
   264a8:	ret

00000000000264ac <rpl_getopt_long@@Base>:
   264ac:	stp	x29, x30, [sp, #-64]!
   264b0:	mov	x29, sp
   264b4:	str	w0, [sp, #60]
   264b8:	str	x1, [sp, #48]
   264bc:	str	x2, [sp, #40]
   264c0:	str	x3, [sp, #32]
   264c4:	str	x4, [sp, #24]
   264c8:	mov	w6, #0x0                   	// #0
   264cc:	mov	w5, #0x0                   	// #0
   264d0:	ldr	x4, [sp, #24]
   264d4:	ldr	x3, [sp, #32]
   264d8:	ldr	x2, [sp, #40]
   264dc:	ldr	x1, [sp, #48]
   264e0:	ldr	w0, [sp, #60]
   264e4:	bl	b210 <rpl_getopt_internal@plt>
   264e8:	ldp	x29, x30, [sp], #64
   264ec:	ret

00000000000264f0 <_getopt_long_r@@Base>:
   264f0:	stp	x29, x30, [sp, #-64]!
   264f4:	mov	x29, sp
   264f8:	str	w0, [sp, #60]
   264fc:	str	x1, [sp, #48]
   26500:	str	x2, [sp, #40]
   26504:	str	x3, [sp, #32]
   26508:	str	x4, [sp, #24]
   2650c:	str	x5, [sp, #16]
   26510:	mov	w7, #0x0                   	// #0
   26514:	ldr	x6, [sp, #16]
   26518:	mov	w5, #0x0                   	// #0
   2651c:	ldr	x4, [sp, #24]
   26520:	ldr	x3, [sp, #32]
   26524:	ldr	x2, [sp, #40]
   26528:	ldr	x1, [sp, #48]
   2652c:	ldr	w0, [sp, #60]
   26530:	bl	b600 <_getopt_internal_r@plt>
   26534:	ldp	x29, x30, [sp], #64
   26538:	ret

000000000002653c <rpl_getopt_long_only@@Base>:
   2653c:	stp	x29, x30, [sp, #-64]!
   26540:	mov	x29, sp
   26544:	str	w0, [sp, #60]
   26548:	str	x1, [sp, #48]
   2654c:	str	x2, [sp, #40]
   26550:	str	x3, [sp, #32]
   26554:	str	x4, [sp, #24]
   26558:	mov	w6, #0x0                   	// #0
   2655c:	mov	w5, #0x1                   	// #1
   26560:	ldr	x4, [sp, #24]
   26564:	ldr	x3, [sp, #32]
   26568:	ldr	x2, [sp, #40]
   2656c:	ldr	x1, [sp, #48]
   26570:	ldr	w0, [sp, #60]
   26574:	bl	b210 <rpl_getopt_internal@plt>
   26578:	ldp	x29, x30, [sp], #64
   2657c:	ret

0000000000026580 <_getopt_long_only_r@@Base>:
   26580:	stp	x29, x30, [sp, #-64]!
   26584:	mov	x29, sp
   26588:	str	w0, [sp, #60]
   2658c:	str	x1, [sp, #48]
   26590:	str	x2, [sp, #40]
   26594:	str	x3, [sp, #32]
   26598:	str	x4, [sp, #24]
   2659c:	str	x5, [sp, #16]
   265a0:	mov	w7, #0x0                   	// #0
   265a4:	ldr	x6, [sp, #16]
   265a8:	mov	w5, #0x1                   	// #1
   265ac:	ldr	x4, [sp, #24]
   265b0:	ldr	x3, [sp, #32]
   265b4:	ldr	x2, [sp, #40]
   265b8:	ldr	x1, [sp, #48]
   265bc:	ldr	w0, [sp, #60]
   265c0:	bl	b600 <_getopt_internal_r@plt>
   265c4:	ldp	x29, x30, [sp], #64
   265c8:	ret

00000000000265cc <rpl_ioctl@@Base>:
   265cc:	stp	x29, x30, [sp, #-256]!
   265d0:	mov	x29, sp
   265d4:	str	w0, [sp, #28]
   265d8:	str	w1, [sp, #24]
   265dc:	str	x2, [sp, #208]
   265e0:	str	x3, [sp, #216]
   265e4:	str	x4, [sp, #224]
   265e8:	str	x5, [sp, #232]
   265ec:	str	x6, [sp, #240]
   265f0:	str	x7, [sp, #248]
   265f4:	str	q0, [sp, #80]
   265f8:	str	q1, [sp, #96]
   265fc:	str	q2, [sp, #112]
   26600:	str	q3, [sp, #128]
   26604:	str	q4, [sp, #144]
   26608:	str	q5, [sp, #160]
   2660c:	str	q6, [sp, #176]
   26610:	str	q7, [sp, #192]
   26614:	add	x0, sp, #0x100
   26618:	str	x0, [sp, #40]
   2661c:	add	x0, sp, #0x100
   26620:	str	x0, [sp, #48]
   26624:	add	x0, sp, #0xd0
   26628:	str	x0, [sp, #56]
   2662c:	mov	w0, #0xffffffd0            	// #-48
   26630:	str	w0, [sp, #64]
   26634:	mov	w0, #0xffffff80            	// #-128
   26638:	str	w0, [sp, #68]
   2663c:	ldr	w1, [sp, #64]
   26640:	ldr	x0, [sp, #40]
   26644:	cmp	w1, #0x0
   26648:	b.lt	2665c <rpl_ioctl@@Base+0x90>  // b.tstop
   2664c:	add	x1, x0, #0xf
   26650:	and	x1, x1, #0xfffffffffffffff8
   26654:	str	x1, [sp, #40]
   26658:	b	2668c <rpl_ioctl@@Base+0xc0>
   2665c:	add	w2, w1, #0x8
   26660:	str	w2, [sp, #64]
   26664:	ldr	w2, [sp, #64]
   26668:	cmp	w2, #0x0
   2666c:	b.le	26680 <rpl_ioctl@@Base+0xb4>
   26670:	add	x1, x0, #0xf
   26674:	and	x1, x1, #0xfffffffffffffff8
   26678:	str	x1, [sp, #40]
   2667c:	b	2668c <rpl_ioctl@@Base+0xc0>
   26680:	ldr	x2, [sp, #48]
   26684:	sxtw	x0, w1
   26688:	add	x0, x2, x0
   2668c:	ldr	x0, [x0]
   26690:	str	x0, [sp, #72]
   26694:	ldr	w0, [sp, #24]
   26698:	mov	w0, w0
   2669c:	ldr	x2, [sp, #72]
   266a0:	mov	x1, x0
   266a4:	ldr	w0, [sp, #28]
   266a8:	bl	b780 <ioctl@plt>
   266ac:	ldp	x29, x30, [sp], #256
   266b0:	ret

00000000000266b4 <rpl_mbrtowc@@Base>:
   266b4:	stp	x29, x30, [sp, #-64]!
   266b8:	mov	x29, sp
   266bc:	str	x0, [sp, #40]
   266c0:	str	x1, [sp, #32]
   266c4:	str	x2, [sp, #24]
   266c8:	str	x3, [sp, #16]
   266cc:	ldr	x0, [sp, #40]
   266d0:	cmp	x0, #0x0
   266d4:	b.ne	266e0 <rpl_mbrtowc@@Base+0x2c>  // b.any
   266d8:	add	x0, sp, #0x30
   266dc:	str	x0, [sp, #40]
   266e0:	ldr	x3, [sp, #16]
   266e4:	ldr	x2, [sp, #24]
   266e8:	ldr	x1, [sp, #32]
   266ec:	ldr	x0, [sp, #40]
   266f0:	bl	a780 <mbrtowc@plt>
   266f4:	str	x0, [sp, #56]
   266f8:	ldr	x0, [sp, #56]
   266fc:	cmn	x0, #0x3
   26700:	b.ls	2674c <rpl_mbrtowc@@Base+0x98>  // b.plast
   26704:	ldr	x0, [sp, #24]
   26708:	cmp	x0, #0x0
   2670c:	b.eq	2674c <rpl_mbrtowc@@Base+0x98>  // b.none
   26710:	mov	w0, #0x0                   	// #0
   26714:	bl	adb0 <hard_locale@plt>
   26718:	and	w0, w0, #0xff
   2671c:	eor	w0, w0, #0x1
   26720:	and	w0, w0, #0xff
   26724:	cmp	w0, #0x0
   26728:	b.eq	2674c <rpl_mbrtowc@@Base+0x98>  // b.none
   2672c:	ldr	x0, [sp, #32]
   26730:	ldrb	w0, [x0]
   26734:	strb	w0, [sp, #55]
   26738:	ldrb	w1, [sp, #55]
   2673c:	ldr	x0, [sp, #40]
   26740:	str	w1, [x0]
   26744:	mov	x0, #0x1                   	// #1
   26748:	b	26750 <rpl_mbrtowc@@Base+0x9c>
   2674c:	ldr	x0, [sp, #56]
   26750:	ldp	x29, x30, [sp], #64
   26754:	ret

0000000000026758 <rpl_nanosleep@@Base>:
   26758:	stp	x29, x30, [sp, #-80]!
   2675c:	mov	x29, sp
   26760:	str	x0, [sp, #24]
   26764:	str	x1, [sp, #16]
   26768:	ldr	x0, [sp, #24]
   2676c:	ldr	x0, [x0, #8]
   26770:	cmp	x0, #0x0
   26774:	b.lt	26790 <rpl_nanosleep@@Base+0x38>  // b.tstop
   26778:	ldr	x0, [sp, #24]
   2677c:	ldr	x1, [x0, #8]
   26780:	mov	x0, #0xc9ff                	// #51711
   26784:	movk	x0, #0x3b9a, lsl #16
   26788:	cmp	x1, x0
   2678c:	b.le	267a8 <rpl_nanosleep@@Base+0x50>
   26790:	bl	b640 <__errno_location@plt>
   26794:	mov	x1, x0
   26798:	mov	w0, #0x16                  	// #22
   2679c:	str	w0, [x1]
   267a0:	mov	w0, #0xffffffff            	// #-1
   267a4:	b	26858 <rpl_nanosleep@@Base+0x100>
   267a8:	mov	x0, #0xa400                	// #41984
   267ac:	movk	x0, #0x1f, lsl #16
   267b0:	str	x0, [sp, #64]
   267b4:	ldr	x0, [sp, #24]
   267b8:	ldr	x0, [x0]
   267bc:	str	x0, [sp, #72]
   267c0:	ldr	x0, [sp, #24]
   267c4:	ldr	x0, [x0, #8]
   267c8:	str	x0, [sp, #48]
   267cc:	b	26834 <rpl_nanosleep@@Base+0xdc>
   267d0:	ldr	x0, [sp, #64]
   267d4:	str	x0, [sp, #40]
   267d8:	add	x0, sp, #0x28
   267dc:	ldr	x1, [sp, #16]
   267e0:	bl	b1f0 <nanosleep@plt>
   267e4:	str	w0, [sp, #60]
   267e8:	ldr	x1, [sp, #72]
   267ec:	ldr	x0, [sp, #64]
   267f0:	sub	x0, x1, x0
   267f4:	str	x0, [sp, #72]
   267f8:	ldr	w0, [sp, #60]
   267fc:	cmp	w0, #0x0
   26800:	b.eq	26830 <rpl_nanosleep@@Base+0xd8>  // b.none
   26804:	ldr	x0, [sp, #16]
   26808:	cmp	x0, #0x0
   2680c:	b.eq	26828 <rpl_nanosleep@@Base+0xd0>  // b.none
   26810:	ldr	x0, [sp, #16]
   26814:	ldr	x1, [x0]
   26818:	ldr	x0, [sp, #72]
   2681c:	add	x1, x1, x0
   26820:	ldr	x0, [sp, #16]
   26824:	str	x1, [x0]
   26828:	ldr	w0, [sp, #60]
   2682c:	b	26858 <rpl_nanosleep@@Base+0x100>
   26830:	str	xzr, [sp, #48]
   26834:	ldr	x1, [sp, #64]
   26838:	ldr	x0, [sp, #72]
   2683c:	cmp	x1, x0
   26840:	b.lt	267d0 <rpl_nanosleep@@Base+0x78>  // b.tstop
   26844:	ldr	x0, [sp, #72]
   26848:	str	x0, [sp, #40]
   2684c:	add	x0, sp, #0x28
   26850:	ldr	x1, [sp, #16]
   26854:	bl	b1f0 <nanosleep@plt>
   26858:	ldp	x29, x30, [sp], #80
   2685c:	ret

0000000000026860 <openat_proc_name@@Base>:
   26860:	stp	x29, x30, [sp, #-112]!
   26864:	mov	x29, sp
   26868:	str	x0, [sp, #40]
   2686c:	str	w1, [sp, #36]
   26870:	str	x2, [sp, #24]
   26874:	ldr	x0, [sp, #40]
   26878:	str	x0, [sp, #104]
   2687c:	ldr	x0, [sp, #24]
   26880:	ldrb	w0, [x0]
   26884:	cmp	w0, #0x0
   26888:	b.ne	2689c <openat_proc_name@@Base+0x3c>  // b.any
   2688c:	ldr	x0, [sp, #40]
   26890:	strb	wzr, [x0]
   26894:	ldr	x0, [sp, #40]
   26898:	b	269b8 <openat_proc_name@@Base+0x158>
   2689c:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   268a0:	add	x0, x0, #0x618
   268a4:	ldr	w0, [x0]
   268a8:	cmp	w0, #0x0
   268ac:	b.ne	26930 <openat_proc_name@@Base+0xd0>  // b.any
   268b0:	mov	w1, #0x4900                	// #18688
   268b4:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   268b8:	add	x0, x0, #0xa0
   268bc:	bl	abd0 <open@plt>
   268c0:	str	w0, [sp, #100]
   268c4:	ldr	w0, [sp, #100]
   268c8:	cmp	w0, #0x0
   268cc:	b.ge	268e4 <openat_proc_name@@Base+0x84>  // b.tcont
   268d0:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   268d4:	add	x0, x0, #0x618
   268d8:	mov	w1, #0xffffffff            	// #-1
   268dc:	str	w1, [x0]
   268e0:	b	26930 <openat_proc_name@@Base+0xd0>
   268e4:	add	x3, sp, #0x30
   268e8:	ldr	w2, [sp, #100]
   268ec:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   268f0:	add	x1, x0, #0xb0
   268f4:	mov	x0, x3
   268f8:	bl	a990 <sprintf@plt>
   268fc:	add	x0, sp, #0x30
   26900:	mov	w1, #0x0                   	// #0
   26904:	bl	afc0 <access@plt>
   26908:	cmp	w0, #0x0
   2690c:	b.eq	26918 <openat_proc_name@@Base+0xb8>  // b.none
   26910:	mov	w0, #0xffffffff            	// #-1
   26914:	b	2691c <openat_proc_name@@Base+0xbc>
   26918:	mov	w0, #0x1                   	// #1
   2691c:	adrp	x1, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   26920:	add	x1, x1, #0x618
   26924:	str	w0, [x1]
   26928:	ldr	w0, [sp, #100]
   2692c:	bl	ae80 <close@plt>
   26930:	adrp	x0, 5e000 <gl_rbtree_list_implementation@@Base+0x1438>
   26934:	add	x0, x0, #0x618
   26938:	ldr	w0, [x0]
   2693c:	cmp	w0, #0x0
   26940:	b.ge	2694c <openat_proc_name@@Base+0xec>  // b.tcont
   26944:	mov	x0, #0x0                   	// #0
   26948:	b	269b8 <openat_proc_name@@Base+0x158>
   2694c:	ldr	x0, [sp, #24]
   26950:	bl	a820 <strlen@plt>
   26954:	add	x0, x0, #0x1b
   26958:	str	x0, [sp, #88]
   2695c:	ldr	x0, [sp, #88]
   26960:	cmp	x0, #0xfc0
   26964:	b.ls	26988 <openat_proc_name@@Base+0x128>  // b.plast
   26968:	ldr	x0, [sp, #88]
   2696c:	bl	ab40 <malloc@plt>
   26970:	str	x0, [sp, #104]
   26974:	ldr	x0, [sp, #104]
   26978:	cmp	x0, #0x0
   2697c:	b.ne	26988 <openat_proc_name@@Base+0x128>  // b.any
   26980:	mov	x0, #0x0                   	// #0
   26984:	b	269b8 <openat_proc_name@@Base+0x158>
   26988:	ldr	w2, [sp, #36]
   2698c:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   26990:	add	x1, x0, #0xc8
   26994:	ldr	x0, [sp, #104]
   26998:	bl	a990 <sprintf@plt>
   2699c:	str	w0, [sp, #84]
   269a0:	ldrsw	x0, [sp, #84]
   269a4:	ldr	x1, [sp, #104]
   269a8:	add	x0, x1, x0
   269ac:	ldr	x1, [sp, #24]
   269b0:	bl	b360 <strcpy@plt>
   269b4:	ldr	x0, [sp, #104]
   269b8:	ldp	x29, x30, [sp], #112
   269bc:	ret

00000000000269c0 <printf_fetchargs@@Base>:
   269c0:	str	x19, [sp, #-48]!
   269c4:	mov	x19, x0
   269c8:	str	x1, [sp, #24]
   269cc:	str	xzr, [sp, #40]
   269d0:	ldr	x0, [sp, #24]
   269d4:	ldr	x0, [x0, #8]
   269d8:	str	x0, [sp, #32]
   269dc:	b	272d8 <printf_fetchargs@@Base+0x918>
   269e0:	ldr	x0, [sp, #32]
   269e4:	ldr	w0, [x0]
   269e8:	sub	w0, w0, #0x1
   269ec:	cmp	w0, #0x15
   269f0:	b.hi	272ac <printf_fetchargs@@Base+0x8ec>  // b.pmore
   269f4:	adrp	x1, 45000 <vasnprintf@@Base+0x4e04>
   269f8:	add	x1, x1, #0xe8
   269fc:	ldr	w0, [x1, w0, uxtw #2]
   26a00:	adr	x1, 26a0c <printf_fetchargs@@Base+0x4c>
   26a04:	add	x0, x1, w0, sxtw #2
   26a08:	br	x0
   26a0c:	ldr	w1, [x19, #24]
   26a10:	ldr	x0, [x19]
   26a14:	cmp	w1, #0x0
   26a18:	b.lt	26a2c <printf_fetchargs@@Base+0x6c>  // b.tstop
   26a1c:	add	x1, x0, #0xb
   26a20:	and	x1, x1, #0xfffffffffffffff8
   26a24:	str	x1, [x19]
   26a28:	b	26a5c <printf_fetchargs@@Base+0x9c>
   26a2c:	add	w2, w1, #0x8
   26a30:	str	w2, [x19, #24]
   26a34:	ldr	w2, [x19, #24]
   26a38:	cmp	w2, #0x0
   26a3c:	b.le	26a50 <printf_fetchargs@@Base+0x90>
   26a40:	add	x1, x0, #0xb
   26a44:	and	x1, x1, #0xfffffffffffffff8
   26a48:	str	x1, [x19]
   26a4c:	b	26a5c <printf_fetchargs@@Base+0x9c>
   26a50:	ldr	x2, [x19, #8]
   26a54:	sxtw	x0, w1
   26a58:	add	x0, x2, x0
   26a5c:	ldr	w0, [x0]
   26a60:	sxtb	w1, w0
   26a64:	ldr	x0, [sp, #32]
   26a68:	strb	w1, [x0, #16]
   26a6c:	b	272c0 <printf_fetchargs@@Base+0x900>
   26a70:	ldr	w1, [x19, #24]
   26a74:	ldr	x0, [x19]
   26a78:	cmp	w1, #0x0
   26a7c:	b.lt	26a90 <printf_fetchargs@@Base+0xd0>  // b.tstop
   26a80:	add	x1, x0, #0xb
   26a84:	and	x1, x1, #0xfffffffffffffff8
   26a88:	str	x1, [x19]
   26a8c:	b	26ac0 <printf_fetchargs@@Base+0x100>
   26a90:	add	w2, w1, #0x8
   26a94:	str	w2, [x19, #24]
   26a98:	ldr	w2, [x19, #24]
   26a9c:	cmp	w2, #0x0
   26aa0:	b.le	26ab4 <printf_fetchargs@@Base+0xf4>
   26aa4:	add	x1, x0, #0xb
   26aa8:	and	x1, x1, #0xfffffffffffffff8
   26aac:	str	x1, [x19]
   26ab0:	b	26ac0 <printf_fetchargs@@Base+0x100>
   26ab4:	ldr	x2, [x19, #8]
   26ab8:	sxtw	x0, w1
   26abc:	add	x0, x2, x0
   26ac0:	ldr	w0, [x0]
   26ac4:	and	w1, w0, #0xff
   26ac8:	ldr	x0, [sp, #32]
   26acc:	strb	w1, [x0, #16]
   26ad0:	b	272c0 <printf_fetchargs@@Base+0x900>
   26ad4:	ldr	w1, [x19, #24]
   26ad8:	ldr	x0, [x19]
   26adc:	cmp	w1, #0x0
   26ae0:	b.lt	26af4 <printf_fetchargs@@Base+0x134>  // b.tstop
   26ae4:	add	x1, x0, #0xb
   26ae8:	and	x1, x1, #0xfffffffffffffff8
   26aec:	str	x1, [x19]
   26af0:	b	26b24 <printf_fetchargs@@Base+0x164>
   26af4:	add	w2, w1, #0x8
   26af8:	str	w2, [x19, #24]
   26afc:	ldr	w2, [x19, #24]
   26b00:	cmp	w2, #0x0
   26b04:	b.le	26b18 <printf_fetchargs@@Base+0x158>
   26b08:	add	x1, x0, #0xb
   26b0c:	and	x1, x1, #0xfffffffffffffff8
   26b10:	str	x1, [x19]
   26b14:	b	26b24 <printf_fetchargs@@Base+0x164>
   26b18:	ldr	x2, [x19, #8]
   26b1c:	sxtw	x0, w1
   26b20:	add	x0, x2, x0
   26b24:	ldr	w0, [x0]
   26b28:	sxth	w1, w0
   26b2c:	ldr	x0, [sp, #32]
   26b30:	strh	w1, [x0, #16]
   26b34:	b	272c0 <printf_fetchargs@@Base+0x900>
   26b38:	ldr	w1, [x19, #24]
   26b3c:	ldr	x0, [x19]
   26b40:	cmp	w1, #0x0
   26b44:	b.lt	26b58 <printf_fetchargs@@Base+0x198>  // b.tstop
   26b48:	add	x1, x0, #0xb
   26b4c:	and	x1, x1, #0xfffffffffffffff8
   26b50:	str	x1, [x19]
   26b54:	b	26b88 <printf_fetchargs@@Base+0x1c8>
   26b58:	add	w2, w1, #0x8
   26b5c:	str	w2, [x19, #24]
   26b60:	ldr	w2, [x19, #24]
   26b64:	cmp	w2, #0x0
   26b68:	b.le	26b7c <printf_fetchargs@@Base+0x1bc>
   26b6c:	add	x1, x0, #0xb
   26b70:	and	x1, x1, #0xfffffffffffffff8
   26b74:	str	x1, [x19]
   26b78:	b	26b88 <printf_fetchargs@@Base+0x1c8>
   26b7c:	ldr	x2, [x19, #8]
   26b80:	sxtw	x0, w1
   26b84:	add	x0, x2, x0
   26b88:	ldr	w0, [x0]
   26b8c:	and	w1, w0, #0xffff
   26b90:	ldr	x0, [sp, #32]
   26b94:	strh	w1, [x0, #16]
   26b98:	b	272c0 <printf_fetchargs@@Base+0x900>
   26b9c:	ldr	w1, [x19, #24]
   26ba0:	ldr	x0, [x19]
   26ba4:	cmp	w1, #0x0
   26ba8:	b.lt	26bbc <printf_fetchargs@@Base+0x1fc>  // b.tstop
   26bac:	add	x1, x0, #0xb
   26bb0:	and	x1, x1, #0xfffffffffffffff8
   26bb4:	str	x1, [x19]
   26bb8:	b	26bec <printf_fetchargs@@Base+0x22c>
   26bbc:	add	w2, w1, #0x8
   26bc0:	str	w2, [x19, #24]
   26bc4:	ldr	w2, [x19, #24]
   26bc8:	cmp	w2, #0x0
   26bcc:	b.le	26be0 <printf_fetchargs@@Base+0x220>
   26bd0:	add	x1, x0, #0xb
   26bd4:	and	x1, x1, #0xfffffffffffffff8
   26bd8:	str	x1, [x19]
   26bdc:	b	26bec <printf_fetchargs@@Base+0x22c>
   26be0:	ldr	x2, [x19, #8]
   26be4:	sxtw	x0, w1
   26be8:	add	x0, x2, x0
   26bec:	ldr	w1, [x0]
   26bf0:	ldr	x0, [sp, #32]
   26bf4:	str	w1, [x0, #16]
   26bf8:	b	272c0 <printf_fetchargs@@Base+0x900>
   26bfc:	ldr	w1, [x19, #24]
   26c00:	ldr	x0, [x19]
   26c04:	cmp	w1, #0x0
   26c08:	b.lt	26c1c <printf_fetchargs@@Base+0x25c>  // b.tstop
   26c0c:	add	x1, x0, #0xb
   26c10:	and	x1, x1, #0xfffffffffffffff8
   26c14:	str	x1, [x19]
   26c18:	b	26c4c <printf_fetchargs@@Base+0x28c>
   26c1c:	add	w2, w1, #0x8
   26c20:	str	w2, [x19, #24]
   26c24:	ldr	w2, [x19, #24]
   26c28:	cmp	w2, #0x0
   26c2c:	b.le	26c40 <printf_fetchargs@@Base+0x280>
   26c30:	add	x1, x0, #0xb
   26c34:	and	x1, x1, #0xfffffffffffffff8
   26c38:	str	x1, [x19]
   26c3c:	b	26c4c <printf_fetchargs@@Base+0x28c>
   26c40:	ldr	x2, [x19, #8]
   26c44:	sxtw	x0, w1
   26c48:	add	x0, x2, x0
   26c4c:	ldr	w1, [x0]
   26c50:	ldr	x0, [sp, #32]
   26c54:	str	w1, [x0, #16]
   26c58:	b	272c0 <printf_fetchargs@@Base+0x900>
   26c5c:	ldr	w1, [x19, #24]
   26c60:	ldr	x0, [x19]
   26c64:	cmp	w1, #0x0
   26c68:	b.lt	26c7c <printf_fetchargs@@Base+0x2bc>  // b.tstop
   26c6c:	add	x1, x0, #0xf
   26c70:	and	x1, x1, #0xfffffffffffffff8
   26c74:	str	x1, [x19]
   26c78:	b	26cac <printf_fetchargs@@Base+0x2ec>
   26c7c:	add	w2, w1, #0x8
   26c80:	str	w2, [x19, #24]
   26c84:	ldr	w2, [x19, #24]
   26c88:	cmp	w2, #0x0
   26c8c:	b.le	26ca0 <printf_fetchargs@@Base+0x2e0>
   26c90:	add	x1, x0, #0xf
   26c94:	and	x1, x1, #0xfffffffffffffff8
   26c98:	str	x1, [x19]
   26c9c:	b	26cac <printf_fetchargs@@Base+0x2ec>
   26ca0:	ldr	x2, [x19, #8]
   26ca4:	sxtw	x0, w1
   26ca8:	add	x0, x2, x0
   26cac:	ldr	x1, [x0]
   26cb0:	ldr	x0, [sp, #32]
   26cb4:	str	x1, [x0, #16]
   26cb8:	b	272c0 <printf_fetchargs@@Base+0x900>
   26cbc:	ldr	w1, [x19, #24]
   26cc0:	ldr	x0, [x19]
   26cc4:	cmp	w1, #0x0
   26cc8:	b.lt	26cdc <printf_fetchargs@@Base+0x31c>  // b.tstop
   26ccc:	add	x1, x0, #0xf
   26cd0:	and	x1, x1, #0xfffffffffffffff8
   26cd4:	str	x1, [x19]
   26cd8:	b	26d0c <printf_fetchargs@@Base+0x34c>
   26cdc:	add	w2, w1, #0x8
   26ce0:	str	w2, [x19, #24]
   26ce4:	ldr	w2, [x19, #24]
   26ce8:	cmp	w2, #0x0
   26cec:	b.le	26d00 <printf_fetchargs@@Base+0x340>
   26cf0:	add	x1, x0, #0xf
   26cf4:	and	x1, x1, #0xfffffffffffffff8
   26cf8:	str	x1, [x19]
   26cfc:	b	26d0c <printf_fetchargs@@Base+0x34c>
   26d00:	ldr	x2, [x19, #8]
   26d04:	sxtw	x0, w1
   26d08:	add	x0, x2, x0
   26d0c:	ldr	x1, [x0]
   26d10:	ldr	x0, [sp, #32]
   26d14:	str	x1, [x0, #16]
   26d18:	b	272c0 <printf_fetchargs@@Base+0x900>
   26d1c:	ldr	w1, [x19, #24]
   26d20:	ldr	x0, [x19]
   26d24:	cmp	w1, #0x0
   26d28:	b.lt	26d3c <printf_fetchargs@@Base+0x37c>  // b.tstop
   26d2c:	add	x1, x0, #0xf
   26d30:	and	x1, x1, #0xfffffffffffffff8
   26d34:	str	x1, [x19]
   26d38:	b	26d6c <printf_fetchargs@@Base+0x3ac>
   26d3c:	add	w2, w1, #0x8
   26d40:	str	w2, [x19, #24]
   26d44:	ldr	w2, [x19, #24]
   26d48:	cmp	w2, #0x0
   26d4c:	b.le	26d60 <printf_fetchargs@@Base+0x3a0>
   26d50:	add	x1, x0, #0xf
   26d54:	and	x1, x1, #0xfffffffffffffff8
   26d58:	str	x1, [x19]
   26d5c:	b	26d6c <printf_fetchargs@@Base+0x3ac>
   26d60:	ldr	x2, [x19, #8]
   26d64:	sxtw	x0, w1
   26d68:	add	x0, x2, x0
   26d6c:	ldr	x1, [x0]
   26d70:	ldr	x0, [sp, #32]
   26d74:	str	x1, [x0, #16]
   26d78:	b	272c0 <printf_fetchargs@@Base+0x900>
   26d7c:	ldr	w1, [x19, #24]
   26d80:	ldr	x0, [x19]
   26d84:	cmp	w1, #0x0
   26d88:	b.lt	26d9c <printf_fetchargs@@Base+0x3dc>  // b.tstop
   26d8c:	add	x1, x0, #0xf
   26d90:	and	x1, x1, #0xfffffffffffffff8
   26d94:	str	x1, [x19]
   26d98:	b	26dcc <printf_fetchargs@@Base+0x40c>
   26d9c:	add	w2, w1, #0x8
   26da0:	str	w2, [x19, #24]
   26da4:	ldr	w2, [x19, #24]
   26da8:	cmp	w2, #0x0
   26dac:	b.le	26dc0 <printf_fetchargs@@Base+0x400>
   26db0:	add	x1, x0, #0xf
   26db4:	and	x1, x1, #0xfffffffffffffff8
   26db8:	str	x1, [x19]
   26dbc:	b	26dcc <printf_fetchargs@@Base+0x40c>
   26dc0:	ldr	x2, [x19, #8]
   26dc4:	sxtw	x0, w1
   26dc8:	add	x0, x2, x0
   26dcc:	ldr	x1, [x0]
   26dd0:	ldr	x0, [sp, #32]
   26dd4:	str	x1, [x0, #16]
   26dd8:	b	272c0 <printf_fetchargs@@Base+0x900>
   26ddc:	ldr	w1, [x19, #28]
   26de0:	ldr	x0, [x19]
   26de4:	cmp	w1, #0x0
   26de8:	b.lt	26dfc <printf_fetchargs@@Base+0x43c>  // b.tstop
   26dec:	add	x1, x0, #0xf
   26df0:	and	x1, x1, #0xfffffffffffffff8
   26df4:	str	x1, [x19]
   26df8:	b	26e2c <printf_fetchargs@@Base+0x46c>
   26dfc:	add	w2, w1, #0x10
   26e00:	str	w2, [x19, #28]
   26e04:	ldr	w2, [x19, #28]
   26e08:	cmp	w2, #0x0
   26e0c:	b.le	26e20 <printf_fetchargs@@Base+0x460>
   26e10:	add	x1, x0, #0xf
   26e14:	and	x1, x1, #0xfffffffffffffff8
   26e18:	str	x1, [x19]
   26e1c:	b	26e2c <printf_fetchargs@@Base+0x46c>
   26e20:	ldr	x2, [x19, #16]
   26e24:	sxtw	x0, w1
   26e28:	add	x0, x2, x0
   26e2c:	ldr	d0, [x0]
   26e30:	ldr	x0, [sp, #32]
   26e34:	str	d0, [x0, #16]
   26e38:	b	272c0 <printf_fetchargs@@Base+0x900>
   26e3c:	ldr	w0, [x19, #28]
   26e40:	ldr	x1, [x19]
   26e44:	cmp	w0, #0x0
   26e48:	b.lt	26e64 <printf_fetchargs@@Base+0x4a4>  // b.tstop
   26e4c:	add	x0, x1, #0xf
   26e50:	and	x0, x0, #0xfffffffffffffff0
   26e54:	add	x1, x0, #0x17
   26e58:	and	x1, x1, #0xfffffffffffffff8
   26e5c:	str	x1, [x19]
   26e60:	b	26e9c <printf_fetchargs@@Base+0x4dc>
   26e64:	add	w2, w0, #0x10
   26e68:	str	w2, [x19, #28]
   26e6c:	ldr	w2, [x19, #28]
   26e70:	cmp	w2, #0x0
   26e74:	b.le	26e90 <printf_fetchargs@@Base+0x4d0>
   26e78:	add	x0, x1, #0xf
   26e7c:	and	x0, x0, #0xfffffffffffffff0
   26e80:	add	x1, x0, #0x17
   26e84:	and	x1, x1, #0xfffffffffffffff8
   26e88:	str	x1, [x19]
   26e8c:	b	26e9c <printf_fetchargs@@Base+0x4dc>
   26e90:	ldr	x1, [x19, #16]
   26e94:	sxtw	x0, w0
   26e98:	add	x0, x1, x0
   26e9c:	ldr	q0, [x0]
   26ea0:	ldr	x0, [sp, #32]
   26ea4:	str	q0, [x0, #16]
   26ea8:	b	272c0 <printf_fetchargs@@Base+0x900>
   26eac:	ldr	w1, [x19, #24]
   26eb0:	ldr	x0, [x19]
   26eb4:	cmp	w1, #0x0
   26eb8:	b.lt	26ecc <printf_fetchargs@@Base+0x50c>  // b.tstop
   26ebc:	add	x1, x0, #0xb
   26ec0:	and	x1, x1, #0xfffffffffffffff8
   26ec4:	str	x1, [x19]
   26ec8:	b	26efc <printf_fetchargs@@Base+0x53c>
   26ecc:	add	w2, w1, #0x8
   26ed0:	str	w2, [x19, #24]
   26ed4:	ldr	w2, [x19, #24]
   26ed8:	cmp	w2, #0x0
   26edc:	b.le	26ef0 <printf_fetchargs@@Base+0x530>
   26ee0:	add	x1, x0, #0xb
   26ee4:	and	x1, x1, #0xfffffffffffffff8
   26ee8:	str	x1, [x19]
   26eec:	b	26efc <printf_fetchargs@@Base+0x53c>
   26ef0:	ldr	x2, [x19, #8]
   26ef4:	sxtw	x0, w1
   26ef8:	add	x0, x2, x0
   26efc:	ldr	w1, [x0]
   26f00:	ldr	x0, [sp, #32]
   26f04:	str	w1, [x0, #16]
   26f08:	b	272c0 <printf_fetchargs@@Base+0x900>
   26f0c:	ldr	w1, [x19, #24]
   26f10:	ldr	x0, [x19]
   26f14:	cmp	w1, #0x0
   26f18:	b.lt	26f2c <printf_fetchargs@@Base+0x56c>  // b.tstop
   26f1c:	add	x1, x0, #0xb
   26f20:	and	x1, x1, #0xfffffffffffffff8
   26f24:	str	x1, [x19]
   26f28:	b	26f5c <printf_fetchargs@@Base+0x59c>
   26f2c:	add	w2, w1, #0x8
   26f30:	str	w2, [x19, #24]
   26f34:	ldr	w2, [x19, #24]
   26f38:	cmp	w2, #0x0
   26f3c:	b.le	26f50 <printf_fetchargs@@Base+0x590>
   26f40:	add	x1, x0, #0xb
   26f44:	and	x1, x1, #0xfffffffffffffff8
   26f48:	str	x1, [x19]
   26f4c:	b	26f5c <printf_fetchargs@@Base+0x59c>
   26f50:	ldr	x2, [x19, #8]
   26f54:	sxtw	x0, w1
   26f58:	add	x0, x2, x0
   26f5c:	ldr	w1, [x0]
   26f60:	ldr	x0, [sp, #32]
   26f64:	str	w1, [x0, #16]
   26f68:	b	272c0 <printf_fetchargs@@Base+0x900>
   26f6c:	ldr	w1, [x19, #24]
   26f70:	ldr	x0, [x19]
   26f74:	cmp	w1, #0x0
   26f78:	b.lt	26f8c <printf_fetchargs@@Base+0x5cc>  // b.tstop
   26f7c:	add	x1, x0, #0xf
   26f80:	and	x1, x1, #0xfffffffffffffff8
   26f84:	str	x1, [x19]
   26f88:	b	26fbc <printf_fetchargs@@Base+0x5fc>
   26f8c:	add	w2, w1, #0x8
   26f90:	str	w2, [x19, #24]
   26f94:	ldr	w2, [x19, #24]
   26f98:	cmp	w2, #0x0
   26f9c:	b.le	26fb0 <printf_fetchargs@@Base+0x5f0>
   26fa0:	add	x1, x0, #0xf
   26fa4:	and	x1, x1, #0xfffffffffffffff8
   26fa8:	str	x1, [x19]
   26fac:	b	26fbc <printf_fetchargs@@Base+0x5fc>
   26fb0:	ldr	x2, [x19, #8]
   26fb4:	sxtw	x0, w1
   26fb8:	add	x0, x2, x0
   26fbc:	ldr	x1, [x0]
   26fc0:	ldr	x0, [sp, #32]
   26fc4:	str	x1, [x0, #16]
   26fc8:	ldr	x0, [sp, #32]
   26fcc:	ldr	x0, [x0, #16]
   26fd0:	cmp	x0, #0x0
   26fd4:	b.ne	272b4 <printf_fetchargs@@Base+0x8f4>  // b.any
   26fd8:	ldr	x0, [sp, #32]
   26fdc:	adrp	x1, 45000 <vasnprintf@@Base+0x4e04>
   26fe0:	add	x1, x1, #0xe0
   26fe4:	str	x1, [x0, #16]
   26fe8:	b	272b4 <printf_fetchargs@@Base+0x8f4>
   26fec:	ldr	w1, [x19, #24]
   26ff0:	ldr	x0, [x19]
   26ff4:	cmp	w1, #0x0
   26ff8:	b.lt	2700c <printf_fetchargs@@Base+0x64c>  // b.tstop
   26ffc:	add	x1, x0, #0xf
   27000:	and	x1, x1, #0xfffffffffffffff8
   27004:	str	x1, [x19]
   27008:	b	2703c <printf_fetchargs@@Base+0x67c>
   2700c:	add	w2, w1, #0x8
   27010:	str	w2, [x19, #24]
   27014:	ldr	w2, [x19, #24]
   27018:	cmp	w2, #0x0
   2701c:	b.le	27030 <printf_fetchargs@@Base+0x670>
   27020:	add	x1, x0, #0xf
   27024:	and	x1, x1, #0xfffffffffffffff8
   27028:	str	x1, [x19]
   2702c:	b	2703c <printf_fetchargs@@Base+0x67c>
   27030:	ldr	x2, [x19, #8]
   27034:	sxtw	x0, w1
   27038:	add	x0, x2, x0
   2703c:	ldr	x1, [x0]
   27040:	ldr	x0, [sp, #32]
   27044:	str	x1, [x0, #16]
   27048:	ldr	x0, [sp, #32]
   2704c:	ldr	x0, [x0, #16]
   27050:	cmp	x0, #0x0
   27054:	b.ne	272bc <printf_fetchargs@@Base+0x8fc>  // b.any
   27058:	ldr	x0, [sp, #32]
   2705c:	adrp	x1, 45000 <vasnprintf@@Base+0x4e04>
   27060:	add	x1, x1, #0x140
   27064:	str	x1, [x0, #16]
   27068:	b	272bc <printf_fetchargs@@Base+0x8fc>
   2706c:	ldr	w1, [x19, #24]
   27070:	ldr	x0, [x19]
   27074:	cmp	w1, #0x0
   27078:	b.lt	2708c <printf_fetchargs@@Base+0x6cc>  // b.tstop
   2707c:	add	x1, x0, #0xf
   27080:	and	x1, x1, #0xfffffffffffffff8
   27084:	str	x1, [x19]
   27088:	b	270bc <printf_fetchargs@@Base+0x6fc>
   2708c:	add	w2, w1, #0x8
   27090:	str	w2, [x19, #24]
   27094:	ldr	w2, [x19, #24]
   27098:	cmp	w2, #0x0
   2709c:	b.le	270b0 <printf_fetchargs@@Base+0x6f0>
   270a0:	add	x1, x0, #0xf
   270a4:	and	x1, x1, #0xfffffffffffffff8
   270a8:	str	x1, [x19]
   270ac:	b	270bc <printf_fetchargs@@Base+0x6fc>
   270b0:	ldr	x2, [x19, #8]
   270b4:	sxtw	x0, w1
   270b8:	add	x0, x2, x0
   270bc:	ldr	x1, [x0]
   270c0:	ldr	x0, [sp, #32]
   270c4:	str	x1, [x0, #16]
   270c8:	b	272c0 <printf_fetchargs@@Base+0x900>
   270cc:	ldr	w1, [x19, #24]
   270d0:	ldr	x0, [x19]
   270d4:	cmp	w1, #0x0
   270d8:	b.lt	270ec <printf_fetchargs@@Base+0x72c>  // b.tstop
   270dc:	add	x1, x0, #0xf
   270e0:	and	x1, x1, #0xfffffffffffffff8
   270e4:	str	x1, [x19]
   270e8:	b	2711c <printf_fetchargs@@Base+0x75c>
   270ec:	add	w2, w1, #0x8
   270f0:	str	w2, [x19, #24]
   270f4:	ldr	w2, [x19, #24]
   270f8:	cmp	w2, #0x0
   270fc:	b.le	27110 <printf_fetchargs@@Base+0x750>
   27100:	add	x1, x0, #0xf
   27104:	and	x1, x1, #0xfffffffffffffff8
   27108:	str	x1, [x19]
   2710c:	b	2711c <printf_fetchargs@@Base+0x75c>
   27110:	ldr	x2, [x19, #8]
   27114:	sxtw	x0, w1
   27118:	add	x0, x2, x0
   2711c:	ldr	x1, [x0]
   27120:	ldr	x0, [sp, #32]
   27124:	str	x1, [x0, #16]
   27128:	b	272c0 <printf_fetchargs@@Base+0x900>
   2712c:	ldr	w1, [x19, #24]
   27130:	ldr	x0, [x19]
   27134:	cmp	w1, #0x0
   27138:	b.lt	2714c <printf_fetchargs@@Base+0x78c>  // b.tstop
   2713c:	add	x1, x0, #0xf
   27140:	and	x1, x1, #0xfffffffffffffff8
   27144:	str	x1, [x19]
   27148:	b	2717c <printf_fetchargs@@Base+0x7bc>
   2714c:	add	w2, w1, #0x8
   27150:	str	w2, [x19, #24]
   27154:	ldr	w2, [x19, #24]
   27158:	cmp	w2, #0x0
   2715c:	b.le	27170 <printf_fetchargs@@Base+0x7b0>
   27160:	add	x1, x0, #0xf
   27164:	and	x1, x1, #0xfffffffffffffff8
   27168:	str	x1, [x19]
   2716c:	b	2717c <printf_fetchargs@@Base+0x7bc>
   27170:	ldr	x2, [x19, #8]
   27174:	sxtw	x0, w1
   27178:	add	x0, x2, x0
   2717c:	ldr	x1, [x0]
   27180:	ldr	x0, [sp, #32]
   27184:	str	x1, [x0, #16]
   27188:	b	272c0 <printf_fetchargs@@Base+0x900>
   2718c:	ldr	w1, [x19, #24]
   27190:	ldr	x0, [x19]
   27194:	cmp	w1, #0x0
   27198:	b.lt	271ac <printf_fetchargs@@Base+0x7ec>  // b.tstop
   2719c:	add	x1, x0, #0xf
   271a0:	and	x1, x1, #0xfffffffffffffff8
   271a4:	str	x1, [x19]
   271a8:	b	271dc <printf_fetchargs@@Base+0x81c>
   271ac:	add	w2, w1, #0x8
   271b0:	str	w2, [x19, #24]
   271b4:	ldr	w2, [x19, #24]
   271b8:	cmp	w2, #0x0
   271bc:	b.le	271d0 <printf_fetchargs@@Base+0x810>
   271c0:	add	x1, x0, #0xf
   271c4:	and	x1, x1, #0xfffffffffffffff8
   271c8:	str	x1, [x19]
   271cc:	b	271dc <printf_fetchargs@@Base+0x81c>
   271d0:	ldr	x2, [x19, #8]
   271d4:	sxtw	x0, w1
   271d8:	add	x0, x2, x0
   271dc:	ldr	x1, [x0]
   271e0:	ldr	x0, [sp, #32]
   271e4:	str	x1, [x0, #16]
   271e8:	b	272c0 <printf_fetchargs@@Base+0x900>
   271ec:	ldr	w1, [x19, #24]
   271f0:	ldr	x0, [x19]
   271f4:	cmp	w1, #0x0
   271f8:	b.lt	2720c <printf_fetchargs@@Base+0x84c>  // b.tstop
   271fc:	add	x1, x0, #0xf
   27200:	and	x1, x1, #0xfffffffffffffff8
   27204:	str	x1, [x19]
   27208:	b	2723c <printf_fetchargs@@Base+0x87c>
   2720c:	add	w2, w1, #0x8
   27210:	str	w2, [x19, #24]
   27214:	ldr	w2, [x19, #24]
   27218:	cmp	w2, #0x0
   2721c:	b.le	27230 <printf_fetchargs@@Base+0x870>
   27220:	add	x1, x0, #0xf
   27224:	and	x1, x1, #0xfffffffffffffff8
   27228:	str	x1, [x19]
   2722c:	b	2723c <printf_fetchargs@@Base+0x87c>
   27230:	ldr	x2, [x19, #8]
   27234:	sxtw	x0, w1
   27238:	add	x0, x2, x0
   2723c:	ldr	x1, [x0]
   27240:	ldr	x0, [sp, #32]
   27244:	str	x1, [x0, #16]
   27248:	b	272c0 <printf_fetchargs@@Base+0x900>
   2724c:	ldr	w1, [x19, #24]
   27250:	ldr	x0, [x19]
   27254:	cmp	w1, #0x0
   27258:	b.lt	2726c <printf_fetchargs@@Base+0x8ac>  // b.tstop
   2725c:	add	x1, x0, #0xf
   27260:	and	x1, x1, #0xfffffffffffffff8
   27264:	str	x1, [x19]
   27268:	b	2729c <printf_fetchargs@@Base+0x8dc>
   2726c:	add	w2, w1, #0x8
   27270:	str	w2, [x19, #24]
   27274:	ldr	w2, [x19, #24]
   27278:	cmp	w2, #0x0
   2727c:	b.le	27290 <printf_fetchargs@@Base+0x8d0>
   27280:	add	x1, x0, #0xf
   27284:	and	x1, x1, #0xfffffffffffffff8
   27288:	str	x1, [x19]
   2728c:	b	2729c <printf_fetchargs@@Base+0x8dc>
   27290:	ldr	x2, [x19, #8]
   27294:	sxtw	x0, w1
   27298:	add	x0, x2, x0
   2729c:	ldr	x1, [x0]
   272a0:	ldr	x0, [sp, #32]
   272a4:	str	x1, [x0, #16]
   272a8:	b	272c0 <printf_fetchargs@@Base+0x900>
   272ac:	mov	w0, #0xffffffff            	// #-1
   272b0:	b	272f0 <printf_fetchargs@@Base+0x930>
   272b4:	nop
   272b8:	b	272c0 <printf_fetchargs@@Base+0x900>
   272bc:	nop
   272c0:	ldr	x0, [sp, #40]
   272c4:	add	x0, x0, #0x1
   272c8:	str	x0, [sp, #40]
   272cc:	ldr	x0, [sp, #32]
   272d0:	add	x0, x0, #0x20
   272d4:	str	x0, [sp, #32]
   272d8:	ldr	x0, [sp, #24]
   272dc:	ldr	x0, [x0]
   272e0:	ldr	x1, [sp, #40]
   272e4:	cmp	x1, x0
   272e8:	b.cc	269e0 <printf_fetchargs@@Base+0x20>  // b.lo, b.ul, b.last
   272ec:	mov	w0, #0x0                   	// #0
   272f0:	ldr	x19, [sp], #48
   272f4:	ret

00000000000272f8 <printf_parse@@Base>:
   272f8:	stp	x29, x30, [sp, #-288]!
   272fc:	mov	x29, sp
   27300:	str	x0, [sp, #40]
   27304:	str	x1, [sp, #32]
   27308:	str	x2, [sp, #24]
   2730c:	ldr	x0, [sp, #40]
   27310:	str	x0, [sp, #280]
   27314:	str	xzr, [sp, #272]
   27318:	str	xzr, [sp, #248]
   2731c:	str	xzr, [sp, #240]
   27320:	ldr	x0, [sp, #32]
   27324:	str	xzr, [x0]
   27328:	mov	x0, #0x7                   	// #7
   2732c:	str	x0, [sp, #264]
   27330:	ldr	x0, [sp, #32]
   27334:	add	x1, x0, #0x20
   27338:	ldr	x0, [sp, #32]
   2733c:	str	x1, [x0, #8]
   27340:	ldr	x0, [sp, #24]
   27344:	str	xzr, [x0]
   27348:	mov	x0, #0x7                   	// #7
   2734c:	str	x0, [sp, #256]
   27350:	ldr	x0, [sp, #24]
   27354:	add	x1, x0, #0x10
   27358:	ldr	x0, [sp, #24]
   2735c:	str	x1, [x0, #8]
   27360:	b	28584 <printf_parse@@Base+0x128c>
   27364:	ldr	x0, [sp, #280]
   27368:	add	x1, x0, #0x1
   2736c:	str	x1, [sp, #280]
   27370:	ldrb	w0, [x0]
   27374:	strb	w0, [sp, #239]
   27378:	ldrb	w0, [sp, #239]
   2737c:	cmp	w0, #0x25
   27380:	b.ne	28584 <printf_parse@@Base+0x128c>  // b.any
   27384:	mov	x0, #0xffffffffffffffff    	// #-1
   27388:	str	x0, [sp, #224]
   2738c:	ldr	x0, [sp, #32]
   27390:	ldr	x2, [x0, #8]
   27394:	ldr	x0, [sp, #32]
   27398:	ldr	x1, [x0]
   2739c:	mov	x0, x1
   273a0:	lsl	x0, x0, #1
   273a4:	add	x0, x0, x1
   273a8:	lsl	x0, x0, #2
   273ac:	sub	x0, x0, x1
   273b0:	lsl	x0, x0, #3
   273b4:	add	x0, x2, x0
   273b8:	str	x0, [sp, #160]
   273bc:	ldr	x0, [sp, #280]
   273c0:	sub	x1, x0, #0x1
   273c4:	ldr	x0, [sp, #160]
   273c8:	str	x1, [x0]
   273cc:	ldr	x0, [sp, #160]
   273d0:	str	wzr, [x0, #16]
   273d4:	ldr	x0, [sp, #160]
   273d8:	str	xzr, [x0, #24]
   273dc:	ldr	x0, [sp, #160]
   273e0:	str	xzr, [x0, #32]
   273e4:	ldr	x0, [sp, #160]
   273e8:	mov	x1, #0xffffffffffffffff    	// #-1
   273ec:	str	x1, [x0, #40]
   273f0:	ldr	x0, [sp, #160]
   273f4:	str	xzr, [x0, #48]
   273f8:	ldr	x0, [sp, #160]
   273fc:	str	xzr, [x0, #56]
   27400:	ldr	x0, [sp, #160]
   27404:	mov	x1, #0xffffffffffffffff    	// #-1
   27408:	str	x1, [x0, #64]
   2740c:	ldr	x0, [sp, #160]
   27410:	mov	x1, #0xffffffffffffffff    	// #-1
   27414:	str	x1, [x0, #80]
   27418:	ldr	x0, [sp, #280]
   2741c:	ldrb	w0, [x0]
   27420:	cmp	w0, #0x2f
   27424:	b.ls	27534 <printf_parse@@Base+0x23c>  // b.plast
   27428:	ldr	x0, [sp, #280]
   2742c:	ldrb	w0, [x0]
   27430:	cmp	w0, #0x39
   27434:	b.hi	27534 <printf_parse@@Base+0x23c>  // b.pmore
   27438:	ldr	x0, [sp, #280]
   2743c:	str	x0, [sp, #216]
   27440:	b	27450 <printf_parse@@Base+0x158>
   27444:	ldr	x0, [sp, #216]
   27448:	add	x0, x0, #0x1
   2744c:	str	x0, [sp, #216]
   27450:	ldr	x0, [sp, #216]
   27454:	ldrb	w0, [x0]
   27458:	cmp	w0, #0x2f
   2745c:	b.ls	27470 <printf_parse@@Base+0x178>  // b.plast
   27460:	ldr	x0, [sp, #216]
   27464:	ldrb	w0, [x0]
   27468:	cmp	w0, #0x39
   2746c:	b.ls	27444 <printf_parse@@Base+0x14c>  // b.plast
   27470:	ldr	x0, [sp, #216]
   27474:	ldrb	w0, [x0]
   27478:	cmp	w0, #0x24
   2747c:	b.ne	27534 <printf_parse@@Base+0x23c>  // b.any
   27480:	str	xzr, [sp, #208]
   27484:	ldr	x0, [sp, #280]
   27488:	str	x0, [sp, #216]
   2748c:	b	274e4 <printf_parse@@Base+0x1ec>
   27490:	ldr	x1, [sp, #208]
   27494:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   27498:	movk	x0, #0x1999, lsl #48
   2749c:	cmp	x1, x0
   274a0:	b.hi	274bc <printf_parse@@Base+0x1c4>  // b.pmore
   274a4:	ldr	x1, [sp, #208]
   274a8:	mov	x0, x1
   274ac:	lsl	x0, x0, #2
   274b0:	add	x0, x0, x1
   274b4:	lsl	x0, x0, #1
   274b8:	b	274c0 <printf_parse@@Base+0x1c8>
   274bc:	mov	x0, #0xffffffffffffffff    	// #-1
   274c0:	ldr	x1, [sp, #216]
   274c4:	ldrb	w1, [x1]
   274c8:	sub	w1, w1, #0x30
   274cc:	sxtw	x1, w1
   274d0:	bl	ac80 <xsum@plt>
   274d4:	str	x0, [sp, #208]
   274d8:	ldr	x0, [sp, #216]
   274dc:	add	x0, x0, #0x1
   274e0:	str	x0, [sp, #216]
   274e4:	ldr	x0, [sp, #216]
   274e8:	ldrb	w0, [x0]
   274ec:	cmp	w0, #0x2f
   274f0:	b.ls	27504 <printf_parse@@Base+0x20c>  // b.plast
   274f4:	ldr	x0, [sp, #216]
   274f8:	ldrb	w0, [x0]
   274fc:	cmp	w0, #0x39
   27500:	b.ls	27490 <printf_parse@@Base+0x198>  // b.plast
   27504:	ldr	x0, [sp, #208]
   27508:	cmp	x0, #0x0
   2750c:	b.eq	285e8 <printf_parse@@Base+0x12f0>  // b.none
   27510:	ldr	x0, [sp, #208]
   27514:	cmn	x0, #0x1
   27518:	b.eq	285f0 <printf_parse@@Base+0x12f8>  // b.none
   2751c:	ldr	x0, [sp, #208]
   27520:	sub	x0, x0, #0x1
   27524:	str	x0, [sp, #224]
   27528:	ldr	x0, [sp, #216]
   2752c:	add	x0, x0, #0x1
   27530:	str	x0, [sp, #280]
   27534:	ldr	x0, [sp, #280]
   27538:	ldrb	w0, [x0]
   2753c:	cmp	w0, #0x27
   27540:	b.ne	27568 <printf_parse@@Base+0x270>  // b.any
   27544:	ldr	x0, [sp, #160]
   27548:	ldr	w0, [x0, #16]
   2754c:	orr	w1, w0, #0x1
   27550:	ldr	x0, [sp, #160]
   27554:	str	w1, [x0, #16]
   27558:	ldr	x0, [sp, #280]
   2755c:	add	x0, x0, #0x1
   27560:	str	x0, [sp, #280]
   27564:	b	27534 <printf_parse@@Base+0x23c>
   27568:	ldr	x0, [sp, #280]
   2756c:	ldrb	w0, [x0]
   27570:	cmp	w0, #0x2d
   27574:	b.ne	2759c <printf_parse@@Base+0x2a4>  // b.any
   27578:	ldr	x0, [sp, #160]
   2757c:	ldr	w0, [x0, #16]
   27580:	orr	w1, w0, #0x2
   27584:	ldr	x0, [sp, #160]
   27588:	str	w1, [x0, #16]
   2758c:	ldr	x0, [sp, #280]
   27590:	add	x0, x0, #0x1
   27594:	str	x0, [sp, #280]
   27598:	b	27534 <printf_parse@@Base+0x23c>
   2759c:	ldr	x0, [sp, #280]
   275a0:	ldrb	w0, [x0]
   275a4:	cmp	w0, #0x2b
   275a8:	b.ne	275d0 <printf_parse@@Base+0x2d8>  // b.any
   275ac:	ldr	x0, [sp, #160]
   275b0:	ldr	w0, [x0, #16]
   275b4:	orr	w1, w0, #0x4
   275b8:	ldr	x0, [sp, #160]
   275bc:	str	w1, [x0, #16]
   275c0:	ldr	x0, [sp, #280]
   275c4:	add	x0, x0, #0x1
   275c8:	str	x0, [sp, #280]
   275cc:	b	27534 <printf_parse@@Base+0x23c>
   275d0:	ldr	x0, [sp, #280]
   275d4:	ldrb	w0, [x0]
   275d8:	cmp	w0, #0x20
   275dc:	b.ne	27604 <printf_parse@@Base+0x30c>  // b.any
   275e0:	ldr	x0, [sp, #160]
   275e4:	ldr	w0, [x0, #16]
   275e8:	orr	w1, w0, #0x8
   275ec:	ldr	x0, [sp, #160]
   275f0:	str	w1, [x0, #16]
   275f4:	ldr	x0, [sp, #280]
   275f8:	add	x0, x0, #0x1
   275fc:	str	x0, [sp, #280]
   27600:	b	27534 <printf_parse@@Base+0x23c>
   27604:	ldr	x0, [sp, #280]
   27608:	ldrb	w0, [x0]
   2760c:	cmp	w0, #0x23
   27610:	b.ne	27638 <printf_parse@@Base+0x340>  // b.any
   27614:	ldr	x0, [sp, #160]
   27618:	ldr	w0, [x0, #16]
   2761c:	orr	w1, w0, #0x10
   27620:	ldr	x0, [sp, #160]
   27624:	str	w1, [x0, #16]
   27628:	ldr	x0, [sp, #280]
   2762c:	add	x0, x0, #0x1
   27630:	str	x0, [sp, #280]
   27634:	b	27534 <printf_parse@@Base+0x23c>
   27638:	ldr	x0, [sp, #280]
   2763c:	ldrb	w0, [x0]
   27640:	cmp	w0, #0x30
   27644:	b.ne	2766c <printf_parse@@Base+0x374>  // b.any
   27648:	ldr	x0, [sp, #160]
   2764c:	ldr	w0, [x0, #16]
   27650:	orr	w1, w0, #0x20
   27654:	ldr	x0, [sp, #160]
   27658:	str	w1, [x0, #16]
   2765c:	ldr	x0, [sp, #280]
   27660:	add	x0, x0, #0x1
   27664:	str	x0, [sp, #280]
   27668:	b	27534 <printf_parse@@Base+0x23c>
   2766c:	ldr	x0, [sp, #280]
   27670:	ldrb	w0, [x0]
   27674:	cmp	w0, #0x49
   27678:	b.ne	276a0 <printf_parse@@Base+0x3a8>  // b.any
   2767c:	ldr	x0, [sp, #160]
   27680:	ldr	w0, [x0, #16]
   27684:	orr	w1, w0, #0x40
   27688:	ldr	x0, [sp, #160]
   2768c:	str	w1, [x0, #16]
   27690:	ldr	x0, [sp, #280]
   27694:	add	x0, x0, #0x1
   27698:	str	x0, [sp, #280]
   2769c:	b	27534 <printf_parse@@Base+0x23c>
   276a0:	nop
   276a4:	ldr	x0, [sp, #280]
   276a8:	ldrb	w0, [x0]
   276ac:	cmp	w0, #0x2a
   276b0:	b.ne	279f8 <printf_parse@@Base+0x700>  // b.any
   276b4:	ldr	x0, [sp, #160]
   276b8:	ldr	x1, [sp, #280]
   276bc:	str	x1, [x0, #24]
   276c0:	ldr	x0, [sp, #280]
   276c4:	add	x0, x0, #0x1
   276c8:	str	x0, [sp, #280]
   276cc:	ldr	x0, [sp, #160]
   276d0:	ldr	x1, [sp, #280]
   276d4:	str	x1, [x0, #32]
   276d8:	ldr	x0, [sp, #248]
   276dc:	cmp	x0, #0x0
   276e0:	b.ne	276ec <printf_parse@@Base+0x3f4>  // b.any
   276e4:	mov	x0, #0x1                   	// #1
   276e8:	str	x0, [sp, #248]
   276ec:	ldr	x0, [sp, #280]
   276f0:	ldrb	w0, [x0]
   276f4:	cmp	w0, #0x2f
   276f8:	b.ls	2780c <printf_parse@@Base+0x514>  // b.plast
   276fc:	ldr	x0, [sp, #280]
   27700:	ldrb	w0, [x0]
   27704:	cmp	w0, #0x39
   27708:	b.hi	2780c <printf_parse@@Base+0x514>  // b.pmore
   2770c:	ldr	x0, [sp, #280]
   27710:	str	x0, [sp, #200]
   27714:	b	27724 <printf_parse@@Base+0x42c>
   27718:	ldr	x0, [sp, #200]
   2771c:	add	x0, x0, #0x1
   27720:	str	x0, [sp, #200]
   27724:	ldr	x0, [sp, #200]
   27728:	ldrb	w0, [x0]
   2772c:	cmp	w0, #0x2f
   27730:	b.ls	27744 <printf_parse@@Base+0x44c>  // b.plast
   27734:	ldr	x0, [sp, #200]
   27738:	ldrb	w0, [x0]
   2773c:	cmp	w0, #0x39
   27740:	b.ls	27718 <printf_parse@@Base+0x420>  // b.plast
   27744:	ldr	x0, [sp, #200]
   27748:	ldrb	w0, [x0]
   2774c:	cmp	w0, #0x24
   27750:	b.ne	2780c <printf_parse@@Base+0x514>  // b.any
   27754:	str	xzr, [sp, #192]
   27758:	ldr	x0, [sp, #280]
   2775c:	str	x0, [sp, #200]
   27760:	b	277b8 <printf_parse@@Base+0x4c0>
   27764:	ldr	x1, [sp, #192]
   27768:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   2776c:	movk	x0, #0x1999, lsl #48
   27770:	cmp	x1, x0
   27774:	b.hi	27790 <printf_parse@@Base+0x498>  // b.pmore
   27778:	ldr	x1, [sp, #192]
   2777c:	mov	x0, x1
   27780:	lsl	x0, x0, #2
   27784:	add	x0, x0, x1
   27788:	lsl	x0, x0, #1
   2778c:	b	27794 <printf_parse@@Base+0x49c>
   27790:	mov	x0, #0xffffffffffffffff    	// #-1
   27794:	ldr	x1, [sp, #200]
   27798:	ldrb	w1, [x1]
   2779c:	sub	w1, w1, #0x30
   277a0:	sxtw	x1, w1
   277a4:	bl	ac80 <xsum@plt>
   277a8:	str	x0, [sp, #192]
   277ac:	ldr	x0, [sp, #200]
   277b0:	add	x0, x0, #0x1
   277b4:	str	x0, [sp, #200]
   277b8:	ldr	x0, [sp, #200]
   277bc:	ldrb	w0, [x0]
   277c0:	cmp	w0, #0x2f
   277c4:	b.ls	277d8 <printf_parse@@Base+0x4e0>  // b.plast
   277c8:	ldr	x0, [sp, #200]
   277cc:	ldrb	w0, [x0]
   277d0:	cmp	w0, #0x39
   277d4:	b.ls	27764 <printf_parse@@Base+0x46c>  // b.plast
   277d8:	ldr	x0, [sp, #192]
   277dc:	cmp	x0, #0x0
   277e0:	b.eq	285f8 <printf_parse@@Base+0x1300>  // b.none
   277e4:	ldr	x0, [sp, #192]
   277e8:	cmn	x0, #0x1
   277ec:	b.eq	28600 <printf_parse@@Base+0x1308>  // b.none
   277f0:	ldr	x0, [sp, #192]
   277f4:	sub	x1, x0, #0x1
   277f8:	ldr	x0, [sp, #160]
   277fc:	str	x1, [x0, #40]
   27800:	ldr	x0, [sp, #200]
   27804:	add	x0, x0, #0x1
   27808:	str	x0, [sp, #280]
   2780c:	ldr	x0, [sp, #160]
   27810:	ldr	x0, [x0, #40]
   27814:	cmn	x0, #0x1
   27818:	b.ne	27840 <printf_parse@@Base+0x548>  // b.any
   2781c:	ldr	x0, [sp, #272]
   27820:	add	x1, x0, #0x1
   27824:	str	x1, [sp, #272]
   27828:	ldr	x1, [sp, #160]
   2782c:	str	x0, [x1, #40]
   27830:	ldr	x0, [sp, #160]
   27834:	ldr	x0, [x0, #40]
   27838:	cmn	x0, #0x1
   2783c:	b.eq	28608 <printf_parse@@Base+0x1310>  // b.none
   27840:	ldr	x0, [sp, #160]
   27844:	ldr	x0, [x0, #40]
   27848:	str	x0, [sp, #144]
   2784c:	ldr	x1, [sp, #144]
   27850:	ldr	x0, [sp, #256]
   27854:	cmp	x1, x0
   27858:	b.cc	27980 <printf_parse@@Base+0x688>  // b.lo, b.ul, b.last
   2785c:	ldr	x0, [sp, #256]
   27860:	cmp	x0, #0x0
   27864:	b.lt	27874 <printf_parse@@Base+0x57c>  // b.tstop
   27868:	ldr	x0, [sp, #256]
   2786c:	lsl	x0, x0, #1
   27870:	b	27878 <printf_parse@@Base+0x580>
   27874:	mov	x0, #0xffffffffffffffff    	// #-1
   27878:	str	x0, [sp, #256]
   2787c:	ldr	x1, [sp, #256]
   27880:	ldr	x0, [sp, #144]
   27884:	cmp	x1, x0
   27888:	b.hi	2789c <printf_parse@@Base+0x5a4>  // b.pmore
   2788c:	mov	x1, #0x1                   	// #1
   27890:	ldr	x0, [sp, #144]
   27894:	bl	ac80 <xsum@plt>
   27898:	str	x0, [sp, #256]
   2789c:	ldr	x1, [sp, #256]
   278a0:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   278a4:	cmp	x1, x0
   278a8:	b.hi	278b8 <printf_parse@@Base+0x5c0>  // b.pmore
   278ac:	ldr	x0, [sp, #256]
   278b0:	lsl	x0, x0, #5
   278b4:	b	278bc <printf_parse@@Base+0x5c4>
   278b8:	mov	x0, #0xffffffffffffffff    	// #-1
   278bc:	str	x0, [sp, #136]
   278c0:	ldr	x0, [sp, #136]
   278c4:	cmn	x0, #0x1
   278c8:	b.eq	2869c <printf_parse@@Base+0x13a4>  // b.none
   278cc:	ldr	x0, [sp, #24]
   278d0:	ldr	x1, [x0, #8]
   278d4:	ldr	x0, [sp, #24]
   278d8:	add	x0, x0, #0x10
   278dc:	cmp	x1, x0
   278e0:	b.eq	278f8 <printf_parse@@Base+0x600>  // b.none
   278e4:	ldr	x0, [sp, #24]
   278e8:	ldr	x0, [x0, #8]
   278ec:	ldr	x1, [sp, #136]
   278f0:	bl	ae00 <realloc@plt>
   278f4:	b	27900 <printf_parse@@Base+0x608>
   278f8:	ldr	x0, [sp, #136]
   278fc:	bl	ab40 <malloc@plt>
   27900:	str	x0, [sp, #128]
   27904:	ldr	x0, [sp, #128]
   27908:	cmp	x0, #0x0
   2790c:	b.eq	286a4 <printf_parse@@Base+0x13ac>  // b.none
   27910:	ldr	x0, [sp, #24]
   27914:	ldr	x1, [x0, #8]
   27918:	ldr	x0, [sp, #24]
   2791c:	add	x0, x0, #0x10
   27920:	cmp	x1, x0
   27924:	b.ne	27948 <printf_parse@@Base+0x650>  // b.any
   27928:	ldr	x0, [sp, #24]
   2792c:	ldr	x1, [x0, #8]
   27930:	ldr	x0, [sp, #24]
   27934:	ldr	x0, [x0]
   27938:	lsl	x0, x0, #5
   2793c:	mov	x2, x0
   27940:	ldr	x0, [sp, #128]
   27944:	bl	a790 <memcpy@plt>
   27948:	ldr	x0, [sp, #24]
   2794c:	ldr	x1, [sp, #128]
   27950:	str	x1, [x0, #8]
   27954:	b	27980 <printf_parse@@Base+0x688>
   27958:	ldr	x0, [sp, #24]
   2795c:	ldr	x1, [x0, #8]
   27960:	ldr	x0, [sp, #24]
   27964:	ldr	x0, [x0]
   27968:	add	x3, x0, #0x1
   2796c:	ldr	x2, [sp, #24]
   27970:	str	x3, [x2]
   27974:	lsl	x0, x0, #5
   27978:	add	x0, x1, x0
   2797c:	str	wzr, [x0]
   27980:	ldr	x0, [sp, #24]
   27984:	ldr	x0, [x0]
   27988:	ldr	x1, [sp, #144]
   2798c:	cmp	x1, x0
   27990:	b.cs	27958 <printf_parse@@Base+0x660>  // b.hs, b.nlast
   27994:	ldr	x0, [sp, #24]
   27998:	ldr	x1, [x0, #8]
   2799c:	ldr	x0, [sp, #144]
   279a0:	lsl	x0, x0, #5
   279a4:	add	x0, x1, x0
   279a8:	ldr	w0, [x0]
   279ac:	cmp	w0, #0x0
   279b0:	b.ne	279d4 <printf_parse@@Base+0x6dc>  // b.any
   279b4:	ldr	x0, [sp, #24]
   279b8:	ldr	x1, [x0, #8]
   279bc:	ldr	x0, [sp, #144]
   279c0:	lsl	x0, x0, #5
   279c4:	add	x0, x1, x0
   279c8:	mov	w1, #0x5                   	// #5
   279cc:	str	w1, [x0]
   279d0:	b	27a90 <printf_parse@@Base+0x798>
   279d4:	ldr	x0, [sp, #24]
   279d8:	ldr	x1, [x0, #8]
   279dc:	ldr	x0, [sp, #144]
   279e0:	lsl	x0, x0, #5
   279e4:	add	x0, x1, x0
   279e8:	ldr	w0, [x0]
   279ec:	cmp	w0, #0x5
   279f0:	b.eq	27a90 <printf_parse@@Base+0x798>  // b.none
   279f4:	b	2863c <printf_parse@@Base+0x1344>
   279f8:	ldr	x0, [sp, #280]
   279fc:	ldrb	w0, [x0]
   27a00:	cmp	w0, #0x2f
   27a04:	b.ls	27a90 <printf_parse@@Base+0x798>  // b.plast
   27a08:	ldr	x0, [sp, #280]
   27a0c:	ldrb	w0, [x0]
   27a10:	cmp	w0, #0x39
   27a14:	b.hi	27a90 <printf_parse@@Base+0x798>  // b.pmore
   27a18:	ldr	x0, [sp, #160]
   27a1c:	ldr	x1, [sp, #280]
   27a20:	str	x1, [x0, #24]
   27a24:	b	27a34 <printf_parse@@Base+0x73c>
   27a28:	ldr	x0, [sp, #280]
   27a2c:	add	x0, x0, #0x1
   27a30:	str	x0, [sp, #280]
   27a34:	ldr	x0, [sp, #280]
   27a38:	ldrb	w0, [x0]
   27a3c:	cmp	w0, #0x2f
   27a40:	b.ls	27a54 <printf_parse@@Base+0x75c>  // b.plast
   27a44:	ldr	x0, [sp, #280]
   27a48:	ldrb	w0, [x0]
   27a4c:	cmp	w0, #0x39
   27a50:	b.ls	27a28 <printf_parse@@Base+0x730>  // b.plast
   27a54:	ldr	x0, [sp, #160]
   27a58:	ldr	x1, [sp, #280]
   27a5c:	str	x1, [x0, #32]
   27a60:	ldr	x0, [sp, #160]
   27a64:	ldr	x1, [x0, #32]
   27a68:	ldr	x0, [sp, #160]
   27a6c:	ldr	x0, [x0, #24]
   27a70:	sub	x0, x1, x0
   27a74:	str	x0, [sp, #152]
   27a78:	ldr	x1, [sp, #248]
   27a7c:	ldr	x0, [sp, #152]
   27a80:	cmp	x1, x0
   27a84:	b.cs	27a90 <printf_parse@@Base+0x798>  // b.hs, b.nlast
   27a88:	ldr	x0, [sp, #152]
   27a8c:	str	x0, [sp, #248]
   27a90:	ldr	x0, [sp, #280]
   27a94:	ldrb	w0, [x0]
   27a98:	cmp	w0, #0x2e
   27a9c:	b.ne	27e80 <printf_parse@@Base+0xb88>  // b.any
   27aa0:	ldr	x0, [sp, #280]
   27aa4:	add	x0, x0, #0x1
   27aa8:	str	x0, [sp, #280]
   27aac:	ldr	x0, [sp, #280]
   27ab0:	ldrb	w0, [x0]
   27ab4:	cmp	w0, #0x2a
   27ab8:	b.ne	27e04 <printf_parse@@Base+0xb0c>  // b.any
   27abc:	ldr	x0, [sp, #280]
   27ac0:	sub	x1, x0, #0x1
   27ac4:	ldr	x0, [sp, #160]
   27ac8:	str	x1, [x0, #48]
   27acc:	ldr	x0, [sp, #280]
   27ad0:	add	x0, x0, #0x1
   27ad4:	str	x0, [sp, #280]
   27ad8:	ldr	x0, [sp, #160]
   27adc:	ldr	x1, [sp, #280]
   27ae0:	str	x1, [x0, #56]
   27ae4:	ldr	x0, [sp, #240]
   27ae8:	cmp	x0, #0x1
   27aec:	b.hi	27af8 <printf_parse@@Base+0x800>  // b.pmore
   27af0:	mov	x0, #0x2                   	// #2
   27af4:	str	x0, [sp, #240]
   27af8:	ldr	x0, [sp, #280]
   27afc:	ldrb	w0, [x0]
   27b00:	cmp	w0, #0x2f
   27b04:	b.ls	27c18 <printf_parse@@Base+0x920>  // b.plast
   27b08:	ldr	x0, [sp, #280]
   27b0c:	ldrb	w0, [x0]
   27b10:	cmp	w0, #0x39
   27b14:	b.hi	27c18 <printf_parse@@Base+0x920>  // b.pmore
   27b18:	ldr	x0, [sp, #280]
   27b1c:	str	x0, [sp, #184]
   27b20:	b	27b30 <printf_parse@@Base+0x838>
   27b24:	ldr	x0, [sp, #184]
   27b28:	add	x0, x0, #0x1
   27b2c:	str	x0, [sp, #184]
   27b30:	ldr	x0, [sp, #184]
   27b34:	ldrb	w0, [x0]
   27b38:	cmp	w0, #0x2f
   27b3c:	b.ls	27b50 <printf_parse@@Base+0x858>  // b.plast
   27b40:	ldr	x0, [sp, #184]
   27b44:	ldrb	w0, [x0]
   27b48:	cmp	w0, #0x39
   27b4c:	b.ls	27b24 <printf_parse@@Base+0x82c>  // b.plast
   27b50:	ldr	x0, [sp, #184]
   27b54:	ldrb	w0, [x0]
   27b58:	cmp	w0, #0x24
   27b5c:	b.ne	27c18 <printf_parse@@Base+0x920>  // b.any
   27b60:	str	xzr, [sp, #176]
   27b64:	ldr	x0, [sp, #280]
   27b68:	str	x0, [sp, #184]
   27b6c:	b	27bc4 <printf_parse@@Base+0x8cc>
   27b70:	ldr	x1, [sp, #176]
   27b74:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   27b78:	movk	x0, #0x1999, lsl #48
   27b7c:	cmp	x1, x0
   27b80:	b.hi	27b9c <printf_parse@@Base+0x8a4>  // b.pmore
   27b84:	ldr	x1, [sp, #176]
   27b88:	mov	x0, x1
   27b8c:	lsl	x0, x0, #2
   27b90:	add	x0, x0, x1
   27b94:	lsl	x0, x0, #1
   27b98:	b	27ba0 <printf_parse@@Base+0x8a8>
   27b9c:	mov	x0, #0xffffffffffffffff    	// #-1
   27ba0:	ldr	x1, [sp, #184]
   27ba4:	ldrb	w1, [x1]
   27ba8:	sub	w1, w1, #0x30
   27bac:	sxtw	x1, w1
   27bb0:	bl	ac80 <xsum@plt>
   27bb4:	str	x0, [sp, #176]
   27bb8:	ldr	x0, [sp, #184]
   27bbc:	add	x0, x0, #0x1
   27bc0:	str	x0, [sp, #184]
   27bc4:	ldr	x0, [sp, #184]
   27bc8:	ldrb	w0, [x0]
   27bcc:	cmp	w0, #0x2f
   27bd0:	b.ls	27be4 <printf_parse@@Base+0x8ec>  // b.plast
   27bd4:	ldr	x0, [sp, #184]
   27bd8:	ldrb	w0, [x0]
   27bdc:	cmp	w0, #0x39
   27be0:	b.ls	27b70 <printf_parse@@Base+0x878>  // b.plast
   27be4:	ldr	x0, [sp, #176]
   27be8:	cmp	x0, #0x0
   27bec:	b.eq	28610 <printf_parse@@Base+0x1318>  // b.none
   27bf0:	ldr	x0, [sp, #176]
   27bf4:	cmn	x0, #0x1
   27bf8:	b.eq	28618 <printf_parse@@Base+0x1320>  // b.none
   27bfc:	ldr	x0, [sp, #176]
   27c00:	sub	x1, x0, #0x1
   27c04:	ldr	x0, [sp, #160]
   27c08:	str	x1, [x0, #64]
   27c0c:	ldr	x0, [sp, #184]
   27c10:	add	x0, x0, #0x1
   27c14:	str	x0, [sp, #280]
   27c18:	ldr	x0, [sp, #160]
   27c1c:	ldr	x0, [x0, #64]
   27c20:	cmn	x0, #0x1
   27c24:	b.ne	27c4c <printf_parse@@Base+0x954>  // b.any
   27c28:	ldr	x0, [sp, #272]
   27c2c:	add	x1, x0, #0x1
   27c30:	str	x1, [sp, #272]
   27c34:	ldr	x1, [sp, #160]
   27c38:	str	x0, [x1, #64]
   27c3c:	ldr	x0, [sp, #160]
   27c40:	ldr	x0, [x0, #64]
   27c44:	cmn	x0, #0x1
   27c48:	b.eq	28620 <printf_parse@@Base+0x1328>  // b.none
   27c4c:	ldr	x0, [sp, #160]
   27c50:	ldr	x0, [x0, #64]
   27c54:	str	x0, [sp, #112]
   27c58:	ldr	x1, [sp, #112]
   27c5c:	ldr	x0, [sp, #256]
   27c60:	cmp	x1, x0
   27c64:	b.cc	27d8c <printf_parse@@Base+0xa94>  // b.lo, b.ul, b.last
   27c68:	ldr	x0, [sp, #256]
   27c6c:	cmp	x0, #0x0
   27c70:	b.lt	27c80 <printf_parse@@Base+0x988>  // b.tstop
   27c74:	ldr	x0, [sp, #256]
   27c78:	lsl	x0, x0, #1
   27c7c:	b	27c84 <printf_parse@@Base+0x98c>
   27c80:	mov	x0, #0xffffffffffffffff    	// #-1
   27c84:	str	x0, [sp, #256]
   27c88:	ldr	x1, [sp, #256]
   27c8c:	ldr	x0, [sp, #112]
   27c90:	cmp	x1, x0
   27c94:	b.hi	27ca8 <printf_parse@@Base+0x9b0>  // b.pmore
   27c98:	mov	x1, #0x1                   	// #1
   27c9c:	ldr	x0, [sp, #112]
   27ca0:	bl	ac80 <xsum@plt>
   27ca4:	str	x0, [sp, #256]
   27ca8:	ldr	x1, [sp, #256]
   27cac:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   27cb0:	cmp	x1, x0
   27cb4:	b.hi	27cc4 <printf_parse@@Base+0x9cc>  // b.pmore
   27cb8:	ldr	x0, [sp, #256]
   27cbc:	lsl	x0, x0, #5
   27cc0:	b	27cc8 <printf_parse@@Base+0x9d0>
   27cc4:	mov	x0, #0xffffffffffffffff    	// #-1
   27cc8:	str	x0, [sp, #104]
   27ccc:	ldr	x0, [sp, #104]
   27cd0:	cmn	x0, #0x1
   27cd4:	b.eq	286ac <printf_parse@@Base+0x13b4>  // b.none
   27cd8:	ldr	x0, [sp, #24]
   27cdc:	ldr	x1, [x0, #8]
   27ce0:	ldr	x0, [sp, #24]
   27ce4:	add	x0, x0, #0x10
   27ce8:	cmp	x1, x0
   27cec:	b.eq	27d04 <printf_parse@@Base+0xa0c>  // b.none
   27cf0:	ldr	x0, [sp, #24]
   27cf4:	ldr	x0, [x0, #8]
   27cf8:	ldr	x1, [sp, #104]
   27cfc:	bl	ae00 <realloc@plt>
   27d00:	b	27d0c <printf_parse@@Base+0xa14>
   27d04:	ldr	x0, [sp, #104]
   27d08:	bl	ab40 <malloc@plt>
   27d0c:	str	x0, [sp, #96]
   27d10:	ldr	x0, [sp, #96]
   27d14:	cmp	x0, #0x0
   27d18:	b.eq	286b4 <printf_parse@@Base+0x13bc>  // b.none
   27d1c:	ldr	x0, [sp, #24]
   27d20:	ldr	x1, [x0, #8]
   27d24:	ldr	x0, [sp, #24]
   27d28:	add	x0, x0, #0x10
   27d2c:	cmp	x1, x0
   27d30:	b.ne	27d54 <printf_parse@@Base+0xa5c>  // b.any
   27d34:	ldr	x0, [sp, #24]
   27d38:	ldr	x1, [x0, #8]
   27d3c:	ldr	x0, [sp, #24]
   27d40:	ldr	x0, [x0]
   27d44:	lsl	x0, x0, #5
   27d48:	mov	x2, x0
   27d4c:	ldr	x0, [sp, #96]
   27d50:	bl	a790 <memcpy@plt>
   27d54:	ldr	x0, [sp, #24]
   27d58:	ldr	x1, [sp, #96]
   27d5c:	str	x1, [x0, #8]
   27d60:	b	27d8c <printf_parse@@Base+0xa94>
   27d64:	ldr	x0, [sp, #24]
   27d68:	ldr	x1, [x0, #8]
   27d6c:	ldr	x0, [sp, #24]
   27d70:	ldr	x0, [x0]
   27d74:	add	x3, x0, #0x1
   27d78:	ldr	x2, [sp, #24]
   27d7c:	str	x3, [x2]
   27d80:	lsl	x0, x0, #5
   27d84:	add	x0, x1, x0
   27d88:	str	wzr, [x0]
   27d8c:	ldr	x0, [sp, #24]
   27d90:	ldr	x0, [x0]
   27d94:	ldr	x1, [sp, #112]
   27d98:	cmp	x1, x0
   27d9c:	b.cs	27d64 <printf_parse@@Base+0xa6c>  // b.hs, b.nlast
   27da0:	ldr	x0, [sp, #24]
   27da4:	ldr	x1, [x0, #8]
   27da8:	ldr	x0, [sp, #112]
   27dac:	lsl	x0, x0, #5
   27db0:	add	x0, x1, x0
   27db4:	ldr	w0, [x0]
   27db8:	cmp	w0, #0x0
   27dbc:	b.ne	27de0 <printf_parse@@Base+0xae8>  // b.any
   27dc0:	ldr	x0, [sp, #24]
   27dc4:	ldr	x1, [x0, #8]
   27dc8:	ldr	x0, [sp, #112]
   27dcc:	lsl	x0, x0, #5
   27dd0:	add	x0, x1, x0
   27dd4:	mov	w1, #0x5                   	// #5
   27dd8:	str	w1, [x0]
   27ddc:	b	27e80 <printf_parse@@Base+0xb88>
   27de0:	ldr	x0, [sp, #24]
   27de4:	ldr	x1, [x0, #8]
   27de8:	ldr	x0, [sp, #112]
   27dec:	lsl	x0, x0, #5
   27df0:	add	x0, x1, x0
   27df4:	ldr	w0, [x0]
   27df8:	cmp	w0, #0x5
   27dfc:	b.eq	27e80 <printf_parse@@Base+0xb88>  // b.none
   27e00:	b	2863c <printf_parse@@Base+0x1344>
   27e04:	ldr	x0, [sp, #280]
   27e08:	sub	x1, x0, #0x1
   27e0c:	ldr	x0, [sp, #160]
   27e10:	str	x1, [x0, #48]
   27e14:	b	27e24 <printf_parse@@Base+0xb2c>
   27e18:	ldr	x0, [sp, #280]
   27e1c:	add	x0, x0, #0x1
   27e20:	str	x0, [sp, #280]
   27e24:	ldr	x0, [sp, #280]
   27e28:	ldrb	w0, [x0]
   27e2c:	cmp	w0, #0x2f
   27e30:	b.ls	27e44 <printf_parse@@Base+0xb4c>  // b.plast
   27e34:	ldr	x0, [sp, #280]
   27e38:	ldrb	w0, [x0]
   27e3c:	cmp	w0, #0x39
   27e40:	b.ls	27e18 <printf_parse@@Base+0xb20>  // b.plast
   27e44:	ldr	x0, [sp, #160]
   27e48:	ldr	x1, [sp, #280]
   27e4c:	str	x1, [x0, #56]
   27e50:	ldr	x0, [sp, #160]
   27e54:	ldr	x1, [x0, #56]
   27e58:	ldr	x0, [sp, #160]
   27e5c:	ldr	x0, [x0, #48]
   27e60:	sub	x0, x1, x0
   27e64:	str	x0, [sp, #120]
   27e68:	ldr	x1, [sp, #240]
   27e6c:	ldr	x0, [sp, #120]
   27e70:	cmp	x1, x0
   27e74:	b.cs	27e80 <printf_parse@@Base+0xb88>  // b.hs, b.nlast
   27e78:	ldr	x0, [sp, #120]
   27e7c:	str	x0, [sp, #240]
   27e80:	str	wzr, [sp, #168]
   27e84:	ldr	x0, [sp, #280]
   27e88:	ldrb	w0, [x0]
   27e8c:	cmp	w0, #0x68
   27e90:	b.ne	27ec0 <printf_parse@@Base+0xbc8>  // b.any
   27e94:	ldr	w0, [sp, #168]
   27e98:	and	w0, w0, #0x1
   27e9c:	mov	w1, #0x1                   	// #1
   27ea0:	lsl	w0, w1, w0
   27ea4:	ldr	w1, [sp, #168]
   27ea8:	orr	w0, w1, w0
   27eac:	str	w0, [sp, #168]
   27eb0:	ldr	x0, [sp, #280]
   27eb4:	add	x0, x0, #0x1
   27eb8:	str	x0, [sp, #280]
   27ebc:	b	27e84 <printf_parse@@Base+0xb8c>
   27ec0:	ldr	x0, [sp, #280]
   27ec4:	ldrb	w0, [x0]
   27ec8:	cmp	w0, #0x4c
   27ecc:	b.ne	27eec <printf_parse@@Base+0xbf4>  // b.any
   27ed0:	ldr	w0, [sp, #168]
   27ed4:	orr	w0, w0, #0x4
   27ed8:	str	w0, [sp, #168]
   27edc:	ldr	x0, [sp, #280]
   27ee0:	add	x0, x0, #0x1
   27ee4:	str	x0, [sp, #280]
   27ee8:	b	27e84 <printf_parse@@Base+0xb8c>
   27eec:	ldr	x0, [sp, #280]
   27ef0:	ldrb	w0, [x0]
   27ef4:	cmp	w0, #0x6c
   27ef8:	b.ne	27f18 <printf_parse@@Base+0xc20>  // b.any
   27efc:	ldr	w0, [sp, #168]
   27f00:	add	w0, w0, #0x8
   27f04:	str	w0, [sp, #168]
   27f08:	ldr	x0, [sp, #280]
   27f0c:	add	x0, x0, #0x1
   27f10:	str	x0, [sp, #280]
   27f14:	b	27e84 <printf_parse@@Base+0xb8c>
   27f18:	ldr	x0, [sp, #280]
   27f1c:	ldrb	w0, [x0]
   27f20:	cmp	w0, #0x6a
   27f24:	b.ne	27f44 <printf_parse@@Base+0xc4c>  // b.any
   27f28:	ldr	w0, [sp, #168]
   27f2c:	add	w0, w0, #0x8
   27f30:	str	w0, [sp, #168]
   27f34:	ldr	x0, [sp, #280]
   27f38:	add	x0, x0, #0x1
   27f3c:	str	x0, [sp, #280]
   27f40:	b	27e84 <printf_parse@@Base+0xb8c>
   27f44:	ldr	x0, [sp, #280]
   27f48:	ldrb	w0, [x0]
   27f4c:	cmp	w0, #0x7a
   27f50:	b.eq	27f64 <printf_parse@@Base+0xc6c>  // b.none
   27f54:	ldr	x0, [sp, #280]
   27f58:	ldrb	w0, [x0]
   27f5c:	cmp	w0, #0x5a
   27f60:	b.ne	27f80 <printf_parse@@Base+0xc88>  // b.any
   27f64:	ldr	w0, [sp, #168]
   27f68:	add	w0, w0, #0x8
   27f6c:	str	w0, [sp, #168]
   27f70:	ldr	x0, [sp, #280]
   27f74:	add	x0, x0, #0x1
   27f78:	str	x0, [sp, #280]
   27f7c:	b	27fa8 <printf_parse@@Base+0xcb0>
   27f80:	ldr	x0, [sp, #280]
   27f84:	ldrb	w0, [x0]
   27f88:	cmp	w0, #0x74
   27f8c:	b.ne	27fac <printf_parse@@Base+0xcb4>  // b.any
   27f90:	ldr	w0, [sp, #168]
   27f94:	add	w0, w0, #0x8
   27f98:	str	w0, [sp, #168]
   27f9c:	ldr	x0, [sp, #280]
   27fa0:	add	x0, x0, #0x1
   27fa4:	str	x0, [sp, #280]
   27fa8:	b	27e84 <printf_parse@@Base+0xb8c>
   27fac:	nop
   27fb0:	ldr	x0, [sp, #280]
   27fb4:	add	x1, x0, #0x1
   27fb8:	str	x1, [sp, #280]
   27fbc:	ldrb	w0, [x0]
   27fc0:	strb	w0, [sp, #239]
   27fc4:	ldrb	w0, [sp, #239]
   27fc8:	sub	w0, w0, #0x25
   27fcc:	cmp	w0, #0x53
   27fd0:	b.hi	28628 <printf_parse@@Base+0x1330>  // b.pmore
   27fd4:	adrp	x1, 45000 <vasnprintf@@Base+0x4e04>
   27fd8:	add	x1, x1, #0x15c
   27fdc:	ldr	w0, [x1, w0, uxtw #2]
   27fe0:	adr	x1, 27fec <printf_parse@@Base+0xcf4>
   27fe4:	add	x0, x1, w0, sxtw #2
   27fe8:	br	x0
   27fec:	ldr	w0, [sp, #168]
   27ff0:	cmp	w0, #0xf
   27ff4:	b.gt	28008 <printf_parse@@Base+0xd10>
   27ff8:	ldr	w0, [sp, #168]
   27ffc:	and	w0, w0, #0x4
   28000:	cmp	w0, #0x0
   28004:	b.eq	28014 <printf_parse@@Base+0xd1c>  // b.none
   28008:	mov	w0, #0x9                   	// #9
   2800c:	str	w0, [sp, #172]
   28010:	b	28230 <printf_parse@@Base+0xf38>
   28014:	ldr	w0, [sp, #168]
   28018:	cmp	w0, #0x7
   2801c:	b.le	2802c <printf_parse@@Base+0xd34>
   28020:	mov	w0, #0x7                   	// #7
   28024:	str	w0, [sp, #172]
   28028:	b	28230 <printf_parse@@Base+0xf38>
   2802c:	ldr	w0, [sp, #168]
   28030:	and	w0, w0, #0x2
   28034:	cmp	w0, #0x0
   28038:	b.eq	28048 <printf_parse@@Base+0xd50>  // b.none
   2803c:	mov	w0, #0x1                   	// #1
   28040:	str	w0, [sp, #172]
   28044:	b	28230 <printf_parse@@Base+0xf38>
   28048:	ldr	w0, [sp, #168]
   2804c:	and	w0, w0, #0x1
   28050:	cmp	w0, #0x0
   28054:	b.eq	28064 <printf_parse@@Base+0xd6c>  // b.none
   28058:	mov	w0, #0x3                   	// #3
   2805c:	str	w0, [sp, #172]
   28060:	b	28230 <printf_parse@@Base+0xf38>
   28064:	mov	w0, #0x5                   	// #5
   28068:	str	w0, [sp, #172]
   2806c:	b	28230 <printf_parse@@Base+0xf38>
   28070:	ldr	w0, [sp, #168]
   28074:	cmp	w0, #0xf
   28078:	b.gt	2808c <printf_parse@@Base+0xd94>
   2807c:	ldr	w0, [sp, #168]
   28080:	and	w0, w0, #0x4
   28084:	cmp	w0, #0x0
   28088:	b.eq	28098 <printf_parse@@Base+0xda0>  // b.none
   2808c:	mov	w0, #0xa                   	// #10
   28090:	str	w0, [sp, #172]
   28094:	b	28230 <printf_parse@@Base+0xf38>
   28098:	ldr	w0, [sp, #168]
   2809c:	cmp	w0, #0x7
   280a0:	b.le	280b0 <printf_parse@@Base+0xdb8>
   280a4:	mov	w0, #0x8                   	// #8
   280a8:	str	w0, [sp, #172]
   280ac:	b	28230 <printf_parse@@Base+0xf38>
   280b0:	ldr	w0, [sp, #168]
   280b4:	and	w0, w0, #0x2
   280b8:	cmp	w0, #0x0
   280bc:	b.eq	280cc <printf_parse@@Base+0xdd4>  // b.none
   280c0:	mov	w0, #0x2                   	// #2
   280c4:	str	w0, [sp, #172]
   280c8:	b	28230 <printf_parse@@Base+0xf38>
   280cc:	ldr	w0, [sp, #168]
   280d0:	and	w0, w0, #0x1
   280d4:	cmp	w0, #0x0
   280d8:	b.eq	280e8 <printf_parse@@Base+0xdf0>  // b.none
   280dc:	mov	w0, #0x4                   	// #4
   280e0:	str	w0, [sp, #172]
   280e4:	b	28230 <printf_parse@@Base+0xf38>
   280e8:	mov	w0, #0x6                   	// #6
   280ec:	str	w0, [sp, #172]
   280f0:	b	28230 <printf_parse@@Base+0xf38>
   280f4:	ldr	w0, [sp, #168]
   280f8:	cmp	w0, #0xf
   280fc:	b.gt	28110 <printf_parse@@Base+0xe18>
   28100:	ldr	w0, [sp, #168]
   28104:	and	w0, w0, #0x4
   28108:	cmp	w0, #0x0
   2810c:	b.eq	2811c <printf_parse@@Base+0xe24>  // b.none
   28110:	mov	w0, #0xc                   	// #12
   28114:	str	w0, [sp, #172]
   28118:	b	28230 <printf_parse@@Base+0xf38>
   2811c:	mov	w0, #0xb                   	// #11
   28120:	str	w0, [sp, #172]
   28124:	b	28230 <printf_parse@@Base+0xf38>
   28128:	ldr	w0, [sp, #168]
   2812c:	cmp	w0, #0x7
   28130:	b.le	28140 <printf_parse@@Base+0xe48>
   28134:	mov	w0, #0xe                   	// #14
   28138:	str	w0, [sp, #172]
   2813c:	b	28230 <printf_parse@@Base+0xf38>
   28140:	mov	w0, #0xd                   	// #13
   28144:	str	w0, [sp, #172]
   28148:	b	28230 <printf_parse@@Base+0xf38>
   2814c:	mov	w0, #0xe                   	// #14
   28150:	str	w0, [sp, #172]
   28154:	mov	w0, #0x63                  	// #99
   28158:	strb	w0, [sp, #239]
   2815c:	b	28230 <printf_parse@@Base+0xf38>
   28160:	ldr	w0, [sp, #168]
   28164:	cmp	w0, #0x7
   28168:	b.le	28178 <printf_parse@@Base+0xe80>
   2816c:	mov	w0, #0x10                  	// #16
   28170:	str	w0, [sp, #172]
   28174:	b	28230 <printf_parse@@Base+0xf38>
   28178:	mov	w0, #0xf                   	// #15
   2817c:	str	w0, [sp, #172]
   28180:	b	28230 <printf_parse@@Base+0xf38>
   28184:	mov	w0, #0x10                  	// #16
   28188:	str	w0, [sp, #172]
   2818c:	mov	w0, #0x73                  	// #115
   28190:	strb	w0, [sp, #239]
   28194:	b	28230 <printf_parse@@Base+0xf38>
   28198:	mov	w0, #0x11                  	// #17
   2819c:	str	w0, [sp, #172]
   281a0:	b	28230 <printf_parse@@Base+0xf38>
   281a4:	ldr	w0, [sp, #168]
   281a8:	cmp	w0, #0xf
   281ac:	b.gt	281c0 <printf_parse@@Base+0xec8>
   281b0:	ldr	w0, [sp, #168]
   281b4:	and	w0, w0, #0x4
   281b8:	cmp	w0, #0x0
   281bc:	b.eq	281cc <printf_parse@@Base+0xed4>  // b.none
   281c0:	mov	w0, #0x16                  	// #22
   281c4:	str	w0, [sp, #172]
   281c8:	b	28230 <printf_parse@@Base+0xf38>
   281cc:	ldr	w0, [sp, #168]
   281d0:	cmp	w0, #0x7
   281d4:	b.le	281e4 <printf_parse@@Base+0xeec>
   281d8:	mov	w0, #0x15                  	// #21
   281dc:	str	w0, [sp, #172]
   281e0:	b	28230 <printf_parse@@Base+0xf38>
   281e4:	ldr	w0, [sp, #168]
   281e8:	and	w0, w0, #0x2
   281ec:	cmp	w0, #0x0
   281f0:	b.eq	28200 <printf_parse@@Base+0xf08>  // b.none
   281f4:	mov	w0, #0x12                  	// #18
   281f8:	str	w0, [sp, #172]
   281fc:	b	28230 <printf_parse@@Base+0xf38>
   28200:	ldr	w0, [sp, #168]
   28204:	and	w0, w0, #0x1
   28208:	cmp	w0, #0x0
   2820c:	b.eq	2821c <printf_parse@@Base+0xf24>  // b.none
   28210:	mov	w0, #0x13                  	// #19
   28214:	str	w0, [sp, #172]
   28218:	b	28230 <printf_parse@@Base+0xf38>
   2821c:	mov	w0, #0x14                  	// #20
   28220:	str	w0, [sp, #172]
   28224:	b	28230 <printf_parse@@Base+0xf38>
   28228:	str	wzr, [sp, #172]
   2822c:	nop
   28230:	ldr	w0, [sp, #172]
   28234:	cmp	w0, #0x0
   28238:	b.eq	28434 <printf_parse@@Base+0x113c>  // b.none
   2823c:	ldr	x0, [sp, #160]
   28240:	ldr	x1, [sp, #224]
   28244:	str	x1, [x0, #80]
   28248:	ldr	x0, [sp, #160]
   2824c:	ldr	x0, [x0, #80]
   28250:	cmn	x0, #0x1
   28254:	b.ne	2827c <printf_parse@@Base+0xf84>  // b.any
   28258:	ldr	x0, [sp, #272]
   2825c:	add	x1, x0, #0x1
   28260:	str	x1, [sp, #272]
   28264:	ldr	x1, [sp, #160]
   28268:	str	x0, [x1, #80]
   2826c:	ldr	x0, [sp, #160]
   28270:	ldr	x0, [x0, #80]
   28274:	cmn	x0, #0x1
   28278:	b.eq	28630 <printf_parse@@Base+0x1338>  // b.none
   2827c:	ldr	x0, [sp, #160]
   28280:	ldr	x0, [x0, #80]
   28284:	str	x0, [sp, #88]
   28288:	ldr	x1, [sp, #88]
   2828c:	ldr	x0, [sp, #256]
   28290:	cmp	x1, x0
   28294:	b.cc	283bc <printf_parse@@Base+0x10c4>  // b.lo, b.ul, b.last
   28298:	ldr	x0, [sp, #256]
   2829c:	cmp	x0, #0x0
   282a0:	b.lt	282b0 <printf_parse@@Base+0xfb8>  // b.tstop
   282a4:	ldr	x0, [sp, #256]
   282a8:	lsl	x0, x0, #1
   282ac:	b	282b4 <printf_parse@@Base+0xfbc>
   282b0:	mov	x0, #0xffffffffffffffff    	// #-1
   282b4:	str	x0, [sp, #256]
   282b8:	ldr	x1, [sp, #256]
   282bc:	ldr	x0, [sp, #88]
   282c0:	cmp	x1, x0
   282c4:	b.hi	282d8 <printf_parse@@Base+0xfe0>  // b.pmore
   282c8:	mov	x1, #0x1                   	// #1
   282cc:	ldr	x0, [sp, #88]
   282d0:	bl	ac80 <xsum@plt>
   282d4:	str	x0, [sp, #256]
   282d8:	ldr	x1, [sp, #256]
   282dc:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   282e0:	cmp	x1, x0
   282e4:	b.hi	282f4 <printf_parse@@Base+0xffc>  // b.pmore
   282e8:	ldr	x0, [sp, #256]
   282ec:	lsl	x0, x0, #5
   282f0:	b	282f8 <printf_parse@@Base+0x1000>
   282f4:	mov	x0, #0xffffffffffffffff    	// #-1
   282f8:	str	x0, [sp, #80]
   282fc:	ldr	x0, [sp, #80]
   28300:	cmn	x0, #0x1
   28304:	b.eq	286bc <printf_parse@@Base+0x13c4>  // b.none
   28308:	ldr	x0, [sp, #24]
   2830c:	ldr	x1, [x0, #8]
   28310:	ldr	x0, [sp, #24]
   28314:	add	x0, x0, #0x10
   28318:	cmp	x1, x0
   2831c:	b.eq	28334 <printf_parse@@Base+0x103c>  // b.none
   28320:	ldr	x0, [sp, #24]
   28324:	ldr	x0, [x0, #8]
   28328:	ldr	x1, [sp, #80]
   2832c:	bl	ae00 <realloc@plt>
   28330:	b	2833c <printf_parse@@Base+0x1044>
   28334:	ldr	x0, [sp, #80]
   28338:	bl	ab40 <malloc@plt>
   2833c:	str	x0, [sp, #72]
   28340:	ldr	x0, [sp, #72]
   28344:	cmp	x0, #0x0
   28348:	b.eq	286c4 <printf_parse@@Base+0x13cc>  // b.none
   2834c:	ldr	x0, [sp, #24]
   28350:	ldr	x1, [x0, #8]
   28354:	ldr	x0, [sp, #24]
   28358:	add	x0, x0, #0x10
   2835c:	cmp	x1, x0
   28360:	b.ne	28384 <printf_parse@@Base+0x108c>  // b.any
   28364:	ldr	x0, [sp, #24]
   28368:	ldr	x1, [x0, #8]
   2836c:	ldr	x0, [sp, #24]
   28370:	ldr	x0, [x0]
   28374:	lsl	x0, x0, #5
   28378:	mov	x2, x0
   2837c:	ldr	x0, [sp, #72]
   28380:	bl	a790 <memcpy@plt>
   28384:	ldr	x0, [sp, #24]
   28388:	ldr	x1, [sp, #72]
   2838c:	str	x1, [x0, #8]
   28390:	b	283bc <printf_parse@@Base+0x10c4>
   28394:	ldr	x0, [sp, #24]
   28398:	ldr	x1, [x0, #8]
   2839c:	ldr	x0, [sp, #24]
   283a0:	ldr	x0, [x0]
   283a4:	add	x3, x0, #0x1
   283a8:	ldr	x2, [sp, #24]
   283ac:	str	x3, [x2]
   283b0:	lsl	x0, x0, #5
   283b4:	add	x0, x1, x0
   283b8:	str	wzr, [x0]
   283bc:	ldr	x0, [sp, #24]
   283c0:	ldr	x0, [x0]
   283c4:	ldr	x1, [sp, #88]
   283c8:	cmp	x1, x0
   283cc:	b.cs	28394 <printf_parse@@Base+0x109c>  // b.hs, b.nlast
   283d0:	ldr	x0, [sp, #24]
   283d4:	ldr	x1, [x0, #8]
   283d8:	ldr	x0, [sp, #88]
   283dc:	lsl	x0, x0, #5
   283e0:	add	x0, x1, x0
   283e4:	ldr	w0, [x0]
   283e8:	cmp	w0, #0x0
   283ec:	b.ne	28410 <printf_parse@@Base+0x1118>  // b.any
   283f0:	ldr	x0, [sp, #24]
   283f4:	ldr	x1, [x0, #8]
   283f8:	ldr	x0, [sp, #88]
   283fc:	lsl	x0, x0, #5
   28400:	add	x0, x1, x0
   28404:	ldr	w1, [sp, #172]
   28408:	str	w1, [x0]
   2840c:	b	28434 <printf_parse@@Base+0x113c>
   28410:	ldr	x0, [sp, #24]
   28414:	ldr	x1, [x0, #8]
   28418:	ldr	x0, [sp, #88]
   2841c:	lsl	x0, x0, #5
   28420:	add	x0, x1, x0
   28424:	ldr	w0, [x0]
   28428:	ldr	w1, [sp, #172]
   2842c:	cmp	w1, w0
   28430:	b.ne	28638 <printf_parse@@Base+0x1340>  // b.any
   28434:	ldr	x0, [sp, #160]
   28438:	ldrb	w1, [sp, #239]
   2843c:	strb	w1, [x0, #72]
   28440:	ldr	x0, [sp, #160]
   28444:	ldr	x1, [sp, #280]
   28448:	str	x1, [x0, #8]
   2844c:	ldr	x0, [sp, #32]
   28450:	ldr	x0, [x0]
   28454:	add	x1, x0, #0x1
   28458:	ldr	x0, [sp, #32]
   2845c:	str	x1, [x0]
   28460:	ldr	x0, [sp, #32]
   28464:	ldr	x0, [x0]
   28468:	ldr	x1, [sp, #264]
   2846c:	cmp	x1, x0
   28470:	b.hi	28584 <printf_parse@@Base+0x128c>  // b.pmore
   28474:	ldr	x0, [sp, #264]
   28478:	cmp	x0, #0x0
   2847c:	b.lt	2848c <printf_parse@@Base+0x1194>  // b.tstop
   28480:	ldr	x0, [sp, #264]
   28484:	lsl	x0, x0, #1
   28488:	b	28490 <printf_parse@@Base+0x1198>
   2848c:	mov	x0, #0xffffffffffffffff    	// #-1
   28490:	str	x0, [sp, #264]
   28494:	ldr	x1, [sp, #264]
   28498:	mov	x0, #0xe8ba                	// #59578
   2849c:	movk	x0, #0x8ba2, lsl #16
   284a0:	movk	x0, #0xba2e, lsl #32
   284a4:	movk	x0, #0x2e8, lsl #48
   284a8:	cmp	x1, x0
   284ac:	b.hi	284d0 <printf_parse@@Base+0x11d8>  // b.pmore
   284b0:	ldr	x1, [sp, #264]
   284b4:	mov	x0, x1
   284b8:	lsl	x0, x0, #1
   284bc:	add	x0, x0, x1
   284c0:	lsl	x0, x0, #2
   284c4:	sub	x0, x0, x1
   284c8:	lsl	x0, x0, #3
   284cc:	b	284d4 <printf_parse@@Base+0x11dc>
   284d0:	mov	x0, #0xffffffffffffffff    	// #-1
   284d4:	str	x0, [sp, #64]
   284d8:	ldr	x0, [sp, #64]
   284dc:	cmn	x0, #0x1
   284e0:	b.eq	286cc <printf_parse@@Base+0x13d4>  // b.none
   284e4:	ldr	x0, [sp, #32]
   284e8:	ldr	x1, [x0, #8]
   284ec:	ldr	x0, [sp, #32]
   284f0:	add	x0, x0, #0x20
   284f4:	cmp	x1, x0
   284f8:	b.eq	28510 <printf_parse@@Base+0x1218>  // b.none
   284fc:	ldr	x0, [sp, #32]
   28500:	ldr	x0, [x0, #8]
   28504:	ldr	x1, [sp, #64]
   28508:	bl	ae00 <realloc@plt>
   2850c:	b	28518 <printf_parse@@Base+0x1220>
   28510:	ldr	x0, [sp, #64]
   28514:	bl	ab40 <malloc@plt>
   28518:	str	x0, [sp, #56]
   2851c:	ldr	x0, [sp, #56]
   28520:	cmp	x0, #0x0
   28524:	b.eq	286d4 <printf_parse@@Base+0x13dc>  // b.none
   28528:	ldr	x0, [sp, #32]
   2852c:	ldr	x1, [x0, #8]
   28530:	ldr	x0, [sp, #32]
   28534:	add	x0, x0, #0x20
   28538:	cmp	x1, x0
   2853c:	b.ne	28578 <printf_parse@@Base+0x1280>  // b.any
   28540:	ldr	x0, [sp, #32]
   28544:	ldr	x3, [x0, #8]
   28548:	ldr	x0, [sp, #32]
   2854c:	ldr	x1, [x0]
   28550:	mov	x0, x1
   28554:	lsl	x0, x0, #1
   28558:	add	x0, x0, x1
   2855c:	lsl	x0, x0, #2
   28560:	sub	x0, x0, x1
   28564:	lsl	x0, x0, #3
   28568:	mov	x2, x0
   2856c:	mov	x1, x3
   28570:	ldr	x0, [sp, #56]
   28574:	bl	a790 <memcpy@plt>
   28578:	ldr	x0, [sp, #32]
   2857c:	ldr	x1, [sp, #56]
   28580:	str	x1, [x0, #8]
   28584:	ldr	x0, [sp, #280]
   28588:	ldrb	w0, [x0]
   2858c:	cmp	w0, #0x0
   28590:	b.ne	27364 <printf_parse@@Base+0x6c>  // b.any
   28594:	ldr	x0, [sp, #32]
   28598:	ldr	x2, [x0, #8]
   2859c:	ldr	x0, [sp, #32]
   285a0:	ldr	x1, [x0]
   285a4:	mov	x0, x1
   285a8:	lsl	x0, x0, #1
   285ac:	add	x0, x0, x1
   285b0:	lsl	x0, x0, #2
   285b4:	sub	x0, x0, x1
   285b8:	lsl	x0, x0, #3
   285bc:	add	x0, x2, x0
   285c0:	ldr	x1, [sp, #280]
   285c4:	str	x1, [x0]
   285c8:	ldr	x0, [sp, #32]
   285cc:	ldr	x1, [sp, #248]
   285d0:	str	x1, [x0, #16]
   285d4:	ldr	x0, [sp, #32]
   285d8:	ldr	x1, [sp, #240]
   285dc:	str	x1, [x0, #24]
   285e0:	mov	w0, #0x0                   	// #0
   285e4:	b	28734 <printf_parse@@Base+0x143c>
   285e8:	nop
   285ec:	b	2863c <printf_parse@@Base+0x1344>
   285f0:	nop
   285f4:	b	2863c <printf_parse@@Base+0x1344>
   285f8:	nop
   285fc:	b	2863c <printf_parse@@Base+0x1344>
   28600:	nop
   28604:	b	2863c <printf_parse@@Base+0x1344>
   28608:	nop
   2860c:	b	2863c <printf_parse@@Base+0x1344>
   28610:	nop
   28614:	b	2863c <printf_parse@@Base+0x1344>
   28618:	nop
   2861c:	b	2863c <printf_parse@@Base+0x1344>
   28620:	nop
   28624:	b	2863c <printf_parse@@Base+0x1344>
   28628:	nop
   2862c:	b	2863c <printf_parse@@Base+0x1344>
   28630:	nop
   28634:	b	2863c <printf_parse@@Base+0x1344>
   28638:	nop
   2863c:	ldr	x0, [sp, #24]
   28640:	ldr	x1, [x0, #8]
   28644:	ldr	x0, [sp, #24]
   28648:	add	x0, x0, #0x10
   2864c:	cmp	x1, x0
   28650:	b.eq	28660 <printf_parse@@Base+0x1368>  // b.none
   28654:	ldr	x0, [sp, #24]
   28658:	ldr	x0, [x0, #8]
   2865c:	bl	b130 <free@plt>
   28660:	ldr	x0, [sp, #32]
   28664:	ldr	x1, [x0, #8]
   28668:	ldr	x0, [sp, #32]
   2866c:	add	x0, x0, #0x20
   28670:	cmp	x1, x0
   28674:	b.eq	28684 <printf_parse@@Base+0x138c>  // b.none
   28678:	ldr	x0, [sp, #32]
   2867c:	ldr	x0, [x0, #8]
   28680:	bl	b130 <free@plt>
   28684:	bl	b640 <__errno_location@plt>
   28688:	mov	x1, x0
   2868c:	mov	w0, #0x16                  	// #22
   28690:	str	w0, [x1]
   28694:	mov	w0, #0xffffffff            	// #-1
   28698:	b	28734 <printf_parse@@Base+0x143c>
   2869c:	nop
   286a0:	b	286d8 <printf_parse@@Base+0x13e0>
   286a4:	nop
   286a8:	b	286d8 <printf_parse@@Base+0x13e0>
   286ac:	nop
   286b0:	b	286d8 <printf_parse@@Base+0x13e0>
   286b4:	nop
   286b8:	b	286d8 <printf_parse@@Base+0x13e0>
   286bc:	nop
   286c0:	b	286d8 <printf_parse@@Base+0x13e0>
   286c4:	nop
   286c8:	b	286d8 <printf_parse@@Base+0x13e0>
   286cc:	nop
   286d0:	b	286d8 <printf_parse@@Base+0x13e0>
   286d4:	nop
   286d8:	ldr	x0, [sp, #24]
   286dc:	ldr	x1, [x0, #8]
   286e0:	ldr	x0, [sp, #24]
   286e4:	add	x0, x0, #0x10
   286e8:	cmp	x1, x0
   286ec:	b.eq	286fc <printf_parse@@Base+0x1404>  // b.none
   286f0:	ldr	x0, [sp, #24]
   286f4:	ldr	x0, [x0, #8]
   286f8:	bl	b130 <free@plt>
   286fc:	ldr	x0, [sp, #32]
   28700:	ldr	x1, [x0, #8]
   28704:	ldr	x0, [sp, #32]
   28708:	add	x0, x0, #0x20
   2870c:	cmp	x1, x0
   28710:	b.eq	28720 <printf_parse@@Base+0x1428>  // b.none
   28714:	ldr	x0, [sp, #32]
   28718:	ldr	x0, [x0, #8]
   2871c:	bl	b130 <free@plt>
   28720:	bl	b640 <__errno_location@plt>
   28724:	mov	x1, x0
   28728:	mov	w0, #0xc                   	// #12
   2872c:	str	w0, [x1]
   28730:	mov	w0, #0xffffffff            	// #-1
   28734:	ldp	x29, x30, [sp], #288
   28738:	ret
   2873c:	sub	sp, sp, #0x10
   28740:	str	x0, [sp, #8]
   28744:	str	x1, [sp]
   28748:	ldr	x0, [sp]
   2874c:	add	x1, x0, #0x3f
   28750:	cmp	x0, #0x0
   28754:	csel	x0, x1, x0, lt  // lt = tstop
   28758:	asr	x0, x0, #6
   2875c:	mov	x3, x0
   28760:	mov	x0, x3
   28764:	lsl	x0, x0, #3
   28768:	ldr	x1, [sp, #8]
   2876c:	add	x0, x1, x0
   28770:	ldr	x2, [x0]
   28774:	ldr	x0, [sp]
   28778:	negs	x1, x0
   2877c:	and	x0, x0, #0x3f
   28780:	and	x1, x1, #0x3f
   28784:	csneg	x0, x0, x1, mi  // mi = first
   28788:	mov	w1, w0
   2878c:	mov	x0, #0x1                   	// #1
   28790:	lsl	x1, x0, x1
   28794:	mov	x0, x3
   28798:	lsl	x0, x0, #3
   2879c:	ldr	x3, [sp, #8]
   287a0:	add	x0, x3, x0
   287a4:	orr	x1, x2, x1
   287a8:	str	x1, [x0]
   287ac:	nop
   287b0:	add	sp, sp, #0x10
   287b4:	ret
   287b8:	sub	sp, sp, #0x10
   287bc:	str	x0, [sp, #8]
   287c0:	str	x1, [sp]
   287c4:	ldr	x0, [sp]
   287c8:	add	x1, x0, #0x3f
   287cc:	cmp	x0, #0x0
   287d0:	csel	x0, x1, x0, lt  // lt = tstop
   287d4:	asr	x0, x0, #6
   287d8:	mov	x3, x0
   287dc:	mov	x0, x3
   287e0:	lsl	x0, x0, #3
   287e4:	ldr	x1, [sp, #8]
   287e8:	add	x0, x1, x0
   287ec:	ldr	x2, [x0]
   287f0:	ldr	x0, [sp]
   287f4:	negs	x1, x0
   287f8:	and	x0, x0, #0x3f
   287fc:	and	x1, x1, #0x3f
   28800:	csneg	x0, x0, x1, mi  // mi = first
   28804:	mov	w1, w0
   28808:	mov	x0, #0x1                   	// #1
   2880c:	lsl	x0, x0, x1
   28810:	mvn	x1, x0
   28814:	mov	x0, x3
   28818:	lsl	x0, x0, #3
   2881c:	ldr	x3, [sp, #8]
   28820:	add	x0, x3, x0
   28824:	and	x1, x2, x1
   28828:	str	x1, [x0]
   2882c:	nop
   28830:	add	sp, sp, #0x10
   28834:	ret
   28838:	sub	sp, sp, #0x10
   2883c:	str	x0, [sp, #8]
   28840:	str	x1, [sp]
   28844:	ldr	x0, [sp]
   28848:	add	x1, x0, #0x3f
   2884c:	cmp	x0, #0x0
   28850:	csel	x0, x1, x0, lt  // lt = tstop
   28854:	asr	x0, x0, #6
   28858:	lsl	x0, x0, #3
   2885c:	ldr	x1, [sp, #8]
   28860:	add	x0, x1, x0
   28864:	ldr	x1, [x0]
   28868:	ldr	x0, [sp]
   2886c:	negs	x2, x0
   28870:	and	x0, x0, #0x3f
   28874:	and	x2, x2, #0x3f
   28878:	csneg	x0, x0, x2, mi  // mi = first
   2887c:	lsr	x0, x1, x0
   28880:	and	x0, x0, #0x1
   28884:	cmp	x0, #0x0
   28888:	cset	w0, ne  // ne = any
   2888c:	and	w0, w0, #0xff
   28890:	add	sp, sp, #0x10
   28894:	ret
   28898:	stp	x29, x30, [sp, #-32]!
   2889c:	mov	x29, sp
   288a0:	str	x0, [sp, #24]
   288a4:	mov	x2, #0x20                  	// #32
   288a8:	mov	w1, #0x0                   	// #0
   288ac:	ldr	x0, [sp, #24]
   288b0:	bl	acb0 <memset@plt>
   288b4:	nop
   288b8:	ldp	x29, x30, [sp], #32
   288bc:	ret
   288c0:	stp	x29, x30, [sp, #-32]!
   288c4:	mov	x29, sp
   288c8:	str	x0, [sp, #24]
   288cc:	mov	x2, #0x20                  	// #32
   288d0:	mov	w1, #0xffffffff            	// #-1
   288d4:	ldr	x0, [sp, #24]
   288d8:	bl	acb0 <memset@plt>
   288dc:	nop
   288e0:	ldp	x29, x30, [sp], #32
   288e4:	ret
   288e8:	stp	x29, x30, [sp, #-32]!
   288ec:	mov	x29, sp
   288f0:	str	x0, [sp, #24]
   288f4:	str	x1, [sp, #16]
   288f8:	mov	x2, #0x20                  	// #32
   288fc:	ldr	x1, [sp, #16]
   28900:	ldr	x0, [sp, #24]
   28904:	bl	a790 <memcpy@plt>
   28908:	nop
   2890c:	ldp	x29, x30, [sp], #32
   28910:	ret
   28914:	sub	sp, sp, #0x20
   28918:	str	x0, [sp, #8]
   2891c:	str	wzr, [sp, #28]
   28920:	b	2895c <printf_parse@@Base+0x1664>
   28924:	ldrsw	x0, [sp, #28]
   28928:	lsl	x0, x0, #3
   2892c:	ldr	x1, [sp, #8]
   28930:	add	x0, x1, x0
   28934:	ldr	x1, [x0]
   28938:	ldrsw	x0, [sp, #28]
   2893c:	lsl	x0, x0, #3
   28940:	ldr	x2, [sp, #8]
   28944:	add	x0, x2, x0
   28948:	mvn	x1, x1
   2894c:	str	x1, [x0]
   28950:	ldr	w0, [sp, #28]
   28954:	add	w0, w0, #0x1
   28958:	str	w0, [sp, #28]
   2895c:	ldr	w0, [sp, #28]
   28960:	cmp	w0, #0x3
   28964:	b.le	28924 <printf_parse@@Base+0x162c>
   28968:	nop
   2896c:	nop
   28970:	add	sp, sp, #0x20
   28974:	ret
   28978:	sub	sp, sp, #0x20
   2897c:	str	x0, [sp, #8]
   28980:	str	x1, [sp]
   28984:	str	wzr, [sp, #28]
   28988:	b	289d8 <printf_parse@@Base+0x16e0>
   2898c:	ldrsw	x0, [sp, #28]
   28990:	lsl	x0, x0, #3
   28994:	ldr	x1, [sp, #8]
   28998:	add	x0, x1, x0
   2899c:	ldr	x2, [x0]
   289a0:	ldrsw	x0, [sp, #28]
   289a4:	lsl	x0, x0, #3
   289a8:	ldr	x1, [sp]
   289ac:	add	x0, x1, x0
   289b0:	ldr	x1, [x0]
   289b4:	ldrsw	x0, [sp, #28]
   289b8:	lsl	x0, x0, #3
   289bc:	ldr	x3, [sp, #8]
   289c0:	add	x0, x3, x0
   289c4:	orr	x1, x2, x1
   289c8:	str	x1, [x0]
   289cc:	ldr	w0, [sp, #28]
   289d0:	add	w0, w0, #0x1
   289d4:	str	w0, [sp, #28]
   289d8:	ldr	w0, [sp, #28]
   289dc:	cmp	w0, #0x3
   289e0:	b.le	2898c <printf_parse@@Base+0x1694>
   289e4:	nop
   289e8:	nop
   289ec:	add	sp, sp, #0x20
   289f0:	ret
   289f4:	sub	sp, sp, #0x20
   289f8:	str	x0, [sp, #8]
   289fc:	str	x1, [sp]
   28a00:	str	wzr, [sp, #28]
   28a04:	b	28a54 <printf_parse@@Base+0x175c>
   28a08:	ldrsw	x0, [sp, #28]
   28a0c:	lsl	x0, x0, #3
   28a10:	ldr	x1, [sp, #8]
   28a14:	add	x0, x1, x0
   28a18:	ldr	x2, [x0]
   28a1c:	ldrsw	x0, [sp, #28]
   28a20:	lsl	x0, x0, #3
   28a24:	ldr	x1, [sp]
   28a28:	add	x0, x1, x0
   28a2c:	ldr	x1, [x0]
   28a30:	ldrsw	x0, [sp, #28]
   28a34:	lsl	x0, x0, #3
   28a38:	ldr	x3, [sp, #8]
   28a3c:	add	x0, x3, x0
   28a40:	and	x1, x2, x1
   28a44:	str	x1, [x0]
   28a48:	ldr	w0, [sp, #28]
   28a4c:	add	w0, w0, #0x1
   28a50:	str	w0, [sp, #28]
   28a54:	ldr	w0, [sp, #28]
   28a58:	cmp	w0, #0x3
   28a5c:	b.le	28a08 <printf_parse@@Base+0x1710>
   28a60:	nop
   28a64:	nop
   28a68:	add	sp, sp, #0x20
   28a6c:	ret
   28a70:	sub	sp, sp, #0x20
   28a74:	str	x0, [sp, #8]
   28a78:	str	x1, [sp]
   28a7c:	ldr	x0, [sp, #8]
   28a80:	ldr	w0, [x0, #144]
   28a84:	cmp	w0, #0x1
   28a88:	b.ne	28a94 <printf_parse@@Base+0x179c>  // b.any
   28a8c:	mov	w0, #0x1                   	// #1
   28a90:	b	28afc <printf_parse@@Base+0x1804>
   28a94:	mov	w0, #0x1                   	// #1
   28a98:	str	w0, [sp, #28]
   28a9c:	b	28ad4 <printf_parse@@Base+0x17dc>
   28aa0:	ldr	x0, [sp, #8]
   28aa4:	ldr	x1, [x0, #16]
   28aa8:	ldrsw	x2, [sp, #28]
   28aac:	ldr	x0, [sp]
   28ab0:	add	x0, x2, x0
   28ab4:	lsl	x0, x0, #2
   28ab8:	add	x0, x1, x0
   28abc:	ldr	w0, [x0]
   28ac0:	cmn	w0, #0x1
   28ac4:	b.ne	28af4 <printf_parse@@Base+0x17fc>  // b.any
   28ac8:	ldr	w0, [sp, #28]
   28acc:	add	w0, w0, #0x1
   28ad0:	str	w0, [sp, #28]
   28ad4:	ldrsw	x1, [sp, #28]
   28ad8:	ldr	x0, [sp]
   28adc:	add	x1, x1, x0
   28ae0:	ldr	x0, [sp, #8]
   28ae4:	ldr	x0, [x0, #48]
   28ae8:	cmp	x1, x0
   28aec:	b.lt	28aa0 <printf_parse@@Base+0x17a8>  // b.tstop
   28af0:	b	28af8 <printf_parse@@Base+0x1800>
   28af4:	nop
   28af8:	ldr	w0, [sp, #28]
   28afc:	add	sp, sp, #0x20
   28b00:	ret
   28b04:	sub	sp, sp, #0x10
   28b08:	str	x0, [sp, #8]
   28b0c:	str	x1, [sp]
   28b10:	ldr	x0, [sp, #8]
   28b14:	ldr	w0, [x0, #144]
   28b18:	cmp	w0, #0x1
   28b1c:	b.ne	28b38 <printf_parse@@Base+0x1840>  // b.any
   28b20:	ldr	x0, [sp, #8]
   28b24:	ldr	x1, [x0, #8]
   28b28:	ldr	x0, [sp]
   28b2c:	add	x0, x1, x0
   28b30:	ldrb	w0, [x0]
   28b34:	b	28b50 <printf_parse@@Base+0x1858>
   28b38:	ldr	x0, [sp, #8]
   28b3c:	ldr	x1, [x0, #16]
   28b40:	ldr	x0, [sp]
   28b44:	lsl	x0, x0, #2
   28b48:	add	x0, x1, x0
   28b4c:	ldr	w0, [x0]
   28b50:	add	sp, sp, #0x10
   28b54:	ret
   28b58:	sub	sp, sp, #0x10
   28b5c:	str	x0, [sp, #8]
   28b60:	str	x1, [sp]
   28b64:	mov	w0, #0x1                   	// #1
   28b68:	add	sp, sp, #0x10
   28b6c:	ret
   28b70:	stp	x29, x30, [sp, #-96]!
   28b74:	mov	x29, sp
   28b78:	str	x0, [sp, #72]
   28b7c:	str	x1, [sp, #64]
   28b80:	str	x2, [sp, #56]
   28b84:	str	x3, [sp, #48]
   28b88:	str	x4, [sp, #40]
   28b8c:	strb	w5, [sp, #39]
   28b90:	str	x6, [sp, #24]
   28b94:	ldr	x0, [sp, #24]
   28b98:	ldr	w0, [x0, #180]
   28b9c:	sxtw	x0, w0
   28ba0:	ldr	x1, [sp, #48]
   28ba4:	cmp	x1, x0
   28ba8:	b.ge	28bbc <printf_parse@@Base+0x18c4>  // b.tcont
   28bac:	ldr	x0, [sp, #24]
   28bb0:	ldr	w0, [x0, #180]
   28bb4:	sxtw	x0, w0
   28bb8:	str	x0, [sp, #48]
   28bbc:	ldr	x0, [sp, #56]
   28bc0:	add	x0, x0, #0x1
   28bc4:	ldr	x2, [sp, #48]
   28bc8:	ldr	x1, [sp, #48]
   28bcc:	cmp	x2, x0
   28bd0:	csel	x0, x1, x0, le
   28bd4:	str	x0, [sp, #88]
   28bd8:	ldr	x5, [sp, #24]
   28bdc:	ldrb	w4, [sp, #39]
   28be0:	ldr	x3, [sp, #40]
   28be4:	ldr	x2, [sp, #72]
   28be8:	ldr	x1, [sp, #56]
   28bec:	ldr	x0, [sp, #64]
   28bf0:	bl	2905c <printf_parse@@Base+0x1d64>
   28bf4:	ldr	x1, [sp, #88]
   28bf8:	ldr	x0, [sp, #72]
   28bfc:	bl	28ecc <printf_parse@@Base+0x1bd4>
   28c00:	str	w0, [sp, #84]
   28c04:	ldr	w0, [sp, #84]
   28c08:	cmp	w0, #0x0
   28c0c:	cset	w0, ne  // ne = any
   28c10:	and	w0, w0, #0xff
   28c14:	and	x0, x0, #0xff
   28c18:	cmp	x0, #0x0
   28c1c:	b.eq	28c28 <printf_parse@@Base+0x1930>  // b.none
   28c20:	ldr	w0, [sp, #84]
   28c24:	b	28cc4 <printf_parse@@Base+0x19cc>
   28c28:	ldr	x0, [sp, #24]
   28c2c:	add	x1, x0, #0xb8
   28c30:	ldr	x0, [sp, #72]
   28c34:	str	x1, [x0, #128]
   28c38:	ldr	x0, [sp, #24]
   28c3c:	ldrb	w0, [x0, #176]
   28c40:	ubfx	x0, x0, #4, #1
   28c44:	and	w0, w0, #0xff
   28c48:	mov	w1, w0
   28c4c:	ldr	x0, [sp, #72]
   28c50:	strb	w1, [x0, #142]
   28c54:	ldr	x0, [sp, #72]
   28c58:	ldrb	w0, [x0, #139]
   28c5c:	cmp	w0, #0x0
   28c60:	b.eq	28c70 <printf_parse@@Base+0x1978>  // b.none
   28c64:	ldr	x0, [sp, #72]
   28c68:	ldr	x0, [x0, #8]
   28c6c:	b	28c74 <printf_parse@@Base+0x197c>
   28c70:	ldr	x0, [sp, #64]
   28c74:	ldr	x1, [sp, #72]
   28c78:	str	x0, [x1, #8]
   28c7c:	ldr	x0, [sp, #72]
   28c80:	ldrb	w0, [x0, #139]
   28c84:	cmp	w0, #0x0
   28c88:	b.ne	28ca4 <printf_parse@@Base+0x19ac>  // b.any
   28c8c:	ldr	x0, [sp, #24]
   28c90:	ldr	w0, [x0, #180]
   28c94:	cmp	w0, #0x1
   28c98:	b.gt	28ca4 <printf_parse@@Base+0x19ac>
   28c9c:	ldr	x0, [sp, #56]
   28ca0:	b	28ca8 <printf_parse@@Base+0x19b0>
   28ca4:	mov	x0, #0x0                   	// #0
   28ca8:	ldr	x1, [sp, #72]
   28cac:	str	x0, [x1, #48]
   28cb0:	ldr	x0, [sp, #72]
   28cb4:	ldr	x1, [x0, #48]
   28cb8:	ldr	x0, [sp, #72]
   28cbc:	str	x1, [x0, #56]
   28cc0:	mov	w0, #0x0                   	// #0
   28cc4:	ldp	x29, x30, [sp], #96
   28cc8:	ret
   28ccc:	stp	x29, x30, [sp, #-80]!
   28cd0:	mov	x29, sp
   28cd4:	str	x0, [sp, #56]
   28cd8:	str	x1, [sp, #48]
   28cdc:	str	x2, [sp, #40]
   28ce0:	str	x3, [sp, #32]
   28ce4:	strb	w4, [sp, #31]
   28ce8:	str	x5, [sp, #16]
   28cec:	mov	x2, #0x98                  	// #152
   28cf0:	mov	w1, #0x0                   	// #0
   28cf4:	ldr	x0, [sp, #56]
   28cf8:	bl	acb0 <memset@plt>
   28cfc:	ldr	x5, [sp, #16]
   28d00:	ldrb	w4, [sp, #31]
   28d04:	ldr	x3, [sp, #32]
   28d08:	ldr	x2, [sp, #56]
   28d0c:	ldr	x1, [sp, #40]
   28d10:	ldr	x0, [sp, #48]
   28d14:	bl	2905c <printf_parse@@Base+0x1d64>
   28d18:	ldr	x0, [sp, #40]
   28d1c:	cmp	x0, #0x0
   28d20:	b.le	28d60 <printf_parse@@Base+0x1a68>
   28d24:	ldr	x0, [sp, #40]
   28d28:	add	x0, x0, #0x1
   28d2c:	mov	x1, x0
   28d30:	ldr	x0, [sp, #56]
   28d34:	bl	28ecc <printf_parse@@Base+0x1bd4>
   28d38:	str	w0, [sp, #76]
   28d3c:	ldr	w0, [sp, #76]
   28d40:	cmp	w0, #0x0
   28d44:	cset	w0, ne  // ne = any
   28d48:	and	w0, w0, #0xff
   28d4c:	and	x0, x0, #0xff
   28d50:	cmp	x0, #0x0
   28d54:	b.eq	28d60 <printf_parse@@Base+0x1a68>  // b.none
   28d58:	ldr	w0, [sp, #76]
   28d5c:	b	28ec4 <printf_parse@@Base+0x1bcc>
   28d60:	ldr	x0, [sp, #56]
   28d64:	ldrb	w0, [x0, #139]
   28d68:	cmp	w0, #0x0
   28d6c:	b.eq	28d7c <printf_parse@@Base+0x1a84>  // b.none
   28d70:	ldr	x0, [sp, #56]
   28d74:	ldr	x0, [x0, #8]
   28d78:	b	28d80 <printf_parse@@Base+0x1a88>
   28d7c:	ldr	x0, [sp, #48]
   28d80:	ldr	x1, [sp, #56]
   28d84:	str	x0, [x1, #8]
   28d88:	ldrb	w0, [sp, #31]
   28d8c:	cmp	w0, #0x0
   28d90:	b.eq	28e5c <printf_parse@@Base+0x1b64>  // b.none
   28d94:	ldr	x0, [sp, #16]
   28d98:	ldr	w0, [x0, #180]
   28d9c:	cmp	w0, #0x1
   28da0:	b.le	28e50 <printf_parse@@Base+0x1b58>
   28da4:	ldr	x0, [sp, #56]
   28da8:	bl	294b0 <printf_parse@@Base+0x21b8>
   28dac:	str	w0, [sp, #76]
   28db0:	ldr	w0, [sp, #76]
   28db4:	cmp	w0, #0x0
   28db8:	cset	w0, ne  // ne = any
   28dbc:	and	w0, w0, #0xff
   28dc0:	and	x0, x0, #0xff
   28dc4:	cmp	x0, #0x0
   28dc8:	b.eq	28dd4 <printf_parse@@Base+0x1adc>  // b.none
   28dcc:	ldr	w0, [sp, #76]
   28dd0:	b	28ec4 <printf_parse@@Base+0x1bcc>
   28dd4:	ldr	x0, [sp, #56]
   28dd8:	ldr	x0, [x0, #56]
   28ddc:	ldr	x1, [sp, #40]
   28de0:	cmp	x1, x0
   28de4:	b.le	28eb4 <printf_parse@@Base+0x1bbc>
   28de8:	ldr	x0, [sp, #56]
   28dec:	ldr	x1, [x0, #64]
   28df0:	ldr	x0, [sp, #56]
   28df4:	ldr	x2, [x0, #48]
   28df8:	ldr	x0, [sp, #16]
   28dfc:	ldr	w0, [x0, #180]
   28e00:	sxtw	x0, w0
   28e04:	add	x0, x2, x0
   28e08:	cmp	x1, x0
   28e0c:	b.gt	28ebc <printf_parse@@Base+0x1bc4>
   28e10:	ldr	x0, [sp, #56]
   28e14:	ldr	x0, [x0, #64]
   28e18:	lsl	x0, x0, #1
   28e1c:	mov	x1, x0
   28e20:	ldr	x0, [sp, #56]
   28e24:	bl	28ecc <printf_parse@@Base+0x1bd4>
   28e28:	str	w0, [sp, #76]
   28e2c:	ldr	w0, [sp, #76]
   28e30:	cmp	w0, #0x0
   28e34:	cset	w0, ne  // ne = any
   28e38:	and	w0, w0, #0xff
   28e3c:	and	x0, x0, #0xff
   28e40:	cmp	x0, #0x0
   28e44:	b.eq	28da4 <printf_parse@@Base+0x1aac>  // b.none
   28e48:	ldr	w0, [sp, #76]
   28e4c:	b	28ec4 <printf_parse@@Base+0x1bcc>
   28e50:	ldr	x0, [sp, #56]
   28e54:	bl	2a124 <printf_parse@@Base+0x2e2c>
   28e58:	b	28ec0 <printf_parse@@Base+0x1bc8>
   28e5c:	ldr	x0, [sp, #16]
   28e60:	ldr	w0, [x0, #180]
   28e64:	cmp	w0, #0x1
   28e68:	b.le	28e78 <printf_parse@@Base+0x1b80>
   28e6c:	ldr	x0, [sp, #56]
   28e70:	bl	29158 <printf_parse@@Base+0x1e60>
   28e74:	b	28ec0 <printf_parse@@Base+0x1bc8>
   28e78:	ldr	x0, [sp, #32]
   28e7c:	cmp	x0, #0x0
   28e80:	b.eq	28e90 <printf_parse@@Base+0x1b98>  // b.none
   28e84:	ldr	x0, [sp, #56]
   28e88:	bl	2a21c <printf_parse@@Base+0x2f24>
   28e8c:	b	28ec0 <printf_parse@@Base+0x1bc8>
   28e90:	ldr	x0, [sp, #56]
   28e94:	ldr	x1, [x0, #64]
   28e98:	ldr	x0, [sp, #56]
   28e9c:	str	x1, [x0, #48]
   28ea0:	ldr	x0, [sp, #56]
   28ea4:	ldr	x1, [x0, #64]
   28ea8:	ldr	x0, [sp, #56]
   28eac:	str	x1, [x0, #56]
   28eb0:	b	28ec0 <printf_parse@@Base+0x1bc8>
   28eb4:	nop
   28eb8:	b	28ec0 <printf_parse@@Base+0x1bc8>
   28ebc:	nop
   28ec0:	mov	w0, #0x0                   	// #0
   28ec4:	ldp	x29, x30, [sp], #80
   28ec8:	ret
   28ecc:	stp	x29, x30, [sp, #-64]!
   28ed0:	mov	x29, sp
   28ed4:	str	x0, [sp, #24]
   28ed8:	str	x1, [sp, #16]
   28edc:	ldr	x0, [sp, #24]
   28ee0:	ldr	w0, [x0, #144]
   28ee4:	cmp	w0, #0x1
   28ee8:	b.le	28ff0 <printf_parse@@Base+0x1cf8>
   28eec:	mov	x0, #0x8                   	// #8
   28ef0:	str	x0, [sp, #56]
   28ef4:	mov	x1, #0xffffffffffffffff    	// #-1
   28ef8:	ldr	x0, [sp, #56]
   28efc:	udiv	x0, x1, x0
   28f00:	cmp	x0, #0x0
   28f04:	b.lt	28f18 <printf_parse@@Base+0x1c20>  // b.tstop
   28f08:	mov	x1, #0xffffffffffffffff    	// #-1
   28f0c:	ldr	x0, [sp, #56]
   28f10:	udiv	x0, x1, x0
   28f14:	b	28f1c <printf_parse@@Base+0x1c24>
   28f18:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   28f1c:	ldr	x1, [sp, #16]
   28f20:	cmp	x0, x1
   28f24:	cset	w0, cc  // cc = lo, ul, last
   28f28:	and	w0, w0, #0xff
   28f2c:	and	x0, x0, #0xff
   28f30:	cmp	x0, #0x0
   28f34:	b.eq	28f40 <printf_parse@@Base+0x1c48>  // b.none
   28f38:	mov	w0, #0xc                   	// #12
   28f3c:	b	29054 <printf_parse@@Base+0x1d5c>
   28f40:	ldr	x0, [sp, #24]
   28f44:	ldr	x2, [x0, #16]
   28f48:	ldr	x0, [sp, #16]
   28f4c:	lsl	x0, x0, #2
   28f50:	mov	x1, x0
   28f54:	mov	x0, x2
   28f58:	bl	ae00 <realloc@plt>
   28f5c:	str	x0, [sp, #48]
   28f60:	ldr	x0, [sp, #48]
   28f64:	cmp	x0, #0x0
   28f68:	cset	w0, eq  // eq = none
   28f6c:	and	w0, w0, #0xff
   28f70:	and	x0, x0, #0xff
   28f74:	cmp	x0, #0x0
   28f78:	b.eq	28f84 <printf_parse@@Base+0x1c8c>  // b.none
   28f7c:	mov	w0, #0xc                   	// #12
   28f80:	b	29054 <printf_parse@@Base+0x1d5c>
   28f84:	ldr	x0, [sp, #24]
   28f88:	ldr	x1, [sp, #48]
   28f8c:	str	x1, [x0, #16]
   28f90:	ldr	x0, [sp, #24]
   28f94:	ldr	x0, [x0, #24]
   28f98:	cmp	x0, #0x0
   28f9c:	b.eq	28ff0 <printf_parse@@Base+0x1cf8>  // b.none
   28fa0:	ldr	x0, [sp, #24]
   28fa4:	ldr	x2, [x0, #24]
   28fa8:	ldr	x0, [sp, #16]
   28fac:	lsl	x0, x0, #3
   28fb0:	mov	x1, x0
   28fb4:	mov	x0, x2
   28fb8:	bl	ae00 <realloc@plt>
   28fbc:	str	x0, [sp, #40]
   28fc0:	ldr	x0, [sp, #40]
   28fc4:	cmp	x0, #0x0
   28fc8:	cset	w0, eq  // eq = none
   28fcc:	and	w0, w0, #0xff
   28fd0:	and	x0, x0, #0xff
   28fd4:	cmp	x0, #0x0
   28fd8:	b.eq	28fe4 <printf_parse@@Base+0x1cec>  // b.none
   28fdc:	mov	w0, #0xc                   	// #12
   28fe0:	b	29054 <printf_parse@@Base+0x1d5c>
   28fe4:	ldr	x0, [sp, #24]
   28fe8:	ldr	x1, [sp, #40]
   28fec:	str	x1, [x0, #24]
   28ff0:	ldr	x0, [sp, #24]
   28ff4:	ldrb	w0, [x0, #139]
   28ff8:	cmp	w0, #0x0
   28ffc:	b.eq	29044 <printf_parse@@Base+0x1d4c>  // b.none
   29000:	ldr	x0, [sp, #24]
   29004:	ldr	x0, [x0, #8]
   29008:	ldr	x1, [sp, #16]
   2900c:	bl	ae00 <realloc@plt>
   29010:	str	x0, [sp, #32]
   29014:	ldr	x0, [sp, #32]
   29018:	cmp	x0, #0x0
   2901c:	cset	w0, eq  // eq = none
   29020:	and	w0, w0, #0xff
   29024:	and	x0, x0, #0xff
   29028:	cmp	x0, #0x0
   2902c:	b.eq	29038 <printf_parse@@Base+0x1d40>  // b.none
   29030:	mov	w0, #0xc                   	// #12
   29034:	b	29054 <printf_parse@@Base+0x1d5c>
   29038:	ldr	x0, [sp, #24]
   2903c:	ldr	x1, [sp, #32]
   29040:	str	x1, [x0, #8]
   29044:	ldr	x0, [sp, #24]
   29048:	ldr	x1, [sp, #16]
   2904c:	str	x1, [x0, #64]
   29050:	mov	w0, #0x0                   	// #0
   29054:	ldp	x29, x30, [sp], #64
   29058:	ret
   2905c:	sub	sp, sp, #0x30
   29060:	str	x0, [sp, #40]
   29064:	str	x1, [sp, #32]
   29068:	str	x2, [sp, #24]
   2906c:	str	x3, [sp, #16]
   29070:	strb	w4, [sp, #15]
   29074:	str	x5, [sp]
   29078:	ldr	x0, [sp, #24]
   2907c:	ldr	x1, [sp, #40]
   29080:	str	x1, [x0]
   29084:	ldr	x0, [sp, #24]
   29088:	ldr	x1, [sp, #32]
   2908c:	str	x1, [x0, #88]
   29090:	ldr	x0, [sp, #24]
   29094:	ldr	x1, [sp, #32]
   29098:	str	x1, [x0, #80]
   2909c:	ldr	x0, [sp, #24]
   290a0:	ldr	x1, [sp, #16]
   290a4:	str	x1, [x0, #120]
   290a8:	ldrb	w1, [sp, #15]
   290ac:	ldr	x0, [sp, #24]
   290b0:	strb	w1, [x0, #136]
   290b4:	ldr	x0, [sp, #16]
   290b8:	cmp	x0, #0x0
   290bc:	b.ne	290cc <printf_parse@@Base+0x1dd4>  // b.any
   290c0:	ldrb	w0, [sp, #15]
   290c4:	cmp	w0, #0x0
   290c8:	b.eq	290d4 <printf_parse@@Base+0x1ddc>  // b.none
   290cc:	mov	w0, #0x1                   	// #1
   290d0:	b	290d8 <printf_parse@@Base+0x1de0>
   290d4:	mov	w0, #0x0                   	// #0
   290d8:	and	w1, w0, #0xff
   290dc:	ldr	x0, [sp, #24]
   290e0:	strb	w1, [x0, #139]
   290e4:	ldr	x0, [sp]
   290e8:	ldr	w1, [x0, #180]
   290ec:	ldr	x0, [sp, #24]
   290f0:	str	w1, [x0, #144]
   290f4:	ldr	x0, [sp]
   290f8:	ldrb	w0, [x0, #176]
   290fc:	ubfx	x0, x0, #2, #1
   29100:	and	w0, w0, #0xff
   29104:	mov	w1, w0
   29108:	ldr	x0, [sp, #24]
   2910c:	strb	w1, [x0, #137]
   29110:	ldr	x0, [sp]
   29114:	ldrb	w0, [x0, #176]
   29118:	ubfx	x0, x0, #3, #1
   2911c:	and	w0, w0, #0xff
   29120:	mov	w1, w0
   29124:	ldr	x0, [sp, #24]
   29128:	strb	w1, [x0, #138]
   2912c:	ldr	x0, [sp, #24]
   29130:	ldr	x1, [x0, #88]
   29134:	ldr	x0, [sp, #24]
   29138:	str	x1, [x0, #104]
   2913c:	ldr	x0, [sp, #24]
   29140:	ldr	x1, [x0, #104]
   29144:	ldr	x0, [sp, #24]
   29148:	str	x1, [x0, #96]
   2914c:	nop
   29150:	add	sp, sp, #0x30
   29154:	ret
   29158:	stp	x29, x30, [sp, #-176]!
   2915c:	mov	x29, sp
   29160:	str	x0, [sp, #24]
   29164:	ldr	x0, [sp, #24]
   29168:	ldr	x1, [x0, #64]
   2916c:	ldr	x0, [sp, #24]
   29170:	ldr	x0, [x0, #88]
   29174:	cmp	x1, x0
   29178:	csel	x0, x1, x0, le
   2917c:	str	x0, [sp, #136]
   29180:	ldr	x0, [sp, #24]
   29184:	ldr	x0, [x0, #48]
   29188:	str	x0, [sp, #168]
   2918c:	b	2947c <printf_parse@@Base+0x2184>
   29190:	ldr	x1, [sp, #136]
   29194:	ldr	x0, [sp, #168]
   29198:	sub	x0, x1, x0
   2919c:	str	x0, [sp, #128]
   291a0:	ldr	x0, [sp, #24]
   291a4:	ldr	x0, [x0, #32]
   291a8:	str	x0, [sp, #48]
   291ac:	ldr	x0, [sp, #24]
   291b0:	ldr	x0, [x0, #120]
   291b4:	cmp	x0, #0x0
   291b8:	cset	w0, ne  // ne = any
   291bc:	and	w0, w0, #0xff
   291c0:	and	x0, x0, #0xff
   291c4:	cmp	x0, #0x0
   291c8:	b.eq	2927c <printf_parse@@Base+0x1f84>  // b.none
   291cc:	str	wzr, [sp, #148]
   291d0:	b	2924c <printf_parse@@Base+0x1f54>
   291d4:	ldr	x0, [sp, #24]
   291d8:	ldr	x0, [x0]
   291dc:	ldr	x1, [sp, #24]
   291e0:	ldr	x2, [x1, #40]
   291e4:	ldr	x1, [sp, #168]
   291e8:	add	x2, x2, x1
   291ec:	ldrsw	x1, [sp, #148]
   291f0:	add	x1, x2, x1
   291f4:	add	x0, x0, x1
   291f8:	ldrb	w0, [x0]
   291fc:	str	w0, [sp, #124]
   29200:	ldr	x0, [sp, #24]
   29204:	ldr	x1, [x0, #120]
   29208:	ldrsw	x0, [sp, #124]
   2920c:	add	x1, x1, x0
   29210:	ldr	x0, [sp, #24]
   29214:	ldr	x0, [x0, #8]
   29218:	ldrsw	x3, [sp, #148]
   2921c:	ldr	x2, [sp, #168]
   29220:	add	x2, x3, x2
   29224:	add	x0, x0, x2
   29228:	ldrb	w1, [x1]
   2922c:	strb	w1, [x0]
   29230:	ldrb	w2, [x0]
   29234:	ldrsw	x0, [sp, #148]
   29238:	add	x1, sp, #0x38
   2923c:	strb	w2, [x1, x0]
   29240:	ldr	w0, [sp, #148]
   29244:	add	w0, w0, #0x1
   29248:	str	w0, [sp, #148]
   2924c:	ldr	x0, [sp, #24]
   29250:	ldr	w0, [x0, #144]
   29254:	ldr	w1, [sp, #148]
   29258:	cmp	w1, w0
   2925c:	b.ge	29270 <printf_parse@@Base+0x1f78>  // b.tcont
   29260:	ldrsw	x0, [sp, #148]
   29264:	ldr	x1, [sp, #128]
   29268:	cmp	x1, x0
   2926c:	b.gt	291d4 <printf_parse@@Base+0x1edc>
   29270:	add	x0, sp, #0x38
   29274:	str	x0, [sp, #152]
   29278:	b	292a0 <printf_parse@@Base+0x1fa8>
   2927c:	ldr	x0, [sp, #24]
   29280:	ldr	x1, [x0]
   29284:	ldr	x0, [sp, #24]
   29288:	ldr	x0, [x0, #40]
   2928c:	mov	x2, x0
   29290:	ldr	x0, [sp, #168]
   29294:	add	x0, x2, x0
   29298:	add	x0, x1, x0
   2929c:	str	x0, [sp, #152]
   292a0:	ldr	x1, [sp, #128]
   292a4:	ldr	x0, [sp, #24]
   292a8:	add	x2, x0, #0x20
   292ac:	add	x0, sp, #0x2c
   292b0:	mov	x3, x2
   292b4:	mov	x2, x1
   292b8:	ldr	x1, [sp, #152]
   292bc:	bl	a8d0 <rpl_mbrtowc@plt>
   292c0:	str	x0, [sp, #160]
   292c4:	ldr	x0, [sp, #160]
   292c8:	cmn	x0, #0x1
   292cc:	cset	w0, eq  // eq = none
   292d0:	and	w0, w0, #0xff
   292d4:	and	x0, x0, #0xff
   292d8:	cmp	x0, #0x0
   292dc:	b.ne	292fc <printf_parse@@Base+0x2004>  // b.any
   292e0:	ldr	x0, [sp, #160]
   292e4:	cmp	x0, #0x0
   292e8:	cset	w0, eq  // eq = none
   292ec:	and	w0, w0, #0xff
   292f0:	and	x0, x0, #0xff
   292f4:	cmp	x0, #0x0
   292f8:	b.eq	29304 <printf_parse@@Base+0x200c>  // b.none
   292fc:	mov	w0, #0x1                   	// #1
   29300:	b	29308 <printf_parse@@Base+0x2010>
   29304:	mov	w0, #0x0                   	// #0
   29308:	cmp	w0, #0x0
   2930c:	b.ne	29368 <printf_parse@@Base+0x2070>  // b.any
   29310:	ldr	x0, [sp, #160]
   29314:	cmn	x0, #0x2
   29318:	cset	w0, eq  // eq = none
   2931c:	and	w0, w0, #0xff
   29320:	and	x0, x0, #0xff
   29324:	cmp	x0, #0x0
   29328:	b.eq	2935c <printf_parse@@Base+0x2064>  // b.none
   2932c:	ldr	x0, [sp, #24]
   29330:	ldr	x1, [x0, #64]
   29334:	ldr	x0, [sp, #24]
   29338:	ldr	x0, [x0, #88]
   2933c:	cmp	x1, x0
   29340:	cset	w0, ge  // ge = tcont
   29344:	and	w0, w0, #0xff
   29348:	and	x0, x0, #0xff
   2934c:	cmp	x0, #0x0
   29350:	b.eq	2935c <printf_parse@@Base+0x2064>  // b.none
   29354:	mov	w0, #0x1                   	// #1
   29358:	b	29360 <printf_parse@@Base+0x2068>
   2935c:	mov	w0, #0x0                   	// #0
   29360:	cmp	w0, #0x0
   29364:	b.eq	293e0 <printf_parse@@Base+0x20e8>  // b.none
   29368:	mov	x0, #0x1                   	// #1
   2936c:	str	x0, [sp, #160]
   29370:	ldr	x0, [sp, #24]
   29374:	ldr	x0, [x0]
   29378:	ldr	x1, [sp, #24]
   2937c:	ldr	x2, [x1, #40]
   29380:	ldr	x1, [sp, #168]
   29384:	add	x1, x2, x1
   29388:	add	x0, x0, x1
   2938c:	ldrb	w0, [x0]
   29390:	str	w0, [sp, #44]
   29394:	ldr	x0, [sp, #24]
   29398:	ldr	x0, [x0, #120]
   2939c:	cmp	x0, #0x0
   293a0:	cset	w0, ne  // ne = any
   293a4:	and	w0, w0, #0xff
   293a8:	and	x0, x0, #0xff
   293ac:	cmp	x0, #0x0
   293b0:	b.eq	293d0 <printf_parse@@Base+0x20d8>  // b.none
   293b4:	ldr	x0, [sp, #24]
   293b8:	ldr	x1, [x0, #120]
   293bc:	ldr	w0, [sp, #44]
   293c0:	mov	w0, w0
   293c4:	add	x0, x1, x0
   293c8:	ldrb	w0, [x0]
   293cc:	str	w0, [sp, #44]
   293d0:	ldr	x0, [sp, #24]
   293d4:	ldr	x1, [sp, #48]
   293d8:	str	x1, [x0, #32]
   293dc:	b	2940c <printf_parse@@Base+0x2114>
   293e0:	ldr	x0, [sp, #160]
   293e4:	cmn	x0, #0x2
   293e8:	cset	w0, eq  // eq = none
   293ec:	and	w0, w0, #0xff
   293f0:	and	x0, x0, #0xff
   293f4:	cmp	x0, #0x0
   293f8:	b.eq	2940c <printf_parse@@Base+0x2114>  // b.none
   293fc:	ldr	x0, [sp, #24]
   29400:	ldr	x1, [sp, #48]
   29404:	str	x1, [x0, #32]
   29408:	b	2948c <printf_parse@@Base+0x2194>
   2940c:	ldr	x0, [sp, #24]
   29410:	ldr	x1, [x0, #16]
   29414:	ldr	x0, [sp, #168]
   29418:	add	x2, x0, #0x1
   2941c:	str	x2, [sp, #168]
   29420:	lsl	x0, x0, #2
   29424:	add	x0, x1, x0
   29428:	ldr	w1, [sp, #44]
   2942c:	str	w1, [x0]
   29430:	ldr	x1, [sp, #168]
   29434:	ldr	x0, [sp, #160]
   29438:	add	x0, x1, x0
   2943c:	sub	x0, x0, #0x1
   29440:	str	x0, [sp, #128]
   29444:	b	2946c <printf_parse@@Base+0x2174>
   29448:	ldr	x0, [sp, #24]
   2944c:	ldr	x1, [x0, #16]
   29450:	ldr	x0, [sp, #168]
   29454:	add	x2, x0, #0x1
   29458:	str	x2, [sp, #168]
   2945c:	lsl	x0, x0, #2
   29460:	add	x0, x1, x0
   29464:	mov	w1, #0xffffffff            	// #-1
   29468:	str	w1, [x0]
   2946c:	ldr	x1, [sp, #168]
   29470:	ldr	x0, [sp, #128]
   29474:	cmp	x1, x0
   29478:	b.lt	29448 <printf_parse@@Base+0x2150>  // b.tstop
   2947c:	ldr	x1, [sp, #168]
   29480:	ldr	x0, [sp, #136]
   29484:	cmp	x1, x0
   29488:	b.lt	29190 <printf_parse@@Base+0x1e98>  // b.tstop
   2948c:	ldr	x0, [sp, #24]
   29490:	ldr	x1, [sp, #168]
   29494:	str	x1, [x0, #48]
   29498:	ldr	x0, [sp, #24]
   2949c:	ldr	x1, [sp, #168]
   294a0:	str	x1, [x0, #56]
   294a4:	nop
   294a8:	ldp	x29, x30, [sp], #176
   294ac:	ret
   294b0:	stp	x29, x30, [sp, #-240]!
   294b4:	mov	x29, sp
   294b8:	str	x0, [sp, #24]
   294bc:	ldr	x0, [sp, #24]
   294c0:	ldr	x0, [x0, #48]
   294c4:	str	x0, [sp, #224]
   294c8:	ldr	x0, [sp, #24]
   294cc:	ldr	x1, [x0, #64]
   294d0:	ldr	x0, [sp, #24]
   294d4:	ldr	x0, [x0, #88]
   294d8:	cmp	x1, x0
   294dc:	csel	x0, x1, x0, le
   294e0:	str	x0, [sp, #216]
   294e4:	ldr	x0, [sp, #24]
   294e8:	ldrb	w0, [x0, #138]
   294ec:	cmp	w0, #0x0
   294f0:	b.ne	298a8 <printf_parse@@Base+0x25b0>  // b.any
   294f4:	ldr	x0, [sp, #24]
   294f8:	ldr	x0, [x0, #120]
   294fc:	cmp	x0, #0x0
   29500:	b.ne	298a8 <printf_parse@@Base+0x25b0>  // b.any
   29504:	ldr	x0, [sp, #24]
   29508:	ldrb	w0, [x0, #140]
   2950c:	cmp	w0, #0x0
   29510:	b.ne	298a8 <printf_parse@@Base+0x25b0>  // b.any
   29514:	b	29878 <printf_parse@@Base+0x2580>
   29518:	ldr	x0, [sp, #24]
   2951c:	ldr	x0, [x0]
   29520:	ldr	x1, [sp, #24]
   29524:	ldr	x2, [x1, #40]
   29528:	ldr	x1, [sp, #224]
   2952c:	add	x1, x2, x1
   29530:	add	x0, x0, x1
   29534:	ldrb	w0, [x0]
   29538:	and	w0, w0, #0xffffff80
   2953c:	cmp	w0, #0x0
   29540:	b.ne	295d8 <printf_parse@@Base+0x22e0>  // b.any
   29544:	ldr	x0, [sp, #24]
   29548:	add	x0, x0, #0x20
   2954c:	bl	afb0 <mbsinit@plt>
   29550:	cmp	w0, #0x0
   29554:	b.eq	295d8 <printf_parse@@Base+0x22e0>  // b.none
   29558:	ldr	x0, [sp, #24]
   2955c:	ldr	x0, [x0]
   29560:	ldr	x1, [sp, #24]
   29564:	ldr	x2, [x1, #40]
   29568:	ldr	x1, [sp, #224]
   2956c:	add	x1, x2, x1
   29570:	add	x0, x0, x1
   29574:	ldrb	w0, [x0]
   29578:	bl	ab70 <toupper@plt>
   2957c:	mov	w2, w0
   29580:	ldr	x0, [sp, #24]
   29584:	ldr	x1, [x0, #8]
   29588:	ldr	x0, [sp, #224]
   2958c:	add	x0, x1, x0
   29590:	and	w1, w2, #0xff
   29594:	strb	w1, [x0]
   29598:	ldr	x0, [sp, #24]
   2959c:	ldr	x1, [x0, #8]
   295a0:	ldr	x0, [sp, #224]
   295a4:	add	x0, x1, x0
   295a8:	ldrb	w2, [x0]
   295ac:	ldr	x0, [sp, #24]
   295b0:	ldr	x1, [x0, #16]
   295b4:	ldr	x0, [sp, #224]
   295b8:	lsl	x0, x0, #2
   295bc:	add	x0, x1, x0
   295c0:	mov	w1, w2
   295c4:	str	w1, [x0]
   295c8:	ldr	x0, [sp, #224]
   295cc:	add	x0, x0, #0x1
   295d0:	str	x0, [sp, #224]
   295d4:	b	29878 <printf_parse@@Base+0x2580>
   295d8:	ldr	x1, [sp, #216]
   295dc:	ldr	x0, [sp, #224]
   295e0:	sub	x0, x1, x0
   295e4:	str	x0, [sp, #168]
   295e8:	ldr	x0, [sp, #24]
   295ec:	ldr	x0, [x0, #32]
   295f0:	str	x0, [sp, #112]
   295f4:	ldr	x0, [sp, #24]
   295f8:	ldr	x1, [x0]
   295fc:	ldr	x0, [sp, #24]
   29600:	ldr	x0, [x0, #40]
   29604:	mov	x2, x0
   29608:	ldr	x0, [sp, #224]
   2960c:	add	x0, x2, x0
   29610:	add	x1, x1, x0
   29614:	ldr	x2, [sp, #168]
   29618:	ldr	x0, [sp, #24]
   2961c:	add	x3, x0, #0x20
   29620:	add	x0, sp, #0x2c
   29624:	bl	a8d0 <rpl_mbrtowc@plt>
   29628:	str	x0, [sp, #160]
   2962c:	ldr	x0, [sp, #160]
   29630:	cmp	x0, #0x0
   29634:	cset	w0, ne  // ne = any
   29638:	and	w0, w0, #0xff
   2963c:	and	x0, x0, #0xff
   29640:	cmp	x0, #0x0
   29644:	b.eq	29798 <printf_parse@@Base+0x24a0>  // b.none
   29648:	ldr	x0, [sp, #160]
   2964c:	cmn	x0, #0x3
   29650:	cset	w0, ls  // ls = plast
   29654:	and	w0, w0, #0xff
   29658:	and	x0, x0, #0xff
   2965c:	cmp	x0, #0x0
   29660:	b.eq	29798 <printf_parse@@Base+0x24a0>  // b.none
   29664:	ldr	w0, [sp, #44]
   29668:	bl	b590 <towupper@plt>
   2966c:	str	w0, [sp, #156]
   29670:	ldr	w0, [sp, #44]
   29674:	ldr	w1, [sp, #156]
   29678:	cmp	w1, w0
   2967c:	b.eq	296e4 <printf_parse@@Base+0x23ec>  // b.none
   29680:	add	x1, sp, #0x70
   29684:	add	x0, sp, #0x30
   29688:	mov	x2, x1
   2968c:	ldr	w1, [sp, #156]
   29690:	bl	b7b0 <wcrtomb@plt>
   29694:	str	x0, [sp, #144]
   29698:	ldr	x1, [sp, #160]
   2969c:	ldr	x0, [sp, #144]
   296a0:	cmp	x1, x0
   296a4:	cset	w0, eq  // eq = none
   296a8:	and	w0, w0, #0xff
   296ac:	and	x0, x0, #0xff
   296b0:	cmp	x0, #0x0
   296b4:	b.eq	296d8 <printf_parse@@Base+0x23e0>  // b.none
   296b8:	ldr	x0, [sp, #24]
   296bc:	ldr	x1, [x0, #8]
   296c0:	ldr	x0, [sp, #224]
   296c4:	add	x0, x1, x0
   296c8:	add	x1, sp, #0x30
   296cc:	ldr	x2, [sp, #160]
   296d0:	bl	a790 <memcpy@plt>
   296d4:	b	29724 <printf_parse@@Base+0x242c>
   296d8:	ldr	x0, [sp, #224]
   296dc:	str	x0, [sp, #232]
   296e0:	b	298bc <printf_parse@@Base+0x25c4>
   296e4:	ldr	x0, [sp, #24]
   296e8:	ldr	x1, [x0, #8]
   296ec:	ldr	x0, [sp, #224]
   296f0:	add	x3, x1, x0
   296f4:	ldr	x0, [sp, #24]
   296f8:	ldr	x1, [x0]
   296fc:	ldr	x0, [sp, #24]
   29700:	ldr	x0, [x0, #40]
   29704:	mov	x2, x0
   29708:	ldr	x0, [sp, #224]
   2970c:	add	x0, x2, x0
   29710:	add	x0, x1, x0
   29714:	ldr	x2, [sp, #160]
   29718:	mov	x1, x0
   2971c:	mov	x0, x3
   29720:	bl	a790 <memcpy@plt>
   29724:	ldr	x0, [sp, #24]
   29728:	ldr	x1, [x0, #16]
   2972c:	ldr	x0, [sp, #224]
   29730:	add	x2, x0, #0x1
   29734:	str	x2, [sp, #224]
   29738:	lsl	x0, x0, #2
   2973c:	add	x0, x1, x0
   29740:	ldr	w1, [sp, #156]
   29744:	str	w1, [x0]
   29748:	ldr	x1, [sp, #224]
   2974c:	ldr	x0, [sp, #160]
   29750:	add	x0, x1, x0
   29754:	sub	x0, x0, #0x1
   29758:	str	x0, [sp, #168]
   2975c:	b	29784 <printf_parse@@Base+0x248c>
   29760:	ldr	x0, [sp, #24]
   29764:	ldr	x1, [x0, #16]
   29768:	ldr	x0, [sp, #224]
   2976c:	add	x2, x0, #0x1
   29770:	str	x2, [sp, #224]
   29774:	lsl	x0, x0, #2
   29778:	add	x0, x1, x0
   2977c:	mov	w1, #0xffffffff            	// #-1
   29780:	str	w1, [x0]
   29784:	ldr	x1, [sp, #224]
   29788:	ldr	x0, [sp, #168]
   2978c:	cmp	x1, x0
   29790:	b.lt	29760 <printf_parse@@Base+0x2468>  // b.tstop
   29794:	b	29878 <printf_parse@@Base+0x2580>
   29798:	ldr	x0, [sp, #160]
   2979c:	cmn	x0, #0x1
   297a0:	b.eq	297d4 <printf_parse@@Base+0x24dc>  // b.none
   297a4:	ldr	x0, [sp, #160]
   297a8:	cmp	x0, #0x0
   297ac:	b.eq	297d4 <printf_parse@@Base+0x24dc>  // b.none
   297b0:	ldr	x0, [sp, #160]
   297b4:	cmn	x0, #0x2
   297b8:	b.ne	29864 <printf_parse@@Base+0x256c>  // b.any
   297bc:	ldr	x0, [sp, #24]
   297c0:	ldr	x1, [x0, #64]
   297c4:	ldr	x0, [sp, #24]
   297c8:	ldr	x0, [x0, #88]
   297cc:	cmp	x1, x0
   297d0:	b.lt	29864 <printf_parse@@Base+0x256c>  // b.tstop
   297d4:	ldr	x0, [sp, #24]
   297d8:	ldr	x0, [x0]
   297dc:	ldr	x1, [sp, #24]
   297e0:	ldr	x2, [x1, #40]
   297e4:	ldr	x1, [sp, #224]
   297e8:	add	x1, x2, x1
   297ec:	add	x0, x0, x1
   297f0:	ldrb	w0, [x0]
   297f4:	str	w0, [sp, #140]
   297f8:	ldr	x0, [sp, #24]
   297fc:	ldr	x1, [x0, #8]
   29800:	ldr	x0, [sp, #224]
   29804:	add	x0, x1, x0
   29808:	ldr	w1, [sp, #140]
   2980c:	and	w1, w1, #0xff
   29810:	strb	w1, [x0]
   29814:	ldr	x0, [sp, #24]
   29818:	ldr	x1, [x0, #16]
   2981c:	ldr	x0, [sp, #224]
   29820:	add	x2, x0, #0x1
   29824:	str	x2, [sp, #224]
   29828:	lsl	x0, x0, #2
   2982c:	add	x0, x1, x0
   29830:	ldr	w1, [sp, #140]
   29834:	str	w1, [x0]
   29838:	ldr	x0, [sp, #160]
   2983c:	cmn	x0, #0x1
   29840:	cset	w0, eq  // eq = none
   29844:	and	w0, w0, #0xff
   29848:	and	x0, x0, #0xff
   2984c:	cmp	x0, #0x0
   29850:	b.eq	29874 <printf_parse@@Base+0x257c>  // b.none
   29854:	ldr	x0, [sp, #24]
   29858:	ldr	x1, [sp, #112]
   2985c:	str	x1, [x0, #32]
   29860:	b	29874 <printf_parse@@Base+0x257c>
   29864:	ldr	x0, [sp, #24]
   29868:	ldr	x1, [sp, #112]
   2986c:	str	x1, [x0, #32]
   29870:	b	29888 <printf_parse@@Base+0x2590>
   29874:	nop
   29878:	ldr	x1, [sp, #224]
   2987c:	ldr	x0, [sp, #216]
   29880:	cmp	x1, x0
   29884:	b.lt	29518 <printf_parse@@Base+0x2220>  // b.tstop
   29888:	ldr	x0, [sp, #24]
   2988c:	ldr	x1, [sp, #224]
   29890:	str	x1, [x0, #48]
   29894:	ldr	x0, [sp, #24]
   29898:	ldr	x1, [sp, #224]
   2989c:	str	x1, [x0, #56]
   298a0:	mov	w0, #0x0                   	// #0
   298a4:	b	29fa4 <printf_parse@@Base+0x2cac>
   298a8:	ldr	x0, [sp, #24]
   298ac:	ldr	x0, [x0, #56]
   298b0:	str	x0, [sp, #232]
   298b4:	b	29f78 <printf_parse@@Base+0x2c80>
   298b8:	nop
   298bc:	ldr	x1, [sp, #216]
   298c0:	ldr	x0, [sp, #224]
   298c4:	sub	x0, x1, x0
   298c8:	str	x0, [sp, #168]
   298cc:	ldr	x0, [sp, #24]
   298d0:	ldr	x0, [x0, #32]
   298d4:	str	x0, [sp, #112]
   298d8:	ldr	x0, [sp, #24]
   298dc:	ldr	x0, [x0, #120]
   298e0:	cmp	x0, #0x0
   298e4:	cset	w0, ne  // ne = any
   298e8:	and	w0, w0, #0xff
   298ec:	and	x0, x0, #0xff
   298f0:	cmp	x0, #0x0
   298f4:	b.eq	29988 <printf_parse@@Base+0x2690>  // b.none
   298f8:	str	wzr, [sp, #204]
   298fc:	b	29958 <printf_parse@@Base+0x2660>
   29900:	ldr	x0, [sp, #24]
   29904:	ldr	x0, [x0]
   29908:	ldr	x1, [sp, #24]
   2990c:	ldr	x2, [x1, #40]
   29910:	ldr	x1, [sp, #232]
   29914:	add	x2, x2, x1
   29918:	ldrsw	x1, [sp, #204]
   2991c:	add	x1, x2, x1
   29920:	add	x0, x0, x1
   29924:	ldrb	w0, [x0]
   29928:	str	w0, [sp, #136]
   2992c:	ldr	x0, [sp, #24]
   29930:	ldr	x1, [x0, #120]
   29934:	ldrsw	x0, [sp, #136]
   29938:	add	x0, x1, x0
   2993c:	ldrb	w2, [x0]
   29940:	ldrsw	x0, [sp, #204]
   29944:	add	x1, sp, #0x30
   29948:	strb	w2, [x1, x0]
   2994c:	ldr	w0, [sp, #204]
   29950:	add	w0, w0, #0x1
   29954:	str	w0, [sp, #204]
   29958:	ldr	x0, [sp, #24]
   2995c:	ldr	w0, [x0, #144]
   29960:	ldr	w1, [sp, #204]
   29964:	cmp	w1, w0
   29968:	b.ge	2997c <printf_parse@@Base+0x2684>  // b.tcont
   2996c:	ldrsw	x0, [sp, #204]
   29970:	ldr	x1, [sp, #168]
   29974:	cmp	x1, x0
   29978:	b.gt	29900 <printf_parse@@Base+0x2608>
   2997c:	add	x0, sp, #0x30
   29980:	str	x0, [sp, #208]
   29984:	b	299ac <printf_parse@@Base+0x26b4>
   29988:	ldr	x0, [sp, #24]
   2998c:	ldr	x1, [x0]
   29990:	ldr	x0, [sp, #24]
   29994:	ldr	x0, [x0, #40]
   29998:	mov	x2, x0
   2999c:	ldr	x0, [sp, #232]
   299a0:	add	x0, x2, x0
   299a4:	add	x0, x1, x0
   299a8:	str	x0, [sp, #208]
   299ac:	ldr	x1, [sp, #168]
   299b0:	ldr	x0, [sp, #24]
   299b4:	add	x2, x0, #0x20
   299b8:	add	x0, sp, #0x28
   299bc:	mov	x3, x2
   299c0:	mov	x2, x1
   299c4:	ldr	x1, [sp, #208]
   299c8:	bl	a8d0 <rpl_mbrtowc@plt>
   299cc:	str	x0, [sp, #160]
   299d0:	ldr	x0, [sp, #160]
   299d4:	cmp	x0, #0x0
   299d8:	cset	w0, ne  // ne = any
   299dc:	and	w0, w0, #0xff
   299e0:	and	x0, x0, #0xff
   299e4:	cmp	x0, #0x0
   299e8:	b.eq	29e18 <printf_parse@@Base+0x2b20>  // b.none
   299ec:	ldr	x0, [sp, #160]
   299f0:	cmn	x0, #0x3
   299f4:	cset	w0, ls  // ls = plast
   299f8:	and	w0, w0, #0xff
   299fc:	and	x0, x0, #0xff
   29a00:	cmp	x0, #0x0
   29a04:	b.eq	29e18 <printf_parse@@Base+0x2b20>  // b.none
   29a08:	ldr	w0, [sp, #40]
   29a0c:	bl	b590 <towupper@plt>
   29a10:	str	w0, [sp, #132]
   29a14:	ldr	w0, [sp, #40]
   29a18:	ldr	w1, [sp, #132]
   29a1c:	cmp	w1, w0
   29a20:	b.eq	29d04 <printf_parse@@Base+0x2a0c>  // b.none
   29a24:	add	x1, sp, #0x70
   29a28:	add	x0, sp, #0x30
   29a2c:	mov	x2, x1
   29a30:	ldr	w1, [sp, #132]
   29a34:	bl	b7b0 <wcrtomb@plt>
   29a38:	str	x0, [sp, #120]
   29a3c:	ldr	x1, [sp, #160]
   29a40:	ldr	x0, [sp, #120]
   29a44:	cmp	x1, x0
   29a48:	cset	w0, eq  // eq = none
   29a4c:	and	w0, w0, #0xff
   29a50:	and	x0, x0, #0xff
   29a54:	cmp	x0, #0x0
   29a58:	b.eq	29a7c <printf_parse@@Base+0x2784>  // b.none
   29a5c:	ldr	x0, [sp, #24]
   29a60:	ldr	x1, [x0, #8]
   29a64:	ldr	x0, [sp, #224]
   29a68:	add	x0, x1, x0
   29a6c:	add	x1, sp, #0x30
   29a70:	ldr	x2, [sp, #160]
   29a74:	bl	a790 <memcpy@plt>
   29a78:	b	29d20 <printf_parse@@Base+0x2a28>
   29a7c:	ldr	x0, [sp, #120]
   29a80:	cmn	x0, #0x1
   29a84:	b.eq	29ce4 <printf_parse@@Base+0x29ec>  // b.none
   29a88:	ldr	x1, [sp, #224]
   29a8c:	ldr	x0, [sp, #120]
   29a90:	add	x0, x1, x0
   29a94:	ldr	x1, [sp, #24]
   29a98:	ldr	x1, [x1, #64]
   29a9c:	cmp	x0, x1
   29aa0:	b.ls	29ab4 <printf_parse@@Base+0x27bc>  // b.plast
   29aa4:	ldr	x0, [sp, #24]
   29aa8:	ldr	x1, [sp, #112]
   29aac:	str	x1, [x0, #32]
   29ab0:	b	29f88 <printf_parse@@Base+0x2c90>
   29ab4:	ldr	x0, [sp, #24]
   29ab8:	ldr	x0, [x0, #24]
   29abc:	cmp	x0, #0x0
   29ac0:	b.ne	29af8 <printf_parse@@Base+0x2800>  // b.any
   29ac4:	ldr	x0, [sp, #24]
   29ac8:	ldr	x0, [x0, #64]
   29acc:	lsl	x0, x0, #3
   29ad0:	bl	ab40 <malloc@plt>
   29ad4:	mov	x1, x0
   29ad8:	ldr	x0, [sp, #24]
   29adc:	str	x1, [x0, #24]
   29ae0:	ldr	x0, [sp, #24]
   29ae4:	ldr	x0, [x0, #24]
   29ae8:	cmp	x0, #0x0
   29aec:	b.ne	29af8 <printf_parse@@Base+0x2800>  // b.any
   29af0:	mov	w0, #0xc                   	// #12
   29af4:	b	29fa4 <printf_parse@@Base+0x2cac>
   29af8:	ldr	x0, [sp, #24]
   29afc:	ldrb	w0, [x0, #140]
   29b00:	cmp	w0, #0x0
   29b04:	b.ne	29b54 <printf_parse@@Base+0x285c>  // b.any
   29b08:	str	xzr, [sp, #192]
   29b0c:	b	29b38 <printf_parse@@Base+0x2840>
   29b10:	ldr	x0, [sp, #24]
   29b14:	ldr	x1, [x0, #24]
   29b18:	ldr	x0, [sp, #192]
   29b1c:	lsl	x0, x0, #3
   29b20:	add	x0, x1, x0
   29b24:	ldr	x1, [sp, #192]
   29b28:	str	x1, [x0]
   29b2c:	ldr	x0, [sp, #192]
   29b30:	add	x0, x0, #0x1
   29b34:	str	x0, [sp, #192]
   29b38:	ldr	x0, [sp, #224]
   29b3c:	ldr	x1, [sp, #192]
   29b40:	cmp	x1, x0
   29b44:	b.cc	29b10 <printf_parse@@Base+0x2818>  // b.lo, b.ul, b.last
   29b48:	ldr	x0, [sp, #24]
   29b4c:	mov	w1, #0x1                   	// #1
   29b50:	strb	w1, [x0, #140]
   29b54:	ldr	x0, [sp, #24]
   29b58:	ldr	x1, [x0, #8]
   29b5c:	ldr	x0, [sp, #224]
   29b60:	add	x0, x1, x0
   29b64:	add	x1, sp, #0x30
   29b68:	ldr	x2, [sp, #120]
   29b6c:	bl	a790 <memcpy@plt>
   29b70:	ldr	x0, [sp, #24]
   29b74:	ldr	x1, [x0, #16]
   29b78:	ldr	x0, [sp, #224]
   29b7c:	lsl	x0, x0, #2
   29b80:	add	x0, x1, x0
   29b84:	ldr	w1, [sp, #132]
   29b88:	str	w1, [x0]
   29b8c:	ldr	x0, [sp, #24]
   29b90:	ldr	x1, [x0, #24]
   29b94:	ldr	x0, [sp, #224]
   29b98:	lsl	x0, x0, #3
   29b9c:	add	x0, x1, x0
   29ba0:	ldr	x1, [sp, #232]
   29ba4:	str	x1, [x0]
   29ba8:	mov	x0, #0x1                   	// #1
   29bac:	str	x0, [sp, #192]
   29bb0:	b	29c30 <printf_parse@@Base+0x2938>
   29bb4:	ldr	x1, [sp, #192]
   29bb8:	ldr	x0, [sp, #160]
   29bbc:	cmp	x1, x0
   29bc0:	b.cc	29bd0 <printf_parse@@Base+0x28d8>  // b.lo, b.ul, b.last
   29bc4:	ldr	x0, [sp, #160]
   29bc8:	sub	x0, x0, #0x1
   29bcc:	b	29bd4 <printf_parse@@Base+0x28dc>
   29bd0:	ldr	x0, [sp, #192]
   29bd4:	ldr	x1, [sp, #232]
   29bd8:	add	x3, x0, x1
   29bdc:	ldr	x0, [sp, #24]
   29be0:	ldr	x1, [x0, #24]
   29be4:	ldr	x2, [sp, #224]
   29be8:	ldr	x0, [sp, #192]
   29bec:	add	x0, x2, x0
   29bf0:	lsl	x0, x0, #3
   29bf4:	add	x0, x1, x0
   29bf8:	mov	x1, x3
   29bfc:	str	x1, [x0]
   29c00:	ldr	x0, [sp, #24]
   29c04:	ldr	x1, [x0, #16]
   29c08:	ldr	x2, [sp, #224]
   29c0c:	ldr	x0, [sp, #192]
   29c10:	add	x0, x2, x0
   29c14:	lsl	x0, x0, #2
   29c18:	add	x0, x1, x0
   29c1c:	mov	w1, #0xffffffff            	// #-1
   29c20:	str	w1, [x0]
   29c24:	ldr	x0, [sp, #192]
   29c28:	add	x0, x0, #0x1
   29c2c:	str	x0, [sp, #192]
   29c30:	ldr	x1, [sp, #192]
   29c34:	ldr	x0, [sp, #120]
   29c38:	cmp	x1, x0
   29c3c:	b.cc	29bb4 <printf_parse@@Base+0x28bc>  // b.lo, b.ul, b.last
   29c40:	ldr	x0, [sp, #24]
   29c44:	ldr	x0, [x0, #88]
   29c48:	mov	x2, x0
   29c4c:	ldr	x1, [sp, #120]
   29c50:	ldr	x0, [sp, #160]
   29c54:	sub	x0, x1, x0
   29c58:	add	x0, x2, x0
   29c5c:	mov	x1, x0
   29c60:	ldr	x0, [sp, #24]
   29c64:	str	x1, [x0, #88]
   29c68:	ldr	x0, [sp, #24]
   29c6c:	ldr	x0, [x0, #96]
   29c70:	ldr	x1, [sp, #232]
   29c74:	cmp	x1, x0
   29c78:	b.ge	29ca4 <printf_parse@@Base+0x29ac>  // b.tcont
   29c7c:	ldr	x0, [sp, #24]
   29c80:	ldr	x0, [x0, #104]
   29c84:	mov	x2, x0
   29c88:	ldr	x1, [sp, #120]
   29c8c:	ldr	x0, [sp, #160]
   29c90:	sub	x0, x1, x0
   29c94:	add	x0, x2, x0
   29c98:	mov	x1, x0
   29c9c:	ldr	x0, [sp, #24]
   29ca0:	str	x1, [x0, #104]
   29ca4:	ldr	x0, [sp, #24]
   29ca8:	ldr	x1, [x0, #64]
   29cac:	ldr	x0, [sp, #24]
   29cb0:	ldr	x0, [x0, #88]
   29cb4:	cmp	x1, x0
   29cb8:	csel	x0, x1, x0, le
   29cbc:	str	x0, [sp, #216]
   29cc0:	ldr	x1, [sp, #224]
   29cc4:	ldr	x0, [sp, #120]
   29cc8:	add	x0, x1, x0
   29ccc:	str	x0, [sp, #224]
   29cd0:	ldr	x1, [sp, #232]
   29cd4:	ldr	x0, [sp, #160]
   29cd8:	add	x0, x1, x0
   29cdc:	str	x0, [sp, #232]
   29ce0:	b	29f78 <printf_parse@@Base+0x2c80>
   29ce4:	ldr	x0, [sp, #24]
   29ce8:	ldr	x1, [x0, #8]
   29cec:	ldr	x0, [sp, #224]
   29cf0:	add	x0, x1, x0
   29cf4:	ldr	x2, [sp, #160]
   29cf8:	ldr	x1, [sp, #208]
   29cfc:	bl	a790 <memcpy@plt>
   29d00:	b	29d20 <printf_parse@@Base+0x2a28>
   29d04:	ldr	x0, [sp, #24]
   29d08:	ldr	x1, [x0, #8]
   29d0c:	ldr	x0, [sp, #224]
   29d10:	add	x0, x1, x0
   29d14:	ldr	x2, [sp, #160]
   29d18:	ldr	x1, [sp, #208]
   29d1c:	bl	a790 <memcpy@plt>
   29d20:	ldr	x0, [sp, #24]
   29d24:	ldrb	w0, [x0, #140]
   29d28:	cmp	w0, #0x0
   29d2c:	cset	w0, ne  // ne = any
   29d30:	and	w0, w0, #0xff
   29d34:	and	x0, x0, #0xff
   29d38:	cmp	x0, #0x0
   29d3c:	b.eq	29d94 <printf_parse@@Base+0x2a9c>  // b.none
   29d40:	str	xzr, [sp, #184]
   29d44:	b	29d84 <printf_parse@@Base+0x2a8c>
   29d48:	ldr	x1, [sp, #232]
   29d4c:	ldr	x0, [sp, #184]
   29d50:	add	x3, x1, x0
   29d54:	ldr	x0, [sp, #24]
   29d58:	ldr	x1, [x0, #24]
   29d5c:	ldr	x2, [sp, #224]
   29d60:	ldr	x0, [sp, #184]
   29d64:	add	x0, x2, x0
   29d68:	lsl	x0, x0, #3
   29d6c:	add	x0, x1, x0
   29d70:	mov	x1, x3
   29d74:	str	x1, [x0]
   29d78:	ldr	x0, [sp, #184]
   29d7c:	add	x0, x0, #0x1
   29d80:	str	x0, [sp, #184]
   29d84:	ldr	x1, [sp, #184]
   29d88:	ldr	x0, [sp, #160]
   29d8c:	cmp	x1, x0
   29d90:	b.cc	29d48 <printf_parse@@Base+0x2a50>  // b.lo, b.ul, b.last
   29d94:	ldr	x1, [sp, #232]
   29d98:	ldr	x0, [sp, #160]
   29d9c:	add	x0, x1, x0
   29da0:	str	x0, [sp, #232]
   29da4:	ldr	x0, [sp, #24]
   29da8:	ldr	x1, [x0, #16]
   29dac:	ldr	x0, [sp, #224]
   29db0:	add	x2, x0, #0x1
   29db4:	str	x2, [sp, #224]
   29db8:	lsl	x0, x0, #2
   29dbc:	add	x0, x1, x0
   29dc0:	ldr	w1, [sp, #132]
   29dc4:	str	w1, [x0]
   29dc8:	ldr	x1, [sp, #224]
   29dcc:	ldr	x0, [sp, #160]
   29dd0:	add	x0, x1, x0
   29dd4:	sub	x0, x0, #0x1
   29dd8:	str	x0, [sp, #168]
   29ddc:	b	29e04 <printf_parse@@Base+0x2b0c>
   29de0:	ldr	x0, [sp, #24]
   29de4:	ldr	x1, [x0, #16]
   29de8:	ldr	x0, [sp, #224]
   29dec:	add	x2, x0, #0x1
   29df0:	str	x2, [sp, #224]
   29df4:	lsl	x0, x0, #2
   29df8:	add	x0, x1, x0
   29dfc:	mov	w1, #0xffffffff            	// #-1
   29e00:	str	w1, [x0]
   29e04:	ldr	x1, [sp, #224]
   29e08:	ldr	x0, [sp, #168]
   29e0c:	cmp	x1, x0
   29e10:	b.lt	29de0 <printf_parse@@Base+0x2ae8>  // b.tstop
   29e14:	b	29f78 <printf_parse@@Base+0x2c80>
   29e18:	ldr	x0, [sp, #160]
   29e1c:	cmn	x0, #0x1
   29e20:	b.eq	29e54 <printf_parse@@Base+0x2b5c>  // b.none
   29e24:	ldr	x0, [sp, #160]
   29e28:	cmp	x0, #0x0
   29e2c:	b.eq	29e54 <printf_parse@@Base+0x2b5c>  // b.none
   29e30:	ldr	x0, [sp, #160]
   29e34:	cmn	x0, #0x2
   29e38:	b.ne	29f64 <printf_parse@@Base+0x2c6c>  // b.any
   29e3c:	ldr	x0, [sp, #24]
   29e40:	ldr	x1, [x0, #64]
   29e44:	ldr	x0, [sp, #24]
   29e48:	ldr	x0, [x0, #88]
   29e4c:	cmp	x1, x0
   29e50:	b.lt	29f64 <printf_parse@@Base+0x2c6c>  // b.tstop
   29e54:	ldr	x0, [sp, #24]
   29e58:	ldr	x0, [x0]
   29e5c:	ldr	x1, [sp, #24]
   29e60:	ldr	x2, [x1, #40]
   29e64:	ldr	x1, [sp, #232]
   29e68:	add	x1, x2, x1
   29e6c:	add	x0, x0, x1
   29e70:	ldrb	w0, [x0]
   29e74:	str	w0, [sp, #180]
   29e78:	ldr	x0, [sp, #24]
   29e7c:	ldr	x0, [x0, #120]
   29e80:	cmp	x0, #0x0
   29e84:	cset	w0, ne  // ne = any
   29e88:	and	w0, w0, #0xff
   29e8c:	and	x0, x0, #0xff
   29e90:	cmp	x0, #0x0
   29e94:	b.eq	29eb0 <printf_parse@@Base+0x2bb8>  // b.none
   29e98:	ldr	x0, [sp, #24]
   29e9c:	ldr	x1, [x0, #120]
   29ea0:	ldrsw	x0, [sp, #180]
   29ea4:	add	x0, x1, x0
   29ea8:	ldrb	w0, [x0]
   29eac:	str	w0, [sp, #180]
   29eb0:	ldr	x0, [sp, #24]
   29eb4:	ldr	x1, [x0, #8]
   29eb8:	ldr	x0, [sp, #224]
   29ebc:	add	x0, x1, x0
   29ec0:	ldr	w1, [sp, #180]
   29ec4:	and	w1, w1, #0xff
   29ec8:	strb	w1, [x0]
   29ecc:	ldr	x0, [sp, #24]
   29ed0:	ldrb	w0, [x0, #140]
   29ed4:	cmp	w0, #0x0
   29ed8:	cset	w0, ne  // ne = any
   29edc:	and	w0, w0, #0xff
   29ee0:	and	x0, x0, #0xff
   29ee4:	cmp	x0, #0x0
   29ee8:	b.eq	29f08 <printf_parse@@Base+0x2c10>  // b.none
   29eec:	ldr	x0, [sp, #24]
   29ef0:	ldr	x1, [x0, #24]
   29ef4:	ldr	x0, [sp, #224]
   29ef8:	lsl	x0, x0, #3
   29efc:	add	x0, x1, x0
   29f00:	ldr	x1, [sp, #232]
   29f04:	str	x1, [x0]
   29f08:	ldr	x0, [sp, #232]
   29f0c:	add	x0, x0, #0x1
   29f10:	str	x0, [sp, #232]
   29f14:	ldr	x0, [sp, #24]
   29f18:	ldr	x1, [x0, #16]
   29f1c:	ldr	x0, [sp, #224]
   29f20:	add	x2, x0, #0x1
   29f24:	str	x2, [sp, #224]
   29f28:	lsl	x0, x0, #2
   29f2c:	add	x0, x1, x0
   29f30:	ldr	w1, [sp, #180]
   29f34:	str	w1, [x0]
   29f38:	ldr	x0, [sp, #160]
   29f3c:	cmn	x0, #0x1
   29f40:	cset	w0, eq  // eq = none
   29f44:	and	w0, w0, #0xff
   29f48:	and	x0, x0, #0xff
   29f4c:	cmp	x0, #0x0
   29f50:	b.eq	29f74 <printf_parse@@Base+0x2c7c>  // b.none
   29f54:	ldr	x0, [sp, #24]
   29f58:	ldr	x1, [sp, #112]
   29f5c:	str	x1, [x0, #32]
   29f60:	b	29f74 <printf_parse@@Base+0x2c7c>
   29f64:	ldr	x0, [sp, #24]
   29f68:	ldr	x1, [sp, #112]
   29f6c:	str	x1, [x0, #32]
   29f70:	b	29f88 <printf_parse@@Base+0x2c90>
   29f74:	nop
   29f78:	ldr	x1, [sp, #224]
   29f7c:	ldr	x0, [sp, #216]
   29f80:	cmp	x1, x0
   29f84:	b.lt	298b8 <printf_parse@@Base+0x25c0>  // b.tstop
   29f88:	ldr	x0, [sp, #24]
   29f8c:	ldr	x1, [sp, #224]
   29f90:	str	x1, [x0, #48]
   29f94:	ldr	x0, [sp, #24]
   29f98:	ldr	x1, [sp, #232]
   29f9c:	str	x1, [x0, #56]
   29fa0:	mov	w0, #0x0                   	// #0
   29fa4:	ldp	x29, x30, [sp], #240
   29fa8:	ret
   29fac:	stp	x29, x30, [sp, #-96]!
   29fb0:	mov	x29, sp
   29fb4:	str	x0, [sp, #40]
   29fb8:	str	x1, [sp, #32]
   29fbc:	str	x2, [sp, #24]
   29fc0:	mov	w0, #0xffffffff            	// #-1
   29fc4:	str	w0, [sp, #76]
   29fc8:	ldr	x0, [sp, #40]
   29fcc:	ldr	x1, [x0, #40]
   29fd0:	ldr	x0, [sp, #40]
   29fd4:	ldr	x0, [x0, #56]
   29fd8:	add	x0, x1, x0
   29fdc:	str	x0, [sp, #88]
   29fe0:	b	2a0fc <printf_parse@@Base+0x2e04>
   29fe4:	ldr	x0, [sp, #40]
   29fe8:	ldr	x1, [x0, #80]
   29fec:	ldr	x0, [sp, #88]
   29ff0:	sub	x0, x1, x0
   29ff4:	str	x0, [sp, #64]
   29ff8:	ldr	x0, [sp, #40]
   29ffc:	ldr	x0, [x0, #32]
   2a000:	str	x0, [sp, #56]
   2a004:	ldr	x0, [sp, #40]
   2a008:	ldr	x1, [x0]
   2a00c:	ldr	x0, [sp, #88]
   2a010:	add	x1, x1, x0
   2a014:	ldr	x2, [sp, #64]
   2a018:	ldr	x0, [sp, #40]
   2a01c:	add	x3, x0, #0x20
   2a020:	add	x0, sp, #0x34
   2a024:	bl	a8d0 <rpl_mbrtowc@plt>
   2a028:	str	x0, [sp, #80]
   2a02c:	ldr	x0, [sp, #80]
   2a030:	cmn	x0, #0x2
   2a034:	cset	w0, eq  // eq = none
   2a038:	and	w0, w0, #0xff
   2a03c:	and	x0, x0, #0xff
   2a040:	cmp	x0, #0x0
   2a044:	b.ne	2a064 <printf_parse@@Base+0x2d6c>  // b.any
   2a048:	ldr	x0, [sp, #80]
   2a04c:	cmn	x0, #0x1
   2a050:	cset	w0, eq  // eq = none
   2a054:	and	w0, w0, #0xff
   2a058:	and	x0, x0, #0xff
   2a05c:	cmp	x0, #0x0
   2a060:	b.eq	2a06c <printf_parse@@Base+0x2d74>  // b.none
   2a064:	mov	w0, #0x1                   	// #1
   2a068:	b	2a070 <printf_parse@@Base+0x2d78>
   2a06c:	mov	w0, #0x0                   	// #0
   2a070:	cmp	w0, #0x0
   2a074:	b.ne	2a094 <printf_parse@@Base+0x2d9c>  // b.any
   2a078:	ldr	x0, [sp, #80]
   2a07c:	cmp	x0, #0x0
   2a080:	cset	w0, eq  // eq = none
   2a084:	and	w0, w0, #0xff
   2a088:	and	x0, x0, #0xff
   2a08c:	cmp	x0, #0x0
   2a090:	b.eq	2a0e4 <printf_parse@@Base+0x2dec>  // b.none
   2a094:	ldr	x0, [sp, #80]
   2a098:	cmp	x0, #0x0
   2a09c:	b.eq	2a0ac <printf_parse@@Base+0x2db4>  // b.none
   2a0a0:	ldr	x0, [sp, #64]
   2a0a4:	cmp	x0, #0x0
   2a0a8:	b.ne	2a0b4 <printf_parse@@Base+0x2dbc>  // b.any
   2a0ac:	str	wzr, [sp, #76]
   2a0b0:	b	2a0cc <printf_parse@@Base+0x2dd4>
   2a0b4:	ldr	x0, [sp, #40]
   2a0b8:	ldr	x1, [x0]
   2a0bc:	ldr	x0, [sp, #88]
   2a0c0:	add	x0, x1, x0
   2a0c4:	ldrb	w0, [x0]
   2a0c8:	str	w0, [sp, #76]
   2a0cc:	mov	x0, #0x1                   	// #1
   2a0d0:	str	x0, [sp, #80]
   2a0d4:	ldr	x0, [sp, #40]
   2a0d8:	ldr	x1, [sp, #56]
   2a0dc:	str	x1, [x0, #32]
   2a0e0:	b	2a0ec <printf_parse@@Base+0x2df4>
   2a0e4:	ldr	w0, [sp, #52]
   2a0e8:	str	w0, [sp, #76]
   2a0ec:	ldr	x1, [sp, #88]
   2a0f0:	ldr	x0, [sp, #80]
   2a0f4:	add	x0, x1, x0
   2a0f8:	str	x0, [sp, #88]
   2a0fc:	ldr	x1, [sp, #88]
   2a100:	ldr	x0, [sp, #32]
   2a104:	cmp	x1, x0
   2a108:	b.lt	29fe4 <printf_parse@@Base+0x2cec>  // b.tstop
   2a10c:	ldr	x0, [sp, #24]
   2a110:	ldr	w1, [sp, #76]
   2a114:	str	w1, [x0]
   2a118:	ldr	x0, [sp, #88]
   2a11c:	ldp	x29, x30, [sp], #96
   2a120:	ret
   2a124:	stp	x29, x30, [sp, #-64]!
   2a128:	mov	x29, sp
   2a12c:	str	x0, [sp, #24]
   2a130:	ldr	x0, [sp, #24]
   2a134:	ldr	x1, [x0, #64]
   2a138:	ldr	x0, [sp, #24]
   2a13c:	ldr	x0, [x0, #88]
   2a140:	cmp	x1, x0
   2a144:	csel	x0, x1, x0, le
   2a148:	str	x0, [sp, #40]
   2a14c:	ldr	x0, [sp, #24]
   2a150:	ldr	x0, [x0, #48]
   2a154:	str	x0, [sp, #56]
   2a158:	b	2a1e8 <printf_parse@@Base+0x2ef0>
   2a15c:	ldr	x0, [sp, #24]
   2a160:	ldr	x0, [x0]
   2a164:	ldr	x1, [sp, #24]
   2a168:	ldr	x2, [x1, #40]
   2a16c:	ldr	x1, [sp, #56]
   2a170:	add	x1, x2, x1
   2a174:	add	x0, x0, x1
   2a178:	ldrb	w0, [x0]
   2a17c:	str	w0, [sp, #52]
   2a180:	ldr	x0, [sp, #24]
   2a184:	ldr	x0, [x0, #120]
   2a188:	cmp	x0, #0x0
   2a18c:	cset	w0, ne  // ne = any
   2a190:	and	w0, w0, #0xff
   2a194:	and	x0, x0, #0xff
   2a198:	cmp	x0, #0x0
   2a19c:	b.eq	2a1b8 <printf_parse@@Base+0x2ec0>  // b.none
   2a1a0:	ldr	x0, [sp, #24]
   2a1a4:	ldr	x1, [x0, #120]
   2a1a8:	ldrsw	x0, [sp, #52]
   2a1ac:	add	x0, x1, x0
   2a1b0:	ldrb	w0, [x0]
   2a1b4:	str	w0, [sp, #52]
   2a1b8:	ldr	w0, [sp, #52]
   2a1bc:	bl	ab70 <toupper@plt>
   2a1c0:	mov	w2, w0
   2a1c4:	ldr	x0, [sp, #24]
   2a1c8:	ldr	x1, [x0, #8]
   2a1cc:	ldr	x0, [sp, #56]
   2a1d0:	add	x0, x1, x0
   2a1d4:	and	w1, w2, #0xff
   2a1d8:	strb	w1, [x0]
   2a1dc:	ldr	x0, [sp, #56]
   2a1e0:	add	x0, x0, #0x1
   2a1e4:	str	x0, [sp, #56]
   2a1e8:	ldr	x1, [sp, #56]
   2a1ec:	ldr	x0, [sp, #40]
   2a1f0:	cmp	x1, x0
   2a1f4:	b.lt	2a15c <printf_parse@@Base+0x2e64>  // b.tstop
   2a1f8:	ldr	x0, [sp, #24]
   2a1fc:	ldr	x1, [sp, #56]
   2a200:	str	x1, [x0, #48]
   2a204:	ldr	x0, [sp, #24]
   2a208:	ldr	x1, [sp, #56]
   2a20c:	str	x1, [x0, #56]
   2a210:	nop
   2a214:	ldp	x29, x30, [sp], #64
   2a218:	ret
   2a21c:	sub	sp, sp, #0x30
   2a220:	str	x0, [sp, #8]
   2a224:	ldr	x0, [sp, #8]
   2a228:	ldr	x1, [x0, #64]
   2a22c:	ldr	x0, [sp, #8]
   2a230:	ldr	x0, [x0, #88]
   2a234:	cmp	x1, x0
   2a238:	csel	x0, x1, x0, le
   2a23c:	str	x0, [sp, #32]
   2a240:	ldr	x0, [sp, #8]
   2a244:	ldr	x0, [x0, #48]
   2a248:	str	x0, [sp, #40]
   2a24c:	b	2a2a8 <printf_parse@@Base+0x2fb0>
   2a250:	ldr	x0, [sp, #8]
   2a254:	ldr	x0, [x0]
   2a258:	ldr	x1, [sp, #8]
   2a25c:	ldr	x2, [x1, #40]
   2a260:	ldr	x1, [sp, #40]
   2a264:	add	x1, x2, x1
   2a268:	add	x0, x0, x1
   2a26c:	ldrb	w0, [x0]
   2a270:	str	w0, [sp, #28]
   2a274:	ldr	x0, [sp, #8]
   2a278:	ldr	x1, [x0, #120]
   2a27c:	ldrsw	x0, [sp, #28]
   2a280:	add	x1, x1, x0
   2a284:	ldr	x0, [sp, #8]
   2a288:	ldr	x2, [x0, #8]
   2a28c:	ldr	x0, [sp, #40]
   2a290:	add	x0, x2, x0
   2a294:	ldrb	w1, [x1]
   2a298:	strb	w1, [x0]
   2a29c:	ldr	x0, [sp, #40]
   2a2a0:	add	x0, x0, #0x1
   2a2a4:	str	x0, [sp, #40]
   2a2a8:	ldr	x1, [sp, #40]
   2a2ac:	ldr	x0, [sp, #32]
   2a2b0:	cmp	x1, x0
   2a2b4:	b.lt	2a250 <printf_parse@@Base+0x2f58>  // b.tstop
   2a2b8:	ldr	x0, [sp, #8]
   2a2bc:	ldr	x1, [sp, #40]
   2a2c0:	str	x1, [x0, #48]
   2a2c4:	ldr	x0, [sp, #8]
   2a2c8:	ldr	x1, [sp, #40]
   2a2cc:	str	x1, [x0, #56]
   2a2d0:	nop
   2a2d4:	add	sp, sp, #0x30
   2a2d8:	ret
   2a2dc:	stp	x29, x30, [sp, #-192]!
   2a2e0:	mov	x29, sp
   2a2e4:	str	x0, [sp, #40]
   2a2e8:	str	x1, [sp, #32]
   2a2ec:	str	w2, [sp, #28]
   2a2f0:	ldr	x0, [sp, #40]
   2a2f4:	ldr	x0, [x0, #40]
   2a2f8:	ldr	x1, [sp, #32]
   2a2fc:	cmp	x1, x0
   2a300:	cset	w0, ge  // ge = tcont
   2a304:	and	w0, w0, #0xff
   2a308:	and	x0, x0, #0xff
   2a30c:	cmp	x0, #0x0
   2a310:	b.eq	2a32c <printf_parse@@Base+0x3034>  // b.none
   2a314:	ldr	x0, [sp, #40]
   2a318:	ldr	x0, [x0, #40]
   2a31c:	ldr	x1, [sp, #32]
   2a320:	sub	x0, x1, x0
   2a324:	str	x0, [sp, #184]
   2a328:	b	2a3dc <printf_parse@@Base+0x30e4>
   2a32c:	ldr	x0, [sp, #40]
   2a330:	ldr	w0, [x0, #144]
   2a334:	cmp	w0, #0x1
   2a338:	b.le	2a350 <printf_parse@@Base+0x3058>
   2a33c:	ldr	x0, [sp, #40]
   2a340:	add	x0, x0, #0x20
   2a344:	mov	x2, #0x8                   	// #8
   2a348:	mov	w1, #0x0                   	// #0
   2a34c:	bl	acb0 <memset@plt>
   2a350:	ldr	x0, [sp, #40]
   2a354:	ldr	x1, [x0, #80]
   2a358:	ldr	x0, [sp, #40]
   2a35c:	str	x1, [x0, #88]
   2a360:	ldr	x0, [sp, #40]
   2a364:	ldr	x1, [x0, #96]
   2a368:	ldr	x0, [sp, #40]
   2a36c:	str	x1, [x0, #104]
   2a370:	ldr	x0, [sp, #40]
   2a374:	str	xzr, [x0, #48]
   2a378:	ldr	x0, [sp, #40]
   2a37c:	str	xzr, [x0, #40]
   2a380:	ldr	x0, [sp, #40]
   2a384:	str	xzr, [x0, #56]
   2a388:	ldr	x0, [sp, #40]
   2a38c:	strb	wzr, [x0, #140]
   2a390:	ldr	w0, [sp, #28]
   2a394:	and	w0, w0, #0x1
   2a398:	cmp	w0, #0x0
   2a39c:	b.eq	2a3a8 <printf_parse@@Base+0x30b0>  // b.none
   2a3a0:	mov	w0, #0x4                   	// #4
   2a3a4:	b	2a3ac <printf_parse@@Base+0x30b4>
   2a3a8:	mov	w0, #0x6                   	// #6
   2a3ac:	ldr	x1, [sp, #40]
   2a3b0:	str	w0, [x1, #112]
   2a3b4:	ldr	x0, [sp, #40]
   2a3b8:	ldrb	w0, [x0, #139]
   2a3bc:	cmp	w0, #0x0
   2a3c0:	b.ne	2a3d4 <printf_parse@@Base+0x30dc>  // b.any
   2a3c4:	ldr	x0, [sp, #40]
   2a3c8:	ldr	x1, [x0]
   2a3cc:	ldr	x0, [sp, #40]
   2a3d0:	str	x1, [x0, #8]
   2a3d4:	ldr	x0, [sp, #32]
   2a3d8:	str	x0, [sp, #184]
   2a3dc:	ldr	x0, [sp, #184]
   2a3e0:	cmp	x0, #0x0
   2a3e4:	cset	w0, ne  // ne = any
   2a3e8:	and	w0, w0, #0xff
   2a3ec:	and	x0, x0, #0xff
   2a3f0:	cmp	x0, #0x0
   2a3f4:	b.eq	2ae10 <printf_parse@@Base+0x3b18>  // b.none
   2a3f8:	ldr	x0, [sp, #40]
   2a3fc:	ldr	x0, [x0, #56]
   2a400:	ldr	x1, [sp, #184]
   2a404:	cmp	x1, x0
   2a408:	cset	w0, lt  // lt = tstop
   2a40c:	and	w0, w0, #0xff
   2a410:	and	x0, x0, #0xff
   2a414:	cmp	x0, #0x0
   2a418:	b.eq	2a920 <printf_parse@@Base+0x3628>  // b.none
   2a41c:	ldr	x0, [sp, #40]
   2a420:	ldrb	w0, [x0, #140]
   2a424:	and	x0, x0, #0xff
   2a428:	cmp	x0, #0x0
   2a42c:	b.eq	2a82c <printf_parse@@Base+0x3534>  // b.none
   2a430:	str	xzr, [sp, #176]
   2a434:	ldr	x0, [sp, #40]
   2a438:	ldr	x0, [x0, #48]
   2a43c:	str	x0, [sp, #168]
   2a440:	ldr	x1, [sp, #168]
   2a444:	ldr	x0, [sp, #176]
   2a448:	add	x0, x1, x0
   2a44c:	lsr	x1, x0, #63
   2a450:	add	x0, x1, x0
   2a454:	asr	x0, x0, #1
   2a458:	str	x0, [sp, #160]
   2a45c:	ldr	x0, [sp, #40]
   2a460:	ldr	x1, [x0, #24]
   2a464:	ldr	x0, [sp, #160]
   2a468:	lsl	x0, x0, #3
   2a46c:	add	x0, x1, x0
   2a470:	ldr	x0, [x0]
   2a474:	ldr	x1, [sp, #184]
   2a478:	cmp	x1, x0
   2a47c:	b.ge	2a48c <printf_parse@@Base+0x3194>  // b.tcont
   2a480:	ldr	x0, [sp, #160]
   2a484:	str	x0, [sp, #168]
   2a488:	b	2a4bc <printf_parse@@Base+0x31c4>
   2a48c:	ldr	x0, [sp, #40]
   2a490:	ldr	x1, [x0, #24]
   2a494:	ldr	x0, [sp, #160]
   2a498:	lsl	x0, x0, #3
   2a49c:	add	x0, x1, x0
   2a4a0:	ldr	x0, [x0]
   2a4a4:	ldr	x1, [sp, #184]
   2a4a8:	cmp	x1, x0
   2a4ac:	b.le	2a4d0 <printf_parse@@Base+0x31d8>
   2a4b0:	ldr	x0, [sp, #160]
   2a4b4:	add	x0, x0, #0x1
   2a4b8:	str	x0, [sp, #176]
   2a4bc:	ldr	x1, [sp, #176]
   2a4c0:	ldr	x0, [sp, #168]
   2a4c4:	cmp	x1, x0
   2a4c8:	b.lt	2a440 <printf_parse@@Base+0x3148>  // b.tstop
   2a4cc:	b	2a4d4 <printf_parse@@Base+0x31dc>
   2a4d0:	nop
   2a4d4:	ldr	x0, [sp, #40]
   2a4d8:	ldr	x1, [x0, #24]
   2a4dc:	ldr	x0, [sp, #160]
   2a4e0:	lsl	x0, x0, #3
   2a4e4:	add	x0, x1, x0
   2a4e8:	ldr	x0, [x0]
   2a4ec:	ldr	x1, [sp, #184]
   2a4f0:	cmp	x1, x0
   2a4f4:	b.le	2a504 <printf_parse@@Base+0x320c>
   2a4f8:	ldr	x0, [sp, #160]
   2a4fc:	add	x0, x0, #0x1
   2a500:	str	x0, [sp, #160]
   2a504:	ldr	x0, [sp, #160]
   2a508:	sub	x0, x0, #0x1
   2a50c:	ldr	w2, [sp, #28]
   2a510:	mov	x1, x0
   2a514:	ldr	x0, [sp, #40]
   2a518:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   2a51c:	mov	w1, w0
   2a520:	ldr	x0, [sp, #40]
   2a524:	str	w1, [x0, #112]
   2a528:	ldr	x0, [sp, #40]
   2a52c:	ldr	x0, [x0, #48]
   2a530:	ldr	x1, [sp, #184]
   2a534:	cmp	x1, x0
   2a538:	b.ge	2a684 <printf_parse@@Base+0x338c>  // b.tcont
   2a53c:	ldr	x1, [sp, #160]
   2a540:	ldr	x0, [sp, #184]
   2a544:	cmp	x1, x0
   2a548:	b.ne	2a684 <printf_parse@@Base+0x338c>  // b.any
   2a54c:	ldr	x0, [sp, #40]
   2a550:	ldr	x1, [x0, #24]
   2a554:	ldr	x0, [sp, #160]
   2a558:	lsl	x0, x0, #3
   2a55c:	add	x0, x1, x0
   2a560:	ldr	x0, [x0]
   2a564:	ldr	x1, [sp, #184]
   2a568:	cmp	x1, x0
   2a56c:	b.ne	2a684 <printf_parse@@Base+0x338c>  // b.any
   2a570:	ldr	x0, [sp, #40]
   2a574:	ldr	x3, [x0, #16]
   2a578:	ldr	x0, [sp, #40]
   2a57c:	ldr	x1, [x0, #16]
   2a580:	ldr	x0, [sp, #184]
   2a584:	lsl	x0, x0, #2
   2a588:	add	x4, x1, x0
   2a58c:	ldr	x0, [sp, #40]
   2a590:	ldr	x1, [x0, #48]
   2a594:	ldr	x0, [sp, #184]
   2a598:	sub	x0, x1, x0
   2a59c:	lsl	x0, x0, #2
   2a5a0:	mov	x2, x0
   2a5a4:	mov	x1, x4
   2a5a8:	mov	x0, x3
   2a5ac:	bl	a7a0 <memmove@plt>
   2a5b0:	ldr	x0, [sp, #40]
   2a5b4:	ldr	x3, [x0, #8]
   2a5b8:	ldr	x0, [sp, #40]
   2a5bc:	ldr	x1, [x0, #8]
   2a5c0:	ldr	x0, [sp, #184]
   2a5c4:	add	x4, x1, x0
   2a5c8:	ldr	x0, [sp, #40]
   2a5cc:	ldr	x1, [x0, #48]
   2a5d0:	ldr	x0, [sp, #184]
   2a5d4:	sub	x0, x1, x0
   2a5d8:	mov	x2, x0
   2a5dc:	mov	x1, x4
   2a5e0:	mov	x0, x3
   2a5e4:	bl	a7a0 <memmove@plt>
   2a5e8:	ldr	x0, [sp, #40]
   2a5ec:	ldr	x1, [x0, #48]
   2a5f0:	ldr	x0, [sp, #184]
   2a5f4:	sub	x1, x1, x0
   2a5f8:	ldr	x0, [sp, #40]
   2a5fc:	str	x1, [x0, #48]
   2a600:	ldr	x0, [sp, #40]
   2a604:	ldr	x1, [x0, #56]
   2a608:	ldr	x0, [sp, #184]
   2a60c:	sub	x1, x1, x0
   2a610:	ldr	x0, [sp, #40]
   2a614:	str	x1, [x0, #56]
   2a618:	str	xzr, [sp, #176]
   2a61c:	b	2a66c <printf_parse@@Base+0x3374>
   2a620:	ldr	x0, [sp, #40]
   2a624:	ldr	x1, [x0, #24]
   2a628:	ldr	x2, [sp, #176]
   2a62c:	ldr	x0, [sp, #184]
   2a630:	add	x0, x2, x0
   2a634:	lsl	x0, x0, #3
   2a638:	add	x0, x1, x0
   2a63c:	ldr	x2, [x0]
   2a640:	ldr	x0, [sp, #40]
   2a644:	ldr	x1, [x0, #24]
   2a648:	ldr	x0, [sp, #176]
   2a64c:	lsl	x0, x0, #3
   2a650:	add	x0, x1, x0
   2a654:	ldr	x1, [sp, #184]
   2a658:	sub	x1, x2, x1
   2a65c:	str	x1, [x0]
   2a660:	ldr	x0, [sp, #176]
   2a664:	add	x0, x0, #0x1
   2a668:	str	x0, [sp, #176]
   2a66c:	ldr	x0, [sp, #40]
   2a670:	ldr	x0, [x0, #48]
   2a674:	ldr	x1, [sp, #176]
   2a678:	cmp	x1, x0
   2a67c:	b.lt	2a620 <printf_parse@@Base+0x3328>  // b.tstop
   2a680:	b	2ade4 <printf_parse@@Base+0x3aec>
   2a684:	ldr	x0, [sp, #40]
   2a688:	ldr	x1, [x0, #80]
   2a68c:	ldr	x0, [sp, #32]
   2a690:	sub	x1, x1, x0
   2a694:	ldr	x0, [sp, #184]
   2a698:	add	x1, x1, x0
   2a69c:	ldr	x0, [sp, #40]
   2a6a0:	str	x1, [x0, #88]
   2a6a4:	ldr	x0, [sp, #40]
   2a6a8:	ldr	x1, [x0, #96]
   2a6ac:	ldr	x0, [sp, #32]
   2a6b0:	sub	x1, x1, x0
   2a6b4:	ldr	x0, [sp, #184]
   2a6b8:	add	x1, x1, x0
   2a6bc:	ldr	x0, [sp, #40]
   2a6c0:	str	x1, [x0, #104]
   2a6c4:	ldr	x0, [sp, #40]
   2a6c8:	strb	wzr, [x0, #140]
   2a6cc:	b	2a6dc <printf_parse@@Base+0x33e4>
   2a6d0:	ldr	x0, [sp, #160]
   2a6d4:	sub	x0, x0, #0x1
   2a6d8:	str	x0, [sp, #160]
   2a6dc:	ldr	x0, [sp, #160]
   2a6e0:	cmp	x0, #0x0
   2a6e4:	b.le	2a740 <printf_parse@@Base+0x3448>
   2a6e8:	ldr	x0, [sp, #40]
   2a6ec:	ldr	x1, [x0, #24]
   2a6f0:	ldr	x0, [sp, #160]
   2a6f4:	lsl	x0, x0, #3
   2a6f8:	sub	x0, x0, #0x8
   2a6fc:	add	x0, x1, x0
   2a700:	ldr	x0, [x0]
   2a704:	ldr	x1, [sp, #184]
   2a708:	cmp	x1, x0
   2a70c:	b.eq	2a6d0 <printf_parse@@Base+0x33d8>  // b.none
   2a710:	b	2a740 <printf_parse@@Base+0x3448>
   2a714:	ldr	x0, [sp, #40]
   2a718:	ldr	x1, [x0, #16]
   2a71c:	ldr	x0, [sp, #160]
   2a720:	lsl	x0, x0, #2
   2a724:	add	x0, x1, x0
   2a728:	ldr	w0, [x0]
   2a72c:	cmn	w0, #0x1
   2a730:	b.ne	2a758 <printf_parse@@Base+0x3460>  // b.any
   2a734:	ldr	x0, [sp, #160]
   2a738:	add	x0, x0, #0x1
   2a73c:	str	x0, [sp, #160]
   2a740:	ldr	x0, [sp, #40]
   2a744:	ldr	x0, [x0, #48]
   2a748:	ldr	x1, [sp, #160]
   2a74c:	cmp	x1, x0
   2a750:	b.lt	2a714 <printf_parse@@Base+0x341c>  // b.tstop
   2a754:	b	2a75c <printf_parse@@Base+0x3464>
   2a758:	nop
   2a75c:	ldr	x0, [sp, #40]
   2a760:	ldr	x0, [x0, #48]
   2a764:	ldr	x1, [sp, #160]
   2a768:	cmp	x1, x0
   2a76c:	b.ne	2a77c <printf_parse@@Base+0x3484>  // b.any
   2a770:	ldr	x0, [sp, #40]
   2a774:	str	xzr, [x0, #48]
   2a778:	b	2a818 <printf_parse@@Base+0x3520>
   2a77c:	ldr	x0, [sp, #40]
   2a780:	ldr	x1, [x0, #24]
   2a784:	ldr	x0, [sp, #160]
   2a788:	lsl	x0, x0, #3
   2a78c:	add	x0, x1, x0
   2a790:	ldr	x1, [x0]
   2a794:	ldr	x0, [sp, #184]
   2a798:	sub	x1, x1, x0
   2a79c:	ldr	x0, [sp, #40]
   2a7a0:	str	x1, [x0, #48]
   2a7a4:	ldr	x0, [sp, #40]
   2a7a8:	ldr	x0, [x0, #48]
   2a7ac:	cmp	x0, #0x0
   2a7b0:	b.eq	2a818 <printf_parse@@Base+0x3520>  // b.none
   2a7b4:	str	xzr, [sp, #176]
   2a7b8:	b	2a7e4 <printf_parse@@Base+0x34ec>
   2a7bc:	ldr	x0, [sp, #40]
   2a7c0:	ldr	x1, [x0, #16]
   2a7c4:	ldr	x0, [sp, #176]
   2a7c8:	lsl	x0, x0, #2
   2a7cc:	add	x0, x1, x0
   2a7d0:	mov	w1, #0xffffffff            	// #-1
   2a7d4:	str	w1, [x0]
   2a7d8:	ldr	x0, [sp, #176]
   2a7dc:	add	x0, x0, #0x1
   2a7e0:	str	x0, [sp, #176]
   2a7e4:	ldr	x0, [sp, #40]
   2a7e8:	ldr	x0, [x0, #48]
   2a7ec:	ldr	x1, [sp, #176]
   2a7f0:	cmp	x1, x0
   2a7f4:	b.lt	2a7bc <printf_parse@@Base+0x34c4>  // b.tstop
   2a7f8:	ldr	x0, [sp, #40]
   2a7fc:	ldr	x3, [x0, #8]
   2a800:	ldr	x0, [sp, #40]
   2a804:	ldr	x0, [x0, #48]
   2a808:	mov	x2, x0
   2a80c:	mov	w1, #0xff                  	// #255
   2a810:	mov	x0, x3
   2a814:	bl	acb0 <memset@plt>
   2a818:	ldr	x0, [sp, #40]
   2a81c:	ldr	x1, [x0, #48]
   2a820:	ldr	x0, [sp, #40]
   2a824:	str	x1, [x0, #56]
   2a828:	b	2ade4 <printf_parse@@Base+0x3aec>
   2a82c:	ldr	x0, [sp, #184]
   2a830:	sub	x0, x0, #0x1
   2a834:	ldr	w2, [sp, #28]
   2a838:	mov	x1, x0
   2a83c:	ldr	x0, [sp, #40]
   2a840:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   2a844:	mov	w1, w0
   2a848:	ldr	x0, [sp, #40]
   2a84c:	str	w1, [x0, #112]
   2a850:	ldr	x0, [sp, #40]
   2a854:	ldr	w0, [x0, #144]
   2a858:	cmp	w0, #0x1
   2a85c:	b.le	2a8a0 <printf_parse@@Base+0x35a8>
   2a860:	ldr	x0, [sp, #40]
   2a864:	ldr	x3, [x0, #16]
   2a868:	ldr	x0, [sp, #40]
   2a86c:	ldr	x1, [x0, #16]
   2a870:	ldr	x0, [sp, #184]
   2a874:	lsl	x0, x0, #2
   2a878:	add	x4, x1, x0
   2a87c:	ldr	x0, [sp, #40]
   2a880:	ldr	x1, [x0, #48]
   2a884:	ldr	x0, [sp, #184]
   2a888:	sub	x0, x1, x0
   2a88c:	lsl	x0, x0, #2
   2a890:	mov	x2, x0
   2a894:	mov	x1, x4
   2a898:	mov	x0, x3
   2a89c:	bl	a7a0 <memmove@plt>
   2a8a0:	ldr	x0, [sp, #40]
   2a8a4:	ldrb	w0, [x0, #139]
   2a8a8:	and	x0, x0, #0xff
   2a8ac:	cmp	x0, #0x0
   2a8b0:	b.eq	2a8ec <printf_parse@@Base+0x35f4>  // b.none
   2a8b4:	ldr	x0, [sp, #40]
   2a8b8:	ldr	x3, [x0, #8]
   2a8bc:	ldr	x0, [sp, #40]
   2a8c0:	ldr	x1, [x0, #8]
   2a8c4:	ldr	x0, [sp, #184]
   2a8c8:	add	x4, x1, x0
   2a8cc:	ldr	x0, [sp, #40]
   2a8d0:	ldr	x1, [x0, #48]
   2a8d4:	ldr	x0, [sp, #184]
   2a8d8:	sub	x0, x1, x0
   2a8dc:	mov	x2, x0
   2a8e0:	mov	x1, x4
   2a8e4:	mov	x0, x3
   2a8e8:	bl	a7a0 <memmove@plt>
   2a8ec:	ldr	x0, [sp, #40]
   2a8f0:	ldr	x1, [x0, #48]
   2a8f4:	ldr	x0, [sp, #184]
   2a8f8:	sub	x1, x1, x0
   2a8fc:	ldr	x0, [sp, #40]
   2a900:	str	x1, [x0, #48]
   2a904:	ldr	x0, [sp, #40]
   2a908:	ldr	x1, [x0, #56]
   2a90c:	ldr	x0, [sp, #184]
   2a910:	sub	x1, x1, x0
   2a914:	ldr	x0, [sp, #40]
   2a918:	str	x1, [x0, #56]
   2a91c:	b	2ade4 <printf_parse@@Base+0x3aec>
   2a920:	ldr	x0, [sp, #40]
   2a924:	ldr	x0, [x0, #48]
   2a928:	str	x0, [sp, #112]
   2a92c:	ldr	x0, [sp, #40]
   2a930:	ldrb	w0, [x0, #140]
   2a934:	and	x0, x0, #0xff
   2a938:	cmp	x0, #0x0
   2a93c:	b.eq	2a988 <printf_parse@@Base+0x3690>  // b.none
   2a940:	ldr	x0, [sp, #40]
   2a944:	ldr	x1, [x0, #80]
   2a948:	ldr	x0, [sp, #32]
   2a94c:	sub	x1, x1, x0
   2a950:	ldr	x0, [sp, #184]
   2a954:	add	x1, x1, x0
   2a958:	ldr	x0, [sp, #40]
   2a95c:	str	x1, [x0, #88]
   2a960:	ldr	x0, [sp, #40]
   2a964:	ldr	x1, [x0, #96]
   2a968:	ldr	x0, [sp, #32]
   2a96c:	sub	x1, x1, x0
   2a970:	ldr	x0, [sp, #184]
   2a974:	add	x1, x1, x0
   2a978:	ldr	x0, [sp, #40]
   2a97c:	str	x1, [x0, #104]
   2a980:	ldr	x0, [sp, #40]
   2a984:	strb	wzr, [x0, #140]
   2a988:	ldr	x0, [sp, #40]
   2a98c:	str	xzr, [x0, #48]
   2a990:	ldr	x0, [sp, #40]
   2a994:	ldr	w0, [x0, #144]
   2a998:	cmp	w0, #0x1
   2a99c:	b.le	2ad38 <printf_parse@@Base+0x3a40>
   2a9a0:	mov	w0, #0xffffffff            	// #-1
   2a9a4:	str	w0, [sp, #80]
   2a9a8:	ldr	x0, [sp, #40]
   2a9ac:	ldrb	w0, [x0, #137]
   2a9b0:	cmp	w0, #0x0
   2a9b4:	b.eq	2abc4 <printf_parse@@Base+0x38cc>  // b.none
   2a9b8:	ldr	x0, [sp, #40]
   2a9bc:	ldr	x0, [x0]
   2a9c0:	ldr	x1, [sp, #40]
   2a9c4:	ldr	x1, [x1, #40]
   2a9c8:	add	x0, x0, x1
   2a9cc:	str	x0, [sp, #104]
   2a9d0:	ldr	x0, [sp, #40]
   2a9d4:	ldr	w0, [x0, #144]
   2a9d8:	sxtw	x0, w0
   2a9dc:	ldr	x1, [sp, #184]
   2a9e0:	sub	x0, x1, x0
   2a9e4:	mov	x1, x0
   2a9e8:	ldr	x0, [sp, #104]
   2a9ec:	add	x0, x0, x1
   2a9f0:	str	x0, [sp, #136]
   2a9f4:	ldr	x0, [sp, #40]
   2a9f8:	ldr	x0, [x0]
   2a9fc:	ldr	x1, [sp, #136]
   2aa00:	cmp	x1, x0
   2aa04:	b.cs	2aa14 <printf_parse@@Base+0x371c>  // b.hs, b.nlast
   2aa08:	ldr	x0, [sp, #40]
   2aa0c:	ldr	x0, [x0]
   2aa10:	str	x0, [sp, #136]
   2aa14:	ldr	x0, [sp, #184]
   2aa18:	sub	x0, x0, #0x1
   2aa1c:	ldr	x1, [sp, #104]
   2aa20:	add	x0, x1, x0
   2aa24:	str	x0, [sp, #144]
   2aa28:	b	2abac <printf_parse@@Base+0x38b4>
   2aa2c:	ldr	x0, [sp, #144]
   2aa30:	ldrb	w0, [x0]
   2aa34:	and	w0, w0, #0xc0
   2aa38:	cmp	w0, #0x80
   2aa3c:	b.eq	2aba0 <printf_parse@@Base+0x38a8>  // b.none
   2aa40:	ldr	x0, [sp, #40]
   2aa44:	ldr	x0, [x0, #88]
   2aa48:	mov	x1, x0
   2aa4c:	ldr	x0, [sp, #104]
   2aa50:	add	x1, x0, x1
   2aa54:	ldr	x0, [sp, #144]
   2aa58:	sub	x0, x1, x0
   2aa5c:	str	x0, [sp, #96]
   2aa60:	ldr	x0, [sp, #144]
   2aa64:	str	x0, [sp, #128]
   2aa68:	ldr	x0, [sp, #40]
   2aa6c:	ldr	x0, [x0, #120]
   2aa70:	cmp	x0, #0x0
   2aa74:	cset	w0, ne  // ne = any
   2aa78:	and	w0, w0, #0xff
   2aa7c:	and	x0, x0, #0xff
   2aa80:	cmp	x0, #0x0
   2aa84:	b.eq	2aaf4 <printf_parse@@Base+0x37fc>  // b.none
   2aa88:	ldr	x2, [sp, #96]
   2aa8c:	ldr	x1, [sp, #96]
   2aa90:	mov	x0, #0x6                   	// #6
   2aa94:	cmp	x2, #0x6
   2aa98:	csel	x0, x1, x0, le
   2aa9c:	str	w0, [sp, #124]
   2aaa0:	b	2aad4 <printf_parse@@Base+0x37dc>
   2aaa4:	ldr	x0, [sp, #40]
   2aaa8:	ldr	x1, [x0, #120]
   2aaac:	ldrsw	x0, [sp, #124]
   2aab0:	ldr	x2, [sp, #144]
   2aab4:	add	x0, x2, x0
   2aab8:	ldrb	w0, [x0]
   2aabc:	and	x0, x0, #0xff
   2aac0:	add	x0, x1, x0
   2aac4:	ldrb	w2, [x0]
   2aac8:	ldrsw	x0, [sp, #124]
   2aacc:	add	x1, sp, #0x38
   2aad0:	strb	w2, [x1, x0]
   2aad4:	ldr	w0, [sp, #124]
   2aad8:	sub	w0, w0, #0x1
   2aadc:	str	w0, [sp, #124]
   2aae0:	ldr	w0, [sp, #124]
   2aae4:	cmp	w0, #0x0
   2aae8:	b.ge	2aaa4 <printf_parse@@Base+0x37ac>  // b.tcont
   2aaec:	add	x0, sp, #0x38
   2aaf0:	str	x0, [sp, #128]
   2aaf4:	add	x0, sp, #0x48
   2aaf8:	mov	x2, #0x8                   	// #8
   2aafc:	mov	w1, #0x0                   	// #0
   2ab00:	bl	acb0 <memset@plt>
   2ab04:	ldr	x1, [sp, #96]
   2ab08:	add	x2, sp, #0x48
   2ab0c:	add	x0, sp, #0x44
   2ab10:	mov	x3, x2
   2ab14:	mov	x2, x1
   2ab18:	ldr	x1, [sp, #128]
   2ab1c:	bl	a8d0 <rpl_mbrtowc@plt>
   2ab20:	str	x0, [sp, #88]
   2ab24:	ldr	x0, [sp, #184]
   2ab28:	ldr	x1, [sp, #104]
   2ab2c:	add	x1, x1, x0
   2ab30:	ldr	x0, [sp, #144]
   2ab34:	sub	x0, x1, x0
   2ab38:	mov	x1, x0
   2ab3c:	ldr	x0, [sp, #88]
   2ab40:	cmp	x0, x1
   2ab44:	b.cc	2abc0 <printf_parse@@Base+0x38c8>  // b.lo, b.ul, b.last
   2ab48:	ldr	x0, [sp, #88]
   2ab4c:	cmn	x0, #0x3
   2ab50:	b.hi	2abc0 <printf_parse@@Base+0x38c8>  // b.pmore
   2ab54:	ldr	x0, [sp, #40]
   2ab58:	add	x0, x0, #0x20
   2ab5c:	mov	x2, #0x8                   	// #8
   2ab60:	mov	w1, #0x0                   	// #0
   2ab64:	bl	acb0 <memset@plt>
   2ab68:	ldr	x0, [sp, #184]
   2ab6c:	ldr	x1, [sp, #104]
   2ab70:	add	x1, x1, x0
   2ab74:	ldr	x0, [sp, #144]
   2ab78:	sub	x0, x1, x0
   2ab7c:	mov	x1, x0
   2ab80:	ldr	x0, [sp, #88]
   2ab84:	sub	x0, x0, x1
   2ab88:	mov	x1, x0
   2ab8c:	ldr	x0, [sp, #40]
   2ab90:	str	x1, [x0, #48]
   2ab94:	ldr	w0, [sp, #68]
   2ab98:	str	w0, [sp, #80]
   2ab9c:	b	2abc0 <printf_parse@@Base+0x38c8>
   2aba0:	ldr	x0, [sp, #144]
   2aba4:	sub	x0, x0, #0x1
   2aba8:	str	x0, [sp, #144]
   2abac:	ldr	x1, [sp, #144]
   2abb0:	ldr	x0, [sp, #136]
   2abb4:	cmp	x1, x0
   2abb8:	b.cs	2aa2c <printf_parse@@Base+0x3734>  // b.hs, b.nlast
   2abbc:	b	2abc4 <printf_parse@@Base+0x38cc>
   2abc0:	nop
   2abc4:	ldr	w0, [sp, #80]
   2abc8:	cmn	w0, #0x1
   2abcc:	b.ne	2abf8 <printf_parse@@Base+0x3900>  // b.any
   2abd0:	add	x0, sp, #0x50
   2abd4:	mov	x2, x0
   2abd8:	ldr	x1, [sp, #32]
   2abdc:	ldr	x0, [sp, #40]
   2abe0:	bl	29fac <printf_parse@@Base+0x2cb4>
   2abe4:	mov	x1, x0
   2abe8:	ldr	x0, [sp, #32]
   2abec:	sub	x1, x1, x0
   2abf0:	ldr	x0, [sp, #40]
   2abf4:	str	x1, [x0, #48]
   2abf8:	ldr	w0, [sp, #80]
   2abfc:	cmn	w0, #0x1
   2ac00:	b.ne	2ac2c <printf_parse@@Base+0x3934>  // b.any
   2ac04:	ldr	x0, [sp, #112]
   2ac08:	sub	x0, x0, #0x1
   2ac0c:	ldr	w2, [sp, #28]
   2ac10:	mov	x1, x0
   2ac14:	ldr	x0, [sp, #40]
   2ac18:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   2ac1c:	mov	w1, w0
   2ac20:	ldr	x0, [sp, #40]
   2ac24:	str	w1, [x0, #112]
   2ac28:	b	2aca0 <printf_parse@@Base+0x39a8>
   2ac2c:	ldr	x0, [sp, #40]
   2ac30:	ldrb	w0, [x0, #142]
   2ac34:	cmp	w0, #0x0
   2ac38:	cset	w0, ne  // ne = any
   2ac3c:	and	w0, w0, #0xff
   2ac40:	and	x0, x0, #0xff
   2ac44:	cmp	x0, #0x0
   2ac48:	b.eq	2ac68 <printf_parse@@Base+0x3970>  // b.none
   2ac4c:	ldr	w0, [sp, #80]
   2ac50:	bl	b470 <iswalnum@plt>
   2ac54:	cmp	w0, #0x0
   2ac58:	b.ne	2ac94 <printf_parse@@Base+0x399c>  // b.any
   2ac5c:	ldr	w0, [sp, #80]
   2ac60:	cmp	w0, #0x5f
   2ac64:	b.eq	2ac94 <printf_parse@@Base+0x399c>  // b.none
   2ac68:	ldr	w0, [sp, #80]
   2ac6c:	cmp	w0, #0xa
   2ac70:	b.ne	2ac8c <printf_parse@@Base+0x3994>  // b.any
   2ac74:	ldr	x0, [sp, #40]
   2ac78:	ldrb	w0, [x0, #141]
   2ac7c:	cmp	w0, #0x0
   2ac80:	b.eq	2ac8c <printf_parse@@Base+0x3994>  // b.none
   2ac84:	mov	w0, #0x2                   	// #2
   2ac88:	b	2ac98 <printf_parse@@Base+0x39a0>
   2ac8c:	mov	w0, #0x0                   	// #0
   2ac90:	b	2ac98 <printf_parse@@Base+0x39a0>
   2ac94:	mov	w0, #0x1                   	// #1
   2ac98:	ldr	x1, [sp, #40]
   2ac9c:	str	w0, [x1, #112]
   2aca0:	ldr	x0, [sp, #40]
   2aca4:	ldr	x0, [x0, #48]
   2aca8:	cmp	x0, #0x0
   2acac:	b.eq	2ad24 <printf_parse@@Base+0x3a2c>  // b.none
   2acb0:	str	xzr, [sp, #152]
   2acb4:	b	2ace0 <printf_parse@@Base+0x39e8>
   2acb8:	ldr	x0, [sp, #40]
   2acbc:	ldr	x1, [x0, #16]
   2acc0:	ldr	x0, [sp, #152]
   2acc4:	lsl	x0, x0, #2
   2acc8:	add	x0, x1, x0
   2accc:	mov	w1, #0xffffffff            	// #-1
   2acd0:	str	w1, [x0]
   2acd4:	ldr	x0, [sp, #152]
   2acd8:	add	x0, x0, #0x1
   2acdc:	str	x0, [sp, #152]
   2ace0:	ldr	x0, [sp, #40]
   2ace4:	ldr	x0, [x0, #48]
   2ace8:	ldr	x1, [sp, #152]
   2acec:	cmp	x1, x0
   2acf0:	b.lt	2acb8 <printf_parse@@Base+0x39c0>  // b.tstop
   2acf4:	ldr	x0, [sp, #40]
   2acf8:	ldrb	w0, [x0, #139]
   2acfc:	cmp	w0, #0x0
   2ad00:	b.eq	2ad24 <printf_parse@@Base+0x3a2c>  // b.none
   2ad04:	ldr	x0, [sp, #40]
   2ad08:	ldr	x3, [x0, #8]
   2ad0c:	ldr	x0, [sp, #40]
   2ad10:	ldr	x0, [x0, #48]
   2ad14:	mov	x2, x0
   2ad18:	mov	w1, #0xff                  	// #255
   2ad1c:	mov	x0, x3
   2ad20:	bl	acb0 <memset@plt>
   2ad24:	ldr	x0, [sp, #40]
   2ad28:	ldr	x1, [x0, #48]
   2ad2c:	ldr	x0, [sp, #40]
   2ad30:	str	x1, [x0, #56]
   2ad34:	b	2ade4 <printf_parse@@Base+0x3aec>
   2ad38:	ldr	x0, [sp, #40]
   2ad3c:	ldr	x1, [x0]
   2ad40:	ldr	x0, [sp, #40]
   2ad44:	ldr	x2, [x0, #40]
   2ad48:	ldr	x0, [sp, #184]
   2ad4c:	add	x0, x2, x0
   2ad50:	sub	x0, x0, #0x1
   2ad54:	add	x0, x1, x0
   2ad58:	ldrb	w0, [x0]
   2ad5c:	str	w0, [sp, #120]
   2ad60:	ldr	x0, [sp, #40]
   2ad64:	str	xzr, [x0, #56]
   2ad68:	ldr	x0, [sp, #40]
   2ad6c:	ldr	x0, [x0, #120]
   2ad70:	cmp	x0, #0x0
   2ad74:	b.eq	2ad90 <printf_parse@@Base+0x3a98>  // b.none
   2ad78:	ldr	x0, [sp, #40]
   2ad7c:	ldr	x1, [x0, #120]
   2ad80:	ldrsw	x0, [sp, #120]
   2ad84:	add	x0, x1, x0
   2ad88:	ldrb	w0, [x0]
   2ad8c:	str	w0, [sp, #120]
   2ad90:	ldr	x0, [sp, #40]
   2ad94:	ldr	x0, [x0, #128]
   2ad98:	ldrsw	x1, [sp, #120]
   2ad9c:	bl	28838 <printf_parse@@Base+0x1540>
   2ada0:	and	w0, w0, #0xff
   2ada4:	cmp	w0, #0x0
   2ada8:	b.ne	2add8 <printf_parse@@Base+0x3ae0>  // b.any
   2adac:	ldr	w0, [sp, #120]
   2adb0:	cmp	w0, #0xa
   2adb4:	b.ne	2add0 <printf_parse@@Base+0x3ad8>  // b.any
   2adb8:	ldr	x0, [sp, #40]
   2adbc:	ldrb	w0, [x0, #141]
   2adc0:	cmp	w0, #0x0
   2adc4:	b.eq	2add0 <printf_parse@@Base+0x3ad8>  // b.none
   2adc8:	mov	w0, #0x2                   	// #2
   2adcc:	b	2addc <printf_parse@@Base+0x3ae4>
   2add0:	mov	w0, #0x0                   	// #0
   2add4:	b	2addc <printf_parse@@Base+0x3ae4>
   2add8:	mov	w0, #0x1                   	// #1
   2addc:	ldr	x1, [sp, #40]
   2ade0:	str	w0, [x1, #112]
   2ade4:	ldr	x0, [sp, #40]
   2ade8:	ldrb	w0, [x0, #139]
   2adec:	and	x0, x0, #0xff
   2adf0:	cmp	x0, #0x0
   2adf4:	b.ne	2ae10 <printf_parse@@Base+0x3b18>  // b.any
   2adf8:	ldr	x0, [sp, #40]
   2adfc:	ldr	x1, [x0, #8]
   2ae00:	ldr	x0, [sp, #184]
   2ae04:	add	x1, x1, x0
   2ae08:	ldr	x0, [sp, #40]
   2ae0c:	str	x1, [x0, #8]
   2ae10:	ldr	x0, [sp, #40]
   2ae14:	ldr	x1, [sp, #32]
   2ae18:	str	x1, [x0, #40]
   2ae1c:	ldr	x0, [sp, #40]
   2ae20:	ldr	x1, [x0, #88]
   2ae24:	ldr	x0, [sp, #184]
   2ae28:	sub	x1, x1, x0
   2ae2c:	ldr	x0, [sp, #40]
   2ae30:	str	x1, [x0, #88]
   2ae34:	ldr	x0, [sp, #40]
   2ae38:	ldr	x1, [x0, #104]
   2ae3c:	ldr	x0, [sp, #184]
   2ae40:	sub	x1, x1, x0
   2ae44:	ldr	x0, [sp, #40]
   2ae48:	str	x1, [x0, #104]
   2ae4c:	ldr	x0, [sp, #40]
   2ae50:	ldr	w0, [x0, #144]
   2ae54:	cmp	w0, #0x1
   2ae58:	b.le	2aea8 <printf_parse@@Base+0x3bb0>
   2ae5c:	ldr	x0, [sp, #40]
   2ae60:	ldrb	w0, [x0, #136]
   2ae64:	cmp	w0, #0x0
   2ae68:	b.eq	2ae9c <printf_parse@@Base+0x3ba4>  // b.none
   2ae6c:	ldr	x0, [sp, #40]
   2ae70:	bl	294b0 <printf_parse@@Base+0x21b8>
   2ae74:	str	w0, [sp, #84]
   2ae78:	ldr	w0, [sp, #84]
   2ae7c:	cmp	w0, #0x0
   2ae80:	cset	w0, ne  // ne = any
   2ae84:	and	w0, w0, #0xff
   2ae88:	and	x0, x0, #0xff
   2ae8c:	cmp	x0, #0x0
   2ae90:	b.eq	2af04 <printf_parse@@Base+0x3c0c>  // b.none
   2ae94:	ldr	w0, [sp, #84]
   2ae98:	b	2af10 <printf_parse@@Base+0x3c18>
   2ae9c:	ldr	x0, [sp, #40]
   2aea0:	bl	29158 <printf_parse@@Base+0x1e60>
   2aea4:	b	2af04 <printf_parse@@Base+0x3c0c>
   2aea8:	ldr	x0, [sp, #40]
   2aeac:	ldrb	w0, [x0, #139]
   2aeb0:	and	x0, x0, #0xff
   2aeb4:	cmp	x0, #0x0
   2aeb8:	b.eq	2aef4 <printf_parse@@Base+0x3bfc>  // b.none
   2aebc:	ldr	x0, [sp, #40]
   2aec0:	ldrb	w0, [x0, #136]
   2aec4:	cmp	w0, #0x0
   2aec8:	b.eq	2aed8 <printf_parse@@Base+0x3be0>  // b.none
   2aecc:	ldr	x0, [sp, #40]
   2aed0:	bl	2a124 <printf_parse@@Base+0x2e2c>
   2aed4:	b	2af04 <printf_parse@@Base+0x3c0c>
   2aed8:	ldr	x0, [sp, #40]
   2aedc:	ldr	x0, [x0, #120]
   2aee0:	cmp	x0, #0x0
   2aee4:	b.eq	2af04 <printf_parse@@Base+0x3c0c>  // b.none
   2aee8:	ldr	x0, [sp, #40]
   2aeec:	bl	2a21c <printf_parse@@Base+0x2f24>
   2aef0:	b	2af04 <printf_parse@@Base+0x3c0c>
   2aef4:	ldr	x0, [sp, #40]
   2aef8:	ldr	x1, [x0, #88]
   2aefc:	ldr	x0, [sp, #40]
   2af00:	str	x1, [x0, #48]
   2af04:	ldr	x0, [sp, #40]
   2af08:	str	xzr, [x0, #72]
   2af0c:	mov	w0, #0x0                   	// #0
   2af10:	ldp	x29, x30, [sp], #192
   2af14:	ret
   2af18:	sub	sp, sp, #0x20
   2af1c:	str	x0, [sp, #8]
   2af20:	str	x1, [sp]
   2af24:	ldr	x0, [sp, #8]
   2af28:	ldrb	w0, [x0, #139]
   2af2c:	cmp	w0, #0x0
   2af30:	cset	w0, eq  // eq = none
   2af34:	and	w0, w0, #0xff
   2af38:	and	x0, x0, #0xff
   2af3c:	cmp	x0, #0x0
   2af40:	b.eq	2af68 <printf_parse@@Base+0x3c70>  // b.none
   2af44:	ldr	x0, [sp, #8]
   2af48:	ldr	x0, [x0, #8]
   2af4c:	ldr	x1, [sp, #8]
   2af50:	ldr	x2, [x1, #72]
   2af54:	ldr	x1, [sp]
   2af58:	add	x1, x2, x1
   2af5c:	add	x0, x0, x1
   2af60:	ldrb	w0, [x0]
   2af64:	b	2b0cc <printf_parse@@Base+0x3dd4>
   2af68:	ldr	x0, [sp, #8]
   2af6c:	ldr	w0, [x0, #144]
   2af70:	cmp	w0, #0x1
   2af74:	b.le	2b01c <printf_parse@@Base+0x3d24>
   2af78:	ldr	x0, [sp, #8]
   2af7c:	ldr	x1, [x0, #16]
   2af80:	ldr	x0, [sp, #8]
   2af84:	ldr	x2, [x0, #72]
   2af88:	ldr	x0, [sp]
   2af8c:	add	x0, x2, x0
   2af90:	lsl	x0, x0, #2
   2af94:	add	x0, x1, x0
   2af98:	ldr	w0, [x0]
   2af9c:	cmn	w0, #0x1
   2afa0:	b.eq	2aff8 <printf_parse@@Base+0x3d00>  // b.none
   2afa4:	ldr	x0, [sp, #8]
   2afa8:	ldr	x1, [x0, #48]
   2afac:	ldr	x0, [sp, #8]
   2afb0:	ldr	x2, [x0, #72]
   2afb4:	ldr	x0, [sp]
   2afb8:	add	x0, x2, x0
   2afbc:	add	x0, x0, #0x1
   2afc0:	cmp	x1, x0
   2afc4:	b.eq	2b01c <printf_parse@@Base+0x3d24>  // b.none
   2afc8:	ldr	x0, [sp, #8]
   2afcc:	ldr	x1, [x0, #16]
   2afd0:	ldr	x0, [sp, #8]
   2afd4:	ldr	x2, [x0, #72]
   2afd8:	ldr	x0, [sp]
   2afdc:	add	x0, x2, x0
   2afe0:	add	x0, x0, #0x1
   2afe4:	lsl	x0, x0, #2
   2afe8:	add	x0, x1, x0
   2afec:	ldr	w0, [x0]
   2aff0:	cmn	w0, #0x1
   2aff4:	b.ne	2b01c <printf_parse@@Base+0x3d24>  // b.any
   2aff8:	ldr	x0, [sp, #8]
   2affc:	ldr	x0, [x0, #8]
   2b000:	ldr	x1, [sp, #8]
   2b004:	ldr	x2, [x1, #72]
   2b008:	ldr	x1, [sp]
   2b00c:	add	x1, x2, x1
   2b010:	add	x0, x0, x1
   2b014:	ldrb	w0, [x0]
   2b018:	b	2b0cc <printf_parse@@Base+0x3dd4>
   2b01c:	ldr	x0, [sp, #8]
   2b020:	ldr	x0, [x0, #72]
   2b024:	ldr	x1, [sp]
   2b028:	add	x0, x1, x0
   2b02c:	str	x0, [sp, #24]
   2b030:	ldr	x0, [sp, #8]
   2b034:	ldrb	w0, [x0, #140]
   2b038:	cmp	w0, #0x0
   2b03c:	b.eq	2b05c <printf_parse@@Base+0x3d64>  // b.none
   2b040:	ldr	x0, [sp, #8]
   2b044:	ldr	x1, [x0, #24]
   2b048:	ldr	x0, [sp, #24]
   2b04c:	lsl	x0, x0, #3
   2b050:	add	x0, x1, x0
   2b054:	ldr	x0, [x0]
   2b058:	str	x0, [sp, #24]
   2b05c:	ldr	x0, [sp, #8]
   2b060:	ldr	x0, [x0]
   2b064:	ldr	x1, [sp, #8]
   2b068:	ldr	x2, [x1, #40]
   2b06c:	ldr	x1, [sp, #24]
   2b070:	add	x1, x2, x1
   2b074:	add	x0, x0, x1
   2b078:	ldrb	w0, [x0]
   2b07c:	str	w0, [sp, #20]
   2b080:	ldr	x0, [sp, #8]
   2b084:	ldrb	w0, [x0, #140]
   2b088:	cmp	w0, #0x0
   2b08c:	b.eq	2b0c4 <printf_parse@@Base+0x3dcc>  // b.none
   2b090:	ldr	w0, [sp, #20]
   2b094:	and	w0, w0, #0xffffff80
   2b098:	cmp	w0, #0x0
   2b09c:	b.eq	2b0c4 <printf_parse@@Base+0x3dcc>  // b.none
   2b0a0:	ldr	x0, [sp, #8]
   2b0a4:	ldr	x0, [x0, #8]
   2b0a8:	ldr	x1, [sp, #8]
   2b0ac:	ldr	x2, [x1, #72]
   2b0b0:	ldr	x1, [sp]
   2b0b4:	add	x1, x2, x1
   2b0b8:	add	x0, x0, x1
   2b0bc:	ldrb	w0, [x0]
   2b0c0:	b	2b0cc <printf_parse@@Base+0x3dd4>
   2b0c4:	ldr	w0, [sp, #20]
   2b0c8:	and	w0, w0, #0xff
   2b0cc:	add	sp, sp, #0x20
   2b0d0:	ret
   2b0d4:	stp	x29, x30, [sp, #-64]!
   2b0d8:	mov	x29, sp
   2b0dc:	str	x19, [sp, #16]
   2b0e0:	str	x0, [sp, #40]
   2b0e4:	ldr	x0, [sp, #40]
   2b0e8:	ldrb	w0, [x0, #139]
   2b0ec:	cmp	w0, #0x0
   2b0f0:	cset	w0, eq  // eq = none
   2b0f4:	and	w0, w0, #0xff
   2b0f8:	and	x0, x0, #0xff
   2b0fc:	cmp	x0, #0x0
   2b100:	b.eq	2b12c <printf_parse@@Base+0x3e34>  // b.none
   2b104:	ldr	x0, [sp, #40]
   2b108:	ldr	x1, [x0, #8]
   2b10c:	ldr	x0, [sp, #40]
   2b110:	ldr	x0, [x0, #72]
   2b114:	add	x3, x0, #0x1
   2b118:	ldr	x2, [sp, #40]
   2b11c:	str	x3, [x2, #72]
   2b120:	add	x0, x1, x0
   2b124:	ldrb	w0, [x0]
   2b128:	b	2b284 <printf_parse@@Base+0x3f8c>
   2b12c:	ldr	x0, [sp, #40]
   2b130:	ldrb	w0, [x0, #140]
   2b134:	cmp	w0, #0x0
   2b138:	b.eq	2b254 <printf_parse@@Base+0x3f5c>  // b.none
   2b13c:	ldr	x0, [sp, #40]
   2b140:	ldr	x1, [x0, #72]
   2b144:	ldr	x0, [sp, #40]
   2b148:	ldr	x0, [x0, #48]
   2b14c:	cmp	x1, x0
   2b150:	b.eq	2b1a0 <printf_parse@@Base+0x3ea8>  // b.none
   2b154:	ldr	x0, [sp, #40]
   2b158:	ldr	x1, [x0, #16]
   2b15c:	ldr	x0, [sp, #40]
   2b160:	ldr	x0, [x0, #72]
   2b164:	lsl	x0, x0, #2
   2b168:	add	x0, x1, x0
   2b16c:	ldr	w0, [x0]
   2b170:	cmn	w0, #0x1
   2b174:	b.ne	2b1a0 <printf_parse@@Base+0x3ea8>  // b.any
   2b178:	ldr	x0, [sp, #40]
   2b17c:	ldr	x1, [x0, #8]
   2b180:	ldr	x0, [sp, #40]
   2b184:	ldr	x0, [x0, #72]
   2b188:	add	x3, x0, #0x1
   2b18c:	ldr	x2, [sp, #40]
   2b190:	str	x3, [x2, #72]
   2b194:	add	x0, x1, x0
   2b198:	ldrb	w0, [x0]
   2b19c:	b	2b284 <printf_parse@@Base+0x3f8c>
   2b1a0:	ldr	x0, [sp, #40]
   2b1a4:	ldr	x1, [x0, #24]
   2b1a8:	ldr	x0, [sp, #40]
   2b1ac:	ldr	x0, [x0, #72]
   2b1b0:	lsl	x0, x0, #3
   2b1b4:	add	x0, x1, x0
   2b1b8:	ldr	x0, [x0]
   2b1bc:	str	x0, [sp, #56]
   2b1c0:	ldr	x0, [sp, #40]
   2b1c4:	ldr	x0, [x0]
   2b1c8:	ldr	x1, [sp, #40]
   2b1cc:	ldr	x2, [x1, #40]
   2b1d0:	ldr	x1, [sp, #56]
   2b1d4:	add	x1, x2, x1
   2b1d8:	add	x0, x0, x1
   2b1dc:	ldrb	w0, [x0]
   2b1e0:	str	w0, [sp, #52]
   2b1e4:	ldr	w0, [sp, #52]
   2b1e8:	and	w0, w0, #0xffffff80
   2b1ec:	cmp	w0, #0x0
   2b1f0:	b.eq	2b21c <printf_parse@@Base+0x3f24>  // b.none
   2b1f4:	ldr	x0, [sp, #40]
   2b1f8:	ldr	x1, [x0, #8]
   2b1fc:	ldr	x0, [sp, #40]
   2b200:	ldr	x0, [x0, #72]
   2b204:	add	x3, x0, #0x1
   2b208:	ldr	x2, [sp, #40]
   2b20c:	str	x3, [x2, #72]
   2b210:	add	x0, x1, x0
   2b214:	ldrb	w0, [x0]
   2b218:	b	2b284 <printf_parse@@Base+0x3f8c>
   2b21c:	ldr	x0, [sp, #40]
   2b220:	ldr	x19, [x0, #72]
   2b224:	ldr	x0, [sp, #40]
   2b228:	ldr	x0, [x0, #72]
   2b22c:	mov	x1, x0
   2b230:	ldr	x0, [sp, #40]
   2b234:	bl	28a70 <printf_parse@@Base+0x1778>
   2b238:	sxtw	x0, w0
   2b23c:	add	x1, x19, x0
   2b240:	ldr	x0, [sp, #40]
   2b244:	str	x1, [x0, #72]
   2b248:	ldr	w0, [sp, #52]
   2b24c:	and	w0, w0, #0xff
   2b250:	b	2b284 <printf_parse@@Base+0x3f8c>
   2b254:	ldr	x0, [sp, #40]
   2b258:	ldr	x1, [x0]
   2b25c:	ldr	x0, [sp, #40]
   2b260:	ldr	x2, [x0, #40]
   2b264:	ldr	x0, [sp, #40]
   2b268:	ldr	x0, [x0, #72]
   2b26c:	add	x4, x0, #0x1
   2b270:	ldr	x3, [sp, #40]
   2b274:	str	x4, [x3, #72]
   2b278:	add	x0, x2, x0
   2b27c:	add	x0, x1, x0
   2b280:	ldrb	w0, [x0]
   2b284:	ldr	x19, [sp, #16]
   2b288:	ldp	x29, x30, [sp], #64
   2b28c:	ret
   2b290:	stp	x29, x30, [sp, #-32]!
   2b294:	mov	x29, sp
   2b298:	str	x0, [sp, #24]
   2b29c:	ldr	x0, [sp, #24]
   2b2a0:	ldr	x0, [x0, #16]
   2b2a4:	bl	b130 <free@plt>
   2b2a8:	ldr	x0, [sp, #24]
   2b2ac:	ldr	x0, [x0, #24]
   2b2b0:	bl	b130 <free@plt>
   2b2b4:	ldr	x0, [sp, #24]
   2b2b8:	ldrb	w0, [x0, #139]
   2b2bc:	cmp	w0, #0x0
   2b2c0:	b.eq	2b2d0 <printf_parse@@Base+0x3fd8>  // b.none
   2b2c4:	ldr	x0, [sp, #24]
   2b2c8:	ldr	x0, [x0, #8]
   2b2cc:	bl	b130 <free@plt>
   2b2d0:	nop
   2b2d4:	ldp	x29, x30, [sp], #32
   2b2d8:	ret
   2b2dc:	stp	x29, x30, [sp, #-64]!
   2b2e0:	mov	x29, sp
   2b2e4:	str	x0, [sp, #40]
   2b2e8:	str	x1, [sp, #32]
   2b2ec:	str	w2, [sp, #28]
   2b2f0:	ldr	x0, [sp, #32]
   2b2f4:	lsr	x0, x0, #63
   2b2f8:	and	w0, w0, #0xff
   2b2fc:	and	x0, x0, #0xff
   2b300:	cmp	x0, #0x0
   2b304:	b.eq	2b314 <printf_parse@@Base+0x401c>  // b.none
   2b308:	ldr	x0, [sp, #40]
   2b30c:	ldr	w0, [x0, #112]
   2b310:	b	2b4a8 <printf_parse@@Base+0x41b0>
   2b314:	ldr	x0, [sp, #40]
   2b318:	ldr	x0, [x0, #88]
   2b31c:	ldr	x1, [sp, #32]
   2b320:	cmp	x1, x0
   2b324:	cset	w0, eq  // eq = none
   2b328:	and	w0, w0, #0xff
   2b32c:	and	x0, x0, #0xff
   2b330:	cmp	x0, #0x0
   2b334:	b.eq	2b358 <printf_parse@@Base+0x4060>  // b.none
   2b338:	ldr	w0, [sp, #28]
   2b33c:	and	w0, w0, #0x2
   2b340:	cmp	w0, #0x0
   2b344:	b.eq	2b350 <printf_parse@@Base+0x4058>  // b.none
   2b348:	mov	w0, #0x8                   	// #8
   2b34c:	b	2b4a8 <printf_parse@@Base+0x41b0>
   2b350:	mov	w0, #0xa                   	// #10
   2b354:	b	2b4a8 <printf_parse@@Base+0x41b0>
   2b358:	ldr	x0, [sp, #40]
   2b35c:	ldr	w0, [x0, #144]
   2b360:	cmp	w0, #0x1
   2b364:	b.le	2b444 <printf_parse@@Base+0x414c>
   2b368:	ldr	x0, [sp, #32]
   2b36c:	str	x0, [sp, #56]
   2b370:	b	2b398 <printf_parse@@Base+0x40a0>
   2b374:	ldr	x0, [sp, #56]
   2b378:	sub	x0, x0, #0x1
   2b37c:	str	x0, [sp, #56]
   2b380:	ldr	x0, [sp, #56]
   2b384:	cmp	x0, #0x0
   2b388:	b.ge	2b398 <printf_parse@@Base+0x40a0>  // b.tcont
   2b38c:	ldr	x0, [sp, #40]
   2b390:	ldr	w0, [x0, #112]
   2b394:	b	2b4a8 <printf_parse@@Base+0x41b0>
   2b398:	ldr	x0, [sp, #40]
   2b39c:	ldr	x1, [x0, #16]
   2b3a0:	ldr	x0, [sp, #56]
   2b3a4:	lsl	x0, x0, #2
   2b3a8:	add	x0, x1, x0
   2b3ac:	ldr	w0, [x0]
   2b3b0:	cmn	w0, #0x1
   2b3b4:	b.eq	2b374 <printf_parse@@Base+0x407c>  // b.none
   2b3b8:	ldr	x0, [sp, #40]
   2b3bc:	ldr	x1, [x0, #16]
   2b3c0:	ldr	x0, [sp, #56]
   2b3c4:	lsl	x0, x0, #2
   2b3c8:	add	x0, x1, x0
   2b3cc:	ldr	w0, [x0]
   2b3d0:	str	w0, [sp, #48]
   2b3d4:	ldr	x0, [sp, #40]
   2b3d8:	ldrb	w0, [x0, #142]
   2b3dc:	cmp	w0, #0x0
   2b3e0:	cset	w0, ne  // ne = any
   2b3e4:	and	w0, w0, #0xff
   2b3e8:	and	x0, x0, #0xff
   2b3ec:	cmp	x0, #0x0
   2b3f0:	b.eq	2b418 <printf_parse@@Base+0x4120>  // b.none
   2b3f4:	ldr	w0, [sp, #48]
   2b3f8:	bl	b470 <iswalnum@plt>
   2b3fc:	cmp	w0, #0x0
   2b400:	b.ne	2b410 <printf_parse@@Base+0x4118>  // b.any
   2b404:	ldr	w0, [sp, #48]
   2b408:	cmp	w0, #0x5f
   2b40c:	b.ne	2b418 <printf_parse@@Base+0x4120>  // b.any
   2b410:	mov	w0, #0x1                   	// #1
   2b414:	b	2b4a8 <printf_parse@@Base+0x41b0>
   2b418:	ldr	w0, [sp, #48]
   2b41c:	cmp	w0, #0xa
   2b420:	b.ne	2b43c <printf_parse@@Base+0x4144>  // b.any
   2b424:	ldr	x0, [sp, #40]
   2b428:	ldrb	w0, [x0, #141]
   2b42c:	cmp	w0, #0x0
   2b430:	b.eq	2b43c <printf_parse@@Base+0x4144>  // b.none
   2b434:	mov	w0, #0x2                   	// #2
   2b438:	b	2b4a8 <printf_parse@@Base+0x41b0>
   2b43c:	mov	w0, #0x0                   	// #0
   2b440:	b	2b4a8 <printf_parse@@Base+0x41b0>
   2b444:	ldr	x0, [sp, #40]
   2b448:	ldr	x1, [x0, #8]
   2b44c:	ldr	x0, [sp, #32]
   2b450:	add	x0, x1, x0
   2b454:	ldrb	w0, [x0]
   2b458:	str	w0, [sp, #52]
   2b45c:	ldr	x0, [sp, #40]
   2b460:	ldr	x0, [x0, #128]
   2b464:	ldrsw	x1, [sp, #52]
   2b468:	bl	28838 <printf_parse@@Base+0x1540>
   2b46c:	and	w0, w0, #0xff
   2b470:	cmp	w0, #0x0
   2b474:	b.eq	2b480 <printf_parse@@Base+0x4188>  // b.none
   2b478:	mov	w0, #0x1                   	// #1
   2b47c:	b	2b4a8 <printf_parse@@Base+0x41b0>
   2b480:	ldr	w0, [sp, #52]
   2b484:	cmp	w0, #0xa
   2b488:	b.ne	2b4a4 <printf_parse@@Base+0x41ac>  // b.any
   2b48c:	ldr	x0, [sp, #40]
   2b490:	ldrb	w0, [x0, #141]
   2b494:	cmp	w0, #0x0
   2b498:	b.eq	2b4a4 <printf_parse@@Base+0x41ac>  // b.none
   2b49c:	mov	w0, #0x2                   	// #2
   2b4a0:	b	2b4a8 <printf_parse@@Base+0x41b0>
   2b4a4:	mov	w0, #0x0                   	// #0
   2b4a8:	ldp	x29, x30, [sp], #64
   2b4ac:	ret
   2b4b0:	stp	x29, x30, [sp, #-32]!
   2b4b4:	mov	x29, sp
   2b4b8:	str	x0, [sp, #24]
   2b4bc:	str	x1, [sp, #16]
   2b4c0:	ldr	x0, [sp, #24]
   2b4c4:	ldr	x1, [sp, #16]
   2b4c8:	str	x1, [x0]
   2b4cc:	ldr	x0, [sp, #24]
   2b4d0:	str	xzr, [x0, #8]
   2b4d4:	ldr	x0, [sp, #16]
   2b4d8:	lsl	x0, x0, #3
   2b4dc:	bl	ab40 <malloc@plt>
   2b4e0:	mov	x1, x0
   2b4e4:	ldr	x0, [sp, #24]
   2b4e8:	str	x1, [x0, #16]
   2b4ec:	ldr	x0, [sp, #24]
   2b4f0:	ldr	x0, [x0, #16]
   2b4f4:	cmp	x0, #0x0
   2b4f8:	cset	w0, eq  // eq = none
   2b4fc:	and	w0, w0, #0xff
   2b500:	and	x0, x0, #0xff
   2b504:	cmp	x0, #0x0
   2b508:	b.eq	2b514 <printf_parse@@Base+0x421c>  // b.none
   2b50c:	mov	w0, #0xc                   	// #12
   2b510:	b	2b518 <printf_parse@@Base+0x4220>
   2b514:	mov	w0, #0x0                   	// #0
   2b518:	ldp	x29, x30, [sp], #32
   2b51c:	ret
   2b520:	stp	x29, x30, [sp, #-32]!
   2b524:	mov	x29, sp
   2b528:	str	x0, [sp, #24]
   2b52c:	str	x1, [sp, #16]
   2b530:	ldr	x0, [sp, #24]
   2b534:	mov	x1, #0x1                   	// #1
   2b538:	str	x1, [x0]
   2b53c:	ldr	x0, [sp, #24]
   2b540:	mov	x1, #0x1                   	// #1
   2b544:	str	x1, [x0, #8]
   2b548:	mov	x0, #0x8                   	// #8
   2b54c:	bl	ab40 <malloc@plt>
   2b550:	mov	x1, x0
   2b554:	ldr	x0, [sp, #24]
   2b558:	str	x1, [x0, #16]
   2b55c:	ldr	x0, [sp, #24]
   2b560:	ldr	x0, [x0, #16]
   2b564:	cmp	x0, #0x0
   2b568:	cset	w0, eq  // eq = none
   2b56c:	and	w0, w0, #0xff
   2b570:	and	x0, x0, #0xff
   2b574:	cmp	x0, #0x0
   2b578:	b.eq	2b59c <printf_parse@@Base+0x42a4>  // b.none
   2b57c:	ldr	x0, [sp, #24]
   2b580:	str	xzr, [x0, #8]
   2b584:	ldr	x0, [sp, #24]
   2b588:	ldr	x1, [x0, #8]
   2b58c:	ldr	x0, [sp, #24]
   2b590:	str	x1, [x0]
   2b594:	mov	w0, #0xc                   	// #12
   2b598:	b	2b5b0 <printf_parse@@Base+0x42b8>
   2b59c:	ldr	x0, [sp, #24]
   2b5a0:	ldr	x0, [x0, #16]
   2b5a4:	ldr	x1, [sp, #16]
   2b5a8:	str	x1, [x0]
   2b5ac:	mov	w0, #0x0                   	// #0
   2b5b0:	ldp	x29, x30, [sp], #32
   2b5b4:	ret
   2b5b8:	stp	x29, x30, [sp, #-48]!
   2b5bc:	mov	x29, sp
   2b5c0:	str	x0, [sp, #40]
   2b5c4:	str	x1, [sp, #32]
   2b5c8:	str	x2, [sp, #24]
   2b5cc:	ldr	x0, [sp, #40]
   2b5d0:	mov	x1, #0x2                   	// #2
   2b5d4:	str	x1, [x0]
   2b5d8:	mov	x0, #0x10                  	// #16
   2b5dc:	bl	ab40 <malloc@plt>
   2b5e0:	mov	x1, x0
   2b5e4:	ldr	x0, [sp, #40]
   2b5e8:	str	x1, [x0, #16]
   2b5ec:	ldr	x0, [sp, #40]
   2b5f0:	ldr	x0, [x0, #16]
   2b5f4:	cmp	x0, #0x0
   2b5f8:	cset	w0, eq  // eq = none
   2b5fc:	and	w0, w0, #0xff
   2b600:	and	x0, x0, #0xff
   2b604:	cmp	x0, #0x0
   2b608:	b.eq	2b614 <printf_parse@@Base+0x431c>  // b.none
   2b60c:	mov	w0, #0xc                   	// #12
   2b610:	b	2b6b0 <printf_parse@@Base+0x43b8>
   2b614:	ldr	x1, [sp, #32]
   2b618:	ldr	x0, [sp, #24]
   2b61c:	cmp	x1, x0
   2b620:	b.ne	2b644 <printf_parse@@Base+0x434c>  // b.any
   2b624:	ldr	x0, [sp, #40]
   2b628:	mov	x1, #0x1                   	// #1
   2b62c:	str	x1, [x0, #8]
   2b630:	ldr	x0, [sp, #40]
   2b634:	ldr	x0, [x0, #16]
   2b638:	ldr	x1, [sp, #32]
   2b63c:	str	x1, [x0]
   2b640:	b	2b6ac <printf_parse@@Base+0x43b4>
   2b644:	ldr	x0, [sp, #40]
   2b648:	mov	x1, #0x2                   	// #2
   2b64c:	str	x1, [x0, #8]
   2b650:	ldr	x1, [sp, #32]
   2b654:	ldr	x0, [sp, #24]
   2b658:	cmp	x1, x0
   2b65c:	b.ge	2b688 <printf_parse@@Base+0x4390>  // b.tcont
   2b660:	ldr	x0, [sp, #40]
   2b664:	ldr	x0, [x0, #16]
   2b668:	ldr	x1, [sp, #32]
   2b66c:	str	x1, [x0]
   2b670:	ldr	x0, [sp, #40]
   2b674:	ldr	x0, [x0, #16]
   2b678:	add	x0, x0, #0x8
   2b67c:	ldr	x1, [sp, #24]
   2b680:	str	x1, [x0]
   2b684:	b	2b6ac <printf_parse@@Base+0x43b4>
   2b688:	ldr	x0, [sp, #40]
   2b68c:	ldr	x0, [x0, #16]
   2b690:	ldr	x1, [sp, #24]
   2b694:	str	x1, [x0]
   2b698:	ldr	x0, [sp, #40]
   2b69c:	ldr	x0, [x0, #16]
   2b6a0:	add	x0, x0, #0x8
   2b6a4:	ldr	x1, [sp, #32]
   2b6a8:	str	x1, [x0]
   2b6ac:	mov	w0, #0x0                   	// #0
   2b6b0:	ldp	x29, x30, [sp], #48
   2b6b4:	ret
   2b6b8:	stp	x29, x30, [sp, #-32]!
   2b6bc:	mov	x29, sp
   2b6c0:	str	x0, [sp, #24]
   2b6c4:	str	x1, [sp, #16]
   2b6c8:	ldr	x0, [sp, #16]
   2b6cc:	ldr	x1, [x0, #8]
   2b6d0:	ldr	x0, [sp, #24]
   2b6d4:	str	x1, [x0, #8]
   2b6d8:	ldr	x0, [sp, #16]
   2b6dc:	ldr	x0, [x0, #8]
   2b6e0:	cmp	x0, #0x0
   2b6e4:	b.le	2b780 <printf_parse@@Base+0x4488>
   2b6e8:	ldr	x0, [sp, #24]
   2b6ec:	ldr	x1, [x0, #8]
   2b6f0:	ldr	x0, [sp, #24]
   2b6f4:	str	x1, [x0]
   2b6f8:	ldr	x0, [sp, #24]
   2b6fc:	ldr	x0, [x0]
   2b700:	lsl	x0, x0, #3
   2b704:	bl	ab40 <malloc@plt>
   2b708:	mov	x1, x0
   2b70c:	ldr	x0, [sp, #24]
   2b710:	str	x1, [x0, #16]
   2b714:	ldr	x0, [sp, #24]
   2b718:	ldr	x0, [x0, #16]
   2b71c:	cmp	x0, #0x0
   2b720:	cset	w0, eq  // eq = none
   2b724:	and	w0, w0, #0xff
   2b728:	and	x0, x0, #0xff
   2b72c:	cmp	x0, #0x0
   2b730:	b.eq	2b754 <printf_parse@@Base+0x445c>  // b.none
   2b734:	ldr	x0, [sp, #24]
   2b738:	str	xzr, [x0, #8]
   2b73c:	ldr	x0, [sp, #24]
   2b740:	ldr	x1, [x0, #8]
   2b744:	ldr	x0, [sp, #24]
   2b748:	str	x1, [x0]
   2b74c:	mov	w0, #0xc                   	// #12
   2b750:	b	2b794 <printf_parse@@Base+0x449c>
   2b754:	ldr	x0, [sp, #24]
   2b758:	ldr	x3, [x0, #16]
   2b75c:	ldr	x0, [sp, #16]
   2b760:	ldr	x1, [x0, #16]
   2b764:	ldr	x0, [sp, #16]
   2b768:	ldr	x0, [x0, #8]
   2b76c:	lsl	x0, x0, #3
   2b770:	mov	x2, x0
   2b774:	mov	x0, x3
   2b778:	bl	a790 <memcpy@plt>
   2b77c:	b	2b790 <printf_parse@@Base+0x4498>
   2b780:	mov	x2, #0x18                  	// #24
   2b784:	mov	w1, #0x0                   	// #0
   2b788:	ldr	x0, [sp, #24]
   2b78c:	bl	acb0 <memset@plt>
   2b790:	mov	w0, #0x0                   	// #0
   2b794:	ldp	x29, x30, [sp], #32
   2b798:	ret
   2b79c:	stp	x29, x30, [sp, #-112]!
   2b7a0:	mov	x29, sp
   2b7a4:	str	x0, [sp, #40]
   2b7a8:	str	x1, [sp, #32]
   2b7ac:	str	x2, [sp, #24]
   2b7b0:	ldr	x0, [sp, #32]
   2b7b4:	ldr	x0, [x0, #8]
   2b7b8:	cmp	x0, #0x0
   2b7bc:	b.eq	2b7d0 <printf_parse@@Base+0x44d8>  // b.none
   2b7c0:	ldr	x0, [sp, #24]
   2b7c4:	ldr	x0, [x0, #8]
   2b7c8:	cmp	x0, #0x0
   2b7cc:	b.ne	2b7d8 <printf_parse@@Base+0x44e0>  // b.any
   2b7d0:	mov	w0, #0x0                   	// #0
   2b7d4:	b	2bc28 <printf_parse@@Base+0x4930>
   2b7d8:	ldr	x0, [sp, #32]
   2b7dc:	ldr	x1, [x0, #8]
   2b7e0:	ldr	x0, [sp, #24]
   2b7e4:	ldr	x0, [x0, #8]
   2b7e8:	add	x1, x1, x0
   2b7ec:	ldr	x0, [sp, #40]
   2b7f0:	ldr	x0, [x0, #8]
   2b7f4:	add	x1, x1, x0
   2b7f8:	ldr	x0, [sp, #40]
   2b7fc:	ldr	x0, [x0]
   2b800:	cmp	x1, x0
   2b804:	b.le	2b888 <printf_parse@@Base+0x4590>
   2b808:	ldr	x0, [sp, #32]
   2b80c:	ldr	x1, [x0, #8]
   2b810:	ldr	x0, [sp, #24]
   2b814:	ldr	x0, [x0, #8]
   2b818:	add	x1, x1, x0
   2b81c:	ldr	x0, [sp, #40]
   2b820:	ldr	x0, [x0]
   2b824:	add	x0, x1, x0
   2b828:	str	x0, [sp, #56]
   2b82c:	ldr	x0, [sp, #40]
   2b830:	ldr	x2, [x0, #16]
   2b834:	ldr	x0, [sp, #56]
   2b838:	lsl	x0, x0, #3
   2b83c:	mov	x1, x0
   2b840:	mov	x0, x2
   2b844:	bl	ae00 <realloc@plt>
   2b848:	str	x0, [sp, #48]
   2b84c:	ldr	x0, [sp, #48]
   2b850:	cmp	x0, #0x0
   2b854:	cset	w0, eq  // eq = none
   2b858:	and	w0, w0, #0xff
   2b85c:	and	x0, x0, #0xff
   2b860:	cmp	x0, #0x0
   2b864:	b.eq	2b870 <printf_parse@@Base+0x4578>  // b.none
   2b868:	mov	w0, #0xc                   	// #12
   2b86c:	b	2bc28 <printf_parse@@Base+0x4930>
   2b870:	ldr	x0, [sp, #40]
   2b874:	ldr	x1, [sp, #48]
   2b878:	str	x1, [x0, #16]
   2b87c:	ldr	x0, [sp, #40]
   2b880:	ldr	x1, [sp, #56]
   2b884:	str	x1, [x0]
   2b888:	ldr	x0, [sp, #40]
   2b88c:	ldr	x1, [x0, #8]
   2b890:	ldr	x0, [sp, #32]
   2b894:	ldr	x0, [x0, #8]
   2b898:	add	x1, x1, x0
   2b89c:	ldr	x0, [sp, #24]
   2b8a0:	ldr	x0, [x0, #8]
   2b8a4:	add	x0, x1, x0
   2b8a8:	str	x0, [sp, #64]
   2b8ac:	ldr	x0, [sp, #32]
   2b8b0:	ldr	x0, [x0, #8]
   2b8b4:	sub	x0, x0, #0x1
   2b8b8:	str	x0, [sp, #104]
   2b8bc:	ldr	x0, [sp, #24]
   2b8c0:	ldr	x0, [x0, #8]
   2b8c4:	sub	x0, x0, #0x1
   2b8c8:	str	x0, [sp, #96]
   2b8cc:	ldr	x0, [sp, #40]
   2b8d0:	ldr	x0, [x0, #8]
   2b8d4:	sub	x0, x0, #0x1
   2b8d8:	str	x0, [sp, #80]
   2b8dc:	ldr	x0, [sp, #32]
   2b8e0:	ldr	x1, [x0, #16]
   2b8e4:	ldr	x0, [sp, #104]
   2b8e8:	lsl	x0, x0, #3
   2b8ec:	add	x0, x1, x0
   2b8f0:	ldr	x1, [x0]
   2b8f4:	ldr	x0, [sp, #24]
   2b8f8:	ldr	x2, [x0, #16]
   2b8fc:	ldr	x0, [sp, #96]
   2b900:	lsl	x0, x0, #3
   2b904:	add	x0, x2, x0
   2b908:	ldr	x0, [x0]
   2b90c:	cmp	x1, x0
   2b910:	b.ne	2ba1c <printf_parse@@Base+0x4724>  // b.any
   2b914:	b	2b924 <printf_parse@@Base+0x462c>
   2b918:	ldr	x0, [sp, #80]
   2b91c:	sub	x0, x0, #0x1
   2b920:	str	x0, [sp, #80]
   2b924:	ldr	x0, [sp, #80]
   2b928:	cmp	x0, #0x0
   2b92c:	b.lt	2b968 <printf_parse@@Base+0x4670>  // b.tstop
   2b930:	ldr	x0, [sp, #40]
   2b934:	ldr	x1, [x0, #16]
   2b938:	ldr	x0, [sp, #80]
   2b93c:	lsl	x0, x0, #3
   2b940:	add	x0, x1, x0
   2b944:	ldr	x1, [x0]
   2b948:	ldr	x0, [sp, #32]
   2b94c:	ldr	x2, [x0, #16]
   2b950:	ldr	x0, [sp, #104]
   2b954:	lsl	x0, x0, #3
   2b958:	add	x0, x2, x0
   2b95c:	ldr	x0, [x0]
   2b960:	cmp	x1, x0
   2b964:	b.gt	2b918 <printf_parse@@Base+0x4620>
   2b968:	ldr	x0, [sp, #80]
   2b96c:	cmp	x0, #0x0
   2b970:	b.lt	2b9ac <printf_parse@@Base+0x46b4>  // b.tstop
   2b974:	ldr	x0, [sp, #40]
   2b978:	ldr	x1, [x0, #16]
   2b97c:	ldr	x0, [sp, #80]
   2b980:	lsl	x0, x0, #3
   2b984:	add	x0, x1, x0
   2b988:	ldr	x1, [x0]
   2b98c:	ldr	x0, [sp, #32]
   2b990:	ldr	x2, [x0, #16]
   2b994:	ldr	x0, [sp, #104]
   2b998:	lsl	x0, x0, #3
   2b99c:	add	x0, x2, x0
   2b9a0:	ldr	x0, [x0]
   2b9a4:	cmp	x1, x0
   2b9a8:	b.eq	2b9e8 <printf_parse@@Base+0x46f0>  // b.none
   2b9ac:	ldr	x0, [sp, #32]
   2b9b0:	ldr	x1, [x0, #16]
   2b9b4:	ldr	x0, [sp, #104]
   2b9b8:	lsl	x0, x0, #3
   2b9bc:	add	x1, x1, x0
   2b9c0:	ldr	x0, [sp, #40]
   2b9c4:	ldr	x2, [x0, #16]
   2b9c8:	ldr	x0, [sp, #64]
   2b9cc:	sub	x0, x0, #0x1
   2b9d0:	str	x0, [sp, #64]
   2b9d4:	ldr	x0, [sp, #64]
   2b9d8:	lsl	x0, x0, #3
   2b9dc:	add	x0, x2, x0
   2b9e0:	ldr	x1, [x1]
   2b9e4:	str	x1, [x0]
   2b9e8:	ldr	x0, [sp, #104]
   2b9ec:	sub	x0, x0, #0x1
   2b9f0:	str	x0, [sp, #104]
   2b9f4:	ldr	x0, [sp, #104]
   2b9f8:	cmp	x0, #0x0
   2b9fc:	b.lt	2ba90 <printf_parse@@Base+0x4798>  // b.tstop
   2ba00:	ldr	x0, [sp, #96]
   2ba04:	sub	x0, x0, #0x1
   2ba08:	str	x0, [sp, #96]
   2ba0c:	ldr	x0, [sp, #96]
   2ba10:	cmp	x0, #0x0
   2ba14:	b.lt	2ba90 <printf_parse@@Base+0x4798>  // b.tstop
   2ba18:	b	2b8dc <printf_parse@@Base+0x45e4>
   2ba1c:	ldr	x0, [sp, #32]
   2ba20:	ldr	x1, [x0, #16]
   2ba24:	ldr	x0, [sp, #104]
   2ba28:	lsl	x0, x0, #3
   2ba2c:	add	x0, x1, x0
   2ba30:	ldr	x1, [x0]
   2ba34:	ldr	x0, [sp, #24]
   2ba38:	ldr	x2, [x0, #16]
   2ba3c:	ldr	x0, [sp, #96]
   2ba40:	lsl	x0, x0, #3
   2ba44:	add	x0, x2, x0
   2ba48:	ldr	x0, [x0]
   2ba4c:	cmp	x1, x0
   2ba50:	b.ge	2ba70 <printf_parse@@Base+0x4778>  // b.tcont
   2ba54:	ldr	x0, [sp, #96]
   2ba58:	sub	x0, x0, #0x1
   2ba5c:	str	x0, [sp, #96]
   2ba60:	ldr	x0, [sp, #96]
   2ba64:	cmp	x0, #0x0
   2ba68:	b.ge	2b8dc <printf_parse@@Base+0x45e4>  // b.tcont
   2ba6c:	b	2ba90 <printf_parse@@Base+0x4798>
   2ba70:	ldr	x0, [sp, #104]
   2ba74:	sub	x0, x0, #0x1
   2ba78:	str	x0, [sp, #104]
   2ba7c:	ldr	x0, [sp, #104]
   2ba80:	cmp	x0, #0x0
   2ba84:	b.lt	2ba8c <printf_parse@@Base+0x4794>  // b.tstop
   2ba88:	b	2b8dc <printf_parse@@Base+0x45e4>
   2ba8c:	nop
   2ba90:	ldr	x0, [sp, #40]
   2ba94:	ldr	x0, [x0, #8]
   2ba98:	sub	x0, x0, #0x1
   2ba9c:	str	x0, [sp, #80]
   2baa0:	ldr	x0, [sp, #40]
   2baa4:	ldr	x1, [x0, #8]
   2baa8:	ldr	x0, [sp, #32]
   2baac:	ldr	x0, [x0, #8]
   2bab0:	add	x1, x1, x0
   2bab4:	ldr	x0, [sp, #24]
   2bab8:	ldr	x0, [x0, #8]
   2babc:	add	x0, x1, x0
   2bac0:	sub	x0, x0, #0x1
   2bac4:	str	x0, [sp, #88]
   2bac8:	ldr	x1, [sp, #88]
   2bacc:	ldr	x0, [sp, #64]
   2bad0:	sub	x0, x1, x0
   2bad4:	add	x0, x0, #0x1
   2bad8:	str	x0, [sp, #72]
   2badc:	ldr	x0, [sp, #40]
   2bae0:	ldr	x1, [x0, #8]
   2bae4:	ldr	x0, [sp, #72]
   2bae8:	add	x1, x1, x0
   2baec:	ldr	x0, [sp, #40]
   2baf0:	str	x1, [x0, #8]
   2baf4:	ldr	x0, [sp, #72]
   2baf8:	cmp	x0, #0x0
   2bafc:	b.le	2bbf4 <printf_parse@@Base+0x48fc>
   2bb00:	ldr	x0, [sp, #80]
   2bb04:	cmp	x0, #0x0
   2bb08:	b.lt	2bbf4 <printf_parse@@Base+0x48fc>  // b.tstop
   2bb0c:	ldr	x0, [sp, #40]
   2bb10:	ldr	x1, [x0, #16]
   2bb14:	ldr	x0, [sp, #88]
   2bb18:	lsl	x0, x0, #3
   2bb1c:	add	x0, x1, x0
   2bb20:	ldr	x1, [x0]
   2bb24:	ldr	x0, [sp, #40]
   2bb28:	ldr	x2, [x0, #16]
   2bb2c:	ldr	x0, [sp, #80]
   2bb30:	lsl	x0, x0, #3
   2bb34:	add	x0, x2, x0
   2bb38:	ldr	x0, [x0]
   2bb3c:	cmp	x1, x0
   2bb40:	b.le	2bb9c <printf_parse@@Base+0x48a4>
   2bb44:	ldr	x0, [sp, #40]
   2bb48:	ldr	x1, [x0, #16]
   2bb4c:	ldr	x0, [sp, #88]
   2bb50:	sub	x2, x0, #0x1
   2bb54:	str	x2, [sp, #88]
   2bb58:	lsl	x0, x0, #3
   2bb5c:	add	x1, x1, x0
   2bb60:	ldr	x0, [sp, #40]
   2bb64:	ldr	x2, [x0, #16]
   2bb68:	ldr	x0, [sp, #72]
   2bb6c:	sub	x3, x0, #0x1
   2bb70:	str	x3, [sp, #72]
   2bb74:	ldr	x3, [sp, #80]
   2bb78:	add	x0, x0, x3
   2bb7c:	lsl	x0, x0, #3
   2bb80:	add	x0, x2, x0
   2bb84:	ldr	x1, [x1]
   2bb88:	str	x1, [x0]
   2bb8c:	ldr	x0, [sp, #72]
   2bb90:	cmp	x0, #0x0
   2bb94:	b.ne	2bb0c <printf_parse@@Base+0x4814>  // b.any
   2bb98:	b	2bbf4 <printf_parse@@Base+0x48fc>
   2bb9c:	ldr	x0, [sp, #40]
   2bba0:	ldr	x1, [x0, #16]
   2bba4:	ldr	x0, [sp, #80]
   2bba8:	lsl	x0, x0, #3
   2bbac:	add	x1, x1, x0
   2bbb0:	ldr	x0, [sp, #40]
   2bbb4:	ldr	x2, [x0, #16]
   2bbb8:	ldr	x3, [sp, #80]
   2bbbc:	ldr	x0, [sp, #72]
   2bbc0:	add	x0, x3, x0
   2bbc4:	lsl	x0, x0, #3
   2bbc8:	add	x0, x2, x0
   2bbcc:	ldr	x1, [x1]
   2bbd0:	str	x1, [x0]
   2bbd4:	ldr	x0, [sp, #80]
   2bbd8:	sub	x0, x0, #0x1
   2bbdc:	str	x0, [sp, #80]
   2bbe0:	ldr	x0, [sp, #80]
   2bbe4:	cmp	x0, #0x0
   2bbe8:	b.lt	2bbf0 <printf_parse@@Base+0x48f8>  // b.tstop
   2bbec:	b	2bb0c <printf_parse@@Base+0x4814>
   2bbf0:	nop
   2bbf4:	ldr	x0, [sp, #40]
   2bbf8:	ldr	x3, [x0, #16]
   2bbfc:	ldr	x0, [sp, #40]
   2bc00:	ldr	x1, [x0, #16]
   2bc04:	ldr	x0, [sp, #64]
   2bc08:	lsl	x0, x0, #3
   2bc0c:	add	x1, x1, x0
   2bc10:	ldr	x0, [sp, #72]
   2bc14:	lsl	x0, x0, #3
   2bc18:	mov	x2, x0
   2bc1c:	mov	x0, x3
   2bc20:	bl	a790 <memcpy@plt>
   2bc24:	mov	w0, #0x0                   	// #0
   2bc28:	ldp	x29, x30, [sp], #112
   2bc2c:	ret
   2bc30:	stp	x29, x30, [sp, #-80]!
   2bc34:	mov	x29, sp
   2bc38:	str	x0, [sp, #40]
   2bc3c:	str	x1, [sp, #32]
   2bc40:	str	x2, [sp, #24]
   2bc44:	ldr	x0, [sp, #32]
   2bc48:	cmp	x0, #0x0
   2bc4c:	b.eq	2bcdc <printf_parse@@Base+0x49e4>  // b.none
   2bc50:	ldr	x0, [sp, #32]
   2bc54:	ldr	x0, [x0, #8]
   2bc58:	cmp	x0, #0x0
   2bc5c:	b.le	2bcdc <printf_parse@@Base+0x49e4>
   2bc60:	ldr	x0, [sp, #24]
   2bc64:	cmp	x0, #0x0
   2bc68:	b.eq	2bcdc <printf_parse@@Base+0x49e4>  // b.none
   2bc6c:	ldr	x0, [sp, #24]
   2bc70:	ldr	x0, [x0, #8]
   2bc74:	cmp	x0, #0x0
   2bc78:	b.le	2bcdc <printf_parse@@Base+0x49e4>
   2bc7c:	ldr	x0, [sp, #32]
   2bc80:	ldr	x1, [x0, #8]
   2bc84:	ldr	x0, [sp, #24]
   2bc88:	ldr	x0, [x0, #8]
   2bc8c:	add	x1, x1, x0
   2bc90:	ldr	x0, [sp, #40]
   2bc94:	str	x1, [x0]
   2bc98:	ldr	x0, [sp, #40]
   2bc9c:	ldr	x0, [x0]
   2bca0:	lsl	x0, x0, #3
   2bca4:	bl	ab40 <malloc@plt>
   2bca8:	mov	x1, x0
   2bcac:	ldr	x0, [sp, #40]
   2bcb0:	str	x1, [x0, #16]
   2bcb4:	ldr	x0, [sp, #40]
   2bcb8:	ldr	x0, [x0, #16]
   2bcbc:	cmp	x0, #0x0
   2bcc0:	cset	w0, eq  // eq = none
   2bcc4:	and	w0, w0, #0xff
   2bcc8:	and	x0, x0, #0xff
   2bccc:	cmp	x0, #0x0
   2bcd0:	b.eq	2bd4c <printf_parse@@Base+0x4a54>  // b.none
   2bcd4:	mov	w0, #0xc                   	// #12
   2bcd8:	b	2bf98 <printf_parse@@Base+0x4ca0>
   2bcdc:	ldr	x0, [sp, #32]
   2bce0:	cmp	x0, #0x0
   2bce4:	b.eq	2bd08 <printf_parse@@Base+0x4a10>  // b.none
   2bce8:	ldr	x0, [sp, #32]
   2bcec:	ldr	x0, [x0, #8]
   2bcf0:	cmp	x0, #0x0
   2bcf4:	b.le	2bd08 <printf_parse@@Base+0x4a10>
   2bcf8:	ldr	x1, [sp, #32]
   2bcfc:	ldr	x0, [sp, #40]
   2bd00:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   2bd04:	b	2bf98 <printf_parse@@Base+0x4ca0>
   2bd08:	ldr	x0, [sp, #24]
   2bd0c:	cmp	x0, #0x0
   2bd10:	b.eq	2bd34 <printf_parse@@Base+0x4a3c>  // b.none
   2bd14:	ldr	x0, [sp, #24]
   2bd18:	ldr	x0, [x0, #8]
   2bd1c:	cmp	x0, #0x0
   2bd20:	b.le	2bd34 <printf_parse@@Base+0x4a3c>
   2bd24:	ldr	x1, [sp, #24]
   2bd28:	ldr	x0, [sp, #40]
   2bd2c:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   2bd30:	b	2bf98 <printf_parse@@Base+0x4ca0>
   2bd34:	mov	x2, #0x18                  	// #24
   2bd38:	mov	w1, #0x0                   	// #0
   2bd3c:	ldr	x0, [sp, #40]
   2bd40:	bl	acb0 <memset@plt>
   2bd44:	mov	w0, #0x0                   	// #0
   2bd48:	b	2bf98 <printf_parse@@Base+0x4ca0>
   2bd4c:	str	xzr, [sp, #56]
   2bd50:	ldr	x0, [sp, #56]
   2bd54:	str	x0, [sp, #64]
   2bd58:	ldr	x0, [sp, #64]
   2bd5c:	str	x0, [sp, #72]
   2bd60:	b	2be64 <printf_parse@@Base+0x4b6c>
   2bd64:	ldr	x0, [sp, #32]
   2bd68:	ldr	x1, [x0, #16]
   2bd6c:	ldr	x0, [sp, #72]
   2bd70:	lsl	x0, x0, #3
   2bd74:	add	x0, x1, x0
   2bd78:	ldr	x1, [x0]
   2bd7c:	ldr	x0, [sp, #24]
   2bd80:	ldr	x2, [x0, #16]
   2bd84:	ldr	x0, [sp, #64]
   2bd88:	lsl	x0, x0, #3
   2bd8c:	add	x0, x2, x0
   2bd90:	ldr	x0, [x0]
   2bd94:	cmp	x1, x0
   2bd98:	b.le	2bde0 <printf_parse@@Base+0x4ae8>
   2bd9c:	ldr	x0, [sp, #24]
   2bda0:	ldr	x1, [x0, #16]
   2bda4:	ldr	x0, [sp, #64]
   2bda8:	add	x2, x0, #0x1
   2bdac:	str	x2, [sp, #64]
   2bdb0:	lsl	x0, x0, #3
   2bdb4:	add	x1, x1, x0
   2bdb8:	ldr	x0, [sp, #40]
   2bdbc:	ldr	x2, [x0, #16]
   2bdc0:	ldr	x0, [sp, #56]
   2bdc4:	add	x3, x0, #0x1
   2bdc8:	str	x3, [sp, #56]
   2bdcc:	lsl	x0, x0, #3
   2bdd0:	add	x0, x2, x0
   2bdd4:	ldr	x1, [x1]
   2bdd8:	str	x1, [x0]
   2bddc:	b	2be64 <printf_parse@@Base+0x4b6c>
   2bde0:	ldr	x0, [sp, #32]
   2bde4:	ldr	x1, [x0, #16]
   2bde8:	ldr	x0, [sp, #72]
   2bdec:	lsl	x0, x0, #3
   2bdf0:	add	x0, x1, x0
   2bdf4:	ldr	x1, [x0]
   2bdf8:	ldr	x0, [sp, #24]
   2bdfc:	ldr	x2, [x0, #16]
   2be00:	ldr	x0, [sp, #64]
   2be04:	lsl	x0, x0, #3
   2be08:	add	x0, x2, x0
   2be0c:	ldr	x0, [x0]
   2be10:	cmp	x1, x0
   2be14:	b.ne	2be24 <printf_parse@@Base+0x4b2c>  // b.any
   2be18:	ldr	x0, [sp, #64]
   2be1c:	add	x0, x0, #0x1
   2be20:	str	x0, [sp, #64]
   2be24:	ldr	x0, [sp, #32]
   2be28:	ldr	x1, [x0, #16]
   2be2c:	ldr	x0, [sp, #72]
   2be30:	add	x2, x0, #0x1
   2be34:	str	x2, [sp, #72]
   2be38:	lsl	x0, x0, #3
   2be3c:	add	x1, x1, x0
   2be40:	ldr	x0, [sp, #40]
   2be44:	ldr	x2, [x0, #16]
   2be48:	ldr	x0, [sp, #56]
   2be4c:	add	x3, x0, #0x1
   2be50:	str	x3, [sp, #56]
   2be54:	lsl	x0, x0, #3
   2be58:	add	x0, x2, x0
   2be5c:	ldr	x1, [x1]
   2be60:	str	x1, [x0]
   2be64:	ldr	x0, [sp, #32]
   2be68:	ldr	x0, [x0, #8]
   2be6c:	ldr	x1, [sp, #72]
   2be70:	cmp	x1, x0
   2be74:	b.ge	2be8c <printf_parse@@Base+0x4b94>  // b.tcont
   2be78:	ldr	x0, [sp, #24]
   2be7c:	ldr	x0, [x0, #8]
   2be80:	ldr	x1, [sp, #64]
   2be84:	cmp	x1, x0
   2be88:	b.lt	2bd64 <printf_parse@@Base+0x4a6c>  // b.tstop
   2be8c:	ldr	x0, [sp, #32]
   2be90:	ldr	x0, [x0, #8]
   2be94:	ldr	x1, [sp, #72]
   2be98:	cmp	x1, x0
   2be9c:	b.ge	2bf0c <printf_parse@@Base+0x4c14>  // b.tcont
   2bea0:	ldr	x0, [sp, #40]
   2bea4:	ldr	x1, [x0, #16]
   2bea8:	ldr	x0, [sp, #56]
   2beac:	lsl	x0, x0, #3
   2beb0:	add	x3, x1, x0
   2beb4:	ldr	x0, [sp, #32]
   2beb8:	ldr	x1, [x0, #16]
   2bebc:	ldr	x0, [sp, #72]
   2bec0:	lsl	x0, x0, #3
   2bec4:	add	x4, x1, x0
   2bec8:	ldr	x0, [sp, #32]
   2becc:	ldr	x1, [x0, #8]
   2bed0:	ldr	x0, [sp, #72]
   2bed4:	sub	x0, x1, x0
   2bed8:	lsl	x0, x0, #3
   2bedc:	mov	x2, x0
   2bee0:	mov	x1, x4
   2bee4:	mov	x0, x3
   2bee8:	bl	a790 <memcpy@plt>
   2beec:	ldr	x0, [sp, #32]
   2bef0:	ldr	x1, [x0, #8]
   2bef4:	ldr	x0, [sp, #72]
   2bef8:	sub	x0, x1, x0
   2befc:	ldr	x1, [sp, #56]
   2bf00:	add	x0, x1, x0
   2bf04:	str	x0, [sp, #56]
   2bf08:	b	2bf88 <printf_parse@@Base+0x4c90>
   2bf0c:	ldr	x0, [sp, #24]
   2bf10:	ldr	x0, [x0, #8]
   2bf14:	ldr	x1, [sp, #64]
   2bf18:	cmp	x1, x0
   2bf1c:	b.ge	2bf88 <printf_parse@@Base+0x4c90>  // b.tcont
   2bf20:	ldr	x0, [sp, #40]
   2bf24:	ldr	x1, [x0, #16]
   2bf28:	ldr	x0, [sp, #56]
   2bf2c:	lsl	x0, x0, #3
   2bf30:	add	x3, x1, x0
   2bf34:	ldr	x0, [sp, #24]
   2bf38:	ldr	x1, [x0, #16]
   2bf3c:	ldr	x0, [sp, #64]
   2bf40:	lsl	x0, x0, #3
   2bf44:	add	x4, x1, x0
   2bf48:	ldr	x0, [sp, #24]
   2bf4c:	ldr	x1, [x0, #8]
   2bf50:	ldr	x0, [sp, #64]
   2bf54:	sub	x0, x1, x0
   2bf58:	lsl	x0, x0, #3
   2bf5c:	mov	x2, x0
   2bf60:	mov	x1, x4
   2bf64:	mov	x0, x3
   2bf68:	bl	a790 <memcpy@plt>
   2bf6c:	ldr	x0, [sp, #24]
   2bf70:	ldr	x1, [x0, #8]
   2bf74:	ldr	x0, [sp, #64]
   2bf78:	sub	x0, x1, x0
   2bf7c:	ldr	x1, [sp, #56]
   2bf80:	add	x0, x1, x0
   2bf84:	str	x0, [sp, #56]
   2bf88:	ldr	x0, [sp, #40]
   2bf8c:	ldr	x1, [sp, #56]
   2bf90:	str	x1, [x0, #8]
   2bf94:	mov	w0, #0x0                   	// #0
   2bf98:	ldp	x29, x30, [sp], #80
   2bf9c:	ret
   2bfa0:	stp	x29, x30, [sp, #-80]!
   2bfa4:	mov	x29, sp
   2bfa8:	str	x0, [sp, #24]
   2bfac:	str	x1, [sp, #16]
   2bfb0:	ldr	x0, [sp, #16]
   2bfb4:	cmp	x0, #0x0
   2bfb8:	b.eq	2bfcc <printf_parse@@Base+0x4cd4>  // b.none
   2bfbc:	ldr	x0, [sp, #16]
   2bfc0:	ldr	x0, [x0, #8]
   2bfc4:	cmp	x0, #0x0
   2bfc8:	b.ne	2bfd4 <printf_parse@@Base+0x4cdc>  // b.any
   2bfcc:	mov	w0, #0x0                   	// #0
   2bfd0:	b	2c3e4 <printf_parse@@Base+0x50ec>
   2bfd4:	ldr	x0, [sp, #24]
   2bfd8:	ldr	x1, [x0]
   2bfdc:	ldr	x0, [sp, #16]
   2bfe0:	ldr	x0, [x0, #8]
   2bfe4:	lsl	x2, x0, #1
   2bfe8:	ldr	x0, [sp, #24]
   2bfec:	ldr	x0, [x0, #8]
   2bff0:	add	x0, x2, x0
   2bff4:	cmp	x1, x0
   2bff8:	b.ge	2c074 <printf_parse@@Base+0x4d7c>  // b.tcont
   2bffc:	ldr	x0, [sp, #16]
   2c000:	ldr	x1, [x0, #8]
   2c004:	ldr	x0, [sp, #24]
   2c008:	ldr	x0, [x0]
   2c00c:	add	x0, x1, x0
   2c010:	lsl	x0, x0, #1
   2c014:	str	x0, [sp, #40]
   2c018:	ldr	x0, [sp, #24]
   2c01c:	ldr	x2, [x0, #16]
   2c020:	ldr	x0, [sp, #40]
   2c024:	lsl	x0, x0, #3
   2c028:	mov	x1, x0
   2c02c:	mov	x0, x2
   2c030:	bl	ae00 <realloc@plt>
   2c034:	str	x0, [sp, #32]
   2c038:	ldr	x0, [sp, #32]
   2c03c:	cmp	x0, #0x0
   2c040:	cset	w0, eq  // eq = none
   2c044:	and	w0, w0, #0xff
   2c048:	and	x0, x0, #0xff
   2c04c:	cmp	x0, #0x0
   2c050:	b.eq	2c05c <printf_parse@@Base+0x4d64>  // b.none
   2c054:	mov	w0, #0xc                   	// #12
   2c058:	b	2c3e4 <printf_parse@@Base+0x50ec>
   2c05c:	ldr	x0, [sp, #24]
   2c060:	ldr	x1, [sp, #32]
   2c064:	str	x1, [x0, #16]
   2c068:	ldr	x0, [sp, #24]
   2c06c:	ldr	x1, [sp, #40]
   2c070:	str	x1, [x0]
   2c074:	ldr	x0, [sp, #24]
   2c078:	ldr	x0, [x0, #8]
   2c07c:	cmp	x0, #0x0
   2c080:	cset	w0, eq  // eq = none
   2c084:	and	w0, w0, #0xff
   2c088:	and	x0, x0, #0xff
   2c08c:	cmp	x0, #0x0
   2c090:	b.eq	2c0d4 <printf_parse@@Base+0x4ddc>  // b.none
   2c094:	ldr	x0, [sp, #16]
   2c098:	ldr	x1, [x0, #8]
   2c09c:	ldr	x0, [sp, #24]
   2c0a0:	str	x1, [x0, #8]
   2c0a4:	ldr	x0, [sp, #24]
   2c0a8:	ldr	x3, [x0, #16]
   2c0ac:	ldr	x0, [sp, #16]
   2c0b0:	ldr	x1, [x0, #16]
   2c0b4:	ldr	x0, [sp, #16]
   2c0b8:	ldr	x0, [x0, #8]
   2c0bc:	lsl	x0, x0, #3
   2c0c0:	mov	x2, x0
   2c0c4:	mov	x0, x3
   2c0c8:	bl	a790 <memcpy@plt>
   2c0cc:	mov	w0, #0x0                   	// #0
   2c0d0:	b	2c3e4 <printf_parse@@Base+0x50ec>
   2c0d4:	ldr	x0, [sp, #24]
   2c0d8:	ldr	x1, [x0, #8]
   2c0dc:	ldr	x0, [sp, #16]
   2c0e0:	ldr	x0, [x0, #8]
   2c0e4:	lsl	x0, x0, #1
   2c0e8:	add	x0, x1, x0
   2c0ec:	str	x0, [sp, #56]
   2c0f0:	ldr	x0, [sp, #16]
   2c0f4:	ldr	x0, [x0, #8]
   2c0f8:	sub	x0, x0, #0x1
   2c0fc:	str	x0, [sp, #72]
   2c100:	ldr	x0, [sp, #24]
   2c104:	ldr	x0, [x0, #8]
   2c108:	sub	x0, x0, #0x1
   2c10c:	str	x0, [sp, #64]
   2c110:	b	2c1f4 <printf_parse@@Base+0x4efc>
   2c114:	ldr	x0, [sp, #24]
   2c118:	ldr	x1, [x0, #16]
   2c11c:	ldr	x0, [sp, #64]
   2c120:	lsl	x0, x0, #3
   2c124:	add	x0, x1, x0
   2c128:	ldr	x1, [x0]
   2c12c:	ldr	x0, [sp, #16]
   2c130:	ldr	x2, [x0, #16]
   2c134:	ldr	x0, [sp, #72]
   2c138:	lsl	x0, x0, #3
   2c13c:	add	x0, x2, x0
   2c140:	ldr	x0, [x0]
   2c144:	cmp	x1, x0
   2c148:	b.ne	2c168 <printf_parse@@Base+0x4e70>  // b.any
   2c14c:	ldr	x0, [sp, #72]
   2c150:	sub	x0, x0, #0x1
   2c154:	str	x0, [sp, #72]
   2c158:	ldr	x0, [sp, #64]
   2c15c:	sub	x0, x0, #0x1
   2c160:	str	x0, [sp, #64]
   2c164:	b	2c1f4 <printf_parse@@Base+0x4efc>
   2c168:	ldr	x0, [sp, #24]
   2c16c:	ldr	x1, [x0, #16]
   2c170:	ldr	x0, [sp, #64]
   2c174:	lsl	x0, x0, #3
   2c178:	add	x0, x1, x0
   2c17c:	ldr	x1, [x0]
   2c180:	ldr	x0, [sp, #16]
   2c184:	ldr	x2, [x0, #16]
   2c188:	ldr	x0, [sp, #72]
   2c18c:	lsl	x0, x0, #3
   2c190:	add	x0, x2, x0
   2c194:	ldr	x0, [x0]
   2c198:	cmp	x1, x0
   2c19c:	b.ge	2c1e8 <printf_parse@@Base+0x4ef0>  // b.tcont
   2c1a0:	ldr	x0, [sp, #16]
   2c1a4:	ldr	x1, [x0, #16]
   2c1a8:	ldr	x0, [sp, #72]
   2c1ac:	sub	x2, x0, #0x1
   2c1b0:	str	x2, [sp, #72]
   2c1b4:	lsl	x0, x0, #3
   2c1b8:	add	x1, x1, x0
   2c1bc:	ldr	x0, [sp, #24]
   2c1c0:	ldr	x2, [x0, #16]
   2c1c4:	ldr	x0, [sp, #56]
   2c1c8:	sub	x0, x0, #0x1
   2c1cc:	str	x0, [sp, #56]
   2c1d0:	ldr	x0, [sp, #56]
   2c1d4:	lsl	x0, x0, #3
   2c1d8:	add	x0, x2, x0
   2c1dc:	ldr	x1, [x1]
   2c1e0:	str	x1, [x0]
   2c1e4:	b	2c1f4 <printf_parse@@Base+0x4efc>
   2c1e8:	ldr	x0, [sp, #64]
   2c1ec:	sub	x0, x0, #0x1
   2c1f0:	str	x0, [sp, #64]
   2c1f4:	ldr	x0, [sp, #72]
   2c1f8:	cmp	x0, #0x0
   2c1fc:	b.lt	2c20c <printf_parse@@Base+0x4f14>  // b.tstop
   2c200:	ldr	x0, [sp, #64]
   2c204:	cmp	x0, #0x0
   2c208:	b.ge	2c114 <printf_parse@@Base+0x4e1c>  // b.tcont
   2c20c:	ldr	x0, [sp, #72]
   2c210:	cmp	x0, #0x0
   2c214:	b.lt	2c260 <printf_parse@@Base+0x4f68>  // b.tstop
   2c218:	ldr	x0, [sp, #72]
   2c21c:	add	x0, x0, #0x1
   2c220:	ldr	x1, [sp, #56]
   2c224:	sub	x0, x1, x0
   2c228:	str	x0, [sp, #56]
   2c22c:	ldr	x0, [sp, #24]
   2c230:	ldr	x1, [x0, #16]
   2c234:	ldr	x0, [sp, #56]
   2c238:	lsl	x0, x0, #3
   2c23c:	add	x3, x1, x0
   2c240:	ldr	x0, [sp, #16]
   2c244:	ldr	x1, [x0, #16]
   2c248:	ldr	x0, [sp, #72]
   2c24c:	add	x0, x0, #0x1
   2c250:	lsl	x0, x0, #3
   2c254:	mov	x2, x0
   2c258:	mov	x0, x3
   2c25c:	bl	a790 <memcpy@plt>
   2c260:	ldr	x0, [sp, #24]
   2c264:	ldr	x0, [x0, #8]
   2c268:	sub	x0, x0, #0x1
   2c26c:	str	x0, [sp, #64]
   2c270:	ldr	x0, [sp, #24]
   2c274:	ldr	x1, [x0, #8]
   2c278:	ldr	x0, [sp, #16]
   2c27c:	ldr	x0, [x0, #8]
   2c280:	lsl	x0, x0, #1
   2c284:	add	x0, x1, x0
   2c288:	sub	x0, x0, #0x1
   2c28c:	str	x0, [sp, #72]
   2c290:	ldr	x1, [sp, #72]
   2c294:	ldr	x0, [sp, #56]
   2c298:	sub	x0, x1, x0
   2c29c:	add	x0, x0, #0x1
   2c2a0:	str	x0, [sp, #48]
   2c2a4:	ldr	x0, [sp, #48]
   2c2a8:	cmp	x0, #0x0
   2c2ac:	b.ne	2c2b8 <printf_parse@@Base+0x4fc0>  // b.any
   2c2b0:	mov	w0, #0x0                   	// #0
   2c2b4:	b	2c3e4 <printf_parse@@Base+0x50ec>
   2c2b8:	ldr	x0, [sp, #24]
   2c2bc:	ldr	x1, [x0, #8]
   2c2c0:	ldr	x0, [sp, #48]
   2c2c4:	add	x1, x1, x0
   2c2c8:	ldr	x0, [sp, #24]
   2c2cc:	str	x1, [x0, #8]
   2c2d0:	ldr	x0, [sp, #24]
   2c2d4:	ldr	x1, [x0, #16]
   2c2d8:	ldr	x0, [sp, #72]
   2c2dc:	lsl	x0, x0, #3
   2c2e0:	add	x0, x1, x0
   2c2e4:	ldr	x1, [x0]
   2c2e8:	ldr	x0, [sp, #24]
   2c2ec:	ldr	x2, [x0, #16]
   2c2f0:	ldr	x0, [sp, #64]
   2c2f4:	lsl	x0, x0, #3
   2c2f8:	add	x0, x2, x0
   2c2fc:	ldr	x0, [x0]
   2c300:	cmp	x1, x0
   2c304:	b.le	2c360 <printf_parse@@Base+0x5068>
   2c308:	ldr	x0, [sp, #24]
   2c30c:	ldr	x1, [x0, #16]
   2c310:	ldr	x0, [sp, #72]
   2c314:	sub	x2, x0, #0x1
   2c318:	str	x2, [sp, #72]
   2c31c:	lsl	x0, x0, #3
   2c320:	add	x1, x1, x0
   2c324:	ldr	x0, [sp, #24]
   2c328:	ldr	x2, [x0, #16]
   2c32c:	ldr	x0, [sp, #48]
   2c330:	sub	x3, x0, #0x1
   2c334:	str	x3, [sp, #48]
   2c338:	ldr	x3, [sp, #64]
   2c33c:	add	x0, x0, x3
   2c340:	lsl	x0, x0, #3
   2c344:	add	x0, x2, x0
   2c348:	ldr	x1, [x1]
   2c34c:	str	x1, [x0]
   2c350:	ldr	x0, [sp, #48]
   2c354:	cmp	x0, #0x0
   2c358:	b.ne	2c2d0 <printf_parse@@Base+0x4fd8>  // b.any
   2c35c:	b	2c3e0 <printf_parse@@Base+0x50e8>
   2c360:	ldr	x0, [sp, #24]
   2c364:	ldr	x1, [x0, #16]
   2c368:	ldr	x0, [sp, #64]
   2c36c:	lsl	x0, x0, #3
   2c370:	add	x1, x1, x0
   2c374:	ldr	x0, [sp, #24]
   2c378:	ldr	x2, [x0, #16]
   2c37c:	ldr	x3, [sp, #64]
   2c380:	ldr	x0, [sp, #48]
   2c384:	add	x0, x3, x0
   2c388:	lsl	x0, x0, #3
   2c38c:	add	x0, x2, x0
   2c390:	ldr	x1, [x1]
   2c394:	str	x1, [x0]
   2c398:	ldr	x0, [sp, #64]
   2c39c:	sub	x0, x0, #0x1
   2c3a0:	str	x0, [sp, #64]
   2c3a4:	ldr	x0, [sp, #64]
   2c3a8:	cmp	x0, #0x0
   2c3ac:	b.ge	2c2d0 <printf_parse@@Base+0x4fd8>  // b.tcont
   2c3b0:	ldr	x0, [sp, #24]
   2c3b4:	ldr	x3, [x0, #16]
   2c3b8:	ldr	x0, [sp, #24]
   2c3bc:	ldr	x1, [x0, #16]
   2c3c0:	ldr	x0, [sp, #56]
   2c3c4:	lsl	x0, x0, #3
   2c3c8:	add	x1, x1, x0
   2c3cc:	ldr	x0, [sp, #48]
   2c3d0:	lsl	x0, x0, #3
   2c3d4:	mov	x2, x0
   2c3d8:	mov	x0, x3
   2c3dc:	bl	a790 <memcpy@plt>
   2c3e0:	mov	w0, #0x0                   	// #0
   2c3e4:	ldp	x29, x30, [sp], #80
   2c3e8:	ret
   2c3ec:	stp	x29, x30, [sp, #-48]!
   2c3f0:	mov	x29, sp
   2c3f4:	str	x0, [sp, #24]
   2c3f8:	str	x1, [sp, #16]
   2c3fc:	ldr	x0, [sp, #24]
   2c400:	ldr	x0, [x0]
   2c404:	cmp	x0, #0x0
   2c408:	b.ne	2c438 <printf_parse@@Base+0x5140>  // b.any
   2c40c:	ldr	x1, [sp, #16]
   2c410:	ldr	x0, [sp, #24]
   2c414:	bl	2b520 <printf_parse@@Base+0x4228>
   2c418:	cmp	w0, #0x0
   2c41c:	cset	w0, eq  // eq = none
   2c420:	and	w0, w0, #0xff
   2c424:	and	x0, x0, #0xff
   2c428:	cmp	x0, #0x0
   2c42c:	cset	w0, ne  // ne = any
   2c430:	and	w0, w0, #0xff
   2c434:	b	2c618 <printf_parse@@Base+0x5320>
   2c438:	ldr	x0, [sp, #24]
   2c43c:	ldr	x0, [x0, #8]
   2c440:	cmp	x0, #0x0
   2c444:	b.ne	2c474 <printf_parse@@Base+0x517c>  // b.any
   2c448:	ldr	x0, [sp, #24]
   2c44c:	ldr	x0, [x0, #16]
   2c450:	ldr	x1, [sp, #16]
   2c454:	str	x1, [x0]
   2c458:	ldr	x0, [sp, #24]
   2c45c:	ldr	x0, [x0, #8]
   2c460:	add	x1, x0, #0x1
   2c464:	ldr	x0, [sp, #24]
   2c468:	str	x1, [x0, #8]
   2c46c:	mov	w0, #0x1                   	// #1
   2c470:	b	2c618 <printf_parse@@Base+0x5320>
   2c474:	ldr	x0, [sp, #24]
   2c478:	ldr	x1, [x0]
   2c47c:	ldr	x0, [sp, #24]
   2c480:	ldr	x0, [x0, #8]
   2c484:	cmp	x1, x0
   2c488:	b.ne	2c4f4 <printf_parse@@Base+0x51fc>  // b.any
   2c48c:	ldr	x0, [sp, #24]
   2c490:	ldr	x0, [x0]
   2c494:	lsl	x1, x0, #1
   2c498:	ldr	x0, [sp, #24]
   2c49c:	str	x1, [x0]
   2c4a0:	ldr	x0, [sp, #24]
   2c4a4:	ldr	x2, [x0, #16]
   2c4a8:	ldr	x0, [sp, #24]
   2c4ac:	ldr	x0, [x0]
   2c4b0:	lsl	x0, x0, #3
   2c4b4:	mov	x1, x0
   2c4b8:	mov	x0, x2
   2c4bc:	bl	ae00 <realloc@plt>
   2c4c0:	str	x0, [sp, #32]
   2c4c4:	ldr	x0, [sp, #32]
   2c4c8:	cmp	x0, #0x0
   2c4cc:	cset	w0, eq  // eq = none
   2c4d0:	and	w0, w0, #0xff
   2c4d4:	and	x0, x0, #0xff
   2c4d8:	cmp	x0, #0x0
   2c4dc:	b.eq	2c4e8 <printf_parse@@Base+0x51f0>  // b.none
   2c4e0:	mov	w0, #0x0                   	// #0
   2c4e4:	b	2c618 <printf_parse@@Base+0x5320>
   2c4e8:	ldr	x0, [sp, #24]
   2c4ec:	ldr	x1, [sp, #32]
   2c4f0:	str	x1, [x0, #16]
   2c4f4:	ldr	x0, [sp, #24]
   2c4f8:	ldr	x0, [x0, #16]
   2c4fc:	ldr	x0, [x0]
   2c500:	ldr	x1, [sp, #16]
   2c504:	cmp	x1, x0
   2c508:	b.ge	2c56c <printf_parse@@Base+0x5274>  // b.tcont
   2c50c:	ldr	x0, [sp, #24]
   2c510:	ldr	x0, [x0, #8]
   2c514:	str	x0, [sp, #40]
   2c518:	b	2c55c <printf_parse@@Base+0x5264>
   2c51c:	ldr	x0, [sp, #24]
   2c520:	ldr	x1, [x0, #16]
   2c524:	ldr	x0, [sp, #40]
   2c528:	lsl	x0, x0, #3
   2c52c:	sub	x0, x0, #0x8
   2c530:	add	x1, x1, x0
   2c534:	ldr	x0, [sp, #24]
   2c538:	ldr	x2, [x0, #16]
   2c53c:	ldr	x0, [sp, #40]
   2c540:	lsl	x0, x0, #3
   2c544:	add	x0, x2, x0
   2c548:	ldr	x1, [x1]
   2c54c:	str	x1, [x0]
   2c550:	ldr	x0, [sp, #40]
   2c554:	sub	x0, x0, #0x1
   2c558:	str	x0, [sp, #40]
   2c55c:	ldr	x0, [sp, #40]
   2c560:	cmp	x0, #0x0
   2c564:	b.gt	2c51c <printf_parse@@Base+0x5224>
   2c568:	b	2c5e4 <printf_parse@@Base+0x52ec>
   2c56c:	ldr	x0, [sp, #24]
   2c570:	ldr	x0, [x0, #8]
   2c574:	str	x0, [sp, #40]
   2c578:	b	2c5bc <printf_parse@@Base+0x52c4>
   2c57c:	ldr	x0, [sp, #24]
   2c580:	ldr	x1, [x0, #16]
   2c584:	ldr	x0, [sp, #40]
   2c588:	lsl	x0, x0, #3
   2c58c:	sub	x0, x0, #0x8
   2c590:	add	x1, x1, x0
   2c594:	ldr	x0, [sp, #24]
   2c598:	ldr	x2, [x0, #16]
   2c59c:	ldr	x0, [sp, #40]
   2c5a0:	lsl	x0, x0, #3
   2c5a4:	add	x0, x2, x0
   2c5a8:	ldr	x1, [x1]
   2c5ac:	str	x1, [x0]
   2c5b0:	ldr	x0, [sp, #40]
   2c5b4:	sub	x0, x0, #0x1
   2c5b8:	str	x0, [sp, #40]
   2c5bc:	ldr	x0, [sp, #24]
   2c5c0:	ldr	x1, [x0, #16]
   2c5c4:	ldr	x0, [sp, #40]
   2c5c8:	lsl	x0, x0, #3
   2c5cc:	sub	x0, x0, #0x8
   2c5d0:	add	x0, x1, x0
   2c5d4:	ldr	x0, [x0]
   2c5d8:	ldr	x1, [sp, #16]
   2c5dc:	cmp	x1, x0
   2c5e0:	b.lt	2c57c <printf_parse@@Base+0x5284>  // b.tstop
   2c5e4:	ldr	x0, [sp, #24]
   2c5e8:	ldr	x1, [x0, #16]
   2c5ec:	ldr	x0, [sp, #40]
   2c5f0:	lsl	x0, x0, #3
   2c5f4:	add	x0, x1, x0
   2c5f8:	ldr	x1, [sp, #16]
   2c5fc:	str	x1, [x0]
   2c600:	ldr	x0, [sp, #24]
   2c604:	ldr	x0, [x0, #8]
   2c608:	add	x1, x0, #0x1
   2c60c:	ldr	x0, [sp, #24]
   2c610:	str	x1, [x0, #8]
   2c614:	mov	w0, #0x1                   	// #1
   2c618:	ldp	x29, x30, [sp], #48
   2c61c:	ret
   2c620:	stp	x29, x30, [sp, #-48]!
   2c624:	mov	x29, sp
   2c628:	str	x0, [sp, #24]
   2c62c:	str	x1, [sp, #16]
   2c630:	ldr	x0, [sp, #24]
   2c634:	ldr	x1, [x0]
   2c638:	ldr	x0, [sp, #24]
   2c63c:	ldr	x0, [x0, #8]
   2c640:	cmp	x1, x0
   2c644:	b.ne	2c6b4 <printf_parse@@Base+0x53bc>  // b.any
   2c648:	ldr	x0, [sp, #24]
   2c64c:	ldr	x0, [x0]
   2c650:	add	x0, x0, #0x1
   2c654:	lsl	x1, x0, #1
   2c658:	ldr	x0, [sp, #24]
   2c65c:	str	x1, [x0]
   2c660:	ldr	x0, [sp, #24]
   2c664:	ldr	x2, [x0, #16]
   2c668:	ldr	x0, [sp, #24]
   2c66c:	ldr	x0, [x0]
   2c670:	lsl	x0, x0, #3
   2c674:	mov	x1, x0
   2c678:	mov	x0, x2
   2c67c:	bl	ae00 <realloc@plt>
   2c680:	str	x0, [sp, #40]
   2c684:	ldr	x0, [sp, #40]
   2c688:	cmp	x0, #0x0
   2c68c:	cset	w0, eq  // eq = none
   2c690:	and	w0, w0, #0xff
   2c694:	and	x0, x0, #0xff
   2c698:	cmp	x0, #0x0
   2c69c:	b.eq	2c6a8 <printf_parse@@Base+0x53b0>  // b.none
   2c6a0:	mov	w0, #0x0                   	// #0
   2c6a4:	b	2c6e4 <printf_parse@@Base+0x53ec>
   2c6a8:	ldr	x0, [sp, #24]
   2c6ac:	ldr	x1, [sp, #40]
   2c6b0:	str	x1, [x0, #16]
   2c6b4:	ldr	x0, [sp, #24]
   2c6b8:	ldr	x1, [x0, #16]
   2c6bc:	ldr	x0, [sp, #24]
   2c6c0:	ldr	x0, [x0, #8]
   2c6c4:	add	x3, x0, #0x1
   2c6c8:	ldr	x2, [sp, #24]
   2c6cc:	str	x3, [x2, #8]
   2c6d0:	lsl	x0, x0, #3
   2c6d4:	add	x0, x1, x0
   2c6d8:	ldr	x1, [sp, #16]
   2c6dc:	str	x1, [x0]
   2c6e0:	mov	w0, #0x1                   	// #1
   2c6e4:	ldp	x29, x30, [sp], #48
   2c6e8:	ret
   2c6ec:	sub	sp, sp, #0x20
   2c6f0:	str	x0, [sp, #8]
   2c6f4:	str	x1, [sp]
   2c6f8:	ldr	x0, [sp, #8]
   2c6fc:	cmp	x0, #0x0
   2c700:	b.eq	2c728 <printf_parse@@Base+0x5430>  // b.none
   2c704:	ldr	x0, [sp]
   2c708:	cmp	x0, #0x0
   2c70c:	b.eq	2c728 <printf_parse@@Base+0x5430>  // b.none
   2c710:	ldr	x0, [sp, #8]
   2c714:	ldr	x1, [x0, #8]
   2c718:	ldr	x0, [sp]
   2c71c:	ldr	x0, [x0, #8]
   2c720:	cmp	x1, x0
   2c724:	b.eq	2c730 <printf_parse@@Base+0x5438>  // b.none
   2c728:	mov	w0, #0x0                   	// #0
   2c72c:	b	2c79c <printf_parse@@Base+0x54a4>
   2c730:	ldr	x0, [sp, #8]
   2c734:	ldr	x0, [x0, #8]
   2c738:	str	x0, [sp, #24]
   2c73c:	b	2c780 <printf_parse@@Base+0x5488>
   2c740:	ldr	x0, [sp, #8]
   2c744:	ldr	x1, [x0, #16]
   2c748:	ldr	x0, [sp, #24]
   2c74c:	lsl	x0, x0, #3
   2c750:	add	x0, x1, x0
   2c754:	ldr	x1, [x0]
   2c758:	ldr	x0, [sp]
   2c75c:	ldr	x2, [x0, #16]
   2c760:	ldr	x0, [sp, #24]
   2c764:	lsl	x0, x0, #3
   2c768:	add	x0, x2, x0
   2c76c:	ldr	x0, [x0]
   2c770:	cmp	x1, x0
   2c774:	b.eq	2c780 <printf_parse@@Base+0x5488>  // b.none
   2c778:	mov	w0, #0x0                   	// #0
   2c77c:	b	2c79c <printf_parse@@Base+0x54a4>
   2c780:	ldr	x0, [sp, #24]
   2c784:	sub	x0, x0, #0x1
   2c788:	str	x0, [sp, #24]
   2c78c:	ldr	x0, [sp, #24]
   2c790:	cmp	x0, #0x0
   2c794:	b.ge	2c740 <printf_parse@@Base+0x5448>  // b.tcont
   2c798:	mov	w0, #0x1                   	// #1
   2c79c:	add	sp, sp, #0x20
   2c7a0:	ret
   2c7a4:	sub	sp, sp, #0x30
   2c7a8:	str	x0, [sp, #8]
   2c7ac:	str	x1, [sp]
   2c7b0:	ldr	x0, [sp, #8]
   2c7b4:	ldr	x0, [x0, #8]
   2c7b8:	cmp	x0, #0x0
   2c7bc:	b.gt	2c7c8 <printf_parse@@Base+0x54d0>
   2c7c0:	mov	x0, #0x0                   	// #0
   2c7c4:	b	2c874 <printf_parse@@Base+0x557c>
   2c7c8:	str	xzr, [sp, #40]
   2c7cc:	ldr	x0, [sp, #8]
   2c7d0:	ldr	x0, [x0, #8]
   2c7d4:	sub	x0, x0, #0x1
   2c7d8:	str	x0, [sp, #32]
   2c7dc:	b	2c830 <printf_parse@@Base+0x5538>
   2c7e0:	ldr	x1, [sp, #40]
   2c7e4:	ldr	x0, [sp, #32]
   2c7e8:	add	x0, x1, x0
   2c7ec:	lsr	x0, x0, #1
   2c7f0:	str	x0, [sp, #24]
   2c7f4:	ldr	x0, [sp, #8]
   2c7f8:	ldr	x1, [x0, #16]
   2c7fc:	ldr	x0, [sp, #24]
   2c800:	lsl	x0, x0, #3
   2c804:	add	x0, x1, x0
   2c808:	ldr	x0, [x0]
   2c80c:	ldr	x1, [sp]
   2c810:	cmp	x1, x0
   2c814:	b.le	2c828 <printf_parse@@Base+0x5530>
   2c818:	ldr	x0, [sp, #24]
   2c81c:	add	x0, x0, #0x1
   2c820:	str	x0, [sp, #40]
   2c824:	b	2c830 <printf_parse@@Base+0x5538>
   2c828:	ldr	x0, [sp, #24]
   2c82c:	str	x0, [sp, #32]
   2c830:	ldr	x1, [sp, #40]
   2c834:	ldr	x0, [sp, #32]
   2c838:	cmp	x1, x0
   2c83c:	b.cc	2c7e0 <printf_parse@@Base+0x54e8>  // b.lo, b.ul, b.last
   2c840:	ldr	x0, [sp, #8]
   2c844:	ldr	x1, [x0, #16]
   2c848:	ldr	x0, [sp, #40]
   2c84c:	lsl	x0, x0, #3
   2c850:	add	x0, x1, x0
   2c854:	ldr	x0, [x0]
   2c858:	ldr	x1, [sp]
   2c85c:	cmp	x1, x0
   2c860:	b.ne	2c870 <printf_parse@@Base+0x5578>  // b.any
   2c864:	ldr	x0, [sp, #40]
   2c868:	add	x0, x0, #0x1
   2c86c:	b	2c874 <printf_parse@@Base+0x557c>
   2c870:	mov	x0, #0x0                   	// #0
   2c874:	add	sp, sp, #0x30
   2c878:	ret
   2c87c:	sub	sp, sp, #0x10
   2c880:	str	x0, [sp, #8]
   2c884:	str	x1, [sp]
   2c888:	ldr	x0, [sp]
   2c88c:	cmp	x0, #0x0
   2c890:	b.lt	2c918 <printf_parse@@Base+0x5620>  // b.tstop
   2c894:	ldr	x0, [sp, #8]
   2c898:	ldr	x0, [x0, #8]
   2c89c:	ldr	x1, [sp]
   2c8a0:	cmp	x1, x0
   2c8a4:	b.ge	2c918 <printf_parse@@Base+0x5620>  // b.tcont
   2c8a8:	ldr	x0, [sp, #8]
   2c8ac:	ldr	x0, [x0, #8]
   2c8b0:	sub	x1, x0, #0x1
   2c8b4:	ldr	x0, [sp, #8]
   2c8b8:	str	x1, [x0, #8]
   2c8bc:	b	2c900 <printf_parse@@Base+0x5608>
   2c8c0:	ldr	x0, [sp, #8]
   2c8c4:	ldr	x1, [x0, #16]
   2c8c8:	ldr	x0, [sp]
   2c8cc:	add	x0, x0, #0x1
   2c8d0:	lsl	x0, x0, #3
   2c8d4:	add	x1, x1, x0
   2c8d8:	ldr	x0, [sp, #8]
   2c8dc:	ldr	x2, [x0, #16]
   2c8e0:	ldr	x0, [sp]
   2c8e4:	lsl	x0, x0, #3
   2c8e8:	add	x0, x2, x0
   2c8ec:	ldr	x1, [x1]
   2c8f0:	str	x1, [x0]
   2c8f4:	ldr	x0, [sp]
   2c8f8:	add	x0, x0, #0x1
   2c8fc:	str	x0, [sp]
   2c900:	ldr	x0, [sp, #8]
   2c904:	ldr	x0, [x0, #8]
   2c908:	ldr	x1, [sp]
   2c90c:	cmp	x1, x0
   2c910:	b.lt	2c8c0 <printf_parse@@Base+0x55c8>  // b.tstop
   2c914:	b	2c91c <printf_parse@@Base+0x5624>
   2c918:	nop
   2c91c:	add	sp, sp, #0x10
   2c920:	ret
   2c924:	stp	x29, x30, [sp, #-112]!
   2c928:	mov	x29, sp
   2c92c:	str	x0, [sp, #40]
   2c930:	stp	x1, x2, [sp, #24]
   2c934:	ldr	x0, [sp, #40]
   2c938:	ldr	x1, [x0, #16]
   2c93c:	ldr	x0, [sp, #40]
   2c940:	ldr	x0, [x0, #8]
   2c944:	cmp	x1, x0
   2c948:	cset	w0, cs  // cs = hs, nlast
   2c94c:	and	w0, w0, #0xff
   2c950:	and	x0, x0, #0xff
   2c954:	cmp	x0, #0x0
   2c958:	b.eq	2cba4 <printf_parse@@Base+0x58ac>  // b.none
   2c95c:	ldr	x0, [sp, #40]
   2c960:	ldr	x0, [x0, #8]
   2c964:	lsl	x0, x0, #1
   2c968:	str	x0, [sp, #104]
   2c96c:	mov	x0, #0x18                  	// #24
   2c970:	str	x0, [sp, #96]
   2c974:	mov	x1, #0xffffffffffffffff    	// #-1
   2c978:	ldr	x0, [sp, #96]
   2c97c:	udiv	x0, x1, x0
   2c980:	cmp	x0, #0x0
   2c984:	b.lt	2c998 <printf_parse@@Base+0x56a0>  // b.tstop
   2c988:	mov	x1, #0xffffffffffffffff    	// #-1
   2c98c:	ldr	x0, [sp, #96]
   2c990:	udiv	x0, x1, x0
   2c994:	b	2c99c <printf_parse@@Base+0x56a4>
   2c998:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2c99c:	ldr	x1, [sp, #104]
   2c9a0:	cmp	x0, x1
   2c9a4:	cset	w0, cc  // cc = lo, ul, last
   2c9a8:	and	w0, w0, #0xff
   2c9ac:	and	x0, x0, #0xff
   2c9b0:	cmp	x0, #0x0
   2c9b4:	b.eq	2c9c0 <printf_parse@@Base+0x56c8>  // b.none
   2c9b8:	mov	x0, #0xffffffffffffffff    	// #-1
   2c9bc:	b	2cce0 <printf_parse@@Base+0x59e8>
   2c9c0:	ldr	x0, [sp, #40]
   2c9c4:	ldr	x2, [x0]
   2c9c8:	ldr	x0, [sp, #104]
   2c9cc:	lsl	x0, x0, #4
   2c9d0:	mov	x1, x0
   2c9d4:	mov	x0, x2
   2c9d8:	bl	ae00 <realloc@plt>
   2c9dc:	str	x0, [sp, #88]
   2c9e0:	ldr	x0, [sp, #88]
   2c9e4:	cmp	x0, #0x0
   2c9e8:	cset	w0, eq  // eq = none
   2c9ec:	and	w0, w0, #0xff
   2c9f0:	and	x0, x0, #0xff
   2c9f4:	cmp	x0, #0x0
   2c9f8:	b.eq	2ca04 <printf_parse@@Base+0x570c>  // b.none
   2c9fc:	mov	x0, #0xffffffffffffffff    	// #-1
   2ca00:	b	2cce0 <printf_parse@@Base+0x59e8>
   2ca04:	ldr	x0, [sp, #40]
   2ca08:	ldr	x1, [sp, #88]
   2ca0c:	str	x1, [x0]
   2ca10:	ldr	x0, [sp, #40]
   2ca14:	ldr	x2, [x0, #24]
   2ca18:	ldr	x0, [sp, #104]
   2ca1c:	lsl	x0, x0, #3
   2ca20:	mov	x1, x0
   2ca24:	mov	x0, x2
   2ca28:	bl	ae00 <realloc@plt>
   2ca2c:	str	x0, [sp, #80]
   2ca30:	ldr	x0, [sp, #40]
   2ca34:	ldr	x2, [x0, #32]
   2ca38:	ldr	x0, [sp, #104]
   2ca3c:	lsl	x0, x0, #3
   2ca40:	mov	x1, x0
   2ca44:	mov	x0, x2
   2ca48:	bl	ae00 <realloc@plt>
   2ca4c:	str	x0, [sp, #72]
   2ca50:	ldr	x0, [sp, #40]
   2ca54:	ldr	x2, [x0, #40]
   2ca58:	ldr	x1, [sp, #104]
   2ca5c:	mov	x0, x1
   2ca60:	lsl	x0, x0, #1
   2ca64:	add	x0, x0, x1
   2ca68:	lsl	x0, x0, #3
   2ca6c:	mov	x1, x0
   2ca70:	mov	x0, x2
   2ca74:	bl	ae00 <realloc@plt>
   2ca78:	str	x0, [sp, #64]
   2ca7c:	ldr	x0, [sp, #40]
   2ca80:	ldr	x2, [x0, #48]
   2ca84:	ldr	x1, [sp, #104]
   2ca88:	mov	x0, x1
   2ca8c:	lsl	x0, x0, #1
   2ca90:	add	x0, x0, x1
   2ca94:	lsl	x0, x0, #3
   2ca98:	mov	x1, x0
   2ca9c:	mov	x0, x2
   2caa0:	bl	ae00 <realloc@plt>
   2caa4:	str	x0, [sp, #56]
   2caa8:	ldr	x0, [sp, #80]
   2caac:	cmp	x0, #0x0
   2cab0:	cset	w0, eq  // eq = none
   2cab4:	and	w0, w0, #0xff
   2cab8:	and	x0, x0, #0xff
   2cabc:	cmp	x0, #0x0
   2cac0:	b.ne	2cae0 <printf_parse@@Base+0x57e8>  // b.any
   2cac4:	ldr	x0, [sp, #72]
   2cac8:	cmp	x0, #0x0
   2cacc:	cset	w0, eq  // eq = none
   2cad0:	and	w0, w0, #0xff
   2cad4:	and	x0, x0, #0xff
   2cad8:	cmp	x0, #0x0
   2cadc:	b.eq	2cae8 <printf_parse@@Base+0x57f0>  // b.none
   2cae0:	mov	w0, #0x1                   	// #1
   2cae4:	b	2caec <printf_parse@@Base+0x57f4>
   2cae8:	mov	w0, #0x0                   	// #0
   2caec:	cmp	w0, #0x0
   2caf0:	b.ne	2cb10 <printf_parse@@Base+0x5818>  // b.any
   2caf4:	ldr	x0, [sp, #64]
   2caf8:	cmp	x0, #0x0
   2cafc:	cset	w0, eq  // eq = none
   2cb00:	and	w0, w0, #0xff
   2cb04:	and	x0, x0, #0xff
   2cb08:	cmp	x0, #0x0
   2cb0c:	b.eq	2cb18 <printf_parse@@Base+0x5820>  // b.none
   2cb10:	mov	w0, #0x1                   	// #1
   2cb14:	b	2cb1c <printf_parse@@Base+0x5824>
   2cb18:	mov	w0, #0x0                   	// #0
   2cb1c:	cmp	w0, #0x0
   2cb20:	b.ne	2cb40 <printf_parse@@Base+0x5848>  // b.any
   2cb24:	ldr	x0, [sp, #56]
   2cb28:	cmp	x0, #0x0
   2cb2c:	cset	w0, eq  // eq = none
   2cb30:	and	w0, w0, #0xff
   2cb34:	and	x0, x0, #0xff
   2cb38:	cmp	x0, #0x0
   2cb3c:	b.eq	2cb68 <printf_parse@@Base+0x5870>  // b.none
   2cb40:	ldr	x0, [sp, #80]
   2cb44:	bl	b130 <free@plt>
   2cb48:	ldr	x0, [sp, #72]
   2cb4c:	bl	b130 <free@plt>
   2cb50:	ldr	x0, [sp, #64]
   2cb54:	bl	b130 <free@plt>
   2cb58:	ldr	x0, [sp, #56]
   2cb5c:	bl	b130 <free@plt>
   2cb60:	mov	x0, #0xffffffffffffffff    	// #-1
   2cb64:	b	2cce0 <printf_parse@@Base+0x59e8>
   2cb68:	ldr	x0, [sp, #40]
   2cb6c:	ldr	x1, [sp, #80]
   2cb70:	str	x1, [x0, #24]
   2cb74:	ldr	x0, [sp, #40]
   2cb78:	ldr	x1, [sp, #72]
   2cb7c:	str	x1, [x0, #32]
   2cb80:	ldr	x0, [sp, #40]
   2cb84:	ldr	x1, [sp, #64]
   2cb88:	str	x1, [x0, #40]
   2cb8c:	ldr	x0, [sp, #40]
   2cb90:	ldr	x1, [sp, #56]
   2cb94:	str	x1, [x0, #48]
   2cb98:	ldr	x0, [sp, #40]
   2cb9c:	ldr	x1, [sp, #104]
   2cba0:	str	x1, [x0, #8]
   2cba4:	ldr	x0, [sp, #40]
   2cba8:	ldr	x1, [x0]
   2cbac:	ldr	x0, [sp, #40]
   2cbb0:	ldr	x0, [x0, #16]
   2cbb4:	lsl	x0, x0, #4
   2cbb8:	add	x2, x1, x0
   2cbbc:	ldp	x0, x1, [sp, #24]
   2cbc0:	stp	x0, x1, [x2]
   2cbc4:	ldr	x0, [sp, #40]
   2cbc8:	ldr	x1, [x0]
   2cbcc:	ldr	x0, [sp, #40]
   2cbd0:	ldr	x0, [x0, #16]
   2cbd4:	lsl	x0, x0, #4
   2cbd8:	add	x0, x1, x0
   2cbdc:	ldr	w1, [x0, #8]
   2cbe0:	and	w1, w1, #0xfffc00ff
   2cbe4:	str	w1, [x0, #8]
   2cbe8:	ldrb	w0, [sp, #32]
   2cbec:	cmp	w0, #0x5
   2cbf0:	b.ne	2cc04 <printf_parse@@Base+0x590c>  // b.any
   2cbf4:	ldr	x0, [sp, #40]
   2cbf8:	ldr	w0, [x0, #180]
   2cbfc:	cmp	w0, #0x1
   2cc00:	b.gt	2cc10 <printf_parse@@Base+0x5918>
   2cc04:	ldrb	w0, [sp, #32]
   2cc08:	cmp	w0, #0x6
   2cc0c:	b.ne	2cc18 <printf_parse@@Base+0x5920>  // b.any
   2cc10:	mov	w2, #0x1                   	// #1
   2cc14:	b	2cc1c <printf_parse@@Base+0x5924>
   2cc18:	mov	w2, #0x0                   	// #0
   2cc1c:	ldr	x0, [sp, #40]
   2cc20:	ldr	x1, [x0]
   2cc24:	ldr	x0, [sp, #40]
   2cc28:	ldr	x0, [x0, #16]
   2cc2c:	lsl	x0, x0, #4
   2cc30:	add	x1, x1, x0
   2cc34:	mov	w0, w2
   2cc38:	and	w0, w0, #0x1
   2cc3c:	and	w2, w0, #0xff
   2cc40:	ldrb	w0, [x1, #10]
   2cc44:	bfi	w0, w2, #4, #1
   2cc48:	strb	w0, [x1, #10]
   2cc4c:	ldr	x0, [sp, #40]
   2cc50:	ldr	x1, [x0, #24]
   2cc54:	ldr	x0, [sp, #40]
   2cc58:	ldr	x0, [x0, #16]
   2cc5c:	lsl	x0, x0, #3
   2cc60:	add	x0, x1, x0
   2cc64:	mov	x1, #0xffffffffffffffff    	// #-1
   2cc68:	str	x1, [x0]
   2cc6c:	ldr	x0, [sp, #40]
   2cc70:	ldr	x2, [x0, #40]
   2cc74:	ldr	x0, [sp, #40]
   2cc78:	ldr	x1, [x0, #16]
   2cc7c:	mov	x0, x1
   2cc80:	lsl	x0, x0, #1
   2cc84:	add	x0, x0, x1
   2cc88:	lsl	x0, x0, #3
   2cc8c:	add	x0, x2, x0
   2cc90:	mov	x2, #0x18                  	// #24
   2cc94:	mov	w1, #0x0                   	// #0
   2cc98:	bl	acb0 <memset@plt>
   2cc9c:	ldr	x0, [sp, #40]
   2cca0:	ldr	x2, [x0, #48]
   2cca4:	ldr	x0, [sp, #40]
   2cca8:	ldr	x1, [x0, #16]
   2ccac:	mov	x0, x1
   2ccb0:	lsl	x0, x0, #1
   2ccb4:	add	x0, x0, x1
   2ccb8:	lsl	x0, x0, #3
   2ccbc:	add	x0, x2, x0
   2ccc0:	mov	x2, #0x18                  	// #24
   2ccc4:	mov	w1, #0x0                   	// #0
   2ccc8:	bl	acb0 <memset@plt>
   2cccc:	ldr	x0, [sp, #40]
   2ccd0:	ldr	x0, [x0, #16]
   2ccd4:	add	x2, x0, #0x1
   2ccd8:	ldr	x1, [sp, #40]
   2ccdc:	str	x2, [x1, #16]
   2cce0:	ldp	x29, x30, [sp], #112
   2cce4:	ret
   2cce8:	sub	sp, sp, #0x20
   2ccec:	str	x0, [sp, #8]
   2ccf0:	str	w1, [sp, #4]
   2ccf4:	ldr	x0, [sp, #8]
   2ccf8:	ldr	x1, [x0, #8]
   2ccfc:	ldr	w0, [sp, #4]
   2cd00:	add	x0, x1, x0
   2cd04:	str	x0, [sp, #24]
   2cd08:	str	xzr, [sp, #16]
   2cd0c:	b	2cd44 <printf_parse@@Base+0x5a4c>
   2cd10:	ldr	x0, [sp, #8]
   2cd14:	ldr	x1, [x0, #16]
   2cd18:	ldr	x0, [sp, #16]
   2cd1c:	lsl	x0, x0, #3
   2cd20:	add	x0, x1, x0
   2cd24:	ldr	x0, [x0]
   2cd28:	mov	x1, x0
   2cd2c:	ldr	x0, [sp, #24]
   2cd30:	add	x0, x0, x1
   2cd34:	str	x0, [sp, #24]
   2cd38:	ldr	x0, [sp, #16]
   2cd3c:	add	x0, x0, #0x1
   2cd40:	str	x0, [sp, #16]
   2cd44:	ldr	x0, [sp, #8]
   2cd48:	ldr	x0, [x0, #8]
   2cd4c:	ldr	x1, [sp, #16]
   2cd50:	cmp	x1, x0
   2cd54:	b.lt	2cd10 <printf_parse@@Base+0x5a18>  // b.tstop
   2cd58:	ldr	x0, [sp, #24]
   2cd5c:	add	sp, sp, #0x20
   2cd60:	ret
   2cd64:	stp	x29, x30, [sp, #-96]!
   2cd68:	mov	x29, sp
   2cd6c:	str	x0, [sp, #40]
   2cd70:	str	x1, [sp, #32]
   2cd74:	str	x2, [sp, #24]
   2cd78:	ldr	x0, [sp, #24]
   2cd7c:	ldr	x0, [x0, #8]
   2cd80:	cmp	x0, #0x0
   2cd84:	cset	w0, eq  // eq = none
   2cd88:	and	w0, w0, #0xff
   2cd8c:	and	x0, x0, #0xff
   2cd90:	cmp	x0, #0x0
   2cd94:	b.eq	2cda8 <printf_parse@@Base+0x5ab0>  // b.none
   2cd98:	ldr	x0, [sp, #40]
   2cd9c:	str	wzr, [x0]
   2cda0:	mov	x0, #0x0                   	// #0
   2cda4:	b	2cea8 <printf_parse@@Base+0x5bb0>
   2cda8:	mov	w1, #0x0                   	// #0
   2cdac:	ldr	x0, [sp, #24]
   2cdb0:	bl	2cce8 <printf_parse@@Base+0x59f0>
   2cdb4:	str	x0, [sp, #80]
   2cdb8:	ldr	x0, [sp, #32]
   2cdbc:	ldr	x2, [x0, #64]
   2cdc0:	ldr	x0, [sp, #32]
   2cdc4:	ldr	x1, [x0, #136]
   2cdc8:	ldr	x0, [sp, #80]
   2cdcc:	and	x1, x1, x0
   2cdd0:	mov	x0, x1
   2cdd4:	lsl	x0, x0, #1
   2cdd8:	add	x0, x0, x1
   2cddc:	lsl	x0, x0, #3
   2cde0:	add	x0, x2, x0
   2cde4:	str	x0, [sp, #72]
   2cde8:	str	xzr, [sp, #88]
   2cdec:	b	2ce54 <printf_parse@@Base+0x5b5c>
   2cdf0:	ldr	x0, [sp, #72]
   2cdf4:	ldr	x1, [x0, #16]
   2cdf8:	ldr	x0, [sp, #88]
   2cdfc:	lsl	x0, x0, #3
   2ce00:	add	x0, x1, x0
   2ce04:	ldr	x0, [x0]
   2ce08:	str	x0, [sp, #56]
   2ce0c:	ldr	x0, [sp, #56]
   2ce10:	ldr	x0, [x0]
   2ce14:	ldr	x1, [sp, #80]
   2ce18:	cmp	x1, x0
   2ce1c:	b.ne	2ce44 <printf_parse@@Base+0x5b4c>  // b.any
   2ce20:	ldr	x0, [sp, #56]
   2ce24:	add	x0, x0, #0x8
   2ce28:	ldr	x1, [sp, #24]
   2ce2c:	bl	2c6ec <printf_parse@@Base+0x53f4>
   2ce30:	and	w0, w0, #0xff
   2ce34:	cmp	w0, #0x0
   2ce38:	b.eq	2ce48 <printf_parse@@Base+0x5b50>  // b.none
   2ce3c:	ldr	x0, [sp, #56]
   2ce40:	b	2cea8 <printf_parse@@Base+0x5bb0>
   2ce44:	nop
   2ce48:	ldr	x0, [sp, #88]
   2ce4c:	add	x0, x0, #0x1
   2ce50:	str	x0, [sp, #88]
   2ce54:	ldr	x0, [sp, #72]
   2ce58:	ldr	x0, [x0]
   2ce5c:	ldr	x1, [sp, #88]
   2ce60:	cmp	x1, x0
   2ce64:	b.lt	2cdf0 <printf_parse@@Base+0x5af8>  // b.tstop
   2ce68:	ldr	x2, [sp, #80]
   2ce6c:	ldr	x1, [sp, #24]
   2ce70:	ldr	x0, [sp, #32]
   2ce74:	bl	2d298 <printf_parse@@Base+0x5fa0>
   2ce78:	str	x0, [sp, #64]
   2ce7c:	ldr	x0, [sp, #64]
   2ce80:	cmp	x0, #0x0
   2ce84:	cset	w0, eq  // eq = none
   2ce88:	and	w0, w0, #0xff
   2ce8c:	and	x0, x0, #0xff
   2ce90:	cmp	x0, #0x0
   2ce94:	b.eq	2cea4 <printf_parse@@Base+0x5bac>  // b.none
   2ce98:	ldr	x0, [sp, #40]
   2ce9c:	mov	w1, #0xc                   	// #12
   2cea0:	str	w1, [x0]
   2cea4:	ldr	x0, [sp, #64]
   2cea8:	ldp	x29, x30, [sp], #96
   2ceac:	ret
   2ceb0:	stp	x29, x30, [sp, #-96]!
   2ceb4:	mov	x29, sp
   2ceb8:	str	x0, [sp, #40]
   2cebc:	str	x1, [sp, #32]
   2cec0:	str	x2, [sp, #24]
   2cec4:	str	w3, [sp, #20]
   2cec8:	ldr	x0, [sp, #24]
   2cecc:	ldr	x0, [x0, #8]
   2ced0:	cmp	x0, #0x0
   2ced4:	b.ne	2cee8 <printf_parse@@Base+0x5bf0>  // b.any
   2ced8:	ldr	x0, [sp, #40]
   2cedc:	str	wzr, [x0]
   2cee0:	mov	x0, #0x0                   	// #0
   2cee4:	b	2d008 <printf_parse@@Base+0x5d10>
   2cee8:	ldr	w1, [sp, #20]
   2ceec:	ldr	x0, [sp, #24]
   2cef0:	bl	2cce8 <printf_parse@@Base+0x59f0>
   2cef4:	str	x0, [sp, #80]
   2cef8:	ldr	x0, [sp, #32]
   2cefc:	ldr	x2, [x0, #64]
   2cf00:	ldr	x0, [sp, #32]
   2cf04:	ldr	x1, [x0, #136]
   2cf08:	ldr	x0, [sp, #80]
   2cf0c:	and	x1, x1, x0
   2cf10:	mov	x0, x1
   2cf14:	lsl	x0, x0, #1
   2cf18:	add	x0, x0, x1
   2cf1c:	lsl	x0, x0, #3
   2cf20:	add	x0, x2, x0
   2cf24:	str	x0, [sp, #72]
   2cf28:	str	xzr, [sp, #88]
   2cf2c:	b	2cfb0 <printf_parse@@Base+0x5cb8>
   2cf30:	ldr	x0, [sp, #72]
   2cf34:	ldr	x1, [x0, #16]
   2cf38:	ldr	x0, [sp, #88]
   2cf3c:	lsl	x0, x0, #3
   2cf40:	add	x0, x1, x0
   2cf44:	ldr	x0, [x0]
   2cf48:	str	x0, [sp, #56]
   2cf4c:	ldr	x0, [sp, #56]
   2cf50:	ldr	x0, [x0]
   2cf54:	ldr	x1, [sp, #80]
   2cf58:	cmp	x1, x0
   2cf5c:	b.ne	2cfa4 <printf_parse@@Base+0x5cac>  // b.any
   2cf60:	ldr	x0, [sp, #56]
   2cf64:	ldrb	w0, [x0, #104]
   2cf68:	ubfx	x0, x0, #0, #4
   2cf6c:	and	w0, w0, #0xff
   2cf70:	mov	w1, w0
   2cf74:	ldr	w0, [sp, #20]
   2cf78:	cmp	w0, w1
   2cf7c:	b.ne	2cfa4 <printf_parse@@Base+0x5cac>  // b.any
   2cf80:	ldr	x0, [sp, #56]
   2cf84:	ldr	x0, [x0, #80]
   2cf88:	ldr	x1, [sp, #24]
   2cf8c:	bl	2c6ec <printf_parse@@Base+0x53f4>
   2cf90:	and	w0, w0, #0xff
   2cf94:	cmp	w0, #0x0
   2cf98:	b.eq	2cfa4 <printf_parse@@Base+0x5cac>  // b.none
   2cf9c:	ldr	x0, [sp, #56]
   2cfa0:	b	2d008 <printf_parse@@Base+0x5d10>
   2cfa4:	ldr	x0, [sp, #88]
   2cfa8:	add	x0, x0, #0x1
   2cfac:	str	x0, [sp, #88]
   2cfb0:	ldr	x0, [sp, #72]
   2cfb4:	ldr	x0, [x0]
   2cfb8:	ldr	x1, [sp, #88]
   2cfbc:	cmp	x1, x0
   2cfc0:	b.lt	2cf30 <printf_parse@@Base+0x5c38>  // b.tstop
   2cfc4:	ldr	x3, [sp, #80]
   2cfc8:	ldr	w2, [sp, #20]
   2cfcc:	ldr	x1, [sp, #24]
   2cfd0:	ldr	x0, [sp, #32]
   2cfd4:	bl	2d4a8 <printf_parse@@Base+0x61b0>
   2cfd8:	str	x0, [sp, #64]
   2cfdc:	ldr	x0, [sp, #64]
   2cfe0:	cmp	x0, #0x0
   2cfe4:	cset	w0, eq  // eq = none
   2cfe8:	and	w0, w0, #0xff
   2cfec:	and	x0, x0, #0xff
   2cff0:	cmp	x0, #0x0
   2cff4:	b.eq	2d004 <printf_parse@@Base+0x5d0c>  // b.none
   2cff8:	ldr	x0, [sp, #40]
   2cffc:	mov	w1, #0xc                   	// #12
   2d000:	str	w1, [x0]
   2d004:	ldr	x0, [sp, #64]
   2d008:	ldp	x29, x30, [sp], #96
   2d00c:	ret
   2d010:	stp	x29, x30, [sp, #-96]!
   2d014:	mov	x29, sp
   2d018:	str	x0, [sp, #40]
   2d01c:	str	x1, [sp, #32]
   2d020:	str	x2, [sp, #24]
   2d024:	ldr	x0, [sp, #32]
   2d028:	ldr	x1, [sp, #24]
   2d02c:	str	x1, [x0]
   2d030:	ldr	x0, [sp, #32]
   2d034:	add	x2, x0, #0x20
   2d038:	ldr	x0, [sp, #32]
   2d03c:	ldr	x0, [x0, #16]
   2d040:	mov	x1, x0
   2d044:	mov	x0, x2
   2d048:	bl	2b4b0 <printf_parse@@Base+0x41b8>
   2d04c:	str	w0, [sp, #84]
   2d050:	ldr	w0, [sp, #84]
   2d054:	cmp	w0, #0x0
   2d058:	cset	w0, ne  // ne = any
   2d05c:	and	w0, w0, #0xff
   2d060:	and	x0, x0, #0xff
   2d064:	cmp	x0, #0x0
   2d068:	b.eq	2d074 <printf_parse@@Base+0x5d7c>  // b.none
   2d06c:	mov	w0, #0xc                   	// #12
   2d070:	b	2d200 <printf_parse@@Base+0x5f08>
   2d074:	str	xzr, [sp, #88]
   2d078:	b	2d0f4 <printf_parse@@Base+0x5dfc>
   2d07c:	ldr	x0, [sp, #32]
   2d080:	ldr	x1, [x0, #24]
   2d084:	ldr	x0, [sp, #88]
   2d088:	lsl	x0, x0, #3
   2d08c:	add	x0, x1, x0
   2d090:	ldr	x0, [x0]
   2d094:	str	x0, [sp, #48]
   2d098:	ldr	x0, [sp, #40]
   2d09c:	ldr	x1, [x0]
   2d0a0:	ldr	x0, [sp, #48]
   2d0a4:	lsl	x0, x0, #4
   2d0a8:	add	x0, x1, x0
   2d0ac:	ldrb	w0, [x0, #8]
   2d0b0:	and	w0, w0, #0x8
   2d0b4:	cmp	w0, #0x0
   2d0b8:	b.ne	2d0e8 <printf_parse@@Base+0x5df0>  // b.any
   2d0bc:	ldr	x0, [sp, #32]
   2d0c0:	add	x0, x0, #0x20
   2d0c4:	ldr	x1, [sp, #48]
   2d0c8:	bl	2c620 <printf_parse@@Base+0x5328>
   2d0cc:	and	w0, w0, #0xff
   2d0d0:	eor	w0, w0, #0x1
   2d0d4:	and	w0, w0, #0xff
   2d0d8:	cmp	w0, #0x0
   2d0dc:	b.eq	2d0e8 <printf_parse@@Base+0x5df0>  // b.none
   2d0e0:	mov	w0, #0xc                   	// #12
   2d0e4:	b	2d200 <printf_parse@@Base+0x5f08>
   2d0e8:	ldr	x0, [sp, #88]
   2d0ec:	add	x0, x0, #0x1
   2d0f0:	str	x0, [sp, #88]
   2d0f4:	ldr	x0, [sp, #32]
   2d0f8:	ldr	x0, [x0, #16]
   2d0fc:	ldr	x1, [sp, #88]
   2d100:	cmp	x1, x0
   2d104:	b.lt	2d07c <printf_parse@@Base+0x5d84>  // b.tstop
   2d108:	ldr	x0, [sp, #40]
   2d10c:	ldr	x2, [x0, #64]
   2d110:	ldr	x0, [sp, #40]
   2d114:	ldr	x1, [x0, #136]
   2d118:	ldr	x0, [sp, #24]
   2d11c:	and	x1, x1, x0
   2d120:	mov	x0, x1
   2d124:	lsl	x0, x0, #1
   2d128:	add	x0, x0, x1
   2d12c:	lsl	x0, x0, #3
   2d130:	add	x0, x2, x0
   2d134:	str	x0, [sp, #72]
   2d138:	ldr	x0, [sp, #72]
   2d13c:	ldr	x1, [x0, #8]
   2d140:	ldr	x0, [sp, #72]
   2d144:	ldr	x0, [x0]
   2d148:	cmp	x1, x0
   2d14c:	cset	w0, le
   2d150:	and	w0, w0, #0xff
   2d154:	and	x0, x0, #0xff
   2d158:	cmp	x0, #0x0
   2d15c:	b.eq	2d1d0 <printf_parse@@Base+0x5ed8>  // b.none
   2d160:	ldr	x0, [sp, #72]
   2d164:	ldr	x0, [x0]
   2d168:	add	x0, x0, #0x1
   2d16c:	lsl	x0, x0, #1
   2d170:	str	x0, [sp, #64]
   2d174:	ldr	x0, [sp, #72]
   2d178:	ldr	x2, [x0, #16]
   2d17c:	ldr	x0, [sp, #64]
   2d180:	lsl	x0, x0, #3
   2d184:	mov	x1, x0
   2d188:	mov	x0, x2
   2d18c:	bl	ae00 <realloc@plt>
   2d190:	str	x0, [sp, #56]
   2d194:	ldr	x0, [sp, #56]
   2d198:	cmp	x0, #0x0
   2d19c:	cset	w0, eq  // eq = none
   2d1a0:	and	w0, w0, #0xff
   2d1a4:	and	x0, x0, #0xff
   2d1a8:	cmp	x0, #0x0
   2d1ac:	b.eq	2d1b8 <printf_parse@@Base+0x5ec0>  // b.none
   2d1b0:	mov	w0, #0xc                   	// #12
   2d1b4:	b	2d200 <printf_parse@@Base+0x5f08>
   2d1b8:	ldr	x0, [sp, #72]
   2d1bc:	ldr	x1, [sp, #56]
   2d1c0:	str	x1, [x0, #16]
   2d1c4:	ldr	x0, [sp, #72]
   2d1c8:	ldr	x1, [sp, #64]
   2d1cc:	str	x1, [x0, #8]
   2d1d0:	ldr	x0, [sp, #72]
   2d1d4:	ldr	x1, [x0, #16]
   2d1d8:	ldr	x0, [sp, #72]
   2d1dc:	ldr	x0, [x0]
   2d1e0:	add	x3, x0, #0x1
   2d1e4:	ldr	x2, [sp, #72]
   2d1e8:	str	x3, [x2]
   2d1ec:	lsl	x0, x0, #3
   2d1f0:	add	x0, x1, x0
   2d1f4:	ldr	x1, [sp, #32]
   2d1f8:	str	x1, [x0]
   2d1fc:	mov	w0, #0x0                   	// #0
   2d200:	ldp	x29, x30, [sp], #96
   2d204:	ret
   2d208:	stp	x29, x30, [sp, #-32]!
   2d20c:	mov	x29, sp
   2d210:	str	x0, [sp, #24]
   2d214:	ldr	x0, [sp, #24]
   2d218:	ldr	x0, [x0, #48]
   2d21c:	bl	b130 <free@plt>
   2d220:	ldr	x0, [sp, #24]
   2d224:	ldr	x0, [x0, #72]
   2d228:	bl	b130 <free@plt>
   2d22c:	ldr	x0, [sp, #24]
   2d230:	ldr	x1, [x0, #80]
   2d234:	ldr	x0, [sp, #24]
   2d238:	add	x0, x0, #0x8
   2d23c:	cmp	x1, x0
   2d240:	b.eq	2d260 <printf_parse@@Base+0x5f68>  // b.none
   2d244:	ldr	x0, [sp, #24]
   2d248:	ldr	x0, [x0, #80]
   2d24c:	ldr	x0, [x0, #16]
   2d250:	bl	b130 <free@plt>
   2d254:	ldr	x0, [sp, #24]
   2d258:	ldr	x0, [x0, #80]
   2d25c:	bl	b130 <free@plt>
   2d260:	ldr	x0, [sp, #24]
   2d264:	ldr	x0, [x0, #24]
   2d268:	bl	b130 <free@plt>
   2d26c:	ldr	x0, [sp, #24]
   2d270:	ldr	x0, [x0, #96]
   2d274:	bl	b130 <free@plt>
   2d278:	ldr	x0, [sp, #24]
   2d27c:	ldr	x0, [x0, #88]
   2d280:	bl	b130 <free@plt>
   2d284:	ldr	x0, [sp, #24]
   2d288:	bl	b130 <free@plt>
   2d28c:	nop
   2d290:	ldp	x29, x30, [sp], #32
   2d294:	ret
   2d298:	stp	x29, x30, [sp, #-96]!
   2d29c:	mov	x29, sp
   2d2a0:	str	x0, [sp, #40]
   2d2a4:	str	x1, [sp, #32]
   2d2a8:	str	x2, [sp, #24]
   2d2ac:	mov	x1, #0x1                   	// #1
   2d2b0:	mov	x0, #0x70                  	// #112
   2d2b4:	bl	ad80 <calloc@plt>
   2d2b8:	str	x0, [sp, #80]
   2d2bc:	ldr	x0, [sp, #80]
   2d2c0:	cmp	x0, #0x0
   2d2c4:	cset	w0, eq  // eq = none
   2d2c8:	and	w0, w0, #0xff
   2d2cc:	and	x0, x0, #0xff
   2d2d0:	cmp	x0, #0x0
   2d2d4:	b.eq	2d2e0 <printf_parse@@Base+0x5fe8>  // b.none
   2d2d8:	mov	x0, #0x0                   	// #0
   2d2dc:	b	2d4a0 <printf_parse@@Base+0x61a8>
   2d2e0:	ldr	x0, [sp, #80]
   2d2e4:	add	x0, x0, #0x8
   2d2e8:	ldr	x1, [sp, #32]
   2d2ec:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   2d2f0:	str	w0, [sp, #76]
   2d2f4:	ldr	w0, [sp, #76]
   2d2f8:	cmp	w0, #0x0
   2d2fc:	cset	w0, ne  // ne = any
   2d300:	and	w0, w0, #0xff
   2d304:	and	x0, x0, #0xff
   2d308:	cmp	x0, #0x0
   2d30c:	b.eq	2d320 <printf_parse@@Base+0x6028>  // b.none
   2d310:	ldr	x0, [sp, #80]
   2d314:	bl	b130 <free@plt>
   2d318:	mov	x0, #0x0                   	// #0
   2d31c:	b	2d4a0 <printf_parse@@Base+0x61a8>
   2d320:	ldr	x0, [sp, #80]
   2d324:	add	x1, x0, #0x8
   2d328:	ldr	x0, [sp, #80]
   2d32c:	str	x1, [x0, #80]
   2d330:	str	xzr, [sp, #88]
   2d334:	b	2d44c <printf_parse@@Base+0x6154>
   2d338:	ldr	x0, [sp, #40]
   2d33c:	ldr	x1, [x0]
   2d340:	ldr	x0, [sp, #32]
   2d344:	ldr	x2, [x0, #16]
   2d348:	ldr	x0, [sp, #88]
   2d34c:	lsl	x0, x0, #3
   2d350:	add	x0, x2, x0
   2d354:	ldr	x0, [x0]
   2d358:	lsl	x0, x0, #4
   2d35c:	add	x0, x1, x0
   2d360:	str	x0, [sp, #64]
   2d364:	ldr	x0, [sp, #64]
   2d368:	ldrb	w0, [x0, #8]
   2d36c:	str	w0, [sp, #60]
   2d370:	ldr	w0, [sp, #60]
   2d374:	cmp	w0, #0x1
   2d378:	b.ne	2d390 <printf_parse@@Base+0x6098>  // b.any
   2d37c:	ldr	x0, [sp, #64]
   2d380:	ldr	w0, [x0, #8]
   2d384:	and	w0, w0, #0x3ff00
   2d388:	cmp	w0, #0x0
   2d38c:	b.eq	2d43c <printf_parse@@Base+0x6144>  // b.none
   2d390:	ldr	x0, [sp, #80]
   2d394:	ldrb	w0, [x0, #104]
   2d398:	ubfx	x0, x0, #5, #1
   2d39c:	and	w1, w0, #0xff
   2d3a0:	ldr	x0, [sp, #64]
   2d3a4:	ldrb	w0, [x0, #10]
   2d3a8:	ubfx	x0, x0, #4, #1
   2d3ac:	and	w0, w0, #0xff
   2d3b0:	orr	w0, w1, w0
   2d3b4:	and	w2, w0, #0xff
   2d3b8:	ldr	x1, [sp, #80]
   2d3bc:	ldrb	w0, [x1, #104]
   2d3c0:	bfi	w0, w2, #5, #1
   2d3c4:	strb	w0, [x1, #104]
   2d3c8:	ldr	w0, [sp, #60]
   2d3cc:	cmp	w0, #0x2
   2d3d0:	b.ne	2d3e8 <printf_parse@@Base+0x60f0>  // b.any
   2d3d4:	ldr	x0, [sp, #80]
   2d3d8:	ldrb	w1, [x0, #104]
   2d3dc:	orr	w1, w1, #0x10
   2d3e0:	strb	w1, [x0, #104]
   2d3e4:	b	2d440 <printf_parse@@Base+0x6148>
   2d3e8:	ldr	w0, [sp, #60]
   2d3ec:	cmp	w0, #0x4
   2d3f0:	b.ne	2d408 <printf_parse@@Base+0x6110>  // b.any
   2d3f4:	ldr	x0, [sp, #80]
   2d3f8:	ldrb	w1, [x0, #104]
   2d3fc:	orr	w1, w1, #0x40
   2d400:	strb	w1, [x0, #104]
   2d404:	b	2d440 <printf_parse@@Base+0x6148>
   2d408:	ldr	w0, [sp, #60]
   2d40c:	cmp	w0, #0xc
   2d410:	b.eq	2d428 <printf_parse@@Base+0x6130>  // b.none
   2d414:	ldr	x0, [sp, #64]
   2d418:	ldr	w0, [x0, #8]
   2d41c:	and	w0, w0, #0x3ff00
   2d420:	cmp	w0, #0x0
   2d424:	b.eq	2d440 <printf_parse@@Base+0x6148>  // b.none
   2d428:	ldr	x0, [sp, #80]
   2d42c:	ldrb	w1, [x0, #104]
   2d430:	orr	w1, w1, #0xffffff80
   2d434:	strb	w1, [x0, #104]
   2d438:	b	2d440 <printf_parse@@Base+0x6148>
   2d43c:	nop
   2d440:	ldr	x0, [sp, #88]
   2d444:	add	x0, x0, #0x1
   2d448:	str	x0, [sp, #88]
   2d44c:	ldr	x0, [sp, #32]
   2d450:	ldr	x0, [x0, #8]
   2d454:	ldr	x1, [sp, #88]
   2d458:	cmp	x1, x0
   2d45c:	b.lt	2d338 <printf_parse@@Base+0x6040>  // b.tstop
   2d460:	ldr	x2, [sp, #24]
   2d464:	ldr	x1, [sp, #80]
   2d468:	ldr	x0, [sp, #40]
   2d46c:	bl	2d010 <printf_parse@@Base+0x5d18>
   2d470:	str	w0, [sp, #76]
   2d474:	ldr	w0, [sp, #76]
   2d478:	cmp	w0, #0x0
   2d47c:	cset	w0, ne  // ne = any
   2d480:	and	w0, w0, #0xff
   2d484:	and	x0, x0, #0xff
   2d488:	cmp	x0, #0x0
   2d48c:	b.eq	2d49c <printf_parse@@Base+0x61a4>  // b.none
   2d490:	ldr	x0, [sp, #80]
   2d494:	bl	2d208 <printf_parse@@Base+0x5f10>
   2d498:	str	xzr, [sp, #80]
   2d49c:	ldr	x0, [sp, #80]
   2d4a0:	ldp	x29, x30, [sp], #96
   2d4a4:	ret
   2d4a8:	stp	x29, x30, [sp, #-112]!
   2d4ac:	mov	x29, sp
   2d4b0:	str	x0, [sp, #40]
   2d4b4:	str	x1, [sp, #32]
   2d4b8:	str	w2, [sp, #28]
   2d4bc:	str	x3, [sp, #16]
   2d4c0:	str	xzr, [sp, #96]
   2d4c4:	mov	x1, #0x1                   	// #1
   2d4c8:	mov	x0, #0x70                  	// #112
   2d4cc:	bl	ad80 <calloc@plt>
   2d4d0:	str	x0, [sp, #88]
   2d4d4:	ldr	x0, [sp, #88]
   2d4d8:	cmp	x0, #0x0
   2d4dc:	cset	w0, eq  // eq = none
   2d4e0:	and	w0, w0, #0xff
   2d4e4:	and	x0, x0, #0xff
   2d4e8:	cmp	x0, #0x0
   2d4ec:	b.eq	2d4f8 <printf_parse@@Base+0x6200>  // b.none
   2d4f0:	mov	x0, #0x0                   	// #0
   2d4f4:	b	2d7fc <printf_parse@@Base+0x6504>
   2d4f8:	ldr	x0, [sp, #88]
   2d4fc:	add	x0, x0, #0x8
   2d500:	ldr	x1, [sp, #32]
   2d504:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   2d508:	str	w0, [sp, #84]
   2d50c:	ldr	w0, [sp, #84]
   2d510:	cmp	w0, #0x0
   2d514:	cset	w0, ne  // ne = any
   2d518:	and	w0, w0, #0xff
   2d51c:	and	x0, x0, #0xff
   2d520:	cmp	x0, #0x0
   2d524:	b.eq	2d538 <printf_parse@@Base+0x6240>  // b.none
   2d528:	ldr	x0, [sp, #88]
   2d52c:	bl	b130 <free@plt>
   2d530:	mov	x0, #0x0                   	// #0
   2d534:	b	2d7fc <printf_parse@@Base+0x6504>
   2d538:	ldr	w0, [sp, #28]
   2d53c:	and	w0, w0, #0xf
   2d540:	and	w2, w0, #0xff
   2d544:	ldr	x1, [sp, #88]
   2d548:	ldrb	w0, [x1, #104]
   2d54c:	bfxil	w0, w2, #0, #4
   2d550:	strb	w0, [x1, #104]
   2d554:	ldr	x0, [sp, #88]
   2d558:	add	x1, x0, #0x8
   2d55c:	ldr	x0, [sp, #88]
   2d560:	str	x1, [x0, #80]
   2d564:	str	xzr, [sp, #104]
   2d568:	b	2d7a8 <printf_parse@@Base+0x64b0>
   2d56c:	ldr	x0, [sp, #40]
   2d570:	ldr	x1, [x0]
   2d574:	ldr	x0, [sp, #32]
   2d578:	ldr	x2, [x0, #16]
   2d57c:	ldr	x0, [sp, #104]
   2d580:	lsl	x0, x0, #3
   2d584:	add	x0, x2, x0
   2d588:	ldr	x0, [x0]
   2d58c:	lsl	x0, x0, #4
   2d590:	add	x0, x1, x0
   2d594:	str	x0, [sp, #72]
   2d598:	ldr	x0, [sp, #72]
   2d59c:	ldrb	w0, [x0, #8]
   2d5a0:	str	w0, [sp, #68]
   2d5a4:	ldr	x0, [sp, #72]
   2d5a8:	ldr	w0, [x0, #8]
   2d5ac:	ubfx	x0, x0, #8, #10
   2d5b0:	and	w0, w0, #0xffff
   2d5b4:	str	w0, [sp, #64]
   2d5b8:	ldr	w0, [sp, #68]
   2d5bc:	cmp	w0, #0x1
   2d5c0:	b.ne	2d5d0 <printf_parse@@Base+0x62d8>  // b.any
   2d5c4:	ldr	w0, [sp, #64]
   2d5c8:	cmp	w0, #0x0
   2d5cc:	b.eq	2d798 <printf_parse@@Base+0x64a0>  // b.none
   2d5d0:	ldr	x0, [sp, #88]
   2d5d4:	ldrb	w0, [x0, #104]
   2d5d8:	ubfx	x0, x0, #5, #1
   2d5dc:	and	w1, w0, #0xff
   2d5e0:	ldr	x0, [sp, #72]
   2d5e4:	ldrb	w0, [x0, #10]
   2d5e8:	ubfx	x0, x0, #4, #1
   2d5ec:	and	w0, w0, #0xff
   2d5f0:	orr	w0, w1, w0
   2d5f4:	and	w2, w0, #0xff
   2d5f8:	ldr	x1, [sp, #88]
   2d5fc:	ldrb	w0, [x1, #104]
   2d600:	bfi	w0, w2, #5, #1
   2d604:	strb	w0, [x1, #104]
   2d608:	ldr	w0, [sp, #68]
   2d60c:	cmp	w0, #0x2
   2d610:	b.ne	2d628 <printf_parse@@Base+0x6330>  // b.any
   2d614:	ldr	x0, [sp, #88]
   2d618:	ldrb	w1, [x0, #104]
   2d61c:	orr	w1, w1, #0x10
   2d620:	strb	w1, [x0, #104]
   2d624:	b	2d644 <printf_parse@@Base+0x634c>
   2d628:	ldr	w0, [sp, #68]
   2d62c:	cmp	w0, #0x4
   2d630:	b.ne	2d644 <printf_parse@@Base+0x634c>  // b.any
   2d634:	ldr	x0, [sp, #88]
   2d638:	ldrb	w1, [x0, #104]
   2d63c:	orr	w1, w1, #0x40
   2d640:	strb	w1, [x0, #104]
   2d644:	ldr	w0, [sp, #64]
   2d648:	cmp	w0, #0x0
   2d64c:	b.eq	2d79c <printf_parse@@Base+0x64a4>  // b.none
   2d650:	ldr	x0, [sp, #88]
   2d654:	ldr	x1, [x0, #80]
   2d658:	ldr	x0, [sp, #88]
   2d65c:	add	x0, x0, #0x8
   2d660:	cmp	x1, x0
   2d664:	b.ne	2d6e8 <printf_parse@@Base+0x63f0>  // b.any
   2d668:	mov	x0, #0x18                  	// #24
   2d66c:	bl	ab40 <malloc@plt>
   2d670:	str	x0, [sp, #56]
   2d674:	ldr	x0, [sp, #56]
   2d678:	cmp	x0, #0x0
   2d67c:	cset	w0, eq  // eq = none
   2d680:	and	w0, w0, #0xff
   2d684:	and	x0, x0, #0xff
   2d688:	cmp	x0, #0x0
   2d68c:	b.eq	2d6a0 <printf_parse@@Base+0x63a8>  // b.none
   2d690:	ldr	x0, [sp, #88]
   2d694:	bl	2d208 <printf_parse@@Base+0x5f10>
   2d698:	mov	x0, #0x0                   	// #0
   2d69c:	b	2d7fc <printf_parse@@Base+0x6504>
   2d6a0:	ldr	x0, [sp, #88]
   2d6a4:	ldr	x1, [sp, #56]
   2d6a8:	str	x1, [x0, #80]
   2d6ac:	ldr	x0, [sp, #88]
   2d6b0:	ldr	x0, [x0, #80]
   2d6b4:	ldr	x1, [sp, #32]
   2d6b8:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   2d6bc:	cmp	w0, #0x0
   2d6c0:	b.eq	2d6d4 <printf_parse@@Base+0x63dc>  // b.none
   2d6c4:	ldr	x0, [sp, #88]
   2d6c8:	bl	2d208 <printf_parse@@Base+0x5f10>
   2d6cc:	mov	x0, #0x0                   	// #0
   2d6d0:	b	2d7fc <printf_parse@@Base+0x6504>
   2d6d4:	str	xzr, [sp, #96]
   2d6d8:	ldr	x0, [sp, #88]
   2d6dc:	ldrb	w1, [x0, #104]
   2d6e0:	orr	w1, w1, #0xffffff80
   2d6e4:	strb	w1, [x0, #104]
   2d6e8:	ldr	w0, [sp, #64]
   2d6ec:	and	w0, w0, #0x1
   2d6f0:	cmp	w0, #0x0
   2d6f4:	b.eq	2d708 <printf_parse@@Base+0x6410>  // b.none
   2d6f8:	ldr	w0, [sp, #28]
   2d6fc:	and	w0, w0, #0x1
   2d700:	cmp	w0, #0x0
   2d704:	b.eq	2d768 <printf_parse@@Base+0x6470>  // b.none
   2d708:	ldr	w0, [sp, #64]
   2d70c:	and	w0, w0, #0x2
   2d710:	cmp	w0, #0x0
   2d714:	b.eq	2d728 <printf_parse@@Base+0x6430>  // b.none
   2d718:	ldr	w0, [sp, #28]
   2d71c:	and	w0, w0, #0x1
   2d720:	cmp	w0, #0x0
   2d724:	b.ne	2d768 <printf_parse@@Base+0x6470>  // b.any
   2d728:	ldr	w0, [sp, #64]
   2d72c:	and	w0, w0, #0x10
   2d730:	cmp	w0, #0x0
   2d734:	b.eq	2d748 <printf_parse@@Base+0x6450>  // b.none
   2d738:	ldr	w0, [sp, #28]
   2d73c:	and	w0, w0, #0x2
   2d740:	cmp	w0, #0x0
   2d744:	b.eq	2d768 <printf_parse@@Base+0x6470>  // b.none
   2d748:	ldr	w0, [sp, #64]
   2d74c:	and	w0, w0, #0x40
   2d750:	cmp	w0, #0x0
   2d754:	b.eq	2d79c <printf_parse@@Base+0x64a4>  // b.none
   2d758:	ldr	w0, [sp, #28]
   2d75c:	and	w0, w0, #0x4
   2d760:	cmp	w0, #0x0
   2d764:	b.ne	2d79c <printf_parse@@Base+0x64a4>  // b.any
   2d768:	ldr	x0, [sp, #88]
   2d76c:	add	x2, x0, #0x8
   2d770:	ldr	x1, [sp, #104]
   2d774:	ldr	x0, [sp, #96]
   2d778:	sub	x0, x1, x0
   2d77c:	mov	x1, x0
   2d780:	mov	x0, x2
   2d784:	bl	2c87c <printf_parse@@Base+0x5584>
   2d788:	ldr	x0, [sp, #96]
   2d78c:	add	x0, x0, #0x1
   2d790:	str	x0, [sp, #96]
   2d794:	b	2d79c <printf_parse@@Base+0x64a4>
   2d798:	nop
   2d79c:	ldr	x0, [sp, #104]
   2d7a0:	add	x0, x0, #0x1
   2d7a4:	str	x0, [sp, #104]
   2d7a8:	ldr	x0, [sp, #32]
   2d7ac:	ldr	x0, [x0, #8]
   2d7b0:	ldr	x1, [sp, #104]
   2d7b4:	cmp	x1, x0
   2d7b8:	b.lt	2d56c <printf_parse@@Base+0x6274>  // b.tstop
   2d7bc:	ldr	x2, [sp, #16]
   2d7c0:	ldr	x1, [sp, #88]
   2d7c4:	ldr	x0, [sp, #40]
   2d7c8:	bl	2d010 <printf_parse@@Base+0x5d18>
   2d7cc:	str	w0, [sp, #84]
   2d7d0:	ldr	w0, [sp, #84]
   2d7d4:	cmp	w0, #0x0
   2d7d8:	cset	w0, ne  // ne = any
   2d7dc:	and	w0, w0, #0xff
   2d7e0:	and	x0, x0, #0xff
   2d7e4:	cmp	x0, #0x0
   2d7e8:	b.eq	2d7f8 <printf_parse@@Base+0x6500>  // b.none
   2d7ec:	ldr	x0, [sp, #88]
   2d7f0:	bl	2d208 <printf_parse@@Base+0x5f10>
   2d7f4:	str	xzr, [sp, #88]
   2d7f8:	ldr	x0, [sp, #88]
   2d7fc:	ldp	x29, x30, [sp], #112
   2d800:	ret

000000000002d804 <rpl_re_compile_pattern@@Base>:
   2d804:	stp	x29, x30, [sp, #-64]!
   2d808:	mov	x29, sp
   2d80c:	str	x0, [sp, #40]
   2d810:	str	x1, [sp, #32]
   2d814:	str	x2, [sp, #24]
   2d818:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2d81c:	ldr	x0, [x0, #3920]
   2d820:	ldr	x0, [x0]
   2d824:	and	x0, x0, #0x2000000
   2d828:	cmp	x0, #0x0
   2d82c:	cset	w0, ne  // ne = any
   2d830:	and	w2, w0, #0xff
   2d834:	ldr	x1, [sp, #24]
   2d838:	ldrb	w0, [x1, #56]
   2d83c:	bfi	w0, w2, #4, #1
   2d840:	strb	w0, [x1, #56]
   2d844:	ldr	x0, [sp, #24]
   2d848:	ldrb	w1, [x0, #56]
   2d84c:	orr	w1, w1, #0xffffff80
   2d850:	strb	w1, [x0, #56]
   2d854:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2d858:	ldr	x0, [x0, #3920]
   2d85c:	ldr	x0, [x0]
   2d860:	mov	x3, x0
   2d864:	ldr	x2, [sp, #32]
   2d868:	ldr	x1, [sp, #40]
   2d86c:	ldr	x0, [sp, #24]
   2d870:	bl	2e6a8 <rpl_regfree@@Base+0xb0>
   2d874:	str	w0, [sp, #60]
   2d878:	ldr	w0, [sp, #60]
   2d87c:	cmp	w0, #0x0
   2d880:	b.ne	2d88c <rpl_re_compile_pattern@@Base+0x88>  // b.any
   2d884:	mov	x0, #0x0                   	// #0
   2d888:	b	2d8ac <rpl_re_compile_pattern@@Base+0xa8>
   2d88c:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   2d890:	add	x0, x0, #0x430
   2d894:	ldrsw	x1, [sp, #60]
   2d898:	ldr	x1, [x0, x1, lsl #3]
   2d89c:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   2d8a0:	add	x0, x0, #0x2b0
   2d8a4:	add	x0, x1, x0
   2d8a8:	bl	b700 <gettext@plt>
   2d8ac:	ldp	x29, x30, [sp], #64
   2d8b0:	ret

000000000002d8b4 <rpl_re_set_syntax@@Base>:
   2d8b4:	sub	sp, sp, #0x20
   2d8b8:	str	x0, [sp, #8]
   2d8bc:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2d8c0:	ldr	x0, [x0, #3920]
   2d8c4:	ldr	x0, [x0]
   2d8c8:	str	x0, [sp, #24]
   2d8cc:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2d8d0:	ldr	x0, [x0, #3920]
   2d8d4:	ldr	x1, [sp, #8]
   2d8d8:	str	x1, [x0]
   2d8dc:	ldr	x0, [sp, #24]
   2d8e0:	add	sp, sp, #0x20
   2d8e4:	ret

000000000002d8e8 <rpl_re_compile_fastmap@@Base>:
   2d8e8:	stp	x29, x30, [sp, #-48]!
   2d8ec:	mov	x29, sp
   2d8f0:	str	x0, [sp, #24]
   2d8f4:	ldr	x0, [sp, #24]
   2d8f8:	ldr	x0, [x0]
   2d8fc:	str	x0, [sp, #40]
   2d900:	ldr	x0, [sp, #24]
   2d904:	ldr	x0, [x0, #32]
   2d908:	str	x0, [sp, #32]
   2d90c:	mov	x2, #0x100                 	// #256
   2d910:	mov	w1, #0x0                   	// #0
   2d914:	ldr	x0, [sp, #32]
   2d918:	bl	acb0 <memset@plt>
   2d91c:	ldr	x0, [sp, #40]
   2d920:	ldr	x0, [x0, #72]
   2d924:	ldr	x2, [sp, #32]
   2d928:	mov	x1, x0
   2d92c:	ldr	x0, [sp, #24]
   2d930:	bl	2d9e0 <rpl_re_compile_fastmap@@Base+0xf8>
   2d934:	ldr	x0, [sp, #40]
   2d938:	ldr	x1, [x0, #72]
   2d93c:	ldr	x0, [sp, #40]
   2d940:	ldr	x0, [x0, #80]
   2d944:	cmp	x1, x0
   2d948:	b.eq	2d964 <rpl_re_compile_fastmap@@Base+0x7c>  // b.none
   2d94c:	ldr	x0, [sp, #40]
   2d950:	ldr	x0, [x0, #80]
   2d954:	ldr	x2, [sp, #32]
   2d958:	mov	x1, x0
   2d95c:	ldr	x0, [sp, #24]
   2d960:	bl	2d9e0 <rpl_re_compile_fastmap@@Base+0xf8>
   2d964:	ldr	x0, [sp, #40]
   2d968:	ldr	x1, [x0, #72]
   2d96c:	ldr	x0, [sp, #40]
   2d970:	ldr	x0, [x0, #88]
   2d974:	cmp	x1, x0
   2d978:	b.eq	2d994 <rpl_re_compile_fastmap@@Base+0xac>  // b.none
   2d97c:	ldr	x0, [sp, #40]
   2d980:	ldr	x0, [x0, #88]
   2d984:	ldr	x2, [sp, #32]
   2d988:	mov	x1, x0
   2d98c:	ldr	x0, [sp, #24]
   2d990:	bl	2d9e0 <rpl_re_compile_fastmap@@Base+0xf8>
   2d994:	ldr	x0, [sp, #40]
   2d998:	ldr	x1, [x0, #72]
   2d99c:	ldr	x0, [sp, #40]
   2d9a0:	ldr	x0, [x0, #96]
   2d9a4:	cmp	x1, x0
   2d9a8:	b.eq	2d9c4 <rpl_re_compile_fastmap@@Base+0xdc>  // b.none
   2d9ac:	ldr	x0, [sp, #40]
   2d9b0:	ldr	x0, [x0, #96]
   2d9b4:	ldr	x2, [sp, #32]
   2d9b8:	mov	x1, x0
   2d9bc:	ldr	x0, [sp, #24]
   2d9c0:	bl	2d9e0 <rpl_re_compile_fastmap@@Base+0xf8>
   2d9c4:	ldr	x0, [sp, #24]
   2d9c8:	ldrb	w1, [x0, #56]
   2d9cc:	orr	w1, w1, #0x8
   2d9d0:	strb	w1, [x0, #56]
   2d9d4:	mov	w0, #0x0                   	// #0
   2d9d8:	ldp	x29, x30, [sp], #48
   2d9dc:	ret
   2d9e0:	sub	sp, sp, #0x220
   2d9e4:	stp	x29, x30, [sp]
   2d9e8:	mov	x29, sp
   2d9ec:	str	x0, [sp, #40]
   2d9f0:	str	x1, [sp, #32]
   2d9f4:	str	x2, [sp, #24]
   2d9f8:	ldr	x0, [sp, #40]
   2d9fc:	ldr	x0, [x0]
   2da00:	str	x0, [sp, #488]
   2da04:	ldr	x0, [sp, #488]
   2da08:	ldr	w0, [x0, #180]
   2da0c:	cmp	w0, #0x1
   2da10:	b.ne	2da30 <rpl_re_compile_fastmap@@Base+0x148>  // b.any
   2da14:	ldr	x0, [sp, #40]
   2da18:	ldr	x0, [x0, #24]
   2da1c:	and	x0, x0, #0x400000
   2da20:	cmp	x0, #0x0
   2da24:	b.eq	2da30 <rpl_re_compile_fastmap@@Base+0x148>  // b.none
   2da28:	mov	w0, #0x1                   	// #1
   2da2c:	b	2da34 <rpl_re_compile_fastmap@@Base+0x14c>
   2da30:	mov	w0, #0x0                   	// #0
   2da34:	strb	w0, [sp, #487]
   2da38:	ldrb	w0, [sp, #487]
   2da3c:	and	w0, w0, #0x1
   2da40:	strb	w0, [sp, #487]
   2da44:	str	xzr, [sp, #536]
   2da48:	b	2e0bc <rpl_re_compile_fastmap@@Base+0x7d4>
   2da4c:	ldr	x0, [sp, #32]
   2da50:	ldr	x1, [x0, #24]
   2da54:	ldr	x0, [sp, #536]
   2da58:	lsl	x0, x0, #3
   2da5c:	add	x0, x1, x0
   2da60:	ldr	x0, [x0]
   2da64:	str	x0, [sp, #528]
   2da68:	ldr	x0, [sp, #488]
   2da6c:	ldr	x1, [x0]
   2da70:	ldr	x0, [sp, #528]
   2da74:	lsl	x0, x0, #4
   2da78:	add	x0, x1, x0
   2da7c:	ldrb	w0, [x0, #8]
   2da80:	str	w0, [sp, #480]
   2da84:	ldr	w0, [sp, #480]
   2da88:	cmp	w0, #0x1
   2da8c:	b.ne	2dcb8 <rpl_re_compile_fastmap@@Base+0x3d0>  // b.any
   2da90:	ldr	x0, [sp, #488]
   2da94:	ldr	x1, [x0]
   2da98:	ldr	x0, [sp, #528]
   2da9c:	lsl	x0, x0, #4
   2daa0:	add	x0, x1, x0
   2daa4:	ldrb	w0, [x0]
   2daa8:	mov	w1, w0
   2daac:	ldr	x0, [sp, #24]
   2dab0:	str	x0, [sp, #456]
   2dab4:	ldrb	w0, [sp, #487]
   2dab8:	strb	w0, [sp, #455]
   2dabc:	str	w1, [sp, #448]
   2dac0:	ldrsw	x0, [sp, #448]
   2dac4:	ldr	x1, [sp, #456]
   2dac8:	add	x0, x1, x0
   2dacc:	mov	w1, #0x1                   	// #1
   2dad0:	strb	w1, [x0]
   2dad4:	ldrb	w0, [sp, #455]
   2dad8:	cmp	w0, #0x0
   2dadc:	b.eq	2dafc <rpl_re_compile_fastmap@@Base+0x214>  // b.none
   2dae0:	ldr	w0, [sp, #448]
   2dae4:	bl	b650 <tolower@plt>
   2dae8:	sxtw	x0, w0
   2daec:	ldr	x1, [sp, #456]
   2daf0:	add	x0, x1, x0
   2daf4:	mov	w1, #0x1                   	// #1
   2daf8:	strb	w1, [x0]
   2dafc:	nop
   2db00:	ldr	x0, [sp, #40]
   2db04:	ldr	x0, [x0, #24]
   2db08:	and	x0, x0, #0x400000
   2db0c:	cmp	x0, #0x0
   2db10:	b.eq	2e0b0 <rpl_re_compile_fastmap@@Base+0x7c8>  // b.none
   2db14:	ldr	x0, [sp, #488]
   2db18:	ldr	w0, [x0, #180]
   2db1c:	cmp	w0, #0x1
   2db20:	b.le	2e0b0 <rpl_re_compile_fastmap@@Base+0x7c8>
   2db24:	add	x0, sp, #0x160
   2db28:	str	x0, [sp, #520]
   2db2c:	ldr	x0, [sp, #488]
   2db30:	ldr	x1, [x0]
   2db34:	ldr	x0, [sp, #528]
   2db38:	lsl	x0, x0, #4
   2db3c:	add	x1, x1, x0
   2db40:	ldr	x0, [sp, #520]
   2db44:	add	x2, x0, #0x1
   2db48:	str	x2, [sp, #520]
   2db4c:	ldrb	w1, [x1]
   2db50:	strb	w1, [x0]
   2db54:	b	2db80 <rpl_re_compile_fastmap@@Base+0x298>
   2db58:	ldr	x0, [sp, #488]
   2db5c:	ldr	x1, [x0]
   2db60:	ldr	x0, [sp, #528]
   2db64:	lsl	x0, x0, #4
   2db68:	add	x1, x1, x0
   2db6c:	ldr	x0, [sp, #520]
   2db70:	add	x2, x0, #0x1
   2db74:	str	x2, [sp, #520]
   2db78:	ldrb	w1, [x1]
   2db7c:	strb	w1, [x0]
   2db80:	ldr	x0, [sp, #528]
   2db84:	add	x0, x0, #0x1
   2db88:	str	x0, [sp, #528]
   2db8c:	ldr	x1, [sp, #528]
   2db90:	ldr	x0, [sp, #488]
   2db94:	ldr	x0, [x0, #16]
   2db98:	cmp	x1, x0
   2db9c:	b.cs	2dbe8 <rpl_re_compile_fastmap@@Base+0x300>  // b.hs, b.nlast
   2dba0:	ldr	x0, [sp, #488]
   2dba4:	ldr	x1, [x0]
   2dba8:	ldr	x0, [sp, #528]
   2dbac:	lsl	x0, x0, #4
   2dbb0:	add	x0, x1, x0
   2dbb4:	ldrb	w0, [x0, #8]
   2dbb8:	cmp	w0, #0x1
   2dbbc:	b.ne	2dbe8 <rpl_re_compile_fastmap@@Base+0x300>  // b.any
   2dbc0:	ldr	x0, [sp, #488]
   2dbc4:	ldr	x1, [x0]
   2dbc8:	ldr	x0, [sp, #528]
   2dbcc:	lsl	x0, x0, #4
   2dbd0:	add	x0, x1, x0
   2dbd4:	ldrb	w0, [x0, #10]
   2dbd8:	and	w0, w0, #0x20
   2dbdc:	and	w0, w0, #0xff
   2dbe0:	cmp	w0, #0x0
   2dbe4:	b.ne	2db58 <rpl_re_compile_fastmap@@Base+0x270>  // b.any
   2dbe8:	add	x0, sp, #0x150
   2dbec:	mov	x2, #0x8                   	// #8
   2dbf0:	mov	w1, #0x0                   	// #0
   2dbf4:	bl	acb0 <memset@plt>
   2dbf8:	add	x0, sp, #0x160
   2dbfc:	ldr	x1, [sp, #520]
   2dc00:	sub	x0, x1, x0
   2dc04:	mov	x4, x0
   2dc08:	add	x2, sp, #0x150
   2dc0c:	add	x1, sp, #0x160
   2dc10:	add	x0, sp, #0x15c
   2dc14:	mov	x3, x2
   2dc18:	mov	x2, x4
   2dc1c:	bl	a8d0 <rpl_mbrtowc@plt>
   2dc20:	mov	x2, x0
   2dc24:	add	x0, sp, #0x160
   2dc28:	ldr	x1, [sp, #520]
   2dc2c:	sub	x0, x1, x0
   2dc30:	cmp	x2, x0
   2dc34:	b.ne	2e0b0 <rpl_re_compile_fastmap@@Base+0x7c8>  // b.any
   2dc38:	ldr	w0, [sp, #348]
   2dc3c:	bl	b720 <towlower@plt>
   2dc40:	mov	w3, w0
   2dc44:	add	x1, sp, #0x150
   2dc48:	add	x0, sp, #0x160
   2dc4c:	mov	x2, x1
   2dc50:	mov	w1, w3
   2dc54:	bl	b7b0 <wcrtomb@plt>
   2dc58:	cmn	x0, #0x1
   2dc5c:	b.eq	2e0b0 <rpl_re_compile_fastmap@@Base+0x7c8>  // b.none
   2dc60:	ldrb	w0, [sp, #352]
   2dc64:	mov	w1, w0
   2dc68:	ldr	x0, [sp, #24]
   2dc6c:	str	x0, [sp, #440]
   2dc70:	strb	wzr, [sp, #439]
   2dc74:	str	w1, [sp, #432]
   2dc78:	ldrsw	x0, [sp, #432]
   2dc7c:	ldr	x1, [sp, #440]
   2dc80:	add	x0, x1, x0
   2dc84:	mov	w1, #0x1                   	// #1
   2dc88:	strb	w1, [x0]
   2dc8c:	ldrb	w0, [sp, #439]
   2dc90:	cmp	w0, #0x0
   2dc94:	b.eq	2e0ac <rpl_re_compile_fastmap@@Base+0x7c4>  // b.none
   2dc98:	ldr	w0, [sp, #432]
   2dc9c:	bl	b650 <tolower@plt>
   2dca0:	sxtw	x0, w0
   2dca4:	ldr	x1, [sp, #440]
   2dca8:	add	x0, x1, x0
   2dcac:	mov	w1, #0x1                   	// #1
   2dcb0:	strb	w1, [x0]
   2dcb4:	b	2e0ac <rpl_re_compile_fastmap@@Base+0x7c4>
   2dcb8:	ldr	w0, [sp, #480]
   2dcbc:	cmp	w0, #0x3
   2dcc0:	b.ne	2ddb4 <rpl_re_compile_fastmap@@Base+0x4cc>  // b.any
   2dcc4:	str	wzr, [sp, #516]
   2dcc8:	str	wzr, [sp, #512]
   2dccc:	b	2dda4 <rpl_re_compile_fastmap@@Base+0x4bc>
   2dcd0:	ldr	x0, [sp, #488]
   2dcd4:	ldr	x1, [x0]
   2dcd8:	ldr	x0, [sp, #528]
   2dcdc:	lsl	x0, x0, #4
   2dce0:	add	x0, x1, x0
   2dce4:	ldr	x1, [x0]
   2dce8:	ldrsw	x0, [sp, #516]
   2dcec:	lsl	x0, x0, #3
   2dcf0:	add	x0, x1, x0
   2dcf4:	ldr	x0, [x0]
   2dcf8:	str	x0, [sp, #464]
   2dcfc:	str	wzr, [sp, #508]
   2dd00:	b	2dd8c <rpl_re_compile_fastmap@@Base+0x4a4>
   2dd04:	ldr	w0, [sp, #508]
   2dd08:	ldr	x1, [sp, #464]
   2dd0c:	lsr	x0, x1, x0
   2dd10:	and	x0, x0, #0x1
   2dd14:	cmp	x0, #0x0
   2dd18:	b.eq	2dd74 <rpl_re_compile_fastmap@@Base+0x48c>  // b.none
   2dd1c:	ldr	x0, [sp, #24]
   2dd20:	str	x0, [sp, #424]
   2dd24:	ldrb	w0, [sp, #487]
   2dd28:	strb	w0, [sp, #423]
   2dd2c:	ldr	w0, [sp, #512]
   2dd30:	str	w0, [sp, #416]
   2dd34:	ldrsw	x0, [sp, #416]
   2dd38:	ldr	x1, [sp, #424]
   2dd3c:	add	x0, x1, x0
   2dd40:	mov	w1, #0x1                   	// #1
   2dd44:	strb	w1, [x0]
   2dd48:	ldrb	w0, [sp, #423]
   2dd4c:	cmp	w0, #0x0
   2dd50:	b.eq	2dd70 <rpl_re_compile_fastmap@@Base+0x488>  // b.none
   2dd54:	ldr	w0, [sp, #416]
   2dd58:	bl	b650 <tolower@plt>
   2dd5c:	sxtw	x0, w0
   2dd60:	ldr	x1, [sp, #424]
   2dd64:	add	x0, x1, x0
   2dd68:	mov	w1, #0x1                   	// #1
   2dd6c:	strb	w1, [x0]
   2dd70:	nop
   2dd74:	ldr	w0, [sp, #508]
   2dd78:	add	w0, w0, #0x1
   2dd7c:	str	w0, [sp, #508]
   2dd80:	ldr	w0, [sp, #512]
   2dd84:	add	w0, w0, #0x1
   2dd88:	str	w0, [sp, #512]
   2dd8c:	ldr	w0, [sp, #508]
   2dd90:	cmp	w0, #0x3f
   2dd94:	b.le	2dd04 <rpl_re_compile_fastmap@@Base+0x41c>
   2dd98:	ldr	w0, [sp, #516]
   2dd9c:	add	w0, w0, #0x1
   2dda0:	str	w0, [sp, #516]
   2dda4:	ldr	w0, [sp, #516]
   2dda8:	cmp	w0, #0x3
   2ddac:	b.le	2dcd0 <rpl_re_compile_fastmap@@Base+0x3e8>
   2ddb0:	b	2e0b0 <rpl_re_compile_fastmap@@Base+0x7c8>
   2ddb4:	ldr	w0, [sp, #480]
   2ddb8:	cmp	w0, #0x6
   2ddbc:	b.ne	2e058 <rpl_re_compile_fastmap@@Base+0x770>  // b.any
   2ddc0:	ldr	x0, [sp, #488]
   2ddc4:	ldr	x1, [x0]
   2ddc8:	ldr	x0, [sp, #528]
   2ddcc:	lsl	x0, x0, #4
   2ddd0:	add	x0, x1, x0
   2ddd4:	ldr	x0, [x0]
   2ddd8:	str	x0, [sp, #472]
   2dddc:	ldr	x0, [sp, #488]
   2dde0:	ldr	w0, [x0, #180]
   2dde4:	cmp	w0, #0x1
   2dde8:	b.le	2ded4 <rpl_re_compile_fastmap@@Base+0x5ec>
   2ddec:	ldr	x0, [sp, #472]
   2ddf0:	ldr	x0, [x0, #72]
   2ddf4:	cmp	x0, #0x0
   2ddf8:	b.ne	2de24 <rpl_re_compile_fastmap@@Base+0x53c>  // b.any
   2ddfc:	ldr	x0, [sp, #472]
   2de00:	ldrb	w0, [x0, #32]
   2de04:	and	w0, w0, #0x1
   2de08:	and	w0, w0, #0xff
   2de0c:	cmp	w0, #0x0
   2de10:	b.ne	2de24 <rpl_re_compile_fastmap@@Base+0x53c>  // b.any
   2de14:	ldr	x0, [sp, #472]
   2de18:	ldr	x0, [x0, #64]
   2de1c:	cmp	x0, #0x0
   2de20:	b.eq	2ded4 <rpl_re_compile_fastmap@@Base+0x5ec>  // b.none
   2de24:	strb	wzr, [sp, #335]
   2de28:	add	x0, sp, #0x140
   2de2c:	mov	x2, #0x8                   	// #8
   2de30:	mov	w1, #0x0                   	// #0
   2de34:	bl	acb0 <memset@plt>
   2de38:	add	x1, sp, #0x140
   2de3c:	add	x0, sp, #0x14f
   2de40:	mov	x3, x1
   2de44:	mov	x2, #0x1                   	// #1
   2de48:	mov	x1, x0
   2de4c:	mov	x0, #0x0                   	// #0
   2de50:	bl	a8d0 <rpl_mbrtowc@plt>
   2de54:	cmn	x0, #0x2
   2de58:	b.ne	2deb4 <rpl_re_compile_fastmap@@Base+0x5cc>  // b.any
   2de5c:	ldrb	w0, [sp, #335]
   2de60:	mov	w1, w0
   2de64:	ldr	x0, [sp, #24]
   2de68:	str	x0, [sp, #408]
   2de6c:	strb	wzr, [sp, #407]
   2de70:	str	w1, [sp, #400]
   2de74:	ldrsw	x0, [sp, #400]
   2de78:	ldr	x1, [sp, #408]
   2de7c:	add	x0, x1, x0
   2de80:	mov	w1, #0x1                   	// #1
   2de84:	strb	w1, [x0]
   2de88:	ldrb	w0, [sp, #407]
   2de8c:	cmp	w0, #0x0
   2de90:	b.eq	2deb0 <rpl_re_compile_fastmap@@Base+0x5c8>  // b.none
   2de94:	ldr	w0, [sp, #400]
   2de98:	bl	b650 <tolower@plt>
   2de9c:	sxtw	x0, w0
   2dea0:	ldr	x1, [sp, #408]
   2dea4:	add	x0, x1, x0
   2dea8:	mov	w1, #0x1                   	// #1
   2deac:	strb	w1, [x0]
   2deb0:	nop
   2deb4:	ldrb	w0, [sp, #335]
   2deb8:	add	w0, w0, #0x1
   2debc:	and	w0, w0, #0xff
   2dec0:	strb	w0, [sp, #335]
   2dec4:	ldrb	w0, [sp, #335]
   2dec8:	cmp	w0, #0x0
   2decc:	b.ne	2de28 <rpl_re_compile_fastmap@@Base+0x540>  // b.any
   2ded0:	b	2e0b0 <rpl_re_compile_fastmap@@Base+0x7c8>
   2ded4:	str	xzr, [sp, #496]
   2ded8:	b	2e040 <rpl_re_compile_fastmap@@Base+0x758>
   2dedc:	add	x0, sp, #0x138
   2dee0:	mov	x2, #0x8                   	// #8
   2dee4:	mov	w1, #0x0                   	// #0
   2dee8:	bl	acb0 <memset@plt>
   2deec:	ldr	x0, [sp, #472]
   2def0:	ldr	x1, [x0]
   2def4:	ldr	x0, [sp, #496]
   2def8:	lsl	x0, x0, #2
   2defc:	add	x0, x1, x0
   2df00:	ldr	w1, [x0]
   2df04:	add	x2, sp, #0x138
   2df08:	add	x0, sp, #0x38
   2df0c:	bl	b7b0 <wcrtomb@plt>
   2df10:	cmn	x0, #0x1
   2df14:	b.eq	2df78 <rpl_re_compile_fastmap@@Base+0x690>  // b.none
   2df18:	add	x0, sp, #0x38
   2df1c:	ldrb	w0, [x0]
   2df20:	mov	w1, w0
   2df24:	ldr	x0, [sp, #24]
   2df28:	str	x0, [sp, #392]
   2df2c:	ldrb	w0, [sp, #487]
   2df30:	strb	w0, [sp, #391]
   2df34:	str	w1, [sp, #384]
   2df38:	ldrsw	x0, [sp, #384]
   2df3c:	ldr	x1, [sp, #392]
   2df40:	add	x0, x1, x0
   2df44:	mov	w1, #0x1                   	// #1
   2df48:	strb	w1, [x0]
   2df4c:	ldrb	w0, [sp, #391]
   2df50:	cmp	w0, #0x0
   2df54:	b.eq	2df74 <rpl_re_compile_fastmap@@Base+0x68c>  // b.none
   2df58:	ldr	w0, [sp, #384]
   2df5c:	bl	b650 <tolower@plt>
   2df60:	sxtw	x0, w0
   2df64:	ldr	x1, [sp, #392]
   2df68:	add	x0, x1, x0
   2df6c:	mov	w1, #0x1                   	// #1
   2df70:	strb	w1, [x0]
   2df74:	nop
   2df78:	ldr	x0, [sp, #40]
   2df7c:	ldr	x0, [x0, #24]
   2df80:	and	x0, x0, #0x400000
   2df84:	cmp	x0, #0x0
   2df88:	b.eq	2e034 <rpl_re_compile_fastmap@@Base+0x74c>  // b.none
   2df8c:	ldr	x0, [sp, #488]
   2df90:	ldr	w0, [x0, #180]
   2df94:	cmp	w0, #0x1
   2df98:	b.le	2e034 <rpl_re_compile_fastmap@@Base+0x74c>
   2df9c:	ldr	x0, [sp, #472]
   2dfa0:	ldr	x1, [x0]
   2dfa4:	ldr	x0, [sp, #496]
   2dfa8:	lsl	x0, x0, #2
   2dfac:	add	x0, x1, x0
   2dfb0:	ldr	w0, [x0]
   2dfb4:	bl	b720 <towlower@plt>
   2dfb8:	mov	w3, w0
   2dfbc:	add	x1, sp, #0x138
   2dfc0:	add	x0, sp, #0x38
   2dfc4:	mov	x2, x1
   2dfc8:	mov	w1, w3
   2dfcc:	bl	b7b0 <wcrtomb@plt>
   2dfd0:	cmn	x0, #0x1
   2dfd4:	b.eq	2e034 <rpl_re_compile_fastmap@@Base+0x74c>  // b.none
   2dfd8:	add	x0, sp, #0x38
   2dfdc:	ldrb	w0, [x0]
   2dfe0:	mov	w1, w0
   2dfe4:	ldr	x0, [sp, #24]
   2dfe8:	str	x0, [sp, #376]
   2dfec:	strb	wzr, [sp, #375]
   2dff0:	str	w1, [sp, #368]
   2dff4:	ldrsw	x0, [sp, #368]
   2dff8:	ldr	x1, [sp, #376]
   2dffc:	add	x0, x1, x0
   2e000:	mov	w1, #0x1                   	// #1
   2e004:	strb	w1, [x0]
   2e008:	ldrb	w0, [sp, #375]
   2e00c:	cmp	w0, #0x0
   2e010:	b.eq	2e030 <rpl_re_compile_fastmap@@Base+0x748>  // b.none
   2e014:	ldr	w0, [sp, #368]
   2e018:	bl	b650 <tolower@plt>
   2e01c:	sxtw	x0, w0
   2e020:	ldr	x1, [sp, #376]
   2e024:	add	x0, x1, x0
   2e028:	mov	w1, #0x1                   	// #1
   2e02c:	strb	w1, [x0]
   2e030:	nop
   2e034:	ldr	x0, [sp, #496]
   2e038:	add	x0, x0, #0x1
   2e03c:	str	x0, [sp, #496]
   2e040:	ldr	x0, [sp, #472]
   2e044:	ldr	x0, [x0, #40]
   2e048:	ldr	x1, [sp, #496]
   2e04c:	cmp	x1, x0
   2e050:	b.lt	2dedc <rpl_re_compile_fastmap@@Base+0x5f4>  // b.tstop
   2e054:	b	2e0b0 <rpl_re_compile_fastmap@@Base+0x7c8>
   2e058:	ldr	w0, [sp, #480]
   2e05c:	cmp	w0, #0x5
   2e060:	b.eq	2e07c <rpl_re_compile_fastmap@@Base+0x794>  // b.none
   2e064:	ldr	w0, [sp, #480]
   2e068:	cmp	w0, #0x7
   2e06c:	b.eq	2e07c <rpl_re_compile_fastmap@@Base+0x794>  // b.none
   2e070:	ldr	w0, [sp, #480]
   2e074:	cmp	w0, #0x2
   2e078:	b.ne	2e0b0 <rpl_re_compile_fastmap@@Base+0x7c8>  // b.any
   2e07c:	mov	x2, #0x100                 	// #256
   2e080:	mov	w1, #0x1                   	// #1
   2e084:	ldr	x0, [sp, #24]
   2e088:	bl	acb0 <memset@plt>
   2e08c:	ldr	w0, [sp, #480]
   2e090:	cmp	w0, #0x2
   2e094:	b.ne	2e0d4 <rpl_re_compile_fastmap@@Base+0x7ec>  // b.any
   2e098:	ldr	x0, [sp, #40]
   2e09c:	ldrb	w1, [x0, #56]
   2e0a0:	orr	w1, w1, #0x1
   2e0a4:	strb	w1, [x0, #56]
   2e0a8:	b	2e0d4 <rpl_re_compile_fastmap@@Base+0x7ec>
   2e0ac:	nop
   2e0b0:	ldr	x0, [sp, #536]
   2e0b4:	add	x0, x0, #0x1
   2e0b8:	str	x0, [sp, #536]
   2e0bc:	ldr	x0, [sp, #32]
   2e0c0:	ldr	x0, [x0, #16]
   2e0c4:	ldr	x1, [sp, #536]
   2e0c8:	cmp	x1, x0
   2e0cc:	b.lt	2da4c <rpl_re_compile_fastmap@@Base+0x164>  // b.tstop
   2e0d0:	b	2e0d8 <rpl_re_compile_fastmap@@Base+0x7f0>
   2e0d4:	nop
   2e0d8:	ldp	x29, x30, [sp]
   2e0dc:	add	sp, sp, #0x220
   2e0e0:	ret

000000000002e0e4 <rpl_regcomp@@Base>:
   2e0e4:	stp	x29, x30, [sp, #-64]!
   2e0e8:	mov	x29, sp
   2e0ec:	str	x0, [sp, #40]
   2e0f0:	str	x1, [sp, #32]
   2e0f4:	str	w2, [sp, #28]
   2e0f8:	ldr	w0, [sp, #28]
   2e0fc:	and	w0, w0, #0x1
   2e100:	cmp	w0, #0x0
   2e104:	b.eq	2e114 <rpl_regcomp@@Base+0x30>  // b.none
   2e108:	mov	x0, #0xb2fc                	// #45820
   2e10c:	movk	x0, #0x3, lsl #16
   2e110:	b	2e11c <rpl_regcomp@@Base+0x38>
   2e114:	mov	x0, #0x2c6                 	// #710
   2e118:	movk	x0, #0x101, lsl #16
   2e11c:	str	x0, [sp, #48]
   2e120:	ldr	x0, [sp, #40]
   2e124:	str	xzr, [x0]
   2e128:	ldr	x0, [sp, #40]
   2e12c:	str	xzr, [x0, #8]
   2e130:	ldr	x0, [sp, #40]
   2e134:	str	xzr, [x0, #16]
   2e138:	mov	x0, #0x100                 	// #256
   2e13c:	bl	ab40 <malloc@plt>
   2e140:	mov	x1, x0
   2e144:	ldr	x0, [sp, #40]
   2e148:	str	x1, [x0, #32]
   2e14c:	ldr	x0, [sp, #40]
   2e150:	ldr	x0, [x0, #32]
   2e154:	cmp	x0, #0x0
   2e158:	cset	w0, eq  // eq = none
   2e15c:	and	w0, w0, #0xff
   2e160:	and	x0, x0, #0xff
   2e164:	cmp	x0, #0x0
   2e168:	b.eq	2e174 <rpl_regcomp@@Base+0x90>  // b.none
   2e16c:	mov	w0, #0xc                   	// #12
   2e170:	b	2e278 <rpl_regcomp@@Base+0x194>
   2e174:	ldrsw	x0, [sp, #28]
   2e178:	lsl	x0, x0, #21
   2e17c:	and	x0, x0, #0x400000
   2e180:	ldr	x1, [sp, #48]
   2e184:	orr	x0, x1, x0
   2e188:	str	x0, [sp, #48]
   2e18c:	ldr	w0, [sp, #28]
   2e190:	and	w0, w0, #0x4
   2e194:	cmp	w0, #0x0
   2e198:	b.eq	2e1c8 <rpl_regcomp@@Base+0xe4>  // b.none
   2e19c:	ldr	x0, [sp, #48]
   2e1a0:	and	x0, x0, #0xffffffffffffffbf
   2e1a4:	str	x0, [sp, #48]
   2e1a8:	ldr	x0, [sp, #48]
   2e1ac:	orr	x0, x0, #0x100
   2e1b0:	str	x0, [sp, #48]
   2e1b4:	ldr	x0, [sp, #40]
   2e1b8:	ldrb	w1, [x0, #56]
   2e1bc:	orr	w1, w1, #0xffffff80
   2e1c0:	strb	w1, [x0, #56]
   2e1c4:	b	2e1d8 <rpl_regcomp@@Base+0xf4>
   2e1c8:	ldr	x0, [sp, #40]
   2e1cc:	ldrb	w1, [x0, #56]
   2e1d0:	and	w1, w1, #0x7f
   2e1d4:	strb	w1, [x0, #56]
   2e1d8:	ldr	w0, [sp, #28]
   2e1dc:	and	w0, w0, #0x8
   2e1e0:	cmp	w0, #0x0
   2e1e4:	cset	w0, ne  // ne = any
   2e1e8:	and	w2, w0, #0xff
   2e1ec:	ldr	x1, [sp, #40]
   2e1f0:	ldrb	w0, [x1, #56]
   2e1f4:	bfi	w0, w2, #4, #1
   2e1f8:	strb	w0, [x1, #56]
   2e1fc:	ldr	x0, [sp, #40]
   2e200:	str	xzr, [x0, #40]
   2e204:	ldr	x0, [sp, #32]
   2e208:	bl	a820 <strlen@plt>
   2e20c:	ldr	x3, [sp, #48]
   2e210:	mov	x2, x0
   2e214:	ldr	x1, [sp, #32]
   2e218:	ldr	x0, [sp, #40]
   2e21c:	bl	2e6a8 <rpl_regfree@@Base+0xb0>
   2e220:	str	w0, [sp, #60]
   2e224:	ldr	w0, [sp, #60]
   2e228:	cmp	w0, #0x10
   2e22c:	b.ne	2e238 <rpl_regcomp@@Base+0x154>  // b.any
   2e230:	mov	w0, #0x8                   	// #8
   2e234:	str	w0, [sp, #60]
   2e238:	ldr	w0, [sp, #60]
   2e23c:	cmp	w0, #0x0
   2e240:	cset	w0, eq  // eq = none
   2e244:	and	w0, w0, #0xff
   2e248:	and	x0, x0, #0xff
   2e24c:	cmp	x0, #0x0
   2e250:	b.eq	2e260 <rpl_regcomp@@Base+0x17c>  // b.none
   2e254:	ldr	x0, [sp, #40]
   2e258:	bl	b740 <rpl_re_compile_fastmap@plt>
   2e25c:	b	2e274 <rpl_regcomp@@Base+0x190>
   2e260:	ldr	x0, [sp, #40]
   2e264:	ldr	x0, [x0, #32]
   2e268:	bl	b130 <free@plt>
   2e26c:	ldr	x0, [sp, #40]
   2e270:	str	xzr, [x0, #32]
   2e274:	ldr	w0, [sp, #60]
   2e278:	ldp	x29, x30, [sp], #64
   2e27c:	ret

000000000002e280 <rpl_regerror@@Base>:
   2e280:	stp	x29, x30, [sp, #-80]!
   2e284:	mov	x29, sp
   2e288:	str	w0, [sp, #44]
   2e28c:	str	x1, [sp, #32]
   2e290:	str	x2, [sp, #24]
   2e294:	str	x3, [sp, #16]
   2e298:	mov	w0, #0x11                  	// #17
   2e29c:	str	w0, [sp, #68]
   2e2a0:	ldr	w0, [sp, #44]
   2e2a4:	lsr	w0, w0, #31
   2e2a8:	and	w0, w0, #0xff
   2e2ac:	and	x0, x0, #0xff
   2e2b0:	cmp	x0, #0x0
   2e2b4:	b.ne	2e2d8 <rpl_regerror@@Base+0x58>  // b.any
   2e2b8:	ldr	w1, [sp, #44]
   2e2bc:	ldr	w0, [sp, #68]
   2e2c0:	cmp	w1, w0
   2e2c4:	cset	w0, ge  // ge = tcont
   2e2c8:	and	w0, w0, #0xff
   2e2cc:	and	x0, x0, #0xff
   2e2d0:	cmp	x0, #0x0
   2e2d4:	b.eq	2e2dc <rpl_regerror@@Base+0x5c>  // b.none
   2e2d8:	bl	af70 <abort@plt>
   2e2dc:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   2e2e0:	add	x0, x0, #0x430
   2e2e4:	ldrsw	x1, [sp, #44]
   2e2e8:	ldr	x1, [x0, x1, lsl #3]
   2e2ec:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   2e2f0:	add	x0, x0, #0x2b0
   2e2f4:	add	x0, x1, x0
   2e2f8:	bl	b700 <gettext@plt>
   2e2fc:	str	x0, [sp, #56]
   2e300:	ldr	x0, [sp, #56]
   2e304:	bl	a820 <strlen@plt>
   2e308:	add	x0, x0, #0x1
   2e30c:	str	x0, [sp, #48]
   2e310:	ldr	x0, [sp, #16]
   2e314:	cmp	x0, #0x0
   2e318:	cset	w0, ne  // ne = any
   2e31c:	and	w0, w0, #0xff
   2e320:	and	x0, x0, #0xff
   2e324:	cmp	x0, #0x0
   2e328:	b.eq	2e380 <rpl_regerror@@Base+0x100>  // b.none
   2e32c:	ldr	x0, [sp, #48]
   2e330:	str	x0, [sp, #72]
   2e334:	ldr	x1, [sp, #48]
   2e338:	ldr	x0, [sp, #16]
   2e33c:	cmp	x1, x0
   2e340:	cset	w0, hi  // hi = pmore
   2e344:	and	w0, w0, #0xff
   2e348:	and	x0, x0, #0xff
   2e34c:	cmp	x0, #0x0
   2e350:	b.eq	2e370 <rpl_regerror@@Base+0xf0>  // b.none
   2e354:	ldr	x0, [sp, #16]
   2e358:	sub	x0, x0, #0x1
   2e35c:	str	x0, [sp, #72]
   2e360:	ldr	x1, [sp, #24]
   2e364:	ldr	x0, [sp, #72]
   2e368:	add	x0, x1, x0
   2e36c:	strb	wzr, [x0]
   2e370:	ldr	x2, [sp, #72]
   2e374:	ldr	x1, [sp, #56]
   2e378:	ldr	x0, [sp, #24]
   2e37c:	bl	a790 <memcpy@plt>
   2e380:	ldr	x0, [sp, #48]
   2e384:	ldp	x29, x30, [sp], #80
   2e388:	ret
   2e38c:	stp	x29, x30, [sp, #-64]!
   2e390:	mov	x29, sp
   2e394:	str	x0, [sp, #24]
   2e398:	ldr	x0, [sp, #24]
   2e39c:	ldr	x0, [x0]
   2e3a0:	cmp	x0, #0x0
   2e3a4:	b.eq	2e3e8 <rpl_regerror@@Base+0x168>  // b.none
   2e3a8:	str	xzr, [sp, #56]
   2e3ac:	b	2e3d4 <rpl_regerror@@Base+0x154>
   2e3b0:	ldr	x0, [sp, #24]
   2e3b4:	ldr	x1, [x0]
   2e3b8:	ldr	x0, [sp, #56]
   2e3bc:	lsl	x0, x0, #4
   2e3c0:	add	x0, x1, x0
   2e3c4:	bl	35f8c <rpl_regfree@@Base+0x7994>
   2e3c8:	ldr	x0, [sp, #56]
   2e3cc:	add	x0, x0, #0x1
   2e3d0:	str	x0, [sp, #56]
   2e3d4:	ldr	x0, [sp, #24]
   2e3d8:	ldr	x1, [x0, #16]
   2e3dc:	ldr	x0, [sp, #56]
   2e3e0:	cmp	x1, x0
   2e3e4:	b.hi	2e3b0 <rpl_regerror@@Base+0x130>  // b.pmore
   2e3e8:	ldr	x0, [sp, #24]
   2e3ec:	ldr	x0, [x0, #24]
   2e3f0:	bl	b130 <free@plt>
   2e3f4:	str	xzr, [sp, #56]
   2e3f8:	b	2e4b0 <rpl_regerror@@Base+0x230>
   2e3fc:	ldr	x0, [sp, #24]
   2e400:	ldr	x0, [x0, #48]
   2e404:	cmp	x0, #0x0
   2e408:	b.eq	2e434 <rpl_regerror@@Base+0x1b4>  // b.none
   2e40c:	ldr	x0, [sp, #24]
   2e410:	ldr	x2, [x0, #48]
   2e414:	ldr	x1, [sp, #56]
   2e418:	mov	x0, x1
   2e41c:	lsl	x0, x0, #1
   2e420:	add	x0, x0, x1
   2e424:	lsl	x0, x0, #3
   2e428:	add	x0, x2, x0
   2e42c:	ldr	x0, [x0, #16]
   2e430:	bl	b130 <free@plt>
   2e434:	ldr	x0, [sp, #24]
   2e438:	ldr	x0, [x0, #56]
   2e43c:	cmp	x0, #0x0
   2e440:	b.eq	2e46c <rpl_regerror@@Base+0x1ec>  // b.none
   2e444:	ldr	x0, [sp, #24]
   2e448:	ldr	x2, [x0, #56]
   2e44c:	ldr	x1, [sp, #56]
   2e450:	mov	x0, x1
   2e454:	lsl	x0, x0, #1
   2e458:	add	x0, x0, x1
   2e45c:	lsl	x0, x0, #3
   2e460:	add	x0, x2, x0
   2e464:	ldr	x0, [x0, #16]
   2e468:	bl	b130 <free@plt>
   2e46c:	ldr	x0, [sp, #24]
   2e470:	ldr	x0, [x0, #40]
   2e474:	cmp	x0, #0x0
   2e478:	b.eq	2e4a4 <rpl_regerror@@Base+0x224>  // b.none
   2e47c:	ldr	x0, [sp, #24]
   2e480:	ldr	x2, [x0, #40]
   2e484:	ldr	x1, [sp, #56]
   2e488:	mov	x0, x1
   2e48c:	lsl	x0, x0, #1
   2e490:	add	x0, x0, x1
   2e494:	lsl	x0, x0, #3
   2e498:	add	x0, x2, x0
   2e49c:	ldr	x0, [x0, #16]
   2e4a0:	bl	b130 <free@plt>
   2e4a4:	ldr	x0, [sp, #56]
   2e4a8:	add	x0, x0, #0x1
   2e4ac:	str	x0, [sp, #56]
   2e4b0:	ldr	x0, [sp, #24]
   2e4b4:	ldr	x1, [x0, #16]
   2e4b8:	ldr	x0, [sp, #56]
   2e4bc:	cmp	x1, x0
   2e4c0:	b.hi	2e3fc <rpl_regerror@@Base+0x17c>  // b.pmore
   2e4c4:	ldr	x0, [sp, #24]
   2e4c8:	ldr	x0, [x0, #40]
   2e4cc:	bl	b130 <free@plt>
   2e4d0:	ldr	x0, [sp, #24]
   2e4d4:	ldr	x0, [x0, #48]
   2e4d8:	bl	b130 <free@plt>
   2e4dc:	ldr	x0, [sp, #24]
   2e4e0:	ldr	x0, [x0, #56]
   2e4e4:	bl	b130 <free@plt>
   2e4e8:	ldr	x0, [sp, #24]
   2e4ec:	ldr	x0, [x0]
   2e4f0:	bl	b130 <free@plt>
   2e4f4:	ldr	x0, [sp, #24]
   2e4f8:	ldr	x0, [x0, #64]
   2e4fc:	cmp	x0, #0x0
   2e500:	b.eq	2e5a8 <rpl_regerror@@Base+0x328>  // b.none
   2e504:	str	xzr, [sp, #56]
   2e508:	b	2e594 <rpl_regerror@@Base+0x314>
   2e50c:	ldr	x0, [sp, #24]
   2e510:	ldr	x2, [x0, #64]
   2e514:	ldr	x1, [sp, #56]
   2e518:	mov	x0, x1
   2e51c:	lsl	x0, x0, #1
   2e520:	add	x0, x0, x1
   2e524:	lsl	x0, x0, #3
   2e528:	add	x0, x2, x0
   2e52c:	str	x0, [sp, #40]
   2e530:	str	xzr, [sp, #48]
   2e534:	b	2e568 <rpl_regerror@@Base+0x2e8>
   2e538:	ldr	x0, [sp, #40]
   2e53c:	ldr	x1, [x0, #16]
   2e540:	ldr	x0, [sp, #48]
   2e544:	lsl	x0, x0, #3
   2e548:	add	x0, x1, x0
   2e54c:	ldr	x0, [x0]
   2e550:	str	x0, [sp, #32]
   2e554:	ldr	x0, [sp, #32]
   2e558:	bl	2d208 <printf_parse@@Base+0x5f10>
   2e55c:	ldr	x0, [sp, #48]
   2e560:	add	x0, x0, #0x1
   2e564:	str	x0, [sp, #48]
   2e568:	ldr	x0, [sp, #40]
   2e56c:	ldr	x0, [x0]
   2e570:	ldr	x1, [sp, #48]
   2e574:	cmp	x1, x0
   2e578:	b.lt	2e538 <rpl_regerror@@Base+0x2b8>  // b.tstop
   2e57c:	ldr	x0, [sp, #40]
   2e580:	ldr	x0, [x0, #16]
   2e584:	bl	b130 <free@plt>
   2e588:	ldr	x0, [sp, #56]
   2e58c:	add	x0, x0, #0x1
   2e590:	str	x0, [sp, #56]
   2e594:	ldr	x0, [sp, #24]
   2e598:	ldr	x1, [x0, #136]
   2e59c:	ldr	x0, [sp, #56]
   2e5a0:	cmp	x1, x0
   2e5a4:	b.cs	2e50c <rpl_regerror@@Base+0x28c>  // b.hs, b.nlast
   2e5a8:	ldr	x0, [sp, #24]
   2e5ac:	ldr	x0, [x0, #64]
   2e5b0:	bl	b130 <free@plt>
   2e5b4:	ldr	x0, [sp, #24]
   2e5b8:	ldr	x1, [x0, #120]
   2e5bc:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   2e5c0:	add	x0, x0, #0x4b8
   2e5c4:	cmp	x1, x0
   2e5c8:	b.eq	2e5d8 <rpl_regerror@@Base+0x358>  // b.none
   2e5cc:	ldr	x0, [sp, #24]
   2e5d0:	ldr	x0, [x0, #120]
   2e5d4:	bl	b130 <free@plt>
   2e5d8:	ldr	x0, [sp, #24]
   2e5dc:	ldr	x0, [x0, #224]
   2e5e0:	bl	b130 <free@plt>
   2e5e4:	ldr	x0, [sp, #24]
   2e5e8:	bl	b130 <free@plt>
   2e5ec:	nop
   2e5f0:	ldp	x29, x30, [sp], #64
   2e5f4:	ret

000000000002e5f8 <rpl_regfree@@Base>:
   2e5f8:	stp	x29, x30, [sp, #-48]!
   2e5fc:	mov	x29, sp
   2e600:	str	x0, [sp, #24]
   2e604:	ldr	x0, [sp, #24]
   2e608:	ldr	x0, [x0]
   2e60c:	str	x0, [sp, #40]
   2e610:	ldr	x0, [sp, #40]
   2e614:	cmp	x0, #0x0
   2e618:	cset	w0, ne  // ne = any
   2e61c:	and	w0, w0, #0xff
   2e620:	and	x0, x0, #0xff
   2e624:	cmp	x0, #0x0
   2e628:	b.eq	2e664 <rpl_regfree@@Base+0x6c>  // b.none
   2e62c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2e630:	ldr	x0, [x0, #4040]
   2e634:	cmp	x0, #0x0
   2e638:	b.ne	2e64c <rpl_regfree@@Base+0x54>  // b.any
   2e63c:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2e640:	ldr	x0, [x0, #3944]
   2e644:	cmp	x0, #0x0
   2e648:	b.eq	2e65c <rpl_regfree@@Base+0x64>  // b.none
   2e64c:	ldr	x0, [sp, #40]
   2e650:	add	x0, x0, #0xe8
   2e654:	bl	b350 <pthread_mutex_destroy@plt>
   2e658:	nop
   2e65c:	ldr	x0, [sp, #40]
   2e660:	bl	2e38c <rpl_regerror@@Base+0x10c>
   2e664:	ldr	x0, [sp, #24]
   2e668:	str	xzr, [x0]
   2e66c:	ldr	x0, [sp, #24]
   2e670:	str	xzr, [x0, #8]
   2e674:	ldr	x0, [sp, #24]
   2e678:	ldr	x0, [x0, #32]
   2e67c:	bl	b130 <free@plt>
   2e680:	ldr	x0, [sp, #24]
   2e684:	str	xzr, [x0, #32]
   2e688:	ldr	x0, [sp, #24]
   2e68c:	ldr	x0, [x0, #40]
   2e690:	bl	b130 <free@plt>
   2e694:	ldr	x0, [sp, #24]
   2e698:	str	xzr, [x0, #40]
   2e69c:	nop
   2e6a0:	ldp	x29, x30, [sp], #48
   2e6a4:	ret
   2e6a8:	stp	x29, x30, [sp, #-224]!
   2e6ac:	mov	x29, sp
   2e6b0:	str	x0, [sp, #40]
   2e6b4:	str	x1, [sp, #32]
   2e6b8:	str	x2, [sp, #24]
   2e6bc:	str	x3, [sp, #16]
   2e6c0:	str	wzr, [sp, #212]
   2e6c4:	ldr	x0, [sp, #40]
   2e6c8:	ldrb	w1, [x0, #56]
   2e6cc:	and	w1, w1, #0xfffffff7
   2e6d0:	strb	w1, [x0, #56]
   2e6d4:	ldr	x0, [sp, #40]
   2e6d8:	ldr	x1, [sp, #16]
   2e6dc:	str	x1, [x0, #24]
   2e6e0:	ldr	x0, [sp, #40]
   2e6e4:	ldrb	w1, [x0, #56]
   2e6e8:	and	w1, w1, #0xffffffbf
   2e6ec:	strb	w1, [x0, #56]
   2e6f0:	ldr	x0, [sp, #40]
   2e6f4:	ldrb	w0, [x0, #56]
   2e6f8:	ubfx	x0, x0, #6, #1
   2e6fc:	and	w2, w0, #0xff
   2e700:	ldr	x1, [sp, #40]
   2e704:	ldrb	w0, [x1, #56]
   2e708:	bfi	w0, w2, #5, #1
   2e70c:	strb	w0, [x1, #56]
   2e710:	ldr	x0, [sp, #40]
   2e714:	str	xzr, [x0, #16]
   2e718:	ldr	x0, [sp, #40]
   2e71c:	str	xzr, [x0, #48]
   2e720:	ldr	x0, [sp, #40]
   2e724:	ldrb	w1, [x0, #56]
   2e728:	and	w1, w1, #0xfffffffe
   2e72c:	strb	w1, [x0, #56]
   2e730:	ldr	x0, [sp, #40]
   2e734:	ldrb	w1, [x0, #56]
   2e738:	and	w1, w1, #0xfffffff9
   2e73c:	strb	w1, [x0, #56]
   2e740:	ldr	x0, [sp, #40]
   2e744:	ldr	x0, [x0]
   2e748:	str	x0, [sp, #216]
   2e74c:	ldr	x0, [sp, #40]
   2e750:	ldr	x0, [x0, #8]
   2e754:	cmp	x0, #0x117
   2e758:	cset	w0, ls  // ls = plast
   2e75c:	and	w0, w0, #0xff
   2e760:	and	x0, x0, #0xff
   2e764:	cmp	x0, #0x0
   2e768:	b.eq	2e7ac <rpl_regfree@@Base+0x1b4>  // b.none
   2e76c:	ldr	x0, [sp, #40]
   2e770:	ldr	x0, [x0]
   2e774:	mov	x1, #0x118                 	// #280
   2e778:	bl	ae00 <realloc@plt>
   2e77c:	str	x0, [sp, #216]
   2e780:	ldr	x0, [sp, #216]
   2e784:	cmp	x0, #0x0
   2e788:	b.ne	2e794 <rpl_regfree@@Base+0x19c>  // b.any
   2e78c:	mov	w0, #0xc                   	// #12
   2e790:	b	2eaa0 <rpl_regfree@@Base+0x4a8>
   2e794:	ldr	x0, [sp, #40]
   2e798:	mov	x1, #0x118                 	// #280
   2e79c:	str	x1, [x0, #8]
   2e7a0:	ldr	x0, [sp, #40]
   2e7a4:	ldr	x1, [sp, #216]
   2e7a8:	str	x1, [x0]
   2e7ac:	ldr	x0, [sp, #40]
   2e7b0:	mov	x1, #0x118                 	// #280
   2e7b4:	str	x1, [x0, #16]
   2e7b8:	ldr	x1, [sp, #24]
   2e7bc:	ldr	x0, [sp, #216]
   2e7c0:	bl	2eaa8 <rpl_regfree@@Base+0x4b0>
   2e7c4:	str	w0, [sp, #212]
   2e7c8:	ldr	w0, [sp, #212]
   2e7cc:	cmp	w0, #0x0
   2e7d0:	cset	w0, eq  // eq = none
   2e7d4:	and	w0, w0, #0xff
   2e7d8:	and	x0, x0, #0xff
   2e7dc:	cmp	x0, #0x0
   2e7e0:	b.eq	2e85c <rpl_regfree@@Base+0x264>  // b.none
   2e7e4:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2e7e8:	ldr	x0, [x0, #4040]
   2e7ec:	cmp	x0, #0x0
   2e7f0:	b.ne	2e804 <rpl_regfree@@Base+0x20c>  // b.any
   2e7f4:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2e7f8:	ldr	x0, [x0, #3944]
   2e7fc:	cmp	x0, #0x0
   2e800:	b.eq	2e80c <rpl_regfree@@Base+0x214>  // b.none
   2e804:	mov	w0, #0x1                   	// #1
   2e808:	b	2e810 <rpl_regfree@@Base+0x218>
   2e80c:	mov	w0, #0x0                   	// #0
   2e810:	cmp	w0, #0x0
   2e814:	b.eq	2e848 <rpl_regfree@@Base+0x250>  // b.none
   2e818:	ldr	x0, [sp, #216]
   2e81c:	add	x0, x0, #0xe8
   2e820:	mov	x1, #0x0                   	// #0
   2e824:	bl	ae70 <pthread_mutex_init@plt>
   2e828:	cmp	w0, #0x0
   2e82c:	cset	w0, ne  // ne = any
   2e830:	and	w0, w0, #0xff
   2e834:	and	x0, x0, #0xff
   2e838:	cmp	x0, #0x0
   2e83c:	b.eq	2e848 <rpl_regfree@@Base+0x250>  // b.none
   2e840:	mov	w0, #0x1                   	// #1
   2e844:	b	2e84c <rpl_regfree@@Base+0x254>
   2e848:	mov	w0, #0x0                   	// #0
   2e84c:	cmp	w0, #0x0
   2e850:	b.eq	2e85c <rpl_regfree@@Base+0x264>  // b.none
   2e854:	mov	w0, #0xc                   	// #12
   2e858:	str	w0, [sp, #212]
   2e85c:	ldr	w0, [sp, #212]
   2e860:	cmp	w0, #0x0
   2e864:	cset	w0, ne  // ne = any
   2e868:	and	w0, w0, #0xff
   2e86c:	and	x0, x0, #0xff
   2e870:	cmp	x0, #0x0
   2e874:	b.eq	2e898 <rpl_regfree@@Base+0x2a0>  // b.none
   2e878:	ldr	x0, [sp, #216]
   2e87c:	bl	2e38c <rpl_regerror@@Base+0x10c>
   2e880:	ldr	x0, [sp, #40]
   2e884:	str	xzr, [x0]
   2e888:	ldr	x0, [sp, #40]
   2e88c:	str	xzr, [x0, #8]
   2e890:	ldr	w0, [sp, #212]
   2e894:	b	2eaa0 <rpl_regfree@@Base+0x4a8>
   2e898:	ldr	x1, [sp, #24]
   2e89c:	ldr	x0, [sp, #40]
   2e8a0:	ldr	x2, [x0, #40]
   2e8a4:	ldr	x0, [sp, #16]
   2e8a8:	and	x0, x0, #0x400000
   2e8ac:	cmp	x0, #0x0
   2e8b0:	cset	w0, ne  // ne = any
   2e8b4:	and	w3, w0, #0xff
   2e8b8:	add	x0, sp, #0x38
   2e8bc:	ldr	x5, [sp, #216]
   2e8c0:	mov	w4, w3
   2e8c4:	mov	x3, x2
   2e8c8:	mov	x2, x1
   2e8cc:	ldr	x1, [sp, #32]
   2e8d0:	bl	28ccc <printf_parse@@Base+0x19d4>
   2e8d4:	str	w0, [sp, #212]
   2e8d8:	ldr	w0, [sp, #212]
   2e8dc:	cmp	w0, #0x0
   2e8e0:	cset	w0, ne  // ne = any
   2e8e4:	and	w0, w0, #0xff
   2e8e8:	and	x0, x0, #0xff
   2e8ec:	cmp	x0, #0x0
   2e8f0:	b.eq	2e968 <rpl_regfree@@Base+0x370>  // b.none
   2e8f4:	nop
   2e8f8:	b	2e908 <rpl_regfree@@Base+0x310>
   2e8fc:	nop
   2e900:	b	2e908 <rpl_regfree@@Base+0x310>
   2e904:	nop
   2e908:	ldr	x0, [sp, #40]
   2e90c:	bl	2f0a0 <rpl_regfree@@Base+0xaa8>
   2e910:	add	x0, sp, #0x38
   2e914:	bl	2b290 <printf_parse@@Base+0x3f98>
   2e918:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2e91c:	ldr	x0, [x0, #4040]
   2e920:	cmp	x0, #0x0
   2e924:	b.ne	2e938 <rpl_regfree@@Base+0x340>  // b.any
   2e928:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2e92c:	ldr	x0, [x0, #3944]
   2e930:	cmp	x0, #0x0
   2e934:	b.eq	2e948 <rpl_regfree@@Base+0x350>  // b.none
   2e938:	ldr	x0, [sp, #216]
   2e93c:	add	x0, x0, #0xe8
   2e940:	bl	b350 <pthread_mutex_destroy@plt>
   2e944:	nop
   2e948:	ldr	x0, [sp, #216]
   2e94c:	bl	2e38c <rpl_regerror@@Base+0x10c>
   2e950:	ldr	x0, [sp, #40]
   2e954:	str	xzr, [x0]
   2e958:	ldr	x0, [sp, #40]
   2e95c:	str	xzr, [x0, #8]
   2e960:	ldr	w0, [sp, #212]
   2e964:	b	2eaa0 <rpl_regfree@@Base+0x4a8>
   2e968:	ldr	x0, [sp, #40]
   2e96c:	str	xzr, [x0, #48]
   2e970:	add	x1, sp, #0xd4
   2e974:	add	x0, sp, #0x38
   2e978:	mov	x3, x1
   2e97c:	ldr	x2, [sp, #16]
   2e980:	ldr	x1, [sp, #40]
   2e984:	bl	3235c <rpl_regfree@@Base+0x3d64>
   2e988:	mov	x1, x0
   2e98c:	ldr	x0, [sp, #216]
   2e990:	str	x1, [x0, #104]
   2e994:	ldr	x0, [sp, #216]
   2e998:	ldr	x0, [x0, #104]
   2e99c:	cmp	x0, #0x0
   2e9a0:	cset	w0, eq  // eq = none
   2e9a4:	and	w0, w0, #0xff
   2e9a8:	and	x0, x0, #0xff
   2e9ac:	cmp	x0, #0x0
   2e9b0:	b.ne	2e8fc <rpl_regfree@@Base+0x304>  // b.any
   2e9b4:	ldr	x0, [sp, #40]
   2e9b8:	bl	2f830 <rpl_regfree@@Base+0x1238>
   2e9bc:	str	w0, [sp, #212]
   2e9c0:	ldr	w0, [sp, #212]
   2e9c4:	cmp	w0, #0x0
   2e9c8:	cset	w0, ne  // ne = any
   2e9cc:	and	w0, w0, #0xff
   2e9d0:	and	x0, x0, #0xff
   2e9d4:	cmp	x0, #0x0
   2e9d8:	b.ne	2e904 <rpl_regfree@@Base+0x30c>  // b.any
   2e9dc:	ldr	x0, [sp, #216]
   2e9e0:	ldrb	w0, [x0, #176]
   2e9e4:	and	w0, w0, #0x4
   2e9e8:	and	w0, w0, #0xff
   2e9ec:	cmp	w0, #0x0
   2e9f0:	b.eq	2ea1c <rpl_regfree@@Base+0x424>  // b.none
   2e9f4:	ldr	x0, [sp, #16]
   2e9f8:	and	x0, x0, #0x400000
   2e9fc:	cmp	x0, #0x0
   2ea00:	b.ne	2ea1c <rpl_regfree@@Base+0x424>  // b.any
   2ea04:	ldr	x0, [sp, #40]
   2ea08:	ldr	x0, [x0, #40]
   2ea0c:	cmp	x0, #0x0
   2ea10:	b.ne	2ea1c <rpl_regfree@@Base+0x424>  // b.any
   2ea14:	ldr	x0, [sp, #216]
   2ea18:	bl	2f4ec <rpl_regfree@@Base+0xef4>
   2ea1c:	ldr	x0, [sp, #216]
   2ea20:	bl	2f12c <rpl_regfree@@Base+0xb34>
   2ea24:	str	w0, [sp, #212]
   2ea28:	ldr	x0, [sp, #40]
   2ea2c:	bl	2f0a0 <rpl_regfree@@Base+0xaa8>
   2ea30:	add	x0, sp, #0x38
   2ea34:	bl	2b290 <printf_parse@@Base+0x3f98>
   2ea38:	ldr	w0, [sp, #212]
   2ea3c:	cmp	w0, #0x0
   2ea40:	cset	w0, ne  // ne = any
   2ea44:	and	w0, w0, #0xff
   2ea48:	and	x0, x0, #0xff
   2ea4c:	cmp	x0, #0x0
   2ea50:	b.eq	2ea9c <rpl_regfree@@Base+0x4a4>  // b.none
   2ea54:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2ea58:	ldr	x0, [x0, #4040]
   2ea5c:	cmp	x0, #0x0
   2ea60:	b.ne	2ea74 <rpl_regfree@@Base+0x47c>  // b.any
   2ea64:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   2ea68:	ldr	x0, [x0, #3944]
   2ea6c:	cmp	x0, #0x0
   2ea70:	b.eq	2ea84 <rpl_regfree@@Base+0x48c>  // b.none
   2ea74:	ldr	x0, [sp, #216]
   2ea78:	add	x0, x0, #0xe8
   2ea7c:	bl	b350 <pthread_mutex_destroy@plt>
   2ea80:	nop
   2ea84:	ldr	x0, [sp, #216]
   2ea88:	bl	2e38c <rpl_regerror@@Base+0x10c>
   2ea8c:	ldr	x0, [sp, #40]
   2ea90:	str	xzr, [x0]
   2ea94:	ldr	x0, [sp, #40]
   2ea98:	str	xzr, [x0, #8]
   2ea9c:	ldr	w0, [sp, #212]
   2eaa0:	ldp	x29, x30, [sp], #224
   2eaa4:	ret
   2eaa8:	stp	x29, x30, [sp, #-96]!
   2eaac:	mov	x29, sp
   2eab0:	str	x0, [sp, #24]
   2eab4:	str	x1, [sp, #16]
   2eab8:	mov	x0, #0x8                   	// #8
   2eabc:	str	x0, [sp, #64]
   2eac0:	ldr	x0, [sp, #64]
   2eac4:	cmp	x0, #0x18
   2eac8:	b.ls	2ead8 <rpl_regfree@@Base+0x4e0>  // b.plast
   2eacc:	ldr	x0, [sp, #64]
   2ead0:	cmp	x0, #0x10
   2ead4:	b.ls	2eb40 <rpl_regfree@@Base+0x548>  // b.plast
   2ead8:	ldr	x0, [sp, #64]
   2eadc:	cmp	x0, #0x18
   2eae0:	b.ls	2eb40 <rpl_regfree@@Base+0x548>  // b.plast
   2eae4:	ldr	x0, [sp, #64]
   2eae8:	cmp	x0, #0x18
   2eaec:	b.ls	2eb40 <rpl_regfree@@Base+0x548>  // b.plast
   2eaf0:	ldr	x0, [sp, #64]
   2eaf4:	cmp	x0, #0x18
   2eaf8:	b.ls	2eb08 <rpl_regfree@@Base+0x510>  // b.plast
   2eafc:	ldr	x0, [sp, #64]
   2eb00:	cmp	x0, #0x10
   2eb04:	b.ls	2eb34 <rpl_regfree@@Base+0x53c>  // b.plast
   2eb08:	ldr	x0, [sp, #64]
   2eb0c:	cmp	x0, #0x18
   2eb10:	b.ls	2eb2c <rpl_regfree@@Base+0x534>  // b.plast
   2eb14:	ldr	x2, [sp, #64]
   2eb18:	ldr	x1, [sp, #64]
   2eb1c:	mov	x0, #0x10                  	// #16
   2eb20:	cmp	x2, #0x10
   2eb24:	csel	x0, x1, x0, cs  // cs = hs, nlast
   2eb28:	b	2eb3c <rpl_regfree@@Base+0x544>
   2eb2c:	mov	x0, #0x18                  	// #24
   2eb30:	b	2eb3c <rpl_regfree@@Base+0x544>
   2eb34:	mov	x0, #0x10                  	// #16
   2eb38:	b	2eb44 <rpl_regfree@@Base+0x54c>
   2eb3c:	b	2eb44 <rpl_regfree@@Base+0x54c>
   2eb40:	mov	x0, #0x18                  	// #24
   2eb44:	str	x0, [sp, #56]
   2eb48:	mov	x2, #0x118                 	// #280
   2eb4c:	mov	w1, #0x0                   	// #0
   2eb50:	ldr	x0, [sp, #24]
   2eb54:	bl	acb0 <memset@plt>
   2eb58:	ldr	x0, [sp, #24]
   2eb5c:	mov	w1, #0xf                   	// #15
   2eb60:	str	w1, [x0, #128]
   2eb64:	mov	x1, #0xffffffffffffffff    	// #-1
   2eb68:	ldr	x0, [sp, #56]
   2eb6c:	udiv	x0, x1, x0
   2eb70:	cmp	x0, #0x0
   2eb74:	b.lt	2eb8c <rpl_regfree@@Base+0x594>  // b.tstop
   2eb78:	mov	x1, #0xffffffffffffffff    	// #-1
   2eb7c:	ldr	x0, [sp, #56]
   2eb80:	udiv	x0, x1, x0
   2eb84:	lsr	x0, x0, #1
   2eb88:	b	2eb90 <rpl_regfree@@Base+0x598>
   2eb8c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   2eb90:	ldr	x1, [sp, #16]
   2eb94:	cmp	x0, x1
   2eb98:	cset	w0, ls  // ls = plast
   2eb9c:	and	w0, w0, #0xff
   2eba0:	and	x0, x0, #0xff
   2eba4:	cmp	x0, #0x0
   2eba8:	b.eq	2ebb4 <rpl_regfree@@Base+0x5bc>  // b.none
   2ebac:	mov	w0, #0xc                   	// #12
   2ebb0:	b	2eec0 <rpl_regfree@@Base+0x8c8>
   2ebb4:	ldr	x0, [sp, #16]
   2ebb8:	add	x1, x0, #0x1
   2ebbc:	ldr	x0, [sp, #24]
   2ebc0:	str	x1, [x0, #8]
   2ebc4:	ldr	x0, [sp, #24]
   2ebc8:	ldr	x0, [x0, #8]
   2ebcc:	lsl	x0, x0, #4
   2ebd0:	bl	ab40 <malloc@plt>
   2ebd4:	mov	x1, x0
   2ebd8:	ldr	x0, [sp, #24]
   2ebdc:	str	x1, [x0]
   2ebe0:	mov	x0, #0x1                   	// #1
   2ebe4:	str	x0, [sp, #88]
   2ebe8:	ldr	x1, [sp, #88]
   2ebec:	ldr	x0, [sp, #16]
   2ebf0:	cmp	x1, x0
   2ebf4:	b.hi	2ec08 <rpl_regfree@@Base+0x610>  // b.pmore
   2ebf8:	ldr	x0, [sp, #88]
   2ebfc:	lsl	x0, x0, #1
   2ec00:	str	x0, [sp, #88]
   2ec04:	b	2ebe8 <rpl_regfree@@Base+0x5f0>
   2ec08:	nop
   2ec0c:	ldr	x1, [sp, #88]
   2ec10:	mov	x0, #0x18                  	// #24
   2ec14:	bl	ad80 <calloc@plt>
   2ec18:	mov	x1, x0
   2ec1c:	ldr	x0, [sp, #24]
   2ec20:	str	x1, [x0, #64]
   2ec24:	ldr	x0, [sp, #88]
   2ec28:	sub	x1, x0, #0x1
   2ec2c:	ldr	x0, [sp, #24]
   2ec30:	str	x1, [x0, #136]
   2ec34:	bl	b160 <__ctype_get_mb_cur_max@plt>
   2ec38:	mov	w1, w0
   2ec3c:	ldr	x0, [sp, #24]
   2ec40:	str	w1, [x0, #180]
   2ec44:	mov	w0, #0xe                   	// #14
   2ec48:	bl	ab10 <nl_langinfo@plt>
   2ec4c:	str	x0, [sp, #48]
   2ec50:	ldr	x0, [sp, #48]
   2ec54:	ldrb	w0, [x0]
   2ec58:	cmp	w0, #0x55
   2ec5c:	b.eq	2ec70 <rpl_regfree@@Base+0x678>  // b.none
   2ec60:	ldr	x0, [sp, #48]
   2ec64:	ldrb	w0, [x0]
   2ec68:	cmp	w0, #0x75
   2ec6c:	b.ne	2ed10 <rpl_regfree@@Base+0x718>  // b.any
   2ec70:	ldr	x0, [sp, #48]
   2ec74:	add	x0, x0, #0x1
   2ec78:	ldrb	w0, [x0]
   2ec7c:	cmp	w0, #0x54
   2ec80:	b.eq	2ec98 <rpl_regfree@@Base+0x6a0>  // b.none
   2ec84:	ldr	x0, [sp, #48]
   2ec88:	add	x0, x0, #0x1
   2ec8c:	ldrb	w0, [x0]
   2ec90:	cmp	w0, #0x74
   2ec94:	b.ne	2ed10 <rpl_regfree@@Base+0x718>  // b.any
   2ec98:	ldr	x0, [sp, #48]
   2ec9c:	add	x0, x0, #0x2
   2eca0:	ldrb	w0, [x0]
   2eca4:	cmp	w0, #0x46
   2eca8:	b.eq	2ecc0 <rpl_regfree@@Base+0x6c8>  // b.none
   2ecac:	ldr	x0, [sp, #48]
   2ecb0:	add	x0, x0, #0x2
   2ecb4:	ldrb	w0, [x0]
   2ecb8:	cmp	w0, #0x66
   2ecbc:	b.ne	2ed10 <rpl_regfree@@Base+0x718>  // b.any
   2ecc0:	ldr	x0, [sp, #48]
   2ecc4:	add	x0, x0, #0x3
   2ecc8:	ldrb	w0, [x0]
   2eccc:	cmp	w0, #0x2d
   2ecd0:	b.ne	2ecdc <rpl_regfree@@Base+0x6e4>  // b.any
   2ecd4:	mov	x0, #0x4                   	// #4
   2ecd8:	b	2ece0 <rpl_regfree@@Base+0x6e8>
   2ecdc:	mov	x0, #0x3                   	// #3
   2ece0:	ldr	x1, [sp, #48]
   2ece4:	add	x2, x1, x0
   2ece8:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   2ecec:	add	x1, x0, #0x4d8
   2ecf0:	mov	x0, x2
   2ecf4:	bl	b070 <strcmp@plt>
   2ecf8:	cmp	w0, #0x0
   2ecfc:	b.ne	2ed10 <rpl_regfree@@Base+0x718>  // b.any
   2ed00:	ldr	x0, [sp, #24]
   2ed04:	ldrb	w1, [x0, #176]
   2ed08:	orr	w1, w1, #0x4
   2ed0c:	strb	w1, [x0, #176]
   2ed10:	ldr	x0, [sp, #24]
   2ed14:	ldrb	w1, [x0, #176]
   2ed18:	and	w1, w1, #0xfffffff7
   2ed1c:	strb	w1, [x0, #176]
   2ed20:	ldr	x0, [sp, #24]
   2ed24:	ldr	w0, [x0, #180]
   2ed28:	cmp	w0, #0x1
   2ed2c:	b.le	2ee74 <rpl_regfree@@Base+0x87c>
   2ed30:	ldr	x0, [sp, #24]
   2ed34:	ldrb	w0, [x0, #176]
   2ed38:	and	w0, w0, #0x4
   2ed3c:	and	w0, w0, #0xff
   2ed40:	cmp	w0, #0x0
   2ed44:	b.eq	2ed5c <rpl_regfree@@Base+0x764>  // b.none
   2ed48:	ldr	x0, [sp, #24]
   2ed4c:	adrp	x1, 45000 <vasnprintf@@Base+0x4e04>
   2ed50:	add	x1, x1, #0x4b8
   2ed54:	str	x1, [x0, #120]
   2ed58:	b	2ee74 <rpl_regfree@@Base+0x87c>
   2ed5c:	mov	x1, #0x1                   	// #1
   2ed60:	mov	x0, #0x20                  	// #32
   2ed64:	bl	ad80 <calloc@plt>
   2ed68:	mov	x1, x0
   2ed6c:	ldr	x0, [sp, #24]
   2ed70:	str	x1, [x0, #120]
   2ed74:	ldr	x0, [sp, #24]
   2ed78:	ldr	x0, [x0, #120]
   2ed7c:	cmp	x0, #0x0
   2ed80:	cset	w0, eq  // eq = none
   2ed84:	and	w0, w0, #0xff
   2ed88:	and	x0, x0, #0xff
   2ed8c:	cmp	x0, #0x0
   2ed90:	b.eq	2ed9c <rpl_regfree@@Base+0x7a4>  // b.none
   2ed94:	mov	w0, #0xc                   	// #12
   2ed98:	b	2eec0 <rpl_regfree@@Base+0x8c8>
   2ed9c:	str	wzr, [sp, #84]
   2eda0:	str	wzr, [sp, #76]
   2eda4:	b	2ee68 <rpl_regfree@@Base+0x870>
   2eda8:	str	wzr, [sp, #80]
   2edac:	b	2ee50 <rpl_regfree@@Base+0x858>
   2edb0:	ldr	w0, [sp, #76]
   2edb4:	bl	af40 <btowc@plt>
   2edb8:	str	w0, [sp, #44]
   2edbc:	ldr	w0, [sp, #44]
   2edc0:	cmn	w0, #0x1
   2edc4:	b.eq	2ee08 <rpl_regfree@@Base+0x810>  // b.none
   2edc8:	ldr	x0, [sp, #24]
   2edcc:	ldr	x1, [x0, #120]
   2edd0:	ldrsw	x0, [sp, #84]
   2edd4:	lsl	x0, x0, #3
   2edd8:	add	x0, x1, x0
   2eddc:	ldr	x2, [x0]
   2ede0:	ldr	w0, [sp, #80]
   2ede4:	mov	x1, #0x1                   	// #1
   2ede8:	lsl	x1, x1, x0
   2edec:	ldr	x0, [sp, #24]
   2edf0:	ldr	x3, [x0, #120]
   2edf4:	ldrsw	x0, [sp, #84]
   2edf8:	lsl	x0, x0, #3
   2edfc:	add	x0, x3, x0
   2ee00:	orr	x1, x2, x1
   2ee04:	str	x1, [x0]
   2ee08:	ldr	w0, [sp, #76]
   2ee0c:	and	w0, w0, #0xffffff80
   2ee10:	cmp	w0, #0x0
   2ee14:	b.ne	2ee38 <rpl_regfree@@Base+0x840>  // b.any
   2ee18:	ldr	w0, [sp, #76]
   2ee1c:	ldr	w1, [sp, #44]
   2ee20:	cmp	w1, w0
   2ee24:	b.eq	2ee38 <rpl_regfree@@Base+0x840>  // b.none
   2ee28:	ldr	x0, [sp, #24]
   2ee2c:	ldrb	w1, [x0, #176]
   2ee30:	orr	w1, w1, #0x8
   2ee34:	strb	w1, [x0, #176]
   2ee38:	ldr	w0, [sp, #80]
   2ee3c:	add	w0, w0, #0x1
   2ee40:	str	w0, [sp, #80]
   2ee44:	ldr	w0, [sp, #76]
   2ee48:	add	w0, w0, #0x1
   2ee4c:	str	w0, [sp, #76]
   2ee50:	ldr	w0, [sp, #80]
   2ee54:	cmp	w0, #0x3f
   2ee58:	b.le	2edb0 <rpl_regfree@@Base+0x7b8>
   2ee5c:	ldr	w0, [sp, #84]
   2ee60:	add	w0, w0, #0x1
   2ee64:	str	w0, [sp, #84]
   2ee68:	ldr	w0, [sp, #84]
   2ee6c:	cmp	w0, #0x3
   2ee70:	b.le	2eda8 <rpl_regfree@@Base+0x7b0>
   2ee74:	ldr	x0, [sp, #24]
   2ee78:	ldr	x0, [x0]
   2ee7c:	cmp	x0, #0x0
   2ee80:	cset	w0, eq  // eq = none
   2ee84:	and	w0, w0, #0xff
   2ee88:	and	x0, x0, #0xff
   2ee8c:	cmp	x0, #0x0
   2ee90:	b.ne	2eeb4 <rpl_regfree@@Base+0x8bc>  // b.any
   2ee94:	ldr	x0, [sp, #24]
   2ee98:	ldr	x0, [x0, #64]
   2ee9c:	cmp	x0, #0x0
   2eea0:	cset	w0, eq  // eq = none
   2eea4:	and	w0, w0, #0xff
   2eea8:	and	x0, x0, #0xff
   2eeac:	cmp	x0, #0x0
   2eeb0:	b.eq	2eebc <rpl_regfree@@Base+0x8c4>  // b.none
   2eeb4:	mov	w0, #0xc                   	// #12
   2eeb8:	b	2eec0 <rpl_regfree@@Base+0x8c8>
   2eebc:	mov	w0, #0x0                   	// #0
   2eec0:	ldp	x29, x30, [sp], #96
   2eec4:	ret
   2eec8:	stp	x29, x30, [sp, #-80]!
   2eecc:	mov	x29, sp
   2eed0:	str	x0, [sp, #24]
   2eed4:	str	wzr, [sp, #76]
   2eed8:	str	wzr, [sp, #68]
   2eedc:	ldr	x0, [sp, #24]
   2eee0:	ldrb	w1, [x0, #176]
   2eee4:	orr	w1, w1, #0x10
   2eee8:	strb	w1, [x0, #176]
   2eeec:	ldr	x0, [sp, #24]
   2eef0:	ldrb	w0, [x0, #176]
   2eef4:	and	w0, w0, #0x8
   2eef8:	and	w0, w0, #0xff
   2eefc:	cmp	w0, #0x0
   2ef00:	cset	w0, eq  // eq = none
   2ef04:	and	w0, w0, #0xff
   2ef08:	and	x0, x0, #0xff
   2ef0c:	cmp	x0, #0x0
   2ef10:	b.eq	2efdc <rpl_regfree@@Base+0x9e4>  // b.none
   2ef14:	str	xzr, [sp, #56]
   2ef18:	mov	x0, #0x3ff0000             	// #67043328
   2ef1c:	str	x0, [sp, #48]
   2ef20:	mov	x0, #0xfffe                	// #65534
   2ef24:	movk	x0, #0x87ff, lsl #16
   2ef28:	str	x0, [sp, #40]
   2ef2c:	mov	x0, #0x7fffffe             	// #134217726
   2ef30:	str	x0, [sp, #32]
   2ef34:	ldr	x0, [sp, #48]
   2ef38:	lsl	x1, x0, #32
   2ef3c:	ldr	x0, [sp, #56]
   2ef40:	orr	x1, x1, x0
   2ef44:	ldr	x0, [sp, #24]
   2ef48:	str	x1, [x0, #184]
   2ef4c:	ldr	x0, [sp, #32]
   2ef50:	lsl	x1, x0, #32
   2ef54:	ldr	x0, [sp, #40]
   2ef58:	orr	x1, x1, x0
   2ef5c:	ldr	x0, [sp, #24]
   2ef60:	str	x1, [x0, #192]
   2ef64:	mov	w0, #0x2                   	// #2
   2ef68:	str	w0, [sp, #76]
   2ef6c:	mov	w0, #0x80                  	// #128
   2ef70:	str	w0, [sp, #68]
   2ef74:	ldr	x0, [sp, #24]
   2ef78:	ldrb	w0, [x0, #176]
   2ef7c:	ubfx	x0, x0, #2, #1
   2ef80:	and	w0, w0, #0xff
   2ef84:	and	x0, x0, #0xff
   2ef88:	cmp	x0, #0x0
   2ef8c:	b.eq	2efdc <rpl_regfree@@Base+0x9e4>  // b.none
   2ef90:	ldrsw	x0, [sp, #76]
   2ef94:	add	x0, x0, #0x16
   2ef98:	lsl	x0, x0, #3
   2ef9c:	ldr	x1, [sp, #24]
   2efa0:	add	x0, x1, x0
   2efa4:	add	x3, x0, #0x8
   2efa8:	mov	w1, #0x100                 	// #256
   2efac:	ldr	w0, [sp, #68]
   2efb0:	sub	w0, w1, w0
   2efb4:	add	w1, w0, #0x7
   2efb8:	cmp	w0, #0x0
   2efbc:	csel	w0, w1, w0, lt  // lt = tstop
   2efc0:	asr	w0, w0, #3
   2efc4:	sxtw	x0, w0
   2efc8:	mov	x2, x0
   2efcc:	mov	w1, #0x0                   	// #0
   2efd0:	mov	x0, x3
   2efd4:	bl	acb0 <memset@plt>
   2efd8:	b	2f098 <rpl_regfree@@Base+0xaa0>
   2efdc:	nop
   2efe0:	b	2f08c <rpl_regfree@@Base+0xa94>
   2efe4:	str	wzr, [sp, #72]
   2efe8:	b	2f074 <rpl_regfree@@Base+0xa7c>
   2efec:	bl	b090 <__ctype_b_loc@plt>
   2eff0:	ldr	x1, [x0]
   2eff4:	ldrsw	x0, [sp, #68]
   2eff8:	lsl	x0, x0, #1
   2effc:	add	x0, x1, x0
   2f000:	ldrh	w0, [x0]
   2f004:	and	w0, w0, #0x8
   2f008:	cmp	w0, #0x0
   2f00c:	b.ne	2f01c <rpl_regfree@@Base+0xa24>  // b.any
   2f010:	ldr	w0, [sp, #68]
   2f014:	cmp	w0, #0x5f
   2f018:	b.ne	2f05c <rpl_regfree@@Base+0xa64>  // b.any
   2f01c:	ldr	x1, [sp, #24]
   2f020:	ldrsw	x0, [sp, #76]
   2f024:	add	x0, x0, #0x16
   2f028:	lsl	x0, x0, #3
   2f02c:	add	x0, x1, x0
   2f030:	ldr	x1, [x0, #8]
   2f034:	ldr	w0, [sp, #72]
   2f038:	mov	x2, #0x1                   	// #1
   2f03c:	lsl	x0, x2, x0
   2f040:	orr	x1, x1, x0
   2f044:	ldr	x2, [sp, #24]
   2f048:	ldrsw	x0, [sp, #76]
   2f04c:	add	x0, x0, #0x16
   2f050:	lsl	x0, x0, #3
   2f054:	add	x0, x2, x0
   2f058:	str	x1, [x0, #8]
   2f05c:	ldr	w0, [sp, #72]
   2f060:	add	w0, w0, #0x1
   2f064:	str	w0, [sp, #72]
   2f068:	ldr	w0, [sp, #68]
   2f06c:	add	w0, w0, #0x1
   2f070:	str	w0, [sp, #68]
   2f074:	ldr	w0, [sp, #72]
   2f078:	cmp	w0, #0x3f
   2f07c:	b.le	2efec <rpl_regfree@@Base+0x9f4>
   2f080:	ldr	w0, [sp, #76]
   2f084:	add	w0, w0, #0x1
   2f088:	str	w0, [sp, #76]
   2f08c:	ldr	w0, [sp, #76]
   2f090:	cmp	w0, #0x3
   2f094:	b.le	2efe4 <rpl_regfree@@Base+0x9ec>
   2f098:	ldp	x29, x30, [sp], #80
   2f09c:	ret
   2f0a0:	stp	x29, x30, [sp, #-64]!
   2f0a4:	mov	x29, sp
   2f0a8:	str	x0, [sp, #24]
   2f0ac:	ldr	x0, [sp, #24]
   2f0b0:	ldr	x0, [x0]
   2f0b4:	str	x0, [sp, #48]
   2f0b8:	ldr	x0, [sp, #48]
   2f0bc:	ldr	x0, [x0, #112]
   2f0c0:	str	x0, [sp, #56]
   2f0c4:	b	2f0e4 <rpl_regfree@@Base+0xaec>
   2f0c8:	ldr	x0, [sp, #56]
   2f0cc:	ldr	x0, [x0]
   2f0d0:	str	x0, [sp, #40]
   2f0d4:	ldr	x0, [sp, #56]
   2f0d8:	bl	b130 <free@plt>
   2f0dc:	ldr	x0, [sp, #40]
   2f0e0:	str	x0, [sp, #56]
   2f0e4:	ldr	x0, [sp, #56]
   2f0e8:	cmp	x0, #0x0
   2f0ec:	b.ne	2f0c8 <rpl_regfree@@Base+0xad0>  // b.any
   2f0f0:	ldr	x0, [sp, #48]
   2f0f4:	str	xzr, [x0, #112]
   2f0f8:	ldr	x0, [sp, #48]
   2f0fc:	mov	w1, #0xf                   	// #15
   2f100:	str	w1, [x0, #128]
   2f104:	ldr	x0, [sp, #48]
   2f108:	str	xzr, [x0, #104]
   2f10c:	ldr	x0, [sp, #48]
   2f110:	ldr	x0, [x0, #32]
   2f114:	bl	b130 <free@plt>
   2f118:	ldr	x0, [sp, #48]
   2f11c:	str	xzr, [x0, #32]
   2f120:	nop
   2f124:	ldp	x29, x30, [sp], #64
   2f128:	ret
   2f12c:	stp	x29, x30, [sp, #-128]!
   2f130:	mov	x29, sp
   2f134:	str	x0, [sp, #24]
   2f138:	ldr	x0, [sp, #24]
   2f13c:	ldr	x0, [x0, #104]
   2f140:	ldr	x0, [x0, #24]
   2f144:	ldr	x0, [x0, #56]
   2f148:	str	x0, [sp, #104]
   2f14c:	ldr	x0, [sp, #24]
   2f150:	ldr	x1, [sp, #104]
   2f154:	str	x1, [x0, #144]
   2f158:	ldr	x0, [sp, #24]
   2f15c:	ldr	x2, [x0, #48]
   2f160:	ldr	x1, [sp, #104]
   2f164:	mov	x0, x1
   2f168:	lsl	x0, x0, #1
   2f16c:	add	x0, x0, x1
   2f170:	lsl	x0, x0, #3
   2f174:	add	x1, x2, x0
   2f178:	add	x0, sp, #0x28
   2f17c:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   2f180:	str	w0, [sp, #64]
   2f184:	ldr	w0, [sp, #64]
   2f188:	cmp	w0, #0x0
   2f18c:	cset	w0, ne  // ne = any
   2f190:	and	w0, w0, #0xff
   2f194:	and	x0, x0, #0xff
   2f198:	cmp	x0, #0x0
   2f19c:	b.eq	2f1a8 <rpl_regfree@@Base+0xbb0>  // b.none
   2f1a0:	ldr	w0, [sp, #64]
   2f1a4:	b	2f4e4 <rpl_regfree@@Base+0xeec>
   2f1a8:	ldr	x0, [sp, #24]
   2f1ac:	ldr	x0, [x0, #152]
   2f1b0:	cmp	x0, #0x0
   2f1b4:	b.le	2f358 <rpl_regfree@@Base+0xd60>
   2f1b8:	str	xzr, [sp, #120]
   2f1bc:	b	2f348 <rpl_regfree@@Base+0xd50>
   2f1c0:	ldr	x1, [sp, #56]
   2f1c4:	ldr	x0, [sp, #120]
   2f1c8:	lsl	x0, x0, #3
   2f1cc:	add	x0, x1, x0
   2f1d0:	ldr	x0, [x0]
   2f1d4:	str	x0, [sp, #96]
   2f1d8:	ldr	x0, [sp, #24]
   2f1dc:	ldr	x1, [x0]
   2f1e0:	ldr	x0, [sp, #96]
   2f1e4:	lsl	x0, x0, #4
   2f1e8:	add	x0, x1, x0
   2f1ec:	ldrb	w0, [x0, #8]
   2f1f0:	str	w0, [sp, #92]
   2f1f4:	ldr	w0, [sp, #92]
   2f1f8:	cmp	w0, #0x4
   2f1fc:	b.ne	2f330 <rpl_regfree@@Base+0xd38>  // b.any
   2f200:	str	xzr, [sp, #112]
   2f204:	b	2f274 <rpl_regfree@@Base+0xc7c>
   2f208:	ldr	x0, [sp, #24]
   2f20c:	ldr	x1, [x0]
   2f210:	ldr	x2, [sp, #56]
   2f214:	ldr	x0, [sp, #112]
   2f218:	lsl	x0, x0, #3
   2f21c:	add	x0, x2, x0
   2f220:	ldr	x0, [x0]
   2f224:	lsl	x0, x0, #4
   2f228:	add	x0, x1, x0
   2f22c:	str	x0, [sp, #80]
   2f230:	ldr	x0, [sp, #80]
   2f234:	ldrb	w0, [x0, #8]
   2f238:	cmp	w0, #0x9
   2f23c:	b.ne	2f268 <rpl_regfree@@Base+0xc70>  // b.any
   2f240:	ldr	x0, [sp, #80]
   2f244:	ldr	x1, [x0]
   2f248:	ldr	x0, [sp, #24]
   2f24c:	ldr	x2, [x0]
   2f250:	ldr	x0, [sp, #96]
   2f254:	lsl	x0, x0, #4
   2f258:	add	x0, x2, x0
   2f25c:	ldr	x0, [x0]
   2f260:	cmp	x1, x0
   2f264:	b.eq	2f288 <rpl_regfree@@Base+0xc90>  // b.none
   2f268:	ldr	x0, [sp, #112]
   2f26c:	add	x0, x0, #0x1
   2f270:	str	x0, [sp, #112]
   2f274:	ldr	x0, [sp, #48]
   2f278:	ldr	x1, [sp, #112]
   2f27c:	cmp	x1, x0
   2f280:	b.lt	2f208 <rpl_regfree@@Base+0xc10>  // b.tstop
   2f284:	b	2f28c <rpl_regfree@@Base+0xc94>
   2f288:	nop
   2f28c:	ldr	x0, [sp, #48]
   2f290:	ldr	x1, [sp, #112]
   2f294:	cmp	x1, x0
   2f298:	b.eq	2f338 <rpl_regfree@@Base+0xd40>  // b.none
   2f29c:	ldr	w0, [sp, #92]
   2f2a0:	cmp	w0, #0x4
   2f2a4:	b.ne	2f33c <rpl_regfree@@Base+0xd44>  // b.any
   2f2a8:	ldr	x0, [sp, #24]
   2f2ac:	ldr	x2, [x0, #40]
   2f2b0:	ldr	x1, [sp, #96]
   2f2b4:	mov	x0, x1
   2f2b8:	lsl	x0, x0, #1
   2f2bc:	add	x0, x0, x1
   2f2c0:	lsl	x0, x0, #3
   2f2c4:	add	x0, x2, x0
   2f2c8:	ldr	x0, [x0, #16]
   2f2cc:	ldr	x0, [x0]
   2f2d0:	str	x0, [sp, #72]
   2f2d4:	add	x0, sp, #0x28
   2f2d8:	ldr	x1, [sp, #72]
   2f2dc:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   2f2e0:	cmp	x0, #0x0
   2f2e4:	b.ne	2f33c <rpl_regfree@@Base+0xd44>  // b.any
   2f2e8:	ldr	x0, [sp, #24]
   2f2ec:	ldr	x2, [x0, #48]
   2f2f0:	ldr	x1, [sp, #72]
   2f2f4:	mov	x0, x1
   2f2f8:	lsl	x0, x0, #1
   2f2fc:	add	x0, x0, x1
   2f300:	lsl	x0, x0, #3
   2f304:	add	x1, x2, x0
   2f308:	add	x0, sp, #0x28
   2f30c:	bl	2bfa0 <printf_parse@@Base+0x4ca8>
   2f310:	str	w0, [sp, #68]
   2f314:	ldr	w0, [sp, #68]
   2f318:	cmp	w0, #0x0
   2f31c:	b.eq	2f328 <rpl_regfree@@Base+0xd30>  // b.none
   2f320:	ldr	w0, [sp, #68]
   2f324:	b	2f4e4 <rpl_regfree@@Base+0xeec>
   2f328:	str	xzr, [sp, #120]
   2f32c:	b	2f33c <rpl_regfree@@Base+0xd44>
   2f330:	nop
   2f334:	b	2f33c <rpl_regfree@@Base+0xd44>
   2f338:	nop
   2f33c:	ldr	x0, [sp, #120]
   2f340:	add	x0, x0, #0x1
   2f344:	str	x0, [sp, #120]
   2f348:	ldr	x0, [sp, #48]
   2f34c:	ldr	x1, [sp, #120]
   2f350:	cmp	x1, x0
   2f354:	b.lt	2f1c0 <rpl_regfree@@Base+0xbc8>  // b.tstop
   2f358:	add	x1, sp, #0x28
   2f35c:	add	x0, sp, #0x40
   2f360:	mov	w3, #0x0                   	// #0
   2f364:	mov	x2, x1
   2f368:	ldr	x1, [sp, #24]
   2f36c:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   2f370:	mov	x1, x0
   2f374:	ldr	x0, [sp, #24]
   2f378:	str	x1, [x0, #72]
   2f37c:	ldr	x0, [sp, #24]
   2f380:	ldr	x0, [x0, #72]
   2f384:	cmp	x0, #0x0
   2f388:	cset	w0, eq  // eq = none
   2f38c:	and	w0, w0, #0xff
   2f390:	and	x0, x0, #0xff
   2f394:	cmp	x0, #0x0
   2f398:	b.eq	2f3a4 <rpl_regfree@@Base+0xdac>  // b.none
   2f39c:	ldr	w0, [sp, #64]
   2f3a0:	b	2f4e4 <rpl_regfree@@Base+0xeec>
   2f3a4:	ldr	x0, [sp, #24]
   2f3a8:	ldr	x0, [x0, #72]
   2f3ac:	ldrb	w0, [x0, #104]
   2f3b0:	and	w0, w0, #0xffffff80
   2f3b4:	and	w0, w0, #0xff
   2f3b8:	cmp	w0, #0x0
   2f3bc:	b.eq	2f4a8 <rpl_regfree@@Base+0xeb0>  // b.none
   2f3c0:	add	x1, sp, #0x28
   2f3c4:	add	x0, sp, #0x40
   2f3c8:	mov	w3, #0x1                   	// #1
   2f3cc:	mov	x2, x1
   2f3d0:	ldr	x1, [sp, #24]
   2f3d4:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   2f3d8:	mov	x1, x0
   2f3dc:	ldr	x0, [sp, #24]
   2f3e0:	str	x1, [x0, #80]
   2f3e4:	add	x1, sp, #0x28
   2f3e8:	add	x0, sp, #0x40
   2f3ec:	mov	w3, #0x2                   	// #2
   2f3f0:	mov	x2, x1
   2f3f4:	ldr	x1, [sp, #24]
   2f3f8:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   2f3fc:	mov	x1, x0
   2f400:	ldr	x0, [sp, #24]
   2f404:	str	x1, [x0, #88]
   2f408:	add	x1, sp, #0x28
   2f40c:	add	x0, sp, #0x40
   2f410:	mov	w3, #0x6                   	// #6
   2f414:	mov	x2, x1
   2f418:	ldr	x1, [sp, #24]
   2f41c:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   2f420:	mov	x1, x0
   2f424:	ldr	x0, [sp, #24]
   2f428:	str	x1, [x0, #96]
   2f42c:	ldr	x0, [sp, #24]
   2f430:	ldr	x0, [x0, #80]
   2f434:	cmp	x0, #0x0
   2f438:	cset	w0, eq  // eq = none
   2f43c:	and	w0, w0, #0xff
   2f440:	and	x0, x0, #0xff
   2f444:	cmp	x0, #0x0
   2f448:	b.ne	2f46c <rpl_regfree@@Base+0xe74>  // b.any
   2f44c:	ldr	x0, [sp, #24]
   2f450:	ldr	x0, [x0, #88]
   2f454:	cmp	x0, #0x0
   2f458:	cset	w0, eq  // eq = none
   2f45c:	and	w0, w0, #0xff
   2f460:	and	x0, x0, #0xff
   2f464:	cmp	x0, #0x0
   2f468:	b.eq	2f474 <rpl_regfree@@Base+0xe7c>  // b.none
   2f46c:	mov	w0, #0x1                   	// #1
   2f470:	b	2f478 <rpl_regfree@@Base+0xe80>
   2f474:	mov	w0, #0x0                   	// #0
   2f478:	cmp	w0, #0x0
   2f47c:	b.ne	2f4a0 <rpl_regfree@@Base+0xea8>  // b.any
   2f480:	ldr	x0, [sp, #24]
   2f484:	ldr	x0, [x0, #96]
   2f488:	cmp	x0, #0x0
   2f48c:	cset	w0, eq  // eq = none
   2f490:	and	w0, w0, #0xff
   2f494:	and	x0, x0, #0xff
   2f498:	cmp	x0, #0x0
   2f49c:	b.eq	2f4d8 <rpl_regfree@@Base+0xee0>  // b.none
   2f4a0:	ldr	w0, [sp, #64]
   2f4a4:	b	2f4e4 <rpl_regfree@@Base+0xeec>
   2f4a8:	ldr	x0, [sp, #24]
   2f4ac:	ldr	x1, [x0, #72]
   2f4b0:	ldr	x0, [sp, #24]
   2f4b4:	str	x1, [x0, #96]
   2f4b8:	ldr	x0, [sp, #24]
   2f4bc:	ldr	x1, [x0, #96]
   2f4c0:	ldr	x0, [sp, #24]
   2f4c4:	str	x1, [x0, #88]
   2f4c8:	ldr	x0, [sp, #24]
   2f4cc:	ldr	x1, [x0, #88]
   2f4d0:	ldr	x0, [sp, #24]
   2f4d4:	str	x1, [x0, #80]
   2f4d8:	ldr	x0, [sp, #56]
   2f4dc:	bl	b130 <free@plt>
   2f4e0:	mov	w0, #0x0                   	// #0
   2f4e4:	ldp	x29, x30, [sp], #128
   2f4e8:	ret
   2f4ec:	stp	x29, x30, [sp, #-64]!
   2f4f0:	mov	x29, sp
   2f4f4:	str	x0, [sp, #24]
   2f4f8:	strb	wzr, [sp, #51]
   2f4fc:	strb	wzr, [sp, #50]
   2f500:	str	xzr, [sp, #56]
   2f504:	b	2f6bc <rpl_regfree@@Base+0x10c4>
   2f508:	ldr	x0, [sp, #24]
   2f50c:	ldr	x1, [x0]
   2f510:	ldr	x0, [sp, #56]
   2f514:	lsl	x0, x0, #4
   2f518:	add	x0, x1, x0
   2f51c:	ldrb	w0, [x0, #8]
   2f520:	cmp	w0, #0xc
   2f524:	b.eq	2f5c4 <rpl_regfree@@Base+0xfcc>  // b.none
   2f528:	cmp	w0, #0xc
   2f52c:	b.gt	2f6a0 <rpl_regfree@@Base+0x10a8>
   2f530:	cmp	w0, #0xb
   2f534:	b.gt	2f6a0 <rpl_regfree@@Base+0x10a8>
   2f538:	cmp	w0, #0x8
   2f53c:	b.ge	2f6a4 <rpl_regfree@@Base+0x10ac>  // b.tcont
   2f540:	cmp	w0, #0x6
   2f544:	b.eq	2f814 <rpl_regfree@@Base+0x121c>  // b.none
   2f548:	cmp	w0, #0x6
   2f54c:	b.gt	2f6a0 <rpl_regfree@@Base+0x10a8>
   2f550:	cmp	w0, #0x5
   2f554:	b.eq	2f62c <rpl_regfree@@Base+0x1034>  // b.none
   2f558:	cmp	w0, #0x5
   2f55c:	b.gt	2f6a0 <rpl_regfree@@Base+0x10a8>
   2f560:	cmp	w0, #0x4
   2f564:	b.eq	2f6a4 <rpl_regfree@@Base+0x10ac>  // b.none
   2f568:	cmp	w0, #0x4
   2f56c:	b.gt	2f6a0 <rpl_regfree@@Base+0x10a8>
   2f570:	cmp	w0, #0x3
   2f574:	b.eq	2f638 <rpl_regfree@@Base+0x1040>  // b.none
   2f578:	cmp	w0, #0x3
   2f57c:	b.gt	2f6a0 <rpl_regfree@@Base+0x10a8>
   2f580:	cmp	w0, #0x1
   2f584:	b.eq	2f594 <rpl_regfree@@Base+0xf9c>  // b.none
   2f588:	cmp	w0, #0x2
   2f58c:	b.eq	2f6a4 <rpl_regfree@@Base+0x10ac>  // b.none
   2f590:	b	2f6a0 <rpl_regfree@@Base+0x10a8>
   2f594:	ldr	x0, [sp, #24]
   2f598:	ldr	x1, [x0]
   2f59c:	ldr	x0, [sp, #56]
   2f5a0:	lsl	x0, x0, #4
   2f5a4:	add	x0, x1, x0
   2f5a8:	ldrb	w0, [x0]
   2f5ac:	sxtb	w0, w0
   2f5b0:	cmp	w0, #0x0
   2f5b4:	b.ge	2f6ac <rpl_regfree@@Base+0x10b4>  // b.tcont
   2f5b8:	mov	w0, #0x1                   	// #1
   2f5bc:	strb	w0, [sp, #51]
   2f5c0:	b	2f6ac <rpl_regfree@@Base+0x10b4>
   2f5c4:	ldr	x0, [sp, #24]
   2f5c8:	ldr	x1, [x0]
   2f5cc:	ldr	x0, [sp, #56]
   2f5d0:	lsl	x0, x0, #4
   2f5d4:	add	x0, x1, x0
   2f5d8:	ldr	w0, [x0]
   2f5dc:	cmp	w0, #0x40
   2f5e0:	b.hi	2f61c <rpl_regfree@@Base+0x1024>  // b.pmore
   2f5e4:	cmp	w0, #0x10
   2f5e8:	b.cc	2f81c <rpl_regfree@@Base+0x1224>  // b.lo, b.ul, b.last
   2f5ec:	sub	w0, w0, #0x10
   2f5f0:	mov	x1, #0x1                   	// #1
   2f5f4:	lsl	x1, x1, x0
   2f5f8:	mov	w0, #0x10001               	// #65537
   2f5fc:	movk	x0, #0x1, lsl #48
   2f600:	and	x0, x1, x0
   2f604:	cmp	x0, #0x0
   2f608:	cset	w0, ne  // ne = any
   2f60c:	and	w0, w0, #0xff
   2f610:	cmp	w0, #0x0
   2f614:	b.ne	2f624 <rpl_regfree@@Base+0x102c>  // b.any
   2f618:	b	2f81c <rpl_regfree@@Base+0x1224>
   2f61c:	cmp	w0, #0x80
   2f620:	b.ne	2f81c <rpl_regfree@@Base+0x1224>  // b.any
   2f624:	nop
   2f628:	b	2f6b0 <rpl_regfree@@Base+0x10b8>
   2f62c:	mov	w0, #0x1                   	// #1
   2f630:	strb	w0, [sp, #50]
   2f634:	b	2f6b0 <rpl_regfree@@Base+0x10b8>
   2f638:	str	wzr, [sp, #44]
   2f63c:	mov	w0, #0x2                   	// #2
   2f640:	str	w0, [sp, #52]
   2f644:	b	2f690 <rpl_regfree@@Base+0x1098>
   2f648:	ldr	x0, [sp, #24]
   2f64c:	ldr	x1, [x0]
   2f650:	ldr	x0, [sp, #56]
   2f654:	lsl	x0, x0, #4
   2f658:	add	x0, x1, x0
   2f65c:	ldr	x1, [x0]
   2f660:	ldrsw	x0, [sp, #52]
   2f664:	lsl	x0, x0, #3
   2f668:	add	x0, x1, x0
   2f66c:	ldr	x1, [x0]
   2f670:	ldr	w0, [sp, #44]
   2f674:	lsr	x0, x1, x0
   2f678:	cmp	x0, #0x0
   2f67c:	b.ne	2f824 <rpl_regfree@@Base+0x122c>  // b.any
   2f680:	str	wzr, [sp, #44]
   2f684:	ldr	w0, [sp, #52]
   2f688:	add	w0, w0, #0x1
   2f68c:	str	w0, [sp, #52]
   2f690:	ldr	w0, [sp, #52]
   2f694:	cmp	w0, #0x3
   2f698:	b.le	2f648 <rpl_regfree@@Base+0x1050>
   2f69c:	b	2f6b0 <rpl_regfree@@Base+0x10b8>
   2f6a0:	bl	af70 <abort@plt>
   2f6a4:	nop
   2f6a8:	b	2f6b0 <rpl_regfree@@Base+0x10b8>
   2f6ac:	nop
   2f6b0:	ldr	x0, [sp, #56]
   2f6b4:	add	x0, x0, #0x1
   2f6b8:	str	x0, [sp, #56]
   2f6bc:	ldr	x0, [sp, #24]
   2f6c0:	ldr	x1, [x0, #16]
   2f6c4:	ldr	x0, [sp, #56]
   2f6c8:	cmp	x1, x0
   2f6cc:	b.hi	2f508 <rpl_regfree@@Base+0xf10>  // b.pmore
   2f6d0:	ldrb	w0, [sp, #51]
   2f6d4:	cmp	w0, #0x0
   2f6d8:	b.ne	2f6e8 <rpl_regfree@@Base+0x10f0>  // b.any
   2f6dc:	ldrb	w0, [sp, #50]
   2f6e0:	cmp	w0, #0x0
   2f6e4:	b.eq	2f7b4 <rpl_regfree@@Base+0x11bc>  // b.none
   2f6e8:	str	xzr, [sp, #56]
   2f6ec:	b	2f7a0 <rpl_regfree@@Base+0x11a8>
   2f6f0:	ldr	x0, [sp, #24]
   2f6f4:	ldr	x1, [x0]
   2f6f8:	ldr	x0, [sp, #56]
   2f6fc:	lsl	x0, x0, #4
   2f700:	add	x0, x1, x0
   2f704:	ldrb	w0, [x0, #8]
   2f708:	cmp	w0, #0x1
   2f70c:	b.ne	2f758 <rpl_regfree@@Base+0x1160>  // b.any
   2f710:	ldr	x0, [sp, #24]
   2f714:	ldr	x1, [x0]
   2f718:	ldr	x0, [sp, #56]
   2f71c:	lsl	x0, x0, #4
   2f720:	add	x0, x1, x0
   2f724:	ldrb	w0, [x0]
   2f728:	sxtb	w0, w0
   2f72c:	cmp	w0, #0x0
   2f730:	b.ge	2f758 <rpl_regfree@@Base+0x1160>  // b.tcont
   2f734:	ldr	x0, [sp, #24]
   2f738:	ldr	x1, [x0]
   2f73c:	ldr	x0, [sp, #56]
   2f740:	lsl	x0, x0, #4
   2f744:	add	x0, x1, x0
   2f748:	ldrb	w1, [x0, #10]
   2f74c:	and	w1, w1, #0xffffffdf
   2f750:	strb	w1, [x0, #10]
   2f754:	b	2f794 <rpl_regfree@@Base+0x119c>
   2f758:	ldr	x0, [sp, #24]
   2f75c:	ldr	x1, [x0]
   2f760:	ldr	x0, [sp, #56]
   2f764:	lsl	x0, x0, #4
   2f768:	add	x0, x1, x0
   2f76c:	ldrb	w0, [x0, #8]
   2f770:	cmp	w0, #0x5
   2f774:	b.ne	2f794 <rpl_regfree@@Base+0x119c>  // b.any
   2f778:	ldr	x0, [sp, #24]
   2f77c:	ldr	x1, [x0]
   2f780:	ldr	x0, [sp, #56]
   2f784:	lsl	x0, x0, #4
   2f788:	add	x0, x1, x0
   2f78c:	mov	w1, #0x7                   	// #7
   2f790:	strb	w1, [x0, #8]
   2f794:	ldr	x0, [sp, #56]
   2f798:	add	x0, x0, #0x1
   2f79c:	str	x0, [sp, #56]
   2f7a0:	ldr	x0, [sp, #24]
   2f7a4:	ldr	x1, [x0, #16]
   2f7a8:	ldr	x0, [sp, #56]
   2f7ac:	cmp	x1, x0
   2f7b0:	b.hi	2f6f0 <rpl_regfree@@Base+0x10f8>  // b.pmore
   2f7b4:	ldr	x0, [sp, #24]
   2f7b8:	mov	w1, #0x1                   	// #1
   2f7bc:	str	w1, [x0, #180]
   2f7c0:	ldr	x0, [sp, #24]
   2f7c4:	ldrb	w1, [x0, #176]
   2f7c8:	and	w1, w1, #0xfffffffb
   2f7cc:	strb	w1, [x0, #176]
   2f7d0:	ldr	x0, [sp, #24]
   2f7d4:	ldr	x0, [x0, #152]
   2f7d8:	cmp	x0, #0x0
   2f7dc:	b.gt	2f7ec <rpl_regfree@@Base+0x11f4>
   2f7e0:	ldrb	w0, [sp, #50]
   2f7e4:	cmp	w0, #0x0
   2f7e8:	b.eq	2f7f4 <rpl_regfree@@Base+0x11fc>  // b.none
   2f7ec:	mov	w0, #0x1                   	// #1
   2f7f0:	b	2f7f8 <rpl_regfree@@Base+0x1200>
   2f7f4:	mov	w0, #0x0                   	// #0
   2f7f8:	and	w0, w0, #0x1
   2f7fc:	and	w2, w0, #0xff
   2f800:	ldr	x1, [sp, #24]
   2f804:	ldrb	w0, [x1, #176]
   2f808:	bfi	w0, w2, #1, #1
   2f80c:	strb	w0, [x1, #176]
   2f810:	b	2f828 <rpl_regfree@@Base+0x1230>
   2f814:	nop
   2f818:	b	2f828 <rpl_regfree@@Base+0x1230>
   2f81c:	nop
   2f820:	b	2f828 <rpl_regfree@@Base+0x1230>
   2f824:	nop
   2f828:	ldp	x29, x30, [sp], #64
   2f82c:	ret
   2f830:	stp	x29, x30, [sp, #-64]!
   2f834:	mov	x29, sp
   2f838:	str	x0, [sp, #24]
   2f83c:	ldr	x0, [sp, #24]
   2f840:	ldr	x0, [x0]
   2f844:	str	x0, [sp, #40]
   2f848:	ldr	x0, [sp, #40]
   2f84c:	ldr	x0, [x0, #8]
   2f850:	lsl	x0, x0, #3
   2f854:	bl	ab40 <malloc@plt>
   2f858:	mov	x1, x0
   2f85c:	ldr	x0, [sp, #40]
   2f860:	str	x1, [x0, #24]
   2f864:	ldr	x0, [sp, #40]
   2f868:	ldr	x0, [x0, #8]
   2f86c:	lsl	x0, x0, #3
   2f870:	bl	ab40 <malloc@plt>
   2f874:	mov	x1, x0
   2f878:	ldr	x0, [sp, #40]
   2f87c:	str	x1, [x0, #32]
   2f880:	ldr	x0, [sp, #40]
   2f884:	ldr	x1, [x0, #8]
   2f888:	mov	x0, x1
   2f88c:	lsl	x0, x0, #1
   2f890:	add	x0, x0, x1
   2f894:	lsl	x0, x0, #3
   2f898:	bl	ab40 <malloc@plt>
   2f89c:	mov	x1, x0
   2f8a0:	ldr	x0, [sp, #40]
   2f8a4:	str	x1, [x0, #40]
   2f8a8:	ldr	x0, [sp, #40]
   2f8ac:	ldr	x1, [x0, #8]
   2f8b0:	mov	x0, x1
   2f8b4:	lsl	x0, x0, #1
   2f8b8:	add	x0, x0, x1
   2f8bc:	lsl	x0, x0, #3
   2f8c0:	bl	ab40 <malloc@plt>
   2f8c4:	mov	x1, x0
   2f8c8:	ldr	x0, [sp, #40]
   2f8cc:	str	x1, [x0, #48]
   2f8d0:	ldr	x0, [sp, #40]
   2f8d4:	ldr	x0, [x0, #24]
   2f8d8:	cmp	x0, #0x0
   2f8dc:	cset	w0, eq  // eq = none
   2f8e0:	and	w0, w0, #0xff
   2f8e4:	and	x0, x0, #0xff
   2f8e8:	cmp	x0, #0x0
   2f8ec:	b.ne	2f910 <rpl_regfree@@Base+0x1318>  // b.any
   2f8f0:	ldr	x0, [sp, #40]
   2f8f4:	ldr	x0, [x0, #32]
   2f8f8:	cmp	x0, #0x0
   2f8fc:	cset	w0, eq  // eq = none
   2f900:	and	w0, w0, #0xff
   2f904:	and	x0, x0, #0xff
   2f908:	cmp	x0, #0x0
   2f90c:	b.eq	2f918 <rpl_regfree@@Base+0x1320>  // b.none
   2f910:	mov	w0, #0x1                   	// #1
   2f914:	b	2f91c <rpl_regfree@@Base+0x1324>
   2f918:	mov	w0, #0x0                   	// #0
   2f91c:	cmp	w0, #0x0
   2f920:	b.ne	2f944 <rpl_regfree@@Base+0x134c>  // b.any
   2f924:	ldr	x0, [sp, #40]
   2f928:	ldr	x0, [x0, #40]
   2f92c:	cmp	x0, #0x0
   2f930:	cset	w0, eq  // eq = none
   2f934:	and	w0, w0, #0xff
   2f938:	and	x0, x0, #0xff
   2f93c:	cmp	x0, #0x0
   2f940:	b.eq	2f94c <rpl_regfree@@Base+0x1354>  // b.none
   2f944:	mov	w0, #0x1                   	// #1
   2f948:	b	2f950 <rpl_regfree@@Base+0x1358>
   2f94c:	mov	w0, #0x0                   	// #0
   2f950:	cmp	w0, #0x0
   2f954:	b.ne	2f978 <rpl_regfree@@Base+0x1380>  // b.any
   2f958:	ldr	x0, [sp, #40]
   2f95c:	ldr	x0, [x0, #48]
   2f960:	cmp	x0, #0x0
   2f964:	cset	w0, eq  // eq = none
   2f968:	and	w0, w0, #0xff
   2f96c:	and	x0, x0, #0xff
   2f970:	cmp	x0, #0x0
   2f974:	b.eq	2f980 <rpl_regfree@@Base+0x1388>  // b.none
   2f978:	mov	w0, #0xc                   	// #12
   2f97c:	b	2fc50 <rpl_regfree@@Base+0x1658>
   2f980:	ldr	x0, [sp, #24]
   2f984:	ldr	x0, [x0, #48]
   2f988:	lsl	x0, x0, #3
   2f98c:	bl	ab40 <malloc@plt>
   2f990:	mov	x1, x0
   2f994:	ldr	x0, [sp, #40]
   2f998:	str	x1, [x0, #224]
   2f99c:	ldr	x0, [sp, #40]
   2f9a0:	ldr	x0, [x0, #224]
   2f9a4:	cmp	x0, #0x0
   2f9a8:	b.eq	2fa88 <rpl_regfree@@Base+0x1490>  // b.none
   2f9ac:	str	xzr, [sp, #48]
   2f9b0:	b	2f9dc <rpl_regfree@@Base+0x13e4>
   2f9b4:	ldr	x0, [sp, #40]
   2f9b8:	ldr	x1, [x0, #224]
   2f9bc:	ldr	x0, [sp, #48]
   2f9c0:	lsl	x0, x0, #3
   2f9c4:	add	x0, x1, x0
   2f9c8:	ldr	x1, [sp, #48]
   2f9cc:	str	x1, [x0]
   2f9d0:	ldr	x0, [sp, #48]
   2f9d4:	add	x0, x0, #0x1
   2f9d8:	str	x0, [sp, #48]
   2f9dc:	ldr	x0, [sp, #24]
   2f9e0:	ldr	x1, [x0, #48]
   2f9e4:	ldr	x0, [sp, #48]
   2f9e8:	cmp	x1, x0
   2f9ec:	b.hi	2f9b4 <rpl_regfree@@Base+0x13bc>  // b.pmore
   2f9f0:	ldr	x0, [sp, #40]
   2f9f4:	ldr	x3, [x0, #104]
   2f9f8:	ldr	x2, [sp, #40]
   2f9fc:	adrp	x0, 2f000 <rpl_regfree@@Base+0xa08>
   2fa00:	add	x1, x0, #0xe44
   2fa04:	mov	x0, x3
   2fa08:	bl	2fd64 <rpl_regfree@@Base+0x176c>
   2fa0c:	str	xzr, [sp, #48]
   2fa10:	b	2fa44 <rpl_regfree@@Base+0x144c>
   2fa14:	ldr	x0, [sp, #40]
   2fa18:	ldr	x1, [x0, #224]
   2fa1c:	ldr	x0, [sp, #48]
   2fa20:	lsl	x0, x0, #3
   2fa24:	add	x0, x1, x0
   2fa28:	ldr	x0, [x0]
   2fa2c:	ldr	x1, [sp, #48]
   2fa30:	cmp	x1, x0
   2fa34:	b.ne	2fa5c <rpl_regfree@@Base+0x1464>  // b.any
   2fa38:	ldr	x0, [sp, #48]
   2fa3c:	add	x0, x0, #0x1
   2fa40:	str	x0, [sp, #48]
   2fa44:	ldr	x0, [sp, #24]
   2fa48:	ldr	x1, [x0, #48]
   2fa4c:	ldr	x0, [sp, #48]
   2fa50:	cmp	x1, x0
   2fa54:	b.hi	2fa14 <rpl_regfree@@Base+0x141c>  // b.pmore
   2fa58:	b	2fa60 <rpl_regfree@@Base+0x1468>
   2fa5c:	nop
   2fa60:	ldr	x0, [sp, #24]
   2fa64:	ldr	x1, [x0, #48]
   2fa68:	ldr	x0, [sp, #48]
   2fa6c:	cmp	x1, x0
   2fa70:	b.ne	2fa88 <rpl_regfree@@Base+0x1490>  // b.any
   2fa74:	ldr	x0, [sp, #40]
   2fa78:	ldr	x0, [x0, #224]
   2fa7c:	bl	b130 <free@plt>
   2fa80:	ldr	x0, [sp, #40]
   2fa84:	str	xzr, [x0, #224]
   2fa88:	ldr	x0, [sp, #40]
   2fa8c:	ldr	x3, [x0, #104]
   2fa90:	ldr	x2, [sp, #24]
   2fa94:	adrp	x0, 2f000 <rpl_regfree@@Base+0xa08>
   2fa98:	add	x1, x0, #0xfc0
   2fa9c:	mov	x0, x3
   2faa0:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   2faa4:	str	w0, [sp, #60]
   2faa8:	ldr	w0, [sp, #60]
   2faac:	cmp	w0, #0x0
   2fab0:	cset	w0, ne  // ne = any
   2fab4:	and	w0, w0, #0xff
   2fab8:	and	x0, x0, #0xff
   2fabc:	cmp	x0, #0x0
   2fac0:	b.eq	2facc <rpl_regfree@@Base+0x14d4>  // b.none
   2fac4:	ldr	w0, [sp, #60]
   2fac8:	b	2fc50 <rpl_regfree@@Base+0x1658>
   2facc:	ldr	x0, [sp, #40]
   2fad0:	ldr	x3, [x0, #104]
   2fad4:	ldr	x2, [sp, #40]
   2fad8:	adrp	x0, 30000 <rpl_regfree@@Base+0x1a08>
   2fadc:	add	x1, x0, #0x2d4
   2fae0:	mov	x0, x3
   2fae4:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   2fae8:	str	w0, [sp, #60]
   2faec:	ldr	w0, [sp, #60]
   2faf0:	cmp	w0, #0x0
   2faf4:	cset	w0, ne  // ne = any
   2faf8:	and	w0, w0, #0xff
   2fafc:	and	x0, x0, #0xff
   2fb00:	cmp	x0, #0x0
   2fb04:	b.eq	2fb10 <rpl_regfree@@Base+0x1518>  // b.none
   2fb08:	ldr	w0, [sp, #60]
   2fb0c:	b	2fc50 <rpl_regfree@@Base+0x1658>
   2fb10:	ldr	x0, [sp, #40]
   2fb14:	ldr	x3, [x0, #104]
   2fb18:	ldr	x2, [sp, #40]
   2fb1c:	adrp	x0, 30000 <rpl_regfree@@Base+0x1a08>
   2fb20:	add	x1, x0, #0x3cc
   2fb24:	mov	x0, x3
   2fb28:	bl	2fd64 <rpl_regfree@@Base+0x176c>
   2fb2c:	ldr	x0, [sp, #40]
   2fb30:	ldr	x3, [x0, #104]
   2fb34:	ldr	x2, [sp, #40]
   2fb38:	adrp	x0, 30000 <rpl_regfree@@Base+0x1a08>
   2fb3c:	add	x1, x0, #0x490
   2fb40:	mov	x0, x3
   2fb44:	bl	2fd64 <rpl_regfree@@Base+0x176c>
   2fb48:	str	w0, [sp, #60]
   2fb4c:	ldr	w0, [sp, #60]
   2fb50:	cmp	w0, #0x0
   2fb54:	cset	w0, ne  // ne = any
   2fb58:	and	w0, w0, #0xff
   2fb5c:	and	x0, x0, #0xff
   2fb60:	cmp	x0, #0x0
   2fb64:	b.eq	2fb70 <rpl_regfree@@Base+0x1578>  // b.none
   2fb68:	ldr	w0, [sp, #60]
   2fb6c:	b	2fc50 <rpl_regfree@@Base+0x1658>
   2fb70:	ldr	x0, [sp, #40]
   2fb74:	bl	31080 <rpl_regfree@@Base+0x2a88>
   2fb78:	str	w0, [sp, #60]
   2fb7c:	ldr	w0, [sp, #60]
   2fb80:	cmp	w0, #0x0
   2fb84:	cset	w0, ne  // ne = any
   2fb88:	and	w0, w0, #0xff
   2fb8c:	and	x0, x0, #0xff
   2fb90:	cmp	x0, #0x0
   2fb94:	b.eq	2fba0 <rpl_regfree@@Base+0x15a8>  // b.none
   2fb98:	ldr	w0, [sp, #60]
   2fb9c:	b	2fc50 <rpl_regfree@@Base+0x1658>
   2fba0:	ldr	x0, [sp, #24]
   2fba4:	ldrb	w0, [x0, #56]
   2fba8:	and	w0, w0, #0x10
   2fbac:	and	w0, w0, #0xff
   2fbb0:	cmp	w0, #0x0
   2fbb4:	b.ne	2fbe0 <rpl_regfree@@Base+0x15e8>  // b.any
   2fbb8:	ldr	x0, [sp, #24]
   2fbbc:	ldr	x0, [x0, #48]
   2fbc0:	cmp	x0, #0x0
   2fbc4:	b.eq	2fbe0 <rpl_regfree@@Base+0x15e8>  // b.none
   2fbc8:	ldr	x0, [sp, #40]
   2fbcc:	ldrb	w0, [x0, #176]
   2fbd0:	and	w0, w0, #0x1
   2fbd4:	and	w0, w0, #0xff
   2fbd8:	cmp	w0, #0x0
   2fbdc:	b.ne	2fbf0 <rpl_regfree@@Base+0x15f8>  // b.any
   2fbe0:	ldr	x0, [sp, #40]
   2fbe4:	ldr	x0, [x0, #152]
   2fbe8:	cmp	x0, #0x0
   2fbec:	b.eq	2fc4c <rpl_regfree@@Base+0x1654>  // b.none
   2fbf0:	ldr	x0, [sp, #40]
   2fbf4:	ldr	x1, [x0, #16]
   2fbf8:	mov	x0, x1
   2fbfc:	lsl	x0, x0, #1
   2fc00:	add	x0, x0, x1
   2fc04:	lsl	x0, x0, #3
   2fc08:	bl	ab40 <malloc@plt>
   2fc0c:	mov	x1, x0
   2fc10:	ldr	x0, [sp, #40]
   2fc14:	str	x1, [x0, #56]
   2fc18:	ldr	x0, [sp, #40]
   2fc1c:	ldr	x0, [x0, #56]
   2fc20:	cmp	x0, #0x0
   2fc24:	cset	w0, eq  // eq = none
   2fc28:	and	w0, w0, #0xff
   2fc2c:	and	x0, x0, #0xff
   2fc30:	cmp	x0, #0x0
   2fc34:	b.eq	2fc40 <rpl_regfree@@Base+0x1648>  // b.none
   2fc38:	mov	w0, #0xc                   	// #12
   2fc3c:	b	2fc50 <rpl_regfree@@Base+0x1658>
   2fc40:	ldr	x0, [sp, #40]
   2fc44:	bl	30f20 <rpl_regfree@@Base+0x2928>
   2fc48:	str	w0, [sp, #60]
   2fc4c:	ldr	w0, [sp, #60]
   2fc50:	ldp	x29, x30, [sp], #64
   2fc54:	ret
   2fc58:	stp	x29, x30, [sp, #-80]!
   2fc5c:	mov	x29, sp
   2fc60:	str	x0, [sp, #40]
   2fc64:	str	x1, [sp, #32]
   2fc68:	str	x2, [sp, #24]
   2fc6c:	ldr	x0, [sp, #40]
   2fc70:	str	x0, [sp, #72]
   2fc74:	b	2fca4 <rpl_regfree@@Base+0x16ac>
   2fc78:	ldr	x0, [sp, #72]
   2fc7c:	ldr	x0, [x0, #8]
   2fc80:	cmp	x0, #0x0
   2fc84:	b.eq	2fc98 <rpl_regfree@@Base+0x16a0>  // b.none
   2fc88:	ldr	x0, [sp, #72]
   2fc8c:	ldr	x0, [x0, #8]
   2fc90:	str	x0, [sp, #72]
   2fc94:	b	2fca4 <rpl_regfree@@Base+0x16ac>
   2fc98:	ldr	x0, [sp, #72]
   2fc9c:	ldr	x0, [x0, #16]
   2fca0:	str	x0, [sp, #72]
   2fca4:	ldr	x0, [sp, #72]
   2fca8:	ldr	x0, [x0, #8]
   2fcac:	cmp	x0, #0x0
   2fcb0:	b.ne	2fc78 <rpl_regfree@@Base+0x1680>  // b.any
   2fcb4:	ldr	x0, [sp, #72]
   2fcb8:	ldr	x0, [x0, #16]
   2fcbc:	cmp	x0, #0x0
   2fcc0:	b.ne	2fc78 <rpl_regfree@@Base+0x1680>  // b.any
   2fcc4:	ldr	x2, [sp, #32]
   2fcc8:	ldr	x1, [sp, #72]
   2fccc:	ldr	x0, [sp, #24]
   2fcd0:	blr	x2
   2fcd4:	str	w0, [sp, #68]
   2fcd8:	ldr	w0, [sp, #68]
   2fcdc:	cmp	w0, #0x0
   2fce0:	cset	w0, ne  // ne = any
   2fce4:	and	w0, w0, #0xff
   2fce8:	and	x0, x0, #0xff
   2fcec:	cmp	x0, #0x0
   2fcf0:	b.eq	2fcfc <rpl_regfree@@Base+0x1704>  // b.none
   2fcf4:	ldr	w0, [sp, #68]
   2fcf8:	b	2fd5c <rpl_regfree@@Base+0x1764>
   2fcfc:	ldr	x0, [sp, #72]
   2fd00:	ldr	x0, [x0]
   2fd04:	cmp	x0, #0x0
   2fd08:	b.ne	2fd14 <rpl_regfree@@Base+0x171c>  // b.any
   2fd0c:	mov	w0, #0x0                   	// #0
   2fd10:	b	2fd5c <rpl_regfree@@Base+0x1764>
   2fd14:	ldr	x0, [sp, #72]
   2fd18:	str	x0, [sp, #56]
   2fd1c:	ldr	x0, [sp, #72]
   2fd20:	ldr	x0, [x0]
   2fd24:	str	x0, [sp, #72]
   2fd28:	ldr	x0, [sp, #72]
   2fd2c:	ldr	x0, [x0, #16]
   2fd30:	ldr	x1, [sp, #56]
   2fd34:	cmp	x1, x0
   2fd38:	b.eq	2fcc4 <rpl_regfree@@Base+0x16cc>  // b.none
   2fd3c:	ldr	x0, [sp, #72]
   2fd40:	ldr	x0, [x0, #16]
   2fd44:	cmp	x0, #0x0
   2fd48:	b.eq	2fcc4 <rpl_regfree@@Base+0x16cc>  // b.none
   2fd4c:	ldr	x0, [sp, #72]
   2fd50:	ldr	x0, [x0, #16]
   2fd54:	str	x0, [sp, #72]
   2fd58:	b	2fca4 <rpl_regfree@@Base+0x16ac>
   2fd5c:	ldp	x29, x30, [sp], #80
   2fd60:	ret
   2fd64:	stp	x29, x30, [sp, #-80]!
   2fd68:	mov	x29, sp
   2fd6c:	str	x0, [sp, #40]
   2fd70:	str	x1, [sp, #32]
   2fd74:	str	x2, [sp, #24]
   2fd78:	ldr	x0, [sp, #40]
   2fd7c:	str	x0, [sp, #72]
   2fd80:	ldr	x2, [sp, #32]
   2fd84:	ldr	x1, [sp, #72]
   2fd88:	ldr	x0, [sp, #24]
   2fd8c:	blr	x2
   2fd90:	str	w0, [sp, #60]
   2fd94:	ldr	w0, [sp, #60]
   2fd98:	cmp	w0, #0x0
   2fd9c:	cset	w0, ne  // ne = any
   2fda0:	and	w0, w0, #0xff
   2fda4:	and	x0, x0, #0xff
   2fda8:	cmp	x0, #0x0
   2fdac:	b.eq	2fdb8 <rpl_regfree@@Base+0x17c0>  // b.none
   2fdb0:	ldr	w0, [sp, #60]
   2fdb4:	b	2fe3c <rpl_regfree@@Base+0x1844>
   2fdb8:	ldr	x0, [sp, #72]
   2fdbc:	ldr	x0, [x0, #8]
   2fdc0:	cmp	x0, #0x0
   2fdc4:	b.eq	2fdd8 <rpl_regfree@@Base+0x17e0>  // b.none
   2fdc8:	ldr	x0, [sp, #72]
   2fdcc:	ldr	x0, [x0, #8]
   2fdd0:	str	x0, [sp, #72]
   2fdd4:	b	2fd80 <rpl_regfree@@Base+0x1788>
   2fdd8:	str	xzr, [sp, #64]
   2fddc:	b	2fe08 <rpl_regfree@@Base+0x1810>
   2fde0:	ldr	x0, [sp, #72]
   2fde4:	str	x0, [sp, #64]
   2fde8:	ldr	x0, [sp, #72]
   2fdec:	ldr	x0, [x0]
   2fdf0:	str	x0, [sp, #72]
   2fdf4:	ldr	x0, [sp, #72]
   2fdf8:	cmp	x0, #0x0
   2fdfc:	b.ne	2fe08 <rpl_regfree@@Base+0x1810>  // b.any
   2fe00:	mov	w0, #0x0                   	// #0
   2fe04:	b	2fe3c <rpl_regfree@@Base+0x1844>
   2fe08:	ldr	x0, [sp, #72]
   2fe0c:	ldr	x0, [x0, #16]
   2fe10:	ldr	x1, [sp, #64]
   2fe14:	cmp	x1, x0
   2fe18:	b.eq	2fde0 <rpl_regfree@@Base+0x17e8>  // b.none
   2fe1c:	ldr	x0, [sp, #72]
   2fe20:	ldr	x0, [x0, #16]
   2fe24:	cmp	x0, #0x0
   2fe28:	b.eq	2fde0 <rpl_regfree@@Base+0x17e8>  // b.none
   2fe2c:	ldr	x0, [sp, #72]
   2fe30:	ldr	x0, [x0, #16]
   2fe34:	str	x0, [sp, #72]
   2fe38:	b	2fd80 <rpl_regfree@@Base+0x1788>
   2fe3c:	ldp	x29, x30, [sp], #80
   2fe40:	ret
   2fe44:	sub	sp, sp, #0x30
   2fe48:	str	x0, [sp, #8]
   2fe4c:	str	x1, [sp]
   2fe50:	ldr	x0, [sp, #8]
   2fe54:	str	x0, [sp, #40]
   2fe58:	ldr	x0, [sp]
   2fe5c:	ldrb	w0, [x0, #48]
   2fe60:	cmp	w0, #0x4
   2fe64:	b.ne	2fed4 <rpl_regfree@@Base+0x18dc>  // b.any
   2fe68:	ldr	x0, [sp, #40]
   2fe6c:	ldr	x0, [x0, #224]
   2fe70:	cmp	x0, #0x0
   2fe74:	b.eq	2fed4 <rpl_regfree@@Base+0x18dc>  // b.none
   2fe78:	ldr	x0, [sp]
   2fe7c:	ldr	x0, [x0, #40]
   2fe80:	str	w0, [sp, #36]
   2fe84:	ldr	x0, [sp, #40]
   2fe88:	ldr	x1, [x0, #224]
   2fe8c:	ldrsw	x0, [sp, #36]
   2fe90:	lsl	x0, x0, #3
   2fe94:	add	x0, x1, x0
   2fe98:	ldr	x1, [x0]
   2fe9c:	ldr	x0, [sp]
   2fea0:	str	x1, [x0, #40]
   2fea4:	ldr	x0, [sp, #40]
   2fea8:	ldr	x1, [x0, #160]
   2feac:	ldr	x0, [sp]
   2feb0:	ldr	x0, [x0, #40]
   2feb4:	mov	w2, w0
   2feb8:	mov	w0, #0x1                   	// #1
   2febc:	lsl	w0, w0, w2
   2fec0:	sxtw	x0, w0
   2fec4:	orr	x1, x1, x0
   2fec8:	ldr	x0, [sp, #40]
   2fecc:	str	x1, [x0, #160]
   2fed0:	b	2ffb4 <rpl_regfree@@Base+0x19bc>
   2fed4:	ldr	x0, [sp]
   2fed8:	ldrb	w0, [x0, #48]
   2fedc:	cmp	w0, #0x11
   2fee0:	b.ne	2ffb4 <rpl_regfree@@Base+0x19bc>  // b.any
   2fee4:	ldr	x0, [sp]
   2fee8:	ldr	x0, [x0, #8]
   2feec:	cmp	x0, #0x0
   2fef0:	b.eq	2ffb4 <rpl_regfree@@Base+0x19bc>  // b.none
   2fef4:	ldr	x0, [sp]
   2fef8:	ldr	x0, [x0, #8]
   2fefc:	ldrb	w0, [x0, #48]
   2ff00:	cmp	w0, #0x11
   2ff04:	b.ne	2ffb4 <rpl_regfree@@Base+0x19bc>  // b.any
   2ff08:	ldr	x0, [sp]
   2ff0c:	ldr	x0, [x0, #8]
   2ff10:	ldr	x0, [x0, #40]
   2ff14:	str	x0, [sp, #24]
   2ff18:	ldr	x0, [sp]
   2ff1c:	ldr	x0, [x0, #8]
   2ff20:	ldr	x1, [x0, #8]
   2ff24:	ldr	x0, [sp]
   2ff28:	str	x1, [x0, #8]
   2ff2c:	ldr	x0, [sp]
   2ff30:	ldr	x0, [x0, #8]
   2ff34:	cmp	x0, #0x0
   2ff38:	b.eq	2ff4c <rpl_regfree@@Base+0x1954>  // b.none
   2ff3c:	ldr	x0, [sp]
   2ff40:	ldr	x0, [x0, #8]
   2ff44:	ldr	x1, [sp]
   2ff48:	str	x1, [x0]
   2ff4c:	ldr	x0, [sp, #40]
   2ff50:	ldr	x1, [x0, #224]
   2ff54:	ldr	x0, [sp]
   2ff58:	ldr	x0, [x0, #40]
   2ff5c:	lsl	x0, x0, #3
   2ff60:	add	x1, x1, x0
   2ff64:	ldr	x0, [sp, #40]
   2ff68:	ldr	x2, [x0, #224]
   2ff6c:	ldr	x0, [sp, #24]
   2ff70:	lsl	x0, x0, #3
   2ff74:	add	x0, x2, x0
   2ff78:	ldr	x1, [x1]
   2ff7c:	str	x1, [x0]
   2ff80:	ldr	x0, [sp, #24]
   2ff84:	cmp	x0, #0x3f
   2ff88:	b.gt	2ffb4 <rpl_regfree@@Base+0x19bc>
   2ff8c:	ldr	x0, [sp, #40]
   2ff90:	ldr	x1, [x0, #160]
   2ff94:	ldr	x0, [sp, #24]
   2ff98:	mov	w2, w0
   2ff9c:	mov	x0, #0x1                   	// #1
   2ffa0:	lsl	x0, x0, x2
   2ffa4:	mvn	x0, x0
   2ffa8:	and	x1, x1, x0
   2ffac:	ldr	x0, [sp, #40]
   2ffb0:	str	x1, [x0, #160]
   2ffb4:	mov	w0, #0x0                   	// #0
   2ffb8:	add	sp, sp, #0x30
   2ffbc:	ret
   2ffc0:	stp	x29, x30, [sp, #-48]!
   2ffc4:	mov	x29, sp
   2ffc8:	str	x0, [sp, #24]
   2ffcc:	str	x1, [sp, #16]
   2ffd0:	ldr	x0, [sp, #24]
   2ffd4:	str	x0, [sp, #40]
   2ffd8:	str	wzr, [sp, #36]
   2ffdc:	ldr	x0, [sp, #16]
   2ffe0:	ldr	x0, [x0, #8]
   2ffe4:	cmp	x0, #0x0
   2ffe8:	b.eq	30044 <rpl_regfree@@Base+0x1a4c>  // b.none
   2ffec:	ldr	x0, [sp, #16]
   2fff0:	ldr	x0, [x0, #8]
   2fff4:	ldrb	w0, [x0, #48]
   2fff8:	cmp	w0, #0x11
   2fffc:	b.ne	30044 <rpl_regfree@@Base+0x1a4c>  // b.any
   30000:	ldr	x0, [sp, #16]
   30004:	ldr	x1, [x0, #8]
   30008:	add	x0, sp, #0x24
   3000c:	mov	x2, x1
   30010:	ldr	x1, [sp, #40]
   30014:	bl	300b8 <rpl_regfree@@Base+0x1ac0>
   30018:	mov	x1, x0
   3001c:	ldr	x0, [sp, #16]
   30020:	str	x1, [x0, #8]
   30024:	ldr	x0, [sp, #16]
   30028:	ldr	x0, [x0, #8]
   3002c:	cmp	x0, #0x0
   30030:	b.eq	30044 <rpl_regfree@@Base+0x1a4c>  // b.none
   30034:	ldr	x0, [sp, #16]
   30038:	ldr	x0, [x0, #8]
   3003c:	ldr	x1, [sp, #16]
   30040:	str	x1, [x0]
   30044:	ldr	x0, [sp, #16]
   30048:	ldr	x0, [x0, #16]
   3004c:	cmp	x0, #0x0
   30050:	b.eq	300ac <rpl_regfree@@Base+0x1ab4>  // b.none
   30054:	ldr	x0, [sp, #16]
   30058:	ldr	x0, [x0, #16]
   3005c:	ldrb	w0, [x0, #48]
   30060:	cmp	w0, #0x11
   30064:	b.ne	300ac <rpl_regfree@@Base+0x1ab4>  // b.any
   30068:	ldr	x0, [sp, #16]
   3006c:	ldr	x1, [x0, #16]
   30070:	add	x0, sp, #0x24
   30074:	mov	x2, x1
   30078:	ldr	x1, [sp, #40]
   3007c:	bl	300b8 <rpl_regfree@@Base+0x1ac0>
   30080:	mov	x1, x0
   30084:	ldr	x0, [sp, #16]
   30088:	str	x1, [x0, #16]
   3008c:	ldr	x0, [sp, #16]
   30090:	ldr	x0, [x0, #16]
   30094:	cmp	x0, #0x0
   30098:	b.eq	300ac <rpl_regfree@@Base+0x1ab4>  // b.none
   3009c:	ldr	x0, [sp, #16]
   300a0:	ldr	x0, [x0, #16]
   300a4:	ldr	x1, [sp, #16]
   300a8:	str	x1, [x0]
   300ac:	ldr	w0, [sp, #36]
   300b0:	ldp	x29, x30, [sp], #48
   300b4:	ret
   300b8:	stp	x29, x30, [sp, #-96]!
   300bc:	mov	x29, sp
   300c0:	str	x0, [sp, #40]
   300c4:	str	x1, [sp, #32]
   300c8:	str	x2, [sp, #24]
   300cc:	ldr	x0, [sp, #32]
   300d0:	ldr	x0, [x0]
   300d4:	str	x0, [sp, #88]
   300d8:	ldr	x0, [sp, #24]
   300dc:	ldr	x0, [x0, #8]
   300e0:	str	x0, [sp, #80]
   300e4:	ldr	x0, [sp, #32]
   300e8:	ldrb	w0, [x0, #56]
   300ec:	and	w0, w0, #0x10
   300f0:	and	w0, w0, #0xff
   300f4:	cmp	w0, #0x0
   300f8:	b.eq	30148 <rpl_regfree@@Base+0x1b50>  // b.none
   300fc:	ldr	x0, [sp, #24]
   30100:	ldr	x0, [x0, #8]
   30104:	cmp	x0, #0x0
   30108:	b.eq	30148 <rpl_regfree@@Base+0x1b50>  // b.none
   3010c:	ldr	x0, [sp, #24]
   30110:	ldr	x0, [x0, #40]
   30114:	cmp	x0, #0x3f
   30118:	b.gt	3013c <rpl_regfree@@Base+0x1b44>
   3011c:	ldr	x0, [sp, #88]
   30120:	ldr	x0, [x0, #160]
   30124:	ldr	x1, [sp, #24]
   30128:	ldr	x1, [x1, #40]
   3012c:	lsr	x0, x0, x1
   30130:	and	x0, x0, #0x1
   30134:	cmp	x0, #0x0
   30138:	b.ne	30148 <rpl_regfree@@Base+0x1b50>  // b.any
   3013c:	ldr	x0, [sp, #24]
   30140:	ldr	x0, [x0, #8]
   30144:	b	302cc <rpl_regfree@@Base+0x1cd4>
   30148:	mov	w3, #0x8                   	// #8
   3014c:	mov	x2, #0x0                   	// #0
   30150:	mov	x1, #0x0                   	// #0
   30154:	ldr	x0, [sp, #88]
   30158:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   3015c:	str	x0, [sp, #72]
   30160:	mov	w3, #0x9                   	// #9
   30164:	mov	x2, #0x0                   	// #0
   30168:	mov	x1, #0x0                   	// #0
   3016c:	ldr	x0, [sp, #88]
   30170:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   30174:	str	x0, [sp, #64]
   30178:	ldr	x0, [sp, #80]
   3017c:	cmp	x0, #0x0
   30180:	b.eq	3019c <rpl_regfree@@Base+0x1ba4>  // b.none
   30184:	mov	w3, #0x10                  	// #16
   30188:	ldr	x2, [sp, #64]
   3018c:	ldr	x1, [sp, #80]
   30190:	ldr	x0, [sp, #88]
   30194:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   30198:	b	301a0 <rpl_regfree@@Base+0x1ba8>
   3019c:	ldr	x0, [sp, #64]
   301a0:	str	x0, [sp, #56]
   301a4:	mov	w3, #0x10                  	// #16
   301a8:	ldr	x2, [sp, #56]
   301ac:	ldr	x1, [sp, #72]
   301b0:	ldr	x0, [sp, #88]
   301b4:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   301b8:	str	x0, [sp, #48]
   301bc:	ldr	x0, [sp, #48]
   301c0:	cmp	x0, #0x0
   301c4:	cset	w0, eq  // eq = none
   301c8:	and	w0, w0, #0xff
   301cc:	and	x0, x0, #0xff
   301d0:	cmp	x0, #0x0
   301d4:	b.ne	301f4 <rpl_regfree@@Base+0x1bfc>  // b.any
   301d8:	ldr	x0, [sp, #56]
   301dc:	cmp	x0, #0x0
   301e0:	cset	w0, eq  // eq = none
   301e4:	and	w0, w0, #0xff
   301e8:	and	x0, x0, #0xff
   301ec:	cmp	x0, #0x0
   301f0:	b.eq	301fc <rpl_regfree@@Base+0x1c04>  // b.none
   301f4:	mov	w0, #0x1                   	// #1
   301f8:	b	30200 <rpl_regfree@@Base+0x1c08>
   301fc:	mov	w0, #0x0                   	// #0
   30200:	cmp	w0, #0x0
   30204:	b.ne	30224 <rpl_regfree@@Base+0x1c2c>  // b.any
   30208:	ldr	x0, [sp, #72]
   3020c:	cmp	x0, #0x0
   30210:	cset	w0, eq  // eq = none
   30214:	and	w0, w0, #0xff
   30218:	and	x0, x0, #0xff
   3021c:	cmp	x0, #0x0
   30220:	b.eq	3022c <rpl_regfree@@Base+0x1c34>  // b.none
   30224:	mov	w0, #0x1                   	// #1
   30228:	b	30230 <rpl_regfree@@Base+0x1c38>
   3022c:	mov	w0, #0x0                   	// #0
   30230:	cmp	w0, #0x0
   30234:	b.ne	30254 <rpl_regfree@@Base+0x1c5c>  // b.any
   30238:	ldr	x0, [sp, #64]
   3023c:	cmp	x0, #0x0
   30240:	cset	w0, eq  // eq = none
   30244:	and	w0, w0, #0xff
   30248:	and	x0, x0, #0xff
   3024c:	cmp	x0, #0x0
   30250:	b.eq	30268 <rpl_regfree@@Base+0x1c70>  // b.none
   30254:	ldr	x0, [sp, #40]
   30258:	mov	w1, #0xc                   	// #12
   3025c:	str	w1, [x0]
   30260:	mov	x0, #0x0                   	// #0
   30264:	b	302cc <rpl_regfree@@Base+0x1cd4>
   30268:	ldr	x0, [sp, #24]
   3026c:	ldr	x1, [x0, #40]
   30270:	ldr	x0, [sp, #64]
   30274:	str	x1, [x0, #40]
   30278:	ldr	x0, [sp, #64]
   3027c:	ldr	x1, [x0, #40]
   30280:	ldr	x0, [sp, #72]
   30284:	str	x1, [x0, #40]
   30288:	ldr	x0, [sp, #24]
   3028c:	ldrb	w0, [x0, #50]
   30290:	ubfx	x0, x0, #3, #1
   30294:	and	w2, w0, #0xff
   30298:	ldr	x1, [sp, #64]
   3029c:	ldrb	w0, [x1, #50]
   302a0:	bfi	w0, w2, #3, #1
   302a4:	strb	w0, [x1, #50]
   302a8:	ldr	x0, [sp, #64]
   302ac:	ldrb	w0, [x0, #50]
   302b0:	ubfx	x0, x0, #3, #1
   302b4:	and	w2, w0, #0xff
   302b8:	ldr	x1, [sp, #72]
   302bc:	ldrb	w0, [x1, #50]
   302c0:	bfi	w0, w2, #3, #1
   302c4:	strb	w0, [x1, #50]
   302c8:	ldr	x0, [sp, #48]
   302cc:	ldp	x29, x30, [sp], #96
   302d0:	ret
   302d4:	stp	x29, x30, [sp, #-48]!
   302d8:	mov	x29, sp
   302dc:	str	x0, [sp, #24]
   302e0:	str	x1, [sp, #16]
   302e4:	ldr	x0, [sp, #24]
   302e8:	str	x0, [sp, #40]
   302ec:	ldr	x0, [sp, #16]
   302f0:	ldrb	w0, [x0, #48]
   302f4:	cmp	w0, #0x10
   302f8:	b.ne	30328 <rpl_regfree@@Base+0x1d30>  // b.any
   302fc:	ldr	x0, [sp, #16]
   30300:	ldr	x0, [x0, #8]
   30304:	ldr	x1, [x0, #24]
   30308:	ldr	x0, [sp, #16]
   3030c:	str	x1, [x0, #24]
   30310:	ldr	x0, [sp, #16]
   30314:	ldr	x0, [x0, #8]
   30318:	ldr	x1, [x0, #56]
   3031c:	ldr	x0, [sp, #16]
   30320:	str	x1, [x0, #56]
   30324:	b	303c0 <rpl_regfree@@Base+0x1dc8>
   30328:	ldr	x0, [sp, #16]
   3032c:	ldr	x1, [sp, #16]
   30330:	str	x1, [x0, #24]
   30334:	ldr	x0, [sp, #16]
   30338:	ldp	x1, x2, [x0, #40]
   3033c:	ldr	x0, [sp, #40]
   30340:	bl	2c924 <printf_parse@@Base+0x562c>
   30344:	mov	x1, x0
   30348:	ldr	x0, [sp, #16]
   3034c:	str	x1, [x0, #56]
   30350:	ldr	x0, [sp, #16]
   30354:	ldr	x0, [x0, #56]
   30358:	cmn	x0, #0x1
   3035c:	cset	w0, eq  // eq = none
   30360:	and	w0, w0, #0xff
   30364:	and	x0, x0, #0xff
   30368:	cmp	x0, #0x0
   3036c:	b.eq	30378 <rpl_regfree@@Base+0x1d80>  // b.none
   30370:	mov	w0, #0xc                   	// #12
   30374:	b	303c4 <rpl_regfree@@Base+0x1dcc>
   30378:	ldr	x0, [sp, #16]
   3037c:	ldrb	w0, [x0, #48]
   30380:	cmp	w0, #0xc
   30384:	b.ne	303c0 <rpl_regfree@@Base+0x1dc8>  // b.any
   30388:	ldr	x0, [sp, #16]
   3038c:	ldr	w2, [x0, #40]
   30390:	ldr	x0, [sp, #40]
   30394:	ldr	x1, [x0]
   30398:	ldr	x0, [sp, #16]
   3039c:	ldr	x0, [x0, #56]
   303a0:	lsl	x0, x0, #4
   303a4:	add	x1, x1, x0
   303a8:	mov	w0, w2
   303ac:	and	w0, w0, #0x3ff
   303b0:	and	w2, w0, #0xffff
   303b4:	ldr	w0, [x1, #8]
   303b8:	bfi	w0, w2, #8, #10
   303bc:	str	w0, [x1, #8]
   303c0:	mov	w0, #0x0                   	// #0
   303c4:	ldp	x29, x30, [sp], #48
   303c8:	ret
   303cc:	sub	sp, sp, #0x10
   303d0:	str	x0, [sp, #8]
   303d4:	str	x1, [sp]
   303d8:	ldr	x0, [sp]
   303dc:	ldrb	w0, [x0, #48]
   303e0:	cmp	w0, #0xb
   303e4:	b.eq	303f4 <rpl_regfree@@Base+0x1dfc>  // b.none
   303e8:	cmp	w0, #0x10
   303ec:	b.eq	30408 <rpl_regfree@@Base+0x1e10>  // b.none
   303f0:	b	30438 <rpl_regfree@@Base+0x1e40>
   303f4:	ldr	x0, [sp]
   303f8:	ldr	x0, [x0, #8]
   303fc:	ldr	x1, [sp]
   30400:	str	x1, [x0, #32]
   30404:	b	30484 <rpl_regfree@@Base+0x1e8c>
   30408:	ldr	x0, [sp]
   3040c:	ldr	x1, [x0, #16]
   30410:	ldr	x0, [sp]
   30414:	ldr	x0, [x0, #8]
   30418:	ldr	x1, [x1, #24]
   3041c:	str	x1, [x0, #32]
   30420:	ldr	x0, [sp]
   30424:	ldr	x0, [x0, #16]
   30428:	ldr	x1, [sp]
   3042c:	ldr	x1, [x1, #32]
   30430:	str	x1, [x0, #32]
   30434:	b	30484 <rpl_regfree@@Base+0x1e8c>
   30438:	ldr	x0, [sp]
   3043c:	ldr	x0, [x0, #8]
   30440:	cmp	x0, #0x0
   30444:	b.eq	3045c <rpl_regfree@@Base+0x1e64>  // b.none
   30448:	ldr	x0, [sp]
   3044c:	ldr	x0, [x0, #8]
   30450:	ldr	x1, [sp]
   30454:	ldr	x1, [x1, #32]
   30458:	str	x1, [x0, #32]
   3045c:	ldr	x0, [sp]
   30460:	ldr	x0, [x0, #16]
   30464:	cmp	x0, #0x0
   30468:	b.eq	30480 <rpl_regfree@@Base+0x1e88>  // b.none
   3046c:	ldr	x0, [sp]
   30470:	ldr	x0, [x0, #16]
   30474:	ldr	x1, [sp]
   30478:	ldr	x1, [x1, #32]
   3047c:	str	x1, [x0, #32]
   30480:	nop
   30484:	mov	w0, #0x0                   	// #0
   30488:	add	sp, sp, #0x10
   3048c:	ret
   30490:	stp	x29, x30, [sp, #-80]!
   30494:	mov	x29, sp
   30498:	str	x0, [sp, #24]
   3049c:	str	x1, [sp, #16]
   304a0:	ldr	x0, [sp, #24]
   304a4:	str	x0, [sp, #48]
   304a8:	ldr	x0, [sp, #16]
   304ac:	ldr	x0, [x0, #56]
   304b0:	str	x0, [sp, #40]
   304b4:	str	wzr, [sp, #76]
   304b8:	ldr	x0, [sp, #16]
   304bc:	ldrb	w0, [x0, #48]
   304c0:	cmp	w0, #0x10
   304c4:	b.eq	3076c <rpl_regfree@@Base+0x2174>  // b.none
   304c8:	cmp	w0, #0x10
   304cc:	b.gt	30710 <rpl_regfree@@Base+0x2118>
   304d0:	cmp	w0, #0xc
   304d4:	b.eq	30650 <rpl_regfree@@Base+0x2058>  // b.none
   304d8:	cmp	w0, #0xc
   304dc:	b.gt	30710 <rpl_regfree@@Base+0x2118>
   304e0:	cmp	w0, #0xb
   304e4:	b.gt	30710 <rpl_regfree@@Base+0x2118>
   304e8:	cmp	w0, #0xa
   304ec:	b.ge	30544 <rpl_regfree@@Base+0x1f4c>  // b.tcont
   304f0:	cmp	w0, #0x9
   304f4:	b.gt	30710 <rpl_regfree@@Base+0x2118>
   304f8:	cmp	w0, #0x8
   304fc:	b.ge	30650 <rpl_regfree@@Base+0x2058>  // b.tcont
   30500:	cmp	w0, #0x2
   30504:	b.eq	30514 <rpl_regfree@@Base+0x1f1c>  // b.none
   30508:	cmp	w0, #0x4
   3050c:	b.eq	30690 <rpl_regfree@@Base+0x2098>  // b.none
   30510:	b	30710 <rpl_regfree@@Base+0x2118>
   30514:	ldr	x0, [sp, #16]
   30518:	ldr	x0, [x0, #32]
   3051c:	cmp	x0, #0x0
   30520:	b.eq	30774 <rpl_regfree@@Base+0x217c>  // b.none
   30524:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   30528:	add	x3, x0, #0x7b0
   3052c:	mov	w2, #0x59f                 	// #1439
   30530:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   30534:	add	x1, x0, #0x4e0
   30538:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   3053c:	add	x0, x0, #0x4f0
   30540:	bl	b630 <__assert_fail@plt>
   30544:	ldr	x0, [sp, #48]
   30548:	ldrb	w1, [x0, #176]
   3054c:	orr	w1, w1, #0x1
   30550:	strb	w1, [x0, #176]
   30554:	ldr	x0, [sp, #16]
   30558:	ldr	x0, [x0, #8]
   3055c:	cmp	x0, #0x0
   30560:	b.eq	3057c <rpl_regfree@@Base+0x1f84>  // b.none
   30564:	ldr	x0, [sp, #16]
   30568:	ldr	x0, [x0, #8]
   3056c:	ldr	x0, [x0, #24]
   30570:	ldr	x0, [x0, #56]
   30574:	str	x0, [sp, #64]
   30578:	b	3058c <rpl_regfree@@Base+0x1f94>
   3057c:	ldr	x0, [sp, #16]
   30580:	ldr	x0, [x0, #32]
   30584:	ldr	x0, [x0, #56]
   30588:	str	x0, [sp, #64]
   3058c:	ldr	x0, [sp, #16]
   30590:	ldr	x0, [x0, #16]
   30594:	cmp	x0, #0x0
   30598:	b.eq	305b4 <rpl_regfree@@Base+0x1fbc>  // b.none
   3059c:	ldr	x0, [sp, #16]
   305a0:	ldr	x0, [x0, #16]
   305a4:	ldr	x0, [x0, #24]
   305a8:	ldr	x0, [x0, #56]
   305ac:	str	x0, [sp, #56]
   305b0:	b	305c4 <rpl_regfree@@Base+0x1fcc>
   305b4:	ldr	x0, [sp, #16]
   305b8:	ldr	x0, [x0, #32]
   305bc:	ldr	x0, [x0, #56]
   305c0:	str	x0, [sp, #56]
   305c4:	ldr	x0, [sp, #64]
   305c8:	cmp	x0, #0x0
   305cc:	b.ge	305f0 <rpl_regfree@@Base+0x1ff8>  // b.tcont
   305d0:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   305d4:	add	x3, x0, #0x7b0
   305d8:	mov	w2, #0x5af                 	// #1455
   305dc:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   305e0:	add	x1, x0, #0x4e0
   305e4:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   305e8:	add	x0, x0, #0x508
   305ec:	bl	b630 <__assert_fail@plt>
   305f0:	ldr	x0, [sp, #56]
   305f4:	cmp	x0, #0x0
   305f8:	b.ge	3061c <rpl_regfree@@Base+0x2024>  // b.tcont
   305fc:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   30600:	add	x3, x0, #0x7b0
   30604:	mov	w2, #0x5b0                 	// #1456
   30608:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   3060c:	add	x1, x0, #0x4e0
   30610:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   30614:	add	x0, x0, #0x518
   30618:	bl	b630 <__assert_fail@plt>
   3061c:	ldr	x0, [sp, #48]
   30620:	ldr	x2, [x0, #40]
   30624:	ldr	x1, [sp, #40]
   30628:	mov	x0, x1
   3062c:	lsl	x0, x0, #1
   30630:	add	x0, x0, x1
   30634:	lsl	x0, x0, #3
   30638:	add	x0, x2, x0
   3063c:	ldr	x2, [sp, #56]
   30640:	ldr	x1, [sp, #64]
   30644:	bl	2b5b8 <printf_parse@@Base+0x42c0>
   30648:	str	w0, [sp, #76]
   3064c:	b	30780 <rpl_regfree@@Base+0x2188>
   30650:	ldr	x0, [sp, #48]
   30654:	ldr	x2, [x0, #40]
   30658:	ldr	x1, [sp, #40]
   3065c:	mov	x0, x1
   30660:	lsl	x0, x0, #1
   30664:	add	x0, x0, x1
   30668:	lsl	x0, x0, #3
   3066c:	add	x2, x2, x0
   30670:	ldr	x0, [sp, #16]
   30674:	ldr	x0, [x0, #32]
   30678:	ldr	x0, [x0, #56]
   3067c:	mov	x1, x0
   30680:	mov	x0, x2
   30684:	bl	2b520 <printf_parse@@Base+0x4228>
   30688:	str	w0, [sp, #76]
   3068c:	b	30780 <rpl_regfree@@Base+0x2188>
   30690:	ldr	x0, [sp, #16]
   30694:	ldr	x1, [x0, #32]
   30698:	ldr	x0, [sp, #48]
   3069c:	ldr	x2, [x0, #24]
   306a0:	ldr	x0, [sp, #40]
   306a4:	lsl	x0, x0, #3
   306a8:	add	x0, x2, x0
   306ac:	ldr	x1, [x1, #56]
   306b0:	str	x1, [x0]
   306b4:	ldr	x0, [sp, #16]
   306b8:	ldrb	w0, [x0, #48]
   306bc:	cmp	w0, #0x4
   306c0:	b.ne	3077c <rpl_regfree@@Base+0x2184>  // b.any
   306c4:	ldr	x0, [sp, #48]
   306c8:	ldr	x2, [x0, #40]
   306cc:	ldr	x1, [sp, #40]
   306d0:	mov	x0, x1
   306d4:	lsl	x0, x0, #1
   306d8:	add	x0, x0, x1
   306dc:	lsl	x0, x0, #3
   306e0:	add	x2, x2, x0
   306e4:	ldr	x0, [sp, #48]
   306e8:	ldr	x1, [x0, #24]
   306ec:	ldr	x0, [sp, #40]
   306f0:	lsl	x0, x0, #3
   306f4:	add	x0, x1, x0
   306f8:	ldr	x0, [x0]
   306fc:	mov	x1, x0
   30700:	mov	x0, x2
   30704:	bl	2b520 <printf_parse@@Base+0x4228>
   30708:	str	w0, [sp, #76]
   3070c:	b	3077c <rpl_regfree@@Base+0x2184>
   30710:	ldr	x0, [sp, #16]
   30714:	ldrb	w0, [x0, #48]
   30718:	and	w0, w0, #0x8
   3071c:	cmp	w0, #0x0
   30720:	b.eq	30744 <rpl_regfree@@Base+0x214c>  // b.none
   30724:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   30728:	add	x3, x0, #0x7b0
   3072c:	mov	w2, #0x5c2                 	// #1474
   30730:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   30734:	add	x1, x0, #0x4e0
   30738:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   3073c:	add	x0, x0, #0x528
   30740:	bl	b630 <__assert_fail@plt>
   30744:	ldr	x0, [sp, #16]
   30748:	ldr	x1, [x0, #32]
   3074c:	ldr	x0, [sp, #48]
   30750:	ldr	x2, [x0, #24]
   30754:	ldr	x0, [sp, #40]
   30758:	lsl	x0, x0, #3
   3075c:	add	x0, x2, x0
   30760:	ldr	x1, [x1, #56]
   30764:	str	x1, [x0]
   30768:	b	30780 <rpl_regfree@@Base+0x2188>
   3076c:	nop
   30770:	b	30780 <rpl_regfree@@Base+0x2188>
   30774:	nop
   30778:	b	30780 <rpl_regfree@@Base+0x2188>
   3077c:	nop
   30780:	ldr	w0, [sp, #76]
   30784:	ldp	x29, x30, [sp], #80
   30788:	ret
   3078c:	stp	x29, x30, [sp, #-112]!
   30790:	mov	x29, sp
   30794:	str	x0, [sp, #56]
   30798:	str	x1, [sp, #48]
   3079c:	str	x2, [sp, #40]
   307a0:	str	x3, [sp, #32]
   307a4:	str	w4, [sp, #28]
   307a8:	ldr	w0, [sp, #28]
   307ac:	str	w0, [sp, #92]
   307b0:	ldr	x0, [sp, #48]
   307b4:	str	x0, [sp, #104]
   307b8:	ldr	x0, [sp, #40]
   307bc:	str	x0, [sp, #96]
   307c0:	ldr	x0, [sp, #56]
   307c4:	ldr	x1, [x0]
   307c8:	ldr	x0, [sp, #104]
   307cc:	lsl	x0, x0, #4
   307d0:	add	x0, x1, x0
   307d4:	ldrb	w0, [x0, #8]
   307d8:	cmp	w0, #0x4
   307dc:	b.ne	308d4 <rpl_regfree@@Base+0x22dc>  // b.any
   307e0:	ldr	x0, [sp, #56]
   307e4:	ldr	x1, [x0, #24]
   307e8:	ldr	x0, [sp, #104]
   307ec:	lsl	x0, x0, #3
   307f0:	add	x0, x1, x0
   307f4:	ldr	x0, [x0]
   307f8:	str	x0, [sp, #80]
   307fc:	ldr	x0, [sp, #56]
   30800:	ldr	x2, [x0, #40]
   30804:	ldr	x1, [sp, #96]
   30808:	mov	x0, x1
   3080c:	lsl	x0, x0, #1
   30810:	add	x0, x0, x1
   30814:	lsl	x0, x0, #3
   30818:	add	x0, x2, x0
   3081c:	str	xzr, [x0, #8]
   30820:	ldr	w2, [sp, #92]
   30824:	ldr	x1, [sp, #80]
   30828:	ldr	x0, [sp, #56]
   3082c:	bl	30df0 <rpl_regfree@@Base+0x27f8>
   30830:	str	x0, [sp, #72]
   30834:	ldr	x0, [sp, #72]
   30838:	cmn	x0, #0x1
   3083c:	cset	w0, eq  // eq = none
   30840:	and	w0, w0, #0xff
   30844:	and	x0, x0, #0xff
   30848:	cmp	x0, #0x0
   3084c:	b.eq	30858 <rpl_regfree@@Base+0x2260>  // b.none
   30850:	mov	w0, #0xc                   	// #12
   30854:	b	30d1c <rpl_regfree@@Base+0x2724>
   30858:	ldr	x0, [sp, #56]
   3085c:	ldr	x1, [x0, #24]
   30860:	ldr	x0, [sp, #104]
   30864:	lsl	x0, x0, #3
   30868:	add	x1, x1, x0
   3086c:	ldr	x0, [sp, #56]
   30870:	ldr	x2, [x0, #24]
   30874:	ldr	x0, [sp, #96]
   30878:	lsl	x0, x0, #3
   3087c:	add	x0, x2, x0
   30880:	ldr	x1, [x1]
   30884:	str	x1, [x0]
   30888:	ldr	x0, [sp, #56]
   3088c:	ldr	x2, [x0, #40]
   30890:	ldr	x1, [sp, #96]
   30894:	mov	x0, x1
   30898:	lsl	x0, x0, #1
   3089c:	add	x0, x0, x1
   308a0:	lsl	x0, x0, #3
   308a4:	add	x0, x2, x0
   308a8:	ldr	x1, [sp, #72]
   308ac:	bl	2c3ec <printf_parse@@Base+0x50f4>
   308b0:	strb	w0, [sp, #71]
   308b4:	ldrb	w0, [sp, #71]
   308b8:	eor	w0, w0, #0x1
   308bc:	and	w0, w0, #0xff
   308c0:	and	x0, x0, #0xff
   308c4:	cmp	x0, #0x0
   308c8:	b.eq	30d00 <rpl_regfree@@Base+0x2708>  // b.none
   308cc:	mov	w0, #0xc                   	// #12
   308d0:	b	30d1c <rpl_regfree@@Base+0x2724>
   308d4:	ldr	x0, [sp, #56]
   308d8:	ldr	x2, [x0, #40]
   308dc:	ldr	x1, [sp, #104]
   308e0:	mov	x0, x1
   308e4:	lsl	x0, x0, #1
   308e8:	add	x0, x0, x1
   308ec:	lsl	x0, x0, #3
   308f0:	add	x0, x2, x0
   308f4:	ldr	x0, [x0, #8]
   308f8:	cmp	x0, #0x0
   308fc:	b.ne	30934 <rpl_regfree@@Base+0x233c>  // b.any
   30900:	ldr	x0, [sp, #56]
   30904:	ldr	x1, [x0, #24]
   30908:	ldr	x0, [sp, #104]
   3090c:	lsl	x0, x0, #3
   30910:	add	x1, x1, x0
   30914:	ldr	x0, [sp, #56]
   30918:	ldr	x2, [x0, #24]
   3091c:	ldr	x0, [sp, #96]
   30920:	lsl	x0, x0, #3
   30924:	add	x0, x2, x0
   30928:	ldr	x1, [x1]
   3092c:	str	x1, [x0]
   30930:	b	30d18 <rpl_regfree@@Base+0x2720>
   30934:	ldr	x0, [sp, #56]
   30938:	ldr	x2, [x0, #40]
   3093c:	ldr	x1, [sp, #104]
   30940:	mov	x0, x1
   30944:	lsl	x0, x0, #1
   30948:	add	x0, x0, x1
   3094c:	lsl	x0, x0, #3
   30950:	add	x0, x2, x0
   30954:	ldr	x0, [x0, #8]
   30958:	cmp	x0, #0x1
   3095c:	b.ne	30ad0 <rpl_regfree@@Base+0x24d8>  // b.any
   30960:	ldr	x0, [sp, #56]
   30964:	ldr	x2, [x0, #40]
   30968:	ldr	x1, [sp, #104]
   3096c:	mov	x0, x1
   30970:	lsl	x0, x0, #1
   30974:	add	x0, x0, x1
   30978:	lsl	x0, x0, #3
   3097c:	add	x0, x2, x0
   30980:	ldr	x0, [x0, #16]
   30984:	ldr	x0, [x0]
   30988:	str	x0, [sp, #80]
   3098c:	ldr	x0, [sp, #56]
   30990:	ldr	x2, [x0, #40]
   30994:	ldr	x1, [sp, #96]
   30998:	mov	x0, x1
   3099c:	lsl	x0, x0, #1
   309a0:	add	x0, x0, x1
   309a4:	lsl	x0, x0, #3
   309a8:	add	x0, x2, x0
   309ac:	str	xzr, [x0, #8]
   309b0:	ldr	x1, [sp, #104]
   309b4:	ldr	x0, [sp, #32]
   309b8:	cmp	x1, x0
   309bc:	b.ne	30a1c <rpl_regfree@@Base+0x2424>  // b.any
   309c0:	ldr	x1, [sp, #96]
   309c4:	ldr	x0, [sp, #104]
   309c8:	cmp	x1, x0
   309cc:	b.eq	30a1c <rpl_regfree@@Base+0x2424>  // b.none
   309d0:	ldr	x0, [sp, #56]
   309d4:	ldr	x2, [x0, #40]
   309d8:	ldr	x1, [sp, #96]
   309dc:	mov	x0, x1
   309e0:	lsl	x0, x0, #1
   309e4:	add	x0, x0, x1
   309e8:	lsl	x0, x0, #3
   309ec:	add	x0, x2, x0
   309f0:	ldr	x1, [sp, #80]
   309f4:	bl	2c3ec <printf_parse@@Base+0x50f4>
   309f8:	strb	w0, [sp, #71]
   309fc:	ldrb	w0, [sp, #71]
   30a00:	eor	w0, w0, #0x1
   30a04:	and	w0, w0, #0xff
   30a08:	and	x0, x0, #0xff
   30a0c:	cmp	x0, #0x0
   30a10:	b.eq	30d14 <rpl_regfree@@Base+0x271c>  // b.none
   30a14:	mov	w0, #0xc                   	// #12
   30a18:	b	30d1c <rpl_regfree@@Base+0x2724>
   30a1c:	ldr	x0, [sp, #56]
   30a20:	ldr	x1, [x0]
   30a24:	ldr	x0, [sp, #104]
   30a28:	lsl	x0, x0, #4
   30a2c:	add	x0, x1, x0
   30a30:	ldr	w0, [x0, #8]
   30a34:	ubfx	x0, x0, #8, #10
   30a38:	and	w0, w0, #0xffff
   30a3c:	mov	w1, w0
   30a40:	ldr	w0, [sp, #92]
   30a44:	orr	w0, w0, w1
   30a48:	str	w0, [sp, #92]
   30a4c:	ldr	w2, [sp, #92]
   30a50:	ldr	x1, [sp, #80]
   30a54:	ldr	x0, [sp, #56]
   30a58:	bl	30df0 <rpl_regfree@@Base+0x27f8>
   30a5c:	str	x0, [sp, #72]
   30a60:	ldr	x0, [sp, #72]
   30a64:	cmn	x0, #0x1
   30a68:	cset	w0, eq  // eq = none
   30a6c:	and	w0, w0, #0xff
   30a70:	and	x0, x0, #0xff
   30a74:	cmp	x0, #0x0
   30a78:	b.eq	30a84 <rpl_regfree@@Base+0x248c>  // b.none
   30a7c:	mov	w0, #0xc                   	// #12
   30a80:	b	30d1c <rpl_regfree@@Base+0x2724>
   30a84:	ldr	x0, [sp, #56]
   30a88:	ldr	x2, [x0, #40]
   30a8c:	ldr	x1, [sp, #96]
   30a90:	mov	x0, x1
   30a94:	lsl	x0, x0, #1
   30a98:	add	x0, x0, x1
   30a9c:	lsl	x0, x0, #3
   30aa0:	add	x0, x2, x0
   30aa4:	ldr	x1, [sp, #72]
   30aa8:	bl	2c3ec <printf_parse@@Base+0x50f4>
   30aac:	strb	w0, [sp, #71]
   30ab0:	ldrb	w0, [sp, #71]
   30ab4:	eor	w0, w0, #0x1
   30ab8:	and	w0, w0, #0xff
   30abc:	and	x0, x0, #0xff
   30ac0:	cmp	x0, #0x0
   30ac4:	b.eq	30d00 <rpl_regfree@@Base+0x2708>  // b.none
   30ac8:	mov	w0, #0xc                   	// #12
   30acc:	b	30d1c <rpl_regfree@@Base+0x2724>
   30ad0:	ldr	x0, [sp, #56]
   30ad4:	ldr	x2, [x0, #40]
   30ad8:	ldr	x1, [sp, #104]
   30adc:	mov	x0, x1
   30ae0:	lsl	x0, x0, #1
   30ae4:	add	x0, x0, x1
   30ae8:	lsl	x0, x0, #3
   30aec:	add	x0, x2, x0
   30af0:	ldr	x0, [x0, #16]
   30af4:	ldr	x0, [x0]
   30af8:	str	x0, [sp, #80]
   30afc:	ldr	x0, [sp, #56]
   30b00:	ldr	x2, [x0, #40]
   30b04:	ldr	x1, [sp, #96]
   30b08:	mov	x0, x1
   30b0c:	lsl	x0, x0, #1
   30b10:	add	x0, x0, x1
   30b14:	lsl	x0, x0, #3
   30b18:	add	x0, x2, x0
   30b1c:	str	xzr, [x0, #8]
   30b20:	ldr	w2, [sp, #92]
   30b24:	ldr	x1, [sp, #80]
   30b28:	ldr	x0, [sp, #56]
   30b2c:	bl	30d24 <rpl_regfree@@Base+0x272c>
   30b30:	str	x0, [sp, #72]
   30b34:	ldr	x0, [sp, #72]
   30b38:	cmn	x0, #0x1
   30b3c:	b.ne	30c04 <rpl_regfree@@Base+0x260c>  // b.any
   30b40:	ldr	w2, [sp, #92]
   30b44:	ldr	x1, [sp, #80]
   30b48:	ldr	x0, [sp, #56]
   30b4c:	bl	30df0 <rpl_regfree@@Base+0x27f8>
   30b50:	str	x0, [sp, #72]
   30b54:	ldr	x0, [sp, #72]
   30b58:	cmn	x0, #0x1
   30b5c:	cset	w0, eq  // eq = none
   30b60:	and	w0, w0, #0xff
   30b64:	and	x0, x0, #0xff
   30b68:	cmp	x0, #0x0
   30b6c:	b.eq	30b78 <rpl_regfree@@Base+0x2580>  // b.none
   30b70:	mov	w0, #0xc                   	// #12
   30b74:	b	30d1c <rpl_regfree@@Base+0x2724>
   30b78:	ldr	x0, [sp, #56]
   30b7c:	ldr	x2, [x0, #40]
   30b80:	ldr	x1, [sp, #96]
   30b84:	mov	x0, x1
   30b88:	lsl	x0, x0, #1
   30b8c:	add	x0, x0, x1
   30b90:	lsl	x0, x0, #3
   30b94:	add	x0, x2, x0
   30b98:	ldr	x1, [sp, #72]
   30b9c:	bl	2c3ec <printf_parse@@Base+0x50f4>
   30ba0:	strb	w0, [sp, #71]
   30ba4:	ldrb	w0, [sp, #71]
   30ba8:	eor	w0, w0, #0x1
   30bac:	and	w0, w0, #0xff
   30bb0:	and	x0, x0, #0xff
   30bb4:	cmp	x0, #0x0
   30bb8:	b.eq	30bc4 <rpl_regfree@@Base+0x25cc>  // b.none
   30bbc:	mov	w0, #0xc                   	// #12
   30bc0:	b	30d1c <rpl_regfree@@Base+0x2724>
   30bc4:	ldr	w4, [sp, #92]
   30bc8:	ldr	x3, [sp, #32]
   30bcc:	ldr	x2, [sp, #72]
   30bd0:	ldr	x1, [sp, #80]
   30bd4:	ldr	x0, [sp, #56]
   30bd8:	bl	3078c <rpl_regfree@@Base+0x2194>
   30bdc:	str	w0, [sp, #64]
   30be0:	ldr	w0, [sp, #64]
   30be4:	cmp	w0, #0x0
   30be8:	cset	w0, ne  // ne = any
   30bec:	and	w0, w0, #0xff
   30bf0:	and	x0, x0, #0xff
   30bf4:	cmp	x0, #0x0
   30bf8:	b.eq	30c50 <rpl_regfree@@Base+0x2658>  // b.none
   30bfc:	ldr	w0, [sp, #64]
   30c00:	b	30d1c <rpl_regfree@@Base+0x2724>
   30c04:	ldr	x0, [sp, #56]
   30c08:	ldr	x2, [x0, #40]
   30c0c:	ldr	x1, [sp, #96]
   30c10:	mov	x0, x1
   30c14:	lsl	x0, x0, #1
   30c18:	add	x0, x0, x1
   30c1c:	lsl	x0, x0, #3
   30c20:	add	x0, x2, x0
   30c24:	ldr	x1, [sp, #72]
   30c28:	bl	2c3ec <printf_parse@@Base+0x50f4>
   30c2c:	strb	w0, [sp, #71]
   30c30:	ldrb	w0, [sp, #71]
   30c34:	eor	w0, w0, #0x1
   30c38:	and	w0, w0, #0xff
   30c3c:	and	x0, x0, #0xff
   30c40:	cmp	x0, #0x0
   30c44:	b.eq	30c50 <rpl_regfree@@Base+0x2658>  // b.none
   30c48:	mov	w0, #0xc                   	// #12
   30c4c:	b	30d1c <rpl_regfree@@Base+0x2724>
   30c50:	ldr	x0, [sp, #56]
   30c54:	ldr	x2, [x0, #40]
   30c58:	ldr	x1, [sp, #104]
   30c5c:	mov	x0, x1
   30c60:	lsl	x0, x0, #1
   30c64:	add	x0, x0, x1
   30c68:	lsl	x0, x0, #3
   30c6c:	add	x0, x2, x0
   30c70:	ldr	x0, [x0, #16]
   30c74:	ldr	x0, [x0, #8]
   30c78:	str	x0, [sp, #80]
   30c7c:	ldr	w2, [sp, #92]
   30c80:	ldr	x1, [sp, #80]
   30c84:	ldr	x0, [sp, #56]
   30c88:	bl	30df0 <rpl_regfree@@Base+0x27f8>
   30c8c:	str	x0, [sp, #72]
   30c90:	ldr	x0, [sp, #72]
   30c94:	cmn	x0, #0x1
   30c98:	cset	w0, eq  // eq = none
   30c9c:	and	w0, w0, #0xff
   30ca0:	and	x0, x0, #0xff
   30ca4:	cmp	x0, #0x0
   30ca8:	b.eq	30cb4 <rpl_regfree@@Base+0x26bc>  // b.none
   30cac:	mov	w0, #0xc                   	// #12
   30cb0:	b	30d1c <rpl_regfree@@Base+0x2724>
   30cb4:	ldr	x0, [sp, #56]
   30cb8:	ldr	x2, [x0, #40]
   30cbc:	ldr	x1, [sp, #96]
   30cc0:	mov	x0, x1
   30cc4:	lsl	x0, x0, #1
   30cc8:	add	x0, x0, x1
   30ccc:	lsl	x0, x0, #3
   30cd0:	add	x0, x2, x0
   30cd4:	ldr	x1, [sp, #72]
   30cd8:	bl	2c3ec <printf_parse@@Base+0x50f4>
   30cdc:	strb	w0, [sp, #71]
   30ce0:	ldrb	w0, [sp, #71]
   30ce4:	eor	w0, w0, #0x1
   30ce8:	and	w0, w0, #0xff
   30cec:	and	x0, x0, #0xff
   30cf0:	cmp	x0, #0x0
   30cf4:	b.eq	30d00 <rpl_regfree@@Base+0x2708>  // b.none
   30cf8:	mov	w0, #0xc                   	// #12
   30cfc:	b	30d1c <rpl_regfree@@Base+0x2724>
   30d00:	ldr	x0, [sp, #80]
   30d04:	str	x0, [sp, #104]
   30d08:	ldr	x0, [sp, #72]
   30d0c:	str	x0, [sp, #96]
   30d10:	b	307c0 <rpl_regfree@@Base+0x21c8>
   30d14:	nop
   30d18:	mov	w0, #0x0                   	// #0
   30d1c:	ldp	x29, x30, [sp], #112
   30d20:	ret
   30d24:	sub	sp, sp, #0x30
   30d28:	str	x0, [sp, #24]
   30d2c:	str	x1, [sp, #16]
   30d30:	str	w2, [sp, #12]
   30d34:	ldr	x0, [sp, #24]
   30d38:	ldr	x0, [x0, #16]
   30d3c:	sub	x0, x0, #0x1
   30d40:	str	x0, [sp, #40]
   30d44:	b	30db0 <rpl_regfree@@Base+0x27b8>
   30d48:	ldr	x0, [sp, #24]
   30d4c:	ldr	x1, [x0, #32]
   30d50:	ldr	x0, [sp, #40]
   30d54:	lsl	x0, x0, #3
   30d58:	add	x0, x1, x0
   30d5c:	ldr	x0, [x0]
   30d60:	ldr	x1, [sp, #16]
   30d64:	cmp	x1, x0
   30d68:	b.ne	30da4 <rpl_regfree@@Base+0x27ac>  // b.any
   30d6c:	ldr	x0, [sp, #24]
   30d70:	ldr	x1, [x0]
   30d74:	ldr	x0, [sp, #40]
   30d78:	lsl	x0, x0, #4
   30d7c:	add	x0, x1, x0
   30d80:	ldr	w0, [x0, #8]
   30d84:	ubfx	x0, x0, #8, #10
   30d88:	and	w0, w0, #0xffff
   30d8c:	mov	w1, w0
   30d90:	ldr	w0, [sp, #12]
   30d94:	cmp	w0, w1
   30d98:	b.ne	30da4 <rpl_regfree@@Base+0x27ac>  // b.any
   30d9c:	ldr	x0, [sp, #40]
   30da0:	b	30de8 <rpl_regfree@@Base+0x27f0>
   30da4:	ldr	x0, [sp, #40]
   30da8:	sub	x0, x0, #0x1
   30dac:	str	x0, [sp, #40]
   30db0:	ldr	x0, [sp, #24]
   30db4:	ldr	x1, [x0]
   30db8:	ldr	x0, [sp, #40]
   30dbc:	lsl	x0, x0, #4
   30dc0:	add	x0, x1, x0
   30dc4:	ldrb	w0, [x0, #10]
   30dc8:	and	w0, w0, #0x4
   30dcc:	and	w0, w0, #0xff
   30dd0:	cmp	w0, #0x0
   30dd4:	b.eq	30de4 <rpl_regfree@@Base+0x27ec>  // b.none
   30dd8:	ldr	x0, [sp, #40]
   30ddc:	cmp	x0, #0x0
   30de0:	b.gt	30d48 <rpl_regfree@@Base+0x2750>
   30de4:	mov	x0, #0xffffffffffffffff    	// #-1
   30de8:	add	sp, sp, #0x30
   30dec:	ret
   30df0:	stp	x29, x30, [sp, #-64]!
   30df4:	mov	x29, sp
   30df8:	str	x0, [sp, #40]
   30dfc:	str	x1, [sp, #32]
   30e00:	str	w2, [sp, #28]
   30e04:	ldr	x0, [sp, #40]
   30e08:	ldr	x1, [x0]
   30e0c:	ldr	x0, [sp, #32]
   30e10:	lsl	x0, x0, #4
   30e14:	add	x0, x1, x0
   30e18:	ldp	x1, x2, [x0]
   30e1c:	ldr	x0, [sp, #40]
   30e20:	bl	2c924 <printf_parse@@Base+0x562c>
   30e24:	str	x0, [sp, #56]
   30e28:	ldr	x0, [sp, #56]
   30e2c:	cmn	x0, #0x1
   30e30:	cset	w0, ne  // ne = any
   30e34:	and	w0, w0, #0xff
   30e38:	and	x0, x0, #0xff
   30e3c:	cmp	x0, #0x0
   30e40:	b.eq	30f14 <rpl_regfree@@Base+0x291c>  // b.none
   30e44:	ldr	x0, [sp, #40]
   30e48:	ldr	x1, [x0]
   30e4c:	ldr	x0, [sp, #56]
   30e50:	lsl	x0, x0, #4
   30e54:	add	x1, x1, x0
   30e58:	ldr	w0, [sp, #28]
   30e5c:	and	w0, w0, #0x3ff
   30e60:	and	w2, w0, #0xffff
   30e64:	ldr	w0, [x1, #8]
   30e68:	bfi	w0, w2, #8, #10
   30e6c:	str	w0, [x1, #8]
   30e70:	ldr	x0, [sp, #40]
   30e74:	ldr	x1, [x0]
   30e78:	ldr	x0, [sp, #56]
   30e7c:	lsl	x0, x0, #4
   30e80:	add	x0, x1, x0
   30e84:	ldr	w0, [x0, #8]
   30e88:	ubfx	x0, x0, #8, #10
   30e8c:	and	w2, w0, #0xffff
   30e90:	ldr	x0, [sp, #40]
   30e94:	ldr	x1, [x0]
   30e98:	ldr	x0, [sp, #32]
   30e9c:	lsl	x0, x0, #4
   30ea0:	add	x0, x1, x0
   30ea4:	ldr	w0, [x0, #8]
   30ea8:	ubfx	x0, x0, #8, #10
   30eac:	and	w0, w0, #0xffff
   30eb0:	ldr	x1, [sp, #40]
   30eb4:	ldr	x3, [x1]
   30eb8:	ldr	x1, [sp, #56]
   30ebc:	lsl	x1, x1, #4
   30ec0:	add	x1, x3, x1
   30ec4:	orr	w0, w2, w0
   30ec8:	and	w2, w0, #0xffff
   30ecc:	ldr	w0, [x1, #8]
   30ed0:	bfi	w0, w2, #8, #10
   30ed4:	str	w0, [x1, #8]
   30ed8:	ldr	x0, [sp, #40]
   30edc:	ldr	x1, [x0]
   30ee0:	ldr	x0, [sp, #56]
   30ee4:	lsl	x0, x0, #4
   30ee8:	add	x0, x1, x0
   30eec:	ldrb	w1, [x0, #10]
   30ef0:	orr	w1, w1, #0x4
   30ef4:	strb	w1, [x0, #10]
   30ef8:	ldr	x0, [sp, #40]
   30efc:	ldr	x1, [x0, #32]
   30f00:	ldr	x0, [sp, #56]
   30f04:	lsl	x0, x0, #3
   30f08:	add	x0, x1, x0
   30f0c:	ldr	x1, [sp, #32]
   30f10:	str	x1, [x0]
   30f14:	ldr	x0, [sp, #56]
   30f18:	ldp	x29, x30, [sp], #64
   30f1c:	ret
   30f20:	stp	x29, x30, [sp, #-64]!
   30f24:	mov	x29, sp
   30f28:	str	x0, [sp, #24]
   30f2c:	str	xzr, [sp, #48]
   30f30:	b	30f6c <rpl_regfree@@Base+0x2974>
   30f34:	ldr	x0, [sp, #24]
   30f38:	ldr	x2, [x0, #56]
   30f3c:	ldr	x1, [sp, #48]
   30f40:	mov	x0, x1
   30f44:	lsl	x0, x0, #1
   30f48:	add	x0, x0, x1
   30f4c:	lsl	x0, x0, #3
   30f50:	add	x0, x2, x0
   30f54:	mov	x2, #0x18                  	// #24
   30f58:	mov	w1, #0x0                   	// #0
   30f5c:	bl	acb0 <memset@plt>
   30f60:	ldr	x0, [sp, #48]
   30f64:	add	x0, x0, #0x1
   30f68:	str	x0, [sp, #48]
   30f6c:	ldr	x0, [sp, #24]
   30f70:	ldr	x1, [x0, #16]
   30f74:	ldr	x0, [sp, #48]
   30f78:	cmp	x1, x0
   30f7c:	b.hi	30f34 <rpl_regfree@@Base+0x293c>  // b.pmore
   30f80:	str	xzr, [sp, #56]
   30f84:	b	31060 <rpl_regfree@@Base+0x2a68>
   30f88:	ldr	x0, [sp, #24]
   30f8c:	ldr	x2, [x0, #48]
   30f90:	ldr	x1, [sp, #56]
   30f94:	mov	x0, x1
   30f98:	lsl	x0, x0, #1
   30f9c:	add	x0, x0, x1
   30fa0:	lsl	x0, x0, #3
   30fa4:	add	x0, x2, x0
   30fa8:	ldr	x0, [x0, #16]
   30fac:	str	x0, [sp, #40]
   30fb0:	str	xzr, [sp, #48]
   30fb4:	b	31024 <rpl_regfree@@Base+0x2a2c>
   30fb8:	ldr	x0, [sp, #24]
   30fbc:	ldr	x1, [x0, #56]
   30fc0:	ldr	x0, [sp, #48]
   30fc4:	lsl	x0, x0, #3
   30fc8:	ldr	x2, [sp, #40]
   30fcc:	add	x0, x2, x0
   30fd0:	ldr	x0, [x0]
   30fd4:	mov	x2, x0
   30fd8:	mov	x0, x2
   30fdc:	lsl	x0, x0, #1
   30fe0:	add	x0, x0, x2
   30fe4:	lsl	x0, x0, #3
   30fe8:	add	x0, x1, x0
   30fec:	ldr	x1, [sp, #56]
   30ff0:	bl	2c620 <printf_parse@@Base+0x5328>
   30ff4:	strb	w0, [sp, #39]
   30ff8:	ldrb	w0, [sp, #39]
   30ffc:	eor	w0, w0, #0x1
   31000:	and	w0, w0, #0xff
   31004:	and	x0, x0, #0xff
   31008:	cmp	x0, #0x0
   3100c:	b.eq	31018 <rpl_regfree@@Base+0x2a20>  // b.none
   31010:	mov	w0, #0xc                   	// #12
   31014:	b	31078 <rpl_regfree@@Base+0x2a80>
   31018:	ldr	x0, [sp, #48]
   3101c:	add	x0, x0, #0x1
   31020:	str	x0, [sp, #48]
   31024:	ldr	x0, [sp, #24]
   31028:	ldr	x2, [x0, #48]
   3102c:	ldr	x1, [sp, #56]
   31030:	mov	x0, x1
   31034:	lsl	x0, x0, #1
   31038:	add	x0, x0, x1
   3103c:	lsl	x0, x0, #3
   31040:	add	x0, x2, x0
   31044:	ldr	x0, [x0, #8]
   31048:	ldr	x1, [sp, #48]
   3104c:	cmp	x1, x0
   31050:	b.lt	30fb8 <rpl_regfree@@Base+0x29c0>  // b.tstop
   31054:	ldr	x0, [sp, #56]
   31058:	add	x0, x0, #0x1
   3105c:	str	x0, [sp, #56]
   31060:	ldr	x0, [sp, #24]
   31064:	ldr	x1, [x0, #16]
   31068:	ldr	x0, [sp, #56]
   3106c:	cmp	x1, x0
   31070:	b.hi	30f88 <rpl_regfree@@Base+0x2990>  // b.pmore
   31074:	mov	w0, #0x0                   	// #0
   31078:	ldp	x29, x30, [sp], #64
   3107c:	ret
   31080:	stp	x29, x30, [sp, #-80]!
   31084:	mov	x29, sp
   31088:	str	x0, [sp, #24]
   3108c:	strb	wzr, [sp, #71]
   31090:	str	xzr, [sp, #72]
   31094:	ldr	x0, [sp, #24]
   31098:	ldr	x1, [x0, #16]
   3109c:	ldr	x0, [sp, #72]
   310a0:	cmp	x1, x0
   310a4:	b.ne	310cc <rpl_regfree@@Base+0x2ad4>  // b.any
   310a8:	ldrb	w0, [sp, #71]
   310ac:	eor	w0, w0, #0x1
   310b0:	and	w0, w0, #0xff
   310b4:	cmp	w0, #0x0
   310b8:	b.eq	310c4 <rpl_regfree@@Base+0x2acc>  // b.none
   310bc:	mov	w0, #0x0                   	// #0
   310c0:	b	31188 <rpl_regfree@@Base+0x2b90>
   310c4:	strb	wzr, [sp, #71]
   310c8:	str	xzr, [sp, #72]
   310cc:	ldr	x0, [sp, #24]
   310d0:	ldr	x2, [x0, #48]
   310d4:	ldr	x1, [sp, #72]
   310d8:	mov	x0, x1
   310dc:	lsl	x0, x0, #1
   310e0:	add	x0, x0, x1
   310e4:	lsl	x0, x0, #3
   310e8:	add	x0, x2, x0
   310ec:	ldr	x0, [x0, #8]
   310f0:	cmp	x0, #0x0
   310f4:	b.ne	31174 <rpl_regfree@@Base+0x2b7c>  // b.any
   310f8:	add	x0, sp, #0x28
   310fc:	mov	w3, #0x1                   	// #1
   31100:	ldr	x2, [sp, #72]
   31104:	ldr	x1, [sp, #24]
   31108:	bl	31190 <rpl_regfree@@Base+0x2b98>
   3110c:	str	w0, [sp, #64]
   31110:	ldr	w0, [sp, #64]
   31114:	cmp	w0, #0x0
   31118:	cset	w0, ne  // ne = any
   3111c:	and	w0, w0, #0xff
   31120:	and	x0, x0, #0xff
   31124:	cmp	x0, #0x0
   31128:	b.eq	31134 <rpl_regfree@@Base+0x2b3c>  // b.none
   3112c:	ldr	w0, [sp, #64]
   31130:	b	31188 <rpl_regfree@@Base+0x2b90>
   31134:	ldr	x0, [sp, #24]
   31138:	ldr	x2, [x0, #48]
   3113c:	ldr	x1, [sp, #72]
   31140:	mov	x0, x1
   31144:	lsl	x0, x0, #1
   31148:	add	x0, x0, x1
   3114c:	lsl	x0, x0, #3
   31150:	add	x0, x2, x0
   31154:	ldr	x0, [x0, #8]
   31158:	cmp	x0, #0x0
   3115c:	b.ne	31178 <rpl_regfree@@Base+0x2b80>  // b.any
   31160:	mov	w0, #0x1                   	// #1
   31164:	strb	w0, [sp, #71]
   31168:	ldr	x0, [sp, #56]
   3116c:	bl	b130 <free@plt>
   31170:	b	31178 <rpl_regfree@@Base+0x2b80>
   31174:	nop
   31178:	ldr	x0, [sp, #72]
   3117c:	add	x0, x0, #0x1
   31180:	str	x0, [sp, #72]
   31184:	b	31094 <rpl_regfree@@Base+0x2a9c>
   31188:	ldp	x29, x30, [sp], #80
   3118c:	ret
   31190:	stp	x29, x30, [sp, #-128]!
   31194:	mov	x29, sp
   31198:	str	x0, [sp, #40]
   3119c:	str	x1, [sp, #32]
   311a0:	str	x2, [sp, #24]
   311a4:	strb	w3, [sp, #23]
   311a8:	strb	wzr, [sp, #119]
   311ac:	ldr	x0, [sp, #32]
   311b0:	ldr	x2, [x0, #40]
   311b4:	ldr	x1, [sp, #24]
   311b8:	mov	x0, x1
   311bc:	lsl	x0, x0, #1
   311c0:	add	x0, x0, x1
   311c4:	lsl	x0, x0, #3
   311c8:	add	x0, x2, x0
   311cc:	ldr	x0, [x0, #8]
   311d0:	add	x1, x0, #0x1
   311d4:	add	x0, sp, #0x48
   311d8:	bl	2b4b0 <printf_parse@@Base+0x41b8>
   311dc:	str	w0, [sp, #112]
   311e0:	ldr	w0, [sp, #112]
   311e4:	cmp	w0, #0x0
   311e8:	cset	w0, ne  // ne = any
   311ec:	and	w0, w0, #0xff
   311f0:	and	x0, x0, #0xff
   311f4:	cmp	x0, #0x0
   311f8:	b.eq	31204 <rpl_regfree@@Base+0x2c0c>  // b.none
   311fc:	ldr	w0, [sp, #112]
   31200:	b	315e0 <rpl_regfree@@Base+0x2fe8>
   31204:	ldr	x0, [sp, #32]
   31208:	ldr	x2, [x0, #48]
   3120c:	ldr	x1, [sp, #24]
   31210:	mov	x0, x1
   31214:	lsl	x0, x0, #1
   31218:	add	x0, x0, x1
   3121c:	lsl	x0, x0, #3
   31220:	add	x0, x2, x0
   31224:	mov	x1, #0xffffffffffffffff    	// #-1
   31228:	str	x1, [x0, #8]
   3122c:	ldr	x0, [sp, #32]
   31230:	ldr	x1, [x0]
   31234:	ldr	x0, [sp, #24]
   31238:	lsl	x0, x0, #4
   3123c:	add	x0, x1, x0
   31240:	ldr	w0, [x0, #8]
   31244:	and	w0, w0, #0x3ff00
   31248:	cmp	w0, #0x0
   3124c:	b.eq	31328 <rpl_regfree@@Base+0x2d30>  // b.none
   31250:	ldr	x0, [sp, #32]
   31254:	ldr	x2, [x0, #40]
   31258:	ldr	x1, [sp, #24]
   3125c:	mov	x0, x1
   31260:	lsl	x0, x0, #1
   31264:	add	x0, x0, x1
   31268:	lsl	x0, x0, #3
   3126c:	add	x0, x2, x0
   31270:	ldr	x0, [x0, #8]
   31274:	cmp	x0, #0x0
   31278:	b.eq	31328 <rpl_regfree@@Base+0x2d30>  // b.none
   3127c:	ldr	x0, [sp, #32]
   31280:	ldr	x2, [x0]
   31284:	ldr	x0, [sp, #32]
   31288:	ldr	x3, [x0, #40]
   3128c:	ldr	x1, [sp, #24]
   31290:	mov	x0, x1
   31294:	lsl	x0, x0, #1
   31298:	add	x0, x0, x1
   3129c:	lsl	x0, x0, #3
   312a0:	add	x0, x3, x0
   312a4:	ldr	x0, [x0, #16]
   312a8:	ldr	x0, [x0]
   312ac:	lsl	x0, x0, #4
   312b0:	add	x0, x2, x0
   312b4:	ldrb	w0, [x0, #10]
   312b8:	and	w0, w0, #0x4
   312bc:	and	w0, w0, #0xff
   312c0:	cmp	w0, #0x0
   312c4:	b.ne	31328 <rpl_regfree@@Base+0x2d30>  // b.any
   312c8:	ldr	x0, [sp, #32]
   312cc:	ldr	x1, [x0]
   312d0:	ldr	x0, [sp, #24]
   312d4:	lsl	x0, x0, #4
   312d8:	add	x0, x1, x0
   312dc:	ldr	w0, [x0, #8]
   312e0:	ubfx	x0, x0, #8, #10
   312e4:	and	w0, w0, #0xffff
   312e8:	mov	w4, w0
   312ec:	ldr	x3, [sp, #24]
   312f0:	ldr	x2, [sp, #24]
   312f4:	ldr	x1, [sp, #24]
   312f8:	ldr	x0, [sp, #32]
   312fc:	bl	3078c <rpl_regfree@@Base+0x2194>
   31300:	str	w0, [sp, #112]
   31304:	ldr	w0, [sp, #112]
   31308:	cmp	w0, #0x0
   3130c:	cset	w0, ne  // ne = any
   31310:	and	w0, w0, #0xff
   31314:	and	x0, x0, #0xff
   31318:	cmp	x0, #0x0
   3131c:	b.eq	31328 <rpl_regfree@@Base+0x2d30>  // b.none
   31320:	ldr	w0, [sp, #112]
   31324:	b	315e0 <rpl_regfree@@Base+0x2fe8>
   31328:	ldr	x0, [sp, #32]
   3132c:	ldr	x1, [x0]
   31330:	ldr	x0, [sp, #24]
   31334:	lsl	x0, x0, #4
   31338:	add	x0, x1, x0
   3133c:	ldrb	w0, [x0, #8]
   31340:	and	w0, w0, #0x8
   31344:	cmp	w0, #0x0
   31348:	b.eq	31510 <rpl_regfree@@Base+0x2f18>  // b.none
   3134c:	str	xzr, [sp, #120]
   31350:	b	314e0 <rpl_regfree@@Base+0x2ee8>
   31354:	ldr	x0, [sp, #32]
   31358:	ldr	x2, [x0, #40]
   3135c:	ldr	x1, [sp, #24]
   31360:	mov	x0, x1
   31364:	lsl	x0, x0, #1
   31368:	add	x0, x0, x1
   3136c:	lsl	x0, x0, #3
   31370:	add	x0, x2, x0
   31374:	ldr	x1, [x0, #16]
   31378:	ldr	x0, [sp, #120]
   3137c:	lsl	x0, x0, #3
   31380:	add	x0, x1, x0
   31384:	ldr	x0, [x0]
   31388:	str	x0, [sp, #104]
   3138c:	ldr	x0, [sp, #32]
   31390:	ldr	x2, [x0, #48]
   31394:	ldr	x1, [sp, #104]
   31398:	mov	x0, x1
   3139c:	lsl	x0, x0, #1
   313a0:	add	x0, x0, x1
   313a4:	lsl	x0, x0, #3
   313a8:	add	x0, x2, x0
   313ac:	ldr	x0, [x0, #8]
   313b0:	cmn	x0, #0x1
   313b4:	b.ne	313c4 <rpl_regfree@@Base+0x2dcc>  // b.any
   313b8:	mov	w0, #0x1                   	// #1
   313bc:	strb	w0, [sp, #119]
   313c0:	b	314d4 <rpl_regfree@@Base+0x2edc>
   313c4:	ldr	x0, [sp, #32]
   313c8:	ldr	x2, [x0, #48]
   313cc:	ldr	x1, [sp, #104]
   313d0:	mov	x0, x1
   313d4:	lsl	x0, x0, #1
   313d8:	add	x0, x0, x1
   313dc:	lsl	x0, x0, #3
   313e0:	add	x0, x2, x0
   313e4:	ldr	x0, [x0, #8]
   313e8:	cmp	x0, #0x0
   313ec:	b.ne	3142c <rpl_regfree@@Base+0x2e34>  // b.any
   313f0:	add	x0, sp, #0x30
   313f4:	mov	w3, #0x0                   	// #0
   313f8:	ldr	x2, [sp, #104]
   313fc:	ldr	x1, [sp, #32]
   31400:	bl	31190 <rpl_regfree@@Base+0x2b98>
   31404:	str	w0, [sp, #112]
   31408:	ldr	w0, [sp, #112]
   3140c:	cmp	w0, #0x0
   31410:	cset	w0, ne  // ne = any
   31414:	and	w0, w0, #0xff
   31418:	and	x0, x0, #0xff
   3141c:	cmp	x0, #0x0
   31420:	b.eq	31464 <rpl_regfree@@Base+0x2e6c>  // b.none
   31424:	ldr	w0, [sp, #112]
   31428:	b	315e0 <rpl_regfree@@Base+0x2fe8>
   3142c:	ldr	x0, [sp, #32]
   31430:	ldr	x2, [x0, #48]
   31434:	ldr	x1, [sp, #104]
   31438:	mov	x0, x1
   3143c:	lsl	x0, x0, #1
   31440:	add	x0, x0, x1
   31444:	lsl	x0, x0, #3
   31448:	add	x0, x2, x0
   3144c:	add	x2, sp, #0x30
   31450:	mov	x3, x0
   31454:	ldp	x0, x1, [x3]
   31458:	stp	x0, x1, [x2]
   3145c:	ldr	x0, [x3, #16]
   31460:	str	x0, [x2, #16]
   31464:	add	x1, sp, #0x30
   31468:	add	x0, sp, #0x48
   3146c:	bl	2bfa0 <printf_parse@@Base+0x4ca8>
   31470:	str	w0, [sp, #112]
   31474:	ldr	w0, [sp, #112]
   31478:	cmp	w0, #0x0
   3147c:	cset	w0, ne  // ne = any
   31480:	and	w0, w0, #0xff
   31484:	and	x0, x0, #0xff
   31488:	cmp	x0, #0x0
   3148c:	b.eq	31498 <rpl_regfree@@Base+0x2ea0>  // b.none
   31490:	ldr	w0, [sp, #112]
   31494:	b	315e0 <rpl_regfree@@Base+0x2fe8>
   31498:	ldr	x0, [sp, #32]
   3149c:	ldr	x2, [x0, #48]
   314a0:	ldr	x1, [sp, #104]
   314a4:	mov	x0, x1
   314a8:	lsl	x0, x0, #1
   314ac:	add	x0, x0, x1
   314b0:	lsl	x0, x0, #3
   314b4:	add	x0, x2, x0
   314b8:	ldr	x0, [x0, #8]
   314bc:	cmp	x0, #0x0
   314c0:	b.ne	314d4 <rpl_regfree@@Base+0x2edc>  // b.any
   314c4:	mov	w0, #0x1                   	// #1
   314c8:	strb	w0, [sp, #119]
   314cc:	ldr	x0, [sp, #64]
   314d0:	bl	b130 <free@plt>
   314d4:	ldr	x0, [sp, #120]
   314d8:	add	x0, x0, #0x1
   314dc:	str	x0, [sp, #120]
   314e0:	ldr	x0, [sp, #32]
   314e4:	ldr	x2, [x0, #40]
   314e8:	ldr	x1, [sp, #24]
   314ec:	mov	x0, x1
   314f0:	lsl	x0, x0, #1
   314f4:	add	x0, x0, x1
   314f8:	lsl	x0, x0, #3
   314fc:	add	x0, x2, x0
   31500:	ldr	x0, [x0, #8]
   31504:	ldr	x1, [sp, #120]
   31508:	cmp	x1, x0
   3150c:	b.lt	31354 <rpl_regfree@@Base+0x2d5c>  // b.tstop
   31510:	add	x0, sp, #0x48
   31514:	ldr	x1, [sp, #24]
   31518:	bl	2c3ec <printf_parse@@Base+0x50f4>
   3151c:	strb	w0, [sp, #103]
   31520:	ldrb	w0, [sp, #103]
   31524:	eor	w0, w0, #0x1
   31528:	and	w0, w0, #0xff
   3152c:	and	x0, x0, #0xff
   31530:	cmp	x0, #0x0
   31534:	b.eq	31540 <rpl_regfree@@Base+0x2f48>  // b.none
   31538:	mov	w0, #0xc                   	// #12
   3153c:	b	315e0 <rpl_regfree@@Base+0x2fe8>
   31540:	ldrb	w0, [sp, #119]
   31544:	cmp	w0, #0x0
   31548:	b.eq	31588 <rpl_regfree@@Base+0x2f90>  // b.none
   3154c:	ldrb	w0, [sp, #23]
   31550:	eor	w0, w0, #0x1
   31554:	and	w0, w0, #0xff
   31558:	cmp	w0, #0x0
   3155c:	b.eq	31588 <rpl_regfree@@Base+0x2f90>  // b.none
   31560:	ldr	x0, [sp, #32]
   31564:	ldr	x2, [x0, #48]
   31568:	ldr	x1, [sp, #24]
   3156c:	mov	x0, x1
   31570:	lsl	x0, x0, #1
   31574:	add	x0, x0, x1
   31578:	lsl	x0, x0, #3
   3157c:	add	x0, x2, x0
   31580:	str	xzr, [x0, #8]
   31584:	b	315c0 <rpl_regfree@@Base+0x2fc8>
   31588:	ldr	x0, [sp, #32]
   3158c:	ldr	x2, [x0, #48]
   31590:	ldr	x1, [sp, #24]
   31594:	mov	x0, x1
   31598:	lsl	x0, x0, #1
   3159c:	add	x0, x0, x1
   315a0:	lsl	x0, x0, #3
   315a4:	add	x0, x2, x0
   315a8:	mov	x3, x0
   315ac:	add	x2, sp, #0x48
   315b0:	ldp	x0, x1, [x2]
   315b4:	stp	x0, x1, [x3]
   315b8:	ldr	x0, [x2, #16]
   315bc:	str	x0, [x3, #16]
   315c0:	ldr	x0, [sp, #40]
   315c4:	mov	x3, x0
   315c8:	add	x2, sp, #0x48
   315cc:	ldp	x0, x1, [x2]
   315d0:	stp	x0, x1, [x3]
   315d4:	ldr	x0, [x2, #16]
   315d8:	str	x0, [x3, #16]
   315dc:	mov	w0, #0x0                   	// #0
   315e0:	ldp	x29, x30, [sp], #128
   315e4:	ret
   315e8:	stp	x29, x30, [sp, #-48]!
   315ec:	mov	x29, sp
   315f0:	str	x0, [sp, #40]
   315f4:	str	x1, [sp, #32]
   315f8:	str	x2, [sp, #24]
   315fc:	ldr	x2, [sp, #24]
   31600:	ldr	x1, [sp, #32]
   31604:	ldr	x0, [sp, #40]
   31608:	bl	31634 <rpl_regfree@@Base+0x303c>
   3160c:	mov	w2, w0
   31610:	ldr	x0, [sp, #32]
   31614:	ldr	x1, [x0, #72]
   31618:	sxtw	x0, w2
   3161c:	add	x1, x1, x0
   31620:	ldr	x0, [sp, #32]
   31624:	str	x1, [x0, #72]
   31628:	nop
   3162c:	ldp	x29, x30, [sp], #48
   31630:	ret
   31634:	stp	x29, x30, [sp, #-80]!
   31638:	mov	x29, sp
   3163c:	str	x0, [sp, #40]
   31640:	str	x1, [sp, #32]
   31644:	str	x2, [sp, #24]
   31648:	ldr	x0, [sp, #32]
   3164c:	ldr	x1, [x0, #104]
   31650:	ldr	x0, [sp, #32]
   31654:	ldr	x0, [x0, #72]
   31658:	cmp	x1, x0
   3165c:	b.gt	31674 <rpl_regfree@@Base+0x307c>
   31660:	ldr	x0, [sp, #40]
   31664:	mov	w1, #0x2                   	// #2
   31668:	strb	w1, [x0, #8]
   3166c:	mov	w0, #0x0                   	// #0
   31670:	b	320a0 <rpl_regfree@@Base+0x3aa8>
   31674:	ldr	x0, [sp, #32]
   31678:	ldr	x0, [x0, #8]
   3167c:	ldr	x1, [sp, #32]
   31680:	ldr	x1, [x1, #72]
   31684:	add	x0, x0, x1
   31688:	ldrb	w0, [x0]
   3168c:	strb	w0, [sp, #79]
   31690:	ldr	x0, [sp, #40]
   31694:	ldrb	w1, [sp, #79]
   31698:	strb	w1, [x0]
   3169c:	ldr	x0, [sp, #40]
   316a0:	ldrb	w1, [x0, #10]
   316a4:	and	w1, w1, #0xffffffbf
   316a8:	strb	w1, [x0, #10]
   316ac:	ldr	x0, [sp, #40]
   316b0:	ldrb	w1, [x0, #10]
   316b4:	and	w1, w1, #0xffffffdf
   316b8:	strb	w1, [x0, #10]
   316bc:	ldr	x0, [sp, #32]
   316c0:	ldr	w0, [x0, #144]
   316c4:	cmp	w0, #0x1
   316c8:	b.le	3172c <rpl_regfree@@Base+0x3134>
   316cc:	ldr	x0, [sp, #32]
   316d0:	ldr	x1, [x0, #72]
   316d4:	ldr	x0, [sp, #32]
   316d8:	ldr	x0, [x0, #48]
   316dc:	cmp	x1, x0
   316e0:	b.eq	3172c <rpl_regfree@@Base+0x3134>  // b.none
   316e4:	ldr	x0, [sp, #32]
   316e8:	ldr	x1, [x0, #16]
   316ec:	ldr	x0, [sp, #32]
   316f0:	ldr	x0, [x0, #72]
   316f4:	lsl	x0, x0, #2
   316f8:	add	x0, x1, x0
   316fc:	ldr	w0, [x0]
   31700:	cmn	w0, #0x1
   31704:	b.ne	3172c <rpl_regfree@@Base+0x3134>  // b.any
   31708:	ldr	x0, [sp, #40]
   3170c:	mov	w1, #0x1                   	// #1
   31710:	strb	w1, [x0, #8]
   31714:	ldr	x0, [sp, #40]
   31718:	ldrb	w1, [x0, #10]
   3171c:	orr	w1, w1, #0x20
   31720:	strb	w1, [x0, #10]
   31724:	mov	w0, #0x1                   	// #1
   31728:	b	320a0 <rpl_regfree@@Base+0x3aa8>
   3172c:	ldrb	w0, [sp, #79]
   31730:	cmp	w0, #0x5c
   31734:	b.ne	31c0c <rpl_regfree@@Base+0x3614>  // b.any
   31738:	ldr	x0, [sp, #32]
   3173c:	ldr	x0, [x0, #72]
   31740:	add	x1, x0, #0x1
   31744:	ldr	x0, [sp, #32]
   31748:	ldr	x0, [x0, #88]
   3174c:	cmp	x1, x0
   31750:	b.lt	31768 <rpl_regfree@@Base+0x3170>  // b.tstop
   31754:	ldr	x0, [sp, #40]
   31758:	mov	w1, #0x24                  	// #36
   3175c:	strb	w1, [x0, #8]
   31760:	mov	w0, #0x1                   	// #1
   31764:	b	320a0 <rpl_regfree@@Base+0x3aa8>
   31768:	mov	x1, #0x1                   	// #1
   3176c:	ldr	x0, [sp, #32]
   31770:	bl	2af18 <printf_parse@@Base+0x3c20>
   31774:	strb	w0, [sp, #70]
   31778:	ldr	x0, [sp, #40]
   3177c:	ldrb	w1, [sp, #70]
   31780:	strb	w1, [x0]
   31784:	ldr	x0, [sp, #40]
   31788:	mov	w1, #0x1                   	// #1
   3178c:	strb	w1, [x0, #8]
   31790:	ldr	x0, [sp, #32]
   31794:	ldr	w0, [x0, #144]
   31798:	cmp	w0, #0x1
   3179c:	b.le	31804 <rpl_regfree@@Base+0x320c>
   317a0:	ldr	x0, [sp, #32]
   317a4:	ldr	x0, [x0, #72]
   317a8:	add	x0, x0, #0x1
   317ac:	mov	x1, x0
   317b0:	ldr	x0, [sp, #32]
   317b4:	bl	28b04 <printf_parse@@Base+0x180c>
   317b8:	str	w0, [sp, #64]
   317bc:	ldr	w0, [sp, #64]
   317c0:	bl	b470 <iswalnum@plt>
   317c4:	cmp	w0, #0x0
   317c8:	b.ne	317d8 <rpl_regfree@@Base+0x31e0>  // b.any
   317cc:	ldr	w0, [sp, #64]
   317d0:	cmp	w0, #0x5f
   317d4:	b.ne	317e0 <rpl_regfree@@Base+0x31e8>  // b.any
   317d8:	mov	w0, #0x1                   	// #1
   317dc:	b	317e4 <rpl_regfree@@Base+0x31ec>
   317e0:	mov	w0, #0x0                   	// #0
   317e4:	cmp	w0, #0x0
   317e8:	cset	w0, ne  // ne = any
   317ec:	and	w2, w0, #0xff
   317f0:	ldr	x1, [sp, #40]
   317f4:	ldrb	w0, [x1, #10]
   317f8:	bfi	w0, w2, #6, #1
   317fc:	strb	w0, [x1, #10]
   31800:	b	3185c <rpl_regfree@@Base+0x3264>
   31804:	bl	b090 <__ctype_b_loc@plt>
   31808:	ldr	x1, [x0]
   3180c:	ldrb	w0, [sp, #70]
   31810:	lsl	x0, x0, #1
   31814:	add	x0, x1, x0
   31818:	ldrh	w0, [x0]
   3181c:	and	w0, w0, #0x8
   31820:	cmp	w0, #0x0
   31824:	b.ne	31834 <rpl_regfree@@Base+0x323c>  // b.any
   31828:	ldrb	w0, [sp, #70]
   3182c:	cmp	w0, #0x5f
   31830:	b.ne	3183c <rpl_regfree@@Base+0x3244>  // b.any
   31834:	mov	w0, #0x1                   	// #1
   31838:	b	31840 <rpl_regfree@@Base+0x3248>
   3183c:	mov	w0, #0x0                   	// #0
   31840:	cmp	w0, #0x0
   31844:	cset	w0, ne  // ne = any
   31848:	and	w2, w0, #0xff
   3184c:	ldr	x1, [sp, #40]
   31850:	ldrb	w0, [x1, #10]
   31854:	bfi	w0, w2, #6, #1
   31858:	strb	w0, [x1, #10]
   3185c:	ldrb	w0, [sp, #70]
   31860:	sub	w0, w0, #0x27
   31864:	cmp	w0, #0x56
   31868:	b.hi	31b70 <rpl_regfree@@Base+0x3578>  // b.pmore
   3186c:	adrp	x1, 45000 <vasnprintf@@Base+0x4e04>
   31870:	add	x1, x1, #0x54c
   31874:	ldr	w0, [x1, w0, uxtw #2]
   31878:	adr	x1, 31884 <rpl_regfree@@Base+0x328c>
   3187c:	add	x0, x1, w0, sxtw #2
   31880:	br	x0
   31884:	ldr	x0, [sp, #24]
   31888:	and	x0, x0, #0x400
   3188c:	cmp	x0, #0x0
   31890:	b.ne	31b78 <rpl_regfree@@Base+0x3580>  // b.any
   31894:	ldr	x0, [sp, #24]
   31898:	and	x0, x0, #0x8000
   3189c:	cmp	x0, #0x0
   318a0:	b.ne	31b78 <rpl_regfree@@Base+0x3580>  // b.any
   318a4:	ldr	x0, [sp, #40]
   318a8:	mov	w1, #0xa                   	// #10
   318ac:	strb	w1, [x0, #8]
   318b0:	b	31b78 <rpl_regfree@@Base+0x3580>
   318b4:	ldr	x0, [sp, #24]
   318b8:	and	x0, x0, #0x4000
   318bc:	cmp	x0, #0x0
   318c0:	b.ne	31b80 <rpl_regfree@@Base+0x3588>  // b.any
   318c4:	ldr	x0, [sp, #40]
   318c8:	mov	w1, #0x4                   	// #4
   318cc:	strb	w1, [x0, #8]
   318d0:	ldrb	w0, [sp, #70]
   318d4:	sub	w0, w0, #0x31
   318d8:	sxtw	x1, w0
   318dc:	ldr	x0, [sp, #40]
   318e0:	str	x1, [x0]
   318e4:	b	31b80 <rpl_regfree@@Base+0x3588>
   318e8:	ldr	x0, [sp, #24]
   318ec:	and	x0, x0, #0x80000
   318f0:	cmp	x0, #0x0
   318f4:	b.ne	31b88 <rpl_regfree@@Base+0x3590>  // b.any
   318f8:	ldr	x0, [sp, #40]
   318fc:	mov	w1, #0xc                   	// #12
   31900:	strb	w1, [x0, #8]
   31904:	ldr	x0, [sp, #40]
   31908:	mov	w1, #0x6                   	// #6
   3190c:	str	w1, [x0]
   31910:	b	31b88 <rpl_regfree@@Base+0x3590>
   31914:	ldr	x0, [sp, #24]
   31918:	and	x0, x0, #0x80000
   3191c:	cmp	x0, #0x0
   31920:	b.ne	31b90 <rpl_regfree@@Base+0x3598>  // b.any
   31924:	ldr	x0, [sp, #40]
   31928:	mov	w1, #0xc                   	// #12
   3192c:	strb	w1, [x0, #8]
   31930:	ldr	x0, [sp, #40]
   31934:	mov	w1, #0x9                   	// #9
   31938:	str	w1, [x0]
   3193c:	b	31b90 <rpl_regfree@@Base+0x3598>
   31940:	ldr	x0, [sp, #24]
   31944:	and	x0, x0, #0x80000
   31948:	cmp	x0, #0x0
   3194c:	b.ne	31b98 <rpl_regfree@@Base+0x35a0>  // b.any
   31950:	ldr	x0, [sp, #40]
   31954:	mov	w1, #0xc                   	// #12
   31958:	strb	w1, [x0, #8]
   3195c:	ldr	x0, [sp, #40]
   31960:	mov	w1, #0x100                 	// #256
   31964:	str	w1, [x0]
   31968:	b	31b98 <rpl_regfree@@Base+0x35a0>
   3196c:	ldr	x0, [sp, #24]
   31970:	and	x0, x0, #0x80000
   31974:	cmp	x0, #0x0
   31978:	b.ne	31ba0 <rpl_regfree@@Base+0x35a8>  // b.any
   3197c:	ldr	x0, [sp, #40]
   31980:	mov	w1, #0xc                   	// #12
   31984:	strb	w1, [x0, #8]
   31988:	ldr	x0, [sp, #40]
   3198c:	mov	w1, #0x200                 	// #512
   31990:	str	w1, [x0]
   31994:	b	31ba0 <rpl_regfree@@Base+0x35a8>
   31998:	ldr	x0, [sp, #24]
   3199c:	and	x0, x0, #0x80000
   319a0:	cmp	x0, #0x0
   319a4:	b.ne	31ba8 <rpl_regfree@@Base+0x35b0>  // b.any
   319a8:	ldr	x0, [sp, #40]
   319ac:	mov	w1, #0x20                  	// #32
   319b0:	strb	w1, [x0, #8]
   319b4:	b	31ba8 <rpl_regfree@@Base+0x35b0>
   319b8:	ldr	x0, [sp, #24]
   319bc:	and	x0, x0, #0x80000
   319c0:	cmp	x0, #0x0
   319c4:	b.ne	31bb0 <rpl_regfree@@Base+0x35b8>  // b.any
   319c8:	ldr	x0, [sp, #40]
   319cc:	mov	w1, #0x21                  	// #33
   319d0:	strb	w1, [x0, #8]
   319d4:	b	31bb0 <rpl_regfree@@Base+0x35b8>
   319d8:	ldr	x0, [sp, #24]
   319dc:	and	x0, x0, #0x80000
   319e0:	cmp	x0, #0x0
   319e4:	b.ne	31bb8 <rpl_regfree@@Base+0x35c0>  // b.any
   319e8:	ldr	x0, [sp, #40]
   319ec:	mov	w1, #0x22                  	// #34
   319f0:	strb	w1, [x0, #8]
   319f4:	b	31bb8 <rpl_regfree@@Base+0x35c0>
   319f8:	ldr	x0, [sp, #24]
   319fc:	and	x0, x0, #0x80000
   31a00:	cmp	x0, #0x0
   31a04:	b.ne	31bc0 <rpl_regfree@@Base+0x35c8>  // b.any
   31a08:	ldr	x0, [sp, #40]
   31a0c:	mov	w1, #0x23                  	// #35
   31a10:	strb	w1, [x0, #8]
   31a14:	b	31bc0 <rpl_regfree@@Base+0x35c8>
   31a18:	ldr	x0, [sp, #24]
   31a1c:	and	x0, x0, #0x80000
   31a20:	cmp	x0, #0x0
   31a24:	b.ne	31bc8 <rpl_regfree@@Base+0x35d0>  // b.any
   31a28:	ldr	x0, [sp, #40]
   31a2c:	mov	w1, #0xc                   	// #12
   31a30:	strb	w1, [x0, #8]
   31a34:	ldr	x0, [sp, #40]
   31a38:	mov	w1, #0x40                  	// #64
   31a3c:	str	w1, [x0]
   31a40:	b	31bc8 <rpl_regfree@@Base+0x35d0>
   31a44:	ldr	x0, [sp, #24]
   31a48:	and	x0, x0, #0x80000
   31a4c:	cmp	x0, #0x0
   31a50:	b.ne	31bd0 <rpl_regfree@@Base+0x35d8>  // b.any
   31a54:	ldr	x0, [sp, #40]
   31a58:	mov	w1, #0xc                   	// #12
   31a5c:	strb	w1, [x0, #8]
   31a60:	ldr	x0, [sp, #40]
   31a64:	mov	w1, #0x80                  	// #128
   31a68:	str	w1, [x0]
   31a6c:	b	31bd0 <rpl_regfree@@Base+0x35d8>
   31a70:	ldr	x0, [sp, #24]
   31a74:	and	x0, x0, #0x2000
   31a78:	cmp	x0, #0x0
   31a7c:	b.ne	31bd8 <rpl_regfree@@Base+0x35e0>  // b.any
   31a80:	ldr	x0, [sp, #40]
   31a84:	mov	w1, #0x8                   	// #8
   31a88:	strb	w1, [x0, #8]
   31a8c:	b	31bd8 <rpl_regfree@@Base+0x35e0>
   31a90:	ldr	x0, [sp, #24]
   31a94:	and	x0, x0, #0x2000
   31a98:	cmp	x0, #0x0
   31a9c:	b.ne	31be0 <rpl_regfree@@Base+0x35e8>  // b.any
   31aa0:	ldr	x0, [sp, #40]
   31aa4:	mov	w1, #0x9                   	// #9
   31aa8:	strb	w1, [x0, #8]
   31aac:	b	31be0 <rpl_regfree@@Base+0x35e8>
   31ab0:	ldr	x0, [sp, #24]
   31ab4:	and	x0, x0, #0x400
   31ab8:	cmp	x0, #0x0
   31abc:	b.ne	31be8 <rpl_regfree@@Base+0x35f0>  // b.any
   31ac0:	ldr	x0, [sp, #24]
   31ac4:	and	x0, x0, #0x2
   31ac8:	cmp	x0, #0x0
   31acc:	b.eq	31be8 <rpl_regfree@@Base+0x35f0>  // b.none
   31ad0:	ldr	x0, [sp, #40]
   31ad4:	mov	w1, #0x12                  	// #18
   31ad8:	strb	w1, [x0, #8]
   31adc:	b	31be8 <rpl_regfree@@Base+0x35f0>
   31ae0:	ldr	x0, [sp, #24]
   31ae4:	and	x0, x0, #0x400
   31ae8:	cmp	x0, #0x0
   31aec:	b.ne	31bf0 <rpl_regfree@@Base+0x35f8>  // b.any
   31af0:	ldr	x0, [sp, #24]
   31af4:	and	x0, x0, #0x2
   31af8:	cmp	x0, #0x0
   31afc:	b.eq	31bf0 <rpl_regfree@@Base+0x35f8>  // b.none
   31b00:	ldr	x0, [sp, #40]
   31b04:	mov	w1, #0x13                  	// #19
   31b08:	strb	w1, [x0, #8]
   31b0c:	b	31bf0 <rpl_regfree@@Base+0x35f8>
   31b10:	ldr	x0, [sp, #24]
   31b14:	and	x0, x0, #0x200
   31b18:	cmp	x0, #0x0
   31b1c:	b.eq	31bf8 <rpl_regfree@@Base+0x3600>  // b.none
   31b20:	ldr	x0, [sp, #24]
   31b24:	and	x0, x0, #0x1000
   31b28:	cmp	x0, #0x0
   31b2c:	b.ne	31bf8 <rpl_regfree@@Base+0x3600>  // b.any
   31b30:	ldr	x0, [sp, #40]
   31b34:	mov	w1, #0x17                  	// #23
   31b38:	strb	w1, [x0, #8]
   31b3c:	b	31bf8 <rpl_regfree@@Base+0x3600>
   31b40:	ldr	x0, [sp, #24]
   31b44:	and	x0, x0, #0x200
   31b48:	cmp	x0, #0x0
   31b4c:	b.eq	31c00 <rpl_regfree@@Base+0x3608>  // b.none
   31b50:	ldr	x0, [sp, #24]
   31b54:	and	x0, x0, #0x1000
   31b58:	cmp	x0, #0x0
   31b5c:	b.ne	31c00 <rpl_regfree@@Base+0x3608>  // b.any
   31b60:	ldr	x0, [sp, #40]
   31b64:	mov	w1, #0x18                  	// #24
   31b68:	strb	w1, [x0, #8]
   31b6c:	b	31c00 <rpl_regfree@@Base+0x3608>
   31b70:	nop
   31b74:	b	31c04 <rpl_regfree@@Base+0x360c>
   31b78:	nop
   31b7c:	b	31c04 <rpl_regfree@@Base+0x360c>
   31b80:	nop
   31b84:	b	31c04 <rpl_regfree@@Base+0x360c>
   31b88:	nop
   31b8c:	b	31c04 <rpl_regfree@@Base+0x360c>
   31b90:	nop
   31b94:	b	31c04 <rpl_regfree@@Base+0x360c>
   31b98:	nop
   31b9c:	b	31c04 <rpl_regfree@@Base+0x360c>
   31ba0:	nop
   31ba4:	b	31c04 <rpl_regfree@@Base+0x360c>
   31ba8:	nop
   31bac:	b	31c04 <rpl_regfree@@Base+0x360c>
   31bb0:	nop
   31bb4:	b	31c04 <rpl_regfree@@Base+0x360c>
   31bb8:	nop
   31bbc:	b	31c04 <rpl_regfree@@Base+0x360c>
   31bc0:	nop
   31bc4:	b	31c04 <rpl_regfree@@Base+0x360c>
   31bc8:	nop
   31bcc:	b	31c04 <rpl_regfree@@Base+0x360c>
   31bd0:	nop
   31bd4:	b	31c04 <rpl_regfree@@Base+0x360c>
   31bd8:	nop
   31bdc:	b	31c04 <rpl_regfree@@Base+0x360c>
   31be0:	nop
   31be4:	b	31c04 <rpl_regfree@@Base+0x360c>
   31be8:	nop
   31bec:	b	31c04 <rpl_regfree@@Base+0x360c>
   31bf0:	nop
   31bf4:	b	31c04 <rpl_regfree@@Base+0x360c>
   31bf8:	nop
   31bfc:	b	31c04 <rpl_regfree@@Base+0x360c>
   31c00:	nop
   31c04:	mov	w0, #0x2                   	// #2
   31c08:	b	320a0 <rpl_regfree@@Base+0x3aa8>
   31c0c:	ldr	x0, [sp, #40]
   31c10:	mov	w1, #0x1                   	// #1
   31c14:	strb	w1, [x0, #8]
   31c18:	ldr	x0, [sp, #32]
   31c1c:	ldr	w0, [x0, #144]
   31c20:	cmp	w0, #0x1
   31c24:	b.le	31c88 <rpl_regfree@@Base+0x3690>
   31c28:	ldr	x0, [sp, #32]
   31c2c:	ldr	x0, [x0, #72]
   31c30:	mov	x1, x0
   31c34:	ldr	x0, [sp, #32]
   31c38:	bl	28b04 <printf_parse@@Base+0x180c>
   31c3c:	str	w0, [sp, #72]
   31c40:	ldr	w0, [sp, #72]
   31c44:	bl	b470 <iswalnum@plt>
   31c48:	cmp	w0, #0x0
   31c4c:	b.ne	31c5c <rpl_regfree@@Base+0x3664>  // b.any
   31c50:	ldr	w0, [sp, #72]
   31c54:	cmp	w0, #0x5f
   31c58:	b.ne	31c64 <rpl_regfree@@Base+0x366c>  // b.any
   31c5c:	mov	w0, #0x1                   	// #1
   31c60:	b	31c68 <rpl_regfree@@Base+0x3670>
   31c64:	mov	w0, #0x0                   	// #0
   31c68:	cmp	w0, #0x0
   31c6c:	cset	w0, ne  // ne = any
   31c70:	and	w2, w0, #0xff
   31c74:	ldr	x1, [sp, #40]
   31c78:	ldrb	w0, [x1, #10]
   31c7c:	bfi	w0, w2, #6, #1
   31c80:	strb	w0, [x1, #10]
   31c84:	b	31ce8 <rpl_regfree@@Base+0x36f0>
   31c88:	bl	b090 <__ctype_b_loc@plt>
   31c8c:	ldr	x1, [x0]
   31c90:	ldr	x0, [sp, #40]
   31c94:	ldrb	w0, [x0]
   31c98:	and	x0, x0, #0xff
   31c9c:	lsl	x0, x0, #1
   31ca0:	add	x0, x1, x0
   31ca4:	ldrh	w0, [x0]
   31ca8:	and	w0, w0, #0x8
   31cac:	cmp	w0, #0x0
   31cb0:	b.ne	31cc4 <rpl_regfree@@Base+0x36cc>  // b.any
   31cb4:	ldr	x0, [sp, #40]
   31cb8:	ldrb	w0, [x0]
   31cbc:	cmp	w0, #0x5f
   31cc0:	b.ne	31ccc <rpl_regfree@@Base+0x36d4>  // b.any
   31cc4:	mov	w0, #0x1                   	// #1
   31cc8:	b	31cd0 <rpl_regfree@@Base+0x36d8>
   31ccc:	mov	w0, #0x0                   	// #0
   31cd0:	and	w0, w0, #0x1
   31cd4:	and	w2, w0, #0xff
   31cd8:	ldr	x1, [sp, #40]
   31cdc:	ldrb	w0, [x1, #10]
   31ce0:	bfi	w0, w2, #6, #1
   31ce4:	strb	w0, [x1, #10]
   31ce8:	ldrb	w0, [sp, #79]
   31cec:	cmp	w0, #0x7d
   31cf0:	b.eq	31ea0 <rpl_regfree@@Base+0x38a8>  // b.none
   31cf4:	cmp	w0, #0x7d
   31cf8:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31cfc:	cmp	w0, #0x7c
   31d00:	b.eq	31dd0 <rpl_regfree@@Base+0x37d8>  // b.none
   31d04:	cmp	w0, #0x7c
   31d08:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d0c:	cmp	w0, #0x7b
   31d10:	b.eq	31e70 <rpl_regfree@@Base+0x3878>  // b.none
   31d14:	cmp	w0, #0x7b
   31d18:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d1c:	cmp	w0, #0x5e
   31d20:	b.eq	31f30 <rpl_regfree@@Base+0x3938>  // b.none
   31d24:	cmp	w0, #0x5e
   31d28:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d2c:	cmp	w0, #0x5b
   31d30:	b.eq	31f10 <rpl_regfree@@Base+0x3918>  // b.none
   31d34:	cmp	w0, #0x5b
   31d38:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d3c:	cmp	w0, #0x3f
   31d40:	b.eq	31e40 <rpl_regfree@@Base+0x3848>  // b.none
   31d44:	cmp	w0, #0x3f
   31d48:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d4c:	cmp	w0, #0x2e
   31d50:	b.eq	31f20 <rpl_regfree@@Base+0x3928>  // b.none
   31d54:	cmp	w0, #0x2e
   31d58:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d5c:	cmp	w0, #0x2b
   31d60:	b.eq	31e10 <rpl_regfree@@Base+0x3818>  // b.none
   31d64:	cmp	w0, #0x2b
   31d68:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d6c:	cmp	w0, #0x2a
   31d70:	b.eq	31e00 <rpl_regfree@@Base+0x3808>  // b.none
   31d74:	cmp	w0, #0x2a
   31d78:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d7c:	cmp	w0, #0x29
   31d80:	b.eq	31ef0 <rpl_regfree@@Base+0x38f8>  // b.none
   31d84:	cmp	w0, #0x29
   31d88:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d8c:	cmp	w0, #0x28
   31d90:	b.eq	31ed0 <rpl_regfree@@Base+0x38d8>  // b.none
   31d94:	cmp	w0, #0x28
   31d98:	b.gt	32048 <rpl_regfree@@Base+0x3a50>
   31d9c:	cmp	w0, #0xa
   31da0:	b.eq	31db0 <rpl_regfree@@Base+0x37b8>  // b.none
   31da4:	cmp	w0, #0x24
   31da8:	b.eq	31fb0 <rpl_regfree@@Base+0x39b8>  // b.none
   31dac:	b	32048 <rpl_regfree@@Base+0x3a50>
   31db0:	ldr	x0, [sp, #24]
   31db4:	and	x0, x0, #0x800
   31db8:	cmp	x0, #0x0
   31dbc:	b.eq	32050 <rpl_regfree@@Base+0x3a58>  // b.none
   31dc0:	ldr	x0, [sp, #40]
   31dc4:	mov	w1, #0xa                   	// #10
   31dc8:	strb	w1, [x0, #8]
   31dcc:	b	32050 <rpl_regfree@@Base+0x3a58>
   31dd0:	ldr	x0, [sp, #24]
   31dd4:	and	x0, x0, #0x400
   31dd8:	cmp	x0, #0x0
   31ddc:	b.ne	32058 <rpl_regfree@@Base+0x3a60>  // b.any
   31de0:	ldr	x0, [sp, #24]
   31de4:	and	x0, x0, #0x8000
   31de8:	cmp	x0, #0x0
   31dec:	b.eq	32058 <rpl_regfree@@Base+0x3a60>  // b.none
   31df0:	ldr	x0, [sp, #40]
   31df4:	mov	w1, #0xa                   	// #10
   31df8:	strb	w1, [x0, #8]
   31dfc:	b	32058 <rpl_regfree@@Base+0x3a60>
   31e00:	ldr	x0, [sp, #40]
   31e04:	mov	w1, #0xb                   	// #11
   31e08:	strb	w1, [x0, #8]
   31e0c:	b	3209c <rpl_regfree@@Base+0x3aa4>
   31e10:	ldr	x0, [sp, #24]
   31e14:	and	x0, x0, #0x400
   31e18:	cmp	x0, #0x0
   31e1c:	b.ne	32060 <rpl_regfree@@Base+0x3a68>  // b.any
   31e20:	ldr	x0, [sp, #24]
   31e24:	and	x0, x0, #0x2
   31e28:	cmp	x0, #0x0
   31e2c:	b.ne	32060 <rpl_regfree@@Base+0x3a68>  // b.any
   31e30:	ldr	x0, [sp, #40]
   31e34:	mov	w1, #0x12                  	// #18
   31e38:	strb	w1, [x0, #8]
   31e3c:	b	32060 <rpl_regfree@@Base+0x3a68>
   31e40:	ldr	x0, [sp, #24]
   31e44:	and	x0, x0, #0x400
   31e48:	cmp	x0, #0x0
   31e4c:	b.ne	32068 <rpl_regfree@@Base+0x3a70>  // b.any
   31e50:	ldr	x0, [sp, #24]
   31e54:	and	x0, x0, #0x2
   31e58:	cmp	x0, #0x0
   31e5c:	b.ne	32068 <rpl_regfree@@Base+0x3a70>  // b.any
   31e60:	ldr	x0, [sp, #40]
   31e64:	mov	w1, #0x13                  	// #19
   31e68:	strb	w1, [x0, #8]
   31e6c:	b	32068 <rpl_regfree@@Base+0x3a70>
   31e70:	ldr	x0, [sp, #24]
   31e74:	and	x0, x0, #0x200
   31e78:	cmp	x0, #0x0
   31e7c:	b.eq	32070 <rpl_regfree@@Base+0x3a78>  // b.none
   31e80:	ldr	x0, [sp, #24]
   31e84:	and	x0, x0, #0x1000
   31e88:	cmp	x0, #0x0
   31e8c:	b.eq	32070 <rpl_regfree@@Base+0x3a78>  // b.none
   31e90:	ldr	x0, [sp, #40]
   31e94:	mov	w1, #0x17                  	// #23
   31e98:	strb	w1, [x0, #8]
   31e9c:	b	32070 <rpl_regfree@@Base+0x3a78>
   31ea0:	ldr	x0, [sp, #24]
   31ea4:	and	x0, x0, #0x200
   31ea8:	cmp	x0, #0x0
   31eac:	b.eq	32078 <rpl_regfree@@Base+0x3a80>  // b.none
   31eb0:	ldr	x0, [sp, #24]
   31eb4:	and	x0, x0, #0x1000
   31eb8:	cmp	x0, #0x0
   31ebc:	b.eq	32078 <rpl_regfree@@Base+0x3a80>  // b.none
   31ec0:	ldr	x0, [sp, #40]
   31ec4:	mov	w1, #0x18                  	// #24
   31ec8:	strb	w1, [x0, #8]
   31ecc:	b	32078 <rpl_regfree@@Base+0x3a80>
   31ed0:	ldr	x0, [sp, #24]
   31ed4:	and	x0, x0, #0x2000
   31ed8:	cmp	x0, #0x0
   31edc:	b.eq	32080 <rpl_regfree@@Base+0x3a88>  // b.none
   31ee0:	ldr	x0, [sp, #40]
   31ee4:	mov	w1, #0x8                   	// #8
   31ee8:	strb	w1, [x0, #8]
   31eec:	b	32080 <rpl_regfree@@Base+0x3a88>
   31ef0:	ldr	x0, [sp, #24]
   31ef4:	and	x0, x0, #0x2000
   31ef8:	cmp	x0, #0x0
   31efc:	b.eq	32088 <rpl_regfree@@Base+0x3a90>  // b.none
   31f00:	ldr	x0, [sp, #40]
   31f04:	mov	w1, #0x9                   	// #9
   31f08:	strb	w1, [x0, #8]
   31f0c:	b	32088 <rpl_regfree@@Base+0x3a90>
   31f10:	ldr	x0, [sp, #40]
   31f14:	mov	w1, #0x14                  	// #20
   31f18:	strb	w1, [x0, #8]
   31f1c:	b	3209c <rpl_regfree@@Base+0x3aa4>
   31f20:	ldr	x0, [sp, #40]
   31f24:	mov	w1, #0x5                   	// #5
   31f28:	strb	w1, [x0, #8]
   31f2c:	b	3209c <rpl_regfree@@Base+0x3aa4>
   31f30:	ldr	x1, [sp, #24]
   31f34:	mov	x0, #0x8                   	// #8
   31f38:	movk	x0, #0x80, lsl #16
   31f3c:	and	x0, x1, x0
   31f40:	cmp	x0, #0x0
   31f44:	b.ne	31f94 <rpl_regfree@@Base+0x399c>  // b.any
   31f48:	ldr	x0, [sp, #32]
   31f4c:	ldr	x0, [x0, #72]
   31f50:	cmp	x0, #0x0
   31f54:	b.eq	31f94 <rpl_regfree@@Base+0x399c>  // b.none
   31f58:	ldr	x0, [sp, #32]
   31f5c:	ldr	x1, [x0, #8]
   31f60:	ldr	x0, [sp, #32]
   31f64:	ldr	x0, [x0, #72]
   31f68:	sub	x0, x0, #0x1
   31f6c:	add	x0, x1, x0
   31f70:	ldrb	w0, [x0]
   31f74:	strb	w0, [sp, #71]
   31f78:	ldr	x0, [sp, #24]
   31f7c:	and	x0, x0, #0x800
   31f80:	cmp	x0, #0x0
   31f84:	b.eq	32090 <rpl_regfree@@Base+0x3a98>  // b.none
   31f88:	ldrb	w0, [sp, #71]
   31f8c:	cmp	w0, #0xa
   31f90:	b.ne	32090 <rpl_regfree@@Base+0x3a98>  // b.any
   31f94:	ldr	x0, [sp, #40]
   31f98:	mov	w1, #0xc                   	// #12
   31f9c:	strb	w1, [x0, #8]
   31fa0:	ldr	x0, [sp, #40]
   31fa4:	mov	w1, #0x10                  	// #16
   31fa8:	str	w1, [x0]
   31fac:	b	3209c <rpl_regfree@@Base+0x3aa4>
   31fb0:	ldr	x0, [sp, #24]
   31fb4:	and	x0, x0, #0x8
   31fb8:	cmp	x0, #0x0
   31fbc:	b.ne	3202c <rpl_regfree@@Base+0x3a34>  // b.any
   31fc0:	ldr	x0, [sp, #32]
   31fc4:	ldr	x0, [x0, #72]
   31fc8:	add	x1, x0, #0x1
   31fcc:	ldr	x0, [sp, #32]
   31fd0:	ldr	x0, [x0, #88]
   31fd4:	cmp	x1, x0
   31fd8:	b.eq	3202c <rpl_regfree@@Base+0x3a34>  // b.none
   31fdc:	ldr	x0, [sp, #32]
   31fe0:	ldr	x0, [x0, #72]
   31fe4:	add	x1, x0, #0x1
   31fe8:	ldr	x0, [sp, #32]
   31fec:	str	x1, [x0, #72]
   31ff0:	add	x0, sp, #0x30
   31ff4:	ldr	x2, [sp, #24]
   31ff8:	ldr	x1, [sp, #32]
   31ffc:	bl	31634 <rpl_regfree@@Base+0x303c>
   32000:	ldr	x0, [sp, #32]
   32004:	ldr	x0, [x0, #72]
   32008:	sub	x1, x0, #0x1
   3200c:	ldr	x0, [sp, #32]
   32010:	str	x1, [x0, #72]
   32014:	ldrb	w0, [sp, #56]
   32018:	cmp	w0, #0xa
   3201c:	b.eq	3202c <rpl_regfree@@Base+0x3a34>  // b.none
   32020:	ldrb	w0, [sp, #56]
   32024:	cmp	w0, #0x9
   32028:	b.ne	32098 <rpl_regfree@@Base+0x3aa0>  // b.any
   3202c:	ldr	x0, [sp, #40]
   32030:	mov	w1, #0xc                   	// #12
   32034:	strb	w1, [x0, #8]
   32038:	ldr	x0, [sp, #40]
   3203c:	mov	w1, #0x20                  	// #32
   32040:	str	w1, [x0]
   32044:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32048:	nop
   3204c:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32050:	nop
   32054:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32058:	nop
   3205c:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32060:	nop
   32064:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32068:	nop
   3206c:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32070:	nop
   32074:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32078:	nop
   3207c:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32080:	nop
   32084:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32088:	nop
   3208c:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32090:	nop
   32094:	b	3209c <rpl_regfree@@Base+0x3aa4>
   32098:	nop
   3209c:	mov	w0, #0x1                   	// #1
   320a0:	ldp	x29, x30, [sp], #80
   320a4:	ret
   320a8:	sub	sp, sp, #0x30
   320ac:	str	x0, [sp, #24]
   320b0:	str	x1, [sp, #16]
   320b4:	str	x2, [sp, #8]
   320b8:	ldr	x0, [sp, #16]
   320bc:	ldr	x1, [x0, #104]
   320c0:	ldr	x0, [sp, #16]
   320c4:	ldr	x0, [x0, #72]
   320c8:	cmp	x1, x0
   320cc:	b.gt	320e4 <rpl_regfree@@Base+0x3aec>
   320d0:	ldr	x0, [sp, #24]
   320d4:	mov	w1, #0x2                   	// #2
   320d8:	strb	w1, [x0, #8]
   320dc:	mov	w0, #0x0                   	// #0
   320e0:	b	32354 <rpl_regfree@@Base+0x3d5c>
   320e4:	ldr	x0, [sp, #16]
   320e8:	ldr	x0, [x0, #8]
   320ec:	ldr	x1, [sp, #16]
   320f0:	ldr	x1, [x1, #72]
   320f4:	add	x0, x0, x1
   320f8:	ldrb	w0, [x0]
   320fc:	strb	w0, [sp, #39]
   32100:	ldr	x0, [sp, #24]
   32104:	ldrb	w1, [sp, #39]
   32108:	strb	w1, [x0]
   3210c:	ldr	x0, [sp, #16]
   32110:	ldr	w0, [x0, #144]
   32114:	cmp	w0, #0x1
   32118:	b.le	3216c <rpl_regfree@@Base+0x3b74>
   3211c:	ldr	x0, [sp, #16]
   32120:	ldr	x1, [x0, #72]
   32124:	ldr	x0, [sp, #16]
   32128:	ldr	x0, [x0, #48]
   3212c:	cmp	x1, x0
   32130:	b.eq	3216c <rpl_regfree@@Base+0x3b74>  // b.none
   32134:	ldr	x0, [sp, #16]
   32138:	ldr	x1, [x0, #16]
   3213c:	ldr	x0, [sp, #16]
   32140:	ldr	x0, [x0, #72]
   32144:	lsl	x0, x0, #2
   32148:	add	x0, x1, x0
   3214c:	ldr	w0, [x0]
   32150:	cmn	w0, #0x1
   32154:	b.ne	3216c <rpl_regfree@@Base+0x3b74>  // b.any
   32158:	ldr	x0, [sp, #24]
   3215c:	mov	w1, #0x1                   	// #1
   32160:	strb	w1, [x0, #8]
   32164:	mov	w0, #0x1                   	// #1
   32168:	b	32354 <rpl_regfree@@Base+0x3d5c>
   3216c:	ldrb	w0, [sp, #39]
   32170:	cmp	w0, #0x5c
   32174:	b.ne	321f4 <rpl_regfree@@Base+0x3bfc>  // b.any
   32178:	ldr	x0, [sp, #8]
   3217c:	and	x0, x0, #0x1
   32180:	cmp	x0, #0x0
   32184:	b.eq	321f4 <rpl_regfree@@Base+0x3bfc>  // b.none
   32188:	ldr	x0, [sp, #16]
   3218c:	ldr	x0, [x0, #72]
   32190:	add	x1, x0, #0x1
   32194:	ldr	x0, [sp, #16]
   32198:	ldr	x0, [x0, #88]
   3219c:	cmp	x1, x0
   321a0:	b.ge	321f4 <rpl_regfree@@Base+0x3bfc>  // b.tcont
   321a4:	ldr	x0, [sp, #16]
   321a8:	ldr	x0, [x0, #72]
   321ac:	add	x1, x0, #0x1
   321b0:	ldr	x0, [sp, #16]
   321b4:	str	x1, [x0, #72]
   321b8:	ldr	x0, [sp, #16]
   321bc:	ldr	x0, [x0, #8]
   321c0:	ldr	x1, [sp, #16]
   321c4:	ldr	x1, [x1, #72]
   321c8:	add	x0, x0, x1
   321cc:	ldrb	w0, [x0]
   321d0:	strb	w0, [sp, #38]
   321d4:	ldr	x0, [sp, #24]
   321d8:	ldrb	w1, [sp, #38]
   321dc:	strb	w1, [x0]
   321e0:	ldr	x0, [sp, #24]
   321e4:	mov	w1, #0x1                   	// #1
   321e8:	strb	w1, [x0, #8]
   321ec:	mov	w0, #0x1                   	// #1
   321f0:	b	32354 <rpl_regfree@@Base+0x3d5c>
   321f4:	ldrb	w0, [sp, #39]
   321f8:	cmp	w0, #0x5b
   321fc:	b.ne	322ec <rpl_regfree@@Base+0x3cf4>  // b.any
   32200:	ldr	x0, [sp, #16]
   32204:	ldr	x0, [x0, #72]
   32208:	add	x1, x0, #0x1
   3220c:	ldr	x0, [sp, #16]
   32210:	ldr	x0, [x0, #88]
   32214:	cmp	x1, x0
   32218:	b.ge	32240 <rpl_regfree@@Base+0x3c48>  // b.tcont
   3221c:	ldr	x0, [sp, #16]
   32220:	ldr	x1, [x0, #8]
   32224:	ldr	x0, [sp, #16]
   32228:	ldr	x0, [x0, #72]
   3222c:	add	x0, x0, #0x1
   32230:	add	x0, x1, x0
   32234:	ldrb	w0, [x0]
   32238:	strb	w0, [sp, #47]
   3223c:	b	32244 <rpl_regfree@@Base+0x3c4c>
   32240:	strb	wzr, [sp, #47]
   32244:	ldr	x0, [sp, #24]
   32248:	ldrb	w1, [sp, #47]
   3224c:	strb	w1, [x0]
   32250:	mov	w0, #0x2                   	// #2
   32254:	str	w0, [sp, #40]
   32258:	ldrb	w0, [sp, #47]
   3225c:	cmp	w0, #0x3d
   32260:	b.eq	32290 <rpl_regfree@@Base+0x3c98>  // b.none
   32264:	cmp	w0, #0x3d
   32268:	b.gt	322c0 <rpl_regfree@@Base+0x3cc8>
   3226c:	cmp	w0, #0x2e
   32270:	b.eq	32280 <rpl_regfree@@Base+0x3c88>  // b.none
   32274:	cmp	w0, #0x3a
   32278:	b.eq	322a0 <rpl_regfree@@Base+0x3ca8>  // b.none
   3227c:	b	322c0 <rpl_regfree@@Base+0x3cc8>
   32280:	ldr	x0, [sp, #24]
   32284:	mov	w1, #0x1a                  	// #26
   32288:	strb	w1, [x0, #8]
   3228c:	b	322e4 <rpl_regfree@@Base+0x3cec>
   32290:	ldr	x0, [sp, #24]
   32294:	mov	w1, #0x1c                  	// #28
   32298:	strb	w1, [x0, #8]
   3229c:	b	322e4 <rpl_regfree@@Base+0x3cec>
   322a0:	ldr	x0, [sp, #8]
   322a4:	and	x0, x0, #0x4
   322a8:	cmp	x0, #0x0
   322ac:	b.eq	322c0 <rpl_regfree@@Base+0x3cc8>  // b.none
   322b0:	ldr	x0, [sp, #24]
   322b4:	mov	w1, #0x1e                  	// #30
   322b8:	strb	w1, [x0, #8]
   322bc:	b	322e4 <rpl_regfree@@Base+0x3cec>
   322c0:	ldr	x0, [sp, #24]
   322c4:	mov	w1, #0x1                   	// #1
   322c8:	strb	w1, [x0, #8]
   322cc:	ldr	x0, [sp, #24]
   322d0:	ldrb	w1, [sp, #39]
   322d4:	strb	w1, [x0]
   322d8:	mov	w0, #0x1                   	// #1
   322dc:	str	w0, [sp, #40]
   322e0:	nop
   322e4:	ldr	w0, [sp, #40]
   322e8:	b	32354 <rpl_regfree@@Base+0x3d5c>
   322ec:	ldrb	w0, [sp, #39]
   322f0:	cmp	w0, #0x5e
   322f4:	b.eq	32334 <rpl_regfree@@Base+0x3d3c>  // b.none
   322f8:	cmp	w0, #0x5e
   322fc:	b.gt	32344 <rpl_regfree@@Base+0x3d4c>
   32300:	cmp	w0, #0x2d
   32304:	b.eq	32314 <rpl_regfree@@Base+0x3d1c>  // b.none
   32308:	cmp	w0, #0x5d
   3230c:	b.eq	32324 <rpl_regfree@@Base+0x3d2c>  // b.none
   32310:	b	32344 <rpl_regfree@@Base+0x3d4c>
   32314:	ldr	x0, [sp, #24]
   32318:	mov	w1, #0x16                  	// #22
   3231c:	strb	w1, [x0, #8]
   32320:	b	32350 <rpl_regfree@@Base+0x3d58>
   32324:	ldr	x0, [sp, #24]
   32328:	mov	w1, #0x15                  	// #21
   3232c:	strb	w1, [x0, #8]
   32330:	b	32350 <rpl_regfree@@Base+0x3d58>
   32334:	ldr	x0, [sp, #24]
   32338:	mov	w1, #0x19                  	// #25
   3233c:	strb	w1, [x0, #8]
   32340:	b	32350 <rpl_regfree@@Base+0x3d58>
   32344:	ldr	x0, [sp, #24]
   32348:	mov	w1, #0x1                   	// #1
   3234c:	strb	w1, [x0, #8]
   32350:	mov	w0, #0x1                   	// #1
   32354:	add	sp, sp, #0x30
   32358:	ret
   3235c:	stp	x29, x30, [sp, #-96]!
   32360:	mov	x29, sp
   32364:	str	x0, [sp, #40]
   32368:	str	x1, [sp, #32]
   3236c:	str	x2, [sp, #24]
   32370:	str	x3, [sp, #16]
   32374:	ldr	x0, [sp, #32]
   32378:	ldr	x0, [x0]
   3237c:	str	x0, [sp, #80]
   32380:	ldr	x0, [sp, #80]
   32384:	ldr	x1, [sp, #24]
   32388:	str	x1, [x0, #216]
   3238c:	ldr	x0, [sp, #24]
   32390:	orr	x1, x0, #0x800000
   32394:	add	x0, sp, #0x30
   32398:	mov	x2, x1
   3239c:	ldr	x1, [sp, #40]
   323a0:	bl	315e8 <rpl_regfree@@Base+0x2ff0>
   323a4:	add	x0, sp, #0x30
   323a8:	ldr	x5, [sp, #16]
   323ac:	mov	x4, #0x0                   	// #0
   323b0:	ldr	x3, [sp, #24]
   323b4:	mov	x2, x0
   323b8:	ldr	x1, [sp, #32]
   323bc:	ldr	x0, [sp, #40]
   323c0:	bl	324ac <rpl_regfree@@Base+0x3eb4>
   323c4:	str	x0, [sp, #72]
   323c8:	ldr	x0, [sp, #16]
   323cc:	ldr	w0, [x0]
   323d0:	cmp	w0, #0x0
   323d4:	cset	w0, ne  // ne = any
   323d8:	and	w0, w0, #0xff
   323dc:	and	x0, x0, #0xff
   323e0:	cmp	x0, #0x0
   323e4:	b.eq	3240c <rpl_regfree@@Base+0x3e14>  // b.none
   323e8:	ldr	x0, [sp, #72]
   323ec:	cmp	x0, #0x0
   323f0:	cset	w0, eq  // eq = none
   323f4:	and	w0, w0, #0xff
   323f8:	and	x0, x0, #0xff
   323fc:	cmp	x0, #0x0
   32400:	b.eq	3240c <rpl_regfree@@Base+0x3e14>  // b.none
   32404:	mov	x0, #0x0                   	// #0
   32408:	b	324a4 <rpl_regfree@@Base+0x3eac>
   3240c:	mov	w3, #0x2                   	// #2
   32410:	mov	x2, #0x0                   	// #0
   32414:	mov	x1, #0x0                   	// #0
   32418:	ldr	x0, [sp, #80]
   3241c:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   32420:	str	x0, [sp, #64]
   32424:	ldr	x0, [sp, #72]
   32428:	cmp	x0, #0x0
   3242c:	b.eq	3244c <rpl_regfree@@Base+0x3e54>  // b.none
   32430:	mov	w3, #0x10                  	// #16
   32434:	ldr	x2, [sp, #64]
   32438:	ldr	x1, [sp, #72]
   3243c:	ldr	x0, [sp, #80]
   32440:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   32444:	str	x0, [sp, #88]
   32448:	b	32454 <rpl_regfree@@Base+0x3e5c>
   3244c:	ldr	x0, [sp, #64]
   32450:	str	x0, [sp, #88]
   32454:	ldr	x0, [sp, #64]
   32458:	cmp	x0, #0x0
   3245c:	cset	w0, eq  // eq = none
   32460:	and	w0, w0, #0xff
   32464:	and	x0, x0, #0xff
   32468:	cmp	x0, #0x0
   3246c:	b.ne	3248c <rpl_regfree@@Base+0x3e94>  // b.any
   32470:	ldr	x0, [sp, #88]
   32474:	cmp	x0, #0x0
   32478:	cset	w0, eq  // eq = none
   3247c:	and	w0, w0, #0xff
   32480:	and	x0, x0, #0xff
   32484:	cmp	x0, #0x0
   32488:	b.eq	324a0 <rpl_regfree@@Base+0x3ea8>  // b.none
   3248c:	ldr	x0, [sp, #16]
   32490:	mov	w1, #0xc                   	// #12
   32494:	str	w1, [x0]
   32498:	mov	x0, #0x0                   	// #0
   3249c:	b	324a4 <rpl_regfree@@Base+0x3eac>
   324a0:	ldr	x0, [sp, #88]
   324a4:	ldp	x29, x30, [sp], #96
   324a8:	ret
   324ac:	stp	x29, x30, [sp, #-112]!
   324b0:	mov	x29, sp
   324b4:	str	x0, [sp, #56]
   324b8:	str	x1, [sp, #48]
   324bc:	str	x2, [sp, #40]
   324c0:	str	x3, [sp, #32]
   324c4:	str	x4, [sp, #24]
   324c8:	str	x5, [sp, #16]
   324cc:	ldr	x0, [sp, #48]
   324d0:	ldr	x0, [x0]
   324d4:	str	x0, [sp, #88]
   324d8:	str	xzr, [sp, #96]
   324dc:	ldr	x0, [sp, #88]
   324e0:	ldr	x0, [x0, #168]
   324e4:	str	x0, [sp, #80]
   324e8:	ldr	x5, [sp, #16]
   324ec:	ldr	x4, [sp, #24]
   324f0:	ldr	x3, [sp, #32]
   324f4:	ldr	x2, [sp, #40]
   324f8:	ldr	x1, [sp, #48]
   324fc:	ldr	x0, [sp, #56]
   32500:	bl	326c0 <rpl_regfree@@Base+0x40c8>
   32504:	str	x0, [sp, #104]
   32508:	ldr	x0, [sp, #16]
   3250c:	ldr	w0, [x0]
   32510:	cmp	w0, #0x0
   32514:	cset	w0, ne  // ne = any
   32518:	and	w0, w0, #0xff
   3251c:	and	x0, x0, #0xff
   32520:	cmp	x0, #0x0
   32524:	b.eq	326a4 <rpl_regfree@@Base+0x40ac>  // b.none
   32528:	ldr	x0, [sp, #104]
   3252c:	cmp	x0, #0x0
   32530:	cset	w0, eq  // eq = none
   32534:	and	w0, w0, #0xff
   32538:	and	x0, x0, #0xff
   3253c:	cmp	x0, #0x0
   32540:	b.eq	326a4 <rpl_regfree@@Base+0x40ac>  // b.none
   32544:	mov	x0, #0x0                   	// #0
   32548:	b	326b8 <rpl_regfree@@Base+0x40c0>
   3254c:	ldr	x0, [sp, #32]
   32550:	orr	x0, x0, #0x800000
   32554:	mov	x2, x0
   32558:	ldr	x1, [sp, #56]
   3255c:	ldr	x0, [sp, #40]
   32560:	bl	315e8 <rpl_regfree@@Base+0x2ff0>
   32564:	ldr	x0, [sp, #40]
   32568:	ldrb	w0, [x0, #8]
   3256c:	cmp	w0, #0xa
   32570:	b.eq	32658 <rpl_regfree@@Base+0x4060>  // b.none
   32574:	ldr	x0, [sp, #40]
   32578:	ldrb	w0, [x0, #8]
   3257c:	cmp	w0, #0x2
   32580:	b.eq	32658 <rpl_regfree@@Base+0x4060>  // b.none
   32584:	ldr	x0, [sp, #24]
   32588:	cmp	x0, #0x0
   3258c:	b.eq	325a0 <rpl_regfree@@Base+0x3fa8>  // b.none
   32590:	ldr	x0, [sp, #40]
   32594:	ldrb	w0, [x0, #8]
   32598:	cmp	w0, #0x9
   3259c:	b.eq	32658 <rpl_regfree@@Base+0x4060>  // b.none
   325a0:	ldr	x0, [sp, #88]
   325a4:	ldr	x0, [x0, #168]
   325a8:	str	x0, [sp, #72]
   325ac:	ldr	x0, [sp, #88]
   325b0:	ldr	x1, [sp, #80]
   325b4:	str	x1, [x0, #168]
   325b8:	ldr	x5, [sp, #16]
   325bc:	ldr	x4, [sp, #24]
   325c0:	ldr	x3, [sp, #32]
   325c4:	ldr	x2, [sp, #40]
   325c8:	ldr	x1, [sp, #48]
   325cc:	ldr	x0, [sp, #56]
   325d0:	bl	326c0 <rpl_regfree@@Base+0x40c8>
   325d4:	str	x0, [sp, #96]
   325d8:	ldr	x0, [sp, #16]
   325dc:	ldr	w0, [x0]
   325e0:	cmp	w0, #0x0
   325e4:	cset	w0, ne  // ne = any
   325e8:	and	w0, w0, #0xff
   325ec:	and	x0, x0, #0xff
   325f0:	cmp	x0, #0x0
   325f4:	b.eq	3263c <rpl_regfree@@Base+0x4044>  // b.none
   325f8:	ldr	x0, [sp, #96]
   325fc:	cmp	x0, #0x0
   32600:	cset	w0, eq  // eq = none
   32604:	and	w0, w0, #0xff
   32608:	and	x0, x0, #0xff
   3260c:	cmp	x0, #0x0
   32610:	b.eq	3263c <rpl_regfree@@Base+0x4044>  // b.none
   32614:	ldr	x0, [sp, #104]
   32618:	cmp	x0, #0x0
   3261c:	b.eq	32634 <rpl_regfree@@Base+0x403c>  // b.none
   32620:	mov	x2, #0x0                   	// #0
   32624:	adrp	x0, 36000 <rpl_regfree@@Base+0x7a08>
   32628:	add	x1, x0, #0x10
   3262c:	ldr	x0, [sp, #104]
   32630:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   32634:	mov	x0, #0x0                   	// #0
   32638:	b	326b8 <rpl_regfree@@Base+0x40c0>
   3263c:	ldr	x0, [sp, #88]
   32640:	ldr	x1, [x0, #168]
   32644:	ldr	x0, [sp, #72]
   32648:	orr	x1, x1, x0
   3264c:	ldr	x0, [sp, #88]
   32650:	str	x1, [x0, #168]
   32654:	b	3265c <rpl_regfree@@Base+0x4064>
   32658:	str	xzr, [sp, #96]
   3265c:	mov	w3, #0xa                   	// #10
   32660:	ldr	x2, [sp, #96]
   32664:	ldr	x1, [sp, #104]
   32668:	ldr	x0, [sp, #88]
   3266c:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   32670:	str	x0, [sp, #104]
   32674:	ldr	x0, [sp, #104]
   32678:	cmp	x0, #0x0
   3267c:	cset	w0, eq  // eq = none
   32680:	and	w0, w0, #0xff
   32684:	and	x0, x0, #0xff
   32688:	cmp	x0, #0x0
   3268c:	b.eq	326a4 <rpl_regfree@@Base+0x40ac>  // b.none
   32690:	ldr	x0, [sp, #16]
   32694:	mov	w1, #0xc                   	// #12
   32698:	str	w1, [x0]
   3269c:	mov	x0, #0x0                   	// #0
   326a0:	b	326b8 <rpl_regfree@@Base+0x40c0>
   326a4:	ldr	x0, [sp, #40]
   326a8:	ldrb	w0, [x0, #8]
   326ac:	cmp	w0, #0xa
   326b0:	b.eq	3254c <rpl_regfree@@Base+0x3f54>  // b.none
   326b4:	ldr	x0, [sp, #104]
   326b8:	ldp	x29, x30, [sp], #112
   326bc:	ret
   326c0:	stp	x29, x30, [sp, #-96]!
   326c4:	mov	x29, sp
   326c8:	str	x0, [sp, #56]
   326cc:	str	x1, [sp, #48]
   326d0:	str	x2, [sp, #40]
   326d4:	str	x3, [sp, #32]
   326d8:	str	x4, [sp, #24]
   326dc:	str	x5, [sp, #16]
   326e0:	ldr	x0, [sp, #48]
   326e4:	ldr	x0, [x0]
   326e8:	str	x0, [sp, #80]
   326ec:	ldr	x5, [sp, #16]
   326f0:	ldr	x4, [sp, #24]
   326f4:	ldr	x3, [sp, #32]
   326f8:	ldr	x2, [sp, #40]
   326fc:	ldr	x1, [sp, #48]
   32700:	ldr	x0, [sp, #56]
   32704:	bl	328b4 <rpl_regfree@@Base+0x42bc>
   32708:	str	x0, [sp, #88]
   3270c:	ldr	x0, [sp, #16]
   32710:	ldr	w0, [x0]
   32714:	cmp	w0, #0x0
   32718:	cset	w0, ne  // ne = any
   3271c:	and	w0, w0, #0xff
   32720:	and	x0, x0, #0xff
   32724:	cmp	x0, #0x0
   32728:	b.eq	3286c <rpl_regfree@@Base+0x4274>  // b.none
   3272c:	ldr	x0, [sp, #88]
   32730:	cmp	x0, #0x0
   32734:	cset	w0, eq  // eq = none
   32738:	and	w0, w0, #0xff
   3273c:	and	x0, x0, #0xff
   32740:	cmp	x0, #0x0
   32744:	b.eq	3286c <rpl_regfree@@Base+0x4274>  // b.none
   32748:	mov	x0, #0x0                   	// #0
   3274c:	b	328ac <rpl_regfree@@Base+0x42b4>
   32750:	ldr	x5, [sp, #16]
   32754:	ldr	x4, [sp, #24]
   32758:	ldr	x3, [sp, #32]
   3275c:	ldr	x2, [sp, #40]
   32760:	ldr	x1, [sp, #48]
   32764:	ldr	x0, [sp, #56]
   32768:	bl	328b4 <rpl_regfree@@Base+0x42bc>
   3276c:	str	x0, [sp, #72]
   32770:	ldr	x0, [sp, #16]
   32774:	ldr	w0, [x0]
   32778:	cmp	w0, #0x0
   3277c:	cset	w0, ne  // ne = any
   32780:	and	w0, w0, #0xff
   32784:	and	x0, x0, #0xff
   32788:	cmp	x0, #0x0
   3278c:	b.eq	327d4 <rpl_regfree@@Base+0x41dc>  // b.none
   32790:	ldr	x0, [sp, #72]
   32794:	cmp	x0, #0x0
   32798:	cset	w0, eq  // eq = none
   3279c:	and	w0, w0, #0xff
   327a0:	and	x0, x0, #0xff
   327a4:	cmp	x0, #0x0
   327a8:	b.eq	327d4 <rpl_regfree@@Base+0x41dc>  // b.none
   327ac:	ldr	x0, [sp, #88]
   327b0:	cmp	x0, #0x0
   327b4:	b.eq	327cc <rpl_regfree@@Base+0x41d4>  // b.none
   327b8:	mov	x2, #0x0                   	// #0
   327bc:	adrp	x0, 36000 <rpl_regfree@@Base+0x7a08>
   327c0:	add	x1, x0, #0x10
   327c4:	ldr	x0, [sp, #88]
   327c8:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   327cc:	mov	x0, #0x0                   	// #0
   327d0:	b	328ac <rpl_regfree@@Base+0x42b4>
   327d4:	ldr	x0, [sp, #88]
   327d8:	cmp	x0, #0x0
   327dc:	b.eq	32858 <rpl_regfree@@Base+0x4260>  // b.none
   327e0:	ldr	x0, [sp, #72]
   327e4:	cmp	x0, #0x0
   327e8:	b.eq	32858 <rpl_regfree@@Base+0x4260>  // b.none
   327ec:	mov	w3, #0x10                  	// #16
   327f0:	ldr	x2, [sp, #72]
   327f4:	ldr	x1, [sp, #88]
   327f8:	ldr	x0, [sp, #80]
   327fc:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   32800:	str	x0, [sp, #64]
   32804:	ldr	x0, [sp, #64]
   32808:	cmp	x0, #0x0
   3280c:	b.ne	3284c <rpl_regfree@@Base+0x4254>  // b.any
   32810:	mov	x2, #0x0                   	// #0
   32814:	adrp	x0, 36000 <rpl_regfree@@Base+0x7a08>
   32818:	add	x1, x0, #0x10
   3281c:	ldr	x0, [sp, #72]
   32820:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   32824:	mov	x2, #0x0                   	// #0
   32828:	adrp	x0, 36000 <rpl_regfree@@Base+0x7a08>
   3282c:	add	x1, x0, #0x10
   32830:	ldr	x0, [sp, #88]
   32834:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   32838:	ldr	x0, [sp, #16]
   3283c:	mov	w1, #0xc                   	// #12
   32840:	str	w1, [x0]
   32844:	mov	x0, #0x0                   	// #0
   32848:	b	328ac <rpl_regfree@@Base+0x42b4>
   3284c:	ldr	x0, [sp, #64]
   32850:	str	x0, [sp, #88]
   32854:	b	3286c <rpl_regfree@@Base+0x4274>
   32858:	ldr	x0, [sp, #88]
   3285c:	cmp	x0, #0x0
   32860:	b.ne	3286c <rpl_regfree@@Base+0x4274>  // b.any
   32864:	ldr	x0, [sp, #72]
   32868:	str	x0, [sp, #88]
   3286c:	ldr	x0, [sp, #40]
   32870:	ldrb	w0, [x0, #8]
   32874:	cmp	w0, #0xa
   32878:	b.eq	328a8 <rpl_regfree@@Base+0x42b0>  // b.none
   3287c:	ldr	x0, [sp, #40]
   32880:	ldrb	w0, [x0, #8]
   32884:	cmp	w0, #0x2
   32888:	b.eq	328a8 <rpl_regfree@@Base+0x42b0>  // b.none
   3288c:	ldr	x0, [sp, #24]
   32890:	cmp	x0, #0x0
   32894:	b.eq	32750 <rpl_regfree@@Base+0x4158>  // b.none
   32898:	ldr	x0, [sp, #40]
   3289c:	ldrb	w0, [x0, #8]
   328a0:	cmp	w0, #0x9
   328a4:	b.ne	32750 <rpl_regfree@@Base+0x4158>  // b.any
   328a8:	ldr	x0, [sp, #88]
   328ac:	ldp	x29, x30, [sp], #96
   328b0:	ret
   328b4:	stp	x29, x30, [sp, #-112]!
   328b8:	mov	x29, sp
   328bc:	str	x0, [sp, #56]
   328c0:	str	x1, [sp, #48]
   328c4:	str	x2, [sp, #40]
   328c8:	str	x3, [sp, #32]
   328cc:	str	x4, [sp, #24]
   328d0:	str	x5, [sp, #16]
   328d4:	ldr	x0, [sp, #48]
   328d8:	ldr	x0, [x0]
   328dc:	str	x0, [sp, #88]
   328e0:	ldr	x0, [sp, #40]
   328e4:	ldrb	w0, [x0, #8]
   328e8:	cmp	w0, #0x24
   328ec:	b.eq	3312c <rpl_regfree@@Base+0x4b34>  // b.none
   328f0:	cmp	w0, #0x24
   328f4:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   328f8:	cmp	w0, #0x23
   328fc:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32900:	cmp	w0, #0x22
   32904:	b.ge	330a0 <rpl_regfree@@Base+0x4aa8>  // b.tcont
   32908:	cmp	w0, #0x21
   3290c:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32910:	cmp	w0, #0x20
   32914:	b.ge	3301c <rpl_regfree@@Base+0x4a24>  // b.tcont
   32918:	cmp	w0, #0x18
   3291c:	b.eq	32d80 <rpl_regfree@@Base+0x4788>  // b.none
   32920:	cmp	w0, #0x18
   32924:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32928:	cmp	w0, #0x17
   3292c:	b.eq	32cc4 <rpl_regfree@@Base+0x46cc>  // b.none
   32930:	cmp	w0, #0x17
   32934:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32938:	cmp	w0, #0x14
   3293c:	b.eq	32b88 <rpl_regfree@@Base+0x4590>  // b.none
   32940:	cmp	w0, #0x14
   32944:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32948:	cmp	w0, #0x13
   3294c:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32950:	cmp	w0, #0x12
   32954:	b.ge	32ce8 <rpl_regfree@@Base+0x46f0>  // b.tcont
   32958:	cmp	w0, #0xc
   3295c:	b.eq	32dd4 <rpl_regfree@@Base+0x47dc>  // b.none
   32960:	cmp	w0, #0xc
   32964:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32968:	cmp	w0, #0xb
   3296c:	b.eq	32ce8 <rpl_regfree@@Base+0x46f0>  // b.none
   32970:	cmp	w0, #0xb
   32974:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32978:	cmp	w0, #0xa
   3297c:	b.eq	33124 <rpl_regfree@@Base+0x4b2c>  // b.none
   32980:	cmp	w0, #0xa
   32984:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32988:	cmp	w0, #0x9
   3298c:	b.eq	32d4c <rpl_regfree@@Base+0x4754>  // b.none
   32990:	cmp	w0, #0x9
   32994:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   32998:	cmp	w0, #0x8
   3299c:	b.eq	32b1c <rpl_regfree@@Base+0x4524>  // b.none
   329a0:	cmp	w0, #0x8
   329a4:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   329a8:	cmp	w0, #0x5
   329ac:	b.eq	32fb0 <rpl_regfree@@Base+0x49b8>  // b.none
   329b0:	cmp	w0, #0x5
   329b4:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   329b8:	cmp	w0, #0x4
   329bc:	b.eq	32be8 <rpl_regfree@@Base+0x45f0>  // b.none
   329c0:	cmp	w0, #0x4
   329c4:	b.gt	33140 <rpl_regfree@@Base+0x4b48>
   329c8:	cmp	w0, #0x1
   329cc:	b.eq	329dc <rpl_regfree@@Base+0x43e4>  // b.none
   329d0:	cmp	w0, #0x2
   329d4:	b.eq	33124 <rpl_regfree@@Base+0x4b2c>  // b.none
   329d8:	b	33140 <rpl_regfree@@Base+0x4b48>
   329dc:	ldr	x3, [sp, #40]
   329e0:	mov	x2, #0x0                   	// #0
   329e4:	mov	x1, #0x0                   	// #0
   329e8:	ldr	x0, [sp, #88]
   329ec:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   329f0:	str	x0, [sp, #104]
   329f4:	ldr	x0, [sp, #104]
   329f8:	cmp	x0, #0x0
   329fc:	cset	w0, eq  // eq = none
   32a00:	and	w0, w0, #0xff
   32a04:	and	x0, x0, #0xff
   32a08:	cmp	x0, #0x0
   32a0c:	b.eq	32a24 <rpl_regfree@@Base+0x442c>  // b.none
   32a10:	ldr	x0, [sp, #16]
   32a14:	mov	w1, #0xc                   	// #12
   32a18:	str	w1, [x0]
   32a1c:	mov	x0, #0x0                   	// #0
   32a20:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32a24:	ldr	x0, [sp, #88]
   32a28:	ldr	w0, [x0, #180]
   32a2c:	cmp	w0, #0x1
   32a30:	b.le	33148 <rpl_regfree@@Base+0x4b50>
   32a34:	b	32ac4 <rpl_regfree@@Base+0x44cc>
   32a38:	ldr	x2, [sp, #32]
   32a3c:	ldr	x1, [sp, #56]
   32a40:	ldr	x0, [sp, #40]
   32a44:	bl	315e8 <rpl_regfree@@Base+0x2ff0>
   32a48:	ldr	x3, [sp, #40]
   32a4c:	mov	x2, #0x0                   	// #0
   32a50:	mov	x1, #0x0                   	// #0
   32a54:	ldr	x0, [sp, #88]
   32a58:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   32a5c:	str	x0, [sp, #72]
   32a60:	mov	w3, #0x10                  	// #16
   32a64:	ldr	x2, [sp, #72]
   32a68:	ldr	x1, [sp, #104]
   32a6c:	ldr	x0, [sp, #88]
   32a70:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   32a74:	str	x0, [sp, #104]
   32a78:	ldr	x0, [sp, #72]
   32a7c:	cmp	x0, #0x0
   32a80:	cset	w0, eq  // eq = none
   32a84:	and	w0, w0, #0xff
   32a88:	and	x0, x0, #0xff
   32a8c:	cmp	x0, #0x0
   32a90:	b.ne	32ab0 <rpl_regfree@@Base+0x44b8>  // b.any
   32a94:	ldr	x0, [sp, #104]
   32a98:	cmp	x0, #0x0
   32a9c:	cset	w0, eq  // eq = none
   32aa0:	and	w0, w0, #0xff
   32aa4:	and	x0, x0, #0xff
   32aa8:	cmp	x0, #0x0
   32aac:	b.eq	32ac4 <rpl_regfree@@Base+0x44cc>  // b.none
   32ab0:	ldr	x0, [sp, #16]
   32ab4:	mov	w1, #0xc                   	// #12
   32ab8:	str	w1, [x0]
   32abc:	mov	x0, #0x0                   	// #0
   32ac0:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32ac4:	ldr	x0, [sp, #56]
   32ac8:	ldr	x1, [x0, #104]
   32acc:	ldr	x0, [sp, #56]
   32ad0:	ldr	x0, [x0, #72]
   32ad4:	cmp	x1, x0
   32ad8:	b.le	33148 <rpl_regfree@@Base+0x4b50>
   32adc:	ldr	x0, [sp, #56]
   32ae0:	ldr	x1, [x0, #72]
   32ae4:	ldr	x0, [sp, #56]
   32ae8:	ldr	x0, [x0, #48]
   32aec:	cmp	x1, x0
   32af0:	b.eq	33148 <rpl_regfree@@Base+0x4b50>  // b.none
   32af4:	ldr	x0, [sp, #56]
   32af8:	ldr	x1, [x0, #16]
   32afc:	ldr	x0, [sp, #56]
   32b00:	ldr	x0, [x0, #72]
   32b04:	lsl	x0, x0, #2
   32b08:	add	x0, x1, x0
   32b0c:	ldr	w0, [x0]
   32b10:	cmn	w0, #0x1
   32b14:	b.eq	32a38 <rpl_regfree@@Base+0x4440>  // b.none
   32b18:	b	33148 <rpl_regfree@@Base+0x4b50>
   32b1c:	ldr	x0, [sp, #24]
   32b20:	add	x0, x0, #0x1
   32b24:	ldr	x5, [sp, #16]
   32b28:	mov	x4, x0
   32b2c:	ldr	x3, [sp, #32]
   32b30:	ldr	x2, [sp, #40]
   32b34:	ldr	x1, [sp, #48]
   32b38:	ldr	x0, [sp, #56]
   32b3c:	bl	332cc <rpl_regfree@@Base+0x4cd4>
   32b40:	str	x0, [sp, #104]
   32b44:	ldr	x0, [sp, #16]
   32b48:	ldr	w0, [x0]
   32b4c:	cmp	w0, #0x0
   32b50:	cset	w0, ne  // ne = any
   32b54:	and	w0, w0, #0xff
   32b58:	and	x0, x0, #0xff
   32b5c:	cmp	x0, #0x0
   32b60:	b.eq	33150 <rpl_regfree@@Base+0x4b58>  // b.none
   32b64:	ldr	x0, [sp, #104]
   32b68:	cmp	x0, #0x0
   32b6c:	cset	w0, eq  // eq = none
   32b70:	and	w0, w0, #0xff
   32b74:	and	x0, x0, #0xff
   32b78:	cmp	x0, #0x0
   32b7c:	b.eq	33150 <rpl_regfree@@Base+0x4b58>  // b.none
   32b80:	mov	x0, #0x0                   	// #0
   32b84:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32b88:	ldr	x4, [sp, #16]
   32b8c:	ldr	x3, [sp, #32]
   32b90:	ldr	x2, [sp, #40]
   32b94:	ldr	x1, [sp, #88]
   32b98:	ldr	x0, [sp, #56]
   32b9c:	bl	33fe8 <rpl_regfree@@Base+0x59f0>
   32ba0:	str	x0, [sp, #104]
   32ba4:	ldr	x0, [sp, #16]
   32ba8:	ldr	w0, [x0]
   32bac:	cmp	w0, #0x0
   32bb0:	cset	w0, ne  // ne = any
   32bb4:	and	w0, w0, #0xff
   32bb8:	and	x0, x0, #0xff
   32bbc:	cmp	x0, #0x0
   32bc0:	b.eq	33158 <rpl_regfree@@Base+0x4b60>  // b.none
   32bc4:	ldr	x0, [sp, #104]
   32bc8:	cmp	x0, #0x0
   32bcc:	cset	w0, eq  // eq = none
   32bd0:	and	w0, w0, #0xff
   32bd4:	and	x0, x0, #0xff
   32bd8:	cmp	x0, #0x0
   32bdc:	b.eq	33158 <rpl_regfree@@Base+0x4b60>  // b.none
   32be0:	mov	x0, #0x0                   	// #0
   32be4:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32be8:	ldr	x0, [sp, #88]
   32bec:	ldr	x1, [x0, #168]
   32bf0:	ldr	x0, [sp, #40]
   32bf4:	ldr	x0, [x0]
   32bf8:	mov	w2, w0
   32bfc:	mov	w0, #0x1                   	// #1
   32c00:	lsl	w0, w0, w2
   32c04:	sxtw	x0, w0
   32c08:	and	x0, x1, x0
   32c0c:	cmp	x0, #0x0
   32c10:	b.ne	32c28 <rpl_regfree@@Base+0x4630>  // b.any
   32c14:	ldr	x0, [sp, #16]
   32c18:	mov	w1, #0x6                   	// #6
   32c1c:	str	w1, [x0]
   32c20:	mov	x0, #0x0                   	// #0
   32c24:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32c28:	ldr	x0, [sp, #88]
   32c2c:	ldr	x1, [x0, #160]
   32c30:	ldr	x0, [sp, #40]
   32c34:	ldr	x0, [x0]
   32c38:	mov	w2, w0
   32c3c:	mov	w0, #0x1                   	// #1
   32c40:	lsl	w0, w0, w2
   32c44:	sxtw	x0, w0
   32c48:	orr	x1, x1, x0
   32c4c:	ldr	x0, [sp, #88]
   32c50:	str	x1, [x0, #160]
   32c54:	ldr	x3, [sp, #40]
   32c58:	mov	x2, #0x0                   	// #0
   32c5c:	mov	x1, #0x0                   	// #0
   32c60:	ldr	x0, [sp, #88]
   32c64:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   32c68:	str	x0, [sp, #104]
   32c6c:	ldr	x0, [sp, #104]
   32c70:	cmp	x0, #0x0
   32c74:	cset	w0, eq  // eq = none
   32c78:	and	w0, w0, #0xff
   32c7c:	and	x0, x0, #0xff
   32c80:	cmp	x0, #0x0
   32c84:	b.eq	32c9c <rpl_regfree@@Base+0x46a4>  // b.none
   32c88:	ldr	x0, [sp, #16]
   32c8c:	mov	w1, #0xc                   	// #12
   32c90:	str	w1, [x0]
   32c94:	mov	x0, #0x0                   	// #0
   32c98:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32c9c:	ldr	x0, [sp, #88]
   32ca0:	ldr	x0, [x0, #152]
   32ca4:	add	x1, x0, #0x1
   32ca8:	ldr	x0, [sp, #88]
   32cac:	str	x1, [x0, #152]
   32cb0:	ldr	x0, [sp, #88]
   32cb4:	ldrb	w1, [x0, #176]
   32cb8:	orr	w1, w1, #0x2
   32cbc:	strb	w1, [x0, #176]
   32cc0:	b	3317c <rpl_regfree@@Base+0x4b84>
   32cc4:	ldr	x0, [sp, #32]
   32cc8:	and	x0, x0, #0x1000000
   32ccc:	cmp	x0, #0x0
   32cd0:	b.eq	32ce8 <rpl_regfree@@Base+0x46f0>  // b.none
   32cd4:	ldr	x0, [sp, #16]
   32cd8:	mov	w1, #0xd                   	// #13
   32cdc:	str	w1, [x0]
   32ce0:	mov	x0, #0x0                   	// #0
   32ce4:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32ce8:	ldr	x0, [sp, #32]
   32cec:	and	x0, x0, #0x20
   32cf0:	cmp	x0, #0x0
   32cf4:	b.eq	32d0c <rpl_regfree@@Base+0x4714>  // b.none
   32cf8:	ldr	x0, [sp, #16]
   32cfc:	mov	w1, #0xd                   	// #13
   32d00:	str	w1, [x0]
   32d04:	mov	x0, #0x0                   	// #0
   32d08:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32d0c:	ldr	x0, [sp, #32]
   32d10:	and	x0, x0, #0x10
   32d14:	cmp	x0, #0x0
   32d18:	b.eq	32d4c <rpl_regfree@@Base+0x4754>  // b.none
   32d1c:	ldr	x2, [sp, #32]
   32d20:	ldr	x1, [sp, #56]
   32d24:	ldr	x0, [sp, #40]
   32d28:	bl	315e8 <rpl_regfree@@Base+0x2ff0>
   32d2c:	ldr	x5, [sp, #16]
   32d30:	ldr	x4, [sp, #24]
   32d34:	ldr	x3, [sp, #32]
   32d38:	ldr	x2, [sp, #40]
   32d3c:	ldr	x1, [sp, #48]
   32d40:	ldr	x0, [sp, #56]
   32d44:	bl	328b4 <rpl_regfree@@Base+0x42bc>
   32d48:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32d4c:	ldr	x0, [sp, #40]
   32d50:	ldrb	w0, [x0, #8]
   32d54:	cmp	w0, #0x9
   32d58:	b.ne	32d80 <rpl_regfree@@Base+0x4788>  // b.any
   32d5c:	ldr	x0, [sp, #32]
   32d60:	and	x0, x0, #0x20000
   32d64:	cmp	x0, #0x0
   32d68:	b.ne	32d80 <rpl_regfree@@Base+0x4788>  // b.any
   32d6c:	ldr	x0, [sp, #16]
   32d70:	mov	w1, #0x10                  	// #16
   32d74:	str	w1, [x0]
   32d78:	mov	x0, #0x0                   	// #0
   32d7c:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32d80:	ldr	x0, [sp, #40]
   32d84:	mov	w1, #0x1                   	// #1
   32d88:	strb	w1, [x0, #8]
   32d8c:	ldr	x3, [sp, #40]
   32d90:	mov	x2, #0x0                   	// #0
   32d94:	mov	x1, #0x0                   	// #0
   32d98:	ldr	x0, [sp, #88]
   32d9c:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   32da0:	str	x0, [sp, #104]
   32da4:	ldr	x0, [sp, #104]
   32da8:	cmp	x0, #0x0
   32dac:	cset	w0, eq  // eq = none
   32db0:	and	w0, w0, #0xff
   32db4:	and	x0, x0, #0xff
   32db8:	cmp	x0, #0x0
   32dbc:	b.eq	33160 <rpl_regfree@@Base+0x4b68>  // b.none
   32dc0:	ldr	x0, [sp, #16]
   32dc4:	mov	w1, #0xc                   	// #12
   32dc8:	str	w1, [x0]
   32dcc:	mov	x0, #0x0                   	// #0
   32dd0:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32dd4:	ldr	x0, [sp, #40]
   32dd8:	ldr	w1, [x0]
   32ddc:	mov	w0, #0x30f                 	// #783
   32de0:	and	w0, w1, w0
   32de4:	cmp	w0, #0x0
   32de8:	b.eq	32e0c <rpl_regfree@@Base+0x4814>  // b.none
   32dec:	ldr	x0, [sp, #88]
   32df0:	ldrb	w0, [x0, #176]
   32df4:	and	w0, w0, #0x10
   32df8:	and	w0, w0, #0xff
   32dfc:	cmp	w0, #0x0
   32e00:	b.ne	32e0c <rpl_regfree@@Base+0x4814>  // b.any
   32e04:	ldr	x0, [sp, #88]
   32e08:	bl	2eec8 <rpl_regfree@@Base+0x8d0>
   32e0c:	ldr	x0, [sp, #40]
   32e10:	ldr	w0, [x0]
   32e14:	cmp	w0, #0x100
   32e18:	b.eq	32e2c <rpl_regfree@@Base+0x4834>  // b.none
   32e1c:	ldr	x0, [sp, #40]
   32e20:	ldr	w0, [x0]
   32e24:	cmp	w0, #0x200
   32e28:	b.ne	32f4c <rpl_regfree@@Base+0x4954>  // b.any
   32e2c:	ldr	x0, [sp, #40]
   32e30:	ldr	w0, [x0]
   32e34:	cmp	w0, #0x100
   32e38:	b.ne	32e70 <rpl_regfree@@Base+0x4878>  // b.any
   32e3c:	ldr	x0, [sp, #40]
   32e40:	mov	w1, #0x6                   	// #6
   32e44:	str	w1, [x0]
   32e48:	ldr	x3, [sp, #40]
   32e4c:	mov	x2, #0x0                   	// #0
   32e50:	mov	x1, #0x0                   	// #0
   32e54:	ldr	x0, [sp, #88]
   32e58:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   32e5c:	str	x0, [sp, #96]
   32e60:	ldr	x0, [sp, #40]
   32e64:	mov	w1, #0x9                   	// #9
   32e68:	str	w1, [x0]
   32e6c:	b	32ea0 <rpl_regfree@@Base+0x48a8>
   32e70:	ldr	x0, [sp, #40]
   32e74:	mov	w1, #0x5                   	// #5
   32e78:	str	w1, [x0]
   32e7c:	ldr	x3, [sp, #40]
   32e80:	mov	x2, #0x0                   	// #0
   32e84:	mov	x1, #0x0                   	// #0
   32e88:	ldr	x0, [sp, #88]
   32e8c:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   32e90:	str	x0, [sp, #96]
   32e94:	ldr	x0, [sp, #40]
   32e98:	mov	w1, #0xa                   	// #10
   32e9c:	str	w1, [x0]
   32ea0:	ldr	x3, [sp, #40]
   32ea4:	mov	x2, #0x0                   	// #0
   32ea8:	mov	x1, #0x0                   	// #0
   32eac:	ldr	x0, [sp, #88]
   32eb0:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   32eb4:	str	x0, [sp, #80]
   32eb8:	mov	w3, #0xa                   	// #10
   32ebc:	ldr	x2, [sp, #80]
   32ec0:	ldr	x1, [sp, #96]
   32ec4:	ldr	x0, [sp, #88]
   32ec8:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   32ecc:	str	x0, [sp, #104]
   32ed0:	ldr	x0, [sp, #96]
   32ed4:	cmp	x0, #0x0
   32ed8:	cset	w0, eq  // eq = none
   32edc:	and	w0, w0, #0xff
   32ee0:	and	x0, x0, #0xff
   32ee4:	cmp	x0, #0x0
   32ee8:	b.ne	32f08 <rpl_regfree@@Base+0x4910>  // b.any
   32eec:	ldr	x0, [sp, #80]
   32ef0:	cmp	x0, #0x0
   32ef4:	cset	w0, eq  // eq = none
   32ef8:	and	w0, w0, #0xff
   32efc:	and	x0, x0, #0xff
   32f00:	cmp	x0, #0x0
   32f04:	b.eq	32f10 <rpl_regfree@@Base+0x4918>  // b.none
   32f08:	mov	w0, #0x1                   	// #1
   32f0c:	b	32f14 <rpl_regfree@@Base+0x491c>
   32f10:	mov	w0, #0x0                   	// #0
   32f14:	cmp	w0, #0x0
   32f18:	b.ne	32f38 <rpl_regfree@@Base+0x4940>  // b.any
   32f1c:	ldr	x0, [sp, #104]
   32f20:	cmp	x0, #0x0
   32f24:	cset	w0, eq  // eq = none
   32f28:	and	w0, w0, #0xff
   32f2c:	and	x0, x0, #0xff
   32f30:	cmp	x0, #0x0
   32f34:	b.eq	32f94 <rpl_regfree@@Base+0x499c>  // b.none
   32f38:	ldr	x0, [sp, #16]
   32f3c:	mov	w1, #0xc                   	// #12
   32f40:	str	w1, [x0]
   32f44:	mov	x0, #0x0                   	// #0
   32f48:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32f4c:	ldr	x3, [sp, #40]
   32f50:	mov	x2, #0x0                   	// #0
   32f54:	mov	x1, #0x0                   	// #0
   32f58:	ldr	x0, [sp, #88]
   32f5c:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   32f60:	str	x0, [sp, #104]
   32f64:	ldr	x0, [sp, #104]
   32f68:	cmp	x0, #0x0
   32f6c:	cset	w0, eq  // eq = none
   32f70:	and	w0, w0, #0xff
   32f74:	and	x0, x0, #0xff
   32f78:	cmp	x0, #0x0
   32f7c:	b.eq	32f98 <rpl_regfree@@Base+0x49a0>  // b.none
   32f80:	ldr	x0, [sp, #16]
   32f84:	mov	w1, #0xc                   	// #12
   32f88:	str	w1, [x0]
   32f8c:	mov	x0, #0x0                   	// #0
   32f90:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32f94:	nop
   32f98:	ldr	x2, [sp, #32]
   32f9c:	ldr	x1, [sp, #56]
   32fa0:	ldr	x0, [sp, #40]
   32fa4:	bl	315e8 <rpl_regfree@@Base+0x2ff0>
   32fa8:	ldr	x0, [sp, #104]
   32fac:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32fb0:	ldr	x3, [sp, #40]
   32fb4:	mov	x2, #0x0                   	// #0
   32fb8:	mov	x1, #0x0                   	// #0
   32fbc:	ldr	x0, [sp, #88]
   32fc0:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   32fc4:	str	x0, [sp, #104]
   32fc8:	ldr	x0, [sp, #104]
   32fcc:	cmp	x0, #0x0
   32fd0:	cset	w0, eq  // eq = none
   32fd4:	and	w0, w0, #0xff
   32fd8:	and	x0, x0, #0xff
   32fdc:	cmp	x0, #0x0
   32fe0:	b.eq	32ff8 <rpl_regfree@@Base+0x4a00>  // b.none
   32fe4:	ldr	x0, [sp, #16]
   32fe8:	mov	w1, #0xc                   	// #12
   32fec:	str	w1, [x0]
   32ff0:	mov	x0, #0x0                   	// #0
   32ff4:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   32ff8:	ldr	x0, [sp, #88]
   32ffc:	ldr	w0, [x0, #180]
   33000:	cmp	w0, #0x1
   33004:	b.le	33168 <rpl_regfree@@Base+0x4b70>
   33008:	ldr	x0, [sp, #88]
   3300c:	ldrb	w1, [x0, #176]
   33010:	orr	w1, w1, #0x2
   33014:	strb	w1, [x0, #176]
   33018:	b	33168 <rpl_regfree@@Base+0x4b70>
   3301c:	ldr	x0, [sp, #56]
   33020:	ldr	x1, [x0, #120]
   33024:	ldr	x0, [sp, #40]
   33028:	ldrb	w0, [x0, #8]
   3302c:	cmp	w0, #0x21
   33030:	cset	w0, eq  // eq = none
   33034:	and	w0, w0, #0xff
   33038:	ldr	x5, [sp, #16]
   3303c:	mov	w4, w0
   33040:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   33044:	add	x3, x0, #0x6a8
   33048:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   3304c:	add	x2, x0, #0x6b0
   33050:	ldr	x0, [sp, #88]
   33054:	bl	35974 <rpl_regfree@@Base+0x737c>
   33058:	str	x0, [sp, #104]
   3305c:	ldr	x0, [sp, #16]
   33060:	ldr	w0, [x0]
   33064:	cmp	w0, #0x0
   33068:	cset	w0, ne  // ne = any
   3306c:	and	w0, w0, #0xff
   33070:	and	x0, x0, #0xff
   33074:	cmp	x0, #0x0
   33078:	b.eq	33170 <rpl_regfree@@Base+0x4b78>  // b.none
   3307c:	ldr	x0, [sp, #104]
   33080:	cmp	x0, #0x0
   33084:	cset	w0, eq  // eq = none
   33088:	and	w0, w0, #0xff
   3308c:	and	x0, x0, #0xff
   33090:	cmp	x0, #0x0
   33094:	b.eq	33170 <rpl_regfree@@Base+0x4b78>  // b.none
   33098:	mov	x0, #0x0                   	// #0
   3309c:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   330a0:	ldr	x0, [sp, #56]
   330a4:	ldr	x1, [x0, #120]
   330a8:	ldr	x0, [sp, #40]
   330ac:	ldrb	w0, [x0, #8]
   330b0:	cmp	w0, #0x23
   330b4:	cset	w0, eq  // eq = none
   330b8:	and	w0, w0, #0xff
   330bc:	ldr	x5, [sp, #16]
   330c0:	mov	w4, w0
   330c4:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   330c8:	add	x3, x0, #0x6b8
   330cc:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   330d0:	add	x2, x0, #0x6c0
   330d4:	ldr	x0, [sp, #88]
   330d8:	bl	35974 <rpl_regfree@@Base+0x737c>
   330dc:	str	x0, [sp, #104]
   330e0:	ldr	x0, [sp, #16]
   330e4:	ldr	w0, [x0]
   330e8:	cmp	w0, #0x0
   330ec:	cset	w0, ne  // ne = any
   330f0:	and	w0, w0, #0xff
   330f4:	and	x0, x0, #0xff
   330f8:	cmp	x0, #0x0
   330fc:	b.eq	33178 <rpl_regfree@@Base+0x4b80>  // b.none
   33100:	ldr	x0, [sp, #104]
   33104:	cmp	x0, #0x0
   33108:	cset	w0, eq  // eq = none
   3310c:	and	w0, w0, #0xff
   33110:	and	x0, x0, #0xff
   33114:	cmp	x0, #0x0
   33118:	b.eq	33178 <rpl_regfree@@Base+0x4b80>  // b.none
   3311c:	mov	x0, #0x0                   	// #0
   33120:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   33124:	mov	x0, #0x0                   	// #0
   33128:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   3312c:	ldr	x0, [sp, #16]
   33130:	mov	w1, #0x5                   	// #5
   33134:	str	w1, [x0]
   33138:	mov	x0, #0x0                   	// #0
   3313c:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   33140:	mov	x0, #0x0                   	// #0
   33144:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   33148:	nop
   3314c:	b	3317c <rpl_regfree@@Base+0x4b84>
   33150:	nop
   33154:	b	3317c <rpl_regfree@@Base+0x4b84>
   33158:	nop
   3315c:	b	3317c <rpl_regfree@@Base+0x4b84>
   33160:	nop
   33164:	b	3317c <rpl_regfree@@Base+0x4b84>
   33168:	nop
   3316c:	b	3317c <rpl_regfree@@Base+0x4b84>
   33170:	nop
   33174:	b	3317c <rpl_regfree@@Base+0x4b84>
   33178:	nop
   3317c:	ldr	x2, [sp, #32]
   33180:	ldr	x1, [sp, #56]
   33184:	ldr	x0, [sp, #40]
   33188:	bl	315e8 <rpl_regfree@@Base+0x2ff0>
   3318c:	b	33280 <rpl_regfree@@Base+0x4c88>
   33190:	ldr	x5, [sp, #16]
   33194:	ldr	x4, [sp, #32]
   33198:	ldr	x3, [sp, #40]
   3319c:	ldr	x2, [sp, #88]
   331a0:	ldr	x1, [sp, #56]
   331a4:	ldr	x0, [sp, #104]
   331a8:	bl	33488 <rpl_regfree@@Base+0x4e90>
   331ac:	str	x0, [sp, #64]
   331b0:	ldr	x0, [sp, #16]
   331b4:	ldr	w0, [x0]
   331b8:	cmp	w0, #0x0
   331bc:	cset	w0, ne  // ne = any
   331c0:	and	w0, w0, #0xff
   331c4:	and	x0, x0, #0xff
   331c8:	cmp	x0, #0x0
   331cc:	b.eq	33214 <rpl_regfree@@Base+0x4c1c>  // b.none
   331d0:	ldr	x0, [sp, #64]
   331d4:	cmp	x0, #0x0
   331d8:	cset	w0, eq  // eq = none
   331dc:	and	w0, w0, #0xff
   331e0:	and	x0, x0, #0xff
   331e4:	cmp	x0, #0x0
   331e8:	b.eq	33214 <rpl_regfree@@Base+0x4c1c>  // b.none
   331ec:	ldr	x0, [sp, #104]
   331f0:	cmp	x0, #0x0
   331f4:	b.eq	3320c <rpl_regfree@@Base+0x4c14>  // b.none
   331f8:	mov	x2, #0x0                   	// #0
   331fc:	adrp	x0, 36000 <rpl_regfree@@Base+0x7a08>
   33200:	add	x1, x0, #0x10
   33204:	ldr	x0, [sp, #104]
   33208:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   3320c:	mov	x0, #0x0                   	// #0
   33210:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   33214:	ldr	x0, [sp, #64]
   33218:	str	x0, [sp, #104]
   3321c:	ldr	x0, [sp, #32]
   33220:	and	x0, x0, #0x1000000
   33224:	cmp	x0, #0x0
   33228:	b.eq	33280 <rpl_regfree@@Base+0x4c88>  // b.none
   3322c:	ldr	x0, [sp, #40]
   33230:	ldrb	w0, [x0, #8]
   33234:	cmp	w0, #0xb
   33238:	b.eq	3324c <rpl_regfree@@Base+0x4c54>  // b.none
   3323c:	ldr	x0, [sp, #40]
   33240:	ldrb	w0, [x0, #8]
   33244:	cmp	w0, #0x17
   33248:	b.ne	33280 <rpl_regfree@@Base+0x4c88>  // b.any
   3324c:	ldr	x0, [sp, #104]
   33250:	cmp	x0, #0x0
   33254:	b.eq	3326c <rpl_regfree@@Base+0x4c74>  // b.none
   33258:	mov	x2, #0x0                   	// #0
   3325c:	adrp	x0, 36000 <rpl_regfree@@Base+0x7a08>
   33260:	add	x1, x0, #0x10
   33264:	ldr	x0, [sp, #104]
   33268:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   3326c:	ldr	x0, [sp, #16]
   33270:	mov	w1, #0xd                   	// #13
   33274:	str	w1, [x0]
   33278:	mov	x0, #0x0                   	// #0
   3327c:	b	332c4 <rpl_regfree@@Base+0x4ccc>
   33280:	ldr	x0, [sp, #40]
   33284:	ldrb	w0, [x0, #8]
   33288:	cmp	w0, #0xb
   3328c:	b.eq	33190 <rpl_regfree@@Base+0x4b98>  // b.none
   33290:	ldr	x0, [sp, #40]
   33294:	ldrb	w0, [x0, #8]
   33298:	cmp	w0, #0x12
   3329c:	b.eq	33190 <rpl_regfree@@Base+0x4b98>  // b.none
   332a0:	ldr	x0, [sp, #40]
   332a4:	ldrb	w0, [x0, #8]
   332a8:	cmp	w0, #0x13
   332ac:	b.eq	33190 <rpl_regfree@@Base+0x4b98>  // b.none
   332b0:	ldr	x0, [sp, #40]
   332b4:	ldrb	w0, [x0, #8]
   332b8:	cmp	w0, #0x17
   332bc:	b.eq	33190 <rpl_regfree@@Base+0x4b98>  // b.none
   332c0:	ldr	x0, [sp, #104]
   332c4:	ldp	x29, x30, [sp], #112
   332c8:	ret
   332cc:	stp	x29, x30, [sp, #-96]!
   332d0:	mov	x29, sp
   332d4:	str	x0, [sp, #56]
   332d8:	str	x1, [sp, #48]
   332dc:	str	x2, [sp, #40]
   332e0:	str	x3, [sp, #32]
   332e4:	str	x4, [sp, #24]
   332e8:	str	x5, [sp, #16]
   332ec:	ldr	x0, [sp, #48]
   332f0:	ldr	x0, [x0]
   332f4:	str	x0, [sp, #80]
   332f8:	ldr	x0, [sp, #48]
   332fc:	ldr	x0, [x0, #48]
   33300:	add	x2, x0, #0x1
   33304:	ldr	x1, [sp, #48]
   33308:	str	x2, [x1, #48]
   3330c:	str	x0, [sp, #72]
   33310:	ldr	x0, [sp, #32]
   33314:	orr	x0, x0, #0x800000
   33318:	mov	x2, x0
   3331c:	ldr	x1, [sp, #56]
   33320:	ldr	x0, [sp, #40]
   33324:	bl	315e8 <rpl_regfree@@Base+0x2ff0>
   33328:	ldr	x0, [sp, #40]
   3332c:	ldrb	w0, [x0, #8]
   33330:	cmp	w0, #0x9
   33334:	b.ne	33340 <rpl_regfree@@Base+0x4d48>  // b.any
   33338:	str	xzr, [sp, #88]
   3333c:	b	333f4 <rpl_regfree@@Base+0x4dfc>
   33340:	ldr	x5, [sp, #16]
   33344:	ldr	x4, [sp, #24]
   33348:	ldr	x3, [sp, #32]
   3334c:	ldr	x2, [sp, #40]
   33350:	ldr	x1, [sp, #48]
   33354:	ldr	x0, [sp, #56]
   33358:	bl	324ac <rpl_regfree@@Base+0x3eb4>
   3335c:	str	x0, [sp, #88]
   33360:	ldr	x0, [sp, #16]
   33364:	ldr	w0, [x0]
   33368:	cmp	w0, #0x0
   3336c:	cset	w0, eq  // eq = none
   33370:	and	w0, w0, #0xff
   33374:	and	x0, x0, #0xff
   33378:	cmp	x0, #0x0
   3337c:	b.eq	333cc <rpl_regfree@@Base+0x4dd4>  // b.none
   33380:	ldr	x0, [sp, #40]
   33384:	ldrb	w0, [x0, #8]
   33388:	cmp	w0, #0x9
   3338c:	cset	w0, ne  // ne = any
   33390:	and	w0, w0, #0xff
   33394:	and	x0, x0, #0xff
   33398:	cmp	x0, #0x0
   3339c:	b.eq	333cc <rpl_regfree@@Base+0x4dd4>  // b.none
   333a0:	ldr	x0, [sp, #88]
   333a4:	cmp	x0, #0x0
   333a8:	b.eq	333c0 <rpl_regfree@@Base+0x4dc8>  // b.none
   333ac:	mov	x2, #0x0                   	// #0
   333b0:	adrp	x0, 36000 <rpl_regfree@@Base+0x7a08>
   333b4:	add	x1, x0, #0x10
   333b8:	ldr	x0, [sp, #88]
   333bc:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   333c0:	ldr	x0, [sp, #16]
   333c4:	mov	w1, #0x8                   	// #8
   333c8:	str	w1, [x0]
   333cc:	ldr	x0, [sp, #16]
   333d0:	ldr	w0, [x0]
   333d4:	cmp	w0, #0x0
   333d8:	cset	w0, ne  // ne = any
   333dc:	and	w0, w0, #0xff
   333e0:	and	x0, x0, #0xff
   333e4:	cmp	x0, #0x0
   333e8:	b.eq	333f4 <rpl_regfree@@Base+0x4dfc>  // b.none
   333ec:	mov	x0, #0x0                   	// #0
   333f0:	b	33480 <rpl_regfree@@Base+0x4e88>
   333f4:	ldr	x0, [sp, #72]
   333f8:	cmp	x0, #0x8
   333fc:	b.hi	33428 <rpl_regfree@@Base+0x4e30>  // b.pmore
   33400:	ldr	x0, [sp, #80]
   33404:	ldr	x1, [x0, #168]
   33408:	ldr	x0, [sp, #72]
   3340c:	mov	w2, w0
   33410:	mov	w0, #0x1                   	// #1
   33414:	lsl	w0, w0, w2
   33418:	sxtw	x0, w0
   3341c:	orr	x1, x1, x0
   33420:	ldr	x0, [sp, #80]
   33424:	str	x1, [x0, #168]
   33428:	mov	w3, #0x11                  	// #17
   3342c:	mov	x2, #0x0                   	// #0
   33430:	ldr	x1, [sp, #88]
   33434:	ldr	x0, [sp, #80]
   33438:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   3343c:	str	x0, [sp, #88]
   33440:	ldr	x0, [sp, #88]
   33444:	cmp	x0, #0x0
   33448:	cset	w0, eq  // eq = none
   3344c:	and	w0, w0, #0xff
   33450:	and	x0, x0, #0xff
   33454:	cmp	x0, #0x0
   33458:	b.eq	33470 <rpl_regfree@@Base+0x4e78>  // b.none
   3345c:	ldr	x0, [sp, #16]
   33460:	mov	w1, #0xc                   	// #12
   33464:	str	w1, [x0]
   33468:	mov	x0, #0x0                   	// #0
   3346c:	b	33480 <rpl_regfree@@Base+0x4e88>
   33470:	ldr	x1, [sp, #72]
   33474:	ldr	x0, [sp, #88]
   33478:	str	x1, [x0, #40]
   3347c:	ldr	x0, [sp, #88]
   33480:	ldp	x29, x30, [sp], #96
   33484:	ret
   33488:	stp	x29, x30, [sp, #-144]!
   3348c:	mov	x29, sp
   33490:	str	x0, [sp, #56]
   33494:	str	x1, [sp, #48]
   33498:	str	x2, [sp, #40]
   3349c:	str	x3, [sp, #32]
   334a0:	str	x4, [sp, #24]
   334a4:	str	x5, [sp, #16]
   334a8:	str	xzr, [sp, #136]
   334ac:	str	xzr, [sp, #128]
   334b0:	ldr	x0, [sp, #48]
   334b4:	ldr	x0, [x0, #72]
   334b8:	str	x0, [sp, #96]
   334bc:	ldr	x0, [sp, #32]
   334c0:	ldp	x0, x1, [x0]
   334c4:	stp	x0, x1, [sp, #72]
   334c8:	ldr	x0, [sp, #32]
   334cc:	ldrb	w0, [x0, #8]
   334d0:	cmp	w0, #0x17
   334d4:	b.ne	33740 <rpl_regfree@@Base+0x5148>  // b.any
   334d8:	str	xzr, [sp, #104]
   334dc:	ldr	x2, [sp, #24]
   334e0:	ldr	x1, [sp, #32]
   334e4:	ldr	x0, [sp, #48]
   334e8:	bl	35c34 <rpl_regfree@@Base+0x763c>
   334ec:	str	x0, [sp, #112]
   334f0:	ldr	x0, [sp, #112]
   334f4:	cmn	x0, #0x1
   334f8:	b.ne	33538 <rpl_regfree@@Base+0x4f40>  // b.any
   334fc:	ldr	x0, [sp, #32]
   33500:	ldrb	w0, [x0, #8]
   33504:	cmp	w0, #0x1
   33508:	b.ne	33524 <rpl_regfree@@Base+0x4f2c>  // b.any
   3350c:	ldr	x0, [sp, #32]
   33510:	ldrb	w0, [x0]
   33514:	cmp	w0, #0x2c
   33518:	b.ne	33524 <rpl_regfree@@Base+0x4f2c>  // b.any
   3351c:	str	xzr, [sp, #112]
   33520:	b	33538 <rpl_regfree@@Base+0x4f40>
   33524:	ldr	x0, [sp, #16]
   33528:	mov	w1, #0xa                   	// #10
   3352c:	str	w1, [x0]
   33530:	mov	x0, #0x0                   	// #0
   33534:	b	33aa4 <rpl_regfree@@Base+0x54ac>
   33538:	ldr	x0, [sp, #112]
   3353c:	cmn	x0, #0x2
   33540:	cset	w0, ne  // ne = any
   33544:	and	w0, w0, #0xff
   33548:	and	x0, x0, #0xff
   3354c:	cmp	x0, #0x0
   33550:	b.eq	335a8 <rpl_regfree@@Base+0x4fb0>  // b.none
   33554:	ldr	x0, [sp, #32]
   33558:	ldrb	w0, [x0, #8]
   3355c:	cmp	w0, #0x18
   33560:	b.eq	335a0 <rpl_regfree@@Base+0x4fa8>  // b.none
   33564:	ldr	x0, [sp, #32]
   33568:	ldrb	w0, [x0, #8]
   3356c:	cmp	w0, #0x1
   33570:	b.ne	33598 <rpl_regfree@@Base+0x4fa0>  // b.any
   33574:	ldr	x0, [sp, #32]
   33578:	ldrb	w0, [x0]
   3357c:	cmp	w0, #0x2c
   33580:	b.ne	33598 <rpl_regfree@@Base+0x4fa0>  // b.any
   33584:	ldr	x2, [sp, #24]
   33588:	ldr	x1, [sp, #32]
   3358c:	ldr	x0, [sp, #48]
   33590:	bl	35c34 <rpl_regfree@@Base+0x763c>
   33594:	b	335a4 <rpl_regfree@@Base+0x4fac>
   33598:	mov	x0, #0xfffffffffffffffe    	// #-2
   3359c:	b	335a4 <rpl_regfree@@Base+0x4fac>
   335a0:	ldr	x0, [sp, #112]
   335a4:	str	x0, [sp, #104]
   335a8:	ldr	x0, [sp, #112]
   335ac:	cmn	x0, #0x2
   335b0:	cset	w0, eq  // eq = none
   335b4:	and	w0, w0, #0xff
   335b8:	and	x0, x0, #0xff
   335bc:	cmp	x0, #0x0
   335c0:	b.ne	335e0 <rpl_regfree@@Base+0x4fe8>  // b.any
   335c4:	ldr	x0, [sp, #104]
   335c8:	cmn	x0, #0x2
   335cc:	cset	w0, eq  // eq = none
   335d0:	and	w0, w0, #0xff
   335d4:	and	x0, x0, #0xff
   335d8:	cmp	x0, #0x0
   335dc:	b.eq	33660 <rpl_regfree@@Base+0x5068>  // b.none
   335e0:	ldr	x0, [sp, #24]
   335e4:	and	x0, x0, #0x200000
   335e8:	cmp	x0, #0x0
   335ec:	cset	w0, eq  // eq = none
   335f0:	and	w0, w0, #0xff
   335f4:	and	x0, x0, #0xff
   335f8:	cmp	x0, #0x0
   335fc:	b.eq	33634 <rpl_regfree@@Base+0x503c>  // b.none
   33600:	ldr	x0, [sp, #32]
   33604:	ldrb	w0, [x0, #8]
   33608:	cmp	w0, #0x2
   3360c:	b.ne	33620 <rpl_regfree@@Base+0x5028>  // b.any
   33610:	ldr	x0, [sp, #16]
   33614:	mov	w1, #0x9                   	// #9
   33618:	str	w1, [x0]
   3361c:	b	3362c <rpl_regfree@@Base+0x5034>
   33620:	ldr	x0, [sp, #16]
   33624:	mov	w1, #0xa                   	// #10
   33628:	str	w1, [x0]
   3362c:	mov	x0, #0x0                   	// #0
   33630:	b	33aa4 <rpl_regfree@@Base+0x54ac>
   33634:	ldr	x0, [sp, #48]
   33638:	ldr	x1, [sp, #96]
   3363c:	str	x1, [x0, #72]
   33640:	ldr	x2, [sp, #32]
   33644:	ldp	x0, x1, [sp, #72]
   33648:	stp	x0, x1, [x2]
   3364c:	ldr	x0, [sp, #32]
   33650:	mov	w1, #0x1                   	// #1
   33654:	strb	w1, [x0, #8]
   33658:	ldr	x0, [sp, #56]
   3365c:	b	33aa4 <rpl_regfree@@Base+0x54ac>
   33660:	ldr	x0, [sp, #104]
   33664:	cmn	x0, #0x1
   33668:	cset	w0, ne  // ne = any
   3366c:	and	w0, w0, #0xff
   33670:	and	x0, x0, #0xff
   33674:	cmp	x0, #0x0
   33678:	b.eq	336a4 <rpl_regfree@@Base+0x50ac>  // b.none
   3367c:	ldr	x1, [sp, #112]
   33680:	ldr	x0, [sp, #104]
   33684:	cmp	x1, x0
   33688:	cset	w0, gt
   3368c:	and	w0, w0, #0xff
   33690:	and	x0, x0, #0xff
   33694:	cmp	x0, #0x0
   33698:	b.eq	336a4 <rpl_regfree@@Base+0x50ac>  // b.none
   3369c:	mov	w0, #0x1                   	// #1
   336a0:	b	336a8 <rpl_regfree@@Base+0x50b0>
   336a4:	mov	w0, #0x0                   	// #0
   336a8:	cmp	w0, #0x0
   336ac:	b.ne	336d0 <rpl_regfree@@Base+0x50d8>  // b.any
   336b0:	ldr	x0, [sp, #32]
   336b4:	ldrb	w0, [x0, #8]
   336b8:	cmp	w0, #0x18
   336bc:	cset	w0, ne  // ne = any
   336c0:	and	w0, w0, #0xff
   336c4:	and	x0, x0, #0xff
   336c8:	cmp	x0, #0x0
   336cc:	b.eq	336e4 <rpl_regfree@@Base+0x50ec>  // b.none
   336d0:	ldr	x0, [sp, #16]
   336d4:	mov	w1, #0xa                   	// #10
   336d8:	str	w1, [x0]
   336dc:	mov	x0, #0x0                   	// #0
   336e0:	b	33aa4 <rpl_regfree@@Base+0x54ac>
   336e4:	ldr	x0, [sp, #104]
   336e8:	cmn	x0, #0x1
   336ec:	b.ne	3370c <rpl_regfree@@Base+0x5114>  // b.any
   336f0:	ldr	x1, [sp, #112]
   336f4:	mov	x0, #0x7fff                	// #32767
   336f8:	cmp	x1, x0
   336fc:	cset	w0, gt
   33700:	and	w0, w0, #0xff
   33704:	sxtw	x0, w0
   33708:	b	33724 <rpl_regfree@@Base+0x512c>
   3370c:	ldr	x1, [sp, #104]
   33710:	mov	x0, #0x7fff                	// #32767
   33714:	cmp	x1, x0
   33718:	cset	w0, gt
   3371c:	and	w0, w0, #0xff
   33720:	sxtw	x0, w0
   33724:	cmp	x0, #0x0
   33728:	b.eq	3377c <rpl_regfree@@Base+0x5184>  // b.none
   3372c:	ldr	x0, [sp, #16]
   33730:	mov	w1, #0xf                   	// #15
   33734:	str	w1, [x0]
   33738:	mov	x0, #0x0                   	// #0
   3373c:	b	33aa4 <rpl_regfree@@Base+0x54ac>
   33740:	ldr	x0, [sp, #32]
   33744:	ldrb	w0, [x0, #8]
   33748:	cmp	w0, #0x12
   3374c:	cset	w0, eq  // eq = none
   33750:	and	w0, w0, #0xff
   33754:	and	x0, x0, #0xff
   33758:	str	x0, [sp, #112]
   3375c:	ldr	x0, [sp, #32]
   33760:	ldrb	w0, [x0, #8]
   33764:	cmp	w0, #0x13
   33768:	b.ne	33774 <rpl_regfree@@Base+0x517c>  // b.any
   3376c:	mov	x0, #0x1                   	// #1
   33770:	b	33778 <rpl_regfree@@Base+0x5180>
   33774:	mov	x0, #0xffffffffffffffff    	// #-1
   33778:	str	x0, [sp, #104]
   3377c:	ldr	x2, [sp, #24]
   33780:	ldr	x1, [sp, #48]
   33784:	ldr	x0, [sp, #32]
   33788:	bl	315e8 <rpl_regfree@@Base+0x2ff0>
   3378c:	ldr	x0, [sp, #56]
   33790:	cmp	x0, #0x0
   33794:	cset	w0, eq  // eq = none
   33798:	and	w0, w0, #0xff
   3379c:	and	x0, x0, #0xff
   337a0:	cmp	x0, #0x0
   337a4:	b.eq	337b0 <rpl_regfree@@Base+0x51b8>  // b.none
   337a8:	mov	x0, #0x0                   	// #0
   337ac:	b	33aa4 <rpl_regfree@@Base+0x54ac>
   337b0:	ldr	x0, [sp, #112]
   337b4:	cmp	x0, #0x0
   337b8:	cset	w0, eq  // eq = none
   337bc:	and	w0, w0, #0xff
   337c0:	and	x0, x0, #0xff
   337c4:	cmp	x0, #0x0
   337c8:	b.eq	33804 <rpl_regfree@@Base+0x520c>  // b.none
   337cc:	ldr	x0, [sp, #104]
   337d0:	cmp	x0, #0x0
   337d4:	cset	w0, eq  // eq = none
   337d8:	and	w0, w0, #0xff
   337dc:	and	x0, x0, #0xff
   337e0:	cmp	x0, #0x0
   337e4:	b.eq	33804 <rpl_regfree@@Base+0x520c>  // b.none
   337e8:	mov	x2, #0x0                   	// #0
   337ec:	adrp	x0, 36000 <rpl_regfree@@Base+0x7a08>
   337f0:	add	x1, x0, #0x10
   337f4:	ldr	x0, [sp, #56]
   337f8:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   337fc:	mov	x0, #0x0                   	// #0
   33800:	b	33aa4 <rpl_regfree@@Base+0x54ac>
   33804:	ldr	x0, [sp, #112]
   33808:	cmp	x0, #0x0
   3380c:	cset	w0, gt
   33810:	and	w0, w0, #0xff
   33814:	and	x0, x0, #0xff
   33818:	cmp	x0, #0x0
   3381c:	b.eq	33900 <rpl_regfree@@Base+0x5308>  // b.none
   33820:	ldr	x0, [sp, #56]
   33824:	str	x0, [sp, #136]
   33828:	mov	x0, #0x2                   	// #2
   3382c:	str	x0, [sp, #120]
   33830:	b	338a0 <rpl_regfree@@Base+0x52a8>
   33834:	ldr	x1, [sp, #40]
   33838:	ldr	x0, [sp, #56]
   3383c:	bl	36038 <rpl_regfree@@Base+0x7a40>
   33840:	str	x0, [sp, #56]
   33844:	mov	w3, #0x10                  	// #16
   33848:	ldr	x2, [sp, #56]
   3384c:	ldr	x1, [sp, #136]
   33850:	ldr	x0, [sp, #40]
   33854:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   33858:	str	x0, [sp, #136]
   3385c:	ldr	x0, [sp, #56]
   33860:	cmp	x0, #0x0
   33864:	cset	w0, eq  // eq = none
   33868:	and	w0, w0, #0xff
   3386c:	and	x0, x0, #0xff
   33870:	cmp	x0, #0x0
   33874:	b.ne	33a70 <rpl_regfree@@Base+0x5478>  // b.any
   33878:	ldr	x0, [sp, #136]
   3387c:	cmp	x0, #0x0
   33880:	cset	w0, eq  // eq = none
   33884:	and	w0, w0, #0xff
   33888:	and	x0, x0, #0xff
   3388c:	cmp	x0, #0x0
   33890:	b.ne	33a70 <rpl_regfree@@Base+0x5478>  // b.any
   33894:	ldr	x0, [sp, #120]
   33898:	add	x0, x0, #0x1
   3389c:	str	x0, [sp, #120]
   338a0:	ldr	x1, [sp, #120]
   338a4:	ldr	x0, [sp, #112]
   338a8:	cmp	x1, x0
   338ac:	b.le	33834 <rpl_regfree@@Base+0x523c>
   338b0:	ldr	x1, [sp, #112]
   338b4:	ldr	x0, [sp, #104]
   338b8:	cmp	x1, x0
   338bc:	b.ne	338c8 <rpl_regfree@@Base+0x52d0>  // b.any
   338c0:	ldr	x0, [sp, #136]
   338c4:	b	33aa4 <rpl_regfree@@Base+0x54ac>
   338c8:	ldr	x1, [sp, #40]
   338cc:	ldr	x0, [sp, #56]
   338d0:	bl	36038 <rpl_regfree@@Base+0x7a40>
   338d4:	str	x0, [sp, #56]
   338d8:	ldr	x0, [sp, #56]
   338dc:	cmp	x0, #0x0
   338e0:	cset	w0, eq  // eq = none
   338e4:	and	w0, w0, #0xff
   338e8:	and	x0, x0, #0xff
   338ec:	cmp	x0, #0x0
   338f0:	b.ne	33a78 <rpl_regfree@@Base+0x5480>  // b.any
   338f4:	ldr	x0, [sp, #136]
   338f8:	str	x0, [sp, #128]
   338fc:	b	33904 <rpl_regfree@@Base+0x530c>
   33900:	str	xzr, [sp, #128]
   33904:	ldr	x0, [sp, #56]
   33908:	ldrb	w0, [x0, #48]
   3390c:	cmp	w0, #0x11
   33910:	b.ne	33938 <rpl_regfree@@Base+0x5340>  // b.any
   33914:	ldr	x0, [sp, #56]
   33918:	ldr	x0, [x0, #40]
   3391c:	str	x0, [sp, #88]
   33920:	ldr	x0, [sp, #88]
   33924:	mov	x2, x0
   33928:	adrp	x0, 35000 <rpl_regfree@@Base+0x6a08>
   3392c:	add	x1, x0, #0xf38
   33930:	ldr	x0, [sp, #56]
   33934:	bl	2fc58 <rpl_regfree@@Base+0x1660>
   33938:	ldr	x0, [sp, #104]
   3393c:	cmn	x0, #0x1
   33940:	b.ne	3394c <rpl_regfree@@Base+0x5354>  // b.any
   33944:	mov	w0, #0xb                   	// #11
   33948:	b	33950 <rpl_regfree@@Base+0x5358>
   3394c:	mov	w0, #0xa                   	// #10
   33950:	mov	w3, w0
   33954:	mov	x2, #0x0                   	// #0
   33958:	ldr	x1, [sp, #56]
   3395c:	ldr	x0, [sp, #40]
   33960:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   33964:	str	x0, [sp, #136]
   33968:	ldr	x0, [sp, #136]
   3396c:	cmp	x0, #0x0
   33970:	cset	w0, eq  // eq = none
   33974:	and	w0, w0, #0xff
   33978:	and	x0, x0, #0xff
   3397c:	cmp	x0, #0x0
   33980:	b.ne	33a80 <rpl_regfree@@Base+0x5488>  // b.any
   33984:	ldr	x0, [sp, #112]
   33988:	add	x0, x0, #0x2
   3398c:	str	x0, [sp, #120]
   33990:	b	33a34 <rpl_regfree@@Base+0x543c>
   33994:	ldr	x1, [sp, #40]
   33998:	ldr	x0, [sp, #56]
   3399c:	bl	36038 <rpl_regfree@@Base+0x7a40>
   339a0:	str	x0, [sp, #56]
   339a4:	mov	w3, #0x10                  	// #16
   339a8:	ldr	x2, [sp, #56]
   339ac:	ldr	x1, [sp, #136]
   339b0:	ldr	x0, [sp, #40]
   339b4:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   339b8:	str	x0, [sp, #136]
   339bc:	ldr	x0, [sp, #56]
   339c0:	cmp	x0, #0x0
   339c4:	cset	w0, eq  // eq = none
   339c8:	and	w0, w0, #0xff
   339cc:	and	x0, x0, #0xff
   339d0:	cmp	x0, #0x0
   339d4:	b.ne	33a88 <rpl_regfree@@Base+0x5490>  // b.any
   339d8:	ldr	x0, [sp, #136]
   339dc:	cmp	x0, #0x0
   339e0:	cset	w0, eq  // eq = none
   339e4:	and	w0, w0, #0xff
   339e8:	and	x0, x0, #0xff
   339ec:	cmp	x0, #0x0
   339f0:	b.ne	33a88 <rpl_regfree@@Base+0x5490>  // b.any
   339f4:	mov	w3, #0xa                   	// #10
   339f8:	mov	x2, #0x0                   	// #0
   339fc:	ldr	x1, [sp, #136]
   33a00:	ldr	x0, [sp, #40]
   33a04:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   33a08:	str	x0, [sp, #136]
   33a0c:	ldr	x0, [sp, #136]
   33a10:	cmp	x0, #0x0
   33a14:	cset	w0, eq  // eq = none
   33a18:	and	w0, w0, #0xff
   33a1c:	and	x0, x0, #0xff
   33a20:	cmp	x0, #0x0
   33a24:	b.ne	33a90 <rpl_regfree@@Base+0x5498>  // b.any
   33a28:	ldr	x0, [sp, #120]
   33a2c:	add	x0, x0, #0x1
   33a30:	str	x0, [sp, #120]
   33a34:	ldr	x1, [sp, #120]
   33a38:	ldr	x0, [sp, #104]
   33a3c:	cmp	x1, x0
   33a40:	b.le	33994 <rpl_regfree@@Base+0x539c>
   33a44:	ldr	x0, [sp, #128]
   33a48:	cmp	x0, #0x0
   33a4c:	b.eq	33a68 <rpl_regfree@@Base+0x5470>  // b.none
   33a50:	mov	w3, #0x10                  	// #16
   33a54:	ldr	x2, [sp, #136]
   33a58:	ldr	x1, [sp, #128]
   33a5c:	ldr	x0, [sp, #40]
   33a60:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   33a64:	str	x0, [sp, #136]
   33a68:	ldr	x0, [sp, #136]
   33a6c:	b	33aa4 <rpl_regfree@@Base+0x54ac>
   33a70:	nop
   33a74:	b	33a94 <rpl_regfree@@Base+0x549c>
   33a78:	nop
   33a7c:	b	33a94 <rpl_regfree@@Base+0x549c>
   33a80:	nop
   33a84:	b	33a94 <rpl_regfree@@Base+0x549c>
   33a88:	nop
   33a8c:	b	33a94 <rpl_regfree@@Base+0x549c>
   33a90:	nop
   33a94:	ldr	x0, [sp, #16]
   33a98:	mov	w1, #0xc                   	// #12
   33a9c:	str	w1, [x0]
   33aa0:	mov	x0, #0x0                   	// #0
   33aa4:	ldp	x29, x30, [sp], #144
   33aa8:	ret
   33aac:	stp	x29, x30, [sp, #-32]!
   33ab0:	mov	x29, sp
   33ab4:	strb	w0, [sp, #31]
   33ab8:	str	x1, [sp, #16]
   33abc:	ldr	x0, [sp, #16]
   33ac0:	cmp	x0, #0x0
   33ac4:	b.ne	33ad0 <rpl_regfree@@Base+0x54d8>  // b.any
   33ac8:	ldrb	w0, [sp, #31]
   33acc:	b	33ad8 <rpl_regfree@@Base+0x54e0>
   33ad0:	ldrb	w0, [sp, #31]
   33ad4:	bl	af40 <btowc@plt>
   33ad8:	ldp	x29, x30, [sp], #32
   33adc:	ret
   33ae0:	stp	x29, x30, [sp, #-112]!
   33ae4:	mov	x29, sp
   33ae8:	str	x0, [sp, #56]
   33aec:	str	x1, [sp, #48]
   33af0:	str	x2, [sp, #40]
   33af4:	str	x3, [sp, #32]
   33af8:	str	x4, [sp, #24]
   33afc:	str	x5, [sp, #16]
   33b00:	ldr	x0, [sp, #24]
   33b04:	ldr	w0, [x0]
   33b08:	cmp	w0, #0x2
   33b0c:	cset	w0, eq  // eq = none
   33b10:	and	w0, w0, #0xff
   33b14:	and	x0, x0, #0xff
   33b18:	cmp	x0, #0x0
   33b1c:	b.ne	33b40 <rpl_regfree@@Base+0x5548>  // b.any
   33b20:	ldr	x0, [sp, #24]
   33b24:	ldr	w0, [x0]
   33b28:	cmp	w0, #0x4
   33b2c:	cset	w0, eq  // eq = none
   33b30:	and	w0, w0, #0xff
   33b34:	and	x0, x0, #0xff
   33b38:	cmp	x0, #0x0
   33b3c:	b.eq	33b48 <rpl_regfree@@Base+0x5550>  // b.none
   33b40:	mov	w0, #0x1                   	// #1
   33b44:	b	33b4c <rpl_regfree@@Base+0x5554>
   33b48:	mov	w0, #0x0                   	// #0
   33b4c:	cmp	w0, #0x0
   33b50:	b.ne	33b74 <rpl_regfree@@Base+0x557c>  // b.any
   33b54:	ldr	x0, [sp, #16]
   33b58:	ldr	w0, [x0]
   33b5c:	cmp	w0, #0x2
   33b60:	cset	w0, eq  // eq = none
   33b64:	and	w0, w0, #0xff
   33b68:	and	x0, x0, #0xff
   33b6c:	cmp	x0, #0x0
   33b70:	b.eq	33b7c <rpl_regfree@@Base+0x5584>  // b.none
   33b74:	mov	w0, #0x1                   	// #1
   33b78:	b	33b80 <rpl_regfree@@Base+0x5588>
   33b7c:	mov	w0, #0x0                   	// #0
   33b80:	cmp	w0, #0x0
   33b84:	b.ne	33ba8 <rpl_regfree@@Base+0x55b0>  // b.any
   33b88:	ldr	x0, [sp, #16]
   33b8c:	ldr	w0, [x0]
   33b90:	cmp	w0, #0x4
   33b94:	cset	w0, eq  // eq = none
   33b98:	and	w0, w0, #0xff
   33b9c:	and	x0, x0, #0xff
   33ba0:	cmp	x0, #0x0
   33ba4:	b.eq	33bb0 <rpl_regfree@@Base+0x55b8>  // b.none
   33ba8:	mov	w0, #0xb                   	// #11
   33bac:	b	33f74 <rpl_regfree@@Base+0x597c>
   33bb0:	ldr	x0, [sp, #24]
   33bb4:	ldr	w0, [x0]
   33bb8:	cmp	w0, #0x3
   33bbc:	cset	w0, eq  // eq = none
   33bc0:	and	w0, w0, #0xff
   33bc4:	and	x0, x0, #0xff
   33bc8:	cmp	x0, #0x0
   33bcc:	b.eq	33bfc <rpl_regfree@@Base+0x5604>  // b.none
   33bd0:	ldr	x0, [sp, #24]
   33bd4:	ldr	x0, [x0, #8]
   33bd8:	bl	a820 <strlen@plt>
   33bdc:	cmp	x0, #0x1
   33be0:	cset	w0, hi  // hi = pmore
   33be4:	and	w0, w0, #0xff
   33be8:	and	x0, x0, #0xff
   33bec:	cmp	x0, #0x0
   33bf0:	b.eq	33bfc <rpl_regfree@@Base+0x5604>  // b.none
   33bf4:	mov	w0, #0x1                   	// #1
   33bf8:	b	33c00 <rpl_regfree@@Base+0x5608>
   33bfc:	mov	w0, #0x0                   	// #0
   33c00:	cmp	w0, #0x0
   33c04:	b.ne	33c60 <rpl_regfree@@Base+0x5668>  // b.any
   33c08:	ldr	x0, [sp, #16]
   33c0c:	ldr	w0, [x0]
   33c10:	cmp	w0, #0x3
   33c14:	cset	w0, eq  // eq = none
   33c18:	and	w0, w0, #0xff
   33c1c:	and	x0, x0, #0xff
   33c20:	cmp	x0, #0x0
   33c24:	b.eq	33c54 <rpl_regfree@@Base+0x565c>  // b.none
   33c28:	ldr	x0, [sp, #16]
   33c2c:	ldr	x0, [x0, #8]
   33c30:	bl	a820 <strlen@plt>
   33c34:	cmp	x0, #0x1
   33c38:	cset	w0, hi  // hi = pmore
   33c3c:	and	w0, w0, #0xff
   33c40:	and	x0, x0, #0xff
   33c44:	cmp	x0, #0x0
   33c48:	b.eq	33c54 <rpl_regfree@@Base+0x565c>  // b.none
   33c4c:	mov	w0, #0x1                   	// #1
   33c50:	b	33c58 <rpl_regfree@@Base+0x5660>
   33c54:	mov	w0, #0x0                   	// #0
   33c58:	cmp	w0, #0x0
   33c5c:	b.eq	33c68 <rpl_regfree@@Base+0x5670>  // b.none
   33c60:	mov	w0, #0x3                   	// #3
   33c64:	b	33f74 <rpl_regfree@@Base+0x597c>
   33c68:	ldr	x0, [sp, #24]
   33c6c:	ldr	w0, [x0]
   33c70:	cmp	w0, #0x0
   33c74:	b.ne	33c84 <rpl_regfree@@Base+0x568c>  // b.any
   33c78:	ldr	x0, [sp, #24]
   33c7c:	ldrb	w0, [x0, #8]
   33c80:	b	33ca8 <rpl_regfree@@Base+0x56b0>
   33c84:	ldr	x0, [sp, #24]
   33c88:	ldr	w0, [x0]
   33c8c:	cmp	w0, #0x3
   33c90:	b.ne	33ca4 <rpl_regfree@@Base+0x56ac>  // b.any
   33c94:	ldr	x0, [sp, #24]
   33c98:	ldr	x0, [x0, #8]
   33c9c:	ldrb	w0, [x0]
   33ca0:	b	33ca8 <rpl_regfree@@Base+0x56b0>
   33ca4:	mov	w0, #0x0                   	// #0
   33ca8:	str	w0, [sp, #104]
   33cac:	ldr	x0, [sp, #16]
   33cb0:	ldr	w0, [x0]
   33cb4:	cmp	w0, #0x0
   33cb8:	b.ne	33cc8 <rpl_regfree@@Base+0x56d0>  // b.any
   33cbc:	ldr	x0, [sp, #16]
   33cc0:	ldrb	w0, [x0, #8]
   33cc4:	b	33cec <rpl_regfree@@Base+0x56f4>
   33cc8:	ldr	x0, [sp, #16]
   33ccc:	ldr	w0, [x0]
   33cd0:	cmp	w0, #0x3
   33cd4:	b.ne	33ce8 <rpl_regfree@@Base+0x56f0>  // b.any
   33cd8:	ldr	x0, [sp, #16]
   33cdc:	ldr	x0, [x0, #8]
   33ce0:	ldrb	w0, [x0]
   33ce4:	b	33cec <rpl_regfree@@Base+0x56f4>
   33ce8:	mov	w0, #0x0                   	// #0
   33cec:	str	w0, [sp, #100]
   33cf0:	ldr	x0, [sp, #24]
   33cf4:	ldr	w0, [x0]
   33cf8:	cmp	w0, #0x0
   33cfc:	b.eq	33d10 <rpl_regfree@@Base+0x5718>  // b.none
   33d00:	ldr	x0, [sp, #24]
   33d04:	ldr	w0, [x0]
   33d08:	cmp	w0, #0x3
   33d0c:	b.ne	33d24 <rpl_regfree@@Base+0x572c>  // b.any
   33d10:	ldr	w0, [sp, #104]
   33d14:	and	w0, w0, #0xff
   33d18:	ldr	x1, [sp, #40]
   33d1c:	bl	33aac <rpl_regfree@@Base+0x54b4>
   33d20:	b	33d2c <rpl_regfree@@Base+0x5734>
   33d24:	ldr	x0, [sp, #24]
   33d28:	ldr	w0, [x0, #8]
   33d2c:	str	w0, [sp, #96]
   33d30:	ldr	x0, [sp, #16]
   33d34:	ldr	w0, [x0]
   33d38:	cmp	w0, #0x0
   33d3c:	b.eq	33d50 <rpl_regfree@@Base+0x5758>  // b.none
   33d40:	ldr	x0, [sp, #16]
   33d44:	ldr	w0, [x0]
   33d48:	cmp	w0, #0x3
   33d4c:	b.ne	33d64 <rpl_regfree@@Base+0x576c>  // b.any
   33d50:	ldr	w0, [sp, #100]
   33d54:	and	w0, w0, #0xff
   33d58:	ldr	x1, [sp, #40]
   33d5c:	bl	33aac <rpl_regfree@@Base+0x54b4>
   33d60:	b	33d6c <rpl_regfree@@Base+0x5774>
   33d64:	ldr	x0, [sp, #16]
   33d68:	ldr	w0, [x0, #8]
   33d6c:	str	w0, [sp, #92]
   33d70:	ldr	w0, [sp, #96]
   33d74:	cmn	w0, #0x1
   33d78:	b.eq	33d88 <rpl_regfree@@Base+0x5790>  // b.none
   33d7c:	ldr	w0, [sp, #92]
   33d80:	cmn	w0, #0x1
   33d84:	b.ne	33d90 <rpl_regfree@@Base+0x5798>  // b.any
   33d88:	mov	w0, #0x3                   	// #3
   33d8c:	b	33f74 <rpl_regfree@@Base+0x597c>
   33d90:	ldr	x0, [sp, #56]
   33d94:	and	x0, x0, #0x10000
   33d98:	cmp	x0, #0x0
   33d9c:	cset	w0, ne  // ne = any
   33da0:	and	w0, w0, #0xff
   33da4:	and	x0, x0, #0xff
   33da8:	cmp	x0, #0x0
   33dac:	b.eq	33dd8 <rpl_regfree@@Base+0x57e0>  // b.none
   33db0:	ldr	w1, [sp, #96]
   33db4:	ldr	w0, [sp, #92]
   33db8:	cmp	w1, w0
   33dbc:	cset	w0, hi  // hi = pmore
   33dc0:	and	w0, w0, #0xff
   33dc4:	and	x0, x0, #0xff
   33dc8:	cmp	x0, #0x0
   33dcc:	b.eq	33dd8 <rpl_regfree@@Base+0x57e0>  // b.none
   33dd0:	mov	w0, #0xb                   	// #11
   33dd4:	b	33f74 <rpl_regfree@@Base+0x597c>
   33dd8:	ldr	x0, [sp, #40]
   33ddc:	cmp	x0, #0x0
   33de0:	b.eq	33f20 <rpl_regfree@@Base+0x5928>  // b.none
   33de4:	ldr	x0, [sp, #32]
   33de8:	ldr	x1, [x0]
   33dec:	ldr	x0, [sp, #40]
   33df0:	ldr	x0, [x0, #64]
   33df4:	cmp	x1, x0
   33df8:	cset	w0, eq  // eq = none
   33dfc:	and	w0, w0, #0xff
   33e00:	and	x0, x0, #0xff
   33e04:	cmp	x0, #0x0
   33e08:	b.eq	33ed4 <rpl_regfree@@Base+0x58dc>  // b.none
   33e0c:	ldr	x0, [sp, #40]
   33e10:	ldr	x0, [x0, #64]
   33e14:	lsl	x0, x0, #1
   33e18:	add	x0, x0, #0x1
   33e1c:	str	x0, [sp, #80]
   33e20:	ldr	x0, [sp, #40]
   33e24:	ldr	x2, [x0, #8]
   33e28:	ldr	x0, [sp, #80]
   33e2c:	lsl	x0, x0, #2
   33e30:	mov	x1, x0
   33e34:	mov	x0, x2
   33e38:	bl	ae00 <realloc@plt>
   33e3c:	str	x0, [sp, #72]
   33e40:	ldr	x0, [sp, #40]
   33e44:	ldr	x2, [x0, #16]
   33e48:	ldr	x0, [sp, #80]
   33e4c:	lsl	x0, x0, #2
   33e50:	mov	x1, x0
   33e54:	mov	x0, x2
   33e58:	bl	ae00 <realloc@plt>
   33e5c:	str	x0, [sp, #64]
   33e60:	ldr	x0, [sp, #72]
   33e64:	cmp	x0, #0x0
   33e68:	cset	w0, eq  // eq = none
   33e6c:	and	w0, w0, #0xff
   33e70:	and	x0, x0, #0xff
   33e74:	cmp	x0, #0x0
   33e78:	b.ne	33e98 <rpl_regfree@@Base+0x58a0>  // b.any
   33e7c:	ldr	x0, [sp, #64]
   33e80:	cmp	x0, #0x0
   33e84:	cset	w0, eq  // eq = none
   33e88:	and	w0, w0, #0xff
   33e8c:	and	x0, x0, #0xff
   33e90:	cmp	x0, #0x0
   33e94:	b.eq	33eb0 <rpl_regfree@@Base+0x58b8>  // b.none
   33e98:	ldr	x0, [sp, #72]
   33e9c:	bl	b130 <free@plt>
   33ea0:	ldr	x0, [sp, #64]
   33ea4:	bl	b130 <free@plt>
   33ea8:	mov	w0, #0xc                   	// #12
   33eac:	b	33f74 <rpl_regfree@@Base+0x597c>
   33eb0:	ldr	x0, [sp, #40]
   33eb4:	ldr	x1, [sp, #72]
   33eb8:	str	x1, [x0, #8]
   33ebc:	ldr	x0, [sp, #40]
   33ec0:	ldr	x1, [sp, #64]
   33ec4:	str	x1, [x0, #16]
   33ec8:	ldr	x0, [sp, #32]
   33ecc:	ldr	x1, [sp, #80]
   33ed0:	str	x1, [x0]
   33ed4:	ldr	x0, [sp, #40]
   33ed8:	ldr	x1, [x0, #8]
   33edc:	ldr	x0, [sp, #40]
   33ee0:	ldr	x0, [x0, #64]
   33ee4:	lsl	x0, x0, #2
   33ee8:	add	x0, x1, x0
   33eec:	ldr	w1, [sp, #96]
   33ef0:	str	w1, [x0]
   33ef4:	ldr	x0, [sp, #40]
   33ef8:	ldr	x1, [x0, #16]
   33efc:	ldr	x0, [sp, #40]
   33f00:	ldr	x0, [x0, #64]
   33f04:	add	x3, x0, #0x1
   33f08:	ldr	x2, [sp, #40]
   33f0c:	str	x3, [x2, #64]
   33f10:	lsl	x0, x0, #2
   33f14:	add	x0, x1, x0
   33f18:	ldr	w1, [sp, #92]
   33f1c:	str	w1, [x0]
   33f20:	str	wzr, [sp, #108]
   33f24:	b	33f64 <rpl_regfree@@Base+0x596c>
   33f28:	ldr	w1, [sp, #96]
   33f2c:	ldr	w0, [sp, #108]
   33f30:	cmp	w1, w0
   33f34:	b.hi	33f58 <rpl_regfree@@Base+0x5960>  // b.pmore
   33f38:	ldr	w1, [sp, #108]
   33f3c:	ldr	w0, [sp, #92]
   33f40:	cmp	w1, w0
   33f44:	b.hi	33f58 <rpl_regfree@@Base+0x5960>  // b.pmore
   33f48:	ldr	w0, [sp, #108]
   33f4c:	mov	x1, x0
   33f50:	ldr	x0, [sp, #48]
   33f54:	bl	2873c <printf_parse@@Base+0x1444>
   33f58:	ldr	w0, [sp, #108]
   33f5c:	add	w0, w0, #0x1
   33f60:	str	w0, [sp, #108]
   33f64:	ldr	w0, [sp, #108]
   33f68:	cmp	w0, #0xff
   33f6c:	b.ls	33f28 <rpl_regfree@@Base+0x5930>  // b.plast
   33f70:	mov	w0, #0x0                   	// #0
   33f74:	ldp	x29, x30, [sp], #112
   33f78:	ret
   33f7c:	stp	x29, x30, [sp, #-64]!
   33f80:	mov	x29, sp
   33f84:	str	x0, [sp, #40]
   33f88:	str	x1, [sp, #32]
   33f8c:	str	x2, [sp, #24]
   33f90:	str	x3, [sp, #16]
   33f94:	ldr	x0, [sp, #16]
   33f98:	bl	a820 <strlen@plt>
   33f9c:	str	x0, [sp, #56]
   33fa0:	ldr	x0, [sp, #56]
   33fa4:	cmp	x0, #0x1
   33fa8:	cset	w0, ne  // ne = any
   33fac:	and	w0, w0, #0xff
   33fb0:	and	x0, x0, #0xff
   33fb4:	cmp	x0, #0x0
   33fb8:	b.eq	33fc4 <rpl_regfree@@Base+0x59cc>  // b.none
   33fbc:	mov	w0, #0x3                   	// #3
   33fc0:	b	33fe0 <rpl_regfree@@Base+0x59e8>
   33fc4:	ldr	x0, [sp, #16]
   33fc8:	ldrb	w0, [x0]
   33fcc:	and	x0, x0, #0xff
   33fd0:	mov	x1, x0
   33fd4:	ldr	x0, [sp, #40]
   33fd8:	bl	2873c <printf_parse@@Base+0x1444>
   33fdc:	mov	w0, #0x0                   	// #0
   33fe0:	ldp	x29, x30, [sp], #64
   33fe4:	ret
   33fe8:	stp	x29, x30, [sp, #-320]!
   33fec:	mov	x29, sp
   33ff0:	str	x0, [sp, #56]
   33ff4:	str	x1, [sp, #48]
   33ff8:	str	x2, [sp, #40]
   33ffc:	str	x3, [sp, #32]
   34000:	str	x4, [sp, #24]
   34004:	str	xzr, [sp, #208]
   34008:	str	xzr, [sp, #200]
   3400c:	str	xzr, [sp, #312]
   34010:	str	xzr, [sp, #192]
   34014:	str	xzr, [sp, #184]
   34018:	strb	wzr, [sp, #311]
   3401c:	mov	w0, #0x1                   	// #1
   34020:	strb	w0, [sp, #291]
   34024:	mov	x1, #0x1                   	// #1
   34028:	mov	x0, #0x20                  	// #32
   3402c:	bl	ad80 <calloc@plt>
   34030:	str	x0, [sp, #264]
   34034:	mov	x1, #0x1                   	// #1
   34038:	mov	x0, #0x50                  	// #80
   3403c:	bl	ad80 <calloc@plt>
   34040:	str	x0, [sp, #256]
   34044:	ldr	x0, [sp, #264]
   34048:	cmp	x0, #0x0
   3404c:	cset	w0, eq  // eq = none
   34050:	and	w0, w0, #0xff
   34054:	and	x0, x0, #0xff
   34058:	cmp	x0, #0x0
   3405c:	b.ne	3407c <rpl_regfree@@Base+0x5a84>  // b.any
   34060:	ldr	x0, [sp, #256]
   34064:	cmp	x0, #0x0
   34068:	cset	w0, eq  // eq = none
   3406c:	and	w0, w0, #0xff
   34070:	and	x0, x0, #0xff
   34074:	cmp	x0, #0x0
   34078:	b.eq	340a0 <rpl_regfree@@Base+0x5aa8>  // b.none
   3407c:	ldr	x0, [sp, #264]
   34080:	bl	b130 <free@plt>
   34084:	ldr	x0, [sp, #256]
   34088:	bl	b130 <free@plt>
   3408c:	ldr	x0, [sp, #24]
   34090:	mov	w1, #0xc                   	// #12
   34094:	str	w1, [x0]
   34098:	mov	x0, #0x0                   	// #0
   3409c:	b	34924 <rpl_regfree@@Base+0x632c>
   340a0:	ldr	x2, [sp, #32]
   340a4:	ldr	x1, [sp, #56]
   340a8:	ldr	x0, [sp, #40]
   340ac:	bl	320a8 <rpl_regfree@@Base+0x3ab0>
   340b0:	str	w0, [sp, #292]
   340b4:	ldr	x0, [sp, #40]
   340b8:	ldrb	w0, [x0, #8]
   340bc:	cmp	w0, #0x2
   340c0:	cset	w0, eq  // eq = none
   340c4:	and	w0, w0, #0xff
   340c8:	and	x0, x0, #0xff
   340cc:	cmp	x0, #0x0
   340d0:	b.eq	340e4 <rpl_regfree@@Base+0x5aec>  // b.none
   340d4:	ldr	x0, [sp, #24]
   340d8:	mov	w1, #0x2                   	// #2
   340dc:	str	w1, [x0]
   340e0:	b	34910 <rpl_regfree@@Base+0x6318>
   340e4:	ldr	x0, [sp, #40]
   340e8:	ldrb	w0, [x0, #8]
   340ec:	cmp	w0, #0x19
   340f0:	b.ne	34184 <rpl_regfree@@Base+0x5b8c>  // b.any
   340f4:	ldr	x0, [sp, #256]
   340f8:	ldrb	w1, [x0, #32]
   340fc:	orr	w1, w1, #0x1
   34100:	strb	w1, [x0, #32]
   34104:	mov	w0, #0x1                   	// #1
   34108:	strb	w0, [sp, #311]
   3410c:	ldr	x0, [sp, #32]
   34110:	and	x0, x0, #0x100
   34114:	cmp	x0, #0x0
   34118:	b.eq	34128 <rpl_regfree@@Base+0x5b30>  // b.none
   3411c:	mov	x1, #0xa                   	// #10
   34120:	ldr	x0, [sp, #264]
   34124:	bl	2873c <printf_parse@@Base+0x1444>
   34128:	ldr	x0, [sp, #56]
   3412c:	ldr	x1, [x0, #72]
   34130:	ldrsw	x0, [sp, #292]
   34134:	add	x1, x1, x0
   34138:	ldr	x0, [sp, #56]
   3413c:	str	x1, [x0, #72]
   34140:	ldr	x2, [sp, #32]
   34144:	ldr	x1, [sp, #56]
   34148:	ldr	x0, [sp, #40]
   3414c:	bl	320a8 <rpl_regfree@@Base+0x3ab0>
   34150:	str	w0, [sp, #292]
   34154:	ldr	x0, [sp, #40]
   34158:	ldrb	w0, [x0, #8]
   3415c:	cmp	w0, #0x2
   34160:	cset	w0, eq  // eq = none
   34164:	and	w0, w0, #0xff
   34168:	and	x0, x0, #0xff
   3416c:	cmp	x0, #0x0
   34170:	b.eq	34184 <rpl_regfree@@Base+0x5b8c>  // b.none
   34174:	ldr	x0, [sp, #24]
   34178:	mov	w1, #0x2                   	// #2
   3417c:	str	w1, [x0]
   34180:	b	34910 <rpl_regfree@@Base+0x6318>
   34184:	ldr	x0, [sp, #40]
   34188:	ldrb	w0, [x0, #8]
   3418c:	cmp	w0, #0x15
   34190:	b.ne	341a0 <rpl_regfree@@Base+0x5ba8>  // b.any
   34194:	ldr	x0, [sp, #40]
   34198:	mov	w1, #0x1                   	// #1
   3419c:	strb	w1, [x0, #8]
   341a0:	str	wzr, [sp, #284]
   341a4:	strb	wzr, [sp, #283]
   341a8:	add	x0, sp, #0x48
   341ac:	str	x0, [sp, #176]
   341b0:	mov	w0, #0x3                   	// #3
   341b4:	str	w0, [sp, #168]
   341b8:	add	x0, sp, #0xa8
   341bc:	ldrb	w6, [sp, #291]
   341c0:	ldr	x5, [sp, #32]
   341c4:	ldr	x4, [sp, #48]
   341c8:	ldr	w3, [sp, #292]
   341cc:	ldr	x2, [sp, #40]
   341d0:	ldr	x1, [sp, #56]
   341d4:	bl	3492c <rpl_regfree@@Base+0x6334>
   341d8:	str	w0, [sp, #252]
   341dc:	ldr	w0, [sp, #252]
   341e0:	cmp	w0, #0x0
   341e4:	cset	w0, ne  // ne = any
   341e8:	and	w0, w0, #0xff
   341ec:	and	x0, x0, #0xff
   341f0:	cmp	x0, #0x0
   341f4:	b.eq	34208 <rpl_regfree@@Base+0x5c10>  // b.none
   341f8:	ldr	x0, [sp, #24]
   341fc:	ldr	w1, [sp, #252]
   34200:	str	w1, [x0]
   34204:	b	34910 <rpl_regfree@@Base+0x6318>
   34208:	strb	wzr, [sp, #291]
   3420c:	ldr	x2, [sp, #32]
   34210:	ldr	x1, [sp, #56]
   34214:	ldr	x0, [sp, #40]
   34218:	bl	320a8 <rpl_regfree@@Base+0x3ab0>
   3421c:	str	w0, [sp, #292]
   34220:	ldr	w0, [sp, #168]
   34224:	cmp	w0, #0x4
   34228:	b.eq	34314 <rpl_regfree@@Base+0x5d1c>  // b.none
   3422c:	ldr	w0, [sp, #168]
   34230:	cmp	w0, #0x2
   34234:	b.eq	34314 <rpl_regfree@@Base+0x5d1c>  // b.none
   34238:	ldr	x0, [sp, #40]
   3423c:	ldrb	w0, [x0, #8]
   34240:	cmp	w0, #0x2
   34244:	cset	w0, eq  // eq = none
   34248:	and	w0, w0, #0xff
   3424c:	and	x0, x0, #0xff
   34250:	cmp	x0, #0x0
   34254:	b.eq	34268 <rpl_regfree@@Base+0x5c70>  // b.none
   34258:	ldr	x0, [sp, #24]
   3425c:	mov	w1, #0x7                   	// #7
   34260:	str	w1, [x0]
   34264:	b	34910 <rpl_regfree@@Base+0x6318>
   34268:	ldr	x0, [sp, #40]
   3426c:	ldrb	w0, [x0, #8]
   34270:	cmp	w0, #0x16
   34274:	b.ne	34314 <rpl_regfree@@Base+0x5d1c>  // b.any
   34278:	ldr	x0, [sp, #56]
   3427c:	ldr	x1, [x0, #72]
   34280:	ldrsw	x0, [sp, #292]
   34284:	add	x1, x1, x0
   34288:	ldr	x0, [sp, #56]
   3428c:	str	x1, [x0, #72]
   34290:	add	x0, sp, #0x88
   34294:	ldr	x2, [sp, #32]
   34298:	ldr	x1, [sp, #56]
   3429c:	bl	320a8 <rpl_regfree@@Base+0x3ab0>
   342a0:	str	w0, [sp, #284]
   342a4:	ldrb	w0, [sp, #144]
   342a8:	cmp	w0, #0x2
   342ac:	cset	w0, eq  // eq = none
   342b0:	and	w0, w0, #0xff
   342b4:	and	x0, x0, #0xff
   342b8:	cmp	x0, #0x0
   342bc:	b.eq	342d0 <rpl_regfree@@Base+0x5cd8>  // b.none
   342c0:	ldr	x0, [sp, #24]
   342c4:	mov	w1, #0x7                   	// #7
   342c8:	str	w1, [x0]
   342cc:	b	34910 <rpl_regfree@@Base+0x6318>
   342d0:	ldrb	w0, [sp, #144]
   342d4:	cmp	w0, #0x15
   342d8:	b.ne	3430c <rpl_regfree@@Base+0x5d14>  // b.any
   342dc:	ldr	x0, [sp, #56]
   342e0:	ldr	x1, [x0, #72]
   342e4:	ldr	w0, [sp, #292]
   342e8:	neg	w0, w0
   342ec:	sxtw	x0, w0
   342f0:	add	x1, x1, x0
   342f4:	ldr	x0, [sp, #56]
   342f8:	str	x1, [x0, #72]
   342fc:	ldr	x0, [sp, #40]
   34300:	mov	w1, #0x1                   	// #1
   34304:	strb	w1, [x0, #8]
   34308:	b	34314 <rpl_regfree@@Base+0x5d1c>
   3430c:	mov	w0, #0x1                   	// #1
   34310:	strb	w0, [sp, #283]
   34314:	ldrb	w0, [sp, #283]
   34318:	cmp	w0, #0x0
   3431c:	b.eq	3440c <rpl_regfree@@Base+0x5e14>  // b.none
   34320:	add	x0, sp, #0x68
   34324:	str	x0, [sp, #160]
   34328:	mov	w0, #0x3                   	// #3
   3432c:	str	w0, [sp, #152]
   34330:	add	x1, sp, #0x88
   34334:	add	x0, sp, #0x98
   34338:	mov	w6, #0x1                   	// #1
   3433c:	ldr	x5, [sp, #32]
   34340:	ldr	x4, [sp, #48]
   34344:	ldr	w3, [sp, #284]
   34348:	mov	x2, x1
   3434c:	ldr	x1, [sp, #56]
   34350:	bl	3492c <rpl_regfree@@Base+0x6334>
   34354:	str	w0, [sp, #252]
   34358:	ldr	w0, [sp, #252]
   3435c:	cmp	w0, #0x0
   34360:	cset	w0, ne  // ne = any
   34364:	and	w0, w0, #0xff
   34368:	and	x0, x0, #0xff
   3436c:	cmp	x0, #0x0
   34370:	b.eq	34384 <rpl_regfree@@Base+0x5d8c>  // b.none
   34374:	ldr	x0, [sp, #24]
   34378:	ldr	w1, [sp, #252]
   3437c:	str	w1, [x0]
   34380:	b	34910 <rpl_regfree@@Base+0x6318>
   34384:	ldr	x2, [sp, #32]
   34388:	ldr	x1, [sp, #56]
   3438c:	ldr	x0, [sp, #40]
   34390:	bl	320a8 <rpl_regfree@@Base+0x3ab0>
   34394:	str	w0, [sp, #292]
   34398:	ldr	x0, [sp, #48]
   3439c:	ldr	w0, [x0, #180]
   343a0:	cmp	w0, #0x1
   343a4:	b.le	343b0 <rpl_regfree@@Base+0x5db8>
   343a8:	ldr	x0, [sp, #256]
   343ac:	b	343b4 <rpl_regfree@@Base+0x5dbc>
   343b0:	mov	x0, #0x0                   	// #0
   343b4:	add	x3, sp, #0x98
   343b8:	add	x2, sp, #0xa8
   343bc:	add	x1, sp, #0xc8
   343c0:	mov	x5, x3
   343c4:	mov	x4, x2
   343c8:	mov	x3, x1
   343cc:	mov	x2, x0
   343d0:	ldr	x1, [sp, #264]
   343d4:	ldr	x0, [sp, #32]
   343d8:	bl	33ae0 <rpl_regfree@@Base+0x54e8>
   343dc:	mov	w1, w0
   343e0:	ldr	x0, [sp, #24]
   343e4:	str	w1, [x0]
   343e8:	ldr	x0, [sp, #24]
   343ec:	ldr	w0, [x0]
   343f0:	cmp	w0, #0x0
   343f4:	cset	w0, ne  // ne = any
   343f8:	and	w0, w0, #0xff
   343fc:	and	x0, x0, #0xff
   34400:	cmp	x0, #0x0
   34404:	b.eq	34640 <rpl_regfree@@Base+0x6048>  // b.none
   34408:	b	34910 <rpl_regfree@@Base+0x6318>
   3440c:	ldr	w0, [sp, #168]
   34410:	cmp	w0, #0x4
   34414:	b.eq	345b4 <rpl_regfree@@Base+0x5fbc>  // b.none
   34418:	cmp	w0, #0x4
   3441c:	b.hi	3460c <rpl_regfree@@Base+0x6014>  // b.pmore
   34420:	cmp	w0, #0x3
   34424:	b.eq	34568 <rpl_regfree@@Base+0x5f70>  // b.none
   34428:	cmp	w0, #0x3
   3442c:	b.hi	3460c <rpl_regfree@@Base+0x6014>  // b.pmore
   34430:	cmp	w0, #0x2
   34434:	b.eq	3451c <rpl_regfree@@Base+0x5f24>  // b.none
   34438:	cmp	w0, #0x2
   3443c:	b.hi	3460c <rpl_regfree@@Base+0x6014>  // b.pmore
   34440:	cmp	w0, #0x0
   34444:	b.eq	34454 <rpl_regfree@@Base+0x5e5c>  // b.none
   34448:	cmp	w0, #0x1
   3444c:	b.eq	3446c <rpl_regfree@@Base+0x5e74>  // b.none
   34450:	b	3460c <rpl_regfree@@Base+0x6014>
   34454:	ldrb	w0, [sp, #176]
   34458:	and	x0, x0, #0xff
   3445c:	mov	x1, x0
   34460:	ldr	x0, [sp, #264]
   34464:	bl	2873c <printf_parse@@Base+0x1444>
   34468:	b	34640 <rpl_regfree@@Base+0x6048>
   3446c:	ldr	x0, [sp, #256]
   34470:	ldr	x0, [x0, #40]
   34474:	ldr	x1, [sp, #312]
   34478:	cmp	x1, x0
   3447c:	cset	w0, eq  // eq = none
   34480:	and	w0, w0, #0xff
   34484:	and	x0, x0, #0xff
   34488:	cmp	x0, #0x0
   3448c:	b.eq	344ec <rpl_regfree@@Base+0x5ef4>  // b.none
   34490:	ldr	x0, [sp, #256]
   34494:	ldr	x0, [x0, #40]
   34498:	lsl	x0, x0, #1
   3449c:	add	x0, x0, #0x1
   344a0:	str	x0, [sp, #312]
   344a4:	ldr	x0, [sp, #256]
   344a8:	ldr	x2, [x0]
   344ac:	ldr	x0, [sp, #312]
   344b0:	lsl	x0, x0, #2
   344b4:	mov	x1, x0
   344b8:	mov	x0, x2
   344bc:	bl	ae00 <realloc@plt>
   344c0:	str	x0, [sp, #240]
   344c4:	ldr	x0, [sp, #240]
   344c8:	cmp	x0, #0x0
   344cc:	cset	w0, eq  // eq = none
   344d0:	and	w0, w0, #0xff
   344d4:	and	x0, x0, #0xff
   344d8:	cmp	x0, #0x0
   344dc:	b.ne	348e8 <rpl_regfree@@Base+0x62f0>  // b.any
   344e0:	ldr	x0, [sp, #256]
   344e4:	ldr	x1, [sp, #240]
   344e8:	str	x1, [x0]
   344ec:	ldr	x0, [sp, #256]
   344f0:	ldr	x1, [x0]
   344f4:	ldr	x0, [sp, #256]
   344f8:	ldr	x0, [x0, #40]
   344fc:	add	x3, x0, #0x1
   34500:	ldr	x2, [sp, #256]
   34504:	str	x3, [x2, #40]
   34508:	lsl	x0, x0, #2
   3450c:	add	x0, x1, x0
   34510:	ldr	w1, [sp, #176]
   34514:	str	w1, [x0]
   34518:	b	34640 <rpl_regfree@@Base+0x6048>
   3451c:	ldr	x1, [sp, #176]
   34520:	add	x0, sp, #0xc0
   34524:	mov	x3, x1
   34528:	mov	x2, x0
   3452c:	ldr	x1, [sp, #256]
   34530:	ldr	x0, [sp, #264]
   34534:	bl	34c48 <rpl_regfree@@Base+0x6650>
   34538:	mov	w1, w0
   3453c:	ldr	x0, [sp, #24]
   34540:	str	w1, [x0]
   34544:	ldr	x0, [sp, #24]
   34548:	ldr	w0, [x0]
   3454c:	cmp	w0, #0x0
   34550:	cset	w0, ne  // ne = any
   34554:	and	w0, w0, #0xff
   34558:	and	x0, x0, #0xff
   3455c:	cmp	x0, #0x0
   34560:	b.eq	3462c <rpl_regfree@@Base+0x6034>  // b.none
   34564:	b	34910 <rpl_regfree@@Base+0x6318>
   34568:	ldr	x1, [sp, #176]
   3456c:	add	x0, sp, #0xd0
   34570:	mov	x3, x1
   34574:	mov	x2, x0
   34578:	ldr	x1, [sp, #256]
   3457c:	ldr	x0, [sp, #264]
   34580:	bl	33f7c <rpl_regfree@@Base+0x5984>
   34584:	mov	w1, w0
   34588:	ldr	x0, [sp, #24]
   3458c:	str	w1, [x0]
   34590:	ldr	x0, [sp, #24]
   34594:	ldr	w0, [x0]
   34598:	cmp	w0, #0x0
   3459c:	cset	w0, ne  // ne = any
   345a0:	and	w0, w0, #0xff
   345a4:	and	x0, x0, #0xff
   345a8:	cmp	x0, #0x0
   345ac:	b.eq	34634 <rpl_regfree@@Base+0x603c>  // b.none
   345b0:	b	34910 <rpl_regfree@@Base+0x6318>
   345b4:	ldr	x0, [sp, #56]
   345b8:	ldr	x0, [x0, #120]
   345bc:	ldr	x2, [sp, #176]
   345c0:	add	x1, sp, #0xb8
   345c4:	ldr	x5, [sp, #32]
   345c8:	mov	x4, x2
   345cc:	mov	x3, x1
   345d0:	ldr	x2, [sp, #256]
   345d4:	ldr	x1, [sp, #264]
   345d8:	bl	34cac <rpl_regfree@@Base+0x66b4>
   345dc:	mov	w1, w0
   345e0:	ldr	x0, [sp, #24]
   345e4:	str	w1, [x0]
   345e8:	ldr	x0, [sp, #24]
   345ec:	ldr	w0, [x0]
   345f0:	cmp	w0, #0x0
   345f4:	cset	w0, ne  // ne = any
   345f8:	and	w0, w0, #0xff
   345fc:	and	x0, x0, #0xff
   34600:	cmp	x0, #0x0
   34604:	b.eq	3463c <rpl_regfree@@Base+0x6044>  // b.none
   34608:	b	34910 <rpl_regfree@@Base+0x6318>
   3460c:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   34610:	add	x3, x0, #0x7c0
   34614:	mov	w2, #0xced                 	// #3309
   34618:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   3461c:	add	x1, x0, #0x4e0
   34620:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   34624:	add	x0, x0, #0x6c8
   34628:	bl	b630 <__assert_fail@plt>
   3462c:	nop
   34630:	b	34640 <rpl_regfree@@Base+0x6048>
   34634:	nop
   34638:	b	34640 <rpl_regfree@@Base+0x6048>
   3463c:	nop
   34640:	ldr	x0, [sp, #40]
   34644:	ldrb	w0, [x0, #8]
   34648:	cmp	w0, #0x2
   3464c:	cset	w0, eq  // eq = none
   34650:	and	w0, w0, #0xff
   34654:	and	x0, x0, #0xff
   34658:	cmp	x0, #0x0
   3465c:	b.eq	34670 <rpl_regfree@@Base+0x6078>  // b.none
   34660:	ldr	x0, [sp, #24]
   34664:	mov	w1, #0x7                   	// #7
   34668:	str	w1, [x0]
   3466c:	b	34910 <rpl_regfree@@Base+0x6318>
   34670:	ldr	x0, [sp, #40]
   34674:	ldrb	w0, [x0, #8]
   34678:	cmp	w0, #0x15
   3467c:	b.ne	341a0 <rpl_regfree@@Base+0x5ba8>  // b.any
   34680:	ldr	x0, [sp, #56]
   34684:	ldr	x1, [x0, #72]
   34688:	ldrsw	x0, [sp, #292]
   3468c:	add	x1, x1, x0
   34690:	ldr	x0, [sp, #56]
   34694:	str	x1, [x0, #72]
   34698:	ldrb	w0, [sp, #311]
   3469c:	cmp	w0, #0x0
   346a0:	b.ne	346a8 <rpl_regfree@@Base+0x60b0>  // b.any
   346a4:	b	346b0 <rpl_regfree@@Base+0x60b8>
   346a8:	ldr	x0, [sp, #264]
   346ac:	bl	28914 <printf_parse@@Base+0x161c>
   346b0:	ldr	x0, [sp, #48]
   346b4:	ldr	w0, [x0, #180]
   346b8:	cmp	w0, #0x1
   346bc:	b.le	346d4 <rpl_regfree@@Base+0x60dc>
   346c0:	ldr	x0, [sp, #48]
   346c4:	ldr	x0, [x0, #120]
   346c8:	mov	x1, x0
   346cc:	ldr	x0, [sp, #264]
   346d0:	bl	289f4 <printf_parse@@Base+0x16fc>
   346d4:	ldr	x0, [sp, #256]
   346d8:	ldr	x0, [x0, #40]
   346dc:	cmp	x0, #0x0
   346e0:	b.ne	3474c <rpl_regfree@@Base+0x6154>  // b.any
   346e4:	ldr	x0, [sp, #256]
   346e8:	ldr	x0, [x0, #48]
   346ec:	cmp	x0, #0x0
   346f0:	b.ne	3474c <rpl_regfree@@Base+0x6154>  // b.any
   346f4:	ldr	x0, [sp, #256]
   346f8:	ldr	x0, [x0, #56]
   346fc:	cmp	x0, #0x0
   34700:	b.ne	3474c <rpl_regfree@@Base+0x6154>  // b.any
   34704:	ldr	x0, [sp, #256]
   34708:	ldr	x0, [x0, #64]
   3470c:	cmp	x0, #0x0
   34710:	b.ne	3474c <rpl_regfree@@Base+0x6154>  // b.any
   34714:	ldr	x0, [sp, #48]
   34718:	ldr	w0, [x0, #180]
   3471c:	cmp	w0, #0x1
   34720:	b.le	34888 <rpl_regfree@@Base+0x6290>
   34724:	ldr	x0, [sp, #256]
   34728:	ldr	x0, [x0, #72]
   3472c:	cmp	x0, #0x0
   34730:	b.ne	3474c <rpl_regfree@@Base+0x6154>  // b.any
   34734:	ldr	x0, [sp, #256]
   34738:	ldrb	w0, [x0, #32]
   3473c:	and	w0, w0, #0x1
   34740:	and	w0, w0, #0xff
   34744:	cmp	w0, #0x0
   34748:	b.eq	34888 <rpl_regfree@@Base+0x6290>  // b.none
   3474c:	ldr	x0, [sp, #48]
   34750:	ldrb	w1, [x0, #176]
   34754:	orr	w1, w1, #0x2
   34758:	strb	w1, [x0, #176]
   3475c:	mov	w0, #0x6                   	// #6
   34760:	strb	w0, [sp, #224]
   34764:	ldr	x0, [sp, #256]
   34768:	str	x0, [sp, #216]
   3476c:	add	x0, sp, #0xd8
   34770:	mov	x3, x0
   34774:	mov	x2, #0x0                   	// #0
   34778:	mov	x1, #0x0                   	// #0
   3477c:	ldr	x0, [sp, #48]
   34780:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   34784:	str	x0, [sp, #232]
   34788:	ldr	x0, [sp, #232]
   3478c:	cmp	x0, #0x0
   34790:	cset	w0, eq  // eq = none
   34794:	and	w0, w0, #0xff
   34798:	and	x0, x0, #0xff
   3479c:	cmp	x0, #0x0
   347a0:	b.ne	348f0 <rpl_regfree@@Base+0x62f8>  // b.any
   347a4:	str	wzr, [sp, #276]
   347a8:	b	347d4 <rpl_regfree@@Base+0x61dc>
   347ac:	ldrsw	x0, [sp, #276]
   347b0:	lsl	x0, x0, #3
   347b4:	ldr	x1, [sp, #264]
   347b8:	add	x0, x1, x0
   347bc:	ldr	x0, [x0]
   347c0:	cmp	x0, #0x0
   347c4:	b.ne	347e4 <rpl_regfree@@Base+0x61ec>  // b.any
   347c8:	ldr	w0, [sp, #276]
   347cc:	add	w0, w0, #0x1
   347d0:	str	w0, [sp, #276]
   347d4:	ldr	w0, [sp, #276]
   347d8:	cmp	w0, #0x3
   347dc:	b.le	347ac <rpl_regfree@@Base+0x61b4>
   347e0:	b	347e8 <rpl_regfree@@Base+0x61f0>
   347e4:	nop
   347e8:	ldr	w0, [sp, #276]
   347ec:	cmp	w0, #0x3
   347f0:	b.gt	34874 <rpl_regfree@@Base+0x627c>
   347f4:	mov	w0, #0x3                   	// #3
   347f8:	strb	w0, [sp, #224]
   347fc:	ldr	x0, [sp, #264]
   34800:	str	x0, [sp, #216]
   34804:	add	x0, sp, #0xd8
   34808:	mov	x3, x0
   3480c:	mov	x2, #0x0                   	// #0
   34810:	mov	x1, #0x0                   	// #0
   34814:	ldr	x0, [sp, #48]
   34818:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   3481c:	str	x0, [sp, #296]
   34820:	ldr	x0, [sp, #296]
   34824:	cmp	x0, #0x0
   34828:	cset	w0, eq  // eq = none
   3482c:	and	w0, w0, #0xff
   34830:	and	x0, x0, #0xff
   34834:	cmp	x0, #0x0
   34838:	b.ne	348f8 <rpl_regfree@@Base+0x6300>  // b.any
   3483c:	mov	w3, #0xa                   	// #10
   34840:	ldr	x2, [sp, #232]
   34844:	ldr	x1, [sp, #296]
   34848:	ldr	x0, [sp, #48]
   3484c:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   34850:	str	x0, [sp, #296]
   34854:	ldr	x0, [sp, #296]
   34858:	cmp	x0, #0x0
   3485c:	cset	w0, eq  // eq = none
   34860:	and	w0, w0, #0xff
   34864:	and	x0, x0, #0xff
   34868:	cmp	x0, #0x0
   3486c:	b.eq	348dc <rpl_regfree@@Base+0x62e4>  // b.none
   34870:	b	34904 <rpl_regfree@@Base+0x630c>
   34874:	ldr	x0, [sp, #264]
   34878:	bl	b130 <free@plt>
   3487c:	ldr	x0, [sp, #232]
   34880:	str	x0, [sp, #296]
   34884:	b	348dc <rpl_regfree@@Base+0x62e4>
   34888:	ldr	x0, [sp, #256]
   3488c:	bl	35d50 <rpl_regfree@@Base+0x7758>
   34890:	mov	w0, #0x3                   	// #3
   34894:	strb	w0, [sp, #224]
   34898:	ldr	x0, [sp, #264]
   3489c:	str	x0, [sp, #216]
   348a0:	add	x0, sp, #0xd8
   348a4:	mov	x3, x0
   348a8:	mov	x2, #0x0                   	// #0
   348ac:	mov	x1, #0x0                   	// #0
   348b0:	ldr	x0, [sp, #48]
   348b4:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   348b8:	str	x0, [sp, #296]
   348bc:	ldr	x0, [sp, #296]
   348c0:	cmp	x0, #0x0
   348c4:	cset	w0, eq  // eq = none
   348c8:	and	w0, w0, #0xff
   348cc:	and	x0, x0, #0xff
   348d0:	cmp	x0, #0x0
   348d4:	b.ne	34900 <rpl_regfree@@Base+0x6308>  // b.any
   348d8:	b	348e0 <rpl_regfree@@Base+0x62e8>
   348dc:	nop
   348e0:	ldr	x0, [sp, #296]
   348e4:	b	34924 <rpl_regfree@@Base+0x632c>
   348e8:	nop
   348ec:	b	34904 <rpl_regfree@@Base+0x630c>
   348f0:	nop
   348f4:	b	34904 <rpl_regfree@@Base+0x630c>
   348f8:	nop
   348fc:	b	34904 <rpl_regfree@@Base+0x630c>
   34900:	nop
   34904:	ldr	x0, [sp, #24]
   34908:	mov	w1, #0xc                   	// #12
   3490c:	str	w1, [x0]
   34910:	ldr	x0, [sp, #264]
   34914:	bl	b130 <free@plt>
   34918:	ldr	x0, [sp, #256]
   3491c:	bl	35d50 <rpl_regfree@@Base+0x7758>
   34920:	mov	x0, #0x0                   	// #0
   34924:	ldp	x29, x30, [sp], #320
   34928:	ret
   3492c:	stp	x29, x30, [sp, #-96]!
   34930:	mov	x29, sp
   34934:	str	x0, [sp, #56]
   34938:	str	x1, [sp, #48]
   3493c:	str	x2, [sp, #40]
   34940:	str	w3, [sp, #36]
   34944:	str	x4, [sp, #24]
   34948:	str	x5, [sp, #16]
   3494c:	strb	w6, [sp, #35]
   34950:	ldr	x0, [sp, #48]
   34954:	ldr	x0, [x0, #72]
   34958:	mov	x1, x0
   3495c:	ldr	x0, [sp, #48]
   34960:	bl	28a70 <printf_parse@@Base+0x1778>
   34964:	str	w0, [sp, #92]
   34968:	ldr	w0, [sp, #92]
   3496c:	cmp	w0, #0x1
   34970:	b.le	349c0 <rpl_regfree@@Base+0x63c8>
   34974:	ldr	x0, [sp, #56]
   34978:	mov	w1, #0x1                   	// #1
   3497c:	str	w1, [x0]
   34980:	ldr	x0, [sp, #48]
   34984:	ldr	x0, [x0, #72]
   34988:	mov	x1, x0
   3498c:	ldr	x0, [sp, #48]
   34990:	bl	28b04 <printf_parse@@Base+0x180c>
   34994:	mov	w1, w0
   34998:	ldr	x0, [sp, #56]
   3499c:	str	w1, [x0, #8]
   349a0:	ldr	x0, [sp, #48]
   349a4:	ldr	x1, [x0, #72]
   349a8:	ldrsw	x0, [sp, #92]
   349ac:	add	x1, x1, x0
   349b0:	ldr	x0, [sp, #48]
   349b4:	str	x1, [x0, #72]
   349b8:	mov	w0, #0x0                   	// #0
   349bc:	b	34a90 <rpl_regfree@@Base+0x6498>
   349c0:	ldr	x0, [sp, #48]
   349c4:	ldr	x1, [x0, #72]
   349c8:	ldrsw	x0, [sp, #36]
   349cc:	add	x1, x1, x0
   349d0:	ldr	x0, [sp, #48]
   349d4:	str	x1, [x0, #72]
   349d8:	ldr	x0, [sp, #40]
   349dc:	ldrb	w0, [x0, #8]
   349e0:	cmp	w0, #0x1a
   349e4:	b.eq	34a08 <rpl_regfree@@Base+0x6410>  // b.none
   349e8:	ldr	x0, [sp, #40]
   349ec:	ldrb	w0, [x0, #8]
   349f0:	cmp	w0, #0x1e
   349f4:	b.eq	34a08 <rpl_regfree@@Base+0x6410>  // b.none
   349f8:	ldr	x0, [sp, #40]
   349fc:	ldrb	w0, [x0, #8]
   34a00:	cmp	w0, #0x1c
   34a04:	b.ne	34a1c <rpl_regfree@@Base+0x6424>  // b.any
   34a08:	ldr	x2, [sp, #40]
   34a0c:	ldr	x1, [sp, #48]
   34a10:	ldr	x0, [sp, #56]
   34a14:	bl	34a98 <rpl_regfree@@Base+0x64a0>
   34a18:	b	34a90 <rpl_regfree@@Base+0x6498>
   34a1c:	ldr	x0, [sp, #40]
   34a20:	ldrb	w0, [x0, #8]
   34a24:	cmp	w0, #0x16
   34a28:	cset	w0, eq  // eq = none
   34a2c:	and	w0, w0, #0xff
   34a30:	and	x0, x0, #0xff
   34a34:	cmp	x0, #0x0
   34a38:	b.eq	34a74 <rpl_regfree@@Base+0x647c>  // b.none
   34a3c:	ldrb	w0, [sp, #35]
   34a40:	eor	w0, w0, #0x1
   34a44:	and	w0, w0, #0xff
   34a48:	cmp	w0, #0x0
   34a4c:	b.eq	34a74 <rpl_regfree@@Base+0x647c>  // b.none
   34a50:	add	x0, sp, #0x48
   34a54:	ldr	x2, [sp, #16]
   34a58:	ldr	x1, [sp, #48]
   34a5c:	bl	320a8 <rpl_regfree@@Base+0x3ab0>
   34a60:	ldrb	w0, [sp, #80]
   34a64:	cmp	w0, #0x15
   34a68:	b.eq	34a74 <rpl_regfree@@Base+0x647c>  // b.none
   34a6c:	mov	w0, #0xb                   	// #11
   34a70:	b	34a90 <rpl_regfree@@Base+0x6498>
   34a74:	ldr	x0, [sp, #56]
   34a78:	str	wzr, [x0]
   34a7c:	ldr	x0, [sp, #40]
   34a80:	ldrb	w1, [x0]
   34a84:	ldr	x0, [sp, #56]
   34a88:	strb	w1, [x0, #8]
   34a8c:	mov	w0, #0x0                   	// #0
   34a90:	ldp	x29, x30, [sp], #96
   34a94:	ret
   34a98:	stp	x29, x30, [sp, #-64]!
   34a9c:	mov	x29, sp
   34aa0:	str	x0, [sp, #40]
   34aa4:	str	x1, [sp, #32]
   34aa8:	str	x2, [sp, #24]
   34aac:	ldr	x0, [sp, #24]
   34ab0:	ldrb	w0, [x0]
   34ab4:	strb	w0, [sp, #55]
   34ab8:	str	wzr, [sp, #56]
   34abc:	ldr	x0, [sp, #32]
   34ac0:	ldr	x1, [x0, #104]
   34ac4:	ldr	x0, [sp, #32]
   34ac8:	ldr	x0, [x0, #72]
   34acc:	cmp	x1, x0
   34ad0:	b.gt	34adc <rpl_regfree@@Base+0x64e4>
   34ad4:	mov	w0, #0x7                   	// #7
   34ad8:	b	34c40 <rpl_regfree@@Base+0x6648>
   34adc:	ldr	w0, [sp, #56]
   34ae0:	cmp	w0, #0x1f
   34ae4:	b.le	34af0 <rpl_regfree@@Base+0x64f8>
   34ae8:	mov	w0, #0x7                   	// #7
   34aec:	b	34c40 <rpl_regfree@@Base+0x6648>
   34af0:	ldr	x0, [sp, #24]
   34af4:	ldrb	w0, [x0, #8]
   34af8:	cmp	w0, #0x1e
   34afc:	b.ne	34b10 <rpl_regfree@@Base+0x6518>  // b.any
   34b00:	ldr	x0, [sp, #32]
   34b04:	bl	2b0d4 <printf_parse@@Base+0x3ddc>
   34b08:	strb	w0, [sp, #63]
   34b0c:	b	34b38 <rpl_regfree@@Base+0x6540>
   34b10:	ldr	x0, [sp, #32]
   34b14:	ldr	x1, [x0, #8]
   34b18:	ldr	x0, [sp, #32]
   34b1c:	ldr	x0, [x0, #72]
   34b20:	add	x3, x0, #0x1
   34b24:	ldr	x2, [sp, #32]
   34b28:	str	x3, [x2, #72]
   34b2c:	add	x0, x1, x0
   34b30:	ldrb	w0, [x0]
   34b34:	strb	w0, [sp, #63]
   34b38:	ldr	x0, [sp, #32]
   34b3c:	ldr	x1, [x0, #104]
   34b40:	ldr	x0, [sp, #32]
   34b44:	ldr	x0, [x0, #72]
   34b48:	cmp	x1, x0
   34b4c:	b.gt	34b58 <rpl_regfree@@Base+0x6560>
   34b50:	mov	w0, #0x7                   	// #7
   34b54:	b	34c40 <rpl_regfree@@Base+0x6648>
   34b58:	ldrb	w1, [sp, #63]
   34b5c:	ldrb	w0, [sp, #55]
   34b60:	cmp	w1, w0
   34b64:	b.ne	34b88 <rpl_regfree@@Base+0x6590>  // b.any
   34b68:	ldr	x0, [sp, #32]
   34b6c:	ldr	x0, [x0, #8]
   34b70:	ldr	x1, [sp, #32]
   34b74:	ldr	x1, [x1, #72]
   34b78:	add	x0, x0, x1
   34b7c:	ldrb	w0, [x0]
   34b80:	cmp	w0, #0x5d
   34b84:	b.eq	34bb0 <rpl_regfree@@Base+0x65b8>  // b.none
   34b88:	ldr	x0, [sp, #40]
   34b8c:	ldr	x1, [x0, #8]
   34b90:	ldrsw	x0, [sp, #56]
   34b94:	add	x0, x1, x0
   34b98:	ldrb	w1, [sp, #63]
   34b9c:	strb	w1, [x0]
   34ba0:	ldr	w0, [sp, #56]
   34ba4:	add	w0, w0, #0x1
   34ba8:	str	w0, [sp, #56]
   34bac:	b	34adc <rpl_regfree@@Base+0x64e4>
   34bb0:	nop
   34bb4:	ldr	x0, [sp, #32]
   34bb8:	ldr	x0, [x0, #72]
   34bbc:	add	x1, x0, #0x1
   34bc0:	ldr	x0, [sp, #32]
   34bc4:	str	x1, [x0, #72]
   34bc8:	ldr	x0, [sp, #40]
   34bcc:	ldr	x1, [x0, #8]
   34bd0:	ldrsw	x0, [sp, #56]
   34bd4:	add	x0, x1, x0
   34bd8:	strb	wzr, [x0]
   34bdc:	ldr	x0, [sp, #24]
   34be0:	ldrb	w0, [x0, #8]
   34be4:	cmp	w0, #0x1e
   34be8:	b.eq	34c28 <rpl_regfree@@Base+0x6630>  // b.none
   34bec:	cmp	w0, #0x1e
   34bf0:	b.gt	34c38 <rpl_regfree@@Base+0x6640>
   34bf4:	cmp	w0, #0x1a
   34bf8:	b.eq	34c08 <rpl_regfree@@Base+0x6610>  // b.none
   34bfc:	cmp	w0, #0x1c
   34c00:	b.eq	34c18 <rpl_regfree@@Base+0x6620>  // b.none
   34c04:	b	34c38 <rpl_regfree@@Base+0x6640>
   34c08:	ldr	x0, [sp, #40]
   34c0c:	mov	w1, #0x3                   	// #3
   34c10:	str	w1, [x0]
   34c14:	b	34c3c <rpl_regfree@@Base+0x6644>
   34c18:	ldr	x0, [sp, #40]
   34c1c:	mov	w1, #0x2                   	// #2
   34c20:	str	w1, [x0]
   34c24:	b	34c3c <rpl_regfree@@Base+0x6644>
   34c28:	ldr	x0, [sp, #40]
   34c2c:	mov	w1, #0x4                   	// #4
   34c30:	str	w1, [x0]
   34c34:	b	34c3c <rpl_regfree@@Base+0x6644>
   34c38:	nop
   34c3c:	mov	w0, #0x0                   	// #0
   34c40:	ldp	x29, x30, [sp], #64
   34c44:	ret
   34c48:	stp	x29, x30, [sp, #-48]!
   34c4c:	mov	x29, sp
   34c50:	str	x0, [sp, #40]
   34c54:	str	x1, [sp, #32]
   34c58:	str	x2, [sp, #24]
   34c5c:	str	x3, [sp, #16]
   34c60:	ldr	x0, [sp, #16]
   34c64:	bl	a820 <strlen@plt>
   34c68:	cmp	x0, #0x1
   34c6c:	cset	w0, ne  // ne = any
   34c70:	and	w0, w0, #0xff
   34c74:	and	x0, x0, #0xff
   34c78:	cmp	x0, #0x0
   34c7c:	b.eq	34c88 <rpl_regfree@@Base+0x6690>  // b.none
   34c80:	mov	w0, #0x3                   	// #3
   34c84:	b	34ca4 <rpl_regfree@@Base+0x66ac>
   34c88:	ldr	x0, [sp, #16]
   34c8c:	ldrb	w0, [x0]
   34c90:	and	x0, x0, #0xff
   34c94:	mov	x1, x0
   34c98:	ldr	x0, [sp, #40]
   34c9c:	bl	2873c <printf_parse@@Base+0x1444>
   34ca0:	mov	w0, #0x0                   	// #0
   34ca4:	ldp	x29, x30, [sp], #48
   34ca8:	ret
   34cac:	stp	x29, x30, [sp, #-112]!
   34cb0:	mov	x29, sp
   34cb4:	str	x19, [sp, #16]
   34cb8:	str	x0, [sp, #72]
   34cbc:	str	x1, [sp, #64]
   34cc0:	str	x2, [sp, #56]
   34cc4:	str	x3, [sp, #48]
   34cc8:	str	x4, [sp, #40]
   34ccc:	str	x5, [sp, #32]
   34cd0:	ldr	x0, [sp, #40]
   34cd4:	str	x0, [sp, #96]
   34cd8:	ldr	x0, [sp, #32]
   34cdc:	and	x0, x0, #0x400000
   34ce0:	cmp	x0, #0x0
   34ce4:	b.eq	34d24 <rpl_regfree@@Base+0x672c>  // b.none
   34ce8:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   34cec:	add	x1, x0, #0x6d0
   34cf0:	ldr	x0, [sp, #96]
   34cf4:	bl	b070 <strcmp@plt>
   34cf8:	cmp	w0, #0x0
   34cfc:	b.eq	34d18 <rpl_regfree@@Base+0x6720>  // b.none
   34d00:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   34d04:	add	x1, x0, #0x6d8
   34d08:	ldr	x0, [sp, #96]
   34d0c:	bl	b070 <strcmp@plt>
   34d10:	cmp	w0, #0x0
   34d14:	b.ne	34d24 <rpl_regfree@@Base+0x672c>  // b.any
   34d18:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   34d1c:	add	x0, x0, #0x6e0
   34d20:	str	x0, [sp, #96]
   34d24:	ldr	x0, [sp, #48]
   34d28:	ldr	x1, [x0]
   34d2c:	ldr	x0, [sp, #56]
   34d30:	ldr	x0, [x0, #72]
   34d34:	cmp	x1, x0
   34d38:	cset	w0, eq  // eq = none
   34d3c:	and	w0, w0, #0xff
   34d40:	and	x0, x0, #0xff
   34d44:	cmp	x0, #0x0
   34d48:	b.eq	34dbc <rpl_regfree@@Base+0x67c4>  // b.none
   34d4c:	ldr	x0, [sp, #56]
   34d50:	ldr	x0, [x0, #72]
   34d54:	lsl	x0, x0, #1
   34d58:	add	x0, x0, #0x1
   34d5c:	str	x0, [sp, #88]
   34d60:	ldr	x0, [sp, #56]
   34d64:	ldr	x2, [x0, #24]
   34d68:	ldr	x0, [sp, #88]
   34d6c:	lsl	x0, x0, #3
   34d70:	mov	x1, x0
   34d74:	mov	x0, x2
   34d78:	bl	ae00 <realloc@plt>
   34d7c:	str	x0, [sp, #80]
   34d80:	ldr	x0, [sp, #80]
   34d84:	cmp	x0, #0x0
   34d88:	cset	w0, eq  // eq = none
   34d8c:	and	w0, w0, #0xff
   34d90:	and	x0, x0, #0xff
   34d94:	cmp	x0, #0x0
   34d98:	b.eq	34da4 <rpl_regfree@@Base+0x67ac>  // b.none
   34d9c:	mov	w0, #0xc                   	// #12
   34da0:	b	35968 <rpl_regfree@@Base+0x7370>
   34da4:	ldr	x0, [sp, #56]
   34da8:	ldr	x1, [sp, #80]
   34dac:	str	x1, [x0, #24]
   34db0:	ldr	x0, [sp, #48]
   34db4:	ldr	x1, [sp, #88]
   34db8:	str	x1, [x0]
   34dbc:	ldr	x0, [sp, #56]
   34dc0:	ldr	x1, [x0, #24]
   34dc4:	ldr	x0, [sp, #56]
   34dc8:	ldr	x0, [x0, #72]
   34dcc:	add	x3, x0, #0x1
   34dd0:	ldr	x2, [sp, #56]
   34dd4:	str	x3, [x2, #72]
   34dd8:	lsl	x0, x0, #3
   34ddc:	add	x19, x1, x0
   34de0:	ldr	x0, [sp, #96]
   34de4:	bl	a8b0 <wctype@plt>
   34de8:	str	x0, [x19]
   34dec:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   34df0:	add	x1, x0, #0x6b0
   34df4:	ldr	x0, [sp, #96]
   34df8:	bl	b070 <strcmp@plt>
   34dfc:	cmp	w0, #0x0
   34e00:	b.ne	34ee0 <rpl_regfree@@Base+0x68e8>  // b.any
   34e04:	ldr	x0, [sp, #72]
   34e08:	cmp	x0, #0x0
   34e0c:	cset	w0, ne  // ne = any
   34e10:	and	w0, w0, #0xff
   34e14:	and	x0, x0, #0xff
   34e18:	cmp	x0, #0x0
   34e1c:	b.eq	34e88 <rpl_regfree@@Base+0x6890>  // b.none
   34e20:	str	wzr, [sp, #108]
   34e24:	b	34e78 <rpl_regfree@@Base+0x6880>
   34e28:	bl	b090 <__ctype_b_loc@plt>
   34e2c:	ldr	x1, [x0]
   34e30:	ldrsw	x0, [sp, #108]
   34e34:	lsl	x0, x0, #1
   34e38:	add	x0, x1, x0
   34e3c:	ldrh	w0, [x0]
   34e40:	and	w0, w0, #0x8
   34e44:	cmp	w0, #0x0
   34e48:	b.eq	34e6c <rpl_regfree@@Base+0x6874>  // b.none
   34e4c:	ldrsw	x0, [sp, #108]
   34e50:	ldr	x1, [sp, #72]
   34e54:	add	x0, x1, x0
   34e58:	ldrb	w0, [x0]
   34e5c:	and	x0, x0, #0xff
   34e60:	mov	x1, x0
   34e64:	ldr	x0, [sp, #64]
   34e68:	bl	2873c <printf_parse@@Base+0x1444>
   34e6c:	ldr	w0, [sp, #108]
   34e70:	add	w0, w0, #0x1
   34e74:	str	w0, [sp, #108]
   34e78:	ldr	w0, [sp, #108]
   34e7c:	cmp	w0, #0xff
   34e80:	b.le	34e28 <rpl_regfree@@Base+0x6830>
   34e84:	b	35964 <rpl_regfree@@Base+0x736c>
   34e88:	str	wzr, [sp, #108]
   34e8c:	b	34ed0 <rpl_regfree@@Base+0x68d8>
   34e90:	bl	b090 <__ctype_b_loc@plt>
   34e94:	ldr	x1, [x0]
   34e98:	ldrsw	x0, [sp, #108]
   34e9c:	lsl	x0, x0, #1
   34ea0:	add	x0, x1, x0
   34ea4:	ldrh	w0, [x0]
   34ea8:	and	w0, w0, #0x8
   34eac:	cmp	w0, #0x0
   34eb0:	b.eq	34ec4 <rpl_regfree@@Base+0x68cc>  // b.none
   34eb4:	ldrsw	x0, [sp, #108]
   34eb8:	mov	x1, x0
   34ebc:	ldr	x0, [sp, #64]
   34ec0:	bl	2873c <printf_parse@@Base+0x1444>
   34ec4:	ldr	w0, [sp, #108]
   34ec8:	add	w0, w0, #0x1
   34ecc:	str	w0, [sp, #108]
   34ed0:	ldr	w0, [sp, #108]
   34ed4:	cmp	w0, #0xff
   34ed8:	b.le	34e90 <rpl_regfree@@Base+0x6898>
   34edc:	b	35964 <rpl_regfree@@Base+0x736c>
   34ee0:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   34ee4:	add	x1, x0, #0x6e8
   34ee8:	ldr	x0, [sp, #96]
   34eec:	bl	b070 <strcmp@plt>
   34ef0:	cmp	w0, #0x0
   34ef4:	b.ne	34fd4 <rpl_regfree@@Base+0x69dc>  // b.any
   34ef8:	ldr	x0, [sp, #72]
   34efc:	cmp	x0, #0x0
   34f00:	cset	w0, ne  // ne = any
   34f04:	and	w0, w0, #0xff
   34f08:	and	x0, x0, #0xff
   34f0c:	cmp	x0, #0x0
   34f10:	b.eq	34f7c <rpl_regfree@@Base+0x6984>  // b.none
   34f14:	str	wzr, [sp, #108]
   34f18:	b	34f6c <rpl_regfree@@Base+0x6974>
   34f1c:	bl	b090 <__ctype_b_loc@plt>
   34f20:	ldr	x1, [x0]
   34f24:	ldrsw	x0, [sp, #108]
   34f28:	lsl	x0, x0, #1
   34f2c:	add	x0, x1, x0
   34f30:	ldrh	w0, [x0]
   34f34:	and	w0, w0, #0x2
   34f38:	cmp	w0, #0x0
   34f3c:	b.eq	34f60 <rpl_regfree@@Base+0x6968>  // b.none
   34f40:	ldrsw	x0, [sp, #108]
   34f44:	ldr	x1, [sp, #72]
   34f48:	add	x0, x1, x0
   34f4c:	ldrb	w0, [x0]
   34f50:	and	x0, x0, #0xff
   34f54:	mov	x1, x0
   34f58:	ldr	x0, [sp, #64]
   34f5c:	bl	2873c <printf_parse@@Base+0x1444>
   34f60:	ldr	w0, [sp, #108]
   34f64:	add	w0, w0, #0x1
   34f68:	str	w0, [sp, #108]
   34f6c:	ldr	w0, [sp, #108]
   34f70:	cmp	w0, #0xff
   34f74:	b.le	34f1c <rpl_regfree@@Base+0x6924>
   34f78:	b	35964 <rpl_regfree@@Base+0x736c>
   34f7c:	str	wzr, [sp, #108]
   34f80:	b	34fc4 <rpl_regfree@@Base+0x69cc>
   34f84:	bl	b090 <__ctype_b_loc@plt>
   34f88:	ldr	x1, [x0]
   34f8c:	ldrsw	x0, [sp, #108]
   34f90:	lsl	x0, x0, #1
   34f94:	add	x0, x1, x0
   34f98:	ldrh	w0, [x0]
   34f9c:	and	w0, w0, #0x2
   34fa0:	cmp	w0, #0x0
   34fa4:	b.eq	34fb8 <rpl_regfree@@Base+0x69c0>  // b.none
   34fa8:	ldrsw	x0, [sp, #108]
   34fac:	mov	x1, x0
   34fb0:	ldr	x0, [sp, #64]
   34fb4:	bl	2873c <printf_parse@@Base+0x1444>
   34fb8:	ldr	w0, [sp, #108]
   34fbc:	add	w0, w0, #0x1
   34fc0:	str	w0, [sp, #108]
   34fc4:	ldr	w0, [sp, #108]
   34fc8:	cmp	w0, #0xff
   34fcc:	b.le	34f84 <rpl_regfree@@Base+0x698c>
   34fd0:	b	35964 <rpl_regfree@@Base+0x736c>
   34fd4:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   34fd8:	add	x1, x0, #0x6d8
   34fdc:	ldr	x0, [sp, #96]
   34fe0:	bl	b070 <strcmp@plt>
   34fe4:	cmp	w0, #0x0
   34fe8:	b.ne	350c8 <rpl_regfree@@Base+0x6ad0>  // b.any
   34fec:	ldr	x0, [sp, #72]
   34ff0:	cmp	x0, #0x0
   34ff4:	cset	w0, ne  // ne = any
   34ff8:	and	w0, w0, #0xff
   34ffc:	and	x0, x0, #0xff
   35000:	cmp	x0, #0x0
   35004:	b.eq	35070 <rpl_regfree@@Base+0x6a78>  // b.none
   35008:	str	wzr, [sp, #108]
   3500c:	b	35060 <rpl_regfree@@Base+0x6a68>
   35010:	bl	b090 <__ctype_b_loc@plt>
   35014:	ldr	x1, [x0]
   35018:	ldrsw	x0, [sp, #108]
   3501c:	lsl	x0, x0, #1
   35020:	add	x0, x1, x0
   35024:	ldrh	w0, [x0]
   35028:	and	w0, w0, #0x200
   3502c:	cmp	w0, #0x0
   35030:	b.eq	35054 <rpl_regfree@@Base+0x6a5c>  // b.none
   35034:	ldrsw	x0, [sp, #108]
   35038:	ldr	x1, [sp, #72]
   3503c:	add	x0, x1, x0
   35040:	ldrb	w0, [x0]
   35044:	and	x0, x0, #0xff
   35048:	mov	x1, x0
   3504c:	ldr	x0, [sp, #64]
   35050:	bl	2873c <printf_parse@@Base+0x1444>
   35054:	ldr	w0, [sp, #108]
   35058:	add	w0, w0, #0x1
   3505c:	str	w0, [sp, #108]
   35060:	ldr	w0, [sp, #108]
   35064:	cmp	w0, #0xff
   35068:	b.le	35010 <rpl_regfree@@Base+0x6a18>
   3506c:	b	35964 <rpl_regfree@@Base+0x736c>
   35070:	str	wzr, [sp, #108]
   35074:	b	350b8 <rpl_regfree@@Base+0x6ac0>
   35078:	bl	b090 <__ctype_b_loc@plt>
   3507c:	ldr	x1, [x0]
   35080:	ldrsw	x0, [sp, #108]
   35084:	lsl	x0, x0, #1
   35088:	add	x0, x1, x0
   3508c:	ldrh	w0, [x0]
   35090:	and	w0, w0, #0x200
   35094:	cmp	w0, #0x0
   35098:	b.eq	350ac <rpl_regfree@@Base+0x6ab4>  // b.none
   3509c:	ldrsw	x0, [sp, #108]
   350a0:	mov	x1, x0
   350a4:	ldr	x0, [sp, #64]
   350a8:	bl	2873c <printf_parse@@Base+0x1444>
   350ac:	ldr	w0, [sp, #108]
   350b0:	add	w0, w0, #0x1
   350b4:	str	w0, [sp, #108]
   350b8:	ldr	w0, [sp, #108]
   350bc:	cmp	w0, #0xff
   350c0:	b.le	35078 <rpl_regfree@@Base+0x6a80>
   350c4:	b	35964 <rpl_regfree@@Base+0x736c>
   350c8:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   350cc:	add	x1, x0, #0x6c0
   350d0:	ldr	x0, [sp, #96]
   350d4:	bl	b070 <strcmp@plt>
   350d8:	cmp	w0, #0x0
   350dc:	b.ne	351bc <rpl_regfree@@Base+0x6bc4>  // b.any
   350e0:	ldr	x0, [sp, #72]
   350e4:	cmp	x0, #0x0
   350e8:	cset	w0, ne  // ne = any
   350ec:	and	w0, w0, #0xff
   350f0:	and	x0, x0, #0xff
   350f4:	cmp	x0, #0x0
   350f8:	b.eq	35164 <rpl_regfree@@Base+0x6b6c>  // b.none
   350fc:	str	wzr, [sp, #108]
   35100:	b	35154 <rpl_regfree@@Base+0x6b5c>
   35104:	bl	b090 <__ctype_b_loc@plt>
   35108:	ldr	x1, [x0]
   3510c:	ldrsw	x0, [sp, #108]
   35110:	lsl	x0, x0, #1
   35114:	add	x0, x1, x0
   35118:	ldrh	w0, [x0]
   3511c:	and	w0, w0, #0x2000
   35120:	cmp	w0, #0x0
   35124:	b.eq	35148 <rpl_regfree@@Base+0x6b50>  // b.none
   35128:	ldrsw	x0, [sp, #108]
   3512c:	ldr	x1, [sp, #72]
   35130:	add	x0, x1, x0
   35134:	ldrb	w0, [x0]
   35138:	and	x0, x0, #0xff
   3513c:	mov	x1, x0
   35140:	ldr	x0, [sp, #64]
   35144:	bl	2873c <printf_parse@@Base+0x1444>
   35148:	ldr	w0, [sp, #108]
   3514c:	add	w0, w0, #0x1
   35150:	str	w0, [sp, #108]
   35154:	ldr	w0, [sp, #108]
   35158:	cmp	w0, #0xff
   3515c:	b.le	35104 <rpl_regfree@@Base+0x6b0c>
   35160:	b	35964 <rpl_regfree@@Base+0x736c>
   35164:	str	wzr, [sp, #108]
   35168:	b	351ac <rpl_regfree@@Base+0x6bb4>
   3516c:	bl	b090 <__ctype_b_loc@plt>
   35170:	ldr	x1, [x0]
   35174:	ldrsw	x0, [sp, #108]
   35178:	lsl	x0, x0, #1
   3517c:	add	x0, x1, x0
   35180:	ldrh	w0, [x0]
   35184:	and	w0, w0, #0x2000
   35188:	cmp	w0, #0x0
   3518c:	b.eq	351a0 <rpl_regfree@@Base+0x6ba8>  // b.none
   35190:	ldrsw	x0, [sp, #108]
   35194:	mov	x1, x0
   35198:	ldr	x0, [sp, #64]
   3519c:	bl	2873c <printf_parse@@Base+0x1444>
   351a0:	ldr	w0, [sp, #108]
   351a4:	add	w0, w0, #0x1
   351a8:	str	w0, [sp, #108]
   351ac:	ldr	w0, [sp, #108]
   351b0:	cmp	w0, #0xff
   351b4:	b.le	3516c <rpl_regfree@@Base+0x6b74>
   351b8:	b	35964 <rpl_regfree@@Base+0x736c>
   351bc:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   351c0:	add	x1, x0, #0x6e0
   351c4:	ldr	x0, [sp, #96]
   351c8:	bl	b070 <strcmp@plt>
   351cc:	cmp	w0, #0x0
   351d0:	b.ne	352b0 <rpl_regfree@@Base+0x6cb8>  // b.any
   351d4:	ldr	x0, [sp, #72]
   351d8:	cmp	x0, #0x0
   351dc:	cset	w0, ne  // ne = any
   351e0:	and	w0, w0, #0xff
   351e4:	and	x0, x0, #0xff
   351e8:	cmp	x0, #0x0
   351ec:	b.eq	35258 <rpl_regfree@@Base+0x6c60>  // b.none
   351f0:	str	wzr, [sp, #108]
   351f4:	b	35248 <rpl_regfree@@Base+0x6c50>
   351f8:	bl	b090 <__ctype_b_loc@plt>
   351fc:	ldr	x1, [x0]
   35200:	ldrsw	x0, [sp, #108]
   35204:	lsl	x0, x0, #1
   35208:	add	x0, x1, x0
   3520c:	ldrh	w0, [x0]
   35210:	and	w0, w0, #0x400
   35214:	cmp	w0, #0x0
   35218:	b.eq	3523c <rpl_regfree@@Base+0x6c44>  // b.none
   3521c:	ldrsw	x0, [sp, #108]
   35220:	ldr	x1, [sp, #72]
   35224:	add	x0, x1, x0
   35228:	ldrb	w0, [x0]
   3522c:	and	x0, x0, #0xff
   35230:	mov	x1, x0
   35234:	ldr	x0, [sp, #64]
   35238:	bl	2873c <printf_parse@@Base+0x1444>
   3523c:	ldr	w0, [sp, #108]
   35240:	add	w0, w0, #0x1
   35244:	str	w0, [sp, #108]
   35248:	ldr	w0, [sp, #108]
   3524c:	cmp	w0, #0xff
   35250:	b.le	351f8 <rpl_regfree@@Base+0x6c00>
   35254:	b	35964 <rpl_regfree@@Base+0x736c>
   35258:	str	wzr, [sp, #108]
   3525c:	b	352a0 <rpl_regfree@@Base+0x6ca8>
   35260:	bl	b090 <__ctype_b_loc@plt>
   35264:	ldr	x1, [x0]
   35268:	ldrsw	x0, [sp, #108]
   3526c:	lsl	x0, x0, #1
   35270:	add	x0, x1, x0
   35274:	ldrh	w0, [x0]
   35278:	and	w0, w0, #0x400
   3527c:	cmp	w0, #0x0
   35280:	b.eq	35294 <rpl_regfree@@Base+0x6c9c>  // b.none
   35284:	ldrsw	x0, [sp, #108]
   35288:	mov	x1, x0
   3528c:	ldr	x0, [sp, #64]
   35290:	bl	2873c <printf_parse@@Base+0x1444>
   35294:	ldr	w0, [sp, #108]
   35298:	add	w0, w0, #0x1
   3529c:	str	w0, [sp, #108]
   352a0:	ldr	w0, [sp, #108]
   352a4:	cmp	w0, #0xff
   352a8:	b.le	35260 <rpl_regfree@@Base+0x6c68>
   352ac:	b	35964 <rpl_regfree@@Base+0x736c>
   352b0:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   352b4:	add	x1, x0, #0x6f0
   352b8:	ldr	x0, [sp, #96]
   352bc:	bl	b070 <strcmp@plt>
   352c0:	cmp	w0, #0x0
   352c4:	b.ne	353a4 <rpl_regfree@@Base+0x6dac>  // b.any
   352c8:	ldr	x0, [sp, #72]
   352cc:	cmp	x0, #0x0
   352d0:	cset	w0, ne  // ne = any
   352d4:	and	w0, w0, #0xff
   352d8:	and	x0, x0, #0xff
   352dc:	cmp	x0, #0x0
   352e0:	b.eq	3534c <rpl_regfree@@Base+0x6d54>  // b.none
   352e4:	str	wzr, [sp, #108]
   352e8:	b	3533c <rpl_regfree@@Base+0x6d44>
   352ec:	bl	b090 <__ctype_b_loc@plt>
   352f0:	ldr	x1, [x0]
   352f4:	ldrsw	x0, [sp, #108]
   352f8:	lsl	x0, x0, #1
   352fc:	add	x0, x1, x0
   35300:	ldrh	w0, [x0]
   35304:	and	w0, w0, #0x800
   35308:	cmp	w0, #0x0
   3530c:	b.eq	35330 <rpl_regfree@@Base+0x6d38>  // b.none
   35310:	ldrsw	x0, [sp, #108]
   35314:	ldr	x1, [sp, #72]
   35318:	add	x0, x1, x0
   3531c:	ldrb	w0, [x0]
   35320:	and	x0, x0, #0xff
   35324:	mov	x1, x0
   35328:	ldr	x0, [sp, #64]
   3532c:	bl	2873c <printf_parse@@Base+0x1444>
   35330:	ldr	w0, [sp, #108]
   35334:	add	w0, w0, #0x1
   35338:	str	w0, [sp, #108]
   3533c:	ldr	w0, [sp, #108]
   35340:	cmp	w0, #0xff
   35344:	b.le	352ec <rpl_regfree@@Base+0x6cf4>
   35348:	b	35964 <rpl_regfree@@Base+0x736c>
   3534c:	str	wzr, [sp, #108]
   35350:	b	35394 <rpl_regfree@@Base+0x6d9c>
   35354:	bl	b090 <__ctype_b_loc@plt>
   35358:	ldr	x1, [x0]
   3535c:	ldrsw	x0, [sp, #108]
   35360:	lsl	x0, x0, #1
   35364:	add	x0, x1, x0
   35368:	ldrh	w0, [x0]
   3536c:	and	w0, w0, #0x800
   35370:	cmp	w0, #0x0
   35374:	b.eq	35388 <rpl_regfree@@Base+0x6d90>  // b.none
   35378:	ldrsw	x0, [sp, #108]
   3537c:	mov	x1, x0
   35380:	ldr	x0, [sp, #64]
   35384:	bl	2873c <printf_parse@@Base+0x1444>
   35388:	ldr	w0, [sp, #108]
   3538c:	add	w0, w0, #0x1
   35390:	str	w0, [sp, #108]
   35394:	ldr	w0, [sp, #108]
   35398:	cmp	w0, #0xff
   3539c:	b.le	35354 <rpl_regfree@@Base+0x6d5c>
   353a0:	b	35964 <rpl_regfree@@Base+0x736c>
   353a4:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   353a8:	add	x1, x0, #0x6f8
   353ac:	ldr	x0, [sp, #96]
   353b0:	bl	b070 <strcmp@plt>
   353b4:	cmp	w0, #0x0
   353b8:	b.ne	35498 <rpl_regfree@@Base+0x6ea0>  // b.any
   353bc:	ldr	x0, [sp, #72]
   353c0:	cmp	x0, #0x0
   353c4:	cset	w0, ne  // ne = any
   353c8:	and	w0, w0, #0xff
   353cc:	and	x0, x0, #0xff
   353d0:	cmp	x0, #0x0
   353d4:	b.eq	35440 <rpl_regfree@@Base+0x6e48>  // b.none
   353d8:	str	wzr, [sp, #108]
   353dc:	b	35430 <rpl_regfree@@Base+0x6e38>
   353e0:	bl	b090 <__ctype_b_loc@plt>
   353e4:	ldr	x1, [x0]
   353e8:	ldrsw	x0, [sp, #108]
   353ec:	lsl	x0, x0, #1
   353f0:	add	x0, x1, x0
   353f4:	ldrh	w0, [x0]
   353f8:	and	w0, w0, #0x4000
   353fc:	cmp	w0, #0x0
   35400:	b.eq	35424 <rpl_regfree@@Base+0x6e2c>  // b.none
   35404:	ldrsw	x0, [sp, #108]
   35408:	ldr	x1, [sp, #72]
   3540c:	add	x0, x1, x0
   35410:	ldrb	w0, [x0]
   35414:	and	x0, x0, #0xff
   35418:	mov	x1, x0
   3541c:	ldr	x0, [sp, #64]
   35420:	bl	2873c <printf_parse@@Base+0x1444>
   35424:	ldr	w0, [sp, #108]
   35428:	add	w0, w0, #0x1
   3542c:	str	w0, [sp, #108]
   35430:	ldr	w0, [sp, #108]
   35434:	cmp	w0, #0xff
   35438:	b.le	353e0 <rpl_regfree@@Base+0x6de8>
   3543c:	b	35964 <rpl_regfree@@Base+0x736c>
   35440:	str	wzr, [sp, #108]
   35444:	b	35488 <rpl_regfree@@Base+0x6e90>
   35448:	bl	b090 <__ctype_b_loc@plt>
   3544c:	ldr	x1, [x0]
   35450:	ldrsw	x0, [sp, #108]
   35454:	lsl	x0, x0, #1
   35458:	add	x0, x1, x0
   3545c:	ldrh	w0, [x0]
   35460:	and	w0, w0, #0x4000
   35464:	cmp	w0, #0x0
   35468:	b.eq	3547c <rpl_regfree@@Base+0x6e84>  // b.none
   3546c:	ldrsw	x0, [sp, #108]
   35470:	mov	x1, x0
   35474:	ldr	x0, [sp, #64]
   35478:	bl	2873c <printf_parse@@Base+0x1444>
   3547c:	ldr	w0, [sp, #108]
   35480:	add	w0, w0, #0x1
   35484:	str	w0, [sp, #108]
   35488:	ldr	w0, [sp, #108]
   3548c:	cmp	w0, #0xff
   35490:	b.le	35448 <rpl_regfree@@Base+0x6e50>
   35494:	b	35964 <rpl_regfree@@Base+0x736c>
   35498:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   3549c:	add	x1, x0, #0x6d0
   354a0:	ldr	x0, [sp, #96]
   354a4:	bl	b070 <strcmp@plt>
   354a8:	cmp	w0, #0x0
   354ac:	b.ne	3558c <rpl_regfree@@Base+0x6f94>  // b.any
   354b0:	ldr	x0, [sp, #72]
   354b4:	cmp	x0, #0x0
   354b8:	cset	w0, ne  // ne = any
   354bc:	and	w0, w0, #0xff
   354c0:	and	x0, x0, #0xff
   354c4:	cmp	x0, #0x0
   354c8:	b.eq	35534 <rpl_regfree@@Base+0x6f3c>  // b.none
   354cc:	str	wzr, [sp, #108]
   354d0:	b	35524 <rpl_regfree@@Base+0x6f2c>
   354d4:	bl	b090 <__ctype_b_loc@plt>
   354d8:	ldr	x1, [x0]
   354dc:	ldrsw	x0, [sp, #108]
   354e0:	lsl	x0, x0, #1
   354e4:	add	x0, x1, x0
   354e8:	ldrh	w0, [x0]
   354ec:	and	w0, w0, #0x100
   354f0:	cmp	w0, #0x0
   354f4:	b.eq	35518 <rpl_regfree@@Base+0x6f20>  // b.none
   354f8:	ldrsw	x0, [sp, #108]
   354fc:	ldr	x1, [sp, #72]
   35500:	add	x0, x1, x0
   35504:	ldrb	w0, [x0]
   35508:	and	x0, x0, #0xff
   3550c:	mov	x1, x0
   35510:	ldr	x0, [sp, #64]
   35514:	bl	2873c <printf_parse@@Base+0x1444>
   35518:	ldr	w0, [sp, #108]
   3551c:	add	w0, w0, #0x1
   35520:	str	w0, [sp, #108]
   35524:	ldr	w0, [sp, #108]
   35528:	cmp	w0, #0xff
   3552c:	b.le	354d4 <rpl_regfree@@Base+0x6edc>
   35530:	b	35964 <rpl_regfree@@Base+0x736c>
   35534:	str	wzr, [sp, #108]
   35538:	b	3557c <rpl_regfree@@Base+0x6f84>
   3553c:	bl	b090 <__ctype_b_loc@plt>
   35540:	ldr	x1, [x0]
   35544:	ldrsw	x0, [sp, #108]
   35548:	lsl	x0, x0, #1
   3554c:	add	x0, x1, x0
   35550:	ldrh	w0, [x0]
   35554:	and	w0, w0, #0x100
   35558:	cmp	w0, #0x0
   3555c:	b.eq	35570 <rpl_regfree@@Base+0x6f78>  // b.none
   35560:	ldrsw	x0, [sp, #108]
   35564:	mov	x1, x0
   35568:	ldr	x0, [sp, #64]
   3556c:	bl	2873c <printf_parse@@Base+0x1444>
   35570:	ldr	w0, [sp, #108]
   35574:	add	w0, w0, #0x1
   35578:	str	w0, [sp, #108]
   3557c:	ldr	w0, [sp, #108]
   35580:	cmp	w0, #0xff
   35584:	b.le	3553c <rpl_regfree@@Base+0x6f44>
   35588:	b	35964 <rpl_regfree@@Base+0x736c>
   3558c:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   35590:	add	x1, x0, #0x700
   35594:	ldr	x0, [sp, #96]
   35598:	bl	b070 <strcmp@plt>
   3559c:	cmp	w0, #0x0
   355a0:	b.ne	35680 <rpl_regfree@@Base+0x7088>  // b.any
   355a4:	ldr	x0, [sp, #72]
   355a8:	cmp	x0, #0x0
   355ac:	cset	w0, ne  // ne = any
   355b0:	and	w0, w0, #0xff
   355b4:	and	x0, x0, #0xff
   355b8:	cmp	x0, #0x0
   355bc:	b.eq	35628 <rpl_regfree@@Base+0x7030>  // b.none
   355c0:	str	wzr, [sp, #108]
   355c4:	b	35618 <rpl_regfree@@Base+0x7020>
   355c8:	bl	b090 <__ctype_b_loc@plt>
   355cc:	ldr	x1, [x0]
   355d0:	ldrsw	x0, [sp, #108]
   355d4:	lsl	x0, x0, #1
   355d8:	add	x0, x1, x0
   355dc:	ldrh	w0, [x0]
   355e0:	and	w0, w0, #0x1
   355e4:	cmp	w0, #0x0
   355e8:	b.eq	3560c <rpl_regfree@@Base+0x7014>  // b.none
   355ec:	ldrsw	x0, [sp, #108]
   355f0:	ldr	x1, [sp, #72]
   355f4:	add	x0, x1, x0
   355f8:	ldrb	w0, [x0]
   355fc:	and	x0, x0, #0xff
   35600:	mov	x1, x0
   35604:	ldr	x0, [sp, #64]
   35608:	bl	2873c <printf_parse@@Base+0x1444>
   3560c:	ldr	w0, [sp, #108]
   35610:	add	w0, w0, #0x1
   35614:	str	w0, [sp, #108]
   35618:	ldr	w0, [sp, #108]
   3561c:	cmp	w0, #0xff
   35620:	b.le	355c8 <rpl_regfree@@Base+0x6fd0>
   35624:	b	35964 <rpl_regfree@@Base+0x736c>
   35628:	str	wzr, [sp, #108]
   3562c:	b	35670 <rpl_regfree@@Base+0x7078>
   35630:	bl	b090 <__ctype_b_loc@plt>
   35634:	ldr	x1, [x0]
   35638:	ldrsw	x0, [sp, #108]
   3563c:	lsl	x0, x0, #1
   35640:	add	x0, x1, x0
   35644:	ldrh	w0, [x0]
   35648:	and	w0, w0, #0x1
   3564c:	cmp	w0, #0x0
   35650:	b.eq	35664 <rpl_regfree@@Base+0x706c>  // b.none
   35654:	ldrsw	x0, [sp, #108]
   35658:	mov	x1, x0
   3565c:	ldr	x0, [sp, #64]
   35660:	bl	2873c <printf_parse@@Base+0x1444>
   35664:	ldr	w0, [sp, #108]
   35668:	add	w0, w0, #0x1
   3566c:	str	w0, [sp, #108]
   35670:	ldr	w0, [sp, #108]
   35674:	cmp	w0, #0xff
   35678:	b.le	35630 <rpl_regfree@@Base+0x7038>
   3567c:	b	35964 <rpl_regfree@@Base+0x736c>
   35680:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   35684:	add	x1, x0, #0x708
   35688:	ldr	x0, [sp, #96]
   3568c:	bl	b070 <strcmp@plt>
   35690:	cmp	w0, #0x0
   35694:	b.ne	35774 <rpl_regfree@@Base+0x717c>  // b.any
   35698:	ldr	x0, [sp, #72]
   3569c:	cmp	x0, #0x0
   356a0:	cset	w0, ne  // ne = any
   356a4:	and	w0, w0, #0xff
   356a8:	and	x0, x0, #0xff
   356ac:	cmp	x0, #0x0
   356b0:	b.eq	3571c <rpl_regfree@@Base+0x7124>  // b.none
   356b4:	str	wzr, [sp, #108]
   356b8:	b	3570c <rpl_regfree@@Base+0x7114>
   356bc:	bl	b090 <__ctype_b_loc@plt>
   356c0:	ldr	x1, [x0]
   356c4:	ldrsw	x0, [sp, #108]
   356c8:	lsl	x0, x0, #1
   356cc:	add	x0, x1, x0
   356d0:	ldrh	w0, [x0]
   356d4:	sxth	w0, w0
   356d8:	cmp	w0, #0x0
   356dc:	b.ge	35700 <rpl_regfree@@Base+0x7108>  // b.tcont
   356e0:	ldrsw	x0, [sp, #108]
   356e4:	ldr	x1, [sp, #72]
   356e8:	add	x0, x1, x0
   356ec:	ldrb	w0, [x0]
   356f0:	and	x0, x0, #0xff
   356f4:	mov	x1, x0
   356f8:	ldr	x0, [sp, #64]
   356fc:	bl	2873c <printf_parse@@Base+0x1444>
   35700:	ldr	w0, [sp, #108]
   35704:	add	w0, w0, #0x1
   35708:	str	w0, [sp, #108]
   3570c:	ldr	w0, [sp, #108]
   35710:	cmp	w0, #0xff
   35714:	b.le	356bc <rpl_regfree@@Base+0x70c4>
   35718:	b	35964 <rpl_regfree@@Base+0x736c>
   3571c:	str	wzr, [sp, #108]
   35720:	b	35764 <rpl_regfree@@Base+0x716c>
   35724:	bl	b090 <__ctype_b_loc@plt>
   35728:	ldr	x1, [x0]
   3572c:	ldrsw	x0, [sp, #108]
   35730:	lsl	x0, x0, #1
   35734:	add	x0, x1, x0
   35738:	ldrh	w0, [x0]
   3573c:	sxth	w0, w0
   35740:	cmp	w0, #0x0
   35744:	b.ge	35758 <rpl_regfree@@Base+0x7160>  // b.tcont
   35748:	ldrsw	x0, [sp, #108]
   3574c:	mov	x1, x0
   35750:	ldr	x0, [sp, #64]
   35754:	bl	2873c <printf_parse@@Base+0x1444>
   35758:	ldr	w0, [sp, #108]
   3575c:	add	w0, w0, #0x1
   35760:	str	w0, [sp, #108]
   35764:	ldr	w0, [sp, #108]
   35768:	cmp	w0, #0xff
   3576c:	b.le	35724 <rpl_regfree@@Base+0x712c>
   35770:	b	35964 <rpl_regfree@@Base+0x736c>
   35774:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   35778:	add	x1, x0, #0x710
   3577c:	ldr	x0, [sp, #96]
   35780:	bl	b070 <strcmp@plt>
   35784:	cmp	w0, #0x0
   35788:	b.ne	35868 <rpl_regfree@@Base+0x7270>  // b.any
   3578c:	ldr	x0, [sp, #72]
   35790:	cmp	x0, #0x0
   35794:	cset	w0, ne  // ne = any
   35798:	and	w0, w0, #0xff
   3579c:	and	x0, x0, #0xff
   357a0:	cmp	x0, #0x0
   357a4:	b.eq	35810 <rpl_regfree@@Base+0x7218>  // b.none
   357a8:	str	wzr, [sp, #108]
   357ac:	b	35800 <rpl_regfree@@Base+0x7208>
   357b0:	bl	b090 <__ctype_b_loc@plt>
   357b4:	ldr	x1, [x0]
   357b8:	ldrsw	x0, [sp, #108]
   357bc:	lsl	x0, x0, #1
   357c0:	add	x0, x1, x0
   357c4:	ldrh	w0, [x0]
   357c8:	and	w0, w0, #0x4
   357cc:	cmp	w0, #0x0
   357d0:	b.eq	357f4 <rpl_regfree@@Base+0x71fc>  // b.none
   357d4:	ldrsw	x0, [sp, #108]
   357d8:	ldr	x1, [sp, #72]
   357dc:	add	x0, x1, x0
   357e0:	ldrb	w0, [x0]
   357e4:	and	x0, x0, #0xff
   357e8:	mov	x1, x0
   357ec:	ldr	x0, [sp, #64]
   357f0:	bl	2873c <printf_parse@@Base+0x1444>
   357f4:	ldr	w0, [sp, #108]
   357f8:	add	w0, w0, #0x1
   357fc:	str	w0, [sp, #108]
   35800:	ldr	w0, [sp, #108]
   35804:	cmp	w0, #0xff
   35808:	b.le	357b0 <rpl_regfree@@Base+0x71b8>
   3580c:	b	35964 <rpl_regfree@@Base+0x736c>
   35810:	str	wzr, [sp, #108]
   35814:	b	35858 <rpl_regfree@@Base+0x7260>
   35818:	bl	b090 <__ctype_b_loc@plt>
   3581c:	ldr	x1, [x0]
   35820:	ldrsw	x0, [sp, #108]
   35824:	lsl	x0, x0, #1
   35828:	add	x0, x1, x0
   3582c:	ldrh	w0, [x0]
   35830:	and	w0, w0, #0x4
   35834:	cmp	w0, #0x0
   35838:	b.eq	3584c <rpl_regfree@@Base+0x7254>  // b.none
   3583c:	ldrsw	x0, [sp, #108]
   35840:	mov	x1, x0
   35844:	ldr	x0, [sp, #64]
   35848:	bl	2873c <printf_parse@@Base+0x1444>
   3584c:	ldr	w0, [sp, #108]
   35850:	add	w0, w0, #0x1
   35854:	str	w0, [sp, #108]
   35858:	ldr	w0, [sp, #108]
   3585c:	cmp	w0, #0xff
   35860:	b.le	35818 <rpl_regfree@@Base+0x7220>
   35864:	b	35964 <rpl_regfree@@Base+0x736c>
   35868:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   3586c:	add	x1, x0, #0x718
   35870:	ldr	x0, [sp, #96]
   35874:	bl	b070 <strcmp@plt>
   35878:	cmp	w0, #0x0
   3587c:	b.ne	3595c <rpl_regfree@@Base+0x7364>  // b.any
   35880:	ldr	x0, [sp, #72]
   35884:	cmp	x0, #0x0
   35888:	cset	w0, ne  // ne = any
   3588c:	and	w0, w0, #0xff
   35890:	and	x0, x0, #0xff
   35894:	cmp	x0, #0x0
   35898:	b.eq	35904 <rpl_regfree@@Base+0x730c>  // b.none
   3589c:	str	wzr, [sp, #108]
   358a0:	b	358f4 <rpl_regfree@@Base+0x72fc>
   358a4:	bl	b090 <__ctype_b_loc@plt>
   358a8:	ldr	x1, [x0]
   358ac:	ldrsw	x0, [sp, #108]
   358b0:	lsl	x0, x0, #1
   358b4:	add	x0, x1, x0
   358b8:	ldrh	w0, [x0]
   358bc:	and	w0, w0, #0x1000
   358c0:	cmp	w0, #0x0
   358c4:	b.eq	358e8 <rpl_regfree@@Base+0x72f0>  // b.none
   358c8:	ldrsw	x0, [sp, #108]
   358cc:	ldr	x1, [sp, #72]
   358d0:	add	x0, x1, x0
   358d4:	ldrb	w0, [x0]
   358d8:	and	x0, x0, #0xff
   358dc:	mov	x1, x0
   358e0:	ldr	x0, [sp, #64]
   358e4:	bl	2873c <printf_parse@@Base+0x1444>
   358e8:	ldr	w0, [sp, #108]
   358ec:	add	w0, w0, #0x1
   358f0:	str	w0, [sp, #108]
   358f4:	ldr	w0, [sp, #108]
   358f8:	cmp	w0, #0xff
   358fc:	b.le	358a4 <rpl_regfree@@Base+0x72ac>
   35900:	b	35964 <rpl_regfree@@Base+0x736c>
   35904:	str	wzr, [sp, #108]
   35908:	b	3594c <rpl_regfree@@Base+0x7354>
   3590c:	bl	b090 <__ctype_b_loc@plt>
   35910:	ldr	x1, [x0]
   35914:	ldrsw	x0, [sp, #108]
   35918:	lsl	x0, x0, #1
   3591c:	add	x0, x1, x0
   35920:	ldrh	w0, [x0]
   35924:	and	w0, w0, #0x1000
   35928:	cmp	w0, #0x0
   3592c:	b.eq	35940 <rpl_regfree@@Base+0x7348>  // b.none
   35930:	ldrsw	x0, [sp, #108]
   35934:	mov	x1, x0
   35938:	ldr	x0, [sp, #64]
   3593c:	bl	2873c <printf_parse@@Base+0x1444>
   35940:	ldr	w0, [sp, #108]
   35944:	add	w0, w0, #0x1
   35948:	str	w0, [sp, #108]
   3594c:	ldr	w0, [sp, #108]
   35950:	cmp	w0, #0xff
   35954:	b.le	3590c <rpl_regfree@@Base+0x7314>
   35958:	b	35964 <rpl_regfree@@Base+0x736c>
   3595c:	mov	w0, #0x4                   	// #4
   35960:	b	35968 <rpl_regfree@@Base+0x7370>
   35964:	mov	w0, #0x0                   	// #0
   35968:	ldr	x19, [sp, #16]
   3596c:	ldp	x29, x30, [sp], #112
   35970:	ret
   35974:	stp	x29, x30, [sp, #-128]!
   35978:	mov	x29, sp
   3597c:	str	x0, [sp, #56]
   35980:	str	x1, [sp, #48]
   35984:	str	x2, [sp, #40]
   35988:	str	x3, [sp, #32]
   3598c:	strb	w4, [sp, #31]
   35990:	str	x5, [sp, #16]
   35994:	str	xzr, [sp, #80]
   35998:	mov	x1, #0x1                   	// #1
   3599c:	mov	x0, #0x20                  	// #32
   359a0:	bl	ad80 <calloc@plt>
   359a4:	str	x0, [sp, #120]
   359a8:	ldr	x0, [sp, #120]
   359ac:	cmp	x0, #0x0
   359b0:	cset	w0, eq  // eq = none
   359b4:	and	w0, w0, #0xff
   359b8:	and	x0, x0, #0xff
   359bc:	cmp	x0, #0x0
   359c0:	b.eq	359d8 <rpl_regfree@@Base+0x73e0>  // b.none
   359c4:	ldr	x0, [sp, #16]
   359c8:	mov	w1, #0xc                   	// #12
   359cc:	str	w1, [x0]
   359d0:	mov	x0, #0x0                   	// #0
   359d4:	b	35c2c <rpl_regfree@@Base+0x7634>
   359d8:	mov	x1, #0x1                   	// #1
   359dc:	mov	x0, #0x50                  	// #80
   359e0:	bl	ad80 <calloc@plt>
   359e4:	str	x0, [sp, #112]
   359e8:	ldr	x0, [sp, #112]
   359ec:	cmp	x0, #0x0
   359f0:	cset	w0, eq  // eq = none
   359f4:	and	w0, w0, #0xff
   359f8:	and	x0, x0, #0xff
   359fc:	cmp	x0, #0x0
   35a00:	b.eq	35a20 <rpl_regfree@@Base+0x7428>  // b.none
   35a04:	ldr	x0, [sp, #120]
   35a08:	bl	b130 <free@plt>
   35a0c:	ldr	x0, [sp, #16]
   35a10:	mov	w1, #0xc                   	// #12
   35a14:	str	w1, [x0]
   35a18:	mov	x0, #0x0                   	// #0
   35a1c:	b	35c2c <rpl_regfree@@Base+0x7634>
   35a20:	ldr	x1, [sp, #112]
   35a24:	ldrb	w0, [x1, #32]
   35a28:	ldrb	w2, [sp, #31]
   35a2c:	bfxil	w0, w2, #0, #1
   35a30:	strb	w0, [x1, #32]
   35a34:	add	x0, sp, #0x50
   35a38:	mov	x5, #0x0                   	// #0
   35a3c:	ldr	x4, [sp, #40]
   35a40:	mov	x3, x0
   35a44:	ldr	x2, [sp, #112]
   35a48:	ldr	x1, [sp, #120]
   35a4c:	ldr	x0, [sp, #48]
   35a50:	bl	34cac <rpl_regfree@@Base+0x66b4>
   35a54:	str	w0, [sp, #108]
   35a58:	ldr	w0, [sp, #108]
   35a5c:	cmp	w0, #0x0
   35a60:	cset	w0, ne  // ne = any
   35a64:	and	w0, w0, #0xff
   35a68:	and	x0, x0, #0xff
   35a6c:	cmp	x0, #0x0
   35a70:	b.eq	35abc <rpl_regfree@@Base+0x74c4>  // b.none
   35a74:	ldr	x0, [sp, #120]
   35a78:	bl	b130 <free@plt>
   35a7c:	ldr	x0, [sp, #112]
   35a80:	bl	35d50 <rpl_regfree@@Base+0x7758>
   35a84:	ldr	x0, [sp, #16]
   35a88:	ldr	w1, [sp, #108]
   35a8c:	str	w1, [x0]
   35a90:	mov	x0, #0x0                   	// #0
   35a94:	b	35c2c <rpl_regfree@@Base+0x7634>
   35a98:	ldr	x0, [sp, #32]
   35a9c:	ldrb	w0, [x0]
   35aa0:	and	x0, x0, #0xff
   35aa4:	mov	x1, x0
   35aa8:	ldr	x0, [sp, #120]
   35aac:	bl	2873c <printf_parse@@Base+0x1444>
   35ab0:	ldr	x0, [sp, #32]
   35ab4:	add	x0, x0, #0x1
   35ab8:	str	x0, [sp, #32]
   35abc:	ldr	x0, [sp, #32]
   35ac0:	ldrb	w0, [x0]
   35ac4:	cmp	w0, #0x0
   35ac8:	b.ne	35a98 <rpl_regfree@@Base+0x74a0>  // b.any
   35acc:	ldrb	w0, [sp, #31]
   35ad0:	cmp	w0, #0x0
   35ad4:	b.eq	35ae0 <rpl_regfree@@Base+0x74e8>  // b.none
   35ad8:	ldr	x0, [sp, #120]
   35adc:	bl	28914 <printf_parse@@Base+0x161c>
   35ae0:	ldr	x0, [sp, #56]
   35ae4:	ldr	w0, [x0, #180]
   35ae8:	cmp	w0, #0x1
   35aec:	b.le	35b04 <rpl_regfree@@Base+0x750c>
   35af0:	ldr	x0, [sp, #56]
   35af4:	ldr	x0, [x0, #120]
   35af8:	mov	x1, x0
   35afc:	ldr	x0, [sp, #120]
   35b00:	bl	289f4 <printf_parse@@Base+0x16fc>
   35b04:	mov	w0, #0x3                   	// #3
   35b08:	strb	w0, [sp, #72]
   35b0c:	ldr	x0, [sp, #120]
   35b10:	str	x0, [sp, #64]
   35b14:	add	x0, sp, #0x40
   35b18:	mov	x3, x0
   35b1c:	mov	x2, #0x0                   	// #0
   35b20:	mov	x1, #0x0                   	// #0
   35b24:	ldr	x0, [sp, #56]
   35b28:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   35b2c:	str	x0, [sp, #96]
   35b30:	ldr	x0, [sp, #96]
   35b34:	cmp	x0, #0x0
   35b38:	cset	w0, eq  // eq = none
   35b3c:	and	w0, w0, #0xff
   35b40:	and	x0, x0, #0xff
   35b44:	cmp	x0, #0x0
   35b48:	b.ne	35c00 <rpl_regfree@@Base+0x7608>  // b.any
   35b4c:	ldr	x0, [sp, #56]
   35b50:	ldr	w0, [x0, #180]
   35b54:	cmp	w0, #0x1
   35b58:	b.le	35bf0 <rpl_regfree@@Base+0x75f8>
   35b5c:	mov	w0, #0x6                   	// #6
   35b60:	strb	w0, [sp, #72]
   35b64:	ldr	x0, [sp, #112]
   35b68:	str	x0, [sp, #64]
   35b6c:	ldr	x0, [sp, #56]
   35b70:	ldrb	w1, [x0, #176]
   35b74:	orr	w1, w1, #0x2
   35b78:	strb	w1, [x0, #176]
   35b7c:	add	x0, sp, #0x40
   35b80:	mov	x3, x0
   35b84:	mov	x2, #0x0                   	// #0
   35b88:	mov	x1, #0x0                   	// #0
   35b8c:	ldr	x0, [sp, #56]
   35b90:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   35b94:	str	x0, [sp, #88]
   35b98:	ldr	x0, [sp, #88]
   35b9c:	cmp	x0, #0x0
   35ba0:	cset	w0, eq  // eq = none
   35ba4:	and	w0, w0, #0xff
   35ba8:	and	x0, x0, #0xff
   35bac:	cmp	x0, #0x0
   35bb0:	b.ne	35c08 <rpl_regfree@@Base+0x7610>  // b.any
   35bb4:	mov	w3, #0xa                   	// #10
   35bb8:	ldr	x2, [sp, #88]
   35bbc:	ldr	x1, [sp, #96]
   35bc0:	ldr	x0, [sp, #56]
   35bc4:	bl	35da0 <rpl_regfree@@Base+0x77a8>
   35bc8:	str	x0, [sp, #96]
   35bcc:	ldr	x0, [sp, #88]
   35bd0:	cmp	x0, #0x0
   35bd4:	cset	w0, ne  // ne = any
   35bd8:	and	w0, w0, #0xff
   35bdc:	and	x0, x0, #0xff
   35be0:	cmp	x0, #0x0
   35be4:	b.eq	35c0c <rpl_regfree@@Base+0x7614>  // b.none
   35be8:	ldr	x0, [sp, #96]
   35bec:	b	35c2c <rpl_regfree@@Base+0x7634>
   35bf0:	ldr	x0, [sp, #112]
   35bf4:	bl	35d50 <rpl_regfree@@Base+0x7758>
   35bf8:	ldr	x0, [sp, #96]
   35bfc:	b	35c2c <rpl_regfree@@Base+0x7634>
   35c00:	nop
   35c04:	b	35c0c <rpl_regfree@@Base+0x7614>
   35c08:	nop
   35c0c:	ldr	x0, [sp, #120]
   35c10:	bl	b130 <free@plt>
   35c14:	ldr	x0, [sp, #112]
   35c18:	bl	35d50 <rpl_regfree@@Base+0x7758>
   35c1c:	ldr	x0, [sp, #16]
   35c20:	mov	w1, #0xc                   	// #12
   35c24:	str	w1, [x0]
   35c28:	mov	x0, #0x0                   	// #0
   35c2c:	ldp	x29, x30, [sp], #128
   35c30:	ret
   35c34:	stp	x29, x30, [sp, #-64]!
   35c38:	mov	x29, sp
   35c3c:	str	x0, [sp, #40]
   35c40:	str	x1, [sp, #32]
   35c44:	str	x2, [sp, #24]
   35c48:	mov	x0, #0xffffffffffffffff    	// #-1
   35c4c:	str	x0, [sp, #56]
   35c50:	ldr	x2, [sp, #24]
   35c54:	ldr	x1, [sp, #40]
   35c58:	ldr	x0, [sp, #32]
   35c5c:	bl	315e8 <rpl_regfree@@Base+0x2ff0>
   35c60:	ldr	x0, [sp, #32]
   35c64:	ldrb	w0, [x0]
   35c68:	strb	w0, [sp, #55]
   35c6c:	ldr	x0, [sp, #32]
   35c70:	ldrb	w0, [x0, #8]
   35c74:	cmp	w0, #0x2
   35c78:	cset	w0, eq  // eq = none
   35c7c:	and	w0, w0, #0xff
   35c80:	and	x0, x0, #0xff
   35c84:	cmp	x0, #0x0
   35c88:	b.eq	35c94 <rpl_regfree@@Base+0x769c>  // b.none
   35c8c:	mov	x0, #0xfffffffffffffffe    	// #-2
   35c90:	b	35d48 <rpl_regfree@@Base+0x7750>
   35c94:	ldr	x0, [sp, #32]
   35c98:	ldrb	w0, [x0, #8]
   35c9c:	cmp	w0, #0x18
   35ca0:	b.eq	35d44 <rpl_regfree@@Base+0x774c>  // b.none
   35ca4:	ldrb	w0, [sp, #55]
   35ca8:	cmp	w0, #0x2c
   35cac:	b.eq	35d44 <rpl_regfree@@Base+0x774c>  // b.none
   35cb0:	ldr	x0, [sp, #32]
   35cb4:	ldrb	w0, [x0, #8]
   35cb8:	cmp	w0, #0x1
   35cbc:	b.ne	35d38 <rpl_regfree@@Base+0x7740>  // b.any
   35cc0:	ldrb	w0, [sp, #55]
   35cc4:	cmp	w0, #0x2f
   35cc8:	b.ls	35d38 <rpl_regfree@@Base+0x7740>  // b.plast
   35ccc:	ldrb	w0, [sp, #55]
   35cd0:	cmp	w0, #0x39
   35cd4:	b.hi	35d38 <rpl_regfree@@Base+0x7740>  // b.pmore
   35cd8:	ldr	x0, [sp, #56]
   35cdc:	cmn	x0, #0x2
   35ce0:	b.eq	35d38 <rpl_regfree@@Base+0x7740>  // b.none
   35ce4:	ldr	x0, [sp, #56]
   35ce8:	cmn	x0, #0x1
   35cec:	b.ne	35d00 <rpl_regfree@@Base+0x7708>  // b.any
   35cf0:	ldrb	w0, [sp, #55]
   35cf4:	sub	w0, w0, #0x30
   35cf8:	sxtw	x0, w0
   35cfc:	b	35d3c <rpl_regfree@@Base+0x7744>
   35d00:	ldr	x1, [sp, #56]
   35d04:	mov	x0, x1
   35d08:	lsl	x0, x0, #2
   35d0c:	add	x0, x0, x1
   35d10:	lsl	x0, x0, #1
   35d14:	mov	x1, x0
   35d18:	ldrb	w0, [sp, #55]
   35d1c:	add	x0, x1, x0
   35d20:	mov	x2, #0x8030                	// #32816
   35d24:	mov	x1, #0x8030                	// #32816
   35d28:	cmp	x0, x2
   35d2c:	csel	x0, x0, x1, le
   35d30:	sub	x0, x0, #0x30
   35d34:	b	35d3c <rpl_regfree@@Base+0x7744>
   35d38:	mov	x0, #0xfffffffffffffffe    	// #-2
   35d3c:	str	x0, [sp, #56]
   35d40:	b	35c50 <rpl_regfree@@Base+0x7658>
   35d44:	ldr	x0, [sp, #56]
   35d48:	ldp	x29, x30, [sp], #64
   35d4c:	ret
   35d50:	stp	x29, x30, [sp, #-32]!
   35d54:	mov	x29, sp
   35d58:	str	x0, [sp, #24]
   35d5c:	ldr	x0, [sp, #24]
   35d60:	ldr	x0, [x0]
   35d64:	bl	b130 <free@plt>
   35d68:	ldr	x0, [sp, #24]
   35d6c:	ldr	x0, [x0, #8]
   35d70:	bl	b130 <free@plt>
   35d74:	ldr	x0, [sp, #24]
   35d78:	ldr	x0, [x0, #16]
   35d7c:	bl	b130 <free@plt>
   35d80:	ldr	x0, [sp, #24]
   35d84:	ldr	x0, [x0, #24]
   35d88:	bl	b130 <free@plt>
   35d8c:	ldr	x0, [sp, #24]
   35d90:	bl	b130 <free@plt>
   35d94:	nop
   35d98:	ldp	x29, x30, [sp], #32
   35d9c:	ret
   35da0:	stp	x29, x30, [sp, #-64]!
   35da4:	mov	x29, sp
   35da8:	str	x0, [sp, #40]
   35dac:	str	x1, [sp, #32]
   35db0:	str	x2, [sp, #24]
   35db4:	str	w3, [sp, #20]
   35db8:	ldr	w0, [sp, #20]
   35dbc:	and	w0, w0, #0xff
   35dc0:	strb	w0, [sp, #56]
   35dc4:	add	x0, sp, #0x30
   35dc8:	mov	x3, x0
   35dcc:	ldr	x2, [sp, #24]
   35dd0:	ldr	x1, [sp, #32]
   35dd4:	ldr	x0, [sp, #40]
   35dd8:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   35ddc:	ldp	x29, x30, [sp], #64
   35de0:	ret
   35de4:	stp	x29, x30, [sp, #-64]!
   35de8:	mov	x29, sp
   35dec:	str	x0, [sp, #40]
   35df0:	str	x1, [sp, #32]
   35df4:	str	x2, [sp, #24]
   35df8:	str	x3, [sp, #16]
   35dfc:	ldr	x0, [sp, #40]
   35e00:	ldr	w0, [x0, #128]
   35e04:	cmp	w0, #0xf
   35e08:	cset	w0, eq  // eq = none
   35e0c:	and	w0, w0, #0xff
   35e10:	and	x0, x0, #0xff
   35e14:	cmp	x0, #0x0
   35e18:	b.eq	35e60 <rpl_regfree@@Base+0x7868>  // b.none
   35e1c:	mov	x0, #0x3c8                 	// #968
   35e20:	bl	ab40 <malloc@plt>
   35e24:	str	x0, [sp, #56]
   35e28:	ldr	x0, [sp, #56]
   35e2c:	cmp	x0, #0x0
   35e30:	b.ne	35e3c <rpl_regfree@@Base+0x7844>  // b.any
   35e34:	mov	x0, #0x0                   	// #0
   35e38:	b	35f30 <rpl_regfree@@Base+0x7938>
   35e3c:	ldr	x0, [sp, #40]
   35e40:	ldr	x1, [x0, #112]
   35e44:	ldr	x0, [sp, #56]
   35e48:	str	x1, [x0]
   35e4c:	ldr	x0, [sp, #40]
   35e50:	ldr	x1, [sp, #56]
   35e54:	str	x1, [x0, #112]
   35e58:	ldr	x0, [sp, #40]
   35e5c:	str	wzr, [x0, #128]
   35e60:	ldr	x0, [sp, #40]
   35e64:	ldr	x1, [x0, #112]
   35e68:	ldr	x0, [sp, #40]
   35e6c:	ldr	w0, [x0, #128]
   35e70:	add	w3, w0, #0x1
   35e74:	ldr	x2, [sp, #40]
   35e78:	str	w3, [x2, #128]
   35e7c:	sxtw	x0, w0
   35e80:	lsl	x0, x0, #6
   35e84:	add	x0, x1, x0
   35e88:	add	x0, x0, #0x8
   35e8c:	str	x0, [sp, #48]
   35e90:	ldr	x0, [sp, #48]
   35e94:	str	xzr, [x0]
   35e98:	ldr	x0, [sp, #48]
   35e9c:	ldr	x1, [sp, #32]
   35ea0:	str	x1, [x0, #8]
   35ea4:	ldr	x0, [sp, #48]
   35ea8:	ldr	x1, [sp, #24]
   35eac:	str	x1, [x0, #16]
   35eb0:	ldr	x2, [sp, #48]
   35eb4:	ldr	x0, [sp, #16]
   35eb8:	ldp	x0, x1, [x0]
   35ebc:	stp	x0, x1, [x2, #40]
   35ec0:	ldr	x0, [sp, #48]
   35ec4:	ldrb	w1, [x0, #50]
   35ec8:	and	w1, w1, #0xfffffffb
   35ecc:	strb	w1, [x0, #50]
   35ed0:	ldr	x0, [sp, #48]
   35ed4:	ldrb	w1, [x0, #50]
   35ed8:	and	w1, w1, #0xfffffff7
   35edc:	strb	w1, [x0, #50]
   35ee0:	ldr	x0, [sp, #48]
   35ee4:	str	xzr, [x0, #24]
   35ee8:	ldr	x0, [sp, #48]
   35eec:	str	xzr, [x0, #32]
   35ef0:	ldr	x0, [sp, #48]
   35ef4:	mov	x1, #0xffffffffffffffff    	// #-1
   35ef8:	str	x1, [x0, #56]
   35efc:	ldr	x0, [sp, #32]
   35f00:	cmp	x0, #0x0
   35f04:	b.eq	35f14 <rpl_regfree@@Base+0x791c>  // b.none
   35f08:	ldr	x0, [sp, #32]
   35f0c:	ldr	x1, [sp, #48]
   35f10:	str	x1, [x0]
   35f14:	ldr	x0, [sp, #24]
   35f18:	cmp	x0, #0x0
   35f1c:	b.eq	35f2c <rpl_regfree@@Base+0x7934>  // b.none
   35f20:	ldr	x0, [sp, #24]
   35f24:	ldr	x1, [sp, #48]
   35f28:	str	x1, [x0]
   35f2c:	ldr	x0, [sp, #48]
   35f30:	ldp	x29, x30, [sp], #64
   35f34:	ret
   35f38:	sub	sp, sp, #0x20
   35f3c:	str	x0, [sp, #8]
   35f40:	str	x1, [sp]
   35f44:	ldr	x0, [sp, #8]
   35f48:	str	x0, [sp, #24]
   35f4c:	ldr	x0, [sp]
   35f50:	ldrb	w0, [x0, #48]
   35f54:	cmp	w0, #0x11
   35f58:	b.ne	35f80 <rpl_regfree@@Base+0x7988>  // b.any
   35f5c:	ldr	x0, [sp]
   35f60:	ldr	x0, [x0, #40]
   35f64:	ldr	x1, [sp, #24]
   35f68:	cmp	x1, x0
   35f6c:	b.ne	35f80 <rpl_regfree@@Base+0x7988>  // b.any
   35f70:	ldr	x0, [sp]
   35f74:	ldrb	w1, [x0, #50]
   35f78:	orr	w1, w1, #0x8
   35f7c:	strb	w1, [x0, #50]
   35f80:	mov	w0, #0x0                   	// #0
   35f84:	add	sp, sp, #0x20
   35f88:	ret
   35f8c:	stp	x29, x30, [sp, #-32]!
   35f90:	mov	x29, sp
   35f94:	str	x0, [sp, #24]
   35f98:	ldr	x0, [sp, #24]
   35f9c:	ldrb	w0, [x0, #8]
   35fa0:	cmp	w0, #0x6
   35fa4:	b.ne	35fd0 <rpl_regfree@@Base+0x79d8>  // b.any
   35fa8:	ldr	x0, [sp, #24]
   35fac:	ldrb	w0, [x0, #10]
   35fb0:	and	w0, w0, #0x4
   35fb4:	and	w0, w0, #0xff
   35fb8:	cmp	w0, #0x0
   35fbc:	b.ne	35fd0 <rpl_regfree@@Base+0x79d8>  // b.any
   35fc0:	ldr	x0, [sp, #24]
   35fc4:	ldr	x0, [x0]
   35fc8:	bl	35d50 <rpl_regfree@@Base+0x7758>
   35fcc:	b	36004 <rpl_regfree@@Base+0x7a0c>
   35fd0:	ldr	x0, [sp, #24]
   35fd4:	ldrb	w0, [x0, #8]
   35fd8:	cmp	w0, #0x3
   35fdc:	b.ne	36004 <rpl_regfree@@Base+0x7a0c>  // b.any
   35fe0:	ldr	x0, [sp, #24]
   35fe4:	ldrb	w0, [x0, #10]
   35fe8:	and	w0, w0, #0x4
   35fec:	and	w0, w0, #0xff
   35ff0:	cmp	w0, #0x0
   35ff4:	b.ne	36004 <rpl_regfree@@Base+0x7a0c>  // b.any
   35ff8:	ldr	x0, [sp, #24]
   35ffc:	ldr	x0, [x0]
   36000:	bl	b130 <free@plt>
   36004:	nop
   36008:	ldp	x29, x30, [sp], #32
   3600c:	ret
   36010:	stp	x29, x30, [sp, #-32]!
   36014:	mov	x29, sp
   36018:	str	x0, [sp, #24]
   3601c:	str	x1, [sp, #16]
   36020:	ldr	x0, [sp, #16]
   36024:	add	x0, x0, #0x28
   36028:	bl	35f8c <rpl_regfree@@Base+0x7994>
   3602c:	mov	w0, #0x0                   	// #0
   36030:	ldp	x29, x30, [sp], #32
   36034:	ret
   36038:	stp	x29, x30, [sp, #-80]!
   3603c:	mov	x29, sp
   36040:	str	x0, [sp, #24]
   36044:	str	x1, [sp, #16]
   36048:	add	x0, sp, #0x28
   3604c:	str	x0, [sp, #64]
   36050:	ldr	x0, [sp, #24]
   36054:	ldr	x0, [x0]
   36058:	str	x0, [sp, #56]
   3605c:	ldr	x0, [sp, #24]
   36060:	str	x0, [sp, #72]
   36064:	ldr	x0, [sp, #72]
   36068:	add	x0, x0, #0x28
   3606c:	mov	x3, x0
   36070:	mov	x2, #0x0                   	// #0
   36074:	mov	x1, #0x0                   	// #0
   36078:	ldr	x0, [sp, #16]
   3607c:	bl	35de4 <rpl_regfree@@Base+0x77ec>
   36080:	mov	x1, x0
   36084:	ldr	x0, [sp, #64]
   36088:	str	x1, [x0]
   3608c:	ldr	x0, [sp, #64]
   36090:	ldr	x0, [x0]
   36094:	cmp	x0, #0x0
   36098:	b.ne	360a4 <rpl_regfree@@Base+0x7aac>  // b.any
   3609c:	mov	x0, #0x0                   	// #0
   360a0:	b	3617c <rpl_regfree@@Base+0x7b84>
   360a4:	ldr	x0, [sp, #64]
   360a8:	ldr	x0, [x0]
   360ac:	ldr	x1, [sp, #56]
   360b0:	str	x1, [x0]
   360b4:	ldr	x0, [sp, #64]
   360b8:	ldr	x0, [x0]
   360bc:	ldrb	w1, [x0, #50]
   360c0:	orr	w1, w1, #0x4
   360c4:	strb	w1, [x0, #50]
   360c8:	ldr	x0, [sp, #64]
   360cc:	ldr	x0, [x0]
   360d0:	str	x0, [sp, #56]
   360d4:	ldr	x0, [sp, #72]
   360d8:	ldr	x0, [x0, #8]
   360dc:	cmp	x0, #0x0
   360e0:	b.eq	36100 <rpl_regfree@@Base+0x7b08>  // b.none
   360e4:	ldr	x0, [sp, #72]
   360e8:	ldr	x0, [x0, #8]
   360ec:	str	x0, [sp, #72]
   360f0:	ldr	x0, [sp, #56]
   360f4:	add	x0, x0, #0x8
   360f8:	str	x0, [sp, #64]
   360fc:	b	36064 <rpl_regfree@@Base+0x7a6c>
   36100:	str	xzr, [sp, #48]
   36104:	b	3613c <rpl_regfree@@Base+0x7b44>
   36108:	ldr	x0, [sp, #72]
   3610c:	str	x0, [sp, #48]
   36110:	ldr	x0, [sp, #72]
   36114:	ldr	x0, [x0]
   36118:	str	x0, [sp, #72]
   3611c:	ldr	x0, [sp, #56]
   36120:	ldr	x0, [x0]
   36124:	str	x0, [sp, #56]
   36128:	ldr	x0, [sp, #72]
   3612c:	cmp	x0, #0x0
   36130:	b.ne	3613c <rpl_regfree@@Base+0x7b44>  // b.any
   36134:	ldr	x0, [sp, #40]
   36138:	b	3617c <rpl_regfree@@Base+0x7b84>
   3613c:	ldr	x0, [sp, #72]
   36140:	ldr	x0, [x0, #16]
   36144:	ldr	x1, [sp, #48]
   36148:	cmp	x1, x0
   3614c:	b.eq	36108 <rpl_regfree@@Base+0x7b10>  // b.none
   36150:	ldr	x0, [sp, #72]
   36154:	ldr	x0, [x0, #16]
   36158:	cmp	x0, #0x0
   3615c:	b.eq	36108 <rpl_regfree@@Base+0x7b10>  // b.none
   36160:	ldr	x0, [sp, #72]
   36164:	ldr	x0, [x0, #16]
   36168:	str	x0, [sp, #72]
   3616c:	ldr	x0, [sp, #56]
   36170:	add	x0, x0, #0x10
   36174:	str	x0, [sp, #64]
   36178:	b	36064 <rpl_regfree@@Base+0x7a6c>
   3617c:	ldp	x29, x30, [sp], #80
   36180:	ret

0000000000036184 <rpl_regexec@@Base>:
   36184:	sub	sp, sp, #0x70
   36188:	stp	x29, x30, [sp, #16]
   3618c:	add	x29, sp, #0x10
   36190:	str	x0, [sp, #72]
   36194:	str	x1, [sp, #64]
   36198:	str	x2, [sp, #56]
   3619c:	str	x3, [sp, #48]
   361a0:	str	w4, [sp, #44]
   361a4:	ldr	x0, [sp, #72]
   361a8:	ldr	x0, [x0]
   361ac:	str	x0, [sp, #80]
   361b0:	ldr	w0, [sp, #44]
   361b4:	and	w0, w0, #0xfffffff8
   361b8:	cmp	w0, #0x0
   361bc:	b.eq	361c8 <rpl_regexec@@Base+0x44>  // b.none
   361c0:	mov	w0, #0x2                   	// #2
   361c4:	b	362f0 <rpl_regexec@@Base+0x16c>
   361c8:	ldr	w0, [sp, #44]
   361cc:	and	w0, w0, #0x4
   361d0:	cmp	w0, #0x0
   361d4:	b.eq	361f4 <rpl_regexec@@Base+0x70>  // b.none
   361d8:	ldr	x0, [sp, #48]
   361dc:	ldr	x0, [x0]
   361e0:	str	x0, [sp, #96]
   361e4:	ldr	x0, [sp, #48]
   361e8:	ldr	x0, [x0, #8]
   361ec:	str	x0, [sp, #88]
   361f0:	b	36204 <rpl_regexec@@Base+0x80>
   361f4:	str	xzr, [sp, #96]
   361f8:	ldr	x0, [sp, #64]
   361fc:	bl	a820 <strlen@plt>
   36200:	str	x0, [sp, #88]
   36204:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   36208:	ldr	x0, [x0, #4040]
   3620c:	cmp	x0, #0x0
   36210:	b.ne	36224 <rpl_regexec@@Base+0xa0>  // b.any
   36214:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   36218:	ldr	x0, [x0, #3944]
   3621c:	cmp	x0, #0x0
   36220:	b.eq	36234 <rpl_regexec@@Base+0xb0>  // b.none
   36224:	ldr	x0, [sp, #80]
   36228:	add	x0, x0, #0xe8
   3622c:	bl	b6a0 <pthread_mutex_lock@plt>
   36230:	nop
   36234:	ldr	x0, [sp, #72]
   36238:	ldrb	w0, [x0, #56]
   3623c:	and	w0, w0, #0x10
   36240:	and	w0, w0, #0xff
   36244:	cmp	w0, #0x0
   36248:	b.eq	36280 <rpl_regexec@@Base+0xfc>  // b.none
   3624c:	ldr	w0, [sp, #44]
   36250:	str	w0, [sp]
   36254:	mov	x7, #0x0                   	// #0
   36258:	mov	x6, #0x0                   	// #0
   3625c:	ldr	x5, [sp, #88]
   36260:	ldr	x4, [sp, #88]
   36264:	ldr	x3, [sp, #96]
   36268:	ldr	x2, [sp, #88]
   3626c:	ldr	x1, [sp, #64]
   36270:	ldr	x0, [sp, #72]
   36274:	bl	36e84 <rpl_re_set_registers@@Base+0x9c>
   36278:	str	w0, [sp, #108]
   3627c:	b	362b0 <rpl_regexec@@Base+0x12c>
   36280:	ldr	w0, [sp, #44]
   36284:	str	w0, [sp]
   36288:	ldr	x7, [sp, #48]
   3628c:	ldr	x6, [sp, #56]
   36290:	ldr	x5, [sp, #88]
   36294:	ldr	x4, [sp, #88]
   36298:	ldr	x3, [sp, #96]
   3629c:	ldr	x2, [sp, #88]
   362a0:	ldr	x1, [sp, #64]
   362a4:	ldr	x0, [sp, #72]
   362a8:	bl	36e84 <rpl_re_set_registers@@Base+0x9c>
   362ac:	str	w0, [sp, #108]
   362b0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   362b4:	ldr	x0, [x0, #4040]
   362b8:	cmp	x0, #0x0
   362bc:	b.ne	362d0 <rpl_regexec@@Base+0x14c>  // b.any
   362c0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   362c4:	ldr	x0, [x0, #3944]
   362c8:	cmp	x0, #0x0
   362cc:	b.eq	362e0 <rpl_regexec@@Base+0x15c>  // b.none
   362d0:	ldr	x0, [sp, #80]
   362d4:	add	x0, x0, #0xe8
   362d8:	bl	b6d0 <pthread_mutex_unlock@plt>
   362dc:	nop
   362e0:	ldr	w0, [sp, #108]
   362e4:	cmp	w0, #0x0
   362e8:	cset	w0, ne  // ne = any
   362ec:	and	w0, w0, #0xff
   362f0:	ldp	x29, x30, [sp, #16]
   362f4:	add	sp, sp, #0x70
   362f8:	ret

00000000000362fc <rpl_re_match@@Base>:
   362fc:	stp	x29, x30, [sp, #-64]!
   36300:	mov	x29, sp
   36304:	str	x0, [sp, #56]
   36308:	str	x1, [sp, #48]
   3630c:	str	x2, [sp, #40]
   36310:	str	x3, [sp, #32]
   36314:	str	x4, [sp, #24]
   36318:	mov	w7, #0x1                   	// #1
   3631c:	ldr	x6, [sp, #24]
   36320:	ldr	x5, [sp, #40]
   36324:	mov	x4, #0x0                   	// #0
   36328:	ldr	x3, [sp, #32]
   3632c:	ldr	x2, [sp, #40]
   36330:	ldr	x1, [sp, #48]
   36334:	ldr	x0, [sp, #56]
   36338:	bl	36614 <rpl_re_search_2@@Base+0x218>
   3633c:	ldp	x29, x30, [sp], #64
   36340:	ret

0000000000036344 <rpl_re_search@@Base>:
   36344:	stp	x29, x30, [sp, #-64]!
   36348:	mov	x29, sp
   3634c:	str	x0, [sp, #56]
   36350:	str	x1, [sp, #48]
   36354:	str	x2, [sp, #40]
   36358:	str	x3, [sp, #32]
   3635c:	str	x4, [sp, #24]
   36360:	str	x5, [sp, #16]
   36364:	mov	w7, #0x0                   	// #0
   36368:	ldr	x6, [sp, #16]
   3636c:	ldr	x5, [sp, #40]
   36370:	ldr	x4, [sp, #24]
   36374:	ldr	x3, [sp, #32]
   36378:	ldr	x2, [sp, #40]
   3637c:	ldr	x1, [sp, #48]
   36380:	ldr	x0, [sp, #56]
   36384:	bl	36614 <rpl_re_search_2@@Base+0x218>
   36388:	ldp	x29, x30, [sp], #64
   3638c:	ret

0000000000036390 <rpl_re_match_2@@Base>:
   36390:	sub	sp, sp, #0x60
   36394:	stp	x29, x30, [sp, #16]
   36398:	add	x29, sp, #0x10
   3639c:	str	x0, [sp, #88]
   363a0:	str	x1, [sp, #80]
   363a4:	str	x2, [sp, #72]
   363a8:	str	x3, [sp, #64]
   363ac:	str	x4, [sp, #56]
   363b0:	str	x5, [sp, #48]
   363b4:	str	x6, [sp, #40]
   363b8:	str	x7, [sp, #32]
   363bc:	mov	w0, #0x1                   	// #1
   363c0:	strb	w0, [sp, #8]
   363c4:	ldr	x0, [sp, #32]
   363c8:	str	x0, [sp]
   363cc:	ldr	x7, [sp, #40]
   363d0:	mov	x6, #0x0                   	// #0
   363d4:	ldr	x5, [sp, #48]
   363d8:	ldr	x4, [sp, #56]
   363dc:	ldr	x3, [sp, #64]
   363e0:	ldr	x2, [sp, #72]
   363e4:	ldr	x1, [sp, #80]
   363e8:	ldr	x0, [sp, #88]
   363ec:	bl	36464 <rpl_re_search_2@@Base+0x68>
   363f0:	ldp	x29, x30, [sp, #16]
   363f4:	add	sp, sp, #0x60
   363f8:	ret

00000000000363fc <rpl_re_search_2@@Base>:
   363fc:	sub	sp, sp, #0x60
   36400:	stp	x29, x30, [sp, #16]
   36404:	add	x29, sp, #0x10
   36408:	str	x0, [sp, #88]
   3640c:	str	x1, [sp, #80]
   36410:	str	x2, [sp, #72]
   36414:	str	x3, [sp, #64]
   36418:	str	x4, [sp, #56]
   3641c:	str	x5, [sp, #48]
   36420:	str	x6, [sp, #40]
   36424:	str	x7, [sp, #32]
   36428:	strb	wzr, [sp, #8]
   3642c:	ldr	x0, [sp, #96]
   36430:	str	x0, [sp]
   36434:	ldr	x7, [sp, #32]
   36438:	ldr	x6, [sp, #40]
   3643c:	ldr	x5, [sp, #48]
   36440:	ldr	x4, [sp, #56]
   36444:	ldr	x3, [sp, #64]
   36448:	ldr	x2, [sp, #72]
   3644c:	ldr	x1, [sp, #80]
   36450:	ldr	x0, [sp, #88]
   36454:	bl	36464 <rpl_re_search_2@@Base+0x68>
   36458:	ldp	x29, x30, [sp, #16]
   3645c:	add	sp, sp, #0x60
   36460:	ret
   36464:	stp	x29, x30, [sp, #-112]!
   36468:	mov	x29, sp
   3646c:	str	x0, [sp, #72]
   36470:	str	x1, [sp, #64]
   36474:	str	x2, [sp, #56]
   36478:	str	x3, [sp, #48]
   3647c:	str	x4, [sp, #40]
   36480:	str	x5, [sp, #32]
   36484:	str	x6, [sp, #24]
   36488:	str	x7, [sp, #16]
   3648c:	str	xzr, [sp, #96]
   36490:	ldr	x0, [sp, #56]
   36494:	lsr	x0, x0, #63
   36498:	and	w0, w0, #0xff
   3649c:	and	x0, x0, #0xff
   364a0:	cmp	x0, #0x0
   364a4:	b.ne	364c0 <rpl_re_search_2@@Base+0xc4>  // b.any
   364a8:	ldr	x0, [sp, #40]
   364ac:	lsr	x0, x0, #63
   364b0:	and	w0, w0, #0xff
   364b4:	and	x0, x0, #0xff
   364b8:	cmp	x0, #0x0
   364bc:	b.eq	364c8 <rpl_re_search_2@@Base+0xcc>  // b.none
   364c0:	mov	w0, #0x1                   	// #1
   364c4:	b	364cc <rpl_re_search_2@@Base+0xd0>
   364c8:	mov	w0, #0x0                   	// #0
   364cc:	cmp	w0, #0x0
   364d0:	b.ne	364ec <rpl_re_search_2@@Base+0xf0>  // b.any
   364d4:	ldr	x0, [sp, #112]
   364d8:	lsr	x0, x0, #63
   364dc:	and	w0, w0, #0xff
   364e0:	and	x0, x0, #0xff
   364e4:	cmp	x0, #0x0
   364e8:	b.eq	364f4 <rpl_re_search_2@@Base+0xf8>  // b.none
   364ec:	mov	w0, #0x1                   	// #1
   364f0:	b	364f8 <rpl_re_search_2@@Base+0xfc>
   364f4:	mov	w0, #0x0                   	// #0
   364f8:	cmp	w0, #0x0
   364fc:	b.ne	36534 <rpl_re_search_2@@Base+0x138>  // b.any
   36500:	mov	x2, #0x0                   	// #0
   36504:	ldr	x1, [sp, #56]
   36508:	ldr	x0, [sp, #40]
   3650c:	adds	x0, x1, x0
   36510:	b.vc	36518 <rpl_re_search_2@@Base+0x11c>
   36514:	mov	x2, #0x1                   	// #1
   36518:	str	x0, [sp, #80]
   3651c:	mov	x0, x2
   36520:	and	w0, w0, #0x1
   36524:	and	w0, w0, #0xff
   36528:	sxtw	x0, w0
   3652c:	cmp	x0, #0x0
   36530:	b.eq	3653c <rpl_re_search_2@@Base+0x140>  // b.none
   36534:	mov	x0, #0xfffffffffffffffe    	// #-2
   36538:	b	3660c <rpl_re_search_2@@Base+0x210>
   3653c:	ldr	x0, [sp, #40]
   36540:	cmp	x0, #0x0
   36544:	b.le	365cc <rpl_re_search_2@@Base+0x1d0>
   36548:	ldr	x0, [sp, #56]
   3654c:	cmp	x0, #0x0
   36550:	b.le	365c0 <rpl_re_search_2@@Base+0x1c4>
   36554:	ldr	x0, [sp, #80]
   36558:	bl	ab40 <malloc@plt>
   3655c:	str	x0, [sp, #96]
   36560:	ldr	x0, [sp, #96]
   36564:	cmp	x0, #0x0
   36568:	cset	w0, eq  // eq = none
   3656c:	and	w0, w0, #0xff
   36570:	and	x0, x0, #0xff
   36574:	cmp	x0, #0x0
   36578:	b.eq	36584 <rpl_re_search_2@@Base+0x188>  // b.none
   3657c:	mov	x0, #0xfffffffffffffffe    	// #-2
   36580:	b	3660c <rpl_re_search_2@@Base+0x210>
   36584:	ldr	x0, [sp, #56]
   36588:	mov	x2, x0
   3658c:	ldr	x1, [sp, #64]
   36590:	ldr	x0, [sp, #96]
   36594:	bl	a790 <memcpy@plt>
   36598:	ldr	x0, [sp, #56]
   3659c:	ldr	x1, [sp, #96]
   365a0:	add	x0, x1, x0
   365a4:	ldr	x1, [sp, #40]
   365a8:	mov	x2, x1
   365ac:	ldr	x1, [sp, #48]
   365b0:	bl	a790 <memcpy@plt>
   365b4:	ldr	x0, [sp, #96]
   365b8:	str	x0, [sp, #104]
   365bc:	b	365d4 <rpl_re_search_2@@Base+0x1d8>
   365c0:	ldr	x0, [sp, #48]
   365c4:	str	x0, [sp, #104]
   365c8:	b	365d4 <rpl_re_search_2@@Base+0x1d8>
   365cc:	ldr	x0, [sp, #64]
   365d0:	str	x0, [sp, #104]
   365d4:	ldr	x0, [sp, #80]
   365d8:	ldrb	w7, [sp, #120]
   365dc:	ldr	x6, [sp, #16]
   365e0:	ldr	x5, [sp, #112]
   365e4:	ldr	x4, [sp, #24]
   365e8:	ldr	x3, [sp, #32]
   365ec:	mov	x2, x0
   365f0:	ldr	x1, [sp, #104]
   365f4:	ldr	x0, [sp, #72]
   365f8:	bl	36614 <rpl_re_search_2@@Base+0x218>
   365fc:	str	x0, [sp, #88]
   36600:	ldr	x0, [sp, #96]
   36604:	bl	b130 <free@plt>
   36608:	ldr	x0, [sp, #88]
   3660c:	ldp	x29, x30, [sp], #112
   36610:	ret
   36614:	sub	sp, sp, #0xa0
   36618:	stp	x29, x30, [sp, #16]
   3661c:	add	x29, sp, #0x10
   36620:	str	x0, [sp, #88]
   36624:	str	x1, [sp, #80]
   36628:	str	x2, [sp, #72]
   3662c:	str	x3, [sp, #64]
   36630:	str	x4, [sp, #56]
   36634:	str	x5, [sp, #48]
   36638:	str	x6, [sp, #40]
   3663c:	strb	w7, [sp, #39]
   36640:	str	wzr, [sp, #132]
   36644:	ldr	x0, [sp, #88]
   36648:	ldr	x0, [x0]
   3664c:	str	x0, [sp, #120]
   36650:	ldr	x1, [sp, #64]
   36654:	ldr	x0, [sp, #56]
   36658:	add	x0, x1, x0
   3665c:	str	x0, [sp, #136]
   36660:	ldr	x0, [sp, #64]
   36664:	lsr	x0, x0, #63
   36668:	and	w0, w0, #0xff
   3666c:	and	x0, x0, #0xff
   36670:	cmp	x0, #0x0
   36674:	b.ne	36698 <rpl_re_search_2@@Base+0x29c>  // b.any
   36678:	ldr	x1, [sp, #64]
   3667c:	ldr	x0, [sp, #72]
   36680:	cmp	x1, x0
   36684:	cset	w0, gt
   36688:	and	w0, w0, #0xff
   3668c:	and	x0, x0, #0xff
   36690:	cmp	x0, #0x0
   36694:	b.eq	366a0 <rpl_re_search_2@@Base+0x2a4>  // b.none
   36698:	mov	x0, #0xffffffffffffffff    	// #-1
   3669c:	b	36ad4 <rpl_re_search_2@@Base+0x6d8>
   366a0:	ldr	x1, [sp, #72]
   366a4:	ldr	x0, [sp, #136]
   366a8:	cmp	x1, x0
   366ac:	cset	w0, lt  // lt = tstop
   366b0:	and	w0, w0, #0xff
   366b4:	and	x0, x0, #0xff
   366b8:	cmp	x0, #0x0
   366bc:	b.ne	36710 <rpl_re_search_2@@Base+0x314>  // b.any
   366c0:	ldr	x0, [sp, #56]
   366c4:	mvn	x0, x0
   366c8:	lsr	x0, x0, #63
   366cc:	and	w0, w0, #0xff
   366d0:	and	x0, x0, #0xff
   366d4:	cmp	x0, #0x0
   366d8:	b.eq	36704 <rpl_re_search_2@@Base+0x308>  // b.none
   366dc:	ldr	x1, [sp, #136]
   366e0:	ldr	x0, [sp, #64]
   366e4:	cmp	x1, x0
   366e8:	cset	w0, lt  // lt = tstop
   366ec:	and	w0, w0, #0xff
   366f0:	and	x0, x0, #0xff
   366f4:	cmp	x0, #0x0
   366f8:	b.eq	36704 <rpl_re_search_2@@Base+0x308>  // b.none
   366fc:	mov	w0, #0x1                   	// #1
   36700:	b	36708 <rpl_re_search_2@@Base+0x30c>
   36704:	mov	w0, #0x0                   	// #0
   36708:	cmp	w0, #0x0
   3670c:	b.eq	3671c <rpl_re_search_2@@Base+0x320>  // b.none
   36710:	ldr	x0, [sp, #72]
   36714:	str	x0, [sp, #136]
   36718:	b	36784 <rpl_re_search_2@@Base+0x388>
   3671c:	ldr	x0, [sp, #136]
   36720:	lsr	x0, x0, #63
   36724:	and	w0, w0, #0xff
   36728:	and	x0, x0, #0xff
   3672c:	cmp	x0, #0x0
   36730:	b.ne	36780 <rpl_re_search_2@@Base+0x384>  // b.any
   36734:	ldr	x0, [sp, #56]
   36738:	lsr	x0, x0, #63
   3673c:	and	w0, w0, #0xff
   36740:	and	x0, x0, #0xff
   36744:	cmp	x0, #0x0
   36748:	b.eq	36774 <rpl_re_search_2@@Base+0x378>  // b.none
   3674c:	ldr	x1, [sp, #64]
   36750:	ldr	x0, [sp, #136]
   36754:	cmp	x1, x0
   36758:	cset	w0, le
   3675c:	and	w0, w0, #0xff
   36760:	and	x0, x0, #0xff
   36764:	cmp	x0, #0x0
   36768:	b.eq	36774 <rpl_re_search_2@@Base+0x378>  // b.none
   3676c:	mov	w0, #0x1                   	// #1
   36770:	b	36778 <rpl_re_search_2@@Base+0x37c>
   36774:	mov	w0, #0x0                   	// #0
   36778:	cmp	w0, #0x0
   3677c:	b.eq	36784 <rpl_re_search_2@@Base+0x388>  // b.none
   36780:	str	xzr, [sp, #136]
   36784:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   36788:	ldr	x0, [x0, #4040]
   3678c:	cmp	x0, #0x0
   36790:	b.ne	367a4 <rpl_re_search_2@@Base+0x3a8>  // b.any
   36794:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   36798:	ldr	x0, [x0, #3944]
   3679c:	cmp	x0, #0x0
   367a0:	b.eq	367b4 <rpl_re_search_2@@Base+0x3b8>  // b.none
   367a4:	ldr	x0, [sp, #120]
   367a8:	add	x0, x0, #0xe8
   367ac:	bl	b6a0 <pthread_mutex_lock@plt>
   367b0:	nop
   367b4:	ldr	x0, [sp, #88]
   367b8:	ldrb	w0, [x0, #56]
   367bc:	lsr	w0, w0, #5
   367c0:	and	w0, w0, #0xff
   367c4:	and	w0, w0, #0x1
   367c8:	ldr	w1, [sp, #132]
   367cc:	orr	w0, w1, w0
   367d0:	str	w0, [sp, #132]
   367d4:	ldr	x0, [sp, #88]
   367d8:	ldrb	w0, [x0, #56]
   367dc:	lsr	w0, w0, #5
   367e0:	and	w0, w0, #0xff
   367e4:	and	w0, w0, #0x2
   367e8:	ldr	w1, [sp, #132]
   367ec:	orr	w0, w1, w0
   367f0:	str	w0, [sp, #132]
   367f4:	ldr	x1, [sp, #64]
   367f8:	ldr	x0, [sp, #136]
   367fc:	cmp	x1, x0
   36800:	b.ge	36834 <rpl_re_search_2@@Base+0x438>  // b.tcont
   36804:	ldr	x0, [sp, #88]
   36808:	ldr	x0, [x0, #32]
   3680c:	cmp	x0, #0x0
   36810:	b.eq	36834 <rpl_re_search_2@@Base+0x438>  // b.none
   36814:	ldr	x0, [sp, #88]
   36818:	ldrb	w0, [x0, #56]
   3681c:	and	w0, w0, #0x8
   36820:	and	w0, w0, #0xff
   36824:	cmp	w0, #0x0
   36828:	b.ne	36834 <rpl_re_search_2@@Base+0x438>  // b.any
   3682c:	ldr	x0, [sp, #88]
   36830:	bl	b740 <rpl_re_compile_fastmap@plt>
   36834:	ldr	x0, [sp, #88]
   36838:	ldrb	w0, [x0, #56]
   3683c:	ubfx	x0, x0, #4, #1
   36840:	and	w0, w0, #0xff
   36844:	and	x0, x0, #0xff
   36848:	cmp	x0, #0x0
   3684c:	b.eq	36854 <rpl_re_search_2@@Base+0x458>  // b.none
   36850:	str	xzr, [sp, #40]
   36854:	ldr	x0, [sp, #40]
   36858:	cmp	x0, #0x0
   3685c:	b.ne	3686c <rpl_re_search_2@@Base+0x470>  // b.any
   36860:	mov	x0, #0x1                   	// #1
   36864:	str	x0, [sp, #152]
   36868:	b	36904 <rpl_re_search_2@@Base+0x508>
   3686c:	ldr	x0, [sp, #88]
   36870:	ldrb	w0, [x0, #56]
   36874:	and	w0, w0, #0x6
   36878:	and	w0, w0, #0xff
   3687c:	cmp	w0, #0x4
   36880:	cset	w0, eq  // eq = none
   36884:	and	w0, w0, #0xff
   36888:	and	x0, x0, #0xff
   3688c:	cmp	x0, #0x0
   36890:	b.eq	368f4 <rpl_re_search_2@@Base+0x4f8>  // b.none
   36894:	ldr	x0, [sp, #40]
   36898:	ldr	x1, [x0]
   3689c:	ldr	x0, [sp, #88]
   368a0:	ldr	x0, [x0, #48]
   368a4:	cmp	x1, x0
   368a8:	cset	w0, ls  // ls = plast
   368ac:	and	w0, w0, #0xff
   368b0:	and	x0, x0, #0xff
   368b4:	cmp	x0, #0x0
   368b8:	b.eq	368f4 <rpl_re_search_2@@Base+0x4f8>  // b.none
   368bc:	ldr	x0, [sp, #40]
   368c0:	ldr	x0, [x0]
   368c4:	str	x0, [sp, #152]
   368c8:	ldr	x0, [sp, #152]
   368cc:	cmp	x0, #0x0
   368d0:	cset	w0, le
   368d4:	and	w0, w0, #0xff
   368d8:	and	x0, x0, #0xff
   368dc:	cmp	x0, #0x0
   368e0:	b.eq	36904 <rpl_re_search_2@@Base+0x508>  // b.none
   368e4:	str	xzr, [sp, #40]
   368e8:	mov	x0, #0x1                   	// #1
   368ec:	str	x0, [sp, #152]
   368f0:	b	36904 <rpl_re_search_2@@Base+0x508>
   368f4:	ldr	x0, [sp, #88]
   368f8:	ldr	x0, [x0, #48]
   368fc:	add	x0, x0, #0x1
   36900:	str	x0, [sp, #152]
   36904:	ldr	x0, [sp, #152]
   36908:	lsl	x0, x0, #4
   3690c:	bl	ab40 <malloc@plt>
   36910:	str	x0, [sp, #112]
   36914:	ldr	x0, [sp, #112]
   36918:	cmp	x0, #0x0
   3691c:	cset	w0, eq  // eq = none
   36920:	and	w0, w0, #0xff
   36924:	and	x0, x0, #0xff
   36928:	cmp	x0, #0x0
   3692c:	b.eq	3693c <rpl_re_search_2@@Base+0x540>  // b.none
   36930:	mov	x0, #0xfffffffffffffffe    	// #-2
   36934:	str	x0, [sp, #144]
   36938:	b	36aa0 <rpl_re_search_2@@Base+0x6a4>
   3693c:	ldr	x1, [sp, #152]
   36940:	ldr	w0, [sp, #132]
   36944:	str	w0, [sp]
   36948:	ldr	x7, [sp, #112]
   3694c:	mov	x6, x1
   36950:	ldr	x5, [sp, #48]
   36954:	ldr	x4, [sp, #136]
   36958:	ldr	x3, [sp, #64]
   3695c:	ldr	x2, [sp, #72]
   36960:	ldr	x1, [sp, #80]
   36964:	ldr	x0, [sp, #88]
   36968:	bl	36e84 <rpl_re_set_registers@@Base+0x9c>
   3696c:	str	w0, [sp, #108]
   36970:	str	xzr, [sp, #144]
   36974:	ldr	w0, [sp, #108]
   36978:	cmp	w0, #0x0
   3697c:	b.eq	369a0 <rpl_re_search_2@@Base+0x5a4>  // b.none
   36980:	ldr	w0, [sp, #108]
   36984:	cmp	w0, #0x1
   36988:	b.ne	36994 <rpl_re_search_2@@Base+0x598>  // b.any
   3698c:	mov	x0, #0xffffffffffffffff    	// #-1
   36990:	b	36998 <rpl_re_search_2@@Base+0x59c>
   36994:	mov	x0, #0xfffffffffffffffe    	// #-2
   36998:	str	x0, [sp, #144]
   3699c:	b	36a18 <rpl_re_search_2@@Base+0x61c>
   369a0:	ldr	x0, [sp, #40]
   369a4:	cmp	x0, #0x0
   369a8:	b.eq	36a18 <rpl_re_search_2@@Base+0x61c>  // b.none
   369ac:	ldr	x0, [sp, #88]
   369b0:	ldrb	w0, [x0, #56]
   369b4:	ubfx	x0, x0, #1, #2
   369b8:	and	w0, w0, #0xff
   369bc:	mov	w3, w0
   369c0:	ldr	x2, [sp, #152]
   369c4:	ldr	x1, [sp, #112]
   369c8:	ldr	x0, [sp, #40]
   369cc:	bl	36ae0 <rpl_re_search_2@@Base+0x6e4>
   369d0:	and	w0, w0, #0x3
   369d4:	and	w2, w0, #0xff
   369d8:	ldr	x1, [sp, #88]
   369dc:	ldrb	w0, [x1, #56]
   369e0:	bfi	w0, w2, #1, #2
   369e4:	strb	w0, [x1, #56]
   369e8:	ldr	x0, [sp, #88]
   369ec:	ldrb	w0, [x0, #56]
   369f0:	and	w0, w0, #0x6
   369f4:	and	w0, w0, #0xff
   369f8:	cmp	w0, #0x0
   369fc:	cset	w0, eq  // eq = none
   36a00:	and	w0, w0, #0xff
   36a04:	and	x0, x0, #0xff
   36a08:	cmp	x0, #0x0
   36a0c:	b.eq	36a18 <rpl_re_search_2@@Base+0x61c>  // b.none
   36a10:	mov	x0, #0xfffffffffffffffe    	// #-2
   36a14:	str	x0, [sp, #144]
   36a18:	ldr	x0, [sp, #144]
   36a1c:	cmp	x0, #0x0
   36a20:	cset	w0, eq  // eq = none
   36a24:	and	w0, w0, #0xff
   36a28:	and	x0, x0, #0xff
   36a2c:	cmp	x0, #0x0
   36a30:	b.eq	36a98 <rpl_re_search_2@@Base+0x69c>  // b.none
   36a34:	ldrb	w0, [sp, #39]
   36a38:	cmp	w0, #0x0
   36a3c:	b.eq	36a8c <rpl_re_search_2@@Base+0x690>  // b.none
   36a40:	ldr	x0, [sp, #112]
   36a44:	ldr	x0, [x0]
   36a48:	ldr	x1, [sp, #64]
   36a4c:	cmp	x1, x0
   36a50:	b.eq	36a74 <rpl_re_search_2@@Base+0x678>  // b.none
   36a54:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   36a58:	add	x3, x0, #0x7d8
   36a5c:	mov	w2, #0x1be                 	// #446
   36a60:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   36a64:	add	x1, x0, #0x720
   36a68:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   36a6c:	add	x0, x0, #0x730
   36a70:	bl	b630 <__assert_fail@plt>
   36a74:	ldr	x0, [sp, #112]
   36a78:	ldr	x1, [x0, #8]
   36a7c:	ldr	x0, [sp, #64]
   36a80:	sub	x0, x1, x0
   36a84:	str	x0, [sp, #144]
   36a88:	b	36a98 <rpl_re_search_2@@Base+0x69c>
   36a8c:	ldr	x0, [sp, #112]
   36a90:	ldr	x0, [x0]
   36a94:	str	x0, [sp, #144]
   36a98:	ldr	x0, [sp, #112]
   36a9c:	bl	b130 <free@plt>
   36aa0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   36aa4:	ldr	x0, [x0, #4040]
   36aa8:	cmp	x0, #0x0
   36aac:	b.ne	36ac0 <rpl_re_search_2@@Base+0x6c4>  // b.any
   36ab0:	adrp	x0, 5c000 <vasnprintf@@Base+0x1be04>
   36ab4:	ldr	x0, [x0, #3944]
   36ab8:	cmp	x0, #0x0
   36abc:	b.eq	36ad0 <rpl_re_search_2@@Base+0x6d4>  // b.none
   36ac0:	ldr	x0, [sp, #120]
   36ac4:	add	x0, x0, #0xe8
   36ac8:	bl	b6d0 <pthread_mutex_unlock@plt>
   36acc:	nop
   36ad0:	ldr	x0, [sp, #144]
   36ad4:	ldp	x29, x30, [sp, #16]
   36ad8:	add	sp, sp, #0xa0
   36adc:	ret
   36ae0:	stp	x29, x30, [sp, #-96]!
   36ae4:	mov	x29, sp
   36ae8:	str	x0, [sp, #40]
   36aec:	str	x1, [sp, #32]
   36af0:	str	x2, [sp, #24]
   36af4:	str	w3, [sp, #20]
   36af8:	mov	w0, #0x1                   	// #1
   36afc:	str	w0, [sp, #92]
   36b00:	ldr	x0, [sp, #24]
   36b04:	add	x0, x0, #0x1
   36b08:	str	x0, [sp, #72]
   36b0c:	ldr	w0, [sp, #20]
   36b10:	cmp	w0, #0x0
   36b14:	b.ne	36bb4 <rpl_re_search_2@@Base+0x7b8>  // b.any
   36b18:	ldr	x0, [sp, #72]
   36b1c:	lsl	x0, x0, #3
   36b20:	bl	ab40 <malloc@plt>
   36b24:	mov	x1, x0
   36b28:	ldr	x0, [sp, #40]
   36b2c:	str	x1, [x0, #8]
   36b30:	ldr	x0, [sp, #40]
   36b34:	ldr	x0, [x0, #8]
   36b38:	cmp	x0, #0x0
   36b3c:	cset	w0, eq  // eq = none
   36b40:	and	w0, w0, #0xff
   36b44:	and	x0, x0, #0xff
   36b48:	cmp	x0, #0x0
   36b4c:	b.eq	36b58 <rpl_re_search_2@@Base+0x75c>  // b.none
   36b50:	mov	w0, #0x0                   	// #0
   36b54:	b	36de0 <rpl_re_search_2@@Base+0x9e4>
   36b58:	ldr	x0, [sp, #72]
   36b5c:	lsl	x0, x0, #3
   36b60:	bl	ab40 <malloc@plt>
   36b64:	mov	x1, x0
   36b68:	ldr	x0, [sp, #40]
   36b6c:	str	x1, [x0, #16]
   36b70:	ldr	x0, [sp, #40]
   36b74:	ldr	x0, [x0, #16]
   36b78:	cmp	x0, #0x0
   36b7c:	cset	w0, eq  // eq = none
   36b80:	and	w0, w0, #0xff
   36b84:	and	x0, x0, #0xff
   36b88:	cmp	x0, #0x0
   36b8c:	b.eq	36ba4 <rpl_re_search_2@@Base+0x7a8>  // b.none
   36b90:	ldr	x0, [sp, #40]
   36b94:	ldr	x0, [x0, #8]
   36b98:	bl	b130 <free@plt>
   36b9c:	mov	w0, #0x0                   	// #0
   36ba0:	b	36de0 <rpl_re_search_2@@Base+0x9e4>
   36ba4:	ldr	x1, [sp, #72]
   36ba8:	ldr	x0, [sp, #40]
   36bac:	str	x1, [x0]
   36bb0:	b	36d04 <rpl_re_search_2@@Base+0x908>
   36bb4:	ldr	w0, [sp, #20]
   36bb8:	cmp	w0, #0x1
   36bbc:	b.ne	36c9c <rpl_re_search_2@@Base+0x8a0>  // b.any
   36bc0:	ldr	x0, [sp, #40]
   36bc4:	ldr	x1, [x0]
   36bc8:	ldr	x0, [sp, #72]
   36bcc:	cmp	x1, x0
   36bd0:	cset	w0, cc  // cc = lo, ul, last
   36bd4:	and	w0, w0, #0xff
   36bd8:	and	x0, x0, #0xff
   36bdc:	cmp	x0, #0x0
   36be0:	b.eq	36d04 <rpl_re_search_2@@Base+0x908>  // b.none
   36be4:	ldr	x0, [sp, #40]
   36be8:	ldr	x2, [x0, #8]
   36bec:	ldr	x0, [sp, #72]
   36bf0:	lsl	x0, x0, #3
   36bf4:	mov	x1, x0
   36bf8:	mov	x0, x2
   36bfc:	bl	ae00 <realloc@plt>
   36c00:	str	x0, [sp, #64]
   36c04:	ldr	x0, [sp, #64]
   36c08:	cmp	x0, #0x0
   36c0c:	cset	w0, eq  // eq = none
   36c10:	and	w0, w0, #0xff
   36c14:	and	x0, x0, #0xff
   36c18:	cmp	x0, #0x0
   36c1c:	b.eq	36c28 <rpl_re_search_2@@Base+0x82c>  // b.none
   36c20:	mov	w0, #0x0                   	// #0
   36c24:	b	36de0 <rpl_re_search_2@@Base+0x9e4>
   36c28:	ldr	x0, [sp, #40]
   36c2c:	ldr	x2, [x0, #16]
   36c30:	ldr	x0, [sp, #72]
   36c34:	lsl	x0, x0, #3
   36c38:	mov	x1, x0
   36c3c:	mov	x0, x2
   36c40:	bl	ae00 <realloc@plt>
   36c44:	str	x0, [sp, #56]
   36c48:	ldr	x0, [sp, #56]
   36c4c:	cmp	x0, #0x0
   36c50:	cset	w0, eq  // eq = none
   36c54:	and	w0, w0, #0xff
   36c58:	and	x0, x0, #0xff
   36c5c:	cmp	x0, #0x0
   36c60:	b.eq	36c74 <rpl_re_search_2@@Base+0x878>  // b.none
   36c64:	ldr	x0, [sp, #64]
   36c68:	bl	b130 <free@plt>
   36c6c:	mov	w0, #0x0                   	// #0
   36c70:	b	36de0 <rpl_re_search_2@@Base+0x9e4>
   36c74:	ldr	x0, [sp, #40]
   36c78:	ldr	x1, [sp, #64]
   36c7c:	str	x1, [x0, #8]
   36c80:	ldr	x0, [sp, #40]
   36c84:	ldr	x1, [sp, #56]
   36c88:	str	x1, [x0, #16]
   36c8c:	ldr	x1, [sp, #72]
   36c90:	ldr	x0, [sp, #40]
   36c94:	str	x1, [x0]
   36c98:	b	36d04 <rpl_re_search_2@@Base+0x908>
   36c9c:	ldr	w0, [sp, #20]
   36ca0:	cmp	w0, #0x2
   36ca4:	b.eq	36cc8 <rpl_re_search_2@@Base+0x8cc>  // b.none
   36ca8:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   36cac:	add	x3, x0, #0x7e8
   36cb0:	mov	w2, #0x1f9                 	// #505
   36cb4:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   36cb8:	add	x1, x0, #0x720
   36cbc:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   36cc0:	add	x0, x0, #0x750
   36cc4:	bl	b630 <__assert_fail@plt>
   36cc8:	ldr	x0, [sp, #40]
   36ccc:	ldr	x1, [x0]
   36cd0:	ldr	x0, [sp, #24]
   36cd4:	cmp	x1, x0
   36cd8:	b.cs	36cfc <rpl_re_search_2@@Base+0x900>  // b.hs, b.nlast
   36cdc:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   36ce0:	add	x3, x0, #0x7e8
   36ce4:	mov	w2, #0x1fb                 	// #507
   36ce8:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   36cec:	add	x1, x0, #0x720
   36cf0:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   36cf4:	add	x0, x0, #0x770
   36cf8:	bl	b630 <__assert_fail@plt>
   36cfc:	mov	w0, #0x2                   	// #2
   36d00:	str	w0, [sp, #92]
   36d04:	str	xzr, [sp, #80]
   36d08:	b	36d70 <rpl_re_search_2@@Base+0x974>
   36d0c:	ldr	x0, [sp, #80]
   36d10:	lsl	x0, x0, #4
   36d14:	ldr	x1, [sp, #32]
   36d18:	add	x1, x1, x0
   36d1c:	ldr	x0, [sp, #40]
   36d20:	ldr	x2, [x0, #8]
   36d24:	ldr	x0, [sp, #80]
   36d28:	lsl	x0, x0, #3
   36d2c:	add	x0, x2, x0
   36d30:	ldr	x1, [x1]
   36d34:	str	x1, [x0]
   36d38:	ldr	x0, [sp, #80]
   36d3c:	lsl	x0, x0, #4
   36d40:	ldr	x1, [sp, #32]
   36d44:	add	x1, x1, x0
   36d48:	ldr	x0, [sp, #40]
   36d4c:	ldr	x2, [x0, #16]
   36d50:	ldr	x0, [sp, #80]
   36d54:	lsl	x0, x0, #3
   36d58:	add	x0, x2, x0
   36d5c:	ldr	x1, [x1, #8]
   36d60:	str	x1, [x0]
   36d64:	ldr	x0, [sp, #80]
   36d68:	add	x0, x0, #0x1
   36d6c:	str	x0, [sp, #80]
   36d70:	ldr	x1, [sp, #80]
   36d74:	ldr	x0, [sp, #24]
   36d78:	cmp	x1, x0
   36d7c:	b.lt	36d0c <rpl_re_search_2@@Base+0x910>  // b.tstop
   36d80:	b	36dc8 <rpl_re_search_2@@Base+0x9cc>
   36d84:	ldr	x0, [sp, #40]
   36d88:	ldr	x1, [x0, #16]
   36d8c:	ldr	x0, [sp, #80]
   36d90:	lsl	x0, x0, #3
   36d94:	add	x0, x1, x0
   36d98:	mov	x1, #0xffffffffffffffff    	// #-1
   36d9c:	str	x1, [x0]
   36da0:	ldr	x1, [sp, #40]
   36da4:	ldr	x2, [x1, #8]
   36da8:	ldr	x1, [sp, #80]
   36dac:	lsl	x1, x1, #3
   36db0:	add	x1, x2, x1
   36db4:	ldr	x0, [x0]
   36db8:	str	x0, [x1]
   36dbc:	ldr	x0, [sp, #80]
   36dc0:	add	x0, x0, #0x1
   36dc4:	str	x0, [sp, #80]
   36dc8:	ldr	x0, [sp, #40]
   36dcc:	ldr	x1, [x0]
   36dd0:	ldr	x0, [sp, #80]
   36dd4:	cmp	x1, x0
   36dd8:	b.hi	36d84 <rpl_re_search_2@@Base+0x988>  // b.pmore
   36ddc:	ldr	w0, [sp, #92]
   36de0:	ldp	x29, x30, [sp], #96
   36de4:	ret

0000000000036de8 <rpl_re_set_registers@@Base>:
   36de8:	sub	sp, sp, #0x30
   36dec:	str	x0, [sp, #40]
   36df0:	str	x1, [sp, #32]
   36df4:	str	x2, [sp, #24]
   36df8:	str	x3, [sp, #16]
   36dfc:	str	x4, [sp, #8]
   36e00:	ldr	x0, [sp, #24]
   36e04:	cmp	x0, #0x0
   36e08:	b.eq	36e48 <rpl_re_set_registers@@Base+0x60>  // b.none
   36e0c:	ldr	x1, [sp, #40]
   36e10:	ldrb	w0, [x1, #56]
   36e14:	mov	w2, #0x1                   	// #1
   36e18:	bfi	w0, w2, #1, #2
   36e1c:	strb	w0, [x1, #56]
   36e20:	ldr	x0, [sp, #32]
   36e24:	ldr	x1, [sp, #24]
   36e28:	str	x1, [x0]
   36e2c:	ldr	x0, [sp, #32]
   36e30:	ldr	x1, [sp, #16]
   36e34:	str	x1, [x0, #8]
   36e38:	ldr	x0, [sp, #32]
   36e3c:	ldr	x1, [sp, #8]
   36e40:	str	x1, [x0, #16]
   36e44:	b	36e78 <rpl_re_set_registers@@Base+0x90>
   36e48:	ldr	x0, [sp, #40]
   36e4c:	ldrb	w1, [x0, #56]
   36e50:	and	w1, w1, #0xfffffff9
   36e54:	strb	w1, [x0, #56]
   36e58:	ldr	x0, [sp, #32]
   36e5c:	str	xzr, [x0]
   36e60:	ldr	x0, [sp, #32]
   36e64:	str	xzr, [x0, #16]
   36e68:	ldr	x0, [sp, #32]
   36e6c:	ldr	x1, [x0, #16]
   36e70:	ldr	x0, [sp, #32]
   36e74:	str	x1, [x0, #8]
   36e78:	nop
   36e7c:	add	sp, sp, #0x30
   36e80:	ret
   36e84:	stp	x29, x30, [sp, #-464]!
   36e88:	mov	x29, sp
   36e8c:	str	x0, [sp, #72]
   36e90:	str	x1, [sp, #64]
   36e94:	str	x2, [sp, #56]
   36e98:	str	x3, [sp, #48]
   36e9c:	str	x4, [sp, #40]
   36ea0:	str	x5, [sp, #32]
   36ea4:	str	x6, [sp, #24]
   36ea8:	str	x7, [sp, #16]
   36eac:	ldr	x0, [sp, #72]
   36eb0:	ldr	x0, [x0]
   36eb4:	str	x0, [sp, #432]
   36eb8:	mov	x0, #0xffffffffffffffff    	// #-1
   36ebc:	str	x0, [sp, #424]
   36ec0:	add	x0, sp, #0x58
   36ec4:	mov	x1, #0x100                 	// #256
   36ec8:	mov	x2, x1
   36ecc:	mov	w1, #0x0                   	// #0
   36ed0:	bl	acb0 <memset@plt>
   36ed4:	ldr	x0, [sp, #432]
   36ed8:	str	x0, [sp, #240]
   36edc:	ldr	x0, [sp, #72]
   36ee0:	ldr	x0, [x0, #32]
   36ee4:	cmp	x0, #0x0
   36ee8:	b.eq	36f38 <rpl_re_set_registers@@Base+0x150>  // b.none
   36eec:	ldr	x0, [sp, #72]
   36ef0:	ldrb	w0, [x0, #56]
   36ef4:	and	w0, w0, #0x8
   36ef8:	and	w0, w0, #0xff
   36efc:	cmp	w0, #0x0
   36f00:	b.eq	36f38 <rpl_re_set_registers@@Base+0x150>  // b.none
   36f04:	ldr	x1, [sp, #48]
   36f08:	ldr	x0, [sp, #40]
   36f0c:	cmp	x1, x0
   36f10:	b.eq	36f38 <rpl_re_set_registers@@Base+0x150>  // b.none
   36f14:	ldr	x0, [sp, #72]
   36f18:	ldrb	w0, [x0, #56]
   36f1c:	and	w0, w0, #0x1
   36f20:	and	w0, w0, #0xff
   36f24:	cmp	w0, #0x0
   36f28:	b.ne	36f38 <rpl_re_set_registers@@Base+0x150>  // b.any
   36f2c:	ldr	x0, [sp, #72]
   36f30:	ldr	x0, [x0, #32]
   36f34:	b	36f3c <rpl_re_set_registers@@Base+0x154>
   36f38:	mov	x0, #0x0                   	// #0
   36f3c:	str	x0, [sp, #416]
   36f40:	ldr	x0, [sp, #72]
   36f44:	ldr	x0, [x0, #40]
   36f48:	str	x0, [sp, #408]
   36f4c:	ldr	x0, [sp, #72]
   36f50:	ldr	x0, [x0, #48]
   36f54:	ldr	x1, [sp, #24]
   36f58:	cmp	x1, x0
   36f5c:	b.ls	36f78 <rpl_re_set_registers@@Base+0x190>  // b.plast
   36f60:	ldr	x0, [sp, #72]
   36f64:	ldr	x0, [x0, #48]
   36f68:	ldr	x1, [sp, #24]
   36f6c:	sub	x0, x1, x0
   36f70:	sub	x0, x0, #0x1
   36f74:	b	36f7c <rpl_re_set_registers@@Base+0x194>
   36f78:	mov	x0, #0x0                   	// #0
   36f7c:	str	x0, [sp, #400]
   36f80:	ldr	x0, [sp, #400]
   36f84:	ldr	x1, [sp, #24]
   36f88:	sub	x0, x1, x0
   36f8c:	str	x0, [sp, #24]
   36f90:	ldr	x0, [sp, #72]
   36f94:	ldr	x0, [x0, #16]
   36f98:	cmp	x0, #0x0
   36f9c:	cset	w0, eq  // eq = none
   36fa0:	and	w0, w0, #0xff
   36fa4:	and	x0, x0, #0xff
   36fa8:	cmp	x0, #0x0
   36fac:	b.ne	36fd0 <rpl_re_set_registers@@Base+0x1e8>  // b.any
   36fb0:	ldr	x0, [sp, #432]
   36fb4:	ldr	x0, [x0, #72]
   36fb8:	cmp	x0, #0x0
   36fbc:	cset	w0, eq  // eq = none
   36fc0:	and	w0, w0, #0xff
   36fc4:	and	x0, x0, #0xff
   36fc8:	cmp	x0, #0x0
   36fcc:	b.eq	36fd8 <rpl_re_set_registers@@Base+0x1f0>  // b.none
   36fd0:	mov	w0, #0x1                   	// #1
   36fd4:	b	36fdc <rpl_re_set_registers@@Base+0x1f4>
   36fd8:	mov	w0, #0x0                   	// #0
   36fdc:	cmp	w0, #0x0
   36fe0:	b.ne	37004 <rpl_re_set_registers@@Base+0x21c>  // b.any
   36fe4:	ldr	x0, [sp, #432]
   36fe8:	ldr	x0, [x0, #80]
   36fec:	cmp	x0, #0x0
   36ff0:	cset	w0, eq  // eq = none
   36ff4:	and	w0, w0, #0xff
   36ff8:	and	x0, x0, #0xff
   36ffc:	cmp	x0, #0x0
   37000:	b.eq	3700c <rpl_re_set_registers@@Base+0x224>  // b.none
   37004:	mov	w0, #0x1                   	// #1
   37008:	b	37010 <rpl_re_set_registers@@Base+0x228>
   3700c:	mov	w0, #0x0                   	// #0
   37010:	cmp	w0, #0x0
   37014:	b.ne	37038 <rpl_re_set_registers@@Base+0x250>  // b.any
   37018:	ldr	x0, [sp, #432]
   3701c:	ldr	x0, [x0, #88]
   37020:	cmp	x0, #0x0
   37024:	cset	w0, eq  // eq = none
   37028:	and	w0, w0, #0xff
   3702c:	and	x0, x0, #0xff
   37030:	cmp	x0, #0x0
   37034:	b.eq	37040 <rpl_re_set_registers@@Base+0x258>  // b.none
   37038:	mov	w0, #0x1                   	// #1
   3703c:	b	37044 <rpl_re_set_registers@@Base+0x25c>
   37040:	mov	w0, #0x0                   	// #0
   37044:	cmp	w0, #0x0
   37048:	b.ne	3706c <rpl_re_set_registers@@Base+0x284>  // b.any
   3704c:	ldr	x0, [sp, #432]
   37050:	ldr	x0, [x0, #96]
   37054:	cmp	x0, #0x0
   37058:	cset	w0, eq  // eq = none
   3705c:	and	w0, w0, #0xff
   37060:	and	x0, x0, #0xff
   37064:	cmp	x0, #0x0
   37068:	b.eq	37074 <rpl_re_set_registers@@Base+0x28c>  // b.none
   3706c:	mov	w0, #0x1                   	// #1
   37070:	b	37d70 <rpl_re_set_registers@@Base+0xf88>
   37074:	ldr	x0, [sp, #432]
   37078:	ldr	x0, [x0, #72]
   3707c:	ldr	x0, [x0, #16]
   37080:	cmp	x0, #0x0
   37084:	b.ne	370f4 <rpl_re_set_registers@@Base+0x30c>  // b.any
   37088:	ldr	x0, [sp, #432]
   3708c:	ldr	x0, [x0, #80]
   37090:	ldr	x0, [x0, #16]
   37094:	cmp	x0, #0x0
   37098:	b.ne	370f4 <rpl_re_set_registers@@Base+0x30c>  // b.any
   3709c:	ldr	x0, [sp, #432]
   370a0:	ldr	x0, [x0, #88]
   370a4:	ldr	x0, [x0, #16]
   370a8:	cmp	x0, #0x0
   370ac:	b.eq	370c8 <rpl_re_set_registers@@Base+0x2e0>  // b.none
   370b0:	ldr	x0, [sp, #72]
   370b4:	ldrb	w0, [x0, #56]
   370b8:	and	w0, w0, #0xffffff80
   370bc:	and	w0, w0, #0xff
   370c0:	cmp	w0, #0x0
   370c4:	b.ne	370f4 <rpl_re_set_registers@@Base+0x30c>  // b.any
   370c8:	ldr	x0, [sp, #48]
   370cc:	cmp	x0, #0x0
   370d0:	b.eq	370e8 <rpl_re_set_registers@@Base+0x300>  // b.none
   370d4:	ldr	x0, [sp, #40]
   370d8:	cmp	x0, #0x0
   370dc:	b.eq	370e8 <rpl_re_set_registers@@Base+0x300>  // b.none
   370e0:	mov	w0, #0x1                   	// #1
   370e4:	b	37d70 <rpl_re_set_registers@@Base+0xf88>
   370e8:	str	xzr, [sp, #40]
   370ec:	ldr	x0, [sp, #40]
   370f0:	str	x0, [sp, #48]
   370f4:	ldr	x0, [sp, #24]
   370f8:	cmp	x0, #0x0
   370fc:	b.ne	37110 <rpl_re_set_registers@@Base+0x328>  // b.any
   37100:	ldr	x0, [sp, #432]
   37104:	ldr	x0, [x0, #152]
   37108:	cmp	x0, #0x0
   3710c:	b.eq	37118 <rpl_re_set_registers@@Base+0x330>  // b.none
   37110:	mov	w0, #0x1                   	// #1
   37114:	b	3711c <rpl_re_set_registers@@Base+0x334>
   37118:	mov	w0, #0x0                   	// #0
   3711c:	strb	w0, [sp, #399]
   37120:	ldrb	w0, [sp, #399]
   37124:	and	w0, w0, #0x1
   37128:	strb	w0, [sp, #399]
   3712c:	ldr	x0, [sp, #432]
   37130:	ldr	x0, [x0, #16]
   37134:	add	x0, x0, #0x1
   37138:	mov	x3, x0
   3713c:	ldr	x0, [sp, #72]
   37140:	ldr	x1, [x0, #40]
   37144:	ldr	x0, [sp, #72]
   37148:	ldr	x0, [x0, #24]
   3714c:	and	x0, x0, #0x400000
   37150:	cmp	x0, #0x0
   37154:	cset	w0, ne  // ne = any
   37158:	and	w2, w0, #0xff
   3715c:	add	x0, sp, #0x58
   37160:	ldr	x6, [sp, #432]
   37164:	mov	w5, w2
   37168:	mov	x4, x1
   3716c:	ldr	x2, [sp, #56]
   37170:	ldr	x1, [sp, #64]
   37174:	bl	28b70 <printf_parse@@Base+0x1878>
   37178:	str	w0, [sp, #460]
   3717c:	ldr	w0, [sp, #460]
   37180:	cmp	w0, #0x0
   37184:	cset	w0, ne  // ne = any
   37188:	and	w0, w0, #0xff
   3718c:	and	x0, x0, #0xff
   37190:	cmp	x0, #0x0
   37194:	b.ne	37d08 <rpl_re_set_registers@@Base+0xf20>  // b.any
   37198:	ldr	x0, [sp, #32]
   3719c:	str	x0, [sp, #192]
   371a0:	ldr	x0, [sp, #32]
   371a4:	str	x0, [sp, #184]
   371a8:	ldr	x0, [sp, #72]
   371ac:	ldrb	w0, [x0, #56]
   371b0:	ubfx	x0, x0, #7, #1
   371b4:	and	w0, w0, #0xff
   371b8:	strb	w0, [sp, #229]
   371bc:	ldr	x0, [sp, #432]
   371c0:	ldr	x0, [x0, #152]
   371c4:	lsl	x1, x0, #1
   371c8:	add	x0, sp, #0x58
   371cc:	mov	x2, x1
   371d0:	ldr	w1, [sp, #464]
   371d4:	bl	3f868 <rpl_re_set_registers@@Base+0x8a80>
   371d8:	str	w0, [sp, #460]
   371dc:	ldr	w0, [sp, #460]
   371e0:	cmp	w0, #0x0
   371e4:	cset	w0, ne  // ne = any
   371e8:	and	w0, w0, #0xff
   371ec:	and	x0, x0, #0xff
   371f0:	cmp	x0, #0x0
   371f4:	b.ne	37d10 <rpl_re_set_registers@@Base+0xf28>  // b.any
   371f8:	ldr	x0, [sp, #24]
   371fc:	cmp	x0, #0x1
   37200:	b.hi	3721c <rpl_re_set_registers@@Base+0x434>  // b.pmore
   37204:	ldr	x0, [sp, #432]
   37208:	ldrb	w0, [x0, #176]
   3720c:	and	w0, w0, #0x2
   37210:	and	w0, w0, #0xff
   37214:	cmp	w0, #0x0
   37218:	b.eq	37288 <rpl_re_set_registers@@Base+0x4a0>  // b.none
   3721c:	ldr	x0, [sp, #152]
   37220:	mov	x1, x0
   37224:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
   37228:	cmp	x1, x0
   3722c:	cset	w0, hi  // hi = pmore
   37230:	and	w0, w0, #0xff
   37234:	and	x0, x0, #0xff
   37238:	cmp	x0, #0x0
   3723c:	b.eq	3724c <rpl_re_set_registers@@Base+0x464>  // b.none
   37240:	mov	w0, #0xc                   	// #12
   37244:	str	w0, [sp, #460]
   37248:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   3724c:	ldr	x0, [sp, #152]
   37250:	add	x0, x0, #0x1
   37254:	lsl	x0, x0, #3
   37258:	bl	ab40 <malloc@plt>
   3725c:	str	x0, [sp, #272]
   37260:	ldr	x0, [sp, #272]
   37264:	cmp	x0, #0x0
   37268:	cset	w0, eq  // eq = none
   3726c:	and	w0, w0, #0xff
   37270:	and	x0, x0, #0xff
   37274:	cmp	x0, #0x0
   37278:	b.eq	3728c <rpl_re_set_registers@@Base+0x4a4>  // b.none
   3727c:	mov	w0, #0xc                   	// #12
   37280:	str	w0, [sp, #460]
   37284:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37288:	str	xzr, [sp, #272]
   3728c:	ldr	x0, [sp, #48]
   37290:	str	x0, [sp, #344]
   37294:	ldr	w0, [sp, #464]
   37298:	and	w0, w0, #0x1
   3729c:	cmp	w0, #0x0
   372a0:	b.eq	372ac <rpl_re_set_registers@@Base+0x4c4>  // b.none
   372a4:	mov	w0, #0x4                   	// #4
   372a8:	b	372b0 <rpl_re_set_registers@@Base+0x4c8>
   372ac:	mov	w0, #0x6                   	// #6
   372b0:	str	w0, [sp, #200]
   372b4:	ldr	x1, [sp, #40]
   372b8:	ldr	x0, [sp, #48]
   372bc:	cmp	x1, x0
   372c0:	b.ge	372cc <rpl_re_set_registers@@Base+0x4e4>  // b.tcont
   372c4:	mov	w0, #0xffffffff            	// #-1
   372c8:	b	372d0 <rpl_re_set_registers@@Base+0x4e8>
   372cc:	mov	w0, #0x1                   	// #1
   372d0:	str	w0, [sp, #392]
   372d4:	ldr	x0, [sp, #40]
   372d8:	ldr	x2, [sp, #48]
   372dc:	ldr	x1, [sp, #48]
   372e0:	cmp	x2, x0
   372e4:	csel	x0, x1, x0, le
   372e8:	str	x0, [sp, #384]
   372ec:	ldr	x0, [sp, #48]
   372f0:	ldr	x2, [sp, #40]
   372f4:	ldr	x1, [sp, #40]
   372f8:	cmp	x2, x0
   372fc:	csel	x0, x1, x0, ge  // ge = tcont
   37300:	str	x0, [sp, #376]
   37304:	ldr	x0, [sp, #432]
   37308:	ldr	w0, [x0, #180]
   3730c:	cmp	w0, #0x1
   37310:	cset	w0, eq  // eq = none
   37314:	strb	w0, [sp, #375]
   37318:	ldr	x0, [sp, #416]
   3731c:	cmp	x0, #0x0
   37320:	b.eq	37394 <rpl_re_set_registers@@Base+0x5ac>  // b.none
   37324:	ldrb	w0, [sp, #375]
   37328:	cmp	w0, #0x0
   3732c:	b.ne	37350 <rpl_re_set_registers@@Base+0x568>  // b.any
   37330:	ldr	x0, [sp, #72]
   37334:	ldr	x0, [x0, #24]
   37338:	and	x0, x0, #0x400000
   3733c:	cmp	x0, #0x0
   37340:	b.ne	37358 <rpl_re_set_registers@@Base+0x570>  // b.any
   37344:	ldr	x0, [sp, #408]
   37348:	cmp	x0, #0x0
   3734c:	b.ne	37358 <rpl_re_set_registers@@Base+0x570>  // b.any
   37350:	mov	w1, #0x4                   	// #4
   37354:	b	3735c <rpl_re_set_registers@@Base+0x574>
   37358:	mov	w1, #0x0                   	// #0
   3735c:	ldr	x2, [sp, #48]
   37360:	ldr	x0, [sp, #40]
   37364:	cmp	x2, x0
   37368:	b.gt	37374 <rpl_re_set_registers@@Base+0x58c>
   3736c:	mov	w0, #0x2                   	// #2
   37370:	b	37378 <rpl_re_set_registers@@Base+0x590>
   37374:	mov	w0, #0x0                   	// #0
   37378:	orr	w0, w1, w0
   3737c:	ldr	x1, [sp, #408]
   37380:	cmp	x1, #0x0
   37384:	cset	w1, ne  // ne = any
   37388:	and	w1, w1, #0xff
   3738c:	orr	w0, w0, w1
   37390:	b	37398 <rpl_re_set_registers@@Base+0x5b0>
   37394:	mov	w0, #0x8                   	// #8
   37398:	str	w0, [sp, #368]
   3739c:	mov	w0, #0x1                   	// #1
   373a0:	str	w0, [sp, #460]
   373a4:	ldr	x0, [sp, #344]
   373a8:	ldr	x1, [sp, #384]
   373ac:	cmp	x1, x0
   373b0:	b.gt	37d18 <rpl_re_set_registers@@Base+0xf30>
   373b4:	ldr	x0, [sp, #344]
   373b8:	ldr	x1, [sp, #376]
   373bc:	cmp	x1, x0
   373c0:	b.lt	37d18 <rpl_re_set_registers@@Base+0xf30>  // b.tstop
   373c4:	ldr	w0, [sp, #368]
   373c8:	cmp	w0, #0x8
   373cc:	b.eq	37724 <rpl_re_set_registers@@Base+0x93c>  // b.none
   373d0:	ldr	w0, [sp, #368]
   373d4:	cmp	w0, #0x8
   373d8:	b.gt	37628 <rpl_re_set_registers@@Base+0x840>
   373dc:	ldr	w0, [sp, #368]
   373e0:	cmp	w0, #0x7
   373e4:	b.eq	3742c <rpl_re_set_registers@@Base+0x644>  // b.none
   373e8:	ldr	w0, [sp, #368]
   373ec:	cmp	w0, #0x7
   373f0:	b.gt	37628 <rpl_re_set_registers@@Base+0x840>
   373f4:	ldr	w0, [sp, #368]
   373f8:	cmp	w0, #0x5
   373fc:	b.gt	37410 <rpl_re_set_registers@@Base+0x628>
   37400:	ldr	w0, [sp, #368]
   37404:	cmp	w0, #0x4
   37408:	b.ge	375fc <rpl_re_set_registers@@Base+0x814>  // b.tcont
   3740c:	b	37628 <rpl_re_set_registers@@Base+0x840>
   37410:	ldr	w0, [sp, #368]
   37414:	cmp	w0, #0x6
   37418:	b.eq	37498 <rpl_re_set_registers@@Base+0x6b0>  // b.none
   3741c:	b	37628 <rpl_re_set_registers@@Base+0x840>
   37420:	ldr	x0, [sp, #344]
   37424:	add	x0, x0, #0x1
   37428:	str	x0, [sp, #344]
   3742c:	ldr	x0, [sp, #344]
   37430:	ldr	x1, [sp, #376]
   37434:	cmp	x1, x0
   37438:	cset	w0, gt
   3743c:	and	w0, w0, #0xff
   37440:	and	x0, x0, #0xff
   37444:	cmp	x0, #0x0
   37448:	b.eq	374e8 <rpl_re_set_registers@@Base+0x700>  // b.none
   3744c:	ldr	x0, [sp, #344]
   37450:	mov	x1, x0
   37454:	ldr	x0, [sp, #64]
   37458:	add	x0, x0, x1
   3745c:	ldrb	w0, [x0]
   37460:	and	x0, x0, #0xff
   37464:	ldr	x1, [sp, #408]
   37468:	add	x0, x1, x0
   3746c:	ldrb	w0, [x0]
   37470:	and	x0, x0, #0xff
   37474:	ldr	x1, [sp, #416]
   37478:	add	x0, x1, x0
   3747c:	ldrb	w0, [x0]
   37480:	cmp	w0, #0x0
   37484:	b.eq	37420 <rpl_re_set_registers@@Base+0x638>  // b.none
   37488:	b	374e8 <rpl_re_set_registers@@Base+0x700>
   3748c:	ldr	x0, [sp, #344]
   37490:	add	x0, x0, #0x1
   37494:	str	x0, [sp, #344]
   37498:	ldr	x0, [sp, #344]
   3749c:	ldr	x1, [sp, #376]
   374a0:	cmp	x1, x0
   374a4:	cset	w0, gt
   374a8:	and	w0, w0, #0xff
   374ac:	and	x0, x0, #0xff
   374b0:	cmp	x0, #0x0
   374b4:	b.eq	374f0 <rpl_re_set_registers@@Base+0x708>  // b.none
   374b8:	ldr	x0, [sp, #344]
   374bc:	mov	x1, x0
   374c0:	ldr	x0, [sp, #64]
   374c4:	add	x0, x0, x1
   374c8:	ldrb	w0, [x0]
   374cc:	and	x0, x0, #0xff
   374d0:	ldr	x1, [sp, #416]
   374d4:	add	x0, x1, x0
   374d8:	ldrb	w0, [x0]
   374dc:	cmp	w0, #0x0
   374e0:	b.eq	3748c <rpl_re_set_registers@@Base+0x6a4>  // b.none
   374e4:	b	374f0 <rpl_re_set_registers@@Base+0x708>
   374e8:	nop
   374ec:	b	374f4 <rpl_re_set_registers@@Base+0x70c>
   374f0:	nop
   374f4:	ldr	x0, [sp, #344]
   374f8:	ldr	x1, [sp, #376]
   374fc:	cmp	x1, x0
   37500:	cset	w0, eq  // eq = none
   37504:	and	w0, w0, #0xff
   37508:	and	x0, x0, #0xff
   3750c:	cmp	x0, #0x0
   37510:	b.eq	3772c <rpl_re_set_registers@@Base+0x944>  // b.none
   37514:	ldr	x0, [sp, #344]
   37518:	ldr	x1, [sp, #56]
   3751c:	cmp	x1, x0
   37520:	b.le	3753c <rpl_re_set_registers@@Base+0x754>
   37524:	ldr	x0, [sp, #344]
   37528:	mov	x1, x0
   3752c:	ldr	x0, [sp, #64]
   37530:	add	x0, x0, x1
   37534:	ldrb	w0, [x0]
   37538:	b	37540 <rpl_re_set_registers@@Base+0x758>
   3753c:	mov	w0, #0x0                   	// #0
   37540:	str	w0, [sp, #364]
   37544:	ldr	x0, [sp, #408]
   37548:	cmp	x0, #0x0
   3754c:	b.eq	37568 <rpl_re_set_registers@@Base+0x780>  // b.none
   37550:	ldrsw	x0, [sp, #364]
   37554:	ldr	x1, [sp, #408]
   37558:	add	x0, x1, x0
   3755c:	ldrb	w0, [x0]
   37560:	and	x0, x0, #0xff
   37564:	b	3756c <rpl_re_set_registers@@Base+0x784>
   37568:	ldrsw	x0, [sp, #364]
   3756c:	ldr	x1, [sp, #416]
   37570:	add	x0, x1, x0
   37574:	ldrb	w0, [x0]
   37578:	cmp	w0, #0x0
   3757c:	b.ne	3772c <rpl_re_set_registers@@Base+0x944>  // b.any
   37580:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37584:	ldr	x0, [sp, #344]
   37588:	ldr	x1, [sp, #56]
   3758c:	cmp	x1, x0
   37590:	b.le	375ac <rpl_re_set_registers@@Base+0x7c4>
   37594:	ldr	x0, [sp, #344]
   37598:	mov	x1, x0
   3759c:	ldr	x0, [sp, #64]
   375a0:	add	x0, x0, x1
   375a4:	ldrb	w0, [x0]
   375a8:	b	375b0 <rpl_re_set_registers@@Base+0x7c8>
   375ac:	mov	w0, #0x0                   	// #0
   375b0:	str	w0, [sp, #364]
   375b4:	ldr	x0, [sp, #408]
   375b8:	cmp	x0, #0x0
   375bc:	b.eq	375d8 <rpl_re_set_registers@@Base+0x7f0>  // b.none
   375c0:	ldrsw	x0, [sp, #364]
   375c4:	ldr	x1, [sp, #408]
   375c8:	add	x0, x1, x0
   375cc:	ldrb	w0, [x0]
   375d0:	and	x0, x0, #0xff
   375d4:	b	375dc <rpl_re_set_registers@@Base+0x7f4>
   375d8:	ldrsw	x0, [sp, #364]
   375dc:	ldr	x1, [sp, #416]
   375e0:	add	x0, x1, x0
   375e4:	ldrb	w0, [x0]
   375e8:	cmp	w0, #0x0
   375ec:	b.ne	37610 <rpl_re_set_registers@@Base+0x828>  // b.any
   375f0:	ldr	x0, [sp, #344]
   375f4:	sub	x0, x0, #0x1
   375f8:	str	x0, [sp, #344]
   375fc:	ldr	x0, [sp, #344]
   37600:	ldr	x1, [sp, #384]
   37604:	cmp	x1, x0
   37608:	b.le	37584 <rpl_re_set_registers@@Base+0x79c>
   3760c:	b	37614 <rpl_re_set_registers@@Base+0x82c>
   37610:	nop
   37614:	ldr	x0, [sp, #344]
   37618:	ldr	x1, [sp, #384]
   3761c:	cmp	x1, x0
   37620:	b.le	37734 <rpl_re_set_registers@@Base+0x94c>
   37624:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37628:	ldr	x1, [sp, #344]
   3762c:	ldr	x0, [sp, #128]
   37630:	sub	x0, x1, x0
   37634:	str	x0, [sp, #448]
   37638:	ldr	x0, [sp, #144]
   3763c:	mov	x1, x0
   37640:	ldr	x0, [sp, #448]
   37644:	cmp	x0, x1
   37648:	cset	w0, cs  // cs = hs, nlast
   3764c:	and	w0, w0, #0xff
   37650:	and	x0, x0, #0xff
   37654:	cmp	x0, #0x0
   37658:	b.eq	3769c <rpl_re_set_registers@@Base+0x8b4>  // b.none
   3765c:	ldr	x1, [sp, #344]
   37660:	add	x0, sp, #0x58
   37664:	ldr	w2, [sp, #464]
   37668:	bl	2a2dc <printf_parse@@Base+0x2fe4>
   3766c:	str	w0, [sp, #460]
   37670:	ldr	w0, [sp, #460]
   37674:	cmp	w0, #0x0
   37678:	cset	w0, ne  // ne = any
   3767c:	and	w0, w0, #0xff
   37680:	and	x0, x0, #0xff
   37684:	cmp	x0, #0x0
   37688:	b.ne	37d20 <rpl_re_set_registers@@Base+0xf38>  // b.any
   3768c:	ldr	x1, [sp, #344]
   37690:	ldr	x0, [sp, #128]
   37694:	sub	x0, x1, x0
   37698:	str	x0, [sp, #448]
   3769c:	ldr	x0, [sp, #344]
   376a0:	ldr	x1, [sp, #56]
   376a4:	cmp	x1, x0
   376a8:	b.le	376c0 <rpl_re_set_registers@@Base+0x8d8>
   376ac:	ldr	x1, [sp, #96]
   376b0:	ldr	x0, [sp, #448]
   376b4:	add	x0, x1, x0
   376b8:	ldrb	w0, [x0]
   376bc:	b	376c4 <rpl_re_set_registers@@Base+0x8dc>
   376c0:	mov	w0, #0x0                   	// #0
   376c4:	str	w0, [sp, #364]
   376c8:	ldrsw	x0, [sp, #364]
   376cc:	ldr	x1, [sp, #416]
   376d0:	add	x0, x1, x0
   376d4:	ldrb	w0, [x0]
   376d8:	cmp	w0, #0x0
   376dc:	b.ne	3771c <rpl_re_set_registers@@Base+0x934>  // b.any
   376e0:	ldrsw	x1, [sp, #392]
   376e4:	ldr	x0, [sp, #344]
   376e8:	add	x0, x1, x0
   376ec:	str	x0, [sp, #344]
   376f0:	ldr	x0, [sp, #344]
   376f4:	ldr	x1, [sp, #384]
   376f8:	cmp	x1, x0
   376fc:	b.gt	37710 <rpl_re_set_registers@@Base+0x928>
   37700:	ldr	x0, [sp, #344]
   37704:	ldr	x1, [sp, #376]
   37708:	cmp	x1, x0
   3770c:	b.ge	37628 <rpl_re_set_registers@@Base+0x840>  // b.tcont
   37710:	mov	w0, #0x1                   	// #1
   37714:	str	w0, [sp, #460]
   37718:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   3771c:	nop
   37720:	b	37738 <rpl_re_set_registers@@Base+0x950>
   37724:	nop
   37728:	b	37738 <rpl_re_set_registers@@Base+0x950>
   3772c:	nop
   37730:	b	37738 <rpl_re_set_registers@@Base+0x950>
   37734:	nop
   37738:	ldr	x1, [sp, #344]
   3773c:	add	x0, sp, #0x58
   37740:	ldr	w2, [sp, #464]
   37744:	bl	2a2dc <printf_parse@@Base+0x2fe4>
   37748:	str	w0, [sp, #460]
   3774c:	ldr	w0, [sp, #460]
   37750:	cmp	w0, #0x0
   37754:	cset	w0, ne  // ne = any
   37758:	and	w0, w0, #0xff
   3775c:	and	x0, x0, #0xff
   37760:	cmp	x0, #0x0
   37764:	b.ne	37d28 <rpl_re_set_registers@@Base+0xf40>  // b.any
   37768:	ldrb	w0, [sp, #375]
   3776c:	eor	w0, w0, #0x1
   37770:	and	w0, w0, #0xff
   37774:	cmp	w0, #0x0
   37778:	b.eq	37798 <rpl_re_set_registers@@Base+0x9b0>  // b.none
   3777c:	ldr	x0, [sp, #136]
   37780:	cmp	x0, #0x0
   37784:	b.eq	37798 <rpl_re_set_registers@@Base+0x9b0>  // b.none
   37788:	ldr	x0, [sp, #104]
   3778c:	ldr	w0, [x0]
   37790:	cmn	w0, #0x1
   37794:	b.eq	3790c <rpl_re_set_registers@@Base+0xb24>  // b.none
   37798:	str	wzr, [sp, #312]
   3779c:	str	xzr, [sp, #288]
   377a0:	ldr	x0, [sp, #288]
   377a4:	str	x0, [sp, #280]
   377a8:	ldr	x1, [sp, #48]
   377ac:	ldr	x0, [sp, #40]
   377b0:	cmp	x1, x0
   377b4:	b.gt	377c0 <rpl_re_set_registers@@Base+0x9d8>
   377b8:	add	x0, sp, #0x158
   377bc:	b	377c4 <rpl_re_set_registers@@Base+0x9dc>
   377c0:	mov	x0, #0x0                   	// #0
   377c4:	add	x3, sp, #0x58
   377c8:	mov	x2, x0
   377cc:	ldrb	w1, [sp, #399]
   377d0:	mov	x0, x3
   377d4:	bl	380a4 <rpl_re_set_registers@@Base+0x12bc>
   377d8:	str	x0, [sp, #424]
   377dc:	ldr	x0, [sp, #424]
   377e0:	cmn	x0, #0x1
   377e4:	b.eq	37900 <rpl_re_set_registers@@Base+0xb18>  // b.none
   377e8:	ldr	x0, [sp, #424]
   377ec:	cmn	x0, #0x2
   377f0:	cset	w0, eq  // eq = none
   377f4:	and	w0, w0, #0xff
   377f8:	and	x0, x0, #0xff
   377fc:	cmp	x0, #0x0
   37800:	b.eq	37810 <rpl_re_set_registers@@Base+0xa28>  // b.none
   37804:	mov	w0, #0xc                   	// #12
   37808:	str	w0, [sp, #460]
   3780c:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37810:	ldr	x0, [sp, #424]
   37814:	str	x0, [sp, #256]
   37818:	ldr	x0, [sp, #72]
   3781c:	ldrb	w0, [x0, #56]
   37820:	and	w0, w0, #0x10
   37824:	and	w0, w0, #0xff
   37828:	cmp	w0, #0x0
   3782c:	b.ne	3783c <rpl_re_set_registers@@Base+0xa54>  // b.any
   37830:	ldr	x0, [sp, #24]
   37834:	cmp	x0, #0x1
   37838:	b.hi	3784c <rpl_re_set_registers@@Base+0xa64>  // b.pmore
   3783c:	ldr	x0, [sp, #432]
   37840:	ldr	x0, [x0, #152]
   37844:	cmp	x0, #0x0
   37848:	b.eq	37878 <rpl_re_set_registers@@Base+0xa90>  // b.none
   3784c:	ldr	x1, [sp, #272]
   37850:	ldr	x0, [sp, #424]
   37854:	lsl	x0, x0, #3
   37858:	add	x0, x1, x0
   3785c:	ldr	x0, [x0]
   37860:	str	x0, [sp, #352]
   37864:	add	x0, sp, #0x58
   37868:	ldr	x2, [sp, #424]
   3786c:	ldr	x1, [sp, #352]
   37870:	bl	3877c <rpl_re_set_registers@@Base+0x1994>
   37874:	str	x0, [sp, #264]
   37878:	ldr	x0, [sp, #72]
   3787c:	ldrb	w0, [x0, #56]
   37880:	and	w0, w0, #0x10
   37884:	and	w0, w0, #0xff
   37888:	cmp	w0, #0x0
   3788c:	b.ne	378b4 <rpl_re_set_registers@@Base+0xacc>  // b.any
   37890:	ldr	x0, [sp, #24]
   37894:	cmp	x0, #0x1
   37898:	b.ls	378b4 <rpl_re_set_registers@@Base+0xacc>  // b.plast
   3789c:	ldr	x0, [sp, #432]
   378a0:	ldrb	w0, [x0, #176]
   378a4:	and	w0, w0, #0x1
   378a8:	and	w0, w0, #0xff
   378ac:	cmp	w0, #0x0
   378b0:	b.ne	378c4 <rpl_re_set_registers@@Base+0xadc>  // b.any
   378b4:	ldr	x0, [sp, #432]
   378b8:	ldr	x0, [x0, #152]
   378bc:	cmp	x0, #0x0
   378c0:	b.eq	37928 <rpl_re_set_registers@@Base+0xb40>  // b.none
   378c4:	add	x0, sp, #0x58
   378c8:	bl	37d78 <rpl_re_set_registers@@Base+0xf90>
   378cc:	str	w0, [sp, #460]
   378d0:	ldr	w0, [sp, #460]
   378d4:	cmp	w0, #0x0
   378d8:	b.eq	37924 <rpl_re_set_registers@@Base+0xb3c>  // b.none
   378dc:	ldr	w0, [sp, #460]
   378e0:	cmp	w0, #0x1
   378e4:	cset	w0, ne  // ne = any
   378e8:	and	w0, w0, #0xff
   378ec:	and	x0, x0, #0xff
   378f0:	cmp	x0, #0x0
   378f4:	b.ne	37d30 <rpl_re_set_registers@@Base+0xf48>  // b.any
   378f8:	mov	x0, #0xffffffffffffffff    	// #-1
   378fc:	str	x0, [sp, #424]
   37900:	add	x0, sp, #0x58
   37904:	bl	3f9a8 <rpl_re_set_registers@@Base+0x8bc0>
   37908:	b	37910 <rpl_re_set_registers@@Base+0xb28>
   3790c:	nop
   37910:	ldrsw	x1, [sp, #392]
   37914:	ldr	x0, [sp, #344]
   37918:	add	x0, x1, x0
   3791c:	str	x0, [sp, #344]
   37920:	b	3739c <rpl_re_set_registers@@Base+0x5b4>
   37924:	nop
   37928:	ldr	x0, [sp, #24]
   3792c:	cmp	x0, #0x0
   37930:	b.eq	37d38 <rpl_re_set_registers@@Base+0xf50>  // b.none
   37934:	mov	x0, #0x1                   	// #1
   37938:	str	x0, [sp, #440]
   3793c:	b	3797c <rpl_re_set_registers@@Base+0xb94>
   37940:	ldr	x0, [sp, #440]
   37944:	lsl	x0, x0, #4
   37948:	ldr	x1, [sp, #16]
   3794c:	add	x0, x1, x0
   37950:	mov	x1, #0xffffffffffffffff    	// #-1
   37954:	str	x1, [x0, #8]
   37958:	ldr	x1, [sp, #440]
   3795c:	lsl	x1, x1, #4
   37960:	ldr	x2, [sp, #16]
   37964:	add	x1, x2, x1
   37968:	ldr	x0, [x0, #8]
   3796c:	str	x0, [x1]
   37970:	ldr	x0, [sp, #440]
   37974:	add	x0, x0, #0x1
   37978:	str	x0, [sp, #440]
   3797c:	ldr	x0, [sp, #440]
   37980:	ldr	x1, [sp, #24]
   37984:	cmp	x1, x0
   37988:	b.hi	37940 <rpl_re_set_registers@@Base+0xb58>  // b.pmore
   3798c:	ldr	x0, [sp, #16]
   37990:	str	xzr, [x0]
   37994:	ldr	x1, [sp, #256]
   37998:	ldr	x0, [sp, #16]
   3799c:	str	x1, [x0, #8]
   379a0:	ldr	x0, [sp, #72]
   379a4:	ldrb	w0, [x0, #56]
   379a8:	and	w0, w0, #0x10
   379ac:	and	w0, w0, #0xff
   379b0:	cmp	w0, #0x0
   379b4:	b.ne	37a3c <rpl_re_set_registers@@Base+0xc54>  // b.any
   379b8:	ldr	x0, [sp, #24]
   379bc:	cmp	x0, #0x1
   379c0:	b.ls	37a3c <rpl_re_set_registers@@Base+0xc54>  // b.plast
   379c4:	ldr	x0, [sp, #432]
   379c8:	ldrb	w0, [x0, #176]
   379cc:	and	w0, w0, #0x1
   379d0:	and	w0, w0, #0xff
   379d4:	cmp	w0, #0x0
   379d8:	b.eq	379f4 <rpl_re_set_registers@@Base+0xc0c>  // b.none
   379dc:	ldr	x0, [sp, #432]
   379e0:	ldr	x0, [x0, #152]
   379e4:	cmp	x0, #0x0
   379e8:	b.le	379f4 <rpl_re_set_registers@@Base+0xc0c>
   379ec:	mov	w0, #0x1                   	// #1
   379f0:	b	379f8 <rpl_re_set_registers@@Base+0xc10>
   379f4:	mov	w0, #0x0                   	// #0
   379f8:	and	w0, w0, #0x1
   379fc:	and	w1, w0, #0xff
   37a00:	add	x0, sp, #0x58
   37a04:	mov	w4, w1
   37a08:	ldr	x3, [sp, #16]
   37a0c:	ldr	x2, [sp, #24]
   37a10:	mov	x1, x0
   37a14:	ldr	x0, [sp, #72]
   37a18:	bl	390c4 <rpl_re_set_registers@@Base+0x22dc>
   37a1c:	str	w0, [sp, #460]
   37a20:	ldr	w0, [sp, #460]
   37a24:	cmp	w0, #0x0
   37a28:	cset	w0, ne  // ne = any
   37a2c:	and	w0, w0, #0xff
   37a30:	and	x0, x0, #0xff
   37a34:	cmp	x0, #0x0
   37a38:	b.ne	37d40 <rpl_re_set_registers@@Base+0xf58>  // b.any
   37a3c:	str	xzr, [sp, #440]
   37a40:	b	37ba8 <rpl_re_set_registers@@Base+0xdc0>
   37a44:	ldr	x0, [sp, #440]
   37a48:	lsl	x0, x0, #4
   37a4c:	ldr	x1, [sp, #16]
   37a50:	add	x0, x1, x0
   37a54:	ldr	x0, [x0]
   37a58:	cmn	x0, #0x1
   37a5c:	b.eq	37b9c <rpl_re_set_registers@@Base+0xdb4>  // b.none
   37a60:	ldrb	w0, [sp, #228]
   37a64:	cmp	w0, #0x0
   37a68:	cset	w0, ne  // ne = any
   37a6c:	and	w0, w0, #0xff
   37a70:	and	x0, x0, #0xff
   37a74:	cmp	x0, #0x0
   37a78:	b.eq	37b3c <rpl_re_set_registers@@Base+0xd54>  // b.none
   37a7c:	ldr	x0, [sp, #440]
   37a80:	lsl	x0, x0, #4
   37a84:	ldr	x1, [sp, #16]
   37a88:	add	x0, x1, x0
   37a8c:	ldr	x1, [x0]
   37a90:	ldr	x0, [sp, #136]
   37a94:	cmp	x1, x0
   37a98:	b.ne	37aa4 <rpl_re_set_registers@@Base+0xcbc>  // b.any
   37a9c:	ldr	x0, [sp, #144]
   37aa0:	b	37ac8 <rpl_re_set_registers@@Base+0xce0>
   37aa4:	ldr	x1, [sp, #112]
   37aa8:	ldr	x0, [sp, #440]
   37aac:	lsl	x0, x0, #4
   37ab0:	ldr	x2, [sp, #16]
   37ab4:	add	x0, x2, x0
   37ab8:	ldr	x0, [x0]
   37abc:	lsl	x0, x0, #3
   37ac0:	add	x0, x1, x0
   37ac4:	ldr	x0, [x0]
   37ac8:	ldr	x1, [sp, #440]
   37acc:	lsl	x1, x1, #4
   37ad0:	ldr	x2, [sp, #16]
   37ad4:	add	x1, x2, x1
   37ad8:	str	x0, [x1]
   37adc:	ldr	x0, [sp, #440]
   37ae0:	lsl	x0, x0, #4
   37ae4:	ldr	x1, [sp, #16]
   37ae8:	add	x0, x1, x0
   37aec:	ldr	x1, [x0, #8]
   37af0:	ldr	x0, [sp, #136]
   37af4:	cmp	x1, x0
   37af8:	b.ne	37b04 <rpl_re_set_registers@@Base+0xd1c>  // b.any
   37afc:	ldr	x0, [sp, #144]
   37b00:	b	37b28 <rpl_re_set_registers@@Base+0xd40>
   37b04:	ldr	x1, [sp, #112]
   37b08:	ldr	x0, [sp, #440]
   37b0c:	lsl	x0, x0, #4
   37b10:	ldr	x2, [sp, #16]
   37b14:	add	x0, x2, x0
   37b18:	ldr	x0, [x0, #8]
   37b1c:	lsl	x0, x0, #3
   37b20:	add	x0, x1, x0
   37b24:	ldr	x0, [x0]
   37b28:	ldr	x1, [sp, #440]
   37b2c:	lsl	x1, x1, #4
   37b30:	ldr	x2, [sp, #16]
   37b34:	add	x1, x2, x1
   37b38:	str	x0, [x1, #8]
   37b3c:	ldr	x0, [sp, #440]
   37b40:	lsl	x0, x0, #4
   37b44:	ldr	x1, [sp, #16]
   37b48:	add	x0, x1, x0
   37b4c:	ldr	x2, [x0]
   37b50:	ldr	x1, [sp, #344]
   37b54:	ldr	x0, [sp, #440]
   37b58:	lsl	x0, x0, #4
   37b5c:	ldr	x3, [sp, #16]
   37b60:	add	x0, x3, x0
   37b64:	add	x1, x2, x1
   37b68:	str	x1, [x0]
   37b6c:	ldr	x0, [sp, #440]
   37b70:	lsl	x0, x0, #4
   37b74:	ldr	x1, [sp, #16]
   37b78:	add	x0, x1, x0
   37b7c:	ldr	x2, [x0, #8]
   37b80:	ldr	x1, [sp, #344]
   37b84:	ldr	x0, [sp, #440]
   37b88:	lsl	x0, x0, #4
   37b8c:	ldr	x3, [sp, #16]
   37b90:	add	x0, x3, x0
   37b94:	add	x1, x2, x1
   37b98:	str	x1, [x0, #8]
   37b9c:	ldr	x0, [sp, #440]
   37ba0:	add	x0, x0, #0x1
   37ba4:	str	x0, [sp, #440]
   37ba8:	ldr	x0, [sp, #440]
   37bac:	ldr	x1, [sp, #24]
   37bb0:	cmp	x1, x0
   37bb4:	b.hi	37a44 <rpl_re_set_registers@@Base+0xc5c>  // b.pmore
   37bb8:	str	xzr, [sp, #440]
   37bbc:	b	37c0c <rpl_re_set_registers@@Base+0xe24>
   37bc0:	ldr	x1, [sp, #440]
   37bc4:	ldr	x0, [sp, #24]
   37bc8:	add	x0, x1, x0
   37bcc:	lsl	x0, x0, #4
   37bd0:	ldr	x1, [sp, #16]
   37bd4:	add	x0, x1, x0
   37bd8:	mov	x1, #0xffffffffffffffff    	// #-1
   37bdc:	str	x1, [x0]
   37be0:	ldr	x1, [sp, #440]
   37be4:	ldr	x0, [sp, #24]
   37be8:	add	x0, x1, x0
   37bec:	lsl	x0, x0, #4
   37bf0:	ldr	x1, [sp, #16]
   37bf4:	add	x0, x1, x0
   37bf8:	mov	x1, #0xffffffffffffffff    	// #-1
   37bfc:	str	x1, [x0, #8]
   37c00:	ldr	x0, [sp, #440]
   37c04:	add	x0, x0, #0x1
   37c08:	str	x0, [sp, #440]
   37c0c:	ldr	x1, [sp, #440]
   37c10:	ldr	x0, [sp, #400]
   37c14:	cmp	x1, x0
   37c18:	b.lt	37bc0 <rpl_re_set_registers@@Base+0xdd8>  // b.tstop
   37c1c:	ldr	x0, [sp, #432]
   37c20:	ldr	x0, [x0, #224]
   37c24:	cmp	x0, #0x0
   37c28:	b.eq	37d38 <rpl_re_set_registers@@Base+0xf50>  // b.none
   37c2c:	str	xzr, [sp, #440]
   37c30:	b	37cec <rpl_re_set_registers@@Base+0xf04>
   37c34:	ldr	x0, [sp, #432]
   37c38:	ldr	x1, [x0, #224]
   37c3c:	ldr	x0, [sp, #440]
   37c40:	lsl	x0, x0, #3
   37c44:	add	x0, x1, x0
   37c48:	ldr	x0, [x0]
   37c4c:	ldr	x1, [sp, #440]
   37c50:	cmp	x1, x0
   37c54:	b.eq	37ce0 <rpl_re_set_registers@@Base+0xef8>  // b.none
   37c58:	ldr	x0, [sp, #432]
   37c5c:	ldr	x1, [x0, #224]
   37c60:	ldr	x0, [sp, #440]
   37c64:	lsl	x0, x0, #3
   37c68:	add	x0, x1, x0
   37c6c:	ldr	x0, [x0]
   37c70:	add	x0, x0, #0x1
   37c74:	lsl	x0, x0, #4
   37c78:	ldr	x1, [sp, #16]
   37c7c:	add	x1, x1, x0
   37c80:	ldr	x0, [sp, #440]
   37c84:	add	x0, x0, #0x1
   37c88:	lsl	x0, x0, #4
   37c8c:	ldr	x2, [sp, #16]
   37c90:	add	x0, x2, x0
   37c94:	ldr	x1, [x1]
   37c98:	str	x1, [x0]
   37c9c:	ldr	x0, [sp, #432]
   37ca0:	ldr	x1, [x0, #224]
   37ca4:	ldr	x0, [sp, #440]
   37ca8:	lsl	x0, x0, #3
   37cac:	add	x0, x1, x0
   37cb0:	ldr	x0, [x0]
   37cb4:	add	x0, x0, #0x1
   37cb8:	lsl	x0, x0, #4
   37cbc:	ldr	x1, [sp, #16]
   37cc0:	add	x1, x1, x0
   37cc4:	ldr	x0, [sp, #440]
   37cc8:	add	x0, x0, #0x1
   37ccc:	lsl	x0, x0, #4
   37cd0:	ldr	x2, [sp, #16]
   37cd4:	add	x0, x2, x0
   37cd8:	ldr	x1, [x1, #8]
   37cdc:	str	x1, [x0, #8]
   37ce0:	ldr	x0, [sp, #440]
   37ce4:	add	x0, x0, #0x1
   37ce8:	str	x0, [sp, #440]
   37cec:	ldr	x0, [sp, #440]
   37cf0:	add	x0, x0, #0x1
   37cf4:	mov	x1, x0
   37cf8:	ldr	x0, [sp, #24]
   37cfc:	cmp	x0, x1
   37d00:	b.hi	37c34 <rpl_re_set_registers@@Base+0xe4c>  // b.pmore
   37d04:	b	37d38 <rpl_re_set_registers@@Base+0xf50>
   37d08:	nop
   37d0c:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37d10:	nop
   37d14:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37d18:	nop
   37d1c:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37d20:	nop
   37d24:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37d28:	nop
   37d2c:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37d30:	nop
   37d34:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37d38:	nop
   37d3c:	b	37d44 <rpl_re_set_registers@@Base+0xf5c>
   37d40:	nop
   37d44:	ldr	x0, [sp, #272]
   37d48:	bl	b130 <free@plt>
   37d4c:	ldr	x0, [sp, #432]
   37d50:	ldr	x0, [x0, #152]
   37d54:	cmp	x0, #0x0
   37d58:	b.eq	37d64 <rpl_re_set_registers@@Base+0xf7c>  // b.none
   37d5c:	add	x0, sp, #0x58
   37d60:	bl	3faac <rpl_re_set_registers@@Base+0x8cc4>
   37d64:	add	x0, sp, #0x58
   37d68:	bl	2b290 <printf_parse@@Base+0x3f98>
   37d6c:	ldr	w0, [sp, #460]
   37d70:	ldp	x29, x30, [sp], #464
   37d74:	ret
   37d78:	stp	x29, x30, [sp, #-144]!
   37d7c:	mov	x29, sp
   37d80:	str	x0, [sp, #24]
   37d84:	ldr	x0, [sp, #24]
   37d88:	ldr	x0, [x0, #152]
   37d8c:	str	x0, [sp, #96]
   37d90:	str	xzr, [sp, #104]
   37d94:	ldr	x0, [sp, #24]
   37d98:	ldr	x0, [x0, #168]
   37d9c:	str	x0, [sp, #128]
   37da0:	ldr	x0, [sp, #24]
   37da4:	ldr	x0, [x0, #176]
   37da8:	str	x0, [sp, #136]
   37dac:	ldr	x1, [sp, #128]
   37db0:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
   37db4:	cmp	x1, x0
   37db8:	cset	w0, hi  // hi = pmore
   37dbc:	and	w0, w0, #0xff
   37dc0:	and	x0, x0, #0xff
   37dc4:	cmp	x0, #0x0
   37dc8:	b.eq	37dd4 <rpl_re_set_registers@@Base+0xfec>  // b.none
   37dcc:	mov	w0, #0xc                   	// #12
   37dd0:	b	3809c <rpl_re_set_registers@@Base+0x12b4>
   37dd4:	ldr	x0, [sp, #128]
   37dd8:	add	x0, x0, #0x1
   37ddc:	lsl	x0, x0, #3
   37de0:	bl	ab40 <malloc@plt>
   37de4:	str	x0, [sp, #112]
   37de8:	ldr	x0, [sp, #112]
   37dec:	cmp	x0, #0x0
   37df0:	cset	w0, eq  // eq = none
   37df4:	and	w0, w0, #0xff
   37df8:	and	x0, x0, #0xff
   37dfc:	cmp	x0, #0x0
   37e00:	b.eq	37e10 <rpl_re_set_registers@@Base+0x1028>  // b.none
   37e04:	mov	w0, #0xc                   	// #12
   37e08:	str	w0, [sp, #124]
   37e0c:	b	38088 <rpl_re_set_registers@@Base+0x12a0>
   37e10:	ldr	x0, [sp, #96]
   37e14:	ldr	x0, [x0, #152]
   37e18:	cmp	x0, #0x0
   37e1c:	b.eq	37fd4 <rpl_re_set_registers@@Base+0x11ec>  // b.none
   37e20:	ldr	x0, [sp, #128]
   37e24:	add	x0, x0, #0x1
   37e28:	lsl	x0, x0, #3
   37e2c:	bl	ab40 <malloc@plt>
   37e30:	str	x0, [sp, #104]
   37e34:	ldr	x0, [sp, #104]
   37e38:	cmp	x0, #0x0
   37e3c:	cset	w0, eq  // eq = none
   37e40:	and	w0, w0, #0xff
   37e44:	and	x0, x0, #0xff
   37e48:	cmp	x0, #0x0
   37e4c:	b.eq	37e5c <rpl_re_set_registers@@Base+0x1074>  // b.none
   37e50:	mov	w0, #0xc                   	// #12
   37e54:	str	w0, [sp, #124]
   37e58:	b	38088 <rpl_re_set_registers@@Base+0x12a0>
   37e5c:	ldr	x0, [sp, #128]
   37e60:	add	x0, x0, #0x1
   37e64:	lsl	x0, x0, #3
   37e68:	mov	x2, x0
   37e6c:	mov	w1, #0x0                   	// #0
   37e70:	ldr	x0, [sp, #104]
   37e74:	bl	acb0 <memset@plt>
   37e78:	add	x0, sp, #0x28
   37e7c:	ldr	x4, [sp, #128]
   37e80:	ldr	x3, [sp, #136]
   37e84:	ldr	x2, [sp, #104]
   37e88:	ldr	x1, [sp, #112]
   37e8c:	bl	40190 <rpl_re_set_registers@@Base+0x93a8>
   37e90:	add	x0, sp, #0x28
   37e94:	mov	x1, x0
   37e98:	ldr	x0, [sp, #24]
   37e9c:	bl	396f0 <rpl_re_set_registers@@Base+0x2908>
   37ea0:	str	w0, [sp, #124]
   37ea4:	ldr	x0, [sp, #88]
   37ea8:	bl	b130 <free@plt>
   37eac:	ldr	w0, [sp, #124]
   37eb0:	cmp	w0, #0x0
   37eb4:	cset	w0, ne  // ne = any
   37eb8:	and	w0, w0, #0xff
   37ebc:	and	x0, x0, #0xff
   37ec0:	cmp	x0, #0x0
   37ec4:	b.ne	3807c <rpl_re_set_registers@@Base+0x1294>  // b.any
   37ec8:	ldr	x0, [sp, #112]
   37ecc:	ldr	x0, [x0]
   37ed0:	cmp	x0, #0x0
   37ed4:	b.ne	37f88 <rpl_re_set_registers@@Base+0x11a0>  // b.any
   37ed8:	ldr	x0, [sp, #104]
   37edc:	ldr	x0, [x0]
   37ee0:	cmp	x0, #0x0
   37ee4:	b.ne	37f88 <rpl_re_set_registers@@Base+0x11a0>  // b.any
   37ee8:	ldr	x0, [sp, #128]
   37eec:	sub	x0, x0, #0x1
   37ef0:	str	x0, [sp, #128]
   37ef4:	ldr	x0, [sp, #128]
   37ef8:	cmp	x0, #0x0
   37efc:	b.ge	37f0c <rpl_re_set_registers@@Base+0x1124>  // b.tcont
   37f00:	mov	w0, #0x1                   	// #1
   37f04:	str	w0, [sp, #124]
   37f08:	b	38088 <rpl_re_set_registers@@Base+0x12a0>
   37f0c:	ldr	x0, [sp, #24]
   37f10:	ldr	x1, [x0, #184]
   37f14:	ldr	x0, [sp, #128]
   37f18:	lsl	x0, x0, #3
   37f1c:	add	x0, x1, x0
   37f20:	ldr	x0, [x0]
   37f24:	cmp	x0, #0x0
   37f28:	b.eq	37ee8 <rpl_re_set_registers@@Base+0x1100>  // b.none
   37f2c:	ldr	x0, [sp, #24]
   37f30:	ldr	x1, [x0, #184]
   37f34:	ldr	x0, [sp, #128]
   37f38:	lsl	x0, x0, #3
   37f3c:	add	x0, x1, x0
   37f40:	ldr	x0, [x0]
   37f44:	ldrb	w0, [x0, #104]
   37f48:	and	w0, w0, #0x10
   37f4c:	and	w0, w0, #0xff
   37f50:	cmp	w0, #0x0
   37f54:	b.eq	37ee8 <rpl_re_set_registers@@Base+0x1100>  // b.none
   37f58:	ldr	x0, [sp, #24]
   37f5c:	ldr	x1, [x0, #184]
   37f60:	ldr	x0, [sp, #128]
   37f64:	lsl	x0, x0, #3
   37f68:	add	x0, x1, x0
   37f6c:	ldr	x0, [x0]
   37f70:	ldr	x2, [sp, #128]
   37f74:	mov	x1, x0
   37f78:	ldr	x0, [sp, #24]
   37f7c:	bl	3877c <rpl_re_set_registers@@Base+0x1994>
   37f80:	str	x0, [sp, #136]
   37f84:	b	37e5c <rpl_re_set_registers@@Base+0x1074>
   37f88:	ldr	x0, [sp, #128]
   37f8c:	add	x0, x0, #0x1
   37f90:	mov	x3, x0
   37f94:	ldr	x2, [sp, #104]
   37f98:	ldr	x1, [sp, #112]
   37f9c:	ldr	x0, [sp, #96]
   37fa0:	bl	39c30 <rpl_re_set_registers@@Base+0x2e48>
   37fa4:	str	w0, [sp, #124]
   37fa8:	ldr	x0, [sp, #104]
   37fac:	bl	b130 <free@plt>
   37fb0:	str	xzr, [sp, #104]
   37fb4:	ldr	w0, [sp, #124]
   37fb8:	cmp	w0, #0x0
   37fbc:	cset	w0, ne  // ne = any
   37fc0:	and	w0, w0, #0xff
   37fc4:	and	x0, x0, #0xff
   37fc8:	cmp	x0, #0x0
   37fcc:	b.eq	38040 <rpl_re_set_registers@@Base+0x1258>  // b.none
   37fd0:	b	38088 <rpl_re_set_registers@@Base+0x12a0>
   37fd4:	add	x0, sp, #0x28
   37fd8:	ldr	x4, [sp, #128]
   37fdc:	ldr	x3, [sp, #136]
   37fe0:	ldr	x2, [sp, #104]
   37fe4:	ldr	x1, [sp, #112]
   37fe8:	bl	40190 <rpl_re_set_registers@@Base+0x93a8>
   37fec:	add	x0, sp, #0x28
   37ff0:	mov	x1, x0
   37ff4:	ldr	x0, [sp, #24]
   37ff8:	bl	396f0 <rpl_re_set_registers@@Base+0x2908>
   37ffc:	str	w0, [sp, #124]
   38000:	ldr	x0, [sp, #88]
   38004:	bl	b130 <free@plt>
   38008:	ldr	w0, [sp, #124]
   3800c:	cmp	w0, #0x0
   38010:	cset	w0, ne  // ne = any
   38014:	and	w0, w0, #0xff
   38018:	and	x0, x0, #0xff
   3801c:	cmp	x0, #0x0
   38020:	b.ne	38084 <rpl_re_set_registers@@Base+0x129c>  // b.any
   38024:	ldr	x0, [sp, #112]
   38028:	ldr	x0, [x0]
   3802c:	cmp	x0, #0x0
   38030:	b.ne	38040 <rpl_re_set_registers@@Base+0x1258>  // b.any
   38034:	mov	w0, #0x1                   	// #1
   38038:	str	w0, [sp, #124]
   3803c:	b	38088 <rpl_re_set_registers@@Base+0x12a0>
   38040:	ldr	x0, [sp, #24]
   38044:	ldr	x0, [x0, #184]
   38048:	bl	b130 <free@plt>
   3804c:	ldr	x0, [sp, #24]
   38050:	ldr	x1, [sp, #112]
   38054:	str	x1, [x0, #184]
   38058:	str	xzr, [sp, #112]
   3805c:	ldr	x0, [sp, #24]
   38060:	ldr	x1, [sp, #136]
   38064:	str	x1, [x0, #176]
   38068:	ldr	x0, [sp, #24]
   3806c:	ldr	x1, [sp, #128]
   38070:	str	x1, [x0, #168]
   38074:	str	wzr, [sp, #124]
   38078:	b	38088 <rpl_re_set_registers@@Base+0x12a0>
   3807c:	nop
   38080:	b	38088 <rpl_re_set_registers@@Base+0x12a0>
   38084:	nop
   38088:	ldr	x0, [sp, #112]
   3808c:	bl	b130 <free@plt>
   38090:	ldr	x0, [sp, #104]
   38094:	bl	b130 <free@plt>
   38098:	ldr	w0, [sp, #124]
   3809c:	ldp	x29, x30, [sp], #144
   380a0:	ret
   380a4:	stp	x29, x30, [sp, #-160]!
   380a8:	mov	x29, sp
   380ac:	str	x0, [sp, #40]
   380b0:	strb	w1, [sp, #39]
   380b4:	str	x2, [sp, #24]
   380b8:	ldr	x0, [sp, #40]
   380bc:	ldr	x0, [x0, #152]
   380c0:	str	x0, [sp, #112]
   380c4:	str	xzr, [sp, #152]
   380c8:	mov	x0, #0xffffffffffffffff    	// #-1
   380cc:	str	x0, [sp, #144]
   380d0:	ldr	x0, [sp, #40]
   380d4:	ldr	x0, [x0, #72]
   380d8:	str	x0, [sp, #104]
   380dc:	ldr	x0, [sp, #24]
   380e0:	cmp	x0, #0x0
   380e4:	cset	w0, ne  // ne = any
   380e8:	strb	w0, [sp, #135]
   380ec:	ldr	x0, [sp, #104]
   380f0:	str	x0, [sp, #120]
   380f4:	str	wzr, [sp, #48]
   380f8:	add	x0, sp, #0x30
   380fc:	str	x0, [sp, #80]
   38100:	ldr	x0, [sp, #40]
   38104:	str	x0, [sp, #72]
   38108:	ldr	x0, [sp, #104]
   3810c:	str	x0, [sp, #64]
   38110:	ldr	x0, [sp, #72]
   38114:	ldr	x0, [x0, #152]
   38118:	str	x0, [sp, #56]
   3811c:	ldr	x0, [sp, #56]
   38120:	ldr	x0, [x0, #72]
   38124:	ldrb	w0, [x0, #104]
   38128:	and	w0, w0, #0xffffff80
   3812c:	and	w0, w0, #0xff
   38130:	cmp	w0, #0x0
   38134:	b.eq	38218 <rpl_re_set_registers@@Base+0x1430>  // b.none
   38138:	ldr	x3, [sp, #72]
   3813c:	ldr	x0, [sp, #64]
   38140:	sub	x1, x0, #0x1
   38144:	ldr	x0, [sp, #72]
   38148:	ldr	w0, [x0, #160]
   3814c:	mov	w2, w0
   38150:	mov	x0, x3
   38154:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   38158:	str	w0, [sp, #52]
   3815c:	ldr	w0, [sp, #52]
   38160:	and	w0, w0, #0x1
   38164:	cmp	w0, #0x0
   38168:	b.eq	38178 <rpl_re_set_registers@@Base+0x1390>  // b.none
   3816c:	ldr	x0, [sp, #56]
   38170:	ldr	x0, [x0, #80]
   38174:	b	38220 <rpl_re_set_registers@@Base+0x1438>
   38178:	ldr	w0, [sp, #52]
   3817c:	cmp	w0, #0x0
   38180:	b.ne	38190 <rpl_re_set_registers@@Base+0x13a8>  // b.any
   38184:	ldr	x0, [sp, #56]
   38188:	ldr	x0, [x0, #72]
   3818c:	b	38220 <rpl_re_set_registers@@Base+0x1438>
   38190:	ldr	w0, [sp, #52]
   38194:	and	w0, w0, #0x4
   38198:	cmp	w0, #0x0
   3819c:	b.eq	381bc <rpl_re_set_registers@@Base+0x13d4>  // b.none
   381a0:	ldr	w0, [sp, #52]
   381a4:	and	w0, w0, #0x2
   381a8:	cmp	w0, #0x0
   381ac:	b.eq	381bc <rpl_re_set_registers@@Base+0x13d4>  // b.none
   381b0:	ldr	x0, [sp, #56]
   381b4:	ldr	x0, [x0, #96]
   381b8:	b	38220 <rpl_re_set_registers@@Base+0x1438>
   381bc:	ldr	w0, [sp, #52]
   381c0:	and	w0, w0, #0x2
   381c4:	cmp	w0, #0x0
   381c8:	b.eq	381d8 <rpl_re_set_registers@@Base+0x13f0>  // b.none
   381cc:	ldr	x0, [sp, #56]
   381d0:	ldr	x0, [x0, #88]
   381d4:	b	38220 <rpl_re_set_registers@@Base+0x1438>
   381d8:	ldr	w0, [sp, #52]
   381dc:	and	w0, w0, #0x4
   381e0:	cmp	w0, #0x0
   381e4:	b.eq	3820c <rpl_re_set_registers@@Base+0x1424>  // b.none
   381e8:	ldr	x0, [sp, #56]
   381ec:	ldr	x0, [x0, #72]
   381f0:	ldr	x0, [x0, #80]
   381f4:	ldr	w3, [sp, #52]
   381f8:	mov	x2, x0
   381fc:	ldr	x1, [sp, #56]
   38200:	ldr	x0, [sp, #80]
   38204:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   38208:	b	38220 <rpl_re_set_registers@@Base+0x1438>
   3820c:	ldr	x0, [sp, #56]
   38210:	ldr	x0, [x0, #72]
   38214:	b	38220 <rpl_re_set_registers@@Base+0x1438>
   38218:	ldr	x0, [sp, #56]
   3821c:	ldr	x0, [x0, #72]
   38220:	str	x0, [sp, #136]
   38224:	ldr	x0, [sp, #136]
   38228:	cmp	x0, #0x0
   3822c:	cset	w0, eq  // eq = none
   38230:	and	w0, w0, #0xff
   38234:	and	x0, x0, #0xff
   38238:	cmp	x0, #0x0
   3823c:	b.eq	38274 <rpl_re_set_registers@@Base+0x148c>  // b.none
   38240:	ldr	w0, [sp, #48]
   38244:	cmp	w0, #0xc
   38248:	b.eq	3826c <rpl_re_set_registers@@Base+0x1484>  // b.none
   3824c:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   38250:	add	x3, x0, #0x7f8
   38254:	mov	w2, #0x435                 	// #1077
   38258:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   3825c:	add	x1, x0, #0x720
   38260:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   38264:	add	x0, x0, #0x788
   38268:	bl	b630 <__assert_fail@plt>
   3826c:	mov	x0, #0xfffffffffffffffe    	// #-2
   38270:	b	38668 <rpl_re_set_registers@@Base+0x1880>
   38274:	ldr	x0, [sp, #40]
   38278:	ldr	x0, [x0, #184]
   3827c:	cmp	x0, #0x0
   38280:	b.eq	38350 <rpl_re_set_registers@@Base+0x1568>  // b.none
   38284:	ldr	x0, [sp, #40]
   38288:	ldr	x1, [x0, #184]
   3828c:	ldr	x0, [sp, #104]
   38290:	lsl	x0, x0, #3
   38294:	add	x0, x1, x0
   38298:	ldr	x1, [sp, #136]
   3829c:	str	x1, [x0]
   382a0:	ldr	x0, [sp, #112]
   382a4:	ldr	x0, [x0, #152]
   382a8:	cmp	x0, #0x0
   382ac:	b.eq	38350 <rpl_re_set_registers@@Base+0x1568>  // b.none
   382b0:	strb	wzr, [sp, #135]
   382b4:	ldr	x0, [sp, #136]
   382b8:	add	x0, x0, #0x8
   382bc:	mov	x2, #0x0                   	// #0
   382c0:	mov	x1, x0
   382c4:	ldr	x0, [sp, #40]
   382c8:	bl	3b794 <rpl_re_set_registers@@Base+0x49ac>
   382cc:	str	w0, [sp, #48]
   382d0:	ldr	w0, [sp, #48]
   382d4:	cmp	w0, #0x0
   382d8:	cset	w0, ne  // ne = any
   382dc:	and	w0, w0, #0xff
   382e0:	and	x0, x0, #0xff
   382e4:	cmp	x0, #0x0
   382e8:	b.eq	382f8 <rpl_re_set_registers@@Base+0x1510>  // b.none
   382ec:	ldr	w0, [sp, #48]
   382f0:	sxtw	x0, w0
   382f4:	b	38668 <rpl_re_set_registers@@Base+0x1880>
   382f8:	ldr	x0, [sp, #136]
   382fc:	ldrb	w0, [x0, #104]
   38300:	and	w0, w0, #0x40
   38304:	and	w0, w0, #0xff
   38308:	cmp	w0, #0x0
   3830c:	b.eq	38350 <rpl_re_set_registers@@Base+0x1568>  // b.none
   38310:	ldr	x0, [sp, #136]
   38314:	add	x0, x0, #0x8
   38318:	mov	x1, x0
   3831c:	ldr	x0, [sp, #40]
   38320:	bl	3bca8 <rpl_re_set_registers@@Base+0x4ec0>
   38324:	str	w0, [sp, #48]
   38328:	ldr	w0, [sp, #48]
   3832c:	cmp	w0, #0x0
   38330:	cset	w0, ne  // ne = any
   38334:	and	w0, w0, #0xff
   38338:	and	x0, x0, #0xff
   3833c:	cmp	x0, #0x0
   38340:	b.eq	38350 <rpl_re_set_registers@@Base+0x1568>  // b.none
   38344:	ldr	w0, [sp, #48]
   38348:	sxtw	x0, w0
   3834c:	b	38668 <rpl_re_set_registers@@Base+0x1880>
   38350:	ldr	x0, [sp, #136]
   38354:	ldrb	w0, [x0, #104]
   38358:	ubfx	x0, x0, #4, #1
   3835c:	and	w0, w0, #0xff
   38360:	and	x0, x0, #0xff
   38364:	cmp	x0, #0x0
   38368:	b.eq	38620 <rpl_re_set_registers@@Base+0x1838>  // b.none
   3836c:	ldr	x0, [sp, #136]
   38370:	ldrb	w0, [x0, #104]
   38374:	and	w0, w0, #0xffffff80
   38378:	and	w0, w0, #0xff
   3837c:	cmp	w0, #0x0
   38380:	b.eq	3839c <rpl_re_set_registers@@Base+0x15b4>  // b.none
   38384:	ldr	x2, [sp, #104]
   38388:	ldr	x1, [sp, #136]
   3838c:	ldr	x0, [sp, #40]
   38390:	bl	3877c <rpl_re_set_registers@@Base+0x1994>
   38394:	cmp	x0, #0x0
   38398:	b.eq	38620 <rpl_re_set_registers@@Base+0x1838>  // b.none
   3839c:	ldrb	w0, [sp, #39]
   383a0:	eor	w0, w0, #0x1
   383a4:	and	w0, w0, #0xff
   383a8:	cmp	w0, #0x0
   383ac:	b.eq	383b8 <rpl_re_set_registers@@Base+0x15d0>  // b.none
   383b0:	ldr	x0, [sp, #104]
   383b4:	b	38668 <rpl_re_set_registers@@Base+0x1880>
   383b8:	ldr	x0, [sp, #104]
   383bc:	str	x0, [sp, #144]
   383c0:	mov	x0, #0x1                   	// #1
   383c4:	str	x0, [sp, #152]
   383c8:	b	38620 <rpl_re_set_registers@@Base+0x1838>
   383cc:	ldr	x0, [sp, #136]
   383d0:	str	x0, [sp, #96]
   383d4:	ldr	x0, [sp, #40]
   383d8:	ldr	x0, [x0, #72]
   383dc:	add	x0, x0, #0x1
   383e0:	str	x0, [sp, #88]
   383e4:	ldr	x0, [sp, #40]
   383e8:	ldr	x0, [x0, #64]
   383ec:	ldr	x1, [sp, #88]
   383f0:	cmp	x1, x0
   383f4:	cset	w0, ge  // ge = tcont
   383f8:	and	w0, w0, #0xff
   383fc:	and	x0, x0, #0xff
   38400:	cmp	x0, #0x0
   38404:	b.eq	38420 <rpl_re_set_registers@@Base+0x1638>  // b.none
   38408:	ldr	x0, [sp, #40]
   3840c:	ldr	x1, [x0, #64]
   38410:	ldr	x0, [sp, #40]
   38414:	ldr	x0, [x0, #88]
   38418:	cmp	x1, x0
   3841c:	b.lt	3845c <rpl_re_set_registers@@Base+0x1674>  // b.tstop
   38420:	ldr	x0, [sp, #40]
   38424:	ldr	x0, [x0, #48]
   38428:	ldr	x1, [sp, #88]
   3842c:	cmp	x1, x0
   38430:	cset	w0, ge  // ge = tcont
   38434:	and	w0, w0, #0xff
   38438:	and	x0, x0, #0xff
   3843c:	cmp	x0, #0x0
   38440:	b.eq	384c4 <rpl_re_set_registers@@Base+0x16dc>  // b.none
   38444:	ldr	x0, [sp, #40]
   38448:	ldr	x1, [x0, #48]
   3844c:	ldr	x0, [sp, #40]
   38450:	ldr	x0, [x0, #88]
   38454:	cmp	x1, x0
   38458:	b.ge	384c4 <rpl_re_set_registers@@Base+0x16dc>  // b.tcont
   3845c:	ldr	x0, [sp, #88]
   38460:	add	w0, w0, #0x1
   38464:	mov	w1, w0
   38468:	ldr	x0, [sp, #40]
   3846c:	bl	3f6c0 <rpl_re_set_registers@@Base+0x88d8>
   38470:	str	w0, [sp, #48]
   38474:	ldr	w0, [sp, #48]
   38478:	cmp	w0, #0x0
   3847c:	cset	w0, ne  // ne = any
   38480:	and	w0, w0, #0xff
   38484:	and	x0, x0, #0xff
   38488:	cmp	x0, #0x0
   3848c:	b.eq	384c4 <rpl_re_set_registers@@Base+0x16dc>  // b.none
   38490:	ldr	w0, [sp, #48]
   38494:	cmp	w0, #0xc
   38498:	b.eq	384bc <rpl_re_set_registers@@Base+0x16d4>  // b.none
   3849c:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   384a0:	add	x3, x0, #0x7f8
   384a4:	mov	w2, #0x46c                 	// #1132
   384a8:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   384ac:	add	x1, x0, #0x720
   384b0:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   384b4:	add	x0, x0, #0x788
   384b8:	bl	b630 <__assert_fail@plt>
   384bc:	mov	x0, #0xfffffffffffffffe    	// #-2
   384c0:	b	38668 <rpl_re_set_registers@@Base+0x1880>
   384c4:	add	x0, sp, #0x30
   384c8:	ldr	x2, [sp, #136]
   384cc:	ldr	x1, [sp, #40]
   384d0:	bl	3b274 <rpl_re_set_registers@@Base+0x448c>
   384d4:	str	x0, [sp, #136]
   384d8:	ldr	x0, [sp, #40]
   384dc:	ldr	x0, [x0, #184]
   384e0:	cmp	x0, #0x0
   384e4:	b.eq	384fc <rpl_re_set_registers@@Base+0x1714>  // b.none
   384e8:	add	x0, sp, #0x30
   384ec:	ldr	x2, [sp, #136]
   384f0:	ldr	x1, [sp, #40]
   384f4:	bl	3b41c <rpl_re_set_registers@@Base+0x4634>
   384f8:	str	x0, [sp, #136]
   384fc:	ldr	x0, [sp, #136]
   38500:	cmp	x0, #0x0
   38504:	b.ne	38578 <rpl_re_set_registers@@Base+0x1790>  // b.any
   38508:	ldr	w0, [sp, #48]
   3850c:	cmp	w0, #0x0
   38510:	cset	w0, ne  // ne = any
   38514:	and	w0, w0, #0xff
   38518:	and	x0, x0, #0xff
   3851c:	cmp	x0, #0x0
   38520:	b.eq	3852c <rpl_re_set_registers@@Base+0x1744>  // b.none
   38524:	mov	x0, #0xfffffffffffffffe    	// #-2
   38528:	b	38668 <rpl_re_set_registers@@Base+0x1880>
   3852c:	ldr	x0, [sp, #40]
   38530:	ldr	x0, [x0, #184]
   38534:	cmp	x0, #0x0
   38538:	b.eq	38640 <rpl_re_set_registers@@Base+0x1858>  // b.none
   3853c:	ldr	x0, [sp, #152]
   38540:	cmp	x0, #0x0
   38544:	b.eq	3855c <rpl_re_set_registers@@Base+0x1774>  // b.none
   38548:	ldrb	w0, [sp, #39]
   3854c:	eor	w0, w0, #0x1
   38550:	and	w0, w0, #0xff
   38554:	cmp	w0, #0x0
   38558:	b.ne	38640 <rpl_re_set_registers@@Base+0x1858>  // b.any
   3855c:	add	x0, sp, #0x30
   38560:	ldr	x1, [sp, #40]
   38564:	bl	3b6d8 <rpl_re_set_registers@@Base+0x48f0>
   38568:	str	x0, [sp, #136]
   3856c:	ldr	x0, [sp, #136]
   38570:	cmp	x0, #0x0
   38574:	b.eq	38640 <rpl_re_set_registers@@Base+0x1858>  // b.none
   38578:	ldrb	w0, [sp, #135]
   3857c:	cmp	x0, #0x0
   38580:	b.eq	385a4 <rpl_re_set_registers@@Base+0x17bc>  // b.none
   38584:	ldr	x1, [sp, #96]
   38588:	ldr	x0, [sp, #136]
   3858c:	cmp	x1, x0
   38590:	b.ne	385a0 <rpl_re_set_registers@@Base+0x17b8>  // b.any
   38594:	ldr	x0, [sp, #88]
   38598:	str	x0, [sp, #120]
   3859c:	b	385a4 <rpl_re_set_registers@@Base+0x17bc>
   385a0:	strb	wzr, [sp, #135]
   385a4:	ldr	x0, [sp, #136]
   385a8:	ldrb	w0, [x0, #104]
   385ac:	and	w0, w0, #0x10
   385b0:	and	w0, w0, #0xff
   385b4:	cmp	w0, #0x0
   385b8:	b.eq	38620 <rpl_re_set_registers@@Base+0x1838>  // b.none
   385bc:	ldr	x0, [sp, #136]
   385c0:	ldrb	w0, [x0, #104]
   385c4:	and	w0, w0, #0xffffff80
   385c8:	and	w0, w0, #0xff
   385cc:	cmp	w0, #0x0
   385d0:	b.eq	385f4 <rpl_re_set_registers@@Base+0x180c>  // b.none
   385d4:	ldr	x0, [sp, #40]
   385d8:	ldr	x0, [x0, #72]
   385dc:	mov	x2, x0
   385e0:	ldr	x1, [sp, #136]
   385e4:	ldr	x0, [sp, #40]
   385e8:	bl	3877c <rpl_re_set_registers@@Base+0x1994>
   385ec:	cmp	x0, #0x0
   385f0:	b.eq	38620 <rpl_re_set_registers@@Base+0x1838>  // b.none
   385f4:	ldr	x0, [sp, #40]
   385f8:	ldr	x0, [x0, #72]
   385fc:	str	x0, [sp, #144]
   38600:	mov	x0, #0x1                   	// #1
   38604:	str	x0, [sp, #152]
   38608:	str	xzr, [sp, #24]
   3860c:	ldrb	w0, [sp, #39]
   38610:	eor	w0, w0, #0x1
   38614:	and	w0, w0, #0xff
   38618:	cmp	w0, #0x0
   3861c:	b.ne	3863c <rpl_re_set_registers@@Base+0x1854>  // b.any
   38620:	ldr	x0, [sp, #40]
   38624:	ldr	x1, [x0, #104]
   38628:	ldr	x0, [sp, #40]
   3862c:	ldr	x0, [x0, #72]
   38630:	cmp	x1, x0
   38634:	b.gt	383cc <rpl_re_set_registers@@Base+0x15e4>
   38638:	b	38640 <rpl_re_set_registers@@Base+0x1858>
   3863c:	nop
   38640:	ldr	x0, [sp, #24]
   38644:	cmp	x0, #0x0
   38648:	b.eq	38664 <rpl_re_set_registers@@Base+0x187c>  // b.none
   3864c:	ldr	x0, [sp, #24]
   38650:	ldr	x1, [x0]
   38654:	ldr	x0, [sp, #120]
   38658:	add	x1, x1, x0
   3865c:	ldr	x0, [sp, #24]
   38660:	str	x1, [x0]
   38664:	ldr	x0, [sp, #144]
   38668:	ldp	x29, x30, [sp], #160
   3866c:	ret
   38670:	sub	sp, sp, #0x30
   38674:	str	x0, [sp, #24]
   38678:	str	x1, [sp, #16]
   3867c:	str	w2, [sp, #12]
   38680:	ldr	x0, [sp, #24]
   38684:	ldr	x1, [x0]
   38688:	ldr	x0, [sp, #16]
   3868c:	lsl	x0, x0, #4
   38690:	add	x0, x1, x0
   38694:	ldrb	w0, [x0, #8]
   38698:	str	w0, [sp, #44]
   3869c:	ldr	x0, [sp, #24]
   386a0:	ldr	x1, [x0]
   386a4:	ldr	x0, [sp, #16]
   386a8:	lsl	x0, x0, #4
   386ac:	add	x0, x1, x0
   386b0:	ldr	w0, [x0, #8]
   386b4:	ubfx	x0, x0, #8, #10
   386b8:	and	w0, w0, #0xffff
   386bc:	str	w0, [sp, #40]
   386c0:	ldr	w0, [sp, #44]
   386c4:	cmp	w0, #0x2
   386c8:	b.eq	386d4 <rpl_re_set_registers@@Base+0x18ec>  // b.none
   386cc:	mov	w0, #0x0                   	// #0
   386d0:	b	38774 <rpl_re_set_registers@@Base+0x198c>
   386d4:	ldr	w0, [sp, #40]
   386d8:	cmp	w0, #0x0
   386dc:	b.ne	386e8 <rpl_re_set_registers@@Base+0x1900>  // b.any
   386e0:	mov	w0, #0x1                   	// #1
   386e4:	b	38774 <rpl_re_set_registers@@Base+0x198c>
   386e8:	ldr	w0, [sp, #40]
   386ec:	and	w0, w0, #0x4
   386f0:	cmp	w0, #0x0
   386f4:	b.eq	38708 <rpl_re_set_registers@@Base+0x1920>  // b.none
   386f8:	ldr	w0, [sp, #12]
   386fc:	and	w0, w0, #0x1
   38700:	cmp	w0, #0x0
   38704:	b.eq	38768 <rpl_re_set_registers@@Base+0x1980>  // b.none
   38708:	ldr	w0, [sp, #40]
   3870c:	and	w0, w0, #0x8
   38710:	cmp	w0, #0x0
   38714:	b.eq	38728 <rpl_re_set_registers@@Base+0x1940>  // b.none
   38718:	ldr	w0, [sp, #12]
   3871c:	and	w0, w0, #0x1
   38720:	cmp	w0, #0x0
   38724:	b.ne	38768 <rpl_re_set_registers@@Base+0x1980>  // b.any
   38728:	ldr	w0, [sp, #40]
   3872c:	and	w0, w0, #0x20
   38730:	cmp	w0, #0x0
   38734:	b.eq	38748 <rpl_re_set_registers@@Base+0x1960>  // b.none
   38738:	ldr	w0, [sp, #12]
   3873c:	and	w0, w0, #0x2
   38740:	cmp	w0, #0x0
   38744:	b.eq	38768 <rpl_re_set_registers@@Base+0x1980>  // b.none
   38748:	ldr	w0, [sp, #40]
   3874c:	and	w0, w0, #0x80
   38750:	cmp	w0, #0x0
   38754:	b.eq	38770 <rpl_re_set_registers@@Base+0x1988>  // b.none
   38758:	ldr	w0, [sp, #12]
   3875c:	and	w0, w0, #0x8
   38760:	cmp	w0, #0x0
   38764:	b.ne	38770 <rpl_re_set_registers@@Base+0x1988>  // b.any
   38768:	mov	w0, #0x0                   	// #0
   3876c:	b	38774 <rpl_re_set_registers@@Base+0x198c>
   38770:	mov	w0, #0x1                   	// #1
   38774:	add	sp, sp, #0x30
   38778:	ret
   3877c:	stp	x29, x30, [sp, #-64]!
   38780:	mov	x29, sp
   38784:	str	x0, [sp, #40]
   38788:	str	x1, [sp, #32]
   3878c:	str	x2, [sp, #24]
   38790:	ldr	x3, [sp, #40]
   38794:	ldr	x0, [sp, #40]
   38798:	ldr	w0, [x0, #160]
   3879c:	mov	w2, w0
   387a0:	ldr	x1, [sp, #24]
   387a4:	mov	x0, x3
   387a8:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   387ac:	str	w0, [sp, #52]
   387b0:	str	xzr, [sp, #56]
   387b4:	b	3881c <rpl_re_set_registers@@Base+0x1a34>
   387b8:	ldr	x0, [sp, #40]
   387bc:	ldr	x3, [x0, #152]
   387c0:	ldr	x0, [sp, #32]
   387c4:	ldr	x1, [x0, #24]
   387c8:	ldr	x0, [sp, #56]
   387cc:	lsl	x0, x0, #3
   387d0:	add	x0, x1, x0
   387d4:	ldr	x0, [x0]
   387d8:	ldr	w2, [sp, #52]
   387dc:	mov	x1, x0
   387e0:	mov	x0, x3
   387e4:	bl	38670 <rpl_re_set_registers@@Base+0x1888>
   387e8:	and	w0, w0, #0xff
   387ec:	cmp	w0, #0x0
   387f0:	b.eq	38810 <rpl_re_set_registers@@Base+0x1a28>  // b.none
   387f4:	ldr	x0, [sp, #32]
   387f8:	ldr	x1, [x0, #24]
   387fc:	ldr	x0, [sp, #56]
   38800:	lsl	x0, x0, #3
   38804:	add	x0, x1, x0
   38808:	ldr	x0, [x0]
   3880c:	b	38834 <rpl_re_set_registers@@Base+0x1a4c>
   38810:	ldr	x0, [sp, #56]
   38814:	add	x0, x0, #0x1
   38818:	str	x0, [sp, #56]
   3881c:	ldr	x0, [sp, #32]
   38820:	ldr	x0, [x0, #16]
   38824:	ldr	x1, [sp, #56]
   38828:	cmp	x1, x0
   3882c:	b.lt	387b8 <rpl_re_set_registers@@Base+0x19d0>  // b.tstop
   38830:	mov	x0, #0x0                   	// #0
   38834:	ldp	x29, x30, [sp], #64
   38838:	ret
   3883c:	stp	x29, x30, [sp, #-192]!
   38840:	mov	x29, sp
   38844:	str	x0, [sp, #72]
   38848:	str	x1, [sp, #64]
   3884c:	str	x2, [sp, #56]
   38850:	str	x3, [sp, #48]
   38854:	str	x4, [sp, #40]
   38858:	str	x5, [sp, #32]
   3885c:	str	x6, [sp, #24]
   38860:	ldr	x0, [sp, #72]
   38864:	ldr	x0, [x0, #152]
   38868:	str	x0, [sp, #160]
   3886c:	ldr	x0, [sp, #160]
   38870:	ldr	x1, [x0]
   38874:	ldr	x0, [sp, #40]
   38878:	lsl	x0, x0, #4
   3887c:	add	x0, x1, x0
   38880:	ldrb	w0, [x0, #8]
   38884:	and	w0, w0, #0x8
   38888:	cmp	w0, #0x0
   3888c:	b.eq	389f0 <rpl_re_set_registers@@Base+0x1c08>  // b.none
   38890:	ldr	x0, [sp, #72]
   38894:	ldr	x1, [x0, #184]
   38898:	ldr	x0, [sp, #48]
   3889c:	ldr	x0, [x0]
   388a0:	lsl	x0, x0, #3
   388a4:	add	x0, x1, x0
   388a8:	ldr	x0, [x0]
   388ac:	add	x0, x0, #0x8
   388b0:	str	x0, [sp, #104]
   388b4:	ldr	x0, [sp, #160]
   388b8:	ldr	x2, [x0, #40]
   388bc:	ldr	x1, [sp, #40]
   388c0:	mov	x0, x1
   388c4:	lsl	x0, x0, #1
   388c8:	add	x0, x0, x1
   388cc:	lsl	x0, x0, #3
   388d0:	add	x0, x2, x0
   388d4:	str	x0, [sp, #96]
   388d8:	ldr	x1, [sp, #40]
   388dc:	ldr	x0, [sp, #32]
   388e0:	bl	2c3ec <printf_parse@@Base+0x50f4>
   388e4:	strb	w0, [sp, #135]
   388e8:	ldrb	w0, [sp, #135]
   388ec:	eor	w0, w0, #0x1
   388f0:	and	w0, w0, #0xff
   388f4:	and	x0, x0, #0xff
   388f8:	cmp	x0, #0x0
   388fc:	b.eq	38908 <rpl_re_set_registers@@Base+0x1b20>  // b.none
   38900:	mov	x0, #0xfffffffffffffffe    	// #-2
   38904:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   38908:	mov	x0, #0xffffffffffffffff    	// #-1
   3890c:	str	x0, [sp, #176]
   38910:	str	xzr, [sp, #184]
   38914:	b	389cc <rpl_re_set_registers@@Base+0x1be4>
   38918:	ldr	x0, [sp, #96]
   3891c:	ldr	x1, [x0, #16]
   38920:	ldr	x0, [sp, #184]
   38924:	lsl	x0, x0, #3
   38928:	add	x0, x1, x0
   3892c:	ldr	x0, [x0]
   38930:	str	x0, [sp, #88]
   38934:	ldr	x1, [sp, #88]
   38938:	ldr	x0, [sp, #104]
   3893c:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   38940:	cmp	x0, #0x0
   38944:	b.eq	389bc <rpl_re_set_registers@@Base+0x1bd4>  // b.none
   38948:	ldr	x0, [sp, #176]
   3894c:	cmn	x0, #0x1
   38950:	b.ne	38960 <rpl_re_set_registers@@Base+0x1b78>  // b.any
   38954:	ldr	x0, [sp, #88]
   38958:	str	x0, [sp, #176]
   3895c:	b	389c0 <rpl_re_set_registers@@Base+0x1bd8>
   38960:	ldr	x1, [sp, #176]
   38964:	ldr	x0, [sp, #32]
   38968:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3896c:	cmp	x0, #0x0
   38970:	b.eq	3897c <rpl_re_set_registers@@Base+0x1b94>  // b.none
   38974:	ldr	x0, [sp, #88]
   38978:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   3897c:	ldr	x0, [sp, #24]
   38980:	cmp	x0, #0x0
   38984:	b.eq	389e4 <rpl_re_set_registers@@Base+0x1bfc>  // b.none
   38988:	ldr	x0, [sp, #48]
   3898c:	ldr	x0, [x0]
   38990:	ldr	x5, [sp, #32]
   38994:	ldr	x4, [sp, #56]
   38998:	ldr	x3, [sp, #64]
   3899c:	ldr	x2, [sp, #88]
   389a0:	mov	x1, x0
   389a4:	ldr	x0, [sp, #24]
   389a8:	bl	38d68 <rpl_re_set_registers@@Base+0x1f80>
   389ac:	cmp	w0, #0x0
   389b0:	b.eq	389e4 <rpl_re_set_registers@@Base+0x1bfc>  // b.none
   389b4:	mov	x0, #0xfffffffffffffffe    	// #-2
   389b8:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   389bc:	nop
   389c0:	ldr	x0, [sp, #184]
   389c4:	add	x0, x0, #0x1
   389c8:	str	x0, [sp, #184]
   389cc:	ldr	x0, [sp, #96]
   389d0:	ldr	x0, [x0, #8]
   389d4:	ldr	x1, [sp, #184]
   389d8:	cmp	x1, x0
   389dc:	b.lt	38918 <rpl_re_set_registers@@Base+0x1b30>  // b.tstop
   389e0:	b	389e8 <rpl_re_set_registers@@Base+0x1c00>
   389e4:	nop
   389e8:	ldr	x0, [sp, #176]
   389ec:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   389f0:	str	xzr, [sp, #168]
   389f4:	ldr	x0, [sp, #160]
   389f8:	ldr	x1, [x0]
   389fc:	ldr	x0, [sp, #40]
   38a00:	lsl	x0, x0, #4
   38a04:	add	x0, x1, x0
   38a08:	ldrb	w0, [x0, #8]
   38a0c:	str	w0, [sp, #156]
   38a10:	ldr	x0, [sp, #160]
   38a14:	ldr	x1, [x0]
   38a18:	ldr	x0, [sp, #40]
   38a1c:	lsl	x0, x0, #4
   38a20:	add	x0, x1, x0
   38a24:	ldrb	w0, [x0, #10]
   38a28:	and	w0, w0, #0x10
   38a2c:	and	w0, w0, #0xff
   38a30:	cmp	w0, #0x0
   38a34:	b.eq	38a64 <rpl_re_set_registers@@Base+0x1c7c>  // b.none
   38a38:	ldr	x1, [sp, #72]
   38a3c:	ldr	x0, [sp, #48]
   38a40:	ldr	x0, [x0]
   38a44:	mov	x3, x0
   38a48:	mov	x2, x1
   38a4c:	ldr	x1, [sp, #40]
   38a50:	ldr	x0, [sp, #160]
   38a54:	bl	3ef54 <rpl_re_set_registers@@Base+0x816c>
   38a58:	sxtw	x0, w0
   38a5c:	str	x0, [sp, #168]
   38a60:	b	38c3c <rpl_re_set_registers@@Base+0x1e54>
   38a64:	ldr	w0, [sp, #156]
   38a68:	cmp	w0, #0x4
   38a6c:	b.ne	38c3c <rpl_re_set_registers@@Base+0x1e54>  // b.any
   38a70:	ldr	x0, [sp, #160]
   38a74:	ldr	x1, [x0]
   38a78:	ldr	x0, [sp, #40]
   38a7c:	lsl	x0, x0, #4
   38a80:	add	x0, x1, x0
   38a84:	ldr	x0, [x0]
   38a88:	add	x0, x0, #0x1
   38a8c:	str	x0, [sp, #144]
   38a90:	ldr	x0, [sp, #144]
   38a94:	lsl	x0, x0, #4
   38a98:	ldr	x1, [sp, #56]
   38a9c:	add	x0, x1, x0
   38aa0:	ldr	x1, [x0, #8]
   38aa4:	ldr	x0, [sp, #144]
   38aa8:	lsl	x0, x0, #4
   38aac:	ldr	x2, [sp, #56]
   38ab0:	add	x0, x2, x0
   38ab4:	ldr	x0, [x0]
   38ab8:	sub	x0, x1, x0
   38abc:	str	x0, [sp, #168]
   38ac0:	ldr	x0, [sp, #24]
   38ac4:	cmp	x0, #0x0
   38ac8:	b.eq	38b9c <rpl_re_set_registers@@Base+0x1db4>  // b.none
   38acc:	ldr	x0, [sp, #144]
   38ad0:	lsl	x0, x0, #4
   38ad4:	ldr	x1, [sp, #56]
   38ad8:	add	x0, x1, x0
   38adc:	ldr	x0, [x0]
   38ae0:	cmn	x0, #0x1
   38ae4:	b.eq	38b04 <rpl_re_set_registers@@Base+0x1d1c>  // b.none
   38ae8:	ldr	x0, [sp, #144]
   38aec:	lsl	x0, x0, #4
   38af0:	ldr	x1, [sp, #56]
   38af4:	add	x0, x1, x0
   38af8:	ldr	x0, [x0, #8]
   38afc:	cmn	x0, #0x1
   38b00:	b.ne	38b0c <rpl_re_set_registers@@Base+0x1d24>  // b.any
   38b04:	mov	x0, #0xffffffffffffffff    	// #-1
   38b08:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   38b0c:	ldr	x0, [sp, #168]
   38b10:	cmp	x0, #0x0
   38b14:	b.eq	38b9c <rpl_re_set_registers@@Base+0x1db4>  // b.none
   38b18:	ldr	x0, [sp, #72]
   38b1c:	ldr	x0, [x0, #8]
   38b20:	str	x0, [sp, #136]
   38b24:	ldr	x0, [sp, #72]
   38b28:	ldr	x1, [x0, #48]
   38b2c:	ldr	x0, [sp, #48]
   38b30:	ldr	x0, [x0]
   38b34:	sub	x0, x1, x0
   38b38:	ldr	x1, [sp, #168]
   38b3c:	cmp	x1, x0
   38b40:	b.gt	38b94 <rpl_re_set_registers@@Base+0x1dac>
   38b44:	ldr	x0, [sp, #144]
   38b48:	lsl	x0, x0, #4
   38b4c:	ldr	x1, [sp, #56]
   38b50:	add	x0, x1, x0
   38b54:	ldr	x0, [x0]
   38b58:	mov	x1, x0
   38b5c:	ldr	x0, [sp, #136]
   38b60:	add	x3, x0, x1
   38b64:	ldr	x0, [sp, #48]
   38b68:	ldr	x0, [x0]
   38b6c:	mov	x1, x0
   38b70:	ldr	x0, [sp, #136]
   38b74:	add	x0, x0, x1
   38b78:	ldr	x1, [sp, #168]
   38b7c:	mov	x2, x1
   38b80:	mov	x1, x0
   38b84:	mov	x0, x3
   38b88:	bl	b000 <memcmp@plt>
   38b8c:	cmp	w0, #0x0
   38b90:	b.eq	38b9c <rpl_re_set_registers@@Base+0x1db4>  // b.none
   38b94:	mov	x0, #0xffffffffffffffff    	// #-1
   38b98:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   38b9c:	ldr	x0, [sp, #168]
   38ba0:	cmp	x0, #0x0
   38ba4:	b.ne	38c3c <rpl_re_set_registers@@Base+0x1e54>  // b.any
   38ba8:	ldr	x1, [sp, #40]
   38bac:	ldr	x0, [sp, #32]
   38bb0:	bl	2c3ec <printf_parse@@Base+0x50f4>
   38bb4:	strb	w0, [sp, #135]
   38bb8:	ldrb	w0, [sp, #135]
   38bbc:	eor	w0, w0, #0x1
   38bc0:	and	w0, w0, #0xff
   38bc4:	and	x0, x0, #0xff
   38bc8:	cmp	x0, #0x0
   38bcc:	b.eq	38bd8 <rpl_re_set_registers@@Base+0x1df0>  // b.none
   38bd0:	mov	x0, #0xfffffffffffffffe    	// #-2
   38bd4:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   38bd8:	ldr	x0, [sp, #160]
   38bdc:	ldr	x2, [x0, #40]
   38be0:	ldr	x1, [sp, #40]
   38be4:	mov	x0, x1
   38be8:	lsl	x0, x0, #1
   38bec:	add	x0, x0, x1
   38bf0:	lsl	x0, x0, #3
   38bf4:	add	x0, x2, x0
   38bf8:	ldr	x0, [x0, #16]
   38bfc:	ldr	x0, [x0]
   38c00:	str	x0, [sp, #120]
   38c04:	ldr	x0, [sp, #72]
   38c08:	ldr	x1, [x0, #184]
   38c0c:	ldr	x0, [sp, #48]
   38c10:	ldr	x0, [x0]
   38c14:	lsl	x0, x0, #3
   38c18:	add	x0, x1, x0
   38c1c:	ldr	x0, [x0]
   38c20:	add	x0, x0, #0x8
   38c24:	ldr	x1, [sp, #120]
   38c28:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   38c2c:	cmp	x0, #0x0
   38c30:	b.eq	38c3c <rpl_re_set_registers@@Base+0x1e54>  // b.none
   38c34:	ldr	x0, [sp, #120]
   38c38:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   38c3c:	ldr	x0, [sp, #168]
   38c40:	cmp	x0, #0x0
   38c44:	b.ne	38c7c <rpl_re_set_registers@@Base+0x1e94>  // b.any
   38c48:	ldr	x0, [sp, #160]
   38c4c:	ldr	x1, [x0]
   38c50:	ldr	x0, [sp, #40]
   38c54:	lsl	x0, x0, #4
   38c58:	add	x1, x1, x0
   38c5c:	ldr	x0, [sp, #48]
   38c60:	ldr	x0, [x0]
   38c64:	mov	x2, x0
   38c68:	ldr	x0, [sp, #72]
   38c6c:	bl	3f498 <rpl_re_set_registers@@Base+0x86b0>
   38c70:	and	w0, w0, #0xff
   38c74:	cmp	w0, #0x0
   38c78:	b.eq	38d5c <rpl_re_set_registers@@Base+0x1f74>  // b.none
   38c7c:	ldr	x0, [sp, #160]
   38c80:	ldr	x1, [x0, #24]
   38c84:	ldr	x0, [sp, #40]
   38c88:	lsl	x0, x0, #3
   38c8c:	add	x0, x1, x0
   38c90:	ldr	x0, [x0]
   38c94:	str	x0, [sp, #112]
   38c98:	ldr	x0, [sp, #168]
   38c9c:	cmp	x0, #0x0
   38ca0:	b.ne	38cb4 <rpl_re_set_registers@@Base+0x1ecc>  // b.any
   38ca4:	ldr	x0, [sp, #48]
   38ca8:	ldr	x0, [x0]
   38cac:	add	x0, x0, #0x1
   38cb0:	b	38cc4 <rpl_re_set_registers@@Base+0x1edc>
   38cb4:	ldr	x0, [sp, #48]
   38cb8:	ldr	x1, [x0]
   38cbc:	ldr	x0, [sp, #168]
   38cc0:	add	x0, x1, x0
   38cc4:	ldr	x1, [sp, #48]
   38cc8:	str	x0, [x1]
   38ccc:	ldr	x0, [sp, #24]
   38cd0:	cmp	x0, #0x0
   38cd4:	b.eq	38d4c <rpl_re_set_registers@@Base+0x1f64>  // b.none
   38cd8:	ldr	x0, [sp, #48]
   38cdc:	ldr	x1, [x0]
   38ce0:	ldr	x0, [sp, #72]
   38ce4:	ldr	x0, [x0, #168]
   38ce8:	cmp	x1, x0
   38cec:	b.gt	38d44 <rpl_re_set_registers@@Base+0x1f5c>
   38cf0:	ldr	x0, [sp, #72]
   38cf4:	ldr	x1, [x0, #184]
   38cf8:	ldr	x0, [sp, #48]
   38cfc:	ldr	x0, [x0]
   38d00:	lsl	x0, x0, #3
   38d04:	add	x0, x1, x0
   38d08:	ldr	x0, [x0]
   38d0c:	cmp	x0, #0x0
   38d10:	b.eq	38d44 <rpl_re_set_registers@@Base+0x1f5c>  // b.none
   38d14:	ldr	x0, [sp, #72]
   38d18:	ldr	x1, [x0, #184]
   38d1c:	ldr	x0, [sp, #48]
   38d20:	ldr	x0, [x0]
   38d24:	lsl	x0, x0, #3
   38d28:	add	x0, x1, x0
   38d2c:	ldr	x0, [x0]
   38d30:	add	x0, x0, #0x8
   38d34:	ldr	x1, [sp, #112]
   38d38:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   38d3c:	cmp	x0, #0x0
   38d40:	b.ne	38d4c <rpl_re_set_registers@@Base+0x1f64>  // b.any
   38d44:	mov	x0, #0xffffffffffffffff    	// #-1
   38d48:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   38d4c:	ldr	x0, [sp, #32]
   38d50:	str	xzr, [x0, #8]
   38d54:	ldr	x0, [sp, #112]
   38d58:	b	38d60 <rpl_re_set_registers@@Base+0x1f78>
   38d5c:	mov	x0, #0xffffffffffffffff    	// #-1
   38d60:	ldp	x29, x30, [sp], #192
   38d64:	ret
   38d68:	stp	x29, x30, [sp, #-112]!
   38d6c:	mov	x29, sp
   38d70:	str	x19, [sp, #16]
   38d74:	str	x0, [sp, #72]
   38d78:	str	x1, [sp, #64]
   38d7c:	str	x2, [sp, #56]
   38d80:	str	x3, [sp, #48]
   38d84:	str	x4, [sp, #40]
   38d88:	str	x5, [sp, #32]
   38d8c:	ldr	x0, [sp, #72]
   38d90:	ldr	x0, [x0]
   38d94:	add	x2, x0, #0x1
   38d98:	ldr	x1, [sp, #72]
   38d9c:	str	x2, [x1]
   38da0:	str	x0, [sp, #104]
   38da4:	ldr	x0, [sp, #72]
   38da8:	ldr	x1, [x0]
   38dac:	ldr	x0, [sp, #72]
   38db0:	ldr	x0, [x0, #8]
   38db4:	cmp	x1, x0
   38db8:	b.ne	38e24 <rpl_re_set_registers@@Base+0x203c>  // b.any
   38dbc:	ldr	x0, [sp, #72]
   38dc0:	ldr	x2, [x0, #16]
   38dc4:	ldr	x0, [sp, #72]
   38dc8:	ldr	x0, [x0, #8]
   38dcc:	mov	x1, x0
   38dd0:	mov	x0, x1
   38dd4:	lsl	x0, x0, #1
   38dd8:	add	x0, x0, x1
   38ddc:	lsl	x0, x0, #5
   38de0:	mov	x1, x0
   38de4:	mov	x0, x2
   38de8:	bl	ae00 <realloc@plt>
   38dec:	str	x0, [sp, #96]
   38df0:	ldr	x0, [sp, #96]
   38df4:	cmp	x0, #0x0
   38df8:	b.ne	38e04 <rpl_re_set_registers@@Base+0x201c>  // b.any
   38dfc:	mov	w0, #0xc                   	// #12
   38e00:	b	38f4c <rpl_re_set_registers@@Base+0x2164>
   38e04:	ldr	x0, [sp, #72]
   38e08:	ldr	x0, [x0, #8]
   38e0c:	lsl	x1, x0, #1
   38e10:	ldr	x0, [sp, #72]
   38e14:	str	x1, [x0, #8]
   38e18:	ldr	x0, [sp, #72]
   38e1c:	ldr	x1, [sp, #96]
   38e20:	str	x1, [x0, #16]
   38e24:	ldr	x0, [sp, #72]
   38e28:	ldr	x2, [x0, #16]
   38e2c:	ldr	x1, [sp, #104]
   38e30:	mov	x0, x1
   38e34:	lsl	x0, x0, #1
   38e38:	add	x0, x0, x1
   38e3c:	lsl	x0, x0, #4
   38e40:	add	x0, x2, x0
   38e44:	ldr	x1, [sp, #64]
   38e48:	str	x1, [x0]
   38e4c:	ldr	x0, [sp, #72]
   38e50:	ldr	x2, [x0, #16]
   38e54:	ldr	x1, [sp, #104]
   38e58:	mov	x0, x1
   38e5c:	lsl	x0, x0, #1
   38e60:	add	x0, x0, x1
   38e64:	lsl	x0, x0, #4
   38e68:	add	x0, x2, x0
   38e6c:	ldr	x1, [sp, #56]
   38e70:	str	x1, [x0, #8]
   38e74:	ldr	x0, [sp, #48]
   38e78:	lsl	x3, x0, #4
   38e7c:	ldr	x0, [sp, #72]
   38e80:	ldr	x2, [x0, #16]
   38e84:	ldr	x1, [sp, #104]
   38e88:	mov	x0, x1
   38e8c:	lsl	x0, x0, #1
   38e90:	add	x0, x0, x1
   38e94:	lsl	x0, x0, #4
   38e98:	add	x19, x2, x0
   38e9c:	mov	x0, x3
   38ea0:	bl	ab40 <malloc@plt>
   38ea4:	str	x0, [x19, #16]
   38ea8:	ldr	x0, [sp, #72]
   38eac:	ldr	x2, [x0, #16]
   38eb0:	ldr	x1, [sp, #104]
   38eb4:	mov	x0, x1
   38eb8:	lsl	x0, x0, #1
   38ebc:	add	x0, x0, x1
   38ec0:	lsl	x0, x0, #4
   38ec4:	add	x0, x2, x0
   38ec8:	ldr	x0, [x0, #16]
   38ecc:	cmp	x0, #0x0
   38ed0:	b.ne	38edc <rpl_re_set_registers@@Base+0x20f4>  // b.any
   38ed4:	mov	w0, #0xc                   	// #12
   38ed8:	b	38f4c <rpl_re_set_registers@@Base+0x2164>
   38edc:	ldr	x0, [sp, #72]
   38ee0:	ldr	x2, [x0, #16]
   38ee4:	ldr	x1, [sp, #104]
   38ee8:	mov	x0, x1
   38eec:	lsl	x0, x0, #1
   38ef0:	add	x0, x0, x1
   38ef4:	lsl	x0, x0, #4
   38ef8:	add	x0, x2, x0
   38efc:	ldr	x3, [x0, #16]
   38f00:	ldr	x0, [sp, #48]
   38f04:	lsl	x0, x0, #4
   38f08:	mov	x2, x0
   38f0c:	ldr	x1, [sp, #40]
   38f10:	mov	x0, x3
   38f14:	bl	a790 <memcpy@plt>
   38f18:	ldr	x0, [sp, #72]
   38f1c:	ldr	x2, [x0, #16]
   38f20:	ldr	x1, [sp, #104]
   38f24:	mov	x0, x1
   38f28:	lsl	x0, x0, #1
   38f2c:	add	x0, x0, x1
   38f30:	lsl	x0, x0, #4
   38f34:	add	x0, x2, x0
   38f38:	add	x0, x0, #0x18
   38f3c:	ldr	x1, [sp, #32]
   38f40:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   38f44:	str	w0, [sp, #92]
   38f48:	ldr	w0, [sp, #92]
   38f4c:	ldr	x19, [sp, #16]
   38f50:	ldp	x29, x30, [sp], #112
   38f54:	ret
   38f58:	stp	x29, x30, [sp, #-80]!
   38f5c:	mov	x29, sp
   38f60:	str	x0, [sp, #56]
   38f64:	str	x1, [sp, #48]
   38f68:	str	x2, [sp, #40]
   38f6c:	str	x3, [sp, #32]
   38f70:	str	x4, [sp, #24]
   38f74:	ldr	x0, [sp, #56]
   38f78:	ldr	x0, [x0]
   38f7c:	sub	x1, x0, #0x1
   38f80:	ldr	x0, [sp, #56]
   38f84:	str	x1, [x0]
   38f88:	ldr	x0, [sp, #56]
   38f8c:	ldr	x0, [x0]
   38f90:	str	x0, [sp, #72]
   38f94:	ldr	x0, [sp, #72]
   38f98:	cmp	x0, #0x0
   38f9c:	b.ge	38fc0 <rpl_re_set_registers@@Base+0x21d8>  // b.tcont
   38fa0:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   38fa4:	add	x3, x0, #0x808
   38fa8:	mov	w2, #0x555                 	// #1365
   38fac:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   38fb0:	add	x1, x0, #0x720
   38fb4:	adrp	x0, 45000 <vasnprintf@@Base+0x4e04>
   38fb8:	add	x0, x0, #0x7a0
   38fbc:	bl	b630 <__assert_fail@plt>
   38fc0:	ldr	x0, [sp, #56]
   38fc4:	ldr	x2, [x0, #16]
   38fc8:	ldr	x1, [sp, #72]
   38fcc:	mov	x0, x1
   38fd0:	lsl	x0, x0, #1
   38fd4:	add	x0, x0, x1
   38fd8:	lsl	x0, x0, #4
   38fdc:	add	x0, x2, x0
   38fe0:	ldr	x1, [x0]
   38fe4:	ldr	x0, [sp, #48]
   38fe8:	str	x1, [x0]
   38fec:	ldr	x0, [sp, #56]
   38ff0:	ldr	x2, [x0, #16]
   38ff4:	ldr	x1, [sp, #72]
   38ff8:	mov	x0, x1
   38ffc:	lsl	x0, x0, #1
   39000:	add	x0, x0, x1
   39004:	lsl	x0, x0, #4
   39008:	add	x0, x2, x0
   3900c:	ldr	x1, [x0, #16]
   39010:	ldr	x0, [sp, #40]
   39014:	lsl	x0, x0, #4
   39018:	mov	x2, x0
   3901c:	ldr	x0, [sp, #32]
   39020:	bl	a790 <memcpy@plt>
   39024:	ldr	x0, [sp, #24]
   39028:	ldr	x0, [x0, #16]
   3902c:	bl	b130 <free@plt>
   39030:	ldr	x0, [sp, #56]
   39034:	ldr	x2, [x0, #16]
   39038:	ldr	x1, [sp, #72]
   3903c:	mov	x0, x1
   39040:	lsl	x0, x0, #1
   39044:	add	x0, x0, x1
   39048:	lsl	x0, x0, #4
   3904c:	add	x0, x2, x0
   39050:	ldr	x0, [x0, #16]
   39054:	bl	b130 <free@plt>
   39058:	ldr	x0, [sp, #56]
   3905c:	ldr	x2, [x0, #16]
   39060:	ldr	x1, [sp, #72]
   39064:	mov	x0, x1
   39068:	lsl	x0, x0, #1
   3906c:	add	x0, x0, x1
   39070:	lsl	x0, x0, #4
   39074:	add	x0, x2, x0
   39078:	ldr	x1, [sp, #24]
   3907c:	add	x0, x0, #0x18
   39080:	mov	x2, x1
   39084:	mov	x3, x0
   39088:	ldp	x0, x1, [x3]
   3908c:	stp	x0, x1, [x2]
   39090:	ldr	x0, [x3, #16]
   39094:	str	x0, [x2, #16]
   39098:	ldr	x0, [sp, #56]
   3909c:	ldr	x2, [x0, #16]
   390a0:	ldr	x1, [sp, #72]
   390a4:	mov	x0, x1
   390a8:	lsl	x0, x0, #1
   390ac:	add	x0, x0, x1
   390b0:	lsl	x0, x0, #4
   390b4:	add	x0, x2, x0
   390b8:	ldr	x0, [x0, #8]
   390bc:	ldp	x29, x30, [sp], #80
   390c0:	ret
   390c4:	stp	x29, x30, [sp, #-176]!
   390c8:	mov	x29, sp
   390cc:	str	x0, [x29, #56]
   390d0:	str	x1, [x29, #48]
   390d4:	str	x2, [x29, #40]
   390d8:	str	x3, [x29, #32]
   390dc:	strb	w4, [x29, #31]
   390e0:	ldr	x0, [x29, #56]
   390e4:	ldr	x0, [x0]
   390e8:	str	x0, [x29, #128]
   390ec:	str	xzr, [x29, #72]
   390f0:	mov	x0, #0x2                   	// #2
   390f4:	str	x0, [x29, #80]
   390f8:	str	xzr, [x29, #88]
   390fc:	strb	wzr, [x29, #151]
   39100:	ldrb	w0, [x29, #31]
   39104:	cmp	w0, #0x0
   39108:	b.eq	39158 <rpl_re_set_registers@@Base+0x2370>  // b.none
   3910c:	add	x0, x29, #0x48
   39110:	str	x0, [x29, #160]
   39114:	ldr	x0, [x29, #160]
   39118:	ldr	x0, [x0, #8]
   3911c:	mov	x1, x0
   39120:	mov	x0, x1
   39124:	lsl	x0, x0, #1
   39128:	add	x0, x0, x1
   3912c:	lsl	x0, x0, #4
   39130:	bl	ab40 <malloc@plt>
   39134:	mov	x1, x0
   39138:	ldr	x0, [x29, #160]
   3913c:	str	x1, [x0, #16]
   39140:	ldr	x0, [x29, #160]
   39144:	ldr	x0, [x0, #16]
   39148:	cmp	x0, #0x0
   3914c:	b.ne	3915c <rpl_re_set_registers@@Base+0x2374>  // b.any
   39150:	mov	w0, #0xc                   	// #12
   39154:	b	3947c <rpl_re_set_registers@@Base+0x2694>
   39158:	str	xzr, [x29, #160]
   3915c:	ldr	x0, [x29, #128]
   39160:	ldr	x0, [x0, #144]
   39164:	str	x0, [x29, #168]
   39168:	add	x0, x29, #0x60
   3916c:	mov	x2, #0x18                  	// #24
   39170:	mov	w1, #0x0                   	// #0
   39174:	bl	acb0 <memset@plt>
   39178:	ldr	x0, [x29, #40]
   3917c:	lsl	x0, x0, #4
   39180:	cmp	x0, #0xfbf
   39184:	b.hi	391b8 <rpl_re_set_registers@@Base+0x23d0>  // b.pmore
   39188:	ldr	x0, [x29, #40]
   3918c:	lsl	x0, x0, #4
   39190:	add	x0, x0, #0xf
   39194:	lsr	x0, x0, #4
   39198:	lsl	x0, x0, #4
   3919c:	sub	sp, sp, x0
   391a0:	mov	x0, sp
   391a4:	add	x0, x0, #0xf
   391a8:	lsr	x0, x0, #4
   391ac:	lsl	x0, x0, #4
   391b0:	str	x0, [x29, #152]
   391b4:	b	391ec <rpl_re_set_registers@@Base+0x2404>
   391b8:	ldr	x0, [x29, #40]
   391bc:	lsl	x0, x0, #4
   391c0:	bl	ab40 <malloc@plt>
   391c4:	str	x0, [x29, #152]
   391c8:	ldr	x0, [x29, #152]
   391cc:	cmp	x0, #0x0
   391d0:	b.ne	391e4 <rpl_re_set_registers@@Base+0x23fc>  // b.any
   391d4:	ldr	x0, [x29, #160]
   391d8:	bl	39488 <rpl_re_set_registers@@Base+0x26a0>
   391dc:	mov	w0, #0xc                   	// #12
   391e0:	b	3947c <rpl_re_set_registers@@Base+0x2694>
   391e4:	mov	w0, #0x1                   	// #1
   391e8:	strb	w0, [x29, #151]
   391ec:	ldr	x0, [x29, #40]
   391f0:	lsl	x0, x0, #4
   391f4:	mov	x2, x0
   391f8:	ldr	x1, [x29, #32]
   391fc:	ldr	x0, [x29, #152]
   39200:	bl	a790 <memcpy@plt>
   39204:	ldr	x0, [x29, #32]
   39208:	ldr	x0, [x0]
   3920c:	str	x0, [x29, #120]
   39210:	b	39444 <rpl_re_set_registers@@Base+0x265c>
   39214:	ldr	x0, [x29, #120]
   39218:	ldr	x1, [x29, #40]
   3921c:	mov	x5, x1
   39220:	mov	x4, x0
   39224:	ldr	x3, [x29, #168]
   39228:	ldr	x2, [x29, #152]
   3922c:	ldr	x1, [x29, #32]
   39230:	ldr	x0, [x29, #128]
   39234:	bl	39530 <rpl_re_set_registers@@Base+0x2748>
   39238:	ldr	x0, [x29, #32]
   3923c:	ldr	x1, [x0, #8]
   39240:	ldr	x0, [x29, #120]
   39244:	cmp	x1, x0
   39248:	b.ne	39358 <rpl_re_set_registers@@Base+0x2570>  // b.any
   3924c:	ldr	x0, [x29, #48]
   39250:	ldr	x0, [x0, #176]
   39254:	ldr	x1, [x29, #168]
   39258:	cmp	x1, x0
   3925c:	b.ne	39358 <rpl_re_set_registers@@Base+0x2570>  // b.any
   39260:	ldr	x0, [x29, #160]
   39264:	cmp	x0, #0x0
   39268:	b.eq	39334 <rpl_re_set_registers@@Base+0x254c>  // b.none
   3926c:	str	xzr, [x29, #136]
   39270:	b	392b8 <rpl_re_set_registers@@Base+0x24d0>
   39274:	ldr	x0, [x29, #136]
   39278:	lsl	x0, x0, #4
   3927c:	ldr	x1, [x29, #32]
   39280:	add	x0, x1, x0
   39284:	ldr	x0, [x0]
   39288:	cmp	x0, #0x0
   3928c:	b.lt	392ac <rpl_re_set_registers@@Base+0x24c4>  // b.tstop
   39290:	ldr	x0, [x29, #136]
   39294:	lsl	x0, x0, #4
   39298:	ldr	x1, [x29, #32]
   3929c:	add	x0, x1, x0
   392a0:	ldr	x0, [x0, #8]
   392a4:	cmn	x0, #0x1
   392a8:	b.eq	392cc <rpl_re_set_registers@@Base+0x24e4>  // b.none
   392ac:	ldr	x0, [x29, #136]
   392b0:	add	x0, x0, #0x1
   392b4:	str	x0, [x29, #136]
   392b8:	ldr	x0, [x29, #136]
   392bc:	ldr	x1, [x29, #40]
   392c0:	cmp	x1, x0
   392c4:	b.hi	39274 <rpl_re_set_registers@@Base+0x248c>  // b.pmore
   392c8:	b	392d0 <rpl_re_set_registers@@Base+0x24e8>
   392cc:	nop
   392d0:	ldr	x0, [x29, #40]
   392d4:	ldr	x1, [x29, #136]
   392d8:	cmp	x1, x0
   392dc:	b.ne	39308 <rpl_re_set_registers@@Base+0x2520>  // b.any
   392e0:	ldr	x0, [x29, #112]
   392e4:	bl	b130 <free@plt>
   392e8:	ldrb	w0, [x29, #151]
   392ec:	cmp	w0, #0x0
   392f0:	b.eq	392fc <rpl_re_set_registers@@Base+0x2514>  // b.none
   392f4:	ldr	x0, [x29, #152]
   392f8:	bl	b130 <free@plt>
   392fc:	ldr	x0, [x29, #160]
   39300:	bl	39488 <rpl_re_set_registers@@Base+0x26a0>
   39304:	b	3947c <rpl_re_set_registers@@Base+0x2694>
   39308:	ldr	x1, [x29, #40]
   3930c:	add	x2, x29, #0x60
   39310:	add	x0, x29, #0x78
   39314:	mov	x4, x2
   39318:	ldr	x3, [x29, #32]
   3931c:	mov	x2, x1
   39320:	mov	x1, x0
   39324:	ldr	x0, [x29, #160]
   39328:	bl	38f58 <rpl_re_set_registers@@Base+0x2170>
   3932c:	str	x0, [x29, #168]
   39330:	b	39358 <rpl_re_set_registers@@Base+0x2570>
   39334:	ldr	x0, [x29, #112]
   39338:	bl	b130 <free@plt>
   3933c:	ldrb	w0, [x29, #151]
   39340:	cmp	w0, #0x0
   39344:	b.eq	39350 <rpl_re_set_registers@@Base+0x2568>  // b.none
   39348:	ldr	x0, [x29, #152]
   3934c:	bl	b130 <free@plt>
   39350:	mov	w0, #0x0                   	// #0
   39354:	b	3947c <rpl_re_set_registers@@Base+0x2694>
   39358:	ldr	x0, [x29, #40]
   3935c:	add	x2, x29, #0x60
   39360:	add	x1, x29, #0x78
   39364:	ldr	x6, [x29, #160]
   39368:	mov	x5, x2
   3936c:	ldr	x4, [x29, #168]
   39370:	mov	x3, x1
   39374:	ldr	x2, [x29, #32]
   39378:	mov	x1, x0
   3937c:	ldr	x0, [x29, #48]
   39380:	bl	3883c <rpl_re_set_registers@@Base+0x1a54>
   39384:	str	x0, [x29, #168]
   39388:	ldr	x0, [x29, #168]
   3938c:	lsr	x0, x0, #63
   39390:	and	w0, w0, #0xff
   39394:	and	x0, x0, #0xff
   39398:	cmp	x0, #0x0
   3939c:	b.eq	39444 <rpl_re_set_registers@@Base+0x265c>  // b.none
   393a0:	ldr	x0, [x29, #168]
   393a4:	cmn	x0, #0x2
   393a8:	cset	w0, eq  // eq = none
   393ac:	and	w0, w0, #0xff
   393b0:	and	x0, x0, #0xff
   393b4:	cmp	x0, #0x0
   393b8:	b.eq	393e8 <rpl_re_set_registers@@Base+0x2600>  // b.none
   393bc:	ldr	x0, [x29, #112]
   393c0:	bl	b130 <free@plt>
   393c4:	ldrb	w0, [x29, #151]
   393c8:	cmp	w0, #0x0
   393cc:	b.eq	393d8 <rpl_re_set_registers@@Base+0x25f0>  // b.none
   393d0:	ldr	x0, [x29, #152]
   393d4:	bl	b130 <free@plt>
   393d8:	ldr	x0, [x29, #160]
   393dc:	bl	39488 <rpl_re_set_registers@@Base+0x26a0>
   393e0:	mov	w0, #0xc                   	// #12
   393e4:	b	3947c <rpl_re_set_registers@@Base+0x2694>
   393e8:	ldr	x0, [x29, #160]
   393ec:	cmp	x0, #0x0
   393f0:	b.eq	39420 <rpl_re_set_registers@@Base+0x2638>  // b.none
   393f4:	ldr	x1, [x29, #40]
   393f8:	add	x2, x29, #0x60
   393fc:	add	x0, x29, #0x78
   39400:	mov	x4, x2
   39404:	ldr	x3, [x29, #32]
   39408:	mov	x2, x1
   3940c:	mov	x1, x0
   39410:	ldr	x0, [x29, #160]
   39414:	bl	38f58 <rpl_re_set_registers@@Base+0x2170>
   39418:	str	x0, [x29, #168]
   3941c:	b	39444 <rpl_re_set_registers@@Base+0x265c>
   39420:	ldr	x0, [x29, #112]
   39424:	bl	b130 <free@plt>
   39428:	ldrb	w0, [x29, #151]
   3942c:	cmp	w0, #0x0
   39430:	b.eq	3943c <rpl_re_set_registers@@Base+0x2654>  // b.none
   39434:	ldr	x0, [x29, #152]
   39438:	bl	b130 <free@plt>
   3943c:	mov	w0, #0x1                   	// #1
   39440:	b	3947c <rpl_re_set_registers@@Base+0x2694>
   39444:	ldr	x0, [x29, #32]
   39448:	ldr	x1, [x0, #8]
   3944c:	ldr	x0, [x29, #120]
   39450:	cmp	x1, x0
   39454:	b.ge	39214 <rpl_re_set_registers@@Base+0x242c>  // b.tcont
   39458:	ldr	x0, [x29, #112]
   3945c:	bl	b130 <free@plt>
   39460:	ldrb	w0, [x29, #151]
   39464:	cmp	w0, #0x0
   39468:	b.eq	39474 <rpl_re_set_registers@@Base+0x268c>  // b.none
   3946c:	ldr	x0, [x29, #152]
   39470:	bl	b130 <free@plt>
   39474:	ldr	x0, [x29, #160]
   39478:	bl	39488 <rpl_re_set_registers@@Base+0x26a0>
   3947c:	mov	sp, x29
   39480:	ldp	x29, x30, [sp], #176
   39484:	ret
   39488:	stp	x29, x30, [sp, #-48]!
   3948c:	mov	x29, sp
   39490:	str	x0, [sp, #24]
   39494:	ldr	x0, [sp, #24]
   39498:	cmp	x0, #0x0
   3949c:	b.eq	39524 <rpl_re_set_registers@@Base+0x273c>  // b.none
   394a0:	str	xzr, [sp, #40]
   394a4:	b	39504 <rpl_re_set_registers@@Base+0x271c>
   394a8:	ldr	x0, [sp, #24]
   394ac:	ldr	x2, [x0, #16]
   394b0:	ldr	x1, [sp, #40]
   394b4:	mov	x0, x1
   394b8:	lsl	x0, x0, #1
   394bc:	add	x0, x0, x1
   394c0:	lsl	x0, x0, #4
   394c4:	add	x0, x2, x0
   394c8:	ldr	x0, [x0, #40]
   394cc:	bl	b130 <free@plt>
   394d0:	ldr	x0, [sp, #24]
   394d4:	ldr	x2, [x0, #16]
   394d8:	ldr	x1, [sp, #40]
   394dc:	mov	x0, x1
   394e0:	lsl	x0, x0, #1
   394e4:	add	x0, x0, x1
   394e8:	lsl	x0, x0, #4
   394ec:	add	x0, x2, x0
   394f0:	ldr	x0, [x0, #16]
   394f4:	bl	b130 <free@plt>
   394f8:	ldr	x0, [sp, #40]
   394fc:	add	x0, x0, #0x1
   39500:	str	x0, [sp, #40]
   39504:	ldr	x0, [sp, #24]
   39508:	ldr	x0, [x0]
   3950c:	ldr	x1, [sp, #40]
   39510:	cmp	x1, x0
   39514:	b.lt	394a8 <rpl_re_set_registers@@Base+0x26c0>  // b.tstop
   39518:	ldr	x0, [sp, #24]
   3951c:	ldr	x0, [x0, #16]
   39520:	bl	b130 <free@plt>
   39524:	mov	w0, #0x0                   	// #0
   39528:	ldp	x29, x30, [sp], #48
   3952c:	ret
   39530:	stp	x29, x30, [sp, #-96]!
   39534:	mov	x29, sp
   39538:	str	x0, [sp, #56]
   3953c:	str	x1, [sp, #48]
   39540:	str	x2, [sp, #40]
   39544:	str	x3, [sp, #32]
   39548:	str	x4, [sp, #24]
   3954c:	str	x5, [sp, #16]
   39550:	ldr	x0, [sp, #56]
   39554:	ldr	x1, [x0]
   39558:	ldr	x0, [sp, #32]
   3955c:	lsl	x0, x0, #4
   39560:	add	x0, x1, x0
   39564:	ldrb	w0, [x0, #8]
   39568:	str	w0, [sp, #92]
   3956c:	ldr	w0, [sp, #92]
   39570:	cmp	w0, #0x8
   39574:	b.ne	395dc <rpl_re_set_registers@@Base+0x27f4>  // b.any
   39578:	ldr	x0, [sp, #56]
   3957c:	ldr	x1, [x0]
   39580:	ldr	x0, [sp, #32]
   39584:	lsl	x0, x0, #4
   39588:	add	x0, x1, x0
   3958c:	ldr	x0, [x0]
   39590:	add	x0, x0, #0x1
   39594:	str	x0, [sp, #72]
   39598:	ldr	x1, [sp, #72]
   3959c:	ldr	x0, [sp, #16]
   395a0:	cmp	x1, x0
   395a4:	b.ge	396e4 <rpl_re_set_registers@@Base+0x28fc>  // b.tcont
   395a8:	ldr	x0, [sp, #72]
   395ac:	lsl	x0, x0, #4
   395b0:	ldr	x1, [sp, #48]
   395b4:	add	x0, x1, x0
   395b8:	ldr	x1, [sp, #24]
   395bc:	str	x1, [x0]
   395c0:	ldr	x0, [sp, #72]
   395c4:	lsl	x0, x0, #4
   395c8:	ldr	x1, [sp, #48]
   395cc:	add	x0, x1, x0
   395d0:	mov	x1, #0xffffffffffffffff    	// #-1
   395d4:	str	x1, [x0, #8]
   395d8:	b	396e4 <rpl_re_set_registers@@Base+0x28fc>
   395dc:	ldr	w0, [sp, #92]
   395e0:	cmp	w0, #0x9
   395e4:	b.ne	396e4 <rpl_re_set_registers@@Base+0x28fc>  // b.any
   395e8:	ldr	x0, [sp, #56]
   395ec:	ldr	x1, [x0]
   395f0:	ldr	x0, [sp, #32]
   395f4:	lsl	x0, x0, #4
   395f8:	add	x0, x1, x0
   395fc:	ldr	x0, [x0]
   39600:	add	x0, x0, #0x1
   39604:	str	x0, [sp, #80]
   39608:	ldr	x1, [sp, #80]
   3960c:	ldr	x0, [sp, #16]
   39610:	cmp	x1, x0
   39614:	b.ge	396e4 <rpl_re_set_registers@@Base+0x28fc>  // b.tcont
   39618:	ldr	x0, [sp, #80]
   3961c:	lsl	x0, x0, #4
   39620:	ldr	x1, [sp, #48]
   39624:	add	x0, x1, x0
   39628:	ldr	x0, [x0]
   3962c:	ldr	x1, [sp, #24]
   39630:	cmp	x1, x0
   39634:	b.le	3966c <rpl_re_set_registers@@Base+0x2884>
   39638:	ldr	x0, [sp, #80]
   3963c:	lsl	x0, x0, #4
   39640:	ldr	x1, [sp, #48]
   39644:	add	x0, x1, x0
   39648:	ldr	x1, [sp, #24]
   3964c:	str	x1, [x0, #8]
   39650:	ldr	x0, [sp, #16]
   39654:	lsl	x0, x0, #4
   39658:	mov	x2, x0
   3965c:	ldr	x1, [sp, #48]
   39660:	ldr	x0, [sp, #40]
   39664:	bl	a790 <memcpy@plt>
   39668:	b	396e4 <rpl_re_set_registers@@Base+0x28fc>
   3966c:	ldr	x0, [sp, #56]
   39670:	ldr	x1, [x0]
   39674:	ldr	x0, [sp, #32]
   39678:	lsl	x0, x0, #4
   3967c:	add	x0, x1, x0
   39680:	ldrb	w0, [x0, #10]
   39684:	and	w0, w0, #0x8
   39688:	and	w0, w0, #0xff
   3968c:	cmp	w0, #0x0
   39690:	b.eq	396cc <rpl_re_set_registers@@Base+0x28e4>  // b.none
   39694:	ldr	x0, [sp, #80]
   39698:	lsl	x0, x0, #4
   3969c:	ldr	x1, [sp, #40]
   396a0:	add	x0, x1, x0
   396a4:	ldr	x0, [x0]
   396a8:	cmn	x0, #0x1
   396ac:	b.eq	396cc <rpl_re_set_registers@@Base+0x28e4>  // b.none
   396b0:	ldr	x0, [sp, #16]
   396b4:	lsl	x0, x0, #4
   396b8:	mov	x2, x0
   396bc:	ldr	x1, [sp, #40]
   396c0:	ldr	x0, [sp, #48]
   396c4:	bl	a790 <memcpy@plt>
   396c8:	b	396e4 <rpl_re_set_registers@@Base+0x28fc>
   396cc:	ldr	x0, [sp, #80]
   396d0:	lsl	x0, x0, #4
   396d4:	ldr	x1, [sp, #48]
   396d8:	add	x0, x1, x0
   396dc:	ldr	x1, [sp, #24]
   396e0:	str	x1, [x0, #8]
   396e4:	nop
   396e8:	ldp	x29, x30, [sp], #96
   396ec:	ret
   396f0:	stp	x29, x30, [sp, #-80]!
   396f4:	mov	x29, sp
   396f8:	str	x0, [sp, #24]
   396fc:	str	x1, [sp, #16]
   39700:	str	wzr, [sp, #72]
   39704:	ldr	x0, [sp, #16]
   39708:	ldr	x0, [x0, #24]
   3970c:	str	x0, [sp, #64]
   39710:	ldr	x0, [sp, #16]
   39714:	ldr	x1, [x0, #16]
   39718:	add	x0, sp, #0x28
   3971c:	bl	2b520 <printf_parse@@Base+0x4228>
   39720:	str	w0, [sp, #76]
   39724:	ldr	w0, [sp, #76]
   39728:	cmp	w0, #0x0
   3972c:	cset	w0, ne  // ne = any
   39730:	and	w0, w0, #0xff
   39734:	and	x0, x0, #0xff
   39738:	cmp	x0, #0x0
   3973c:	b.eq	39748 <rpl_re_set_registers@@Base+0x2960>  // b.none
   39740:	ldr	w0, [sp, #76]
   39744:	b	398d0 <rpl_re_set_registers@@Base+0x2ae8>
   39748:	add	x0, sp, #0x28
   3974c:	mov	x3, x0
   39750:	ldr	x2, [sp, #64]
   39754:	ldr	x1, [sp, #16]
   39758:	ldr	x0, [sp, #24]
   3975c:	bl	39da0 <rpl_re_set_registers@@Base+0x2fb8>
   39760:	str	w0, [sp, #76]
   39764:	ldr	w0, [sp, #76]
   39768:	cmp	w0, #0x0
   3976c:	cset	w0, ne  // ne = any
   39770:	and	w0, w0, #0xff
   39774:	and	x0, x0, #0xff
   39778:	cmp	x0, #0x0
   3977c:	b.ne	398b0 <rpl_re_set_registers@@Base+0x2ac8>  // b.any
   39780:	b	3989c <rpl_re_set_registers@@Base+0x2ab4>
   39784:	ldr	x0, [sp, #16]
   39788:	ldr	x1, [x0]
   3978c:	ldr	x0, [sp, #64]
   39790:	lsl	x0, x0, #3
   39794:	add	x0, x1, x0
   39798:	ldr	x0, [x0]
   3979c:	cmp	x0, #0x0
   397a0:	b.ne	397b0 <rpl_re_set_registers@@Base+0x29c8>  // b.any
   397a4:	ldr	w0, [sp, #72]
   397a8:	add	w0, w0, #0x1
   397ac:	b	397b4 <rpl_re_set_registers@@Base+0x29cc>
   397b0:	mov	w0, #0x0                   	// #0
   397b4:	str	w0, [sp, #72]
   397b8:	ldr	x0, [sp, #24]
   397bc:	ldr	w0, [x0, #224]
   397c0:	ldr	w1, [sp, #72]
   397c4:	cmp	w1, w0
   397c8:	b.le	397fc <rpl_re_set_registers@@Base+0x2a14>
   397cc:	ldr	x0, [sp, #16]
   397d0:	ldr	x3, [x0]
   397d4:	ldr	x0, [sp, #64]
   397d8:	lsl	x0, x0, #3
   397dc:	mov	x2, x0
   397e0:	mov	w1, #0x0                   	// #0
   397e4:	mov	x0, x3
   397e8:	bl	acb0 <memset@plt>
   397ec:	ldr	x0, [sp, #56]
   397f0:	bl	b130 <free@plt>
   397f4:	mov	w0, #0x0                   	// #0
   397f8:	b	398d0 <rpl_re_set_registers@@Base+0x2ae8>
   397fc:	str	xzr, [sp, #48]
   39800:	ldr	x0, [sp, #64]
   39804:	sub	x0, x0, #0x1
   39808:	str	x0, [sp, #64]
   3980c:	ldr	x0, [sp, #24]
   39810:	ldr	x1, [x0, #184]
   39814:	ldr	x0, [sp, #64]
   39818:	lsl	x0, x0, #3
   3981c:	add	x0, x1, x0
   39820:	ldr	x0, [x0]
   39824:	cmp	x0, #0x0
   39828:	b.eq	39864 <rpl_re_set_registers@@Base+0x2a7c>  // b.none
   3982c:	add	x0, sp, #0x28
   39830:	mov	x3, x0
   39834:	ldr	x2, [sp, #64]
   39838:	ldr	x1, [sp, #16]
   3983c:	ldr	x0, [sp, #24]
   39840:	bl	398d8 <rpl_re_set_registers@@Base+0x2af0>
   39844:	str	w0, [sp, #76]
   39848:	ldr	w0, [sp, #76]
   3984c:	cmp	w0, #0x0
   39850:	cset	w0, ne  // ne = any
   39854:	and	w0, w0, #0xff
   39858:	and	x0, x0, #0xff
   3985c:	cmp	x0, #0x0
   39860:	b.ne	398b8 <rpl_re_set_registers@@Base+0x2ad0>  // b.any
   39864:	add	x0, sp, #0x28
   39868:	mov	x3, x0
   3986c:	ldr	x2, [sp, #64]
   39870:	ldr	x1, [sp, #16]
   39874:	ldr	x0, [sp, #24]
   39878:	bl	39da0 <rpl_re_set_registers@@Base+0x2fb8>
   3987c:	str	w0, [sp, #76]
   39880:	ldr	w0, [sp, #76]
   39884:	cmp	w0, #0x0
   39888:	cset	w0, ne  // ne = any
   3988c:	and	w0, w0, #0xff
   39890:	and	x0, x0, #0xff
   39894:	cmp	x0, #0x0
   39898:	b.ne	398c0 <rpl_re_set_registers@@Base+0x2ad8>  // b.any
   3989c:	ldr	x0, [sp, #64]
   398a0:	cmp	x0, #0x0
   398a4:	b.gt	39784 <rpl_re_set_registers@@Base+0x299c>
   398a8:	str	wzr, [sp, #76]
   398ac:	b	398c4 <rpl_re_set_registers@@Base+0x2adc>
   398b0:	nop
   398b4:	b	398c4 <rpl_re_set_registers@@Base+0x2adc>
   398b8:	nop
   398bc:	b	398c4 <rpl_re_set_registers@@Base+0x2adc>
   398c0:	nop
   398c4:	ldr	x0, [sp, #56]
   398c8:	bl	b130 <free@plt>
   398cc:	ldr	w0, [sp, #76]
   398d0:	ldp	x29, x30, [sp], #80
   398d4:	ret
   398d8:	stp	x29, x30, [sp, #-112]!
   398dc:	mov	x29, sp
   398e0:	str	x0, [sp, #40]
   398e4:	str	x1, [sp, #32]
   398e8:	str	x2, [sp, #24]
   398ec:	str	x3, [sp, #16]
   398f0:	ldr	x0, [sp, #40]
   398f4:	ldr	x0, [x0, #152]
   398f8:	str	x0, [sp, #88]
   398fc:	ldr	x0, [sp, #40]
   39900:	ldr	x1, [x0, #184]
   39904:	ldr	x0, [sp, #24]
   39908:	lsl	x0, x0, #3
   3990c:	add	x0, x1, x0
   39910:	ldr	x0, [x0]
   39914:	add	x0, x0, #0x20
   39918:	str	x0, [sp, #80]
   3991c:	str	xzr, [sp, #104]
   39920:	b	39b00 <rpl_re_set_registers@@Base+0x2d18>
   39924:	ldr	x0, [sp, #80]
   39928:	ldr	x1, [x0, #16]
   3992c:	ldr	x0, [sp, #104]
   39930:	lsl	x0, x0, #3
   39934:	add	x0, x1, x0
   39938:	ldr	x0, [x0]
   3993c:	str	x0, [sp, #72]
   39940:	str	wzr, [sp, #100]
   39944:	ldr	x0, [sp, #88]
   39948:	ldr	x1, [x0]
   3994c:	ldr	x0, [sp, #72]
   39950:	lsl	x0, x0, #4
   39954:	add	x0, x1, x0
   39958:	ldrb	w0, [x0, #10]
   3995c:	and	w0, w0, #0x10
   39960:	and	w0, w0, #0xff
   39964:	cmp	w0, #0x0
   39968:	b.eq	39990 <rpl_re_set_registers@@Base+0x2ba8>  // b.none
   3996c:	ldr	x0, [sp, #32]
   39970:	ldr	x0, [x0, #24]
   39974:	mov	x4, x0
   39978:	ldr	x3, [sp, #24]
   3997c:	ldr	x2, [sp, #72]
   39980:	ldr	x1, [sp, #32]
   39984:	ldr	x0, [sp, #40]
   39988:	bl	3b184 <rpl_re_set_registers@@Base+0x439c>
   3998c:	str	w0, [sp, #100]
   39990:	ldr	w0, [sp, #100]
   39994:	cmp	w0, #0x0
   39998:	b.ne	39a44 <rpl_re_set_registers@@Base+0x2c5c>  // b.any
   3999c:	ldr	x0, [sp, #88]
   399a0:	ldr	x1, [x0]
   399a4:	ldr	x0, [sp, #72]
   399a8:	lsl	x0, x0, #4
   399ac:	add	x0, x1, x0
   399b0:	ldr	x2, [sp, #24]
   399b4:	mov	x1, x0
   399b8:	ldr	x0, [sp, #40]
   399bc:	bl	3f498 <rpl_re_set_registers@@Base+0x86b0>
   399c0:	and	w0, w0, #0xff
   399c4:	cmp	w0, #0x0
   399c8:	b.eq	39a44 <rpl_re_set_registers@@Base+0x2c5c>  // b.none
   399cc:	ldr	x0, [sp, #32]
   399d0:	ldr	x1, [x0]
   399d4:	ldr	x0, [sp, #24]
   399d8:	add	x0, x0, #0x1
   399dc:	lsl	x0, x0, #3
   399e0:	add	x0, x1, x0
   399e4:	ldr	x0, [x0]
   399e8:	cmp	x0, #0x0
   399ec:	b.eq	39a44 <rpl_re_set_registers@@Base+0x2c5c>  // b.none
   399f0:	ldr	x0, [sp, #32]
   399f4:	ldr	x1, [x0]
   399f8:	ldr	x0, [sp, #24]
   399fc:	add	x0, x0, #0x1
   39a00:	lsl	x0, x0, #3
   39a04:	add	x0, x1, x0
   39a08:	ldr	x0, [x0]
   39a0c:	add	x2, x0, #0x8
   39a10:	ldr	x0, [sp, #88]
   39a14:	ldr	x1, [x0, #24]
   39a18:	ldr	x0, [sp, #72]
   39a1c:	lsl	x0, x0, #3
   39a20:	add	x0, x1, x0
   39a24:	ldr	x0, [x0]
   39a28:	mov	x1, x0
   39a2c:	mov	x0, x2
   39a30:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   39a34:	cmp	x0, #0x0
   39a38:	b.eq	39a44 <rpl_re_set_registers@@Base+0x2c5c>  // b.none
   39a3c:	mov	w0, #0x1                   	// #1
   39a40:	str	w0, [sp, #100]
   39a44:	ldr	w0, [sp, #100]
   39a48:	cmp	w0, #0x0
   39a4c:	b.eq	39ae8 <rpl_re_set_registers@@Base+0x2d00>  // b.none
   39a50:	ldr	x0, [sp, #32]
   39a54:	ldr	x0, [x0, #40]
   39a58:	cmp	x0, #0x0
   39a5c:	b.eq	39ab8 <rpl_re_set_registers@@Base+0x2cd0>  // b.none
   39a60:	ldrsw	x0, [sp, #100]
   39a64:	ldr	x1, [sp, #24]
   39a68:	add	x0, x1, x0
   39a6c:	str	x0, [sp, #64]
   39a70:	ldr	x0, [sp, #32]
   39a74:	add	x6, x0, #0x20
   39a78:	ldr	x0, [sp, #88]
   39a7c:	ldr	x1, [x0, #24]
   39a80:	ldr	x0, [sp, #72]
   39a84:	lsl	x0, x0, #3
   39a88:	add	x0, x1, x0
   39a8c:	ldr	x0, [x0]
   39a90:	ldr	x5, [sp, #24]
   39a94:	ldr	x4, [sp, #72]
   39a98:	ldr	x3, [sp, #64]
   39a9c:	mov	x2, x0
   39aa0:	mov	x1, x6
   39aa4:	ldr	x0, [sp, #40]
   39aa8:	bl	3a3b4 <rpl_re_set_registers@@Base+0x35cc>
   39aac:	and	w0, w0, #0xff
   39ab0:	cmp	w0, #0x0
   39ab4:	b.ne	39af0 <rpl_re_set_registers@@Base+0x2d08>  // b.any
   39ab8:	ldr	x1, [sp, #72]
   39abc:	ldr	x0, [sp, #16]
   39ac0:	bl	2c3ec <printf_parse@@Base+0x50f4>
   39ac4:	strb	w0, [sp, #63]
   39ac8:	ldrb	w0, [sp, #63]
   39acc:	eor	w0, w0, #0x1
   39ad0:	and	w0, w0, #0xff
   39ad4:	and	x0, x0, #0xff
   39ad8:	cmp	x0, #0x0
   39adc:	b.eq	39af4 <rpl_re_set_registers@@Base+0x2d0c>  // b.none
   39ae0:	mov	w0, #0xc                   	// #12
   39ae4:	b	39b18 <rpl_re_set_registers@@Base+0x2d30>
   39ae8:	nop
   39aec:	b	39af4 <rpl_re_set_registers@@Base+0x2d0c>
   39af0:	nop
   39af4:	ldr	x0, [sp, #104]
   39af8:	add	x0, x0, #0x1
   39afc:	str	x0, [sp, #104]
   39b00:	ldr	x0, [sp, #80]
   39b04:	ldr	x0, [x0, #8]
   39b08:	ldr	x1, [sp, #104]
   39b0c:	cmp	x1, x0
   39b10:	b.lt	39924 <rpl_re_set_registers@@Base+0x2b3c>  // b.tstop
   39b14:	mov	w0, #0x0                   	// #0
   39b18:	ldp	x29, x30, [sp], #112
   39b1c:	ret
   39b20:	stp	x29, x30, [sp, #-48]!
   39b24:	mov	x29, sp
   39b28:	str	x0, [sp, #24]
   39b2c:	str	x1, [sp, #16]
   39b30:	ldr	x0, [sp, #24]
   39b34:	ldr	x0, [x0, #192]
   39b38:	str	x0, [sp, #40]
   39b3c:	ldr	x0, [sp, #24]
   39b40:	ldr	x0, [x0, #64]
   39b44:	ldr	x1, [sp, #16]
   39b48:	cmp	x1, x0
   39b4c:	b.lt	39b68 <rpl_re_set_registers@@Base+0x2d80>  // b.tstop
   39b50:	ldr	x0, [sp, #24]
   39b54:	ldr	x1, [x0, #64]
   39b58:	ldr	x0, [sp, #24]
   39b5c:	ldr	x0, [x0, #88]
   39b60:	cmp	x1, x0
   39b64:	b.lt	39b94 <rpl_re_set_registers@@Base+0x2dac>  // b.tstop
   39b68:	ldr	x0, [sp, #24]
   39b6c:	ldr	x0, [x0, #48]
   39b70:	ldr	x1, [sp, #16]
   39b74:	cmp	x1, x0
   39b78:	b.lt	39bd0 <rpl_re_set_registers@@Base+0x2de8>  // b.tstop
   39b7c:	ldr	x0, [sp, #24]
   39b80:	ldr	x1, [x0, #48]
   39b84:	ldr	x0, [sp, #24]
   39b88:	ldr	x0, [x0, #88]
   39b8c:	cmp	x1, x0
   39b90:	b.ge	39bd0 <rpl_re_set_registers@@Base+0x2de8>  // b.tcont
   39b94:	ldr	x0, [sp, #16]
   39b98:	add	w0, w0, #0x1
   39b9c:	mov	w1, w0
   39ba0:	ldr	x0, [sp, #24]
   39ba4:	bl	3f6c0 <rpl_re_set_registers@@Base+0x88d8>
   39ba8:	str	w0, [sp, #36]
   39bac:	ldr	w0, [sp, #36]
   39bb0:	cmp	w0, #0x0
   39bb4:	cset	w0, ne  // ne = any
   39bb8:	and	w0, w0, #0xff
   39bbc:	and	x0, x0, #0xff
   39bc0:	cmp	x0, #0x0
   39bc4:	b.eq	39bd0 <rpl_re_set_registers@@Base+0x2de8>  // b.none
   39bc8:	ldr	w0, [sp, #36]
   39bcc:	b	39c28 <rpl_re_set_registers@@Base+0x2e40>
   39bd0:	ldr	x1, [sp, #40]
   39bd4:	ldr	x0, [sp, #16]
   39bd8:	cmp	x1, x0
   39bdc:	b.ge	39c24 <rpl_re_set_registers@@Base+0x2e3c>  // b.tcont
   39be0:	ldr	x0, [sp, #24]
   39be4:	ldr	x1, [x0, #184]
   39be8:	ldr	x0, [sp, #40]
   39bec:	add	x0, x0, #0x1
   39bf0:	lsl	x0, x0, #3
   39bf4:	add	x3, x1, x0
   39bf8:	ldr	x1, [sp, #16]
   39bfc:	ldr	x0, [sp, #40]
   39c00:	sub	x0, x1, x0
   39c04:	lsl	x0, x0, #3
   39c08:	mov	x2, x0
   39c0c:	mov	w1, #0x0                   	// #0
   39c10:	mov	x0, x3
   39c14:	bl	acb0 <memset@plt>
   39c18:	ldr	x0, [sp, #24]
   39c1c:	ldr	x1, [sp, #16]
   39c20:	str	x1, [x0, #192]
   39c24:	mov	w0, #0x0                   	// #0
   39c28:	ldp	x29, x30, [sp], #48
   39c2c:	ret
   39c30:	stp	x29, x30, [sp, #-112]!
   39c34:	mov	x29, sp
   39c38:	str	x19, [sp, #16]
   39c3c:	str	x0, [sp, #56]
   39c40:	str	x1, [sp, #48]
   39c44:	str	x2, [sp, #40]
   39c48:	str	x3, [sp, #32]
   39c4c:	str	xzr, [sp, #104]
   39c50:	b	39d80 <rpl_re_set_registers@@Base+0x2f98>
   39c54:	ldr	x0, [sp, #104]
   39c58:	lsl	x0, x0, #3
   39c5c:	ldr	x1, [sp, #48]
   39c60:	add	x0, x1, x0
   39c64:	ldr	x0, [x0]
   39c68:	cmp	x0, #0x0
   39c6c:	b.ne	39c9c <rpl_re_set_registers@@Base+0x2eb4>  // b.any
   39c70:	ldr	x0, [sp, #104]
   39c74:	lsl	x0, x0, #3
   39c78:	ldr	x1, [sp, #40]
   39c7c:	add	x1, x1, x0
   39c80:	ldr	x0, [sp, #104]
   39c84:	lsl	x0, x0, #3
   39c88:	ldr	x2, [sp, #48]
   39c8c:	add	x0, x2, x0
   39c90:	ldr	x1, [x1]
   39c94:	str	x1, [x0]
   39c98:	b	39d74 <rpl_re_set_registers@@Base+0x2f8c>
   39c9c:	ldr	x0, [sp, #104]
   39ca0:	lsl	x0, x0, #3
   39ca4:	ldr	x1, [sp, #40]
   39ca8:	add	x0, x1, x0
   39cac:	ldr	x0, [x0]
   39cb0:	cmp	x0, #0x0
   39cb4:	b.eq	39d74 <rpl_re_set_registers@@Base+0x2f8c>  // b.none
   39cb8:	ldr	x0, [sp, #104]
   39cbc:	lsl	x0, x0, #3
   39cc0:	ldr	x1, [sp, #48]
   39cc4:	add	x0, x1, x0
   39cc8:	ldr	x0, [x0]
   39ccc:	add	x3, x0, #0x8
   39cd0:	ldr	x0, [sp, #104]
   39cd4:	lsl	x0, x0, #3
   39cd8:	ldr	x1, [sp, #40]
   39cdc:	add	x0, x1, x0
   39ce0:	ldr	x0, [x0]
   39ce4:	add	x1, x0, #0x8
   39ce8:	add	x0, sp, #0x48
   39cec:	mov	x2, x1
   39cf0:	mov	x1, x3
   39cf4:	bl	2bc30 <printf_parse@@Base+0x4938>
   39cf8:	str	w0, [sp, #100]
   39cfc:	ldr	w0, [sp, #100]
   39d00:	cmp	w0, #0x0
   39d04:	cset	w0, ne  // ne = any
   39d08:	and	w0, w0, #0xff
   39d0c:	and	x0, x0, #0xff
   39d10:	cmp	x0, #0x0
   39d14:	b.eq	39d20 <rpl_re_set_registers@@Base+0x2f38>  // b.none
   39d18:	ldr	w0, [sp, #100]
   39d1c:	b	39d94 <rpl_re_set_registers@@Base+0x2fac>
   39d20:	ldr	x0, [sp, #104]
   39d24:	lsl	x0, x0, #3
   39d28:	ldr	x1, [sp, #48]
   39d2c:	add	x19, x1, x0
   39d30:	add	x1, sp, #0x48
   39d34:	add	x0, sp, #0x64
   39d38:	mov	x2, x1
   39d3c:	ldr	x1, [sp, #56]
   39d40:	bl	2cd64 <printf_parse@@Base+0x5a6c>
   39d44:	str	x0, [x19]
   39d48:	ldr	x0, [sp, #88]
   39d4c:	bl	b130 <free@plt>
   39d50:	ldr	w0, [sp, #100]
   39d54:	cmp	w0, #0x0
   39d58:	cset	w0, ne  // ne = any
   39d5c:	and	w0, w0, #0xff
   39d60:	and	x0, x0, #0xff
   39d64:	cmp	x0, #0x0
   39d68:	b.eq	39d74 <rpl_re_set_registers@@Base+0x2f8c>  // b.none
   39d6c:	ldr	w0, [sp, #100]
   39d70:	b	39d94 <rpl_re_set_registers@@Base+0x2fac>
   39d74:	ldr	x0, [sp, #104]
   39d78:	add	x0, x0, #0x1
   39d7c:	str	x0, [sp, #104]
   39d80:	ldr	x1, [sp, #104]
   39d84:	ldr	x0, [sp, #32]
   39d88:	cmp	x1, x0
   39d8c:	b.lt	39c54 <rpl_re_set_registers@@Base+0x2e6c>  // b.tstop
   39d90:	mov	w0, #0x0                   	// #0
   39d94:	ldr	x19, [sp, #16]
   39d98:	ldp	x29, x30, [sp], #112
   39d9c:	ret
   39da0:	stp	x29, x30, [sp, #-96]!
   39da4:	mov	x29, sp
   39da8:	str	x19, [sp, #16]
   39dac:	str	x0, [sp, #56]
   39db0:	str	x1, [sp, #48]
   39db4:	str	x2, [sp, #40]
   39db8:	str	x3, [sp, #32]
   39dbc:	ldr	x0, [sp, #56]
   39dc0:	ldr	x0, [x0, #152]
   39dc4:	str	x0, [sp, #88]
   39dc8:	str	wzr, [sp, #76]
   39dcc:	ldr	x0, [sp, #56]
   39dd0:	ldr	x1, [x0, #184]
   39dd4:	ldr	x0, [sp, #40]
   39dd8:	lsl	x0, x0, #3
   39ddc:	add	x0, x1, x0
   39de0:	ldr	x0, [x0]
   39de4:	cmp	x0, #0x0
   39de8:	b.eq	39e0c <rpl_re_set_registers@@Base+0x3024>  // b.none
   39dec:	ldr	x0, [sp, #56]
   39df0:	ldr	x1, [x0, #184]
   39df4:	ldr	x0, [sp, #40]
   39df8:	lsl	x0, x0, #3
   39dfc:	add	x0, x1, x0
   39e00:	ldr	x0, [x0]
   39e04:	add	x0, x0, #0x8
   39e08:	b	39e10 <rpl_re_set_registers@@Base+0x3028>
   39e0c:	mov	x0, #0x0                   	// #0
   39e10:	str	x0, [sp, #80]
   39e14:	ldr	x0, [sp, #32]
   39e18:	ldr	x0, [x0, #8]
   39e1c:	cmp	x0, #0x0
   39e20:	b.ne	39e40 <rpl_re_set_registers@@Base+0x3058>  // b.any
   39e24:	ldr	x0, [sp, #48]
   39e28:	ldr	x1, [x0]
   39e2c:	ldr	x0, [sp, #40]
   39e30:	lsl	x0, x0, #3
   39e34:	add	x0, x1, x0
   39e38:	str	xzr, [x0]
   39e3c:	b	39f34 <rpl_re_set_registers@@Base+0x314c>
   39e40:	ldr	x0, [sp, #80]
   39e44:	cmp	x0, #0x0
   39e48:	b.eq	39ee8 <rpl_re_set_registers@@Base+0x3100>  // b.none
   39e4c:	ldr	x2, [sp, #80]
   39e50:	ldr	x1, [sp, #32]
   39e54:	ldr	x0, [sp, #88]
   39e58:	bl	39fb8 <rpl_re_set_registers@@Base+0x31d0>
   39e5c:	str	w0, [sp, #76]
   39e60:	ldr	w0, [sp, #76]
   39e64:	cmp	w0, #0x0
   39e68:	cset	w0, ne  // ne = any
   39e6c:	and	w0, w0, #0xff
   39e70:	and	x0, x0, #0xff
   39e74:	cmp	x0, #0x0
   39e78:	b.eq	39e84 <rpl_re_set_registers@@Base+0x309c>  // b.none
   39e7c:	ldr	w0, [sp, #76]
   39e80:	b	39fac <rpl_re_set_registers@@Base+0x31c4>
   39e84:	ldr	x0, [sp, #48]
   39e88:	ldr	x0, [x0, #40]
   39e8c:	cmp	x0, #0x0
   39e90:	b.eq	39ee8 <rpl_re_set_registers@@Base+0x3100>  // b.none
   39e94:	ldr	x0, [sp, #48]
   39e98:	add	x1, x0, #0x20
   39e9c:	ldr	x0, [sp, #56]
   39ea0:	ldr	x0, [x0, #216]
   39ea4:	ldr	x5, [sp, #40]
   39ea8:	mov	x4, x0
   39eac:	mov	x3, x1
   39eb0:	ldr	x2, [sp, #80]
   39eb4:	ldr	x1, [sp, #32]
   39eb8:	ldr	x0, [sp, #88]
   39ebc:	bl	3a91c <rpl_re_set_registers@@Base+0x3b34>
   39ec0:	str	w0, [sp, #76]
   39ec4:	ldr	w0, [sp, #76]
   39ec8:	cmp	w0, #0x0
   39ecc:	cset	w0, ne  // ne = any
   39ed0:	and	w0, w0, #0xff
   39ed4:	and	x0, x0, #0xff
   39ed8:	cmp	x0, #0x0
   39edc:	b.eq	39ee8 <rpl_re_set_registers@@Base+0x3100>  // b.none
   39ee0:	ldr	w0, [sp, #76]
   39ee4:	b	39fac <rpl_re_set_registers@@Base+0x31c4>
   39ee8:	ldr	x0, [sp, #48]
   39eec:	ldr	x1, [x0]
   39ef0:	ldr	x0, [sp, #40]
   39ef4:	lsl	x0, x0, #3
   39ef8:	add	x19, x1, x0
   39efc:	add	x0, sp, #0x4c
   39f00:	ldr	x2, [sp, #32]
   39f04:	ldr	x1, [sp, #88]
   39f08:	bl	2cd64 <printf_parse@@Base+0x5a6c>
   39f0c:	str	x0, [x19]
   39f10:	ldr	w0, [sp, #76]
   39f14:	cmp	w0, #0x0
   39f18:	cset	w0, ne  // ne = any
   39f1c:	and	w0, w0, #0xff
   39f20:	and	x0, x0, #0xff
   39f24:	cmp	x0, #0x0
   39f28:	b.eq	39f34 <rpl_re_set_registers@@Base+0x314c>  // b.none
   39f2c:	ldr	w0, [sp, #76]
   39f30:	b	39fac <rpl_re_set_registers@@Base+0x31c4>
   39f34:	ldr	x0, [sp, #80]
   39f38:	cmp	x0, #0x0
   39f3c:	b.eq	39fa8 <rpl_re_set_registers@@Base+0x31c0>  // b.none
   39f40:	ldr	x0, [sp, #56]
   39f44:	ldr	x1, [x0, #184]
   39f48:	ldr	x0, [sp, #40]
   39f4c:	lsl	x0, x0, #3
   39f50:	add	x0, x1, x0
   39f54:	ldr	x0, [x0]
   39f58:	ldrb	w0, [x0, #104]
   39f5c:	and	w0, w0, #0x40
   39f60:	and	w0, w0, #0xff
   39f64:	cmp	w0, #0x0
   39f68:	b.eq	39fa8 <rpl_re_set_registers@@Base+0x31c0>  // b.none
   39f6c:	ldr	x3, [sp, #80]
   39f70:	ldr	x2, [sp, #40]
   39f74:	ldr	x1, [sp, #48]
   39f78:	ldr	x0, [sp, #56]
   39f7c:	bl	3ad14 <rpl_re_set_registers@@Base+0x3f2c>
   39f80:	str	w0, [sp, #76]
   39f84:	ldr	w0, [sp, #76]
   39f88:	cmp	w0, #0x0
   39f8c:	cset	w0, ne  // ne = any
   39f90:	and	w0, w0, #0xff
   39f94:	and	x0, x0, #0xff
   39f98:	cmp	x0, #0x0
   39f9c:	b.eq	39fa8 <rpl_re_set_registers@@Base+0x31c0>  // b.none
   39fa0:	ldr	w0, [sp, #76]
   39fa4:	b	39fac <rpl_re_set_registers@@Base+0x31c4>
   39fa8:	mov	w0, #0x0                   	// #0
   39fac:	ldr	x19, [sp, #16]
   39fb0:	ldp	x29, x30, [sp], #96
   39fb4:	ret
   39fb8:	stp	x29, x30, [sp, #-80]!
   39fbc:	mov	x29, sp
   39fc0:	str	x0, [sp, #40]
   39fc4:	str	x1, [sp, #32]
   39fc8:	str	x2, [sp, #24]
   39fcc:	str	wzr, [sp, #60]
   39fd0:	add	x0, sp, #0x3c
   39fd4:	ldr	x2, [sp, #32]
   39fd8:	ldr	x1, [sp, #40]
   39fdc:	bl	2cd64 <printf_parse@@Base+0x5a6c>
   39fe0:	str	x0, [sp, #64]
   39fe4:	ldr	w0, [sp, #60]
   39fe8:	cmp	w0, #0x0
   39fec:	cset	w0, ne  // ne = any
   39ff0:	and	w0, w0, #0xff
   39ff4:	and	x0, x0, #0xff
   39ff8:	cmp	x0, #0x0
   39ffc:	b.eq	3a008 <rpl_re_set_registers@@Base+0x3220>  // b.none
   3a000:	ldr	w0, [sp, #60]
   3a004:	b	3a110 <rpl_re_set_registers@@Base+0x3328>
   3a008:	ldr	x0, [sp, #64]
   3a00c:	ldr	x0, [x0, #56]
   3a010:	cmp	x0, #0x0
   3a014:	b.ne	3a0f8 <rpl_re_set_registers@@Base+0x3310>  // b.any
   3a018:	ldr	x0, [sp, #64]
   3a01c:	add	x2, x0, #0x38
   3a020:	ldr	x0, [sp, #32]
   3a024:	ldr	x0, [x0, #8]
   3a028:	mov	x1, x0
   3a02c:	mov	x0, x2
   3a030:	bl	2b4b0 <printf_parse@@Base+0x41b8>
   3a034:	str	w0, [sp, #60]
   3a038:	ldr	w0, [sp, #60]
   3a03c:	cmp	w0, #0x0
   3a040:	cset	w0, ne  // ne = any
   3a044:	and	w0, w0, #0xff
   3a048:	and	x0, x0, #0xff
   3a04c:	cmp	x0, #0x0
   3a050:	b.eq	3a05c <rpl_re_set_registers@@Base+0x3274>  // b.none
   3a054:	mov	w0, #0xc                   	// #12
   3a058:	b	3a110 <rpl_re_set_registers@@Base+0x3328>
   3a05c:	str	xzr, [sp, #72]
   3a060:	b	3a0e4 <rpl_re_set_registers@@Base+0x32fc>
   3a064:	ldr	x0, [sp, #64]
   3a068:	add	x3, x0, #0x38
   3a06c:	ldr	x0, [sp, #40]
   3a070:	ldr	x1, [x0, #56]
   3a074:	ldr	x0, [sp, #32]
   3a078:	ldr	x2, [x0, #16]
   3a07c:	ldr	x0, [sp, #72]
   3a080:	lsl	x0, x0, #3
   3a084:	add	x0, x2, x0
   3a088:	ldr	x0, [x0]
   3a08c:	mov	x2, x0
   3a090:	mov	x0, x2
   3a094:	lsl	x0, x0, #1
   3a098:	add	x0, x0, x2
   3a09c:	lsl	x0, x0, #3
   3a0a0:	add	x0, x1, x0
   3a0a4:	mov	x1, x0
   3a0a8:	mov	x0, x3
   3a0ac:	bl	2bfa0 <printf_parse@@Base+0x4ca8>
   3a0b0:	str	w0, [sp, #60]
   3a0b4:	ldr	w0, [sp, #60]
   3a0b8:	cmp	w0, #0x0
   3a0bc:	cset	w0, ne  // ne = any
   3a0c0:	and	w0, w0, #0xff
   3a0c4:	and	x0, x0, #0xff
   3a0c8:	cmp	x0, #0x0
   3a0cc:	b.eq	3a0d8 <rpl_re_set_registers@@Base+0x32f0>  // b.none
   3a0d0:	mov	w0, #0xc                   	// #12
   3a0d4:	b	3a110 <rpl_re_set_registers@@Base+0x3328>
   3a0d8:	ldr	x0, [sp, #72]
   3a0dc:	add	x0, x0, #0x1
   3a0e0:	str	x0, [sp, #72]
   3a0e4:	ldr	x0, [sp, #32]
   3a0e8:	ldr	x0, [x0, #8]
   3a0ec:	ldr	x1, [sp, #72]
   3a0f0:	cmp	x1, x0
   3a0f4:	b.lt	3a064 <rpl_re_set_registers@@Base+0x327c>  // b.tstop
   3a0f8:	ldr	x0, [sp, #64]
   3a0fc:	add	x0, x0, #0x38
   3a100:	mov	x2, x0
   3a104:	ldr	x1, [sp, #24]
   3a108:	ldr	x0, [sp, #32]
   3a10c:	bl	2b79c <printf_parse@@Base+0x44a4>
   3a110:	ldp	x29, x30, [sp], #80
   3a114:	ret
   3a118:	stp	x29, x30, [sp, #-144]!
   3a11c:	mov	x29, sp
   3a120:	str	x0, [sp, #40]
   3a124:	str	x1, [sp, #32]
   3a128:	str	x2, [sp, #24]
   3a12c:	str	x3, [sp, #16]
   3a130:	ldr	x0, [sp, #40]
   3a134:	ldr	x2, [x0, #56]
   3a138:	ldr	x1, [sp, #32]
   3a13c:	mov	x0, x1
   3a140:	lsl	x0, x0, #1
   3a144:	add	x0, x0, x1
   3a148:	lsl	x0, x0, #3
   3a14c:	add	x0, x2, x0
   3a150:	str	x0, [sp, #128]
   3a154:	add	x0, sp, #0x38
   3a158:	mov	x2, #0x18                  	// #24
   3a15c:	mov	w1, #0x0                   	// #0
   3a160:	bl	acb0 <memset@plt>
   3a164:	str	xzr, [sp, #136]
   3a168:	b	3a314 <rpl_re_set_registers@@Base+0x352c>
   3a16c:	ldr	x0, [sp, #128]
   3a170:	ldr	x1, [x0, #16]
   3a174:	ldr	x0, [sp, #136]
   3a178:	lsl	x0, x0, #3
   3a17c:	add	x0, x1, x0
   3a180:	ldr	x0, [x0]
   3a184:	str	x0, [sp, #104]
   3a188:	ldr	x1, [sp, #104]
   3a18c:	ldr	x0, [sp, #32]
   3a190:	cmp	x1, x0
   3a194:	b.eq	3a304 <rpl_re_set_registers@@Base+0x351c>  // b.none
   3a198:	ldr	x0, [sp, #40]
   3a19c:	ldr	x1, [x0]
   3a1a0:	ldr	x0, [sp, #104]
   3a1a4:	lsl	x0, x0, #4
   3a1a8:	add	x0, x1, x0
   3a1ac:	ldrb	w0, [x0, #8]
   3a1b0:	and	w0, w0, #0x8
   3a1b4:	cmp	w0, #0x0
   3a1b8:	b.eq	3a308 <rpl_re_set_registers@@Base+0x3520>  // b.none
   3a1bc:	ldr	x0, [sp, #40]
   3a1c0:	ldr	x2, [x0, #40]
   3a1c4:	ldr	x1, [sp, #104]
   3a1c8:	mov	x0, x1
   3a1cc:	lsl	x0, x0, #1
   3a1d0:	add	x0, x0, x1
   3a1d4:	lsl	x0, x0, #3
   3a1d8:	add	x0, x2, x0
   3a1dc:	ldr	x0, [x0, #16]
   3a1e0:	ldr	x0, [x0]
   3a1e4:	str	x0, [sp, #96]
   3a1e8:	ldr	x0, [sp, #40]
   3a1ec:	ldr	x2, [x0, #40]
   3a1f0:	ldr	x1, [sp, #104]
   3a1f4:	mov	x0, x1
   3a1f8:	lsl	x0, x0, #1
   3a1fc:	add	x0, x0, x1
   3a200:	lsl	x0, x0, #3
   3a204:	add	x0, x2, x0
   3a208:	ldr	x0, [x0, #8]
   3a20c:	cmp	x0, #0x1
   3a210:	b.le	3a240 <rpl_re_set_registers@@Base+0x3458>
   3a214:	ldr	x0, [sp, #40]
   3a218:	ldr	x2, [x0, #40]
   3a21c:	ldr	x1, [sp, #104]
   3a220:	mov	x0, x1
   3a224:	lsl	x0, x0, #1
   3a228:	add	x0, x0, x1
   3a22c:	lsl	x0, x0, #3
   3a230:	add	x0, x2, x0
   3a234:	ldr	x0, [x0, #16]
   3a238:	ldr	x0, [x0, #8]
   3a23c:	b	3a244 <rpl_re_set_registers@@Base+0x345c>
   3a240:	mov	x0, #0xffffffffffffffff    	// #-1
   3a244:	str	x0, [sp, #88]
   3a248:	ldr	x1, [sp, #96]
   3a24c:	ldr	x0, [sp, #128]
   3a250:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3a254:	cmp	x0, #0x0
   3a258:	b.ne	3a270 <rpl_re_set_registers@@Base+0x3488>  // b.any
   3a25c:	ldr	x1, [sp, #96]
   3a260:	ldr	x0, [sp, #24]
   3a264:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3a268:	cmp	x0, #0x0
   3a26c:	b.ne	3a2a4 <rpl_re_set_registers@@Base+0x34bc>  // b.any
   3a270:	ldr	x0, [sp, #88]
   3a274:	cmp	x0, #0x0
   3a278:	b.le	3a308 <rpl_re_set_registers@@Base+0x3520>
   3a27c:	ldr	x1, [sp, #88]
   3a280:	ldr	x0, [sp, #128]
   3a284:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3a288:	cmp	x0, #0x0
   3a28c:	b.ne	3a308 <rpl_re_set_registers@@Base+0x3520>  // b.any
   3a290:	ldr	x1, [sp, #88]
   3a294:	ldr	x0, [sp, #24]
   3a298:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3a29c:	cmp	x0, #0x0
   3a2a0:	b.eq	3a308 <rpl_re_set_registers@@Base+0x3520>  // b.none
   3a2a4:	ldr	x0, [sp, #40]
   3a2a8:	ldr	x2, [x0, #56]
   3a2ac:	ldr	x1, [sp, #104]
   3a2b0:	mov	x0, x1
   3a2b4:	lsl	x0, x0, #1
   3a2b8:	add	x0, x0, x1
   3a2bc:	lsl	x0, x0, #3
   3a2c0:	add	x1, x2, x0
   3a2c4:	add	x0, sp, #0x38
   3a2c8:	mov	x2, x1
   3a2cc:	ldr	x1, [sp, #16]
   3a2d0:	bl	2b79c <printf_parse@@Base+0x44a4>
   3a2d4:	str	w0, [sp, #84]
   3a2d8:	ldr	w0, [sp, #84]
   3a2dc:	cmp	w0, #0x0
   3a2e0:	cset	w0, ne  // ne = any
   3a2e4:	and	w0, w0, #0xff
   3a2e8:	and	x0, x0, #0xff
   3a2ec:	cmp	x0, #0x0
   3a2f0:	b.eq	3a308 <rpl_re_set_registers@@Base+0x3520>  // b.none
   3a2f4:	ldr	x0, [sp, #72]
   3a2f8:	bl	b130 <free@plt>
   3a2fc:	ldr	w0, [sp, #84]
   3a300:	b	3a3ac <rpl_re_set_registers@@Base+0x35c4>
   3a304:	nop
   3a308:	ldr	x0, [sp, #136]
   3a30c:	add	x0, x0, #0x1
   3a310:	str	x0, [sp, #136]
   3a314:	ldr	x0, [sp, #128]
   3a318:	ldr	x0, [x0, #8]
   3a31c:	ldr	x1, [sp, #136]
   3a320:	cmp	x1, x0
   3a324:	b.lt	3a16c <rpl_re_set_registers@@Base+0x3384>  // b.tstop
   3a328:	str	xzr, [sp, #136]
   3a32c:	b	3a38c <rpl_re_set_registers@@Base+0x35a4>
   3a330:	ldr	x0, [sp, #128]
   3a334:	ldr	x1, [x0, #16]
   3a338:	ldr	x0, [sp, #136]
   3a33c:	lsl	x0, x0, #3
   3a340:	add	x0, x1, x0
   3a344:	ldr	x0, [x0]
   3a348:	str	x0, [sp, #120]
   3a34c:	add	x0, sp, #0x38
   3a350:	ldr	x1, [sp, #120]
   3a354:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3a358:	cmp	x0, #0x0
   3a35c:	b.ne	3a380 <rpl_re_set_registers@@Base+0x3598>  // b.any
   3a360:	ldr	x1, [sp, #120]
   3a364:	ldr	x0, [sp, #24]
   3a368:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3a36c:	sub	x0, x0, #0x1
   3a370:	str	x0, [sp, #112]
   3a374:	ldr	x1, [sp, #112]
   3a378:	ldr	x0, [sp, #24]
   3a37c:	bl	2c87c <printf_parse@@Base+0x5584>
   3a380:	ldr	x0, [sp, #136]
   3a384:	add	x0, x0, #0x1
   3a388:	str	x0, [sp, #136]
   3a38c:	ldr	x0, [sp, #128]
   3a390:	ldr	x0, [x0, #8]
   3a394:	ldr	x1, [sp, #136]
   3a398:	cmp	x1, x0
   3a39c:	b.lt	3a330 <rpl_re_set_registers@@Base+0x3548>  // b.tstop
   3a3a0:	ldr	x0, [sp, #72]
   3a3a4:	bl	b130 <free@plt>
   3a3a8:	mov	w0, #0x0                   	// #0
   3a3ac:	ldp	x29, x30, [sp], #144
   3a3b0:	ret
   3a3b4:	stp	x29, x30, [sp, #-128]!
   3a3b8:	mov	x29, sp
   3a3bc:	str	x0, [sp, #56]
   3a3c0:	str	x1, [sp, #48]
   3a3c4:	str	x2, [sp, #40]
   3a3c8:	str	x3, [sp, #32]
   3a3cc:	str	x4, [sp, #24]
   3a3d0:	str	x5, [sp, #16]
   3a3d4:	ldr	x0, [sp, #56]
   3a3d8:	ldr	x0, [x0, #152]
   3a3dc:	str	x0, [sp, #112]
   3a3e0:	ldr	x1, [sp, #32]
   3a3e4:	ldr	x0, [sp, #56]
   3a3e8:	bl	3fdfc <rpl_re_set_registers@@Base+0x9014>
   3a3ec:	str	x0, [sp, #104]
   3a3f0:	ldr	x1, [sp, #16]
   3a3f4:	ldr	x0, [sp, #56]
   3a3f8:	bl	3fdfc <rpl_re_set_registers@@Base+0x9014>
   3a3fc:	str	x0, [sp, #96]
   3a400:	str	xzr, [sp, #120]
   3a404:	b	3a504 <rpl_re_set_registers@@Base+0x371c>
   3a408:	ldr	x0, [sp, #56]
   3a40c:	ldr	x1, [x0, #216]
   3a410:	ldr	x0, [sp, #48]
   3a414:	ldr	x2, [x0, #16]
   3a418:	ldr	x0, [sp, #120]
   3a41c:	lsl	x0, x0, #3
   3a420:	add	x0, x2, x0
   3a424:	ldr	x0, [x0]
   3a428:	mov	x2, x0
   3a42c:	mov	x0, x2
   3a430:	lsl	x0, x0, #2
   3a434:	add	x0, x0, x2
   3a438:	lsl	x0, x0, #3
   3a43c:	add	x0, x1, x0
   3a440:	str	x0, [sp, #88]
   3a444:	ldr	x0, [sp, #112]
   3a448:	ldr	x1, [x0]
   3a44c:	ldr	x0, [sp, #88]
   3a450:	ldr	x0, [x0]
   3a454:	lsl	x0, x0, #4
   3a458:	add	x0, x1, x0
   3a45c:	ldr	x0, [x0]
   3a460:	str	x0, [sp, #80]
   3a464:	ldr	x0, [sp, #48]
   3a468:	ldr	x1, [x0, #16]
   3a46c:	ldr	x0, [sp, #120]
   3a470:	lsl	x0, x0, #3
   3a474:	add	x0, x1, x0
   3a478:	ldr	x0, [x0]
   3a47c:	ldr	x5, [sp, #104]
   3a480:	ldr	x4, [sp, #32]
   3a484:	ldr	x3, [sp, #40]
   3a488:	ldr	x2, [sp, #80]
   3a48c:	mov	x1, x0
   3a490:	ldr	x0, [sp, #56]
   3a494:	bl	3a824 <rpl_re_set_registers@@Base+0x3a3c>
   3a498:	sxtw	x0, w0
   3a49c:	str	x0, [sp, #72]
   3a4a0:	ldr	x0, [sp, #48]
   3a4a4:	ldr	x1, [x0, #16]
   3a4a8:	ldr	x0, [sp, #120]
   3a4ac:	lsl	x0, x0, #3
   3a4b0:	add	x0, x1, x0
   3a4b4:	ldr	x0, [x0]
   3a4b8:	ldr	x5, [sp, #96]
   3a4bc:	ldr	x4, [sp, #16]
   3a4c0:	ldr	x3, [sp, #24]
   3a4c4:	ldr	x2, [sp, #80]
   3a4c8:	mov	x1, x0
   3a4cc:	ldr	x0, [sp, #56]
   3a4d0:	bl	3a824 <rpl_re_set_registers@@Base+0x3a3c>
   3a4d4:	sxtw	x0, w0
   3a4d8:	str	x0, [sp, #64]
   3a4dc:	ldr	x1, [sp, #64]
   3a4e0:	ldr	x0, [sp, #72]
   3a4e4:	cmp	x1, x0
   3a4e8:	b.ne	3a4fc <rpl_re_set_registers@@Base+0x3714>  // b.any
   3a4ec:	ldr	x0, [sp, #120]
   3a4f0:	add	x0, x0, #0x1
   3a4f4:	str	x0, [sp, #120]
   3a4f8:	b	3a504 <rpl_re_set_registers@@Base+0x371c>
   3a4fc:	mov	w0, #0x1                   	// #1
   3a500:	b	3a51c <rpl_re_set_registers@@Base+0x3734>
   3a504:	ldr	x0, [sp, #48]
   3a508:	ldr	x0, [x0, #8]
   3a50c:	ldr	x1, [sp, #120]
   3a510:	cmp	x1, x0
   3a514:	b.lt	3a408 <rpl_re_set_registers@@Base+0x3620>  // b.tstop
   3a518:	mov	w0, #0x0                   	// #0
   3a51c:	ldp	x29, x30, [sp], #128
   3a520:	ret
   3a524:	stp	x29, x30, [sp, #-128]!
   3a528:	mov	x29, sp
   3a52c:	str	x0, [sp, #56]
   3a530:	str	w1, [sp, #52]
   3a534:	str	x2, [sp, #40]
   3a538:	str	x3, [sp, #32]
   3a53c:	str	x4, [sp, #24]
   3a540:	ldr	x0, [sp, #56]
   3a544:	ldr	x0, [x0, #152]
   3a548:	str	x0, [sp, #104]
   3a54c:	ldr	x0, [sp, #104]
   3a550:	ldr	x2, [x0, #48]
   3a554:	ldr	x1, [sp, #32]
   3a558:	mov	x0, x1
   3a55c:	lsl	x0, x0, #1
   3a560:	add	x0, x0, x1
   3a564:	lsl	x0, x0, #3
   3a568:	add	x0, x2, x0
   3a56c:	str	x0, [sp, #96]
   3a570:	str	xzr, [sp, #120]
   3a574:	b	3a7fc <rpl_re_set_registers@@Base+0x3a14>
   3a578:	ldr	x0, [sp, #96]
   3a57c:	ldr	x1, [x0, #16]
   3a580:	ldr	x0, [sp, #120]
   3a584:	lsl	x0, x0, #3
   3a588:	add	x0, x1, x0
   3a58c:	ldr	x0, [x0]
   3a590:	str	x0, [sp, #88]
   3a594:	ldr	x0, [sp, #104]
   3a598:	ldr	x1, [x0]
   3a59c:	ldr	x0, [sp, #88]
   3a5a0:	lsl	x0, x0, #4
   3a5a4:	add	x0, x1, x0
   3a5a8:	ldrb	w0, [x0, #8]
   3a5ac:	cmp	w0, #0x9
   3a5b0:	b.eq	3a798 <rpl_re_set_registers@@Base+0x39b0>  // b.none
   3a5b4:	cmp	w0, #0x9
   3a5b8:	b.gt	3a7d4 <rpl_re_set_registers@@Base+0x39ec>
   3a5bc:	cmp	w0, #0x4
   3a5c0:	b.eq	3a5d0 <rpl_re_set_registers@@Base+0x37e8>  // b.none
   3a5c4:	cmp	w0, #0x8
   3a5c8:	b.eq	3a75c <rpl_re_set_registers@@Base+0x3974>  // b.none
   3a5cc:	b	3a7d4 <rpl_re_set_registers@@Base+0x39ec>
   3a5d0:	ldr	x0, [sp, #24]
   3a5d4:	cmn	x0, #0x1
   3a5d8:	b.eq	3a7dc <rpl_re_set_registers@@Base+0x39f4>  // b.none
   3a5dc:	ldr	x0, [sp, #56]
   3a5e0:	ldr	x2, [x0, #216]
   3a5e4:	ldr	x1, [sp, #24]
   3a5e8:	mov	x0, x1
   3a5ec:	lsl	x0, x0, #2
   3a5f0:	add	x0, x0, x1
   3a5f4:	lsl	x0, x0, #3
   3a5f8:	add	x0, x2, x0
   3a5fc:	str	x0, [sp, #112]
   3a600:	ldr	x0, [sp, #112]
   3a604:	ldr	x0, [x0]
   3a608:	ldr	x1, [sp, #88]
   3a60c:	cmp	x1, x0
   3a610:	b.ne	3a734 <rpl_re_set_registers@@Base+0x394c>  // b.any
   3a614:	ldr	x0, [sp, #40]
   3a618:	cmp	x0, #0x3f
   3a61c:	b.gt	3a640 <rpl_re_set_registers@@Base+0x3858>
   3a620:	ldr	x0, [sp, #112]
   3a624:	ldrh	w0, [x0, #34]
   3a628:	and	x0, x0, #0xffff
   3a62c:	ldr	x1, [sp, #40]
   3a630:	lsr	x0, x0, x1
   3a634:	and	x0, x0, #0x1
   3a638:	cmp	x0, #0x0
   3a63c:	b.eq	3a73c <rpl_re_set_registers@@Base+0x3954>  // b.none
   3a640:	ldr	x0, [sp, #104]
   3a644:	ldr	x2, [x0, #40]
   3a648:	ldr	x1, [sp, #88]
   3a64c:	mov	x0, x1
   3a650:	lsl	x0, x0, #1
   3a654:	add	x0, x0, x1
   3a658:	lsl	x0, x0, #3
   3a65c:	add	x0, x2, x0
   3a660:	ldr	x0, [x0, #16]
   3a664:	ldr	x0, [x0]
   3a668:	str	x0, [sp, #80]
   3a66c:	ldr	x1, [sp, #80]
   3a670:	ldr	x0, [sp, #32]
   3a674:	cmp	x1, x0
   3a678:	b.ne	3a69c <rpl_re_set_registers@@Base+0x38b4>  // b.any
   3a67c:	ldr	w0, [sp, #52]
   3a680:	and	w0, w0, #0x1
   3a684:	cmp	w0, #0x0
   3a688:	b.eq	3a694 <rpl_re_set_registers@@Base+0x38ac>  // b.none
   3a68c:	mov	w0, #0xffffffff            	// #-1
   3a690:	b	3a81c <rpl_re_set_registers@@Base+0x3a34>
   3a694:	mov	w0, #0x0                   	// #0
   3a698:	b	3a81c <rpl_re_set_registers@@Base+0x3a34>
   3a69c:	ldr	x4, [sp, #24]
   3a6a0:	ldr	x3, [sp, #80]
   3a6a4:	ldr	x2, [sp, #40]
   3a6a8:	ldr	w1, [sp, #52]
   3a6ac:	ldr	x0, [sp, #56]
   3a6b0:	bl	3a524 <rpl_re_set_registers@@Base+0x373c>
   3a6b4:	str	w0, [sp, #76]
   3a6b8:	ldr	w0, [sp, #76]
   3a6bc:	cmn	w0, #0x1
   3a6c0:	b.ne	3a6cc <rpl_re_set_registers@@Base+0x38e4>  // b.any
   3a6c4:	mov	w0, #0xffffffff            	// #-1
   3a6c8:	b	3a81c <rpl_re_set_registers@@Base+0x3a34>
   3a6cc:	ldr	w0, [sp, #76]
   3a6d0:	cmp	w0, #0x0
   3a6d4:	b.ne	3a6f0 <rpl_re_set_registers@@Base+0x3908>  // b.any
   3a6d8:	ldr	w0, [sp, #52]
   3a6dc:	and	w0, w0, #0x2
   3a6e0:	cmp	w0, #0x0
   3a6e4:	b.eq	3a6f0 <rpl_re_set_registers@@Base+0x3908>  // b.none
   3a6e8:	mov	w0, #0x0                   	// #0
   3a6ec:	b	3a81c <rpl_re_set_registers@@Base+0x3a34>
   3a6f0:	ldr	x0, [sp, #40]
   3a6f4:	cmp	x0, #0x3f
   3a6f8:	b.gt	3a740 <rpl_re_set_registers@@Base+0x3958>
   3a6fc:	ldr	x0, [sp, #112]
   3a700:	ldrh	w1, [x0, #34]
   3a704:	ldr	x0, [sp, #40]
   3a708:	mov	w2, w0
   3a70c:	mov	x0, #0x1                   	// #1
   3a710:	lsl	x0, x0, x2
   3a714:	and	w0, w0, #0xffff
   3a718:	mvn	w0, w0
   3a71c:	and	w0, w0, #0xffff
   3a720:	and	w0, w1, w0
   3a724:	and	w1, w0, #0xffff
   3a728:	ldr	x0, [sp, #112]
   3a72c:	strh	w1, [x0, #34]
   3a730:	b	3a740 <rpl_re_set_registers@@Base+0x3958>
   3a734:	nop
   3a738:	b	3a740 <rpl_re_set_registers@@Base+0x3958>
   3a73c:	nop
   3a740:	ldr	x0, [sp, #112]
   3a744:	add	x1, x0, #0x28
   3a748:	str	x1, [sp, #112]
   3a74c:	ldrb	w0, [x0, #32]
   3a750:	cmp	w0, #0x0
   3a754:	b.ne	3a600 <rpl_re_set_registers@@Base+0x3818>  // b.any
   3a758:	b	3a7dc <rpl_re_set_registers@@Base+0x39f4>
   3a75c:	ldr	w0, [sp, #52]
   3a760:	and	w0, w0, #0x1
   3a764:	cmp	w0, #0x0
   3a768:	b.eq	3a7e4 <rpl_re_set_registers@@Base+0x39fc>  // b.none
   3a76c:	ldr	x0, [sp, #104]
   3a770:	ldr	x1, [x0]
   3a774:	ldr	x0, [sp, #88]
   3a778:	lsl	x0, x0, #4
   3a77c:	add	x0, x1, x0
   3a780:	ldr	x0, [x0]
   3a784:	ldr	x1, [sp, #40]
   3a788:	cmp	x1, x0
   3a78c:	b.ne	3a7e4 <rpl_re_set_registers@@Base+0x39fc>  // b.any
   3a790:	mov	w0, #0xffffffff            	// #-1
   3a794:	b	3a81c <rpl_re_set_registers@@Base+0x3a34>
   3a798:	ldr	w0, [sp, #52]
   3a79c:	and	w0, w0, #0x2
   3a7a0:	cmp	w0, #0x0
   3a7a4:	b.eq	3a7ec <rpl_re_set_registers@@Base+0x3a04>  // b.none
   3a7a8:	ldr	x0, [sp, #104]
   3a7ac:	ldr	x1, [x0]
   3a7b0:	ldr	x0, [sp, #88]
   3a7b4:	lsl	x0, x0, #4
   3a7b8:	add	x0, x1, x0
   3a7bc:	ldr	x0, [x0]
   3a7c0:	ldr	x1, [sp, #40]
   3a7c4:	cmp	x1, x0
   3a7c8:	b.ne	3a7ec <rpl_re_set_registers@@Base+0x3a04>  // b.any
   3a7cc:	mov	w0, #0x0                   	// #0
   3a7d0:	b	3a81c <rpl_re_set_registers@@Base+0x3a34>
   3a7d4:	nop
   3a7d8:	b	3a7f0 <rpl_re_set_registers@@Base+0x3a08>
   3a7dc:	nop
   3a7e0:	b	3a7f0 <rpl_re_set_registers@@Base+0x3a08>
   3a7e4:	nop
   3a7e8:	b	3a7f0 <rpl_re_set_registers@@Base+0x3a08>
   3a7ec:	nop
   3a7f0:	ldr	x0, [sp, #120]
   3a7f4:	add	x0, x0, #0x1
   3a7f8:	str	x0, [sp, #120]
   3a7fc:	ldr	x0, [sp, #96]
   3a800:	ldr	x0, [x0, #8]
   3a804:	ldr	x1, [sp, #120]
   3a808:	cmp	x1, x0
   3a80c:	b.lt	3a578 <rpl_re_set_registers@@Base+0x3790>  // b.tstop
   3a810:	ldr	w0, [sp, #52]
   3a814:	asr	w0, w0, #1
   3a818:	and	w0, w0, #0x1
   3a81c:	ldp	x29, x30, [sp], #128
   3a820:	ret
   3a824:	stp	x29, x30, [sp, #-80]!
   3a828:	mov	x29, sp
   3a82c:	str	x0, [sp, #56]
   3a830:	str	x1, [sp, #48]
   3a834:	str	x2, [sp, #40]
   3a838:	str	x3, [sp, #32]
   3a83c:	str	x4, [sp, #24]
   3a840:	str	x5, [sp, #16]
   3a844:	ldr	x0, [sp, #56]
   3a848:	ldr	x2, [x0, #216]
   3a84c:	ldr	x1, [sp, #48]
   3a850:	mov	x0, x1
   3a854:	lsl	x0, x0, #2
   3a858:	add	x0, x0, x1
   3a85c:	lsl	x0, x0, #3
   3a860:	add	x0, x2, x0
   3a864:	str	x0, [sp, #72]
   3a868:	ldr	x0, [sp, #72]
   3a86c:	ldr	x0, [x0, #16]
   3a870:	ldr	x1, [sp, #24]
   3a874:	cmp	x1, x0
   3a878:	b.ge	3a884 <rpl_re_set_registers@@Base+0x3a9c>  // b.tcont
   3a87c:	mov	w0, #0xffffffff            	// #-1
   3a880:	b	3a914 <rpl_re_set_registers@@Base+0x3b2c>
   3a884:	ldr	x0, [sp, #72]
   3a888:	ldr	x0, [x0, #24]
   3a88c:	ldr	x1, [sp, #24]
   3a890:	cmp	x1, x0
   3a894:	b.le	3a8a0 <rpl_re_set_registers@@Base+0x3ab8>
   3a898:	mov	w0, #0x1                   	// #1
   3a89c:	b	3a914 <rpl_re_set_registers@@Base+0x3b2c>
   3a8a0:	ldr	x0, [sp, #72]
   3a8a4:	ldr	x0, [x0, #16]
   3a8a8:	ldr	x1, [sp, #24]
   3a8ac:	cmp	x1, x0
   3a8b0:	cset	w0, eq  // eq = none
   3a8b4:	and	w0, w0, #0xff
   3a8b8:	str	w0, [sp, #68]
   3a8bc:	ldr	x0, [sp, #72]
   3a8c0:	ldr	x0, [x0, #24]
   3a8c4:	ldr	x1, [sp, #24]
   3a8c8:	cmp	x1, x0
   3a8cc:	b.ne	3a8d8 <rpl_re_set_registers@@Base+0x3af0>  // b.any
   3a8d0:	mov	w0, #0x2                   	// #2
   3a8d4:	b	3a8dc <rpl_re_set_registers@@Base+0x3af4>
   3a8d8:	mov	w0, #0x0                   	// #0
   3a8dc:	ldr	w1, [sp, #68]
   3a8e0:	orr	w0, w1, w0
   3a8e4:	str	w0, [sp, #68]
   3a8e8:	ldr	w0, [sp, #68]
   3a8ec:	cmp	w0, #0x0
   3a8f0:	b.ne	3a8fc <rpl_re_set_registers@@Base+0x3b14>  // b.any
   3a8f4:	mov	w0, #0x0                   	// #0
   3a8f8:	b	3a914 <rpl_re_set_registers@@Base+0x3b2c>
   3a8fc:	ldr	x4, [sp, #16]
   3a900:	ldr	x3, [sp, #32]
   3a904:	ldr	x2, [sp, #40]
   3a908:	ldr	w1, [sp, #68]
   3a90c:	ldr	x0, [sp, #56]
   3a910:	bl	3a524 <rpl_re_set_registers@@Base+0x373c>
   3a914:	ldp	x29, x30, [sp], #80
   3a918:	ret
   3a91c:	stp	x29, x30, [sp, #-160]!
   3a920:	mov	x29, sp
   3a924:	str	x0, [sp, #56]
   3a928:	str	x1, [sp, #48]
   3a92c:	str	x2, [sp, #40]
   3a930:	str	x3, [sp, #32]
   3a934:	str	x4, [sp, #24]
   3a938:	str	x5, [sp, #16]
   3a93c:	str	xzr, [sp, #144]
   3a940:	b	3acf4 <rpl_re_set_registers@@Base+0x3f0c>
   3a944:	ldr	x0, [sp, #32]
   3a948:	ldr	x1, [x0, #16]
   3a94c:	ldr	x0, [sp, #144]
   3a950:	lsl	x0, x0, #3
   3a954:	add	x0, x1, x0
   3a958:	ldr	x0, [x0]
   3a95c:	mov	x1, x0
   3a960:	mov	x0, x1
   3a964:	lsl	x0, x0, #2
   3a968:	add	x0, x0, x1
   3a96c:	lsl	x0, x0, #3
   3a970:	mov	x1, x0
   3a974:	ldr	x0, [sp, #24]
   3a978:	add	x0, x0, x1
   3a97c:	str	x0, [sp, #120]
   3a980:	ldr	x0, [sp, #120]
   3a984:	ldr	x0, [x0, #16]
   3a988:	ldr	x1, [sp, #16]
   3a98c:	cmp	x1, x0
   3a990:	b.le	3ace4 <rpl_re_set_registers@@Base+0x3efc>
   3a994:	ldr	x0, [sp, #120]
   3a998:	ldr	x0, [x0, #8]
   3a99c:	ldr	x1, [sp, #16]
   3a9a0:	cmp	x1, x0
   3a9a4:	b.gt	3ace4 <rpl_re_set_registers@@Base+0x3efc>
   3a9a8:	ldr	x0, [sp, #56]
   3a9ac:	ldr	x1, [x0]
   3a9b0:	ldr	x0, [sp, #120]
   3a9b4:	ldr	x0, [x0]
   3a9b8:	lsl	x0, x0, #4
   3a9bc:	add	x0, x1, x0
   3a9c0:	ldr	x0, [x0]
   3a9c4:	str	x0, [sp, #112]
   3a9c8:	ldr	x0, [sp, #120]
   3a9cc:	ldr	x0, [x0, #24]
   3a9d0:	ldr	x1, [sp, #16]
   3a9d4:	cmp	x1, x0
   3a9d8:	b.ne	3ac04 <rpl_re_set_registers@@Base+0x3e1c>  // b.any
   3a9dc:	mov	x0, #0xffffffffffffffff    	// #-1
   3a9e0:	str	x0, [sp, #136]
   3a9e4:	mov	x0, #0xffffffffffffffff    	// #-1
   3a9e8:	str	x0, [sp, #128]
   3a9ec:	str	xzr, [sp, #152]
   3a9f0:	b	3aaac <rpl_re_set_registers@@Base+0x3cc4>
   3a9f4:	ldr	x0, [sp, #48]
   3a9f8:	ldr	x1, [x0, #16]
   3a9fc:	ldr	x0, [sp, #152]
   3aa00:	lsl	x0, x0, #3
   3aa04:	add	x0, x1, x0
   3aa08:	ldr	x0, [x0]
   3aa0c:	str	x0, [sp, #80]
   3aa10:	ldr	x0, [sp, #56]
   3aa14:	ldr	x1, [x0]
   3aa18:	ldr	x0, [sp, #80]
   3aa1c:	lsl	x0, x0, #4
   3aa20:	add	x0, x1, x0
   3aa24:	ldrb	w0, [x0, #8]
   3aa28:	str	w0, [sp, #76]
   3aa2c:	ldr	w0, [sp, #76]
   3aa30:	cmp	w0, #0x8
   3aa34:	b.ne	3aa68 <rpl_re_set_registers@@Base+0x3c80>  // b.any
   3aa38:	ldr	x0, [sp, #56]
   3aa3c:	ldr	x1, [x0]
   3aa40:	ldr	x0, [sp, #80]
   3aa44:	lsl	x0, x0, #4
   3aa48:	add	x0, x1, x0
   3aa4c:	ldr	x0, [x0]
   3aa50:	ldr	x1, [sp, #112]
   3aa54:	cmp	x1, x0
   3aa58:	b.ne	3aa68 <rpl_re_set_registers@@Base+0x3c80>  // b.any
   3aa5c:	ldr	x0, [sp, #80]
   3aa60:	str	x0, [sp, #136]
   3aa64:	b	3aaa0 <rpl_re_set_registers@@Base+0x3cb8>
   3aa68:	ldr	w0, [sp, #76]
   3aa6c:	cmp	w0, #0x9
   3aa70:	b.ne	3aaa0 <rpl_re_set_registers@@Base+0x3cb8>  // b.any
   3aa74:	ldr	x0, [sp, #56]
   3aa78:	ldr	x1, [x0]
   3aa7c:	ldr	x0, [sp, #80]
   3aa80:	lsl	x0, x0, #4
   3aa84:	add	x0, x1, x0
   3aa88:	ldr	x0, [x0]
   3aa8c:	ldr	x1, [sp, #112]
   3aa90:	cmp	x1, x0
   3aa94:	b.ne	3aaa0 <rpl_re_set_registers@@Base+0x3cb8>  // b.any
   3aa98:	ldr	x0, [sp, #80]
   3aa9c:	str	x0, [sp, #128]
   3aaa0:	ldr	x0, [sp, #152]
   3aaa4:	add	x0, x0, #0x1
   3aaa8:	str	x0, [sp, #152]
   3aaac:	ldr	x0, [sp, #48]
   3aab0:	ldr	x0, [x0, #8]
   3aab4:	ldr	x1, [sp, #152]
   3aab8:	cmp	x1, x0
   3aabc:	b.lt	3a9f4 <rpl_re_set_registers@@Base+0x3c0c>  // b.tstop
   3aac0:	ldr	x0, [sp, #136]
   3aac4:	cmp	x0, #0x0
   3aac8:	b.lt	3ab08 <rpl_re_set_registers@@Base+0x3d20>  // b.tstop
   3aacc:	ldr	x3, [sp, #40]
   3aad0:	ldr	x2, [sp, #48]
   3aad4:	ldr	x1, [sp, #136]
   3aad8:	ldr	x0, [sp, #56]
   3aadc:	bl	3a118 <rpl_re_set_registers@@Base+0x3330>
   3aae0:	str	w0, [sp, #96]
   3aae4:	ldr	w0, [sp, #96]
   3aae8:	cmp	w0, #0x0
   3aaec:	cset	w0, ne  // ne = any
   3aaf0:	and	w0, w0, #0xff
   3aaf4:	and	x0, x0, #0xff
   3aaf8:	cmp	x0, #0x0
   3aafc:	b.eq	3ab08 <rpl_re_set_registers@@Base+0x3d20>  // b.none
   3ab00:	ldr	w0, [sp, #96]
   3ab04:	b	3ad0c <rpl_re_set_registers@@Base+0x3f24>
   3ab08:	ldr	x0, [sp, #128]
   3ab0c:	cmp	x0, #0x0
   3ab10:	b.lt	3ace8 <rpl_re_set_registers@@Base+0x3f00>  // b.tstop
   3ab14:	str	xzr, [sp, #152]
   3ab18:	b	3abec <rpl_re_set_registers@@Base+0x3e04>
   3ab1c:	ldr	x0, [sp, #48]
   3ab20:	ldr	x1, [x0, #16]
   3ab24:	ldr	x0, [sp, #152]
   3ab28:	lsl	x0, x0, #3
   3ab2c:	add	x0, x1, x0
   3ab30:	ldr	x0, [x0]
   3ab34:	str	x0, [sp, #88]
   3ab38:	ldr	x0, [sp, #56]
   3ab3c:	ldr	x2, [x0, #56]
   3ab40:	ldr	x1, [sp, #88]
   3ab44:	mov	x0, x1
   3ab48:	lsl	x0, x0, #1
   3ab4c:	add	x0, x0, x1
   3ab50:	lsl	x0, x0, #3
   3ab54:	add	x0, x2, x0
   3ab58:	ldr	x1, [sp, #128]
   3ab5c:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3ab60:	cmp	x0, #0x0
   3ab64:	b.ne	3abe0 <rpl_re_set_registers@@Base+0x3df8>  // b.any
   3ab68:	ldr	x0, [sp, #56]
   3ab6c:	ldr	x2, [x0, #48]
   3ab70:	ldr	x1, [sp, #88]
   3ab74:	mov	x0, x1
   3ab78:	lsl	x0, x0, #1
   3ab7c:	add	x0, x0, x1
   3ab80:	lsl	x0, x0, #3
   3ab84:	add	x0, x2, x0
   3ab88:	ldr	x1, [sp, #128]
   3ab8c:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3ab90:	cmp	x0, #0x0
   3ab94:	b.ne	3abe0 <rpl_re_set_registers@@Base+0x3df8>  // b.any
   3ab98:	ldr	x3, [sp, #40]
   3ab9c:	ldr	x2, [sp, #48]
   3aba0:	ldr	x1, [sp, #88]
   3aba4:	ldr	x0, [sp, #56]
   3aba8:	bl	3a118 <rpl_re_set_registers@@Base+0x3330>
   3abac:	str	w0, [sp, #96]
   3abb0:	ldr	w0, [sp, #96]
   3abb4:	cmp	w0, #0x0
   3abb8:	cset	w0, ne  // ne = any
   3abbc:	and	w0, w0, #0xff
   3abc0:	and	x0, x0, #0xff
   3abc4:	cmp	x0, #0x0
   3abc8:	b.eq	3abd4 <rpl_re_set_registers@@Base+0x3dec>  // b.none
   3abcc:	ldr	w0, [sp, #96]
   3abd0:	b	3ad0c <rpl_re_set_registers@@Base+0x3f24>
   3abd4:	ldr	x0, [sp, #152]
   3abd8:	sub	x0, x0, #0x1
   3abdc:	str	x0, [sp, #152]
   3abe0:	ldr	x0, [sp, #152]
   3abe4:	add	x0, x0, #0x1
   3abe8:	str	x0, [sp, #152]
   3abec:	ldr	x0, [sp, #48]
   3abf0:	ldr	x0, [x0, #8]
   3abf4:	ldr	x1, [sp, #152]
   3abf8:	cmp	x1, x0
   3abfc:	b.lt	3ab1c <rpl_re_set_registers@@Base+0x3d34>  // b.tstop
   3ac00:	b	3ace8 <rpl_re_set_registers@@Base+0x3f00>
   3ac04:	str	xzr, [sp, #152]
   3ac08:	b	3accc <rpl_re_set_registers@@Base+0x3ee4>
   3ac0c:	ldr	x0, [sp, #48]
   3ac10:	ldr	x1, [x0, #16]
   3ac14:	ldr	x0, [sp, #152]
   3ac18:	lsl	x0, x0, #3
   3ac1c:	add	x0, x1, x0
   3ac20:	ldr	x0, [x0]
   3ac24:	str	x0, [sp, #104]
   3ac28:	ldr	x0, [sp, #56]
   3ac2c:	ldr	x1, [x0]
   3ac30:	ldr	x0, [sp, #104]
   3ac34:	lsl	x0, x0, #4
   3ac38:	add	x0, x1, x0
   3ac3c:	ldrb	w0, [x0, #8]
   3ac40:	str	w0, [sp, #100]
   3ac44:	ldr	w0, [sp, #100]
   3ac48:	cmp	w0, #0x9
   3ac4c:	b.eq	3ac5c <rpl_re_set_registers@@Base+0x3e74>  // b.none
   3ac50:	ldr	w0, [sp, #100]
   3ac54:	cmp	w0, #0x8
   3ac58:	b.ne	3acc0 <rpl_re_set_registers@@Base+0x3ed8>  // b.any
   3ac5c:	ldr	x0, [sp, #56]
   3ac60:	ldr	x1, [x0]
   3ac64:	ldr	x0, [sp, #104]
   3ac68:	lsl	x0, x0, #4
   3ac6c:	add	x0, x1, x0
   3ac70:	ldr	x0, [x0]
   3ac74:	ldr	x1, [sp, #112]
   3ac78:	cmp	x1, x0
   3ac7c:	b.ne	3acbc <rpl_re_set_registers@@Base+0x3ed4>  // b.any
   3ac80:	ldr	x3, [sp, #40]
   3ac84:	ldr	x2, [sp, #48]
   3ac88:	ldr	x1, [sp, #104]
   3ac8c:	ldr	x0, [sp, #56]
   3ac90:	bl	3a118 <rpl_re_set_registers@@Base+0x3330>
   3ac94:	str	w0, [sp, #96]
   3ac98:	ldr	w0, [sp, #96]
   3ac9c:	cmp	w0, #0x0
   3aca0:	cset	w0, ne  // ne = any
   3aca4:	and	w0, w0, #0xff
   3aca8:	and	x0, x0, #0xff
   3acac:	cmp	x0, #0x0
   3acb0:	b.eq	3acc0 <rpl_re_set_registers@@Base+0x3ed8>  // b.none
   3acb4:	ldr	w0, [sp, #96]
   3acb8:	b	3ad0c <rpl_re_set_registers@@Base+0x3f24>
   3acbc:	nop
   3acc0:	ldr	x0, [sp, #152]
   3acc4:	add	x0, x0, #0x1
   3acc8:	str	x0, [sp, #152]
   3accc:	ldr	x0, [sp, #48]
   3acd0:	ldr	x0, [x0, #8]
   3acd4:	ldr	x1, [sp, #152]
   3acd8:	cmp	x1, x0
   3acdc:	b.lt	3ac0c <rpl_re_set_registers@@Base+0x3e24>  // b.tstop
   3ace0:	b	3ace8 <rpl_re_set_registers@@Base+0x3f00>
   3ace4:	nop
   3ace8:	ldr	x0, [sp, #144]
   3acec:	add	x0, x0, #0x1
   3acf0:	str	x0, [sp, #144]
   3acf4:	ldr	x0, [sp, #32]
   3acf8:	ldr	x0, [x0, #8]
   3acfc:	ldr	x1, [sp, #144]
   3ad00:	cmp	x1, x0
   3ad04:	b.lt	3a944 <rpl_re_set_registers@@Base+0x3b5c>  // b.tstop
   3ad08:	mov	w0, #0x0                   	// #0
   3ad0c:	ldp	x29, x30, [sp], #160
   3ad10:	ret
   3ad14:	stp	x29, x30, [sp, #-208]!
   3ad18:	mov	x29, sp
   3ad1c:	str	x0, [sp, #40]
   3ad20:	str	x1, [sp, #32]
   3ad24:	str	x2, [sp, #24]
   3ad28:	str	x3, [sp, #16]
   3ad2c:	ldr	x0, [sp, #40]
   3ad30:	ldr	x0, [x0, #152]
   3ad34:	str	x0, [sp, #168]
   3ad38:	ldr	x1, [sp, #24]
   3ad3c:	ldr	x0, [sp, #40]
   3ad40:	bl	3fdfc <rpl_re_set_registers@@Base+0x9014>
   3ad44:	str	x0, [sp, #160]
   3ad48:	ldr	x0, [sp, #160]
   3ad4c:	cmn	x0, #0x1
   3ad50:	b.ne	3ad5c <rpl_re_set_registers@@Base+0x3f74>  // b.any
   3ad54:	mov	w0, #0x0                   	// #0
   3ad58:	b	3b17c <rpl_re_set_registers@@Base+0x4394>
   3ad5c:	str	xzr, [sp, #48]
   3ad60:	str	xzr, [sp, #192]
   3ad64:	b	3b134 <rpl_re_set_registers@@Base+0x434c>
   3ad68:	ldr	x0, [sp, #16]
   3ad6c:	ldr	x1, [x0, #16]
   3ad70:	ldr	x0, [sp, #192]
   3ad74:	lsl	x0, x0, #3
   3ad78:	add	x0, x1, x0
   3ad7c:	ldr	x0, [x0]
   3ad80:	str	x0, [sp, #152]
   3ad84:	ldr	x0, [sp, #168]
   3ad88:	ldr	x1, [x0]
   3ad8c:	ldr	x0, [sp, #152]
   3ad90:	lsl	x0, x0, #4
   3ad94:	add	x0, x1, x0
   3ad98:	ldrb	w0, [x0, #8]
   3ad9c:	str	w0, [sp, #148]
   3ada0:	ldr	x0, [sp, #32]
   3ada4:	ldr	x0, [x0, #16]
   3ada8:	ldr	x1, [sp, #152]
   3adac:	cmp	x1, x0
   3adb0:	b.ne	3adc8 <rpl_re_set_registers@@Base+0x3fe0>  // b.any
   3adb4:	ldr	x0, [sp, #32]
   3adb8:	ldr	x0, [x0, #24]
   3adbc:	ldr	x1, [sp, #24]
   3adc0:	cmp	x1, x0
   3adc4:	b.eq	3b11c <rpl_re_set_registers@@Base+0x4334>  // b.none
   3adc8:	ldr	w0, [sp, #148]
   3adcc:	cmp	w0, #0x4
   3add0:	b.ne	3b124 <rpl_re_set_registers@@Base+0x433c>  // b.any
   3add4:	ldr	x0, [sp, #40]
   3add8:	ldr	x2, [x0, #216]
   3addc:	ldr	x1, [sp, #160]
   3ade0:	mov	x0, x1
   3ade4:	lsl	x0, x0, #2
   3ade8:	add	x0, x0, x1
   3adec:	lsl	x0, x0, #3
   3adf0:	add	x0, x2, x0
   3adf4:	str	x0, [sp, #176]
   3adf8:	ldr	x0, [sp, #160]
   3adfc:	str	x0, [sp, #184]
   3ae00:	ldr	x0, [sp, #176]
   3ae04:	ldr	x0, [x0]
   3ae08:	ldr	x1, [sp, #152]
   3ae0c:	cmp	x1, x0
   3ae10:	b.ne	3b0e8 <rpl_re_set_registers@@Base+0x4300>  // b.any
   3ae14:	ldr	x0, [sp, #176]
   3ae18:	ldr	x1, [x0, #24]
   3ae1c:	ldr	x0, [sp, #176]
   3ae20:	ldr	x0, [x0, #16]
   3ae24:	sub	x0, x1, x0
   3ae28:	str	x0, [sp, #136]
   3ae2c:	ldr	x1, [sp, #24]
   3ae30:	ldr	x0, [sp, #136]
   3ae34:	add	x0, x1, x0
   3ae38:	str	x0, [sp, #128]
   3ae3c:	ldr	x0, [sp, #136]
   3ae40:	cmp	x0, #0x0
   3ae44:	b.eq	3ae64 <rpl_re_set_registers@@Base+0x407c>  // b.none
   3ae48:	ldr	x0, [sp, #168]
   3ae4c:	ldr	x1, [x0, #24]
   3ae50:	ldr	x0, [sp, #152]
   3ae54:	lsl	x0, x0, #3
   3ae58:	add	x0, x1, x0
   3ae5c:	ldr	x0, [x0]
   3ae60:	b	3ae8c <rpl_re_set_registers@@Base+0x40a4>
   3ae64:	ldr	x0, [sp, #168]
   3ae68:	ldr	x2, [x0, #40]
   3ae6c:	ldr	x1, [sp, #152]
   3ae70:	mov	x0, x1
   3ae74:	lsl	x0, x0, #1
   3ae78:	add	x0, x0, x1
   3ae7c:	lsl	x0, x0, #3
   3ae80:	add	x0, x2, x0
   3ae84:	ldr	x0, [x0, #16]
   3ae88:	ldr	x0, [x0]
   3ae8c:	str	x0, [sp, #120]
   3ae90:	ldr	x0, [sp, #32]
   3ae94:	ldr	x0, [x0, #24]
   3ae98:	ldr	x1, [sp, #128]
   3ae9c:	cmp	x1, x0
   3aea0:	b.gt	3b0f0 <rpl_re_set_registers@@Base+0x4308>
   3aea4:	ldr	x0, [sp, #32]
   3aea8:	ldr	x1, [x0]
   3aeac:	ldr	x0, [sp, #128]
   3aeb0:	lsl	x0, x0, #3
   3aeb4:	add	x0, x1, x0
   3aeb8:	ldr	x0, [x0]
   3aebc:	cmp	x0, #0x0
   3aec0:	b.eq	3b0f0 <rpl_re_set_registers@@Base+0x4308>  // b.none
   3aec4:	ldr	x0, [sp, #32]
   3aec8:	ldr	x1, [x0]
   3aecc:	ldr	x0, [sp, #128]
   3aed0:	lsl	x0, x0, #3
   3aed4:	add	x0, x1, x0
   3aed8:	ldr	x0, [x0]
   3aedc:	cmp	x0, #0x0
   3aee0:	b.eq	3b0f0 <rpl_re_set_registers@@Base+0x4308>  // b.none
   3aee4:	ldr	x0, [sp, #32]
   3aee8:	ldr	x1, [x0]
   3aeec:	ldr	x0, [sp, #128]
   3aef0:	lsl	x0, x0, #3
   3aef4:	add	x0, x1, x0
   3aef8:	ldr	x0, [x0]
   3aefc:	add	x0, x0, #0x8
   3af00:	ldr	x1, [sp, #120]
   3af04:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3af08:	cmp	x0, #0x0
   3af0c:	b.eq	3b0f0 <rpl_re_set_registers@@Base+0x4308>  // b.none
   3af10:	ldr	x0, [sp, #32]
   3af14:	add	x0, x0, #0x20
   3af18:	ldr	x5, [sp, #128]
   3af1c:	ldr	x4, [sp, #120]
   3af20:	ldr	x3, [sp, #24]
   3af24:	ldr	x2, [sp, #152]
   3af28:	mov	x1, x0
   3af2c:	ldr	x0, [sp, #40]
   3af30:	bl	3a3b4 <rpl_re_set_registers@@Base+0x35cc>
   3af34:	and	w0, w0, #0xff
   3af38:	cmp	w0, #0x0
   3af3c:	b.ne	3b0f0 <rpl_re_set_registers@@Base+0x4308>  // b.any
   3af40:	ldr	x0, [sp, #48]
   3af44:	cmp	x0, #0x0
   3af48:	b.ne	3afa8 <rpl_re_set_registers@@Base+0x41c0>  // b.any
   3af4c:	ldr	x1, [sp, #32]
   3af50:	add	x0, sp, #0x30
   3af54:	ldp	x2, x3, [x1]
   3af58:	stp	x2, x3, [x0]
   3af5c:	ldp	x2, x3, [x1, #16]
   3af60:	stp	x2, x3, [x0, #16]
   3af64:	ldp	x2, x3, [x1, #32]
   3af68:	stp	x2, x3, [x0, #32]
   3af6c:	ldr	x1, [x1, #48]
   3af70:	str	x1, [x0, #48]
   3af74:	ldr	x0, [sp, #32]
   3af78:	add	x1, x0, #0x20
   3af7c:	add	x0, sp, #0x30
   3af80:	add	x0, x0, #0x20
   3af84:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   3af88:	str	w0, [sp, #204]
   3af8c:	ldr	w0, [sp, #204]
   3af90:	cmp	w0, #0x0
   3af94:	cset	w0, ne  // ne = any
   3af98:	and	w0, w0, #0xff
   3af9c:	and	x0, x0, #0xff
   3afa0:	cmp	x0, #0x0
   3afa4:	b.ne	3b150 <rpl_re_set_registers@@Base+0x4368>  // b.any
   3afa8:	ldr	x0, [sp, #152]
   3afac:	str	x0, [sp, #64]
   3afb0:	ldr	x0, [sp, #24]
   3afb4:	str	x0, [sp, #72]
   3afb8:	add	x0, sp, #0x30
   3afbc:	add	x0, x0, #0x20
   3afc0:	ldr	x1, [sp, #184]
   3afc4:	bl	2c3ec <printf_parse@@Base+0x50f4>
   3afc8:	strb	w0, [sp, #119]
   3afcc:	ldrb	w0, [sp, #119]
   3afd0:	eor	w0, w0, #0x1
   3afd4:	and	w0, w0, #0xff
   3afd8:	and	x0, x0, #0xff
   3afdc:	cmp	x0, #0x0
   3afe0:	b.eq	3aff0 <rpl_re_set_registers@@Base+0x4208>  // b.none
   3afe4:	mov	w0, #0xc                   	// #12
   3afe8:	str	w0, [sp, #204]
   3afec:	b	3b164 <rpl_re_set_registers@@Base+0x437c>
   3aff0:	ldr	x1, [sp, #48]
   3aff4:	ldr	x0, [sp, #24]
   3aff8:	lsl	x0, x0, #3
   3affc:	add	x0, x1, x0
   3b000:	ldr	x0, [x0]
   3b004:	str	x0, [sp, #104]
   3b008:	add	x0, sp, #0x30
   3b00c:	mov	x1, x0
   3b010:	ldr	x0, [sp, #40]
   3b014:	bl	396f0 <rpl_re_set_registers@@Base+0x2908>
   3b018:	str	w0, [sp, #204]
   3b01c:	ldr	w0, [sp, #204]
   3b020:	cmp	w0, #0x0
   3b024:	cset	w0, ne  // ne = any
   3b028:	and	w0, w0, #0xff
   3b02c:	and	x0, x0, #0xff
   3b030:	cmp	x0, #0x0
   3b034:	b.ne	3b158 <rpl_re_set_registers@@Base+0x4370>  // b.any
   3b038:	ldr	x0, [sp, #32]
   3b03c:	ldr	x0, [x0, #8]
   3b040:	cmp	x0, #0x0
   3b044:	b.eq	3b088 <rpl_re_set_registers@@Base+0x42a0>  // b.none
   3b048:	ldr	x0, [sp, #32]
   3b04c:	ldr	x1, [x0, #8]
   3b050:	ldr	x2, [sp, #48]
   3b054:	ldr	x0, [sp, #24]
   3b058:	add	x0, x0, #0x1
   3b05c:	mov	x3, x0
   3b060:	ldr	x0, [sp, #168]
   3b064:	bl	39c30 <rpl_re_set_registers@@Base+0x2e48>
   3b068:	str	w0, [sp, #204]
   3b06c:	ldr	w0, [sp, #204]
   3b070:	cmp	w0, #0x0
   3b074:	cset	w0, ne  // ne = any
   3b078:	and	w0, w0, #0xff
   3b07c:	and	x0, x0, #0xff
   3b080:	cmp	x0, #0x0
   3b084:	b.ne	3b160 <rpl_re_set_registers@@Base+0x4378>  // b.any
   3b088:	ldr	x1, [sp, #48]
   3b08c:	ldr	x0, [sp, #24]
   3b090:	lsl	x0, x0, #3
   3b094:	add	x0, x1, x0
   3b098:	ldr	x1, [sp, #104]
   3b09c:	str	x1, [x0]
   3b0a0:	add	x0, sp, #0x30
   3b0a4:	add	x0, x0, #0x20
   3b0a8:	ldr	x1, [sp, #184]
   3b0ac:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3b0b0:	sub	x1, x0, #0x1
   3b0b4:	add	x0, sp, #0x30
   3b0b8:	add	x0, x0, #0x20
   3b0bc:	bl	2c87c <printf_parse@@Base+0x5584>
   3b0c0:	ldr	x0, [sp, #40]
   3b0c4:	ldr	x2, [x0, #216]
   3b0c8:	ldr	x1, [sp, #184]
   3b0cc:	mov	x0, x1
   3b0d0:	lsl	x0, x0, #2
   3b0d4:	add	x0, x0, x1
   3b0d8:	lsl	x0, x0, #3
   3b0dc:	add	x0, x2, x0
   3b0e0:	str	x0, [sp, #176]
   3b0e4:	b	3b0f4 <rpl_re_set_registers@@Base+0x430c>
   3b0e8:	nop
   3b0ec:	b	3b0f4 <rpl_re_set_registers@@Base+0x430c>
   3b0f0:	nop
   3b0f4:	ldr	x0, [sp, #184]
   3b0f8:	add	x0, x0, #0x1
   3b0fc:	str	x0, [sp, #184]
   3b100:	ldr	x0, [sp, #176]
   3b104:	add	x1, x0, #0x28
   3b108:	str	x1, [sp, #176]
   3b10c:	ldrb	w0, [x0, #32]
   3b110:	cmp	w0, #0x0
   3b114:	b.ne	3ae00 <rpl_re_set_registers@@Base+0x4018>  // b.any
   3b118:	b	3b128 <rpl_re_set_registers@@Base+0x4340>
   3b11c:	nop
   3b120:	b	3b128 <rpl_re_set_registers@@Base+0x4340>
   3b124:	nop
   3b128:	ldr	x0, [sp, #192]
   3b12c:	add	x0, x0, #0x1
   3b130:	str	x0, [sp, #192]
   3b134:	ldr	x0, [sp, #16]
   3b138:	ldr	x0, [x0, #8]
   3b13c:	ldr	x1, [sp, #192]
   3b140:	cmp	x1, x0
   3b144:	b.lt	3ad68 <rpl_re_set_registers@@Base+0x3f80>  // b.tstop
   3b148:	str	wzr, [sp, #204]
   3b14c:	b	3b164 <rpl_re_set_registers@@Base+0x437c>
   3b150:	nop
   3b154:	b	3b164 <rpl_re_set_registers@@Base+0x437c>
   3b158:	nop
   3b15c:	b	3b164 <rpl_re_set_registers@@Base+0x437c>
   3b160:	nop
   3b164:	ldr	x0, [sp, #48]
   3b168:	cmp	x0, #0x0
   3b16c:	b.eq	3b178 <rpl_re_set_registers@@Base+0x4390>  // b.none
   3b170:	ldr	x0, [sp, #96]
   3b174:	bl	b130 <free@plt>
   3b178:	ldr	w0, [sp, #204]
   3b17c:	ldp	x29, x30, [sp], #208
   3b180:	ret
   3b184:	stp	x29, x30, [sp, #-80]!
   3b188:	mov	x29, sp
   3b18c:	str	x0, [sp, #56]
   3b190:	str	x1, [sp, #48]
   3b194:	str	x2, [sp, #40]
   3b198:	str	x3, [sp, #32]
   3b19c:	str	x4, [sp, #24]
   3b1a0:	ldr	x0, [sp, #56]
   3b1a4:	ldr	x0, [x0, #152]
   3b1a8:	str	x0, [sp, #64]
   3b1ac:	ldr	x0, [sp, #56]
   3b1b0:	ldr	x3, [sp, #32]
   3b1b4:	mov	x2, x0
   3b1b8:	ldr	x1, [sp, #40]
   3b1bc:	ldr	x0, [sp, #64]
   3b1c0:	bl	3ef54 <rpl_re_set_registers@@Base+0x816c>
   3b1c4:	str	w0, [sp, #76]
   3b1c8:	ldr	w0, [sp, #76]
   3b1cc:	cmp	w0, #0x0
   3b1d0:	b.le	3b268 <rpl_re_set_registers@@Base+0x4480>
   3b1d4:	ldrsw	x1, [sp, #76]
   3b1d8:	ldr	x0, [sp, #32]
   3b1dc:	add	x0, x1, x0
   3b1e0:	ldr	x1, [sp, #24]
   3b1e4:	cmp	x1, x0
   3b1e8:	b.lt	3b268 <rpl_re_set_registers@@Base+0x4480>  // b.tstop
   3b1ec:	ldr	x0, [sp, #48]
   3b1f0:	ldr	x1, [x0]
   3b1f4:	ldrsw	x2, [sp, #76]
   3b1f8:	ldr	x0, [sp, #32]
   3b1fc:	add	x0, x2, x0
   3b200:	lsl	x0, x0, #3
   3b204:	add	x0, x1, x0
   3b208:	ldr	x0, [x0]
   3b20c:	cmp	x0, #0x0
   3b210:	b.eq	3b264 <rpl_re_set_registers@@Base+0x447c>  // b.none
   3b214:	ldr	x0, [sp, #48]
   3b218:	ldr	x1, [x0]
   3b21c:	ldrsw	x2, [sp, #76]
   3b220:	ldr	x0, [sp, #32]
   3b224:	add	x0, x2, x0
   3b228:	lsl	x0, x0, #3
   3b22c:	add	x0, x1, x0
   3b230:	ldr	x0, [x0]
   3b234:	add	x2, x0, #0x8
   3b238:	ldr	x0, [sp, #64]
   3b23c:	ldr	x1, [x0, #24]
   3b240:	ldr	x0, [sp, #40]
   3b244:	lsl	x0, x0, #3
   3b248:	add	x0, x1, x0
   3b24c:	ldr	x0, [x0]
   3b250:	mov	x1, x0
   3b254:	mov	x0, x2
   3b258:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3b25c:	cmp	x0, #0x0
   3b260:	b.ne	3b268 <rpl_re_set_registers@@Base+0x4480>  // b.any
   3b264:	str	wzr, [sp, #76]
   3b268:	ldr	w0, [sp, #76]
   3b26c:	ldp	x29, x30, [sp], #80
   3b270:	ret
   3b274:	stp	x29, x30, [sp, #-80]!
   3b278:	mov	x29, sp
   3b27c:	str	x0, [sp, #40]
   3b280:	str	x1, [sp, #32]
   3b284:	str	x2, [sp, #24]
   3b288:	ldr	x0, [sp, #24]
   3b28c:	ldrb	w0, [x0, #104]
   3b290:	ubfx	x0, x0, #5, #1
   3b294:	and	w0, w0, #0xff
   3b298:	and	x0, x0, #0xff
   3b29c:	cmp	x0, #0x0
   3b2a0:	b.eq	3b2e4 <rpl_re_set_registers@@Base+0x44fc>  // b.none
   3b2a4:	ldr	x1, [sp, #24]
   3b2a8:	ldr	x0, [sp, #32]
   3b2ac:	bl	3b8ac <rpl_re_set_registers@@Base+0x4ac4>
   3b2b0:	mov	w1, w0
   3b2b4:	ldr	x0, [sp, #40]
   3b2b8:	str	w1, [x0]
   3b2bc:	ldr	x0, [sp, #40]
   3b2c0:	ldr	w0, [x0]
   3b2c4:	cmp	w0, #0x0
   3b2c8:	cset	w0, ne  // ne = any
   3b2cc:	and	w0, w0, #0xff
   3b2d0:	and	x0, x0, #0xff
   3b2d4:	cmp	x0, #0x0
   3b2d8:	b.eq	3b2e4 <rpl_re_set_registers@@Base+0x44fc>  // b.none
   3b2dc:	mov	x0, #0x0                   	// #0
   3b2e0:	b	3b414 <rpl_re_set_registers@@Base+0x462c>
   3b2e4:	ldr	x0, [sp, #32]
   3b2e8:	ldr	x1, [x0, #8]
   3b2ec:	ldr	x0, [sp, #32]
   3b2f0:	ldr	x0, [x0, #72]
   3b2f4:	add	x3, x0, #0x1
   3b2f8:	ldr	x2, [sp, #32]
   3b2fc:	str	x3, [x2, #72]
   3b300:	add	x0, x1, x0
   3b304:	ldrb	w0, [x0]
   3b308:	strb	w0, [sp, #79]
   3b30c:	ldr	x0, [sp, #24]
   3b310:	ldr	x0, [x0, #88]
   3b314:	str	x0, [sp, #64]
   3b318:	ldr	x0, [sp, #64]
   3b31c:	cmp	x0, #0x0
   3b320:	cset	w0, ne  // ne = any
   3b324:	and	w0, w0, #0xff
   3b328:	and	x0, x0, #0xff
   3b32c:	cmp	x0, #0x0
   3b330:	b.eq	3b34c <rpl_re_set_registers@@Base+0x4564>  // b.none
   3b334:	ldrb	w0, [sp, #79]
   3b338:	lsl	x0, x0, #3
   3b33c:	ldr	x1, [sp, #64]
   3b340:	add	x0, x1, x0
   3b344:	ldr	x0, [x0]
   3b348:	b	3b414 <rpl_re_set_registers@@Base+0x462c>
   3b34c:	ldr	x0, [sp, #24]
   3b350:	ldr	x0, [x0, #96]
   3b354:	str	x0, [sp, #64]
   3b358:	ldr	x0, [sp, #64]
   3b35c:	cmp	x0, #0x0
   3b360:	cset	w0, ne  // ne = any
   3b364:	and	w0, w0, #0xff
   3b368:	and	x0, x0, #0xff
   3b36c:	cmp	x0, #0x0
   3b370:	b.eq	3b3e0 <rpl_re_set_registers@@Base+0x45f8>  // b.none
   3b374:	ldr	x3, [sp, #32]
   3b378:	ldr	x0, [sp, #32]
   3b37c:	ldr	x0, [x0, #72]
   3b380:	sub	x1, x0, #0x1
   3b384:	ldr	x0, [sp, #32]
   3b388:	ldr	w0, [x0, #160]
   3b38c:	mov	w2, w0
   3b390:	mov	x0, x3
   3b394:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   3b398:	str	w0, [sp, #60]
   3b39c:	ldr	w0, [sp, #60]
   3b3a0:	and	w0, w0, #0x1
   3b3a4:	cmp	w0, #0x0
   3b3a8:	b.eq	3b3c8 <rpl_re_set_registers@@Base+0x45e0>  // b.none
   3b3ac:	ldrb	w0, [sp, #79]
   3b3b0:	add	x0, x0, #0x100
   3b3b4:	lsl	x0, x0, #3
   3b3b8:	ldr	x1, [sp, #64]
   3b3bc:	add	x0, x1, x0
   3b3c0:	ldr	x0, [x0]
   3b3c4:	b	3b414 <rpl_re_set_registers@@Base+0x462c>
   3b3c8:	ldrb	w0, [sp, #79]
   3b3cc:	lsl	x0, x0, #3
   3b3d0:	ldr	x1, [sp, #64]
   3b3d4:	add	x0, x1, x0
   3b3d8:	ldr	x0, [x0]
   3b3dc:	b	3b414 <rpl_re_set_registers@@Base+0x462c>
   3b3e0:	ldr	x0, [sp, #32]
   3b3e4:	ldr	x0, [x0, #152]
   3b3e8:	ldr	x1, [sp, #24]
   3b3ec:	bl	3dbb0 <rpl_re_set_registers@@Base+0x6dc8>
   3b3f0:	and	w0, w0, #0xff
   3b3f4:	eor	w0, w0, #0x1
   3b3f8:	and	w0, w0, #0xff
   3b3fc:	cmp	w0, #0x0
   3b400:	b.eq	3b30c <rpl_re_set_registers@@Base+0x4524>  // b.none
   3b404:	ldr	x0, [sp, #40]
   3b408:	mov	w1, #0xc                   	// #12
   3b40c:	str	w1, [x0]
   3b410:	mov	x0, #0x0                   	// #0
   3b414:	ldp	x29, x30, [sp], #80
   3b418:	ret
   3b41c:	stp	x29, x30, [sp, #-144]!
   3b420:	mov	x29, sp
   3b424:	str	x19, [sp, #16]
   3b428:	str	x0, [sp, #56]
   3b42c:	str	x1, [sp, #48]
   3b430:	str	x2, [sp, #40]
   3b434:	ldr	x0, [sp, #48]
   3b438:	ldr	x0, [x0, #152]
   3b43c:	str	x0, [sp, #128]
   3b440:	ldr	x0, [sp, #48]
   3b444:	ldr	x0, [x0, #72]
   3b448:	str	x0, [sp, #120]
   3b44c:	ldr	x0, [sp, #48]
   3b450:	ldr	x0, [x0, #192]
   3b454:	ldr	x1, [sp, #120]
   3b458:	cmp	x1, x0
   3b45c:	b.le	3b48c <rpl_re_set_registers@@Base+0x46a4>
   3b460:	ldr	x0, [sp, #48]
   3b464:	ldr	x1, [x0, #184]
   3b468:	ldr	x0, [sp, #120]
   3b46c:	lsl	x0, x0, #3
   3b470:	add	x0, x1, x0
   3b474:	ldr	x1, [sp, #40]
   3b478:	str	x1, [x0]
   3b47c:	ldr	x0, [sp, #48]
   3b480:	ldr	x1, [sp, #120]
   3b484:	str	x1, [x0, #192]
   3b488:	b	3b5e4 <rpl_re_set_registers@@Base+0x47fc>
   3b48c:	ldr	x0, [sp, #48]
   3b490:	ldr	x1, [x0, #184]
   3b494:	ldr	x0, [sp, #120]
   3b498:	lsl	x0, x0, #3
   3b49c:	add	x0, x1, x0
   3b4a0:	ldr	x0, [x0]
   3b4a4:	cmp	x0, #0x0
   3b4a8:	b.ne	3b4cc <rpl_re_set_registers@@Base+0x46e4>  // b.any
   3b4ac:	ldr	x0, [sp, #48]
   3b4b0:	ldr	x1, [x0, #184]
   3b4b4:	ldr	x0, [sp, #120]
   3b4b8:	lsl	x0, x0, #3
   3b4bc:	add	x0, x1, x0
   3b4c0:	ldr	x1, [sp, #40]
   3b4c4:	str	x1, [x0]
   3b4c8:	b	3b5e4 <rpl_re_set_registers@@Base+0x47fc>
   3b4cc:	str	xzr, [sp, #136]
   3b4d0:	ldr	x0, [sp, #48]
   3b4d4:	ldr	x1, [x0, #184]
   3b4d8:	ldr	x0, [sp, #120]
   3b4dc:	lsl	x0, x0, #3
   3b4e0:	add	x0, x1, x0
   3b4e4:	ldr	x0, [x0]
   3b4e8:	str	x0, [sp, #112]
   3b4ec:	ldr	x0, [sp, #112]
   3b4f0:	ldr	x0, [x0, #80]
   3b4f4:	str	x0, [sp, #104]
   3b4f8:	ldr	x0, [sp, #40]
   3b4fc:	cmp	x0, #0x0
   3b500:	b.eq	3b554 <rpl_re_set_registers@@Base+0x476c>  // b.none
   3b504:	ldr	x0, [sp, #40]
   3b508:	ldr	x0, [x0, #80]
   3b50c:	str	x0, [sp, #136]
   3b510:	add	x0, sp, #0x48
   3b514:	ldr	x2, [sp, #104]
   3b518:	ldr	x1, [sp, #136]
   3b51c:	bl	2bc30 <printf_parse@@Base+0x4938>
   3b520:	mov	w1, w0
   3b524:	ldr	x0, [sp, #56]
   3b528:	str	w1, [x0]
   3b52c:	ldr	x0, [sp, #56]
   3b530:	ldr	w0, [x0]
   3b534:	cmp	w0, #0x0
   3b538:	cset	w0, ne  // ne = any
   3b53c:	and	w0, w0, #0xff
   3b540:	and	x0, x0, #0xff
   3b544:	cmp	x0, #0x0
   3b548:	b.eq	3b570 <rpl_re_set_registers@@Base+0x4788>  // b.none
   3b54c:	mov	x0, #0x0                   	// #0
   3b550:	b	3b6cc <rpl_re_set_registers@@Base+0x48e4>
   3b554:	ldr	x0, [sp, #104]
   3b558:	add	x2, sp, #0x48
   3b55c:	mov	x3, x0
   3b560:	ldp	x0, x1, [x3]
   3b564:	stp	x0, x1, [x2]
   3b568:	ldr	x0, [x3, #16]
   3b56c:	str	x0, [x2, #16]
   3b570:	ldr	x3, [sp, #48]
   3b574:	ldr	x0, [sp, #48]
   3b578:	ldr	x0, [x0, #72]
   3b57c:	sub	x1, x0, #0x1
   3b580:	ldr	x0, [sp, #48]
   3b584:	ldr	w0, [x0, #160]
   3b588:	mov	w2, w0
   3b58c:	mov	x0, x3
   3b590:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   3b594:	str	w0, [sp, #100]
   3b598:	ldr	x0, [sp, #48]
   3b59c:	ldr	x1, [x0, #184]
   3b5a0:	ldr	x0, [sp, #120]
   3b5a4:	lsl	x0, x0, #3
   3b5a8:	add	x19, x1, x0
   3b5ac:	add	x0, sp, #0x48
   3b5b0:	ldr	w3, [sp, #100]
   3b5b4:	mov	x2, x0
   3b5b8:	ldr	x1, [sp, #128]
   3b5bc:	ldr	x0, [sp, #56]
   3b5c0:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   3b5c4:	str	x0, [x19]
   3b5c8:	ldr	x0, [x19]
   3b5cc:	str	x0, [sp, #40]
   3b5d0:	ldr	x0, [sp, #136]
   3b5d4:	cmp	x0, #0x0
   3b5d8:	b.eq	3b5e4 <rpl_re_set_registers@@Base+0x47fc>  // b.none
   3b5dc:	ldr	x0, [sp, #88]
   3b5e0:	bl	b130 <free@plt>
   3b5e4:	ldr	x0, [sp, #128]
   3b5e8:	ldr	x0, [x0, #152]
   3b5ec:	cmp	x0, #0x0
   3b5f0:	b.eq	3b6c8 <rpl_re_set_registers@@Base+0x48e0>  // b.none
   3b5f4:	ldr	x0, [sp, #40]
   3b5f8:	cmp	x0, #0x0
   3b5fc:	b.eq	3b6c8 <rpl_re_set_registers@@Base+0x48e0>  // b.none
   3b600:	ldr	x0, [sp, #40]
   3b604:	add	x0, x0, #0x8
   3b608:	ldr	x2, [sp, #120]
   3b60c:	mov	x1, x0
   3b610:	ldr	x0, [sp, #48]
   3b614:	bl	3b794 <rpl_re_set_registers@@Base+0x49ac>
   3b618:	mov	w1, w0
   3b61c:	ldr	x0, [sp, #56]
   3b620:	str	w1, [x0]
   3b624:	ldr	x0, [sp, #56]
   3b628:	ldr	w0, [x0]
   3b62c:	cmp	w0, #0x0
   3b630:	cset	w0, ne  // ne = any
   3b634:	and	w0, w0, #0xff
   3b638:	and	x0, x0, #0xff
   3b63c:	cmp	x0, #0x0
   3b640:	b.eq	3b64c <rpl_re_set_registers@@Base+0x4864>  // b.none
   3b644:	mov	x0, #0x0                   	// #0
   3b648:	b	3b6cc <rpl_re_set_registers@@Base+0x48e4>
   3b64c:	ldr	x0, [sp, #40]
   3b650:	ldrb	w0, [x0, #104]
   3b654:	and	w0, w0, #0x40
   3b658:	and	w0, w0, #0xff
   3b65c:	cmp	w0, #0x0
   3b660:	b.eq	3b6c8 <rpl_re_set_registers@@Base+0x48e0>  // b.none
   3b664:	ldr	x0, [sp, #40]
   3b668:	add	x0, x0, #0x8
   3b66c:	mov	x1, x0
   3b670:	ldr	x0, [sp, #48]
   3b674:	bl	3bca8 <rpl_re_set_registers@@Base+0x4ec0>
   3b678:	mov	w1, w0
   3b67c:	ldr	x0, [sp, #56]
   3b680:	str	w1, [x0]
   3b684:	ldr	x0, [sp, #56]
   3b688:	ldr	w0, [x0]
   3b68c:	cmp	w0, #0x0
   3b690:	cset	w0, ne  // ne = any
   3b694:	and	w0, w0, #0xff
   3b698:	and	x0, x0, #0xff
   3b69c:	cmp	x0, #0x0
   3b6a0:	b.eq	3b6ac <rpl_re_set_registers@@Base+0x48c4>  // b.none
   3b6a4:	mov	x0, #0x0                   	// #0
   3b6a8:	b	3b6cc <rpl_re_set_registers@@Base+0x48e4>
   3b6ac:	ldr	x0, [sp, #48]
   3b6b0:	ldr	x1, [x0, #184]
   3b6b4:	ldr	x0, [sp, #120]
   3b6b8:	lsl	x0, x0, #3
   3b6bc:	add	x0, x1, x0
   3b6c0:	ldr	x0, [x0]
   3b6c4:	str	x0, [sp, #40]
   3b6c8:	ldr	x0, [sp, #40]
   3b6cc:	ldr	x19, [sp, #16]
   3b6d0:	ldp	x29, x30, [sp], #144
   3b6d4:	ret
   3b6d8:	stp	x29, x30, [sp, #-64]!
   3b6dc:	mov	x29, sp
   3b6e0:	str	x0, [sp, #24]
   3b6e4:	str	x1, [sp, #16]
   3b6e8:	ldr	x0, [sp, #16]
   3b6ec:	ldr	x0, [x0, #192]
   3b6f0:	str	x0, [sp, #48]
   3b6f4:	ldr	x0, [sp, #16]
   3b6f8:	ldr	x0, [x0, #72]
   3b6fc:	str	x0, [sp, #56]
   3b700:	ldr	x0, [sp, #56]
   3b704:	add	x0, x0, #0x1
   3b708:	str	x0, [sp, #56]
   3b70c:	ldr	x1, [sp, #56]
   3b710:	ldr	x0, [sp, #48]
   3b714:	cmp	x1, x0
   3b718:	b.le	3b724 <rpl_re_set_registers@@Base+0x493c>
   3b71c:	mov	x0, #0x0                   	// #0
   3b720:	b	3b78c <rpl_re_set_registers@@Base+0x49a4>
   3b724:	ldr	x0, [sp, #16]
   3b728:	ldr	x0, [x0, #72]
   3b72c:	add	x1, x0, #0x1
   3b730:	ldr	x0, [sp, #16]
   3b734:	str	x1, [x0, #72]
   3b738:	ldr	x0, [sp, #16]
   3b73c:	ldr	x1, [x0, #184]
   3b740:	ldr	x0, [sp, #56]
   3b744:	lsl	x0, x0, #3
   3b748:	add	x0, x1, x0
   3b74c:	ldr	x0, [x0]
   3b750:	cmp	x0, #0x0
   3b754:	b.eq	3b700 <rpl_re_set_registers@@Base+0x4918>  // b.none
   3b758:	mov	x2, #0x0                   	// #0
   3b75c:	ldr	x1, [sp, #16]
   3b760:	ldr	x0, [sp, #24]
   3b764:	bl	3b41c <rpl_re_set_registers@@Base+0x4634>
   3b768:	str	x0, [sp, #40]
   3b76c:	ldr	x0, [sp, #24]
   3b770:	ldr	w0, [x0]
   3b774:	cmp	w0, #0x0
   3b778:	b.ne	3b788 <rpl_re_set_registers@@Base+0x49a0>  // b.any
   3b77c:	ldr	x0, [sp, #40]
   3b780:	cmp	x0, #0x0
   3b784:	b.eq	3b6e8 <rpl_re_set_registers@@Base+0x4900>  // b.none
   3b788:	ldr	x0, [sp, #40]
   3b78c:	ldp	x29, x30, [sp], #64
   3b790:	ret
   3b794:	stp	x29, x30, [sp, #-80]!
   3b798:	mov	x29, sp
   3b79c:	str	x0, [sp, #40]
   3b7a0:	str	x1, [sp, #32]
   3b7a4:	str	x2, [sp, #24]
   3b7a8:	ldr	x0, [sp, #40]
   3b7ac:	ldr	x0, [x0, #152]
   3b7b0:	str	x0, [sp, #64]
   3b7b4:	str	xzr, [sp, #72]
   3b7b8:	b	3b88c <rpl_re_set_registers@@Base+0x4aa4>
   3b7bc:	ldr	x0, [sp, #32]
   3b7c0:	ldr	x1, [x0, #16]
   3b7c4:	ldr	x0, [sp, #72]
   3b7c8:	lsl	x0, x0, #3
   3b7cc:	add	x0, x1, x0
   3b7d0:	ldr	x0, [x0]
   3b7d4:	str	x0, [sp, #56]
   3b7d8:	ldr	x0, [sp, #64]
   3b7dc:	ldr	x1, [x0]
   3b7e0:	ldr	x0, [sp, #56]
   3b7e4:	lsl	x0, x0, #4
   3b7e8:	add	x0, x1, x0
   3b7ec:	ldrb	w0, [x0, #8]
   3b7f0:	cmp	w0, #0x8
   3b7f4:	b.ne	3b880 <rpl_re_set_registers@@Base+0x4a98>  // b.any
   3b7f8:	ldr	x0, [sp, #64]
   3b7fc:	ldr	x1, [x0]
   3b800:	ldr	x0, [sp, #56]
   3b804:	lsl	x0, x0, #4
   3b808:	add	x0, x1, x0
   3b80c:	ldr	x0, [x0]
   3b810:	cmp	x0, #0x3f
   3b814:	b.gt	3b880 <rpl_re_set_registers@@Base+0x4a98>
   3b818:	ldr	x0, [sp, #64]
   3b81c:	ldr	x0, [x0, #160]
   3b820:	ldr	x1, [sp, #64]
   3b824:	ldr	x2, [x1]
   3b828:	ldr	x1, [sp, #56]
   3b82c:	lsl	x1, x1, #4
   3b830:	add	x1, x2, x1
   3b834:	ldr	x1, [x1]
   3b838:	lsr	x0, x0, x1
   3b83c:	and	x0, x0, #0x1
   3b840:	cmp	x0, #0x0
   3b844:	b.eq	3b880 <rpl_re_set_registers@@Base+0x4a98>  // b.none
   3b848:	ldr	x2, [sp, #24]
   3b84c:	ldr	x1, [sp, #56]
   3b850:	ldr	x0, [sp, #40]
   3b854:	bl	3feec <rpl_re_set_registers@@Base+0x9104>
   3b858:	str	w0, [sp, #52]
   3b85c:	ldr	w0, [sp, #52]
   3b860:	cmp	w0, #0x0
   3b864:	cset	w0, ne  // ne = any
   3b868:	and	w0, w0, #0xff
   3b86c:	and	x0, x0, #0xff
   3b870:	cmp	x0, #0x0
   3b874:	b.eq	3b880 <rpl_re_set_registers@@Base+0x4a98>  // b.none
   3b878:	ldr	w0, [sp, #52]
   3b87c:	b	3b8a4 <rpl_re_set_registers@@Base+0x4abc>
   3b880:	ldr	x0, [sp, #72]
   3b884:	add	x0, x0, #0x1
   3b888:	str	x0, [sp, #72]
   3b88c:	ldr	x0, [sp, #32]
   3b890:	ldr	x0, [x0, #8]
   3b894:	ldr	x1, [sp, #72]
   3b898:	cmp	x1, x0
   3b89c:	b.lt	3b7bc <rpl_re_set_registers@@Base+0x49d4>  // b.tstop
   3b8a0:	mov	w0, #0x0                   	// #0
   3b8a4:	ldp	x29, x30, [sp], #80
   3b8a8:	ret
   3b8ac:	stp	x29, x30, [sp, #-144]!
   3b8b0:	mov	x29, sp
   3b8b4:	str	x19, [sp, #16]
   3b8b8:	str	x0, [sp, #40]
   3b8bc:	str	x1, [sp, #32]
   3b8c0:	ldr	x0, [sp, #40]
   3b8c4:	ldr	x0, [x0, #152]
   3b8c8:	str	x0, [sp, #128]
   3b8cc:	str	xzr, [sp, #136]
   3b8d0:	b	3bc84 <rpl_re_set_registers@@Base+0x4e9c>
   3b8d4:	ldr	x0, [sp, #32]
   3b8d8:	ldr	x1, [x0, #24]
   3b8dc:	ldr	x0, [sp, #136]
   3b8e0:	lsl	x0, x0, #3
   3b8e4:	add	x0, x1, x0
   3b8e8:	ldr	x0, [x0]
   3b8ec:	str	x0, [sp, #120]
   3b8f0:	ldr	x0, [sp, #128]
   3b8f4:	ldr	x1, [x0]
   3b8f8:	ldr	x0, [sp, #120]
   3b8fc:	lsl	x0, x0, #4
   3b900:	add	x0, x1, x0
   3b904:	ldrb	w0, [x0, #10]
   3b908:	and	w0, w0, #0x10
   3b90c:	and	w0, w0, #0xff
   3b910:	cmp	w0, #0x0
   3b914:	b.eq	3bc64 <rpl_re_set_registers@@Base+0x4e7c>  // b.none
   3b918:	ldr	x0, [sp, #128]
   3b91c:	ldr	x1, [x0]
   3b920:	ldr	x0, [sp, #120]
   3b924:	lsl	x0, x0, #4
   3b928:	add	x0, x1, x0
   3b92c:	ldr	w0, [x0, #8]
   3b930:	and	w0, w0, #0x3ff00
   3b934:	cmp	w0, #0x0
   3b938:	b.eq	3ba50 <rpl_re_set_registers@@Base+0x4c68>  // b.none
   3b93c:	ldr	x3, [sp, #40]
   3b940:	ldr	x0, [sp, #40]
   3b944:	ldr	x1, [x0, #72]
   3b948:	ldr	x0, [sp, #40]
   3b94c:	ldr	w0, [x0, #160]
   3b950:	mov	w2, w0
   3b954:	mov	x0, x3
   3b958:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   3b95c:	str	w0, [sp, #116]
   3b960:	ldr	x0, [sp, #128]
   3b964:	ldr	x1, [x0]
   3b968:	ldr	x0, [sp, #120]
   3b96c:	lsl	x0, x0, #4
   3b970:	add	x0, x1, x0
   3b974:	ldr	w0, [x0, #8]
   3b978:	ubfx	x0, x0, #8, #10
   3b97c:	and	w0, w0, #0xffff
   3b980:	and	w0, w0, #0x4
   3b984:	cmp	w0, #0x0
   3b988:	b.eq	3b99c <rpl_re_set_registers@@Base+0x4bb4>  // b.none
   3b98c:	ldr	w0, [sp, #116]
   3b990:	and	w0, w0, #0x1
   3b994:	cmp	w0, #0x0
   3b998:	b.eq	3bc6c <rpl_re_set_registers@@Base+0x4e84>  // b.none
   3b99c:	ldr	x0, [sp, #128]
   3b9a0:	ldr	x1, [x0]
   3b9a4:	ldr	x0, [sp, #120]
   3b9a8:	lsl	x0, x0, #4
   3b9ac:	add	x0, x1, x0
   3b9b0:	ldr	w0, [x0, #8]
   3b9b4:	ubfx	x0, x0, #8, #10
   3b9b8:	and	w0, w0, #0xffff
   3b9bc:	and	w0, w0, #0x8
   3b9c0:	cmp	w0, #0x0
   3b9c4:	b.eq	3b9d8 <rpl_re_set_registers@@Base+0x4bf0>  // b.none
   3b9c8:	ldr	w0, [sp, #116]
   3b9cc:	and	w0, w0, #0x1
   3b9d0:	cmp	w0, #0x0
   3b9d4:	b.ne	3bc6c <rpl_re_set_registers@@Base+0x4e84>  // b.any
   3b9d8:	ldr	x0, [sp, #128]
   3b9dc:	ldr	x1, [x0]
   3b9e0:	ldr	x0, [sp, #120]
   3b9e4:	lsl	x0, x0, #4
   3b9e8:	add	x0, x1, x0
   3b9ec:	ldr	w0, [x0, #8]
   3b9f0:	ubfx	x0, x0, #8, #10
   3b9f4:	and	w0, w0, #0xffff
   3b9f8:	and	w0, w0, #0x20
   3b9fc:	cmp	w0, #0x0
   3ba00:	b.eq	3ba14 <rpl_re_set_registers@@Base+0x4c2c>  // b.none
   3ba04:	ldr	w0, [sp, #116]
   3ba08:	and	w0, w0, #0x2
   3ba0c:	cmp	w0, #0x0
   3ba10:	b.eq	3bc6c <rpl_re_set_registers@@Base+0x4e84>  // b.none
   3ba14:	ldr	x0, [sp, #128]
   3ba18:	ldr	x1, [x0]
   3ba1c:	ldr	x0, [sp, #120]
   3ba20:	lsl	x0, x0, #4
   3ba24:	add	x0, x1, x0
   3ba28:	ldr	w0, [x0, #8]
   3ba2c:	ubfx	x0, x0, #8, #10
   3ba30:	and	w0, w0, #0xffff
   3ba34:	and	w0, w0, #0x80
   3ba38:	cmp	w0, #0x0
   3ba3c:	b.eq	3ba50 <rpl_re_set_registers@@Base+0x4c68>  // b.none
   3ba40:	ldr	w0, [sp, #116]
   3ba44:	and	w0, w0, #0x8
   3ba48:	cmp	w0, #0x0
   3ba4c:	b.eq	3bc6c <rpl_re_set_registers@@Base+0x4e84>  // b.none
   3ba50:	ldr	x1, [sp, #40]
   3ba54:	ldr	x0, [sp, #40]
   3ba58:	ldr	x0, [x0, #72]
   3ba5c:	mov	x3, x0
   3ba60:	mov	x2, x1
   3ba64:	ldr	x1, [sp, #120]
   3ba68:	ldr	x0, [sp, #128]
   3ba6c:	bl	3ef54 <rpl_re_set_registers@@Base+0x816c>
   3ba70:	str	w0, [sp, #112]
   3ba74:	ldr	w0, [sp, #112]
   3ba78:	cmp	w0, #0x0
   3ba7c:	b.eq	3bc74 <rpl_re_set_registers@@Base+0x4e8c>  // b.none
   3ba80:	ldr	x0, [sp, #40]
   3ba84:	ldr	x1, [x0, #72]
   3ba88:	ldrsw	x0, [sp, #112]
   3ba8c:	add	x0, x1, x0
   3ba90:	str	x0, [sp, #104]
   3ba94:	ldr	x0, [sp, #40]
   3ba98:	ldr	w0, [x0, #224]
   3ba9c:	ldr	w2, [sp, #112]
   3baa0:	ldr	w1, [sp, #112]
   3baa4:	cmp	w2, w0
   3baa8:	csel	w1, w1, w0, ge  // ge = tcont
   3baac:	ldr	x0, [sp, #40]
   3bab0:	str	w1, [x0, #224]
   3bab4:	ldr	x1, [sp, #104]
   3bab8:	ldr	x0, [sp, #40]
   3babc:	bl	39b20 <rpl_re_set_registers@@Base+0x2d38>
   3bac0:	str	w0, [sp, #84]
   3bac4:	ldr	w0, [sp, #84]
   3bac8:	cmp	w0, #0x0
   3bacc:	cset	w0, ne  // ne = any
   3bad0:	and	w0, w0, #0xff
   3bad4:	and	x0, x0, #0xff
   3bad8:	cmp	x0, #0x0
   3badc:	b.eq	3bae8 <rpl_re_set_registers@@Base+0x4d00>  // b.none
   3bae0:	ldr	w0, [sp, #84]
   3bae4:	b	3bc9c <rpl_re_set_registers@@Base+0x4eb4>
   3bae8:	ldr	x0, [sp, #128]
   3baec:	ldr	x1, [x0, #48]
   3baf0:	ldr	x0, [sp, #128]
   3baf4:	ldr	x2, [x0, #24]
   3baf8:	ldr	x0, [sp, #120]
   3bafc:	lsl	x0, x0, #3
   3bb00:	add	x0, x2, x0
   3bb04:	ldr	x0, [x0]
   3bb08:	mov	x2, x0
   3bb0c:	mov	x0, x2
   3bb10:	lsl	x0, x0, #1
   3bb14:	add	x0, x0, x2
   3bb18:	lsl	x0, x0, #3
   3bb1c:	add	x0, x1, x0
   3bb20:	str	x0, [sp, #96]
   3bb24:	ldr	x0, [sp, #40]
   3bb28:	ldr	x1, [x0, #184]
   3bb2c:	ldr	x0, [sp, #104]
   3bb30:	lsl	x0, x0, #3
   3bb34:	add	x0, x1, x0
   3bb38:	ldr	x0, [x0]
   3bb3c:	str	x0, [sp, #88]
   3bb40:	ldr	x0, [sp, #88]
   3bb44:	cmp	x0, #0x0
   3bb48:	b.ne	3bb6c <rpl_re_set_registers@@Base+0x4d84>  // b.any
   3bb4c:	ldr	x0, [sp, #96]
   3bb50:	add	x2, sp, #0x38
   3bb54:	mov	x3, x0
   3bb58:	ldp	x0, x1, [x3]
   3bb5c:	stp	x0, x1, [x2]
   3bb60:	ldr	x0, [x3, #16]
   3bb64:	str	x0, [x2, #16]
   3bb68:	b	3bba8 <rpl_re_set_registers@@Base+0x4dc0>
   3bb6c:	ldr	x0, [sp, #88]
   3bb70:	ldr	x1, [x0, #80]
   3bb74:	add	x0, sp, #0x38
   3bb78:	ldr	x2, [sp, #96]
   3bb7c:	bl	2bc30 <printf_parse@@Base+0x4938>
   3bb80:	str	w0, [sp, #84]
   3bb84:	ldr	w0, [sp, #84]
   3bb88:	cmp	w0, #0x0
   3bb8c:	cset	w0, ne  // ne = any
   3bb90:	and	w0, w0, #0xff
   3bb94:	and	x0, x0, #0xff
   3bb98:	cmp	x0, #0x0
   3bb9c:	b.eq	3bba8 <rpl_re_set_registers@@Base+0x4dc0>  // b.none
   3bba0:	ldr	w0, [sp, #84]
   3bba4:	b	3bc9c <rpl_re_set_registers@@Base+0x4eb4>
   3bba8:	ldr	x3, [sp, #40]
   3bbac:	ldr	x0, [sp, #104]
   3bbb0:	sub	x1, x0, #0x1
   3bbb4:	ldr	x0, [sp, #40]
   3bbb8:	ldr	w0, [x0, #160]
   3bbbc:	mov	w2, w0
   3bbc0:	mov	x0, x3
   3bbc4:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   3bbc8:	str	w0, [sp, #116]
   3bbcc:	ldr	x0, [sp, #40]
   3bbd0:	ldr	x1, [x0, #184]
   3bbd4:	ldr	x0, [sp, #104]
   3bbd8:	lsl	x0, x0, #3
   3bbdc:	add	x19, x1, x0
   3bbe0:	add	x1, sp, #0x38
   3bbe4:	add	x0, sp, #0x54
   3bbe8:	ldr	w3, [sp, #116]
   3bbec:	mov	x2, x1
   3bbf0:	ldr	x1, [sp, #128]
   3bbf4:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   3bbf8:	str	x0, [x19]
   3bbfc:	ldr	x0, [sp, #88]
   3bc00:	cmp	x0, #0x0
   3bc04:	b.eq	3bc10 <rpl_re_set_registers@@Base+0x4e28>  // b.none
   3bc08:	ldr	x0, [sp, #72]
   3bc0c:	bl	b130 <free@plt>
   3bc10:	ldr	x0, [sp, #40]
   3bc14:	ldr	x1, [x0, #184]
   3bc18:	ldr	x0, [sp, #104]
   3bc1c:	lsl	x0, x0, #3
   3bc20:	add	x0, x1, x0
   3bc24:	ldr	x0, [x0]
   3bc28:	cmp	x0, #0x0
   3bc2c:	cset	w0, eq  // eq = none
   3bc30:	and	w0, w0, #0xff
   3bc34:	and	x0, x0, #0xff
   3bc38:	cmp	x0, #0x0
   3bc3c:	b.eq	3bc78 <rpl_re_set_registers@@Base+0x4e90>  // b.none
   3bc40:	ldr	w0, [sp, #84]
   3bc44:	cmp	w0, #0x0
   3bc48:	cset	w0, ne  // ne = any
   3bc4c:	and	w0, w0, #0xff
   3bc50:	and	x0, x0, #0xff
   3bc54:	cmp	x0, #0x0
   3bc58:	b.eq	3bc78 <rpl_re_set_registers@@Base+0x4e90>  // b.none
   3bc5c:	ldr	w0, [sp, #84]
   3bc60:	b	3bc9c <rpl_re_set_registers@@Base+0x4eb4>
   3bc64:	nop
   3bc68:	b	3bc78 <rpl_re_set_registers@@Base+0x4e90>
   3bc6c:	nop
   3bc70:	b	3bc78 <rpl_re_set_registers@@Base+0x4e90>
   3bc74:	nop
   3bc78:	ldr	x0, [sp, #136]
   3bc7c:	add	x0, x0, #0x1
   3bc80:	str	x0, [sp, #136]
   3bc84:	ldr	x0, [sp, #32]
   3bc88:	ldr	x0, [x0, #16]
   3bc8c:	ldr	x1, [sp, #136]
   3bc90:	cmp	x1, x0
   3bc94:	b.lt	3b8d4 <rpl_re_set_registers@@Base+0x4aec>  // b.tstop
   3bc98:	mov	w0, #0x0                   	// #0
   3bc9c:	ldr	x19, [sp, #16]
   3bca0:	ldp	x29, x30, [sp], #144
   3bca4:	ret
   3bca8:	stp	x29, x30, [sp, #-192]!
   3bcac:	mov	x29, sp
   3bcb0:	str	x19, [sp, #16]
   3bcb4:	str	x0, [sp, #40]
   3bcb8:	str	x1, [sp, #32]
   3bcbc:	ldr	x0, [sp, #40]
   3bcc0:	ldr	x0, [x0, #152]
   3bcc4:	str	x0, [sp, #168]
   3bcc8:	ldr	x0, [sp, #40]
   3bccc:	ldr	x0, [x0, #72]
   3bcd0:	str	x0, [sp, #160]
   3bcd4:	str	xzr, [sp, #184]
   3bcd8:	b	3c204 <rpl_re_set_registers@@Base+0x541c>
   3bcdc:	ldr	x0, [sp, #32]
   3bce0:	ldr	x1, [x0, #16]
   3bce4:	ldr	x0, [sp, #184]
   3bce8:	lsl	x0, x0, #3
   3bcec:	add	x0, x1, x0
   3bcf0:	ldr	x0, [x0]
   3bcf4:	str	x0, [sp, #152]
   3bcf8:	ldr	x0, [sp, #168]
   3bcfc:	ldr	x1, [x0]
   3bd00:	ldr	x0, [sp, #152]
   3bd04:	lsl	x0, x0, #4
   3bd08:	add	x0, x1, x0
   3bd0c:	str	x0, [sp, #144]
   3bd10:	ldr	x0, [sp, #144]
   3bd14:	ldrb	w0, [x0, #8]
   3bd18:	cmp	w0, #0x4
   3bd1c:	b.ne	3c1ec <rpl_re_set_registers@@Base+0x5404>  // b.any
   3bd20:	ldr	x0, [sp, #144]
   3bd24:	ldr	w0, [x0, #8]
   3bd28:	and	w0, w0, #0x3ff00
   3bd2c:	cmp	w0, #0x0
   3bd30:	b.eq	3be04 <rpl_re_set_registers@@Base+0x501c>  // b.none
   3bd34:	ldr	x3, [sp, #40]
   3bd38:	ldr	x0, [sp, #40]
   3bd3c:	ldr	w0, [x0, #160]
   3bd40:	mov	w2, w0
   3bd44:	ldr	x1, [sp, #160]
   3bd48:	mov	x0, x3
   3bd4c:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   3bd50:	str	w0, [sp, #140]
   3bd54:	ldr	x0, [sp, #144]
   3bd58:	ldr	w0, [x0, #8]
   3bd5c:	ubfx	x0, x0, #8, #10
   3bd60:	and	w0, w0, #0xffff
   3bd64:	and	w0, w0, #0x4
   3bd68:	cmp	w0, #0x0
   3bd6c:	b.eq	3bd80 <rpl_re_set_registers@@Base+0x4f98>  // b.none
   3bd70:	ldr	w0, [sp, #140]
   3bd74:	and	w0, w0, #0x1
   3bd78:	cmp	w0, #0x0
   3bd7c:	b.eq	3c1f4 <rpl_re_set_registers@@Base+0x540c>  // b.none
   3bd80:	ldr	x0, [sp, #144]
   3bd84:	ldr	w0, [x0, #8]
   3bd88:	ubfx	x0, x0, #8, #10
   3bd8c:	and	w0, w0, #0xffff
   3bd90:	and	w0, w0, #0x8
   3bd94:	cmp	w0, #0x0
   3bd98:	b.eq	3bdac <rpl_re_set_registers@@Base+0x4fc4>  // b.none
   3bd9c:	ldr	w0, [sp, #140]
   3bda0:	and	w0, w0, #0x1
   3bda4:	cmp	w0, #0x0
   3bda8:	b.ne	3c1f4 <rpl_re_set_registers@@Base+0x540c>  // b.any
   3bdac:	ldr	x0, [sp, #144]
   3bdb0:	ldr	w0, [x0, #8]
   3bdb4:	ubfx	x0, x0, #8, #10
   3bdb8:	and	w0, w0, #0xffff
   3bdbc:	and	w0, w0, #0x20
   3bdc0:	cmp	w0, #0x0
   3bdc4:	b.eq	3bdd8 <rpl_re_set_registers@@Base+0x4ff0>  // b.none
   3bdc8:	ldr	w0, [sp, #140]
   3bdcc:	and	w0, w0, #0x2
   3bdd0:	cmp	w0, #0x0
   3bdd4:	b.eq	3c1f4 <rpl_re_set_registers@@Base+0x540c>  // b.none
   3bdd8:	ldr	x0, [sp, #144]
   3bddc:	ldr	w0, [x0, #8]
   3bde0:	ubfx	x0, x0, #8, #10
   3bde4:	and	w0, w0, #0xffff
   3bde8:	and	w0, w0, #0x80
   3bdec:	cmp	w0, #0x0
   3bdf0:	b.eq	3be04 <rpl_re_set_registers@@Base+0x501c>  // b.none
   3bdf4:	ldr	w0, [sp, #140]
   3bdf8:	and	w0, w0, #0x8
   3bdfc:	cmp	w0, #0x0
   3be00:	b.eq	3c1f4 <rpl_re_set_registers@@Base+0x540c>  // b.none
   3be04:	ldr	x0, [sp, #40]
   3be08:	ldr	x0, [x0, #200]
   3be0c:	str	x0, [sp, #176]
   3be10:	ldr	x2, [sp, #160]
   3be14:	ldr	x1, [sp, #152]
   3be18:	ldr	x0, [sp, #40]
   3be1c:	bl	3c24c <rpl_re_set_registers@@Base+0x5464>
   3be20:	str	w0, [sp, #84]
   3be24:	ldr	w0, [sp, #84]
   3be28:	cmp	w0, #0x0
   3be2c:	cset	w0, ne  // ne = any
   3be30:	and	w0, w0, #0xff
   3be34:	and	x0, x0, #0xff
   3be38:	cmp	x0, #0x0
   3be3c:	b.ne	3c220 <rpl_re_set_registers@@Base+0x5438>  // b.any
   3be40:	b	3c1d4 <rpl_re_set_registers@@Base+0x53ec>
   3be44:	ldr	x0, [sp, #40]
   3be48:	ldr	x2, [x0, #216]
   3be4c:	ldr	x1, [sp, #176]
   3be50:	mov	x0, x1
   3be54:	lsl	x0, x0, #2
   3be58:	add	x0, x0, x1
   3be5c:	lsl	x0, x0, #3
   3be60:	add	x0, x2, x0
   3be64:	str	x0, [sp, #128]
   3be68:	ldr	x0, [sp, #128]
   3be6c:	ldr	x0, [x0]
   3be70:	ldr	x1, [sp, #152]
   3be74:	cmp	x1, x0
   3be78:	b.ne	3c1c4 <rpl_re_set_registers@@Base+0x53dc>  // b.any
   3be7c:	ldr	x0, [sp, #128]
   3be80:	ldr	x0, [x0, #8]
   3be84:	ldr	x1, [sp, #160]
   3be88:	cmp	x1, x0
   3be8c:	b.ne	3c1c4 <rpl_re_set_registers@@Base+0x53dc>  // b.any
   3be90:	ldr	x0, [sp, #128]
   3be94:	ldr	x1, [x0, #24]
   3be98:	ldr	x0, [sp, #128]
   3be9c:	ldr	x0, [x0, #16]
   3bea0:	sub	x0, x1, x0
   3bea4:	str	x0, [sp, #120]
   3bea8:	ldr	x0, [sp, #120]
   3beac:	cmp	x0, #0x0
   3beb0:	b.ne	3bf00 <rpl_re_set_registers@@Base+0x5118>  // b.any
   3beb4:	ldr	x0, [sp, #168]
   3beb8:	ldr	x2, [x0, #48]
   3bebc:	ldr	x0, [sp, #168]
   3bec0:	ldr	x3, [x0, #40]
   3bec4:	ldr	x1, [sp, #152]
   3bec8:	mov	x0, x1
   3becc:	lsl	x0, x0, #1
   3bed0:	add	x0, x0, x1
   3bed4:	lsl	x0, x0, #3
   3bed8:	add	x0, x3, x0
   3bedc:	ldr	x0, [x0, #16]
   3bee0:	ldr	x0, [x0]
   3bee4:	mov	x1, x0
   3bee8:	mov	x0, x1
   3beec:	lsl	x0, x0, #1
   3bef0:	add	x0, x0, x1
   3bef4:	lsl	x0, x0, #3
   3bef8:	add	x0, x2, x0
   3befc:	b	3bf38 <rpl_re_set_registers@@Base+0x5150>
   3bf00:	ldr	x0, [sp, #168]
   3bf04:	ldr	x1, [x0, #48]
   3bf08:	ldr	x0, [sp, #168]
   3bf0c:	ldr	x2, [x0, #24]
   3bf10:	ldr	x0, [sp, #152]
   3bf14:	lsl	x0, x0, #3
   3bf18:	add	x0, x2, x0
   3bf1c:	ldr	x0, [x0]
   3bf20:	mov	x2, x0
   3bf24:	mov	x0, x2
   3bf28:	lsl	x0, x0, #1
   3bf2c:	add	x0, x0, x2
   3bf30:	lsl	x0, x0, #3
   3bf34:	add	x0, x1, x0
   3bf38:	str	x0, [sp, #112]
   3bf3c:	ldr	x0, [sp, #128]
   3bf40:	ldr	x1, [x0, #24]
   3bf44:	ldr	x0, [sp, #160]
   3bf48:	add	x1, x1, x0
   3bf4c:	ldr	x0, [sp, #128]
   3bf50:	ldr	x0, [x0, #16]
   3bf54:	sub	x0, x1, x0
   3bf58:	str	x0, [sp, #104]
   3bf5c:	ldr	x3, [sp, #40]
   3bf60:	ldr	x0, [sp, #104]
   3bf64:	sub	x1, x0, #0x1
   3bf68:	ldr	x0, [sp, #40]
   3bf6c:	ldr	w0, [x0, #160]
   3bf70:	mov	w2, w0
   3bf74:	mov	x0, x3
   3bf78:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   3bf7c:	str	w0, [sp, #140]
   3bf80:	ldr	x0, [sp, #40]
   3bf84:	ldr	x1, [x0, #184]
   3bf88:	ldr	x0, [sp, #104]
   3bf8c:	lsl	x0, x0, #3
   3bf90:	add	x0, x1, x0
   3bf94:	ldr	x0, [x0]
   3bf98:	str	x0, [sp, #96]
   3bf9c:	ldr	x0, [sp, #40]
   3bfa0:	ldr	x1, [x0, #184]
   3bfa4:	ldr	x0, [sp, #160]
   3bfa8:	lsl	x0, x0, #3
   3bfac:	add	x0, x1, x0
   3bfb0:	ldr	x0, [x0]
   3bfb4:	cmp	x0, #0x0
   3bfb8:	b.eq	3bfdc <rpl_re_set_registers@@Base+0x51f4>  // b.none
   3bfbc:	ldr	x0, [sp, #40]
   3bfc0:	ldr	x1, [x0, #184]
   3bfc4:	ldr	x0, [sp, #160]
   3bfc8:	lsl	x0, x0, #3
   3bfcc:	add	x0, x1, x0
   3bfd0:	ldr	x0, [x0]
   3bfd4:	ldr	x0, [x0, #16]
   3bfd8:	b	3bfe0 <rpl_re_set_registers@@Base+0x51f8>
   3bfdc:	mov	x0, #0x0                   	// #0
   3bfe0:	str	x0, [sp, #88]
   3bfe4:	ldr	x0, [sp, #96]
   3bfe8:	cmp	x0, #0x0
   3bfec:	b.ne	3c06c <rpl_re_set_registers@@Base+0x5284>  // b.any
   3bff0:	ldr	x0, [sp, #40]
   3bff4:	ldr	x1, [x0, #184]
   3bff8:	ldr	x0, [sp, #104]
   3bffc:	lsl	x0, x0, #3
   3c000:	add	x19, x1, x0
   3c004:	add	x0, sp, #0x54
   3c008:	ldr	w3, [sp, #140]
   3c00c:	ldr	x2, [sp, #112]
   3c010:	ldr	x1, [sp, #168]
   3c014:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   3c018:	str	x0, [x19]
   3c01c:	ldr	x0, [sp, #40]
   3c020:	ldr	x1, [x0, #184]
   3c024:	ldr	x0, [sp, #104]
   3c028:	lsl	x0, x0, #3
   3c02c:	add	x0, x1, x0
   3c030:	ldr	x0, [x0]
   3c034:	cmp	x0, #0x0
   3c038:	cset	w0, eq  // eq = none
   3c03c:	and	w0, w0, #0xff
   3c040:	and	x0, x0, #0xff
   3c044:	cmp	x0, #0x0
   3c048:	b.eq	3c130 <rpl_re_set_registers@@Base+0x5348>  // b.none
   3c04c:	ldr	w0, [sp, #84]
   3c050:	cmp	w0, #0x0
   3c054:	cset	w0, ne  // ne = any
   3c058:	and	w0, w0, #0xff
   3c05c:	and	x0, x0, #0xff
   3c060:	cmp	x0, #0x0
   3c064:	b.eq	3c130 <rpl_re_set_registers@@Base+0x5348>  // b.none
   3c068:	b	3c23c <rpl_re_set_registers@@Base+0x5454>
   3c06c:	ldr	x0, [sp, #96]
   3c070:	ldr	x1, [x0, #80]
   3c074:	add	x0, sp, #0x38
   3c078:	ldr	x2, [sp, #112]
   3c07c:	bl	2bc30 <printf_parse@@Base+0x4938>
   3c080:	str	w0, [sp, #84]
   3c084:	ldr	w0, [sp, #84]
   3c088:	cmp	w0, #0x0
   3c08c:	cset	w0, ne  // ne = any
   3c090:	and	w0, w0, #0xff
   3c094:	and	x0, x0, #0xff
   3c098:	cmp	x0, #0x0
   3c09c:	b.eq	3c0ac <rpl_re_set_registers@@Base+0x52c4>  // b.none
   3c0a0:	ldr	x0, [sp, #72]
   3c0a4:	bl	b130 <free@plt>
   3c0a8:	b	3c23c <rpl_re_set_registers@@Base+0x5454>
   3c0ac:	ldr	x0, [sp, #40]
   3c0b0:	ldr	x1, [x0, #184]
   3c0b4:	ldr	x0, [sp, #104]
   3c0b8:	lsl	x0, x0, #3
   3c0bc:	add	x19, x1, x0
   3c0c0:	add	x1, sp, #0x38
   3c0c4:	add	x0, sp, #0x54
   3c0c8:	ldr	w3, [sp, #140]
   3c0cc:	mov	x2, x1
   3c0d0:	ldr	x1, [sp, #168]
   3c0d4:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   3c0d8:	str	x0, [x19]
   3c0dc:	ldr	x0, [sp, #72]
   3c0e0:	bl	b130 <free@plt>
   3c0e4:	ldr	x0, [sp, #40]
   3c0e8:	ldr	x1, [x0, #184]
   3c0ec:	ldr	x0, [sp, #104]
   3c0f0:	lsl	x0, x0, #3
   3c0f4:	add	x0, x1, x0
   3c0f8:	ldr	x0, [x0]
   3c0fc:	cmp	x0, #0x0
   3c100:	cset	w0, eq  // eq = none
   3c104:	and	w0, w0, #0xff
   3c108:	and	x0, x0, #0xff
   3c10c:	cmp	x0, #0x0
   3c110:	b.eq	3c130 <rpl_re_set_registers@@Base+0x5348>  // b.none
   3c114:	ldr	w0, [sp, #84]
   3c118:	cmp	w0, #0x0
   3c11c:	cset	w0, ne  // ne = any
   3c120:	and	w0, w0, #0xff
   3c124:	and	x0, x0, #0xff
   3c128:	cmp	x0, #0x0
   3c12c:	b.ne	3c228 <rpl_re_set_registers@@Base+0x5440>  // b.any
   3c130:	ldr	x0, [sp, #120]
   3c134:	cmp	x0, #0x0
   3c138:	b.ne	3c1c8 <rpl_re_set_registers@@Base+0x53e0>  // b.any
   3c13c:	ldr	x0, [sp, #40]
   3c140:	ldr	x1, [x0, #184]
   3c144:	ldr	x0, [sp, #160]
   3c148:	lsl	x0, x0, #3
   3c14c:	add	x0, x1, x0
   3c150:	ldr	x0, [x0]
   3c154:	ldr	x0, [x0, #16]
   3c158:	ldr	x1, [sp, #88]
   3c15c:	cmp	x1, x0
   3c160:	b.ge	3c1c8 <rpl_re_set_registers@@Base+0x53e0>  // b.tcont
   3c164:	ldr	x2, [sp, #160]
   3c168:	ldr	x1, [sp, #112]
   3c16c:	ldr	x0, [sp, #40]
   3c170:	bl	3b794 <rpl_re_set_registers@@Base+0x49ac>
   3c174:	str	w0, [sp, #84]
   3c178:	ldr	w0, [sp, #84]
   3c17c:	cmp	w0, #0x0
   3c180:	cset	w0, ne  // ne = any
   3c184:	and	w0, w0, #0xff
   3c188:	and	x0, x0, #0xff
   3c18c:	cmp	x0, #0x0
   3c190:	b.ne	3c230 <rpl_re_set_registers@@Base+0x5448>  // b.any
   3c194:	ldr	x1, [sp, #112]
   3c198:	ldr	x0, [sp, #40]
   3c19c:	bl	3bca8 <rpl_re_set_registers@@Base+0x4ec0>
   3c1a0:	str	w0, [sp, #84]
   3c1a4:	ldr	w0, [sp, #84]
   3c1a8:	cmp	w0, #0x0
   3c1ac:	cset	w0, ne  // ne = any
   3c1b0:	and	w0, w0, #0xff
   3c1b4:	and	x0, x0, #0xff
   3c1b8:	cmp	x0, #0x0
   3c1bc:	b.ne	3c238 <rpl_re_set_registers@@Base+0x5450>  // b.any
   3c1c0:	b	3c1c8 <rpl_re_set_registers@@Base+0x53e0>
   3c1c4:	nop
   3c1c8:	ldr	x0, [sp, #176]
   3c1cc:	add	x0, x0, #0x1
   3c1d0:	str	x0, [sp, #176]
   3c1d4:	ldr	x0, [sp, #40]
   3c1d8:	ldr	x0, [x0, #200]
   3c1dc:	ldr	x1, [sp, #176]
   3c1e0:	cmp	x1, x0
   3c1e4:	b.lt	3be44 <rpl_re_set_registers@@Base+0x505c>  // b.tstop
   3c1e8:	b	3c1f8 <rpl_re_set_registers@@Base+0x5410>
   3c1ec:	nop
   3c1f0:	b	3c1f8 <rpl_re_set_registers@@Base+0x5410>
   3c1f4:	nop
   3c1f8:	ldr	x0, [sp, #184]
   3c1fc:	add	x0, x0, #0x1
   3c200:	str	x0, [sp, #184]
   3c204:	ldr	x0, [sp, #32]
   3c208:	ldr	x0, [x0, #8]
   3c20c:	ldr	x1, [sp, #184]
   3c210:	cmp	x1, x0
   3c214:	b.lt	3bcdc <rpl_re_set_registers@@Base+0x4ef4>  // b.tstop
   3c218:	str	wzr, [sp, #84]
   3c21c:	b	3c23c <rpl_re_set_registers@@Base+0x5454>
   3c220:	nop
   3c224:	b	3c23c <rpl_re_set_registers@@Base+0x5454>
   3c228:	nop
   3c22c:	b	3c23c <rpl_re_set_registers@@Base+0x5454>
   3c230:	nop
   3c234:	b	3c23c <rpl_re_set_registers@@Base+0x5454>
   3c238:	nop
   3c23c:	ldr	w0, [sp, #84]
   3c240:	ldr	x19, [sp, #16]
   3c244:	ldp	x29, x30, [sp], #192
   3c248:	ret
   3c24c:	stp	x29, x30, [sp, #-176]!
   3c250:	mov	x29, sp
   3c254:	str	x0, [sp, #40]
   3c258:	str	x1, [sp, #32]
   3c25c:	str	x2, [sp, #24]
   3c260:	ldr	x0, [sp, #40]
   3c264:	ldr	x0, [x0, #152]
   3c268:	str	x0, [sp, #120]
   3c26c:	ldr	x0, [sp, #40]
   3c270:	ldr	x0, [x0, #8]
   3c274:	str	x0, [sp, #160]
   3c278:	ldr	x1, [sp, #24]
   3c27c:	ldr	x0, [sp, #40]
   3c280:	bl	3fdfc <rpl_re_set_registers@@Base+0x9014>
   3c284:	str	x0, [sp, #112]
   3c288:	ldr	x0, [sp, #112]
   3c28c:	cmn	x0, #0x1
   3c290:	b.eq	3c2ec <rpl_re_set_registers@@Base+0x5504>  // b.none
   3c294:	ldr	x0, [sp, #40]
   3c298:	ldr	x2, [x0, #216]
   3c29c:	ldr	x1, [sp, #112]
   3c2a0:	mov	x0, x1
   3c2a4:	lsl	x0, x0, #2
   3c2a8:	add	x0, x0, x1
   3c2ac:	lsl	x0, x0, #3
   3c2b0:	add	x0, x2, x0
   3c2b4:	str	x0, [sp, #152]
   3c2b8:	ldr	x0, [sp, #152]
   3c2bc:	ldr	x0, [x0]
   3c2c0:	ldr	x1, [sp, #32]
   3c2c4:	cmp	x1, x0
   3c2c8:	b.ne	3c2d4 <rpl_re_set_registers@@Base+0x54ec>  // b.any
   3c2cc:	mov	w0, #0x0                   	// #0
   3c2d0:	b	3c850 <rpl_re_set_registers@@Base+0x5a68>
   3c2d4:	ldr	x0, [sp, #152]
   3c2d8:	add	x1, x0, #0x28
   3c2dc:	str	x1, [sp, #152]
   3c2e0:	ldrb	w0, [x0, #32]
   3c2e4:	cmp	w0, #0x0
   3c2e8:	b.ne	3c2b8 <rpl_re_set_registers@@Base+0x54d0>  // b.any
   3c2ec:	ldr	x0, [sp, #120]
   3c2f0:	ldr	x1, [x0]
   3c2f4:	ldr	x0, [sp, #32]
   3c2f8:	lsl	x0, x0, #4
   3c2fc:	add	x0, x1, x0
   3c300:	ldr	x0, [x0]
   3c304:	str	x0, [sp, #104]
   3c308:	str	xzr, [sp, #168]
   3c30c:	b	3c838 <rpl_re_set_registers@@Base+0x5a50>
   3c310:	ldr	x0, [sp, #40]
   3c314:	ldr	x1, [x0, #248]
   3c318:	ldr	x0, [sp, #168]
   3c31c:	lsl	x0, x0, #3
   3c320:	add	x0, x1, x0
   3c324:	ldr	x0, [x0]
   3c328:	str	x0, [sp, #96]
   3c32c:	ldr	x0, [sp, #120]
   3c330:	ldr	x1, [x0]
   3c334:	ldr	x0, [sp, #96]
   3c338:	ldr	x0, [x0, #8]
   3c33c:	lsl	x0, x0, #4
   3c340:	add	x0, x1, x0
   3c344:	ldr	x0, [x0]
   3c348:	ldr	x1, [sp, #104]
   3c34c:	cmp	x1, x0
   3c350:	b.ne	3c810 <rpl_re_set_registers@@Base+0x5a28>  // b.any
   3c354:	ldr	x0, [sp, #96]
   3c358:	ldr	x0, [x0]
   3c35c:	str	x0, [sp, #136]
   3c360:	ldr	x0, [sp, #24]
   3c364:	str	x0, [sp, #128]
   3c368:	str	xzr, [sp, #144]
   3c36c:	b	3c4fc <rpl_re_set_registers@@Base+0x5714>
   3c370:	ldr	x0, [sp, #96]
   3c374:	ldr	x1, [x0, #40]
   3c378:	ldr	x0, [sp, #144]
   3c37c:	lsl	x0, x0, #3
   3c380:	add	x0, x1, x0
   3c384:	ldr	x0, [x0]
   3c388:	str	x0, [sp, #88]
   3c38c:	ldr	x0, [sp, #88]
   3c390:	ldr	x1, [x0, #8]
   3c394:	ldr	x0, [sp, #136]
   3c398:	sub	x0, x1, x0
   3c39c:	str	x0, [sp, #80]
   3c3a0:	ldr	x0, [sp, #80]
   3c3a4:	cmp	x0, #0x0
   3c3a8:	b.le	3c474 <rpl_re_set_registers@@Base+0x568c>
   3c3ac:	ldr	x1, [sp, #128]
   3c3b0:	ldr	x0, [sp, #80]
   3c3b4:	add	x1, x1, x0
   3c3b8:	ldr	x0, [sp, #40]
   3c3bc:	ldr	x0, [x0, #48]
   3c3c0:	cmp	x1, x0
   3c3c4:	cset	w0, gt
   3c3c8:	and	w0, w0, #0xff
   3c3cc:	and	x0, x0, #0xff
   3c3d0:	cmp	x0, #0x0
   3c3d4:	b.eq	3c440 <rpl_re_set_registers@@Base+0x5658>  // b.none
   3c3d8:	ldr	x1, [sp, #128]
   3c3dc:	ldr	x0, [sp, #80]
   3c3e0:	add	x1, x1, x0
   3c3e4:	ldr	x0, [sp, #40]
   3c3e8:	ldr	x0, [x0, #88]
   3c3ec:	cmp	x1, x0
   3c3f0:	b.gt	3c514 <rpl_re_set_registers@@Base+0x572c>
   3c3f4:	ldr	x1, [sp, #128]
   3c3f8:	ldr	x0, [sp, #80]
   3c3fc:	add	x0, x1, x0
   3c400:	mov	x1, x0
   3c404:	ldr	x0, [sp, #40]
   3c408:	bl	39b20 <rpl_re_set_registers@@Base+0x2d38>
   3c40c:	str	w0, [sp, #76]
   3c410:	ldr	w0, [sp, #76]
   3c414:	cmp	w0, #0x0
   3c418:	cset	w0, ne  // ne = any
   3c41c:	and	w0, w0, #0xff
   3c420:	and	x0, x0, #0xff
   3c424:	cmp	x0, #0x0
   3c428:	b.eq	3c434 <rpl_re_set_registers@@Base+0x564c>  // b.none
   3c42c:	ldr	w0, [sp, #76]
   3c430:	b	3c850 <rpl_re_set_registers@@Base+0x5a68>
   3c434:	ldr	x0, [sp, #40]
   3c438:	ldr	x0, [x0, #8]
   3c43c:	str	x0, [sp, #160]
   3c440:	ldr	x0, [sp, #128]
   3c444:	ldr	x1, [sp, #160]
   3c448:	add	x3, x1, x0
   3c44c:	ldr	x0, [sp, #136]
   3c450:	ldr	x1, [sp, #160]
   3c454:	add	x0, x1, x0
   3c458:	ldr	x1, [sp, #80]
   3c45c:	mov	x2, x1
   3c460:	mov	x1, x0
   3c464:	mov	x0, x3
   3c468:	bl	b000 <memcmp@plt>
   3c46c:	cmp	w0, #0x0
   3c470:	b.ne	3c51c <rpl_re_set_registers@@Base+0x5734>  // b.any
   3c474:	ldr	x1, [sp, #128]
   3c478:	ldr	x0, [sp, #80]
   3c47c:	add	x0, x1, x0
   3c480:	str	x0, [sp, #128]
   3c484:	ldr	x1, [sp, #136]
   3c488:	ldr	x0, [sp, #80]
   3c48c:	add	x0, x1, x0
   3c490:	str	x0, [sp, #136]
   3c494:	ldr	x4, [sp, #24]
   3c498:	ldr	x3, [sp, #32]
   3c49c:	ldr	x2, [sp, #88]
   3c4a0:	ldr	x1, [sp, #96]
   3c4a4:	ldr	x0, [sp, #40]
   3c4a8:	bl	3c858 <rpl_re_set_registers@@Base+0x5a70>
   3c4ac:	str	w0, [sp, #76]
   3c4b0:	ldr	x0, [sp, #40]
   3c4b4:	ldr	x0, [x0, #8]
   3c4b8:	str	x0, [sp, #160]
   3c4bc:	ldr	w0, [sp, #76]
   3c4c0:	cmp	w0, #0x1
   3c4c4:	b.eq	3c4ec <rpl_re_set_registers@@Base+0x5704>  // b.none
   3c4c8:	ldr	w0, [sp, #76]
   3c4cc:	cmp	w0, #0x0
   3c4d0:	cset	w0, ne  // ne = any
   3c4d4:	and	w0, w0, #0xff
   3c4d8:	and	x0, x0, #0xff
   3c4dc:	cmp	x0, #0x0
   3c4e0:	b.eq	3c4f0 <rpl_re_set_registers@@Base+0x5708>  // b.none
   3c4e4:	ldr	w0, [sp, #76]
   3c4e8:	b	3c850 <rpl_re_set_registers@@Base+0x5a68>
   3c4ec:	nop
   3c4f0:	ldr	x0, [sp, #144]
   3c4f4:	add	x0, x0, #0x1
   3c4f8:	str	x0, [sp, #144]
   3c4fc:	ldr	x0, [sp, #96]
   3c500:	ldr	x0, [x0, #32]
   3c504:	ldr	x1, [sp, #144]
   3c508:	cmp	x1, x0
   3c50c:	b.lt	3c370 <rpl_re_set_registers@@Base+0x5588>  // b.tstop
   3c510:	b	3c520 <rpl_re_set_registers@@Base+0x5738>
   3c514:	nop
   3c518:	b	3c520 <rpl_re_set_registers@@Base+0x5738>
   3c51c:	nop
   3c520:	ldr	x0, [sp, #96]
   3c524:	ldr	x0, [x0, #32]
   3c528:	ldr	x1, [sp, #144]
   3c52c:	cmp	x1, x0
   3c530:	b.lt	3c818 <rpl_re_set_registers@@Base+0x5a30>  // b.tstop
   3c534:	ldr	x0, [sp, #144]
   3c538:	cmp	x0, #0x0
   3c53c:	b.le	3c7fc <rpl_re_set_registers@@Base+0x5a14>
   3c540:	ldr	x0, [sp, #136]
   3c544:	add	x0, x0, #0x1
   3c548:	str	x0, [sp, #136]
   3c54c:	b	3c7fc <rpl_re_set_registers@@Base+0x5a14>
   3c550:	ldr	x0, [sp, #96]
   3c554:	ldr	x0, [x0]
   3c558:	ldr	x1, [sp, #136]
   3c55c:	sub	x0, x1, x0
   3c560:	str	x0, [sp, #64]
   3c564:	ldr	x0, [sp, #64]
   3c568:	cmp	x0, #0x0
   3c56c:	b.le	3c628 <rpl_re_set_registers@@Base+0x5840>
   3c570:	ldr	x0, [sp, #40]
   3c574:	ldr	x0, [x0, #48]
   3c578:	ldr	x1, [sp, #128]
   3c57c:	cmp	x1, x0
   3c580:	cset	w0, ge  // ge = tcont
   3c584:	and	w0, w0, #0xff
   3c588:	and	x0, x0, #0xff
   3c58c:	cmp	x0, #0x0
   3c590:	b.eq	3c5f0 <rpl_re_set_registers@@Base+0x5808>  // b.none
   3c594:	ldr	x0, [sp, #40]
   3c598:	ldr	x0, [x0, #88]
   3c59c:	ldr	x1, [sp, #128]
   3c5a0:	cmp	x1, x0
   3c5a4:	b.ge	3c820 <rpl_re_set_registers@@Base+0x5a38>  // b.tcont
   3c5a8:	ldr	x0, [sp, #128]
   3c5ac:	add	w0, w0, #0x1
   3c5b0:	mov	w1, w0
   3c5b4:	ldr	x0, [sp, #40]
   3c5b8:	bl	3f6c0 <rpl_re_set_registers@@Base+0x88d8>
   3c5bc:	str	w0, [sp, #76]
   3c5c0:	ldr	w0, [sp, #76]
   3c5c4:	cmp	w0, #0x0
   3c5c8:	cset	w0, ne  // ne = any
   3c5cc:	and	w0, w0, #0xff
   3c5d0:	and	x0, x0, #0xff
   3c5d4:	cmp	x0, #0x0
   3c5d8:	b.eq	3c5e4 <rpl_re_set_registers@@Base+0x57fc>  // b.none
   3c5dc:	ldr	w0, [sp, #76]
   3c5e0:	b	3c850 <rpl_re_set_registers@@Base+0x5a68>
   3c5e4:	ldr	x0, [sp, #40]
   3c5e8:	ldr	x0, [x0, #8]
   3c5ec:	str	x0, [sp, #160]
   3c5f0:	ldr	x0, [sp, #128]
   3c5f4:	add	x1, x0, #0x1
   3c5f8:	str	x1, [sp, #128]
   3c5fc:	mov	x1, x0
   3c600:	ldr	x0, [sp, #160]
   3c604:	add	x0, x0, x1
   3c608:	ldrb	w1, [x0]
   3c60c:	ldr	x0, [sp, #136]
   3c610:	sub	x0, x0, #0x1
   3c614:	ldr	x2, [sp, #160]
   3c618:	add	x0, x2, x0
   3c61c:	ldrb	w0, [x0]
   3c620:	cmp	w1, w0
   3c624:	b.ne	3c828 <rpl_re_set_registers@@Base+0x5a40>  // b.any
   3c628:	ldr	x0, [sp, #40]
   3c62c:	ldr	x1, [x0, #184]
   3c630:	ldr	x0, [sp, #136]
   3c634:	lsl	x0, x0, #3
   3c638:	add	x0, x1, x0
   3c63c:	ldr	x0, [x0]
   3c640:	cmp	x0, #0x0
   3c644:	b.eq	3c7d4 <rpl_re_set_registers@@Base+0x59ec>  // b.none
   3c648:	ldr	x0, [sp, #40]
   3c64c:	ldr	x1, [x0, #184]
   3c650:	ldr	x0, [sp, #136]
   3c654:	lsl	x0, x0, #3
   3c658:	add	x0, x1, x0
   3c65c:	ldr	x0, [x0]
   3c660:	add	x0, x0, #0x8
   3c664:	str	x0, [sp, #56]
   3c668:	mov	w3, #0x9                   	// #9
   3c66c:	ldr	x2, [sp, #104]
   3c670:	ldr	x1, [sp, #56]
   3c674:	ldr	x0, [sp, #120]
   3c678:	bl	3c940 <rpl_re_set_registers@@Base+0x5b58>
   3c67c:	str	x0, [sp, #48]
   3c680:	ldr	x0, [sp, #48]
   3c684:	cmn	x0, #0x1
   3c688:	b.eq	3c7dc <rpl_re_set_registers@@Base+0x59f4>  // b.none
   3c68c:	ldr	x0, [sp, #96]
   3c690:	ldr	x0, [x0, #16]
   3c694:	cmp	x0, #0x0
   3c698:	b.ne	3c6e0 <rpl_re_set_registers@@Base+0x58f8>  // b.any
   3c69c:	ldr	x0, [sp, #96]
   3c6a0:	ldr	x0, [x0]
   3c6a4:	ldr	x1, [sp, #136]
   3c6a8:	sub	x0, x1, x0
   3c6ac:	add	x0, x0, #0x1
   3c6b0:	mov	x1, x0
   3c6b4:	mov	x0, #0x18                  	// #24
   3c6b8:	bl	ad80 <calloc@plt>
   3c6bc:	mov	x1, x0
   3c6c0:	ldr	x0, [sp, #96]
   3c6c4:	str	x1, [x0, #16]
   3c6c8:	ldr	x0, [sp, #96]
   3c6cc:	ldr	x0, [x0, #16]
   3c6d0:	cmp	x0, #0x0
   3c6d4:	b.ne	3c6e0 <rpl_re_set_registers@@Base+0x58f8>  // b.any
   3c6d8:	mov	w0, #0xc                   	// #12
   3c6dc:	b	3c850 <rpl_re_set_registers@@Base+0x5a68>
   3c6e0:	ldr	x0, [sp, #96]
   3c6e4:	ldr	x1, [x0, #16]
   3c6e8:	ldr	x0, [sp, #96]
   3c6ec:	ldr	x2, [x0, #8]
   3c6f0:	ldr	x0, [sp, #96]
   3c6f4:	ldr	x0, [x0]
   3c6f8:	mov	w6, #0x9                   	// #9
   3c6fc:	ldr	x5, [sp, #136]
   3c700:	ldr	x4, [sp, #48]
   3c704:	mov	x3, x0
   3c708:	ldr	x0, [sp, #40]
   3c70c:	bl	3c9f0 <rpl_re_set_registers@@Base+0x5c08>
   3c710:	str	w0, [sp, #76]
   3c714:	ldr	w0, [sp, #76]
   3c718:	cmp	w0, #0x1
   3c71c:	b.eq	3c7e4 <rpl_re_set_registers@@Base+0x59fc>  // b.none
   3c720:	ldr	w0, [sp, #76]
   3c724:	cmp	w0, #0x0
   3c728:	cset	w0, ne  // ne = any
   3c72c:	and	w0, w0, #0xff
   3c730:	and	x0, x0, #0xff
   3c734:	cmp	x0, #0x0
   3c738:	b.eq	3c744 <rpl_re_set_registers@@Base+0x595c>  // b.none
   3c73c:	ldr	w0, [sp, #76]
   3c740:	b	3c850 <rpl_re_set_registers@@Base+0x5a68>
   3c744:	ldr	x2, [sp, #136]
   3c748:	ldr	x1, [sp, #48]
   3c74c:	ldr	x0, [sp, #96]
   3c750:	bl	40060 <rpl_re_set_registers@@Base+0x9278>
   3c754:	str	x0, [sp, #88]
   3c758:	ldr	x0, [sp, #88]
   3c75c:	cmp	x0, #0x0
   3c760:	cset	w0, eq  // eq = none
   3c764:	and	w0, w0, #0xff
   3c768:	and	x0, x0, #0xff
   3c76c:	cmp	x0, #0x0
   3c770:	b.eq	3c77c <rpl_re_set_registers@@Base+0x5994>  // b.none
   3c774:	mov	w0, #0xc                   	// #12
   3c778:	b	3c850 <rpl_re_set_registers@@Base+0x5a68>
   3c77c:	ldr	x4, [sp, #24]
   3c780:	ldr	x3, [sp, #32]
   3c784:	ldr	x2, [sp, #88]
   3c788:	ldr	x1, [sp, #96]
   3c78c:	ldr	x0, [sp, #40]
   3c790:	bl	3c858 <rpl_re_set_registers@@Base+0x5a70>
   3c794:	str	w0, [sp, #76]
   3c798:	ldr	x0, [sp, #40]
   3c79c:	ldr	x0, [x0, #8]
   3c7a0:	str	x0, [sp, #160]
   3c7a4:	ldr	w0, [sp, #76]
   3c7a8:	cmp	w0, #0x1
   3c7ac:	b.eq	3c7ec <rpl_re_set_registers@@Base+0x5a04>  // b.none
   3c7b0:	ldr	w0, [sp, #76]
   3c7b4:	cmp	w0, #0x0
   3c7b8:	cset	w0, ne  // ne = any
   3c7bc:	and	w0, w0, #0xff
   3c7c0:	and	x0, x0, #0xff
   3c7c4:	cmp	x0, #0x0
   3c7c8:	b.eq	3c7f0 <rpl_re_set_registers@@Base+0x5a08>  // b.none
   3c7cc:	ldr	w0, [sp, #76]
   3c7d0:	b	3c850 <rpl_re_set_registers@@Base+0x5a68>
   3c7d4:	nop
   3c7d8:	b	3c7f0 <rpl_re_set_registers@@Base+0x5a08>
   3c7dc:	nop
   3c7e0:	b	3c7f0 <rpl_re_set_registers@@Base+0x5a08>
   3c7e4:	nop
   3c7e8:	b	3c7f0 <rpl_re_set_registers@@Base+0x5a08>
   3c7ec:	nop
   3c7f0:	ldr	x0, [sp, #136]
   3c7f4:	add	x0, x0, #0x1
   3c7f8:	str	x0, [sp, #136]
   3c7fc:	ldr	x1, [sp, #136]
   3c800:	ldr	x0, [sp, #24]
   3c804:	cmp	x1, x0
   3c808:	b.le	3c550 <rpl_re_set_registers@@Base+0x5768>
   3c80c:	b	3c82c <rpl_re_set_registers@@Base+0x5a44>
   3c810:	nop
   3c814:	b	3c82c <rpl_re_set_registers@@Base+0x5a44>
   3c818:	nop
   3c81c:	b	3c82c <rpl_re_set_registers@@Base+0x5a44>
   3c820:	nop
   3c824:	b	3c82c <rpl_re_set_registers@@Base+0x5a44>
   3c828:	nop
   3c82c:	ldr	x0, [sp, #168]
   3c830:	add	x0, x0, #0x1
   3c834:	str	x0, [sp, #168]
   3c838:	ldr	x0, [sp, #40]
   3c83c:	ldr	x0, [x0, #232]
   3c840:	ldr	x1, [sp, #168]
   3c844:	cmp	x1, x0
   3c848:	b.lt	3c310 <rpl_re_set_registers@@Base+0x5528>  // b.tstop
   3c84c:	mov	w0, #0x0                   	// #0
   3c850:	ldp	x29, x30, [sp], #176
   3c854:	ret
   3c858:	stp	x29, x30, [sp, #-80]!
   3c85c:	mov	x29, sp
   3c860:	str	x0, [sp, #56]
   3c864:	str	x1, [sp, #48]
   3c868:	str	x2, [sp, #40]
   3c86c:	str	x3, [sp, #32]
   3c870:	str	x4, [sp, #24]
   3c874:	ldr	x0, [sp, #40]
   3c878:	add	x1, x0, #0x10
   3c87c:	ldr	x0, [sp, #40]
   3c880:	ldr	x2, [x0]
   3c884:	ldr	x0, [sp, #40]
   3c888:	ldr	x0, [x0, #8]
   3c88c:	mov	w6, #0x8                   	// #8
   3c890:	ldr	x5, [sp, #24]
   3c894:	ldr	x4, [sp, #32]
   3c898:	mov	x3, x0
   3c89c:	ldr	x0, [sp, #56]
   3c8a0:	bl	3c9f0 <rpl_re_set_registers@@Base+0x5c08>
   3c8a4:	str	w0, [sp, #76]
   3c8a8:	ldr	w0, [sp, #76]
   3c8ac:	cmp	w0, #0x0
   3c8b0:	b.eq	3c8bc <rpl_re_set_registers@@Base+0x5ad4>  // b.none
   3c8b4:	ldr	w0, [sp, #76]
   3c8b8:	b	3c938 <rpl_re_set_registers@@Base+0x5b50>
   3c8bc:	ldr	x0, [sp, #48]
   3c8c0:	ldr	x1, [x0]
   3c8c4:	ldr	x0, [sp, #40]
   3c8c8:	ldr	x0, [x0, #8]
   3c8cc:	mov	x4, x0
   3c8d0:	mov	x3, x1
   3c8d4:	ldr	x2, [sp, #24]
   3c8d8:	ldr	x1, [sp, #32]
   3c8dc:	ldr	x0, [sp, #56]
   3c8e0:	bl	3fae4 <rpl_re_set_registers@@Base+0x8cfc>
   3c8e4:	str	w0, [sp, #76]
   3c8e8:	ldr	w0, [sp, #76]
   3c8ec:	cmp	w0, #0x0
   3c8f0:	cset	w0, ne  // ne = any
   3c8f4:	and	w0, w0, #0xff
   3c8f8:	and	x0, x0, #0xff
   3c8fc:	cmp	x0, #0x0
   3c900:	b.eq	3c90c <rpl_re_set_registers@@Base+0x5b24>  // b.none
   3c904:	ldr	w0, [sp, #76]
   3c908:	b	3c938 <rpl_re_set_registers@@Base+0x5b50>
   3c90c:	ldr	x0, [sp, #40]
   3c910:	ldr	x1, [x0, #8]
   3c914:	ldr	x0, [sp, #24]
   3c918:	add	x1, x1, x0
   3c91c:	ldr	x0, [sp, #48]
   3c920:	ldr	x0, [x0]
   3c924:	sub	x0, x1, x0
   3c928:	str	x0, [sp, #64]
   3c92c:	ldr	x1, [sp, #64]
   3c930:	ldr	x0, [sp, #56]
   3c934:	bl	39b20 <rpl_re_set_registers@@Base+0x2d38>
   3c938:	ldp	x29, x30, [sp], #80
   3c93c:	ret
   3c940:	sub	sp, sp, #0x40
   3c944:	str	x0, [sp, #24]
   3c948:	str	x1, [sp, #16]
   3c94c:	str	x2, [sp, #8]
   3c950:	str	w3, [sp, #4]
   3c954:	str	xzr, [sp, #56]
   3c958:	b	3c9d0 <rpl_re_set_registers@@Base+0x5be8>
   3c95c:	ldr	x0, [sp, #16]
   3c960:	ldr	x1, [x0, #16]
   3c964:	ldr	x0, [sp, #56]
   3c968:	lsl	x0, x0, #3
   3c96c:	add	x0, x1, x0
   3c970:	ldr	x0, [x0]
   3c974:	str	x0, [sp, #48]
   3c978:	ldr	x0, [sp, #24]
   3c97c:	ldr	x1, [x0]
   3c980:	ldr	x0, [sp, #48]
   3c984:	lsl	x0, x0, #4
   3c988:	add	x0, x1, x0
   3c98c:	str	x0, [sp, #40]
   3c990:	ldr	x0, [sp, #40]
   3c994:	ldrb	w0, [x0, #8]
   3c998:	mov	w1, w0
   3c99c:	ldr	w0, [sp, #4]
   3c9a0:	cmp	w0, w1
   3c9a4:	b.ne	3c9c4 <rpl_re_set_registers@@Base+0x5bdc>  // b.any
   3c9a8:	ldr	x0, [sp, #40]
   3c9ac:	ldr	x0, [x0]
   3c9b0:	ldr	x1, [sp, #8]
   3c9b4:	cmp	x1, x0
   3c9b8:	b.ne	3c9c4 <rpl_re_set_registers@@Base+0x5bdc>  // b.any
   3c9bc:	ldr	x0, [sp, #48]
   3c9c0:	b	3c9e8 <rpl_re_set_registers@@Base+0x5c00>
   3c9c4:	ldr	x0, [sp, #56]
   3c9c8:	add	x0, x0, #0x1
   3c9cc:	str	x0, [sp, #56]
   3c9d0:	ldr	x0, [sp, #16]
   3c9d4:	ldr	x0, [x0, #8]
   3c9d8:	ldr	x1, [sp, #56]
   3c9dc:	cmp	x1, x0
   3c9e0:	b.lt	3c95c <rpl_re_set_registers@@Base+0x5b74>  // b.tstop
   3c9e4:	mov	x0, #0xffffffffffffffff    	// #-1
   3c9e8:	add	sp, sp, #0x40
   3c9ec:	ret
   3c9f0:	stp	x29, x30, [sp, #-224]!
   3c9f4:	mov	x29, sp
   3c9f8:	str	x0, [sp, #72]
   3c9fc:	str	x1, [sp, #64]
   3ca00:	str	x2, [sp, #56]
   3ca04:	str	x3, [sp, #48]
   3ca08:	str	x4, [sp, #40]
   3ca0c:	str	x5, [sp, #32]
   3ca10:	str	w6, [sp, #28]
   3ca14:	ldr	x0, [sp, #72]
   3ca18:	ldr	x0, [x0, #152]
   3ca1c:	str	x0, [sp, #192]
   3ca20:	str	wzr, [sp, #116]
   3ca24:	str	xzr, [sp, #200]
   3ca28:	ldr	x0, [sp, #192]
   3ca2c:	ldr	x1, [x0]
   3ca30:	ldr	x0, [sp, #56]
   3ca34:	lsl	x0, x0, #4
   3ca38:	add	x0, x1, x0
   3ca3c:	ldr	x0, [x0]
   3ca40:	str	x0, [sp, #184]
   3ca44:	ldr	x0, [sp, #72]
   3ca48:	ldr	w0, [x0, #224]
   3ca4c:	sxtw	x1, w0
   3ca50:	ldr	x0, [sp, #32]
   3ca54:	add	x1, x1, x0
   3ca58:	ldr	x0, [sp, #64]
   3ca5c:	ldr	x0, [x0, #8]
   3ca60:	cmp	x1, x0
   3ca64:	cset	w0, ge  // ge = tcont
   3ca68:	and	w0, w0, #0xff
   3ca6c:	and	x0, x0, #0xff
   3ca70:	cmp	x0, #0x0
   3ca74:	b.eq	3cb98 <rpl_re_set_registers@@Base+0x5db0>  // b.none
   3ca78:	ldr	x0, [sp, #64]
   3ca7c:	ldr	x0, [x0, #8]
   3ca80:	str	x0, [sp, #176]
   3ca84:	ldr	x0, [sp, #72]
   3ca88:	ldr	w0, [x0, #224]
   3ca8c:	sxtw	x1, w0
   3ca90:	ldr	x0, [sp, #32]
   3ca94:	add	x0, x1, x0
   3ca98:	add	x0, x0, #0x1
   3ca9c:	str	x0, [sp, #168]
   3caa0:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   3caa4:	ldr	x0, [sp, #176]
   3caa8:	sub	x0, x1, x0
   3caac:	ldr	x1, [sp, #168]
   3cab0:	cmp	x1, x0
   3cab4:	cset	w0, gt
   3cab8:	and	w0, w0, #0xff
   3cabc:	and	x0, x0, #0xff
   3cac0:	cmp	x0, #0x0
   3cac4:	b.eq	3cad0 <rpl_re_set_registers@@Base+0x5ce8>  // b.none
   3cac8:	mov	w0, #0xc                   	// #12
   3cacc:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cad0:	ldr	x1, [sp, #176]
   3cad4:	ldr	x0, [sp, #168]
   3cad8:	add	x0, x1, x0
   3cadc:	str	x0, [sp, #160]
   3cae0:	ldr	x1, [sp, #160]
   3cae4:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   3cae8:	cmp	x1, x0
   3caec:	cset	w0, hi  // hi = pmore
   3caf0:	and	w0, w0, #0xff
   3caf4:	and	x0, x0, #0xff
   3caf8:	cmp	x0, #0x0
   3cafc:	b.eq	3cb08 <rpl_re_set_registers@@Base+0x5d20>  // b.none
   3cb00:	mov	w0, #0xc                   	// #12
   3cb04:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cb08:	ldr	x0, [sp, #64]
   3cb0c:	ldr	x2, [x0, #16]
   3cb10:	ldr	x0, [sp, #160]
   3cb14:	lsl	x0, x0, #3
   3cb18:	mov	x1, x0
   3cb1c:	mov	x0, x2
   3cb20:	bl	ae00 <realloc@plt>
   3cb24:	str	x0, [sp, #152]
   3cb28:	ldr	x0, [sp, #152]
   3cb2c:	cmp	x0, #0x0
   3cb30:	cset	w0, eq  // eq = none
   3cb34:	and	w0, w0, #0xff
   3cb38:	and	x0, x0, #0xff
   3cb3c:	cmp	x0, #0x0
   3cb40:	b.eq	3cb4c <rpl_re_set_registers@@Base+0x5d64>  // b.none
   3cb44:	mov	w0, #0xc                   	// #12
   3cb48:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cb4c:	ldr	x0, [sp, #64]
   3cb50:	ldr	x1, [sp, #152]
   3cb54:	str	x1, [x0, #16]
   3cb58:	ldr	x0, [sp, #64]
   3cb5c:	ldr	x1, [sp, #160]
   3cb60:	str	x1, [x0, #8]
   3cb64:	ldr	x0, [sp, #176]
   3cb68:	lsl	x0, x0, #3
   3cb6c:	ldr	x1, [sp, #152]
   3cb70:	add	x3, x1, x0
   3cb74:	ldr	x0, [sp, #64]
   3cb78:	ldr	x1, [x0, #8]
   3cb7c:	ldr	x0, [sp, #176]
   3cb80:	sub	x0, x1, x0
   3cb84:	lsl	x0, x0, #3
   3cb88:	mov	x2, x0
   3cb8c:	mov	w1, #0x0                   	// #0
   3cb90:	mov	x0, x3
   3cb94:	bl	acb0 <memset@plt>
   3cb98:	ldr	x0, [sp, #64]
   3cb9c:	ldr	x0, [x0]
   3cba0:	cmp	x0, #0x0
   3cba4:	b.eq	3cbb4 <rpl_re_set_registers@@Base+0x5dcc>  // b.none
   3cba8:	ldr	x0, [sp, #64]
   3cbac:	ldr	x0, [x0]
   3cbb0:	b	3cbb8 <rpl_re_set_registers@@Base+0x5dd0>
   3cbb4:	ldr	x0, [sp, #48]
   3cbb8:	str	x0, [sp, #216]
   3cbbc:	ldr	x0, [sp, #72]
   3cbc0:	ldr	x0, [x0, #184]
   3cbc4:	str	x0, [sp, #144]
   3cbc8:	ldr	x0, [sp, #72]
   3cbcc:	ldr	x0, [x0, #72]
   3cbd0:	str	x0, [sp, #136]
   3cbd4:	ldr	x0, [sp, #64]
   3cbd8:	ldr	x1, [x0, #16]
   3cbdc:	ldr	x0, [sp, #72]
   3cbe0:	str	x1, [x0, #184]
   3cbe4:	ldr	x0, [sp, #72]
   3cbe8:	ldr	x1, [sp, #216]
   3cbec:	str	x1, [x0, #72]
   3cbf0:	ldr	x3, [sp, #72]
   3cbf4:	ldr	x0, [sp, #216]
   3cbf8:	sub	x1, x0, #0x1
   3cbfc:	ldr	x0, [sp, #72]
   3cc00:	ldr	w0, [x0, #160]
   3cc04:	mov	w2, w0
   3cc08:	mov	x0, x3
   3cc0c:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   3cc10:	str	w0, [sp, #132]
   3cc14:	ldr	x1, [sp, #216]
   3cc18:	ldr	x0, [sp, #48]
   3cc1c:	cmp	x1, x0
   3cc20:	b.ne	3cca0 <rpl_re_set_registers@@Base+0x5eb8>  // b.any
   3cc24:	add	x0, sp, #0x58
   3cc28:	ldr	x1, [sp, #56]
   3cc2c:	bl	2b520 <printf_parse@@Base+0x4228>
   3cc30:	str	w0, [sp, #116]
   3cc34:	ldr	w0, [sp, #116]
   3cc38:	cmp	w0, #0x0
   3cc3c:	cset	w0, ne  // ne = any
   3cc40:	and	w0, w0, #0xff
   3cc44:	and	x0, x0, #0xff
   3cc48:	cmp	x0, #0x0
   3cc4c:	b.eq	3cc58 <rpl_re_set_registers@@Base+0x5e70>  // b.none
   3cc50:	ldr	w0, [sp, #116]
   3cc54:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cc58:	add	x0, sp, #0x58
   3cc5c:	ldr	w3, [sp, #28]
   3cc60:	ldr	x2, [sp, #184]
   3cc64:	mov	x1, x0
   3cc68:	ldr	x0, [sp, #192]
   3cc6c:	bl	3d428 <rpl_re_set_registers@@Base+0x6640>
   3cc70:	str	w0, [sp, #116]
   3cc74:	ldr	w0, [sp, #116]
   3cc78:	cmp	w0, #0x0
   3cc7c:	cset	w0, ne  // ne = any
   3cc80:	and	w0, w0, #0xff
   3cc84:	and	x0, x0, #0xff
   3cc88:	cmp	x0, #0x0
   3cc8c:	b.eq	3cd28 <rpl_re_set_registers@@Base+0x5f40>  // b.none
   3cc90:	ldr	x0, [sp, #104]
   3cc94:	bl	b130 <free@plt>
   3cc98:	ldr	w0, [sp, #116]
   3cc9c:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cca0:	ldr	x0, [sp, #72]
   3cca4:	ldr	x1, [x0, #184]
   3cca8:	ldr	x0, [sp, #216]
   3ccac:	lsl	x0, x0, #3
   3ccb0:	add	x0, x1, x0
   3ccb4:	ldr	x0, [x0]
   3ccb8:	str	x0, [sp, #200]
   3ccbc:	ldr	x0, [sp, #200]
   3ccc0:	cmp	x0, #0x0
   3ccc4:	b.eq	3cd18 <rpl_re_set_registers@@Base+0x5f30>  // b.none
   3ccc8:	ldr	x0, [sp, #200]
   3cccc:	ldrb	w0, [x0, #104]
   3ccd0:	and	w0, w0, #0x40
   3ccd4:	and	w0, w0, #0xff
   3ccd8:	cmp	w0, #0x0
   3ccdc:	b.eq	3cd18 <rpl_re_set_registers@@Base+0x5f30>  // b.none
   3cce0:	ldr	x0, [sp, #200]
   3cce4:	add	x1, x0, #0x8
   3cce8:	add	x0, sp, #0x58
   3ccec:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   3ccf0:	str	w0, [sp, #116]
   3ccf4:	ldr	w0, [sp, #116]
   3ccf8:	cmp	w0, #0x0
   3ccfc:	cset	w0, ne  // ne = any
   3cd00:	and	w0, w0, #0xff
   3cd04:	and	x0, x0, #0xff
   3cd08:	cmp	x0, #0x0
   3cd0c:	b.eq	3cd28 <rpl_re_set_registers@@Base+0x5f40>  // b.none
   3cd10:	ldr	w0, [sp, #116]
   3cd14:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cd18:	add	x0, sp, #0x58
   3cd1c:	mov	x2, #0x18                  	// #24
   3cd20:	mov	w1, #0x0                   	// #0
   3cd24:	bl	acb0 <memset@plt>
   3cd28:	ldr	x1, [sp, #216]
   3cd2c:	ldr	x0, [sp, #48]
   3cd30:	cmp	x1, x0
   3cd34:	b.eq	3cd5c <rpl_re_set_registers@@Base+0x5f74>  // b.none
   3cd38:	ldr	x0, [sp, #200]
   3cd3c:	cmp	x0, #0x0
   3cd40:	b.eq	3ce34 <rpl_re_set_registers@@Base+0x604c>  // b.none
   3cd44:	ldr	x0, [sp, #200]
   3cd48:	ldrb	w0, [x0, #104]
   3cd4c:	and	w0, w0, #0x40
   3cd50:	and	w0, w0, #0xff
   3cd54:	cmp	w0, #0x0
   3cd58:	b.eq	3ce34 <rpl_re_set_registers@@Base+0x604c>  // b.none
   3cd5c:	ldr	x0, [sp, #96]
   3cd60:	cmp	x0, #0x0
   3cd64:	b.eq	3cdb4 <rpl_re_set_registers@@Base+0x5fcc>  // b.none
   3cd68:	add	x0, sp, #0x58
   3cd6c:	ldr	w4, [sp, #28]
   3cd70:	ldr	x3, [sp, #184]
   3cd74:	ldr	x2, [sp, #216]
   3cd78:	mov	x1, x0
   3cd7c:	ldr	x0, [sp, #72]
   3cd80:	bl	3d7c0 <rpl_re_set_registers@@Base+0x69d8>
   3cd84:	str	w0, [sp, #116]
   3cd88:	ldr	w0, [sp, #116]
   3cd8c:	cmp	w0, #0x0
   3cd90:	cset	w0, ne  // ne = any
   3cd94:	and	w0, w0, #0xff
   3cd98:	and	x0, x0, #0xff
   3cd9c:	cmp	x0, #0x0
   3cda0:	b.eq	3cdb4 <rpl_re_set_registers@@Base+0x5fcc>  // b.none
   3cda4:	ldr	x0, [sp, #104]
   3cda8:	bl	b130 <free@plt>
   3cdac:	ldr	w0, [sp, #116]
   3cdb0:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cdb4:	add	x1, sp, #0x58
   3cdb8:	add	x0, sp, #0x74
   3cdbc:	ldr	w3, [sp, #132]
   3cdc0:	mov	x2, x1
   3cdc4:	ldr	x1, [sp, #192]
   3cdc8:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   3cdcc:	str	x0, [sp, #200]
   3cdd0:	ldr	x0, [sp, #200]
   3cdd4:	cmp	x0, #0x0
   3cdd8:	cset	w0, eq  // eq = none
   3cddc:	and	w0, w0, #0xff
   3cde0:	and	x0, x0, #0xff
   3cde4:	cmp	x0, #0x0
   3cde8:	b.eq	3ce18 <rpl_re_set_registers@@Base+0x6030>  // b.none
   3cdec:	ldr	w0, [sp, #116]
   3cdf0:	cmp	w0, #0x0
   3cdf4:	cset	w0, ne  // ne = any
   3cdf8:	and	w0, w0, #0xff
   3cdfc:	and	x0, x0, #0xff
   3ce00:	cmp	x0, #0x0
   3ce04:	b.eq	3ce18 <rpl_re_set_registers@@Base+0x6030>  // b.none
   3ce08:	ldr	x0, [sp, #104]
   3ce0c:	bl	b130 <free@plt>
   3ce10:	ldr	w0, [sp, #116]
   3ce14:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3ce18:	ldr	x0, [sp, #72]
   3ce1c:	ldr	x1, [x0, #184]
   3ce20:	ldr	x0, [sp, #216]
   3ce24:	lsl	x0, x0, #3
   3ce28:	add	x0, x1, x0
   3ce2c:	ldr	x1, [sp, #200]
   3ce30:	str	x1, [x0]
   3ce34:	str	xzr, [sp, #208]
   3ce38:	b	3d088 <rpl_re_set_registers@@Base+0x62a0>
   3ce3c:	str	xzr, [sp, #96]
   3ce40:	ldr	x0, [sp, #72]
   3ce44:	ldr	x1, [x0, #184]
   3ce48:	ldr	x0, [sp, #216]
   3ce4c:	add	x0, x0, #0x1
   3ce50:	lsl	x0, x0, #3
   3ce54:	add	x0, x1, x0
   3ce58:	ldr	x0, [x0]
   3ce5c:	cmp	x0, #0x0
   3ce60:	b.eq	3cebc <rpl_re_set_registers@@Base+0x60d4>  // b.none
   3ce64:	ldr	x0, [sp, #72]
   3ce68:	ldr	x1, [x0, #184]
   3ce6c:	ldr	x0, [sp, #216]
   3ce70:	add	x0, x0, #0x1
   3ce74:	lsl	x0, x0, #3
   3ce78:	add	x0, x1, x0
   3ce7c:	ldr	x0, [x0]
   3ce80:	add	x1, x0, #0x8
   3ce84:	add	x0, sp, #0x58
   3ce88:	bl	2bfa0 <printf_parse@@Base+0x4ca8>
   3ce8c:	str	w0, [sp, #116]
   3ce90:	ldr	w0, [sp, #116]
   3ce94:	cmp	w0, #0x0
   3ce98:	cset	w0, ne  // ne = any
   3ce9c:	and	w0, w0, #0xff
   3cea0:	and	x0, x0, #0xff
   3cea4:	cmp	x0, #0x0
   3cea8:	b.eq	3cebc <rpl_re_set_registers@@Base+0x60d4>  // b.none
   3ceac:	ldr	x0, [sp, #104]
   3ceb0:	bl	b130 <free@plt>
   3ceb4:	ldr	w0, [sp, #116]
   3ceb8:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cebc:	ldr	x0, [sp, #200]
   3cec0:	cmp	x0, #0x0
   3cec4:	b.eq	3cf18 <rpl_re_set_registers@@Base+0x6130>  // b.none
   3cec8:	ldr	x0, [sp, #200]
   3cecc:	add	x0, x0, #0x20
   3ced0:	add	x1, sp, #0x58
   3ced4:	mov	x3, x1
   3ced8:	mov	x2, x0
   3cedc:	ldr	x1, [sp, #216]
   3cee0:	ldr	x0, [sp, #72]
   3cee4:	bl	3d158 <rpl_re_set_registers@@Base+0x6370>
   3cee8:	str	w0, [sp, #116]
   3ceec:	ldr	w0, [sp, #116]
   3cef0:	cmp	w0, #0x0
   3cef4:	cset	w0, ne  // ne = any
   3cef8:	and	w0, w0, #0xff
   3cefc:	and	x0, x0, #0xff
   3cf00:	cmp	x0, #0x0
   3cf04:	b.eq	3cf18 <rpl_re_set_registers@@Base+0x6130>  // b.none
   3cf08:	ldr	x0, [sp, #104]
   3cf0c:	bl	b130 <free@plt>
   3cf10:	ldr	w0, [sp, #116]
   3cf14:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cf18:	ldr	x0, [sp, #216]
   3cf1c:	add	x0, x0, #0x1
   3cf20:	str	x0, [sp, #216]
   3cf24:	ldr	x0, [sp, #96]
   3cf28:	cmp	x0, #0x0
   3cf2c:	b.eq	3cfc4 <rpl_re_set_registers@@Base+0x61dc>  // b.none
   3cf30:	add	x0, sp, #0x58
   3cf34:	ldr	w3, [sp, #28]
   3cf38:	ldr	x2, [sp, #184]
   3cf3c:	mov	x1, x0
   3cf40:	ldr	x0, [sp, #192]
   3cf44:	bl	3d428 <rpl_re_set_registers@@Base+0x6640>
   3cf48:	str	w0, [sp, #116]
   3cf4c:	ldr	w0, [sp, #116]
   3cf50:	cmp	w0, #0x0
   3cf54:	cset	w0, ne  // ne = any
   3cf58:	and	w0, w0, #0xff
   3cf5c:	and	x0, x0, #0xff
   3cf60:	cmp	x0, #0x0
   3cf64:	b.eq	3cf78 <rpl_re_set_registers@@Base+0x6190>  // b.none
   3cf68:	ldr	x0, [sp, #104]
   3cf6c:	bl	b130 <free@plt>
   3cf70:	ldr	w0, [sp, #116]
   3cf74:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cf78:	add	x0, sp, #0x58
   3cf7c:	ldr	w4, [sp, #28]
   3cf80:	ldr	x3, [sp, #184]
   3cf84:	ldr	x2, [sp, #216]
   3cf88:	mov	x1, x0
   3cf8c:	ldr	x0, [sp, #72]
   3cf90:	bl	3d7c0 <rpl_re_set_registers@@Base+0x69d8>
   3cf94:	str	w0, [sp, #116]
   3cf98:	ldr	w0, [sp, #116]
   3cf9c:	cmp	w0, #0x0
   3cfa0:	cset	w0, ne  // ne = any
   3cfa4:	and	w0, w0, #0xff
   3cfa8:	and	x0, x0, #0xff
   3cfac:	cmp	x0, #0x0
   3cfb0:	b.eq	3cfc4 <rpl_re_set_registers@@Base+0x61dc>  // b.none
   3cfb4:	ldr	x0, [sp, #104]
   3cfb8:	bl	b130 <free@plt>
   3cfbc:	ldr	w0, [sp, #116]
   3cfc0:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3cfc4:	ldr	x3, [sp, #72]
   3cfc8:	ldr	x0, [sp, #216]
   3cfcc:	sub	x1, x0, #0x1
   3cfd0:	ldr	x0, [sp, #72]
   3cfd4:	ldr	w0, [x0, #160]
   3cfd8:	mov	w2, w0
   3cfdc:	mov	x0, x3
   3cfe0:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   3cfe4:	str	w0, [sp, #132]
   3cfe8:	add	x1, sp, #0x58
   3cfec:	add	x0, sp, #0x74
   3cff0:	ldr	w3, [sp, #132]
   3cff4:	mov	x2, x1
   3cff8:	ldr	x1, [sp, #192]
   3cffc:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   3d000:	str	x0, [sp, #200]
   3d004:	ldr	x0, [sp, #200]
   3d008:	cmp	x0, #0x0
   3d00c:	cset	w0, eq  // eq = none
   3d010:	and	w0, w0, #0xff
   3d014:	and	x0, x0, #0xff
   3d018:	cmp	x0, #0x0
   3d01c:	b.eq	3d04c <rpl_re_set_registers@@Base+0x6264>  // b.none
   3d020:	ldr	w0, [sp, #116]
   3d024:	cmp	w0, #0x0
   3d028:	cset	w0, ne  // ne = any
   3d02c:	and	w0, w0, #0xff
   3d030:	and	x0, x0, #0xff
   3d034:	cmp	x0, #0x0
   3d038:	b.eq	3d04c <rpl_re_set_registers@@Base+0x6264>  // b.none
   3d03c:	ldr	x0, [sp, #104]
   3d040:	bl	b130 <free@plt>
   3d044:	ldr	w0, [sp, #116]
   3d048:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3d04c:	ldr	x0, [sp, #72]
   3d050:	ldr	x1, [x0, #184]
   3d054:	ldr	x0, [sp, #216]
   3d058:	lsl	x0, x0, #3
   3d05c:	add	x0, x1, x0
   3d060:	ldr	x1, [sp, #200]
   3d064:	str	x1, [x0]
   3d068:	ldr	x0, [sp, #200]
   3d06c:	cmp	x0, #0x0
   3d070:	b.ne	3d080 <rpl_re_set_registers@@Base+0x6298>  // b.any
   3d074:	ldr	x0, [sp, #208]
   3d078:	add	x0, x0, #0x1
   3d07c:	b	3d084 <rpl_re_set_registers@@Base+0x629c>
   3d080:	mov	x0, #0x0                   	// #0
   3d084:	str	x0, [sp, #208]
   3d088:	ldr	x1, [sp, #216]
   3d08c:	ldr	x0, [sp, #32]
   3d090:	cmp	x1, x0
   3d094:	b.ge	3d0b0 <rpl_re_set_registers@@Base+0x62c8>  // b.tcont
   3d098:	ldr	x0, [sp, #72]
   3d09c:	ldr	w0, [x0, #224]
   3d0a0:	sxtw	x0, w0
   3d0a4:	ldr	x1, [sp, #208]
   3d0a8:	cmp	x1, x0
   3d0ac:	b.le	3ce3c <rpl_re_set_registers@@Base+0x6054>
   3d0b0:	ldr	x0, [sp, #104]
   3d0b4:	bl	b130 <free@plt>
   3d0b8:	ldr	x0, [sp, #72]
   3d0bc:	ldr	x1, [x0, #184]
   3d0c0:	ldr	x0, [sp, #32]
   3d0c4:	lsl	x0, x0, #3
   3d0c8:	add	x0, x1, x0
   3d0cc:	ldr	x0, [x0]
   3d0d0:	cmp	x0, #0x0
   3d0d4:	b.eq	3d0f8 <rpl_re_set_registers@@Base+0x6310>  // b.none
   3d0d8:	ldr	x0, [sp, #72]
   3d0dc:	ldr	x1, [x0, #184]
   3d0e0:	ldr	x0, [sp, #32]
   3d0e4:	lsl	x0, x0, #3
   3d0e8:	add	x0, x1, x0
   3d0ec:	ldr	x0, [x0]
   3d0f0:	add	x0, x0, #0x8
   3d0f4:	b	3d0fc <rpl_re_set_registers@@Base+0x6314>
   3d0f8:	mov	x0, #0x0                   	// #0
   3d0fc:	str	x0, [sp, #120]
   3d100:	ldr	x0, [sp, #64]
   3d104:	ldr	x1, [sp, #216]
   3d108:	str	x1, [x0]
   3d10c:	ldr	x0, [sp, #72]
   3d110:	ldr	x1, [sp, #144]
   3d114:	str	x1, [x0, #184]
   3d118:	ldr	x0, [sp, #72]
   3d11c:	ldr	x1, [sp, #136]
   3d120:	str	x1, [x0, #72]
   3d124:	ldr	x0, [sp, #120]
   3d128:	cmp	x0, #0x0
   3d12c:	b.eq	3d14c <rpl_re_set_registers@@Base+0x6364>  // b.none
   3d130:	ldr	x1, [sp, #40]
   3d134:	ldr	x0, [sp, #120]
   3d138:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3d13c:	cmp	x0, #0x0
   3d140:	b.eq	3d14c <rpl_re_set_registers@@Base+0x6364>  // b.none
   3d144:	mov	w0, #0x0                   	// #0
   3d148:	b	3d150 <rpl_re_set_registers@@Base+0x6368>
   3d14c:	mov	w0, #0x1                   	// #1
   3d150:	ldp	x29, x30, [sp], #224
   3d154:	ret
   3d158:	stp	x29, x30, [sp, #-160]!
   3d15c:	mov	x29, sp
   3d160:	str	x19, [sp, #16]
   3d164:	str	x0, [sp, #56]
   3d168:	str	x1, [sp, #48]
   3d16c:	str	x2, [sp, #40]
   3d170:	str	x3, [sp, #32]
   3d174:	ldr	x0, [sp, #56]
   3d178:	ldr	x0, [x0, #152]
   3d17c:	str	x0, [sp, #136]
   3d180:	str	wzr, [sp, #96]
   3d184:	add	x0, sp, #0x48
   3d188:	mov	x2, #0x18                  	// #24
   3d18c:	mov	w1, #0x0                   	// #0
   3d190:	bl	acb0 <memset@plt>
   3d194:	str	xzr, [sp, #152]
   3d198:	b	3d3fc <rpl_re_set_registers@@Base+0x6614>
   3d19c:	str	wzr, [sp, #148]
   3d1a0:	ldr	x0, [sp, #40]
   3d1a4:	ldr	x1, [x0, #16]
   3d1a8:	ldr	x0, [sp, #152]
   3d1ac:	lsl	x0, x0, #3
   3d1b0:	add	x0, x1, x0
   3d1b4:	ldr	x0, [x0]
   3d1b8:	str	x0, [sp, #128]
   3d1bc:	ldr	x0, [sp, #136]
   3d1c0:	ldr	x1, [x0]
   3d1c4:	ldr	x0, [sp, #128]
   3d1c8:	lsl	x0, x0, #4
   3d1cc:	add	x0, x1, x0
   3d1d0:	ldrb	w0, [x0, #10]
   3d1d4:	and	w0, w0, #0x10
   3d1d8:	and	w0, w0, #0xff
   3d1dc:	cmp	w0, #0x0
   3d1e0:	b.eq	3d364 <rpl_re_set_registers@@Base+0x657c>  // b.none
   3d1e4:	ldr	x0, [sp, #56]
   3d1e8:	ldr	x3, [sp, #48]
   3d1ec:	mov	x2, x0
   3d1f0:	ldr	x1, [sp, #128]
   3d1f4:	ldr	x0, [sp, #136]
   3d1f8:	bl	3ef54 <rpl_re_set_registers@@Base+0x816c>
   3d1fc:	str	w0, [sp, #148]
   3d200:	ldr	w0, [sp, #148]
   3d204:	cmp	w0, #0x1
   3d208:	b.le	3d364 <rpl_re_set_registers@@Base+0x657c>
   3d20c:	ldr	x0, [sp, #136]
   3d210:	ldr	x1, [x0, #24]
   3d214:	ldr	x0, [sp, #128]
   3d218:	lsl	x0, x0, #3
   3d21c:	add	x0, x1, x0
   3d220:	ldr	x0, [x0]
   3d224:	str	x0, [sp, #120]
   3d228:	ldrsw	x0, [sp, #148]
   3d22c:	ldr	x1, [sp, #48]
   3d230:	add	x0, x1, x0
   3d234:	str	x0, [sp, #112]
   3d238:	ldr	x0, [sp, #56]
   3d23c:	ldr	x1, [x0, #184]
   3d240:	ldr	x0, [sp, #112]
   3d244:	lsl	x0, x0, #3
   3d248:	add	x0, x1, x0
   3d24c:	ldr	x0, [x0]
   3d250:	str	x0, [sp, #104]
   3d254:	str	xzr, [sp, #80]
   3d258:	ldr	x0, [sp, #104]
   3d25c:	cmp	x0, #0x0
   3d260:	b.eq	3d2a4 <rpl_re_set_registers@@Base+0x64bc>  // b.none
   3d264:	ldr	x0, [sp, #104]
   3d268:	add	x1, x0, #0x8
   3d26c:	add	x0, sp, #0x48
   3d270:	bl	2bfa0 <printf_parse@@Base+0x4ca8>
   3d274:	str	w0, [sp, #96]
   3d278:	ldr	w0, [sp, #96]
   3d27c:	cmp	w0, #0x0
   3d280:	cset	w0, ne  // ne = any
   3d284:	and	w0, w0, #0xff
   3d288:	and	x0, x0, #0xff
   3d28c:	cmp	x0, #0x0
   3d290:	b.eq	3d2a4 <rpl_re_set_registers@@Base+0x64bc>  // b.none
   3d294:	ldr	x0, [sp, #88]
   3d298:	bl	b130 <free@plt>
   3d29c:	ldr	w0, [sp, #96]
   3d2a0:	b	3d41c <rpl_re_set_registers@@Base+0x6634>
   3d2a4:	add	x0, sp, #0x48
   3d2a8:	ldr	x1, [sp, #120]
   3d2ac:	bl	2c3ec <printf_parse@@Base+0x50f4>
   3d2b0:	strb	w0, [sp, #103]
   3d2b4:	ldrb	w0, [sp, #103]
   3d2b8:	eor	w0, w0, #0x1
   3d2bc:	and	w0, w0, #0xff
   3d2c0:	and	x0, x0, #0xff
   3d2c4:	cmp	x0, #0x0
   3d2c8:	b.eq	3d2dc <rpl_re_set_registers@@Base+0x64f4>  // b.none
   3d2cc:	ldr	x0, [sp, #88]
   3d2d0:	bl	b130 <free@plt>
   3d2d4:	mov	w0, #0xc                   	// #12
   3d2d8:	b	3d41c <rpl_re_set_registers@@Base+0x6634>
   3d2dc:	ldr	x0, [sp, #56]
   3d2e0:	ldr	x1, [x0, #184]
   3d2e4:	ldr	x0, [sp, #112]
   3d2e8:	lsl	x0, x0, #3
   3d2ec:	add	x19, x1, x0
   3d2f0:	add	x1, sp, #0x48
   3d2f4:	add	x0, sp, #0x60
   3d2f8:	mov	x2, x1
   3d2fc:	ldr	x1, [sp, #136]
   3d300:	bl	2cd64 <printf_parse@@Base+0x5a6c>
   3d304:	str	x0, [x19]
   3d308:	ldr	x0, [sp, #56]
   3d30c:	ldr	x1, [x0, #184]
   3d310:	ldr	x0, [sp, #112]
   3d314:	lsl	x0, x0, #3
   3d318:	add	x0, x1, x0
   3d31c:	ldr	x0, [x0]
   3d320:	cmp	x0, #0x0
   3d324:	cset	w0, eq  // eq = none
   3d328:	and	w0, w0, #0xff
   3d32c:	and	x0, x0, #0xff
   3d330:	cmp	x0, #0x0
   3d334:	b.eq	3d364 <rpl_re_set_registers@@Base+0x657c>  // b.none
   3d338:	ldr	w0, [sp, #96]
   3d33c:	cmp	w0, #0x0
   3d340:	cset	w0, ne  // ne = any
   3d344:	and	w0, w0, #0xff
   3d348:	and	x0, x0, #0xff
   3d34c:	cmp	x0, #0x0
   3d350:	b.eq	3d364 <rpl_re_set_registers@@Base+0x657c>  // b.none
   3d354:	ldr	x0, [sp, #88]
   3d358:	bl	b130 <free@plt>
   3d35c:	ldr	w0, [sp, #96]
   3d360:	b	3d41c <rpl_re_set_registers@@Base+0x6634>
   3d364:	ldr	w0, [sp, #148]
   3d368:	cmp	w0, #0x0
   3d36c:	b.ne	3d3a0 <rpl_re_set_registers@@Base+0x65b8>  // b.any
   3d370:	ldr	x0, [sp, #136]
   3d374:	ldr	x1, [x0]
   3d378:	ldr	x0, [sp, #128]
   3d37c:	lsl	x0, x0, #4
   3d380:	add	x0, x1, x0
   3d384:	ldr	x2, [sp, #48]
   3d388:	mov	x1, x0
   3d38c:	ldr	x0, [sp, #56]
   3d390:	bl	3f498 <rpl_re_set_registers@@Base+0x86b0>
   3d394:	and	w0, w0, #0xff
   3d398:	cmp	w0, #0x0
   3d39c:	b.eq	3d3f0 <rpl_re_set_registers@@Base+0x6608>  // b.none
   3d3a0:	ldr	x0, [sp, #136]
   3d3a4:	ldr	x1, [x0, #24]
   3d3a8:	ldr	x0, [sp, #128]
   3d3ac:	lsl	x0, x0, #3
   3d3b0:	add	x0, x1, x0
   3d3b4:	ldr	x0, [x0]
   3d3b8:	mov	x1, x0
   3d3bc:	ldr	x0, [sp, #32]
   3d3c0:	bl	2c3ec <printf_parse@@Base+0x50f4>
   3d3c4:	strb	w0, [sp, #103]
   3d3c8:	ldrb	w0, [sp, #103]
   3d3cc:	eor	w0, w0, #0x1
   3d3d0:	and	w0, w0, #0xff
   3d3d4:	and	x0, x0, #0xff
   3d3d8:	cmp	x0, #0x0
   3d3dc:	b.eq	3d3f0 <rpl_re_set_registers@@Base+0x6608>  // b.none
   3d3e0:	ldr	x0, [sp, #88]
   3d3e4:	bl	b130 <free@plt>
   3d3e8:	mov	w0, #0xc                   	// #12
   3d3ec:	b	3d41c <rpl_re_set_registers@@Base+0x6634>
   3d3f0:	ldr	x0, [sp, #152]
   3d3f4:	add	x0, x0, #0x1
   3d3f8:	str	x0, [sp, #152]
   3d3fc:	ldr	x0, [sp, #40]
   3d400:	ldr	x0, [x0, #8]
   3d404:	ldr	x1, [sp, #152]
   3d408:	cmp	x1, x0
   3d40c:	b.lt	3d19c <rpl_re_set_registers@@Base+0x63b4>  // b.tstop
   3d410:	ldr	x0, [sp, #88]
   3d414:	bl	b130 <free@plt>
   3d418:	mov	w0, #0x0                   	// #0
   3d41c:	ldr	x19, [sp, #16]
   3d420:	ldp	x29, x30, [sp], #160
   3d424:	ret
   3d428:	stp	x29, x30, [sp, #-112]!
   3d42c:	mov	x29, sp
   3d430:	str	x0, [sp, #40]
   3d434:	str	x1, [sp, #32]
   3d438:	str	x2, [sp, #24]
   3d43c:	str	w3, [sp, #20]
   3d440:	ldr	x0, [sp, #32]
   3d444:	ldr	x1, [x0, #8]
   3d448:	add	x0, sp, #0x30
   3d44c:	bl	2b4b0 <printf_parse@@Base+0x41b8>
   3d450:	str	w0, [sp, #100]
   3d454:	ldr	w0, [sp, #100]
   3d458:	cmp	w0, #0x0
   3d45c:	cset	w0, ne  // ne = any
   3d460:	and	w0, w0, #0xff
   3d464:	and	x0, x0, #0xff
   3d468:	cmp	x0, #0x0
   3d46c:	b.eq	3d478 <rpl_re_set_registers@@Base+0x6690>  // b.none
   3d470:	ldr	w0, [sp, #100]
   3d474:	b	3d5b8 <rpl_re_set_registers@@Base+0x67d0>
   3d478:	str	xzr, [sp, #104]
   3d47c:	b	3d578 <rpl_re_set_registers@@Base+0x6790>
   3d480:	ldr	x0, [sp, #32]
   3d484:	ldr	x1, [x0, #16]
   3d488:	ldr	x0, [sp, #104]
   3d48c:	lsl	x0, x0, #3
   3d490:	add	x0, x1, x0
   3d494:	ldr	x0, [x0]
   3d498:	str	x0, [sp, #88]
   3d49c:	ldr	x0, [sp, #40]
   3d4a0:	ldr	x2, [x0, #48]
   3d4a4:	ldr	x1, [sp, #88]
   3d4a8:	mov	x0, x1
   3d4ac:	lsl	x0, x0, #1
   3d4b0:	add	x0, x0, x1
   3d4b4:	lsl	x0, x0, #3
   3d4b8:	add	x0, x2, x0
   3d4bc:	str	x0, [sp, #80]
   3d4c0:	ldr	w3, [sp, #20]
   3d4c4:	ldr	x2, [sp, #24]
   3d4c8:	ldr	x1, [sp, #80]
   3d4cc:	ldr	x0, [sp, #40]
   3d4d0:	bl	3c940 <rpl_re_set_registers@@Base+0x5b58>
   3d4d4:	str	x0, [sp, #72]
   3d4d8:	ldr	x0, [sp, #72]
   3d4dc:	cmn	x0, #0x1
   3d4e0:	b.ne	3d520 <rpl_re_set_registers@@Base+0x6738>  // b.any
   3d4e4:	add	x0, sp, #0x30
   3d4e8:	ldr	x1, [sp, #80]
   3d4ec:	bl	2bfa0 <printf_parse@@Base+0x4ca8>
   3d4f0:	str	w0, [sp, #100]
   3d4f4:	ldr	w0, [sp, #100]
   3d4f8:	cmp	w0, #0x0
   3d4fc:	cset	w0, ne  // ne = any
   3d500:	and	w0, w0, #0xff
   3d504:	and	x0, x0, #0xff
   3d508:	cmp	x0, #0x0
   3d50c:	b.eq	3d56c <rpl_re_set_registers@@Base+0x6784>  // b.none
   3d510:	ldr	x0, [sp, #64]
   3d514:	bl	b130 <free@plt>
   3d518:	ldr	w0, [sp, #100]
   3d51c:	b	3d5b8 <rpl_re_set_registers@@Base+0x67d0>
   3d520:	add	x0, sp, #0x30
   3d524:	ldr	w4, [sp, #20]
   3d528:	ldr	x3, [sp, #24]
   3d52c:	ldr	x2, [sp, #88]
   3d530:	mov	x1, x0
   3d534:	ldr	x0, [sp, #40]
   3d538:	bl	3d5c0 <rpl_re_set_registers@@Base+0x67d8>
   3d53c:	str	w0, [sp, #100]
   3d540:	ldr	w0, [sp, #100]
   3d544:	cmp	w0, #0x0
   3d548:	cset	w0, ne  // ne = any
   3d54c:	and	w0, w0, #0xff
   3d550:	and	x0, x0, #0xff
   3d554:	cmp	x0, #0x0
   3d558:	b.eq	3d56c <rpl_re_set_registers@@Base+0x6784>  // b.none
   3d55c:	ldr	x0, [sp, #64]
   3d560:	bl	b130 <free@plt>
   3d564:	ldr	w0, [sp, #100]
   3d568:	b	3d5b8 <rpl_re_set_registers@@Base+0x67d0>
   3d56c:	ldr	x0, [sp, #104]
   3d570:	add	x0, x0, #0x1
   3d574:	str	x0, [sp, #104]
   3d578:	ldr	x0, [sp, #32]
   3d57c:	ldr	x0, [x0, #8]
   3d580:	ldr	x1, [sp, #104]
   3d584:	cmp	x1, x0
   3d588:	b.lt	3d480 <rpl_re_set_registers@@Base+0x6698>  // b.tstop
   3d58c:	ldr	x0, [sp, #32]
   3d590:	ldr	x0, [x0, #16]
   3d594:	bl	b130 <free@plt>
   3d598:	ldr	x0, [sp, #32]
   3d59c:	mov	x3, x0
   3d5a0:	add	x2, sp, #0x30
   3d5a4:	ldp	x0, x1, [x2]
   3d5a8:	stp	x0, x1, [x3]
   3d5ac:	ldr	x0, [x2, #16]
   3d5b0:	str	x0, [x3, #16]
   3d5b4:	mov	w0, #0x0                   	// #0
   3d5b8:	ldp	x29, x30, [sp], #112
   3d5bc:	ret
   3d5c0:	stp	x29, x30, [sp, #-80]!
   3d5c4:	mov	x29, sp
   3d5c8:	str	x0, [sp, #56]
   3d5cc:	str	x1, [sp, #48]
   3d5d0:	str	x2, [sp, #40]
   3d5d4:	str	x3, [sp, #32]
   3d5d8:	str	w4, [sp, #28]
   3d5dc:	ldr	x0, [sp, #40]
   3d5e0:	str	x0, [sp, #72]
   3d5e4:	b	3d790 <rpl_re_set_registers@@Base+0x69a8>
   3d5e8:	ldr	x0, [sp, #56]
   3d5ec:	ldr	x1, [x0]
   3d5f0:	ldr	x0, [sp, #72]
   3d5f4:	lsl	x0, x0, #4
   3d5f8:	add	x0, x1, x0
   3d5fc:	ldrb	w0, [x0, #8]
   3d600:	mov	w1, w0
   3d604:	ldr	w0, [sp, #28]
   3d608:	cmp	w0, w1
   3d60c:	b.ne	3d670 <rpl_re_set_registers@@Base+0x6888>  // b.any
   3d610:	ldr	x0, [sp, #56]
   3d614:	ldr	x1, [x0]
   3d618:	ldr	x0, [sp, #72]
   3d61c:	lsl	x0, x0, #4
   3d620:	add	x0, x1, x0
   3d624:	ldr	x0, [x0]
   3d628:	ldr	x1, [sp, #32]
   3d62c:	cmp	x1, x0
   3d630:	b.ne	3d670 <rpl_re_set_registers@@Base+0x6888>  // b.any
   3d634:	ldr	w0, [sp, #28]
   3d638:	cmp	w0, #0x9
   3d63c:	b.ne	3d7a8 <rpl_re_set_registers@@Base+0x69c0>  // b.any
   3d640:	ldr	x1, [sp, #72]
   3d644:	ldr	x0, [sp, #48]
   3d648:	bl	2c3ec <printf_parse@@Base+0x50f4>
   3d64c:	strb	w0, [sp, #71]
   3d650:	ldrb	w0, [sp, #71]
   3d654:	eor	w0, w0, #0x1
   3d658:	and	w0, w0, #0xff
   3d65c:	and	x0, x0, #0xff
   3d660:	cmp	x0, #0x0
   3d664:	b.eq	3d7a8 <rpl_re_set_registers@@Base+0x69c0>  // b.none
   3d668:	mov	w0, #0xc                   	// #12
   3d66c:	b	3d7b8 <rpl_re_set_registers@@Base+0x69d0>
   3d670:	ldr	x1, [sp, #72]
   3d674:	ldr	x0, [sp, #48]
   3d678:	bl	2c3ec <printf_parse@@Base+0x50f4>
   3d67c:	strb	w0, [sp, #71]
   3d680:	ldrb	w0, [sp, #71]
   3d684:	eor	w0, w0, #0x1
   3d688:	and	w0, w0, #0xff
   3d68c:	and	x0, x0, #0xff
   3d690:	cmp	x0, #0x0
   3d694:	b.eq	3d6a0 <rpl_re_set_registers@@Base+0x68b8>  // b.none
   3d698:	mov	w0, #0xc                   	// #12
   3d69c:	b	3d7b8 <rpl_re_set_registers@@Base+0x69d0>
   3d6a0:	ldr	x0, [sp, #56]
   3d6a4:	ldr	x2, [x0, #40]
   3d6a8:	ldr	x1, [sp, #72]
   3d6ac:	mov	x0, x1
   3d6b0:	lsl	x0, x0, #1
   3d6b4:	add	x0, x0, x1
   3d6b8:	lsl	x0, x0, #3
   3d6bc:	add	x0, x2, x0
   3d6c0:	ldr	x0, [x0, #8]
   3d6c4:	cmp	x0, #0x0
   3d6c8:	b.eq	3d7b0 <rpl_re_set_registers@@Base+0x69c8>  // b.none
   3d6cc:	ldr	x0, [sp, #56]
   3d6d0:	ldr	x2, [x0, #40]
   3d6d4:	ldr	x1, [sp, #72]
   3d6d8:	mov	x0, x1
   3d6dc:	lsl	x0, x0, #1
   3d6e0:	add	x0, x0, x1
   3d6e4:	lsl	x0, x0, #3
   3d6e8:	add	x0, x2, x0
   3d6ec:	ldr	x0, [x0, #8]
   3d6f0:	cmp	x0, #0x2
   3d6f4:	b.ne	3d764 <rpl_re_set_registers@@Base+0x697c>  // b.any
   3d6f8:	ldr	x0, [sp, #56]
   3d6fc:	ldr	x2, [x0, #40]
   3d700:	ldr	x1, [sp, #72]
   3d704:	mov	x0, x1
   3d708:	lsl	x0, x0, #1
   3d70c:	add	x0, x0, x1
   3d710:	lsl	x0, x0, #3
   3d714:	add	x0, x2, x0
   3d718:	ldr	x0, [x0, #16]
   3d71c:	add	x0, x0, #0x8
   3d720:	ldr	x0, [x0]
   3d724:	ldr	w4, [sp, #28]
   3d728:	ldr	x3, [sp, #32]
   3d72c:	mov	x2, x0
   3d730:	ldr	x1, [sp, #48]
   3d734:	ldr	x0, [sp, #56]
   3d738:	bl	3d5c0 <rpl_re_set_registers@@Base+0x67d8>
   3d73c:	str	w0, [sp, #64]
   3d740:	ldr	w0, [sp, #64]
   3d744:	cmp	w0, #0x0
   3d748:	cset	w0, ne  // ne = any
   3d74c:	and	w0, w0, #0xff
   3d750:	and	x0, x0, #0xff
   3d754:	cmp	x0, #0x0
   3d758:	b.eq	3d764 <rpl_re_set_registers@@Base+0x697c>  // b.none
   3d75c:	ldr	w0, [sp, #64]
   3d760:	b	3d7b8 <rpl_re_set_registers@@Base+0x69d0>
   3d764:	ldr	x0, [sp, #56]
   3d768:	ldr	x2, [x0, #40]
   3d76c:	ldr	x1, [sp, #72]
   3d770:	mov	x0, x1
   3d774:	lsl	x0, x0, #1
   3d778:	add	x0, x0, x1
   3d77c:	lsl	x0, x0, #3
   3d780:	add	x0, x2, x0
   3d784:	ldr	x0, [x0, #16]
   3d788:	ldr	x0, [x0]
   3d78c:	str	x0, [sp, #72]
   3d790:	ldr	x1, [sp, #72]
   3d794:	ldr	x0, [sp, #48]
   3d798:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3d79c:	cmp	x0, #0x0
   3d7a0:	b.eq	3d5e8 <rpl_re_set_registers@@Base+0x6800>  // b.none
   3d7a4:	b	3d7b4 <rpl_re_set_registers@@Base+0x69cc>
   3d7a8:	nop
   3d7ac:	b	3d7b4 <rpl_re_set_registers@@Base+0x69cc>
   3d7b0:	nop
   3d7b4:	mov	w0, #0x0                   	// #0
   3d7b8:	ldp	x29, x30, [sp], #80
   3d7bc:	ret
   3d7c0:	stp	x29, x30, [sp, #-192]!
   3d7c4:	mov	x29, sp
   3d7c8:	str	x19, [sp, #16]
   3d7cc:	str	x0, [sp, #72]
   3d7d0:	str	x1, [sp, #64]
   3d7d4:	str	x2, [sp, #56]
   3d7d8:	str	x3, [sp, #48]
   3d7dc:	str	w4, [sp, #44]
   3d7e0:	ldr	x0, [sp, #72]
   3d7e4:	ldr	x0, [x0, #152]
   3d7e8:	str	x0, [sp, #176]
   3d7ec:	ldr	x1, [sp, #56]
   3d7f0:	ldr	x0, [sp, #72]
   3d7f4:	bl	3fdfc <rpl_re_set_registers@@Base+0x9014>
   3d7f8:	str	x0, [sp, #168]
   3d7fc:	ldr	x0, [sp, #168]
   3d800:	cmn	x0, #0x1
   3d804:	b.ne	3d810 <rpl_re_set_registers@@Base+0x6a28>  // b.any
   3d808:	mov	w0, #0x0                   	// #0
   3d80c:	b	3dba4 <rpl_re_set_registers@@Base+0x6dbc>
   3d810:	nop
   3d814:	ldr	x0, [sp, #72]
   3d818:	ldr	x2, [x0, #216]
   3d81c:	ldr	x1, [sp, #168]
   3d820:	mov	x0, x1
   3d824:	lsl	x0, x0, #2
   3d828:	add	x0, x0, x1
   3d82c:	lsl	x0, x0, #3
   3d830:	add	x0, x2, x0
   3d834:	str	x0, [sp, #184]
   3d838:	ldr	x0, [sp, #184]
   3d83c:	ldr	x0, [x0]
   3d840:	mov	x1, x0
   3d844:	ldr	x0, [sp, #64]
   3d848:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3d84c:	cmp	x0, #0x0
   3d850:	b.eq	3db74 <rpl_re_set_registers@@Base+0x6d8c>  // b.none
   3d854:	ldr	x0, [sp, #184]
   3d858:	ldr	x1, [x0, #24]
   3d85c:	ldr	x0, [sp, #56]
   3d860:	add	x1, x1, x0
   3d864:	ldr	x0, [sp, #184]
   3d868:	ldr	x0, [x0, #16]
   3d86c:	sub	x0, x1, x0
   3d870:	str	x0, [sp, #160]
   3d874:	ldr	x1, [sp, #160]
   3d878:	ldr	x0, [sp, #56]
   3d87c:	cmp	x1, x0
   3d880:	b.ne	3d9b4 <rpl_re_set_registers@@Base+0x6bcc>  // b.any
   3d884:	ldr	x0, [sp, #176]
   3d888:	ldr	x1, [x0, #40]
   3d88c:	ldr	x0, [sp, #184]
   3d890:	ldr	x0, [x0]
   3d894:	mov	x2, x0
   3d898:	mov	x0, x2
   3d89c:	lsl	x0, x0, #1
   3d8a0:	add	x0, x0, x2
   3d8a4:	lsl	x0, x0, #3
   3d8a8:	add	x0, x1, x0
   3d8ac:	ldr	x0, [x0, #16]
   3d8b0:	ldr	x0, [x0]
   3d8b4:	str	x0, [sp, #152]
   3d8b8:	ldr	x1, [sp, #152]
   3d8bc:	ldr	x0, [sp, #64]
   3d8c0:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3d8c4:	cmp	x0, #0x0
   3d8c8:	b.ne	3db7c <rpl_re_set_registers@@Base+0x6d94>  // b.any
   3d8cc:	add	x0, sp, #0x70
   3d8d0:	ldr	x1, [sp, #152]
   3d8d4:	bl	2b520 <printf_parse@@Base+0x4228>
   3d8d8:	str	w0, [sp, #136]
   3d8dc:	add	x0, sp, #0x70
   3d8e0:	ldr	w3, [sp, #44]
   3d8e4:	ldr	x2, [sp, #48]
   3d8e8:	mov	x1, x0
   3d8ec:	ldr	x0, [sp, #176]
   3d8f0:	bl	3d428 <rpl_re_set_registers@@Base+0x6640>
   3d8f4:	str	w0, [sp, #144]
   3d8f8:	add	x0, sp, #0x70
   3d8fc:	mov	x1, x0
   3d900:	ldr	x0, [sp, #64]
   3d904:	bl	2bfa0 <printf_parse@@Base+0x4ca8>
   3d908:	str	w0, [sp, #140]
   3d90c:	ldr	x0, [sp, #128]
   3d910:	bl	b130 <free@plt>
   3d914:	ldr	w0, [sp, #136]
   3d918:	cmp	w0, #0x0
   3d91c:	cset	w0, ne  // ne = any
   3d920:	and	w0, w0, #0xff
   3d924:	and	x0, x0, #0xff
   3d928:	cmp	x0, #0x0
   3d92c:	b.ne	3d94c <rpl_re_set_registers@@Base+0x6b64>  // b.any
   3d930:	ldr	w0, [sp, #144]
   3d934:	cmp	w0, #0x0
   3d938:	cset	w0, ne  // ne = any
   3d93c:	and	w0, w0, #0xff
   3d940:	and	x0, x0, #0xff
   3d944:	cmp	x0, #0x0
   3d948:	b.eq	3d954 <rpl_re_set_registers@@Base+0x6b6c>  // b.none
   3d94c:	mov	w0, #0x1                   	// #1
   3d950:	b	3d958 <rpl_re_set_registers@@Base+0x6b70>
   3d954:	mov	w0, #0x0                   	// #0
   3d958:	cmp	w0, #0x0
   3d95c:	b.ne	3d97c <rpl_re_set_registers@@Base+0x6b94>  // b.any
   3d960:	ldr	w0, [sp, #140]
   3d964:	cmp	w0, #0x0
   3d968:	cset	w0, ne  // ne = any
   3d96c:	and	w0, w0, #0xff
   3d970:	and	x0, x0, #0xff
   3d974:	cmp	x0, #0x0
   3d978:	b.eq	3d814 <rpl_re_set_registers@@Base+0x6a2c>  // b.none
   3d97c:	ldr	w0, [sp, #136]
   3d980:	cmp	w0, #0x0
   3d984:	b.ne	3d9a4 <rpl_re_set_registers@@Base+0x6bbc>  // b.any
   3d988:	ldr	w0, [sp, #144]
   3d98c:	cmp	w0, #0x0
   3d990:	b.eq	3d99c <rpl_re_set_registers@@Base+0x6bb4>  // b.none
   3d994:	ldr	w0, [sp, #144]
   3d998:	b	3d9a8 <rpl_re_set_registers@@Base+0x6bc0>
   3d99c:	ldr	w0, [sp, #140]
   3d9a0:	b	3d9a8 <rpl_re_set_registers@@Base+0x6bc0>
   3d9a4:	ldr	w0, [sp, #136]
   3d9a8:	str	w0, [sp, #136]
   3d9ac:	ldr	w0, [sp, #136]
   3d9b0:	b	3dba4 <rpl_re_set_registers@@Base+0x6dbc>
   3d9b4:	ldr	x0, [sp, #176]
   3d9b8:	ldr	x1, [x0, #24]
   3d9bc:	ldr	x0, [sp, #184]
   3d9c0:	ldr	x0, [x0]
   3d9c4:	lsl	x0, x0, #3
   3d9c8:	add	x0, x1, x0
   3d9cc:	ldr	x0, [x0]
   3d9d0:	str	x0, [sp, #152]
   3d9d4:	ldr	x0, [sp, #72]
   3d9d8:	ldr	x1, [x0, #184]
   3d9dc:	ldr	x0, [sp, #160]
   3d9e0:	lsl	x0, x0, #3
   3d9e4:	add	x0, x1, x0
   3d9e8:	ldr	x0, [x0]
   3d9ec:	cmp	x0, #0x0
   3d9f0:	b.eq	3dab8 <rpl_re_set_registers@@Base+0x6cd0>  // b.none
   3d9f4:	ldr	x0, [sp, #72]
   3d9f8:	ldr	x1, [x0, #184]
   3d9fc:	ldr	x0, [sp, #160]
   3da00:	lsl	x0, x0, #3
   3da04:	add	x0, x1, x0
   3da08:	ldr	x0, [x0]
   3da0c:	add	x0, x0, #0x8
   3da10:	ldr	x1, [sp, #152]
   3da14:	bl	2c7a4 <printf_parse@@Base+0x54ac>
   3da18:	cmp	x0, #0x0
   3da1c:	b.ne	3db84 <rpl_re_set_registers@@Base+0x6d9c>  // b.any
   3da20:	ldr	x0, [sp, #72]
   3da24:	ldr	x1, [x0, #184]
   3da28:	ldr	x0, [sp, #160]
   3da2c:	lsl	x0, x0, #3
   3da30:	add	x0, x1, x0
   3da34:	ldr	x0, [x0]
   3da38:	add	x1, x0, #0x8
   3da3c:	add	x0, sp, #0x58
   3da40:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   3da44:	str	w0, [sp, #136]
   3da48:	add	x0, sp, #0x58
   3da4c:	ldr	x1, [sp, #152]
   3da50:	bl	2c3ec <printf_parse@@Base+0x50f4>
   3da54:	strb	w0, [sp, #151]
   3da58:	ldr	w0, [sp, #136]
   3da5c:	cmp	w0, #0x0
   3da60:	cset	w0, ne  // ne = any
   3da64:	and	w0, w0, #0xff
   3da68:	and	x0, x0, #0xff
   3da6c:	cmp	x0, #0x0
   3da70:	b.ne	3da8c <rpl_re_set_registers@@Base+0x6ca4>  // b.any
   3da74:	ldrb	w0, [sp, #151]
   3da78:	eor	w0, w0, #0x1
   3da7c:	and	w0, w0, #0xff
   3da80:	and	x0, x0, #0xff
   3da84:	cmp	x0, #0x0
   3da88:	b.eq	3daec <rpl_re_set_registers@@Base+0x6d04>  // b.none
   3da8c:	ldr	x0, [sp, #104]
   3da90:	bl	b130 <free@plt>
   3da94:	ldr	w0, [sp, #136]
   3da98:	cmp	w0, #0x0
   3da9c:	b.eq	3daa8 <rpl_re_set_registers@@Base+0x6cc0>  // b.none
   3daa0:	ldr	w0, [sp, #136]
   3daa4:	b	3daac <rpl_re_set_registers@@Base+0x6cc4>
   3daa8:	mov	w0, #0xc                   	// #12
   3daac:	str	w0, [sp, #136]
   3dab0:	ldr	w0, [sp, #136]
   3dab4:	b	3dba4 <rpl_re_set_registers@@Base+0x6dbc>
   3dab8:	add	x0, sp, #0x58
   3dabc:	ldr	x1, [sp, #152]
   3dac0:	bl	2b520 <printf_parse@@Base+0x4228>
   3dac4:	str	w0, [sp, #136]
   3dac8:	ldr	w0, [sp, #136]
   3dacc:	cmp	w0, #0x0
   3dad0:	cset	w0, ne  // ne = any
   3dad4:	and	w0, w0, #0xff
   3dad8:	and	x0, x0, #0xff
   3dadc:	cmp	x0, #0x0
   3dae0:	b.eq	3daec <rpl_re_set_registers@@Base+0x6d04>  // b.none
   3dae4:	ldr	w0, [sp, #136]
   3dae8:	b	3dba4 <rpl_re_set_registers@@Base+0x6dbc>
   3daec:	ldr	x0, [sp, #72]
   3daf0:	ldr	x1, [x0, #184]
   3daf4:	ldr	x0, [sp, #160]
   3daf8:	lsl	x0, x0, #3
   3dafc:	add	x19, x1, x0
   3db00:	add	x1, sp, #0x58
   3db04:	add	x0, sp, #0x88
   3db08:	mov	x2, x1
   3db0c:	ldr	x1, [sp, #176]
   3db10:	bl	2cd64 <printf_parse@@Base+0x5a6c>
   3db14:	str	x0, [x19]
   3db18:	ldr	x0, [sp, #104]
   3db1c:	bl	b130 <free@plt>
   3db20:	ldr	x0, [sp, #72]
   3db24:	ldr	x1, [x0, #184]
   3db28:	ldr	x0, [sp, #160]
   3db2c:	lsl	x0, x0, #3
   3db30:	add	x0, x1, x0
   3db34:	ldr	x0, [x0]
   3db38:	cmp	x0, #0x0
   3db3c:	cset	w0, eq  // eq = none
   3db40:	and	w0, w0, #0xff
   3db44:	and	x0, x0, #0xff
   3db48:	cmp	x0, #0x0
   3db4c:	b.eq	3db88 <rpl_re_set_registers@@Base+0x6da0>  // b.none
   3db50:	ldr	w0, [sp, #136]
   3db54:	cmp	w0, #0x0
   3db58:	cset	w0, ne  // ne = any
   3db5c:	and	w0, w0, #0xff
   3db60:	and	x0, x0, #0xff
   3db64:	cmp	x0, #0x0
   3db68:	b.eq	3db88 <rpl_re_set_registers@@Base+0x6da0>  // b.none
   3db6c:	ldr	w0, [sp, #136]
   3db70:	b	3dba4 <rpl_re_set_registers@@Base+0x6dbc>
   3db74:	nop
   3db78:	b	3db88 <rpl_re_set_registers@@Base+0x6da0>
   3db7c:	nop
   3db80:	b	3db88 <rpl_re_set_registers@@Base+0x6da0>
   3db84:	nop
   3db88:	ldr	x0, [sp, #184]
   3db8c:	add	x1, x0, #0x28
   3db90:	str	x1, [sp, #184]
   3db94:	ldrb	w0, [x0, #32]
   3db98:	cmp	w0, #0x0
   3db9c:	b.ne	3d838 <rpl_re_set_registers@@Base+0x6a50>  // b.any
   3dba0:	mov	w0, #0x0                   	// #0
   3dba4:	ldr	x19, [sp, #16]
   3dba8:	ldp	x29, x30, [sp], #192
   3dbac:	ret
   3dbb0:	stp	x29, x30, [sp, #-256]!
   3dbb4:	mov	x29, sp
   3dbb8:	str	x19, [sp, #16]
   3dbbc:	str	x0, [x29, #40]
   3dbc0:	str	x1, [x29, #32]
   3dbc4:	strb	wzr, [x29, #235]
   3dbc8:	strb	wzr, [x29, #191]
   3dbcc:	strb	wzr, [x29, #215]
   3dbd0:	str	xzr, [x29, #192]
   3dbd4:	mov	x0, #0x3800                	// #14336
   3dbd8:	bl	ab40 <malloc@plt>
   3dbdc:	str	x0, [x29, #176]
   3dbe0:	ldr	x0, [x29, #176]
   3dbe4:	cmp	x0, #0x0
   3dbe8:	cset	w0, eq  // eq = none
   3dbec:	and	w0, w0, #0xff
   3dbf0:	and	x0, x0, #0xff
   3dbf4:	cmp	x0, #0x0
   3dbf8:	b.eq	3dc04 <rpl_re_set_registers@@Base+0x6e1c>  // b.none
   3dbfc:	mov	w0, #0x0                   	// #0
   3dc00:	b	3e640 <rpl_re_set_registers@@Base+0x7858>
   3dc04:	mov	w0, #0x1                   	// #1
   3dc08:	strb	w0, [x29, #191]
   3dc0c:	ldr	x0, [x29, #176]
   3dc10:	str	x0, [x29, #168]
   3dc14:	ldr	x1, [x29, #176]
   3dc18:	mov	x0, #0x1800                	// #6144
   3dc1c:	add	x0, x1, x0
   3dc20:	str	x0, [x29, #160]
   3dc24:	ldr	x0, [x29, #32]
   3dc28:	str	xzr, [x0, #88]
   3dc2c:	ldr	x0, [x29, #32]
   3dc30:	ldr	x1, [x0, #88]
   3dc34:	ldr	x0, [x29, #32]
   3dc38:	str	x1, [x0, #96]
   3dc3c:	ldr	x3, [x29, #160]
   3dc40:	ldr	x2, [x29, #168]
   3dc44:	ldr	x1, [x29, #32]
   3dc48:	ldr	x0, [x29, #40]
   3dc4c:	bl	3e650 <rpl_re_set_registers@@Base+0x7868>
   3dc50:	str	x0, [x29, #152]
   3dc54:	ldr	x0, [x29, #152]
   3dc58:	cmp	x0, #0x0
   3dc5c:	cset	w0, le
   3dc60:	and	w0, w0, #0xff
   3dc64:	and	x0, x0, #0xff
   3dc68:	cmp	x0, #0x0
   3dc6c:	b.eq	3dce0 <rpl_re_set_registers@@Base+0x6ef8>  // b.none
   3dc70:	ldrb	w0, [x29, #191]
   3dc74:	cmp	w0, #0x0
   3dc78:	b.eq	3dc84 <rpl_re_set_registers@@Base+0x6e9c>  // b.none
   3dc7c:	ldr	x0, [x29, #176]
   3dc80:	bl	b130 <free@plt>
   3dc84:	ldr	x0, [x29, #152]
   3dc88:	cmp	x0, #0x0
   3dc8c:	b.ne	3dcd8 <rpl_re_set_registers@@Base+0x6ef0>  // b.any
   3dc90:	mov	x1, #0x100                 	// #256
   3dc94:	mov	x0, #0x8                   	// #8
   3dc98:	bl	ad80 <calloc@plt>
   3dc9c:	mov	x1, x0
   3dca0:	ldr	x0, [x29, #32]
   3dca4:	str	x1, [x0, #88]
   3dca8:	ldr	x0, [x29, #32]
   3dcac:	ldr	x0, [x0, #88]
   3dcb0:	cmp	x0, #0x0
   3dcb4:	cset	w0, eq  // eq = none
   3dcb8:	and	w0, w0, #0xff
   3dcbc:	and	x0, x0, #0xff
   3dcc0:	cmp	x0, #0x0
   3dcc4:	b.eq	3dcd0 <rpl_re_set_registers@@Base+0x6ee8>  // b.none
   3dcc8:	mov	w0, #0x0                   	// #0
   3dccc:	b	3e640 <rpl_re_set_registers@@Base+0x7858>
   3dcd0:	mov	w0, #0x1                   	// #1
   3dcd4:	b	3e640 <rpl_re_set_registers@@Base+0x7858>
   3dcd8:	mov	w0, #0x0                   	// #0
   3dcdc:	b	3e640 <rpl_re_set_registers@@Base+0x7858>
   3dce0:	ldr	x0, [x29, #152]
   3dce4:	add	x1, x0, #0x1
   3dce8:	add	x0, x29, #0x58
   3dcec:	bl	2b4b0 <printf_parse@@Base+0x41b8>
   3dcf0:	str	w0, [x29, #116]
   3dcf4:	ldr	w0, [x29, #116]
   3dcf8:	cmp	w0, #0x0
   3dcfc:	cset	w0, ne  // ne = any
   3dd00:	and	w0, w0, #0xff
   3dd04:	and	x0, x0, #0xff
   3dd08:	cmp	x0, #0x0
   3dd0c:	b.ne	3dde4 <rpl_re_set_registers@@Base+0x6ffc>  // b.any
   3dd10:	mov	x0, #0xa855                	// #43093
   3dd14:	movk	x0, #0xaaaa, lsl #16
   3dd18:	movk	x0, #0xaaaa, lsl #32
   3dd1c:	movk	x0, #0xaaa, lsl #48
   3dd20:	str	x0, [x29, #144]
   3dd24:	ldr	x0, [x29, #152]
   3dd28:	ldr	x1, [x29, #144]
   3dd2c:	cmp	x1, x0
   3dd30:	cset	w0, cc  // cc = lo, ul, last
   3dd34:	and	w0, w0, #0xff
   3dd38:	and	x0, x0, #0xff
   3dd3c:	cmp	x0, #0x0
   3dd40:	b.ne	3ddec <rpl_re_set_registers@@Base+0x7004>  // b.any
   3dd44:	ldr	x1, [x29, #152]
   3dd48:	mov	x0, x1
   3dd4c:	lsl	x0, x0, #1
   3dd50:	add	x0, x0, x1
   3dd54:	lsl	x0, x0, #3
   3dd58:	mov	x1, x0
   3dd5c:	mov	x0, #0x3800                	// #14336
   3dd60:	add	x0, x1, x0
   3dd64:	cmp	x0, #0xfbf
   3dd68:	b.hi	3dda8 <rpl_re_set_registers@@Base+0x6fc0>  // b.pmore
   3dd6c:	ldr	x1, [x29, #152]
   3dd70:	mov	x0, x1
   3dd74:	lsl	x0, x0, #1
   3dd78:	add	x0, x0, x1
   3dd7c:	lsl	x0, x0, #3
   3dd80:	add	x0, x0, #0xf
   3dd84:	lsr	x0, x0, #4
   3dd88:	lsl	x0, x0, #4
   3dd8c:	sub	sp, sp, x0
   3dd90:	mov	x0, sp
   3dd94:	add	x0, x0, #0xf
   3dd98:	lsr	x0, x0, #4
   3dd9c:	lsl	x0, x0, #4
   3dda0:	str	x0, [x29, #192]
   3dda4:	b	3dea4 <rpl_re_set_registers@@Base+0x70bc>
   3dda8:	ldr	x1, [x29, #152]
   3ddac:	mov	x0, x1
   3ddb0:	lsl	x0, x0, #1
   3ddb4:	add	x0, x0, x1
   3ddb8:	lsl	x0, x0, #3
   3ddbc:	bl	ab40 <malloc@plt>
   3ddc0:	str	x0, [x29, #192]
   3ddc4:	ldr	x0, [x29, #192]
   3ddc8:	cmp	x0, #0x0
   3ddcc:	cset	w0, eq  // eq = none
   3ddd0:	and	w0, w0, #0xff
   3ddd4:	and	x0, x0, #0xff
   3ddd8:	cmp	x0, #0x0
   3dddc:	b.eq	3de9c <rpl_re_set_registers@@Base+0x70b4>  // b.none
   3dde0:	b	3de18 <rpl_re_set_registers@@Base+0x7030>
   3dde4:	nop
   3dde8:	b	3de18 <rpl_re_set_registers@@Base+0x7030>
   3ddec:	nop
   3ddf0:	b	3de18 <rpl_re_set_registers@@Base+0x7030>
   3ddf4:	nop
   3ddf8:	b	3de18 <rpl_re_set_registers@@Base+0x7030>
   3ddfc:	nop
   3de00:	b	3de18 <rpl_re_set_registers@@Base+0x7030>
   3de04:	nop
   3de08:	b	3de18 <rpl_re_set_registers@@Base+0x7030>
   3de0c:	nop
   3de10:	b	3de18 <rpl_re_set_registers@@Base+0x7030>
   3de14:	nop
   3de18:	ldrb	w0, [x29, #215]
   3de1c:	cmp	w0, #0x0
   3de20:	b.eq	3de2c <rpl_re_set_registers@@Base+0x7044>  // b.none
   3de24:	ldr	x0, [x29, #192]
   3de28:	bl	b130 <free@plt>
   3de2c:	ldr	x0, [x29, #104]
   3de30:	bl	b130 <free@plt>
   3de34:	str	xzr, [x29, #248]
   3de38:	b	3de70 <rpl_re_set_registers@@Base+0x7088>
   3de3c:	ldr	x1, [x29, #248]
   3de40:	mov	x0, x1
   3de44:	lsl	x0, x0, #1
   3de48:	add	x0, x0, x1
   3de4c:	lsl	x0, x0, #3
   3de50:	mov	x1, x0
   3de54:	ldr	x0, [x29, #168]
   3de58:	add	x0, x0, x1
   3de5c:	ldr	x0, [x0, #16]
   3de60:	bl	b130 <free@plt>
   3de64:	ldr	x0, [x29, #248]
   3de68:	add	x0, x0, #0x1
   3de6c:	str	x0, [x29, #248]
   3de70:	ldr	x1, [x29, #248]
   3de74:	ldr	x0, [x29, #152]
   3de78:	cmp	x1, x0
   3de7c:	b.lt	3de3c <rpl_re_set_registers@@Base+0x7054>  // b.tstop
   3de80:	ldrb	w0, [x29, #191]
   3de84:	cmp	w0, #0x0
   3de88:	b.eq	3de94 <rpl_re_set_registers@@Base+0x70ac>  // b.none
   3de8c:	ldr	x0, [x29, #176]
   3de90:	bl	b130 <free@plt>
   3de94:	mov	w0, #0x0                   	// #0
   3de98:	b	3e640 <rpl_re_set_registers@@Base+0x7858>
   3de9c:	mov	w0, #0x1                   	// #1
   3dea0:	strb	w0, [x29, #215]
   3dea4:	ldr	x0, [x29, #152]
   3dea8:	lsl	x0, x0, #3
   3deac:	ldr	x1, [x29, #192]
   3deb0:	add	x0, x1, x0
   3deb4:	str	x0, [x29, #136]
   3deb8:	ldr	x0, [x29, #152]
   3debc:	lsl	x0, x0, #3
   3dec0:	ldr	x1, [x29, #136]
   3dec4:	add	x0, x1, x0
   3dec8:	str	x0, [x29, #128]
   3decc:	add	x0, x29, #0x38
   3ded0:	bl	28898 <printf_parse@@Base+0x15a0>
   3ded4:	str	xzr, [x29, #248]
   3ded8:	b	3e208 <rpl_re_set_registers@@Base+0x7420>
   3dedc:	str	xzr, [x29, #96]
   3dee0:	str	xzr, [x29, #240]
   3dee4:	b	3df94 <rpl_re_set_registers@@Base+0x71ac>
   3dee8:	ldr	x0, [x29, #40]
   3deec:	ldr	x2, [x0, #24]
   3def0:	ldr	x1, [x29, #248]
   3def4:	mov	x0, x1
   3def8:	lsl	x0, x0, #1
   3defc:	add	x0, x0, x1
   3df00:	lsl	x0, x0, #3
   3df04:	mov	x1, x0
   3df08:	ldr	x0, [x29, #168]
   3df0c:	add	x0, x0, x1
   3df10:	ldr	x1, [x0, #16]
   3df14:	ldr	x0, [x29, #240]
   3df18:	lsl	x0, x0, #3
   3df1c:	add	x0, x1, x0
   3df20:	ldr	x0, [x0]
   3df24:	lsl	x0, x0, #3
   3df28:	add	x0, x2, x0
   3df2c:	ldr	x0, [x0]
   3df30:	str	x0, [x29, #120]
   3df34:	ldr	x0, [x29, #120]
   3df38:	cmn	x0, #0x1
   3df3c:	b.eq	3df88 <rpl_re_set_registers@@Base+0x71a0>  // b.none
   3df40:	ldr	x0, [x29, #40]
   3df44:	ldr	x2, [x0, #48]
   3df48:	ldr	x1, [x29, #120]
   3df4c:	mov	x0, x1
   3df50:	lsl	x0, x0, #1
   3df54:	add	x0, x0, x1
   3df58:	lsl	x0, x0, #3
   3df5c:	add	x1, x2, x0
   3df60:	add	x0, x29, #0x58
   3df64:	bl	2bfa0 <printf_parse@@Base+0x4ca8>
   3df68:	str	w0, [x29, #116]
   3df6c:	ldr	w0, [x29, #116]
   3df70:	cmp	w0, #0x0
   3df74:	cset	w0, ne  // ne = any
   3df78:	and	w0, w0, #0xff
   3df7c:	and	x0, x0, #0xff
   3df80:	cmp	x0, #0x0
   3df84:	b.ne	3ddf4 <rpl_re_set_registers@@Base+0x700c>  // b.any
   3df88:	ldr	x0, [x29, #240]
   3df8c:	add	x0, x0, #0x1
   3df90:	str	x0, [x29, #240]
   3df94:	ldr	x1, [x29, #248]
   3df98:	mov	x0, x1
   3df9c:	lsl	x0, x0, #1
   3dfa0:	add	x0, x0, x1
   3dfa4:	lsl	x0, x0, #3
   3dfa8:	mov	x1, x0
   3dfac:	ldr	x0, [x29, #168]
   3dfb0:	add	x0, x0, x1
   3dfb4:	ldr	x0, [x0, #8]
   3dfb8:	ldr	x1, [x29, #240]
   3dfbc:	cmp	x1, x0
   3dfc0:	b.lt	3dee8 <rpl_re_set_registers@@Base+0x7100>  // b.tstop
   3dfc4:	ldr	x0, [x29, #248]
   3dfc8:	lsl	x0, x0, #3
   3dfcc:	ldr	x1, [x29, #192]
   3dfd0:	add	x19, x1, x0
   3dfd4:	add	x1, x29, #0x58
   3dfd8:	add	x0, x29, #0x74
   3dfdc:	mov	w3, #0x0                   	// #0
   3dfe0:	mov	x2, x1
   3dfe4:	ldr	x1, [x29, #40]
   3dfe8:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   3dfec:	str	x0, [x19]
   3dff0:	ldr	x0, [x29, #248]
   3dff4:	lsl	x0, x0, #3
   3dff8:	ldr	x1, [x29, #192]
   3dffc:	add	x0, x1, x0
   3e000:	ldr	x0, [x0]
   3e004:	cmp	x0, #0x0
   3e008:	cset	w0, eq  // eq = none
   3e00c:	and	w0, w0, #0xff
   3e010:	and	x0, x0, #0xff
   3e014:	cmp	x0, #0x0
   3e018:	b.eq	3e038 <rpl_re_set_registers@@Base+0x7250>  // b.none
   3e01c:	ldr	w0, [x29, #116]
   3e020:	cmp	w0, #0x0
   3e024:	cset	w0, ne  // ne = any
   3e028:	and	w0, w0, #0xff
   3e02c:	and	x0, x0, #0xff
   3e030:	cmp	x0, #0x0
   3e034:	b.ne	3ddfc <rpl_re_set_registers@@Base+0x7014>  // b.any
   3e038:	ldr	x0, [x29, #248]
   3e03c:	lsl	x0, x0, #3
   3e040:	ldr	x1, [x29, #192]
   3e044:	add	x0, x1, x0
   3e048:	ldr	x0, [x0]
   3e04c:	ldrb	w0, [x0, #104]
   3e050:	and	w0, w0, #0xffffff80
   3e054:	and	w0, w0, #0xff
   3e058:	cmp	w0, #0x0
   3e05c:	b.eq	3e194 <rpl_re_set_registers@@Base+0x73ac>  // b.none
   3e060:	ldr	x0, [x29, #248]
   3e064:	lsl	x0, x0, #3
   3e068:	ldr	x1, [x29, #136]
   3e06c:	add	x19, x1, x0
   3e070:	add	x1, x29, #0x58
   3e074:	add	x0, x29, #0x74
   3e078:	mov	w3, #0x1                   	// #1
   3e07c:	mov	x2, x1
   3e080:	ldr	x1, [x29, #40]
   3e084:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   3e088:	str	x0, [x19]
   3e08c:	ldr	x0, [x29, #248]
   3e090:	lsl	x0, x0, #3
   3e094:	ldr	x1, [x29, #136]
   3e098:	add	x0, x1, x0
   3e09c:	ldr	x0, [x0]
   3e0a0:	cmp	x0, #0x0
   3e0a4:	cset	w0, eq  // eq = none
   3e0a8:	and	w0, w0, #0xff
   3e0ac:	and	x0, x0, #0xff
   3e0b0:	cmp	x0, #0x0
   3e0b4:	b.eq	3e0d4 <rpl_re_set_registers@@Base+0x72ec>  // b.none
   3e0b8:	ldr	w0, [x29, #116]
   3e0bc:	cmp	w0, #0x0
   3e0c0:	cset	w0, ne  // ne = any
   3e0c4:	and	w0, w0, #0xff
   3e0c8:	and	x0, x0, #0xff
   3e0cc:	cmp	x0, #0x0
   3e0d0:	b.ne	3de04 <rpl_re_set_registers@@Base+0x701c>  // b.any
   3e0d4:	ldr	x0, [x29, #248]
   3e0d8:	lsl	x0, x0, #3
   3e0dc:	ldr	x1, [x29, #192]
   3e0e0:	add	x0, x1, x0
   3e0e4:	ldr	x1, [x0]
   3e0e8:	ldr	x0, [x29, #248]
   3e0ec:	lsl	x0, x0, #3
   3e0f0:	ldr	x2, [x29, #136]
   3e0f4:	add	x0, x2, x0
   3e0f8:	ldr	x0, [x0]
   3e0fc:	cmp	x1, x0
   3e100:	b.eq	3e11c <rpl_re_set_registers@@Base+0x7334>  // b.none
   3e104:	ldr	x0, [x29, #40]
   3e108:	ldr	w0, [x0, #180]
   3e10c:	cmp	w0, #0x1
   3e110:	b.le	3e11c <rpl_re_set_registers@@Base+0x7334>
   3e114:	mov	w0, #0x1                   	// #1
   3e118:	strb	w0, [x29, #235]
   3e11c:	ldr	x0, [x29, #248]
   3e120:	lsl	x0, x0, #3
   3e124:	ldr	x1, [x29, #128]
   3e128:	add	x19, x1, x0
   3e12c:	add	x1, x29, #0x58
   3e130:	add	x0, x29, #0x74
   3e134:	mov	w3, #0x2                   	// #2
   3e138:	mov	x2, x1
   3e13c:	ldr	x1, [x29, #40]
   3e140:	bl	2ceb0 <printf_parse@@Base+0x5bb8>
   3e144:	str	x0, [x19]
   3e148:	ldr	x0, [x29, #248]
   3e14c:	lsl	x0, x0, #3
   3e150:	ldr	x1, [x29, #128]
   3e154:	add	x0, x1, x0
   3e158:	ldr	x0, [x0]
   3e15c:	cmp	x0, #0x0
   3e160:	cset	w0, eq  // eq = none
   3e164:	and	w0, w0, #0xff
   3e168:	and	x0, x0, #0xff
   3e16c:	cmp	x0, #0x0
   3e170:	b.eq	3e1e4 <rpl_re_set_registers@@Base+0x73fc>  // b.none
   3e174:	ldr	w0, [x29, #116]
   3e178:	cmp	w0, #0x0
   3e17c:	cset	w0, ne  // ne = any
   3e180:	and	w0, w0, #0xff
   3e184:	and	x0, x0, #0xff
   3e188:	cmp	x0, #0x0
   3e18c:	b.eq	3e1e4 <rpl_re_set_registers@@Base+0x73fc>  // b.none
   3e190:	b	3de18 <rpl_re_set_registers@@Base+0x7030>
   3e194:	ldr	x0, [x29, #248]
   3e198:	lsl	x0, x0, #3
   3e19c:	ldr	x1, [x29, #192]
   3e1a0:	add	x1, x1, x0
   3e1a4:	ldr	x0, [x29, #248]
   3e1a8:	lsl	x0, x0, #3
   3e1ac:	ldr	x2, [x29, #136]
   3e1b0:	add	x0, x2, x0
   3e1b4:	ldr	x1, [x1]
   3e1b8:	str	x1, [x0]
   3e1bc:	ldr	x0, [x29, #248]
   3e1c0:	lsl	x0, x0, #3
   3e1c4:	ldr	x1, [x29, #192]
   3e1c8:	add	x1, x1, x0
   3e1cc:	ldr	x0, [x29, #248]
   3e1d0:	lsl	x0, x0, #3
   3e1d4:	ldr	x2, [x29, #128]
   3e1d8:	add	x0, x2, x0
   3e1dc:	ldr	x1, [x1]
   3e1e0:	str	x1, [x0]
   3e1e4:	ldr	x0, [x29, #248]
   3e1e8:	lsl	x0, x0, #5
   3e1ec:	ldr	x1, [x29, #160]
   3e1f0:	add	x1, x1, x0
   3e1f4:	add	x0, x29, #0x38
   3e1f8:	bl	28978 <printf_parse@@Base+0x1680>
   3e1fc:	ldr	x0, [x29, #248]
   3e200:	add	x0, x0, #0x1
   3e204:	str	x0, [x29, #248]
   3e208:	ldr	x1, [x29, #248]
   3e20c:	ldr	x0, [x29, #152]
   3e210:	cmp	x1, x0
   3e214:	b.lt	3dedc <rpl_re_set_registers@@Base+0x70f4>  // b.tstop
   3e218:	ldrb	w0, [x29, #235]
   3e21c:	cmp	x0, #0x0
   3e220:	b.ne	3e3ac <rpl_re_set_registers@@Base+0x75c4>  // b.any
   3e224:	mov	x1, #0x100                 	// #256
   3e228:	mov	x0, #0x8                   	// #8
   3e22c:	bl	ad80 <calloc@plt>
   3e230:	mov	x1, x0
   3e234:	ldr	x0, [x29, #32]
   3e238:	str	x1, [x0, #88]
   3e23c:	ldr	x0, [x29, #32]
   3e240:	ldr	x0, [x0, #88]
   3e244:	str	x0, [x29, #200]
   3e248:	ldr	x0, [x29, #200]
   3e24c:	cmp	x0, #0x0
   3e250:	cset	w0, eq  // eq = none
   3e254:	and	w0, w0, #0xff
   3e258:	and	x0, x0, #0xff
   3e25c:	cmp	x0, #0x0
   3e260:	b.ne	3de0c <rpl_re_set_registers@@Base+0x7024>  // b.any
   3e264:	str	xzr, [x29, #248]
   3e268:	b	3e39c <rpl_re_set_registers@@Base+0x75b4>
   3e26c:	ldr	x0, [x29, #248]
   3e270:	lsl	w0, w0, #6
   3e274:	str	w0, [x29, #236]
   3e278:	add	x0, x29, #0x108
   3e27c:	sub	x0, x0, #0xd0
   3e280:	ldr	x1, [x29, #248]
   3e284:	ldr	x0, [x0, x1, lsl #3]
   3e288:	str	x0, [x29, #224]
   3e28c:	mov	x0, #0x1                   	// #1
   3e290:	str	x0, [x29, #216]
   3e294:	b	3e384 <rpl_re_set_registers@@Base+0x759c>
   3e298:	ldr	x0, [x29, #224]
   3e29c:	and	x0, x0, #0x1
   3e2a0:	cmp	x0, #0x0
   3e2a4:	b.eq	3e360 <rpl_re_set_registers@@Base+0x7578>  // b.none
   3e2a8:	str	xzr, [x29, #240]
   3e2ac:	b	3e2bc <rpl_re_set_registers@@Base+0x74d4>
   3e2b0:	ldr	x0, [x29, #240]
   3e2b4:	add	x0, x0, #0x1
   3e2b8:	str	x0, [x29, #240]
   3e2bc:	ldr	x0, [x29, #240]
   3e2c0:	lsl	x0, x0, #5
   3e2c4:	ldr	x1, [x29, #160]
   3e2c8:	add	x0, x1, x0
   3e2cc:	ldr	x1, [x29, #248]
   3e2d0:	ldr	x1, [x0, x1, lsl #3]
   3e2d4:	ldr	x0, [x29, #216]
   3e2d8:	and	x0, x1, x0
   3e2dc:	cmp	x0, #0x0
   3e2e0:	b.eq	3e2b0 <rpl_re_set_registers@@Base+0x74c8>  // b.none
   3e2e4:	ldr	x1, [x29, #40]
   3e2e8:	ldr	x0, [x29, #248]
   3e2ec:	add	x0, x0, #0x16
   3e2f0:	lsl	x0, x0, #3
   3e2f4:	add	x0, x1, x0
   3e2f8:	ldr	x1, [x0, #8]
   3e2fc:	ldr	x0, [x29, #216]
   3e300:	and	x0, x1, x0
   3e304:	cmp	x0, #0x0
   3e308:	b.eq	3e338 <rpl_re_set_registers@@Base+0x7550>  // b.none
   3e30c:	ldr	x0, [x29, #240]
   3e310:	lsl	x0, x0, #3
   3e314:	ldr	x1, [x29, #136]
   3e318:	add	x1, x1, x0
   3e31c:	ldrsw	x0, [x29, #236]
   3e320:	lsl	x0, x0, #3
   3e324:	ldr	x2, [x29, #200]
   3e328:	add	x0, x2, x0
   3e32c:	ldr	x1, [x1]
   3e330:	str	x1, [x0]
   3e334:	b	3e360 <rpl_re_set_registers@@Base+0x7578>
   3e338:	ldr	x0, [x29, #240]
   3e33c:	lsl	x0, x0, #3
   3e340:	ldr	x1, [x29, #192]
   3e344:	add	x1, x1, x0
   3e348:	ldrsw	x0, [x29, #236]
   3e34c:	lsl	x0, x0, #3
   3e350:	ldr	x2, [x29, #200]
   3e354:	add	x0, x2, x0
   3e358:	ldr	x1, [x1]
   3e35c:	str	x1, [x0]
   3e360:	ldr	x0, [x29, #216]
   3e364:	lsl	x0, x0, #1
   3e368:	str	x0, [x29, #216]
   3e36c:	ldr	x0, [x29, #224]
   3e370:	lsr	x0, x0, #1
   3e374:	str	x0, [x29, #224]
   3e378:	ldr	w0, [x29, #236]
   3e37c:	add	w0, w0, #0x1
   3e380:	str	w0, [x29, #236]
   3e384:	ldr	x0, [x29, #224]
   3e388:	cmp	x0, #0x0
   3e38c:	b.ne	3e298 <rpl_re_set_registers@@Base+0x74b0>  // b.any
   3e390:	ldr	x0, [x29, #248]
   3e394:	add	x0, x0, #0x1
   3e398:	str	x0, [x29, #248]
   3e39c:	ldr	x0, [x29, #248]
   3e3a0:	cmp	x0, #0x3
   3e3a4:	b.le	3e26c <rpl_re_set_registers@@Base+0x7484>
   3e3a8:	b	3e508 <rpl_re_set_registers@@Base+0x7720>
   3e3ac:	mov	x1, #0x200                 	// #512
   3e3b0:	mov	x0, #0x8                   	// #8
   3e3b4:	bl	ad80 <calloc@plt>
   3e3b8:	mov	x1, x0
   3e3bc:	ldr	x0, [x29, #32]
   3e3c0:	str	x1, [x0, #96]
   3e3c4:	ldr	x0, [x29, #32]
   3e3c8:	ldr	x0, [x0, #96]
   3e3cc:	str	x0, [x29, #200]
   3e3d0:	ldr	x0, [x29, #200]
   3e3d4:	cmp	x0, #0x0
   3e3d8:	cset	w0, eq  // eq = none
   3e3dc:	and	w0, w0, #0xff
   3e3e0:	and	x0, x0, #0xff
   3e3e4:	cmp	x0, #0x0
   3e3e8:	b.ne	3de14 <rpl_re_set_registers@@Base+0x702c>  // b.any
   3e3ec:	str	xzr, [x29, #248]
   3e3f0:	b	3e4fc <rpl_re_set_registers@@Base+0x7714>
   3e3f4:	ldr	x0, [x29, #248]
   3e3f8:	lsl	w0, w0, #6
   3e3fc:	str	w0, [x29, #236]
   3e400:	add	x0, x29, #0x108
   3e404:	sub	x0, x0, #0xd0
   3e408:	ldr	x1, [x29, #248]
   3e40c:	ldr	x0, [x0, x1, lsl #3]
   3e410:	str	x0, [x29, #224]
   3e414:	mov	x0, #0x1                   	// #1
   3e418:	str	x0, [x29, #216]
   3e41c:	b	3e4e4 <rpl_re_set_registers@@Base+0x76fc>
   3e420:	ldr	x0, [x29, #224]
   3e424:	and	x0, x0, #0x1
   3e428:	cmp	x0, #0x0
   3e42c:	b.eq	3e4c0 <rpl_re_set_registers@@Base+0x76d8>  // b.none
   3e430:	str	xzr, [x29, #240]
   3e434:	b	3e444 <rpl_re_set_registers@@Base+0x765c>
   3e438:	ldr	x0, [x29, #240]
   3e43c:	add	x0, x0, #0x1
   3e440:	str	x0, [x29, #240]
   3e444:	ldr	x0, [x29, #240]
   3e448:	lsl	x0, x0, #5
   3e44c:	ldr	x1, [x29, #160]
   3e450:	add	x0, x1, x0
   3e454:	ldr	x1, [x29, #248]
   3e458:	ldr	x1, [x0, x1, lsl #3]
   3e45c:	ldr	x0, [x29, #216]
   3e460:	and	x0, x1, x0
   3e464:	cmp	x0, #0x0
   3e468:	b.eq	3e438 <rpl_re_set_registers@@Base+0x7650>  // b.none
   3e46c:	ldr	x0, [x29, #240]
   3e470:	lsl	x0, x0, #3
   3e474:	ldr	x1, [x29, #192]
   3e478:	add	x1, x1, x0
   3e47c:	ldrsw	x0, [x29, #236]
   3e480:	lsl	x0, x0, #3
   3e484:	ldr	x2, [x29, #200]
   3e488:	add	x0, x2, x0
   3e48c:	ldr	x1, [x1]
   3e490:	str	x1, [x0]
   3e494:	ldr	x0, [x29, #240]
   3e498:	lsl	x0, x0, #3
   3e49c:	ldr	x1, [x29, #136]
   3e4a0:	add	x1, x1, x0
   3e4a4:	ldrsw	x0, [x29, #236]
   3e4a8:	add	x0, x0, #0x100
   3e4ac:	lsl	x0, x0, #3
   3e4b0:	ldr	x2, [x29, #200]
   3e4b4:	add	x0, x2, x0
   3e4b8:	ldr	x1, [x1]
   3e4bc:	str	x1, [x0]
   3e4c0:	ldr	x0, [x29, #216]
   3e4c4:	lsl	x0, x0, #1
   3e4c8:	str	x0, [x29, #216]
   3e4cc:	ldr	x0, [x29, #224]
   3e4d0:	lsr	x0, x0, #1
   3e4d4:	str	x0, [x29, #224]
   3e4d8:	ldr	w0, [x29, #236]
   3e4dc:	add	w0, w0, #0x1
   3e4e0:	str	w0, [x29, #236]
   3e4e4:	ldr	x0, [x29, #224]
   3e4e8:	cmp	x0, #0x0
   3e4ec:	b.ne	3e420 <rpl_re_set_registers@@Base+0x7638>  // b.any
   3e4f0:	ldr	x0, [x29, #248]
   3e4f4:	add	x0, x0, #0x1
   3e4f8:	str	x0, [x29, #248]
   3e4fc:	ldr	x0, [x29, #248]
   3e500:	cmp	x0, #0x3
   3e504:	b.le	3e3f4 <rpl_re_set_registers@@Base+0x760c>
   3e508:	add	x0, x29, #0x38
   3e50c:	mov	x1, #0xa                   	// #10
   3e510:	bl	28838 <printf_parse@@Base+0x1540>
   3e514:	and	w0, w0, #0xff
   3e518:	cmp	w0, #0x0
   3e51c:	b.eq	3e5c0 <rpl_re_set_registers@@Base+0x77d8>  // b.none
   3e520:	str	xzr, [x29, #240]
   3e524:	b	3e5a8 <rpl_re_set_registers@@Base+0x77c0>
   3e528:	ldr	x0, [x29, #240]
   3e52c:	lsl	x0, x0, #5
   3e530:	ldr	x1, [x29, #160]
   3e534:	add	x0, x1, x0
   3e538:	mov	x1, #0xa                   	// #10
   3e53c:	bl	28838 <printf_parse@@Base+0x1540>
   3e540:	and	w0, w0, #0xff
   3e544:	cmp	w0, #0x0
   3e548:	b.eq	3e59c <rpl_re_set_registers@@Base+0x77b4>  // b.none
   3e54c:	ldr	x0, [x29, #240]
   3e550:	lsl	x0, x0, #3
   3e554:	ldr	x1, [x29, #128]
   3e558:	add	x1, x1, x0
   3e55c:	ldr	x0, [x29, #200]
   3e560:	add	x0, x0, #0x50
   3e564:	ldr	x1, [x1]
   3e568:	str	x1, [x0]
   3e56c:	ldrb	w0, [x29, #235]
   3e570:	cmp	w0, #0x0
   3e574:	b.eq	3e5bc <rpl_re_set_registers@@Base+0x77d4>  // b.none
   3e578:	ldr	x0, [x29, #240]
   3e57c:	lsl	x0, x0, #3
   3e580:	ldr	x1, [x29, #128]
   3e584:	add	x1, x1, x0
   3e588:	ldr	x0, [x29, #200]
   3e58c:	add	x0, x0, #0x850
   3e590:	ldr	x1, [x1]
   3e594:	str	x1, [x0]
   3e598:	b	3e5bc <rpl_re_set_registers@@Base+0x77d4>
   3e59c:	ldr	x0, [x29, #240]
   3e5a0:	add	x0, x0, #0x1
   3e5a4:	str	x0, [x29, #240]
   3e5a8:	ldr	x1, [x29, #240]
   3e5ac:	ldr	x0, [x29, #152]
   3e5b0:	cmp	x1, x0
   3e5b4:	b.lt	3e528 <rpl_re_set_registers@@Base+0x7740>  // b.tstop
   3e5b8:	b	3e5c0 <rpl_re_set_registers@@Base+0x77d8>
   3e5bc:	nop
   3e5c0:	ldrb	w0, [x29, #215]
   3e5c4:	cmp	w0, #0x0
   3e5c8:	b.eq	3e5d4 <rpl_re_set_registers@@Base+0x77ec>  // b.none
   3e5cc:	ldr	x0, [x29, #192]
   3e5d0:	bl	b130 <free@plt>
   3e5d4:	ldr	x0, [x29, #104]
   3e5d8:	bl	b130 <free@plt>
   3e5dc:	str	xzr, [x29, #248]
   3e5e0:	b	3e618 <rpl_re_set_registers@@Base+0x7830>
   3e5e4:	ldr	x1, [x29, #248]
   3e5e8:	mov	x0, x1
   3e5ec:	lsl	x0, x0, #1
   3e5f0:	add	x0, x0, x1
   3e5f4:	lsl	x0, x0, #3
   3e5f8:	mov	x1, x0
   3e5fc:	ldr	x0, [x29, #168]
   3e600:	add	x0, x0, x1
   3e604:	ldr	x0, [x0, #16]
   3e608:	bl	b130 <free@plt>
   3e60c:	ldr	x0, [x29, #248]
   3e610:	add	x0, x0, #0x1
   3e614:	str	x0, [x29, #248]
   3e618:	ldr	x1, [x29, #248]
   3e61c:	ldr	x0, [x29, #152]
   3e620:	cmp	x1, x0
   3e624:	b.lt	3e5e4 <rpl_re_set_registers@@Base+0x77fc>  // b.tstop
   3e628:	ldrb	w0, [x29, #191]
   3e62c:	cmp	w0, #0x0
   3e630:	b.eq	3e63c <rpl_re_set_registers@@Base+0x7854>  // b.none
   3e634:	ldr	x0, [x29, #176]
   3e638:	bl	b130 <free@plt>
   3e63c:	mov	w0, #0x1                   	// #1
   3e640:	mov	sp, x29
   3e644:	ldr	x19, [sp, #16]
   3e648:	ldp	x29, x30, [sp], #256
   3e64c:	ret
   3e650:	stp	x29, x30, [sp, #-256]!
   3e654:	mov	x29, sp
   3e658:	str	x0, [sp, #40]
   3e65c:	str	x1, [sp, #32]
   3e660:	str	x2, [sp, #24]
   3e664:	str	x3, [sp, #16]
   3e668:	ldr	x0, [sp, #32]
   3e66c:	add	x0, x0, #0x8
   3e670:	str	x0, [sp, #176]
   3e674:	add	x0, sp, #0x70
   3e678:	bl	28898 <printf_parse@@Base+0x15a0>
   3e67c:	str	xzr, [sp, #224]
   3e680:	str	xzr, [sp, #248]
   3e684:	b	3eecc <rpl_re_set_registers@@Base+0x80e4>
   3e688:	ldr	x0, [sp, #40]
   3e68c:	ldr	x1, [x0]
   3e690:	ldr	x0, [sp, #176]
   3e694:	ldr	x2, [x0, #16]
   3e698:	ldr	x0, [sp, #248]
   3e69c:	lsl	x0, x0, #3
   3e6a0:	add	x0, x2, x0
   3e6a4:	ldr	x0, [x0]
   3e6a8:	lsl	x0, x0, #4
   3e6ac:	add	x0, x1, x0
   3e6b0:	str	x0, [sp, #168]
   3e6b4:	ldr	x0, [sp, #168]
   3e6b8:	ldrb	w0, [x0, #8]
   3e6bc:	str	w0, [sp, #164]
   3e6c0:	ldr	x0, [sp, #168]
   3e6c4:	ldr	w0, [x0, #8]
   3e6c8:	ubfx	x0, x0, #8, #10
   3e6cc:	and	w0, w0, #0xffff
   3e6d0:	str	w0, [sp, #160]
   3e6d4:	ldr	w0, [sp, #164]
   3e6d8:	cmp	w0, #0x1
   3e6dc:	b.ne	3e6f8 <rpl_re_set_registers@@Base+0x7910>  // b.any
   3e6e0:	ldr	x0, [sp, #168]
   3e6e4:	ldrb	w0, [x0]
   3e6e8:	and	x1, x0, #0xff
   3e6ec:	add	x0, sp, #0x70
   3e6f0:	bl	2873c <printf_parse@@Base+0x1444>
   3e6f4:	b	3e7f0 <rpl_re_set_registers@@Base+0x7a08>
   3e6f8:	ldr	w0, [sp, #164]
   3e6fc:	cmp	w0, #0x3
   3e700:	b.ne	3e718 <rpl_re_set_registers@@Base+0x7930>  // b.any
   3e704:	ldr	x0, [sp, #168]
   3e708:	ldr	x1, [x0]
   3e70c:	add	x0, sp, #0x70
   3e710:	bl	28978 <printf_parse@@Base+0x1680>
   3e714:	b	3e7f0 <rpl_re_set_registers@@Base+0x7a08>
   3e718:	ldr	w0, [sp, #164]
   3e71c:	cmp	w0, #0x5
   3e720:	b.ne	3e794 <rpl_re_set_registers@@Base+0x79ac>  // b.any
   3e724:	ldr	x0, [sp, #40]
   3e728:	ldr	w0, [x0, #180]
   3e72c:	cmp	w0, #0x1
   3e730:	b.le	3e748 <rpl_re_set_registers@@Base+0x7960>
   3e734:	ldr	x0, [sp, #40]
   3e738:	ldr	x1, [x0, #120]
   3e73c:	add	x0, sp, #0x70
   3e740:	bl	28978 <printf_parse@@Base+0x1680>
   3e744:	b	3e750 <rpl_re_set_registers@@Base+0x7968>
   3e748:	add	x0, sp, #0x70
   3e74c:	bl	288c0 <printf_parse@@Base+0x15c8>
   3e750:	ldr	x0, [sp, #40]
   3e754:	ldr	x0, [x0, #216]
   3e758:	and	x0, x0, #0x40
   3e75c:	cmp	x0, #0x0
   3e760:	b.ne	3e770 <rpl_re_set_registers@@Base+0x7988>  // b.any
   3e764:	add	x0, sp, #0x70
   3e768:	mov	x1, #0xa                   	// #10
   3e76c:	bl	287b8 <printf_parse@@Base+0x14c0>
   3e770:	ldr	x0, [sp, #40]
   3e774:	ldr	x0, [x0, #216]
   3e778:	and	x0, x0, #0x80
   3e77c:	cmp	x0, #0x0
   3e780:	b.eq	3e7f0 <rpl_re_set_registers@@Base+0x7a08>  // b.none
   3e784:	add	x0, sp, #0x70
   3e788:	mov	x1, #0x0                   	// #0
   3e78c:	bl	287b8 <printf_parse@@Base+0x14c0>
   3e790:	b	3e7f0 <rpl_re_set_registers@@Base+0x7a08>
   3e794:	ldr	w0, [sp, #164]
   3e798:	cmp	w0, #0x7
   3e79c:	b.ne	3eea4 <rpl_re_set_registers@@Base+0x80bc>  // b.any
   3e7a0:	add	x0, sp, #0x70
   3e7a4:	mov	x2, #0x10                  	// #16
   3e7a8:	mov	w1, #0xffffffff            	// #-1
   3e7ac:	bl	acb0 <memset@plt>
   3e7b0:	ldr	x0, [sp, #40]
   3e7b4:	ldr	x0, [x0, #216]
   3e7b8:	and	x0, x0, #0x40
   3e7bc:	cmp	x0, #0x0
   3e7c0:	b.ne	3e7d0 <rpl_re_set_registers@@Base+0x79e8>  // b.any
   3e7c4:	add	x0, sp, #0x70
   3e7c8:	mov	x1, #0xa                   	// #10
   3e7cc:	bl	287b8 <printf_parse@@Base+0x14c0>
   3e7d0:	ldr	x0, [sp, #40]
   3e7d4:	ldr	x0, [x0, #216]
   3e7d8:	and	x0, x0, #0x80
   3e7dc:	cmp	x0, #0x0
   3e7e0:	b.eq	3e7f0 <rpl_re_set_registers@@Base+0x7a08>  // b.none
   3e7e4:	add	x0, sp, #0x70
   3e7e8:	mov	x1, #0x0                   	// #0
   3e7ec:	bl	287b8 <printf_parse@@Base+0x14c0>
   3e7f0:	ldr	w0, [sp, #160]
   3e7f4:	cmp	w0, #0x0
   3e7f8:	b.eq	3eb14 <rpl_re_set_registers@@Base+0x7d2c>  // b.none
   3e7fc:	ldr	w0, [sp, #160]
   3e800:	and	w0, w0, #0x20
   3e804:	cmp	w0, #0x0
   3e808:	b.eq	3e83c <rpl_re_set_registers@@Base+0x7a54>  // b.none
   3e80c:	add	x0, sp, #0x70
   3e810:	mov	x1, #0xa                   	// #10
   3e814:	bl	28838 <printf_parse@@Base+0x1540>
   3e818:	strb	w0, [sp, #159]
   3e81c:	add	x0, sp, #0x70
   3e820:	bl	28898 <printf_parse@@Base+0x15a0>
   3e824:	ldrb	w0, [sp, #159]
   3e828:	cmp	w0, #0x0
   3e82c:	b.eq	3eeac <rpl_re_set_registers@@Base+0x80c4>  // b.none
   3e830:	add	x0, sp, #0x70
   3e834:	mov	x1, #0xa                   	// #10
   3e838:	bl	2873c <printf_parse@@Base+0x1444>
   3e83c:	ldr	w0, [sp, #160]
   3e840:	and	w0, w0, #0x80
   3e844:	cmp	w0, #0x0
   3e848:	b.eq	3e858 <rpl_re_set_registers@@Base+0x7a70>  // b.none
   3e84c:	add	x0, sp, #0x70
   3e850:	bl	28898 <printf_parse@@Base+0x15a0>
   3e854:	b	3eec0 <rpl_re_set_registers@@Base+0x80d8>
   3e858:	ldr	w0, [sp, #160]
   3e85c:	and	w0, w0, #0x4
   3e860:	cmp	w0, #0x0
   3e864:	b.eq	3e9b4 <rpl_re_set_registers@@Base+0x7bcc>  // b.none
   3e868:	str	xzr, [sp, #216]
   3e86c:	ldr	w0, [sp, #164]
   3e870:	cmp	w0, #0x1
   3e874:	b.ne	3e89c <rpl_re_set_registers@@Base+0x7ab4>  // b.any
   3e878:	ldr	x0, [sp, #168]
   3e87c:	ldrb	w0, [x0, #10]
   3e880:	and	w0, w0, #0x40
   3e884:	and	w0, w0, #0xff
   3e888:	cmp	w0, #0x0
   3e88c:	b.ne	3e89c <rpl_re_set_registers@@Base+0x7ab4>  // b.any
   3e890:	add	x0, sp, #0x70
   3e894:	bl	28898 <printf_parse@@Base+0x15a0>
   3e898:	b	3eec0 <rpl_re_set_registers@@Base+0x80d8>
   3e89c:	ldr	x0, [sp, #40]
   3e8a0:	ldr	w0, [x0, #180]
   3e8a4:	cmp	w0, #0x1
   3e8a8:	b.le	3e93c <rpl_re_set_registers@@Base+0x7b54>
   3e8ac:	str	xzr, [sp, #240]
   3e8b0:	b	3e92c <rpl_re_set_registers@@Base+0x7b44>
   3e8b4:	add	x0, sp, #0x70
   3e8b8:	ldr	x1, [sp, #240]
   3e8bc:	ldr	x1, [x0, x1, lsl #3]
   3e8c0:	ldr	x2, [sp, #40]
   3e8c4:	ldr	x0, [sp, #240]
   3e8c8:	add	x0, x0, #0x16
   3e8cc:	lsl	x0, x0, #3
   3e8d0:	add	x0, x2, x0
   3e8d4:	ldr	x2, [x0, #8]
   3e8d8:	ldr	x0, [sp, #40]
   3e8dc:	ldr	x3, [x0, #120]
   3e8e0:	ldr	x0, [sp, #240]
   3e8e4:	lsl	x0, x0, #3
   3e8e8:	add	x0, x3, x0
   3e8ec:	ldr	x0, [x0]
   3e8f0:	mvn	x0, x0
   3e8f4:	orr	x0, x2, x0
   3e8f8:	and	x2, x1, x0
   3e8fc:	add	x0, sp, #0x70
   3e900:	ldr	x1, [sp, #240]
   3e904:	str	x2, [x0, x1, lsl #3]
   3e908:	add	x0, sp, #0x70
   3e90c:	ldr	x1, [sp, #240]
   3e910:	ldr	x0, [x0, x1, lsl #3]
   3e914:	ldr	x1, [sp, #216]
   3e918:	orr	x0, x1, x0
   3e91c:	str	x0, [sp, #216]
   3e920:	ldr	x0, [sp, #240]
   3e924:	add	x0, x0, #0x1
   3e928:	str	x0, [sp, #240]
   3e92c:	ldr	x0, [sp, #240]
   3e930:	cmp	x0, #0x3
   3e934:	b.le	3e8b4 <rpl_re_set_registers@@Base+0x7acc>
   3e938:	b	3e9a8 <rpl_re_set_registers@@Base+0x7bc0>
   3e93c:	str	xzr, [sp, #240]
   3e940:	b	3e99c <rpl_re_set_registers@@Base+0x7bb4>
   3e944:	add	x0, sp, #0x70
   3e948:	ldr	x1, [sp, #240]
   3e94c:	ldr	x1, [x0, x1, lsl #3]
   3e950:	ldr	x2, [sp, #40]
   3e954:	ldr	x0, [sp, #240]
   3e958:	add	x0, x0, #0x16
   3e95c:	lsl	x0, x0, #3
   3e960:	add	x0, x2, x0
   3e964:	ldr	x0, [x0, #8]
   3e968:	and	x2, x1, x0
   3e96c:	add	x0, sp, #0x70
   3e970:	ldr	x1, [sp, #240]
   3e974:	str	x2, [x0, x1, lsl #3]
   3e978:	add	x0, sp, #0x70
   3e97c:	ldr	x1, [sp, #240]
   3e980:	ldr	x0, [x0, x1, lsl #3]
   3e984:	ldr	x1, [sp, #216]
   3e988:	orr	x0, x1, x0
   3e98c:	str	x0, [sp, #216]
   3e990:	ldr	x0, [sp, #240]
   3e994:	add	x0, x0, #0x1
   3e998:	str	x0, [sp, #240]
   3e99c:	ldr	x0, [sp, #240]
   3e9a0:	cmp	x0, #0x3
   3e9a4:	b.le	3e944 <rpl_re_set_registers@@Base+0x7b5c>
   3e9a8:	ldr	x0, [sp, #216]
   3e9ac:	cmp	x0, #0x0
   3e9b0:	b.eq	3eeb4 <rpl_re_set_registers@@Base+0x80cc>  // b.none
   3e9b4:	ldr	w0, [sp, #160]
   3e9b8:	and	w0, w0, #0x8
   3e9bc:	cmp	w0, #0x0
   3e9c0:	b.eq	3eb14 <rpl_re_set_registers@@Base+0x7d2c>  // b.none
   3e9c4:	str	xzr, [sp, #208]
   3e9c8:	ldr	w0, [sp, #164]
   3e9cc:	cmp	w0, #0x1
   3e9d0:	b.ne	3e9f8 <rpl_re_set_registers@@Base+0x7c10>  // b.any
   3e9d4:	ldr	x0, [sp, #168]
   3e9d8:	ldrb	w0, [x0, #10]
   3e9dc:	and	w0, w0, #0x40
   3e9e0:	and	w0, w0, #0xff
   3e9e4:	cmp	w0, #0x0
   3e9e8:	b.eq	3e9f8 <rpl_re_set_registers@@Base+0x7c10>  // b.none
   3e9ec:	add	x0, sp, #0x70
   3e9f0:	bl	28898 <printf_parse@@Base+0x15a0>
   3e9f4:	b	3eec0 <rpl_re_set_registers@@Base+0x80d8>
   3e9f8:	ldr	x0, [sp, #40]
   3e9fc:	ldr	w0, [x0, #180]
   3ea00:	cmp	w0, #0x1
   3ea04:	b.le	3ea98 <rpl_re_set_registers@@Base+0x7cb0>
   3ea08:	str	xzr, [sp, #240]
   3ea0c:	b	3ea88 <rpl_re_set_registers@@Base+0x7ca0>
   3ea10:	add	x0, sp, #0x70
   3ea14:	ldr	x1, [sp, #240]
   3ea18:	ldr	x1, [x0, x1, lsl #3]
   3ea1c:	ldr	x2, [sp, #40]
   3ea20:	ldr	x0, [sp, #240]
   3ea24:	add	x0, x0, #0x16
   3ea28:	lsl	x0, x0, #3
   3ea2c:	add	x0, x2, x0
   3ea30:	ldr	x2, [x0, #8]
   3ea34:	ldr	x0, [sp, #40]
   3ea38:	ldr	x3, [x0, #120]
   3ea3c:	ldr	x0, [sp, #240]
   3ea40:	lsl	x0, x0, #3
   3ea44:	add	x0, x3, x0
   3ea48:	ldr	x0, [x0]
   3ea4c:	and	x0, x2, x0
   3ea50:	mvn	x0, x0
   3ea54:	and	x2, x1, x0
   3ea58:	add	x0, sp, #0x70
   3ea5c:	ldr	x1, [sp, #240]
   3ea60:	str	x2, [x0, x1, lsl #3]
   3ea64:	add	x0, sp, #0x70
   3ea68:	ldr	x1, [sp, #240]
   3ea6c:	ldr	x0, [x0, x1, lsl #3]
   3ea70:	ldr	x1, [sp, #208]
   3ea74:	orr	x0, x1, x0
   3ea78:	str	x0, [sp, #208]
   3ea7c:	ldr	x0, [sp, #240]
   3ea80:	add	x0, x0, #0x1
   3ea84:	str	x0, [sp, #240]
   3ea88:	ldr	x0, [sp, #240]
   3ea8c:	cmp	x0, #0x3
   3ea90:	b.le	3ea10 <rpl_re_set_registers@@Base+0x7c28>
   3ea94:	b	3eb08 <rpl_re_set_registers@@Base+0x7d20>
   3ea98:	str	xzr, [sp, #240]
   3ea9c:	b	3eafc <rpl_re_set_registers@@Base+0x7d14>
   3eaa0:	add	x0, sp, #0x70
   3eaa4:	ldr	x1, [sp, #240]
   3eaa8:	ldr	x1, [x0, x1, lsl #3]
   3eaac:	ldr	x2, [sp, #40]
   3eab0:	ldr	x0, [sp, #240]
   3eab4:	add	x0, x0, #0x16
   3eab8:	lsl	x0, x0, #3
   3eabc:	add	x0, x2, x0
   3eac0:	ldr	x0, [x0, #8]
   3eac4:	mvn	x0, x0
   3eac8:	and	x2, x1, x0
   3eacc:	add	x0, sp, #0x70
   3ead0:	ldr	x1, [sp, #240]
   3ead4:	str	x2, [x0, x1, lsl #3]
   3ead8:	add	x0, sp, #0x70
   3eadc:	ldr	x1, [sp, #240]
   3eae0:	ldr	x0, [x0, x1, lsl #3]
   3eae4:	ldr	x1, [sp, #208]
   3eae8:	orr	x0, x1, x0
   3eaec:	str	x0, [sp, #208]
   3eaf0:	ldr	x0, [sp, #240]
   3eaf4:	add	x0, x0, #0x1
   3eaf8:	str	x0, [sp, #240]
   3eafc:	ldr	x0, [sp, #240]
   3eb00:	cmp	x0, #0x3
   3eb04:	b.le	3eaa0 <rpl_re_set_registers@@Base+0x7cb8>
   3eb08:	ldr	x0, [sp, #208]
   3eb0c:	cmp	x0, #0x0
   3eb10:	b.eq	3eebc <rpl_re_set_registers@@Base+0x80d4>  // b.none
   3eb14:	str	xzr, [sp, #240]
   3eb18:	b	3ede8 <rpl_re_set_registers@@Base+0x8000>
   3eb1c:	ldr	w0, [sp, #164]
   3eb20:	cmp	w0, #0x1
   3eb24:	b.ne	3eb64 <rpl_re_set_registers@@Base+0x7d7c>  // b.any
   3eb28:	ldr	x0, [sp, #240]
   3eb2c:	lsl	x0, x0, #5
   3eb30:	ldr	x1, [sp, #16]
   3eb34:	add	x2, x1, x0
   3eb38:	ldr	x0, [sp, #168]
   3eb3c:	ldrb	w0, [x0]
   3eb40:	and	x0, x0, #0xff
   3eb44:	mov	x1, x0
   3eb48:	mov	x0, x2
   3eb4c:	bl	28838 <printf_parse@@Base+0x1540>
   3eb50:	and	w0, w0, #0xff
   3eb54:	eor	w0, w0, #0x1
   3eb58:	and	w0, w0, #0xff
   3eb5c:	cmp	w0, #0x0
   3eb60:	b.ne	3edd0 <rpl_re_set_registers@@Base+0x7fe8>  // b.any
   3eb64:	str	xzr, [sp, #200]
   3eb68:	str	xzr, [sp, #232]
   3eb6c:	b	3ebc8 <rpl_re_set_registers@@Base+0x7de0>
   3eb70:	add	x0, sp, #0x70
   3eb74:	ldr	x1, [sp, #232]
   3eb78:	ldr	x1, [x0, x1, lsl #3]
   3eb7c:	ldr	x0, [sp, #240]
   3eb80:	lsl	x0, x0, #5
   3eb84:	ldr	x2, [sp, #16]
   3eb88:	add	x0, x2, x0
   3eb8c:	ldr	x2, [sp, #232]
   3eb90:	ldr	x0, [x0, x2, lsl #3]
   3eb94:	and	x2, x1, x0
   3eb98:	add	x0, sp, #0x30
   3eb9c:	ldr	x1, [sp, #232]
   3eba0:	str	x2, [x0, x1, lsl #3]
   3eba4:	add	x0, sp, #0x30
   3eba8:	ldr	x1, [sp, #232]
   3ebac:	ldr	x0, [x0, x1, lsl #3]
   3ebb0:	ldr	x1, [sp, #200]
   3ebb4:	orr	x0, x1, x0
   3ebb8:	str	x0, [sp, #200]
   3ebbc:	ldr	x0, [sp, #232]
   3ebc0:	add	x0, x0, #0x1
   3ebc4:	str	x0, [sp, #232]
   3ebc8:	ldr	x0, [sp, #232]
   3ebcc:	cmp	x0, #0x3
   3ebd0:	b.le	3eb70 <rpl_re_set_registers@@Base+0x7d88>
   3ebd4:	ldr	x0, [sp, #200]
   3ebd8:	cmp	x0, #0x0
   3ebdc:	b.eq	3edd8 <rpl_re_set_registers@@Base+0x7ff0>  // b.none
   3ebe0:	str	xzr, [sp, #184]
   3ebe4:	ldr	x0, [sp, #184]
   3ebe8:	str	x0, [sp, #192]
   3ebec:	str	xzr, [sp, #232]
   3ebf0:	b	3eca0 <rpl_re_set_registers@@Base+0x7eb8>
   3ebf4:	add	x0, sp, #0x70
   3ebf8:	ldr	x1, [sp, #232]
   3ebfc:	ldr	x0, [x0, x1, lsl #3]
   3ec00:	mvn	x1, x0
   3ec04:	ldr	x0, [sp, #240]
   3ec08:	lsl	x0, x0, #5
   3ec0c:	ldr	x2, [sp, #16]
   3ec10:	add	x0, x2, x0
   3ec14:	ldr	x2, [sp, #232]
   3ec18:	ldr	x0, [x0, x2, lsl #3]
   3ec1c:	and	x2, x1, x0
   3ec20:	add	x0, sp, #0x50
   3ec24:	ldr	x1, [sp, #232]
   3ec28:	str	x2, [x0, x1, lsl #3]
   3ec2c:	add	x0, sp, #0x50
   3ec30:	ldr	x1, [sp, #232]
   3ec34:	ldr	x0, [x0, x1, lsl #3]
   3ec38:	ldr	x1, [sp, #192]
   3ec3c:	orr	x0, x1, x0
   3ec40:	str	x0, [sp, #192]
   3ec44:	add	x0, sp, #0x70
   3ec48:	ldr	x1, [sp, #232]
   3ec4c:	ldr	x1, [x0, x1, lsl #3]
   3ec50:	ldr	x0, [sp, #240]
   3ec54:	lsl	x0, x0, #5
   3ec58:	ldr	x2, [sp, #16]
   3ec5c:	add	x0, x2, x0
   3ec60:	ldr	x2, [sp, #232]
   3ec64:	ldr	x0, [x0, x2, lsl #3]
   3ec68:	mvn	x0, x0
   3ec6c:	and	x2, x1, x0
   3ec70:	add	x0, sp, #0x70
   3ec74:	ldr	x1, [sp, #232]
   3ec78:	str	x2, [x0, x1, lsl #3]
   3ec7c:	add	x0, sp, #0x70
   3ec80:	ldr	x1, [sp, #232]
   3ec84:	ldr	x0, [x0, x1, lsl #3]
   3ec88:	ldr	x1, [sp, #184]
   3ec8c:	orr	x0, x1, x0
   3ec90:	str	x0, [sp, #184]
   3ec94:	ldr	x0, [sp, #232]
   3ec98:	add	x0, x0, #0x1
   3ec9c:	str	x0, [sp, #232]
   3eca0:	ldr	x0, [sp, #232]
   3eca4:	cmp	x0, #0x3
   3eca8:	b.le	3ebf4 <rpl_re_set_registers@@Base+0x7e0c>
   3ecac:	ldr	x0, [sp, #192]
   3ecb0:	cmp	x0, #0x0
   3ecb4:	b.eq	3ed60 <rpl_re_set_registers@@Base+0x7f78>  // b.none
   3ecb8:	ldr	x0, [sp, #224]
   3ecbc:	lsl	x0, x0, #5
   3ecc0:	ldr	x1, [sp, #16]
   3ecc4:	add	x0, x1, x0
   3ecc8:	add	x1, sp, #0x50
   3eccc:	bl	288e8 <printf_parse@@Base+0x15f0>
   3ecd0:	ldr	x0, [sp, #240]
   3ecd4:	lsl	x0, x0, #5
   3ecd8:	ldr	x1, [sp, #16]
   3ecdc:	add	x0, x1, x0
   3ece0:	add	x1, sp, #0x30
   3ece4:	bl	288e8 <printf_parse@@Base+0x15f0>
   3ece8:	ldr	x1, [sp, #224]
   3ecec:	mov	x0, x1
   3ecf0:	lsl	x0, x0, #1
   3ecf4:	add	x0, x0, x1
   3ecf8:	lsl	x0, x0, #3
   3ecfc:	mov	x1, x0
   3ed00:	ldr	x0, [sp, #24]
   3ed04:	add	x2, x0, x1
   3ed08:	ldr	x1, [sp, #240]
   3ed0c:	mov	x0, x1
   3ed10:	lsl	x0, x0, #1
   3ed14:	add	x0, x0, x1
   3ed18:	lsl	x0, x0, #3
   3ed1c:	mov	x1, x0
   3ed20:	ldr	x0, [sp, #24]
   3ed24:	add	x0, x0, x1
   3ed28:	mov	x1, x0
   3ed2c:	mov	x0, x2
   3ed30:	bl	2b6b8 <printf_parse@@Base+0x43c0>
   3ed34:	str	w0, [sp, #152]
   3ed38:	ldr	w0, [sp, #152]
   3ed3c:	cmp	w0, #0x0
   3ed40:	cset	w0, ne  // ne = any
   3ed44:	and	w0, w0, #0xff
   3ed48:	and	x0, x0, #0xff
   3ed4c:	cmp	x0, #0x0
   3ed50:	b.ne	3eee8 <rpl_re_set_registers@@Base+0x8100>  // b.any
   3ed54:	ldr	x0, [sp, #224]
   3ed58:	add	x0, x0, #0x1
   3ed5c:	str	x0, [sp, #224]
   3ed60:	ldr	x1, [sp, #240]
   3ed64:	mov	x0, x1
   3ed68:	lsl	x0, x0, #1
   3ed6c:	add	x0, x0, x1
   3ed70:	lsl	x0, x0, #3
   3ed74:	mov	x1, x0
   3ed78:	ldr	x0, [sp, #24]
   3ed7c:	add	x2, x0, x1
   3ed80:	ldr	x0, [sp, #176]
   3ed84:	ldr	x1, [x0, #16]
   3ed88:	ldr	x0, [sp, #248]
   3ed8c:	lsl	x0, x0, #3
   3ed90:	add	x0, x1, x0
   3ed94:	ldr	x0, [x0]
   3ed98:	mov	x1, x0
   3ed9c:	mov	x0, x2
   3eda0:	bl	2c3ec <printf_parse@@Base+0x50f4>
   3eda4:	strb	w0, [sp, #151]
   3eda8:	ldrb	w0, [sp, #151]
   3edac:	eor	w0, w0, #0x1
   3edb0:	and	w0, w0, #0xff
   3edb4:	and	x0, x0, #0xff
   3edb8:	cmp	x0, #0x0
   3edbc:	b.ne	3eef0 <rpl_re_set_registers@@Base+0x8108>  // b.any
   3edc0:	ldr	x0, [sp, #184]
   3edc4:	cmp	x0, #0x0
   3edc8:	b.eq	3edfc <rpl_re_set_registers@@Base+0x8014>  // b.none
   3edcc:	b	3eddc <rpl_re_set_registers@@Base+0x7ff4>
   3edd0:	nop
   3edd4:	b	3eddc <rpl_re_set_registers@@Base+0x7ff4>
   3edd8:	nop
   3eddc:	ldr	x0, [sp, #240]
   3ede0:	add	x0, x0, #0x1
   3ede4:	str	x0, [sp, #240]
   3ede8:	ldr	x1, [sp, #240]
   3edec:	ldr	x0, [sp, #224]
   3edf0:	cmp	x1, x0
   3edf4:	b.lt	3eb1c <rpl_re_set_registers@@Base+0x7d34>  // b.tstop
   3edf8:	b	3ee00 <rpl_re_set_registers@@Base+0x8018>
   3edfc:	nop
   3ee00:	ldr	x1, [sp, #240]
   3ee04:	ldr	x0, [sp, #224]
   3ee08:	cmp	x1, x0
   3ee0c:	b.ne	3eec0 <rpl_re_set_registers@@Base+0x80d8>  // b.any
   3ee10:	ldr	x0, [sp, #224]
   3ee14:	lsl	x0, x0, #5
   3ee18:	ldr	x1, [sp, #16]
   3ee1c:	add	x0, x1, x0
   3ee20:	add	x1, sp, #0x70
   3ee24:	bl	288e8 <printf_parse@@Base+0x15f0>
   3ee28:	ldr	x1, [sp, #224]
   3ee2c:	mov	x0, x1
   3ee30:	lsl	x0, x0, #1
   3ee34:	add	x0, x0, x1
   3ee38:	lsl	x0, x0, #3
   3ee3c:	mov	x1, x0
   3ee40:	ldr	x0, [sp, #24]
   3ee44:	add	x2, x0, x1
   3ee48:	ldr	x0, [sp, #176]
   3ee4c:	ldr	x1, [x0, #16]
   3ee50:	ldr	x0, [sp, #248]
   3ee54:	lsl	x0, x0, #3
   3ee58:	add	x0, x1, x0
   3ee5c:	ldr	x0, [x0]
   3ee60:	mov	x1, x0
   3ee64:	mov	x0, x2
   3ee68:	bl	2b520 <printf_parse@@Base+0x4228>
   3ee6c:	str	w0, [sp, #152]
   3ee70:	ldr	w0, [sp, #152]
   3ee74:	cmp	w0, #0x0
   3ee78:	cset	w0, ne  // ne = any
   3ee7c:	and	w0, w0, #0xff
   3ee80:	and	x0, x0, #0xff
   3ee84:	cmp	x0, #0x0
   3ee88:	b.ne	3eef8 <rpl_re_set_registers@@Base+0x8110>  // b.any
   3ee8c:	ldr	x0, [sp, #224]
   3ee90:	add	x0, x0, #0x1
   3ee94:	str	x0, [sp, #224]
   3ee98:	add	x0, sp, #0x70
   3ee9c:	bl	28898 <printf_parse@@Base+0x15a0>
   3eea0:	b	3eec0 <rpl_re_set_registers@@Base+0x80d8>
   3eea4:	nop
   3eea8:	b	3eec0 <rpl_re_set_registers@@Base+0x80d8>
   3eeac:	nop
   3eeb0:	b	3eec0 <rpl_re_set_registers@@Base+0x80d8>
   3eeb4:	nop
   3eeb8:	b	3eec0 <rpl_re_set_registers@@Base+0x80d8>
   3eebc:	nop
   3eec0:	ldr	x0, [sp, #248]
   3eec4:	add	x0, x0, #0x1
   3eec8:	str	x0, [sp, #248]
   3eecc:	ldr	x0, [sp, #176]
   3eed0:	ldr	x0, [x0, #8]
   3eed4:	ldr	x1, [sp, #248]
   3eed8:	cmp	x1, x0
   3eedc:	b.lt	3e688 <rpl_re_set_registers@@Base+0x78a0>  // b.tstop
   3eee0:	ldr	x0, [sp, #224]
   3eee4:	b	3ef4c <rpl_re_set_registers@@Base+0x8164>
   3eee8:	nop
   3eeec:	b	3eefc <rpl_re_set_registers@@Base+0x8114>
   3eef0:	nop
   3eef4:	b	3eefc <rpl_re_set_registers@@Base+0x8114>
   3eef8:	nop
   3eefc:	str	xzr, [sp, #240]
   3ef00:	b	3ef38 <rpl_re_set_registers@@Base+0x8150>
   3ef04:	ldr	x1, [sp, #240]
   3ef08:	mov	x0, x1
   3ef0c:	lsl	x0, x0, #1
   3ef10:	add	x0, x0, x1
   3ef14:	lsl	x0, x0, #3
   3ef18:	mov	x1, x0
   3ef1c:	ldr	x0, [sp, #24]
   3ef20:	add	x0, x0, x1
   3ef24:	ldr	x0, [x0, #16]
   3ef28:	bl	b130 <free@plt>
   3ef2c:	ldr	x0, [sp, #240]
   3ef30:	add	x0, x0, #0x1
   3ef34:	str	x0, [sp, #240]
   3ef38:	ldr	x1, [sp, #240]
   3ef3c:	ldr	x0, [sp, #224]
   3ef40:	cmp	x1, x0
   3ef44:	b.lt	3ef04 <rpl_re_set_registers@@Base+0x811c>  // b.tstop
   3ef48:	mov	x0, #0xffffffffffffffff    	// #-1
   3ef4c:	ldp	x29, x30, [sp], #256
   3ef50:	ret
   3ef54:	stp	x29, x30, [sp, #-128]!
   3ef58:	mov	x29, sp
   3ef5c:	str	x0, [sp, #40]
   3ef60:	str	x1, [sp, #32]
   3ef64:	str	x2, [sp, #24]
   3ef68:	str	x3, [sp, #16]
   3ef6c:	ldr	x0, [sp, #40]
   3ef70:	ldr	x1, [x0]
   3ef74:	ldr	x0, [sp, #32]
   3ef78:	lsl	x0, x0, #4
   3ef7c:	add	x0, x1, x0
   3ef80:	str	x0, [sp, #96]
   3ef84:	ldr	x0, [sp, #96]
   3ef88:	ldrb	w0, [x0, #8]
   3ef8c:	cmp	w0, #0x7
   3ef90:	cset	w0, eq  // eq = none
   3ef94:	and	w0, w0, #0xff
   3ef98:	and	x0, x0, #0xff
   3ef9c:	cmp	x0, #0x0
   3efa0:	b.eq	3f1bc <rpl_re_set_registers@@Base+0x83d4>  // b.none
   3efa4:	ldr	x0, [sp, #24]
   3efa8:	ldr	x1, [x0, #8]
   3efac:	ldr	x0, [sp, #16]
   3efb0:	add	x0, x1, x0
   3efb4:	ldrb	w0, [x0]
   3efb8:	strb	w0, [sp, #63]
   3efbc:	ldrb	w0, [sp, #63]
   3efc0:	cmp	w0, #0xc1
   3efc4:	cset	w0, ls  // ls = plast
   3efc8:	and	w0, w0, #0xff
   3efcc:	and	x0, x0, #0xff
   3efd0:	cmp	x0, #0x0
   3efd4:	b.eq	3efe0 <rpl_re_set_registers@@Base+0x81f8>  // b.none
   3efd8:	mov	w0, #0x0                   	// #0
   3efdc:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3efe0:	ldr	x0, [sp, #16]
   3efe4:	add	x1, x0, #0x1
   3efe8:	ldr	x0, [sp, #24]
   3efec:	ldr	x0, [x0, #88]
   3eff0:	cmp	x1, x0
   3eff4:	b.lt	3f000 <rpl_re_set_registers@@Base+0x8218>  // b.tstop
   3eff8:	mov	w0, #0x0                   	// #0
   3effc:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f000:	ldr	x0, [sp, #24]
   3f004:	ldr	x1, [x0, #8]
   3f008:	ldr	x0, [sp, #16]
   3f00c:	add	x0, x0, #0x1
   3f010:	add	x0, x1, x0
   3f014:	ldrb	w0, [x0]
   3f018:	strb	w0, [sp, #62]
   3f01c:	ldrb	w0, [sp, #63]
   3f020:	cmp	w0, #0xdf
   3f024:	b.hi	3f050 <rpl_re_set_registers@@Base+0x8268>  // b.pmore
   3f028:	ldrsb	w0, [sp, #62]
   3f02c:	cmp	w0, #0x0
   3f030:	b.ge	3f040 <rpl_re_set_registers@@Base+0x8258>  // b.tcont
   3f034:	ldrb	w0, [sp, #62]
   3f038:	cmp	w0, #0xbf
   3f03c:	b.ls	3f048 <rpl_re_set_registers@@Base+0x8260>  // b.plast
   3f040:	mov	w0, #0x0                   	// #0
   3f044:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f048:	mov	w0, #0x2                   	// #2
   3f04c:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f050:	ldrb	w0, [sp, #63]
   3f054:	cmp	w0, #0xef
   3f058:	b.hi	3f084 <rpl_re_set_registers@@Base+0x829c>  // b.pmore
   3f05c:	mov	w0, #0x3                   	// #3
   3f060:	str	w0, [sp, #124]
   3f064:	ldrb	w0, [sp, #63]
   3f068:	cmp	w0, #0xe0
   3f06c:	b.ne	3f128 <rpl_re_set_registers@@Base+0x8340>  // b.any
   3f070:	ldrb	w0, [sp, #62]
   3f074:	cmp	w0, #0x9f
   3f078:	b.hi	3f128 <rpl_re_set_registers@@Base+0x8340>  // b.pmore
   3f07c:	mov	w0, #0x0                   	// #0
   3f080:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f084:	ldrb	w0, [sp, #63]
   3f088:	cmp	w0, #0xf7
   3f08c:	b.hi	3f0b8 <rpl_re_set_registers@@Base+0x82d0>  // b.pmore
   3f090:	mov	w0, #0x4                   	// #4
   3f094:	str	w0, [sp, #124]
   3f098:	ldrb	w0, [sp, #63]
   3f09c:	cmp	w0, #0xf0
   3f0a0:	b.ne	3f128 <rpl_re_set_registers@@Base+0x8340>  // b.any
   3f0a4:	ldrb	w0, [sp, #62]
   3f0a8:	cmp	w0, #0x8f
   3f0ac:	b.hi	3f128 <rpl_re_set_registers@@Base+0x8340>  // b.pmore
   3f0b0:	mov	w0, #0x0                   	// #0
   3f0b4:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f0b8:	ldrb	w0, [sp, #63]
   3f0bc:	cmp	w0, #0xfb
   3f0c0:	b.hi	3f0ec <rpl_re_set_registers@@Base+0x8304>  // b.pmore
   3f0c4:	mov	w0, #0x5                   	// #5
   3f0c8:	str	w0, [sp, #124]
   3f0cc:	ldrb	w0, [sp, #63]
   3f0d0:	cmp	w0, #0xf8
   3f0d4:	b.ne	3f128 <rpl_re_set_registers@@Base+0x8340>  // b.any
   3f0d8:	ldrb	w0, [sp, #62]
   3f0dc:	cmp	w0, #0x87
   3f0e0:	b.hi	3f128 <rpl_re_set_registers@@Base+0x8340>  // b.pmore
   3f0e4:	mov	w0, #0x0                   	// #0
   3f0e8:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f0ec:	ldrb	w0, [sp, #63]
   3f0f0:	cmp	w0, #0xfd
   3f0f4:	b.hi	3f120 <rpl_re_set_registers@@Base+0x8338>  // b.pmore
   3f0f8:	mov	w0, #0x6                   	// #6
   3f0fc:	str	w0, [sp, #124]
   3f100:	ldrb	w0, [sp, #63]
   3f104:	cmp	w0, #0xfc
   3f108:	b.ne	3f128 <rpl_re_set_registers@@Base+0x8340>  // b.any
   3f10c:	ldrb	w0, [sp, #62]
   3f110:	cmp	w0, #0x83
   3f114:	b.hi	3f128 <rpl_re_set_registers@@Base+0x8340>  // b.pmore
   3f118:	mov	w0, #0x0                   	// #0
   3f11c:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f120:	mov	w0, #0x0                   	// #0
   3f124:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f128:	ldrsw	x1, [sp, #124]
   3f12c:	ldr	x0, [sp, #16]
   3f130:	add	x1, x1, x0
   3f134:	ldr	x0, [sp, #24]
   3f138:	ldr	x0, [x0, #88]
   3f13c:	cmp	x1, x0
   3f140:	b.le	3f14c <rpl_re_set_registers@@Base+0x8364>
   3f144:	mov	w0, #0x0                   	// #0
   3f148:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f14c:	mov	x0, #0x1                   	// #1
   3f150:	str	x0, [sp, #112]
   3f154:	b	3f1a4 <rpl_re_set_registers@@Base+0x83bc>
   3f158:	ldr	x0, [sp, #24]
   3f15c:	ldr	x0, [x0, #8]
   3f160:	ldr	x2, [sp, #16]
   3f164:	ldr	x1, [sp, #112]
   3f168:	add	x1, x2, x1
   3f16c:	add	x0, x0, x1
   3f170:	ldrb	w0, [x0]
   3f174:	strb	w0, [sp, #62]
   3f178:	ldrsb	w0, [sp, #62]
   3f17c:	cmp	w0, #0x0
   3f180:	b.ge	3f190 <rpl_re_set_registers@@Base+0x83a8>  // b.tcont
   3f184:	ldrb	w0, [sp, #62]
   3f188:	cmp	w0, #0xbf
   3f18c:	b.ls	3f198 <rpl_re_set_registers@@Base+0x83b0>  // b.plast
   3f190:	mov	w0, #0x0                   	// #0
   3f194:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f198:	ldr	x0, [sp, #112]
   3f19c:	add	x0, x0, #0x1
   3f1a0:	str	x0, [sp, #112]
   3f1a4:	ldrsw	x0, [sp, #124]
   3f1a8:	ldr	x1, [sp, #112]
   3f1ac:	cmp	x1, x0
   3f1b0:	b.lt	3f158 <rpl_re_set_registers@@Base+0x8370>  // b.tstop
   3f1b4:	ldr	w0, [sp, #124]
   3f1b8:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f1bc:	ldr	x1, [sp, #16]
   3f1c0:	ldr	x0, [sp, #24]
   3f1c4:	bl	28a70 <printf_parse@@Base+0x1778>
   3f1c8:	str	w0, [sp, #124]
   3f1cc:	ldr	x0, [sp, #96]
   3f1d0:	ldrb	w0, [x0, #8]
   3f1d4:	cmp	w0, #0x5
   3f1d8:	b.ne	3f260 <rpl_re_set_registers@@Base+0x8478>  // b.any
   3f1dc:	ldr	w0, [sp, #124]
   3f1e0:	cmp	w0, #0x1
   3f1e4:	b.gt	3f1f0 <rpl_re_set_registers@@Base+0x8408>
   3f1e8:	mov	w0, #0x0                   	// #0
   3f1ec:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f1f0:	ldr	x0, [sp, #40]
   3f1f4:	ldr	x0, [x0, #216]
   3f1f8:	and	x0, x0, #0x40
   3f1fc:	cmp	x0, #0x0
   3f200:	b.ne	3f220 <rpl_re_set_registers@@Base+0x8438>  // b.any
   3f204:	ldr	x0, [sp, #24]
   3f208:	ldr	x1, [x0, #8]
   3f20c:	ldr	x0, [sp, #16]
   3f210:	add	x0, x1, x0
   3f214:	ldrb	w0, [x0]
   3f218:	cmp	w0, #0xa
   3f21c:	b.eq	3f250 <rpl_re_set_registers@@Base+0x8468>  // b.none
   3f220:	ldr	x0, [sp, #40]
   3f224:	ldr	x0, [x0, #216]
   3f228:	and	x0, x0, #0x80
   3f22c:	cmp	x0, #0x0
   3f230:	b.eq	3f258 <rpl_re_set_registers@@Base+0x8470>  // b.none
   3f234:	ldr	x0, [sp, #24]
   3f238:	ldr	x1, [x0, #8]
   3f23c:	ldr	x0, [sp, #16]
   3f240:	add	x0, x1, x0
   3f244:	ldrb	w0, [x0]
   3f248:	cmp	w0, #0x0
   3f24c:	b.ne	3f258 <rpl_re_set_registers@@Base+0x8470>  // b.any
   3f250:	mov	w0, #0x0                   	// #0
   3f254:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f258:	ldr	w0, [sp, #124]
   3f25c:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f260:	ldr	x1, [sp, #16]
   3f264:	ldr	x0, [sp, #24]
   3f268:	bl	28b58 <printf_parse@@Base+0x1860>
   3f26c:	str	w0, [sp, #92]
   3f270:	ldr	w0, [sp, #92]
   3f274:	cmp	w0, #0x1
   3f278:	b.gt	3f288 <rpl_re_set_registers@@Base+0x84a0>
   3f27c:	ldr	w0, [sp, #124]
   3f280:	cmp	w0, #0x1
   3f284:	b.le	3f294 <rpl_re_set_registers@@Base+0x84ac>
   3f288:	ldr	w0, [sp, #124]
   3f28c:	cmp	w0, #0x0
   3f290:	b.ne	3f29c <rpl_re_set_registers@@Base+0x84b4>  // b.any
   3f294:	mov	w0, #0x0                   	// #0
   3f298:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f29c:	ldr	x0, [sp, #96]
   3f2a0:	ldrb	w0, [x0, #8]
   3f2a4:	cmp	w0, #0x6
   3f2a8:	b.ne	3f48c <rpl_re_set_registers@@Base+0x86a4>  // b.any
   3f2ac:	ldr	x0, [sp, #96]
   3f2b0:	ldr	x0, [x0]
   3f2b4:	str	x0, [sp, #80]
   3f2b8:	str	wzr, [sp, #108]
   3f2bc:	ldr	x0, [sp, #80]
   3f2c0:	ldr	x0, [x0, #64]
   3f2c4:	cmp	x0, #0x0
   3f2c8:	b.ne	3f2ec <rpl_re_set_registers@@Base+0x8504>  // b.any
   3f2cc:	ldr	x0, [sp, #80]
   3f2d0:	ldr	x0, [x0, #72]
   3f2d4:	cmp	x0, #0x0
   3f2d8:	b.ne	3f2ec <rpl_re_set_registers@@Base+0x8504>  // b.any
   3f2dc:	ldr	x0, [sp, #80]
   3f2e0:	ldr	x0, [x0, #40]
   3f2e4:	cmp	x0, #0x0
   3f2e8:	b.eq	3f2fc <rpl_re_set_registers@@Base+0x8514>  // b.none
   3f2ec:	ldr	x1, [sp, #16]
   3f2f0:	ldr	x0, [sp, #24]
   3f2f4:	bl	28b04 <printf_parse@@Base+0x180c>
   3f2f8:	b	3f300 <rpl_re_set_registers@@Base+0x8518>
   3f2fc:	mov	w0, #0x0                   	// #0
   3f300:	str	w0, [sp, #76]
   3f304:	str	xzr, [sp, #112]
   3f308:	b	3f348 <rpl_re_set_registers@@Base+0x8560>
   3f30c:	ldr	x0, [sp, #80]
   3f310:	ldr	x1, [x0]
   3f314:	ldr	x0, [sp, #112]
   3f318:	lsl	x0, x0, #2
   3f31c:	add	x0, x1, x0
   3f320:	ldr	w0, [x0]
   3f324:	ldr	w1, [sp, #76]
   3f328:	cmp	w1, w0
   3f32c:	b.ne	3f33c <rpl_re_set_registers@@Base+0x8554>  // b.any
   3f330:	ldr	w0, [sp, #124]
   3f334:	str	w0, [sp, #108]
   3f338:	b	3f440 <rpl_re_set_registers@@Base+0x8658>
   3f33c:	ldr	x0, [sp, #112]
   3f340:	add	x0, x0, #0x1
   3f344:	str	x0, [sp, #112]
   3f348:	ldr	x0, [sp, #80]
   3f34c:	ldr	x0, [x0, #40]
   3f350:	ldr	x1, [sp, #112]
   3f354:	cmp	x1, x0
   3f358:	b.lt	3f30c <rpl_re_set_registers@@Base+0x8524>  // b.tstop
   3f35c:	str	xzr, [sp, #112]
   3f360:	b	3f3ac <rpl_re_set_registers@@Base+0x85c4>
   3f364:	ldr	x0, [sp, #80]
   3f368:	ldr	x1, [x0, #24]
   3f36c:	ldr	x0, [sp, #112]
   3f370:	lsl	x0, x0, #3
   3f374:	add	x0, x1, x0
   3f378:	ldr	x0, [x0]
   3f37c:	str	x0, [sp, #64]
   3f380:	ldr	x1, [sp, #64]
   3f384:	ldr	w0, [sp, #76]
   3f388:	bl	ab30 <iswctype@plt>
   3f38c:	cmp	w0, #0x0
   3f390:	b.eq	3f3a0 <rpl_re_set_registers@@Base+0x85b8>  // b.none
   3f394:	ldr	w0, [sp, #124]
   3f398:	str	w0, [sp, #108]
   3f39c:	b	3f440 <rpl_re_set_registers@@Base+0x8658>
   3f3a0:	ldr	x0, [sp, #112]
   3f3a4:	add	x0, x0, #0x1
   3f3a8:	str	x0, [sp, #112]
   3f3ac:	ldr	x0, [sp, #80]
   3f3b0:	ldr	x0, [x0, #72]
   3f3b4:	ldr	x1, [sp, #112]
   3f3b8:	cmp	x1, x0
   3f3bc:	b.lt	3f364 <rpl_re_set_registers@@Base+0x857c>  // b.tstop
   3f3c0:	str	xzr, [sp, #112]
   3f3c4:	b	3f428 <rpl_re_set_registers@@Base+0x8640>
   3f3c8:	ldr	x0, [sp, #80]
   3f3cc:	ldr	x1, [x0, #8]
   3f3d0:	ldr	x0, [sp, #112]
   3f3d4:	lsl	x0, x0, #2
   3f3d8:	add	x0, x1, x0
   3f3dc:	ldr	w0, [x0]
   3f3e0:	ldr	w1, [sp, #76]
   3f3e4:	cmp	w1, w0
   3f3e8:	b.cc	3f41c <rpl_re_set_registers@@Base+0x8634>  // b.lo, b.ul, b.last
   3f3ec:	ldr	x0, [sp, #80]
   3f3f0:	ldr	x1, [x0, #16]
   3f3f4:	ldr	x0, [sp, #112]
   3f3f8:	lsl	x0, x0, #2
   3f3fc:	add	x0, x1, x0
   3f400:	ldr	w0, [x0]
   3f404:	ldr	w1, [sp, #76]
   3f408:	cmp	w1, w0
   3f40c:	b.hi	3f41c <rpl_re_set_registers@@Base+0x8634>  // b.pmore
   3f410:	ldr	w0, [sp, #124]
   3f414:	str	w0, [sp, #108]
   3f418:	b	3f440 <rpl_re_set_registers@@Base+0x8658>
   3f41c:	ldr	x0, [sp, #112]
   3f420:	add	x0, x0, #0x1
   3f424:	str	x0, [sp, #112]
   3f428:	ldr	x0, [sp, #80]
   3f42c:	ldr	x0, [x0, #64]
   3f430:	ldr	x1, [sp, #112]
   3f434:	cmp	x1, x0
   3f438:	b.lt	3f3c8 <rpl_re_set_registers@@Base+0x85e0>  // b.tstop
   3f43c:	nop
   3f440:	ldr	x0, [sp, #80]
   3f444:	ldrb	w0, [x0, #32]
   3f448:	and	w0, w0, #0x1
   3f44c:	and	w0, w0, #0xff
   3f450:	cmp	w0, #0x0
   3f454:	b.ne	3f460 <rpl_re_set_registers@@Base+0x8678>  // b.any
   3f458:	ldr	w0, [sp, #108]
   3f45c:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f460:	ldr	w0, [sp, #108]
   3f464:	cmp	w0, #0x0
   3f468:	b.le	3f474 <rpl_re_set_registers@@Base+0x868c>
   3f46c:	mov	w0, #0x0                   	// #0
   3f470:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f474:	ldr	w0, [sp, #92]
   3f478:	ldr	w2, [sp, #124]
   3f47c:	ldr	w1, [sp, #124]
   3f480:	cmp	w2, w0
   3f484:	csel	w0, w1, w0, ge  // ge = tcont
   3f488:	b	3f490 <rpl_re_set_registers@@Base+0x86a8>
   3f48c:	mov	w0, #0x0                   	// #0
   3f490:	ldp	x29, x30, [sp], #128
   3f494:	ret
   3f498:	stp	x29, x30, [sp, #-64]!
   3f49c:	mov	x29, sp
   3f4a0:	str	x0, [sp, #40]
   3f4a4:	str	x1, [sp, #32]
   3f4a8:	str	x2, [sp, #24]
   3f4ac:	ldr	x0, [sp, #40]
   3f4b0:	ldr	x1, [x0, #8]
   3f4b4:	ldr	x0, [sp, #24]
   3f4b8:	add	x0, x1, x0
   3f4bc:	ldrb	w0, [x0]
   3f4c0:	strb	w0, [sp, #63]
   3f4c4:	ldr	x0, [sp, #32]
   3f4c8:	ldrb	w0, [x0, #8]
   3f4cc:	cmp	w0, #0x7
   3f4d0:	b.eq	3f548 <rpl_re_set_registers@@Base+0x8760>  // b.none
   3f4d4:	cmp	w0, #0x7
   3f4d8:	b.gt	3f5ac <rpl_re_set_registers@@Base+0x87c4>
   3f4dc:	cmp	w0, #0x5
   3f4e0:	b.eq	3f55c <rpl_re_set_registers@@Base+0x8774>  // b.none
   3f4e4:	cmp	w0, #0x5
   3f4e8:	b.gt	3f5ac <rpl_re_set_registers@@Base+0x87c4>
   3f4ec:	cmp	w0, #0x1
   3f4f0:	b.eq	3f500 <rpl_re_set_registers@@Base+0x8718>  // b.none
   3f4f4:	cmp	w0, #0x3
   3f4f8:	b.eq	3f51c <rpl_re_set_registers@@Base+0x8734>  // b.none
   3f4fc:	b	3f5ac <rpl_re_set_registers@@Base+0x87c4>
   3f500:	ldr	x0, [sp, #32]
   3f504:	ldrb	w0, [x0]
   3f508:	ldrb	w1, [sp, #63]
   3f50c:	cmp	w1, w0
   3f510:	b.eq	3f5b4 <rpl_re_set_registers@@Base+0x87cc>  // b.none
   3f514:	mov	w0, #0x0                   	// #0
   3f518:	b	3f6b8 <rpl_re_set_registers@@Base+0x88d0>
   3f51c:	ldr	x0, [sp, #32]
   3f520:	ldr	x0, [x0]
   3f524:	ldrb	w1, [sp, #63]
   3f528:	bl	28838 <printf_parse@@Base+0x1540>
   3f52c:	and	w0, w0, #0xff
   3f530:	eor	w0, w0, #0x1
   3f534:	and	w0, w0, #0xff
   3f538:	cmp	w0, #0x0
   3f53c:	b.eq	3f5bc <rpl_re_set_registers@@Base+0x87d4>  // b.none
   3f540:	mov	w0, #0x0                   	// #0
   3f544:	b	3f6b8 <rpl_re_set_registers@@Base+0x88d0>
   3f548:	ldrsb	w0, [sp, #63]
   3f54c:	cmp	w0, #0x0
   3f550:	b.ge	3f55c <rpl_re_set_registers@@Base+0x8774>  // b.tcont
   3f554:	mov	w0, #0x0                   	// #0
   3f558:	b	3f6b8 <rpl_re_set_registers@@Base+0x88d0>
   3f55c:	ldrb	w0, [sp, #63]
   3f560:	cmp	w0, #0xa
   3f564:	b.ne	3f580 <rpl_re_set_registers@@Base+0x8798>  // b.any
   3f568:	ldr	x0, [sp, #40]
   3f56c:	ldr	x0, [x0, #152]
   3f570:	ldr	x0, [x0, #216]
   3f574:	and	x0, x0, #0x40
   3f578:	cmp	x0, #0x0
   3f57c:	b.eq	3f5a4 <rpl_re_set_registers@@Base+0x87bc>  // b.none
   3f580:	ldrb	w0, [sp, #63]
   3f584:	cmp	w0, #0x0
   3f588:	b.ne	3f5c4 <rpl_re_set_registers@@Base+0x87dc>  // b.any
   3f58c:	ldr	x0, [sp, #40]
   3f590:	ldr	x0, [x0, #152]
   3f594:	ldr	x0, [x0, #216]
   3f598:	and	x0, x0, #0x80
   3f59c:	cmp	x0, #0x0
   3f5a0:	b.eq	3f5c4 <rpl_re_set_registers@@Base+0x87dc>  // b.none
   3f5a4:	mov	w0, #0x0                   	// #0
   3f5a8:	b	3f6b8 <rpl_re_set_registers@@Base+0x88d0>
   3f5ac:	mov	w0, #0x0                   	// #0
   3f5b0:	b	3f6b8 <rpl_re_set_registers@@Base+0x88d0>
   3f5b4:	nop
   3f5b8:	b	3f5c8 <rpl_re_set_registers@@Base+0x87e0>
   3f5bc:	nop
   3f5c0:	b	3f5c8 <rpl_re_set_registers@@Base+0x87e0>
   3f5c4:	nop
   3f5c8:	ldr	x0, [sp, #32]
   3f5cc:	ldr	w0, [x0, #8]
   3f5d0:	and	w0, w0, #0x3ff00
   3f5d4:	cmp	w0, #0x0
   3f5d8:	b.eq	3f6b4 <rpl_re_set_registers@@Base+0x88cc>  // b.none
   3f5dc:	ldr	x3, [sp, #40]
   3f5e0:	ldr	x0, [sp, #40]
   3f5e4:	ldr	w0, [x0, #160]
   3f5e8:	mov	w2, w0
   3f5ec:	ldr	x1, [sp, #24]
   3f5f0:	mov	x0, x3
   3f5f4:	bl	2b2dc <printf_parse@@Base+0x3fe4>
   3f5f8:	str	w0, [sp, #56]
   3f5fc:	ldr	x0, [sp, #32]
   3f600:	ldr	w0, [x0, #8]
   3f604:	ubfx	x0, x0, #8, #10
   3f608:	and	w0, w0, #0xffff
   3f60c:	and	w0, w0, #0x4
   3f610:	cmp	w0, #0x0
   3f614:	b.eq	3f628 <rpl_re_set_registers@@Base+0x8840>  // b.none
   3f618:	ldr	w0, [sp, #56]
   3f61c:	and	w0, w0, #0x1
   3f620:	cmp	w0, #0x0
   3f624:	b.eq	3f6ac <rpl_re_set_registers@@Base+0x88c4>  // b.none
   3f628:	ldr	x0, [sp, #32]
   3f62c:	ldr	w0, [x0, #8]
   3f630:	ubfx	x0, x0, #8, #10
   3f634:	and	w0, w0, #0xffff
   3f638:	and	w0, w0, #0x8
   3f63c:	cmp	w0, #0x0
   3f640:	b.eq	3f654 <rpl_re_set_registers@@Base+0x886c>  // b.none
   3f644:	ldr	w0, [sp, #56]
   3f648:	and	w0, w0, #0x1
   3f64c:	cmp	w0, #0x0
   3f650:	b.ne	3f6ac <rpl_re_set_registers@@Base+0x88c4>  // b.any
   3f654:	ldr	x0, [sp, #32]
   3f658:	ldr	w0, [x0, #8]
   3f65c:	ubfx	x0, x0, #8, #10
   3f660:	and	w0, w0, #0xffff
   3f664:	and	w0, w0, #0x20
   3f668:	cmp	w0, #0x0
   3f66c:	b.eq	3f680 <rpl_re_set_registers@@Base+0x8898>  // b.none
   3f670:	ldr	w0, [sp, #56]
   3f674:	and	w0, w0, #0x2
   3f678:	cmp	w0, #0x0
   3f67c:	b.eq	3f6ac <rpl_re_set_registers@@Base+0x88c4>  // b.none
   3f680:	ldr	x0, [sp, #32]
   3f684:	ldr	w0, [x0, #8]
   3f688:	ubfx	x0, x0, #8, #10
   3f68c:	and	w0, w0, #0xffff
   3f690:	and	w0, w0, #0x80
   3f694:	cmp	w0, #0x0
   3f698:	b.eq	3f6b4 <rpl_re_set_registers@@Base+0x88cc>  // b.none
   3f69c:	ldr	w0, [sp, #56]
   3f6a0:	and	w0, w0, #0x8
   3f6a4:	cmp	w0, #0x0
   3f6a8:	b.ne	3f6b4 <rpl_re_set_registers@@Base+0x88cc>  // b.any
   3f6ac:	mov	w0, #0x0                   	// #0
   3f6b0:	b	3f6b8 <rpl_re_set_registers@@Base+0x88d0>
   3f6b4:	mov	w0, #0x1                   	// #1
   3f6b8:	ldp	x29, x30, [sp], #64
   3f6bc:	ret
   3f6c0:	stp	x29, x30, [sp, #-64]!
   3f6c4:	mov	x29, sp
   3f6c8:	str	x0, [sp, #24]
   3f6cc:	str	w1, [sp, #20]
   3f6d0:	ldr	x0, [sp, #24]
   3f6d4:	str	x0, [sp, #56]
   3f6d8:	ldr	x0, [sp, #56]
   3f6dc:	ldr	x0, [x0, #64]
   3f6e0:	mov	x1, x0
   3f6e4:	mov	x0, #0xffffffffffffffe     	// #1152921504606846974
   3f6e8:	cmp	x1, x0
   3f6ec:	cset	w0, hi  // hi = pmore
   3f6f0:	and	w0, w0, #0xff
   3f6f4:	and	x0, x0, #0xff
   3f6f8:	cmp	x0, #0x0
   3f6fc:	b.eq	3f708 <rpl_re_set_registers@@Base+0x8920>  // b.none
   3f700:	mov	w0, #0xc                   	// #12
   3f704:	b	3f860 <rpl_re_set_registers@@Base+0x8a78>
   3f708:	ldrsw	x1, [sp, #20]
   3f70c:	ldr	x0, [sp, #56]
   3f710:	ldr	x0, [x0, #64]
   3f714:	lsl	x2, x0, #1
   3f718:	ldr	x0, [sp, #56]
   3f71c:	ldr	x0, [x0, #88]
   3f720:	cmp	x2, x0
   3f724:	csel	x0, x2, x0, le
   3f728:	cmp	x1, x0
   3f72c:	csel	x0, x1, x0, ge  // ge = tcont
   3f730:	mov	x1, x0
   3f734:	ldr	x0, [sp, #56]
   3f738:	bl	28ecc <printf_parse@@Base+0x1bd4>
   3f73c:	str	w0, [sp, #52]
   3f740:	ldr	w0, [sp, #52]
   3f744:	cmp	w0, #0x0
   3f748:	cset	w0, ne  // ne = any
   3f74c:	and	w0, w0, #0xff
   3f750:	and	x0, x0, #0xff
   3f754:	cmp	x0, #0x0
   3f758:	b.eq	3f764 <rpl_re_set_registers@@Base+0x897c>  // b.none
   3f75c:	ldr	w0, [sp, #52]
   3f760:	b	3f860 <rpl_re_set_registers@@Base+0x8a78>
   3f764:	ldr	x0, [sp, #24]
   3f768:	ldr	x0, [x0, #184]
   3f76c:	cmp	x0, #0x0
   3f770:	b.eq	3f7cc <rpl_re_set_registers@@Base+0x89e4>  // b.none
   3f774:	ldr	x0, [sp, #24]
   3f778:	ldr	x2, [x0, #184]
   3f77c:	ldr	x0, [sp, #56]
   3f780:	ldr	x0, [x0, #64]
   3f784:	add	x0, x0, #0x1
   3f788:	lsl	x0, x0, #3
   3f78c:	mov	x1, x0
   3f790:	mov	x0, x2
   3f794:	bl	ae00 <realloc@plt>
   3f798:	str	x0, [sp, #40]
   3f79c:	ldr	x0, [sp, #40]
   3f7a0:	cmp	x0, #0x0
   3f7a4:	cset	w0, eq  // eq = none
   3f7a8:	and	w0, w0, #0xff
   3f7ac:	and	x0, x0, #0xff
   3f7b0:	cmp	x0, #0x0
   3f7b4:	b.eq	3f7c0 <rpl_re_set_registers@@Base+0x89d8>  // b.none
   3f7b8:	mov	w0, #0xc                   	// #12
   3f7bc:	b	3f860 <rpl_re_set_registers@@Base+0x8a78>
   3f7c0:	ldr	x0, [sp, #24]
   3f7c4:	ldr	x1, [sp, #40]
   3f7c8:	str	x1, [x0, #184]
   3f7cc:	ldr	x0, [sp, #56]
   3f7d0:	ldrb	w0, [x0, #136]
   3f7d4:	cmp	w0, #0x0
   3f7d8:	b.eq	3f828 <rpl_re_set_registers@@Base+0x8a40>  // b.none
   3f7dc:	ldr	x0, [sp, #56]
   3f7e0:	ldr	w0, [x0, #144]
   3f7e4:	cmp	w0, #0x1
   3f7e8:	b.le	3f81c <rpl_re_set_registers@@Base+0x8a34>
   3f7ec:	ldr	x0, [sp, #56]
   3f7f0:	bl	294b0 <printf_parse@@Base+0x21b8>
   3f7f4:	str	w0, [sp, #52]
   3f7f8:	ldr	w0, [sp, #52]
   3f7fc:	cmp	w0, #0x0
   3f800:	cset	w0, ne  // ne = any
   3f804:	and	w0, w0, #0xff
   3f808:	and	x0, x0, #0xff
   3f80c:	cmp	x0, #0x0
   3f810:	b.eq	3f85c <rpl_re_set_registers@@Base+0x8a74>  // b.none
   3f814:	ldr	w0, [sp, #52]
   3f818:	b	3f860 <rpl_re_set_registers@@Base+0x8a78>
   3f81c:	ldr	x0, [sp, #56]
   3f820:	bl	2a124 <printf_parse@@Base+0x2e2c>
   3f824:	b	3f85c <rpl_re_set_registers@@Base+0x8a74>
   3f828:	ldr	x0, [sp, #56]
   3f82c:	ldr	w0, [x0, #144]
   3f830:	cmp	w0, #0x1
   3f834:	b.le	3f844 <rpl_re_set_registers@@Base+0x8a5c>
   3f838:	ldr	x0, [sp, #56]
   3f83c:	bl	29158 <printf_parse@@Base+0x1e60>
   3f840:	b	3f85c <rpl_re_set_registers@@Base+0x8a74>
   3f844:	ldr	x0, [sp, #56]
   3f848:	ldr	x0, [x0, #120]
   3f84c:	cmp	x0, #0x0
   3f850:	b.eq	3f85c <rpl_re_set_registers@@Base+0x8a74>  // b.none
   3f854:	ldr	x0, [sp, #56]
   3f858:	bl	2a21c <printf_parse@@Base+0x2f24>
   3f85c:	mov	w0, #0x0                   	// #0
   3f860:	ldp	x29, x30, [sp], #64
   3f864:	ret
   3f868:	stp	x29, x30, [sp, #-64]!
   3f86c:	mov	x29, sp
   3f870:	str	x0, [sp, #40]
   3f874:	str	w1, [sp, #36]
   3f878:	str	x2, [sp, #24]
   3f87c:	ldr	x0, [sp, #40]
   3f880:	ldr	w1, [sp, #36]
   3f884:	str	w1, [x0, #160]
   3f888:	ldr	x0, [sp, #40]
   3f88c:	mov	x1, #0xffffffffffffffff    	// #-1
   3f890:	str	x1, [x0, #168]
   3f894:	ldr	x0, [sp, #24]
   3f898:	cmp	x0, #0x0
   3f89c:	b.le	3f978 <rpl_re_set_registers@@Base+0x8b90>
   3f8a0:	mov	x0, #0x28                  	// #40
   3f8a4:	str	x0, [sp, #56]
   3f8a8:	mov	x1, #0xffffffffffffffff    	// #-1
   3f8ac:	ldr	x0, [sp, #56]
   3f8b0:	udiv	x0, x1, x0
   3f8b4:	cmp	x0, #0x0
   3f8b8:	b.lt	3f8cc <rpl_re_set_registers@@Base+0x8ae4>  // b.tstop
   3f8bc:	mov	x1, #0xffffffffffffffff    	// #-1
   3f8c0:	ldr	x0, [sp, #56]
   3f8c4:	udiv	x0, x1, x0
   3f8c8:	b	3f8d0 <rpl_re_set_registers@@Base+0x8ae8>
   3f8cc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3f8d0:	ldr	x1, [sp, #24]
   3f8d4:	cmp	x0, x1
   3f8d8:	cset	w0, cc  // cc = lo, ul, last
   3f8dc:	and	w0, w0, #0xff
   3f8e0:	and	x0, x0, #0xff
   3f8e4:	cmp	x0, #0x0
   3f8e8:	b.eq	3f8f4 <rpl_re_set_registers@@Base+0x8b0c>  // b.none
   3f8ec:	mov	w0, #0xc                   	// #12
   3f8f0:	b	3f9a0 <rpl_re_set_registers@@Base+0x8bb8>
   3f8f4:	ldr	x1, [sp, #24]
   3f8f8:	mov	x0, x1
   3f8fc:	lsl	x0, x0, #2
   3f900:	add	x0, x0, x1
   3f904:	lsl	x0, x0, #3
   3f908:	bl	ab40 <malloc@plt>
   3f90c:	mov	x1, x0
   3f910:	ldr	x0, [sp, #40]
   3f914:	str	x1, [x0, #216]
   3f918:	ldr	x0, [sp, #24]
   3f91c:	lsl	x0, x0, #3
   3f920:	bl	ab40 <malloc@plt>
   3f924:	mov	x1, x0
   3f928:	ldr	x0, [sp, #40]
   3f92c:	str	x1, [x0, #248]
   3f930:	ldr	x0, [sp, #40]
   3f934:	ldr	x0, [x0, #216]
   3f938:	cmp	x0, #0x0
   3f93c:	cset	w0, eq  // eq = none
   3f940:	and	w0, w0, #0xff
   3f944:	and	x0, x0, #0xff
   3f948:	cmp	x0, #0x0
   3f94c:	b.ne	3f970 <rpl_re_set_registers@@Base+0x8b88>  // b.any
   3f950:	ldr	x0, [sp, #40]
   3f954:	ldr	x0, [x0, #248]
   3f958:	cmp	x0, #0x0
   3f95c:	cset	w0, eq  // eq = none
   3f960:	and	w0, w0, #0xff
   3f964:	and	x0, x0, #0xff
   3f968:	cmp	x0, #0x0
   3f96c:	b.eq	3f978 <rpl_re_set_registers@@Base+0x8b90>  // b.none
   3f970:	mov	w0, #0xc                   	// #12
   3f974:	b	3f9a0 <rpl_re_set_registers@@Base+0x8bb8>
   3f978:	ldr	x0, [sp, #40]
   3f97c:	ldr	x1, [sp, #24]
   3f980:	str	x1, [x0, #208]
   3f984:	ldr	x0, [sp, #40]
   3f988:	mov	w1, #0x1                   	// #1
   3f98c:	str	w1, [x0, #224]
   3f990:	ldr	x0, [sp, #40]
   3f994:	ldr	x1, [sp, #24]
   3f998:	str	x1, [x0, #240]
   3f99c:	mov	w0, #0x0                   	// #0
   3f9a0:	ldp	x29, x30, [sp], #64
   3f9a4:	ret
   3f9a8:	stp	x29, x30, [sp, #-64]!
   3f9ac:	mov	x29, sp
   3f9b0:	str	x0, [sp, #24]
   3f9b4:	str	xzr, [sp, #56]
   3f9b8:	b	3fa7c <rpl_re_set_registers@@Base+0x8c94>
   3f9bc:	ldr	x0, [sp, #24]
   3f9c0:	ldr	x1, [x0, #248]
   3f9c4:	ldr	x0, [sp, #56]
   3f9c8:	lsl	x0, x0, #3
   3f9cc:	add	x0, x1, x0
   3f9d0:	ldr	x0, [x0]
   3f9d4:	str	x0, [sp, #40]
   3f9d8:	str	xzr, [sp, #48]
   3f9dc:	b	3fa1c <rpl_re_set_registers@@Base+0x8c34>
   3f9e0:	ldr	x0, [sp, #40]
   3f9e4:	ldr	x1, [x0, #40]
   3f9e8:	ldr	x0, [sp, #48]
   3f9ec:	lsl	x0, x0, #3
   3f9f0:	add	x0, x1, x0
   3f9f4:	ldr	x0, [x0]
   3f9f8:	str	x0, [sp, #32]
   3f9fc:	ldr	x0, [sp, #32]
   3fa00:	ldr	x0, [x0, #32]
   3fa04:	bl	b130 <free@plt>
   3fa08:	ldr	x0, [sp, #32]
   3fa0c:	bl	b130 <free@plt>
   3fa10:	ldr	x0, [sp, #48]
   3fa14:	add	x0, x0, #0x1
   3fa18:	str	x0, [sp, #48]
   3fa1c:	ldr	x0, [sp, #40]
   3fa20:	ldr	x0, [x0, #32]
   3fa24:	ldr	x1, [sp, #48]
   3fa28:	cmp	x1, x0
   3fa2c:	b.lt	3f9e0 <rpl_re_set_registers@@Base+0x8bf8>  // b.tstop
   3fa30:	ldr	x0, [sp, #40]
   3fa34:	ldr	x0, [x0, #40]
   3fa38:	bl	b130 <free@plt>
   3fa3c:	ldr	x0, [sp, #40]
   3fa40:	ldr	x0, [x0, #16]
   3fa44:	cmp	x0, #0x0
   3fa48:	b.eq	3fa68 <rpl_re_set_registers@@Base+0x8c80>  // b.none
   3fa4c:	ldr	x0, [sp, #40]
   3fa50:	ldr	x0, [x0, #16]
   3fa54:	ldr	x0, [x0, #16]
   3fa58:	bl	b130 <free@plt>
   3fa5c:	ldr	x0, [sp, #40]
   3fa60:	ldr	x0, [x0, #16]
   3fa64:	bl	b130 <free@plt>
   3fa68:	ldr	x0, [sp, #40]
   3fa6c:	bl	b130 <free@plt>
   3fa70:	ldr	x0, [sp, #56]
   3fa74:	add	x0, x0, #0x1
   3fa78:	str	x0, [sp, #56]
   3fa7c:	ldr	x0, [sp, #24]
   3fa80:	ldr	x0, [x0, #232]
   3fa84:	ldr	x1, [sp, #56]
   3fa88:	cmp	x1, x0
   3fa8c:	b.lt	3f9bc <rpl_re_set_registers@@Base+0x8bd4>  // b.tstop
   3fa90:	ldr	x0, [sp, #24]
   3fa94:	str	xzr, [x0, #232]
   3fa98:	ldr	x0, [sp, #24]
   3fa9c:	str	xzr, [x0, #200]
   3faa0:	nop
   3faa4:	ldp	x29, x30, [sp], #64
   3faa8:	ret
   3faac:	stp	x29, x30, [sp, #-32]!
   3fab0:	mov	x29, sp
   3fab4:	str	x0, [sp, #24]
   3fab8:	ldr	x0, [sp, #24]
   3fabc:	bl	3f9a8 <rpl_re_set_registers@@Base+0x8bc0>
   3fac0:	ldr	x0, [sp, #24]
   3fac4:	ldr	x0, [x0, #248]
   3fac8:	bl	b130 <free@plt>
   3facc:	ldr	x0, [sp, #24]
   3fad0:	ldr	x0, [x0, #216]
   3fad4:	bl	b130 <free@plt>
   3fad8:	nop
   3fadc:	ldp	x29, x30, [sp], #32
   3fae0:	ret
   3fae4:	stp	x29, x30, [sp, #-80]!
   3fae8:	mov	x29, sp
   3faec:	str	x0, [sp, #56]
   3faf0:	str	x1, [sp, #48]
   3faf4:	str	x2, [sp, #40]
   3faf8:	str	x3, [sp, #32]
   3fafc:	str	x4, [sp, #24]
   3fb00:	ldr	x0, [sp, #56]
   3fb04:	ldr	x1, [x0, #200]
   3fb08:	ldr	x0, [sp, #56]
   3fb0c:	ldr	x0, [x0, #208]
   3fb10:	cmp	x1, x0
   3fb14:	b.lt	3fbf0 <rpl_re_set_registers@@Base+0x8e08>  // b.tstop
   3fb18:	ldr	x0, [sp, #56]
   3fb1c:	ldr	x2, [x0, #216]
   3fb20:	ldr	x0, [sp, #56]
   3fb24:	ldr	x0, [x0, #208]
   3fb28:	mov	x1, x0
   3fb2c:	mov	x0, x1
   3fb30:	lsl	x0, x0, #2
   3fb34:	add	x0, x0, x1
   3fb38:	lsl	x0, x0, #4
   3fb3c:	mov	x1, x0
   3fb40:	mov	x0, x2
   3fb44:	bl	ae00 <realloc@plt>
   3fb48:	str	x0, [sp, #72]
   3fb4c:	ldr	x0, [sp, #72]
   3fb50:	cmp	x0, #0x0
   3fb54:	cset	w0, eq  // eq = none
   3fb58:	and	w0, w0, #0xff
   3fb5c:	and	x0, x0, #0xff
   3fb60:	cmp	x0, #0x0
   3fb64:	b.eq	3fb7c <rpl_re_set_registers@@Base+0x8d94>  // b.none
   3fb68:	ldr	x0, [sp, #56]
   3fb6c:	ldr	x0, [x0, #216]
   3fb70:	bl	b130 <free@plt>
   3fb74:	mov	w0, #0xc                   	// #12
   3fb78:	b	3fdf4 <rpl_re_set_registers@@Base+0x900c>
   3fb7c:	ldr	x0, [sp, #56]
   3fb80:	ldr	x1, [sp, #72]
   3fb84:	str	x1, [x0, #216]
   3fb88:	ldr	x0, [sp, #56]
   3fb8c:	ldr	x1, [x0, #216]
   3fb90:	ldr	x0, [sp, #56]
   3fb94:	ldr	x0, [x0, #200]
   3fb98:	mov	x2, x0
   3fb9c:	mov	x0, x2
   3fba0:	lsl	x0, x0, #2
   3fba4:	add	x0, x0, x2
   3fba8:	lsl	x0, x0, #3
   3fbac:	add	x3, x1, x0
   3fbb0:	ldr	x0, [sp, #56]
   3fbb4:	ldr	x0, [x0, #208]
   3fbb8:	mov	x1, x0
   3fbbc:	mov	x0, x1
   3fbc0:	lsl	x0, x0, #2
   3fbc4:	add	x0, x0, x1
   3fbc8:	lsl	x0, x0, #3
   3fbcc:	mov	x2, x0
   3fbd0:	mov	w1, #0x0                   	// #0
   3fbd4:	mov	x0, x3
   3fbd8:	bl	acb0 <memset@plt>
   3fbdc:	ldr	x0, [sp, #56]
   3fbe0:	ldr	x0, [x0, #208]
   3fbe4:	lsl	x1, x0, #1
   3fbe8:	ldr	x0, [sp, #56]
   3fbec:	str	x1, [x0, #208]
   3fbf0:	ldr	x0, [sp, #56]
   3fbf4:	ldr	x0, [x0, #200]
   3fbf8:	cmp	x0, #0x0
   3fbfc:	b.le	3fc70 <rpl_re_set_registers@@Base+0x8e88>
   3fc00:	ldr	x0, [sp, #56]
   3fc04:	ldr	x1, [x0, #216]
   3fc08:	ldr	x0, [sp, #56]
   3fc0c:	ldr	x0, [x0, #200]
   3fc10:	mov	x2, x0
   3fc14:	mov	x0, x2
   3fc18:	lsl	x0, x0, #2
   3fc1c:	add	x0, x0, x2
   3fc20:	lsl	x0, x0, #3
   3fc24:	sub	x0, x0, #0x28
   3fc28:	add	x0, x1, x0
   3fc2c:	ldr	x0, [x0, #8]
   3fc30:	ldr	x1, [sp, #40]
   3fc34:	cmp	x1, x0
   3fc38:	b.ne	3fc70 <rpl_re_set_registers@@Base+0x8e88>  // b.any
   3fc3c:	ldr	x0, [sp, #56]
   3fc40:	ldr	x1, [x0, #216]
   3fc44:	ldr	x0, [sp, #56]
   3fc48:	ldr	x0, [x0, #200]
   3fc4c:	mov	x2, x0
   3fc50:	mov	x0, x2
   3fc54:	lsl	x0, x0, #2
   3fc58:	add	x0, x0, x2
   3fc5c:	lsl	x0, x0, #3
   3fc60:	sub	x0, x0, #0x28
   3fc64:	add	x0, x1, x0
   3fc68:	mov	w1, #0x1                   	// #1
   3fc6c:	strb	w1, [x0, #32]
   3fc70:	ldr	x0, [sp, #56]
   3fc74:	ldr	x1, [x0, #216]
   3fc78:	ldr	x0, [sp, #56]
   3fc7c:	ldr	x0, [x0, #200]
   3fc80:	mov	x2, x0
   3fc84:	mov	x0, x2
   3fc88:	lsl	x0, x0, #2
   3fc8c:	add	x0, x0, x2
   3fc90:	lsl	x0, x0, #3
   3fc94:	add	x0, x1, x0
   3fc98:	ldr	x1, [sp, #48]
   3fc9c:	str	x1, [x0]
   3fca0:	ldr	x0, [sp, #56]
   3fca4:	ldr	x1, [x0, #216]
   3fca8:	ldr	x0, [sp, #56]
   3fcac:	ldr	x0, [x0, #200]
   3fcb0:	mov	x2, x0
   3fcb4:	mov	x0, x2
   3fcb8:	lsl	x0, x0, #2
   3fcbc:	add	x0, x0, x2
   3fcc0:	lsl	x0, x0, #3
   3fcc4:	add	x0, x1, x0
   3fcc8:	ldr	x1, [sp, #40]
   3fccc:	str	x1, [x0, #8]
   3fcd0:	ldr	x0, [sp, #56]
   3fcd4:	ldr	x1, [x0, #216]
   3fcd8:	ldr	x0, [sp, #56]
   3fcdc:	ldr	x0, [x0, #200]
   3fce0:	mov	x2, x0
   3fce4:	mov	x0, x2
   3fce8:	lsl	x0, x0, #2
   3fcec:	add	x0, x0, x2
   3fcf0:	lsl	x0, x0, #3
   3fcf4:	add	x0, x1, x0
   3fcf8:	ldr	x1, [sp, #32]
   3fcfc:	str	x1, [x0, #16]
   3fd00:	ldr	x0, [sp, #56]
   3fd04:	ldr	x1, [x0, #216]
   3fd08:	ldr	x0, [sp, #56]
   3fd0c:	ldr	x0, [x0, #200]
   3fd10:	mov	x2, x0
   3fd14:	mov	x0, x2
   3fd18:	lsl	x0, x0, #2
   3fd1c:	add	x0, x0, x2
   3fd20:	lsl	x0, x0, #3
   3fd24:	add	x0, x1, x0
   3fd28:	ldr	x1, [sp, #24]
   3fd2c:	str	x1, [x0, #24]
   3fd30:	ldr	x1, [sp, #32]
   3fd34:	ldr	x0, [sp, #24]
   3fd38:	cmp	x1, x0
   3fd3c:	b.ne	3fd48 <rpl_re_set_registers@@Base+0x8f60>  // b.any
   3fd40:	mov	w2, #0xffff                	// #65535
   3fd44:	b	3fd4c <rpl_re_set_registers@@Base+0x8f64>
   3fd48:	mov	w2, #0x0                   	// #0
   3fd4c:	ldr	x0, [sp, #56]
   3fd50:	ldr	x1, [x0, #216]
   3fd54:	ldr	x0, [sp, #56]
   3fd58:	ldr	x0, [x0, #200]
   3fd5c:	mov	x3, x0
   3fd60:	mov	x0, x3
   3fd64:	lsl	x0, x0, #2
   3fd68:	add	x0, x0, x3
   3fd6c:	lsl	x0, x0, #3
   3fd70:	add	x0, x1, x0
   3fd74:	mov	w1, w2
   3fd78:	strh	w1, [x0, #34]
   3fd7c:	ldr	x0, [sp, #56]
   3fd80:	ldr	x1, [x0, #216]
   3fd84:	ldr	x0, [sp, #56]
   3fd88:	ldr	x0, [x0, #200]
   3fd8c:	add	x3, x0, #0x1
   3fd90:	ldr	x2, [sp, #56]
   3fd94:	str	x3, [x2, #200]
   3fd98:	mov	x2, x0
   3fd9c:	mov	x0, x2
   3fda0:	lsl	x0, x0, #2
   3fda4:	add	x0, x0, x2
   3fda8:	lsl	x0, x0, #3
   3fdac:	add	x0, x1, x0
   3fdb0:	strb	wzr, [x0, #32]
   3fdb4:	ldr	x0, [sp, #56]
   3fdb8:	ldr	w0, [x0, #224]
   3fdbc:	sxtw	x1, w0
   3fdc0:	ldr	x2, [sp, #24]
   3fdc4:	ldr	x0, [sp, #32]
   3fdc8:	sub	x0, x2, x0
   3fdcc:	cmp	x1, x0
   3fdd0:	b.ge	3fdf0 <rpl_re_set_registers@@Base+0x9008>  // b.tcont
   3fdd4:	ldr	x0, [sp, #24]
   3fdd8:	mov	w1, w0
   3fddc:	ldr	x0, [sp, #32]
   3fde0:	sub	w0, w1, w0
   3fde4:	mov	w1, w0
   3fde8:	ldr	x0, [sp, #56]
   3fdec:	str	w1, [x0, #224]
   3fdf0:	mov	w0, #0x0                   	// #0
   3fdf4:	ldp	x29, x30, [sp], #80
   3fdf8:	ret
   3fdfc:	sub	sp, sp, #0x30
   3fe00:	str	x0, [sp, #8]
   3fe04:	str	x1, [sp]
   3fe08:	ldr	x0, [sp, #8]
   3fe0c:	ldr	x0, [x0, #200]
   3fe10:	str	x0, [sp, #32]
   3fe14:	ldr	x0, [sp, #32]
   3fe18:	str	x0, [sp, #24]
   3fe1c:	str	xzr, [sp, #40]
   3fe20:	b	3fe88 <rpl_re_set_registers@@Base+0x90a0>
   3fe24:	ldr	x1, [sp, #40]
   3fe28:	ldr	x0, [sp, #32]
   3fe2c:	add	x0, x1, x0
   3fe30:	lsr	x1, x0, #63
   3fe34:	add	x0, x1, x0
   3fe38:	asr	x0, x0, #1
   3fe3c:	str	x0, [sp, #16]
   3fe40:	ldr	x0, [sp, #8]
   3fe44:	ldr	x2, [x0, #216]
   3fe48:	ldr	x1, [sp, #16]
   3fe4c:	mov	x0, x1
   3fe50:	lsl	x0, x0, #2
   3fe54:	add	x0, x0, x1
   3fe58:	lsl	x0, x0, #3
   3fe5c:	add	x0, x2, x0
   3fe60:	ldr	x0, [x0, #8]
   3fe64:	ldr	x1, [sp]
   3fe68:	cmp	x1, x0
   3fe6c:	b.le	3fe80 <rpl_re_set_registers@@Base+0x9098>
   3fe70:	ldr	x0, [sp, #16]
   3fe74:	add	x0, x0, #0x1
   3fe78:	str	x0, [sp, #40]
   3fe7c:	b	3fe88 <rpl_re_set_registers@@Base+0x90a0>
   3fe80:	ldr	x0, [sp, #16]
   3fe84:	str	x0, [sp, #32]
   3fe88:	ldr	x1, [sp, #40]
   3fe8c:	ldr	x0, [sp, #32]
   3fe90:	cmp	x1, x0
   3fe94:	b.lt	3fe24 <rpl_re_set_registers@@Base+0x903c>  // b.tstop
   3fe98:	ldr	x1, [sp, #40]
   3fe9c:	ldr	x0, [sp, #24]
   3fea0:	cmp	x1, x0
   3fea4:	b.ge	3fee0 <rpl_re_set_registers@@Base+0x90f8>  // b.tcont
   3fea8:	ldr	x0, [sp, #8]
   3feac:	ldr	x2, [x0, #216]
   3feb0:	ldr	x1, [sp, #40]
   3feb4:	mov	x0, x1
   3feb8:	lsl	x0, x0, #2
   3febc:	add	x0, x0, x1
   3fec0:	lsl	x0, x0, #3
   3fec4:	add	x0, x2, x0
   3fec8:	ldr	x0, [x0, #8]
   3fecc:	ldr	x1, [sp]
   3fed0:	cmp	x1, x0
   3fed4:	b.ne	3fee0 <rpl_re_set_registers@@Base+0x90f8>  // b.any
   3fed8:	ldr	x0, [sp, #40]
   3fedc:	b	3fee4 <rpl_re_set_registers@@Base+0x90fc>
   3fee0:	mov	x0, #0xffffffffffffffff    	// #-1
   3fee4:	add	sp, sp, #0x30
   3fee8:	ret
   3feec:	stp	x29, x30, [sp, #-80]!
   3fef0:	mov	x29, sp
   3fef4:	str	x19, [sp, #16]
   3fef8:	str	x0, [sp, #56]
   3fefc:	str	x1, [sp, #48]
   3ff00:	str	x2, [sp, #40]
   3ff04:	ldr	x0, [sp, #56]
   3ff08:	ldr	x1, [x0, #232]
   3ff0c:	ldr	x0, [sp, #56]
   3ff10:	ldr	x0, [x0, #240]
   3ff14:	cmp	x1, x0
   3ff18:	cset	w0, eq  // eq = none
   3ff1c:	and	w0, w0, #0xff
   3ff20:	and	x0, x0, #0xff
   3ff24:	cmp	x0, #0x0
   3ff28:	b.eq	3ff98 <rpl_re_set_registers@@Base+0x91b0>  // b.none
   3ff2c:	ldr	x0, [sp, #56]
   3ff30:	ldr	x0, [x0, #240]
   3ff34:	lsl	x0, x0, #1
   3ff38:	str	x0, [sp, #72]
   3ff3c:	ldr	x0, [sp, #56]
   3ff40:	ldr	x2, [x0, #248]
   3ff44:	ldr	x0, [sp, #72]
   3ff48:	lsl	x0, x0, #3
   3ff4c:	mov	x1, x0
   3ff50:	mov	x0, x2
   3ff54:	bl	ae00 <realloc@plt>
   3ff58:	str	x0, [sp, #64]
   3ff5c:	ldr	x0, [sp, #64]
   3ff60:	cmp	x0, #0x0
   3ff64:	cset	w0, eq  // eq = none
   3ff68:	and	w0, w0, #0xff
   3ff6c:	and	x0, x0, #0xff
   3ff70:	cmp	x0, #0x0
   3ff74:	b.eq	3ff80 <rpl_re_set_registers@@Base+0x9198>  // b.none
   3ff78:	mov	w0, #0xc                   	// #12
   3ff7c:	b	40054 <rpl_re_set_registers@@Base+0x926c>
   3ff80:	ldr	x0, [sp, #56]
   3ff84:	ldr	x1, [sp, #64]
   3ff88:	str	x1, [x0, #248]
   3ff8c:	ldr	x0, [sp, #56]
   3ff90:	ldr	x1, [sp, #72]
   3ff94:	str	x1, [x0, #240]
   3ff98:	ldr	x0, [sp, #56]
   3ff9c:	ldr	x1, [x0, #248]
   3ffa0:	ldr	x0, [sp, #56]
   3ffa4:	ldr	x0, [x0, #232]
   3ffa8:	lsl	x0, x0, #3
   3ffac:	add	x19, x1, x0
   3ffb0:	mov	x1, #0x30                  	// #48
   3ffb4:	mov	x0, #0x1                   	// #1
   3ffb8:	bl	ad80 <calloc@plt>
   3ffbc:	str	x0, [x19]
   3ffc0:	ldr	x0, [sp, #56]
   3ffc4:	ldr	x1, [x0, #248]
   3ffc8:	ldr	x0, [sp, #56]
   3ffcc:	ldr	x0, [x0, #232]
   3ffd0:	lsl	x0, x0, #3
   3ffd4:	add	x0, x1, x0
   3ffd8:	ldr	x0, [x0]
   3ffdc:	cmp	x0, #0x0
   3ffe0:	cset	w0, eq  // eq = none
   3ffe4:	and	w0, w0, #0xff
   3ffe8:	and	x0, x0, #0xff
   3ffec:	cmp	x0, #0x0
   3fff0:	b.eq	3fffc <rpl_re_set_registers@@Base+0x9214>  // b.none
   3fff4:	mov	w0, #0xc                   	// #12
   3fff8:	b	40054 <rpl_re_set_registers@@Base+0x926c>
   3fffc:	ldr	x0, [sp, #56]
   40000:	ldr	x1, [x0, #248]
   40004:	ldr	x0, [sp, #56]
   40008:	ldr	x0, [x0, #232]
   4000c:	lsl	x0, x0, #3
   40010:	add	x0, x1, x0
   40014:	ldr	x0, [x0]
   40018:	ldr	x1, [sp, #48]
   4001c:	str	x1, [x0, #8]
   40020:	ldr	x0, [sp, #56]
   40024:	ldr	x1, [x0, #248]
   40028:	ldr	x0, [sp, #56]
   4002c:	ldr	x0, [x0, #232]
   40030:	add	x3, x0, #0x1
   40034:	ldr	x2, [sp, #56]
   40038:	str	x3, [x2, #232]
   4003c:	lsl	x0, x0, #3
   40040:	add	x0, x1, x0
   40044:	ldr	x0, [x0]
   40048:	ldr	x1, [sp, #40]
   4004c:	str	x1, [x0]
   40050:	mov	w0, #0x0                   	// #0
   40054:	ldr	x19, [sp, #16]
   40058:	ldp	x29, x30, [sp], #80
   4005c:	ret
   40060:	stp	x29, x30, [sp, #-80]!
   40064:	mov	x29, sp
   40068:	str	x0, [sp, #40]
   4006c:	str	x1, [sp, #32]
   40070:	str	x2, [sp, #24]
   40074:	ldr	x0, [sp, #40]
   40078:	ldr	x1, [x0, #32]
   4007c:	ldr	x0, [sp, #40]
   40080:	ldr	x0, [x0, #24]
   40084:	cmp	x1, x0
   40088:	cset	w0, eq  // eq = none
   4008c:	and	w0, w0, #0xff
   40090:	and	x0, x0, #0xff
   40094:	cmp	x0, #0x0
   40098:	b.eq	4010c <rpl_re_set_registers@@Base+0x9324>  // b.none
   4009c:	ldr	x0, [sp, #40]
   400a0:	ldr	x0, [x0, #24]
   400a4:	lsl	x0, x0, #1
   400a8:	add	x0, x0, #0x1
   400ac:	str	x0, [sp, #72]
   400b0:	ldr	x0, [sp, #40]
   400b4:	ldr	x2, [x0, #40]
   400b8:	ldr	x0, [sp, #72]
   400bc:	lsl	x0, x0, #3
   400c0:	mov	x1, x0
   400c4:	mov	x0, x2
   400c8:	bl	ae00 <realloc@plt>
   400cc:	str	x0, [sp, #64]
   400d0:	ldr	x0, [sp, #64]
   400d4:	cmp	x0, #0x0
   400d8:	cset	w0, eq  // eq = none
   400dc:	and	w0, w0, #0xff
   400e0:	and	x0, x0, #0xff
   400e4:	cmp	x0, #0x0
   400e8:	b.eq	400f4 <rpl_re_set_registers@@Base+0x930c>  // b.none
   400ec:	mov	x0, #0x0                   	// #0
   400f0:	b	40188 <rpl_re_set_registers@@Base+0x93a0>
   400f4:	ldr	x0, [sp, #40]
   400f8:	ldr	x1, [sp, #64]
   400fc:	str	x1, [x0, #40]
   40100:	ldr	x0, [sp, #40]
   40104:	ldr	x1, [sp, #72]
   40108:	str	x1, [x0, #24]
   4010c:	mov	x1, #0x28                  	// #40
   40110:	mov	x0, #0x1                   	// #1
   40114:	bl	ad80 <calloc@plt>
   40118:	str	x0, [sp, #56]
   4011c:	ldr	x0, [sp, #56]
   40120:	cmp	x0, #0x0
   40124:	cset	w0, ne  // ne = any
   40128:	and	w0, w0, #0xff
   4012c:	and	x0, x0, #0xff
   40130:	cmp	x0, #0x0
   40134:	b.eq	40184 <rpl_re_set_registers@@Base+0x939c>  // b.none
   40138:	ldr	x0, [sp, #40]
   4013c:	ldr	x1, [x0, #40]
   40140:	ldr	x0, [sp, #40]
   40144:	ldr	x0, [x0, #32]
   40148:	lsl	x0, x0, #3
   4014c:	add	x0, x1, x0
   40150:	ldr	x1, [sp, #56]
   40154:	str	x1, [x0]
   40158:	ldr	x0, [sp, #56]
   4015c:	ldr	x1, [sp, #32]
   40160:	str	x1, [x0]
   40164:	ldr	x0, [sp, #56]
   40168:	ldr	x1, [sp, #24]
   4016c:	str	x1, [x0, #8]
   40170:	ldr	x0, [sp, #40]
   40174:	ldr	x0, [x0, #32]
   40178:	add	x1, x0, #0x1
   4017c:	ldr	x0, [sp, #40]
   40180:	str	x1, [x0, #32]
   40184:	ldr	x0, [sp, #56]
   40188:	ldp	x29, x30, [sp], #80
   4018c:	ret
   40190:	stp	x29, x30, [sp, #-64]!
   40194:	mov	x29, sp
   40198:	str	x0, [sp, #56]
   4019c:	str	x1, [sp, #48]
   401a0:	str	x2, [sp, #40]
   401a4:	str	x3, [sp, #32]
   401a8:	str	x4, [sp, #24]
   401ac:	ldr	x0, [sp, #56]
   401b0:	ldr	x1, [sp, #48]
   401b4:	str	x1, [x0]
   401b8:	ldr	x0, [sp, #56]
   401bc:	ldr	x1, [sp, #40]
   401c0:	str	x1, [x0, #8]
   401c4:	ldr	x0, [sp, #56]
   401c8:	ldr	x1, [sp, #32]
   401cc:	str	x1, [x0, #16]
   401d0:	ldr	x0, [sp, #56]
   401d4:	ldr	x1, [sp, #24]
   401d8:	str	x1, [x0, #24]
   401dc:	ldr	x0, [sp, #56]
   401e0:	add	x0, x0, #0x20
   401e4:	mov	x2, #0x18                  	// #24
   401e8:	mov	w1, #0x0                   	// #0
   401ec:	bl	acb0 <memset@plt>
   401f0:	nop
   401f4:	ldp	x29, x30, [sp], #64
   401f8:	ret

00000000000401fc <vasnprintf@@Base>:
   401fc:	sub	sp, sp, #0x570
   40200:	stp	x29, x30, [sp]
   40204:	mov	x29, sp
   40208:	str	x19, [sp, #16]
   4020c:	str	x0, [x29, #88]
   40210:	str	x1, [x29, #80]
   40214:	str	x2, [x29, #72]
   40218:	mov	x19, x3
   4021c:	add	x1, x29, #0x70
   40220:	add	x0, x29, #0x168
   40224:	mov	x2, x1
   40228:	mov	x1, x0
   4022c:	ldr	x0, [x29, #72]
   40230:	bl	b6b0 <printf_parse@plt>
   40234:	cmp	w0, #0x0
   40238:	b.ge	40244 <vasnprintf@@Base+0x48>  // b.tcont
   4023c:	mov	x0, #0x0                   	// #0
   40240:	b	4234c <vasnprintf@@Base+0x2150>
   40244:	add	x2, x29, #0x20
   40248:	mov	x3, x19
   4024c:	ldp	x0, x1, [x3]
   40250:	stp	x0, x1, [x2]
   40254:	ldp	x0, x1, [x3, #16]
   40258:	stp	x0, x1, [x2, #16]
   4025c:	add	x1, x29, #0x70
   40260:	add	x0, x29, #0x20
   40264:	bl	b1d0 <printf_fetchargs@plt>
   40268:	cmp	w0, #0x0
   4026c:	b.ge	402c0 <vasnprintf@@Base+0xc4>  // b.tcont
   40270:	ldr	x1, [x29, #368]
   40274:	add	x0, x29, #0x168
   40278:	add	x0, x0, #0x20
   4027c:	cmp	x1, x0
   40280:	b.eq	4028c <vasnprintf@@Base+0x90>  // b.none
   40284:	ldr	x0, [x29, #368]
   40288:	bl	b130 <free@plt>
   4028c:	ldr	x1, [x29, #120]
   40290:	add	x0, x29, #0x70
   40294:	add	x0, x0, #0x10
   40298:	cmp	x1, x0
   4029c:	b.eq	402a8 <vasnprintf@@Base+0xac>  // b.none
   402a0:	ldr	x0, [x29, #120]
   402a4:	bl	b130 <free@plt>
   402a8:	bl	b640 <__errno_location@plt>
   402ac:	mov	x1, x0
   402b0:	mov	w0, #0x16                  	// #22
   402b4:	str	w0, [x1]
   402b8:	mov	x0, #0x0                   	// #0
   402bc:	b	4234c <vasnprintf@@Base+0x2150>
   402c0:	ldr	x0, [x29, #376]
   402c4:	ldr	x1, [x29, #384]
   402c8:	mov	x3, #0x6                   	// #6
   402cc:	mov	x2, x1
   402d0:	mov	x1, x0
   402d4:	mov	x0, #0x7                   	// #7
   402d8:	bl	b7c0 <xsum4@plt>
   402dc:	str	x0, [x29, #1240]
   402e0:	ldr	x0, [x29, #1240]
   402e4:	cmp	x0, #0xf9f
   402e8:	b.hi	4031c <vasnprintf@@Base+0x120>  // b.pmore
   402ec:	ldr	x0, [x29, #1240]
   402f0:	add	x0, x0, #0xf
   402f4:	lsr	x0, x0, #4
   402f8:	lsl	x0, x0, #4
   402fc:	sub	sp, sp, x0
   40300:	mov	x0, sp
   40304:	add	x0, x0, #0xf
   40308:	lsr	x0, x0, #4
   4030c:	lsl	x0, x0, #4
   40310:	str	x0, [x29, #1360]
   40314:	str	xzr, [x29, #1352]
   40318:	b	40350 <vasnprintf@@Base+0x154>
   4031c:	ldr	x0, [x29, #1240]
   40320:	str	x0, [x29, #1232]
   40324:	ldr	x0, [x29, #1232]
   40328:	cmn	x0, #0x1
   4032c:	b.eq	422ec <vasnprintf@@Base+0x20f0>  // b.none
   40330:	ldr	x0, [x29, #1232]
   40334:	bl	ab40 <malloc@plt>
   40338:	str	x0, [x29, #1360]
   4033c:	ldr	x0, [x29, #1360]
   40340:	cmp	x0, #0x0
   40344:	b.eq	422f4 <vasnprintf@@Base+0x20f8>  // b.none
   40348:	ldr	x0, [x29, #1360]
   4034c:	str	x0, [x29, #1352]
   40350:	ldr	x0, [x29, #88]
   40354:	cmp	x0, #0x0
   40358:	b.eq	40374 <vasnprintf@@Base+0x178>  // b.none
   4035c:	ldr	x0, [x29, #88]
   40360:	str	x0, [x29, #1384]
   40364:	ldr	x0, [x29, #80]
   40368:	ldr	x0, [x0]
   4036c:	str	x0, [x29, #1336]
   40370:	b	4037c <vasnprintf@@Base+0x180>
   40374:	str	xzr, [x29, #1384]
   40378:	str	xzr, [x29, #1336]
   4037c:	str	xzr, [x29, #1328]
   40380:	ldr	x0, [x29, #72]
   40384:	str	x0, [x29, #1344]
   40388:	str	xzr, [x29, #1376]
   4038c:	ldr	x0, [x29, #368]
   40390:	str	x0, [x29, #1368]
   40394:	ldr	x0, [x29, #1368]
   40398:	ldr	x0, [x0]
   4039c:	ldr	x1, [x29, #1344]
   403a0:	cmp	x1, x0
   403a4:	b.eq	404d8 <vasnprintf@@Base+0x2dc>  // b.none
   403a8:	ldr	x0, [x29, #1368]
   403ac:	ldr	x1, [x0]
   403b0:	ldr	x0, [x29, #1344]
   403b4:	sub	x0, x1, x0
   403b8:	str	x0, [x29, #1224]
   403bc:	ldr	x1, [x29, #1224]
   403c0:	ldr	x0, [x29, #1328]
   403c4:	bl	ac80 <xsum@plt>
   403c8:	str	x0, [x29, #1216]
   403cc:	ldr	x1, [x29, #1216]
   403d0:	ldr	x0, [x29, #1336]
   403d4:	cmp	x1, x0
   403d8:	b.ls	404b8 <vasnprintf@@Base+0x2bc>  // b.plast
   403dc:	ldr	x0, [x29, #1336]
   403e0:	cmp	x0, #0x0
   403e4:	b.eq	40408 <vasnprintf@@Base+0x20c>  // b.none
   403e8:	ldr	x0, [x29, #1336]
   403ec:	cmp	x0, #0x0
   403f0:	b.lt	40400 <vasnprintf@@Base+0x204>  // b.tstop
   403f4:	ldr	x0, [x29, #1336]
   403f8:	lsl	x0, x0, #1
   403fc:	b	4040c <vasnprintf@@Base+0x210>
   40400:	mov	x0, #0xffffffffffffffff    	// #-1
   40404:	b	4040c <vasnprintf@@Base+0x210>
   40408:	mov	x0, #0xc                   	// #12
   4040c:	str	x0, [x29, #1336]
   40410:	ldr	x1, [x29, #1216]
   40414:	ldr	x0, [x29, #1336]
   40418:	cmp	x1, x0
   4041c:	b.ls	40428 <vasnprintf@@Base+0x22c>  // b.plast
   40420:	ldr	x0, [x29, #1216]
   40424:	str	x0, [x29, #1336]
   40428:	ldr	x0, [x29, #1336]
   4042c:	str	x0, [x29, #1208]
   40430:	ldr	x0, [x29, #1208]
   40434:	cmn	x0, #0x1
   40438:	b.eq	42264 <vasnprintf@@Base+0x2068>  // b.none
   4043c:	ldr	x1, [x29, #1384]
   40440:	ldr	x0, [x29, #88]
   40444:	cmp	x1, x0
   40448:	b.eq	40458 <vasnprintf@@Base+0x25c>  // b.none
   4044c:	ldr	x0, [x29, #1384]
   40450:	cmp	x0, #0x0
   40454:	b.ne	40468 <vasnprintf@@Base+0x26c>  // b.any
   40458:	ldr	x0, [x29, #1208]
   4045c:	bl	ab40 <malloc@plt>
   40460:	str	x0, [x29, #1320]
   40464:	b	40478 <vasnprintf@@Base+0x27c>
   40468:	ldr	x1, [x29, #1208]
   4046c:	ldr	x0, [x29, #1384]
   40470:	bl	ae00 <realloc@plt>
   40474:	str	x0, [x29, #1320]
   40478:	ldr	x0, [x29, #1320]
   4047c:	cmp	x0, #0x0
   40480:	b.eq	4226c <vasnprintf@@Base+0x2070>  // b.none
   40484:	ldr	x1, [x29, #1384]
   40488:	ldr	x0, [x29, #88]
   4048c:	cmp	x1, x0
   40490:	b.ne	404b0 <vasnprintf@@Base+0x2b4>  // b.any
   40494:	ldr	x0, [x29, #1328]
   40498:	cmp	x0, #0x0
   4049c:	b.eq	404b0 <vasnprintf@@Base+0x2b4>  // b.none
   404a0:	ldr	x2, [x29, #1328]
   404a4:	ldr	x1, [x29, #1384]
   404a8:	ldr	x0, [x29, #1320]
   404ac:	bl	a790 <memcpy@plt>
   404b0:	ldr	x0, [x29, #1320]
   404b4:	str	x0, [x29, #1384]
   404b8:	ldr	x1, [x29, #1384]
   404bc:	ldr	x0, [x29, #1328]
   404c0:	add	x0, x1, x0
   404c4:	ldr	x2, [x29, #1224]
   404c8:	ldr	x1, [x29, #1344]
   404cc:	bl	a790 <memcpy@plt>
   404d0:	ldr	x0, [x29, #1216]
   404d4:	str	x0, [x29, #1328]
   404d8:	ldr	x0, [x29, #360]
   404dc:	ldr	x1, [x29, #1376]
   404e0:	cmp	x1, x0
   404e4:	b.eq	4200c <vasnprintf@@Base+0x1e10>  // b.none
   404e8:	ldr	x0, [x29, #1368]
   404ec:	ldrb	w0, [x0, #72]
   404f0:	cmp	w0, #0x25
   404f4:	b.ne	40628 <vasnprintf@@Base+0x42c>  // b.any
   404f8:	ldr	x0, [x29, #1368]
   404fc:	ldr	x0, [x0, #80]
   40500:	cmn	x0, #0x1
   40504:	b.eq	4050c <vasnprintf@@Base+0x310>  // b.none
   40508:	bl	af70 <abort@plt>
   4050c:	mov	x1, #0x1                   	// #1
   40510:	ldr	x0, [x29, #1328]
   40514:	bl	ac80 <xsum@plt>
   40518:	str	x0, [x29, #1032]
   4051c:	ldr	x1, [x29, #1032]
   40520:	ldr	x0, [x29, #1336]
   40524:	cmp	x1, x0
   40528:	b.ls	40608 <vasnprintf@@Base+0x40c>  // b.plast
   4052c:	ldr	x0, [x29, #1336]
   40530:	cmp	x0, #0x0
   40534:	b.eq	40558 <vasnprintf@@Base+0x35c>  // b.none
   40538:	ldr	x0, [x29, #1336]
   4053c:	cmp	x0, #0x0
   40540:	b.lt	40550 <vasnprintf@@Base+0x354>  // b.tstop
   40544:	ldr	x0, [x29, #1336]
   40548:	lsl	x0, x0, #1
   4054c:	b	4055c <vasnprintf@@Base+0x360>
   40550:	mov	x0, #0xffffffffffffffff    	// #-1
   40554:	b	4055c <vasnprintf@@Base+0x360>
   40558:	mov	x0, #0xc                   	// #12
   4055c:	str	x0, [x29, #1336]
   40560:	ldr	x1, [x29, #1032]
   40564:	ldr	x0, [x29, #1336]
   40568:	cmp	x1, x0
   4056c:	b.ls	40578 <vasnprintf@@Base+0x37c>  // b.plast
   40570:	ldr	x0, [x29, #1032]
   40574:	str	x0, [x29, #1336]
   40578:	ldr	x0, [x29, #1336]
   4057c:	str	x0, [x29, #1024]
   40580:	ldr	x0, [x29, #1024]
   40584:	cmn	x0, #0x1
   40588:	b.eq	42274 <vasnprintf@@Base+0x2078>  // b.none
   4058c:	ldr	x1, [x29, #1384]
   40590:	ldr	x0, [x29, #88]
   40594:	cmp	x1, x0
   40598:	b.eq	405a8 <vasnprintf@@Base+0x3ac>  // b.none
   4059c:	ldr	x0, [x29, #1384]
   405a0:	cmp	x0, #0x0
   405a4:	b.ne	405b8 <vasnprintf@@Base+0x3bc>  // b.any
   405a8:	ldr	x0, [x29, #1024]
   405ac:	bl	ab40 <malloc@plt>
   405b0:	str	x0, [x29, #1312]
   405b4:	b	405c8 <vasnprintf@@Base+0x3cc>
   405b8:	ldr	x1, [x29, #1024]
   405bc:	ldr	x0, [x29, #1384]
   405c0:	bl	ae00 <realloc@plt>
   405c4:	str	x0, [x29, #1312]
   405c8:	ldr	x0, [x29, #1312]
   405cc:	cmp	x0, #0x0
   405d0:	b.eq	4227c <vasnprintf@@Base+0x2080>  // b.none
   405d4:	ldr	x1, [x29, #1384]
   405d8:	ldr	x0, [x29, #88]
   405dc:	cmp	x1, x0
   405e0:	b.ne	40600 <vasnprintf@@Base+0x404>  // b.any
   405e4:	ldr	x0, [x29, #1328]
   405e8:	cmp	x0, #0x0
   405ec:	b.eq	40600 <vasnprintf@@Base+0x404>  // b.none
   405f0:	ldr	x2, [x29, #1328]
   405f4:	ldr	x1, [x29, #1384]
   405f8:	ldr	x0, [x29, #1312]
   405fc:	bl	a790 <memcpy@plt>
   40600:	ldr	x0, [x29, #1312]
   40604:	str	x0, [x29, #1384]
   40608:	ldr	x1, [x29, #1384]
   4060c:	ldr	x0, [x29, #1328]
   40610:	add	x0, x1, x0
   40614:	mov	w1, #0x25                  	// #37
   40618:	strb	w1, [x0]
   4061c:	ldr	x0, [x29, #1032]
   40620:	str	x0, [x29, #1328]
   40624:	b	41fe4 <vasnprintf@@Base+0x1de8>
   40628:	ldr	x0, [x29, #1368]
   4062c:	ldr	x0, [x0, #80]
   40630:	cmn	x0, #0x1
   40634:	b.ne	4063c <vasnprintf@@Base+0x440>  // b.any
   40638:	bl	af70 <abort@plt>
   4063c:	ldr	x0, [x29, #1368]
   40640:	ldrb	w0, [x0, #72]
   40644:	cmp	w0, #0x6e
   40648:	b.ne	40768 <vasnprintf@@Base+0x56c>  // b.any
   4064c:	ldr	x1, [x29, #120]
   40650:	ldr	x0, [x29, #1368]
   40654:	ldr	x0, [x0, #80]
   40658:	lsl	x0, x0, #5
   4065c:	add	x0, x1, x0
   40660:	ldr	w0, [x0]
   40664:	cmp	w0, #0x16
   40668:	b.eq	40740 <vasnprintf@@Base+0x544>  // b.none
   4066c:	cmp	w0, #0x16
   40670:	b.hi	40764 <vasnprintf@@Base+0x568>  // b.pmore
   40674:	cmp	w0, #0x15
   40678:	b.eq	4071c <vasnprintf@@Base+0x520>  // b.none
   4067c:	cmp	w0, #0x15
   40680:	b.hi	40764 <vasnprintf@@Base+0x568>  // b.pmore
   40684:	cmp	w0, #0x14
   40688:	b.eq	406f8 <vasnprintf@@Base+0x4fc>  // b.none
   4068c:	cmp	w0, #0x14
   40690:	b.hi	40764 <vasnprintf@@Base+0x568>  // b.pmore
   40694:	cmp	w0, #0x12
   40698:	b.eq	406a8 <vasnprintf@@Base+0x4ac>  // b.none
   4069c:	cmp	w0, #0x13
   406a0:	b.eq	406d0 <vasnprintf@@Base+0x4d4>  // b.none
   406a4:	b	40764 <vasnprintf@@Base+0x568>
   406a8:	ldr	x1, [x29, #120]
   406ac:	ldr	x0, [x29, #1368]
   406b0:	ldr	x0, [x0, #80]
   406b4:	lsl	x0, x0, #5
   406b8:	add	x0, x1, x0
   406bc:	ldr	x0, [x0, #16]
   406c0:	ldr	x1, [x29, #1328]
   406c4:	sxtb	w1, w1
   406c8:	strb	w1, [x0]
   406cc:	b	41fe4 <vasnprintf@@Base+0x1de8>
   406d0:	ldr	x1, [x29, #120]
   406d4:	ldr	x0, [x29, #1368]
   406d8:	ldr	x0, [x0, #80]
   406dc:	lsl	x0, x0, #5
   406e0:	add	x0, x1, x0
   406e4:	ldr	x0, [x0, #16]
   406e8:	ldr	x1, [x29, #1328]
   406ec:	sxth	w1, w1
   406f0:	strh	w1, [x0]
   406f4:	b	41fe4 <vasnprintf@@Base+0x1de8>
   406f8:	ldr	x1, [x29, #120]
   406fc:	ldr	x0, [x29, #1368]
   40700:	ldr	x0, [x0, #80]
   40704:	lsl	x0, x0, #5
   40708:	add	x0, x1, x0
   4070c:	ldr	x0, [x0, #16]
   40710:	ldr	x1, [x29, #1328]
   40714:	str	w1, [x0]
   40718:	b	41fe4 <vasnprintf@@Base+0x1de8>
   4071c:	ldr	x1, [x29, #120]
   40720:	ldr	x0, [x29, #1368]
   40724:	ldr	x0, [x0, #80]
   40728:	lsl	x0, x0, #5
   4072c:	add	x0, x1, x0
   40730:	ldr	x0, [x0, #16]
   40734:	ldr	x1, [x29, #1328]
   40738:	str	x1, [x0]
   4073c:	b	41fe4 <vasnprintf@@Base+0x1de8>
   40740:	ldr	x1, [x29, #120]
   40744:	ldr	x0, [x29, #1368]
   40748:	ldr	x0, [x0, #80]
   4074c:	lsl	x0, x0, #5
   40750:	add	x0, x1, x0
   40754:	ldr	x0, [x0, #16]
   40758:	ldr	x1, [x29, #1328]
   4075c:	str	x1, [x0]
   40760:	b	41fe4 <vasnprintf@@Base+0x1de8>
   40764:	bl	af70 <abort@plt>
   40768:	ldr	x1, [x29, #120]
   4076c:	ldr	x0, [x29, #1368]
   40770:	ldr	x0, [x0, #80]
   40774:	lsl	x0, x0, #5
   40778:	add	x0, x1, x0
   4077c:	ldr	w0, [x0]
   40780:	str	w0, [x29, #1204]
   40784:	ldr	x0, [x29, #1368]
   40788:	ldr	w0, [x0, #16]
   4078c:	str	w0, [x29, #1200]
   40790:	ldr	x0, [x29, #1360]
   40794:	str	x0, [x29, #1304]
   40798:	ldr	x0, [x29, #1304]
   4079c:	add	x1, x0, #0x1
   407a0:	str	x1, [x29, #1304]
   407a4:	mov	w1, #0x25                  	// #37
   407a8:	strb	w1, [x0]
   407ac:	ldr	w0, [x29, #1200]
   407b0:	and	w0, w0, #0x1
   407b4:	cmp	w0, #0x0
   407b8:	b.eq	407d0 <vasnprintf@@Base+0x5d4>  // b.none
   407bc:	ldr	x0, [x29, #1304]
   407c0:	add	x1, x0, #0x1
   407c4:	str	x1, [x29, #1304]
   407c8:	mov	w1, #0x27                  	// #39
   407cc:	strb	w1, [x0]
   407d0:	ldr	w0, [x29, #1200]
   407d4:	and	w0, w0, #0x2
   407d8:	cmp	w0, #0x0
   407dc:	b.eq	407f4 <vasnprintf@@Base+0x5f8>  // b.none
   407e0:	ldr	x0, [x29, #1304]
   407e4:	add	x1, x0, #0x1
   407e8:	str	x1, [x29, #1304]
   407ec:	mov	w1, #0x2d                  	// #45
   407f0:	strb	w1, [x0]
   407f4:	ldr	w0, [x29, #1200]
   407f8:	and	w0, w0, #0x4
   407fc:	cmp	w0, #0x0
   40800:	b.eq	40818 <vasnprintf@@Base+0x61c>  // b.none
   40804:	ldr	x0, [x29, #1304]
   40808:	add	x1, x0, #0x1
   4080c:	str	x1, [x29, #1304]
   40810:	mov	w1, #0x2b                  	// #43
   40814:	strb	w1, [x0]
   40818:	ldr	w0, [x29, #1200]
   4081c:	and	w0, w0, #0x8
   40820:	cmp	w0, #0x0
   40824:	b.eq	4083c <vasnprintf@@Base+0x640>  // b.none
   40828:	ldr	x0, [x29, #1304]
   4082c:	add	x1, x0, #0x1
   40830:	str	x1, [x29, #1304]
   40834:	mov	w1, #0x20                  	// #32
   40838:	strb	w1, [x0]
   4083c:	ldr	w0, [x29, #1200]
   40840:	and	w0, w0, #0x10
   40844:	cmp	w0, #0x0
   40848:	b.eq	40860 <vasnprintf@@Base+0x664>  // b.none
   4084c:	ldr	x0, [x29, #1304]
   40850:	add	x1, x0, #0x1
   40854:	str	x1, [x29, #1304]
   40858:	mov	w1, #0x23                  	// #35
   4085c:	strb	w1, [x0]
   40860:	ldr	w0, [x29, #1200]
   40864:	and	w0, w0, #0x40
   40868:	cmp	w0, #0x0
   4086c:	b.eq	40884 <vasnprintf@@Base+0x688>  // b.none
   40870:	ldr	x0, [x29, #1304]
   40874:	add	x1, x0, #0x1
   40878:	str	x1, [x29, #1304]
   4087c:	mov	w1, #0x49                  	// #73
   40880:	strb	w1, [x0]
   40884:	ldr	w0, [x29, #1200]
   40888:	and	w0, w0, #0x20
   4088c:	cmp	w0, #0x0
   40890:	b.eq	408a8 <vasnprintf@@Base+0x6ac>  // b.none
   40894:	ldr	x0, [x29, #1304]
   40898:	add	x1, x0, #0x1
   4089c:	str	x1, [x29, #1304]
   408a0:	mov	w1, #0x30                  	// #48
   408a4:	strb	w1, [x0]
   408a8:	ldr	x0, [x29, #1368]
   408ac:	ldr	x1, [x0, #24]
   408b0:	ldr	x0, [x29, #1368]
   408b4:	ldr	x0, [x0, #32]
   408b8:	cmp	x1, x0
   408bc:	b.eq	40900 <vasnprintf@@Base+0x704>  // b.none
   408c0:	ldr	x0, [x29, #1368]
   408c4:	ldr	x1, [x0, #32]
   408c8:	ldr	x0, [x29, #1368]
   408cc:	ldr	x0, [x0, #24]
   408d0:	sub	x0, x1, x0
   408d4:	str	x0, [x29, #1192]
   408d8:	ldr	x0, [x29, #1368]
   408dc:	ldr	x0, [x0, #24]
   408e0:	ldr	x2, [x29, #1192]
   408e4:	mov	x1, x0
   408e8:	ldr	x0, [x29, #1304]
   408ec:	bl	a790 <memcpy@plt>
   408f0:	ldr	x1, [x29, #1304]
   408f4:	ldr	x0, [x29, #1192]
   408f8:	add	x0, x1, x0
   408fc:	str	x0, [x29, #1304]
   40900:	ldr	x0, [x29, #1368]
   40904:	ldr	x1, [x0, #48]
   40908:	ldr	x0, [x29, #1368]
   4090c:	ldr	x0, [x0, #56]
   40910:	cmp	x1, x0
   40914:	b.eq	40958 <vasnprintf@@Base+0x75c>  // b.none
   40918:	ldr	x0, [x29, #1368]
   4091c:	ldr	x1, [x0, #56]
   40920:	ldr	x0, [x29, #1368]
   40924:	ldr	x0, [x0, #48]
   40928:	sub	x0, x1, x0
   4092c:	str	x0, [x29, #1184]
   40930:	ldr	x0, [x29, #1368]
   40934:	ldr	x0, [x0, #48]
   40938:	ldr	x2, [x29, #1184]
   4093c:	mov	x1, x0
   40940:	ldr	x0, [x29, #1304]
   40944:	bl	a790 <memcpy@plt>
   40948:	ldr	x1, [x29, #1304]
   4094c:	ldr	x0, [x29, #1184]
   40950:	add	x0, x1, x0
   40954:	str	x0, [x29, #1304]
   40958:	ldr	w0, [x29, #1204]
   4095c:	cmp	w0, #0x10
   40960:	b.eq	409e0 <vasnprintf@@Base+0x7e4>  // b.none
   40964:	ldr	w0, [x29, #1204]
   40968:	cmp	w0, #0x10
   4096c:	b.hi	40a10 <vasnprintf@@Base+0x814>  // b.pmore
   40970:	ldr	w0, [x29, #1204]
   40974:	cmp	w0, #0xe
   40978:	b.eq	409e0 <vasnprintf@@Base+0x7e4>  // b.none
   4097c:	ldr	w0, [x29, #1204]
   40980:	cmp	w0, #0xe
   40984:	b.hi	40a10 <vasnprintf@@Base+0x814>  // b.pmore
   40988:	ldr	w0, [x29, #1204]
   4098c:	cmp	w0, #0xc
   40990:	b.eq	409f8 <vasnprintf@@Base+0x7fc>  // b.none
   40994:	ldr	w0, [x29, #1204]
   40998:	cmp	w0, #0xc
   4099c:	b.hi	40a10 <vasnprintf@@Base+0x814>  // b.pmore
   409a0:	ldr	w0, [x29, #1204]
   409a4:	cmp	w0, #0x8
   409a8:	b.hi	409bc <vasnprintf@@Base+0x7c0>  // b.pmore
   409ac:	ldr	w0, [x29, #1204]
   409b0:	cmp	w0, #0x7
   409b4:	b.cs	409e0 <vasnprintf@@Base+0x7e4>  // b.hs, b.nlast
   409b8:	b	40a10 <vasnprintf@@Base+0x814>
   409bc:	ldr	w0, [x29, #1204]
   409c0:	sub	w0, w0, #0x9
   409c4:	cmp	w0, #0x1
   409c8:	b.hi	40a10 <vasnprintf@@Base+0x814>  // b.pmore
   409cc:	ldr	x0, [x29, #1304]
   409d0:	add	x1, x0, #0x1
   409d4:	str	x1, [x29, #1304]
   409d8:	mov	w1, #0x6c                  	// #108
   409dc:	strb	w1, [x0]
   409e0:	ldr	x0, [x29, #1304]
   409e4:	add	x1, x0, #0x1
   409e8:	str	x1, [x29, #1304]
   409ec:	mov	w1, #0x6c                  	// #108
   409f0:	strb	w1, [x0]
   409f4:	b	40a14 <vasnprintf@@Base+0x818>
   409f8:	ldr	x0, [x29, #1304]
   409fc:	add	x1, x0, #0x1
   40a00:	str	x1, [x29, #1304]
   40a04:	mov	w1, #0x4c                  	// #76
   40a08:	strb	w1, [x0]
   40a0c:	b	40a14 <vasnprintf@@Base+0x818>
   40a10:	nop
   40a14:	ldr	x0, [x29, #1368]
   40a18:	ldrb	w1, [x0, #72]
   40a1c:	ldr	x0, [x29, #1304]
   40a20:	strb	w1, [x0]
   40a24:	ldr	x0, [x29, #1304]
   40a28:	add	x0, x0, #0x1
   40a2c:	strb	wzr, [x0]
   40a30:	str	wzr, [x29, #1300]
   40a34:	ldr	x0, [x29, #1368]
   40a38:	ldr	x0, [x0, #40]
   40a3c:	cmn	x0, #0x1
   40a40:	b.eq	40a9c <vasnprintf@@Base+0x8a0>  // b.none
   40a44:	ldr	x1, [x29, #120]
   40a48:	ldr	x0, [x29, #1368]
   40a4c:	ldr	x0, [x0, #40]
   40a50:	lsl	x0, x0, #5
   40a54:	add	x0, x1, x0
   40a58:	ldr	w0, [x0]
   40a5c:	cmp	w0, #0x5
   40a60:	b.eq	40a68 <vasnprintf@@Base+0x86c>  // b.none
   40a64:	bl	af70 <abort@plt>
   40a68:	ldr	x1, [x29, #120]
   40a6c:	ldr	x0, [x29, #1368]
   40a70:	ldr	x0, [x0, #40]
   40a74:	lsl	x0, x0, #5
   40a78:	add	x1, x1, x0
   40a7c:	ldr	w0, [x29, #1300]
   40a80:	add	w2, w0, #0x1
   40a84:	str	w2, [x29, #1300]
   40a88:	ldr	w2, [x1, #16]
   40a8c:	mov	w0, w0
   40a90:	lsl	x0, x0, #2
   40a94:	add	x1, x29, #0x68
   40a98:	str	w2, [x1, x0]
   40a9c:	ldr	x0, [x29, #1368]
   40aa0:	ldr	x0, [x0, #64]
   40aa4:	cmn	x0, #0x1
   40aa8:	b.eq	40b04 <vasnprintf@@Base+0x908>  // b.none
   40aac:	ldr	x1, [x29, #120]
   40ab0:	ldr	x0, [x29, #1368]
   40ab4:	ldr	x0, [x0, #64]
   40ab8:	lsl	x0, x0, #5
   40abc:	add	x0, x1, x0
   40ac0:	ldr	w0, [x0]
   40ac4:	cmp	w0, #0x5
   40ac8:	b.eq	40ad0 <vasnprintf@@Base+0x8d4>  // b.none
   40acc:	bl	af70 <abort@plt>
   40ad0:	ldr	x1, [x29, #120]
   40ad4:	ldr	x0, [x29, #1368]
   40ad8:	ldr	x0, [x0, #64]
   40adc:	lsl	x0, x0, #5
   40ae0:	add	x1, x1, x0
   40ae4:	ldr	w0, [x29, #1300]
   40ae8:	add	w2, w0, #0x1
   40aec:	str	w2, [x29, #1300]
   40af0:	ldr	w2, [x1, #16]
   40af4:	mov	w0, w0
   40af8:	lsl	x0, x0, #2
   40afc:	add	x1, x29, #0x68
   40b00:	str	w2, [x1, x0]
   40b04:	mov	x1, #0x2                   	// #2
   40b08:	ldr	x0, [x29, #1328]
   40b0c:	bl	ac80 <xsum@plt>
   40b10:	mov	x1, x0
   40b14:	ldr	x0, [x29, #1336]
   40b18:	cmp	x0, x1
   40b1c:	b.cs	40c10 <vasnprintf@@Base+0xa14>  // b.hs, b.nlast
   40b20:	ldr	x0, [x29, #1336]
   40b24:	cmp	x0, #0x0
   40b28:	b.eq	40b4c <vasnprintf@@Base+0x950>  // b.none
   40b2c:	ldr	x0, [x29, #1336]
   40b30:	cmp	x0, #0x0
   40b34:	b.lt	40b44 <vasnprintf@@Base+0x948>  // b.tstop
   40b38:	ldr	x0, [x29, #1336]
   40b3c:	lsl	x0, x0, #1
   40b40:	b	40b50 <vasnprintf@@Base+0x954>
   40b44:	mov	x0, #0xffffffffffffffff    	// #-1
   40b48:	b	40b50 <vasnprintf@@Base+0x954>
   40b4c:	mov	x0, #0xc                   	// #12
   40b50:	str	x0, [x29, #1336]
   40b54:	mov	x1, #0x2                   	// #2
   40b58:	ldr	x0, [x29, #1328]
   40b5c:	bl	ac80 <xsum@plt>
   40b60:	mov	x1, x0
   40b64:	ldr	x0, [x29, #1336]
   40b68:	cmp	x0, x1
   40b6c:	b.cs	40b80 <vasnprintf@@Base+0x984>  // b.hs, b.nlast
   40b70:	mov	x1, #0x2                   	// #2
   40b74:	ldr	x0, [x29, #1328]
   40b78:	bl	ac80 <xsum@plt>
   40b7c:	str	x0, [x29, #1336]
   40b80:	ldr	x0, [x29, #1336]
   40b84:	str	x0, [x29, #1176]
   40b88:	ldr	x0, [x29, #1176]
   40b8c:	cmn	x0, #0x1
   40b90:	b.eq	42284 <vasnprintf@@Base+0x2088>  // b.none
   40b94:	ldr	x1, [x29, #1384]
   40b98:	ldr	x0, [x29, #88]
   40b9c:	cmp	x1, x0
   40ba0:	b.eq	40bb0 <vasnprintf@@Base+0x9b4>  // b.none
   40ba4:	ldr	x0, [x29, #1384]
   40ba8:	cmp	x0, #0x0
   40bac:	b.ne	40bc0 <vasnprintf@@Base+0x9c4>  // b.any
   40bb0:	ldr	x0, [x29, #1176]
   40bb4:	bl	ab40 <malloc@plt>
   40bb8:	str	x0, [x29, #1288]
   40bbc:	b	40bd0 <vasnprintf@@Base+0x9d4>
   40bc0:	ldr	x1, [x29, #1176]
   40bc4:	ldr	x0, [x29, #1384]
   40bc8:	bl	ae00 <realloc@plt>
   40bcc:	str	x0, [x29, #1288]
   40bd0:	ldr	x0, [x29, #1288]
   40bd4:	cmp	x0, #0x0
   40bd8:	b.eq	4228c <vasnprintf@@Base+0x2090>  // b.none
   40bdc:	ldr	x1, [x29, #1384]
   40be0:	ldr	x0, [x29, #88]
   40be4:	cmp	x1, x0
   40be8:	b.ne	40c08 <vasnprintf@@Base+0xa0c>  // b.any
   40bec:	ldr	x0, [x29, #1328]
   40bf0:	cmp	x0, #0x0
   40bf4:	b.eq	40c08 <vasnprintf@@Base+0xa0c>  // b.none
   40bf8:	ldr	x2, [x29, #1328]
   40bfc:	ldr	x1, [x29, #1384]
   40c00:	ldr	x0, [x29, #1288]
   40c04:	bl	a790 <memcpy@plt>
   40c08:	ldr	x0, [x29, #1288]
   40c0c:	str	x0, [x29, #1384]
   40c10:	ldr	x1, [x29, #1384]
   40c14:	ldr	x0, [x29, #1328]
   40c18:	add	x0, x1, x0
   40c1c:	strb	wzr, [x0]
   40c20:	bl	b640 <__errno_location@plt>
   40c24:	ldr	w0, [x0]
   40c28:	str	w0, [x29, #1172]
   40c2c:	mov	w0, #0xffffffff            	// #-1
   40c30:	str	w0, [x29, #100]
   40c34:	str	wzr, [x29, #1284]
   40c38:	ldr	x1, [x29, #1336]
   40c3c:	ldr	x0, [x29, #1328]
   40c40:	sub	x0, x1, x0
   40c44:	str	x0, [x29, #1272]
   40c48:	ldr	x1, [x29, #1272]
   40c4c:	mov	x0, #0x7fffffff            	// #2147483647
   40c50:	cmp	x1, x0
   40c54:	b.ls	40c60 <vasnprintf@@Base+0xa64>  // b.plast
   40c58:	mov	x0, #0x7fffffff            	// #2147483647
   40c5c:	str	x0, [x29, #1272]
   40c60:	bl	b640 <__errno_location@plt>
   40c64:	str	wzr, [x0]
   40c68:	ldr	w0, [x29, #1204]
   40c6c:	sub	w0, w0, #0x1
   40c70:	cmp	w0, #0x10
   40c74:	b.hi	41cd4 <vasnprintf@@Base+0x1ad8>  // b.pmore
   40c78:	adrp	x1, 45000 <vasnprintf@@Base+0x4e04>
   40c7c:	add	x1, x1, #0x818
   40c80:	ldr	w0, [x1, w0, uxtw #2]
   40c84:	adr	x1, 40c90 <vasnprintf@@Base+0xa94>
   40c88:	add	x0, x1, w0, sxtw #2
   40c8c:	br	x0
   40c90:	ldr	x1, [x29, #120]
   40c94:	ldr	x0, [x29, #1368]
   40c98:	ldr	x0, [x0, #80]
   40c9c:	lsl	x0, x0, #5
   40ca0:	add	x0, x1, x0
   40ca4:	ldrsb	w0, [x0, #16]
   40ca8:	str	w0, [x29, #1056]
   40cac:	ldr	w0, [x29, #1300]
   40cb0:	cmp	w0, #0x2
   40cb4:	b.eq	40d40 <vasnprintf@@Base+0xb44>  // b.none
   40cb8:	ldr	w0, [x29, #1300]
   40cbc:	cmp	w0, #0x2
   40cc0:	b.hi	40d7c <vasnprintf@@Base+0xb80>  // b.pmore
   40cc4:	ldr	w0, [x29, #1300]
   40cc8:	cmp	w0, #0x0
   40ccc:	b.eq	40ce0 <vasnprintf@@Base+0xae4>  // b.none
   40cd0:	ldr	w0, [x29, #1300]
   40cd4:	cmp	w0, #0x1
   40cd8:	b.eq	40d0c <vasnprintf@@Base+0xb10>  // b.none
   40cdc:	b	40d7c <vasnprintf@@Base+0xb80>
   40ce0:	ldr	x1, [x29, #1384]
   40ce4:	ldr	x0, [x29, #1328]
   40ce8:	add	x0, x1, x0
   40cec:	add	x1, x29, #0x64
   40cf0:	mov	x4, x1
   40cf4:	ldr	w3, [x29, #1056]
   40cf8:	ldr	x2, [x29, #1360]
   40cfc:	ldr	x1, [x29, #1272]
   40d00:	bl	aa70 <snprintf@plt>
   40d04:	str	w0, [x29, #1284]
   40d08:	b	40d80 <vasnprintf@@Base+0xb84>
   40d0c:	ldr	x1, [x29, #1384]
   40d10:	ldr	x0, [x29, #1328]
   40d14:	add	x0, x1, x0
   40d18:	ldr	w1, [x29, #104]
   40d1c:	add	x2, x29, #0x64
   40d20:	mov	x5, x2
   40d24:	ldr	w4, [x29, #1056]
   40d28:	mov	w3, w1
   40d2c:	ldr	x2, [x29, #1360]
   40d30:	ldr	x1, [x29, #1272]
   40d34:	bl	aa70 <snprintf@plt>
   40d38:	str	w0, [x29, #1284]
   40d3c:	b	40d80 <vasnprintf@@Base+0xb84>
   40d40:	ldr	x1, [x29, #1384]
   40d44:	ldr	x0, [x29, #1328]
   40d48:	add	x0, x1, x0
   40d4c:	ldr	w1, [x29, #104]
   40d50:	ldr	w2, [x29, #108]
   40d54:	add	x3, x29, #0x64
   40d58:	mov	x6, x3
   40d5c:	ldr	w5, [x29, #1056]
   40d60:	mov	w4, w2
   40d64:	mov	w3, w1
   40d68:	ldr	x2, [x29, #1360]
   40d6c:	ldr	x1, [x29, #1272]
   40d70:	bl	aa70 <snprintf@plt>
   40d74:	str	w0, [x29, #1284]
   40d78:	b	40d80 <vasnprintf@@Base+0xb84>
   40d7c:	bl	af70 <abort@plt>
   40d80:	b	41cd8 <vasnprintf@@Base+0x1adc>
   40d84:	ldr	x1, [x29, #120]
   40d88:	ldr	x0, [x29, #1368]
   40d8c:	ldr	x0, [x0, #80]
   40d90:	lsl	x0, x0, #5
   40d94:	add	x0, x1, x0
   40d98:	ldrb	w0, [x0, #16]
   40d9c:	str	w0, [x29, #1060]
   40da0:	ldr	w0, [x29, #1300]
   40da4:	cmp	w0, #0x2
   40da8:	b.eq	40e34 <vasnprintf@@Base+0xc38>  // b.none
   40dac:	ldr	w0, [x29, #1300]
   40db0:	cmp	w0, #0x2
   40db4:	b.hi	40e70 <vasnprintf@@Base+0xc74>  // b.pmore
   40db8:	ldr	w0, [x29, #1300]
   40dbc:	cmp	w0, #0x0
   40dc0:	b.eq	40dd4 <vasnprintf@@Base+0xbd8>  // b.none
   40dc4:	ldr	w0, [x29, #1300]
   40dc8:	cmp	w0, #0x1
   40dcc:	b.eq	40e00 <vasnprintf@@Base+0xc04>  // b.none
   40dd0:	b	40e70 <vasnprintf@@Base+0xc74>
   40dd4:	ldr	x1, [x29, #1384]
   40dd8:	ldr	x0, [x29, #1328]
   40ddc:	add	x0, x1, x0
   40de0:	add	x1, x29, #0x64
   40de4:	mov	x4, x1
   40de8:	ldr	w3, [x29, #1060]
   40dec:	ldr	x2, [x29, #1360]
   40df0:	ldr	x1, [x29, #1272]
   40df4:	bl	aa70 <snprintf@plt>
   40df8:	str	w0, [x29, #1284]
   40dfc:	b	40e74 <vasnprintf@@Base+0xc78>
   40e00:	ldr	x1, [x29, #1384]
   40e04:	ldr	x0, [x29, #1328]
   40e08:	add	x0, x1, x0
   40e0c:	ldr	w1, [x29, #104]
   40e10:	add	x2, x29, #0x64
   40e14:	mov	x5, x2
   40e18:	ldr	w4, [x29, #1060]
   40e1c:	mov	w3, w1
   40e20:	ldr	x2, [x29, #1360]
   40e24:	ldr	x1, [x29, #1272]
   40e28:	bl	aa70 <snprintf@plt>
   40e2c:	str	w0, [x29, #1284]
   40e30:	b	40e74 <vasnprintf@@Base+0xc78>
   40e34:	ldr	x1, [x29, #1384]
   40e38:	ldr	x0, [x29, #1328]
   40e3c:	add	x0, x1, x0
   40e40:	ldr	w1, [x29, #104]
   40e44:	ldr	w2, [x29, #108]
   40e48:	add	x3, x29, #0x64
   40e4c:	mov	x6, x3
   40e50:	ldr	w5, [x29, #1060]
   40e54:	mov	w4, w2
   40e58:	mov	w3, w1
   40e5c:	ldr	x2, [x29, #1360]
   40e60:	ldr	x1, [x29, #1272]
   40e64:	bl	aa70 <snprintf@plt>
   40e68:	str	w0, [x29, #1284]
   40e6c:	b	40e74 <vasnprintf@@Base+0xc78>
   40e70:	bl	af70 <abort@plt>
   40e74:	b	41cd8 <vasnprintf@@Base+0x1adc>
   40e78:	ldr	x1, [x29, #120]
   40e7c:	ldr	x0, [x29, #1368]
   40e80:	ldr	x0, [x0, #80]
   40e84:	lsl	x0, x0, #5
   40e88:	add	x0, x1, x0
   40e8c:	ldrsh	w0, [x0, #16]
   40e90:	str	w0, [x29, #1064]
   40e94:	ldr	w0, [x29, #1300]
   40e98:	cmp	w0, #0x2
   40e9c:	b.eq	40f28 <vasnprintf@@Base+0xd2c>  // b.none
   40ea0:	ldr	w0, [x29, #1300]
   40ea4:	cmp	w0, #0x2
   40ea8:	b.hi	40f64 <vasnprintf@@Base+0xd68>  // b.pmore
   40eac:	ldr	w0, [x29, #1300]
   40eb0:	cmp	w0, #0x0
   40eb4:	b.eq	40ec8 <vasnprintf@@Base+0xccc>  // b.none
   40eb8:	ldr	w0, [x29, #1300]
   40ebc:	cmp	w0, #0x1
   40ec0:	b.eq	40ef4 <vasnprintf@@Base+0xcf8>  // b.none
   40ec4:	b	40f64 <vasnprintf@@Base+0xd68>
   40ec8:	ldr	x1, [x29, #1384]
   40ecc:	ldr	x0, [x29, #1328]
   40ed0:	add	x0, x1, x0
   40ed4:	add	x1, x29, #0x64
   40ed8:	mov	x4, x1
   40edc:	ldr	w3, [x29, #1064]
   40ee0:	ldr	x2, [x29, #1360]
   40ee4:	ldr	x1, [x29, #1272]
   40ee8:	bl	aa70 <snprintf@plt>
   40eec:	str	w0, [x29, #1284]
   40ef0:	b	40f68 <vasnprintf@@Base+0xd6c>
   40ef4:	ldr	x1, [x29, #1384]
   40ef8:	ldr	x0, [x29, #1328]
   40efc:	add	x0, x1, x0
   40f00:	ldr	w1, [x29, #104]
   40f04:	add	x2, x29, #0x64
   40f08:	mov	x5, x2
   40f0c:	ldr	w4, [x29, #1064]
   40f10:	mov	w3, w1
   40f14:	ldr	x2, [x29, #1360]
   40f18:	ldr	x1, [x29, #1272]
   40f1c:	bl	aa70 <snprintf@plt>
   40f20:	str	w0, [x29, #1284]
   40f24:	b	40f68 <vasnprintf@@Base+0xd6c>
   40f28:	ldr	x1, [x29, #1384]
   40f2c:	ldr	x0, [x29, #1328]
   40f30:	add	x0, x1, x0
   40f34:	ldr	w1, [x29, #104]
   40f38:	ldr	w2, [x29, #108]
   40f3c:	add	x3, x29, #0x64
   40f40:	mov	x6, x3
   40f44:	ldr	w5, [x29, #1064]
   40f48:	mov	w4, w2
   40f4c:	mov	w3, w1
   40f50:	ldr	x2, [x29, #1360]
   40f54:	ldr	x1, [x29, #1272]
   40f58:	bl	aa70 <snprintf@plt>
   40f5c:	str	w0, [x29, #1284]
   40f60:	b	40f68 <vasnprintf@@Base+0xd6c>
   40f64:	bl	af70 <abort@plt>
   40f68:	b	41cd8 <vasnprintf@@Base+0x1adc>
   40f6c:	ldr	x1, [x29, #120]
   40f70:	ldr	x0, [x29, #1368]
   40f74:	ldr	x0, [x0, #80]
   40f78:	lsl	x0, x0, #5
   40f7c:	add	x0, x1, x0
   40f80:	ldrh	w0, [x0, #16]
   40f84:	str	w0, [x29, #1068]
   40f88:	ldr	w0, [x29, #1300]
   40f8c:	cmp	w0, #0x2
   40f90:	b.eq	4101c <vasnprintf@@Base+0xe20>  // b.none
   40f94:	ldr	w0, [x29, #1300]
   40f98:	cmp	w0, #0x2
   40f9c:	b.hi	41058 <vasnprintf@@Base+0xe5c>  // b.pmore
   40fa0:	ldr	w0, [x29, #1300]
   40fa4:	cmp	w0, #0x0
   40fa8:	b.eq	40fbc <vasnprintf@@Base+0xdc0>  // b.none
   40fac:	ldr	w0, [x29, #1300]
   40fb0:	cmp	w0, #0x1
   40fb4:	b.eq	40fe8 <vasnprintf@@Base+0xdec>  // b.none
   40fb8:	b	41058 <vasnprintf@@Base+0xe5c>
   40fbc:	ldr	x1, [x29, #1384]
   40fc0:	ldr	x0, [x29, #1328]
   40fc4:	add	x0, x1, x0
   40fc8:	add	x1, x29, #0x64
   40fcc:	mov	x4, x1
   40fd0:	ldr	w3, [x29, #1068]
   40fd4:	ldr	x2, [x29, #1360]
   40fd8:	ldr	x1, [x29, #1272]
   40fdc:	bl	aa70 <snprintf@plt>
   40fe0:	str	w0, [x29, #1284]
   40fe4:	b	4105c <vasnprintf@@Base+0xe60>
   40fe8:	ldr	x1, [x29, #1384]
   40fec:	ldr	x0, [x29, #1328]
   40ff0:	add	x0, x1, x0
   40ff4:	ldr	w1, [x29, #104]
   40ff8:	add	x2, x29, #0x64
   40ffc:	mov	x5, x2
   41000:	ldr	w4, [x29, #1068]
   41004:	mov	w3, w1
   41008:	ldr	x2, [x29, #1360]
   4100c:	ldr	x1, [x29, #1272]
   41010:	bl	aa70 <snprintf@plt>
   41014:	str	w0, [x29, #1284]
   41018:	b	4105c <vasnprintf@@Base+0xe60>
   4101c:	ldr	x1, [x29, #1384]
   41020:	ldr	x0, [x29, #1328]
   41024:	add	x0, x1, x0
   41028:	ldr	w1, [x29, #104]
   4102c:	ldr	w2, [x29, #108]
   41030:	add	x3, x29, #0x64
   41034:	mov	x6, x3
   41038:	ldr	w5, [x29, #1068]
   4103c:	mov	w4, w2
   41040:	mov	w3, w1
   41044:	ldr	x2, [x29, #1360]
   41048:	ldr	x1, [x29, #1272]
   4104c:	bl	aa70 <snprintf@plt>
   41050:	str	w0, [x29, #1284]
   41054:	b	4105c <vasnprintf@@Base+0xe60>
   41058:	bl	af70 <abort@plt>
   4105c:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41060:	ldr	x1, [x29, #120]
   41064:	ldr	x0, [x29, #1368]
   41068:	ldr	x0, [x0, #80]
   4106c:	lsl	x0, x0, #5
   41070:	add	x0, x1, x0
   41074:	ldr	w0, [x0, #16]
   41078:	str	w0, [x29, #1072]
   4107c:	ldr	w0, [x29, #1300]
   41080:	cmp	w0, #0x2
   41084:	b.eq	41110 <vasnprintf@@Base+0xf14>  // b.none
   41088:	ldr	w0, [x29, #1300]
   4108c:	cmp	w0, #0x2
   41090:	b.hi	4114c <vasnprintf@@Base+0xf50>  // b.pmore
   41094:	ldr	w0, [x29, #1300]
   41098:	cmp	w0, #0x0
   4109c:	b.eq	410b0 <vasnprintf@@Base+0xeb4>  // b.none
   410a0:	ldr	w0, [x29, #1300]
   410a4:	cmp	w0, #0x1
   410a8:	b.eq	410dc <vasnprintf@@Base+0xee0>  // b.none
   410ac:	b	4114c <vasnprintf@@Base+0xf50>
   410b0:	ldr	x1, [x29, #1384]
   410b4:	ldr	x0, [x29, #1328]
   410b8:	add	x0, x1, x0
   410bc:	add	x1, x29, #0x64
   410c0:	mov	x4, x1
   410c4:	ldr	w3, [x29, #1072]
   410c8:	ldr	x2, [x29, #1360]
   410cc:	ldr	x1, [x29, #1272]
   410d0:	bl	aa70 <snprintf@plt>
   410d4:	str	w0, [x29, #1284]
   410d8:	b	41150 <vasnprintf@@Base+0xf54>
   410dc:	ldr	x1, [x29, #1384]
   410e0:	ldr	x0, [x29, #1328]
   410e4:	add	x0, x1, x0
   410e8:	ldr	w1, [x29, #104]
   410ec:	add	x2, x29, #0x64
   410f0:	mov	x5, x2
   410f4:	ldr	w4, [x29, #1072]
   410f8:	mov	w3, w1
   410fc:	ldr	x2, [x29, #1360]
   41100:	ldr	x1, [x29, #1272]
   41104:	bl	aa70 <snprintf@plt>
   41108:	str	w0, [x29, #1284]
   4110c:	b	41150 <vasnprintf@@Base+0xf54>
   41110:	ldr	x1, [x29, #1384]
   41114:	ldr	x0, [x29, #1328]
   41118:	add	x0, x1, x0
   4111c:	ldr	w1, [x29, #104]
   41120:	ldr	w2, [x29, #108]
   41124:	add	x3, x29, #0x64
   41128:	mov	x6, x3
   4112c:	ldr	w5, [x29, #1072]
   41130:	mov	w4, w2
   41134:	mov	w3, w1
   41138:	ldr	x2, [x29, #1360]
   4113c:	ldr	x1, [x29, #1272]
   41140:	bl	aa70 <snprintf@plt>
   41144:	str	w0, [x29, #1284]
   41148:	b	41150 <vasnprintf@@Base+0xf54>
   4114c:	bl	af70 <abort@plt>
   41150:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41154:	ldr	x1, [x29, #120]
   41158:	ldr	x0, [x29, #1368]
   4115c:	ldr	x0, [x0, #80]
   41160:	lsl	x0, x0, #5
   41164:	add	x0, x1, x0
   41168:	ldr	w0, [x0, #16]
   4116c:	str	w0, [x29, #1076]
   41170:	ldr	w0, [x29, #1300]
   41174:	cmp	w0, #0x2
   41178:	b.eq	41204 <vasnprintf@@Base+0x1008>  // b.none
   4117c:	ldr	w0, [x29, #1300]
   41180:	cmp	w0, #0x2
   41184:	b.hi	41240 <vasnprintf@@Base+0x1044>  // b.pmore
   41188:	ldr	w0, [x29, #1300]
   4118c:	cmp	w0, #0x0
   41190:	b.eq	411a4 <vasnprintf@@Base+0xfa8>  // b.none
   41194:	ldr	w0, [x29, #1300]
   41198:	cmp	w0, #0x1
   4119c:	b.eq	411d0 <vasnprintf@@Base+0xfd4>  // b.none
   411a0:	b	41240 <vasnprintf@@Base+0x1044>
   411a4:	ldr	x1, [x29, #1384]
   411a8:	ldr	x0, [x29, #1328]
   411ac:	add	x0, x1, x0
   411b0:	add	x1, x29, #0x64
   411b4:	mov	x4, x1
   411b8:	ldr	w3, [x29, #1076]
   411bc:	ldr	x2, [x29, #1360]
   411c0:	ldr	x1, [x29, #1272]
   411c4:	bl	aa70 <snprintf@plt>
   411c8:	str	w0, [x29, #1284]
   411cc:	b	41244 <vasnprintf@@Base+0x1048>
   411d0:	ldr	x1, [x29, #1384]
   411d4:	ldr	x0, [x29, #1328]
   411d8:	add	x0, x1, x0
   411dc:	ldr	w1, [x29, #104]
   411e0:	add	x2, x29, #0x64
   411e4:	mov	x5, x2
   411e8:	ldr	w4, [x29, #1076]
   411ec:	mov	w3, w1
   411f0:	ldr	x2, [x29, #1360]
   411f4:	ldr	x1, [x29, #1272]
   411f8:	bl	aa70 <snprintf@plt>
   411fc:	str	w0, [x29, #1284]
   41200:	b	41244 <vasnprintf@@Base+0x1048>
   41204:	ldr	x1, [x29, #1384]
   41208:	ldr	x0, [x29, #1328]
   4120c:	add	x0, x1, x0
   41210:	ldr	w1, [x29, #104]
   41214:	ldr	w2, [x29, #108]
   41218:	add	x3, x29, #0x64
   4121c:	mov	x6, x3
   41220:	ldr	w5, [x29, #1076]
   41224:	mov	w4, w2
   41228:	mov	w3, w1
   4122c:	ldr	x2, [x29, #1360]
   41230:	ldr	x1, [x29, #1272]
   41234:	bl	aa70 <snprintf@plt>
   41238:	str	w0, [x29, #1284]
   4123c:	b	41244 <vasnprintf@@Base+0x1048>
   41240:	bl	af70 <abort@plt>
   41244:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41248:	ldr	x1, [x29, #120]
   4124c:	ldr	x0, [x29, #1368]
   41250:	ldr	x0, [x0, #80]
   41254:	lsl	x0, x0, #5
   41258:	add	x0, x1, x0
   4125c:	ldr	x0, [x0, #16]
   41260:	str	x0, [x29, #1080]
   41264:	ldr	w0, [x29, #1300]
   41268:	cmp	w0, #0x2
   4126c:	b.eq	412f8 <vasnprintf@@Base+0x10fc>  // b.none
   41270:	ldr	w0, [x29, #1300]
   41274:	cmp	w0, #0x2
   41278:	b.hi	41334 <vasnprintf@@Base+0x1138>  // b.pmore
   4127c:	ldr	w0, [x29, #1300]
   41280:	cmp	w0, #0x0
   41284:	b.eq	41298 <vasnprintf@@Base+0x109c>  // b.none
   41288:	ldr	w0, [x29, #1300]
   4128c:	cmp	w0, #0x1
   41290:	b.eq	412c4 <vasnprintf@@Base+0x10c8>  // b.none
   41294:	b	41334 <vasnprintf@@Base+0x1138>
   41298:	ldr	x1, [x29, #1384]
   4129c:	ldr	x0, [x29, #1328]
   412a0:	add	x0, x1, x0
   412a4:	add	x1, x29, #0x64
   412a8:	mov	x4, x1
   412ac:	ldr	x3, [x29, #1080]
   412b0:	ldr	x2, [x29, #1360]
   412b4:	ldr	x1, [x29, #1272]
   412b8:	bl	aa70 <snprintf@plt>
   412bc:	str	w0, [x29, #1284]
   412c0:	b	41338 <vasnprintf@@Base+0x113c>
   412c4:	ldr	x1, [x29, #1384]
   412c8:	ldr	x0, [x29, #1328]
   412cc:	add	x0, x1, x0
   412d0:	ldr	w1, [x29, #104]
   412d4:	add	x2, x29, #0x64
   412d8:	mov	x5, x2
   412dc:	ldr	x4, [x29, #1080]
   412e0:	mov	w3, w1
   412e4:	ldr	x2, [x29, #1360]
   412e8:	ldr	x1, [x29, #1272]
   412ec:	bl	aa70 <snprintf@plt>
   412f0:	str	w0, [x29, #1284]
   412f4:	b	41338 <vasnprintf@@Base+0x113c>
   412f8:	ldr	x1, [x29, #1384]
   412fc:	ldr	x0, [x29, #1328]
   41300:	add	x0, x1, x0
   41304:	ldr	w1, [x29, #104]
   41308:	ldr	w2, [x29, #108]
   4130c:	add	x3, x29, #0x64
   41310:	mov	x6, x3
   41314:	ldr	x5, [x29, #1080]
   41318:	mov	w4, w2
   4131c:	mov	w3, w1
   41320:	ldr	x2, [x29, #1360]
   41324:	ldr	x1, [x29, #1272]
   41328:	bl	aa70 <snprintf@plt>
   4132c:	str	w0, [x29, #1284]
   41330:	b	41338 <vasnprintf@@Base+0x113c>
   41334:	bl	af70 <abort@plt>
   41338:	b	41cd8 <vasnprintf@@Base+0x1adc>
   4133c:	ldr	x1, [x29, #120]
   41340:	ldr	x0, [x29, #1368]
   41344:	ldr	x0, [x0, #80]
   41348:	lsl	x0, x0, #5
   4134c:	add	x0, x1, x0
   41350:	ldr	x0, [x0, #16]
   41354:	str	x0, [x29, #1088]
   41358:	ldr	w0, [x29, #1300]
   4135c:	cmp	w0, #0x2
   41360:	b.eq	413ec <vasnprintf@@Base+0x11f0>  // b.none
   41364:	ldr	w0, [x29, #1300]
   41368:	cmp	w0, #0x2
   4136c:	b.hi	41428 <vasnprintf@@Base+0x122c>  // b.pmore
   41370:	ldr	w0, [x29, #1300]
   41374:	cmp	w0, #0x0
   41378:	b.eq	4138c <vasnprintf@@Base+0x1190>  // b.none
   4137c:	ldr	w0, [x29, #1300]
   41380:	cmp	w0, #0x1
   41384:	b.eq	413b8 <vasnprintf@@Base+0x11bc>  // b.none
   41388:	b	41428 <vasnprintf@@Base+0x122c>
   4138c:	ldr	x1, [x29, #1384]
   41390:	ldr	x0, [x29, #1328]
   41394:	add	x0, x1, x0
   41398:	add	x1, x29, #0x64
   4139c:	mov	x4, x1
   413a0:	ldr	x3, [x29, #1088]
   413a4:	ldr	x2, [x29, #1360]
   413a8:	ldr	x1, [x29, #1272]
   413ac:	bl	aa70 <snprintf@plt>
   413b0:	str	w0, [x29, #1284]
   413b4:	b	4142c <vasnprintf@@Base+0x1230>
   413b8:	ldr	x1, [x29, #1384]
   413bc:	ldr	x0, [x29, #1328]
   413c0:	add	x0, x1, x0
   413c4:	ldr	w1, [x29, #104]
   413c8:	add	x2, x29, #0x64
   413cc:	mov	x5, x2
   413d0:	ldr	x4, [x29, #1088]
   413d4:	mov	w3, w1
   413d8:	ldr	x2, [x29, #1360]
   413dc:	ldr	x1, [x29, #1272]
   413e0:	bl	aa70 <snprintf@plt>
   413e4:	str	w0, [x29, #1284]
   413e8:	b	4142c <vasnprintf@@Base+0x1230>
   413ec:	ldr	x1, [x29, #1384]
   413f0:	ldr	x0, [x29, #1328]
   413f4:	add	x0, x1, x0
   413f8:	ldr	w1, [x29, #104]
   413fc:	ldr	w2, [x29, #108]
   41400:	add	x3, x29, #0x64
   41404:	mov	x6, x3
   41408:	ldr	x5, [x29, #1088]
   4140c:	mov	w4, w2
   41410:	mov	w3, w1
   41414:	ldr	x2, [x29, #1360]
   41418:	ldr	x1, [x29, #1272]
   4141c:	bl	aa70 <snprintf@plt>
   41420:	str	w0, [x29, #1284]
   41424:	b	4142c <vasnprintf@@Base+0x1230>
   41428:	bl	af70 <abort@plt>
   4142c:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41430:	ldr	x1, [x29, #120]
   41434:	ldr	x0, [x29, #1368]
   41438:	ldr	x0, [x0, #80]
   4143c:	lsl	x0, x0, #5
   41440:	add	x0, x1, x0
   41444:	ldr	x0, [x0, #16]
   41448:	str	x0, [x29, #1096]
   4144c:	ldr	w0, [x29, #1300]
   41450:	cmp	w0, #0x2
   41454:	b.eq	414e0 <vasnprintf@@Base+0x12e4>  // b.none
   41458:	ldr	w0, [x29, #1300]
   4145c:	cmp	w0, #0x2
   41460:	b.hi	4151c <vasnprintf@@Base+0x1320>  // b.pmore
   41464:	ldr	w0, [x29, #1300]
   41468:	cmp	w0, #0x0
   4146c:	b.eq	41480 <vasnprintf@@Base+0x1284>  // b.none
   41470:	ldr	w0, [x29, #1300]
   41474:	cmp	w0, #0x1
   41478:	b.eq	414ac <vasnprintf@@Base+0x12b0>  // b.none
   4147c:	b	4151c <vasnprintf@@Base+0x1320>
   41480:	ldr	x1, [x29, #1384]
   41484:	ldr	x0, [x29, #1328]
   41488:	add	x0, x1, x0
   4148c:	add	x1, x29, #0x64
   41490:	mov	x4, x1
   41494:	ldr	x3, [x29, #1096]
   41498:	ldr	x2, [x29, #1360]
   4149c:	ldr	x1, [x29, #1272]
   414a0:	bl	aa70 <snprintf@plt>
   414a4:	str	w0, [x29, #1284]
   414a8:	b	41520 <vasnprintf@@Base+0x1324>
   414ac:	ldr	x1, [x29, #1384]
   414b0:	ldr	x0, [x29, #1328]
   414b4:	add	x0, x1, x0
   414b8:	ldr	w1, [x29, #104]
   414bc:	add	x2, x29, #0x64
   414c0:	mov	x5, x2
   414c4:	ldr	x4, [x29, #1096]
   414c8:	mov	w3, w1
   414cc:	ldr	x2, [x29, #1360]
   414d0:	ldr	x1, [x29, #1272]
   414d4:	bl	aa70 <snprintf@plt>
   414d8:	str	w0, [x29, #1284]
   414dc:	b	41520 <vasnprintf@@Base+0x1324>
   414e0:	ldr	x1, [x29, #1384]
   414e4:	ldr	x0, [x29, #1328]
   414e8:	add	x0, x1, x0
   414ec:	ldr	w1, [x29, #104]
   414f0:	ldr	w2, [x29, #108]
   414f4:	add	x3, x29, #0x64
   414f8:	mov	x6, x3
   414fc:	ldr	x5, [x29, #1096]
   41500:	mov	w4, w2
   41504:	mov	w3, w1
   41508:	ldr	x2, [x29, #1360]
   4150c:	ldr	x1, [x29, #1272]
   41510:	bl	aa70 <snprintf@plt>
   41514:	str	w0, [x29, #1284]
   41518:	b	41520 <vasnprintf@@Base+0x1324>
   4151c:	bl	af70 <abort@plt>
   41520:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41524:	ldr	x1, [x29, #120]
   41528:	ldr	x0, [x29, #1368]
   4152c:	ldr	x0, [x0, #80]
   41530:	lsl	x0, x0, #5
   41534:	add	x0, x1, x0
   41538:	ldr	x0, [x0, #16]
   4153c:	str	x0, [x29, #1104]
   41540:	ldr	w0, [x29, #1300]
   41544:	cmp	w0, #0x2
   41548:	b.eq	415d4 <vasnprintf@@Base+0x13d8>  // b.none
   4154c:	ldr	w0, [x29, #1300]
   41550:	cmp	w0, #0x2
   41554:	b.hi	41610 <vasnprintf@@Base+0x1414>  // b.pmore
   41558:	ldr	w0, [x29, #1300]
   4155c:	cmp	w0, #0x0
   41560:	b.eq	41574 <vasnprintf@@Base+0x1378>  // b.none
   41564:	ldr	w0, [x29, #1300]
   41568:	cmp	w0, #0x1
   4156c:	b.eq	415a0 <vasnprintf@@Base+0x13a4>  // b.none
   41570:	b	41610 <vasnprintf@@Base+0x1414>
   41574:	ldr	x1, [x29, #1384]
   41578:	ldr	x0, [x29, #1328]
   4157c:	add	x0, x1, x0
   41580:	add	x1, x29, #0x64
   41584:	mov	x4, x1
   41588:	ldr	x3, [x29, #1104]
   4158c:	ldr	x2, [x29, #1360]
   41590:	ldr	x1, [x29, #1272]
   41594:	bl	aa70 <snprintf@plt>
   41598:	str	w0, [x29, #1284]
   4159c:	b	41614 <vasnprintf@@Base+0x1418>
   415a0:	ldr	x1, [x29, #1384]
   415a4:	ldr	x0, [x29, #1328]
   415a8:	add	x0, x1, x0
   415ac:	ldr	w1, [x29, #104]
   415b0:	add	x2, x29, #0x64
   415b4:	mov	x5, x2
   415b8:	ldr	x4, [x29, #1104]
   415bc:	mov	w3, w1
   415c0:	ldr	x2, [x29, #1360]
   415c4:	ldr	x1, [x29, #1272]
   415c8:	bl	aa70 <snprintf@plt>
   415cc:	str	w0, [x29, #1284]
   415d0:	b	41614 <vasnprintf@@Base+0x1418>
   415d4:	ldr	x1, [x29, #1384]
   415d8:	ldr	x0, [x29, #1328]
   415dc:	add	x0, x1, x0
   415e0:	ldr	w1, [x29, #104]
   415e4:	ldr	w2, [x29, #108]
   415e8:	add	x3, x29, #0x64
   415ec:	mov	x6, x3
   415f0:	ldr	x5, [x29, #1104]
   415f4:	mov	w4, w2
   415f8:	mov	w3, w1
   415fc:	ldr	x2, [x29, #1360]
   41600:	ldr	x1, [x29, #1272]
   41604:	bl	aa70 <snprintf@plt>
   41608:	str	w0, [x29, #1284]
   4160c:	b	41614 <vasnprintf@@Base+0x1418>
   41610:	bl	af70 <abort@plt>
   41614:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41618:	ldr	x1, [x29, #120]
   4161c:	ldr	x0, [x29, #1368]
   41620:	ldr	x0, [x0, #80]
   41624:	lsl	x0, x0, #5
   41628:	add	x0, x1, x0
   4162c:	ldr	d0, [x0, #16]
   41630:	str	d0, [x29, #1112]
   41634:	ldr	w0, [x29, #1300]
   41638:	cmp	w0, #0x2
   4163c:	b.eq	416c8 <vasnprintf@@Base+0x14cc>  // b.none
   41640:	ldr	w0, [x29, #1300]
   41644:	cmp	w0, #0x2
   41648:	b.hi	41704 <vasnprintf@@Base+0x1508>  // b.pmore
   4164c:	ldr	w0, [x29, #1300]
   41650:	cmp	w0, #0x0
   41654:	b.eq	41668 <vasnprintf@@Base+0x146c>  // b.none
   41658:	ldr	w0, [x29, #1300]
   4165c:	cmp	w0, #0x1
   41660:	b.eq	41694 <vasnprintf@@Base+0x1498>  // b.none
   41664:	b	41704 <vasnprintf@@Base+0x1508>
   41668:	ldr	x1, [x29, #1384]
   4166c:	ldr	x0, [x29, #1328]
   41670:	add	x0, x1, x0
   41674:	add	x1, x29, #0x64
   41678:	mov	x3, x1
   4167c:	ldr	d0, [x29, #1112]
   41680:	ldr	x2, [x29, #1360]
   41684:	ldr	x1, [x29, #1272]
   41688:	bl	aa70 <snprintf@plt>
   4168c:	str	w0, [x29, #1284]
   41690:	b	41708 <vasnprintf@@Base+0x150c>
   41694:	ldr	x1, [x29, #1384]
   41698:	ldr	x0, [x29, #1328]
   4169c:	add	x0, x1, x0
   416a0:	ldr	w1, [x29, #104]
   416a4:	add	x2, x29, #0x64
   416a8:	mov	x4, x2
   416ac:	ldr	d0, [x29, #1112]
   416b0:	mov	w3, w1
   416b4:	ldr	x2, [x29, #1360]
   416b8:	ldr	x1, [x29, #1272]
   416bc:	bl	aa70 <snprintf@plt>
   416c0:	str	w0, [x29, #1284]
   416c4:	b	41708 <vasnprintf@@Base+0x150c>
   416c8:	ldr	x1, [x29, #1384]
   416cc:	ldr	x0, [x29, #1328]
   416d0:	add	x0, x1, x0
   416d4:	ldr	w1, [x29, #104]
   416d8:	ldr	w2, [x29, #108]
   416dc:	add	x3, x29, #0x64
   416e0:	mov	x5, x3
   416e4:	ldr	d0, [x29, #1112]
   416e8:	mov	w4, w2
   416ec:	mov	w3, w1
   416f0:	ldr	x2, [x29, #1360]
   416f4:	ldr	x1, [x29, #1272]
   416f8:	bl	aa70 <snprintf@plt>
   416fc:	str	w0, [x29, #1284]
   41700:	b	41708 <vasnprintf@@Base+0x150c>
   41704:	bl	af70 <abort@plt>
   41708:	b	41cd8 <vasnprintf@@Base+0x1adc>
   4170c:	ldr	x1, [x29, #120]
   41710:	ldr	x0, [x29, #1368]
   41714:	ldr	x0, [x0, #80]
   41718:	lsl	x0, x0, #5
   4171c:	add	x0, x1, x0
   41720:	ldr	q0, [x0, #16]
   41724:	add	x0, x29, #0x400
   41728:	str	q0, [x0, #96]
   4172c:	ldr	w0, [x29, #1300]
   41730:	cmp	w0, #0x2
   41734:	b.eq	417c8 <vasnprintf@@Base+0x15cc>  // b.none
   41738:	ldr	w0, [x29, #1300]
   4173c:	cmp	w0, #0x2
   41740:	b.hi	41808 <vasnprintf@@Base+0x160c>  // b.pmore
   41744:	ldr	w0, [x29, #1300]
   41748:	cmp	w0, #0x0
   4174c:	b.eq	41760 <vasnprintf@@Base+0x1564>  // b.none
   41750:	ldr	w0, [x29, #1300]
   41754:	cmp	w0, #0x1
   41758:	b.eq	41790 <vasnprintf@@Base+0x1594>  // b.none
   4175c:	b	41808 <vasnprintf@@Base+0x160c>
   41760:	ldr	x1, [x29, #1384]
   41764:	ldr	x0, [x29, #1328]
   41768:	add	x0, x1, x0
   4176c:	add	x1, x29, #0x64
   41770:	mov	x3, x1
   41774:	add	x1, x29, #0x400
   41778:	ldr	q0, [x1, #96]
   4177c:	ldr	x2, [x29, #1360]
   41780:	ldr	x1, [x29, #1272]
   41784:	bl	aa70 <snprintf@plt>
   41788:	str	w0, [x29, #1284]
   4178c:	b	4180c <vasnprintf@@Base+0x1610>
   41790:	ldr	x1, [x29, #1384]
   41794:	ldr	x0, [x29, #1328]
   41798:	add	x0, x1, x0
   4179c:	ldr	w1, [x29, #104]
   417a0:	add	x2, x29, #0x64
   417a4:	mov	x4, x2
   417a8:	add	x2, x29, #0x400
   417ac:	ldr	q0, [x2, #96]
   417b0:	mov	w3, w1
   417b4:	ldr	x2, [x29, #1360]
   417b8:	ldr	x1, [x29, #1272]
   417bc:	bl	aa70 <snprintf@plt>
   417c0:	str	w0, [x29, #1284]
   417c4:	b	4180c <vasnprintf@@Base+0x1610>
   417c8:	ldr	x1, [x29, #1384]
   417cc:	ldr	x0, [x29, #1328]
   417d0:	add	x0, x1, x0
   417d4:	ldr	w1, [x29, #104]
   417d8:	ldr	w2, [x29, #108]
   417dc:	add	x3, x29, #0x64
   417e0:	mov	x5, x3
   417e4:	add	x3, x29, #0x400
   417e8:	ldr	q0, [x3, #96]
   417ec:	mov	w4, w2
   417f0:	mov	w3, w1
   417f4:	ldr	x2, [x29, #1360]
   417f8:	ldr	x1, [x29, #1272]
   417fc:	bl	aa70 <snprintf@plt>
   41800:	str	w0, [x29, #1284]
   41804:	b	4180c <vasnprintf@@Base+0x1610>
   41808:	bl	af70 <abort@plt>
   4180c:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41810:	ldr	x1, [x29, #120]
   41814:	ldr	x0, [x29, #1368]
   41818:	ldr	x0, [x0, #80]
   4181c:	lsl	x0, x0, #5
   41820:	add	x0, x1, x0
   41824:	ldr	w0, [x0, #16]
   41828:	str	w0, [x29, #1136]
   4182c:	ldr	w0, [x29, #1300]
   41830:	cmp	w0, #0x2
   41834:	b.eq	418c0 <vasnprintf@@Base+0x16c4>  // b.none
   41838:	ldr	w0, [x29, #1300]
   4183c:	cmp	w0, #0x2
   41840:	b.hi	418fc <vasnprintf@@Base+0x1700>  // b.pmore
   41844:	ldr	w0, [x29, #1300]
   41848:	cmp	w0, #0x0
   4184c:	b.eq	41860 <vasnprintf@@Base+0x1664>  // b.none
   41850:	ldr	w0, [x29, #1300]
   41854:	cmp	w0, #0x1
   41858:	b.eq	4188c <vasnprintf@@Base+0x1690>  // b.none
   4185c:	b	418fc <vasnprintf@@Base+0x1700>
   41860:	ldr	x1, [x29, #1384]
   41864:	ldr	x0, [x29, #1328]
   41868:	add	x0, x1, x0
   4186c:	add	x1, x29, #0x64
   41870:	mov	x4, x1
   41874:	ldr	w3, [x29, #1136]
   41878:	ldr	x2, [x29, #1360]
   4187c:	ldr	x1, [x29, #1272]
   41880:	bl	aa70 <snprintf@plt>
   41884:	str	w0, [x29, #1284]
   41888:	b	41900 <vasnprintf@@Base+0x1704>
   4188c:	ldr	x1, [x29, #1384]
   41890:	ldr	x0, [x29, #1328]
   41894:	add	x0, x1, x0
   41898:	ldr	w1, [x29, #104]
   4189c:	add	x2, x29, #0x64
   418a0:	mov	x5, x2
   418a4:	ldr	w4, [x29, #1136]
   418a8:	mov	w3, w1
   418ac:	ldr	x2, [x29, #1360]
   418b0:	ldr	x1, [x29, #1272]
   418b4:	bl	aa70 <snprintf@plt>
   418b8:	str	w0, [x29, #1284]
   418bc:	b	41900 <vasnprintf@@Base+0x1704>
   418c0:	ldr	x1, [x29, #1384]
   418c4:	ldr	x0, [x29, #1328]
   418c8:	add	x0, x1, x0
   418cc:	ldr	w1, [x29, #104]
   418d0:	ldr	w2, [x29, #108]
   418d4:	add	x3, x29, #0x64
   418d8:	mov	x6, x3
   418dc:	ldr	w5, [x29, #1136]
   418e0:	mov	w4, w2
   418e4:	mov	w3, w1
   418e8:	ldr	x2, [x29, #1360]
   418ec:	ldr	x1, [x29, #1272]
   418f0:	bl	aa70 <snprintf@plt>
   418f4:	str	w0, [x29, #1284]
   418f8:	b	41900 <vasnprintf@@Base+0x1704>
   418fc:	bl	af70 <abort@plt>
   41900:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41904:	ldr	x1, [x29, #120]
   41908:	ldr	x0, [x29, #1368]
   4190c:	ldr	x0, [x0, #80]
   41910:	lsl	x0, x0, #5
   41914:	add	x0, x1, x0
   41918:	ldr	w0, [x0, #16]
   4191c:	str	w0, [x29, #1140]
   41920:	ldr	w0, [x29, #1300]
   41924:	cmp	w0, #0x2
   41928:	b.eq	419b4 <vasnprintf@@Base+0x17b8>  // b.none
   4192c:	ldr	w0, [x29, #1300]
   41930:	cmp	w0, #0x2
   41934:	b.hi	419f0 <vasnprintf@@Base+0x17f4>  // b.pmore
   41938:	ldr	w0, [x29, #1300]
   4193c:	cmp	w0, #0x0
   41940:	b.eq	41954 <vasnprintf@@Base+0x1758>  // b.none
   41944:	ldr	w0, [x29, #1300]
   41948:	cmp	w0, #0x1
   4194c:	b.eq	41980 <vasnprintf@@Base+0x1784>  // b.none
   41950:	b	419f0 <vasnprintf@@Base+0x17f4>
   41954:	ldr	x1, [x29, #1384]
   41958:	ldr	x0, [x29, #1328]
   4195c:	add	x0, x1, x0
   41960:	add	x1, x29, #0x64
   41964:	mov	x4, x1
   41968:	ldr	w3, [x29, #1140]
   4196c:	ldr	x2, [x29, #1360]
   41970:	ldr	x1, [x29, #1272]
   41974:	bl	aa70 <snprintf@plt>
   41978:	str	w0, [x29, #1284]
   4197c:	b	419f4 <vasnprintf@@Base+0x17f8>
   41980:	ldr	x1, [x29, #1384]
   41984:	ldr	x0, [x29, #1328]
   41988:	add	x0, x1, x0
   4198c:	ldr	w1, [x29, #104]
   41990:	add	x2, x29, #0x64
   41994:	mov	x5, x2
   41998:	ldr	w4, [x29, #1140]
   4199c:	mov	w3, w1
   419a0:	ldr	x2, [x29, #1360]
   419a4:	ldr	x1, [x29, #1272]
   419a8:	bl	aa70 <snprintf@plt>
   419ac:	str	w0, [x29, #1284]
   419b0:	b	419f4 <vasnprintf@@Base+0x17f8>
   419b4:	ldr	x1, [x29, #1384]
   419b8:	ldr	x0, [x29, #1328]
   419bc:	add	x0, x1, x0
   419c0:	ldr	w1, [x29, #104]
   419c4:	ldr	w2, [x29, #108]
   419c8:	add	x3, x29, #0x64
   419cc:	mov	x6, x3
   419d0:	ldr	w5, [x29, #1140]
   419d4:	mov	w4, w2
   419d8:	mov	w3, w1
   419dc:	ldr	x2, [x29, #1360]
   419e0:	ldr	x1, [x29, #1272]
   419e4:	bl	aa70 <snprintf@plt>
   419e8:	str	w0, [x29, #1284]
   419ec:	b	419f4 <vasnprintf@@Base+0x17f8>
   419f0:	bl	af70 <abort@plt>
   419f4:	b	41cd8 <vasnprintf@@Base+0x1adc>
   419f8:	ldr	x1, [x29, #120]
   419fc:	ldr	x0, [x29, #1368]
   41a00:	ldr	x0, [x0, #80]
   41a04:	lsl	x0, x0, #5
   41a08:	add	x0, x1, x0
   41a0c:	ldr	x0, [x0, #16]
   41a10:	str	x0, [x29, #1144]
   41a14:	ldr	w0, [x29, #1300]
   41a18:	cmp	w0, #0x2
   41a1c:	b.eq	41aa8 <vasnprintf@@Base+0x18ac>  // b.none
   41a20:	ldr	w0, [x29, #1300]
   41a24:	cmp	w0, #0x2
   41a28:	b.hi	41ae4 <vasnprintf@@Base+0x18e8>  // b.pmore
   41a2c:	ldr	w0, [x29, #1300]
   41a30:	cmp	w0, #0x0
   41a34:	b.eq	41a48 <vasnprintf@@Base+0x184c>  // b.none
   41a38:	ldr	w0, [x29, #1300]
   41a3c:	cmp	w0, #0x1
   41a40:	b.eq	41a74 <vasnprintf@@Base+0x1878>  // b.none
   41a44:	b	41ae4 <vasnprintf@@Base+0x18e8>
   41a48:	ldr	x1, [x29, #1384]
   41a4c:	ldr	x0, [x29, #1328]
   41a50:	add	x0, x1, x0
   41a54:	add	x1, x29, #0x64
   41a58:	mov	x4, x1
   41a5c:	ldr	x3, [x29, #1144]
   41a60:	ldr	x2, [x29, #1360]
   41a64:	ldr	x1, [x29, #1272]
   41a68:	bl	aa70 <snprintf@plt>
   41a6c:	str	w0, [x29, #1284]
   41a70:	b	41ae8 <vasnprintf@@Base+0x18ec>
   41a74:	ldr	x1, [x29, #1384]
   41a78:	ldr	x0, [x29, #1328]
   41a7c:	add	x0, x1, x0
   41a80:	ldr	w1, [x29, #104]
   41a84:	add	x2, x29, #0x64
   41a88:	mov	x5, x2
   41a8c:	ldr	x4, [x29, #1144]
   41a90:	mov	w3, w1
   41a94:	ldr	x2, [x29, #1360]
   41a98:	ldr	x1, [x29, #1272]
   41a9c:	bl	aa70 <snprintf@plt>
   41aa0:	str	w0, [x29, #1284]
   41aa4:	b	41ae8 <vasnprintf@@Base+0x18ec>
   41aa8:	ldr	x1, [x29, #1384]
   41aac:	ldr	x0, [x29, #1328]
   41ab0:	add	x0, x1, x0
   41ab4:	ldr	w1, [x29, #104]
   41ab8:	ldr	w2, [x29, #108]
   41abc:	add	x3, x29, #0x64
   41ac0:	mov	x6, x3
   41ac4:	ldr	x5, [x29, #1144]
   41ac8:	mov	w4, w2
   41acc:	mov	w3, w1
   41ad0:	ldr	x2, [x29, #1360]
   41ad4:	ldr	x1, [x29, #1272]
   41ad8:	bl	aa70 <snprintf@plt>
   41adc:	str	w0, [x29, #1284]
   41ae0:	b	41ae8 <vasnprintf@@Base+0x18ec>
   41ae4:	bl	af70 <abort@plt>
   41ae8:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41aec:	ldr	x1, [x29, #120]
   41af0:	ldr	x0, [x29, #1368]
   41af4:	ldr	x0, [x0, #80]
   41af8:	lsl	x0, x0, #5
   41afc:	add	x0, x1, x0
   41b00:	ldr	x0, [x0, #16]
   41b04:	str	x0, [x29, #1152]
   41b08:	ldr	w0, [x29, #1300]
   41b0c:	cmp	w0, #0x2
   41b10:	b.eq	41b9c <vasnprintf@@Base+0x19a0>  // b.none
   41b14:	ldr	w0, [x29, #1300]
   41b18:	cmp	w0, #0x2
   41b1c:	b.hi	41bd8 <vasnprintf@@Base+0x19dc>  // b.pmore
   41b20:	ldr	w0, [x29, #1300]
   41b24:	cmp	w0, #0x0
   41b28:	b.eq	41b3c <vasnprintf@@Base+0x1940>  // b.none
   41b2c:	ldr	w0, [x29, #1300]
   41b30:	cmp	w0, #0x1
   41b34:	b.eq	41b68 <vasnprintf@@Base+0x196c>  // b.none
   41b38:	b	41bd8 <vasnprintf@@Base+0x19dc>
   41b3c:	ldr	x1, [x29, #1384]
   41b40:	ldr	x0, [x29, #1328]
   41b44:	add	x0, x1, x0
   41b48:	add	x1, x29, #0x64
   41b4c:	mov	x4, x1
   41b50:	ldr	x3, [x29, #1152]
   41b54:	ldr	x2, [x29, #1360]
   41b58:	ldr	x1, [x29, #1272]
   41b5c:	bl	aa70 <snprintf@plt>
   41b60:	str	w0, [x29, #1284]
   41b64:	b	41bdc <vasnprintf@@Base+0x19e0>
   41b68:	ldr	x1, [x29, #1384]
   41b6c:	ldr	x0, [x29, #1328]
   41b70:	add	x0, x1, x0
   41b74:	ldr	w1, [x29, #104]
   41b78:	add	x2, x29, #0x64
   41b7c:	mov	x5, x2
   41b80:	ldr	x4, [x29, #1152]
   41b84:	mov	w3, w1
   41b88:	ldr	x2, [x29, #1360]
   41b8c:	ldr	x1, [x29, #1272]
   41b90:	bl	aa70 <snprintf@plt>
   41b94:	str	w0, [x29, #1284]
   41b98:	b	41bdc <vasnprintf@@Base+0x19e0>
   41b9c:	ldr	x1, [x29, #1384]
   41ba0:	ldr	x0, [x29, #1328]
   41ba4:	add	x0, x1, x0
   41ba8:	ldr	w1, [x29, #104]
   41bac:	ldr	w2, [x29, #108]
   41bb0:	add	x3, x29, #0x64
   41bb4:	mov	x6, x3
   41bb8:	ldr	x5, [x29, #1152]
   41bbc:	mov	w4, w2
   41bc0:	mov	w3, w1
   41bc4:	ldr	x2, [x29, #1360]
   41bc8:	ldr	x1, [x29, #1272]
   41bcc:	bl	aa70 <snprintf@plt>
   41bd0:	str	w0, [x29, #1284]
   41bd4:	b	41bdc <vasnprintf@@Base+0x19e0>
   41bd8:	bl	af70 <abort@plt>
   41bdc:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41be0:	ldr	x1, [x29, #120]
   41be4:	ldr	x0, [x29, #1368]
   41be8:	ldr	x0, [x0, #80]
   41bec:	lsl	x0, x0, #5
   41bf0:	add	x0, x1, x0
   41bf4:	ldr	x0, [x0, #16]
   41bf8:	str	x0, [x29, #1160]
   41bfc:	ldr	w0, [x29, #1300]
   41c00:	cmp	w0, #0x2
   41c04:	b.eq	41c90 <vasnprintf@@Base+0x1a94>  // b.none
   41c08:	ldr	w0, [x29, #1300]
   41c0c:	cmp	w0, #0x2
   41c10:	b.hi	41ccc <vasnprintf@@Base+0x1ad0>  // b.pmore
   41c14:	ldr	w0, [x29, #1300]
   41c18:	cmp	w0, #0x0
   41c1c:	b.eq	41c30 <vasnprintf@@Base+0x1a34>  // b.none
   41c20:	ldr	w0, [x29, #1300]
   41c24:	cmp	w0, #0x1
   41c28:	b.eq	41c5c <vasnprintf@@Base+0x1a60>  // b.none
   41c2c:	b	41ccc <vasnprintf@@Base+0x1ad0>
   41c30:	ldr	x1, [x29, #1384]
   41c34:	ldr	x0, [x29, #1328]
   41c38:	add	x0, x1, x0
   41c3c:	add	x1, x29, #0x64
   41c40:	mov	x4, x1
   41c44:	ldr	x3, [x29, #1160]
   41c48:	ldr	x2, [x29, #1360]
   41c4c:	ldr	x1, [x29, #1272]
   41c50:	bl	aa70 <snprintf@plt>
   41c54:	str	w0, [x29, #1284]
   41c58:	b	41cd0 <vasnprintf@@Base+0x1ad4>
   41c5c:	ldr	x1, [x29, #1384]
   41c60:	ldr	x0, [x29, #1328]
   41c64:	add	x0, x1, x0
   41c68:	ldr	w1, [x29, #104]
   41c6c:	add	x2, x29, #0x64
   41c70:	mov	x5, x2
   41c74:	ldr	x4, [x29, #1160]
   41c78:	mov	w3, w1
   41c7c:	ldr	x2, [x29, #1360]
   41c80:	ldr	x1, [x29, #1272]
   41c84:	bl	aa70 <snprintf@plt>
   41c88:	str	w0, [x29, #1284]
   41c8c:	b	41cd0 <vasnprintf@@Base+0x1ad4>
   41c90:	ldr	x1, [x29, #1384]
   41c94:	ldr	x0, [x29, #1328]
   41c98:	add	x0, x1, x0
   41c9c:	ldr	w1, [x29, #104]
   41ca0:	ldr	w2, [x29, #108]
   41ca4:	add	x3, x29, #0x64
   41ca8:	mov	x6, x3
   41cac:	ldr	x5, [x29, #1160]
   41cb0:	mov	w4, w2
   41cb4:	mov	w3, w1
   41cb8:	ldr	x2, [x29, #1360]
   41cbc:	ldr	x1, [x29, #1272]
   41cc0:	bl	aa70 <snprintf@plt>
   41cc4:	str	w0, [x29, #1284]
   41cc8:	b	41cd0 <vasnprintf@@Base+0x1ad4>
   41ccc:	bl	af70 <abort@plt>
   41cd0:	b	41cd8 <vasnprintf@@Base+0x1adc>
   41cd4:	bl	af70 <abort@plt>
   41cd8:	ldr	w0, [x29, #100]
   41cdc:	cmp	w0, #0x0
   41ce0:	b.lt	41d3c <vasnprintf@@Base+0x1b40>  // b.tstop
   41ce4:	ldr	w0, [x29, #100]
   41ce8:	mov	w0, w0
   41cec:	ldr	x1, [x29, #1272]
   41cf0:	cmp	x1, x0
   41cf4:	b.ls	41d20 <vasnprintf@@Base+0x1b24>  // b.plast
   41cf8:	ldr	w0, [x29, #100]
   41cfc:	sxtw	x1, w0
   41d00:	ldr	x0, [x29, #1328]
   41d04:	add	x0, x1, x0
   41d08:	ldr	x1, [x29, #1384]
   41d0c:	add	x0, x1, x0
   41d10:	ldrb	w0, [x0]
   41d14:	cmp	w0, #0x0
   41d18:	b.eq	41d20 <vasnprintf@@Base+0x1b24>  // b.none
   41d1c:	bl	af70 <abort@plt>
   41d20:	ldr	w0, [x29, #100]
   41d24:	ldr	w1, [x29, #1284]
   41d28:	cmp	w1, w0
   41d2c:	b.le	41d74 <vasnprintf@@Base+0x1b78>
   41d30:	ldr	w0, [x29, #1284]
   41d34:	str	w0, [x29, #100]
   41d38:	b	41d74 <vasnprintf@@Base+0x1b78>
   41d3c:	ldr	x0, [x29, #1304]
   41d40:	add	x0, x0, #0x1
   41d44:	ldrb	w0, [x0]
   41d48:	cmp	w0, #0x0
   41d4c:	b.eq	41d60 <vasnprintf@@Base+0x1b64>  // b.none
   41d50:	ldr	x0, [x29, #1304]
   41d54:	add	x0, x0, #0x1
   41d58:	strb	wzr, [x0]
   41d5c:	b	41fe0 <vasnprintf@@Base+0x1de4>
   41d60:	ldr	w0, [x29, #1284]
   41d64:	cmp	w0, #0x0
   41d68:	b.lt	41d74 <vasnprintf@@Base+0x1b78>  // b.tstop
   41d6c:	ldr	w0, [x29, #1284]
   41d70:	str	w0, [x29, #100]
   41d74:	ldr	w0, [x29, #100]
   41d78:	cmp	w0, #0x0
   41d7c:	b.ge	41e54 <vasnprintf@@Base+0x1c58>  // b.tcont
   41d80:	bl	b640 <__errno_location@plt>
   41d84:	ldr	w0, [x0]
   41d88:	str	w0, [x29, #1268]
   41d8c:	ldr	w0, [x29, #1268]
   41d90:	cmp	w0, #0x0
   41d94:	b.ne	41dcc <vasnprintf@@Base+0x1bd0>  // b.any
   41d98:	ldr	x0, [x29, #1368]
   41d9c:	ldrb	w0, [x0, #72]
   41da0:	cmp	w0, #0x63
   41da4:	b.eq	41db8 <vasnprintf@@Base+0x1bbc>  // b.none
   41da8:	ldr	x0, [x29, #1368]
   41dac:	ldrb	w0, [x0, #72]
   41db0:	cmp	w0, #0x73
   41db4:	b.ne	41dc4 <vasnprintf@@Base+0x1bc8>  // b.any
   41db8:	mov	w0, #0x54                  	// #84
   41dbc:	str	w0, [x29, #1268]
   41dc0:	b	41dcc <vasnprintf@@Base+0x1bd0>
   41dc4:	mov	w0, #0x16                  	// #22
   41dc8:	str	w0, [x29, #1268]
   41dcc:	ldr	x1, [x29, #1384]
   41dd0:	ldr	x0, [x29, #88]
   41dd4:	cmp	x1, x0
   41dd8:	b.eq	41df0 <vasnprintf@@Base+0x1bf4>  // b.none
   41ddc:	ldr	x0, [x29, #1384]
   41de0:	cmp	x0, #0x0
   41de4:	b.eq	41df0 <vasnprintf@@Base+0x1bf4>  // b.none
   41de8:	ldr	x0, [x29, #1384]
   41dec:	bl	b130 <free@plt>
   41df0:	ldr	x0, [x29, #1352]
   41df4:	cmp	x0, #0x0
   41df8:	b.eq	41e04 <vasnprintf@@Base+0x1c08>  // b.none
   41dfc:	ldr	x0, [x29, #1352]
   41e00:	bl	b130 <free@plt>
   41e04:	ldr	x1, [x29, #368]
   41e08:	add	x0, x29, #0x168
   41e0c:	add	x0, x0, #0x20
   41e10:	cmp	x1, x0
   41e14:	b.eq	41e20 <vasnprintf@@Base+0x1c24>  // b.none
   41e18:	ldr	x0, [x29, #368]
   41e1c:	bl	b130 <free@plt>
   41e20:	ldr	x1, [x29, #120]
   41e24:	add	x0, x29, #0x70
   41e28:	add	x0, x0, #0x10
   41e2c:	cmp	x1, x0
   41e30:	b.eq	41e3c <vasnprintf@@Base+0x1c40>  // b.none
   41e34:	ldr	x0, [x29, #120]
   41e38:	bl	b130 <free@plt>
   41e3c:	bl	b640 <__errno_location@plt>
   41e40:	mov	x1, x0
   41e44:	ldr	w0, [x29, #1268]
   41e48:	str	w0, [x1]
   41e4c:	mov	x0, #0x0                   	// #0
   41e50:	b	4234c <vasnprintf@@Base+0x2150>
   41e54:	ldr	w0, [x29, #100]
   41e58:	add	w0, w0, #0x1
   41e5c:	mov	w0, w0
   41e60:	ldr	x1, [x29, #1272]
   41e64:	cmp	x1, x0
   41e68:	b.hi	41fb4 <vasnprintf@@Base+0x1db8>  // b.pmore
   41e6c:	ldr	x1, [x29, #1272]
   41e70:	mov	x0, #0x7fffffff            	// #2147483647
   41e74:	cmp	x1, x0
   41e78:	b.eq	421dc <vasnprintf@@Base+0x1fe0>  // b.none
   41e7c:	ldr	w0, [x29, #100]
   41e80:	add	w0, w0, #0x2
   41e84:	mov	w0, w0
   41e88:	mov	x1, x0
   41e8c:	ldr	x0, [x29, #1328]
   41e90:	bl	ac80 <xsum@plt>
   41e94:	mov	x2, x0
   41e98:	ldr	x0, [x29, #1336]
   41e9c:	cmp	x0, #0x0
   41ea0:	b.lt	41eb0 <vasnprintf@@Base+0x1cb4>  // b.tstop
   41ea4:	ldr	x0, [x29, #1336]
   41ea8:	lsl	x0, x0, #1
   41eac:	b	41eb4 <vasnprintf@@Base+0x1cb8>
   41eb0:	mov	x0, #0xffffffffffffffff    	// #-1
   41eb4:	mov	x1, x0
   41eb8:	mov	x0, x2
   41ebc:	bl	b060 <xmax@plt>
   41ec0:	str	x0, [x29, #1048]
   41ec4:	ldr	x1, [x29, #1048]
   41ec8:	ldr	x0, [x29, #1336]
   41ecc:	cmp	x1, x0
   41ed0:	b.ls	41fdc <vasnprintf@@Base+0x1de0>  // b.plast
   41ed4:	ldr	x0, [x29, #1336]
   41ed8:	cmp	x0, #0x0
   41edc:	b.eq	41f00 <vasnprintf@@Base+0x1d04>  // b.none
   41ee0:	ldr	x0, [x29, #1336]
   41ee4:	cmp	x0, #0x0
   41ee8:	b.lt	41ef8 <vasnprintf@@Base+0x1cfc>  // b.tstop
   41eec:	ldr	x0, [x29, #1336]
   41ef0:	lsl	x0, x0, #1
   41ef4:	b	41f04 <vasnprintf@@Base+0x1d08>
   41ef8:	mov	x0, #0xffffffffffffffff    	// #-1
   41efc:	b	41f04 <vasnprintf@@Base+0x1d08>
   41f00:	mov	x0, #0xc                   	// #12
   41f04:	str	x0, [x29, #1336]
   41f08:	ldr	x1, [x29, #1048]
   41f0c:	ldr	x0, [x29, #1336]
   41f10:	cmp	x1, x0
   41f14:	b.ls	41f20 <vasnprintf@@Base+0x1d24>  // b.plast
   41f18:	ldr	x0, [x29, #1048]
   41f1c:	str	x0, [x29, #1336]
   41f20:	ldr	x0, [x29, #1336]
   41f24:	str	x0, [x29, #1040]
   41f28:	ldr	x0, [x29, #1040]
   41f2c:	cmn	x0, #0x1
   41f30:	b.eq	42294 <vasnprintf@@Base+0x2098>  // b.none
   41f34:	ldr	x1, [x29, #1384]
   41f38:	ldr	x0, [x29, #88]
   41f3c:	cmp	x1, x0
   41f40:	b.eq	41f50 <vasnprintf@@Base+0x1d54>  // b.none
   41f44:	ldr	x0, [x29, #1384]
   41f48:	cmp	x0, #0x0
   41f4c:	b.ne	41f60 <vasnprintf@@Base+0x1d64>  // b.any
   41f50:	ldr	x0, [x29, #1040]
   41f54:	bl	ab40 <malloc@plt>
   41f58:	str	x0, [x29, #1256]
   41f5c:	b	41f70 <vasnprintf@@Base+0x1d74>
   41f60:	ldr	x1, [x29, #1040]
   41f64:	ldr	x0, [x29, #1384]
   41f68:	bl	ae00 <realloc@plt>
   41f6c:	str	x0, [x29, #1256]
   41f70:	ldr	x0, [x29, #1256]
   41f74:	cmp	x0, #0x0
   41f78:	b.eq	4229c <vasnprintf@@Base+0x20a0>  // b.none
   41f7c:	ldr	x1, [x29, #1384]
   41f80:	ldr	x0, [x29, #88]
   41f84:	cmp	x1, x0
   41f88:	b.ne	41fa8 <vasnprintf@@Base+0x1dac>  // b.any
   41f8c:	ldr	x0, [x29, #1328]
   41f90:	cmp	x0, #0x0
   41f94:	b.eq	41fa8 <vasnprintf@@Base+0x1dac>  // b.none
   41f98:	ldr	x2, [x29, #1328]
   41f9c:	ldr	x1, [x29, #1384]
   41fa0:	ldr	x0, [x29, #1256]
   41fa4:	bl	a790 <memcpy@plt>
   41fa8:	ldr	x0, [x29, #1256]
   41fac:	str	x0, [x29, #1384]
   41fb0:	b	41fdc <vasnprintf@@Base+0x1de0>
   41fb4:	ldr	w0, [x29, #100]
   41fb8:	sxtw	x0, w0
   41fbc:	ldr	x1, [x29, #1328]
   41fc0:	add	x0, x1, x0
   41fc4:	str	x0, [x29, #1328]
   41fc8:	bl	b640 <__errno_location@plt>
   41fcc:	mov	x1, x0
   41fd0:	ldr	w0, [x29, #1172]
   41fd4:	str	w0, [x1]
   41fd8:	b	41fe4 <vasnprintf@@Base+0x1de8>
   41fdc:	nop
   41fe0:	b	40c2c <vasnprintf@@Base+0xa30>
   41fe4:	ldr	x0, [x29, #1368]
   41fe8:	ldr	x0, [x0, #8]
   41fec:	str	x0, [x29, #1344]
   41ff0:	ldr	x0, [x29, #1376]
   41ff4:	add	x0, x0, #0x1
   41ff8:	str	x0, [x29, #1376]
   41ffc:	ldr	x0, [x29, #1368]
   42000:	add	x0, x0, #0x58
   42004:	str	x0, [x29, #1368]
   42008:	b	40394 <vasnprintf@@Base+0x198>
   4200c:	nop
   42010:	mov	x1, #0x1                   	// #1
   42014:	ldr	x0, [x29, #1328]
   42018:	bl	ac80 <xsum@plt>
   4201c:	mov	x1, x0
   42020:	ldr	x0, [x29, #1336]
   42024:	cmp	x0, x1
   42028:	b.cs	4211c <vasnprintf@@Base+0x1f20>  // b.hs, b.nlast
   4202c:	ldr	x0, [x29, #1336]
   42030:	cmp	x0, #0x0
   42034:	b.eq	42058 <vasnprintf@@Base+0x1e5c>  // b.none
   42038:	ldr	x0, [x29, #1336]
   4203c:	cmp	x0, #0x0
   42040:	b.lt	42050 <vasnprintf@@Base+0x1e54>  // b.tstop
   42044:	ldr	x0, [x29, #1336]
   42048:	lsl	x0, x0, #1
   4204c:	b	4205c <vasnprintf@@Base+0x1e60>
   42050:	mov	x0, #0xffffffffffffffff    	// #-1
   42054:	b	4205c <vasnprintf@@Base+0x1e60>
   42058:	mov	x0, #0xc                   	// #12
   4205c:	str	x0, [x29, #1336]
   42060:	mov	x1, #0x1                   	// #1
   42064:	ldr	x0, [x29, #1328]
   42068:	bl	ac80 <xsum@plt>
   4206c:	mov	x1, x0
   42070:	ldr	x0, [x29, #1336]
   42074:	cmp	x0, x1
   42078:	b.cs	4208c <vasnprintf@@Base+0x1e90>  // b.hs, b.nlast
   4207c:	mov	x1, #0x1                   	// #1
   42080:	ldr	x0, [x29, #1328]
   42084:	bl	ac80 <xsum@plt>
   42088:	str	x0, [x29, #1336]
   4208c:	ldr	x0, [x29, #1336]
   42090:	str	x0, [x29, #1016]
   42094:	ldr	x0, [x29, #1016]
   42098:	cmn	x0, #0x1
   4209c:	b.eq	422a4 <vasnprintf@@Base+0x20a8>  // b.none
   420a0:	ldr	x1, [x29, #1384]
   420a4:	ldr	x0, [x29, #88]
   420a8:	cmp	x1, x0
   420ac:	b.eq	420bc <vasnprintf@@Base+0x1ec0>  // b.none
   420b0:	ldr	x0, [x29, #1384]
   420b4:	cmp	x0, #0x0
   420b8:	b.ne	420cc <vasnprintf@@Base+0x1ed0>  // b.any
   420bc:	ldr	x0, [x29, #1016]
   420c0:	bl	ab40 <malloc@plt>
   420c4:	str	x0, [x29, #1248]
   420c8:	b	420dc <vasnprintf@@Base+0x1ee0>
   420cc:	ldr	x1, [x29, #1016]
   420d0:	ldr	x0, [x29, #1384]
   420d4:	bl	ae00 <realloc@plt>
   420d8:	str	x0, [x29, #1248]
   420dc:	ldr	x0, [x29, #1248]
   420e0:	cmp	x0, #0x0
   420e4:	b.eq	422ac <vasnprintf@@Base+0x20b0>  // b.none
   420e8:	ldr	x1, [x29, #1384]
   420ec:	ldr	x0, [x29, #88]
   420f0:	cmp	x1, x0
   420f4:	b.ne	42114 <vasnprintf@@Base+0x1f18>  // b.any
   420f8:	ldr	x0, [x29, #1328]
   420fc:	cmp	x0, #0x0
   42100:	b.eq	42114 <vasnprintf@@Base+0x1f18>  // b.none
   42104:	ldr	x2, [x29, #1328]
   42108:	ldr	x1, [x29, #1384]
   4210c:	ldr	x0, [x29, #1248]
   42110:	bl	a790 <memcpy@plt>
   42114:	ldr	x0, [x29, #1248]
   42118:	str	x0, [x29, #1384]
   4211c:	ldr	x1, [x29, #1384]
   42120:	ldr	x0, [x29, #1328]
   42124:	add	x0, x1, x0
   42128:	strb	wzr, [x0]
   4212c:	ldr	x1, [x29, #1384]
   42130:	ldr	x0, [x29, #88]
   42134:	cmp	x1, x0
   42138:	b.eq	4217c <vasnprintf@@Base+0x1f80>  // b.none
   4213c:	ldr	x0, [x29, #1328]
   42140:	add	x0, x0, #0x1
   42144:	ldr	x1, [x29, #1336]
   42148:	cmp	x1, x0
   4214c:	b.ls	4217c <vasnprintf@@Base+0x1f80>  // b.plast
   42150:	ldr	x0, [x29, #1328]
   42154:	add	x0, x0, #0x1
   42158:	mov	x1, x0
   4215c:	ldr	x0, [x29, #1384]
   42160:	bl	ae00 <realloc@plt>
   42164:	str	x0, [x29, #1008]
   42168:	ldr	x0, [x29, #1008]
   4216c:	cmp	x0, #0x0
   42170:	b.eq	4217c <vasnprintf@@Base+0x1f80>  // b.none
   42174:	ldr	x0, [x29, #1008]
   42178:	str	x0, [x29, #1384]
   4217c:	ldr	x0, [x29, #1352]
   42180:	cmp	x0, #0x0
   42184:	b.eq	42190 <vasnprintf@@Base+0x1f94>  // b.none
   42188:	ldr	x0, [x29, #1352]
   4218c:	bl	b130 <free@plt>
   42190:	ldr	x1, [x29, #368]
   42194:	add	x0, x29, #0x168
   42198:	add	x0, x0, #0x20
   4219c:	cmp	x1, x0
   421a0:	b.eq	421ac <vasnprintf@@Base+0x1fb0>  // b.none
   421a4:	ldr	x0, [x29, #368]
   421a8:	bl	b130 <free@plt>
   421ac:	ldr	x1, [x29, #120]
   421b0:	add	x0, x29, #0x70
   421b4:	add	x0, x0, #0x10
   421b8:	cmp	x1, x0
   421bc:	b.eq	421c8 <vasnprintf@@Base+0x1fcc>  // b.none
   421c0:	ldr	x0, [x29, #120]
   421c4:	bl	b130 <free@plt>
   421c8:	ldr	x0, [x29, #80]
   421cc:	ldr	x1, [x29, #1328]
   421d0:	str	x1, [x0]
   421d4:	ldr	x0, [x29, #1384]
   421d8:	b	4234c <vasnprintf@@Base+0x2150>
   421dc:	ldr	x1, [x29, #1384]
   421e0:	ldr	x0, [x29, #88]
   421e4:	cmp	x1, x0
   421e8:	b.eq	42200 <vasnprintf@@Base+0x2004>  // b.none
   421ec:	ldr	x0, [x29, #1384]
   421f0:	cmp	x0, #0x0
   421f4:	b.eq	42200 <vasnprintf@@Base+0x2004>  // b.none
   421f8:	ldr	x0, [x29, #1384]
   421fc:	bl	b130 <free@plt>
   42200:	ldr	x0, [x29, #1352]
   42204:	cmp	x0, #0x0
   42208:	b.eq	42214 <vasnprintf@@Base+0x2018>  // b.none
   4220c:	ldr	x0, [x29, #1352]
   42210:	bl	b130 <free@plt>
   42214:	ldr	x1, [x29, #368]
   42218:	add	x0, x29, #0x168
   4221c:	add	x0, x0, #0x20
   42220:	cmp	x1, x0
   42224:	b.eq	42230 <vasnprintf@@Base+0x2034>  // b.none
   42228:	ldr	x0, [x29, #368]
   4222c:	bl	b130 <free@plt>
   42230:	ldr	x1, [x29, #120]
   42234:	add	x0, x29, #0x70
   42238:	add	x0, x0, #0x10
   4223c:	cmp	x1, x0
   42240:	b.eq	4224c <vasnprintf@@Base+0x2050>  // b.none
   42244:	ldr	x0, [x29, #120]
   42248:	bl	b130 <free@plt>
   4224c:	bl	b640 <__errno_location@plt>
   42250:	mov	x1, x0
   42254:	mov	w0, #0x4b                  	// #75
   42258:	str	w0, [x1]
   4225c:	mov	x0, #0x0                   	// #0
   42260:	b	4234c <vasnprintf@@Base+0x2150>
   42264:	nop
   42268:	b	422b0 <vasnprintf@@Base+0x20b4>
   4226c:	nop
   42270:	b	422b0 <vasnprintf@@Base+0x20b4>
   42274:	nop
   42278:	b	422b0 <vasnprintf@@Base+0x20b4>
   4227c:	nop
   42280:	b	422b0 <vasnprintf@@Base+0x20b4>
   42284:	nop
   42288:	b	422b0 <vasnprintf@@Base+0x20b4>
   4228c:	nop
   42290:	b	422b0 <vasnprintf@@Base+0x20b4>
   42294:	nop
   42298:	b	422b0 <vasnprintf@@Base+0x20b4>
   4229c:	nop
   422a0:	b	422b0 <vasnprintf@@Base+0x20b4>
   422a4:	nop
   422a8:	b	422b0 <vasnprintf@@Base+0x20b4>
   422ac:	nop
   422b0:	ldr	x1, [x29, #1384]
   422b4:	ldr	x0, [x29, #88]
   422b8:	cmp	x1, x0
   422bc:	b.eq	422d4 <vasnprintf@@Base+0x20d8>  // b.none
   422c0:	ldr	x0, [x29, #1384]
   422c4:	cmp	x0, #0x0
   422c8:	b.eq	422d4 <vasnprintf@@Base+0x20d8>  // b.none
   422cc:	ldr	x0, [x29, #1384]
   422d0:	bl	b130 <free@plt>
   422d4:	ldr	x0, [x29, #1352]
   422d8:	cmp	x0, #0x0
   422dc:	b.eq	422fc <vasnprintf@@Base+0x2100>  // b.none
   422e0:	ldr	x0, [x29, #1352]
   422e4:	bl	b130 <free@plt>
   422e8:	b	42300 <vasnprintf@@Base+0x2104>
   422ec:	nop
   422f0:	b	42300 <vasnprintf@@Base+0x2104>
   422f4:	nop
   422f8:	b	42300 <vasnprintf@@Base+0x2104>
   422fc:	nop
   42300:	ldr	x1, [x29, #368]
   42304:	add	x0, x29, #0x168
   42308:	add	x0, x0, #0x20
   4230c:	cmp	x1, x0
   42310:	b.eq	4231c <vasnprintf@@Base+0x2120>  // b.none
   42314:	ldr	x0, [x29, #368]
   42318:	bl	b130 <free@plt>
   4231c:	ldr	x1, [x29, #120]
   42320:	add	x0, x29, #0x70
   42324:	add	x0, x0, #0x10
   42328:	cmp	x1, x0
   4232c:	b.eq	42338 <vasnprintf@@Base+0x213c>  // b.none
   42330:	ldr	x0, [x29, #120]
   42334:	bl	b130 <free@plt>
   42338:	bl	b640 <__errno_location@plt>
   4233c:	mov	x1, x0
   42340:	mov	w0, #0xc                   	// #12
   42344:	str	w0, [x1]
   42348:	mov	x0, #0x0                   	// #0
   4234c:	mov	sp, x29
   42350:	ldr	x19, [sp, #16]
   42354:	ldp	x29, x30, [sp]
   42358:	add	sp, sp, #0x570
   4235c:	ret
   42360:	adrp	x2, 5d000 <base_len@@Base+0x455fc>
   42364:	mov	x1, #0x0                   	// #0
   42368:	ldr	x2, [x2, #2104]
   4236c:	b	a9d0 <__cxa_atexit@plt>
   42370:	mov	x2, x1
   42374:	mov	x1, x0
   42378:	mov	w0, #0x0                   	// #0
   4237c:	b	b690 <__xstat@plt>
   42380:	mov	x2, x1
   42384:	mov	w1, w0
   42388:	mov	w0, #0x0                   	// #0
   4238c:	b	b480 <__fxstat@plt>
   42390:	mov	x2, x1
   42394:	mov	x1, x0
   42398:	mov	w0, #0x0                   	// #0
   4239c:	b	b390 <__lxstat@plt>
   423a0:	mov	x4, x1
   423a4:	mov	x5, x2
   423a8:	mov	w1, w0
   423ac:	mov	x2, x4
   423b0:	mov	w0, #0x0                   	// #0
   423b4:	mov	w4, w3
   423b8:	mov	x3, x5
   423bc:	b	b7a0 <__fxstatat@plt>

Disassembly of section .fini:

00000000000423c0 <.fini>:
   423c0:	stp	x29, x30, [sp, #-16]!
   423c4:	mov	x29, sp
   423c8:	ldp	x29, x30, [sp], #16
   423cc:	ret
