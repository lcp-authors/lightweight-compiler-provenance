
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//print_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000af0 <_init>:
 af0:	stp	x29, x30, [sp, #-16]!
 af4:	mov	x29, sp
 af8:	bl	c70 <call_weak_fn>
 afc:	ldp	x29, x30, [sp], #16
 b00:	ret

Disassembly of section .plt:

0000000000000b10 <.plt>:
 b10:	stp	x16, x30, [sp, #-16]!
 b14:	adrp	x16, 11000 <__FRAME_END__+0xfbdc>
 b18:	ldr	x17, [x16, #4088]
 b1c:	add	x16, x16, #0xff8
 b20:	br	x17
 b24:	nop
 b28:	nop
 b2c:	nop

0000000000000b30 <all_digits@plt>:
 b30:	adrp	x16, 12000 <all_digits>
 b34:	ldr	x17, [x16]
 b38:	add	x16, x16, #0x0
 b3c:	br	x17

0000000000000b40 <strlen@plt>:
 b40:	adrp	x16, 12000 <all_digits>
 b44:	ldr	x17, [x16, #8]
 b48:	add	x16, x16, #0x8
 b4c:	br	x17

0000000000000b50 <dup@plt>:
 b50:	adrp	x16, 12000 <all_digits>
 b54:	ldr	x17, [x16, #16]
 b58:	add	x16, x16, #0x10
 b5c:	br	x17

0000000000000b60 <__cxa_finalize@plt>:
 b60:	adrp	x16, 12000 <all_digits>
 b64:	ldr	x17, [x16, #24]
 b68:	add	x16, x16, #0x18
 b6c:	br	x17

0000000000000b70 <make_word@plt>:
 b70:	adrp	x16, 12000 <all_digits>
 b74:	ldr	x17, [x16, #32]
 b78:	add	x16, x16, #0x20
 b7c:	br	x17

0000000000000b80 <fclose@plt>:
 b80:	adrp	x16, 12000 <all_digits>
 b84:	ldr	x17, [x16, #40]
 b88:	add	x16, x16, #0x28
 b8c:	br	x17

0000000000000b90 <builtin_help@plt>:
 b90:	adrp	x16, 12000 <all_digits>
 b94:	ldr	x17, [x16, #48]
 b98:	add	x16, x16, #0x30
 b9c:	br	x17

0000000000000ba0 <fdopen@plt>:
 ba0:	adrp	x16, 12000 <all_digits>
 ba4:	ldr	x17, [x16, #56]
 ba8:	add	x16, x16, #0x38
 bac:	br	x17

0000000000000bb0 <builtin_usage@plt>:
 bb0:	adrp	x16, 12000 <all_digits>
 bb4:	ldr	x17, [x16, #64]
 bb8:	add	x16, x16, #0x40
 bbc:	br	x17

0000000000000bc0 <__gmon_start__@plt>:
 bc0:	adrp	x16, 12000 <all_digits>
 bc4:	ldr	x17, [x16, #72]
 bc8:	add	x16, x16, #0x48
 bcc:	br	x17

0000000000000bd0 <ansicstr@plt>:
 bd0:	adrp	x16, 12000 <all_digits>
 bd4:	ldr	x17, [x16, #80]
 bd8:	add	x16, x16, #0x50
 bdc:	br	x17

0000000000000be0 <dispose_words@plt>:
 be0:	adrp	x16, 12000 <all_digits>
 be4:	ldr	x17, [x16, #88]
 be8:	add	x16, x16, #0x58
 bec:	br	x17

0000000000000bf0 <free@plt>:
 bf0:	adrp	x16, 12000 <all_digits>
 bf4:	ldr	x17, [x16, #96]
 bf8:	add	x16, x16, #0x60
 bfc:	br	x17

0000000000000c00 <internal_getopt@plt>:
 c00:	adrp	x16, 12000 <all_digits>
 c04:	ldr	x17, [x16, #104]
 c08:	add	x16, x16, #0x68
 c0c:	br	x17

0000000000000c10 <reset_internal_getopt@plt>:
 c10:	adrp	x16, 12000 <all_digits>
 c14:	ldr	x17, [x16, #112]
 c18:	add	x16, x16, #0x70
 c1c:	br	x17

0000000000000c20 <fflush@plt>:
 c20:	adrp	x16, 12000 <all_digits>
 c24:	ldr	x17, [x16, #120]
 c28:	add	x16, x16, #0x78
 c2c:	br	x17

0000000000000c30 <legal_number@plt>:
 c30:	adrp	x16, 12000 <all_digits>
 c34:	ldr	x17, [x16, #128]
 c38:	add	x16, x16, #0x80
 c3c:	br	x17

0000000000000c40 <printf_builtin@plt>:
 c40:	adrp	x16, 12000 <all_digits>
 c44:	ldr	x17, [x16, #136]
 c48:	add	x16, x16, #0x88
 c4c:	br	x17

0000000000000c50 <make_word_list@plt>:
 c50:	adrp	x16, 12000 <all_digits>
 c54:	ldr	x17, [x16, #144]
 c58:	add	x16, x16, #0x90
 c5c:	br	x17

0000000000000c60 <fprintf@plt>:
 c60:	adrp	x16, 12000 <all_digits>
 c64:	ldr	x17, [x16, #152]
 c68:	add	x16, x16, #0x98
 c6c:	br	x17

Disassembly of section .text:

0000000000000c70 <call_weak_fn>:
     c70:	adrp	x0, 11000 <__FRAME_END__+0xfbdc>
     c74:	ldr	x0, [x0, #4040]
     c78:	cbz	x0, c80 <call_weak_fn+0x10>
     c7c:	b	bc0 <__gmon_start__@plt>
     c80:	ret
     c84:	nop

0000000000000c88 <deregister_tm_clones>:
     c88:	adrp	x0, 12000 <all_digits>
     c8c:	add	x0, x0, #0x108
     c90:	adrp	x1, 12000 <all_digits>
     c94:	add	x1, x1, #0x108
     c98:	cmp	x1, x0
     c9c:	b.eq	cb4 <deregister_tm_clones+0x2c>  // b.none
     ca0:	adrp	x1, 11000 <__FRAME_END__+0xfbdc>
     ca4:	ldr	x1, [x1, #4008]
     ca8:	cbz	x1, cb4 <deregister_tm_clones+0x2c>
     cac:	mov	x16, x1
     cb0:	br	x16
     cb4:	ret

0000000000000cb8 <register_tm_clones>:
     cb8:	adrp	x0, 12000 <all_digits>
     cbc:	add	x0, x0, #0x108
     cc0:	adrp	x1, 12000 <all_digits>
     cc4:	add	x1, x1, #0x108
     cc8:	sub	x1, x1, x0
     ccc:	lsr	x2, x1, #63
     cd0:	add	x1, x2, x1, asr #3
     cd4:	cmp	xzr, x1, asr #1
     cd8:	asr	x1, x1, #1
     cdc:	b.eq	cf4 <register_tm_clones+0x3c>  // b.none
     ce0:	adrp	x2, 11000 <__FRAME_END__+0xfbdc>
     ce4:	ldr	x2, [x2, #4064]
     ce8:	cbz	x2, cf4 <register_tm_clones+0x3c>
     cec:	mov	x16, x2
     cf0:	br	x16
     cf4:	ret

0000000000000cf8 <__do_global_dtors_aux>:
     cf8:	stp	x29, x30, [sp, #-32]!
     cfc:	mov	x29, sp
     d00:	str	x19, [sp, #16]
     d04:	adrp	x19, 12000 <all_digits>
     d08:	ldrb	w0, [x19, #264]
     d0c:	cbnz	w0, d34 <__do_global_dtors_aux+0x3c>
     d10:	adrp	x0, 11000 <__FRAME_END__+0xfbdc>
     d14:	ldr	x0, [x0, #4016]
     d18:	cbz	x0, d28 <__do_global_dtors_aux+0x30>
     d1c:	adrp	x0, 12000 <all_digits>
     d20:	ldr	x0, [x0, #160]
     d24:	bl	b60 <__cxa_finalize@plt>
     d28:	bl	c88 <deregister_tm_clones>
     d2c:	mov	w0, #0x1                   	// #1
     d30:	strb	w0, [x19, #264]
     d34:	ldr	x19, [sp, #16]
     d38:	ldp	x29, x30, [sp], #32
     d3c:	ret

0000000000000d40 <frame_dummy>:
     d40:	b	cb8 <register_tm_clones>

0000000000000d44 <print_builtin>:
     d44:	sub	sp, sp, #0xa0
     d48:	stp	x29, x30, [sp, #144]
     d4c:	add	x29, sp, #0x90
     d50:	mov	w8, #0x1                   	// #1
     d54:	mov	x9, xzr
     d58:	adrp	x10, 11000 <__FRAME_END__+0xfbdc>
     d5c:	ldr	x10, [x10, #4048]
     d60:	adrp	x11, 11000 <__FRAME_END__+0xfbdc>
     d64:	ldr	x11, [x11, #4024]
     d68:	adrp	x12, 11000 <__FRAME_END__+0xfbdc>
     d6c:	ldr	x12, [x12, #4056]
     d70:	adrp	x13, 12000 <all_digits>
     d74:	add	x13, x13, #0x110
     d78:	stur	x0, [x29, #-16]
     d7c:	stur	wzr, [x29, #-40]
     d80:	stur	wzr, [x29, #-32]
     d84:	stur	wzr, [x29, #-28]
     d88:	stur	w8, [x29, #-36]
     d8c:	stur	x9, [x29, #-64]
     d90:	str	x10, [sp, #40]
     d94:	str	x11, [sp, #32]
     d98:	str	x12, [sp, #24]
     d9c:	str	x13, [sp, #16]
     da0:	bl	c10 <reset_internal_getopt@plt>
     da4:	ldur	x0, [x29, #-16]
     da8:	adrp	x1, 1000 <print_builtin+0x2bc>
     dac:	add	x1, x1, #0x2bb
     db0:	bl	c00 <internal_getopt@plt>
     db4:	stur	w0, [x29, #-20]
     db8:	mov	w8, #0xffffffff            	// #-1
     dbc:	cmp	w0, w8
     dc0:	b.eq	fec <print_builtin+0x2a8>  // b.none
     dc4:	ldur	w8, [x29, #-20]
     dc8:	mov	w9, #0xffffff9d            	// #-99
     dcc:	cmp	w8, w9
     dd0:	str	w8, [sp, #12]
     dd4:	b.eq	fc8 <print_builtin+0x284>  // b.none
     dd8:	b	ddc <print_builtin+0x98>
     ddc:	ldr	w8, [sp, #12]
     de0:	cmp	w8, #0x52
     de4:	b.eq	e4c <print_builtin+0x108>  // b.none
     de8:	b	dec <print_builtin+0xa8>
     dec:	ldr	w8, [sp, #12]
     df0:	cmp	w8, #0x66
     df4:	b.eq	fb8 <print_builtin+0x274>  // b.none
     df8:	b	dfc <print_builtin+0xb8>
     dfc:	ldr	w8, [sp, #12]
     e00:	cmp	w8, #0x6e
     e04:	b.eq	ee4 <print_builtin+0x1a0>  // b.none
     e08:	b	e0c <print_builtin+0xc8>
     e0c:	ldr	w8, [sp, #12]
     e10:	cmp	w8, #0x70
     e14:	b.eq	efc <print_builtin+0x1b8>  // b.none
     e18:	b	e1c <print_builtin+0xd8>
     e1c:	ldr	w8, [sp, #12]
     e20:	cmp	w8, #0x72
     e24:	b.eq	ed8 <print_builtin+0x194>  // b.none
     e28:	b	e2c <print_builtin+0xe8>
     e2c:	ldr	w8, [sp, #12]
     e30:	cmp	w8, #0x73
     e34:	b.eq	ef0 <print_builtin+0x1ac>  // b.none
     e38:	b	e3c <print_builtin+0xf8>
     e3c:	ldr	w8, [sp, #12]
     e40:	cmp	w8, #0x75
     e44:	b.eq	f00 <print_builtin+0x1bc>  // b.none
     e48:	b	fd8 <print_builtin+0x294>
     e4c:	mov	w8, #0x2                   	// #2
     e50:	stur	w8, [x29, #-32]
     e54:	ldr	x9, [sp, #32]
     e58:	ldr	x10, [x9]
     e5c:	ldr	x11, [sp, #24]
     e60:	str	x10, [x11]
     e64:	ldr	x10, [x11]
     e68:	cbz	x10, ed4 <print_builtin+0x190>
     e6c:	ldr	x8, [sp, #24]
     e70:	ldr	x9, [x8]
     e74:	ldr	x9, [x9, #8]
     e78:	ldr	x9, [x9]
     e7c:	ldrb	w10, [x9]
     e80:	cmp	w10, #0x2d
     e84:	b.ne	ed4 <print_builtin+0x190>  // b.any
     e88:	ldr	x8, [sp, #24]
     e8c:	ldr	x9, [x8]
     e90:	ldr	x9, [x9, #8]
     e94:	ldr	x9, [x9]
     e98:	ldrb	w10, [x9, #1]
     e9c:	cmp	w10, #0x6e
     ea0:	b.ne	ed4 <print_builtin+0x190>  // b.any
     ea4:	ldr	x8, [sp, #24]
     ea8:	ldr	x9, [x8]
     eac:	ldr	x9, [x9, #8]
     eb0:	ldr	x9, [x9]
     eb4:	ldrb	w10, [x9, #2]
     eb8:	cbnz	w10, ed4 <print_builtin+0x190>
     ebc:	ldr	x8, [sp, #24]
     ec0:	ldr	x9, [x8]
     ec4:	ldr	x9, [x9]
     ec8:	str	x9, [x8]
     ecc:	mov	w10, #0x1                   	// #1
     ed0:	stur	w10, [x29, #-28]
     ed4:	b	fec <print_builtin+0x2a8>
     ed8:	mov	w8, #0x1                   	// #1
     edc:	stur	w8, [x29, #-32]
     ee0:	b	fe8 <print_builtin+0x2a4>
     ee4:	mov	w8, #0x1                   	// #1
     ee8:	stur	w8, [x29, #-28]
     eec:	b	fe8 <print_builtin+0x2a4>
     ef0:	mov	w8, #0x1                   	// #1
     ef4:	stur	w8, [x29, #-40]
     ef8:	b	fe8 <print_builtin+0x2a4>
     efc:	b	fe8 <print_builtin+0x2a4>
     f00:	ldr	x8, [sp, #40]
     f04:	ldr	x0, [x8]
     f08:	bl	b30 <all_digits@plt>
     f0c:	cbz	w0, f48 <print_builtin+0x204>
     f10:	ldr	x8, [sp, #40]
     f14:	ldr	x0, [x8]
     f18:	sub	x1, x29, #0x30
     f1c:	bl	c30 <legal_number@plt>
     f20:	cbz	w0, f48 <print_builtin+0x204>
     f24:	ldur	x8, [x29, #-48]
     f28:	ldur	x9, [x29, #-48]
     f2c:	lsl	x9, x9, #32
     f30:	asr	x9, x9, #32
     f34:	cmp	x8, x9
     f38:	b.ne	f48 <print_builtin+0x204>  // b.any
     f3c:	ldur	x8, [x29, #-48]
     f40:	stur	w8, [x29, #-36]
     f44:	b	fb4 <print_builtin+0x270>
     f48:	ldur	x8, [x29, #-16]
     f4c:	str	x8, [sp, #64]
     f50:	ldr	x8, [sp, #64]
     f54:	ldr	x8, [x8]
     f58:	mov	w9, #0x0                   	// #0
     f5c:	str	w9, [sp, #8]
     f60:	cbz	x8, f80 <print_builtin+0x23c>
     f64:	ldr	x8, [sp, #64]
     f68:	ldr	x8, [x8]
     f6c:	ldr	x9, [sp, #32]
     f70:	ldr	x10, [x9]
     f74:	cmp	x8, x10
     f78:	cset	w11, ne  // ne = any
     f7c:	str	w11, [sp, #8]
     f80:	ldr	w8, [sp, #8]
     f84:	tbnz	w8, #0, f8c <print_builtin+0x248>
     f88:	b	f9c <print_builtin+0x258>
     f8c:	ldr	x8, [sp, #64]
     f90:	ldr	x8, [x8]
     f94:	str	x8, [sp, #64]
     f98:	b	f50 <print_builtin+0x20c>
     f9c:	ldr	x8, [sp, #64]
     fa0:	ldr	x9, [sp, #24]
     fa4:	str	x8, [x9]
     fa8:	ldr	x10, [sp, #32]
     fac:	str	x8, [x10]
     fb0:	b	fec <print_builtin+0x2a8>
     fb4:	b	fe8 <print_builtin+0x2a4>
     fb8:	ldr	x8, [sp, #40]
     fbc:	ldr	x9, [x8]
     fc0:	stur	x9, [x29, #-64]
     fc4:	b	fe8 <print_builtin+0x2a4>
     fc8:	bl	b90 <builtin_help@plt>
     fcc:	mov	w8, #0x102                 	// #258
     fd0:	stur	w8, [x29, #-4]
     fd4:	b	1178 <print_builtin+0x434>
     fd8:	bl	bb0 <builtin_usage@plt>
     fdc:	mov	w8, #0x102                 	// #258
     fe0:	stur	w8, [x29, #-4]
     fe4:	b	1178 <print_builtin+0x434>
     fe8:	b	da4 <print_builtin+0x60>
     fec:	ldr	x8, [sp, #24]
     ff0:	ldr	x9, [x8]
     ff4:	stur	x9, [x29, #-16]
     ff8:	ldur	w10, [x29, #-36]
     ffc:	cmp	w10, #0x1
    1000:	b.ne	1018 <print_builtin+0x2d4>  // b.any
    1004:	adrp	x8, 11000 <__FRAME_END__+0xfbdc>
    1008:	ldr	x8, [x8, #4032]
    100c:	ldr	x8, [x8]
    1010:	str	x8, [sp]
    1014:	b	1030 <print_builtin+0x2ec>
    1018:	ldur	w0, [x29, #-36]
    101c:	bl	b50 <dup@plt>
    1020:	adrp	x1, 1000 <print_builtin+0x2bc>
    1024:	add	x1, x1, #0x2c5
    1028:	bl	ba0 <fdopen@plt>
    102c:	str	x0, [sp]
    1030:	ldr	x8, [sp]
    1034:	ldr	x9, [sp, #16]
    1038:	str	x8, [x9]
    103c:	ldur	x8, [x29, #-64]
    1040:	cbz	x8, 108c <print_builtin+0x348>
    1044:	ldur	x0, [x29, #-64]
    1048:	bl	b70 <make_word@plt>
    104c:	str	x0, [sp, #56]
    1050:	ldr	x0, [sp, #56]
    1054:	ldur	x1, [x29, #-16]
    1058:	bl	c50 <make_word_list@plt>
    105c:	str	x0, [sp, #48]
    1060:	ldr	x0, [sp, #48]
    1064:	bl	c40 <printf_builtin@plt>
    1068:	stur	w0, [x29, #-24]
    106c:	ldr	x8, [sp, #48]
    1070:	mov	x9, xzr
    1074:	str	x9, [x8]
    1078:	ldr	x0, [sp, #48]
    107c:	bl	be0 <dispose_words@plt>
    1080:	ldur	w10, [x29, #-24]
    1084:	stur	w10, [x29, #-4]
    1088:	b	1178 <print_builtin+0x434>
    108c:	ldur	w8, [x29, #-32]
    1090:	cbz	w8, 1124 <print_builtin+0x3e0>
    1094:	ldur	x8, [x29, #-16]
    1098:	str	x8, [sp, #64]
    109c:	ldr	x8, [sp, #64]
    10a0:	cbz	x8, 10f4 <print_builtin+0x3b0>
    10a4:	ldr	x8, [sp, #16]
    10a8:	ldr	x0, [x8]
    10ac:	ldr	x9, [sp, #64]
    10b0:	ldr	x9, [x9, #8]
    10b4:	ldr	x2, [x9]
    10b8:	adrp	x1, 1000 <print_builtin+0x2bc>
    10bc:	add	x1, x1, #0x2c7
    10c0:	bl	c60 <fprintf@plt>
    10c4:	ldr	x8, [sp, #64]
    10c8:	ldr	x8, [x8]
    10cc:	cbz	x8, 10e4 <print_builtin+0x3a0>
    10d0:	ldr	x8, [sp, #16]
    10d4:	ldr	x0, [x8]
    10d8:	adrp	x1, 1000 <print_builtin+0x2bc>
    10dc:	add	x1, x1, #0x2ca
    10e0:	bl	c60 <fprintf@plt>
    10e4:	ldr	x8, [sp, #64]
    10e8:	ldr	x8, [x8]
    10ec:	str	x8, [sp, #64]
    10f0:	b	109c <print_builtin+0x358>
    10f4:	ldur	w8, [x29, #-28]
    10f8:	cbnz	w8, 1110 <print_builtin+0x3cc>
    10fc:	ldr	x8, [sp, #16]
    1100:	ldr	x0, [x8]
    1104:	adrp	x1, 1000 <print_builtin+0x2bc>
    1108:	add	x1, x1, #0x2cc
    110c:	bl	c60 <fprintf@plt>
    1110:	ldr	x8, [sp, #16]
    1114:	ldr	x0, [x8]
    1118:	bl	c20 <fflush@plt>
    111c:	stur	wzr, [x29, #-4]
    1120:	b	1178 <print_builtin+0x434>
    1124:	ldur	x0, [x29, #-16]
    1128:	ldr	x8, [sp, #16]
    112c:	ldr	x1, [x8]
    1130:	bl	1188 <printargs>
    1134:	stur	w0, [x29, #-24]
    1138:	ldur	w9, [x29, #-24]
    113c:	cbz	w9, 115c <print_builtin+0x418>
    1140:	ldur	w8, [x29, #-28]
    1144:	cbnz	w8, 115c <print_builtin+0x418>
    1148:	ldr	x8, [sp, #16]
    114c:	ldr	x0, [x8]
    1150:	adrp	x1, 1000 <print_builtin+0x2bc>
    1154:	add	x1, x1, #0x2cc
    1158:	bl	c60 <fprintf@plt>
    115c:	ldur	w8, [x29, #-36]
    1160:	cmp	w8, #0x1
    1164:	b.eq	1174 <print_builtin+0x430>  // b.none
    1168:	ldr	x8, [sp, #16]
    116c:	ldr	x0, [x8]
    1170:	bl	b80 <fclose@plt>
    1174:	stur	wzr, [x29, #-4]
    1178:	ldur	w0, [x29, #-4]
    117c:	ldp	x29, x30, [sp, #144]
    1180:	add	sp, sp, #0xa0
    1184:	ret

0000000000001188 <printargs>:
    1188:	sub	sp, sp, #0x50
    118c:	stp	x29, x30, [sp, #64]
    1190:	add	x29, sp, #0x40
    1194:	stur	x0, [x29, #-16]
    1198:	stur	x1, [x29, #-24]
    119c:	str	wzr, [sp, #20]
    11a0:	ldur	x8, [x29, #-16]
    11a4:	str	x8, [sp, #32]
    11a8:	ldr	x8, [sp, #32]
    11ac:	cbz	x8, 125c <printargs+0xd4>
    11b0:	ldr	x8, [sp, #32]
    11b4:	ldr	x8, [x8, #8]
    11b8:	ldr	x0, [x8]
    11bc:	ldr	x8, [sp, #32]
    11c0:	ldr	x8, [x8, #8]
    11c4:	ldr	x8, [x8]
    11c8:	str	x0, [sp, #8]
    11cc:	mov	x0, x8
    11d0:	bl	b40 <strlen@plt>
    11d4:	ldr	x8, [sp, #8]
    11d8:	str	w0, [sp, #4]
    11dc:	mov	x0, x8
    11e0:	ldr	w1, [sp, #4]
    11e4:	mov	w9, wzr
    11e8:	mov	w2, w9
    11ec:	add	x3, sp, #0x14
    11f0:	mov	x10, xzr
    11f4:	mov	x4, x10
    11f8:	bl	bd0 <ansicstr@plt>
    11fc:	str	x0, [sp, #24]
    1200:	ldur	x0, [x29, #-24]
    1204:	ldr	x2, [sp, #24]
    1208:	adrp	x1, 1000 <print_builtin+0x2bc>
    120c:	add	x1, x1, #0x2c7
    1210:	bl	c60 <fprintf@plt>
    1214:	ldr	x8, [sp, #24]
    1218:	mov	x0, x8
    121c:	bl	bf0 <free@plt>
    1220:	ldr	w9, [sp, #20]
    1224:	cbz	w9, 1230 <printargs+0xa8>
    1228:	stur	wzr, [x29, #-4]
    122c:	b	1264 <printargs+0xdc>
    1230:	ldr	x8, [sp, #32]
    1234:	ldr	x8, [x8]
    1238:	cbz	x8, 124c <printargs+0xc4>
    123c:	ldur	x0, [x29, #-24]
    1240:	adrp	x1, 1000 <print_builtin+0x2bc>
    1244:	add	x1, x1, #0x2ca
    1248:	bl	c60 <fprintf@plt>
    124c:	ldr	x8, [sp, #32]
    1250:	ldr	x8, [x8]
    1254:	str	x8, [sp, #32]
    1258:	b	11a8 <printargs+0x20>
    125c:	mov	w8, #0x1                   	// #1
    1260:	stur	w8, [x29, #-4]
    1264:	ldur	w0, [x29, #-4]
    1268:	ldp	x29, x30, [sp, #64]
    126c:	add	sp, sp, #0x50
    1270:	ret

Disassembly of section .fini:

0000000000001274 <_fini>:
    1274:	stp	x29, x30, [sp, #-16]!
    1278:	mov	x29, sp
    127c:	ldp	x29, x30, [sp], #16
    1280:	ret
